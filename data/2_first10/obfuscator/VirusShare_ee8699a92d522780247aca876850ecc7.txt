jo
lret
push
jl
jmp
and
pop
fstl
xor
sub
je
int
adc
mov
adc
mov
sarl
dec
and
stos
mov
cltd
movsb
jp
or
xchg
loopne
xor
sub
mov
sti
je
xlat
add
add
movsb
hlt
sbb
sbb
cmc
stos
imul
popf
pop
mov
lea
int3
arpl
sub
insb
or
cltd
lcall
fwait
cwtl
jp
in
stos
xchg
ss
xor
lea
cs
lds
hlt
xchg
fimuls
mov
jecxz
imul
nop
scas
outsb
lods
mov
test
or
in
int
xor
xor
filds
sub
fs
in
fdivp
inc
pop
cmp
add
fiadds
int
lahf
pushf
jg
jl
inc
jg
adc
popf
sbbb
pop
popa
pop
and
bound
arpl
std
cmc
adc
dec
dec
daa
xor
push
xor
adc
inc
out
inc
aaa
xchg
lods
xor
dec
imul
loop
and
mov
push
dec
mov
jbe
xchg
stos
xor
lock
sub
fcmovbe
cmpsb
add
ss
call
popa
arpl
lods
lock
push
push
jmp
sarb
push
push
dec
adc
push
push
popa
or
in
lock
into
movsl
pop
xor
push
in
mov
xor
pop
lock
mov
gs
loope
popf
dec
ljmp
sbb
repz
mov
imulb
call
shlb
aaa
or
imul
cmp
sub
mov
push
mov
add
frstor
adc
loop
idivl
cmp
xor
push
dec
inc
lods
mov
shll
mov
rorb
loop
cli
icebp
dec
pop
dec
popa
pop
sub
and
das
dec
xchg
andb
push
loopne
push
test
les
lods
scas
xchg
pusha
add
out
push
mov
ret
loop
add
mov
out
imulb
jmp
add
cli
cmp
imul
in
popa
and
mov
jno
dec
ds
lds
push
in
test
insl
loop
sbb
mov
mulps
std
sbb
dec
mov
in
cltd
cmpsb
lods
mov
popa
sub
or
call
stos
cmp
mov
pop
push
mov
pop
mov
add
dec
addr16
or
inc
inc
push
cltd
ret
aas
in
mov
mov
sahf
shrb
scas
lret
int
in
jo
sub
test
cmpsb
or
dec
gs
scas
or
ljmp
test
xchg
popf
stos
sbb
pop
clc
aaa
or
xor
lock
ljmp
jmp
sub
cmc
in
es
shrb
push
in
sbb
xlat
xchg
pop
push
enter
adc
inc
or
inc
lds
pusha
xchg
jge
xchg
loop
adc
or
imul
repnz
add
sbb
mov
pop
adc
clc
mull
addr16
mov
pop
jmp
in
mov
ret
movsl
data16
inc
popa
lock
lods
cmp
push
mov
addr16
outsb
or
data16
loop
jp
imul
push
pop
cmpsb
inc
lods
ljmp
imul
ljmp
xor
push
in
out
imul
mov
push
push
insb
in
lock
fldcw
pop
sbb
outsl
push
inc
inc
pop
movsl
in
cmp
sub
add
popf
ret
ja
pop
in
or
cmp
out
push
mov
or
xor
sbb
push
outsl
jecxz
lods
xchg
out
gs
pop
or
adcb
mov
das
mov
add
pusha
bound
push
jmp
mov
cld
cli
loopne
dec
imul
xor
lcall
lock
bound
jecxz
sbb
pop
adc
jl
xchg
sbb
cmp
fisttpll
push
mov
fs
in
shl
cmpsl
mov
es
mov
test
movsl
mov
out
sub
push
imul
push
jp
jp
sbb
pop
std
sbb
fistpll
push
inc
in
jmp
xlat
xor
xor
sub
mul
out
push
aas
popa
and
xchg
sub
or
mov
sub
scas
adcl
push
mov
mov
push
mov
inc
push
arpl
pop
lods
sub
lock
shl
pusha
push
popa
icebp
das
inc
movsl
or
xor
dec
pop
movsl
loopne
xor
lock
and
mov
das
in
ds
pop
push
xchg
movsl
loope
or
add
js
mov
push
push
mov
jge
movsl
or
adc
pop
lock
inc
fst
and
inc
and
scas
inc
leave
loopne
sub
xlat
fsubl
add
shlb
xor
add
mov
dec
mov
mov
pop
repnz
pop
mov
and
mov
testb
popa
outsl
pop
pop
adc
loope
jp
sarb
pop
xchg
cmc
popa
int
divl
aam
mov
repz
inc
cli
jmp
add
bound
out
pop
and
jecxz
lea
adc
insb
or
cmp
push
icebp
inc
stos
xor
xor
roll
mov
shll
push
pop
lock
fnstenv
aas
test
clc
pop
aam
bound
cmpsl
inc
push
xor
dec
mov
push
lock
scas
in
jmp
sahf
popa
add
mov
and
push
leave
xlat
cvtps2pd
dec
sbb
fs
xor
adc
dec
add
out
lods
jns
cmp
pop
adcb
push
arpl
push
test
fstps
test
arpl
ds
push
cmp
test
addr16
xchg
cs
push
sub
das
mov
dec
or
push
test
push
pop
or
dec
mov
sbb
mov
adc
clc
rcrl
fs
or
pop
inc
clc
bound
lcall
sub
adc
push
mov
jno
mov
fimuls
inc
fstpl
insb
je
mov
pop
insb
mov
fnstsw
push
push
gs
data16
jmp
clc
push
mov
cmp
mov
mov
jns
push
sub
cmp
mov
sbb
inc
push
push
inc
add
dec
shlb
pop
daa
addr16
cmc
adc
xor
inc
dec
mov
fists
inc
sub
jns
dec
mov
jbe
dec
mov
and
adc
addl
test
add
call
cs
aam
push
pop
xor
xor
stos
mov
xor
xchg
mov
out
inc
pushf
mov
in
sub
fnsave
xor
or
xor
call
fs
xor
mov
test
xchg
or
and
sti
in
test
ja
lods
inc
jnp
and
loop
xor
loopne
cmp
inc
jl
repz
imul
adc
cmp
push
movsb
mov
pop
and
add
push
or
push
shll
xlat
clc
sbb
dec
or
xor
adc
lods
ss
repz
sub
cmp
adc
mov
sub
movsb
xor
stos
das
dec
pusha
fcoms
or
mov
xchg
cli
mov
ja
mov
insl
sbb
sbb
sarb
jae
lock
xor
testl
rorl
cli
mov
adc
in
divb
shlb
mov
push
sbb
push
adc
pop
cs
out
xchg
ss
and
inc
dec
mov
add
sub
adc
cmp
xor
mov
cltd
push
insl
push
and
bound
ret
test
and
mov
inc
cmpsl
inc
call
push
shl
or
out
push
popa
pop
adc
icebp
mov
gs
dec
pop
xor
cmp
and
mov
dec
pop
push
mov
pusha
ja
in
sub
inc
rorl
iret
sarb
mov
push
and
ljmp
xchg
mov
arpl
leave
mov
sub
dec
nop
bound
test
sbb
xchg
push
add
sti
arpl
lds
shl
ret
jno
out
sub
pop
pop
mov
mov
inc
xchg
sub
push
xor
aam
sub
ljmp
data16
stc
mov
sub
mov
sub
stos
int
out
xor
jecxz
adc
out
test
pop
repz
popa
outsl
lods
push
push
leave
sbb
test
push
mov
ljmp
cmp
sub
ja
stos
fs
loope
dec
stos
shl
dec
dec
mov
cmpsb
inc
inc
notl
and
push
imul
in
inc
jo
or
or
insb
pop
push
push
in
stc
xor
sbb
pop
loope
mov
or
xor
mov
push
mov
pushl
inc
iret
fs
sub
in
push
cmp
test
inc
mov
popf
sbb
gs
aam
inc
mov
dec
hlt
jno
call
pop
xor
sub
loopne
in
sbb
adc
xchg
jle
test
mov
pop
insl
jp
xor
in
mov
push
and
into
fistl
cmp
clc
cs
pop
adc
shl
and
or
cmpsl
ret
xor
jae
push
pushf
out
test
cltd
and
std
cmp
and
push
andl
jns
ret
push
xchg
pop
gs
pusha
pushf
ljmp
xor
dec
mull
es
lock
pop
in
loopne
test
cmp
jns
mov
subl
inc
sbb
adc
and
inc
cmpsl
mov
addr16
fchs
fadds
mov
arpl
inc
push
es
addr16
lds
addr16
lret
and
pop
cmp
les
push
push
add
mov
shlb
mov
add
adc
outsb
sub
ficoms
push
dec
pop
push
rcl
and
mov
pusha
xor
mov
pop
pop
dec
data16
push
and
add
xor
xchg
adc
inc
fisubrl
sub
mov
and
add
stos
scas
add
sub
aas
cmp
cmp
scas
hlt
push
test
or
xchg
inc
pop
inc
rcrb
or
and
inc
movsl
mov
testl
test
mov
dec
cmpsb
add
adc
add
and
sub
insb
mov
stos
cmp
add
fs
pushf
xchg
push
arpl
movsl
in
stos
cmp
loop
add
sbb
sub
in
jb
out
jmp
out
or
popf
pop
xor
testl
mov
xchg
push
pop
or
out
dec
leave
loope
in
push
dec
mov
cwtl
dec
pop
insb
cmpsl
sub
movsb
aad
imul
inc
mov
push
in
and
pop
fwait
inc
inc
lods
mov
dec
cmp
xchg
cmpsb
sbb
sub
xor
mov
imulb
jmp
xchg
sbb
push
divb
fldcw
movsb
pusha
dec
mov
inc
lock
jp
adc
xor
fs
xchg
loopne
out
and
adc
rorl
outsb
mov
mov
neg
mov
inc
xchg
mov
lock
push
push
dec
mov
xor
xor
sbb
jecxz
test
movsl
jg
call
adc
jne
cmpsl
fcoml
xchg
popa
sahf
iret
mov
pop
sub
divl
in
lock
icebp
bound
ljmp
adc
mov
inc
fs
arpl
adc
sahf
es
loope
push
lock
and
push
scas
fsubrs
syscall
xchg
mov
xor
in
jmp
dec
es
std
lods
xor
cli
stos
out
data16
mov
leave
add
mov
jmp
arpl
fnstsw
fdivrs
movsb
ljmp
cmp
adc
mov
insb
mov
mov
pop
pop
sub
gs
or
inc
std
loope
sub
or
cld
fs
pop
jmp
jmp
xchg
rcrb
js
xor
cmp
cmp
cmpsb
pop
pop
fld
lods
stc
daa
xor
lret
sub
dec
cmp
add
pop
loopne
in
push
fnstcw
out
sahf
pop
in
or
cmp
pop
push
and
lret
loopne
jno
in
mov
dec
mov
sub
pop
sub
sub
clc
cmp
jecxz
mov
lds
in
or
inc
rcr
popf
bound
inc
mov
ljmp
xor
mov
cmpsb
or
aam
loop
enter
popf
xchg
cmp
call
inc
sbb
rolb
sbb
pusha
xlat
jne
popf
test
xchg
and
lcall
scas
pop
stos
in
lea
push
idivb
sub
pop
outsl
lret
int3
mov
mov
xor
lods
cmp
ljmp
in
std
pop
cmc
lret
adc
inc
idivl
pop
push
adc
lods
add
sbb
adc
pop
jmp
xor
pop
and
in
out
mov
xor
pop
sub
adc
je
sbb
mov
ja
mov
dec
mov
mov
inc
push
mov
imul
cmp
outsb
adc
dec
sahf
test
stos
mov
push
hlt
mov
push
int3
pop
cltd
xchg
out
and
add
and
jl
neg
sbb
scas
or
cld
sbb
in
in
sub
std
mov
test
push
push
mov
fnstsw
lods
in
xchg
jmp
sub
inc
cmc
loopne
in
aas
flds
add
dec
imul
test
jne
movsb
test
adc
mov
sti
xor
add
rclb
negl
fwait
mov
mov
in
mov
out
inc
push
or
cmp
dec
mov
lods
arpl
inc
mov
hlt
and
xchg
jecxz
and
call
inc
push
aam
xlat
pop
lock
ja
ljmp
inc
lds
imul
clc
ret
adc
mov
addr16
cmp
push
push
pop
xchg
push
xlat
pop
cli
push
xor
rolb
add
movsl
cmp
mov
xchg
in
fsubl
insl
movsl
call
scas
test
jnp
pop
roll
hlt
push
pop
xchg
das
inc
lods
lods
in
push
fildl
pop
imul
cmp
push
pop
lock
cld
jecxz
jnp
lret
inc
mov
cli
inc
in
out
aam
out
add
push
sbb
cmp
xor
pop
xchg
sbb
pop
jae
jecxz
pop
adc
xchg
addr16
inc
gs
cmpsl
in
add
mov
push
xor
lock
in
mov
mov
call
cltd
push
push
mov
cmp
sub
push
std
std
add
lea
sub
xor
hlt
das
loopne
popa
cmp
sbb
xor
pop
fistps
pop
sub
call
pop
rcl
les
mov
lock
xor
imul
cmp
lahf
les
imul
fcomps
pop
mov
or
xchg
sbb
dec
mov
adc
out
cmp
pop
xchg
push
imul
dec
cli
push
xchg
dec
pop
out
dec
jno
outsl
add
ja
cmp
ss
in
lock
imul
sub
xor
lret
ds
rcr
out
add
sarb
test
fnstenv
clc
push
in
push
ret
mov
or
out
pop
nop
cli
shll
mov
and
push
push
rorb
jecxz
mov
pop
sahf
sub
pop
icebp
push
fildl
dec
lock
lahf
iret
add
jmp
stc
xchg
pop
scas
lock
out
rcrb
repz
orb
lahf
lea
std
popa
inc
pop
cmp
in
add
dec
cmp
cmp
bound
ret
mov
pop
scas
outsl
xchg
std
in
jmp
in
dec
inc
jo
jne
push
push
pop
xor
mov
sbb
jge
mov
xor
fdiv
jnp
xchg
mov
xchg
fsubrp
xchg
push
lret
pop
cmp
es
cmpsb
sti
jne
int3
mov
inc
mov
fucomip
mov
jbe
adc
popa
pop
icebp
adc
jne
not
in
out
in
push
loop
aas
push
inc
popa
mov
nop
cmc
cli
inc
xor
je
jecxz
xchg
add
cmp
inc
imul
cmp
adc
push
testb
leave
inc
lock
pop
js
lahf
stos
push
pop
je
popa
mov
mov
push
mov
push
mov
dec
mov
or
jle
in
sub
repnz
push
push
in
xchg
adc
sbb
sub
inc
jmp
dec
movsl
cmpsb
adc
sbb
mov
add
fists
jbe
push
jae
inc
popf
addr16
lcall
aas
mov
ret
stc
sub
lock
lds
cmpsb
push
and
loop
adc
sub
outsl
pop
jns
mov
mov
inc
push
pop
inc
push
sub
insl
fldenv
pop
lcall
sbb
push
and
movsl
mov
mov
daa
dec
inc
inc
or
popa
cli
imul
mov
push
mov
mov
mov
addr16
aaa
adc
push
xchg
lds
jecxz
loope
cmp
jmp
push
pop
fisubl
lock
push
jle
ja
push
cmp
test
mov
mov
dec
cmp
jmp
mov
nop
inc
jp
enter
mov
xchg
mov
adc
sbb
lret
mov
sub
imull
ljmp
hlt
iret
push
ljmp
cmpsb
mov
repnz
mov
loope
lcall
xchg
inc
mov
ljmp
add
imul
stos
int3
cmp
bound
movsb
push
dec
hlt
inc
mov
outsb
or
les
in
pushf
lods
add
xchg
mov
lods
cli
mov
cmp
push
fadds
aaa
mov
xor
mov
mov
imul
nop
mov
outsl
cmp
dec
in
inc
lock
ss
data16
and
push
dec
push
jne
inc
push
bound
pop
mov
in
stos
and
xchg
adc
call
lcall
jns
sub
test
pop
scas
cltd
add
inc
mov
iret
mov
dec
jae
std
add
push
aad
data16
test
divl
cmp
xchg
jne
mov
mov
in
out
int3
rorl
inc
dec
xor
mov
in
stos
test
adc
pop
aad
sbb
ds
or
lock
cli
sbb
out
mov
enter
xchg
sbb
outsb
cmp
outsb
lds
or
push
mov
push
pop
out
out
movsl
ss
cmp
xchg
in
ljmp
xor
lock
or
pop
dec
dec
mov
cwtl
movsl
les
sub
push
rcrb
cs
ljmp
jnp
aas
ja
ret
lods
sub
in
inc
lods
test
xchg
je
stos
pusha
call
ss
nop
jno
ja
pop
inc
add
sub
mov
xchg
pop
pop
repz
in
mov
xor
sub
subl
mov
push
mov
test
pop
jmp
adc
sub
add
andl
push
js
aad
movsb
lock
sub
data16
pop
sbb
push
and
jp
and
insb
pop
mov
cwtl
push
and
pop
lock
int
push
inc
mov
iret
pop
out
sub
dec
stos
insb
ss
add
int3
jmp
fmull
push
fwait
mov
loopne
xchg
xor
push
scas
push
sbb
cmc
inc
xor
lock
fcompl
xlat
aam
rorb
mov
addr16
adc
sub
cmp
gs
push
cmp
lods
hlt
mov
cli
adcb
lock
add
xchg
out
mov
xor
loope
pop
mulw
lods
cmp
mov
rclb
imul
aad
clc
or
push
ret
scas
push
loopne
iret
jb
mov
jno
loope
dec
push
insl
mov
movb
inc
sbbb
and
rcl
mov
jae
and
mov
hlt
shrl
sbb
and
lock
lods
call
cmp
mov
les
test
rorl
pop
mov
adc
icebp
out
inc
sbb
test
inc
pop
aad
lret
mov
push
inc
int3
mov
fisubrs
pop
dec
in
fsts
cmp
xor
shll
imul
in
and
push
lcall
adcl
sub
cmp
inc
shrb
das
cmp
pusha
xchg
daa
pop
rolb
mov
adc
cwtl
pop
add
xchg
push
jge
sub
out
adc
push
fucom
or
mov
push
popa
shrl
ljmp
pop
sbb
mov
das
pop
leave
iret
push
adc
lds
cmpsb
addr16
aad
adc
push
jl
adc
dec
bound
outsb
leave
aad
insl
or
bound
loope
jo
scas
sub
sbb
int3
daa
xchg
lock
je
cmp
popa
or
ja
lgs
add
push
pop
test
lock
lcall
inc
sbb
add
in
mov
pop
inc
in
lock
rclb
jl
xchg
test
push
adcl
and
mov
cli
in
in
or
add
push
xchg
pop
add
sbb
dec
lock
pop
leave
sub
pop
xor
pop
das
xor
ret
lock
lods
cmpsl
adc
xor
data16
sub
adc
jae
out
xchg
xchg
in
ds
addr16
mov
negb
xchg
pusha
in
in
inc
fsubl
push
in
xchg
jecxz
xchg
stos
mov
outsb
pop
out
fldt
popa
shl
jmp
sub
pop
fadd
jle
and
sbb
lock
push
add
inc
lock
jge
push
dec
xor
push
xchg
or
mov
fmul
movsl
or
cli
cwtl
test
int
enter
mov
or
das
lcall
dec
test
iret
leave
jecxz
jp
rclb
arpl
jno
addr16
stc
mov
sbb
leave
ja
or
sub
mov
inc
ret
xor
xchg
push
jmp
mov
repnz
mov
mov
cmpsb
or
rorl
push
push
lods
jae
add
fstl
dec
pop
xor
dec
jmp
cmp
xor
ret
push
and
push
add
sahf
pop
mov
mov
xchg
popa
lds
jle
test
cmpsl
cmp
sbb
jae
push
arpl
addr16
push
cmp
lock
loopne
xchg
aaa
outsl
pop
loope
sbb
subb
jp
fadds
lods
add
or
xor
xor
push
push
push
movsl
push
scas
in
das
ret
les
push
movsb
dec
push
inc
jge
sahf
insb
aas
movsb
pop
pop
lods
out
push
sarl
push
pop
ffreep
in
leave
aas
jecxz
imul
pop
in
lock
add
cmp
outsb
push
mov
cwtl
xchg
addr16
out
sub
sub
sti
jb
shlb
inc
cmp
push
gs
xorl
cld
jnp
push
cmp
adc
ljmp
int3
push
stc
hlt
jo
insl
popa
ljmp
mov
test
push
sbb
or
lock
add
pusha
sub
sub
jl
cmpsl
xor
mov
aad
jmp
cltd
lret
lock
aaa
rorl
jmp
pop
push
repnz
dec
leave
test
sbb
fnstsw
ret
aas
clc
fidivrs
dec
sub
inc
data16
mov
fisttpl
mov
push
repz
sub
push
adc
movsb
notl
jne
and
cmp
pop
fwait
xor
movsl
xor
inc
gs
inc
pop
ret
sbb
sbb
ret
enter
jae
dec
loopne
sub
and
or
push
aad
addr16
dec
movsl
shlb
fcomp
push
jmp
js
or
fnstenv
dec
cmc
jle
movsb
fstl
pop
fpatan
clc
push
movups
push
data16
imul
test
sbb
shl
xor
loop
add
in
jp
dec
jg
stc
inc
push
dec
cmp
dec
xor
pop
out
pop
inc
js
xor
mov
push
in
pop
out
sub
pop
inc
mov
jl
and
mov
aam
add
mov
aad
xchg
dec
jl
insb
mov
leave
pop
jns
cli
cwtl
repz
xchg
shlb
push
pop
popf
lcall
gs
jmp
mov
and
or
fsubrs
lea
cmp
jns
sub
test
push
lods
sahf
cli
jmp
ds
cwtl
jmp
das
mov
loopne
and
scas
cmp
add
and
test
aaa
jle
jno
arpl
push
imul
in
push
push
or
lock
sbb
xor
int
addr16
comiss
sahf
or
xor
imul
push
aad
jnp
mov
scas
cmpsb
shrb
cmp
lods
in
jle
test
cmp
xor
xchg
add
inc
loopne
jae
mov
push
cmp
testb
dec
jmp
pusha
fists
lock
call
loope
addr16
mov
xchg
icebp
aad
aam
add
imulb
pushf
xlat
sub
xchg
outsl
call
dec
mov
pushf
sub
ljmp
pop
lods
insl
pop
mov
scas
mull
lock
sti
cmpsl
outsb
cmp
jb
dec
mov
cmp
scas
mov
aam
or
ss
shrb
loopne
xor
push
mulb
mov
dec
dec
nop
push
or
jmp
mov
ret
aad
cmc
inc
clc
frstor
insl
xor
push
jnp
shll
and
and
scas
xchg
mov
insb
inc
jnp
jo
add
cltd
xchg
jno
cs
lretw
pop
call
adc
or
lahf
fs
mov
mov
out
subl
addr16
lahf
nop
lea
pusha
stc
pop
pop
pop
mov
mov
cmpsl
add
mov
arpl
shrl
mov
jmp
and
sub
pusha
stos
pop
and
sbb
push
mov
xor
mov
notl
pop
frstor
sub
pop
or
dec
ljmp
adc
ljmp
ds
inc
out
jne
xchg
cmp
xchg
les
pop
xchg
or
test
mov
call
xor
and
pop
jae
pop
sbb
mov
cmpsl
xor
outsl
and
push
shrl
jmp
nop
jno
repnz
bound
dec
repz
pop
and
stos
out
lods
mov
scas
icebp
loope
push
enter
scas
imul
and
jp
or
mov
jecxz
in
inc
call
inc
out
inc
sub
mov
mov
jmp
add
or
jne
sbb
cmc
push
shll
mul
pop
xor
sbb
mov
rcrb
inc
pop
out
test
js
ret
cli
jb
fdivl
adc
enter
and
push
sbbb
jnp
sti
xor
clc
icebp
insl
or
sbb
xor
cmp
pop
cmp
xchg
adc
xor
out
loope
push
lret
xor
sub
shr
dec
push
clc
test
mov
sbb
addr16
pop
cli
mov
fiaddl
test
clc
xlat
cmp
lret
xlat
lods
lds
mov
cmp
or
fbld
lock
imul
inc
jge
dec
mov
xlat
call
sub
push
out
xchg
jge
push
cli
dec
cs
jge
sbb
xor
add
push
cmp
xor
mov
cmpsl
sub
cmpsl
add
and
dec
cli
pop
lock
mov
mov
xchg
aaa
sbb
ljmp
pushf
dec
cld
cmp
push
negb
ds
repnz
jmp
xor
adc
mov
mov
outsb
fwait
aad
movsb
push
lock
fistl
insb
jg
stc
sub
push
es
arpl
push
and
fsts
out
jmp
dec
sbb
and
and
mov
pop
cwtl
sub
imul
pusha
dec
push
cmp
arpl
call
sub
mov
fdivrs
dec
and
addr16
dec
inc
inc
inc
sub
and
fs
pop
mov
dec
cmp
in
das
es
pop
xchg
cmp
push
ja
es
call
and
call
addr16
loope
ss
dec
dec
push
ljmp
pop
sbb
or
adcl
fs
cld
pusha
sub
dec
ss
push
xchg
push
ret
dec
popf
xor
xor
imul
clc
punpcklbw
add
andb
dec
das
push
dec
pop
pop
xor
push
dec
aas
pusha
xor
ss
dec
pusha
ss
retw
dec
in
push
lea
das
sbb
xor
sbb
push
add
dec
push
xor
pop
lods
sarw
pop
pop
cmp
xchg
es
inc
dec
aam
push
dec
cmp
pop
and
sbb
imul
add
mov
cwtl
out
pop
sbb
cmp
addr16
xor
push
dec
and
push
add
popa
cmp
adc
pop
mov
shll
dec
dec
aaa
cmp
sub
and
inc
pop
iret
push
bound
imul
dec
hlt
xor
cmp
inc
adc
pop
pop
bound
test
cmp
sub
pop
sbb
aas
inc
xchg
push
dec
aad
inc
xor
bound
dec
push
aas
push
lds
pop
fnstenv
dec
aad
mov
dec
mov
leave
xchg
testb
push
js
jbe
mov
in
sub
xor
jmp
stos
stos
adc
cmpsb
shl
mov
pop
add
insl
push
sahf
and
sbb
xor
cwtl
hlt
or
in
mov
ss
dec
dec
out
out
dec
sub
cli
jmp
pop
or
lahf
xchg
and
ds
sbb
jg
imul
test
dec
inc
fdivrl
js
fbstp
xchg
xlat
jmp
xchg
out
mov
aad
popf
lods
vsubps
adc
fwait
mov
movsb
adcb
or
leave
sbb
sub
rcl
xchg
jmp
jmp
cli
data16
nop
loopne
mov
addr16
cmpsb
or
xchg
cmp
mov
add
push
push
sub
ficomps
cmpsl
adc
shlb
cmp
shrb
or
movaps
lds
inc
jmp
mov
fwait
cmp
xor
bound
test
js
call
in
jns
mov
and
and
or
mov
cmpsb
dec
enter
or
sbb
ljmp
sub
dec
hlt
inc
xchg
nop
mov
adc
dec
and
adc
pop
das
in
add
stos
lret
mov
inc
inc
xchg
movsl
xchg
imul
stc
enter
gs
ss
mov
xchg
inc
mov
mov
jo
andl
in
andl
dec
xchg
dec
inc
push
sub
movsl
test
sti
imul
les
cmpsb
std
dec
leave
mov
fs
movsl
inc
dec
push
sub
xlat
pop
and
jmp
popa
xor
andb
push
mov
mov
movsl
adc
bextr
repnz
imul
loope
sub
sbb
les
test
sub
mov
hlt
sbb
sti
cmpsl
sub
fcoml
iret
popf
mov
dec
test
cli
fiaddl
push
mov
push
gs
cmpsb
inc
sub
sbb
mov
scas
jb
and
imul
push
in
xchg
dec
sub
in
bnd
dec
inc
stos
pusha
sub
or
imul
sub
sub
js
jg
ljmp
imul
outsl
scas
mov
or
lods
jmp
dec
push
insb
push
sub
dec
pop
jo
jmp
and
test
scas
add
push
or
loope
cmp
inc
sub
stos
add
jle
shrb
idivl
insb
out
outsl
add
sbb
jmp
test
sbb
ljmp
jge
mov
jmp
cmpsl
cs
mov
enter
outsb
movsl
pop
mov
jmp
jbe
sub
lahf
lcall
mov
pop
insb
test
jle
test
cmp
lret
cwtl
jmp
dec
shrl
push
xlat
push
mov
xchg
sub
cmp
sub
jl
loopne
in
add
or
sbb
push
sub
and
pop
pop
or
or
dec
sbb
jmp
gs
jp
out
cli
lret
mov
sub
xchg
iret
dec
data16
lods
inc
sub
push
cmpsl
inc
push
xor
xor
pop
dec
ljmp
mov
ret
pop
xchg
aam
test
or
pop
cli
xor
mov
in
sbb
ror
sahf
imul
mov
test
mov
pop
inc
jmp
mov
add
in
dec
dec
mov
or
lock
mov
pop
push
popa
mov
adc
xchg
pop
mov
dec
push
jge
push
xchg
xchg
rolb
in
inc
adc
in
shl
mov
fbstp
inc
mov
das
arpl
aam
mov
fwait
inc
mov
push
sbb
icebp
orl
mov
stos
sbb
aad
aaa
fs
push
cmp
sub
inc
mov
cmp
repnz
xchg
cs
test
cmpsb
insl
sub
push
fsubrs
mov
iret
out
push
mov
xor
xor
lret
mov
pop
sub
je
xchg
scas
mov
add
sub
pop
inc
push
xor
test
pop
push
jge
jnp
mov
loope
cwtl
or
pushf
andl
xchg
rol
jnp
repz
ja
xor
inc
out
icebp
push
jnp
mov
call
mov
dec
inc
jmp
ret
fnstcw
cmp
or
mov
dec
dec
fs
or
hlt
pop
aam
cmp
jo
pop
stos
test
mov
sub
pusha
push
xor
pop
icebp
mov
xlat
mov
lock
xchg
js
or
lcall
bound
push
fwait
movsb
addb
or
pop
out
stos
mov
das
push
pushf
xchg
adc
xor
sub
adc
sub
imull
data16
pushl
gs
pop
pop
push
fldenv
mov
add
xor
xlat
mov
xor
lock
push
leave
xor
xchg
dec
xor
xchg
ljmp
inc
dec
int
jmp
jg
call
or
cmp
sbb
dec
mov
nop
loopne
call
mov
insb
mov
das
and
push
outsb
aad
jno
push
xor
jo
xlat
add
mov
arpl
ret
nop
xor
add
jnp
jno
in
push
pop
push
jp
sub
push
sub
aad
xchg
daa
loop
in
pop
lods
fisubl
sarl
bound
test
cmc
cmp
aas
outsl
fucomip
clc
pop
xor
add
loopne
xchg
and
pop
and
in
xchg
pop
fucom
arpl
pop
test
jne
xor
xchg
mov
data16
es
mov
ds
jge
lock
adc
xchg
insl
mov
xchg
xor
mov
mov
sub
push
xor
add
lods
mov
ss
pop
mov
in
dec
dec
sub
cwtl
inc
mov
xchg
mov
mov
sub
push
ret
push
xor
dec
subl
movsl
sahf
bound
adc
pop
adc
sub
sbb
call
xor
mov
cmp
mov
adc
loopew
cmpsl
cmp
fcoms
pop
pop
dec
sub
pop
mov
call
and
repz
lea
xor
sbb
adc
inc
mov
fwait
imul
inc
push
xor
push
sbb
xor
sub
sbb
shlb
jg
dec
popf
push
cmp
lock
int
push
xor
fimuls
repnz
lds
push
mov
stos
mov
ds
jmp
xor
add
sti
push
vmaxpd
lret
movsl
add
dec
imul
shrb
push
mov
test
pop
leave
dec
push
inc
adc
or
mov
xchg
adc
scas
push
jg
rcr
test
push
stos
gs
jp
int
fsubs
fwait
add
push
cmp
or
lds
adc
xchg
lods
cmp
xchg
cmp
sub
mov
mov
fisubs
cmpsb
or
pop
pop
xchg
adc
xchg
adc
fmulp
add
gs
jecxz
mov
call
push
mov
sbbl
into
jbe
push
je
sub
cltd
sub
mov
mov
cmp
or
sbb
icebp
out
sub
lods
sbb
lds
int3
in
jp
adcb
cmp
ss
mov
lds
push
imul
ljmp
insb
stc
leave
call
test
or
cwtl
out
stos
loop
gs
add
xchg
push
pusha
jge
pop
mov
xchg
or
lods
mov
test
mov
mov
in
lcall
test
mov
adc
iret
js
mov
ret
adc
inc
loope
lds
xchg
inc
push
pop
mov
icebp
lds
je
mov
mov
push
cltd
pop
inc
test
inc
inc
ds
repnz
jecxz
mov
cmp
cli
mov
sbb
mov
jle
rcl
add
out
test
data16
inc
fistl
adc
add
mov
lods
sub
xor
push
pop
addb
scas
data16
xlat
push
push
adc
cmp
and
add
sbb
cmp
pop
inc
adc
ljmp
or
test
loopne
xor
mov
cmp
cmp
xchg
cld
fldcw
and
dec
jmp
in
inc
jo
add
test
sub
fiadds
mov
push
mov
ja
clc
dec
test
lods
cmc
or
lds
lods
push
subb
js
inc
mov
cmpsb
xor
push
movsl
jno
add
imul
cmc
stos
jmp
ror
and
pop
dec
sub
add
push
leave
xor
sub
pop
bound
pusha
addr16
movsb
in
mov
add
push
jle
cmp
daa
mov
pop
leave
lods
cmpsl
sub
pushf
jle
movsl
cld
popf
cmp
rclb
sarb
mov
push
pop
jbe
cmpsb
imul
test
out
sub
and
lods
xor
xlat
ret
add
push
lock
stc
xor
mov
xor
adc
gs
or
lds
pop
test
or
shl
dec
leave
dec
mov
pop
push
or
rol
lret
cmpsb
add
jmp
cmp
push
xchg
jge
jmp
and
data16
dec
adc
inc
call
mov
or
js
cld
cmpsl
xchg
push
test
call
repnz
or
mov
ljmp
add
push
pop
push
shl
sbb
mov
loop
scas
in
jp
mov
jecxz
ja
lods
pop
pop
mov
fcmovnbe
sub
cmp
loope
fbld
leave
call
pushl
pop
jmp
push
pop
imul
xor
imul
inc
mov
sti
jle
mov
or
int
xchg
test
mov
pop
mov
or
xor
xchg
jmp
inc
shl
jnp
sbb
bound
pop
outsb
adc
lods
out
pushf
mov
loop
jecxz
inc
addr16
push
addr16
jg
cltd
pop
push
push
addl
jns
and
cmp
push
aad
dec
cmp
jle
lds
dec
or
cmp
imul
mov
test
leave
andl
inc
and
sbb
aad
repnz
dec
test
std
inc
xchg
xchg
pop
jae
push
lock
push
sub
out
popf
das
and
push
pop
adc
add
sub
cld
or
ja
xchg
mov
push
mov
sub
inc
adc
add
push
jle
pop
inc
cmpsb
leave
fisttpll
dec
push
push
and
ljmp
aas
flds
out
mov
sub
imul
push
and
addr16
push
aaa
sub
push
aaa
mov
sbb
mov
test
inc
xlat
xor
xor
dec
mov
data16
sbbl
das
pop
cld
push
aaa
mov
sub
je
roll
sti
sbb
jg
sbb
push
sub
int3
mov
bswap
aad
dec
hlt
mov
push
cmp
out
mov
cmpsl
popa
int
cmp
ja
mov
xchg
dec
mov
testl
test
out
adc
push
push
std
shll
pop
lock
out
dec
mov
fcoms
push
pop
cmpsl
movl
pop
or
mov
xchg
pop
sbbb
push
jns
xchg
popa
mov
sbb
jnp
inc
out
jae
int3
inc
push
sub
xor
xchg
jnp
pop
call
ljmp
out
mov
sub
in
mov
mov
retw
jmp
in
arpl
js
insb
cmpsl
rolb
insl
and
inc
jmp
lods
inc
jmp
push
inc
andl
or
mov
insb
fidivl
fst
stc
adc
cmp
flds
push
shrl
push
test
mov
pop
jno
ljmp
push
or
xchg
cmp
push
or
iret
xlat
cmp
and
push
push
js
inc
push
sbb
sbb
imulb
fldenv
repnz
test
bound
cmp
jecxz
mov
xchg
xchg
mov
ljmp
dec
sbb
in
test
pop
flds
push
cmp
dec
or
hlt
pop
shll
push
push
lock
adc
js
dec
out
inc
mov
fs
cmp
rclb
decl
adc
lds
push
inc
inc
adc
pop
jecxz
xor
arpl
xchg
dec
in
aam
mov
call
iret
test
push
jecxz
fs
pop
les
or
popa
enter
fldlg2
out
push
sub
aam
mov
out
les
push
mov
mov
loope
iret
ret
dec
pop
pop
out
inc
sub
jb
test
jecxz,pt
mov
adc
jo
ds
mov
popa
faddp
call
adc
lock
dec
ret
jae
xchg
sub
push
sti
imul
jnp
dec
sar
subb
adc
or
pushf
push
lock
cmp
push
push
adc
xor
subb
pop
push
std
in
xlat
pushf
pop
pop
loopne
outsl
xchg
add
movsl
dec
insb
shrl
xor
sub
popf
sbb
push
cmp
mov
jp
mov
addb
add
shrl
mov
and
addr16
les
fs
xchg
jecxz
adc
jp
push
mov
or
push
xchg
inc
push
sahf
lock
xchg
jmp
insl
jge
pop
out
inc
addr16
dec
xlat
push
inc
xor
popa
cld
popf
jp
js
fistpll
or
mov
cli
jne
pop
jae
movsl
pop
in
mov
push
mov
fistpl
xchg
sub
inc
dec
call
sbb
mov
iret
es
ret
xchg
scas
inc
push
subl
call
clc
sbb
and
ja
xchg
inc
les
push
jbe
dec
adc
xor
pop
sub
loop
xchg
adcb
adc
push
pushw
je
pop
push
sbb
mov
xor
lret
lock
fmuls
imul
inc
jo
adc
fs
and
xchg
aaa
sub
xchg
add
pushf
test
fdivrl
sub
insb
sbb
dec
and
out
loop
inc
iret
mov
addb
or
and
push
roll
push
sub
clc
inc
push
inc
pop
sub
xchg
push
ljmp
ficomps
and
mov
pop
sbb
cmp
out
sub
or
mov
pop
popf
ljmp
ficompl
fistps
data16
test
pop
pop
loop
jb
dec
js
cmp
data16
fldt
in
inc
scas
and
sbb
fwait
sub
and
jmp
ret
aas
mov
cs
dec
mov
jmp
xchg
jbe
data16
cmp
mov
addr16
xor
cmp
inc
sar
clc
sub
ror
sbb
jns
call
sub
mov
dec
in
test
pusha
jns
repz
aaa
add
pop
popf
pop
stos
mov
fistpl
pop
shrl
js
test
test
int
and
test
test
sub
adc
es
dec
add
pop
mov
inc
int
inc
sub
sbb
sub
cltd
and
and
jp
jb
push
cmpsb
or
cmp
jle
sub
xor
jmp
add
or
sub
mov
dec
dec
sub
mov
clc
sub
cli
stc
lret
pop
repz
or
and
push
xchg
add
push
adc
imul
aad
and
sub
pop
out
pop
je
sub
in
mov
dec
pop
mov
into
adc
xchg
testb
xchg
mov
sub
fldenv
inc
sti
sub
xchg
ljmp
test
xor
popf
sbb
cmpsl
mov
cmp
dec
sub
test
mov
sbb
push
sub
mov
mov
sub
mov
mov
lds
sbb
mov
in
xlat
xchg
lret
push
sub
adc
cli
sti
adc
sub
mov
push
ljmp
repz
aad
sub
pop
cmp
cmpsb
outsl
sbb
xor
sub
stc
mov
add
leave
push
dec
jb
and
sub
sti
aad
cmpsb
and
bound
loop
ljmp
sub
shrl
xchg
cs
divl
aas
sbb
je
pop
lcall
sub
addr16
inc
inc
out
jg
sub
lds
jb
pop
xlat
out
or
aas
ss
arpl
dec
jl
test
enter
dec
add
hlt
das
mov
push
mov
test
shrb
jle
out
mov
xchg
dec
sub
cmp
xchg
sub
push
insl
pop
out
xor
xor
and
inc
js
ljmp
lret
mov
jbe
mov
push
cmp
sub
xchg
ret
sub
adc
fidivs
sub
sub
shl
sub
push
dec
jbe
outsl
xchg
or
inc
pop
sub
mov
sbb
jge
mov
mov
or
jmp
adc
pop
ficomps
mov
jmp
push
add
xlat
into
add
or
or
stc
imull
das
fisubs
inc
movsl
ljmp
cmpsl
cmp
sub
jnp
mov
cltd
sub
sub
int3
enter
xchg
xor
xor
add
xor
or
cmp
in
cmp
les
and
out
sub
or
xlat
cmpsb
add
push
and
test
cmp
fcompl
push
out
rcrl
jmp
xchg
les
insl
xor
ficoml
lods
and
loopne
imul
sub
mov
mov
cmpsb
or
mov
pusha
xchg
fwait
push
push
sub
ljmp
push
add
mov
jmp
sub
mov
adc
test
mov
xor
add
iret
or
sub
xchg
lds
sbb
pop
test
pushf
xor
xor
leave
xchg
mov
add
pop
mov
mov
or
jae
push
hlt
fsubrl
aam
jecxz
adc
xchg
lea
lods
and
fwait
cwtl
iret
scas
mov
cmp
aad
ret
jb
pushf
cmp
dec
jp
sub
pop
xchg
push
and
push
push
mov
mov
push
mov
inc
or
sub
insb
into
adc
xor
ljmp
test
cs
mov
pop
sbb
test
sub
icebp
xor
stos
enter
push
sub
or
xchg
aad
fprem1
and
xor
jo
les
aas
add
sbb
mov
andb
pop
sub
jle
sarl
mov
sub
pop
repnz
cmp
out
push
pop
sbb
sub
lea
and
sub
xchg
into
ds
sub
sar
movsb
aad
sub
adc
ret
movsl
and
sub
lea
fisubrl
or
push
cmp
cmpsl
dec
mov
repz
xor
out
sub
std
out
sub
sub
inc
push
sub
sub
fsubrl
jp
loopne
test
out
mov
xchg
popf
test
sub
dec
outsl
insl
cmpsl
int3
mov
cmc
cmp
add
sbb
mov
adc
push
mov
in
mov
int3
insb
loopne
ljmp
in
imulb
roll
sub
movsl
outsb
rcl
lea
aas
cmp
aam
js
insl
sub
push
sub
lods
pop
xlat
jne
adc
xor
mov
loope
cwtl
push
inc
jb
movsb
xorl
lcall
mov
push
insb
test
bound
sub
mov
ljmp
and
out
rorb
pop
push
dec
or
or
sub
rol
mov
xchg
lret
iret
ret
sub
push
inc
and
cwtl
pop
pop
sub
dec
stos
loop
imull
mov
test
mov
cmp
fwait
and
mov
dec
into
sbb
aad
or
push
or
xor
xchg
inc
cmpsb
cmp
imull
xor
sub
fsubrs
test
mov
das
and
out
loopne
push
bound
sub
push
pop
jmp
dec
les
adc
shl
imul
xchg
popf
xor
jp
push
movsl
test
sub
or
sub
nop
es
jmp
in
les
stos
sub
mov
je
inc
subl
sub
or
cmp
inc
in
hlt
gs
sbb
shl
sbb
jne
sub
dec
jmp
dec
sub
lods
insl
mov
je
pop
or
rolb
outsb
pop
pop
xchg
mov
test
dec
sbb
mov
mov
test
pop
ret
add
out
jp
cmp
sub
jo
cmp
movsb
jle
cmc
outsb
and
add
adc
repz
imul
addr16
dec
rolb
cmc
add
push
out
sub
repnz
fwait
into
xor
sub
mov
jmp
or
xor
dec
testb
mov
sub
mov
aas
aaa
inc
and
xchg
flds
test
xchg
je
test
gs
and
clc
xchg
xor
cwtl
mov
cmc
mov
lret
mov
lods
test
xlat
jnp
sub
sti
mov
or
int
dec
sti
adc
and
stos
xor
cmp
inc
mov
dec
out
call
in
xor
ljmp
and
pop
cwtl
cmp
sub
pop
rorl
mov
cmpsb
cs
jecxz
cs
bound
mov
pop
sub
mov
inc
lret
das
push
ficompl
test
and
push
sahf
pop
mov
gs
pop
jp
pop
inc
xor
dec
or
lock
mov
fs
data16
or
xchg
jl
iret
xor
sub
out
pop
mov
std
fimuls
push
int3
call
mov
jge
mov
hlt
pop
pop
je
call
inc
arpl
into
mov
pusha
mov
call
xchg
inc
xor
xchg
add
std
imul
inc
pop
loope
xchg
ja
push
sub
rorl
fcoms
sbbb
sub
jmp
outsl
inc
push
sub
icebp
xor
xor
xor
cmp
test
pushf
into
gs
push
push
sub
sti
pop
push
and
xor
mov
xor
jle
pextrw
push
add
popf
inc
test
gs
sub
in
shlb
cmp
ret
in
leave
mov
ss
sub
rol
arpl
mov
test
and
and
lock
sahf
les
mov
mov
xchg
xchg
pop
sub
test
push
aam
cli
icebp
or
lods
or
loop
test
mov
cmc
ss
or
lods
xor
xor
xchg
add
rclb
cs
pop
mov
lock
and
push
fisubrl
adc
jo
mov
sub
idivb
shll
xchg
cmp
mov
in
imul
sub
rcr
mov
xor
sti
js
or
cmp
out
inc
xchg
test
pop
ja
xor
or
aad
mov
lretw
mov
inc
sub
fisttpll
cmp
out
xor
imul
dec
dec
in
mov
lods
test
aam
pop
xchg
push
test
ret
adc
dec
call
sub
test
repz
inc
add
ds
leave
pop
pop
add
into
xlat
jg
ret
pop
pop
xchg
add
loopne
sub
xchg
stos
jbe
cmpsb
add
lods
je
jle
in
insl
xor
sbb
in
adc
pop
imul
adc
or
fst
adc
dec
mov
cli
mov
fildl
out
sub
xchg
pop
or
jp
dec
inc
dec
cmc
jns
xor
imul
dec
xor
subb
push
lock
fidivs
mov
push
mov
xor
ljmp
popw
fidivrl
xor
jns
sti
call
popf
and
xor
ret
daa
push
std
push
pop
jae
xchg
push
xor
push
add
cmpl
push
or
xchg
or
cmpl
insb
andb
fists
scas
mov
push
mov
sub
jno
leave
add
cmp
xchg
adc
xor
aad
fs
and
lock
addr16
test
jp
mov
movsl
imul
adc
mov
push
leave
sub
mov
sub
xor
ret
ss
xchg
icebp
repz
scas
sti
addr16
ljmp
cmp
imulb
xchg
rclb
mov
dec
in
test
lds
sub
lret
loopne
les
lds
lcall
jp
insb
xchg
and
pop
xor
inc
ljmpw
lock
sub
cli
sub
ret
push
push
aam
call
inc
ja
les
shll
jg
cltd
sub
test
push
push
ficoml
lock
push
out
mov
xor
xlat
outsl
cmpsl
mov
push
movsl
lret
shlb
mov
mov
aad
push
stos
and
mov
cmp
rcrl
push
out
and
pop
mov
lahf
loop
adc
lods
into
inc
cli
adc
dec
mov
mov
das
xchg
or
add
pop
das
sub
pop
inc
push
sub
dec
mov
cmp
jle
loope
sub
out
xlat
mov
cmpsl
pusha
push
ja
addr16
fs
call
dec
dec
sahf
aaa
icebp
bound
xorb
fdivr
insb
pop
cmp
inc
fs
je
outsl
test
dec
push
dec
jmp
push
or
lahf
mov
mov
popl
sarb
push
addr16
xor
pop
imul
movsb
pop
jecxz
movl
outsb
inc
outsl
imul
xor
pop
mov
int
test
push
in
jp
xlat
inc
ds
in
repnz
jmp
pop
arpl
inc
mov
push
rorb
fwait
and
or
pop
cmpsb
lock
add
rolb
mov
cmp
xor
cmp
cmp
lea
in
fmul
sub
sbb
aam
sbb
frstpm(287
xchg
pop
ds
imul
lock
test
mov
and
movsl
sub
loope
imul
jnp
sub
mov
adc
scas
cmp
movsb
push
dec
sub
or
xlat
jmp
dec
test
push
xchg
in
shl
cmp
inc
adc
sub
mov
push
ja
bound
mov
mov
out
ljmp
cmc
pusha
shrb
mov
scas
cmp
lods
mov
inc
scas
movsb
lock
push
sbb
lahf
js
pop
adc
pop
add
enter
clc
into
inc
xchg
out
out
pusha
lock
loope
xlat
aas
dec
hlt
sub
xor
inc
and
cmp
mov
pop
mov
lds
data16
les
stos
cltd
lock
mov
or
je
xchg
mov
and
pop
cmp
dec
mov
push
inc
std
lods
push
or
ds
cmp
xor
add
dec
sbb
cmp
xchg
cmp
daa
jmp
add
shlb
adc
lcall
std
cmpsb
push
add
mov
bound
fiadds
js
adc
popl
aas
aad
insb
jl
mov
xor
cli
pop
subl
push
dec
gs
daa
sbb
aam
filds
test
out
aas
adc
and
pop
pushf
gs
pop
push
push
or
mov
pop
int
movsb
xchg
sub
adc
lret
push
xchg
mov
jae
fs
xchg
dec
rcll
jne
pop
sbbb
add
test
mov
lret
or
movsb
aam
adc
sbb
rcrb
xchg
mov
xor
in
push
mov
sub
fcompl
lds
call
ret
cmp
pop
inc
jne
popf
pop
hlt
out
out
call
inc
ds
cld
movsl
in
test
jbe
or
and
dec
cmp
ljmp
loop
inc
adc
push
rcrb
push
lret
cs
jmp
inc
mov
and
pop
lret
pop
stc
mov
cmpsb
mov
shll
sub
or
out
cmp
into
push
lods
jecxz
push
xor
inc
jmp
push
call
add
pop
lock
ret
mov
in
sub
push
push
mov
fidivl
and
mov
mov
pop
mov
jb
xchg
push
sbb
push
push
mov
inc
insb
cmc
cmp
enter
fdivrs
or
adc
sbb
xor
mov
paddusw
bound
daa
aam
lahf
les
shr
push
das
jecxz
pop
test
mov
cmp
xchg
sahf
fmuls
pop
leave
mov
jecxz
and
jns
jp
push
pop
or
addr16
into
popf
xchg
test
pop
pop
cli
repnz
mov
push
fmulp
add
and
adc
ja
jmp
gs
out
inc
cmp
jnp
mov
dec
sub
push
jae
jns
sub
mov
xchg
pop
and
in
mov
cmpsl
in
imul
leave
dec
cld
clc
loop,pn
sti
push
xchg
push
rolb
outsl
dec
push
lds
sub
add
out
lahf
insl
mov
add
push
popf
adc
das
out
lds
sbb
lock
pop
jnp
test
dec
ljmp
pop
cmp
clc
adc
push
xor
dec
and
cmp
pop
push
xchg
fcomp
cltd
fcom
aad
dec
xchg
fstps
scas
cmovs
addr16
fcompl
mov
or
push
xchg
insl
rorb
test
sbb
sub
push
adc
xor
cld
sub
dec
mov
push
imul
decb
sbbl
pop
inc
or
jp
lods
mov
movsl
mov
sbb
lods
cmc
lock
cmp
rcr
and
add
test
inc
stos
inc
sti
sbb
xor
push
jmp
shll
push
dec
fmull
mov
sti
pop
fadd
sub
cmp
shl
mov
addr16
dec
bound
aad
hlt
push
mov
out
mov
call
push
stc
insl
dec
ljmp
movsl
fildl
or
loopne
insb
jmp
xor
add
mov
std
negb
arpl
or
outsb
enter
dec
pop
test
or
push
and
nop
xor
sbb
jmp
mov
or
sub
sti
das
inc
or
xchg
xchg
or
pop
xchg
imul
or
cltd
and
cmp
mov
push
xchg
lods
mov
or
mov
shl
ret
sbb
sub
gs
xchg
pop
xchg
push
sbb
dec
in
movsl
xor
inc
rol
xor
mov
push
jns
cmp
pop
or
arpl
cmp
ret
lods
xchg
and
mov
push
jmp
mov
add
std
xchg
adc
fnstenv
mov
aas
xor
imul
or
xchg
jo
mov
inc
jle
fistpl
mov
repnz
jbe
in
pop
dec
jmp
call
push
push
lcall
sbb
mov
test
repnz
sub
cmp
inc
xchg
movsb
cmpsb
inc
js
cmp
leave
jmp
and
cmp
sub
ret
imul
in
jg
lcall
vcvtsd2si
lock
movsb
mov
cmpsb
sub
adc
sahf
in
idivb
cli
lock
inc
stos
mov
movsl
out
xchg
or
pop
add
and
ret
lock
iret
mov
adc
fldcw
out
ss
xchg
dec
in
cmp
xlat
incl
sub
in
push
mov
xor
mov
sub
dec
jmp
xchg
loope
ss
into
cmpsb
inc
cmp
inc
popf
aam
jne
xchg
shrb
enter
test
lock
jmp
test
std
and
dec
push
fadd
loope
inc
pop
rcl
sub
inc
inc
adc
ret
outsl
ljmp
mov
fdivrs
inc
fucomi
repnz
cli
push
shll
inc
test
sbb
pop
outsb
push
sub
out
or
push
push
pop
inc
lret
outsl
sbb
sti
test
or
das
push
and
pop
shl
clflush
jg
sub
push
cmc
mov
or
ds
jecxz
sub
std
gs
adc
xor
mov
ja
jg
and
pusha
jmp
jmp
sub
enter
cmpsb
jle
mov
push
and
mov
mov
insb
imul
std
mov
lret
push
aam
pop
outsl
push
aas
clc
les
call
inc
popf
and
and
push
ljmp
jmp
dec
shll
insl
fstps
push
sbb
lock
cmp
pop
dec
shll
lcall
cmp
cmp
pop
push
xchg
inc
call
std
inc
in
stos
outsl
bound
insl
mov
in
in
mov
jg
mov
pop
arpl
and
push
mov
vmovaps
ret
in
mov
inc
add
mov
xchg
and
je
jb
cmp
aas
data16
leave
or
push
inc
pop
test
mov
mov
jg
adc
push
fs
sarl
shll
or
imul
adc
int3
pop
cmp
addr16
pop
mov
mov
or
mov
data16
cmpsb
mov
in
mov
and
aas
pop
lock
test
inc
int3
push
adc
mov
dec
clc
inc
mov
cmpsl
dec
xor
xlat
aad
cmc
push
xchg
jae
daa
jno
xor
je
cmp
movsl
outsb
out
mov
pop
imul
xchg
adc
ljmp
shr
fs
lock
adc
int3
pop
hlt
imul
stc
fmulp
cli
out
push
jno,pt
pop
sarl
jno
sbb
pop
fdivrs
daa
lcall
jp
ja
add
dec
push
sbb
fmuls
pop
addr16
xchg
pop
push
gs
adc
mov
lods
jmp
sbb
mov
xchg
mov
push
inc
fisubrl
sub
test
negb
xchg
stos
jmp
rep
enter
sahf
sbb
mov
add
push
das
sub
push
dec
test
fsubr
test
push
fs
push
jmp
mov
mov
aad
push
addr16
xchg
test
pop
push
mov
jmp
jns
add
adc
sub
out
test
fsubrs
sti
dec
adc
sub
and
xchg
mov
aas
loope
test
bound
pop
inc
jp
dec
shrl
cwtl
adc
mov
int3
add
sbb
xchg
repz
jbe
pop
frstor
inc
loope
push
imul
stc
jo
add
data16
lock
mov
fstpt
dec
cwtl
xor
popf
shr
mov
jmp
or
or
sub
pop
sbb
push
daa
dec
arpl
add
pop
int3
push
mov
in
into
xlat
add
dec
test
mov
mov
cmpsl
xor
leave
popa
mov
inc
push
data16
pop
push
mov
mov
lock
lcallw
fdivr
xor
repz
and
xor
push
insb
cmpsb
in
or
fnstcw
es
leave
bound
inc
xlat
adc
add
mov
pusha
enter
call
cmpl
jmp
out
adc
dec
cli
sti
xchg
daa
into
lock
adc
pop
dec
gs
insl
xor
and
add
inc
insb
add
mov
push
pop
lock
cmp
xchg
pop
xchg
sub
and
pop
pop
pushf
loope
cmp
mov
pop
cmp
inc
dec
adc
xchg
test
add
ror
and
xchg
adc
lock
test
pop
outsb
movsl
js
stc
dec
inc
orl
fildl
or
repz
cld
pop
sub
out
aaa
mov
or
out
xchg
fcmovnbe
xchg
lahf
shrb
in
xor
int
pop
es
adc
ljmp
push
loop
xchg
adc
inc
imul
js
jns
lods
arpl
xchg
mov
in
mov
cld
xor
loopne
and
fldl
stos
rcr
fdivrs
xchg
lods
inc
insl
sub
test
inc
iret
mov
in
aad
mov
stc
dec
jne
mov
cltd
push
fmuls
push
sbb
movsb
fcoms
in
inc
test
pop
movsl
pop
push
test
and
mov
adc
sti
mov
mov
push
pusha
fmul
mov
mov
jbe
pop
xor
dec
fistps
xchg
push
sbb
lock
xor
cmp
les
fsubl
push
out
cmp
pop
pop
or
lret
cmp
sub
pop
addr16
fistpl
lcall
lret
aad
push
scas
scas
arpl
add
rep
cmc
notl
ficoml
push
and
push
adc
jp
stos
out
inc
pop
xchg
test
callw
jg
daa
xchg
inc
mov
xchg
pop
xchg
addb
inc
addr16
imul
add
int3
cmp
arpl
imul
fcmovbe
call
pop
and
mov
dec
mov
xor
in
cmpsb
sub
mov
sbbb
adc
push
sbb
and
bound
dec
cmpsl
aad
jge,pt
mov
xchg
pop
jno
gs
jecxz
jb
push
mov
mov
pop
xlat
jb
mov
movsb
adc
aaa
out
mov
lock
mov
decl
icebp
add
mov
xor
loopne
dec
ljmp
inc
mov
cmp
incb
lcall
out
dec
sbb
into
mov
addr16
pop
mov
dec
aad
ds
fs
xchg
pop
ret
mov
movsb
dec
das
sub
aam
daa
inc
mov
ljmp
sbb
roll
pop
xchg
dec
lds
loopne
and
lret
les
inc
test
cmp
sbb
in
out
xchg
leave
pusha
lock
sarl
gs
sub
mov
mov
rcll
idiv
mov
sub
cmp
popf
test
shrl
cli
adc
fs
pop
rcr
roll
loope
je
mov
and
cmp
jle
in
push
pusha
cmpsb
dec
insb
lcall
inc
pop
push
mov
scas
xchg
push
add
pop
cltd
clc
xor
ret
cmp
in
adc
subl
ds
test
pop
je
add
add
jo
push
jo
cmpsl
and
inc
mov
sub
jge
push
aaa
inc
push
call
lds
lods
pop
ss
xor
xor
stos
push
test
sub
cltd
mov
js
les
call
mov
mov
test
shrl
push
rcrl
cmp
mov
fs
es
push
loopne
push
iret
and
pop
in
lds
push
ljmp
pop
jne
ss
sbb
xor
jge
addr16
mov
mov
jecxz
jne
xchg
lahf
loope
loopne
cmp
pushf
cli
push
xchg
and
pop
insb
push
push
insl
leave
test
sub
cmp
outsl
out
or
jle
into
rol
bound
test
push
je
icebp
xchg
and
push
inc
les
scas
aad
pop
mov
inc
add
or
jne
sti
add
sub
in
jae
mov
adcb
enter
mov
inc
imull
outsb
push
sub
jo
xchg
test
inc
int3
mov
jmp
lods
xchg
mov
xchg
pop
xor
lock
jb
mov
mov
cld
push
test
mov
lods
ss
push
cmp
sub
lds
xchg
sub
xchg
cld
bnd
jne
mov
cmpsl
mov
sub
call
lock
add
fiaddl
pop
fs
push
cmp
imul
rcr
js
inc
in
imul
int3
cld
js
call
jns
xchg
inc
and
aad
jb
push
int
cmpsl
sti
sbb
xor
fcoml
xchg
lods
or
pop
push
sbb
push
push
cmp
outsb
xor
ret
push
sub
xchg
insb
sub
inc
gs
adc
sahf
adc
cmp
or
lods
xchg
sti
sbb
rorl
jnp
bound
xor
push
pop
lea
mov
loope
mov
shll
xor
pop
or
cmc
pop
xchg
adc
out
push
xor
cmpsl
ss
aas
into
das
xchg
das
pop
loopne
test
push
das
jge
shlb
sub
into
pop
cli
cltd
jns
inc
cmp
push
pop
sti
xor
jne
xor
lock
cmpb
push
aas
sub
dec
rcrb
jle
and
movsl
pop
cmp
in
sbb
mov
data16
fldcw
sub
push
or
addb
xchg
jmp
inc
adc
aam
dec
mov
mov
loope
cmp
push
mov
inc
pop
jnp
addr16
cmp
in
cmpsl
or
stc
loop
inc
hlt
inc
loopne
in
mov
cmp
outsl
gs
arpl
fisubl
inc
in
push
pusha
mov
scas
inc
mov
fldenv
or
testl
shlb
les
pop
lods
cmp
in
cli
cmc
push
xor
fdivrs
mulb
test
xchg
stos
ss
cmp
dec
pop
or
outsl
inc
fistpl
cmp
test
scas
ljmp
pop
mov
aam
inc
dec
sarl
dec
sub
xchg
call
push
sub
fs
ja
push
nop
mov
lds
jmp
cmp
cmpsl
cmpsb
inc
stc
adc
faddp
inc
lods
out
dec
cmpl
filds
adc
outsl
das
cli
sahf
push
add
or
mov
inc
out
pop
roll
cli
fmul
sub
lock
push
repz
in
push
dec
pop
adc
jecxz
es
inc
adcl
lods
mov
mov
pushf
mov
push
cmp
or
inc
xor
daa
sbb
movsl
andb
adc
lds
jp
jnp
sbb
sub
add
test
cmc
in
mov
and
ljmp
leave
into
add
daa
sbb
adc
daa
mov
and
sbb
mov
js
mov
mov
cmp
pop
inc
mov
imul
mov
lock
add
pop
mov
mov
and
adc
jbe
inc
in
adc
and
fbld
test
sbb
fs
sahf
dec
test
in
bound
cmpsb
mov
adc
cmpsl
lods
pop
xchg
mov
pop
jle
loope
movsb
lret
jp
xor
shll
popa
add
cmp
push
inc
mov
inc
sub
adc
pop
pusha
test
rolb
rcrb
lahf
mov
cmp
xor
lcall
or
imul
dec
or
mov
push
incb
rcll
fsubs
xchg
fs
int
xchg
scas
jp
test
in
lret
loop
leave
inc
aam
popa
add
ljmp
stc
adc
movsb
dec
pop
mov
les
fucomi
jle
ds
imul
push
jp
mov
cmpsb
adc
lds
pop
dec
xchg
pop
push
sub
mov
mov
mov
push
xor
jns
lea
pop
in
xor
mov
cmc
xor
loop
stc
or
push
negl
adc
mov
out
push
adc
push
lret
jl
ficoml
add
cmp
pop
fmull
das
push
pop
xor
mov
inc
adc
push
decl
sbbl
ss
or
aaa
and
pop
or
lret
adc
xchg
sbb
fists
sbb
and
into
inc
addr16
xor
xlat
bound
mov
add
insb
push
icebp
out
pop
inc
cmp
sub
idivb
bound
jb
ljmp
sarl
arpl
mov
lock
mov
pop
addr16
xor
addb
add
cmp
xor
mov
lods
lahf
pop
adc
dec
dec
pop
leave
sbb
loopne
lcall
pop
xchg
aas
test
lods
leave
scas
inc
push
mov
mov
pop
dec
shll
push
into
push
mul
mov
fcmovb
cmp
xor
stc
inc
inc
jb
rcl
or
js
and
rclb
push
rol
add
add
adc
pop
jge
std
mov
push
lock
push
cmp
push
cmp
cmp
popa
mov
mov
insl
push
and
cmp
jge
dec
and
jns
scas
leave
xor
mov
and
inc
xchg
fstps
leave
call
dec
dec
or
data16
push
jo
test
pop
rolb
out
lcall
inc
cmpb
and
pop
aas
pop
xlat
rclb
inc
xor
lods
cmp
push
dec
cwtl
mov
stc
xchg
sub
sbb
ret
push
xchg
fists
hlt
sbb
popa
pop
pop
icebp
into
mov
pop
cmpsb
ja
inc
xor
cwtl
shl
push
inc
sbb
mov
push
dec
cmp
and
jns
fldpi
inc
mov
jl
mov
fisttpll
inc
je
add
adc
mov
std
stos
add
in
jnp
daa
popf
lcall
cmp
aas
xor
pop
test
icebp
sub
sahf
xor
sbb
cmp
jnp
ljmp
mov
in
xor
es
adc
or
add
int
mov
xchg
jl
fldenv
imul
inc
aam
mov
dec
add
addr16
xor
test
jo
xor
push
dec
ret
sub
pop
push
adc
jb
mov
inc
dec
enter
imul
xchg
adc
sbb
and
pop
push
test
jmp
ror
cs
push
stos
and
test
or
movsl
rorb
rcrl
bound
enter
daa
loop
mov
mov
or
xchg
or
das
xchg
bound
push
add
ja
mov
push
mov
sahf
mov
nop
jbe
sub
mov
notl
cmp
push
sub
push
mov
mov
push
test
stos
dec
in
ror
ficompl
sub
out
cwtl
sbb
xor
push
inc
mov
push
lock
ss
ja
test
dec
stos
mov
dec
push
cmpl
testb
dec
mov
mov
push
insb
dec
rcl
gs
mov
dec
dec
idivb
insb
mov
xor
mov
loope
mov
ficomps
arpl
cli
jmp
pop
and
sub
data16
int
aaa
loopne
mov
mov
push
inc
imul
xchg
xchg
sbb
cmp
cmpsb
cmc
push
dec
mov
scas
pop
rcrb
enter
jnp
xor
aas
daa
shl
imul
sahf
inc
mov
loopne
cmc
push
test
inc
xor
dec
xor
and
or
arpl
loop
and
push
leave
push
xor
sahf
or
jp
and
mov
mov
push
imul
popf
xchg
data16
movsl
negb
lcall
in
sub
repnz
test
dec
filds
and
clc
add
pop
cld
and
jmp
xor
mov
cmp
push
xlat
leave
push
or
xor
dec
fwait
inc
out
movsb
ds
imul
rcr
jo
push
fisubs
sub
jge
sub
jl
ja
cmp
push
push
add
mov
cli
mov
xor
test
xchg
cwtl
cmpsb
movsl
mov
inc
cmp
xchg
loopne
sub
and
dec
pop
mov
pop
and
or
pop
in
push
lcall
pop
cmp
data16
roll
and
ljmp
or
inc
fwait
pusha
ljmp
inc
mov
int3
dec
adc
fs
pop
mov
or
dec
fs
rcll
jns
inc
mov
adc
jb
enter
xor
sahf
shlb
mov
lahf
xor
or
cmp
pop
dec
inc
sub
push
lods
idiv
sbb
lret
arpl
xor
xchg
sub
xchg
testl
aam
cmpsl
adc
test
dec
pop
andb
pop
test
aad
sub
jnp
ret
push
pop
outsl
fisubrs
sub
inc
loope
cs
cmpsl
pop
adc
shll
int3
mov
push
cmp
pop
sub
bound
add
fcmovb
aad
mov
and
mov
push
scas
sarl
addr16
cld
lods
lcall
xor
data16
push
aas
dec
add
dec
or
sahf
mov
xor
inc
popa
test
sbb
push
lcall
adc
inc
cmpsl
sub
mov
les
or
ss
add
pusha
pop
cmpsb
lds
cmp
ret
lock
push
shlb
lods
ss
outsb
push
push
mov
or
dec
xor
mov
incb
rcll
and
or
fwait
xor
aam
pop
es
sub
call
out
mov
je
dec
fisubrs
ds
cmp
adc
mov
xchg
bound
sub
mov
cmpsb
ret
imul
loop
int3
jmp
stos
push
xchg
adc
aam
or
addr16
sbb
dec
push
jp
xor
data16
or
dec
sahf
sahf
push
mov
mov
inc
arpl
xchg
imul
pop
aas
aad
mov
ljmp
or
in
xor
jp
add
push
xchg
push
lret
dec
das
mov
mov
mov
ja
popa
stos
imul
les
add
xchg
or
int
jmp
or
lret
daa
sub
mov
ficoml
in
xchg
into
xor
lret
mov
mov
inc
sahf
inc
scas
push
add
mov
sti
mov
data16
imul
call
sti
sub
leave
sub
mov
mov
adc
hlt
inc
jmp
loope
nop
in
add
pop
fnstenv
jbe
push
sti
ds
xor
push
xor
ja
lahf
jne
or
mov
push
dec
jge
imull
xchg
push
call
cmovae
movsb
mov
ja
xlat
and
fwait
syscall
mov
fs
pop
shll
xchg
or
xchg
negb
inc
pop
mov
cmp
xchg
lahf
and
imul
sar
rcll
fdivr
loopne
mov
popa
cwtl
clc
in
and
push
add
lahf
xchg
clc
sub
sub
adc
xchg
stos
popa
mov
ja
sti
sbb
sub
sub
movsb
lock
rcrl
and
pop
push
mov
je
pop
fcompl
push
xchg
cmp
or
jae
push
cmc
es
pop
adc
push
or
sahf
jbe
pop
push
sub
pop
ss
dec
loop
mov
in
out
andb
xchg
add
sahf
xor
lock
push
mov
aas
xchg
out
push
call
push
aam
xor
push
or
add
or
add
repnz
roll
pushf
das
stc
cmp
push
adc
loop
xchg
ds
popa
test
mov
push
icebp
pop
icebp
scas
popf
outsb
or
pop
sarl
shrl
lahf
jns
icebp
sti
cmp
les
fnstcw
scas
push
imul
add
add
int3
add
xlat
orb
je
in
mov
cmpsl
cmp
sti
mov
ficomps
push
and
dec
inc
sahf
imul
in
xor
dec
push
adc
arpl
inc
adcb
and
sub
rorl
rol
xchg
imul
shll
cs
scas
pop
xorl
fadds
cld
pop
push
xor
sub
adc
sbb
or
push
jg
jnp
jno
and
push
add
insb
je
in
sub
fbld
push
mov
in
pop
mov
jae
jo
sub
jb
push
adc
loopne
mov
stc
dec
mov
xlat
addr16
fimuls
andb
xchg
and
pop
out
mov
mov
sub
xor
inc
sti
inc
push
mov
lock
leave
dec
inc
cmpsl
jae
jne
mov
xchg
adc
jp
pop
dec
aam
mov
sbb
dec
rcll
movsb
lcall
xchg
movsl
sub
call
hlt
add
mov
push
jg
aam
hlt
jp
inc
inc
ss
push
cmp
sbb
lock
push
call
push
pop
out
xor
aad
fcoml
pusha
ja
pop
dec
ret
ja
xor
rclb
dec
inc
inc
xchg
ret
dec
test
xchg
ficompl
xchg
lock
mov
jg
fildll
and
jecxz
pop
out
out
nop
xor
cli
pop
sub
inc
xchg
test
xchg
pusha
inc
dec
mov
add
mov
cli
mov
in
add
jns
sti
and
mov
or
pop
jno
xchg
xchg
mov
out
lock
jle
test
inc
imul
mov
mov
push
or
lods
inc
push
arpl
jp
adc
mov
shll
sub
cwtl
add
or
fwait
and
jns
dec
cmpsl
cli
inc
pop
leave
xor
in
and
mov
cmp
cld
addr16
adc
bound
arpl
mov
and
push
cli
xor
enter
cmpsl
dec
cld
push
mov
mov
sahf
mov
mov
test
rorl
cli
rcl
pop
sub
fldcw
sahf
aas
ljmp
sub
lock
cmp
insl
ljmp
leave
stos
lea
xchg
jecxz
mov
aam
or
xor
mov
popf
sbb
sub
rolb
pop
inc
cmp
addr16
add
leave
shrl
mov
fldcw
rcll
int
add
imul
das
and
popf
push
or
xchg
mov
cmp
xor
jge
pop
pop
add
std
aas
ret
iret
cmp
or
pop
and
push
imul
push
lods
fiadds
or
pop
pop
pop
aad
mov
inc
jmp
mov
lods
les
or
xor
sbb
movsb
push
in
xchg
pushf
cmp
adc
xchg
cld
bound
inc
dec
push
add
stos
pop
push
push
int
inc
push
stos
adc
popa
xor
in
lods
bound
inc
std
es
push
iret
bound
mov
les
enter
xlat
sub
inc
push
test
pop
ds
xor
std
inc
cmp
lock
or
bound
js
stc
inc
mov
cmp
imul
movsl
pop
fwait
inc
inc
cmp
cs
cli
shrl
inc
jle
icebp
mov
outsb
stos
xor
jp
cwtl
add
in
and
cmp
pop
rclb
in
scas
adc
push
clc
pop
es
lods
je
imul
mov
fidivrs
ja
sub
mov
aam
outsl
sub
in
cmp
insl
and
xchg
jne
add
jmp
mov
imul
cmp
pop
mov
pop
xchg
push
mov
ljmp
test
mov
leave
cvtdq2ps
xor
cs
ss
pop
jmp
inc
bound
cmp
cmp
or
popf
std
push
jl
pop
cmpl
xor
mov
cs
mov
lock
xlat
inc
aas
mov
fbstp
sub
les
push
in
dec
push
xor
adc
lahf
cmpsl
ffreep
push
cmc
ja
fcomps
fimuls
enter
cld
shl
cltd
adc
xchg
and
adc
addr16
pop
push
dec
call
dec
or
loop
jnp
in
cmpsl
cmp
int
in
rorl
out
faddp
sbb
xchg
rcrl
out
lock
and
pop
fs
adc
xchg
insl
inc
mov
sbb
arpl
out
ljmp
sahf
pop
mov
push
or
daa
cs
fmuls
pop
or
pop
out
jnp
push
pop
insb
ds
inc
push
lock
sbb
bound
in
xchg
insl
daa
sub
jae
out
lock
je
jle
ret
xchg
mov
push
or
mov
push
stos
lea
add
loope
or
in
int3
data16
int3
and
cmpsb
or
fistl
call
icebp
add
pop
lea
xchg
add
and
xor
subb
sbb
mov
test
xchg
pop
adc
xchg
es
or
cmc
xor
mov
mov
xchg
in
cltd
loope
sub
sti
hlt
iret
and
jb
cmp
mov
dec
mov
inc
sub
push
daa
pop
scas
mov
pop
lret
push
cld
mov
popa
and
jns
inc
mov
or
mov
push
dec
mov
and
lock
mov
cmp
inc
push
aam
xlat
jecxz
push
sub
mov
push
push
jno
sub
jmp
mov
rorl
add
cmp
sbb
aad
inc
cmp
push
test
dec
std
gs
jle,pt
mov
dec
sahf
inc
jecxz
lahf
push
xor
fcmovnb
pusha
pop
push
test
xchg
and
xor
ret
pop
mov
pop
pop
pop
cmpsb
mov
pop
lds
mov
cli
dec
in
fidivrs
imul
push
mov
adc
lret
hlt
or
inc
inc
push
xor
push
push
pop
inc
sbb
fldt
pop
push
pop
xchg
and
frstor
dec
mov
add
adc
movsb
lock
rol
and
fldl
jge
add
shl
mov
inc
pushw
dec
push
jg
inc
sti
arpl
mov
fs
into
aad
jmp
mov
xor
popa
xchg
push
mov
ds
popl
es
and
or
ljmp
xor
clc
movsb
mov
lock
dec
mov
push
dec
xor
jnp
cmp
mov
adc
jno,pt
push
test
sub
mov
fnstsw
jecxz
jnp
lahf
push
xchg
dec
cmp
movl
xor
jecxz
and
sti
add
jo
cmp
inc
mov
rcrb
jmp
les
add
lock
add
jmp
ret
ljmp
js
test
mov
nop
lods
dec
mov
adc
mov
loop
xchg
jl
in
and
lahf
int
test
push
scas
mov
or
push
sar
push
mov
jge
xor
adc
pop
imul
sbb
or
sbb
add
inc
jl
sub
icebp
scas
mov
pmulhuw
fnstcw
push
imul
dec
inc
inc
jne
pop
subb
loope
or
pop
dec
jl
mov
stos
sub
lret
pushf
js
dec
lods
dec
fdiv
and
lret
in
les
mov
xor
push
outsl
xchg
in
stos
pop
rcl
ljmp
ret
mov
invd
mov
sub
sbb
scas
push
pop
push
mov
iret
sbb
shrl
push
ljmp
push
or
and
ret
mov
push
push
xor
xor
xchg
movsb
lods
out
xchg
jmp
jmp
cmp
mov
loopne
push
add
or
push
push
ror
call
jg
repnz
sub
pop
pop
xchg
sub
cli
lock
push
and
jae
ss
hlt
jge
xor
adc
xchg
dec
pop
xchg
xchg
inc
fidivrl
jno
inc
test
jp
mov
mov
cmp
pusha
ret
push
mov
xchg
ja
xor
out
pop
and
addb
inc
aaa
in
push
push
xchg
cli
push
dec
push
addb
mov
cmc
sbb
lret
rcll
cmpsl
lock
imul
fsub
sub
ljmp
inc
inc
aaa
mov
lock
mov
sub
lea
scas
movsl
push
mov
xchg
ret
jmp
sub
dec
jmp
and
dec
push
fldenv
or
sub
in
lods
or
mov
mov
imul
out
inc
mov
mov
sahf
fisttpl
inc
idivb
pop
dec
int3
data16
push
add
sub
clc
cmp
xchg
and
in
das
push
test
addr16
imul
sub
je
push
pushf
sub
aam
mov
jecxz
sub
jo
out
sub
pop
and
jae
dec
and
mov
aaa
out
push
dec
xor
pop
sub
jl
cmp
mov
sbb
and
sub
add
sub
push
cltd
test
leave
mov
jle
mov
add
ljmp
xor
ss
cli
jg
xor
in
sub
outsl
popa
sub
jbe
push
cmp
and
dec
scas
in
push
fisttpll
adc
dec
mov
loop
jns
shl
subb
subl
inc
fdivrl
in
inc
cmp
xlat
jle
inc
sub
adc
sub
lret
sbb
push
arpl
mov
pop
mov
arpl
incb
cmp
cmc
lods
dec
out
sub
sub
sbb
jl
popa
xor
test
pop
jnp
aas
or
movsb
sarb
mov
mov
pop
lcall
je
mov
negb
sbb
loope
jge
sub
repnz
in
mov
push
test
js
lds
mov
mov
sub
cmp
sub
stos
and
pop
pushf
ljmp
rcl
insb
fs
fisubrs
mov
dec
add
xchg
out
inc
dec
sub
cwtl
sub
cmpsl
sarl
cld
sub
ljmp
fldt
movsb
inc
jae
cwtl
xlat
and
push
lahf
fcomps
sub
js
test
bound
in
fwait
xor
test
and
mov
pop
fstpl
mov
ds
movsb
sub
jl
push
cli
lahf
cld
inc
pop
sub
xor
xor
roll
hlt
mov
test
and
lahf
sti
sub
xchg
sub
ret
insl
sbb
sub
mov
shl
cld
cmpsl
sub
js
inc
lret
jp
pop
sbb
arpl
jbe
hlt
dec
shrl
push
pop
or
dec
cld
sub
orb
and
xor
daa
mov
aam
lock
jmp
adc
pop
push
cmp
int3
push
outsl
fldl2t
rcrl
out
adc
xor
sub
sub
pushf
xchg
xlat
sub
dec
cli
push
lcall
fldl
xorl
call
jb
push
aam
in
pop
movsb
xor
das
rorl
stos
and
sub
fcmove
or
enter
mov
or
dec
repnz
stos
movsl
cmp
icebp
or
mov
cmc
fnstcw
inc
pusha
mov
leave
arpl
fcoms
jg
xchg
mov
loope
test
or
pushl
inc
mov
je
lret
sub
scas
sub
cmpl
adc
dec
fiadds
insb
xor
push
ljmp
jl
popf
pop
pop
pop
sbb
sbb
xor
xor
int
xlat
out
mov
pop
das
mov
movsb
out
xchg
out
xor
push
mov
jg,pt
cli
add
add
mov
push
test
sbb
fs
xchg
mov
mov
stos
ja
call
jmp
in
dec
sahf
leave
das
sbb
outsl
fists
inc
imul
dec
or
lods
mov
out
jge
test
mov
push
xor
jg
aam
or
movsl
xchg
add
cmp
mov
popf
pop
shl
mov
fiaddl
sub
in
fs
ds
rcrl
sbb
fwait
std
daa
mov
ja
pop
mov
push
lock
jle
mov
std
xor
aad
fcomps
ret
nop
adc
pop
ljmp
xchg
sub
iret
sbb
mov
sbb
cltd
nop
sbb
and
inc
pop
shll
mov
into
fnclex
test
xor
lret
mov
xchg
and
imul
imul
xchg
pop
ror
sub
push
std
inc
lock
sarl
xor
lret
sub
jecxz
adc
jo
add
or
sahf
mov
jo
xchg
cmp
mov
dec
imul
jle
sbb
outsl
jle
cli
loopne
sub
sbb
inc
pop
or
mov
add
xor
or
cmc
aas
add
and
ror
jecxz
sahf
lea
add
mov
insl
divb
xchg
mov
inc
cmp
mov
stos
fstl
bound
ss
mov
xor
idivb
xor
mov
mov
lahf
jno
sbb
add
inc
push
test
mov
imul
fisttpl
push
imul
inc
inc
popf
xchg
adc
nop
hlt
inc
gs
add
test
test
addl
jp
mov
aad
xor
arpl
std
adc
pop
pop
push
cld
popa
pop
sbb
sub
addl
movsl
aad
test
xchg
mov
cmpsb
popa
or
dec
out
jp
nop
pop
out
scas
fwait
lds
sbb
aam
pop
dec
das
xorb
das
sub
addr16
ds
inc
or
aas
nop
test
cli
icebp
xor
and
dec
cmpsb
add
mov
xor
sbb
sub
push
xchg
loop
rcrb
mov
cmp
sbb
jp
xchg
mov
gs
std
ljmp
push
daa
lock
fs
mov
test
aas
push
mov
clc
mov
mov
cld
jo
add
push
in
test
push
testl
fiaddl
clc
cld
in
push
aaa
xor
sti
aas
dec
dec
mov
fwait
push
xorl
add
and
insl
mov
imul
fwait
mov
fildll
push
mov
sub
cmpsl
or
std
sarb
mov
add
movsl
inc
pop
pop
jp
mov
or
movsl
jp
add
ljmp
mov
push
cmp
push
pop
sub
hlt
or
je
pushf
push
pop
mov
movsl
cmp
mov
push
aaa
in
fiadds
fadds
cmp
xor
cld
inc
test
xlat
dec
outsb
bound
nop
test
inc
imul
in
leave
xor
or
in
mov
clc
lcall
mov
repz
pop
xchg
xchg
push
jge
leave
sub
inc
lods
adc
mov
outsl
mov
inc
mov
cmc
jbe
mov
adcb
loop
aas
jl
sarl
in
mov
rol
divb
xchg
push
cmc
lret
gs
pop
stos
mov
les
jmp
shll
pop
and
cmp
outsb
inc
mov
jmp
xor
lock
push
es
sub
lods
andb
sahf
fwait
test
mov
and
add
rcrl
fldenv
gs
mov
and
xchg
dec
sub
mov
ror
cmpb
in
data16
xor
dec
ds
out
test
sahf
ficoms
push
stc
mov
adcb
add
into
rsqrtps
jecxz
and
xchg
rorl
insb
jb
mov
out
lock
sbb
scas
loopne
pop
sbb
jp
movsb
decb
mov
repnz
clc
in
mov
dec
add
add
mov
cmpsb
push
ja
lea
test
add
outsl
sub
push
aaa
jge
shl
popa
jnp
sub
sti
cmp
loopne
sub
sbb
push
xchg
test
xchg
gs
inc
mov
int3
sahf
mov
cli
shrb
scas
inc
daa
xor
int3
inc
in
xor
and
mov
sti
mov
dec
or
rcrl
sti
repz
inc
adc
ljmp
mov
imul
pop
add
sarl
xor
bound
in
cmp
out
xchg
sahf
aad
enter
cltd
jno
in
sbb
das
lds
daa
bound
popl
clc
jp
add
adc
out
popf
daa
data16
jae
cmp
dec
add
or
cli
testl
iret
or
rorb
lods
arpl
push
shl
bnd
mov
cmp
sub
mov
out
adc
pop
or
sbb
sahf
fwait
xor
lods
das
cmp
aam
ljmp
mov
test
mov
call
mov
xchg
xor
imul
out
jno
pop
and
popa
sti
dec
push
jge
cltd
arpl
hlt
sub
push
es
pop
adcb
push
lock
fxch
sub
repz
add
daa
push
ror
adc
jo
xor
xor
sub
leave
scas
mov
lret
scas
xlat
fs
xor
sub
push
cmpsl
dec
scas
cmp
lods
mov
notb
out
or
in
lret
mulb
test
data16
rol
out
addr16
mov
xchg
xor
add
mov
jo
ljmp
ds
xchg
pop
mov
mov
scas
stos
cltd
cmpsb
cmpb
lods
xor
jmp
inc
movsb
pop
inc
xchg
popa
pushf
jle
pop
cmp
popf
mov
mov
pushf
mov
dec
ds
ja
pop
inc
push
pop
dec
cmp
andl
sub
sub
jnp
xorb
push
push
lock
inc
cltd
adc
jl
xor
jno
lock
and
sti
cmp
dec
inc
loopne
fincstp
movsl
mov
repnz
fisttpll
mov
push
movsl
or
inc
and
add
pop
sti
test
fs
pushf
enter
rclb
xor
jo
lods
cld
sub
cmp
xor
int
mov
clc
mov
imul
pop
shrl
adcb
js
mov
mov
push
push
lcall
cmpsb
xchg
push
scas
aam
dec
and
jp
imul
jns
fdivrs
imul
or
hlt
les
mov
mov
pop
cld
cmp
adc
imul
push
inc
cmp
movsb
shll
jle
incb
mov
pusha
mov
pusha
into
out
sbb
mov
mov
dec
dec
or
arpl
sbb
mov
into
pop
pop
xchg
cmp
add
in
mov
adcb
je
inc
jnp
fstps
aaa
scas
bound
xor
mov
cmp
mov
inc
add
sub
xchg
dec
orb
fs
fdivp
xchg
xchg
lods
fwait
xchg
pop
sub
jecxz
imul
lret
adc
adc
sbb
rcr
sub
mov
push
test
xlat
outsl
mov
test
jp
cmp
cltd
test
stos
or
mov
nop
xchg
or
lock
xor
into
lds
push
pusha
mov
imul
mov
push
mov
inc
sysexit
lock
jmp
sub
add
fldt
jmp
ret
push
gs
mov
or
sub
sbb
pop
out
inc
push
or
xchg
icebp
pop
sub
pushf
mov
int3
pusha
push
push
test
xor
jge
aad
lcall
int
test
or
repz
sub
stos
xor
and
aaa
cmp
xchg
xor
stos
jns
mov
cmp
daa
xor
cmp
jae
jae
pop
sbb
sub
mov
pop
jge
jmp
scas
cmpsl
sub
cmpsl
jo
pop
test
lcall
lock
cmpsl
ja
clc
insb
jne
push
push
jle
bnd
pop
lods
scas
pop
pop
data16
dec
mov
les
xchg
roll
test
and
insl
lods
cmc
xor
dec
cmpsl
shll
shl
shll
and
xchg
mov
dec
loope
pop
cmpsl
sub
inc
adc
xor
lods
repnz
mov
dec
je
test
xchg
outsl
call
pop
lcall
or
and
call
test
add
jmp
cmp
cmp
loope
leave
xor
dec
enter
mov
cmpsl
lods
jne
je
rorl
lea
movsl
xor
mov
pop
jecxz
pushf
repnz
xor
push
xor
jecxz,pt
pop
nop
cmpsb
pop
xor
clc
imul
sub
mov
cmp
jae
push
sub
lods
fsubp
lock
adc
mov
mov
xor
ja
test
push
or
fldcw
loopne
xor
dec
ret
dec
daa
lods
notl
movsl
das
lahf
sbb
dec
sub
mov
in
out
data16
sub
cmpsl
adc
mov
icebp
push
inc
or
sbb
cmp
test
push
jno
ja
sub
jmp
cmc
dec
xchg
mov
push
arpl
pop
mov
popf
push
popa
into
into
clc
mov
sbb
jecxz
int3
xor
call
imul
stc
lods
lds
push
jg
sub
mov
sub
push
dec
push
lahf
dec
mov
inc
sbb
push
sbb
add
mov
test
ds
adc
xchg
ds
lds
push
xchg
jb
pop
jmp
in
mov
jae
repz
mov
add
add
mov
adc
mov
push
sub
aam
addr16
cmp
rcrl
xchg
movsb
mov
push
into
in
cmp
out
jmp
cmp
xchg
inc
dec
pusha
mov
xor
mov
out
xor
mov
leave
fdiv
shl
ja
imul
lea
aam
jbe
jb
sub
lahf
in
js
sub
cmp
in
inc
cli
mov
loop
xor
bnd
loopne
xor
insl
sub
cwtl
std
les
adc
xor
scas
sbb
lods
loope
push
je
popf
imul
push
mov
push
cmp
mov
pop
adc
mov
stos
inc
arpl
push
out
inc
fs
lock
lds
out
push
mov
xchg
aaa
dec
sbb
and
aaa
outsb
xor
xchg
shll
jp
fistl
xor
mov
andl
inc
test
loop
mov
jle
and
ljmp
jmp
sbb
data16
cmp
xlat
dec
jp
into
mov
mov
leave
push
cld
arpl
sbb
lds
or
xchg
punpcklwd
xor
mov
cmp
inc
adc
gs
ja
dec
push
push
cmpb
push
xchg
adc
pop
push
lret
arpl
das
cld
filds
in
mov
cmp
inc
mov
loope
stos
sti
in
push
sub
cmc
insb
dec
mov
and
out
cwtl
lcall
jbe
repnz
movsl
test
dec
lea
pop
data16
pop
or
dec
lock
push
mov
pop
addr16
call
dec
push
jae
add
inc
pop
and
inc
lods
pop
mov
inc
adc
ss
mov
pop
mov
inc
dec
jp
add
xchg
push
inc
sbb
int
mov
outsb
test
cmp
jle
sbb
xor
cmp
popf
shrl
sub
mov
dec
sbb
xor
jmp
test
mov
jns
aam
push
loopne
ds
sub
cmp
pop
std
movsb
mov
stos
and
stos
aam
add
sub
in
pop
ljmp
inc
mov
mov
in
test
push
gs
movsl
fs
cwtl
cmpsl
pop
mov
xor
lock
cmpsb
mov
ss
test
push
call
mov
mov
inc
mov
fisubrl
pop
negl
das
mov
jecxz
inc
dec
cmp
xchg
inc
inc
mov
loopne
fildll
xchg
mov
in
xchg
test
jb
aas
shl
test
pop
jne
rclb
sbb
sub
xor
out
in
cmpsl
loopne
fildl
dec
test
repnz
mov
xlat
gs
stos
pushf
push
xchg
add
mov
insb
mov
mov
bound
and
add
push
or
cmpsb
mov
sti
es
sbb
mov
cmp
lea
push
dec
sti
pop
test
mov
lods
push
xor
lret
push
mov
icebp
lock
xlat
test
xor
add
mov
fcomi
movsb
mov
xor
pop
test
sbb
ror
or
cld
ss
fs
mov
sahf
sbb
xchg
xor
pusha
jle
mov
push
shll
push
movsb
shlb
ds
sub
bound
scas
push
adc
lds
inc
or
cmp
mov
in
enter
inc
dec
xlat
lock
je
sub
ret
adc
xor
xchg
push
add
out
daa
rep
adc
in
pop
inc
imul
push
das
push
sahf
xor
push
lea
xlat
or
xchg
xor
ljmp
out
and
jl
sbb
mov
jecxz
repnz
sub
inc
addl
or
adc
das
fwait
push
mov
jmp
stc
or
cmpsb
adc
sbb
sbb
jbe
adc
bound
adc
out
lret
lahf
mov
neg
sub
sub
outsl
inc
repnz
jg
sub
push
pop
sub
xchg
mov
inc
lret
or
adc
sarl
cmc
adcb
inc
sub
clc
call
sub
xchg
sub
in
cmpsb
mov
xorb
pusha
shrl
inc
sub
mov
ficompl
pop
sub
cs
ret
xchg
out
ljmp
imul
cmp
ss
call
aad
fwait
sub
jbe
mov
movsl
mov
cmp
sub
dec
push
sbb
jecxz
pop
addb
scas
adc
adc
jns
test
movsl
push
pop
cmp
or
xchg
sti
sbb
adc
add
jae
divb
sub
mov
fcmovu
je
sub
out
out
pop
push
inc
orb
repnz
icebp
cwtl
jge
sub
aam
mov
loop
lret
std
pop
inc
or
movsb
cmp
sub
dec
sbb
push
xchg
sub
mov
imul
cmp
dec
mov
out
fsts
xchg
dec
lcall
dec
sbb
popa
xchg
adc
shr
ds
adc
test
cmp
jbe
or
adc
loop
dec
out
sbb
sbb
ret
pop
or
dec
repnz
sub
pop
sub
sub
pop
test
xor
mov
pop
in
pop
out
mov
scas
psubq
mov
and
test
repz
fisubl
push
pop
sub
fwait
fcoms
fcomip
mov
movsl
sbb
das
out
sbb
test
push
aad
dec
movsl
fcoms
or
mov
push
loope
es
sub
adc
aas
adcb
fldenv
pushf
sub
shll
mov
les
pop
sub
dec
push
mov
sub
jg
sub
pusha
mov
ficompl
xor
pop
mov
or
cmp
mov
leave
pop
in
push
xor
xor
jae
fucomp
stos
dec
and
out
call
sub
fs
cmpsb
mov
popa
test
call
nop
or
mov
sbb
mov
push
fstl
test
fidivl
sub
mov
fwait
mov
gs
jecxz
popf
out
js
xor
std
inc
test
and
arpl
dec
push
mov
xorb
ss
lds
and
push
repz
dec
iret
mov
sub
rcrb
sti
xchg
lock
or
or
call
aad
adc
or
inc
xor
mov
inc
lock
xchg
addr16
xchg
jo
push
xor
lcall
mov
push
stc
popf
xchg
mov
mov
inc
sub
movsl
repnz
push
jl
and
jne
std
scas
inc
out
pop
iret
stos
or
clc
mov
in
aaa
inc
jo
add
pop
addr16
pop
pop
push
mov
je
push
inc
movsb
mov
stos
fs
push
cld
cwtl
test
imul
xor
pop
jg
insb
ds
pusha
cmpsb
sub
add
imul
pop
lock
aad
std
push
out
fcmovnb
loope
and
and
xor
pop
shll
bound
in
rclb
cs
ret
out
cld
and
xchg
movsl
std
addr16
in
push
push
mov
sub
shlb
outsl
push
add
or
jp
shrl
adc
js
xchg
lds
push
mov
cmp
sarb
mulps
out
cld
cmp
popf
fs
xor
and
fwait
jo
movsb
adc
inc
fsubp
ret
stos
mov
test
pop
sub
pop
arpl
mov
sti
shrb
pop
mov
mov
in
mov
jge
xchg
addr16
loop
and
sti
inc
jbe
gs
adc
cmpsb
jl
lods
pop
and
inc
inc
ret
leave
sahf
shrl
push
iret
mov
mov
imul
and
mov
xlat
hlt
cs
xchg
and
sub
bound
fnstcw
aam
fldenv
adc
in
jmp
mov
loopne
pop
push
push
mov
push
stc
movsl
adc
pop
rcl
pop
sbb
sub
cmpsb
test
mov
mov
jge
adc
adc
icebp
mov
call
jno
add
cmp
scas
inc
ds
out
inc
dec
dec
cmp
lods
outsb
movsb
pusha
push
mov
push
imul
outsl
mov
aam
add
add
xchg
lods
sbb
in
fadds
sbb
push
pop
call
sbb
imul
sub
enter
clc
leave
mov
fcomip
in
testb
mov
push
loope
sbb
insl
push
in
pop
mov
cmpsb
and
mov
or
dec
enter
cmp
mov
cs
popf
pop
movsb
xchg
pop
mov
mull
mov
jo
pop
inc
dec
xor
into
push
cmpsb
cmpb
mov
in
xchg
xchg
loopne
or
sahf
aaa
hlt
clc
enter
imul
mov
jge
sub
and
ja
movsl
mov
insl
loopne
loop
jmp
inc
xchg
pop
and
pop
addb
sti
pop
loope
aad
testl
push
popf
popa
testl
xor
inc
jp
inc
xor
cmpb
xor
pop
sub
add
adc
popa
push
rcrb
mov
dec
lds
dec
inc
cmp
pushf
mov
jae
inc
pop
push
fistl
pop
cld
jnp
xchg
mov
mov
sbb
pop
push
fisubs
out
lock
adc
roll
dec
mov
in
and
addr16
mov
push
insb
and
fidivl
cmpsl
jbe
xor
mov
les
or
lock
sbb
pop
cmpsb
push
mov
mov
xchg
push
fstl
sub
lock
pop
xchg
push
inc
jecxz
int3
ds
jno
insb
addr16
add
test
mov
sbb
pop
mov
nop
addr16
push
jge
lods
imul
xchg
rcll
mov
cli
cwtl
inc
push
fwait
cmpl
jg
je
out
mov
daa
dec
mov
mov
xchg
xor
stc
imul
into
inc
push
cmp
mov
hlt
and
jp
cmp
jbe
jmp
out
and
adc
stc
cltd
mov
aaa
or
cmpsb
pop
ds
mov
xchg
in
pop
testl
pop
lods
push
xchg
out
shlb
mov
cmpsl
mov
clc
sub
push
ret
jmp
mov
sbb
lret
insb
js
mov
xor
xchg
lods
push
xchg
repz
push
sub
mov
rol
mov
incl
pop
mov
dec
ja
dec
cmc
cmp
mov
mulb
sahf
out
pop
inc
fists
push
jle
ja
ljmp
jmp
mov
inc
cmp
sbb
fs
xchg
xchg
lods
xchg
sahf
push
adc
enter
sarl
cmp
xchg
test
add
cmp
outsb
sub
adc
mov
pop
jp
sarb
inc
arpl
xor
push
mov
mov
bound
into
movsb
pop
subl
data16
cmp
jl
shrl
push
mov
jle
add
xchg
std
add
rcrb
mov
sub
jno,pn
test
in
pop
sub
scas
mov
push
leave
and
ja
xor
mov
mov
and
in
pop
push
ljmp
lock
add
sub
cmp
lock
insb
push
pop
inc
enter
sub
loopne
ljmp
adc
inc
mov
or
mov
and
jmp
in
test
xchg
xor
idivb
int
mov
mov
xchg
mov
andb
pop
arpl
pop
aas
xor
mov
insb
int
pushl
lock
movsb
std
mov
sbb
push
push
iret
loopne,pn
fwait
ds
xchg
stos
sbb
scas
pop
insl
xor
fucompp
dec
negl
insb
ret
cmpsb
xchg
xchg
les
adc
icebp
test
insl
sub
inc
fistl
jb
js
adcl
daa
mov
ret
popa
sbb
xchg
xchg
cmp
lds
sub
adc
mov
cmp
lods
lds
cmp
sub
gs
test
cmp
mov
dec
jae
divb
xchg
movsb
mov
sarb
xor
fimuls
push
icebp
jnp
mov
mov
sbb
xor
xlat
xchg
push
popf
ljmp
nop
pop
dec
inc
sti
cwtl
and
adc
mov
fucomip
imul
pop
idivb
sbb
push
xor
inc
daa
stos
popa
loop
mov
cmp
push
sbb
cmpsl
or
jo
cltd
cmpsb
mov
or
outsb
cmp
adc
dec
sbb
out
mov
popa
lock
adc
pop
adc
inc
inc
fimuls
mov
adc
mov
mov
in
add
dec
cmp
mov
add
cmp
jae
jmp
insl
push
imul
in
sub
push
scas
test
outsb
loopne
inc
bound
jg
inc
xlat
and
push
aad
pop
imul
mov
in
adc
mov
das
xchg
push
cmp
jo
sub
loopne
mov
pop
ljmp
push
out
dec
sbbl
add
frstor
sahf
lret
mov
cli
lock
jns
fisubs
cmpsb
add
push
adc
sub
pop
adc
push
mov
mov
mov
jnp
xor
dec
ss
cmp
adcl
shr
daa
loopne
popf
sar
pop
jg
xor
pop
add
jmp
in
push
fsubr
icebp
pop
cmpl
test
pop
and
pusha
add
sub
push
and
fs
lock
lcall
mov
loope
or
mov
cmp
cmpsb
push
mov
into
mov
and
cmp
push
call
aaa
lcall
ljmp
bound
lret
ss
adc
jns
mov
ljmp
adc
scas
xchg
leave
pop
bound
adc
jp
pusha
gs
out
decl
lock
mov
adc
stos
sbb
mov
test
cmpl
cmpsl
fisubs
data16
push
jmp
pop
inc
push
scas
leave
adc
or
and
mov
mov
add
xor
inc
sti
add
ss
hlt
fwait
push
pop
aad
push
sub
mov
xchg
sub
test
cmp
imul
adc
sti
or
adc
push
dec
jge
popa
shrl
push
mov
mov
xchg
lock
dec
mov
pop
push
aam
or
jp
js
loop
push
andl
dec
shlb
aam
fildll
or
ror
cwtl
adc
xchg
sub
lea
sbb
cli
cmp
jb
mov
mov
in
movsb
jg
and
lock
push
fdivp
or
sub
pop
add
sti
imul
imul
int3
jl
mov
jne
inc
xchg
mov
aas
xchg
pop
cld
out
xor
cmpsb
xor
mov
jle
push
mov
adc
add
xchg
cmc
sub
insl
mov
pusha
xor
pop
scas
dec
jb
adc
adc
xor
jo
fldl2t
enter
lock
cmpsb
test
loopnew
and
fistpll
test
cmpsl
xchg
lock
lods
push
les
out
mov
mov
or
push
xchg
push
sub
fimuls
push
push
lret
mov
inc
into
sub
sti
push
jno
scas
pop
adc
dec
sub
cmp
and
lods
fisttpll
addr16
mov
push
call
clc
jb
xor
hlt
cmpsl
push
lock
lahf
adc
jns
hlt
cmp
rolb
dec
push
leave
dec
xchg
adc
push
sbb
xlat
out
dec
xor
idivl
daa
and
test
push
dec
pop
or
adc
xlat
push
out
repz
xor
push
addl
cld
mov
fdiv
das
pushf
cmp
mov
sub
fimull
and
ja
test
inc
jge
sbb
pop
loop
xchg
pop
xchg
xlat
ret
dec
mov
lahf
jl
push
mov
lret
push
lcall
stos
and
lock
pcmpgtw
xchg
jo
xchg
xor
lods
sub
sbb
jg,pt
pop
movq
subl
jp
aam
testb
call
xchg
pushf
ljmp
data16
mov
in
xchg
sbbl
ror
xchg
sub
iret
add
pop
push
xchg
inc
lock
lcall
inc
fistpll
mov
jbe
lret
in
push
sbb
loopne
out
imul
testb
jbe
fimuls
in
aas
dec
add
loope
xchg
nop
sub
push
mov
sti
inc
mov
adc
aad
cmpb
add
add
movsb
xchg
sub
add
pop
insb
push
xor
mov
push
mov
sti
imulb
mov
sub
test
push
int3
xchg
fdivl
out
add
frstpm(287
in
sub
movsl
aad
inc
pop
repnz
xor
mov
push
inc
sbb
add
es
lods
loope
add
daa
dec
clc
test
or
rclb
push
mov
outsl
pop
mov
dec
out
inc
ss
mov
mov
inc
pop
mov
les
mov
xor
leave
and
pop
call
add
inc
and
inc
repnz
inc
lock
sarb
sub
and
push
or
outsl
jp
inc
je
imul
mov
xchg
and
shl
dec
xchg
mov
movsb
and
sahf
insl
jne
lock
dec
icebp
shrl
cli
shl
dec
inc
sbb
idivl
cmp
lcall
sbb
fstps
movsl
vmaxps
sub
dec
jge
dec
adc
and
imul
test
mov
xor
cmp
mov
andl
push
jb
add
or
xor
nop
push
aas
iret
jno
push
pop
lmsw
outsl
xchg
cmp
mov
es
mov
aas
sbb
scas
cmpsb
bound
inc
cmp
jmp
ret
sbb
sbbl
cmc
jns
dec
mov
adc
mov
inc
fists
fistps
adc
pop
bound
and
dec
cmpsl
leave
test
dec
xor
add
xor
lret
lea
mov
push
sub
jecxz
stos
inc
push
aam
push
test
fldcw
xor
lds
jge
lods
inc
outsl
mov
jmp
rcl
push
test
adc
movsl
jecxz
cmpsl
outsl
pop
rol
bound
out
mov
shr
fdivs
in
jecxz
mov
or
dec
dec
scas
les
pushf
lock
mov
scas
ret
lods
loopne
push
mov
or
jns
inc
ss
jmp
iret
inc
adc
scas
test
fnstenv
out
imulb
pop
aam
dec
pop
lock
rorl
cmp
sub
xchg
imul
add
add
in
mov
jl
sbb
aad
dec
shlb
std
sahf
leave
leave
push
jmp
pushl
mov
data16
xchg
and
ljmp
add
lcall
push
adc
insb
mov
cwtl
rcrb
pop
dec
mov
addb
jbe
mov
xchg
imulb
dec
mov
out
jge
mov
shlb
and
cs
pop
xchg
pop
dec
int
std
lcall
dec
enter
sbb
ret
shl
inc
mov
shrb
mov
mov
or
push
and
das
xor
cmp
cmp
aam
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
jbe
fs
jae
cmp
bt
cmp
pusha
call
test
fistpl
insb
or
jo
xor
insb
adc
pop
sarb
shlb
push
aad
fwait
ret
adc
mov
push
enter
cmp
push
sub
test
loopne
ret
cltd
nop
jge
sahf
mov
mov
xchg
fucomip
jle
xchg
test
aam
push
pop
mov
inc
test
cmp
sbb
decb
adc
data16
dec
ss
dec
adc
mov
imul
xchg
mov
ljmp
clc
fwait
mov
loopne
pop
in
pushf
sbb
xor
lahf
push
or
sub
sbb
inc
cli
ljmp
xor
ds
adc
jno
frstor
hlt
sahf
call
xorb
comiss
push
adc
call
scas
cmp
mov
pop
mov
mov
rcll
lods
iret
mov
imull
and
xor
xchg
inc
popf
mov
mov
jp
sbbb
insb
xchg
subb
xlat
sub
mov
out
ret
and
xchg
loop
sahf
imul
es
xchg
push
jp
inc
xlat
pop
pop
or
adcl
filds
pop
dec
jbe
push
int3
push
lock
js
add
call
sub
ljmp
mov
rolb
ret
add
fmuls
orl
add
sub
cwtl
ret
not
stos
push
mov
lea
pushf
jmp
lea
ja
clc
call
dec
sti
cwtl
push
aaa
cwtl
inc
shlb
pushf
and
dec
test
adc
rorb
push
add
ret
cwtl
das
inc
div
jnp
in
loopne
inc
in
cmpl
daa
rorl
lcall
repz
mov
cmp
xchg
dec
mov
pop
and
sub
pop
and
push
dec
jne
jmp
loope
test
or
mov
fs
outsw
ja
cwtl
sub
cli
fs
clc
ljmp
pop
jae
adc
inc
not
pusha
push
stos
jmp
adc
and
cld
jg
or
push
jb
xor
outsb
imul
jae
push
loope
gs
pop
pop
enter
mov
scas
repz
add
jmp
jmp
xchg
cltd
stos
sarl
iret
ljmp
fldl
push
sarb
xor
pusha
push
jge
or
xchg
in
add
scas
aam
stos
test
inc
cmc
nop
cmpsb
ret
leave
or
rcl
sub
mov
xchg
les
push
inc
fsts
sub
out
xchg
push
and
cmp
loop
push
clc
ficoms
into
shll
adc
ljmp
and
fiaddl
pop
push
aaa
jecxz
jl
je
xor
fwait
sbb
xchg
in
cmpsb
gs
rcll
call
sub
jns
adc
repnz
jmp
dec
xchg
pop
adc
pop
test
and
push
int
out
rclb
and
add
mov
out
dec
push
repz
clc
dec
call
ljmp
loope
pop
subl
xchg
fldt
out
dec
dec
popa
nop
adc
loope
xor
cli
xor
sbb
push
in
cmpsb
addr16
imul
mov
inc
mov
es
and
outsl
sbb
mov
rolb
rclb
or
or
outsl
push
jge
push
fs
js
sbb
mov
mov
push
pushf
data16
cmpsb
or
daa
push
shrl
outsl
jmp
dec
push
mov
or
iret
aad
push
dec
cmpsl
jnp
loop
inc
imul
lret
cmp
pop
push
popa
jmp
dec
cwtl
xor
arpl
dec
and
add
arpl
dec
push
jmp
cltd
gs
addr16
dec
ds
icebp
inc
mov
and
dec
popa
fs
fisubrl
xor
jecxz
sar
out
std
xchg
shll
bound
lods
xor
xchg
dec
bound
push
jmp
data16
dec
cmpsb
or
xlat
stos
fidivrl
push
sub
xor
fs
xchg
jbe
ljmp
in
inc
inc
dec
or
xchg
push
shrb
dec
inc
push
jnp
and
jnp
arpl
shll
jae
pusha
rcrb
push
sub
mov
aaa
xor
jp
jae
stos
int3
loopne
adc
cmpsl
mov
aaa
shll
stos
test
sub
pop
adc
or
fstpl
cmpsb
fsubrl
and
push
push
inc
out
xchg
sub
dec
imul
ds
movsl
pop
insl
jg
int3
pop
xchg
push
fldenvs
fstps
or
test
bound
je
cwtl
fldenv
mov
sub
xchg
push
sbb
imul
and
ret
lcall
xchg
inc
mov
inc
mov
dec
dec
add
fsubs
push
mov
or
fsts
repnz
mov
and
sahf
xchg
sbb
ljmp
fwait
push
mov
dec
xor
xor
xor
xor
sub
add
cmpsb
sarl
inc
pop
in
pop
call
and
sahf
sub
sbb
mov
xchg
push
or
cmp
aaa
movsb
mov
push
test
js
lahf
cmpsl
out
sbb
or
push
inc
jns
testb
fisubrs
or
loope
adc
repz
test
jmp
ficoms
push
xchg
and
adc
adc
ret
or
rcr
and
add
iret
icebp
cmp
sbb
xor
jge
xchg
xchg
arpl
xchg
scas
jne
nop
scas
inc
xchg
jle
jle
lds
pop
mov
push
cmp
adc
push
mov
loope
push
aad
sbb
mov
or
mov
push
bound
mov
sbb
and
aaa
arpl
mov
sub
sub
lret
pop
mov
cmp
popa
or
mov
pop
sbb
dec
xlat
cwtl
push
out
add
xchg
mov
stos
mov
out
stos
xlat
mov
xchg
mov
mov
gs
call
imul
adc
adc
push
mov
movsl
xor
xor
add
or
ljmp
or
rcl
cmp
xchg
dec
xchg
add
cmp
xchg
inc
loope
aad
adc
mov
ret
mov
or
lds
imul
xchg
aaa
fimuls
insb
xchg
cmp
mov
ja
fldcw
xor
adc
mov
adc
sbb
push
or
movsl
cmp
gs
sub
jnp
pop
cmp
xor
sbb
popf
inc
sub
mov
and
xchg
push
xor
cmpsl
ljmp
mov
clc
sub
shll
and
xor
sbb
call
mov
dec
out
rcrl
imul
inc
push
xchg
out
cmpsw
arpl
adc
fstps
mov
mov
or
xchg
lret
or
push
test
mov
ss
enter
sub
xchg
xor
jmp
adc
lahf
aaa
addr16
cmp
aaa
out
push
jge
cmp
pop
xchg
insb
xor
pop
scas
and
mov
xchg
xlat
inc
jp
xchg
cmp
and
nop
ss
dec
loope
cltd
sbb
pusha
in
adc
fldenv
xlat
mov
xor
fwait
rcrl
dec
mov
cmp
aaa
sti
sahf
cmp
pop
clc
insl
sbb
scas
idivl
lcall
push
shrb
and
out
sub
inc
fistl
loopne
repz
xlat
call
jg
push
lods
icebp
inc
call
movsl
xor
in
repnz
cmpsl
xchg
pop
pop
bound
sbb
sub
and
xchg
jg
mov
les
lods
inc
cmc
loopne
push
das
xchg
loopne
aad
xor
jp
repnz
div
xor
loop
xchg
dec
aaa
pop
xor
mov
push
lar
bound
xor
mov
xor
call
adc
xor
push
inc
inc
in
int3
daa
sbb
rorb
xor
ret
test
mov
inc
daa
xchg
dec
jae
fistps
arpl
in
insb
jo
movsl
sub
mov
and
addr16
loopne
in
pop
scas
daa
out
ss
pop
pop
mov
bound
imul
or
outsl
xchg
loope
jmp
pop
in
xchg
dec
pop
es
imul
add
es
xor
xchg
sub
outsl
call
data16
scas
dec
out
dec
jle
fstps
sarb
mov
cltd
sub
mov
movsl
pop
or
lar
add
loope
pop
mov
sti
pusha
je
inc
and
movzwl
mov
dec
cs
cmp
xor
xor
xor
jb
lods
cwtl
ljmp
in
ds
cmpsb
push
sbb
iret
insb
pop
inc
inc
imul
sub
sbb
push
loopne
dec
inc
xchg
ds
cmp
sbb
lea
fdivp
pushw
and
out
pusha
insl
arpl
sbb
sub
stc
mov
push
and
sub
sti
lcall
popa
orl
inc
lods
popf
adc
pop
push
das
bound
scas
lock
mov
pop
sbb
mov
je
out
or
inc
cmpsb
mov
out
cmp
inc
xorl
mov
out
lods
xchg
out
and
mov
out
aam
pushf
leave
cmp
sub
add
das
adc
pop
or
lea
inc
sbb
in
shlb
enter
dec
es
je
jb
adc
shrl
pop
sbb
push
pusha
push
ret
rolb
adc
xor
mov
xchg
lock
cmp
push
mov
icebp
pop
cwtl
ds
push
inc
fstl
pop
fwait
movsl
ds
sub
push
fiadds
dec
push
std
in
mov
rcll
mov
lods
imul
cmp
test
jp
outsb
bound
loope
push
inc
mov
addr16
pop
mov
int3
ja
dec
dec
cs
outsb
inc
mov
addr16
dec
lods
ret
and
outsb
lret
outsb
push
outsb
pop
jp
pop
addb
pop
inc
mov
dec
scas
scas
jo
lds
repz
adc
iret
sbb
xor
inc
das
mov
mov
xchg
ja
sub
jbe
cmp
mov
scas
or
and
sbb
rcrl
xchg
inc
data16
xor
and
jo
shrd
loopne
cmpsb
stc
mov
cmp
nop
cwtl
dec
sbb
fdivrl
xor
adc
pop
push
cmp
xchg
sub
fcomps
and
out
push
inc
test
popl
and
les
nop
scas
frstor
imull
scas
cmp
sub
mov
in
arpl
in
ja
lea
loope
xchg
inc
orl
pop
adc
push
adc
sub
insl
inc
loopne
xor
movsl
lea
clc
push
sub
xor
lcall
xchg
xor
inc
loope
sub
addr16
data16
pop
fmull
test
pop
xchg
and
data16
xchg
bound
scas
rcrl
loope
push
and
fldenv
adc
sbb
outsl
aad
xor
or
dec
outsl
ja
xchg
sbb
inc
scas
test
jp
cmc
dec
and
lahf
mov
rorl
inc
jnp
addr16
lret
loope
mov
ss
jp
fabs
dec
push
ret
xor
in
mov
out
mov
push
push
test
jmp
add
scas
jge
add
pop
sub
aad
and
push
sub
and
pop
add
jge
enter
sub
ja
cli
cmp
ljmp
cmpsb
or
mov
shll
cs
mov
add
sub
or
xchg
nop
sub
arpl
mov
xor
outsl
testl
jns
stos
fucomp
and
and
cmp
jmp
popa
popa
push
lahf
push
ljmp
mov
push
push
adc
mov
mov
jp
test
pop
arpl
xchg
loopne
push
push
mov
inc
gs
andb
in
call
inc
or
cmp
test
out
fsubrp
in
pushf
cmp
push
ret
mov
inc
xor
dec
dec
mov
inc
ficoms
std
shlb
and
and
xchg
push
inc
dec
pusha
mov
es
xor
adc
mov
lds
pop
stos
or
fbld
cmpsb
xchg
push
sbbl
cmp
push
cmp
sub
test
jb
push
xor
jno
xchg
add
test
and
mov
cmp
int
push
sub
sti
les
jae
jecxz
adc
fldt
rcll
pop
mov
or
jmp
inc
frstor
xor
dec
int3
cld
mov
stc
inc
test
xor
fdivs
cmp
jo
int
xchg
dec
mov
jle
in
adc
dec
test
leave
gs
or
add
jg
mov
loop
push
jne
mov
movsl
push
dec
mov
lret
fnstenv
sub
mov
mov
sarb
adc
dec
and
add
pop
sbb
mov
add
ja
xor
es
dec
ja
aas
loopne
xor
lods
popa
jnp
daa
icebp
xor
shlw
jecxz
lods
flds
mov
sub
mov
movsl
sub
ljmp
lods
sbbb
popf
xlat
clc
in
aas
out
push
sbb
adc
test
pop
rcrl
xor
jg
das
loop
push
out
es
mov
adc
arpl
jb
dec
inc
push
sub
push
sbb
jns
sub
xor
dec
mov
fwait
cli
iret
daa
inc
shll
adc
movsl
test
sbb
movsb
pop
icebp
leave
or
fcmovb
push
jnp,pn
rcrl
xor
dec
in
pop
cmp
bound
aaa
push
mov
movsl
xlat
and
push
jle
scas
test
lock
mov
pop
adc
pop
mov
lods
lea
sub
or
aaa
mov
out
sub
lods
movl
popf
dec
addr16
ljmp
pop
pusha
or
data16
push
jne
dec
cmp
jae
ficomps
pop
sbb
or
mov
lock
jno
pop
inc
push
loop
mov
out
rcr
ret
ljmp
out
sub
jmp
outsl
add
mov
jno
std
dec
js
dec
adc
xor
add
popf
push
loopne
mov
test
pusha
mov
and
jns
sahf
pushf
fidivs
pop
cmp
xchg
cltd
rclb
call
mov
enter
in
jo
arpl
lahf
and
cs
pop
leave
ror
jns
sti
mov
mov
xlat
mov
sub
in
pop
mov
test
pop
sub
cmpsb
push
jle
jns
addb
pusha
push
xor
pop
add
dec
imul
ljmp
in
out
and
shl
mov
xor
jae
test
jns
pop
pop
push
cwtl
mov
and
sub
or
jbe
push
mov
sub
pop
sahf
dec
mov
hlt
mov
dec
fldenv
xchg
hlt
mov
fnstenv
push
test
adc
xor
pop
arpl
addr16
add
sahf
lds
inc
fsubs
xor
call
pop
pop
fisttps
js
pop
push
fisubs
cmp
es
mov
rorb
stos
inc
sbb
data16
outsb
ja
mov
daa
mov
push
hlt
leave
cwtl
mov
or
xor
mov
push
sub
fildll
fnstcw
cmp
fdivs
xlat
sbb
adc
bound
in
mov
rol
ss
pop
out
das
mov
aad
inc
sbb
hlt
mov
aas
adc
pop
or
dec
clc
xchg
inc
xchg
aam
in
xchg
adc
sbb
and
jecxz
push
out
mov
or
call
das
cmpsl
inc
loope
mov
movsl
aam
xchg
xor
mov
mov
pop
or
in
frstor
inc
frstor
frstor
aas
frstor
cmp
imul
in
stc
frstor
mov
or
bound
popf
mov
mov
pop
mov
xor
mov
fcmovbe
xchg
lahf
push
xorl
add
pop
aam
or
leave
cmpsb
or
xor
inc
xlat
add
sbb
mov
dec
imul
push
push
wbinvd
jo
rcl
sub
mov
and
pop
loopne
and
fdivp
add
fsts
fbstp
dec
pop
adc
ljmp
mov
or
aas
leave
cmp
mov
inc
mov
lods
shrb
enter
pop
xor
out
adcl
loopne
sub
enter
cmpsl
mov
gs
cmpsb
xchg
icebp
and
call
cmp
adc
out
xchg
push
jmp
push
ret
pushf
sub
mov
test
js
jae
int3
out
fwait
rcrl
push
jno
adc
dec
jmp
and
shll
jae
jmp
push
xchg
mov
ss
push
jecxz
cmc
sub
xor
push
loope
sar
popa
aam
pop
out
fnstenv
aam
daa
test
lret
pusha
pop
stos
inc
std
mov
add
test
mov
adc
insl
inc
andl
add
fwait
mov
mov
dec
jg
add
mov
pop
cmp
outsb
hlt
loop
xchg
sub
bound
sbb
cmp
pop
cmp
mov
push
das
sahf
mov
inc
loopne
push
repz
mov
divb
add
aas
adc
sub
and
fs
mov
ficoml
dec
cmp
xor
mov
lods
test
mov
cmp
scas
mov
sub
leave
dec
xor
and
xor
xor
arpl
lcall
mov
sub
loop
lds
adc
je
mov
je
xor
dec
stos
mov
push
cmp
xchg
dec
test
mov
mov
push
pop
sub
cmpsb
mov
popf
arpl
lods
cmc
aaa
aaa
out
fdivr
fldenv
lahf
and
inc
lods
scas
aad
dec
and
test
cmp
inc
data16
jbe
ds
out
pop
pop
popf
xlat
clc
and
cmp
in
test
xchg
or
mov
cmp
scas
pop
mov
pop
xchg
fistps
pop
xchg
cmc
dec
arpl
sbb
cwtl
jmp
dec
in
fnstenv
mov
sub
loopne
inc
mov
sbb
pop
adc
pop
idivb
mov
fwait
loope
xor
mov
imul
push
xchg
cs
xchg
sbb
dec
lods
mov
icebp
rcr
mov
cmp
adc
les
push
cmc
sub
cmp
fisubrs
pushf
sbb
pop
xor
sub
adc
xchg
ljmp
and
cmp
sarb
ja
fcmovu
jecxz
fadds
popa
das
aam
in
pop
fcmovbe
ror
test
mov
xchg
stos
jne
push
push
inc
sub
jle
xchg
cld
aad
out
fidivl
jae
push
aas
pop
inc
or
cmc
repnz
imulb
cmpsb
cld
sub
sub
int3
es
sub
jno
cld
fwait
dec
cltd
xor
movsl
adc
sbb
pop
add
popf
jmp
lret
or
xchg
push
in
or
aam
mov
das
or
xchg
add
push
cld
lods
push
mov
arpl
jmp
pushf
iret
imul
lahf
cmpsb
push
xchg
inc
cli
bnd
lahf
hlt
jbe
test
int3
enter
xchg
push
push
adc
outsl
pop
jb
cmp
push
sbb
jmp
mov
sub
adc
and
loope
inc
mov
idiv
enter
push
fisttpl
push
add
xor
mov
cwtl
jbe
cmp
lea
mov
icebp
aaa
dec
cmc
cwtl
mov
stc
and
cmp
mov
push
sub
xor
ds
mov
inc
mov
sbb
cmpsb
movsl
xor
mov
fstps
gs
imul
filds
clc
mov
xor
jmp
test
imul
movsl
repnz
imul
fldln2
aad
inc
xor
movsb
or
out
popa
push
xor
pop
lcall
pop
push
test
mov
mov
sub
or
enter
mov
loopne
xchg
aad
repz
es
cmp
cmp
cmp
dec
xchg
sti
cmp
jmp
jecxz
roll
shll
xor
sub
or
jge
mov
stc
sub
enter
fld1
pusha
mov
leave
jl
xchg
cltd
enter
cld
testb
lods
addr16
jle
icebp
inc
in
adc
xor
fldl
jo
mov
dec
cmp
loope
mov
sub
icebp
das
aaa
inc
mov
inc
lods
xor
daa
loope
inc
pop
inc
ret
inc
mov
inc
sub
lret
pcmpeqb
jle
sbb
fistpll
and
pusha
addr16
cmp
inc
shll
imul
push
xchg
xchg
lea
adc
sbb
lret
fildl
pusha
daa
lock
test
les
flds
aad
rolb
inc
lahf
inc
cmp
sti
mov
push
fcomp
jns
outsb
shll
loope
and
cmpl
mov
mov
pop
call
xchg
cmp
fucom
xor
and
mov
popa
nop
push
xor
cmp
mov
inc
push
aas
jno
cli
jge
cmc
cmp
lret
pop
ret
bound
add
inc
xor
addr16
xor
mov
add
call
add
lods
jecxz
push
push
test
cmpsl
popa
xor
xchg
push
push
pop
mov
fcmovbe
push
cmpsb
inc
sti
lahf
inc
xchg
aas
mov
cmp
jne
out
aas
pop
push
cmpsb
lahf
and
push
test
fstpl
jl,pn
xor
addr16
insb
hlt
xor
dec
fiadds
in
mov
lcall
lcall
mov
and
jo
in
inc
xor
insl
cld
jmp
cmpsl
xor
push
test
sbb
movsl
fbstp
lds
pop
push
bound
inc
jp
push
addl
xor
adc
sub
and
push
stos
in
movsb
lods
div
insb
sbbb
dec
and
pusha
bound
mov
enter
push
cli
inc
inc
lea
inc
test
xor
cmp
dec
pop
pop
fs
vmread
aad
lret
mov
lods
sti
sbb
test
cmpsb
data16
das
ds
push
aaa
xchg
mov
fnstcw
fiadds
lock
adc
dec
or
pop
inc
push
lea
std
rclb
daa
cmpsb
mov
inc
sbb
push
loope
lcall
push
xchg
shl
dec
cltd
movsb
and
jmp
xchg
push
sub
fdivrs
cmp
scas
mov
push
mov
xor
xor
insl
mov
cmp
lods
les
cmp
mov
mov
inc
ret
xchg
mov
fldenv
cmp
pop
js
test
cmpsl
out
xchg
jnp
movsl
inc
std
pop
sbbl
repnz
repnz
cmpsl
xor
ljmp
std
mov
es
jge
sub
cmp
add
andl
rcll
pop
in
adc
repz
mov
fs
mov
adc
das
cld
lahf
es
cld
lods
dec
fldenv
mov
cmp
jge
cmpb
push
push
cmpsl
dec
sbb
cld
hlt
stos
xchg
mov
cmp
into
lds
cltd
pushw
pop
test
clc
sub
push
leave
cmp
cmpsl
jge
push
hlt
subb
cmp
test
and
popa
popf
sahf
shll
mov
sahf
data16
aas
out
bound
f2xm1
aam
xchg
jmp
push
dec
addl
loope
add
out
movsl
cltd
divb
sarb
dec
mov
dec
pop
mov
or
jns
pop
leave
and
sub
sbb
in
test
inc
pop
lock
rorl
int3
cltd
mov
fbld
rorl
cwtl
cmpsb
xchg
dec
mov
pop
add
movsb
cmpsl
in
mov
dec
pop
aaa
fnstcw
sub
cmp
rorl
insb
xchg
mov
lret
inc
data16
lea
addl
addr16
inc
loope
xor
xor
aas
push
sbb
cmpsb
mov
mov
dec
stc
std
dec
cmp
and
sbb
popa
dec
cmp
pop
orb
incb
adc
rcrl
lods
dec
push
jle
aas
out
std
ja
pop
xchg
test
jmp
push
sub
or
mov
cmc
cmp
aam
push
lods
js
add
lock
outsb
or
and
inc
xchg
add
pop
pop
xor
jns
pop
mov
cmp
fsubl
sahf
enterw
arpl
adc
fimuls
stos
inc
push
lret
and
jp
pop
inc
aas
or
test
pop
cli
stos
mov
xchg
jge
inc
pop
inc
loop
xor
sub
cmp
fisubl
ljmp
jmp
mov
and
push
dec
aas
xchg
push
icebp
sbb
int
sbb
adc
or
call
leave
test
daa
sahf
dec
bound
pop
sbb
jns
sahf
sarb
lret
push
sbb
push
pushw
sbb
jl
cmpb
test
add
ja
arpl
incb
ret
lock
ret
mov
ror
ficompl
div
cmpsb
rcrl
pop
sub
dec
sub
decb
dec
mov
mov
mov
imul
ficompl
cmpsl
mov
fildl
ds
sbb
scas
cmpsl
add
inc
test
xchg
popa
hlt
add
cmpsl
dec
inc
inc
add
jecxz
or
sti
jle
inc
test
mov
xor
sub
lret
inc
aad
jnp
xor
leave
or
inc
adc
adc
cwtl
cmovs
fsubrs
and
test
fmull
add
fdivp
mov
stos
data16
imul
lahf
sbb
lods
cltd
pop
inc
jecxz
idiv
out
xchg
cmpsb
dec
xor
cmpsb
cmp
fs
insb
es
incl
pushl
dec
cmp
addb
cmc
stos
and
sbb
cli
mov
movsb
or
cmc
cmp
mov
sub
movsl
stc
call
and
aas
insb
push
mov
data16
xchg
jle
cs
sti
add
xor
jg
inc
pop
and
sahf
inc
dec
sub
popa
out
mulb
out
in
mov
or
mov
and
cmpsl
lcall
mov
insl
nop
das
pop
and
in
movsb
cmpsb
repnz
cmpsb
cmp
flds
pop
and
es
cmpl
das
cltd
sti
dec
inc
jmp
movsl
movsl
sub
stc
shl
xchg
inc
int
mov
icebp
mov
popa
inc
and
shl
and
out
jmp
sub
in
sub
call
add
sub
retw
add
pop
cwtl
cmpb
dec
popl
or
inc
adcb
dec
in
mov
stc
pop
in
cmpsb
repnz
fld
jge
xor
data16
das
popa
fadds
flds
cmp
cltd
add
ds
out
pop
es
fs
cmp
add
cmp
xor
rcrl
idivb
cs
inc
pop
lods
jns
stc
mov
mov
inc
fwait
es
ret
flds
sbb
loopew
inc
out
mov
push
ret
stos
cwtl
cmpl
test
in
pop
xchg
adc
ret
inc
cmpl
dec
test
push
je
and
out
or
inc
sarl
sub
push
shrl
aam
sub
mov
test
sbb
mov
test
pop
addr16
mov
mov
jmp
and
aam
aad
movsl
inc
mov
adc
sbb
mov
out
cmp
dec
out
pop
ljmp
push
adcb
notb
inc
jp
data16
lock
ret
add
add
ret
leave
ret
js
push
xchg
ret
push
sub
out
popa
ret
mov
sahf
mov
xchg
mov
pop
inc
add
sbb
fnstenv
dec
add
dec
and
insb
push
les
dec
je
cmc
push
loop
dec
and
imul
les
shll
orl
loope
mov
jno
and
add
xchg
push
cli
jle
adc
lret
mov
inc
aam
pop
ret
dec
popl
into
inc
ret
repz
cmpsl
inc
push
and
push
and
add
test
in
pop
xchg
cmp
dec
test
loop
call
outsb
dec
sbb
je
icebp
push
outsb
repz
test
cmpsl
dec
test
pop
add
xchg
lds
mov
add
push
test
cmpsl
inc
addl
pop
addr16
test
ror
cltd
out
popa
cltd
test
cmp
out
jne
iret
dec
push
les
ficoml
sub
repnz
pop
or
aas
mov
add
add
iret
dec
push
add
fisubl
mov
mov
mov
sti
cmpsl
push
mov
fldenv
es
jge
jmp
lret
cs
in
jnp
rcl
and
in
jle
gs
mov
push
xchg
icebp
rclb
inc
and
aam
lret
orb
cltd
inc
pop
aam
pop
and
xchg
lods
pop
push
movsb
inc
mov
and
stos
mov
mov
dec
add
cmp
push
test
adc
ret
pusha
movsb
xchg
test
insb
lds
insl
arpl
mov
mov
cmp
push
mov
lock
adc
mov
ret
in
imul
sarl
cwtl
es
es
scas
shll
sub
sbb
adc
push
push
inc
cmpl
xor
pop
sbb
ffreep
int3
and
cmp
mov
jb
cltd
adc
sub
push
cmp
or
cmpsb
pop
push
and
xor
and
fsubrs
mov
add
pop
mov
xor
and
cmp
gs
sub
adc
push
hlt
and
ljmp
fdivs
or
data16
fiadds
in
push
mov
mov
es
rolb
out
mov
out
fnstsw
es
repnz
pop
fdiv
jp
out
lret
inc
mov
dec
or
out
push
mov
scas
push
sbb
inc
sbb
ljmp
or
add
fstps
imul
inc
xchg
inc
push
mov
mov
xor
scas
aaa
sbb
and
or
jae
cmp
aaa
pop
dec
lea
dec
jl
xlat
xchg
add
jae
cmp
lds
nop
xor
movsb
xchg
and
cwtl
inc
dec
mov
pop
int3
cwtl
mov
cmp
sub
xor
cwtl
loop
sub
mov
dec
xchg
outsl
mov
or
pop
lods
jle
cmpsl
xchg
xor
test
xor
push
sub
cs
test
cmp
jo
and
xor
sti
push
xor
push
mov
ss
faddp
cmp
mov
mov
lock
cmp
pop
idiv
cmp
pop
pop
push
pop
xchg
pop
push
sub
aas
cmp
pop
xchg
imul
std
mov
xchg
inc
stos
clc
jecxz
popf
adcb
test
push
sbb
aad
push
pop
pop
xor
sahf
das
cltd
jmp
jl
pop
push
push
pop
andb
mov
mov
cltd
cmp
sub
dec
mov
inc
xor
dec
mov
dec
cs
jge
loopne
pushf
inc
push
ss
bound
inc
cmp
lods
inc
sub
push
fs
push
addr16
jg
pushw
je
or
in
mov
push
out
lret
div
scas
jmp
pop
push
sbb
aam
mov
mov
cli
sub
into
or
mov
inc
loope
rcrl
fwait
and
add
test
pop
push
lods
and
outsl
pop
pop
or
add
push
lods
mov
lock
out
es
ficomps
dec
aaa
or
xor
call
nop
dec
sbb
fcomps
add
or
or
sarl
dec
inc
mov
inc
or
rcrl
aaa
mov
mov
out
js
loop
xchg
jns
outsb
aas
dec
popf
imul
pop
insb
cwtl
shll
gs
pop
sub
push
pop
mov
pop
xchg
les
es
insl
adc
inc
cmpsb
or
test
and
mov
rcll
add
mov
mov
adc
int
inc
xor
data16
mov
scas
mov
push
mov
out
sub
loop
push
mov
push
jg
or
cmp
cmpsl
push
cmp
mov
push
popf
std
popa
xor
push
sub
hlt
addr16
xlat
clc
or
lock
pop
insl
sub
into
add
loopne
shrb
in
adc
aas
sub
leave
in
in
fstpl
arpl
sub
cltd
inc
pop
mov
inc
adcb
cmp
rorl
push
add
cmp
xor
xchg
cmp
pop
or
inc
mov
jne
cmpb
inc
mov
mov
es
insl
inc
cmp
enter
fsubrs
mov
fwait
dec
lds
add
inc
adc
inc
addr16
sbb
pop
fnstcw
mov
jns
or
lcall
xchg
imul
insl
inc
add
xor
arpl
stos
jae
sarl
xchg
jle
xchg
dec
sub
sub
dec
fldl
sbbl
aad
cwtl
pop
mov
stos
mov
sbb
mov
lea
mov
mov
xor
xchg
xor
dec
lahf
insl
addb
xchg
insl
pop
shrw
scas
in
inc
and
xchg
in
mov
push
iret
jmp
xchg
xor
jo
fs
in
scas
xor
out
or
shrl
hlt
mov
call
pop
jp
sbb
mov
adc
lret
adc
mov
add
cmpsb
pop
js
out
test
sbb
frstor
fwait
xchg
cmp
dec
cltd
sub
sahf
loope
mov
loopne
hlt
roll
xchg
imul
fistps
and
sub
in
xor
je
movsl
decl
push
gs
inc
rcll
xor
mov
xor
movsl
push
cmp
ret
mulb
leave
jge
sub
out
jb
les
rolb
adc
sbb
leave
xor
xor
psubsb
jp
jbe
or
cwtl
leave
xor
loope
cmpsb
jmp
xchg
sahf
dec
sbb
sub
mov
pop
jmp
push
mov
sbb
mov
mov
push
cmp
fwait
mov
in
sbb
jge
in
mov
test
jno
jmp
pusha
mov
repz
aaa
lods
jmp
jo
push
dec
sbb
or
and
das
push
sub
cmp
pop
mov
push
pop
adc
ljmp
or
out
xor
pusha
pop
call
mov
pusha
cmpb
push
rcll
push
repz
bound
xor
divb
cmpsb
dec
iret
mov
aaa
es
xor
or
imul
or
cltd
in
repnz
sbb
pop
dec
test
xchg
test
jge
push
out
lahf
out
add
mov
or
jbe
icebp
mov
mov
in
adc
inc
push
sub
jb
dec
int
inc
das
fistps
or
mov
in
loop
or
ret
es
cmpb
or
mov
int3
jnp
sbb
sbb
int
adc
les
cltd
dec
mov
aam
push
cwtl
cmp
data16
lea
fisubl
cmp
cmpsb
gs
mov
sbb
jl
popa
xchg
dec
push
addr16
fisubl
xor
ja
clc
mov
movsb
sub
mov
push
mov
lret
test
lcall
fmull
int
lret
cmpsl
mov
fsubrs
shrb
mov
mov
push
fwait
dec
inc
lock
repnz
lret
dec
mov
in
divl
push
cmp
outsb
roll
push
or
sub
cmp
push
pop
mov
es
ret
or
dec
mov
pop
sub
movsb
inc
into
fisubrs
xor
jne
jle
pushf
aaa
cmpsb
popaw
ds
push
or
es
adc
aaa
mov
mov
lahf
xchg
cmp
or
addr16
std
in
xor
leave
xor
or
pop
ss
or
sarl
dec
mov
ds
jmp
jo
dec
pop
and
pop
imul
push
lods
push
mov
add
gs
mov
in
mov
mov
push
xor
repnz
push
loop
test
mov
dec
push
icebp
mov
fs
mov
push
stos
repz
dec
dec
cwtl
mov
lods
out
scas
pop
pop
fistpll
int3
sub
dec
int3
sub
lret
int3
sub
mov
scas
adc
dec
mov
sub
sbb
or
cmp
mov
data16
inc
and
jge
mov
adc
lahf
xchg
and
outsb
adc
or
clc
in
mov
sbb
or
fnstenv
and
push
cmp
push
add
stos
push
mov
pop
jp
mov
and
out
pop
mov
fxch
rcrl
xchg
mov
mov
push
jb
pop
movsl
das
add
adc
pop
test
orl
add
jl
fadd
test
cmp
push
xchg
cmpsl
dec
push
hlt
mov
lods
cs
cmpsl
mov
lea
cs
cli
test
xor
pushf
add
sahf
loop
aaa
or
movsb
mov
add
pop
dec
das
sbb
jle
mov
cmp
push
push
sti
xchg
inc
cwtl
mov
in
or
jle
mov
lock
dec
outsb
inc
dec
jle
push
dec
fbld
sub
mov
push
mov
mov
jo
loop
dec
stos
pop
das
mov
inc
jae
mov
cmp
push
das
out
xlat
dec
sub
xor
sub
insb
mov
movsb
push
or
xor
test
xor
push
fnstcw
mov
cmp
sub
dec
dec
leave
les
cmp
es
call
and
hlt
das
mov
leave
data16
cmp
and
lret
scas
scas
and
shlb
mov
pop
mov
sub
push
scas
push
mov
push
xor
xor
push
dec
fldt
jp
out
cmpsb
mov
dec
arpl
repnz
pop
push
imul
out
adc
pop
mov
xchg
xchg
ss
mov
fldcw
loop
filds
mov
adc
mov
mov
ret
push
mov
xchg
popf
imull
ja
adc
mov
pop
cwtl
rol
pop
and
mov
cmp
mov
jmp
sbb
sarb
loope
lock
inc
jmp
mov
sarl
push
mov
mov
in
mov
lret
adc
sub
xor
push
jb
sahf
cmp
andl
xchg
lahf
fbld
sub
and
imul
adc
popa
mov
popa
pop
adc
pop
ljmp
aad
and
xrelease
inc
or
inc
pop
aam
dec
std
aad
and
sub
push
push
aas
sbb
or
push
jne
mov
cmpsl
mov
popa
sub
lret
out
cmp
xchg
jb
outsl
ds
mov
xor
cmp
sbb
mov
enter
xchg
pop
sub
push
mov
inc
pop
enter
push
pop
aam
adc
cmp
mov
push
adc
push
adc
and
push
mov
and
push
sbb
xor
cmpsb
mov
add
ffree
push
adc
dec
inc
aam
sub
dec
cmp
xlat
es
mov
addr16
pushf
xor
sahf
xchg
push
das
dec
push
clc
or
in
add
sbb
movsl
popf
push
rolb
jge
sbb
lcall
cmc
mov
push
mov
popa
push
sub
jns
jle
loopew
pop
inc
imul
add
subb
cmp
fsub
add
lock
inc
adc
out
popa
adc
das
sbb
mov
xor
pop
xchg
in
or
int3
ret
loope
xor
push
scas
dec
push
dec
or
sbb
or
jle
jle
cs
push
incb
and
and
dec
xor
pop
int3
push
push
gs
shrl
push
and
and
out
cmpsl
orb
out
dec
sub
mov
shll
xchg
fwait
xor
dec
mov
mov
ret
push
js
pop
push
pop
cmpsl
ficoml
mov
xor
les
testl
and
fisttpll
mov
sub
es
xchg
mov
sub
adc
xor
scas
loope
gs
or
aaa
mov
add
and
imul
jmp
xchg
jp
in
xlat
push
mov
and
rcrl
into
mov
dec
data16
dec
xor
dec
jecxz
loopne
in
xchg
pushf
dec
xchg
insl
push
xchg
aas
adc
mov
mov
call
loope
add
xor
xchg
jl
pusha
xlat
ss
xor
xor
int
sub
mov
pop
repz
cmc
cltd
ss
gs
js
sbb
jg
arpl
inc
sbb
lcall
sbb
cmp
xor
mov
call
testl
jbe
mov
fcoms
bswap
lods
sub
push
inc
andl
jae
mov
mov
popa
daa
dec
dec
ds
or
sarl
sarl
out
push
dec
xor
mov
loope
stc
mov
bound
lcall
cmp
cmp
inc
xchg
xchg
xchg
into
push
test
xlat
push
pop
inc
or
in
cwtl
pop
pop
cmp
push
loope
xchg
cmp
cmp
repnz
cwtl
in
sbb
add
nop
sub
rcrl
das
pop
push
fstps
mov
clc
addr16
lret
sti
adc
cmpsl
dec
sbb
rcrb
dec
adcl
push
fldl2t
repnz
fcom
xchg
xor
fildl
out
imul
shrb
mov
arpl
ljmp
fcomps
icebp
cmp
fistl
xchg
jmp
adc
out
sbb
jno
inc
cmp
dec
jns
adc
fistps
fadds
lcall
rclb
xorb
mov
inc
jle
xor
inc
mov
test
loopne
lret
add
cltd
xor
sub
sarb
sti
xor
lahf
xchg
sbb
pop
aad
jne
adc
or
adc
movsl
and
movsb
fbld
inc
sbbb
popa
shrl
cmp
and
cmp
push
sub
pop
pushf
inc
data16
jae
add
in
xor
mov
loope
inc
int
mov
sbb
push
mov
mov
dec
int3
and
inc
jns
movsb
ficoml
cltd
or
sbbl
mov
xor
sub
mov
mov
pop
push
fcomp
mov
ds
mov
push
inc
aas
rcrb
sub
sarl
out
pop
and
or
ss
jecxz
cli
sub
xchg
shrb
mov
lahf
fnstenv
pop
sub
sbb
or
xchg
sbb
add
inc
inc
adcb
adc
scas
jl
inc
and
iret
fisubrs
mov
push
dec
rcrl
mov
fwait
rorb
popf
roll
lea
out
pop
pop
jmp
push
mov
jno
xor
inc
out
insb
ficoml
or
std
or
cwtl
or
mov
and
pop
push
adc
mov
shll
scas
and
adc
test
dec
pop
sub
pop
push
jecxz
and
add
into
aam
push
xchg
ficoml
lret
cmp
xchg
shrb
jmp
test
xchg
aaa
jnp
push
movsb
pop
test
lcall
and
add
rclb
pop
add
jae
std
cmp
add
xor
lcall
add
test
mov
orb
lods
adc
ret
mov
sub
sahf
insl
add
jmp
bound
dec
inc
ficoml
mov
test
and
xor
in
ffreep
out
pop
ficoml
inc
dec
pop
out
fsub
lods
data16
out
lock
rolb
sbb
lock
push
fnstenv
mov
out
push
lret
or
fisubl
add
push
imul
rcrb
movsl
fwait
jo
push
incl
aas
mov
xlat
imulb
fwait
test
fists
pushf
xor
aad
addr16
out
pop
scas
sub
xchg
xor
ds
cmp
mov
xchg
negb
pop
mov
sahf
sbb
mov
dec
inc
pop
xor
arpl
std
sbb
pop
nop
pop
dec
scas
repz
mov
inc
fimuls
mov
xchg
sahf
push
sbb
stos
fwait
adc
push
xchg
hlt
fwait
daa
pop
mov
std
add
xor
rcrb
negl
popa
inc
mov
out
es
xlat
xchg
pop
orb
pop
mov
fldcw
call
scas
fwait
add
sbbb
dec
pusha
push
sub
xchg
fildll
mov
xor
jmp
repnz
pusha
sub
jp
cli
fcmovnb
cmp
push
sbb
addr16
incb
xor
pop
mov
mov
stos
pop
inc
cmp
jnp
sub
aas
dec
jne
test
sub
mov
repnz
daa
add
and
dec
loop
push
sbb
hlt
in
mov
loopne
and
es
mov
mov
roll
aas
mov
push
xlat
mov
in
pop
sti
bound
sarl
sub
push
xchg
and
inc
ret
push
mov
mulb
mov
push
jb
clc
xor
and
sbb
sbb
adc
push
call
pop
ljmp
fs
fstpl
enter
xor
adc
int
pop
aas
cmp
mov
ds
push
xchg
pop
dec
mov
pushf
xchg
xor
adc
mov
test
sub
cmp
xor
inc
mov
push
pushf
mov
ds
fistpll
adc
sbb
add
add
mov
mov
or
add
call
adc
aad
xor
fwait
mov
inc
mov
out
orl
popf
lock
lahf
xchg
cmpsl
rcrl
outsl
ss
stos
and
mov
scas
divps
ror
and
clc
xchg
inc
cmpsb
jne
xchg
xor
fsubl
fisubl
lahf
repnz
fsubl
lret
test
mov
xlat
pushf
ret
mov
fnstenv
les
inc
add
xor
pusha
xor
dec
les
xchg
push
leave
sbb
lea
xchg
mov
mov
inc
clc
outsb
jb
inc
dec
add
and
mov
dec
or
xor
dec
mov
cmp
cmp
xlat
jmp
sahf
insb
fnstcw
in
pop
lahf
in
pop
mov
in
clc
sub
push
cld
jmp
aas
cmpsl
dec
add
loopne
xor
sbb
test
push
cmpsl
dec
fisubrl
popa
push
decb
cwtl
xor
inc
loopne
push
aam
xor
icebp
push
popf
fsubrs
test
mov
aam
xor
inc
adc
mov
and
add
pop
repnz
out
dec
popf
lahf
movsl
adc
mov
sbb
stos
rcr
xor
mov
out
push
pop
mov
jno
pushf
in
pop
cmp
mov
enter
push
add
pop
daa
pop
cmp
test
sarl
jmp
adc
sub
test
dec
dec
mov
dec
lret
dec
push
dec
or
xchg
xor
jmp
mov
es
lcall
xor
fwait
xor
stos
popa
sbb
test
inc
cmp
xor
mov
imul
sbb
xor
mov
xor
xor
push
push
test
bound
adc
pop
push
dec
lcall
pusha
dec
test
popa
xchg
leave
add
or
push
mov
pop
mov
popf
mov
xor
pop
fsts
dec
pop
dec
jno
mov
mov
sbbl
dec
test
shrb
enter
add
xchg
cmp
sbb
inc
xlat
sbb
mov
dec
enter
lcall
test
jbe,pt
pop
add
pop
cwtl
push
cs
xchg
add
sahf
ret
nop
stos
movsb
mov
stos
add
movsl
fistps
fcmovnbe
add
pop
push
loope
mov
addr16
fwait
sti
push
push
sbb
aad
push
sbb
xchg
les
outsl
fwait
push
xchg
xorl
sahf
xchg
sub
pop
add
arpl
fs
cs
mov
std
xchg
daa
test
int3
jecxz
mov
int
or
or
add
mov
idivb
mov
cwtl
cs
fimuls
pop
fsubp
cltd
cs
dec
pop
faddl
test
xor
sub
push
out
xor
out
dec
mov
pop
in
daa
mov
mov
push
xchg
pop
lcall
sub
cwtl
pop
or
and
lret
or
fldenv
shlb
pop
lock
mov
mov
push
gs
xchg
xor
fwait
or
xchg
mov
cmp
cmp
or
shl
lods
jmp
std
push
mov
cltd
pop
lahf
lea
push
sub
jno
xor
xor
xor
es
add
aas
lahf
arpl
or
sub
and
fldcw
sbb
pop
adc
and
lods
dec
aam
xchg
and
lahf
out
call
mov
and
mov
pop
repnz
fcmovne
cmp
imul
and
les
outsl
loop
xor
mov
push
fdivrl
lock
pop
cmp
ja
bound
ret
fbstp
cmp
xor
cmp
adc
add
jns
push
jecxz
pushw
cmp
mov
je
jo
imul
sbb
adcb
jl
xor
add
inc
jg
mov
jae
mov
dec
and
insb
mov
fldcw
cwtl
and
lahf
and
inc
sub
add
adc
ret
sbb
punpckhbw
jl
dec
imulb
cmpsb
data16
mov
mov
cmp
dec
int3
fldenv
sub
ss
dec
into
pop
arpl
pusha
sub
flds
cmp
outsb
inc
adc
test
dec
pop
cmp
xorb
xchg
mov
int
call
cs
lock
cmp
mov
xor
ljmp
pusha
jmp
in
sarl
or
lods
aam
cs
xchg
sub
and
xchg
push
pop
jmp
icebp
loopne
or
sub
cltd
icebp
das
rol
mov
movsl
ret
loopne
pop
sub
enter
bound
mov
lods
lds
pushf
repnz
loopne
jo
lds
sbb
dec
lcall
sbb
lods
and
cmp
dec
pop
int3
dec
cs
out
sbb
add
loope
push
and
xor
sbb
dec
and
add
sti
mov
out
xor
dec
cmpsb
mov
arpl
popa
in
push
mov
cmpsb
and
jns
pop
cltd
xchg
cmp
dec
sahf
mov
repz
and
aam
xchg
dec
lods
mov
mov
addr16
jnp
pusha
jge
add
push
cmp
mov
cld
test
imul
outsb
jbe
and
xchg
pop
jb
je
ficoms
outsb
add
cmpsl
pop
arpl
jmp
test
jp
lahf
jle
jbe
push
repz
jmp
and
mov
shrl
arpl
imul
push
or
movsl
iret
push
push
in
cmpsl
mov
shrl
jg
loope
outsl
int
inc
mov
pop
add
lds
ds
mov
dec
adc
xlat
js
xorl
leave
mov
lock
or
dec
fildll
and
and
push
aad
pop
push
push
fwait
addb
adc
and
pop
mov
sbb
xchg
cmp
mov
ficompl
mov
cmp
inc
ljmp
and
add
xchg
das
or
and
add
fnstcw
adc
add
sbb
pop
rcrl
xor
aad
push
push
lds
and
dec
pop
in
xor
in
out
sub
cmp
mov
sub
repz
mov
xor
test
gs
xor
cmp
pop
fs
or
mov
lods
cmp
xchg
cmp
les
jecxz
add
bound
aad
dec
in
add
out
sub
cmp
lret
fstps
xor
fistpll
test
mov
lock
xor
fsubs
inc
mov
mov
jo
pusha
cs
and
and
sbb
mov
sbb
pop
and
imul
mov
mov
push
jge
push
pop
call
arpl
ret
imul
loop
xor
mov
in
pop
and
xorl
xor
fistpll
cli
jbe
dec
push
mov
loop
jne
pop
cmp
repz
jno
sarl
loopne
daa
imul
xchg
add
fstpt
sub
repz
fcompl
leave
data16
arpl
and
and
jl
insb
sar
xchg
xor
pusha
into
push
adc
inc
sbb
cmp
and
popf
icebp
or
aas
out
aas
xor
arpl
dec
bound
push
ficompl
bound
jo
cmp
cmp
mov
dec
mov
mov
and
add
lds
decb
push
les
cmp
cmp
pop
gs
cmp
pop
mov
and
ljmp
mov
push
mov
mov
add
adc
cmp
cmp
mov
das
adc
adc
cmp
fcomps
jecxz
sbb
fldenv
test
mov
and
inc
aaa
push
and
xchg
push
dec
xchg
xchg
inc
dec
cmp
push
mov
cmp
data16
xor
in
fldcw
sbb
jae
call
movsl
shrl
and
mov
lods
xlat
fistpll
pusha
les
sbb
std
clc
rcrb
inc
push
lahf
pop
fnstcw
in
dec
fbld
xor
popa
shll
pop
push
inc
pop
out
jbe
shlb
or
lds
push
push
push
std
xor
test
push
dec
adc
cld
push
mov
cltd
fs
cwtl
in
fidivl
dec
daa
or
movsb
xchg
push
mov
mov
negb
xor
and
data16
movsb
mov
sbb
cmp
fistl
aas
mov
in
xor
and
pop
add
mov
in
stc
dec
pusha
rcl
cwtl
leave
and
push
cmp
fldenv
cmp
push
cmp
and
mull
mov
pop
mov
fldenv
jno
xor
cmp
out
repnz
or
add
arpl
gs
and
cmp
movsl
loop
aaa
daa
lea
pop
cwtl
mov
movsl
stos
data16
pop
xchg
fnstsw
imul
test
in
clc
cmpsl
es
fimull
in
mov
push
push
adc
inc
stc
fsubp
xchg
dec
addr16
in
in
out
arpl
push
rol
mov
loope
xor
jb
lcall
pop
sbb
addr16
mov
imul
aaa
lret
jne
dec
ljmp
lods
data16
pushf
sbb
jmp
into
sub
sbb
aaa
data16
das
jge
sub
mov
rorl
fwait
cltd
data16
dec
imul
in
cwtl
mov
jne
loope
fs
push
out
mov
cmc
mov
fs
xor
pusha
in
imul
mov
sub
xchg
and
imul
andb
outsl
xchg
xor
pop
jb
xor
pop
jbe
cmc
faddl
clc
fisubl
sahf
jle
fimuls
dec
jnp
push
into
xchg
lods
arpl
sbb
lds
jne
sub
or
fs
add
fsubrs
xlat
out
push
push
mov
jl
insl
rcrl
testb
pusha
call
mov
sbbb
pusha
pushf
sbb
pop
and
lock
ja
bound
jo
insb
cwtl
and
push
fwait
cs
mov
mov
push
pop
sub
pusha
pusha
test
stos
enter
loope
add
clc
test
inc
ret
mov
test
fbstp
fadds
fdivrs
fwait
daa
int
shlb
push
cmpsb
lahf
arpl
loop
jmp
movsl
xor
or
data16
shlb
loop
cld
test
xchg
clc
into
mov
xchg
stos
push
data16
pushf
pop
or
ret
xor
cmc
pushf
dec
jl
rorb
cmp
mov
xchg
sub
les
add
popa
jns
call
loopne
in
call
adc
push
mov
push
jns
pop
jecxz
fcomp
or
mov
fnstsw
lcall
mov
roll
test
imul
fidivl
test
loopne
pop
fabs
test
rcll
mov
cmpsb
and
test
adc
pop
or
xchg
out
data16
fucomi
cld
out
push
test
cs
xchg
push
or
fwait
mov
imul
into
inc
jp
jo
int
mov
jp
movsl
xor
frstor
ds
mov
xchg
add
jl
and
jp
in
test
test
fwait
pop
outsl
outsb
jl
fstps
arpl
les
mov
inc
pop
and
inc
in
nop
mov
sub
gs
sub
mov
es
fdivrl
out
add
pop
push
xorl
cmp
dec
rcl
ret
push
mov
cmpsl
and
mulb
jae
test
movsb
pop
test
push
lret
pop
dec
inc
push
negl
mov
test
adc
cmpsb
rorb
shrb
and
xor
std
aam
mov
bound
mov
sub
adc
or
das
jp
xor
jmp
test
add
push
pop
pop
or
mov
out
pop
testl
push
inc
fsin
fcoms
mov
inc
je
add
or
cmc
fistl
mov
push
dec
mov
xchg
pop
add
xor
mov
push
xor
pushl
movsl
xor
mov
pop
out
mov
fwait
or
aam
inc
cmp
mov
imul
andl
data16
cmp
fcoms
lock
je
sub
sub
cwtl
insb
stos
push
loopne
gs
es
test
xchg
sahf
push
fs
or
push
iret
cmp
inc
addr16
push
sub
data16
inc
cld
cmpsl
add
mov
xor
add
mov
lods
in
mov
loopne
mov
dec
sbb
pushf
mov
push
imul
push
jmp
imul
lahf
pop
in
inc
pop
add
sti
add
stos
push
mov
shrb
sbb
and
dec
fsubr
cmp
test
int3
insl
lods
or
loop
pushf
pop
and
es
stc
add
stc
enter
push
and
orb
ljmp
imul
inc
subb
ljmp
sbb
fimull
mov
sub
rcrb
clc
jmp
or
or
cmp
bound
scas
insl
push
leave
push
stos
stos
in
xchg
rorb
mov
add
arpl
dec
sub
ficomps
mov
jl
jae
bound
xchg
insb
lea
pop
sub
pop
and
popa
cs
mov
mov
sub
clc
std
pop
or
out
xchg
popa
jge
cmp
push
jge
push
ljmp
ljmp
dec
mov
sub
add
mov
mov
sbb
rol
fcompp
add
mulps
sbb
lea
adc
ret
push
sarl
or
lds
xchg
cmp
mov
pop
repnz
fdivrs
or
sbb
mov
jecxz
mov
mov
add
add
pop
dec
mov
mov
std
outsl
fstpt
push
inc
fldcw
jno
or
xchg
cmp
mov
push
push
mov
dec
add
repnz
fs
dec
xchg
mov
pop
pop
adc
arpl
in
fwait
je
dec
sbb
add
add
outsw
stos
mov
cmpsl
lods
lea
lods
add
gs
jmp
mov
mov
mov
movsl
pop
pop
adc
dec
inc
arpl
gs
imul
xchg
pop
mov
les
xchg
imul
sbb
cmp
pop
lea
je
adc
cmp
imul
orl
push
dec
inc
or
dec
stos
fldcw
cmp
add
repnz
xchg
orl
bound
insb
lods
add
pop
sub
andb
add
xchg
xor
or
in
jl
pop
dec
pop
insl
rclb
popf
shlb
int3
movsb
es
scas
nop
xchg
cmc
inc
push
jmp
xchg
cmpsb
cmp
scas
addb
imul
mov
fldenv
loopne
cmp
sbb
pop
dec
int
addr16
inc
inc
cltd
lods
push
jle
adcb
stc
xchg
jmp
popf
jl
cmp
in
in
cmp
add
pop
xchg
push
pop
in
xor
or
inc
push
xchg
xchg
dec
jae
jnp
jns
xchg
stos
jnp
sub
xchg
movsb
fldln2
ljmp
push
dec
fmull
cmp
and
movsb
es
xor
pop
cld
cmp
cmp
das
aam
and
sbb
in
mov
into
mov
mov
aas
and
mov
popa
push
sti
mov
test
cmp
in
imul
daa
fsts
mov
pop
fsts
cmp
jg,pt
sub
fiadds
mov
test
data16
and
sbb
cmp
inc
mov
clc
push
rcrb
dec
pop
xor
lods
cmp
push
popa
xchg
imul
jne
adc
push
cmp
js
addr16
std
in
cmpsb
sub
orb
jno
les
and
cmp
rorl
mov
inc
lock
push
insl
insb
jnp
xor
sbb
or
and
lods
adc
rcrl
sti
fsubs
imul
add
xlat
cmp
xchg
push
sub
cltd
mov
cwtl
and
and
es
lods
add
gs
push
inc
testb
mov
movl
hlt
sbb
clc
cmpsl
js
inc
cmc
aad
inc
mov
loopne
dec
xchg
sbb
aaa
pop
inc
xor
add
cmpsb
or
push
push
mov
lcall
push
cmp
lods
sub
decb
imul
rorl
aam
push
in
push
dec
nop
mov
and
lock
mov
pop
cmp
and
je
mov
mov
mov
xor
iret
icebp
push
loope
xor
gs
xor
or
cwtl
add
ja
iret
ret
leave
mov
mov
xor
push
push
daa
cmp
push
xor
xor
push
hlt
rcrb
cmpsl
and
jnp
sub
dec
pop
fisubs
fnstsw
or
lods
adc
es
insl
cmp
nop
icebp
std
push
arpl
insl
lret
data16
dec
lods
iret
push
mov
mov
fdivrl
ss
jne
or
cmp
data16
fistl
mov
push
and
sbb
mov
jo
aad
ret
xor
das
sbb
cmpsl
stc
sbb
and
dec
ljmp
jge
aam
sbb
add
jecxz
adc
iret
dec
cli
lods
xchg
push
jl
mov
fidivrl
loop
pop
jnp
add
xchg
insb
jle
pop
cmp
xchg
out
mov
pop
addr16
push
sbb
aad
xor
pop
popa
sahf
push
xor
insl
cmp
or
push
jmp
bound
dec
fs
enter
jnp
jno
adc
mov
and
xchg
pop
push
mov
sbbb
jnp
mov
pop
sub
inc
aad
lock
test
movsb
add
lahf
cmp
lret
mov
sbb
add
aas
push
das
shll
or
out
jnp
ficompl
arpl
jmp
cwtl
cmp
push
xor
and
jg
and
enter
sbb
arpl
mov
mov
insb
sbb
add
add
mov
lock
sahf
outsb
jecxz
cs
cmp
push
or
jmp
pop
call
adc
or
dec
xor
stos
jle
stos
repz
inc
xchg
ljmp
adcl
jo
faddl
pop
addr16
xor
ja
je
mov
jecxz
adc
bound
xor
fldt
jbe
lods
int
sub
xchg
xor
jl
repnz
stc
repnz
adcb
sahf
xchg
decb
or
dec
fs
xchg
das
repnz
adc
jecxz
jo
imul
xor
int
jae
in
ja
jmp
out
mov
jecxz
and
xor
inc
repnz
jnp
inc
or
test
sbb
mov
and
jecxz
addr16
shll
call
stos
and
dec
and
bound
sub
sbb
mov
clc
cmp
or
jno
mov
lock
stos
dec
lock
das
or
or
das
or
fists
mov
outsl
movsb
cmp
inc
sarl
outsl
xchg
dec
dec
shr
scas
stc
shlb
sub
imulb
ja
popa
ja,pn
push
pushf
mov
sbb
xor
mov
push
data16
push
mov
mov
cli
icebp
push
pop
aam
push
pusha
pop
das
inc
fstl
adc
lret
rorl
pop
sub
test
xchg
inc
jg
push
rcll
xchg
shl
hlt
xchg
xor
loopne
cs
movsl
mov
outsb
push
aad
jp
and
mov
push
daa
test
out
pusha
cmp
addr16
mov
xor
in
dec
jp
mov
lahf
mov
fidivs
enter
mov
mov
and
mov
xchg
loope
mov
lahf
jns
sbb
cmp
lock
or
xor
es
mov
push
pusha
mov
shrl
subb
fcmovne
sbb
cwtl
mov
mov
aad
push
fldcw
xor
cmp
inc
pop
jle
xor
imul
iret
enter
add
cli
inc
pop
dec
pop
xchg
in
in
fwait
inc
sub
cs
jo
addb
call
and
jo
stos
sahf
add
gs
dec
gs
icebp
cmp
in
inc
cwtl
pop
dec
and
fimull
xlat
cmpsl
pop
inc
fs
and
mov
js
xchg
adc
mov
push
inc
pop
push
and
inc
dec
fsts
and
ss
addr16
mov
xlat
jp
test
stos
sub
jp
push
mov
in
lahf
lods
cmp
lcall
imul
lods
sub
mov
scas
repnz
jne
mov
xor
jnp
insb
sub
aad
aad
add
xor
mov
les
in
xor
mov
call
and
std
dec
inc
movsb
in
cmpsl
insb
sub
addr16
fcmovb
into
loope
incb
inc
sub
rcrl
xor
call
out
jmp
jle
jl
pop
mov
cmp
mov
je
clc
and
mov
push
jp
sbb
in
jp
xchg
push
movb
pop
sbb
mov
add
sub
dec
bnd
mov
outsl
mov
js
repnz
es
ja
mov
outsl
je
ljmp
inc
pop
xor
fnstenv
das
jmp
jl
mov
shrl
or
sub
movsb
pop
fiadds
mov
lret
mov
xchg
or
lock
cltd
dec
test
pop
cmp
lock
test
or
loope
cmp
mov
jbe
push
push
lcall
repz
pop
dec
sub
push
es
repz
repz
xor
rep
fwait
sub
sub
out
stos
jp
xchg
cs
aad
jae
je
jle
xor
xor
inc
dec
xchg
ror
xor
xor
xor
jg
push
mov
pop
ss
mov
std
inc
and
cld
lret
neg
push
xchg
mov
jg
mov
sbb
jg
loope
lods
jae
xor
lcall
insl
lods
lcall
mov
xor
sti
aas
xor
mov
mov
out
adc
psadbw
add
outsb
enter
sbb
sbb
iret
mov
stos
and
push
mov
pop
mov
mov
cmc
dec
push
cmp
fistpll
xchg
decl
jecxz
xor
out
out
stos
fdiv
mulb
mov
xor
mov
les
fwait
sbb
in
mov
cmp
pop
aas
fcomps
stc
cmp
xor
pop
clc
cmc
and
mov
jb
fiaddl
push
and
pop
mov
in
stos
push
xor
sbb
and
dec
xor
sub
shlb
shlb
mov
sbb
cld
gs
xor
or
iret
sar
add
pop
jecxz
cmp
inc
fucomi
lgs
cmp
adc
imul
les
mov
dec
aaa
subb
cmp
daa
mov
iret
in
jg
gs
nop
dec
jmp
push
inc
mov
add
notb
imul
imul
adc
je
stos
mov
in
mov
sbb
cmp
fdivs
sub
sbb
jecxz
out
mov
cmp
stos
sbb
loopne
leave
push
cmc
nop
push
sbb
lods
stos
out
cmp
sbb
bound
lcall
dec
and
ss
push
xor
or
stc
loopne
imul
cwtl
jo
daa
subb
mov
inc
pop
dec
das
shr
arpl
jns
das
xor
mov
pop
mov
jo
in
pop
mov
dec
cmp
roll
jmp
pusha
adc
imul
dec
pop
sub
cmp
fsubl
xor
stos
fsubl
xor
sub
pop
dec
mov
or
xor
enter
adc
mov
cmpsl
arpl
xor
imulb
ret
xorb
scas
fucomi
pop
dec
repnz
out
mov
stos
xor
jne
imul
jne
imul
in
sbb
cmp
jl
dec
aaa
jmp
mov
mov
mov
pop
push
aaa
inc
mov
out
push
cmpsl
or
jg
jge
les
adc
sub
rcrb
sbb
add
or
jne
int3
xchg
dec
mov
pop
and
lock
push
addr16
cmp
or
push
imul
sub
mov
test
jp
insl
cltd
mov
jb
mov
pop
setg
pusha
and
rcr
ret
adc
gs
test
andb
in
and
aaa
rcrb
in
xor
cmp
mov
adc
in
daa
pusha
xor
in
roll
mov
sbb
repnz
push
pop
and
icebp
mov
cmc
outsb
mov
push
int3
dec
mov
adc
cmc
push
mov
aad
gs
cs
push
adc
push
rcrl
js
mov
adc
bound
imul
jge
cmp
adc
and
jo
out
loope
imul
ds
mov
pop
or
out
pop
inc
shr
aas
jns
pop
adc
fdivrp
rcll
mov
mov
or
xor
cmp
das
mov
mov
fistps
mov
and
rcr
mov
pushaw
mov
das
outsb
cmp
cmp
add
and
jmp
xor
cmp
lock
fcomps
cwtl
repz
push
cmp
jo
pop
cmp
enter
cwtl
dec
or
jp
enter
sub
fisttpl
js
gs
loopne
fs
or
popf
cmp
pop
lds
sbb
ja
ljmp
jns
sub
iret
mov
cmp
adc
or
cmp
jmp
or
push
sbb
cwtl
mov
jae
mov
or
push
ret
push
imul
scas
jno
lahf
jecxz
add
adc
xchg
sbb
imul
lock
bound
addr16
sub
pop
mov
dec
jb
xchg
addr16
into
lods
in
push
fs
jmp
loopne
sub
adc
and
sbb
dec
push
std
mov
stos
mov
ds
dec
loopne
stos
dec
iret
and
imul
push
xchg
fiaddl
dec
notb
mov
mov
ficompl
dec
lods
fnstcw
cmp
dec
ficomps
add
jbe
dec
push
out
popf
or
mov
sub
lret
pop
ljmp
and
jb
add
xchg
and
lcall
ret
cmp
pop
adcb
das
leave
in
fisttps
lahf
mov
add
data16
fdivrs
adc
into
push
push
ljmp
ljmp
out
dec
lods
cld
jle
push
pop
dec
push
fisubrl
push
cld
out
cmp
cld
jle
inc
cltd
cmp
add
jg
sbb
dec
push
and
push
adc
fldl
aad
sar
push
pop
xor
mov
dec
pop
dec
mov
pushf
or
scas
jmp
addr16
sbb
sti
aam
cmp
push
imul
mov
sti
cmpsb
mov
push
enter
add
sbb
push
loop
inc
fildll
mov
cmp
sub
fidivs
imul
lds
lahf
mov
ret
out
and
push
fbld
or
fimuls
cmp
dec
jns
lahf
jle
dec
push
push
mov
sbb
mov
sub
and
and
icebp
insb
shll
or
popfw
aad
in
out
xor
pop
shl
leave
int3
pop
push
jbe
fwait
jo
xchg
or
into
insb
xchg
std
cli
jl
stos
mov
push
jb
fsubrs
gs
push
int3
dec
sahf
and
sbb
xor
mov
push
jl
ss
inc
cltd
gs
es
je
fidivrs
imul
cmpsb
xor
scas
cs
lods
xchg
mov
jne
sub
insb
pop
pop
loopne
sahf
jl
cmc
rorl
or
cmpsb
adc
icebp
cld
out
or
repnz
cld
cmpsl
and
fldenv
rcll
cmp
aad
cmp
outsb
push
mov
xchg
pop
adc
xchg
mull
jo
inc
mov
cltd
cmp
dec
sub
cmp
dec
into
or
xor
mov
lock
jmp
inc
outsb
xor
fs
dec
jnp
popf
cmp
xchg
xor
sbb
scas
jbe
ja
sbb
pop
dec
add
or
adc
mov
xor
add
fcomi
and
dec
lods
in
push
aad
xor
jl
mov
faddl
test
inc
movsb
es
jl
jne
clc
cs
je
aam
dec
test
das
imul
clc
cmc
cmp
sub
mov
sti
mov
test
jle
and
push
fists
sahf
out
mov
sub
dec
cmc
rorl
xchg
je
stc
mov
xchg
test
mov
xchg
pop
lock
rorb
imul
cmp
fimuls
mov
loopne
cmc
jo
pop
cmp
scas
movsb
push
push
or
sub
xor
push
add
std
lret
and
popf
ljmp
add
cmp
pop
or
hlt
xlat
aad
xor
ds
push
mov
push
dec
pushf
push
ftst
mov
mov
pop
pop
xchg
cmp
add
jl
into
or
inc
rorl
cmp
dec
mov
out
in
and
or
js
inc
adc
push
jp
icebp
jns
int
or
and
mov
pop
iret
xchg
lock
mov
sbb
lods
adc
xchg
adc
push
xchg
xor
xchg
stc
sub
lock
xor
cmp
repz
movl
or
mul
lahf
lock
and
dec
sub
stos
sarl
in
loopew
mov
cmp
jmp
imul
icebp
mov
sub
aas
mov
dec
in
add
mov
push
push
aad
mov
flds
jnp
das
dec
data16
adc
leave
xchg
roll
lods
adc
pop
mov
repnz
out
cmpsl
cmc
repnz
cmpsl
sbb
add
pop
daa
xor
mov
xor
cld
gs
add
and
mov
mov
jne
mov
push
fidivs
jns
fs
mov
xchg
mov
pcmpgtd
push
or
xchg
cmpsb
scas
lahf
and
data16
xchg
mov
lcall
xor
loope
popf
add
jbe
mov
test
in
add
mov
leave
insl
lods
jns
data16
dec
mov
data16
fwait
cmp
xor
xor
scas
mov
in
pop
lock
add
push
iretw
push
pusha
cld
lcall
mov
sarb
and
clc
cmpsb
push
aam
enter
dec
push
dec
loopne
sti
cwtl
js
ss
data16
int3
out
mov
movsb
stos
ret
and
adc
orl
ljmp
je
push
xabort
dec
fimuls
in
cwtl
int3
es
ljmp
mov
push
hlt
sub
sub
clc
sub
adc
xchg
sub
add
popf
lea
subb
aas
outsb
out
js
into
xor
aaa
mov
mov
jle
pop
pop
aam
rorl
inc
inc
xor
xchg
add
push
pop
pop
push
fistpl
xchg
sbb
fs
or
nop
inc
xchg
cwtl
and
aad
imul
cmp
jg
std
xor
dec
lods
divb
jmp
push
jge
sti
dec
aad
or
or
roll
jle
fs
fbstp
pop
cmp
insl
add
add
aas
dec
mov
lock
das
insl
in
les
and
push
jecxz
aam
dec
xor
jb
sub
xor
cs
pop
data16
and
mov
pop
xchg
push
dec
dec
arpl
xchg
mov
xchg
adc
lock
mov
or
fwait
jbe
inc
and
and
int
jne
in
sub
imul
adc
imul
shlb
jne
insb
and
inc
cmp
lods
push
outsb
das
dec
mov
dec
sub
inc
flds
mov
sahf
out
movsl
xchg
dec
inc
imul
aam
pop
sarl
xchg
mov
in
dec
and
xor
mov
pop
and
mov
movsl
arpl
inc
test
lock
lds
lods
loopne
xchg
push
pusha
push
icebp
pop
into
ss
iret
jmp
pop
jno
das
aad
stc
sub
xchg
push
jns
lret
or
adc
decl
mov
cmp
pop
data16
mov
push
pop
jecxz
sbb
mov
sub
cmp
repnz
rcll
jl
mov
xor
fld
push
mov
out
xor
aad
mov
movsl
sbb
adc
ss
fstps
repz
lcall
inc
iretw
cmp
xor
int
sbb
and
cld
repnz
sbb
pop
je
loope
xchg
add
dec
sbb
shll
push
out
ss
int3
out
cmp
shl
mov
dec
aad
or
jo
data16
or
flds
jge
movsb
into
lock
cmpsl
sub
aas
lods
mov
hlt
cmp
xor
imul
cli
stos
test
flds
mov
dec
inc
cmpsl
adc
dec
les
fstps
mov
movsb
jno
cmpsl
test
es
add
pop
dec
loop
dec
test
or
imul
and
arpl
and
inc
or
dec
lahf
or
mov
and
scas
dec
aas
gs
mov
dec
dec
fcoms
mov
or
into
mov
loop
je
adc
cmpsl
cmp
adcl
add
push
mov
xor
push
ret
out
push
mov
sti
dec
fsubs
xchg
rcrb
fstpl
es
lret
mov
mov
sti
fisttps
in
mov
lret
imul
test
aam
inc
xor
adc
pop
cs
addl
xor
jo
inc
lcall
inc
sbb
push
pushf
ret
shrb
lret
repnz
cmpsb
cmp
flds
mov
outsb
data16
ret
cwtl
inc
dec
in
dec
dec
ret
push
gs
cmp
repnz
add
cmp
shrl
inc
or
ret
les
arpl
sbb
push
repnz
inc
subl
push
fsubs
mov
imul
lahf
es
addl
outsb
and
push
jns
xor
dec
shl
mov
std
ljmp
mov
jecxz
xor
jnp
dec
das
xor
push
fldl2t
bound
sbb
mov
js
gs
push
les
xor
xchg
ljmp
mov
or
jns
faddl
sub
xchg
or
test
hlt
mov
imulb
out
cmp
cmp
sbb
lods
cmpsb
pop
mov
push
loope
cmpsb
cmpsb
xor
lds
xor
adc
push
repnz
cs
test
adcb
int3
sbb
adc
test
add
test
in
sahf
dec
jecxz
imul
test
xor
movsb
test
mov
test
pusha
mov
pop
imul
xor
mov
out
jp
pop
lods
or
pop
shll
iret
rorl
cmc
loope
xor
pop
dec
mov
imul
or
inc
push
lds
push
fwait
mov
data16
inc
inc
cltd
add
popf
cmp
clc
add
dec
test
push
or
insb
add
or
arpl
or
push
ljmp
inc
or
sbb
mov
push
dec
push
add
out
or
push
fsubrs
inc
lahf
add
add
sbb
or
cld
inc
sbb
bound
ds
push
and
mov
cmp
mov
and
lds
mov
inc
imul
and
lret
imul
test
and
popf
daa
push
xor
pop
sub
roll
test
js
pop
sub
lods
js
jmp
negl
jb
das
icebp
enter
les
call
add
lods
scas
stos
jb
push
sub
pop
negl
cmpsl
dec
insb
sbb
cs
fisubs
in
std
popa
stos
or
inc
mov
jp
fcomi
outsl
shrb
repnz
fnstcw
ljmp
ds
lds
sbb
imul
mov
mov
stos
inc
addl
pop
cmp
push
cmp
xchg
push
imul
push
inc
stos
cmp
fadds
in
dec
adc
in
repz
sub
sub
jle
sub
cld
imul
repz
sahf
clc
cmc
pop
xchg
push
fstpt
sarb
fbld
add
aas
gs
ret
insl
in
aaa
jno
push
jmp
cltd
cmp
lods
mov
rcrl
arpl
fcmovbe
jl
clc
pusha
dec
lcall
xchg
fdivrp
rclb
cmc
dec
adc
xor
pushf
push
lea
into
hlt
xchg
sub
xchg
dec
dec
ljmp
insl
xchg
inc
sbb
cmpb
insb
mov
push
pop
movsb
movsb
mov
imul
dec
dec
xlat
insb
xchg
jne
out
lods
xchg
dec
popa
xchg
loope
out
mov
and
and
jnp
mov
cmp
add
mov
dec
sbb
es
fwait
mov
sub
negb
sub
dec
ss
hlt
jnp
lahf
mov
cmp
and
roll
add
dec
xlat
in
repnz
and
push
sahf
pop
push
mov
call
or
movsb
repnz
add
outsb
rorb
sbb
lods
and
fmuls
js
incl
aad
aam
add
shl
mov
popf
inc
iret
xor
aaa
adc
add
pop
or
ljmp
int3
mov
cmp
out
aaa
add
cmp
adc
lods
adc
es
imul
dec
xchg
xor
jmp
jg
inc
xor
js
icebp
adc
mov
popa
filds
insl
or
cld
xchg
and
add
mov
add
push
or
sub
std
fadd
dec
cs
xor
pop
add
sub
or
xor
xchg
cmp
orb
jle
sbb
frstor
add
or
loop
mov
cmp
imul
pop
cmc
cmpsb
mov
hlt
and
aas
xchg
or
fwait
lahf
or
mov
dec
or
gs
fmuls
xchg
pop
sub
and
mov
lahf
mov
data16
ret
inc
out
jmp
xchg
xor
es
add
mov
test
jecxz
dec
nop
shrl
fldcw
mov
jl
loope
push
cmp
int
out
jne
push
nop
sub
jl
xchg
and
inc
rcrb
es
sub
dec
addr16
add
mov
dec
inc
rcll
or
sahf
sub
sub
enter
mov
xchg
push
rcrl
sbb
cmpsl
dec
sub
adc
or
int
push
call
movsl
mov
insl
mov
add
mov
push
sub
leave
sub
xchg
out
shlb
xchg
sub
stc
add
or
sub
inc
dec
dec
or
jg
adc
pop
jl
sarb
jg
addl
sti
mov
cmp
ja
dec
jo
pop
jmp
movsl
subb
cmpsl
popa
lock
inc
lds
jle
mov
push
dec
pop
bnd
lret
gs
jne
sbb
xor
sub
xor
fcomip
shll
pop
or
sbb
ljmp
loop
dec
stos
jge
pop
and
insl
mov
imul
jno
push
jle
or
mov
fstl
lea
sarb
cmp
jnp
inc
sbb
ds
sbb
xlat
sbb
rcrb
cmp
mov
lea
lods
or
lahf
out
cmp
cmp
int
faddl
and
sbb
fsubp
xor
mov
jl
xchg
dec
mov
mov
lcall
dec
movsw
xchg
int3
rcll
loop
pop
outsb
xor
push
es
leave
imul
cmp
xchg
jo
mov
cmpsl
stos
or
mov
orb
inc
xorl
jmp
pop
ds
xor
incl
scas
push
mov
fst
cmp
and
push
stos
xchg
cmp
pop
lods
push
sub
mov
or
lods
xor
dec
subb
pop
pop
fwait
pop
dec
mov
popa
push
mov
enter
push
pop
push
xor
push
xchg
sbb
lret
dec
mov
cmp
addr16
pop
or
stos
fbstp
sub
fisubl
mov
dec
and
imul
mov
frstor
cmc
and
cmpsb
mov
mov
out
imul
and
mov
mov
mov
lahf
xchg
shrl
hlt
mov
out
cmc
data16
aaa
xchg
adc
adc
jl
xchg
data16
data16
pusha
jge
jae
popa
ffreep
jge
xor
jmp
mov
stos
rolb
mov
testl
sbbl
and
add
shr
roll
sub
xor
xchg
insb
sub
sub
jmp
cmp
inc
shll
gs
cmp
push
mov
lods
add
push
insb
dec
pop
ds
or
imul
popf
cmp
mov
add
arpl
xchg
aas
push
cli
mov
arpl
sub
pop
mov
mov
or
xor
imul
lods
lods
or
insb
push
ja
inc
lret
dec
cs
add
dec
xlat
xor
lods
dec
sbb
sbb
push
lea
or
sbb
xor
sub
inc
or
xor
xor
test
lock
addl
loope
ror
sbb
aaa
data16
movl
mov
ss
ss
lret
hlt
call
xor
bound
pop
ds
xchg
in
sub
sbb
inc
mov
push
xor
call
bound
push
mov
xor
xor
xor
push
dec
xor
pop
fnsave
mov
lret
dec
sbb
shrl
pop
test
push
pusha
out
mov
jg
in
jg
imul
xchg
les
add
popa
mov
sub
push
in
and
mov
dec
pop
xchg
sub
fcoms
mov
outsb
jne
jnp
or
call
xchg
dec
mov
pop
cmp
or
add
and
idiv
rcrl
inc
cmp
mov
addr16
or
cwtl
mov
and
xor
mov
mov
idiv
dec
loopne
and
out
in
push
fdivl
xchg
dec
das
xlat
xor
jae
ds
imul
test
pop
cli
stos
xchg
xor
xor
xor
push
pop
fadds
fsubrs
adc
mov
fisubrl
nop
subb
xor
xchg
add
mov
insb
add
push
mov
insb
and
es
leave
test
lock
inc
mov
add
or
mov
fsubs
push
jnp
popa
mov
add
or
mov
dec
out
lods
cmp
cmc
int3
mov
dec
xchg
pop
cmp
cmp
cld
adc
jae
mov
dec
lahf
or
iret
xlat
mov
adc
mov
jno
int3
push
xchg
cmp
cmp
mov
mov
les
add
cmp
mov
repnz
or
cmp
aas
enter
lahf
pop
fsubl
and
or
or
ss
or
or
mov
sbb
mov
jmp
and
rol
xor
or
cmp
xor
outsl
and
mov
mov
stos
stc
push
cmpsb
dec
int
fsubs
fcmovbe
hlt
and
and
inc
jecxz
shll
es
shll
bound
das
sbb
xor
fldl2t
and
data16
arpl
sub
lea
add
in
fsubl
push
nop
jl
xchg
repnz
fistps
cmp
xor
xchg
sbb
int
aam
xchg
icebp
popa
sbb
shll
push
push
mov
int
and
mov
cmp
add
test
lret
mov
add
pop
fimuls
shrl
mov
mov
push
push
cwtl
out
call
push
sbbl
fldcw
sti
xchg
sub
pop
and
aad
sub
xchg
and
push
xchg
pushf
sub
outsl
jbe
fabs
dec
sbb
jp
sub
dec
data16
mov
pop
popa
push
mov
jle
adc
fstps
mov
and
cmpsl
cltd
mov
adc
xor
xor
test
scas
jnp
or
add
int
gs
movb
mov
adc
gs
xchg
loope
jno
jb,pn
rcr
pusha
and
inc
bound
jno
mov
mov
mov
mov
mov
hlt
mov
add
xchg
xor
lahf
and
push
mov
jge
sar
gs
mov
sub
ss
push
mov
mov
stos
or
dec
aas
xor
pop
xchg
lods
cmpsl
jle
push
dec
xor
mov
mov
sbb
sbb
mov
in
add
push
cli
into
stos
ret
xor
push
xchg
cwtl
cld
push
xor
iret
cltd
jl
testb
in
push
dec
sbb
into
cmp
ss
pushf
xor
add
aaa
add
cltd
paddw
jae
ljmp
pusha
and
adc
fwait
aaa
imul
test
nop
aaa
subb
data16
repnz
mov
paddd
paddusb
inc
push
add
stc
adc
adc
repz
pushf
inc
push
shl
jl
icebp
jnp
int3
in
mov
or
push
test
and
dec
mov
add
mov
rclb
xchg
mov
dec
inc
and
imul
leave
lods
and
and
ljmp
repz
cmp
and
ljmp
adc
xor
fbld
hlt
cmp
decl
add
mov
xlat
and
inc
lret
xchg
push
aad
and
xchg
xchg
add
sbb
popa
xchg
fxtract
fcmovbe
mov
mov
iret
pop
xor
cmp
les
arpl
sub
sub
movsb
xor
loope
das
cmpsb
push
cmp
mov
push
add
dec
or
das
arpl
sub
push
sub
push
imul
push
mov
or
push
push
call
add
mulb
sub
cmp
mov
jbe
popf
das
sahf
inc
pop
sti
and
inc
adc
sahf
add
jne
sub
xchg
int
repnz
jb
out
mov
xor
cmp
push
add
ret
test
adc
cmp
add
fucomip
rorb
pop
in
in
sub
sahf
outsb
inc
pop
pop
push
test
cmp
test
add
addl
es
xor
adc
mov
push
dec
cmp
push
or
adc
dec
repnz
push
adc
xor
cltd
pop
dec
push
adc
push
daa
cmpsl
and
inc
shll
push
ljmp
shll
je
sbb
fiadds
inc
mov
cmp
cltd
sbb
mov
ret
aad
lock
xchg
test
int3
ljmp
xchg
and
sbb
shll
or
adc
and
mov
sbb
push
push
movsb
xchg
sbb
gs
repnz
or
add
adc
push
loopne
rcr
insl
shr
leave
or
xchg
ficoml
rclb
sub
push
push
mov
repnz
cmpsb
mov
lock
jle
cmc
sbb
call
imul
adc
jo
adc
jl
inc
pop
xor
jbe
dec
xchg
ds
cmpsl
push
cmp
push
fadds
inc
in
jge
xchg
jns
mov
fsts
push
jl
xchg
xor
xchg
cmp
in
push
mov
and
fst
test
pop
mov
pop
aam
adcb
push
ret
dec
imul
cmp
or
fisubs
pop
mov
xor
stc
cmp
pop
call
rorb
xchg
sub
xor
aam
add
inc
lcall
xchg
mov
dec
mov
adc
push
rorl
fsts
or
lock
out
in
and
lret
es
jge
sub
jp
loopne
mov
out
xchg
ret
fmull
bound
jl
scas
inc
sbb
xor
jbe
dec
sub
sbb
and
roll
aad
movb
inc
add
push
pop
lahf
xor
pop
xor
mov
jbe
cmc
add
shl
es
adc
pushf
stos
pop
lds
xchg
adc
or
test
call
pusha
xchg
outsl
dec
jle
adc
mov
pop
sbb
and
sub
notl
xor
and
call
dec
psrlq
cmp
jg
push
int3
es
push
shll
adc
sub
sub
cmpsb
adc
xchg
fldt
dec
das
xor
push
imul
or
in
and
js
push
std
cwtl
mov
gs
sub
stc
add
or
fs
loop
rclb
dec
sbb
sub
sahf
and
aad
mov
mov
add
pusha
movsb
out
dec
and
or
xchg
adc
push
add
xor
or
cmp
je
test
iret
outsl
and
add
and
mov
sbb
and
push
sub
mov
insl
cmp
into
jmp
dec
jl
fsubrl
xor
hlt
sarb
jno
add
imul
gs
sti
sbb
je
cmp
fnstsw
mov
push
cmc
icebp
push
sbb
or
lcall
shll
dec
test
test
and
jl
sar
sbb
int3
push
push
adc
cwtl
push
mov
cmp
dec
jecxz
mov
jbe
jo
outsb
idiv
ss
clc
ds
cli
lea
cmp
dec
mov
int3
fsubrs
in
dec
dec
stos
cmp
or
dec
repz
push
cmp
setle
or
cmp
aam
bound
jge
mov
push
fsts
imul
push
xor
cwtl
xchg
and
add
xchg
jge
icebp
mov
lahf
popa
dec
imul
cmp
and
leave
cwtl
xchg
in
mulb
jg
and
mov
stos
gs
xchg
rcrb
cmp
rcrl
and
idivb
dec
cmp
dec
jle
fwait
enter
push
push
xchg
aad
xor
lahf
lahf
mov
mov
shlb
push
push
loop
xchg
sub
sbb
repnz
push
and
push
jbe
inc
sti
pushf
inc
mov
leave
sbb
xchg
mov
pop
imul
stos
dec
mov
mov
jl
aas
int
stos
mov
es
adc
or
repz
or
lea
jle
pop
jne
push
xchg
fsub
stos
aad
dec
movsb
loop
out
xchg
dec
xchg
pusha
and
or
push
jge
scas
mov
xor
adc
scas
lahf
lds
and
mov
and
aad
xchg
fistpll
adc
fistps
mov
insl
fsts
rol
pushf
data16
jo
inc
push
add
or
pop
in
xchg
lahf
push
sbb
xor
mov
fldenv
mov
add
scas
orl
fxch
mov
fdivrl
push
cs
enter
xor
lret
push
dec
sbb
lahf
or
cmpsb
dec
insb
adc
adc
sbb
outsl
push
notl
adc
dec
and
and
call
xor
mov
adc
cmp
xor
push
imul
mov
or
cs
jmp
std
inc
dec
jb
xchg
adc
outsb
scas
or
rcrl
cmp
jnp
and
lods
aas
lods
and
call
out
shll
es
mov
jae
filds
sbb
aaa
or
lea
jge
add
aaa
jle
pusha
bound
cmp
aas
inc
cmp
add
cli
push
out
out
aas
shll
insb
out
adc
xor
imul
aas
cltd
jge
fiaddl
cmp
data16
stos
fisubs
hlt
ljmp
notb
aaa
lods
in
loop
lods
aas
mov
cmp
arpl
cltd
cmp
ret
cmp
xor
inc
or
sub
cmp
loope
jmp
les
clc
aas
mov
xchg
xlat
arpl
adc
mov
mov
mov
mov
xor
nop
fldcw
xor
sti
inc
add
lcall
or
sbb
fsubrl
mov
fsubrl
mov
add
lods
ret
test
sub
xor
xor
xchg
push
and
inc
xor
mov
insb
lods
or
popa
xchg
push
add
cmp
insl
push
movsb
push
sub
mov
fistpll
pop
add
lret
push
mov
mov
out
fadd
and
mov
sbb
mov
bound
xor
xor
pop
xor
cmpb
sbb
pop
xor
xchg
dec
jg
sbb
decb
inc
fdivl
push
stc
xchg
rcl
or
cmp
inc
and
loopne
lret
fiadds
sbb
pusha
in
arpl
mov
xor
xor
lret
jno
jge
aad
loop
or
mov
test
xor
mov
or
flds
push
jns
mov
push
aad
cltd
in
adc
arpl
cmpsl
cltd
bound
push
pop
out
cmp
popa
ja
inc
jmp
testl
or
adc
lods
sbb
pop
or
mov
push
and
fstps
pop
or
bound
mov
shll
xor
adc
fld
and
ret
inc
inc
test
gs
xchg
push
or
ficoml
xchg
insl
xchg
and
gs
and
push
mov
sbb
shll
iret
sub
in
pop
mov
pop
ret
xchg
pop
mov
ftst
dec
inc
xchg
outsl
fbstp
cmp
in
xchg
xorb
es
ja
in
pop
jne
insl
sub
adc
cmpsl
xchg
rolb
or
adc
ror
rcl
call
xor
mov
fimuls
mov
lahf
and
shll
stc
xor
sbb
call
fwait
dec
icebp
cmpsl
dec
imull
xchg
insb
in
sti
shr
push
dec
and
cmp
pop
cltd
mov
mov
mov
orb
xchg
pop
int3
ror
cmp
idivw
fmul
js
sub
out
inc
xchg
mov
mov
pop
faddl
pop
clc
mov
pop
rcrb
lods
mov
sbb
pusha
xchg
mov
jge
inc
jg
add
fstl
out
mov
jg
sub
fyl2xp1
mov
lea
xor
xorl
dec
aas
add
inc
xchg
push
dec
daa
push
inc
mov
adc
ds
les
sbb
inc
cmpsl
repz
sub
jg
shll
inc
lcall
add
push
addr16
cltd
cwtl
mov
fsubl
dec
js
add
fnstcw
jecxz
jmp
xor
icebp
cmp
pop
xchg
xor
in
pop
push
and
mov
lahf
and
es
inc
inc
add
sub
fcomp
imul
push
inc
data16
pop
and
pop
in
mov
jecxz
scas
mov
pusha
ss
lcall
loopne
sbb
icebp
xor
add
xor
jl
imul
push
xchg
and
gs
test
jp
push
cs
pop
sbb
fstpl
idivb
rcr
es
mov
fcmovnb
shrl
scas
pop
mov
ds
push
cld
aad
pop
in
jb
cmp
sbb
sub
mov
xchg
fs
mov
das
jmp
test
lods
jb
mov
xor
addr16
xchg
nop
jmp
loopne
and
mov
cltd
sub
fcomps
cmpb
es
cltd
xor
pop
fldenv
pusha
or
pop
jl
cmp
sahf
cmp
and
mov
dec
fnstenv
cwtl
fldenv
sti
mov
cmpsl
jne
jp
stos
insb
fstl
sbb
xor
and
add
or
filds
lret
in
lcall
add
sbb
repnz
cmc
inc
mov
int
push
fwait
mov
insb
loop
add
inc
cmp
sub
scas
jno
or
in
jg
mov
mov
sbb
adc
mov
or
aas
mov
rcll
pop
pushf
add
fs
cmp
push
mov
mov
sbb
jmp
rcrl
xor
or
fs
adc
lock
xor
dec
cmp
mov
xor
in
and
pop
data16
fsubl
dec
lret
repz
ds
xor
add
jecxz
test
pop
fisttpl
sub
les
sbb
sbb
nop
sti
mov
lcall
shlb
or
push
dec
fiaddl
jbe
adcb
lcall
inc
xchg
idivb
sub
add
jmp
sbb
jno
ja
adc
je
cmc
jl
lds
add
xor
imul
or
cmp
loopne
data16
xchg
pop
scas
jno
cmp
or
xlat
shll
jns
push
das
push
sbb
fs
mov
xor
cmp
cmp
js
into
lods
jle
jl
push
stos
mov
cmp
test
jnp
mov
orb
lret
cmp
lods
xor
push
aam
mov
popf
dec
mov
dec
and
imul
mov
pop
pop
es
cmpb
mov
hlt
mov
cmpsb
fisttpll
js
xchg
nop
sub
fwait
sarb
fwait
mov
arpl
adc
pop
add
cwtl
mov
jl
add
into
push
mov
fistl
add
push
test
in
mov
dec
jb
push
orb
adc
or
cmpsl
dec
cwtl
mov
adc
xchg
and
push
dec
pop
out
cmp
lods
mov
mov
lods
sbb
jbe
mov
xor
fnstenv
sub
push
imul
fs
outsb
cld
mov
roll
sbb
cmp
mov
pop
sub
xchg
testl
push
fwait
mov
mov
subl
jmp
adc
and
mov
data16
lods
sbb
lods
xchg
jl
arpl
sahf
loope
lahf
imul
push
andb
lock
mov
stos
jle
sbb
pop
imul
repz
xor
adc
lret
mov
mov
pop
cltd
imul
mov
xor
push
stos
pop
dec
in
imul
lods
pushf
imul
adc
das
gs
test
sahf
lods
lret
ds
stos
pop
loope
add
xchg
aas
fidivrl
cli
jp
push
xchg
popa
dec
and
mov
rcrl
jns
lods
loop
addr16
xchg
pushf
pusha
fwait
lret
sbb
mov
push
clc
push
xchg
shll
dec
mov
xor
fcompl
push
call
pusha
into
jl
test
adc
lret
add
add
cmc
cmpsl
data16
or
pop
inc
and
test
xchg
iret
pop
mov
sbb
xchg
adc
adc
push
mov
add
cmpsl
faddp
popa
cmp
and
shl
loopne
dec
in
ret
sbb
in
mov
bound
dec
movsb
aaa
aam
mov
sub
addr16
jae
xchg
das
adc
ljmp
movsb
fcomps
sahf
or
dec
mov
iret
ljmp
imul
shrl
sbb
xchg
fstpt
and
mov
push
xor
aas
adc
sbb
pop
cmpb
push
adc
fildll
ja
rolb
pop
jecxz
inc
jo
clc
fcomp
in
mov
and
jnp
fmuls
shrl
cmpsb
or
pop
adc
pop
mov
push
lret
shll
cmp
mov
cmc
mov
xchg
and
xchg
xchg
out
mov
cmp
clc
adc
push
push
sub
leave
cltd
fwait
sbb
push
dec
cmpsl
addr16
aad
mov
xor
fnsave
jae
inc
insb
cmp
push
pop
xor
mov
xor
sbb
cltd
loope
mov
pusha
and
aad
fisubs
xor
pop
frstor
mov
or
aad
push
jb
test
push
imul
stos
fbld
push
push
xor
push
xor
mov
jl
fcomi
xor
dec
xor
lahf
jp
xchg
sbb
jb
cltd
mov
arpl
orl
cmp
push
mov
add
aad
adc
mov
cld
dec
jl
sbb
push
scas
loope
movsl
mov
lret
inc
or
or
pop
xlat
popa
adc
das
aad
mov
icebp
mov
aaa
aas
xor
sub
cmpsl
xchg
aad
or
jmp
mov
or
stc
repz
test
into
push
and
pop
mov
mov
jns
adc
lcall
cwtl
sahf
and
imul
mov
aam
sbb
in
add
das
in
xor
out
cmc
sbb
cmpsl
mov
sbb
popf
sahf
int
sbb
mov
call
adc
inc
pop
insl
and
lret
sti
cmpsl
mov
mov
frstor
inc
out
shrl
cmp
lgs
xor
stos
adc
dec
mov
add
repnz
stos
xor
add
out
dec
out
shll
adc
shrb
pop
xor
out
sbb
aam
mov
mov
adc
xchg
xchg
call
sub
pop
hlt
or
mov
stos
add
lahf
push
cwtl
insb
ljmp
outsb
fiadds
pop
xchg
mov
vdivpd
je
cltd
push
ss
in
or
cltd
in
sbb
sbb
mov
mov
arpl
loopne
in
outsl
repnz
loopne
dec
lcall
or
and
push
sub
lahf
push
sub
dec
ja
pop
and
mov
dec
adc
sub
push
test
sub
cld
daa
ret
xchg
lahf
xor
pop
adc
xor
pop
adc
arpl
dec
sub
insl
push
mov
fsubrs
sub
mov
dec
push
xor
jp
filds
cmp
clc
test
mov
sbb
xlat
stos
popf
nop
or
gs
cmpsl
add
adc
movsl
iret
out
jp
ljmp
movl
push
dec
nop
sub
jne
dec
es
and
into
jno
cltd
js
mov
dec
jl
pop
lret
std
mov
insl
inc
xor
fwait
addr16
fcmovu
dec
incb
rclb
es
add
pop
movsb
mov
sbb
push
lock
push
mov
pop
xor
out
adc
and
repz
scas
pop
cmpsl
sbb
fs
lds
push
rcr
sbb
cmpsl
les
insl
movsb
cmc
into
dec
mov
xor
push
insl
jno
daa
push
xor
icebp
jecxz
cmc
mov
shr
cltd
xor
in
or
push
lea
test
clc
xchg
mov
mov
inc
mov
dec
dec
mov
jl
push
pop
mov
sbb
and
inc
lret
pop
inc
and
xor
jno
xor
adc
and
sbbl
in
data16
add
and
mov
dec
stc
loopne
ret
addl
mov
mov
jmp
out
loopne
rol
pop
or
jmp
sub
dec
push
rcll
add
rcl
pop
mov
xor
dec
jmp
sbb
mov
mov
adc
mov
mov
pop
out
data16
lods
bound
or
dec
test
jae
fbstp
ficomps
cmp
clc
mov
push
inc
or
jp
sub
push
popa
movaps
sub
mov
pop
cmpsl
sub
sti
sbbb
add
cmpsl
test
scas
or
or
xor
fs
push
orl
xchg
popa
das
cs
inc
daa
lock
cmp
aas
test
arpl
jns
pop
ds
mov
stos
push
xor
test
push
jg
pop
lock
or
popa
insl
inc
mov
jp
inc
lahf
out
dec
or
iret
loop
stc
push
call
fs
les
xor
popa
or
outsb
mov
arpl
add
fldenv
imulb
in
pop
cmpsl
lock
out
sbb
add
sbb
sti
sbb
pop
xchg
loope
test
sub
pop
popa
add
out
inc
repnz
in
fildl
and
fisttpll
sbb
fnstenv
loope
dec
sti
loope
push
or
push
and
cmp
dec
adc
lahf
sbb
jecxz
inc
inc
inc
push
push
shlb
sub
data16
mov
xor
sbb
in
imul
and
xlat
loope
fcmove
rcr
mov
push
pop
and
jp
aam
mov
mov
push
push
sub
mov
pop
aas
or
pop
and
outsb
hlt
add
nop
push
gs
and
push
imul
stos
bound
pop
hlt
cmp
jmp
xor
dec
xor
and
data16
and
sbb
into
inc
into
xor
dec
outsb
mov
fsts
pushf
inc
sub
mov
in
cmp
arpl
outsl
int
fxch
and
icebp
cmp
cmp
fsubs
fistpll
stos
or
add
jns
adc
xor
fxch
gs
push
mov
dec
bound
or
lret
jecxz
and
test
loope
push
test
inc
mov
loop
or
inc
sbb
test
mov
mov
and
jmp
add
or
jp
fidivrl
mov
notl
mov
push
testl
aas
ljmp
or
out
mov
pusha
mov
cmp
imul
sub
pop
std
jp
jecxz
stos
ret
stos
xchg
outsl
pop
jnp
or
xor
and
loop
adc
stc
inc
rcr
xor
pop
add
inc
adc
dec
push
and
pop
loope
adcb
jne
pop
and
push
adc
fwait
lods
xor
cmp
and
and
push
gs
lea
insb
movsb
sub
pop
xchg
arpl
aad
push
inc
stos
fs
test
andb
loopne
fnstcw
arpl
xor
dec
shll
popa
ss
dec
mov
xor
dec
fldcw
sbb
fs
adc
and
mov
xor
adc
push
dec
mov
push
sub
push
test
gs
sbbl
and
push
mov
frstor
and
shrl
mov
jle
sti
pop
mov
bound
testl
push
lcall
adc
gs
and
or
cmp
sarl
imul
imul
repz
leave
push
rcll
gs
shrl
scas
frstor
lcall
loop
sahf
push
and
xorb
std
xchg
lea
xor
ja
sub
ljmp
into
pop
loope
add
push
and
cmp
dec
incb
and
xchg
jmp
xlat
jo
xchg
outsl
pop
xor
lock
push
in
out
xchg
cwtl
xor
and
jb
cmp
and
es
xchg
es
jecxz
xchg
cmp
in
xor
lahf
sub
or
fs
dec
dec
fs
and
ror
in
fxch
cmp
dec
sbb
addr16
lods
movsb
ffreep
es
pop
movsl
inc
xor
or
adc
out
sbb
movsb
lods
sub
xchg
shl
xchg
movsl
data16
jo
int
xchg
mov
sub
mov
mov
mov
dec
jmp
jne
pop
das
sbb
push
fnstsw
das
mov
stos
cwtl
daa
add
and
pushf
cmpsl
data16
and
aas
inc
cltd
and
cmpsl
es
and
jno
es
cmp
lcall
inc
push
sti
shll
vunpckhps
bound
enter
cld
gs
or
cld
cltd
gs
push
sbb
pop
scas
sbb
mov
push
cmp
fsubs
or
stos
rcrb
cmpsl
int3
or
mov
xor
sti
mov
adc
add
imul
movsl
cmpb
mov
arpl
push
stos
jle
in
sbb
mov
mull
mov
popa
dec
jecxz
dec
adc
dec
clc
add
rcr
lock
jmp
xor
test
sub
lds
loop
bound
test
jno
fistpll
xchg
lock
cmp
fists
xor
stos
pusha
loop
inc
insb
addr16
xchg
in
pop
jb
mov
fiaddl
in
push
push
aad
xchg
mov
sahf
jmp
test
fistpl
enter
sbb
fisttpll
test
js
pop
gs
mov
lock
les
push
pop
cwtl
es
imul
xchg
jmp
es
mov
cld
stos
sbb
inc
xor
loope
stc
adc
int
loop
lcall
mov
data16
and
mov
jg
aaa
pusha
in
ss
nop
sti
lret
loope
outsl
sahf
and
daa
xchg
dec
mov
sub
lds
arpl
imul
jae
push
or
ljmp
pop
jo
add
and
scas
aam
xlat
and
cmp
mov
ss
inc
sbb
inc
mov
sarl
and
repnz
inc
mov
daa
sbb
jbe
in
into
dec
inc
mov
add
call
inc
aam
add
outsl
adcb
dec
addr16
add
push
jg
std
pop
gs
xor
xor
and
fs
push
bound
call
mov
data16
leave
ljmp
sbb
push
push
lahf
lock
push
jmp
fistpl
and
repz
loope
and
lcall
mov
movsl
mov
in
mov
xchg
out
dec
jmp
xor
cwtl
and
rorl
pop
pop
cmp
ret
mov
pusha
and
xor
pop
test
mov
pop
movsb
lret
aaa
test
and
es
sub
daa
subb
out
sahf
repz
sbbb
pop
push
pop
test
arpl
push
movsl
pusha
sub
or
outsb
mov
repz
adc
adc
dec
stc
pop
lret
ljmp
or
sbb
sub
dec
fldcw
rorl
pop
imul
and
push
fldcw
and
ss
sbb
push
ljmp
xchg
cmpsl
insb
outsb
dec
out
fcoms
sbb
or
mov
lock
and
das
jp
sti
dec
jo
mov
test
loop
es
stos
bound
mov
inc
or
add
enter
int
jo
jle
mov
adc
shr
das
mov
shrb
dec
imul
sbb
inc
mov
or
data16
test
sub
rol
ljmp
mov
aaa
je
xchg
ret
mov
iret
stos
insb
icebp
data16
adc
push
aas
lea
and
lock
xchg
ljmp
fldenv
or
rcll
push
xor
cmp
lock
ss
push
jmp
loope
and
popa
imul
ljmp
dec
fsts
dec
dec
ljmp
push
and
inc
rclb
or
repz
xor
out
jns
movsl
jp
sti
out
stc
add
cmpsl
push
call
xor
push
in
mov
imul
arpl
xor
mov
sarb
clc
mov
jl
aaa
pop
and
adc
cmpsl
adc
xchg
xchg
inc
shll
sarl
in
imul
dec
push
stc
fcompl
adc
xor
dec
adc
inc
lds
xchg
movsb
fwait
or
adc
fs
bound
aad
sub
setne
and
pop
mov
mov
in
arpl
out
jo
out
mov
lret
mov
push
loope
add
lahf
jp
sbb
dec
test
pop
push
add
out
push
mov
test
mov
xor
es
mov
lea
cmp
movsb
jnp
mov
std
andb
out
psubsw
addb
xchg
sub
or
pop
jmp
loopne
adc
push
fs
ljmp
test
cmp
mov
pop
in
ljmp
sti
inc
add
add
mov
sub
cltd
dec
cwtl
ljmp
lret
shl
popa
inc
int3
mov
or
ljmp
push
flds
lods
test
dec
and
dec
mov
push
dec
lcall
cmpsl
adcl
cmp
sbb
cs
and
test
pop
lcall
mov
lahf
mov
imul
or
lahf
push
mov
jns
and
test
mov
or
or
fcmovu
fidivrs
adc
cmpsb
rolb
loope
adc
xchg
aaa
xor
stos
cltd
test
stc
das
jmp
dec
mov
sub
mov
jmp
jmp
dec
push
jmp
xchg
in
popa
adc
scas
push
and
jmp
hlt
in
adc
xor
inc
sub
mov
push
ljmp
or
add
or
dec
sub
or
adc
sub
out
es
arpl
jae
cmp
scas
sub
fldcw
jp
fs
or
mulb
pop
jno
inc
fdivrp
out
ret
aaa
inc
ljmp
mov
clc
stos
dec
inc
xor
xor
and
imul
scas
and
push
xor
dec
lods
lret
dec
cltd
stos
cmp
in
popf
mov
cmp
jg
dec
aaa
adc
out
bound
sub
in
pop
mov
in
pop
xor
in
lret
adc
sub
cltd
cmc
sub
fldcw
cwtl
add
sub
cmp
popa
inc
push
xor
out
mov
mov
inc
and
mov
insb
mov
and
pop
dec
out
mov
enter
in
out
sbb
jo
and
insb
push
das
lods
xchg
scas
sub
mov
fwait
outsb
cmp
pushf
leave
pop
xchg
pop
jno
lds
adc
lcall
in
dec
ja
lret
and
pop
or
in
mov
dec
ret
and
cmpsl
push
adc
pop
push
sub
dec
and
lahf
lahf
imul
sbb
adc
dec
xor
out
cmp
sub
imul
aas
data16
loop
jno
xor
in
jb
out
leave
sub
mov
or
hlt
sub
sub
sbb
arpl
push
xchg
dec
push
lods
icebp
lcall
inc
cmp
out
adc
pop
ficoml
test
adc
cmc
test
mov
cmpsl
data16
lods
ss
jmp
mov
push
fs
lahf
and
add
xor
push
pop
out
mov
out
adc
out
mov
mov
cs
call
sbb
incb
cmpsl
shll
ret
mov
test
xor
fisttps
cltd
outsb
repnz
sub
cmp
and
push
outsb
xchg
jo
mov
cwtd
and
dec
in
scas
fisubl
imul
mov
in
cmp
xchg
fldcw
fisubrs
enter
and
cmp
out
icebp
and
push
adc
xchg
icebp
sub
mov
sbb
pop
out
adc
lock
movb
scas
inc
movsl
push
cmc
fsqrt
dec
mov
pop
outsb
mov
add
outsb
imul
imul
das
outsb
data16
xor
cs
fildll
les
in
jne
cmp
jb
mov
stos
outsl
stc
mov
push
add
les
add
mov
or
outsl
loop
cmpsl
outsl
mov
cltd
test
adc
and
scas
push
xor
aam
subl
or
lcall
scas
repnz
add
out
mov
dec
ja
push
and
jmp
dec
iret
lock
xor
dec
int
adc
stos
data16
das
icebp
loop
xor
inc
mov
sbb
flds
sbb
rcl
shll
int
xchg
jb
mov
xchg
push
mov
mov
or
sti
jo
and
jo
push
lcall
jo
lods
mov
dec
in
mov
and
fwait
loop
clc
mov
adc
out
inc
mov
mov
jbe
add
cmpsl
rorl
or
push
popf
mov
shl
mov
mov
push
test
mov
fbld
icebp
sub
fldcw
icebp
push
loopne
mov
xchg
ret
lods
test
repnz
out
fs
dec
push
es
pop
lods
repz
add
xor
inc
pop
xor
mov
in
inc
xor
sub
fnstenv
loope
loop
in
sub
mov
jo
cs
or
mov
test
mov
pop
jno
bound
mov
arpl
ja
dec
fdivl
sub
sarl
mov
mov
mov
mov
mov
mov
bnd
out
jmp
fisubl
insb
aas
cmp
mov
in
cmp
dec
cltd
inc
sub
fptan
fptan
loop
sub
mov
mov
lods
and
das
fsqrt
cmp
mov
xor
mov
xor
mov
repnz
dec
es
data16
aas
xor
std
mov
inc
jb
rorl
sbb
xor
pop
fcomp
jb
pop
mov
jb
gs
sub
mov
mov
in
mov
idiv
cmpsb
repnz
dec
aad
mov
test
and
mov
scas
repz
fimuls
mov
repz
dec
repz
test
lods
repnz
repz
push
repz
lods
aas
sub
mov
and
xor
mov
sbb
dec
xor
shlb
sub
mov
fwait
xor
jne
or
inc
je
mov
add
loop
dec
jne
out
mov
jae
mov
jae
push
out
cmp
in
cmpsl
shll
mov
dec
inc
mov
dec
mov
add
scas
push
push
mov
lock
or
gs
mov
sti
arpl
mov
hlt
aam
hlt
mov
test
xchg
lods
cs
hlt
or
xchg
hlt
mov
popa
loop
das
push
mov
mov
xor
roll
pop
mov
dec
add
jle
push
adc
jmp
or
pusha
xor
mov
in
lcall
je
ret
dec
add
mov
adc
pop
dec
push
je
aad
sub
scas
dec
inc
pusha
pop
fnstenv
cltd
mov
mov
mov
pop
test
mov
repnz
movsw
das
aas
ficoml
mov
cld
xchg
fsubs
out
shl
mov
cmp
cs
jge
xor
lods
fwait
and
push
or
mov
pop
cmc
arpl
fld
stc
push
cmc
mov
outsb
fnstenv
es
jns
xor
fbld
xor
aad
shlb
jecxz
out
in
jne
cmp
mov
cmp
xor
mov
xorl
popf
lock
movsl
shlb
xor
fnstcw
dec
arpl
mov
mov
mov
scas
and
mov
add
aam
push
mov
push
pop
push
xchg
dec
enter
and
cmp
divb
sub
imulb
jle
sub
fnstenv
int
mov
lret
testb
fisubs
cmp
ss
out
shrb
cltd
ss
mov
cmp
pop
fisttpll
dec
dec
adc
stos
mov
jbe
scas
jbe
out
and
jns
out
jns
fisubl
icebp
aas
enter
mov
in
jbe
cltd
pop
sub
fnstenv
push
mov
stos
arpl
divl
repnz
out
inc
mov
das
and
pop
sbb
es
bnd
dec
cmpsl
push
lods
dec
je
or
je
mov
and
idiv
cmp
aad
shl
aas
sbb
lock
mov
andb
cmp
mov
lahf
shlb
adc
cmpsb
repnz
aaa
out
sbb
dec
arpl
loop
mov
shll
mov
jl
imul
repnz
mov
and
mov
mov
and
popa
ja
mov
mov
fnstenv
dec
push
xor
xor
cmp
sub
fnstenv
in
mov
xor
add
mov
jb
or
in
mov
fimuls
mov
clc
aam
pop
clc
mov
test
lods
repnz
clc
out
daa
clc
fisubl
mov
ss
mov
lret
inc
cmp
rorl
xchg
xchg
push
fnstcw
mov
jns
fdivl
repz
xor
and
movsb
pop
mov
sarb
js
cltd
test
iret
scas
dec
mov
js
push
mov
adc
cmpsb
repnz
mov
dec
xchg
mov
rcll
mov
adc
inc
pop
cld
add
mov
lahf
in
stc
pop
outsb
add
mov
dec
inc
or
lods
and
dec
mov
cs
stc
xchg
test
xor
out
pop
stc
fisubl
mov
insb
push
lods
and
cmp
dec
orb
or
mov
push
int
out
fcmovu
flds
mov
aas
ljmp
push
jle
dec
inc
jns
mov
or
test
pop
jns
dec
pop
jns
data16
cmpsl
xchg
jns
es
mov
mov
add
mov
mov
pop
stc
and
cs
je
shll
stos
data16
aas
mov
cld
lret
es
cli
cmp
adc
xchg
mov
sub
mov
mov
ret
bound
fsqrt
xor
cs
or
add
pop
mov
dec
ret
mov
iret
cmp
outsl
xchg
lods
dec
pop
cmp
dec
sbb
stos
xor
jle
jp
cmpb
test
pop
jp
dec
jp
addr16
pushf
jp
and
rcrl
lcall
mov
cltd
test
mov
fnstcw
dec
in
lahf
data16
sbb
adc
lods
cmp
dec
jge
sti
ss
cmp
shrb
cltd
sti
repnz
cmp
dec
xchg
sti
adc
stos
lods
cmp
negl
or
test
lds
out
lds
fisubl
mov
adc
push
adc
or
lods
cmpsb
jno
cmp
js
mov
jnp
lods
inc
fnstcw
inc
cmp
pop
idivb
xchg
cltd
jnp
push
push
nop
jnp
imulb
jo
push
mov
mov
mov
lods
sarb
push
adc
jnp
and
mov
push
mov
or
xchg
push
jae
ss
mov
mov
or
or
cltd
sub
frndint
fs
loop
outsl
xor
in
jo
es
repnz
mov
movsl
or
mov
and
data16
data16
jno
xor
cmp
lahf
es
mov
jl
mov
cmp
cltd
jl
push
mul
mov
jl
mov
in
test
popa
sub
fnstcw
jl
es
sub
lods
dec
mov
push
and
and
mov
mov
pop
mov
data16
out
and
lods
mov
xor
dec
and
push
cmp
data16
cmp
rcrl
dec
and
cs
xchg
test
jecxz
pop
lods
mov
cmp
dec
lret
data16
cmp
out
cmp
dec
mov
mov
jecxz
lods
scas
jge
fldcw
jge
push
jge
data16
jnp
cmpsl
rcr
mov
sbb
xchg
test
lods
repnz
mov
fisubl
cmp
sti
cltd
mov
mov
repnz
mov
dec
sahf
cwtl
mov
jecxz
lods
fldcw
cmp
and
push
js
mov
jbe
cmpsl
rcll
and
sbb
xchg
test
fstps
lods
out
incb
out
cmpsb
dec
sarb
pop
in
hlt
ds
cltd
adc
fnstcw
jl
ds
cltd
cwtl
ds
sub
mov
scas
jle
pushw
jno
cmpsl
sbbb
jle
jle,pn
push
test
loope
fbld
jle
mov
mov
out
mov
dec
inc
mov
repnz
mov
push
push
lods
dec
pop
mov
mov
and
cmp
insb
fcos
xor
cs
decl
rorl
lcall
adc
xor
lods
incl
fdivr
cmpsb
dec
mov
lahf
data16
aas
mov
in
cmpsl
mov
aas
and
aas
xchg
test
and
push
pop
aas
mov
test
cmpsl
aas
dec
cltd
sub
fnstcw
push
jg
or
repnz
lods
data16
jg
xlat
cltd
jg
mov
out
daa
jg
push
inc
test
add
mov
push
bound
mov
aam
ss
mov
and
sub
repnz
cmp
loop
xchg
xor
fadds
lods
and
mov
repnz
cmpsb
dec
stos
mov
aas
add
sarl
inc
pop
mov
inc
pop
xor
pop
test
inc
in
movb
add
inc
cmpsb
call
inc
adc
cmpsb
repnz
and
xor
loop
rolb
sbbb
test
ror
andb
sbb
sub
jge
xchg
mov
jle
fs
shrb
cmp
rcrl
rcrb
sarb
cwtl
add
add
es
dec
jnp
cmp
dec
lds
out
adc
sub
and
xchg
mov
inc
ss
pop
xor
pop
js
inc
es
ret
dec
fdivrl
aas
mov
and
push
imul
andl
pop
sarl
repnz
jno
or
adcl
cmpl
jb
or
test
xchg
rorl
fld
add
ds
mov
push
mov
or
xor
cmp
add
add
test
lods
add
lods
mov
mov
jl
cmp
add
push
popa
add
lods
inc
mov
aam
cmp
pushf
or
mov
data16
sub
fnstcw
stos
mov
inc
aam
pop
inc
jbe
sub
mov
in
andb
mov
dec
and
std
push
add
pop
shrl
andb
test
dec
fisttpll
cmpsl
arpl
push
mov
pop
cld
bound
mov
mov
aad
ret
andl
daa
addr16
sbb
jnp
push
sub
mull
jae
ljmp
idivb
mov
push
add
ret
jg
add
dec
into
mov
loope
jmp
addb
cmp
jp
orb
int
dec
jl
bound
pop
mov
jnp
push
sub
pop
cmp
add
add
arpl
mov
test
je
push
cmp
out
orb
ret
pop
dec
ret
inc
fisubs
sbb
movb
roll
and
inc
in
fwait
cmpsl
mov
add
add
test
mov
pop
push
fstpt
xlat
orl
inc
stos
cltd
ret
lods
fsubp
pop
je
aaa
sub
inc
mov
dec
xchg
call
inc
xorb
in
push
fstps
cmp
ret
dec
mov
add
jle
mov
fmull
repnz
inc
add
and
push
add
cmpsl
add
adc
dec
lods
inc
shrl
pop
push
scas
inc
fsubrl
mov
jle
test
inc
test
cwtl
test
or
loop
addr16
mov
inc
cwtl
test
or
cmc
test
sub
sarl
xor
cmp
cmp
push
int
inc
jecxz
sbb
push
loope
lret
and
mov
out
push
mov
pop
pop
pop
call
pop
popa
pop
pop
and
push
retw
pushf
lock
lock
and
pusha
sbb
les
inc
push
cmp
xor
in
cmp
xor
fdivrp
push
les
dec
test
mov
int3
pop
test
sbb
dec
or
cmc
jo
inc
incb
ret
in
mov
add
icebp
inc
dec
xor
pushf
mov
sub
mov
push
push
cwtl
gs
inc
sub
add
push
xor
flds
sub
shrl
cwtl
outsb
sbb
sbb
shlb
sti
push
jmp
sbb
arpl
push
cmp
mov
and
jne
pop
add
pop
pop
arpl
add
mov
js
es
jle
je
dec
inc
test
pop
inc
pop
add
stos
or
cmp
sub
mov
adc
fst
movsl
mov
in
and
in
jmp
imul
test
nop
pop
mov
cmpsl
iret
cmp
filds
dec
arpl
aad
inc
push
insb
movsl
xor
mov
sbb
lahf
jmp
sub
add
gs
cs
sub
mov
pop
in
cmp
bound
and
add
push
aam
cmp
mov
pop
mov
pop
xor
aas
push
fimull
fwait
sub
inc
xor
push
sub
mov
mov
and
mov
xchg
mov
push
cmpsl
into
rorl
cmpsb
loop
insl
fildl
xor
cmp
or
es
leave
cmp
leave
mov
sub
js
mov
lret
xchg
pop
xor
out
fsubs
lahf
inc
and
popa
mov
push
cmovns
xchg
pusha
pushf
mov
inc
test
mov
inc
stos
sbb
mov
sbb
inc
daa
fidivrs
adc
js
add
or
les
adc
mov
inc
sar
xor
cli
sbb
add
jmp
inc
sub
loop
sub
pushf
arpl
xor
test
sub
cmp
adc
adc
sbb
vmovdqa
push
or
gs
push
pop
sub
mov
mov
pop
enter
gs
hlt
clc
xchg
push
push
pusha
lock
shlb
and
aas
pop
lods
ficomps
in
popa
jmp
iret
push
mov
inc
nop
insb
cmp
or
xor
lahf
imul
adcl
pop
movsl
dec
push
pop
in
cltd
dec
adc
xchg
cmp
in
pop
cmpsl
cmp
and
mov
lock
sbb
inc
push
repz
dec
mov
in
push
cltd
psubusb
and
push
adc
jecxz
push
cmp
mov
test
cmp
ret
push
dec
adc
mov
out
addl
loopne
imul
inc
or
imul
push
repnz
xchg
ja
jmp
test
shll
in
cld
insb
push
int
mov
repnz
dec
and
aam
adc
cmp
fxch
adc
cmp
fisubl
or
repz
or
dec
or
lods
mov
mov
int3
pop
xrstors
into
cmp
cmp
adc
shl
mov
stos
fmuls
ds
inc
les
int3
and
shll
push
jne
cltd
decb
inc
int3
cltd
dec
bound
cwtl
push
mov
in
jne
out
or
sub
sub
mov
mov
xor
and
dec
xchg
push
add
aad
pushf
jmp
cmpsl
push
nop
jg
int3
and
lret
insl
cmp
mov
out
orl
or
iret
mov
inc
loope
gs
out
enter
lods
mov
bound
dec
mov
inc
and
out
cmpsb
xchg
lds
mov
decb
dec
cmpsl
test
loope
sbb
fs
test
dec
cmc
cmp
dec
xchg
dec
inc
or
jnp
and
int
mov
mov
imul
fimull
push
aam
jmp
push
popa
push
ss
fistps
mov
mov
and
dec
lahf
not
mov
jns
fs
add
dec
leave
dec
jmp
fimull
gs
rcrl
and
and
mov
mov
adc
into
dec
pop
push
cmp
mov
test
dec
add
or
dec
or
lea
aad
stos
xor
ror
test
aad
das
jmp
sub
xchg
push
pop
mov
or
aad
or
loop
aam
push
rclb
jmp
fnsave
xor
and
mov
xor
js
sbb
sbb
adc
sub
out
lea
or
rolb
mov
fisubs
jmp
jbe
mov
lret
jmp
sbb
xchg
mov
sbb
jbe
and
fsubrs
cmp
call
inc
or
xchg
gs
aad
mov
inc
sub
jne
mov
cmp
clc
or
cmpsl
add
sbb
inc
adc
data16
lahf
cld
frstor
jo
xor
cmp
dec
dec
pop
lods
or
xchg
xchg
push
sbb
and
cltd
or
repnz
adc
mov
pusha
jecxz,pn
push
xor
dec
sbb
add
add
inc
xor
cmp
test
adc
add
int3
mov
clc
roll
mov
or
sub
or
fwait
adc
pop
cmp
pop
mov
jp
cwtl
std
xor
mov
or
or
fldenv
mov
test
iret
cmp
jle
movb
test
cld
mov
rclb
xchg
jp
arpl
idivb
das
and
test
fs
loop
mov
dec
stos
fwait
push
mov
addr16
aaa
int3
push
dec
fsubr
cmp
mov
jno
add
ss
aas
das
push
xchg
scas
leave
xor
mov
test
arpl
xchg
push
or
adc
xchg
xor
xchg
out
push
stos
dec
test
jle
bnd
jle
jnp
rep
cmp
fmul
rorl
push
add
lcall
and
cld
dec
mov
into
sub
and
xor
sahf
imul
fisubs
mov
enter
jp
out
push
mov
repnz
xchg
andb
hlt
gs
push
push
jb
and
mov
aam
inc
cmp
push
test
cmp
out
dec
dec
or
pushf
icebp
and
jmp
inc
jmp
out
mov
or
push
sbb
mov
xlat
mov
rclb
scas
dec
or
push
ljmp
into
adc
fwait
inc
and
hlt
shl
pop
repnz
inc
pop
xchg
sbb
addb
adc
mov
jge
lea
fisttpl
xchg
sub
frstpm(287
sbb
or
push
sar
iret
lea
inc
fs
cmp
adc
and
add
out
sbb
inc
add
pop
and
data16
es
sub
es
mov
adc
mov
push
mov
incl
and
jo
push
out
or
add
enter
in
js,pn
pop
cs
lret
shrl
cwtl
stc
push
lret
cmp
push
xchg
adcl
sbb
pusha
lds
push
mov
cmp
push
push
push
xchg
js
sub
xor
cmpsl
pop
lret
push
sbb
mov
loope
dec
cmp
dec
xchg
test
add
and
sahf
sub
adc
xor
lcall
fxch
xor
jl
mov
xor
test
icebp
and
decb
mov
mov
mov
mov
mov
mov
pop
mov
sahf
cmp
push
fldenv
loop
pusha
loope
into
insl
lret
in
es
xor
idivl
jp
mov
aas
aam
into
cmp
movsb
pusha
xchg
cltd
into
xor
sbb
jp
sahf
mov
jne
and
bswap
and
andps
inc
montmul
cmpsb
inc
loope
lret
jp
and
adc
mov
push
xor
icebp
bound
xchg
repnz
xchg
jp
loope
jp
mov
int
outsb
xor
hlt
das
mov
xchg
cmp
loop
dec
adcl
xor
mov
test
mov
mov
mov
sub
adc
jmp
add
push
mov
dec
out
cmp
cmp
adc
or
test
mov
xor
xchg
sbb
imul
xor
xor
mov
dec
jmp
sub
push
sub
in
iret
jecxz
xor
and
push
stc
data16
jge
rcr
mov
iret
test
les
sub
add
cld
out
mov
and
insb
addr16
mov
das
adc
push
loop
jns
vprotw
adc
push
loop
pop
adc
push
enter
cmpsb
adc
fldenv
lret
push
mov
std
push
and
mov
jo
cmp
mov
sub
sub
mov
daa
loope
xor
pop
inc
leave
aam
fldenv
cmpsl
cmp
ret
loop
out
nop
xchg
repnz
out
test
cltd
inc
fnstcw
inc
or
cwtl
nop
rcrl
dec
hlt
shr
lret
cmpsl
data16
in
out
mov
or
bound
gs
test
or
jns
imul
shr
sub
mov
adc
or
ss
rolb
sub
jmp
dec
mov
insb
nop
lahf
xor
xor
mov
pop
jge
xchg
sub
dec
mov
mov
arpl
and
adc
mov
push
pop
mov
mov
cmp
push
fisttps
push
cmp
xchg
push
xor
xchg
and
pop
imul
aaa
in
xchg
cmpsl
and
repnz
jmp
pop
mull
or
std
jmp
loope
lods
xchg
cmp
pop
scas
arpl
pop
adc
lcall
xor
xchg
test
fldcw
xchg
not
shll
inc
shrl
mov
imul
jg
out
cmp
sub
or
jl
shll
lcall
jmp
notb
fnstenv
inc
mov
cli
test
lret
add
mull
and
adc
movsl
fisubl
fdivrs
adc
fisubrs
adc
pop
xchg
dec
lret
push
jecxz
xchg
dec
imul
push
outsb
shll
push
test
shlb
cmp
in
mov
inc
add
jg
out
enter
fsubrs
mov
gs
adc
cmp
sbb
insl
jne
fists
mov
xchg
and
sbb
or
xchg
add
inc
and
adc
jmp
fsub
mov
cld
xchg
bound
repnz
scas
movsb
inc
lea
pop
xchg
push
call
dec
push
xchg
hlt
sub
ja
data16
sarb
out
pop
push
mov
xchg
mov
out
in
arpl
aas
sub
fimull
dec
enter
dec
or
cmpsl
add
out
fwait
ja
dec
mov
push
and
inc
mov
stos
adc
stc
mov
mov
inc
dec
mov
roll
sbb
mov
dec
push
mov
popa
mov
xchg
das
inc
xor
cmp
pop
imul
je
mov
call
test
xchg
shl
jns
stos
inc
xor
inc
ss
aas
adc
les
sbb
xlat
pop
jno
arpl
jl
orb
push
pop
das
or
out
das
or
das
mov
xor
arpl
ss
add
jnp
jb
fistps
fsts
dec
fnstenv
or
fcompl
and
mov
push
es
das
loope
mov
gs
mov
in
js
sahf
or
ss
imul
outsl
dec
push
xor
sti
int3
mov
inc
movsl
dec
pavgb
pusha
aad
mov
xor
mov
xor
sub
and
stos
fs
and
dec
imul
test
aas
in
popaw
add
push
sahf
andb
test
push
fprem
push
pop
das
xchg
sbb
cmp
adc
in
in
mov
aad
pop
inc
dec
jmp
lock
cmp
std
lods
mov
je
mov
cmpsb
xchg
je
lods
dec
in
test
arpl
stos
gs
cmp
cs
fnsave
inc
ss
dec
in
dec
shll
dec
jge
test
add
enter
sti
lret
mov
jl
push
adc
sbbb
cli
rclb
push
push
daa
aas
push
fcoms
xor
dec
cmp
mov
out
mov
cmp
repz
repnz
mov
shr
mov
inc
or
xor
xor
pop
call
sti
sub
arpl
xor
insb
xchg
insb
hlt
xor
cli
stos
pop
stos
loopne
icebp
xor
out
pushf
pop
je
mov
jo
repnz
xchg
jmp
push
cli
fsubrs
in
in
insb
imul
test
shll
push
pop
aaa
cmpsl
je
notl
scas
shll
push
sub
and
dec
es
stos
pop
push
push
mov
insl
icebp
outsl
insl
xor
and
inc
sahf
enter
sti
lret
movsl
push
cwtl
test
jo
push
lock
lods
push
and
cs
test
rcll
icebp
push
push
and
data16
lea
movsl
mov
inc
pop
xlat
js
cmp
or
sahf
pop
inc
dec
cltd
xchg
jecxz
pop
pushf
je
cmpsl
xchg
xchg
negl
and
jg
out
mov
aad
jmp
movsl
push
cmp
cltd
test
test
and
nop
jl
mov
aam
lods
nop
mov
or
pop
sub
jl
and
mov
cltd
stos
pop
xor
mov
cmpsl
xor
pop
cmp
andl
pop
sub
bound
push
cmp
aad
in
push
test
push
add
aad
ja
cwtl
dec
les
or
out
cs
xchg
adc
push
arpl
pop
and
push
xlat
or
add
into
add
dec
adcb
adc
xchg
incb
push
and
scas
fnstsw
das
push
push
scas
push
repz
mov
or
lret
add
and
sahf
push
push
mov
mov
pop
push
add
cwtl
pop
push
rcr
add
add
xchg
cmp
dec
xor
jl
lret
aam
rcrb
test
jle
xchg
xchg
roll
jmp
mov
dec
imul
inc
mov
mov
sbb
xchg
jns
ss
cmp
imul
cwtl
mov
pusha
xchg
aas
data16
mov
sub
cmp
lods
xor
pop
test
add
add
mov
push
pop
push
notb
fldcw
cmpsb
inc
or
cmp
sbb
fsubrs
xor
cwtl
lahf
rcll
pop
or
cmp
pop
outsl
dec
push
pusha
cltd
mov
push
enter
loope
and
cmp
push
inc
pop
pop
fnstcw
push
pushf
ficompl
cmp
or
iret
mov
or
xor
mov
cmp
bound
xchg
push
pop
push
or
mov
xchg
and
mov
add
data16
mov
cmp
pushw
aas
pop
ljmp
es
rcll
xchg
clc
js
mov
pop
push
outsb
mov
jge
ret
in
sbb
aas
xlat
fadd
test
xor
ret
mov
xchg
dec
and
pop
mov
fs
and
xor
pop
je
mov
push
mov
cmc
push
outsb
aad
pushf
adc
sbb
sub
mov
shll
hlt
push
mov
sbb
pop
pop
mov
xchg
mov
sbb
jecxz
cwtl
sbb
fdivr
arpl
mov
imul
xor
pop
dec
inc
xchg
jp
jo
bound
xchg
jg
lods
push
sbbb
in
mov
bound
fsubs
nop
mov
cwtl
test
ds
cwtl
test
test
jl
jmp
ret
add
pop
mov
cli
sets
sbb
or
fsubrs
jmp
mov
test
test
test
add
lods
in
sbb
gs
push
es
jmp
dec
sub
or
gs
or
pop
sbb
push
sub
pop
je
or
test
mov
pop
xchg
dec
dec
sub
pop
test
jmp
mov
insb
cli
lcall
call
insb
push
mov
andb
test
or
fistl
fldcw
pop
xchg
sub
dec
cmp
mov
sub
push
dec
fstps
xchg
push
mov
fprem
mov
leave
fsubrs
in
out
test
jl
jp
xchg
movsl
in
sbb
imul
sbb
inc
sbb
lods
inc
in
or
pop
in
push
add
and
sub
xor
data16
pop
test
hlt
pusha
mov
adc
pop
cs
or
add
adc
pop
sbb
adc
dec
sbb
mov
movsl
fistpll
pop
imul
rcrl
lcall
jnp
push
jmp
jns
inc
add
pop
lcall
adc
cmpsb
cmp
fidivrl
fiaddl
hlt
fcmovbe
mov
rcrb
dec
pop
add
cmpsb
dec
aaa
xchg
lahf
movsl
insb
sbb
sbb
fcomps
add
sbb
fidivrl
dec
sbb
sbb
sbb
data16
sub
mov
in
and
and
mov
pop
pop
and
xchg
mov
cmp
cltd
pop
dec
or
pop
pop
and
push
fwait
xchg
fwait
push
and
fwait
loopne,pn
or
push
fwait
gs
push
shlb
ljmp
idivb
mov
loop
cmp
repnz
aas
ds
fsts
mov
out
popf
fcmovne
pushw
fstpt
sub
mov
pop
and
mov
pop
sbb
pop
cmpsl
es
sbb
aaa
mov
jecxz
mov
add
pop
cmpsb
dec
dec
lahf
data16
mov
in
jge
push
pop
pop
or
cmc
cmpsb
jno
inc
dec
in
inc
call
ret
and
pushf
mov
negb
jo
repnz
loop
cwtl
pushf
dec
popa
pushf
fbld
pushf
sub
fsts
jo
out
pop
shrl
sbb
cltd
outsb
sub
cwtl
fmull
fmull
faddl
cmpsb
dec
mov
lahf
and
xor
pop
daa
pop
shll
movsb
pop
sub
dec
lds
dec
push
sbb
sub
mov
rcrl
jnp
ljmp
xor
pop
add
pop
cmpsb
dec
in
mov
jp
pop
or
pop
js
mov
pop
movsb
sbb
popf
dec
aas
cwtl
popf
dec
inc
popf
fbld
popf
sub
fstps
xchg
popf
iret
cmp
cmp
cwtl
popf
cmp
popf
mov
popf
pushl
cs
lea
mov
pop
negl
fucomp
bnd
loop
sbb
sbbl
cmp
fnsave
rcr
sbb
mov
repnz
push
loop
cld
push
inc
cld
cltd
push
repnz
cwtl
out
dec
push
mov
push
loope
sub
push
out
mov
pop
mov
pop
and
and
push
mov
sbb
mov
dec
adc
dec
sbb
out
mov
loop
mov
inc
mov
sahf
repnz
sbb
stc
add
mov
sahf
loope
sub
sahf
cwtl
sahf
xchg
mov
repnz
fsubp
data16
fiadds
cltd
fdivp
mulps
cmp
pop
or
fidivs
mov
xchg
pop
fbld
pop
sub
fstps
sub
cmp
fcomps
add
cmp
mov
pop
mov
and
xchg
aas
mov
xor
mov
sub
pop
or
leave
pop
and
fstps
bound
cltd
pop
repnz
sbb
cmp
pop
xor
lahf
iret
data16
lahf
mov
mov
lahf
pop
and
lahf
push
ficomps
and
stc
fnstenv
in
testb
fistpll
loope
fistpll
mov
push
fistpll
push
fisttps
xor
sub
cmp
and
cmp
and
cmp
push
and
and
or
out
arpl
mov
mulb
inc
fldenv
pusha
xchg
pusha
adc
fsts
pusha
mov
pop
cltd
pusha
dec
mul
pusha
pop
fsubs
out
adc
cld
adc
es
mov
mov
dec
mov
aas
xlat
shll
push
mov
mov
aas
dec
push
ljmp
loopne
and
loopne
enter
loop
and
stc
pop
mov
sub
loopne
shrl
push
leave
lcall
and
inc
and
cltd
and
and
mov
and
ljmp
popa
out
mov
mov
popa
and
and
push
cwtl
popa
icebp
cmp
pop
xchg
fsubs
and
sar
mov
mov
and
and
sbb
adc
popa
pop
jno
dec
pop
mov
aam
subl
dec
add
loope
add
cmpsb
dec
sbb
lahf
in
loope
xchg
dec
loope
ljmp
loope
cmp
push
and
and
cs
pushf
or
xchg
and
push
nop
dec
and
ljmp
and
mulb
jle
bound
fbld
bound
shll
icebp
dec
mov
and
dec
cltd
je
outsb
cwtl
mov
sti
fldenv
dec
adc
mov
pop
mov
mov
aas
sti
mov
scas
loop
push
loop
fnstcw
loop
push
mov
xchg
movsb
movsb
ljmp
loop
inc
mov
bnd
loop
jnp
add
and
in
and
int3
dec
enter
out
push
and
cmp
fistpll
mov
push
arpl
and
or
or
icebp
mov
arpl
dec
xchg
arpl
dec
in
mov
mov
add
cmpsb
dec
dec
push
lahf
in
mov
andl
mov
push
jecxz
push
je
mov
rol
jecxz
push
lret
dec
shl
ljmp
jecxz
adc
cmpsb
repnz
and
mov
out
mov
fisubl
sahf
aas
add
and
fimuls
in
and
sub
and
cmp
jb
ljmp
xchg
fs
and
fs
roll
icebp
push
fs
fxch
movsb
fldenv
fs
jmp
mov
insl
movsb
inc
insl
cltd
movsb
xacquire
out
mov
repnz
or
movsb
push
movsb
out
ljmp
es
out
lods
in
data16
pop
aas
std
shl
mov
pop
ljmp
ftst
aas
out
mov
jle
push
out
and
sarl
dec
cmp
mov
push
cmp
pop
mov
push
and
gs
fisttps
sarl
cmc
adc
dec
jnp
push
ljmp
or
mov
xchg
movsl
outsb
movsl
or
outsb
movsl
mov
fidivrs
mov
xor
cltd
xchg
sub
cwtl
movsl
and
daa
lret
pusha
push
ss
push
inc
push
popa
xor
jno
dec
and
aam
and
cwtl
in
arpl
dec
addr16
add
cmpsb
dec
inc
mov
jg
orl
shll
cmp
fistpll
fimuls
mov
es
and
or
mov
cmc
push
mov
ljmp
xor
pop
cwtl
dec
jecxz
dec
out
and
shlw
notl
mov
in
cmc
cmpsb
push
jle
or
aad
repnz
repnz
cmpsb
out
pusha
cmpsb
fisubl
popa
aas
outsl
shl
jle
and
out
jno
mov
out
and
mov
out
and
mov
scas
daa
adc
daa
sbb
in
sti
stos
and
inc
sbb
fsubl
dec
loopne
daa
add
daa
cmpsb
dec
mov
addr16
clc
and
es
addr16
ja
addr16
mov
int3
xchg
addr16
addr16
pop
addr16
and
pop
test
xchg
movsb
jg
cmpsb
movsb
jno
mov
and
inc
push
stos
es
dec
cltd
fldenv
dec
jae
lahf
in
cmpsl
jg
mov
ljmp
out
cmp
mov
out
aad
xchg
out
and
out
mov
or
sub
cmc
push
cli
dec
daa
out
ljmp
mov
push
or
dec
push
lock
sbb
add
sub
fldt
icebp
bnd
sub
fldcw
inc
mov
push
push
cs
push
mov
lret
push
mov
jno
in
test
shll
test
push
mov
into
cwtl
test
shlb
or
stos
push
call
data16
arpl
arpl
xor
xchg
mov
inc
stos
lock
inc
push
fdivrl
pop
or
mov
jo
mov
mov
cwtl
mov
aad
mov
sar
aam
push
popa
fld1
xor
out
xor
dec
inc
sub
sub
sub
data16
sub
fldenv
jno
mov
sub
mov
mov
inc
imul
pop
jecxz
pop
xchg
imul
imul
stc
test
test
dec
test
aas
aam
test
shrb
test
ljmp
pop
mov
jmp
dec
and
fs
adc
push
popa
adc
ljmp
test
sub
cwtl
ljmp
ljmp
movsb
lahf
in
ljmp
sahf
ljmp
ljmp
pop
dec
inc
xchg
and
inc
mov
aam
mov
xchg
mov
mov
ljmp
jmp
jmp
mov
and
aam
and
test
cli
and
out
push
xor
ret
data16
stos
inc
cltd
stos
repnz
out
push
stos
pop
pop
or
stos
xchg
dec
popa
stos
aam
push
aam
lock
cwtl
jmp
add
dec
pop
fldpi
add
jmp
dec
and
mov
in
push
jmp
and
or
loop
inc
sub
inc
sub
dec
inc
sub
popaw
in
xchg
out
out
push
rcll
and
inc
imul
imul
fldcw
xchg
dec
mov
imul
xchg
pop
aam
insl
outsl
xor
jmp
mov
mov
cld
stos
mov
add
rorl
arpl
cwtl
cmp
iret
data16
stos
mov
mov
mov
js
dec
and
aam
and
test
mov
in
and
call
sub
dec
ljmp
inc
mov
out
jb
cmp
bound
out
push
sub
fldcw
test
es
out
xor
dec
fnstcw
xchg
aam
lahf
sub
jle
sahf
jno
lret
insb
lahf
adc
and
mov
jno
push
jno
mov
rcl
push
test
ljmp
lods
or
cmpsb
repnz
loop
lods
in
repnz
out
mov
fisubl
cmpsl
aas
add
xor
in
push
mov
or
inc
cmpsb
repnz
loop
data16
data16
mov
aam
jns
jmp
ja
xchg
les
jg
popa
sub
sub
push
push
mov
mov
push
mov
push
ljmp
insl
or
cmpsb
repnz
insl
loop
out
repnz
lods
out
stos
lods
fisubl
push
xor
lods
push
subl
es
lods
mov
add
cmp
out
out
lcall
out
adc
stos
es
out
repnz
out
loop
fucomi
add
out
cmpsb
dec
mov
lahf
cmpsl
jmp
jmp
sub
adc
sub
or
fsubrs
sbb
loop
sbb
add
cmpsb
dec
imulb
lahf
mov
outsb
jmp
imul
outsb
and
inc
xchg
stos
es
outsb
repnz
outsb
loop
pop
outsb
inc
pop
cltd
outsb
repnz
and
dec
test
scas
aam
add
adc
dec
pushf
fldcw
dec
jbe
lahf
in
out
pop
icebp
sahf
or
scas
xor
cltd
jnp
mov
dec
adc
out
cmpsb
ret
fisubs
outsb
xchg
out
sahf
jno
outsl
das
lahf
mov
and
sub
das
pop
and
push
push
das
mov
movsb
aam
hlt
cmp
push
ljmp
outsl
or
outsl
dec
xchg
cwtl
outsl
inc
inc
outsl
inc
xchg
cltd
outsl
jno
dec
lahf
data16
mov
in
loop
lret
scas
xchg
lods
scas
and
dec
scas
dec
rcrl
fbld
scas
sub
in
mov
cmpsl
and
sbb
insb
f2xm1
xor
mov
shl
push
lock
inc
lock
aad
mov
popf
rcl
mov
lock
jno
ss
repnz
out
dec
mov
mov
cwtl
mov
and
arpl
fdivl
icebp
cmpsl
shl
mov
add
pop
jo
push
and
push
push
jo
sbb
push
jo
out
mov
mov
cmp
mov
mov
inc
mov
push
inc
mov
popa
mov
dec
xchg
mov
pop
cmpsl
es
mov
push
fnstenv
xor
xchg
icebp
cs
icebp
mov
and
icebp
cmp
pop
or
fyl2x
mov
mov
mov
xor
and
stos
adc
call
adc
xor
dec
jecxz
adc
mov
repnz
loop
inc
jno
inc
cltd
jno
pop
in
out
jno
xor
add
jno
dec
out
mov
mov
mov
xchg
mov
and
or
xchg
mov
push
mov
jno
push
mov
pushfw
mov
and
sub
repnz
and
repnz
stc
repnz
dec
repnz
mov
in
repnz
shrl
insl
cwtl
xor
xor
data16
sub
fldcw
fisttpll
mov
xor
dec
test
xor
push
ljmp
mov
adc
out
jle
icebp
pusha
dec
out
ljmp
xor
lock
jmp
and
jecxz
ficoml
push
out
jae
out
push
jne
sahf
mov
mov
mov
dec
cmp
dec
mov
mov
insb
pop
mov
xorl
int3
pushf
inc
xchg
cmp
cltd
repz
pop
clc
in
xchg
gs
mov
inc
shlb
mov
mov
push
test
push
aam
and
cs
pop
ss
dec
jmp
movsl
sbb
cmp
jns
fwait
cmp
daa
pop
cmpsb
inc
mov
fwait
mov
pop
push
call
sub
int
xor
pop
das
lahf
jns
cmpsb
movb
mov
ljmp
or
inc
or
xchg
mov
jnp
lahf
xlat
stos
adc
add
mov
sub
dec
lods
jb
xchg
insb
imul
xchg
adc
jg
or
sub
inc
xchg
sub
stos
xlat
je
stc
and
xchg
pop
lock
and
pop
mov
dec
je
lahf
lret
jge
in
push
sbb
out
lds
mov
jae
xor
sub
in
adc
ljmp
mov
adc
mov
push
test
and
mov
jmp
xor
pop
add
sahf
mov
jno
xchg
pop
cmp
jnp
dec
mov
push
es
mov
mov
mov
jecxz
ja
pop
repnz
hlt
adc
out
jae
data16
hlt
mov
gs
pop
jmp
push
pop
pop
adc
pop
scas
fsts
xor
dec
inc
mov
pop
xor
inc
sbbb
push
in
je
pop
sti
out
mov
stos
mov
shl
je
inc
das
lahf
cmp
lock
and
cs
scas
cmp
fnstcw
data16
out
pop
mov
bound
fiaddl
adcb
or
cmpsb
mov
mov
xchg
jp
xchg
jne
push
fstpt
fistps
sarb
and
mov
jmp
sbb
cmp
mov
or
jle
xchg
adcl
lret
jo
cmp
xor
inc
mov
insb
stc
jmp
cmp
push
cmp
or
xchg
out
inc
out
push
pop
or
mov
push
stos
cld
push
out
fdivl
dec
and
arpl
push
xchg
pop
mov
lcall
xchg
xchg
adc
or
push
mov
mov
jl
mov
cmp
and
xchg
in
test
flds
mov
in
lcall
push
ds
mov
pusha
sub
jp
adc
jmp
dec
adc
xor
mov
push
notb
lods
lds
or
sub
outsl
xor
and
rorb
push
mov
push
cmp
dec
rcll
int3
gs
imul
mov
push
fadds
outsb
and
out
sahf
cmp
pop
and
xor
ss
addr16
or
sti
lea
lods
push
lret
stos
add
cmp
divb
mov
pop
xlat
and
adc
cmpsl
dec
sti
adc
cmpsl
test
mov
faddl
sub
and
push
sub
or
pop
jb
mov
mov
add
push
fnstenv
dec
push
and
mov
fstl
fisubs
popf
push
push
fisubs
pop
push
gs
rcrb
or
xchg
mov
pop
sub
dec
in
adc
sbb
jmp
shrl
pop
cld
addr16
stos
jbe
push
mov
ss
pop
lret
fucom
cmp
xorb
insb
je
cmpsb
or
cltd
cmpb
subl
data16
out
mov
mov
cmp
testb
xlat
adc
jnp
pop
mov
fidivrl
cmp
imul
jnp
out
and
sbb
push
push
inc
pop
loope
cmp
mov
mov
inc
dec
jmp
xor
mov
lods
cltd
xor
in
mov
jecxz
shlb
or
data16
outsb
and
xor
dec
push
cwtl
testl
popa
cmp
in
jecxz
aam
push
pusha
mov
shlb
adc
clc
test
gs
or
adc
pushf
and
jo
inc
and
out
jmp
sbb
mov
xor
xchg
pop
out
out
xor
movsl
gs
sbb
test
fldl2e
repnz
push
lahf
adc
loope
xor
jle
mov
mov
jmp
aaa
test
mov
std
lret
call
push
sbb
pop
aaa
mov
push
movsl
xor
les
jle
sub
js
ja
jge
or
and
push
clc
ja
sarl
add
cld
push
cmpsb
and
jl
mov
mov
sub
push
ja
leave
mov
das
lock
mov
in
push
pop
or
pop
ret
sub
shrl
es
ja
xor
cmp
push
mov
jp
mov
jecxz
push
dec
mov
gs
add
push
scas
xor
mov
and
mov
out
adc
xchg
fisttpl
mov
xchg
mov
loopne
bound
jnp
add
sub
adc
std
mov
add
mov
xor
jns
sbb
push
xor
xchg
das
mov
popa
mov
jb
xchg
cli
sar
jmp
sbb
shll
xchg
sbb
sbb
sub
cmp
lods
shrl
xor
mov
fdivs
adc
dec
mov
int
addr16
enter
lock
xor
push
inc
aas
dec
in
dec
insb
sub
sub
les
xor
mov
mov
lcall
xchg
push
and
inc
test
ret
cmpsl
add
and
pusha
cmp
pop
pop
imul
cltd
js
push
fists
pop
and
xor
inc
test
mov
aad
jns
sarl
push
mov
clc
je
stc
subb
addl
call
cmp
dec
inc
repnz
jnp
dec
cwtl
movsl
jae
jecxz
lss
sbbl
adc
jmp
or
test
testl
mov
mov
pop
push
mov
rorl
test
js
cld
push
sub
fldt
lcall
jb
mov
jmp
dec
fdivrl
lret
add
faddp
icebp
jbe
mov
add
cmpsl
out
stc
inc
mov
sbb
in
or
hlt
jp
pop
inc
mov
mov
push
pop
fadds
xlat
shlb
mov
test
jle
adc
shlb
es
test
stc
mov
data16
lods
push
nop
inc
mov
mov
push
push
jmp
iret
dec
daa
jp
sbb
add
mov
push
ljmp
inc
cmp
mov
jl
lcall
fbld
push
push
sbb
dec
or
ficomps
and
mov
dec
inc
insb
add
xor
pop
add
frstor
ret
jns
or
call
push
push
jns
std
mov
push
das
mov
or
sbb
stc
pop
pop
adc
mov
jmp
arpl
fldcw
push
pop
sti
cmp
mov
test
pop
popf
pop
int
mov
dec
ret
sub
and
mov
push
sbb
daa
cmp
sub
das
jnp
test
imul
mov
inc
sub
jmp
mov
xchg
movsl
sbb
sarb
insl
hlt
push
ljmp
push
shlb
sti
dec
mov
xchg
fstl
cmp
xor
jg
mov
in
fs
scas
xlat
movhps
sub
scas
aam
cmpsl
jp
jmp
fs
cmp
sub
flds
mov
into
negb
mov
out
xchg
sbb
dec
xchg
push
and
cmpsb
mov
dec
and
das
xor
pop
sbb
xor
movsl
and
loope
test
sub
adc
add
cmp
lods
push
lcall
push
mov
mov
fs
xchg
fldcw
mov
pop
sub
push
mov
adc
loope
sbb
xorb
lock
sarl
fidivrs
push
push
cmp
pop
es
cmp
enter
push
sub
scas
jp
out
mov
sti
cltd
cld
ljmp
pusha
cmp
push
inc
test
outsl
das
xchg
pusha
xor
lret
pop
jmp
mov
inc
add
add
sbb
pop
out
gs
cmp
fisttpll
sbbl
inc
add
add
lods
mov
add
stc
xchg
nop
subl
mov
push
popa
popa
mov
jp
test
lahf
sbbl
or
imul
mov
pop
sub
movsl
loope
xor
sub
fcomps
rcr
sub
cmpsb
insl
or
inc
mov
insl
out
in
in
int
cmp
cmp
shll
lea
pusha
stc
push
fistpll
xor
xor
iret
ljmp
xchg
xchg
loopne
lcall
dec
mov
stos
rolb
mov
push
rcrb
shll
xchg
data16
les
add
mov
pushf
rdtsc
aam
lods
jbe
lods
insb
pop
push
lds
push
pop
push
in
sbb
lret
ret
push
jno
cmp
cmp
out
inc
lock
mov
loope
cmp
imull
cmpsb
cwtl
inc
push
xorb
add
fsub
mov
ljmp
adc
pop
sbb
daa
jnp
aaa
sub
and
dec
sub
pop
es
mov
jecxz
xor
mov
sbb
lcall
insb
dec
repnz
adc
mov
mov
movsb
stos
lret
ss
gs
push
jle
xchg
roll
sbb
in
and
mov
adc
pop
fcoms
xchg
stos
cmp
loopne
lds
pop
inc
push
int
orb
adc
or
cmp
sub
insl
sbb
je
subl
sbb
and
and
xor
in
in
mov
ror
mov
pop
das
mov
jb
lds
fnstsw
in
daa
mov
xchg
and
stos
fwait
jnp
adc
jo
pop
mov
jbe
icebp
xor
icebp
cli
cmp
movsl
lock
jg
popf
clc
mov
adc
mov
mov
xor
xchg
jge
push
or
ficompl
in
add
pop
lea
sub
mov
or
out
cmp
inc
dec
xchg
sbb
or
adc
cmp
aam
fstps
or
sub
and
jecxz
fsin
int
fistpll
add
mov
pop
mov
das
mov
sbb
cltd
fisubrl
arpl
push
jmp
pop
addr16
imul
xor
sub
ds
out
add
mov
cmp
adc
xchg
mov
test
xor
jmp
pop
in
xchg
dec
pop
push
es
sub
fcoms
xchg
hlt
pop
outsl
call
xor
outsb
jmp
fdivs
dec
fistpll
hlt
insb
mov
cmp
fscale
popf
jle
mov
in
push
scas
data16
cmp
pop
cmp
dec
pushf
mov
or
push
ljmp
dec
jnp
push
popa
imul
mov
lods
gs
cltd
jns
add
mov
out
outsb
jg
xchg
repnz
dec
cmpsb
cmp
or
loop
mov
insl
fdivrs
scas
data16
aas
pop
cwtl
mov
pop
loope
xor
xor
dec
jle
dec
add
arpl
cmpsb
outsb
data16
pusha
out
outsl
out
dec
inc
jnp
fidivrl
lahf
es
lods
pop
pop
cltd
insl
dec
jle
into
cmp
fidivl
inc
pop
xchg
repnz
mov
cmp
fnstcw
pop
shlb
in
mov
cmp
fnstcw
nop
add
pop
pop
fadds
das
stos
cltd
mov
aas
les
lcall
or
and
or
inc
jmp
xor
dec
or
dec
std
ds
mov
sti
inc
xchg
cmp
sahf
mov
jnp
in
out
cli
enter
and
add
data16
out
or
lahf
xchg
pop
jl
hlt
pop
cmp
bound
in
paddusb
pop
dec
les
pop
mov
push
push
sbb
pop
mov
pusha
mov
mov
aas
orb
sub
stc
xor
cld
popf
icebp
cmp
mov
mov
lcall
stc
inc
inc
sti
cmc
sub
insl
iret
sbb
jecxz
sbb
mov
imul
push
and
out
scas
pop
fwait
jb
fidivrl
xchg
in
and
fldenv
xor
mov
xchg
dec
sbb
pop
ja
clc
sub
dec
popa
sbb
test
xchg
and
add
icebp
jno
stos
fstpt
add
gs
loope
cmpsl
inc
push
jl
add
arpl
lret
loopne
and
test
mov
push
inc
dec
jb
repz
or
fwait
push
clc
cmpsl
push
rcrl
pop
scas
rol
mov
push
adc
aaa
out
cmp
sbb
mov
iret
out
call
data16
cwtl
jmp
pop
xor
jle
mov
flds
sub
push
inc
std
or
jnp
cltd
sbb
and
and
data16
shlb
jecxz
cmp
push
jo
incb
mull
push
cmp
sarl
dec
iret
repz
fwait
outsl
sbb
cld
lea
hlt
mov
jmp
stos
sahf
repnz
and
adc
push
je
fildl
cli
jns
lock
or
sbb
flds
or
fsubs
pop
jno
pop
clc
and
inc
cmp
movsl
mov
iret
jne
lcall
and
enter
or
pusha
into
xor
fstps
add
popf
pusha
shll
jo
add
inc
sahf
cmp
shlb
or
push
cmp
loope
gs
loope
fidivrs
inc
mov
in
inc
add
sbb
mov
aas
imul
pop
inc
add
in
iret
inc
bound
mov
call
addr16
sbb
inc
push
fnstcw
imul
xchg
cmpsl
add
mov
inc
xchg
inc
cmpsl
js
roll
pop
and
adc
mov
popf
xor
pop
cmp
pop
and
pop
out
out
mov
jp
rclb
pop
loope
fildl
cltd
xchg
rorb
add
das
inc
xchg
dec
gs
or
sti
frstor
movsl
pop
push
inc
adc
je
scas
or
add
sub
xor
jno
dec
mov
and
and
jl
rolb
aad
sub
data16
mov
leave
mov
mov
mov
jb
hlt
mov
cmp
xor
pop
jne
jl
and
lret
sub
ret
jns
in
in
jne
xor
insb
jbe
and
int3
into
pop
push
movsl
nop
cmpsl
stos
xor
push
xor
insb
out
sub
nop
clc
data16
xor
adc
sub
icebp
out
shrl
shll
gs
pushf
fnsave
loop
mov
mov
ret
jecxz
add
in
cli
pop
push
pop
mov
cmpsl
loope
mov
inc
xchg
add
xor
mov
in
sub
dec
jmp
pop
flds
sti
sub
dec
test
fnsave
stos
out
cmpb
jp
push
xor
push
inc
or
jmp
filds
ss
mov
or
es
and
rorb
jp
lret
cmc
adc
stc
pop
xchg
pop
or
mov
xor
jge
xlat
pop
dec
stos
sbb
jmp
bound
xor
test
cmp
mov
cmp
jnp
cmp
aam
push
xchg
pop
xor
movb
lret
aam
mov
sbb
mov
push
movsl
test
and
jmp
andl
sbb
leave
lock
ret
pop
data16
add
lods
enter
or
pop
mov
in
bound
mov
jecxz
push
and
dec
sti
inc
or
xchg
aaa
js
sbb
mov
shll
xor
adc
fidivrs
dec
daa
cmp
fisubl
and
adc
loope
mov
mov
push
jl
test
inc
push
ficompl
xor
xchg
inc
out
cmp
sbb
cmpl
out
inc
mov
test
bound
dec
and
pop
test
xlat
sub
or
and
pop
xor
cmp
les
insl
sub
in
sbb
adc
aam
test
cmp
push
movsl
stc
jmp
push
push
lret
arpl
inc
les
pop
inc
xchg
test
dec
leave
mov
sti
gs
xor
loopne
movsl
sahf
les
dec
push
fimull
gs
das
pushw
mov
mov
inc
in
inc
mov
mov
mov
sar
lods
or
xlat
add
icebp
xor
rcl
push
fldl
out
cwtl
sbb
shll
ret
addr16
adc
lods
inc
lcall
cld
addr16
inc
xor
sub
cmp
xor
xchg
push
cmp
sahf
adc
xor
xor
push
pushf
stos
out
or
dec
repnz
aaa
and
rcrb
repnz
adc
push
mov
push
inc
push
and
addr16
icebp
out
pop
addr16
adc
popf
sti
adc
cmp
jp
dec
dec
repnz
jl
iret
push
stc
test
loopne
xchg
popa
add
xchg
mov
dec
add
ficoms
rolb
cltd
push
out
fiaddl
shlb
xor
rcrl
iret
xchg
movsb
push
test
mov
mov
sahf
iret
dec
jae
fwait
cltd
addr16
lcall
mov
pop
std
mov
loope
std
xchg
stos
sub
lds
gs
fildl
and
lret
lds
lock
stc
push
push
aaa
ss
mov
or
ss
pop
fld
or
aas
and
pop
inc
inc
adc
int
sub
in
sub
stc
hlt
push
pop
adc
in
arpl
fisubrs
push
add
cs
or
push
inc
or
es
add
push
and
ror
jmp
jo
shll
lret
mov
pop
pop
sbb
cld
cmp
sub
rclb
jmp
add
lods
int3
mov
and
int
icebp
pop
dec
jge
mul
addr16
inc
pop
lret
arpl
or
dec
cld
adc
add
fwait
mov
and
pop
sub
iret
or
scas
pusha
jecxz
aaa
sub
mov
and
je
std
and
and
sbb
mov
es
lock
sub
mov
and
ret
mov
or
test
pop
aaa
ds
lock
jne
xor
add
nop
jno
bound
in
into
lahf
xor
jno
mov
cmp
and
and
lret
sbb
sahf
sub
xchg
stc
leave
ret
push
mov
and
sbb
xchg
lock
lods
cltd
loope
mov
jmp
xchg
scas
lahf
mov
push
fiaddl
fsubrs
addl
pop
cwtl
lods
sub
pop
or
sbb
loopne
jmp
test
pop
aas
xchg
lcall
imul
mov
jmp
jmp
jmp
outsl
adc
xchg
data16
cmpsl
movsb
jmp
js
push
adc
lock
mov
add
call
clc
cmpb
negb
pop
sub
pop
sub
divb
test
add
jg
in
push
jnp
pusha
jbe
jae
filds
mov
xor
ss
lcall
jmp
insl
dec
fldcw
dec
mov
jmp
fsubl
add
movsb
imul
and
jecxz
xor
mulb
cmp
imul
les
fisttpll
and
and
test
or
or
add
and
divb
and
or
sbb
or
push
xor
add
xor
aad
mov
and
outsl
pop
push
sbb
lock
push
xchg
sub
movsb
or
sub
dec
jmp
jmp
incl
push
cmc
add
cmc
test
dec
xchg
dec
or
es
push
out
scas
mov
arpl
and
jmp
cmp
stc
and
jl
jae
jmp
ljmp
or
js
push
add
imul
cmp
xlat
cwtl
push
cmp
ja
adc
xchg
mov
jecxz
sub
and
push
xchg
std
fistl
jno
and
pop
imul
xchg
lret
ret
pop
jmp
cmp
xor
dec
gs
pop
je
loop
cmp
dec
mov
mov
loope
loop
mov
push
push
dec
push
lods
pop
fldl
dec
push
iret
enter
pop
mov
jmp
out
or
cmp
pop
mov
cwtl
je
imull
fimull
or
jmp
stos
cmp
add
push
subl
push
pop
mov
push
ret
mov
cltd
lods
pop
arpl
xchg
aad
rol
push
in
push
cmp
ret
cwtl
mov
xor
lcall
add
and
sbb
dec
icebp
jle
and
addr16
jl
or
mov
mov
std
jmp
push
mov
dec
jae
xchg
mov
stc
cmpsb
lahf
jle
push
inc
sbb
es
cmpsb
mov
dec
dec
cltd
jne
xchg
in
pop
out
dec
data16
lahf
fcmovu
gs
repnz
leave
shll
addr16
dec
data16
leave
cmp
cwtl
xor
cmp
add
fstl
pusha
inc
scas
lods
cwtl
mov
frstor
loop
mov
icebp
cmp
loop
cltd
insb
cmp
jne
mov
or
push
cltd
or
or
xchg
enter
and
test
sub
cmp
pop
sti
cwtl
mov
rorb
add
push
lods
lret
arpl
loop
push
adc
and
xor
loope
dec
dec
pop
mov
fisubrl
je
mov
jp
scas
dec
cmp
fisubs
ret
mov
out
popf
cmp
adc
add
adc
pop
and
loop
jmp
dec
mov
lret
add
add
fldl
loop
repnz
loop
fmul
js
cmp
push
pop
enter
in
insb
push
or
imul
insb
cmp
or
adc
xchg
ret
xorb
or
shrw
push
xor
adc
dec
dec
pop
push
pop
mov
dec
mov
xor
pop
sub
dec
loop
mov
dec
stc
int3
pop
mov
push
adc
int3
ror
aam
sbb
clc
lahf
cmpsl
pop
mov
jb
pop
mov
inc
dec
mov
push
jae
adc
push
in
mov
pop
loop
mov
jle
dec
scas
lret
lret
lret
pusha
or
push
mov
test
dec
int
and
mov
aaa
pop
mov
xchg
pop
and
add
mov
and
mov
ja
pop
xor
xor
js
cmp
mov
push
pop
push
or
xchg
dec
inc
iret
mov
or
and
fisttpll
and
dec
andl
mov
aaa
fmuls
mov
fisubl
aas
or
xchg
push
mov
pop
dec
pusha
sub
push
push
mov
mov
scas
inc
cltd
jge
repz
dec
mov
mov
or
mov
xchg
xchg
mov
cli
cmpsb
lahf
mov
stos
cmp
xor
ret
jbe
ja
pop
cmp
mov
andb
adc
pusha
lret
nop
dec
sbb
push
aam
mov
and
sti
pusha
push
pop
jo
js
ss
jnp
mov
push
aam
pop
cmp
into
push
cltd
outsb
rep
xlat
push
ficoms
pop
cmpsb
xor
stos
data16
insl
xor
pop
aaa
in
lods
mov
mov
dec
or
dec
cmpsl
scas
mov
dec
popf
sub
fisttps
and
sbb
jp
push
dec
jecxz
add
adc
xchg
in
cmp
stc
dec
mov
and
mov
loope
loop
or
iret
mov
push
pop
xchg
loop
dec
rcll
mov
mov
imul
loop
in
lahf
cmp
clc
cmp
loop
pop
pop
cmp
in
enter
fcomps
pop
dec
pop
or
add
cmp
clc
test
inc
int
mov
lods
pop
pop
jp
push
jns
push
sbb
outsl
pop
push
dec
adc
ficompl
jns
mov
mov
push
pop
cwtl
mov
jecxz
mov
dec
xor
rcrb
data16
into
pop
cwtl
cli
cmp
cli
xor
mov
pop
cwtl
cli
cmp
pop
pop
data16
insb
cmp
mov
xchg
into
inc
into
mov
pusha
into
xchg
mov
es
jecxz
cmp
into
dec
add
cvtdq2ps
inc
andb
in
mov
adc
mov
shlb
or
jp
dec
or
shl
mov
dec
xchg
mov
dec
dec
jns
pop
mov
movsw
fwait
dec
lcall
dec
out
sub
dec
mov
outsl
sti
xchg
lods
mov
mov
xchg
xchg
lods
adc
xor
push
pop
cmp
lea
loope
loop
sub
scas
iret
mov
and
mov
cmp
mov
lcall
les
cmp
in
fnsave
xchg
iret
cmp
decl
xor
dec
dec
in
jnp
push
cmp
mov
es
mov
aad
repnz
adc
fnstcw
pop
adc
fs
movsb
insb
push
xor
dec
jle
cs
push
xchg
insb
dec
mov
xor
cwtl
adc
fmuls
cwtl
push
cmp
push
dec
push
out
scas
nop
pushf
xor
hlt
cld
xchg
mov
push
nop
xor
cmp
into
push
popw
adc
fld
cmp
and
out
mov
and
mov
xchg
lods
clc
mov
repnz
popf
xor
cmp
pop
push
in
fs
mov
sbb
xor
jb
jae
inc
mov
adc
es
jl
ret
and
and
push
mov
arpl
dec
and
xor
dec
jecxz
dec
dec
or
mov
sub
mov
mov
mov
les
sub
inc
pop
pop
lcall
push
fadd
pop
xor
pop
mov
inc
shr
std
loop
mov
sub
xchg
jo
cmp
mov
out
dec
fsubs
jp
mov
push
pop
pop
sbb
push
inc
cmp
xor
test
dec
mov
mov
cmp
cmp
std
lcall
ret
pop
jb
mov
cltd
int
dec
pop
mov
adc
es
cmpsb
mov
movsl
imul
xor
jbe
pusha
inc
aas
mov
adc
cmp
xchg
pusha
sub
mov
inc
jmp
pop
mov
push
xor
and
out
fisubs
outsl
push
xchg
xchg
inc
xor
daa
ret
cmpl
adc
mov
arpl
cli
dec
call
sti
cwtl
cmp
repnz
loop
mov
cs
pop
or
mov
loope
loop
mov
loope
loop
adc
fdivs
xchg
xor
mov
shlb
rorb
push
notb
fnstcw
pop
dec
cmpsl
pop
mov
pop
dec
ss
mov
aad
repnz
rcrb
pushf
jbe
pop
jno
xor
xchg
loop
js
js
inc
lret
adc
xchg
sarl
fstl
sbb
lods
loope
push
dec
adc
push
outsb
dec
loopne
idivb
dec
subl
mov
lods
cvtpi2ps
mov
mov
push
adc
and
mov
and
adc
cwtl
decl
xchg
dec
add
add
arpl
xor
mov
repnz
xchg
popf
xor
cmp
sbb
xor
add
mov
shll
dec
lcall
aad
inc
lods
adc
xor
sbb
cmp
lea
loope
loop
mov
xor
jg
mov
xchg
lods
std
mov
mov
xlat
int
adc
fdivrs
xor
fsts
mov
out
xor
mov
icebp
icebp
add
movb
mov
jne,pn
mov
push
push
pop
lods
popf
xor
jle
push
push
xor
cmp
insl
pop
xchg
xchg
out
push
add
es
xchg
repnz
push
sbb
cmpsb
mov
dec
dec
cltd
movsl
mov
mov
aam
xor
repnz
loop
mov
fimull
aam
xor
dec
mov
push
aam
mov
xchg
clc
sbb
and
in
mov
jmp
loop
mov
dec
xor
imulb
sub
push
ficomps
sbb
push
subb
and
cmp
dec
sti
shrb
mov
mov
repnz
lods
adc
cltd
dec
dec
pop
aam
sbb
inc
loope
dec
adc
jo
sub
xchg
out
pop
gs
xor
sbb
mov
dec
push
or
xchg
sbb
lahf
and
in
mov
jmp
pop
and
mov
lahf
pop
mov
aad
dec
lods
push
or
push
iret
mov
fnstcw
pop
cmpsb
aad
mov
sbb
xchg
mov
or
aas
sti
lcall
shl
push
roll
pop
cltd
lret
dec
dec
sbb
ret
sub
xor
dec
pop
loope
add
mov
sub
fld
and
mov
xchg
push
adc
inc
cmpsb
lahf
or
push
iret
push
xchg
dec
pop
fimull
pop
and
pop
push
in
data16
push
xchg
xor
out
cmp
lahf
dec
addl
cmp
xchg
fidivrl
outsb
cmp
fwait
xchg
fs
fdivrs
and
out
dec
shl
inc
pop
mov
xchg
pop
and
clc
stc
dec
sbb
dec
pop
lret
mov
pop
mov
sub
fcomps
mov
jb
aam
hlt
cwtl
test
lcall
mov
testb
pop
and
clc
stc
dec
sbb
add
mov
mov
mov
push
js
cmp
cmp
jbe
ret
push
lcall
mov
loop
fistpl
jbe
cwtl
sbb
in
cltd
mov
and
xorl
add
xchg
dec
xor
shlb
and
push
dec
lret
inc
jp
sub
xchg
ja
out
int
arpl
mov
xor
and
mov
pop
lcall
les
pop
xor
or
iret
push
jnp
sub
xlat
xor
dec
xlat
mov
enter
loop
xor
sub
push
sbb
cmp
rcrb
or
mov
adc
xchg
pop
mov
stos
es
cmpsb
mov
mov
lock
loop
mov
dec
loope
loop
sti
cmp
mov
push
loopne
pop
xor
mov
pop
movsb
and
fstl
gs
pop
cmp
sub
cwtl
xorl
cwtl
add
mov
aad
lcall
les
ja
or
and
js
cmp
adc
mov
inc
out
push
fdivs
cmp
rcll
inc
out
add
loop
leave
fdivs
pop
cmp
lea
loope
loop
sbb
fisttps
dec
push
insl
stos
xor
lock
mov
mov
sbb
sbb
stc
lret
dec
mov
mov
gs
mov
sbb
jecxz
mov
mov
xor
hlt
repnz
pop
lcall
pop
xchg
dec
orb
and
cmp
outsl
cltd
in
aaa
mov
mov
add
xor
add
push
leave
sbb
cmp
pop
dec
dec
cltd
jns
sbb
and
lods
and
fcmove
loopne
fnstenv
mov
fldenv
push
or
data16
fcomps
mov
pop
cmp
int
xor
pop
xor
sbb
xor
inc
sbb
icebp
mov
decb
enter
es
cmp
repnz
or
cmp
cwtl
lds
pop
into
lahf
stc
pop
push
mov
add
pop
inc
leave
icebp
mov
pop
cltd
aam
mov
sbb
fbld
fimull
pop
ja
out
loope
arpl
lcall
lcall
mov
sbb
adc
rcll
pop
cltd
fadd
mov
push
pop
hlt
jecxz
fidivs
or
xorb
cmp
js
cmp
in
pop
enter
dec
inc
ficompl
xor
cltd
fimull
xor
faddl
and
call
test
loop
mov
mov
les
stc
cmp
mov
add
leave
arpl
dec
and
dec
aam
add
mov
sub
faddp
and
xchg
pop
adc
mov
sbb
push
xchg
xor
sbb
xor
adc
inc
test
sub
pop
jbe
xacquire
jno
xor
sahf
ret
je
push
add
std
mov
fwait
mov
fstps
cmp
in
frstor
xor
xchg
pop
and
jbe
dec
pop
dec
out
inc
xchg
mov
cmp
pop
hlt
mov
aad
add
fmul
aad
repnz
fcmovnu
xor
pushfw
fstpt
decl
xor
adc
mov
sbb
cltd
shll
out
xor
dec
pop
int
test
sub
sbb
xor
data16
xor
int
xchg
test
lcall
xchg
mov
dec
dec
pop
mov
or
pop
xor
sbb
fisttpll
and
sbb
lds
pop
fdivrs
pushf
fnsave
xchg
pushf
cmp
decl
xor
loop
xchg
sbb
lods
fdivrl
push
sub
popa
test
dec
xchg
fsubrl
sub
add
sub
jno
mov
fsubl
pop
inc
cltd
xorb
dec
in
sbb
jle
js
sbb
pop
lods
mov
mov
lods
cvtpi2ps
mov
cvtpi2ps
mov
push
sub
mov
add
pop
enter
fisubrl
pop
add
lret
and
pop
push
aam
mov
clc
sbb
mulb
loope
inc
popa
cmp
xor
sub
lcall
cmpsb
daa
mov
popf
arpl
inc
inc
aam
xchg
enter
fsubs
xor
xor
insl
frstor
fs
dec
testl
sub
sbb
test
es
dec
and
xor
dec
fisttpll
and
call
jo
xor
mov
push
movsb
push
push
or
or
xor
pop
xor
cwtl
sbb
loope
fdivs
xorl
xor
inc
cltd
pop
xchg
dec
mov
xchg
dec
inc
push
pop
clc
and
mov
lods
mov
out
in
or
in
sahf
lods
sub
idivl
sub
add
sbb
mov
xor
or
loopne
sahf
xor
mov
fisubs
fimuls
push
sti
pusha
or
lods
push
mov
xor
adc
int
xor
pop
hlt
loope
fidivs
or
xorb
aaa
pop
js
cmp
xchg
pop
jge
mov
pop
lcall
shlb
pop
repnz
mov
out
mov
loop
mov
cmp
lcall
mov
add
out
xor
push
rolb
cmp
push
pop
xor
cmp
mov
outsb
lahf
adc
fsincos
or
rcrb
lret
clc
and
mov
sub
test
sub
filds
fptan
jb
loop
cmp
sub
cltd
fildll
lahf
cwtl
inc
movsl
mov
jae
movsl
xlat
loope
xor
fistl
xor
dec
mov
hlt
dec
mov
mov
mov
xor
negl
mov
dec
cmp
in
and
fimull
and
out
leave
jecxz
lcall
fsubs
cltd
mov
es
cmp
lcall
shlb
xor
pop
jl
clc
int3
sub
pusha
xor
out
popa
pusha
out
fmuls
add
mov
and
test
cmp
stc
scas
subb
cld
mov
add
xor
pop
cs
adc
call
fildl
iret
shrl
mov
cltd
dec
cmp
pop
out
cwtl
gs
je
imul
sbb
andl
pop
cltd
out
cmp
loopne
es
int3
stc
jp
pop
pop
sbb
and
es
fnstenv
repnz
loopne
andl
in
and
adc
jg
ja
mov
xor
orb
or
leave
push
das
sub
and
push
popa
fsubr
movsb
popf
and
gs
or
sub
stc
repz
mov
or
mov
test
inc
cmp
add
xor
fidivrs
popa
jg
push
mov
ljmp
aam
cmp
out
xor
mov
pusha
mov
pop
pop
clc
xor
int3
xchg
popa
push
cwtl
push
cmp
dec
cltd
idivb
xchg
movsb
dec
lock
mov
mov
push
inc
or
mov
mov
enter
bound
data16
mov
mov
loope
mov
loope
push
loope
mov
mov
mov
cwtl
loope
test
dec
xchg
test
mov
lea
jno
dec
mov
xchg
and
mov
mov
gs
and
cwtl
testl
fisubl
cmp
xchg
sti
scas
fisubl
lods
bound
cmpsb
mov
pop
and
bound
test
pop
mov
movsb
loop
or
xchg
bound
pop
int
pop
aaa
mov
movsl
pop
mov
mov
or
jecxz
aas
mov
dec
dec
mov
repnz
mov
add
xchg
popf
lods
mov
mov
nop
in
jno
movsb
push
loop
mov
and
and
mov
es
loop
push
pop
arpl
mov
sti
scas
fisubl
lods
and
mov
cltd
cmp
push
test
dec
cmc
mov
and
pop
mov
pop
sahf
mov
orb
arpl
cmp
scas
loop
addr16
arpl
mov
push
arpl
into
xchg
arpl
cltd
sub
or
and
ss
pop
mov
movsl
loop
jp
dec
mov
mov
mov
clc
dec
aas
out
push
out
mov
in
lods
jecxz
dec
lock
dec
mov
jecxz
cmp
jecxz
sbb
mov
push
jecxz
pop
sub
lods
pop
movsb
push
bound
mov
and
inc
add
cmp
and
loope
mov
mov
and
mov
and
es
lods
arpl
cmp
push
loopw
outsl
fs
andw
iret
dec
mov
iret
js
test
dec
dec
cmpsl
dec
loope
clc
inc
in
pop
es
cltd
cmpsb
cmp
adc
movsb
fisubs
add
repnz
movsb
cmpsl
cmp
pop
jp
out
adc
dec
sbb
mov
mov
clc
dec
sub
icebp
in
mov
cli
in
mov
inc
in
dec
in
fsubs
out
cmp
cmpsb
lahf
pop
add
cmp
mov
push
cmpsb
mov
mov
pop
clc
sub
and
dec
mov
mov
and
mov
and
cmp
repnz
push
repnz
gs
je
mov
movsb
push
or
or
subl
rcr
pusha
pushf
dec
adc
and
mov
cli
movsl
lret
sub
dec
es
sbb
imul
rorl
clc
inc
test
movsl
or
mov
xchg
adc
and
mov
mov
and
fbstp
ja
icebp
fidivrl
and
ret
push
xchg
in
xchg
dec
clc
jb
sub
aad
loop
fxam
xor
pop
out
enter
jmp
test
xchg
cs
or
std
es
cmpsb
es
imul
mulb
jecxz
cmp
cmpsb
pop
es
jle
inc
cmp
or
cmpsb
mov
pop
popa
jg
test
dec
outsb
test
add
mov
cwtl
dec
fcmovnbe
xchg
lock
nop
out
push
test
repnz
out
pop
fimuls
shll
lret
mov
shll
push
mov
sahf
pop
mov
call
and
cs
out
mov
push
out
stos
aaa
arpl
out
and
ss
sub
popa
data16
push
xchg
test
xchg
dec
jb
dec
cmp
daa
lods
and
clc
dec
jmp
push
daa
mov
lret
data16
lods
cwtl
mov
or
jne
jle
les
and
fisubrl
fmuls
loop
popa
rcrl
stos
mov
push
or
adc
das
sub
addr16
roll
aam
xor
bound
and
jb
push
fsubrs
data16
subl
xchg
dec
stc
arpl
pop
mov
mov
adc
ljmp
insb
cs
or
jp
movsl
test
xchg
popa
and
sub
xor
cmpsb
push
mov
out
and
aam
imul
mov
fistpl
xchg
xor
push
in
nop
rcll
cs
fsubrs
and
mov
and
sbb
les
push
fnstenv
flds
or
sbb
pushf
imul
xor
xor
ss
mov
sti
imul
cmp
in
mov
push
sbb
gs
pop
fldt
mov
push
in
ljmp
dec
dec
xchg
sub
cs
ljmp
fsubr
enter
fldenv
or
sub
xor
push
jbe
lock
mov
enter
sub
cwtl
push
jae
test
addr16
in
jo
arpl
adc
push
pop
pop
pushf
lods
xchg
mov
mov
and
in
pop
inc
cmp
xor
imul
test
cli
loope
loope
mov
jge
test
mov
fwait
bound
mov
fidivl
inc
adc
inc
sarl
cli
jecxz
push
xor
gs
inc
nop
push
sub
lods
mov
dec
out
jmp
test
bound
cwtl
test
xor
or
push
lods
mov
stos
inc
roll
adc
xchg
dec
mov
xchg
fdivrs
pop
aad
test
mov
fwait
aad
or
inc
lods
fwait
push
jmp
mov
cmp
mov
dec
fildll
adc
adc
jecxz
outsl
test
adc
cmp
imul
or
xor
sbb
mov
xorb
push
sub
jbe
adc
in
icebp
divl
pop
xor
arpl
sbb
insb
mov
mov
and
in
mov
aaa
push
lcall
push
fldcw
das
mov
ret
in
jle
pop
inc
pusha
push
pop
xchg
push
mov
in
aam
xor
pop
pop
popa
std
dec
aam
xor
out
dec
in
add
iret
pusha
dec
fwait
sbb
ljmp
or
test
add
repnz
sub
out
pushf
lock
or
cmpsb
out
sub
stos
push
lods
stos
cld
fdivl
test
pusha
cmpsl
mov
ret
jle
into
out
stos
loope
imul
int
adc
inc
inc
xchg
inc
lret
nop
dec
lahf
fstpl
mov
inc
fs
mov
inc
inc
mov
addr16
aaa
jnp,pn
jmp
xchg
push
dec
mov
cmc
out
dec
sub
push
jl
xchg
mov
adc
js
push
inc
das
test
push
sbb
and
loopne
push
xlat
xchg
scas
sahf
jb
sub
aas
push
add
pop
xor
mov
and
fisttpl
shll
arpl
subl
push
jmp
mov
insl
pop
and
or
xchg
jle
mov
xchg
cs
ljmp
sub
lods
mov
mov
sub
sbb
push
jnp
xchg
sub
and
and
and
lret
ljmp
mov
xchg
sbb
mov
in
nop
cs
popa
push
nop
mov
sub
stos
fldl2e
inc
mov
outsb
mov
inc
into
jno
xchg
stos
ljmp
stos
ljmp
mov
outsb
or
jmp
xchg
adc
jecxz
cwtl
jmp
cmp
arpl
repnz
xchg
loop
cwtl
sub
jae
loop
cmp
mov
push
cmp
out
shrb
sarl
mov
in
jbe
push
cmp
imul
inc
pop
repnz
imul
fsubrs
and
imul
enter
das
cmp
fildll
push
sbb
xor
test
cs
or
cld
sub
push
jno
fnstcw
sub
mov
or
sub
dec
imul
mov
in
lcall
xchg
push
fwait
es
in
cmp
mov
scas
mov
in
loop
cmpsb
jp
pop
ret
push
mov
lods
dec
mov
mov
sub
push
mov
push
sub
push
dec
dec
test
arpl
jle
movsb
sub
insb
ljmp
pop
and
lods
dec
xor
push
cmp
pushf
fsts
lods
pushf
push
repnz
jo
pushf
fldcw
lret
mov
in
mov
push
push
jne
ret
push
les
in
and
inc
stos
shl
push
fsub
es
sub
das
dec
xor
shlb
scas
scas
and
cltd
dec
mov
lock
aam
ret
scas
dec
mov
and
pop
fdivrs
in
cmp
pusha
loopne
push
jl
mov
sbb
fmul
mov
imul
add
mov
cmpsl
ficoms
push
data16
xchg
cmp
subb
lods
fs
mov
lods
lcall
xchg
mov
push
pop
out
shll
mov
stc
loope
js
dec
inc
out
fistpll
inc
outsl
push
cmp
out
xchg
jbe
es
cltd
repnz
out
loope
bnd
out
pop
cltd
repnz
and
es
mov
repnz
cs
pop
cmc
imul
pop
scas
pusha
pop
in
popa
mov
enter
adc
mov
xchg
ja
pop
jp
sub
outsb
ljmp
dec
scas
xor
push
insb
jg
mov
adc
pop
stc
xor
sub
add
lock
pop
xchg
nop
js
xor
leave
mov
aad
mov
and
and
dec
mov
mov
in
insl
scas
scas
into
loop
cs
mov
and
jge
jbe
ljmp
push
mov
jnp
sub
aas
jb
fldenv
xchg
iret
data16
out
jg
outsb
jo
test
pop
mov
jl
lds
outsl
mov
cmp
out
mov
add
out
lcall
out
sbb
inc
das
pop
ja
push
mov
das
fsubr
cmp
mov
or
stos
pop
xor
outsl
or
mov
outsl
adc
icebp
dec
or
and
shrl
mulb
enter
scas
jg
test
xorb
scas
faddp
xchg
mulb
arpl
mov
cltd
jle
aaa
lock
aaa
jno
xor
fiadds
or
lret
fwait
repnz
mov
dec
inc
or
cwtl
mov
jno
xchg
insl
adc
fistpll
adc
fldt
pop
fisttpl
mov
mov
jo
ret
pop
fldt
pop
addl
inc
jo
dec
inc
repnz
xor
adc
test
dec
push
bnd
xor
jbe
fnstcw
xor
aas
jmp
aas
xlat
aas
inc
lret
mov
sbb
mov
mov
arpl
jmp
jp
test
loop
sbb
pop
cwtl
icebp
movsb
ljmp
jmp
jl
dec
ljmp
push
push
out
aad
cmc
setb
pop
icebp
sbb
and
repz
push
xor
cmp
leave
xorb
cwtl
and
popa
and
mov
jno
dec
jno
jo
inc
out
push
jns
stos
sub
cmp
aas
push
adcb
je
or
outsl
loop
mov
sbb
xor
mov
push
test
sub
xchg
bnd
and
xor
dec
dec
mov
xor
data16
fsubrs
xor
add
int3
stos
jl
push
mov
xorl
outsl
mov
pop
cmp
dec
ret
push
cmp
iret
mov
cmp
xchg
inc
and
jno
sbb
xchg
add
push
arpl
xchg
sub
cmp
sub
xor
cmp
arpl
xchg
outsb
es
xchg
cmp
and
jae
xor
repnz
push
hlt
addl
ret
mov
push
hlt
jge
lcall
jge
or
pop
xor
outsb
pop
ljmp
mov
push
imul
jne
test
scas
repnz
xor
mov
push
or
xor
rolb
lahf
ficompl
fisubs
inc
movsb
loop
lret
in
jge
cmp
adc
jl
push
popa
stc
das
jg
jl
aam
push
pusha
movsl
gs
push
movb
lret
mov
nop
pop
cmp
mov
insb
sub
repz
pop
push
lods
loopne
nop
xor
in
add
loope
xor
xlat
les
xor
aaa
out
cmp
push
mov
pop
cmp
cmp
loopne
hlt
jle
repnz
pop
out
mov
mov
jne
out
and
add
aas
xor
daa
jb
or
jb
pop
enter
xor
inc
dec
pop
addb
and
mov
and
out
mov
sbb
fnstcw
dec
cmp
cmp
fs
cwtl
repz
cmp
je
dec
out
pop
aas
sub
repz
sbb
sbb
inc
sahf
inc
orb
cmp
loop
cmpl
ret
cmp
mov
mov
lods
inc
sbb
aaa
fnstenv
inc
out
fcompl
test
push
inc
rorb
pop
fsubr
and
sbb
enter
mov
fnsave
dec
and
xor
inc
mov
mov
xor
pop
repz
mov
aaa
cmp
pop
ss
ss
push
shll
and
call
dec
or
loope
imul
pop
cmc
movsl
imul
fdivl
icebp
xor
faddl
and
cmpsl
dec
or
movb
mov
sbb
sbb
sub
mov
sub
pop
xor
test
into
sbb
in
test
ljmp
cs
daa
xchg
pop
xchg
je
je
movsl
inc
scas
mov
lods
cmp
inc
fldcw
in
mov
mov
sbb
icebp
stos
dec
push
pop
subb
hlt
lea
push
jle
sub
scas
imul
push
arpl
cwtl
hlt
ljmp
adc
inc
adc
mov
inc
pop
fbstp
es
rorb
pusha
jge
jae
and
pusha
aam
mov
xor
lcall
mov
notb
loope
cmp
push
loope
call
adc
mov
jmp
ds
jl
cmp
adc
loop
mov
sbb
cmp
loopne
push
mov
mov
push
ret
int
xchg
xchg
jbe
jmp
les
jmp
cmpsl
loopne
push
dec
in
pop
push
lcall
sti
pop
sub
cmp
icebp
mov
in
sub
push
shl
mov
sub
fiaddl
xor
mov
ljmp
jo
push
mov
jne
sub
mov
jne
loope
dec
adc
mov
sub
and
push
sub
ja
sub
jbe
mov
cmc
ret
inc
gs
cmp
pop
dec
popa
mov
sub
loopne
sub
sub
dec
mov
push
out
push
jae
mov
or
mov
dec
call
cwtl
push
rol
push
mov
sbb
data16
inc
xor
sub
or
pop
mov
jne
sbb
ja
inc
pop
iret
cmp
int3
and
push
and
aaa
shll
cmp
aaa
sub
mov
jecxz
lret
and
push
fiaddl
add
cmp
shll
fdivs
add
cmpsl
es
sbb
mov
imul
int3
mulb
mov
mov
inc
and
push
loope
pop
scas
push
or
mov
cli
and
ss
sub
dec
sub
pop
in
pop
sub
sti
pop
lods
aas
xor
jb
pop
cmpsl
cwtl
aam
mov
aaa
cltd
stos
shll
ret
dec
or
ljmp
xor
out
dec
lods
push
clc
cmp
pop
sub
mov
stos
pop
cmp
cmp
rcrb
sub
mov
mov
adc
add
insb
testl
jp
and
add
iret
pop
lret
dec
rorb
pop
mov
inc
loop
adc
mov
ljmp
and
adc
std
jnp
movb
cmp
lahf
jb
aam
inc
imul
sub
cmp
cli
test
cmp
mov
je
scas
push
mov
movsb
mov
mov
jmp
dec
cmp
cltd
jmp
out
leave
mov
cmp
jo
jl
bound
jo
mov
insb
les
rcl
aam
add
dec
out
movsb
fnstcw
sbb
lret
xor
aaa
fsubr
mov
adc
call
sti
push
pop
fdivs
decb
cmpsb
mov
imul
sub
cmp
ss
push
push
mov
iret
cmp
aam
fistpll
xor
shll
notb
cmp
mov
rolb
and
stc
nop
dec
in
push
mov
ja
in
add
push
int
jge
fldl2e
add
sbbb
jns
sti
ja
xchg
repnz
xchg
inc
and
shlb
popa
xor
push
xor
fildll
xor
sarb
outsb
inc
lods
xor
add
pop
mov
push
pop
lods
mov
mov
inc
data16
jae
stos
std
punpckhbw
inc
shl
in
push
mov
fidivl
data16
sbb
enter
and
cmp
mov
mov
xchg
sbb
outsl
jge
test
fstps
out
jno
in
mov
outsl
repnz
mov
rorl
int
jl
or
mov
and
jae
pop
inc
clc
cmp
cmp
and
mov
mov
inc
mov
jnp
sub
sub
in
jo
mov
pop
or
fdivr
push
orl
ret
mov
aaa
daa
sub
popa
jns
hlt
xchg
faddl
bound
mov
push
dec
lods
adc
adc
lret
imul
cmp
mov
flds
mov
push
push
inc
or
pop
pop
les
pop
out
in
pop
ficomps
ret
sub
ljmp
lock
xchg
das
call
ljmp
sahf
idivb
sub
dec
or
loop
fldt
inc
push
pop
js
out
or
adc
xchg
adc
xor
sahf
push
lret
cltd
xchg
int
xor
fldl2t
es
mov
arpl
mov
cld
fbstp
push
ss
fadds
arpl
jg
ret
ss
inc
mov
mov
mov
and
pop
xchg
loope
xor
shrl
fisubs
pop
pop
pop
fdivrs
and
cmp
data16
pop
shrb
repnz
cmpsl
push
rclb
mov
sub
mov
push
imul
inc
or
sbb
fbstp
mov
and
in
xor
enter
int
movl
in
lcall
cld
jle
add
jns
push
and
mov
test
add
outsl
xchg
lahf
push
xchg
cmp
mov
jle
push
xchg
out
pop
pop
shlb
or
in
mov
cmp
std
add
mov
inc
mov
and
add
test
xor
add
mov
sub
sbb
xchg
push
data16
inc
icebp
out
gs
test
xlat
bound
lcall
and
mov
pop
mov
cmp
sub
cmpsb
or
fldenv
jb
pusha
sub
fmuls
jns
and
rorb
jmp
dec
mov
mov
data16
pop
lea
scas
or
mov
data16
mov
dec
imul
repz
cltd
sbb
inc
int
add
and
sbb
pop
loopne
mov
cmp
and
cmp
bswap
movsb
clc
jmp
sbbb
adc
and
orl
sub
xchg
mov
dec
mov
ljmp
mov
pop
pusha
out
add
mull
fcomps
in
or
int
mov
adcl
pop
popa
xor
jp
and
xor
jnp
les
mov
xlat
adc
adc
movups
mov
and
pop
dec
inc
and
adc
lds
pop
arpl
pop
mov
fldenv
stos
mov
and
inc
jae
and
xor
and
int
and
inc
cmp
sahf
mov
rol
fstps
mov
or
and
ficomps
loope
push
and
cwtl
cmp
and
and
mov
xor
xor
sbb
bnd
dec
popa
xchg
xor
cld
sahf
cmp
push
sub
lret
sub
pushf
inc
mov
jge
dec
popa
or
and
cmp
fnstcw
cmp
fnstcw
aas
rcll
bound
dec
loope
ret
and
sti
sub
mov
mov
imul
aas
mov
call
inc
call
gs
shrb
fstl
sub
loop
cmp
push
push
les
add
icebp
clc
xchg
xlat
sti
test
dec
aam
add
inc
loop
push
pusha
stos
shrb
xor
push
ja
jnp
ljmp
cmc
fwait
cmpsb
movl
dec
jl
aam
dec
and
and
mov
mov
jp
iret
cli
je
ss
lret
cli
push
cmpsb
xor
cmp
decl
ljmp
xchg
xchg
popa
jo
mov
and
fstps
sahf
scas
xchg
cmpsb
cmp
cmp
sbb
fstp
fnstcw
xchg
loope
mov
mov
daa
pop
lea
out
cmp
ss
ljmp
ja
jl
int
add
inc
adc
shrl
imul
mov
aam
pop
and
cmp
and
arpl
loop
addr16
pop
xor
push
pop
or
cmp
pop
cmp
dec
or
adc
and
and
xor
and
or
jl
icebp
outsl
data16
jae
mov
jg
push
subl
and
int
cld
inc
sub
cwtl
lods
pushw
xlat
outsl
jb
lahf
mov
mov
push
dec
sub
stos
insb
xchg
mov
push
or
cmp
ja
mov
cmp
data16
cmpsl
pop
test
lret
clc
movsb
ljmp
adc
out
or
aad
stos
mov
xor
dec
xor
pop
sahf
repz
dec
sahf
adc
test
and
fsubs
and
pushf
pop
jp
outsl
mov
or
mov
xchg
mov
out
aas
cltd
pop
std
mov
fstp
xchg
lahf
fisubs
pop
sbb
jecxz
pop
data16
inc
mov
push
pusha
outsb
mov
fisttps
sti
pop
xchg
or
mov
nop
clc
lods
xlat
sub
test
movsb
addr16
scas
cmc
push
push
mov
subl
dec
jmp
jae
sub
daa
pop
mov
das
cmp
insl
int3
sub
mov
cmp
mov
dec
push
mov
fmuls
push
fisttpll
xlat
sbb
movsb
inc
mov
dec
or
sub
roll
flds
mov
or
int
fwait
dec
and
and
cld
jne
sub
inc
xor
and
mov
or
adc
lock
popa
jo
pop
cwtl
mov
mov
jbe
sbb
mov
xchg
data16
out
inc
lret
xor
xchg
mov
ljmp
fildl
push
and
pop
lcall
js
aam
loop
loop
fs
ljmp
mov
push
cmpsl
sbbl
jp
mov
lahf
sub
incb
cwtl
pop
add
pop
fisttps
mov
popa
stos
movsb
cld
jg
sub
enter
sub
sahf
fs
in
loopne
mulb
cmp
js
fneni(8087
test
mov
cltd
addr16
sub
xor
mov
mov
sub
cmp
sbb
cmp
fistps
jnp
cs
out
movsl
data16
add
dec
dec
push
adc
adc
bound
fstpt
fisubs
fucomp
fidivs
ss
mov
sub
scas
dec
fs
filds
mov
pop
flds
push
pop
mov
pop
fsubrs
aam
imul
lcall
sahf
popa
gs
dec
fsubs
gs
scas
fdivs
or
aaa
rcll
xchg
gs
pop
cli
adc
loop
mov
push
js
mov
out
test
xchg
neg
dec
pop
mov
mov
pop
push
gs
mov
jo
dec
push
decb
gs
mov
je
jmp
dec
jg
or
insb
cmpsl
in
cwtl
mov
mov
daa
sub
nop
fcmovnbe
pop
add
mov
mov
add
outsl
dec
insb
xor
int3
sarl
sarb
or
cmp
and
in
xchg
lods
ret
adc
mov
bound
inc
mov
mov
dec
xorb
jg
mov
mov
je
jae
pusha
push
adc
aam
lock
sbb
xchg
mov
std
dec
gs
divl
mov
and
je
mov
mov
pop
mov
xor
inc
imul
push
fwait
addb
andb
cwtl
repnz
enter
mov
in
into
xchg
pop
sbb
inc
sbb
cmc
mov
arpl
pop
sti
push
jnp
xor
pop
push
dec
pop
popf
push
sbbl
xor
pop
sub
insb
lcall
pop
mov
pop
xlat
push
adc
iret
ss
sub
and
or
call
leave
inc
xor
andl
push
push
aad
cmp
rcr
vfnmsub132pd
push
lds
xor
rcrl
jle
or
pop
cld
jb
lods
sti
cltd
not
cmp
orb
xor
cld
dec
sbb
scas
pushf
push
aaa
jae
mov
xchg
cmp
dec
xor
fldl2t
andb
cmp
and
add
inc
out
push
rcrb
push
mov
xlat
cmp
pop
mov
incl
shll
pop
lret
xor
add
push
popf
add
data16
add
out
xchg
movsb
add
rol
mov
mov
dec
inc
cmp
dec
mov
cmp
lods
ret
jne
and
out
pop
ret
jb
lahf
es
cmpl
flds
shr
fiadds
fbld
sarl
fadd
cmp
shrl
sbb
and
pop
sar
inc
jecxz
or
out
lock
mov
jl
loopne
xchg
push
cmp
push
out
jecxz
xor
pop
out
flds
cmp
add
cmp
and
imul
inc
das
in
fld
add
out
or
cmp
lcall
xchg
add
aam
jb
std
fidivrs
or
in
adc
push
lods
mov
add
fnstenv
ret
inc
ret
nop
ret
dec
in
push
pop
inc
pop
mov
lods
add
out
ficoms
iret
pop
lds
xlat
adcb
jb
xchg
xor
test
scas
int
xchg
add
xor
insb
jno
data16
xchg
jne
dec
pop
fsubrs
sub
and
inc
in
xchg
jne
das
inc
inc
mov
std
fstps
imul
inc
ljmp
add
mov
cmp
push
aas
les
jnp
fidivrs
inc
sub
ljmp
movb
sub
sbb
mov
jge
icebp
jp
fcoml
movsl
loop
xor
add
xor
jmp
std
adc
aaa
mov
xor
xchg
inc
addl
mov
add
cmp
imul
test
dec
ret
sbb
mov
dec
fwait
mov
sti
pop
inc
addr16
rorb
mov
push
cmpsb
leave
xchg
pop
push
and
xor
sbb
mov
push
loopne
sub
jbe
fimuls
cmp
inc
fwait
cmp
ret
fwait
data16
ret
xor
xchg
fcomps
shll
sub
out
jle
inc
add
scas
addb
bound
test
sub
add
rcl
add
mov
dec
popf
push
sub
or
lods
out
lods
push
cmp
or
pop
out
sbb
sub
lods
in
jo
push
xor
fcmovbe
inc
std
sub
adc
dec
sub
pop
xor
lcall
cltd
test
lds
or
sbb
jecxz
xor
cs
fcoms
jg
ficoms
test
cmp
mov
mov
push
pop
in
xor
fwait
in
into
test
xor
and
pusha
fldl
and
push
push
in
les
shll
inc
sbb
pop
les
xor
fld
repnz
movsl
les
testl
and
xchg
mov
jg
cwtl
xchg
mov
add
add
add
xor
push
mov
inc
mov
xor
lock
inc
jno
dec
cmp
negl
enter
clc
push
push
inc
or
pop
inc
mov
mov
sub
aas
neg
test
mov
pop
lea
das
fistpl
cmpsl
dec
xchg
pop
fidivrl
jo
mov
lds
flds
int
out
xchg
cwtl
inc
fimull
jb
push
cld
cli
inc
cmpsb
incb
cmpsb
mov
xchg
inc
aaa
lea
bound
insl
test
xor
int
push
and
push
push
lods
inc
mov
mov
add
dec
jb
push
and
inc
adc
xchg
test
sub
inc
mov
xchg
push
inc
xchg
push
xchg
popf
xor
xchg
fistpll
sub
notb
testb
stc
pop
add
pop
inc
push
insb
dec
pop
popf
pop
das
dec
jp
add
or
mov
es
lods
pop
add
icebp
lods
push
enter
fldcw
cli
dec
aam
xchg
jmp
loopne
cwtl
xchg
cld
cmpsl
xlat
stos
mov
and
pop
jbe
xchg
fldt
mov
frstor
jae
in
jg
in
mov
das
and
pop
pop
dec
mov
cmpsl
dec
pop
cmpsl
cmp
mov
fists
fmul
shlb
and
cmp
flds
add
inc
dec
jbe
enter
adc
cltd
gs
pop
inc
loop
mov
and
or
and
xchg
push
scas
movsb
mov
or
dec
pop
cltd
xchg
lds
inc
out
mov
loop
cmp
idivl
inc
imul
ljmp
arpl
movl
xor
pop
dec
pop
xchg
push
nop
rcrl
sbbb
xor
dec
or
mov
jmp
pop
pop
lret
or
fstp
push
data16
mov
or
push
mov
fmull
or
mov
cmp
and
dec
xchg
push
inc
orb
inc
and
dec
pop
out
xchg
out
lahf
dec
out
call
mov
pop
leave
in
fsubl
mov
or
cmpsb
cmp
mov
or
enter
dec
adc
out
aas
icebp
fxch
repnz
mov
std
enter
sub
enter
dec
push
adc
stos
inc
and
pop
out
movntq
out
lock
jb
mov
adc
add
or
adc
push
sbb
jb
clc
stc
mov
sub
xchg
or
fisttpl
rolb
mov
movsb
scas
rcl
scas
dec
notb
data16
xchg
dec
dec
dec
cmpsb
mov
fsubl
loope
lret
cmp
dec
sahf
and
and
xchg
push
inc
scas
fmuls
into
mov
rcrl
mov
or
dec
and
negb
xchg
cmp
dec
popf
add
clc
leave
movsb
mov
roll
pushf
cmp
dec
pop
leave
lahf
pushaw
leave
cmp
fmul
cmp
dec
pop
pop
xor
or
xor
es
mov
add
xchg
and
mov
mov
pop
or
or
icebp
cmp
scas
mov
jg
jo
insl
sub
sbb
loope
jl
adc
add
sub
icebp
rcr
or
pop
outsl
sahf
call
outsb
inc
cmp
mov
dec
fnsave
dec
cwtl
dec
aad
sub
dec
and
loop
add
xlat
xchg
aas
sub
in
mov
icebp
or
sub
jmp
add
mov
rorb
or
jle
and
js
dec
fwait
mov
or
and
js
xor
xchg
lret
cmp
es
lret
gs
lret
adc
dec
pop
inc
xlat
mov
bnd
loop
jmp
in
push
dec
mov
ret
or
cmp
es
push
mov
jbe
pop
outsb
rorb
int3
out
mov
data16
stos
cmp
lahf
data16
cmp
fmuls
ljmp
repnz
in
aam
in
push
and
add
lret
fisubs
add
outsb
dec
out
or
fwait
cmp
dec
addb
pop
sbb
gs
inc
push
stos
dec
cld
or
inc
or
dec
push
or
aas
push
les
dec
or
pop
dec
mov
lea
dec
out
out
sbb
push
or
insl
pop
cmp
cltd
dec
outsl
xchg
dec
aas
fcmovnu
dec
repnz
mov
out
dec
cmp
cwtl
mov
popa
push
push
sahf
mov
add
mov
shll
movsb
push
push
or
lock
and
xlat
push
dec
add
add
xchg
pop
xor
sub
or
dec
jmp
or
or
xor
and
pop
or
pop
and
lahf
ret
pusha
out
mov
dec
mov
adc
clc
fidivl
sub
adc
sub
into
add
dec
divb
hlt
in
stc
sub
scas
pusha
mov
sbb
or
test
pop
cli
stos
pop
fcomps
dec
jmp
jg
xor
mov
xor
pop
pop
xor
packssdw
shll
into
mov
mov
imul
stos
movsb
es
xchg
sub
repnz
mov
sub
and
jb
cltd
int
mov
lock
cmp
sbb
jge
iret
or
ficomps
dec
and
jg
xor
rorb
fwait
sub
xchg
push
ficoms
pop
repz
sahf
adc
aam
push
push
xor
lret
aas
sub
sbb
negb
dec
mov
dec
or
push
hlt
fxch
decb
dec
or
push
sbb
jb
gs
inc
push
inc
mov
jl
sub
mov
adc
ror
mov
dec
stc
adc
lahf
mov
fwait
lods
xchg
mull
fwait
scas
or
mov
mov
adc
xchg
cmp
pop
sahf
outsl
cwtl
into
imul
roll
xchg
jbe
imul
inc
jp
rorl
jecxz
mov
bound
mov
sahf
out
jo
shlb
or
mov
jge
adc
daa
repnz
into
ljmp
into
or
cmp
ja
cwtl
sub
imul
jle
sub
sub
cmp
xchg
or
xchg
push
mov
fcmovu
test
das
fucomip
nop
cmpsb
imul
cwtl
dec
cmp
fdivs
push
dec
cmpsb
inc
gs
dec
outsl
out
push
push
mov
dec
push
stos
loope
sbb
dec
push
dec
iret
dec
pop
mov
mov
icebp
push
and
shl
mov
iret
or
dec
push
and
mov
adc
sub
adc
rcll
pop
lret
rcrl
and
in
lds
idivb
stos
and
inc
and
lahf
lret
xchg
nop
ret
cmp
lahf
rcll
pusha
nop
cmpsl
xchg
aaa
gs
daa
movsb
push
jae
push
push
rorb
stc
imul
loop
jns
das
adc
mov
jl
and
fbld
push
adc
aaa
jbe
inc
dec
aam
lods
cld
inc
fstl
cld
dec
inc
test
adc
sub
lret
push
xor
cmp
inc
pop
xchg
inc
and
data16
sub
dec
pop
or
cs
ss
xchg
push
jae
in
push
mov
fisttpl
cltd
mov
cs
cs
push
mov
data16
scas
or
xchg
out
jne
out
inc
xchg
out
sub
xchg
repnz
xchg
loop
pop
xchg
lods
jns
mov
xchg
pop
mov
fisubrs
jns
shll
dec
mov
mov
lods
mov
enter
adc
int
arpl
mov
push
xchg
aad
and
addr16
into
or
cmp
mov
adc
fsts
repnz
cmpsl
dec
fs
repnz
rcr
pusha
lods
arpl
or
mov
out
inc
push
out
adc
jmp
and
adc
push
mov
push
xor
lahf
aas
lods
xchg
ja
ss
shll
adc
imul
mov
xchg
mov
test
loopne
xchg
in
mov
xchg
mov
jnp
adc
xlat
into
cmp
in
shl
cmp
push
and
rorb
rolb
add
out
cwtl
rcr
popf
lods
arpl
or
inc
push
or
add
xor
jg
ss
lahf
adc
push
clc
arpl
and
jbe
or
mov
inc
aam
enter
push
or
mov
or
cltd
push
and
xchg
or
aam
sarl
xchg
mov
aad
mov
data16
fnstcw
sbb
push
and
rcl
mov
xor
mov
push
or
xor
push
aam
rcll
out
aas
mov
and
lea
out
cmpsb
fmull
popa
addr16
lahf
inc
mov
fwait
mov
int
push
sbb
insl
sbb
lret
jp
push
push
inc
inc
dec
imul
sub
push
push
push
clc
lret
push
mov
or
imul
push
sub
mov
or
decb
jecxz
jecxz
push
xor
aad
shr
xchg
sbb
aad
mov
push
or
or
inc
push
aas
faddl
jl
jmp
into
fsts
mov
mov
movsb
push
sbb
push
dec
aam
mov
inc
cmpps
xlat
aam
nop
mov
dec
mov
adc
adc
sub
filds
and
cwtl
push
cmp
mov
data16
loop
pop
enter
sbb
popa
out
stc
mov
and
sub
push
sbb
loope
sub
outsb
loope
adc
aam
push
mov
mov
lahf
mov
imulb
repz
ja
or
das
inc
jnp
int3
push
sahf
push
mov
rdpmc
and
lahf
in
sub
fidivrl
in
push
jbe
mov
sub
xor
js
pop
aam
addr16
pusha
arpl
push
stos
xchg
sub
xchg
cltd
cs
mov
test
push
test
das
orb
push
test
xor
int
cmpsl
ret
push
mov
cmp
ljmp
dec
mov
notl
add
cld
jmp
mov
jecxz
in
xchg
cli
and
iret
in
arpl
repz
push
mov
jno
aam
mov
aas
inc
pop
popf
push
cwtl
push
cltd
xchg
and
mov
cltd
xchg
popf
push
xor
jp
adc
push
sbb
xchg
adc
pop
or
xchg
and
das
adc
scas
dec
sub
fisttpl
int3
xor
xchg
mov
pushf
sub
xchg
cld
mov
inc
push
out
or
xchg
shlb
lret
mov
inc
cs
or
shrl
xor
fstl
pop
es
or
iret
out
ljmp
das
or
pusha
adc
cmp
rclb
cmpsl
cmp
and
stos
add
iret
inc
jmp
and
push
xchg
inc
fcoml
stc
xor
mov
xchg
sti
in
test
js
xor
xchg
jns
pushf
mov
pop
int3
and
dec
sub
pop
and
negl
push
cmc
mov
pop
gs
icebp
sub
xchg
cltd
pop
lds
mov
clc
movsl
sahf
imul
lahf
movsb
pop
pop
dec
push
sub
xchg
push
push
sub
or
and
jg
jge
xchg
xchg
rcll
pop
add
adc
mov
shrb
push
mov
xchg
cltd
imul
fdivs
mov
imul
mov
push
rcl
jmp
pop
insl
mov
jnp
and
xchg
lods
gs
xchg
sbb
adc
lods
cmp
rcll
data16
sbb
mov
shlb
js
lret
xlat
push
clc
xlat
xchg
jp
inc
xlat
repnz
xlat
jecxz
ja
add
lret
xlat
mov
pop
xchg
sti
sbb
add
cmp
add
pop
out
jl
pop
mov
push
aas
jns
dec
xchg
cmpsl
insb
dec
pop
pop
aam
mov
xchg
cwtl
xchg
cwtl
xchg
and
sbb
pop
push
and
repnz
adc
dec
test
cmpsb
loope
arpl
and
pop
mov
neg
jp
arpl
cmc
in
loopne
fcomps
outsb
push
fisubl
sti
fadds
insl
and
push
test
pop
aam
push
jb
cmc
mov
cmp
sub
fiadds
out
pop
pop
fwait
insl
fadd
mov
dec
cwtl
fsub
ss
push
test
sub
inc
mov
imul
rcrb
insb
push
pop
sbb
popf
lods
movsb
mov
inc
loopne
adc
aas
adc
xlat
loopne
stc
mov
aas
mov
inc
fimull
and
gs
push
push
adc
fcmove
aas
outsb
xchg
cltd
cmp
adc
inc
cltd
xor
fstps
sbb
rorl
loope
xchg
cltd
sbb
sahf
inc
pop
xor
add
push
pop
inc
mov
out
out
pop
loop
fldenv
imul
xchg
and
stc
gs
leave
or
dec
xchg
shll
and
imul
stc
sbb
call
xor
dec
fwait
out
push
lods
fcoml
or
punpckhbw
pop
inc
test
out
hlt
iret
popf
addl
pop
xor
and
mov
pop
xchg
pusha
mov
pop
push
addr16
xchg
cmpsl
pop
movsb
inc
xchg
add
fbld
pop
loopne
jns
and
data16
add
mov
lcall
pop
lcall
jnp
fstps
sbb
dec
js
xor
sub
pop
dec
fimull
and
pop
and
mov
fisubrl
lods
pop
push
pusha
push
insl
sbb
xchg
pushf
mov
sbb
mov
dec
cmp
insl
push
and
gs
push
sub
in
pop
mov
pop
dec
jg
scas
mov
insl
push
pop
xchg
cltd
stos
sub
xchg
jl
mov
fwait
mov
into
dec
fwait
push
jo
add
mov
sti
lock
out
xor
fisubs
cmp
scas
es
int
fisttpl
fldt
xchg
enter
arpl
mov
out
sbb
dec
repz
data16
aas
cmp
cltd
sbb
lret
push
sbb
pop
sbb
out
cmpsb
sbb
in
pop
mov
jb
jae
cmp
out
stos
and
jbe
stos
pusha
push
pusha
mov
pop
into
pop
xchg
sub
stos
out
ret
pop
cmpsb
push
cmp
ss
adcb
gs
ret
rcrb
push
cld
sub
cmp
mov
cltd
pop
or
loop
fisubl
push
pushf
mov
outsb
inc
pushf
cmp
fnstenv
sub
cwtl
pushf
dec
xlat
pushf
jg
movsb
mov
dec
hlt
push
sahf
xor
push
fsubl
es
lds
test
or
fnstenv
loop
xchg
fsub
adc
adc
mov
sub
or
les
adc
cmpsb
and
mov
addr16
push
inc
mov
insl
jle
loop
sbbb
sbb
mov
dec
or
enter
insl
or
out
xor
in
pop
nop
xchg
daa
data16
fsubr
fiaddl
jno
pop
and
lock
pop
sarb
stos
and
clc
adc
in
sub
pop
mov
mov
test
fld
mov
lds
rcr
imul
in
popf
ljmp
sahf
jg
xchg
jl
int3
popa
mov
popf
inc
les
inc
xor
xchg
cwtl
popf
xchg
aas
out
fistpl
cmp
popf
dec
out
xchg
fnsave
inc
imul
cmp
pop
jle
ret
fnsave
sti
xchg
add
icebp
pop
inc
std
pop
mov
inc
mov
arpl
push
into
fnstsw
inc
das
decb
addr16
cltd
fnsave
stos
cltd
jmp
push
sub
xchg
std
fwait
pop
cmp
sbb
mov
mov
dec
movsl
jns
adc
xchg
push
mov
fildl
sbb
adc
inc
mov
pop
fidivrl
cmp
js
shll
push
rcl
fmuls
loope
loop
pop
push
orb
jnp
loop
inc
mov
rcrl
lods
pop
mov
jns
or
loope
popa
mov
les
stos
inc
cwtl
jae
call
mov
sti
adc
xchg
jmp
ret
pusha
std
pop
imul
jg
fisttps
pop
push
roll
jne
imul
mov
pop
subl
xlat
mov
dec
pusha
aad
cmp
xor
xor
pop
xlat
push
addr16
push
push
sub
inc
dec
push
out
pusha
icebp
sbb
cld
dec
cmpsl
inc
stc
cwtl
fistpll
out
sahf
stc
hlt
enter
inc
in
or
iret
insb
enter
addr16
xchg
loopne
int
adc
sub
data16
inc
sti
mov
add
mov
pusha
cmpsb
xchg
mov
mov
shrb
push
rolb
loopne
fdivp
scas
adcb
lock
sbb
xchg
movsb
xor
pusha
pop
push
daa
xor
fiadds
adc
inc
cmpb
movl
adc
adc
or
mov
push
nop
adc
sbb
in
add
dec
mov
or
sti
pop
movsb
lcall
enter
and
movsl
and
xlat
pusha
fbld
or
adc
fsubrs
nop
pop
mov
xchg
xchg
adc
push
push
stos
jg
mov
fisubrs
cmc
push
dec
arpl
mov
mov
in
inc
push
ss
adc
pop
jnp
jmp
xor
and
stc
loop
repz
xor
xchg
add
mov
insl
add
aam
xor
mov
loopne
dec
lahf
loop
ja
clc
dec
pop
sbb
fwait
xchg
jecxz
imul
push
pop
push
lds
mov
sub
xor
and
sub
mov
jmp
sub
pop
shl
popa
and
orl
aam
push
popa
rcrb
push
lahf
pop
mov
lahf
fimull
add
add
dec
lea
dec
or
ljmp
and
adcb
sub
call
dec
inc
adc
sarl
fistl
pop
lea
inc
ss
test
and
pop
dec
fsubr
cmp
push
out
inc
and
sub
adc
adc
pop
cld
sbb
int3
cwtl
push
cmp
dec
mov
inc
pop
xchg
mov
arpl
push
repnz
pusha
loop
mov
pop
out
cmp
es
cmpsl
loope
lcall
sarl
mov
data16
pusha
jne
cmp
adc
test
lahf
sbb
ljmp
add
outsb
dec
and
movsl
enter
mov
push
gs
enter
inc
test
stos
jb
sbb
in
shll
arpl
mov
add
ret
out
push
or
mov
rorl
into
ss
add
add
xor
mov
sarb
cmp
sbb
out
mov
sub
fnstcw
pusha
inc
sbb
xor
sbb
cmpsl
mov
jl
cmp
daa
mov
jmp
test
outsb
cmp
fs
jp
cmp
repnz
sub
fistpll
mov
inc
xor
push
adc
push
fwait
push
lea
xor
lea
icebp
adc
dec
shr
cltd
testb
je
mov
cli
and
fldenv
mov
pop
cltd
movsb
cmp
fimull
push
xchg
adc
mov
cmc
ret
vmovlps
loop
aas
cmpsl
addb
and
sub
mov
popa
jne
js
add
push
or
xor
cmp
data16
aas
inc
fldenv
push
popa
cmpsl
cmp
movl
rcrl
das
mov
test
inc
fisttps
cmp
or
je
bound
and
xor
mov
inc
push
add
fsubp
cmp
mov
jb
sti
call
pop
push
or
inc
push
mov
fs
cmpsb
or
adc
sub
push
lods
and
mov
cmp
add
aaa
cltd
xchg
add
xor
nop
lahf
and
popa
jle
push
out
fs
lds
jb
cmp
push
in
iret
loope
cwtl
mov
pop
add
adc
or
inc
aam
cmpsb
loope
pop
push
subl
jp
ret
mov
nop
lret
mov
rorl
cmp
daa
fwait
sti
push
cmp
and
lock
cmp
das
jge
mov
pop
inc
shl
fldenv
cmp
and
xchg
cmp
mov
jae
mov
out
mov
pop
jl
dec
sbb
fnstcw
es
cs
mov
fldenv
ret
faddl
and
and
bound
fiaddl
sahf
imul
push
leave
cmpl
or
adc
aas
lds
cmp
imul
mov
xchg
mov
xchg
stos
mov
jo
inc
shlb
pop
iret
pusha
mov
cwtl
mov
loopne
push
mov
or
adcb
inc
xor
ret
inc
add
xchg
sub
test
loope
popa
pop
ljmp
pop
push
xchg
push
add
adc
imul
dec
movsl
xor
loop
or
data16
mov
ret
rcrb
sahf
xchg
xchg
shlb
cmpsl
jmp
xor
mov
dec
sub
sub
xchg
data16
fs
sbb
xor
and
cs
jbe
dec
jl
das
xchg
repnz
dec
arpl
or
stc
lcall
dec
add
fldenv
out
cli
ljmp
adc
arpl
pop
ljmp
push
mov
cld
mov
in
adc
daa
push
pop
xor
arpl
push
jb
call
bnd
cmp
arpl
insl
lcall
pop
or
mov
pop
rcrl
pop
sbb
xchg
aad
sahf
cmp
fisubs
pop
arpl
dec
inc
rcll
imul
scas
movsl
in
fbstp
and
xchg
rcll
xlat
fisttps
and
xor
push
int3
daa
push
sub
std
mov
fcoml
jmp
sbb
dec
mov
faddl
adc
inc
xchg
sbb
sahf
push
arpl
push
aas
outsb
xor
loop
addr16
out
rcrb
cwtl
test
or
fisubs
lahf
enter
fisubs
out
int
or
fdivr
repz
cmp
loope
rolb
imul
rol
xchg
mov
jnp
cmp
push
cwtl
lcall
mov
fs
stos
gs
pop
js
out
cmp
sahf
xchg
in
dec
add
inc
xchg
cwtl
and
popa
movsb
das
scas
nop
push
jmp
fidivrl
out
out
lret
in
pop
and
mov
jno
push
out
mov
dec
pop
push
shr
jecxz
xor
dec
mov
bound
xor
xchg
ficompl
jnp
loope
faddl
and
push
test
in
cmp
pop
and
adc
mov
loope
in
jne
pop
cmp
mov
sar
inc
outsb
insl
scas
out
and
mov
inc
or
or
cmp
sahf
in
and
adc
lods
stos
push
dec
add
sub
test
lret
sahf
out
jp
lock
lds
lcall
jnp
sub
pop
fidivl
xchg
dec
sahf
test
and
jle
mov
out
ret
inc
gs
arpl
jmp
mov
out
push
and
test
mov
shrb
int3
aad
push
pop
sbb
jle
mov
cmp
mov
push
filds
pop
inc
movsb
pusha
testb
stos
movsl
enter
ret
mov
insl
push
inc
adcl
push
outsl
adc
mov
xor
out
les
das
jle
xor
daa
sub
data16
dec
xchg
adcb
add
inc
sahf
cmp
or
out
sahf
jle
jp
aas
mov
std
sub
ljmp
insl
sub
popl
add
cmpsb
push
stc
out
xor
mov
and
xchg
jl
push
add
xor
adc
mov
test
pop
loope
push
lock
mov
scas
push
lret
andb
mov
dec
in
daa
movsl
push
push
popa
into
test
rcrb
xchg
or
adc
cmp
add
nop
dec
lret
or
adc
loop
sub
lret
lret
icebp
jnp
enter
stos
mov
mov
aad
adc
sbb
aaa
inc
xor
jg
pop
jmp
jmp
loopne
loopne
out
sub
xor
xor
lea
xchg
nop
insl
test
sbb
dec
mov
dec
xor
out
and
push
xor
mov
sub
pop
pop
mov
int3
cwtl
dec
outsl
or
sbb
add
xchg
add
or
jne
mov
cmp
loope
fsub
sbb
pusha
cwtl
push
in
insb
mov
mov
pusha
mov
sub
inc
imul
fucom
imul
mov
sbb
jnp
int3
add
pop
loope
fsubs
jge
sub
cs
inc
cmovp
cmpsb
dec
push
or
rcrl
mov
sub
xor
das
shrb
cs
add
jle
xor
sub
scas
jmp
sahf
pop
test
adc
xor
dec
jns
insl
adc
dec
shl
aam
cwtl
out
cmp
mov
fsubrl
xor
divb
cmp
fbstp
pusha
push
roll
push
xor
popa
push
xor
lahf
pop
cmp
adc
dec
adc
jecxz
xor
test
fstps
lret
loopne
pop
push
pop
xchg
xchg
icebp
out
dec
lock
push
test
jbe
mov
mov
push
xchg
sub
mov
and
test
out
addr16
mov
faddl
adc
xlat
sub
sub
cwtl
and
mov
les
dec
imul
xchg
sti
out
lods
call
pop
aad
push
xlat
jle
int
pusha
adc
adc
in
in
ret
fsubs
scas
cmpsl
sahf
data16
cmp
ds
imul
cmpsl
hlt
and
je
fisttpll
subl
adc
aas
data16
sub
mov
out
out
loop
push
aam
popa
loop
mov
not
jg
cmp
xchg
ljmp
gs
add
lret
mov
clc
iret
sub
push
sbb
mov
jp
dec
mov
xor
addr16
pop
pop
pop
sub
filds
pop
pop
mov
sbb
fstpt
scas
mov
xchg
and
or
add
test
es
mov
rorb
cmpsb
add
fbstp
push
mov
cmpsl
mov
popf
cwtl
pop
mov
push
mov
push
fldenv
mov
rorb
es
sub
sub
shl
lcall
cmp
and
scas
push
push
lahf
pop
out
or
push
in
pop
orb
add
push
lods
leave
loop
aaa
and
sub
in
push
int3
dec
mov
push
popa
imul
cmp
inc
jb
jge
stos
and
test
in
jl
call
add
pop
sub
pop
movsl
pop
push
sarl
pop
push
xchg
popa
les
std
cmc
ljmp
adc
mov
sbb
jns
pop
inc
add
jmp
pop
scas
ss
test
insl
call
sbb
xchg
imul
push
jge
fistpll
cs
or
add
loop
imul
push
inc
idivl
mov
sbb
pop
xor
sub
aad
aad
dec
sbb
shr
sbb
ljmp
pop
icebp
sub
pop
lahf
jmp
and
sub
mov
test
mov
add
jo
sub
in
fnsave
dec
sub
sub
test
adc
xor
xor
and
fisttpll
xor
and
fs
mov
outsl
xchg
ds
imul
mov
in
sahf
cmp
cmp
xor
xchg
es
addr16
dec
flds
inc
push
add
dec
insl
bound
sub
xchg
pop
imul
sahf
imul
pop
push
imul
das
es
xor
cwtl
test
jno
std
jmp
mov
pop
je
test
pop
ljmp
push
adc
arpl
pushf
xor
push
mov
mov
cmp
push
sub
jmp
shll
movsb
mov
mov
mov
cmp
sbb
jae
and
outsb
lods
push
hlt
xor
repz
push
and
mov
push
adc
lock
stos
scas
pop
aad
dec
fldl
insb
mov
fisttpll
mov
push
test
pop
repz
ret
push
in
ret
lea
sub
test
pop
inc
es
scas
lods
ret
mov
pop
enter
sub
out
js
dec
enter
gs
movb
ljmp
pop
and
push
cld
rorb
sbb
fwait
mov
jbe
push
ja
xchg
cwtl
outsl
and
out
dec
test
gs
jbe
es
ret
loopne
push
and
imul
pop
sarl
clc
or
lcall
jle
push
push
cmp
testb
cltd
fcmovu
mov
fdivs
shlb
adc
jbe
inc
daa
lcall
subl
insb
or
push
xorl
push
mov
loope
ret
xchg
xchg
pop
out
cmp
inc
xchg
pop
cli
and
pusha
mov
dec
adc
mov
mov
sub
push
push
sub
enter
test
and
dec
xchg
in
pusha
mov
mov
out
cmc
fs
in
mov
andl
sbb
test
push
fs
aad
mov
add
out
jb
add
jp
and
inc
stos
repnz
sarl
sarb
xchg
sub
mov
loope
movsb
rcl
jo
sub
nop
scas
out
stos
int3
and
xor
mov
mov
xchg
rcrb
loop
outsb
xchg
fmull
cwtl
sbb
push
dec
add
or
gs
pop
shrl
insb
xor
dec
in
mov
pop
repz
pop
in
xchg
sbb
sbb
aas
xchg
and
out
lret
ss
movsl
gs
sbb
fidivrs
and
push
pop
xlat
loope
pop
fcoms
lea
sbb
loop
lfs
arpl
pop
fs
mov
out
das
jmp
mov
xor
cld
out
repz
in
in
mov
push
and
pop
ss
mov
mov
outsl
shrl
and
jl
jl
xchg
out
imul
mov
rcrl
scas
and
push
in
or
jg
mov
jno
imul
mov
in
mov
aaa
lods
mov
sti
test
push
pop
pop
inc
lods
sarb
mov
push
cmp
stc
cmp
xchg
in
call
in
stos
dec
sbb
cmpsb
cmp
and
jb
pop
xor
add
jb
or
sbb
ret
jmp
stos
xor
dec
and
push
mov
or
cmp
and
loop
jno
push
in
pushf
dec
sbb
jo
inc
jae
iret
es
stos
and
push
push
aam
mov
sbb
push
push
add
pop
push
es
push
push
ljmp
std
insb
cmp
fsubrs
inc
xchg
fsubrs
out
jecxz
fsubrs
insb
arpl
push
jmp
jl
shlb
sbb
push
test
push
push
lods
xor
sub
lock
int
mov
data16
outsb
dec
inc
jnp
and
push
push
xchg
in
or
sbb
and
push
sub
sbb
mov
mov
mulb
push
lahf
sub
iret
dec
sub
iret
es
add
insl
mov
or
sarl
sbb
stos
and
add
aam
insb
lods
dec
push
out
pop
push
cmc
lods
or
lods
pop
fnstenv
lods
dec
aam
or
enter
jne
sub
ficomps
mov
je
jne
inc
pop
and
mov
out
or
out
pop
fprem
outsl
pop
sub
out
sbb
mov
ss
sahf
test
icebp
fldcw
repnz
add
out
mov
jecxz
aaa
scas
push
xchg
fsubrs
out
pop
arpl
cli
pop
pop
fucomip
pop
sub
mov
ret
mov
adc
icebp
and
pop
push
push
in
fldcw
cmpsl
scas
stos
stos
flds
aad
xor
inc
outsb
test
mov
lock
push
xor
and
pop
vxorps
sub
shll
fdivl
mov
pop
and
subb
shlb
popa
mov
mov
scas
sbb
mov
or
bound
or
repnz
es
test
outsb
out
mov
jns
out
dec
pusha
dec
enter
xchg
push
mov
mov
clc
mov
enter
mov
lahf
adc
movsl
xor
xchg
dec
sub
push
mov
test
in
dec
es
mov
sbb
push
and
dec
push
adc
inc
mov
pop
pop
dec
cltd
mov
push
movsl
adc
jp
pop
repz
cmp
dec
and
inc
in
orl
xor
test
push
pop
add
fbld
pop
cmp
out
gs
call
cmp
leave
cmp
ss
push
aaa
pop
test
dec
inc
dec
sbb
imul
add
sub
xor
fwait
add
mov
nop
xlat
and
rorl
data16
push
pop
fsts
loop
fistpl
pusha
dec
xchg
sarl
scas
int
gs
lea
push
aas
cmpsb
cmp
test
bound
pop
cmp
cmp
cmp
jb
cmp
in
and
jno
adc
data16
mov
cmp
sbb
mov
ds
and
mov
inc
mov
fidivrl
icebp
lock
fimuls
lock
cmp
cs
dec
test
lock
dec
fxch
or
cmp
pop
imul
sbb
pop
pop
push
cwtl
lock
and
dec
es
lock
ljmp
mov
push
and
inc
stos
stos
add
imul
xor
in
ret
cmp
dec
repnz
stos
jp
adc
in
dec
repnz
push
loopne
jb
lret
sti
pop
imul
mov
pusha
aam
test
cmp
aas
lods
fnstenv
jb
jecxz
xchg
push
inc
in
lock
push
add
mull
mov
out
nop
jo
js
ret
shll
jg
dec
data16
pop
lret
movsl
mov
push
loop
loopne
inc
pop
xchg
jo
cwtl
int
xor
jns
and
mov
dec
adc
or
push
out
aas
jo
lcall
lret
cmp
xor
pop
popa
outsb
icebp
xchg
icebp
jbe,pn
xchg
icebp
jle,pn
xchg
icebp
cs
xchg
icebp
or
fs
fyl2x
or
xor
mov
arpl
and
dec
ror
arpl
out
pop
es
fs
push
push
loop
insb
xor
mov
xor
std
xor
lea
sub
xchg
xor
or
xor
lcall
scas
sub
mov
cmp
pop
jmp
jno
mov
jno
jno
mov
jno
mov
shll
push
imul
push
clc
out
cmp
clc
sub
aad
mov
mov
fld1
cmp
lods
stos
mov
xor
cmp
stc
xchg
jnp
leave
sahf
xor
sbb
call
lods
sbb
mov
icebp
fcompp
push
test
xor
add
dec
or
iret
jle
xchg
and
cmp
lret
imul
not
sbb
rorb
xchg
mov
fnstenv
loope
repnz
cmpsl
in
xchg
and
repnz
xor
inc
repnz
out
xlat
inc
enter
call
sub
xor
data16
pop
adcb
add
jmp
dec
pop
push
xor
xor
cltd
mov
xor
repnz
add
ficoml
inc
daa
xor
add
rcl
sbb
mov
mov
data16
push
xor
mov
adc
push
movsl
xchg
in
push
orl
or
mov
bound
ljmp
xor
and
xor
inc
cmpsl
int3
scas
push
iret
jne
gs
mov
push
cmp
jo
push
pop
mov
int
cmp
hlt
push
ja
mov
aas
mov
shl
xchg
rolb
xor
xor
sbb
xchg
inc
add
cmp
mov
arpl
inc
int
sbb
fisubrs
stos
push
pop
adc
push
nop
pop
xchg
jb
cmp
and
inc
push
cmp
ljmp
fwait
lret
out
testl
ljmp
jmp
test
data16
mov
push
js
mov
xor
dec
dec
into
mov
insb
jle
insl
cli
lock
sbb
inc
das
jge
es
cmp
pop
loope
add
jo
imul
imul
xor
adc
sub
out
lock
inc
cltd
mov
das
aas
scas
lock
data16
repz
imul
cmp
cmpsl
outsb
cmp
push
sbb
pop
sbbb
int3
or
mov
out
xor
push
imul
mov
dec
inc
xor
dec
or
xor
sbb
cmp
push
xchg
cmpsl
outsb
icebp
mov
ljmp
pop
sbb
push
mov
aas
jg
jae
xor
mov
add
and
ss
push
lea
cmp
scas
mov
adc
cmc
or
pop
faddp
mov
or
into
sti
sub
aad
xor
fildll
inc
pop
cli
pop
cmpsl
sbb
mov
cmp
mov
insb
ret
sub
push
pop
lret
cmp
inc
hlt
mov
aam
cmp
xchg
hlt
nop
test
in
pop
xchg
int
xor
notb
fildl
inc
adc
xor
and
mov
nop
xlat
or
stos
outsb
fstps
xor
mov
ror
out
in
je
stc
mov
fisubrs
imul
dec
fisttps
mov
push
stos
ficoml
and
outsb
int3
dec
cmp
fucom
clc
mov
test
mov
mov
cmp
cmp
dec
imul
xchg
pop
ljmp
addr16
mov
pop
xor
push
jnp
mov
leave
and
xchg
aad
push
xchg
frstpm(287
jecxz
fwait
repz
pop
xchg
test
es
mov
out
mov
cmp
ljmp
cmc
pop
ja
stc
lods
or
inc
lcall
cmp
sub
xor
xcrypt-cbc
cmpsl
push
jae
das
aaa
dec
and
dec
mov
adc
jne
cmpsl
dec
jbe
fadd
enter
dec
lods
movsb
cmp
cmc
cmp
cmp
outsl
out
cmp
or
out
leave
sub
push
out
fnstcw
cmp
movl
dec
inc
xor
or
je
stos
mov
sysexit
push
push
push
lods
push
sub
dec
cmp
cmp
add
adc
int
je
ficoml
sbb
mov
test
pop
or
sub
jecxz
in
cmp
xchg
ret
sub
addb
xor
fwait
pop
lods
sahf
cltd
dec
mov
bound
pop
fnstenv
mov
xchg
aad
aam
and
and
repz
sub
mov
mov
jge
notl
jne
mov
stos
lahf
popa
aaa
pusha
cmpsl
xor
sub
out
out
xchg
stc
das
cmp
neg
in
sub
add
cld
hlt
mulb
insl
loop
dec
bound
pop
bound
sub
loop
in
fwait
enter
dec
or
sti
icebp
loope
xchg
ljmp
sahf
neg
jb
into
fsubrs
call
mov
lret
insl
stos
sub
push
push
dec
adc
push
xor
sbb
dec
mov
lds
pop
push
ljmp
and
mov
lds
jp
xor
mov
movsb
dec
ss
pop
xor
sub
mov
jns
jbe
xor
popf
mov
loop
mov
shll
add
or
jbe
out
push
jbe
arpl
into
and
das
push
mov
xlat
xor
cmpsl
xor
dec
mov
xor
pop
or
xor
xor
dec
sti
fstpt
dec
sbb
pop
xor
mov
sbb
sbb
repnz
fsts
sub
dec
dec
cli
xor
adc
lret
cmp
popa
push
out
fistpll
pop
jmp
sahf
cmp
pop
mov
lods
fsubs
pop
mov
add
cmp
push
cwtl
dec
cmp
gs
std
rcll
and
xchg
shll
push
aas
jno
ja
ss
loope
or
pop
xor
pop
loope
ja
mov
or
mov
push
mov
fiaddl
stos
xchg
dec
lcall
addr16
scas
mov
push
and
xchg
cs
mov
mov
pop
shlb
movsb
xor
cwtl
fdivs
lahf
mov
adc
jb
jl
pop
lcall
jmp
rcl
adc
mov
adc
xchg
mov
inc
and
mov
add
xchg
in
in
ljmp
addr16
jecxz
in
push
jmp
push
pop
dec
scas
movsb
xchg
imul
call
sarb
jns
fs
mov
test
and
decb
xlat
js
sub
jbe
or
mov
outsl
loopne
add
mov
jle
ljmp
out
movsl
pop
xor
push
shl
das
stos
and
xchg
mov
add
mov
mov
push
and
cwtl
adc
or
pop
xchg
ds
movsb
sub
xor
inc
mov
sub
iret
sarb
repnz
mov
hlt
sahf
add
out
frstpm(287
mov
push
lods
push
out
push
shrb
test
dec
dec
xchg
pop
js
mov
cmp
cmp
inc
add
pop
and
xor
int3
adcb
push
out
mov
cmp
dec
pop
div
sub
inc
out
pop
mov
out
mov
loop
adc
lock
clc
lret
pushf
cmpsl
mov
pushf
insl
fs
sti
in
in
in
lret
mov
stc
push
dec
sbb
mov
in
pop
push
xor
dec
mov
or
sti
daa
aam
leave
pop
push
sub
pop
mov
cmp
mov
lcall
dec
test
hlt
aaa
movsb
in
iret
inc
xor
jne
mov
ret
or
push
dec
lock
xchg
push
ja
in
loop
cmp
jmp
pop
lcall
mov
imul
mov
sarl
jo
mov
push
cltd
add
cmp
add
out
push
in
insl
inc
aas
xchg
add
adc
movl
xor
and
iret
lock
mov
mov
int3
dec
movsb
push
xor
jge
lds
lahf
jb
in
push
cmp
int
in
add
add
cwtl
jg
xor
cmp
push
je
cmp
add
jns
mov
add
icebp
adc
je
movsl
sub
xchg
or
fwait
push
xchg
rcrb
add
sbb
or
ljmp
imul
xor
pop
xor
out
test
push
outsl
or
addb
xor
fcmovnbe
mov
ret
cmp
xor
add
and
cmc
out
bound
ja
inc
das
or
gs
mov
and
es
loopne
jmp
sbb
icebp
push
mov
push
or
xlat
or
or
bound
fcmovu
push
cmp
mov
inc
outsb
mov
hlt
xchg
sub
fdivrs
sbbb
in
call
es
dec
dec
rcr
addr16
mov
daa
loope
adc
cmp
sbb
inc
sbb
push
and
cmp
das
cld
pop
aaa
or
jmp
xchg
lret
sar
mov
sub
sbb
jne
cwtl
pop
in
mov
pop
ss
mov
ret
cmp
out
out
and
mov
cmp
loopne
mov
out
mov
push
sahf
push
xchg
cmpsl
mov
scas
cmp
out
stos
jl
lret
sbb
dec
sbb
fnstcw
loop
divb
and
xchg
bound
xchg
jg,pn
neg
mov
ds
stos
or
insb
daa
aaa
or
push
es
push
fisttps
gs
arpl
and
test
xor
pop
sub
xor
jb
cmp
add
and
std
insb
dec
inc
cmp
mov
mov
mov
fs
repnz
xor
cmp
jge
imul
sub
in
mov
mov
ds
mov
cwtl
stos
mov
adc
movsb
ljmp
aas
adc
inc
cmp
jno
xor
mov
in
cltd
add
or
data16
jmp
jg
sbb
bound
jbe
pop
jnp
xor
add
inc
cmpsb
es
mov
lods
pop
cmp
sub
cltd
mov
cmp
xor
sbb
aaa
mov
push
xchg
dec
daa
pop
cmp
movsb
sarb
inc
lods
fsubrl
cmp
outsb
orl
inc
cmp
aas
add
fnstcw
and
jmp
out
inc
roll
cmp
mov
mov
inc
cld
jecxz
pusha
xor
data16
cmp
andb
or
push
into
cmpsb
xchg
xchg
movl
pop
stos
push
xchg
adc
xorb
int3
xchg
pop
cmp
rclb
dec
arpl
shlb
adc
jbe
xor
push
cmpsb
or
daa
inc
mov
inc
and
cmpsb
lahf
inc
movsl
pop
in
movsb
filds
addr16
mov
shrb
popa
or
xchg
or
arpl
mov
cli
push
and
lock
data16
jl
aas
dec
mov
inc
out
pusha
push
fninit
mov
push
mov
dec
sbb
pop
cmpsb
and
data16
rcrl
fldenv
push
xor
xchg
or
out
cmp
pop
jp
inc
xchg
je
cmpsl
mov
mov
das
inc
mov
sahf
testb
mov
lods
les
adc
pop
dec
sti
lea
push
inc
data16
mov
mov
pushf
inc
sub
mov
sahf
xor
xor
xchg
xchg
and
push
test
fildll
jg
inc
in
movsb
inc
sbb
arpl
lock
movsb
fsubrs
xchg
in
adc
fidivrs
dec
xor
and
mov
mov
arpl
cmc
jo
and
pop
loop
dec
jmp
std
push
fdivr
sbb
xor
inc
gs
mov
sbb
aas
dec
and
shrl
fnstcw
rcrl
pop
fs
mov
mov
call
cltd
push
call
out
clc
mov
pusha
test
pusha
push
inc
xchg
movsl
daa
mov
fists
and
sub
add
shll
call
add
add
sub
repnz
arpl
add
fisubrl
leave
and
push
dec
jp
sbbl
call
arpl
inc
inc
sub
out
cli
pop
xchg
and
rcl
jbe
lods
cld
inc
cmp
lcall
movsb
mov
jmp
pop
sbb
hlt
or
inc
inc
adc
popl
and
push
or
ret
hlt
add
or
cmc
mov
or
xchg
rclb
sub
lahf
je
jp
xchg
sub
sub
stos
fsubl
scas
cmp
jns
mov
inc
mov
imul
das
mov
cmp
push
add
sub
popa
pop
aad
mov
jle
scas
loope
fsubp
aaa
mov
jle
or
sub
xchg
imul
and
ret
insl
inc
inc
fs
gs
jmp
mov
push
dec
popf
fsubr
cld
scas
mov
jbe
sbb
lret
push
xor
jmp
mov
and
ss
dec
add
fldenv
jmp
add
icebp
pop
inc
jo,pt
sub
xorb
mov
mov
data16
sarb
rcr
in
pusha
cmp
loope
xor
push
mov
push
push
js
mov
lret
inc
pop
fcmovne
and
and
pop
pusha
int3
leave
xor
inc
jl
mov
les
test
push
xchg
and
les
add
cmc
add
loopne
arpl
xor
and
repnz
jmp
aad
inc
jl
sbb
fstpt
sub
xchg
and
xchg
lds
sub
or
mov
rcll
sub
push
and
andl
dec
popf
push
scas
adc
pushf
dec
xor
dec
pushf
int3
dec
adc
es
cmp
jbe
dec
shrl
imul
xor
mov
decl
xchg
mov
test
jg
sbb
outsl
xchg
test
add
popa
pop
cmpsl
jne
in
test
adc
and
pop
mov
imul
mov
and
ret
lret
add
jl
or
or
add
dec
add
dec
and
mov
mov
inc
je
arpl
inc
pop
push
fnstenv
push
or
fisubrs
cmc
aam
and
xchg
xchg
lcall
mov
adc
xchg
addr16
xchg
pshufw
aaa
gs
mov
test
cmp
or
adcb
mov
dec
repnz
test
pop
lea
test
and
or
ds
jo
scas
clc
rcrb
aas
stos
jbe
xchg
aaa
pop
test
sti
add
push
add
mov
cmp
or
mov
ds
cmp
mov
leave
sbb
fwait
jo
out
sbb
loope
rorl
or
movsl
insb
add
mov
add
imul
sbb
xchg
js
push
add
and
data16
enter
push
add
idivb
dec
mov
mov
xor
xchg
or
inc
outsl
mov
data16
sub
inc
dec
mov
pop
jp
mov
test
es
cmp
adc
and
dec
ja
or
xchg
test
test
push
pop
loop
adc
pop
test
adc
mov
int3
insl
ret
test
dec
out
cmp
int
inc
dec
jo
push
lds
sub
inc
stos
or
int
lds
lds
lds
lds
lds
lds
push
dec
jno
pop
sub
sbb
inc
movsl
mov
arpl
dec
inc
push
inc
out
xchg
xor
out
push
mov
fildl
stos
mov
inc
xchg
mov
add
push
push
repnz
inc
out
out
inc
mov
sbb
insl
add
shl
inc
pop
mov
xchg
scas
xchg
mov
mov
mov
ret
imul
sub
push
test
mov
pop
add
xchg
mov
dec
inc
cmp
cli
lea
scas
mov
xchg
mov
or
es
pop
stos
and
mov
or
push
add
dec
cmp
inc
stos
pop
and
dec
push
mov
or
pop
scas
fsubl
shlb
mov
nop
pop
push
xchg
cmp
inc
das
not
pop
xor
cmp
mov
mov
dec
and
adc
cmpsl
bound
jo
bound
mov
and
mov
pop
and
cmp
push
bound
jo
jo
bound
xor
sub
and
inc
test
xchg
mov
inc
fwait
inc
and
mov
cmp
mov
out
loop
lahf
and
inc
xchg
push
xchg
outsl
cld
sub
inc
xor
enter
iret
xchg
xchg
push
xchg
fdivrs
pop
jo
shr
mov
movsl
addl
jnp
lea
gs
imul
jnp
notl
xchg
xchg
pop
in
outsl
dec
mov
es
gs
lods
cltd
mov
aam
cmpsl
mov
xchg
or
mov
pop
cmpsl
dec
jns
lret
dec
aas
inc
pop
mov
adc
pop
dec
push
in
addr16
gs
xor
sub
daa
mov
push
sbb
xchg
push
mov
mov
das
or
fidivs
daa
in
push
cmp
cmp
imul
mov
mov
fs
cmp
in
pushf
xor
andl
xchg
outsb
hlt
mov
xorb
frndint
mov
xor
das
and
dec
sbb
pop
adc
add
rcrb
dec
cltd
aad
movsl
xchg
shll
add
inc
pop
dec
sbb
push
sub
and
in
mov
fcomps
pop
leave
in
fsubl
push
pop
cmp
mov
inc
mov
bound
jo
lods
jg
inc
xor
cmp
xchg
push
jmp
sub
mov
mov
mov
fxch
repnz
arpl
loop
or
mov
mov
out
jg
pushf
push
decl
test
xor
push
and
insl
sahf
lods
jg
in
jnp,pn
cmp
mov
fs
or
push
or
or
jae
inc
push
push
inc
pop
inc
mov
outsb
jl
inc
bound
xor
or
jo
add
fldcw
push
or
xor
movsb
and
xchg
movhlps
sti
jnp
mov
xlat
loope
gs
or
xchg
arpl
inc
enter
xchg
and
ljmp
or
sbb
pop
aaa
add
mov
mov
aas
fdivl
stos
xor
clc
push
mov
dec
inc
push
push
je
outsl
ret
pop
fisubrs
loope
jne
lods
sub
inc
enter
xchg
push
aad
subl
andl
les
in
mov
or
mov
int3
and
inc
in
or
ret
ret
add
es
sahf
xor
or
sbb
sbb
dec
in
in
or
test
int3
xor
pop
mov
dec
pushf
push
mov
xor
dec
or
adc
pop
sbb
cwtl
out
jg
mov
testb
lcall
sbbb
sbb
xchg
cltd
mov
sbbl
lahf
sahf
pop
sbb
cmpsl
js
out
subl
cmp
push
or
dec
cmovp
out
jb
and
pop
dec
pop
and
dec
xor
and
movsb
incb
and
mov
adc
hlt
or
sub
sbb
sub
xchg
dec
mov
sub
and
dec
xchg
pop
cmp
cld
add
mov
out
sbb
cmpsb
inc
nop
inc
shll
sub
repz
lods
push
loope
push
ss
out
mov
ss
adc
in
or
and
or
movsl
orl
adc
push
sti
push
pcmpeqd
aas
xor
lret
andb
xor
cld
bound
jmp
call
scas
sbb
stc
cmp
push
sub
and
das
pop
sub
sub
lock
out
jecxz
push
and
scas
das
add
xor
mov
adc
fdivs
mov
out
dec
lahf
xor
mov
xchg
jle
fsubl
arpl
mov
xchg
mov
cltd
xchg
and
xchg
sub
dec
jae
xor
mov
cmc
int3
adc
lock
push
cmp
cmpsb
pop
xchg
stos
and
push
out
data16
and
shrl
lock
rorb
jae
adc
mov
or
out
outsl
pop
dec
mov
leave
mov
jmp
push
xchg
orb
insb
adc
mov
sub
jbe
cs
cs
cmp
cmpsb
inc
cmp
lret
imul
inc
gs
das
inc
inc
adcb
popa
insb
push
xchg
stos
inc
std
cmp
insl
in
sbb
mov
sub
push
sub
ljmp
test
jp
imull
ret
sub
pop
aas
ljmp
pop
dec
mov
test
rorl
flds
cs
inc
repz
jo
mov
push
imul
out
popl
and
rcrl
add
mov
cmpsl
xor
inc
jg
mov
or
outsb
dec
int3
xor
fisubl
bound
mov
shlb
xchg
imul
dec
sub
int3
rorl
adc
push
xchg
cmp
pop
dec
sbb
insl
xor
ret
xlat
jno
inc
das
and
push
cmp
add
jl
jno
dec
mov
sbb
pop
out
push
fidivrl
into
cmovbe
inc
push
dec
dec
dec
lock
add
sub
sbb
sldt
sbb
xchg
mov
jnp
loopne
in
push
mov
xor
adc
test
and
add
insl
mov
add
mov
inc
aad
mov
rol
dec
cli
and
call
sub
xchg
jae
int3
jge
sbb
jnp
cmp
in
mov
data16
dec
popa
rorl
in
sub
push
das
leave
inc
and
sub
adc
push
in
sub
fs
cmp
inc
out
out
or
int
pop
arpl
dec
das
xchg
call
pop
xchg
inc
push
push
adc
aad
push
ret
inc
test
loope
mov
inc
cmp
ret
ret
xor
or
inc
mov
xor
aam
dec
iret
jmp
adc
aad
cmp
push
out
mov
mov
xchg
mov
fstpl
test
mov
ret
or
pop
aam
sub
xchg
push
push
test
dec
xchg
data16
lahf
dec
and
lea
jae
sbb
ds
push
mov
sub
shll
lods
fsubs
loopne
jecxz
cmpsl
les
jne
mov
inc
movsl
outsb
xorb
vminpd
mov
pop
mov
add
int3
and
xchg
popf
sub
inc
dec
daa
xchg
addr16
out
fsub
out
and
cmp
inc
fwait
mov
call
sub
add
jmp
add
insl
add
frstor
adc
mov
add
mov
sub
cmp
cltd
test
sub
pusha
in
jae
dec
sbb
das
cmpsl
dec
cmp
mov
inc
adc
push
xor
sub
repnz
push
sub
lds
mov
cmpsl
lahf
jmp
imul
imul
and
andl
push
and
inc
testl
dec
mov
shlb
inc
or
push
mov
test
sub
mov
sbb
es
and
mov
cmp
push
add
cmpsl
enter
and
xor
mov
sub
or
sbb
lods
xchg
xor
sub
and
push
ljmp
dec
test
and
out
mov
daa
pushf
dec
mov
dec
shll
or
ljmp
stos
dec
push
pushf
cwtl
movsl
push
or
call
or
push
mov
mov
sbb
and
daa
push
xor
dec
js
pop
sarl
pop
and
addr16
dec
dec
mov
pushf
add
scas
decl
aad
and
or
repnz
das
sub
iret
inc
dec
shll
int3
sbb
jo
cli
iret
push
dec
stos
lret
in
add
lods
cmc
and
or
lea
repz
cmpsl
push
iret
testb
popf
dec
and
push
add
mov
in
aaa
out
fstpl
mov
aaa
adc
imul
sub
jo,pn
pop
das
push
jo
test
pop
stos
jb
lahf
fidivrl
mov
push
lahf
push
rorl
pop
inc
es
subb
bound
mov
in
loope
gs
test
xor
inc
aas
mov
pop
add
cmp
test
ja
push
movsl
loop
mov
jbe
aas
mov
cmpsb
xchg
out
cmp
sub
push
xor
mov
push
sahf
in
jo
das
jo
or
cmp
pusha
push
std
cmp
nop
idivb
data16
imul
inc
jmp
fistl
dec
in
xor
ror
add
pop
pop
xchg
aas
pop
cmp
shrb
sbb
jae
push
xor
shll
imul
and
or
fldenv
sub
aam
fcoml
jecxz
fs
cmc
xchg
aad
or
int3
aaa
xchg
scas
mov
push
and
mov
mov
mov
fwait
aam
xlat
sahf
xchg
pushf
in
and
jnp
repnz
mov
lcall
movsb
addr16
out
xlat
enter
pop
dec
or
enter
xchg
rorl
xchg
sub
in
mov
insl
les
stc
xor
push
inc
dec
sbb
pop
push
inc
inc
jecxz
fcoml
mov
xchg
ljmp
inc
xor
cmp
cmpl
test
and
dec
aad
aas
cld
cwtl
shll
mov
or
aas
sub
int
loop
dec
imul
push
xchg
xchg
inc
xchg
rcr
mov
pop
push
icebp
data16
adc
repz
inc
xor
cli
shufps
adc
addr16
dec
adc
rcll
sbb
mov
push
push
add
test
sbb
add
lahf
push
cmpsb
adc
push
jne
xchg
or
push
outsl
cmp
mov
outsb
push
and
jg
cmp
popf
xchg
inc
adc
dec
lret
push
cmp
push
cld
mov
ds
mov
push
sti
mov
in
sub
mov
rcrl
push
or
or
out
jmp
enter
pop
jmp
sbbb
fidivrl
pop
inc
mov
out
scas
dec
loop
int3
xchg
jno
aaa
dec
rcr
xchg
cmp
ss
push
neg
clc
addr16
scas
jge
mov
or
insb
shrb
faddp
imul
dec
stos
add
jecxz
mov
out
test
movsl
icebp
test
xor
mov
jnp
cmc
gs
test
mov
push
jl
mov
pop
fs
loope
inc
sbbb
mov
xchg
shlb
cwtl
and
das
outsl
cs
cmpsl
xor
mov
nop
cld
in
ficompl
adcl
lock
sub
xorb
popf
bound
cmp
adc
mov
nop
stos
xchg
cmpsb
jp
stos
push
pop
outsl
mov
or
push
fs
gs
or
cmp
push
dec
adc
dec
loop
sbb
in
push
ljmp
cmp
xchg
sub
xor
dec
xor
xchg
xor
push
stos
movsb
push
arpl
add
dec
lret
fsts
pop
and
jp
push
shr
lods
and
adc
push
sub
inc
or
aad
je
idivb
mov
push
jbe
out
inc
decb
int3
iret
xor
adc
test
mov
xchg
sbb
rclb
xchg
adcl
and
ret
fs
hlt
test
jmp
fmull
jmp
sbb
push
xchg
lret
adc
cmc
adc
pop
dec
fcoms
mov
icebp
cmpsb
into
cli
cmp
cmpxchg
dec
cmp
push
mov
xchg
fldenv
xchg
lcall
xor
adc
mov
dec
ja
sub
fdivrl
xor
jge
sub
inc
mov
out
das
cwtl
xchg
inc
fdivr
push
es
inc
jp
addr16
push
mov
and
xor
or
test
mov
ret
mov
xchg
fmull
adc
sbb
push
push
adc
inc
lret
xchg
dec
mov
les
shl
sti
xchg
repz
lds
fmull
mov
pop
fmull
xchg
sbb
mov
push
xchg
lret
push
dec
mov
and
test
or
sbbl
sbb
xor
movsl
jl
shll
fcompl
mov
sub
pop
fld
stos
movsb
xchg
jge
sub
push
enter
sub
lahf
loop
pop
sub
sub
jbe
mov
sbbb
xor
xchg
fstps
or
add
in
push
mov
out
xor
cmpsl
xor
insl
jb
sub
out
das
lret
inc
int3
call
adc
fmul
dec
insb
sbb
in
pop
xchg
sbb
add
sbb
xor
sbb
insl
jb
sub
out
das
sahf
cwtl
aam
mov
lds
into
dec
inc
cltd
lods
fwait
dec
test
into
pop
dec
pop
cltd
mov
nop
rcl
aam
cli
das
jo
fnstcw
addr16
mov
inc
fldcw
or
mov
int3
xlat
jns
ja
jae
cmpsl
adc
sahf
push
jns
push
xor
sbb
mov
xchg
mov
mov
dec
push
mov
bound
pop
mov
in
daa
fs
inc
roll
adc
sbb
gs
and
dec
adc
in
jae
mov
inc
std
aad
imul
dec
pop
pop
jb
xchg
icebp
jns
movsl
push
in
ds
push
dec
test
aas
movsl
stc
jns
and
lahf
sti
leave
xor
push
add
mov
mov
and
xchg
pop
loopne
jbe
lods
sti
cmp
or
rorl
loop
sub
test
sub
fcoms
ret
pushf
lcall
cmpsl
cmp
mov
mov
sub
push
pop
mov
sarl
sub
xchg
jmp
mov
icebp
imul
stos
mov
test
push
push
inc
or
sub
push
rcll
repnz
les
sub
adc
push
cmc
mov
call
mov
dec
mov
dec
dec
cs
repnz
mov
shlb
mov
fwait
shll
mov
pop
jl
loopne
shl
mov
inc
mov
jp
std
push
loope
sbb
dec
jo
sbb
mov
adc
dec
sbb
push
inc
cmpsl
inc
mov
ret
inc
popf
ss
cmpl
pop
addr16
xorl
gs
xor
jge
jp
jge
mov
int3
adc
and
cmp
insl
xlat
pop
mov
int3
lods
adc
cltd
jl
insl
mov
sti
enter
movsb
bound
into
dec
into
pop
enter
rorb
pop
dec
pop
push
clc
lretw
xchg
push
stos
sbb
xorb
insb
mov
cmc
or
mov
int
cltd
push
sub
sub
adc
aas
leave
adc
insb
inc
pop
pushl
mov
in
data16
sti
xchg
mov
ljmpw
dec
mov
adc
mov
xlat
je
popa
pop
fcomp
negl
inc
mov
mov
into
mov
push
sbbl
push
inc
or
cwtl
fcomps
push
push
push
iret
sbb
and
adcl
push
mov
dec
jge
je
add
filds
rcr
es
pop
sub
popa
fprem
lahf
and
imul
xchg
enter
sub
inc
pop
lea
cmp
dec
out
cmpb
gs
pop
inc
repnz
jae
sbb
inc
jo
test
cmp
mov
sbb
fwait
push
pop
inc
dec
cmpsb
xchg
sub
dec
negb
or
hlt
in
lret
aas
imul
cmp
push
outsb
mov
cld
dec
push
pop
outsl
push
jmp
cld
xor
pushf
or
add
mov
sub
lcall
adc
cmp
and
loopne
jbe
insl
mov
and
push
jmp
rolb
adc
es
and
push
pop
xor
sub
pop
dec
push
fidivrs
movsl
cmp
fsts
ret
fisttpll
adc
fwait
repz
lret
fdivrl
std
xor
inc
sbb
add
mov
aam
int3
leave
push
jp
push
fdivs
sarl
outsb
or
cmpsb
add
push
dec
mov
in
out
pop
sbb
es
aas
and
adc
pop
nop
sbb
inc
pop
and
sahf
lcall
cmp
lea
push
fstps
gs
das
sbb
testl
mov
pop
mov
mov
mov
mov
mov
popf
sub
cld
les
fwait
sbb
or
mov
std
in
cmp
or
mov
loopne
xor
fisubrs
sub
dec
iret
xor
pop
data16
lret
mov
je
cmpsl
adc
ss
out
cmp
push
mov
stos
outsl
fmulp
pop
insl
dec
jl
sub
lock
jae
mov
pop
rclb
insl
push
sub
push
sub
push
ds
ret
pusha
nop
pop
out
cmp
push
and
popf
sbb
mov
inc
xor
sarl
sbb
popaw
jmp
movsb
add
fucom
cmp
fisttpll
adc
ret
dec
pop
mov
or
fisubs
dec
int
inc
sub
cmpsb
mov
hlt
in
xor
in
mov
mov
es
sub
mov
or
cmpsb
movsl
cs
and
pop
rorb
out
jnp
lahf
es
push
mov
out
xorb
cmp
dec
xor
dec
jge
sub
dec
push
lahf
fbld
cltd
push
pop
mov
aam
stos
pop
xor
push
scas
pop
or
pushf
dec
or
jnp
loope
lods
call
cltd
les
pusha
ret
sub
loope
gs
pop
fnstcw
dec
push
pmullw
push
inc
xchg
mov
xchg
pop
pop
dec
popa
and
das
cmp
adc
scas
les
inc
lock
cld
mov
sub
adc
push
sahf
jge
jmp
pop
test
pop
cmp
insb
sub
pop
pop
push
fistpll
push
fidivs
sub
inc
and
dec
push
bound
stc
xchg
push
repz
out
dec
imul
jb
adc
mov
ds
outsl
xor
sbb
xchg
jmp
lahf
dec
jo
scas
xchg
xor
shlb
mov
incb
arpl
mov
pop
cwtl
pop
xchg
outsl
pusha
in
aas
les
mov
inc
add
xor
cmp
mov
xchg
xor
ficoms
rolb
and
out
ja
inc
inc
das
std
insl
xorb
ljmp
cmp
ja
adc
iret
sbbl
mov
mov
add
dec
stos
sbb
sub
and
sub
js
and
cmp
xor
adc
adc
nop
out
xor
sub
add
adc
aas
notb
pop
inc
pop
or
sbb
fwait
pop
xor
mov
int
cs
xlat
aad
sbb
jno
dec
mov
ret
or
inc
aas
inc
mov
idiv
xlat
loope
mov
inc
pop
aam
out
lahf
mov
ret
sub
adc
and
lahf
mov
enter
test
and
push
loop
adc
fisubl
jge
mov
mov
push
pop
stos
push
aaa
cmp
in
pop
mov
mov
mov
test
ja
in
fcomp
jno
in
jbe
push
cmp
fisubs
insl
dec
es
or
insl
and
hlt
jecxz
jecxz
jae
pop
mov
adc
push
shrl
lret
push
xchg
int
hlt
and
jg,pn
push
or
stos
jb
xchg
outsb
pusha
lahf
test
test
xchg
or
mov
mov
sub
xor
in
push
leave
xor
rol
cmp
out
xchg
xor
test
repnz
mov
ss
pusha
mov
or
and
lods
inc
dec
cmp
in
cmp
jmp
mov
mov
insb
fimull
mov
xchg
jne
jnp
and
out
pop
lods
out
sbb
pusha
pop
fiadds
fimuls
push
pusha
dec
add
and
dec
sub
dec
push
bt
stc
adc
stos
inc
mov
sbb
push
sahf
inc
sbb
fcmovnu
out
jb
adcb
mov
lcall
dec
sbb
loop
lods
cltd
loopne
adc
fistpll
xor
loopne
andw
adc
jp
pop
loopne
movsb
cltd
loopne
repnz
push
dec
jo
daa
loope
movsl
sub
cmp
cltd
cmp
xchg
ljmp
push
dec
xor
sbb
add
xchg
mov
cwtl
cmp
out
rorl
sub
xchg
loopne
and
xchg
mov
loope
inc
and
enter
or
fisubs
out
addr16
outsb
fbstp
push
and
jae
daa
ficoms
sbb
mov
shlb
ljmp
ljmp
push
inc
popa
jp
mov
sbb
mov
incb
xor
repnz
mov
in
cwtl
outsb
sub
loopne
ds
ds
dec
cltd
popa
jb
adc
lret
push
sub
and
mov
out
jne
psrld
adc
pop
push
stc
cmpb
jecxz
lahf
outsb
fsubp
int3
xlat
mov
inc
mov
aas
mov
sub
repnz
adc
mov
mov
xchg
mov
mov
loope
xor
sbb
cmpsb
xchg
cmp
fldenv
cmp
fidivl
xchg
jmp
xchg
and
and
fnsave
sub
in
jmp
sub
jbe
iret
and
push
and
xchg
push
ja
in
push
loope
cmp
ret
sub
and
push
ret
cld
mov
adc
and
aam
and
cs
push
mov
fs
inc
adcl
rorb
xlat
ljmp
cmp
xchg
mov
sar
sbb
loope
and
paddsw
jb
stos
push
shlb
dec
clc
addr16
fisubrs
sub
or
pop
lahf
inc
sbb
pop
out
sti
in
insb
lcall
rcll
jae
aaa
hlt
fidivs
cmpsb
mov
xor
insl
mov
faddp
cmpsb
insb
notb
ja
pop
xlat
das
mov
inc
xchg
testb
pop
aas
sahf
mov
pop
pop
icebp
push
push
gs
fldenvs
lret
adc
loop
sahf
mov
mov
arpl
push
bound
loop
xchg
lahf
mov
hlt
cmpsb
js
loop
int3
cltd
insl
push
xchg
push
sub
scas
pop
lahf
into
aaa
xchg
andl
and
das
adc
xchg
jnp
push
cmp
and
mov
pop
cmpsl
jae
and
divb
inc
aad
scas
loope
xor
mov
cmp
push
dec
bswap
dec
mov
arpl
ja
mov
and
xor
and
push
jb
xor
pop
dec
not
add
xchg
add
or
push
sbb
in
mov
xchg
mov
addr16
push
add
ret
scas
in
sbb
lock
popf
sub
iret
jmp
and
in
into
sub
jae
push
jne
movsb
inc
and
xchg
stos
in
dec
sarl
iret
mov
jo
and
ffree
xor
inc
xchg
dec
dec
aam
pop
dec
loop
aaa
or
xor
inc
fstpt
inc
pusha
sub
sbbb
push
sti
xchg
cwtl
push
gs
in
cli
dec
into
sbb
push
cltd
inc
inc
dec
lock
adc
jle
pop
lret
enter
and
shll
test
push
push
scas
or
dec
scas
fsubrl
cmp
mov
push
loopne
mov
pop
xor
call
lcall
dec
push
mov
sub
add
fildl
pushf
xchg
movb
add
fst
push
xor
pusha
movsb
sub
sbb
out
dec
cmp
lods
idivb
addr16
inc
lret
dec
mov
stos
test
xchg
dec
adcl
mov
test
mov
inc
rcrl
dec
pop
and
adc
lock
lea
xchg
mov
imul
mov
movsb
dec
ds
lock
pop
ja
pusha
jl
out
sahf
pusha
lea
pushf
adc
cmp
dec
xor
call
lea
in
jmp
xor
sub
sarl
leave
sbb
movsb
dec
ljmp
xchg
mov
test
xor
das
push
sub
enter
xor
test
fisubrs
lock
mov
test
cmpsb
arpl
sub
mov
xchg
fwait
mov
lret
dec
lahf
xor
test
pop
mov
sub
jnp
jmp
adc
in
push
outsl
xchg
pop
mov
fs
in
mov
push
mov
adc
sub
test
sti
fistl
in
mov
bound
and
icebp
sub
or
lea
adc
cmpsl
push
and
int
pop
xlat
or
sbb
clc
arpl
pop
pop
and
sti
sbb
loopne
fimuls
adc
fsubl
and
push
gs
xor
in
and
dec
ret
mov
loope
cld
inc
sub
aad
add
adc
iret
dec
cmp
fldenv
xchg
loope
sti
movsb
les
xchg
insb
push
movsl
inc
mov
loope
add
jo
imul
inc
int
add
dec
and
xchg
loop
fxch
dec
fsubs
outsl
movsl
insl
xor
push
push
lahf
cmp
inc
aas
jne
outsb
clc
out
test
jle
test
cmpsb
push
inc
sbb
in
ljmp
mov
loope
or
push
loopne
push
inc
imul
pop
cs
dec
lock
adc
xchg
divb
jnp
insb
test
call
xchg
ss
scas
pop
mov
mov
cld
lea
rorl
xchg
fwait
push
mov
adc
push
or
lods
adc
pop
ljmp
pop
push
inc
arpl
dec
lret
pop
arpl
jp
repnz
add
xor
scas
lret
shll
jb
sub
fnstenv
or
fldt
test
in
cltd
lods
es
and
pop
inc
fnstsw
in
jo
and
mov
inc
cmp
add
les
je
scas
mov
pop
es
mov
mov
inc
mov
enter
stos
mov
jo
pop
enter
aad
push
cwtl
xchg
xor
mov
out
fistpll
sbb
enter
xchg
mov
dec
pop
enterw
sub
mov
pusha
fidivrl
es
lock
dec
dec
in
jnp
xchg
mov
test
test
imul
pop
mov
cld
sahf
jo
xorb
or
cmpsb
pop
orb
fsubrl
xchg
mov
clc
bound
pop
nop
jno
int3
leave
insb
push
pop
sbb
sub
cmpsb
mov
and
jb
fistl
xchg
int
sbb
leave
and
mov
lods
pop
shll
mov
shrb
scas
xor
jl,pt
stos
or
mov
movsb
xchg
dec
and
inc
mov
xor
xchg
pop
sub
test
jecxz
mov
daa
aam
testb
stos
xor
sahf
mov
movsl
push
or
fwait
inc
add
data16
lea
mov
cmp
sbb
cltd
xchg
mov
mov
xor
adc
notl
jmp
xchg
mov
xchg
xor
imul
cmpsb
sub
xchg
sub
or
gs
inc
es
addr16
pop
lret
adc
je
push
ljmp
mov
pusha
ss
jo
movsb
dec
shrl
test
or
scas
add
mov
data16
and
ljmp
arpl
dec
inc
jnp
mov
jno
stc
cmp
mov
in
fildll
jmp
xchg
cmpsl
adc
fistpll
dec
fbld
or
jmp
imul
cli
je
pop
aaa
icebp
int
dec
data16
out
fnstenv
jne
std
fistpll
lds
shll
es
test
fsubrp
mov
xor
xor
stos
fistl
or
mov
out
bound
cmpb
out
mov
ds
xchg
adc
popw
inc
in
or
inc
inc
push
xor
cmp
mov
inc
sbb
imul
mov
popf
mov
lock
pop
arpl
pop
pop
movsb
lds
test
mov
xor
jns
test
push
mov
movsl
sbb
sti
and
pusha
mov
jmp
arpl
rcrb
xchg
add
sbb
rolb
stos
fisttpl
lahf
lock
shlb
lock
sbb
and
loope
jmp
int
pushw
xchg
in
or
sbb
add
jge
test
fsubrl
xor
push
mov
sbb
xor
mov
test
xor
aas
push
cwtl
test
jl
sbb
adcb
mov
shl
test
sbb
daa
pop
cmp
xchg
pop
mov
inc
lret
cwtl
shrl
jp
cld
or
fists
imul
or
call
xchg
xchg
clc
icebp
scas
data16
inc
scas
mov
orb
jae
lcall
outsb
mov
mov
fldcw
mov
sub
sarl
pop
xchg
xor
in
arpl
dec
xor
xor
das
push
in
xor
xor
imull
mov
xor
xor
test
jae
inc
xor
mov
popa
subl
or
test
in
inc
xor
xchg
push
mov
mov
imul
js
xor
xchg
jl
inc
jmp
dec
jge
jge
dec
mov
in
pop
adc
imul
gs
sbb
testl
pushf
mov
les
cwtl
je
mov
lea
push
jmp
cmp
sbb
jmp
rcrl
pop
rorl
inc
jmp
cmp
js
xchg
sub
add
pop
push
and
pop
xchg
outsb
add
in
xchg
xor
xchg
cmpsb
xchg
pop
subb
jae
jmp
in
gs
data16
and
rcrl
jmp
stos
fneni(8087
push
xchg
push
adc
rorb
and
das
mov
sub
or
into
andl
sar
adc
cs
leave
sahf
stos
ljmp
mov
mov
mov
add
mov
add
gs
ror
loope
pop
fmuls
push
fimuls
in
fs
jl
push
push
mov
movsl
data16
lods
test
rolb
and
mov
insl
imul
and
mov
lock
inc
adcb
push
xchg
daa
and
test
sbb
popa
or
jae
or
mov
mov
jae
jns
js
cmp
fdivrl
mov
cmp
fsubrl
jno
mov
push
arpl
cmp
test
cli
aaa
insb
cwtl
ds
imul
add
and
std
mov
fnstsw
and
addr16
cltd
xor
aaa
inc
cmp
add
push
popa
inc
mov
ljmp
cwtl
sub
mov
mov
dec
cmc
out
or
lds
out
js
cmp
fisttpl
lods
mov
addr16
insb
testb
fsubr
jns
add
pop
sub
push
dec
cmp
pusha
in
jmp
rcrl
sbb
push
sbb
push
jmp
rclb
sub
add
push
loopne
sub
inc
lahf
aad
cmc
sbb
mov
sub
push
cmp
sbb
ljmp
jge
aas
mov
mov
in
push
xor
scas
xor
pushf
ljmp
mov
push
and
movsl
test
sub
out
xor
arpl
push
or
xchg
shl
mov
pop
fbld
sub
xchg
gs
sub
nop
inc
cltd
adc
aam
lods
xchg
idivl
cs
roll
sub
mov
rcrl
adc
cwtl
xchg
js
add
pop
mov
aad
sub
or
jnp
jp
xchg
fs
cmpsl
das
inc
mov
dec
pop
adc
sub
push
mov
mov
popf
or
enter
outsl
ret
xchg
push
imul
in
jnp
jp
inc
mov
loopne
or
in
fisttps
lahf
xchg
imul
inc
dec
popa
xchg
loope
daa
pop
loopne
add
and
jmp
push
pop
dec
xor
pushf
dec
das
inc
sub
mov
sub
xchg
push
bound
stos
roll
ja
ljmp
cmpsb
dec
push
fdivs
and
or
mov
dec
push
inc
lcall
mov
xor
pop
jne
aad
test
arpl
xchg
sub
xor
mov
sub
add
jns
cmpsb
pop
imul
and
cmpsb
inc
sbb
out
jo
lret
popw
int3
jl
call
or
mov
or
dec
inc
sbb
lods
lds
stc
out
sahf
sub
dec
ljmp
sub
fbstp
cmpsb
jo
pop
pushf
test
or
call
mov
divb
call
repz
jne
push
xchg
gs
push
data16
inc
test
push
cmpsl
push
iret
mov
jmp
in
jns
ss
ljmp
aaa
bound
push
xor
xlat
pushf
add
inc
fldl2e
jns
dec
sbb
popa
jmp
cmp
arpl
test
dec
push
clc
std
rolb
inc
xchg
push
fldcw
sub
test
dec
pop
xchg
and
fs
clc
pop
aad
inc
jnp
cmc
sbb
xor
inc
loopne
call
popa
ljmp
cmc
mov
lods
sbb
and
pop
dec
add
mov
pop
push
insb
aam
pushw
and
hlt
int
ja
pop
popa
aam
dec
push
pop
push
jl
sub
cmp
pop
cs
push
or
push
es
or
and
adc
je
pushf
jg
push
or
inc
jae
jmp
adc
repnz
js
xchg
call
pop
inc
fdivs
ret
adc
or
push
add
js
pop
pop
lock
and
in
stc
push
sbb
lods
imul
ljmp
mov
lods
push
frstor
test
jno
outsl
iret
daa
arpl
gs
and
cli
sbb
mov
jno
jl
cmp
shll
or
fst
jns
mov
pusha
jp
out
or
sub
int3
inc
pop
add
mov
and
shrb
popf
add
push
jns
mov
cmpsl
arpl
jns
pop
inc
cmpsb
xchg
stos
adc
mov
or
loop
jne
shlb
push
xchg
dec
leave
lods
mov
sbb
pushf
fnstenv
sti
stos
pusha
sbb
sbb
xor
sbb
xchg
jno
pop
or
adc
aad
mov
es
push
mov
push
lods
mov
push
adc
xchg
or
mov
addr16
mulb
jp
mov
and
push
inc
rclb
cmpsb
gs
xchg
orb
andl
cltd
sbb
sti
loopne
pusha
movsl
lds
imul
mov
push
fbstp
mov
bound
out
js
fisubl
xchg
pop
push
and
or
insb
xor
cmp
fldenv
pop
fadds
jns
shll
pop
mov
mov
test
dec
call
sub
cs
in
mov
push
ja
jne
dec
push
push
in
or
arpl
xor
xchg
arpl
cmpsb
movb
mov
xchg
xchg
popa
jmp
xchg
popa
pop
fwait
insb
dec
pmaxsw
jo
or
jmp
lahf
push
inc
pop
addr16
fstp
mov
repz
mov
cltd
scas
cmpsb
push
outsl
mov
lods
fs
ss
rolb
and
dec
xor
lods
sbb
push
out
mov
pusha
imul
and
dec
dec
out
jecxz
pop
data16
test
pop
push
add
mov
iret
ljmp
arpl
push
fcom
push
mov
rcrl
repnz
or
mov
or
sub
xor
popa
sbb
insb
inc
test
jmp
bound
cmp
and
outsl
popf
js
adc
xor
jb
dec
fisubs
jae
call
daa
push
ret
loopne
imul
jecxz
push
jns
or
cmpsl
call
mov
mov
cmpsb
jp
sbb
sbbl
pop
push
mov
sub
test
jb
fcomp
pop
and
leave
push
sub
adc
cmp
push
sar
stc
pop
imul
ds
aam
insl
push
jo
aaa
and
gs
push
jno
loope
popa
dec
lret
mov
push
push
iret
fadds
or
xor
loope
repnz
sbb
bound
push
mov
imul
gs
fstl
rorb
out
in
jecxz
call
sahf
dec
fsubs
je
pop
in
push
in
pop
lret
push
mov
pop
fdivl
out
mov
fldenv
sub
test
leave
pusha
mov
jecxz
xchg
into
inc
cli
add
and
sbb
bound
lret
cmp
shlb
xor
call
sbb
cmp
rcrl
push
or
sbb
pop
push
mov
inc
arpl
iret
adc
mov
pusha
push
hlt
add
mov
dec
adc
dec
fdivrs
bound
and
fisubs
aam
push
mov
add
pop
mov
inc
mov
inc
jo
xchg
xchg
call
pop
ficoml
in
les
adc
push
loopne
xchg
and
and
cmpsb
add
loopne
adc
push
mov
push
sub
daa
pushaw
push
add
mov
or
das
fs
push
mov
push
pop
fldl2t
xchg
aad
test
add
pusha
pop
loopne
popf
out
xor
mov
mov
test
fisubrl
pop
inc
pusha
call
and
bound
test
fsubr
add
sbb
push
or
repz
arpl
loop
mov
push
mov
mov
data16
mov
stos
lret
dec
shr
addr16
in
pop
push
pushf
cld
clc
sub
or
out
sbb
pop
insl
lcall
std
xor
andl
nop
lods
lret
xchg
xchg
push
mov
push
pop
push
push
or
gs
aas
mov
andb
push
or
mov
push
fnstsw
fstpt
shlb
add
stos
adc
sbb
fsubrs
jne
out
mov
mov
lahf
pop
aaa
jp
repnz
nop
lds
sbb
fdivl
imul
loope
lods
movsb
push
out
pop
addr16
test
je
push
sbb
pushw
lcall
pop
and
mov
pop
inc
adc
dec
mov
mov
shlb
adc
dec
sub
jo
addl
jmp
test
ss
sub
cmp
scas
out
push
test
or
psubsb
fwait
out
or
xchg
cmp
in
pop
fs
mov
lahf
jbe
mov
xchg
cli
outsl
cmpsb
dec
push
cmpsb
push
js
bound
loop
pop
pop
popa
xchg
xchg
mov
test
lahf
and
rcll
outsl
jne
or
xchg
push
pop
imul
sbb
bound
inc
xor
call
or
sub
xchg
outsl
mov
out
mov
lds
sbb
mov
dec
testb
mov
pop
mov
fwait
es
mov
push
cmpsb
inc
mov
out
int
bound
jmp
loopne
jno
icebp
daa
jmp
inc
or
jo
sub
jb
inc
cmp
stos
gs
jne
rep
push
xchg
js
xchg
xchg
mov
mov
jb
out
fwait
in
cs
jecxz
inc
inc
fwait
dec
fwait
pop
arpl
xchg
fwait
icebp
sbb
aaa
pop
adc
div
insl
cwtl
sbbb
cmp
insb
push
icebp
in
frstor
lahf
in
mov
adc
lret
and
fwait
outsl
faddp
test
cltd
mov
push
lahf
out
loope
jno
arpl
push
loop
cltd
outsl
out
push
mov
out
sbb
bound
cltd
mov
add
cmp
fucom
add
outsl
in
js
mov
lret
xchg
adc
pop
adc
adc
cmp
jle
in
fsubr
inc
pop
xor
adc
ret
shlb
inc
xchg
gs
test
sub
fisubs
mov
lret
loopnew
and
mov
fs
inc
cld
add
data16
inc
sbb
sub
dec
inc
jecxz
mov
cmpsb
movb
scas
es
mov
xchg
lock
sub
xchg
dec
dec
push
aad
lds
ja
cmp
xor
adc
clc
call
arpl
mov
adc
cmc
mov
dec
dec
cmpsb
jmp
lods
ljmp
lods
test
xchg
cmp
jecxz
push
pop
cltd
and
add
fstps
ljmp
mov
enter
mov
pop
inc
test
xorl
xchg
push
and
adc
ljmp
or
mov
push
mov
dec
push
push
mov
out
mov
test
push
ljmp
mov
xchg
inc
into
or
jns
cmp
xor
and
jo
dec
jb
xor
andb
aad
adc
js
push
xchg
xchg
sub
out
bound
imul
stc
fwait
dec
push
dec
imul
jmp
jmp
int
cs
shl
dec
stos
fstpt
pop
sub
push
aam
addr16
lds
adc
and
push
rclb
out
push
and
pop
out
adc
push
sahf
pop
push
loope
jecxz
jle
sbb
mov
cmp
cmp
test
inc
cmpsb
pop
jg
aad
mov
mov
inc
sarb
push
cmpsb
dec
fs
rcl
in
or
sub
jns
arpl
sub
cmp
dec
pop
and
leave
mov
sub
fs
daa
push
cmp
rcll
cmp
xor
jmp
and
imul
sub
bound
call
inc
inc
jmp
or
out
xor
roll
cmpsl
popa
stos
sub
pop
out
jecxz
out
dec
aad
sub
push
test
sub
xlat
pop
rorb
or
mov
ljmp
sub
fildll
repz
cli
pop
or
popf
jae
sbb
mov
repz
jp
out
xchg
dec
out
fwait
xor
js
clc
shl
shll
fs
ja
cld
cmp
push
dec
and
adc
repnz
lock
arpl
in
push
sub
add
sahf
jns
add
das
dec
lock
sbb
mov
push
lods
push
push
adcb
dec
das
inc
and
sbb
ljmp
cmp
scas
sbb
xor
xchg
dec
xor
or
mov
adc
rcr
data16
sbb
loope
es
clc
pop
pop
cmp
mov
inc
dec
fs
int3
cs
dec
in
ds
pusha
push
xor
cwtl
sub
mov
push
pop
lods
pop
mov
cmp
gs
fwait
ss
adc
ret
adc
sbb
push
sub
popf
cltd
push
ss
mov
push
sub
xchg
aas
rcrb
xlat
sub
popf
sub
push
push
cmpsl
fucom
fs
ljmp
imul
aaa
and
in
aas
ss
pop
and
call
or
jge
push
mov
jl
mov
pusha
cmpsb
dec
fwait
add
out
dec
rcrl
imul
xchg
xor
mov
movsl
leave
dec
sub
dec
fwait
push
push
jae
cmp
dec
clc
xchg
scas
pop
pop
outsl
lahf
scas
pop
sbb
imul
xchg
popa
cltd
pop
push
bound
jmp
in
test
sub
and
push
xor
fbstp
insb
jo
xor
aam
aam
mov
mov
call
loopne
and
dec
lret
adc
es
fstpl
sub
mov
mov
and
addr16
fs
stos
mov
iret
loop
int
xchg
xchg
call
dec
popa
push
push
fucomip
cli
push
push
or
mov
outsl
cmp
adc
arpl
sbb
push
cmp
pop
js
cltd
xchg
bound
push
lret
data16
and
and
lret
jl
bound
inc
jmp
mov
loop
mov
add
pop
lret
push
adc
sub
imul
and
dec
aas
ficomps
add
pop
and
leave
stos
stos
sti
cmp
and
or
rolb
cwtl
gs
xor
dec
pop
aad
xchg
fs
xchg
jb
movsl
mov
jmp
pop
pop
pop
lahf
inc
sub
call
adc
mov
mov
or
add
sti
outsl
inc
add
sahf
or
mov
cmp
jbe
sub
ret
negb
dec
jmp
xchg
lock
pushf
jb
jns
scas
pop
cmp
out
in
cmpsb
inc
scas
sbb
and
sti
sub
xor
rcrb
dec
aam
sbb
mov
push
fstpt
lods
adc
mov
shll
gs
xor
dec
test
movsl
aam
cmpsb
aaa
xchg
addr16
loop
pop
fwait
xor
or
int3
jb
imul
in
sub
xchg
dec
aad
mov
sbb
and
inc
push
pop
sub
pusha
cmpsl
push
lcall
mov
pop
inc
sahf
sbb
xchg
es
dec
adc
pop
mov
add
fisubrs
scas
in
mov
mov
inc
aad
and
imul
xor
push
imul
cmp
movsl
mov
iret
out
mov
and
rorl
or
mov
popf
fucomi
es
pop
mov
xchg
aam
jnp
dec
adc
mov
inc
lock
or
stos
aad
pop
cmpsb
inc
icebp
pop
push
pop
out
cmp
lcall
xchg
sub
pusha
inc
stc
fiaddl
xor
sub
mov
xlat
or
xchg
adcb
xor
push
jns
enter
push
push
stc
pop
mov
cmp
lahf
pop
adc
sar
mov
jp
outsl
fnstcw
mov
inc
or
fsubl
in
cmpsb
lcall
push
arpl
test
mov
cmpsb
cltd
mov
cmc
imul
or
mov
int3
sahf
sbb
fadds
aad
into
cmp
fs
xor
popf
stc
loop
push
das
out
mov
out
or
shll
jno
pop
shlb
mov
das
jge
dec
pop
push
adc
xor
ja
repz
movsl
es
cmp
adc
lock
jmp
out
aad
sbb
xor
lds
mulb
stos
jmp
mov
jmpw
fsubp
cmp
lahf
and
sbb
pushf
fnstsw
cmc
popa
xor
pop
push
push
pop
xchg
int
push
xor
xor
cmp
cmp
lret
test
imul
adc
xor
cmpsb
mov
imul
sub
lret
dec
pop
push
xchg
sbb
mov
inc
out
arpl
jp
popa
rorl
adc
lahf
in
or
jbe
stos
xor
cmp
movsl
pop
imul
dec
mov
push
into
data16
pop
cmpsl
dec
cmp
out
mov
sbb
mov
and
and
ss
fiadds
cmp
fsub
dec
pop
push
pop
bound
outsl
push
mov
mov
xchg
pop
pusha
adc
pop
or
mov
arpl
xchg
add
push
fstpl
xchg
andb
in
add
or
stos
pop
inc
shll
ret
push
aad
dec
leave
mov
xchg
adc
sub
shlb
and
pop
jae
aad
mov
faddl
pop
cmpl
mov
mov
push
pushf
fsts
inc
faddl
sbb
testb
pop
inc
es
ret
ds
adc
or
cmc
dec
gs
xor
push
shl
sbb
mov
push
es
fsub
inc
inc
rol
out
dec
jae
cmpsb
xchg
popf
jae
pop
pop
aam
fwait
ja
push
mov
or
jge
adc
add
ljmp
data16
xchg
dec
cltd
sub
outsb
fistpl
dec
sub
mov
pop
iret
push
pop
sbb
hlt
insl
adc
sbb
and
loope
adc
pop
adc
xor
das
mov
subl
pusha
jns
push
push
and
cmp
and
jno
push
shll
dec
jge
orb
mov
pop
dec
aas
pushf
adc
shlb
aaa
or
cltd
sub
pop
inc
daa
sbb
adc
adc
jle
mov
stos
negb
xor
cmp
inc
scas
mov
mov
dec
call
xchg
out
sub
js
sbb
push
lods
loopne
jge
adc
or
cmp
mov
or
add
sbb
xchg
addr16
sarl
ja
test
sbb
jae
je
cmp
sahf
pushf
fdivrs
dec
push
mov
pop
xor
mov
loop
mov
shll
sub
aam
gs
lahf
sbb
pushf
xor
dec
cs
insl
or
pop
cs
sub
mov
push
iret
lret
lea
adc
xor
jb
cmpsl
add
in
or
aas
lds
cmp
pop
sub
in
lock
lcall
call
ss
fdivr
sub
xor
inc
hlt
mov
sahf
inc
and
sbb
fisubrl
sub
sbb
push
outsb
aad
jp
dec
fwait
sbb
xor
idivl
jo
sarb
mov
out
and
mov
mov
mov
dec
xor
aaa
js
sar
gs
jmp
ficompl
xlat
dec
fs
in
mov
mov
call
lret
ret
xlat
imul
mov
icebp
scas
add
cs
mov
xchg
adc
jmp
popa
jb
xchg
fdivr
xchg
aaa
push
inc
inc
inc
test
add
data16
sub
arpl
test
or
adc
int
jnp
pop
sub
scas
incb
mov
addb
and
jmp
fisubs
mov
add
xchg
fisubs
xor
dec
and
bound
jecxz
push
or
popl
aas
or
or
into
gs
jne
dec
je
cwtl
pop
xchg
test
cmp
pusha
mov
adc
push
xchg
aad
or
cs
aam
dec
add
mov
gs
push
leave
mov
push
shlb
out
bound
adcl
clc
dec
push
stos
pop
add
and
push
jmp
pop
rolb
cmp
push
cmp
popa
cmp
ljmp
addr16
xor
imul
jne
iret
cmpsw
loopne
and
movsb
js
cmp
cwtl
pop
dec
xor
sub
pop
dec
pop
push
add
push
gs
arpl
mov
sbb
sub
inc
loop
mov
pop
scas
pop
lds
arpl
lret
cltd
pop
xchg
inc
add
lret
push
push
es
sub
xor
outsb
shr
or
fneni(8087
fcomps
arpl
and
je
xchg
cmp
loop
movsl
sbb
and
mov
pop
loopne
jnp
popa
shrl
or
cmp
movsl
lds
jns
push
inc
lret
jecxz
in
cmp
cwtl
rorb
iret
sarl
add
add
jl
divb
push
js
add
rcrb
push
decl
fidivl
sbb
stos
lods
push
xchg
imul
popa
inc
mov
lock
and
enter
in
pop
push
push
sub
mov
aad
ja
jge
ss
jmp
lock
mov
and
es
mulb
or
notl
xchg
push
cmp
sbb
or
fldcw
mov
jns
test
pop
push
pop
push
mov
cmp
inc
inc
dec
test
clc
aam
pop
lock
bound
mov
fldenv
out
mov
dec
dec
sarb
pop
adc
mov
nop
xchg
dec
inc
sahf
jno
add
push
mov
and
pushf
mov
daa
imul
aam
xchg
cmp
mov
pop
jnp
arpl
dec
and
imul
insl
sub
dec
movsl
push
dec
in
bound
or
sub
or
adc
add
fcmovne
rcl
xor
movsl
push
adc
dec
inc
inc
pop
add
js
in
cs
or
cvtps2pi
add
inc
dec
add
rorl
jmp
fsubl
sbb
outsl
sbb
dec
xor
fdivs
shll
xor
addb
data16
fnstcw
mov
push
movsl
sbb
test
das
xchg
inc
scas
outsl
and
pop
pop
push
popa
jp
scas
jecxz
jne
mov
mov
test
inc
es
push
test
sub
mov
xchg
rclb
inc
mov
add
or
lahf
xchg
mov
out
xor
push
sub
sbb
jle
push
cld
sub
adc
ss
jecxz
pop
mov
xchg
jecxz
popf
pop
mov
push
push
out
sahf
pop
dec
js
cmp
call
js
mov
int3
fsubl
mov
fcompl
call
xchg
cmpl
popf
mov
dec
idivl
add
adc
cmp
add
andl
push
or
neg
mov
lret
add
push
or
inc
jb
outsl
jo
leave
in
sub
dec
fildll
ljmp
or
aam
cli
mov
dec
fsubs
sbb
std
xchg
stos
lods
iret
add
es
sub
out
mov
movsl
pop
cmpb
or
ret
int3
out
aam
add
and
fadd
xchg
add
bound
or
cli
hlt
or
or
adc
stc
out
pop
ja
test
nop
fisubs
push
push
lret
fwait
out
es
scas
cmp
jnp
lea
lods
fldt
addr16
testl
out
mov
push
fistps
mov
jns
dec
pop
std
or
jp
sub
fdivr
adc
or
es
pop
add
test
aad
outsb
cmp
fwait
lock
cmp
lods
std
adc
xor
push
lahf
ffree
gs
pop
xchg
cwtl
push
xlat
sti
fwait
test
jge
lods
pop
push
std
and
sub
push
les
data16
adc
jb
popa
sti
sbb
sbb
adc
lcall
cltd
pop
pop
fsubs
xor
adc
rcrb
xchg
add
mov
test
sub
sbb
shrb
pop
sub
pop
out
stc
xchg
iret
add
orb
push
sub
mov
gs
pop
jmp
mov
xchg
fidivl
std
jle
call
jmp
sbbl
jne
push
jl
addr16
fs
push
dec
dec
arpl
pop
xchg
add
ljmp
push
in
adc
call
fsubrp
fnsave
xlat
push
mov
sbb
push
mov
xor
push
mov
dec
mov
push
gs
cltd
das
push
mov
addr16
cmpsb
cs
mov
push
daa
movsl
lods
cwtl
fdivrl
ja
or
gs
ss
inc
pop
ficoml
and
fs
jmp
pop
scas
cli
imul
data16
or
jecxz
mov
addr16
cwtl
add
dec
push
call
lock
dec
fcom
pusha
push
pop
inc
fwait
call
cli
fdivrs
and
sbb
jae
gs
xchg
xor
leave
mov
pop
ret
stos
leave
pop
gs
ljmp
fstps
movsb
and
xchg
pop
pop
stos
movsl
loope
mov
popf
aas
out
ss
add
bound
cmp
pop
aam
sbb
xchg
out
xor
pushf
je
add
push
dec
push
fcompl
gs
arpl
or
dec
push
adc
adc
cwtl
push
hlt
push
and
lea
js
out
cmp
sub
dec
mov
lcall
outsl
cmpsb
cmp
xchg
cmpsb
xor
outsb
fcomp
loope
cmp
add
cmp
and
je
push
fists
push
lods
bound
pop
movsb
scas
xor
push
pusha
xor
leave
insb
jnp
insb
in
fisttps
sub
inc
aam
xor
cltd
pusha
repnz
adc
lds
mov
or
pop
data16
ljmp
adc
lahf
adc
xlat
xchg
bound
pushw
sbb
frstor
jbe
jns
aas
addr16
pop
cltd
es
xlat
cmpsl
xlat
adc
xor
das
in
fists
rcr
movsb
xor
cmp
rclb
ret
xchg
movsl
lahf
in
in
dec
imul
xlat
dec
popa
stos
xchg
arpl
push
call
loopne
in
loope
or
dec
push
pop
pop
or
mov
sahf
inc
mov
xor
repnz
test
pop
sbb
inc
mov
push
and
xor
push
push
lods
jmpw
out
pop
imul
sub
gs
mov
gs
mov
aad
adc
cmp
cmp
popf
mov
cmp
cmpsb
push
dec
jno
fwait
je
pop
outsb
xlat
es
add
mov
inc
adc
pop
data16
lahf
in
xor
je
jns,pn
outsl
les
imul
lock
leave
mov
pop
push
fbld
outsl
cwtl
xor
movsl
imul
out
mov
sbb
mov
mov
or
ljmp
fsubp
bnd
mov
rclb
out
test
nop
xlat
movsb
imul
and
push
lods
jecxz
dec
push
shrl
xor
or
xchg
aad
adc
xor
repnz
clc
jae
sub
xor
mov
xor
gs
std
mov
xchg
mov
cmp
push
scas
pop
push
add
imul
in
leave
fidivl
movsb
mulb
inc
xchg
adc
xchg
xchg
test
in
jp
mov
fs
lahf
push
insb
leave
lods
xchg
adc
pop
aaa
lds
std
lahf
adc
cmp
push
into
mov
loope
dec
ret
or
jle
outsb
sarb
lcall
sbb
js
shlb
imul
push
cltd
mov
xchg
jns
inc
pop
push
jb
pop
jns
bound
jns
ds
sbb
or
mov
popa
test
adc
push
xor
push
xchg
outsl
inc
mov
or
les
sub
push
lret
adc
pop
add
xor
push
inc
lods
imul
jle
shlb
mov
lods
rcr
xchg
cwtl
arpl
imul
ds
push
sahf
fdivr
xor
out
adc
das
sbb
or
lea
or
shr
fiaddl
arpl
mov
dec
xchg
pop
js
jae
or
xor
add
fwait
pop
xor
mov
ljmp
push
out
pop
xor
test
pop
push
les
out
jl
mov
fldl
or
int
push
pop
inc
mov
jmp
mov
les
js
xchg
inc
sar
cmp
outsl
pop
mov
call
into
pop
mov
stos
add
ror
push
sahf
mov
rol
jno
cmp
and
pop
in
and
dec
adc
push
add
pop
cmp
sbb
mov
inc
aam
loop
leave
in
jns
and
fs
loope
dec
insb
inc
xchg
pop
ja
pop
ljmp
inc
push
cmp
push
hlt
fwait
pop
and
add
fbstp
and
mov
fsubs
dec
fwait
pusha
dec
dec
inc
ret
pop
rclb
dec
dec
aam
fwait
inc
data16
sub
bound
xchg
cmp
jne
jecxz
fwait
jae
arpl
mov
sub
shlb
iret
pushf
push
push
loopne
mov
fisttps
mov
aam
aam
loop
sbb
lods
push
cmp
xchg
or
addr16
sub
imul
cmpsb
xor
mov
in
jns
icebp
aas
and
testb
iret
pop
jo
mov
das
dec
mov
push
insl
xchg
pop
inc
out
pop
dec
out
pop
adc
test
inc
sub
push
cmpsb
jnp
add
cmp
push
or
inc
cmpsl
pusha
loope
and
fucomip
and
and
mov
pop
fwait
add
pop
pop
push
jge
popa
mov
mov
fstpt
lods
cmpsl
loope
pusha
loop
mov
hlt
jl
loope
pop
fcomps
or
cltd
push
data16
adc
xchg
dec
inc
or
xor
lahf
mov
cmp
add
push
xchg
mov
cli
test
cmp
inc
shlb
xlat
cmpsl
adc
dec
mov
js
xor
mov
inc
fadd
out
ret
cwtl
data16
sarl
dec
repz
mov
mov
sahf
or
sub
popf
aad
in
jnp
arpl
aam
pop
sbb
arpl
aas
test
addr16
punpckhwd
xchg
or
sub
mov
mov
push
cmpsl
roll
mov
pop
push
mov
sahf
push
sub
leave
int
test
out
jns
addr16
call
imul
imul
mov
nop
xor
popw
add
pop
aad
fisubrs
xor
ljmp
ret
test
enter
inc
cmpsb
out
xlat
aaa
out
push
push
scas
ficoml
insb
sbb
mov
or
push
pop
push
stos
pop
pop
ds
cwtl
outsl
inc
insb
fsubr
in
push
rcl
mov
popa
xchg
ret
sbb
cltd
bound
lds
es
hlt
dec
or
loopne
cltd
mov
push
mov
pop
popa
es
scas
xchg
inc
fwait
arpl
sub
cmp
es
dec
or
popf
gs
fbld
test
xchg
mov
jle
xchg
dec
cs
arpl
xchg
jne
adc
cmpsb
scas
dec
aad
ss
arpl
test
sub
inc
fmuls
cmp
int
mov
pop
ss
decl
bound
out
inc
jp
xchg
addr16
sbb
icebp
cmp
shrb
imul
push
gs
push
addr16
out
sbb
pusha
inc
pop
call
pop
test
pop
fistps
push
arpl
push
push
and
push
fdivl
jmp
cmp
inc
xchg
fstpl
movsb
dec
pop
movsl
adc
out
gs
sbb
mov
in
add
insl
imul
or
sbb
jae
fldcw
cmp
push
xchg
pop
lods
ja
mov
xchg
push
ja
dec
arpl
mov
jl
movsb
or
jbe
dec
push
push
ror
and
inc
mov
pusha
sub
pop
xchg
pusha
aad
in
pop
pop
push
fistl
cmpsb
inc
xchg
pop
sbb
lods
pusha
imul
in
pop
loop
repnz
dec
jno
pop
loope
pusha
test
ret
inc
inc
mov
into
shlb
or
pop
addr16
pop
dec
push
test
and
or
and
int
push
pop
nop
pop
lock
cltd
pop
and
xor
sbb
dec
push
adc
sbb
mov
repnz
push
adcb
push
lret
xchg
adc
jo
mov
fwait
cli
jg
sub
mov
or
mov
push
pop
dec
shll
pop
es
addr16
dec
cltd
xchg
or
sarb
pop
xlat
mov
adc
pop
xchg
cltd
pop
dec
js
pop
popw
jge
pop
mov
popa
fldenv
push
arpl
mov
imul
out
xchg
dec
out
push
out
pushf
push
push
out
movsl
push
fsubs
xchg
fnstenv
sbb
mov
dec
xchg
gs
sub
sahf
dec
mov
jl
jl
push
and
imul
xlat
dec
test
jnp
mov
aad
daa
xchg
inc
out
sbb
pop
fadd
mov
subl
popf
inc
xchg
xor
jns
loope
test
push
dec
in
repnz
and
xor
fsubs
lds
mov
or
adc
add
cwtl
fs
or
pop
adc
dec
adc
push
cmp
fdivr
mul
gs
dec
mov
pop
xor
xchg
sub
xchg
sub
xchg
mov
sti
stc
and
xchg
push
xchg
mov
push
les
or
and
or
es
sub
cmp
imul
pop
add
mov
push
fmuls
pop
and
out
xchg
in
call
pop
pop
dec
dec
bound
out
sbb
mov
rcrl
imul
outsl
test
push
dec
cmpsl
or
fbld
and
fldenv
pop
push
nop
lea
push
and
popa
sbb
loope
inc
stos
sahf
ror
adc
fstps
cmc
pop
and
mov
pop
aad
jb
out
testl
push
out
push
dec
jecxz
cmpsb
adc
movsl
pop
lods
out
jbe
in
and
loope
dec
pop
pop
in
adc
fwait
mov
aas
pop
arpl
fsubr
jbe
aad
stc
push
ja
lret
ret
in
jecxz
dec
fcom
in
fstl
push
aad
jge
repnz
je
push
xchg
jnp
jmp
mov
out
xchg
repz
jp
scas
iret
pop
xor
pusha
xchg
imulb
pop
ret
jnp
out
mov
pop
nop
sbb
and
push
xor
cmp
gs
outsl
push
xchg
sbb
cmpsb
inc
or
les
repz
addr16
fwait
arpl
mov
fisubs
adc
jmp
cli
xor
xor
lret
notl
imul
sub
out
sub
mov
push
sbb
movb
leave
call
loope
lds
sub
adc
repz
adc
mov
rclb
dec
jg
inc
mov
mov
pop
out
xchg
popf
jae
pop
mov
dec
addr16
shrb
sbb
lret
dec
sub
stos
pop
lods
bound
push
lcall
or
mov
fcoms
cmpsl
pop
insl
into
jo
cmp
or
pop
adc
xchg
xor
cmpsl
iret
es
fldcw
or
loop
dec
aad
mov
test
arpl
push
push
adc
and
xor
mov
ja
pop
xchg
push
icebp
iret
fdivrp
xlat
repz
jns
pusha
fisttps
add
cwtl
repz
xor
add
bound
xlat
dec
sbb
mov
mov
fwait
je
loop
mov
bound
push
in
lds
cmp
shll
push
or
push
xor
fdivrp
mov
add
push
inc
mov
pop
scas
pushf
adc
dec
adc
rcl
popa
pop
pusha
sahf
pop
inc
xchg
dec
data16
arpl
lret
xchg
fcmovnu
pop
lock
fsubr
or
inc
or
gs
cmpsb
mov
popf
lods
fisubs
sbbb
pusha
js
mov
pop
lret
test
cmp
ljmp
add
push
sub
ret
or
arpl
divl
test
outsl
cmc
sub
mov
push
nop
and
mov
xor
mov
push
aam
or
xor
inc
push
and
shlb
cmpps
fstl
in
pop
mov
loop
loopne
and
lret
test
sbb
mov
or
dec
imul
fisubrs
pop
pop
movsl
adc
pop
and
xchg
ljmp
aam
xor
pop
fidivs
xchg
fldenv
mov
mov
in
popf
or
ds
jns,pn
out
fisubrl
inc
test
push
out
sub
xchg
push
push
mov
and
enter
jl
mov
push
mov
stos
lock
insb
pop
inc
lret
push
hlt
loope
mov
arpl
lea
mov
cmp
mov
lock
popf
clc
sbb
loop
loope
push
mov
mov
dec
in
aad
test
push
adc
cwtl
data16
cmpb
dec
dec
sbb
push
dec
rcrb
inc
stc
popf
pusha
shr
push
lock
jbe
dec
enter
enter
das
mov
cmpsl
xchg
decb
mov
cli
rorl
data16
rcl
fdivrs
int3
lret
pop
dec
cltd
sahf
cmc
push
out
cli
xchg
test
pop
or
ret
scas
mov
jmp
cmp
dec
lock
dec
ss
cli
adcl
sbb
lock
pusha
ljmp
lock
lods
pop
and
add
gs
dec
pop
sbb
ljmp
push
out
mov
fistps
push
outsl
addr16
push
aad
or
hlt
fsubrl
fs
mov
cs
les
mov
xchg
das
lds
push
imul
ljmp
add
and
and
sub
adc
push
pop
in
sub
ja
jnp
bound
pop
outsl
dec
ret
movl
cmp
lcall
lock
out
negb
ljmp
sub
mov
lret
dec
add
out
ret
es
push
cltd
inc
dec
mov
adc
mov
inc
inc
arpl
sbbb
push
outsl
pop
shll
inc
in
stos
daa
inc
cmpsb
fadds
push
xor
xor
mov
fistpll
addr16
subb
call
push
das
data16
loope
push
or
pop
jo
adc
es
loope
mov
in
loope
pop
jnp
adc
mov
leave
aad
lods
adc
sub
inc
and
imull
fs
dec
mov
pop
push
or
cs
mov
xlat
dec
mov
pop
or
cmp
dec
addr16
pop
fcomps
fsubr
mov
es
test
lret
push
mov
lds
nop
loop
fdivl
imul
jp
loope
xchg
push
mov
push
lcall
push
dec
mov
fistpll
push
rcrb
cld
andb
repnz
rol
ror
add
adc
lea
jnp
sbb
ds
sub
mov
adc
aam
or
mov
lret
xor
fstpl
mov
inc
out
cmp
xchg
aad
cli
inc
pop
mov
xchg
sahf
xor
sbb
and
insb
popa
xchg
aad
loop
fdivl
shll
stc
andl
jno
addr16
xchg
test
in
inc
loope
cmp
xchg
xor
inc
test
aaa
cmp
das
jp
adc
lret
in
popa
mov
stos
dec
loop
es
rcrb
inc
or
scas
loope
sbb
xchg
dec
outsl
cs
pop
and
lods
xor
daa
xor
mov
sbb
dec
ljmp
lods
pop
les
push
aam
shll
aam
jo
fwait
shll
shll
sub
pop
hlt
push
fdivs
pop
push
sub
inc
cs
rcl
dec
pushf
push
dec
cwtl
out
cmpsl
and
icebp
or
add
imul
dec
push
add
push
addr16
fbld
ljmp
movsb
xchg
or
add
add
sbb
ss
fisttpll
xchg
rcll
xchg
inc
and
mov
test
push
das
push
mov
stos
out
inc
arpl
ljmp
mov
dec
jp
add
jne
enter
push
mov
pop
mov
dec
push
imul
push
lds
std
sbb
mov
enter
jmpw
out
push
movb
inc
gs
dec
clc
jno
adc
imul
fsubrs
lret
roll
push
lret
enter
dec
dec
shll
sub
mov
dec
dec
push
push
outsb
push
cs
jne
xor
or
or
bound
jbe
xchg
into
jmp
cmp
xor
jb
pop
shr
pusha
and
jns
sub
sub
lock
sub
mov
testb
data16
in
sub
into
pop
pop
jnp
push
or
sub
movsl
pop
xchg
call
push
leave
gs
sub
and
shlb
cli
cmpsb
or
aaa
les
insb
popa
mov
pop
xlat
call
or
mov
xchg
add
mov
and
cmp
push
data16
fwait
stc
sbb
and
outsl
cmpsb
dec
movsl
pop
mov
outsl
ss
xchg
xchg
push
mov
aam
movsb
aad
add
out
rorb
sbb
sub
sub
jno
push
cmp
mov
xchg
xchg
mov
push
shl
fwait
push
xchg
xchg
scas
add
mov
cld
enter
pop
ds
rol
bound
aam
inc
mov
xor
pop
popa
ljmp
jp
inc
stos
aad
movsb
push
xor
xor
pop
xor
xchg
mov
dec
lret
mov
daa
les
dec
inc
test
xor
ss
in
adc
lea
inc
lret
fidivrl
dec
fldenv
imul
rorl
inc
mov
frstor
sub
mov
jl
mov
jg
je
cmp
jns
insb
in
mov
and
push
ss
xlat
mov
inc
addr16
push
andl
flds
ss
ret
jle
fs
mov
sbbl
or
pop
add
mov
sub
push
cmp
cmp
sbb
ljmp
cmp
aad
xchg
xchg
cmp
lock
jo
imull
pop
pop
fsubrs
pop
out
inc
insl
pusha
inc
fimuls
int
sbb
dec
call
sub
fldl2t
sarl
xorb
add
inc
movsl
jl
mov
push
imul
popa
mov
dec
repnz
jecxz
call
pop
inc
aam
test
addl
ljmp
cmc
push
cmpsb
daa
sub
push
gs
xchg
inc
lcall
call
sbb
mov
add
sbb
mov
icebp
gs
jl
mov
fnstenv
cs
dec
loop
neg
ja
jne
cmpsl
jmp
cld
shlb
lock
mov
xchg
xor
lret
xor
push
jmp
aad
sub
inc
or
das
pop
adc
fwait
in
in
adc
test
js
push
mov
push
sbb
in
mov
movsl
leave
mov
add
aas
jmp
mov
xor
pop
aam
or
xchg
fstpl
sbbb
imul
xor
adc
shll
cmp
add
xchg
dec
push
xchg
inc
lea
push
mov
xchg
push
mov
mov
xor
mov
xor
daa
cmpb
pop
push
or
xor
xlat
and
pop
push
cmp
es
adc
int
rcll
fdivs
dec
rcll
rcrl
imul
gs
mov
aas
arpl
push
loope
inc
and
adc
cmp
or
push
out
dec
mov
fcoml
arpl
adc
jnp
shl
rcrb
shl
mov
aad
cltd
mov
mov
pusha
xchg
out
insl
pop
xchg
jo
add
popa
push
aam
test
mov
cli
int3
xchg
sbb
imul
int3
xchg
push
jg
dec
nop
addr16
mov
sub
mov
mov
std
or
add
cmp
nop
testb
mov
clc
jmp
fstpl
or
or
adc
push
pusha
aad
push
je
sbb
inc
or
jno
adc
decb
and
or
push
pop
frstor
les
ja
mov
mov
aas
cltd
lret
sbb
jmp
je
inc
xor
jp
loop
push
pop
dec
and
mov
cmp
addb
or
xchg
and
inc
movsb
out
jmp
xchg
pop
pop
xchg
pop
outsl
xchg
sbb
lahf
out
mov
outsl
data16
fs
enter
push
sbb
dec
xchg
sub
push
dec
fst
addr16
or
mov
stc
mov
or
dec
add
xor
aam
push
outsb
movsb
call
call
clc
aad
and
stc
xor
or
fisttpll
clc
adc
adc
cmp
gs
pusha
xor
bts
aam
and
int3
xor
pop
jmp
ljmp
push
jbe
pop
je
cli
std
pop
mov
rorb
sahf
iret
scas
in
lods
scas
repnz
adc
mov
dec
pusha
pop
fsub
sbb
mov
or
pop
inc
push
mov
lcall
sbb
cwtl
arpl
jno
xor
pushf
inc
lahf
mov
testl
pop
sub
hlt
sbb
fisubs
inc
jne
pop
mov
das
or
cmp
les
lret
sbb
pop
fdivrl
sub
pop
gs
adc
xlat
jmp
add
xchg
pop
movsb
pop
mov
lahf
xchg
iret
movsl
jl
jl
aad
push
inc
mov
xchg
push
iret
cld
pop
dec
lret
push
imul
pop
test
push
icebp
mov
sar
adc
adc
cld
ja
pop
imul
cs
int
push
sbb
sub
nop
out
push
pop
test
dec
cmp
lret
imul
pop
imul
out
inc
arpl
pop
int
sbb
in
mov
outsl
data16
xor
into
in
dec
jne
jmp
cmpsl
dec
test
sbbb
pop
lcall
lret
in
dec
sbb
sub
sbb
add
cmp
or
or
aad
pusha
mov
test
xor
mov
data16
data16
rclb
fldenv
jne
cmp
dec
stos
mov
cmp
out
popa
and
mov
add
outsl
dec
in
pop
jbe
leave
push
sbb
lcall
mov
mov
fs
inc
andl
inc
dec
lea
jns
push
scas
fsubl
push
pop
dec
mov
sub
push
cmpsl
add
test
add
fstpl
vmovlps
xor
es
outsl
lret
stos
jmp
hlt
out
movsb
and
xchg
xlat
inc
lret
bnd
call
xor
cmc
xchg
push
mov
pop
mov
or
popa
add
std
imul
pop
aam
xchg
xchg
inc
xchg
fcoms
pop
fdiv
and
cmp
mov
dec
cmpsl
dec
jecxz
sub
aad
pusha
xor
ja
xchg
dec
or
add
xor
fs
pop
sub
sbb
cmp
dec
push
out
mov
inc
mov
dec
push
ljmp
fmull
jmp
xchg
inc
or
out
sub
stos
jae
stos
sbb
xor
xor
cwtl
sbb
stos
imul
mov
xor
or
pop
and
mov
rcll
pop
push
add
xchg
pop
hlt
dec
testb
dec
pusha
sub
in
pop
jp
pop
pop
sub
or
jns
xor
sub
pop
insl
dec
dec
pop
xchg
loope
xchg
jo
inc
pop
push
mov
orb
int3
ret
cmp
decb
dec
sbb
pop
adc
test
cs
adc
scas
xchg
sub
dec
mov
pop
dec
dec
in
add
push
mov
gs
stos
pop
cmp
xchg
push
lods
clc
lahf
repnz
pop
push
das
pop
cmc
or
pusha
adc
mov
bound
mov
dec
dec
es
push
das
add
add
in
mov
add
sbb
insb
out
push
shlb
das
lea
test
dec
sbb
add
lret
fstp
push
dec
and
inc
aam
mov
cmp
add
out
test
cmpsl
andb
in
shll
xchg
push
xchg
sbb
popf
frstor
fs
std
adc
in
jmp
pop
add
and
es
daa
xor
sbb
mov
imul
js
sub
xor
iret
movsl
pop
scas
fchs
cwtl
push
rcr
fmull
outsl
xlat
push
pop
call
mov
mov
pop
cli
insb
xchg
jns
xchg
dec
and
fucom
sub
sahf
adc
mov
xor
sub
fadds
stc
xor
push
xchg
sti
stc
loop
inc
imul
xor
cmp
in
jae
sti
push
pop
cmpsl
scas
popf
fimull
movsb
shr
int
inc
push
pop
dec
dec
test
dec
mov
xor
push
loop
and
mov
push
addr16
or
cwtl
pop
mov
xchg
inc
mov
stc
and
push
inc
fnstsw
push
or
pop
pop
push
ficoml
lock
jmp
cltd
and
das
nop
dec
fstps
and
cmp
mov
fisubs
jns
inc
lods
ljmp
int3
js
lret
xchg
arpl
ljmp
sub
cmp
icebp
mov
ds
cmpsl
mov
push
inc
movsb
xor
sub
cmp
sub
mov
or
cmp
jmp
mov
out
fbstp
mov
fldenv
cmp
dec
fcomip
mov
pop
cltd
or
cmpsl
pop
fwait
in
lods
ret
push
push
and
test
pusha
lret
push
mov
push
lea
loop
mov
push
mov
fldt
xchg
mov
sub
mov
dec
inc
xchg
mov
mov
arpl
daa
loop
cmpsl
sub
and
inc
dec
das
insb
mov
mov
xor
mov
test
or
jl
sbb
loop
or
outsl
fbstp
add
scas
leave
ret
lods
dec
es
or
inc
adc
push
addb
push
popa
data16
das
jecxz
dec
add
gs
popf
push
add
xor
xor
cld
fwait
and
mov
mov
add
dec
pusha
pop
or
xor
ss
xchg
pop
iret
push
sahf
mov
pop
lock
push
std
mov
pop
jp
movsb
dec
cs
push
xor
push
sahf
test
es
pop
dec
cwtl
fwait
jmp
lret
aam
jo
sbbb
jnp
fsubs
push
and
dec
in
or
or
lahf
xchg
cwtl
cwtl
popf
fcom
push
popf
sbb
fmuls
ljmp
les
pop
iret
sub
push
xor
sbb
cltd
push
or
jmp
imul
mov
cmp
leave
pop
xchg
inc
into
in
popf
ljmp
int
in
push
leave
subl
pop
xchg
jbe
bound
inc
sbb
or
add
in
pop
mov
xchg
sbb
pop
xchg
pop
mov
fcoms
iret
gs
push
mov
jmp
sub
inc
aas
adcl
out
fcomps
adc
mov
aad
pop
or
ja
push
enter
clc
sub
inc
push
dec
call
cmp
vorpd
push
divl
sub
cmp
or
xor
dec
cmp
sti
push
push
pop
mov
cwtl
imul
fbstp
xchg
jecxz
xor
mov
dec
aad
out
shlb
push
int
push
adc
jp
movsb
shl
dec
pop
rcll
mov
push
add
imull
jno
in
lcall
inc
arpl
lds
mov
or
lea
add
lds
and
or
aaa
adc
mov
inc
adc
push
push
xchg
or
add
sub
sbb
andl
clc
in
fsub
es
inc
cwtl
les
xlat
andl
sbb
and
mov
fsubs
pop
add
push
add
cmp
shlb
mov
fstps
rclb
insl
jb
gs
and
mov
fdivs
dec
pop
xlat
aam
xchg
cld
jb
xor
adc
mov
hlt
jg
jbe
sar
push
jecxz
popa
jnp
je
cs
int3
mov
dec
xchg
adc
pop
out
xor
sub
mov
popa
nop
mov
jmp
push
adc
push
mov
leave
fsts
push
add
in
dec
mov
xchg
arpl
orb
test
dec
and
jns
aad
sub
xchg
dec
imul
push
pop
leave
lret
aam
sbb
icebp
cld
bound
pusha
inc
jns
push
sbb
sub
push
adcl
mov
test
es
fwait
or
xchg
jl
stos
aad
jmp
loop
aam
mov
xchg
xchg
es
cli
cmp
sbb
mov
lcall
insb
repz
add
es
pop
test
pop
jnp
jbe
lahf
ret
mov
fstps
std
pop
and
add
rcl
test
jns
mov
outsb
pop
add
cs
dec
mov
enter
or
jno
dec
inc
mov
ds
xchg
inc
cmp
aad
dec
dec
bound
sti
jmp
cltd
shlb
sbb
test
stc
sbb
sub
pop
arpl
xchg
xchg
pop
inc
xchg
push
std
sbb
ret
loope
dec
stos
xlat
cli
xor
test
dec
and
inc
call
dec
gs
sti
cmp
sub
inc
mov
inc
shrl
pop
lods
push
xchg
cld
sub
push
or
sub
hlt
bound
shrl
sbb
pop
xchg
jge
leave
dec
jne
movsb
sub
dec
in
data16
xchg
push
leave
mov
dec
fisttps
std
mov
inc
fadd
mov
addb
dec
push
push
bound
push
add
push
push
sub
ja
jnp
mov
out
xchg
dec
aad
sbb
movsb
pop
lods
adc
cmp
cmp
xor
fistl
imul
sub
dec
cmp
adc
scas
sub
jnp
jns
cld
mov
stos
add
cmc
or
dec
int
pushf
sbb
xchg
shlb
cmpsl
cld
test
pop
aam
mov
lods
cmp
mov
shlb
mov
and
dec
aaa
cmpsb
in
push
stc
jle
and
sahf
int
inc
mov
or
push
data16
sbb
pop
pop
pop
xor
cltd
ljmp
movsl
pop
sbbl
mov
addr16
int
ljmp
cmp
pop
cwtl
xor
mov
movsb
movsl
vpunpcklbw
pop
sbb
mov
cmpb
dec
lods
push
nop
and
dec
fildll
xor
icebp
cmp
mov
jns
in
sub
aas
sti
sbb
fcomp
std
lods
idivl
sub
aad
add
scas
cmovns
lret
in
cmc
inc
add
or
pop
xlat
sub
int
dec
mov
movsb
pop
pop
fdivrp
lea
dec
popa
lret
or
in
loope
jmp
cltd
pop
data16
sbb
xchg
out
push
mov
jp
pusha
pop
adc
dec
xor
pop
ret
and
jno
xchg
call
fwait
sbb
repnz
dec
iret
movsb
or
fsubrl
mov
pop
jnp
jmp
or
push
xchg
gs
gs
and
std
cmp
jecxz
mov
lock
rcr
dec
or
lret
push
and
push
frstor
bound
pop
dec
imul
dec
inc
test
inc
dec
cmp
fbstp
xor
scas
int3
ja
popa
mov
dec
sbb
int3
sahf
les
sub
aam
xchg
push
das
jbe
pop
inc
das
xchg
gs
clc
sbb
pushw
push
sub
cmpsl
xchg
addr16
xchg
lret
xchg
rorb
addr16
cmp
sarl
hlt
dec
pop
gs
cmp
arpl
fs
arpl
arpl
mov
frstor
mov
ja
aaa
into
pop
aad
xor
push
and
adc
mov
push
inc
and
pop
push
and
cmpsb
cmpw
inc
in
add
add
movsb
lock
loopne
xchg
js
inc
inc
cmc
sbb
dec
sub
fisttps
insb
das
mov
test
adc
lahf
sti
and
cs
pop
dec
popf
mov
mov
inc
fs
das
xor
push
xchg
das
xchg
fsub
cmp
cltd
daa
mov
xchg
xchg
lahf
ja
dec
inc
movsb
mov
clc
cmpsl
adcb
xchg
or
cltd
xchg
lret
ret
out
pop
push
aad
pushf
mov
fsubl
sbb
ja
sbb
push
cmp
dec
loope
inc
and
mov
adc
aam
mov
gs
les
movsl
sarl
sub
jle
cmp
mov
push
push
fwait
xchg
xor
mov
dec
cs
imul
push
arpl
xor
cmp
cmp
inc
call
mov
lret
xchg
sarl
sbb
adc
out
xchg
sti
sahf
sahf
es
outsl
and
scas
mov
mov
mov
dec
xor
jmp
repz
sbb
hlt
sbbb
fs
cmpsl
shlb
pop
les
enter
xchg
fadds
pop
outsb
ss
leave
mov
out
pop
or
cmp
mov
and
mov
inc
pop
lret
push
andb
div
ret
hlt
jmp
aam
ss
data16
ret
shrb
xchg
stos
mov
imul
xchg
and
scas
and
jmp
into
dec
fwait
loop
imul
mov
in
xchg
dec
sub
mov
xchg
xchg
dec
fildll
or
inc
ss
or
mov
cwtl
insb
out
mov
add
popf
cltd
xor
and
and
pop
ljmp
fists
xchg
pop
pop
xor
test
push
enter
xor
out
add
fstps
jp
pop
xchg
adc
push
pop
jmp
pop
and
push
leave
push
add
dec
loop
idivl
pop
jmp
push
sbb
xchg
ret
pop
pextrw
or
in
sarl
pushf
in
xchg
push
test
or
out
pop
fwait
jns
lds
add
xor
push
dec
sub
cmp
or
fcomi
outsb
addr16
xchg
pop
jl
pop
mov
fildl
or
sarb
inc
dec
call
or
movsl
push
addr16
data16
dec
mov
or
xchg
pop
lret
aad
loop
sbb
ds
out
iret
insl
sar
push
es
stos
adc
sbb
push
ja
mov
or
popa
rcrl
addb
xchg
add
cmp
arpl
xor
int3
fcom
stc
xchg
pusha
fsts
dec
mov
inc
sbb
mov
pop
and
test
push
insl
jae
lret
push
or
in
xchg
sub
fwait
mov
inc
inc
ret
dec
out
mov
inc
cltd
lahf
data16
gs
mov
xor
lcall
loopne
mov
aad
daa
cmpsb
dec
ds
repnz
jmp
adc
jmp
in
push
xor
ret
or
sub
loope
pop
out
out
andl
xchg
inc
push
jp
jb
dec
add
sbb
sti
in
and
lock
mov
pop
push
inc
shll
cld
pop
mov
popf
pushf
push
pop
adc
or
es
inc
sbb
cmpsb
pop
or
mov
inc
fisttpl
pop
xchg
dec
das
add
and
fcomps
fldcw
lcall
aam
dec
mov
fdivl
adc
dec
in
sbb
dec
sti
icebp
cltd
and
mov
push
lcall
aad
pop
mov
lods
inc
movsb
push
inc
lods
aas
mov
shrb
push
movb
sub
push
jge
cmp
mov
insb
es
sub
popa
pop
pop
pop
push
add
std
pop
clc
repz
sub
and
pop
pop
sbb
fiaddl
push
xor
pop
in
jb
push
inc
xor
std
es
icebp
shll
pusha
inc
mov
les
inc
dec
lret
lds
cwtl
shl
andl
xchg
pop
inc
stc
cmp
inc
out
shll
rcrl
cltd
dec
test
xchg
mov
mov
pusha
int3
imul
dec
aad
gs
mov
xchg
pop
in
jmp
ja
xor
pop
frstor
mov
xor
repz
add
push
add
adc
lret
outsl
push
mov
dec
mov
daa
and
ljmp
bound
mov
mov
ficompl
dec
cltd
inc
cmp
iret
push
ret
cwtl
inc
movl
fsin
je
and
mov
je
mov
dec
repnz
aas
cmp
mov
mov
gs
fsts
das
call
pop
cmp
mov
enter
daa
lock
or
pushl
sub
push
add
sbb
fdivs
pushf
ljmp
dec
xor
sub
mov
frstor
pop
xchg
xchg
push
mov
cwtl
adc
addps
xor
outsl
add
and
test
dec
arpl
push
cmpsl
inc
addr16
mov
pop
nop
adc
bound
jp
les
ljmp
push
cmp
fiadds
or
out
ds
popf
stos
xor
shll
pop
iret
rcll
add
cmp
or
adc
sbb
add
stos
or
fmull
sub
sbb
aas
out
cmp
push
in
push
ss
rcrb
mov
lcall
lret
call
or
mov
pop
push
or
dec
fwait
add
xlat
dec
mov
int3
jmp
stos
or
push
cwtl
enter
push
xchg
sub
push
sub
dec
aas
inc
cltd
cmp
and
pop
push
jmp
xchg
jecxz
push
data16
fdivrs
dec
out
pop
ds
and
int3
push
push
push
inc
mov
test
xchg
and
mov
and
gs
fwait
imul
or
stos
insb
xor
pop
pop
movsb
sbb
push
or
cmp
pop
pop
pop
push
or
jno
dec
leave
test
aas
sbb
dec
add
mov
mov
aaa
inc
push
add
in
sbb
sbb
pop
addr16
xor
mov
scas
xor
rcll
hlt
dec
inc
push
xlat
cmp
pop
ljmp
dec
xor
rcrb
stos
enter
dec
repnz
sub
jmp
xchg
push
insb
pop
dec
sub
fwait
mov
bound
mov
or
mov
dec
mov
sbb
aaa
dec
lret
dec
adc
data16
inc
daa
dec
repz
mull
dec
arpl
add
test
fsubr
jecxz
xchg
hlt
clc
sub
xor
idivl
in
jbe
and
imul
dec
add
fmull
inc
adc
mov
aaa
bound
push
push
popf
stos
out
mov
repz
jp
test
out
xor
test
and
sbb
xchg
xor
dec
xchg
push
mov
xor
in
nop
nop
iret
stc
and
lahf
cs
movsb
imul
add
imulb
push
jne
mov
fwait
out
cmpsb
lds
int3
push
ss
gs
fwait
stos
loope
pop
xlat
jns
test
movl
fucomip
dec
daa
ret
dec
adc
pop
aad
jge
cmpsl
push
xor
test
fs
shlb
lds
mov
popa
cmpsb
inc
pop
push
mov
lods
insl
in
scas
push
fldcw
jecxz
imul
sbb
inc
or
pop
xchg
mov
into
test
test
add
dec
fimuls
sbb
gs
fsts
pop
inc
ds
inc
daa
rcl
pop
xorb
push
push
hlt
jge
push
mov
push
pop
imul
scas
adc
sahf
lods
test
push
xor
aam
ljmp
pop
jbe
enter
mov
cmp
xor
aam
ja
mov
pop
movsb
adc
mov
pop
sub
das
adc
sub
or
pop
jg
mov
out
sbb
aas
out
push
or
xor
sub
inc
add
subb
or
lahf
xor
xor
adc
stc
or
pop
jnp
pop
dec
lods
add
into
push
xor
icebp
test
gs
push
movsl
cli
aas
sub
arpl
and
push
movsl
sub
arpl
mov
jmp
push
dec
loope
xor
outsb
ljmp
lahf
sbbb
lret
adc
push
aad
ret
and
push
lea
ljmp
mov
loopne
sub
cmp
jp
and
jmp
or
xchg
in
mov
or
or
cmpsb
xor
push
data16
orl
gs
xchg
in
pop
pop
fstl
xchg
push
and
dec
aad
scas
xor
data16
nop
rcll
mov
jae
in
outsl
bound
fwait
testl
loope
pop
lahf
jge
movsb
pop
lret
stc
mov
aaa
cwtl
pop
inc
inc
mov
push
popa
or
push
and
jecxz
mov
dec
mov
movsl
xchg
cmp
hlt
pop
and
iret
ss
pop
stos
push
sub
hlt
and
cmc
es
inc
out
cmp
mov
xchg
xchg
jp
mov
inc
loop
nop
out
pop
enter
fiadds
loope
popa
pop
cli
pop
dec
adc
aaa
loopne
loope
push
stc
sub
inc
sbb
rol
or
pusha
cltd
andl
xchg
sbb
mov
leave
aad
insb
add
inc
push
cmc
push
mov
setae
jp
push
repz
jl
push
xlat
sbb
icebp
ret
pop
dec
faddl
repnz
mov
test
xor
out
sub
inc
ljmp
push
js
test
shll
gs
push
dec
mov
mov
inc
add
fucomp
push
sbb
sub
xchg
out
pop
push
ret
enter
out
outsb
in
lock
push
test
jb
xchg
add
rcrb
push
iret
bound
push
mov
inc
dec
jp
ljmp
and
sub
rclb
pop
sub
and
sbb
push
and
daa
pusha
push
gs
imul
mov
mov
mov
repz
push
dec
inc
sub
sub
push
mov
mov
inc
fwait
pop
incl
and
add
inc
xchg
sbb
pop
popf
jp
add
mov
mov
and
addr16
shll
lahf
pop
cwtl
bound
mov
xchg
js
test
pop
jno
movsb
xor
cmp
xor
pop
stos
fdivp
aad
dec
pop
fsts
mov
mov
dec
std
scas
pop
jle
sbb
outsb
xchg
inc
dec
test
out
jns
loopne
cmp
test
add
dec
push
js
lods
jl
push
popf
jo
in
push
gs
stc
or
push
mov
vmovaps
ljmp
and
int
pop
xor
add
hlt
aam
lods
push
loope
data16
dec
imul
aaa
aas
fisubrl
inc
and
ljmp
xchg
fs
js
lds
inc
pop
lret
xchg
jl
add
adc
add
pop
test
sti
or
repnz
cmp
jecxz
cmp
jp
inc
fs
mov
sub
sub
test
fs
pop
call
test
insb
xchg
inc
dec
push
pop
jl
cld
sub
scas
fstpl
push
and
inc
dec
inc
push
dec
inc
arpl
xchg
cmp
push
dec
cs
ljmp
sub
inc
fstps
loope
lahf
and
pop
scas
mov
and
add
push
sbb
clc
test
pop
jp
push
in
popf
out
les
mov
sub
push
lcall
mov
sbb
out
in
dec
pop
jbe
ret
lahf
adc
in
mov
pop
test
mov
xchg
imul
pop
daa
push
xchg
xchg
rorl
daa
arpl
mov
xlat
mov
cmp
mov
sbb
popl
sbb
push
cmp
cmp
into
imul
fldlg2
shr
adc
inc
stc
dec
outsb
cli
ror
and
addr16
flds
bound
testl
push
lahf
movsb
stos
out
push
addr16
rorb
xor
push
and
adc
cs
xor
cld
xorl
sub
das
iret
push
mov
pop
sub
mov
adc
leave
sahf
idivb
add
cld
and
xor
daa
rcrl
lahf
and
pop
cmp
sub
add
adc
std
cmp
aam
out
inc
sub
push
enter
mov
push
push
pop
movsl
jle
sub
cltd
push
cmp
test
sti
shrl
push
adc
fisubl
addr16
and
or
push
in
es
ficompl
imul
sbb
pop
or
cmpsl
mov
stos
push
sarl
scas
jmp
cli
xor
pop
push
pop
ss
mov
cmp
push
ss
jmp
add
add
pop
push
vandnps
dec
sbb
hlt
mov
push
aam
std
xchg
call
xlat
mov
xchg
loopne
fcmovb
imul
test
je
bound
fisubrs
jecxz
test
push
mov
add
cltd
lahf
mov
xor
dec
cmpsb
out
repnz
push
lret
pop
aad
or
insb
pop
or
push
loopne
lret
inc
int
cld
mov
or
les
push
pop
in
clc
test
inc
xor
mov
and
inc
movsb
aad
or
dec
cltd
sbb
pop
data16
mov
push
or
lahf
out
xor
mov
test
fwait
stos
adc
push
mov
aad
mov
cwtl
ret
outsl
lahf
cmc
ljmp
xor
mov
pop
imul
sahf
sbb
push
push
pop
pop
testb
call
pop
hlt
cs
clc
push
xchg
and
mov
pop
dec
mov
mov
aad
gs
push
pop
dec
mov
add
and
mov
add
mov
or
movsl
push
inc
xchg
push
xchg
cs
mov
cld
xchg
sbb
sub
repz
pop
add
outsl
mov
jbe
push
cmpsl
cmc
or
shll
loopne
xlat
leave
inc
sahf
pop
mov
jmp
stos
jle
xchg
test
mov
outsb
int3
in
dec
sbb
test
xor
in
sbb
mov
and
lret
rolb
aam
outsl
push
dec
lds
xchg
push
xor
jle
loope
mov
push
xor
pusha
cmp
push
outsl
fstl
insl
inc
lds
push
ljmp
lahf
inc
pop
data16
jmp
add
pop
into
les
xchg
stos
push
out
lds
add
and
stos
mov
mov
sub
push
ret
filds
les
fcoms
ljmp
fdivrp
mov
aaa
dec
dec
cmp
mov
enter
inc
cmp
popa
sub
mov
cmp
push
mov
pop
dec
inc
pop
mov
xor
push
or
push
sub
sbb
movsl
cld
add
pop
movsb
es
ljmp
xor
pop
lods
ljmp
icebp
lret
pop
in
mov
jb
fchs
mov
arpl
data16
loopne
xchg
pop
jle
jne
insb
das
ljmp
dec
push
sahf
std
adc
out
addr16
pop
sahf
jle
xlat
mov
dec
fs
jecxz
xchg
sub
xchg
test
lods
js
lret
xchg
and
inc
imul
mov
push
mov
das
in
leave
mov
pop
fsubrp
iret
dec
xor
xchg
mov
xchg
push
aam
cvtps2pd
cmp
mov
mov
sub
pusha
push
pop
push
add
outsl
addr16
mov
mov
pop
xchg
or
cmpsl
cmp
cs
outsb
dec
in
pop
inc
push
sub
ss
fs
inc
mov
dec
ficompl
das
roll
xchg
in
das
stos
lock
insb
fisttps
push
shlb
inc
test
dec
jmp
cmp
scas
cmp
jmp
pop
cwtl
inc
mov
lret
movsl
jmp
outsb
mov
adc
movsl
cmp
es
subl
mov
sbb
addr16
xchg
push
gs
and
pop
dec
fcomps
xor
and
dec
je
call
push
xor
sbb
repnz
xor
add
lret
add
jno
and
or
out
cmp
aam
in
rcrl
test
and
inc
idiv
fistpll
mov
xchg
and
or
sti
lds
jp
stc
pop
push
stos
ja
pusha
push
pop
add
xlat
mov
inc
popf
sub
jecxz
sub
cs
fisubs
push
dec
xor
bound
pop
aas
add
stos
sbb
pop
push
stos
scas
push
data16
test
pop
andb
fists
jae
inc
int3
rcrl
xor
cmp
dec
pop
pop
enter
sub
hlt
pop
and
xlat
fidivrs
iret
shr
mov
cmp
repz
push
cmp
pop
xchg
inc
mov
negb
test
mov
negl
dec
add
movsl
bound
popf
leave
shl
dec
gs
push
orl
dec
les
pusha
in
mov
bound
cmp
cmp
xchg
pop
lea
aas
mov
mov
imul
jns
gs
push
mov
enter
leave
cmc
mov
fdivl
inc
mov
aam
jne
push
cld
cli
in
cmp
fistps
test
movsl
jp
inc
jle
add
xlat
cmpsl
push
data16
add
xchg
xor
fldt
imul
push
test
push
mov
and
pop
dec
in
pop
mov
dec
cli
push
scas
inc
pushf
fildll
and
mov
in
mov
inc
out
and
imul
decb
cmp
sti
pusha
in
mov
mov
pop
sub
push
fcoml
std
xor
inc
rcrl
aas
js
mov
pusha
pusha
dec
lcall
sub
lahf
cmp
inc
fiadds
mov
cmp
push
push
shrb
loopne
bound
loopne
mov
pop
loopne
mov
loopne
cltd
bound
and
and
push
sbbl
out
mov
cmp
xor
cld
xchg
sbb
dec
aas
sub
movsl
mov
adc
xor
jne
dec
addr16
out
xor
adc
or
fwait
in
cmc
cmp
dec
mov
inc
adc
inc
mov
cmpsl
mov
push
lahf
push
ds
pop
mov
cmp
dec
inc
or
adcl
sub
stos
outsl
push
daa
gs
cld
shl
jmp
imul
sub
cmp
divl
push
inc
jp
mov
loope
test
and
add
jno
cmpsl
xor
arpl
or
test
dec
ja
outsl
xchg
add
cmc
xlat
push
jb
inc
and
cwtl
addr16
jns
push
imul
push
in
xor
fs
fistl
mov
jno
shlb
fsts
in
add
mov
fs
fcoms
and
ja
sbb
mov
ss
mov
popa
subb
js
lcall
dec
fisubrs
sbb
cmpsl
push
insb
adc
pop
mov
shl
dec
dec
movsb
insl
push
xchg
call
std
push
fisttpll
xchg
iret
mov
dec
mov
call
dec
insl
or
out
stc
xchg
leave
addr16
rclb
roll
jae
data16
xchg
mov
cmp
or
jns
hlt
or
ljmp
popa
adc
iret
pushf
push
push
dec
lds
xchg
push
xor
lods
sub
div
xlat
addr16
jecxz
rcrb
xchg
pop
lret
scas
fnstenv
inc
loop
insl
leave
loopne
outsl
rcrl
mov
es
lods
mov
fstps
inc
test
scas
add
dec
pop
imul
adc
pop
fcomps
test
cmp
adc
sbb
push
sub
inc
dec
xchg
data16
in
cmp
xchg
sub
mulb
lahf
clc
jmp
jo
push
movsl
les
xor
cmp
and
imul
movsb
push
push
xchg
cmp
scas
dec
out
arpl
pusha
dec
or
xor
cmp
add
sub
in
popa
push
xchg
aas
sub
xchg
inc
sub
divl
adc
ds
xor
cmp
lods
lds
pop
cltd
aaa
sub
ret
mov
jns,pt
cmp
bound
test
movsb
es
mov
xchg
xor
orb
pop
inc
fs
pop
xor
and
mov
int
push
in
loop
add
fucom
push
popa
pusha
cs
or
pop
and
fisubl
sbb
inc
pop
push
loope
ret
push
movsl
or
mov
popf
ljmp
mov
cwtl
lret
xchg
fistps
sbb
xor
sahf
mov
mov
cmovnp
mov
aas
je
imul
push
ds
mov
mov
shlb
sub
ja
inc
out
cmp
mov
cmp
outsl
lahf
or
in
jge
pusha
inc
add
push
movsb
xor
sbb
ffreep
dec
or
dec
xorb
loope
out
hlt
inc
aad
inc
and
addr16
enter
dec
divl
dec
or
add
out
push
sahf
fcmovb
inc
ss
xlat
aas
pop
stc
sbb
imul
xlat
cmp
fwait
xchg
insl
cmpl
mov
movb
leave
sub
xchg
imul
call
loope
mulb
lret
sub
xor
sbb
shll
mov
dec
xor
cwtl
call
mov
pop
sbb
dec
inc
scas
mov
dec
out
sub
push
dec
xchg
xlat
aaa
sbb
adc
mov
push
xor
addb
imul
mov
push
arpl
enter
jg
shrb
leave
and
jmp
adc
mov
pop
imul
pop
sub
test
jmp
insb
push
in
out
mov
mov
xlat
lods
pop
sahf
push
push
sahf
adc
daa
xor
enter
cmpsb
test
pop
push
add
ss
ljmp
lods
ret
push
fs
pop
xor
pop
out
sbb
out
dec
xchg
xchg
mov
cli
loop
add
call
cs
mov
mov
aam
jae
pop
arpl
xchg
push
add
into
sbb
adc
or
sub
pop
pop
xor
sbb
pop
add
divl
fnsave
pop
mov
repnz
sbb
sub
push
adc
testb
cwtl
and
xor
shl
in
movsb
cmp
add
dec
push
movsl
push
fwait
inc
dec
imul
into
and
push
push
fldlg2
rorl
mov
imul
addr16
push
data16
gs
loopne
sub
popa
call
out
pop
jns
sahf
fldt
sub
aas
cmp
incb
std
in
jmp
rol
test
int
inc
int
pusha
dec
or
in
push
and
push
vpunpcklwd
enter
lcall
js
in
out
and
lock
rcll
movsb
and
fdivrp
leave
fs
shll
push
push
lahf
movsl
call
and
repz
and
fisubs
cmp
adc
bound
cmpsl
dec
sbb
fldenv
and
cmp
fsubs
inc
cmpsl
mov
insl
xchg
mov
xchg
jnp
lret
outsl
dec
adc
cmc
dec
fnstenv
cmp
add
pop
pop
pop
movsb
inc
movsb
xchg
inc
push
flds
outsl
dec
sti
xchg
dec
push
xchg
iret
fldpi
nop
sti
push
dec
in
je
jp
jns
and
enter
aaa
mov
pop
pop
test
push
mov
je
fisubl
jbe
aas
clc
out
mov
lretw
xchg
push
lret
xor
xor
arpl
jo
cmp
cmpsb
mov
push
inc
sbb
push
mov
leave
or
sbb
cmp
push
pop
in
imul
xlat
fst
push
je
repz
mov
or
push
iret
xrelease
cmpsl
aam
aam
pop
xor
stos
xchg
inc
ds
aam
lock
std
pop
aam
pop
inc
movsb
cmp
fstpl
push
aam
shl
es
cld
inc
faddl
int3
adc
push
xchg
inc
sub
sbb
lock
rorb
pusha
mov
ss
ja
nop
comiss
ss
je
push
jns
js
pop
push
dec
out
fld
pop
pop
leave
in
dec
adc
xchg
xchg
jne
xchg
cltd
mov
std
pop
sub
pop
cmc
xchg
dec
mov
jae
dec
inc
xchg
das
adc
cmpsl
aam
mov
mov
push
je
mov
rorl
movsb
int3
sub
or
jp
or
je
and
jp
or
sbb
push
mov
mov
insb
scas
dec
jb
jg
jle
dec
mov
dec
pop
push
jo
adc
pushw
sub
lcall
daa
push
dec
cld
inc
test
cltd
inc
mov
xchg
push
jmp
jae
das
pop
popa
mov
xchg
arpl
push
xchg
adc
cmp
lret
fwait
ds
clc
push
loop
popa
or
fldl
cmc
fadds
fcoms
sbb
dec
or
popa
loopne
fldenv
popa
cmpsb
call
push
in
mov
xchg
pop
hlt
xchg
shlb
pop
cltd
fisttpll
mov
nop
stos
inc
jbe
mov
js
mov
ja
xor
dec
mov
mov
fstl
push
xor
lods
cld
enter
push
sahf
mov
xlat
aad
push
pmovmskb
cmc
jae
fimuls
loopne
aad
jb
bound
das
int3
push
inc
test
mov
sbb
xchg
enter
mov
push
fdivrl
dec
push
adc
or
movsl
pop
popa
bound
out
or
and
mov
cltd
cmp
cmovb
push
sub
outsb
icebp
sbb
push
loope
cmp
or
mov
notb
jae
or
cmp
mov
lods
fucomip
aaa
xchg
push
or
enter
fstpl
pop
cwtl
addr16
int
and
push
nop
mov
sbb
popf
cmp
mov
or
gs
das
mov
sub
movsb
or
and
rcl
xchg
adc
lock
in
les
lahf
lahf
cmp
pop
push
push
cli
push
push
jecxz
push
testb
negl
xor
pop
jns
or
movsl
repz
lea
dec
loope
test
xor
sahf
rcl
xchg
push
pop
sahf
lret
and
sbbb
xchg
dec
popa
cmpsb
cmp
xchg
mov
cmp
ljmp
ljmp
js
in
hlt
bound
pop
je
xor
sbb
sub
aam
or
scas
lret
inc
xchg
and
loop
in
bound
cmp
cmp
int
sub
jge
dec
imul
mov
fbld
and
es
jmp
lods
sub
pop
loopne
push
xchg
lods
ljmp
lods
aas
out
lock
xchg
sub
dec
fiadds
cmp
jae
jmp
dec
dec
enter
push
dec
dec
enter
mov
push
inc
cmpsb
or
cmp
push
xchg
mov
push
sbb
popf
mov
cmp
xchg
int
and
cs
in
jae
add
lret
or
push
fs
in
enter
pushaw
stc
xor
sbb
cs
inc
jmp
mov
dec
ds
ss
loope
dec
push
scas
mov
inc
sbb
rcrl
in
xor
in
movsl
push
popf
sbb
outsl
out
push
inc
mov
fimull
xorl
inc
into
mov
cmp
fldl
jns
add
negb
loop
push
lahf
sub
es
sub
push
int3
adc
cmp
sub
xlat
aam
push
ret
inc
andl
mov
sti
rclb
ror
das
loopne
addr16
xor
lods
fwait
sbb
addl
aaa
dec
add
or
mov
scas
test
pushf
fwait
movsl
or
into
pop
push
incl
cmp
clc
push
in
js
or
adc
in
xor
cmp
cmp
hlt
pop
mov
call
shll
inc
cmpsl
test
ljmp
pop
xor
push
out
pop
mov
ds
in
dec
repnz
mov
sbb
lret
imul
inc
jg
cmp
cltd
inc
pop
mov
outsb
xchg
int3
cmp
pop
mov
cbtw
ljmp
sub
pop
outsl
inc
jno
xchg
sbb
push
push
sahf
push
cmpsl
dec
adc
das
dec
orb
gs
push
nop
ret
push
mov
pop
inc
xor
shlb
push
test
and
inc
dec
loopne
mov
xor
push
hlt
in
loop
mov
sub
or
pop
in
inc
push
add
ja
adc
das
dec
lret
lcall
add
es
sub
lock
pop
pop
sub
push
add
cmp
int3
add
imul
adc
jg
and
push
sahf
xor
popa
cmp
out
cmp
xchg
mov
xlat
inc
outsb
and
dec
loop
or
or
xor
xchg
sub
inc
and
xchg
jnp
mov
dec
adc
dec
push
cmp
push
or
incl
or
jl
mov
nop
or
and
push
cli
es
lcall
cmpsl
cmp
pop
es
xchg
testl
jnp
stos
cmp
bound
das
add
push
and
gs
jnp
icebp
mov
mov
arpl
es
clc
inc
ljmp
xchg
pop
gs
push
mov
lds
xor
cmpsl
dec
pop
iret
mov
cmp
sbb
inc
lods
jae
add
or
test
mov
ljmp
sub
push
repz
cmp
cmp
sub
ss
lcall
and
push
stos
xchg
daa
test
sahf
sub
xchg
gs
sahf
mov
rsqrtps
sbb
stos
pop
inc
shlb
fwait
dec
fcoms
xchg
pop
mov
loope
enter
inc
aas
push
inc
xchg
fistl
aas
xchg
jnp
aad
or
jne
dec
enter
xor
xchg
dec
jo
icebp
mov
outsl
or
pop
cmp
xchg
xor
cmp
inc
ljmp
pop
pop
scas
jno
test
cli
adc
lahf
jge
push
inc
sbb
iret
imul
mov
js
loopne
xor
enter
test
bound
push
and
pop
sbb
inc
xor
fstpl
in
or
movsl
pop
cltd
stos
int
fsubr
mov
call
in
push
aam
bound
ljmp
ss
jae
push
mov
or
repz
jbe
jle
or
pop
sub
bound
fldenv
pop
not
xchg
xchg
loope
and
inc
gs
xchg
fsubs
cmp
pop
shr
or
xlat
adc
mov
adc
sahf
outsl
loop
jbe
test
cltd
mov
cmc
jmp
and
mov
xchg
call
xchg
adcb
lea
repz
or
cmpsl
jnp
leave
das
rol
jge
xchg
pop
dec
push
out
jmp
jne
bound
add
or
pop
bound
push
push
fldlg2
roll
push
cltd
cltd
xor
add
xchg
ret
ds
xchg
mov
lea
js
xchg
fdivl
fldenv
jle
sub
rcrb
sub
jg
fmuls
ljmp
out
cmpsb
stc
pop
sub
push
dec
cltd
dec
mov
cltd
mov
lret
mov
data16
or
add
jmp
xchg
movsl
jno
notb
les
addr16
xor
xchg
pop
in
jbe
xor
inc
rcrl
nop
out
daa
lods
inc
test
cmpsl
outsl
mov
dec
xchg
cmp
std
movb
test
scas
jb
pop
pusha
pop
or
pop
bound
mov
repnz
in
adc
fidivl
xchg
and
pop
adc
jmp
dec
push
xor
out
sbb
aam
and
and
lret
ljmp
cs
aam
cmp
outsl
es
in
out
icebp
cmp
das
iret
in
xor
mov
test
out
lods
push
xlat
inc
sub
sahf
push
gs
gs
dec
or
cmp
movsb
or
or
mov
in
test
push
sub
sarl
add
icebp
push
outsb
mov
jno
add
pop
dec
sarb
ljmp
jmp
or
stos
inc
std
outsl
cltd
and
aaa
repz
iret
mov
mov
sahf
das
xor
lds
das
mov
test
xchg
push
cmp
and
out
aaa
inc
scas
inc
jge
aam
mov
xor
negb
xchg
out
arpl
push
fwait
xor
jbe
cmp
dec
push
sti
daa
rcrl
or
rcll
int3
inc
inc
xchg
lahf
imul
cmp
aad
mov
sub
pop
pop
lea
in
jecxz
rcrb
adc
xchg
cmp
subb
out
call
mov
mov
jl
lods
sbb
xor
scas
mov
repnz
lods
mulb
and
xchg
mulb
or
mov
int
clc
pop
push
xor
clc
inc
pop
push
sbb
fmulp
rcrl
or
mov
adc
cmp
daa
push
cmp
fstps
fs
sbb
lcall
dec
imul
fsts
dec
mov
sub
mov
cltd
mov
aam
ret
lods
aam
fs
pop
movsl
popf
aad
outsb
jecxz
mov
jnp
mov
movsb
mov
and
add
fcoml
orb
dec
add
mov
mov
out
lret
push
testl
fdivrs
ret
jecxz
loop
gs
fbld
mov
in
or
into
mov
loop
jns
imul
adc
lea
xchg
pop
xor
inc
dec
ljmp
test
xchg
ret
lods
test
in
arpl
testl
or
jbe
sbb
cmp
push
jl
lods
insb
lret
aad
jmp
pop
addl
cmpsb
movb
pop
dec
test
cmp
pop
enter
mov
pop
call
ficomps
mov
outsl
push
data16
int
xchg
lock
mov
inc
mov
add
push
jp
mov
mov
dec
push
cmpl
loope
pop
inc
test
dec
stos
inc
jle
pop
push
push
and
push
bound
mov
mov
sub
mov
les
fildl
pop
movsl
push
and
repnz
pop
dec
bound
leave
jmp
je
adc
out
push
mov
addr16
add
mov
xor
fldl
cs
outsl
sub
xchg
adc
mov
cmp
push
mov
and
imul
mov
mov
mov
inc
ljmp
cmp
pop
js
aam
push
pop
js
adc
cs
jl
push
sub
or
js
adc
inc
or
xor
lahf
xchg
xchg
mov
stc
outsl
sbb
pop
negl
jb
xlat
mov
dec
imul
mov
loop
push
das
or
xchg
pop
pop
pop
mov
shrb
cs
xor
add
mov
or
xchg
subl
lock
out
aas
test
pop
mov
mov
into
fdivrs
insb
push
gs
pop
in
lods
and
movsl
or
cmpsl
dec
sbb
mov
hlt
loop
push
sub
outsb
dec
je
sub
pop
mov
filds
iret
xorl
push
or
lahf
iret
pop
jae
jns
popfw
clc
insb
cmpsl
or
les
mov
fldcw
mov
cltd
fistpl
cs
push
jp
js
mov
out
addr16
pop
dec
lret
shll
in
sbb
add
mov
js
ljmp
mov
pop
and
in
sub
sti
in
insb
add
push
push
lods
mov
jne
inc
ss
leave
in
add
inc
sub
sub
or
mov
add
sarl
or
dec
inc
mov
dec
dec
mov
rcr
das
jnp
pop
dec
mov
dec
dec
daa
add
pop
push
ja
dec
dec
sbb
push
call
push
mov
jmp
jne
adc
in
in
loop
aad
push
sti
inc
sub
shll
inc
xor
test
pop
in
xor
sub
jg
subb
mov
sub
iret
add
fidivrl
xor
sti
das
pop
push
lahf
mov
sub
push
add
pop
popf
or
shlb
lret
call
mov
popa
push
pusha
lcall
ljmp
shll
inc
mov
push
pusha
cmp
fistpll
adc
jbe
sub
cwtl
pop
cs
sub
loopne
cli
dec
mov
lret
ds
sub
dec
pop
push
lret
adc
sahf
roll
xchg
arpl
clc
cmp
mov
mov
ret
shrb
dec
data16
outsb
sub
pop
sbb
outsb
sub
push
and
jecxz
sub
pop
mov
loop
ja
inc
scas
adc
push
jp
pop
cli
bound
cmp
lret
push
and
sbb
pusha
sar
jg
daa
fwait
add
mov
sub
scas
fsubrs
ret
adc
xchg
fbstp
pop
or
pop
fisubl
pop
push
test
and
out
xor
pop
jl
pop
mov
repnz
dec
bound
frstor
xchg
mov
lds
cltd
mov
xchg
in
xchg
add
push
jb
xchg
dec
mov
mov
sbb
jmp
or
xor
jmp
fucomi
scas
cltd
bound
cltd
dec
mov
shlb
and
pop
dec
in
hlt
pop
cmpsl
loope
fcomps
push
cmp
xchg
mov
push
imul
inc
dec
fcmovb
out
mov
loope
or
sbb
push
subl
ja
fcom
push
insb
pop
sbb
fwait
push
or
aam
dec
sbb
ret
adc
fcomi
std
filds
jl
jl
aaa
adc
mov
aas
enter
fs
jno
mov
mov
and
inc
addl
xor
sub
jl
mov
hlt
aad
pop
movsb
xchg
xchg
in
in
mov
and
out
xor
out
xor
loope
cmp
xor
leave
jno
fstps
sub
push
cmp
push
in
ret
mov
out
sbb
test
cmpsl
jle
mov
dec
imul
jecxz
mov
bound
cmp
outsl
in
pop
fsubs
dec
push
cmp
jmp
aad
out
cmpsl
adc
xchg
and
push
add
pusha
and
push
push
pop
and
mov
out
iret
pushf
xor
decl
cs
data16
or
test
adcl
lahf
mov
jmp
ds
fsts
leave
jg
xlat
dec
bound
pop
lret
es
pop
xchg
mov
xor
mov
pop
mov
mov
fists
fisubs
fldcw
xor
mov
ss
std
daa
divb
push
mov
sub
add
shlb
sbb
push
cld
sub
fildl
mov
jle
movsl
pop
repnz
data16
xor
jno
out
pop
stos
push
jge
loopne
imul
mov
movsl
xchg
mov
aad
add
push
sbb
test
stos
shll
jae
leave
or
sahf
inc
loopne
push
add
mov
jecxz
jmp
pop
outsl
daa
push
cmpsb
inc
and
pop
mov
xchg
push
dec
les
pusha
lds
out
dec
pop
ljmp
pop
lcall
cmp
out
cli
test
sub
ljmp
cmp
imul
xlat
cmp
jp
adc
mov
sbb
push
push
movsl
ljmp
ds
push
imul
fcoms
popa
aam
rcr
mov
push
rsqrtps
out
dec
aam
dec
test
or
aad
clc
mov
in
and
aaa
push
dec
xchg
mov
cs
scas
pusha
lods
pop
rcrl
dec
jp
enter
and
or
and
mov
mov
inc
jl
sub
loope
pop
out
push
imul
cwtl
pop
enter
clc
add
ficoms
push
jae
outsb
push
pop
xor
sbb
inc
popf
push
xlat
sub
pushf
fisttps
dec
push
dec
imul
fsts
ja
push
xchg
sahf
negb
push
nop
lahf
xchg
ret
push
add
push
lods
rorb
xchg
fsub
push
push
iret
imul
daa
mov
mov
int
icebp
adc
in
aad
xor
hlt
and
sub
int
sbb
lcall
fstl
push
cmp
push
mov
je
pop
push
ror
add
pop
jle
pop
insw
sbb
cmpsl
int
lret
shlb
ss
xchg
push
sub
pop
push
xor
or
int
ss
cld
lret
stc
rorl
inc
jle
jmp
leave
push
lcall
and
inc
xor
inc
mov
enter
inc
and
inc
ss
ret
in
test
pop
ficoml
call
loope
cmpsl
xor
mov
fs
test
pop
cmp
cmp
mov
push
data16
dec
xorb
icebp
sub
into
or
into
push
sahf
mov
jae
mov
or
aas
xchg
add
jmp
lods
ds
fnstcw
fdivrs
iret
push
lods
inc
cltd
inc
flds
xchg
sub
sub
sarl
add
mov
inc
aas
sub
mov
xor
mov
or
fiaddl
cltd
arpl
lock
lcall
cmp
xchg
movsb
push
pop
out
ss
jne
stos
fnsave
cmp
cmc
or
pop
inc
inc
pop
cwtl
pop
lret
shll
andl
or
or
dec
ja
xchg
adc
mov
push
cmpsl
test
push
cmp
mov
push
dec
pop
push
in
xor
imul
mov
lds
movsl
gs
xchg
movsl
dec
sub
xor
mov
aad
and
gs
shll
cmpsl
test
add
lods
es
in
mov
jl
out
imul
mov
pop
bound
adc
push
adc
jns
mov
adcl
mov
add
cmpsb
dec
ds
inc
fnsave
xchg
add
mov
push
scas
imul
pop
push
aad
dec
pop
in
mov
jne
lods
addr16
fstpt
pop
out
jg
jle
fbld
rorb
fwait
adc
or
adc
imul
ffreep
rolb
cmpl
push
and
xor
pop
dec
pop
jge
dec
cltd
inc
mov
bound
sub
aam
mov
dec
inc
mov
jae
dec
cmp
push
addr16
push
cwtl
dec
jge
push
adc
push
sub
cmp
fcomp
inc
fcmovu
dec
mov
mov
ljmp
lods
nop
jo
adc
scas
in
testb
mov
or
push
xor
js
cmp
inc
mov
mov
dec
loope
arpl
dec
and
jae
fisubs
jae
pusha
or
xchg
dec
imul
push
or
inc
cmp
mov
bound
pop
mov
pop
dec
cmc
data16
test
pop
stos
jo
paddsw
ds
fucomp
pop
in
cmp
cltd
adc
aad
out
sbb
inc
imul
flds
fimuls
outsb
ficomps
pop
sub
inc
out
into
ss
cmp
xor
sub
addr16
imul
xchg
out
inc
cwtl
mov
movsb
xor
dec
mov
mov
cltd
movsb
es
cmp
lret
rolb
in
fldenv
sbb
inc
mov
andb
mov
repnz
inc
movsl
and
ss
sbb
dec
mov
xchg
mov
je
out
mov
ficomps
mov
cmpsl
ficoml
xchg
mov
mov
cmc
movsl
sbbb
gs
dec
pop
mov
daa
arpl
jae
aas
xchg
dec
test
inc
pop
or
pop
adc
arpl
cld
push
ss
pop
movsl
icebp
cmp
and
adc
leave
loope
bound
and
jne
sub
cwtl
pop
out
movsb
imul
mov
pop
scas
fldl
pop
repz
outsb
ljmpw
and
sub
cmp
dec
pop
int
imul
dec
test
push
mov
jp
xor
mov
adc
pop
or
cs
sahf
mov
bound
xchg
push
mov
mov
addr16
xchg
cmp
test
mov
lea
sahf
mov
pop
inc
or
int3
dec
sub
movsb
mov
pop
out
xchg
icebp
ss
xor
pop
test
pusha
inc
test
mov
jne
pop
dec
ss
sahf
aas
push
mov
andb
cmp
pop
sub
ljmp
xor
pop
push
subb
mov
xchg
lds
fs
jbe
mov
imul
xchg
imul
fdiv
cltd
mov
fnstsw
mov
roll
xor
bound
sub
mov
leave
jecxz
pop
xchg
in
std
and
stc
cwtl
call
xor
adc
push
pop
jle
and
mov
in
add
sub
incb
cmp
jno
mov
inc
pop
fldcw
repz
cmp
and
cmp
mov
xchg
mov
les
popl
enter
pop
pop
push
imul
lcall
and
push
adc
loop
in
mov
mov
sub
push
and
jl,pn
cmp
pushf
dec
inc
pop
adc
or
sub
add
call
pop
data16
arpl
push
in
jle
xor
lahf
imul
shrb
dec
xchg
sbb
push
xchg
dec
and
mov
mov
push
negl
cmc
fisubl
jle
shrl
imul
xchg
dec
sbb
in
pop
frstor
arpl
dec
lahf
lcall
sbb
divl
pop
pushf
inc
ss
int
and
push
test
mov
dec
cmpsl
mov
mov
cmpsl
gs
push
ss
fisubs
ja
arpl
mov
fbstp
bound
cmp
fisubl
pop
push
cltd
jecxz
mov
imul
add
aaa
shl
push
fisubs
insb
lahf
inc
push
in
jnp
pop
ficoml
jmp
push
es
cmp
outsl
daa
inc
fisubrl
pushf
add
sbb
faddl
dec
push
mov
enter
mov
decb
popf
fwait
cmp
mov
or
fisttpl
sub
rcrb
xor
bound
test
cmp
lret
popf
sarl
shrb
xor
fcoms
fs
jecxz
fs
jbe
cmp
and
push
cmp
testb
adc
push
jmp
xchg
jno
cmp
scas
aam
and
or
cmp
pusha
fisubs
inc
fadds
in
jmp
out
in
cmpsb
es
test
test
lret
aam
mov
shl
push
sub
test
insl
and
inc
in
stos
aad
roll
dec
pop
iret
cmp
pop
iret
das
jg
xchg
xchg
or
lods
or
stos
adc
and
arpl
or
push
adc
pop
push
je
arpl
add
mov
in
pop
test
mov
pop
adc
popf
xchg
pop
push
rcrl
push
mov
mov
loope
dec
ljmp
jae
sahf
ljmp
setp
fwait
xor
push
cmpsb
mov
das
dec
xchg
cltd
shlb
inc
pop
in
ret
bnd
and
outsl
cmpsl
fs
lods
andl
jp
fwait
repz
xor
imull
lds
fmul
in
fildll
lock
lret
leave
adc
or
iret
dec
add
dec
iret
push
mov
fucomip
add
frstor
inc
push
or
and
xchg
jne
cmpsw
ss
dec
xchg
adc
or
or
fidivl
cmp
loope
adc
movsl
leave
xchg
in
cmc
lret
jo
shr
pop
dec
popa
and
dec
sub
inc
pushl
movsb
xchg
jl
xchg
jecxz
mov
cwtl
sub
loope
fbstp
inc
stc
or
sbb
mov
and
adc
cmp
or
jns
loope
jl
sbb
cmp
lock
call
enter
mov
inc
adc
and
pop
cmp
shl
xor
cmp
sbb
test
lock
dec
push
or
cmc
call
add
mov
popa
fbld
lock
test
jno
imul
inc
add
aas
pop
and
testl
pop
sub
push
jecxz
cmpsl
push
pop
or
push
outsl
and
lret
sahf
imul
aam
sub
push
xchg
sbb
lods
imul
rolb
push
les
lcall
push
sbb
sub
sbb
sbb
rclb
xchg
ret
add
jbe
lcall
in
aam
mov
cli
insb
sbb
push
adc
inc
ficomps
test
inc
dec
mov
pop
ja
pop
sti
pop
mov
loopne
add
or
icebp
xchg
out
sub
adc
mov
mov
mov
ret
and
xchg
dec
xchg
pop
adc
inc
out
xor
and
inc
rcrl
push
repz
pop
xlat
imul
jnp
les
sub
xchg
xor
add
inc
dec
and
xor
es
div
das
and
es
es
fwait
mov
mov
lock
sbb
inc
push
push
adc
push
loope
sub
nop
test
cmc
pop
xor
sbb
mov
sbb
out
push
iret
inc
fildl
cmc
cmp
fwait
testl
push
mov
xchg
add
test
out
movsl
ljmp
add
mov
cltd
push
xor
mov
aad
loop
pop
shl
xchg
mov
xor
cld
sti
sub
pop
pop
add
mov
mov
cmp
addr16
sub
or
shlb
or
push
push
lahf
cli
adc
fs
aad
mov
mov
fldl
adc
pushf
mov
inc
cli
popa
mov
das
arpl
in
out
test
test
lock
cld
pop
pop
fcomp
loopne
push
lock
call
mov
pop
pop
jbe
sub
ret
dec
out
pop
pop
inc
rcll
aaa
dec
push
bound
fs
mov
mulb
fldcw
sbb
leave
das
dec
dec
push
add
cmp
cmp
mov
jns
cmpsb
and
jnp
lcall
and
xor
fwait
adc
inc
inc
dec
sarb
push
inc
mov
cli
or
loope
decl
xlat
dec
inc
in
xor
push
sti
dec
pop
flds
xor
outsl
sbb
push
clc
pop
or
and
push
test
jns
loopne
push
or
fdivs
pop
add
mov
xor
les
cmpsl
xchg
andb
xchg
into
xchg
sbb
sarl
sbb
sahf
test
dec
dec
push
lcall
jmp
mov
cmc
cmp
dec
and
es
icebp
xor
or
fs
jb
movsb
cmp
stos
seta
pop
inc
and
cmpsb
mov
pop
cmpsl
mov
push
xor
scas
mov
ficompl
cmpsl
pop
aam
pop
scas
daa
xor
push
dec
arpl
pop
xchg
dec
and
aam
in
jp
movsl
cltd
mov
sub
aad
or
inc
notl
sub
out
int
dec
pop
fmuls
push
cmpsl
and
cmp
lock
lea
insl
pop
xor
in
inc
adcb
lock
push
lds
sbb
decb
jmp
adc
es
cli
outsb
in
lahf
sub
dec
pushf
divl
add
jb
insl
inc
ljmp
fimuls
push
sub
add
aas
int3
xchg
pop
xchg
and
pop
push
lret
pop
pop
rcll
lahf
mov
sub
inc
jbe
xchg
int
pop
dec
rolb
inc
push
dec
xlat
lahf
inc
xchg
loopne
sti
push
cwtl
mov
test
mov
cmpsl
mov
sub
xchg
cld
sahf
xchg
push
lahf
frndint
sub
pop
add
dec
push
test
das
inc
cli
jmp
push
aaa
pop
fldenv
mov
dec
inc
and
sub
out
data16
or
ljmp
cld
fldcw
jge
popa
std
xchg
pop
xor
inc
popa
pop
test
lds
imul
inc
pop
into
mov
movsb
xor
dec
pop
push
or
gs
lods
repnz
cmp
call
adc
dec
int
push
loope
pop
add
mov
rcrl
cwtl
in
ja
outsb
pop
push
mov
dec
outsl
add
fidivrs
das
mov
push
pop
pop
in
ds
scas
push
xor
les
inc
or
push
shll
ss
mov
and
xlat
adc
pop
mov
dec
xor
push
jo
mov
vxorps
pop
inc
daa
mov
movsl
mov
push
pop
bound
or
test
xor
cwtl
clc
mov
mov
call
stc
ja
push
in
sub
dec
shrl
pop
sub
push
popf
es
or
movsb
gs
mov
hlt
fsubrs
xchg
adc
data16
sbb
sbb
dec
out
xor
mov
inc
daa
push
popa
mov
in
pop
movsl
pusha
add
inc
pop
stos
pusha
std
lret
and
fsubrs
stos
and
jns
mov
filds
push
sub
xchg
sbb
mov
pop
jle
xor
pop
add
mov
jnp
fwait
jmp
mov
orb
pop
data16
int3
pushf
shll
dec
and
test
jae
xchg
push
dec
cltd
pop
xchg
dec
or
xor
enter
mov
cmp
arpl
loope
aaa
movsl
xor
in
mov
enter
pop
xor
pop
bound
push
sub
gs
in
fldcw
in
das
int
adc
aam
flds
loope
mov
data16
sbb
mov
inc
loopne
aas
ret
pop
int3
mov
and
aaa
frstor
lods
loope
movsl
add
insb
ds
test
repz
je
dec
dec
pusha
xor
shrb
in
imul
popa
or
sbb
in
pusha
iret
cmp
ss
jnp
cmp
mov
xchg
dec
sub
inc
or
fcoms
xor
add
inc
dec
cmp
pop
adc
dec
mov
inc
leave
cmc
push
pop
out
ljmp
xor
inc
loope
pushf
es
arpl
mov
sarl
pop
dec
jnp
jo
mov
out
inc
repz
in
repz
add
outsl
pushf
xchg
aam
add
in
loopne
cwtl
jp
cmp
add
inc
in
cmp
push
jbe
cmpsl
jecxz
ljmp
ljmp
adc
sbb
inc
aas
and
inc
repnz
ljmp
xor
fmull
cmovne
dec
xchg
push
dec
xchg
jle
bound
dec
dec
cmp
es
mov
sbb
xor
push
xor
cltd
xor
jbe
std
push
lock
sub
repnz
jmp
and
ljmp
ljmp
enter
loope
pop
popa
adc
sub
cmp
arpl
mov
ret
lahf
rolb
in
lods
sbb
push
inc
xchg
pop
mull
aam
stc
aam
mov
push
rcll
push
xor
fidivs
ds
cwtl
xor
cmp
push
ss
and
es
imul
xchg
push
shr
mov
jne
mov
pop
push
pop
ss
mov
rclb
sahf
cs
movsl
fisubrl
adcb
push
in
jns
out
pop
mov
daa
cwtl
add
pop
cmp
dec
cmp
inc
mov
or
and
jbe,pn
cwtl
pop
popf
gs
pop
jl
xchg
cmp
sti
pop
inc
lcall
sub
and
and
arpl
adc
arpl
push
imul
stc
pop
jg
ret
stc
fimuls
imul
in
push
in
cmc
fwait
cltd
push
jns
adc
push
outsl
jno
cmp
leave
sbb
mov
out
lcall
dec
lcall
cmp
and
not
shll
jmp
cwtl
add
arpl
fsubs
mov
jge
sahf
lock
add
sub
repnz
sarl
mov
in
xchg
cs
and
out
jp
fdivrs
dec
add
mov
fcoms
lods
pop
sub
aas
fidivl
arpl
sbb
pop
cmpsb
xchg
pop
inc
out
in
addr16
push
inc
push
dec
js
pop
push
mov
aas
cmpsl
and
push
es
and
adc
push
dec
xchg
fnstcw
lcallw
cmpsb
es
cld
pop
sbb
or
gs
pop
fsubr
pusha
cmpsl
mulb
pusha
in
pop
pop
inc
xor
mov
gs
bound
push
push
dec
push
or
enter
stos
inc
mov
mov
or
adc
jle
jg
inc
sub
push
adc
sub
pop
pop
add
les
xor
loopne
or
jle
cmp
xchg
movsl
xor
push
push
xlat
cmp
dec
cltd
jb
aad
sub
or
hlt
pushf
cld
xchg
stos
int
pop
fwait
xor
imulb
and
mov
lods
enter
leave
mov
cld
ds
adc
imul
sub
daa
mull
lahf
xchg
add
subl
aad
imul
fwait
in
dec
cmp
cmp
pop
and
sti
and
sub
dec
lahf
sbb
daa
dec
dec
les
addr16
cld
loope
cmp
dec
and
dec
dec
xchg
fsub
outsb
daa
mov
stc
rcr
or
iret
ljmp
scas
cmpsb
subb
frstor
push
outsl
out
test
add
pop
adc
les
mov
imul
loopne
lock
sub
addr16
clc
adc
icebp
inc
cmp
leave
cmpsb
mov
jb
inc
dec
fsubrs
rcrb
or
rclb
pop
mov
mov
push
xchg
scas
mov
arpl
push
mov
pop
jp
mov
test
push
mov
lock
xchg
sub
jmp
adcb
mov
or
push
push
push
lahf
stc
mov
fmull
fwait
ja
out
ss
fs
in
push
xchg
push
sbb
pop
leave
xor
in
dec
in
loop
mov
or
cmp
sub
adc
addr16
push
xchg
aad
std
adc
inc
jno
movl
aam
out
aad
stos
sti
inc
in
cmp
inc
clc
and
mov
push
es
inc
das
lods
fistpl
xchg
sbb
sub
fsubl
dec
mov
or
dec
insb
jecxz
les
adc
pop
sbb
jnp
pop
leave
pop
jp
mov
stc
push
adc
push
sbb
sahf
aam
sbb
fsubl
lds
mov
pop
fmul
fs
dec
jp
sub
or
loop
mov
in
lret
das
fisubs
and
sbb
imul
lcall
clc
fnsave
ja
xchg
mov
imul
sahf
shrl
inc
icebp
shr
aas
mov
fsubr
jl
out
dec
inc
in
xor
cmpl
xor
or
dec
jp
mov
push
inc
shlb
push
pop
mov
cmpsb
stos
loope
mov
outsb
and
fbstp
cmpsl
aas
jb
dec
dec
adc
fdivrl
inc
hlt
fnstenv
xor
adc
or
and
jmp
ficompl
push
pop
loope
stc
pop
push
xor
sub
repnz
pop
jnp
push
and
mov
push
mov
fsts
push
pop
mov
push
mull
sbb
add
push
jle
cmp
enter
pop
and
es
int
dec
stos
dec
mov
fldcw
mov
mov
mov
andb
jo
imul
jmp
sub
dec
pop
mov
jmp
repz
sarb
or
das
sbb
mov
dec
xchg
flds
add
iret
inc
icebp
outsl
pop
xor
xchg
subb
test
enter
in
adc
and
stos
pop
cmc
fistps
outsb
mov
test
xor
mov
sub
fsubs
cwtl
fstpl
pop
ret
data16
loope
pop
mov
pop
xlat
and
xchg
and
pushf
cmpsl
xchg
cs
pusha
pop
inc
pop
imul
pop
cmp
jno
enter
mov
mulb
inc
dec
dec
arpl
pop
std
push
or
mov
adc
and
adc
xor
pop
mov
negb
movsb
dec
jge
mov
aad
push
mov
mov
xor
pop
sarb
or
pop
das
es
outsl
inc
repz
ret
sub
xor
dec
and
push
xor
flds
mov
aam
in
xchg
push
inc
add
push
lret
test
cs
pop
inc
loop
cwtl
arpl
cmp
pop
test
dec
dec
ds
es
repnz
data16
dec
dec
jae
xchg
mov
in
stos
out
in
jmp
xchg
push
inc
aaa
sbb
test
and
adc
movsl
aam
mov
xor
mov
mov
xchg
shll
mov
or
xor
sub
mov
inc
pop
cmp
xor
shlb
xchg
jne
fistl
pop
pusha
xorb
sbb
mov
movsb
imul
or
push
jge
sub
xor
test
daa
test
out
sbb
dec
fsts
sub
xchg
popa
cld
mov
sub
mov
dec
add
fsubrs
jns
cmp
ss
sbb
cmp
cltd
xlat
cmp
mov
cmp
jl
adc
xchg
dec
xlat
jb
or
scas
xor
in
dec
stos
aas
xor
idivb
pop
pop
push
enter
mov
mov
and
cs
cmc
movsl
pop
mov
xchg
dec
mov
fwait
sub
pop
orl
fs
pop
mov
rol
push
xchg
cmc
xchg
jno
xor
lock
push
aaa
adcl
mov
fwait
jle
xlat
mov
sub
lock
icebp
push
dec
inc
enter
push
addb
adc
and
pusha
jns
cmp
push
cmp
push
imul
icebp
cmp
cmp
inc
sarl
sub
idivb
push
fnstcw
pop
sbb
in
iret
aas
dec
pop
stos
fwait
pop
mov
dec
inc
repnz
mov
scas
xor
ljmp
push
aad
icebp
inc
and
sbb
jae
and
sbb
lock
insb
dec
loopne
push
pop
enter
add
cmp
pop
mov
push
mov
data16
pop
inc
ds
pop
xchg
jl
sub
adc
push
sub
or
pop
rol
push
jns
mov
in
push
lea
mov
dec
fincstp
and
xor
jno
inc
sub
inc
pop
xlat
aam
mov
cwtl
fstps
or
cmp
dec
pop
mov
jne
and
loope
shr
jae
arpl
cmp
addl
fwait
movsl
insl
dec
scas
cltd
xchg
jl
xchg
in
mov
push
ljmp
nop
mov
adc
popf
jae
xor
test
pop
adc
test
fwait
jb
outsl
imul
pop
xchg
ljmp
out
jnp
fistpl
mov
fwait
ret
dec
daa
inc
push
outsb
rolb
pusha
mov
stc
or
es
mov
ds
pop
sahf
xor
sbb
in
stos
push
fisubrs
shrl
clc
cmc
push
adc
popa
xchg
movsb
std
loope
aad
in
dec
std
sub
cwtl
fwait
imul
iret
fs
out
inc
jge
mov
cmc
and
xchg
rorl
shl
cld
xlat
mov
mov
cli
push
sbb
mov
mov
push
adc
push
jmp
movsb
mov
mov
outsl
dec
scas
ss
aad
push
loopne
dec
scas
pop
sbb
pop
sub
pop
fdivrp
into
cmp
pushf
pop
fwait
mov
xchg
adc
xchg
push
and
aad
cmp
dec
sti
xchg
xor
movsl
jl
mov
jl
pusha
iret
push
ja
dec
bndstx
inc
xor
dec
and
xchg
leave
out
pop
mov
sub
add
inc
cmpsb
cmp
outsb
lret
cmp
outsb
mov
lret
into
es
sub
jo
xor
dec
fldl
loop
xchg
xor
ror
dec
imul
out
xchg
pop
rorb
mov
lock
dec
lds
add
ja
cmpsb
xchg
jnp
cmp
and
or
pusha
idivl
xchg
in
and
dec
aad
push
dec
lret
cmp
rol
and
clc
mov
push
sbbl
dec
pop
mov
js
pop
cmpsb
lock
sbb
pop
mov
mov
push
loope
es
movsb
add
sub
dec
pop
fimuls
dec
int
es
push
fs
flds
inc
inc
cmp
inc
pop
insb
inc
inc
dec
inc
pop
aas
fnstsw
push
cmp
movsl
mov
cmp
cmpl
cmp
cmp
testb
mov
sbb
loope
ss
sub
xor
and
push
xor
in
ljmp
lret
cmp
mov
lods
fs
imul
lahf
mov
cmp
leave
popf
jbe
cld
add
fcomps
mov
add
fistps
cli
mov
ss
or
mov
adc
out
cmp
out
dec
gs
push
dec
and
in
xchg
push
mov
ds
pop
pushf
ret
pop
xchg
pop
mov
ljmp
fisttps
popa
cli
push
xor
scas
push
cld
and
inc
leave
lock
shrl
shlb
addr16
cmp
imul
mov
gs
stos
and
mov
xchg
or
xchg
arpl
sbb
push
ret
data16
fldenv
fs
push
sbb
sbb
es
sub
leave
xchg
adcl
mov
cs
xchg
stos
jmp
dec
arpl
mov
cmpsl
sahf
cltd
push
jne
push
test
adc
mov
insl
jmp
enter
frstor
and
aaa
lods
sub
pop
into
sbb
adc
push
pop
sti
push
add
das
jl
in
lods
jnp
pop
xor
or
push
mov
pop
imull
clc
out
jmp
shll
adc
cmp
inc
pop
imul
insb
hlt
fucomp
inc
scas
rcl
push
dec
xor
mov
dec
xor
dec
fldcw
push
xor
push
data16
sbb
jge
outsb
mov
pop
pop
call
mov
sbb
jns
jnp
mov
gs
enter
mov
popa
push
xchg
cwtl
arpl
addr16
sbb
clc
add
push
push
insl
cltd
pop
mov
imul
sbb
imul
adcl
mov
andb
or
fucomip
or
add
orb
sub
loope
pop
ljmp
fcompl
xchg
ds
lock
jae
mov
sub
lret
ret
mov
aaa
xchg
xor
shlb
daa
adc
cmp
and
outsl
repz
fnsave
pop
sub
mov
push
pop
mov
sub
jbe
or
push
bound
mov
aam
popa
xchg
pop
out
aam
inc
jno
aad
clc
leave
movsb
inc
int
jns
fwait
outsl
aad
out
popa
invd
mov
pop
roll
dec
inc
sar
xor
mov
clc
stos
adc
dec
pop
push
sub
bound
scas
jge
push
or
push
push
ds
and
xor
test
stos
sub
iret
push
xchg
fs
cwtl
jns
jb
pop
leave
enter
lret
jbe
arpl
movsb
push
xchg
pop
xchg
in
pop
jns
enter
arpl
fidivrl
sub
dec
cmp
xchg
push
mov
or
mov
or
push
cmp
mov
cs
shl
leave
pop
test
scas
mov
lds
stos
lahf
dec
dec
xor
sahf
adc
jbe
enter
push
lahf
jnp
bound
jae
xor
mov
aas
mov
scas
xchg
mov
push
stos
test
inc
inc
and
shlb
pop
sbb
fsts
mov
mov
push
mov
sub
add
xor
add
dec
pop
je
subl
or
data16
dec
ljmp
pop
jmp
xor
dec
sarb
add
inc
daa
jle
pushw
inc
adc
pop
mov
mov
sub
cld
pusha
sub
jno
mov
fnstenv
loope
push
cmpsb
fwait
js
jnp
pop
ret
sarl
loopne
fisubrs
out
dec
bound
movsb
dec
popa
cmpsl
mov
cmp
in
test
test
xor
daa
pop
adc
sbb
add
lahf
mov
decb
dec
cmp
push
xor
test
inc
pop
into
aam
outsb
xchg
cld
mov
adcb
arpl
push
adc
aaa
sbb
add
cmp
jb
loop
jno
push
in
pushaw
sbb
mov
or
xor
and
pop
iret
mov
arpl
insb
xor
pop
pop
mov
int3
insb
lahf
lods
mov
pusha
popa
add
in
imul
fs
lret
lods
fdiv
xchg
stos
test
daa
inc
mov
lcall
stc
fsubrs
fs
gs
mov
repz
test
jmp
cmpsb
data16
sub
pop
xchg
std
inc
shlb
inc
xchg
cmp
mov
push
push
add
pop
pop
dec
aam
mov
xor
fldcw
cmp
push
and
adc
xor
outsb
repz
mov
jp
or
pop
gs
push
xchg
scas
add
or
cmpsb
sub
in
push
cmp
in
mov
std
sub
and
outsl
rcll
cmp
les
je
pusha
adc
shll
push
leave
insl
pop
cmp
sub
xor
loope
gs
push
test
lret
xor
mov
mov
sub
mov
into
push
cwtl
adc
push
and
stos
inc
jecxz
inc
mov
dec
out
add
xor
jns
das
inc
inc
dec
je
sbb
push
imul
jns
or
pop
cmp
addr16
int
fsub
rolb
push
mov
pop
aaa
jb
xchg
pusha
jmp
lea
xchg
push
out
cwtl
aad
bound
fisttpll
push
xchg
push
fsubs
sub
jg
cmpsl
mov
sbb
jbe
xchg
cmp
or
cs
cmp
xchg
les
jmp
dec
push
mov
inc
jnp
adc
sahf
shll
push
or
daa
icebp
or
es
insb
cmp
xor
dec
jge
and
and
nop
and
dec
mov
scas
push
or
cmc
add
cmpsl
aam
xor
cmp
dec
push
jp
stc
pushf
cmpl
fldt
pop
daa
addr16
jbe
out
jg
adc
and
jmp
xchg
pop
and
cmp
and
data16
aaa
pop
sbb
mov
cmp
xchg
loope
mov
xor
dec
sbb
lock
jo
leave
mov
push
out
in
andl
arpl
and
and
push
and
js
pop
xchg
insb
lock
aad
pop
loope
pop
or
pop
xlat
pop
loopne
pop
pop
in
dec
and
push
push
loope
es
movsb
add
push
popa
out
pop
and
push
push
push
ljmp
dec
dec
dec
dec
sti
popa
dec
adc
dec
loope
enter
inc
dec
flds
inc
dec
sbb
test
push
mov
stos
in
cmp
cmp
aad
es
inc
xchg
loope
scas
inc
add
inc
pop
adc
add
fnstcw
cmp
data16
pop
shll
dec
fnstenv
mov
and
das
cs
sub
mov
imul
cmp
pop
gs
arpl
inc
cltd
popa
and
pop
dec
pop
pop
pop
rcrl
push
mov
cmpsb
inc
mov
push
push
and
inc
push
dec
push
pop
dec
loope
push
dec
fs
enter
dec
dec
dec
dec
cmp
and
push
and
inc
cmp
fldl
imul
jmp
fwait
cli
lods
pop
pop
out
dec
push
jmp
mov
int3
push
and
in
pop
das
mov
pop
data16
or
mov
shrl
xlat
leave
xor
inc
inc
sti
inc
sbb
xchg
sbb
pop
inc
loopne
push
xlat
and
dec
int3
enter
or
out
sbb
push
cs
xchg
js
in
pushw
xor
xor
adc
xor
xchg
dec
inc
rclb
dec
adc
in
ficompl
jns
fs
push
jge
adc
fsts
pop
add
push
jns
push
inc
inc
ret
sti
mov
clc
mov
out
cltd
out
nop
pop
fwait
dec
xor
cmc
inc
divl
sarb
fcoms
pop
sub
popa
mov
cli
xchg
insl
mov
mov
xor
mov
addr16
movsl
mov
fiadds
in
or
insb
sarl
push
movsb
lock
xchg
pop
scas
ret
pop
pop
sbb
push
or
mov
pushf
stos
or
dec
pop
xchg
test
arpl
ljmp
data16
out
lcall
hlt
mov
cltd
cmpsl
arpl
mov
xchg
pop
or
arpl
jo
cmc
data16
jecxz
es
test
adc
dec
lahf
add
cmp
dec
and
and
in
in
xchg
xor
push
lret
jns
popa
mov
mov
es
imul
push
push
popa
dec
push
push
sahf
mov
jl
xchg
fmul
rcll
xlat
fcoms
les
dec
cmp
enter
mov
int3
pusha
inc
outsb
notb
mov
daa
lret
cmc
push
flds
xor
xchg
cmc
cltd
ds
or
test
repnz
dec
flds
fisttps
mov
fwait
daa
pop
cli
int
xchg
adc
jecxz
aam
fwait
mov
aad
xchg
pop
mov
stc
dec
lock
dec
fld
pop
dec
and
pop
mov
gs
fnstenv
and
cmp
add
stc
cli
dec
jbe
sbb
pop
xchg
pop
sti
xchg
stos
sub
sbb
adc
andb
pop
shl
pop
mov
addb
shlb
pop
sub
dec
mov
pop
sbb
scas
xorb
mov
push
loope
inc
imul
push
dec
sbb
pop
dec
mov
aas
mov
xor
inc
pop
add
clc
add
or
imul
fsubl
cmpsl
insb
movb
test
mov
push
in
pop
cmpsb
movsb
in
inc
push
mov
and
xor
sbb
fistps
rcr
and
or
es
pop
daa
repnz
arpl
jp
sbb
loop
sahf
xor
sub
sub
adc
out
loopne
or
repnz
mov
stc
int3
pop
mov
imul
cmp
out
nop
or
scas
and
addb
or
cmp
push
test
fcoms
stos
std
stos
cmp
xor
pushf
into
repnz
xor
push
cmpsl
mov
fisubl
push
dec
sub
push
push
ficomps
fcomps
jo
xchg
and
mov
jmp
and
lret
insb
jbe
orb
daa
mov
ss
cmpsb
dec
cltd
negl
mov
bound
ds
js
call
adc
test
mov
mov
and
andl
call
or
jmp
jecxz
cmc
js
pop
es
xor
push
fistpl
sub
xor
sub
mov
lods
xor
add
loopne
pop
push
push
or
mov
es
sub
and
xchg
push
pop
pop
xchg
push
xchg
jg
jmp
add
jnp
xor
icebp
jmp
adc
and
push
xchg
add
mov
sbb
sbb
and
xchg
mov
cld
dec
das
cwtd
push
mov
andl
cwtl
sub
fwait
inc
pop
rorl
sar
cs
xor
xor
cmp
loop
mov
aam
cltd
push
jo
pop
pop
sbb
push
imul
bound
mov
bound
cld
dec
gs
int
xor
repz
ljmp
pop
stos
and
subb
aad
ds
xchg
mov
add
iret
popf
jae
push
push
cld
inc
ljmp
and
sbb
mov
dec
in
xor
das
dec
mov
dec
sti
push
pusha
imul
push
rcrb
imul
jp
xchg
push
ds
ret
je
popf
scas
sbb
loop
or
dec
push
je
aam
or
push
mov
scas
dec
jb
mov
jbe
pop
pop
repnz
push
jp
jbe
or
cs
mov
adc
or
stc
xchg
test
adc
push
mov
daa
lcall
xchg
pushf
cli
es
mov
divl
int
pop
fwait
aad
push
sub
imul
cmpb
mov
push
xchg
inc
xor
adc
stos
addr16
push
xchg
arpl
arpl
gs
cmp
xchg
movsl
push
mov
jge
cwtl
outsl
orb
mov
xlat
subl
fildl
lahf
in
xchg
mov
pop
fwait
adc
add
bound
pop
mov
pop
or
sub
loop
mov
jne
cltd
xchg
sub
and
stos
adc
inc
sahf
mov
or
in
inc
cmp
pop
mov
mov
mov
in
aaa
inc
or
push
cmovs
sarl
pop
out
mov
stos
ret
sub
fs
enter
dec
xchg
addr16
scas
arpl
xchg
push
mov
and
pop
inc
pop
xchg
in
mov
jl
xchg
add
add
fisttpl
repnz
push
sub
or
mov
sub
stc
ss
imul
fldcw
jle
pop
sbb
cmpsl
inc
xor
ljmp
or
insb
divb
push
fisubrl
mov
sbb
pop
dec
pop
imul
sti
lods
not
mov
daa
and
sub
mov
mov
pusha
mov
ficomps
aad
loope
arpl
jmp
dec
out
fwait
pop
ds
aam
aad
dec
mov
imull
mov
dec
cmp
push
add
rorl
mov
ret
in
adc
les
fsts
cwtl
fs
pop
pop
fs
adc
fdivr
and
loope
fwait
loope
test
sbb
test
arpl
sbb
dec
xchg
push
shll
and
adc
push
sbb
cmp
cwtl
xchg
bound
arpl
dec
gs
ljmp
js
clc
inc
xor
outsb
subl
mov
ljmp
add
test
inc
in
and
lcall
jmp
dec
dec
rolb
loop
xor
movsb
jns
pop
and
dec
jbe
mov
and
cwtl
push
pop
jle
stos
cltd
gs
push
sbb
stc
dec
bound
in
mov
xor
popa
stc
jp
mov
add
xchg
shll
int3
mov
cmp
dec
add
ss
fcompl
and
push
fsubrl
iret
xchg
pop
pop
and
movsb
sbb
and
pop
push
lock
push
push
mov
movsl
aam
movsb
cmpsb
addr16
lock
mov
xor
test
jbe
sarb
push
insl
sbbb
inc
outsb
inc
push
in
jb
in
adc
jmp
push
insl
mov
dec
xchg
es
pop
xlat
pop
fsts
out
nop
adc
xchg
push
pop
add
lock
nop
xchg
bound
stos
enter
rclb
add
mov
cmp
data16
xchg
push
adc
mov
mov
jecxz
pop
test
mov
cmp
ljmp
cli
call
xchg
repz
and
xor
sarl
adc
outsl
sbb
rcl
scas
popa
push
sub
repz
mov
dec
xchg
mov
push
xchg
call
fcomps
ds
cmp
adc
push
sub
in
add
addr16
test
movsl
insl
data16
cmp
lods
or
and
fs
mov
addr16
stos
imul
ret
data16
mov
aam
xor
aam
jecxz
out
mov
dec
or
mov
fisubrl
sbbl
mov
gs
stos
test
xor
inc
lea
clc
jp
test
pusha
cltd
fwait
jne
pop
test
push
out
arpl
mov
or
clc
xchg
iret
dec
pop
pop
fucomp
enter
jne
test
jmp
xchg
add
or
pop
shll
gs
adc
fldl
sti
adc
pop
fldt
sub
pop
mov
outsb
or
ja
stc
pop
mov
or
jbe
xchg
lahf
mov
adc
inc
or
xchg
push
fucomp
aaa
lea
ss
add
adc
mov
push
add
jmp
or
and
gs
jl
pop
sbb
fidivrl
lcall
pusha
xchg
pop
fistps
addr16
out
aad
mov
aad
ja
xor
stc
or
sti
pop
das
xchg
data16
and
dec
orl
in
jns
js
fs
push
loope
fst
fwait
outsb
movsl
pop
inc
xchg
push
ret
and
in
imul
pop
gs
hlt
imul
xchg
adc
jmp
pop
or
dec
insl
mov
mov
inc
mov
cs
int3
int
outsl
dec
hlt
or
or
addr16
in
cltd
push
or
repz
lds
ja
sarl
push
pop
pop
aam
xlat
jecxz
sbb
mov
lea
xchg
jmp
loopne
jmp
gs
pop
cmp
cmc
mov
pop
xchg
sahf
repz
call
adc
sub
mov
push
mov
imul
fadds
or
call
rorl
negl
and
xor
int3
fimull
xor
cmc
loope
and
jo
call
mov
pop
inc
pop
dec
cli
data16
stc
cmpsl
adc
inc
fdivp
push
mov
adc
xchg
mov
or
push
seto
mov
fwait
fs
in
adc
mov
xchg
test
push
lahf
and
es
inc
mov
sbb
out
aam
addr16
cli
xor
cmp
ds
ror
call
cli
and
test
add
pusha
or
in
sar
xchg
or
xchg
lahf
jl
aam
or
lea
dec
dec
push
stos
lret
lret
fnstcw
cmpsl
in
ficompl
fsubp
fnstenv
xchg
pop
out
fsts
sahf
scas
dec
mov
aaa
cmpsl
xor
push
xchg
clc
dec
ljmp
test
and
xchg
pop
sbb
rorb
sub
in
or
in
xor
or
ss
dec
fbld
inc
sub
pop
fildll
jmp
out
movsb
ss
xchg
push
fimuls
and
pop
arpl
lods
lods
stos
sbb
shlb
jge
cli
or
and
pop
inc
das
imul
pop
push
cmp
xchg
mov
aam
mov
pop
and
or
add
sbb
push
aad
jbe
icebp
inc
pop
mov
pop
data16
push
inc
inc
scas
test
shrb
pop
loopne
ja
ds
inc
int3
pop
cwtl
inc
xor
lds
adc
dec
dec
and
sub
sbb
bound
mov
bound
push
xor
in
call
mov
adc
addr16
push
cmp
xor
ja
rorb
test
mov
pop
push
cmp
mov
loope
push
es
dec
dec
or
in
push
jecxz
and
cmp
ds
das
popa
andb
ret
in
xchg
cmc
mov
shll
xor
cwtl
mov
popf
jg
imulb
fsubs
xor
mov
imul
cmpsl
sub
lret
enter
add
pop
aad
orl
mov
mov
lock
fwait
add
push
push
dec
roll
xchg
in
in
mov
xor
mov
mov
push
mov
mov
test
and
sbb
mov
mov
pop
dec
sbb
push
sbb
iret
ljmp
or
cmpsl
aaa
shrl
pop
sbb
loopne
into
orl
pop
xchg
incb
loop
sahf
in
les
jge
ljmp
jecxz
ljmp
pop
js
ret
sti
out
js
mov
xchg
call
mov
jp
push
sahf
xchg
ret
xor
test
mov
jmp
imul
lods
cmp
pusha
inc
gs
adc
push
push
push
mov
je
pop
push
dec
call
leave
or
xchg
cmpsb
sbb
fdiv
xor
jp
fcomps
pop
mov
jns
push
loope
sahf
cmp
ss
xchg
lcall
sub
xchg
test
inc
mov
addr16
outsl
sbb
scas
pusha
pushl
lods
sbb
rcll
ficompl
xor
pop
sbb
stos
in
push
int
or
insb
popa
dec
or
dec
xchg
lods
push
outsl
nop
inc
push
js
xor
jmp
or
mov
lcall
repz
aam
adc
xor
popa
jo
lock
xlat
in
scas
frstor
adc
sbbb
dec
popf
lods
xchg
mov
in
or
mov
lret
inc
shl
outsl
ds
stos
fsubs
jae
adc
and
insb
xchg
add
call
insl
fisttpl
cmp
jno
xlat
jnp
outsb
test
add
xor
out
adc
xor
ret
push
insb
sub
xor
mov
in
xor
push
cmpb
cltd
outsl
hlt
pop
push
rolb
insl
mov
loope
pop
pop
inc
mov
imul
push
stc
imul
std
movsb
adc
mov
push
jle
ljmp
es
fldl
dec
xor
dec
or
sbb
mov
test
mov
fidivl
sub
lock
cmp
test
inc
testb
sbb
pushf
mov
imul
cmc
mov
pop
in
or
sbb
cmpsl
fwait
out
push
aam
stos
imul
movsl
push
cmpsb
rcrl
ja
mov
sub
setnp
das
mov
sahf
aas
ss
push
ret
inc
lods
add
cld
dec
xor
cmp
imul
push
xlat
call
and
fistl
andl
pop
or
pop
aad
mov
stc
push
and
xchg
cmpsl
enter
bound
xor
pop
dec
out
push
xchg
xchg
xor
test
xchg
pslld
or
pop
iret
ret
mov
sbb
ror
out
in
push
xor
add
insb
mov
aaa
lret
ss
push
arpl
nop
nop
movsb
pusha
std
test
cmp
xor
fdiv
test
dec
jmp
int
xchg
enter
sbbb
or
push
and
scas
ljmp
mov
push
scas
adc
mov
jae
outsb
sub
xchg
je
pop
outsl
sbb
or
shll
lock
stos
gs
js
outsl
xchg
ja
cmp
into
in
adc
outsb
mov
jmp
int
addr16
mov
xor
lret
sbb
and
in
xchg
push
bound
push
sub
xor
cmc
mov
pop
dec
scas
sub
aaa
in
jnp
adc
cmpsb
iret
lods
push
mov
add
cs
sbb
pop
lret
test
lods
stc
imul
add
and
jmp
sub
or
lret
pop
sbb
popf
inc
lret
test
movsb
ja
xor
cmp
push
and
mov
out
cmp
mov
inc
outsl
cmpsb
mov
xchg
push
lret
adc
fisubrl
and
fwait
dec
xor
jne
and
mov
or
out
xchg
daa
inc
push
pop
push
stos
imul
mov
test
cs
xor
jbe
negl
xchg
xor
stos
xor
or
pop
xchg
outsb
dec
mov
out
jmp
sub
ror
push
xor
icebp
cmc
cmp
out
ljmp
gs
xor
arpl
imul
pop
repz
inc
mov
sbb
loop
lret
pop
inc
pusha
pop
adcb
push
stos
adc
push
or
orl
inc
shl
sbb
out
push
mov
aas
arpl
cmp
pop
lds
aad
insl
les
mov
jle
loope
xchg
notb
pop
pop
inc
loope
jp
dec
call
jge
xchg
xor
call
sbb
dec
push
sbb
sbb
cmpsl
xchg
stos
notb
pop
sbb
and
pop
cltd
push
ljmp
fstps
sbb
cld
imul
dec
test
imull
mov
data16
sbb
testw
out
pusha
xchg
cwtl
add
mov
data16
out
imul
lcall
loopne
loope
pop
dec
xchg
push
sbb
cltd
outsl
push
and
dec
xlat
add
push
test
push
push
pop
enter
push
popa
mov
xchg
inc
popa
mov
js
fidivrs
lahf
sub
gs
enter
or
or
sbb
adc
mov
jnp
dec
push
mov
mov
pop
int3
icebp
fidivs
xchg
pop
stc
xor
les
sub
xor
je
pop
cs
and
sbb
addr16
pop
inc
mov
enter
sbbb
bound
mov
pop
inc
cltd
cmpb
cmp
push
inc
in
cmpsb
mov
dec
push
xchg
cmpsb
mov
aas
push
sbb
fnstcw
cmp
popa
mov
out
lret
in
sbb
sbb
push
dec
sub
imul
out
addr16
bound
cmc
pop
pop
inc
cltd
mov
dec
push
mov
and
push
and
flds
lcall
jecxz
and
jnp
xlat
push
enter
das
ret
call
add
inc
addr16
enter
inc
xchg
xchg
push
push
adc
xor
xor
and
inc
aaa
cmp
fld
xor
test
inc
push
mulb
shrb
push
cmp
or
pop
call
in
add
das
addr16
cltd
sub
jmp
es
dec
mov
inc
add
inc
addr16
enter
fistpll
call
add
fs
dec
cmp
cmp
aaa
add
loop
xor
pop
daa
mov
pop
data16
push
mov
cmp
xor
in
push
jmp
mov
xor
xor
mov
jae
repnz
lret
testb
and
push
cmp
and
notb
push
ljmp
dec
mov
fmull
sub
mov
repz
sbb
orb
stos
ret
movsl
push
jns
mov
adc
out
lahf
ss
push
inc
std
scas
shrl
adc
mov
cltd
lock
mov
imul
xchg
lcall
iret
test
xchg
rcrb
mov
gs
dec
cmpsl
xchg
mov
hlt
bound
enter
push
cmc
sub
mov
or
xorl
imul
and
inc
pop
data16
icebp
push
jo
cmp
and
inc
mov
pop
rcrl
inc
jge
fld
fwait
es
pop
mov
outsl
push
jle
rcrl
movsb
cmp
push
push
int
sbb
addr16
cwtl
and
cmp
sub
movsl
cltd
mov
addr16
in
cmp
int
and
and
divb
fnsave
data16
xor
stos
mov
add
aas
int
add
dec
daa
scas
sbb
push
in
enter
cmpsl
inc
pop
cmp
out
fbld
arpl
cltd
mov
stos
jmp
pop
sbb
and
fnstenv
mov
in
dec
loope
xor
fstpt
pop
pop
xor
xchg
mov
cltd
xchg
lcall
repnz
mov
dec
jmp
mov
jl
fistpl
das
cmp
xor
xchg
rcrb
xor
lret
add
data16
or
aas
cmp
rclb
arpl
jae
pop
cmp
bound
int
mov
sti
cmp
xchg
dec
xlat
sub
in
repz
ss
fs
mov
xor
cmp
adc
cmp
into
arpl
mov
fsubs
in
fisubrs
lcall
or
add
popf
sbb
fisttps
fs
mov
adc
clc
xlat
hlt
add
push
sbb
pop
rclb
imul
lock
lahf
pop
or
out
lahf
fldenv
sub
pop
gs
xor
xchg
mov
and
scas
ret
cmpsl
push
pop
pop
jle
sbb
pop
test
lret
daa
pusha
pop
mov
and
das
lds
lods
cli
and
fwait
scas
sbb
out
incl
or
call
pop
aam
xor
repz
mov
pop
xor
push
jae
push
lock
nop
jmp
xor
pusha
pop
sbb
mov
lods
pusha
stos
xor
and
xchg
mov
imul
ret
sub
mov
std
sar
jno
mov
xor
and
rcr
pop
rclb
ljmp
add
xor
adc
jge
loopne
xchg
mov
add
pop
arpl
addb
dec
inc
and
xchg
inc
pop
fstps
std
xor
or
fs
lock
adc
push
jno
and
loop
sbb
or
pusha
cld
fldenv
enter
inc
jecxz
push
add
add
sbb
adc
pop
stos
sub
dec
mov
iret
insl
pop
repnz
adc
mov
sbb
js
pop
dec
and
dec
fs
out
ficompl
pop
sbbb
js
or
fstl
pop
js
push
pop
jecxz
loopne
sub
aad
xor
cwtl
data16
cmpsb
pop
sbb
pusha
testl
subb
dec
or
mov
inc
pop
out
pop
aad
xchg
loop
arpl
add
push
pop
xchg
call
mov
sti
cli
nop
or
push
bound
xor
jb
jo
or
int
popa
pop
xchg
cmpsb
clc
xor
mov
mov
mov
lret
jmp
mov
mov
adc
lcall
push
movsb
test
inc
lock
out
jmp
insb
pop
jno
xor
xor
inc
test
lods
shll
mov
push
lods
xchg
add
mov
xlat
ljmp
xor
xor
and
pop
and
push
enter
pop
aad
jne
cmp
xchg
ret
out
mov
add
and
xor
jle
add
fs
dec
push
dec
pop
push
test
loope
push
push
pop
xor
ret
jg
test
jnp
push
shll
out
enter
dec
inc
in
out
mov
push
mov
or
fsts
add
mov
enter
jbe
xchg
es
pop
shll
cmc
cli
and
dec
icebp
lret
xor
dec
push
push
push
or
ds
addr16
imul
int3
aaa
pop
fisubrl
stc
mov
adc
movsb
cli
xchg
sahf
cs
sub
mov
mov
or
pop
mull
lock
xchg
and
ret
push
bound
xchg
and
dec
mov
mov
cmp
adc
pop
imul
jmp
jecxz
aas
or
and
pusha
and
and
dec
pusha
add
js
ja
pop
sub
out
sub
dec
sub
cmpsb
push
cmp
scas
aas
hlt
push
mov
addr16
decb
or
lock
sahf
adc
or
inc
repnz
mov
sub
ret
iret
mov
shl
out
mov
fisubrs
fstpl
cmp
dec
sahf
push
aas
popa
arpl
push
mov
dec
jmp
mov
dec
xchg
dec
test
push
lahf
inc
adc
or
les
cli
jae
imul
mov
jns
pusha
sub
ret
jae
loope
out
enter
enter
mov
sbb
mov
and
adc
add
int3
leave
push
es
testb
mov
cmpsl
and
cmpsb
lock
sub
lret
mov
dec
in
out
aam
sti
aas
or
adc
xor
loope
and
mov
cli
shl
and
add
mov
adc
or
jp
cwtl
cwtl
jmp
call
or
movsl
leave
out
jge
rorb
or
add
lock
test
or
xchg
add
fsqrt
sbb
fimull
fucom
jle
pop
pop
push
inc
xchg
leave
lock
push
aad
pop
push
aam
stc
int
mov
aad
pop
clc
loope
push
in
pop
gs
imul
jl
mov
fstpl
cltd
push
in
inc
mov
pop
arpl
out
and
loope
and
shrl
outsl
imulb
mov
sbb
ret
popa
xchg
jmp
mov
adc
jmp
ljmp
pop
in
xchg
pop
add
scas
mov
cmp
call
cmp
or
clc
test
xor
data16
mov
arpl
repnz
lock
enter
or
daa
or
sbb
push
and
cmp
pop
addr16
dec
push
fstps
aad
iret
push
lock
fwait
inc
in
mov
dec
cmc
jmp
inc
test
xor
sub
jmp
test
ret
mov
sub
ljmp
pop
xchg
mov
stc
fcomps
and
inc
sti
stc
fisttps
sbb
mov
inc
push
jae
movsl
adc
js
or
xlat
ret
cmp
loope
jno
movsl
inc
ss
xchg
fbld
test
int
xlat
xor
or
add
test
pop
call
jg
js
in
or
test
mov
or
data16
or
push
jae
mov
arpl
pop
stc
mov
stos
pop
pop
xor
pop
xor
in
aaa
pop
stos
xchg
push
mov
xchg
pop
xchg
push
push
out
rorl
pop
adc
stos
jno
ss
imul
push
jp
sbb
jmp
mov
scas
outsl
lea
ret
push
arpl
inc
loop
dec
mov
inc
mov
sti
je
and
xchg
adc
push
pop
loope
pop
jno
mov
mov
enter
mov
arpl
pop
fwait
leave
cmpsl
mov
arpl
arpl
jg
test
data16
ja
mov
dec
inc
lods
sub
sub
add
ret
push
cltd
loope
pop
inc
jnp
ret
dec
sbb
fs
addl
orb
push
jle
rcrl
or
in
loope
subl
push
inc
fstpl
add
cwtl
sub
add
and
leave
loope
rol
add
push
pop
push
mulb
sbb
inc
adc
sub
xchg
jl
adc
insb
sbb
mov
cmp
xor
mov
cmp
mov
or
cmc
les
mov
and
cmpsl
leave
repz
xor
cwtl
arpl
cmp
int
add
cmp
push
or
pop
pop
mov
test
out
iret
cmp
dec
addr16
xor
js
push
add
push
pusha
jge
in
adc
in
int
mov
enter
push
out
in
xlat
adc
jb
push
out
dec
xchg
cmp
arpl
cltd
push
dec
cmp
fstl
sub
repnz
add
ficomps
fwait
inc
bound
cmp
jg
loope
jo,pt
and
add
xor
imul
in
subl
movsl
mov
lds
rcrl
cmp
mov
clc
scas
iret
imul
test
daa
xor
and
pop
push
mov
xor
jle
enter
inc
aad
dec
and
gs
xchg
push
xor
lcall
jnp
pop
sbb
cs
dec
outsb
xchg
xchg
add
xor
or
sub
das
test
and
adc
or
or
xor
rcll
mov
outsl
and
xor
cmpsb
mov
sub
std
push
stos
lea
xchg
nop
sub
mull
test
xchg
sub
cmp
xor
aaa
cmp
sbb
pop
cmpsb
xchg
jecxz
xchg
mov
xor
subl
lret
lret
outsb
mov
addr16
xchg
loope
pop
ret
jp
mov
xor
ret
in
and
adc
mov
and
lods
push
jmp
jecxz
mov
roll
mov
call
jp
mov
mov
inc
cmpsl
or
sub
pop
push
adc
rorb
popaw
lcall
pop
mov
xor
jge
and
gs
outsl
pushf
mov
decl
sarl
xor
sub
mov
add
flds
mov
jb
sbbl
std
xor
sub
int3
mov
jnp
fldcw
mov
adc
out
xchg
jo
fs
out
jp
cmpsl
xor
rolb
xor
sbb
fbstp
imul
sbb
dec
xchg
loope
lock
dec
ljmp
cmp
arpl
xor
xor
xchg
mov
loope
ret
adc
dec
sub
gs
das
xor
aad
lock
test
in
pop
push
xor
xorb
mov
jmp
cli
mov
dec
dec
mov
pop
ss
pop
mov
push
cmp
rcll
add
negb
push
cmp
enter
sbb
lods
pop
bound
dec
dec
mov
add
pop
and
pop
outsl
adc
add
bound
iret
sub
adc
adc
cmp
mov
sub
dec
lock
fldenv
jno
loope
dec
push
push
sub
cmpl
data16
test
xor
cmp
je
aas
jbe
jno
push
push
dec
xor
push
loope
rcll
cmp
add
xor
pusha
lret
xchg
add
cld
xchg
add
dec
adc
add
xor
or
pop
push
push
popa
les
add
dec
mov
mov
inc
push
in
fbld
lea
clc
and
adc
push
mov
aas
popa
lahf
stos
xchg
mov
rclb
dec
jge
ret
cmp
mov
sar
xchg
dec
fcomi
outsb
inc
add
jge
inc
inc
pop
mov
jp
cltd
pop
pop
loop
std
mov
sub
dec
in
pop
or
xchg
mov
mov
push
dec
xchg
arpl
push
sbb
outsb
xchg
in
add
movsb
inc
fsts
scas
orb
popf
fistpll
repz
test
jnp
and
push
pop
fsubs
mov
fnstcw
out
inc
inc
int3
popf
cmp
pop
push
movb
dec
xchg
ds
sbb
xchg
jb
xchg
call
lods
stc
dec
cmp
ret
imul
ss
inc
mov
sti
mov
xchg
mov
adc
sbb
dec
sub
pop
and
inc
imul
add
sub
icebp
lahf
das
mov
pop
out
loope
pop
subl
or
scas
dec
and
aad
inc
add
push
lcall
jecxz
imul
scas
stc
outsl
stc
jns
fistpll
pop
cwtl
aad
fs
roll
xchg
lds
popa
mov
adc
pop
gs
mov
cmp
outsl
push
rolb
jle,pt
and
add
iret
sbb
fwait
pop
xchg
addb
pop
ss
dec
scas
cmp
lds
bound
shrl
lock
icebp
pop
xchg
pop
ds
inc
jle
mov
incl
push
jnp
or
dec
popl
fisttpll
aad
mov
adc
das
ss
sub
and
jae
xchg
mov
jp
xchg
xchg
xchg
mov
adc
pop
movsl
xchg
in
lret
lahf
ror
inc
jmp
aaa
in
std
ljmp
adc
or
test
cmp
and
enter
repz
ss
cmpsl
xor
or
outsl
mov
bound
add
push
mov
add
sub
sahf
push
mov
inc
stc
je
or
push
enter
mov
daa
sbb
stos
fdivs
xor
mov
les
xchg
jp
data16
std
xor
adc
sbb
lahf
mov
aam
inc
push
ret
cld
lods
imul
xor
inc
sahf
add
andb
lret
fs
mov
or
leave
outsl
add
fldcw
xor
sub
adc
cld
adc
pop
mov
ds
xlat
sbb
aam
mov
lret
fisubl
pop
push
daa
mov
push
and
push
xchg
xor
mov
pop
and
insb
xchg
movsl
pushf
stos
mov
push
mov
shll
int
in
xchg
idivb
pop
push
notl
cmpsl
addr16
movb
mov
popa
jmp
dec
sbb
xchg
pusha
in
mov
cmpsl
ds
and
ret
xchg
in
sub
fs
xchg
inc
imul
js
add
cld
cmc
in
sbb
leave
add
lds
jp
xlat
push
xchg
dec
mulb
push
cmp
dec
pop
mov
pop
dec
mov
inc
sub
test
pushf
sbb
cwtl
arpl
xchg
push
rcrl
sub
popf
lods
mov
pushf
mov
xor
rcr
pop
aam
ja
cmp
ss
sub
dec
hlt
pop
xchg
or
sbb
mov
repz
cli
dec
dec
imul
and
dec
pop
lds
sbb
test
es
stc
test
pop
aaa
test
test
xchg
xchg
stos
js
inc
xor
fs
sub
ljmp
adc
xor
cmp
mov
sbb
cmp
push
fadds
cmp
pop
xor
mov
es
push
sahf
sbb
mov
inc
mov
or
outsl
jmp
sbb
flds
push
and
pop
fwait
insb
lret
out
mov
imul
sub
mov
mov
mov
jmp
shrb
xchg
cwtl
mov
dec
repnz
add
xchg
dec
lods
ljmp
jb
loopne
dec
jbe
test
or
loopne
and
out
ret
inc
shll
push
int3
push
mov
mov
cmp
cmp
addb
cmp
shrl
sahf
seto
and
jmp
dec
adc
dec
and
xchg
xchg
cmp
push
push
ljmp
imul
in
mov
dec
pop
dec
pop
je
xchg
push
shrb
push
cld
xor
popa
data16
push
popf
or
inc
cmp
arpl
or
add
call
sti
add
push
push
inc
jne
shll
fwait
dec
enter
xchg
cmp
popa
je
and
or
fadds
jle
push
and
adcl
hlt
add
pusha
hlt
fs
add
fildl
push
sbb
aas
sub
das
pop
mov
xchg
push
and
mov
daa
movsl
inc
aad
lods
aam
xchg
jno
fldt
nop
test
pop
adc
aaa
cmpsb
es
les
arpl
mov
dec
int3
inc
aad
xchg
aad
pusha
inc
aaa
sbb
stos
mov
adc
cmc
js
scas
push
push
clc
pop
mov
scas
add
xor
xor
enter
adc
mov
dec
outsb
out
or
cld
xchg
and
out
dec
and
xchg
push
call
divb
test
inc
ficoml
sub
out
or
in
cmpsb
data16
push
add
loope
mov
or
mov
es
ror
and
int
jmp
addr16
les
adc
jnp
pusha
and
jne
cli
outsb
test
xor
mov
es
std
in
jb
cld
decl
pop
add
dec
mov
stos
sub
mov
in
rcrl
in
popa
push
inc
xchg
enter
push
fsubs
scas
dec
faddl
and
cld
popa
dec
sbb
mov
jl
inc
xor
fstpl
or
fwait
lock
out
repnz
addb
aaa
sbb
mov
enter
test
stos
mov
cmp
fwait
xchg
push
insb
nop
in
jns
mov
fdivrs
inc
nop
lods
mov
cmp
xchg
mov
mov
mov
inc
mov
push
fdivs
ss
popf
stc
popf
out
push
std
sub
inc
adc
jo
mov
aaa
lds
sub
cld
ljmp
inc
sub
insl
test
or
and
jb
mov
test
xchg
xchg
call
sub
in
dec
sbb
loop
and
cld
fisttpll
lret
loope
imul
mov
out
dec
test
mov
and
dec
sahf
aam
pop
sti
fldl
push
sbb
cmp
pop
aas
and
mov
inc
cmpsl
rclb
xchg
fs
xor
xchg
insb
push
mov
lods
dec
je
stos
xchg
sarb
cmp
or
sbb
lret
mov
pop
xchg
fldt
scas
xchg
and
inc
sub
fisubl
pop
dec
push
mov
ljmp
pop
iret
fisubl
jg
xchg
stc
out
inc
adc
rcr
jno
out
test
inc
and
dec
pusha
dec
lahf
test
pop
pop
scas
aaa
xchg
or
jbe
movsb
movsb
cli
sbb
leave
mov
push
pop
jns
lahf
mov
adc
sbb
lods
push
and
mov
adc
mov
mov
mov
xchg
sbb
pop
add
fcomps
pop
aam
and
sbb
loopne
inc
jmp
cmp
or
insl
xchg
inc
jl
bound
into
cld
or
shlb
lock
movsl
lret
in
movsl
and
push
xchg
call
cmp
nop
stos
inc
loopne
mov
push
mov
arpl
incb
pop
or
lcallw
paddsb
mov
dec
gs
jmp
sbb
sub
in
jp
push
in
bnd
pushf
cmp
and
out
fisubl
les
arpl
cltd
gs
sbb
fs
mov
stc
fs
adc
leave
inc
mov
nop
lret
dec
inc
dec
cli
push
fs
jp
int3
xor
push
clc
out
push
ds
adc
push
arpl
mov
idiv
push
inc
inc
inc
mov
adc
sub
dec
movsl
add
std
outsb
inc
pop
lret
sbb
mov
pop
or
insb
popa
cmpsl
das
push
in
fnsave
pusha
loop
xchg
aad
enter
les
and
cmp
hlt
nop
xor
movsb
push
xchg
ret
movsl
mov
dec
iret
stos
jl
mov
push
cmp
scas
idivb
clc
stos
imul
iret
sub
in
and
sbb
push
aad
push
pop
test
sub
cmp
cmp
lods
fldenv
or
pushf
xchg
loope
movsb
cmc
dec
pop
inc
sti
ja
push
sub
out
cmp
or
and
adc
or
out
jmp
jmp
lods
leave
jne
popa
push
test
dec
and
dec
in
push
sbb
ljmp
inc
xor
mov
xchg
into
sarb
fst
dec
nop
dec
mov
dec
icebp
or
inc
sbb
shlb
xor
scas
cmp
jge
push
and
push
jae
jmp
leave
or
dec
mov
xchg
test
rolb
insl
pusha
cmpsl
sub
push
inc
je
sar
bound
jp
incl
scas
push
int
lret
insl
in
adc
jl
sbb
bound
aad
jl
repnz
sbb
cmpsb
pop
js
lods
lods
ficoms
jg
push
adc
xor
ret
loop
popf
mov
mov
jbe
push
and
cmp
js
movsb
cmp
lret
andl
rcr
mov
push
fisttpll
xchg
or
or
cmpsl
or
repnz
add
roll
pop
aad
test
bound
adc
mov
cmpsl
xchg
or
sbb
fcoml
rcll
loope
lcall
aam
stc
or
ja
gs
mov
les
cmc
dec
in
and
idivb
or
notb
push
add
addr16
dec
mov
es
test
ds
lock
pop
cmpsb
dec
sbb
ficomps
cld
add
pop
mov
pop
jbe
in
mov
rol
push
flds
mov
popa
or
xor
sub
scas
jge
xchg
adc
outsb
or
pop
jge
and
inc
pop
out
jl
lahf
jnp
test
daa
vsqrtps
jbe
pop
pop
dec
dec
fisubl
aam
or
jl
icebp
lds
mov
push
lds
sub
inc
adc
cmpsl
mov
pop
add
cli
xchg
and
rorl
fwait
test
sub
cmp
popf
and
rcrl
xchg
cltd
sarb
test
pop
and
imul
cmpsb
pop
or
mov
push
mov
adc
add
data16
add
pop
sbb
cmp
aas
cmp
or
mov
pop
mov
scas
mov
or
pop
std
aad
push
cmc
xor
mov
into
adcl
mov
push
mov
inc
lahf
xor
outsl
adc
xchg
or
xchg
out
xor
cmp
scas
sbb
sbb
cmp
rcrb
es
rcl
jg
xchg
mov
aam
fs
dec
push
lea
call
shlb
imul
mov
int
mov
popw
xor
mov
rcll
lock
fimull
sub
lds
movsl
mov
xchg
or
out
lahf
pop
push
xor
stc
imul
dec
mov
add
push
xor
jns
in
nop
add
pop
std
in
push
orb
pop
aad
push
xor
xor
mov
cmp
pop
push
scas
aaa
js
jmp
jb
push
xlat
outsl
push
popa
sbbb
rolb
into
add
fldcw
mov
dec
mov
xor
dec
xchg
mov
jle
shlb
xchg
xchg
pushf
je
cs
das
push
icebp
or
pop
or
outsl
popa
scas
push
ret
decl
in
mov
push
imul
mov
in
jmp
and
or
cmc
xor
dec
jnp
inc
sbb
cmpsb
mov
add
push
add
js
addr16
push
add
pop
loopne
repnz
sub
in
jg
pop
and
pop
pop
or
or
xchg
out
push
add
dec
cli
cmpsl
mov
adc
int3
jge
sbb
push
addr16
iret
and
xchg
push
ficompl
mov
mov
cltd
sub
sub
mov
in
and
arpl
sti
cmp
jle
jnp
test
or
in
and
es
arpl
call
sahf
jns
xchg
adc
push
jge
or
mov
imul
inc
mov
or
sahf
inc
push
or
inc
les
je
pop
mov
lock
mov
imul
or
hlt
dec
fwait
dec
push
or
pop
addr16
call
sub
sbb
cs
lcall
cmpsl
mov
and
push
outsb
mov
lds
mov
psubsb
xchg
popa
push
and
xchg
pushf
leave
mov
sub
repnz
xor
jnp
ljmp
pop
cmp
cmp
notb
int3
pop
xchg
icebp
push
inc
lcall
outsl
fiadds
adc
cltd
add
insl
sbb
addr16
xchg
stos
jmp
sbb
int3
add
push
stc
pop
std
inc
shr
or
and
adc
outsl
inc
fisttpll
loopne
jnp
je
xor
lea
pop
daa
cmc
sub
aam
insb
rclb
mov
xchg
or
ljmp
clc
rcll
xchg
mov
mov
shr
in
sub
push
lods
cmpsl
loopne
stos
push
mull
sub
dec
ss
popf
or
sub
or
lahf
mov
pusha
dec
and
sahf
das
lret
insb
decl
fisttpl
sarl
pusha
les
repnz
mov
lds
fstpl
bound
cmpsb
fisttps
enter
popa
xchg
sbb
cmp
mov
mov
jns
cmp
ljmp
sbb
cmp
cmpsb
sbb
xchg
outsl
dec
pop
pop
jno
mov
inc
js
and
mov
push
adc
dec
imul
push
mov
lret
imul
nop
add
sahf
orl
mov
jne
adc
arpl
lods
lahf
mov
fbstp
push
cmpsb
sbb
mov
data16
xor
in
call
pop
mov
jmp
add
fstpl
adc
and
andl
enter
loop
les
shlb
jp
lds
pop
pop
loopne
pushf
pop
and
lods
call
xchg
xor
mov
gs
lcall
lods
or
gs
push
push
xor
movsl
mov
dec
cmpsb
pop
jle
movsb
ds
sbb
push
addr16
pop
push
in
push
lock
xchg
push
mov
mov
sub
pop
fisttpll
jp
add
xor
mov
lret
cmp
push
shll
and
fistl
cmpsb
rorb
aaa
xchg
sub
xchg
inc
and
push
mov
das
xlat
out
mov
outsb
dec
sti
arpl
jecxz
xchg
jne
aas
mov
mov
jp
mov
mov
outsl
shlb
and
ljmp
lods
ljmp
push
xor
cli
push
sbb
sbb
sti
pushf
xchg
fstl
fadd
pop
lret
mov
push
popf
lods
fdivrs
push
loope
loope
mov
mov
push
jle
jle
shrl
or
dec
jg
mov
mov
cmp
fsubrs
inc
aaa
cmpsb
inc
push
ficomps
ret
inc
inc
dec
bound
pop
adc
rorb
dec
mov
lret
cwtl
and
add
add
xor
arpl
je
fcoml
dec
pop
or
outsl
sub
add
push
dec
xchg
inc
div
pop
pop
stos
pop
inc
mov
fimuls
xchg
mov
sub
out
out
aas
enter
sub
jae
xor
and
xchg
jg
sbb
in
fscale
dec
movsl
mov
fdivs
xor
inc
test
jmp
sub
sbb
cltd
push
inc
lock
xlat
movsb
sub
push
aam
scas
movl
aas
sub
push
xchg
push
inc
ret
ret
sti
out
cli
mov
repnz
divl
sub
or
pop
test
rcrl
sub
cmp
push
adc
ret
inc
hlt
add
xchg
movsb
mov
ficompl
lcall
fs
sub
cmpsl
jo
jmp
jp
enter
ss
fwait
add
adc
cmpsl
iret
jno
or
dec
cmp
lds
xchg
clc
fisubl
pop
adc
dec
arpl
movsl
fldl
cs
inc
out
or
cmpsl
and
sbbl
loopne
and
movsl
out
js
add
ret
sub
cmc
call
pusha
xor
mov
pop
mov
xor
cld
inc
cmp
sahf
dec
xor
frstor
out
mov
dec
pusha
fcomp
xchg
ret
and
dec
add
filds
cmp
punpcklbw
shlb
push
cmpsl
xor
int3
xor
scas
cli
sbb
jns
mov
lods
cmp
fsts
cltd
sbb
sarl
add
push
lods
mov
iret
imul
add
fidivl
xchg
lods
shrb
cltd
mov
sbb
push
mov
dec
daa
xor
pusha
or
movsl
test
loope
dec
jnp
icebp
push
movsl
sahf
popa
push
cs
mov
jp
lret
fidivl
pop
pop
push
push
pop
imul
pop
sbb
jns
inc
mov
mov
cld
fwait
ja
clc
and
ss
in
pop
jle
int
or
xchg
imul
ds
mov
shll
sbb
cmc
add
orb
xchg
pop
jmp
in
jns
cmp
push
sbb
add
int3
insb
cmp
imul
xor
or
pop
scas
ljmp
adc
es
mov
inc
rolb
xchg
xor
xor
addr16
pop
in
es
mov
scas
loope
mov
orl
testb
xchg
dec
data16
push
je
mov
data16
shl
cmovno
in
or
fucomp
fmul
xchg
addr16
or
xchg
xor
aad
cmpsl
lret
movsb
sbb
xchg
push
push
dec
negl
mov
test
jnp
jnp
jle
jae
aaa
sarb
fcoml
stos
and
aam
je
mov
adc
pop
inc
or
dec
mov
outsl
xchg
mov
mov
xchg
push
inc
stc
add
mov
movsl
dec
gs
push
rep
xchg
aad
movsb
out
imull
addr16
lret
stc
repnz
imul
mov
mov
dec
mov
std
cmp
sbb
mov
dec
fldl
aad
mov
push
aaa
dec
out
pop
das
xchg
pop
push
push
fildl
pop
or
aam
movsb
adc
pop
ret
cmp
xchg
cmpsl
cmp
stos
xchg
in
mov
push
stc
adc
jp
sub
cmp
data16
jle
mov
mov
aam
fistpll
jno
sub
loope
pop
rolb
or
leave
dec
call
and
xor
cmp
std
push
mov
and
xchg
je
roll
gs
sub
arpl
cmp
adc
push
sub
outsb
nop
sbb
dec
mov
int
rcrb
push
aam
xchg
add
stos
dec
ds
xchg
pushl
sbb
int
and
lret
fs
addr16
xchg
test
mov
push
cmp
outsb
dec
int
mov
int3
jge
mov
mov
data16
push
or
add
pop
lret
adc
stos
insb
lods
imul
inc
aam
lds
shlb
and
aam
push
jmp
flds
pop
push
push
mov
test
loop
adc
push
xlat
cli
les
jne
mov
jnp
lret
gs
imul
jno
lret
dec
pushfw
pop
sbb
pop
dec
sub
sbbb
jecxz
inc
es
stc
neg
cli
push
mov
xor
ljmp
and
pop
pusha
jecxz
or
pop
xchg
sub
jmp
mov
arpl
push
sbb
pusha
mov
and
xorb
or
pusha
nop
arpl
mov
in
imul
addr16
sbbl
dec
push
faddl
pop
cmp
xor
or
enter
out
push
dec
sub
inc
ja,pn
in
stos
or
xlat
xor
mov
xchg
jb
xchg
lds
sub
sub
sti
mov
push
xchg
aaa
repnz
dec
sbb
cmpsb
sbb
fcomps
mov
or
arpl
push
outsl
and
adc
push
dec
insb
mov
lods
mov
imul
and
in
fildll
fcmovnu
xor
xchg
mov
aas
test
pop
imul
pop
sbb
xor
pop
cltd
aam
pop
push
lret
arpl
xchg
jne
adc
outsl
gs
add
jge
lret
inc
pop
into
xchg
fcompl
jnp
je
movsl
mov
mov
loopne
mov
and
sub
outsb
loope
je
das
arpl
jno
fcomi
imul
xchg
insb
outsl
jns
aas
inc
mov
pusha
out
xchg
outsb
mov
divb
arpl
aaa
in
gs
inc
mov
aad
ss
addr16
xchg
dec
cmpl
roll
fmulp
mov
dec
in
cld
ficomps
dec
sub
scas
orb
stc
stos
pop
jnp
aaa
dec
out
push
into
andb
jp
sub
sar
out
ljmp
mov
cmp
push
lret
fsubrs
shlb
push
fwait
xlat
jns
popa
xor
mov
in
jmp
movsb
fnstenv
adcl
jns
adc
jge
inc
dec
or
cmc
mov
push
decl
ja
or
mov
lret
sbb
dec
rorb
lret
gs
aas
and
lret
je
mov
add
push
pusha
or
rorb
sbb
adc
push
mov
or
mov
inc
pop
xchg
data16
aad
adc
mov
pop
push
bnd
push
pop
bound
add
in
pop
push
iret
pop
xor
ds
movsb
xchg
addr16
sarb
dec
test
clc
ret
call
cmp
bound
mov
outsb
or
test
add
in
or
or
test
imul
xchg
stos
cmp
jmp
push
ljmp
fcompl
shl
push
push
and
f2xm1
cwtl
jmp
sbb
fisttpll
sbb
pop
and
dec
leave
push
dec
test
lds
sbb
movsb
lret
in
dec
pop
data16
roll
xchg
nop
xor
mov
imul
and
iret
pop
arpl
shlb
int
push
lock
test
out
fstl
sub
or
repnz
and
imul
cli
pop
aam
mov
enter
das
adc
insb
sbb
pop
movsl
out
sub
xor
in
sub
stos
filds
push
icebp
outsl
sub
push
loop
cli
rolb
mov
aad
push
pop
mov
xor
iret
imul
sub
push
les
mov
addr16
cltd
adc
inc
mov
enter
pop
or
xchg
in
loope
xor
jle
js
ljmp
gs
inc
imul
call
sub
repz
pop
sti
pop
dec
loope
pop
add
sbb
push
rcll
stos
pop
fs
imul
in
jmp
aaa
or
mov
mov
push
dec
ds
add
sahf
mov
clc
dec
inc
ficompl
or
inc
leave
insl
push
pop
push
daa
push
mov
imul
lock
dec
fs
push
xchg
jmp
outsl
movsl
test
cmp
push
ficompl
int3
call
cmpsb
push
pop
pop
xor
adc
jle
out
sub
mov
inc
ret
inc
insl
push
jle
mov
xchg
sbb
push
inc
fldcw
or
push
xchg
push
sbb
ret
inc
enter
add
movsl
mov
push
imul
pop
dec
imul
inc
das
xor
rcr
int3
push
rcr
sbb
repnz
adc
jle
fs
pop
mov
jmp
adc
cmp
addr16
in
xchg
retw
mov
sbb
xchg
gs
mov
pop
out
cwtl
in
mov
in
shrb
jmp
adc
adc
mov
mov
dec
mov
shll
and
xor
mov
pop
enter
or
push
pop
cmpsl
sub
inc
imul
aam
ds
ljmp
inc
inc
stc
int3
push
lock
xchg
or
add
xlat
outsb
mov
stos
xchg
sbb
and
xchg
jb
pop
jmp
andl
imul
sbb
pop
mov
pop
jge
data16
loope
pop
xchg
int3
or
mov
mov
or
xchg
push
add
out
insl
xchg
mov
adc
push
rorl
movsb
push
push
arpl
dec
ja
xlat
jns
cmp
pop
dec
int
push
or
push
push
or
inc
add
outsl
outsl
test
loope
in
movsl
rorl
inc
cwtl
mov
fcmovbe
mov
and
lods
insl
test
cmpsl
gs
mov
dec
push
or
outsl
xor
add
mov
fdivs
xor
pop
gs
or
add
and
mov
cmp
sbb
fsubrl
add
arpl
adc
pop
jecxz
pop
addr16
push
mov
std
out
sbb
aas
in
push
dec
sub
imul
or
in
stc
pop
and
iret
mov
or
roll
mov
and
loop
pop
push
xor
loopne
push
xor
xchg
mov
xor
scas
and
dec
mov
cmovg
movsl
nop
adc
jmp
inc
push
pushaw
xchg
jecxz
pop
shl
sub
popa
fwait
dec
es
popf
aam
push
pop
fdivl
jl
adc
or
cld
adc
iret
movsl
jp
dec
ja
inc
aam
out
xor
pop
add
lds
rcrl
push
daa
call
mov
out
int3
xlat
cmp
dec
xchg
enter
xchg
mov
ret
je
mov
cmp
or
push
pop
add
gs
jp
ja
sarb
cli
stos
addr16
out
sub
ficoms
dec
mov
xlat
lock
frstor
inc
aaa
pop
mov
dec
xorb
in
aam
pop
divl
insl
mov
lock
shlb
dec
imul
aad
aam
inc
jne
ret
xchg
and
mov
or
rcrl
pop
imul
pinsrw
les
dec
test
inc
pop
fnstenv
out
jmp
push
fldenv
loopne
xchg
dec
movsb
nop
test
jg
adc
mov
push
ret
sbb
movsb
xchg
lds
in
push
aam
loope
jb
inc
jle
testl
cmp
cmpsl
in
mov
mov
or
jbe
xchg
cmp
push
mov
imul
cld
dec
sbb
inc
gs
cmp
xchg
scas
and
dec
mov
xchg
pop
aam
loope
out
call
insb
inc
mov
inc
push
jb
add
loop
inc
es
out
sub
or
xor
mov
loope
inc
push
pop
or
xchg
fcoml
test
push
adc
sub
and
jnp
xchg
cmp
in
nop
bound
add
lock
pop
pop
shlb
xchg
xchg
jo
rcl
bound
sub
test
add
or
jmp
xchg
pop
into
popw
push
dec
orb
addr16
test
outsl
sub
in
leave
bound
pop
push
ja
jnp
push
sti
pop
int3
cmp
sbbl
sbb
fidivrs
lahf
aas
pop
or
push
mov
pop
aad
push
mov
lods
jbe
lods
cltd
mov
nop
adc
jp
jne
jnp
cmpsb
addb
out
lahf
push
je
mov
repnz
cmpsb
xchg
pop
fimuls
repz
push
xchg
outsl
daa
stos
mov
cmp
iret
ljmp
jne
xchg
xor
jne
lock
push
shrb
sub
push
push
outsl
inc
dec
fsubrs
xor
jne
sbb
mulb
sub
fs
dec
pusha
or
xchg
test
lcall
jecxz
in
push
nop
in
xlat
jmp
pop
pop
xorb
xchg
xor
and
add
pop
pop
cs
mov
push
jecxz
pop
xor
jmp
sbb
in
or
xchg
xlat
ret
and
dec
addr16
enter
pop
sub
xor
push
and
enter
aam
and
adc
pop
sbb
or
jae
mov
mov
ds
pushf
xor
rclb
cwtl
repz
int
push
cmp
cltd
push
pop
xchg
popa
xor
clc
sub
outsl
sbb
shlb
push
lods
or
push
add
out
aaa
ret
adc
fstps
xor
aam
pop
push
jecxz
jp
addr16
cs
adc
test
mov
call
cmpsl
dec
cmp
mov
popa
pop
pop
pop
sbb
fs
jnp
aad
fwait
pop
insb
sbb
pop
and
pop
push
jg
xchg
jne
adc
pop
inc
std
lret
lods
out
lret
int3
icebp
in
cmp
sbb
stos
mov
add
sbbl
cmp
mov
mov
jp
in
daa
xor
add
popf
clc
mov
popf
out
les
lret
es
shlb
push
imul
xor
cmp
or
cmpsl
cmpsb
pop
cmp
lock
out
and
pusha
pop
push
es
cltd
fwait
adc
adc
fimull
jno
arpl
adc
pop
sub
jmp
mov
mov
data16
inc
das
addr16
push
adc
sti
ljmp
cs
cmp
fwait
aam
pop
mov
loopne
xor
clc
jmp
pushf
rorb
mov
jmp
pop
add
out
sub
cwtl
inc
sti
dec
cs
out
pmaxub
cmp
sbb
jns
cmpsl
cli
faddl
add
ficoms
dec
or
mov
rcrb
pop
insb
sbb
mov
adc
mov
mov
xor
xchg
lcall
mov
gs
insl
sbb
stc
out
dec
mov
aam
fptan
xchg
into
mov
repnz
mov
scas
pop
dec
push
in
cmp
add
divb
loopne
rol
test
dec
stos
push
fs
xlat
imul
dec
addr16
movsl
xchg
xor
fs
test
gs
stc
push
lock
aas
push
inc
cmp
mov
outsl
imul
addr16
lods
or
dec
sub
jp
or
add
add
mov
pushw
bound
dec
dec
flds
jbe
and
outsl
and
sub
lock
jecxz
aad
movsb
fnstenv
and
xchg
and
or
repnz
pop
lock
popa
and
mov
pop
add
mov
xchg
dec
mov
pop
jecxz
imul
mov
or
fcoml
mov
ret
pop
sbb
xchg
clc
std
lret
pop
int3
inc
push
dec
mov
sub
ret
out
popf
fldl
loope
pop
int3
add
xor
aad
or
add
aaa
iret
sub
xchg
add
movsb
sbb
dec
leave
fistpl
pusha
push
push
in
sahf
ljmp
imul
jg
imul
xchg
mov
push
inc
fildll
lock
inc
pop
push
lahf
lock
shl
pop
and
adc
pop
ljmp
push
add
or
add
loope
aaa
mov
push
add
mov
out
ret
pop
push
dec
fsts
push
adc
cmpsb
dec
adc
inc
jmp
xchg
cmp
data16
dec
movsl
sub
ret
mov
push
aad
aaa
mov
pusha
dec
iret
add
xchg
int
rcll
fdivs
jmp
jl
mov
inc
in
mov
leave
or
cmp
test
leave
push
jno
and
addl
in
xchg
lret
addl
out
not
pop
dec
gs
loopne
outsb
pop
adc
lds
repz
xchg
hlt
jne
adc
fs
or
fnstenv
pop
cmp
mov
push
push
loope
bound
out
bound
scas
pop
in
or
and
mov
pop
fwait
mov
xchg
outsb
fisttpll
sub
push
mov
xor
ljmp
and
and
out
inc
bound
lret
in
data16
push
inc
subl
xlat
imul
jp
push
mov
lcall
cmp
jle
bound
test
push
enter
dec
mov
movsl
xor
aaa
inc
pushf
adc
mov
in
xor
cmp
pop
aad
clc
push
repz
or
xchg
mov
out
or
call
inc
sbb
cmp
inc
rorb
sub
push
pop
fcmovne
sub
dec
clc
in
xor
stos
mov
dec
outsb
aam
js
pop
cs
xlat
add
andb
fcoml
movsb
dec
pop
dec
dec
inc
inc
bound
jmp
cltd
insb
pop
insl
pusha
push
cmpsl
scas
or
cmpsl
lret
out
leave
imul
push
paddusb
js
cmp
aas
mov
loope
lea
addr16
or
lock
add
addl
imul
mov
jno
jne
rorb
outsl
jnp
mov
mov
test
push
dec
ret
dec
jp
mov
xchg
push
mov
xchg
lea
cli
bnd
jmp
testl
or
out
shlb
add
cmp
ljmp
mov
sub
call
jmp
popa
pop
movsl
push
std
rclb
xor
call
call
inc
popf
jp
pop
add
call
data16
movb
lret
dec
les
mov
push
dec
call
xor
aad
in
mov
xchg
pop
mov
or
sbb
sahf
jle
inc
mov
or
call
dec
cmp
sbb
add
jns
in
sub
xchg
pusha
xchg
aad
clc
xor
mov
sbb
push
xchg
push
adc
pop
dec
imul
cltd
cwtl
and
pop
cmp
push
fisttpll
loopne
dec
dec
cltd
mov
xchg
mov
les
ficompl
dec
aad
sub
ljmp
int
pop
mov
add
popa
xchg
test
sbb
das
ljmp
mov
shrl
and
pop
gs
push
lret
aas
xor
test
sahf
push
movsb
loope
jmp
xchg
insl
cs
js
or
push
push
loope
add
mov
cmp
test
insl
imul
pusha
call
xchg
pop
je
mov
cmpsl
cmp
adc
push
stos
dec
sbb
aad
and
das
push
or
inc
fwait
and
out
dec
push
cltd
fnstcw
das
dec
or
xchg
dec
pop
cmp
inc
hlt
dec
out
dec
int3
cltd
inc
mov
int
xchg
jnp
test
and
aad
jmp
push
loopne
xchg
mov
sub
pop
icebp
shlb
enter
loope
imul
mov
roll
imul
xor
stos
test
inc
xorl
aas
pop
sbb
mov
mov
jnp
inc
jno
sbb
js
add
pushf
test
xlat
ljmp
movsl
dec
push
in
jns
sbb
cmpsl
mov
xor
sahf
push
xor
mov
and
stos
test
push
ret
std
push
sbb
or
ret
dec
sub
push
lret
push
inc
mov
inc
fnstcw
xchg
push
mov
and
test
inc
adc
in
movsb
ret
outsl
lea
and
cli
lahf
pop
mov
mov
out
and
dec
or
inc
jne
enter
sbb
jns
mov
addr16
outsl
xor
stc
enter
jae
ret
cmp
ljmp
add
or
fs
add
push
in
fists
arpl
pop
leave
mov
or
xor
xor
jns
hlt
pusha
sbb
iret
call
test
adc
into
bound
arpl
push
cmpsl
pop
mov
or
push
sub
jle
inc
mov
es
mov
enter
push
xor
mov
orb
ja
lock
insl
arpl
fwait
or
cwtl
pop
rol
inc
or
loope
mov
mov
add
jb
pop
lret
in
lahf
and
clc
push
push
imul
dec
push
push
xor
pop
popf
filds
push
in
pop
notb
or
pushf
cmp
subb
loope
aad
inc
ret
cmpsl
aas
cli
clc
adc
test
clc
hlt
in
add
pop
and
or
sub
imul
and
in
lret
pop
adc
pusha
rorl
cltd
stos
std
outsb
xor
dec
ljmp
pop
xchg
fldenv
in
jp
in
lds
in
cmp
stos
dec
xchg
xlat
push
idivl
mov
xchg
xor
mov
arpl
xchg
pop
cmp
sahf
in
or
jmp
cmp
aaa
pop
imul
mov
pop
cmp
sub
sub
aam
and
loop
movsl
in
pop
movsb
dec
fwait
mov
push
or
push
fwait
testl
sbbl
sbb
mov
dec
mov
data16
imul
cltd
addr16
cltd
dec
data16
aas
push
hlt
vmovmskps
pop
jmp
rcll
lods
ss
push
xor
dec
and
dec
loopne
and
shrb
pusha
pop
add
sub
cld
mov
pop
outsl
aad
fisttpl
bound
adc
sahf
imul
add
mov
push
jecxz
push
inc
cmp
xor
push
imul
push
outsb
cmpsl
pop
imul
cli
mov
sbb
push
mov
imul
in
jmp
lock
mov
mov
fs
sahf
sub
and
out
cmp
call
cmp
leave
lods
xor
cltd
aaa
mov
enter
arpl
jns
outsb
mov
or
adc
adc
movsl
outsb
sub
frstor
mov
movsl
in
sbb
push
xor
jo
loop
repnz
and
ljmp
inc
sub
mov
mov
addb
negb
out
popf
push
out
ja
icebp
sbb
ret
mov
inc
adc
dec
and
std
dec
cmc
xor
mov
xchg
xchg
adc
fwait
pushf
mov
rol
stos
fucomip
inc
mov
jne
iret
enter
sar
xlat
mov
arpl
sbb
mov
xchg
pcmpgtd
cmpsl
test
fcompl
xchg
jp
mov
bound
inc
xchg
stos
addr16
sub
or
aad
ret
xor
pop
les
sbb
sti
mov
sahf
in
aam
and
xchg
sbb
inc
fistl
inc
ljmp
lock
mov
push
js
xor
sbb
imul
sub
loope
arpl
aad
out
fstl
mov
adc
out
xchg
movsb
jnp
shrl
cmp
push
xor
or
jp
cmpsb
out
fsubs
mov
and
jmp
sbb
lods
pop
andb
adc
cmpsb
dec
push
sub
pop
jge
mov
jbe
mov
lds
inc
cmc
cmpsl
pop
daa
push
jb
cmpsb
pushf
push
push
stos
loopne
adc
push
xor
mov
pop
cmpsb
es
cmpsb
aas
stos
mov
mov
fwait
mov
shll
lods
sub
mov
mov
sub
fisubrl
adc
inc
lea
inc
in
lods
fucomp
fsts
int
test
sahf
dec
gs
jp
mov
lcall
pop
insb
mov
pop
pop
testl
sti
bound
xlat
cmp
add
testb
lret
aas
ds
loopne
and
and
sbb
fsubs
and
stos
rcrb
sub
push
jmp
mov
lret
loope
loopne
jmp
sarb
xor
sub
popa
sub
dec
aad
sub
inc
xchg
dec
loope
test
jle
lods
fs
push
fdivrs
imul
sub
inc
dec
movsl
fldt
cs
cmp
bound
mov
and
and
data16
push
popf
imul
jle
cmp
test
dec
js
or
jbe
sub
mov
push
push
sbb
hlt
dec
movsl
cmp
mov
sahf
push
sbbl
call
mov
and
sbb
jge
fcoml
movsl
and
js
pop
fmull
adc
push
and
xor
outsl
in
sbb
rorb
cltd
dec
cmp
gs
in
in
fisubrs
hlt
mov
orl
jge
mov
rol
xchg
aaa
adc
or
aas
testl
inc
jmp
or
inc
cmp
les
jmp
push
loop
mov
adc
xor
sbb
mov
dec
pop
xchg
xor
movsl
xor
sti
lret
pop
loop
call
repz
cmp
sbb
mov
xor
and
adcb
popf
out
scas
cmp
popf
sbb
stc
dec
sbb
sbbb
das
fadds
lods
cmp
scas
mov
inc
movsl
jle
outsb
cmp
enter
stos
xor
mov
xchg
add
gs
or
outsb
loope
mov
jnp
pop
pop
cmp
stc
es
gs
scas
int
ret
and
xor
ljmp
jmp
fisubrs
jae
insb
loope
imul
pop
std
push
mul
icebp
pop
jmp
pop
call
xchg
popa
ds
mov
add
and
fisttps
push
addl
sub
jmp
movb
dec
fldcw
cs
mov
pop
jp
int
aas
lahf
mov
jmp
loopne
cs
add
icebp
cs
scas
xor
xchg
stos
clc
lock
loop
push
sarl
and
adc
out
push
mov
push
pop
mov
xor
cmc
cltd
out
dec
pop
and
js
jmp
sub
iret
jge
bound
sub
pop
adc
dec
or
dec
fbstp
les
push
push
fmuls
loop
or
mov
push
cltd
or
adc
out
enter
and
cmp
cmp
dec
cmp
cmp
aaa
pop
jp
pop
cmp
ds
lea
sub
push
test
negl
and
fmull
pop
in
popa
dec
pop
incl
jp
ljmp
or
pop
inc
push
add
mov
data16
sbb
test
mov
or
jnp
nop
push
and
lods
jnp
inc
xor
fildl
jmp
pop
out
lock
or
out
repz
sbb
sbb
call
pop
adc
push
cwtl
dec
test
data16
iret
ljmp
in
pop
push
xor
xchg
in
out
test
aad
movsb
in
adc
test
inc
popf
or
roll
mov
mov
in
or
push
adc
imul
jb
jmp
cmp
sub
pusha
push
outsl
xchg
test
xor
or
dec
cmpsb
ss
cmpsb
sub
mov
jg
mov
or
cmpsb
push
daa
jnp
push
je
pop
adc
addr16
sbb
xor
lock
fs
sbb
test
push
cmpsb
cmp
daa
cmp
fmulp
aad
add
gs
and
gs
push
adc
push
in
adc
push
out
or
and
data16
mov
and
adc
arpl
lock
add
pop
push
fsts
insl
ds
inc
jns
pushf
mov
and
dec
mov
outsl
daa
push
jl
test
fistpl
pop
std
dec
rorb
dec
push
sub
jno
loopne
jbe
mov
popa
inc
test
outsl
mov
jne
cmp
adc
in
clc
enter
cmp
mov
push
es
and
jnp
pushf
ret
xchg
bound
mov
sbb
or
cmpsl
in
inc
mov
arpl
xchg
sbb
mov
stos
gs
adc
aad
sub
push
xchg
sarl
sarl
push
fadds
adc
push
imul
mov
or
cmp
call
xor
scas
jge
dec
lahf
roll
arpl
xchg
xor
data16
or
and
jno
xchg
push
cmp
mov
cmp
jmp
jns
ljmp
add
jecxz
mov
mov
mov
aas
fnstcw
sar
adc
mov
dec
in
test
fsubrl
jmp
test
push
push
cmp
and
push
mov
cltd
push
inc
dec
xor
sbb
mov
pop
popf
push
sbb
lock
lock
popa
xchg
adcb
stos
pop
shll
aam
aad
push
in
lahf
push
add
adc
clc
and
test
xchg
in
gs
arpl
dec
mov
arpl
xor
rcrl
xor
js
xor
jg
adc
and
inc
xor
xor
fnsave
inc
ljmp
push
inc
call
fs
aas
add
push
cmp
rolb
in
movsb
cmp
sub
roll
adc
dec
data16
xchg
jl
cld
xor
pop
stos
movsl
sub
popf
jae
repz
sub
push
pop
sub
lock
sub
outsb
pop
idivb
xchg
imul
sbb
mov
fsubl
bound
fs
pop
xchg
xor
mov
dec
clc
fwait
cmp
test
repz
xchg
outsb
jns
sub
mov
xor
cmc
sub
scas
push
push
sbb
dec
loopne
adc
adc
leave
xchg
test
repz
shlb
add
xchg
xchg
xchg
insl
dec
dec
or
pop
into
gs
ficompl
lds
enter
push
inc
aad
clc
cli
sub
repnz
xchg
hlt
dec
xchg
adc
loop
insb
mov
shlb
sbb
pop
mov
mov
cmpsl
jg
es
cmp
mov
sarb
std
in
mov
gs
addr16
ret
push
push
test
cltd
and
xchg
inc
out
jmp
clc
xchg
mov
out
xchg
cmp
pushl
aas
mov
push
sarb
loope
mov
or
and
adc
adc
and
sub
pop
cmc
scas
and
in
mov
sub
inc
jecxz
in
scas
cmp
pushf
test
ljmp
data16
dec
movsl
iret
fisubrl
jne
xor
push
xor
aas
int3
mov
push
sub
and
push
cs
jmp
and
es
push
repz
xchg
push
dec
sti
and
xor
pop
gs
or
push
inc
add
movsl
xor
lds
and
pop
into
shll
xor
add
aaa
sub
xor
stos
or
inc
push
cmp
mov
mov
or
inc
jbe
xor
pop
out
jns
push
das
lods
xchg
ds
add
xlat
pop
clc
add
movsl
fiaddl
mov
in
sbb
sbb
fs
pop
gs
andl
and
sbb
cmpsb
fsubs
xchg
fidivrs
sub
mov
out
or
and
xchg
sub
dec
in
cmp
in
stos
dec
or
jno
imul
aaa
inc
pusha
pop
mov
pop
out
dec
stos
ljmp
xchg
jmp
adc
inc
js
call
dec
mov
pop
xor
push
cmp
divl
gs
pop
pushf
ljmp
adc
cmp
rorl
dec
cmpsl
xchg
das
sub
mov
push
daa
mov
imul
ja
cmp
in
push
in
dec
cmp
in
scas
xchg
jno
xchg
push
ljmp
clc
adc
dec
push
test
lock
out
sbb
jmp
lock
lds
pop
xor
push
or
test
imul
cmp
xchg
stos
pushf
aaa
dec
leave
push
jmp
push
subl
out
pop
jo
orl
fnstcw
xor
ds
outsl
out
push
lret
or
sub
and
jg
xchg
fwait
inc
xchg
mov
cmc
add
or
popa
pop
mull
les
movsl
std
shll
imul
pop
div
ja
mov
test
fscale
scas
aam
cmp
call
int
bound
out
or
arpl
dec
xchg
loopne
clc
sub
lods
xchg
mov
mulb
xor
cmpb
test
dec
rcl
add
sbb
push
cwtl
xchg
outsl
dec
jmp
push
and
dec
pushf
push
dec
mov
punpckhbw
sahf
cmc
lods
imul
andl
jl
sub
mov
rcll
or
jno
push
pop
shlb
ja
dec
or
repnz
sbb
lcall
pop
mov
mov
aam
cmc
jecxz
jb
pushf
sbb
lds
ss
popf
lahf
lods
push
movsb
mov
xor
stc
mov
sti
in
or
xchg
int3
ja
sbb
xor
movsb
iret
mov
cmpsb
stos
lods
repnz
xor
jns
push
xchg
cmp
insl
dec
es
mov
aad
mov
inc
xchg
ljmp
push
mov
xchg
adc
fs
cmp
xor
int3
xor
mov
xchg
je
stos
xchg
jnp
loope
pop
pop
pop
pop
or
inc
and
inc
jno
xchg
sub
movsb
cld
ret
scas
push
out
mov
inc
enter
pusha
mov
or
push
sub
sub
and
lods
data16
jmp
loop
jge
cmc
dec
cld
or
rol
or
jmp
mov
repnz
inc
cmp
aam
stos
jmp
xchg
movsl
imul
insl
mov
aad
in
insb
pop
adc
ret
es
mov
scas
out
sbb
lock
adc
es
mov
mov
clc
test
aaa
ds
sub
fldt
inc
stos
jbe
aad
cmpsl
mov
aad
cmp
add
jmp
shrl
je
jg
ficoml
or
xor
mov
cwtl
cmpsl
inc
push
adc
jle
fcomip
rorl
arpl
enter
mov
inc
add
xchg
pop
pop
cmp
lock
push
mov
clc
push
mov
push
mov
push
mov
mov
in
add
pop
jne
jbe
pop
fwait
mov
add
cs
stos
dec
fisttpl
xchg
jae
sahf
enter
out
daa
fcoml
sbb
mov
adc
bound
xor
jb
lods
cmp
call
clc
outsb
cmp
xor
mov
adc
mov
insb
add
into
sbb
push
or
mov
daa
cs
insl
push
xor
out
ret
lods
adc
jns
data16
test
sbb
pop
push
sahf
popa
in
mov
fwait
and
cli
sub
sub
cmp
sbb
xchg
arpl
mov
lahf
movsb
test
mov
ds
adc
loope
rcrl
inc
mov
xchg
dec
fcoml
jl
xlat
stos
andl
es
pop
xorb
mov
lea
call
mov
and
test
push
jle
inc
dec
xor
and
jne
inc
les
fwait
repnz
mov
sub
push
fmull
bound
dec
stos
lret
repnz
in
int
scas
repz
jns
pop
cmpsb
leave
jl
cld
xchg
popf
jae
inc
subl
dec
pop
xchg
shrl
aas
pop
jo
adcb
ljmp
dec
paddd
sbb
mov
jp
fldcw
loopne
fildl
insb
dec
insb
xchg
incl
fisttpl
xchg
ret
popf
jae
sbb
or
sahf
out
aam
xor
aas
push
ss
mulb
xor
int
push
adc
push
add
in
lret
sbb
jnp
lods
std
xchg
sbb
loopne
mov
push
or
xor
cmp
leave
sahf
mov
jl
bound
sti
lahf
dec
or
pop
mov
cs
jns
fists
xchg
sar
sub
xor
or
aaa
movsl
xchg
rcl
add
pushf
std
cmp
adc
mov
hlt
fwait
insl
lea
dec
aaa
shlb
or
cmpsl
je
cmpsb
push
mov
mov
adc
cwtl
push
iret
test
pop
fildl
roll
xchg
sub
jge
dec
sbb
cmp
or
pop
out
adcb
push
sarl
adc
out
mov
iret
aaa
cltd
mov
adc
pop
ficomps
lahf
xor
lahf
lds
test
or
sti
stos
mov
rcr
xchg
popf
sub
fists
push
cmpsl
or
out
mov
dec
cmp
movsl
ret
dec
fistpll
mov
sahf
lret
mov
mov
inc
into
or
mov
sbb
xchg
xor
je
sub
or
mov
hlt
std
icebp
addr16
pop
mov
aam
sbb
mov
iret
cs
adcl
out
or
pop
xor
dec
xor
mov
clc
lahf
push
cwtl
jl
xchg
cmpsl
in
jp
sti
test
test
or
sbb
lods
mov
push
push
push
sbb
cmpsl
xchg
jb
pop
aad
push
mov
setg
inc
add
scas
idiv
mov
pushl
pop
cmp
push
mov
into
or
movsl
fnsetpm(287
dec
rolb
pushw
push
push
sbb
inc
adc
cmc
adcl
jle
or
push
or
xchg
shrl
or
pop
xor
dec
push
loopne
pop
negb
inc
call
mov
repnz
imul
xchg
push
enter
dec
cmp
xchg
pop
adc
enter
xor
cmp
and
inc
pop
ljmp
cmp
sub
ds
das
dec
sub
or
adc
aaa
flds
inc
test
aad
in
or
pusha
cmc
dec
mov
add
xor
fstpl
into
in
daa
lods
stos
cld
mov
clc
les
jg
clc
out
push
inc
movsl
inc
das
aaa
xor
push
fldcw
push
add
fwait
mov
pop
clc
jb
adc
push
sbb
sarb
sub
push
divb
xor
lods
aas
xchg
movsb
imul
sbb
mov
mov
jns
jecxz
lret
xchg
pop
or
call
mov
or
pop
dec
gs
adc
jmp
jne
out
mov
jmp
dec
out
fcoms
dec
jae
jg
xchg
pop
test
xor
hlt
or
xorb
mulb
sub
aad
sbb
gs
mov
pop
inc
fbld
movsl
orb
and
test
mov
jns
and
xor
out
adc
imul
sbb
aam
clc
adc
push
mov
or
cwtl
inc
sub
mov
add
lcall
or
push
or
dec
aam
insb
cmp
pusha
pop
jbe
mov
inc
jne
cmp
fsubl
enter
loopne
imul
je
pushf
rorb
loope
imul
jge
ds
mov
adc
cmc
imul
xlat
mov
push
xchg
rcl
arpl
push
xchg
cmp
lahf
adc
mov
or
shrl
xlat
gs
in
push
pop
jecxz
dec
jl
andl
in
dec
sub
movsb
cltd
adc
stos
inc
je
pop
and
pop
push
stc
int3
loope
imul
or
popf
and
add
and
popfw
and
pushf
fwait
insb
pop
push
cmpsb
jns
or
add
inc
popl
lods
ror
mov
out
fisubs
pop
pop
pop
stos
push
roll
xor
in
pusha
xchg
hlt
cmp
test
daa
fdivl
push
in
stos
xchg
adc
and
push
or
xor
and
sti
mov
dec
and
fucomip
adc
cmpsl
or
int3
mov
add
inc
mov
sbb
xchg
pop
inc
imul
dec
hlt
shl
hlt
push
lea
inc
lret
mov
jp
push
inc
dec
leave
and
lret
fst
pusha
rol
push
pusha
cmp
lea
jno
lret
dec
dec
test
mov
pop
clc
ja
mov
incl
and
bound
pop
addr16
cmpsb
sbb
lret
mov
jmp
xor
push
push
pop
or
call
loopne
push
outsb
cwtl
imul
xchg
cltd
movsw
lahf
sub
mov
mov
xchg
je
add
cmp
cli
outsb
jmp
mov
xchg
popa
xchg
mov
add
sarb
mov
cmpsl
jns
dec
inc
pusha
in
shrl
arpl
jne
test
sbb
lret
mov
lock
pushf
fs
mov
inc
loope
cmpsl
imul
popf
testb
mov
mov
lods
or
cld
pusha
adc
cli
fwait
adcb
mov
pop
mov
rcll
push
in
push
faddl
cmp
sbb
jge
cmpsb
fadds
adc
or
pop
lock
push
out
push
ret
mov
xor
jnp
pusha
or
dec
sarb
pop
xor
push
lds
mov
ljmp
or
repnz
pop
ret
mov
adc
push
adc
dec
les
mov
stc
lods
jp
fcmove
xor
add
mov
xor
jne
or
ja
push
and
fcoms
es
js
les
inc
hlt
push
sbb
xchg
jp
jo
rclb
dec
mov
leave
mov
cmpsl
jecxz
cmpsb
adc
mov
sub
imul
xchg
dec
mov
sbb
cmpsb
mov
pop
sub
push
xor
mov
mov
push
pop
ljmp
push
push
and
sbb
cmp
les
and
gs
fimull
ret
xchg
mov
and
sub
inc
cwtl
xchg
adc
push
inc
push
jp
mov
xor
jge
cmpsb
mov
imul
addr16
jge
or
cmc
mov
sbb
dec
sub
xchg
adc
jno
push
ficoms
addb
int
in
xor
popa
jnp
and
jmp
cmp
orl
gs
and
sti
push
gs
imul
xchg
cli
sbb
cmp
sub
cmp
movsb
xchg
pop
mov
insb
cltd
gs
sbbb
lods
or
dec
adc
jge
or
outsl
mov
cmp
push
dec
test
insb
shrb
lods
insb
stos
mov
in
push
inc
adc
dec
sub
iret
or
mov
or
enter
orb
daa
jg
loope
sub
lods
push
imul
addb
orb
inc
xor
fdivrs
fs
arpl
mov
cs
gs
xor
push
mov
insl
xchg
in
and
jo
mov
mov
cmc
aas
sub
je
add
rclb
subb
jmp
lret
xchg
shlb
pop
or
mov
aam
push
adc
push
dec
fs
push
mov
cmp
and
shlb
dec
add
inc
push
pusha
cmp
xchg
movsl
or
stc
adc
fdivr
and
mov
lds
movsl
xor
jmp
out
add
mov
mov
cwtl
mov
dec
mov
popa
dec
xchg
sub
imul
xchg
pop
sahf
arpl
lds
push
jecxz
notb
sub
or
dec
push
pop
loope
dec
dec
hlt
inc
roll
inc
mov
mov
jge
es
mov
push
add
or
sub
js
ss
pop
and
ljmp
rorl
inc
insb
or
sub
xor
in
rorl
aam
pop
inc
xchg
lret
push
pop
movsb
fst
cmpsl
bound
inc
mov
aad
movsb
dec
icebp
adc
lea
dec
mov
mov
fprem
mov
fsubrl
insb
sbbl
ret
gs
lods
xor
scas
and
nop
cmpsb
data16
int3
pop
lds
cli
scas
inc
ret
iret
out
cmp
vandnps
hlt
outsl
movsl
pop
stos
rol
pop
xor
xor
add
fs
xchg
jg
cltd
jne
mov
cmp
pop
push
pop
out
xor
add
xor
scas
xchg
mov
negb
inc
pop
jb
xchg
shrb
mov
xor
outsb
rcll
mov
push
sbb
push
lock
adc
xor
dec
mov
movsl
cmpsb
arpl
sti
rolb
jmp
adc
jecxz
lock
movsb
xchg
xor
cmp
cmc
gs
sbb
cmp
lock
popa
pop
xor
clc
or
and
rorl
stc
cltd
movsb
mov
push
rcrl
mov
stos
daa
lods
shll
shrl
in
or
imul
jns
pop
dec
cltd
xor
pop
jmp
out
mov
push
pop
loop
dec
pop
add
jp
pushf
or
xchg
sarb
lcall
mov
out
test
xchg
sbb
or
or
cld
lods
jle
push
jp
iret
pop
push
cltd
jmp
fisttpl
mov
sbb
jne
in
mov
add
adcb
enter
push
xchg
pop
sub
movl
inc
aad
xchg
jg
mov
push
adc
iret
jmp
push
int3
out
arpl
lcall
bound
popf
aam
xchg
lods
pop
ja
outsb
or
test
inc
push
jl
addr16
out
pop
gs
pop
repnz
add
pop
sbb
xchg
cmp
inc
ja
jecxz
orb
mov
push
jecxz
test
and
bound
jmp
mov
pop
adc
dec
xlat
mov
pop
inc
not
iret
sahf
jno
imul
pop
gs
shlb
ja
flds
clc
loopne
mov
dec
adc
pop
mov
mov
es
jnp
dec
icebp
xchg
in
aad
xor
lds
lret
cmp
push
xor
neg
ljmp
daa
enter
mov
and
out
sub
out
mov
inc
fcoms
jmp
pusha
adc
jmp
es
jmp
xor
xchg
pop
pop
fildll
fwait
sub
sbb
mov
mov
mov
movsb
push
shr
aam
xchg
pop
push
movsb
ja
push
inc
rcll
std
addr16
push
inc
les
test
inc
ror
jno
add
aad
cwtl
hlt
fadds
clc
cmp
xor
aad
into
frstor
lea
mov
shll
lret
fst
pop
mov
leave
dec
dec
sub
shll
sbb
fiadds
test
mov
es
dec
test
int3
cmpsl
lods
out
ficomps
test
aad
fistpl
push
mov
andl
test
mov
xchg
xchg
das
inc
std
pop
mov
push
push
sub
xlat
sub
sbb
addr16
xchg
inc
xchg
sub
dec
loop
adc
jb
pushf
mov
iret
push
adc
gs
jno
dec
test
pop
inc
dec
dec
sbb
ss
mov
xor
stos
es
jecxz
sub
xlat
pop
adc
hlt
mov
dec
sub
sbb
mov
lock
jp
loopne
shll
ja
dec
cli
bound
rcll
sub
outsl
sbb
mov
stos
fnstenv
subb
arpl
negb
adc
iret
loopne
jnp
inc
push
gs
in
fstpl
gs
jg
or
mov
and
cmp
fwait
je
mov
mov
jns
test
cltd
clc
mov
mov
jmp
xchg
adc
test
push
fs
jbe
xlat
call
inc
lcall
jmp
loope
xchg
ret
inc
dec
sahf
xor
lret
enter
ret
int
mov
ljmp
adc
mov
mov
aad
insb
mov
ss
inc
les
pop
and
add
push
and
mov
mov
mov
shlb
js
arpl
and
ljmp
lods
clc
sahf
cs
push
roll
clc
lahf
test
xor
mov
mov
xchg
sub
xchg
int
add
shlb
xchg
enter
dec
and
lret
sbb
cltd
push
push
aaa
add
mov
std
push
cmpsl
rcl
dec
stos
in
cwtl
and
cmp
dec
dec
sub
add
inc
push
outsl
loope
bound
or
sub
jmp
cmpsl
adc
dec
mov
rcll
dec
xchg
and
ss
sbb
fs
xor
lcall
rolb
pop
fldenv
shll
pop
lock
add
xchg
pop
jmpw
ljmp
ss
mov
push
push
out
pop
mov
cmpsb
sub
pop
and
gs
lea
lds
xor
push
pop
sar
fnstsw
popa
add
pop
xor
sbb
scas
loop
in
and
inc
es
xchg
imul
cmp
aaa
lret
out
notb
adc
push
xchg
dec
mov
aam
dec
inc
inc
movsl
test
ret
or
fimull
pop
movsb
dec
outsb
sbb
js
stos
in
lds
movsb
shrl
dec
test
aas
pushf
lock
in
cmpsl
inc
sbb
add
pusha
lock
dec
stos
sbb
sarl
push
mov
les
pcmpgtd
pushf
pop
out
mov
push
dec
mov
xchg
mov
sub
cmp
mov
xchg
mov
fisubl
stos
and
or
jbe
pop
xor
dec
pusha
mov
arpl
mov
dec
mov
mov
sub
dec
jne
cmp
lods
xchg
pop
pop
aaa
push
inc
sub
lds
jne
push
and
xchg
sbb
dec
mov
push
pop
in
add
pop
xor
and
sarb
popf
ja
xchg
enter
pop
nop
or
push
push
pop
sub
push
sbb
test
jno
adc
pop
xchg
es
inc
and
pop
add
and
lock
add
sub
mov
adc
sbb
addr16
and
push
in
imul
aam
jnp
std
mov
xlat
push
jp
inc
dec
push
add
push
aas
mov
push
inc
and
or
sti
loope
popa
insb
andb
jmp
mov
mov
mov
dec
dec
pop
push
push
ds
leave
arpl
push
aas
mov
addl
dec
jns
dec
and
shll
inc
pop
pusha
add
les
sub
scas
shl
mov
imul
sub
pop
dec
xor
leave
push
mov
loope
ds
mov
es
xchg
or
sub
and
dec
in
pop
test
imul
xchg
aam
mov
test
bound
mov
fwait
sub
mov
push
or
ja
xor
daa
arpl
mov
mov
push
lret
aas
jp
or
andl
int3
rcrl
pop
test
adc
out
lcall
dec
add
das
dec
and
out
push
mov
xchg
push
mov
idivl
push
xchg
pop
sbb
pop
lods
repz
xchg
es
xchg
cmp
sti
stos
icebp
lock
pusha
mov
cwtl
stos
mov
xor
add
aad
test
jnp
inc
and
js
xor
in
aaa
jmp
pop
xchg
add
push
xchg
pop
mov
popa
dec
sub
add
pop
es
push
hlt
int3
xor
aam
enter
pop
jb
nop
das
faddl
xchg
sbb
pop
std
in
adc
pop
mov
cli
xchg
push
stos
or
jle
push
mov
or
dec
adc
push
cmp
xchg
insl
cmp
sbb
icebp
sbb
inc
cmp
lret
leave
in
or
push
fnstcw
in
mov
push
push
sub
pop
xor
test
rolb
ds
xchg
fimull
cld
loope
mull
mov
dec
fs
jns
mov
ds
mov
pop
imul
bound
aad
in
out
inc
xchg
test
fcmovnb
jbe
outsl
sbb
fs
movsl
cmp
add
pop
dec
dec
add
add
adc
aad
inc
test
and
call
das
xor
xor
pop
lahf
lods
fwait
inc
mov
lods
out
or
in
subl
jae
lret
rcrb
xchg
cmp
or
stos
xchg
inc
inc
es
adcb
ss
push
call
js
xor
xchg
aam
and
adc
xchg
xchg
loope
sub
bound
dec
push
pop
pop
add
loopne
dec
pop
push
out
movsl
scas
mov
test
cwtl
fidivrl
pusha
pop
push
int
addr16
adc
iret
loop
push
insl
or
sub
inc
adc
movsl
movsl
adc
test
ficoml
jnp
les
insl
mov
mov
test
mov
push
cld
pop
out
repnz
xor
bound
shlb
add
sbb
scas
sbb
fimull
inc
jae
shll
mov
inc
and
mov
adc
pop
dec
jl
icebp
xchg
adc
shrl
inc
xor
pop
or
bound
adc
gs
out
lret
cmp
or
test
cmpsl
orl
jg
mov
adc
das
cmp
scas
pop
or
into
xchg
pop
outsl
movsl
mov
outsl
push
scas
sub
jmp
xor
push
mov
and
xchg
scas
inc
cmp
mov
jg
sub
xchg
aam
out
in
jo
adc
loopew
lahf
gs
add
int3
mov
mov
fwait
cmp
pop
aam
aas
iret
jmp
ss
jb
adc
lds
orl
cmpsl
adc
and
dec
pushw
sbb
mov
in
movsl
loop
mov
test
or
sub
add
loop
push
or
test
dec
and
mov
outsl
lods
mov
in
push
ret
push
or
pop
sbbl
aad
arpl
faddl
call
mov
cld
aas
imul
or
mov
and
mov
push
xchg
icebp
cmp
xchg
js
mov
mov
mov
push
popa
cltd
xchg
fmul
sbb
push
cmp
aas
fadds
add
xchg
bound
mov
cmpb
addr16
sar
aad
jl
pop
jge
leave
sbb
pop
pop
push
xchg
dec
iret
xchg
mov
dec
out
ss
lret
push
cltd
pop
xor
lret
bound
sub
push
aad
insb
into
pusha
pop
and
xor
xchg
or
es
addr16
ljmp
inc
dec
lock
or
cmp
jb
xor
fs
inc
data16
push
or
negl
or
sub
xor
jnp,pn
mov
dec
sub
js
lcall
cmpsb
or
pusha
cmp
mov
and
js
aaa
xor
cltd
ret
dec
test
lock
andl
mov
int3
jl
fdecstp
cli
mov
rolb
xor
test
popf
pop
adc
ljmp
or
push
sbb
int
adc
lods
stc
pushf
lahf
or
xor
rolb
arpl
adc
das
lahf
lock
xor
push
push
or
and
sub
in
cmp
lcall
orb
sub
call
push
test
pop
cwtl
jg
stc
mov
mov
lret
adc
fwait
or
cmp
and
or
addr16
mov
das
bound
sbb
shrl
outsl
adc
pop
testl
popa
jo
sub
xchg
mov
push
es
dec
mov
mov
dec
push
test
movsb
ret
jg
outsb
shlb
les
in
sbb
scas
ljmp
fwait
adc
stc
daa
mov
ss
pop
iret
xchg
aas
sbb
loope
xor
scas
cmpsl
aad
sub
nop
jg
bound
sbb
test
mov
adc
pop
fs
loopne
and
addr16
subl
cmp
das
movsb
ss
sub
sub
stc
addr16
pushf
es
pop
cmp
mov
test
fdivs
push
inc
fmulp
in
add
push
pop
and
fwait
inc
sti
dec
push
sbb
add
test
nop
push
sub
icebp
sahf
push
mov
pop
inc
add
inc
mov
bound
mov
inc
sub
es
leave
dec
or
repnz
lock
mov
push
inc
pop
inc
inc
cmp
xchg
cltd
rorb
cmpsl
daa
aaa
inc
daa
shlb
outsl
jo
adc
fnstsw
fisubl
sub
std
push
xchg
cmpsl
sub
lahf
jne
dec
push
lds
mov
dec
pop
sub
addr16
ss
lea
inc
mov
adc
cmp
add
and
int
dec
lcall
ss
ljmp
divl
shrb
xor
inc
add
push
fimull
fdivs
inc
push
es
aam
push
pop
sub
cld
lock
notb
push
pop
add
dec
or
pop
outsb
sub
mov
sub
outsb
jne
pusha
andb
mov
lcall
inc
push
and
xchg
inc
pop
jns
xor
ret
mov
sub
mov
pop
arpl
sbb
bnd
in
cli
sub
fldcw
dec
clc
dec
daa
outsl
mov
scas
popf
fwait
je
xchg
mov
ds
xor
pop
xchg
and
mov
sub
popa
fs
adc
mov
fwait
js
lret
outsl
insl
aam
test
mov
pop
imul
rclb
sbb
and
mov
daa
adc
fildll
inc
or
pop
pop
sbb
cltd
or
clc
cmpsl
cmpsb
pop
adc
or
js
fwait
push
out
les
shlb
in
push
mov
mov
xchg
mov
push
out
test
int
ljmp
ss
lock
je
cltd
or
or
adc
cmp
in
inc
mov
and
or
clc
outsl
cmp
pop
adcb
sbb
mov
pop
dec
push
dec
movsl
sbb
test
test
outsl
out
or
insl
add
imul
call
shlb
out
cwtl
lock
xchg
insb
loopne
test
cmp
decb
test
ss
mov
movsb
pop
ljmp
mov
and
lret
sbb
xor
in
sub
and
loope
sub
pop
mov
sub
or
add
bound
mov
mov
add
stos
out
sub
and
sbb
or
scas
add
sub
addr16
fwait
js
dec
pop
aad
sub
push
jmp
mulb
mul
pusha
cwtl
fnstcw
in
out
ds
cmpsl
sbb
cwtl
mov
mov
pop
cmp
das
repz
mov
jmp
xchg
xor
stos
xor
test
out
divb
dec
cmp
mov
insb
push
daa
push
xor
inc
or
xchg
add
mov
sub
xor
sub
xor
or
xor
pop
dec
pusha
and
lods
repz
sbb
mov
push
fadd
outsl
pusha
pop
dec
push
addr16
dec
push
call
and
fwait
adc
lret
push
pop
or
xor
and
adc
or
shrl
rcll
inc
shufps
xchg
pop
lret
jge
fucompp
hlt
push
inc
pop
pop
mov
add
out
and
xlat
cld
dec
sub
mov
cmp
stc
pusha
loopne
movsl
sti
js
xor
repz
push
mov
xor
fs
mov
ljmp
shll
jb
cmp
pusha
push
imul
ljmp
aad
dec
push
push
aad
push
repz
in
fnstcw
jbe
jb
jb
pop
dec
inc
and
push
ljmp
push
push
dec
sbb
mov
pop
pop
lea
addr16
data16
outsl
xchg
mov
popa
and
cmpsb
mov
addr16
rclb
out
adc
fcomps
ljmp
std
incb
add
push
lcall
cmp
push
sbb
jmp
push
in
inc
sub
inc
sbb
inc
xlat
daa
ficoml
decl
aam
cmpsl
or
insb
xchg
push
cmp
add
push
xor
dec
lret
les
mov
adc
xor
cs
lods
add
movsb
pushf
les
push
dec
in
frstor
xor
xchg
adc
cmp
sbb
jl
jmp
xor
adc
add
loope
xchg
inc
jnp
jb
fucom
test
pop
test
ss
dec
popl
arpl
sbb
cwtl
mov
sbbl
inc
dec
pop
pop
or
fmull
cmp
and
inc
lea
mov
add
les
fmull
out
dec
stos
pop
dec
bound
fists
adc
jo
sub
cmp
push
out
out
pop
in
xor
xchg
cmp
in
pop
dec
lcall
lods
pop
adc
xchg
std
lret
pop
sbb
xlat
cmc
in
and
jp
jg
out
jmp
in
popf
lods
xchg
and
dec
mov
je
and
inc
ret
scas
imul
jnp
add
arpl
jp
pusha
fisttps
dec
clc
lods
ficoml
loopne
and
int
out
mov
frstor
popa
mov
mov
mov
xchg
pop
loop
push
pop
popf
dec
pusha
sahf
jg
sbb
pop
bound
pop
out
lods
movsl
add
out
and
aam
cmpsl
scas
cmp
mov
jmp
push
cli
addl
xchg
and
popa
inc
fstl
movsl
sub
push
xor
outsl
adc
stc
int3
inc
sbb
push
fdivrl
push
mov
add
aaa
pop
push
sbb
pop
and
jle
dec
bt
cmp
je
stc
divl
cmpsb
mov
sbb
daa
movsb
or
or
gs
sbb
fnstenv
dec
jmp
loope
and
xchg
nop
mov
jbe
nop
repnz
cmpsl
fdivs
add
jne
rclb
mov
dec
outsl
jns
or
pop
cmp
push
out
sahf
pusha
mov
add
addr16
add
pop
imul
and
loop
xchg
pop
in
in
jbe
iret
fcomi
jg
rolb
stos
repnz
repnz
and
out
push
jb
in
mov
cmpsb
sub
fcomps
adc
pop
mov
push
pause
dec
dec
repz
insb
mov
fstps
test
pop
or
in
cmp
adc
mov
xor
imul
arpl
stos
mov
clc
mov
and
imul
mov
mov
sub
xchg
mov
and
aad
push
push
mov
push
into
pop
sub
in
cmp
cmpsl
sbb
dec
or
imul
adc
shll
insl
push
push
cld
add
pop
jg
test
imul
fisubrs
gs
insl
pop
cmpl
xor
lea
xor
dec
and
mov
inc
dec
or
subb
mov
add
jmp
sub
adc
fwait
mov
daa
addr16
lret
sbb
roll
adc
dec
mov
push
das
jbe
sub
dec
movsl
lcall
cmpsl
sbb
push
or
fisubl
xlat
dec
inc
xchg
sbb
test
xchg
shll
in
rdmsr
pop
out
inc
jne
push
xor
shl
in
mov
push
cmp
movsb
imul
mov
arpl
ror
lods
test
cwtl
mov
stos
iret
xlat
fcomps
cmp
loop
mov
out
xchg
fcoml
pop
push
dec
cmpsb
fwait
sub
push
out
or
movsl
jns
mov
dec
sbb
pusha
pop
hlt
mov
fwait
jb
dec
push
jge
dec
sbbb
movsl
fisubrs
inc
gs
aam
lds
stos
and
sub
jns
inc
popf
ficoms
cs
dec
xchg
leave
shlb
lret
fsubs
ficoml
js
or
cli
orb
movsl
arpl
pop
dec
dec
xor
test
push
lret
addr16
in
adc
lock
fldenv
pop
jns
and
push
xchg
loopne
jne
xlat
scas
in
push
inc
push
or
push
aas
daa
insl
movsb
inc
push
pusha
loop
cmp
dec
cmp
pop
pop
mov
movsl
cmp
adc
or
jmp
push
movsb
imul
xchg
scas
out
cmp
pop
jle
insb
lcall
sbb
inc
inc
sti
out
imul
lahf
jbe
xor
sbb
xchg
popa
pop
xor
out
enter
pop
xchg
push
arpl
mov
addr16
mov
dec
jle
ljmp
cltd
mov
xchg
mov
jle
push
jne
sbb
add
out
sbb
hlt
add
lahf
mov
jge
addr16
rcrl
mov
gs
lock
jle
aaa
pop
jb
sub
dec
std
pusha
and
push
loopne
dec
repnz
push
push
and
fldcw
sub
push
or
mov
rcll
in
xor
fnstsw
lret
in
cli
in
das
ret
in
push
xor
cmp
imulb
inc
add
or
mov
xchg
stos
sub
loope
pop
clc
pop
enter
es
fiadds
aad
test
push
lods
adc
sbb
or
popa
arpl
push
xchg
call
mov
or
rcrb
push
mov
inc
popa
cmp
lea
cmp
js
stc
pop
imul
iret
out
push
dec
xchg
mov
loop
jg
inc
xchg
sub
dec
mov
imul
mov
mov
pop
mov
data16
pop
pop
inc
cmp
outsl
insl
jmp
movsl
daa
jp
test
imul
les
add
call
inc
mov
ret
gs
and
in
xor
xchg
fstps
cli
mov
mov
or
insb
inc
xchg
outsl
and
or
mov
jmp
xchg
mov
pop
dec
movsl
pop
out
out
pop
adc
repnz
movzwl
into
xchg
outsl
outsb
xor
fwait
lods
xor
loop
pop
or
or
imul
insb
aad
pop
loop
dec
in
xlat
mov
jecxz
xor
out
pop
fsubp
loope
dec
push
in
pop
daa
das
push
fcomip
dec
fsubrs
sbb
sahf
jl
shr
sub
dec
push
orb
jle
movl
xchg
jmp
out
jl
mov
pop
cmpsb
sub
sub
aad
and
jo
or
mov
ret
xchg
ror
adc
aad
inc
cmp
pop
xchg
pop
lahf
pop
cmpb
fwait
shr
push
inc
orb
roll
mov
mov
xchg
cmpsl
sub
or
cmpsl
pop
movsl
xor
push
jmp
or
push
xor
sub
or
in
popa
rcl
push
ds
test
xor
adc
sub
and
add
bound
pop
ljmp
cwtl
cld
pusha
push
data16
lds
push
stos
test
jmp
pop
popa
push
cmpsl
adc
addr16
mov
dec
ds
out
insl
fidivs
cli
sti
cld
sahf
sbb
insb
out
test
cwtl
pop
fwait
imul
xchg
push
pop
cwtl
movsb
mov
inc
and
in
or
adc
mov
out
mov
addr16
imul
ret
loope
orl
xchg
fisubs
pop
faddl
add
in
jecxz
xchg
or
aad
shlb
or
cmpsl
jg
int3
and
out
pop
push
ljmp
stc
push
outsl
and
addr16
bound
fisttpll
ret
jb
stos
popa
mov
dec
ja
addr16
es
and
aas
mov
jmp
je,pn
push
movsl
adc
jmp
test
inc
out
sahf
inc
pop
cmp
inc
mov
add
out
les
and
in
jecxz
fbld
and
call
fadds
sub
fisttpl
xchg
mov
roll
xchg
mov
mov
dec
ljmp
popf
clc
xchg
sti
out
jae
adc
iret
push
sbb
cld
pop
xchg
sti
xor
shlb
int
cld
aad
bound
push
das
add
jle
adc
pushf
lahf
and
rcrl
fmull
test
dec
fwait
or
scas
rcll
mov
mov
std
rclb
inc
and
pusha
push
icebp
in
dec
enter
and
pop
push
in
fsubs
pop
and
push
repz
arpl
in
sbb
sub
xor
sti
push
rep
gs
sbb
mov
adc
fs
shr
js
cmp
shlb
xlat
inc
loope
aad
das
pop
xchg
lods
outsl
push
and
stc
pop
fstpt
adc
std
scas
mov
bound
push
fldcw
pushf
leave
xor
sub
pop
call
lea
icebp
repnz
in
iret
mov
mov
adc
arpl
cmp
mov
or
lock
in
jno
aam
xlat
lods
xchg
inc
mov
pop
lcall
mov
test
dec
dec
outsl
push
xchg
xchg
pop
dec
je
lods
js
arpl
ud1
rolb
mov
into
dec
test
lret
popf
lods
adc
clc
stos
pop
mov
loop
jl
mov
mov
icebp
mov
test
cmpsl
pop
dec
or
sbb
sbb
jo
call
shll
pushf
loop
imul
insb
ret
arpl
or
pop
rcll
mov
push
or
mov
dec
sbb
push
jo
inc
imul
pusha
dec
jp
lret
stos
jns
and
ss
cmp
or
out
pop
fdivs
sbb
xlat
nop
mov
pop
imul
lret
dec
in
test
mov
dec
cmovbe
decb
mov
dec
retw
or
call
and
mov
pop
test
sub
jo
pop
orb
leave
mov
adc
or
dec
int
adc
aad
leave
mov
stos
push
push
loop
outsl
movsl
mov
leave
loop
data16
enter
pop
popa
lret
enter
out
data16
mov
gs
cmpsb
and
add
and
int
pop
or
dec
mov
dec
lods
sub
shll
fidivrl
ljmp
cli
imul
mov
cld
mov
inc
daa
xor
gs
gs
fbld
sub
pusha
pop
or
inc
xchg
clc
mov
or
sbb
cmp
int
dec
sub
mov
sbb
xchg
adc
repz
shl
pop
inc
pop
addr16
loopne
jecxz
xchg
test
sub
pop
in
ss
or
in
or
jns
pusha
aad
sub
cltd
adc
iret
fsubr
ss
push
test
inc
and
lahf
js
xchg
gs
pop
and
inc
pop
push
add
rcrl
cmp
adc
mov
push
or
out
xchg
and
scas
in
sub
popf
jne
push
fstps
fwait
jp
push
dec
push
outsl
repnz
sbb
pop
and
fwait
jp
jmp
fbld
int3
push
outsb
call
add
cltd
pop
pusha
xchg
test
aam
loope
add
add
xor
xor
pop
outsl
push
das
fildl
ljmp
cmp
cmpsb
push
pop
repz
fwait
aaa
call
mov
xor
arpl
arpl
es
sbb
pop
dec
outsb
sub
insb
les
int
xchg
push
pop
ljmp
dec
loopne
out
int
sbb
mov
test
test
adc
test
pusha
imul
xchg
push
and
or
or
dec
sbb
aas
cltd
gs
in
mov
sub
and
fdivs
test
in
stos
fildl
and
pop
loopne
adc
in
shlb
outsl
xchg
addr16
sub
hlt
mov
cs
pop
add
fmull
shlb
xor
and
pop
push
or
fwait
pop
ljmp
mov
or
adc
sub
fisttpl
cmpsb
lea
in
sub
stc
popf
fwait
mov
push
xchg
sti
push
imul
out
gs
loope
dec
add
stos
pop
sahf
bound
cwtl
pop
lods
cmpsl
sahf
xchg
pop
fiaddl
or
sbb
lock
ja
cmp
insb
hlt
xor
dec
rcrl
push
hlt
xchg
dec
xor
or
fcoms
fdivr
jmp
ret
cltd
jnp
xor
ja
sbb
sub
and
out
iret
jns
dec
xchg
int
or
mov
in
xor
out
movsl
pusha
mov
pop
je
nop
bound
in
hlt
in
mov
addr16
jecxz
or
mov
lahf
sti
push
add
pop
fsubs
add
and
iret
ljmp
or
ljmp
cmp
pop
bound
enter
push
add
mov
push
mov
cmpsl
and
shll
mov
popf
jae
push
lods
and
sub
pushf
adc
push
push
mov
call
mov
inc
cmp
enter
xorb
xchg
pop
pop
lods
mov
inc
xchg
sub
imul
pop
scas
loope
rclb
aam
aam
push
or
cltd
dec
pop
rcr
push
insl
xchg
mov
pop
jmp
fwait
das
inc
mov
rclb
pusha
push
call
imul
inc
add
inc
hlt
or
and
xor
or
cmpsl
cmpsb
push
push
pop
mov
cmp
fisubl
shll
sbbl
push
ss
test
lret
mov
popa
push
test
imul
pop
sbbb
xor
imul
loopne
pop
jg
pop
and
push
mov
xchg
fnstenv
loope
test
inc
mov
sti
pop
sbb
pop
or
mov
push
in
lods
outsb
out
lret
cmpsl
test
pop
fwait
ss
cltd
bound
ss
in
or
push
mov
jne
repnz
push
sbb
jne
xchg
sub
ds
pop
out
pop
inc
pop
mov
or
ljmp
mov
or
cwtl
insb
lahf
mov
inc
pop
fldl
ret
adc
fldl
pop
pop
fs
jae
jnp
cmp
xchg
int
cwtl
xchg
fcomps
ljmp
push
cmp
adc
std
fbld
dec
or
pop
mov
pop
out
cmpsl
fcoms
and
out
sub
push
sub
xlat
daa
cmp
enter
and
sub
enter
pop
dec
or
push
xchg
dec
popf
push
jl
lahf
lea
or
fs
dec
loope
mov
cli
popa
mov
sahf
call
sti
les
enter
mov
pop
outsl
adc
js
add
jp
mov
clc
dec
fs
popf
loope
rclb
xor
or
rcr
aad
sbb
ljmp
and
daa
aam
stc
xchg
sub
inc
imul
das
shrb
push
pop
stos
cmp
xchg
out
or
in
jle
push
pop
ror
sbb
mov
sub
jmp
scas
arpl
cli
or
lods
mov
mov
test
popf
lods
sub
dec
shrl
frstor
dec
xchg
or
out
int
mov
cwtl
ljmp
push
xor
fwait
test
xor
in
push
jmp
lods
mov
inc
in
mov
jp
dec
push
xor
xor
xchg
arpl
pop
or
or
pop
movsl
pop
das
loope
xchg
fs
hlt
mov
in
xor
es
insb
cmpsl
cwtl
gs
lret
pop
jmp
pop
xor
pop
mov
test
pop
mov
pop
das
shll
cmp
sub
lock
jle
inc
rclb
addr16
fstpl
push
add
or
test
ret
fnstsw
sbb
movb
or
or
cmp
test
or
adc
test
fists
gs
shll
or
test
push
push
mov
add
push
popa
arpl
movsl
cmp
test
sbb
ss
mov
js
rcl
jae
inc
fmuls
fmuls
test
out
and
inc
sub
cmpsl
sub
mov
pop
mov
pop
bound
mov
adc
mov
sbb
or
repz
inc
nop
xchg
push
mov
test
jne
xchg
push
jle
fmuls
cmpsl
je
mov
dec
jmp
movsl
imul
add
outsl
mov
iret
sbb
les
lods
popa
out
push
cmp
outsl
pop
mov
cmpsl
insb
pop
sbb
dec
xchg
cld
sbb
int3
or
xlat
out
xor
out
imul
enter
xor
stos
cs
sub
mov
shrb
inc
sbb
push
and
les
int3
dec
lcall
inc
mov
mov
or
int3
in
int
mov
ljmp
bound
lret
push
xor
leave
pushf
dec
pop
sub
fildll
xor
xchg
add
and
aas
test
xor
cmpsl
jns
xchg
xor
mov
push
mov
mov
lock
loope
sub
adc
ds
sbb
mov
jmp
jmp
lock
fwait
ds
inc
inc
inc
cmp
test
or
inc
push
pusha
je
fsubs
and
sub
sbb
push
mov
mov
jmp
adc
xor
enter
xor
mov
xchg
cmpsb
push
pop
repnz
cmp
pop
mov
sub
cmpsl
or
dec
adc
pop
push
adc
dec
std
sub
push
jns
pop
push
js
jae
insb
fldl
push
add
mov
ss
ret
inc
cli
mov
or
mov
or
sbb
out
test
push
jno
daa
js
xchg
pop
movsb
xor
shrl
push
insl
loope
and
cmp
cmp
mov
in
out
fisubl
or
push
sub
scas
popf
fbstp
bnd
add
push
test
xor
gs
and
fs
inc
jbe
sub
lret
and
popf
inc
movsb
call
fwait
dec
roll
push
ficoml
sbb
mov
lahf
add
pop
inc
inc
mov
inc
mov
rcrl
dec
pushw
scas
xlat
cmp
pop
insl
sarl
add
dec
push
arpl
inc
jnp
xchg
negb
pop
pop
cmp
sbb
test
xor
ljmp
fistpl
je
lds
pop
dec
aam
inc
mov
push
orl
mov
xor
xor
dec
sbb
dec
iret
in
pop
lret
xchg
push
aam
or
pop
xor
jns
push
lret
ficoml
or
xor
jmp
ja
shll
int
cmp
and
sahf
imul
and
rcll
repz
xchg
mov
daa
jbe
in
jb
push
lock
movsl
shrl
loope
loope
jl
dec
aas
dec
ss
in
ss
aas
and
gs
xor
scas
lahf
loope
dec
fisubl
push
out
lahf
and
sub
fldl
leave
bound
rclb
scas
pop
rcrb
aaa
fstpl
lea
int
test
pop
jl
inc
scas
fsubp
dec
adc
mov
les
pop
or
dec
fcomps
inc
xor
fidivrs
xor
cmp
mov
add
adc
out
inc
in
push
push
or
cmp
and
push
cmp
lea
inc
fs
jno
aaa
and
push
adc
imul
andb
push
add
push
sub
cltd
cwtl
or
das
cmp
cmp
or
imul
hlt
cmpsb
inc
dec
movsb
fwait
jnp
sbb
fs
daa
xchg
xor
stc
stos
enter
push
cmpsl
xor
sub
shrb
adc
cmp
lods
in
lea
cmpsl
cmp
icebp
jle
test
cmp
add
enter
cmpsb
cmp
xor
mov
or
inc
inc
flds
jbe
movsl
movsl
in
bound
lret
xchg
jne
jge
pop
rcll
push
stos
fdivr
test
xchg
or
test
mov
andb
add
ss
fwait
cli
repnz
pop
iret
in
mov
jne
cltd
stc
out
cmpsb
imul
xchg
dec
sbb
dec
insb
or
out
iret
jnp
in
or
jl
stos
xorb
pusha
adc
inc
dec
imul
cltd
mov
cmp
mov
pop
hlt
insl
gs
loope
sbb
bound
shl
lahf
imul
mov
fistpl
or
inc
mov
push
js
adc
inc
lods
sarb
sti
idiv
inc
dec
and
jle
sub
pop
jle
lds
xchg
ljmp
repnz
jb
push
scas
push
inc
mov
dec
inc
data16
dec
fcmovnb
jne
push
push
in
cwtl
push
dec
daa
imul
pop
push
mov
inc
aas
sarb
lods
jb
sbb
in
xor
sbb
inc
add
mov
pop
xor
mov
data16
cmpsb
inc
adc
cs
and
jns
cmp
xchg
repnz
int3
inc
pop
cmp
add
mov
enter
in
pusha
dec
jge
in
mov
aaa
out
xor
lret
jnp
sub
mov
mov
out
cmc
sbb
insb
sti
test
sub
pop
stc
lret
lods
mov
xlat
orb
js
in
cmpsl
sbb
inc
loop
dec
or
fsubr
cltd
out
lock
push
lret
outsb
fldcw
push
pop
xchg
fs
in
mov
xchg
fcomps
rcrl
fs
cmpsb
and
inc
sub
lahf
test
imul
dec
xor
outsl
es
mov
and
fiadds
fs
jl
and
add
mulb
push
lahf
iret
out
or
loopne
and
mov
sarl
xchg
pop
aas
loopne
arpl
addr16
outsl
adc
xchg
xor
pop
inc
push
xchg
fcomp
add
dec
xor
ds
mov
cmc
pop
cltd
pop
or
popaw
pop
lock
push
rcrb
ds
sub
pop
push
push
dec
repz
inc
stos
add
lret
or
push
gs
arpl
gs
fbstp
and
popa
cltd
push
and
lahf
repnz
xor
push
sub
das
push
and
cli
cmp
call
pop
and
xor
jl
movsb
mov
adc
stc
push
inc
push
pusha
and
and
imul
scas
dec
mov
or
in
loope
lret
mov
sbb
pop
iret
popa
dec
mov
cmc
push
ds
and
pop
sub
sub
add
sarb
loop
xor
inc
jg
dec
lds
lods
xlat
dec
and
dec
fisubl
es
outsb
lcall
mov
push
push
push
arpl
pop
fwait
lods
xchg
mov
sbb
push
xchg
leave
sbb
mov
and
iret
jae
fiadds
ror
push
out
int
cmp
sub
sbb
popa
dec
push
inc
fbstp
dec
push
xchg
pop
clc
loope
loope
push
in
pop
sbb
or
aad
push
sbb
test
jae
int3
int3
mov
sub
push
aam
pop
xchg
sub
es
loope
sarl
push
rcll
xchg
enter
push
ret
stos
mov
stos
fadds
shl
scas
pop
sbb
jecxz
test
or
xlat
push
pushf
lret
sub
mov
jmp
inc
sub
fs
push
mov
test
push
xor
mov
call
enter
ljmp
jo
loopne
jg
repnz
mov
sub
jmp
lods
pop
lret
fisubrs
push
shlb
or
lock
in
lds
cmp
aas
sti
jne
mov
pop
mov
rcll
push
mov
or
scas
or
pop
xchg
lret
cmp
shrb
mov
scas
mov
sub
in
pusha
ret
loope
in
es
sub
bound
push
or
popf
sub
jns
sbb
cmpsb
or
and
mov
ret
fs
loop
popf
jns
mov
sbb
test
loope
inc
shr
pop
jmp
add
out
ret
xchg
fwait
jns
adc
sarl
jns
cmp
arpl
pop
or
xor
pop
in
xor
aas
push
xchg
push
pop
and
testl
pop
pop
add
test
iret
pop
lcall
cmp
cltd
fwait
xor
mov
outsl
or
mov
sub
jno
out
or
stos
inc
cmpsl
aam
push
pusha
lret
and
repz
and
or
stc
adc
aad
xchg
jecxz
and
subb
or
pop
inc
xor
in
lahf
data16
lods
mov
push
sbb
iret
insb
test
adc
mov
stos
mov
sub
xor
lret
fidivrs
push
fildll
pushf
sarb
xor
or
xor
pusha
mov
push
scas
push
push
cmp
xlat
pop
mov
pop
or
loopne
dec
mov
pop
mov
sub
lret
xlat
xchg
loop
xchg
cltd
jecxz
and
jo
pop
das
cmp
pop
dec
push
out
jbe
rcl
fistps
notb
mov
or
pusha
sahf
dec
sbb
dec
or
icebp
pop
in
jae
in
loope
cmp
test
rclb
jbe
jecxz
adc
fwait
ja
je
call
sahf
xorl
iret
push
lods
mov
jl
pop
fwait
jns
lret
add
mov
cs
mov
cli
sbb
push
dec
pop
notb
push
inc
pop
jle
js
pop
movsl
push
cld
or
and
out
inc
addr16
dec
outsl
jmp
sub
in
test
push
es
imul
sbb
xchg
in
cmp
push
jns
inc
xchg
imul
dec
xor
xor
fidivs
lret
add
add
add
into
cltd
push
sbb
aad
in
dec
outsb
inc
nop
mov
lret
outsb
add
pop
xchg
push
fbld
cmp
sub
jecxz
mov
test
dec
mov
push
sbb
nop
inc
mov
int
pop
mov
adc
pop
jmp
adc
cmp
adc
mov
adc
nop
aad
add
in
pop
lahf
stos
fildll
or
jl
xor
lods
scas
movsb
xchg
ds
ljmp
sub
scas
pop
xchg
outsb
aam
jle
je
mov
call
hlt
roll
add
xorb
call
test
inc
mov
jmp
adc
stos
mov
mov
dec
jl
xchg
rorb
and
dec
jno
sbb
push
push
stos
push
cmp
leave
ret
xor
push
lahf
ret
sarl
test
arpl
add
or
xor
aam
jle
aam
daa
lock
push
jnp
loopne
mov
bound
inc
mov
std
jbe
in
mov
test
sahf
jmp
jl
xor
mov
lds
roll
or
in
mov
je
or
fndisi(8087
sub
inc
lcall
xchg
and
and
or
fisubs
add
xchg
cs
scas
adc
pop
popa
cmp
movsl
jmp
aam
xlat
push
insb
mov
inc
inc
or
mov
mov
xchg
mov
in
sub
and
das
or
test
add
ljmp
clc
andb
add
in
pushf
pusha
sbb
xorl
int
pop
or
in
lret
dec
xchg
nop
aaa
cli
jmp
mov
cld
es
cmpsl
sbb
or
or
imul
mov
lret
into
inc
stos
ret
cmp
or
pop
cmp
push
outsl
lret
pop
call
in
push
ljmp
sbb
xchg
dec
mov
imul
sbb
test
add
and
leave
imul
or
movsl
rol
popf
sub
or
test
jecxz
fs
cltd
lds
pop
shrb
pop
es
cmp
cmp
scas
in
jmp
bound
dec
ljmp
sub
shl
inc
add
lret
pop
in
fidivrs
xor
cmpsl
outsl
or
adc
mov
jae
push
leave
loope
adc
xchg
inc
repnz
mov
mov
arpl
sahf
addr16
mov
sub
pusha
and
addr16
mov
dec
arpl
gs
and
jb
pop
push
roll
call
mov
rcrb
cmp
fimull
xor
adcl
dec
inc
cltd
outsl
jecxz
pushf
aad
inc
mov
xor
aad
push
pop
sti
ja
cli
xchg
fdivrp
popw
push
jecxz
xchg
xor
dec
mov
loopne
aad
dec
arpl
or
jno
push
cmp
pop
xchg
dec
add
shrb
es
outsb
outsb
sub
sahf
dec
inc
xchg
pop
ja
xor
addr16
xchg
mov
idivb
pop
adc
fistl
cmp
pop
imul
jp
adc
pop
xlat
scas
jbe
movsl
enter
xchg
adc
out
out
xor
std
into
push
xor
mov
push
or
popa
pop
pop
adc
push
adcb
jae
xorl
pop
aad
or
aad
and
into
add
cmp
jae
pop
push
pop
add
rcrl
mov
mov
icebp
xchg
fdivs
repnz
lea
aad
mov
sahf
decl
fsubs
jp
and
lret
jg
jl
xchg
imul
aam
add
push
jmp
popf
mov
in
insl
test
xchg
and
test
imul
into
stc
push
aad
jle
adc
xor
sbb
pop
sahf
xchg
jmp
mov
sub
or
inc
test
mov
test
push
js
or
lea
in
outsb
jmp
cs
ljmp
cmpsl
cli
mov
jmp
pop
dec
sbb
mov
loope
pusha
xchg
pop
fstps
sbb
in
daa
test
scas
in
inc
pop
sar
iret
pusha
push
lods
xor
push
aas
nop
pop
cwtl
movsb
jne
fs
or
lods
loop
push
cmc
mov
insb
dec
arpl
cmp
cli
out
xor
shll
dec
addr16
add
xchg
xchg
push
fisubs
dec
fidivs
aas
cli
pushf
xor
cli
add
adc
imul
or
call
es
rcrb
gs
or
jo
daa
cltd
adc
not
test
fwait
sbbl
imul
pop
enter
ljmp
push
mov
sbb
jmp
push
inc
push
mov
scas
cmp
lret
or
gs
call
inc
test
test
dec
xor
push
dec
movsl
lret
fcomi
gs
or
pop
jns
shll
or
pusha
dec
push
arpl
jbe
in
pop
test
or
insl
es
insl
fdivrs
shll
pop
mov
pop
mov
cmp
add
pusha
sbb
push
inc
mov
mov
out
sti
mov
push
pop
bound
das
negb
rcrl
cmp
fsts
and
pop
push
dec
jmp
sbb
test
cmp
stos
outsl
add
test
out
jl
int
mov
cmpsb
andl
fxam
push
mov
imul
fwait
mov
jle
daa
mov
lahf
fwait
repz
push
cmpsl
sbb
int3
scas
bound
lock
mul
in
sub
sahf
pusha
je
pop
push
mov
push
dec
xchg
cltd
das
out
outsl
jb
fildl
into
cmp
ss
dec
aad
repnz
in
stc
fistl
in
add
outsl
or
movl
dec
sub
icebp
fisttpll
call
ljmp
jb
pop
sub
inc
ficompl
in
lcall
rolb
xor
dec
ss
and
dec
add
and
aam
jl
lcall
test
sahf
jne
sbb
bound
xchg
loope
and
and
pop
fmuls
pop
aam
adc
adc
out
xchg
jmp
inc
jle
mov
dec
xchg
aam
pop
out
adc
imul
pushl
inc
xchg
cmpsb
pop
jae
hlt
pushw
xchg
shll
mov
mov
movl
out
xlat
outsb
sub
push
pop
mov
cmpsb
dec
and
or
rcll
push
sahf
jle
xchg
inc
fcomps
jb
sbb
imul
or
jmp
inc
jecxz
les
les
stos
or
xor
jmp
cmp
mov
fs
arpl
leave
or
aam
sbb
push
pusha
shlb
sarl
in
pop
inc
test
aad
pop
mov
push
fstl
popa
push
pop
push
or
arpl
cwtl
sub
repz
je
repz
imulb
sub
pusha
push
xchg
fstl
fwait
scas
mov
mov
lock
add
xchg
iret
xor
gs
adc
sbb
inc
pop
int
push
mov
jb
pop
aad
mov
jmp
data16
and
lods
or
outsl
dec
xchg
cmpsb
adc
mov
cmpsb
xchg
xor
stos
outsl
and
dec
jb
into
pop
gs
dec
cmp
je
adc
insl
imul
dec
dec
inc
dec
pop
adcb
cli
jmp
mov
inc
push
inc
xchg
pop
pop
lods
bound
inc
inc
roll
jno
loopne
lret
je
in
or
lret
outsl
ficompl
orb
xor
mov
push
mov
jns
xor
icebp
stc
bound
out
and
or
push
pop
movsb
insl
imul
arpl
adc
and
loopne
cs
pop
xlat
lds
dec
frstpm(287
fmull
mov
or
out
cmp
bound
jne
push
pusha
or
jmp
mov
mov
bound
or
mov
or
pop
addr16
xor
push
lock
icebp
pop
mov
xor
jmp
ss
push
xchg
inc
and
cmpb
fsub
xchg
lea
insl
dec
cmp
jns
repnz
or
push
stc
xor
pop
cmp
push
sbb
inc
pushl
cmp
ds
imul
jno
movsb
push
push
xor
dec
sti
mov
dec
rcrl
rorb
arpl
or
mov
jnp
fs
push
iret
mov
pop
xor
jae
pop
xchg
and
outsl
jecxz
in
xor
push
sub
cmp
mov
xchg
jle
aad
nop
ret
sbb
fxch
pop
xor
dec
push
mov
int
loopne
fisttpl
ljmp
aad
rclb
pop
jb
sub
pop
inc
xor
imul
test
cmp
mov
stc
gs
jo
ds
ja
in
jae
daa
popa
outsl
mov
fwait
cmp
jo
arpl
popa
dec
sti
cltd
movsb
int
rcl
mov
lock
ljmp
ret
shrl
and
test
arpl
call
fbld
sbb
pop
imul
data16
mov
std
es
dec
jmp
flds
lret
push
cltd
sbb
lcall
sbb
xor
sub
mov
lods
mov
or
mov
data16
pop
ja
adc
imul
add
mov
scas
adc
int
cs
cmp
imul
mov
push
pop
pop
je
push
cmc
inc
and
sarb
ss
and
jnp
fisubl
mov
fistl
cmp
cs
dec
xor
out
loopne
and
or
push
cmp
sub
mov
or
ljmp
mov
jl
mov
xlat
shrl
push
push
or
push
jns
adc
push
and
push
aas
es
push
aad
test
adc
nop
dec
xchg
fnstsw
adc
sub
test
cmp
mov
aad
cli
push
cmp
daa
ljmp
pop
xor
pop
sbb
xchg
aas
mov
lods
cmp
arpl
out
leave
cwtl
repz
shrb
add
ret
jecxz
mov
or
mov
xchg
mov
outsb
dec
int
inc
sub
jne
cmp
adc
clc
xchg
int
push
xchg
mov
sbb
sahf
or
mov
and
lods
andb
flds
arpl
pusha
jns
pop
dec
test
pop
mov
sbb
lods
sbb
stos
sub
push
dec
jg,pt
sbb
cmc
inc
addr16
fbld
sub
pusha
xchg
xchg
push
push
js
push
cmp
sub
pop
fcomps
sub
sbb
ljmpw
push
out
fldcw
inc
cmc
les
iret
imul
jecxz
inc
and
fadds
data16
aas
mov
fisubs
and
movsl
rorb
xlat
xlat
pop
ss
int
add
popa
mov
mov
stos
jp
and
pusha
in
pop
add
js
mov
cltd
dec
add
out
imul
xorl
mov
leave
inc
lahf
pop
cwtl
ficoms
dec
sti
shrl
test
dec
rcl
rorl
pop
xchg
pusha
pop
fildll
aas
mov
loop
add
sbb
test
cmp
lods
int3
and
ss
ds
rcrb
stc
xor
mov
or
adc
dec
cmc
jb
out
inc
dec
sarl
push
aaa
push
jae
pop
add
pop
adc
out
inc
out
jmp
mov
xchg
and
stos
cli
push
popa
jnp
and
loope
add
sub
xchg
push
out
dec
ja
stc
sbb
shl
xlat
jmp
dec
ret
imul
add
mov
push
xor
xchg
test
js
data16
push
push
test
popf
mov
push
or
scas
dec
rolb
jmp
aas
or
cmpl
push
inc
mov
dec
daa
mov
and
sbb
inc
sbb
jbe
push
popa
cwtl
or
inc
add
mov
fsubl
cltd
jp
inc
lods
cltd
les
lods
cltd
cmovs
pop
shll
sbb
pop
inc
lods
jmp
aad
pop
lods
xor
stos
add
sub
mov
push
outsl
push
adc
dec
sbb
stc
inc
cmp
in
bound
pop
adc
out
sahf
aaa
mov
mov
cmp
cltd
dec
stos
mov
adcb
daa
or
inc
jmp
stos
fcoml
push
jbe
icebp
mov
rorl
mov
push
mov
cmp
sarl
or
xlat
leave
push
adc
mov
clc
cwtl
dec
jge
mov
mov
pushf
test
shlb
in
addr16
arpl
outsl
test
fs
lret
gs
in
mov
jecxz
jb
mov
push
cmpsb
jle
lods
ja
and
loope
fimull
ljmp
out
into
or
push
jle
negl
sbb
enter
dec
cli
xor
jmp
and
push
std
push
lods
leave
pop
or
dec
adc
or
lock
push
add
mov
enter
push
out
mov
pop
mov
sbb
push
leave
aad
mov
fistps
inc
add
xchg
sub
test
push
cmp
cmp
inc
mov
pop
dec
lahf
js
sub
add
fidivrl
mov
dec
pop
lcall
and
rclb
fistps
pop
cmpsb
jnp
popf
mov
fldcw
aad
lods
dec
inc
and
cltd
jmp
movsl
push
pop
imul
test
cmp
out
lret
testl
dec
mov
sbb
cwtl
test
xchg
sbb
aad
cwtl
dec
dec
fwait
incl
xlat
dec
aad
movsb
test
bound
mov
nop
mov
fsubrl
mov
pop
test
lret
push
hlt
sub
push
dec
jbe
dec
inc
cwtl
jmp
repz
sub
gs
jb
cmpsb
jnp
jbe
ficoml
cmpsl
lahf
xor
xlat
or
js
pop
fwait
enter
dec
std
mov
push
fs
dec
out
cmp
shll
pop
test
mov
in
cmp
out
ss
aam
outsb
ds
dec
sti
add
cli
sbb
imul
xor
xor
mov
stc
fcmovnb
inc
sub
mov
push
popa
sbb
es
and
add
mov
cli
cltd
mov
sbbl
mov
clc
movsw
cmp
outsl
lret
mov
rcrb
pop
inc
xchg
pusha
pop
mov
stc
retw
jmp
stc
imul
ljmp
sbb
sbbb
mov
add
flds
imulb
aad
sub
aam
jns
roll
cmpsl
pop
push
es
and
lcall
sbb
jmp
movsb
xchg
ljmp
insl
push
pop
pop
cltd
adc
jae
xchg
jecxz
sbb
pusha
cmp
lret
rclb
or
pop
in
out
ss
xchg
dec
ss
jb
pop
sti
inc
pop
fwait
pop
adc
dec
or
mov
add
lret
insb
inc
jp
jmp
pop
test
arpl
aaa
cwtl
sbb
mov
push
fdiv
xchg
test
sbb
clc
add
clc
and
stos
dec
test
pop
or
scas
es
rcrl
jg
mov
adc
loope
outsb
lret
mov
push
cmc
mov
sbb
xchg
pop
fcoml
popa
fiadds
cmp
fmulp
and
add
leave
push
add
mov
sarl
xlat
subl
xor
test
push
lods
add
jbe
adc
pop
lea
push
insb
stos
mov
test
test
stc
add
mov
inc
and
or
or
xchg
sub
popf
mov
dec
ljmp
adcb
adc
gs
lods
or
inc
mov
adc
arpl
cmc
xor
jne
xor
sbb
jmp
push
cmpsb
jne
mov
lret
push
gs
enter
out
and
sub
fsubs
cmp
andl
clc
xor
mov
push
andl
mov
jmp
push
test
fucom
lcall
mov
pop
in
push
icebp
jle
mov
cmc
imull
mov
and
jno
pusha
out
fdivl
out
inc
scas
pusha
mov
jne
call
push
test
ja
dec
sub
pusha
dec
mov
flds
inc
movsb
lahf
mov
inc
enter
xchg
sub
aam
pusha
test
rcrb
adc
push
pop
call
std
push
leave
push
aad
cmp
ljmp
mov
imul
inc
dec
pusha
jae
xchg
xor
sbb
int3
pop
sbb
shrb
inc
jecxz
pop
cmp
or
add
xchg
mov
xchg
lea
pop
ficoms
loope
adc
bound
push
push
fimull
fsubs
add
adc
shll
jnp
ficompl
or
mov
bound
out
mov
in
pop
aam
inc
adc
test
lods
gs
fldcw
xor
imul
xchg
mov
daa
xor
rol
shrl
data16
shl
fistl
mov
inc
push
stc
dec
pop
xchg
aam
lods
cmc
and
gs
je
jmp
loope
ljmp
fisubrs
orl
pop
cmp
mov
lahf
mov
push
movsl
dec
push
sbb
dec
cmpsb
mov
lahf
jb
sub
cmp
pop
ljmp
xor
pop
out
movsl
push
insl
pop
mov
test
push
adc
push
push
mov
dec
sbb
pop
out
scas
int3
into
jns
cmp
lahf
mov
imul
cmp
ficoms
xor
test
sbb
sub
lahf
cmpsl
pop
arpl
xchg
lret
aad
mov
mov
scas
pop
xchg
pop
aam
mov
test
pusha
push
fldenv
cmpsl
or
mov
in
cmpsb
idiv
int3
jo
pop
fucomi
popa
leave
pop
add
fbld
movsl
add
xchg
adc
in
cmp
pop
imull
pusha
jbe
pop
push
mov
test
and
aad
jp
sub
outsb
jno
lahf
dec
cmpsl
lahf
jbe
out
and
push
lret
pop
pop
push
shrl
repz
mov
fwait
adc
xor
jb
xor
sub
dec
pop
mov
dec
xor
popa
data16
pop
jne
or
daa
jp
sbb
insb
test
andb
test
jae
cmpsl
cld
cmp
xlat
imul
cmp
mov
jmp
push
pop
pop
test
ljmp
cmp
movsl
sbb
imul
push
in
sub
lock
aad
shlb
jbe
test
outsb
inc
jecxz
sbb
shrl
cmpsb
pop
es
sbb
cmp
push
xchg
push
pusha
pop
cwtl
ret
mov
repnz
sub
outsl
dec
je
and
push
aam
bound
adc
dec
sbb
pusha
add
packuswb
sahf
imulb
outsl
in
inc
pop
stc
mov
jnp
mov
es
push
dec
popf
pop
lcall
mov
pop
pop
out
int
mov
out
andb
cmp
or
pop
mov
xor
cmp
pop
rcll
outsl
sti
push
mov
dec
mov
mov
dec
sub
push
sub
out
inc
imul
rep
pop
repnz
push
cmp
or
push
pop
sub
xchg
and
sahf
iret
mov
jo
mov
push
push
ljmp
iret
fucom
daa
adc
sbb
mov
sbb
popa
bound
pop
loope
nop
pusha
sub
ds
out
pop
xchg
add
xchg
fiaddl
and
in
adc
imul
jmp
lods
sub
push
push
sub
testl
or
imul
and
insb
mov
pop
push
adc
insb
push
xchg
movsl
mov
adc
push
sub
cmp
rcrl
and
cmp
imul
cmp
cmp
lcall
xchg
jnp
sbb
into
add
jp
mov
pop
aam
pop
das
xchg
cli
mov
mov
sar
push
mov
inc
ret
fistps
xchg
push
pop
pushf
push
adc
push
sbb
xchg
xor
push
jp
mov
fildll
sub
int3
arpl
cs
test
aas
sbb
dec
aaa
sub
pop
xlat
jp
dec
xor
mov
fadds
dec
push
pop
mov
lods
xlat
fstpl
fsubr
fisttpll
es
jmp
sub
mov
arpl
jnp
pop
mov
notl
sbb
jge
push
sti
subb
jl
inc
outsb
mov
or
push
dec
adc
aad
adc
xchg
mov
in
or
or
pusha
jecxz
mov
mov
xlat
pop
scas
pushf
mov
mov
stos
das
cld
add
bound
mov
testl
sbb
ljmp
and
in
out
xor
jo
ds
hlt
pop
push
pop
pop
pusha
push
data16
insl
hlt
loope
inc
pop
insl
mov
and
pop
push
push
inc
insl
push
test
sub
xor
xchg
or
out
inc
movb
fimuls
das
aam
in
pop
adc
shll
lds
test
shlb
les
dec
xlat
push
movsl
lock
jp
push
insl
push
addr16
lret
push
lods
jecxz
mov
in
jne
ret
sub
out
das
mov
cmp
jp
stos
cs
mov
xchg
cmp
push
push
adc
aaa
aas
int3
pop
das
icebp
jbe
outsl
cmpsb
xor
insb
push
jmp
mov
xor
test
cmp
push
inc
jno
xor
outsb
bswap
lcall
jmp
out
pop
mov
jns
xor
xchg
xor
pusha
lds
mov
adc
xchg
xchg
xchg
push
xchg
or
add
sbb
lret
pop
divb
cmp
push
sub
pusha
cmp
pop
jmp
lock
dec
push
mov
inc
sti
addl
jg
xlat
pop
cmp
clc
dec
push
lcall
movsl
aam
icebp
rolb
fs
cmp
mov
fstps
mov
add
or
insb
xor
clc
or
inc
pusha
or
jns
push
mov
int3
inc
arpl
mov
sub
jmp
jbe
fisttps
push
test
mov
bound
pop
addr16
xor
stos
pusha
mov
xlat
inc
lods
lods
out
outsl
inc
int
cmp
xor
mov
fisubrs
lret
lahf
inc
imul
xchg
clc
push
jmp
sub
ror
aam
lcall
sbb
sub
xor
xchg
sub
jecxz
bound
pop
and
push
les
adc
xchg
cmpsb
xchg
mov
jl
cmp
add
shrl
nop
arpl
or
xor
insb
lds
mov
enter
xchg
aam
cld
gs
imul
sub
lods
dec
jle
daa
stc
out
dec
std
call
push
pop
clc
outsl
pop
mov
xchg
xorb
jg
jl
lret
loopne
stos
pushfw
out
lds
xchg
mov
mov
pusha
fidivrs
inc
out
xchg
loop
fistps
in
fisttpl
xchg
pop
lahf
inc
xchg
fisttpll
sahf
clc
data16
je
pop
cld
push
loope
sub
mov
repz
test
into
push
call
push
xchg
shl
les
loopew
addr16
notl
in
enter
and
xchg
mov
in
jg
shl
std
es
jns
xor
gs
pop
enter
mov
push
leave
into
sub
and
push
xor
xchg
xor
inc
dec
mov
pop
inc
dec
xchg
cmp
push
mull
bound
aaa
adc
sbb
stos
and
push
sub
lahf
data16
pop
push
cs
and
xor
pop
std
inc
cs
pop
sub
hlt
scas
call
jo
movsb
aam
xchg
and
rolb
bound
les
sub
cmpsb
add
or
outsb
pop
sbb
iret
sub
push
daa
add
pop
mov
lds
pusha
xchg
fstl
nop
fnstsw
call
pop
push
bound
cld
mov
fnsave
push
add
adc
sub
lods
lret
pop
mov
sbb
pop
outsb
add
sahf
je
mov
mov
jno
fidivrs
pop
insl
push
sub
pop
xchg
xchg
rcrl
push
xor
inc
or
rcrb
jl
mov
ss
mov
xor
xchg
sbb
in
and
push
push
inc
sahf
xor
push
mov
cmp
movsl
loop
jae
and
adc
and
insb
jns
dec
push
bound
imul
adc
pop
jge
pop
jne
cmpsl
sti
call
inc
pop
outsl
cmp
test
aad
cltd
jp
push
mov
fs
lods
outsl
mov
jle
push
sub
xor
cltd
or
cmc
mov
or
dec
and
xor
xor
lods
sbb
imul
push
loope
pop
test
add
jnp
fs
or
jmp
xlat
adc
lock
push
arpl
xor
mov
jg
push
mov
outsb
mov
bound
sbb
das
repz
ret
mov
loope
pusha
aam
xchg
pop
je
push
or
mov
xchg
enter
adc
cmp
push
shrb
or
arpl
xchg
dec
cmp
fcomps
in
dec
dec
push
les
fstpl
mov
xor
push
rolb
inc
jmp
push
mov
sbb
dec
insb
xor
pushf
cli
xchg
fsubl
adc
imul
aam
in
gs
popl
sbb
mov
fldt
mov
rorl
mov
or
and
pop
pop
movsb
inc
sub
mov
sti
aad
shlb
loope
and
xor
fstl
lahf
data16
and
pusha
inc
test
aaa
bound
or
test
mov
cli
push
adc
popa
rclb
adc
ja
push
mov
push
mov
sti
sub
addr16
into
inc
push
xchg
adc
adcl
and
rclb
inc
sub
in
push
xchg
aad
mov
stos
xor
xchg
dec
sbb
push
xor
push
iret
insl
mov
popa
inc
dec
mov
roll
cmp
in
and
aam
insb
and
jl
push
test
das
gs
sub
call
les
cld
xor
shll
pop
test
insb
ret
mov
cli
or
jb
or
test
stos
pop
in
popa
jbe
or
test
adc
xchg
movsb
add
prefetchwt1
push
rcr
movsb
pop
sub
pop
les
dec
push
sbb
jbe
mov
pushf
pop
pop
aas
or
insb
shll
xchg
in
push
sub
push
pop
push
pop
dec
push
popf
cmpsl
jae
shl
and
pop
or
and
or
fisttpll
out
insb
sub
lock
sahf
and
mov
repnz
sbb
leave
lods
out
push
iret
and
testb
xchg
pop
lock
dec
adc
mov
gs
mov
data16
out
arpl
pop
cli
fiaddl
nop
loop
pop
psrlw
ret
insb
negl
bound
mov
insb
mov
xorb
outsl
adc
push
daa
push
xor
mov
mov
shl
mov
gs
sub
cmp
pop
adc
adc
sbb
out
lds
xor
pusha
les
mov
mov
popa
mov
popa
stos
and
das
je
sub
jecxz
test
cli
sahf
dec
push
iret
test
push
fbld
loope
pop
popf
imul
ret
sahf
je
push
hlt
cli
test
lock
mov
dec
jns
pop
pop
push
in
scas
inc
scas
push
mov
icebp
popf
outsl
jl
out
ljmp
pusha
clc
push
sbb
enter
data16
cmp
inc
shrb
and
pusha
fs
dec
arpl
cwtl
test
or
fcompl
nop
fisubs
lahf
nop
sahf
or
outsb
mov
push
pop
loop
stc
flds
push
into
in
lds
shll
cmpsl
std
loope
lcall
imul
imul
mov
mov
mov
xchg
dec
sbb
mov
inc
dec
pop
jl
js
ljmp
call
mov
xchg
pop
jecxz
inc
ljmp
mov
sarl
xchg
cmp
mov
data16
fs
stos
fnstcw
and
dec
xchg
or
jmp
sub
xor
mov
ja
xor
sar
pop
jge
sub
cltd
cmp
movsl
test
ds
arpl
mov
in
arpl
and
lret
push
orb
addr16
loopne
dec
add
lcall
fbld
cmc
xor
sbbb
sti
movsb
dec
js
dec
jmp
or
cmpsb
ljmp
pop
push
inc
jae
lods
test
stos
int3
pop
and
cmp
movsl
xchg
adc
pusha
push
xor
aas
dec
jnp
hlt
jnp
pop
xchg
inc
mov
push
jmp
imul
sbb
mov
cwtl
or
pusha
mov
loope
test
xlat
sub
pushf
std
int
push
sbb
repnz
pop
cltd
sub
push
and
test
lret
out
sbb
test
inc
cmpsl
cmp
mov
push
push
push
push
insl
mov
mov
mov
mov
in
push
mov
push
sub
and
sbb
push
fstpt
pop
mov
cmp
fwait
sbb
xchg
popa
data16
jnp
inc
lds
sbb
push
add
sahf
data16
out
out
jnp
pop
push
mov
jecxz
add
repz
inc
mov
xlat
movsb
pop
sub
test
pushf
adc
xor
mov
clc
loopne
in
push
push
cmpsb
or
push
push
sub
shl
xor
out
jmp
mov
das
mov
es
mov
loop
or
and
sub
pop
sub
jecxz
push
or
jbe
sahf
repnz
pusha
gs
in
iret
adc
jecxz
cmp
cmp
dec
or
mov
dec
sub
out
pop
cmp
xlat
bound
shl
pop
inc
xor
or
aas
xchg
bound
cmp
jne
ljmp
pop
iret
mov
in
xchg
aam
mov
xchg
push
rcrl
shl
cmc
cmpsb
test
xchg
dec
jle
in
mov
scas
pop
push
sbb
mov
pop
dec
or
xchg
fcos
push
stos
mul
sub
jns
mov
add
cld
fdivrp
jo
xchg
mov
sub
stos
mov
and
push
mov
movsb
mov
cmpsl
repnz
sbb
int
or
or
outsl
sub
sbb
fidivl
mov
in
sub
mov
push
cld
ljmp
adc
sub
int
test
cld
dec
mov
data16
stc
lods
xchg
jmp
add
dec
mov
adc
aad
sub
mov
lods
push
cmp
insl
or
push
leave
in
pop
xor
pop
or
adc
imul
push
pop
es
arpl
test
push
out
sbb
cmp
push
pop
movsb
in
dec
jecxz
adc
pmaddwd
pop
cwtl
pop
movsl
das
stos
mov
fsts
shl
jmp
jno
xchg
pusha
out
sub
adc
jo
dec
mov
fisttps
sbb
xor
pop
mov
arpl
mov
lds
dec
int3
mov
mov
sbb
sahf
aad
in
sub
data16
xor
push
pop
gs
sub
orb
or
xor
pop
pusha
or
cmpsb
and
js
into
inc
push
out
out
popf
test
bound
cmp
push
cmp
cmp
mov
xchg
xchg
stos
fildl
insl
adcl
scas
mov
jle
mov
stc
or
xor
push
jp
jp
add
xlat
sbb
rorw
sub
mov
or
sahf
inc
adcb
aaa
fisubl
push
sub
mov
cli
arpl
mov
mov
mov
outsb
loopne
out
in
sahf
mov
pop
push
aas
lods
mov
imul
push
pop
enter
mov
out
xchg
movsl
cmp
lret
xchg
cmp
pop
mov
pushf
push
sarb
in
outsb
jl
jae
lds
or
into
xchg
jae
js
out
adc
mov
mull
cmc
push
stc
sbb
arpl
in
adc
aad
and
and
outsb
leave
pop
mov
stos
jmp
or
dec
xchg
and
cmc
scas
jg
sub
fisubs
push
arpl
stos
lahf
mov
pop
dec
gs
cmpsb
fwait
ja
movsb
or
sub
mov
and
imul
fs
sub
jno
bound
arpl
stos
jno
sub
fldl2t
loope
inc
cmp
sub
stos
stos
mov
popf
stos
jns
mov
loop
data16
les
imul
nop
adc
xchg
mov
add
bound
push
std
lret
jle
push
or
scas
dec
sub
imul
inc
stos
push
inc
xchg
xchg
in
addr16
cltd
push
mov
repz
inc
jae
lods
call
push
imul
push
mov
sti
aam
pop
pop
es
data16
ficoms
mov
into
pop
imul
xor
pop
or
jb
push
push
popa
fwait
idivb
mov
sub
fidivrs
pop
xlat
nop
cmp
jae
push
dec
mov
xchg
sub
xchg
adc
add
dec
aam
and
lahf
jbe
in
ss
rcl
mov
dec
mov
lret
mov
leave
hlt
xor
fs
icebp
jge
jge
movsl
insb
movsb
inc
ja
cmp
insb
push
mov
idivl
into
cmp
in
jg
push
xchg
cmp
mov
push
and
repnz
lret
lods
xor
pusha
xchg
loop
mov
pop
rep
inc
enter
orl
shll
rcl
jg
sahf
gs
pop
mov
or
mov
xor
xlat
scas
pushf
mov
imul
in
xchg
add
cld
pop
out
clc
sbb
sti
cmpsl
pop
idivl
sbb
jmp
jnp
fistps
scas
fidivl
imul
lock
and
mov
es
in
mov
xchg
repz
in
jbe
sbb
lea
push
ss
cli
dec
mov
lods
mov
out
push
cwtl
js
pop
xchg
and
fs
das
fsubr
or
xor
lock
push
adc
inc
cmp
insb
add
inc
jmp
xlat
mov
sar
cmpsl
inc
push
dec
ja
pop
pop
mov
add
mov
mov
pop
mov
mov
sbb
sbb
mov
pop
xchg
fwait
scas
fwait
cltd
loopne
movsl
jbe
cmovns
pop
lds
add
sbb
pop
adc
test
movsb
rcl
insb
rorl
pop
mov
movsl
inc
ret
xchg
lret
jp
jnp
shll
mov
mov
dec
in
setb
push
ss
icebp
push
loope
xchg
push
js
in
addb
cmp
mov
std
fstpl
inc
jnp
in
dec
aaa
or
mov
dec
stc
cld
bound
inc
pop
call
cmpsb
or
fwait
dec
movsb
fucomi
es
mov
jp
shl
je
add
xor
cli
jo
out
cltd
movsl
fidivrl
hlt
pop
cltd
jl
inc
fidivrs
lret
pop
cwtl
gs
add
loope
data16
arpl
sbb
movsl
cltd
jmp
sar
inc
push
and
mov
out
mov
movsl
sbb
or
jmp
ja
pop
test
pop
imul
mov
fs
push
insl
xor
stc
dec
adc
adc
xchg
cmpsb
add
cld
inc
sahf
jmp
inc
pop
enter
js
push
call
add
or
push
rorb
jae
mov
call
cmovb
jp
mov
out
cmpsl
jae
inc
frstor
bound
xchg
push
or
push
jns
jp
dec
sub
ja
jb
cltd
mov
aam
cld
popa
arpl
pop
lret
scas
xchg
mov
add
test
cwtl
sub
int3
push
mov
scas
cmpsb
in
push
xor
xchg
mov
jnp
loop
xchg
lahf
andl
lock
jns
xor
jb
sbb
imull
push
addl
lds
fwait
testl
sbb
in
pop
test
cmp
adc
sbb
bound
and
cld
mov
sbb
out
mov
jnp
arpl
lds
jg
loop
inc
stc
cwtl
pop
push
sbb
or
test
and
mov
pop
dec
dec
aam
arpl
add
arpl
stos
call
push
pusha
and
mov
mov
roll
or
dec
out
dec
push
stos
push
shlb
cli
push
cmp
sbb
pushf
mov
pop
pop
shll
mov
into
xchg
sub
cli
push
and
xor
mov
dec
scas
cwtl
shl
js
repnz
adc
sbb
clc
stos
sbb
jecxz
inc
push
pushf
xor
stos
push
cmp
jle
cli
shrl
mov
sbb
cmp
mov
push
push
testb
out
pop
inc
dec
jle
loope
push
fldt
sbb
push
adc
lods
sub
or
int3
xchg
push
imul
aad
jno
or
fisttpl
mov
pop
mov
nop
movsl
push
or
cltd
scas
pop
sbb
addr16
outsl
out
test
mov
mov
push
addr16
xchg
arpl
out
out
sbb
das
xchg
gs
mov
jne
fimuls
sbb
xor
sbb
mov
ja
rolb
jg
stos
mov
rclb
mov
enter
pop
call
dec
loope
dec
addr16
out
andl
jb
mov
fwait
mov
lret
mov
mov
dec
std
pop
or
adc
jg
shlb
bound
das
cli
clc
data16
xor
inc
andb
testb
pop
mov
loope
lds
xchg
xlat
mov
sub
cmp
aas
xor
test
lds
loop
add
xchg
ret
jg
mov
sub
jg
push
or
xchg
mov
push
mov
popf
xor
test
fcoms
lret
push
sbb
sub
dec
dec
cmc
clc
call
add
xchg
loopne
movsb
dec
jg
sbb
fs
mov
xchg
lcall
popf
addr16
push
add
inc
fcoms
rorl
xor
add
pop
xchg
xchg
sub
add
insb
add
ret
xor
imul
mov
xchg
aas
inc
pop
xor
mov
pop
xor
cmpsl
xor
jmp
jno
xchg
test
loope
cltd
xchg
and
dec
mov
in
pop
push
sbb
xchg
out
inc
and
popa
cmp
sahf
shlb
les
mov
ja
add
test
xor
add
pop
adc
fs
popa
pushaw
bound
pop
js
pop
push
mov
sbb
mov
gs
cmp
push
push
lret
cmp
jp
cmp
aam
mov
xchg
fabs
dec
and
or
dec
push
inc
cmp
popa
mov
jo
jb
fs
push
dec
dec
repz
and
dec
mov
inc
out
out
imul
arpl
dec
pop
mov
push
flds
pop
popa
inc
pushf
unpckhps
cmp
inc
and
daa
es
or
call
enter
enter
dec
sub
push
adc
movsb
adc
push
shr
movsl
imul
or
cmp
test
xchg
or
sbb
push
cmp
xchg
sub
cmp
ljmp
js
imul
cmp
cli
scas
pushfw
cmpsl
mov
mov
insl
mov
ret
mov
call
mov
into
push
xchg
callw
adc
jp
je
sbb
data16
add
in
cmp
loop
xor
xor
mov
adc
sub
or
addr16
ret
adc
pop
loope
xor
pop
add
push
sbb
pop
adc
push
stc
xor
mov
decl
idivl
and
fcoml
pop
shlb
popa
fs
push
jg
loope
insb
lock
bound
jne
popa
sbb
fcomps
data16
in
gs
xchg
dec
and
push
mov
dec
movsl
sub
jmp
hlt
sub
and
push
out
ss
popf
movsl
and
fs
mov
enter
pop
or
push
mov
sbb
imul
inc
mov
jnp
inc
repnz
outsb
aam
push
push
pop
push
call
scas
dec
push
and
mov
inc
sbb
fildll
call
outsl
fs
inc
bound
lret
add
test
adcl
cltd
fnstsw
lcall
pop
test
rcll
or
inc
dec
lcall
push
mov
fwait
shlb
mov
mov
pop
or
and
and
movsl
popf
ljmp
iret
imul
cmp
adc
mov
xlat
and
push
sbb
pop
mov
mov
push
movsl
stos
mov
repnz
xor
push
jecxz
cmp
out
xor
inc
push
adc
push
ljmp
dec
fsubs
sub
and
js
push
jl
das
shrl
and
cwtl
in
and
sub
negb
push
push
push
mov
pop
xchg
pop
jns
cmp
push
out
or
xor
push
aam
fsubl
pushf
sbb
or
adc
fs
cs
sbb
push
push
in
lods
stc
dec
sbb
dec
push
pop
mov
loop
push
xchg
xchg
sbb
pop
pop
inc
cmpsl
mov
or
outsl
enter
mov
jnp
add
arpl
lcall
mov
std
repnz
push
popa
or
icebp
in
push
leave
ret
and
push
ds
pop
and
into
pop
jnp
mov
cmp
out
inc
and
inc
movsl
and
jnp
std
fmuls
aad
xorb
push
add
aad
xchg
push
push
jns
sarb
push
mov
push
fldt
mov
jns
push
in
or
scas
call
out
out
sbb
imul
push
push
mov
loope
sub
incl
mov
das
ljmp
lret
jns
jns
ds
xchg
inc
cmp
ljmp
inc
push
mov
in
test
jge
imul
inc
mov
enter
dec
loopne
push
scas
and
jmp
addl
bound
inc
jmp
ret
in
imul
jecxz
cs
cmp
sub
add
fldenv
pop
add
xchg
hlt
dec
pop
ss
inc
or
addr16
fldt
test
sbb
cmp
ljmp
adcb
jge
xchg
sub
pop
or
out
push
jae
lods
inc
int3
cs
pop
xchg
std
jno
aad
push
shll
fdivl
enter
and
and
add
inc
sbb
add
push
jb
adc
cwtl
lret
in
add
mov
imul
bnd
sub
inc
push
test
fcmove
and
push
outsb
sbb
or
and
imulb
arpl
movsb
es
cmp
dec
scas
mov
data16
je
dec
pop
push
add
clc
dec
lock
int3
xor
imul
imul
push
adc
or
jns
das
inc
jle
lods
imulb
lahf
jne
flds
sbb
push
mov
or
dec
clc
lock
push
dec
cwtl
sub
and
popa
cs
xchg
imul
push
xor
jo
testl
sbb
lret
xor
push
mov
mov
dec
xchg
call
sbb
out
push
cmp
cs
in
popf
dec
setge
imul
push
data16
sbb
lret
icebp
cltd
pop
sbb
add
out
sub
mov
cmpsl
xchg
xor
cmp
cmpsb
or
fstp
lret
sub
fwait
inc
aas
pop
cs
mov
movsl
insb
mov
push
int3
lcall
adc
mov
repnz
testl
test
dec
dec
scas
jmp
mov
repnz
les
xchg
loop
add
or
int3
int3
pop
xchg
into
add
pop
ret
bnd
xchg
leave
inc
pop
mov
sbb
cmpl
pop
js
mov
sahf
or
pop
dec
fildll
test
int3
pop
cmp
inc
push
movsl
pop
gs
dec
scas
mov
orb
ret
pop
sbb
movsb
fstpl
in
mov
push
push
aad
mov
aam
push
pop
pushf
fcoms
adc
out
out
std
adc
mov
loope
lods
jmp
in
pop
lret
flds
sbb
jbe
testl
arpl
dec
mov
mov
mov
loop
lods
xchg
dec
clc
gs
inc
rorl
push
xchg
rolb
fisubrs
dec
je
pop
mov
sbb
pop
pop
imul
test
mov
call
daa
xor
addr16
lahf
jns
js
mov
dec
cmpsb
xchg
or
rcrb
jno
sbb
test
adc
sbb
pop
push
mov
pop
lahf
push
mov
inc
xchg
pop
mov
fisttpll
es
push
je
aas
sub
sbb
xchg
test
jns
jecxz
pop
daa
and
adc
jb
push
push
cltd
push
pop
cs
lea
jg
or
xchg
jae
xlat
inc
sbb
lea
bound
repz
bound
adc
add
mov
test
enter
js
pop
sub
out
cmp
outsl
pop
adc
sub
das
in
in
jmp
les
xor
rcrl
lea
arpl
pop
in
inc
dec
and
mov
sti
pop
sbb
or
sbb
and
daa
jp
mov
pusha
pop
int3
aam
ret
fidivrs
pop
cmp
pop
pop
sbb
test
pop
push
pop
inc
or
cmp
add
lock
adc
das
push
dec
inc
adc
clc
pop
fsubrs
lods
lret
or
aam
cmp
dec
adc
add
enter
in
inc
mov
cld
data16
pop
fidivrs
ja
mov
pop
push
test
dec
cmp
or
aad
jecxz
lret
jmp
inc
xchg
test
jbe
iret
sahf
inc
pusha
dec
loope
mov
push
mov
test
jmp
je
fimuls
mov
or
int
xchg
push
push
adc
outsl
bound
jmp
repnz
sub
xchg
pop
or
in
out
popa
inc
cs
or
sbb
dec
sbbb
xlat
push
cmc
lods
cwtl
not
jo
lret
or
jp
mov
pop
sti
sti
aaa
mov
adc
xor
mov
fimuls
mov
dec
aam
int
fbld
and
mov
mov
popa
daa
or
or
xchg
pop
insb
xor
inc
xor
xor
sahf
lea
aad
aad
pusha
frstor
jns
fxch
dec
ds
or
push
das
fldl
push
xchg
lods
pop
xchg
cmp
xchg
xor
xchg
lods
jle
xchg
es
addr16
scas
repz
push
les
add
push
pop
mov
pop
int
iret
les
lds
xchg
arpl
subb
aad
bound
mov
in
ret
sahf
das
push
ss
clc
sbb
addr16
mov
inc
stos
mov
scas
leave
rcrb
inc
aad
inc
mov
fists
xchg
xchg
xor
add
pop
jmp
lret
aas
mov
pop
adc
mov
fwait
aaa
fimull
push
fsubrl
adc
int3
inc
lahf
loope
ja
lds
loopne
push
mov
repnz
inc
aaa
or
push
fwait
cli
stc
stos
bound
stc
fmuls
in
or
out
push
pop
xchg
and
lods
adc
pop
inc
movsl
xor
push
or
cmp
in
aas
dec
data16
sbb
push
lret
mov
push
ljmp
or
add
jbe
mov
movsb
ffreep
cmp
dec
jmp
sbb
lods
cwtl
iret
imul
pop
nop
std
mov
sbb
testb
js
or
and
dec
loopne
inc
ret
or
out
mov
push
xor
arpl
cmpsl
fnstsw
js
bound
and
xor
imul
jmp
mov
mov
lods
dec
sbb
mov
pop
ds
aaa
push
or
in
call
inc
sbb
fsts
xor
mov
loopw
es
std
insb
mov
add
dec
insb
dec
call
inc
pop
push
pop
pop
xchg
mov
movsl
pop
imul
cwtl
gs
push
rcrb
add
shlw
push
xchg
push
movsb
pop
jg
arpl
push
bound
jp
jge
push
cli
add
es
adc
mov
xorl
push
out
sub
push
and
xlat
rclb
xor
xlat
scas
mov
fwait
out
sub
mov
dec
arpl
cmp
adc
push
repnz
stos
hlt
xor
pop
repnz
imul
rolb
dec
lret
in
popa
xor
rclb
jp
jp
sbb
mov
and
xchg
and
push
bound
xchg
in
lahf
ja
cmc
cmpsb
mov
movsl
fisttpll
ja
fstpl
xchg
int
idivl
push
mov
movsl
lahf
lahf
mov
sbb
jmp
mov
loopne
pusha
sbb
push
pop
xchg
xor
sbb
and
imul
sti
push
cmpsl
mov
fs
daa
cli
fisttpl
ror
xchg
jb
jg
mov
mov
or
push
xchg
movd
fwait
mov
pop
fiadds
mov
mov
imul
jmp
or
dec
bound
add
movl
mov
dec
cltd
inc
or
arpl
xor
pop
fwait
jbe
ds
scas
sbb
lds
and
popa
ja
mov
jg
and
add
dec
push
dec
and
pusha
testb
mov
lods
pushf
push
pop
dec
negl
xor
idiv
shll
lret
sbb
sub
inc
int
daa
in
negb
in
sub
test
in
cmp
jmp
lock
mov
andb
leave
sub
lahf
mov
jne
loope
fsubs
push
jb
outsl
mov
cs
mov
scas
sbb
push
shrb
and
jo
pop
out
and
add
jecxz
popa
lret
pop
add
out
mov
insl
inc
push
mov
into
xchg
push
outsb
adc
cmpsl
dec
and
out
imul
pop
imul
inc
push
sbb
mov
aad
sbb
hlt
xchg
pop
cwtl
fwait
xchg
cmp
cs
push
call
das
xchg
cmpsl
out
mov
in
fucom
mov
mov
sub
xchg
mov
scas
pop
ljmp
jmp
gs
jne
cmp
in
cmpsb
bswap
mov
adc
and
sub
int3
fs
std
cmc
bound
or
out
xlat
jmp
mov
pop
lcall
push
fwait
jb
mov
loopne
stos
out
jns
cmp
sbb
sbb
enter
xor
fldl
out
and
jno
outsb
clc
or
pop
movsl
stc
xchg
jecxz
fistpll
lock
inc
cmp
xor
popa
inc
arpl
into
mov
inc
push
es
mov
pop
aam
jnp
sbb
fidivl
mov
push
mov
scas
pop
push
cltd
mov
fisttpl
jno
sub
or
pop
pop
sbb
sbb
xchg
gs
lods
lds
and
orb
int3
push
movsb
mov
notl
fsubrs
adc
sbb
into
ss
jmp
push
bound
sub
shlb
inc
xchg
cmpsb
inc
cmpsb
frstor
or
inc
xchg
dec
jnp
adc
dec
lods
inc
mov
arpl
mov
inc
dec
push
into
push
ljmp
mov
mov
ret
sbb
or
repz
test
and
fcomp
adc
jg
xchg
push
xor
cld
dec
mulb
dec
and
push
mov
inc
cmp
inc
cmp
pop
push
jecxz
sbb
bound
or
push
dec
test
out
lret
push
or
push
scas
add
popa
in
dec
pop
pop
xchg
mov
dec
rorb
fistpl
xchg
inc
pop
cmp
gs
push
pop
aaa
mov
and
arpl
sbb
jb
outsb
imul
loopne
test
mov
lds
js
fwait
stos
imul
sbb
mov
jnp
xchg
sti
pop
pop
aad
sbb
int
push
mov
push
sub
push
daa
in
int
mov
sahf
add
pop
ret
dec
or
cmpsb
adc
mov
lock
imul
inc
add
sub
mov
cmp
pusha
xchg
jns
jne
roll
pop
cltd
lret
pop
pop
lock
add
fildll
and
jg
into
xlat
xchg
cli
shrl
aaa
push
leave
and
push
addl
subl
lods
jle
sbb
subb
loop
dec
in
das
xchg
cmp
outsb
fwait
cmp
repnz
pop
push
sub
je
ret
xchg
push
jns
sub
icebp
mov
adc
sub
jg
scas
pop
rcr
inc
outsl
mov
shrb
cld
xchg
loopne
adc
xchg
out
jp
or
in
sub
xlat
dec
cmpb
xchg
pushf
in
xlat
in
mov
add
cmpsl
xor
jbe
gs
lahf
mov
cs
in
aad
enter
dec
test
gs
jno
add
add
add
rclb
imul
cs
mov
and
sbb
push
data16
xlat
cmp
mov
inc
jb
roll
dec
inc
cmp
xchg
mov
adc
cmp
xchg
int3
xlat
gs
cmpsl
xlat
imul
xchg
cmpsl
stos
jbe
jecxz
cmpl
clc
insl
fimull
pop
xor
scas
aad
sub
cmp
shrb
add
std
sub
stos
popf
rcll
pop
mov
sbbl
sbb
sub
pop
lahf
repz
nop
out
inc
xchg
daa
jno
stos
iret
push
pop
iret
ror
cmp
push
add
outsl
int
data16
push
clc
mov
sahf
sub
pop
dec
fistl
fistl
neg
mov
aad
or
mov
jmp
in
push
pop
pop
dec
push
stos
jbe
and
pop
out
push
addr16
xchg
xor
not
jmp
push
and
dec
xchg
repz
js
jmp
in
push
push
pop
cmp
dec
dec
std
or
dec
xor
push
cmp
xor
ret
pusha
loopne
mov
add
xchg
iret
fiaddl
adc
test
cmp
or
mov
aas
lock
jmp
insb
popf
adc
inc
ss
adc
jo
jb
out
leave
jmp
push
mov
cmp
xchg
and
addr16
xchg
xchg
call
outsb
inc
cmp
mov
xor
xlat
lea
idiv
dec
cmp
jle
popa
sub
sub
push
inc
dec
in
cmp
rol
sbb
xchg
into
mov
mov
xor
imul
pusha
dec
push
sub
xchg
aad
es
sub
ja
mov
sbb
sahf
nop
repz
add
shl
xor
cmp
popf
call
aaa
sub
xchg
jp
xchg
mov
sbb
fcoms
cmp
push
mov
and
repz
push
and
dec
icebp
dec
push
xchg
fists
pop
loop
lods
xchg
and
rolb
data16
pusha
mov
push
or
mov
adc
sarb
lods
pop
bound
push
idivl
add
in
pop
dec
popl
mov
add
cmp
push
jmp
jns
bound
push
jmp
mov
sbb
cmpl
ljmp
mov
aad
mov
pusha
pop
popa
int
gs
sub
pop
pusha
cli
xchg
inc
push
cmp
imul
dec
ret
lcall
mov
xor
addr16
pop
sbb
cmp
call
mov
pop
mov
adc
fcoml
mov
push
cmp
push
pop
mov
int3
mov
add
in
shll
mov
or
das
push
jmp
cmp
ja
sbb
jns
sbb
push
and
push
insl
jg
lret
jno
shrb
cs
xchg
or
sub
jecxz
xchg
xchg
lods
data16
inc
jp
sbb
and
adc
lahf
xor
push
sub
nop
xchg
jg
sbb
pop
cmp
pop
ja
pop
and
in
adc
inc
in
in
inc
fnstsw
nop
push
mov
push
xor
rcll
and
cli
cmp
push
ljmp
add
mov
bound
stos
pop
in
pushl
inc
jno
fwait
dec
in
dec
ja
sbb
pop
or
add
pop
bound
pop
cwtl
push
sub
cli
xor
mov
xchg
jmp
and
cs
sub
ret
or
push
xor
arpl
inc
dec
imul
push
jg
push
test
or
repz
aam
push
jnp
and
imul
in
out
dec
bound
jnp
lcall
pop
or
and
repnz
loopne
adc
sbb
jns
cmc
out
cmpsl
mov
or
popf
ret
data16
mov
arpl
xor
sbb
pop
fwait
jns
adc
in
loop
pop
xor
push
popa
popf
and
cmc
fbld
pop
sbb
in
out
xor
cmp
cmp
xchg
out
test
movl
lock
pop
sbb
es
ljmp
push
push
in
lods
push
dec
cmp
add
dec
pop
rclb
or
pushf
fnstcw
js
bound
inc
outsl
pop
adc
inc
or
mov
xor
sub
js
movsl
fnstenv
jle
imul
imul
push
stc
fnstsw
imul
add
out
cli
inc
inc
cld
ret
push
popl
xor
loope
and
je
repz
pop
cmp
mov
ja
insb
jbe
sub
push
addr16
arpl
lea
cmpsl
cmp
mov
jbe
xor
addl
ljmp
aad
and
mov
push
push
mov
pop
pop
push
adc
shlb
cmp
and
cmp
cmp
or
test
and
pop
adc
cmp
lahf
lock
jmp
mov
sub
cmpsb
mov
popa
pop
add
pop
dec
mov
pop
pop
lock
iret
jmp
mov
test
sub
fsub
es
iret
sub
iret
call
out
fbld
bound
arpl
gs
aad
jecxz
cmp
cs
pusha
xchg
or
lock
add
sub
fisttpl
test
pop
mov
add
js
push
data16
sub
mov
cltd
popa
or
nop
add
push
daa
in
and
adc
mov
sbb
pop
hlt
xor
pop
or
adc
movsl
imul
fisubrs
pop
into
ljmp
mov
cltd
jbe
shr
lock
fs
push
xchg
ja
addr16
test
scas
inc
or
xor
cmp
push
push
mov
sub
mov
adc
mov
inc
mov
scas
xchg
push
xor
scas
push
lea
inc
inc
in
shrb
arpl
xchg
data16
cmp
xlat
pusha
dec
cwtl
and
mov
fisubs
gs
pop
cmp
adc
in
xchg
or
loop
test
jp
pop
push
pop
inc
sbb
mov
mov
fstps
into
sbb
cmpsl
je
xor
rorb
dec
push
xor
scas
jle
mov
test
or
shrl
push
push
mov
addr16
dec
jecxz
adc
xchg
mov
lods
fwait
movsl
or
cmp
cmp
pop
push
lretw
xlat
sub
ss
test
and
aad
aad
data16
mov
pop
mov
xchg
fisubrl
mov
pushf
xor
mov
ret
imul
ss
stc
rorb
call
and
cvtdq2ps
push
and
mov
js
mov
popa
xchg
incl
ljmp
addr16
fs
cmpsb
xchg
sbb
imul
pop
cmp
dec
push
push
into
data16
xor
fldcw
push
das
repnz
dec
data16
frstor
pop
fsubr
loope
sti
shlb
sahf
dec
pcmpgtd
insb
in
dec
lods
fs
fldenvs
add
push
mov
lret
aaa
add
jecxz
iret
push
xor
mov
int
bound
dec
fdivrs
les
dec
sahf
xchg
scas
push
cmp
pop
arpl
addr16
xchg
pop
pop
mov
xor
pop
dec
inc
jg
add
jb
mov
jae
arpl
mov
ss
mov
sbb
fs
inc
xchg
inc
mov
xor
and
dec
xor
and
sbb
arpl
push
test
add
push
clts
aas
inc
jp
cmp
sub
out
push
cmpsl
dec
adc
push
out
repz
xchg
repnz
out
jns
adc
xchg
bound
inc
test
push
div
hlt
mov
lret
pop
loope
pop
pop
fwait
es
lret
aad
inc
adc
ljmp
push
in
es
cmp
xor
and
loopne
fs
xchg
and
dec
mov
pop
ljmp
dec
mov
cmp
aas
ds
cmp
stos
fstp
aaa
int3
fldenv
push
push
push
inc
in
pop
stc
sub
hlt
lods
mov
cs
xor
fwait
sub
mov
pop
ja
lcall
ja
in
ret
mov
repnz
icebp
or
xchg
mov
mov
imul
popf
jnp
movsl
loopne
and
pop
call
xchg
rcrb
or
or
cld
sub
into
push
and
lahf
std
hlt
das
or
adc
lret
add
push
hlt
jg
sub
xchg
dec
dec
mov
pop
jp
jecxz
mov
dec
shrb
lods
repnz
icebp
daa
fldt
popa
xchg
push
stos
add
stos
add
pop
sbb
clc
cltd
push
int
outsl
int
lret
aad
cmpsb
test
mov
mov
cs
fstps
ret
xor
pop
dec
bound
xchg
jge
adc
imul
clc
or
in
das
inc
lds
add
inc
fs
adc
fimuls
and
lea
push
sub
out
data16
stos
int
push
adc
lea
bound
jmp
pop
lcall
mov
arpl
push
xchg
inc
stc
arpl
adc
lret
enter
lea
lock
data16
sbb
pop
jne
es
inc
stos
cs
xchg
popa
les
push
fwait
out
call
pop
pop
loopne
push
fadds
sbb
stos
or
shll
sbb
mov
sub
inc
addr16
push
leave
scas
in
dec
xor
pop
pop
fs
ss
dec
mov
inc
mov
adc
in
xor
lea
push
fistl
bound
outsl
shll
andl
or
xor
int
jne
popa
inc
adc
sbb
cmp
sub
pop
cmpsl
mov
xor
ja
xchg
mov
xchg
push
shll
enter
jmp
rcr
ss
out
adc
aad
inc
data16
dec
cmp
aaa
sarl
in
cmp
int3
push
repz
cmp
ljmp
or
xchg
aad
mov
and
cwtl
xchg
loope
in
sub
rcll
les
push
add
lods
adc
xchg
daa
gs
das
jns
dec
adc
lret
std
in
inc
push
mov
hlt
das
fcomp
xor
test
les
and
fbstp
imul
pop
imul
bound
xchg
cwtl
jns
lret
cmp
imul
mov
movsb
lcall
sbb
insb
xlat
popf
imul
push
mov
ss
test
outsl
test
mov
pushw
cmpsb
push
rcll
icebp
les
mov
pop
call
jg
pop
imul
push
iret
pop
xchg
dec
insl
xor
add
lret
xchg
push
xchg
push
test
inc
sub
adc
push
movsb
dec
in
sbb
mov
xchg
dec
fsubl
jmp
xchg
adc
and
xor
test
movsb
jmp
add
cmp
push
das
pusha
push
mov
in
icebp
loope
data16
xor
in
xor
xor
imul
push
xor
xor
cltd
outsl
and
xor
pusha
xor
cmpsl
out
xor
dec
sbb
cmpsb
mov
xor
xor
inc
cltd
pop
leave
daa
xor
pop
sub
and
cmp
cmpsl
push
xchg
push
out
scas
mov
xor
xor
aas
cmp
or
daa
push
test
cmp
ljmp
pop
aaa
xor
inc
gs
push
mov
xor
frstor
imul
ds
inc
leave
jmp
ror
es
push
dec
mov
shll
jmp
inc
in
pop
in
fisttpl
push
add
push
jecxz
popf
mov
insl
pusha
sbb
frstor
push
xor
stc
scas
and
scas
and
jo
jmp
and
jo
jmp
and
jo
jmp
and
scas
and
scas
and
lock
fs
jp
cmp
pop
inc
mov
addr16
xor
lock
and
push
mov
bound
or
mov
or
or
xor
out
and
xchg
mov
or
xchg
mov
or
imul
in
lea
popl
inc
out
cmp
jecxz
shl
loope
call
xchg
pop
pop
and
push
insb
std
sub
call
xor
mov
pop
loopne
cmp
pop
mov
cmp
dec
outsl
test
xchg
pusha
mov
lret
outsw
jmp
imul
add
and
or
push
into
push
arpl
iret
fists
rclb
bound
rclw
push
rclb
pop
rcll
data16
push
aam
jge
cwtl
cmp
cbtw
dec
push
es
mov
pop
data16
xlat
mov
and
xor
bound
fsubr
push
xchg
pop
xchg
dec
push
fcmovu
xchg
cbtw
push
push
add
push
pop
dec
xor
sbb
ds
loope
xor
xor
push
add
dec
pop
adc
mov
push
adc
fstl
push
ss
cmp
fnstcw
icebp
xor
mov
clc
push
mov
ljmp
mov
dec
xor
aaa
inc
js
pop
cmp
xchg
xchg
push
push
movsb
dec
out
sbb
sbb
int
vpaddusw
stc
sub
ss
mov
sub
dec
push
and
inc
loop
cmp
dec
jno
xchg
lret
mov
test
outsb
jp
inc
inc
mov
test
ret
iret
pop
and
pop
movb
stos
pop
cmp
mov
pusha
mov
es
sbbl
push
cltd
loope
pop
imul
cmpsb
dec
in
and
cmpsl
xchg
aad
lahf
aam
rol
pop
jnp
push
xor
ljmp
xor
fs
cmp
mov
out
dec
and
push
mov
int3
cmp
jg
push
sbb
ss
pop
in
mov
in
jl
stos
pop
or
aad
mov
rol
add
mov
stos
mov
fs
daa
orb
pandn
inc
push
lds
dec
call
scas
cmc
arpl
out
cmc
sub
mov
jmp
xchg
pop
fisttps
sub
ficoml
jo
add
stc
mov
es
stos
test
shll
js
fadds
mov
sbb
push
ljmp
imul
shrl
push
popf
lods
in
aam
addr16
sbb
jo
mov
mov
ret
ffree
or
ss
mov
inc
pop
adc
mov
fcoms
sbb
xchg
divb
insl
push
dec
loopne
lods
cmp
xchg
jbe
sti
scas
sahf
jmp
shl
shlb
outsl
loop
nop
iret
lods
shl
cmp
mov
pusha
addr16
sbbl
insl
inc
jecxz
pop
xor
mov
mov
js
mov
fisubrl
aad
jmp
jb
lcall
jg
cmovno
rclb
cwtl
out
sbbb
mov
aad
and
push
dec
in
dec
xchg
add
fcomi
ss
push
arpl
xchg
testb
add
jae
sbb
fstpt
xor
outsb
jmp
lcall
dec
test
dec
or
inc
cmp
dec
sub
stos
sahf
or
xchg
iret
push
xorb
stc
cmp
and
xchg
adc
pusha
ret
add
insb
in
xorb
mov
add
adc
xor
insb
imul
pop
jmp
pop
pop
dec
ljmp
fs
cmpsl
jle
pop
add
mov
fstpl
cmpsl
sub
aad
xchg
mov
pop
and
aam
pop
mov
push
push
mov
cmp
arpl
mov
jmp
stos
mov
adc
xchg
push
les
push
mov
ja
xlat
outsl
scas
mov
cmp
or
fwait
outsl
icebp
mov
lret
and
jp
pop
mov
dec
ds
out
fwait
testb
and
dec
gs
pop
mov
push
sbb
leave
fs
and
fwait
push
cmp
out
sbb
inc
pop
inc
inc
cmp
pop
jecxz
push
out
lahf
jbe
pop
add
cmp
xor
sbb
cmp
lods
lea
pop
add
dec
aad
in
fcomps
aad
mov
jecxz
pop
popf
clc
pop
or
loopne
stos
pop
cwtl
lret
daa
loop
testb
mov
xor
lds
or
push
cmpsb
add
push
cld
xchg
jb
movsl
pop
push
cmp
pusha
add
stos
push
mov
adc
imul
push
pop
outsl
out
adc
popf
xlat
sbb
pop
sub
or
pop
arpl
sbb
xor
add
pop
movsb
sbb
mov
test
push
sub
jmp
ljmp
and
pusha
push
or
lret
js
xchg
and
xchg
mov
and
jp
jae
sbb
pop
and
into
adc
dec
loope
sbb
mov
rorl
xchg
inc
sub
sbb
cmp
test
pop
pop
movaps
inc
cmpsl
mov
add
push
pop
repz
mov
fldl
addr16
xchg
jne
stc
in
xchg
clc
dec
sub
stc
push
das
dec
xchg
int
movsl
pop
vpmovsxbw
sub
arpl
xchg
or
out
adc
pop
xor
push
push
hlt
push
inc
movsb
mov
adc
hlt
mov
jecxz
aam
dec
inc
cltd
pop
leave
pop
mov
and
mov
hlt
in
jne
mov
stos
rcl
insl
and
sub
cmp
dec
or
gs
cs
sbb
pop
xlat
pop
xor
dec
dec
in
sbb
in
xor
rcr
popa
scas
leave
mov
xchg
or
push
hlt
dec
insb
sti
pop
pop
xlat
jl
jmp
xchg
push
pop
push
mov
pop
mov
in
arpl
enter
or
mov
jmp
add
mov
aam
inc
fstp
mov
data16
dec
mov
dec
in
imul
gs
sub
sub
rcr
xor
icebp
dec
cmp
lock
add
aas
nop
imul
xor
push
filds
call
cmp
xchg
insl
je
fmull
sub
fimull
in
test
cltd
popa
push
xchg
mov
movsb
mov
adc
scas
jl
dec
std
pop
fistl
xchg
or
sub
jecxz
adc
psrlw
push
xchg
sahf
cmp
mov
cmpsl
add
push
bound
push
or
xchg
call
mov
sti
scas
add
fs
sub
dec
icebp
std
popa
sarb
movsl
test
fdivrl
cmp
sbb
jle
cs
jns
cmp
add
cmc
and
mov
cmp
dec
dec
repnz
sub
test
das
mov
mov
sub
add
mov
mov
dec
inc
rorl
pusha
es
cmp
push
test
push
data16
cld
bound
pop
push
mov
shrl
aas
movsl
aam
inc
mov
jnp
incl
fstpl
sub
in
xchg
add
pop
outsb
xor
addr16
xor
jno
addr16
shl
push
aaa
call
aam
fcoms
mov
xchg
push
bound
sbb
push
bound
push
cmp
jns
and
in
sub
push
cmp
adc
fisubs
sub
ret
mov
in
or
mov
jmp
mov
sbb
mov
xchg
mov
cli
sbb
sub
cmp
xchg
ret
dec
cmp
fucomp
xor
sbb
push
push
pop
out
bound
jmp
mov
jo
xchg
sbb
outsb
fwait
in
out
aaa
test
xor
pop
adc
push
mov
jno
data16
push
xor
xor
push
notl
mov
clc
test
lret
or
mov
in
cmp
sub
cs
xor
pop
cwtl
out
dec
andl
push
daa
fisubrs
inc
popf
stc
jo
mov
hlt
pop
adc
and
std
popa
pop
xor
or
dec
stos
xchg
xor
cmp
lea
push
out
sbb
dec
in
push
dec
stc
xchg
pop
cld
aas
sbb
cs
jle
call
jns
cmp
movsb
jmp
sub
shrb
pop
in
addr16
imul
xchg
or
outsl
or
movsl
push
or
jp
lahf
pop
jns
pop
ficoms
lret
cld
daa
mov
cmpsl
imul
stos
rorb
out
or
pop
adcl
scas
inc
pop
push
aaa
pop
roll
shrb
cmp
dec
inc
sub
inc
pop
frstor
aad
jp
or
xor
lcall
lahf
mov
add
int
add
leave
mov
lock
out
lcall
imul
fprem1
and
xlat
push
outsb
dec
cmc
mov
test
adc
lahf
out
dec
cmpl
js
daa
into
mov
sub
insb
ljmp
and
sbb
xchg
mov
mov
lcall
inc
and
cmpsb
dec
dec
jnp
aad
aaa
fistpll
push
push
adc
data16
adc
and
or
mov
hlt
lods
fcomp
gs
mov
test
cltd
jp
js
mov
rorl
cmpsl
test
pop
outsl
dec
loopne
dec
imul
or
cmc
fs
ds
xor
data16
pop
push
pusha
cmpsl
pop
adc
jmp
aam
inc
test
inc
and
adc
xor
pop
fimuls
adc
pop
inc
jecxz
adc
push
ljmp
ror
stc
or
jne
xchg
pop
aam
xchg
add
fwait
sti
and
stc
lahf
xor
lock
cmc
imul
in
push
or
mov
push
iret
scas
in
push
xor
fbld
test
stos
jns
dec
popf
cmp
cmc
jo
popa
neg
mov
push
fsubs
pop
ss
sub
fnsave
jns
mov
mov
movsl
gs
adc
mov
mov
and
ret
jns
flds
ror
stc
inc
and
loope
je
mov
stc
dec
outsb
out
les
xor
dec
jg
dec
push
jno
aad
xchg
lds
lcall
stos
stos
and
fwait
pushf
stos
sub
lock
fldenv
adc
pusha
dec
push
movsl
in
ficompl
jl
mov
loop
cs
mov
inc
es
rorl
js
mov
push
gs
push
adcb
fnsave
aad
sub
or
lret
xchg
cld
in
or
pop
out
mov
xchg
dec
dec
outsl
and
scas
xor
daa
lahf
lock
cmp
lret
lahf
xor
adc
or
arpl
push
movsb
lcall
or
jns
lods
push
jl
sub
and
fwait
cli
push
push
sub
add
test
push
push
cmp
test
lret
mull
dec
xchg
ja
pop
stos
mov
sub
in
sbb
in
dec
mov
jbe
jns
jnp
pop
pop
sub
and
jmp
push
or
add
xchg
pop
jl
bound
sbb
mov
cltd
xor
fisubl
push
add
call
and
inc
adc
jo
outsl
sub
pop
stos
push
rcrl
and
or
push
mov
mov
inc
jo
xor
orb
or
push
mov
inc
cmp
xchg
push
daa
or
push
xchg
arpl
mov
sbb
test
pop
jmp
xor
sbbl
ficoms
cltd
clc
mov
shlb
sqrtps
mov
addr16
fisubs
in
jp
loop
out
out
add
mov
gs
stos
and
dec
sahf
imul
push
add
dec
sarb
sahf
lods
mov
push
xchg
sub
ljmp
imul
data16
sbb
fidivl
lods
imul
popf
xor
xlat
fmull
adc
ret
xor
mov
push
aad
movsl
arpl
sub
lods
sub
aaa
and
popf
dec
mov
sub
mov
arpl
push
lret
cs
idiv
dec
bound
pop
bound
movsb
adc
leave
shll
push
push
sbb
shrl
movsb
in
jne
addr16
imul
leave
aad
ljmp
xor
pusha
enter
push
int3
mov
rolb
mov
xor
dec
repnz
imul
or
xor
dec
fnstenv
dec
out
cmp
jbe
incb
cwtl
and
mov
adc
jecxz
inc
aam
lods
fcomps
xor
push
pop
mov
movsb
lock
daa
bound
fcom
push
mov
fnstsw
imul
cmp
dec
nop
gs
cmc
fdivrs
pop
cmp
insb
fmuls
or
add
inc
dec
cmp
pop
adc
mov
push
cmp
sahf
or
xor
jge
adc
test
clc
in
adc
bound
sbb
dec
aad
cs
test
test
inc
fldt
add
pop
mov
in
cmp
out
mov
push
in
ljmp
add
aad
jae
jmp
fbld
in
jecxz
sbb
mov
bound
pushf
add
enter
loop
dec
lods
pop
fldt
imul
imul
add
cmp
dec
dec
mov
mov
popa
pop
xlat
sub
popa
addr16
push
repz
and
inc
mov
shll
stos
test
push
pop
push
dec
in
loope
mov
leave
sarb
pop
es
mov
dec
xchg
fisubl
or
push
sub
mov
and
push
adc
sbb
mov
mov
cs
xchg
mov
movsb
fisubl
pop
adc
dec
adc
jge
mov
adc
inc
or
lods
adc
lock
dec
incb
fs
sub
push
jmp
mov
push
insl
and
in
in
xchg
repnz
pop
mov
fsub
push
jg
mov
in
vpsrld
jecxz
inc
or
movsb
loope
fwait
fs
bound
cmp
pusha
push
out
dec
cmpsl
in
xchg
sub
outsl
jge
inc
and
inc
or
cli
cmpsl
dec
call
jle
insb
outsb
xor
test
call
shrb
xor
push
dec
aad
mov
aam
das
test
enter
ljmp
pop
clc
je
into
jmp
inc
mov
insl
rcr
lret
push
bound
pop
je
mov
popf
in
insl
push
and
add
fistpll
fldenv
int
ljmp
aam
sarl
mov
je
xchg
nop
pop
dec
mov
xor
in
cld
imulb
out
test
mov
dec
mov
inc
xor
inc
cmp
aad
lret
adc
jmp
and
vorps
aad
xor
data16
push
push
push
sarb
lahf
and
call
or
xchg
hlt
push
gs
in
ds
or
jmp
mov
inc
xchg
push
adc
xorb
movsl
adc
imul
mov
mov
out
sub
or
popa
xor
and
stc
xchg
movsb
mov
lahf
hlt
xchg
test
hlt
push
fldl
mov
fs
call
mov
inc
dec
and
push
mulb
lock
pushw
aam
xchg
in
or
testl
loop
push
movsb
lahf
mov
sub
and
inc
pop
sbb
gs
push
icebp
inc
lret
or
fimull
pop
adc
sub
ss
cmpsl
mov
pop
test
in
mov
xchg
stos
lahf
bound
push
inc
or
das
dec
cmpsb
ljmp
pop
xor
mov
ds
and
push
in
or
das
dec
adc
rcll
xchg
lods
sub
jge
lret
push
or
xor
and
cmpsb
es
in
mov
push
cmp
es
xor
scas
std
xor
xor
mov
jle
ss
push
jcxz
push
dec
push
inc
es
pop
es
in
adc
movsl
icebp
mov
in
cmp
mov
int
xlat
dec
addr16
sub
jns
pop
cmp
iret
jmp
outsb
test
or
push
les
fiaddl
inc
call
dec
sbb
rcr
pop
dec
mov
jne
lods
mov
outsl
or
in
fs
cmpsb
pusha
or
lahf
pop
mov
lcall
xchg
sub
jno
es
loopne
fcomps
pop
mov
je
int
test
push
xlat
imul
mov
mov
mov
jecxz
sub
into
xchg
test
dec
inc
cmp
fmull
pop
inc
jb
push
fxtract
lret
xchg
pop
push
cs
xor
push
lock
adc
shl
in
push
push
mov
sbb
in
loopne
cmp
nop
xchg
js
aad
arpl
inc
shrl
dec
in
sar
and
cmp
loope
and
mov
in
fs
sub
fnstsw
aad
add
imul
xor
ffree
pop
pop
test
lret
dec
pop
cmp
repz
cmp
mov
or
movsl
arpl
in
cmp
inc
push
inc
sti
sbb
inc
mov
mov
loope
aad
ret
dec
dec
inc
outsb
sbb
and
push
aas
sub
icebp
fwait
lods
mov
push
pop
pop
pop
mov
test
inc
mov
xor
adc
gs
or
das
call
pop
or
sbb
push
xor
add
inc
push
and
stos
jg
jno
jge
bound
add
inc
filds
sub
push
in
lret
fildl
sbb
lds
ds
cmpsl
xor
mov
fstps
fnstenv
xchg
inc
in
dec
mov
movsl
rcll
testl
and
and
insl
adc
les
mov
inc
movsl
pop
mov
adcl
add
push
mov
dec
insb
jne
cmpsb
cld
fsincos
bound
dec
jmp
add
sub
jae
sub
lds
pushf
enter
out
mov
adc
cmpsl
xor
cmp
sub
or
pop
test
stc
push
inc
mov
inc
out
dec
test
dec
gs
arpl
dec
scas
das
mov
jl
push
sub
repnz
xlat
clc
cmp
mov
lahf
arpl
bound
test
or
stos
or
stos
and
stc
imul
mov
aam
inc
cmpsl
push
mov
sbb
repnz
cmp
mov
mov
scas
mov
int3
sub
xor
fsincos
outsb
push
subl
inc
cmp
cmp
mov
cmpsb
xchg
js
mov
pop
add
dec
pop
in
lret
mov
imul
in
pop
inc
or
add
scas
cmc
adc
lcall
xchg
sub
mov
push
icebp
pop
pop
test
aad
ret
jne
cmc
push
fs
cmp
mull
stos
adc
mov
ds
idiv
jb
pop
cmpl
xor
dec
sahf
fildl
sbb
fidivs
or
mov
pop
pop
pop
mov
and
js
inc
int
or
cmpsl
mov
cwtl
push
roll
pop
pop
out
dec
dec
mov
sbb
lods
into
cmp
aaa
arpl
sbb
mov
sbb
inc
jp
rcll
call
dec
stos
clc
insb
xor
push
push
pop
pop
cmpsl
dec
push
in
lock
outsl
imul
fsubs
repz
jl
ja
or
hlt
cmc
ljmp
adc
inc
push
leave
mov
sbb
xchg
movsb
out
lahf
mov
pop
adc
dec
shrb
leave
mov
push
leave
rcrl
push
xor
jge
and
arpl
xor
mov
out
lods
xor
aad
dec
insb
xor
cmp
into
dec
shrb
js
or
pop
ss
dec
out
inc
sbb
jle
aam
mov
icebp
in
pusha
push
aad
cmc
or
idivl
ficoms
push
shlb
inc
xor
jmp
xchg
add
push
sahf
or
push
jnp
dec
fwait
cli
sbb
sahf
jnp
add
or
push
pop
sub
fcomi
lret
dec
mov
ljmp
push
push
adc
and
inc
fsubr
loopne
add
inc
stos
jl
sbb
or
xor
or
adc
and
aam
pop
adc
push
pop
mov
push
lahf
pop
adc
adc
add
and
push
dec
lock
mov
push
js
imul
mov
xchg
pop
mov
nop
xchg
dec
rcrl
pop
iret
ljmp
xchg
xor
cmc
pop
pop
sbb
ja
adc
sub
cmpsl
test
clc
imul
xchg
ljmp
sub
jo
cli
inc
loop
pop
adc
and
add
mov
xchg
loope
hlt
inc
xor
sarb
fcomps
xchg
or
std
in
jb
jge
int
mov
inc
aas
sub
inc
dec
lahf
pop
pop
fwait
ss
inc
jmp
mov
push
pop
and
rorl
loopne
sbb
out
hlt
fidivrl
add
mov
xchg
mov
sbb
outsl
jnp
or
scas
xchg
or
xchg
xor
push
jb
incb
push
fcmovnb
mov
leave
cmpsb
or
insb
in
xchg
pop
lcall
push
test
mov
dec
sbb
sti
dec
cmp
push
lea
clc
mov
or
addb
or
icebp
adcl
bound
xchg
lock
dec
jp
xchg
and
fdivs
push
mov
cmpsl
filds
cmp
pop
pop
mov
mov
data16
pop
pop
and
add
pop
mov
out
in
fisttpl
mov
adc
ret
dec
add
push
sbb
aad
test
subb
cmp
xchg
push
or
cltd
adc
dec
shl
mov
mov
and
mov
or
cltd
xlat
adc
faddp
fdiv
mov
lock
inc
in
icebp
lock
mov
add
xchg
add
in
sbb
mov
jne
dec
adc
shrl
lret
adc
dec
inc
lcall
sbb
pop
add
pushf
and
xor
or
sbb
filds
xor
pusha
or
add
or
mov
pop
aaa
pop
cltd
iret
movsl
data16
stos
mov
push
xor
xor
ret
mov
roll
or
int
mov
dec
pop
pop
or
cmp
cmp
pusha
cmpsb
and
jo
push
gs
aaa
pop
pop
mov
in
ret
inc
jge
push
mov
mov
loope
dec
popa
push
push
push
icebp
cmp
push
cli
popf
jae
push
jo
fwait
and
insb
xor
std
push
jge
in
dec
jmp
cmp
in
jnp
or
int3
xor
outsl
jmp
adc
jecxz
fdivr
wrmsr
daa
hlt
adc
cmp
jp
xchg
scas
loope
ds
das
or
orb
popaw
pop
pop
add
xor
es
pop
or
xor
addr16
or
push
cwtl
outsl
mov
adc
fwait
scas
sbb
js
dec
outsl
mov
mov
loopne
andl
bound
int3
push
imul
repz
mov
out
inc
xchg
sub
sbb
xchg
and
cmpsl
push
lcall
xor
push
jp
rsqrtps
mov
xchg
sub
stc
xor
dec
push
sub
mov
iret
lcall
sbb
pop
cmp
das
int3
mov
mov
stos
and
stos
inc
loopne
aam
and
adc
push
pop
dec
inc
xor
imul
nop
clc
mov
outsl
push
frstor
xchg
repnz
fnstsw
repz
mov
dec
pop
in
xchg
test
fcoms
sbb
cmp
dec
xorb
das
sbb
pop
ljmp
inc
out
inc
fdivrl
inc
sbb
add
daa
dec
hlt
stos
cmp
dec
xchg
add
iret
icebp
aad
mov
xor
dec
add
xchg
addr16
pop
or
mov
push
or
inc
loopne
frstor
bound
jmp
jge
push
adc
sub
jg
xor
outsl
mov
or
mov
mov
in
insl
jmp
es
loope
or
repnz
xchg
leave
xchg
testb
mov
dec
sbbl
test
int
xchg
leave
mov
fistps
mov
xor
xor
inc
es
mov
xor
cwtl
mov
imul
and
cmp
xchg
pop
pop
mov
xor
pop
outsl
lea
ds
add
iret
sbb
std
sub
or
fcoms
push
pop
rcll
pop
xor
aad
lock
fs
xor
push
add
push
mov
pop
ret
sbb
clc
iret
lcall
mov
adc
cld
test
imul
or
outsb
jmp
ljmp
cwtl
outsb
in
movsl
cmovge
imul
or
sbb
aad
mov
cmpsb
aam
out
iret
hlt
xchg
fwait
stc
andb
jmp
pop
sbb
cmp
std
dec
sub
xchg
push
mov
inc
arpl
dec
and
or
ds
xor
iret
xchg
push
xor
add
or
pop
dec
cmpsb
clc
fidivrs
jbe
ljmp
xor
ljmp
cmp
pop
sub
hlt
pusha
push
cmpsl
mov
pop
repz
pop
inc
movsl
xor
fstpl
shll
es
mov
xor
xor
outsb
mov
das
ret
lds
inc
scas
jge
pop
and
in
out
dec
inc
and
pop
sbb
xchg
pop
lods
sub
fcoms
mov
pop
mov
mov
cli
in
mov
adc
bound
pop
pop
mov
inc
pusha
cld
ret
test
sarb
in
out
and
jecxz
pop
jmp
mov
clc
aas
ds
pop
xchg
scas
inc
mov
ljmp
js
sarb
loop
sbb
dec
mov
fldt
int
push
pop
cmp
sub
sbb
and
mov
jnp
rcll
fstl
imul
xor
xchg
popa
lods
loop
mov
sbb
call
xlat
lret
fwait
imul
mov
xor
pop
and
push
aad
adc
jecxz
xchg
repz
push
sti
or
xchg
add
pop
xlat
dec
xchg
ja
push
xchg
push
outsl
fists
js
shll
ja
xor
stc
out
add
lret
popf
mov
lret
jb
cmpl
je
ljmp
push
into
repz
jp
sub
or
xor
xchg
pusha
cmp
push
pop
in
ss
in
dec
in
xor
test
aam
push
xor
add
pop
push
push
sbb
movsl
aas
cmp
sahf
lahf
in
cmp
stc
add
imul
add
inc
sbb
xchg
inc
pop
rcrb
sub
push
imul
sbb
mov
cmp
and
stc
adc
xchg
cmp
jg
jge
fwait
adc
iret
jecxz
push
jecxz
jp
pop
mov
adc
hlt
push
mov
mov
inc
lods
pop
fxch
sbb
jg
pop
push
sahf
fnstenv
int
dec
icebp
aaa
push
adc
jl
fbstp
xchg
push
inc
out
xchg
pusha
mov
sub
fldenv
fldcw
insb
das
sub
pop
xlat
mov
sbb
mov
cli
out
insb
mov
adc
cmpsl
in
aaa
adc
leave
cmpsb
test
xor
jecxz
fldcw
inc
test
sti
lret
or
cmpsb
in
or
imul
arpl
add
pop
add
gs
jp
lret
cmp
lahf
cmp
sbb
dec
mulb
aad
lret
data16
sarb
lds
sub
xor
jne
cld
xlat
jecxz
adc
lods
dec
xor
push
or
push
scas
rorl
es
inc
cwtl
cmp
aaa
rclb
ficomps
rcll
cmpsl
push
js
adc
mov
arpl
jmp
repnz
push
outsl
xor
addr16
ds
mov
dec
xchg
jg
movsl
mov
lods
je
cld
je
push
mov
lahf
dec
mov
or
push
sub
pushl
push
pop
ss
xlat
imul
xor
cmp
lods
push
fs
xor
pushf
lods
push
xor
aaa
pop
fs
sub
ret
mov
shr
dec
ss
shr
and
xor
dec
sub
jl
add
std
lods
jp
or
pop
and
jg
pop
jmp
lret
inc
xchg
pop
xor
vsqrtsd
adc
cmp
cmp
adc
push
and
pop
jmp
cmp
jns
push
cmpsl
mov
ss
mov
data16
stc
fimull
out
add
sbb
xchg
push
cwtl
adc
pop
push
fdivs
rcl
and
fsubs
stos
addb
pop
push
pop
dec
loope
or
add
or
ret
ret
jnp
repnz
pop
int
or
and
jle
movsl
push
cmc
xchg
mov
mov
push
adc
lahf
jg
push
fcoms
or
pop
es
ljmp
jmp
lock
jge
call
arpl
in
adc
inc
jae
sbb
in
or
das
fidivs
pop
jl,pt
iret
mov
test
mov
scas
fcomps
sub
out
addl
mov
inc
mov
adc
xchg
add
stos
lods
push
pop
pop
xchg
js
out
sbb
push
repz
rclb
dec
ret
push
cmc
or
sub
add
xchg
xor
jbe
std
mov
ret
mov
fstps
arpl
xchg
add
dec
js
movsl
loopne
fistl
adcb
pop
not
imul
rclb
test
dec
dec
mov
popa
scas
mov
xchg
jmp
xchg
jp
push
mov
out
cmp
int3
sbb
shlb
mulb
bound
sub
lods
jp
inc
test
push
int3
sbbb
mov
dec
loop
mov
mov
fs
mov
xor
push
gs
movsl
cmp
mov
pop
outsl
int3
imul
aas
xchg
adc
daa
jne
repnz
pusha
lret
jbe
push
mov
gs
cmp
mov
fnstcw
jne
lea
divl
mov
xchg
popw
in
in
jae
movsw
out
inc
out
cmp
sbb
subl
jmp
jns
mov
aas
jno
loop
hlt
cmpsl
fcoml
fs
clc
lret
lds
and
and
mov
xor
mov
in
and
add
push
les
aad
aad
out
pop
loop
ret
push
push
mov
dec
sbb
xor
ds
icebp
in
xchg
push
xor
aad
addr16
mov
push
push
push
mov
push
inc
es
rclb
aad
ljmp
dec
loopne
mov
fisttpl
aaa
sarl
pop
mov
mov
xchg
dec
lods
lds
pusha
inc
xchg
xor
loopne
jbe
xor
inc
mov
mov
ret
js
push
pop
or
das
add
scas
fstps
xor
inc
sbb
mov
adc
in
sub
inc
pop
add
js
pop
pop
or
loope
iret
mov
and
scas
or
cmpsl
xorl
or
push
pop
pop
adc
fucomip
cld
mov
dec
fimuls
xchg
out
lea
xor
sarl
pop
dec
lods
or
inc
adc
cmc
add
mov
sbb
cmp
jmp
push
mov
xchg
lret
push
jbe
jbe
cmp
and
fnstenv
pop
rolb
outsl
test
mov
mov
xor
adc
shlb
mov
clc
pusha
mov
push
gs
test
inc
loopne
cmp
pop
cmp
test
dec
cmp
call
out
mov
frstor
pusha
lret
int3
ds
shrb
or
pop
daa
push
sti
sbb
mov
movsl
xchg
pop
aad
sub
test
mov
push
insb
fmuls
imul
fwait
push
xor
imul
inc
sbb
dec
xchg
xchg
daa
movsl
cmp
mov
jae
lret
mov
mov
inc
popl
pusha
inc
test
test
aad
imull
push
push
bound
sub
push
aaa
fwait
push
addr16
idiv
fld
sub
push
jb
call
or
and
hlt
pusha
callw
int
pop
sub
inc
hlt
int
add
adcb
notb
mov
inc
lock
pop
push
in
sub
aas
mov
xor
jecxz
pop
pop
jb
cmp
push
mov
rorb
cs
hlt
sbb
dec
aaa
lods
jne
push
xor
jmp
adcb
inc
lds
mov
movsb
aas
scas
addr16
movsl
jl
xchg
xchg
mov
lahf
cwtl
jae
or
pop
cltd
or
ja
popa
test
cmp
inc
sub
scas
decl
mov
cld
sbb
orl
xchg
loop
les
lahf
xor
and
aad
jecxz
loope
dec
pop
pusha
push
movsb
xchg
iret
in
sub
dec
push
push
push
fists
mov
dec
flds
idivb
dec
inc
pop
insl
test
xor
out
in
dec
stc
cwtl
pop
out
push
in
repz
mov
xchg
sub
xor
and
loop
cltd
in
xor
sbb
outsl
mov
sub
and
testl
mov
lret
cmp
cmp
jecxz
in
push
in
push
add
dec
xchg
rcrl
or
lcall
mov
mov
cli
clc
add
mov
mov
shl
or
and
bound
inc
cmp
jmp
inc
or
mov
loope
enter
pop
aad
loop
and
in
insb
or
icebp
mov
cli
sub
loopne
leave
push
outsl
push
in
gs
loope
stos
or
aam
cmpsl
js
sub
fadd
lock
movsl
fdivs
lods
mov
sbbb
dec
mov
loope
stos
mov
in
and
arpl
and
or
push
pusha
pop
cwtl
or
xchg
rolb
push
pop
cmp
mov
sarl
mov
sbb
xchg
cld
stc
in
pusha
js
cld
inc
js
ss
sbb
adc
sbb
xor
je
lods
push
pop
pop
loope
test
fwait
lock
in
jecxz
in
movsl
xor
mov
push
inc
fwait
or
push
cmp
gs
dec
imul
push
arpl
add
ja
xor
arpl
xchg
push
lock
in
leave
aam
mov
xchg
in
adc
data16
cli
adc
adc
popa
jecxz
hlt
pop
or
js
pop
mov
test
adc
pop
in
cmpsl
mov
clc
push
movsl
addr16
ljmp
test
xchg
and
xor
stc
inc
lods
cmp
push
push
xchg
pop
into
jecxz
mov
cmp
push
sbb
nop
fadds
insb
into
cmp
or
push
pop
push
xchg
mov
or
xchg
imul
pop
jge
jns
or
mov
lock
pop
arpl
out
mov
test
icebp
dec
cltd
xor
add
mov
leave
nop
or
rorl
cmp
leave
jns
push
adc
popa
mov
out
or
out
xor
inc
movsl
lock
xchg
ss
mov
mov
push
dec
scas
push
adc
cmp
cmp
xor
pop
loop
jp
cmpsb
inc
jns
stc
mov
popa
inc
out
shlb
hlt
leave
add
call
add
push
jns
jmp
jb
dec
cmc
mov
dec
shlb
add
push
mov
or
out
outsl
add
in
jbe
popa
cmp
int3
mov
outsl
sar
xor
pop
test
sbbb
aas
shll
rclb
fsub
fwait
xor
sub
lahf
adc
pusha
xor
imul
mov
sbb
std
push
lods
nop
pop
jge
ja
xchg
mov
adc
ret
aas
iret
loope
subb
mov
and
or
iret
pop
push
or
lret
mov
fildl
add
popa
sbb
sbb
dec
inc
pop
das
or
out
cmpsb
jmp
lods
outsb
imul
pop
mov
mov
dec
push
jge
lds
sbbl
divl
pop
push
jg
cmpsl
gs
dec
es
popf
shr
out
fcmovb
and
roll
xorl
iret
add
pop
add
out
lods
lret
xchg
lods
pop
sub
arpl
mov
js
std
into
aam
mov
ror
popf
mov
and
mov
jmp
add
test
shll
xor
test
xor
lret
push
sbb
xor
xchg
xchg
pop
lods
outsl
in
pop
scas
cmp
xor
mov
aad
in
mov
xchg
stos
and
cmc
notb
bound
push
aas
scas
bound
mov
shlb
jns
and
inc
mov
adc
shll
popa
pop
mov
push
lahf
mov
fidivrl
sbb
xor
test
rclb
pusha
sbb
pop
data16
push
les
outsl
aaa
int3
push
jl
mov
imul
jp
scas
jb
mov
pop
ljmp
pop
sti
addr16
stos
pushf
push
ja
or
inc
or
sub
subb
add
sbb
loopne
cwtl
sti
cmpsl
mov
arpl
jl
out
pop
in
test
xor
sub
sbb
jmp
push
loop
fbld
bound
test
mov
negl
test
cmp
fldcw
sahf
lret
sub
stc
fdivs
shrb
pop
andl
xor
mull
fldenv
and
pop
cld
mov
shl
or
add
in
fcmovu
push
dec
lahf
dec
push
mov
jns
add
jb
inc
adc
popf
icebp
push
push
clc
inc
call
pusha
in
jnp
cmp
call
shlb
sbb
push
and
add
aad
cmc
xchg
lock
xlat
jp
lea
test
leave
loope
lcall
lcall
inc
and
in
push
xor
arpl
aam
scas
cmpsb
daa
popf
fistl
shrb
xor
push
or
dec
mov
xor
mov
push
sbb
fsubrp
sbb
test
xlat
dec
mov
pop
movsb
sub
push
xchg
rcll
dec
push
or
iret
push
cmp
or
frstor
or
inc
cmp
sub
jno
fisttpll
and
cmp
sub
fwait
cmp
ja
je
mov
push
mov
arpl
lds
sub
jb
xor
push
pusha
outsl
cmp
xor
xor
sub
rcrb
dec
filds
push
ret
dec
add
and
and
dec
jmp
bound
mov
mov
in
outsl
movsl
add
mov
mov
jge
rorl
inc
addb
loopne
and
and
dec
sti
lds
push
test
rolb
push
and
sti
orb
repz
movsb
les
dec
in
jmp
imul
push
pop
mov
adc
or
sahf
in
aaa
and
fadds
insb
lahf
jp
inc
xor
pop
jecxz
push
push
clc
xor
fs
scas
out
daa
xchg
lods
leave
push
sahf
dec
into
jp
in
scas
push
mov
stc
xor
xchg
push
fldcw
adc
ja
mov
aas
pushf
movsl
imul
jmp
jne
lea
jno
sbb
dec
fs
mov
mov
pop
mov
sub
test
lret
popa
push
pop
fwait
cmp
adc
in
lea
sbb
movsl
clc
push
dec
push
inc
dec
lds
movsl
daa
aad
fs
in
scas
and
xchg
dec
popa
lock
pop
lods
lahf
jp
outsb
icebp
fwait
cmp
mov
leave
xchg
and
aad
pop
cld
mov
mov
loope
cs
shlb
mov
cli
js
mov
or
jb
xchg
sbb
xor
pop
xor
mov
jle
add
cmp
cmp
adc
cmp
test
xor
dec
clc
or
dec
pop
ljmp
xor
inc
ret
out
xor
pop
or
pop
mov
mov
jecxz,pt
ficoms
mov
push
sbb
leave
shll
xor
cmp
push
dec
shlb
shll
cmp
jmp
mov
jo
push
dec
pop
xor
add
dec
int
xchg
adc
adc
sub
mov
out
test
cmovnp
push
es
add
and
stc
cmp
imul
aam
andl
push
repz
push
bound
imul
bound
rcrl
enter
xor
jb
es
xchg
nop
mov
adc
push
push
push
adc
jb
mov
mov
ljmp
xlat
fsubrl
xchg
addr16
daa
pop
inc
enter
sar
adc
and
lods
cmpsl
aad
push
shlb
xorl
push
push
inc
sbb
fwait
iret
mov
push
inc
es
mov
or
cltd
pop
mov
push
sub
xchg
and
mov
ss
push
inc
pusha
xchg
rcrl
xchg
dec
fcomps
pop
int3
bound
xchg
es
test
xlat
lods
out
adc
xor
dec
pop
bound
or
or
push
ljmp
inc
lahf
xchg
xchg
and
enter
in
mov
xchg
push
xchg
xchg
push
leave
jmp
pop
movsb
fdivrs
jmp
imul
lahf
into
aas
mov
gs
fcmovbe
jnp
testl
pop
sub
test
data16
data16
shlb
nop
movsl
dec
xlat
or
orl
ret
cli
imul
push
jns
inc
movsl
fs
in
xor
icebp
and
cmp
arpl
pusha
mov
jle
pop
or
mov
push
addr16
xor
cmp
xchg
pop
sbb
ds
mov
jns
push
mov
or
dec
dec
in
jl
sub
push
mov
mov
iret
adc
movsl
mov
add
iret
or
cmp
jb
dec
adc
push
adc
dec
addr16
mov
dec
xor
aad
orb
jbe
sub
and
push
jecxz
cwtl
jne
and
retw
push
popa
aad
in
or
inc
shrl
dec
clflush
movsb
insl
add
pusha
xlat
cmp
cltd
mov
bound
push
ret
pusha
enter
lahf
and
mov
sahf
jne
pop
cmp
jmp
lret
jmp
std
jnp
out
xchg
ja
xchg
daa
clc
in
inc
and
mov
ss
cmp
push
js
test
into
xlat
pop
jnp
shrb
movsl
test
cmp
sub
xor
outsl
lea
sub
imul
fs
out
mov
popf
cmp
or
sub
adc
push
xor
mov
aam
pop
idiv
push
cld
sbb
je
sub
dec
pop
inc
ljmp
cltd
into
dec
out
ds
sarb
inc
add
imul
xor
loop
daa
push
je
sub
jle
inc
or
xchg
jecxz
adc
fwait
xchg
adc
sub
xor
in
mov
loope
icebp
pop
cmp
adc
push
mov
jmp
stos
dec
in
repz
push
fwait
push
sbb
cmpsl
es
fwait
negl
and
xchg
test
das
mov
in
jne
adc
ret
jne
add
bound
lret
pop
push
mov
scas
cli
dec
dec
jmp
fistl
xor
mov
mov
pop
pop
shlb
cmp
arpl
or
imul
fwait
jne
and
xor
mov
pusha
or
xor
sti
fwait
ja
scas
mov
pop
mov
sbb
mul
xchg
xchg
push
mov
mov
clc
loopne
jne
pop
pop
push
xchg
sahf
clc
xchg
and
fs
or
sti
jl
push
sarl
dec
mov
push
arpl
push
test
int
outsl
pop
cmp
outsb
or
rorb
jg
mov
fwait
mov
lds
sti
cmpl
test
add
rcrb
adcb
and
mov
pop
popf
mov
in
pop
movsb
jmp
push
inc
dec
roll
in
adc
out
lock
test
popa
sub
sbb
loope
pushf
mov
rcr
scas
adc
lock
addr16
sbb
loop
jle
loopne
faddl
add
pop
ja
test
push
ret
push
and
and
dec
fcomps
pop
imul
pop
sub
fsub
jno
and
sbb
push
inc
xchg
fstpl
xor
add
leave
jmp
jmp
pop
sbb
ljmp
dec
movsl
inc
add
pop
xor
sbb
add
pop
test
arpl
into
imul
jne
arpl
movsb
loop
or
xchg
sbb
loope
aad
arpl
aam
dec
sahf
jmp
fstpl
fldcw
dec
pop
es
push
test
dec
fst
sbb
mov
add
cmp
push
pusha
cmpsl
loope
roll
or
pop
or
gs
xchg
push
gs
outsl
mov
add
push
and
and
outsl
roll
and
xchg
pop
inc
cltd
leave
arpl
xchg
cld
jmp
mov
mov
mov
popf
daa
es
pop
push
out
jl
pop
lods
push
pop
bound
and
dec
push
fimull
fcoms
imul
pop
test
adc
testb
pop
push
mov
or
fldt
lahf
push
cmpsl
cmp
jmp
mov
xchg
xchg
dec
ret
hlt
loopne
fildl
das
int
ja
test
push
add
rorb
clc
pop
icebp
into
xor
test
cmpsl
sub
push
xchg
out
sub
push
mov
adc
pop
test
lds
push
pop
les
fst
push
mov
or
rcrl
movsb
adc
jmp
lds
xlat
and
add
xchg
das
jmp
arpl
mov
lret
out
stos
pop
rcrl
adc
sbb
fisubrl
push
daa
xlat
xor
aad
mov
inc
femms
push
sub
testl
mov
dec
icebp
mov
and
in
aas
idivl
pop
cmp
jo
hlt
pop
dec
mov
add
jl
popf
aam
stos
dec
loop
scas
mov
xchg
pop
xor
cmpsb
pop
pop
sub
xor
sbb
sahf
pushf
push
and
test
into
push
inc
or
js
imul
into
inc
xchg
test
and
cld
div
mov
cmpsb
inc
sbbl
bound
shlb
inc
movsb
cmp
jbe
sub
andl
out
adc
dec
sub
xor
pop
pushf
dec
popl
aam
cld
jno
push
cli
inc
iret
data16
in
int3
add
mov
mov
jl
dec
movsl
inc
loopne
pop
xor
shlb
aas
rcll
js
out
cmp
pop
xchg
push
cli
les
roll
xchg
enter
outsb
clc
xlat
jle
cli
adc
push
lods
pusha
mov
pop
jp
push
stc
mov
pop
jecxz
mov
cmpsl
lcall
sub
mov
xlat
add
cmp
and
push
xchg
pop
adc
xor
aam
add
pop
aas
mov
jns
imull
out
enter
ret
sub
pop
lahf
cs
fistps
mov
pop
ja
xchg
dec
push
outsb
xchg
subl
adc
test
push
push
mov
or
aam
loopne
mov
mov
inc
bound
dec
xlat
data16
inc
in
cmp
or
fistpll
loopne
mov
jl
fdiv
cmpb
jns
icebp
dec
sbb
shl
pop
shl
mov
cmc
cli
mov
and
inc
aam
mov
sbb
pop
enter
test
fwait
out
loope
xchg
rclb
add
fisubrs
les
xor
xlat
jge
xchg
mov
in
iret
sti
dec
mov
rorb
sbb
dec
bound
adc
ja
mov
or
fwait
cmp
xor
aam
pop
xor
subl
movsb
dec
cmpsl
sub
das
icebp
in
jmp
sub
shlb
jns
jmp
or
dec
push
push
mov
mov
pop
aas
dec
fstpt
push
and
xchg
rcrb
pushf
pop
fdivrs
fidivs
addr16
mov
dec
les
movsb
xchg
add
in
pop
jg
lea
cmp
rcll
push
ds
mov
bound
les
call
arpl
adc
dec
xchg
cmp
cwtl
fwait
in
dec
dec
xchg
push
pop
sub
or
insb
xor
in
sub
xchg
rolb
pop
xor
cmp
mov
dec
or
cmp
push
addr16
pop
das
add
mov
lea
xchg
dec
mov
hlt
dec
jecxz
push
ljmp
fdivr
cmp
dec
pop
dec
int3
xchg
rolb
dec
mov
icebp
adc
test
jb
divb
outsl
jbe
mov
cmp
and
mov
loope
sbb
sbb
inc
repz
sbb
sbb
cmp
stos
test
and
cmp
dec
push
ljmp
int
arpl
push
push
pop
inc
pop
sbb
popf
cmp
cmp
jl
cmpb
mov
out
add
inc
dec
in
fisubl
push
jmp
leave
sti
pusha
xor
jle
jne
inc
push
cmp
nop
sub
dec
mov
pop
lock
push
rolb
sub
iret
inc
cmp
fisttpll
gs
sub
mov
sbb
inc
adc
push
xchg
pusha
lods
xor
mov
in
jle
clc
push
imul
push
adc
xchg
fistl
or
push
jmp
loope
jno
notb
push
pop
xchg
out
sbb
inc
pop
dec
xor
cmp
or
push
jmp
sahf
decb
jo
gs
fstps
xchg
pop
pop
xor
in
dec
and
inc
out
and
or
inc
fs
ds
adc
dec
dec
in
or
gs
inc
fs
dec
xorb
pop
jge
lcall
cmp
test
pop
mov
mov
push
push
aad
sbb
sbb
xor
mov
pop
or
xor
jmp
adc
mov
in
push
lea
add
mov
es
xor
in
data16
dec
rolb
test
lret
xchg
bound
pop
lea
gs
iret
and
jecxz
imul
pushaw
lret
pop
jge
push
data16
clc
pop
mov
scas
sbb
fbld
out
das
test
in
add
gs
sub
dec
out
out
rcrb
push
cmp
pop
outsl
int3
stc
arpl
int
mov
icebp
sbb
cmp
sarb
cmp
or
add
aad
pop
push
scas
sub
jle
je
mov
stos
and
fwait
add
fbld
cmp
add
dec
mov
sarb
loop
fsub
loop
cmp
push
push
mov
mov
cmpsl
scas
push
imul
xchg
negl
lret
leave
stos
int
iret
movsl
xchg
aam
sbb
xchg
pop
push
pop
mov
mov
call
add
jno
fists
and
pusha
andl
aaa
in
dec
dec
in
push
jne
mov
xor
push
ljmp
mov
lds
jne
pop
lret
sahf
cmp
pop
xchg
inc
pop
push
test
jg
inc
mov
mov
ds
sahf
in
and
loope
sub
sbb
cmp
sahf
pop
mov
cmpsl
sbb
fwait
push
mov
aas
xor
dec
and
lret
dec
pop
jbe
dec
js
xor
aas
daa
jp
jp
xchg
sub
gs
inc
lods
nop
and
dec
cmpsb
std
xlat
out
in
push
mov
outsl
in
jmp
cmp
inc
jle
inc
cld
or
sahf
sub
pop
jmp
jle
call
addr16
sbb
sarl
outsl
dec
and
push
or
imul
push
adc
shll
roll
jp
xor
aad
mov
lret
enter
test
test
inc
cmp
and
aaa
sbb
loope
clc
xchg
gs
subb
jnp
pop
pop
jmp
pop
es
bound
cld
add
and
mov
push
movsl
push
jmp
fs
and
fbstp
cmp
ljmp
xchg
bound
insb
repz
mov
bnd
nop
mov
outsl
and
xor
dec
dec
enter
fwait
mov
aas
cmp
lock
sbb
insl
fwait
cmp
ret
mov
cmp
call
gs
test
mov
or
push
orb
push
xchg
mov
jae
dec
and
jg
inc
xor
decl
xor
pop
jg
jo
xor
dec
loopne
adc
or
pop
xchg
sbb
adc
push
dec
xor
inc
test
arpl
cli
fldcw
push
fwait
sub
dec
pop
stos
fldt
repz
or
or
aam
jmp
in
xchg
xchg
loope
shll
clc
push
cmp
sub
jbe
bound
push
pusha
push
imul
xchg
push
cmp
push
mov
mov
dec
loopne
or
pop
mov
gs
mov
or
mov
lods
inc
adc
mov
aas
push
and
in
pusha
mov
mov
adc
js
or
sbb
mov
mov
push
add
daa
loopne
hlt
rorb
and
addr16
dec
mov
xchg
loop
sbb
and
cmp
mov
cmp
mov
jle
jmp
andl
pop
cltd
fnsave
out
mov
xor
dec
mov
inc
fs
arpl
pusha
dec
pushaw
dec
push
popf
sti
jge
mov
xchg
sub
sub
pop
adc
push
push
in
mov
inc
fsubl
mov
and
in
jno
hlt
pop
insb
lods
insb
xchg
cwtl
mov
shrb
call
xchg
inc
loop
push
sub
jmp
sub
mov
out
xor
xchg
jne
es
dec
push
mov
popf
pop
ret
fcoms
push
push
mov
add
ljmp
cmp
icebp
ret
push
push
inc
and
xchg
movsb
stos
sbb
lahf
das
clts
push
inc
repz
lods
jmp
lods
and
and
sub
adc
pop
xchg
adc
xchg
pushf
lock
inc
push
add
dec
imul
cmpsb
leave
addb
mov
fcmovu
xlat
and
and
out
xchg
je
pop
arpl
or
inc
and
sbb
leave
cmpsw
xor
sub
and
cmp
out
call
sbb
cmpsl
ret
inc
add
adcb
adc
mov
je
mov
hlt
flds
mov
repz
inc
cli
stos
pop
and
adc
mov
jno
mov
jl
lcall
data16
movsl
and
loope
mov
and
adc
mov
data16
xchg
jno
es
arpl
loope
fsub
mov
push
arpl
ss
push
fs
cmpsb
fwait
push
ds
sbb
jnp
jp
mov
pop
loope
popf
lods
xor
xchg
repnz
or
push
out
dec
iret
push
xchg
fdivs
bound
adc
push
xchg
mov
jne
les
fdivs
jp
pop
jnp
sub
orb
sbb
cmp
push
sahf
dec
insb
test
nop
stc
add
loope
cltd
dec
fisttpl
add
shlb
mov
mov
jmp
fwait
dec
lea
xchg
mov
scas
aaa
fdivp
dec
test
fmull
jp
sti
dec
lret
sbb
mov
insl
adc
in
push
aam
mov
mov
faddl
popa
xchg
inc
mov
xor
push
mov
out
jbe
mov
les
inc
xchg
mov
dec
xor
push
push
aam
push
cs
sbb
push
arpl
std
adc
and
mov
xchg
outsl
pop
sub
xor
hlt
xchg
pop
test
push
sub
fs
fstps
pop
mov
adc
jge
adc
popf
negb
fadds
les
mov
jns
cld
xchg
pop
fstpl
xor
add
leave
fnstsw
mov
adc
inc
cmp
pop
out
aad
in
jg
leave
mov
lods
cld
aaa
mov
fs
mov
pop
cwtl
into
xchg
into
jle
xchg
fcmovnu
fisttps
mov
aaa
jnp
mov
loopne
cmp
pop
inc
test
push
dec
jecxz
push
dec
cmp
pop
rclb
dec
xchg
rol
icebp
sbb
push
or
jg
pop
outsl
je
dec
stos
dec
or
push
or
jle
pop
cld
xchg
jb
insl
or
enter
test
cmp
aam
dec
pop
xchg
in
sub
mov
nop
lret
fsub
popa
mov
add
shrl
mov
sub
xchg
xlat
gs
imul
enter
and
outsb
sbb
ljmp
xchg
cmp
and
dec
sub
and
outsl
push
push
hlt
inc
pusha
cli
hlt
out
fistpll
adc
adc
filds
add
or
push
enter
pop
and
mov
repz
mov
add
mov
xchg
mov
inc
test
pop
dec
push
orl
pop
cld
jns
outsb
inc
imul
in
les
pop
dec
jo
scas
cld
xchg
xchg
jbe
arpl
fcoml
cmp
xchg
mov
inc
pushf
xchg
xorl
or
sbb
push
fs
push
pop
mov
adcb
and
dec
aam
xor
es
into
dec
icebp
mov
jmp
clc
adc
cmp
jno
dec
lods
sub
push
aam
inc
ficomps
lods
dec
or
or
adc
pop
sahf
or
leave
outsl
out
push
inc
jmp
orl
movsb
mov
lods
ds
cmpsl
mov
and
xchg
lahf
and
xchg
lret
es
xor
or
movsl
outsl
push
cmp
mov
push
popfw
or
mov
push
lcall
fsts
push
mov
cltd
ret
push
fisttps
insw
enter
loopne
pusha
mov
push
push
push
mov
cmp
dec
cmp
xchg
sub
mov
in
cld
pop
lds
adc
in
sbb
add
push
xchg
aas
dec
cwtl
push
scas
call
or
sub
in
repz
outsl
pusha
in
in
mov
mov
jbe
imulb
jb
sub
mov
dec
sbb
in
dec
push
stc
pusha
addb
lahf
lock
jmp
and
mov
xchg
lcall
xlat
ss
incl
std
mov
cmp
out
push
incb
sti
xlat
cmp
xchg
pusha
jp
pop
pushf
repnz
xor
aam
push
insb
dec
jae
mov
push
iret
dec
dec
gs
pusha
add
hlt
pop
mov
ljmp
addl
clc
fwait
stc
adc
dec
mov
mov
push
add
jb
cmp
loope
popa
call
outsb
dec
cmpsl
fstpl
sub
pop
adc
lret
repz
add
loopne,pn
add
loopne
xchg
xchg
fbstp
popf
and
pop
xlat
push
addr16
adc
mov
data16
mov
cmp
or
ds
xlat
std
orb
dec
imul
push
adc
sub
adc
pop
pop
cmpsl
cltd
pop
lahf
cmp
lods
fdivrs
xor
dec
cmp
adc
pop
scas
jno
sahf
pop
sbb
jmp
imul
push
mov
pop
mov
pop
mov
mov
fs
sbb
pop
negl
cmp
gs
xor
loopne
stc
add
pop
das
cmp
or
ret
push
movsb
adc
fs
push
inc
sub
xor
xor
iret
lret
bound
xorb
stc
push
and
ja
sub
adc
jge
add
data16
adc
or
and
push
aas
arpl
mov
xchg
gs
vphaddubd
push
push
pop
cmp
mov
push
es
sbb
stos
push
mov
imul
loope
pusha
cmpsl
mov
aam
lahf
and
vpcmpeqb
pop
fadd
leavew
int
mov
fbld
cld
xor
jmp
sbb
js
pop
inc
fidivs
jb
xor
in
xor
rol
or
cmpl
imul
add
adc
rcrb
test
daa
mov
aad
js
and
test
jmp
mov
jbe
push
es
xor
sbb
xchg
and
insl
xlat
xchg
fidivl
or
push
and
xchg
xchg
std
bound
mov
icebp
or
nop
cmp
jbe
pop
push
fcoms
mov
inc
xor
cmp
add
xor
push
xor
sub
mov
push
aam
sub
push
xor
fcmovbe
cmp
dec
data16
lds
cmp
call
mov
sub
movsl
enter
lods
imul
adc
pop
cmp
xchg
out
sbb
dec
mov
push
sbb
cmp
dec
out
xchg
mull
roll
inc
jle
mov
movsl
or
jmp
fldenv
imul
nop
inc
push
in
dec
test
mov
loope
fsubrs
cmpsl
fsubrs
loope
cltd
lods
pop
and
std
div
xor
jge
cli
xchg
pop
lret
sub
inc
movsb
js
stos
push
daa
and
ss
daa
daa
pop
cmp
add
sub
pop
fsubrs
sbb
xor
pop
cmpsl
imul
test
mov
aaa
cmc
pextrw
sbb
clc
rcll
ret
cwtl
or
mov
sub
in
xor
pop
xchg
ds
inc
cli
xor
je
jnp
push
mov
cs
ja
push
bound
filds
pop
test
les
ljmp
fldt
daa
and
lahf
cmp
pop
mov
jb
movsb
push
cmp
in
add
jne
push
mov
aam
xchg
arpl
dec
and
mov
or
cmpsb
popa
pop
cmp
inc
aad
push
ljmp
cmp
pop
shlb
push
pusha
push
pop
in
leave
dec
lock
mov
mov
sbb
pop
pop
lret
pop
xor
or
pop
sub
rclb
clc
cli
imul
out
xchg
lods
lock
ljmp
lcall
fwait
mov
mov
pop
cmpsb
pop
fsubs
pop
lods
fwait
xchg
ja
cmc
js
dec
scas
lock
xorl
or
lock
cmc
pop
push
push
in
adc
gs
scas
pop
into
gs
stos
test
push
jo
jmp
inc
lock
push
movd
jb
inc
inc
pop
and
or
xchg
arpl
iret
dec
insb
jb
jl
mov
mov
push
loopne
sub
and
adc
loopne
sbb
sbb
lds
pop
dec
jnp
sub
dec
ss
fisttps
mov
mov
inc
movsl
ds
cmp
jno
dec
test
cli
out
rol
mov
mov
mov
push
sub
add
mov
fisttps
sub
or
ja
popf
pusha
inc
xchg
lds
pop
dec
out
push
mov
mov
dec
xrelease
es
cmp
pop
cmp
xchg
mov
cmp
lds
gs
ret
jbe
out
pop
jecxz
movsl
movsb
fldl
and
in
fistpll
ja
or
dec
pop
push
push
sbb
aas
pop
movsb
stos
cmpsb
loop
and
das
mov
icebp
stc
xor
lahf
sub
adc
ror
subb
xchg
mov
mov
pop
fisubrs
call
pop
aaa
in
data16
fwait
iret
mov
xor
sbb
sub
ret
fldcw
sub
add
mov
xchg
sub
xor
dec
pop
jecxz
mov
mov
pop
mov
fwait
jmp
mov
shll
push
sbb
jmp
cmp
mov
outsb
mov
lcall
and
cmp
xchg
or
xor
and
add
out
xchg
fwait
insl
gs
jbe
repnz
jno
ret
outsl
sarb
inc
adc
movsb
aam
xor
clc
or
jmp
sbb
fidivrs
mov
insb
push
xchg
les
stos
push
and
push
dec
and
lcall
lods
es
xchg
xchg
adc
mov
cmp
cmp
stos
jecxz
sti
adc
jle
push
dec
inc
jnp
jns
pop
cmp
pop
loopne
jge
pop
cmpsl
push
rcll
xor
sbb
outsw
mov
pop
push
roll
arpl
sahf
mov
pop
sahf
dec
lds
push
add
shr
xchg
mov
adc
add
ficompl
aas
add
adc
jns
cmpsb
pop
imul
sbb
lods
push
jns
in
xor
sbb
pop
push
push
add
daa
adc
xchg
mov
push
push
shlb
and
shrl
fdivrl
sbbb
fimull
dec
lret
xor
leave
dec
push
scas
orb
hlt
jmp
frstpm(287
jns
jae
dec
push
inc
or
das
push
es
sbb
pop
hlt
dec
inc
out
leave
adc
call
cltd
imul
mov
daa
jbe
and
inc
jb
jo
pop
add
jp
les
pop
or
scas
clc
aas
inc
push
add
xchg
aaa
pop
push
clc
out
rcrl
or
leave
stos
repnz
mov
add
js
inc
lods
ljmp
sbb
lds
adc
repnz
mov
adc
stos
jl
popf
add
out
xchg
imul
pop
es
andb
mov
pop
inc
dec
fisubrl
stc
fwait
gs
int3
lret
out
xchg
mov
enter
sub
push
pop
push
aaa
pop
sbb
fdivl
or
dec
into
pop
out
outsl
movsl
in
cmp
pop
or
sbb
std
arpl
jmp
fstl
cli
mov
sub
aam
out
sub
jne
imul
rorl
sbb
jl
push
or
or
mov
xor
inc
scas
xchg
lock
aam
inc
or
push
repnz
push
dec
or
testl
gs
sub
mov
shrb
call
add
std
es
pop
loopne
cmp
gs
loop
jg
mov
push
mov
cmpsb
cld
or
xchg
pushf
sbb
pop
xor
hlt
push
inc
pusha
mov
pop
pop
ret
js
or
cmpsl
pop
stos
lock
loope
sub
push
sub
int3
adc
and
repz
in
ds
popa
stc
in
push
ss
test
push
pop
ljmp
or
xabort
lret
aas
and
addr16
icebp
or
add
sub
scas
clc
xor
pop
ljmp
mov
inc
push
ret
cs
test
leave
ret
pop
and
xchg
aam
adc
pop
or
cmp
loopne
pop
sti
sbb
fwait
js
call
mov
cltd
test
push
gs
loopne
add
and
and
or
dec
push
rcrb
push
jg
push
mov
or
ja
xor
pop
xchg
rcrb
pop
push
arpl
test
mov
mov
mov
pop
mov
mov
rcll
hlt
add
dec
test
or
xor
stos
and
sub
cmpl
xchg
adc
fidivrs
insl
dec
sar
outsb
inc
jmp
rclb
jne
xor
xchg
ret
mov
or
mov
xchg
jno
stos
ljmp
pop
cmp
and
pop
xchg
mov
jge
shlb
and
mov
pop
cmpsl
ret
sbb
pop
mov
add
pushf
and
xor
jp
pop
inc
xchg
imul
add
add
lock
lcall
cli
jo
sub
mov
pop
pop
dec
adc
lea
sub
xlat
pushf
inc
lahf
movsb
sbb
pop
outsl
mov
ss
xor
out
loope
mov
sbbl
sbb
inc
test
xchg
jae
out
push
data16
sbb
sbb
rcrl
in
outsb
jl
lret
enter
cli
cmpb
insb
jecxz
sub
js
pop
push
add
cld
fstps
push
adc
fistpll
sub
arpl
adc
and
orb
or
enter
ljmp
shll
shr
outsb
loopne
call
in
mov
adc
lock
cmpsl
xchg
repnz
dec
repz
fstpt
in
inc
xchg
sub
push
int
mov
push
pop
add
cmp
xor
imul
lret
cmp
cmc
test
cmpsl
push
xor
inc
dec
push
out
mov
mov
adc
mov
pop
in
xchg
sub
sbb
adc
enter
imul
inc
ljmp
ret
and
test
dec
pushf
popa
mov
pusha
aam
mov
mov
dec
repz
jle
push
pusha
fs
outsb
push
not
mov
ret
andb
test
outsl
cmp
mov
pusha
les
inc
pushf
dec
jae
cmc
enter
iret
cmpsb
cmp
fs
cmpsb
repnz
lods
pop
mov
std
add
mov
js
jmp
test
mov
arpl
push
pusha
xor
jnp
xor
fldcw
add
xor
xor
sahf
and
adc
xchg
xor
sbb
mov
add
cwtl
lds
adc
pop
fcmovb
jne
test
inc
pusha
and
inc
pop
jle
adc
xor
cmc
je
and
adcl
je
jecxz
mov
jo
or
sbb
or
jbe
or
pop
push
aam
mov
insb
into
push
push
sarb
les
cmp
call
sbb
sbb
test
cmp
sarb
cmp
out
out
and
or
lods
rcll
inc
movsl
adc
test
pop
aad
xchg
add
lret
in
dec
dec
xor
adc
cmpsl
xchg
inc
ds
mov
popa
ljmp
pop
in
jmp
and
sub
fcmovnbe
or
inc
mov
mov
out
outsb
popa
popa
inc
lahf
cmpsb
out
add
pusha
daa
xchg
js
sbb
push
and
or
addr16
loope
xor
aad
and
pop
es
mov
sub
outsl
lds
pop
ljmp
testl
frstor
inc
dec
or
dec
pop
push
dec
mov
pop
test
orb
gs
cltd
movsl
rorb
push
out
or
movsb
add
or
addr16
xlat
fiaddl
push
test
mov
adcb
pop
mov
xchg
jo
stos
push
nop
ljmp
pop
mov
aaa
mov
xchg
test
inc
in
inc
mov
int
lahf
test
cmpl
test
or
inc
popa
xor
repnz
lret
js
imul
mov
sbb
fwait
push
arpl
loopne
shrl
movsb
or
jnp
inc
popa
inc
jb
pop
pop
and
stos
mov
or
add
push
push
imul
or
lret
aad
xchg
repz
test
xlat
mov
mov
dec
dec
pop
dec
cld
sub
pop
loop,pt
rclb
bound
jb
ror
mov
mov
dec
sub
inc
mov
xor
xchg
and
sarb
dec
pop
popa
pop
mov
cmp
das
sbb
test
add
testb
enter
xchg
aaa
mov
cmpsl
mov
imul
add
sub
in
xchg
gs
dec
pushf
es
in
pop
jae,pn
jl
test
insl
repnz
jns
call
xor
pop
lock
jg
xor
shlb
fldcw
shll
pop
mov
fsubl
xlat
adc
push
xlat
outsb
loope
push
movsl
cs
or
sbb
xchg
cltd
popa
data16
in
and
ljmp
jp
aas
cs
mov
mov
sarl
mov
push
or
or
sub
push
aad
cmpsl
pop
lea
mov
push
or
sbb
mov
add
push
pop
fsubs
lock
push
movsl
repz
loope
cmpb
and
mov
cmpl
dec
fidivl
push
jns
dec
adc
sub
adc
popa
test
xchg
push
mov
in
ljmp
jno
fdivr
sbb
sub
xchg
testb
push
ljmp
add
int
inc
insb
inc
in
xor
xor
sub
cmp
inc
aaa
mov
movsl
push
dec
and
jecxz
fiaddl
or
cmpsb
lret
or
lahf
cmp
mov
adc
push
test
sahf
imul
jnp
jge
or
sbb
push
mov
pop
cltd
cmp
dec
rcr
das
push
mov
push
xchg
ficomps
in
fadd
test
jp
je
xor
mov
push
push
mov
or
outsl
in
icebp
xchg
mov
mov
and
stc
xchg
push
inc
mov
xchg
or
inc
test
mov
add
shrl
in
push
or
or
in
add
inc
mov
adc
loopne
les
ds
mov
dec
arpl
mov
or
stos
je
jg
insb
int
mov
cli
push
clc
mov
data16
jmp
mov
xchg
dec
cltd
ret
daa
jge
xchg
push
mov
xor
add
test
enter
gs
cmpsb
popa
mov
in
sub
cmp
lock
cmp
push
lcall
adc
int
and
loopne
movsb
xchg
leave
xchg
daa
cwtl
fdiv
xchg
cmpsb
and
xchg
dec
pop
xchg
flds
and
pusha
lock
xchg
push
test
and
cmp
push
imul
cld
lock
mov
loope
mov
pop
mov
leave
and
dec
lret
repz
hlt
in
xor
jle
push
cmpsb
and
cmpsb
adc
dec
sub
movsb
repz
push
and
testl
daa
dec
ficompl
xor
or
inc
ljmp
xlat
pop
lods
shr
out
cmp
in
and
push
pop
jb
leave
xor
xchg
rorb
cmpsl
pusha
mov
pop
xchg
outsl
sbb
int
push
ret
and
xor
aad
xchg
cld
cmpsl
xor
dec
fwait
mov
test
xor
clc
xor
mov
dec
in
repnz
and
pushf
test
cmp
sbb
jle
mov
sbb
jle
fs
test
adc
leave
pop
jg
ja
cmpsl
mov
pop
adc
ss
imul
xchg
mov
or
imul
cli
or
fildl
cmp
mov
pop
js
push
fisttpl
mov
pop
fisubrl
sahf
pop
cli
and
adc
dec
imul
call
add
push
orb
push
cmp
ja
pop
cmpsl
sti
sub
test
lahf
mov
dec
ss
push
jnp
push
in
or
add
mov
inc
sbb
es
movsl
mov
xchg
sub
enter
std
jnp
inc
aam
fiaddl
arpl
in
lret
mov
mov
inc
mov
pusha
mov
lahf
out
lahf
sub
shll
mov
daa
enter
pop
push
sti
mov
pop
pop
xor
adc
out
lret
mov
imul
fisttpll
cmp
je
or
insb
adc
frstor
pop
dec
inc
xor
in
adc
xor
cmp
insb
mov
dec
stos
adc
inc
push
sub
stos
shlb
popa
aas
sub
cli
jno
lahf
push
hlt
and
addr16
jle
test
rclb
dec
in
out
ja
dec
call
jno
lods
js
pop
dec
es
sub
mov
cmp
data16
test
xchg
cmpsl
inc
cmc
dec
imul
mov
jbe
pushf
inc
xchg
lahf
test
popf
jae
sub
ret
data16
jns
push
push
rorb
loop
rcrl
sub
fcoml
sbb
aaa
fcoml
cmpsb
jg
fistps
std
jle
and
pop
clc
stc
sar
test
and
sub
paddusw
adc
add
mov
inc
xchg
loopne
mov
enter
push
dec
push
pcmpgtd
sub
in
jle
cmp
sub
outsl
pop
inc
negb
push
inc
jle
repz
bound
stos
mov
dec
and
cmpsl
or
in
adc
xchg
or
jp
jmp
out
fsub
test
test
cld
test
mov
outsl
ljmp
pop
ss
xlat
adc
ret
add
pop
or
inc
mov
mov
stos
in
jl
aad
shlb
fwait
xchg
pop
lods
xchg
mov
fiaddl
lock
loopne
test
ja
or
or
dec
or
jne
and
pop
aam
or
loopne
add
inc
mov
cld
xchg
push
ds
push
cmp
mov
ss
xor
jle
jecxz
scas
inc
addl
aam
pop
sbb
ret
mov
pusha
pop
and
or
cs
push
loopne
adc
add
xchg
pop
push
mov
push
push
loope
pop
icebp
mov
sub
div
movsl
data16
pop
clc
fisubrs
cmpsb
call
pusha
lock
xchg
jle
subb
fsubs
or
or
aas
jo
filds
loope
fsubrs
inc
shll
in
dec
pop
test
data16
push
xchg
and
lea
sub
movl
dec
mov
pop
dec
mov
movsl
mov
pop
outsl
xchg
jns
rcll
movsb
dec
mov
ljmp
fsts
jmp
in
mov
push
les
or
fsts
fisubs
fincstp
mov
xchg
or
inc
aam
mov
push
dec
add
inc
sbb
lret
dec
cmp
push
inc
dec
xchg
lock
jecxz
adc
aaa
xchg
push
xchg
jno
push
std
bound
repz
sahf
std
js
sbb
dec
push
mov
shld
test
xchg
pop
pop
sub
or
lahf
lods
push
test
pop
pop
push
shrb
sbbb
fisttps
adc
ljmp
ret
cmp
dec
push
sbb
and
cwtl
aaa
pop
or
out
xchg
sarb
or
jmp
mov
lahf
fbld
iret
xchg
mov
pop
fbstp
cmp
int3
filds
sti
subl
jbe
out
cmp
fdivrs
in
in
fcmove
fimuls
adc
imul
addr16
sahf
xor
push
push
es
out
aas
fwait
cltd
sub
xor
pop
lret
and
test
or
sub
cmp
scas
cltd
mov
pop
xchg
or
push
and
pop
fcmovnu
repz
mov
push
aaa
sbb
inc
adc
arpl
out
jmp
pop
jl
mov
shl
lds
sub
in
inc
roll
sbb
in
out
push
pusha
movsb
push
inc
xchg
inc
es
test
push
sub
aad
xor
jg
and
std
scas
pop
aas
fistps
ds
pop
mov
lret
lods
adc
je
push
push
pop
xor
inc
ret
cmp
pop
sbb
lds
mov
lock
xchg
push
fiadds
push
xor
xor
jnp
rol
test
inc
jo
fldenv
out
jmp
mov
sbb
pop
cmp
fcomps
mov
pop
into
mov
lds
mov
add
pop
dec
push
ja
in
add
add
pop
push
mov
mov
outsl
jne
inc
fs
or
inc
fiadds
stos
mov
repz
push
or
and
aam
dec
pop
inc
adc
add
loope
stc
iret
lods
hlt
pop
sub
and
and
cmp
xchg
lock
push
jge
or
sub
dec
sbb
jne
out
insb
lods
mov
in
sti
sub
pop
push
push
sbb
xor
insb
cli
negl
push
fdivrs
scas
pop
lds
test
push
mov
test
sub
mov
jno
jbe
sbb
les
pop
pop
mov
push
adc
cmpsl
xchg
imul
dec
sub
gs
fstpt
int
lods
fs
data16
pop
in
and
pop
adc
daa
adc
movsb
gs
stc
dec
xchg
shlb
pop
in
scas
xor
fdivr
sbbb
pop
bound
pop
and
outsb
mov
imul
shlb
cli
xchg
push
into
cmp
xchg
lods
repz
jne
push
mov
ljmp
gs
jp
mov
adc
movsb
lods
xor
cs
jae
and
or
push
bound
pop
inc
lahf
iret
dec
test
sub
xor
jg
sbb
test
dec
cmpsb
outsb
pop
mov
push
push
or
mov
test
dec
add
sub
js
xor
inc
and
aam
jp
addr16
mov
add
mov
pop
mov
sahf
xchg
loope
enter
stos
je
cmp
or
xor
cmp
hlt
arpl
enter
jb
orb
hlt
mov
outsl
push
mov
gs
ret
sbb
fisubrs
fsubrl
push
ret
int
adcl
repz
stos
mov
jge
jns
sub
lock
sub
aas
imul
sbb
add
adc
out
jmp
popa
and
aaa
imul
in
pop
and
data16
dec
sub
jbe
dec
sarb
add
mov
mov
fwait
imul
push
loop
xchg
push
inc
dec
enter
sbb
outsl
inc
xor
push
pop
xchg
stc
adc
fwait
jbe
or
and
and
popa
dec
jo
or
push
sub
imul
ss
mov
lock
popf
jmp
dec
or
int3
push
mov
pop
jmp
mov
xchg
dec
cmpsl
adc
scas
push
inc
subps
shr
add
stc
dec
fwait
jg
push
and
xorb
jae
mov
leave
outsl
cmpsl
mov
lock
aas
ljmp
mov
std
out
data16
sbb
push
xor
pop
loop
xchg
push
in
gs
xchg
pop
fstpt
pop
inc
pop
aam
sub
push
dec
pop
adc
fadds
mov
lods
add
sub
cwtl
imul
or
inc
adc
push
jno
adc
dec
fcomp
push
cmp
push
xchg
cwtl
jecxz
out
push
movsl
fsub
mov
mov
push
fdivr
xchg
data16
mov
rcrl
dec
xor
je
pushf
rclb
pop
mov
scas
jecxz
xchg
mov
adc
in
mov
pop
add
pop
aad
mov
sub
mov
mov
decl
and
xchg
pop
rorb
sbb
in
ds
popa
and
outsl
in
shll
iret
or
adc
jne
ret
xchg
mov
inc
subb
in
sub
ss
aad
cld
inc
push
les
aam
sub
jae
or
xchg
data16
dec
popa
scas
loop
inc
mov
lock
or
mov
push
js
push
dec
add
es
nop
xor
pop
or
mov
push
mov
and
dec
pushf
scas
into
es
xchg
or
xor
jns
xchg
inc
dec
push
sbb
mov
adc
add
adc
xchg
aad
in
jno
rolb
bound
into
notb
xor
fldt
pop
shl
and
jge
pop
jnp
xchg
out
sbb
inc
pop
enter
lret
cmp
fistpll
mov
xchg
xchg
push
lahf
negl
pop
iret
inc
xor
es
aad
pop
xchg
push
sbb
xchg
cmp
outsl
movsl
lahf
xchg
mov
pop
stos
pop
mov
imul
shrb
jmp
sahf
pop
or
mov
hlt
sti
lret
shll
sub
xchg
loop
xchg
or
loope
pop
or
leave
and
xor
pop
out
push
mov
inc
inc
dec
xchg
mov
sub
mov
dec
shrb
xchg
and
jae
xchg
dec
xlat
pop
mov
fnsave
push
push
std
adc
mov
and
xlat
into
xor
xchg
cmp
xchg
out
mov
into
lahf
xor
lahf
xchg
jmp
inc
sbb
dec
lds
mov
mov
adc
xlat
mov
add
jnp
jns
inc
xlat
int3
sbb
in
jmp
add
cmp
push
aam
mov
lahf
adcl
inc
mov
xchg
data16
idivl
lret
xor
fcomps
out
mov
or
inc
dec
ja
cmpsl
jp
stos
rorb
cmp
ret
xor
mov
sahf
scas
pop
fldcw
gs
push
adc
leave
stc
sahf
gs
cmp
jmp
xchg
cld
ljmp
cmpsb
xchg
mov
in
xchg
cmp
test
popf
clc
bound
adc
mov
adc
sahf
sahf
in
popa
shll
push
lods
push
dec
sbb
in
xchg
rorl
mov
iret
aaa
rcrl
bound
addps
into
adc
cmpsb
adc
andl
shlb
popf
xchg
pop
test
arpl
pop
lds
data16
sarl
enter
inc
in
sub
call
decb
pop
cmp
das
and
pusha
xor
mov
adc
mov
lea
rolb
pop
xor
es
jb
out
xor
notl
dec
and
push
flds
aad
pop
xor
mov
into
mov
shrb
cld
push
jns
data16
sbb
xor
xchg
repz
jle
jne
fldcw
mov
in
pop
sub
fisttpl
je
mov
lods
mov
pop
ds
xchg
in
adc
or
mov
pop
sbb
das
fwait
jmp
push
movsl
or
les
outsl
insb
dec
xor
fisubrl
pop
jmp
fstpl
in
ffree
repnz
frstor
and
sarl
dec
ret
data16
je
loopne
sahf
mov
pusha
pop
aad
loop
inc
int3
or
xor
lahf
testb
mov
imul
jl
dec
xlat
xchg
clc
imul
pop
loope
sbb
or
or
imul
repz
or
jg
ja
shll
in
test
push
fildl
jp
test
jecxz
and
jg
cmp
sub
rcr
aad
bound
or
mov
dec
scas
inc
iret
test
jmp
insb
ret
je
rclb
jae
xor
imul
gs
or
lahf
pop
mov
push
adc
sub
mov
xlat
cmp
idiv
out
jmp
sbb
aaa
aam
ret
push
inc
pop
jmp
inc
jmp
shlb
sub
pop
jmp
pop
arpl
popf
rclb
mov
sahf
pusha
addl
lahf
cmp
push
xor
inc
push
mov
push
adc
ret
imul
push
shl
inc
pop
icebp
ljmp
fnstsw
jl
punpckhbw
addr16
fstps
push
jmp
push
pop
dec
fisubrl
sub
rorl
js
pushl
andb
xchg
stos
movsl
fwait
sbb
ror
mov
mov
mov
ljmp
test
adc
addl
cmp
cld
repz
pop
push
pop
push
int
lea
cld
push
add
push
inc
xchg
mov
jbe
enter
loop
adc
sbb
xchg
lds
pop
xlat
jbe
xor
in
pushw
mov
push
add
aad
rorb
xlat
dec
push
loopne
mov
lret
add
cltd
jno
push
fisubl
mov
cmp
mov
cmp
cmp
jge
add
pop
or
sub
and
leave
or
jnp
loopne
push
or
xchg
and
shlb
mov
shrl
cmp
or
pop
fbstp
cmc
iret
in
mov
jle
pop
in
lock
xchg
test
cmp
sbbl
push
rcr
pop
ja
jmp
push
adc
mov
ss
xchg
pop
repz
mov
pop
xchg
and
push
bound
add
xchg
aad
repnz
fwait
adc
mov
leave
out
xor
push
cld
sbb
or
ss
or
insl
xchg
mov
push
cwtl
addr16
dec
rcr
pop
cmp
ljmp
xor
push
inc
fistps
clc
in
pop
push
pop
mov
mov
push
int3
push
dec
repnz
mov
jecxz
push
sarb
mov
adc
or
adc
scas
addb
xor
add
or
adc
into
ficomps
xchg
push
fwait
mov
sub
icebp
mulb
dec
stc
jb
or
push
aaa
ret
or
or
outsw
pushl
push
or
xchg
sbb
jecxz
dec
test
cmpsl
and
jns
or
jmp
js
stc
mov
out
xor
lret
rorb
lods
arpl
pop
or
dec
pop
jnp
adc
imul
iret
loope
pop
or
mov
popf
mov
cld
rcl
lods
aam
push
inc
cwtl
pop
insl
pop
mov
lods
out
and
addr16
mov
lret
xchg
push
xchg
mov
sbb
pop
scas
push
mov
outsl
imul
pop
or
sbb
rcrl
or
or
sahf
mov
push
out
dec
inc
mov
and
shll
sub
push
push
xchg
shl
enter
sti
testb
jnp
scas
cmpsb
dec
cs
shll
jmp
les
sbb
nop
push
cwtl
sub
adc
xor
jp
xchg
outsb
cmp
cmpsl
xlat
jae
jo
sub
inc
out
mov
mov
loop
jmp
pop
call
and
int3
inc
mov
adc
pop
daa
leave
sub
jno
pop
addr16
xchg
jl
xchg
mov
ss
xchg
inc
in
mov
cmp
sbb
dec
int3
jns
pop
popf
pusha
sti
je
and
pop
pop
push
fsubl
cmp
push
sbb
insb
les
into
dec
iret
test
pop
jecxz
xchg
inc
mov
mov
movsl
mov
stos
or
cmp
mov
ds
dec
daa
cmpsb
dec
cmp
push
daa
xchg
andl
xchg
inc
mov
lea
dec
or
es
fyl2x
hlt
rcrl
sbb
bound
jle
data16
int3
jmp
jae
test
fimull
sti
aam
loop
aam
outsb
inc
test
jmp
pop
lret
mov
loope
daa
xchg
ljmp
or
jp
pop
dec
mov
adc
es
or
add
mov
clc
shll
push
add
data16
mov
popf
jae
mov
inc
lahf
xor
enter
push
or
pop
push
dec
addr16
lahf
out
inc
sub
push
add
xchg
in
aad
imul
pop
push
ficoms
mov
test
scas
or
lods
sub
push
add
push
loope
push
xchg
cmp
push
dec
pop
stc
shlb
pop
sub
je
in
outsb
jl
fidivrs
test
xor
iret
fnstenv
std
pop
mov
cmp
adc
test
push
mov
mov
xchg
mov
fwait
addr16
or
mov
fisubrs
lahf
insb
loopne
mov
xchg
movsb
adc
mov
int3
sbb
lea
popf
and
push
cmp
js
mov
add
cli
sbb
outsb
imul
pop
xchg
xchg
add
ljmp
sub
inc
and
repnz
test
js
push
test
or
mov
mov
sbb
push
js
arpl
addr16
loop
xchg
push
lock
out
push
lret
fwait
dec
insl
sub
push
jo
je
fisubl
daa
jg
mov
call
scas
mov
lcall
call
sub
cmp
push
dec
movsb
in
xor
adc
push
mov
jl
and
inc
stos
decl
aad
scas
adc
js
popa
ds
mov
lret
jo
sub
test
daa
push
movsl
into
into
pop
inc
inc
pop
inc
mov
cmpsb
inc
popa
jmp
jmp
mov
iret
aad
data16
sub
cmpsb
data16
inc
push
jmp
xor
gs
pop
inc
sbb
test
dec
xchg
and
mov
xchg
jns
sub
or
add
mov
daa
xor
add
bound
mov
inc
andl
cli
fstpt
out
xor
ret
fistpll
add
outsl
dec
scas
sub
xor
fbstp
inc
cmpsb
push
push
cmp
mov
bound
xchg
ja
inc
mov
mov
add
sub
das
mov
xorl
pusha
lds
mov
mov
push
outsl
mov
jp
cmc
and
push
aad
adc
test
cmp
gs
mov
arpl
fdiv
in
sub
mov
cmpsl
xchg
mov
mov
in
or
lahf
adcb
mov
out
inc
and
mov
push
xorb
aam
pop
sub
dec
dec
jnp
cld
push
fs
mov
sub
adc
xchg
jo
popf
mov
fiaddl
popf
hlt
pop
cmp
xchg
jle
bound
push
dec
push
push
and
call
dec
pop
push
addr16
addl
pushf
xchg
je
icebp
or
test
iret
je
test
bound
jno
test
inc
orl
jbe
arpl
inc
aad
add
cmp
and
sbb
lds
xchg
and
scas
pop
xor
fadds
xor
jl
rclb
cltd
adc
xor
push
pop
xchg
int
add
loope
cld
out
test
cltd
xchg
in
fisubrs
xchg
add
daa
clc
mov
inc
or
fisttpll
pop
cs
xor
mov
or
push
ljmp
out
sub
jmp
fldenv
popa
loop
xor
push
and
fcomip
push
and
clc
push
test
mov
adc
push
test
into
test
mov
imul
out
mov
lahf
jne
test
cmpsl
stc
fdivl
dec
call
adc
outsb
sub
test
add
or
mov
mov
pop
cltd
and
cli
jmp
rcl
fdivrl
add
adcl
xor
jo
mov
loopne
pop
les
push
dec
aaa
sub
or
rorl
mov
push
test
jo
add
jo
test
je
je
sbb
push
popf
dec
js
push
test
imul
jecxz
pop
iret
jg
cmpb
and
sbb
lret
lcall
sahf
push
push
std
roll
pop
outsl
addr16
addr16
fildl
cmp
push
xor
pop
hlt
pop
iret
es
popa
jl
sbb
jle
out
dec
pop
adc
xchg
jno
cltd
loopne
int3
adc
or
xlat
mov
stos
xor
cli
xchg
iret
and
imul
push
les
dec
xchg
pop
stos
or
pop
jle
cltd
dec
lods
pop
lds
push
xchg
xlat
aad
pop
dec
sbb
and
scas
aad
xchg
loop
cmpsb
xor
cmpl
mov
mov
xor
scas
pause
stos
fs
sbb
mov
jmp
xor
sbb
and
inc
xchg
cmp
push
dec
popa
add
test
add
daa
mov
pop
jl
add
test
sub
fsubr
push
fwait
jmp
ja
and
sub
iret
orl
pop
arpl
pop
inc
xor
sbb
negb
mov
xor
in
and
in
daa
out
fildll
pop
cmpsb
sbbl
in
dec
xchg
je
mov
sub
sbb
das
lods
mov
loop
imul
das
push
inc
or
mov
xchg
dec
sahf
dec
cmp
jbe
cmp
mov
out
lods
jecxz
cmp
movsb
sbb
adc
cmc
aad
inc
add
test
adc
pop
xchg
das
ds
jns
cmp
js
gs
cmp
xchg
dec
lretw
test
pop
daa
lock
jp
inc
in
dec
sahf
ss
imul
shlb
imul
cmp
loop
xor
jge
jnp
mov
add
out
stc
push
arpl
push
insl
fldt
adc
fcoms
enter
xchg
inc
loopne
js
cs
inc
data16
sahf
inc
mov
dec
xor
mov
xor
mov
push
mulb
push
lds
xchg
fwait
or
inc
adc
adc
ljmp
mov
test
in
push
jg
push
jno
pop
mov
inc
in
std
movsl
dec
dec
push
test
pushw
adc
pop
aad
outsl
lret
in
sbb
leave
insl
xlat
xchg
xchg
cli
outsl
shll
push
imulb
push
jns
xor
mov
mov
cmp
aam
loopne
mov
mov
loope
and
popf
jae
pop
mov
test
nop
rol
das
aas
xor
vpmullw
sbb
and
xchg
dec
stos
mov
cmp
addr16
add
inc
pop
imul
jns
and
ss
push
push
and
jne
and
push
inc
push
push
cmp
sub
jp
ljmp
aas
fwait
jb
and
fisttpl
cld
fwait
or
aad
mov
adcb
nop
xchg
iret
pop
adc
pop
mov
shl
jg
cmp
gs
push
fmuls
add
xchg
int
adc
xchg
cli
jb
lahf
push
pushf
dec
lock
hlt
bound
addr16
push
dec
sbb
gs
addr16
pop
loop
sub
fdivrl
and
gs
lea
or
test
in
das
dec
das
pop
add
jp
pusha
pop
push
fsubp
stos
mov
movsb
cwtl
or
mov
adc
into
cld
outsl
fldl
cmp
orb
adc
cmp
dec
and
fwait
push
jbe
sbb
inc
addr16
cmp
push
xor
xor
inc
std
dec
push
sub
test
lods
cmp
movsl
cmp
push
stc
enter
outsl
pop
lcall
loope
cmp
out
push
ror
ds
stos
lds
pushf
push
lock
xchg
jmp
ds
push
sub
out
push
data16
aas
les
sbb
aam
sbb
inc
push
fwait
cltd
sbb
push
pop
push
push
sub
dec
inc
pop
addr16
enter
xor
xor
and
dec
add
dec
and
xchg
mov
cmp
call
pop
aaa
jns
cmp
cmp
xor
dec
mov
or
pop
or
movsl
outsl
mov
idivb
jmp
dec
repz
js
iret
add
and
gs
aad
xor
in
xchg
loopne
mov
push
pop
lahf
imul
mov
jb
mov
mov
push
pop
fdivs
pop
mov
fcomp
inc
repnz
gs
mov
mov
mov
test
cmp
xchg
xor
dec
ja
insb
or
sub
mov
push
hlt
pop
and
and
and
cmpsb
mov
dec
jae
sub
xor
daa
data16
cmp
xor
push
pop
lea
jle
sub
enter
jmp
mov
jge
sbb
jmp
insb
push
dec
pop
testb
or
sbb
test
push
adc
test
or
shl
unpckhps
or
cmp
and
pop
in
sbb
and
lods
push
in
inc
loope
push
pop
push
push
jecxz
pop
inc
sbb
cmp
fwait
repz
leave
cmp
loop
outsl
test
cltd
je
add
inc
pop
or
es
loopne
xchg
sbb
cmp
fbld
or
fdivs
sbb
pop
cltd
or
lret
arpl
test
imul
jge
jbe
xchg
jnp
shll
loopne
mov
inc
mov
test
jne
aam
jmp
or
sbb
mov
dec
pop
dec
add
sti
stos
cmpsb
mov
xor
dec
or
inc
sarl
dec
pop
push
outsl
and
gs
aam
out
or
and
add
pusha
es
add
arpl
pusha
outsb
xor
lea
and
incb
aad
inc
leave
ja
lds
sub
xchg
dec
or
in
repz
dec
fnstenv
lcall
stos
mov
pop
repz
sahf
fs
scas
imulb
and
xchg
out
pop
gs
scas
xor
in
bound
test
and
jmp
add
dec
repnz
test
repnz
adc
and
ljmp
lret
icebp
jl
leave
push
mov
push
adc
mov
or
adc
sub
fwait
lods
pop
rorb
cmpsl
or
adc
push
push
mov
pop
test
inc
lock
add
xor
out
out
push
icebp
pop
imul
je
sbb
push
mov
mov
push
jmp
ss
fsub
push
das
dec
xchg
popa
jb
mov
xlat
push
ds
push
out
mov
pop
repz
mov
mov
jge
cld
pop
in
dec
push
inc
daa
xor
pop
adc
push
jo
pop
popa
leave
sbb
lahf
out
adc
loope
aam
out
mov
dec
rolb
sbb
push
insl
in
adc
sbb
rcrl
fldl
push
shlb
imul
in
cwtl
iret
push
pop
cmp
xchg
das
xlat
mov
outsb
push
adc
xchg
aas
and
leave
shll
jns
mov
push
mov
add
sub
and
push
fdivrl
xor
aam
add
loope
gs
dec
imul
jmp
ficomps
push
cmpsl
aam
aad
cld
sub
mov
test
push
lods
cli
fists
mov
mov
add
sbb
push
insb
pop
pusha
cwtl
xor
call
gs
pop
push
sub
pop
orb
xor
pop
ret
add
test
fwait
or
in
or
mov
fadd
data16
data16
pop
push
xchg
and
subl
inc
or
cmp
mov
frstor
dec
xchg
cmpsl
xor
js
inc
push
xor
arpl
jno
mov
out
inc
mov
fsubl
push
jecxz
aaa
test
fucomp
inc
leave
pop
push
adc
push
jbe
pusha
pop
decb
test
pop
enter
sub
rcll
rcl
mov
sub
imul
cld
movsl
pop
pop
shrl
or
mov
dec
xor
faddl
adc
jnp
sbb
adc
jge
loope
adc
int
inc
xchg
inc
xchg
scas
xchg
xor
lods
jae
mov
xor
rclb
adc
push
mov
lock
or
mov
lds
add
mov
mov
cmp
stc
stc
inc
insl
ljmp
push
jbe
xchg
ficomps
into
jno
ja
xchg
fnsave
mov
cwtl
ja
jl
lods
gs
rcrl
xor
int
or
outsl
lods
jmp
lods
fistps
rcll
outsl
pusha
ficomps
gs
mov
dec
lods
stc
pop
and
into
repnz
mov
sar
ret
cmp
inc
push
push
cmpsl
pop
movsb
dec
div
jmp
pop
outsl
inc
addr16
push
dec
pop
outsl
imul
dec
cmp
and
xchg
sub
fdivrl
cltd
push
in
negb
and
push
xor
repz
cmp
cmp
addr16
dec
and
je
mov
out
cli
js
sbb
push
imul
lret
xor
jns
jb
ds
xor
stos
jns
cmp
sub
sahf
mov
movsw
dec
lods
enter
daa
ljmp
or
lods
xchg
sti
push
fimuls
inc
pop
addr16
enter
mov
decl
inc
pusha
gs
dec
or
mov
xor
gs
fadds
pop
or
call
dec
push
fildll
adc
dec
and
sbb
cs
or
lret
push
adc
dec
stos
out
lods
cli
dec
dec
mov
sbb
cmp
dec
add
cli
inc
xchg
or
push
push
daa
fwait
lods
mov
loop
in
xor
mov
jne
pop
sub
or
cwtl
mov
pop
dec
sbb
outsl
and
lcall
fsubrs
or
cltd
dec
xor
or
xchg
insb
mov
aad
insl
dec
mov
and
xor
idivb
and
dec
dec
arpl
jbe
xor
shrl
mov
fiaddl
and
out
mov
inc
and
call
dec
and
mov
and
mov
rcr
pop
xchg
inc
adc
iret
mov
out
pop
andb
sub
xchg
testb
leave
xchg
popf
jae
adc
jns
xchg
push
sub
sahf
rcll
dec
xor
pop
xchg
jmp
sbb
cmp
arpl
stos
loope
mov
cmpsb
mov
ljmp
xchg
mov
xor
cmpsb
fcomps
aam
aad
pop
or
out
cmp
pop
sub
pop
loope
push
mov
dec
cmpsl
sub
mov
lds
mov
sbb
cmp
push
gs
pop
inc
mov
xor
or
lock
xor
fidivrs
test
mov
sub
mulb
pop
push
pusha
ljmp
and
mov
stos
mov
jne
dec
push
push
or
into
daa
mov
adc
pusha
push
inc
pop
idivb
mov
pop
push
ficoml
stc
mov
lea
pop
shl
push
inc
fs
xorb
enter
in
or
inc
push
sbb
fucom
pop
test
in
add
bound
dec
cmpsl
adc
or
ljmp
add
je
es
leave
test
ljmp
lods
dec
jecxz
sub
lahf
popa
push
and
ljmp
loope
sahf
xchg
dec
xchg
jnp
enter
popa
or
stc
sub
push
mov
jge
mov
aam
es
outsb
add
xlat
fcoms
mov
inc
and
ljmp
push
stos
rcr
push
pop
adc
sub
jmp
xchg
mov
fldcw
pusha
dec
push
test
jmp
or
fildl
mov
mov
sbb
pusha
cmp
mov
push
test
test
mov
lcall
loope
call
hlt
ret
mov
sarb
xchg
cld
aad
stos
jmp
stos
inc
popf
daa
out
loop
xchg
callw
arpl
cli
call
pop
sbb
sbb
jo
loope
dec
test
mov
pop
cmp
bound
psubsw
ljmp
movb
inc
cmp
push
or
cmpsb
lahf
enter
dec
xchg
sub
out
pop
stos
popa
out
sub
es
push
jmp
jmp
test
sub
sub
cmpsl
push
sbb
pop
push
call
push
sbb
mov
jns
mov
push
pop
gs
inc
dec
inc
mov
outsl
movsb
adc
sub
addr16
in
pop
popa
cwtl
sbb
loopne
test
push
fidivs
and
jbe
jecxz
aam
in
js
je
not
pop
mov
or
aam
addr16
push
push
sub
sti
dec
repnz
sbb
mov
lahf
dec
out
push
or
lock
fwait
cli
int
aam
jge
ljmp
xchg
stos
ja
jle
pop
mov
mov
xchg
mov
test
dec
aad
lock
out
lret
pop
push
call
stos
scas
popa
int
pop
clc
loope
ret
xchg
and
push
xchg
pop
sbb
ljmp
hlt
mov
dec
lret
lahf
jbe
dec
mov
and
sub
sbb
xlat
sbb
pop
jecxz
pop
jecxz
jecxz
push
shl
mov
lahf
cmp
cmp
cmpsb
fbstp
jne
inc
rclb
hlt
xchg
cmp
sbb
mov
jae
or
pop
popa
lahf
mov
mov
popf
and
pop
outsl
cmp
jne
inc
insl
mov
das
int
inc
mov
inc
mov
pop
fisttps
jno
mov
mov
data16
mov
add
ja
rcrl
xchg
add
mov
push
pop
adc
jne
pop
testb
push
mov
pop
pop
push
shld
sbb
cs
mov
repnz
lods
dec
adc
fisubrl
es
gs
in
rclb
in
int
frstor
stos
or
cwtl
mov
dec
xor
pop
ljmp
test
test
rcrb
push
in
mov
and
and
inc
push
sub
clc
push
xor
movsb
and
sub
mov
dec
sbb
push
pop
xlat
push
fldl
cmp
mov
pop
mov
pop
mov
mov
test
popa
test
pop
out
sbb
mov
out
mov
cwtl
lds
dec
jbe
push
inc
ds
mov
js
pop
cmp
add
cli
push
sub
inc
xor
sub
mov
push
dec
mov
sub
jne
adc
jmp
test
imul
leave
inc
dec
push
sbb
lret
push
pop
push
js
push
xlat
imul
jmp
fwait
jns
jmp
clc
pop
pop
movsl
ljmp
pusha
push
insl
loope
repz
xlat
in
pusha
js
mov
rorb
sahf
xor
xor
or
inc
sub
and
fisttpll
test
mov
sti
repz
lock
jle
fwait
outsb
cs
lcall
or
fldl
sbb
sar
addr16
jns
les
fwait
xor
mov
loopne
push
or
aam
lcall
in
out
or
ret
outsl
jmp
mov
lret
fnsave
out
aam
aad
jnp
pop
out
sub
cs
stos
fcomp
cmp
test
les
fsts
sar
push
loope
xchg
and
imul
imulb
clc
and
cmp
cmp
mov
and
cmp
sub
cltd
fmuls
rol
dec
mov
sahf
cmp
cmp
aad
cmp
scas
repz
out
aad
mov
dec
sti
loopne
pop
add
dec
testb
in
gs
push
pushf
test
lret
lock
ret
lret
loopne
test
or
fldenv
pop
pop
stc
push
pop
mull
sti
xor
pop
mov
pop
sbb
int3
mov
push
lret
in
jmp
fwait
cmp
and
sub
pop
inc
fsubl
je
and
sub
add
pop
push
loop
jp
popf
clc
les
push
push
inc
inc
cmp
sub
inc
pusha
jecxz
jbe
mov
lret
arpl
mov
dec
pop
cmpsb
jnp
arpl
fldcw
lods
or
or
cs
mov
flds
jmp
mov
cmp
jecxz
cmp
cmp
imul
jns
jp
jb
pushf
push
or
fisubs
pop
pop
sbb
xchg
movsb
bound
push
xor
add
mov
imul
fstps
xchg
les
push
imul
lods
mov
dec
jo
sub
repnz
sbb
xchg
stos
sub
test
cmp
push
rclb
push
idivb
cmp
aas
lcall
push
out
dec
adc
enter
xchg
js
lcall
icebp
push
cs
xor
cmpsb
add
sub
xchg
mov
rorl
adc
sti
faddp
add
loope
mov
outsl
adc
adc
or
dec
loop
xchg
jle
or
xchg
xor
sub
sbb
add
add
adc
les
xor
lahf
divb
mov
pop
jns
rorl
out
in
lock
xor
int
lret
or
in
stos
mov
ds
addr16
daa
cmp
in
mov
xchg
mov
shll
popf
or
cmpsb
mov
insb
lds
jmp
repnz
push
add
cld
dec
xchg
adc
or
mov
sbb
bound
xchg
bound
sub
daa
adc
pop
lret
addr16
cmp
loop
iret
adc
pop
fistps
out
push
movsl
movsl
pop
and
in
mov
push
pop
out
lret
jno
and
push
push
cs
test
adc
orl
inc
lahf
testb
sub
in
mov
mov
push
add
and
dec
inc
imul
fcmovu
test
sti
lea
ss
stos
xchg
mov
jns
add
js
add
out
decl
jbe
ss
repnz
cli
pop
lret
movsl
or
pminsw
xchg
or
cs
lea
sbb
or
orl
int
dec
js
mov
pop
icebp
pushl
cmc
mov
inc
jae
push
xchg
rorl
adc
dec
xchg
outsl
adc
in
cmpsl
mov
subl
cmp
mov
fld
and
arpl
notb
addb
cmp
and
in
out
jns
nop
pop
mov
xlat
jmp
add
sub
fs
push
frstor
push
pusha
mov
adc
sub
rcl
dec
and
stos
cmp
gs
inc
mov
sarb
xor
mov
fiaddl
jae
xchg
ds
adc
xchg
dec
mov
cmpsl
inc
jnp
aad
je
xor
mov
sarb
push
aas
sub
ds
mov
jns
push
push
and
std
mov
shlb
sub
pop
push
out
xor
shl
outsl
sbb
fidivrl
data16
sub
lods
test
cmpsb
js
pushf
jp
clc
aam
pop
arpl
int3
fistpl
push
in
das
into
es
ljmp
inc
mov
cmp
aad
push
mov
daa
mov
fnstcw
xor
pop
xchg
or
sbb
xchg
or
jp
dec
xor
aas
pop
fisttpl
xchg
push
inc
cltd
inc
leave
xor
paddd
cmpsl
sahf
xor
pop
sbb
lret
ljmp
xchg
sbb
mov
lock
cmp
int3
pushf
imul
stos
out
scas
push
xor
arpl
lods
imul
sbb
popa
mov
pop
aam
and
frstor
adc
inc
cld
addr16
std
fnstenv
pop
call
pop
and
js
add
cmp
imul
push
mov
enter
sub
pop
add
mov
inc
cmpsb
fsubrs
pusha
arpl
dec
gs
test
sbb
pop
push
or
inc
fldenvs
push
addr16
sub
rcr
pusha
subl
outsl
inc
jge
dec
push
add
out
int3
adc
push
in
cltd
inc
xor
xor
push
inc
lea
frstor
movsb
xchg
xor
cli
arpl
cmpsb
lds
in
and
dec
in
andl
adc
xchg
push
arpl
ficomps
dec
leave
nop
imul
dec
gs
or
insb
lods
or
jns
pop
movsb
or
mov
push
dec
shll
push
pop
mov
jno
inc
ds
cld
sbb
xor
hlt
rorb
rcrl
js
push
fisubs
pop
xor
pop
test
sbb
out
add
pop
mov
mov
dec
pop
aam
mov
pop
cmp
push
fstpl
movsl
lahf
mov
pop
negb
lds
jmp
mov
js
das
sub
inc
adc
popf
cltd
pop
push
lahf
fwait
cs
addr16
dec
jbe
mov
mov
sub
dec
insb
fs
push
daa
shrb
inc
xchg
flds
pop
sub
cld
mov
movsl
push
nop
pop
leave
push
pusha
pop
setno
jno
pop
fidivl
pop
lahf
fisubs
cmp
mov
sbb
add
xor
ret
xchg
dec
mov
pusha
xchg
addr16
cmpsb
dec
out
pop
lock
outsl
xor
sub
pop
cmp
mov
repnz
lret
xchg
xor
addr16
jno
test
push
cmp
bound
mov
inc
adc
push
and
lret
fldcw
push
xchg
or
fstps
jae
fwait
rcl
icebp
xchg
inc
pop
or
ja
fiaddl
add
ret
cs
push
push
out
jl
pop
call
icebp
inc
test
out
data16
cmpsl
sbb
data16
pop
insb
in
lods
clc
imul
cwtl
lret
cmp
dec
daa
movsb
ficompl
out
stos
in
imul
bound
inc
dec
loope
mov
rorl
out
enter
mov
inc
data16
sub
or
mov
or
sti
lods
cltd
or
sub
sbb
push
sti
data16
in
es
inc
aaa
leave
cltd
xor
xor
mov
mov
pop
or
pop
mov
and
repz
aas
jae
pop
sub
xchg
dec
mov
push
mov
pop
push
sub
pop
or
dec
test
xor
mov
fsts
push
mov
push
ds
bound
pop
adc
and
lcall
addl
jp
sub
mov
or
or
addr16
negl
out
push
add
sub
mov
adc
pop
mov
test
dec
ret
imul
inc
call
testl
pop
lret
ja
pop
out
leave
sub
ja
mov
repz
sbb
mov
shr
mov
push
imul
push
std
out
adc
scas
rolb
and
push
or
jno
push
jmp
outsb
outsl
or
je
cmpsb
fdivl
fcomps
int3
jecxz
adc
mov
rcrb
or
cmp
cltd
push
or
push
daa
or
aas
ljmp
adc
and
xchg
data16
dec
imul
push
in
inc
push
xor
xor
lcall
xchg
xor
sub
or
sbb
and
jmp
jmp
or
pop
enter
and
pop
in
sub
jecxz
lcall
jle
lds
gs
jge
fstps
add
adc
cmpsb
cwtl
xchg
outsl
aad
mov
fnstcw
and
push
jb
xor
mov
cmpsl
mov
push
icebp
arpl
cs
sub
fmuls
fadds
inc
inc
dec
or
fnstcw
and
out
sub
xor
jmp
mov
xor
call
pusha
roll
lods
push
add
out
push
pushf
loope
lds
dec
lods
mov
add
jns
cs
and
or
in
fstpt
add
test
and
and
nop
jae
jno
imul
outsl
jns
jb
xchg
xor
notb
and
stc
cmpsb
or
or
push
and
movsl
dec
cmc
or
push
ljmp
ret
loope
xor
dec
out
xor
dec
ret
in
scas
fdivrs
push
jns
mov
pusha
lahf
fnstcw
inc
pusha
or
and
fwait
das
pusha
mov
shrl
fdiv
aam
and
adc
adc
add
mov
aam
movsb
ret
pop
dec
cmpsb
push
push
push
cmp
push
pop
gs
sahf
dec
fcomps
pop
es
and
jmp
inc
imull
or
sbb
enter
fstps
jb
sbb
fisttps
enter
mov
cmp
xchg
fdivrl
sbb
arpl
addb
lock
fistpll
movsl
loop
mov
rcll
inc
repz
lret
adc
add
stos
sub
daa
xchg
push
jge
push
inc
sbb
adc
pushf
xchg
test
rcll
mov
xor
xor
push
je
inc
cmpsl
xchg
push
cmp
xchg
out
mov
jmp
loop
xor
push
cmpsl
cltd
pop
ljmp
fldcw
addr16
in
pop
cld
or
xor
fsqrt
lock
bound
xor
jo
das
rcrl
je
pop
mov
xor
sbb
dec
inc
adc
into
scas
vminps
or
pop
les
lcall
enter
call
in
je
out
scas
push
inc
sub
mov
push
cs
pop
inc
int
lahf
imul
push
xchg
data16
mov
pop
punpckhbw
iret
data16
inc
popf
lret
mov
dec
adc
dec
outsl
outsb
hlt
lret
add
jp
sbb
cltd
inc
or
jnp
adc
xor
fdivs
cmpsb
or
pop
sub
fnstenv
rorl
mov
pop
ret
adc
gs
scas
xor
or
in
pusha
cmp
aaa
jecxz
mov
cmp
leave
mov
sub
cmp
in
stc
lods
adc
push
dec
or
call
pusha
int3
es
es
neg
daa
mov
inc
cmp
cmp
add
hlt
in
in
dec
pop
dec
push
push
sti
dec
in
xchg
or
orl
cmpsl
out
movsb
in
jle
lcall
add
gs
cli
fwait
xchg
jmp
repnz
mov
stos
bound
in
cmp
push
ljmp
jp
pop
mov
or
or
sub
push
test
test
adc
mov
push
stos
fnstsw
int3
mov
pop
push
mov
push
add
add
push
push
inc
imul
pusha
xor
in
inc
jnp
js
push
xor
mov
outsb
cmpsl
cli
or
pop
add
inc
iret
je
stos
cmp
aaa
stos
test
test
mov
ja
idivl
shrb
aam
js
jo
mov
sbb
inc
mov
rcll
insb
mov
je
aad
cmc
xchg
pusha
test
inc
movsl
jae
in
jmp
dec
sti
cmpsb
mov
pop
cmpsl
push
test
insb
jno
xor
repz
addr16
sti
imul
out
sub
dec
and
mov
inc
in
mov
and
dec
jmp
push
outsl
ljmp
in
sub
ret
cli
test
icebp
data16
dec
xchg
stc
xchg
pop
test
mov
or
stos
mov
pop
mulb
imul
mov
imul
jmp
mov
ret
hlt
gs
fadds
xchg
ss
pop
add
cmc
dec
ret
xor
inc
dec
adc
lods
pop
ret
jns
pusha
shrb
jmp
pop
pop
js
cli
insb
js
pop
gs
dec
push
jns
jns
pop
jecxz
and
xchg
push
cmpsb
jmp
mov
push
ret
mov
cmp
xor
rorb
ret
jbe
ret
pop
aam
push
scas
lods
leave
loope
inc
es
test
negl
add
push
sarl
jmp
pop
gs
imul
stc
push
addr16
cwtd
or
dec
cmpsb
es
xchg
scas
inc
iret
push
mov
and
push
pop
insl
sub
pop
test
cmp
jmp
scas
shll
mov
dec
and
and
lods
inc
xchg
or
mov
sub
leave
push
test
outsl
pop
sti
pop
int
fnstcw
bound
push
ja
jae
mov
push
dec
jp
shll
shl
in
out
cld
test
insb
scas
jnp
in
inc
outsl
sti
cmp
add
jp
mov
jo
xor
pop
cltd
inc
jnp
sbb
inc
adc
or
loop
pusha
incb
mov
js
xchg
pop
mov
pushf
push
pop
movsb
push
test
ror
push
in
rcl
ja
mov
cwtl
mov
negl
sub
cld
dec
cmc
popf
outsl
pop
mov
dec
cmp
stos
xor
clc
mov
shrl
pusha
xchg
push
mulb
mov
imul
mov
or
pop
repnz
fcomip
xchg
sbb
inc
pop
sbb
mov
cld
imul
adc
dec
or
lret
push
shr
mov
cmc
sub
in
out
dec
loopne
insl
adc
pop
rolb
rorl
repnz
scas
test
test
hlt
fstl
push
rorb
lock
cld
push
xor
cwtl
inc
rcrb
inc
sbb
subw
pop
sub
xor
cld
dec
pop
imul
mov
in
out
inc
movsl
mov
add
ljmp
stc
xor
imul
ror
in
mov
sbb
dec
fadds
cmpsl
fstps
adc
pop
lock
imul
xor
xor
push
push
das
or
lods
push
mov
in
sub
and
add
jne
ss
out
loope
pop
push
fisubl
das
bound
data16
cmpsl
leave
pop
movsl
sub
je
xor
mov
sub
pop
icebp
daa
mov
xor
imul
into
sub
mov
jmp
mov
xor
add
fwait
sub
jno
mov
add
pop
jmp
cli
pop
jb
sub
jo
add
lds
sub
cmovle
jp
push
inc
data16
loope
sbb
in
popf
addr16
fcompl
lret
lret
mov
adc
jae
addl
stos
mov
cmc
bound
icebp
out
popf
loop
fstp
je
push
cmc
dec
movsl
or
pop
xor
popa
jmp
jb
test
scas
cwtl
xor
out
and
shlb
out
mov
push
ja
cmp
sbb
xor
sbb
insl
cmc
enter
mov
test
add
jae
cmc
pop
and
pop
fsubrl
dec
dec
shll
fstpl
pusha
xor
jns
addr16
test
pop
iret
push
and
push
inc
xor
mov
popf
pop
movsb
scas
xchg
bound
loope
sub
js
popa
bound
cmp
mulb
xor
test
cltd
es
out
frstor
mov
add
test
mov
push
add
jnp
jns
sbb
push
mov
loope
jmp
adc
repz
pop
bound
nop
outsb
sahf
mov
sahf
outsb
or
dec
pop
push
lds
xchg
imul
ja
mov
mov
pop
pop
sub
sub
cmpsb
add
in
adc
mov
notb
popa
dec
or
bound
fmul
and
push
aas
sub
lret
inc
or
mov
fs
pop
stos
or
sbb
pop
inc
or
jno
inc
dec
cltd
ljmp
or
inc
xchg
sub
decl
add
bound
jl
mov
push
out
test
mov
inc
or
dec
push
leave
lret
roll
bound
insl
jnp
cmpsb
push
out
lods
inc
bound
inc
inc
and
pusha
mov
jnp
je
inc
pop
xchg
js
outsl
pop
and
and
mov
cmp
push
jne
outsl
push
pusha
push
flds
push
shr
lret
fs
jno
fbstp
push
outsb
pop
fcoms
stos
cmp
mov
out
push
iret
ljmp
cmpsl
mov
popf
mov
int
out
jno
out
cld
bound
lahf
jbe
jno
adcl
jecxz
jp
rolb
push
cmp
push
inc
insl
jg
or
pop
call
ljmp
xor
outsb
dec
push
stos
xor
push
fnstsw
mov
lret
sahf
sub
push
xchg
sahf
pop
add
pop
movsl
dec
push
stos
xchg
sub
loop
adc
loope
push
outsl
pop
je
dec
mov
je
movsl
xor
xchg
cmp
xchg
icebp
out
adc
mov
push
test
xor
mov
lcall
dec
dec
and
mov
decb
loope
sub
push
sub
and
adc
inc
in
outsl
stc
xor
mov
es
mov
or
addr16
pusha
fcmovb
outsl
imul
mov
popa
add
cmpsl
push
daa
repz
cmc
movsb
cmc
stos
push
pop
sub
fs
sbbl
movsb
imul
mov
xchg
notl
push
pop
jge
dec
lea
inc
dec
inc
mov
xchg
push
push
push
pop
lods
test
pop
pop
mul
icebp
mov
and
mov
or
lret
push
sti
fs
idiv
push
pop
loop
pop
and
rorl
loopne
aad
cmp
insb
sbb
imul
sub
xchg
in
jmp
or
sub
pop
push
cmp
call
mov
pop
int
push
or
cmp
pusha
push
inc
push
or
movsb
xlat
xchg
push
cmp
rorb
nop
push
ds
pop
mov
out
or
inc
adc
inc
jnp
aam
add
adc
aad
pop
sahf
xor
adc
sub
int3
pop
adc
lcall
and
shlb
dec
fs
jecxz
and
rorl
sahf
inc
xor
mov
aad
pusha
enter
push
les
fs
adc
adc
cmpsb
jle
inc
pop
or
pop
and
popa
dec
or
iret
jne
adc
jne
out
pop
push
fiaddl
data16
or
fs
pop
add
pop
pop
in
test
or
sub
bound
cmp
aad
pop
push
loope
jecxz
lea
fadds
mov
arpl
sbb
in
fisttpll
call
or
and
or
aas
fsubl
movsb
not
ror
mov
inc
cmp
adcl
push
jb
xchg
inc
dec
outsl
lods
or
ds
in
push
mov
gs
in
fldl
xchg
xchg
sub
and
adc
dec
or
scas
adc
call
fldt
or
jns
repnz
mov
aad
or
and
xlat
stos
inc
pop
push
jb
dec
xchg
movsl
dec
out
fistpll
es
mov
cmp
jp
or
push
jmp
pmullw
xor
in
mov
mov
in
jmp
bound
cmp
loope
out
outsl
xchg
daa
lret
lods
or
inc
add
out
push
cmp
push
mov
in
andl
sarl
iret
fsubrl
hlt
jge
fisubrl
addr16
and
movsl
cmpsb
or
inc
dec
push
sti
pusha
dec
daa
in
loopne
pop
sbb
inc
dec
mov
add
sub
in
popf
stos
push
jg
lahf
outsl
fwait
push
pushl
int3
xchg
cmp
sub
xor
iret
and
push
push
insl
cmp
ja
xor
lods
xor
es
cltd
dec
scas
sub
cmpsb
mov
jmp
inc
gs
out
clc
subl
inc
xor
aad
in
ja
push
aas
enter
mov
push
pop
xor
hlt
pop
imul
jae
inc
mov
sti
push
sarl
in
jmp
test
pop
and
add
xor
sbb
xlat
xor
mov
xor
aaa
adc
jecxz
adc
xor
es
pop
ss
pushf
movsl
or
cmp
xor
mov
jmp
lahf
pop
cli
and
push
mov
mov
push
roll
sahf
cltd
fwait
pop
fneni(8087
pop
insb
sbb
and
xchg
push
sub
outsl
test
jle
test
frstors
xchg
pop
shr
adc
or
inc
jne
std
cltd
push
in
out
shlb
add
jge
mov
push
fs
dec
xchg
lret
jge
loopne
jnp
repnz
mov
jne
xor
dec
adc
add
loope
and
mov
mov
push
mov
dec
fists
outsb
movsl
mov
adc
and
push
call
and
mov
movl
or
mov
aaa
mov
jo
pop
dec
mov
sub
lea
jns
test
or
or
push
ljmp
neg
sub
aam
mov
lods
stos
iret
jns
nop
cmp
das
mov
push
jns
cmp
loopne
fsubl
std
push
mov
sub
popf
mov
mov
dec
mov
sbb
lods
mov
and
lods
daa
cli
dec
loopne
push
xor
in
aad
lods
dec
pop
and
xor
or
cld
iret
push
sti
add
pop
or
inc
lock
add
stos
sub
sub
xchg
out
movl
inc
sti
fstpl
xchg
xor
or
or
mov
adc
cltd
or
xchg
addr16
shll
jl
lret
ret
ljmp
out
mov
inc
mov
cmpsl
dec
push
int3
stos
shlb
push
mov
push
fistpll
pop
test
mov
push
iret
das
jns
cmp
data16
or
pusha
aaa
xor
sub
mov
dec
cltd
jp
cmpsl
adc
xchg
outsl
jno
inc
jmp
mov
inc
daa
pop
add
jns
dec
icebp
push
loope
insb
in
xchg
sub
xor
and
push
dec
leave
mov
adc
pop
data16
jns
jno
and
shll
cmp
pushf
jmp
ljmp
dec
cli
dec
js
fs
outsb
iret
dec
es
sub
push
dec
rclb
push
outsl
clc
popf
or
push
push
pop
in
push
xlat
push
push
or
push
or
jo
popa
push
test
test
mov
gs
jmp
hlt
push
ljmp
arpl
mov
push
sub
mov
repz
cmp
call
xor
push
xor
pop
sbb
in
les
dec
loope
cltd
cmpsb
cmp
push
pop
cs
pop
cmpsl
jb
fs
pop
test
or
arpl
or
mov
mov
xor
cmpsb
inc
mov
arpl
scas
popa
nop
sbb
fs
jecxz
cmp
fs
pushf
xchg
pop
mov
mov
popf
inc
pop
test
pop
arpl
inc
gs
fs
inc
je
cmp
movsb
xor
mov
lret
lcall
bound
stos
sbb
cmp
xlat
push
cmp
sbb
pop
loopne
push
add
sbb
add
je
push
sub
dec
loope
xor
popa
and
movsl
enter
cltd
sbb
xchg
dec
push
ljmp
dec
dec
ljmp
addr16
enter
outsl
push
fistpl
lret
sub
dec
mov
mov
cmp
mov
cltd
and
dec
jbe
fstps
es
mov
sti
daa
insb
xor
lock
jg
faddl
dec
cltd
push
add
xor
aad
mov
sbb
in
faddl
cmp
fstl
and
addr16
enter
sub
push
pop
push
pop
sub
enter
push
mov
xchg
inc
in
rolb
bound
xor
shll
push
popf
lods
outsl
inc
or
push
and
jb
in
shr
loopne
popa
fadds
dec
sar
bound
aad
sahf
sbb
adcb
push
mov
out
push
xchg
sahf
aam
iret
push
pop
push
xchg
std
dec
sbb
pusha
ds
dec
xchg
imul
sarl
push
xchg
xchg
add
pushf
xchg
outsl
scas
sub
push
push
add
ljmp
or
xchg
js
jle
std
push
imul
stos
add
fidivrs
jns
push
ds
in
cltd
mov
add
out
inc
xchg
fsubp
or
xchg
enter
arpl
sahf
lods
mov
loopne
xchg
faddp
scas
fs
out
fcomp
loop
xchg
das
mov
add
mov
push
sbb
mov
push
shl
inc
scas
rcrl
bound
jno
and
mov
jae
or
rcr
and
push
or
shll
push
and
notrack
loopne
xchg
ljmp
xor
mov
mov
imul
pusha
pop
xchg
pop
xor
jne
push
or
xchg
push
mov
mov
fnsave
jnp
pop
mov
cli
inc
pop
adc
cwtl
xchg
pop
loop
shl
lock
aam
and
cvtps2pd
jmp
pop
jl
sub
jle
loop
xor
roll
jge
shrl
dec
shr
sbbl
aaa
fisubrs
lods
xchg
out
mov
cmp
mov
cmpsb
ret
leave
sbb
in
stos
leave
mov
pop
ficoms
loop
loopne
xchg
push
fistpll
fbstp
idivb
jae
mov
gs
mov
mov
add
push
into
or
addr16
scas
xor
mov
lea
or
push
inc
divb
mov
push
ljmp
fs
xlat
popw
out
sahf
adc
push
arpl
test
adc
and
fldcw
cmp
adc
cs
pop
stos
mov
fistpll
dec
hlt
pop
out
dec
sub
fwait
sub
xchg
fs
lods
pop
jecxz
cs
pop
cli
cmp
in
stos
mov
mov
mov
push
inc
push
loopne
push
dec
fldenv
push
pop
ret
mov
clc
dec
stos
mov
or
cmp
push
mov
je
clc
jle
addr16
aaa
xchg
mov
sbb
sti
mov
sbb
movsb
sar
movsb
lahf
push
cmc
je
leave
inc
pop
inc
aas
loop
gs
subl
or
jns
mov
xchg
fs
dec
loop
dec
es
leave
xlat
scas
or
lahf
push
aam
clc
push
bound
mov
jmp
sti
jmp
pusha
push
outsb
ret
or
mov
push
push
and
out
sub
in
orb
imul
add
push
push
cmp
jmp
push
add
xor
pop
jge
push
arpl
push
test
outsl
jle
fs
or
cli
pop
repz
xchg
fiaddl
pop
xchg
iret
adc
mov
imul
pop
popf
imul
scas
lods
mov
and
cmp
mov
test
ss
test
inc
sarl
divb
mov
les
jne
in
adc
adc
xor
ss
ja
pop
cld
bnd
repz
xor
pop
cltd
cs
loopne
push
outsb
xor
xchg
loopne
xor
push
cmc
mov
mov
sbb
or
fwait
arpl
xor
cmp
mov
pop
xchg
enter
loope
cmp
xor
sbb
mov
xor
pop
cs
or
sub
lea
stc
sarb
imul
mov
xchg
mov
out
cmp
cs
loope
mov
push
and
dec
push
outsl
add
sahf
adc
cli
lock
add
or
gs
mov
test
cs
sahf
xor
les
inc
ljmp
xchg
push
ss
clc
fdivl
dec
out
or
out
or
int
pop
jns
xor
lea
fistpll
add
jne
roll
or
dec
fistps
mov
or
jg
adc
stos
sbb
fadds
ss
lds
frstor
movsb
push
aad
mov
pop
fnstenv
repnz
dec
xchg
aad
fcoms
mull
inc
iret
and
and
xor
fs
fistpl
int
mov
cld
push
inc
xchg
inc
xchg
xor
xchg
push
inc
fsubrs
int3
mov
cmp
pop
push
dec
sub
or
sbb
cmp
and
pop
pop
fcomps
gs
push
adc
loope
or
test
in
or
icebp
pusha
xchg
xor
lret
jb
cs
mov
cmp
rcl
jmp
cmpl
movsl
pop
jnp
lock
in
pop
jle
addr16
jmp
jne
test
aad
lcall
mov
pop
sub
lahf
imul
subl
inc
mov
pop
rcll
mov
push
sbb
pushf
xor
inc
or
and
mov
daa
outsl
movsl
xchg
dec
adc
mov
fwait
out
andb
adc
mov
aam
fwait
sahf
repz
mov
lods
fnsave
pop
xchg
sbb
mov
push
in
cmp
or
rcl
xchg
fistl
clc
or
inc
shll
pop
je
lcall
xchg
fstl
and
movsb
aam
jge
push
adc
jno
add
fwait
pop
or
cltd
outsl
aam
andb
and
dec
xor
and
or
pop
inc
lds
fs
repz
rorl
xor
in
enter
nop
sti
mov
xor
and
mov
mov
push
xor
lret
in
fnstenv
in
arpl
pushf
xchg
push
and
jecxz
jle
add
in
js
je
or
fisubrs
movsb
aam
mov
sbb
fbld
sbb
and
xchg
and
lcall
daa
nop
jo
adc
dec
pop
pop
cltd
pop
xor
out
ficoml
adc
sub
ds
sbb
add
dec
int
and
in
mov
pop
ficoms
sbb
outsl
cmpsl
adcb
adc
sahf
std
sbb
mov
jae
outsl
push
push
rolb
pop
mov
mov
aad
stos
es
loopne
xlat
push
dec
shl
ffree
gs
shlb
pop
inc
mov
loopne
jl
push
icebp
mov
gs
rcr
pop
movsl
stos
stos
fcomi
fs
repz
rclb
or
icebp
mov
icebp
repz
add
cmp
push
pop
push
push
lcall
pop
pop
ficomps
lahf
jmp
lds
subb
imul
xchg
or
mov
fidivrs
dec
fs
out
pop
add
gs
or
repz
pop
bound
aam
daa
push
cmp
push
pop
fstps
mov
stos
cwtl
inc
mull
inc
pop
out
inc
or
loopne
insb
jmp
cmpsb
mov
pusha
or
adc
push
mov
mov
in
push
pop
pop
or
mov
sub
inc
sbb
jle
jno
sub
test
sub
loope
pop
iret
push
shrb
clc
add
dec
pop
clc
inc
cmp
addr16
sub
cs
pop
sbb
inc
jnp
data16
xchg
sub
imul
inc
loop
test
push
hlt
mov
repnz
test
adc
pusha
ficompl
mov
sahf
gs
dec
jge
lahf
pop
out
loope
fs
sub
inc
and
loope
xchg
pop
and
gs
and
pop
arpl
pop
es
test
and
jae
push
pop
iret
sub
pop
push
or
push
rorl
xor
cmp
movsl
stos
test
sarb
pop
pop
gs
fisubs
call
adc
pop
data16
ret
mov
push
aad
gs
pusha
popa
mov
int3
or
addb
xchg
pop
popa
cmp
add
pop
sbb
push
xchg
bound
jmp
xor
sub
pop
mov
fstps
shll
sub
or
in
in
stos
pop
push
fisubl
or
out
andb
fs
adc
add
add
in
call
call
daa
push
in
aad
in
and
push
xor
sti
sub
shrb
inc
sub
fwait
outsb
into
xorl
fistpll
lret
jne
and
pushf
add
sbb
push
out
movsb
push
sarb
mov
jmp
lret
pusha
xchg
or
test
push
clc
and
pusha
inc
jmp
bound
std
pop
ljmp
xchg
xor
leave
outsl
cli
push
ret
or
imul
rorb
pop
ficoml
ds
sti
outsb
pop
cs
xorb
mov
aad
lock
add
out
pop
push
movsb
fistpll
orb
xor
adc
bound
nop
dec
mov
fisttpll
sbb
bound
les
pusha
jmp
lret
testb
arpl
gs
xor
mov
push
insl
pushl
cwtl
sub
enter
sub
push
popl
xchg
imul
mov
pushf
imul
das
xchg
stos
mov
pusha
je
mov
scas
jb
sbb
pop
pushf
ss
test
mov
mov
rorl
and
int
movsb
popa
mov
cmpsl
sbb
add
rorb
cmpsl
js
gs
cmp
add
insl
loopne
lahf
addr16
in
pop
iret
jge
and
push
dec
jle
xor
sahf
fimull
pop
into
cmp
aad
pop
and
imul
xchg
loope
bound
frstor
popa
xor
aas
or
xchg
adc
addr16
fwait
and
pop
das
mov
inc
pop
mov
inc
cmpsl
repnz
or
pusha
xor
cltd
mov
or
sbb
pop
leave
xchg
jp
inc
mov
leave
adc
push
jmp
lods
imul
xor
jb
push
and
das
push
lahf
xchg
jnp
dec
inc
repnz
mov
mov
imul
lcall
pop
mov
fdivrl
out
es
inc
pop
insl
lea
lcall
sub
mov
xlat
add
pop
repnz
xlat
lret
jl
mov
inc
push
fmuls
test
daa
fisubrs
mov
mov
xchg
stos
stos
push
jno
cmpsb
dec
add
cmpsl
jecxz
pushaw
pop
into
in
dec
out
cli
jb
hlt
inc
loop
test
rorl
xchg
fisubl
or
mov
push
js
in
pop
push
ret
cmpsl
cmpsb
push
test
insb
cltd
sbb
push
pop
push
push
mov
jp
push
popa
adc
lea
loop
xchg
pop
mov
lcall
fs
sbb
lret
test
mov
js
xor
rorb
and
add
adc
xchg
mov
ficoml
enter
iret
sbb
mov
movsb
pop
push
pop
fcomps
and
ds
pop
fs
sub
xchg
xchg
sbb
inc
lds
xchg
and
addr16
mov
sub
mov
or
xchg
test
cmp
lds
push
or
cmc
xchg
outsb
push
in
iret
and
rcrb
sub
cli
cmp
shll
lret
and
inc
pushf
pop
scas
xchg
loopne
xor
xchg
int
add
mov
iret
out
cmpsl
cmp
sbb
mov
lods
scas
xchg
mov
cmp
or
mov
cmp
sbb
fisubrs
push
pop
out
jno
lahf
lea
fistpl
xchg
aad
add
cltd
jmp
jns
push
jno
aam
jmp
lea
scas
cmp
scas
add
and
and
fists
lahf
xor
dec
dec
aam
pop
loopne
pop
jl
inc
fisttps
cmp
dec
push
cmp
shlb
add
insb
sbb
int3
pmullw
mov
out
jp
xor
ds
sahf
test
je
lods
xor
cmp
data16
out
pop
imul
add
cli
addr16
and
mov
push
ret
out
insb
pop
sub
popa
pop
or
mov
out
xchg
dec
jo
lahf
xchg
clc
je
inc
mov
push
shrb
add
sahf
insb
in
push
and
mov
cltd
aam
and
mov
xchg
in
lods
inc
ds
jnp
loop,pn
jbe
fdivrs
push
and
mov
fwait
imul
xchg
pop
mov
inc
mov
or
sub
mov
or
cmp
inc
add
in
add
add
inc
in
popa
ror
popa
push
mov
push
lcall
sarb
fsts
lea
adc
imul
aaa
notl
push
or
in
sbb
in
and
xor
imul
jae
and
pusha
xor
add
jmp
dec
dec
leave
out
insb
imul
test
inc
and
or
lds
pop
iret
xor
repz
lret
neg
inc
jl
xor
xor
cmp
movsb
xchg
and
in
test
add
movsl
dec
lock
or
popf
pcmpeqw
movsl
out
or
sbb
mov
xchg
lret
mov
xchg
dec
sub
jle
movb
pop
or
movsl
or
sub
ret
imul
test
cli
xlat
imul
int
cmp
cli
cli
repnz
aad
hlt
xchg
rsqrtps
stos
notw
pop
and
sub
dec
mov
ss
stos
stos
aaa
push
dec
movsb
iret
jmp
popf
mov
out
mov
ret
rcrl
out
adc
mov
sahf
ficoms
mov
je
lret
add
push
and
sub
jne
fsubs
add
test
mov
aas
out
mov
mov
ret
push
mov
mov
mov
sub
insl
push
pop
insl
test
xchg
outsb
or
call
movsb
and
add
jp
mov
xchg
xchg
shlb
sub
repnz
lock
dec
pop
sub
mov
mov
sbb
push
mov
leave
fwait
xchg
rol
xchg
pusha
xchg
push
pop
roll
mov
xchg
dec
aad
mov
xor
mov
sbb
into
addr16
mov
pop
xor
jmp
push
push
sub
stos
gs
add
mov
dec
ds
test
push
adc
sbb
cli
out
dec
je
push
repz
add
dec
or
aas
mov
push
and
and
neg
dec
popa
cmp
js
push
aad
pop
fcompl
mov
sub
or
push
jnp
cmp
mov
ja,pn
stc
push
in
fsts
jae
cmc
repz
loope
and
mov
jb
les
xor
jbe
inc
and
pop
repnz
fcompl
negb
sbb
xchg
mov
or
inc
cmc
jae
sbb
sub
inc
fnsave
inc
cli
out
push
xchg
testb
sbbl
out
jb
adc
pushf
fidivl
in
addr16
les
int3
sti
aad
dec
pop
gs
mov
scas
int
mov
les
inc
icebp
mov
and
pop
jl
xchg
jnp
cmp
sbb
std
insl
arpl
jmp
cmc
cmp
and
mov
push
add
mov
fldenv
in
push
inc
popf
sub
outsl
es
mov
and
imul
xor
fnstenv
dec
mov
sub
xchg
jo
test
aad
mulb
xor
bound
or
movsl
popa
movsb
loope
pop
imul
mov
fistps
dec
ficompl
stc
dec
faddl
or
xor
push
sub
hlt
xchg
cmpsb
pop
aaa
mov
add
mov
push
cmc
xchg
sbb
in
jno
out
inc
and
push
mov
xor
push
jnp
movsl
into
cmp
jb
test
sub
inc
add
inc
fwait
push
push
stc
js
fs
fidivs
add
pop
cmpsl
xchg
add
lret
or
nop
xlat
cmp
and
jno
pop
adc
outsb
fneni(8087
sarl
xchg
xchg
in
imulb
push
lds
bound
sub
lea
push
jecxz
mov
out
inc
iret
cld
into
add
push
dec
push
into
shll
push
push
cmp
dec
bound
jp
xchg
mov
incb
add
fcomp
ja
lcall
fwait
stc
mov
clc
mov
xor
pmullw
and
lods
bound
dec
sti
fisttpl
push
dec
mov
dec
cmpsb
cmp
in
inc
icebp
ljmp
xor
push
fists
andb
and
cmp
mov
test
and
push
add
dec
push
outsl
push
in
daa
or
lahf
push
push
mov
xor
cmp
in
ret
sub
dec
rclb
pop
insb
inc
call
or
sub
push
scas
pop
and
jmp
push
fldcw
or
bound
pop
xchg
xor
ret
mov
and
jp
add
gs
adc
cmp
pop
or
je
es
sahf
aaa
ds
add
lds
cmp
sbbb
jbe
push
mov
rep
push
std
nop
mov
mov
xchg
inc
lahf
sub
add
inc
push
mov
and
push
inc
mov
pop
out
push
sub
aas
xchg
mov
pop
aaa
fs
imul
pop
in
clc
or
jmp
mov
xchg
fs
aad
mov
xchg
dec
ljmp
dec
outsl
cmp
sahf
pop
pushw
gs
movsb
popa
dec
stos
add
pop
out
scas
inc
insl
cwtl
movsl
fstps
imul
dec
fs
and
bound
ljmp
jmp
enter
neg
and
shll
xlat
outsl
jle
jae
roll
nop
and
bound
xchg
pop
sti
mov
cmp
out
sti
push
aaa
pop
sub
ljmp
ret
enter
xlat
mov
sub
mov
test
mov
pop
lods
mov
gs
xchg
sahf
mov
ss
subb
adc
repz
mov
pop
in
fwait
cmpsb
pop
adcb
dec
lcall
mov
xchg
test
fwait
hlt
and
cmp
xchg
sbb
mov
imul
cmp
fucomip
rcll
loop
fs
push
testb
test
pop
and
or
mov
clc
push
inc
in
loopne
or
jne
mov
mov
push
in
aas
sahf
repnz
and
xchg
xchg
jmp
sub
es
sti
sub
pop
fildl
stos
std
sub
adc
fsubrs
sahf
mov
fs
test
es
int
cltd
jmp
push
pushf
dec
push
mov
stc
in
xor
sbb
lock
ja
cmp
sub
pusha
cmp
std
shl
sti
cmp
cmp
mov
call
loopne
popa
inc
cmp
xchg
scas
jecxz
mov
pop
or
repz
fcomip
inc
in
aam
les
stos
or
in
cwtl
sbb
and
xchg
popf
dec
pushw
push
iret
mov
cltd
pop
inc
mov
xlat
dec
mov
xchg
lods
xor
notb
push
add
push
pop
dec
push
outsb
sub
hlt
push
xchg
fld
sarb
pop
imul
mov
pop
orl
into
out
out
inc
adc
lods
sub
cmp
xchg
fs
mov
adc
ret
std
dec
pop
and
lret
outsb
dec
cmp
pop
push
pop
jmp
mov
inc
push
push
mov
in
and
jnp
cmp
lods
xchg
xor
gs
sub
cmp
loopne
enter
je
iret
sub
cld
and
adc
push
cli
adc
sbb
pop
dec
in
aas
fs
dec
and
cmc
fwait
cmp
das
jno
or
push
cmp
or
inc
push
jb
pop
mov
mov
cmpsl
push
cltd
inc
mov
jge
push
ret
loopne
aad
push
lret
sbb
and
rorb
les
xor
xor
addb
cmp
add
cmp
xchg
dec
dec
xchg
sbb
outsb
js
fsubrs
push
outsl
rorb
into
inc
mov
xor
or
xor
fbstp
call
les
sbb
push
cld
push
pop
xor
insl
cmp
pop
jl
in
jecxz
push
xor
fisubrs
les
jnp
dec
inc
dec
or
test
loope
fmuls
aas
xchg
push
dec
inc
adc
cltd
and
push
inc
xchg
aas
mov
cmc
xchg
lods
cmp
mov
lahf
xor
lods
stos
mov
mov
scas
add
scas
mov
sub
inc
mov
or
inc
aad
pusha
xchg
adc
test
pop
cmp
stos
sbb
shlb
inc
fldcw
mov
fadds
mov
push
bound
shlb
xor
jns
cli
xor
push
imul
and
jp
imul
sbb
sub
mov
fidivl
gs
test
dec
dec
and
ficomps
pop
add
out
pop
ret
pop
pop
lds
cmp
pop
add
mov
push
dec
test
arpl
and
aaa
push
sarl
pop
popf
pop
mov
inc
push
pop
push
in
decl
test
push
push
stc
sbb
pop
dec
das
jecxz
arpl
ja
idiv
push
js
sub
ss
sbb
mov
sbb
loope
pop
or
and
jne
inc
gs
dec
repnz
dec
xchg
mov
inc
outsl
inc
xor
ja
dec
sub
das
mov
pop
mov
in
in
cld
subl
and
cmpsb
jle
or
cli
xor
sahf
mov
lret
add
ds
and
out
fdivrl
ljmp
push
nop
rcrb
jmp
sbb
repnz
push
aas
lds
aad
sbb
arpl
test
push
cmpl
fsubrs
sub
mov
imul
test
adc
movsb
in
cmp
jns
dec
adc
mov
mov
les
insl
sub
xlat
mov
nop
inc
jge
mov
in
push
ltr
imul
hlt
pop
jne
mov
dec
or
sbb
shr
push
dec
popf
scas
pop
add
test
xor
rcl
sbb
inc
and
xor
sbb
add
mov
pop
cmp
mov
ja
test
sub
lahf
sub
mov
sub
jg
lea
mov
cwtl
sub
faddp
xor
mov
dec
movsb
jmp
cmp
cmp
sub
mov
and
jecxz
xchg
shrb
in
leave
cmpl
cli
xchg
dec
cmpsb
fstps
lds
xchg
cmp
adc
sahf
addr16
cmc
gs
cmp
gs
popa
aaa
aad
sub
cmc
xor
daa
pusha
push
and
aas
or
sbb
loope
push
rcr
bnd
aad
sbb
push
frstor
jmp
mov
movsl
addr16
sub
cmp
or
pusha
push
inc
xchg
les
jno
mov
rol
and
mulb
fldcw
lods
popf
fwait
testb
pop
jle
or
xor
rcrl
adc
and
sbb
movsb
outsb
sub
dec
pop
push
jmp
xor
sti
or
dec
aad
jno
scas
mov
jns
pop
sbb
jb
out
adc
ficompl
xchg
pop
es
xor
ds
mov
and
or
adc
inc
repz
repnz
ret
movsl
fisubs
arpl
jmp
dec
xchg
lock
cmp
js
push
bound
cltd
data16
sbb
fdivr
adc
jns
xor
sub
push
push
push
and
pop
xchg
jmp
lea
pop
adc
xchg
push
dec
es
leave
xchg
in
xlat
or
mov
push
pop
xchg
das
aam
push
lds
fisubrs
inc
loope
stos
mov
xorl
loopne
mov
sub
js
ss
pop
das
cli
sahf
pop
or
rcll
inc
inc
push
pop
adcb
pop
xchg
fstpl
fisubrs
sarl
call
or
in
movsb
leave
divl
outsb
and
mov
xchg
aad
sahf
insb
push
inc
out
add
mov
or
jno
ficoms
iret
pop
out
fcomps
add
ret
xor
pop
aaa
call
in
push
xchg
xchg
out
xchg
in
stos
sub
jns
mov
jne
add
mov
sub
pushf
mov
pop
addr16
lahf
or
pop
dec
lock
jp
add
push
push
cmpsb
iret
and
and
xchg
movsb
mov
cmp
int
in
push
in
stos
sub
inc
sub
xchg
xor
fwait
imul
add
bound
lret
and
mov
pop
es
sbb
xchg
leave
mov
in
adc
pop
sub
out
push
fidivs
fsts
addr16
push
jge
push
adc
push
jae
out
mov
bound
lahf
xchg
clc
add
clc
pop
mov
xchg
addl
xor
push
add
iret
fcmovnbe
cli
push
arpl
es
mov
xor
je
mov
in
daa
push
popa
cmpsb
cmp
dec
enter
test
xlat
insb
cmc
jns
inc
dec
xor
sbb
aad
cmp
test
xlat
mov
in
int
cli
xor
lea
pop
lock
std
in
int3
jo
fisttpll
mov
adc
cmp
fistl
push
pop
sbb
push
sahf
mov
xlat
push
mov
adc
jg
addb
xchg
inc
add
aas
push
iret
jmp
hlt
inc
addr16
and
sub
inc
clc
test
leave
test
out
xchg
es
lret
call
sub
les
push
fiaddl
es
imul
push
cmp
sbb
pop
fildll
cmp
jg
sub
movsl
pop
arpl
xchg
add
fsubrs
xor
push
fsub
arpl
xchg
in
sbb
pop
inc
dec
xchg
adc
imul
and
push
test
insb
notl
jmp
arpl
push
jle
add
stos
loopne
push
mov
sub
and
iret
sbb
rorl
or
into
ds
add
mov
inc
insl
lock
clc
and
mov
lret
dec
pop
add
les
jnp
push
pusha
add
xlat
push
mov
xlat
fabs
mov
pusha
shlb
push
cmp
pop
ficoml
xchg
int
fs
mov
jl
jb
or
lock
je
adc
loopne
xchg
arpl
stc
dec
es
push
loopne
movsl
add
out
outsl
sbb
rcrb
icebp
test
aad
fwait
or
push
pop
or
add
push
out
rcl
mov
cmp
test
cmpsb
or
or
xchg
mov
sbb
lock
mov
sbb
outsl
adc
scas
pop
in
inc
fsubrp
xchg
pop
in
sub
outsl
sahf
aad
sub
clc
mov
data16
in
jmp
mov
fwait
xchg
gs
cmp
mov
aaa
mov
push
mov
add
cmpsl
mov
out
imul
mov
and
dec
in
bound
fnstcw
push
das
sbb
outsl
xor
inc
sub
bound
lahf
aas
pop
cli
xor
sub
shrb
rcll
gs
jmp
mov
fcomps
popf
push
dec
xchg
es
add
movsb
xchg
push
sahf
outsl
push
xchg
pop
push
stos
push
xchg
or
cli
roll
movntq
cmp
test
pop
scas
fucomp
dec
data16
rorb
bound
jns
ja
loope
addr16
xor
mov
push
lahf
xor
mov
movsl
sub
in
xchg
jmp
call
pop
outsl
mov
jns
fsubs
dec
xchg
push
cmp
sbb
pushf
out
push
jecxz
sub
std
lds
add
xor
push
dec
in
inc
insb
or
cmp
push
dec
scas
inc
inc
mov
arpl
int3
es
inc
icebp
xor
sbb
enter
fimull
pop
dec
pop
xor
push
xlat
test
dec
push
orl
out
test
cwtl
ja
dec
xor
sbb
pop
fwait
dec
xchg
xor
data16
sub
push
lcall
dec
xchg
divb
test
stos
xchg
dec
sub
lods
shrl
and
outsb
in
sbb
cwtl
loop
pop
push
pop
stos
fwait
cs
arpl
data16
push
pop
or
cmpsb
cmpsb
jle
xchg
js
test
jl
inc
xchg
mov
cmp
in
mov
push
addb
jmp
sbb
and
imul
lea
push
hlt
push
cmpsb
dec
jecxz
out
sub
xchg
ds
push
dec
add
wrmsr
push
or
push
mov
dec
cmpsb
int
push
cwtl
push
xor
mov
mov
mov
fimull
push
add
out
sub
dec
gs
cwtl
push
or
push
jnp
pop
cmpsl
mov
ss
pop
es
sti
adc
in
mov
gs
jns
mov
lret
pop
dec
leave
rol
jbe
es
test
and
or
fwait
pop
test
xor
or
push
outsb
leave
mov
inc
mulb
gs
ljmp
jl
aas
movsb
or
imul
imul
xchg
push
cmp
push
imul
push
insw
jne
fs
cwtl
fmull
cli
outsl
and
lret
aam
sbb
push
shll
jp
stc
les
or
cmpsb
dec
jl
cltd
push
lea
mov
and
push
push
push
adc
repnz
pop
lret
or
mov
mov
popa
dec
das
xchg
or
stos
mov
push
pop
cli
jg
fsts
fwait
jns
jmp
push
js
sub
std
out
addr16
icebp
push
insl
xor
xor
pop
ds
in
xor
inc
inc
cmp
cwtl
jmp
cmpl
and
test
sbb
mov
leave
js
pop
test
xor
or
lret
pop
imul
xor
pop
fistps
mov
sbbl
and
div
mov
pmaddwd
lock
aaa
push
xchg
xor
arpl
mov
and
dec
out
inc
les
test
fwait
mov
out
sub
jns
cmp
pop
into
dec
push
cmp
mov
mov
cmpsl
test
fcmovb
inc
ja
jnp
push
sbb
movsl
divb
enter
jno
adc
xchg
pop
xchg
add
aas
loopne
add
imul
mov
mov
cmc
cmp
gs
jb
cmp
xchg
inc
xchg
xchg
cmp
lock
mov
stos
aaa
jl
mov
fists
fcmovbe
xor
data16
ljmp
int3
jp
in
out
je
mov
mov
or
cmc
out
jle
ss
pop
xor
sbb
in
add
inc
or
xlat
jle
mov
adc
mov
mov
xor
insl
ljmp
mov
sbb
in
mov
in
or
or
pop
xor
jg
xor
xchg
test
call
in
cli
or
pop
daa
jecxz
xchg
in
adc
mov
inc
fistps
dec
loope
dec
xchg
cli
stc
xor
sbb
in
mov
push
leave
lret
or
cmpsl
fcoms
jbe
repnz
out
sub
adc
xchg
jns
xchg
faddl
xchg
push
mov
lret
jne
and
or
push
sbb
cmpsl
xor
inc
and
cli
int3
pusha
jge
inc
movsl
sub
enter
stc
push
sub
outsl
leave
inc
divl
das
xor
fiadds
mov
sti
mov
jecxz
and
arpl
xchg
cmp
and
push
out
jl
into
lock
mov
movsl
cmp
idivb
std
add
xchg
mov
cmp
jne
or
mov
xchg
sbb
inc
adc
movsb
cmp
xor
jp
add
ja
inc
pop
add
pop
xchg
dec
pop
enter
bound
in
int3
cmc
into
es
or
adc
fbld
xor
xchg
xchg
aad
add
jp
inc
push
scas
push
addr16
push
pop
cmp
rolb
lock
adc
sarl
lods
lods
sbbl
dec
pop
daa
cmpsb
dec
shlb
fisttps
adc
movsl
pop
lret
sahf
into
pop
ficoms
push
xchg
or
pusha
lods
jge
add
mov
xchg
das
roll
ja
in
push
jmp
test
addr16
data16
xor
dec
inc
movsb
pop
sbb
xchg
add
cld
mov
lahf
lock
adc
jne
out
outsl
pop
not
pop
mov
dec
add
jns
cli
xor
sbb
push
jno
aad
lds
cwtd
push
add
ds
and
cmp
in
xor
imul
repz
push
int
std
in
imul
into
das
push
push
fistl
cmp
xchg
in
rclb
cli
cltd
gs
cmp
add
or
xchg
sub
in
mov
sarb
dec
push
sbb
pop
loopne
and
and
enter
push
fnstsw
xchg
and
into
movsl
orl
pop
adc
adc
in
or
dec
int3
je
repz
imul
mov
push
mov
dec
outsl
out
fisubrl
std
mov
mov
xchg
push
and
sub
subl
enter
cmc
add
aas
loopne
add
or
ss
divb
je
inc
lahf
lods
adc
and
xor
ss
sar
mov
sub
push
pop
movsl
xor
cmp
push
xchg
jmp
iret
sub
push
out
and
ja
fwait
mov
jmp
xchg
imul
cmpsl
aam
pop
notb
adc
popa
cwtl
push
xchg
push
push
or
dec
fsts
push
mov
sub
or
xor
sbb
pop
int3
mov
pop
push
push
or
push
cltd
or
insl
sbb
ljmp
mov
pop
push
xchg
cmp
lods
and
aaa
add
addr16
loopne
dec
repnz
stc
in
cmpsl
dec
and
daa
inc
or
shl
xchg
push
cmpsl
xchg
enter
add
in
sub
test
adc
xor
push
add
sbb
adc
test
insl
int3
pop
out
sub
cwtl
push
test
addl
mov
mov
repz
lahf
cmp
ss
aaa
add
push
cmpsb
out
mov
and
cli
mov
cmpsl
testb
sub
test
loope
mov
sub
pop
fs
cmp
mov
xor
dec
jle
sahf
dec
jmp
ljmp
orl
xchg
push
jle
int3
pop
or
imul
lret
add
add
push
pop
test
test
fisubl
ror
pop
cmpsl
dec
mov
cmp
sub
cmpsb
shlb
add
dec
adc
imul
out
aam
arpl
loope
lock
imul
arpl
xchg
or
sbb
aas
hlt
aas
push
insl
sbb
inc
test
inc
sub
or
xor
fs
pushf
push
dec
icebp
xchg
lods
add
inc
dec
mov
ljmp
sahf
mov
and
lea
shrl
push
lcall
addr16
xchg
mov
adc
cmp
addr16
ljmp
imul
xlat
push
popa
xchg
cmp
bound
sbb
xor
xchg
push
cld
incl
aam
dec
mov
js
addr16
cmc
dec
and
leave
push
enter
xchg
fs
imul
push
cs
fs
push
cwtl
dec
loope
lcall
push
cmp
cmp
shr
ss
adc
nop
inc
test
sbb
push
push
enter
inc
in
popf
dec
mov
xor
inc
flds
cmp
rcl
jns
ret
push
xchg
enter
sub
scas
pop
gs
adc
mov
mov
cmp
mov
aad
xchg
gs
push
xchg
inc
mov
dec
jnp
sbb
xchg
xchg
mov
xchg
jb
pusha
pop
xchg
mov
cmp
aam
mov
xchg
sub
xlat
ljmp
aas
lods
sti
dec
push
xchg
bound
mov
and
in
mull
call
and
cmp
imul
cmp
pushf
enter
mov
or
push
mov
fs
sub
lret
mov
jge
sbb
xchg
adc
loope
test
sbb
inc
pop
mov
adc
mov
es
ss
inc
fnstsw
xor
adcb
dec
fstpl
jle
jmp
pusha
mov
outsl
js
in
aad
jecxz
or
sbb
frstor
jmp
in
push
inc
call
dec
call
popa
sub
addr16
test
pop
jle
int3
cs
loopne
mul
mov
jecxz
ja
push
adc
inc
dec
test
fcoml
rorb
pop
mov
test
mov
jnp
scas
pop
or
sar
hlt
jecxz,pt
fwait
cli
push
lea
les
ficoms
mov
outsl
mov
sub
cmovs
ljmp
movsl
lds
popa
movsb
jb
lock
push
fisttpl
or
pop
xchg
pushf
xchg
imul
lret
mov
pop
or
pop
pop
push
out
push
push
sub
and
fsubrs
sub
dec
rorl
push
push
xor
sbb
pushf
clc
sub
stos
in
push
test
divl
jo
nop
punpckhbw
fwait
testb
cmpsb
sbb
flds
outsl
aas
lds
adc
jmp
cli
xor
pop
inc
ficomps
aaa
repnz
lret
inc
mov
cvtps2pd
lods
dec
cmp
gs
xlat
mov
dec
rorb
inc
xchg
push
or
fdivrl
and
test
fdivrs
outsl
mov
aam
fadds
mov
cmc
and
cmp
pop
mov
addb
stc
dec
xchg
enter
sub
lods
or
shrb
aaa
vpshufd
or
negl
rcll
icebp
pop
mov
ds
dec
cmpsb
movb
int
xchg
pop
xor
cmp
pop
mov
dec
mov
rol
jp
dec
push
pop
aaa
pop
add
adc
xor
pop
mov
jo
dec
clc
out
imul
cmp
adc
into
or
enter
js
push
pushf
out
inc
pushf
jle
or
gs
or
mov
jmp
cmpl
addb
sbb
and
cmc
ljmp
mov
sub
sahf
aam
in
sbb
data16
xchg
test
shl
and
mov
mov
out
pushf
dec
clc
test
imul
xchg
imul
lret
push
mov
fistpl
lahf
scas
xor
mov
movsl
cmp
popa
mov
mov
mov
aaa
jnp
sbb
popf
push
clc
testb
insb
push
xor
outsb
push
sarb
add
inc
call
addr16
dec
mov
dec
test
push
jp
pop
fnstenv
in
or
shrl
fwait
push
mov
outsl
or
icebp
xor
jns
mov
push
add
imul
cmp
test
sub
ds
dec
mov
jo
dec
mov
lock
cmp
idivl
xor
push
cltd
mov
push
inc
mov
in
jmp
adcl
lock
into
pop
popa
push
jns
hlt
xor
lds
dec
xchg
or
and
mov
mov
mov
cs
ret
fwait
scas
or
sub
or
and
jecxz
cmp
fcoml
mov
push
les
test
scas
bound
xchg
shlb
in
ljmp
cmp
or
pop
stc
vpmaxsw
testb
and
stos
es
xchg
and
gs
test
shlb
push
push
mov
jle
loope
cmp
push
inc
mov
inc
outsb
add
push
ds
jmp
push
adc
push
push
push
roll
insl
imul
push
dec
and
lret
pop
movsb
rcrl
arpl
push
xchg
mov
sub
push
aam
out
or
fwait
pop
pop
in
popf
mov
insb
sub
pop
push
or
adcb
mov
push
mov
enter
clc
add
mov
jno
dec
pop
inc
sub
ss
pop
cmpsl
movsl
aam
sub
adc
or
push
dec
mov
add
movl
or
fnstcw
in
shrb
inc
test
stos
cmpsb
and
mov
sub
push
addr16
in
repz
mov
jb
adc
fstps
insb
in
add
push
mov
movsb
test
jne,pt
xchg
fnstenv
int3
sbb
repz
jo
ja
pusha
fldcw
push
or
inc
sbb
hlt
mov
data16
inc
xchg
adc
adc
xchg
adc
mov
adc
dec
xor
fdivrl
sbb
insl
jp
mov
imul
inc
repnz
lcall
in
cltd
add
dec
pop
and
ljmp
cld
and
ljmp
inc
or
add
sub
xchg
outsb
jge
je
cs
rol
lock
add
push
pop
and
cwtl
and
or
lahf
xchg
mov
sbb
dec
lea
or
mov
adc
jle
mov
cmp
mov
jns,pt
xchg
in
sbb
pop
mov
sbb
or
rdseed
xchg
shlb
sbb
pop
jns
fbld
popa
and
mov
xor
cmp
cmp
test
push
sbb
arpl
lret
add
icebp
into
push
lret
cmpsb
pop
adc
xchg
cld
jge
popf
jae
popa
mov
addr16
nop
insb
sahf
xchg
mov
jmp
dec
pop
sub
cmp
cmpsl
xchg
shlb
test
xchg
sub
xchg
mov
sub
push
cmpsb
adc
data16
bound
fwait
xor
cmp
push
adc
mov
cld
xchg
das
out
shll
sbb
sbb
call
and
arpl
sahf
sub
test
popa
or
das
inc
pop
jmp
inc
mov
xchg
fstpl
inc
cmp
popa
fisubs
out
out
mov
mov
cmpl
pop
cmp
cmc
fcomps
xchg
fwait
ss
stos
mov
cmpsb
jnp
movsb
rorb
push
cmpsb
sbb
scas
mov
cld
fiadds
ja
cmc
sub
jns
inc
dec
push
ret
jg
push
scas
addr16
dec
std
adc
adc
sbb
or
or
xchg
push
loop
and
data16
mov
pop
test
ljmp
in
out
dec
faddl
addr16
jmp
enter
loopne
fldln2
xor
lods
mov
mov
adc
mov
adc
daa
fdivp
fidivrs
pop
icebp
clc
and
push
push
mov
clc
jmp
nop
sbb
mov
mov
lea
lods
or
addr16
dec
inc
shll
test
sbb
dec
in
xchg
push
les
adc
push
or
adc
arpl
or
pop
inc
cltd
mov
push
mov
adc
pusha
outsl
in
popf
pop
mov
cli
adc
lock
int
push
dec
inc
push
popa
xlat
push
dec
jmp
iret
in
inc
fnstenv
test
pusha
sub
mov
push
fsubs
out
pop
dec
rcll
dec
xchg
dec
xor
aas
addr16
into
imul
arpl
push
cltd
pop
addr16
cmpsb
add
xchg
js
std
sub
and
scas
mov
mov
mov
cmp
cmpsb
xor
gs
loope
je
nop
lds
test
mov
or
loope
and
inc
fincstp
maxps
mov
dec
cvtdq2ps
pushf
dec
cmpsb
imul
out
pop
roll
adc
xchg
lret
popa
ss
add
push
pushf
data16
movsb
dec
push
add
pop
sbb
popa
movl
pop
xlat
iret
mov
gs
cmp
repz
lret
in
in
loopne
push
push
movsb
cmp
dec
addl
ljmp
pop
jns,pn
outsl
das
mov
jns
jecxz
push
int3
mov
sub
fcomp
and
cmpsb
mov
cmp
jb
insb
mov
push
in
jge
loopne
dec
push
jecxz
mov
mov
jb
test
fs
rolb
fndisi(8087
test
cmpb
test
out
dec
cmpsb
cmc
test
cmp
les
sbbl
cli
jl
inc
add
movsl
rcrl
outsl
in
fsubrl
mov
xchg
fstps
or
xchg
gs
ret
xchg
popfw
adc
dec
mov
cmpsl
lea
inc
inc
add
rorl
adc
mov
lahf
or
push
popa
pop
ret
dec
movsb
test
out
sub
or
cmp
pusha
popf
out
aam
jae
rol
dec
dec
fldl
dec
dec
push
pop
mov
data16
or
pop
sbb
and
in
sub
dec
movsb
shrl
fwait
dec
adc
pop
add
or
push
mov
ret
pop
fistps
fidivs
adc
push
or
cmpsb
and
adc
add
lret
adc
rcrl
jb
pop
cmp
lahf
mov
inc
loop
push
push
dec
aam
adc
xor
lods
xchg
and
gs
loop
lcall
bound
cmpsl
mov
cld
rcl
or
cltd
xchg
dec
dec
stos
sbb
loop
xchg
sbb
test
push
mov
cmp
lods
dec
clc
jb
idivl
or
push
cmpsl
popf
push
mov
jge
mov
or
xor
mov
cmp
stos
push
push
in
test
fsubrl
in
jmp
mull
xor
push
ds
fs
cmpsb
aam
fistpll
cwtl
inc
and
xchg
xor
call
xor
imul
addr16
loope
xchg
or
and
push
sub
aad
movsl
push
push
push
rcr
push
sahf
rcrl
int
in
sub
inc
popa
cmp
cmpsl
pop
xor
daa
pop
mov
bound
stos
les
inc
or
add
popa
sarl
les
jae
dec
pusha
bound
sti
mov
in
lds
jmp
aad
dec
aad
push
lret
xchg
dec
add
movsl
nop
mov
sahf
mov
mul
add
out
adc
leave
push
inc
sbb
jmp
mov
loope
push
pop
imul
data16
push
popf
push
sub
and
es
add
sub
movsl
loop
and
xchg
ljmp
push
test
gs
adc
pop
out
ljmp
fists
ret
imul
sbb
jmp
dec
pop
sar
cmp
enter
lahf
mov
sub
aam
test
sti
js
int
scas
aaa
push
gs
gs
pop
pop
cmpsb
orb
out
js
loop
xchg
pop
popa
les
sbb
gs
inc
xor
scas
inc
jl
stos
mov
pop
or
lods
sbb
shrb
jmp
sbb
xlat
out
inc
pop
or
xchg
jmp
cmp
sub
and
push
inc
inc
cmpsb
xor
push
jo
push
and
ljmp
mov
shrl
sahf
and
pop
sbb
adc
mov
cmpsb
repz
xchg
xor
outsb
test
push
mov
es
loop
int3
out
fs
test
bound
pop
gs
or
into
xchg
in
popa
inc
bound
aad
addr16
cli
in
sti
cli
mov
in
ficompl
pusha
or
popa
push
jg
outsb
xor
outsl
imul
add
repnz
adc
pop
ljmp
mov
movsb
cmpsb
cli
stos
out
mov
or
or
push
pop
int
or
inc
fists
lods
shl
adc
sub
hlt
aad
decb
gs
and
or
xlat
pop
in
xchg
test
jg
stc
xchg
rcrb
sbb
sub
inc
clc
or
lret
pop
cli
lds
sbb
insb
pop
negb
pusha
loope
xor
dec
in
sbb
push
shrb
pop
push
cltd
aam
xor
imul
imul
mov
movsb
pop
or
dec
or
hlt
xchg
jnp
mov
cmp
subb
mov
xor
sahf
cmp
bound
ss
rcl
test
sar
in
bound
fwait
movsb
dec
icebp
lds
mov
int
ss
out
xor
lock
sbb
xchg
xchg
gs
fs
cmp
out
pusha
xchg
dec
cmp
cwtl
mov
gs
cmp
repnz
pop
pop
cmp
xchg
inc
xlat
sbb
mov
or
bound
sbb
mov
or
test
push
aam
movb
mov
jb
mov
arpl
push
pusha
dec
test
or
jge
mov
gs
cli
out
gs
je
jns
hlt
cltd
mov
xchg
xchg
pop
inc
in
ljmp
pop
fimuls
or
lods
xchg
inc
loopne
test
mov
pop
data16
mov
cmp
sahf
fsts
add
mov
lret
scas
in
loop
mov
sbb
xchg
jmp
push
mov
inc
int
sub
sahf
roll
jne
dec
in
cli
imul
inc
sahf
xor
aad
int3
mov
rorl
cli
and
popa
out
or
push
scas
lea
ljmp
and
xchg
shll
jo
ljmp
dec
adc
sbb
in
dec
or
xchg
cmp
loop
xlat
pop
leave
mov
dec
cltd
iret
push
pop
jno
outsl
test
jae
pop
push
inc
mov
mov
sbb
popf
addr16
aam
pusha
in
push
popa
mov
push
insl
or
adc
mov
mov
push
cwtl
push
pop
out
imul
rol
sub
sub
fadds
gs
stos
lretw
scas
inc
xlat
test
or
lds
pop
jmp
or
adc
data16
or
mov
fsub
into
push
fnsave
pop
xchg
test
data16
adc
clc
dec
mov
xchg
arpl
adc
pop
xlat
sbb
pop
mov
push
adc
movsl
add
pop
dec
xor
pop
cmp
jmp
cmp
inc
mov
jmp
cmpsl
lods
xor
mov
in
jg
repnz
rolb
aas
xchg
and
and
sbb
mov
ljmp
addr16
xor
pop
xchg
add
lcall
jne
sahf
lds
cmp
data16
mov
out
push
xor
pop
pop
adc
or
and
and
jge
inc
or
xchg
fcmovu
clc
lcall
inc
mov
sub
hlt
push
push
and
gs
jae
aad
pop
push
pop
jae
mov
jns
cli
sub
mov
push
test
push
mov
dec
push
pop
out
lea
repnz
arpl
inc
bound
or
mov
and
ret
gs
dec
add
xchg
xor
mov
inc
jp
data16
aas
lock
sbb
inc
data16
std
push
sub
call
loop
mov
dec
jbe
dec
and
in
dec
mov
sbb
out
sub
cs
cmpsb
mov
pop
or
push
jmp
mov
dec
je
xor
adc
and
xchg
or
sub
and
or
dec
or
sub
pop
jg
jbe
cmp
inc
or
cld
das
lock
jb
adc
adc
inc
lret
push
lea
pop
jmp
sub
idiv
and
sub
scas
push
cmpsl
es
cmc
roll
icebp
mov
mov
mov
jp
push
jnp
aad
loop
or
adc
lret
in
out
sub
data16
lods
push
in
test
and
outsl
ljmp
inc
addr16
xor
dec
mov
inc
lahf
adc
add
ds
enter
mov
ja
scas
hlt
adc
jmp
les
pop
dec
xor
pop
lahf
push
enter
xchg
in
cmpsl
or
xchg
adc
or
mov
and
xor
dec
inc
mov
mov
mov
sub
pop
sub
push
jns
lods
adc
pusha
scas
mov
xchg
fs
movsl
fmul
push
sti
test
mov
or
mov
cmp
cmp
fsubrs
dec
shrl
addr16
push
inc
fldenv
fs
flds
push
inc
dec
inc
bound
mov
jg
lods
scas
cmpsb
or
pop
pop
cmp
mov
fstpt
bound
push
xlat
dec
add
jmp
sbb
push
jns
out
add
aad
push
push
push
sbb
int
gs
out
and
fwait
movsl
lret
jg
and
dec
imul
addr16
adcb
addr16
cmpsb
mov
cmpsl
adc
xchg
leave
popa
fsubl
lock
sbb
or
jle
notb
int3
cs
adc
aaa
cmp
ljmp
xchg
cmp
gs
or
sahf
dec
add
sbb
stos
push
es
push
test
ds
jmp
out
or
push
insl
outsl
in
adc
push
mov
les
dec
mov
movsl
dec
mov
lahf
js
lock
in
sub
pop
ficoml
mull
enter
imulb
les
fsubs
aad
mov
pop
outsl
into
lahf
repnz
test
fsubrl
mov
add
dec
push
pop
push
mov
test
or
data16
jbe
je
jns
lahf
cmp
jl
out
mov
fistpll
sarl
fsubl
pop
scas
pop
inc
stos
imul
and
adc
jmp
pop
cwtl
mov
push
outsb
adc
lods
or
mov
xlat
push
cwtl
cltd
gs
pop
xchg
or
jg
mov
ret
and
dec
inc
bound
xlat
jp
cmp
xchg
sub
adc
push
mov
push
ljmp
in
fwait
in
push
rcrb
call
push
push
sub
repnz
imul
dec
int
mov
or
fsubrl
stos
stos
fdivrl
outsb
mov
cld
test
fwait
cli
imul
jmp
in
inc
adc
xorb
test
cmpl
int3
pop
ficoms
cli
repnz
test
mov
inc
cltd
cmp
aad
test
test
imul
sub
mov
sti
dec
rcll
in
mov
loopne
in
pop
add
jp
notl
add
andb
pop
pusha
pop
imul
sbb
mov
and
sub
pop
ret
push
xchg
popf
lods
pop
inc
sbb
mov
lds
and
imul
pop
adc
xchg
push
pop
popa
and
and
ds
aam
and
pop
cmp
aas
ljmp
js
imul
jle
or
jp
mov
ret
imul
mov
mov
fdivr
lods
or
jns
adc
fcoms
pop
insb
jecxz
addr16
rolb
push
outsw
and
icebp
mov
xchg
sbb
xchg
sahf
xor
fucomip
adc
addr16
inc
sbb
push
aad
xor
jmp
sub
sub
call
int3
adc
xchg
fldl
loope
ficompl
aam
call
fdiv
mov
js
push
pop
aam
inc
pop
cmp
jae
jecxz
push
mov
lds
mov
add
jno
ljmp
pushf
mov
sub
or
iret
mov
test
xchg
jne
inc
mov
and
int3
pop
bound
dec
cli
movsb
xlat
xchg
pop
xchg
scas
and
cmp
negl
test
sub
push
out
decl
leave
cld
or
aas
add
repnz
xchg
rorl
arpl
stos
pop
ja
mov
loopne
sbb
hlt
leave
adc
and
shl
pop
xchg
movb
lahf
sub
xor
push
inc
pusha
in
pop
imul
pop
int
inc
testl
mov
aad
pushf
bound
push
in
lahf
xor
pop
das
mov
fistpll
negl
or
mov
shrb
daa
shrl
xor
lret
lods
movsl
dec
or
imul
aam
arpl
aas
cmp
imul
mov
mov
push
cmp
push
mov
push
dec
sub
xchg
pop
fcomps
cmc
gs
jle
mov
mov
mov
jmp
jle
push
push
imul
fs
pop
popa
pop
test
and
lock
push
xor
dec
mov
xchg
cwtl
imul
jae
push
jae
into
inc
popf
dec
rcrb
add
es
cmp
push
push
mov
cmp
ret
loope
sbb
test
xor
std
mov
push
jg
lock
jge
push
jno
aam
jbe
mov
jo
icebp
lods
fmuls
xchg
sbb
ljmp
adc
jnp
push
jno
xchg
push
loopne
push
mov
sbb
pusha
adc
mov
sahf
cmp
pop
leave
test
pop
or
jle
adc
push
xlat
push
pop
mov
sub
jnp
movsb
pop
push
es
inc
xor
stos
xor
sbb
xchg
sub
sahf
js
test
pop
sbb
mov
pop
and
add
movb
clc
addr16
popa
push
test
or
jmp
pop
push
mov
push
test
fisubrl
lcall
ja
mov
fsubrs
push
aad
jl
mov
repnz
adc
inc
sub
pop
out
xchg
fwait
js
test
iret
aam
fmul
test
push
add
loop
mov
sbb
out
jnp
mov
ljmp
pop
addr16
sbb
pop
leave
inc
pop
sti
or
push
sub
mov
imul
and
test
add
jge
dec
lods
mov
lret
or
lahf
dec
pop
imul
or
out
dec
push
jmp
sbb
jmp
fucom
fcmovu
imul
push
mov
sahf
neg
iret
inc
jle
xchg
xchg
cmp
lock
lret
shrb
fldenv
sub
out
mov
stos
xor
cmp
divb
jb
mov
pop
movsb
push
xor
mov
icebp
fwait
call
cmp
cmpsl
dec
hlt
or
pop
adc
push
push
xchg
sbb
test
and
mov
xor
push
xor
push
movsb
add
sbb
dec
outsb
fcmovne
and
fildl
jno
cwtl
push
mov
jnp
sub
sbb
clc
mov
outsl
fs
scas
test
movsl
imul
mov
jo
ljmp
stos
and
mov
dec
aas
push
sub
sbb
pushl
mov
jle
sub
leave
insl
pop
aam
nop
adc
xlat
popa
cmp
leave
lret
cmp
adc
or
lret
pusha
jmp
dec
out
xchg
xor
addr16
loope
in
hlt
push
lahf
and
pop
mov
imull
pop
cli
pop
addr16
push
lods
loope
loopne
sbb
xchg
mov
jg
dec
daa
sbb
fcmovnb
push
dec
sub
xchg
das
sub
ret
imul
mov
es
push
and
sahf
inc
adc
test
xor
and
insl
add
movsb
popf
mov
mov
cmpsl
add
gs
inc
sub
or
sbb
cmp
push
call
shr
dec
push
ficomps
sbb
sub
inc
ror
lods
mov
cmp
xchg
push
ss
push
push
out
sub
xorb
sahf
sbb
enter
gs
dec
or
inc
sub
les
xchg
fs
jno
push
xchg
inc
add
sbb
out
xor
rcrb
in
dec
inc
fsubrp
adc
push
frstor
push
fmuls
movsb
xor
push
xlat
jmp
test
loop
mov
pop
sbb
push
sub
lret
lds
xchg
push
fs
out
fcomps
jle
or
cmp
push
fs
pushf
icebp
push
jle
shll
jbe
xchg
sbb
mov
roll
sbb
jo
mov
or
and
cmp
aam
sarl
fcom
dec
iret
scas
gs
mov
cli
or
mov
addr16
mov
inc
bound
xchg
bound
aas
rcl
lds
add
lcall
pop
dec
mov
jg
imul
in
push
dec
repnz
and
pop
or
xchg
dec
adc
sub
dec
shrl
dec
loope
add
inc
sti
pop
pop
sbb
mov
push
cmp
mov
lds
aas
cmpsl
rorl
push
pop
inc
cmpsl
adc
ja
mov
pop
test
mov
or
or
and
mov
fs
push
push
hlt
fstl
cmpsl
mov
flds
xchg
cmp
sti
std
and
push
xor
call
cmp
xor
pusha
aaa
gs
pop
push
in
getsec
inc
call
rclb
adcl
xchg
jge
or
mov
dec
bound
mull
clc
and
cmp
pop
mov
sbb
mov
xchg
shlb
mov
fbstp
jbe
inc
rcrl
rcll
aas
mov
push
dec
loope
push
add
inc
lds
ss
leave
adc
scas
push
xor
aad
pop
xlat
ljmp
cli
fists
dec
pop
rcrb
push
pop
inc
subb
or
dec
dec
lods
gs
lret
lret
mov
lock
push
dec
movsl
idiv
jge
mov
js
or
xchg
fstpl
fisttps
ss
lahf
inc
or
test
fisttps
jg
mov
mov
push
xor
xor
retw
sbb
addr16
pop
stos
testb
inc
cmp
iret
xlat
push
or
bound
popa
ret
scas
pop
js
inc
std
sahf
out
hlt
popa
jns
cmp
dec
and
or
fidivrs
lret
aaa
sub
sbb
cmp
stos
mov
out
imul
mov
out
in
sub
pop
dec
popa
mov
and
dec
add
aad
jge
jecxz
cwtl
sub
pop
ret
push
bound
test
imul
inc
stos
sub
jne
fs
adc
cmp
sub
add
push
fwait
cwtl
pop
jl
pop
inc
mov
mov
pop
add
and
inc
sub
push
dec
sbb
gs
and
xor
popa
jmp
adc
pop
lahf
sbbb
mov
gs
sbb
sub
pop
loope
inc
gs
cmp
into
sarl
in
inc
cmp
lahf
sub
jecxz
lock
push
aas
lock
push
sbb
cli
iret
xor
inc
cmp
push
in
jl
xor
mov
and
inc
call
pop
pop
ss
sub
push
gs
fldenv
fsubs
xor
add
aad
push
lret
pop
pop
imul
and
pop
push
cld
inc
sbb
popf
outsl
jp
sbb
pop
das
mov
loope
inc
lods
sbb
sbb
js
xchg
jecxz
jecxz
int
dec
mov
outsb
mov
lahf
lock
fistpl
rol
arpl
filds
mov
jecxz
in
movsl
aas
adc
fs
data16
nop
xlat
inc
out
lret
jge
inc
lods
push
pop
mov
pop
pop
dec
inc
fildl
lods
pop
loop
mov
dec
fbstp
xchg
or
test
jecxz
clc
shl
inc
pop
rcrb
fwait
imul
ljmp
into
sti
mov
dec
divb
sbb
dec
bound
or
or
movsl
cmpsb
inc
mov
sbb
bound
lock
pop
or
aad
jmp
xchg
push
fwait
lret
cwtl
leave
enter
pop
xor
jbe
test
push
adc
aaa
sti
shlb
into
pop
pop
jge
setne
ljmp
daa
cmp
sbb
inc
cmc
xchg
mov
popa
cmp
lahf
subb
cmp
or
fcoms
inc
js
cmp
test
dec
adc
or
or
sarb
inc
enter
rcrl
and
shl
push
les
push
and
lret
pop
pop
add
and
mov
push
or
cmpsb
pusha
mov
pop
push
daa
sbb
lds
inc
pop
push
iret
or
ret
mov
stc
int
xchg
ja
dec
pop
mov
mov
cmp
popf
cmc
invd
fs
test
mov
test
dec
repz
lahf
xchg
repnz
mov
cmp
fwait
int
jle
in
sar
bound
lds
movsb
mov
int3
stc
addr16
adc
lret
shrl
fldenv
addr16
aaa
arpl
clc
addr16
test
pop
xor
clc
or
ret
aaa
jb
test
fs
adc
and
pop
mov
call
mov
add
pop
push
mov
stc
jo
fstpt
stos
test
es
pop
pop
and
push
sbb
pop
jmp
jecxz
or
out
pop
leave
xchg
or
pop
fwait
popa
dec
cmpsl
negl
jg
mov
stos
arpl
jns
xor
xchg
xchg
or
push
lods
or
fs
push
shll
scas
ret
sub
xchg
xchg
sub
aad
jns
mov
sub
push
imul
sti
sub
lock
fadds
sbb
cmp
xchg
and
imulb
inc
pop
pop
movsl
fs
out
mov
push
sub
add
cmpsl
xlat
or
in
sub
bound
jl
adc
xchg
inc
out
aad
test
sbb
cmpsl
stos
divl
xor
ss
push
xor
pop
inc
aad
fisttpl
mov
cltd
push
dec
mov
pop
dec
and
das
pop
jl
add
adc
push
adc
jl
inc
and
dec
test
into
imul
sahf
lret
dec
imul
popa
push
adc
sbb
pop
push
lret
fs
mov
clc
add
pop
xchg
ret
inc
dec
dec
imul
dec
cli
ret
test
mov
les
addr16
mov
mov
sub
fnstcw
dec
lcall
dec
inc
push
and
insb
mov
sbb
std
cmpsl
and
add
pop
or
testb
fldenv
xchg
xlat
test
lea
push
arpl
hlt
mov
loop
adc
xor
loope
xchg
sahf
das
sbb
cli
and
xor
lahf
dec
mov
addr16
push
cli
enter
xchg
push
and
test
aaa
jg
xchg
loopne
mov
inc
sbb
and
jmp
sub
cli
data16
pop
cld
sbb
mov
lods
add
mov
mov
in
xor
fadds
xchg
lea
mov
pop
push
xchg
xchg
pop
sub
push
mov
jno
shr
dec
pop
arpl
scas
add
push
addr16
lock
popf
inc
pop
mov
inc
cmp
fwait
xor
pop
lea
fstl
pusha
je
outsb
cmp
mov
xchg
lret
in
jmpw
mov
out
push
adc
leave
int3
xlat
add
adc
sbb
in
int
sti
or
or
inc
movsb
pusha
fmul
sbb
ja
sbbl
data16
push
xchg
adc
mov
insb
xor
pop
andb
cmc
ret
dec
sbb
movsl
xchg
cmp
add
or
pop
stos
dec
test
push
pop
jns
dec
add
sbb
dec
scas
stos
stos
shlb
and
outsl
aas
xchg
lds
sbb
popa
cmc
pushf
sbb
lret
push
pop
bound
pop
enter
or
in
out
movsb
push
enter
inc
and
jge
xor
lods
leave
fcomp
or
pop
inc
fists
call
xorl
xchg
or
mov
ret
aad
and
add
jle
addr16
cmpsb
xchg
dec
push
mov
das
pop
aad
pop
stos
stc
xor
fstpt
mov
lret
ficomps
cld
ljmp
mov
jmp
sbb
pop
jo
mov
dec
pop
xchg
sahf
bound
xchg
dec
sub
jbe
adc
movsl
inc
pop
xor
xor
inc
push
dec
pop
std
cmp
pusha
arpl
test
pusha
inc
jne
popa
in
pop
clc
pop
mov
sub
lcall
adc
adc
pop
sub
test
lds
pop
gs
stc
and
imul
mov
sbb
and
mov
popf
mov
dec
add
or
or
cltd
mov
adc
dec
jl
pop
mov
dec
jp
repnz
inc
hlt
jnp
pop
adc
aaa
and
xor
stos
movb
sbb
sbb
jp
sub
pop
cwtl
bound
add
clc
ja
clc
out
loopne
pop
sub
xchg
push
adc
fnstenv
les
mov
loopne
and
les
sub
and
es
dec
xchg
adc
faddp
xor
aad
and
cld
inc
cmpsl
pusha
adc
push
arpl
mov
mov
dec
in
loopne
popa
inc
cmp
mov
adc
in
in
addl
outsl
cmp
push
sub
rorl
sbb
mov
daa
or
pop
lahf
js
jo
sahf
dec
dec
lahf
ja
adc
dec
das
push
addr16
sbb
mov
xchg
mov
push
mov
xor
aad
sub
sub
ds
out
lods
repnz
add
push
pusha
pushf
test
iret
shrb
pop
lret
ret
pusha
fdivs
shld
pop
sub
stc
xchg
pop
xchg
outsl
enter
jbe
sti
sub
arpl
lret
dec
adc
or
dec
mov
int
xor
pop
cmp
addr16
xchg
pop
jle
push
mov
or
adc
xchg
xor
xchg
lahf
jle
je
daa
ss
ret
cwtl
leave
scas
ljmp
mov
arpl
shlb
rcll
xor
sbbb
imul
test
adc
out
enter
inc
daa
cmp
rorb
sub
imul
xor
sar
mov
mov
int3
mov
sbb
ja
je
std
call
rol
inc
ja
cmpl
mov
push
out
dec
adc
cmp
cmp
or
in
ljmp
cmp
mov
mov
dec
sub
cld
sub
out
sub
es
push
int3
jnp
shll
loopne
jle
in
fs
cltd
mov
ljmp
sbb
ficoms
sbb
or
mov
orl
push
movsb
dec
jb
xchg
loopne
xchg
xchg
pop
mov
jp
cmp
xchg
jae
sbb
push
pop
jle
add
andb
xor
jmp
mov
sub
hlt
in
cmp
lret
cmp
je
jne
pop
pop
sarl
inc
xchg
xchg
add
inc
mov
push
or
push
cmp
sbb
ror
mov
xchg
dec
inc
test
or
mov
lea
push
pop
push
test
jne
inc
push
mov
pop
jo
mov
dec
or
int
out
xchg
push
pop
mov
dec
popw
pop
dec
jmp
jge
sbb
loopne
cwtl
outsl
push
dec
mov
xchg
aas
xlat
xor
sbb
lock
mov
inc
sbb
mov
pop
jmp
in
and
in
and
scas
insb
mov
or
imul
push
outsl
test
imul
fwait
add
or
pop
pop
adc
addb
ficoml
fwait
adc
mov
mov
mov
ficoml
push
daa
stc
es
aas
sbb
fistpll
cmpsb
sbb
adcb
sbb
xlat
adc
out
cli
call
arpl
push
inc
fstpl
bound
push
add
pop
clc
sub
add
inc
ret
das
scas
add
out
lea
movsb
into
push
mov
pop
in
mov
pop
sarb
into
mov
sbb
inc
mov
mov
sbb
pop
fs
mov
push
hlt
jmp
es
push
lret
mov
sub
mov
mov
mov
pop
shlb
xchg
rcl
dec
xchg
pop
push
push
and
lret
fsubl
adc
dec
or
inc
scas
aaa
stos
sbb
dec
dec
cltd
cmp
push
insl
pusha
sub
dec
pop
imul
enter
dec
int
outsb
dec
xlat
mov
cmp
imul
cmp
or
push
sahf
inc
pop
addr16
orl
mov
sub
in
es
addr16
enter
aam
popa
mov
out
sub
test
jl
cmp
mov
orb
push
push
inc
aas
sarb
orl
cmp
dec
jge
and
popf
push
mov
mov
ja
or
push
popf
push
push
pop
pop
rorl
das
jo
push
mov
mov
mov
fisttpll
push
data16
push
jmp
inc
sub
hlt
fists
outsl
mov
js
xor
mov
test
stc
inc
inc
push
mov
add
ror
mov
sbb
jb
xchg
mov
shl
arpl
sub
pop
arpl
jne
ret
test
pop
and
sahf
pop
js
push
xor
fcomi
ss
dec
ficoml
pop
cmpsb
dec
xorb
mov
call
out
mov
popf
imul
lock
sarl
data16
addr16
mov
test
testl
push
mov
stos
loop
cld
jmp
int3
cmpsl
call
mov
mov
mov
out
fildll
fwait
mov
movsb
sub
icebp
inc
dec
bound
and
shl
lret
sbb
jns
div
fsubr
push
or
inc
pop
pop
cwtl
out
dec
pop
and
jg
fiaddl
imul
push
cmp
test
popa
push
popa
push
test
in
stos
aaa
sub
loope
jno
jp
jp
js
lods
mov
sti
in
xor
test
stos
cmpsb
leave
mov
jno
jnp
clc
jno
sub
rorl
or
divl
or
jne
mov
push
gs
pop
mov
xor
or
jmp
dec
out
or
pushf
xor
sbb
data16
fadds
jecxz
or
fwait
lods
insl
in
lret
push
adc
sbb
cmpsb
scas
rolb
cs
sub
or
outsl
in
and
shrb
pop
jge
cmp
pop
inc
mov
gs
imul
call
popa
sub
xchg
arpl
dec
jne
stc
push
cmp
outsl
fstp
or
fwait
dec
and
clc
stos
movsb
or
inc
aam
loopne
in
jmp
test
in
mov
inc
pop
repz
jp,pt
fisubrl
inc
into
data16
adc
cmc
mov
mov
inc
mov
inc
cltd
mov
jmp
sub
outsl
fwait
sub
cvttps2pi
cltd
outsw
imul
sub
cmp
stos
lods
jbe
icebp
push
cmp
je
cld
pop
pop
mov
inc
lret
xchg
mov
cmpsl
aaa
movsb
loopne
aad
flds
or
mov
xchg
lret
jne
lea
icebp
ljmp
fiadds
out
pusha
mov
pop
sub
sub
jle
rcrb
mov
lock
push
popa
aam
or
pop
outsb
outsl
testl
push
pushf
pop
frstor
mov
stos
lahf
ss
and
xor
xor
leave
xlat
pusha
aam
sbb
lcall
add
xchg
loope
mov
and
popf
mov
data16
inc
cmp
and
cmp
rclb
cmpsb
std
ja
pop
lea
lds
push
rorb
dec
mov
push
mov
dec
mov
bound
sbb
nop
ret
stos
ret
icebp
inc
sbb
fidivrl
push
loopne
pop
push
add
gs
imul
pop
iret
fs
mov
mov
jae
push
js
data16
arpl
xchg
push
cmpsb
stos
xchg
rorb
call
push
adcb
fldt
es
pop
xchg
xor
dec
ret
ret
xchg
dec
loop
lods
mov
shlb
jg
mov
pop
jns
rcl
push
mov
or
xchg
std
leave
dec
enter
push
pop
xchg
pop
mov
mov
cltd
out
dec
adc
pop
push
out
add
es
cmpsb
pop
push
push
mov
jge
xchg
cld
shld
cmp
lret
pop
aad
push
cltd
rcrl
fs
aas
xchg
mov
rclb
fsts
mov
mov
adc
bound
xor
imul
cmp
cmp
test
pop
pop
pop
xchg
orb
test
les
lahf
cli
sbb
jmp
int
sub
sub
mov
push
lock
cs
push
mov
add
dec
push
fwait
out
or
mov
out
mov
adcb
xchg
mov
xchg
xchg
addr16
ss
pop
xlat
mov
sahf
pop
jmp
cli
leave
arpl
sti
push
sbb
popa
pop
mov
push
stos
or
pusha
pop
jno
push
shlb
in
ljmp
shll
push
pop
stos
or
test
mov
push
cltd
imul
jmp
sub
pop
sbb
sbb
gs
shr
jb
pushl
mov
sub
mov
xlat
outsl
arpl
mov
or
stc
add
xchg
scas
lock
repnz
cmpsl
mov
stos
pop
cmp
sub
xchg
inc
pop
ror
cmpsl
outsl
push
testb
test
mov
sbb
leave
sbb
adc
fwait
fwait
mov
fisubrs
in
and
test
xchg
push
hlt
movb
and
mov
pop
scas
xchg
mov
or
pop
dec
fsts
js
imul
das
addr16
jns
cwtl
addr16
stc
aas
jle
mov
sub
ss
jecxz
pusha
adc
imul
push
xchg
test
jp
into
leave
movsb
pop
xchg
gs
jno
xchg
xor
cli
jmp
cmp
enter
xchg
popa
fwait
jno
jne
push
iretw
pop
fiaddl
fidivs
cmp
in
call
jne
add
sub
push
in
gs
xchg
jg
ss
pop
dec
sub
xchg
jg
lcall
iret
in
das
addr16
pop
arpl
out
rolb
in
call
scas
repz
or
inc
fisttpll
and
aas
int
outsl
push
and
mov
mov
sar
and
out
inc
inc
jle
das
push
inc
or
ss
mov
mov
daa
neg
insl
fnstsw
pop
jle
andl
inc
psubsb
xor
xchg
in
and
push
lcall
push
out
ret
enter
mov
pop
ficompl
add
xchg
cmp
mov
inc
and
and
lret
enter
add
movb
push
lea
clc
out
call
in
jecxz
sub
or
mov
gs
in
pop
xor
repz
ss
aam
xor
adc
das
sub
movsl
inc
call
jg
mov
sysret
outsl
adc
and
cmp
mov
outsl
fxch
fs
and
or
push
push
or
mov
or
xchg
mov
rcr
aad
dec
cltd
push
or
call
xor
hlt
pusha
fcmovu
xchg
addr16
hlt
pop
dec
insl
xchg
push
loope
dec
sahf
add
sub
gs
mov
in
xor
add
ljmp
pop
add
xor
push
stc
rolb
insl
test
cmp
rcrl
fldenv
xlat
and
cld
sub
incl
fwait
push
pop
xchg
push
nop
mov
and
mov
inc
test
adc
jmp
push
dec
inc
push
jmp
sub
fsts
jne
shrl
ret
stos
popa
push
mov
dec
push
push
xchg
ljmp
adc
movb
push
push
cli
pop
je
inc
arpl
test
pop
push
arpl
ja
gs
aas
icebp
rcr
lock
add
fwait
nop
mov
lcallw
pop
gs
pop
pop
lret
cld
or
pop
addr16
lods
push
inc
aas
lods
sbb
pop
mov
insb
cmp
inc
mov
ret
orl
out
lods
pop
pop
js
cmp
jge
aam
dec
push
dec
inc
call
enter
lret
add
dec
xor
cmp
xchg
shrb
dec
mov
xchg
data16
call
test
sbb
fldenv
pop
dec
add
pusha
mov
sbb
pop
mov
mov
mov
gs
cmpsb
xchg
sahf
dec
out
push
and
add
inc
ror
mov
mov
pop
fsts
lods
outsl
adc
and
fadd
or
sarl
test
scas
cs
pop
pop
pop
push
cmp
cli
lds
mov
adc
roll
push
outsl
sub
ljmp
call
movsb
imul
xchg
mov
jmp
sbb
jns
loopne
out
pop
out
xlat
ret
push
mov
push
push
je
stos
jmp
scas
pop
mov
or
mov
aam
stos
scas
or
sub
imul
cmp
repnz
sbb
pop
movsb
movsl
xchg
pop
in
jecxz
fs
sub
pop
mov
dec
dec
push
pop
mov
cmpsb
mov
pop
enter
imul
sub
mov
test
insb
lods
pop
pop
arpl
das
arpl
and
jmp
pop
pop
and
xor
hlt
push
loope
popa
bound
push
test
dec
repnz
sbb
lods
mov
nop
data16
adc
pop
push
cltd
inc
push
inc
mov
and
jle
and
sub
pop
shll
inc
mov
inc
pushf
addr16
gs
inc
mov
or
xor
mov
and
push
fistl
xchg
jle
mov
mov
and
sbb
xor
and
ljmp
mov
push
ljmp
jle
mov
rcrl
gs
dec
xchg
adc
pop
push
or
jo
add
les
ss
push
add
push
lods
fwait
negb
and
aas
adc
sbb
stos
mov
pop
xchg
push
xor
out
mov
dec
pop
dec
dec
stos
inc
cmp
sahf
add
mov
and
dec
mov
fwait
sub
pop
inc
sti
scas
xor
jno
fistl
mov
push
scas
and
imul
icebp
cmpsb
xchg
and
testl
cli
xchg
or
xlat
rol
in
call
mov
sub
xor
pop
imul
xchg
pushf
and
pop
push
loop
loope
out
stos
in
gs
scas
xchg
sub
popa
pop
cwtl
fcomps
push
aam
dec
das
out
ljmp
test
jl
mov
lret
aam
test
cli
push
xlat
xor
pop
cmpsl
xchg
jge
repnz
int
add
aad
and
rcll
int3
lahf
in
outsb
and
adc
xor
sbb
lret
sbb
cwtl
xchg
test
mov
dec
sub
jbe
call
cmp
clc
sub
fs
sbb
push
aam
dec
jg
or
cmc
in
cmp
xchg
mov
mov
sub
fs
pop
mov
xchg
push
xchg
mov
cmpl
enter
or
insb
xor
cli
popa
jmp
and
push
or
loopne
test
loopne
inc
dec
clc
inc
imul
imul
add
sub
lretw
jg
pop
mov
pop
inc
push
or
jbe
pop
and
xchg
sub
push
movsl
xchg
and
fldcw
mov
adc
or
and
bound
test
pop
inc
push
leave
jnp
mov
add
js
aam
and
push
outsl
sbb
inc
dec
push
push
cmp
sbb
ret
lcall
cmc
in
adc
push
pop
std
hlt
lea
sub
sub
lea
sub
aas
stos
les
mov
pop
xor
test
adc
jg
jl
test
cmpsb
jo
jle
add
lods
mov
sub
xor
adc
in
or
cmp
ljmp
aam
sub
data16
pop
fdivrp
jns
pop
cmpsl
mov
gs
lea
ds
xchg
sbb
and
sub
popf
addr16
test
adc
sub
jp
add
das
push
loopne
pusha
push
lahf
add
mov
xchg
fstps
fisttpl
sahf
adc
outsb
out
push
mov
addr16
dec
push
sub
sbb
fyl2xp1
mov
insb
arpl
adc
rolb
cmpsb
lock
pop
cwtl
fisubrl
mov
push
mov
sub
js
cmp
movsb
jns
ret
push
inc
push
mov
mov
mov
xor
fidivrl
hlt
shrl
dec
jae
push
pop
pusha
or
pop
ss
inc
fstps
push
cmp
out
lahf
jge
aas
cmp
mov
inc
pop
arpl
shrl
insb
loope
cli
imul
sub
sbb
rol
sbb
jno
mov
push
pusha
cmp
or
sub
or
mov
rorl
stos
leave
sbb
xchg
fidivl
fnstenv
rcl
sti
or
pop
push
hlt
xchg
arpl
and
sub
or
sbb
adc
inc
mov
lds
clc
pop
cwtl
das
dec
pop
inc
add
adc
fidivrl
dec
aam
pusha
push
push
aad
fnstsw
add
cltd
cmp
loop
rcll
lods
cld
ud1
lock
pop
mov
dec
xor
fs
xlat
sub
roll
push
sbb
push
mov
cld
cmpsb
loopne
sbb
mov
jo
aam
pop
push
popf
dec
pushf
shll
cltd
dec
xchg
into
sbb
pop
bound
or
xlat
arpl
fidivl
dec
sub
imul
arpl
or
push
rorb
sbb
mov
stos
inc
inc
pop
push
sub
mov
rcrl
movsl
mov
or
out
sahf
mov
push
movsb
sahf
movsl
push
sbb
mov
inc
dec
push
add
pop
mov
mov
std
stc
movsb
pop
adc
pop
aas
pop
fs
shlb
push
mov
cwtl
jnp
bound
xor
sbb
fnstenv
lahf
add
xchg
fxch
pusha
cmpsl
mov
enter
cmp
xchg
xchg
lahf
mov
imul
stos
mov
cmpsl
fwait
cmp
out
gs
mov
jp
mov
ds
jnp
fdivrs
dec
xchg
push
lret
fs
hlt
pop
lahf
jmp
cmpsb
popa
pop
push
or
push
dec
jp
and
test
daa
xchg
pop
addr16
jge
add
push
xchg
jbe
sbb
adcb
mov
es
mov
in
mov
scas
popa
mov
push
loop
jl
repz
jne
call
rcll
cmpsl
or
cmp
xchg
scas
sub
cmpsb
sarl
fwait
js
and
lods
rorb
add
pop
jge
popa
pusha
shll
lods
mov
pop
jmp
push
shlb
xchg
ljmp
sbb
adc
bound
rcr
cmpsl
push
pop
xchg
sbb
ds
jl
xchg
mov
je
and
out
das
or
or
test
outsl
and
in
fcomp
inc
jne
or
movsb
push
dec
sbb
sbb
pop
inc
or
int3
cwtl
inc
out
or
in
loope
das
xchg
enter
aam
xor
add
popf
inc
and
movsl
and
std
scas
lods
inc
pop
ljmp
cs
rorl
jle
push
and
pop
pushw
in
loope
adc
dec
push
xchg
dec
or
dec
movsb
icebp
pop
daa
mov
cmpsb
les
push
lea
imul
pop
in
call
hlt
push
xchg
lea
cltd
xor
push
inc
push
and
stc
push
push
cmpsb
inc
addb
xchg
nop
dec
xchg
and
dec
xchg
lods
mov
sarl
pop
out
dec
mov
in
xchg
xchg
mov
xchg
push
push
cmp
call
es
fcom
repnz
lea
test
mov
sti
mov
xor
pop
jp
pusha
lret
xchg
outsb
push
cmp
mov
xchg
arpl
in
push
push
iret
jge
fistpll
xchg
inc
cltd
in
lahf
lods
stos
sbb
pop
xor
dec
mov
ja
aam
call
push
cltd
xlat
pop
mov
test
push
test
push
lahf
mov
mov
gs
mov
pop
and
push
or
push
and
imul
lahf
push
outsb
int
pop
jmp
adcl
test
push
cmp
sub
imul
pop
inc
inc
nop
jg
movsb
xchg
movsl
orl
cmp
out
cmp
add
call
es
dec
outsl
jbe
inc
sub
lea
scas
loopne
pop
lret
jbe
jbe
imulb
push
stos
shlb
dec
pop
mov
nop
pop
push
lds
pop
cmp
inc
pusha
imul
push
inc
sti
mov
lret
les
jbe
add
scas
cmc
mov
xchg
cld
loope
mov
add
xor
xor
pusha
inc
aas
inc
rcll
mov
xor
add
pop
lret
leave
cmp
fwait
xor
lahf
outsb
push
sahf
jno
ljmp
dec
push
gs
test
int
popf
fisttps
bound
shlb
les
pusha
aam
addr16
lods
jl
cmp
mov
bound
aad
stc
int3
stos
xchg
fistl
pop
movsb
pop
aam
cmp
loopne
cs
xor
faddl
adc
push
in
push
daa
push
dec
ret
add
inc
pop
mov
xchg
jb
add
or
aam
into
daa
lahf
insb
or
xor
jl
inc
mov
cli
dec
sbb
sub
push
jecxz
cli
stos
jo
sub
mov
scas
lock
fisubrs
mov
xchg
pop
pop
aad
push
push
stos
xlat
fucomp
daa
test
enter
or
xor
rcr
cmpsl
push
in
test
and
lock
lods
shll
pop
je
mov
int
push
int3
xchg
xchg
fistpl
push
inc
aam
adc
push
pop
test
or
mov
and
int3
xchg
lret
adc
test
les
outsl
int
cli
pop
jl
rorl
mov
push
fmuls
sbb
rclb
push
ds
movsb
cmpsb
gs
data16
pop
rorl
jecxz
add
sub
and
dec
pop
or
in
mov
imul
mov
outsl
and
dec
cwtl
mov
jg
lea
push
mov
dec
int3
push
shll
adc
dec
int3
push
or
ret
dec
pop
int
or
inc
pop
pusha
outsl
push
aam
push
data16
lds
jl
adc
sbb
push
push
das
mov
test
jmp
xor
lods
push
push
sar
or
stos
in
in
stos
sub
gs
sahf
in
fs
dec
enter
clc
frstor
lock
dec
push
ljmp
test
stos
fs
imul
cmpsl
loope
or
pop
cli
pop
int3
mov
outsb
ss
fwait
xchg
popa
jle
imul
lock
or
daa
add
sub
jb
lock
sbb
mov
pushf
rorl
or
outsl
adc
jmp
in
aam
jno
inc
push
cld
ljmp
dec
cmpsb
or
out
push
loop
fiadds
xchg
ss
mov
cli
lret
push
movsl
dec
jnp
or
dec
es
enter
and
dec
jo
xor
xor
das
or
data16
outsb
or
push
imul
dec
je
cmc
cmpsl
mov
pop
jl
lds
fadds
inc
out
xchg
adc
retw
pop
jl
pop
loopne
dec
mov
pop
jp
jle
push
dec
cmpsl
pop
scas
cld
xor
push
pop
dec
jns
mov
imul
inc
jb
mov
xlat
shll
js
stc
loopne
data16
outsl
mov
data16
in
jecxz
inc
xor
shr
pop
ja
push
std
or
mov
add
sbb
xchg
and
inc
lods
test
aaa
push
pop
and
or
imul
pop
das
inc
xlat
pop
inc
cmp
xchg
mov
int
movb
push
mov
xor
sti
mov
or
addr16
iret
add
mov
inc
xor
or
enter
in
xor
lahf
xor
mov
pop
scas
hlt
xchg
imul
add
arpl
cmp
push
mov
xchg
lods
outsl
adc
pop
xchg
mov
movsl
dec
push
jmp
aam
loop
pop
cmpsb
sub
mov
mov
lahf
jb
fcoml
adc
lcall
fbld
or
dec
pop
xor
lds
stos
sbb
bound
push
pusha
inc
sbb
sbb
cwtl
push
imul
movsb
cli
bnd
cs
pop
pusha
ds
mov
lret
cmp
sti
inc
popa
addr16
test
jmp
dec
xor
or
ljmp
push
pop
push
orb
mov
scas
cmp
je
inc
mov
or
pusha
add
icebp
inc
cmc
aad
mov
push
xor
mulb
popa
testl
cmp
mov
dec
mov
pop
mov
pop
and
cs
pop
in
movsl
out
sar
pop
in
lods
out
jecxz
cmp
push
inc
mov
pushl
pop
das
out
clc
mov
imul
clc
pop
and
pop
sub
sub
xchg
mov
daa
add
gs
fs
and
lahf
gs
mov
inc
push
out
and
push
scas
cwtl
out
outsl
and
add
stos
pop
pop
test
lahf
push
sti
out
mov
pop
mov
adc
xor
in
test
pop
fsubs
daa
xlat
mov
cmp
fstpt
ljmp
aam
iret
pop
mov
cmp
or
dec
call
out
cmpsb
jle
dec
sbb
pusha
jno
xlat
sub
pop
js
lock
pop
mov
dec
out
push
in
in
push
outsb
fdivl
dec
xchg
bound
test
popa
mov
ds
xchg
ds
outsb
pop
push
bound
es
ds
cmp
fs
arpl
out
imul
xor
loope
pop
daa
test
sbb
jns
inc
in
jnp
inc
clc
or
lds
lods
test
pop
adc
adc
test
arpl
in
xor
cmp
hlt
enter
and
adc
fisubl
fwait
js
test
pop
aas
cmp
in
xchg
and
scas
or
loope
int3
out
es
stos
or
add
pop
out
lds
jne
sub
adc
push
aaa
ljmp
and
ljmp
pop
sbbl
test
or
adc
ret
jb
fsubp
lds
mov
mov
fs
rcrb
fs
sbb
ja
test
lahf
int
in
jge
add
bound
pop
xchg
out
es
frstors
gs
arpl
fwait
pop
into
and
sbb
sbb
push
pop
enter
mov
inc
inc
rcrl
arpl
mov
sbb
scas
cmpsb
dec
roll
popf
mov
jg
repnz
push
push
xchg
bound
int3
adc
sbb
insl
push
mov
test
test
mov
test
dec
cmp
stos
pop
jb
jae
and
in
and
sub
fistps
and
push
and
push
in
inc
xlat
add
xor
sbb
ljmp
add
addl
jg
pop
imul
test
cmp
out
cmp
sbb
ljmp
push
movsl
int
int
xor
mov
mov
push
push
movsl
mov
das
imul
jnp
repz
lds
loop
std
popa
push
push
out
pop
sub
lods
mov
aaa
aad
faddp
add
out
dec
popa
xchg
dec
push
fldenv
ljmp
pop
mov
mov
sbb
in
xchg
and
pop
mov
idivl
sbbl
inc
inc
gs
and
test
fildll
test
fcmovnbe
sub
pop
pusha
jne
add
lahf
cmp
push
stos
cmpsl
and
subb
and
test
and
test
adc
ljmp
push
fbstp
jno
es
stos
pop
test
cmpsb
dec
lods
cltd
lds
in
ja
movsb
inc
adc
adc
stos
ret
loopne
in
test
stos
xchg
cmc
push
mov
or
add
sahf
in
scas
push
mov
cmp
gs
loope
sahf
hlt
xor
aad
add
add
andl
cwtl
pop
cmp
mov
rcll
bound
nop
inc
pusha
lds
repz
adcb
push
in
cwtl
lds
je
imul
test
scas
xchg
jl
stc
pop
or
fucomip
cmp
dec
inc
arpl
add
rclb
imul
push
daa
sbb
andl
mov
push
push
push
dec
fisubrs
and
cmc
add
xchg
add
xor
mov
bound
cmp
inc
mov
in
or
push
sub
sbb
shrb
in
sti
data16
leave
jbe
popa
icebp
cs
nop
cmc
cmp
stos
mov
cmp
xchg
pop
or
pop
enter
hlt
fisubs
ja
lret
sbb
jne
jno
cltd
test
mov
or
xchg
popf
sti
hlt
mov
pop
call
insl
or
aas
inc
xor
cmp
mov
pop
xchg
dec
inc
rol
dec
test
scas
pop
imul
xlat
test
pop
loope
adc
push
bound
fwait
call
lock
inc
mov
cs
inc
inc
and
dec
mov
pop
or
add
pop
fcom
push
xor
mov
or
in
mov
cltd
xchg
mov
je
xor
mov
push
ret
mov
cmpsb
push
inc
loope
xlat
loopne
es
sub
inc
sbb
std
mov
xchg
or
sbb
mov
rclb
push
xchg
dec
cmp
lret
jo
xchg
les
pop
cmpsl
or
int3
mov
adc
cmpsl
cmp
push
sub
sbb
cli
scas
js
mov
push
xor
pop
mov
imul
cmpsb
sbb
lods
sub
mov
pop
xlat
cmp
xrelease
or
mov
pop
lret
cld
pop
or
int
adc
push
andb
or
lods
movsl
lcall
cmpsb
sub
movb
lahf
cmp
mov
jbe
xor
int3
push
push
add
push
jl
xor
inc
lds
outsl
xor
insb
cwtl
mov
pop
mov
push
push
stos
adc
popa
lea
cmc
push
inc
pop
cmc
xor
cmpsb
out
clc
dec
pop
sub
xchg
add
aas
fcmovnbe
es
out
jne
jno
mov
lock
addr16
or
dec
ljmp
inc
mov
aas
or
or
inc
inc
xor
cli
imul
call
push
inc
jnp
jecxz
in
pop
xor
cli
jno
mov
jmp
jmp
xchg
xchg
aam
iret
xchg
in
or
fucom
pusha
or
xor
loope
mov
test
xchg
xor
gs
push
icebp
xor
mov
xor
or
lea
mov
pop
and
in
mov
pushf
addr16
push
mov
mov
out
cltd
mov
sub
popa
out
out
pop
loope
lret
cwtd
stc
dec
sub
test
in
dec
mov
pop
mov
add
jo
inc
dec
dec
or
std
mov
mov
or
in
cmp
pop
imulb
scas
push
leave
sbb
dec
sub
in
imulb
std
dec
add
sti
in
dec
xchg
mov
rcll
or
and
outsl
cmpsl
xchg
testl
jecxz
cli
or
fsubl
lahf
neg
mov
jle
mov
and
mov
divb
cmp
cmp
xchg
lahf
insb
xor
scas
mov
bound
jne
imull
push
adc
ss
cmpsl
mov
cmp
cmp
fwait
mov
jns
cmp
lret
in
cmpsb
and
pop
bound
mov
icebp
inc
push
xor
adc
sahf
add
fldcw
fwait
sahf
dec
sub
sti
mov
sub
jecxz
addl
push
xchg
addr16
pop
mov
andb
jp
bound
fs
cmp
hlt
insb
add
lea
in
mov
xchg
sub
data16
push
xchg
test
frstor
std
push
xchg
push
pop
call
sub
pop
pop
sbb
sbb
imul
xchg
push
adc
sub
jmp
pop
cmp
jae
pop
aas
push
mov
hlt
insl
lds
mov
and
and
icebp
add
into
pop
icebp
cmp
scas
fisttpll
sbb
out
out
dec
pop
jle
sub
arpl
cmp
lret
push
fstpl
pop
push
cwtl
mov
call
into
xor
adc
dec
int3
in
lcall
sbb
pop
pop
dec
js
sahf
mov
imul
or
imul
bound
cmp
push
inc
add
dec
movsl
dec
sub
adc
cltd
pop
or
push
bound
arpl
sbb
cwtl
lods
test
jmp
rclb
roll
adc
xor
mov
leave
adc
mov
rcll
aam
lret
inc
pop
aaa
fsubs
arpl
cwtl
pop
rcrl
and
and
fnstenv
dec
sbb
jmp
fisubrs
jne
dec
ficompl
outsb
iret
or
jmp
test
shll
sbb
mov
mov
mov
jmp
or
push
and
pop
inc
and
cmpsb
xor
stc
in
test
icebp
dec
lret
into
bound
fisttpll
cmpsb
addr16
xor
test
lods
fwait
mov
aad
lods
push
adc
add
inc
push
push
rcrl
aam
dec
cmpsb
jp
pop
mov
add
sub
dec
mov
addr16
and
or
loopne
inc
lods
pusha
pop
jmp
pusha
pop
push
addr16
xchg
mov
cmpsb
mov
imul
psubsw
iret
test
gs
add
sub
or
jb
scas
adc
popa
lcall
pop
and
dec
lret
addr16
lcall
popf
xor
inc
movl
inc
xchg
push
movsl
cwtl
dec
mov
ja
cwtl
gs
pop
dec
test
push
jmp
cmpsb
push
lahf
lods
frstor
adc
imul
test
test
arpl
or
and
mov
mov
loopne
adc
je
cwtl
pop
jmp
cwtl
or
les
xor
ss
pop
aad
int3
div
dec
pusha
sub
dec
fisttpl
popa
sbb
push
insb
dec
dec
sbb
sbb
add
or
aam
aaa
adc
sbbb
push
sbbl
push
daa
cmp
imul
mov
sub
and
test
movsl
out
dec
pushf
xor
fstpl
repz
lea
call
in
lods
jbe
cmp
jae
mov
scas
cmpsl
jns
call
addr16
push
push
rcll
loope
mov
lret
movsl
shrl
outsl
mov
aas
jb
movsb
add
jle
mov
pop
lea
xchg
push
adc
fs
popa
dec
cli
mov
in
gs
testb
dec
adc
cmpsb
pop
movsl
xchg
clc
bound
std
andl
mov
add
jmp
gs
inc
sar
jb
mov
jne
push
jp
xchg
pop
dec
add
popf
mov
or
and
aas
pop
pop
out
repnz
inc
outsl
push
or
or
fdivp
inc
fcmove
popa
ss
lret
pop
mov
dec
push
ss
jae
pop
fdivs
pop
push
fisubs
popf
lods
fwait
or
pop
pop
mov
jnp
loopne
leave
aad
aas
mov
and
sbb
insb
bound
jmp
and
in
jp
gs
sub
pushf
or
sub
add
sub
sbb
test
data16
dec
sub
out
or
ja
xchg
loop
cwtl
fnstcw
or
lods
mov
lret
movsl
pop
or
sbb
push
lret
insb
lret
or
out
pusha
push
cli
or
push
out
mov
push
or
or
fs
mov
call
sub
mov
dec
push
sub
fcoms
add
jbe
insb
lahf
out
out
call
or
mov
pop
inc
mov
pop
mov
pop
ret
add
pop
push
push
dec
adc
repz
lret
and
xchg
stos
sub
pop
dec
xor
pop
imul
push
xorl
rolb
dec
int
pop
lahf
je
fs
repz
jl
mov
iret
fistps
push
mov
scas
into
test
cmpsb
jle
cmpsb
out
imul
dec
test
pop
mov
sarb
push
and
out
fiaddl
push
int
aam
test
les
and
inc
inc
iret
push
es
mov
cwtl
xchg
rorb
xchg
out
bound
mov
dec
inc
sbb
jmp
sub
icebp
pop
xchg
ja
sub
stc
bound
test
pop
cs
popf
repnz
pop
dec
es
cmpsb
mov
jae
or
cmc
inc
sbbb
shll
das
je
data16
test
into
pop
dec
out
add
jle
sbb
test
jmp
imul
inc
shll
pop
shrb
outsl
mov
inc
es
out
hlt
jecxz
imul
dec
adc
fistpll
adc
push
add
push
and
pop
mov
jo
in
and
js
aad
popa
push
je
sub
xor
out
pop
mull
or
imul
cmp
add
pop
enter
pusha
pop
push
addr16
outsb
cmpsl
sub
rcrl
mov
xchg
xor
jp
setne
out
xlat
out
jmp
push
push
sbb
jmp
dec
mov
imul
mov
aad
dec
add
xor
arpl
jmp
leave
xchg
xor
inc
pop
sbb
sub
repz
inc
pop
mov
fs
fisttpl
jnp
cmpsl
clc
pop
xchg
sub
popa
stos
pop
inc
pop
fs
xchg
data16
les
mov
mov
lds
test
pop
subl
xchg
stc
pop
xchg
lahf
cmp
fistpl
sbb
sbb
adc
aad
sub
mov
std
jmp
fsts
xchg
adc
daa
inc
cltd
push
out
adc
push
test
mov
lods
add
push
xor
mov
xchg
hlt
add
loopne
pushf
sbb
arpl
decb
fwait
cmp
shll
sti
lds
mov
fsubs
dec
inc
sbb
push
lock
les
xor
imul
in
fldl
inc
aad
gs
imul
push
in
mov
pop
mov
push
cmp
fildll
cmp
inc
pop
popf
clc
push
inc
mov
movsl
mov
enter
call
mov
inc
sbb
adcb
jnp
xor
cmc
movsl
addr16
mov
xchg
xor
loope
test
or
inc
jnp
xchg
fildl
mov
adc
xor
fistps
dec
imul
lret
add
std
or
cmp
and
mov
inc
or
push
jns
xchg
and
loop
jl
dec
pop
sahf
jmp
iret
pop
scas
lret
popf
jae
inc
adc
pop
push
sbb
xchg
lret
xchg
fwait
hlt
popa
jne
aas
ja
or
lock
pop
dec
sub
sub
add
push
aas
sbb
add
pop
movsl
icebp
jbe
inc
rcll
out
cltd
dec
mov
subb
xor
push
mov
inc
int3
pop
out
push
popf
lcall
jnp
sbb
fisubl
loop
xchg
push
lock
arpl
jns
lret
push
hlt
or
or
outsl
xchg
mov
or
push
lods
mov
inc
mov
push
addr16
jg
outsl
sbb
push
xor
inc
jle
fwait
insl
stos
loope
adc
pop
inc
jns
mov
mov
imul
fnsave
push
insl
movsb
js
ds
xchg
ljmp
mov
mov
sbbb
in
addr16
in
and
mov
lcall
outsl
add
pop
je
mov
or
cmp
cli
mov
std
jno
cmp
mov
jns
aam
xchg
das
mov
ret
fwait
sarl
fsubs
and
cltd
stos
outsl
xchg
sub
insb
lcall
mull
fcom
fs
pop
shlb
ds
or
sub
xchg
ret
sub
xchg
jns
push
xor
rorb
gs
pop
push
adc
mov
cmp
mov
jns
inc
or
push
xor
and
mov
adc
lods
sub
testl
out
lret
pusha
adc
mov
fimuls
inc
cmp
outsl
inc
adc
in
or
nop
into
mov
pop
push
push
test
push
xchg
sbb
push
sbb
leave
fldl
dec
sub
mov
adc
xchg
stos
jns
push
sahf
jmp
loop
fcmovnb
pop
dec
push
lcall
jnp
push
dec
mov
xchg
dec
insl
cld
daa
pop
dec
sub
pop
loopne
jne
xchg
mov
in
xchg
std
aad
loope
cwtl
jl
push
xchg
mov
or
xchg
mov
xchg
gs
int3
scas
nop
adc
sbb
adc
or
aam
sub
cmp
cmpsl
push
push
add
xchg
lret
inc
dec
dec
add
inc
jns
movsl
inc
cmp
lret
movsl
adc
dec
fmuls
add
addl
cs
in
arpl
pop
mov
pop
sbb
pop
sub
lret
push
movsl
pop
sbb
and
mov
lea
leave
ficoml
das
dec
shrb
and
pop
dec
mov
hlt
lret
in
fnstenv
and
or
int3
or
cld
mov
adc
cmp
mov
push
mov
xor
sti
mov
cmpsl
jp
mov
xchg
or
clc
cmpsb
mov
cwtl
idivb
mov
in
inc
sub
jne
cmpsl
call
jbe
lret
bound
xchg
adc
mov
mov
jp
into
add
xchg
ror
xchg
inc
inc
negb
fidivl
push
shrb
ds
movsl
scas
or
cs
xlat
clc
mov
push
push
xchg
loop
inc
fs
repnz
sub
sbb
and
mov
adc
pop
jae
pop
add
or
test
shrl
adc
mov
or
xchg
mov
movsl
data16
lods
gs
jp
push
or
lret
lock
pop
lret
test
hlt
in
sbb
arpl
xchg
lahf
imulb
addb
or
test
std
int3
rcr
inc
pop
push
clc
gs
mov
dec
lret
movl
sub
pop
data16
and
out
push
mov
std
mov
adc
cmc
sbbl
mov
dec
cmp
sbb
mov
sbb
arpl
xchg
mov
cmp
out
sahf
int3
sbb
jmp
out
rolb
es
mov
rcrb
mov
push
or
cwtl
mull
or
loopne
ret
pop
hlt
jecxz
mov
or
test
inc
sub
sbb
mov
sbb
pop
int3
adc
xchg
jl
push
jnp
and
out
push
pop
dec
mov
sahf
movsl
test
mov
xlat
leave
loopne
xor
xchg
lock
add
data16
dec
pop
or
mov
or
arpl
inc
push
arpl
jge
data16
mov
fstpl
dec
add
rcrl
f2xm1
or
bound
pop
push
icebp
in
pop
stos
jge
roll
icebp
rorb
push
repz
jns
je
fstpt
push
mov
xlat
sbb
inc
lret
cmp
iret
pop
lahf
inc
daa
out
add
int
cli
repnz
test
dec
roll
fcomp
int3
into
aad
popf
xchg
xor
jecxz
pop
lahf
mov
or
fstl
pushf
bound
xchg
repnz
fucompp
adc
pop
les
push
into
pop
pop
sbb
cmp
pop
sbb
or
lret
inc
push
push
ds
adc
cmpsb
ret
cmpsb
outsb
fxtract
and
sbb
sbb
pushf
mov
xor
popa
pop
pop
pop
popa
inc
push
xchg
dec
dec
imul
nop
mov
cmc
test
pop
and
pop
or
xor
fstpl
test
or
add
sub
loopne
add
cltd
pop
xchg
push
jl
scas
jl
dec
sahf
scas
cbtw
xor
jp
cmp
add
std
repnz
stos
cmc
jbe
mov
xchg
movsl
jle
pop
int
push
xchg
and
adc
arpl
xchg
inc
add
ficompl
or
leave
cld
mov
sbbl
cmpsb
enter
pop
jmp
mov
jp
lret
addb
jmp
popf
pop
jo
cmp
pop
fsubp
pop
fbstp
adc
dec
out
gs
sub
mov
outsb
or
pop
addr16
sahf
xchg
xor
mov
xchg
in
adc
mov
mov
sbb
pop
lret
or
sub
dec
or
insb
es
pusha
popf
stos
mov
inc
hlt
add
xchg
push
push
or
and
js
sub
je
cwtl
push
je
cmp
rorb
mov
or
pop
jp
fstps
cld
sbb
xor
pop
xchg
push
adc
aam
insl
cli
roll
push
pop
pop
iret
out
lods
roll
rolb
mov
sbb
pop
cwtl
sub
pop
dec
pusha
add
push
pop
cmpsl
stos
in
sahf
call
xchg
mov
push
cmpsb
sti
int3
adc
mov
pop
fiaddl
jmp
pop
push
int
sbb
pop
imul
call
mov
fisubl
lock
scas
dec
shlb
popa
push
mov
push
fld1
xor
sbb
dec
pop
or
int3
call
insb
sbbb
pop
pop
js
jmp
push
inc
sub
fmull
jo
xchg
sub
call
loopne
mov
mov
inc
mov
push
js
inc
daa
cld
mov
fcmovbe
xor
pop
or
mov
mov
mov
mov
jne
sub
movsb
gs
add
inc
push
addr16
sar
movsl
dec
frstor
xchg
fs
loop
jb
arpl
in
cmpsb
pop
callw
bound
ret
mov
dec
add
cltd
addr16
inc
push
pusha
aad
test
cmp
in
fstpl
adc
jne
test
push
push
shrl
cmpsl
jmp
pusha
xchg
push
jg
add
mov
mov
sbb
push
xlat
sub
lahf
mov
lcall
ljmp
push
std
in
sahf
leave
cli
repz
mov
pop
ljmp
test
gs
sti
sub
push
xchg
stos
mov
jb
popa
gs
cmpsl
adc
insb
nop
lcall
popa
fldenv
cmp
pop
cwtl
pop
inc
iret
movsb
test
adc
imul
inc
pusha
stc
pusha
or
adc
pop
lahf
inc
jbe
jns
rorl
cmp
pop
mov
push
fldenv
adc
dec
loopne
push
push
push
sarb
xchg
stos
pusha
bnd
pop
push
push
fadds
cmpsb
mov
push
es
mov
and
push
ss
dec
or
pop
call
lock
leave
cwtl
in
inc
dec
inc
xlat
sub
bound
dec
ljmp
cmpsb
bound
pop
call
cmp
movsl
push
imul
loop
xor
out
sbb
cmp
test
add
insb
mov
outsb
lods
jge
shl
lret
aad
cmpsl
aaa
data16
sbb
gs
push
xor
dec
or
lcall
ret
xor
shll
mov
xor
aas
dec
lds
push
adc
dec
mov
xor
cli
popa
add
inc
pop
push
loop
dec
jge
or
sbb
jne
fldl
add
sbb
mov
out
and
das
pop
adc
cmp
sahf
inc
repz
in
or
mov
mov
jne
in
arpl
out
bound
arpl
shrl
or
pop
mov
push
pushf
fyl2xp1
jo
pop
xor
iret
aam
jg
pop
iret
dec
cmp
sahf
inc
sub
jns
jg
mov
dec
pop
pop
pusha
fists
pop
push
mov
mov
std
xlat
aaa
xlat
rorl
leave
in
jmp
scas
mov
pop
ljmp
pop
inc
sbb
pop
into
xchg
mov
lods
adcl
xlat
lock
xchg
inc
adcl
mov
dec
sub
pop
pop
bound
xchg
push
or
cmpsb
in
rcll
fbld
cltd
pop
push
push
sbb
popa
fwait
aas
arpl
ja
sbb
pop
jmp
int3
fcompl
inc
mov
cmp
push
inc
call
out
stos
push
inc
shr
test
int3
ljmp
pop
aad
pop
bound
les
in
shr
call
xchg
add
dec
sub
lahf
je
pusha
or
pop
mov
ret
popa
divb
insb
aas
push
dec
pop
add
pop
in
mov
adc
lods
outsl
out
xchg
bound
arpl
and
or
and
in
sar
inc
rclb
aaa
fnstenv
pop
fiaddl
jecxz
movsl
insb
sub
cmc
pop
gs
mov
imul
cmp
mov
xlat
mov
jne
insb
movsb
pop
imul
popa
mov
call
call
lea
jno
jl
mov
std
and
jb
xchg
sub
jbe
xchg
aad
cmpsl
test
mov
and
test
xor
pop
inc
or
pop
jecxz
dec
cmp
loopne
jnp
push
lods
sbb
inc
iret
mov
mov
lahf
cs
push
push
mov
push
dec
arpl
adc
es
adc
testl
and
cmpsb
or
cmp
aas
push
arpl
imul
lds
xor
stos
lods
outsl
stos
push
sti
movsl
mov
scas
ja
frstor
call
lods
es
lea
fisttpll
cld
bound
push
call
cmpsl
sub
es
mov
lcall
or
call
fidivs
div
cli
in
inc
and
ds
cwtl
adc
pop
and
in
pop
push
and
es
adcl
arpl
jecxz
push
push
pop
or
pop
hlt
jb
adc
sbb
call
mov
sbb
xor
push
in
mov
sbb
ffree
xchg
mov
mov
push
inc
mov
xchg
pop
fnsave
test
mov
jb
adc
jnp
sub
xchg
test
pusha
jo
pushf
das
scas
enter
pop
sbb
cwtl
pop
setns
push
addr16
pop
sub
inc
fucompp
mov
stos
call
mov
addr16
and
mov
jb
and
ret
in
aam
stos
testl
push
shll
add
jge
ja
or
ds
fs
inc
fcomps
pop
lds
push
mov
push
add
sbb
sub
rclb
test
int
out
push
call
int
bound
jae
dec
loop
sub
sbb
push
call
inc
inc
xchg
addr16
enter
cltd
stc
lock
int3
filds
sbb
lea
sbb
mov
mov
fs
push
lds
pop
aas
inc
mov
cmp
out
fs
lret
mov
test
and
xchg
enter
or
scas
call
push
or
inc
xor
cmc
sbb
rclb
pop
adc
fbld
frstor
cli
imulb
pop
rcrl
bound
push
jl
imul
rol
and
xor
xchg
sbb
lea
fs
xchg
arpl
sarb
mov
daa
inc
push
add
mov
inc
jg
lock
inc
std
rcrl
data16
gs
sar
lock
inc
shlb
add
sahf
arpl
and
mov
popa
push
bound
enter
sub
gs
inc
movsl
pop
fs
aad
dec
out
dec
sbb
push
xchg
push
rcll
xlat
stos
cmp
adc
and
ja
xchg
add
pop
js
push
xor
sub
jo
rorb
or
es
lcall
jge
insl
ja
pop
test
jp
outsl
movsb
ret
inc
iret
cmpl
call
mov
out
rcl
adc
fsubs
fdivr
sbb
push
insl
inc
dec
add
test
cmp
sti
clc
aam
dec
aad
inc
aam
xor
adc
imul
xor
ss
and
test
or
xor
xchg
loope
shlb
sub
xor
sbb
xor
call
pop
leave
gs
sub
xor
loop
jecxz
pop
xor
sub
xor
ficoml
cmp
and
es
pusha
pop
mov
stos
inc
push
jmp
adc
movb
inc
data16
inc
cmpsb
xchg
test
add
jno
or
jbe
push
lahf
mov
xor
add
push
addr16
lcall
cmpsb
sbb
adc
xor
and
sub
or
push
mov
or
sbb
mov
fs
sbb
in
mov
add
stos
inc
xor
movsb
sub
out
push
xor
out
mov
push
ret
xchg
ja
iret
sub
lcall
loop
pop
or
test
xchg
pop
mov
dec
push
fstpl
jno
pop
cmp
mov
addr16
lahf
ja
ljmp
mov
mov
int3
or
and
push
out
out
fisubrs
lods
not
xchg
add
stos
notl
xchg
scas
lahf
inc
adc
mov
repz
dec
mov
arpl
aas
and
mov
cs
rorb
call
in
or
jecxz
test
and
hlt
shll
inc
call
outsl
hlt
ret
sub
cmp
and
popf
movsl
imul
dec
dec
shll
lahf
addr16
sbb
jae
dec
movsl
repnz
test
xor
mov
data16
inc
pop
push
and
sub
lods
loop
lea
pusha
aam
and
stos
push
in
mov
dec
mov
xchg
mov
push
cmp
xchg
xlat
stos
cmp
pop
lcall
bound
repz
push
lcall
arpl
hlt
push
in
test
pop
dec
imul
loope
rep
inc
mov
or
cmp
xor
mov
inc
sahf
in
cmp
pop
clc
dec
pop
lahf
jno
sbb
call
jg
dec
out
jmp
inc
and
bound
gs
cmp
jp
push
push
push
jne
pop
jno
shrl
lds
xorb
pop
cmp
mov
rep
scas
xchg
gs
push
enter
inc
or
add
or
andb
or
or
movsl
sbbl
lcall
sbb
and
outsl
leave
adc
mov
addr16
xchg
inc
or
push
movsl
xchg
jmp
mov
push
sbb
jg
fdivs
bound
xchg
nop
inc
push
or
stos
cld
pop
push
or
jnp
jecxz
mov
cmp
pop
cmp
mov
pop
push
hlt
mov
and
in
data16
jmp
mov
cs
cwtl
inc
or
xor
shrb
gs
orl
add
cli
pop
ljmp
inc
jle
sbb
ljmp
mov
xor
call
push
mov
adc
pop
popa
push
in
ljmp
sub
fisubl
mov
xchg
inc
pop
cmc
dec
daa
mov
sbb
xor
and
mov
pop
mov
gs
data16
and
leave
out
pop
dec
rcrl
divb
push
cmpsb
xchg
sbb
pop
rep
cmpsb
out
or
pop
jno
pop
push
sub
jmp
loop
imul
repz
jns
mov
jl
pop
adc
cvtdq2ps
imul
and
shr
lret
ror
pop
add
in
enter
mov
retw
mov
scas
addr16
fstl
arpl
popa
movsb
mov
mov
and
pop
fs
lcall
ret
cld
fisubrl
and
movsb
test
std
xchg
and
into
inc
sti
push
cs
insl
imul
hlt
fisubrs
aaa
or
adc
mov
leave
pop
in
mov
in
mov
cli
dec
ljmp
imul
popf
cmp
sbb
jle
adc
and
and
or
mov
mov
adc
aad
push
cmpl
subl
mov
fldenv
inc
adc
bound
mov
sub
popf
pop
in
in
push
xor
sub
insb
push
jnp
pop
scas
dec
adc
rcrl
lods
fstpl
xchg
xchg
arpl
out
push
cmpsl
movsl
mov
push
stos
cli
xchg
dec
sbb
outsl
fldl
je
imul
push
xor
mov
clc
repnz
mov
into
pop
jl
dec
mov
inc
push
aad
idiv
imul
pop
xchg
inc
pop
pop
js
pop
test
fldenv
test
xchg
rcrl
add
out
repz
insb
mov
pusha
dec
push
pop
je
outsl
pop
mov
cli
push
rcr
and
push
stos
add
xor
mov
cs
pop
sahf
or
push
aas
loop
and
dec
xchg
xchg
aaa
or
addr16
fs
mov
push
std
lds
sub
pop
push
js
pop
aam
xchg
repz
lods
sub
push
cltd
jmp
push
sbb
sbb
repz
adc
loopne
push
into
cmpsl
pop
or
daa
sbb
ds
jns
or
sahf
fmuls
sub
or
idivb
push
mull
mov
dec
rcll
lret
xor
lahf
mov
aaa
push
sub
outsb
addr16
dec
push
xchg
orl
les
pop
gs
and
js
test
xchg
jl
cmp
jmp
add
inc
test
push
add
sub
mov
xor
xchg
and
scas
xchg
dec
adc
cmc
clc
bound
push
popw
and
or
cmpsb
out
push
popf
push
mov
jmp
in
or
aad
xor
push
outsb
sarl
push
inc
dec
shrl
push
xor
jecxz
movsl
sub
aas
push
add
push
push
xchg
cmpsb
push
add
dec
aad
xchg
push
push
push
insb
jecxz
movsl
movsl
push
mov
and
imul
sbb
stos
sub
xor
lahf
addr16
clc
movsb
dec
iret
push
sbb
test
pop
push
repz
xchg
inc
inc
imul
mov
je
sub
adc
xor
xor
pop
pop
xor
stos
xchg
fbld
or
movsl
sub
mov
jecxz
rorl
js
add
dec
dec
push
sub
test
pop
ss
shr
insl
imul
pop
ret
call
cltd
pop
adcb
loopne
pop
inc
fcomp
popf
pusha
push
les
ror
push
in
jbe
mov
or
aam
push
test
test
adc
xchg
push
addr16
aas
in
addr16
pop
jmp
out
roll
xchg
inc
cmp
jae
cmp
test
into
hlt
jmp
repnz
lods
mov
or
es
push
mov
push
popa
rorl
push
cwtl
data16
push
mov
xchg
ret
dec
sti
mov
loope
fwait
cs
ljmp
jbe
in
loopne
pusha
jp
mov
imul
jmp
adc
pop
adc
test
aam
data16
or
cwtl
ljmp
mov
push
add
push
in
mov
les
cmpsb
mov
jnp
jge
cld
andb
dec
call
xchg
clc
jle
pop
call
mov
push
ljmp
out
cmp
call
ljmp
cli
xor
mov
or
xor
das
xchg
or
xor
pop
fwait
imul
xor
adc
out
fistpll
pop
loope
dec
pushf
add
xchg
or
mov
adc
mov
xor
pop
data16
shr
push
pop
pop
xor
scas
sahf
jecxz
pop
xchg
lret
fwait
mov
or
imul
int3
out
lahf
cli
jnp
sbb
cmp
jno
cltd
loope
sahf
push
loop
clc
cmpsb
mov
push
fsubl
shl
rcl
iret
gs
or
pop
xchg
loopne
pop
out
pop
cmp
pop
xchg
xchg
mov
stos
xchg
sub
cmp
add
inc
jmp
push
mov
xchg
add
jb
cli
inc
pusha
push
and
push
or
popa
push
aam
jecxz
mov
mov
mov
pop
aam
sub
xor
in
std
push
movsl
add
push
lahf
sahf
das
adc
push
or
push
cmpsl
inc
cli
das
jns
pop
or
jnp
xchg
jne
insl
xor
sub
fistl
mov
cmp
clc
push
or
pop
xor
push
data16
mov
mov
div
cmp
es
mov
in
aaa
push
push
push
push
dec
jb
mov
aad
adc
stos
pop
or
dec
push
rcll
mov
dec
jp
lods
dec
add
push
movsl
gs
xchg
les
push
mov
push
ja
fdivrs
mov
jg
enter
stos
outsb
xchg
adc
lock
push
lahf
outsl
data16
and
dec
push
pop
rcrl
add
lret
mov
dec
push
adc
out
jp
incb
js
js
imul
lahf
out
es
xor
jp
sub
sbb
test
out
mov
sub
jne
subl
xchg
punpckldq
cld
jl
mov
cmp
pushf
imul
in
sub
mov
movsl
in
sbb
mov
mov
dec
dec
sbb
call
clc
cmp
sub
or
dec
xchg
push
xchg
test
gs
push
bound
xor
pop
ljmp
pop
mov
outsl
ljmp
shrl
jmp
jle
mov
dec
mov
xchg
push
outsl
pop
inc
lret
movsl
loop
xchg
or
mov
ja
gs
adc
pop
sahf
lret
pop
popf
pop
push
shll
pop
or
adc
pusha
add
cmc
shrl
jmp
mov
sub
out
cmpsl
dec
mov
call
les
mov
and
push
push
ret
stos
pop
aaa
push
sbb
push
xchg
dec
sbb
push
mov
or
mov
lret
aam
andb
shrb
push
xchg
push
leave
enter
shrb
cmc
fists
xchg
repnz
sub
push
je
popf
pop
mov
add
push
ljmp
xlat
call
dec
packsswb
jmp
or
add
push
mov
jmp
imul
call
push
pop
das
and
scas
aas
lea
or
inc
jle
arpl
mov
out
rcrb
push
adc
mov
ret
je
clc
loopne
int
bound
xchg
andl
imul
pop
fcoms
cmpsl
popa
fcompp
push
push
jmp
fbld
ds
pop
lret
push
or
push
pop
mul
xchg
mov
mov
add
fcomp
pop
inc
ja
xchg
pop
push
pop
push
int3
cli
out
and
in
pop
bound
rorl
test
lock
movb
inc
adc
mov
pop
cmp
or
in
push
mov
je
pop
push
mov
test
push
sbb
aam
inc
pop
sbb
ljmp
out
ljmp
push
scas
jno
cmpsb
or
cwtl
es
add
mov
lods
jg
mov
adc
sub
dec
sbbb
adc
jle
add
pop
into
std
dec
pusha
fstl
rcll
sbb
das
sub
xor
fwait
popa
sub
test
pop
pop
pop
and
xorl
in
xchg
scas
ds
dec
inc
mov
push
mov
call
lret
insl
lcall
pop
pop
dec
dec
and
mov
scas
mov
pop
mov
xlat
pop
or
fldt
cmp
jns
pop
xchg
scas
and
fildll
pop
gs
push
inc
mov
hlt
ja
gs
xor
jns
aam
push
fwait
out
popf
js
pop
push
jp
cs
xchg
adc
xor
sub
lea
jae
xchg
push
mov
lret
insb
xchg
test
shr
dec
xchg
movl
adc
mov
mov
or
and
lahf
mov
push
sarl
sub
bound
iret
bound
aam
iret
mov
popf
arpl
les
xchg
out
sub
xlat
inc
xchg
cmpsb
sbb
mov
fnstsw
stos
ljmp
pusha
stc
stos
mov
xchg
jb
cwtl
shrb
adc
jg
ds
scas
xor
or
jae
or
jno
inc
out
mov
or
xchg
push
hlt
aad
movsb
aad
sub
add
mov
pop
xor
arpl
push
mov
adc
hlt
xor
push
mov
scas
jmp
loop
pop
and
sub
sub
test
pop
test
jle
gs
or
mov
sarb
pop
cwtl
pop
push
dec
stc
sub
inc
push
mov
int3
cmp
push
fstpl
mov
push
jno
jae
mov
int3
push
and
outsl
cmp
lds
cmp
mov
inc
lock
mov
cmpsb
scas
arpl
mov
and
mov
pop
ret
aas
and
imul
and
mov
xor
out
or
mov
arpl
xor
out
pop
aas
imul
dec
rorl
push
add
cmc
outsl
fstpt
xlat
scas
push
dec
cmp
or
fdivrl
xor
leave
lds
mov
pop
fwait
or
lahf
ds
es
pop
sub
mov
sub
pop
push
fdivl
call
insl
push
ss
sub
shll
lods
in
in
in
mov
lret
gs
mov
dec
pop
clc
mov
xchg
sub
pop
xor
out
push
lret
xor
cmp
es
inc
bound
ja
cwtl
aam
test
bound
js
lea
aas
cmpl
dec
pop
iret
inc
in
sub
pop
pop
aaa
in
nop
or
fcoml
push
mov
imul
cmpsl
dec
sbb
adc
outsl
push
movsl
stos
subb
fwait
imul
add
xchg
xchg
adc
pop
xchg
and
sbb
inc
out
andl
adc
jne
ljmp
or
inc
cmp
mov
dec
adc
fildl
andb
pop
mov
lret
or
push
stos
add
mov
repz
mov
sub
mov
sbb
and
xchg
or
push
adc
js
jl
adc
imul
aaa
mov
sbb
into
cli
enter
pop
dec
clc
pop
lret
lds
xor
inc
mov
cwtl
push
fists
jne
cmp
fldl
scas
outsb
push
ret
insb
push
in
arpl
adc
mov
fwait
lods
ljmp
xor
sbb
sbb
add
push
pop
pop
add
xor
addr16
ficoms
mov
ret
mov
dec
dec
repnz
in
sbb
and
iret
shr
cmp
aad
pop
lret
jge
bound
add
fistps
fsubrs
mov
inc
push
mov
pop
aas
sahf
stos
push
movsl
jg
ret
negl
je
sub
sub
fcomps
push
xchg
and
in
sbb
das
in
std
mov
rcrl
shl
xor
sbb
adc
dec
jmp
arpl
stos
inc
rcl
inc
ficoms
loopne
sub
push
jp
ficoms
out
pusha
jge
cmpsb
inc
stc
loope
mov
es
or
cmpsb
gs
iret
or
push
fdivrp
mov
into
xchg
aad
add
pop
sub
xor
adc
fildll
push
aaa
popf
aad
mov
test
aas
and
add
stos
clc
stos
fildl
pop
sti
xor
push
cmpsb
and
fsts
hlt
cmpsl
or
mov
into
adc
mov
jle
shll
lahf
jle
dec
aad
pushf
mov
cs
ljmp
bound
xor
lds
dec
mov
pop
add
insl
ret
push
pop
in
addb
inc
cmpsl
mov
sub
fs
repnz
mov
sub
dec
mov
pop
sub
gs
mov
dec
xlat
sub
or
jno
fwait
out
push
push
lahf
mov
pop
dec
pop
xor
movsl
adc
pop
jl
dec
mov
jbe
add
cmpb
or
stos
xor
xor
inc
mov
sub
push
xchg
push
aas
xchg
data16
inc
nop
aad
xchg
std
imul
test
jecxz
je
into
xor
dec
adc
jecxz
test
push
mov
shr
popa
or
and
ds
imul
push
aam
sbb
xor
and
mov
aam
push
imul
bound
or
daa
xchg
lock
sbb
sbbb
lods
cmp
or
push
mov
jno
cmpsl
xor
ret
xchg
movntq
ss
sub
or
mov
incl
fnstenv
add
cmp
out
sbb
movsb
pop
cltd
jl
pusha
popf
test
lahf
sbb
sbb
addr16
xchg
popf
xlat
sub
inc
cli
cmpsb
out
popf
xor
jle
push
ds
sbb
cmp
add
pop
scas
and
sub
clc
int3
ja
pop
push
in
les
cmc
insb
adc
pop
and
pop
insl
arpl
enter
add
inc
sbb
sbb
int3
push
lahf
push
arpl
pop
addr16
stc
dec
lock
and
loop
cmp
cmp
pop
ljmp
gs
fs
aad
mov
bound
popa
jl
inc
push
and
movd
mov
xchg
notb
dec
pop
test
sar
push
or
mov
pop
sti
pop
ret
and
xor
add
fldenv
lds
and
xchg
adc
movsl
dec
mov
mov
insl
sub
and
or
es
aam
and
stos
pop
stos
sub
sub
jmp
pop
push
pusha
daa
psraw
or
int
stos
mov
insl
add
cmpsl
call
and
imull
lahf
scas
xchg
xchg
dec
pop
push
inc
pop
fldl2e
lds
inc
cmc
add
sbb
cmp
insl
loope
in
call
or
loope
out
add
orb
adc
ljmp
and
fsubrs
xlat
lods
loopne
cmc
fnstsw
sub
pop
push
inc
adcb
mov
adc
cmp
xor
aad
clc
mov
popa
jae
or
xor
dec
adc
les
ja
or
aas
dec
dec
lret
inc
xchg
add
in
sub
rcrb
jmp
dec
nop
xchg
adc
fstpt
xor
pusha
pop
leave
pop
mov
mov
mov
pop
push
xor
fldenv
and
push
int3
dec
lcall
sub
push
sub
aam
aad
or
outsl
xchg
les
sbb
test
mov
jp
leave
push
xchg
xchg
pop
jns
push
ljmp
jns
enter
gs
sbb
push
push
mov
xor
jne
add
outsl
or
xchg
sub
mov
cli
in
out
sub
mov
mov
mov
bound
cmp
jmp
imul
pushw
push
sti
sub
popa
xchg
cli
sbb
pop
ja
push
push
push
mov
push
push
cmp
inc
adc
push
fwait
pop
pop
push
push
cmp
pop
lahf
push
popa
pop
or
lock
pop
stc
dec
cli
or
mov
stos
insb
pop
mov
cmpsl
shl
or
out
cwtl
adc
push
stos
imul
cmp
xchg
imul
gs
mov
xor
in
call
aam
cli
xor
mov
mov
das
movsl
push
jl
jle
xchg
rclb
lahf
fwait
js
ds
sbb
aas
cmp
lds
jge
push
in
mov
in
pusha
xchg
outsl
mov
es
or
pop
push
test
fcoms
jmp
and
adc
stos
jbe
outsl
and
push
inc
pop
addr16
popa
adc
inc
test
inc
ss
cmpsb
fs
call
cld
push
pop
dec
push
ret
scas
imul
push
es
or
mov
lock
and
rcr
aad
mov
and
mov
dec
pusha
inc
repnz
mov
nop
xchg
aaa
negb
outsl
xchg
xchg
add
dec
xchg
iret
or
mov
in
lea
sahf
xchg
jecxz
in
roll
pop
shll
add
mov
bound
loope
ror
add
cmpsb
mov
xchg
in
jge
lret
or
loope
gs
fucomip
aaa
xchg
sub
cs
jns
push
ljmp
call
pop
mov
push
cmp
xchg
cmpsl
testl
jmp
xor
dec
imulb
sbb
stos
int
sbb
pop
mov
ljmp
negb
xor
push
shl
mov
loopne
sub
stos
out
push
cs
popa
jae
loopne
inc
push
cmpsl
mov
add
xorl
xchg
push
mov
sti
dec
inc
push
and
dec
sbb
mov
imul
cmp
pop
clc
pop
pop
mov
jle
jns
fwait
es
dec
je
push
arpl
fcom
pusha
bound
adc
pop
dec
test
call
rorb
or
lret
scas
cmp
fs
inc
and
leave
data16
xchg
adc
inc
sbb
int
data16
roll
pop
xor
sbb
pop
and
fwait
popa
fwait
pop
pop
frstor
xchg
js
dec
roll
dec
mov
jbe
adc
push
inc
xchg
loope,pn
xchg
cmp
lods
xchg
jecxz
popa
in
inc
pop
mov
push
ljmp
pop
sbb
cmpsb
and
stos
stos
xor
les
stc
push
sub
xor
xchg
pop
bound
fcoml
sbb
xor
repz
xchg
push
xor
out
jmp
out
jae
mov
cmp
fisubs
pop
sti
sahf
sub
sbb
cmp
mov
push
fldenv
in
push
fmull
xchg
leave
fisttpl
shl
mov
push
push
inc
pop
sbb
imul
subl
ljmp
out
xor
ljmp
sub
jmp
rcrl
cli
add
mov
arpl
dec
jne
xor
and
mov
and
daa
xor
in
push
push
shll
cli
popf
push
clc
pop
fstpt
xchg
cmp
pop
imul
aad
ja
addr16
inc
dec
push
pop
dec
xchg
lds
lods
mov
push
and
scas
xchg
bound
inc
fsts
or
incl
and
mov
pop
adc
cwtl
roll
push
in
mov
push
fistpll
addr16
push
mov
jb
cwtl
sbb
adc
std
loope
sbb
and
dec
iret
add
movsl
in
xchg
cmpsl
bound
push
scas
jbe
andl
xor
ret
dec
mov
adc
data16
add
sub
dec
addr16
imul
push
jbe
hlt
or
or
mov
icebp
or
xor
and
push
fwait
sub
cli
ss
das
shrb
xor
addr16
in
dec
fs
test
idivl
cmp
push
dec
std
mov
add
std
dec
adc
pop
rolb
mov
and
sub
jge
mov
inc
movsl
fwait
lock
imul
fldt
add
fstps
xchg
push
lock
sti
lret
mov
pop
std
and
aam
shrl
jb
cmp
or
adc
mov
lret
gs
mov
outsb
jge
lds
push
pop
push
cmpsl
fsubs
sub
pop
les
shrl
lahf
mov
cmc
cmpsl
and
pop
mov
mov
shrb
push
mov
sub
sub
xchg
fildll
cs
or
in
xor
jecxz
int
gs
imul
jmp
mov
ss
jle
subb
add
cmpsl
insb
ss
ret
fidivrl
mov
push
test
xchg
mov
inc
test
add
leave
adc
rcrl
cmp
cltd
xor
sbb
jbe
mov
pop
mov
mov
fadds
jmp
sbb
mull
mov
outsb
lods
cmp
mov
or
aam
cmpsb
aad
dec
pushw
popa
jne
imul
fimull
mov
mov
xchg
in
dec
gs
mov
cmp
cmp
out
cld
mov
pop
stos
sbb
and
in
js
mov
mov
xchg
add
aas
stc
movsl
cs
adc
lahf
scas
push
es
aas
addr16
adc
xor
imul
jns
stos
cmpsb
in
jo
sbb
loopne
loopne
and
jno
stos
push
fcmovnbe
pop
and
jns
jae
jne
and
xchg
jl
sub
lds
and
pop
ljmp
ljmp
adc
inc
adc
out
addr16
jg
sbb
repz
jl
add
mov
xor
rorl
sarl
in
fisttpll
dec
clc
dec
push
and
dec
arpl
int
sub
push
outsl
push
hlt
invd
pop
out
std
imul
out
and
pushf
outsl
xchg
jb
or
mov
pop
icebp
pop
cmp
sbb
loopne
mov
jns
jns
and
test
pop
outsl
jecxz
pop
jle
add
pop
mov
or
sbb
push
adc
add
jp
lock
scas
and
push
andl
pop
pop
adc
dec
pop
cltd
jecxz
jns
ljmp
mov
mov
mov
pop
mov
fwait
stos
cmpsb
leave
es
mov
cmp
enter
sub
fstpl
jl
repnz
push
mov
sub
mov
cltd
fs
popl
in
add
mov
and
jns
adc
je
pop
mov
stos
push
pushf
rcrb
outsl
push
inc
add
xchg
popf
gs
bound
test
test
movsb
scas
aad
cmpsl
data16
mov
mov
into
jmp
imul
sub
cli
test
loopne
cmp
and
add
loop
stos
lahf
sbb
addr16
enter
sbb
sub
cmp
add
lock
out
stos
arpl
cmpsb
or
shlb
xor
call
push
mov
sub
mov
cmp
mov
cli
repz
int
xor
cmp
mov
mov
push
data16
addr16
shll
xor
rol
repnz
push
pop
leave
jg
es
pop
test
sub
popf
int3
push
and
add
push
je
mov
cmp
push
test
repz
mov
inc
fwait
or
imul
xor
inc
inc
pop
mov
jnp
sub
push
test
in
fucomi
jmp
cltd
movl
push
les
dec
in
mov
mov
stos
pop
cwtl
insl
pop
pusha
sbb
xor
dec
pusha
mov
std
sub
lret
ljmp
nop
and
sbb
adc
lods
insb
jb
adc
lcall
adc
loope
iret
sub
imul
pop
and
iret
fwait
mov
aaa
arpl
push
sbb
sub
movsb
stos
fwait
outsl
outsl
js
data16
xchg
popa
addr16
outsl
sarb
xchg
jecxz
loop
xchg
fdivrl
mov
xor
icebp
outsl
lcall
fsubr
aaa
cli
sub
pop
cmpb
jmp
sbb
push
inc
push
lahf
cmp
enter
cs
shl
sub
outsl
adc
dec
sbb
call
fsubp
gs
cltd
shll
ret
push
push
test
add
popa
pop
dec
fwait
jmp
dec
enter
pop
push
dec
xor
ret
aam
mov
sar
int3
pop
xor
mov
and
gs
mov
js
mov
mov
pop
mov
lock
push
xor
pop
fwait
jbe
sub
cmp
xchg
pop
out
push
xor
into
popf
xchg
inc
psubw
movsb
test
push
push
gs
xor
addb
mov
stos
pop
cs
dec
sub
xor
repnz
push
and
fucomp
xor
es
out
xor
rolb
clc
pop
hlt
pusha
hlt
cmp
fmuls
adc
dec
dec
or
xor
and
testl
ret
data16
cmp
imul
add
fucomip
cmpsl
mov
mov
xchg
popf
pop
xor
xchg
sub
sub
pop
cmpb
mov
add
das
sbb
xorb
aam
push
out
bound
insb
push
push
sub
dec
test
movsb
movsb
and
cmpsb
fildll
inc
fdivrs
ljmp
xlat
adc
mov
fs
movsl
xor
xchg
and
and
jne
int3
push
or
gs
std
dec
in
add
rclb
mov
xlat
in
dec
out
mov
dec
rorl
call
cli
aam
movsl
xor
shrl
xchg
repz
out
jns
mov
push
daa
mov
ja
outsb
cmpsb
xor
idivb
addl
ficompl
push
fs
leave
xlat
loope
push
imul
jae
and
push
sarb
cmpsb
imul
stos
pop
addb
ret
popa
inc
loope
add
pop
and
pusha
bound
pop
lret
cmpsb
rorl
scas
jp
ss
frstor
cmp
in
inc
dec
bound
pop
dec
dec
mov
test
shlb
mov
ljmp
and
push
jns
int3
pop
ljmp
cmp
popf
jae
sub
pusha
push
in
dec
dec
dec
hlt
pop
bound
cmpsb
add
fwait
push
imul
xor
dec
int3
dec
fisttps
mov
xchg
mov
xchg
push
fwait
jns
outsb
leave
adc
push
xor
es
push
bound
push
cmp
inc
arpl
pop
push
inc
in
popa
push
bound
mov
outsl
gs
or
nop
push
frstor
arpl
enter
sub
pop
xchg
in
sbbl
jl
mov
push
iret
mov
outsl
fcompl
xchg
fildll
adc
mov
xchg
xor
out
outsl
fldcw
call
fsubrs
dec
ss
cmp
xor
in
fadds
ljmp
out
gs
add
outsl
xlat
lods
sbb
test
push
sbb
xor
push
push
cmpsb
cmc
jecxz
push
mov
test
outsl
daa
cmp
cs
push
inc
enter
xor
enter
xchg
mull
es
dec
add
or
mov
dec
rorl
adc
out
sub
in
icebp
addr16
arpl
lea
push
sub
add
push
mov
pushf
cltd
lds
pop
mov
or
into
pop
mov
and
mov
dec
push
popa
xchg
int
cmp
pusha
push
bound
aaa
or
xor
in
hlt
mov
inc
cmp
xchg
arpl
sbb
jns
and
imul
add
cmpsb
jl
retw
jmp
inc
push
add
add
mov
pop
cltd
xor
stc
or
sub
xchg
loop
cmpsb
mov
cmp
dec
cmp
pusha
xchg
fidivrs
and
pop
sbb
dec
dec
sbb
addr16
out
hlt
loope
push
or
popa
dec
in
dec
es
rclb
les
xchg
dec
js
cmpsb
aam
les
lahf
push
jp
jecxz
clc
enter
out
popa
pcmpgtd
pop
add
scas
xor
sbb
dec
cmpsb
es
and
push
xchg
or
scas
xor
popa
enter
jp
test
mov
mov
cmpsl
test
ret
add
jno
push
xchg
cmp
call
mov
sbb
push
rclb
xchg
mov
or
inc
les
push
adcb
imul
mov
cmc
push
cwtl
xchg
adc
pop
cmpsb
filds
push
gs
aas
or
pop
scas
int3
lahf
dec
jl
fbld
notb
enter
lret
or
pop
sub
popf
mov
dec
sbb
mulb
mov
sbb
aam
ret
xchg
into
xchg
xor
xchg
jmp
hlt
test
xor
xchg
aad
sbb
cmp
pop
cmp
xor
loopne
sub
fldl
ret
and
daa
daa
gs
in
or
ret
shlb
notw
lret
or
jns
xchg
es
aaa
inc
cmpsb
mov
xor
ret
pop
add
cmpsb
jb
movsl
daa
cmc
xchg
outsl
loope
pop
xchg
or
xor
daa
rorb
flds
lcall
mov
pusha
int
pusha
rorb
xorl
mov
sbb
loope
cltd
bound
fs
inc
sbb
fwait
cli
or
out
push
cmp
push
ljmp
inc
mov
or
xchg
addr16
pop
test
and
pop
jecxz
pusha
xlat
xchg
ljmp
xor
out
xchg
push
lock
xor
in
sub
pop
mov
imul
mov
rorb
mov
or
lahf
xchg
pop
dec
call
or
fmull
mov
push
lock
mov
cmp
mov
pop
data16
push
push
xchg
js
das
mov
movsb
push
jp
inc
fistpl
ret
stos
push
jns
adc
push
sbb
lock
and
push
mov
daa
test
mov
mov
jg
add
in
push
out
adc
jns
sub
inc
xlat
test
movsl
jae
jns
dec
inc
jp
push
cmpsb
push
cmp
cmpl
loope
cmp
dec
xor
xlat
dec
mov
aaa
jmp
cmp
inc
jne
daa
mov
jne
xchg
jmp
xor
rorb
mov
leave
inc
jb
cmpsb
inc
repnz
push
inc
sub
adc
gs
dec
lods
jle
pop
mov
rclb
ljmp
xchg
push
in
scas
lahf
pushw
in
loope
mov
and
and
mulb
and
insb
aad
xor
push
aad
inc
push
xchg
ss
popf
mov
mov
sub
mov
test
xchg
std
xor
push
push
jg
cmpsl
fmull
loope
fsubs
movsl
sub
and
mov
sbb
cmpsl
or
pop
cmp
pop
xchg
jnp
sub
pop
and
subl
cmp
aad
inc
and
adc
jmp
in
inc
pop
push
orb
fnstcw
push
adc
and
xor
mov
xor
movl
insb
pop
fisubs
jae
xor
lahf
and
fistpl
dec
scas
popa
cmp
jg
and
stos
pop
inc
pop
aaa
test
hlt
es
cmc
mov
in
cli
jmp
mov
and
mov
push
inc
add
push
cmp
sub
sub
or
pop
push
stos
cli
add
mov
shlb
adc
mulb
xrelease
fs
push
or
xor
ret
sbb
push
mov
shlb
cmc
dec
sbb
insl
or
call
fcmovu
xchg
mov
mov
push
sbb
fs
lcall
inc
pushf
xchg
loope
test
stc
jns
push
lock
pop
or
fcoms
in
shl
adc
outsl
dec
cltd
xor
sub
aam
mov
cwtl
sbb
adc
bound
enter
cwtl
leave
push
movsl
das
pop
out
xchg
mov
mov
ret
out
movsl
sbb
int3
pop
arpl
or
inc
mov
and
sbb
lock
push
leave
cmp
and
jnp
xorl
cli
ret
repz
add
scas
xchg
ret
xchg
mov
loopne
hlt
sub
dec
dec
insb
scas
lock
stos
ljmp
push
jnp
or
inc
sbb
testb
clc
movl
pop
rcr
clc
adc
inc
int3
out
push
inc
add
pop
cmc
or
mov
jecxz
mov
mov
fildll
mov
fst
push
sub
test
jmp
lods
sbb
xor
xchg
mov
lods
mov
lods
jns
or
ss
rol
je
test
or
pop
dec
aaa
addr16
shrb
stos
cmpxchg
or
mov
xchg
sub
shl
push
gs
xor
inc
orl
and
jmp
cld
in
mov
add
or
adc
cmp
lock
call
scas
jmp
imul
jle
cs
lods
call
add
pop
out
mov
lret
sahf
push
pop
in
scas
mov
pop
cmp
cmpsl
mov
pop
pop
fsubl
ljmp
and
imul
clc
jmp
test
ret
mov
dec
sub
leave
ja
std
jns
iret
lods
js
adc
push
bound
sti
shlb
cmpsb
push
cmp
sarb
adc
sub
mov
cli
adc
pop
add
loop
and
adc
test
daa
sbb
dec
adcl
js
int3
push
movsb
loope
pop
pop
sbb
cmpsb
xchg
xchg
adc
sub
pop
pop
movsl
pop
pop
ljmp
es
jecxz
lock
push
add
mov
test
gs
add
pop
xchg
sub
cld
cmpsl
push
xchg
mov
mov
arpl
test
push
sbb
iret
cmp
cmpsl
lcall
fadd
je
xchg
popf
inc
pop
pop
shr
mov
loopne
cmp
sub
xor
pop
sub
inc
mov
ret
adc
dec
testb
gs
xchg
sbb
sub
mov
jge
jmp
pop
sub
cs
dec
or
pop
cmp
das
sbb
or
adc
repnz
shll
xor
dec
ja
lahf
push
das
sub
cli
popf
lret
sub
add
aad
notb
dec
push
aam
fisttpll
repnz
xor
or
xorl
mov
xor
xor
pop
jle
adc
cs
inc
sub
dec
xchg
cs
orl
add
sub
ret
jo
rcrl
ljmp
sti
addr16
and
push
xor
fdivrl
push
push
inc
nop
inc
aaa
cmpsl
push
test
fsts
in
outsl
sub
gs
aaa
jo
mov
dec
movsb
xchg
rclb
js
popa
in
sub
mov
call
movsb
push
sub
cltd
into
mov
aam
push
and
pop
inc
sbb
bound
fs
and
adc
aad
rorb
or
sbb
stos
sub
ja
aam
sub
pop
imul
fwait
pop
push
addr16
pop
loopne
vfrczsd
daa
fmuls
push
addr16
dec
ljmp
shll
push
or
je
mov
mov
aas
dec
dec
lret
dec
int3
and
pop
mov
adc
insb
jns
call
dec
into
jae
or
fdivrl
mov
stos
push
dec
mov
push
hlt
filds
ret
sbb
shl
mov
push
ja
jmp
fsubs
mov
int3
sub
sbb
test
push
ljmp
push
push
in
jns
xchg
jp
scas
push
test
add
push
adc
lea
cltd
imul
sbb
push
cmpsb
xchg
popa
and
out
pop
lods
inc
xchg
call
addr16
xchg
jl
fs
ss
arpl
lret
mov
fimull
cmpsb
xchg
aaa
cmp
dec
jmp
outsl
mov
mov
and
push
push
iret
jo
push
bound
sub
popa
rcrb
xchg
mov
test
lock
sub
sbb
in
pop
xchg
or
jae
pop
push
adc
fldenv
test
lds
out
adc
fdivs
dec
push
outsl
jbe
jmp
enter
dec
xor
xchg
fists
and
or
mov
out
incl
push
pop
test
jl
mov
xchg
out
push
or
xchg
movsb
lods
xor
sub
movsl
lods
dec
sub
sub
cmp
cld
cmpsl
out
cmc
jge
int
mov
jmp
adcl
scas
sub
add
in
shll
test
data16
cmp
leave
pop
insb
repnz
fbld
xchg
jne
out
test
jne
dec
push
dec
xor
adc
mov
lods
xchg
popa
xchg
xchg
sti
xchg
xchg
sub
adc
and
cwtl
or
adc
into
imul
inc
pop
in
in
test
imul
or
and
movsl
call
lods
andl
hlt
rcr
sbb
cmp
mov
cmp
rcrb
cmp
fsubr
pop
shll
call
and
push
lea
mov
dec
ljmp
aad
fdivrp
sbb
adc
aaa
sbb
sub
add
test
lods
leave
ret
inc
sub
push
sbb
adc
movsl
cmp
pushf
inc
stc
jge
push
xchg
call
loop
pop
xor
mov
cs
test
or
popf
outsl
fs
jg
movsw
cmpsl
sbb
jnp
mov
or
and
dec
rcr
dec
bnd
pop
cwtl
cmp
cld
push
scas
loope
call
sub
std
dec
xchg
dec
aad
xchg
outsl
adc
sub
mov
gs
and
bound
jnp
movsb
loop
cmp
enter
pop
push
xchg
js
je
hlt
dec
pop
pop
pop
xor
movsb
lock
fstpl
test
cmpsl
adc
lds
mov
aam
add
movsl
clc
pop
mov
push
sbb
out
cmp
or
sbb
jne
scas
shlb
arpl
mov
arpl
jnp
ret
subb
jecxz
outsl
sbb
out
gs
outsl
hlt
scas
mov
cmpsb
loopne
cs
add
cmp
mov
test
out
push
mov
test
addr16
ljmp
and
mov
dec
mov
dec
push
sbb
jle
repnz
addr16
xchg
pop
fs
movsl
or
mov
pusha
or
enter
or
jmp
outsl
xchg
cmp
fldt
addr16
xor
sbb
xchg
xchg
cwtl
addr16
or
out
stos
loopne
inc
or
in
and
cld
data16
mov
in
test
in
or
dec
ljmp
gs
insb
imul
dec
aaa
and
push
add
or
xchg
insb
sub
mov
pop
or
xchg
out
dec
popf
lcall
cmpsl
cmp
sub
pop
mov
test
fsubr
xchg
cwtl
pop
addr16
cmp
aaa
or
pop
sbb
mov
mov
inc
sbb
mov
sub
pop
push
pop
loope
pop
popa
arpl
leave
push
xor
pop
xchg
es
in
fiadds
loope
lock
fiadds
loope
lock
fimuls
pop
xchg
jecxz
sub
out
aad
fisttpll
inc
popa
inc
xchg
or
mov
ret
mov
inc
jmp
mov
pop
dec
push
ss
sbb
mov
daa
jmp
xor
out
xor
popa
insb
hlt
rol
mov
iret
inc
push
in
fs
dec
lret
xor
fs
pop
sub
xor
fwait
into
xor
jge
add
mov
push
scas
inc
inc
pusha
mov
inc
aas
push
scas
aas
outsb
inc
jle
fcoms
shrl
dec
add
sub
in
popa
xor
loope
add
movsb
push
es
gs
pop
addr16
pop
imul
cmp
pusha
push
pop
aad
ss
mov
rorb
gs
dec
jl
sub
sbb
sub
push
push
out
xchg
movsb
sub
gs
adc
or
fs
stc
pop
xchg
dec
mov
xor
call
jae
je
xchg
jb
mov
fcompl
or
mov
movsb
xor
into
lds
fs
in
mov
test
xchg
outsl
jmp
call
mov
test
cmp
xor
js
out
mov
mov
mov
das
imulb
sbb
fimull
sahf
imul
je
out
push
pop
daa
popf
lods
adc
test
call
jmp
or
mov
xor
in
cs
ss
push
xor
clc
lea
call
scas
push
jns
xorb
xchg
xor
stos
iret
mov
dec
xor
push
xchg
mov
adc
lods
cld
andb
bound
stc
cmp
ret
aam
mov
push
push
sbb
gs
fldenv
leave
sub
ljmp
xchg
repz
bnd
push
lods
lret
sarb
and
dec
mov
and
jo
in
add
int
mov
xchg
or
jmp
inc
aas
pop
xor
or
gs
dec
jmp
cmp
jge
arpl
sub
inc
adc
enter
cmp
fsubs
cld
std
sbb
mov
push
pop
sub
xor
push
aaa
mov
or
dec
lret
das
and
fnstcw
int3
outsl
loopne
mov
stos
fdivrs
pop
cwtl
sbb
enter
dec
loop
mov
and
sbb
and
mov
xor
dec
push
in
fsts
lahf
sbb
scas
pop
fwait
dec
hlt
popf
shrb
in
or
mov
lret
test
popf
mov
and
or
dec
mov
pop
lock
loopw
insb
mov
inc
push
dec
outsl
fs
gs
data16
imul
mov
out
test
out
sub
mov
cmc
and
sub
into
xor
lods
vandnps
insl
inc
or
inc
nop
into
push
iret
movsl
sub
test
xor
icebp
aad
pop
aad
sub
fdivr
cmpsb
and
call
call
mov
xchg
and
jne
and
je
jns
xor
les
in
dec
mov
andl
xor
fmull
or
cwtl
pop
and
adc
push
aam
leave
stos
sbb
mov
int3
xchg
stos
inc
rcll
adc
cmp
loope
inc
mov
adc
in
sbb
jp
adc
and
in
addr16
push
fs
sbb
push
test
in
mov
test
jb
pushf
enter
ret
and
push
inc
mov
xor
xorb
jbe
mov
and
adc
cli
mov
dec
xchg
shlb
daa
pop
or
arpl
add
rorl
mov
sbb
out
xor
add
sti
cltd
adc
es
std
lds
test
mov
jecxz
iret
outsb
in
sahf
ja
mov
or
aam
sbb
dec
inc
and
or
xor
mov
cmp
test
in
jmp
mov
repz
xor
xor
data16
inc
pop
stos
sub
inc
cltd
add
imul
je
ret
sti
xchg
sahf
out
sub
cmp
xor
xor
cmpsl
dec
sbb
incb
sub
jp
xchg
loope
cld
dec
fwait
cli
int
popf
sbb
cli
mov
bound
jl
adc
sub
out
fbld
sahf
push
mov
mov
aas
jp
jmp
out
push
aad
fnstenv
xor
data16
cli
loop
dec
loope
cltd
push
push
movsb
sbb
xor
and
movsb
out
adc
daa
cmpsb
inc
test
lods
mov
sbb
loop
sbb
mov
jae
push
pop
push
cwtl
lahf
iret
arpl
sub
cli
in
jmp
pop
outsl
inc
pop
sub
insb
or
aas
movsb
or
rorb
addb
xchg
jne
adc
out
jns
negb
xor
fisttpl
adc
pop
or
xor
add
dec
bound
sub
repz
ja
movsl
in
je
adc
xor
and
bound
mov
jle
inc
sbbb
or
push
dec
andb
imul
iret
movsl
sub
xchg
push
cmp
xchg
add
lretw
and
or
lods
sub
sbb
imul
mov
dec
dec
push
xchg
jmp
cmpsb
faddl
push
outsl
add
lock
ret
push
or
push
adc
sbb
xor
sahf
push
push
push
or
sub
cltd
xchg
and
ss
pop
xlat
ljmp
cli
dec
cld
mov
adc
dec
outsl
jne
arpl
pop
adc
push
cmp
push
ret
xor
mov
dec
bound
dec
add
and
outsl
daa
fsubl
jmp
dec
jp
jl
sbb
test
ror
cmp
lret
adc
push
ljmp
or
test
pop
add
call
or
pusha
add
outsl
pop
lret
adc
dec
xor
xchg
ljmp
sbb
shr
mov
fsubrl
push
mov
xchg
sub
dec
js
daa
dec
out
mov
cmpsb
sbb
fistl
and
aad
xchg
out
push
stos
aam
lahf
sub
inc
and
pop
loop
call
sahf
data16
fisttpl
lahf
ss
push
pop
stos
xor
call
outsb
pcmpgtb
bound
rcr
imul
sub
fldcw
mov
inc
popa
out
fcoms
clc
fld
jg
mov
add
xchg
sarl
mov
out
pop
hlt
scas
negb
dec
clc
add
movsl
ljmp
jg
cmpl
pushf
in
xor
ja
cmp
mov
push
pop
xorb
cmp
or
inc
sbb
sbb
test
push
and
mov
dec
pop
xchg
xchg
xchg
sub
pop
xor
faddl
cmpsb
jl
sub
mov
xor
outsl
les
mov
test
sub
sub
mov
sbb
xchg
bound
cwtl
pop
sahf
test
xchg
data16
sub
jmp
sbb
mov
rcrb
cmp
pop
and
popf
pop
mov
cmp
push
ljmp
stos
push
sbb
sbb
cmpsl
testb
sub
jnp
mov
in
lahf
inc
or
or
insb
xor
shrb
aas
nop
call
imul
cli
push
jae
bound
pop
icebp
lret
iret
inc
stos
mov
xor
test
jg
cltd
in
jge
cld
mov
push
mov
mov
pop
pop
push
sub
fs
jb
xchg
popa
pop
push
cli
dec
jmp
push
mov
aad
sub
scas
test
pop
dec
cli
xchg
and
loop
outsl
testl
xlat
push
lahf
jne
loopne
pusha
or
int3
ss
sbb
lahf
mov
adc
cs
sub
call
test
push
cmpsb
dec
pop
sbb
cld
int
andb
jb
test
sub
xchg
mov
inc
push
aad
fisubrs
pop
or
pusha
lock
xchg
jecxz
fcom
inc
xchg
push
sbb
dec
call
dec
mov
cli
lock
addr16
cli
and
frstor
push
mov
pop
subb
shl
lret
pop
xchg
int
lods
sarl
lods
popa
stos
fstps
fstpl
mov
rorb
mov
sub
or
fwait
and
mov
dec
fcmovnbe
sbb
dec
pop
jns
arpl
pop
and
sbb
ds
or
lret
xor
in
call
push
lret
insl
add
lahf
cmp
ss
jb,pt
xor
fs
push
fwait
cmp
sbb
fimuls
arpl
pop
cltd
mov
popa
leave
sahf
frstor
sbb
ret
in
sub
xchg
push
push
cmp
arpl
dec
push
clc
loop
cltd
rorb
jne
mov
loop
test
mov
nop
std
push
gs
popa
into
js
icebp
sbb
call
aad
lcall
insl
sti
push
mov
dec
data16
imul
lret
lods
in
addr16
in
out
in
push
orl
or
fldcw
addb
pop
dec
xlat
lret
aas
mov
push
imul
or
pop
outsl
in
xchg
sarl
fiaddl
shrb
push
adc
gs
pop
aam
mov
fldenv
add
xor
lds
lea
jae
dec
push
fwait
or
cmpsb
inc
cmc
xchg
lods
out
xchg
fbld
sbb
shll
cmp
push
xor
fisttps
pop
cmp
cmp
inc
bound
pop
pop
mov
pop
sbb
and
loope
jmp
add
cmp
add
jp
xor
dec
fwait
jb
or
cmp
loopne
lret
mov
pop
out
mov
adc
pop
mov
and
aad
sub
inc
push
loopne
loope
xchg
mov
adc
inc
and
mov
pusha
shll
popf
push
movsl
or
and
mov
lock
and
fwait
insb
inc
push
movsl
sbb
jb
out
sub
or
mov
xor
dec
cmp
shll
call
inc
fwait
mov
fldenv
push
add
adc
adc
rcll
sub
pop
inc
push
mul
int
lret
pop
test
shr
sarb
stos
pushf
push
mov
in
push
or
or
cmp
cmp
enter
xchg
or
iret
and
gs
out
dec
sarl
mov
test
mov
mov
push
fists
outsl
pop
and
jbe
dec
push
jb
fdiv
jg
push
push
sbb
jns
mov
lcall
mov
in
cmpb
adc
insl
sub
xor
xor
mov
push
ss
cmp
dec
mov
push
cmpsb
xchg
fs
fidivrs
and
stos
push
jg
in
into
ror
pop
rcr
cmp
mov
imul
jno
mov
and
xlat
dec
fcoml
xor
out
and
pop
sbb
xchg
iret
dec
add
movsl
dec
push
push
sbb
pop
jmp
loopne
xchg
cmp
pop
rclb
jno
outsl
xchg
fstl
and
sbb
push
and
loopne
xor
out
lock
and
andl
mov
and
jge
jecxz
stc
mov
mov
pop
mov
pop
add
push
inc
cmp
xor
push
dec
cmpsl
inc
cmp
cmp
sbb
ss
add
ss
add
pop
pop
rcrb
popa
pop
arpl
gs
pop
imul
sub
add
out
fstl
dec
popa
dec
aam
xor
xor
jge
xor
xor
ret
movsl
sub
and
movsl
pop
out
pushl
cmp
cltd
ret
inc
xor
ret
add
inc
aaa
cmpsb
inc
sub
aas
in
popa
cmp
push
je
xor
adc
insl
lret
sub
push
dec
add
push
sbb
cmpsl
sbb
dec
xor
stos
mov
imulb
cmp
xchg
push
push
mov
mulb
mov
add
in
or
push
jns
cmpsb
lret
out
arpl
xor
int
sbb
lds
jae,pt
xlat
data16
sbb
jecxz
dec
lahf
mov
ja
stc
mov
pop
addr16
and
inc
popa
jns
loop
loop
fdiv
mov
xor
and
and
pop
fdivrs
fs
arpl
fisttpl
or
mov
xchg
xor
push
jb
ss
xlat
cwtl
pop
aas
iret
dec
idivl
iret
adc
mov
sbb
or
clc
sub
popaw
mov
ret
dec
call
push
sbb
xchg
mov
adc
imul
or
inc
mov
ljmp
mov
mov
dec
dec
inc
insb
cli
cmp
pop
gs
ljmp
or
cmpsl
ja
push
push
mov
std
fstl
push
aaa
sbb
clc
adc
push
cmc
pop
popa
add
shld
notl
aam
stos
jns
fldcw
and
dec
xchg
sub
or
add
sub
rcl
lods
mov
xchg
test
cli
and
cmpsl
sub
push
out
test
cmpsl
inc
mov
cmp
adc
xlat
out
adc
movsl
xor
cmp
lds
mov
cltd
jne
pop
fcoml
pop
sub
je
lock
adc
out
sub
repz
dec
repnz
je
or
das
add
xchg
inc
out
cmpsb
or
pop
pop
and
sub
dec
sbb
rcrb
xor
cwtl
xor
out
jno
cmp
mov
andl
xor
inc
add
scas
push
and
daa
cmp
mov
fdivl
iret
jmp
cmp
fisubrs
jo
cmp
mov
mov
mov
rcrl
into
fsts
cmp
mov
xchg
sahf
pop
mov
sub
xor
push
xor
xlat
data16
xor
testb
xchg
mov
in
outsb
pop
adc
push
out
lds
dec
fwait
mov
es
dec
push
mov
mov
or
rorb
xor
inc
push
movsl
stc
xor
outsw
fwait
xchg
push
add
xor
lahf
cmp
or
arpl
add
fimull
xchg
mov
xor
jg
cmp
xchg
rcrl
pop
loop
jno
lret
imul
fstps
andl
cmp
cmp
aaa
repnz
xor
cmpsb
xor
xchg
popa
dec
pop
leave
rorb
mov
pop
fwait
sub
xor
ficomps
inc
mov
and
fnstcw
addr16
cmp
outsl
sub
pop
or
xchg
push
mov
fdivrl
out
lret
mov
bound
mov
xchg
xchg
mov
xchg
or
xor
xlat
cmp
leave
fistpll
cltd
add
push
aaa
pusha
lds
sub
lods
and
test
push
jmp
cmpb
fisubl
std
lock
and
call
ror
push
xor
or
lahf
sub
data16
mov
xchg
sub
ret
pop
and
subb
test
arpl
sbb
pop
and
and
sahf
push
push
adc
fsubs
cli
out
mov
shll
fsubrs
mov
arpl
sub
test
pop
repnz
add
in
imul
test
pop
pop
loope
add
fcomip
fsubrs
add
xchg
lcall
mov
iret
fs
in
adc
fsubs
sti
push
loope
or
out
mov
pop
inc
in
add
or
cltd
mov
mov
mov
add
arpl
popa
adc
out
pop
push
dec
jnp
mov
mov
cmp
pop
dec
ljmp
shll
outsl
in
jge
xchg
leave
jno
sub
sub
mov
add
cmpsl
das
pop
inc
sbb
outsl
mov
sub
aas
push
sub
test
inc
cmpsb
jo
inc
cmpsl
pushf
xor
cmpsb
and
jae
push
lds
jae
xor
sbb
mov
xchg
cmp
inc
fists
mov
shlb
cmp
dec
pop
mov
inc
push
mov
call
addr16
jp
mov
dec
pusha
and
rcrl
stos
in
loope
int
aam
push
sub
mov
cmp
scas
imul
aaa
inc
and
es
sbb
out
xor
es
sub
dec
test
adc
or
movsl
xor
inc
outsb
imul
sbb
sahf
adc
dec
push
stos
jecxz
mov
pop
mov
arpl
inc
mov
pop
mov
xchg
xor
add
inc
arpl
push
add
loop
fbstp
mov
jo
dec
arpl
test
or
or
dec
in
jbe
xor
xchg
push
or
mov
pushl
inc
mov
ret
xchg
in
popa
push
xor
scas
push
mov
cmpsl
xor
sbb
dec
jecxz
leave
rcl
push
fs
xor
jl
flds
push
ljmp
loope
lcall
outsl
and
add
je
sbb
test
dec
enter
xor
push
cwtl
inc
add
fmuls
fwait
or
or
sti
ffreep
pusha
imul
xor
jl
pop
jne
lret
pop
dec
adc
jp
imul
in
xchg
pop
mov
pop
cli
mov
ret
pop
sub
cmp
pop
fidivrs
loopne
mov
movsb
pushf
subl
mov
fucomi
fwait
xor
xchg
std
sbb
mov
mov
sub
fcomps
insl
lahf
adc
xor
fsubr
outsl
ss
imul
xor
inc
shlb
sub
arpl
and
inc
ret
ljmp
jg
insb
enter
xchg
iret
clc
push
insb
call
js
push
out
dec
ffree
call
xor
push
lods
sbb
call
in
bound
loop
test
data16
pop
inc
pop
dec
jecxz
jp
add
movsl
insl
das
xchg
mov
cwtl
xor
cmpsb
mov
mov
das
and
xchg
aam
jecxz
rclb
xchg
xlat
jl
insl
loopne
xor
orb
lock
fwait
sbb
fsubl
sub
scas
xchg
cmp
sub
inc
dec
stos
mov
int3
sub
arpl
xchg
and
call
iret
jbe
gs
jecxz
push
call
or
outsl
xchg
inc
imul
aaa
sbb
jmp
pusha
addr16
sbb
int3
and
xor
mov
xchg
es
dec
repz
outsl
adc
popa
jmp
subb
sti
insl
or
adc
repz
addr16
jne
dec
inc
insb
pop
int3
xor
cli
popf
lods
or
cmp
push
push
imul
cmp
jecxz
mov
fucomi
movsl
scas
bound
popa
mov
xor
adc
daa
addr16
inc
adc
dec
jns
in
cmp
mov
mov
mov
scas
daa
fsub
leavew
test
jns
or
mov
inc
inc
inc
inc
adc
scas
sbb
clc
jp
sbb
sti
xchg
mov
scas
bound
lret
xchg
in
in
scas
rcrb
mov
dec
gs
inc
addr16
cmp
sbb
pop
lods
cli
ds
imul
ljmp
clc
nop
nop
out
jmp
xor
inc
lds
xchg
sahf
dec
out
push
pop
in
push
inc
fwait
pushf
outsl
fildll
pop
movsb
xchg
cli
int3
cli
repnz
call
enter
mov
mov
mov
gs
sbb
xchg
lods
dec
pushf
xor
mov
clc
pop
sbb
fsubrl
imul
shrb
adc
mov
push
mov
or
enter
push
mov
add
mov
xchg
dec
sbb
shll
mov
test
dec
ret
loope
pop
xchg
and
xchg
out
fs
xlat
dec
in
xchg
add
insl
add
test
mov
clc
pop
popf
jae
push
nop
sub
lods
std
sub
orl
pop
int3
ljmp
add
cwtl
xor
cld
fs
daa
dec
test
jp
mov
lcall
or
test
nop
fmuls
cmp
popf
repnz
inc
fldenv
mov
sub
jecxz
std
inc
dec
lret
push
gs
jle
mov
sub
push
lret
movsl
dec
mov
movsl
sbb
in
popa
gs
xor
xchg
imul
mov
iret
test
fbld
mov
dec
repnz
pop
decb
sub
ret
jns
push
fs
push
push
adc
sbb
bound
push
adc
pop
push
ret
scas
fdivp
add
in
addr16
adc
and
adc
ljmp
dec
pop
ljmp
cmc
pop
cmp
ret
fs
arpl
pop
xchg
jg
push
xchg
mov
cmpsb
add
in
call
fsqrt
and
inc
add
pusha
jp
push
lret
ljmp
shlb
out
scas
jecxz
push
cli
test
pop
outsb
es
mov
sub
add
mov
mov
out
inc
loopne
in
or
imul
mov
aad
pusha
jle
mov
fs
fwait
stos
ja
xchg
pop
mov
std
push
loope
stos
fwait
js
xchg
push
movl
in
push
sbb
adc
pusha
popa
push
adc
int
out
nop
sub
cmp
rcll
add
xor
or
nop
and
in
add
or
cwtl
and
mov
or
daa
addr16
push
sbb
push
and
dec
inc
pop
xlat
jg
bound
push
mov
test
aam
cmpsl
fs
stos
inc
mov
popf
add
clc
hlt
push
mov
fimull
xor
test
jmp
jmp
sub
adc
pop
jecxz
xlat
pop
inc
or
in
cmc
movsb
test
daa
cld
push
shr
scas
lcall
call
es
xchg
push
int
jp
cli
add
mov
cltd
mov
ss
add
dec
lods
aam
push
aaa
xorb
test
push
mov
in
dec
adc
leave
dec
dec
sub
add
mov
ljmp
or
out
dec
push
sub
inc
cld
mov
call
and
lahf
sbb
cmp
test
mov
ja
sbbb
fsubrl
cmpsl
or
and
dec
stos
and
jecxz
xchg
aam
arpl
imul
aam
mov
sbb
frstor
movsb
and
repz
inc
cmp
mov
xchg
in
imul
lock
cmp
outsl
arpl
fsubr
dec
out
dec
bound
outsl
gs
inc
and
pop
sbb
jp
outsl
sbb
outsl
xor
sub
out
dec
jge
js
andb
mov
or
lret
mov
rclb
outsl
xor
push
test
aaa
es
or
fs
repz
jmp
cmp
aam
dec
pop
ret
adc
scas
daa
xor
cmp
iret
sbb
and
xchg
aam
cltd
or
jmp
cli
idivb
std
addl
xchg
insl
cmp
cmp
rorl
call
xor
add
out
or
pop
sub
daa
dec
in
aaa
mov
cmpsl
inc
inc
jg
gs
or
push
inc
adc
and
aas
push
ficomps
dec
loopne
mov
sbb
and
mov
fiaddl
in
sub
outsl
repnz
test
std
and
push
aad
jns
aad
out
mov
or
jbe
push
ljmp
inc
test
pusha
pop
je
insb
icebp
pusha
loope
loopne
pop
fs
fcomps
es
dec
sub
icebp
sbb
outsb
jmp
mov
out
jp
cmp
inc
sti
pop
inc
dec
cmpsl
push
dec
mov
in
xchg
cmpsb
push
mov
fildl
xlat
cmp
jp
push
bound
enter
cs
loop
shl
in
out
jnp
cmc
mov
andl
cmpsl
outsl
mov
lret
pusha
sub
jo
dec
mov
test
sub
aas
aaa
pop
fwait
or
sub
jl
cmp
inc
push
or
pop
mov
test
push
sbb
aas
dec
inc
popl
dec
rorb
push
bound
in
sub
or
rcll
data16
dec
jl
fsts
out
ljmp
jbe
cmp
dec
mov
ja,pn
inc
cmpsl
push
xchg
xor
jo
mov
sub
xor
or
cmp
or
cmpsl
fimull
jl
dec
cltd
or
inc
inc
daa
inc
popa
lods
mov
pop
or
pop
test
pop
or
daa
cmpsb
push
xor
iret
lods
push
outsl
test
jns
std
mov
inc
in
pop
out
and
push
push
movsb
movsl
xor
scas
and
dec
sub
cmp
fiaddl
call
in
inc
or
jbe
push
cltd
mov
popa
dec
test
and
xor
pop
xchg
mov
flds
pushf
ds
or
cwtl
lea
pop
jp
and
mov
sar
mov
rcr
js
test
jns
sub
int
push
xor
xor
add
or
aas
lock
mov
fdivrl
dec
dec
ret
call
pop
sbb
ljmp
lcall
stos
sti
mov
or
xchg
cmc
popf
pop
cmpsl
fwait
insl
or
cltd
sti
push
push
dec
sub
pop
mov
jns
fwait
or
dec
lcall
fwait
jns
adc
add
ret
repnz
subl
clc
adc
or
adc
and
push
loop
bound
xchg
lods
test
mov
mov
or
fisubrl
hlt
rorl
add
adc
or
push
xchg
stos
add
popa
or
push
flds
rol
sbb
pop
hlt
dec
inc
cmc
xor
je
shll
loope
cmp
lds
jbe
enter
movsb
jg
lods
push
pushf
gs
mov
pop
xorl
ret
dec
push
movsb
gs
les
stos
aas
icebp
xchg
lock
xor
or
sub
pop
push
ljmp
pop
mov
push
add
mov
addr16
outsl
mov
inc
and
in
fcomps
fcmovnu
outsl
cltd
in
sub
mov
mov
push
pop
fs
loop
jbe
bound
mov
aaa
and
xchg
test
test
enter
sbb
inc
pop
push
sub
mov
out
fs
cmp
sti
mov
cmc
data16
or
aad
test
xor
cli
fstps
into
daa
fimull
gs
xor
das
imul
popf
mov
and
mov
imulb
jle
loop
out
inc
or
mov
or
xlat
lock
dec
aad
xchg
lcall
ficoms
call
cmpsb
xchg
fsubrl
xlat
push
gs
push
shlb
shll
and
sub
jns
xlat
add
loopne
inc
cmpsl
and
cmpsb
into
mov
repnz
dec
lods
ret
add
pop
out
xlat
popa
dec
push
pusha
push
ficomps
lret
in
push
es
ljmp
addr16
lds
sbb
dec
das
sahf
xchg
push
cmp
inc
test
lods
lahf
mov
arpl
pop
call
jb
pop
push
cmp
fwait
outsl
cmp
stc
xor
testb
fistl
rclb
xor
out
xor
push
mov
adc
mov
mov
outsl
push
xchg
xchg
push
shlb
sbbl
dec
pop
cmpsb
adc
js
out
or
mov
lods
lahf
insb
divl
jne
inc
xchg
xchg
xor
pop
stos
cmpsb
mov
ss
add
test
xor
aad
pop
inc
out
rorb
pop
pop
pop
shll
push
pop
cmpsb
daa
test
dec
out
pop
mov
or
psubsb
and
dec
inc
inc
xor
out
lods
fs
repz
dec
and
cmp
movsl
sub
out
mov
cmp
out
sub
jnp
mov
das
mov
sbb
and
lret
ds
jecxz
out
add
mov
pop
adc
pop
lret
mov
fisubl
push
fldenv
in
cmp
xor
cltd
push
sbb
ss
sbb
mov
jno
inc
call
aam
jmp
ficoms
xlat
pop
ljmp
arpl
pop
inc
rcll
cmp
mov
rorb
outsl
add
iret
out
not
out
dec
iret
mov
test
aas
xor
loop
dec
or
call
or
int
das
sarl
test
fdiv
pusha
jb
mov
and
adc
or
adc
dec
rcll
jbe
inc
sbb
insl
mov
mov
sarl
jns
dec
addb
aam
or
dec
and
mov
pop
add
and
push
cmp
add
dec
push
or
pop
out
push
fmull
and
mov
cmc
mov
cwtl
dec
push
mov
sbb
arpl
jmp
test
jp
xor
lds
in
jecxz
xor
jmp
or
cld
add
sti
es
movsl
and
popa
xlat
decl
in
pop
xchg
pop
adc
push
sbb
in
and
imul
cmpsl
cmp
sbb
fwait
mov
mov
lds
cli
out
test
mov
nop
xor
jno
daa
xchg
jno
or
aad
test
mov
pushw
xchg
movsl
sub
and
add
sti
push
out
adc
aaa
pop
int3
and
mov
mov
push
push
pop
rcrb
aaa
and
in
ret
inc
and
gs
inc
stos
push
mov
loop
bound
pop
shll
mov
ljmp
sub
outsl
loopne
ss
push
cmp
or
xchg
pop
pop
adc
in
sub
cmc
push
mov
inc
adc
lods
sbb
inc
xor
add
xor
orb
js,pn
popf
xor
mov
fs
xor
jmp
orb
clc
jns
inc
sub
adc
cmp
xor
mov
insb
push
push
out
jns
add
aas
mov
cmpsb
mov
je
insl
adc
pop
rcr
xchg
or
fstl
add
cmpsb
or
xchg
mov
outsb
adc
jae
cmp
or
fwait
stos
and
out
mull
pop
sbb
filds
daa
dec
in
adc
pop
out
pop
adc
outsl
out
cmpsb
jb
nop
pop
pop
jl
xchg
test
ljmp
mov
lods
dec
repz
cwtl
int
in
repz
push
mov
or
push
xor
add
pop
and
push
pop
push
mov
xor
lods
sbb
aam
jl
sbb
lods
outsl
dec
add
ffreep
or
adc
outsb
mov
pop
je
inc
clc
sub
sub
mov
xor
mov
xchg
lds
adc
and
inc
ljmp
or
popa
das
gs
sbb
inc
push
mov
push
ficoml
push
js
int3
shr
rcrl
xchg
or
pop
push
cwtl
ljmp
inc
pop
inc
jmp
sbb
nop
add
in
enter
dec
mov
push
sbb
mov
call
cmp
movsb
mov
sbb
fsub
pop
pop
shrb
or
insb
push
jae
pop
dec
imul
es
fwait
xchg
in
add
out
mov
out
out
mov
js
pop
scas
mov
imulb
inc
push
jne
mov
jecxz
movsb
mov
sbb
jnp
add
xor
popa
fsubrs
out
gs
fimull
fs
add
push
and
popa
and
cmpsb
mov
xchg
pop
xor
ficomps
sahf
pop
leave
cwtl
outsl
jmp
lret
mov
lea
sub
imul
and
outsl
test
sbb
lds
or
in
mov
dec
push
iret
pop
in
repz
sub
xchg
sub
pop
stos
xchg
push
loope
int3
leave
insb
out
ljmp
in
push
mov
sub
arpl
cmpsb
inc
cli
add
jns
loope
in
sahf
out
lret
pop
and
adc
jge
push
inc
popa
or
cld
test
outsl
and
movsb
jl
add
or
push
ffree
daa
frstor
daa
ror
sbb
gs
rcr
xor
in
xlat
in
cmp
movsl
mov
push
ret
data16
push
push
jecxz
ret
xor
push
or
cli
inc
popa
rclb
mov
stos
out
or
out
outsl
xchg
daa
mov
mov
imul
jo
inc
cli
lods
or
jb
pop
dec
gs
mov
pop
pop
jecxz
lods
mov
jmp
dec
dec
addr16
pop
mov
push
cmpsl
cmp
xor
xor
inc
fwait
inc
fisubrl
xor
jns
push
out
sbb
xor
inc
lret
jnp
push
out
or
loope
push
loope
fidivrs
int
xor
das
cmp
sbb
mov
and
pop
lahf
out
scas
jl
aas
inc
les
dec
lea
and
in
test
pusha
daa
jmp
push
mov
push
aad
mov
lock
ljmp
adc
jmp
in
or
add
movw
dec
stos
cs
cltd
sub
adc
inc
jecxz
xor
pop
in
ret
scas
xchg
in
daa
outsl
pushf
rorl
cmp
stos
jmp
add
or
inc
imul
ror
and
gs
shlb
cmp
sarb
mov
sub
out
or
add
stos
jbe
jmp
lcall
xor
and
rol
gs
call
leave
icebp
or
aas
test
ss
lock
jo
popa
cmpsb
int
mov
scas
mov
or
pushw
fists
ret
pop
inc
sahf
mov
decl
icebp
add
mov
xor
imul
push
xor
jl
and
and
stos
subb
jnp
pusha
call
pop
dec
push
addr16
ljmp
aad
pop
mov
fstpt
xchg
movsb
adc
cmp
decb
mov
popa
mov
inc
adcb
cs
scas
mov
imul
mov
jecxz
xor
jmp
adc
xchg
shlb
sbb
sub
xor
arpl
int
or
hlt
fwait
inc
sti
test
jo
lds
xchg
repnz
mov
and
mov
incl
fldenv
mov
pop
arpl
hlt
dec
mov
add
mov
data16
sub
fldcw
push
cltd
sbb
sub
pusha
repz
out
shrl
fbld
jb
mov
cmp
cli
repnz
and
pop
cli
mov
out
xorb
push
es
dec
or
rcll
sbb
mov
bound
and
or
pop
xor
ffreep
popf
cwtl
xchg
icebp
gs
xchg
gs
dec
aad
dec
lahf
xchg
adc
fisttps
and
enter
and
in
jg
mov
repz
ljmp
xor
and
or
ret
mov
push
mov
pop
xor
test
pop
loope
cmc
rclb
popf
mov
lods
test
lea
lock
cmp
fdivr
cmpsl
test
or
cmc
xchg
and
push
dec
add
push
mov
sbb
sbb
lock
int
es
fstps
mov
cmp
adcb
mov
gs
std
mov
rcrl
outsl
mov
pop
lea
cmp
sbbb
inc
push
lcall
push
mov
sub
inc
fsubs
je
movsl
mov
xor
negl
adc
and
iret
fldl2t
jle
negl
inc
add
pop
movsl
cmp
inc
pop
jb
pop
sbb
iret
filds
jae
jecxz
xchg
pop
mov
adc
and
and
push
or
pusha
addr16
xor
cmpl
xchg
aad
imul
lea
js
and
xor
xor
test
arpl
stos
inc
mov
push
fists
fs
mov
fcoml
loope
inc
adc
stos
push
sti
fadds
and
adc
fs
push
out
sub
fldl
dec
pusha
add
push
push
outsw
imul
insb
sbb
jp
add
inc
fs
hlt
sub
aam
and
and
mov
movsl
xchg
out
addr16
mov
mov
push
cmp
push
imul
in
test
pop
imul
push
adcl
jp
clc
adc
jno
pop
push
dec
insb
mulb
cmp
cmpsl
imul
fistps
fdivl
fdiv
popf
ficomps
test
out
sub
stos
movsb
movsb
xor
jns
insb
lock
adc
push
push
push
imul
push
bound
pop
push
inc
mov
dec
mov
repnz
repz
addr16
mov
es
stc
out
addr16
ja
xorb
test
xchg
jmp
bound
jecxz
jo
clc
imul
daa
jns
or
push
mov
loop
mov
mov
sbb
pop
hlt
shlb
sub
sbb
mov
rorb
arpl
es
ficompl
movsl
stos
or
imul
je
fwait
lods
lea
cmp
mov
in
mov
fldcw
insb
fldl2t
out
dec
push
jecxz
jb
movsb
mov
repnz
jecxz
mov
and
jge
call
dec
ljmp
cmpsb
icebp
imul
out
push
out
insb
pop
imul
in
je
sbb
test
pop
movsl
loop
shl
fildll
xlat
mov
subb
repz
insl
mov
ret
cmp
movsl
jo
gs
gs
js
push
cmpsb
xchg
xor
jo
lock
mov
mov
mov
divb
adc
imul
ds
cmpsb
divl
lret
push
popf
gs
jle
mov
or
fdivs
iret
push
lock
pusha
fwait
es
or
fsubs
ljmp
aas
rcll
cmp
std
jbe
dec
inc
pop
pusha
mov
sbb
jecxz
loop
xor
int3
push
and
stos
fcomip
mov
pusha
inc
jmp
push
in
lock
ja
mov
sbb
inc
pop
push
cmp
xchg
jmp
or
adc
inc
imul
orl
inc
lahf
outsl
xchg
push
cltd
xchg
adc
mov
or
in
test
or
mov
push
ficompl
testb
arpl
sub
mov
xchg
jmp
or
ss
inc
and
outsl
jge
push
rclb
xor
jmp
mov
es
xor
dec
mov
outsb
xor
and
mov
sarl
enter
fists
add
push
es
es
repnz
sar
push
fsubs
lret
or
jp
or
fisubs
and
push
shll
and
outsl
out
popa
xlat
daa
xor
outsl
ljmp
bound
add
lcall
test
mov
rolb
add
and
cli
clc
dec
push
imul
mull
adc
loop
imul
mov
xchg
or
iret
sub
outsl
ret
pop
ljmpw
adc
loopne
push
clc
in
scas
dec
testb
pop
out
sub
pop
cmpsb
xchg
dec
movsb
xor
dec
mov
or
mov
in
jge
in
push
xchg
pop
filds
mov
sbb
fldl
movsl
or
fwait
pop
test
jne
inc
jb
mov
inc
cmp
into
test
pop
es
mov
clc
rcr
dec
out
adc
scas
dec
cmp
pop
and
lds
adc
lods
shlb
mov
adc
pusha
cmpsl
dec
out
push
mov
pop
ljmp
or
out
inc
xchg
push
cli
inc
xor
popa
movsl
pop
mov
jb
and
in
xor
xchg
mov
imul
sub
or
test
mov
pop
or
out
and
cmpsb
sbb
in
jle
pop
cmp
in
cmpsl
lock
inc
hlt
pcmpeqd
inc
mov
xchg
pop
gs
ret
jae
dec
test
nop
adc
cmp
adc
fxam
sbb
push
sbb
in
pop
pop
adc
xor
pusha
dec
lret
and
mov
jns
or
pop
cs
xchg
add
sti
fists
add
and
cwtl
lods
loop
pop
nop
pop
fwait
test
sbb
in
lret
rorl
adc
sbb
sbb
repz
lds
fldenv
test
xor
in
pushf
cltd
icebp
inc
popa
out
adc
xchg
jmp
mov
scas
test
shrl
push
cmp
adc
out
push
mov
pop
stos
mov
and
push
out
or
int
lock
js
rolb
mov
js
pop
push
pop
jmp
jns
fcompl
jmp
in
jl
cmpsl
xor
xor
inc
outsl
mov
repz
mov
pop
enter
and
fisubs
cmp
das
push
int3
call
and
add
sub
lods
pop
or
pop
lret
call
push
add
dec
mov
das
mov
or
rclb
cltd
out
push
lret
push
cmp
lock
xor
repnz
cmc
mov
je
leave
inc
mov
shr
orb
or
push
in
adc
vcvtps2pd
inc
and
addr16
bound
loopne
add
sub
jae
frstor
sub
jle
test
inc
lock
sub
in
in
jns
xchg
arpl
inc
adc
std
push
jecxz
fmull
dec
nop
sbb
test
hlt
dec
adc
lcall
or
hlt
dec
aas
or
frstor
adc
adc
dec
jne
or
sbb
jecxz
lret
into
aas
dec
aam
ret
fstp
and
mov
fildll
inc
out
int
jb
dec
mov
clc
inc
imul
adc
popf
popa
dec
movsb
lcall
xchg
cmpsb
mov
jns
testl
es
movsb
in
aam
dec
cmp
movsl
bound
cmovae
clc
sub
xor
nop
inc
mov
in
dec
shlb
push
add
and
fcmovnb
cwtl
arpl
loopne
mov
gs
sbb
add
inc
push
mov
bound
jmp
mov
fsubrs
cmp
or
ds
inc
loope
inc
mov
dec
pop
mov
push
iret
push
incl
mov
xchg
mov
xchg
lcall
pusha
push
dec
aad
inc
sub
aas
xchg
pop
fs
gs
rclb
mov
inc
aaa
mov
mov
loop
and
inc
aad
lcall
lahf
push
xchg
andl
rcr
loope
aaa
fwait
lahf
testl
mov
fdivrs
inc
and
dec
pop
inc
sbb
rcrl
cmp
not
push
lret
dec
das
mov
inc
jnp
lahf
xchg
mov
pop
fcomp
pop
ss
inc
mov
aad
inc
sti
dec
xchg
push
fs
mov
push
mov
jecxz
add
jbe
and
repnz
in
fsubs
inc
push
inc
aad
lcall
push
mov
push
pop
mov
andb
fsubrs
xchg
pusha
movsl
mov
dec
or
xor
in
daa
xchg
hlt
popf
xor
push
das
jb
mov
pop
mov
and
stc
and
cmpsl
and
jbe
push
repnz
repz
cltd
dec
or
dec
aam
xor
imul
jecxz
pop
shll
stos
xchg
es
in
lret
mov
cmp
cwtl
stos
cmp
dec
lret
mov
data16
mov
jmp
cwtl
mov
push
cmp
insb
and
xor
sbb
add
cmpsb
pop
or
cmpsl
pop
lods
dec
cmp
aas
shr
sub
mov
xchg
sbb
test
push
out
dec
push
inc
gs
ficoms
pop
push
jecxz
fnstcw
pop
cs
aad
and
filds
lcall
daa
lahf
xor
rclb
cmpsb
dec
repz
gs
mov
lret
pop
mov
loop
lret
mov
sti
adcb
adc
dec
add
mov
insb
or
shrl
add
pusha
arpl
push
pop
xchg
xchg
pop
and
mov
jne
cmp
ljmp
xor
fcoms
hlt
repnz
inc
addr16
push
loope
mov
icebp
xor
inc
lods
xor
mov
ljmp
adc
sub
sub
out
aad
pop
ds
loop
rolb
sub
inc
mov
shl
dec
pop
fs
and
xor
aaa
lret
add
pop
cmpsw
xchg
pop
stc
or
mov
arpl
flds
arpl
inc
call
pop
mulb
call
out
xor
xor
movsl
pop
sarl
rolb
stos
imul
or
in
push
dec
fbstp
hlt
gs
sbb
popa
bound
sbb
push
ljmp
adc
xor
adc
mov
loope
mov
icebp
sub
test
cmp
jns
in
push
in
sub
pop
lods
sarl
jnp
or
push
or
hlt
insl
call
shlb
push
cs
sbb
mov
popaw
push
cmp
aad
xchg
xor
je
cmp
dec
leave
lahf
or
popaw
dec
pop
mov
imul
adc
inc
sbb
rclb
mov
pop
xor
lcall
and
or
cmp
xchg
or
das
xchg
mov
xor
or
popf
fistl
lock
call
loop
ja
mov
jns
cli
inc
scas
pop
and
call
subb
in
mov
jecxz
fmuls
jae
cmp
into
ljmp
pop
arpl
jmp
stos
out
scas
aam
stos
and
jg
out
xchg
cli
in
sbb
push
test
mov
mov
imul
sahf
ficompl
push
fldenv
and
adc
insl
fidivrl
js
xor
aam
fsubrs
push
into
leave
xor
push
in
jb
in
cmp
sub
jp
sbb
mov
lods
std
shrb
sub
dec
pop
sbb
jle
add
sub
test
jns
sub
subl
cmp
adc
or
sti
xchg
in
sahf
fiaddl
jne
jle
fwait
jb
or
inc
cs
sarb
dec
gs
pop
pop
enter
cwtl
rcrb
cmp
fcompl
pusha
sahf
cs
ss
xchg
out
cltd
mov
jg
pop
arpl
cmp
pop
add
and
fsubrs
pushf
jle
add
int3
sub
std
adc
outsl
sbb
jl
fisttpll
lret
mov
mov
imul
mov
fs
cmpsb
dec
add
pop
mov
mov
mov
imul
repz
xchg
cmp
mov
idivl
mov
scas
sub
in
stos
ljmp
inc
jne
xor
dec
mov
mov
sti
mov
sub
add
pop
fiadds
inc
out
push
mov
in
push
aaa
daa
pop
sub
pop
sbb
je
fcomps
jecxz
add
je
mov
sub
cli
sub
mov
pop
imul
pop
dec
xchg
jns
jecxz
fldenv
xchg
sbb
dec
xor
mov
std
or
mov
scas
cmp
sbb
test
jb
inc
movsl
push
mov
inc
push
mov
test
mov
xchg
movsl
dec
into
outsl
iret
adcb
or
fwait
or
mov
lods
pop
mov
xchg
adc
out
lock
call
push
push
mov
push
dec
movsb
cwtl
inc
xchg
scas
outsl
xchg
sub
sub
iret
mov
es
mov
adc
dec
lods
shll
aaa
je
mov
scas
fldl
cwtl
dec
jmp
dec
push
fs
sub
sub
or
push
imul
jae
mov
inc
imul
popf
dec
xor
mov
fidivrl
sub
pop
xchg
lea
xor
arpl
scas
inc
cld
and
cmpsb
mov
inc
pop
aam
out
xchg
outsl
mov
les
push
bound
sahf
push
or
rorb
adc
add
dec
sub
test
fwait
sbb
mov
mov
jns
loop
loope
leave
ret
push
shrl
gs
sbb
mov
test
dec
dec
dec
daa
loopne
jmp
xchg
jmp
es
insl
pushl
cmp
mov
out
lds
outsl
popf
rorb
aad
repnz
pop
pop
cmp
testb
xchg
cs
or
sbb
test
clc
stos
fidivrs
pop
cmpsb
jbe
push
lret
fimull
xchg
mov
cltd
scas
rorl
sub
or
jecxz
dec
imul
fmul
bound
sbb
jne
and
pop
sub
loope
ficompl
mov
ret
rep
jns
mov
push
setne
push
in
jnp
jmp
add
sahf
xlat
lock
cwtl
data16
sub
sub
push
adc
rcrl
cmc
lock
sub
leave
call
adc
and
mov
push
pop
inc
pop
adc
fdivr
loopne
fld
cmp
pop
sub
xchg
scas
ficompl
cltd
aaa
fwait
mov
data16
fldt
adc
int
in
out
cs
cwtl
aam
out
mov
ljmp
outsl
add
cwtl
dec
dec
dec
xlat
dec
dec
movl
fucomi
nop
in
imul
push
call
lods
xchg
outsl
and
shrl
sub
and
out
jo
pop
mov
jnp
jecxz
jnp
mov
iret
mov
jo
adc
je
lods
lea
inc
xor
pusha
data16
jle
dec
adc
sub
mov
jae
jno
xchg
out
push
push
cwtl
pop
pop
cs
add
push
test
iret
imul
sahf
xor
sahf
add
movsl
test
pop
jl,pn
or
or
aaa
std
jp
adc
lock
adc
mov
arpl
dec
sub
sbb
pop
lcall
into
mov
xor
xor
mov
loopne
mov
jb
shrb
enter
add
data16
sbb
pop
test
inc
inc
loop
rolb
int
sahf
mov
fwait
lea
out
js
fdivrs
pop
mov
in
rcll
xor
pop
or
js
std
mov
movsb
pop
dec
mov
cmpb
xchg
cmp
fmull
push
xor
rcr
cwtl
xchg
faddl
pcmpgtd
jl
xor
adc
jbe
insl
popf
rorl
or
add
sar
or
push
bound
in
or
mov
fisubs
sbb
mov
addr16
inc
dec
out
sgdtl
leave
jp
ljmp
or
movsl
jmp
push
out
loop
call
sbb
sbb
dec
mov
fwait
out
or
jns
sub
gs
mov
push
dec
push
call
mov
cmpsb
xchg
shrl
int3
test
out
test
es
xchg
xor
sbb
add
pusha
fs
test
nop
loope
mov
bound
pop
inc
pop
dec
aad
adc
or
cmpsl
pop
xor
and
mov
divl
gs
xchg
add
imul
cmp
aam
test
aam
sub
fadds
push
xchg
arpl
lret
bound
nop
daa
pop
push
outsl
lret
rcl
cmpsb
pusha
pusha
aam
fldenv
pop
stos
pop
lahf
loopne
push
fwait
stc
out
mov
push
rcrb
inc
lahf
outsl
mov
pop
in
jne
ljmp
jp
aad
jb
mov
push
push
test
int3
pop
pop
mov
pop
es
jecxz
jne
mov
roll
imul
nop
dec
xchg
mov
cwtl
ljmp
xor
push
daa
sahf
ret
addr16
mov
cli
mov
lret
push
scas
and
ss
rsqrtps
pop
leave
out
pop
ss
repz
and
outsl
fidivrs
inc
or
push
push
xor
sbb
adc
mov
xchg
xchg
xchg
dec
sbb
in
dec
mov
shlb
cmpsl
test
lcall
inc
sub
add
in
sahf
mov
fsubp
in
outsl
aad
aam
sbb
out
lock
ss
fistl
sub
lcall
lods
jns
mov
in
call
sub
ficomps
and
fsubrs
or
stos
lret
mov
insb
dec
cmpsl
cmpsb
mov
pop
xchg
loope
sub
or
pop
xchg
sub
xchg
rolb
xor
popf
push
push
rcrl
mov
jl
sbb
aad
cmp
cli
sub
mov
ljmp
mov
dec
icebp
into
sbb
out
sub
xor
pop
fisttps
inc
sbb
mov
in
jg
adc
xchg
cld
cmp
pop
aaa
jmp
add
adc
in
shlb
aam
jle
push
sbb
frstor
sub
mov
mov
pop
ret
movb
divb
pop
mov
gs
push
jmp
test
faddl
mov
in
es
movsl
cli
pop
les
test
jb
test
push
ds
ljmp
xchg
movsl
cmp
cmpsb
imul
and
outsl
loope
loope
cmp
sbb
je
cmpsl
cmpsl
push
popf
loope
adc
sub
stos
push
mov
lret
dec
adc
testl
jnp
mov
popf
mov
jmp
lock
sbb
fnsave
sub
dec
sahf
test
push
xor
stc
jg
dec
aas
enter
sbb
or
xor
xchg
dec
adc
push
pusha
movsb
pop
imul
loopne
pop
cmp
movsl
mov
in
bswap
xor
xorb
xor
push
hlt
popa
dec
dec
pop
lods
mov
mov
lea
fwait
insb
dec
or
mov
mov
adc
out
mov
sub
loopne
cmpsl
adc
mov
cmp
inc
xor
in
lds
jge
jmp
dec
cmp
orl
out
incb
or
call
push
adc
loop
adc
dec
sti
mov
mov
adc
es
mov
ds
jp
orl
xchg
sbb
sbb
insl
les
lcall
pop
xor
xor
stos
fwait
adc
inc
rcrb
fidivrs
les
cwtl
pop
cmp
lods
pop
sbb
xbegin
jb
inc
enter
jle
add
add
test
dec
cs
sub
pop
push
sbb
cli
mov
inc
pusha
daa
les
movsl
pushl
pop
pop
ljmp
push
inc
mulb
in
mov
adc
sbb
sub
inc
dec
pop
jns
mov
push
adc
push
scas
mov
outsl
out
sbbl
cmpsl
pop
repz
in
sti
notb
pop
mov
cmp
push
sti
hlt
pop
js
popa
jae
clc
and
sub
pop
lret
das
xchg
mov
jecxz
fsubr
rcl
das
fsubrl
mov
push
mov
addr16
ficompl
adc
cmpsl
data16
insb
dec
jl
data16
xor
rcll
movsb
repz
cli
adc
inc
ds
or
jmp
enter
pop
dec
jecxz
dec
sbb
inc
shlb
mov
jmp
loop
addr16
and
xor
inc
and
imul
inc
ss
outsl
xor
xchg
outsb
add
or
in
sbb
mov
mov
jbe
clc
imul
cmp
xchg
xchg
sbb
add
mov
sub
sbb
arpl
adc
addr16
jecxz
lods
mov
lret
stos
imul
test
dec
xchg
lea
bound
jnp
in
xchg
jmp
ljmp
pusha
xchg
leave
jge
outsl
sub
and
mov
adc
mov
push
adc
cmpsl
push
imul
adc
movsl
aad
stos
push
aam
dec
mov
je
jno
push
sub
lahf
or
imul
sub
xchg
rcrb
xchg
pop
divb
or
fwait
mov
adcb
dec
xchg
inc
mov
push
push
mov
imul
mov
scas
insb
mov
dec
inc
mov
aad
ret
pop
push
jmp
mov
ret
sbb
mov
pop
xor
addr16
call
roll
insb
bound
jecxz
or
imulb
sti
or
mov
dec
fmull
or
push
push
dec
pop
cmpsb
fldt
jns
or
mov
into
push
pop
cwtl
mov
sbb
data16
and
dec
cld
and
out
mov
call
and
les
add
lret
aad
shll
aam
push
push
jmp
cli
repnz
mov
xchg
push
and
and
int3
jp
out
inc
dec
mov
push
and
pop
cltd
cmpsl
ret
mov
inc
sub
in
sti
lcall
dec
addr16
scas
jae
pop
lods
jbe
lea
sub
push
mov
fwait
lahf
aaa
push
out
das
push
add
mov
fstps
adc
std
rcll
daa
pop
fwait
push
sub
punpckhbw
sahf
notl
add
cmp
les
push
mov
xchg
or
in
dec
xor
movsb
mov
mov
sbb
or
sahf
xchg
and
sbb
outsl
dec
sbb
outsl
ss
lods
jne
mov
xor
add
inc
in
lea
mov
fwait
push
jmp
xor
gs
adc
test
or
xor
mov
outsl
mov
pop
adc
lea
in
mov
lea
adc
loopne
fbld
arpl
pop
scas
data16
pop
cmp
or
dec
mov
cmp
xlat
ljmp
sahf
sub
or
fadd
fbstp
fisubrs
push
lock
inc
loope
mov
pushf
cmp
adc
popl
test
push
dec
mov
repnz
sbbb
sbb
je
lock
inc
ret
inc
cmpsl
popf
push
adc
sbb
push
mov
daa
push
nop
iret
push
bound
outsl
dec
inc
sub
repnz
outsl
insb
xchg
out
clc
mov
mov
or
int
fbld
ljmp
adc
lahf
ljmp
dec
pop
or
mov
xor
stos
cmpsb
or
pop
das
and
xchg
and
popa
orb
mov
pop
push
enter
mov
lret
inc
sub
mov
out
jecxz
cld
in
or
sbb
mov
das
push
and
push
push
cmp
pop
stos
cmpsl
pop
or
mov
insb
mov
mov
and
testb
dec
jle
aad
and
daa
pop
xor
and
pop
cmp
mov
sub
cmpsl
or
out
ljmp
or
ljmp
mul
inc
pop
pop
or
fisubrl
xchg
arpl
jecxz
fldcw
or
pop
fldcw
adc
test
inc
decl
push
pop
adc
or
cmp
cmp
les
movsb
mov
test
sbb
dec
and
pusha
xorl
cmpsl
push
cmp
fsubs
push
and
xchg
test
mov
dec
dec
xor
and
int3
clc
xor
fmulp
out
xchg
addr16
out
mov
stos
pop
or
cmp
mov
sub
xchg
dec
adc
adc
xchg
les
imul
in
pop
push
xor
adc
push
leave
rorl
pop
add
aas
insb
pop
pop
push
popa
xlat
mov
cli
jo
repz
dec
jmp
mov
fildll
or
test
or
fwait
stos
mov
pop
adc
sbb
cmpsb
sbb
and
adc
cmp
pop
imul
and
sbb
xchg
dec
sub
enter
xor
rcl
addr16
dec
inc
push
ret
enter
xor
fmuls
movsb
dec
cmp
or
imul
cmpsl
sarb
std
adc
mov
imul
xor
in
cmpsb
movsl
or
sbb
push
sbb
clc
cmp
imul
xor
or
or
sbb
lcall
adc
xchg
pop
pop
bound
sub
push
ljmp
push
popa
pusha
fs
loope
inc
inc
jo
xchg
hlt
orb
sub
push
mov
inc
pop
data16
pop
mov
sub
or
gs
pop
mov
fbld
cli
push
xchg
push
mov
mov
sub
out
xchg
pop
mov
mov
or
imul
test
data16
data16
aam
out
outsl
and
inc
jge
xchg
ret
dec
mov
xchg
sub
addr16
add
fstpl
mov
xchg
movsl
inc
insl
fsts
loope
sub
cwtl
scas
stos
mov
pop
fcmovnbe
daa
daa
jb
std
pop
inc
xchg
stc
into
push
popf
test
jae
aad
lock
mov
int
cmp
sub
or
and
popa
fisubs
or
shll
in
xchg
cmp
mov
jmp
push
or
addr16
lret
js
mov
repz
cmp
scas
andb
mov
pop
sbb
shll
dec
cmpsb
xchg
in
or
or
sarl
lret
pop
xor
test
sub
subl
cs
push
xchg
adc
mov
and
mov
xchg
imul
stos
cmpl
xchg
xor
dec
stc
pop
movsl
fildll
stc
dec
outsb
std
jbe
shll
push
mov
cmc
inc
test
push
fwait
cs
and
xchg
andl
jmp
push
call
dec
gs
pop
pop
mov
fadd
inc
push
pop
mov
or
mov
push
pop
add
out
cld
out
pop
fwait
cs
jmp
cmpsb
test
mov
sbb
pop
inc
jmp
rcll
add
mov
das
test
mov
push
int3
in
movsb
or
or
and
mov
in
outsl
adc
cmp
pop
test
pop
stos
aas
jmp
push
and
mov
add
pop
jecxz
jb
add
sbb
xor
mov
es
cli
pusha
and
and
push
or
call
aad
shlb
push
mov
mov
cmp
and
test
adc
push
lret
or
cs
sbb
stc
push
pop
test
lret
sahf
adc
mov
daa
cmp
addr16
push
js
mov
fwait
int3
movsb
sub
or
pop
mov
or
mov
and
and
enter
push
adc
sarl
pop
imul
aad
push
pop
mov
add
dec
pop
push
xchg
mov
lods
pop
mov
int3
sub
gs
fisubrl
lret
pushf
outsl
scas
inc
cmpsb
or
mov
mov
fwait
lods
int
xlat
push
hlt
out
mov
mov
call
xor
imul
mov
xchg
add
xchg
fidivrs
lahf
rorb
mov
push
and
es
pop
imul
or
bound
stos
jg
adc
xchg
imul
movsb
mov
fs
clc
movsl
js
jno
mov
lea
mov
dec
ja
jecxz
xchg
cmpsl
imul
cld
lret
mov
push
js
mov
es
int
push
call
call
push
sub
xchg
ljmp
jns
push
and
xlat
xchg
mov
lahf
iret
xchg
add
add
add
rcrb
fsubs
dec
and
or
daa
and
lock
ljmp
fisubrs
popf
addr16
aas
aas
pop
lcall
xor
insl
pop
popf
lahf
lret
insb
push
scas
xor
sbb
fwait
test
xor
push
leave
outsb
jne
je
popa
xchg
stc
aam
cld
movsl
arpl
movsl
inc
scas
aad
es
jns
sub
xor
adc
in
lret
push
cmp
dec
dec
push
sub
jbe
mov
in
js
adc
and
sub
or
sbb
lock
sbb
sbb
sub
fwait
outsl
lods
jle
int3
and
sub
pop
gs
arpl
test
stos
or
test
jp
insb
and
pop
cmpsb
dec
adc
fstl
xchg
mov
lahf
xchg
jne
push
and
or
push
fs
or
scas
lods
dec
dec
out
in
cmp
cmpsl
sbb
add
and
pop
cs
inc
jmp
pop
imul
and
outsl
sub
mov
jo
movsb
test
imul
test
xor
cmp
lea
jae
pop
clc
pop
push
aaa
rorb
fwait
dec
inc
cltd
fsubrs
insb
inc
xor
pop
dec
sub
loope
push
jl
sbb
adc
inc
xchg
outsl
sub
insl
test
sti
mov
xchg
test
lods
in
push
int3
adc
icebp
pop
inc
add
ss
mov
cltd
xor
std
arpl
sub
aas
and
mov
push
dec
lds
lea
and
adc
int
call
and
test
in
mov
in
in
sti
and
cmpsb
push
rolb
popa
fbld
inc
xor
enter
insl
mov
cwtl
subb
fwait
pop
gs
dec
js
sahf
int3
in
jmp
jmp
fdiv
daa
outsl
push
lea
and
fcoms
mov
adcb
movsl
out
fisubrl
fadds
mov
pop
and
gs
or
pop
call
dec
pop
inc
xchg
loopne
gs
jg
xchg
cmp
test
mov
adc
adc
test
cltd
fstpl
or
in
mov
lods
sub
jle
sbb
pop
stos
aad
push
or
data16
in
cmp
mov
adc
cli
daa
dec
xchg
xor
aam
aas
push
fsts
fs
or
popf
dec
adc
jb
jbe
mov
rcrb
aam
cltd
rcrl
cmpsb
add
loopne
repz
aas
addr16
add
or
xchg
add
arpl
ljmp
cmp
clc
push
cltd
xchg
out
and
adc
aaa
sbb
push
push
lea
mov
mov
cmpsb
mov
sub
stos
arpl
or
dec
push
addr16
clc
xchg
test
xchg
jbe
ss
cmp
mov
loopne
daa
imul
and
das
bound
push
lahf
cwtl
dec
imul
movsl
out
mov
test
cld
and
out
mul
adc
cli
xor
mov
test
imul
push
jnp
rclb
push
cmp
jb
call
mov
lock
sbb
sub
out
scas
pop
or
mov
inc
and
rcrb
add
pop
imul
icebp
leave
pop
in
lods
or
sub
or
fldcw
xor
pop
xchg
fcmovbe
insb
in
stos
lock
and
mov
pop
sbb
outsl
shl
sti
xchg
or
loop
jmp
pop
sub
lock
fwait
adc
lcall
cmp
push
cmp
dec
pop
es
lock
jns
cmp
push
lret
xor
sub
sbb
jecxz
fisttpl
pop
js
fsub
clc
loop
xor
lock
movsb
cmpl
dec
or
and
and
sarb
js
sarl
fadds
cmp
out
loopne
and
lds
adc
les
icebp
push
ret
popa
das
movsl
dec
fmull
xor
xchg
lea
sub
dec
out
loop
dec
shrb
xlat
pop
repnz
aas
ret
dec
or
adc
fs
sub
insb
mov
cmp
sub
or
or
lret
jecxz
adc
addr16
xor
andb
xor
mov
pop
mov
jo
pop
cmp
jns
test
pop
push
idivl
ss
sti
inc
fdiv
sbb
or
ss
dec
lds
sbb
fisubl
pop
add
lods
and
push
or
lret
outsw
and
out
push
stc
pop
sub
jno
add
xor
cltd
dec
push
aam
popa
loopne
lret
lock
imul
filds
dec
cmpsl
movsb
cmpsb
jmp
xor
jo
iret
scas
jle
pop
pop
inc
sbb
cmp
and
xor
in
add
repz
sbb
and
test
sub
andl
xor
mov
popa
dec
adc
dec
test
sub
test
adc
push
outsl
cmp
or
push
lcall
pop
pop
pop
cmp
cmp
sub
imul
add
xor
mov
dec
out
adc
fstl
or
lods
add
cmp
adc
jecxz
or
cwtl
sub
xor
and
mov
sub
pop
cmp
ftst
dec
push
mov
pop
aaa
and
mov
ljmp
outsl
pop
in
xor
lock
jecxz
push
dec
xor
aad
stc
lock
cwtl
pushf
sub
out
push
test
sub
cltd
dec
push
fisubl
call
popa
loope
jmp
xchg
cwtl
loope
push
hlt
out
mov
sbb
cmp
call
mov
dec
lock
decb
pop
or
push
adc
or
aad
jecxz
adc
sbb
fimull
test
pop
pop
adc
in
clc
adc
je
add
and
add
insl
mov
cmp
push
outsl
xor
push
gs
and
mov
dec
push
cmpsl
lea
adc
popa
mov
xlat
in
call
ss
in
imul
fbstp
leave
test
inc
cmpsb
xor
xor
add
xchg
in
roll
push
xchg
add
stos
repz
xchg
aam
inc
cwtl
xor
or
in
adc
jns
in
sub
mov
imul
mov
sub
outsl
jle
lahf
cmp
jmp
push
inc
out
sbb
or
xchg
pop
daa
and
mov
xchg
sub
jns
or
inc
call
bound
mov
cmpsl
or
cmp
lods
xor
jmp
call
adc
mov
aam
jp
pop
and
push
push
inc
stos
test
mov
ds
mov
imul
sub
lret
clc
int3
mov
push
fstps
pop
dec
aam
addr16
xor
cmp
dec
fldl
jns
push
pop
or
xor
outsl
xchg
xor
jne
cmp
sub
in
cmp
shlb
daa
pusha
xor
adc
repnz
mov
adc
pop
sub
and
push
test
mov
test
jbe
inc
call
imul
mov
inc
outsl
cmpsl
pop
aas
xor
fsubrs
shll
or
lock
shll
and
mov
dec
cmpsl
sub
xor
xchg
jno
fstp
arpl
cmc
mov
jne
addr16
xchg
int
adc
repz
test
popf
call
inc
xchg
or
push
mov
xchg
add
outsb
mov
cltd
into
loopne
sbb
push
shrb
pop
insb
mov
push
sub
cmpsl
test
adc
mov
xchg
xor
cmpsb
mov
inc
scas
pop
or
test
sbb
and
ss
sub
mov
sbb
sbb
lret
sub
das
call
jb
xchg
xchg
sbb
adc
sbb
cmp
ss
add
add
out
xchg
push
mov
xchg
jae
scas
ficoml
daa
push
sub
push
fstl
movsb
and
sti
mov
mov
dec
loopne
and
fnstcw
adc
xchg
iret
sub
call
lret
inc
inc
xor
lret
aam
mov
cli
pop
sbbl
pop
mov
cli
sbb
and
sub
and
jg
into
cvtps2pd
popa
inc
in
pop
lret
test
cmpsb
pop
popa
xor
cwtl
fwait
push
enter
xor
mov
lea
bound
incl
sub
inc
fsubl
adc
sahf
pop
dec
stc
adc
mov
into
sti
stos
or
bound
pop
xchg
pushf
rcrb
push
aaa
fcmovbe
lahf
dec
sub
push
xchg
push
sbb
movsl
pop
add
out
inc
dec
dec
scas
popa
shr
stc
mov
nop
insl
bound
ja
sti
xchg
sarl
and
mov
mov
or
lods
adc
sbb
in
dec
int
sbb
addr16
push
mov
cmpb
lods
cli
mov
pop
int3
xchg
mov
in
push
pop
and
mov
popa
fisubrs
lea
sbb
inc
fcomps
popa
pop
scas
dec
mov
dec
gs
fstpl
add
mov
dec
pop
leave
lods
jp
push
mov
and
mov
shrl
mov
adc
scas
mov
and
mov
add
iret
xchg
cmp
add
xor
loope
movsb
scas
cli
out
bound
dec
mov
cltd
addr16
add
inc
mov
xchg
imul
repnz
sub
les
std
gs
fsubs
dec
out
stc
imul
dec
xchg
pop
je
push
ljmp
int
push
arpl
inc
ret
stos
or
clc
dec
mov
xchg
aam
add
mov
sub
jl
jge
mov
and
out
test
dec
and
mov
pop
sub
dec
call
shlb
movsl
mov
lea
jecxz
popf
clc
in
aam
cltd
cld
push
test
insb
hlt
sahf
add
xlat
lods
loop
and
xchg
add
test
bound
xchg
dec
jg
xchg
test
cmpsl
mov
add
and
mov
jae
xorb
dec
bound
sbb
xor
xchg
xchg
cmp
adc
mov
lods
or
test
push
repnz
and
jecxz
dec
imul
test
fimuls
xor
insb
push
bound
clc
cmp
dec
adc
fldl
mov
out
pop
push
inc
stc
mov
lret
cmp
in
hlt
push
jecxz
cmp
outsl
fmull
xchg
pop
sbb
xlat
and
add
lea
call
jno
in
addr16
lock
test
in
stos
nop
add
fisubl
cli
cmp
push
sub
push
lock
pop
out
scas
add
les
call
pop
xor
ljmp
aam
imulb
push
hlt
push
cmpsl
add
xchg
in
mov
mov
cwtl
cltd
xchg
outsl
adc
fimull
sahf
out
cmpsb
incl
sbb
test
int
pop
fsubrl
pop
fdivs
mov
or
lods
in
sbb
outsl
mov
loope
push
adc
sbb
call
pop
cmp
out
or
pop
in
test
sbb
pusha
dec
int
in
lods
cmp
or
cmp
or
pop
sbb
xchg
mov
pop
mov
out
clc
ljmp
adc
cmp
add
adc
out
pusha
lahf
mov
dec
bound
mov
out
mov
lods
popa
leave
sbb
sbb
xchg
jmp
sub
in
push
push
dec
sub
stc
push
iret
cltd
cmpsb
nop
lret
out
dec
mov
jmp
loop
push
xchg
xchg
and
cmpsl
iret
push
cs
das
add
inc
lock
dec
lret
movsl
lahf
pop
in
pop
stos
inc
in
pop
or
cmpsl
cmp
sbb
pop
loopne
or
mov
and
xor
adc
sahf
insb
xlat
icebp
in
adc
sub
dec
leave
sub
add
adc
into
rcrl
xor
hlt
xchg
jge
movsb
pop
ds
fsub
rcrb
and
and
push
shlb
gs
call
xor
fwait
cmp
lret
insb
fsts
mov
fwait
inc
lods
push
adc
and
mov
pop
ja
adc
sub
in
shll
pusha
and
add
pop
adc
mov
in
fsubrs
inc
fldl
ror
pop
dec
shll
inc
in
sub
daa
inc
pop
and
loopne
inc
pop
pop
stos
push
loopne
mov
xor
cmp
aad
or
data16
popa
push
lds
jp
xchg
mov
cmpsl
pop
lahf
xchg
mov
jmp
add
push
es
cmp
popa
je
push
fwait
adcb
xchg
out
outsl
jns
imul
lock
sar
pop
cmpsl
cwtl
or
dec
lcall
loopne
dec
or
out
loope
rcl
pop
cmp
ljmp
sub
faddl
pop
dec
sbb
jmp
add
fwait
dec
nop
sahf
push
push
fistpll
mov
xor
jmp
in
sahf
finit
pop
adc
iret
pop
xchg
lock
jmp
sbb
sub
iret
dec
outsl
jbe
xor
test
test
dec
and
mov
mov
and
inc
cwtl
aam
push
bound
nop
test
repnz
xchg
cwtl
mov
fdivl
dec
sbb
cmpsb
dec
in
dec
fcompl
sub
nop
outsl
push
mov
mov
lahf
lods
fadds
xor
jge
ljmp
or
cmp
ss
jle
daa
outsl
subl
add
sbb
or
loopne
mov
jecxz
ss
or
push
xchg
sbb
and
out
cltd
fiaddl
sub
xchg
sub
cmp
cmp
ljmp
xor
addr16
in
test
inc
popf
ja
testb
jbe
or
inc
sbb
push
in
sbb
cmp
xor
daa
aam
jge
clc
das
mov
pop
mov
loopne
jle
aad
sahf
mov
in
cmpsl
cmp
xor
dec
ss
push
push
subl
mov
mov
daa
and
pusha
enter
test
rorl
in
push
push
mov
mov
push
call
mov
in
test
into
mov
lock
jno
lds
or
scas
xor
mov
inc
and
sbb
movsb
adc
xor
adc
xor
inc
sub
loop
or
ja
pop
xchg
das
xor
mov
fcoms
cs
or
scas
and
loop
cmp
xchg
out
cmc
movsl
xor
stos
push
add
les
pop
cltd
ss
cmp
es
add
popa
xor
jp
jb
push
sbb
inc
out
lock
dec
xor
pop
adc
mulb
lock
loope
dec
mov
out
jg
stc
sarl
out
dec
cli
jo
test
jp
js
mov
data16
out
lret
loop
dec
out
pop
ljmp
pop
dec
mov
push
ljmp
inc
dec
jmp
fadds
dec
shl
or
xchg
data16
pop
xor
imul
fisubrl
rorl
nop
shl
stos
mov
push
addr16
mov
fnop
scas
dec
repnz
clc
fwait
jns
imul
adc
gs
in
adc
push
cmp
and
cmpb
jl
outsb
test
dec
push
insb
lcall
pop
dec
adc
inc
stos
and
sarb
mov
inc
jo
sbb
loopne
and
mov
ret
aaa
sbb
popa
movsl
cld
jle
loopne
int3
aam
lret
jle
std
mov
xchg
and
cld
inc
js
dec
mov
pop
scas
test
dec
pop
stos
dec
punpckhdq
jle
movsl
das
jns,pt
xor
sbb
rorl
dec
cmpsb
mov
push
stos
jl
roll
ss
loope
xchg
lahf
adc
jo
pusha
or
lea
push
out
dec
and
inc
addr16
loope
and
or
lods
fs
movsb
test
or
aaa
mov
jge
into
inc
cmp
jmp
mov
and
ds
js
arpl
push
inc
ljmp
popa
sub
sub
pop
adc
cmp
test
mov
mov
lods
dec
ficoml
xchg
out
inc
lret
add
arpl
hlt
insl
xor
out
and
sub
xor
arpl
int
jecxz
insb
imul
jg
iret
out
aas
popa
imul
xchg
hlt
add
mov
dec
cmpsl
sbb
jns
mov
sub
pop
xchg
dec
into
xchg
scas
jne
sub
cmp
out
gs
pop
cmp
test
sub
or
inc
les
or
pop
sub
out
in
movsl
dec
ljmp
push
lea
out
test
jecxz
fiadds
pop
xor
nop
push
cs
xchg
sbb
lds
aas
iret
sahf
sub
cli
add
insb
mov
push
movsb
or
jmp
lds
dec
in
enter
movsb
sbb
bound
dec
sub
pop
imul
dec
insb
pop
lea
stos
xchg
xchg
dec
aas
jmp
ljmp
sahf
jp
push
cs
mov
add
cmp
cmp
cmp
daa
dec
cmpsl
std
addr16
push
lock
mov
lea
pop
dec
pop
lds
lods
dec
in
outsl
sarb
xchg
lea
adc
in
aad
xor
int
and
subb
push
popf
cli
data16
adc
push
add
cmpsb
cltd
dec
pop
push
cmpsl
sub
fwait
push
inc
movsb
cmpsl
daa
xchg
push
insb
or
inc
lahf
kmovw
or
addr16
data16
test
dec
lds
push
dec
sub
icebp
pop
jmp
or
dec
pop
push
out
pop
and
repz
push
cmp
fsubs
rorb
outsl
pop
andl
mov
dec
sub
shlb
and
out
gs
cmc
es
outsl
and
popa
push
mov
add
jmp
mov
aas
out
add
sub
inc
xchg
leave
in
lods
mov
xchg
in
push
dec
data16
push
cmp
push
out
cmp
cld
or
outsb
sub
or
dec
push
inc
pusha
mov
test
xor
and
push
push
int3
or
pop
push
dec
out
sbb
scas
mov
rcll
mov
outsl
fmull
imul
and
jo
jns
jns
outsl
mov
adc
push
daa
int
xor
movsl
push
add
fucomp
js
stc
xchg
push
pop
and
xor
or
sbb
xchg
adc
cs
push
mov
nop
je
mov
sbb
shrb
mov
xchg
int3
fstl
in
arpl
push
push
push
out
jmp
stc
test
pop
jl
rol
xchg
das
sub
cmpsb
sahf
enter
bound
imul
adcb
pop
and
pop
in
test
gs
pop
ljmp
lahf
mov
xorl
aas
inc
out
adc
dec
insb
ds
ljmp
xor
mov
or
movl
mov
shrl
stc
arpl
sbb
scas
add
jb
lods
out
mov
sub
test
mov
mov
pushw
loope
cmpsl
xchg
xorb
insb
leave
call
or
pusha
pop
inc
inc
and
xchg
xchg
insl
pop
inc
inc
mov
aad
arpl
push
push
add
aam
cmp
ljmp
subb
test
cmpsb
jg
imul
bound
and
fsubs
pop
cmp
int
adc
je
insb
sahf
cmp
repz
stos
dec
in
mov
loopne
test
aam
mov
test
dec
dec
stc
pop
inc
sbb
test
int
xchg
aas
dec
pop
pop
push
lea
subl
ds
add
test
push
add
fcmove
lods
xor
rcl
insb
movsl
pop
ds
xor
jmp
jb
cwtl
sub
aam
or
scas
jecxz
pop
or
inc
ret
subl
sub
fisubrs
sarb
ss
jmp
sbb
inc
push
push
inc
pop
ja
bound
dec
lea
lahf
sbb
mov
pop
pop
add
nop
ret
mov
out
xchg
negl
mov
sub
jle
stos
std
repnz
cs
stc
inc
xor
loopne
fstpt
adc
xor
sbb
mov
inc
xchg
or
adc
sti
xor
and
push
hlt
cmp
out
xor
push
mov
add
pop
scas
or
xor
cmp
aaa
sub
push
je
and
mov
or
jmp
or
xor
mov
xchg
popa
cmpsl
push
push
xchg
mov
inc
add
push
dec
daa
loope
test
sti
inc
dec
xchg
mov
enter
ljmp
pop
or
je
and
jns
lret
test
scas
mov
pop
addr16
push
in
xor
cmp
push
fs
in
jle
push
ljmp
inc
es
or
sbb
mov
movsb
pop
mov
jmp
scas
call
mov
jg
push
in
cmp
in
pop
imul
mov
adc
imul
out
sub
fwait
je
xchg
iret
addr16
jle
or
cmp
dec
pop
daa
xor
add
and
cmp
mov
sbb
and
or
negl
jb
cmpsb
inc
or
or
daa
push
mov
cmp
sbb
pop
mov
roll
and
out
lods
out
mov
bound
add
mov
xchg
fs
lahf
cli
push
sub
or
data16
data16
xchg
dec
push
addr16
sub
and
lcall
push
ret
dec
shlb
xchg
arpl
mov
jle
insb
and
std
test
dec
push
lcall
sbb
fiaddl
cmp
push
lods
sub
lret
mov
cmp
clc
lock
add
lahf
add
push
stos
outsb
fisubrs
jecxz
inc
dec
mov
jns
xchg
sbb
push
xchg
sub
mov
push
lods
repnz
cmp
xchg
inc
outsb
ljmp
adc
mov
sub
inc
push
add
ljmp
clc
ficompl
jne
sbbb
dec
test
sbb
test
iret
lock
xchg
fists
sbb
test
lahf
insw
dec
mov
xor
add
insb
hlt
inc
mov
mov
out
sbb
xchg
xor
popf
add
cmp
loopne
frstor
test
outsl
std
cmp
pop
push
fsubs
fisubrl
or
cmpsl
loopne
and
std
add
add
mov
add
sub
cltd
and
loope
xor
cltd
ja
sbb
in
adc
fidivrs
daa
mov
filds
loop
aas
push
es
and
and
and
mov
mov
xchg
andl
out
inc
push
sub
call
push
push
mov
push
push
or
and
aad
mov
push
jne
jp
outsb
shrl
mov
xchg
subb
jmp
dec
cwtl
lock
inc
jo
into
sub
pop
push
xchg
add
cmpsl
xor
arpl
movsb
mov
idivl
add
sbb
lret
in
jecxz
mov
push
gs
lods
dec
popa
mov
es
sahf
outsb
pusha
imul
xor
xchg
xor
pushf
sub
jge
add
outsl
mov
push
jecxz
outsb
mov
or
out
adc
gs
mov
inc
sbb
mov
or
pop
pop
outsl
sub
cmpsl
inc
movsb
adc
adcl
mov
pop
aam
call
out
iret
test
push
dec
jg
or
mov
adc
xchg
cmc
mov
out
out
inc
imul
xchg
inc
bound
mov
test
mov
sub
or
aaa
test
inc
dec
test
push
fldenv
ss
hlt
push
test
addr16
pop
shr
in
pop
sub
inc
xor
sbbl
dec
sub
push
loopne
sbb
inc
jmp
pop
mov
sbb
xor
xchg
cmpsb
jg
inc
ror
in
push
sub
or
shrl
jmp
push
push
nop
pusha
fwait
sbb
mov
adc
sahf
xchg
cmp
addl
xor
pop
pusha
cmp
cmpl
mov
add
push
inc
jae
mov
jbe
add
pop
sub
xchg
in
imul
outsb
dec
mov
xchg
sub
and
xchg
add
stos
nop
and
mov
cs
jno
popf
mov
mov
sahf
sub
in
ss
paddd
in
stos
sbb
mov
xor
push
xchg
cmp
adc
call
in
imul
insl
mov
xor
data16
bound
ficoml
add
pop
push
xchg
mov
jl
andb
mov
gs
es
push
pop
inc
js
fstpt
aaa
ljmp
fwait
mul
pushf
pop
jae
dec
pop
pop
into
xchg
adc
push
dec
lds
aam
mov
mov
and
pushw
bound
inc
ror
ja
inc
dec
mov
enter
xchg
mov
in
shl
sub
daa
sub
pushf
outsl
push
imul
xchg
dec
addr16
cmpsl
push
or
lods
or
sbb
push
jnp
pop
add
insb
adc
scas
pushf
subl
mov
mov
test
ds
test
imul
lret
cmp
mov
rclb
xor
ja
add
pop
shll
fisubs
jne
inc
add
pushf
xor
dec
arpl
ljmp
outsb
imul
insb
add
sbb
adcl
cmp
push
bound
mov
repnz
dec
push
es
lods
roll
shrb
and
outsl
fcmovbe
fsubp
push
cwtl
sbb
in
jp
into
push
mov
pop
push
out
and
sub
fwait
sar
out
adc
pusha
leave
mov
insl
jg
xorb
imul
mov
inc
call
jmp
fsubrs
xchg
mov
loopne
daa
sbb
in
fnstsw
or
and
sahf
xchg
xlat
pop
add
sbb
pusha
jbe
pop
pop
adc
into
sub
cmpsb
mov
mov
mov
jmp
xchg
mov
adc
sub
mov
inc
sub
add
adc
mov
jb
cmpsb
jg
push
lahf
mov
xor
xor
push
xchg
or
sahf
or
push
fnop
fs
movl
stos
hlt
ret
pop
rorb
pusha
jp
mov
jmp
data16
lcall
popa
imul
int
jp
push
loopne
popf
lods
aam
mov
scas
pop
push
jl
popa
gs
cmpsl
adc
fs
shl
in
rcr
in
cld
and
mov
ljmp
lahf
xchg
xchg
loopne
and
sub
pop
fwait
xor
lcall
fstpl
int3
pop
movsl
pop
mov
xor
aad
popa
filds
push
bound
dec
cwtl
fwait
mov
aam
push
mov
pushw
movaps
test
aad
aam
and
dec
adc
jmp
test
cli
fs
inc
inc
cmp
mov
pop
cmpsl
out
icebp
mov
movsb
push
cmc
daa
inc
les
mov
inc
mov
out
bound
inc
dec
push
xlat
xor
jo
xchg
mov
and
mov
cmp
testb
and
mov
sub
and
xchg
shll
sbbb
shrl
and
sbb
mov
push
lret
mov
insb
js
mov
mov
call
sbb
iret
pop
rorl
pop
mov
mov
fcoml
mov
fistpl
fwait
jbe
mov
pop
outsl
in
stos
mov
push
dec
imul
xor
nop
xchg
sbb
mov
push
add
gs
or
cmp
rolb
mov
sub
mov
mov
cltd
pop
jp
push
jecxz
in
mov
xchg
or
xchg
sar
ljmp
shrb
test
mov
xor
pop
cli
cli
lock
fimuls
hlt
mov
sbb
js
xor
push
movsl
and
bound
adc
outsl
pusha
jp
repnz
xor
out
movsb
popa
or
shlb
outsl
xchg
cmp
ljmp
mov
xchg
cmp
mov
out
negl
test
or
clc
inc
mov
outsl
ljmp
or
pop
or
in
fisubrl
ja
jb
cmpsl
cmpsl
jbe
ret
pop
push
in
sbb
ljmp
add
shlb
adc
int3
lahf
inc
movsl
add
orb
test
or
outsl
mov
mov
push
pop
dec
jmp
xor
xchg
sub
push
leave
out
test
pop
sub
ja
out
inc
cmpsl
xchg
and
imul
fcomps
jno
adc
das
clc
mov
dec
inc
jnp
push
movsb
dec
jg
shrl
mov
xor
jl
jne
data16
and
cmp
mov
shlb
sub
cmpsl
imul
mov
mov
out
mov
push
test
adc
lahf
sub
jmp
rorb
push
out
add
fidivs
rolb
xchg
lock
push
in
dec
imulb
sub
and
fwait
insl
lret
mov
ds
pop
daa
gs
arpl
fiadds
movsb
pop
cmpsb
or
add
jecxz
aam
ret
mov
sub
dec
jns
add
xchg
adc
addr16
fmull
sbbb
cmp
mov
cmp
push
dec
mov
mov
push
dec
fwait
push
fistpl
inc
cwtl
adc
pop
sub
xchg
mov
sbb
data16
xchg
cmp
cmp
int
fisubl
pop
adc
jecxz
jmp
dec
xchg
xchg
int
xor
mov
or
push
push
cmp
cmp
push
cmpsb
enter
sbb
movsb
push
xchg
inc
mulb
sub
sbb
push
xor
aaa
cmp
push
xchg
push
sti
shll
in
push
mov
dec
test
imul
test
shlb
fsubr
test
aas
mov
or
adc
in
loopne
lret
sbb
lahf
sahf
adc
test
adc
in
xchg
popf
mov
xchg
xor
adc
into
ds
imul
mov
adc
jnp
mov
xchg
fidivrs
aaa
cmpsb
repnz
add
push
sub
xor
push
stc
arpl
mov
aaa
push
push
xlat
fs
and
in
add
test
das
push
sbb
in
xor
inc
mov
cmp
xchg
aam
sbb
mov
es
xor
call
sub
das
dec
push
jle
mov
sub
out
mov
sub
or
jo
in
outsb
in
sub
cmpsl
cmpsb
mov
pop
lcall
out
mov
and
fucomi
inc
jge
sub
sbb
out
cmp
and
sbb
js
xchg
sub
add
ret
shrl
shrl
add
mov
sbb
loope
nop
push
out
push
pop
cmpsb
pop
pop
aad
cltd
cmpsb
or
pop
fs
in
xchg
inc
arpl
int
in
call
xchg
pop
cmpsl
pop
cmp
fs
popl
cli
and
je
and
inc
fs
cwtl
xchg
jmp
and
es
and
rcl
sub
mov
dec
mov
inc
pop
imul
jmp
es
test
sub
inc
add
sarl
jp
xor
scas
and
push
push
xchg
pop
xor
es
mov
xor
cld
inc
mov
pop
in
ljmp
out
adc
ror
cmp
xchg
pop
xchg
pop
stos
inc
test
fwait
cmp
push
adc
fisttpll
and
mov
lods
nop
fisubrs
lret
enter
push
outsl
out
dec
out
and
xchg
lock
jmp
cli
or
sub
std
mov
jae
jae
sarb
mov
xor
or
push
xchg
add
dec
cmp
lock
test
dec
mov
add
dec
in
xor
sbb
in
dec
or
mov
mov
fsts
xlat
mov
pop
ss
inc
cmp
xchg
fdivr
or
lret
push
mov
fs
pop
sbb
sub
and
dec
sbb
out
sub
jmp
loope
daa
cmpsb
enter
decb
mov
imul
inc
push
cs
negb
xor
mov
stos
daa
es
and
fs
lahf
leave
arpl
inc
mov
sbb
cld
call
push
cmp
xchg
cmp
push
out
mov
das
jmp
add
ss
xor
daa
pop
pop
adc
mov
std
xor
lds
mov
jge
and
pop
cmpsb
movsb
shll
push
xchg
or
call
xor
out
lds
shlb
sub
fwait
push
fwait
push
push
pusha
pop
pop
xor
mov
es
movaps
clc
cmp
sahf
int
add
addr16
sub
adc
sub
jne
pop
popf
cmp
int
pop
out
dec
inc
push
shll
jb
sbb
enter
adc
inc
fwait
or
push
pushf
sbb
sub
filds
and
fs
sub
mov
pop
shlb
push
mov
inc
dec
push
sub
push
stos
movsl
inc
addr16
xchg
sarl
adc
lret
mov
daa
push
cmp
adc
and
mov
das
bound
jns
dec
pop
and
sub
sub
popa
adc
data16
pusha
pusha
adc
sub
or
adc
and
or
jbe
lods
lods
outsl
jno
es
mov
inc
pop
jns
mov
jge
xor
cwtl
lcall
mov
movsb
out
outsl
xchg
leave
js
arpl
mov
frstor
gs
or
ljmp
cwtl
cmp
lret
ret
add
rolb
lds
or
add
inc
cmpb
and
daa
and
popa
pop
clc
imul
and
xchg
dec
xchg
adc
mov
outsl
shl
shl
das
stc
cmp
add
jp
test
in
dec
sahf
or
cli
in
movsb
aam
ja
leave
xor
cmp
dec
cmpsl
fcomps
or
sub
daa
sbb
xor
rolb
stos
lcall
add
sub
xor
clc
jp
jp
jo
jmp
call
sub
mov
pop
bound
mov
xor
cltd
mov
fimuls
test
lahf
sbb
fsubrs
sub
imul
cltd
pop
es
in
pop
fs
mov
sbb
dec
fs
popa
outsb
cmp
inc
or
repnz
sub
pop
push
in
cli
cmpsb
dec
mov
out
inc
lret
cld
xor
fisttpll
push
pusha
mov
push
sbb
push
iret
sub
in
addr16
lods
inc
ljmp
mov
push
xlat
outsl
in
cltd
adc
fcomip
fisttps
mov
in
mov
into
ljmp
mov
jbe
dec
inc
xlat
fsts
pop
xchg
fistl
cmp
push
jo
insb
push
fadd
mov
push
leave
daa
xchg
imul
sub
pop
ret
movsb
push
push
aad
test
jno
mov
scas
scas
or
push
xlat
sub
cs
cli
cmp
cmp
sbbb
dec
pop
fsubs
or
xchg
sbb
pop
pop
add
fildll
fisubrs
mov
and
test
jecxz
movsl
aas
loope
imul
inc
sti
mov
adc
in
sbb
adc
fnstenv
mov
push
pop
inc
sub
xchg
add
adcl
mov
dec
xor
sub
adc
jg
push
ds
hlt
jmp
push
aas
xor
shll
notl
push
cmp
sub
lods
out
out
inc
sub
aam
xchg
and
push
not
jo
sbb
arpl
cmova
inc
popa
sub
xchg
bound
push
add
test
pusha
imul
aam
jmp
push
mov
dec
iret
and
mov
fwait
jbe
mov
jg
cmpsb
sbb
cmp
icebp
ret
cmpsl
cmpsl
jo
xor
dec
in
outsb
in
pop
cmpsl
adc
sbb
lds
sub
loopne
mov
add
dec
fdivp
push
fwait
mov
mov
popa
fstps
icebp
in
jmp
mov
mov
lea
sbb
jbe
sub
in
cli
sbb
mov
pop
mov
shll
outsl
sub
dec
fbstp
adc
push
in
ds
out
into
inc
loope
inc
cltd
pop
imul
xor
repz
push
sbb
movsb
dec
push
mov
pop
jns
jp
mov
lods
or
int
test
lock
cmpsb
xor
or
in
sbb
push
jp
nop
shrb
cmpsl
mov
and
lock
subb
jne
mov
mov
aam
mov
or
push
lret
xor
add
aad
das
iret
mov
mov
pop
rolw
push
pop
movsb
cmpsb
mov
and
fwait
mov
add
or
sbb
test
xchg
imul
dec
insl
lods
scas
in
in
repnz
or
stos
push
lea
mov
fstl
les
jmp
jl
mov
xor
cltd
out
cld
mov
mov
mov
fistps
mov
xchg
inc
sbb
aaa
push
jo
xor
push
scas
loope
pop
das
out
dec
scas
imul
sti
mov
xchg
ss
cltd
daa
jmp
lcall
or
jecxz
sbb
and
andl
imul
or
lret
cmp
mov
js
mov
sub
rolb
insb
jo
pop
repnz
pop
sahf
sub
flds
push
cmp
sbb
xor
push
push
pop
jecxz
cmp
push
pusha
sbb
pop
jnp
ljmp
lock
jne
aam
and
movsb
repnz
jl
xchg
jbe
ljmp
inc
push
rcll
adcb
cs
imul
inc
sahf
test
stos
clc
pop
xchg
or
cmp
jbe
cli
stos
dec
sbb
lods
cmpsb
jp
insb
xor
mov
and
rcll
or
add
jne
cmpsb
mov
dec
xchg
es
test
push
or
daa
rcll
sbb
lcall
arpl
inc
test
aad
cmpsl
arpl
movsb
insb
mov
mov
imul
or
inc
fmull
inc
loope
mov
lret
jle
out
rcll
and
sub
jge
mov
add
push
in
movsl
xbegin
lods
into
dec
ja
imul
mov
pop
icebp
aaa
dec
in
loopne
pop
dec
cmpsl
dec
pop
jmp
filds
call
in
imul
out
jns
clc
dec
sub
aaa
xor
xchg
inc
cmp
addr16
pop
sub
sbb
xchg
sub
shll
movsb
xchg
out
sbb
xchg
das
lea
xor
fsub
ds
mov
mov
jo
enter
and
gs
lock
push
xchg
ss
push
mov
lcall
jmp
lods
mov
ror
lcall
pop
mov
or
aam
pop
sbb
lcall
lock
pusha
loop
pop
xchg
in
sbb
mov
mov
iret
bnd
pop
inc
sub
loope
sub
test
lahf
sbb
mov
insl
into
in
sub
mov
decb
sub
cli
sub
cmp
push
xor
mov
aam
ss
xor
xor
dec
in
fs
adc
inc
mull
jmp
fxch
and
jo
sar
inc
mov
pushw
mov
push
out
lcall
jl
xchg
xor
dec
adc
add
pop
and
das
mov
pop
jbe
repnz
adc
out
sbb
jecxz
or
jnp
pop
inc
fwait
push
mov
and
bnd
xchg
mov
push
iret
jne
and
mov
outsl
out
mov
jae
sub
mov
popf
inc
orb
cmpsl
js
out
data16
xor
outsl
fsubrl
push
inc
sbb
hlt
js
push
jnp
xchg
outsl
arpl
xchg
jnp
sub
mov
lcall
jnp
lret
dec
push
sti
adc
jb
in
ss
loope
xchg
movsb
mov
sub
mov
dec
mov
pop
scas
mov
add
sub
lods
mov
and
pop
cmpsl
int
or
mov
inc
dec
xor
cmpsb
xor
aad
ljmp
ret
hlt
out
sarb
cmp
mov
arpl
data16
popa
cmp
sahf
aaa
jne
push
hlt
sbb
pop
test
mov
fs
aaa
pushw
lock
sub
mov
mov
test
jne
stos
pusha
xor
jp
cmp
lods
gs
movsb
inc
mov
sahf
hlt
outsl
jne
ss
test
js
add
mov
sahf
or
stos
push
test
push
popf
cmpsb
in
rcl
mov
shr
scas
cs
andb
and
add
mov
fsub
xor
lock
fiadds
clc
adcb
test
scas
mov
out
std
pop
out
mov
insb
aad
stos
push
movsb
sub
push
js
cmp
sub
and
cmp
jne
cli
lahf
divb
je
pop
addr16
jmp
inc
sub
fs
lahf
js
or
sub
or
jae
fwait
sti
pop
dec
xchg
test
bound
outsl
or
push
and
loopne
call
xor
jne
mov
shl
jne
fimuls
loop
mov
sub
xor
pusha
jmp
aaa
pop
push
or
pop
repnz
pop
faddl
fcoml
adc
push
je
jne
sar
fs
adc
sub
maskmovq
notl
imul
sti
mov
or
pop
out
xchg
rolb
lret
fiaddl
or
mov
jmp
sub
movsl
popa
shld
outsb
loop
mov
int3
sub
stos
lret
sub
push
js
or
cmp
or
xor
dec
jns
pushf
popa
sbb
adc
icebp
lds
arpl
xor
adcb
mov
in
lret
cmp
leave
in
rcrl
and
jo
shl
into
gs
les
push
jmp
dec
out
dec
xchg
adc
outsl
adc
and
sub
insb
roll
push
aad
lock
pusha
ret
inc
pusha
add
shrb
test
xor
sbb
sub
dec
es
xchg
push
xor
aam
adc
in
aad
dec
cmp
and
mov
dec
fwait
cld
sbb
mov
sub
ljmp
sbb
fs
mov
add
shll
shlb
push
sub
jne
and
pop
adc
std
sahf
mov
mov
xchg
xor
push
cmp
sahf
push
fidivrl
loopne
js
popf
lods
or
sbb
push
inc
inc
sub
sub
imul
pop
pop
dec
test
ja
dec
pop
dec
imul
xlat
mov
mov
sbb
scas
and
pusha
test
mov
dec
and
xor
mov
pop
loope
xlat
stc
shrb
dec
mov
and
adc
arpl
int
inc
pop
aad
pop
scas
iret
test
out
push
scas
popf
mov
test
dec
jnp
outsl
push
fucom
xchg
idivl
outsb
xlat
sarl
push
and
fmuls
push
stos
pop
push
popa
sbb
mov
and
imul
ljmp
adc
and
pop
aas
dec
mov
add
iret
data16
pop
lods
mov
imul
ss
sahf
mov
movsl
pusha
sbb
sub
lds
ljmp
or
sbb
addr16
rcrb
dec
repz
jbe
lock
pop
dec
lea
fdivrl
jnp
sarl
cli
pop
sub
or
mov
jmp
push
fdivs
movsb
iret
pop
jmp
clc
test
loopne
push
adc
mov
mov
std
inc
cmp
popf
filds
jae
inc
mov
dec
sub
int3
inc
xor
jl
fiaddl
es
mov
outsb
in
mov
xor
and
jecxz
cli
inc
sub
xchg
repz
shll
xchg
xor
push
pop
vpaddw
and
mov
arpl
fisubs
loop
sti
into
dec
frstor
mov
sub
outsl
popa
push
cmp
sar
cmpsl
stc
jmp
adc
lret
pop
mov
pop
mov
or
mov
std
adc
ljmp
adc
gs
mov
ja
or
mov
pusha
pop
stos
adc
xchg
cltd
inc
and
xchg
incb
inc
rcr
add
adc
xchg
mov
gs
insb
ja
popa
fstpt
xchg
xorb
add
xlat
data16
rcl
dec
test
enter
xlat
cmp
xchg
mov
daa
push
pop
sub
shr
int3
into
dec
push
stos
mov
rclb
push
imul
bound
lods
iret
xchg
and
arpl
pop
cwtl
cmp
stos
adc
sbb
xchg
jae
pop
scas
std
sahf
pop
adc
sbb
enter
push
iret
push
fs
push
mov
call
cld
cmc
fcomps
mov
add
decb
dec
mov
inc
mov
xchg
bound
sbb
loopne
enter
ret
or
mov
dec
gs
imul
ror
fcomps
movsb
sbb
push
mov
lock
dec
mov
data16
out
lds
push
js
xor
push
lcall
ret
shr
fldenv
mov
aam
shrb
sarl
jbe
movsl
popa
push
out
es
fstpt
inc
enter
bound
mov
mov
and
jp
or
stos
repz
cltd
lods
mov
adc
int3
dec
nop
and
inc
lahf
cmp
rorb
sbb
dec
jbe
xchg
mov
iret
push
cli
pop
sbb
inc
data16
sahf
cs
shll
cli
call
adc
xchg
jge
aas
push
ret
cmc
pop
aas
test
aas
ja
dec
sub
lea
call
mov
sbb
push
inc
sub
ja
mov
cmpsb
mov
or
sbb
mov
or
jns
xchg
fnstsw
and
call
push
ret
adc
add
movsl
jmp
cmp
ret
sbb
sub
jno
scas
out
lods
or
aam
cmpsl
pop
das
jae
in
outsb
movsl
push
jp
shll
rcl
and
adc
add
push
fstpl
ret
imul
or
push
imul
or
lret
or
out
sub
or
addr16
or
stos
daa
jns
in
ret
arpl
xor
aam
sbb
in
aad
adc
arpl
fcomp
push
sub
in
mov
cmp
and
xchg
roll
ss
int
jno
mov
mov
loop
pop
es
call
xchg
ja
jns
jb
insb
add
dec
cmp
adc
sarl
mov
cmp
lods
addr16
mov
xor
xchg
mov
xor
push
jp
inc
out
rcl
enter
dec
adc
jb
add
movsb
stos
and
dec
les
mov
inc
xor
data16
cmp
loope
out
data16
loope
test
pop
jle
bound
fdiv
mov
pop
int3
add
xchg
fbld
adc
cwtl
pop
xor
xor
pop
push
gs
mov
or
fiadds
ljmp
out
push
mov
xchg
and
xor
cmpsl
dec
jl
xchg
inc
sbb
xchg
addr16
pop
setbe
add
xlat
std
mov
fistl
lret
popa
bound
or
inc
out
in
fstps
test
out
push
popa
fidivs
xchg
rcr
dec
scas
mov
mov
lds
hlt
push
lea
mov
dec
push
dec
fs
popa
sbb
mov
mov
push
stos
mov
arpl
jno
jecxz
push
adc
xlat
lods
sub
lahf
or
inc
sub
pop
inc
jns
jecxz
loop
cld
and
jmp
ja
imul
js
sub
scas
in
lret
cmp
je
and
loop
inc
ljmp
data16
dec
xchg
ficomps
jle
jecxz
andb
js
shl
and
sbb
popa
xchg
inc
sbb
jnp
xor
andb
jns
push
inc
outsb
mov
cmpsb
popa
orl
mov
dec
cmp
dec
push
pop
push
xlat
dec
out
shll
mov
and
push
sbb
cmp
es
cmp
es
int3
xchg
data16
jnp
rcl
jns
cmp
sbb
dec
pop
fcmovne
aad
cmp
in
pop
xchg
cmp
inc
sub
inc
or
mov
mov
add
inc
fimuls
and
dec
enter
dec
dec
mov
andl
popa
and
lock
insl
or
addb
cwtl
shlb
xor
mov
fsubrs
push
xchg
fnstenv
adc
jecxz
mov
pop
push
idivb
jbe
mov
pop
mov
mov
mov
mov
cmp
fs
ret
js
fcmovu
stc
sub
mov
outsl
outsl
xor
call
xchg
xchg
push
cmpsl
hlt
xchg
out
shlb
das
xchg
imul
outsl
pop
ja
push
adc
aad
es
and
call
insl
sbb
mov
xorl
add
sub
cmp
daa
inc
cmp
sub
imul
xchg
adc
jns
test
push
test
scas
aaa
xor
leave
sub
or
pop
sbb
sbb
repz
sbb
jg
stos
cmpsl
xor
int
int3
shll
movsl
xor
ret
push
push
sarl
cmp
aam
shll
jmp
scas
xchg
sbb
fstpl
or
mov
lahf
dec
movsl
in
pop
dec
sub
xchg
mov
mov
jle
icebp
pop
push
sbb
push
pop
lds
lret
jae
in
inc
out
sahf
sub
pop
loope
adc
pop
repz
pop
mov
cmp
in
add
mov
sub
shll
popa
and
xor
xor
fs
xchg
pop
mov
mov
push
and
in
adc
subl
shl
in
jp
fs
leave
jmp
add
data16
push
push
test
mov
out
inc
cmp
sub
popa
jg
cmpsb
mov
cmp
test
dec
xlat
pop
hlt
negb
ljmp
jge
cmp
arpl
sub
stos
movsl
lods
out
cli
or
and
cmp
nop
daa
and
lea
jbe
xor
out
stos
and
xor
and
in
push
jnp
cmp
or
ljmp
mov
and
dec
test
add
sahf
js
xor
pusha
lea
xor
sub
and
negb
push
mov
fnstcw
test
xor
sub
pop
or
mov
loop
cld
les
xchg
pop
bound
fisubrs
ficomps
inc
bound
addr16
add
es
aaa
mov
shrl
in
xchg
test
push
jmp
add
inc
inc
or
cmp
or
sbb
repnz
xchg
shll
cmp
xlat
cmp
cld
cmpsb
jp
or
subb
ljmp
pop
push
pop
or
pop
out
pop
loope
xchg
in
push
test
test
subb
bound
out
pop
fiadds
in
popa
push
push
and
xchg
cltd
jge
in
add
enter
fstl
and
shll
cmp
push
cwtl
mov
fstps
fmull
sahf
pop
jno
in
jmp
shl
xor
adcl
jo
cmp
xchg
mov
pop
jo
add
sbb
sbb
ljmp
ljmp
cmp
or
mov
int
and
adc
mov
popa
cmp
fsts
fiaddl
push
in
pop
cmp
ret
pop
rolb
mov
ljmp
xor
xchg
jecxz
es
xchg
fisubrs
ja
xchg
xchg
cld
push
add
push
xor
addr16
das
adc
add
in
in
cs
adc
push
dec
das
jo
xchg
mov
sub
shrl
clc
in
stos
fists
lods
xlat
inc
xor
sbb
pop
push
cmp
pushf
add
outsb
js
scas
les
xor
push
pop
loop
les
in
stos
jmp
jne
and
mov
cmp
daa
xchg
movsb
fsubrl
xchg
xchg
sub
dec
fs
insb
shl
jnp
or
loopne
pop
push
xchg
adc
dec
mov
xor
or
cmp
mov
push
mov
fldenv
rolb
out
inc
mov
ds
xor
and
xor
shlb
data16
movsb
and
iret
cmpsl
out
pop
imul
loopne
sbb
adc
sbb
push
add
cmpsl
xchg
lds
sub
cmp
or
fwait
stos
enter
cwtl
arpl
gs
push
cmp
int3
dec
js
cmpsl
cmp
stos
push
shlb
mov
inc
frstor
fwait
mov
push
push
mov
scas
push
push
and
add
mov
jp
cmp
sbb
cmp
pop
clc
dec
popf
or
dec
pop
loopne
xchg
push
jg
inc
inc
mov
xchg
push
popa
jl
shll
xor
sub
movsb
pushf
dec
pop
in
add
pop
push
mov
ds
shlb
rclb
popa
or
fs
dec
loop
shlb
push
and
test
leave
inc
inc
mov
leavew
cmc
rcrb
movsl
mov
add
sub
icebp
aad
push
bound
jo
pop
addr16
push
push
and
aam
adc
mov
rcrb
xchg
xor
enter
leave
leave
pop
push
filds
mov
push
lret
lret
cmpsb
sub
dec
pop
daa
xchg
jns
xchg
jl
adc
adc
shll
jae
pop
aam
xor
clc
int
and
iret
rorl
pusha
xor
inc
leave
ret
sub
aad
xchg
imul
jle
int3
iret
pusha
xchg
mov
fs
pop
lret
pop
arpl
stos
fiaddl
clc
and
push
in
mov
js
ljmp
loopne
in
push
fidivrs
inc
scas
imul
idivl
or
cmpsl
jmp
out
xor
xor
jmp
aaa
loop
ds
sub
inc
push
test
jmp
int3
mov
pop
sbb
or
or
mov
dec
and
cmp
insl
je
dec
frstor
fisttpl
pop
cs
xor
adc
adc
xor
jecxz
xor
push
adc
int3
ds
je
push
push
sbb
mov
jp
ss
dec
pop
sbb
or
and
cmp
push
dec
sub
rolb
adc
arpl
daa
bnd
push
bound
ljmp
icebp
xchg
mov
dec
mov
pusha
mov
rcrl
push
dec
pop
adc
sbb
push
or
push
push
inc
ds
hlt
enter
test
add
addr16
pop
adc
push
or
inc
and
pop
fbstp
add
mov
lds
add
xchg
inc
lcall
cmpsb
movsb
inc
jge
add
sti
lods
and
and
lahf
dec
jb
popa
ja
and
cli
jno
sbbb
xchg
ret
shl
lock
int
lret
loope
lock
pop
into
ret
inc
mov
cmp
lret
add
adc
test
rcl
push
xor
add
sub
adc
lahf
mov
inc
test
imul
jg
sub
outsl
push
xchg
push
out
inc
xchg
sub
data16
and
lds
out
mov
mov
mov
int
imul
outsl
push
xchg
dec
icebp
jbe
xor
pop
or
fnstenv
inc
cltd
cltd
cmpsl
dec
dec
iret
pop
popa
pop
orl
fs
xlat
push
insb
mov
sub
pop
lds
cmp
fwait
mov
push
imul
aas
mulb
ja
dec
jl
xor
jmp
hlt
push
add
push
mov
fsts
js
push
push
adc
or
pop
sarl
fldenv
fs
mov
lahf
push
cld
jecxz
push
mov
dec
outsl
out
xor
js
add
cld
bound
sub
or
lcall
inc
lahf
js
dec
cmp
loop
mov
sub
fldenv
pop
lcall
xchg
jge
push
imul
in
fwait
mov
dec
jecxz
pop
fcom
dec
dec
xchg
sbbb
cwtl
imul
adc
and
mov
or
in
in
jns
jge
pop
mov
insl
cmp
mov
or
sub
mov
add
sahf
mov
inc
movsl
sub
and
inc
sub
cmp
cmp
lahf
jg
movsb
loopne
js
mov
lret
xchg
call
xchg
imul
cwtl
fwait
loopne
out
cwtl
cmp
jl
inc
mov
jp
pop
and
add
mull
pop
outsl
push
mov
mov
ja
and
mov
jg
push
jp
xor
shll
mov
mov
out
ret
jge
or
imul
aad
jno
pop
out
push
jbe
ret
lahf
push
mov
push
mov
ret
inc
mull
aad
and
out
jle
mov
aad
push
or
testb
mov
sbb
out
test
adc
imul
jge
inc
pop
push
dec
and
pop
sbb
test
or
hlt
in
mov
jns
call
pop
dec
jle
popa
cmpsb
and
inc
mov
divb
pop
mov
stc
inc
es
xor
dec
js
orl
repnz
mov
lahf
xchg
call
shll
mov
dec
adc
xor
lock
outsl
and
jle
enter
dec
mov
or
gs
sbb
lahf
pop
imul
inc
sbb
pop
sbb
adc
or
dec
push
and
shll
stc
adc
mov
cwtl
pop
lods
aam
jle
mov
imul
add
mov
inc
lock
push
push
pusha
xor
add
adc
xchg
addr16
shll
ret
test
pop
sti
adc
pop
aam
mov
add
pushf
idivb
dec
cmpsl
subb
adc
fildll
aam
in
testb
fldl
aas
inc
push
int
mov
dec
or
sbb
loopne
aas
mov
mov
sbb
pop
sub
dec
test
repnz
xor
or
push
mov
lock
dec
xchg
ret
sub
cmpsl
popf
mov
mov
push
xor
jle
ret
jae
xlat
xor
test
pop
repz
push
leave
pop
lods
xchg
dec
mov
inc
js
cmp
push
sub
jno
dec
shll
mov
add
in
sbb
sahf
fwait
mov
addr16
mulb
in
jnp
dec
add
adc
xchg
xlat
cld
mov
cmpsl
dec
add
xchg
pop
in
jg
popa
lret
push
pop
inc
enter
sbb
loope
mov
sub
jmp
jne
outsb
aaa
mov
cmp
push
push
jo
inc
mov
int3
es
mov
sbb
push
or
hlt
pop
pusha
popa
jae
sub
dec
insl
fstps
adc
pop
lcall
xchg
adcb
nop
lcall
push
pop
imul
outsb
cmpsl
cmp
push
jmp
nop
clc
jmp
shr
pop
push
adc
sub
push
sbb
inc
mov
addr16
mov
adc
sbb
cltd
and
push
jg
pop
inc
fwait
jmp
dec
nop
xchg
mov
inc
das
pop
lcall
int
xchg
cmp
jno
sub
xchg
cld
fwait
cli
scas
push
mov
inc
inc
inc
mov
stos
loope
loopne
mov
cmp
add
push
iret
add
sub
int3
and
cli
mov
cmc
shll
fsubrl
or
pop
mov
push
xor
fs
dec
lock
mov
les
mov
movsb
dec
pop
sub
lcall
outsl
scas
fsqrt
push
mov
data16
mov
inc
push
leave
sbb
xchg
ret
out
scas
testl
mov
std
inc
inc
xor
test
int
lahf
push
adc
pop
or
stos
pop
pop
push
aam
scas
pop
xchg
pop
sbbb
in
cwtl
push
sub
mov
and
pop
lret
scas
mov
cmpsb
pusha
xchg
mov
test
or
add
lahf
ds
call
lods
pop
inc
mov
jp
mov
xor
add
clc
mull
pop
call
movsb
leave
in
add
es
or
in
push
pop
and
testb
jo
or
out
mov
dec
out
add
pop
mov
mov
adc
push
fidivs
call
lock
cmpsl
iret
pop
cmp
sahf
sub
cmp
jns
mov
arpl
lock
pusha
sahf
xchg
ja,pt
stos
insb
pusha
cld
fstpl
scas
gs
ss
push
push
loope
ljmp
mov
cmp
inc
pop
fistps
data16
dec
xchg
pop
enter
sub
sahf
xor
and
sub
test
dec
xchg
mov
xor
scas
in
jnp
daa
push
xchg
test
out
mov
out
push
inc
loope
imul
and
aas
pop
rcrl
rorb
push
dec
push
pop
push
mov
fwait
outsl
mov
mov
pop
shll
jns
pop
iret
leave
pushw
test
push
sub
xorb
fiaddl
or
sbb
call
daa
adc
push
cli
sbb
popa
popf
out
in
mov
jmp
sbb
mov
push
in
cmpsl
iret
jo
jl
xchg
jp
sbb
in
leave
lds
mov
and
in
in
xchg
add
in
les
mov
sub
negl
add
shrl
outsl
mov
pushf
outsb
and
push
mov
mov
fwait
adc
lret
hlt
pop
popf
xchg
es
mov
push
clc
fs
xor
js
mov
cwtl
xchg
test
xlat
jl
test
mov
movsb
data16
movsl
test
inc
loop
rclb
cmpsb
jno
pop
add
pop
jae
mov
das
fcomps
andb
addr16
cs
sahf
add
fcmovnbe
gs
fsqrt
jmp
daa
xchg
xorl
or
sbb
adc
xchg
faddp
imul
xchg
popa
pop
sahf
fcompl
imul
or
stos
leave
hlt
cli
cld
stos
or
test
aaa
dec
or
inc
subl
add
adc
pop
mov
test
mov
xchg
cltd
or
outsb
push
dec
sub
int
adc
shl
and
mov
cld
push
jp
shlb
and
sbbb
lds
in
dec
enter
mov
and
fs
sbb
fcoms
js
fidivrs
fidivl
ljmp
jno
div
lret
aam
bound
movsl
mov
shr
adc
lods
push
xor
lock
mov
pop
dec
popa
clc
xchg
dec
orb
gs
and
int
mov
sub
and
repz
push
dec
and
cltd
adc
add
in
addr16
jno
setg
add
fwait
bnd
xchg
adc
mov
les
xchg
pop
push
mov
gs
push
sub
test
push
xor
ljmp
outsl
in
sbb
loopne
adc
and
dec
sub
je
xchg
lods
cltd
or
inc
or
outsl
jno
popa
shll
or
xchg
rcll
int
mov
pop
daa
pop
mov
test
jbe
jmp
sti
xchg
stos
out
cwtl
ljmp
outsl
jecxz
cmp
sub
inc
loop
ret
into
outsl
cmp
test
adc
aam
fucom
rol
mov
addl
adc
les
cmp
add
test
cmp
mov
push
test
or
sahf
cmp
and
mov
iret
mov
xor
call
jns
lret
push
pop
push
pop
cs
sbb
dec
xlat
loop
inc
sbb
int3
inc
xor
push
mov
inc
bound
scas
inc
push
cmp
mov
sbb
xchg
mov
sbb
dec
cmp
dec
mov
cmp
adc
add
rorl
pop
xchg
test
in
mov
movsl
outsl
mov
pop
sbb
bound
sub
dec
lds
and
inc
mov
xor
and
pop
pop
xchg
mov
jmp
xchg
jmp
adc
test
cmp
sub
fsubs
add
fistl
adc
xor
lret
sbb
ds
pop
mov
xor
xor
ja
fs
pop
test
insb
push
xor
rol
out
fdivrl
fs
cmp
enter
lret
test
mov
cmpsl
icebp
xchg
xchg
jmp
cs
in
sarl
ret
xchg
add
inc
push
daa
in
sbb
add
xchg
call
mov
adcb
ret
pop
outsb
out
sti
push
call
scas
and
shlb
or
xchg
push
sbb
sbb
pop
stos
cmp
cltd
push
sti
aam
clc
mov
stos
adc
jne
loop
pop
shlb
in
ja
xor
sub
cli
imul
adc
insb
loope
js
dec
jmp
inc
lods
lea
out
or
lds
test
pop
fldcw
pop
dec
pop
test
xchg
and
sub
bound
xchg
pop
xor
test
xor
dec
dec
sahf
cmp
sub
cli
scas
test
jne
adc
jp
xlat
jle
xchg
sbb
mov
bound
jmp
or
cmpb
aad
push
lods
fmulp
fidivs
dec
shll
push
cli
xchg
aad
mov
lret
pop
stos
fnstsw
sub
in
xchg
mov
mov
pop
sarb
jmp
lods
ljmp
pop
jg
dec
lds
mov
shll
inc
call
push
xor
mov
clc
dec
pushf
fwait
sbb
mov
lea
mov
in
mov
xchg
jnp
add
dec
std
and
enter
add
enter
and
jp
adcl
xchg
rorl
pop
adc
repz
inc
xchg
mov
or
xchg
adc
loop
aam
push
jns
rclb
int
out
mov
dec
and
sbb
rcl
fadds
out
push
js
mov
int3
loopne
loope
and
and
pop
push
jp
dec
ja
bound
mov
data16
push
cmpsl
imul
loope
es
fcom
jae
xor
mov
pop
xor
adc
xchg
xlat
push
pop
cmp
xor
mov
icebp
jle
push
out
and
icebp
fcomip
lods
mov
push
data16
push
bound
dec
xlat
pop
in
es
push
ficomps
lods
mov
daa
xor
fists
ljmp
loopne
sub
push
aad
mov
push
mov
or
inc
adcl
in
in
xchg
inc
andb
js
lock
adc
xchg
inc
clc
lret
clc
sahf
aam
int
add
or
stos
sbb
popf
cltd
cmp
adc
dec
fldcw
xchg
cmp
mov
es
pop
enter
add
in
mov
and
test
xor
lods
addb
leave
or
in
mov
sub
inc
lods
push
mov
loope
popf
jae
push
movsb
mov
andb
cltd
sub
cmpsb
dec
cli
sub
dec
in
push
or
sahf
dec
push
pop
ljmp
loope
fs
cmpsb
push
mov
pop
pushf
stos
mov
movsl
dec
and
loope
imul
lcall
sbb
cld
aad
dec
pushf
test
les
jmp
ss
cmp
pop
jae
add
leave
jge
add
into
mov
inc
insb
imul
xchg
xor
push
test
mov
add
hlt
mov
ret
movsl
outsl
js
lods
out
push
cli
lds
les
xchg
xor
fisubs
in
sbb
fimuls
mov
lret
push
aas
xlat
stos
mulb
cmp
pop
test
sub
loopne
push
pop
jns
jmp
inc
in
mov
push
mov
dec
push
repnz
jge
mov
shrb
xchg
lret
xchg
test
cli
imull
xor
sbb
scas
mov
mov
push
or
gs
cmpsb
push
lret
dec
mov
movsl
sub
in
jmp
nop
cmp
cmpb
stos
adc
jp
xor
add
out
xchg
jbe
rol
push
jle
dec
dec
out
push
loop
js
mov
inc
lea
add
push
enter
inc
sub
mov
arpl
fildll
lcall
inc
bound
push
arpl
push
fldenv
loope
gs
xchg
mov
into
dec
lret
fmuls
xlat
lods
ss
inc
in
cmp
pop
fcmove
xchg
push
inc
mul
xchg
cmp
xchg
cs
inc
xor
cmp
pop
jp
cltd
lods
incb
cmp
insl
mov
vpmacssdd
inc
call
movsl
pop
push
dec
cmp
sub
mov
push
popf
fists
pop
aaa
lods
push
push
inc
cmp
mov
jle
add
loopne
xor
cmp
in
out
popw
repz
mov
pop
xchg
dec
jno
jnp
inc
jnp
and
and
adc
in
popa
jne
out
or
stos
hlt
sbb
frstor
push
cmp
outsb
push
stos
adc
test
cmp
and
dec
lcall
movsb
addb
subb
les
and
pop
clc
mov
pop
push
xor
cmpsb
popa
je
mov
arpl
jo
jge
adc
xorb
sbb
in
cs
pushf
lcall
addr16
mov
cmp
adc
jns
stos
lds
fists
dec
dec
xor
je
call
aam
aaa
xlat
out
mov
sbb
mov
test
mov
jns
sub
mov
in
adc
movsl
cs
adc
adc
fnstcw
adc
and
mov
iret
xor
sub
pop
iret
fldcw
jmp
xor
or
push
jne
mov
test
mov
xchg
xchg
int
enter
sarl
iret
push
and
arpl
pop
push
cli
ret
orb
sub
jl
cltd
or
daa
jmp
jg
push
mov
xchg
cmpsb
xchg
inc
testb
out
rcrl
jg
adc
pop
dec
and
es
jp
movsl
inc
xor
mov
or
push
in
dec
loop
sub
out
sub
mov
aaa
dec
fucomp
xor
push
add
aad
loope
out
push
popa
jae
pop
pop
or
scas
clc
test
mov
cltd
pusha
out
js
mov
pop
xchg
rclb
xor
xchg
es
xlat
jg
and
mov
test
xlat
roll
xchg
dec
push
push
adcl
pop
aad
add
jecxz
imul
sbb
test
sbb
xor
pop
push
test
sub
xor
std
push
popa
outsl
jecxz
in
sub
insl
push
adc
or
or
inc
add
fnstenv
movb
mov
sub
fsubs
sub
popf
aad
hlt
sub
je
loope
push
clc
jle
hlt
fisubl
shl
lret
add
mov
clc
xlat
and
xor
call
fldl
call
insb
pop
mov
inc
aaa
push
xor
ja
dec
lds
cs
push
popf
xor
cs
aam
mov
pop
jno
push
lret
aad
push
arpl
es
and
andb
iret
cmp
inc
sbb
lods
inc
pusha
loopne
pop
and
pop
in
aad
xor
shrl
cmp
push
movsl
mov
lock
or
mov
jns
dec
imul
stos
xchg
mov
push
movsl
data16
popa
push
dec
std
xlat
cmp
movsl
xor
pop
leave
shll
pop
jecxz
push
mov
xchg
mov
add
sbb
push
enter
mov
or
shrb
scas
pop
cmpsb
test
add
adc
jle
ret
pop
mov
sub
pop
std
push
inc
add
jl
lods
or
sub
pop
adcb
jmp
cmp
loopne
mov
test
add
je
leave
fucomp
dec
mov
movsl
sahf
shr
mov
pop
jmp
sbbl
test
dec
imul
cmpsb
addr16
int3
outsl
push
push
insb
cli
sub
fs
vpsubb
jns
mov
in
loope
clc
jge
loopne
xchg
jl
scas
pop
rep
pusha
pop
ds
push
xor
fsts
pop
shlb
cltd
push
xlat
mov
push
sub
add
lock
popa
xchg
je
call
mov
aas
mov
daa
xchg
push
mov
xchg
fiaddl
pop
aas
int3
or
stos
dec
lods
sub
aaa
push
ljmp
mov
sbb
push
fiadds
xor
or
add
lock
xor
cld
fsts
inc
inc
pop
dec
inc
or
out
inc
mov
fcmove
stos
cld
data16
dec
cltd
aam
push
lock
xor
fisttpll
bound
or
leave
in
cmpsl
sub
mov
xchg
fnstenv
mov
pop
push
fsubrp
cmp
fs
imul
das
fcompl
mov
movsl
xor
pop
insb
out
mov
fwait
cli
mov
mov
jo
cmp
inc
mov
cli
dec
movsb
push
push
push
ljmp
dec
xchg
sbb
adcl
inc
sub
shl
and
push
dec
lds
movsl
lret
popa
push
test
mov
shr
std
movsl
pop
aam
enter
cltd
int
stos
lcall
pop
test
dec
imul
sub
and
aaa
xchg
inc
mov
push
sbb
jp
movsb
push
lret
push
aas
xlat
shl
mov
rolb
fiadds
lahf
pop
or
inc
dec
mov
sbb
fs
adc
xor
addr16
fwait
insl
push
sbb
or
pop
in
ljmp
mov
adc
into
test
push
mov
mov
ljmp
dec
pop
sub
or
xor
jb
dec
stc
ds
adc
and
fdivrs
popa
outsb
ljmp
ret
add
xchg
sub
stc
dec
inc
adc
cmp
inc
sarl
xchg
fwait
popa
adc
adc
and
xor
and
sub
test
out
cmp
pop
pop
shll
in
inc
xchg
out
push
shrl
pop
imul
jle
mov
and
sbbb
xchg
xchg
out
xchg
ja
jns
repz
enter
xchg
jbe
xchg
roll
arpl
cltd
lds
dec
and
outsl
pop
repz
mov
cmp
test
icebp
push
mov
fst
dec
adc
mov
xor
sarl
push
push
mov
out
pop
mov
out
cmp
aam
adc
rorb
jecxz
or
dec
pop
pop
cmp
inc
shll
aaa
or
adc
push
leave
mov
dec
or
adcb
pop
cmp
sbb
cmp
data16
push
or
shrb
ficoml
lods
jecxz
movsl
cmc
and
pop
jne
xchg
lcall
push
lods
mov
add
mov
push
mov
jg
out
scas
add
pop
fistpll
lcall
lock
pusha
stc
mov
xchg
in
dec
add
push
arpl
xchg
push
aad
pop
test
and
scas
movsl
imul
dec
jecxz
stos
pop
mov
ret
add
adc
pop
adc
addr16
test
pop
lret
sbb
pushf
movsb
sbb
jae
in
sub
push
mov
cwtl
outsl
mov
aad
fstpt
dec
or
sarl
test
inc
push
dec
mov
test
das
pop
xchg
sarb
pusha
mov
test
jecxz
jo
idivl
jl
push
dec
jb
pop
daa
jmp
xchg
pop
pop
or
insl
stos
inc
sub
dec
rcrl
dec
repnz
adc
inc
pop
cs
dec
shl
repnz
mov
inc
bound
cmpsb
das
inc
and
xchg
into
loope
das
mov
add
xchg
iret
sub
icebp
lahf
andl
daa
inc
scas
out
btr
ficompl
lea
outsb
loope
jp
push
repnz
popf
jae
pop
call
jmp
push
cwtl
xor
aam
dec
mov
xor
or
mov
dec
shlb
lock
scas
nop
cmp
cmp
adc
pop
cmp
xor
cmp
rep
decb
xor
mov
cmp
inc
and
push
scas
cmpsl
adc
lods
out
add
inc
sbb
ljmp
fs
pushf
es
mov
sub
mov
inc
mov
mov
test
lahf
mov
outsl
and
mov
dec
dec
jge
loopne
lds
jnp
rolb
dec
pop
push
stos
fistpll
testl
imul
mov
sbb
repnz
in
cwtl
mov
cmc
push
adc
mov
xchg
sbb
iret
mov
jmp
aad
hlt
pop
fistpl
xchg
add
sub
cmpsb
iret
mov
cs
fwait
mov
aas
or
aad
gs
daa
adc
mov
ret
hlt
mov
xchg
and
adc
push
dec
xchg
shlb
out
and
mov
std
or
rol
popa
fmul
push
mov
jle
bound
mov
push
or
jnp
imul
andb
lahf
xchg
cmp
push
fsubs
fbld
sbb
adc
xor
int
cs
mov
movsl
inc
push
inc
rol
sbb
and
dec
dec
and
pushf
push
xor
push
jnp
push
sbb
cmc
xor
adc
jge
leave
pusha
pop
dec
movsl
rcrl
andl
cmp
pop
add
mov
inc
push
add
lahf
jp
pop
clc
push
fcmovne
test
xor
out
push
xchg
push
js
mov
mov
pop
cmpsb
lds
lods
lods
cli
push
sbb
out
dec
lahf
mov
mov
push
add
push
adc
mov
mov
aas
adc
mov
scas
rclb
out
dec
gs
adc
mov
sub
cmp
leavew
in
mov
dec
scas
add
jge
in
sti
jl
mov
lcall
fwait
sub
das
scas
mov
je
cmp
sti
cmp
xchg
pop
xor
xor
xor
outsl
cmp
arpl
add
divb
out
in
dec
outsl
xchg
mov
in
jg
add
pop
xor
jle
hlt
xchg
pop
cmp
call
mov
in
in
repnz
fidivrl
in
mov
cmpsb
xchg
add
push
push
mov
pusha
or
fcmovu
js
inc
pop
repz
test
rol
je
xchg
addr16
dec
icebp
jp
pop
int3
mov
lahf
stos
xchg
mov
aad
xor
pop
aam
popa
push
sub
xor
call
ljmp
dec
and
shrb
inc
push
daa
mov
and
pop
jp
mov
xor
sbb
mov
mov
pop
jne
out
jno
loop
xorl
std
cmpsl
push
int3
jo
mov
dec
pop
clc
mov
les
dec
pop
sbb
arpl
jns
pop
push
gs
jne
and
xor
call
or
xchg
fwait
ja
lahf
outsb
cmp
push
shlb
mov
scas
xchg
push
popa
xchg
xchg
mov
adc
idivb
fs
jae
or
pushf
iret
mov
xor
ljmp
cmp
aaa
sahf
js
pusha
mov
and
sub
jo
xor
push
fstpl
xor
mov
shlb
and
cltd
jge
mov
lret
inc
mov
inc
loop
cmpsb
out
add
xchg
gs
bound
xchg
std
bound
leave
jge
push
inc
push
push
mov
shll
push
test
mov
je
or
pop
dec
add
clc
or
into
sub
jnp
mov
xor
push
add
outsl
xchg
xchg
ret
push
aam
pop
pusha
movsl
jecxz
lods
arpl
repz
aaa
xor
lds
mov
jg
pop
sbb
out
outsl
push
push
imul
sti
test
shll
dec
int
xor
push
aaa
dec
stc
clc
movsb
xor
jp
ja
das
nop
sbb
lds
stos
push
mov
and
pop
jnp
lcall
test
outsl
xchg
fcos
adc
gs
les
arpl
jae
test
inc
pop
pop
adc
and
sahf
aas
ljmp
ja
mov
sub
pusha
int
xchg
ljmp
mov
lret
dec
loopne
cmp
sub
dec
mov
loope
xchg
lds
cli
pop
pop
or
xor
add
push
sub
rep
inc
inc
sahf
mov
pop
or
jne
xor
mov
lahf
inc
dec
cld
adcb
jns
pop
shlb
jb
roll
outsl
and
int
xlat
cmp
jbe
arpl
cmp
ja
xchg
movsb
or
pop
scas
ljmp
jg
loope
loope
lods
sub
ret
aam
ljmp
inc
fdecstp
test
pop
addr16
push
in
cmp
cmc
daa
xchg
testb
jge
clc
pop
push
xor
xor
sbb
in
stos
pop
in
test
aad
sahf
inc
pop
add
leave
scas
mov
sub
popa
xchg
bound
push
push
gs
pop
cwtl
mov
dec
js
and
aad
pop
shll
and
es
mov
xor
pop
push
or
outsl
push
xor
fidivrs
or
lds
dec
lcall
sbb
add
xor
fwait
pusha
test
stos
in
pop
addr16
aaa
insl
arpl
dec
xchg
in
ss
inc
xchg
and
xlat
inc
cmp
xlat
adc
popa
xchg
call
jecxz
pushf
pop
ror
pop
fcoms
mov
sub
mov
in
aam
aad
loop
xchg
or
push
pop
mov
pop
popa
dec
pop
sub
out
repz
adc
adc
dec
push
mov
xor
leave
adc
jmp
test
aaa
and
mov
jne
xchg
clc
mov
repnz
mov
rcll
out
lock
sub
testb
cmp
cwtl
cmp
outsl
jecxz
jp
xchg
arpl
cld
imul
cli
mov
mov
jb
adc
or
or
jle
mov
or
push
xor
data16
bound
in
xchg
and
mov
fmuls
and
addr16
jecxz
mov
bound
xchg
pop
pop
pop
xchg
frstor
push
xor
mov
push
push
jle
icebp
loop
inc
sbb
imul
jno
xchg
loope
mov
mov
xchg
sahf
es
mov
iret
loope
jp
bound
iret
mov
cli
add
sub
or
add
inc
dec
loopne
les
test
cmc
in
push
fsincos
dec
sbb
inc
stc
inc
sub
insl
xchg
jmp
loop
push
xor
pop
xor
mov
jg
sub
jg
and
cmp
ds
jns
aaa
in
add
sbb
mov
insl
and
jns
imul
imul
mov
or
movsl
add
xchg
rclb
pop
mov
mov
sahf
call
jnp
sub
mov
and
or
sbb
dec
sbb
cmp
mov
dec
test
add
xchg
inc
les
fs
pop
sbb
call
cli
stos
data16
sti
aam
lcall
ret
cmp
aad
xor
mov
call
cs
mov
bound
dec
fidivrl
mov
push
sub
or
jecxz
test
int
add
cmp
test
test
popf
hlt
xor
lret
imul
pop
fcom
pop
shrl
fwait
cltd
push
imul
sahf
add
or
or
stos
push
fdiv
xchg
js
or
outsl
dec
call
and
mov
xor
sahf
stos
jecxz
push
into
movq
sbb
sbb
in
sbb
movsb
pop
dec
pop
lret
lods
pop
call
es
jmp
inc
push
es
dec
mov
add
sub
xor
sub
push
sbb
sub
insl
inc
bound
push
xchg
mov
aas
sbb
cmp
arpl
and
imul
push
mull
aam
loopne
in
add
jmp
imul
cmp
inc
bound
insb
mov
push
out
pop
cmpsl
aaa
sbb
push
adc
sub
stos
scas
xor
cmp
sti
aas
jl
cmp
inc
push
outsb
call
pop
adc
pop
pop
bound
and
inc
test
inc
lret
push
pop
xor
dec
xor
xchg
clc
dec
ss
jb
inc
and
pusha
outsl
fmulp
fcom
push
xor
ret
dec
js
fiadds
pop
lea
mov
ljmp
dec
pop
scas
outsl
xchg
mov
data16
sub
sbbb
xor
inc
cmp
and
popa
sub
and
xorps
pop
mov
jno
push
out
pusha
mov
jno
out
data16
dec
out
mov
xchg
inc
push
lock
loop
aas
aaa
arpl
shrl
pop
add
insl
mov
ljmp
mov
insl
and
push
pop
pusha
mov
jbe
push
pushf
nop
push
push
outsl
pop
fwait
imul
jle
push
inc
and
adc
loopne
mov
loope
outsl
xlat
test
fldcw
aaa
mov
dec
or
fwait
and
push
add
in
push
fs
ret
and
pop
jl
jp
jne
test
and
push
jbe
or
xchg
xchg
cmp
inc
jno
fmuls
test
mov
adc
adc
xchg
xorl
loope
inc
imul
xchg
es
imul
dec
lret
add
lds
jne
pop
mov
in
loopne
sub
sub
push
sub
or
ret
popa
mov
es
ret
gs
imul
add
je
inc
add
pop
mov
and
call
add
insl
ljmp
imul
xchg
pusha
inc
ja
jb
cmp
cmc
dec
cltd
mov
xor
fbld
xor
les
xchg
push
iret
sub
fs
sub
fisubl
jmp
xchg
mov
mov
dec
lods
psubusb
jo
jmp
lret
test
sub
divl
movsl
xor
aaa
into
add
shl
leave
aad
inc
shlb
pop
or
push
add
xor
xchg
xchg
and
sahf
mov
leave
and
or
pop
mov
mov
scas
sub
mov
mov
or
ret
cmpsl
subl
and
pop
pop
int3
arpl
ss
xlat
mov
lods
add
push
daa
ljmp
inc
ljmp
inc
and
cmp
inc
jle
lods
iret
mov
ret
xorl
or
fstps
adc
lods
ret
loop
cli
sub
out
sbb
push
aas
push
ret
hlt
sub
std
aaa
mov
call
mov
xor
lods
fsubl
test
arpl
andl
data16
in
adc
fildll
xchg
dec
cltd
fistps
push
push
fidivrs
cmp
xchg
xchg
fsubs
fldl
cmc
jle
repz
lock
push
repz
add
lahf
mov
daa
iret
jmp
push
aam
xlat
or
das
icebp
pop
sub
pop
sbb
pushf
xlat
jns
loop
int
push
leave
jg
stc
sub
dec
arpl
adc
jo
pop
in
xor
fs
arpl
subb
data16
add
or
adc
mov
adcl
int3
xchg
add
aad
and
dec
mov
cmp
xchg
adc
aaa
popf
pusha
cmp
sub
lock
in
gs
test
xor
repnz
dec
data16
xchg
xor
and
push
add
adc
inc
push
cmpsl
dec
xor
push
hlt
jae
je
inc
out
pop
mov
inc
leave
jge
sbb
or
mov
fs
cmpsb
xchg
pop
inc
adc
clc
xor
cmp
or
insb
out
dec
lods
loop
sub
push
insl
xchg
aaa
mov
inc
lahf
adc
data16
pop
pop
sub
shll
dec
lret
nop
sahf
dec
imul
es
dec
and
mov
cwtl
aas
adc
xchg
imul
std
mov
loop
cmp
test
mov
lret
add
xor
cmp
xor
out
jne
push
out
jne
lcall
dec
mov
pop
xor
xchg
fwait
xchg
inc
sub
dec
pop
enter
push
or
stos
adcl
cmpsl
xlat
in
out
and
mov
loop
xchg
mov
clc
mov
leave
ja
addr16
int3
push
out
inc
daa
mov
mov
mov
aam
loope
push
or
push
cmc
idivl
pop
mov
inc
inc
in
sbb
push
addr16
cmp
xchg
aam
es
mov
add
fwait
mov
add
inc
outsl
push
sbb
mov
mov
aad
mov
repnz
decl
or
sub
push
repnz
outsb
push
xor
std
push
sbb
sub
gs
lret
sub
and
push
scas
call
cmpsl
sbb
xchg
or
test
xchg
lret
imul
cmpsb
or
imul
mov
xor
pop
inc
or
call
lods
dec
jb
pop
or
mov
loopne
or
jo
mov
out
cld
pop
xchg
mov
fisttps
mov
or
sub
loope
sbb
mov
pop
rcrl
and
pop
ss
or
outsb
dec
fsubrs
dec
xlat
dec
sti
pop
mov
imul
inc
out
adc
add
jb
inc
aam
mov
dec
ret
cmc
rcrl
sub
mov
xor
pop
mov
cmp
in
movsb
xchg
and
cmpsl
pop
sbb
lahf
and
xlat
sbb
sahf
pop
scas
popf
dec
mov
dec
aam
xor
imul
jnp
dec
lret
sahf
test
jnp
pop
fs
xchg
sub
push
push
jno
inc
je
je
xor
es
sub
movsl
jl
stmxcsr
ja
xor
outsb
das
lock
addr16
mov
mov
cmp
push
shrb
sahf
loope
notl
jnp
fcmovnu
push
test
xor
imul
add
mov
into
pop
inc
cli
cmpsl
mov
sbb
add
ss
cmp
icebp
xchg
sub
cmp
pop
dec
hlt
push
inc
scas
fsub
and
xchg
mov
arpl
outsl
lcall
and
lret
dec
sbbb
or
mov
mov
aad
test
fbld
adc
mov
cmp
xchg
push
movsl
jle
mov
insl
movsb
sbb
or
repnz
sub
adc
xor
push
xchg
sub
shrl
lcall
pop
in
cmp
daa
out
mov
int3
fistl
push
mov
jp
mov
stc
cmp
mov
xchg
test
bound
ror
call
push
ss
sub
insb
shlb
or
rcll
scas
loope
xor
xor
xor
or
test
push
xchg
das
jg
pop
lret
sub
fcmove
xchg
push
fmuls
push
cmpsl
imul
pop
js
push
pop
ja
sub
loop
add
and
sti
mov
inc
xchg
ret
std
mov
mov
fwait
mul
test
rorb
pop
outsl
lcall
cmpsl
sub
subl
popa
jne
enter
ds
xchg
add
pop
fsubr
pop
xor
adc
mov
or
or
iret
push
cs
out
dec
call
dec
push
test
bound
bnd
leave
in
inc
pusha
bound
jl
xchg
andb
pop
inc
push
out
lret
cmp
dec
addr16
cld
sbb
pushf
jo
addr16
cmp
mov
dec
outsl
aam
in
inc
jne
mov
lods
ss
cmp
and
shrl
or
add
pop
mov
mov
rcll
test
and
test
dec
bound
xchg
shr
in
or
je
push
jg
adc
add
mov
pushf
pop
js
dec
adc
sub
mov
aaa
test
inc
jns
imulb
sub
or
scas
outsl
mov
fiaddl
in
jle
or
jo
lds
cmp
or
outsl
data16
mov
adc
xor
mov
and
adc
dec
sub
mov
gs
pop
add
or
sub
xor
adc
pushf
push
lahf
popa
xor
pop
xchg
cmp
movsb
js
nop
push
ja
push
or
lret
in
bound
ficoms
xchg
add
sahf
add
in
test
insl
xchg
xchg
push
jg
pop
insl
shlb
xchg
push
idivl
loopne
inc
fmuls
jp
push
add
pop
in
call
or
cmp
pop
cmp
or
test
bound
pop
xor
push
inc
jae
cmp
mov
cltd
outsl
movsl
xchg
fsts
call
and
aas
adc
push
nop
out
sbb
les
cmp
inc
out
push
dec
push
insl
adc
add
push
test
in
xchg
in
push
loope
cmp
add
mov
out
inc
xchg
jbe
aaa
sub
in
call
or
std
stos
mov
pusha
imul
cmp
gs
je,pt
sbb
mov
decl
fisttpl
ljmp
repnz
dec
in
stc
pop
xchg
andb
test
icebp
test
mov
in
add
adc
adc
mov
std
daa
gs
movsl
leave
sbb
push
and
fdivs
pusha
add
aas
pop
cmp
stos
out
fsubrs
rcll
iret
test
mov
jno
out
adc
clc
int
push
sbb
add
fs
push
or
or
call
dec
adc
xor
pop
push
adc
js
mov
in
sbb
pop
cmp
adc
inc
lock
mov
adc
and
sti
in
sub
test
shlb
jg
loopne
sub
cmpsb
sbb
xor
mov
sbb
mov
inc
movsl
mov
stc
shr
and
insb
test
je
repz
add
xchg
fwait
cmp
cmpsb
sbb
sub
sub
sub
sub
inc
pusha
cmpsl
push
xor
mov
clc
fwait
mov
mov
mov
cmc
std
xlat
rclb
imul
popf
lods
xor
cmpsb
cli
pop
xchg
mov
jp
lcall
or
popl
sub
lret
pop
ss
shll
xor
sbb
jl
or
mov
stos
pop
and
jb
enter
pop
xor
push
pusha
fdivrs
pop
fs
and
test
in
cld
imul
push
xor
test
fdivl
iret
xor
lods
iret
int3
sti
cmpsb
xor
test
aas
fs
popf
vmread
and
ror
sahf
xor
cmp
nop
bound
mov
xchg
cmpsb
and
cld
repnz
and
loope
mov
mov
int
jmp
leave
inc
lret
daa
adc
push
adcl
stos
pop
xor
imul
jmp
and
rclb
sbb
sbb
cmpsl
insl
add
push
mov
in
lcall
adc
cmpsl
fsubrs
push
add
xor
data16
sbb
mov
in
pusha
sub
and
fmuls
pop
es
cmpsb
push
pop
subb
test
movsl
dec
punpckldq
mov
arpl
imul
and
dec
clc
nop
jp
push
loope
es
daa
push
mov
xchg
bound
icebp
pop
dec
mov
and
add
pop
pop
and
repz
inc
and
lods
ficompl
call
pop
mov
fs
test
sub
stos
fwait
and
mov
cmp
inc
jg
mov
out
je
sub
pop
dec
pop
orl
ret
mov
xchg
xor
xchg
ljmp
ret
out
jb
sbb
clc
jecxz
sbb
pop
fwait
push
pop
xchg
in
or
sbb
adc
pop
sbbl
cld
xor
cmp
addr16
sbb
shr
jno
pop
push
mov
pop
sbb
inc
and
out
cli
xchg
lea
aad
stc
mov
in
mov
fbstp
les
cmpsb
ret
xchg
sub
es
dec
mov
leave
mov
push
scas
push
bound
xchg
dec
outsb
fimull
pop
push
aas
or
mov
ljmp
bound
decl
pop
sub
push
lods
pop
and
cmp
cmp
xchg
daa
xor
cmp
ds
pop
addr16
cs
push
bound
cmp
das
lahf
dec
andl
adc
mov
or
jne
add
cmc
mov
dec
push
imul
dec
sub
cmpsb
push
dec
sbb
jmp
sbb
vpunpcklwd
pop
sti
out
mov
aam
add
rcrl
pop
jecxz
out
mov
fwait
inc
push
pop
outsl
and
popa
lret
pop
loop
or
sbb
add
cld
inc
arpl
arpl
sbb
outsl
mov
and
fs
mov
flds
mov
add
inc
sbb
inc
jecxz
data16
mov
cmpsl
sbb
cmc
insb
in
pop
pop
push
gs
fstpl
pop
sti
stc
ljmp
popf
std
adcb
cmpsl
mov
fistl
sti
pop
mov
int
push
gs
cmp
iret
cmpsl
les
sti
repz
aad
mov
jp
mov
xchg
insb
jg
adc
movsb
shlb
stos
push
sti
push
jecxz
es
aad
and
in
xchg
ret
sbb
sahf
jmp
cmp
imul
fwait
cmpsb
movb
xchg
dec
inc
leave
and
mov
or
outsb
loope
arpl
sub
xor
in
mov
ror
cmpsb
decl
xlat
fs
pop
mov
aad
in
fbstp
sbb
pop
fsub
jnp
jno
insb
orl
dec
dec
dec
cwtl
imul
mov
adc
sub
test
pop
push
sti
jecxz
xchg
leave
ja
mov
add
sbb
mov
mov
dec
or
dec
pop
fwait
cmp
xlat
cmp
fcomps
sub
std
hlt
dec
push
leave
pusha
insl
es
mov
mov
or
push
xchg
das
cli
add
push
rclb
data16
fwait
sarl
scas
mov
sub
pop
test
push
push
or
mov
inc
push
mov
dec
negb
mov
mov
and
call
dec
xchg
mov
fldcw
test
push
mov
js
pop
sbb
insb
and
inc
or
in
sub
mov
mov
in
inc
pop
add
lods
inc
mov
pop
dec
outsl
and
jecxz
movsl
mov
xchg
adc
and
mov
cmp
out
aad
addr16
lahf
sub
xchg
in
insl
push
shll
aam
mov
ljmp
jecxz
mov
inc
adc
push
dec
pop
or
repnz
outsl
daa
mov
ljmp
push
test
adc
and
xchg
aam
ja
inc
adc
pop
sub
bound
jne
jl
adc
shl
test
rol
loope
dec
xchg
mov
in
lcall
inc
mov
cwtl
fdivrp
push
ret
jae
call
cwtl
push
iret
pop
loope
stos
jnp
or
adc
push
add
push
loope
sbb
ficoms
repz
pusha
rcrb
xchg
inc
push
movsl
adc
mov
fdivs
push
push
cmp
fs
inc
dec
push
lds
sbb
sahf
in
sub
sbbb
mulps
les
std
fimuls
push
or
arpl
pusha
mov
test
pop
loop
xchg
nop
xor
fsubs
inc
push
sti
push
jecxz
add
adc
or
push
mov
in
gs
gs
movsl
test
bound
outsl
sbb
out
daa
gs
pop
mov
or
cmp
dec
xchg
addr16
fidivl
bound
call
jmp
fistpl
mov
pop
lds
add
push
fsubrl
xlat
fs
xchg
mov
jb
xor
fstpl
in
push
sub
xchg
stos
inc
xlat
and
pop
mov
not
lods
sahf
mov
loope
aad
and
in
lret
mov
fwait
jbe
cltd
or
or
mul
in
jnp
cmpsl
or
dec
in
fnsave
flds
pop
sbb
sub
test
sahf
outsl
and
push
sub
mov
scas
jo
push
xor
push
cltd
in
popa
mov
sub
inc
push
aaa
pop
xor
pusha
jb
js
sub
mov
ss
aad
cmc
test
cmp
repz
or
fsubp
dec
repz
pop
in
xchg
stos
dec
int
mov
inc
jmp
jge
iret
and
adc
mov
insl
jbe
jns
ret
push
cmp
lock
call
sti
push
inc
daa
xor
xchg
rclb
add
test
popf
cmp
mov
ds
fnstcw
popa
outsb
aaa
or
or
imul
arpl
fs
push
addr16
je
jb
push
xchg
mov
jmp
push
dec
imull
push
lock
cli
mov
cwtl
outsl
adc
xor
xor
testb
add
push
rorl
imull
test
mov
mov
pop
mov
insb
test
ja
and
js
fs
push
and
xchg
push
jge
sub
sahf
push
shll
fbstp
lods
xor
je
mov
in
adc
or
xchg
out
push
lcall
arpl
aad
call
sbb
sbb
lock
adc
adc
pop
push
sbb
push
fists
imul
mov
cltd
jl
fildl
xor
pusha
jp
das
push
mov
imul
imul
xchg
fsubs
sub
fistl
aad
in
pusha
nop
cmpsb
lds
xor
ja
pop
shlb
mov
adc
xchg
dec
movsb
adc
and
push
jns
mov
adc
sub
cmp
dec
or
pop
xor
fimull
std
in
ficomps
arpl
out
lds
xor
stos
sub
dec
pop
out
popf
std
fsubs
fsubrl
mov
aam
fwait
insb
sbb
aaa
inc
cmp
arpl
cwtl
add
and
or
pop
mov
sahf
sub
mov
pop
add
loope
xor
loop
mov
mov
push
int3
push
clc
push
popf
movsl
xchg
std
push
lahf
dec
pop
pop
pop
into
pop
pop
xchg
test
and
lret
jecxz
je
cltd
in
xchg
daa
xor
aad
push
and
repz
les
push
loopne
in
lea
mov
xchg
xlat
xor
outsl
ret
rclb
popa
sub
leave
sbb
cmp
cwtl
mov
push
mull
test
sbb
push
stos
out
or
push
int
fwait
push
push
dec
jo
and
lcall
push
xor
sub
ljmp
incl
pop
shld
dec
or
stos
lret
outsb
push
adc
adc
cmp
or
fdivp
mov
and
push
daa
push
or
mov
add
in
fwait
in
jmp
subl
arpl
test
and
xor
imul
inc
and
xchg
popf
cmpsl
lods
cmp
dec
add
or
ss
mov
dec
and
movsl
lret
add
in
push
outsl
xchg
lods
push
mov
scas
sbb
sub
dec
push
cmpsb
inc
xor
pop
lock
or
mov
inc
sbb
dec
xor
lea
pop
je
xor
or
xor
les
dec
add
or
xchg
imul
push
imul
gs
and
add
xlat
repnz
rclb
lcall
dec
mov
or
push
inc
dec
bnd
fwait
arpl
sbb
xlat
insb
in
frstor
sahf
mov
cmp
xor
mov
mov
inc
aam
pop
stc
fcmovb
mov
lods
bound
ljmp
cmpsb
ss
push
cmp
ret
mov
mov
xor
or
movsb
xor
das
ljmp
aam
imul
sub
pop
fisttpl
addr16
push
xlat
shl
add
aam
dec
adc
and
pushf
mov
push
enter
lods
cmp
inc
loopne
sahf
mov
cmp
or
out
in
sub
sahf
stos
pop
xor
pop
push
sub
pusha
or
pop
dec
or
adc
movsl
lahf
add
xchg
and
dec
jle
and
add
mov
xchg
push
cmc
lcall
or
mov
mov
rolb
rcl
and
fisubrs
lock
ds
inc
mov
addr16
loop
jecxz
xchg
stos
push
adc
fistl
imul
int3
mov
pop
test
bound
or
in
dec
push
rorl
inc
mov
jnp
cmp
dec
mov
test
or
xor
mov
add
mov
jmp
add
mov
daa
push
push
mov
sbb
pop
sub
and
jg
movsl
test
and
test
dec
out
lret
adc
ja
cld
repz
mov
hlt
and
addr16
or
mov
sbb
sahf
xchg
fnstcw
out
icebp
dec
jns
stos
inc
mov
sbb
jge
sahf
fs
outsb
inc
add
inc
shrb
push
inc
scas
dec
cwtl
sub
xor
add
fcmovu
test
mov
push
sub
mov
stos
fucom
int
dec
iret
add
sbb
clc
sbb
mov
add
ja
jne
imul
adc
sub
in
imul
cmpsb
gs
nop
push
mov
xchg
push
call
into
aad
cmp
test
dec
int3
aas
gs
int
fadds
in
or
movsl
jb
pop
or
dec
pop
jecxz
cli
hlt
shl
mov
in
js
sub
or
fbstp
lcall
jno
enter
mov
mov
and
faddl
loope
pmullw
inc
push
gs
gs
lret
cs
adc
ja
xchg
ret
cmp
push
xchg
ljmp
push
adc
shrl
out
and
ret
dec
inc
sub
mov
xorl
dec
cld
cmpsl
jnp
push
jle
mov
loop
ret
inc
test
aad
out
pop
cld
xchg
xchg
decb
ss
dec
lock
mov
jle
pop
mov
sub
cmpsl
bound
and
mov
ds
jbe
aas
gs
or
test
sub
mulb
and
ljmp
or
out
shlb
cmp
lds
lods
pop
dec
lock
cs
cwtl
push
daa
mov
dec
enter
jp
sbb
pop
popf
pop
lret
push
call
int3
or
lret
pop
push
jecxz
in
and
push
cs
xor
outsl
and
filds
mov
dec
rcr
or
sub
add
push
test
cmp
js
daa
idivb
pop
mov
daa
repz
pop
test
xchg
call
pop
cld
mov
dec
cmp
push
movsb
scas
pusha
cmp
lcall
fisttpll
out
or
iret
addr16
and
cmpsb
popa
pop
jl
adc
fldenv
dec
leave
pop
pop
push
lret
daa
daa
mov
mov
lock
pop
jno
cwtl
fbstp
test
movsl
loope
in
iret
push
lock
cmpsb
aaa
mov
pop
lret
shll
jne
inc
inc
mov
ss
and
jmp
mov
pop
ljmp
out
sbb
push
pop
aad
push
xor
fisubl
pop
jp
dec
jp
jmp
lock
je
mov
pop
in
or
es
sub
mov
mov
cmpsl
xchg
pop
push
cmpsb
imul
xchg
bound
xchg
not
dec
movsb
arpl
fildll
add
cli
push
ret
decb
push
bound
divb
rcrb
adc
jne
mov
cmp
dec
adc
xchg
mov
sub
xchg
lcall
fidivrl
ret
adc
enter
push
adc
jl
mov
pop
insl
cmp
decb
loope
mov
loope
dec
scas
sbb
not
xchg
mov
pop
cmp
push
dec
dec
stos
in
imul
imul
mov
bound
in
bound
sub
cmpl
dec
add
repz
xchg
cmp
cmp
adc
dec
cmpsb
movsb
or
ja
xlat
or
inc
xchg
inc
mov
jae
repnz
mov
bound
daa
xchg
mov
pop
ljmp
jmp
ret
pop
andl
inc
das
pop
pop
into
test
and
cli
pushf
outsb
or
pop
andl
push
inc
arpl
mov
jns
mov
outsl
sahf
xor
stos
or
xor
rcrl
shl
addr16
dec
fs
pop
add
in
lcall
in
xor
sub
les
pop
mov
mov
dec
xchg
insl
xorl
and
sub
ret
push
fcmovnb
jb
mov
aam
cmp
subb
jb
out
in
imul
add
cmp
xchg
shlb
pop
xchg
xchg
lret
pushf
outsl
dec
cld
loop
push
mov
js
jns
lret
leave
lcall
xchg
insb
adc
xorb
fwait
inc
mov
push
aam
push
stc
mov
cmpsl
jmp
leave
mov
jp
arpl
cmp
in
xlat
cli
loopne
mov
inc
mov
lret
cmp
fucomp
xor
mov
adc
sbb
mov
jmp
adc
test
imul
inc
jns
xor
inc
xlat
xor
mov
ret
fcoms
test
or
movsb
arpl
and
xchg
mov
push
mov
jmp
test
mov
shl
fwait
sub
or
or
call
or
psllq
xchg
push
cmc
xchg
sub
jp
out
pop
mov
pop
sbb
iret
xor
arpl
sub
ss
push
inc
pop
jne
fs
mov
or
mov
fnstcw
cwtl
mov
add
adc
loop
mov
ljmp
pop
xlat
pop
xchg
lods
cmpsb
in
lods
shlb
mov
mov
dec
inc
ss
dec
daa
enter
test
and
iret
jmp
rorl
xchg
out
xor
jmp
lods
scas
dec
pop
aad
and
cmp
lods
scas
andb
into
or
fnstcw
push
es
adc
inc
xchg
or
js
mov
insl
mov
jmp
leave
hlt
push
test
sbbl
dec
mov
dec
jge
in
int3
push
mov
sub
mov
add
add
cmpl
es
pop
testb
cmpsb
test
repz
mov
xor
stc
add
or
cmp
push
and
sub
inc
pop
mov
shrb
adc
mov
out
out
clc
pop
sbb
cmp
imul
arpl
aam
push
mov
aad
mov
loope
movsb
xchg
test
popf
add
mov
sub
jmp
sub
ds
push
outsb
inc
cltd
repz
push
cltd
cmp
fdivr
test
inc
roll
and
pop
in
fincstp
sub
jmp
pop
or
push
inc
add
pop
popa
ja
outsl
dec
bound
roll
mov
jno
mov
pop
imul
jmp
jle
mov
in
call
push
pushf
arpl
mov
dec
push
fmuls
mov
sbb
xchg
jne
movsb
std
cmpsl
shlb
iret
jne
inc
xchg
daa
hlt
push
fs
cmpsb
mov
movsl
mov
test
divl
loopne
add
adc
leave
pop
es
xor
ss
xchg
jmp
iret
xor
push
ret
sub
sahf
xchg
dec
out
pop
fucomi
jno
fcoml
sub
stos
les
push
pop
jle
pop
cld
sub
dec
sbb
pop
or
lods
fldcw
or
sub
jns
iret
rcl
fwait
mov
sbb
pop
cmpsb
lods
push
xchg
pop
xor
lcall
or
push
ja
push
stos
pushl
push
cld
and
jb
outsb
in
mov
pop
pop
in
pop
in
imul
cmp
jecxz
gs
popa
popf
out
mov
or
lret
xchg
mov
jbe
leave
test
outsb
sub
icebp
sbb
rclb
addr16
jbe
scas
xor
iret
push
incb
cli
sub
fs
push
xchg
ljmp
push
sub
mov
sub
imul
and
test
mov
in
loope
mov
cli
ficomps
add
dec
dec
inc
lea
mov
or
xchg
inc
faddl
movsb
outsb
push
cmp
mov
jg
xor
loope
rcrl
inc
adc
pop
adc
lods
xchg
sub
addr16
jle
pop
cwtl
pop
dec
add
jle
stos
gs
cmpsl
xchg
out
or
sub
jge
stos
repz
push
push
mov
fsubp
dec
addr16
lahf
fwait
sahf
mov
outsb
movsb
scas
sub
push
gs
rep
testl
xor
std
ds
mov
xchg
repnz
mov
imul
sub
xchg
xchg
dec
out
push
push
arpl
jl
push
fwait
aad
push
fnstcw
stos
jp
push
bswap
dec
ds
in
or
mov
scas
sbb
and
adc
lds
jmp
lods
jge
out
jmp
sbb
test
pop
stc
dec
push
mov
cmp
add
add
test
inc
pop
movsl
cmpsl
or
in
cltd
lahf
imul
mov
xchg
rcl
repnz
mov
adc
je
icebp
pop
push
stos
push
cmp
daa
pop
ss
cli
out
jmp
addb
push
pop
sbbb
jg
fisubrl
dec
fcmovnb
sbb
je
shll
fisubrs
cmpsb
out
xor
fcmovnu
sub
xlat
fiadds
jo
and
cld
mov
int3
cld
lret
push
xchg
cld
popf
out
into
add
daa
std
jle
repz
addr16
daa
add
adc
je
jb
mov
scas
insb
mov
add
rorl
call
fiadds
test
xor
xchg
sbb
cmp
aad
push
inc
gs
mov
dec
and
std
imul
and
cs
lcall
ds
out
in
lcall
mov
and
out
inc
xor
aad
in
fldcw
lret
and
cli
xchg
xor
inc
in
in
notb
mov
jp
mov
fmul
data16
mov
sbb
sub
movsl
pop
dec
mov
sbb
stc
cmp
out
pop
add
cmpsl
jge
cs
or
xor
out
out
gs
lods
lods
sub
pop
xchg
push
pop
and
xchg
xor
cmpsl
cmpsl
or
rcll
mov
pop
dec
xor
aam
mov
lahf
bound
sti
adc
mov
cli
sub
cmpl
and
push
lds
xor
es
movsl
xchg
lea
leave
in
iret
lods
push
iret
sbb
sbb
sbb
popf
sbb
fiadds
call
sbb
mov
add
and
pop
cs
or
insl
cmp
pop
les
popf
xchg
das
jne
adc
add
jp
gs
or
mov
stos
mov
sahf
sub
jne
sub
js
xchg
xor
push
push
lret
repnz
adc
insb
dec
sbb
iret
test
fldt
fcomps
data16
dec
xor
inc
add
test
negl
or
imul
jo
cmp
xor
add
dec
sbb
dec
cwtl
lods
mov
pop
lds
dec
jbe
adc
push
sub
fldenv
inc
lods
inc
inc
dec
cltd
push
cmp
and
and
cmp
les
mov
jnp
mov
mov
data16
mov
ss
xor
test
call
les
mov
out
mov
cmp
fbstp
and
pop
push
or
jl
xchg
push
mov
or
lods
inc
out
pop
mov
or
mov
cmp
add
mov
shlb
jl
sub
push
fwait
push
pop
pop
ss
cmpl
out
imul
mov
pop
fbld
test
xlat
frstor
xlat
inc
movsl
shll
in
scas
inc
or
xchg
fisubrl
jno
jl
sahf
adc
out
push
sub
ss
or
lret
fiaddl
xor
inc
pop
outsl
sbb
sbb
in
stc
mov
lea
loope
mov
fldenv
push
in
sub
cmpsb
daa
int3
jge
push
push
xchg
scas
int3
xchg
popf
leave
les
cltd
push
add
dec
or
mov
bound
inc
jp
sub
cwtl
daa
cmp
push
dec
lret
outsl
jecxz
cmpsb
jl
lock
adc
sub
cli
fistpll
subb
add
push
pop
lea
cmpsb
jle
fisubs
mov
outsb
aaa
add
das
add
pop
fdivrl
and
push
hlt
std
in
xor
jns
lock
mov
cmp
mov
mov
dec
sub
lea
addl
pop
test
dec
adc
stos
faddp
xchg
xchg
sub
test
cmc
push
sub
inc
test
push
push
pop
inc
jbe
push
popf
cmpsl
insb
testb
ret
shlb
sbbb
fiaddl
leave
or
int3
out
push
movsl
pop
push
lock
shlb
pop
in
cmp
dec
mov
fwait
in
lret
iret
pop
arpl
lretw
push
movups
xchg
rorb
sbb
outsb
in
incl
enter
lret
or
loop
xchg
lods
push
aas
dec
pop
cli
push
xchg
or
stc
cmp
and
pop
mov
loope
call
inc
and
and
ret
les
jb
xchg
jge
sbb
mov
jl
add
xor
push
jb
cmp
and
xchg
lret
and
pushl
add
js
jp
sarl
sahf
stos
inc
sbb
mov
cmp
pusha
lahf
inc
lock
jb
mov
imul
or
loop
jmp
imul
stos
or
fs
lahf
stos
jl
data16
pushf
bound
aam
js
mov
dec
call
push
mov
mov
loop
sub
or
cmpsb
or
jmp
dec
or
adc
fwait
xor
test
leave
sub
cwtl
sbb
pop
test
ljmp
fucomip
mov
lret
outsl
jecxz
adc
jmp
cmpsl
bound
ret
enter
push
test
ja
and
or
dec
ja
lods
push
aad
daa
in
mov
fwait
pop
or
fsubr
xchg
dec
add
or
push
mov
sub
mov
ljmp
movsb
mov
shrb
dec
push
dec
pop
rol
mov
push
dec
lret
mov
daa
dec
sbb
xchg
and
or
mov
fmuls
or
sbb
cmp
push
and
outsl
mov
mov
scas
and
stc
inc
mov
loopne
cmp
loopne
push
fstl
loopne
xlat
jns
hlt
out
pop
rcrb
in
test
rorl
movsb
int3
or
sahf
lret
mov
inc
dec
add
mov
rclb
arpl
push
ljmp
ljmp
xor
popa
rcrb
subl
sbb
lea
sbb
mov
insb
faddl
sub
pusha
popa
jg
mov
jg
data16
mov
fs
inc
sub
jnp
pop
adc
je
das
and
cmp
xor
xlat
dec
in
mov
and
in
out
lahf
pop
cmp
fistps
stos
lods
sti
imul
mov
leave
outsl
out
adc
daa
xor
mov
push
into
sub
cmp
dec
idivb
xlat
mov
xor
inc
jl
fldcw
mov
fldcw
fldcw
pusha
lock
xchg
dec
arpl
dec
push
out
lahf
es
add
push
scas
cmp
inc
mov
cmp
dec
lea
nop
and
data16
lcall
movsl
iret
cs
insb
mov
pop
cmpsb
rorl
push
out
or
xlat
mov
mov
push
cld
movsl
pop
mov
in
in
add
lret
test
xor
rcrl
fstpl
fsts
inc
jne
cmpsl
lahf
cltd
lahf
xchg
adc
shl
out
loopne
jmp
shll
pop
sbb
std
pop
rolb
stos
or
sahf
ret
out
and
xchg
push
push
pop
or
mov
sub
daa
loope
cmp
aam
in
xchg
mov
in
sti
fsubs
and
ljmp
or
xor
movsb
enter
pusha
test
fldt
fistl
test
adc
and
inc
push
xchg
stc
out
loopne
jle
pop
sub
jnp
push
mov
or
sarl
not
and
lret
and
cmp
lcall
sub
std
sub
in
stos
out
xchg
aaa
cmpsb
lods
xchg
xchg
sub
mov
int3
or
mov
cwtl
sbb
insb
shll
jmp
in
or
shrl
pop
mov
push
inc
int
js
cmpsb
or
enter
xchg
xchg
or
cmc
and
aaa
jecxz
dec
cwtl
std
or
inc
mov
push
rorb
jne
rcrb
adc
cmpsb
lahf
cli
lcall
jge
mov
in
mov
mov
das
cmc
mov
add
mov
lds
cltd
sub
js
popa
in
fcomp
add
cli
and
enter
inc
adc
xor
loopne
loop
jns
mov
ret
movsl
je
les
in
rcrl
call
gs
imul
cli
xlat
mov
fadds
mov
jmp
jb
sub
mov
arpl
dec
lahf
insb
test
push
scas
sub
xor
mov
push
xchg
cmp
mov
mov
inc
imul
pop
cmp
push
data16
xchg
aas
jp
xor
cltd
sub
inc
add
sub
lea
jp
pop
fs
int
or
add
iret
fdiv
push
outsl
pop
lret
in
or
dec
adc
xchg
sbb
ja
fwait
loope
call
out
lea
xchg
and
dec
mov
push
popa
std
lds
in
add
cli
dec
test
jae
cmpsb
enter
dec
jl
add
mov
test
loopne
fs
push
ja
rorb
xchg
cli
xchg
pop
arpl
fmul
out
imul
insl
or
in
xor
xchg
outsl
in
and
sbb
mov
fwait
leave
daa
cmpsl
iret
lods
mov
xchg
out
jae
cmp
pushl
adc
push
push
pop
js
decb
bound
push
mov
in
inc
pusha
hlt
lret
in
xor
cmp
pop
push
movsl
jle,pn
jnp
mov
test
movl
and
sarl
jae
imul
in
lods
sbb
xchg
and
rcrb
or
fs
out
test
rcrl
sbb
ljmp
call
and
rcrb
xor
lret
int3
xchg
data16
xor
jns
stos
roll
loop
nop
inc
jp
push
push
clc
jno
fidivrl
scas
insl
sbb
pop
inc
push
mov
sub
mov
sbb
lret
dec
fs
fists
sahf
lret
mov
imul
inc
fisubl
ss
or
cmp
adc
xchg
cltd
add
push
outsl
call
cs
repnz
sbb
mov
dec
insb
scas
jmp
imul
dec
outsl
jecxz
inc
das
jp
add
jmp
xor
add
sub
leave
cli
lods
xchg
or
mov
mov
sahf
jns
arpl
mov
sbb
and
clc
test
aad
movsl
and
icebp
mov
or
cmp
cmp
stos
add
les
dec
movsl
jge
test
enter
out
pop
mov
xchg
daa
dec
xlat
mov
xchg
fdiv
dec
inc
dec
popa
mov
in
or
add
adc
movsl
push
and
pop
std
enter
jne
insb
aam
mov
fbstp
jo
inc
cs
aad
cmp
stos
xchg
sub
mov
sub
sahf
fwait
stos
stos
lahf
fstps
jns
stc
outsb
push
mov
xchg
arpl
jle
and
pusha
popf
mov
fldl
icebp
mov
xchg
push
out
sahf
hlt
movsb
mov
cmp
in
xchg
scas
cmc
testl
pop
add
add
sbb
jle
dec
inc
shrl
pushf
popa
mov
jp
mov
xorb
push
mov
movsb
lds
int
cmpsl
xlat
lahf
scas
adc
dec
pop
xlat
mov
bound
icebp
imul
cmp
je
sbb
pop
push
arpl
fs
or
outsl
ss
mov
pop
and
stc
cmpsl
push
in
outsl
jmp
out
pop
sbb
xchg
ja
cs
mov
cli
inc
imul
xchg
xchg
xchg
add
fistpll
in
inc
pop
jp
scas
imul
icebp
add
test
movsl
in
js
xor
gs
nop
xchg
pop
data16
lahf
aam
sub
mov
rclb
outsl
and
dec
lea
js
fstpl
sbb
sbb
negb
or
xchg
jnp
push
pushf
data16
ror
dec
adc
lds
xchg
in
call
outsl
mov
cs
sub
push
out
rorb
pop
inc
outsl
rcrl
repz
mov
and
add
push
into
sub
jno
jecxz
rorl
daa
pop
xor
call
sbbl
mov
in
mov
xchg
scas
and
imul
and
out
pop
dec
imul
sub
frstor
fisubs
cmpsb
ljmp
call
cmp
popa
jp
stos
imul
push
mov
xor
add
das
inc
pushf
jmp
aas
or
andl
inc
dec
adc
dec
push
into
out
mov
movsb
sub
push
fmuls
dec
sub
cwtl
outsl
mov
pop
push
adc
push
pop
or
xor
cwtl
xchg
fdivrs
sbb
outsl
pop
lahf
fwait
sub
scas
dec
or
pop
into
mov
xor
pop
adc
adc
lret
sub
xchg
shll
push
add
es
xor
pop
cmpsb
or
mov
push
dec
add
add
imul
ficompl
ret
dec
jae
push
mov
subb
add
inc
adc
jmp
push
dec
pop
fmull
pop
push
cltd
or
mov
out
shl
cwtl
shl
cmp
fistps
cli
scas
mov
ljmp
leave
ljmp
outsl
xchg
jno
and
gs
cmp
sbb
pop
mov
ljmp
mov
notl
andb
jmp
mov
adc
mov
inc
push
dec
ret
xchg
call
pop
fcmovnu
clc
in
loope
ds
fcomi
sub
and
cmp
out
pop
mov
or
cwtl
mov
out
inc
push
repz
and
adc
add
pusha
cmp
pop
sbb
arpl
imul
bound
add
cmpsb
xchg
mov
or
dec
mov
adc
in
sub
gs
sub
add
xchg
fs
or
xchg
lods
test
sbb
xchg
movsl
subb
push
sbb
jge
jl
repnz
sbb
sub
shll
gs
rol
dec
push
test
push
xor
mov
in
mov
cmpsl
fcomps
addr16
jp
fwait
adc
jmp
out
push
add
stos
hlt
inc
mov
pusha
loop
test
or
push
or
stos
aad
imul
mov
out
or
in
ret
push
dec
jecxz
movsb
lods
or
ljmp
mov
test
les
or
outsl
test
push
add
rolb
push
pop
xchg
push
lret
neg
pop
push
sub
mov
repnz
dec
popa
int
mov
xor
bound
pop
jb
jne
xor
pop
les
into
int3
push
imul
inc
jb
add
stos
xchg
sbb
mov
adcl
add
bound
fisubrl
imul
jo
dec
inc
jae
movsb
sub
lds
pushf
push
inc
add
sbb
cmp
jecxz
xor
pop
cmc
out
cmpsb
cmpsl
stos
in
sbb
arpl
pop
inc
cmpsl
jp
cmp
jae
test
jg
or
nop
mov
sub
test
scas
cltd
fdivrl
or
push
add
push
shlb
xchg
dec
push
cmpsb
cmpsb
jle
dec
sbb
addr16
pop
xchg
pop
aas
pusha
pop
xchg
mov
movsb
or
test
cs
or
xor
pusha
test
mov
ljmp
mov
je
loope
xor
or
adc
mov
mov
dec
add
jmp
sub
push
test
loopne
push
xchg
push
nop
loope
push
inc
adc
xchg
movsl
cli
xor
jp
loop
sbb
push
aam
push
push
loope
sbb
pushf
cmp
jmp
loopne
xchg
ret
and
data16
or
sti
sub
xor
cmp
ret
cld
push
enter
sub
bound
or
cmp
mov
mov
mov
xchg
das
pop
repnz
lds
xlat
sahf
lret
outsl
addb
je
and
mov
mov
dec
sub
in
or
sbb
add
hlt
cmpsb
ret
mov
add
dec
pop
and
and
stc
inc
cmp
enter
push
shlb
and
push
push
push
mov
sarl
out
xchg
lahf
push
pop
xchg
or
popa
movsb
pushf
sub
xchg
xchg
arpl
leave
pop
shr
inc
ss
mov
in
daa
enter
push
jns
jmp
out
adc
and
out
shrl
inc
sbb
leave
stc
or
and
cwtl
out
scas
dec
and
jmp
add
imull
dec
adc
stc
sub
dec
xchg
ficoml
xor
mov
stc
dec
jmp
xor
dec
jecxz
cltd
mov
bound
cmp
inc
push
ja
push
dec
inc
mov
push
or
leave
into
xor
or
dec
xchg
inc
scas
addl
imul
cmp
lods
cmp
cli
mov
ja
pop
jmp
add
fadds
xchg
sti
mov
ret
mov
or
into
lret
cmp
sub
mov
xchg
jp
mov
add
cltd
xchg
ret
mov
push
out
nop
lcall
int
arpl
and
push
ljmp
hlt
mov
mov
mov
dec
push
jno
adc
mov
add
push
cli
hlt
in
xor
jl
iret
jp
mov
insb
shlb
push
xchg
add
adc
test
das
lahf
push
jnp
test
xchg
sahf
loopne
xchg
adc
sub
inc
loopne
xor
add
adc
shll
fldenv
jmp
pop
movsl
cmp
add
push
adc
ja
shl
push
or
pop
test
fnstenv
dec
adc
push
pop
push
pop
adc
cmpsb
dec
mov
std
aas
inc
mov
scas
and
enter
xchg
pop
or
pop
sub
pop
cli
pop
xorb
fisttpl
out
xor
dec
gs
xchg
cltd
iret
inc
mov
call
pop
or
mov
js
lock
movsl
lcall
pop
xor
mulps
jg
fdivs
inc
and
pop
rcr
decl
jmp
dec
xchg
call
test
pushf
in
add
jmp
test
call
adc
in
xchg
adc
cmpsl
lcall
je
icebp
mov
fldt
mov
rolb
sub
int
xchg
push
xchg
xor
in
inc
je
gs
xor
aad
inc
rclb
push
push
data16
lods
pop
jl
es
mov
pop
dec
out
cltd
test
out
lds
inc
sub
inc
push
imul
pusha
push
xor
pop
pop
shl
mov
jne
addr16
and
pop
pop
ljmp
xchg
or
jp
movb
out
pop
sub
loope
pop
test
mov
cmp
adc
adc
jns
enter
clc
sbb
xchg
pop
mov
shlb
in
sub
xchg
cmp
mov
jp
push
imul
sub
push
push
cmpsb
adc
movsb
es
mov
inc
enter
sbb
dec
jne
stc
shlb
inc
lds
push
sub
test
fmulp
dec
mov
sbb
jmp
sbb
ja
hlt
fistpll
call
pop
loope
sub
in
fs
leave
enter
inc
sub
and
cmp
add
and
dec
push
shrb
sbb
negl
cmp
call
orb
lcall
ss
pop
fstl
pop
pushf
inc
shrl
aaa
sahf
ss
cltd
aam
lods
fadds
add
lods
lock
add
jns
outsb
loopne
mov
mov
daa
lock
rcrb
sub
cld
inc
daa
mov
inc
scas
rcll
cwtl
push
or
gs
in
sub
sub
dec
ss
xor
jae
add
adc
aas
inc
popa
inc
xchg
rcr
mov
data16
sub
cmp
shll
icebp
push
pop
scas
and
and
xchg
sbb
inc
push
and
addr16
push
xchg
lcall
arpl
or
push
jne
subb
addr16
jg
fwait
dec
sbb
pop
and
loopne
push
jle
loope
flds
pop
in
jne
and
pop
and
mov
lock
popa
out
xor
mov
mov
loope
adc
push
xchg
adc
sbb
push
dec
iret
pop
pop
mov
pop
mov
out
pop
stos
scas
xchg
gs
mov
imul
shr
and
push
cmp
stc
cmp
push
jl
addr16
mov
push
in
sub
cmp
repz
inc
dec
xchg
push
sub
test
mov
jb
ljmp
push
imul
scas
dec
cwtl
cmp
aas
bound
jne
dec
jp
or
pop
adc
loopne
es
mov
in
scas
cmpsl
lcall
xchg
xor
in
mov
fcomps
out
mov
es
stos
xchg
ret
add
int3
mov
daa
dec
pop
lret
pop
adc
push
pop
dec
inc
dec
or
push
arpl
bound
cmpsb
pusha
xchg
stc
push
imul
pop
push
push
in
stos
mulb
sbb
out
gs
fs
mov
or
dec
jno
adc
cmp
sub
push
fsubs
bound
jecxz
dec
ret
pop
dec
adc
mov
inc
call
and
sub
inc
add
rorb
pushf
xor
addr16
aad
out
lret
xlat
or
mov
adc
int3
scas
sbb
pop
jle
dec
sahf
push
inc
aam
cmp
inc
and
gs
shrb
cmp
push
mov
cmp
bound
fldenv
xor
fldt
push
lock
inc
call
mov
pop
in
scas
xchg
cmpsb
es
dec
addr16
dec
pop
das
sub
fucom
mov
cmpsb
or
and
pushf
shr
or
cmc
push
icebp
fidivrs
mov
push
sub
xchg
push
mov
and
push
sbb
adc
pop
xor
xchg
push
mov
jecxz
es
push
mov
imul
jns
stos
pop
aam
push
sti
imul
shrl
movsl
mov
jmp
flds
adc
ret
hlt
jle
gs
lock
cmp
push
loope
push
rcrl
dec
out
cmpsl
xor
popf
xchg
bnd
xor
or
cmp
cmp
test
mov
jp
cld
push
push
pop
fldcw
or
dec
mov
sahf
pop
es
adc
insl
push
imul
jp
cmp
popa
dec
rorb
and
test
notl
mov
xor
jnp
out
xchg
shlb
insl
loop
js
sti
mov
ljmp
popa
sub
mov
call
and
insl
xchg
cmpsb
inc
xlat
mov
outsb
test
out
xor
out
jecxz
ret
mov
dec
imul
jg
push
sarb
out
imul
stc
push
add
add
cmpsb
sub
aad
scas
loope
add
or
mov
xchg
mov
dec
dec
stc
push
rcrb
sub
lret
jmp
nop
daa
add
adc
cmp
xchg
addr16
outsb
lret
mov
cmp
mov
mov
movsl
cmpsb
inc
test
repz
fdivr
bound
xchg
or
xor
cmpsb
push
jmp
enter
outsl
loope
adc
cmpsb
in
xchg
jno
int3
pop
loopne
fsubs
pop
adc
repz
lds
xchg
jecxz
pop
mov
sbb
jne
jnp
jecxz
test
inc
xchg
fldcw
push
mov
xchg
mov
jns
repnz
mov
mov
fwait
pop
rol
test
ss
call
push
icebp
rorl
mulb
pop
shlb
xor
arpl
adc
jns
xlat
sbb
outsb
leave
mov
jmp
mov
lock
jo
movsb
jmp
clc
inc
lea
mov
inc
push
int3
imul
fwait
addr16
sub
xor
stos
cmp
movsl
pop
jno
test
call
add
pop
xchg
jecxz
mov
xchg
leave
xlat
test
jle
push
int
inc
and
dec
stc
sub
ja
ja
xchg
jnp
mov
nop
or
pop
jnp
xor
mov
loope
imul
repnz
ror
ret
pop
fbld
roll
xor
lahf
scas
jle
mov
jmp
cmp
and
push
mov
sbb
and
popa
stos
xchg
xor
mov
or
inc
in
dec
shll
scas
xlat
adc
push
mov
iret
and
xchg
inc
add
pusha
movsl
aas
icebp
mov
fs
pop
lret
jno
and
add
pop
mov
mov
cmp
jg
sub
xchg
test
jno
push
aaa
sub
dec
repnz
inc
mov
cwtl
icebp
push
sub
pop
hlt
xchg
sub
jmp
adc
xchg
data16
pop
in
imul
out
lock
jnp
test
lcall
xchg
cmp
sbb
pop
mov
popa
daa
cmp
jae
push
xchg
gs
test
jecxz
sbb
lcall
fldt
popf
xor
push
pushf
mov
cwtl
pop
jl
or
jg
push
call
out
jecxz
loopne
imul
jl
out
push
adc
jns
movsb
or
sarb
and
and
aad
out
out
imul
test
mov
stc
lret
mov
imul
mov
xor
ficoms
cmp
and
adc
inc
xchg
cmp
popa
es
jno
dec
daa
fwait
dec
std
pop
push
xchg
or
jl
and
in
mov
xchg
jmp
jne
mov
loope
inc
or
ja
adc
imul
lahf
gs
inc
outsb
add
mov
jle
cmp
add
mov
sahf
and
ficomps
dec
sbb
push
sbb
loope
ret
outsl
lahf
dec
push
pop
dec
ror
or
je
and
xor
jp
pop
std
daa
popf
sub
clc
jns
adc
pusha
ret
dec
icebp
cmp
xor
jp
insb
repnz
sbb
test
pusha
pop
daa
sub
addr16
and
inc
cmpsl
dec
repnz
pop
and
push
sbb
push
adc
daa
sub
imul
sbb
fnstsw
pop
dec
mov
pop
imul
rcll
dec
push
jae
lret
push
sub
xor
ret
xchg
loope
outsl
cmpb
mov
or
xchg
pusha
push
int
popf
out
test
shl
popf
lea
push
mov
repz
das
inc
sub
dec
cmpsb
push
inc
and
out
mov
inc
inc
mov
movsl
outsl
int3
int3
addr16
inc
and
dec
js
cmp
mov
std
andl
dec
pop
rclb
sbb
add
mov
mov
or
or
out
and
sub
xchg
jnp
pop
pop
data16
add
sub
addr16
xlat
pop
mov
loop
loope
repnz
fistpl
sar
hlt
into
adc
loopne
pusha
inc
es
hlt
bound
lods
add
push
dec
mov
and
push
fimuls
and
mov
push
jns
push
mov
orb
sarb
loope
inc
in
mov
or
mov
es
and
adc
xor
dec
adc
push
into
dec
pusha
stos
lods
into
ret
xchg
dec
inc
dec
or
loope
mov
cmpsl
inc
dec
cltd
aad
inc
es
push
pushf
add
sub
pusha
xor
out
mov
push
add
mov
test
mov
lock
push
cmpsl
fwait
xchg
dec
repz
and
enter
pop
test
sub
xor
loope
test
jae
out
cmp
xchg
mov
out
pop
cmp
cmp
add
jecxz
inc
push
inc
dec
enter
mov
xor
inc
fstl
push
xor
dec
nop
sbb
pop
test
pop
pop
xor
push
jo
push
jo
rcrl
fwait
sub
and
push
imul
data16
sub
inc
push
aaa
and
sub
mov
aaa
xor
push
or
int3
lret
xchg
and
or
aaa
cmpsl
jp
in
push
inc
cmp
xchg
lret
cmp
pop
cltd
jl
xor
cli
and
imulb
xchg
jl
cltd
fcoms
cmp
mov
dec
jb
movsb
inc
aaa
icebp
loope
mov
js
fnstsw
stos
push
cltd
addr16
cmpsb
jle
test
aaa
pop
pop
inc
push
pop
lret
jbe
cmpsb
mov
dec
in
clc
insb
ss
aaa
arpl
ljmp
sub
jb
movntps
inc
mov
sahf
sbb
outsl
push
jno
mov
stos
xchg
add
lea
cmp
xor
aad
cmpsl
movsl
cmp
sub
jb
roll
sub
sub
data16
call
add
repnz
push
push
pop
mov
adc
pusha
mov
call
sub
push
push
adc
push
cmpsl
xor
fstpl
sub
inc
scas
mov
rcrb
or
adc
pushf
fnstenv
scas
loop
sbb
cld
cmp
push
jge
jge
cmp
scas
lcall
mov
fxch
dec
xor
movsl
inc
scas
fimuls
mov
push
dec
dec
dec
and
into
sarl
gs
cmp
je
dec
cmpsb
data16
repnz
and
xchg
cmpsl
dec
insb
sub
cltd
lret
push
mov
and
mov
sti
xor
dec
call
out
je
xor
pop
testb
sub
lret
scas
dec
iret
pop
pop
xor
mov
push
sub
push
xor
shlb
scas
dec
inc
fwait
or
adc
and
push
dec
or
test
dec
fsubs
push
ss
sbb
push
add
dec
and
or
add
mov
rorb
jo
push
aas
cmp
dec
addr16
push
loopne
jmp
add
movsb
addr16
insl
sub
cmp
xor
imul
and
sub
fimuls
test
sahf
jg
add
pop
sub
pop
mov
cmp
aam
ret
gs
xchg
sbb
enter
rorb
clc
adc
xor
xor
out
pop
cmp
sbb
call
fcmovnb
fmuls
cmp
ds
test
dec
ds
sub
scas
out
sub
cmpsl
shll
mov
out
test
mov
jne
push
and
jecxz
xchg
je
incb
out
fld
dec
sti
leave
fcoml
jp
and
or
or
call
cwtl
sahf
subb
mov
scas
sbb
fldcw
outsl
hlt
hlt
cld
or
xchg
mov
xchg
es
xchg
mov
cmp
int3
adc
repz
sub
or
sbb
mov
pop
pop
imul
mov
fisubrs
xchg
cs
xchg
pop
adc
jmp
pop
add
stc
enter
pop
push
sub
pop
pusha
or
push
and
popf
push
mov
jnp
and
push
stc
sub
movsl
jns
mov
popf
dec
xor
bound
arpl
jmp
jecxz
in
aas
mov
arpl
fsubs
push
pop
push
pop
daa
or
shll
jne
jge
and
mov
stc
sbb
cwtl
xchg
sahf
test
pop
out
adc
rcll
add
jle
and
pop
push
fcomps
pop
mov
and
lret
xor
jo
hlt
loop
fcomps
jnp
xor
and
repz
adc
sahf
out
cmpl
inc
mov
pop
in
sub
fs
lret
outsl
repz
push
adc
cmp
es
rorl
outsl
leave
arpl
outsb
push
sub
scas
push
out
scas
or
lock
mov
adc
push
test
dec
loopne
shlb
mov
or
dec
jb
push
andl
push
movsl
dec
iret
subl
movsb
xchg
sahf
sbb
and
fdivl
shrb
clc
push
dec
aaa
mov
ss
mov
imul
inc
dec
stc
gs
mov
jae
cmp
push
xor
push
dec
in
push
inc
lods
lret
sbb
lds
test
push
cli
popf
sbb
insl
adc
out
int3
pusha
mov
jmp
arpl
notl
in
out
cmp
ret
call
rcrl
std
jns
stos
xchg
adc
add
insl
roll
icebp
xchg
sub
mov
xor
pusha
push
cmp
jne
movb
xchg
xchg
mov
xor
stos
sub
leave
inc
and
jp
adc
xchg
sub
sahf
rorb
fistpl
cs
jmp
pop
rcrb
xchg
mov
xchg
loope,pn
ds
insb
cmp
push
ficomps
addr16
inc
sahf
adc
clc
shrl
add
popf
lods
cmc
lock
xchg
sbb
lea
sahf
push
push
aam
sbb
fstpt
inc
cmp
pop
pop
ja
leave
lock
pop
jle
shlb
stos
jo
pop
mov
sti
cli
lahf
cs
mov
push
xor
inc
mov
push
test
cmp
add
xchg
mov
aam
sub
cltd
insb
sub
test
or
int3
test
popf
cmc
clc
std
sbb
in
lahf
fbstp
lods
inc
sub
jno
rcrl
dec
ja
mov
pop
jl
sbb
lcall
das
pop
cmc
xchg
dec
mov
push
aam
inc
ficoms
ljmp
xor
ret
in
mov
cmpsb
adc
push
pop
push
cs
jl
call
fwait
stc
xor
mov
bound
out
pop
adc
dec
rcrb
cmpsb
mov
xchg
mov
into
clc
add
pop
daa
xor
dec
xchg
arpl
data16
pop
in
sub
cmp
daa
cmpsb
or
bound
hlt
sbb
xchg
ljmp
rcl
push
cli
jecxz
cmp
pop
ficompl
add
bound
loope
es
inc
vandps
stc
sub
push
xor
imul
ss
push
dec
nop
ss
cs
cmpsb
gs
inc
jno
pop
cmp
outsl
pop
push
push
dec
cltd
mov
or
lods
xor
jno
xor
mov
test
fists
aas
and
es
push
mov
out
cmp
leave
rclb
add
sahf
test
jnp
push
cmp
and
out
lock
dec
fsubrs
stc
es
sub
push
sbb
fstps
leave
fs
mov
out
jmp
in
mov
pop
inc
test
es
pusha
inc
pop
fstps
iret
dec
dec
mov
popa
cmpsl
gs
cmpsl
mov
nop
push
dec
dec
movsb
fnstcw
sbb
cmp
xor
pop
dec
pop
fsubr
cwtl
or
int
sub
inc
fwait
mov
test
push
cmp
fldcw
fmull
push
push
in
cwtl
mov
bound
xor
jne
dec
mov
daa
daa
scas
pop
adc
out
dec
cltd
sbb
cltd
movsl
lret
pminsw
repnz
aad
push
mov
push
mov
inc
shrb
mov
cmp
ficoms
pop
lahf
cs
out
mov
loope
movsl
and
cmp
pop
pop
mov
push
push
loope
movsb
inc
ss
bound
rcrl
ss
js
push
mov
mov
mov
cltd
add
arpl
dec
fstps
loopne
inc
sub
xchg
clc
cmp
bound
pop
mov
stos
jmp
bound
mov
push
sub
pusha
cmp
pop
xor
jge
imul
cwtl
shll
dec
sub
and
fldcw
popa
int
cmpsb
inc
inc
sbb
popa
ss
xor
xchg
pop
sub
ss
test
cmp
xor
fs
pushaw
xor
cwtl
arpl
or
icebp
mov
popl
std
insl
pop
mov
jge
mov
in
jae
bound
add
pushl
bound
lret
insl
xor
dec
iret
inc
sbb
dec
ret
mov
push
paddd
rorl
int3
sub
mov
dec
jl
pop
adc
mov
test
sub
cmp
mov
imul
ja
jmp
mov
and
push
loope
ss
pop
mov
les
xor
mov
fldenv
bound
sub
add
mov
cmp
stos
mov
lret
push
cltd
pop
and
push
test
fcoms
pop
stc
lea
xor
pop
fdivrs
adc
movsb
add
loop
push
movsl
push
pop
leave
loope
fs
call
popa
in
imul
and
xchg
jl
cwtl
push
push
dec
sti
inc
sbb
cmpsl
mov
add
push
fldenv
in
ret
pushf
ret
loope
iret
inc
movsb
pop
bound
ss
dec
fs
rolb
push
xor
loope
and
data16
sub
dec
and
xlat
insl
pop
cs
and
xor
in
leave
loopne
sbb
mov
xchg
push
in
mov
sub
lds
dec
hlt
rcrl
data16
mov
mov
xor
pop
loop
ss
es
jecxz
into
sbb
dec
andb
inc
loope
xchg
cmp
outsb
xchg
sub
inc
retw
sti
jmp
xor
cmpsl
stc
outsb
sbb
arpl
mov
xchg
mov
xor
clc
sti
inc
push
imul
fldenv
fwait
push
subb
mov
push
movsb
and
xlat
inc
je,pn
dec
push
ss
xchg
and
pop
lds
loop
pop
xchg
dec
stos
xlat
pop
mov
fwait
icebp
and
sbb
mov
push
push
cltd
push
cmp
sbb
stos
cwtl
test
pop
ss
push
inc
jmp
jmp
clc
inc
pop
mov
sbb
dec
fxch
pop
dec
in
and
cmpsb
sub
insb
pop
push
nop
mov
cwtl
xor
dec
pop
and
cwtl
and
mov
sbb
loope
stos
inc
sti
pusha
cltd
adc
out
pop
inc
cmp
xor
push
fmuls
mov
dec
aaa
fadds
ds
inc
bound
in
inc
cs
lret
out
push
dec
dec
inc
cwtl
sbb
dec
push
aad
daa
push
dec
and
ljmp
sbb
cmp
cwtl
xchg
xor
in
out
pop
es
fstps
fmull
mov
les
sysexit
cmp
cmpsb
sbb
inc
dec
out
cmp
cltd
test
pop
cs
daa
js
pop
xor
jbe
pop
out
pop
push
inc
mov
push
push
fxch
das
in
test
rcll
in
or
loope
mov
mov
inc
loope
pop
mov
jmp
cmp
std
push
inc
mov
pusha
pop
bound
sbb
ss
dec
push
inc
xor
outsl
sub
push
push
fsubp
stos
pop
lcall
dec
fimuls
ss
push
sub
cmpsl
in
icebp
int
inc
data16
jp
adc
push
push
dec
jno
mov
jle
sub
push
data16
rcrb
fwait
sub
test
dec
and
or
xchg
in
sbb
jmp
pop
pop
dec
loope
popw
dec
cs
sarl
mov
movsl
ret
mulb
cmp
xchg
enter
inc
pcmpeqd
gs
push
cmp
xor
ret
pusha
dec
adc
scas
loopne
sub
push
fs
pusha
mov
dec
int3
faddl
mov
add
cmp
push
xor
and
int3
sbb
scas
js
pop
aam
fsub
jbe
push
xor
cltd
inc
mov
add
inc
notb
cltd
cmp
iret
lods
shrl
ds
and
xchg
cmpsl
xor
mov
xor
or
or
popf
push
movl
es
out
test
dec
mov
or
sbb
dec
jbe
xchg
cld
xor
pop
mov
xor
cmp
data16
lock
push
inc
bound
cli
sub
test
popa
loope
movsb
xor
imul
mov
inc
popa
dec
sbb
cld
and
bound
es
adc
es
adc
and
cmp
es
dec
cmp
adc
movsb
imul
arpl
mov
xor
cmp
xchg
inc
pop
push
dec
mov
pop
mov
jo
sbb
pop
dec
push
fwait
test
fld1
sub
mov
cli
pop
pop
jo
sub
cmp
flds
lahf
push
pusha
add
cmp
dec
jp
inc
xor
negl
pop
mov
or
and
dec
fldenv
es
out
xchg
test
push
jo
sbb
dec
bound
xor
icebp
or
push
and
out
jp
lock
push
dec
xor
data16
push
inc
fs
dec
push
in
pop
mov
aaa
pop
pop
sbb
pop
sbb
pop
fiadds
pop
dec
cmp
jg
fwait
dec
movsb
bound
add
mov
dec
ret
and
and
inc
push
push
dec
call
loope
dec
test
loope
in
cmp
cmp
jmp
pusha
push
in
fidivl
loope
dec
loope
or
xor
sbb
push
loop,pt
pop
sbb
inc
and
dec
cs
data16
and
pusha
dec
push
add
hlt
fisubl
pop
and
cmpsl
push
cmp
roll
push
push
data16
jns
dec
inc
push
pusha
pusha
inc
dec
ss
dec
push
stos
icebp
jmp
repz
imul
mov
cmpsb
fs
dec
imul
aas
addr16
xor
push
cmpsl
gs
or
xchg
and
fbld
stc
pop
mov
push
repz
push
and
es
out
xor
sahf
scas
dec
dec
dec
push
imul
stos
and
in
sub
pop
es
stos
mov
push
loope
mov
dec
loope
flds
pop
aas
loope
fnstcw
gs
mov
pop
int
es
dec
pop
dec
addr16
push
fstps
pop
push
loope
fsts
fcompl
loope
flds
jecxz
bound
imul
test
dec
dec
pop
ds
pop
pusha
inc
out
rorl
dec
lret
pop
push
and
push
fbld
scas
fisttpl
fstl
pop
repnz
dec
lahf
pop
jns
push
or
jg
fcmovnb
pop
dec
push
int
fwait
out
xor
xor
aam
xor
pop
int
es
out
bound
inc
push
shr
out
lods
xor
pop
pop
xor
dec
fnstenv
pusha
dec
dec
fnstcw
pusha
inc
dec
fld
dec
aas
pop
inc
pusha
cmp
xor
pop
out
inc
xor
lds
sub
push
pop
popa
bound
shl
bound
pop
out
pop
data16
push
es
out
push
data16
dec
es
stos
jb
mov
fsubs
lret
cwtl
popa
inc
pop
aad
aam
out
inc
out
jp
push
and
push
dec
mov
xchg
in
mov
movsl
lcall
lcall
ljmp
sbb
ljmp
dec
dec
sub
jmp
pusha
push
cs
sbb
rcrb
cs
pop
sahf
cmp
fs
push
xor
into
cli
fsubp
in
push
jl
sub
push
pop
push
push
stc
ss
loope
cmp
push
push
pusha
push
pop
fnstcw
mov
inc
fs
pop
or
push
mov
and
sahf
inc
sti
sub
cs
pop
fldenv
and
stos
pop
jmp
add
addr16
repz
pushf
test
inc
mov
mov
movsl
movsl
test
stos
insb
fcoml
in
bound
cmc
aad
lcall
aas
out
xchg
inc
icebp
lahf
mov
sbb
arpl
insb
out
fnstcw
cmpsb
int
fwait
scas
xor
mov
dec
pop
fsubrl
fcoml
sbb
lods
jp
cmpsl
mov
cmp
fsubrl
pop
or
push
cs
push
inc
faddl
or
inc
xor
pushaw
jge
loope
stos
or
dec
out
push
add
fistps
sbb
xor
pop
push
mov
clc
cmp
subb
dec
mov
push
mov
dec
repz
jae
ret
gs
mov
leave
mov
jmp
imul
hlt
xchg
jae
xor
nop
jno
out
sub
push
dec
sbb
xlat
xor
cmp
xchg
push
push
es
pop
inc
out
ss
xor
xchg
sub
add
push
mov
es
push
jnp
and
fisttpll
mov
inc
rcl
pusha
and
sarb
cltd
lods
pop
movsb
lds
add
ljmpw
fldcw
movsb
cmp
psraw
popf
ret
dec
mov
pop
cmp
xor
negb
ret
inc
inc
push
dec
pop
cmp
push
push
push
gs
pop
and
pop
sub
push
and
fsubs
cmp
push
xchg
adc
bound
xor
das
xor
pop
pop
scas
push
fstl
inc
adc
out
pop
push
imul
ljmp
pop
mov
push
data16
jg
sub
loope
and
stos
sub
pop
mov
nop
add
and
push
push
data16
psubusw
pop
orl
sbb
flds
and
bound
cmpsb
aad
gs
push
sahf
data16
mov
push
cmp
pusha
es
std
dec
js
fnstenv
pop
push
mov
scas
pop
jmp
mov
inc
icebp
and
daa
push
mov
adc
cmp
pop
xchg
mov
sbb
xchg
inc
lcall
es
push
mov
cmpsl
cmp
inc
dec
jge
sbb
pop
mov
pop
mov
adc
cmp
adc
push
frstor
mov
mov
adc
loope,pt
fildl
ds
adc
dec
das
loop
lret
sub
sbb
pushf
rorb
or
fiaddl
and
lods
mov
jo
pop
lret
pop
fidivrl
std
mov
addb
sbb
pushf
es
sahf
mov
sub
inc
inc
inc
cmp
cmp
mov
jmp
in
sbb
cmpsl
es
gs
add
addr16
fldenv
lret
cmp
mov
pop
loope
sahf
nop
inc
fldcw
and
fcmovbe
push
push
dec
in
imul
cmpsl
stos
ficomps
sub
fildl
bound
mov
cmp
movsl
jae
push
mov
imul
pop
dec
mov
dec
sahf
cmpl
cmp
loope
or
es
ds
add
into
add
xor
data16
pop
sub
push
cmc
pop
bound
push
jae
and
push
clc
int3
xor
icebp
xor
mov
rorl
cmp
in
stos
pop
ficompl
inc
dec
push
cmp
loope
call
xor
mov
cld
in
xlat
cmpsl
loope
pusha
cmp
push
cltd
lds
push
cmp
lret
cltd
cs
sbb
and
or
pop
cmp
dec
pop
ficompl
stos
das
pop
stos
daa
bound
xor
pop
mov
pop
pop
pop
stos
pop
das
cmp
push
add
dec
loope
movsb
inc
cmp
pop
mov
inc
bound
stc
ret
sbb
mov
jle
xchg
sbb
gs
dec
push
mov
pop
sbb
rclb
movsb
in
pop
fldt
movsl
xor
loop
sbb
push
inc
and
pop
ss
inc
inc
shlb
and
data16
sub
xor
andl
jb,pn
xor
lds
fnstcw
imul
cmp
cmc
aad
push
or
lahf
pop
push
pop
inc
loope
es
out
dec
pop
inc
loope
movsb
inc
inc
data16
cltd
fidivrs
out
outsl
cmp
xor
les
cltd
add
movsl
mov
jno
mov
inc
or
pop
mov
ret
push
push
stc
roll
arpl
push
dec
cltd
add
inc
data16
ss
xchg
push
addr16
and
push
dec
bound
cmp
out
sub
movsl
in
xor
aas
loope
inc
cmpsl
and
cmpsl
dec
enter
mov
pusha
jmp
jne
push
pop
cmp
inc
es
xor
imul
push
push
push
cmpsl
scas
fnstcw
cmp
pop
xor
push
sbbb
dec
sti
inc
pop
or
push
shlw
in
inc
mov
aam
in
xchg
or
dec
repnz
or
jg
mov
in
xor
push
aas
adc
scas
in
mov
ret
nop
cmp
adc
scas
in
sub
in
mov
nop
jne
adc
scas
in
aas
nop
push
cmp
or
lcall
movsl
lods
fadd
movsl
leave
add
inc
dec
lret
ret
fsubp
es
loope
scas
jg
cmp
and
jmp
pop
dec
mov
movl
les
out
pop
test
pop
lret
pusha
inc
dec
xor
pusha
arpl
rcrl
dec
movl
sbb
addr16
iret
fstps
out
gs
out
sub
gs
movsb
cmpsl
jbe
pop
sbb
and
movsl
in
mov
inc
xor
lods
mov
and
and
add
push
imull
xor
dec
ftst
xor
mov
inc
mov
cmp
cltd
sbb
or
push
imul
sbb
sahf
adc
pusha
sbb
or
pop
inc
sbb
dec
and
mov
bound
inc
and
loopne
pop
cmp
ss
out
and
xor
and
and
rcrl
in
sub
lock
pop
fldenv
and
dec
push
pop
fwait
and
int3
das
xchg
dec
fnstenv
and
pop
cmp
and
data16
leave
ret
xor
and
jmp
and
push
loope
fs
or
jns
push
dec
das
sbb
out
sub
ds
fisttpl
cmpsl
test
adc
jmp
and
or
imul
cmpsb
push
and
pusha
pop
cmpsl
or
sub
ss
pop
push
pop
mov
outsl
or
adc
xchg
push
cltd
in
push
pop
add
neg
pop
in
jo
loope
gs
movsb
push
movsl
push
addr16
dec
pop
ljmp
mov
jae
inc
sub
and
in
movl
dec
pop
cmp
push
ds
add
pop
bound
das
mov
push
aas
xor
mov
dec
push
dec
pusha
aam
add
ss
pop
bound
cmp
adc
push
cmp
pop
inc
es
sbb
popa
iret
inc
inc
mov
call
and
inc
outsl
mov
in
push
mov
stos
scas
dec
pop
cltd
jl
sub
jl
cmp
hlt
scas
cmp
ret
inc
jns
jg
enter
cwtl
outsl
loope
loope
cmp
push
aaa
dec
dec
shrb
lahf
inc
pop
inc
lahf
and
rolb
cmp
out
mov
and
cmp
pusha
pusha
xor
loopne
hlt
pop
lahf
addr16
cs
dec
loope
pop
fsubr
mov
pop
push
dec
loope
leave
bound
inc
loop
push
dec
dec
pop
mov
clc
inc
stos
push
outsb
push
xchg
pop
push
in
cmp
dec
cmp
std
shrb
ja
inc
ss
shl
push
inc
pusha
and
push
imul
sub
sub
cli
push
pop
fiadds
push
xor
inc
loopne
and
push
inc
push
xor
inc
popa
in
dec
fldcw
das
dec
aam
cmp
xor
fs
mov
xor
mov
pushw
stc
fwait
sub
cmpsl
imul
outsb
out
loope
xlat
pop
punpckldq
cmp
lock
pop
bound
filds
jecxz
jl
fsts
sbb
icebp
mov
mov
pusha
cmp
imul
lock
xlat
bound
jmp
loope
aad
bound
shlb
bound
dec
data16
std
sub
mov
loop
dec
add
push
bound
rclb
fisttps
push
sahf
fnsave
ss
xor
jmp
loope
mov
and
loop
dec
push
sbb
xchg
push
push
pusha
xor
mov
dec
sub
dec
inc
dec
pop
loop
xor
bound
push
loope
es
pusha
fldenv
rcrb
dec
ficoml
fs
cmpsl
icebp
cmp
inc
pop
push
push
arpl
rorl
cmp
in
data16
and
hlt
cmp
dec
pusha
cmp
mov
shrb
fs
push
int
fs
or
mov
pop
adcb
int3
sub
push
dec
in
in
hlt
mov
inc
nop
icebp
lea
sbb
pop
shlb
clc
sub
out
fldcw
sbb
pop
daa
push
cmc
cwtl
and
jno
jecxz
dec
fldenv
dec
aaa
arpl
aad
pop
es
mov
mov
xor
gs
icebp
push
int3
jmp
inc
bound
inc
dec
shlb
test
inc
test
xor
pop
pop
or
inc
loop
pop
bound
dec
cmp
nop
xor
sbb
imul
lock
sbb
push
and
inc
imul
and
sbb
bound
cmc
jmp
inc
push
push
mov
filds
jne
sbb
or
sub
push
sbb
or
pop
bound
fiaddl
inc
xor
lock
xchg
inc
cmp
pusha
ss
add
and
add
xlat
xchg
ret
inc
testb
ret
testb
add
es
ret
add
es
sub
xchg
push
mov
jecxz
in
add
ret
xorl
jecxz
lret
add
outsb
es
push
es
and
dec
push
dec
xchg
jecxz
sub
cmp
push
adc
mov
sbb
es
and
sbb
pop
bound
push
mov
movsb
fisubs
fldt
pop
bound
dec
sub
sahf
xor
repnz
sub
push
data16
fnstsw
adc
and
mov
int
cld
pusha
pop
sbb
add
and
mov
mov
inc
aam
fs
or
push
cmpsl
jge
hlt
pop
fincstp
xor
in
cmpsl
pop
pushf
pop
shll
pop
mov
jmp
orl
pop
xchg
loope
movsb
jb
inc
aad
bound
cmp
add
ja
mov
push
inc
rorb
ss
fld
mov
sub
push
xlat
inc
cmp
cmpsl
sbb
jno
sub
fsubs
pop
jmp
in
or
in
gs
pusha
push
mov
xchg
pop
call
pusha
movsb
push
mov
inc
pop
xor
dec
rcrb
adcl
dec
movsb
mov
insb
cwtl
pushf
push
cmp
pushf
cmp
lret
pushf
cmp
dec
pushf
xor
call
push
inc
leave
dec
mov
in
add
cmp
dec
and
std
or
fbstp
push
dec
in
xor
or
dec
bound
dec
popa
inc
loope
movsb
lahf
inc
cmpsl
stc
es
addl
dec
xchg
in
fs
ds
cmp
xchg
aas
dec
push
add
inc
es
sbb
std
mov
data16
imul
pop
inc
pop
in
dec
dec
aad
cmp
bound
movsb
lds
imul
sub
sub
push
hlt
push
xchg
xor
frstor
or
imul
mov
dec
ficoms
dec
and
loope
xchg
es
mov
mov
and
or
int
std
sbb
xor
idivb
jae
sbb
jmp
push
inc
neg
mov
stos
pop
add
jae
mov
lods
pop
insl
jns
cmp
push
jecxz
cld
movsl
dec
lea
pusha
lea
push
or
inc
push
movsl
add
dec
bound
cmp
lcall
pop
pop
xor
fisubl
adcl
loop
dec
mov
stos
in
cmpsl
cmp
movsl
fdivrs
popa
inc
icebp
xor
mov
out
pop
data16
aaa
xchg
jmp
and
and
push
push
xchg
fstps
and
cmpsl
enter
dec
out
movl
pop
push
stos
cmp
pusha
shlb
loope
fistps
add
mov
es
shl
popf
in
data16
test
stos
in
push
loope
arpl
fldl
jae
cmp
popa
hlt
mov
add
jle
fxch
dec
or
sbb
bound
sub
mov
add
hlt
add
push
and
mov
inc
es
cmp
and
sahf
pop
jecxz
xor
stos
dec
jns
push
adc
icebp
adc
repnz
lds
mov
mov
pop
mov
push
push
cmp
in
movsl
and
leavew
jl
int
sub
into
pop
outsl
dec
loope
rcl
roll
shl
pop
or
pop
int
inc
es
fxam
pop
dec
fldenv
es
and
cmp
push
xchg
push
cmp
pop
xchg
lods
lds
inc
jbe
jl
push
rcl
rdtsc
pop
arpl
mov
inc
mov
stc
dec
push
cmpsb
out
cmc
push
dec
and
xor
pop
loope
xchg
leave
dec
sbb
scas
test
into
sbb
bound
push
add
pop
sbb
bound
ds
xlat
jb
sbb
gs
inc
pop
or
adc
dec
and
and
push
push
aas
dec
andl
ds
movsl
out
out
push
bound
pusha
cmp
movsl
fnstenv
dec
leave
nop
and
pusha
push
sahf
inc
push
dec
ret
push
cmp
inc
loope
in
outsb
jmp
fildll
mov
sub
aad
and
xchg
or
dec
push
or
daa
push
pusha
pusha
and
pop
out
cmc
popf
mov
sbb
and
sub
xor
dec
fldcw
and
sbb
adc
daa
orl
pop
dec
pop
adc
rcll
gs
daa
inc
sub
dec
dec
stc
dec
mov
fstps
pop
fwait
and
inc
xor
pushf
cmp
ljmp
inc
xchg
or
gs
adc
push
push
lcall
imul
jmp
jnp
adc
out
inc
xchg
cmp
xchg
dec
jne
pop
push
adc
fldenv
shlb
dec
aad
test
dec
cltd
ficoml
dec
enter
dec
in
push
pusha
and
xor
in
aas
pop
stc
sub
mov
xchg
hlt
fs
dec
fdivs
sub
addr16
pop
dec
cltd
mov
xor
xor
push
es
sub
imul
roll
push
gs
or
jmp
setg
gs
inc
pusha
pusha
pop
gs
shl
pop
push
pop
push
dec
add
daa
adc
fdivrs
pop
notl
sbb
and
fldenv
loop
sbb
shrb
adc
in
or
leave
in
out
pop
fldenv
es
es
push
dec
fnstenv
loope
and
es
cmpsl
loopne
pop
inc
pop
push
out
xor
push
jg
and
push
pusha
and
int3
push
mov
dec
inc
gs
mov
xor
roll
ret
call
sahf
out
push
dec
pop
call
sub
out
sub
imul
push
cmp
movsb
pusha
push
loope
sub
leave
sub
pop
cmp
fnstenv
es
and
mov
mov
ret
mov
popf
add
lret
insb
jmp
sub
iret
adc
sub
bound
ljmp
add
mov
push
aaa
and
and
jle
es
push
mov
inc
fisubl
iret
fdivs
std
ret
test
in
and
int3
jmp
out
sub
pop
add
pop
lahf
or
and
sbb
push
mov
mov
pop
add
push
mov
movsl
push
mov
mov
adc
sbb
jae
pop
test
ret
sbb
lds
test
into
lea
ja
cmc
pusha
jmp
int3
adc
iret
ljmp
xchg
xor
jecxz
sub
mov
fsubrl
repz
push
mov
xchg
popf
pop
sbb
push
mov
dec
jge
sbb
dec
lods
dec
int
daa
pop
xor
sbb
sub
stos
add
cmpsb
int
push
and
out
movsb
negl
jns
mov
and
or
mov
and
repz
inc
mov
pop
clc
sub
bt
test
movw
pushl
popl
call
clc
pusha
cmp
repnz
push
pusha
movw
lea
jne
xadd
bt
test
mov
cmc
sub
neg
rol
test
rol
mov
call
out
lods
and
push
aaa
mov
jnp
jmp
addr16
jg
stos
pop
adc
int3
stc
sbb
insb
popf
sbb
inc
mov
fimuls
ret
push
shl
add
sub
mov
adc
jne
ret
rorl
and
mov
sub
xor
add
push
add
shlb
popf
adc
mov
sbb
mov
xchg
and
je
adc
data16
stos
out
jp
dec
movb
call
jmp
lea
ja
pusha
lea
jb
jmp
lret
sub
aaa
lods
push
mov
jle
push
jp
jb
cmp
jns
ljmp
shl
ss
ljmp
cmp
test
enter
nop
in
stc
enter
imul
sbb
fcoml
dec
test
sbb
xlat
imul
roll
cmp
and
test
fdivrl
cmp
sub
mov
mov
dec
add
lea
ror
lea
inc
mov
push
clc
test
add
call
cmp
clc
not
btr
xor
not
xchg
pusha
bswap
mov
not
mov
push
bswap
mov
bswap
mov
movb
pushf
push
call
je
xchg
sub
xor
and
cld
mov
inc
lea
leave
add
pop
sbb
cld
cmpsb
pop
mov
loopne
in
pop
push
push
mov
pushl
ss
cmp
cwtl
pop
jno
testb
adc
dec
stos
jl
fwait
mov
cmp
loope
mov
xor
jge
movsl
mov
call
pushf
jb
outsb
dec
pop
shrb
cmpb
sub
cmpsl
or
cmp
aad
sahf
xor
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
jge
push
aaa
pop
into
mov
push
and
repnz
out
out
lahf
or
loope
fadd
in
divb
nop
lcall
int3
hlt
in
inc
addr16
mov
sbb
and
mov
roll
fwait
pop
push
pusha
inc
loope
adc
fdivl
cmp
xor
xlat
arpl
sub
cmc
ja
and
dec
sbb
ljmp
lods
xor
xchg
pop
imul
inc
lret
outsl
and
adc
pop
jns
dec
adc
mov
fcomi
jge
inc
push
cwtl
add
lret
clc
adc
add
pop
fidivrl
or
insl
call
shlb
push
ret
std
in
pop
and
inc
mov
and
cs
push
out
mov
xlat
sub
insb
xor
mov
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
pop
ror
bt
mov
bt
call
call
lea
jne
pushf
pusha
lea
call
pushf
lea
jmp
add
pusha
mov
push
pushf
lea
jmp
push
push
xor
xor
fs
insb
add
aaa
adcl
push
jno
popa
cmp
jle
mov
stc
out
mov
stc
pop
inc
sbb
mov
scas
clc
push
mov
ret
mov
xor
loope
pop
js
pop
sbb
inc
movsl
out
lea
dec
scas
mov
in
testb
xchg
daa
enter
aas
imull
push
cmp
xchg
fisubrl
jns
sub
push
mov
jmp
sbb
pop
and
push
dec
imul
rorl
ja
sar
lahf
jl
movsb
idivl
pop
mov
movsl
xchg
pushf
movb
movl
call
mov
movzbw
pop
push
pushl
ret
shrl
add
lret
outsl
sbb
mov
inc
mov
imul
je
fisubrs
test
lods
in
push
mov
clc
add
cmc
pop
les
sbb
std
add
mov
adc
or
wrmsr
pop
mov
push
clc
cltd
shlb
mov
in
or
or
or
out
daa
fists
enter
rorb
inc
adc
jae
pop
jecxz
jge
push
mov
jno
daa
push
aaa
xchg
mov
shrl
push
jecxz
pop
decl
or
fidivrs
test
std
imul
daa
loop
lea
popf
cwtl
adc
mov
jecxz
aaa
push
pop
xor
ss
ja
or
cmpsl
xchg
inc
int3
outsl
sbb
cmc
out
fwait
cmp
fistps
scas
xchg
sub
push
aaa
stos
ret
lcall
stos
daa
cmp
pop
sbb
jnp
cwtl
cmc
bound
mov
inc
mov
in
dec
or
in
cmp
sbb
inc
cld
inc
mov
or
push
fistpll
sub
sub
mov
js
sub
test
cmp
std
jns
ss
stos
insb
notb
sbb
sub
xchg
and
cltd
mov
sbb
ljmp
adc
mov
fnstcw
lods
inc
pop
in
mov
aas
lock
mov
cmp
les
cs
mov
pop
out
outsl
cmp
mov
outsl
jns
mov
inc
push
mov
test
fbld
jb
sub
out
xchg
pusha
cwtl
mov
push
mov
jns
add
add
nop
jb
mov
decl
movb
sbb
lret
cmp
mov
mov
bnd
jg
adc
mov
add
sbb
js,pt
cmp
icebp
mov
jecxz
bt
sub
stc
movw
call
pushf
pushf
lea
jae
jmp
stc
xor
pushf
jmp
lea
jae
jmp
cmp
push
jmp
pushf
add
and
aaa
cmp
std
addl
adc
dec
subl
mov
movsb
jb
repnz
in
shl
adc
ficomps
cmp
xchg
add
cli
in
fdivrs
loop
mov
ljmp
mov
in
mov
or
call
adc
and
inc
pop
add
test
test
push
mov
xor
popa
in
mov
shrl
inc
ja
mov
add
sarl
xor
enter
jmp
mov
fisttps
lret
adc
dec
or
pop
scas
push
mov
lods
jno
sti
add
push
shrl
test
std
dec
sahf
int3
addr16
jmp
fidivrs
addb
je
mov
mov
test
cmp
push
neg
arpl
push
xchg
inc
mov
clc
sti
and
push
dec
push
mov
ljmp
iret
repnz
jl
imul
jle
shlb
fldl
stc
or
clc
je
bound
adc
aaa
push
test
hlt
push
mov
lea
into
imul
mov
ret
addr16
pop
movsl
test
cli
movsl
addr16
mov
in
push
push
inc
pmovmskb
ljmp
pushf
stos
pusha
pushf
pushf
pushl
lea
jmp
dec
loopne
and
hlt
cmp
fs
sub
mov
pop
test
stos
jnp
cmp
jnp
fisttps
loope
mov
jg
push
sub
dec
add
imul
jb
and
inc
mov
push
repnz
jge
or
and
push
cmp
ljmp
sbb
cltd
mov
lods
shll
mov
jg
test
mov
stc
adc
popa
xor
in
das
xchg
imul
shl
xchg
or
mov
pushf
jmp
pushf
lea
ja
pusha
movw
cmc
jmp
pop
lods
and
push
aaa
mov
mov
dec
mov
out
fcompl
jp
call
mov
inc
mov
outsb
lcall
push
xor
lock
movsb
fists
push
pop
fstpl
rcll
mov
push
jno
out
push
in
scas
repz
sub
add
js
jae
negl
test
pop
cwtl
sbb
cmp
shlb
fcmove
sbb
and
repz
scas
ljmp
aam
cmp
and
mov
and
clc
mov
xchg
and
fdivs
loop
sbb
inc
push
push
mov
mov
sbb
mov
loope
xor
mov
lea
lret
les
addr16
scas
popa
lcall
pop
jmp
xchg
mov
pop
daa
addr16
adc
pop
pop
pop
test
add
cli
je
lret
sbb
filds
pop
push
loope
fsubs
push
or
push
jnp
mov
ficoml
cmp
pop
cltd
mov
int
daa
sub
shrl
jge
mov
pop
pop
jmp
dec
sbb
sub
push
push
mov
and
xor
or
inc
rcl
setge
rol
xchg
shld
neg
or
not
mov
sbb
or
mov
pusha
xchg
rol
rol
mov
pushf
call
jmp
shr
mov
test
cmp
pushl
test
test
jmp
fcmovne
mov
push
aaa
and
mov
mov
mov
xor
orl
sub
add
in
push
mov
mov
mov
test
in
and
sbb
add
jnp
js
movb
jl
push
xor
aad
xchg
or
xor
inc
cmp
into
or
and
cltd
dec
sbb
movl
inc
lods
int3
pop
pop
stos
and
push
sbb
cmp
jns
mov
sub
inc
pop
push
pop
popf
divps
or
loop
stos
js
inc
mov
add
fcoml
xchg
inc
leave
test
test
add
push
in
outsl
rcrb
mov
push
out
cmpsb
clc
dec
sub
out
lock
mov
mov
jne
popa
or
iret
imul
std
aam
mov
mov
xor
or
test
or
pushf
pushf
pushl
pushf
stos
pusha
lea
jmp
lea
je
pushf
pushf
lea
jmp
imul
pusha
pushl
add
mov
lea
jmp
stc
shr
mov
add
xor
mov
jmp
lea
je
cmc
mov
inc
test
or
shld
add
jae
mov
cmp
test
push
mov
pusha
lea
je
shrd
jmp
mov
inc
mov
pushf
adc
pushf
pushl
ret
push
lea
jae
stc
clc
push
cmc
cmp
lea
jle
push
pusha
lea
jae
pusha
jmp
adc
pusha
lea
jae
jmp
call
movl
push
mov
pusha
movw
pushl
ret
pusha
pushf
lea
je
push
push
pusha
movw
lea
jmp
cmp
add
pushl
movb
pusha
lea
jmp
cmc
cmp
cmp
cmpb
pusha
call
sub
push
pusha
rep
push
not
pop
mov
push
mov
pushf
mov
lea
jmp
xchg
jge
pop
push
aaa
xchg
jmp
sti
out
mov
xchg
pop
jae
pushf
xchg
add
lds
out
in
xor
dec
cli
jo
into
insl
stos
or
xor
test
mov
inc
mov
cld
scas
pop
fidivl
xchg
aas
mov
test
daa
setbe
into
popa
pop
xchg
cli
data16
ret
cmp
add
ret
adcl
stos
ljmp
cld
test
in
xor
arpl
push
sub
mov
sarl
sub
xchg
out
pop
lret
push
call
or
sahf
pusha
mov
dec
and
lods
mov
loope
out
mov
movsb
sbb
lret
outsb
fimull
push
imulb
mov
mov
push
xor
fdivrl
mov
pop
repz
adc
pusha
mov
add
icebp
pusha
fistpl
dec
in
ss
jle
add
aad
clc
fcomps
add
adc
sbb
or
imul
mov
je
xchg
out
repz
cltd
jne
sbb
add
cltd
jae
and
movsb
outsl
out
aad
addr16
mov
xor
lea
sub
or
aad
add
xchg
cmp
movsl
into
out
cmp
lret
aam
int3
mov
mov
cmp
xchg
es
or
into
dec
and
inc
cmp
ljmp
outsb
adc
test
insl
mov
mov
enter
xor
and
jbe
cmp
popa
adc
dec
or
negb
cmp
cmpsl
imul
fistpll
jmp
xchg
fbstp
push
aaa
out
inc
rcll
stos
lahf
icebp
jecxz
xor
fsubl
dec
mov
cmp
scas
dec
imul
lods
and
mov
lods
or
aas
mov
icebp
in
call
xchg
arpl
sti
adc
jp
or
test
or
sbb
push
sbb
jg
imul
push
jb
jl
sub
add
ficompl
mov
sbb
cs
ja
xor
xor
data16
sbb
pop
push
mov
sbb
cmp
fists
mov
lea
scas
stos
add
sbb
push
jnp
mov
lcall
mov
lock
or
pop
and
out
shr
mov
add
adc
pushf
lea
jmp
push
lea
jne
adc
sub
bsf
or
mov
and
test
add
xor
mov
pusha
movw
pushl
bt
test
movb
pushf
call
and
int3
cmc
orl
or
mov
or
jno
mov
outsl
fadd
stos
mov
ror
mov
xor
or
jb
std
pop
mov
fsts
dec
xor
mov
loop
sbb
or
jno
scas
aaa
mov
iret
dec
or
fs
xor
pop
inc
adc
pop
iret
repz
mov
push
fsubs
mov
xor
xchg
mov
jmp
mov
cmc
bt
bt
mov
movb
add
pushl
test
test
movb
jmp
pushf
jmp
add
push
gs
jb
popa
je
dec
gs
js
add
je
add
fs
je
clc
pusha
sub
pushf
pushf
movl
pushf
cmp
pushf
jmp
xor
lock
in
or
sub
std
dec
pop
sub
mov
pop
mov
cmp
stc
jge
insl
add
mov
test
repnz
sbb
mov
les
call
dec
pop
insl
jge
in
mov
jp
push
jo
lods
inc
test
cmp
lock
xchg
pop
sbb
out
push
and
adc
or
lret
hlt
test
jne
loope
xor
cmp
sub
and
dec
push
fiaddl
iret
mov
fcomp
sub
inc
roll
sub
sub
cmp
cld
sbb
or
add
jl
andl
test
out
ds
adc
cmpsl
imul
cmp
dec
and
dec
sbb
adc
and
xchg
dec
push
push
push
fmulp
push
jp
sub
sbb
enter
cmp
ja
and
push
mov
jmp
mov
ret
fisttpll
pop
fs
sbb
fidivrl
addr16
jne
sub
xchg
filds
push
sbb
cmp
push
mov
sub
sahf
sbb
sbb
movsl
sub
lds
popf
stc
xchg
sbb
jmp
push
adc
repnz
loopne
aam
cmpsb
pop
popf
xchg
cltd
loop
inc
mov
sbb
rcll
sbb
and
ret
andl
mov
pop
enter
push
repnz
sub
pop
into
pushf
scas
dec
ljmp
fistpl
sbb
jl
mov
mov
enter
push
les
mov
push
lods
mov
inc
jg
das
lods
in
jae
mov
fisttpll
jmp
fimull
or
mov
cld
fcomps
jno
pop
repz
push
adc
dec
push
push
cmp
inc
pusha
jp
stc
jp
js
mov
push
fwait
mov
std
insb
adc
xchg
stc
lea
lret
mov
pop
and
jnp
int3
jg
sbb
inc
inc
inc
jo
stos
pushf
call
pushf
lea
pop
mov
mov
jmp
add
mov
cmc
add
cmp
btr
mov
pusha
cmp
sub
add
jo
cmp
bt
cmp
repnz
pusha
lea
jne
shrd
sar
xchg
mov
ror
bsr
bsf
sub
call
test
push
pushf
lea
je
pushf
pusha
test
push
sub
stc
cmp
lea
jae
push
lea
ja
pushf
clc
stc
imul
cmp
call
pop
inc
jnp
push
aaa
pop
insb
fmuls
lock
loopne
nop
je
hlt
addr16
std
out
and
xchg
dec
arpl
xchg
cmp
mov
add
les
cmp
add
js
fisubrs
insb
fiaddl
orb
xchg
or
movsb
adc
dec
xor
data16
add
pop
push
xchg
sub
ds
jl
or
fbstp
movsl
or
inc
jl
loop
mov
popf
xchg
popf
add
push
stos
and
sbb
cs
test
and
dec
test
icebp
dec
call
aaa
jecxz
pusha
cld
mov
hlt
cmp
daa
jge
outsb
mov
adc
mov
rol
ljmp
fisttpl
fwait
jl
out
push
xchg
loop
inc
dec
notb
mov
cmp
enter
gs
adc
jp
adc
sti
dec
lds
sbb
arpl
out
inc
scas
jmp
adc
icebp
addr16
fiadds
rcrb
sbbl
mov
inc
test
cli
push
aaa
fildll
fldt
jb
inc
or
sahf
and
int3
pop
sti
pop
fisubs
xlat
call
rcl
add
xor
neg
mov
and
call
insb
sbb
push
hlt
js
and
mov
sub
sub
jge
repnz
jp
inc
loopne
into
jg
daa
leave
sbb
mov
test
js
pop
xor
add
les
repz
lock
push
jl
rorl
fwait
jecxz
ljmp
push
enter
loopne
mov
push
dec
jecxz
sbb
sbb
add
std
adc
pushf
pop
mov
je
cmp
adc
test
mov
cmp
icebp
andl
xor
mov
push
repz
mov
and
rcrl
cmp
lret
push
out
popa
pop
outsb
pop
imul
xor
mov
out
sub
loop
mov
mov
je
adcb
arpl
mov
outsl
sbb
lods
aas
and
add
add
enter
cmp
xor
jmp
pushf
mov
push
lea
jmp
dec
int
adc
cmp
add
jne
xor
xchg
js
dec
or
sub
movsl
repz
jnp
inc
hlt
aad
fbstp
jbe
cwtl
lret
adc
ss
and
into
cltd
dec
xchg
push
push
xorps
dec
push
and
mov
and
mov
mov
mov
adc
mov
jle
ret
mov
pop
je
repz
out
fs
inc
push
dec
inc
dec
xor
cs
insb
add
mov
or
pushf
movw
jmp
es
adc
aaa
jmp
rorb
mov
imulb
bound
mov
push
outsl
jo
add
sbb
pop
aad
dec
dec
jno
sti
inc
mov
test
lock
icebp
sub
lds
add
popa
xchg
mov
jo
pop
cmp
push
leave
cmp
mov
fwait
add
inc
and
int
inc
mov
sbb
jge
jns
iret
mov
leave
pop
in
xchg
ret
popf
dec
rcll
lret
add
pop
loope
flds
pop
jno
mov
int
sbb
inc
movsb
aaa
push
pop
jo
lock
jo
or
out
inc
cmp
cwtl
mov
cli
jmp
repz
sbb
cli
cmp
jecxz
leave
sub
xor
movb
inc
cld
xor
cmp
push
push
pop
pushl
loopne
xor
adc
cmp
nop
sub
shrl
inc
shlb
in
add
loope
push
aaa
cmc
inc
stos
push
mov
ret
xchg
xor
inc
out
xor
stos
in
jne
pop
add
test
jmp
xchg
adc
incl
cld
pop
xchg
js
mov
call
flds
push
jge
sar
fisttps
pop
add
lahf
push
mov
aam
dec
movsb
pushf
xor
and
jo
sub
adc
insl
jo
shlb
push
or
daa
imul
lock
mov
mov
rorb
rclb
push
aaa
clc
sub
stos
mov
shll
stos
pop
xchg
js
icebp
ljmp
and
jo
clc
std
inc
mov
sub
test
push
push
mov
mov
outsb
lds
push
outsl
push
pusha
cmp
add
iret
inc
jecxz
sbb
insl
cmpsl
sbb
push
or
cs
pop
adc
mov
mov
movsb
cmp
js
inc
adc
fldenv
in
push
mov
xchg
cld
mov
shrb
mov
mov
cmp
pop
js
adc
cmp
xor
test
add
int
pop
addr16
xchg
push
jmp
aam
xor
mov
mov
sbb
push
outsl
outsl
jbe
icebp
shll
ret
ss
dec
add
sbb
and
cmp
scas
add
push
mov
push
pop
mov
rol
mov
dec
aam
inc
enter
nop
add
fdivl
lret
xor
inc
addr16
loope
lods
ss
and
add
xor
and
jb
ficoms
sub
sahf
jl
mov
mov
mov
push
iret
cmp
ret
lods
fmuls
pop
xor
out
in
ret
in
inc
jmp
std
add
jb
jmp
cmp
xchg
addr16
push
data16
push
xchg
adc
into
push
xor
mov
sub
jnp
adcb
aaa
push
xchg
inc
or
sar
lds
ljmp
pushf
add
xchg
pop
loopne
fisttps
sar
fldt
test
out
xlat
ret
ds
scas
mov
je
adc
or
xchg
and
sub
in
out
cltd
sbb
stos
jb
mov
sub
shrl
flds
aam
xchg
jne
lods
es
lret
dec
jb
pop
rorb
xor
jbe
call
int
xchg
adc
jbe
xchg
ss
mov
push
mov
pop
popa
jns
mov
xchg
lahf
test
jae
sub
adc
imul
mov
push
gs
imul
inc
jne
ret
push
out
xor
push
imulb
xor
loopne
aam
idivb
adc
adc
iret
rorl
xor
lds
aaa
mov
push
adc
push
cmp
mov
insb
cs
scas
mov
dec
pop
xchg
inc
pop
inc
lea
jae
push
lea
jne
jmp
ret
dec
mov
push
stos
dec
sub
ret
pop
fwait
movl
push
popf
daa
int
imul
icebp
scas
bound
xor
push
mov
mov
mov
adc
jne
xchg
or
test
stos
jg
mov
loopne
mov
movsb
insb
loopne
aad
adc
push
decl
mov
fistps
stos
add
testl
rclb
jb
ljmp
mov
jb
ret
test
xchg
add
dec
inc
and
xchg
fisttpl
adc
push
push
and
jae
fcomp
scas
in
sub
add
xor
inc
inc
mov
add
pop
call
pusha
rorl
imul
inc
rcrl
dec
fiadds
add
mov
dec
dec
push
ret
pop
push
cmp
adc
lock
subl
add
negb
sbb
sub
dec
in
dec
mov
sub
mov
test
sub
jns
xor
sub
dec
int
mov
daa
mov
mov
mov
movsb
fstpl
int
cmpsb
add
cmp
in
dec
dec
data16
push
xchg
testl
sbb
pop
sti
dec
add
pop
inc
or
ds
adcb
arpl
ja
sti
mov
mov
mov
inc
xchg
add
or
addr16
sub
ret
xchg
dec
cmp
addr16
repz
jp
lods
jbe
aam
jp
jbe
xor
loop
jg
ss
xchg
lret
cld
inc
dec
popf
pop
mov
test
or
test
sbb
push
or
test
stc
or
cmp
mov
pop
movsl
sub
ret
jp
jp
inc
lea
jns
enter
bound
lahf
xorb
push
scas
lods
outsb
imul
mov
jb
cmp
sahf
jnp
and
or
adc
mov
stos
xor
adc
jp
pushf
pushf
pushf
inc
test
pushw
popfw
pushf
inc
jmp
mov
test
stc
movb
call
jmp
mov
call
pusha
cmc
call
adc
pushf
mov
pushl
pushl
ret
pop
jge
push
push
aaa
sbbb
and
fwait
out
out
push
xchg
ja
fnstsw
xchg
pop
loope
sub
lds
jge
scas
imul
insl
mov
ja
aas
add
pop
adc
icebp
pop
adc
inc
sahf
push
ss
aas
sqrtps
dec
arpl
xchg
cs
popa
sbb
xor
fdivrp
adcb
mov
popf
cmpxchg
fisttpll
cld
xchg
ficompl
insl
fisttps
mov
or
mov
pop
fsubrs
int3
adc
shll
sbb
mov
dec
inc
mov
stc
adc
xchg
and
icebp
sbb
mov
mov
mov
mov
xor
lahf
test
psraw
cmp
gs
std
jne
idiv
mov
pop
out
adc
mov
insb
hlt
loop
loope
push
add
xchg
lret
xor
test
fsubrs
push
pusha
rorb
aaa
mov
jbe
push
push
push
lea
jmp
lods
orb
aaa
xchg
mov
and
in
mov
call
jae
sub
jb
std
das
insl
icebp
insb
dec
cmp
lods
test
pop
es
sub
ret
push
pop
add
dec
fidivl
in
pop
push
mov
xor
out
imul
into
das
lret
les
sub
cltd
bsf
les
adc
xor
ret
or
pop
jno
std
lahf
je
adc
rcll
aad
scas
inc
sbb
add
rol
xchg
aas
mov
shl
mov
je
stc
clc
push
bt
and
and
mov
jmp
idivl
or
aaa
xchg
mov
ja
xlat
ret
lahf
sub
add
inc
pop
ret
dec
mov
push
adc
pop
aaa
ja
sub
jecxz
add
mov
sbbl
aas
ror
sbb
roll
sbb
aas
and
xchg
add
jge
aam
jp
mov
es
sub
stos
fs
adc
jl
push
jge
sub
push
xchg
jp
xor
xchg
mov
shll
imul
bt
cmp
jmp
je
or
mov
xchg
xchg
push
jp
fisubrl
ds
sti
add
pop
inc
mov
push
xor
mov
lcall
lret
sbb
dec
mov
imulb
lcall
out
add
rcrb
arpl
in
clc
or
test
xorl
mov
paddw
outsb
xchg
mov
mov
jg
lret
inc
ja
es
icebp
or
dec
add
in
add
and
jmp
push
lock
std
std
mov
xchg
bound
mov
ret
jae
xlat
lahf
lret
jge
fs
pushf
mov
pop
add
xor
leave
das
lods
pop
jge
jmp
dec
jl
imul
push
les
ljmp
inc
test
into
in
out
daa
je
xchg
in
xchg
push
imulb
into
or
xorb
adc
inc
iret
test
push
aaa
lcall
inc
xchg
cmp
cmp
lcall
xor
popf
fiadds
ret
xor
or
testb
cmc
push
lret
and
incl
lret
das
les
and
xor
push
pop
insl
repz
fsubrl
xchg
sti
data16
out
push
push
or
adc
xchg
jae
adc
out
addb
xchg
clc
mov
daa
dec
push
and
cli
cmp
pusha
lea
ja
push
inc
jmp
push
test
cs
ret
out
dec
scas
dec
out
mov
xchg
decl
popa
inc
xchg
mov
aaa
fwait
ret
gs
lcall
into
insl
or
por
into
push
push
fs
out
fnstsw
fisttpll
sti
push
sbbb
outsl
stos
lods
es
cmp
cmp
pop
bound
aam
adc
test
dec
loope
mov
insb
jnp
push
mov
stos
add
out
add
cmpsb
mov
add
dec
ljmp
enter
fists
lods
mov
mov
lea
ja
push
rol
test
sub
pushf
test
xor
pusha
lea
add
dec
btr
mov
and
clc
pusha
mov
cmp
pusha
repnz
jmp
jmp
arpl
fs
xor
cs
insb
add
fs
ja
clc
imul
push
pusha
add
pushf
lea
jmp
cwtl
outsb
push
or
addb
lods
js
push
mov
fnstsw
hlt
loop
xchg
push
push
lret
jae
das
stos
aas
fwait
out
out
arpl
or
rorl
dec
or
sub
jle
ret
xor
xchg
dec
push
inc
rclb
fcmovne
add
sahf
mov
sbb
cmp
lds
clc
xchg
lret
hlt
adc
cmc
enter
jecxz
ret
sbb
shll
les
movsb
add
ret
ja
and
jo
adc
rcl
push
enter
in
xchg
adc
push
jge
jns
or
mov
sar
sub
sub
ret
cmp
cmp
xor
cwtl
xor
or
cmp
fs
fwait
lods
movsl
add
and
enter
jmp
stc
inc
xchg
pop
push
jp
jns
push
andb
xor
pop
mov
aaa
insl
mov
ljmp
pop
je
mov
sub
scas
lret
pop
fists
repnz
push
hlt
std
popa
mov
push
xchg
negl
cmc
jg
lret
inc
iret
jno
adc
hlt
jle
mov
mov
add
mov
jmp
cmp
pushf
lea
jae
pushf
lea
jmp
fistps
mov
xchg
pop
jecxz
pop
idivl
and
rcll
cli
sbb
rclb
shl
insb
rcll
push
out
aad
jg
mov
dec
mov
mov
lcall
pop
mov
nop
popf
jne
sbb
addr16
push
sarl
mov
stc
arpl
lahf
inc
lret
jne
push
dec
jle
rcll
lea
ja
pushf
lea
jb
cmc
cmpb
jmp
lea
jne
shr
rcr
and
cwtl
xor
cmc
sub
shr
push
mov
ror
adc
add
call
mov
jmp
les
popl
mov
test
mov
insb
pusha
in
test
repz
adc
pop
add
push
leave
sbb
adc
int
sbb
cmpsb
adcl
xchg
popf
cmpsb
adc
out
outsl
xor
push
add
popa
stos
fistl
andb
inc
xchg
mov
fs
jmp
loopne
sub
mov
repnz
sbb
fwait
jl
loope
push
dec
fisttpll
ds
sbb
into
adc
jae
cmpsl
sbb
inc
ljmp
test
cmp
pop
cmc
clc
add
arpl
jnp
or
pop
lret
fisubrl
inc
cmp
cld
adc
mov
dec
mov
jge
lret
ret
ljmp
sbb
and
dec
mov
movsl
mov
jno
shl
jo
jne
fsubrl
in
sub
and
xor
xchg
xor
mov
or
out
out
sarl
fisubrs
mov
xor
add
and
add
add
cmp
add
add
add
add
add
cmpsb
and
add
add
xchg
xchg
and
add
add
xor
add
in
dec
sub
add
add
add
add
add
sub
add
add
adc
add
pop
mov
add
lods
pushf
and
mov
mov
sub
add
jns
add
add
add
scas
adc
scas
jb
xchg
push
jb
push
into
inc
scas
fisubl
jge
lret
cmp
sarb
movsl
popf
in
pop
bswap
push
sbb
cmp
push
xlat
es
sarb
sbb
xor
inc
mov
pop
adc
push
cmpb
sub
cmpsl
dec
repz
push
add
call
lods
mov
mov
xchg
fwait
add
xchg
and
call
xchg
mov
cmp
adc
aaa
dec
movsl
andl
pop
aad
xchg
cmp
xchg
lods
cmpsb
push
sbb
and
scas
popf
fistpll
pop
lds
adc
inc
jge
push
cmc
adc
out
in
hlt
aas
push
lock
icebp
sbb
jg
sti
insb
cmp
cmpsl
xor
and
mov
mov
dec
xchg
lods
mov
or
popf
cs
mov
mov
dec
mov
jmp
dec
mov
test
cmp
cwtl
sarb
push
pusha
xchg
adc
add
adc
stos
ds
push
or
push
out
fdivrl
sub
adc
jge
pushf
in
jno
mov
cmp
fsub
and
mov
and
call
int3
push
and
lock
cmp
mov
sub
lcall
jo
jbe
clc
xchg
sahf
cmp
in
dec
inc
xor
fiadds
fwait
push
adc
mov
dec
insl
jg
sub
pop
test
repz
frstor
jb
iret
or
add
shl
dec
shll
shrl
popa
add
mov
push
shrl
std
inc
or
xchg
repz
adc
imul
push
hlt
loopne
in
and
push
cmp
sarl
movsl
call
pop
test
mov
cmp
xor
ret
add
jnp
addr16
mov
lcall
fdivrl
jo
xchg
push
addl
in
inc
test
add
lods
int3
push
sbb
pushf
or
mov
mov
rolb
in
mov
sub
addr16
xchg
cltd
nop
ljmp
hlt
hlt
lcall
testl
jb
mov
test
inc
xor
inc
and
clc
mov
pop
aaa
mov
cmc
or
mov
jo
dec
test
and
sarb
mov
jl
cltd
bt
jmp
lea
jae
cmc
cmp
pushf
lea
ja
inc
push
pusha
pushl
inc
lea
push
jmp
dec
adc
cmp
cmpl
iret
and
fsubs
mov
lods
into
aas
mov
repnz
xchg
stos
leave
xor
sar
add
jmp
jle
sahf
rcr
mov
stc
sbb
dec
loopne
push
jle
pop
lahf
mov
nop
call
fwait
scas
pop
fucomip
iret
subb
and
in
push
push
xor
adc
xchg
adc
and
add
jo
popf
pusha
movb
push
lea
call
pushf
push
lea
jae
test
clc
sub
jmp
or
flds
push
aaa
out
ljmp
jp
jb
stos
push
andb
mov
gs
orl
pop
hlt
or
push
scas
or
mov
ds
movsl
add
push
jg
mov
mov
les
mov
lods
and
lea
pop
and
das
xor
inc
pop
leave
sbb
cmpsb
adc
out
imul
xchg
mov
out
in
fsubrl
js
std
cmpsl
cmp
lods
pop
pushf
mov
scas
aaa
add
push
aaa
dec
jbe
ds
push
loop
sbb
mov
jno
in
outsb
loop
mov
jecxz
daa
lods
pop
push
scas
adc
cmp
sub
fdivl
cli
push
lods
nop
stos
sbb
repz
les
xchg
xor
loope
dec
mov
jge
arpl
sbb
sbb
mov
add
loop
xchg
data16
rep
test
mov
test
insb
sahf
mov
shrb
cwtl
mov
int3
aam
lahf
inc
inc
bt
rol
pusha
neg
lea
ja
pushf
inc
cld
bt
std
pushw
popfw
call
clc
add
pushf
pushf
pushf
jmp
sti
addl
arpl
sti
sbb
sbb
repz
sahf
stos
pop
stos
push
or
push
jg
mov
popf
loopne
add
jb
fistps
aaa
lea
jecxz
push
cltd
loopne
add
dec
mov
cmp
sbb
dec
and
mov
xchg
pop
int
rorb
jmp
bt
rol
cmc
jmp
adcl
add
xchg
and
fistpl
xchg
inc
outsb
imul
mov
int3
mov
addl
or
inc
cmpl
cmpsl
aaa
push
in
sub
cltd
lock
inc
int3
jp
out
sub
xchg
lret
aaa
mov
xor
cmp
movb
nop
ds
lahf
out
mov
and
inc
mov
fistpl
addr16
mov
jecxz
mov
ret
test
dec
decl
xchg
jl
dec
shlb
test
push
add
fwait
xor
cmc
push
cmp
sbb
cmpsw
or
idivl
into
in
addr16
jle
and
add
adc
dec
imul
stos
pop
int
inc
xor
insb
arpl
add
mov
or
pusha
nop
mov
inc
fdivrs
int
je
dec
loop
in
icebp
xor
xchg
int3
pop
dec
andl
pop
sysret
push
and
popl
jmp
adc
push
aaa
iret
fimuls
mov
xchg
mov
sti
jle
lret
cwtl
cli
lods
es
je
and
cs
cli
rolb
dec
aaa
aad
push
adc
inc
stos
mov
pop
in
jae
imul
cmp
popa
xchg
shll
jecxz
imul
loopne
adcl
pusha
sub
jno
js
jns
stos
repz
jnp
mov
fstpl
mov
divl
popf
inc
dec
inc
xor
push
testl
fucomip
sbb
sbb
and
enter
popa
ret
stos
push
ret
sbb
int
pop
mov
jno
ficoms
adc
jmp
mov
and
cli
lods
cmpb
push
push
jmp
shrb
lahf
mov
data16
ret
cmp
adc
sub
mov
add
jmp
jae
inc
sar
and
sbb
mov
mov
imul
sbb
ret
sub
xorb
sub
and
mov
loopne
sbb
dec
aaa
fsts
add
xor
insb
fs
addr16
cmp
xlat
jns
xor
out
fstps
fnstsw
or
das
std
dec
aaa
cmpsl
mov
lods
sbb
js
push
xlat
add
push
sbb
pop
and
push
xchg
xor
mov
ljmp
xor
jbe
lods
pop
sbb
xchg
hlt
gs
mov
stos
lret
imul
pop
pop
aad
sbb
push
jmp
lods
push
nop
shrb
mov
out
fcmovbe
out
xor
pushf
pusha
movl
movl
call
xchg
sti
dec
aaa
hlt
daa
sti
fisttps
aaa
jecxz
jae
push
fdivs
lods
idivb
mov
stos
leave
les
jae
mov
jmp
aam
lret
xor
push
add
es
daa
xchg
mov
add
aaa
fildl
xchg
xchg
or
fwait
lret
sti
das
dec
les
mov
xor
lret
lahf
ret
out
pop
leave
dec
pop
sub
andl
shlb
mov
mov
dec
inc
pushf
inc
pusha
pusha
jmp
dec
cmc
int3
sti
dec
aaa
or
sbb
imul
jo
stos
stos
pop
sti
cmpsl
sub
pushf
and
add
aaa
in
bswap
mov
jmp
and
lea
pop
mov
dec
mov
adc
xchg
iret
adc
or
add
sub
adc
mov
negb
je
sbb
mov
popa
fstps
mov
mov
adc
dec
mov
dec
lahf
push
insl
iretw
jp
stc
mov
aaa
push
fwait
sub
sub
dec
cmpsb
and
stc
shr
sar
mov
jmp
ret
inc
add
lea
jb
sub
cltd
lret
xchg
insl
scas
filds
push
popf
ja
insb
loope
sub
xchg
jmp
xlat
sbb
das
in
decl
cli
sbb
sub
movsl
xor
xor
inc
mov
xor
push
fldl
test
and
clc
rcl
cltd
mov
jle
add
pop
imul
mov
lock
scas
cmp
and
or
pusha
mov
push
mov
movb
pushl
lea
jmp
lds
mov
push
stc
mov
or
out
adc
das
outsl
addr16
mov
xchg
dec
or
push
movsb
xchg
add
loop
sbb
jmp
orl
fwait
and
in
cmpsb
mov
or
sub
nop
push
xor
jmp
sbb
xor
loopne
pushf
push
shlb
dec
mov
mov
sar
scas
call
lea
je
call
sbb
mov
in
sbb
adc
dec
xchg
add
pop
addr16
mov
inc
repnz
xchg
xchg
adc
inc
mov
test
add
and
xchg
ret
std
ficompl
ds
mov
sbb
cmpb
push
mull
inc
sbb
ss
push
sbb
shrl
lret
xchg
dec
add
mov
mov
notb
jb
push
mov
inc
popf
sub
mov
not
inc
push
inc
call
jmp
cmc
call
add
idiv
dec
aaa
fbstp
cld
xorb
jo
js
movsl
repz
add
cmp
jp
out
xchg
xor
nop
in
enter
cmpsb
adc
imul
jl
sub
push
mov
or
outsb
or
int
jmp
mov
xorb
dec
cli
data16
adc
movsb
xchg
les
enter
mov
mov
jne
xchg
mov
je
and
jg
stos
cmp
xchg
popa
cs
pop
sbb
ljmp
and
push
int3
int3
xchg
lea
call
push
pushf
pushf
lea
jmp
cmp
pushf
push
lea
ja
pusha
mov
pusha
xchg
mov
pop
seta
mov
lea
not
lea
mov
call
loopne
arpl
dec
aaa
jb
cs
outsb
sbb
add
mov
jne
dec
das
mov
ss
cmp
dec
fchs
or
xchg
pusha
rorl
and
lret
xor
xor
or
mov
and
add
mov
mov
mov
popf
mov
or
lds
mov
mov
insl
mov
add
jbe
fldl
xchg
cmp
cmp
nop
jg
xlat
xchg
stc
movsbw
clc
mov
pusha
call
jl
xchg
dec
aaa
dec
nop
add
int3
or
nop
xor
mov
cmp
cmp
cmpsl
sti
fs
dec
movaps
mov
xchg
dec
out
pop
in
push
loopne
shrb
jb
fidivrl
mov
pop
addr16
out
aad
dec
pop
sub
and
cmp
or
mov
repz
add
sbb
and
cmc
stc
cmp
call
mov
aaa
cmp
dec
in
imul
imul
rorl
jecxz
sti
dec
adc
jo
lods
xlat
scas
iret
cmp
stos
cmp
lret
dec
arpl
out
test
add
flds
sub
ret
xor
pop
fisttps
mov
gs
mov
dec
mov
jno
out
mov
movsl
mov
sahf
or
test
out
out
add
repnz
test
sbb
add
call
fsubs
pop
or
loopne
dec
loope
and
push
sub
mov
sbb
push
insb
cli
testb
in
mov
sbb
test
mov
data16
addr16
cmp
dec
rcrl
and
cmpb
xorb
je
lods
aad
icebp
push
not
mov
pushf
incb
movsl
fisttpl
mov
mov
call
outsl
insb
xor
cs
insb
add
push
hlt
inc
aas
xor
aaa
push
arpl
and
outsl
add
rcr
out
cmp
test
dec
mov
in
mov
or
mov
sub
xchg
inc
test
hlt
dec
mov
fadds
sbb
les
outsl
dec
jg
inc
mov
imul
pop
jmp
decl
inc
add
in
call
rorb
loopne
dec
aaa
fcomps
pop
mov
aaa
adc
fwait
cmp
loopne
scas
and
xchg
jle
lret
and
xchg
cmp
cs
push
loope
mov
mov
lods
aad
lcall
rcll
mov
lods
movsl
push
sarl
loope
shlb
add
mov
call
ds
xchg
push
out
or
test
rorb
or
push
mov
incb
and
in
rcrb
gs
stos
dec
scas
push
sbb
int
inc
mov
aad
push
icebp
inc
int3
hlt
dec
aaa
or
dec
icebp
pop
in
jp
insl
and
cltd
add
xor
movsl
sbb
in
pop
sbb
mov
aam
dec
xchg
cmp
lods
inc
ds
inc
or
inc
add
and
sub
shlb
fs
popa
mov
lret
push
bnd
mov
cmc
dec
aaa
push
jge
popf
jns
adc
cltd
or
xchg
pushf
movsb
pop
pop
mov
loopne
in
lahf
dec
int
cmpsl
adc
jo
fwait
lcall
jge
and
mov
and
lods
mov
daa
lds
enter
sub
xchg
in
in
and
les
fwait
inc
pop
mov
inc
cmp
sbb
push
cltd
xor
movw
lea
call
call
pushf
inc
sub
movzbw
dec
mov
sub
cmc
mov
bsr
btr
btc
ror
add
bswap
shrd
shr
mov
mov
cmp
btr
btr
add
mov
movsbl
jmp
lea
jne
bswap
jmp
pop
fldt
xchg
sbbb
push
ljmp
jbe
popa
jnp
push
mov
sbb
mov
xorl
and
mov
aad
idivl
ljmp
je
movsb
mov
cld
outsb
sarb
pop
inc
sbb
ss
push
lcall
addl
cld
pop
enter
dec
test
call
mov
jnp
dec
aaa
pop
push
fsubs
mov
test
jl
mov
lret
dec
clc
daa
das
mov
es
scas
mov
xchg
lcall
or
cwtd
xchg
repz
popa
inc
pop
gs
pop
mov
mov
pop
sbb
xor
ret
and
pop
xchg
popa
push
dec
iret
int
jl
lods
hlt
jo
mov
adc
pop
imul
jmp
insl
dec
jbe
dec
aaa
push
xchg
xor
cmp
popa
aad
popf
sahf
sub
bsr
scas
clc
xor
fiaddl
test
pop
pushf
push
hlt
js
add
push
sbb
and
xchg
mov
test
xor
or
dec
scas
jb
ljmp
enter
repnz
push
movsb
in
mov
mov
mov
sbb
dec
aas
xor
pop
xchg
das
aas
lock
cmp
gs
xor
orl
fidivrl
jns
ljmp
outsb
jecxz
decl
test
lcall
push
mov
push
movb
lea
call
jmp
mov
movsbw
lea
call
mov
jmp
icebp
outsl
push
repnz
aaa
test
sub
xchg
or
push
xor
or
rorl
mov
xchg
out
cmp
mov
mov
sti
jle
cs
mov
mov
push
xchg
hlt
mov
jae
lret
inc
mov
jl
mov
into
std
fs
insl
lea
mov
adc
dec
sti
ret
jmp
out
in
pop
add
jl
dec
ret
stos
mov
ja
adc
jno
shl
dec
aaa
add
shll
xor
push
cmc
shll
call
mov
popf
out
sub
dec
popf
out
xchg
aad
addr16
sbb
or
rcll
scas
push
leave
adc
jmp
fsubs
scas
popf
cmp
subl
int3
mov
addl
nop
fs
pop
or
pop
popa
sti
fadds
add
and
loopne
dec
aaa
call
mov
xchg
jle
mov
xor
out
mov
idivl
add
fnstenv
xchg
dec
add
pusha
xchg
mov
out
xor
xor
gs
inc
mov
pop
repnz
inc
push
pop
je
sbb
sarl
bound
sarb
test
ret
jne
or
adc
push
ret
dec
fstps
mov
push
lea
ja
call
mov
fs
dec
aaa
test
cmp
mov
inc
fildll
dec
gs
sub
dec
mov
xchg
ret
add
outsl
jecxz
shll
xlat
sub
jle
pop
call
sysret
push
fnstcw
adc
enter
inc
cmc
add
mov
push
mov
or
sub
xor
dec
out
xlat
aas
pop
stos
cmp
mov
pop
xchg
fistpll
test
inc
jo
shl
xor
push
mov
mov
lldt
ret
in
lds
xchg
leave
inc
call
push
movsl
xor
into
stos
ja
push
dec
or
mov
xor
mov
pop
xchg
fstps
ret
hlt
scas
sahf
out
cmp
pop
js
mov
sahf
scas
cmpsb
adc
mov
mov
sub
cmc
push
pusha
out
cmc
xchg
mov
cmpsb
test
loope
lret
cmpsb
push
xor
mov
ja
fwait
insl
sbb
movsb
fsubrl
gs
push
das
or
xor
js
xchg
sbb
or
jmp
add
hlt
cmpl
sbb
xor
fbld
repnz
pop
cmpsb
push
test
inc
or
jg
mov
jp
pop
mov
int
and
rclb
repz
jmp
cmp
decb
repz
leave
xor
jg
fidivs
xor
or
inc
jb
or
cmp
test
inc
movsl
inc
cs
jns
pop
out
dec
arpl
dec
fiaddl
rcrb
push
stos
scas
inc
loope
xlat
cmp
push
jmp
push
push
or
lea
jae
push
movb
pushl
sub
mov
pushf
push
lea
call
pusha
jmp
mov
stos
out
dec
aaa
sub
test
mov
mov
les
test
lahf
or
adc
fdivs
jns
repz
inc
insb
int
and
and
sbb
fistpll
or
push
mov
mov
sbb
fsubp
sbb
repz
test
xor
xor
insb
adc
or
mov
cmp
pop
jae
lcall
lret
adc
stos
int
je
or
ret
push
scas
jmp
ret
sbb
dec
xor
mov
mov
mov
mov
jle
out
jb
add
push
inc
sbbl
add
in
sbb
addr16
adc
dec
lcall
nop
popa
in
and
mov
fbld
fcompl
mov
xchg
out
outsb
cs
std
cmc
or
xchg
push
push
rorb
movaps
in
pop
mov
pop
lahf
icebp
fwait
cmp
and
mov
decb
stos
ss
les
in
dec
aaa
jns
sbbb
clc
inc
jo
mov
rorb
or
loope
loopne
cmpsl
clc
std
adc
das
dec
faddp
pop
mov
cmc
and
into
loope
lahf
mov
jle
pop
ror
ss
pop
push
adc
inc
popf
push
jl
decl
divl
mov
inc
leave
es
push
lahf
push
or
ds
push
jmp
pxor
lret
add
dec
mov
dec
mov
les
inc
ret
adc
jb
mov
and
pop
xchg
addr16
stc
lods
ds
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
mov
lea
ja
dec
dec
inc
mov
dec
jmp
mov
aaa
jbe
lods
leave
fisttpll
jno
imul
test
js
js
mov
in
sub
xchg
mov
jo
movsl
and
int3
xor
fadds
mov
xchg
ret
repz
xchg
jg
and
mov
pop
inc
rorl
call
dec
sbb
cld
out
jb
punpcklbw
bswap
or
and
jae
cmp
sub
btr
bsf
mov
inc
adc
call
or
jmp
aaa
cld
das
ret
ja
das
add
repz
xchg
pop
repnz
sbb
test
je
xorb
or
std
aad
mov
leave
aas
mov
outsb
jle
mov
adc
nop
xchg
es
dec
fdivp
test
or
clc
stc
sub
pop
in
add
lods
cmpsl
ds
pop
in
int
scas
loopne
push
jle
aaa
repz
les
pop
movsl
pop
outsl
dec
in
mov
loope
jp
sbb
mov
mov
and
push
sahf
loopne
mulb
mov
shlb
lcall
inc
cwtl
and
xor
pcmpeqw
outsl
xchg
and
lret
rcpps
outsb
mov
lret
mov
push
mov
nop
loopne
ficompl
cmp
or
inc
popf
imul
push
push
iret
pop
push
test
and
xchg
iret
sub
ror
mov
movsb
mov
push
insb
cmp
dec
pop
mov
leave
inc
jae
sar
jb
fisubs
sbb
mov
jne
out
and
jmp
aaa
into
fbstp
movl
arpl
pop
scas
sbb
js
cmp
pop
popa
fnsave
jns
aaa
out
fwait
sti
test
push
movsl
sub
cmp
loop
cld
orb
sbb
sbb
sbb
mov
or
inc
sbb
push
in
and
sahf
xchg
jp
out
dec
or
in
mov
jl
pop
lret
mov
push
cmc
pop
loope
bound
ss
ljmp
icebp
cmp
rcll
sub
dec
inc
inc
je
movb
cmova
jmp
add
lea
and
nopl
lock
das
push
pop
int
xchg
mov
mov
mov
imul
fiadds
bound
data16
add
loopne
push
sub
mov
mov
and
lret
fdivs
ficomps
aaa
test
push
fs
jne
shr
adc
mov
mov
fwait
aaa
adc
xchg
das
jae
movsb
push
mov
cmp
mov
pop
push
mov
cltd
lods
in
jl
sbb
dec
push
lret
push
sbb
mov
add
mov
fmul
mull
imul
arpl
pop
imul
sbb
aad
dec
push
sub
ret
mov
pop
aaa
ja
imul
ret
xorl
outsb
push
or
cmp
mov
in
pop
cmpsb
sbb
call
mov
fimuls
mov
insb
cmpl
and
enter
test
addb
lds
aas
lock
stc
loope
cmp
jne
mov
nop
xlat
popa
jmp
js
imul
dec
mov
es
push
clc
arpl
cmp
dec
enter
cmp
aaa
ja
fildl
or
or
mov
packsswb
xchg
popa
lods
les
jno
and
mov
pusha
lahf
xor
sti
push
dec
aam
xlat
pop
int
inc
jae
loope
dec
fcmovu
cwtl
insb
imul
stc
jo
xor
es
and
xor
lea
mov
arpl
or
lahf
ret
shl
call
add
cmp
lcall
clc
ja
mov
cmp
cmp
mov
std
adc
adc
cs
and
aad
cmp
mov
lods
outsl
jmp
rep
pushl
sub
inc
iret
mov
rcrb
call
fmull
rcrb
lock
dec
jmp
gs
cwtl
sub
mov
or
fldcw
iret
jb
mov
test
pop
inc
sub
mov
sub
or
mov
loop
in
lock
test
mov
ret
pop
sub
mov
call
outsl
repz
or
jae
mov
loop
cld
aam
insb
scas
sbb
mov
lods
cmp
push
pop
fidivrs
jno
cmpsb
sub
jns
cmp
dec
std
call
push
das
sub
and
aaa
rcrl
xor
mov
je
pop
bnd
push
add
dec
aaa
mov
mov
xchg
outsl
sbb
pop
mov
pop
popf
inc
mov
and
fcom
int3
cmp
arpl
sbb
jge
rorl
out
mov
lds
push
push
inc
mov
das
es
mov
loop
pop
imul
xchg
iret
addl
adc
movsl
or
imul
aaa
jb
loope
xor
or
cmp
cmp
lods
mov
inc
cmpsb
lret
mov
aas
test
pop
and
pop
pop
lcall
daa
or
or
ljmp
pop
movsl
xor
testl
rcr
aas
sub
jno
popf
push
inc
sub
cli
subb
cld
std
shrb
popf
test
mov
inc
scas
inc
add
lahf
stc
mov
aas
push
mov
xlat
ljmp
mov
addl
xchg
aaa
and
pop
mov
add
fstpt
xchg
mov
adc
loop
stc
push
ret
dec
dec
mov
xor
nop
arpl
in
aam
jge
pop
pop
and
sub
xor
es
mov
jmp
xchg
jmp
ljmp
mov
mov
add
cmp
lret
sub
in
aaa
or
stos
addr16
dec
xlat
stos
push
jecxz
sub
call
pop
mov
sbb
mov
inc
adc
andl
fisubs
fildl
pop
cmp
int3
push
call
fstpl
stc
sti
cmp
xchg
cli
sub
fs
pop
jg
lcall
pop
inc
bound
fnstenv
ljmp
dec
arpl
sbb
cmp
add
pusha
adc
into
xchg
testl
push
dec
repnz
fwait
mov
dec
pop
sub
dec
aaa
lods
scas
sub
sub
dec
loop
push
mov
or
adc
fisubl
add
movsl
mov
mov
xor
pop
jmp
movsl
sbb
inc
cmpsl
xchg
jns
mov
popa
pop
into
sub
jmp
fadds
dec
mov
bnd
outsl
push
rclb
aam
push
cli
push
lahf
adc
jp
push
rorl
cltd
xor
xchg
pop
dec
shrb
es
jbe
sub
pop
jmp
out
jnp
pushl
clc
loop
std
outsb
mov
jp
dec
aaa
xchg
lret
lcall
int
or
pop
fstpl
test
in
xor
pop
adc
inc
jle
jne
out
mov
in
in
cmpsl
dec
jmp
or
xchg
rclb
shl
ljmp
imul
mov
pop
push
adc
xchg
pop
ljmp
mov
sahf
clc
xor
add
popf
sub
out
shr
jb
mov
sub
shlb
add
dec
lcall
pop
test
orl
cmpsb
outsl
fsubs
cli
adc
insl
std
mov
in
lahf
dec
and
inc
mov
movsl
sub
cmp
or
xchg
nop
sub
mul
xor
sub
into
mov
sub
or
ficoms
mov
mov
lock
in
xor
cmp
jecxz
push
leave
pushf
fldenv
mov
pop
cwtl
stos
addr16
xor
cld
push
int
fadds
pop
cli
test
icebp
sahf
sbb
subb
lds
mov
or
inc
ja
mov
cmp
pushf
arpl
mov
cmp
adc
shrb
icebp
xchg
jbe
cmp
sbb
add
sbb
repz
sbb
hlt
or
fwait
and
mov
out
push
push
imul
arpl
and
imul
push
insl
icebp
and
repz
adc
push
sahf
sub
data16
cmc
sub
popa
push
xor
std
add
stc
jg
sbb
test
sbb
cld
mov
mov
out
mov
jo
std
pushf
dec
lock
dec
cld
sub
mov
sub
rorl
pop
call
aaa
dec
jecxz
imul
dec
loope
add
icebp
out
ja
adcl
cmp
xchg
dec
les
add
daa
ja
sbb
fwait
cmp
cs
bound
leave
mov
lock
cmpsl
push
jl
loop
in
sub
push
fcmovne
sub
imul
rcrl
sarb
sub
or
ljmp
iret
stc
test
sti
or
fisubrs
xlat
adc
dec
insb
pop
mov
test
pop
out
inc
xchg
jae
xor
mov
sub
packsswb
addl
dec
je
fildl
add
mov
jne
cs
bound
sub
loopne
pop
xor
jno
roll
bound
push
addr16
push
cmpsl
cs
cwtl
xor
pop
sar
push
ds
scas
testb
xchg
cmp
insl
or
or
push
shl
push
sub
jns
push
fisubrs
sub
dec
mov
and
pmulhw
sub
mov
pop
lea
sub
testb
das
sub
add
cltd
sub
icebp
dec
lea
sub
or
push
push
or
ljmp
add
pushf
ljmp
jmp
push
xor
cmpb
lret
out
insl
or
popf
cmp
push
and
sub
cmp
lcall
dec
test
mov
test
imulb
mov
mov
cmpsl
sub
aad
or
pop
in
add
negb
adc
pop
adc
addr16
add
xchg
ljmp
sbb
adc
mov
scas
xchg
sbb
and
pop
andl
push
int3
mov
adc
data16
inc
sub
dec
mov
popf
pop
xchg
aad
js
loope
sub
outsl
adc
jp
pop
jecxz
daa
rol
xchg
or
add
lock
or
test
lods
adc
je
sub
mov
adc
aaa
outsl
sub
sub
mov
aas
fsubrs
xor
sub
jns
sbb
clc
dec
jo
cltd
mov
sub
push
ja
jge
xchg
mov
cmc
push
pop
dec
addr16
push
mov
sub
jge,pn
add
fstl
or
mov
out
lods
sub
add
das
daa
xor
xor
mov
adc
negb
mov
mov
nop
pop
cmp
fstpl
addr16
or
popf
add
push
mov
mov
jge
pop
es
popf
jle
push
mov
sub
jae
fs
jg
test
mov
cmp
rol
mov
sub
mov
sub
mov
add
fwait
inc
icebp
fcoms
fcoml
xchg
cs
cli
push
adc
sbb
cmp
inc
jnp
das
repnz
sub
je
loope
mov
mov
push
add
pop
dec
test
bndstx
popa
test
xor
lahf
sbb
sub
mov
pop
stc
pushf
sub
jg
orb
and
cld
xchg
mov
sub
xchg
dec
cwtl
std
mov
int3
pusha
int
inc
sub
insl
and
mov
pop
fwait
hlt
sub
mov
dec
call
fs
test
or
bnd
inc
and
iret
out
pop
xchg
fwait
mov
cltd
sub
sub
and
push
out
dec
je
sub
dec
xchg
push
sub
sbb
pop
mov
sub
inc
xor
pop
jl
push
mov
sbb
ficomps
fs
sub
inc
ss
pop
push
pushf
sub
imul
loop
xor
jg
shrb
mov
xor
sub
mov
jo
mov
xchg
push
pop
add
arpl
sbb
mov
in
js
jp
sub
test
sub
les
or
lret
pop
inc
sub
jnp
dec
fstps
mov
push
out
sbb
pop
stos
pop
inc
scas
sub
out
lret
mov
loopne
pop
xchg
mov
addl
ljmp
mov
sub
jbe
xchg
mov
test
repnz
add
lods
das
jbe
ret
aad
inc
push
inc
adc
jns
sub
jns
cmp
cmp
cs
faddl
sub
aam
cmp
push
adcl
or
inc
add
dec
out
shll
loopne
mov
leave
call
inc
or
hlt
jge
cmp
mov
mov
xor
add
sub
pop
clc
mov
adc
hlt
add
sub
sub
dec
and
out
fidivrl
insb
leave
shl
sub
dec
lea
outsb
sbb
aad
scas
mov
push
push
fcomip
dec
out
leave
cmp
stos
test
jecxz
in
inc
das
pop
fcmovu
sub
cltd
pop
mov
repnz
xor
mov
loop
jns
dec
out
mov
mov
or
stos
idiv
fisttps
dec
pop
mov
cs
lods
xchg
sahf
jmp
int
dec
gs
sbb
sub
out
repnz
ljmp
popf
jmp
jmp
das
notl
gs
andb
dec
mov
mov
or
push
pop
mov
shl
lea
pop
dec
push
add
cmp
clc
in
popa
jno
cs
jmp
out
loope
pop
popa
fimuls
fwait
in
popa
adc
loope
pop
dec
pop
or
in
popa
cmp
loope
pop
jno
or
es
jmp
and
pop
loope
pop
xlat
adc
popa
int3
pop
or
pop
loope
pop
cmpb
in
popa
je
mov
out
loope
bound
pop
cmpsb
jecxz
and
pop
popa
fwait
pop
fadds
push
loope
pop
dec
or
in
popa
sbbl
add
cmp
xor
pop
sub
test
and
popa
sahf
or
adc
shl
xchg
pop
push
adc
shl
xchg
popa
push
pop
adc
into
loope
pop
dec
push
or
in
popa
dec
pop
or
pop
dec
or
lret
in
popa
dec
pop
or
lret
dec
in
popa
leave
pop
mov
dec
loope
pop
enter
in
popa
pop
xchg
inc
loope
pop
movb
lds
push
add
jl
jns
or
in
lahf
out
inc
mov
pop
pop
push
sbb
aad
xchg
push
or
in
popa
lret
push
ret
pop
clc
jae
mov
jmp
popa
sbb
loope
pop
dec
test
add
jl
stc
pop
jne
out
loope
bound
mov
adc
pop
lret
loope
pop
std
cmp
xor
das
popa
sub
mov
push
and
pop
pop
or
adc
pop
or
test
add
stc
or
dec
imul
loope
pop
rorl
popa
add
push
cmp
js
xor
stos
loope
or
pop
pusha
push
sbb
fcomps
push
or
in
popa
mov
push
add
mov
xor
sub
push
popa
push
push
loope
pop
push
rorl
shl
dec
popa
or
push
std
loope
pop
mov
or
fs
fstpl
push
push
loope
pop
push
mov
xchg
add
pop
mov
pop
sub
cli
dec
popf
fstp
push
je
out
xor
out
or
add
adc
push
pop
movsb
aad
aad
xchg
xchg
lahf
push
mov
pop
fmuls
add
mov
mov
dec
pop
adc
loop
xchg
es
stc
mov
jecxz
mov
mov
xchg
jae
loop
or
jo
cmpsl
xor
inc
ljmp
aad
adc
int
inc
jnp
xchg
jae
js
or
in
xchg
dec
es
xor
in
dec
adc
adc
xchg
fcmovnbe
iret
dec
outsb
adcb
xor
arpl
xchg
das
into
addr16
mov
aad
cwtl
jl
or
fnstenv
push
hlt
push
push
xor
push
pop
adc
or
fdivrs
push
dec
add
sub
push
mov
sarl
pushfw
sub
mov
pop
insb
and
xchg
or
mov
stc
sbb
andb
into
test
push
jmp
daa
cmp
or
bound
repz
cld
xchg
sub
fistps
jecxz
dec
jbe
shll
cmp
adc
jmp
pop
mov
pop
jecxz
fisubrs
out
shll
cmpsb
in
mov
movsl
push
pop
push
push
xchg
ds
orl
jno
xor
or
push
push
mov
sub
fimull
push
push
aad
nop
addr16
sbb
mov
popl
out
add
sbb
movsb
add
and
and
push
cltd
xor
cmpsb
or
lea
mov
daa
andl
ror
fcmove
icebp
outsb
movaps
dec
clc
rcrl
dec
into
subb
sbb
loop
lret
not
pop
out
outsb
fs
loop
sbb
pop
push
mov
xchg
xorl
push
pop
sbb
popa
sbb
lret
arpl
pop
pop
adc
xchg
xchg
pop
sbb
mov
add
mov
enter
les
mov
mov
icebp
sbb
call
push
cmpxchg
adc
nop
andl
pop
pushf
dec
in
bound
or
push
ret
or
in
loopne
push
cmp
or
stos
out
xchg
in
cmovle
push
or
xlat
inc
popa
call
shlb
dec
inc
add
iret
xor
nop
dec
pop
int
xor
std
push
sbb
pop
mov
int3
add
jp
inc
test
loop
cmp
int3
pop
push
or
adc
mov
mov
shlb
jne
in
cwtl
sbb
sub
fs
mov
shl
gs
dec
popa
ss
xor
cmpsb
xchg
push
out
popa
pop
and
pop
mov
xchg
popa
inc
cmpsb
ror
sub
gs
sub
mov
inc
mov
fists
push
enter
and
xor
out
or
push
push
jnp
inc
adc
push
pop
fwait
aad
fistl
and
out
frstor
fbstp
jno
andb
push
outsl
rcll
js
lds
adc
in
aam
out
push
mov
in
adc
mov
cwtl
inc
out
cli
cltd
aad
sti
es
loope
mov
daa
aaa
mov
jmp
xchg
movsb
cltd
out
rorl
mov
loope
inc
mov
js
int3
xor
xchg
repz
arpl
sbb
pop
clc
mov
sbb
rol
imul
movsl
out
xchg
adc
adc
mov
jl
movsl
push
cld
aad
adc
sbb
xchg
push
shlb
cli
arpl
addr16
sub
or
addr16
push
ljmp
pop
lock
test
adc
push
sbb
hlt
cmp
repz
push
inc
xchg
xlat
push
inc
xor
inc
inc
inc
popa
or
out
adc
les
sbb
inc
and
xor
les
popa
out
push
cmpsl
inc
mov
aam
add
addr16
push
cmp
xchg
inc
inc
push
sub
test
popf
pop
pop
push
clc
sbb
sbb
pop
adc
lcall
jbe
idivl
ja
cmp
sub
loop
data16
sub
and
push
and
mov
arpl
pop
sbb
push
sbb
dec
push
fdivp
adc
push
pop
sbb
and
inc
adc
or
add
frstor
fisubs
aas
fwait
adc
notl
pop
sub
push
sbb
mov
add
inc
pop
or
sbb
and
loope
fcmovbe
sbb
or
mov
or
inc
push
xor
dec
sbb
es
and
and
lahf
test
sub
into
pop
push
pop
pop
add
sub
cld
rcr
testb
punpcklwd
push
lods
dec
dec
and
cs
mov
pushf
clc
push
sub
dec
mov
sbb
push
sub
adc
pop
sbb
loop
in
inc
xchg
repz
fdivr
pop
adc
add
cmc
cld
sti
jo
mov
push
fidivs
inc
mov
sbb
out
outsl
jno
jo
mov
outsl
cmp
lret
fnstenv
aaa
ljmp
xor
imull
ss
sub
push
push
ret
jns
add
xchg
and
sbb
into
call
addb
mov
dec
pop
es
popf
jl
cmp
pop
xor
add
lds
bound
ljmp
rcrl
or
push
mov
loopne
sbb
push
aaa
pop
add
dec
and
ss
shll
xchg
pop
mov
lods
sbb
and
dec
into
inc
out
push
lods
jmp
stc
sbb
frstor
int
rorb
pop
mov
loopne
sbb
push
push
lret
ljmp
test
movsl
xlat
in
xor
pop
sub
pop
add
lock
cmp
xchg
push
and
cmp
ss
ljmp
pop
filds
sub
pop
sbb
pushf
push
jnp
xor
fs
pop
cs
adc
das
inc
push
aas
push
fildl
popa
add
add
in
sbb
arpl
jp
movsl
mov
lock
sbb
out
sahf
and
xchg
insl
push
rorl
scas
gs
in
or
out
sahf
pop
and
adc
xchg
pusha
mov
das
ljmp
lods
pusha
jnp
gs
add
cmp
ljmp
add
sub
xor
jp
xor
jmp
mov
repz
fwait
xor
ret
sahf
gs
xor
xchg
or
dec
fidivs
inc
and
stos
cmpsl
cmp
xor
lock
xchg
xchg
cwtl
mov
adc
scas
js
xor
adc
adc
cmpsb
int3
push
mov
in
test
inc
scas
sti
mov
lahf
lret
mov
add
fstps
test
out
cld
push
repnz
pusha
sub
add
push
adc
xchg
in
pop
out
mov
mov
mov
xor
pop
add
push
adc
lock
jge
test
hlt
inc
sub
sahf
scas
xchg
inc
lock
push
inc
imul
cmp
leavew
cli
ss
out
iret
imul
dec
cmc
or
scas
clc
outsl
lcall
lock
in
imul
mov
outsl
add
gs
cmp
cmp
xor
adc
push
repz
in
jmp
cmp
es
cli
mov
mov
mov
xchg
sub
idivl
scas
push
and
movsb
cmp
dec
adc
or
cmp
sti
mov
dec
ljmp
push
inc
sbb
data16
fsubrs
or
cmp
and
sub
jmp
call
sub
sbb
ljmp
lods
je
push
fisubl
dec
orl
mov
test
arpl
push
ljmp
dec
sbb
arpl
sub
aam
addb
imul
cwtl
lcall
stc
call
es
and
adc
rcll
bound
es
xor
outsb
out
mov
jg
in
jno
cs
pushf
xchg
jg
outsb
clc
js
add
lret
or
rcrb
rorl
xor
sub
mov
fsubs
pop
cmp
popa
es
dec
add
cltd
push
push
data16
je
test
sahf
subb
add
fsubl
jg
cltd
daa
out
xchg
or
xchg
stc
aaa
rolb
or
sbb
or
pop
mov
mov
mov
stos
shlb
decl
movsl
xchg
shll
call
test
pusha
rclb
addr16
push
push
xor
pop
jg
adc
sub
push
mov
fwait
dec
outsl
gs
mov
xor
jle
mov
add
dec
xor
lret
jbe
fnstenv
out
rcl
pop
sub
mov
addr16
pop
mov
mov
mov
js
jns
cwtl
popf
rcll
test
call
add
xor
mov
fwait
or
adc
enter
xchg
popf
xchg
shll
lcall
cwtl
aaa
fcmovnbe
add
leave
test
or
out
loope
jecxz
cmp
enter
in
ja
movsl
call
sbb
push
lcall
sbb
in
sub
into
cmpsb
cmp
std
push
cmp
cmp
imul
push
data16
push
pop
push
ret
adc
ret
mov
ficoml
mov
adc
push
mov
gs
push
and
jg
sbb
test
jns
fstpl
pop
xchg
stos
mov
push
xchg
push
sbb
sub
bound
sahf
ljmp
dec
mov
xchg
jno
sub
mov
aaa
jmp
addr16
ljmp
adc
sub
jg
outsb
ljmp
xchg
dec
cmp
or
push
les
and
daa
cmp
stc
loope
clc
jmp
mov
pop
pop
ss
dec
jb
pushl
imul
and
pop
imul
mov
sub
inc
add
jns
mov
cld
xchg
xchg
mov
repnz
jns
stos
jmp
cmovge
stc
or
loope
sbb
js
sub
dec
mov
inc
div
loopne
inc
jge
add
jge
fildll
mov
push
test
push
es
loope
jns
mov
adc
dec
xor
mov
push
jecxz
sub
cld
mov
mov
jnp
loopw
xchg
sub
shrb
imul
or
test
or
and
andl
and
bound
dec
inc
sbb
pop
dec
dec
call
clc
test
outsl
loopne
xchg
fsub
or
push
jl
daa
fstpl
rclb
push
iret
push
into
popf
pop
mov
mov
adc
fsubrl
dec
push
loop
xor
lret
jnp
popa
and
fdivs
xchg
popa
push
adc
sbb
pop
fnstcw
mov
test
pop
pop
outsb
ss
jl
stc
into
inc
popa
jge
xor
mov
pushf
push
xorb
push
add
incb
sub
stc
mov
sub
jo
rorl
andb
insl
aam
pop
aaa
jbe
sbb
leave
icebp
cmc
enter
xlat
aam
inc
dec
outsb
push
stc
lret
adc
add
pop
ror
daa
add
clc
mov
popa
popf
jg
push
lods
dec
xchg
add
sbbb
rcrb
orl
in
faddl
push
jo
in
pop
ljmp
rcrb
cld
jecxz
push
xorb
dec
aas
and
jnp
jp
add
dec
pop
or
xor
adc
push
scas
xor
pop
imul
aaa
push
pop
cs
test
das
clc
jns
pop
xchg
pop
ljmp
xchg
clc
jmp
filds
loope
imul
sbb
xor
cmpsl
loope
push
dec
mov
dec
sub
jmp
popf
pop
xor
xchg
cmp
sbb
cltd
pop
fimuls
dec
xor
push
out
jns,pt
js
aam
sub
mov
xor
pop
jge
dec
sbbb
jno
gs
adc
in
into
cltd
fcmovne
push
mov
fs
push
popf
pop
sbb
movsb
inc
xchg
sub
lret
and
js
mov
es
inc
and
xchg
stos
mov
andb
push
mov
je
jns
cmp
scas
sub
popf
xchg
stc
xor
cmp
dec
pop
test
add
push
out
in
mov
nop
inc
in
loop
mov
mov
and
xor
test
push
xchg
addr16
pop
cmp
std
insb
or
mov
jge
jmp
jp
inc
pop
sub
daa
mov
sub
aaa
clc
data16
sub
std
cmp
jecxz
dec
mov
add
ja
or
xor
xchg
js
popf
push
push
mov
in
fstpl
pop
sbb
and
shlb
inc
fstp
in
aas
push
push
ret
notb
sbb
loope
popf
pop
add
pop
arpl
cwtl
popf
cwtl
es
mov
inc
push
adc
sbb
lahf
push
out
pushf
sub
mov
pop
and
fdivl
in
xchg
notl
pushf
shll
pop
imul
mov
bound
dec
ds
scas
push
pusha
inc
mov
inc
mov
add
add
mov
pop
cmp
ljmp
or
fnstsw
pusha
inc
push
sbb
pushf
inc
rcrl
frstor
popf
std
mov
sub
inc
dec
inc
in
sbb
pop
scas
dec
popf
sub
aad
test
add
popf
push
mov
rcrl
push
xor
fs
fcoms
in
inc
inc
sub
inc
xor
xor
out
cld
int3
pop
sbb
sarb
jl
xchg
mov
pushf
ficomps
sub
pop
dec
nop
daa
fcmovbe
hlt
pop
push
ljmp
adc
push
stc
mov
push
push
pusha
xlat
pop
aas
cmp
movl
popa
mov
cwtl
pop
dec
push
inc
xor
pop
mov
mov
adc
adc
outsl
dec
jo
insb
jp
testb
push
pop
outsl
sub
in
xchg
mov
movsl
add
cltd
xchg
pop
sbb
mov
data16
jo
insb
sub
sbb
pop
icebp
cmp
lods
push
test
test
push
vpaddusw
es
mov
pop
sub
jp
fildl
stc
enter
sub
sbb
pushf
pop
mov
subb
bound
sbb
in
sbb
xchg
mov
adc
sbb
fsubrs
xchg
loop
fdivrl
sbb
mov
int
popf
push
sbb
aas
xor
add
bound
adc
mov
popf
sub
pushf
push
sbb
push
and
lock
sbb
test
pop
clc
mov
lods
fmuls
js
aam
mov
sbb
mov
xchg
loopne
andl
lahf
push
sbb
sbb
mov
cld
mov
push
pop
push
push
sbb
sbb
xchg
rcrl
insb
in
popf
adc
bound
mov
gs
psubsb
sbb
rolb
add
adc
sbb
mov
xchg
popf
sub
pushw
sbb
sub
fcompl
bound
push
in
pop
jno
in
ja
rclb
gs
dec
inc
in
adc
fldt
pop
fcom
popf
sub
fstpl
loope
pop
test
outsb
orb
fsubl
jp
stos
push
ss
out
lret
bndldx
sbbb
lcall
fsubl
pusha
cltd
pop
cltd
mov
bound
add
enter
inc
pop
cld
in
fmull
push
ret
push
xchg
mov
jae
in
sbb
test
frstor
popf
or
insl
outsb
stos
pushf
test
js
sbb
and
cltd
rolb
pop
inc
jo
test
pop
pop
loope
push
cli
dec
call
fnsaves
sub
cltd
push
push
popa
xchg
movsb
push
mov
dec
stos
push
clc
clc
fisubrl
adc
rclb
fldcw
int
push
mov
loop
shr
inc
inc
xchg
mov
lret
sub
loopne
cmp
shr
cwtl
jo
cltd
pop
popf
jmp
mov
cltd
fnstenv
insb
or
popf
sub
fcomps
inc
outsl
mov
mov
cmp
das
jno
and
and
aas
sub
xor
sbb
ss
jae
adc
add
inc
inc
push
sbb
fld
loop
xchg
adc
cltd
bound
lock
jmp
pop
jecxz
test
pop
dec
stos
inc
mov
mov
pop
loope
cltd
addr16
jno
pushl
xor
sub
leave
mov
pop
adc
ss
push
neg
test
mov
mov
xor
imul
cltd
pop
popf
dec
insb
dec
inc
jbe
mov
aam
mov
pushf
aas
or
aam
mov
cmp
hlt
dec
mov
in
inc
mov
inc
negb
test
sbbl
add
push
pusha
in
pushf
sub
xor
xchg
pop
dec
inc
add
jnp
popf
js
cvtps2pd
pop
pop
inc
test
inc
pop
sbb
movl
jl
fildll
xlat
or
bound
dec
add
sbb
outsb
xor
pop
mov
and
popa
test
lock
jmp
sbb
ror
adc
jnp
sub
les
test
add
jne
or
repnz
sbb
inc
rcr
push
pop
lea
add
fnstsw
or
and
xor
mov
mov
dec
xlat
pop
pushf
das
inc
stos
flds
pop
rcrl
pop
xor
and
cltd
xchg
test
iret
fwait
sub
pop
ja
push
dec
sbb
push
pop
bound
out
xchg
and
test
subb
add
test
and
lds
jo
pop
xor
add
test
pop
fcoms
push
jb
pop
xchg
fistpll
jb
pushf
inc
bound
data16
lds
test
fistpll
mov
flds
clc
shrl
flds
fcoms
push
pop
fstp
pop
cld
out
pop
pop
mov
insl
mov
dec
push
inc
cmpsb
jg
iret
into
pop
jg
hlt
dec
outsb
jecxz
gs
imul
inc
add
aaa
in
push
imul
fsubs
ret
sub
pop
sbb
add
jno
pop
in
mov
loop
xchg
jp
je
fldcw
test
pushf
add
sbb
sbb
mov
loop
in
or
adc
mov
push
pop
negb
adc
sub
sbb
nop
cmc
mov
pop
sbb
clc
bound
fcomp
xor
movsb
inc
pushf
insl
loop
sti
imul
mov
flds
cmp
mov
fstp
mov
and
insb
cwtl
addr16
movsl
jg
jge
cmp
ss
mov
mov
fstpl
xchg
pop
fcmovu
push
xchg
pop
iret
gs
sbb
mov
xchg
xor
inc
mov
jnp
popf
push
pop
lods
xchg
shlb
mov
addr16
mov
and
outsb
or
xchg
sbb
xorb
repnz
fcmovnu
or
shrb
std
or
dec
insl
cmp
fnstcw
sahf
sbb
pop
rcrl
rcrl
sbb
pop
repz
loope
or
add
pop
setle
pop
jl
sub
pop
inc
push
xchg
shld
xchg
sarl
sbb
out
cmc
mov
pop
add
cltd
nop
sub
mov
inc
fs
and
cmpsb
jnp
jnp
sbb
lret
pop
adc
cmp
cmpsb
cmp
nop
rorb
or
lahf
push
pushf
popa
mov
fdivr
ret
loop
fdiv
pop
mov
mov
hlt
pop
xor
sbb
lret
sbb
dec
xchg
inc
mov
out
push
pushf
out
sbb
sbb
cltd
xchg
mov
jbe
xor
sbb
jns
mov
cltd
popa
fs
sub
mov
jl
add
pop
cltd
lret
sub
negb
push
dec
cmp
loopne
fbld
xchg
es
adc
adc
push
shlb
push
es
adc
fidivs
movsl
mov
lret
pop
dec
sti
and
sbb
addb
push
push
mov
push
filds
lahf
dec
mov
in
scas
adc
movsl
jo
in
mov
add
leave
sub
inc
and
dec
mov
or
sub
rcrl
dec
imul
inc
loope
fmull
or
pop
test
imul
pop
jp
mov
imul
pop
cmp
mov
dec
imull
jbe
pop
imulb
jne
cmc
dec
push
dec
sbb
fdivrs
loopew
cmp
inc
fiaddl
pop
rcrb
and
mov
sbb
jle
movl
mov
fcmovnu
xchg
xor
sbb
data16
xchg
xlat
mov
fidivrl
push
bound
out
sub
push
fcomps
pop
sbb
mov
fldcw
pop
mov
aad
pop
mov
push
data16
push
sbb
cwtl
or
pop
fcoml
pushl
lods
mov
daa
in
popf
and
add
fldl
pop
mov
dec
fistpll
lds
out
inc
cmp
pop
fbld
xchg
fldenv
fs
push
pop
push
pop
fsts
lods
push
adc
and
int3
pop
mov
adc
aaa
rcl
lahf
xor
test
imul
dec
out
cmp
fcoms
xchg
add
jo
sahf
out
filds
and
inc
add
xchg
cmp
cmpsb
cmpb
lret
push
or
shlb
out
cli
mov
or
shrb
idiv
mov
cmp
sub
fisubs
or
aad
gs
in
adc
call
or
sub
stc
enter
adc
fs
imul
jmp
shl
mov
leave
jl
faddl
or
xor
adc
shlb
scas
jae
pop
loopne
sti
add
aam
or
push
clc
dec
and
imul
pop
mov
xor
sbb
pop
fsubl
cmp
dec
daa
test
loope
test
adc
sub
das
or
mov
je
push
fcmovne
add
loope
enter
dec
icebp
stc
ljmp
jg
and
enter
popa
daa
sarb
mov
out
enter
int
es
xchg
fidivrs
icebp
lods
sub
dec
xlat
xor
in
loope
repz
sub
push
xor
popa
pop
das
fistps
imul
repnz
ljmp
fistl
pop
adc
mov
lret
fsubl
sub
mov
data16
push
cli
sub
gs
ljmp
andl
and
sti
pop
push
dec
sub
dec
xchg
cmpsl
or
stos
jmp
scas
negl
sahf
mov
push
dec
stc
popa
cmp
lds
jb
xchg
dec
cmp
xchg
lock
in
xchg
xchg
inc
jno
xchg
add
clc
jb
push
rorl
repnz
repz
rorl
rclb
mov
int3
test
jo
repz
testb
mov
add
pop
adc
je
incl
out
inc
jge
test
fldenv
fs
cs
sub
fs
pusha
call
in
sub
push
pop
fldl
popf
loope
pop
sbb
pop
popa
sbb
fisttpl
cli
es
mov
jae
or
in
popa
xor
cmc
push
xor
mov
cmp
jl
cmp
cld
push
mov
cltd
or
sbb
pop
fwait
push
pop
loope
pop
ficompl
popa
pop
pop
fisttpll
es
loope
pop
inc
add
ret
popa
dec
pop
into
push
mov
adc
xchg
aam
ret
hlt
adc
lret
in
popa
push
pop
cwtl
push
pop
loope
pop
xlat
fmuls
sbb
pop
popa
cltd
pop
mov
pop
cmpsl
inc
pop
and
or
in
popa
aad
xchg
push
push
loope
pop
lcall
fwait
pop
fildl
pop
loope
pop
sbb
push
popa
fstpl
push
fsubp
and
lahf
or
in
popa
mov
loope
pop
popa
jp
arpl
add
xchg
loope
and
pop
es
in
movsl
pop
gs
dec
fs
loope
pop
loopne
or
in
popa
jecxz
and
sub
push
sub
call
cmc
movsb
or
mov
pop
or
mov
lret
lret
jne
xor
push
cmp
sti
pop
mov
cli
popa
mov
loope
pop
mov
clc
popa
mov
ja
aaa
loope
pop
mov
or
in
popa
dec
pop
or
enter
dec
or
iret
movsl
pop
dec
push
pop
pop
push
fisttpll
popf
in
popa
sbb
loope
pop
sbb
or
pop
fiaddl
lcall
loope
mov
push
clc
sub
out
pop
data16
push
out
in
es
ljmp
daa
jmp
cmpsb
imul
xchg
call
movsl
daa
pop
gs
sub
addr16
mov
sub
push
push
data16
pop
and
dec
shl
push
mov
jae
inc
and
into
loope
pop
mov
stos
loope
and
sbb
repnz
or
push
lahf
es
inc
pop
xchg
pop
loope
bound
fisubs
sahf
bound
pop
pop
lods
dec
push
in
sub
popf
imul
fcoml
pushf
sbb
cmpsl
pop
sbb
dec
inc
fisttpl
fwait
or
inc
pop
ljmp
pop
cmp
imul
pop
sbb
dec
xchg
fldenv
push
cltd
add
clc
pop
addr16
sbb
fmuls
cwtl
or
sub
push
xlat
es
data16
and
push
and
ljmp
out
sub
push
ljmp
sub
ljmp
aam
dec
pop
xchg
xchg
imul
inc
adc
mov
pop
xchg
test
sbbb
pop
rcr
pop
xchg
out
push
scas
dec
rclb
dec
lahf
rorl
cs
xchg
ljmp
and
jmp
jmp
pop
movsl
adc
dec
ret
iret
push
xchg
dec
loope
bound
sbb
out
mov
pop
dec
ljmp
int
ja
jmp
or
pop
push
push
in
or
sti
lret
push
mov
mov
ljmp
xchg
xchg
or
leave
push
out
sub
mov
testb
or
enter
data16
dec
data16
data16
data16
xchg
repz
ljmp
xchg
dec
inc
jmp
pop
sbb
push
addr16
inc
push
add
mov
dec
xor
dec
dec
orl
dec
fildl
dec
push
ret
orb
or
insb
pushf
enter
cmp
push
ljmp
mov
test
js
popf
test
andb
push
fstpl
popf
ja
pop
inc
fstps
push
push
pushf
in
fdivrp
sbb
es
rolb
fnsave
bound
push
popa
leave
lahf
das
dec
xchg
xchg
adc
clc
jne
arpl
pop
cld
add
xchg
mov
push
and
jmp
rorl
cmp
sti
mov
mov
mov
pushf
fstps
and
and
xchg
out
jmp
mov
pop
ljmp
lods
push
fscale
jmp
lds
and
test
cs
ss
cli
jp
push
mov
or
movsl
js
add
aaa
sub
sub
popa
out
fs
mov
push
scas
notb
je
cmp
cmp
inc
and
sbb
jmp
jmp
and
and
xlat
and
fmull
push
call
sbb
jmp
push
push
arpl
xchg
xchg
sbb
test
sbb
test
test
lcall
addr16
push
sub
std
mov
adc
pop
in
mov
ljmp
sub
fwait
arpl
ljmp
xchg
inc
pop
jbe
push
mov
roll
test
sbb
into
push
es
jmp
sbb
lods
push
adc
sbb
push
cld
arpl
mov
fbstp
dec
sub
mov
lods
fdivrp
mov
mov
pushf
arpl
pslld
in
xor
test
sbb
dec
and
cmpsb
pop
dec
je
lea
xchg
jl
cmp
sub
orl
pmulhw
repnz
aas
popf
inc
pop
push
in
or
xor
mov
push
call
inc
pop
cmp
and
fcmovu
stc
lods
xchg
es
dec
enter
or
and
add
mov
pushf
nop
ficomps
pop
pop
xchg
pusha
mov
and
or
xor
mov
fdivrl
mov
cld
shll
fisttpll
push
rcr
pop
arpl
xor
pusha
mov
aad
jnp
sahf
pop
movsb
bound
mov
jnp
push
sahf
pop
jne
ss
sub
inc
pusha
sbb
dec
lahf
pusha
shll
cmpsb
lret
mov
sub
sub
outsb
std
sti
out
sbb
cld
aam
fwait
loope
xchg
sub
sbb
sub
nop
push
inc
xor
xchg
rcl
xchg
sbb
ljmp
inc
subb
aaa
mov
loop
add
mov
jbe
addb
push
daa
sbb
pop
push
cmp
sbb
inc
fs
loope
pop
dec
inc
jle
and
imul
inc
xchg
xlat
push
popf
fsubl
push
js
or
add
rcr
pop
mov
inc
push
jle
add
cmp
leave
or
test
or
jnp
xchg
push
add
pop
pop
pop
shll
ss
adc
push
cmp
repz
mov
out
popf
sbb
test
jnp
jns
jmp
xchg
movsb
fstpl
pusha
pop
ss
fldcw
jle
cld
adc
pop
xor
cwtl
or
mov
test
ljmp
out
out
jg
xchg
sbb
mov
pop
mov
mov
mov
data16
ss
pop
test
mov
inc
int
ret
test
fwait
mov
mov
nop
xor
mov
ljmp
mov
jmp
xchg
divb
nop
jge
inc
je
mov
js
es
bnd
imul
jle
cmp
mov
fdivrp
std
dec
pushf
inc
mov
xlat
ljmp
adc
scas
and
jmp
adc
pop
ljmp
int3
fldenv
data16
jl
out
jne
pop
inc
mov
in
and
rolb
and
daa
mov
jbe
lahf
xchg
sahf
xchg
and
push
mov
sbb
sub
dec
ja
mov
cmc
movsl
outsl
stc
xor
cwtl
push
stos
in
shrd
cmp
pop
mov
popf
pop
das
daa
cmc
movsl
push
lods
popa
bound
mov
std
mov
mov
mov
pop
dec
inc
sub
cli
cmp
stos
push
xchg
mov
and
sub
pop
jbe
out
int
adc
sub
sub
and
mov
aaa
icebp
or
addr16
pop
cmp
mov
in
push
push
lea
lret
dec
pop
js
repnz
sub
js
xchg
inc
mov
jmp
rorw
bound
push
cmp
dec
mov
mov
inc
ret
adc
in
ljmp
xor
push
jge
lds
mov
popa
sub
lock
pop
cmp
mov
lds
fwait
inc
adc
gs
fwait
ss
jnp
out
pop
in
adc
push
cmpsb
mov
sbb
lret
popf
xlat
rcrl
cld
out
movsl
out
lcall
ljmp
aam
fcmovbe
mov
jo
sbb
add
sahf
or
mov
mov
arpl
dec
sti
repnz
xor
pop
mov
adc
fucomp
inc
sub
cmp
inc
sbb
out
loope
pop
pop
or
push
pop
dec
cmc
xor
inc
aam
sub
mov
clc
pusha
jbe
scas
es
xchg
jo
adc
stc
enter
popa
shlb
mov
jp
xchg
aam
pop
pop
lds
adc
ret
push
leave
push
sub
mov
mov
ja
stos
nop
sub
stos
shl
ss
imul
ficompl
jle
fnstsw
push
mov
out
mov
jnp
outsb
mov
xor
or
testb
pop
lock
std
and
xchg
ds
loope
sub
mov
adcl
ja
inc
sbb
sahf
imul
les
shll
push
cmpsb
or
ds
cmpsb
or
inc
cmp
cmp
pop
inc
jg
push
cmp
cld
loop
fcomps
adc
xchg
push
mov
add
add
aam
addr16
insb
mov
inc
xor
subl
arpl
add
jmp
mov
es
cmp
lods
or
adc
mov
push
pop
or
scas
in
sub
mov
xor
sub
mov
mov
pushf
sub
sti
stos
icebp
jp
cwtl
adc
and
pop
imul
scas
in
sti
std
inc
loopne
dec
mov
stos
sub
jno
dec
cmp
lahf
icebp
and
pusha
push
lods
mov
into
aam
xchg
dec
ljmp
in
sbb
push
fsubl
ja
fcomps
ret
adc
lea
xchg
mov
jne
xorl
xor
fwait
push
cli
popf
xchg
sbb
popa
iret
dec
and
fbstp
sub
xor
jg
pusha
idivb
mov
in
fcmovnu
idivb
push
std
add
mov
stos
fcomps
data16
xor
icebp
pop
out
popf
xlat
sbb
cs
scas
inc
stos
mov
call
and
mov
dec
pop
xor
push
rcr
jnp
or
neg
hlt
mov
sbb
popf
fcompl
loop
sbb
and
jle
push
adcl
mov
inc
sbb
ret
mov
fwait
cmp
addb
mov
test
jb
pop
push
adc
fldenv
mov
jmp
adc
xorl
data16
imul
gs
cmp
or
push
std
lahf
cmp
dec
pop
cmp
stc
and
fisttpll
add
push
jl
mov
iret
push
sbb
mov
inc
and
stos
mov
nop
ljmp
pop
push
fimuls
mov
shll
sti
rolb
cltd
pop
dec
mov
stc
cld
lahf
mov
fnstsw
hlt
inc
stos
mov
adc
lret
into
int
ljmp
popf
cmp
xor
fnsave
and
push
cmp
into
dec
jne
aas
push
mov
adc
sbb
dec
inc
sub
pop
xor
push
cltd
dec
int
lahf
pop
adc
mov
sbb
and
sub
cmp
stc
insl
and
pop
mov
lahf
mov
int
xchg
add
or
fists
sub
jecxz
fs
add
cmp
sbb
pop
push
fsubl
adc
add
loop
adc
idiv
mov
stos
aam
inc
mov
inc
jo
loope
push
aad
scas
add
lods
sbb
push
ss
push
rol
cmp
sbb
scas
fldcw
cmp
lods
pushf
fnstcw
dec
push
mov
fstl
cli
out
int
jnp
mov
repz
scas
lret
in
and
mov
and
shr
inc
sbb
xor
adc
pop
mov
jnp
mov
xlat
movsb
or
adc
aad
arpl
out
cmc
or
sbb
pusha
jb
pop
or
dec
sbb
cmpsb
add
ljmp
or
cmp
lahf
sub
test
inc
push
jnp
adcb
mov
mov
jle
inc
add
fsub
pushf
pop
popf
jbe
adc
in
push
sbb
xlat
jbe
add
out
gs
mov
add
lock
mov
mov
inc
loop
sub
hlt
cmp
cmp
and
xchg
inc
lea
andb
mov
xor
arpl
sub
stc
test
fistpl
es
mov
cmc
or
adcl
ja
jbe
xchg
adcb
imul
sbb
dec
out
std
decb
dec
cmp
jne
lods
into
mov
push
jle
repz
pop
mov
imul
xor
mov
int
mov
lea
mov
xor
pop
push
in
sbbb
pop
stc
sbb
sbb
in
mov
es
addr16
dec
in
stc
or
jne
xor
cmpsl
cmp
mov
lret
add
adc
cmpsl
push
out
adc
mov
sti
push
mov
jno
es
xchg
push
arpl
cmp
mov
mov
ljmp
mov
mov
mov
jecxz
cltd
imul
pop
xchg
xor
cltd
mov
js
imul
sub
pop
ljmp
stc
or
es
int
lret
mov
xchg
loop
jp
stc
int3
pop
stos
add
cmp
pop
inc
add
add
in
movl
and
icebp
mov
ja
mov
mov
dec
sbb
mov
loope
addb
insb
ja
sub
jns
mov
jo
jns
cmp
cltd
out
clc
mov
and
mov
mov
mov
mov
gs
cmp
mov
sbb
fstl
jg
ljmp
int3
mov
es
pop
and
lock
xor
test
fsubrp
mov
cld
add
outsl
idivb
cmp
stos
jl
std
pop
sti
jno
in
das
jp
imul
cmp
lcall
sti
xchg
jmp
arpl
push
xor
mov
mov
test
inc
push
or
sbb
incl
fadd
jnp
ret
pop
push
push
mov
ficoml
hlt
mov
sub
and
push
adc
cmc
and
test
ja
ss
fcomip
mov
ljmp
loopne
add
sbb
sbb
enter
pop
pushf
push
or
and
fidivs
mov
xor
xor
or
and
or
lcall
pop
mov
aad
lea
jl
sbb
dec
dec
push
stc
fsubr
das
fldl
pop
mov
aam
aas
lahf
mov
push
and
lret
and
mov
lds
sarl
sbb
mov
adc
mov
xchg
push
movsb
stos
push
jmp
mov
cmp
sbb
push
mov
data16
xor
push
sub
mov
sub
jne
mov
inc
rcrl
and
shlb
xchg
dec
add
lret
test
stc
dec
jmp
scas
mov
rcr
dec
dec
repnz
mov
aas
push
cltd
out
jnp
sbb
mov
imul
jae
aas
pop
or
xchg
mov
stos
sub
mov
shrl
push
cld
js
out
lret
jno
mov
pop
cmpb
xchg
dec
popf
sbb
sbb
mov
fincstp
inc
pop
cltd
sbb
fwait
or
inc
pop
fwait
or
aas
fcoms
cmc
lds
ja
and
mov
pop
arpl
fldt
mov
mov
xor
scas
mov
into
leave
mov
repz
arpl
xchg
mov
mov
mov
popa
sub
fs
mov
sub
in
stos
push
les
pop
popa
inc
and
xor
dec
pop
pushf
stc
cmc
or
dec
push
pop
pop
loopne
xchg
push
cmpsb
outsb
and
stc
loopne
fsubrs
js
out
jnp
jmp
pop
sub
mov
adc
pushf
flds
and
lock
into
fmuls
ljmp
push
filds
test
ljmp
xchg
mov
out
ja
sub
xor
andl
imul
jbe
sub
pop
xor
add
dec
icebp
push
int
jecxz
dec
orl
xor
sub
push
pop
add
in
test
xchg
mov
mov
ret
mov
and
fisubrs
mov
push
xor
ljmp
out
fucom
mov
lock
out
pop
daa
lods
dec
and
lcall
push
push
pop
pushf
adc
in
push
pop
inc
rol
xchg
loopne
or
loope
push
scas
imul
sahf
xchg
jp
mov
and
psubsw
insb
inc
sub
or
aas
xlat
mov
push
mov
mov
dec
std
int3
iret
push
leave
shr
imul
dec
cld
inc
jne
jne
sub
hlt
jl
imull
movsb
adc
vpmaxub
adc
dec
mov
push
orb
in
or
xor
mov
lods
mov
pop
mov
in
mov
pop
xchg
sbb
add
popl
div
mov
aaa
rcl
bound
mov
dec
pop
xlat
test
sti
lahf
mov
dec
push
pop
fmull
repz
repnz
imul
push
idivb
loop
pop
add
addl
inc
lret
jnp
orb
mov
xchg
jmp
shrl
addb
ja
scas
push
adc
imul
dec
xchg
mov
sbb
aas
scas
cmp
and
push
jle
pop
pusha
push
sbb
inc
cmp
pusha
jg
xor
push
cld
xor
in
mov
cmp
pusha
cmc
ss
jae
cmp
divl
data16
jno
divb
jbe
and
cmp
xlat
and
ss
cmp
xor
fnsave
cmp
in
sahf
cmp
xor
push
out
mov
das
out
mov
stc
push
push
and
or
mov
out
clc
mov
in
int
idiv
int
jne
insb
and
push
push
clc
mov
idivb
dec
and
pop
test
in
adc
lea
test
sub
push
jl
mov
inc
push
pushw
in
out
cli
cld
sbb
fadd
data16
pushf
or
psubd
pop
push
cmp
mov
push
es
sbb
ss
rcrl
fcomps
cwtl
aas
add
dec
fnstcw
cmp
push
and
sarl
in
mov
aad
push
lds
scas
inc
xor
or
fsubp
lds
nop
pop
cmc
and
xchg
add
pushf
rcll
popa
ror
out
cmp
push
ljmp
lds
or
inc
ljmp
dec
out
jecxz
cs
pop
xchg
dec
scas
and
frstor
adc
xchg
and
mov
cmp
sbb
push
sbb
subl
mov
addr16
fsubs
mov
or
pop
sti
jmp
push
push
push
sub
mov
sub
ret
sbb
leave
call
push
dec
cmp
loope
push
push
lods
sbb
clc
js
out
leave
fs
jmp
mov
mov
ds
fisubrs
inc
push
outsl
ret
ss
push
loope
or
mov
jmp
dec
inc
push
mov
mov
in
es
popa
test
dec
or
xor
pop
es
mov
aas
fs
jmp
ljmp
daa
or
jmp
jmp
and
pop
int3
dec
xchg
loope
push
cwtl
or
dec
and
or
out
xor
pop
mov
push
push
dec
push
dec
sahf
in
mov
cmp
pop
jno
pusha
dec
shrl
and
stos
cwtl
push
or
pop
hlt
push
lds
cmpsb
sahf
data16
xchg
int3
inc
or
inc
push
sbb
cmp
pop
pop
adc
push
fstps
lods
imul
ljmp
xchg
and
dec
push
or
xor
jg
sub
ss
inc
lods
add
or
pop
inc
fldenv
imul
and
xor
mov
cwtl
inc
mov
enter
cmp
mov
pop
xor
mov
jns
xor
es
inc
push
bound
cwtl
push
push
test
stc
pop
jbe
push
loope
cwtl
gs
dec
dec
jbe
and
out
les
jmp
sub
sub
or
dec
xor
pop
dec
sbb
mov
lcall
std
fwait
inc
and
inc
movl
dec
mov
adc
dec
sub
out
inc
push
fs
xchg
cs
pusha
cmp
xor
ss
inc
push
adc
mov
repnz
sub
xchg
cmp
sub
cli
xor
mov
ss
cmp
imul
dec
push
jno
pop
inc
cmp
jmp
dec
scas
xchg
call
add
cs
outsl
fidivrl
pop
icebp
sub
xchg
icebp
lret
inc
fs
mov
lods
ds
sub
pop
and
fs
jmp
inc
dec
inc
mov
fistpl
scas
sub
cmp
das
mov
cmp
sub
xor
ljmp
or
movb
lods
lret
push
movsb
pop
mov
stc
dec
sub
movsl
ljmp
cwtl
ljmp
dec
pop
ds
cmp
lahf
ss
dec
insl
leave
xchg
mov
stos
sub
pop
xchg
dec
daa
test
cmp
xor
and
addr16
dec
and
test
mov
in
cwtl
pop
adc
test
mull
xchg
sub
inc
cmp
arpl
dec
mov
mov
sub
cmpsb
cmp
fwait
movsl
xchg
and
sub
sbb
fs
mov
sub
arpl
xchg
fwait
cmp
pop
fcomps
test
fisubl
fstpt
dec
and
sbb
mov
addb
xor
in
cmp
pop
xchg
cltd
test
inc
xchg
test
shll
xchg
subb
push
dec
cmp
lret
xchg
test
xchg
pushl
mov
lds
cli
ds
pop
push
xor
push
pop
test
adc
popw
ds
adc
jo
cli
dec
xchg
test
and
rcrl
mov
jecxz
add
mov
sub
orb
dec
data16
bound
cmovbe
sbb
cmp
pop
loope
fcomps
dec
pushf
push
sub
or
cmp
push
inc
sti
dec
sub
inc
inc
or
int3
cmp
pop
mov
push
cmpsl
cmp
out
pop
push
aam
inc
repnz
test
dec
les
dec
lahf
xor
push
or
stc
dec
lret
fidivl
in
lret
ficompl
pop
or
dec
addb
xchg
dec
stc
dec
in
cmp
popa
mov
cmp
xor
gs
inc
gs
push
xor
xor
push
fwait
pop
loope
xchg
lea
rcrb
dec
out
push
or
push
movsb
lret
cmp
pop
xor
add
sub
ja
jo
sub
inc
insl
test
mov
inc
sub
out
into
imul
jne
out
subl
push
cld
imul
sbb
cmp
bound
push
popa
pop
pop
loopne
push
data16
add
and
insl
inc
ljmp
arpl
inc
test
sub
test
dec
incb
dec
cmpsl
imul
mov
push
push
fldenv
cld
inc
mov
jl
xor
lahf
cmp
dec
dec
lret
mov
or
xor
push
push
sub
repnz
bound
push
inc
cmp
and
push
lret
dec
push
test
mov
pop
shlb
push
push
shll
sub
cmpsl
leave
cmp
and
inc
xor
pop
in
add
fnstcw
push
push
pop
mov
xchg
push
arpl
cli
cmp
pop
mov
push
adc
or
inc
lock
cmp
idivl
pop
mov
imul
mov
cmp
cmp
mov
cmpsl
dec
mov
inc
or
cmpsl
dec
bound
imul
sub
cmp
and
sub
cs
push
push
in
push
pop
pop
pop
push
sub
test
mov
inc
push
dec
inc
mov
icebp
push
aaa
mov
arpl
cs
and
nop
loope
pop
and
inc
fwait
ljmp
out
mov
imul
jg
leave
and
dec
ss
das
in
xchg
adc
and
xor
mov
inc
dec
pop
push
xor
mov
xor
sbb
add
lea
das
jle
pusha
ss
stos
shlb
ss
xor
sub
test
dec
fs
pop
inc
repnz
bound
push
in
push
inc
stos
inc
subb
cmp
xor
test
push
cs
inc
jp
es
fwait
aaa
push
mov
dec
addl
mov
hlt
or
sbb
pop
lods
push
add
inc
es
insl
push
mull
push
push
inc
xor
test
and
xchg
adc
cmp
dec
es
and
fcmovnbe
inc
dec
ds
mov
push
sahf
or
pushw
movsl
jne
inc
pop
add
fidivrl
movsl
and
adcl
ljmp
push
dec
negb
arpl
cs
imul
mov
dec
cmp
pop
es
mov
jp
pop
sub
push
push
inc
inc
xchg
insl
cmp
movsl
push
pop
enter
sbb
mov
out
push
fs
dec
or
cmpsl
cmp
js
xchg
or
sub
cmp
fsubp
test
aas
dec
mov
inc
movsl
push
push
push
push
push
in
inc
rcrl
out
ljmp
ficoml
pop
fs
ficoms
dec
pop
jns
mov
shl
inc
adc
pusha
and
notb
orl
xor
push
iret
push
push
dec
dec
jp
pusha
and
push
jmp
cmp
xchg
jg
sub
pop
dec
lret
inc
add
dec
repnz
pop
jl
mov
xchg
mov
gs
jg
inc
push
push
ss
pusha
ss
mov
pop
dec
xchg
jno
rorl
das
push
es
ljmp
daa
pop
popf
inc
add
fistl
xchg
sub
fs
mov
imul
push
test
imul
cmp
xor
or
lock
data16
mov
mov
inc
inc
bound
push
testl
pop
pusha
sti
add
cmp
add
ss
lcall
cwtl
xor
into
movsb
bound
push
cli
inc
es
sub
xor
lock
es
adc
sbb
push
sub
pop
and
xor
push
cmp
imul
xlat
cmp
fldcw
push
xchg
insb
lahf
inc
sub
or
cmp
stos
mov
xor
pop
ds
push
mov
jl,pt
sub
bnd
jo
sbb
sub
push
and
sub
sbbb
imul
push
dec
inc
pop
jmp
mov
mov
dec
sub
inc
pop
imul
xchg
fs
popf
xor
push
arpl
les
dec
rcll
dec
sub
sub
pusha
jge
jecxz
ss
push
jl
push
cmp
mov
mulb
cmpb
inc
jne
bound
shlb
mov
cmp
push
mov
je
ds
pop
push
out
mov
push
hlt
ficompl
pop
hlt
xchg
insl
pop
sar
out
decb
jmp
insl
dec
sub
mov
xor
adc
je
or
repz
sub
mov
ss
pop
xor
test
push
pusha
cmp
xor
outsb
sub
xor
sub
out
inc
jmp
push
dec
cmp
imul
cmpsl
pushf
shlb
xlat
fs
adc
and
pop
cmp
adc
pop
adc
movsb
pop
icebp
ds
fs
xchg
lahf
pop
loope
lock
cmp
fldcw
or
sbb
imul
pusha
fs
xchg
pop
loop
pop
mov
dec
cmpsb
loope
lock
push
push
dec
cltd
cmp
dec
cltd
fisttpll
mov
push
adc
fiadds
cmp
or
movsb
pop
xor
jae
mov
adc
sbb
push
xor
out
push
dec
cs
push
dec
sbb
in
ret
add
call
push
test
inc
lods
jg
in
or
mov
cmpsb
aam
lods
rcrb
loop
test
dec
in
cli
int3
adc
divb
lea
push
out
dec
lcall
outsb
cmpb
xchg
mov
out
call
ret
sub
cld
jb
pusha
mov
push
mov
mov
mov
or
sub
cmp
sahf
pop
cmpsl
ss
out
push
push
cltd
mov
aad
inc
fs
pop
mov
fiadds
cmp
sbb
inc
dec
cmp
fisubl
xor
adc
pop
push
rcrl
bound
pop
sbb
dec
aad
fs
mov
jmp
flds
into
xchg
adc
cmp
cs
xlat
sahf
xor
push
cwtl
ficompl
ss
xchg
xchg
out
xor
das
dec
pop
cwtl
ljmp
push
mov
cs
out
fs
cs
out
testb
ljmp
sbb
mov
add
ljmp
jl
and
dec
ss
out
push
adc
out
mov
add
ds
rclb
xor
rorl
dec
inc
rorl
dec
mov
push
out
xor
mov
pop
dec
ret
dec
jno
sub
push
cs
leave
out
sub
popf
cmp
bound
push
test
or
es
pop
sub
push
arpl
jae
mov
adc
out
das
inc
mov
mov
pop
gs
fildl
inc
sub
or
cmpsb
cmp
pop
in
leave
and
mov
in
xchg
sub
mov
xor
mov
inc
cmp
bound
and
in
cmpsl
hlt
sub
cwtl
jecxz
and
pusha
in
popa
and
subb
or
push
arpl
filds
sbb
frstor
sbb
pop
push
in
cmpsb
xor
cmp
and
pop
loope
pop
fistpl
aam
mov
xor
sbb
sbb
fcompl
pushf
or
in
and
jmp
bound
xlat
dec
and
repnz
sub
popa
out
pop
repnz
cli
loope
fldl2e
loope
pop
sub
cs
popa
cmp
and
push
pop
stc
push
andb
data16
addr16
call
push
test
cmpsl
pop
lret
pop
arpl
andnps
mov
jge
call
xor
arpl
push
cmp
fwait
mov
pop
andl
push
pop
dec
leavew
mov
jae
inc
cmovle
mov
in
sub
pop
inc
inc
mov
arpl
loop
cs
push
lods
sub
jo
sub
outsb
shll
lods
mov
bound
adc
dec
jnp
js
loop
push
repnz
jg
mov
inc
pop
idivb
sub
addr16
pop
sub
cmpsb
jbe
push
pop
ds
sub
cmp
cltd
jge
sub
xor
sub
arpl
mov
sahf
outsb
mov
push
sub
dec
inc
push
adcl
cmp
imul
fwait
imul
js
insb
dec
pop
cmp
sub
cmp
mov
mov
fs
popa
xor
lahf
outsl
mov
movsb
je
push
inc
push
sub
inc
push
jg
adcl
jmp
out
fisubrl
sub
negl
jmp
fnstcw
mov
push
sub
pop
sti
or
mov
mov
fisubrs
imulb
pop
out
and
rcl
aad
mov
adc
push
sub
lsl
out
fldt
lods
sub
sbb
sub
stc
sbb
lret
sub
fdivrs
sub
sbb
or
sub
mov
mov
lock
sub
icebp
and
shrl
rcl
aam
adc
test
adc
pop
dec
xor
sbb
das
or
std
lods
in
loope
cmp
pushf
sahf
roll
xor
es
cs
cmpsl
sti
js
adc
loop
data16
in
ds
xchg
pop
cmp
mov
sbb
adc
pop
mov
int3
pop
rorb
pop
inc
inc
pop
cmpsl
mov
pop
cmpsl
insl
cmp
pop
cmpsl
xchg
pop
stc
test
inc
push
lahf
inc
cltd
pop
push
xor
or
cmp
fadds
xchg
pop
push
mov
xlat
cmp
cmpl
sahf
sub
inc
stc
and
push
ss
fisttpl
and
inc
inc
ss
mov
dec
dec
and
out
dec
push
fs
xchg
push
cmp
dec
push
fcoms
xor
fstpl
ficoml
mov
pop
nop
inc
mov
ss
fs
imul
cwtl
test
cmp
push
add
cs
mov
cmp
inc
xor
push
xchg
cmpsl
inc
push
adc
jg
pop
lcall
aaa
adc
inc
dec
push
sub
fldenv
cltd
cmpsl
in
dec
pop
sbb
loop,pt
cmp
xchg
mov
inc
stos
inc
cmp
pop
inc
mov
test
fmuls
cmp
mov
pop
and
ljmp
ljmp
aam
data16
pop
inc
mov
out
jmp
sbb
clc
rorb
es
pop
hlt
push
fidivs
push
mov
xor
push
ss
test
or
dec
adc
dec
or
push
push
cmp
ss
dec
ss
xor
push
pop
in
cmp
push
cmpsl
cmp
imul
ljmp
ficoms
xchg
add
movsb
jmp
dec
mulb
test
sub
stos
cmp
repnz
push
les
fs
idivl
inc
push
cmp
mov
bound
movb
inc
dec
pop
cs
subb
aas
inc
rol
es
or
or
jle
cmc
add
sub
cmp
push
aaa
dec
and
testl
push
adc
mov
pop
clc
mov
pop
xor
inc
aaa
pop
cmp
pop
popa
aad
xor
cmp
bound
adc
dec
jno
adc
xor
fldcw
dec
jmp
test
es
dec
xchg
pusha
bound
fxch
or
pop
addb
bound
xor
push
aad
pop
cmp
push
adc
add
pop
mov
adc
fisubs
jp
lahf
int
xor
out
pusha
push
aam
inc
loopew
push
mov
sub
pop
push
push
andb
adc
or
xor
hlt
addl
mov
je
repnz
popa
outsl
pop
arpl
push
push
jmp
xor
repz
pop
ret
fdivl
jb
int
mov
jecxz
mov
fsubp
sub
pop
rorl
loope
iret
test
lea
dec
loope
fdivrs
loope
pop
mov
pop
sub
add
cld
call
dec
cmp
inc
out
gs
jb
jmp
aas
pop
pop
outsb
pusha
mov
out
mov
fsubl
push
jo
stos
pop
push
loop
insb
les
bound
cltd
push
cmp
push
pop
adc
mov
leave
mov
es
ljmp
popf
iret
cmpsl
push
pop
or
xchg
adc
push
aad
fs
push
bound
cmp
in
addr16
xchg
xchg
mov
flds
enter
xlat
or
adc
inc
in
addr16
out
lods
in
pop
adc
xor
pop
xchg
bound
adc
out
lods
adc
add
push
cmp
lods
dec
pop
pop
nop
push
pop
pushf
push
push
xchg
into
push
pusha
dec
dec
or
xor
and
popa
call
sbb
cmp
int3
cltd
sbb
fsubrl
fisttpll
mov
inc
pop
xlat
fs
add
ds
mov
mov
dec
pop
mov
sahf
fnstsw
and
or
add
call
lret
xchg
in
jg
mov
mov
sub
iret
incl
pop
sar
push
cwtl
mov
mov
popa
xor
in
lahf
or
or
aad
into
stc
cmp
sub
pop
sbb
cmp
ljmp
mov
xchg
dec
pop
push
std
xchg
push
and
popf
andl
jecxz
loope
cltd
fnstcw
dec
fsts
mov
pop
pop
sbb
mov
movups
in
movsl
daa
xchg
ljmp
xor
pop
mov
pop
xlat
mov
push
ror
push
or
mulps
lea
adc
sub
inc
in
pandn
xchg
pop
inc
pop
fistpll
insl
fcompp
push
xlat
mov
in
mov
dec
leave
adc
cs
cmp
xor
int
xchg
pop
inc
rclb
test
pop
das
sbb
xabort
pop
or
push
xor
or
xchg
test
pop
push
inc
and
sbb
cltd
lds
mov
inc
lea
dec
addb
jle
jge
test
arpl
sub
cmp
daa
add
fstpt
rclb
jmp
icebp
pop
data16
and
test
adc
adc
test
ja
mov
and
clc
or
adc
pusha
xchg
scas
jae
and
pusha
lods
xchg
mov
adc
fisubl
jp
aad
cs
adc
push
ds
cmp
push
xchg
push
shrl
dec
push
sbb
push
movsb
push
ljmp
cmp
mov
xor
jno
icebp
stos
mov
dec
and
cmpsb
int3
dec
pop
pop
lahf
jne
popa
add
in
repz
sub
daa
test
bound
daa
test
sbb
jmp
sub
fucomp
adc
pop
dec
popa
test
pop
inc
rorl
daa
imul
or
loope
flds
cltd
sub
ret
movsb
push
jne
inc
dec
cwtl
call
mov
pop
jl
jmp
push
or
ljmp
xor
es
push
xor
pop
inc
sub
inc
inc
push
pop
testb
push
test
imul
dec
mov
mov
sbb
push
test
fldl
nop
sub
popa
addps
or
aad
jo
push
out
or
inc
xlat
cltd
mov
xor
push
xchg
out
inc
dec
xchg
psubb
cmp
gs
inc
xor
sub
xor
ficompl
sbb
dec
add
cmp
sbb
imul
or
and
fnstenv
fisubrl
mov
lret
lods
mull
push
int
int3
mov
nop
pop
push
push
xchg
lcall
inc
mov
out
mov
bound
or
in
cmpsl
ds
fs
enter
cltd
mov
mov
daa
iret
mov
inc
mov
cmp
push
aas
pop
mov
pop
xor
jo
jb
add
bound
adc
icebp
pop
and
ljmp
or
adc
fisubl
push
adc
loope
das
inc
mov
cli
inc
nop
mov
dec
pop
fstpl
sub
dec
add
cld
pop
xchg
bound
pusha
cmp
jp
push
sbb
push
pop
jno
push
sahf
xchg
mov
outsb
sub
int3
mov
in
movsb
dec
xchg
sub
xor
xor
sbb
rcrl
lea
out
mov
test
jge,pt
stos
cmp
push
cltd
data16
scas
xor
sbb
scas
xchg
cmp
push
pop
xchg
pop
and
and
adc
cmp
aaa
adc
out
cmp
shrl
adcb
dec
and
xchg
pop
and
and
movsl
inc
sbbb
sub
movsb
ss
sbb
xchg
push
adc
sti
loop
xor
xor
mov
rol
das
xor
push
inc
push
pop
out
ja,pt
xchg
push
push
pop
and
mov
test
and
sub
inc
addl
je
xor
in
lods
and
aad
arpl
shlb
sub
nop
adc
inc
jns
shr
jno
mov
int3
sub
xlat
sbb
push
sub
dec
adc
fsts
xor
inc
popa
push
pusha
dec
mov
pop
cmpsb
dec
lahf
cmp
xor
ret
push
sub
stc
or
sub
push
xchg
xchg
adc
jnp
mov
enter
imul
cmp
pop
xchg
js
inc
push
lahf
cmp
mov
inc
adc
pop
dec
add
push
scas
lods
push
aaa
xor
cmp
xor
xchg
or
push
cmp
cmp
inc
pop
mov
cmpl
sbb
push
push
sbb
ljmp
test
sub
push
mov
pop
ret
dec
addr16
mov
pop
ja
in
pop
int
push
push
add
mov
jmp
outsl
addb
adc
mov
push
mov
jo
mov
aaa
cmp
ss
push
andl
adc
hlt
aaa
dec
push
xor
movups
enter
imul
loope
sti
icebp
ss
jcxz
inc
cmp
out
in
adc
pop
aas
ljmp
lds
xchg
in
xchg
xchg
jnp
jl
rcr
pusha
xor
inc
push
dec
dec
add
push
cmpsl
jecxz
idiv
test
out
stos
data16
popa
inc
rcrl
sub
nop
adc
push
pop
insw
lds
push
rcll
gs
adcl
push
lods
and
rcll
inc
xor
negb
add
push
push
pusha
push
inc
daa
pop
icebp
dec
nop
or
xor
push
or
in
loope
adc
pop
int
shll
loope
iret
gs
pop
xor
dec
inc
push
jnp
xor
jmp
pop
or
pop
bound
test
pop
push
pushf
inc
pop
cmp
dec
and
cwtl
pop
mulb
xor
andb
lahf
xchg
xchg
add
aaa
loop
loopne
cmp
adc
push
data16
jnp
jge
fcmovne
jb
mov
mov
or
out
icebp
mov
xchg
pusha
adc
pop
lds
adc
or
push
movsb
popa
jle
icebp
lea
shll
inc
or
dec
xchg
pop
pop
dec
addr16
inc
cmpsb
dec
or
add
xchg
lea
xor
bound
test
rcrl
ss
arpl
push
test
mov
sub
jbe
sahf
dec
std
cmpsb
loop
int
sbb
or
out
sarl
out
int3
xor
scas
cmpsl
mov
and
and
push
dec
xlat
xchg
dec
clc
arpl
into
adc
sbb
sub
in
xchg
fcoms
or
push
or
loope
notb
push
imul
inc
push
or
sbb
pop
jecxz
pop
sub
sub
xchg
pop
fcomps
out
adc
frstor
cltd
sbbl
dec
es
or
pop
leave
pop
push
leave
bound
cwtl
push
gs
decb
push
xchg
test
push
xchg
fstps
xchg
test
sbb
js
xchg
sti
jbe
push
pop
pop
pop
sbbb
aam
aad
pop
pop
and
ss
mov
addr16
or
int3
jg
pop
dec
xchg
mov
mov
leave
dec
cwtl
les
push
sbb
in
aad
fs
fstpl
bound
out
sbb
xor
pop
arpl
pop
pusha
pushf
dec
push
into
std
cmovnp
cltd
xchg
push
xor
dec
adc
xchg
pop
shr
inc
data16
gs
jo
xor
adc
push
push
int3
xchg
negb
xchg
popa
pop
lods
jb
cmp
adcb
aam
dec
pop
mov
repz
push
and
mov
push
xchg
in
xchg
pop
mov
leave
leave
xor
iret
push
mov
popa
pushf
dec
paddsb
or
or
loope
xchg
pop
lods
jl
and
push
xchg
call
punpcklwd
dec
add
jle
scas
cmc
pop
andb
fnstcw
minps
rcrb
pop
mov
sbb
and
push
aad
adc
sarb
mov
and
pop
enter
clc
movsb
bound
in
xor
cltd
lahf
xchg
stos
rcrb
test
cmp
dec
cmpsb
and
sbb
pop
repz
aad
mov
jnp
pop
push
cmp
ljmp
movsl
cwtl
sub
lea
cmp
cmp
jmp
jne
inc
xor
pop
cmp
dec
inc
mov
sbb
shll
push
lds
into
pop
fucomp
ljmp
lahf
cs
call
sbb
add
shlb
dec
pop
and
push
arpl
imul
and
fstpl
movsb
inc
sbb
xor
jnp
jbe
adc
pop
dec
into
fcoml
int
adc
push
pop
imul
inc
aam
sahf
xchg
mov
gs
pusha
mov
leave
leave
insl
dec
pop
das
or
fidivs
xor
mov
insl
inc
fsts
andb
fidivrs
jns
das
aad
inc
insl
and
lock
out
inc
cmp
cmp
lea
fs
es
lods
push
enter
lock
shr
dec
sub
push
mov
jmp
sub
shrl
pop
or
cli
pushf
bound
jno
and
cwtl
movsb
xchg
push
push
les
dec
test
pop
sub
cmpsb
shlb
xchg
pop
or
popf
dec
pusha
push
jp
mov
inc
out
cmpsb
cmp
xchg
scas
inc
addr16
mull
push
pusha
fs
add
sub
cmpsl
push
in
and
sub
mov
adc
mov
inc
push
frstor
push
cmp
dec
sar
push
cmp
mov
push
sarl
xor
push
adc
outsl
xorl
sub
mov
loop
inc
and
je
aam
cmp
rcrb
push
lock
aas
cmc
aaa
es
sub
out
push
sbb
pop
fcomp
and
xchg
fs
dec
cmpsb
cmc
mov
pop
js
sub
dec
insl
fsub
data16
cmpsl
hlt
loope
mov
repnz
xchg
cltd
push
aaa
xor
ljmp
bound
test
xor
sub
push
out
cmp
in
jmp
xchg
pop
gs
adcb
cmp
push
inc
popf
gs
icebp
fidivl
gs
push
xor
or
mov
gs
dec
push
fs
test
gs
inc
push
cmp
in
dec
cwtl
dec
ss
and
inc
ds
stos
mov
mov
push
cmp
inc
inc
sub
cwtl
imul
bound
xor
pop
fsubrs
push
fimull
pop
dec
push
gs
push
push
inc
mov
cmp
lds
ficompl
pop
sbb
cli
sub
xor
dec
sub
pop
pusha
add
pop
push
cmp
cwtl
push
ss
and
push
into
xor
mov
sub
std
pop
and
pop
in
dec
bound
xor
pop
cwtl
jmp
pop
and
xorb
fs
and
aam
push
ss
and
push
cmp
xchg
xor
add
cs
fmuls
popf
push
add
sub
dec
pop
or
pop
cmpsb
pop
dec
test
pop
popa
cmp
mov
jecxz
xor
orb
lods
sub
frstor
subb
adc
push
push
ss
and
inc
cmp
sub
mov
cmp
xchg
lock
gs
fistl
dec
aas
pusha
xor
pop
fisubl
fisubrl
iret
pop
adc
push
cmp
adc
and
cwtl
ss
and
gs
push
push
out
pop
and
ljmp
push
push
cmp
push
dec
sub
adc
push
and
rcrb
cs
fs
inc
pop
outsl
rcll
pop
pop
shlb
cld
pusha
out
push
mov
dec
push
ss
and
inc
xor
das
cmp
xor
or
pop
xor
fldt
inc
bound
fbstp
dec
call
mov
push
push
popf
gs
xor
into
lahf
inc
push
push
pop
gs
gs
push
int3
fdivs
lods
xor
or
push
gs
adcb
imul
inc
pop
dec
sbb
inc
loope
aam
push
ss
dec
shlb
inc
lods
cmp
push
cmp
adc
push
pop
sub
cs
sub
pop
pop
pop
shlb
sbb
push
mov
pop
dec
popf
gs
icebp
jno
mov
jo
mov
push
dec
cmp
adc
push
movsb
call
call
add
inc
push
cmp
inc
sub
adc
fwait
push
and
rcrb
aad
and
push
xor
test
dec
pop
test
bound
push
and
push
hlt
dec
out
inc
fimull
push
ds
gs
xor
test
cmp
call
pop
ss
xchg
xchg
sbbl
add
pop
pop
gs
gs
push
int3
dec
movl
popf
gs
icebp
xchg
mov
push
dec
lret
push
push
mov
push
sub
cmp
arpl
sub
lds
ret
gs
dec
jne
push
push
xchg
pop
push
aaa
push
pop
mov
lret
sub
aam
push
ss
dec
shlb
sub
pop
xor
out
out
gs
xor
sub
out
data16
stc
fs
fiaddl
dec
out
inc
call
pop
xchg
inc
and
hlt
cmp
pop
frstor
add
cmpsl
xor
gs
gs
les
dec
cmpsl
xchg
adcl
ds
lret
or
add
shlb
ret
and
xor
gs
gs
test
mov
xor
pop
inc
shlb
sbbb
push
aam
dec
cltd
push
lods
push
mov
jge
bound
cmp
inc
shll
or
push
gs
orb
daa
cvtps2pd
dec
orps
pop
pop
subb
inc
daa
movsb
pop
and
pop
cmp
stos
inc
mov
out
fbstp
dec
and
mov
imul
push
xor
inc
xor
inc
xchg
data16
data16
dec
pop
pop
shrl
call
inc
pop
cmp
int
ss
inc
xor
loopne
jbe
cmpsb
js
dec
push
mov
loopne
push
or
sub
int
dec
sbb
cmpsl
cmp
pop
mov
es
pop
fs
sub
push
popf
push
cwtl
pop
dec
in
mov
int
popa
push
pop
ljmp
push
mov
test
mov
cmp
ds
mov
scas
pushf
add
scas
push
leave
imul
pop
mov
bound
pusha
mov
push
push
pop
push
push
sbb
push
out
mov
mov
dec
jmp
enter
ss
arpl
or
mov
push
push
cmp
jne
inc
repnz
imul
in
bound
cmpsl
add
xor
pop
dec
xchg
out
fs
fs
fs
fs
xchg
test
loope
pop
shrb
mov
inc
fdivs
lods
les
movsl
pop
cmp
pop
pop
pop
mov
and
push
lods
pop
loop
dec
lods
push
sbb
in
pusha
pop
cmp
push
push
and
movsl
dec
ja
mov
gs
inc
and
pop
stc
pop
pusha
lahf
ds
inc
cmp
mov
mov
xor
rcrl
cs
push
fildll
sub
filds
sub
dec
pop
pop
pushf
pop
pop
dec
pusha
and
push
dec
dec
xchg
lea
or
dec
mov
inc
jbe
in
push
xchg
cmp
cmp
xchg
and
inc
sbb
cli
in
or
pop
sub
pusha
into
sub
sub
mov
inc
dec
mov
and
mov
push
ss
rcrb
pop
adc
mov
std
pop
push
dec
jbe
movsb
pop
xor
lcall
inc
int
add
jge
dec
mov
push
sub
lahf
lret
sbb
push
pop
pusha
pop
push
rcll
pushf
inc
pop
pusha
cmp
cmp
push
adc
and
int3
cmp
push
test
cmp
sbb
mov
push
jne
movb
fs
rcrb
xor
dec
pop
mov
popw
pusha
sub
pop
ss
pusha
dec
cltd
inc
dec
aas
cmp
fs
mov
lret
pop
nop
or
inc
lea
pop
push
pusha
out
punpckhbw
decb
mov
inc
fidivrs
decb
dec
push
mov
pop
sub
aaa
ds
out
xor
lods
fidivrs
push
pop
fsubp
pop
mov
rolb
rclb
into
out
mov
xchg
dec
cmp
inc
fidivrs
mov
mov
ds
mov
pusha
mov
ss
mov
cmp
or
mov
push
cmp
pop
std
pop
push
bound
pusha
inc
push
xchg
popf
data16
pop
test
movsb
inc
mov
sub
and
push
xor
mov
push
sahf
pop
repnz
pop
mov
aam
pusha
mov
mov
lds
bound
pop
pusha
dec
ds
icebp
bound
xor
xor
call
sbb
xor
mov
lret
or
sub
ds
jle
and
and
lods
stc
mov
popa
sub
ds
imul
data16
mov
dec
data16
push
loop
dec
pop
push
mov
lahf
dec
pusha
adc
gs
out
loopne
pop
push
pop
bound
lahf
ss
adc
push
ss
cwtl
shlb
pop
mov
xor
jno
out
xor
pop
push
mov
data16
mov
push
push
cwtl
frstor
popa
call
loope
pop
push
aam
dec
incb
mov
nop
imul
bound
rol
sub
dec
icebp
dec
pusha
loope
mov
sub
pop
aas
aam
cmp
lahf
pop
push
test
xor
pop
arpl
push
ss
fsubs
adc
adc
push
push
sub
xchg
cmp
and
out
cmpsl
dec
inc
popf
lahf
dec
push
and
data16
and
bound
xor
push
xor
adc
pop
xchg
aaa
xor
out
push
xor
out
fcoml
sahf
xchg
cs
mov
cmp
fcoms
lahf
push
inc
enter
push
inc
cmp
ds
mov
pop
dec
call
ss
cld
inc
mov
testl
rorb
push
mov
sbb
cmp
data16
loop
lahf
inc
loop
mov
lea
push
push
inc
int
sbb
in
popa
dec
jp
notl
jae
pusha
xchg
jno
loope
pop
push
ljmp
pop
cmpsl
movsb
shrb
aad
dec
inc
pop
pusha
jl
popa
into
mov
pop
or
mov
adc
push
popa
or
inc
dec
lods
inc
fldt
push
cmp
inc
cmp
mov
cmp
call
cs
mov
pushf
test
push
mov
sub
mov
xor
add
push
mov
sub
ds
aas
dec
xchg
dec
push
movb
movsl
mov
mov
pop
mov
cmp
mov
pop
adc
data16
bound
pop
inc
pop
jmp
das
pop
dec
addl
loop
and
push
add
inc
cmp
push
cmp
inc
mov
xor
mov
andl
pop
push
push
cmp
sbb
data16
pop
bound
pusha
sbb
sub
pop
mov
les
xor
mov
rorl
ss
popa
xor
inc
frstor
add
inc
arpl
xchg
ds
pop
cmp
repnz
pusha
fs
out
cmpsl
dec
ss
or
sub
cli
push
test
dec
inc
pusha
xor
cs
ss
pusha
movsl
data16
push
pusha
aas
pop
mov
pusha
fsubs
mov
les
mov
pop
dec
mov
inc
dec
and
inc
cmp
ds
pop
push
cmp
mov
xchg
xor
mov
adc
sub
pusha
loope
ret
movsl
rcll
add
and
dec
pushf
push
push
cmp
push
cmp
leave
cmp
popf
dec
ret
aas
stc
xor
mov
fs
pop
data16
es
lods
es
pop
cmpsb
push
loope
lock
popa
cmpsb
pop
fistpll
cmp
in
popa
in
push
push
movsl
loope
pop
gs
or
pop
inc
push
movsb
loope
pop
fs
or
cmp
mov
xor
and
scas
popa
loop
sub
mov
cmp
fcomps
pop
out
out
cmp
push
push
pusha
popa
or
mov
mov
xchg
xchg
xchg
in
dec
cmp
cmp
cmp
fisubl
fs
out
fs
fs
out
xlat
out
fs
out
fs
fs
out
fs
out
fs
out
fs
aas
out
fs
fs
fs
lods
out
and
lcall
fs
in
pop
pop
sub
fsubs
movl
dec
lcall
push
pop
leave
imul
pop
push
sbb
dec
mov
pop
cs
or
pop
inc
sub
cmp
rcrb
and
cmp
adc
sub
cmp
xlat
lcall
cmp
icebp
xor
push
sub
int
pop
cmp
pop
push
pop
dec
mov
bound
pusha
movsl
roll
push
push
fdivrp
cmpsl
pusha
mov
es
cmp
mov
mov
in
popa
ljmp
pop
xchg
cmpsl
inc
sahf
idivb
push
push
stos
fldcw
cwtl
loope,pn
in
arpl
pop
repnz
loopne
pop
loopne
dec
fisubrs
jg
aas
xchg
xor
clc
out
fs
fdivrl
push
cmp
xchg
pop
pop
loope
pop
roll
adc
out
mulps
pop
pop
or
or
movsl
popa
test
push
and
pop
and
pop
pusha
cmp
bound
in
shrl
inc
fcomps
sbb
sub
call
es
dec
arpl
dec
pop
fsincos
jge
cmp
push
dec
mov
mov
xchg
push
mov
fsts
cmp
pusha
add
icebp
jno
xor
add
in
adc
cltd
dec
frstor
pusha
cmp
cmp
xchg
add
adc
adc
call
pop
mov
push
push
out
dec
pop
mov
ds
push
pusha
xor
xor
mov
cs
sub
test
int
sbb
arpl
addb
popf
mov
add
push
push
pop
push
out
lahf
sbb
jecxz
cmp
xchg
dec
pop
loope
inc
pop
xchg
in
sub
pop
mov
mov
sub
sbb
push
or
mov
push
pop
xor
jmp
push
or
xchg
push
mov
push
inc
xor
push
and
inc
mov
jmp
mov
dec
dec
pop
sbb
js
mov
mov
jmp
dec
addb
xor
fdivl
and
jmp
fadds
mov
jnp
push
jns
pusha
push
xor
aad
push
clc
dec
sbb
dec
negb
dec
dec
ret
stc
cmp
dec
fdivl
mov
movb
dec
xchg
cwtl
hlt
cmp
pop
and
xlat
cwtl
add
mov
push
cltd
mov
arpl
pop
sub
cwtl
lret
sbb
lods
push
std
pusha
add
xor
mov
das
and
addr16
pop
or
push
pop
mov
dec
sub
sbb
imulb
cmp
push
pop
push
adc
frstor
les
push
pop
mov
dec
lods
cmp
fadds
xor
fdivrs
insb
imul
pop
adc
sbb
or
rorl
xchg
sbb
push
outsl
add
sbb
pop
push
push
pop
out
fwait
add
mov
cmp
shlb
and
ret
arpl
pop
push
roll
cwtl
cmp
rclb
dec
addr16
sub
pop
outsl
addb
cli
xlat
lcall
scas
push
mov
pop
pop
sbb
arpl
out
lahf
mov
popa
fldt
js
dec
push
and
push
pop
data16
adc
lock
push
fwait
pop
push
fnstenv
sahf
callw
inc
sbb
cmpsl
cmp
xchg
push
lods
xor
cmp
imul
ljmp
movsb
pop
pop
mov
repz
push
push
pop
pop
mov
xchg
inc
bound
mov
xor
sahf
in
xchg
lahf
fs
xor
dec
dec
push
mov
xlat
sbb
push
cltd
inc
mov
pop
mov
inc
mov
lods
dec
std
pop
inc
cmp
ds
push
xor
jmp
push
push
dec
push
fcomp
repnz
nop
dec
dec
outsb
gs
rcrl
inc
push
push
cmp
ljmp
cmp
inc
cmp
mov
cmp
mov
ss
lcall
or
movsl
push
cmp
cmp
jge
mov
mov
shll
int
inc
sbb
cmpsl
cmp
pop
mov
daa
push
pop
push
pop
sub
adc
ret
loop
pop
and
mov
mov
cs
inc
inc
dec
jge
dec
mov
mov
fs
xor
js
dec
js
dec
mov
js
dec
js
dec
js
dec
js
dec
js
dec
js
dec
js
dec
js
dec
js
cmp
or
fs
loop
mov
test
jmp
in
popa
loope
mov
mov
xor
and
outsb
popa
loopne
stos
push
mov
pusha
imul
popa
mov
loope
pop
push
pop
or
pop
popa
cwtl
pop
fiadds
aad
sahf
pop
adc
push
in
popa
lea
inc
shll
xchg
cmp
jbe
xchg
call
mov
jae
xchg
xchg
sub
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
fldenv
imul
call
fistl
mov
sbb
jl
cltd
into
mov
pop
pusha
mov
xchg
js
mov
jnp
inc
push
cmp
add
xor
mov
pop
dec
data16
es
cmp
push
push
cmp
push
dec
cmp
push
inc
cmp
push
cmp
mov
cmp
pop
and
mov
pusha
sub
cld
dec
aad
dec
es
xchg
xchg
push
mov
xchg
sbb
xchg
pop
cmp
push
xchg
xchg
xchg
xchg
adc
pop
mov
push
aaa
rclb
dec
lahf
mov
add
inc
mov
push
cmp
mov
cmp
out
dec
mov
mov
push
dec
mov
push
popf
fs
cmp
dec
lahf
push
pop
push
dec
push
data16
inc
pusha
and
push
inc
cmp
cmp
cmp
pop
sbb
pop
xor
xor
dec
cmp
cwtl
push
arpl
pop
out
lcall
adc
mov
push
lahf
push
fsub
imul
rcrl
setne
sub
dec
mov
push
inc
or
sub
pop
mov
ds
pop
stc
fstl
les
pop
lods
cs
cmpsb
mov
inc
dec
mov
inc
cmp
cwtl
pop
lea
cmp
aad
inc
frstor
add
push
xchg
dec
or
sbb
jmp
inc
ds
mov
cmp
cs
mov
cmp
sub
dec
jbe
dec
in
sub
pop
rcrl
adc
push
nop
inc
and
rclb
lahf
enter
mov
mov
ds
jns
inc
mov
pusha
mov
push
sub
pusha
mov
test
nop
pop
dec
push
and
mov
pop
cmpsl
push
xchg
xchg
push
xor
ffree
sub
inc
add
pop
in
popa
std
aam
sub
cmp
xor
push
xlat
es
mov
jecxz
fimull
inc
pushf
aad
dec
dec
inc
dec
xchg
cmpl
jae
xor
fs
out
cmpsl
dec
inc
stos
dec
imul
in
add
fadd
pop
dec
ds
fnstcw
lods
cmp
push
push
dec
jbe
pop
js
dec
push
cwtl
xor
xor
and
push
movsb
jg
and
cs
jg
xor
mov
adc
xor
cmp
xor
cli
aas
fs
mov
dec
pop
or
pusha
adc
dec
imul
es
dec
push
inc
cs
dec
bound
jmp
xchg
cmp
inc
dec
cmp
pop
mov
int
pusha
inc
push
insb
inc
xchg
into
and
pop
mov
inc
xor
mov
dec
or
mov
push
cmp
dec
cltd
rorl
mov
loop
and
push
xor
mov
push
push
and
mov
cmp
cwtl
dec
loope
fadds
sbb
and
jbe
movsb
pop
inc
xor
pop
push
xor
xor
push
repnz
fs
pop
sub
pop
and
push
push
mov
inc
or
push
dec
dec
shrb
and
push
mov
inc
pusha
push
sub
and
outsb
push
loope
fcomps
sub
push
inc
pushf
push
dec
cmp
pusha
push
inc
cmp
pop
out
and
xchg
iret
ja
dec
push
mov
mov
push
das
cmp
dec
fs
lahf
cmpl
test
adcl
movsl
pop
xchg
mov
ds
out
sub
xchg
into
movsb
cmp
sub
push
xor
dec
dec
cmp
stc
loope
shll
cs
adc
cmpsl
inc
adc
adc
push
repnz
push
out
cmp
and
mov
out
pusha
cmp
push
mov
cld
inc
pusha
mov
jge
cmp
push
jge
pop
mov
xor
lahf
popf
sub
cmp
jbe
in
fs
adcl
cmp
jbe
xchg
xchg
xchg
sub
das
cmp
xchg
xchg
xchg
xchg
fcoms
dec
out
popf
movw
inc
loope
or
mov
sub
sbb
jl
aam
and
dec
icebp
pusha
pusha
in
xchg
add
addr16
push
mov
sbb
lahf
sbb
jecxz
mov
push
push
dec
int
popa
cmp
mov
fcoms
push
cmp
shrb
fs
cmp
push
pop
es
xchg
sub
pop
aas
pop
cltd
pop
cmp
mov
push
mov
cs
xchg
push
es
cmp
cwtl
inc
loope
aam
pop
mov
loope
mov
test
inc
jo
mov
adc
push
data16
dec
js
dec
js
or
data16
rcll
push
xor
lea
arpl
xchg
ret
data16
ret
push
sub
adc
data16
xor
shlw
lods
xor
adc
push
or
addr16
inc
sub
push
mov
ds
aam
pop
mov
cmp
cs
in
popa
ljmp
xchg
xchg
add
dec
lret
pop
sbb
cmp
into
and
ret
fs
pop
and
arpl
sbb
jecxz
cmp
mov
loop
pop
pop
roll
cwtl
ss
rclb
push
jns
data16
inc
hlt
rolb
xchg
push
cld
cli
push
fs
fs
push
pushf
pop
sub
mov
push
push
push
sub
pusha
push
xor
adc
inc
xor
adc
dec
shll
bound
pop
mov
pop
and
aad
pop
cmp
mov
dec
and
rcrb
ljmp
mov
mov
cmp
or
mov
cmp
pop
xor
loop
xchg
pop
cmp
mov
fcomps
inc
sbb
gs
gs
jp
adc
dec
lahf
push
bound
icebp
dec
mov
inc
bound
in
shlb
sub
dec
or
xor
sbb
pop
cmp
pop
push
xlat
sub
cmp
xchg
inc
pusha
adc
mov
sbb
jecxz
mov
pusha
xchg
leave
adc
mov
mov
mov
mov
mov
mov
roll
cmp
pop
pop
xor
push
pop
xor
inc
pop
xor
pop
cmp
xor
sbb
loope
sbb
mov
push
push
pop
mov
adc
add
pop
xchg
xchg
ljmp
cltd
es
xor
ds
loop
xor
inc
sub
and
cmpsb
je
or
sub
push
dec
add
mov
push
js
dec
mov
push
sub
addr16
sub
push
cmp
push
sbb
arpl
mov
xor
inc
dec
or
adc
adc
pop
and
mov
pop
jmp
xor
test
loope
or
pushf
pop
pop
cmp
pop
and
xor
mov
cmp
xlat
pop
pop
adc
push
push
ss
dec
sub
xor
or
cs
sarb
cmpb
push
cmp
adc
mov
popa
mov
nop
cmp
mov
pop
cmp
push
dec
cmp
push
inc
cmp
push
cmp
dec
pop
test
push
and
lds
push
sub
cmp
adc
pusha
cmp
mov
xor
xor
pushw
cmp
mov
pop
les
pop
stc
push
pop
pusha
pop
pop
icebp
push
pop
dec
dec
xchg
adc
pop
inc
adc
xor
lret
push
aam
dec
lods
inc
cld
xor
xchg
dec
lahf
sub
adc
arpl
xorb
pusha
mov
mov
mov
mov
inc
cmp
jmp
push
and
push
sub
mov
insl
pusha
xor
and
push
push
mov
inc
xor
aas
xor
and
xor
mov
xor
xor
sub
dec
in
sub
pusha
mov
pop
test
cs
xlat
ret
inc
jb
pop
dec
dec
sbb
inc
pop
imulb
push
dec
mov
pop
mov
sub
mov
jecxz
cmp
push
mov
mov
pop
cmp
popf
sub
lcall
js
sub
into
cmp
addb
pusha
aas
xor
mov
dec
cmp
cmovs
mov
arpl
xor
cltd
pop
xor
mov
pop
jmp
push
addr16
push
pop
pop
lds
sbb
das
pop
cwtl
mov
push
mov
lahf
inc
dec
adc
arpl
sbb
sub
pop
popa
inc
sub
dec
mov
pusha
add
push
adc
mov
mov
into
int3
sub
dec
fildl
mov
sub
xor
or
shrl
jae
push
into
push
dec
sahf
mov
push
js
dec
mov
push
push
aam
aam
in
cmpsl
push
cmp
inc
lcall
push
xor
xor
push
data16
mov
js
dec
mov
push
in
call
adc
sbb
cmpsb
lods
cmp
inc
push
fidivrs
int
mov
lea
inc
xchg
pusha
mov
cwtl
test
sub
xor
in
jge
popa
or
xchg
mov
xor
add
mov
xchg
sub
inc
mov
sub
mov
sub
aam
test
test
add
sub
imul
aam
jg
js
dec
mov
scas
cmp
fcmovnu
cmp
sbb
push
xor
nop
sbb
pop
xchg
test
pop
push
cmp
sbb
cmp
mov
sub
push
mov
orl
int3
inc
sub
inc
insl
mov
cld
jp
test
arpl
sub
sub
in
mov
imul
sub
icebp
pop
cmp
test
sbb
out
cwtl
bound
es
repnz
fsubs
push
xchg
mov
xchg
sub
fldl
mov
lret
sarl
leave
into
les
push
pop
jae
int3
popa
mov
cs
jne
xor
es
adc
or
sub
fildll
dec
push
mov
in
popa
dec
pop
push
push
fsub
fistpl
bound
lods
mov
mov
mov
aaa
push
mov
leave
or
in
popa
aam
pop
push
pop
loope
pop
pusha
fs
lods
enter
mov
cmp
mov
les
inc
in
popa
dec
pop
push
push
aam
push
pop
pop
pop
or
imul
jmp
sub
xor
popa
inc
pop
les
loope
pop
iret
aam
pop
in
popa
arpl
dec
lods
inc
es
ss
cmp
inc
pop
leave
dec
or
cwtl
dec
stos
inc
hlt
imulb
xor
mov
aas
pop
ret
push
dec
loope
pop
push
push
or
int3
dec
test
sub
scas
xchg
sub
ret
loope
pop
push
push
or
in
popa
pop
pop
fs
push
mov
aaa
cmp
cmp
pop
dec
push
int3
loope
in
dec
hlt
pop
mov
sub
cs
popa
cmp
push
aas
loope
pop
leave
dec
or
push
popa
pop
pop
pop
push
loope
fsubrl
sub
mov
mov
pop
inc
push
dec
loope
pop
push
aad
pop
in
popa
bound
push
jmp
mov
cmp
push
inc
loope
out
push
push
aas
fdivrs
sub
loope
sbb
mov
sub
loope
pop
int
shll
pop
pop
push
pop
loope
pop
out
pop
inc
or
movsl
push
push
sub
fcompl
push
gs
sarb
shrl
fsubs
mov
mov
mov
or
in
popa
dec
pop
into
push
push
loope
pop
pop
inc
pusha
jns
not
mov
add
sub
insl
dec
loopne
push
sub
lods
push
inc
dec
sub
or
inc
popa
pop
mov
pop
xor
push
popa
popa
pop
pop
pop
push
push
loope
pop
push
dec
or
in
popa
mov
loope
pop
scas
sub
data16
pop
or
or
in
popa
inc
pop
inc
push
lret
pop
push
push
or
gs
dec
imul
loope
pop
les
enter
rcrb
push
pop
loope
pop
out
lods
mov
xor
ss
mov
loope
pop
dec
int
push
in
popa
pop
flds
fsub
popa
pop
fs
pop
leave
scas
or
pop
rolb
loope
pop
dec
dec
or
es
jmp
aam
push
loope
pop
lret
inc
in
popa
cmp
cmp
mov
lods
call
pop
or
shrl
dec
or
in
popa
inc
pop
mov
pop
xor
out
hlt
adc
fsubp
pop
loopne
and
rorb
dec
in
loopne
sub
mov
popa
stos
pop
out
push
push
pop
push
into
or
cmp
loope
pop
pop
loope
or
stos
rolb
pop
xor
or
pop
inc
push
lret
pop
rclb
pop
in
popa
loope
mov
and
adc
inc
fmull
adc
pop
sarl
das
push
jmp
fiadds
pop
loope
pop
inc
dec
or
inc
bound
aaa
xor
pop
lods
xor
shll
sub
ljmp
pop
lea
dec
loope
pop
in
or
pop
movsb
push
es
sub
aad
sbb
push
sub
push
inc
fistl
sub
mov
call
sbb
mov
xor
sub
push
cmp
pop
xchg
add
jnp
mov
sub
and
loop
or
fwait
mov
jecxz
inc
loope
test
imulb
mov
sub
in
inc
addr16
dec
das
push
sub
flds
and
iret
out
push
jmp
mov
ds
pop
cmpsb
push
mov
mov
or
data16
sub
insb
inc
jnp
xor
jns
dec
test
xchg
fdivr
sub
mov
push
ds
repz
sbb
test
and
cmc
cs
xor
push
gs
mov
pop
jl
cmpsl
lea
int
popa
fdivl
test
inc
fistps
test
pushf
cmp
mov
int
xchg
xorb
fisttps
sub
xchg
dec
bound
push
sub
or
out
arpl
gs
xor
sub
pop
pop
dec
sbb
pop
mov
ds
add
push
sub
fildll
inc
mov
sub
dec
imul
test
sub
push
scas
lcall
xchg
cmc
ljmp
push
dec
bound
sbb
test
test
fistpll
add
sub
leave
dec
call
jns
and
cmp
sbb
enter
jmp
imul
dec
lret
lods
loope
in
jo
dec
fcoms
add
outsb
jmp
iret
rcrl
xchg
dec
bound
mov
jae
fisttpl
dec
js
call
sub
addr16
pop
iret
mov
shrb
sbb
in
stos
mov
inc
inc
aas
jmp
sbb
pop
and
adc
sub
sub
mov
cmpsb
jge
mov
dec
std
out
ljmp
outsl
pusha
mov
jl
mov
lcall
sbb
lock
adc
shl
imulw
push
sub
add
sahf
push
inc
push
jle
add
scas
sub
lods
nop
aad
xchg
inc
out
or
sub
jno
out
adc
mov
push
test
dec
pop
std
sahf
inc
mov
and
fucomi
push
pop
ds
test
jmp
outsb
jge
push
sub
test
addr16
sub
mov
cmp
test
or
lods
icebp
mov
sbb
mov
cmp
xor
add
mov
push
scas
je
lahf
test
jb
out
sub
lds
cltd
pop
shl
pop
dec
cld
pop
cmp
repz
scas
mov
sub
jb
dec
in
sub
sub
push
shrb
in
mov
ss
imul
mov
sub
cltd
cld
jnp
ja
adc
ret
dec
mov
jno
sub
xor
aaa
sub
loope
push
daa
rcr
sub
xchg
or
push
in
push
aaa
cmp
push
pop
sahf
sub
cmp
aaa
insl
imul
mov
imul
fmuls
movsb
mov
test
cli
cli
cmp
pop
rolb
adc
out
int
dec
mov
or
dec
lods
dec
int3
mov
pop
dec
jge
mov
cmp
pop
inc
cmp
sub
jo
sbbb
iret
enter
repz
cmp
fisttpll
sbb
jnp
pop
adc
clc
adc
shrl
jle
push
in
imul
lahf
aam
dec
sub
pushf
or
sub
std
xchg
sub
add
push
sub
clc
and
mov
sub
mov
xchg
ss
jl
or
xchg
ja
fisubl
dec
and
xchg
mov
lcall
push
mov
jns
sub
sub
mov
cs
sub
xchg
iret
bound
sub
inc
and
fisubrs
test
dec
pop
shr
mov
pop
notl
fs
xor
aas
adc
aaa
xchg
cli
fsts
cmp
mov
movb
sbb
mov
or
xor
movsl
jle
movsb
pop
or
cmp
lret
out
subl
lahf
mov
test
rcll
push
call
xlat
pop
sub
jg
ljmp
add
nop
sub
and
and
mov
hlt
jle
mov
sub
movsl
ljmp
clc
repz
bound
mov
jno
test
and
rorb
das
repz
repnz
mov
sbb
test
pop
adc
sub
cs
fwait
test
mov
and
imul
ljmp
jns
xor
mov
inc
jecxz
shlb
xchg
mov
stc
dec
loope
cmp
push
mov
inc
into
pop
add
sub
push
mov
cld
in
nop
pop
loop
sub
dec
bound
push
arpl
pusha
cmp
xchg
push
mov
jge
mov
push
int3
and
or
inc
push
bnd
mov
jno
test
inc
imul
add
test
cmp
mov
push
fucomp
adc
xchg
jne
pop
dec
pop
test
ds
add
mov
push
mov
xchg
iret
push
popa
les
pusha
cmpsl
jns
sub
loop
xchg
arpl
inc
mov
out
and
ljmp
xor
jg
cmp
jbe
sub
adc
xchg
inc
test
into
outsl
notb
xor
test
push
pcmpgtw
rolb
icebp
xchg
test
cmpsb
lret
jno
std
int3
test
es
test
mul
sub
ret
adc
push
mov
test
or
cmp
push
fcoms
cli
sub
mov
lea
hlt
mov
iret
sub
push
decb
push
sub
push
xchg
enter
cmpsb
out
iret
dec
xchg
dec
sub
test
or
sub
mov
ror
sub
lcall
mov
fucomp
pop
sti
fistps
jbe
adc
gs
test
add
jecxz
repz
addr16
sbb
sub
addr16
adcl
xchg
fxch
cltd
ljmp
pop
push
sbb
out
cmp
fldt
jno
loopne
outsl
pop
popa
xor
sub
lahf
push
dec
data16
cmp
pop
pop
hlt
and
inc
stc
cmpsl
sub
or
testl
sarb
fists
push
pop
mov
adc
mov
insl
add
mov
int3
mov
fisubrl
notb
xchg
popf
fistpl
sbb
sub
and
adc
dec
lock
mull
test
imul
add
clc
sub
je
mov
icebp
mov
push
ljmp
cwtl
and
xlat
cmpsl
clc
ljmp
push
dec
pop
mov
jb
pop
lret
dec
arpl
cmpsb
addl
fsubrs
repnz
sub
xchg
fwait
imul
mov
pop
icebp
notb
stos
push
xor
sub
xor
inc
js
sub
and
pushf
push
dec
aas
pop
fimull
sub
mov
sahf
mov
pusha
test
sub
pop
sub
sub
out
push
xchg
inc
sub
jbe
or
add
ja
inc
sub
mov
jno
mov
xor
popa
sbb
je
push
loop
xchg
push
aad
xor
leave
negl
sub
lock
dec
test
test
test
xchg
insl
sub
push
inc
scas
int
inc
or
fmuls
ljmp
add
push
out
sub
lods
sub
adc
lock
jecxz
bound
outsl
jb
sub
insl
pop
shrl
xlat
in
fs
enter
and
aad
sbb
jnp
testl
pop
popa
mov
sub
inc
dec
cld
fcmovne
inc
in
dec
sub
mov
pop
andnps
les
fisttps
cmp
adc
mov
lret
sub
pop
out
cli
insl
and
jmp
fbstp
dec
scas
addr16
or
dec
loope
sbb
adc
cmp
mov
mov
add
test
mov
addl
out
leave
inc
cmp
cmpsb
add
dec
nop
insl
es
dec
cmp
push
cld
mov
out
mov
cmc
sub
mov
cmpsb
mov
lea
inc
pop
negl
lret
sbb
add
jmp
scas
iret
pusha
dec
push
sub
popa
mov
dec
pop
pop
push
test
sub
repnz
sarb
or
loope
sub
inc
dec
mov
pop
sub
push
dec
adc
imulb
imul
call
ljmp
jno
bound
in
les
adc
sbb
sub
and
pop
push
xor
dec
xchg
cwtl
jb
push
and
jbe
fucomi
shlb
mov
mov
dec
cmp
ljmpw
ljmp
test
pop
dec
mov
and
jge
mov
jp
into
mov
and
mov
sahf
pop
dec
icebp
xor
aam
xlat
pop
sub
lea
cs
jmp
cmpl
scas
mov
push
vcvtss2sd
adc
sub
bound
roll
and
push
pushf
inc
out
mov
jo
stc
sbb
jb
pop
sub
loop
daa
leave
add
xor
lods
cli
sub
xor
jmp
xchg
mov
int
filds
lds
mov
mov
mov
push
sub
popf
aad
push
inc
outsl
pop
or
scas
sbb
das
sub
adc
fdivl
ljmp
ret
insl
sub
imul
mov
dec
add
jl
lcall
mov
cli
fnstcw
pop
or
jmp
sub
xlat
enter
test
xor
test
jl
inc
sub
cmpsl
jmp
xor
lcall
xchg
cmpsb
mov
stos
dec
sub
cmp
out
clc
rorl
push
sub
loopne
or
jg
out
dec
sbb
sub
in
cmp
jmp
rorl
loope
and
sarl
cmp
mov
pop
xchg
dec
loopne
lea
add
sarb
push
fdivr
fs
hlt
addr16
xchg
xor
jmp
test
xor
sub
sub
dec
mov
and
sub
loopne
sti
out
jp
out
sub
push
cmp
test
call
ds
rclb
gs
push
outsb
cmpsb
imul
sub
scas
arpl
sbb
lret
sahf
cmp
lods
push
clc
test
push
pop
fiadds
mov
test
push
inc
jne
dec
cltd
cmp
insl
outsl
imul
sub
sub
aad
imull
repnz
aas
dec
loop
mov
nop
xor
push
xchg
xchg
sahf
ja
dec
popf
mov
sub
push
cmpsb
dec
push
push
mov
sarl
andb
ljmp
sti
cmp
ljmp
push
add
push
daa
es
sub
out
and
jmp
gs
adc
xchg
xlat
push
dec
pop
stos
and
push
lea
das
push
gs
mov
cwtl
push
aas
push
jbe
in
and
pop
subl
xor
mov
cmp
xor
sbb
or
into
inc
jecxz
push
test
and
fisttpll
jno
ds
dec
push
ret
lea
fs
pop
adc
cmc
dec
clc
sub
fwait
push
push
sub
sbb
sub
xchg
cmpsl
pop
mov
insl
adc
dec
jne
mov
aad
lds
cmp
ljmp
pop
pop
pop
sub
cmp
das
cmp
popf
mov
dec
idivb
mov
sub
cmp
daa
push
test
jge
ss
xor
sbb
push
inc
pop
movsb
test
lods
iret
imul
mov
inc
rolb
and
sub
rcr
dec
push
push
pusha
inc
cltd
and
sub
mov
pop
mov
subl
mov
xor
jmp
cmp
testb
xor
push
gs
pop
sub
push
jo
dec
dec
jae
aaa
sub
stos
decb
sub
push
sbb
add
mov
fidivl
test
mov
fmull
sub
xor
xchg
lock
pusha
dec
adc
or
dec
out
bound
les
pop
mov
shll
lods
mov
mov
in
or
ret
cwtl
je
pop
inc
aam
es
pop
push
test
ljmp
and
adc
sub
je
mov
test
push
mov
dec
sub
push
push
mov
pop
aaa
sub
sbb
hlt
test
cmc
mov
mov
sahf
iret
mov
jmp
lcall
or
add
ret
inc
sbb
inc
sub
or
pop
xlat
and
jecxz
pop
mov
pop
sbb
mov
dec
pushf
addr16
mov
repnz
mov
test
or
or
mov
sub
adc
jne
adc
sub
into
push
mov
loopne
mov
inc
jns
xor
imul
mov
rcrb
jns
sbb
jbe
mov
add
lret
call
add
jbe
xlat
xor
daa
push
ljmp
pop
sub
loope
ljmp
flds
mov
pop
ds
pop
mov
sub
jmp
aad
add
test
mov
xor
imul
insb
shl
sti
and
pop
sub
sub
stos
gs
repnz
sub
push
pop
imul
dec
xchg
inc
pop
lods
jl
ljmp
sbbl
rcrb
popa
and
push
shrl
xorb
push
jp
sub
dec
mov
lock
in
adc
and
add
arpl
lcall
xor
js
inc
test
cli
sub
mov
pop
inc
adc
cmpsl
push
xor
sub
inc
test
imul
jne
sbb
hlt
jl
sub
filds
inc
dec
fimuls
dec
and
sub
cmp
add
cmpsb
into
lahf
pop
inc
popa
and
sbb
sbb
cltd
and
test
popf
scas
lret
pop
mov
out
xchg
fs
mov
sub
and
mov
sub
nop
ds
mov
mov
setge
sub
test
call
jecxz
aaa
sub
add
dec
inc
es
mov
orb
mov
in
call
pop
push
sub
and
mov
jne
fucomi
mov
fwait
jnp
mov
test
inc
push
inc
lcall
mov
xlat
mov
inc
jae
adc
sbb
ja
sub
fstpt
imul
imul
inc
mov
or
cwtl
test
mov
cmp
pop
dec
shll
popa
rcrb
es
xchg
nop
inc
mov
inc
xor
mov
test
xchg
enter
fidivrs
fwait
sub
into
out
lret
sub
jns
cltd
dec
cmp
insl
add
inc
jne
psllq
or
pop
push
add
and
cmp
add
sub
mov
pop
daa
sub
cmp
xchg
int3
jo
cmp
mov
pop
sub
notb
iret
cmpsb
jnp
and
ljmp
push
pop
pop
fisubrl
mov
xchg
sub
addr16
out
pushf
shlb
or
sub
in
xor
sub
rcll
sbb
test
lcall
inc
fwait
add
dec
push
in
sbb
and
stos
cmp
sub
popa
cmc
push
int3
roll
sub
subl
xchg
jmp
pop
bound
fs
filds
push
cmpsl
rcrb
in
mov
dec
inc
sub
out
xchg
xor
push
ret
test
jno
inc
fisubs
in
pop
fisubs
dec
sub
repnz
sti
leave
jmp
aad
jp
not
mov
lahf
rcrb
sahf
dec
gs
fnstcw
arpl
adc
xchg
fwait
addr16
in
adc
xchg
out
cmp
sub
pop
sub
popa
cwtl
jg
dec
mov
inc
push
xchg
rorl
xchg
pop
movsl
sub
cld
test
mov
dec
push
addr16
out
lea
sub
dec
xor
movsl
cmp
out
mov
dec
or
dec
shlb
aad
pop
pop
push
mov
test
xor
ljmp
in
aaa
pop
jb
aaa
push
int
push
cmp
cmp
xor
adc
hlt
jl
mov
xchg
stos
xor
insl
push
push
popa
sub
sbb
dec
pop
adc
testl
xor
mov
roll
lea
flds
dec
xor
xor
mov
cmpsb
mov
add
jne
leave
scas
xchg
test
sub
sub
movsl
push
cld
cmp
popa
sub
out
sub
bound
sub
xor
cmc
jle
cmpsl
in
scas
jno
add
inc
sub
lret
pop
push
push
xchg
movsb
or
es
cmc
outsb
mov
push
mov
sti
adc
xor
mov
cli
mov
jo
sub
dec
shrl
mov
cmc
movl
mov
out
push
jo
fs
pop
repnz
sub
push
testb
addr16
push
popa
cmp
inc
sub
mov
int
jmp
negb
call
add
leave
ret
jp
jb
fldt
outsl
fildll
enter
rcl
scas
cmp
xor
repnz
push
xor
popl
pop
test
xchg
cmpsb
lret
in
mov
scas
into
sub
push
sub
roll
lds
sub
out
ret
dec
fsubl
push
inc
jb
cmpsl
lahf
bnd
sub
vmwrite
leave
movsb
xchg
insb
xor
pop
dec
add
out
lea
shll
mov
aam
and
movsl
adc
sub
out
mov
sub
jmp
out
pop
repnz
or
inc
xor
sbb
sub
xchg
aad
pop
xor
lcall
int
mov
mov
and
sbb
insl
xor
inc
ja
rcll
or
cmp
mov
imul
and
sub
jbe
adc
iret
mov
inc
mov
xchg
inc
jge
dec
jg
dec
push
cmp
bound
pop
stc
call
xchg
cmpsl
lock
push
dec
js
fs
mov
cmpsb
sub
xor
pop
into
adc
dec
sub
fucomip
test
sti
jns
popf
xor
sub
loope
xchg
mov
cwtl
or
fs
mov
mov
ljmp
notb
lcall
outsb
push
adc
jle
adc
dec
fdivr
lods
fwait
test
sbb
mov
sarb
lcall
insb
pop
psubsw
mov
xchg
out
dec
push
xor
dec
xchg
inc
xchg
sub
sbb
out
jl
sub
sub
mov
ud1
dec
test
inc
test
jb
dec
inc
mov
lcall
mov
xor
dec
sub
in
notl
dec
sub
sbbb
and
clc
inc
jo
scas
sub
hlt
dec
pop
lret
mov
mov
sbb
arpl
cmpsl
jne
push
ss
dec
arpl
gs
mov
add
mov
loope
mov
icebp
sub
shrl
jmp
rorl
cmpsl
mov
sbb
stc
loop
imul
sub
aaa
arpl
test
mov
cmp
sub
mov
and
cmpl
add
push
in
pop
mov
nop
inc
test
js
push
std
dec
les
xor
push
xor
sub
mov
js
pop
xchg
or
push
bound
lods
gs
arpl
mov
cmpsl
dec
mov
or
jno
popf
adc
push
clc
shll
sub
jmp
ss
mov
ljmp
dec
shrl
enter
dec
mov
das
add
cltd
loop
dec
cld
mov
xor
pushf
imul
and
fisubl
addr16
mov
scas
pop
nop
jge
xchg
fsubrl
sub
sarb
data16
insl
shl
je
mov
push
mov
cmp
mov
test
shll
sub
shll
gs
sahf
inc
push
pop
adc
nop
and
push
pop
jge
jl
inc
imul
cld
into
push
cli
mov
dec
fidivrs
divl
enter
pop
into
push
sub
dec
xchg
push
lods
or
js
jne
mov
adc
inc
addr16
cs
insb
filds
stos
lods
add
mov
ss
dec
enter
and
std
fbld
push
fstpl
xchg
xor
fsubr
es
and
and
scas
loope
sub
inc
push
pop
fidivs
jmp
sub
mov
ds
js
pop
jp
ljmp
xor
sarl
sub
dec
popa
dec
jne
jbe
ret
cmp
js
ljmp
insb
pop
je
rclb
sub
dec
mov
or
cmpsb
xor
jno
jae
fmul
add
mov
adc
sarl
jb
iret
xor
inc
aad
stos
xor
push
xor
lcall
mov
mov
mov
int3
xchg
out
xchg
hlt
pop
jno
sub
jp
cmp
movsb
pop
inc
cmp
push
add
out
xor
lcall
inc
inc
out
lods
push
bound
sub
repnz
xor
jnp
inc
dec
pusha
sub
ss
je,pn
pop
push
pushf
or
inc
shlb
fldt
leave
mov
adc
push
adc
sub
scas
jb
mov
fmul
test
orl
test
and
jae
dec
call
adc
xchg
cmp
repnz
pop
pop
cmpb
lds
sub
xor
sbb
inc
cmp
repnz
pop
sbb
add
fisubrl
int3
mov
loopne
call
jo
mov
inc
sub
fwait
cmpsb
mov
cmp
sub
pop
test
test
add
dec
push
and
xchg
dec
cmp
mov
add
mov
push
jae
push
and
cs
cmpsb
in
mov
in
fucomp
leave
jno
ljmp
out
dec
stc
xchg
mov
out
jns
inc
mov
push
xchg
dec
mov
scas
sahf
sub
test
outsl
push
push
call
adc
dec
pop
jmp
and
adc
cmp
sub
dec
popa
inc
outsl
mov
scas
ds
adc
arpl
cmovo
jmp
std
test
or
popa
and
iret
pop
sbb
call
stos
jmp
imul
sub
lret
mov
push
adc
inc
sub
cmp
sbbl
and
cli
cmp
sahf
icebp
pop
lods
add
inc
gs
mov
fs
aas
out
dec
dec
jge
movsb
ss
in
lret
add
into
ss
pop
push
cmp
sub
inc
test
jmp
cmp
mov
add
pushf
mov
repz
out
sbb
dec
cmp
mov
sub
jnp
popa
mov
and
jb
pop
bound
pop
sub
xor
mov
loope
xor
ret
scas
and
fs
xorl
mov
out
cmpsl
pop
sahf
adc
mov
iret
dec
jne
jb
loop
xor
push
or
out
pop
push
jns
pop
dec
pop
rcr
and
aam
pop
dec
pop
xor
insl
dec
in
inc
mov
test
xor
jno
mov
insl
repz
ljmp
cmp
insb
icebp
into
orl
xor
pop
cmp
push
jecxz
push
call
out
fsubrl
sub
jb
and
push
pop
adc
sbb
mov
mov
scas
lods
mov
mov
pop
mov
les
push
out
adc
lret
cmpsl
and
ljmp
mov
xor
bound
mov
xchg
add
sub
sti
fimull
ret
pusha
xor
xchg
repz
push
push
xchg
mov
push
cmpsl
push
lret
jecxz
or
sub
sub
popa
add
mov
test
mov
pop
in
dec
add
pushf
and
push
dec
orl
push
lds
jbe
sbb
scas
dec
sub
cmpsl
incl
and
cmpsb
inc
dec
lock
mov
lret
ss
fcmovnu
mov
xchg
dec
push
push
arpl
xchg
fwait
jns
call
mov
lar
xchg
or
fimull
cld
das
xchg
sub
loopne
cwtl
jle
mov
pop
fisubrs
add
inc
sub
sbb
fs
imull
imul
push
insb
jbe
outsl
sub
and
sbb
mov
sub
mov
inc
push
stc
insl
pop
lods
fs
sub
mov
ljmp
aad
xchg
in
sub
dec
jle
stos
test
cmpsb
lcall
or
iret
sub
int3
sub
jbe
sub
sub
mov
pusha
xchg
dec
adcl
into
pop
jae
adcl
sub
out
sub
cmc
hlt
add
adc
mov
mov
xchg
dec
movb
je
sub
xchg
ret
inc
lea
jmp
loop
jecxz
dec
aaa
repz
add
in
mov
mov
lods
dec
sub
dec
fildll
push
add
dec
xor
shl
xchg
add
sub
test
push
fstps
pop
cmpl
dec
mov
pop
pusha
pop
repz
jmp
adc
lds
ja
cltd
xlat
pop
inc
pusha
stc
in
repz
fstpl
and
cli
iret
xchg
rolb
adcl
outsb
sarb
insb
scas
inc
adc
sbb
inc
jo
mov
xchg
dec
sarb
pusha
xchg
xor
sbb
xchg
mov
or
outsl
in
xchg
sub
daa
loop
pop
pop
leave
adc
ja
lods
mov
clc
ret
daa
int3
sub
mov
cmpsl
out
jns
aas
and
xchg
int3
xor
jle
inc
sbb
jne
jg
stos
pop
xchg
and
dec
bound
mov
xor
test
loop
mov
mov
outsb
xor
mov
dec
aaa
sbbb
dec
pop
dec
jg
push
xor
mov
sbb
pop
in
icebp
jge
int
rolb
jl
lret
inc
mov
sbb
push
test
nop
dec
aam
adc
push
cltd
bound
cmc
ret
sub
jbe
push
xchg
clc
stos
push
into
and
daa
adc
cld
pop
imul
dec
dec
aaa
into
out
cmp
andl
push
jmp
mov
push
and
scas
js
and
or
adc
pop
test
fwait
lods
nop
gs
push
mov
aas
mov
dec
lret
xor
cld
bound
xor
xchg
adc
adc
add
movsl
and
outsl
mov
mov
outsb
cmp
xchg
and
mov
or
in
jmp
adc
inc
mov
jecxz
dec
icebp
mov
ljmp
inc
mov
cmpl
jne
clc
mov
cmc
pushf
add
test
stc
pushf
movzwl
cmc
mov
push
add
stc
cmc
mov
pushf
test
test
pushf
lea
je
push
pusha
add
call
add
dec
outsl
popa
fs
imul
add
out
dec
dec
aaa
out
jnp
mov
daa
add
addb
pushf
jl
add
outsl
rolb
out
icebp
jge
std
xor
pop
ror
outsl
jae
imul
push
sub
fcmovu
lret
aam
inc
sub
push
inc
jnp
in
cmc
pop
dec
ljmp
sar
add
negl
mov
push
outsb
sub
xchg
popa
lret
dec
aas
sarl
movsl
iret
icebp
dec
cmp
aas
add
xchg
call
dec
aaa
scas
test
pop
sub
mov
dec
addb
xor
popf
pop
scas
aaa
add
mov
aas
or
clc
jbe
loop
mov
adc
aam
xorl
scas
cli
cmp
sahf
push
adc
cmpsl
jge
mov
pop
dec
mov
mov
fidivs
cmp
pop
out
mov
mov
ret
pop
decb
dec
dec
aaa
push
insb
or
cmp
hlt
dec
fs
lds
dec
fwait
ret
fs
mov
add
add
fnstsw
idivl
imulb
sbb
int
cltd
or
and
sbb
aas
jae,pt
bound
xor
addl
rorl
lods
loope
mov
ss
push
negl
fmuls
loop
push
or
mov
inc
scas
lock
hlt
dec
fdivrs
jo
xchg
out
in
call
cmp
lcall
sbb
fnstcw
faddl
jg
xor
adc
xchg
dec
movsl
jmp
mov
arpl
mov
dec
shrb
pop
call
movb
pushf
mov
movb
test
push
pusha
lea
je
bt
test
add
clc
cmp
pusha
pushf
pushf
call
not
call
aas
mov
or
dec
mov
test
les
fwait
sbb
sbb
cld
icebp
and
dec
aas
sbb
xor
mov
loopne
popa
jecxz
inc
adc
xor
mov
inc
outsl
lcall
dec
add
add
xor
and
xor
in
pop
xchg
fistl
std
jns
mov
shlb
or
cld
hlt
nop
add
popa
fstpt
inc
and
roll
mov
iret
mov
add
add
scas
and
aaa
mov
imul
cmp
enter
aas
add
popf
les
cs
mov
subl
fwait
es
outsb
ret
in
sub
adc
sbb
outsb
notb
dec
movsb
pushf
lods
imulb
or
inc
sbb
or
js
out
leave
xchg
insb
push
nop
pusha
iret
fists
lret
dec
and
mov
lret
xor
mov
loope
fs
jne
push
push
movb
cwtl
lea
jle
movzbw
push
setb
pusha
lea
call
mov
aaa
es
lret
push
xor
xchg
aas
jnp
jnp
pop
testl
xor
cwtl
fdivs
into
jecxz
fdivr
inc
aad
or
rcll
sbb
add
mov
sarb
fcmovnu
std
xor
imul
fistpll
cli
and
idiv
mov
in
lods
mov
pop
mov
gs
rorl
popa
mulb
in
test
jb
jno
dec
aaa
gs
es
cmp
lcall
rolb
in
xor
scas
je
sub
push
push
ret
decb
jae
cmp
xchg
pop
dec
jmp
push
stos
pop
and
dec
sub
sti
cli
shlb
pushl
mov
push
xorb
push
pusha
mov
push
or
cmpsb
adc
dec
aaa
movsl
int
aad
popf
stc
lea
shll
les
mov
xchg
rcll
rcl
xchg
mov
or
movsl
pop
cmp
xchg
xchg
mov
std
pop
adc
inc
push
dec
or
cmp
cmp
xchg
clc
inc
mov
inc
movsl
pushl
xchg
aad
or
inc
pushf
add
mov
lahf
pusha
call
dec
push
mov
dec
aaa
and
in
push
mov
lods
dec
mov
dec
xchg
and
dec
mov
xor
rclb
daa
mov
lahf
mov
sub
sbb
aam
adc
push
inc
enter
leave
or
mov
dec
pop
test
loopne
cmp
xor
add
adc
dec
insl
repz
int3
inc
mov
lods
shrb
pushl
dec
sub
xchg
mov
adc
sbb
mov
aaa
jbe
mov
sub
mov
stos
jl
repz
sbb
mov
int3
repnz
fisubs
sbb
add
jmp
or
repnz
sub
out
dec
shl
mov
sub
notl
cmp
sahf
jno
dec
add
insb
in
or
nop
cmp
loopne,pn
dec
cmpsb
or
xchg
pushf
mull
enter
lds
bt
cmp
push
pop
lahf
cwtl
lea
lea
mov
call
jmp
cmp
clc
push
mov
sub
jno
shr
add
neg
not
mov
clc
jmp
mov
push
inc
dec
aaa
bound
in
adcl
mov
xchg
scas
mov
add
cli
outsb
add
loop
pop
or
mov
sub
mov
push
mov
cs
fs
push
inc
test
jmp
xor
repnz
jae
push
jmp
jb
pushf
pop
movsb
pop
fisubl
ds
les
jnp
jmp
or
lret
add
xlat
add
movsl
daa
ja
pop
fdivs
fcompl
xchg
scas
jmp
es
add
fsubs
mov
mov
fs
pop
mov
push
push
outsl
mov
push
lret
mov
out
outsl
out
jns
iret
shr
pop
pop
push
xlat
ret
fists
into
mov
rcrb
mov
or
cmp
mov
enter
das
std
sub
pop
jg
in
ror
inc
cltd
test
mov
aad
mov
mov
jp
add
lret
pop
das
pop
mov
clc
clc
pop
rcrb
sti
lods
dec
mov
fldt
dec
adc
test
inc
js
je
jb
arpl
jae
jmp
aaa
cmpsb
fstps
add
rorl
in
sub
sarl
rcr
push
and
movsb
pusha
jb
lods
data16
push
add
xchg
sub
cmpsl
cmp
orl
lock
sub
clc
jp
dec
adc
dec
outsb
sub
pop
adc
std
dec
lea
in
cmp
rcrl
es
leave
xchg
mov
or
cmp
jo
js
mov
add
cmp
pop
das
cmp
push
cld
cmp
push
dec
mov
fwait
xor
push
jecxz
pop
out
dec
imul
and
fisttpll
clc
out
das
popa
mov
dec
jae
sbb
sbb
insl
and
push
ljmp
sbb
sbb
pop
loopne
nop
add
push
fldcw
pop
loope
popf
pop
mov
jne
nop
jo
xchg
jge
jns
xor
cwtl
jbe
dec
aaa
pusha
pop
int
cmc
push
test
popf
popa
aad
dec
pop
mov
pushf
jno
xchg
mov
push
add
fsub
xchg
mov
adc
xchg
hlt
fistpll
mov
clc
and
sub
idivl
outsb
in
in
lahf
insb
in
les
lret
xlat
fcoml
or
add
jl
push
pop
inc
inc
aad
shl
je
ffree
add
inc
jmp
stc
movw
bt
mov
rcr
mov
stc
pushf
stc
sub
push
jmp
push
cmp
aaa
fwait
lods
xor
nop
fs
adc
sbb
jl
mov
jae
sub
push
xchg
adc
adcl
imul
mov
lods
lods
adc
or
jne
jne
inc
rcrb
hlt
xchg
fsubl
in
and
dec
xchg
lods
sub
sbb
sub
cli
mov
and
mov
mov
ret
xlat
out
add
or
cli
aas
dec
aaa
lahf
adc
jae
repz
lcall
push
push
xchg
jns
aas
jp
and
mov
jne
test
jns
pop
mov
cvtdq2ps
mov
cltd
in
rorl
fwait
mov
sbb
xchg
sub
jno
mov
cltd
push
add
scas
adc
lods
mov
xchg
adcl
test
push
sub
es
out
push
mov
or
js
pop
into
mov
int
std
cld
dec
sbb
inc
dec
aaa
pushf
les
mov
cld
js
mov
jbe
sub
mov
frstor
pop
push
mov
inc
jmp
push
pop
stos
jmp
ret
pushf
and
mov
xchg
cmp
pop
mov
xor
or
push
mov
dec
fistpl
test
sub
and
xorb
pop
xor
rorb
pop
mov
subb
mov
inc
sub
adc
enter
jo
dec
mov
inc
movsl
mov
div
shrb
mov
mov
ror
lea
jle
pushf
pushf
xor
push
sub
call
pop
sub
pop
frstor
int
xor
jae
fiadds
adc
sub
jns
fmuls
xor
or
dec
mov
loope
outsl
push
mov
dec
pop
sbb
fs
sub
inc
xchg
lds
pusha
jle
into
insl
les
cmpsb
or
scas
add
int
sbb
fistps
push
iret
jp
jl
adc
iret
pusha
adc
movsb
mov
test
lock
dec
push
mov
jne
mov
push
fsts
cwtl
and
mov
sbb
adc
mov
cmp
bt
and
call
pushf
pushf
pushf
lea
je
bt
stc
push
sub
jb
sub
call
std
fldcw
xor
inc
jg
fwait
sub
mov
fcmovnu
jge
dec
imul
inc
int
mov
int
or
popa
test
xlat
and
lods
sub
push
push
rorb
orl
sub
movsb
mov
rorl
and
pushf
ret
sarl
dec
push
dec
mov
jbe
popa
jl
sub
fucomp
addb
rol
xor
xor
and
xchg
mov
xor
add
cmp
lods
pop
jb
mov
push
sub
inc
dec
push
jbe
sub
push
lods
mov
popf
dec
jle
mov
and
or
jnp
dec
aas
mov
shl
in
mov
cmc
sbb
out
jg
cmc
aad
xchg
xchg
sub
push
mov
lods
adcl
inc
pop
mov
adc
sub
push
subl
cmpsl
add
iret
and
cld
or
psubusw
cmc
xor
movsl
mov
sub
xor
fs
das
outsb
cs
xchg
sbb
loop
test
push
loop
sarb
out
enter
mov
ljmp
mov
sub
lock
and
in
outsl
cmpsb
inc
or
add
test
and
add
push
dec
xchg
out
int
xor
xchg
daa
xor
mov
xchg
xchg
cmpsb
aad
cmp
scas
cli
popl
xlat
cld
les
les
lret
mov
mov
inc
outsb
repnz
mov
test
jno
mov
mov
jno
mov
outsb
push
cmp
aaa
sbbl
mov
push
cmc
pop
fimull
cmpsl
call
jecxz
sarb
cmpsl
hlt
sub
mov
rorl
lret
in
outsb
jno
push
or
adc
daa
and
test
cli
gs
out
pop
push
sub
xchg
push
sub
shll
push
popa
outsb
mov
adc
mov
or
xchg
mov
popa
repz
push
mov
adc
sbb
movb
cmc
jmp
call
cmp
aaa
mov
dec
sbb
jle
enter
jnp
scas
jmp
mov
push
jb
repz
mov
scas
sub
inc
aas
inc
pop
fidivl
sbb
out
sbbb
and
mov
fldt
push
sbb
aaa
mov
sbb
adc
and
or
sub
sub
jle
pop
and
sar
pop
pop
mov
xor
mov
add
bt
mov
and
shl
sub
lea
push
lods
pushf
shr
sar
jmp
or
pop
cmp
mov
movsb
mov
sub
ret
mov
stc
push
movsl
cwtl
dec
repnz
imul
shr
mov
sub
adc
or
jno
jns
les
inc
arpl
inc
mov
jb
jle
cmpb
sub
xchg
mov
add
movsl
xchg
add
lret
lds
inc
pop
jns
push
repnz
inc
ljmp
test
push
jmp
popf
and
dec
aaa
mov
out
push
lahf
or
das
repz
inc
aam
cmp
push
arpl
lds
inc
outsb
mov
pop
fcomps
sahf
lea
inc
aad
xor
loop
fs
mov
xor
mov
inc
mov
enter
nop
inc
addr16
sub
orb
fisubrl
inc
das
lret
sub
xchg
mov
data16
inc
mov
out
jae
ja
sbb
ljmp
daa
mov
mov
jecxz
stos
aas
mov
cmp
lret
push
xor
jp
call
xchg
adc
rcl
jge
sbb
std
xor
icebp
mov
daa
outsb
push
lods
mov
cmp
hlt
ss
lods
dec
sbb
imul
frstor
sbb
dec
outsb
push
lea
test
cwtl
shlb
lods
aad
fdivrs
inc
push
addb
xor
ljmp
test
sub
pop
cvtpi2ps
aas
lock
mov
mov
add
xor
gs
xchg
gs
ss
mov
movsl
or
bound
clc
fstl
hlt
ds
lret
dec
aas
xor
lret
pop
stos
aaa
insb
fistl
add
and
xor
dec
shrb
pop
cmp
jno
xchg
push
xchg
lcall
adc
in
and
aaa
les
dec
pop
xlat
mov
jmp
imul
mov
inc
loop
jo
xor
adc
xor
mov
cmc
testb
ss
call
in
les
add
add
lds
je
loope
test
or
adc
pop
mov
adcb
jo
pop
mov
xor
sti
jp
sub
jmp
xchg
scas
mov
sbb
push
mov
mov
pop
fnstenv
adc
sub
mov
enter
lahf
mov
dec
repnz
jmp
jns
lds
sub
inc
lods
push
aam
mov
xor
repz
test
inc
ret
dec
int
hlt
pop
or
nop
or
mov
mov
inc
sub
imul
and
mov
or
xchg
inc
push
cmp
or
shl
inc
in
push
adc
or
aaa
jnp
fwait
push
mov
or
stos
mov
std
or
pusha
cli
pop
xlat
mov
btc
push
mov
push
push
or
out
cmp
sbb
stos
insb
aaa
scas
cld
sub
xor
iret
inc
pop
pop
and
pushf
pop
lock
fwait
in
mov
mov
repz
shll
push
ljmp
dec
aaa
daa
push
scas
or
loop
pop
push
lcall
addr16
mov
push
ror
faddl
push
or
sub
out
dec
loope
push
in
fistpl
dec
dec
js
inc
bound
and
cli
fsubp
or
lea
dec
mov
lret
shrb
icebp
jl
pop
cwtl
pop
fsubrp
xchg
aam
cld
inc
insb
hlt
inc
xchg
dec
shrb
jnp
pop
sub
jne
mov
ljmp
jne
add
inc
insb
outsl
bound
push
imul
aaa
dec
aaa
test
adc
mov
faddl
push
and
mov
popf
repz
insb
and
pop
xor
andb
add
rorl
pop
repnz
push
sahf
cmpsl
rcrl
pop
daa
push
test
push
xor
add
andb
pop
movsl
cmp
push
jmp
adc
in
outsb
cmp
mov
mov
out
test
mov
add
repnz
push
test
or
pusha
and
rorb
sub
mov
aaa
enter
inc
rcll
sbb
cmp
pop
and
xchg
fwait
sbb
outsl
sub
add
dec
outsl
stos
daa
mov
adc
in
ret
scas
insb
ficoml
mov
scas
mov
sahf
pop
out
cmpsl
pusha
sbb
es
insl
test
ffreep
rcll
fmul
repz
jnp
mov
and
jp
xchg
pop
cmpsl
mov
xchg
fsubl
hlt
inc
and
mov
dec
or
add
mov
push
push
out
push
sti
jmp
adc
lods
sarl
mov
aas
cmp
clc
sub
pop
aaa
dec
mov
ret
sti
popl
dec
inc
mov
xchg
or
xchg
pushf
jl
mov
dec
mov
ret
or
roll
xorb
movsb
cmpsb
cwtl
bound
jbe
cmp
mov
lahf
in
push
or
push
fcomps
loope
add
nop
xchg
pushf
or
adc
orb
mov
sbb
push
lods
test
imul
mov
sarl
mov
call
mov
xchg
into
adc
je
and
add
jne
dec
loop
fcoms
cli
jbe
data16
push
pop
stos
push
repnz
mov
es
and
pop
push
scas
por
mov
add
fs
mov
cli
xchg
jnp,pn
iret
xor
push
pop
sub
insl
int3
lret
jno
adc
sbb
rcr
cwtl
loopne
int3
pop
stc
mov
pop
mov
xor
test
mov
mov
lea
jmp
bsf
push
pushf
lea
push
rol
sub
shl
btr
not
aas
push
aaa
aaa
push
rcl
push
mov
stc
xor
or
aam
push
sbb
bsf
cwtl
pusha
mov
cmp
test
jmp
add
stc
xor
adc
jmp
imul
btr
das
mov
jne
mov
pop
bound
mov
push
adc
fldl
testb
clc
xor
and
dec
in
inc
or
and
cld
std
xor
cmpsb
cmc
push
or
push
bound
jb
cltd
xchg
mov
adc
sbb
orb
mov
popf
setns
fbstp
xor
push
or
cli
mov
stc
xor
mov
mov
push
push
jp
pop
js
ret
aam
cli
sbb
xor
rcll
rol
adc
sbb
movsl
or
sub
sub
sub
push
mov
jg
arpl
xchg
and
mov
orb
mov
popa
sti
sbb
stos
mov
cli
lods
faddl
fldz
call
lea
je
dec
test
sar
add
shl
bswap
rcr
mov
clc
test
add
cmc
cmp
stc
mov
sbb
adc
inc
shr
mov
call
aaa
cmp
dec
aaa
jg
out
mov
cmpb
jecxz
arpl
sub
scas
jbe
fcoms
add
xchg
or
test
sub
cmp
mov
into
iret
cmp
mov
and
jnp
and
mov
sub
sbb
js
or
insb
and
mov
xchg
pop
jecxz
mov
cmpsb
out
outsb
enter
call
rclb
shlb
jecxz
xchg
xchg
xor
inc
ja
out
movnti
jg
mov
cs
aas
xor
push
aaa
test
enter
inc
imul
sub
notb
push
jae
das
sub
int
fnstenv
inc
pusha
mov
fwait
sbb
icebp
insl
gs
dec
pop
sub
push
add
lock
push
jae
cmp
fmuls
into
dec
popf
in
gs
out
inc
lret
mov
xchg
push
push
xchg
xchg
adc
add
int
jo
or
sub
insl
mov
enter
clc
lods
jo
mov
mov
jns
adc
xor
ss
jmp
xor
repnz
lret
jae
mov
push
xor
sub
adc
sbb
inc
push
dec
sti
loopne
out
or
negl
stos
push
push
test
jnp
ja
inc
test
out
xlat
or
fs
add
inc
gs
outsl
fs
gs
imul
add
jb
pop
add
aaa
push
pop
stos
push
ljmp
jb
test
inc
mov
shll
fwait
mov
mov
ret
int3
cmp
and
int3
loopne
mov
adc
sahf
bound
push
pop
jg
test
test
test
lret
repz
jae
mov
pop
xchg
sbbl
popa
mov
loop
mov
sbb
jle
enter
adc
xchg
dec
aaa
popa
mov
lods
clc
push
clc
test
dec
pop
xchg
imull
insl
mov
andb
sbb
sub
sbb
mov
xlat
sub
lahf
mov
push
shll
in
mov
mov
push
cwtl
rclb
js
pop
popa
in
cmp
movsl
pop
xor
pop
lret
cmp
xorb
popa
jno
xor
notb
bound
aaa
pop
pop
sub
das
or
push
addb
movsl
jp
sbb
pop
addr16
adcb
in
xor
in
inc
pop
mov
pop
sbb
jns
dec
in
and
imul
sbb
sti
or
cmp
imul
jg
repz
outsb
sbb
cs
int3
pop
pop
out
das
call
cltd
andl
mov
pop
mov
xchg
xchg
cmp
std
std
mov
mov
push
ljmp
test
or
pop
loop
push
fadds
or
push
das
xchg
int3
rcrl
cmpl
ud0
test
call
jmp
pushf
pushl
popl
clc
bt
mov
cmp
jmp
xchg
hlt
das
dec
aaa
sbb
mov
in
js
fdivrs
lret
push
or
clc
or
mov
imul
mov
xor
xchg
das
imul
cmp
out
sbb
lock
les
cmpsl
pop
sub
out
addr16
lret
mov
xor
into
outsb
sub
jnp
push
xor
mov
stc
jne
mov
pushf
dec
lcall
xchg
pop
mov
fsubr
aaa
add
inc
lods
or
adc
fdivl
insb
mov
jg
adc
popf
fadds
sub
pop
mov
call
add
adc
rol
push
aam
inc
push
dec
ljmp
adc
mov
add
aas
mov
repz
testb
into
addl
push
pop
add
and
add
xor
out
add
xor
fstpt
add
jmp
mov
stos
and
cmpsl
inc
lret
dec
scas
or
push
insb
mov
orb
test
sub
adc
in
test
test
push
cld
mov
pop
xchg
or
xchg
fcomps
mov
roll
loopne
dec
mov
sub
out
lea
sar
adc
add
aaa
clc
mov
in
inc
sub
mov
push
xor
lods
push
mov
jno
dec
pop
das
leave
jo
inc
maskmovq
divl
push
xchg
xor
cwtl
cmp
mov
dec
negl
nop
jmp
popa
das
xchg
cs
aaa
inc
test
cmp
icebp
xor
inc
aad
fimull
js
popf
std
pop
cwtl
sbb
ror
jecxz
sbb
test
pop
scas
loopne
pop
dec
cmpsl
push
xlat
scas
sub
les
outsb
outsb
mov
sbb
dec
push
or
dec
push
fisubrs
cmc
add
and
jg
pop
inc
jg
imul
xchg
add
iret
push
sbb
addr16
push
inc
daa
push
inc
iret
gs
jmp
decl
push
roll
call
mov
jg
dec
aaa
push
cmpsb
xor
inc
movb
push
push
imul
lock
gs
prefetcht1
loopne
mov
mov
das
loop
mov
adc
mov
and
bound
dec
mov
mov
lret
cmp
imul
ljmp
fiaddl
lea
push
push
push
adc
cmpl
push
push
jle
cmp
pop
ss
sub
push
call
cmp
mov
lret
pop
jne
dec
aaa
pusha
cwtl
hlt
js
push
inc
mov
enter
ja
mov
add
mov
push
lcall
push
leave
sahf
inc
out
jle
sbb
dec
sub
pop
fdivl
imul
test
jecxz
xor
lods
stos
mov
sub
inc
or
ret
sub
int3
aad
or
push
jmp
aad
outsl
pop
inc
fs
sub
mov
in
push
lods
movsl
xchg
and
lock
movsl
sbb
imul
adc
mov
push
pop
testb
int
jp
push
push
jns
or
jecxz
ljmp
xchg
cmpb
cltd
inc
mov
fcoms
add
fcompl
xlat
mov
jl
or
jmp
mov
addr16
push
and
vunpckhps
shrb
push
sub
in
xor
xor
lahf
divl
sub
push
sbb
and
adc
divl
sbb
push
mov
adc
fistl
push
xchg
rcll
dec
mov
or
xchg
notb
xor
icebp
cmp
sub
xor
mov
dec
bt
inc
shr
mov
call
mov
ljmp
test
popf
popa
cmc
jno
mov
shr
xchg
sub
mov
mov
pop
jnp
mov
faddl
jecxz
or
dec
movsl
ja
lahf
shl
inc
jmp
roll
and
inc
push
pop
mov
in
pop
or
fsubs
adc
jo
ljmp
xchg
and
shll
dec
or
adc
addr16
pop
imul
iret
inc
popl
xlat
mov
int
insb
jg
aaa
subb
aam
xor
rclb
mov
mov
outsb
dec
lcall
xchg
and
xor
push
aaa
mov
jmp
mov
pop
mov
call
dec
dec
mov
icebp
adc
jo
mov
scas
sub
outsb
xor
test
clc
aas
idivb
mov
dec
or
repz
jno
sbb
push
mov
pop
mov
inc
sub
lock
int3
add
or
les
call
push
xlat
jno
les
push
fwait
out
pushf
lock
aaa
or
fsub
clc
aas
sub
add
sbb
pop
repz
pop
punpckhbw
aam
jg
lods
addr16
adc
lock
cmc
sub
popa
xor
mov
daa
push
fimuls
sbbb
addb
xor
cwtl
mov
push
lahf
cmpsb
call
call
neg
jmp
jmp
stos
movb
lea
jmp
jno
ret
aaa
adc
mov
sub
test
stos
jo
add
and
imul
dec
xor
mov
std
je
push
jmp
aam
repnz
dec
out
dec
lods
iret
cmp
mov
sub
loopne
ljmp
dec
xor
fimuls
adc
fs
and
ret
sbb
push
push
push
xchg
leave
fiaddl
jbe
loopnew
cmp
dec
aaa
fwait
add
les
inc
add
int3
pusha
add
adc
test
xchg
fdivrs
xchg
fistpl
ljmp
inc
push
jb
daa
cli
movsl
movsl
mov
clc
xor
iret
cld
adc
mov
test
je
adc
cmp
out
pop
stos
push
pop
or
push
push
popa
adc
jae
cwtl
addl
je
or
pushl
pushl
popl
stc
cmp
pushf
movw
lea
ja
mov
sub
sar
movsbl
cmp
add
ror
sub
mov
clc
mov
sbb
mov
mov
pusha
test
repnz
call
push
push
lcall
pop
pop
xor
inc
jg
mov
in
fimull
push
mov
push
orb
dec
pushf
xchg
adc
mov
test
mov
mov
jns
loop
fnstenv
inc
xor
xorb
dec
jnp
addr16
mov
xor
imul
sub
shlb
shrl
dec
fbld
add
inc
stos
push
jl
mov
shrl
sbbl
add
shll
cmp
xchg
sbb
pop
rcr
mov
xor
insb
out
push
out
pop
clc
leave
daa
dec
aaa
or
test
shlb
cwtl
xor
mov
rcrb
rcr
mov
fcompl
dec
les
stos
daa
enter
gs
xchg
stos
aaa
or
pop
fistpl
cmpsl
das
rcl
leave
xchg
push
jo
addb
shl
lea
inc
mov
fs
sbb
pop
out
cmpsl
ljmp
inc
pop
lret
loope
cmp
dec
mov
roll
xchg
das
sub
sub
sub
mov
fwait
cmc
adc
in
jns
mov
jp
push
mov
inc
and
lret
outsb
or
cmp
cmp
pushw
popfw
mov
call
add
aaa
xchg
mov
mov
add
xor
xor
jecxz
push
imul
fisttps
xchg
test
and
nop
loop
into
push
out
out
add
jle
in
out
xor
roll
addr16
int
jmp
bndldx
sub
and
sbb
pushf
scas
fiaddl
das
jg
or
aaa
imul
cltd
mov
ficoml
sahf
negb
jb
std
mov
cmp
add
inc
sbb
rorb
mov
push
cwtl
es
aaa
cmp
jge
sbb
jmp
and
jnp
rol
sub
sub
cmpsb
push
mov
fnstenv
jecxz,pt
addr16
dec
in
insb
cmp
mov
adc
xor
mov
jbe
dec
sub
add
mov
cs
mov
mov
lds
mov
enter
fdiv
mov
imul
cmpsl
popa
je
adc
sub
stc
cmp
add
pushf
dec
movb
call
mov
es
aaa
pop
jge
cmp
imul
pop
cmpsb
cs
jecxz
ja
call
pusha
jb
adc
stos
sub
jl
xor
arpl
jmp
mov
or
cld
sub
rolb
in
pop
repz
fdivrl
dec
outsb
loopne
sbb
shlb
pop
and
movl
lea
jb
push
cmp
mov
lea
jmp
stc
pushf
add
pushl
pusha
push
push
lea
jmp
mov
mov
lea
jle
pusha
lea
call
pusha
lea
jae
cmc
cmp
pusha
pusha
sub
mov
mov
lea
call
jmp
push
sbb
outsl
fstpt
stos
fistpll
cmp
scas
imul
adc
repnz
divb
xor
clc
clc
cmpsl
shrb
mov
mov
shlb
or
scas
mov
je
jl
xchg
mov
mov
mov
sub
jmp
mov
inc
pop
cltd
fdivl
dec
jne
add
sti
adc
mov
inc
push
adc
adc
cld
repz
jo
mov
adcb
cltd
add
jle
xor
add
test
movb
cmp
pusha
lea
ja
jmp
mov
mov
imulb
pop
test
xor
stos
adc
int
outsl
aam
jecxz
out
in
ja
icebp
xchg
ss
cmpsl
dec
jp
mov
mov
mov
pop
unpcklps
xlat
push
and
faddl
es
int3
fildl
dec
xchg
inc
pop
sahf
daa
adcl
lods
decb
loop
pop
sbb
pop
and
out
jmp
lea
je
cmc
sub
pusha
mov
test
cmp
push
pusha
jmp
test
aaa
pushf
cmc
test
adc
mov
adc
adc
mov
in
mov
push
and
bswap
push
loope
filds
mov
cld
push
bound
enter
push
lods
pop
data16
mov
call
lret
cwtl
mov
hlt
pop
sub
popf
cmp
pop
sub
mov
dec
aaa
and
ds
push
inc
xchg
mov
ja
aam
sahf
cmpl
add
mov
mov
adc
pusha
fwait
sbb
jmp
mov
shrb
popa
sub
int
outsl
mov
dec
popa
jmp
test
clc
cltd
inc
fcom
push
xchg
cli
sbb
and
sbb
xorb
stos
mov
addl
dec
movl
mov
cmpsl
sbb
dec
mov
ficoml
jo
push
mov
sub
scas
in
fcmovnbe
fbld
mov
clc
pushl
cmpb
mov
lea
jne
rcr
test
xor
movsbw
mov
btc
clc
mov
cmp
stc
add
dec
rol
bt
mov
jmp
lock
sub
dec
aaa
stos
mov
cli
dec
stos
ds
xchg
decb
outsb
arpl
dec
dec
jmp
push
cli
divb
or
rcrl
int
out
dec
imul
mov
fdivrp
idiv
gs
test
mov
in
in
adc
cmp
dec
jns
mov
xlat
add
int
dec
mov
rcll
lcall
fwait
lds
push
mov
inc
pop
mov
and
pop
mov
in
and
int
stos
push
pop
mov
mov
pop
ud0
mov
icebp
arpl
rorl
xor
xorl
enter
push
xchg
loopne
add
and
xchg
bound
or
fiadds
repnz
iret
inc
adc
loopne
stc
and
push
je
fisubl
ficomps
cli
pop
loope
aad
shll
fbstp
addb
jae
fcoml
and
and
cmp
sbb
pushf
and
nop
and
test
xchg
add
xchg
repnz
data16
or
sti
lock
psllw
cmpsl
dec
mov
aas
cmpsb
pop
dec
jle
cmp
xchg
nop
mov
lret
cmp
xor
sbb
add
sub
lea
jns
test
sub
adc
aad
add
mov
pusha
repnz
pushf
lea
jne
cwtl
movb
movzbw
jmp
cmp
cmc
pushf
test
mov
bswap
bts
bt
shr
mov
jmp
lods
push
and
jno
dec
add
fs
js
test
mov
pop
pusha
xorl
push
dec
sbb
icebp
fnsave
cmp
adc
or
pop
inc
ja
rclb
inc
lret
xchg
add
enter
and
sub
adc
adc
int
dec
jne
or
in
lods
or
cltd
and
je
mov
mull
dec
stos
adc
mov
lods
es
test
or
ficomps
pop
cmp
cmpsb
andb
into
mov
bound
shrb
push
insl
mov
leave
mov
bound
icebp
cmp
test
repnz
out
rorl
xchg
mov
daa
test
call
repnz
inc
inc
mov
cmpsl
cmp
jno
imul
inc
add
jg
dec
test
mov
mov
add
enter
jnp
into
stc
add
andl
cld
inc
pop
sub
sarl
repnz
pusha
push
mov
out
out
out
sbb
cmpsb
cmp
jl
jle
movsl
iret
sbbl
mov
adc
jb
ret
fmuls
push
dec
add
dec
fistps
pusha
adc
popa
movsb
les
mov
dec
shll
push
sub
rcrb
insb
nop
push
xchg
fcompp
cmc
ljmp
daa
sub
and
xor
sbb
push
pop
loope
sbb
test
stc
lods
out
cli
jl
loopne
pushf
lock
sub
stc
loope
cld
mov
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
dec
aaa
mov
sti
mov
dec
adc
arpl
mov
inc
and
or
lods
call
xor
sbb
pop
push
das
jae
push
dec
add
fcompl
ljmp
sub
pop
adc
sti
popf
pop
sbb
inc
xor
xchg
icebp
and
pop
fnstsw
shll
lea
xor
xchg
xor
je
je
shl
rclb
lods
lret
jl
add
cmp
push
in
mov
dec
mov
fs
js
jo
lods
sub
cmp
stos
sarb
jbe
push
out
faddl
repz
adc
or
hlt
mov
cmp
ficomps
pop
add
in
cmp
sub
cmp
aam
sbb
jno
cmp
add
jge
jo
dec
mov
add
incl
call
mov
push
lea
jmp
mov
lahf
push
dec
aaa
aaa
xor
cmp
out
cmp
push
pop
jecxz
sbb
divb
std
push
jne
and
push
mov
aad
insb
inc
xor
mov
dec
mov
lret
jle
and
cltd
inc
out
movsb
and
jbe
jp
cmp
idivb
outsb
ret
or
in
and
sarb
add
fcompl
adc
jnp
jmp
jne
adc
ljmp
scas
outsl
ljmp
pop
cmc
out
addr16
mov
iret
mov
pop
lret
jne
loope
in
lahf
sbb
ret
cmp
adc
call
mov
jmp
dec
test
dec
aaa
or
cwtl
sbb
aam
dec
push
shrb
fnsave
mov
mov
jae
xchg
aaa
mov
sub
xchg
test
jl
shrl
inc
bound
daa
jecxz
cmp
inc
push
out
sbb
enter
lcall
in
jno
loopne
data16
sub
push
mulb
or
loope
nop
and
jb
out
pop
mov
mov
int
dec
mov
and
call
push
jmp
add
dec
insb
gs
outsb
imul
add
test
xor
or
push
stc
mov
add
ss
sti
push
movsb
push
dec
push
mov
sbb
jp
cli
and
shll
xchg
int3
adc
push
ljmp
lahf
mov
pop
or
pop
lds
inc
mov
je
rcrb
cmp
jmp
cli
fwait
and
dec
in
push
out
jbe
stos
pop
out
fldt
pop
pop
movsb
out
data16
xchg
test
ret
dec
aaa
stos
sbb
mov
and
add
mov
lahf
xchg
cmp
jmp
dec
mov
xor
inc
fcomi
dec
jp
sahf
imul
int
stos
icebp
and
xchg
mov
mull
data16
out
dec
dec
adc
push
ret
pop
fldenv
mov
pop
fidivs
and
mov
and
cmp
lret
sbb
gs
pop
repnz
push
push
push
dec
add
adc
fsubl
test
shll
xchg
iret
pop
shr
xchg
sub
lcall
test
mov
sub
cmp
sti
or
jge
adc
xor
decb
fbstp
shrl
pop
xchg
cmp
cld
mov
clc
inc
movsb
or
xchg
mov
adc
pushf
lea
jne
seta
pusha
movzbw
setae
movb
lahf
mov
pusha
lea
movb
movl
call
xchg
sub
xor
iret
sub
fwait
push
mov
mov
fbld
rcrl
dec
aad
fdivr
adc
insb
out
cli
ds
lock
lahf
cmp
push
jle
test
les
xchg
out
paddsw
or
or
push
icebp
push
scas
xchg
mov
popl
xlat
test
fs
or
cmc
lahf
inc
stos
aad
or
push
add
add
aaa
mov
lods
loope
xor
jmp
mov
in
xchg
stc
jl
aam
dec
out
sahf
fldl
aad
movsb
sbb
int
pop
loopne
orl
add
mov
les
xchg
cmc
jns
es
push
aas
mov
lods
lods
push
ret
xor
mov
stos
inc
xchg
jle
cmp
mov
pop
test
sub
jmp
sahf
cmp
sbb
inc
pusha
mov
push
mov
pop
or
int
rorb
jne
jp
or
in
test
cs
pop
int
lock
sub
or
das
mov
and
xchg
jne
xchg
push
movsb
dec
aam
rorl
popf
or
or
xchg
mov
addr16
stc
or
mov
mov
mov
pop
cmp
jne
arpl
mov
dec
aaa
and
dec
test
or
hlt
jnp
repz
push
addl
imul
jmp
jp
cmp
mov
pop
xor
xorl
daa
cmp
fstl
and
add
popa
insb
inc
insb
insb
outsl
arpl
pop
out
rcrl
dec
aaa
cmc
lock
add
dec
lods
inc
mov
and
push
cmpb
push
out
dec
jns
or
dec
pop
dec
push
test
test
lret
or
push
add
adc
mov
dec
dec
sub
arpl
movsl
inc
xor
push
cmc
mov
pop
pushf
add
js
mov
roll
insb
scas
sbb
jne
sbb
adcl
xor
jnp
push
xor
lock
test
int3
lds
push
cwtl
or
fmuls
mov
sub
mov
jb
testb
je
imul
inc
add
imul
aaa
imul
and
xchg
and
test
sub
ret
ret
adc
imul
mov
movb
cmc
cs
pusha
cwtl
mov
std
adc
xor
movb
mov
pusha
mov
jp
xchg
push
sbb
lcall
pop
mov
push
or
pop
lret
push
xchg
pop
fsubl
pop
ljmp
cmp
or
lahf
xor
cmp
mov
packsswb
pop
ffreep
cs
mov
addr16
stc
or
fs
clc
popa
cld
std
testb
ret
mov
jb
in
dec
mov
adc
nop
mov
mov
adc
and
and
lahf
inc
dec
sub
xor
test
and
dec
xchg
mov
loope
popa
sti
push
xchg
xchg
push
sti
sbb
ja
fwait
cmp
movsb
xlat
sbb
adc
mov
jmp
bt
mov
pushf
cmpb
jmp
lea
ja
pusha
bt
bt
imul
stc
mov
add
movb
pusha
pushl
push
lea
jmp
lahf
insl
push
pop
dec
aaa
cmpl
gs
dec
je
gs
mov
sub
movsl
xlat
mov
or
inc
stos
sub
inc
lahf
fdivrp
sti
xor
push
ja
out
pop
add
add
lods
pop
add
sarb
or
iret
fbstp
aad
test
mov
sbb
les
pop
mov
out
cmpsb
sub
or
xchg
inc
push
dec
aaa
xchg
iret
sbbl
push
ret
daa
xchg
pop
stos
ja
xchg
jmp
insb
adcb
nop
test
imul
xor
mov
cld
dec
lret
icebp
and
jg
scas
divl
push
sub
cwtl
js
ret
push
dec
aas
ret
ss
mov
xor
mov
psllw
jnp
and
push
insl
xchg
leave
call
cmpsl
repnz
xchg
imul
inc
ret
push
jno
lods
inc
aaa
loopne
cmpsb
out
inc
sahf
mov
add
dec
icebp
mov
sub
inc
xchg
out
bt
mov
bt
pusha
test
mov
test
mov
pushf
clc
sub
pushl
pushl
push
rep
jmp
mov
aaa
inc
je
clc
sbb
jmp
ret
fadds
mov
add
mov
in
mov
and
js
andl
mov
or
inc
fists
fldl
mov
repz
arpl
sub
jb
in
push
fiadds
addl
dec
scas
fdivrl
nop
sbb
push
das
aad
adc
aaa
outsl
fisttpl
fwait
pop
imul
aas
ret
push
mov
movsb
sub
jno
movsb
xlat
push
fs
cs
scas
jecxz
mov
daa
movsb
xchg
imul
testb
xor
cmpsb
xchg
pop
data16
in
push
lcall
ss
nop
mov
ja
dec
sub
xchg
repz
mov
pop
inc
or
dec
mov
sub
imull
lret
lods
xchg
xchg
push
sbb
push
cmpsb
add
insl
imul
gs
jb
dec
gs
fs
mov
lea
jne
neg
or
mov
call
fs
adc
aaa
imul
into
adcb
lret
dec
insb
pop
push
mov
notl
repz
xor
xchg
fcmovne
aas
insb
mov
push
insl
ljmp
shr
lock
dec
addr16
out
dec
or
jo
and
ret
dec
int
xor
or
push
inc
loopne
test
sbb
adc
test
and
sbb
sarb
fisubrl
add
popf
dec
jb
ret
mov
or
ds
jp
push
loopne
lods
or
shll
lods
push
xchg
pushf
lea
jae
cmc
test
pusha
jmp
mov
imul
imul
pop
loopne
cmp
cmp
inc
dec
nop
jmp
xor
jge
lods
jecxz
sbb
push
iret
sub
push
inc
fistpll
mov
inc
mov
pop
fisttps
sbb
inc
shrl
stos
push
push
popa
cltd
xor
add
scas
and
mov
int
sbbl
xchg
ret
fcomps
dec
jmp
jne
or
push
out
in
xchg
test
rorb
gs
xor
xchg
dec
sub
dec
test
push
lock
pop
loopne
lret
pop
lret
dec
sbb
cmpsb
test
pop
addb
int
ss
xor
call
push
push
sub
sarb
adc
dec
jo
mov
lods
cmc
dec
in
in
daa
or
mov
mov
shl
xchg
ljmp
push
or
faddl
push
push
xchg
inc
inc
dec
loop
push
arpl
push
bswap
inc
pusha
pop
lock
and
pop
dec
pop
test
xchg
lea
lods
mov
sub
mov
ds
ljmp
test
xchg
pop
cmpsb
mov
rcr
mov
push
popa
inc
xchg
sbb
xor
jno
dec
dec
popf
or
flds
pop
fdiv
push
aad
mov
push
out
push
mov
xor
push
pop
cmpl
loop
lods
in
test
push
xor
inc
cld
sete
sub
mov
and
push
hlt
hlt
inc
inc
inc
dec
sub
push
xor
lock
dec
popf
jnp
std
push
dec
aad
inc
stc
pop
jp
mov
mov
xchg
inc
in
fs
xor
mov
sub
popa
xchg
sub
mov
addr16
repz
dec
push
scas
ret
pop
xchg
cli
or
pop
pop
aaa
add
sub
mov
xor
push
les
sbb
pop
iret
sbb
push
pop
push
xchg
leave
jnp
mov
pop
push
aad
dec
bnd
cmp
dec
mov
mov
mov
push
mov
lock
add
data16
addr16
loopne
call
xor
out
lcall
xor
enter
xchg
repnz
push
lahf
xchg
mov
int3
or
pop
enter
sbb
cmp
in
test
mov
sub
mov
pop
dec
inc
fnstenv
pop
pcmpgtb
mov
mov
and
popf
sub
jmp
enter
sbb
mov
cmp
imul
push
loop
lock
mov
cmp
call
add
mov
fs
mov
mov
xor
add
test
popa
mov
fcoml
std
sbb
jecxz
fwait
dec
mov
cmpsb
and
imul
into
fs
or
repz
pop
dec
or
insl
jae
inc
loope
call
fistps
insb
mov
mov
in
mov
jno
cmc
pop
pop
jne
lock
ljmp
inc
hlt
sbb
sarb
inc
push
adc
inc
sub
inc
pop
in
ljmp
loope
arpl
test
push
dec
cmp
xchg
mov
popa
aad
sbb
pusha
pop
mov
push
mov
insb
fisubrl
imul
xchg
xor
outsl
sbb
test
pop
aaa
mov
sbb
sub
ljmp
mov
push
pop
adc
in
dec
cmp
movsl
pop
adc
test
xchg
jb
sub
pop
mov
adc
xchg
enter
adc
movsb
pop
or
aam
rcrb
xor
jnp
pop
or
out
fadds
out
inc
push
jl
rclb
inc
adc
arpl
call
sar
arpl
pop
pushf
lcall
out
jmp
loopne
mov
sub
pop
lock
jne
ljmp
in
dec
daa
inc
sbb
pop
xchg
xlat
cmp
sub
addr16
dec
push
fwait
enter
cmp
add
pop
adc
flds
pop
sbb
ljmp
loop
cltd
rcll
das
push
mov
popa
sbb
sbb
bound
jmp
pop
jmp
pop
and
aas
push
cli
in
adc
inc
out
imull
leave
aaa
push
mov
cmpsl
adc
jl
dec
fmuls
pop
or
test
cmp
push
test
mov
sbb
imul
xor
inc
pop
faddp
or
mov
loop
inc
sbb
xchg
mov
inc
jmp
loope
push
lods
lock
mov
test
mov
push
fcoms
in
lock
and
inc
in
add
leave
in
gs
sbb
dec
arpl
inc
cmp
pop
adc
mov
xchg
sbb
bound
inc
fcomip
jp
mov
imul
arpl
icebp
stos
jb
push
imul
sbb
ss
scas
push
call
push
mov
push
les
xchg
lock
sbb
fbstp
push
cwtl
xor
pop
xchg
adc
cmp
adc
stc
test
pop
movsl
sub
sub
sbb
sub
add
loope
outsl
sbb
bound
push
push
test
cld
push
cmp
test
xchg
and
adc
jmp
cmpl
push
imul
cld
shll
test
outsl
mov
sbb
xchg
xchg
jecxz
lock
popa
inc
pop
movsb
sub
pop
test
jmp
divb
mov
test
cmp
xor
or
and
pusha
pop
leave
leave
mov
lock
inc
add
ljmp
loope
pop
and
test
mov
add
je
or
or
xor
ss
mov
fsubr
jo
les
sbb
lcall
dec
mov
adc
bnd
imul
hlt
push
sarl
xchg
push
sbb
mov
mov
or
hlt
sub
gs
push
mov
enter
inc
and
aam
mov
cmpl
cld
test
pop
pop
push
jg
mov
xchg
in
push
jmp
dec
out
push
lds
sbb
adc
movsl
push
inc
push
mov
cmpsl
jne
jns
clc
cli
je
inc
mov
push
andb
popl
cmpsb
or
sub
jp
inc
xor
inc
loop
sub
pop
fwait
sub
jnp
push
xchg
push
mov
mov
adc
mov
mov
pop
js
push
xchg
pop
dec
xchg
ret
aad
add
mov
push
out
mov
sub
xchg
insb
cli
inc
in
imul
and
ja
add
push
jge
xor
ret
rcr
mov
add
xchg
pop
fcomps
push
jns
pop
jg
and
pop
fldenv
pop
lock
call
mov
ss
cmp
sub
das
std
popf
xor
je
sti
xor
adc
mov
xchg
clc
rcrb
push
lods
dec
addr16
add
fs
sub
inc
mov
push
and
imul
add
fdivr
es
pop
loop
gs
or
dec
lds
js
cmp
xor
lods
int3
push
push
inc
movsl
pop
clc
xchg
ret
fadds
into
pop
sub
clc
push
adc
pusha
pop
aad
jmp
inc
jp
pop
les
push
daa
sub
cmc
movsb
inc
or
pusha
xchg
test
dec
call
in
sub
push
xor
sub
lods
push
sub
mov
rcll
hlt
cwtl
imul
sbb
mov
push
push
outsl
icebp
xor
adc
jecxz
loop
xor
push
filds
and
in
int
pop
jecxz
mov
mov
cmpsb
imul
shll
mov
mov
test
pop
pop
and
fstpt
jnp
shrb
or
stos
inc
movsb
imul
cmp
dec
cwtl
negb
add
dec
push
ret
sbb
cmp
stc
cmpsb
pop
adc
leave
int
or
decb
xchg
mov
aad
loope
push
add
push
adc
sub
aam
or
daa
xor
in
cmp
mov
aad
push
dec
leave
mov
mov
bound
adc
imulb
xchg
out
scas
movsl
ret
push
or
pop
shlb
pop
cmp
cmpsb
out
pop
scas
out
pop
dec
ret
cmpb
pop
mov
sub
jmp
and
or
in
and
inc
sahf
neg
and
gs
xor
cmpsb
push
js
add
push
xor
arpl
mov
aad
xor
pop
push
push
or
aad
out
ds
in
xlat
cmp
insl
or
xchg
and
push
stos
bound
das
push
stos
jns
cli
jmp
int
popf
push
push
mov
mul
aas
lods
mov
add
xor
jp
inc
push
movsb
xor
imul
cmp
pusha
lea
aaa
ds
inc
out
rcl
in
mov
sub
mov
push
dec
jbe
xlat
scas
inc
inc
jg
inc
in
movsl
ja
cmp
add
mov
ljmp
call
push
inc
inc
cmpsb
xchg
xlat
dec
movsb
and
lcall
sub
mov
dec
pop
cltd
push
add
iret
sub
and
adc
push
and
clc
repz
out
sbb
int3
cmpsl
sbb
popf
jecxz
sub
cmpsb
push
adc
shll
xor
pop
push
cmp
imul
inc
or
push
push
pop
clc
push
enter
mov
mov
and
std
xchg
mov
sti
pop
test
in
sub
xchg
push
mov
leave
jnp
sub
inc
das
push
push
inc
sbb
repz
mov
push
mov
mov
pusha
ret
lret
lods
ret
mov
rcrl
mov
add
cmpsb
inc
xchg
fidivs
out
push
dec
mov
pop
pop
test
mov
dec
dec
lea
dec
pop
pop
inc
aas
adc
push
and
add
aad
cmpsb
dec
pop
inc
rcr
jecxz
push
cld
cmpl
pusha
mov
cwtl
call
out
imul
add
lds
sub
push
mov
cmp
add
sub
lock
mov
mov
sub
mov
int3
ljmp
mov
jl
sub
repnz
or
js
sub
dec
pop
jnp
das
sub
pop
inc
test
jo
bound
jg
shl
sub
lds
mov
mov
stos
test
lea
inc
pop
int3
ljmp
pusha
testb
inc
inc
sahf
fsubrl
pop
push
test
cmp
aaa
ficomps
sub
aas
icebp
push
cmp
sub
mov
mov
imul
cli
test
or
push
aad
add
mov
jl
adc
aam
imul
sub
inc
shrb
das
scas
mov
cmp
jo
mov
sbb
dec
movsl
sub
test
mov
sbb
xchg
dec
sub
mov
ret
out
loope
mov
add
push
add
pop
aad
push
lret
pop
and
sub
xchg
cmp
sbb
sub
mov
rolb
mov
sub
xorl
inc
lret
out
jbe
int
mov
lahf
out
sub
adc
add
iret
sub
dec
sarb
fwait
cmp
pop
test
adc
lods
subb
ss
stos
mov
mov
ljmp
fwait
das
test
fisubl
test
mov
es
sahf
sub
mov
ss
inc
stc
sub
add
and
sub
int3
xchg
lret
rclb
xchg
sub
jbe
pop
cmc
std
pop
mov
pop
dec
cltd
les
dec
repz
jge
mov
test
hlt
jbe
pop
insb
mov
ljmp
jne
js
test
adc
sbb
push
sbb
hlt
jge
icebp
dec
mov
mov
adc
mov
jle
inc
xchg
push
pop
adc
pop
xchg
int
sub
shll
xchg
in
sub
movsb
jae
leave
pop
sub
inc
sub
xchg
sub
pop
ja
insb
lret
jg
fwait
mov
lods
mov
inc
aas
or
or
xlat
jne
sub
ss
cwtl
mov
add
call
cmc
bound
sub
test
loop
add
bound
jge
add
xor
cmpsb
ret
adc
lret
adc
sbb
cli
or
cmp
les
fs
push
repz
or
mov
lea
push
mov
shl
jo
xor
into
xor
mov
sub
add
mov
jecxz
fdivr
out
in
imul
push
sub
enter
mov
cs
lret
ss
xor
in
lahf
insl
insb
pop
into
mov
scas
fstpl
jo
dec
cwtl
ret
hlt
cmpsb
mov
mov
sub
add
mov
js
jb
mov
sub
mov
cltd
dec
inc
loope
push
test
mov
sub
adc
xchg
dec
shrl
pop
test
mov
inc
shr
test
orl
mov
imull
push
inc
ljmp
xchg
insb
jmp
sub
pop
mov
in
mov
adc
imul
scas
or
sub
mov
lods
test
movsb
iret
aaa
icebp
jge
ljmp
and
shlb
and
cmp
out
inc
lods
sub
stc
add
sub
sub
out
in
push
jbe
sub
cmpsb
cmpsl
push
dec
sbb
or
and
pop
cs
sahf
sub
inc
cmpsl
leave
ljmp
fistps
fwait
mov
pop
faddp
fildl
and
xor
and
push
dec
lods
icebp
add
dec
cld
out
inc
xchg
xor
lret
sub
sar
cwtl
sub
mov
aad
ja
xchg
or
outsl
iret
test
push
sbb
fwait
sub
or
mov
repnz
xor
std
and
sub
xchg
xor
add
xor
rclb
fstpt
adc
inc
cs
aam
jne
xor
push
push
fdivs
cmp
pushl
sub
insl
loopne
sub
imul
fdivs
sub
add
nop
cmp
jecxz
je
fldenv
mov
sub
sub
jbe
jg
adc
push
pop
adc
push
cs
cmp
dec
push
fs
sbb
jnp
lret
pop
sub
cmp
test
sub
into
adc
test
xor
iret
mov
add
aas
cmp
imul
and
cli
mov
pop
jno
gs
sub
inc
lea
sub
loope
push
add
mov
repz
mov
and
adc
aam
push
fisttps
aad
jns
mov
js
dec
jnp
fisubl
or
xor
mov
adcl
ret
loope
aas
inc
or
call
hlt
bound
add
push
shl
in
cld
sub
addr16
xchg
mov
inc
mov
pop
adc
bound
inc
sub
cltd
sub
jmp
xor
and
dec
xchg
mov
in
push
repnz
sub
lret
push
pop
stos
out
cs
bound
mull
sub
pop
adc
test
shrl
insl
xor
shlb
push
test
dec
ljmp
mov
jg,pt
sub
mov
xchg
mov
inc
cmp
ror
xchg
sbb
cmp
repz
mov
popa
and
inc
rolb
test
mov
clc
stos
out
sub
adc
xor
and
dec
push
lds
xchg
xchg
jge
sbb
and
in
adc
pop
xchg
jg
cvtpi2ps
dec
rorl
inc
add
mov
add
jns
pop
jnp
or
in
add
lock
in
jp
or
pop
and
ss
mov
std
xor
les
and
insb
xor
fists
adc
pop
lcall
mov
test
nop
stos
jns,pn
xor
sbb
cmp
push
enter
fs
mov
aam
push
push
stos
dec
sub
js
push
pusha
push
pop
cld
sub
aas
sub
sub
pop
xor
sub
dec
in
adc
shr
jl
mov
mov
cmpsb
push
call
stos
stc
mov
cwtl
bound
sub
and
cmp
in
sbb
hlt
sub
dec
jbe
xchg
daa
ret
pop
arpl
sub
or
push
outsl
sbb
out
xchg
mov
sub
stc
push
jecxz
into
cwtl
ud2
pop
ror
es
sub
das
xor
sub
in
mov
push
nop
xchg
test
mov
clc
sti
sub
pop
outsb
ljmp
xor
or
push
dec
xor
into
push
subb
mov
push
sub
jae
push
dec
test
ljmp
dec
out
cmp
lret
int
sub
jl
cmp
loop
rclb
insb
pop
mov
add
cmpsl
bound
ljmp
adc
jmp
mov
xor
popa
mov
cmpsl
push
pop
mov
filds
jns
cli
adc
lcall
lock
arpl
mov
jmp
jecxz
dec
jecxz
xor
sub
pop
sub
fwait
inc
mov
and
mov
orb
sub
pop
pop
add
cmp
pop
pop
mov
loope
dec
loop
jp
push
cmpsl
aam
dec
ret
lret
xor
fnstcw
lock
int
pushf
inc
js
and
sub
mov
pop
arpl
xchg
jp
mov
inc
les
jns
dec
addr16
das
xchg
sahf
sub
pop
push
clc
popf
cmp
inc
or
lods
push
jne
xor
xchg
repnz
cli
or
sub
push
in
and
cmpsb
dec
int3
cmp
leave
xor
xchg
cmpsl
dec
nop
push
scas
sub
xor
add
sbb
gs
mov
fwait
test
fwait
push
inc
gs
rorl
and
xor
fildll
xor
pop
cmpsb
or
test
and
inc
push
orb
push
pop
push
add
dec
ja
bound
dec
xchg
sbb
sahf
dec
push
cli
mull
lock
push
divb
pop
cmp
sub
sub
lock
shrl
inc
sub
jbe
mov
sub
std
and
sub
out
insb
ss
add
and
gs
or
dec
or
cmpb
imul
imul
je
stos
aam
loope
out
mov
insb
sub
pop
pop
mov
gs
cmpsl
test
cltd
push
adc
dec
hlt
arpl
movntq
sbb
push
ds
addr16
mov
lock
rcrb
movsl
sbb
pop
push
mov
sub
lret
xor
mov
xlat
add
out
leave
sub
jbe
stos
je
or
subb
and
mov
es
push
icebp
pop
cltd
push
btr
pop
cmpsb
mov
inc
lret
sbb
cmpsl
sbb
addb
imul
sub
xor
xor
cld
sub
call
pop
sbb
mov
push
jecxz
ds
mov
mov
mov
sbb
pop
cmpsl
inc
dec
rcll
clc
cmp
push
dec
cmp
and
adc
cwtl
pop
out
dec
lahf
push
icebp
call
ret
pop
cmp
in
imul
test
and
gs
sub
out
xor
pop
sub
sub
shll
cmp
inc
lock
push
leave
nop
pop
in
insb
fs
sub
mov
add
ret
pop
lahf
pusha
jp
std
aam
fadd
call
sub
out
pop
mov
push
inc
faddp
cmp
mov
test
sub
nop
lds
in
rcl
dec
xor
out
mov
rolb
lock
cltd
or
sub
xor
insb
je
lock
push
pushf
xchg
addr16
lods
sub
out
fwait
xor
inc
mov
sti
out
or
sub
push
popa
xlat
push
push
sub
xchg
add
fucompp
movb
add
sbb
clc
inc
or
addb
mov
outsb
bound
outsb
out
ret
jge
movsl
fcomps
sbb
pushf
mov
push
shlb
sbb
add
arpl
stos
jnp
lock
cltd
push
push
cmpsl
push
mov
mov
adc
xchg
inc
cmp
xor
pop
push
call
or
sub
cld
inc
in
stc
add
adc
shr
xchg
xchg
push
dec
daa
and
cwtl
mov
fwait
and
pop
push
push
inc
sub
imul
inc
or
adcb
lret
cmp
aas
scas
sub
xchg
lock
xchg
xor
add
cmp
xchg
push
xchg
daa
xor
xchg
xlat
xor
add
pop
sbb
cmp
ljmp
lods
mov
addr16
xor
xchg
xor
dec
cmpsb
imul
imul
lods
cmp
xchg
push
jne
jbe
sbb
jg
cmpsb
dec
and
xor
dec
push
cmpsb
jge
cmp
push
xchg
sbb
xchg
movsb
ljmp
pop
aad
mov
rcr
add
fdivs
pop
or
sub
add
mov
mov
addl
add
cmp
or
dec
sub
dec
mov
testb
ja
jo
xor
and
jecxz
bound
xchg
rorb
xlat
mov
sub
scas
sub
inc
aad
or
jle
and
ret
mull
dec
call
xchg
xchg
sbb
and
xor
fcmovne
vpsadbw
in
lds
sub
es
jg
popf
jle
mulb
lea
jo
loope
pop
sub
ljmp
lea
xchg
cmp
add
push
sub
xchg
movsl
sbb
lret
in
jmp
loope
sub
push
orl
dec
das
scas
in
fwait
sbb
fadds
out
mov
push
orb
dec
pushf
inc
scas
dec
pusha
ffreep
push
mov
inc
cmp
cmp
pop
xorl
scas
dec
leave
mov
pop
or
xor
lods
push
daa
mov
cmp
jo
addr16
mov
pop
dec
or
mov
imul
cmpsb
or
inc
jne
test
xor
push
movsl
inc
shll
jl
and
pushf
pusha
filds
add
shll
xor
out
aas
mov
gs
inc
pusha
popa
pop
jl
imul
or
clc
or
xchg
push
push
push
sub
jg
clc
xor
in
jmp
data16
push
sub
hlt
adc
add
jo
inc
mov
imul
sti
aam
inc
jae
or
js
inc
fistpl
pop
mov
int3
sbb
scas
mov
fs
js
mov
xchg
sub
jns
ljmp
lods
stos
movsl
jg
loop
cmpsb
mov
mov
pop
push
addr16
push
les
jle
dec
shll
push
in
leave
sub
int
mov
or
or
inc
cmp
fisubrs
xor
push
cmp
outsb
lcall
adc
pushf
jp
xlat
addl
mov
mov
pop
xchg
jp
xchg
xchg
fsubrs
pop
push
mov
pop
xor
imul
daa
inc
cmc
jecxz
xor
and
or
cld
cmp
mov
pop
loop
scas
pop
push
xchg
std
popf
mov
imul
jle
movsb
inc
and
push
lock
dec
mov
loopne
fcmovbe
stc
dec
add
inc
andl
lods
jecxz
mov
fnstcw
fsub
rol
popa
insb
sbb
push
push
cmp
mov
pop
out
in
sbb
dec
mov
daa
lock
xlat
inc
xor
mov
xor
push
lret
inc
fbstp
popa
and
jae
mov
jns
inc
insb
cmc
movsl
sti
and
popa
ja
imul
imul
roll
repnz
lods
fmull
pop
fs
sub
push
js
pop
add
jecxz
iret
xchg
in
insb
fisttps
inc
cmpsb
jbe
aad
inc
clc
fcomps
push
fsubrs
fs
and
and
jb
call
jge
adc
push
stos
mov
test
imul
fisubl
xor
dec
dec
mov
pop
and
popa
pop
xor
fld
fwait
jp
movb
imul
pop
mov
push
pop
dec
pop
add
pusha
fwait
jg
das
bound
outsb
sbb
out
mov
int3
mov
pop
test
mov
adc
bound
add
hlt
adc
push
cmp
xorb
dec
lods
ds
inc
push
mov
leave
jp
gs
out
pop
xor
and
sub
cmp
sarb
inc
gs
hlt
movsb
adc
dec
push
pop
jnp
push
sub
enter
in
jl
inc
cmp
mov
cwtl
out
mov
bnd
or
out
cmp
mov
gs
arpl
xor
push
or
sahf
adc
roll
or
ds
clc
mov
cmp
test
and
and
pop
popa
popf
movsl
testb
or
fisubs
or
fs
ret
fisubl
rcl
pop
loope
push
addr16
loop
ja
cmpsb
pop
lds
pop
das
or
fwait
fwait
call
mov
ret
dec
roll
sub
arpl
cmp
sub
and
insb
sub
push
cmpsl
or
cmpsb
ja
cmp
mov
lea
pop
mov
dec
jmp
lock
xchg
push
xor
addr16
cwtl
pop
je
inc
mov
xor
pop
imul
push
sti
in
jns
nop
push
push
cmp
stos
dec
and
mov
pop
leave
gs
ss
out
pmulhuw
cmpsl
aam
jae
adc
popw
lods
push
push
mov
ror
inc
pop
add
sub
pop
fs
out
push
add
mov
jg
sub
mov
in
out
fwait
inc
scas
sub
arpl
push
fwait
sti
fadds
sub
fistps
call
mov
daa
lret
or
scas
aad
push
inc
inc
mov
int
and
pop
fimuls
sub
cmp
sub
push
fldenv
es
shr
loope
int
adc
nop
mov
push
fisttpl
rcrl
push
bound
and
push
or
rol
stos
sub
leave
cli
lahf
mov
cltd
sub
shl
cli
adc
fs
pop
xchg
fs
sbb
fwait
inc
in
insl
cs
add
push
into
jg
addr16
sbb
and
inc
push
xchg
push
fs
and
inc
push
sub
in
lcall
jae
sahf
adc
ja
adc
ret
scas
frndint
xlat
test
mov
push
lods
mov
imul
scas
insb
out
adc
ss
int
rcl
push
je
inc
xlat
xor
es
leave
dec
cmp
adc
pop
xor
push
into
sti
cmp
lock
bnd
sarb
das
mov
or
dec
scas
push
xor
aas
ss
scas
in
xchg
data16
fs
fcoms
lock
fimuls
push
push
pop
sbbb
push
adc
mov
sub
mov
cmc
out
int
aas
mov
lock
dec
lret
jmp
inc
jge
pusha
adc
repnz
pop
pop
mov
std
leave
adc
or
int3
sbb
or
mov
leave
cmp
pop
mov
or
lea
call
dec
pop
in
cmp
and
push
int
pop
xor
into
pop
std
inc
pop
imul
mov
mov
mov
push
stos
push
push
cmp
cmp
xor
cmp
inc
xor
sti
push
adc
mov
rcll
mov
cmp
sub
call
mov
cwtl
push
push
mov
sbb
add
call
inc
push
or
sahf
into
xchg
pop
push
push
imul
add
inc
adc
sub
add
mov
adc
inc
in
push
sbb
pop
jne
add
cmc
dec
lock
mov
dec
sub
xor
gs
adc
arpl
add
cld
xor
imul
enter
inc
test
enter
fsub
jl
pop
mov
inc
testl
fisubl
push
hlt
ljmp
mov
in
add
pop
or
xacquire
add
mov
adc
inc
aaa
inc
stos
push
jmp
addr16
loop
dec
xlat
out
pop
mov
sbb
fdivp
push
mov
cmp
dec
mov
pop
push
and
test
jl
dec
mov
mov
in
pop
push
rolb
negl
pop
cmpsl
popf
nop
mov
jne
inc
lock
jnp
jmp
loope
push
jo
fs
sbb
xchg
ss
mov
lds
ja
pop
inc
push
dec
imul
mov
add
cmp
mov
ror
push
call
data16
jp
mov
lods
pop
jmp
jge
jne
ljmp
jne
push
dec
mov
sub
inc
jae
mov
xchg
cmp
gs
push
mov
jmp
lret
push
cld
inc
push
or
adc
imul
test
pop
xor
dec
es
mov
xor
lods
push
shlb
in
insw
lahf
test
push
fists
sbb
mov
xor
sub
xchg
cmpsb
xorl
test
inc
add
popa
mov
and
xlat
insb
ret
mov
cli
sub
aam
add
mov
dec
mov
addr16
imul
cwtl
fcoml
imul
mov
lahf
or
dec
loope
nop
inc
lret
outsb
fnstenv
sub
mov
sub
push
lock
pop
ljmp
or
jmp
cmp
popa
mov
jle
aad
or
cs
xchg
iret
dec
push
cli
push
popa
outsb
inc
adc
lock
pop
sub
les
xchg
aad
mov
sahf
ror
mov
mov
pusha
xchg
test
in
mov
cmp
push
cmpsl
cmpsb
enter
outsl
adc
pop
or
js
xor
push
mov
push
das
or
sub
xchg
rcll
sti
inc
stos
add
cmpsl
aad
sarb
and
dec
aas
inc
inc
lods
clc
xor
push
add
add
imul
adc
sub
xchg
jp
leave
push
push
shl
and
sub
iret
fwait
inc
addr16
test
test
cmp
dec
push
test
push
pavgb
mov
call
sub
js
jne
fldlg2
mov
xor
int3
ss
ret
mov
push
ret
movsb
push
aaa
and
test
push
in
mov
dec
ds
in
mov
aas
xchg
dec
or
xchg
mov
out
stos
mov
mov
add
lock
cmp
icebp
xlat
xor
sub
jmp
xchg
movsl
xchg
loope
mov
push
aad
idivb
arpl
push
xor
hlt
stos
mov
sti
dec
mov
imul
mov
test
sub
pushf
jmp
push
adcb
dec
xchg
dec
gs
icebp
push
pop
mov
ja
shll
cwtl
pop
xlat
ss
addr16
adc
shlb
loop
fnsave
in
sub
cmp
inc
xor
rcr
cltd
jle
lock
jmp
or
insb
ds
cmp
push
xchg
shlb
or
pushf
test
popa
push
jecxz
pop
repz
dec
sbb
arpl
inc
pop
dec
xor
jle
fs
xchg
test
jle
xchg
cltd
dec
ljmp
frstpm(287
bound
xor
adc
xchg
insb
xlat
call
pusha
je
push
jmp
sbb
cmp
lock
dec
ja
inc
adc
pop
das
cmp
cld
lcall
out
pop
cmp
or
iret
pop
pop
data16
cmp
lods
call
lock
flds
ja
mov
imull
sub
push
jp
add
icebp
mov
push
cs
in
gs
mov
test
push
pop
push
arpl
rclb
jno
aam
lds
mov
push
rclb
pusha
sahf
inc
lahf
mov
mov
repnz
jae
fwait
pop
push
dec
outsl
xchg
or
fisubs
xor
popf
pop
xchg
mov
jne
sub
or
sub
jae
inc
rclb
rolb
fs
mulb
mov
and
rcrl
ljmp
mulb
test
dec
leave
or
inc
mov
mov
mov
xchg
andb
cmp
out
ret
or
jmp
popa
jmp
iret
int3
aam
push
test
push
sub
rcrl
es
lock
gs
imul
adc
leave
pop
lahf
lock
sbb
adc
push
xor
test
roll
pop
cmpsb
out
int
out
lods
pop
jbe,pn
fidivrs
pushf
pop
in
push
dec
imul
bound
sbb
mov
lods
sahf
sub
out
jg
push
inc
mov
sub
in
push
std
sub
inc
aas
mov
imul
sbb
xor
ds
mov
sub
mov
sbb
insb
add
dec
movsl
push
hlt
iret
fstps
adc
aad
sbb
mov
xchg
jno
push
sahf
aad
test
scas
das
ja
cmp
mov
pop
rorb
inc
test
cld
movsb
movsl
enter
sub
push
cmp
repnz
pop
pop
or
mov
rorb
cmpsb
jp
dec
xchg
je
in
dec
and
push
pop
sbb
fmuls
enter
ljmp
pop
into
push
sub
push
and
sub
lock
mov
pop
ret
mov
inc
xor
nop
adc
mov
shlb
out
cmp
cmpsl
js
push
sahf
je
cmc
ja
ljmp
imul
add
sub
mov
dec
push
add
dec
jg
bound
push
inc
or
sbb
or
aam
and
pop
cmp
hlt
les
xor
imul
push
and
sub
insl
push
lahf
inc
repz
ret
lock
mov
leave
gs
pushf
scas
sub
pop
pop
pop
movsb
jp
fcoms
push
push
test
jnp
stc
mov
lock
les
push
jg
pop
pusha
repz
push
fistpll
xchg
in
aam
push
loopne
sub
pop
dec
jecxz
push
or
xor
fisubrl
in
push
lods
pushf
and
inc
push
adc
movsb
dec
mov
aas
mov
cld
xchg
test
cmp
mov
pop
xor
and
lods
or
ret
in
mov
xlat
jno
dec
cmp
repnz
cmpsl
icebp
xchg
mov
mov
sub
push
xor
scas
lock
xchg
mov
mov
fwait
xchg
inc
push
xchg
pusha
bound
test
lock
or
xor
adc
mov
xor
jl
cmp
and
sbb
and
aas
add
fsubrs
test
pop
fisubs
push
jle
mov
mov
push
adc
outsl
push
xchg
idiv
cmpsl
fldenv
arpl
shlb
add
mov
int3
xchg
lods
cmp
inc
jmp
inc
jle
xor
repnz
mov
mov
cwtl
cmpsb
fisubl
in
cli
sti
fmull
js
and
inc
cld
mov
push
jns
xchg
outsb
and
sub
ljmp
roll
xor
rclb
jp
pop
pop
mov
jmp
into
xchg
sub
call
lret
mov
pop
or
xor
jmp
pop
dec
negl
xchg
lods
inc
adc
push
lret
movsb
mov
leave
pop
pop
xchg
add
lcall
xchg
push
add
push
adc
cli
jnp
lods
cmpsl
lahf
pop
enter
cmp
jmp
cmp
sub
fcoms
mov
fiadds
add
ss
sbb
dec
add
mov
stos
sub
push
mov
in
inc
add
fmulp
dec
stc
test
out
ljmp
xlat
lds
addr16
sub
mov
out
push
pop
xlat
dec
ds
inc
loopne
xchg
shr
aad
and
pop
xor
mov
lock
cmpsl
push
mov
mov
push
mov
shl
enter
mov
or
xchg
or
fstps
pop
ss
mov
fnstenv
rcll
call
or
sub
add
xchg
insl
inc
xchg
sub
push
loopne
jle
push
sahf
mov
sub
inc
loope
pop
ja
movsl
addr16
push
add
mov
sahf
clc
push
pop
fdiv
out
daa
outsl
xchg
xorl
dec
bound
mov
lea
inc
lods
jl
popf
sub
fwait
push
xchg
imul
cs
iret
xchg
test
mov
push
cld
scas
imul
fcmovnbe
and
jg
ja
fists
mov
xchg
and
shrl
inc
in
imulb
pushf
rcll
subb
xor
in
sbb
sar
leave
lock
cltd
push
pushf
dec
ss
xor
fildll
sub
outsb
pop
lahf
in
jae
xchg
popa
mov
mov
test
and
out
int
or
xor
pop
lds
scas
shll
inc
xchg
pop
sbb
into
cmpsl
loop
adc
into
sbb
add
out
fildl
fwait
adc
leave
movsw
ljmp
xchg
popa
lret
out
outsl
and
pop
inc
imul
mov
les
ss
sbb
xchg
rcr
sbb
je
dec
pop
loop
or
and
in
in
cmpsb
push
sub
adc
mov
add
pop
mov
jbe
pusha
hlt
add
jmp
mov
or
push
jp
fwait
adc
xor
aam
push
dec
mov
leave
nop
rcrb
inc
ja
bound
lods
negb
push
xor
cmpsb
xchg
inc
inc
pop
mov
push
dec
jmp
sub
clc
add
xor
sbb
aas
popl
fistpll
ficoms
mov
sti
gs
xor
ficoml
lea
mov
push
push
std
xor
cmp
gs
sarl
mov
xchg
arpl
inc
fwait
or
es
jae
xchg
xor
pop
mov
xchg
jecxz
push
inc
insb
andl
mov
fcoml
addr16
sbb
sbb
data16
outsl
scas
cmp
dec
xor
lods
nop
pop
ret
dec
insl
jp
in
cmp
pop
int3
push
xorl
in
sbb
ljmp
cmc
inc
mov
sub
insb
ljmp
scas
xor
lock
out
adc
ret
add
push
pop
imul
sti
loope
dec
push
es
shl
mov
popa
imul
loopne
movsb
daa
and
aad
push
dec
ljmp
mov
xor
pop
pop
mov
jmp
fistpl
cmp
out
xor
int3
mov
mov
scas
xor
or
cli
pop
inc
cmp
addr16
or
mov
cld
pop
pushf
xor
lds
outsl
push
je
dec
mov
inc
outsl
fcoml
push
gs
inc
jg
out
xlat
lret
sub
adc
test
shll
push
dec
mov
cmp
sub
in
pop
push
lds
fnstenv
pop
jnp
pushf
test
mov
test
mov
loopne
dec
scas
mov
xor
int3
testl
push
push
cmpsl
ret
lea
mov
cmpb
je
push
sub
test
orb
movsl
cli
pop
sub
aaa
mov
test
inc
push
je
outsb
cmp
aam
iret
shll
cmp
fsubl
jno
xor
movsb
add
jns
sar
cld
mull
push
xlat
movb
lods
shlb
jp
jne
fisubrs
mov
inc
pop
movsb
pop
push
push
jle
pop
sti
xor
sub
ja
add
sub
mov
leave
in
cmp
jne
mov
in
ss
aaa
fldenv
stc
sub
std
adc
push
xor
bound
rcl
push
stos
cltd
xchg
pusha
clc
inc
lds
cmp
add
test
push
sub
inc
pop
rcll
jl
popf
jns
mov
daa
or
sbb
iret
xchg
push
mov
lea
jle
fadd
dec
xor
add
xor
outsb
call
es
and
or
jecxz
inc
cmp
arpl
mov
mov
mov
pop
sbb
pop
jo
lock
fisubrs
clc
mov
cmp
lcall
sbb
cmpsl
and
lret
mov
enter
scas
pop
pop
lds
xchg
fwait
movsl
xchg
repnz
pop
lret
stc
leave
cld
cld
push
inc
or
lds
out
dec
inc
shlb
or
mov
pop
call
movsl
cmp
inc
addr16
fidivrl
cmpsb
dec
pusha
lea
sub
mov
faddl
movsl
ror
iret
push
xor
sbb
add
fisttpll
je
iret
xor
insl
stos
inc
je
inc
inc
pop
mov
cmp
sub
push
div
dec
and
data16
or
pop
in
sub
jmp
cmp
decb
xchg
adc
shll
mov
clc
or
pop
adc
in
loopne
mov
addr16
push
mov
pop
rolb
mov
adc
loop
gs
in
cltd
and
jae
xor
mov
mov
pop
inc
pop
sti
adc
hlt
faddl
scas
sbb
sub
dec
jl
pop
adc
push
inc
xor
dec
adc
mov
pop
aad
pusha
add
xchg
jno
push
cltd
pop
push
sub
xchg
out
ret
insl
jp
push
push
jb
push
push
je
fbld
jae
cltd
pop
pop
xor
xor
adc
xor
sub
notl
lods
sbb
mov
dec
jne
jmp
xchg
or
pop
daa
lret
test
push
mov
xor
test
mov
xlat
dec
sub
in
pushf
sbb
shll
pushf
pop
movsb
imul
test
cmp
inc
jle
adc
scas
shll
es
pop
test
in
jmp
mov
loope
push
std
data16
lock
xchg
dec
dec
fmuls
sub
call
roll
or
xor
mov
stos
pop
cmp
lea
cmp
loope
push
mov
sbb
jecxz
mov
add
test
cmpsl
leave
push
push
sahf
push
dec
aam
bswap
mov
dec
sub
add
ja
cmpsl
push
sbb
cmpsl
xchg
test
in
gs
in
lret
cld
outsl
pop
leave
arpl
mov
addr16
or
push
pop
test
lea
add
repnz
lret
shrl
or
xchg
push
popl
repnz
lock
dec
xor
xchg
scas
pop
push
and
rorl
movsl
mov
mov
call
dec
int
push
sub
sub
pop
outsb
mov
leave
sbb
cmpsl
cltd
push
inc
je
std
iret
inc
lcall
jl
jecxz
add
les
imul
cmpsb
add
jbe
jbe
js
jp
cmc
adc
add
test
stos
icebp
hlt
dec
adc
mov
xchg
in
cwtl
imul
lret
nop
imul
xchg
out
cwtl
in
mov
sarl
cmp
fildll
and
lods
ds
adc
test
repnz
outsb
push
mov
push
dec
fiadds
jmp
sahf
mov
imul
and
push
movsl
push
pop
ljmp
jae
cmp
ljmp
cmp
lock
leave
leave
cmp
ss
and
mov
cmpsl
sub
mov
ss
cmp
and
sub
in
adc
dec
adc
pop
sbb
sbbl
bound
imul
psubsw
lods
lock
jmp
and
push
pop
sbb
mov
mov
in
in
cmp
add
loop
cld
imul
call
cmpsl
mov
and
xlat
dec
ret
push
xchg
repz
inc
mov
es
subl
dec
mov
gs
in
dec
push
test
sub
mov
dec
mov
movsl
cmc
xchg
das
push
sub
iret
mov
lods
pop
out
pop
aaa
mov
push
test
shr
push
push
lock
xor
push
cmp
jb
inc
fisttps
pop
jne
sub
push
or
xchg
mov
fsubp
jo
popa
sbb
addr16
inc
outsl
xchg
sti
mov
leave
cmpsl
fnstenv
sarl
push
es
xor
in
test
mov
fdivrs
cli
ret
shlb
shl
rol
adc
movb
cmpsl
sub
in
pushf
pop
and
or
jnp
bound
jmp
push
ret
sub
clc
test
adc
pop
lods
out
fisttpll
push
aas
mov
cmc
cld
add
scas
xor
scas
insl
in
pop
push
je
sbb
movsb
cmc
sti
mov
cmp
or
loopne
mov
sub
push
aaa
jecxz
mov
cmp
and
jno
add
mov
lret
xchg
push
mov
jnp
xchg
adc
jne
je
pushf
sub
push
cli
lods
sub
dec
inc
add
imul
out
int3
or
xor
push
test
enter
cmp
push
sti
adc
inc
xor
push
in
testl
mov
mov
cmp
inc
cmpsb
sbb
test
xor
les
pop
adc
gs
inc
pop
ljmp
add
aad
aad
fs
inc
sti
push
stos
push
lock
pop
push
sti
add
add
aas
in
sub
inc
mov
imul
pop
cmp
xchg
or
ds
pop
cmp
pop
dec
sbb
jae
movsb
push
lahf
pop
dec
pop
cmpsl
xor
pop
push
scas
push
stos
in
mov
and
aad
sub
inc
xchg
addr16
sti
sbb
pop
dec
cwtl
ja
jnp
push
out
data16
negb
add
adc
ljmp
lahf
sbb
fistpll
xor
lret
fnstcw
subb
cmp
dec
push
lock
xor
inc
adc
rorb
cmp
inc
testl
push
pop
dec
cmc
ja
addr16
dec
xchg
mov
xor
lock
cmp
xchg
inc
xor
shl
xchg
out
bound
xor
test
mov
imul
sbbb
inc
sbb
fisttpl
gs
push
arpl
cmp
int
pop
and
push
pusha
cmpsl
in
pop
fisttps
dec
inc
pushf
inc
cmp
test
pop
sub
lret
push
adc
fcomps
lret
and
pop
push
dec
sbb
cmp
or
les
dec
les
and
dec
or
test
mov
xor
inc
cmc
out
addr16
pop
cmovo
test
push
push
lock
xor
mov
sbb
in
ficoms
pop
or
pop
shl
fcompl
icebp
repnz
mov
mov
inc
sub
sbb
rclb
fucom
sub
push
mov
and
cmpsb
lock
inc
ret
ds
add
inc
push
xor
adcb
shr
cmpsl
in
arpl
push
test
dec
jno
movsl
pop
shrb
jp
mov
and
sti
inc
lret
in
clc
mov
xor
or
lret
addr16
pop
push
enter
int3
xlat
movsl
sub
and
mov
fmul
rorb
fcmovb
dec
and
lcall
dec
push
clc
aad
sub
xor
loop
mov
mov
rcl
add
pushw
mov
pop
addr16
mov
ljmp
imul
in
push
mov
jns
loope
mov
push
addb
adc
mov
cmp
adc
pop
jp
push
scas
pusha
sahf
mov
dec
outsb
mov
cmpsl
add
movsl
shrb
xor
lods
push
push
ret
push
sub
andl
pop
scas
dec
ss
lock
adc
aam
xor
ja
jnp
aas
out
lahf
jge
push
bound
test
or
push
jp
insb
adc
and
xor
out
rcrb
bound
loopne
mov
push
insl
mov
mov
aaa
mov
in
add
sbb
movsb
lock
fnsave
push
daa
enter
ljmp
dec
xchg
cmp
aad
xchg
clc
cmp
sub
iret
ss
inc
push
push
daa
test
dec
fimull
mov
jmp
and
lock
mov
test
insl
sti
pusha
sarl
jne
adc
cmc
lock
mov
in
push
push
pop
xlat
shll
cwtl
lods
jbe
out
cmp
imull
dec
mov
inc
pop
adc
adc
jmp
pop
xor
bound
push
shlb
xlat
ds
repz
imul
addr16
or
sbb
sahf
arpl
fadd
cmp
insl
mov
push
pop
sbb
call
cmpsb
in
jae
loope
fnsave
cmpsl
mov
imul
jg
inc
test
jne
lock
daa
addb
cld
pop
xchg
or
dec
push
out
mov
nop
pop
shll
enter
inc
xor
mov
fiaddl
lds
sub
push
mov
mov
adc
push
mov
ss
adc
dec
push
and
cmp
jle
jns
cmp
dec
mov
in
push
sahf
cmp
in
xchg
lods
jns
push
adc
ret
cmp
ss
xchg
lcall
andl
mov
les
pop
lock
repnz
lret
dec
and
adc
gs
in
add
sub
pusha
mov
js
push
mov
mov
mov
flds
mov
jbe
addr16
cmpsb
roll
xchg
lret
lods
ret
lds
les
xchg
cli
in
sarl
dec
stos
dec
push
cmp
or
add
cld
mov
dec
inc
dec
mov
lret
add
adc
sub
jle
xor
iret
mov
inc
imul
aad
rorb
lahf
cmc
pop
std
out
jb
dec
in
lret
lds
pop
in
mov
pop
scas
pop
cmp
add
add
pop
fs
pop
sarb
jne
out
xor
xchg
inc
out
and
inc
pop
mov
sub
mov
push
in
lock
notl
lret
sub
sbb
pop
mov
in
add
leave
loopne
imul
push
jl
push
xor
push
inc
pop
xchg
arpl
add
in
mov
pop
mov
sub
push
pop
push
mov
mov
mov
cmp
push
scas
ss
mov
pop
aam
cmp
sti
sub
shlb
out
stos
psllw
sbb
cmp
rclb
mov
repnz
add
pop
push
mov
xchg
mov
stos
xchg
mov
push
sub
mov
adc
lods
movsb
mov
pusha
loopne,pt
popf
adc
pop
sahf
out
es
or
jmp
cli
mov
lods
popl
sub
lcall
sbb
pop
cmpb
loope
cmp
xor
inc
jecxz
jns
dec
push
jecxz
xchg
nop
or
and
mov
fistpll
push
fisubs
stos
loope
xchg
cmp
cmpsl
xor
loope
enter
sub
xor
ficoms
mov
dec
sub
sbb
mov
mov
stos
add
push
sbb
ljmp
repz
add
lea
bound
addr16
cmpsb
cmp
mov
loopne
add
stos
imul
lock
cmc
test
sbb
out
lea
xchg
test
or
mov
in
pop
jl
mov
in
mov
in
sbb
cmp
xor
movsl
xchg
jge
dec
push
xlat
out
mov
push
sbb
rorl
aad
sbb
pushf
pop
test
add
das
loope
test
jb
push
dec
xor
pop
sbb
jmp
popf
xchg
sbb
in
mov
mov
sub
pop
xor
cmpsb
or
mov
and
cmp
dec
outsl
call
sar
inc
pusha
push
leave
movsb
mov
test
xchg
cli
jae
sub
pop
or
xchg
icebp
jae
out
sub
pop
imul
dec
and
mov
sbb
stos
js
push
xor
dec
out
sarb
inc
inc
push
mov
adc
mov
test
call
dec
inc
push
jae
imul
loope
cmpsl
adc
dec
test
mov
in
ljmp
sbb
lods
xor
jle
jmp
xchg
scas
sub
add
aam
les
inc
fs
stos
ds
aam
int
daa
nop
arpl
sbb
mov
fildl
pop
inc
jnp
scas
adc
sub
mov
ljmp
jae
in
xor
mov
inc
and
push
push
mov
stos
call
cmp
sub
loope
cli
addl
adc
imul
push
add
jmp
cld
mov
fidivrs
xchg
pushl
or
fs
pop
fisttpll
xchg
cmp
out
pop
icebp
int
xlat
mov
and
repnz
stos
pop
mov
mov
loope
and
in
mov
das
lahf
xchg
ljmp
stos
jns
dec
incb
or
jbe
loope
push
fisubs
jge
leave
pop
dec
xchg
add
arpl
sbb
mov
cmp
cmp
negb
pusha
enter
mov
cmp
addr16
aad
cmpsb
insb
mov
mov
push
adc
bound
aaa
xor
jne
pop
mov
xor
sti
pop
fs
and
out
jmp
xchg
mov
aas
sbb
inc
loope
jle
xchg
leave
popa
xchg
cld
in
nop
xor
mov
clc
mov
int3
mov
add
lds
call
jmp
fiaddl
mov
shlb
or
jnp
in
push
test
into
pop
sbb
lods
iret
out
pop
adcb
fdivs
pop
jecxz
xor
and
inc
imul
cld
shlb
mov
cmp
push
pushf
in
xchg
inc
jo
sub
sub
es
inc
aad
xchg
pop
pop
in
xchg
in
frstor
push
lods
in
adc
cld
inc
movsl
mov
cld
inc
pop
shl
jge
cld
push
sahf
mov
mov
fdivrs
pop
adc
dec
xor
out
stos
movsb
mov
into
jmp
cmc
xchg
es
bound
add
lock
or
addr16
xchg
mov
out
ljmp
mov
clc
pop
mov
pop
pushf
shl
or
mov
pop
xor
dec
shlb
xor
mov
shl
xchg
fsubs
cmp
mov
sub
sub
or
pop
adc
mov
cmp
iret
and
xchg
xlat
and
push
push
add
fcompl
pop
xchg
mov
das
lods
pop
in
push
test
xchg
mov
mov
xchg
lret
pusha
xor
in
inc
pop
lock
sub
orb
in
sub
push
lds
mov
lret
lcall
jmp
sub
add
test
cmpsb
outsb
pop
push
push
push
lahf
insb
sub
insl
mov
or
cld
mov
popl
test
aaa
sub
xchg
test
add
or
arpl
sti
sbb
cmp
dec
pop
test
sub
xor
cmpsb
lds
inc
rclb
int
and
movsb
pop
and
mov
adc
gs
ret
shll
add
mov
in
mov
push
movsl
xchg
out
dec
push
cmp
popa
jne
jbe
cmpsl
pop
push
or
dec
inc
addb
mov
or
loop
pop
sbb
xchg
ret
sbb
xor
stos
adc
shl
or
adc
lock
pop
hlt
sub
sti
pop
in
enter
jecxz
loopne
bound
scas
pushf
test
ficompl
jl
mov
cmp
jnp
aam
inc
outsl
fwait
inc
adc
in
sar
sbb
es
fstpl
arpl
mov
fwait
gs
in
test
pop
addr16
ds
add
decl
xchg
push
jp
dec
mov
sbb
or
inc
sbb
mov
aas
mov
dec
jle
fs
loop
mov
lock
pop
cmpl
xchg
and
dec
pop
dec
push
pop
push
add
outsl
sbb
pop
testl
dec
and
mov
jbe
fwait
fs
jne
push
lods
sub
cmp
pop
sub
pop
out
insl
stos
sbb
xchg
movsb
bound
mov
inc
mov
test
lods
add
inc
movsl
cmpsb
clc
cmpsl
lods
ja
cltd
sub
in
inc
enter
adc
adc
stos
out
cmc
and
sub
push
inc
out
jne
add
push
mov
insl
inc
cmp
inc
jp
cmp
divl
imul
mov
adc
xchg
fidivs
enter
add
inc
iret
mov
test
fildll
lods
aam
lock
inc
lcall
xchg
mov
sbb
sub
jae
cmpl
mov
mov
xchg
test
dec
or
insl
test
pop
xchg
cmp
push
inc
adc
ret
dec
xchg
std
lds
jmp
push
inc
sub
pop
push
outsl
fs
pop
hlt
ja
xor
into
test
ljmp
add
int3
inc
jbe
xor
cmc
push
gs
sti
sub
cld
jge
push
add
std
lock
es
add
xlat
sbbb
adcl
popa
mov
xchg
mov
rcrb
jmp
xchg
repz
mov
data16
xchg
xor
aam
jbe
inc
outsb
xor
lock
xchg
stos
inc
xchg
stc
jnp
push
cmp
xchg
push
out
jbe
sbbl
sbb
xor
rclb
or
cmp
loop
pusha
xchg
xor
xor
loopne
mov
xor
sbb
push
in
outsb
mov
fld
cmpsb
inc
cmp
pop
in
mov
jne
les
xchg
add
push
inc
sub
jge
pushf
jp
push
and
sub
jl
shl
jg
xchg
inc
sbb
ss
into
xlat
inc
cwtl
scas
loopne
in
fnclex
lock
imul
in
sti
or
sub
push
lret
inc
stc
repz
lock
lcall
add
incb
fbstp
lret
movsl
dec
fdivr
mov
mov
xor
push
xchg
addr16
je
add
xlat
mov
das
sub
add
mov
pop
dec
test
or
mov
sub
inc
addl
jp
and
jl
out
xchg
add
push
xchg
into
sub
sbbw
jb
shlb
insb
or
sarb
xchg
lea
mov
jmp
lret
pop
cmp
in
imul
in
mov
push
push
cmpsb
pop
xchg
ss
mov
xchg
mov
fnstenv
xchg
jp
and
lods
push
sub
sbb
xchg
mov
imul
mov
cltd
jp
xor
gs
loope
add
rorl
sub
pop
mov
jecxz
lret
sub
push
xorb
rclb
repnz
notb
inc
inc
inc
mov
inc
cli
add
dec
pusha
cmpsb
xlat
inc
jl
mov
stc
adc
or
mov
sub
mov
lds
addb
xchg
aaa
jl
in
leave
jnp
js
dec
mov
pop
sbb
mov
or
pop
jnp
xchg
add
xor
movsl
jp
hlt
movl
popa
inc
ss
aaa
sbb
mov
aas
cmp
fcomip
mov
sahf
repz
push
stc
xlat
jle
repnz
int
jmp
fidivl
dec
lock
arpl
jmp
adc
movsb
test
ss
movsl
jg
dec
shrl
inc
xor
jne
inc
loopne
shll
bound
push
lock
adc
movsl
cmpsb
ja
aam
push
scas
inc
movsl
hlt
jp
stos
mov
pop
lods
cwtl
andb
and
jg
xchg
dec
inc
test
mov
insb
push
adc
movsb
mov
and
test
xor
push
cmp
in
pop
out
pop
sbb
xor
or
dec
pop
lock
ret
adc
outsb
adc
xchg
std
fs
or
test
lret
mov
imul
repz
pop
cmp
xchg
cmp
repz
push
into
xchg
add
outsl
das
pop
mov
cmpsl
mov
loop
lock
nop
outsb
jae
aaa
push
jmp
mov
call
rcl
sbb
lods
popa
add
fadds
lret
jge
ljmp
mov
xchg
xor
adc
sub
inc
testl
aam
test
test
dec
sti
xchg
jl
xlat
cli
dec
fucomp
fldenv
and
cmpsl
inc
orl
inc
ret
stc
inc
xlat
clc
and
inc
adc
inc
fidivs
je
push
push
add
in
ds
push
icebp
andl
sub
mov
jp
and
xchg
ja
lds
mov
addr16
shlb
adcb
cmp
mov
lock
shl
push
mov
xor
sbb
loop
xor
lahf
cmp
test
orl
std
mov
aas
dec
xlat
pop
inc
push
rorl
pop
cmpsb
fisubrl
xor
int
shll
pop
in
fidivrl
or
push
subb
mov
stos
movsl
lods
shl
xchg
push
push
pop
imul
out
and
test
stos
mov
scas
xchg
lock
js
cmc
mov
scas
adc
pop
fidivl
lcall
out
fnstenv
incb
loopne
cld
adc
and
scas
outsl
loopne
mov
mov
sub
mov
sarl
shr
push
and
or
cmp
mov
shr
push
pushf
push
or
test
mov
push
mov
imul
scas
test
jno
xor
mov
in
scas
hlt
fs
and
push
imul
dec
out
andb
xor
lock
jle
push
push
jl
arpl
sub
test
in
xchg
push
pop
rclb
cmp
arpl
mov
sarl
es
mov
dec
or
xor
and
int3
adc
insl
xlat
cmp
clc
cmp
xor
xchg
out
pop
or
addl
pop
aam
add
adc
lds
add
xchg
cmpsb
cmp
call
jno
xorl
mov
fisubrs
les
mov
pusha
lcall
pop
adc
cmc
mov
jmp
lock
sub
sbb
insb
int3
add
leave
cwtl
adc
lods
test
inc
lods
and
pop
lret
mov
iret
add
xchg
pop
and
inc
cmpsl
cmp
out
add
push
inc
pop
in
mov
xor
xlat
inc
das
mov
dec
xchg
out
mov
test
push
mov
cmp
stc
ds
sub
popa
js
sti
sbb
push
jmp
fadds
incb
sub
vmaxss
push
mov
mov
rcr
mov
imul
iret
std
mov
pop
xchg
leave
xor
aad
inc
lods
rcl
pop
sbb
jno
in
dec
inc
mov
push
pusha
aam
cmpsb
inc
fsubp
mov
loope
adc
dec
pop
pop
xor
rorl
sub
in
dec
add
mov
sbb
ljmp
mov
or
jno,pn
add
lret
push
push
xor
stos
cs
push
pop
dec
pop
sbb
add
cmp
cmp
cmpsl
loop
cmpsb
imul
pop
incl
inc
sti
cmp
or
pop
mov
test
lock
pop
or
xchg
ljmp
pop
xchg
pop
push
xchg
aam
add
sbb
bound
ljmp
xchg
push
gs
out
test
or
and
gs
and
dec
ret
loopne
push
push
mov
mov
arpl
scas
mov
push
cltd
cmp
addr16
xchg
ljmp
xor
lret
addr16
stos
test
xchg
fcompl
mov
xchg
sbb
int3
cld
jge
xchg
pop
in
pop
xchg
lea
sahf
and
push
xor
sahf
mov
stos
icebp
in
addl
scas
movsl
outsb
jl
mov
out
cmp
sbb
adc
sub
cwtl
pop
xchg
insl
mulb
shll
or
enter
or
pop
test
xor
jne
mov
cmp
test
or
xchg
scas
ds
dec
mov
pop
sub
sarb
and
bound
xchg
loope
xor
push
xchg
xchg
pushl
ficomps
pop
addl
sahf
roll
jmpw
mov
mov
xchg
jmp
cmp
and
or
mov
call
fwait
or
dec
add
popf
scas
pop
out
sti
and
and
rol
rorl
inc
fs
lods
sbb
lds
lock
adc
repnz
sbb
icebp
movsb
dec
insl
mov
jnp
in
aad
pop
movsb
stos
cmp
jge
and
int3
pop
pop
sbbl
mov
in
push
xor
add
fnsave
mov
daa
call
fwait
jne
ret
pusha
lock
mov
jno
mov
ds
mov
test
xor
mov
lock
lcall
and
mov
mov
outsb
dec
pop
push
out
jbe
lahf
stc
fldcw
movsb
test
adc
xor
fucomi
mov
daa
mov
mov
push
lds
and
xor
das
and
pop
jmp
arpl
jecxz
push
dec
adc
test
in
call
sub
das
push
scas
xor
jmp
xchg
lahf
stc
subb
popa
jmp
add
mov
or
and
push
lret
cmpsb
mov
xor
push
push
pop
push
loop
aaa
lcall
loop
mov
loopne
lds
shrb
pop
xchg
add
fucomi
lcall
push
in
icebp
dec
iret
pop
fs
out
xchg
jmp
in
out
icebp
adc
adc
bound
or
or
push
push
cmpsl
rcrb
imul
insl
movsb
test
pop
lahf
cld
push
xlat
sti
push
int
sub
mov
rclb
xchg
jb
pop
movsl
xchg
dec
std
cmp
dec
xchg
dec
negb
jp
sti
cmpsb
or
push
pop
xchg
stc
hlt
pop
pusha
or
movsb
jne
in
cld
xchg
es
call
inc
xchg
xor
pop
testl
and
test
add
out
mov
hlt
pop
aad
xor
mov
mov
cmp
imul
movsl
rcrb
in
repz
mov
mov
mov
lock
xchg
insb
fdivs
xor
aas
sbb
pop
push
cltd
jecxz
mov
imul
scas
pop
pop
adc
mov
idivl
cmp
mov
jns
jne
cmp
mov
lods
or
rcll
stos
jns
push
jno
sti
adcb
cmp
adcl
adc
in
inc
aam
call
hlt
bound
das
or
and
push
cmpsl
ss
pop
imul
adc
sbb
loopne
push
jge
push
fmull
loope
mov
xchg
xchg
jbe
dec
push
mov
mov
inc
add
add
ljmp
ja
push
or
dec
xchg
push
fdivs
lock
inc
adc
xor
xchg
inc
ficoms
sub
shrl
call
lock
cmp
aam
xor
sub
inc
inc
jb
pop
mov
adc
dec
inc
push
sbb
sbb
shl
dec
jb
mov
sub
xor
sub
icebp
adc
aad
cmc
fimuls
push
shll
adc
xor
xchg
mov
cmpsb
add
xor
jge
test
lock
inc
push
cmpsl
jns
repz
push
data16
add
sub
out
mov
fldenv
je
pop
loope
mov
push
cmpsb
sbb
fs
pop
sub
jbe
cmp
dec
adc
jmp
sahf
mov
cmc
imulb
add
mov
cld
cmp
enter
scas
inc
adc
cmp
sbb
push
insl
sub
mov
aaa
sub
mov
bound
mov
xorl
push
jl
sub
mov
jbe
push
mov
lret
xchg
xor
or
cmp
pop
imul
adc
test
xchg
mov
jl
ljmp
sti
mov
dec
movsb
pop
or
xlat
inc
test
cmp
sbb
lock
jno
push
dec
out
xchg
or
in
in
pop
insb
outsl
movsb
neg
outsl
dec
in
add
inc
shrb
sub
dec
nop
imul
cmp
in
addr16
cmp
test
leave
sbb
mov
adc
mov
and
int
scas
xchg
lds
addr16
jp
test
push
mov
cmp
sbb
sub
in
sahf
xor
adc
and
cmpsb
lods
sub
sub
shll
push
bound
andb
push
movsb
roll
pusha
out
xlat
sub
mov
cmp
nop
lock
pop
cmp
xchg
xor
jo
das
shr
xor
inc
hlt
and
and
lods
out
ds
push
push
xchg
or
mov
je
adc
jp
dec
or
ret
test
in
xor
stos
out
xchg
sahf
push
pop
idivl
and
xchg
sbb
push
ja
xor
aaa
enter
jbe
sub
iret
add
cld
loop
data16
jp
mov
jmp
xchg
pop
mov
jmp
pop
les
sbb
cmp
xchg
mov
enter
loopne
or
shrl
sbb
lods
pop
pop
ljmp
adc
cmpsl
popfw
rorl
sti
in
sub
cmpl
push
jle
loope
aam
les
cld
lock
mov
sub
push
jmp
je
sub
pop
pop
ljmp
das
outsb
imul
movsb
push
imul
adc
adc
push
movsl
sub
sub
loopne
out
lds
lds
xor
ds
mov
pop
popa
and
cmp
in
pop
jmp
call
call
adc
imul
or
push
sbb
mov
xor
xchg
and
push
ja
xor
xor
imul
fwait
cmp
push
cmpsl
add
or
ret
lret
add
addr16
cld
sub
jle
shl
or
test
push
mov
mov
std
push
fstps
bound
mov
mov
ficompl
xor
into
bound
stos
xchg
gs
xchg
incl
add
clc
cmp
popa
sub
ret
lcall
mov
xchg
rclb
filds
cmpsl
iret
cltd
cmp
xchg
or
add
cmp
repnz
mov
rclb
xchg
xchg
in
inc
in
into
ja
xor
lea
jp
push
xor
adc
cmpsl
mov
inc
ja
aaa
data16
shrb
xchg
out
jp
push
es
cmp
into
das
jp
outsb
fstl
popa
add
sub
push
lahf
test
inc
lock
in
pop
adc
movsl
out
xchg
cld
fs
sbb
mov
or
data16
bound
imul
outsl
inc
and
stc
xor
ds
ljmp
lret
sahf
mov
aas
dec
bound
test
inc
mov
push
dec
or
jmp
mov
jne
inc
les
rclb
xchg
sahf
cmp
push
xor
mov
jmp
sti
movsl
push
or
std
jne
jmp
mov
stos
or
stos
sahf
xchg
out
inc
cmp
mov
test
aaa
xor
push
pushf
fadd
dec
push
inc
and
sbb
hlt
sahf
mov
dec
push
sub
ftst
js
es
clc
push
imul
jecxz
loop
aaa
test
push
iret
call
in
mov
xchg
jne
in
xchg
push
cmpsl
push
aam
inc
lods
inc
ret
dec
cmpl
loop
lea
sbb
lahf
xor
xchg
aaa
stc
and
dec
lds
sub
dec
mov
scas
in
and
jae
shl
sbb
jns
xor
pop
aas
xor
clc
mov
xor
imul
pusha
sarl
loopne
and
rcrl
pop
xor
mov
dec
fwait
std
cli
fxsave
shr
dec
sub
loopne
mov
jae
sub
cmp
dec
inc
inc
pusha
mov
ror
push
mov
mov
adc
mov
inc
and
lret
lahf
mov
mov
and
xor
dec
iret
cmp
xor
ret
imul
mov
popa
or
cmp
xchg
in
jle
fcomps
adc
push
jb
push
hlt
lods
ja
in
and
xchg
lods
into
bound
push
xorl
push
cmc
mov
call
in
push
faddl
xchg
call
mov
sub
imul
mov
out
je
xchg
cmp
dec
or
push
push
fistpl
scas
sub
orb
pop
shlb
push
jmp
ljmp
xor
cmpsb
xor
pusha
jns
push
pop
xchg
push
sub
pop
or
inc
push
jg
loopne
ret
mov
gs
testb
mov
stos
insl
in
shl
into
ss
lcall
xor
lret
in
bound
test
loope
inc
imul
xor
out
repnz
sub
fstpl
cmpsb
mov
stc
inc
ret
fidivs
xor
lahf
mov
out
ljmp
jge
adcl
push
rcll
jmp
xor
push
sub
lock
fistl
popl
and
mov
mov
sub
sbbb
ret
dec
jl
adc
cs
mov
adc
lret
jne
fnsave
lret
aas
sub
and
cli
out
jns
add
cmp
adc
in
sbb
or
insb
je
movsl
cmpsl
jp
aad
int3
xchg
sub
mov
insl
and
shl
sub
push
data16
shl
mov
fldenv
cltd
lret
in
mov
fsubs
es
pusha
lret
sub
fsubrl
shll
orb
sub
pop
mov
in
scas
sub
mul
in
mov
xchg
stc
add
and
add
lock
fldt
push
cmpsb
dec
lods
push
xchg
jg
popa
int
xor
bound
lock
repnz
in
loopne
add
data16
push
pop
sub
mov
test
mov
or
addr16
mov
ss
repnz
dec
imul
and
push
fistpll
lret
fistpll
push
add
jmp
xor
mov
fcmove
inc
iret
gs
jle,pt
add
pusha
adc
cmp
popa
or
xchg
inc
pop
add
mov
xor
fldt
test
inc
outsl
nop
cld
sbb
loope
mov
sti
into
dec
jne
shrl
xor
pop
icebp
sub
xlat
xchg
or
imul
adc
cmpsl
out
data16
mov
cmpsl
lret
xchg
ss
pusha
sti
sbb
stos
int
mov
xor
outsl
xchg
dec
addr16
cs
daa
sahf
pusha
punpckhwd
hlt
xchg
lds
push
jge
cmp
push
scas
and
adc
je
pop
cmc
mov
mov
add
cld
fnstcw
pop
mov
scas
mov
imull
fildll
xchg
xchg
movsb
ja
xchg
mulb
insb
inc
jp
pop
push
cmp
pop
dec
sub
mov
mov
push
jns
jne
xlat
movl
outsl
push
pop
in
rol
push
cmpsb
cmpsl
pop
mov
test
cmpsl
push
mov
sub
push
stos
fcmovbe
cmp
and
test
into
cmpsl
int3
push
jbe
test
outsl
loope
pop
or
mov
xor
jp
pop
aaa
ret
inc
adcl
inc
lahf
push
mov
ss
test
jno
cmp
xor
sub
xchg
mov
aam
in
xor
cmp
jb
adc
adc
pop
jge
enter
sahf
or
xor
addr16
imul
out
push
shl
sub
aam
sbb
imul
mov
inc
shll
je
dec
test
push
inc
ror
fstpl
ja
jae
jmp
pop
push
cld
fadd
icebp
movsb
inc
xchg
test
shr
push
pop
add
sbb
add
xlat
pop
xor
cmp
out
push
xor
movsb
rclb
inc
addr16
mov
push
adc
sbb
lock
test
inc
add
dec
adc
les
cmp
xor
push
aaa
add
popa
xchg
sub
cltd
and
jne
xchg
mov
mov
cmpsb
xor
out
icebp
adc
xor
jge
ljmp
fidivl
lock
xchg
lods
cmp
out
cmp
or
xchg
sub
inc
mov
pop
lock
jecxz
jns
repz
push
push
stc
pop
dec
sub
xchg
push
movsb
jns
add
inc
pushl
adc
mov
call
insl
aam
jnp
in
jae
xlat
bound
gs
jg
imul
outsl
clc
imul
sub
dec
nop
xor
xchg
je
fsubl
jg
and
aaa
repnz
sub
push
xlat
lods
jmp
mov
push
popa
pop
out
jp
scas
aam
xor
sahf
dec
popa
test
or
inc
adc
push
fidivrl
dec
pop
xchg
xor
sbb
cmp
je
aas
das
shrl
cmpl
addr16
ficoms
aaa
and
inc
pop
test
mov
mov
cmpsl
push
xor
jg
out
imul
xor
adc
test
pop
aad
cltd
dec
jmp
lock
xor
pop
add
add
push
popa
test
lds
push
ss
sbb
push
test
cmp
or
leave
out
sbb
cld
mul
mov
xor
cmp
in
add
xchg
pop
inc
inc
adc
inc
enter
fcmovnb
rorl
mov
lea
mov
jp
mov
push
dec
pop
xor
pop
rcrb
push
loop
inc
sub
cmp
mov
mov
notl
icebp
push
pop
push
mov
or
add
push
aas
push
das
imul
enter
mov
push
cmp
imul
fcompl
xlat
aam
sub
bound
fldl
lret
sub
mov
xor
pop
shr
fwait
push
jl
pop
inc
mov
sub
mov
add
call
adc
inc
das
in
xor
push
mov
popa
mov
out
movsb
dec
arpl
sbb
pop
inc
jmp
pushf
icebp
cmp
mov
push
mov
xchg
loope
aam
scas
das
jg
mov
pop
mov
mov
or
add
outsb
xchg
push
and
insb
mov
ret
mov
das
and
cwtl
lock
sub
lret
call
movsb
push
jns
cmp
stc
mov
movsb
in
jle
mov
fimull
jl
jb
inc
popa
mov
in
cmp
gs
and
mov
cmp
push
cmp
xor
adc
sahf
sbb
pop
rolb
in
xchg
mov
cli
clc
mov
or
cmp
lods
mov
repnz
into
stos
int
adc
leave
enter
cmpsl
dec
in
mov
fsts
je
lods
ss
in
inc
test
lock
mov
ret
test
test
add
popf
fdivl
mov
into
bound
movsl
sub
xchg
jb
stos
mov
imul
rcr
mov
mov
xchg
dec
xor
sub
sub
jne
mov
mov
pop
mov
jmp
xor
sub
lock
adc
xchg
shll
pusha
ljmp
sub
xor
aad
mov
pop
popf
push
lods
sbb
call
scas
lcall
cld
mov
imul
sarb
dec
mov
lret
dec
push
xchg
cs
jne
outsb
filds
cmp
daa
cmp
insb
add
xchg
xor
icebp
dec
lock
cmpsb
inc
mov
in
jb
clc
xchg
pop
pop
jge
xlat
inc
mov
xor
cs
xor
and
pop
es
pushf
and
inc
xchg
inc
lods
jmp
inc
jp
addr16
sub
imul
and
add
js
scas
jg
mov
adc
xchg
imul
mov
fadd
ss
mov
xor
inc
adc
push
movsb
add
stos
scas
pop
pop
mov
mov
pop
xchg
mov
cmp
ljmp
inc
test
cmp
push
movsb
sbb
mov
or
fld
mov
ss
xor
add
daa
lock
sub
lahf
fs
icebp
mov
das
pusha
jmp
lock
mov
movsl
lock
push
popf
xchg
and
fnstenv
lods
ds
stos
repz
aaa
mov
cmpsl
scas
xchg
push
in
or
out
mov
jp
lea
jno
or
sbbb
add
rcr
or
lcall
bound
pop
xchg
lock
test
dec
and
and
mov
insb
mov
jne
pop
cmp
ljmp
push
lock
scas
sub
rcrb
rorl
jg
mov
loop
shll
cmpsb
or
mov
pop
mov
mov
jle
mov
ror
cmp
and
jp
push
stos
jp
xchg
xchg
xor
push
lret
and
mov
je
gs
sbb
ljmp
data16
push
enter
das
loopne
jmp
push
pop
movsl
jne
inc
aas
sti
and
lock
cmc
push
xchg
pop
or
xor
test
push
sbbl
mov
inc
or
mov
dec
push
sti
hlt
lods
test
add
movsb
mov
push
dec
xchg
test
fisubl
mov
sub
sub
xchg
add
aas
pop
enter
add
cmpsl
pop
jnp
in
cmp
ljmp
pop
and
mov
sbb
xchg
xchg
or
stos
pop
xor
pop
push
int
lods
cld
subl
leave
loop
sub
in
cmp
cli
lcall
xchg
sbb
popa
lods
jns
inc
jg
dec
dec
imul
cwtl
rcrb
push
in
xchg
lock
cli
mov
int3
xlat
bound
fdivrl
aas
dec
sbb
shl
inc
pop
adc
enter
test
insb
adc
fildl
ljmp
push
lods
push
mov
sub
inc
clc
jge
ret
dec
sub
jb
pushf
sub
and
fnstcw
hlt
cmpsb
add
mov
popa
jbe
cwtl
jno
aad
out
dec
arpl
xchg
and
jg
scas
add
scas
dec
cltd
sbb
sbb
adc
xchg
mov
inc
comiss
sahf
jp,pn
lcall
push
mov
pop
sbbb
cld
sbb
cs
mov
add
aaa
pop
mov
or
movsb
xlat
pop
jno
mov
add
xchg
mov
cmp
adc
lahf
orl
bound
mov
andl
cmp
add
das
push
mov
test
push
loopne
aam
xchg
call
movsb
and
mov
sbb
and
mov
lret
dec
sub
add
and
cmp
outsb
jle
adc
pop
rclb
ja
mov
roll
push
jns
push
das
stos
mov
mov
lock
adc
ljmp
bound
in
add
push
f2xm1
outsb
xchg
push
icebp
mov
and
add
sub
stos
sbb
and
mov
notb
sub
fstl
xchg
pushl
add
xor
cmp
xchg
dec
pusha
xlat
movsl
mov
push
xor
mov
lods
movsb
movsl
lock
fnstcw
imul
clc
les
ret
adc
je
lds
aad
addr16
dec
push
lret
fists
pop
add
push
test
in
jle
arpl
mov
or
rorb
inc
test
data16
mov
push
and
pop
imul
cwtl
aam
cmp
adcb
lods
mov
xchg
push
sub
xor
xchg
jne
sbb
ds
bound
test
dec
pop
xchg
arpl
mov
jns
xchg
jnp
cld
or
aam
inc
xchg
jb
aad
iret
sbb
sbb
leave
cmp
insb
cwtl
stos
sub
addr16
mov
fwait
ljmp
sbb
lret
sbb
inc
out
jge
rorl
sub
lods
pop
in
popa
aas
sub
idivl
test
mov
in
hlt
inc
lock
sbb
sub
adc
inc
or
sub
pop
das
jmp
fmuls
cwtl
subl
data16
js
push
pop
dec
mov
inc
movsb
ss
leave
sub
lds
lcall
wbinvd
bound
sti
cmpsb
sub
mov
ficoms
dec
add
cmp
add
push
lahf
lods
and
sub
mov
add
push
inc
aam
fs
xor
ja
stos
inc
xor
imul
movsl
test
jno
in
ss
sbb
ret
ret
fdivrs
loop
jle
xor
movsb
aaa
addb
push
fucomp
adc
xchg
jne
shlb
fbld
xchg
adc
sbb
cmp
push
decb
or
gs
scas
jmp
divb
stc
sbb
inc
stc
jp
hlt
pop
mov
dec
pop
push
cmpsb
in
jmp
in
jae
dec
out
daa
cmp
mov
cwtl
ficoml
bound
shr
pop
clc
scas
sub
stc
xor
mov
push
lods
aaa
fidivs
icebp
push
mov
and
int3
cmp
jmp
scas
cmc
rorb
push
mov
jns
out
imul
sbbb
push
das
shl
xorb
jnp
jo
clc
sahf
mov
test
leave
xchg
mov
mov
pop
sub
adc
lds
inc
outsl
and
mov
inc
leave
outsl
pop
lock
jp
frstpm(287
shrb
out
test
sbb
dec
push
or
data16
je
xorl
mov
inc
bound
in
bound
mov
xor
push
jl
push
pop
and
push
inc
or
mov
mov
ss
pushf
cltd
sub
pop
xchg
adc
in
push
dec
rcll
cmp
ds
outsl
into
insl
xchg
push
push
lock
adc
adc
test
mov
lods
cli
and
sub
test
into
fadds
xor
sbb
popa
fsubl
outsb
mov
adc
rcll
push
mov
mov
pop
rorl
pop
jne
sub
mov
sti
mov
subb
jp
sub
push
xchg
add
add
mov
push
jns
shll
sbb
data16
outsb
fcmove
adc
loope
pusha
je
outsl
mov
jmp
jge
leave
dec
pop
shrb
dec
dec
push
push
hlt
inc
dec
mov
rcll
mov
sub
dec
xor
repz
hlt
sbb
dec
stos
movsb
jge
pop
pop
das
movsl
push
mov
out
push
push
add
arpl
adc
notl
mov
pop
xchg
xchg
cld
and
jnp
mov
inc
stc
test
push
into
mov
iret
pop
cmc
cmp
jne
push
mov
fcoms
inc
mov
sub
mov
scas
sbb
js
jae
inc
inc
popaw
push
rcrb
imul
addr16
sub
jmp
mov
ret
cs
mov
jne
adc
icebp
ja
pop
mov
xlat
cli
inc
xchg
xor
jnp
push
sub
cmp
dec
inc
push
adc
inc
inc
sub
hlt
in
or
push
cmpl
jmp
jecxz
xchg
inc
pop
add
xchg
aaa
dec
add
adcb
icebp
lret
mov
mov
repz
mov
jae
jmp
pop
subb
mov
mov
xchg
stos
aad
scas
popa
dec
das
jb
cmp
push
jne
test
clc
hlt
and
dec
push
adc
movsl
xor
push
mov
pop
xchg
outsl
xchg
mov
jg
and
jnp
sahf
sub
mov
dec
sbb
lcallw
add
cwtl
stos
pop
add
fnstenv
inc
movsb
jnp
mov
shrb
daa
test
data16
push
loop
cld
jge
fidivl
movsb
mov
push
pushl
xchg
jmp
aam
sbb
push
mov
sti
xchg
inc
sbb
adc
cmp
jge
push
loopne
lret
out
sub
jg
dec
inc
xorb
add
xchg
lock
xlat
das
stc
test
loope
sub
rorb
add
push
jno
sub
mov
cmpsb
inc
fcoml
push
xor
jnp
cmp
cmpsl
sbb
aad
push
and
xor
hlt
xor
js
lock
stos
fnstcw
test
movsl
xor
lahf
pop
dec
imul
leave
ljmp
js
mov
in
or
test
jle
popf
lods
adcb
push
sub
addr16
sbb
lock
cltd
lods
mov
fwait
pop
inc
ljmpw
mov
push
out
cmpsb
xor
mov
push
std
xchg
sti
hlt
mov
sti
xchg
stos
imull
pop
movsl
lods
bound
push
movsl
sahf
jnp
es
add
ficoml
inc
push
or
lods
push
xchg
push
repz
movsb
push
mov
sub
fisttpl
sti
mov
push
cmp
lods
stos
dec
inc
and
scas
pop
dec
cmpb
pop
pusha
cmp
jnp
aad
lcall
dec
fcmovnb
popf
movsb
sub
add
imul
imul
pop
ljmp
clc
imul
add
dec
movsl
repnz
icebp
sbb
push
adc
pop
xor
mov
ds
pop
add
imul
test
add
pop
or
inc
lahf
popf
scas
pusha
mul
sub
mov
pop
push
sub
lds
cmpsb
ret
dec
fldt
fdivrs
loope
out
xchg
mov
push
sub
hlt
jmp
adc
pop
dec
pop
fwait
sbb
fs
cwtl
cmp
stos
addr16
loop
pop
or
pushf
xor
push
dec
mov
cmp
add
fbld
out
pushf
mov
ljmp
enter
and
je
cmp
push
bound
insb
sub
push
sti
push
fistpl
in
in
sbb
js
xor
stc
jecxz
lods
testb
push
or
movsb
pop
push
das
jp
stc
daa
lret
js
push
imul
inc
stc
jbe
inc
xchg
mov
xor
dec
in
jns
push
push
push
or
lea
cmp
fwait
mov
scas
lock
in
mov
or
lahf
add
mov
in
sub
add
and
movsb
lock
or
xlat
sbb
mov
test
es
imul
lcall
xchg
repz
cmp
pop
mov
lcall
jle
sub
and
in
cmp
outsl
into
mov
decl
jp
mov
xor
out
sahf
scas
xchg
cmp
out
mov
jno
sbb
push
jmp
or
push
ret
scas
lahf
std
mov
outsb
sahf
shll
into
in
loope
xchg
mov
popa
stc
fisubrs
scas
sbb
fwait
sbb
or
mov
pushf
push
add
adc
xor
dec
push
push
mov
imul
pop
jns
mov
inc
mov
enterw
cmp
xor
lock
test
inc
pop
mov
push
mulb
mov
cld
cmpsl
andb
pop
cmp
mov
push
movsl
inc
mov
jae
cmp
lock
dec
add
mov
cmp
es
jo
sub
icebp
xor
or
mov
ret
sbb
call
in
ds
mov
and
negb
adc
push
in
ss
faddp
ljmp
add
or
ss
dec
mov
mov
xor
in
pop
pop
fs
or
cltd
push
jbe
mov
lods
inc
ljmp
add
mov
cmpl
inc
rorb
xor
hlt
sbb
mov
pop
stc
adc
ljmp
call
mov
pop
cmp
xchg
pushf
ds
adc
dec
and
or
xor
and
in
mov
loope
push
out
xor
cmp
mov
dec
jge
jmp
mov
scas
jmp
inc
xchg
aas
roll
mov
pop
pushl
or
mov
sbb
and
test
mov
cmc
movsl
int3
aam
sub
rolb
push
push
inc
dec
scas
mov
cmp
lds
call
fwait
in
test
jp
rcl
push
jle
sbb
inc
fldt
xor
cmc
leave
push
cmpsb
xchg
ds
xor
loopne
movsb
sub
arpl
pop
dec
xor
xchg
sahf
or
icebp
divb
icebp
movsl
imul
movsb
mov
xchg
addr16
cmp
mov
test
sub
cmp
push
negb
movsb
xchg
xor
clc
sahf
out
adc
aas
xchg
dec
cld
push
lds
les
add
addr16
repnz
inc
repz
xor
mov
cld
mov
aam
mov
push
mov
movsb
ret
cmp
mov
push
lds
cmc
rcll
scas
cwtl
imul
sbb
lock
into
hlt
les
dec
imul
icebp
mov
bound
fucomi
push
xor
popa
lock
sbb
bound
xchg
jl
clc
push
cmp
or
xchg
push
sbb
cmpsb
lods
imul
pop
out
jo
aad
mov
pop
in
lods
imul
shll
push
add
clc
movsb
add
inc
cs
sti
sub
pop
aaa
outsb
xor
lock
push
ret
or
xchg
inc
cmp
xor
push
cs
mov
or
and
fstl
scas
adc
stos
and
sbb
outsb
sbb
call
xor
int
cmpsb
push
push
sbb
lock
xchg
ffreep
sahf
bound
ficomps
sub
bound
sbb
and
inc
sub
aas
sub
lods
inc
lds
pushf
loop,pt
gs
repz
popa
inc
mov
or
mov
aad
push
cmp
cwtl
mov
push
or
push
sub
cmpsb
test
jns
stos
pushf
filds
ret
pop
repz
inc
xor
cmp
out
rorl
lds
xor
pop
sahf
out
pop
dec
xchg
mov
cmp
shll
rcll
andb
es
aam
sti
cmp
movsl
sahf
lcall
pop
jl
jbe
data16
mov
js
inc
mov
adc
in
push
xor
or
or
sub
das
sbb
bound
push
pop
icebp
adc
sbb
jno
cmp
dec
sbb
xchg
iret
stc
or
lret
lods
xor
dec
jns
mov
mov
fwait
or
inc
mov
adc
lahf
xchg
imul
out
dec
arpl
push
xchg
push
xor
jne
outsb
sub
movsb
mov
into
or
ljmp
or
lret
lock
inc
adc
mov
and
leave
xchg
cmp
rolb
pop
pop
les
jmp
sub
or
push
mov
sub
pop
lock
stc
roll
cmpb
rcrl
xchg
mov
lds
xor
push
xchg
xchg
mov
lcall
inc
or
lock
inc
sbb
mov
imul
bound
sbb
fmul
jp
stos
sub
scas
inc
cmp
mov
push
and
mov
cltd
lock
loopne
lahf
pop
or
pop
push
inc
call
ret
das
xchg
or
jecxz
test
scas
xchg
stos
fstpl
sub
xchg
inc
cmp
inc
or
xor
pop
js
into
lods
xorl
fbld
sub
sub
push
or
cmp
aas
fcoml
mov
push
sbb
mov
pop
jnp
pop
add
pop
fldt
aad
mov
lea
xchg
repz
inc
mov
inc
in
test
inc
cmpsl
xor
push
test
jl
in
xlat
clc
int
sub
cmp
adc
aaa
jmp
lret
data16
sub
sti
jae
inc
out
cmpsb
into
pop
je
pop
scas
lock
mov
cs
popa
stc
pusha
pop
mov
sub
mov
add
or
mov
mov
mov
mov
mov
sbb
add
imul
movsb
insl
push
inc
leave
xor
dec
ret
sahf
mov
adc
or
lds
shl
inc
inc
and
adc
inc
sub
les
pop
adc
dec
xchg
out
mov
fiadds
out
das
mov
jle
cltd
aas
mov
es
push
xor
pop
test
enter
cmc
arpl
test
mov
jge
pop
cmp
aad
int
inc
adc
sub
mov
cmpsb
test
lds
push
xor
out
les
and
inc
inc
std
into
aas
add
fisttps
in
cmpsb
jp
insl
add
and
or
add
adcb
xchg
pop
in
das
xchg
sbb
and
mov
lahf
push
leave
loopne
or
es
pop
inc
das
xchg
addb
jo
inc
xlat
stc
icebp
adc
xchg
sub
sub
jg
imul
push
cld
pop
dec
jp
popa
adc
xor
push
ljmp
mov
pop
in
icebp
adc
loope
pop
pop
or
xchg
imul
lock
mov
mov
scas
pushf
push
lds
jnp
jg
ja
mov
add
movsl
push
mov
dec
xchg
cmpsl
sbb
sub
mull
repnz
jbe
inc
adcb
xchg
cs
out
repnz
les
adcb
xchg
push
roll
xchg
and
push
xor
cld
leave
int3
adc
xor
mov
lods
loop
insl
and
pop
cld
or
jo
imul
dec
cs
test
subl
pop
xchg
test
mov
test
insl
dec
xchg
adc
out
mov
ljmp
inc
mov
ror
jne
pusha
cmpsl
push
cmp
inc
or
xor
and
mov
clc
leave
xchg
iret
cmp
cmpsb
in
jb
jp
das
jp
sbbb
fsts
insb
sbb
mov
add
jo
lahf
movsl
hlt
in
imul
push
or
idiv
lods
adc
data16
xchg
fsubrl
repnz
mov
push
xchg
cmp
pop
dec
mov
out
data16
imul
imul
mov
xor
fnsave
clc
gs
and
mov
in
lods
adc
jae
jnp
daa
inc
ss
sub
jle
lods
and
movsl
mov
inc
in
fs
pop
cmc
in
add
loope
sub
aam
in
lods
and
xchg
mov
cmp
movsl
stos
sub
pop
mulb
lock
leave
push
lods
je
add
es
imul
lock
in
movsl
scas
xchg
clc
jno
mov
mov
stc
push
ret
test
pop
mov
cld
add
ret
pop
inc
ds
and
popf
call
fiaddl
hlt
movsb
pop
or
mov
and
lret
lock
in
pusha
and
pop
cs
cmp
sti
rcrl
push
roll
pop
mov
mov
add
int3
clc
aam
xchg
dec
push
adc
xchg
pop
icebp
jmp
inc
dec
sub
xchg
es
scas
popa
sub
test
and
adc
fwait
int3
mov
jb
cmp
fs
or
test
mov
pop
mov
push
aad
jno
xor
push
mov
jae
jl
mov
je,pt
xchg
int3
push
fnstenv
cs
test
outsb
cli
js
pop
fwait
cmp
pop
xor
or
in
cmp
or
sub
add
cmp
pop
je
sti
xor
test
add
call
aas
lahf
or
ja
mov
jmp
pop
sub
xchg
or
xchg
push
add
inc
mov
in
test
inc
loopne
bound
pop
inc
mov
sub
xchg
cmc
iret
aaa
orb
gs
xor
push
sbb
xchg
and
ret
push
xor
cmc
dec
pop
and
inc
stos
inc
leave
and
sbb
push
jecxz
push
xchg
pop
and
icebp
es
testb
int3
cmpsl
les
xchg
bound
jl
xor
jbe
sarl
xor
jne
scas
loope
jo
inc
push
jns
mov
es
in
inc
lock
mov
out
jne
sub
movsb
pop
xchg
inc
cli
sbb
jnp
mov
lods
lcall
xchg
sarl
mov
out
out
xor
jne
test
fiaddl
out
or
sti
mov
movsl
fwait
xor
call
int
push
xor
or
pop
pop
test
je
mov
sub
cmc
adc
mov
arpl
jnp
imul
fadd
or
dec
daa
lock
in
sti
adc
mov
sub
mov
push
addr16
mov
sti
xchg
xchg
movsl
push
or
cwtl
xor
xor
cmpsb
jg
stos
aas
fimuls
ja
jl
jns
ljmp
push
inc
ljmp
cli
fsts
outsl
es
js
mov
xor
and
inc
sub
mov
cmpsb
les
dec
std
sub
or
push
jb
xor
push
xchg
push
pop
je
add
or
outsb
pop
iret
movsl
lock
fidivs
popf
adc
sub
xchg
pushf
les
jg
jp
mov
mov
push
lcall
push
jp
cltd
jb
sub
loopne
ljmp
popa
outsl
pusha
mov
inc
mov
lods
jmp
stos
es
mov
sbb
je
incb
cs
test
or
pop
stos
dec
mov
pop
or
in
arpl
jle
add
xor
lock
in
mov
fildll
and
jae
push
sbb
xor
mov
inc
ds
push
pop
sub
rcll
push
or
or
xlat
fsubrp
scas
ret
std
xlat
jg
inc
push
cli
in
cmpsl
arpl
pop
shll
xor
xchg
pusha
add
dec
add
jmp
dec
sub
lock
ja
sub
pop
pop
inc
jg
push
inc
or
adc
sub
push
xor
add
dec
jno
shll
leave
rolb
mov
pusha
bound
sub
jmp
sbb
mov
shr
data16
fimull
aam
gs
inc
lds
sub
cmp
push
pop
push
addr16
sbb
mov
icebp
add
std
push
pop
jnp
je
inc
lcall
push
ja
lret
imul
aad
inc
js
ljmp
loop
push
test
fisttpll
push
mov
adc
std
mov
or
fisttpll
jg
dec
xchg
bnd
mov
insb
push
nop
dec
mov
xlat
xorb
inc
pop
bound
or
or
in
mov
leave
insl
inc
lods
cld
leave
jp
negb
mov
rcrb
int
test
int3
lods
inc
cld
fmuls
sub
dec
xor
insb
xchg
out
ljmp
sub
cmpsb
or
cmpxchg
stos
ljmp
leave
xor
rorl
mov
sub
mov
sub
pop
xchg
mov
sub
rcrb
test
cmc
sahf
inc
ficomps
fiaddl
inc
xlat
mov
icebp
mov
in
mov
out
lds
xor
inc
push
scas
push
stos
or
cmp
pusha
sub
pop
stos
lock
pop
sub
add
imull
test
sub
inc
push
fwait
enter
popf
nop
cld
add
sub
ret
out
fs
test
movsl
mov
lds
pop
mov
sbb
rcrb
jp
shll
sub
js
mov
in
std
add
xchg
fnstsw
and
ljmp
xor
fwait
mov
xchg
cwtl
jmp
lods
push
sub
push
mov
inc
insb
int
andb
add
cmp
mov
jmp
bnd
or
jbe
and
mov
out
dec
sub
cmp
lds
cmp
push
das
sub
mov
mov
aaa
cmpb
dec
out
inc
cltd
inc
pop
daa
loop
mov
cld
add
sub
cwtl
loope
ucomiss
mov
pop
in
and
mov
pop
adc
stos
loop
dec
inc
cpuid
pop
jns
sub
cmpsb
arpl
pushf
jb
ljmp
into
sub
subl
jns
lahf
arpl
addr16
cmpsl
clc
sub
adc
cmp
lock
call
ds
loop
ret
stos
lret
ja
popa
divb
xlat
xor
sub
cli
notl
xor
mov
and
sub
jmp
jnp
mov
sub
out
daa
cmc
dec
xchg
in
sub
pop
xchg
lahf
sub
pop
ret
movsb
data16
or
shll
enter
fs
sarb
pop
sub
or
pop
cmc
loop
pop
fs
bound
leave
jle
test
xchg
inc
xor
sub
push
and
fxch
and
jle
xchg
sub
movl
pop
stos
adc
sbb
sub
ret
sub
add
stos
sub
fmuls
sub
mov
xchg
and
fcoml
int
xor
inc
repnz
mov
call
cmc
sti
inc
jns
outsl
push
nop
sub
jae
xchg
xchg
mov
out
out
mulb
push
lea
out
fisttpl
cmp
dec
out
sub
test
pushw
lds
insb
mov
pop
outsb
bound
movsl
addb
popf
paddq
ss
dec
inc
out
pop
cmp
sub
adc
stos
mov
sub
notb
inc
inc
cmp
jmp
cmp
sub
push
jecxz
sub
out
sahf
leave
mov
mov
orb
ljmp
das
cmp
rorb
cmp
sub
pop
in
pop
mov
je
pop
pop
rcrb
out
and
aaa
imul
movsl
call
insl
imul
js
ret
sub
mov
xor
in
ja
imul
sub
and
mov
and
fnsave
inc
sub
jp
icebp
cmpsb
stos
leave
movsl
add
cmp
cli
add
mov
mov
icebp
hlt
orl
out
pop
daa
mov
and
mov
rclb
imul
xchg
mov
sub
mov
sbb
jecxz
pop
daa
jo
jge
leave
sub
fdivrp
shrb
xor
sub
mov
xchg
ljmp
shlb
inc
and
cli
dec
inc
std
or
cmpsl
aad
sub
pushf
jo
sub
adc
fsts
sub
xor
xchg
int
fcmovb
mov
mov
dec
jmp
pushf
and
sbb
jmp
push
loop
adc
aaa
pop
sub
mov
ds
test
mov
mov
jns
jne
ja
sub
das
mov
dec
out
sub
in
dec
dec
sbbl
fs
inc
ret
test
mov
mov
mov
add
pop
jl
sub
leave
addr16
les
mov
xlat
pop
pop
scas
call
in
pushf
push
leave
icebp
mov
jp
dec
mov
dec
or
and
lods
mov
pop
dec
mov
movb
add
sub
aaa
sti
aas
mov
inc
sub
lcall
xor
pop
pop
scas
inc
jb
cmpsl
lock
pop
test
mov
jmp
bound
mov
jne
cmc
jmp
and
int3
pop
push
outsl
pop
in
int
test
sti
in
push
fst
pusha
flds
pop
or
loope
imul
shr
lock
fsubs
sbbb
cmp
jno
lock
std
add
sbb
dec
pop
loope
data16
mov
cmp
xchg
das
cld
add
test
push
nop
lock
push
mov
popa
inc
pop
or
sahf
subb
cmp
jp
mov
mov
add
repnz
xor
cmpsl
test
jecxz
hlt
aaa
nop
pop
xchg
xor
push
mov
add
xchg
lcall
sub
sub
insb
pop
pop
jmp
int3
leave
not
fwait
sub
repz
aam
jnp
repnz
rcl
add
jecxz
mov
push
and
imul
dec
lahf
lods
pushf
push
aad
cmpsl
std
xchg
popa
sbb
nop
inc
dec
push
jge
into
cmpsl
bound
scas
mov
mov
mov
jmp
adc
lock
mov
sub
mov
mov
imul
nop
push
dec
vpunpckhqdq
insb
dec
push
and
leave
xor
fs
xchg
dec
in
or
scas
clc
push
ss
mov
mov
ret
in
ret
testl
jbe
aam
lock
mov
data16
movsb
push
xor
pusha
addr16
add
dec
scas
loope
jb
in
shlb
dec
mov
xlat
rcrb
jmp
pop
sbb
add
dec
mov
int
jl
add
les
ljmp
sbb
lcall
int
push
das
jbe
ret
mov
int3
cld
sbb
or
jg
ss
aad
sti
lret
test
test
call
popa
mov
rolb
in
dec
pop
in
add
shlb
xor
mov
cmp
dec
or
lds
xchg
or
push
jmp
push
fcompp
pop
adc
add
mov
leave
mov
mov
mov
bound
cli
pop
imul
cmp
test
xor
xchg
imul
pop
fistpl
call
sub
ja
aam
sbb
call
lret
cmp
sbb
iret
sbb
movsl
in
cmp
dec
xchg
cwtl
test
dec
mov
rolb
or
mov
cmp
and
pop
add
ja
shll
gs
fstpl
push
fiaddl
loope
push
or
pop
rolb
mov
add
rcrl
pop
lods
jne
fbstp
pusha
popf
js
aaa
adc
pop
add
out
pop
dec
cmp
es
dec
mov
rolb
pop
cmp
push
xchg
cmc
repnz
cmpsl
mov
pop
bound
movsb
ljmp
icebp
cmp
imul
sbb
test
fistl
cmc
ret
xor
aam
jecxz
out
les
inc
mov
sub
jmp
imul
jg
adc
in
fldenv
and
iret
pushf
cmpsb
sbb
mov
and
sub
xchg
inc
push
mov
or
lret
ret
sahf
jns
jmp
xor
pop
pop
xchg
clc
or
xchg
dec
dec
adc
push
aas
or
or
cmpsb
in
jae
cmp
push
sbb
and
or
mov
ljmp
fistpl
icebp
sbb
adc
add
pushf
sub
enter
cmp
js
sbb
push
push
fsubr
imul
ds
icebp
inc
lret
jp
xchg
xor
xchg
cmp
or
call
dec
jp
sti
lock
int3
loope
cmpsl
pop
dec
and
sub
lods
lods
mov
push
ljmp
aam
add
push
test
or
fs
into
leave
leave
movl
ficoms
cmp
std
xor
and
mov
pop
cld
hlt
mov
mov
std
adc
dec
psrld
insl
lret
lods
dec
aad
lret
pop
rcrb
and
daa
sahf
sti
addb
shlb
lods
ss
push
fwait
mov
push
inc
push
lods
adc
out
int3
divb
dec
inc
movsb
cmp
pop
dec
pop
push
mov
mov
fcomi
xchg
ss
fsubrs
jge
test
es
bound
push
mov
mov
inc
mov
mov
out
sahf
loope
fs
insb
inc
cmp
shlb
sbb
dec
in
pop
shll
sbb
xor
dec
jp
inc
imul
jecxz
xchg
cmpsb
push
jmp
jae
lea
stos
sbb
pop
pop
mov
add
xor
sti
adc
mov
popf
test
cmp
adc
loopne
dec
call
imul
xor
mov
pop
push
int
mov
std
push
sub
mov
fsubl
xchg
out
mov
movsb
mov
or
ljmp
inc
inc
xor
inc
mov
out
push
dec
jmp
mov
push
pop
sti
scas
clc
imul
insl
and
sub
aam
mov
jmp
stos
push
lods
fs
dec
ljmp
aam
pop
lahf
int3
arpl
cld
sub
jmp
jmp
xlat
aam
xchg
test
sub
nop
adc
gs
xor
repnz
push
inc
rcr
jge
cmp
out
sub
inc
push
push
clc
stos
or
jnp
pop
je
rcrb
and
add
and
imul
je
addr16
lcall
pop
mov
ficoml
movsl
xor
xor
sub
inc
pop
and
sti
mov
pop
in
sahf
xchg
movsb
mov
add
popf
int3
outsb
pop
push
push
enter
test
shlb
add
xchg
or
sahf
or
in
loopne
adc
push
in
xchg
mov
pop
inc
fwait
sarl
pushfw
loopne
inc
push
adcb
sbb
inc
das
jp
xchg
jbe
hlt
mul
fndisi(8087
sub
dec
pop
xchg
mov
inc
inc
adc
xchg
xchg
enter
cli
fwait
cmp
lea
jae
addr16
dec
insb
daa
mov
mov
ror
jae
in
dec
sbb
movsb
cltd
dec
pop
imul
sbb
jmp
sub
cwtl
insl
lock
pop
xor
add
push
nop
xorb
ljmp
out
sub
lods
popf
enter
mov
xor
add
out
loope
scas
add
ret
sub
xorl
mov
in
lock
mov
inc
outsl
or
add
xor
push
jp
ret
rcrb
insl
xchg
addb
push
jmp
push
sahf
jmp
in
jg
popa
loopne
xor
roll
mov
cwtl
push
adc
sub
mov
fsubrp
pop
pop
push
sub
int
mov
xor
push
jmp
pop
sub
cmp
push
jns
xor
adc
mov
bnd
jp
xor
push
dec
push
mov
and
inc
jecxz
mov
inc
hlt
adc
fistl
mov
cld
mov
xor
push
test
inc
add
lret
pop
or
lock
pop
adc
adc
loop
mov
ficomps
mov
enter
xor
inc
xchg
xchg
test
aad
push
jle
data16
shrb
inc
adc
jnp
ror
pop
sub
inc
insb
cwtl
fs
push
or
lock
aam
dec
imul
xchg
or
sub
test
in
scas
into
ret
mov
add
dec
movsl
add
mov
out
adc
push
inc
arpl
jno
push
mov
sahf
fiadds
push
adc
hlt
test
ffree
mov
sbb
aad
cmpsl
shll
and
icebp
adc
sub
push
call
mov
push
cmp
jp
push
mov
in
or
clc
inc
arpl
outsb
jle
mov
repnz
pop
pop
or
cmp
push
cmp
sbb
nop
inc
iret
pop
test
fsts
lods
mov
xchg
add
in
jmp
cmpsl
sub
sbb
cmpsl
mov
lock
adc
aam
mov
mov
push
sub
inc
fldl
addr16
lcall
push
push
xor
std
and
icebp
xor
pop
pop
push
fmull
and
add
push
push
enter
aad
out
and
roll
mov
sub
call
push
cmp
push
sub
lock
gs
inc
push
gs
jmp
dec
cs
xor
stos
scas
or
dec
andb
adc
cli
mov
in
sub
adc
xor
and
mov
pushf
pop
push
dec
test
sub
aaa
push
mov
xor
adcb
les
pushf
push
add
xor
bound
push
sbb
les
cmp
xor
pop
fimull
and
and
fidivs
test
loopne
aas
scas
add
stos
lcall
adc
fildll
sub
add
mov
mov
arpl
rcrl
and
test
xor
cmp
jmp
xlat
fnstsw
sub
mov
push
stos
adc
lcall
pusha
push
addb
mov
leave
pop
clc
push
sub
popw
sub
cmp
jge
jp
xchg
mov
sbb
outsl
addb
pop
mov
xor
loope
sbb
xchg
lret
fsubs
out
inc
jl
jae
add
jmp
out
mov
int
shrl
pop
cmp
mov
jno
pop
gs
mov
push
add
leave
xor
mov
test
addb
addr16
or
push
xchg
out
lock
mov
stos
pop
aad
sub
pop
movsb
adc
cmp
ljmp
data16
aaa
inc
cmp
sub
sub
loop
aad
adc
lret
mov
in
call
jp
push
fmuls
stc
leave
mov
loope
call
push
cmp
and
dec
mov
or
sub
push
or
xor
xor
jp
dec
in
add
movsl
cmp
ds
xchg
into
mov
mov
cmp
lds
stos
and
pop
xlat
dec
lods
xor
push
lods
xor
mov
lock
jge
push
dec
pop
pusha
add
test
push
or
nop
int
das
xor
jo
add
ss
cwtl
fstps
pop
sbb
inc
lock
and
js
out
add
ret
rcll
cmp
movsb
ja
adc
aad
pop
insb
jmp
xor
mov
mov
in
pop
jp
sub
in
jecxz
add
jnp
movsl
jle
sbb
inc
push
ret
cmp
xchg
pop
out
hlt
or
xor
das
add
cli
shlb
hlt
stos
in
roll
push
inc
leave
push
add
iret
mov
xor
inc
popa
out
mov
aas
mov
gs
sbb
in
sub
leave
sbb
add
mov
inc
push
jp
xor
pusha
pop
mov
pusha
xchg
mov
ja
push
dec
or
arpl
mov
xor
in
push
jmp
push
sbb
daa
sub
imul
xchg
xor
pusha
fwait
out
jmp
jmp
movl
out
push
xchg
ret
std
sub
das
and
or
cmp
or
mov
jbe
pop
inc
push
outsb
mov
adc
pusha
inc
add
bound
sbb
add
push
js
stos
hlt
mulb
jg
jmp
iret
popa
mov
mov
push
push
sbb
scas
ds
push
jne
push
sti
stos
mov
jle
ljmp
enter
cmpsl
and
sbb
pusha
shll
in
push
loop
arpl
ret
jo
mov
in
inc
test
repnz
sub
jg
cltd
dec
cmp
and
cmp
out
mov
hlt
dec
arpl
pop
aad
hlt
pushf
push
jmp
arpl
and
shrw
push
jmp
in
sarl
or
cmp
xchg
and
mov
jnp
push
push
data16
push
xchg
fildll
mov
lret
adc
fldl
xchg
mov
int3
iret
out
mov
lds
cmp
aam
cltd
fimull
test
or
leave
push
sti
out
loope
adc
inc
add
xchg
mov
ret
repz
cmp
add
and
lods
shll
scas
ds
fidivs
add
fbld
jns
fildll
dec
add
es
rcl
mov
jge
mov
xchg
mov
outsb
fwait
in
sub
inc
dec
jo
test
sbb
inc
sub
cmp
lock
xor
sbb
lret
adc
aaa
xor
or
mov
or
int
jge
push
push
xchg
lods
jmp
xor
call
movsb
xor
jae
jns
mov
fldcw
inc
test
jmp
pop
outsl
insl
ja
out
test
aas
imul
xor
lret
sbb
hlt
loopne
ja
add
int3
cmp
in
xchg
xchg
lds
stc
js
push
fnstsw
leave
jno
call
dec
inc
xor
lret
outsl
inc
inc
xchg
sbb
sti
or
adcl
imul
dec
gs
push
mov
sub
sahf
sbb
add
aad
push
in
std
push
push
push
or
cmpsl
push
fdiv
add
xlat
push
xchg
js
mov
mov
lods
push
shr
call
loopne
sub
sub
jns
cld
xchg
mov
pop
sahf
dec
mov
sub
in
sahf
jecxz
lods
xlat
jmp
andl
mov
pop
xchg
js
aad
sub
mov
inc
lock
data16
call
and
rcrl
aas
mov
pop
inc
mov
xchg
push
aad
scas
add
push
lahf
push
dec
adc
sub
aam
fucomi
stos
inc
into
cmpsl
sahf
push
ds
push
int3
and
imul
inc
add
push
xchg
test
sbb
and
push
xor
in
inc
mov
bound
cmp
lahf
adc
mov
pop
and
sub
stos
xchg
or
jb
icebp
inc
sub
push
push
add
fidivrl
pop
xchg
aas
loope
jecxz
pop
push
sub
push
dec
jp
push
insb
jl
icebp
sbbb
or
in
push
fidivrl
jne
cmp
je
imul
addr16
enter
mov
or
xor
cmpsl
push
xor
cmp
xor
inc
in
imul
sub
loope
movl
add
dec
lret
mov
inc
sbb
lock
inc
push
add
imul
cmp
ds
in
push
test
cmpsl
push
and
shl
in
movb
push
mov
inc
push
icebp
adc
push
xchg
aad
push
inc
test
sub
rcll
and
clc
and
lock
cli
sub
dec
dec
jg
addr16
addr16
call
pop
pop
mov
repnz
icebp
fdivrs
dec
movsb
mov
push
lods
inc
mov
cmp
inc
cs
or
and
lds
movsl
xchg
aam
out
movsl
movsb
enter
or
idiv
sub
push
call
xor
hlt
nop
in
mov
cli
lock
out
mov
movsb
popaw
jnp
pushf
out
mov
fwait
xlat
inc
add
je
ds
test
cmpb
xor
mov
add
dec
dec
xlat
lock
jl
or
inc
cmpsl
mov
jbe
in
loopne
push
cmpsb
add
cmp
jae
add
xchg
lock
call
xor
pop
stos
add
das
fimuls
cmp
in
xor
fwait
push
cmpsl
icebp
test
imul
mov
sbb
aam
cmp
lods
sub
test
jp
imul
mov
loop
or
dec
movsl
pop
or
mov
cwtl
in
je
ss
and
fldl
fdivr
lods
mov
clc
loopne
stos
popa
dec
aas
fidivs
fwait
lds
push
pop
bound
in
stos
cmpsl
or
ret
add
js
fbld
mov
repz
jne
das
add
dec
insb
imul
sbbb
imul
scas
popa
dec
loope
inc
or
cmp
js
shll
fildll
adc
add
and
push
mov
rorb
out
xor
lods
push
rclb
test
mov
jo
inc
outsl
dec
cmp
jne
inc
or
scas
dec
pop
test
and
aad
notb
jbe
stos
pop
adc
in
jnp
shl
mov
jae
push
lods
sbb
push
jnp
cmp
sti
pop
dec
jle
dec
sub
inc
xchg
add
push
xor
fiadds
jnp
push
daa
data16
inc
xor
rol
and
xor
mov
sub
ret
or
movsl
jecxz
mov
xor
sti
fwait
cmc
aaa
push
jmp
jmp
lret
mov
clc
mov
mov
push
push
out
dec
clc
xchg
test
xor
mull
jmp
cli
push
push
in
es
xchg
sub
incb
lock
mov
xchg
cmpsb
xchg
xor
jmp
pop
pop
jnp
mov
lcall
stc
or
lock
pop
jbe
in
or
xchg
mov
daa
cmp
scas
stc
xchg
pushf
mov
jmp
out
jne
pop
jmp
or
rcl
ljmp
xchg
dec
adc
pop
lock
test
lock
rol
xchg
inc
hlt
and
adc
jne
push
shlb
out
aad
mov
sub
add
mov
int3
sub
pop
lret
jmp
push
pop
and
dec
pop
push
repz
lret
pushf
in
or
cmp
sub
andb
adc
mov
pop
es
mov
inc
ljmp
in
push
leave
cmp
les
or
xor
in
lret
out
mov
mov
pop
push
cmpsl
push
lock
shl
cli
mov
pop
orl
sti
inc
addl
sub
push
shrl
push
shlb
stos
les
and
and
xor
push
sbbb
mov
in
movsb
push
stos
sbb
mov
sahf
mov
in
jecxz
int
push
mov
scas
adc
xchg
sahf
loop
rorl
arpl
sub
cmp
fwait
add
adc
xor
test
enter
lods
sbb
scas
mov
mov
dec
subb
sbb
cli
mov
inc
and
iret
pop
rcll
or
jg
push
sub
jl
push
pop
inc
sub
jnp
repnz
xchg
dec
fs
inc
lock
adc
pop
insb
adc
fistpll
jp
ret
dec
pop
xor
aas
xchg
push
js
gs
cmp
lret
rcrb
pop
push
outsl
xchg
xchg
mov
pop
cs
push
test
outsl
subl
mov
fldcw
push
cli
int
push
fwait
jno
in
adc
enter
pop
pop
mov
adc
enter
int3
ja
mov
dec
xchg
fists
cmp
stc
cmp
mov
pop
mov
push
addb
or
mov
pop
pop
fs
pop
push
jge
or
mov
dec
pop
aas
adc
mov
loopne
lea
gs
dec
mov
out
cmpsl
lock
je
adc
call
imul
popa
mov
test
mov
ljmp
dec
lods
loope
imul
pushf
inc
stc
push
call
ret
hlt
in
dec
mov
cmpsl
sub
cmp
test
sub
stos
hlt
xor
fs
xchg
lea
pop
fildll
push
cmp
aas
pop
out
aaa
cmp
push
lret
shl
in
push
shl
mov
scas
lea
pusha
ret
adc
push
cwtl
xchg
rcrl
popa
xor
xor
mov
push
jmp
aam
adc
insb
pop
push
jl
xchg
sti
xlat
xor
pop
push
dec
test
or
mov
out
sahf
sahf
addr16
adc
jb
mov
lods
jl
and
adcb
and
cmc
jecxz
dec
sbb
fdivr
or
xor
push
stos
sub
movb
cmp
xor
pop
idivb
leave
gs
movsb
adc
jge
lahf
xchg
mov
cld
pusha
popa
addr16
mov
mov
rolb
sahf
fidivrs
or
inc
daa
std
js
jl
mov
mov
and
mov
push
fcompl
enter
sarl
xchg
sbb
aam
pop
xchg
jp
pop
ljmp
aad
push
into
mov
repz
insl
mov
fcomps
inc
xor
dec
test
mov
pop
out
ljmp
jg
loopne
sub
add
jnp
cmp
sub
fucom
enter
insl
fldl
mov
pop
pop
dec
cmp
sti
xlat
or
push
inc
into
lods
rcll
lock
jno
imul
sub
push
rclb
enter
frstpm(287
jmp
cmc
push
outsl
adc
lock
sub
xchg
sbb
dec
xchg
adc
push
xor
bound
dec
mov
xchg
push
es
mov
and
cmp
dec
aam
add
pop
cs
int3
adc
xor
das
or
pop
xorl
dec
push
or
fstpl
sahf
push
mov
lods
lcall
adc
and
or
ds
cmp
add
aaa
imul
or
mov
daa
cmpsb
sub
xchg
push
pop
mov
dec
shl
test
xlat
sarb
mov
push
sub
sbb
mov
add
mov
addr16
fldl
xlat
gs
xor
mov
sub
add
fstps
cmc
imul
sub
outsl
or
popa
pop
daa
dec
dec
insb
jnp
and
clc
loope
stos
aas
push
inc
adc
shlb
pop
push
ds
fcomps
arpl
lcall
add
cmpsl
lock
mov
insb
dec
cmp
ss
cmp
jecxz
pop
xor
adc
dec
outsl
rclb
imul
in
leave
mov
push
je
loopne
stos
xor
shlb
leave
mov
add
push
cltd
push
mov
lods
roll
jp
lret
pop
push
sub
adc
inc
xor
cli
lock
jmp
mov
sbbl
mov
xchg
sbb
add
push
pop
pop
add
or
dec
lock
sbb
xor
repnz
xor
leave
ja
sbb
icebp
leave
mov
aam
and
sarb
jo
mov
outsb
bound
loop
daa
in
or
gs
xor
dec
notl
aaa
pop
imul
or
xor
scas
mov
repz
out
lcall
cmp
pop
sarb
cli
xlat
sub
in
rorb
push
and
inc
mov
jno
cmp
inc
subb
mull
lret
jl
dec
cmc
sbb
adc
push
inc
mov
iret
sub
jo
xor
mov
inc
pop
movsl
ret
sbb
push
add
aas
xchg
mov
push
ss
mov
jns
and
imul
jmp
mov
movsb
xchg
test
js
js
xchg
or
mov
push
nop
push
add
push
ljmp
sbb
sub
leave
stc
pusha
push
subb
xor
push
jle
add
push
jle
mov
xor
shll
inc
push
outsb
and
aad
xchg
jbe
das
cmc
clc
mov
sub
cmc
in
xchg
push
inc
sti
dec
inc
jg
mov
outsl
cmp
add
bound
cmp
lret
xor
fisttps
mov
cmpsl
push
xchg
dec
out
les
and
xlat
pop
jmp
les
fcom
stos
pop
lock
jle
add
sub
cmpsb
fistps
pop
mov
hlt
xchg
or
rolb
xor
jae
cs
call
mov
in
xlat
sarl
js
and
push
testb
pop
dec
mov
adc
lock
nop
inc
jecxz
mov
pusha
mov
sub
lret
arpl
in
pop
test
jecxz
xor
push
aas
popf
dec
pop
pop
add
pop
stos
loope
cmpsl
push
jecxz
inc
mov
pop
push
mov
lds
test
inc
ret
jp
dec
into
cmp
jnp
sbb
insb
mov
push
dec
dec
pop
popa
or
test
pop
adcl
inc
add
into
insl
lret
inc
hlt
movzwl
sbb
inc
push
lcall
std
scas
loope
push
xchg
icebp
inc
inc
pusha
fisubs
mov
add
xor
mov
lcall
push
jmp
je
jbe
mov
imul
cmc
scas
pop
push
add
dec
dec
cmpsl
mov
jmp
rcll
fimuls
aaa
iret
out
int3
lock
pop
and
insl
sub
jne
pop
push
push
out
cmp
inc
cmc
fwait
mov
testl
mov
cmc
lods
ss
inc
loop
sbb
lret
insb
jg
add
lock
inc
leave
adc
mov
sub
in
ds
out
adc
adc
ljmp
call
push
mov
lahf
loopne
cmp
adc
movsb
imul
sahf
movsb
ret
and
call
mov
jmp
mov
pusha
fs
push
es
sbb
jb
cld
sbb
inc
jb
cmp
mov
adc
mov
mov
jle
movsb
cli
into
or
loop
push
inc
jg
xor
and
cmp
call
call
mov
js
inc
cmp
xor
mov
pop
dec
jge
add
push
mov
pushf
pusha
sub
mov
out
sahf
push
dec
test
cs
cmpsl
inc
les
mov
mov
popa
or
adc
lds
cmp
rcll
hlt
adc
in
mov
add
or
push
adc
xchg
mov
pusha
mov
in
dec
pop
call
iret
and
jo
ja
xor
inc
push
fldt
add
mov
inc
out
out
inc
add
jbe
cmpsl
cmpsl
ror
cmp
sti
push
push
loopne
sub
mov
test
push
sahf
pop
push
pop
loop
stos
push
sbb
dec
and
ds
cmp
or
fldcw
lods
dec
lock
push
out
sub
jge
leave
movsl
lahf
shr
mov
push
pop
add
xchg
jecxz
inc
jae
clc
add
leave
inc
ss
inc
out
in
inc
stos
or
ss
sahf
xchg
jecxz
sbb
dec
gs
jg
jp
add
imul
test
lahf
jb
clc
je
adc
sahf
in
pop
or
inc
mov
cmp
rcll
js
dec
dec
daa
and
sbb
push
ficoms
rorb
push
sub
into
jae
js
mov
and
and
dec
pop
pop
imul
arpl
dec
cmpsl
imul
test
arpl
lds
xlat
sub
jecxz
cmp
push
lock
cmp
xchg
lods
nop
sahf
pop
and
test
stos
pop
fildl
mov
dec
scas
jp
sbb
decl
dec
imul
cmp
fdivrs
cwtl
insb
je
outsb
xor
iret
mov
lock
cli
xchg
shrl
roll
push
adc
mov
in
and
stos
inc
mov
sub
insl
mov
and
call
repz
aam
pop
jmp
fs
xlat
adc
jbe
mov
inc
loopne
adc
cmp
clc
ljmp
call
data16
in
cmp
pop
xor
xchg
fildll
cmp
popa
scas
mov
xchg
dec
pop
jg
aas
pop
pop
and
jp
and
fmuls
mov
out
das
test
dec
imul
xchg
mov
popa
inc
sbb
xorb
push
xchg
es
mov
andl
jne
push
aad
jp
sbb
jecxz
in
jne
outsl
repz
and
xor
jbe
stos
dec
cmpb
xchg
dec
dec
push
xchg
in
imul
sub
lock
jmp
adc
mov
xor
push
xlat
mov
sbb
ret
bound
lods
shl
into
dec
cmp
movsb
push
push
cmp
cmp
sbb
lock
add
lcall
jbe
lret
pop
lcall
pop
and
shr
pinsrw
adc
push
cmp
push
add
pop
sub
stc
fsub
dec
leave
xchg
std
call
add
xchg
mov
cmp
or
std
mov
nop
movsl
das
repnz
pop
cwtl
sub
dec
sahf
push
stc
jb
mov
xor
adc
int3
sti
push
out
jge
jmp
call
inc
das
movsl
and
ja
mov
mov
or
mov
pop
pop
push
sbb
aas
mov
xor
pop
sbb
pop
sub
in
push
or
int
out
push
mov
mov
mov
or
imul
dec
mov
or
pop
je
jmp
insb
fstpl
add
sub
cmp
lock
into
sub
pop
xchg
imul
adc
orl
jo
jg
adc
lahf
dec
out
les
ja
aam
clc
fldcw
in
pushf
aas
xor
mov
lret
push
out
lcall
lods
mov
push
cmpsl
dec
sbb
or
sbb
mov
movsl
xchg
mov
mov
sbb
add
push
popa
scas
push
sub
mov
dec
stc
dec
push
xor
dec
imul
lods
cmpsl
mov
pusha
outsl
aaa
mov
push
lds
xchg
fmull
add
ficoms
push
fldt
sub
cltd
xchg
sub
xchg
push
xor
out
outsl
push
jge
xlat
lds
adc
push
lahf
iret
mov
movsb
xlat
ss
mov
shrb
scas
int
das
cmp
pop
inc
xor
xchg
loope
mov
fsubrs
dec
jmp
loope
fwait
mov
or
pop
pop
arpl
sub
jnp
faddl
sbb
sarl
cwtl
push
inc
repnz
pop
add
xor
or
and
mov
ja
gs
or
push
pop
test
ficomps
out
xchg
out
addr16
jl
cmp
clc
ljmp
mov
sbb
xlat
add
frstor
inc
test
push
or
mov
jne
mov
sub
mov
pop
push
out
iret
mov
flds
mov
gs
jae
mov
mov
mov
dec
movsl
mov
push
sub
ljmp
adcb
out
in
les
iret
pop
ret
mov
test
inc
in
cs
test
dec
or
jne
mov
xor
orl
and
inc
fadds
jbe
xchg
mov
cmp
call
push
inc
insl
sub
or
xor
aaa
inc
ja
mov
mov
jmp
das
xchg
movsb
in
add
pop
out
lret
cmc
push
xor
test
inc
xchg
lods
sub
sarl
dec
lock
cmpsl
cmp
in
adc
mov
adc
xchg
movsl
cli
loope
fs
push
dec
cmpb
xor
test
pop
xchg
jo
jnp
inc
cmpsl
int3
push
je
rcr
jo
pop
pop
mov
mov
lock
ljmp
sub
jne
inc
imul
xor
pop
cmp
pop
lahf
cmp
imul
movsb
xor
and
subb
jl
les
mov
jo
add
sti
xor
imul
dec
dec
xor
imul
movsl
loop
sti
jmp
push
pop
inc
jge
or
cwtl
mov
jmp
push
lds
cmp
in
test
pop
mov
jg
inc
outsb
adc
stos
fimull
ljmp
push
xchg
xor
data16
mov
loop
push
xor
sbb
xor
stos
movsl
mov
nop
cmpl
push
push
inc
cmp
xchg
xchg
or
and
jecxz
mov
xor
fs
jg
mov
cmp
add
jmp
out
add
xlat
orb
sub
lcall
movsl
dec
lea
jb
dec
shlb
jne
scas
mov
stos
sub
loope
ljmp
xchg
clc
aam
leave
scas
icebp
loopne
add
sub
and
sub
inc
test
push
pop
jmp
dec
push
rorl
leave
mov
mov
mov
pop
sbb
out
insb
mov
pop
inc
mov
xor
dec
cmpsl
and
push
mov
adc
pusha
movsl
ret
inc
clc
aam
fisttpl
fildll
roll
sbb
repz
adc
cmp
clc
and
inc
cmp
jle
xor
repnz
fildll
scas
cmp
orl
mov
jp
sub
xchg
imul
adc
es
jno
pop
sub
lahf
sub
jae
pop
mov
out
pop
pop
inc
ret
rcrl
xabort
push
lret
push
fidivrl
popa
lret
pop
push
adc
adc
int3
movsl
sbb
imul
sbb
rolb
and
jp
aad
arpl
adc
fwait
ss
cmc
xor
inc
clc
imul
sub
sbb
pop
sbb
cmp
and
or
or
mov
adc
adc
out
aad
jno
pop
jo
mov
cmpl
shl
cltd
xchg
loope
dec
lds
push
fisubrs
sub
add
in
in
dec
mov
mov
dec
cli
mov
mov
fstpt
cmp
push
push
xor
xchg
xchg
sbb
repz
aas
jno
iret
jb
data16
push
movsl
jns
lock
shll
pop
cs
js
fldcw
pop
arpl
mov
jnp
daa
cmp
jl
xor
pop
push
scas
sub
int
fmull
xchg
xchg
lcall
in
lds
das
push
sbb
xchg
jecxz
aam
mov
ds
xchg
push
cld
test
cltd
push
add
inc
aas
xchg
mov
lcall
popa
add
mov
cwtl
bound
insb
fistl
dec
popf
sti
inc
dec
push
mov
push
adc
add
sti
cld
xor
loopne
leave
pop
mov
inc
inc
xchg
lock
cmp
mov
push
pop
adc
decl
sub
push
mov
pop
and
jle
pop
data16
sub
adc
push
push
xor
xor
pop
dec
jnp
movsb
test
pop
pop
lcall
sti
stos
out
mov
js
cmp
aam
test
xchg
fidivs
rolb
jae
mov
jecxz
mov
ds
pop
push
mov
xchg
jmp
adc
stc
inc
add
sub
loopne
jp
mov
adc
out
xchg
xchg
and
test
dec
xchg
push
loope
test
sbb
je
icebp
out
push
stos
clc
add
push
test
and
jl
mov
xchg
gs
leave
dec
or
mov
dec
xchg
push
inc
inc
pop
cmp
xchg
xchg
cmp
ja
dec
nop
les
dec
rcll
loopne
loopne
mov
jmp
daa
mov
in
jnp
push
dec
mov
pop
sahf
adc
nop
sbb
pop
or
mov
add
mov
cmp
adc
clc
scas
cld
out
jmp
aam
cmp
adc
and
aaa
std
imul
nop
call
pop
mov
inc
test
inc
push
test
jl
pop
inc
fdiv
pop
sbb
add
jns,pt
xor
outsl
add
stc
loope
test
dec
sub
cld
mov
gs
mov
pop
out
stos
je
cs
ja
sub
sahf
push
lds
inc
xchg
clc
cs
into
or
imul
mov
push
sub
sarl
bound
xchg
negb
in
pop
and
int3
rcll
xor
push
mov
lahf
xor
mov
sub
push
dec
sbb
mov
inc
push
cmp
inc
mov
and
mov
mov
cs
sub
lcall
and
fisubrl
mov
js
popa
pop
lock
clc
test
in
pop
daa
pop
out
setno
xor
inc
jnp
adc
mov
fdivp
jmp
adc
mov
cmpsl
dec
dec
movsl
ja
aad
icebp
out
adc
adc
cmp
xor
sub
mov
xchg
jnp
icebp
xchg
push
jae
rcl
in
jmp
stc
inc
mov
out
push
mov
add
fdivl
sbb
mov
mov
je
xor
gs
mov
notb
lock
stos
push
xchg
loopne
sahf
mov
adc
adc
sti
sbb
jnp
push
lahf
test
lods
sub
or
pop
mov
iret
mov
jge
push
dec
addb
cmp
gs
sbbl
sbb
xchg
dec
mov
movsl
inc
add
add
push
les
aam
xor
sahf
cmp
cld
fistl
mov
movsl
jle
jmp
or
fdivs
push
xlat
ss
je
fdivl
rorl
jp
or
call
scas
lcall
mov
lcall
mov
xor
or
lods
jmp
shrb
mov
xchg
idivb
mov
fdivs
or
pop
mov
std
jne
mov
mov
mov
cmp
movl
in
add
sub
pop
outsl
push
mov
mov
sub
fmull
mov
inc
movsl
jg
stc
sub
shrl
pop
imul
mov
jg
lds
into
leave
or
movsl
mov
cmp
xor
stos
xor
lock
loope
repnz
push
mov
cmc
inc
fs
mov
xor
fcom
mov
mov
pushf
jmp
add
mov
dec
push
andb
loope
jo
push
popa
lds
daa
add
inc
cmp
adc
sti
lods
pusha
sub
sbb
imul
lds
mov
notb
fstl
push
sub
lds
add
add
or
dec
repz
movsl
push
xchg
roll
ss
das
add
sbb
iret
push
dec
orb
aas
fucom
xchg
insb
add
cmpsl
jnp
movsl
push
in
or
xlat
dec
xchg
push
fwait
int
cmpsb
les
leave
inc
xor
jmp
cmp
inc
in
dec
fistpll
dec
outsl
pop
in
push
mov
inc
das
jecxz
outsl
sub
scas
sahf
insl
xchg
mov
int
and
xor
pushf
mov
clc
sub
sbb
mov
lret
sahf
int
or
dec
inc
sbb
lock
xor
les
test
push
fsubs
jae
inc
mov
clc
sub
shrd
ds
stos
xchg
dec
mov
xchg
lcall
pop
addr16
sub
or
sahf
data16
xlat
pop
movsb
scas
add
in
cli
xchg
gs
in
pop
adc
xchg
aaa
pop
loopne
bound
jl
sbb
mov
push
lock
loopne
fst
cmp
sti
xor
dec
cmp
and
stos
add
cmp
jnp
push
push
xchg
mov
mov
sbb
cmp
rcrl
cmc
or
test
shl
jle
int3
mov
cmpl
je
push
hlt
mov
enter
gs
pop
pop
or
aas
sbb
push
in
ja
inc
lret
mov
dec
rolb
outsb
adc
stos
mov
dec
std
je
jo
cli
xor
nop
pop
cmpsl
xor
dec
in
clc
mov
and
xor
inc
add
cmp
mov
push
mov
add
push
test
adc
test
lea
push
movsb
xor
jle
dec
leave
sub
ss
pop
sub
loope
mov
pop
cmp
push
dec
loopne
cwtl
pop
ljmp
mov
lods
jnp
pop
pop
add
xorl
and
test
sub
sub
mov
call
xchg
gs
mov
cmpsl
xor
pop
cmp
dec
or
sub
popf
jns
ljmp
lret
add
pusha
pop
mov
jp
out
mov
dec
cltd
mov
jge
lock
push
mov
scas
adc
adc
inc
notl
arpl
pop
jnp
xor
mov
jnp
or
out
je
mov
jmp
and
lock
mov
andb
add
inc
insl
push
mov
sub
fwait
push
jb
adc
mov
mov
xchg
or
dec
pushl
sti
xchg
mov
pop
outsb
mov
cwtl
sub
push
pop
xchg
popf
push
leave
in
fsubr
sub
jp
lcall
dec
inc
and
mov
adc
inc
jne
xchg
shlb
pop
call
mov
std
imul
sti
xlat
and
xlat
pop
outsl
dec
xchg
jecxz
inc
in
sbb
adc
mov
sti
dec
out
jo
sub
stc
test
pop
dec
sahf
or
sub
enter
rorl
mov
call
fisubs
xchg
lret
inc
pop
test
mov
negl
and
lock
pusha
fdivr
test
sahf
daa
jmp
and
mov
add
imul
fsubrl
add
testb
xchg
nop
and
sbb
pop
or
test
mov
cmp
cmpb
sti
dec
xor
bound
sub
ds
fwait
ljmp
fstl
push
or
pop
pusha
jbe
lods
lock
mov
lret
xor
je
jp
dec
mov
add
push
cs
xor
push
std
ret
pop
pop
sahf
idivl
mov
xchg
imul
test
dec
pop
jnp
push
lret
inc
cmp
dec
dec
in
sahf
mov
xchg
ret
sbb
in
dec
cmp
stos
test
iret
lds
mov
ds
sbb
pop
or
outsl
lret
cmpsb
std
cmp
push
addr16
mov
sahf
pop
mov
jnp
pusha
sub
jecxz
sub
xor
or
mov
idiv
jg
push
or
or
fwait
xchg
mov
cmpsl
or
mov
fs
sbb
ret
imul
cmp
hlt
jmp
adc
cltd
lods
insl
fisttps
sti
mov
add
movsl
push
icebp
icebp
mov
and
insb
stos
mov
out
and
adc
or
sti
cli
xchg
daa
ds
mov
loopne
out
xchg
or
mov
sub
pop
fisubrs
aam
jg
cmp
nop
push
call
jne
pop
in
inc
sub
mov
lcall
or
rcll
les
pop
or
xchg
xor
or
push
les
addb
fstpt
test
mov
jp
lods
jl
sub
xchg
pop
arpl
pop
xor
aad
jmp
shl
or
xor
ret
dec
and
fcmove
movsl
inc
les
cmpsb
and
mov
inc
aaa
push
fstpt
xchg
stc
inc
inc
imul
add
xlat
mov
mov
in
ret
fidivl
into
xchg
sti
iret
mov
loope
imul
loop
or
lahf
or
xor
sbb
cmp
jbe
xchg
rcrb
inc
and
adc
push
imul
xor
ljmp
imul
bound
repz
dec
stc
mov
cs
dec
mov
pop
ficoms
fstps
jnp
mov
jge
divb
pushf
pop
int
fcomp
cli
ret
jae
push
inc
sub
xor
test
mov
xchg
popa
add
leave
xchg
ljmp
movsl
and
xor
out
jbe
movsb
push
fistpl
insl
and
popf
push
ds
loop
jo
jno
sub
bnd
mov
fnstcw
scas
out
sub
lret
in
lods
es
adc
mov
subl
mov
xchg
loopne
jmp
cmpsb
leave
mov
xchg
or
xor
stos
or
lds
cmpsl
sahf
lcall
lock
mov
xchg
leave
cmp
lahf
es
push
in
loopne
repz
rcr
imulb
xchg
or
in
mov
stos
imul
xor
inc
cmc
aad
fldl
adc
mov
mov
and
xchg
inc
scas
pop
sub
mov
dec
and
sub
sti
daa
divb
mov
cs
arpl
icebp
jmp
add
stc
rcrl
jmp
in
pushf
add
mov
mov
call
mov
push
dec
sub
xor
pop
inc
mov
repnz
cmc
mov
xor
bound
pop
dec
mov
push
pop
dec
dec
lret
xor
and
dec
cmpsb
push
icebp
frstor
stc
xchg
jnp
cmp
xchg
or
dec
mov
bound
mov
test
add
test
push
out
cmp
sub
std
mov
xchg
push
push
sbb
push
jb
imul
adc
stos
cmc
out
insl
mov
push
clc
pop
push
inc
sub
fninit
xlat
jge
scas
stos
sahf
adc
push
repnz
aam
filds
lock
pop
or
mov
or
xlat
out
clc
call
push
lock
subb
dec
cmp
inc
mov
dec
ficoml
mov
call
mov
ss
lock
mov
fdiv
sbb
jnp
sub
xchg
lds
add
fsts
mov
fcomip
mov
aam
cmp
mov
stc
addr16
das
sub
xor
in
sub
push
sti
push
loop
stc
push
jnp
and
or
xor
dec
push
in
xlat
lahf
shrb
flds
push
jmp
pop
lods
jne
popw
leave
jnp
fldcw
in
cmp
xchg
lock
inc
xchg
jb
adc
pop
adc
lock
test
cmp
out
sbb
mov
leave
push
push
push
sub
pop
push
add
in
jne
push
push
pop
cmc
movsb
sbb
fsubs
push
jne
in
scas
and
lock
push
insb
fwait
xchg
movsb
nop
jp
pop
pusha
ret
in
push
push
dec
ljmp
aad
fsts
sub
push
jb
sub
add
negl
ja
gs
stos
lea
mov
das
cltd
out
cld
sub
mov
ljmp
mov
arpl
and
pusha
push
xlat
js
ret
pop
sti
scas
cs
andb
sub
pop
dec
sahf
sub
pusha
ror
inc
mov
loopne
xchg
call
sub
dec
xchg
imul
pushf
loope
xchg
loop
repz
data16
jo
lock
sti
or
dec
fisttpl
add
add
pop
mov
and
or
ret
into
js
add
cmp
jle
aas
aam
cmp
xchg
sbb
repz
out
ss
and
xor
push
fimuls
mov
dec
push
jns
push
xchg
sbb
outsb
xchg
jb
pusha
mov
dec
mov
mov
mov
push
dec
cmpsb
pop
orb
clc
insl
cli
ret
fildll
ljmp
loopne
sub
mov
in
test
sti
xor
test
repnz
and
xchg
fdivp
dec
stc
pop
jmp
lcall
push
outsb
inc
stos
dec
mov
push
sbb
mov
mov
lds
mov
jae
leave
cltd
xor
imul
lock
mov
pop
mov
mov
adc
sub
clc
jle
ss
or
fs
sub
sub
dec
mov
mov
repnz
roll
and
aas
cltd
mov
repnz
adc
aam
rolb
push
push
sbb
add
mov
aam
cmp
xor
in
out
test
mov
xchg
scas
cmp
push
dec
sahf
pop
dec
idivb
fs
bound
inc
adc
bound
xchg
hlt
leave
sbb
imul
aam
push
pop
out
xor
ja
xchg
sbb
pusha
in
push
cmpsl
or
inc
xchg
push
rcrb
ficoml
xchg
or
pop
popa
fsubs
lock
fiadds
adc
repz
addr16
push
imul
lea
or
and
xchg
roll
xor
int
push
in
xchg
in
sub
ljmp
add
inc
popa
mov
mov
loope
stos
and
xor
cmc
imul
xchg
and
imul
ret
and
sahf
dec
or
fisttps
jno
push
push
dec
mov
inc
sub
adc
mov
xor
mov
xchg
cmp
pop
adcb
rcrl
push
fnsave
testb
repz
test
shll
push
rclb
and
stos
inc
mov
push
adc
ds
stos
push
xorb
inc
xchg
rolb
bound
movsb
push
aas
fdivrl
nop
les
mov
loopne
mov
shlb
aaa
pop
fs
push
lock
push
sbb
jp
cmpsb
push
pop
sbb
fadds
popa
push
in
jmp
aad
jno
stos
popf
ds
xchg
and
in
lock
and
xor
stos
or
pop
adc
mov
xlat
scas
push
int3
fcoms
and
ss
repnz
int3
mov
fwait
xchg
popf
aad
mov
or
push
mov
lock
sub
cwtl
jbe
out
testb
inc
subl
fcompl
xchg
movsl
pop
mov
test
mov
xchg
inc
fsubs
mov
pushf
pop
inc
sahf
sub
popf
fistpl
and
xor
repnz
repnz
leave
out
adc
out
jl
pop
xchg
rolb
push
loopne
mov
dec
cmpb
hlt
in
cmp
sarb
enter
ljmp
cltd
outsb
outsb
pop
into
test
push
jo
les
xor
imul
outsl
lret
mov
fsqrt
sbb
ljmp
insl
mov
jmp
xor
mov
push
das
jg
jmp
jp
xchg
orl
mov
pop
dec
pop
dec
repz
inc
adc
repz
or
cmp
inc
mov
rorl
cmp
mov
push
sub
mov
mov
es
aaa
dec
gs
inc
pop
and
add
ljmp
jp
rol
out
mov
xchg
xchg
cmpsl
lock
jg
aam
sub
xlat
adc
push
xor
jo
push
pop
push
xchg
mov
mov
or
cs
icebp
pop
sub
push
lods
pop
shl
xor
xor
ret
addb
pop
adc
outsl
imul
fistps
mov
adc
daa
lahf
int
dec
xor
lods
sub
orl
arpl
sub
sbb
pop
mov
std
test
divl
adc
mov
xor
dec
or
cltd
mov
cld
shrb
or
or
push
cmp
xor
std
xor
xor
jnp
rcrl
xor
ss
lds
cmp
push
stos
je
pop
out
add
mov
clc
test
xor
inc
jg
jmp
inc
test
orl
ds
cmpsl
xor
sub
add
pop
xchg
call
stc
cmp
lock
and
adc
push
cmp
lock
outsl
testl
rcrl
push
xor
stos
xchg
jp
outsb
js
out
mov
clc
lock
pop
jp
jae
sbb
xor
les
jb
movsb
out
xor
in
jle
cmp
or
xor
fs
data16
jae
lods
inc
sti
loope
rorb
shll
push
jbe
bound
xchg
addr16
outsb
mov
sub
lods
xor
das
ret
add
fdivrs
or
mov
pop
out
clc
adc
js
dec
pop
shrl
aaa
fcompl
pop
add
jle
mov
jno
dec
mov
jnp
sub
pop
or
add
loop
jle
adc
inc
insl
mov
sbb
push
cs
mov
popa
jg
inc
mov
add
cmp
subb
int3
xchg
cmp
mov
inc
cmc
in
push
call
mov
sub
fcomps
sbb
xchg
mov
dec
in
inc
test
into
in
test
inc
inc
ds
jno
scas
aas
mov
dec
pop
pop
rcll
aas
xorb
mov
mov
jmp
cmp
or
mov
rolb
mov
sti
idivb
stc
mov
dec
mov
cltd
imul
jl
inc
pop
jne,pn
inc
nop
sbbl
cmp
jb
loope
jmp
adc
jmp
loope,pn
xchg
pop
fucom
test
mov
loopne
pop
sub
mov
je
lret
add
clc
jb
push
ljmp
lods
or
imul
xorl
cli
adc
addr16
fisubrs
aam
jg
mov
imul
movsb
rolb
add
test
add
dec
lock
movsb
ror
cs
dec
and
jno
mov
fs
inc
fsub
addr16
push
mov
pop
push
pop
test
push
dec
mov
shl
xchg
pop
ja
std
test
lcall
dec
imul
xchg
mov
jp
push
mov
popa
hlt
stos
mov
repnz
jp
mov
ficoml
sti
mov
xchg
and
or
xor
and
popa
sub
xor
push
sbb
add
sbbb
ret
in
stos
pop
pop
or
sbb
cltd
pop
loopne
lods
mov
bnd
pop
inc
jl
fs
jmp
call
jns
jecxz
sbb
sbb
jno
sub
in
div
cmp
adc
cmpsl
clc
xchg
call
pop
rclb
push
dec
incl
outsl
jno
in
cmpsl
xor
mov
adc
inc
jmp
leave
pop
and
cmp
ljmp
jmp
add
mov
adc
and
lock
imul
or
ret
xor
xlat
sbb
in
lods
enter
sub
xor
jg
adc
loope
sahf
test
dec
add
mov
sub
mov
mov
inc
lods
pop
pop
in
jmp
aad
mov
bound
loope
push
add
push
addr16
sbb
cmp
adc
mov
shlb
mov
mov
pop
dec
xor
xor
cmp
inc
aad
shlb
sar
xchg
pop
push
cmp
push
mov
fisttps
leave
xor
cmp
movsl
cmp
fsub
inc
imul
mov
fucom
mov
xlat
or
and
sub
ret
mov
sub
sbb
pop
xor
rcr
mov
iret
mov
outsb
lret
lods
shl
gs
pop
push
jle
xor
jno
rclb
or
ja
push
pop
push
icebp
frstor
pop
fldenv
insb
hlt
push
dec
jmp
push
lods
sti
lret
mov
mov
pop
inc
ja
mov
pop
dec
inc
mov
cmp
adc
sbb
push
scas
iret
lcall
movsb
lods
dec
lock
popa
dec
imul
ret
jp
fbld
cmp
in
adc
inc
je
imul
inc
cmpsl
gs
jns
pop
les
push
js
xchg
add
je
cmpb
adc
lcall
movsb
sbb
imul
jo
pop
shlb
mov
in
imul
in
sbb
aas
mov
cmpl
call
insl
test
xchg
sub
cmp
jnp
add
dec
gs
addb
pop
je
mov
popf
push
xor
mov
jmp
imul
iret
jmp
int
movsl
jg
mov
sub
and
in
sub
inc
mov
mov
movsb
lret
leave
cmp
xchg
mov
push
lret
ds
movsl
mov
push
out
into
push
and
jg
std
mov
and
dec
pop
std
sub
sub
ret
imul
adc
inc
insb
xor
xchg
xchg
pop
or
ljmp
lret
lahf
inc
mov
and
in
xchg
mov
clc
jmp
dec
repz
and
gs
xor
lahf
fdivr
aam
xchg
xchg
sbb
mull
adc
test
in
fistpl
arpl
cwtl
js
cs
mov
push
cmp
sbbl
imul
mov
scas
sub
cmp
and
aad
dec
bound
clc
pop
bound
add
js
jo
and
mov
mov
cmp
lock
shlb
shl
subl
and
inc
mov
push
sub
push
push
adcb
xchg
pop
mov
dec
fwait
jl
gs
add
dec
jne
repz
xchg
out
or
pop
stos
pop
inc
imul
jmp
mov
pop
fwait
xchg
ret
mov
leave
mov
pop
popf
dec
jae
mov
addr16
std
sub
push
fstp
sbb
pop
xor
imul
movsb
add
xorb
cltd
sbb
inc
jb
push
je
wrmsr
call
sbb
leave
pop
hlt
cmpsb
cmp
push
scas
xchg
push
push
test
sbb
cld
add
mov
sbb
jmp
dec
lcall
pop
adc
inc
jb
mov
call
push
adcl
or
cmc
sbb
sub
inc
inc
addr16
or
xor
sbb
jl
push
cmc
mov
testb
std
sub
xor
rorb
dec
jp
test
mov
or
outsl
inc
inc
add
mov
inc
sub
push
jb
or
xchg
into
mov
inc
imul
popa
adc
je
cld
popa
jo
xchg
mov
xchg
sbbb
pop
jno
pop
push
push
mov
mov
pop
cld
adc
sahf
cmp
nop
push
add
inc
jmp
push
or
dec
aad
dec
add
xchg
icebp
nop
sub
push
add
mov
notb
xchg
test
mov
mov
sub
std
mov
inc
aam
push
shlb
mov
scas
pushf
dec
imul
int3
jmp
push
jns
cmp
dec
inc
push
sub
das
sub
adcb
orb
nop
push
or
loope
or
pop
push
fs
mov
push
pushf
in
scas
sub
les
mov
lock
adc
cs
push
xor
icebp
es
test
or
cli
popa
mov
outsl
shll
sub
jg
addr16
lock
aaa
aas
xor
dec
sub
sarb
dec
xor
cltd
mov
mov
sbb
in
add
adc
xchg
jmp
mov
into
mov
inc
xchg
movsb
adc
cmp
mov
insb
xor
sbb
sub
jl
mov
imul
xor
lock
adc
roll
inc
stos
mov
push
out
addl
cmpsl
lret
test
lods
jmp
adc
jb
xchg
inc
clc
sub
dec
inc
xor
repz
orb
loopne
call
push
lods
and
leave
mov
arpl
dec
adc
mov
cli
aam
xchg
mov
jnp
jbe
jp
stc
out
adcb
jno
mov
pushf
pusha
sbb
mov
bound
push
aad
or
inc
repz
push
les
sbb
movsl
and
adc
loop
push
into
outsl
inc
dec
fsubrs
pop
fstpl
mov
push
mov
push
dec
jp
add
pusha
or
xchg
lahf
push
push
pop
inc
cmp
push
mov
xor
loopne
xchg
sti
imul
test
and
into
push
add
fnsave
inc
mov
xor
out
xchg
pusha
cld
push
mov
ljmp
mov
inc
jnp
clc
shll
jns
lods
and
ja
iret
bound
aaa
loop
scas
das
clc
dec
inc
leave
cmp
xchg
popa
sbb
inc
jle
cmp
mov
ds
fwait
xchg
les
stos
sbb
jb
das
xchg
sub
rolb
jle
or
int
insl
in
add
pop
icebp
xor
cmp
jg
les
add
cmp
lret
dec
lods
add
push
incl
pop
scas
push
xor
fldt
ljmp
push
add
and
xor
cs
pop
or
insb
add
sbb
fcompl
fidivl
jecxz
lods
inc
jle
pop
dec
mov
cmpsb
push
stc
adc
dec
stos
pop
push
or
repnz
jmp
js
push
xchg
insb
xlat
push
push
sti
lock
dec
sar
push
jo
pusha
inc
dec
cli
sub
push
addr16
or
cmp
mov
addl
movsl
sbb
push
inc
lret
lock
jmp
push
loop
or
xchg
inc
pop
jle
fwait
pop
shl
jecxz
push
fsubl
push
loope
jmp
cmpsl
sarb
xchg
jp
push
sbb
pop
xor
xchg
sub
push
nop
stos
sbb
jg
sub
jge
xor
mov
sbbl
mov
cmp
cwtl
add
rol
aad
sub
je
sub
stos
sbb
push
or
jecxz
or
lret
sbb
sub
stos
cmpsb
xor
lock
sub
sub
jno
mov
call
movsl
xor
stos
aad
xor
pushf
fadds
push
out
inc
pusha
cmpsb
xchg
dec
pop
push
pop
imul
addb
movsl
test
in
xor
mov
arpl
shrl
iret
lds
push
repz
fs
mov
mov
dec
dec
xchg
push
push
xchg
push
leave
fcomi
mov
movsb
adc
lcall
add
pop
orb
mov
xchg
jnp
dec
daa
xor
es
ljmp
lods
pop
pop
insl
insb
fiadds
cld
sub
scas
jmp
mov
push
call
xor
mov
and
mov
mov
sbb
cmp
cmp
pushw
movsl
mov
aaa
mov
shl
test
aaa
mov
ja
in
jecxz
cli
insl
stos
stos
cmpsl
lret
pop
hlt
pop
dec
insl
sub
sahf
test
xchg
dec
loopne
inc
inc
fnsave
or
sahf
in
cs
je
loopne
jmp
mov
or
pushf
jno
mov
test
fistpll
shl
sub
push
mov
int
sub
push
and
pop
out
sbb
ljmp
lods
sti
lcall
sbbb
push
mov
jg
std
mov
scas
subb
adc
insl
test
inc
mov
sbbl
outsl
dec
das
mov
stc
sub
lret
dec
mov
js
ds
in
mov
lret
and
lods
mov
into
push
enter
and
pop
loop
cs
push
ds
cltd
inc
cmp
cld
es
cmp
mov
pop
fisubrl
push
ljmp
xchg
adc
test
fildl
cmp
cmpb
rclb
or
or
cmpsl
lret
sbb
ljmp
arpl
sub
lock
xchg
mov
sub
jmp
mov
fildl
jae
cmpsl
jno
clc
popa
sub
xor
sub
fildll
repnz
add
sub
xchg
pop
movsb
pushf
ss
sub
mov
or
sub
mov
cmp
push
jecxz,pt
xchg
mov
adc
pop
andb
mov
pop
add
int3
push
cwtl
sub
fistpl
clc
push
sub
mov
push
and
add
inc
inc
sbb
outsb
daa
test
bound
sub
js
adcl
pop
cmp
lret
sahf
mov
notl
xchg
adc
in
inc
push
add
fwait
leave
inc
sub
lock
jb
push
mov
xchg
pop
push
adc
aad
sub
pop
adc
mov
add
mov
sarb
xchg
mov
fcompl
jo
aad
xchg
xor
add
xchg
pusha
mov
in
inc
mov
mov
bound
pop
sbbb
jo
push
push
xor
in
mov
sub
in
movsb
out
movsl
pop
cmp
and
stc
mov
std
movsb
push
push
and
fs
lea
mov
out
cld
rolb
jg
insl
dec
imul
xchg
movsb
push
in
je
or
rol
dec
add
push
hlt
inc
sub
repnz
aad
xor
addl
lock
aad
enter
and
clc
test
xchg
outsl
cmovg
push
sub
push
push
shrb
jo
cmpsl
xor
xchg
mov
dec
dec
imul
cmpsl
leave
cltd
xor
add
sbb
inc
int
xor
jmp
movb
pop
xor
pop
xchg
sub
popa
sub
ror
jb
cmc
aad
xchg
std
imul
and
inc
js
jle
mov
leave
push
cmp
loop
loope
xor
adc
xchg
lods
aas
xchg
mov
xor
lock
movsl
pop
xor
cmc
in
mov
out
dec
mov
clc
out
pop
gs
jno
push
lret
xchg
jl
mov
shll
mov
inc
jecxz
add
test
loop,pn
mov
insb
je
ret
xchg
insb
or
dec
lods
repnz
cmpsb
ja
fsubrl
lock
pop
js
outsl
fldenv
in
pop
add
push
stc
pop
loop
push
pop
sub
add
lcall
insl
fcmovbe
push
dec
mov
xchg
sub
lret
int
fwait
jmp
fs
push
mov
data16
lcall
scas
xlat
sub
pop
xor
jp
les
dec
das
dec
add
or
sub
loopne
push
dec
mov
push
jne
mov
inc
push
mov
and
pop
dec
mov
scas
popa
add
cmpsb
xor
aam
test
pop
or
mov
push
rclb
in
jno
mov
in
mov
imul
pop
xchg
stos
jp
sahf
push
test
fwait
out
push
or
xor
cmpsb
mov
aad
test
mov
push
lret
lock
mov
aas
adc
push
mov
lock
add
pop
mov
es
sub
mov
loopne
jg
add
dec
adc
int
into
aaa
std
mov
sahf
adc
inc
and
fisttpl
stos
cmp
add
mov
jae
sub
push
int3
lret
enter
lods
lds
pop
xchg
insb
and
movsl
imul
mov
cmp
ljmp
sahf
rorl
loop
xor
jle
xchg
pop
inc
dec
gs
stos
dec
jnp
inc
cmp
xchg
sub
ds
sub
scas
cmpsl
xchg
je
push
adc
mov
arpl
xchg
stos
loop,pn
cli
pop
inc
jne
adc
loope
inc
cmpsb
fiaddl
jbe
insb
mov
or
or
ficoms
push
push
pop
pop
push
or
and
lock
movsb
cltd
test
cmp
cmp
push
mov
cmp
ret
sub
aad
push
dec
pop
mov
push
scas
push
inc
rorl
cmp
fs
ss
xor
pop
adc
loopne
int3
pop
xchg
jnp
inc
shr
jno
or
sub
mov
addl
mov
xchg
push
xchg
mov
push
scas
dec
pusha
jbe
pop
and
dec
xchg
mov
jg
dec
jbe
test
jno
push
pusha
gs
stos
or
pop
add
xchg
mov
add
lret
das
fadds
bound
inc
xor
in
loope
dec
cmpsl
xor
xlat
mov
scas
xlat
lret
jnp
sub
xlat
mov
out
negb
mov
rcl
iret
xchg
test
push
xor
dec
pop
push
jl
data16
inc
inc
jno
xor
std
shl
stos
in
call
test
jbe
icebp
jp
aaa
in
loopne
dec
mov
jg
loopne
sahf
inc
das
xor
adc
xchg
push
rcrl
xor
sbb
and
and
repz
push
popf
push
daa
cltd
push
orb
mov
mov
sbb
lods
dec
xlat
cltd
dec
sub
push
fnstenv
aad
lahf
popa
out
jle
push
sbb
nop
mov
xchg
aad
cmp
into
leave
ficomps
jl
mov
stc
sub
mov
lods
push
mov
ss
xor
pusha
xor
adc
in
or
hlt
adc
scas
jle
jae
sub
imul
aas
ljmp
fistpll
mov
aam
sbb
push
cmpsb
add
mov
sbb
cmp
sub
adc
leave
add
pop
nop
push
ja
fsubl
sbb
divb
jp
addl
sbb
jle
dec
sbb
in
imul
lahf
test
jge
sub
dec
test
cmp
jp
push
call
xor
addr16
mov
pop
add
mov
sahf
in
mov
pop
push
ds
push
ror
cld
pop
lock
imul
mov
ja
xor
cmpsb
stos
sub
xor
push
mov
je
sub
mov
jl
movsl
mov
fisttpll
xchg
xchg
shll
mov
ss
lock
cmp
mov
icebp
icebp
mov
or
inc
adc
fs
push
mov
xorb
push
fidivrs
xchg
aaa
mov
dec
lock
or
xchg
scas
mov
push
or
stos
xor
sub
sbb
subb
jp
or
test
sub
in
dec
add
sub
cmp
push
push
adc
scas
pushf
pop
xchg
push
leave
gs
repnz
xchg
inc
xchg
lock
pop
ja
adc
cmc
sub
add
mov
cmpsl
mov
fists
push
inc
ret
hlt
pop
xchg
pusha
push
test
outsb
pusha
scas
inc
mov
pop
repz
xchg
pop
jb
lahf
loope
xlat
cli
idivl
mov
loop
xchg
push
jnp
insl
popa
push
nop
sbb
lock
cltd
outsl
test
pop
mov
xchg
push
xchg
idivb
push
cmpsl
adc
xlat
stos
xchg
xor
mov
aam
jne
negb
lcall
jle
push
cmc
test
lods
inc
sbb
fbstp
mov
and
clc
pushw
push
sbb
fisubs
daa
mov
in
add
jp
mov
dec
add
pusha
cmpl
imul
in
testl
xchg
push
popa
popf
imul
sbb
jns
or
sti
mov
xchg
dec
cmp
popa
sub
scas
mov
sub
mov
popa
add
fidivl
adc
frstor
sbbl
mov
scas
cmp
push
pusha
xchg
inc
push
pop
pop
adc
xorl
cmp
and
mov
jle
js
push
add
jecxz
ds
imul
push
jbe
xor
pop
cmpl
js
and
popa
add
stos
xchg
call
jl
sti
xchg
sbb
xchg
xlat
lcall
add
push
gs
jno
mov
das
fwait
cli
je
xor
pop
and
adc
jmp
mov
lock
iret
push
mov
cmp
out
insb
sub
inc
cli
imul
jmp
push
or
lods
push
pop
fs
lock
mov
fmuls
or
repz
pusha
scas
pop
jns
lods
mov
in
int3
dec
aam
sub
adc
loop
or
or
cli
jns
adc
inc
dec
clc
adc
push
cmc
push
test
or
push
loopne
js
pop
lock
xchg
inc
roll
sub
xor
sub
xor
sarl
mov
les
pop
sub
pop
jbe
sbb
cmpsb
xchg
lret
jb,pt
xor
sti
jns,pn
sub
ljmp
mov
inc
test
ficoml
fwait
xchg
jmp
and
sub
pop
ret
inc
sbb
cmp
xlat
out
dec
xor
pop
mov
mov
jne
dec
xchg
daa
mov
sub
fs
cltd
dec
dec
xchg
mov
or
sub
dec
dec
sub
ret
xchg
xor
sub
dec
roll
daa
cmp
or
add
clc
cmp
sub
dec
lea
xor
or
ljmp
jp
inc
mov
add
xor
jb
push
pop
dec
mov
mov
mov
mov
dec
sarl
cmp
scas
xchg
insb
bound
sbb
lock
pop
jae
sahf
xorl
pop
pop
or
mov
xchg
or
pop
xlat
fcmovnb
outsl
lds
sub
or
mov
jp
mov
inc
hlt
jnp
adc
sarb
mov
mov
hlt
adc
gs
inc
negl
push
push
and
jp
bound
xchg
mov
push
push
xchg
mov
mov
cmpsl
sbb
xchg
adc
lret
xlat
fnstsw
sbb
sub
pop
repz
mov
pop
mov
ljmp
repz
or
fsubr
cld
not
cmp
inc
jecxz
aam
hlt
pop
sti
xor
mov
test
jns
xchg
ljmp
bextr
mov
jae
push
mov
jp
pop
cmp
in
popa
dec
push
addr16
std
xlat
scas
xor
aas
lods
push
jg
addr16
out
jp
bound
push
mov
flds
pusha
cmp
dec
cmp
push
fucomp
adc
test
imul
push
es
orb
sub
mov
cmpsb
test
dec
push
std
in
mov
sub
cmc
xlat
pop
clc
popa
mov
push
adc
cmpsb
call
dec
pop
arpl
aam
cmp
repz
push
std
outsb
or
dec
iret
add
mov
inc
push
mov
sub
inc
cs
jp
pop
mov
and
hlt
mov
dec
jns
or
xlat
stos
insb
cs
cmp
mov
popa
push
popf
roll
dec
movsl
jg
push
inc
jnp
mov
mov
out
add
dec
dec
xor
insb
in
loopne
sti
aas
pop
jo
pop
xor
jge
ss
sub
aas
pop
inc
repnz
in
push
pop
fs
xor
xchg
pop
pop
jge
addr16
jae
push
outsl
xor
cmpl
jecxz
inc
ds
fisttpl
sub
push
pop
inc
sub
pop
aaa
add
mov
dec
jno
out
outsb
push
inc
sti
fimull
pushf
inc
pop
mov
push
sub
mov
rolb
push
push
jno
xor
test
xchg
jne
push
push
outsl
inc
js
pop
sub
or
leave
scas
adc
testl
jle
or
insl
sub
adc
mov
lret
loope
inc
test
mov
xor
cmc
mov
pop
in
arpl
sub
lods
push
inc
xor
mov
ficoml
mov
inc
push
cli
and
jp
pop
fwait
add
addr16
ret
insl
int
cvtps2pd
mov
cmp
movsb
mov
inc
repz
xlat
sbb
adc
dec
mov
inc
cmp
pop
push
push
in
lcall
mov
push
in
movsl
dec
sub
add
cmp
push
dec
dec
dec
aaa
pop
xlat
aam
outsl
popa
push
in
and
cmpsl
pop
jnp
sub
jb
inc
hlt
push
clc
sub
inc
ds
sub
mov
cli
ja
shlb
xor
cmp
sub
aaa
add
fs
loope
pop
cltd
xor
sbb
icebp
dec
cmp
cmp
lret
and
pop
cltd
cmpsl
mov
cmp
sbb
clc
xor
push
fstpt
push
inc
lock
push
inc
inc
mov
push
hlt
mov
push
jnp
sub
push
push
pop
sbb
fsubr
and
test
ljmp
out
loope
pop
xor
outsl
pop
xchg
cmpsb
arpl
adc
dec
cmc
leave
into
push
fimuls
inc
cmpsb
in
xchg
scas
je
bound
mov
cmc
rolb
ljmp
mov
inc
jne
movsl
and
jge
pushl
mov
outsl
dec
jno
sub
push
mov
shl
push
mov
outsb
outsl
dec
xor
scas
loop
out
xor
cmc
and
mov
dec
lock
bound
xor
mov
xlat
mov
inc
cmp
gs
sbb
push
xchg
xchg
stc
movsb
scas
lds
push
movsl
fs
mov
scas
in
inc
cli
insl
push
cmp
mov
jmp
in
cmpsl
mov
imul
adc
push
pop
stos
pop
or
mov
sbb
loopne
jne
jmp
stos
mov
pop
jno
cmp
mov
mov
cmp
and
ds
scas
sub
push
popf
add
bound
out
cmp
popa
add
ja
data16
dec
clc
xchg
movsb
inc
lahf
cs
xor
push
inc
jae
mov
rcl
and
arpl
out
mov
cs
add
cs
inc
cmpsl
and
lahf
testb
pop
push
mov
push
push
jno
ret
scas
popa
out
xor
inc
test
pop
push
bound
popf
rcrb
jg
sub
test
outsl
mov
cmp
xchg
inc
nop
lea
out
rcr
scas
in
shlb
adc
out
loopne
push
repnz
mov
inc
into
jmp
dec
push
push
movsl
add
jne
or
inc
xor
mov
dec
aaa
outsb
jo
push
sub
cmpsb
insb
pop
jb
aaa
inc
add
xchg
inc
xchg
pop
add
ss
dec
xorl
mov
dec
sub
test
sarb
or
sbb
ss
ljmp
sub
push
or
mov
mov
sub
popa
push
xchg
inc
cmp
out
inc
dec
dec
sub
cmp
punpckldq
push
inc
aaa
jmp
mov
pop
push
xchg
in
cli
and
imul
shl
cmpsl
cmc
pop
xor
add
popa
pop
ret
push
gs
fwait
mov
ss
fs
or
out
repnz
adc
movsl
insb
xor
sbb
fimuls
push
cs
dec
sub
faddl
aaa
xor
jmp
xor
xchg
push
add
dec
sub
mov
push
pop
pop
into
imul
test
sub
scas
imul
sub
xchg
inc
pop
popa
call
push
xor
push
dec
or
ja
sbb
cmpsb
mov
je
popa
inc
in
bound
dec
in
push
inc
js
push
imul
cmp
push
dec
jns
icebp
pop
adc
lret
xor
sbb
jo
dec
xor
loopne
lds
push
fwait
rcll
xor
addr16
outsl
jp
cmp
ljmp
jmp
and
pop
pop
fwait
popf
cmpsl
jae
jecxz
or
cwtl
push
in
insb
clc
stc
bound
insl
loop
or
and
and
sub
jb
push
stos
xor
mov
push
xor
push
insb
cmp
cmpsb
inc
cmp
fs
daa
push
inc
loopne
insb
aas
inc
jae
fidivrs
imul
dec
or
out
pop
pop
cmpsb
sarb
mov
inc
ret
out
adc
mov
aaa
and
dec
xchg
imul
pop
popa
lcall
ficoms
sub
xchg
loop
or
push
xor
test
dec
movsl
pop
cli
inc
pop
adc
stos
push
cs
mov
push
mov
dec
sbb
inc
xchg
out
lods
adc
call
dec
insl
xlat
lret
pop
scas
push
aaa
js
loop
data16
dec
mov
int
ret
mov
push
sbb
mov
push
dec
pusha
mov
rorb
cwtl
repz
inc
xchg
ljmp
adc
dec
pop
or
scas
roll
add
out
mov
js
les
add
or
jp
xor
dec
shr
pop
pop
fistl
dec
aad
sub
xchg
jg
mov
push
pop
ret
mov
inc
dec
xchg
mov
mov
adc
lret
stos
xor
inc
ds
jmp
and
out
out
call
push
jmp
sbb
push
ficompl
and
pusha
bound
mov
dec
pop
sub
dec
push
pop
lea
test
sub
sarb
adc
sbb
xchg
xor
sub
cmp
repnz
add
out
inc
call
push
inc
mov
xor
pop
lds
cmp
das
clc
cmp
inc
cwtl
pop
js
inc
cmpsb
test
push
ja
fs
pop
xor
sub
in
add
cmpsb
sarb
sar
pop
push
sub
out
push
pop
movsl
cs
xorb
in
pop
scas
inc
and
cmp
loope
das
jne
dec
test
mov
or
arpl
add
imul
ret
test
cmp
sub
push
pop
sbb
dec
mov
sub
or
mov
push
pop
xor
mov
mov
imul
mov
ljmp
popa
push
mov
jle
jl
or
mov
shrl
jmp
add
dec
pop
sbb
sub
xor
in
push
pop
jbe
xor
or
sub
inc
orl
jp
inc
clc
xor
push
dec
mov
pop
jae
bound
jp
or
inc
loop
aam
cli
cmp
jne
movsl
test
lods
ret
mov
push
pop
int
push
sub
dec
and
repnz
xor
pop
jle
mov
and
sarb
xchg
imul
cmp
jo
orb
les
lds
cltd
out
mov
inc
sub
cmpsb
or
ficompl
sub
fldl
ja
in
mov
int3
test
repz
sub
sub
mov
jne
inc
jno
pop
inc
mov
jns
push
mov
sub
push
mov
xchg
inc
push
ss
xlat
mov
divb
sub
cmp
dec
ljmp
dec
xor
cmp
icebp
pop
mov
xchg
lds
pop
fnstcw
cltd
cmp
lea
mov
xor
mov
arpl
inc
push
lds
xchg
inc
mov
lock
int3
pusha
fimull
jge
scas
jnp
and
imul
inc
dec
or
pop
into
ret
fldenv
xorl
xor
or
lds
bound
stos
cmp
xor
ret
cs
cltd
sub
lcall
xor
push
mov
xor
xorb
pop
movsl
adc
aad
fldenv
pop
shlb
xor
icebp
ljmp
pop
dec
push
das
push
imul
lds
cmp
jno
pop
xor
outsl
xchg
inc
popa
inc
in
pop
das
in
push
cltd
xor
xor
repz
sarb
inc
inc
lods
mov
push
sti
addr16
sub
jno
xor
xor
sub
dec
inc
inc
dec
sub
add
fcmovbe
inc
dec
test
push
pop
enter
jnp
das
push
lods
inc
aad
xchg
bound
arpl
fsubrl
jns
cmp
arpl
add
or
rorb
mov
push
insb
adc
xor
das
cmpsb
pop
cmp
test
imul
mov
or
data16
adc
ficomps
dec
pop
inc
mov
push
ret
inc
jbe
dec
push
cmp
push
popa
and
dec
movsb
jae
xor
test
dec
xlat
jmp
stc
lret
xor
or
adc
dec
ljmp
dec
pop
lea
jne
cltd
inc
fidivl
xchg
or
jmp
fbstp
pop
xchg
mov
pusha
movsl
divl
mov
movsb
cmp
mov
aad
and
sub
jmp
iret
cmc
adc
xchg
mov
inc
inc
daa
sub
or
shlb
adc
sbb
hlt
fs
popf
pop
cmp
mov
jp
push
xor
inc
push
push
out
out
jp
inc
pop
std
and
data16
lcall
adc
aaa
clc
inc
test
shrl
in
jp
sub
push
add
pop
dec
jne
jmp
push
push
pop
dec
clc
jb
in
cmp
xlat
mov
mov
push
clc
pop
bound
loopne
pop
cmp
adc
sub
push
cmp
inc
icebp
movsb
sub
push
or
imul
sub
in
pop
shll
bound
adc
aaa
push
lahf
cmp
mov
jg
sub
lea
mov
cmp
in
push
inc
cmpsl
ljmp
push
bound
test
and
sbb
xor
sbb
jecxz
inc
sub
imul
xor
or
adc
call
sub
cmp
mov
popa
cmp
jle
mov
cltd
fs
dec
cmp
imul
arpl
dec
xchg
fdiv
push
cmp
dec
jmp
lods
xor
xor
push
popf
cmp
mov
imul
stc
testl
mov
xor
inc
and
loope
fs
dec
pop
xchg
das
imul
push
clc
inc
sub
cli
inc
xchg
and
mov
lea
add
dec
adc
dec
lods
faddl
pop
fs
insl
push
or
sub
inc
adc
das
roll
enter
aas
xor
inc
imul
xchg
cmp
adc
inc
or
push
jo
test
xchg
mov
stos
add
in
sbb
test
leave
lcall
jg
cmp
ljmp
shlb
movsl
in
cwtl
sub
and
mov
mov
jmp
leave
inc
jns
in
in
pusha
sub
call
aas
inc
xlat
pop
int
or
ljmp
dec
cmp
popf
mov
add
outsb
pop
dec
mov
ljmp
jp
aaa
dec
loopne
sub
xor
mov
mulb
aaa
ljmp
pop
dec
mov
outsb
test
shr
clc
testb
aas
dec
data16
push
aas
push
xchg
dec
ljmp
fistps
jns
clc
inc
repnz
pop
arpl
sahf
sub
xchg
test
mov
movsl
insb
cmc
loopne
sub
inc
repnz
pop
push
sub
fisubrl
sub
xor
fidivrl
ljmp
shr
dec
repz
insb
sub
scas
push
fistpl
add
cmp
or
rolb
sub
mov
push
xchg
ret
mov
lods
leave
mov
test
sub
dec
rcrl
clc
cmp
add
movsb
daa
lea
xor
or
dec
cmpsb
mov
test
data16
js
xor
sbb
xor
mov
pusha
in
movsl
cmc
add
cmp
mov
xor
popa
jecxz
pop
in
bound
adc
stc
in
inc
pop
fsubr
inc
ds
pop
and
pusha
push
and
push
cmp
mov
lds
inc
es
sbb
xor
shrb
insb
or
inc
int3
fisubl
dec
push
dec
shl
test
in
xchg
pop
out
pop
bound
dec
jno
jle
sbb
aad
jge
cmp
sub
adc
enter
cmp
lahf
jmp
push
sub
dec
in
xchg
push
and
xor
xchg
cmp
pushf
mov
xchg
fbstp
jl
dec
xlat
jno
cmp
pop
ss
pop
xchg
mov
in
pop
das
mov
and
xchg
sbb
jmp
add
adc
outsl
sbb
pop
cltd
dec
aas
cwtl
dec
pop
sub
inc
inc
js
xchg
or
pop
iret
dec
sub
pop
pop
inc
jno
mov
sbb
lahf
sub
mov
lds
dec
inc
pusha
mov
cli
cmp
push
call
sbb
xor
stos
cmpsl
pushf
jg
in
movsl
xchg
out
mov
js
xor
cmp
repnz
imul
je
sbb
push
cmp
inc
push
dec
xor
ror
insb
mov
push
inc
rclb
cmc
shl
sub
leave
cmp
scas
dec
add
je
sbb
fidivl
xchg
push
pop
xlat
jmp
mov
sub
in
hlt
fisubrs
sahf
inc
fwait
dec
pop
cltd
xchg
test
cmp
cmc
cmp
xor
int
movsl
push
cmp
aaa
cmp
imul
inc
fidivs
pop
jle
pop
and
xlat
cmp
xor
mov
es
xchg
in
add
xchg
loopne
imul
in
outsb
sub
mov
xlat
pop
dec
or
push
xchg
bound
lcall
adcl
xor
out
call
inc
dec
aas
es
mov
movsl
dec
iret
inc
sub
bound
xlat
mov
lret
xor
cmp
sbb
mov
add
jne
inc
loopne
arpl
dec
ljmp
fistps
adc
mov
lock
xor
pop
jae
pop
xor
mov
sbb
dec
sti
xor
or
mov
cwtl
cs
xchg
sub
cmp
mov
mov
push
cmp
pmaddwd
and
lds
clc
inc
inc
pop
rorl
pop
add
cmp
movsl
insl
sub
arpl
dec
fldl
push
jo
hlt
cs
sub
ljmp
push
sub
xchg
mov
cmp
insb
sub
movsb
js
cli
push
xchg
dec
pop
jecxz
mov
cmp
add
jnp
dec
pop
inc
outsl
sub
push
cmpsb
fsubrs
aaa
subb
cmp
sub
pop
jl
adc
ss
cmp
jo
mov
dec
js
icebp
std
sub
cmp
jp
dec
clc
rcrb
mov
push
cmp
cmp
gs
cmp
add
js
mov
jmp
cmp
xor
sub
jae
xchg
sub
pop
sub
sub
scas
adc
pop
and
xor
adc
adc
inc
inc
fcmovb
or
jnp
sbb
cmp
mov
in
dec
push
xlat
lock
xor
sbb
mov
inc
aaa
mov
and
cmp
dec
test
add
mov
jbe
push
jbe
nop
shl
adc
inc
mov
pop
std
or
lret
popa
push
pop
push
inc
lret
jecxz
sbb
dec
loop
ds
lock
pop
xor
dec
dec
inc
outsb
sbb
cmp
sub
or
or
dec
cmp
ja
mov
in
inc
push
push
jne
in
push
dec
xor
push
push
inc
dec
add
mov
lahf
pop
dec
pop
jmp
aad
clc
pop
cmpsl
sub
test
daa
stos
lods
movsb
cld
bound
or
push
push
ljmp
jp
stc
xor
lods
cmp
xor
out
mov
inc
adcl
aas
loopne
sub
sbb
dec
jo
cs
test
pusha
addr16
mov
adc
mov
pop
mull
fwait
cmp
cmpsb
pop
and
imul
adc
jbe
dec
test
xor
dec
movsl
add
cmp
data16
mov
sarl
lods
ficoms
cmp
sbb
xchg
or
cli
mov
dec
or
test
outsb
and
clc
adc
sub
jmp
cmp
call
cmp
push
push
cmpsl
mov
xchg
sub
pop
test
jno
xor
repnz
xchg
dec
out
inc
jb
xchg
sbb
sub
xor
pop
pop
jecxz
jl
dec
xlat
sub
cmp
mov
sub
aaa
jg
sub
mov
inc
inc
jmp
scas
mov
dec
jmp
ja
movsl
xchg
sbb
pop
aas
xlat
lock
pop
inc
outsb
pop
and
std
loop
jbe
inc
lods
dec
push
jae
addr16
and
test
xchg
aaa
jae
cld
xor
push
jno
lea
popf
scas
mov
cmp
sbb
push
inc
imul
push
lock
or
or
fisttpll
mov
dec
sub
cmp
not
push
inc
loop
mov
scas
push
mov
sub
cli
inc
inc
adc
or
fisttps
jne
lds
jmp
loope
xor
cld
xor
add
scas
cli
xor
cwtl
cmp
lret
add
js
adc
jmp
movsl
jb
inc
inc
pop
push
sbb
outsb
mull
dec
dec
cmc
push
daa
fucomp
sub
mov
gs
cmp
jg
mov
imul
xchg
test
ja,pn
fwait
bound
lea
popa
pushf
jns
cmp
mov
hlt
pop
shl
aaa
fldcw
lret
pop
sub
pop
inc
sbb
lcall
cmp
fwait
mov
pusha
stos
pop
inc
outsb
test
push
sbb
sub
adc
cmpsb
ret
sub
out
inc
pop
mov
les
dec
aaa
xor
outsl
pop
xchg
scas
mov
adc
fisubs
and
xchg
jns
addr16
cmp
pusha
ljmp
mov
inc
adc
dec
js
push
pop
ficoms
ja,pn
insl
xor
inc
pop
lcall
push
sar
push
dec
inc
cmp
movsl
push
sti
ss
jbe
cltd
hlt
ja
jp
push
aam
mov
aad
dec
mov
in
xor
lock
pop
dec
insb
call
jns
pop
cmpsl
cmc
loop
into
test
imul
dec
repnz
lret
in
adc
movsl
cmp
sub
pop
lcall
and
pushf
das
sbb
pop
and
aad
sub
ret
mov
sti
pop
dec
das
stos
sub
pop
pop
xor
daa
jge
icebp
xchg
sub
test
pop
sbb
jp
inc
or
xor
cmp
imul
sub
or
pop
sbb
xchg
hlt
mov
push
cmp
cli
inc
testl
les
repz
std
idiv
pop
test
push
cli
loop
mov
lods
cmp
pop
rol
mov
mov
addr16
shrb
xor
inc
push
jmp
hlt
jne
pusha
shrb
and
bound
cmpsb
mov
cmp
outsl
xor
lock
int
cmc
ss
imul
pop
pop
adc
scas
aad
push
insl
hlt
jnp
fbld
std
add
dec
jmp
enter
push
xchg
outsb
bound
xor
sub
mov
cmpsl
subb
mov
dec
jns
sub
sub
fucomip
xchg
out
dec
sub
mov
and
fdivs
jmp
pop
and
loop
pop
push
movsb
jb
sbb
imul
aam
cmc
hlt
dec
ljmp
and
sbb
arpl
sbb
mov
std
cmp
jno
jnp
fisubrl
dec
frstor
fldl2e
fimull
popa
dec
xchg
push
cwtl
xor
loopne
push
ss
or
or
bnd
pop
pop
dec
insl
out
das
cmp
dec
cmpsb
push
cld
sbb
sub
std
xchg
inc
jmp
dec
mov
das
fs
sti
cmpsl
sub
sarb
arpl
mov
dec
stos
cmp
jb
inc
and
popf
loop
int3
dec
sbb
add
add
daa
stc
mov
fwait
gs
inc
dec
xor
arpl
inc
aas
fstpt
ret
das
outsl
in
bound
and
movsl
into
shrl
mov
mov
aaa
xor
ljmp
xor
cs
test
push
adc
insl
dec
lahf
bound
repnz
mov
or
in
sub
jo
pop
mov
cmp
cmp
dec
dec
or
or
insl
xlat
lods
jge
or
dec
outsb
push
jnp
jecxz
add
addr16
mov
repnz
pop
mov
pop
fwait
sub
dec
mov
xchg
stos
push
dec
xlat
sub
push
scas
adc
xor
dec
flds
ret
mov
loop
jmp
fwait
sub
in
xchg
cmp
inc
push
fs
stos
pop
dec
stos
add
push
dec
mov
mov
in
shrb
lods
xchg
in
pop
pop
icebp
fiadds
xchg
jns
dec
adc
cmp
cmp
test
sbb
push
sub
push
mov
cmpsl
out
push
in
cmp
cmp
mov
mov
push
stos
push
ret
data16
lods
cli
movsb
mov
xor
jne
cmpsl
pop
xchg
xor
rcrb
adc
clc
aas
mov
sbb
cmp
add
inc
jb
les
fstps
xchg
cs
popa
add
fnstcw
sti
ljmp
inc
adc
inc
xchg
sub
mov
lods
jbe
aaa
xor
inc
mov
imulb
sbb
inc
push
mov
xchg
popl
push
jnp
cmp
cs
push
dec
leave
in
mov
push
inc
dec
movsb
cmpsl
jge
ret
cmp
pop
or
pop
cltd
test
jo
push
jmp
ror
xchg
arpl
push
mov
inc
mov
pop
pop
mov
fnstcw
dec
bound
faddl
cmp
mov
clc
es
xchg
add
sub
ret
lds
aam
inc
mov
les
ljmp
cmpsb
dec
mov
into
push
fiadds
jno
and
push
push
dec
cmp
ret
ret
insl
add
dec
aaa
cwtl
js
dec
das
icebp
push
sub
inc
bound
adc
mov
push
test
push
sbb
insl
push
leave
clc
stos
jp
dec
dec
lods
popf
push
push
sbb
bound
je
in
sti
sub
cmp
or
ljmp
add
pusha
xor
incb
cmp
out
scas
pop
push
sahf
fwait
cwtl
push
and
push
and
cmp
xor
cli
sbb
insb
in
gs
mov
lds
dec
dec
int3
inc
shl
mov
das
loope
shlb
imull
int3
imul
mov
mov
aaa
and
push
scas
testb
ljmp
push
cmp
push
jmp
pop
cli
or
dec
cld
jno
pop
cmp
dec
push
inc
inc
leave
pop
xor
in
and
cmp
jmp
data16
push
mov
scas
and
pop
sbb
jp
pop
dec
mov
dec
add
xchg
adc
mov
mov
xor
sub
dec
mov
aam
in
inc
dec
mov
in
mov
outsl
mov
adc
sub
or
xchg
imull
dec
xor
aas
inc
dec
addr16
gs
sub
ja
sar
jp
push
adc
mov
ds
scas
movsl
xor
pop
fwait
mov
inc
mov
cmp
inc
mov
mov
push
aaa
iret
cmp
push
sahf
xor
cmc
imul
xor
xlat
cmp
xlat
inc
push
cmp
mov
push
mov
movsl
add
insl
cmp
test
pop
sbbl
ljmp
std
rcl
xor
add
and
cmp
xchg
testb
das
mov
jmp
inc
cmp
fnsave
pop
pop
xor
outsb
popa
xor
imul
xor
into
dec
and
pop
adc
inc
data16
hlt
cmpsl
ljmp
push
xor
loope
pop
insl
dec
imul
data16
xor
cmp
clc
bound
inc
xchg
inc
cmc
mov
push
dec
push
out
xor
xlat
sub
popa
sub
jnp
xabort
lret
dec
aaa
mov
dec
dec
cmp
xchg
dec
pop
pop
nop
sbb
pop
jae
shl
jo
jns
inc
test
pop
ja
sub
aas
pushf
movsl
dec
cs
jne
push
pop
cs
out
test
cli
pop
push
push
cmp
push
xchg
cs
movsb
out
jp
test
repnz
mov
pop
inc
cmp
repnz
addb
mov
stc
inc
xchg
xor
inc
sub
push
mov
sbb
fisubl
adc
hlt
out
cld
lahf
test
in
cmp
jge
das
inc
mov
inc
cltd
mov
sarl
cmp
xor
pop
bound
movsl
dec
scas
cmp
sub
je
lret
jp
xor
loopne
scas
push
subb
out
shlb
xchg
stc
push
dec
sbb
inc
push
jmp
push
adc
xor
cmp
push
cltd
mov
inc
xchg
xor
xlat
js
xor
sbb
jne
jl
push
xor
jne
or
xor
sbb
pop
lret
adc
sub
xchg
lahf
div
xchg
sub
add
pop
repnz
imul
pop
inc
and
sub
aam
xor
mov
cmp
mov
movsl
inc
sahf
sti
inc
pop
and
pop
das
shll
mov
push
mov
cmp
jp
xor
mov
loope
stc
cmp
movb
pop
inc
push
sti
xchg
xchg
cmp
dec
jmp
cli
jae
push
out
outsb
pop
cmp
stc
dec
std
cmp
cmp
sbb
in
clc
icebp
inc
dec
or
js
dec
cmp
in
push
imul
jb
loop
dec
movsl
sbb
inc
and
gs
bound
push
mov
fnsave
cwtl
dec
jmp
inc
add
daa
popf
sbb
adc
je
push
dec
dec
rcll
pusha
mov
sub
adc
cmp
mov
jp
adc
push
jle
or
sub
clc
and
xchg
jge
cmpsl
rorb
push
xchg
inc
push
push
dec
test
or
cmp
fnstcw
sbb
cmp
sub
mov
in
imul
cmp
ss
push
mov
lahf
xor
mov
dec
xchg
dec
inc
in
test
inc
imul
mov
imulb
inc
pop
popa
inc
sub
sbb
inc
sub
mov
pop
movsb
mov
xchg
sub
add
bnd
mov
mov
mov
inc
push
pop
in
popa
scas
cmp
inc
lods
hlt
ds
add
mov
mov
pop
mov
or
hlt
adc
mov
popa
adc
push
push
test
jbe
inc
movsl
shlb
inc
mov
clc
mov
push
jge
inc
sub
je
jp
xor
lds
sub
mov
push
clc
pop
pushf
dec
fldenv
inc
xlat
scas
xchg
pusha
adc
jmp
push
xor
pop
hlt
ss
mov
mov
into
pop
lock
sub
lock
lret
leave
push
mov
aaa
sub
xchg
mov
mov
decl
in
jne
sub
ja
leave
pop
sub
inc
jmp
mov
cmp
add
lret
movsl
insb
push
data16
icebp
dec
xor
das
ljmp
add
pusha
mov
daa
sub
test
xor
dec
and
or
mov
cmp
pusha
dec
loopne
inc
insl
ljmp
sbb
cmpsb
rorb
jno
cmp
dec
arpl
test
pmaddwd
fs
outsl
push
mov
or
mov
stos
inc
inc
adc
aaa
pop
sub
adc
jmp
pop
lret
sub
fucomi
xor
cmp
cmp
pop
adc
stos
les
add
dec
mov
cli
dec
jno
lahf
and
sbb
fs
push
cmp
mov
ja
sbb
xor
scas
dec
dec
imul
xchg
dec
lods
mov
inc
pop
or
pusha
jbe
test
push
xor
orl
int3
mov
pop
xor
sub
sub
cmpsl
sbb
sub
cmpsb
jmp
jnp
ljmp
push
sub
or
mov
dec
dec
dec
sub
add
cltd
mov
mov
and
insl
gs
or
xchg
dec
pop
cmc
mov
sbb
pusha
ret
fiaddl
xor
push
aaa
cmp
adcl
aas
mov
sub
into
ret
pop
rorb
in
and
stc
mov
jmp
dec
aas
ljmp
fiaddl
mov
cmpsl
mov
pop
sbb
xlat
out
push
out
xor
push
dec
inc
jmp
scas
mov
fisubs
push
fwait
stc
xchg
mov
addr16
mov
aad
test
bound
cmp
jno
mov
ds
test
push
mov
dec
cmp
pop
inc
xor
lret
cmp
mov
mov
mov
je
in
push
cs
cmp
xor
xlat
aaa
mov
data16
mov
cmp
cmc
fistl
inc
das
sahf
cmp
cld
ss
dec
push
imul
xor
std
jno
fs
cmpsb
mov
test
shll
repnz
mov
dec
stos
loopnew
jmp
imulb
dec
das
es
aas
nop
jo
pop
mov
fidivrl
push
das
inc
fs
int3
push
ss
in
mov
data16
ljmp
ficompl
es
sub
sub
jmp
sub
dec
push
push
push
dec
mov
mov
xchg
adc
inc
jmp
bound
sub
inc
dec
sbb
cmp
addb
ja
stos
shll
leave
dec
sbbl
into
jmp
mov
pop
rcll
dec
les
mov
les
push
sbb
ds
sub
or
xor
adc
mov
mov
repz
imul
popa
jmp
in
test
insl
int3
jns
fdiv
cmp
lret
inc
sub
insb
aaa
pop
cmp
movsb
xchg
mov
stc
std
icebp
xor
fdivs
push
inc
gs
cmpsl
in
cld
xchg
mov
mov
subl
ljmp
out
lret
fildl
sbb
imul
test
call
add
ss
lds
lods
lds
js
movsb
int
pop
jg
insb
push
add
pop
scas
pop
push
push
pop
and
imul
cmpsb
std
xor
loop
flds
inc
pop
rorl
pop
mov
lock
sub
popa
sub
dec
dec
push
jge
cltd
aam
int
cmp
sub
pop
repz
pop
shll
inc
sub
push
xor
lock
popf
sbb
sub
addr16
mov
push
lods
xchg
das
jge
jmp
cmp
cs
insl
test
ret
sbb
mov
out
push
and
jbe
mov
addr16
dec
jns
das
mov
shlb
dec
adc
mov
aaa
movsl
cltd
arpl
dec
ret
lods
js
push
imul
cmpsl
imul
cmpsb
shrl
jo
cmp
or
dec
adc
inc
stos
data16
jmp
cmovle
sub
pop
ss
and
aaa
ljmp
and
mov
xor
and
fisubl
mov
out
insb
cs
mov
ljmp
xlat
pop
loop
stc
xor
xor
or
cmp
mov
ljmp
fidivl
xor
pop
cs
in
in
cmp
fisubrl
pushf
adc
push
and
notb
xor
cmc
push
pusha
sbb
ds
outsb
mov
sbb
ljmp
sbb
pop
pop
and
mov
inc
mov
xchg
lods
pop
inc
inc
xchg
testl
mov
mov
outsl
lods
pop
cmp
jno
jmp
cwtl
mov
sbb
test
push
inc
mov
mov
ret
jne
pop
push
xor
sbb
or
icebp
push
or
stos
xor
add
popa
or
cmp
push
popa
cmp
cmpsl
add
orl
push
inc
or
in
push
ds
out
fildll
add
imul
std
dec
push
push
push
mov
outsb
aaa
pop
jnp
add
bound
rorb
cmpsb
jle
inc
stos
xchg
xor
nop
daa
xor
add
push
insl
mov
mov
cmp
repnz
out
dec
sub
ret
push
insb
push
jne
push
cld
pop
dec
outsb
sarb
push
cld
inc
imul
cmp
sbb
imul
dec
outsb
int3
xor
lds
dec
cmp
in
or
dec
iret
jl
jbe
push
popa
cli
or
adc
mov
pop
mov
push
ss
mov
mov
shrb
jmp
mov
ljmp
push
push
push
loop
pop
sub
aaa
sub
or
dec
test
pop
in
out
cmp
outsl
lret
cmc
sub
pop
jbe
cltd
in
divb
jge
ljmp
adc
lock
bound
aas
inc
mov
ss
imul
sub
repnz
and
pop
adc
pop
pusha
push
push
in
pop
inc
icebp
stos
popf
push
mov
stc
sbb
dec
sub
je
mov
ljmp
inc
out
ljmp
dec
das
cmp
cmp
jl
pop
sub
clc
adc
std
js
jle
dec
fucomip
shlb
sbb
fcmovb
fildl
inc
aas
mov
xor
sbb
in
mov
dec
mov
pop
xchg
pop
cmp
dec
sub
adc
sub
ja
or
xor
pop
xor
sub
pushf
addr16
xchg
cmp
push
dec
sub
ret
xor
cli
inc
push
icebp
cli
mov
jb
cmp
cmpsl
push
movsb
mov
xchg
add
inc
repnz
sub
notb
cs
sub
lfs
sub
push
mov
mov
imul
xchg
sub
loop
test
xlat
icebp
xchg
movsl
shll
xchg
bound
xor
cmpsb
subl
cmp
jne
push
dec
adc
fs
dec
sub
ret
jo
cs
jge
inc
add
jmp
xor
cmp
lea
in
loope
ljmp
adc
mov
inc
add
pop
das
dec
pop
scas
mov
push
inc
cmp
sti
std
xorb
sub
jbe
in
xchg
push
cmpsb
js
fiadds
cs
push
pop
cmp
aas
loopne
cmp
sub
push
iret
repz
test
movsb
movsl
cld
getsec
arpl
sub
sub
mov
jno
repz
lret
xlat
arpl
inc
xor
sub
leave
sub
ljmp
imulb
int3
out
dec
xor
dec
cmp
sar
testb
push
push
mov
sub
sub
test
adc
test
push
xchg
fists
pop
aad
pop
mov
cs
in
xchg
xor
pop
jecxz
fdivrs
jno
clc
push
bound
rcl
or
xor
push
cmpsb
outsb
mov
cld
mov
jp
inc
push
lock
movsl
imul
mov
jecxz
xor
ds
sub
imul
dec
sub
xor
shr
shrl
shll
sbb
push
incb
cmp
fs
imul
pusha
xchg
mov
mov
pop
sahf
push
sbb
inc
xor
push
jmp
cmp
movsb
mov
push
scas
lods
cmp
pop
aad
push
scas
sbb
out
lcall
cmp
ja,pn
sub
sbb
pop
insb
lea
cmp
push
push
mov
loopne
scas
xor
xor
movsb
fs
xor
xor
or
pop
js
cmp
mov
mov
jmp
mov
pop
stos
scas
inc
push
fs
adc
bound
xchg
push
dec
push
sub
icebp
sbbb
add
pop
sbb
outsb
aam
das
sub
les
mov
dec
dec
outsl
push
int
mov
cmp
push
jmp
divb
inc
xor
pusha
inc
imul
loop
clc
lods
sub
pop
fstpt
mov
addl
scas
les
pop
mov
mov
loope
rorl
jae
sub
cmp
pop
cs
sub
mov
sbb
inc
cmp
or
mov
mov
lea
lods
dec
sbb
xor
push
xchg
sub
xor
cmp
mov
shl
sbb
push
mov
inc
test
sub
sub
dec
jp
cmpsl
mov
in
sub
pop
sub
pop
nop
cmp
lds
push
xchg
dec
xchg
hlt
std
int
enter
pop
ljmp
out
sub
das
mov
jns
fildl
ret
pop
or
sahf
add
arpl
daa
shl
inc
cmp
fisubrs
push
mov
pop
fmull
inc
dec
pop
jne
adc
lahf
call
fsubl
mov
movsl
loop
add
mov
pop
jnp
inc
ljmp
pusha
sub
mov
cmp
fcomp
es
and
or
loop
leave
out
cmp
div
fs
jg
cmpsb
push
cs
jne
pusha
fs
dec
mov
push
push
and
mov
sub
mov
push
or
inc
call
dec
inc
mov
xchg
dec
mov
push
dec
aas
scas
in
or
xchg
and
cmp
sub
mov
loope
or
pop
push
test
mov
es
repz
cmp
popf
cmpsb
std
push
or
sub
aam
movsb
subb
ss
ds
dec
or
mov
leave
mov
inc
jns
scas
addr16
stos
ret
add
push
in
popa
cmp
fisubrl
insb
lea
call
jmpw
fisttps
iret
mov
xor
xor
xchg
jo
sub
mov
repnz
cmp
inc
jle
sub
jmp
les
stc
icebp
repz
testb
insb
cmp
xor
xor
xor
addr16
or
cmp
push
mov
ja
push
jp
fs
in
lcall
xor
xchg
mov
fnstcw
subl
ss
cmp
mov
mov
pop
dec
cli
jp
pop
push
jmp
out
scas
add
inc
int
cmpsb
arpl
push
xor
dec
insb
rclb
pop
pop
xor
movsl
push
sahf
xor
xchg
out
in
pop
dec
pop
adc
mov
pop
xor
in
scas
in
add
xor
pop
fs
aam
mov
pop
xchg
mov
pop
inc
outsb
dec
sarb
xor
adc
or
cmp
aas
jns
jle
add
xor
js
repnz
sub
sub
pop
add
sti
loopne
mov
mov
in
scas
ja
popa
ss
in
inc
pusha
repnz
cmp
mov
pusha
ss
jmp
adc
sub
sub
in
fmull
xor
pop
sub
pop
lock
xor
fidivrs
pop
loope
scas
leave
pusha
stc
inc
mov
jno
bound
fistpl
in
pop
mov
inc
int
in
adc
xchg
mov
mov
mov
inc
out
es
inc
aad
ss
repnz
dec
push
inc
cmp
and
in
mov
push
add
inc
push
push
test
xlat
imul
mov
mov
les
dec
xor
sub
jp
cs
cwtl
inc
cmpsl
add
pop
inc
xchg
dec
sub
sub
cmp
mov
pop
adc
fucomi
loopne
js
les
mov
aaa
cmp
cmp
inc
push
sub
pop
adc
aas
xlat
in
test
mov
and
adc
pop
sbb
pop
push
jne
inc
arpl
dec
stos
xchg
mov
cs
std
pop
push
lock
scas
fdiv
xor
aas
push
jne
pop
dec
and
mov
and
inc
es
inc
and
jmp
push
push
cli
pop
pop
imul
mov
pop
mov
cli
fsubs
out
sub
xor
icebp
movsl
sbb
sub
mov
or
lahf
push
lock
xchg
push
dec
popa
ljmp
xor
dec
xor
dec
or
pop
shll
push
dec
xchg
es
rcrb
scas
jp
das
sub
add
imul
pop
int3
mov
cmp
loopne
dec
xor
pop
dec
test
outsl
mov
js
dec
dec
dec
cli
dec
scas
or
mov
test
mov
imul
fs
and
inc
repnz
insl
pop
sahf
cs
testb
icebp
ss
cmp
cs
inc
in
outsb
cld
cmp
pop
stc
sub
in
sub
fdivl
cmpl
xchg
cmc
ja
dec
pop
out
clc
cmp
or
lcall
sahf
mov
xor
jmp
push
int3
dec
or
pop
js
fucomip
frstor
aam
add
pop
stc
into
xchg
mov
inc
iret
imul
jnp
arpl
mov
or
mov
jbe
lret
pop
pop
mov
inc
dec
inc
xor
bound
stos
or
mov
outsb
cmp
fs
out
js
lret
sub
bnd
cli
push
add
shrl
sub
adc
bound
xor
out
push
pop
mov
decb
sahf
mov
cltd
out
mov
popa
popa
fisubrl
add
push
and
test
xor
pop
cmp
mov
push
xchg
xchg
or
aam
cmp
int
mov
fidivrl
jmp
inc
mov
push
gs
inc
daa
jge
dec
ss
cmp
cmpsl
mov
pop
fwait
outsl
pop
xor
mov
inc
jmp
dec
xor
sub
jle
lret
mov
pop
push
loope
fmul
mov
jo
outsb
lds
mov
test
out
lea
jecxz
mov
or
popa
mov
xor
pop
aaa
mov
test
xchg
stos
cmp
repnz
pop
cmc
bound
xor
mov
ds
cltd
fs
mov
ficomps
mov
xchg
in
ss
es
inc
ret
dec
dec
add
popw
xchg
jne
mov
xor
adc
adc
sbb
xor
fsubrl
and
and
dec
xchg
pop
leave
xor
dec
lds
in
inc
bnd
repnz
dec
dec
ret
movsb
pop
push
cs
bound
cmpsb
jle
dec
sub
xor
das
push
lods
icebp
adc
idivb
xchg
xor
push
mov
cmp
sahf
aam
int3
fisubl
pop
mov
lock
inc
jo
out
mov
inc
sub
cmp
cmc
pop
imul
mov
xor
fisubs
stc
xor
popa
or
xor
jl
cmp
or
ret
inc
xor
cmpsl
fsubs
sub
xor
push
loopne
ja
dec
fs
push
addr16
push
in
sahf
scas
sub
das
mov
add
sarl
repnz
mov
cmp
inc
dec
xchg
xor
inc
push
inc
cmpsl
iret
or
aaa
ljmp
clc
pop
sub
cmpsl
inc
adc
jns
ds
mov
mov
mov
je
data16
mov
fistl
pop
mov
or
jp
dec
daa
addl
and
push
pop
rcrl
push
popf
popa
sub
lret
gs
bound
dec
das
in
enter
mov
fs
xlat
inc
stos
xor
aam
pop
xchg
imul
insl
test
in
sbb
push
jmp
rcll
dec
pop
dec
push
mov
jmp
loop
jb
je
movsb
push
bound
lahf
lea
dec
pushf
imul
dec
pop
bound
adc
test
or
lahf
push
or
ret
daa
js
xchg
sti
mov
cmp
movsl
fwait
mov
sub
dec
cli
push
repnz
call
cmpsb
out
ljmp
inc
push
addr16
fildl
pop
out
in
mov
testb
push
stos
shlb
xor
sub
pop
and
cmc
push
jl
cmp
adc
imul
sub
inc
or
sub
cmpsb
movsl
cmp
dec
xchg
pop
test
lret
sub
or
fsubl
inc
lock
xchg
sub
je
pop
mov
cmp
xor
test
dec
dec
fnstsw
in
clc
dec
pop
mov
pop
push
js
xchg
std
loope
dec
adc
fcmove
or
repz
dec
jmp
jmp
xor
mull
sub
addr16
or
dec
shlb
lds
lahf
movsl
out
xchg
lret
pop
sub
popf
and
push
ljmp
dec
cltd
leave
jmp
sti
hlt
data16
rolb
adc
lahf
dec
pop
push
aaa
cmpsl
sub
mov
lret
inc
icebp
lcall
inc
cmp
out
ja
dec
push
inc
push
push
pushw
testb
xor
dec
cmp
je
sti
xor
sub
cmpsl
jae
mov
sub
mov
or
push
inc
xor
stos
sub
xor
jmp
test
push
inc
or
imul
jmp
pusha
aaa
ljmp
lods
or
gs
push
dec
ljmp
sahf
add
cs
and
jmp
pop
adc
imul
sub
mov
xorb
or
inc
sbb
ds
xlat
lock
repz
imul
and
out
jnp
sub
push
mov
xor
test
cmp
loopne
lods
pop
push
insb
les
dec
mov
or
out
sarl
xor
xchg
mov
cs
cmpsl
sub
mov
aaa
pusha
out
daa
imul
insb
push
mov
xor
or
shrb
sub
add
mov
imul
gs
lods
push
outsl
push
dec
dec
mov
xor
cmp
xor
pop
call
popa
das
sub
rolb
cmp
ficoms
in
shl
pop
dec
test
xor
or
sub
pop
mov
popa
pop
insl
outsb
cs
jmp
jp
aad
sub
in
jle
ss
testb
icebp
xor
lahf
jge
dec
addr16
inc
insl
stos
jmp
dec
dec
and
out
mov
cmp
repnz
ret
pop
hlt
xchg
fs
cmp
frstor
push
in
xor
inc
push
inc
pop
dec
pop
popa
ss
xor
cmp
and
lock
mov
popa
cmp
sub
imul
cs
dec
int
lock
sub
stos
scas
push
aaa
xor
call
xchg
mov
mov
dec
jl
mov
data16
xchg
in
push
pop
inc
sub
mov
cmp
inc
cmpsl
in
shll
insl
inc
ljmp
test
lods
push
stc
outsl
push
cmp
sbb
popa
mov
mov
or
int3
inc
push
mov
ss
xchg
divl
mov
jo
test
movsb
mov
jmp
in
or
cmp
test
pop
jmp
sub
in
pop
inc
xor
pop
sub
xlat
push
bound
pop
ret
sbb
add
xor
push
dec
cltd
loope
jge
aam
inc
ljmp
lods
stos
inc
pop
push
bnd
sahf
cltd
mov
pop
xor
sub
sbb
hlt
pop
sar
mov
cmp
jp
mov
leave
cmp
dec
pop
push
lahf
add
xor
mov
dec
inc
call
ja
dec
rcr
jns
gs
add
jmp
inc
sahf
and
call
xchg
mov
lods
in
pop
pop
fidivrs
popa
inc
jns
sahf
inc
xchg
aad
cmp
ret
xor
cmp
xor
cld
and
in
fs
xchg
or
xor
into
stos
int3
imul
push
les
push
sub
shr
icebp
push
lret
loop
or
jp
mov
inc
ds
rolb
xor
outsl
das
xor
mov
push
jg
dec
repz
stos
sub
mov
ja
lret
push
cmp
in
movsb
adc
fisubrl
inc
pop
enter
sarl
ja
in
cli
pop
push
fwait
xchg
outsb
inc
dec
inc
sub
shrl
sub
stc
in
aas
sub
aas
adc
sub
cmp
icebp
pop
jmp
imul
lods
ror
pop
push
xchg
scas
fidivs
push
jne
flds
mov
rep
pop
sub
dec
mov
pop
inc
dec
mov
je
icebp
pop
pop
mov
pusha
xor
cmc
movb
push
xor
ds
jmp
mov
xchg
lahf
pop
cs
out
int3
mov
xor
sub
sub
lods
popa
push
fwait
pop
jmp
jnp
inc
push
popa
cmp
mov
int3
cmpsl
das
xchg
icebp
stc
cmp
pop
in
sub
jmp
xorl
dec
dec
mov
and
or
fxch
hlt
mov
fwait
cmp
push
inc
lds
repnz
push
push
stos
scas
aam
repnz
pusha
push
lret
cli
mov
nop
sub
outsl
es
or
fdivs
sub
jne
mov
scas
aad
cltd
xor
lock
pop
aaa
jno
hlt
in
stc
insb
in
dec
pusha
xchg
sub
xor
adcl
scas
mov
inc
orl
fs
int
and
and
inc
or
xor
sbb
xchg
das
pop
imul
xor
pop
gs
jns
repnz
fcmovnbe
inc
jne
dec
aaa
add
iret
andb
lods
push
xor
enter
jge
sub
ret
out
popf
push
push
cmp
mov
inc
popa
pop
sub
outsl
cltd
sub
sub
jno
addb
mov
lods
imul
pop
mov
cli
inc
push
push
in
inc
xchg
dec
xor
lret
cmp
push
push
pop
ss
jmp
add
xor
mov
mov
insl
dec
push
cli
jg
pop
inc
aam
fincstp
int3
addr16
and
sbbl
ret
je
pop
in
dec
add
int3
adc
pop
lds
push
std
sub
adc
test
fstpt
jmp
jno
aaa
ds
jo
popf
xchg
inc
pop
jbe
fs
jmp
cmpsl
sub
mov
lahf
cmp
repnz
jmp
cmp
nop
cmp
repz
dec
imul
das
out
push
push
pop
dec
imul
xchg
push
out
jb
or
jmp
inc
cmpsl
xchg
fidivs
pop
test
xor
jle
dec
out
mov
bound
outsb
push
in
adc
lret
inc
das
pop
daa
sbb
xchg
scas
sbb
fimull
push
mov
mov
sbb
push
mov
std
orb
fs
je
popf
xor
std
iret
inc
dec
xor
bound
xor
pop
aam
movsb
lock
sbb
inc
push
inc
xor
leave
inc
xor
xchg
xchg
sahf
lods
mov
addr16
not
inc
cs
clc
cmpsl
mov
dec
pop
push
std
out
add
outsl
or
js
sub
enter
cmpsl
adc
out
sub
mov
xor
dec
dec
pop
sub
adc
mov
cmpsb
test
xor
mov
or
roll
cmp
push
out
dec
mov
dec
mov
xchg
mov
push
cltd
or
sub
cmp
or
call
imul
dec
pushf
push
shlb
test
or
mov
lods
mov
xor
jne
dec
dec
je
dec
mov
dec
pop
mov
sti
int
jmp
outsl
jbe
cmp
cmpsb
cmpsb
lret
adc
js
pop
flds
jmp
or
jnp
out
sahf
bound
cmp
sub
dec
in
popf
push
sub
jp
lods
sub
xor
sub
push
lods
data16
mov
inc
xlat
test
xchg
mov
fwait
pop
addr16
stos
adc
dec
jmp
lock
sub
inc
dec
leave
xchg
mov
push
cs
jne
sub
cmp
inc
adc
mulb
sub
int
stos
push
gs
mov
or
or
inc
push
les
bound
lret
sbb
cs
sbb
xor
pusha
mov
xchg
in
and
jae
inc
test
xlat
pop
jb
in
inc
imul
clc
or
imul
mov
mov
jmp
sbb
push
inc
shll
push
xor
out
mov
pop
jle
xor
pop
mov
cmp
fwait
out
pop
pop
das
sbb
fsubl
pop
stos
sub
decb
push
in
push
mov
ss
xchg
inc
sub
xchg
mov
adc
sub
xchg
xchg
xor
xchg
or
sub
pop
mov
inc
outsl
into
dec
bound
cmp
cmp
fnstenv
cmpsl
xor
pop
sub
pop
adc
pop
and
mov
lcall
pop
fwait
movsb
dec
mov
pop
inc
mov
hlt
idivb
cmp
xchg
dec
inc
dec
or
imul
lret
or
stos
push
sub
out
stos
pop
addr16
daa
add
jae
cmp
stc
push
cmpsl
or
mov
ds
ret
into
aam
and
xor
push
sub
mov
cmc
push
mov
int3
call
aaa
out
inc
inc
loop
cmpsl
jns
push
jo
pop
xchg
sub
push
sarl
mov
data16
arpl
in
jno
pop
inc
push
xchg
jb
sub
test
insb
inc
pop
insl
pop
sbb
and
sub
xchg
sub
xor
xlat
gs
cmp
aaa
cli
mov
lret
out
jge
mov
push
cmp
push
frstor
jle
cmp
jne
stos
lea
or
push
dec
in
scas
push
cli
decl
das
cmc
fistl
cld
movsb
inc
ja
inc
movsl
sub
and
inc
imul
stos
or
fisubl
push
sub
jg
hlt
inc
dec
jae,pn
xor
cmp
sub
pop
jl
push
or
stos
lret
xor
cld
lret
in
pop
jno
fs
int
jae
and
dec
out
xchg
push
jl
ds
jge
xchg
repz
add
insb
sub
add
stc
test
sub
adc
lock
push
mov
xlat
jmp
cli
notb
int
inc
js
mov
stos
jl
xor
add
and
pop
or
fs
mov
pop
sbb
xor
sbb
xor
pop
ret
jp
dec
or
mov
mov
out
hlt
inc
push
mov
jns
dec
inc
cmp
sub
cwtl
inc
repz
pop
adcb
ja
sbb
cmp
mov
mov
das
fs
data16
arpl
push
inc
pop
inc
xchg
nop
fs
out
in
dec
pop
inc
ljmp
fs
test
jae
jle
ja
xor
andb
pop
lret
jns
imul
mov
pusha
loopne
cmp
outsb
jle
sahf
shrl
inc
jb
push
sub
cmp
push
pop
adcb
pushf
adc
add
pop
push
repz
fwait
inc
mov
addr16
mov
hlt
xchg
dec
movsb
daa
cmpsl
stos
pop
cld
push
dec
xchg
jmp
xor
sub
jl
outsb
lahf
inc
dec
pop
jmp
and
push
xlat
pop
stos
fs
sub
jg
test
jb
and
sub
push
jmp
add
xor
cmpsl
lods
shl
ret
sub
cmp
aam
inc
push
loop
lods
lods
cmp
scas
test
in
cmovp
sahf
cmp
sahf
xchg
and
sub
mov
pop
push
test
rclb
in
daa
stc
xor
push
dec
mov
pop
inc
adc
sbb
lahf
mov
jl
lock
mov
xor
movsb
jecxz
daa
hlt
repnz
pop
fwait
ljmp
inc
push
gs
lds
stos
aas
fs
lea
mov
xchg
jmp
pop
jno
push
in
sbb
dec
les
mov
sbb
pop
mov
movsl
lods
jge
stc
mov
dec
testl
mov
cmp
mov
mov
sub
or
add
dec
jmp
and
adc
nop
sub
mov
cmpsl
pop
and
sub
mov
jp
inc
sub
sbbb
mov
inc
cmp
sub
out
movsl
jmp
pop
cld
vpmaxub
push
dec
fsubl
sub
add
mov
xor
mov
ficoms
sub
jmp
js
in
cli
jp
rorl
bound
mov
lret
ljmp
jp
bound
ja
insl
lds
adcb
sbb
insb
cmp
mov
xchg
dec
inc
mov
mov
lcall
mov
scas
inc
jbe
out
xchg
pusha
push
pop
xor
mov
outsl
pop
xor
pop
subb
sub
inc
pop
test
mov
dec
test
adc
jo
push
sub
scas
sub
add
fcmovne
or
or
or
ret
jle
pop
pop
test
sub
pusha
xchg
sub
pop
pop
lods
push
mov
addr16
xchg
push
in
test
mov
fmuls
xor
adc
shlb
and
movsl
mov
mov
subl
imul
out
mov
dec
sub
test
jns
inc
movsl
xor
jno
ljmp
fistps
test
or
mov
push
das
jmp
fsubrl
shrl
dec
xor
pop
inc
sub
dec
test
pop
test
repz
dec
jnp
shlb
fimull
and
aaa
sub
aam
push
hlt
std
aas
xor
sub
mov
sbb
ds
rcrb
xlat
ret
xor
xor
movsb
or
das
adcl
sti
jns
ja
movsb
or
fs
push
cmp
sarl
xchg
pop
cmp
mov
pop
jmp
insl
xor
sub
sub
push
xor
push
aaa
add
push
or
push
or
cwtl
mov
push
push
popf
pop
cli
jae
mov
adc
xor
std
out
sub
gs
inc
insl
or
into
xchg
imull
pop
sub
dec
data16
jmp
push
out
dec
fisubrs
cmpsl
ss
inc
hlt
mov
adc
push
dec
ss
mov
insb
sub
sub
sbb
inc
out
jp
cld
pop
add
or
adc
mov
imul
xor
adc
mov
or
lock
sahf
pop
sahf
push
ds
mov
cli
hlt
imul
cmpsl
daa
iret
loopne
imulb
pop
xor
jmp
bound
leave
shlb
sarl
jns
cmp
neg
add
push
jns
mov
jne
cmpsl
scas
test
adc
js
cli
cmp
mov
pop
mov
popa
xchg
jno
scas
adc
mov
push
cs
adcl
imul
xchg
dec
jno
push
popf
ljmp
push
jmp
xor
subl
or
iret
or
add
cmp
mov
imul
out
push
jae,pn
sub
clc
cmc
adc
fimuls
leave
inc
pop
cltd
sub
sbb
xchg
in
into
ja
jecxz
lods
out
int3
pop
or
and
shlb
arpl
sub
cwtl
mov
insb
scas
push
xor
imul
sarl
mov
dec
dec
addr16
inc
jbe
dec
xor
bound
icebp
inc
mov
push
sti
pop
popa
xor
sti
fmul
imul
jecxz
xor
stc
or
xor
insb
mov
xchg
imul
sub
stos
in
xchg
cmp
xor
jae
imul
jbe
sub
sub
cmpsl
filds
ja
bound
adc
dec
lods
pusha
sub
push
push
into
out
cmp
push
mov
jmp
ficoms
cmp
push
push
sub
mov
dec
sub
cmp
mov
shrb
les
cwtl
push
cmpsb
ljmp
sbb
lods
das
or
and
stos
pop
imul
pusha
or
pop
sbb
pop
sub
in
mov
xchg
sbb
xor
add
clc
fs
pop
popa
cmpsb
mov
dec
jmp
xor
adc
sub
dec
popf
out
mov
fisubl
xchg
bound
mov
icebp
les
imul
push
pop
addl
xchg
push
dec
jmp
mov
xor
das
push
jecxz
pop
xor
sub
imull
ds
dec
sub
push
sbb
lret
das
mov
movsl
ljmp
mov
lods
xor
cmp
ss
out
dec
sub
jle
test
push
fwait
add
push
sbb
outsb
xchg
in
clc
pop
dec
mov
cmpsl
divl
sbb
pop
xchg
bound
int
mov
inc
cs
loop
icebp
loope
lods
adcl
inc
mov
xchg
aaa
out
mov
cmp
ja
add
xor
add
sub
jbe
fs
inc
pushf
push
shrb
xor
mov
iret
pop
fs
pop
push
xor
cmp
adcl
fwait
xlat
pop
jge
or
fcomi
xor
test
leave
in
hlt
je
das
icebp
pop
xchg
out
mov
pop
push
mov
lds
sub
jecxz
mov
sub
push
xchg
sub
data16
cmp
imul
lds
sub
sub
mov
dec
push
jae
pop
popa
test
dec
pop
xor
outsb
bound
fnstenv
in
cmp
xor
jle
and
shlb
roll
fs
xlat
das
out
mov
outsl
out
push
scas
in
dec
ss
cltd
fisubs
js
mov
xor
xorb
pop
fwait
push
jmp
je
pusha
xchg
mov
lret
jbe
into
daa
mov
orl
addb
xor
fs
push
dec
cmpsl
cltd
insl
aad
lods
xor
dec
sub
into
add
inc
push
fistps
mov
aaa
arpl
lods
das
aas
dec
jg
fwait
ja
in
xor
jno
and
pop
fiadds
int
cmpsb
sub
cmp
dec
jle
lea
popa
dec
xor
inc
arpl
imul
jle
inc
add
cmpsl
pushf
dec
shlb
mov
jnp
cs
movsl
popa
bound
xchg
repnz
sahf
mov
mov
mov
jno
ljmp
pusha
push
pop
xorl
pop
mov
mov
pop
lret
fistps
mov
or
inc
sub
test
aam
xchg
sub
ss
mov
movsl
es
mov
push
mov
pop
xchg
xchg
xor
mov
inc
pop
insb
push
inc
mov
and
mov
dec
cs
jb
repnz
add
mov
outsl
fwait
insl
xor
mov
add
mov
jno
inc
dec
imul
dec
shrl
sbb
push
xchg
sub
xor
inc
pop
loope
push
cmp
pop
imul
fs
adc
movsl
xchg
pop
jne
push
mov
lods
sub
fmulp
lock
pop
jae
xchg
xor
sbb
out
mov
or
cmp
jmp
sti
test
std
and
das
in
xchg
icebp
in
inc
mov
clc
stos
mov
imul
arpl
stc
xchg
outsb
inc
pop
and
imul
xchg
jle
mov
hlt
mov
adc
push
xor
pusha
fimuls
dec
pop
pusha
lods
xchg
mov
xor
pop
imul
or
push
mov
xchg
pop
cmp
shll
fwait
inc
imul
or
inc
cmp
add
mov
subl
dec
mov
push
xchg
mov
and
and
fisubrs
repnz
xor
xor
or
scas
lods
or
pop
std
clc
fs
lret
mov
mov
mov
jno
add
sub
pop
xlat
in
pop
adc
aad
xor
sub
js
popf
cmpsl
inc
adc
sub
movb
cmp
inc
sti
adc
xchg
repz
or
jns
xor
cmp
in
les
aaa
in
pop
pusha
mov
dec
dec
cld
outsl
mov
adc
dec
or
sarl
std
les
dec
stos
adc
sarl
push
jns
dec
test
add
cli
pop
xchg
xchg
push
icebp
test
inc
xchg
mov
jne
or
lret
stos
ja
jp
addr16
add
pop
pop
insb
test
das
fists
imul
fimuls
xor
push
mov
inc
push
push
test
nop
in
jp
sub
stos
push
xchg
imul
xchg
sub
dec
mov
xchg
cmpsb
shrb
xorb
lods
mov
sub
add
xor
test
stc
lret
or
mov
jmp
dec
jno
int
test
pop
cmpsl
cmp
xchg
pop
popa
iret
sbb
das
adc
dec
loop
lahf
mov
add
dec
dec
dec
ds
imul
inc
jo
inc
movsb
fwait
ss
sbb
fs
iret
push
cmp
pushf
pop
and
xor
insb
dec
cmp
mov
xlat
ss
cmp
dec
imul
jp
gs
aam
stos
pop
pop
xchg
push
push
cli
pop
mov
push
stos
stc
push
test
cmp
inc
pop
dec
push
sub
fnstenv
ljmp
iret
pop
dec
jo
clc
push
cmpsl
pop
dec
lcall
mov
inc
push
xchg
or
add
xchg
int3
dec
scas
add
leave
pop
cmp
jp
push
bound
mov
xchg
and
pop
jl
mov
outsb
xor
mov
cmp
dec
je
lods
lcall
sahf
cli
jns
pop
dec
fs
ret
and
bound
cmp
dec
push
iret
push
sbb
inc
mov
or
inc
hlt
lret
xchg
cmp
sbb
aam
outsb
cmp
cmp
mov
cltd
mov
mov
daa
outsb
pusha
xor
push
gs
and
xor
out
lahf
xor
dec
inc
dec
sahf
push
pop
dec
das
xchg
pusha
bound
shlb
push
dec
pop
repnz
sbbb
and
call
inc
ljmp
lahf
subl
mov
dec
and
xor
pop
pop
cmp
movsb
mov
push
xor
add
shll
pusha
cmp
les
mov
pop
shll
les
sbbl
jo
aaa
cmc
gs
xor
ret
jg
mov
sbb
call
dec
inc
lahf
dec
sub
call
xor
cs
push
pop
adc
or
adc
cmp
xor
jp
inc
ret
jne
dec
xchg
bound
and
xor
jp
aas
sub
add
jg
push
bound
sub
cld
bound
inc
xchg
dec
cmp
add
scas
icebp
dec
xchg
jmp
sub
js
pusha
push
int3
out
sbb
fisubs
stos
add
inc
dec
enter
cmp
nop
insb
lcall
cwtl
incl
jbe
xchg
ja
addr16
push
inc
dec
lahf
lock
xchg
jcxz
imulb
shrl
int
cmp
inc
mov
xchg
lods
mov
pop
jns
mov
fcom
xor
cmp
out
or
push
insb
hlt
fbstp
mov
stc
lcall
int3
sbb
jle
xor
adc
js
jno
xchg
inc
xor
add
loopne
xchg
pop
in
out
fidivl
ljmp
sahf
add
in
call
xchg
mov
pop
mov
adc
sarl
dec
ljmp
jmp
in
lahf
sub
addr16
cmpsl
scas
out
cmp
cmp
lods
repnz
mov
push
cmp
gs
push
lock
cmp
mov
lods
cmp
mov
xchg
cmp
inc
fistps
mov
in
cs
jge
enter
pop
cmpl
out
inc
je
fnsaves
push
jnp
cmp
jo
js
sub
clc
jmp
push
fdivl
aad
adcl
and
into
inc
add
repz
jg
xor
lea
pop
push
aad
ret
push
mov
mov
adc
jb
bound
xchg
stc
mov
push
xor
cmp
lds
push
fnstenv
jmp
call
push
out
into
xor
hlt
gs
pop
xor
stos
cs
int
or
pop
in
inc
xor
lret
ljmp
jl
les
insb
lea
loop
les
scas
loop
imul
mov
icebp
or
or
jmp
push
cmc
and
out
int3
jo
xorl
sub
fsubrs
pop
stc
mov
cwtl
inc
mov
cmc
adc
pop
add
jns
das
aam
sub
imul
sub
mov
jmp
dec
push
sbb
icebp
mov
xor
jbe
movsb
stos
ss
hlt
mov
mov
pop
push
mov
ljmp
bound
push
xchg
loop
mov
das
push
inc
inc
cli
lahf
xlat
fldt
xor
popa
mov
mov
cmpsl
xor
repnz
lds
push
outsl
dec
out
jb
adc
jo
cmp
mov
gs
aaa
ljmp
push
dec
cmp
xor
jmp
aaa
xor
sub
sbb
movsl
in
data16
xchg
mov
jae
xor
sbb
mov
imul
aam
pop
int
inc
and
outsl
std
pop
bound
sub
in
popa
in
roll
mov
cmpb
repz
adc
insb
dec
pusha
adc
mov
cs
inc
xchg
inc
sub
mov
xchg
mov
pushf
push
xchg
ds
pop
xchg
clc
inc
ds
adc
mov
sub
out
mov
adc
out
xor
add
inc
fildl
sbb
mov
aad
call
mov
popa
inc
pop
test
xor
push
mov
push
dec
add
inc
int
mov
xor
or
xor
sar
pop
cmp
dec
push
fs
jecxz
sahf
dec
push
cmp
push
push
sub
xchg
nop
data16
jbe
cmp
js
sahf
jns
push
inc
ljmp
repz
mov
cmp
shrl
and
cwtl
mov
cmpsl
jmp
jp
cmp
xchg
rol
mov
pop
jmp
inc
sbbb
cmp
cmp
mov
mov
into
xor
or
ret
scas
cmpsl
mov
xchg
pop
push
inc
ljmp
jp
roll
imul
pop
and
jecxz
loop
pop
cli
jne
ss
push
loope
and
popa
jmp
push
popa
or
mov
xor
jno
mov
push
cmc
mov
pusha
sub
sbbb
cmp
das
pop
mov
xchg
test
loop
int
clc
outsl
mov
inc
aaa
ficomps
sub
in
out
rorb
addr16
notl
ds
mov
dec
pop
cmpsl
in
aas
xchg
mov
dec
fsubrs
outsl
pop
clc
xor
xor
jl
idiv
aaa
add
pop
xchg
mov
dec
xor
push
or
adc
dec
outsb
lret
les
xchg
xor
bound
stos
out
xor
fistps
scas
sahf
addl
inc
repz
dec
and
daa
rcl
dec
imul
arpl
ljmp
aaa
pop
mov
mov
lea
sub
xor
xor
and
incb
fbstp
int
mov
imul
xor
xor
pop
pop
sahf
lds
lcall
inc
xchg
xchg
imul
inc
imulb
mov
ja
xor
mov
insl
xor
dec
faddl
aaa
test
mov
or
lret
popa
push
pop
xor
icebp
in
lea
dec
dec
xor
mulb
jl
inc
jmp
subb
push
push
outsl
xchg
cmp
mov
imul
jecxz
inc
push
ss
mov
movsl
xor
xor
dec
jmp
jmp
xchg
scas
lds
xor
lods
imul
pop
pop
loope
adc
repnz
adc
sahf
scas
test
stos
bound
frstor
sub
cmp
stc
inc
xchg
cmp
arpl
aas
pop
dec
jno
adc
or
sbb
cld
cmc
or
lea
add
inc
cmp
fstp
mov
add
aas
xchg
shrl
mov
xchg
out
ss
lcall
loopne
cli
and
test
enter
sub
sub
in
mov
mov
xor
ja
mov
adc
aam
int
aam
xor
or
dec
cmpsb
push
adc
add
cs
dec
fcmovnb
fldcw
push
sub
inc
add
popa
jge
mov
sbb
xchg
pop
jne
mov
jl
push
or
xchg
push
sub
sahf
mov
dec
data16
jecxz
push
push
sub
clc
add
aad
mov
jno
les
cmp
xor
lahf
ljmp
rcrb
stos
imul
rep
mov
cmp
push
sbb
sbb
dec
movsb
add
sub
jp
xor
cwtl
les
push
cli
insl
jbe
popf
sub
mov
popfw
test
push
jl
imull
ljmp
out
jnp
push
int
gs
je
pop
push
push
mov
xor
sub
pop
sbb
jmp
xor
sbb
inc
xor
push
sahf
mov
push
fcoms
lea
repz
loop
pop
xchg
cmp
call
sahf
pop
inc
clc
dec
xor
xchg
sub
jp
dec
inc
jmp
int
inc
jmp
pop
ljmp
fistpl
xor
cmp
lods
pop
cmp
mov
test
dec
ljmp
jo
ljmp
frstor
arpl
sub
cwtl
sarb
sbb
jmp
mov
cmp
push
imul
push
jg
arpl
and
bound
scas
mov
push
cs
sbb
jp
fs
sahf
pop
fbld
lock
xor
mov
stos
popa
xor
in
jne
xor
add
ds
movsl
cmp
pop
arpl
or
mov
mov
dec
sar
mov
push
dec
outsb
xchg
xchg
cmc
mov
pop
cmp
jbe
cmpsb
mov
mov
cmp
or
out
and
out
jnp
out
jmp
xor
cmp
adc
sbb
or
mov
jl
daa
mov
adc
and
sub
or
aas
repnz
imul
icebp
lret
inc
sub
in
jno
xor
push
sub
imul
push
lods
sub
arpl
mov
in
mov
xchg
outsb
das
push
xchg
sbb
lahf
hlt
lock
out
dec
lret
mov
inc
shrl
addr16
test
mov
inc
inc
push
roll
inc
ljmp
shlb
dec
or
inc
pop
insl
dec
xor
push
xchg
je
push
sub
ljmp
dec
das
mov
inc
push
push
leave
shlb
bound
sub
repnz
fs
leave
or
mov
cmp
sub
adc
jo
push
stc
aam
push
mov
mov
pop
dec
xchg
movsb
mov
roll
pop
push
mov
aad
cs
push
out
xor
xlat
out
movsb
pop
jae
mov
mov
or
inc
inc
cmp
lret
fsts
or
push
xor
movsb
pop
push
cmc
push
push
inc
mov
or
inc
mov
icebp
xor
mov
inc
xchg
ljmp
lret
int3
in
xor
xlat
in
into
jb
ljmpw
hlt
mov
lods
dec
stc
dec
jno
xor
cmpsl
cmp
adc
ds
rcrl
mov
pop
xchg
cmp
adc
inc
mov
scas
or
test
inc
imul
in
jmp
cmp
psrad
mov
ss
xor
cmp
xor
in
lods
add
mov
andl
pop
lret
pushf
inc
xor
rorb
push
ljmp
pop
xor
sti
clc
mov
cmp
fidivs
out
insl
dec
rclb
jno
mov
sub
dec
mov
mov
paddw
dec
gs
out
in
pop
lods
cs
popf
dec
mov
mov
sbb
imul
ja
jmp
xchg
and
push
insl
push
inc
cwtl
fwait
mov
repz
gs
dec
mov
mov
mov
sbb
xor
add
mov
push
or
xlat
ss
inc
cmpsb
jl
cmp
scas
icebp
cmp
popa
add
mov
popa
mov
pop
xor
outsl
loop
push
scas
popa
das
nop
jnp
ljmp
fs
pop
cwtl
inc
shr
xchg
icebp
cmp
pop
das
sub
mov
push
ljmp
cmp
sub
dec
out
cmp
jmp
mov
jb
xor
mov
pop
dec
inc
push
ljmp
push
cmp
out
mov
cs
les
push
mov
hlt
lods
pop
subb
xchg
sarb
sbb
cmp
repnz
mov
bound
sub
pop
pushw
aad
pop
dec
lock
loop
lret
das
mov
inc
data16
test
cli
in
push
adc
popf
insl
sub
ljmp
in
pop
bound
sahf
jmp
jp
mov
adc
sbb
pop
mov
cli
inc
aaa
icebp
inc
dec
lods
call
jns
test
sub
inc
outsl
xor
mov
push
dec
pop
aad
pusha
insb
and
sub
mov
out
pusha
das
xor
iret
inc
pop
fdivl
jb
cs
mov
xor
jno
movl
lods
jb
xor
cmpsl
bound
pop
imul
cld
out
stc
dec
cld
and
sub
pop
jge
sub
in
adc
xlat
xor
out
aam
sub
stos
lcall
inc
xor
jmp
mov
inc
lods
add
cmp
subl
xchg
repnz
stos
aaa
sub
add
dec
mov
mov
test
add
outsb
lock
add
sbb
mov
negb
cltd
jnp
ss
add
pop
push
jmp
sub
bnd
dec
fildl
shrb
push
imul
aaa
imul
lock
addr16
aas
sub
jo
cmp
or
dec
xchg
sahf
lds
sub
xchg
outsl
ja
loop
scas
jne
bound
inc
jb
jp
repnz
pop
das
inc
ljmp
mov
ds
inc
cmp
add
push
cmp
add
fs
cmpsl
cmp
xor
cmp
cmp
dec
icebp
adc
dec
aam
jb
dec
and
cmp
fstps
pop
dec
fisttpl
adc
jge
mov
sub
inc
inc
pop
call
je
ret
cwtl
mov
push
stc
lods
jb
pop
cmpsl
in
dec
xor
push
pop
ds
jns
xchg
lods
pop
sub
sub
loope
jnp
or
fs
dec
ja
insb
or
orl
xchg
rcll
ljmp
fwait
inc
pop
in
adc
jge
scas
push
inc
dec
sbb
stos
or
dec
imulb
sti
les
sub
lret
imul
cmp
pop
inc
ljmp
lret
ljmp
pop
bound
test
mov
mov
popf
repnz
jo
movsb
js
insl
cmp
fbstp
lret
mov
loopne
cmp
pop
sbb
add
sub
mov
rcrl
push
push
repnz
mov
cmp
cld
or
jno
pop
in
sub
dec
mov
push
dec
shrb
pop
es
mov
inc
inc
das
loopne
pop
add
or
iret
jne
cmpsb
mov
test
inc
in
xor
pop
fidivrl
inc
std
outsb
in
xchg
push
xor
dec
pop
inc
xchg
sub
mov
ds
dec
ljmp
movsb
dec
mov
inc
das
mov
sub
and
pop
dec
cmp
fsubrp
dec
fiaddl
sub
sub
sub
shlb
lods
push
sub
aas
cs
mov
xchg
movsl
and
add
jo
popf
loope
and
cmpsl
add
jp
cs
cwtl
in
mov
pop
arpl
mov
xchg
data16
divl
cmp
push
mov
pusha
aaa
inc
aas
sub
xor
jp
arpl
je
sub
sub
mov
push
shr
scas
pop
xor
push
movsb
inc
dec
mov
lods
imul
and
inc
ss
shr
xor
cmp
xlat
xor
rorl
or
sub
les
hlt
and
cmp
cmpsb
cs
gs
add
insl
loopne
cmp
cmp
negl
cmpsl
pop
aaa
mov
outsb
xchg
arpl
cmp
sub
testb
sub
jnp
stc
movsl
sub
test
sbb
and
sub
idivl
int
dec
imul
pop
jne
cmp
xor
jecxz
test
xor
or
jo
pop
stc
in
jae
xchg
in
hlt
imul
sti
mov
inc
xor
mov
mov
dec
pop
jno
in
ffree
notb
movsl
dec
inc
add
mov
scas
mov
push
dec
cmp
sarb
and
sub
arpl
xchg
popa
lcall
inc
cmp
push
jg
je
pusha
popa
pop
mov
add
pop
ss
out
inc
xor
aaa
cmp
adc
cmp
negb
mov
lea
xchg
clc
dec
jmp
lock
dec
adc
leave
addr16
imul
loopne
les
arpl
pusha
sub
cmp
lahf
jg
dec
inc
inc
dec
imul
pop
and
loop
in
clc
push
sti
ss
cmc
mov
jp
push
mov
fsubl
inc
xor
das
sub
inc
push
jmp
mov
dec
stos
out
mov
pop
ds
out
mov
and
push
mov
dec
movsb
pop
repz
dec
pushf
ffree
pop
push
xor
rolb
cmpb
mov
cmp
pop
arpl
sub
cmp
subl
jae
mov
push
jge
cmpsl
mov
sub
mov
sbb
into
addr16
cmp
push
xor
out
add
ucomiss
jae
sub
mov
mov
dec
inc
insb
and
add
clc
lods
cmp
push
xor
sub
push
adc
inc
bound
jae
jmp
sarl
cmpsb
cmp
mov
icebp
stc
repnz
into
pop
dec
push
jns
outsb
jne
outsl
jp
cmp
pop
add
jno
pusha
movsl
loope
addl
cmp
xor
jo
push
pop
push
das
inc
je
mov
and
inc
xchg
xor
mov
sbb
ljmp
lret
cmp
dec
or
add
add
mov
inc
in
out
imul
dec
mov
fidivrl
inc
sub
push
cmp
imul
bound
clc
mulb
scas
sub
mov
pop
shlb
aas
ss
test
jne
cmp
sbb
pop
cwtl
sub
scas
stos
pop
pusha
xchg
dec
or
xchg
scas
insl
sub
mov
jno
cs
out
inc
inc
in
cmp
and
dec
icebp
mov
stc
in
jae
jo
imul
xor
cmpsb
outsl
imul
cmc
ficoml
pop
rolb
cmpsl
and
dec
or
js
pop
sbb
push
ljmp
pop
cmp
subb
pop
mov
mov
xor
or
push
mov
call
xor
sar
add
push
jns
fnstenv
shlb
insb
aaa
pop
test
push
mov
rorb
inc
mov
pop
mov
sti
inc
aaa
ljmp
jp
bound
dec
movsl
movsb
movsb
dec
ja
push
cmp
add
aaa
mov
mov
aas
cmpsl
out
mov
xor
clc
lcall
mov
cltd
xlat
xor
and
sbb
sub
pop
pop
inc
xchg
jns
push
scas
hlt
or
in
aam
and
xchg
inc
data16
bound
or
movsl
pusha
inc
hlt
cmp
jecxz
adc
sub
pop
xor
push
ss
in
and
xchg
in
xor
cmpsl
pop
fistps
aaa
rcrl
stc
cmp
int
xor
mov
xchg
push
lds
push
cmovle
arpl
lods
cmp
stc
mov
inc
xchg
ljmp
lret
xchg
lcall
pop
imul
xor
aas
push
lret
mov
pushf
fwait
sub
sahf
xchg
rclb
pop
negb
fcmovu
cmp
push
in
and
sbb
sub
out
xor
mov
outsl
outsb
mov
int
xor
push
aad
ljmp
push
inc
sub
test
dec
sbb
cmp
xor
inc
in
add
inc
inc
cmp
xlat
clc
mov
data16
dec
pushl
leave
cmpsl
xor
pop
loop
stc
aam
imull
cmp
repz
lret
push
inc
sub
sbb
or
stc
inc
shlb
and
sub
js
mov
inc
fwait
mov
cmpsl
fsts
ret
scas
stc
dec
or
outsl
push
fldt
or
movl
aaa
call
and
xor
mov
xor
lret
out
cmp
jne
clc
add
sub
insl
hlt
inc
adc
mov
cmp
inc
xchg
fidivrs
lods
mov
cmp
lahf
lea
dec
imul
dec
gs
mov
data16
outsb
mov
ret
cmp
out
or
pop
gs
sub
sti
or
inc
jae
icebp
imul
imulb
imul
cmp
xchg
lock
testb
or
mov
arpl
hlt
xor
fistpll
jb
ret
adc
ljmp
cmp
dec
jmp
repnz
dec
pop
pop
ljmp
sub
repz
xchg
add
cmp
jp
lcall
adc
lahf
jge
ljmp
fwait
xor
adc
mov
mov
inc
mov
mov
sub
bound
mov
outsb
lret
ja
cmpsl
insl
add
sbb
adc
cmp
mov
cmpsb
mov
stos
pop
pusha
hlt
mov
xor
idivb
sahf
and
call
pop
cmp
scas
pop
sub
sahf
sbb
cmp
cmp
sbb
scas
xchg
lods
push
ljmp
mov
jmp
mov
lds
cmp
dec
push
xor
sub
xor
mov
xlat
pop
inc
dec
cld
mul
sbb
push
into
sub
cmp
in
test
cmp
mov
cmp
lret
cmpsl
xor
sub
dec
cmp
ljmp
pop
cmp
sbb
mov
imul
xor
test
subb
inc
sub
in
jns
mov
sar
pop
push
sahf
xor
adc
mov
shrb
mov
in
inc
hlt
shll
in
inc
or
test
mov
sub
cmp
push
mov
sub
push
pop
add
cmp
sub
xor
add
clc
add
mov
push
cmpl
xchg
bound
pop
inc
inc
cmpsb
add
push
mov
arpl
mov
rcll
pop
stc
test
dec
stos
xlat
sti
cld
addr16
lea
inc
mov
xor
stc
sub
imul
add
call
xor
dec
testb
shll
xchg
jl
pop
dec
xor
inc
push
mov
dec
nop
adc
repz
xchg
xchg
push
dec
lds
jle
or
imul
mov
sbb
lret
xchg
imul
int3
aas
pop
sub
imul
lret
cs
fistpl
fs
xor
gs
std
lods
xor
dec
push
inc
ds
mov
jae
sbb
inc
and
shrb
je
in
mov
sub
adc
jmp
mov
pop
ds
imul
pop
xchg
pop
mov
mov
mov
push
in
out
ds
stc
pop
jmp
cli
cmp
inc
jmp
mov
sub
cs
mov
push
pop
out
sbb
ljmp
lcall
pop
jg
inc
andb
jle
pop
movsl
imul
ss
lock
dec
pop
lea
shlb
ficoml
sub
test
xlat
insl
les
pop
push
add
xlat
sbb
push
and
cmp
or
sub
xor
fcomip
popa
pop
pop
mov
adcl
cwtl
cmp
inc
les
cs
movsl
jecxz
mov
jmp
xchg
sub
mov
add
in
dec
orb
mov
sub
xchg
mov
nop
add
sub
xor
ljmp
cmp
arpl
and
sub
dec
stos
insl
cmpb
aam
sub
mov
lahf
pop
lods
jp
dec
sub
and
xorl
fidivrl
jmp
shrb
adc
roll
cmp
add
lret
jmp
add
inc
dec
pop
sar
inc
ds
out
mov
in
jle,pn
pop
pop
dec
dec
jge
int3
xor
ds
sub
inc
pop
jb
push
cmp
xor
add
sarb
fisubrl
scas
push
sub
or
lods
push
imul
inc
dec
pop
mov
inc
cs
jp
fldt
push
xchg
int
test
xchg
mov
addr16
dec
mov
cmp
pusha
movsb
aas
lcall
and
push
jle
mov
dec
scas
mov
sbb
icebp
stc
insl
idivl
xor
or
lock
cli
jp
mov
repnz
inc
xor
sti
into
push
xlat
std
cmp
xor
xor
push
js
push
add
in
inc
popa
outsl
pop
movsb
dec
insb
pop
mov
pop
mov
cld
pop
xor
sbb
inc
cmp
lock
jge
fs
pop
lahf
jecxz
xor
movsb
and
bound
in
inc
pop
pushf
test
fst
arpl
push
push
push
test
lods
cltd
repz
push
cmpsl
push
stc
testl
fsubr
cmp
mov
jl
imul
sub
pop
adc
sub
sti
xor
mov
or
push
sub
inc
aas
push
pop
inc
xlat
das
jl
cmp
sbb
mov
pop
dec
jge
dec
mov
repnz
ret
in
push
cmp
call
inc
aas
add
xchg
xor
pop
sub
cmpsb
aam
test
ljmp
lods
dec
clc
dec
repz
bound
dec
adc
sbb
xor
sti
test
cltd
aam
stc
push
pop
or
out
inc
xor
push
sub
dec
push
pop
lods
cmpsl
push
inc
or
pop
pop
popa
xchg
sub
cmp
sarb
add
gs
push
pusha
addr16
mov
inc
jmp
out
fldt
and
bound
sbb
push
dec
cmp
fwait
pop
xchg
inc
push
jp
gs
lods
ss
push
push
stos
sub
bound
mov
push
cmp
imulb
mov
inc
das
dec
sub
cmp
inc
sub
pop
mov
andb
push
mov
pusha
stos
push
jmp
inc
cmc
stos
das
push
test
in
and
les
subb
aas
dec
push
mov
pop
inc
fwait
jp
push
dec
pop
jmp
stos
aaa
or
js
pushl
push
dec
call
mov
inc
dec
gs
push
mov
adc
dec
test
repnz
inc
push
incl
jns
cs
loope
or
fwait
pop
jb
push
pop
pop
aam
adc
ljmp
pop
sub
inc
xor
and
in
fmuls
adc
cmp
push
ss
xchg
cmpsl
sarl
in
pop
cltd
hlt
sub
out
mov
sarl
jae
sub
cmc
fldcw
xor
icebp
lret
mov
mov
mov
inc
jg
movsl
movsl
dec
lods
in
bound
mov
int
mov
std
rclb
cld
cmpsl
push
xor
das
adc
lock
xor
dec
jmp
and
jae
xchg
outsl
xor
xchg
add
shl
mov
arpl
push
pop
xor
cmp
dec
inc
push
xor
mov
dec
sub
add
lods
je,pn
or
jb
push
mov
mov
repz
inc
jmp
pop
cmp
int3
sbb
mov
cmp
cld
push
gs
rcl
daa
int
jae
popa
js
ret
in
insl
repz
push
mov
loope
mov
jae
xchg
sub
dec
xor
sub
push
sbb
jae
or
xor
sti
cmpsb
cmp
test
lds
scas
dec
adc
fstps
or
pop
or
cmp
push
jb
or
xlat
jbe
dec
push
cs
bound
and
outsb
push
adcb
fsts
inc
test
dec
aas
cmp
inc
popa
xchg
gs
sub
cmp
xor
jns
fdivl
cmp
sub
sub
in
les
jnp
push
ljmp
dec
push
jge
push
sub
test
cmp
jae
push
dec
test
lds
pop
xor
xchg
aaa
addb
mov
fs
fsubl
inc
loopne
out
pop
push
xchg
dec
dec
jbe
inc
xor
mov
push
sub
scas
cmp
xor
aaa
inc
pop
outsl
adc
pop
sub
xlat
mov
xor
sub
and
bound
imul
shlb
aam
pop
test
inc
jp
lods
cmp
pop
dec
lret
push
mov
sbb
jg
hlt
bound
mov
sub
dec
cmp
mov
sub
gs
push
ljmp
cmp
cmp
xor
cmp
lret
cmp
mov
jle
shl
mov
loopne
outsb
pop
inc
jge
test
rorb
cld
sub
cmp
inc
cwtl
aas
shl
pop
shrl
inc
dec
adc
out
popa
or
jmp
cmpsl
in
hlt
sub
lret
cwtl
xorb
dec
rcl
add
sbbb
cmc
pop
xor
adc
cmp
imul
xchg
scas
xor
inc
jl
cmp
mov
xlat
stos
pop
lret
pop
movsl
lea
push
jbe
lcall
jle
sbb
adc
inc
xchg
mov
lods
mov
pop
dec
lods
rcll
test
cmp
imul
pop
mov
sub
mov
mov
jne
fwait
push
dec
scas
imull
pop
jnp
dec
jle
icebp
sbb
add
cli
xchg
inc
sub
cmp
fidivrs
movsl
push
mov
push
lahf
cmp
pushf
movsl
je
outsl
out
pop
fildll
rorb
and
jmp
insb
shlb
lods
shll
in
cmpsl
loope
stos
push
dec
jno
or
cmp
inc
xor
xchg
movsb
adc
jns
stc
and
push
cmp
aas
inc
and
rcrl
xor
sbb
xor
push
imul
inc
lcall
scas
repnz
mov
xchg
xor
ja
cmp
call
std
rcrl
push
cmp
add
movsb
push
out
dec
cmp
repz
cmp
add
dec
xchg
cs
pusha
pop
lahf
cs
inc
movsl
sbb
jge
dec
sub
sbb
das
mov
cwtl
int3
in
scas
aaa
push
dec
les
in
and
xor
add
gs
jp
sub
xor
jmp
bound
clc
push
sub
mov
pop
sub
outsl
lds
fs
xlat
sub
jmp
ja
lret
addr16
dec
repz
data16
sahf
mov
inc
adc
rcll
fs
sub
test
cmp
rcl
add
adc
sub
lret
cmp
les
imul
clc
stos
xor
xchg
mov
ret
repz
sbb
xor
rorl
cmp
jno
cli
cs
cmp
inc
ss
js
nop
movsl
scas
xchg
insl
dec
mov
jnp
or
inc
popa
adc
mov
cmpl
mov
insl
lods
pop
int
lea
sub
movb
xchg
mov
dec
out
inc
adc
cmp
movsb
xor
pusha
cmp
sbb
bound
mov
inc
pop
adc
xchg
mov
popa
jmp
mov
dec
cmp
fnstenv
in
inc
ds
inc
in
sub
ljmp
jns
outsl
jo
inc
push
rcrl
sub
fidivrl
mov
sub
xor
cs
bound
sahf
push
outsl
mov
push
push
addr16
sub
mov
das
mov
mov
mov
inc
jmp
sar
push
push
stos
test
pop
outsw
test
aas
push
inc
xor
pop
outsb
fwait
mov
bound
push
imul
sub
cmp
aad
sub
add
jg
pop
je
push
cmp
dec
pop
adc
negl
cli
outsl
sbb
jno
sub
xor
imul
pop
loope
fistl
push
cs
call
adc
or
ljmp
mov
sub
add
xchg
imulb
inc
inc
imul
fcom
push
xor
cmp
cli
mov
imul
negb
pusha
popa
cld
aaa
push
dec
sti
ja
scas
sub
cs
sbb
repz
orl
dec
lret
adc
test
in
popa
jo
inc
push
pop
cmpsl
mov
or
mov
push
inc
fwait
decb
inc
pop
rorl
lea
cmp
xchg
push
xor
add
repz
daa
imul
xor
movsb
sub
and
mov
push
or
fwait
add
imul
dec
push
shll
xchg
insl
ja
in
cmp
pop
dec
lods
mov
xor
lods
subb
mov
repnz
mov
pushf
testb
cmpsb
pop
aas
pop
mov
cmp
mov
mov
push
sub
test
pop
dec
adc
popa
gs
mov
icebp
push
xor
ja
out
and
insl
adc
fwait
xor
lock
arpl
imul
cmp
or
jl
lock
push
dec
adc
sbb
mov
xor
scas
bound
cmp
scas
popf
sub
mov
inc
pop
jmp
push
inc
pop
jo
pop
adc
jmp
push
mov
dec
ror
je
pop
xchg
jg
or
iret
mov
bound
cmpsl
sbb
inc
push
cmp
shlb
scas
xor
adc
scas
pop
sub
cmp
sbb
cmpsb
gs
cmp
leave
mov
xor
pop
cmp
lcall
mov
push
and
decl
hlt
jg
das
sahf
xor
mov
mov
mov
jl
stc
pop
ds
dec
in
inc
dec
mov
iret
xlat
inc
mov
icebp
inc
or
imul
inc
ljmp
cmp
adc
adc
jp
cmp
daa
inc
sbb
pop
ds
xchg
ljmp
jp
mov
test
push
pop
movsl
inc
fidivrl
mov
inc
push
or
pop
mov
dec
push
xor
sti
mov
mov
std
adc
stos
cmp
subb
xchg
cmp
aas
mov
xlat
push
dec
dec
loop
or
inc
jmp
pop
scas
xchg
shlb
pop
movsl
push
fdivrs
push
pop
cmpsl
outsl
jge
insl
dec
addr16
mov
cmp
cmpsb
sbbl
xchg
inc
push
divl
aaa
xchg
inc
inc
inc
movsl
cmpsb
fwait
stc
leave
outsb
sbbl
pop
jecxz
jmp
stos
pop
sub
test
shrb
test
pop
insb
imul
push
inc
mov
or
ljmp
iret
pop
addr16
shl
out
push
ljmp
lcall
jge
ljmp
dec
xor
outsl
push
adc
jmp
cmp
add
rcrb
mov
push
dec
pop
insb
push
cwtl
or
add
inc
dec
iret
pop
loop
fnstsw
xor
ljmp
dec
dec
push
ret
mov
push
ljmp
sub
loop
imul
jnp
aas
mov
xor
dec
sub
pop
test
pop
mov
popf
aas
test
fisttpl
std
out
mov
das
das
ds
loopne
jp
sbb
mul
insb
and
cs
push
fcmovnb
rclb
push
inc
cmp
ror
stos
push
push
sub
bound
cld
dec
sub
cmp
in
test
dec
sbb
xlat
dec
outsl
xor
ljmp
stc
pusha
jl
sub
clc
mov
pop
push
popa
lods
out
pusha
push
sub
ss
dec
sub
push
cmp
shr
xchg
mov
notb
rolb
pop
dec
adc
iret
aad
in
pop
push
repz
cmpsl
inc
mov
dec
push
jmp
shrl
inc
sub
out
call
aaa
cmp
xacquire
mov
pop
push
fildll
jp
jb
outsl
inc
addr16
jmp
mov
loop
movsb
incb
mov
dec
clc
lods
leave
cmp
adcb
sub
xor
dec
cmp
adc
dec
pushf
sti
hlt
adc
ljmp
mov
lret
pop
lock
add
and
and
and
test
pop
xor
dec
dec
shl
inc
and
icebp
int3
inc
shrl
pop
lds
repz
sahf
cmp
mov
push
adc
jmp
pop
mov
incb
ljmp
pop
cwtl
jge
stc
inc
dec
outsl
jnp
scas
xchg
mov
cmp
es
and
ret
insl
cmpsl
movsl
stc
in
jb
xor
mov
orb
jmp
idivl
pusha
mov
sub
nop
and
or
cmp
adc
jp
data16
push
cli
popa
sub
cmp
add
mov
cmpb
push
imul
inc
cmp
aad
inc
jns
mov
mov
xor
mov
inc
push
xchg
mov
pop
orb
into
pop
inc
mov
daa
and
movsb
pop
jmp
jp
push
dec
mov
in
sub
cli
xchg
dec
inc
cs
mov
loopne
ret
xchg
cmp
dec
cmp
cmp
push
in
pop
mov
mov
xor
push
scas
or
pop
daa
ljmp
add
test
cmp
aad
mov
inc
arpl
roll
xor
mov
pop
push
pand
push
xchg
ljmp
lds
push
cmpl
pushl
test
adc
mov
xor
cmpsl
rclb
in
push
lds
xor
std
imul
aas
dec
add
cmp
enter
jmp
sub
inc
cmp
add
inc
arpl
das
xchg
movsb
iret
jg
inc
xchg
insl
imul
arpl
xchg
mov
jg
or
roll
inc
fs
xchg
imul
ja
mov
mov
sbb
xor
aad
test
movsb
je
cs
dec
fs
arpl
dec
arpl
mov
cmp
sub
imul
cli
repnz
push
fstps
clc
push
pop
popf
inc
lea
mov
out
outsb
jp
ljmp
imul
sub
jmp
pushl
gs
popf
cmp
xchg
test
xchg
dec
cmp
mov
fs
dec
scas
test
lea
sbb
push
rolb
dec
push
loop
movmskps
xchg
repnz
into
push
imulb
push
pop
inc
subb
addr16
mov
dec
inc
ja
xchg
adc
mov
jne
dec
push
inc
or
mov
pop
inc
adc
push
xor
jae
lahf
lcall
push
inc
int
mov
lea
add
push
pop
pusha
adc
inc
sti
test
mov
mov
cld
push
push
cmp
xlat
mov
push
insb
insl
jae
push
xor
or
push
in
jl
or
sbb
out
xchg
inc
push
cmc
jp
xor
add
cmp
and
mov
stos
aam
dec
cmp
mov
jmp
pop
cmp
or
mov
and
rorl
test
movsb
jns
push
inc
dec
pop
xor
ljmp
xchg
sub
orl
inc
sub
aas
xchg
outsl
outsl
pop
push
dec
mov
dec
insl
push
dec
pop
in
push
mov
cltd
mov
in
cli
aas
xor
shl
xor
stos
xchg
mov
adc
das
clc
sbb
push
sbb
mov
pop
rorl
pop
push
add
cmp
or
data16
pop
xor
dec
sub
scas
cli
or
cmp
popa
mov
ss
repz
aaa
cs
jmp
aas
imul
sarl
andb
sub
push
pop
jle
jl
dec
push
cmp
daa
cmp
add
shll
mov
xor
loope
test
outsb
or
in
aam
sti
data16
ljmp
int3
cmp
sub
xor
sub
out
push
ljmp
xchg
sbb
push
jmp
fs
xor
popa
rolb
mov
sub
aas
sub
popa
lcall
pop
cmpsb
cltd
fcompl
dec
dec
pop
test
lods
ja
mov
aam
sub
je
out
lock
sub
mov
sbb
cmp
aam
jge
and
sub
stos
adc
cmp
mov
or
dec
leave
je
mov
aas
sub
pop
imul
jge
ficoml
jb
xor
or
adc
dec
fwait
xchg
jne
scas
add
popa
adcb
sub
arpl
subl
mov
jo
sub
dec
xor
adc
jae
mov
add
repz
dec
imul
ficoml
gs
test
mov
pop
pop
mov
movsl
in
cmp
cmpsl
lea
mov
push
cmp
ss
dec
scas
or
xchg
gs
and
cmp
cmp
add
pop
mov
jbe
hlt
xor
shrl
lods
incl
push
adc
pop
sar
adc
lahf
out
mov
dec
pop
imul
xchg
testb
push
mov
ljmp
shll
inc
inc
add
inc
cs
xor
dec
cli
aaa
push
negb
test
adc
fs
rcrb
inc
out
inc
arpl
pop
les
bound
push
mov
ljmp
cmp
sub
sbb
sbb
divl
subl
cmp
adc
outsb
pop
cmp
movsb
cmp
in
ss
dec
gs
inc
mov
pop
push
xor
in
push
push
clc
imul
cmc
pop
stc
test
test
pop
aad
sub
notl
jmp
aaa
lret
in
divb
adc
scas
xchg
cmp
push
push
or
popa
test
dec
roll
jb
lcall
adc
cmp
jb
lahf
and
lret
mov
sub
push
mov
xor
outsb
lods
aaa
clc
fisubrs
dec
pop
jmp
jnp
mov
push
pusha
fcmovne
ret
inc
xchg
mov
nop
xor
cmp
sub
jo
sub
add
xorb
pop
push
int3
mov
sti
out
mov
pop
dec
cmp
int3
in
mov
xchg
outsb
subl
xor
sub
addb
sub
stc
dec
dec
fidivrs
adc
sub
cwtl
dec
lods
fidivs
ljmp
lret
aaa
pop
push
imul
scas
inc
push
mov
fnstsw
xchg
popf
mov
push
dec
sub
mov
stos
push
ja,pn
insl
movsb
loope
stc
imul
dec
imul
cmc
data16
lds
dec
scas
push
push
jb
push
cmp
test
pop
dec
scas
xor
inc
push
aad
dec
ret
mov
js
mulb
imul
pop
nop
leave
ss
xor
and
xchg
rorb
in
shll
sbb
or
xor
imul
xor
sub
mov
mov
push
push
decl
xchg
sahf
in
inc
sub
push
in
data16
pop
mov
test
jp
loope
mov
lcall
push
cmp
lret
mov
mov
fbstp
xor
imul
inc
lock
movsb
pop
xor
sub
xchg
cli
ss
dec
sub
mov
mov
imul
repnz
push
inc
jmp
stos
jb
sub
aaa
mov
rolb
hlt
imul
sti
ds
iret
and
dec
mov
push
mov
inc
movl
movsl
xlat
fcomip
cli
lret
arpl
out
call
cmp
mov
outsb
std
pop
dec
ljmpw
out
pop
pusha
mov
fistpl
pop
mov
jns
and
cmp
xchg
imul
or
mov
inc
ss
inc
scas
sub
xchg
xorl
das
jmp
cltd
je
inc
dec
mov
test
std
arpl
lahf
cvttps2pi
pop
bound
push
mov
mov
pop
and
sbb
mov
xor
push
push
add
lods
jmp
dec
xor
mov
imul
xchg
or
inc
inc
adc
xchg
data16
cmpsl
fisubrs
sahf
aam
std
push
insl
mov
and
shrl
fldcw
dec
dec
data16
jl
jl
dec
lahf
mov
inc
sub
jno
sbb
mov
ftst
lock
repz
push
jge
mov
hlt
adc
mov
ss
subl
push
sub
clc
sub
add
push
xor
daa
mov
cmc
lahf
push
push
sub
lahf
push
roll
inc
das
in
sub
xor
mov
adc
jl
mov
lcall
push
dec
daa
je
hlt
push
add
pusha
ficoml
mov
outsl
adc
lods
and
cmp
lods
adcb
jae
mov
ror
ss
push
nop
jbe
sub
outsl
fistpl
xchg
stos
insl
popa
mov
mov
sub
sub
pop
std
cmp
mov
mov
bound
in
xchg
stos
repz
mov
jmp
mov
leavew
push
clc
lahf
nop
repnz
jle
sahf
cmpb
cmp
pop
cmpsb
imul
and
scas
subb
pop
dec
cld
and
fwait
jne
push
and
pop
sbb
jmp
jle
adc
adc
push
xor
out
sbb
outsl
ljmp
loopne
and
testb
idivb
add
jmp
in
xchg
push
bound
sahf
ret
notb
div
adc
lds
pusha
jmp
mov
mov
inc
dec
mov
pop
xchg
inc
xor
lock
stc
fucomi
stos
push
pop
loopne
and
sub
cmpsl
mull
sub
scas
dec
pop
fldcw
cs
mov
inc
pop
jg
outsl
add
adc
push
or
icebp
lock
adc
dec
xor
sub
insb
cmp
sub
mov
jns
push
push
xchg
in
push
popf
dec
and
sub
inc
pop
loopne
push
cs
inc
or
pop
movsl
inc
hlt
out
xor
cmp
push
mov
sub
xchg
out
mov
in
sub
scas
pop
movsl
aaa
js
inc
jmp
push
fimuls
sahf
or
std
icebp
cmp
inc
push
cli
mov
jp
pop
sub
sbb
out
inc
fidivs
dec
sbb
mov
inc
dec
or
stos
pop
fnstenv
xchg
out
push
xchg
andb
xchg
lcall
aad
dec
dec
sub
dec
addr16
sub
push
mov
popf
pop
out
mov
test
xchg
js
jg
push
cmp
lahf
inc
xchg
fwait
clc
push
inc
pop
inc
ja
sub
mov
fsubs
cmp
imul
push
mov
mov
mov
imul
movsl
pop
cmp
mov
int
dec
and
int3
loop
xor
jmp
clc
mov
pusha
test
mov
movsb
nop
icebp
insl
dec
test
mov
mov
out
jo
imul
dec
jmp
repz
cmp
mov
sub
push
mov
cmp
or
mov
inc
fdivp
push
pop
jg
xchg
sbb
dec
inc
imul
test
cmp
sub
jb
dec
inc
push
mov
jmp
or
xor
pop
mov
sub
add
push
cmpsl
mov
lods
je
cmp
mov
lcall
sub
fidivrs
dec
adc
inc
inc
inc
test
pop
add
pushf
jnp
das
jmp
lret
xor
push
pop
sub
pmuludq
pop
pushf
dec
call
cs
push
sub
mov
leave
clc
xor
test
inc
mov
xor
xchg
imul
icebp
sbbb
dec
xchg
jno
mov
stos
push
push
jnp
lcall
cmp
add
out
and
jmp
addr16
or
jp
aas
xorb
push
stos
xor
insb
fisubrs
mov
jne
sub
sub
popa
fisttps
cmp
dec
sub
sub
sbb
popf
push
into
pop
mov
push
push
loop
fdivr
sbb
cli
xchg
ss
data16
or
cmp
pop
dec
shr
pop
dec
xor
cmp
into
pop
imul
sti
aaa
scas
rolb
outsl
frstor
fwait
bound
test
loope
add
popf
xor
outsl
adc
cmp
testb
cmp
movsl
bound
sub
cmp
jp
jmp
pop
pop
jmp
sti
jne
idivb
sub
mov
addr16
outsl
dec
popa
out
mov
pop
jl
out
pop
cmp
nop
xorl
dec
adc
push
cmp
cmpsl
mov
subb
mov
nop
cmp
lods
pop
sbb
fnstenv
lods
into
mov
mov
lahf
dec
xor
xor
mov
hlt
sub
xor
shlb
movl
in
xor
out
cmp
ret
jo
sbb
xor
mov
sub
sub
sub
imul
inc
pop
test
sub
je
aas
inc
cmp
jno
push
cmp
ljmp
sahf
add
out
data16
aas
lret
xor
scas
cld
sub
leave
mov
mov
inc
popa
xor
fcompl
pop
jbe
aad
add
dec
imul
ret
xor
shll
je
icebp
pop
or
movsl
and
arpl
sahf
push
lods
aaa
push
lcall
bound
or
mov
xor
nop
je
fisubrs
add
pop
pop
mov
xchg
mov
lock
xchg
sub
sbb
push
in
adc
inc
and
jmp
inc
clc
stos
lods
dec
jmp
iret
mov
dec
bound
mov
cmp
jns
mov
lods
ss
and
push
push
pushl
ret
jge
fbstp
push
shlb
mov
dec
movsb
mov
pop
push
xor
lahf
jg
mov
aaa
add
add
jno
aaa
push
mov
es
cmpb
mov
icebp
add
jne
adc
in
mov
out
aas
dec
cmp
in
jle
movsl
aaa
mov
bound
push
or
cli
cltd
dec
push
add
push
jge
in
outsb
jmp
push
mov
jmp
dec
lds
add
mov
les
xchg
dec
in
push
ja
loopne
lcall
pop
out
push
inc
jg
mov
mov
pop
setnp
test
push
pop
dec
fdivs
cmp
push
sahf
cmpsl
imul
test
iret
aam
cmp
imul
es
add
test
movsb
xchg
jbe
jnp
pop
lods
push
out
shl
pop
dec
inc
push
icebp
sbb
loopne
jge
or
cmp
jns
enter
bnd
xor
fbstp
in
xchg
pop
mov
aaa
inc
and
mov
pop
jo
cmp
sub
sub
sub
inc
push
add
sub
cli
sub
xor
xchg
mov
cmpsb
mov
push
ja
iret
xor
test
scas
idivb
dec
and
int3
sub
std
popa
pop
popf
fiaddl
sahf
or
pop
xor
stos
cmpsl
xor
sub
dec
dec
add
cmp
les
aaa
add
repnz
sahf
jne
imul
repz
rcrl
xor
cmpsb
jmp
xor
idivb
sbb
sub
mov
mov
push
sbbb
xlat
mov
push
sub
or
pop
add
sub
sub
bound
insb
add
sub
mov
inc
sub
iret
fstl
int
movsl
lds
pop
in
inc
inc
jb
or
arpl
hlt
icebp
popa
mov
push
sbb
cld
rep
lret
sarl
jnp
mov
movsb
nop
sub
pop
push
adc
movsb
sbb
in
cmp
mov
sub
hlt
dec
dec
pop
jl
cmp
std
scas
std
fsubrs
sub
lods
add
pop
roll
cmp
mov
mov
pop
xor
out
bnd
inc
push
stos
cmp
mov
pop
push
xor
imull
or
jo
out
fwait
sbb
and
sti
cmp
icebp
ljmp
pop
xor
mov
ja
jle
mov
addr16
inc
in
lea
clc
hlt
pop
mov
adc
push
xor
in
shrb
xor
cmp
je
add
maxps
push
mov
cmpsb
arpl
aam
dec
inc
aad
pop
movsl
jae
mov
push
dec
out
and
xor
les
cmpsl
mov
bound
imul
xor
ret
je
outsb
pop
pop
out
jmp
xor
mov
loop
lahf
inc
ss
push
sub
ss
push
sbb
cld
imul
sub
add
pusha
iret
ds
cmpl
sub
xchg
in
add
xchg
cmp
sahf
pop
pop
inc
outsb
jb
aaa
jno
push
jg
mov
xor
mov
out
icebp
push
dec
xchg
popa
xor
mov
add
int3
das
shl
lds
inc
pop
mov
sub
fwait
loop
sbb
lock
sti
xor
and
addr16
fidivrl
push
or
sub
je
movsl
xchg
roll
sub
test
mov
adc
jmp
inc
aaa
and
iret
pusha
mov
or
repz
mov
adc
les
inc
sub
xor
icebp
mov
push
push
int3
les
outsb
aam
cld
cmp
add
push
pop
xor
cmpsl
sbbb
cmp
addr16
xchg
cmc
mov
rcll
ljmp
in
sub
loopne
mov
mov
xor
test
mov
fidivrl
mov
lea
dec
sub
sbb
pop
hlt
inc
dec
adc
std
popf
mov
insl
xchg
into
cli
rolb
add
popaw
ss
call
mov
dec
idivl
outsl
jns
push
arpl
lea
dec
lahf
insb
jle
dec
stos
cmp
into
enter
bound
push
out
xor
add
fisubrs
repz
push
loopne
outsl
jge
sub
push
pop
aad
push
and
sub
jge
push
pusha
inc
inc
sub
pusha
cmpsb
push
in
pop
inc
jno
lcall
mov
loopne
dec
and
xor
push
xor
arpl
sub
nop
push
outsl
cli
jne
pop
xchg
inc
push
cmpsb
fisttpll
outsb
xchg
je
fs
pop
xlat
daa
shlb
sub
dec
mov
es
mov
cmp
bound
nop
add
fwait
push
dec
pop
movsl
pop
into
std
std
or
adc
rcrl
inc
cltd
jge
imul
lods
sub
test
cmc
ja
inc
das
sarb
in
cmp
sub
fwait
outsl
dec
repz
lret
mov
jmp
push
scas
xchg
inc
cmp
call
repz
mov
pop
sub
mov
inc
subl
test
push
sub
negb
repz
dec
hlt
movsl
mov
sbb
bound
jg
outsl
xchg
push
std
pop
repnz
xlat
inc
imul
scas
icebp
cs
frstor
push
je
fistpll
stos
pop
dec
lods
dec
mov
cmp
cwtl
shl
clc
bound
testl
mov
gs
and
add
data16
insb
fstpt
leave
xchg
xlat
inc
push
bound
lock
data16
mov
lret
xor
fisubs
pop
inc
inc
jb,pn
in
std
jno
popa
or
adc
add
sub
xor
pop
jbe
push
pop
xchg
push
dec
push
fimull
outsl
xchg
popa
pop
dec
push
cmp
sub
sub
cli
inc
fisttpl
dec
aas
pop
dec
pop
jmp
addr16
ror
out
aam
cs
rcrl
imul
insl
cmp
movl
xor
pop
cmp
cmpsl
into
pop
mov
sbb
cmp
add
sbb
pop
jmp
push
pop
dec
jae
adcl
out
inc
mov
xor
cmp
cmp
adc
pop
push
inc
mov
jnp
jp
or
pop
dec
mov
dec
and
sub
push
push
sar
insb
cmp
xchg
aas
xchg
cmc
dec
movsb
fidivs
push
pusha
test
push
dec
mov
and
and
mov
adc
stos
lock
sbb
ljmp
push
mov
add
xor
inc
pop
sub
mov
xor
adc
pandn
iret
sub
imul
jno
dec
ljmp
shrb
ljmp
int
cmp
scas
int
jmp
xor
mov
outsb
push
adc
xchg
scas
std
push
popa
dec
sub
pop
cmp
mov
lret
mov
xor
pop
cmp
jg
out
xor
xor
lret
lods
cmc
cmp
fst
cs
cmp
push
add
mov
push
or
roll
lcall
imul
icebp
add
inc
cmp
jmp
lret
movsl
pop
mov
das
inc
sub
inc
jp
xor
sub
pop
stos
sub
scas
pop
push
jns
pop
in
cmp
mov
in
mov
pop
cmp
cmpsl
loop
fsubrs
xor
fldl
cmp
sub
sub
inc
xor
add
or
cmpsl
sbb
add
xchg
inc
mov
dec
mov
lcall
sahf
push
hlt
dec
fidivs
or
pop
inc
pop
out
cli
in
je
push
sub
xchg
mov
pusha
push
pusha
cmp
in
imul
pop
inc
sub
xchg
movsb
es
pop
gs
push
inc
inc
movsl
test
enter
or
stos
mov
mov
sub
test
lods
mov
mov
xchg
dec
ja
jne
pop
dec
xor
push
inc
pop
pop
push
push
and
mov
xor
push
adc
inc
sbb
xchg
daa
fdivl
or
sub
test
cs
cmp
mov
insb
push
cmp
sub
hlt
sti
dec
cmp
icebp
cmp
repz
inc
cs
cld
repz
lret
or
push
addr16
imul
cmp
ss
inc
cmp
push
movsl
xlat
xor
xor
xchg
lock
push
or
sub
imul
sub
jbe
pop
test
sub
rcrl
mov
push
cli
je
aas
inc
lock
mov
ret
movsl
and
repnz
gs
inc
cmpsb
pop
add
ljmp
jmp
xor
push
cmp
les
aaa
push
jo
cs
dec
out
cmp
scas
les
sahf
daa
xor
jl
repnz
push
xor
loope
jns
pop
xor
mov
aad
cmp
lcall
decl
sbb
pop
nop
lret
cmp
xchg
sub
fdiv
dec
cmpsb
pop
jne
bnd
lods
sarb
test
pop
div
mov
xor
jle
mov
loopne
pop
data16
popa
rcll
push
ljmp
scas
jl
sub
pop
mov
out
mov
xor
pop
mov
shrl
xor
push
imul
add
and
lods
and
dec
jmp
ss
pop
jmp
subb
lret
das
push
cmpb
pop
or
xor
push
push
jg
sub
aam
loop
mov
js
dec
dec
js
in
jl
push
xor
jmp
fnstenv
xor
adc
cmpb
push
pop
aad
xlat
jl
cwtl
inc
sub
push
cmp
dec
mov
fcomi
inc
cmp
lds
lcall
mov
pop
dec
pop
xchg
jbe
popa
jmp
aam
aas
or
inc
pop
lea
lods
aaa
sub
xor
int3
fbld
pop
cmp
hlt
mov
xor
or
hlt
inc
sarl
jmp
adc
add
int
dec
ljmp
popa
inc
orl
adc
or
das
xchg
cwtl
sub
jo
jl
xlat
in
pop
arpl
lret
fs
xor
cli
mov
xor
lahf
dec
lock
ljmp
xor
das
adc
ffreep
push
lea
lds
lock
popa
jl
xor
int3
mov
pop
arpl
lods
push
cmp
fdivl
mov
inc
mov
scas
aad
imul
popf
dec
pusha
sub
dec
jo
sub
mov
add
jp
pop
pop
cmp
pop
popa
add
subl
pop
pop
jb
inc
rcrb
sub
pop
repnz
das
cli
push
adc
scas
or
adc
adc
jb
cmp
xorb
cmp
dec
sahf
mov
inc
cmp
mov
imul
xor
xchg
mov
out
cmp
repnz
cmp
xor
pop
dec
jmp
nop
das
or
loopne
mov
inc
aaa
cmp
mov
push
inc
test
cmc
add
sahf
push
xor
ja
movsb
cmp
mov
clc
fsubrl
inc
stos
gs
inc
imul
pusha
mov
movsl
aad
xor
push
pop
iret
icebp
dec
popa
push
fwait
call
lods
cli
mov
call
pop
xor
jnp
xor
jl
push
sub
fdivrs
cmp
jb
ja
add
ljmp
fildll
push
insl
int
xor
lock
stos
jns
sub
pop
adc
dec
and
inc
insb
test
sub
popa
sti
xor
dec
pop
in
mov
les
ja
mov
ljmp
sahf
aaa
pop
mov
in
cmp
cli
negl
in
gs
xor
sub
test
dec
xor
ss
imul
sub
xor
jns
aad
sar
ds
mov
out
push
shrl
inc
add
lret
xchg
adc
jae
xchg
push
push
imul
and
jns
inc
push
std
adc
sbb
cmp
xchg
cmpsl
jne
lea
stc
aaa
push
test
nop
lods
fldt
imul
cmp
je
dec
bound
mov
cli
stos
push
push
mov
pop
mov
ljmp
stos
push
push
mov
inc
imul
mov
jbe
stc
adc
xchg
cmp
cmp
ja
adc
leave
aad
dec
insb
or
gs
shrl
daa
pop
xor
mov
outsb
popf
sub
push
test
pop
loopne
dec
xchg
adc
test
inc
pop
push
imul
aaa
cli
std
shrb
pop
fldenv
xor
mov
sbb
sub
cmp
cwtl
xchg
das
in
xor
js
ret
cmp
mov
sub
mov
cmp
pop
push
ljmp
fistps
inc
sti
dec
cmp
push
inc
mov
frstor
push
imul
sub
push
xor
jnp
arpl
lret
inc
pop
xor
push
mov
push
inc
push
jp
in
jo
push
ljmp
lret
add
test
imul
inc
sub
pop
loope
inc
cmp
cmp
dec
test
xlat
cmp
or
sub
pop
lods
push
sub
pop
fwait
push
test
jmp
mov
in
js
cmpsl
mov
inc
sub
mov
cmp
leave
pop
ja
cmc
mov
movsl
lea
data16
movsb
dec
sub
das
fdivrl
in
stc
insl
mov
adc
ljmpw
jb
add
push
mov
or
sbbl
push
mov
mull
mov
sub
inc
cmp
sub
imul
pop
sub
xchg
in
stos
bound
pop
sub
dec
xor
cmpsl
sbb
dec
fwait
sub
adc
mov
pop
jmp
and
mov
fnstsw
dec
pop
mov
loop
in
sbb
push
jno
inc
aas
jne
push
cli
xor
or
push
or
jge
leave
lcall
addr16
sbb
in
jae
lahf
bound
sub
fildll
outsb
dec
sub
dec
cmpsb
mov
lret
hlt
dec
lock
pop
dec
mov
sub
jmp
xchg
add
sub
jl
xor
pop
test
inc
fnsave
cmp
adc
popf
add
pop
dec
xchg
mov
lock
sarl
xor
cmp
in
mov
inc
inc
test
insb
stos
pop
cmp
jge
mov
xchg
insl
pop
sub
mov
cmpsb
es
push
xorl
dec
xchg
sbb
sti
into
xor
or
mov
push
and
mov
out
test
mov
pop
pop
pop
xor
jae
inc
aad
dec
cmp
pop
ljmp
cvttps2pi
jns
testl
int3
aad
push
xchg
pushl
sub
mov
add
sbb
inc
mov
imul
clc
jbe
jp
cmp
int3
inc
cmpsb
mov
inc
cs
dec
jmp
dec
or
in
xchg
les
mov
sub
dec
repnz
adc
dec
fs
dec
xlat
test
mov
dec
loop
xor
lret
loop
mov
jo
mov
pop
xchg
das
call
and
jae
bound
jmp
push
cs
pop
inc
test
aas
mov
jmp
dec
loopne
push
ljmp
push
push
adc
pop
das
inc
loopne
xor
call
jb
jp
cmp
adc
scas
xor
jmp
pop
pusha
push
movsb
mov
dec
imul
mov
mov
stc
xor
outsl
pop
pop
loopne
nop
mov
aad
enter
mov
rol
cmp
adc
pop
test
in
xor
push
dec
pop
xlat
mov
cmp
into
stos
xorb
aaa
scas
mov
leave
lock
adc
sbb
addl
cmp
jmp
push
mov
icebp
bound
sar
push
popa
pop
push
xor
push
pushf
mov
xchg
dec
adc
out
fsubrl
xor
xor
xor
in
jnp
rcrl
mov
inc
xor
jg
addr16
sub
ds
push
lret
ss
cltd
jo
pop
mov
inc
cmc
cs
in
add
adc
jmp
das
jb
inc
icebp
shrl
add
clc
push
inc
lcall
bound
xchg
ljmp
jp
push
popa
push
shll
cmpsb
sub
sub
xchg
dec
stos
in
cmp
pop
dec
jecxz
pop
xor
sub
js
fmuls
stc
push
insl
push
pop
mov
stc
xor
jnp
push
sub
and
xor
loopne
or
cmpl
loop
ret
cmp
mov
push
or
ja
xor
dec
or
or
xchg
gs
pop
mov
bound
aas
repnz
jle
imul
movsb
jg
inc
xchg
loope
shrb
inc
dec
outsl
imul
ljmp
pop
push
cmp
mov
mov
or
xchg
or
jb
dec
in
sarl
loope
dec
dec
inc
cvttps2pi
out
jp
push
loop
cmp
add
sub
aas
cmp
cmp
xor
test
add
push
xor
js
pop
jecxz
push
cmp
inc
ds
dec
jmp
mov
dec
push
jae
and
mov
xor
adc
mov
dec
sub
scas
jp
cmp
xor
les
mov
sbb
rcl
xor
inc
fwait
inc
mov
fldln2
add
xor
inc
pop
in
xchg
mov
shlb
push
jmp
in
push
dec
roll
xchg
lea
bound
cld
sub
push
fcmovnbe
cmp
cmp
cmpb
repz
pop
xor
fstsw
or
mov
subb
fistpl
arpl
cs
rorl
leave
int3
add
mov
dec
cs
and
mov
dec
dec
jmp
push
addr16
es
sub
xor
imul
push
loopne
jnp
adc
or
ds
test
and
cmp
sbbb
test
mov
ljmp
sbb
lods
ds
push
jg
sbb
cli
push
pop
mov
adc
inc
popa
push
push
mov
in
imul
xchg
cmpl
inc
push
add
inc
xlat
cmp
xor
mov
lock
bound
sub
cmp
cmp
fwait
mov
cmp
adc
inc
xchg
out
lea
lds
xchg
aaa
adc
add
aam
insl
mov
dec
in
dec
stos
xchg
push
ds
clc
test
cmp
std
jmp
xor
push
xor
or
movsl
add
ljmp
pop
popf
std
popa
xor
sub
lods
mov
xor
push
pop
jns
xor
cmp
orb
imulb
sub
pop
cmp
arpl
not
imul
push
ss
mov
shl
out
mov
gs
dec
adc
leave
push
xchg
xor
aaa
sub
ljmp
out
fisubrl
imul
mov
test
adc
xchg
pop
push
or
ss
gs
imul
mov
mov
dec
push
shrb
les
pop
aaa
pop
pop
adc
movsl
ss
bound
mov
mov
push
jns
mov
in
mov
mov
jmp
pop
adc
mov
sub
xchg
jnp
jmp
in
or
sub
pop
xchg
dec
jbe
aam
lcall
pop
and
mov
in
ja
pushf
dec
cmp
cmp
outsb
fcoml
cmpsl
pop
dec
arpl
test
push
mov
and
or
sahf
jns
comiss
outsb
add
mov
add
daa
scas
and
inc
and
jl
fnstsw
hlt
jp
loope
mov
xor
fisubrl
jp
ljmp
xor
sub
cmp
mov
dec
mov
xorb
aas
imul
mov
adc
push
xchg
adc
pop
movsb
loop
xchg
cmpsb
jp
int3
shll
xor
shlb
sub
mov
sbb
jp
bound
sbb
xchg
add
pop
lret
and
mov
jg
mov
das
and
cmp
std
ss
push
inc
jmp
or
sub
imul
mov
and
mov
shlb
sub
dec
icebp
jecxz
add
push
cwtl
pop
test
dec
add
ja
movsl
imul
pop
inc
sub
jo
dec
adc
jge
lcall
add
mov
xor
push
and
imul
aaa
add
inc
xor
stc
movsl
push
jle
dec
sbb
fidivs
gs
push
leave
mov
xchg
jns
inc
push
inc
arpl
cmp
bound
lcall
frstor
mov
xor
imul
push
xor
sbb
aaa
nop
xchg
pusha
jp
dec
jmp
call
jmp
iret
stos
clc
cmp
push
jmp
cmp
pop
mov
dec
cmp
or
sub
dec
sub
movsl
mov
push
push
test
pop
mul
aas
mov
xchg
sub
cmp
scas
mov
jno
arpl
vpmaxsw
mov
js
iret
sub
dec
ret
pminsw
jno
ljmp
inc
mov
sub
dec
subb
add
cmpsl
imul
xchg
rolb
test
scas
stc
lods
sti
sbb
xor
inc
xor
out
insb
testl
fs
aas
data16
aam
inc
ljmp
pop
dec
add
pop
popa
inc
arpl
mov
popf
sub
cli
add
pushf
mov
fcmovnbe
inc
cmp
rol
jns
shlb
pop
std
in
jo
sub
sbb
cmpsl
sub
push
insl
stos
push
imul
sbb
xchg
movsl
cltd
xlat
fucomip
pop
xchg
xor
jo
xchg
jmp
dec
mov
inc
sahf
xor
pop
dec
cmc
addr16
jmp
push
inc
jno
cmc
stos
mov
and
cmp
movsl
xchg
loopne
xor
pop
pop
subl
lods
push
lea
repnz
dec
pop
push
dec
xor
mov
jecxz
enter
ss
ss
mov
cmp
cmpsl
sub
inc
mov
fstpt
or
imulb
jne
cmp
mov
lahf
lss
fldl
in
pop
aas
pop
adc
pop
aam
gs
dec
mov
mov
push
shlb
jae
inc
repnz
or
mov
gs
sbb
mov
fimull
xchg
xchg
das
pop
sbb
nop
movsb
jbe
jae
inc
xchg
sub
aad
repz
rcrb
lret
jmp
mov
jmp
push
fimull
repnz
daa
jne
sbb
aaa
out
xchg
xchg
hlt
dec
outsb
push
out
sub
jl
fsubl
sahf
sbb
xchg
das
pop
dec
adc
add
jne
inc
push
push
sbb
jle
dec
inc
push
or
mov
imul
sub
fistpll
mov
out
cmpsl
mov
push
rcl
pop
dec
pop
nop
xchg
xor
adc
inc
mov
xor
mov
cltd
aas
jp
xor
push
jno
add
ljmp
mov
pop
pop
xchg
int3
xchg
fnstenv
xchg
inc
test
pop
dec
sub
imul
mov
xchg
sub
mov
hlt
in
or
xchg
popa
pop
inc
mov
loope
rcll
sub
sub
popf
mov
sbb
mov
test
inc
jns
fwait
mov
pop
push
jne
out
sbb
fwait
ret
lret
repnz
sub
jg
xor
dec
xchg
outsl
sbb
cwtl
cmc
cmp
fiaddl
push
push
in
mov
jno
ljmp
iret
ja
loop
sub
es
and
lods
xor
push
xor
mov
xchg
mov
add
lret
int
in
and
jp
push
ss
xchg
pop
out
jnp
ljmp
cmp
jmp
inc
xor
adc
dec
add
pop
and
cs
pop
inc
inc
fmull
xchg
fildl
sbb
fucom
sbb
cmp
insl
sub
hlt
ds
and
sbbl
es
sub
test
dec
cwtl
mov
aam
or
adc
test
cmpsb
fildll
xorb
xor
push
mov
dec
add
pop
jne
xor
adc
les
adc
push
fs
mov
in
mov
sub
push
sbb
aad
inc
ljmp
loope
cmp
dec
ljmp
add
xchg
mov
mov
ljmp
lret
pop
sub
pop
dec
pop
dec
lcall
leave
pop
dec
in
ds
cmp
out
and
mov
inc
popa
shl
sub
pop
stc
loope
jnp
dec
daa
sub
jnp
dec
scas
mov
iret
ss
xor
jns
sub
insl
daa
mov
cmp
ja
test
sub
push
aaa
add
pop
push
push
mov
xlat
sbb
imul
insb
or
push
xor
cld
pop
movsl
mov
adc
pop
xchg
adc
xchg
lds
push
mov
push
lds
sub
popa
rcrb
pop
orb
dec
fdivrl
faddp
scas
decb
outsl
or
xor
pop
inc
xor
jecxz
ret
leave
mov
push
out
insl
xor
in
xor
repz
sub
dec
lock
mov
pop
outsb
jp
jo
pusha
lock
dec
stos
pop
lea
sub
std
sub
jge
sub
aaa
cs
cmp
dec
jp
xchg
stc
outsb
bound
mov
sub
cli
mov
mov
gs
pop
push
lret
sbbl
idivl
push
pop
and
mov
ljmp
mov
push
std
in
mov
fs
mov
mov
loope
cmp
popf
xchg
xor
pop
loop
push
loopne
mov
out
pop
sub
cmp
jp
inc
pop
adc
sub
cmp
pop
daa
pop
push
lret
in
js
sub
popa
movsl
repnz
jge
ljmp
fiadds
mov
push
jmp
dec
scas
aam
push
mov
inc
les
jnp
jmp
cmp
int3
fs
lds
jmp
inc
mov
sub
pop
cmp
imul
xor
pop
cmp
xchg
rcrb
sub
cmp
lods
jo
cli
sbb
dec
lock
and
lcall
pusha
or
push
xor
faddp
shl
add
adc
addb
sub
out
cmp
xor
add
mov
hlt
outsl
xchg
dec
inc
mov
das
dec
shlb
lods
cmp
jnp
outsb
in
inc
or
mov
mov
push
shlb
pusha
mov
bound
dec
push
jg
movsb
mov
out
imul
fsincos
mov
jg
inc
movsl
jo
jmp
xchg
aas
pusha
sbb
or
mov
jae
xor
jl
jmp
dec
dec
sub
arpl
push
ds
fldt
cmp
xor
hlt
and
jge
pop
cmpsb
imul
gs
jmp
and
movsl
ss
cmpsl
ljmp
repnz
push
inc
pop
jmp
inc
adc
xor
pop
pop
enter
in
jae
lods
pop
mov
ret
or
jmp
lea
test
vucomiss
jmp
mov
xchg
gs
jno
jmp
pop
push
dec
add
insl
loope
test
pop
or
stos
adc
xor
xchg
dec
mov
pop
aas
adc
sub
dec
dec
test
or
insb
sahf
leave
push
or
outsb
pop
inc
dec
bound
push
mov
xchg
repnz
xchg
sahf
push
pop
in
xor
and
pop
push
icebp
cmpsl
jg
jne
fs
sbb
sbb
mov
jmp
flds
fnstenv
or
stos
xor
lret
in
cli
loopne
cwtd
inc
push
imul
lods
push
addb
test
mov
jg
sub
pop
sub
xor
sti
xchg
pop
sub
adc
dec
icebp
jno
xchg
imul
cwtl
imul
je
dec
pop
in
dec
mov
aaa
adc
fbstp
test
jbe
imul
xor
dec
or
jmp
js
popa
and
push
jg
mov
sub
push
dec
sbb
xor
pop
pop
xchg
or
subb
pop
out
testb
jbe
pop
dec
rolb
pushf
shll
addr16
and
bound
rolb
shl
pop
movsb
mov
cmp
ds
enter
push
pop
sub
xor
repz
rorl
mov
cmp
setae
stc
test
stos
pop
pop
and
mov
push
xchg
shlb
fdivl
adc
add
cmc
jae
adc
inc
leave
movsb
xor
pop
dec
popa
in
lcall
pop
push
or
xor
outsl
pop
inc
mov
sub
dec
sub
imul
jle
push
inc
xchg
out
xlat
into
cmp
sarb
lds
addr16
inc
sub
cs
jno
fidivrs
add
cmpsl
mov
cs
shr
dec
jns
and
in
mov
addr16
push
fucomi
mov
xlat
xor
ja
inc
ljmp
lods
adc
movsb
fs
call
sub
cli
push
pop
cltd
cs
jne
std
or
sbb
aas
popa
dec
ds
sarl
cli
movl
popf
mov
push
jbe
lods
xor
andb
aas
sub
add
not
shlb
mov
sub
popf
mov
dec
adc
cmp
dec
or
push
repz
cs
fwait
jb
dec
push
cmp
pop
mov
jne
pop
jno
dec
icebp
and
mov
push
outsb
sbb
push
cltd
push
scas
test
mov
inc
repnz
inc
jbe
mov
pop
dec
jle
test
xor
jl
dec
in
cs
dec
cmp
xchg
xor
jp
arpl
mov
sub
ss
imul
or
or
pop
lock
iret
xor
or
call
xor
or
dec
iret
xchg
inc
es
scas
xchg
mov
dec
aaa
dec
adc
test
out
xor
dec
dec
sti
sub
fldcw
xor
add
mov
cld
je
gs
cmp
push
xchg
mov
shrl
pop
sub
andb
in
int3
adc
push
fisubs
mov
les
push
js
mov
or
dec
or
xor
ret
adc
cmp
sub
das
mov
pop
mov
mov
mov
mov
xor
pop
mov
das
adc
lds
dec
push
cmp
sub
mov
pushf
pop
ss
out
dec
mov
fwait
les
sub
arpl
shll
push
movsl
or
xor
jg
fwait
sbb
sbb
push
ljmp
into
pop
dec
pop
bnd
adc
add
testb
mov
add
aaa
mov
popa
insl
mov
push
xor
pop
mov
xor
imul
cmp
inc
push
loopne
push
mov
xchg
or
pop
dec
xor
sbb
xchg
imul
rorb
cmp
ficoml
gs
inc
xor
rorl
in
add
mov
push
cmp
sub
outsl
pop
pop
add
mov
insb
jno
xchg
lock
enter
adc
cmp
bnd
dec
ljmp
mov
mov
fwait
loope
pop
xor
sub
mov
aad
cs
dec
ljmp
mov
dec
jmp
mov
dec
push
mov
jns
stos
xor
push
and
je
dec
test
imul
jge
mov
dec
out
xchg
mov
in
pop
xor
int
and
xchg
add
lret
fdivrl
jne
sbb
test
sub
xchg
scas
insl
ljmp
and
dec
pop
cli
js
in
inc
repz
pop
push
mov
pop
fdivr
push
xor
movsl
aaa
push
inc
jmp
fdiv
xor
push
inc
pop
sub
data16
idivl
decb
sub
dec
pop
ret
push
cli
inc
jno
xor
cmp
push
dec
xchg
subl
test
push
push
test
sbb
mov
jae
sbb
into
jnp
aaa
sub
pop
and
sbb
and
push
cmp
cmp
mov
outsb
xor
inc
sub
lods
inc
inc
sahf
xchg
out
dec
dec
fs
insl
sub
divb
xor
fstl
lock
data16
mov
in
into
pushw
jp
mov
loop
aas
mov
dec
bound
in
movsl
repz
fistpll
inc
pop
lea
cmp
arpl
cmp
cs
pop
cmp
aaa
int3
mov
jb
push
push
pop
hlt
enter
jns
inc
mov
inc
clc
insl
add
pop
pop
incb
movsb
cmp
popa
data16
pop
xor
pop
pushf
jg
mov
or
sub
cmp
imul
clc
movsl
mov
pop
scas
cmpsl
ficoms
jmp
push
inc
adc
adc
das
sub
jo
lret
shll
jl
pop
dec
add
jecxz
shrb
xor
in
mov
arpl
cmp
jb
cmp
fidivs
push
pop
mov
pop
imul
stos
int
sti
xor
mov
imul
mov
cmp
repnz
xor
inc
dec
shl
aam
repnz
lret
inc
xchg
idivb
ljmp
popf
push
dec
shrl
push
pop
inc
mov
mov
dec
or
stos
inc
dec
jmp
clc
xor
std
dec
dec
cmpsb
cmp
push
cmp
mov
xchg
sub
aaa
dec
fwait
pop
imul
out
xor
arpl
imul
in
pshufw
test
push
push
push
cmpsl
cmp
jle
push
cmpsl
cld
clc
jp
lret
inc
cmpsb
pop
sub
mov
cs
xchg
fbstp
ja
inc
bound
dec
inc
out
das
das
jmp
add
repz
repz
fstpt
cmpsb
cld
dec
imul
cmp
push
sub
ret
cwtl
outsb
xchg
jp
data16
pop
jns
pop
or
jnp
cmp
mov
popf
imul
lock
push
push
inc
enter
in
loopne
sub
sub
inc
aam
jecxz
push
nop
jmp
push
bound
dec
dec
scas
outsb
sahf
cmp
dec
sub
loopne
shll
insb
lret
bound
jb
mov
imul
ret
in
jbe
insl
popa
ljmp
fbstp
and
outsb
push
movsl
dec
dec
outsl
adc
cmp
lahf
push
lods
xor
mov
xchg
and
jae
sub
mov
add
aas
mov
add
icebp
mov
in
in
dec
test
or
sar
pop
sub
stos
das
cs
in
mov
xor
adc
jae
leave
xlat
dec
dec
sub
add
stc
in
or
mov
ss
sub
scas
scas
xor
repnz
pop
pop
das
pop
lea
lock
cli
cs
test
cmp
not
jp
int3
pop
dec
dec
jo
ss
orb
dec
mov
sbb
stc
push
lcall
pop
jmp
inc
jns
inc
adc
outsl
inc
inc
cmp
fwait
pop
imul
pop
cmp
cmp
jb
jne
fstpl
ljmp
sbb
cmp
loopne
mov
or
inc
sub
cmpsl
cli
jp
pop
xor
lret
shlb
adc
dec
sub
xchg
insb
xor
orb
shll
jno
dec
pop
dec
jmp
jne
adc
sub
mov
mov
xor
in
lock
xor
leave
es
sub
cs
std
pop
jl
xor
mov
xor
dec
popl
or
cmp
lahf
xchg
imul
jmp
aaa
aam
sub
test
sub
sub
pop
push
pop
dec
scas
jge
xlat
cmp
cmpsl
add
ljmp
mov
test
xchg
hlt
pop
fs
jl
cmpsl
dec
cmp
dec
ljmp
inc
mov
cmpsb
out
scas
rcll
or
inc
dec
popf
dec
jmp
sti
mov
arpl
cs
add
dec
movsl
mov
in
mov
jp
xchg
pop
ds
daa
xchg
std
jg
xor
pop
xchg
mov
jo
je
in
push
pusha
insl
xor
push
sub
cs
mov
in
or
les
sar
or
mov
ja
mov
push
ror
cmp
in
jmp
mov
mov
lcall
out
insb
and
popa
jmp
insb
xor
xor
push
mov
inc
bound
lds
mov
sahf
lea
sub
mov
dec
dec
test
inc
insl
icebp
xor
in
pop
inc
xor
repz
inc
inc
dec
mull
push
xor
xor
ja
cmpsl
xchg
mov
inc
push
pop
dec
xchg
jp
inc
pusha
js
mov
push
jp
pop
adc
pop
addr16
stc
and
and
repnz
std
imul
push
push
mov
decb
xor
or
xchg
addl
data16
bound
mov
or
xor
sbb
push
aaa
or
inc
in
js
xor
jo
xchg
aad
shrl
xor
shr
and
xchg
adcb
mov
repnz
idivb
xor
inc
pop
pop
sub
pushf
inc
cs
push
lret
or
lods
mov
std
sub
dec
mov
mov
push
dec
sbb
movsl
and
subl
or
or
jecxz
pushf
fstps
cmp
enter
lods
xchg
push
gs
cmpsb
mov
clc
in
mov
nop
dec
jl
out
mov
jnp
jle
je
into
fxtract
mov
cmpsb
adc
add
scas
jb
aaa
in
stc
cmpsb
in
mov
fidivs
pushf
push
aaa
pop
cmp
cld
xchg
enter
add
sar
xchg
mov
cmp
sbb
push
test
in
jb
mov
lret
jge
dec
lret
aaa
inc
mov
subl
mov
sub
ffree
cmpsl
mov
insl
pop
fs
push
movsb
push
inc
jo
inc
xchg
shrb
bound
xor
and
cwtl
xor
cli
inc
or
pop
xor
mov
jne
mov
cld
inc
popa
sbbl
add
adc
mov
cmp
jmp
hlt
out
cmp
mov
dec
inc
imul
mov
lret
dec
and
leave
ja
mov
or
xor
push
jp
jle
pop
push
xchg
ds
mov
pop
cmpsl
ja
pop
sahf
mov
or
add
cmpsl
cmp
repz
sbb
mov
cmp
aas
ss
xor
dec
cs
lds
push
in
lea
mov
jl
mov
cmp
dec
stos
inc
cwtl
mov
stos
lods
jl
fs
xchg
push
xchg
push
sti
insl
sti
push
xor
and
sub
mov
mov
xchg
xor
fsts
in
out
inc
bound
xchg
mov
xchg
hlt
push
fld
mov
in
fiaddl
ja
adcl
movsb
jle
mov
pop
dec
cli
adc
sub
outsb
subl
std
fstps
cmp
adc
imulb
cmp
add
stc
leave
mov
push
and
mov
xchg
das
scas
pop
ds
movsl
xchg
jge
cmp
cmp
mov
dec
cmpsb
das
hlt
add
inc
aas
dec
std
dec
sub
addl
push
in
repnz
xor
mov
gs
insl
lahf
xchg
and
xor
and
into
cmp
dec
adc
push
or
push
push
mov
cmc
stos
ja
mov
inc
inc
out
outsl
movsb
ss
insb
push
inc
cmpsb
es
push
jb,pn
inc
fs
add
fucomip
push
sub
sub
mov
adcl
add
sub
popa
mov
dec
mov
or
int
push
sub
inc
pop
pop
movsb
mov
lahf
add
push
sub
mov
xlat
mov
dec
pop
pop
leave
idivl
ds
xchg
lahf
jnp
inc
xor
inc
inc
cmp
or
dec
mov
iret
jne
bound
mov
lock
fldenv
sub
push
out
or
push
in
pop
xor
test
xchg
cmp
push
stos
icebp
les
dec
pop
gs
sub
repz
dec
imul
mov
in
imul
jae
pop
lods
xor
fs
push
mov
je
lods
dec
dec
movsl
xor
sub
sub
nop
xor
sahf
cmp
testb
cmp
fs
pusha
inc
cmpsl
scas
mov
jb
dec
imul
push
xlat
scas
xor
pop
cmp
inc
je
loopne
lcall
shrl
xor
imul
cs
dec
xor
sar
dec
inc
cmp
test
imul
or
sub
shrb
jo
sub
pop
stc
push
xchg
xchg
jg
inc
rorl
mov
loopne
push
add
lcall
sub
cmp
test
push
bound
pop
bnd
pop
sahf
out
das
push
cmp
or
xchg
cmp
aad
fidivl
xor
sub
lahf
cmp
push
sarb
push
pop
imul
xchg
ds
or
jg
mov
in
stos
sub
xchg
fsubr
sbb
out
jge
out
inc
inc
xchg
dec
mov
mov
xor
mov
cli
cmp
push
ficoms
push
sbb
out
lcall
cmp
lods
cmp
add
add
loopne,pn
mov
cmp
ret
xchg
es
cmp
push
mov
shl
pop
loopne
mov
jbe
add
jmp
jb
push
pop
push
xor
lods
out
xchg
cmp
out
ljmp
aaa
cli
call
mov
cmp
pop
js
in
outsl
sbb
popf
push
cmp
pop
jg
rcl
cmp
xchg
jge
lret
mov
push
loop
ja
icebp
or
roll
je
xor
shl
fs
int3
xor
sub
ljmp
cmp
ret
lods
shlb
sub
or
imul
hlt
out
test
scas
xor
and
stc
mov
inc
inc
xchg
mov
inc
dec
imul
mov
das
cmpsb
es
popf
jns
stos
lods
gs
push
jae
jbe
mov
push
dec
dec
mov
outsb
mov
std
xor
sub
aas
mov
push
pusha
sar
out
or
insb
icebp
push
ret
dec
cmp
adc
sub
dec
fs
cmpsl
clc
movsl
jns
stos
ja
movsb
fcomi
movsl
xor
icebp
movsl
jnp
hlt
jnp
dec
mov
cmp
sbb
in
cmp
adc
dec
les
outsb
cwtl
ss
cmp
test
adc
inc
ljmp
cmp
dec
arpl
lock
jno
cmp
repnz
mov
aaa
pop
jmp
pop
mov
mov
add
lea
sub
jp
jbe
sarb
jmp
fxtract
sub
fnstsw
insb
pop
dec
adcl
mov
dec
sbb
fcomps
mov
outsb
rcrb
pop
out
cmc
addr16
jg
sub
push
stc
out
dec
inc
dec
or
aaa
repz
sbb
mov
mov
jno
sub
adc
fldcw
sbb
sub
aaa
jo
lods
stos
lods
dec
test
xlat
jne
push
je
cmp
inc
ljmp
iret
xchg
adcb
jno
fisubrs
jp
push
rorb
mov
push
pusha
imul
mov
cmp
push
sub
mov
inc
mov
daa
movsb
gs
pop
cmp
dec
sub
add
sub
pop
outsl
jg
inc
xor
insb
mov
pop
jns
xlat
dec
push
shl
add
decb
and
and
dec
stc
inc
jp
pop
and
cmpsl
push
gs
xchg
js
push
pop
xor
mov
mov
fildll
pusha
inc
das
xchg
fs
xlat
out
outsl
bound
loop
pop
popa
mov
lcall
mov
cmc
mov
jo
insb
add
jl
xchg
in
or
rcrb
leave
sub
fistpl
sub
inc
xor
sub
sti
pop
pop
mov
inc
std
mov
test
aaa
ss
or
add
clc
shrb
repnz
inc
pop
and
dec
inc
cmp
pop
jae
leave
sbb
push
mov
out
rolb
inc
sub
cmpl
push
dec
dec
fwait
dec
push
mov
stos
cs
pop
xor
nop
and
jb
inc
xchg
outsl
movsl
sub
aas
add
fwait
pop
pusha
xlat
iret
mov
sub
enter
jl
cmp
lods
outsb
or
repnz
ljmp
pop
inc
mov
rorl
xchg
mov
data16
mov
hlt
push
inc
inc
imul
xor
and
insb
fs
xchg
pop
lret
ret
push
inc
adc
ds
js
inc
mov
adc
or
xor
imul
adc
sub
xor
push
shrl
clc
jp
sub
mov
cmp
push
pop
repz
leave
inc
sub
and
inc
inc
lcall
dec
sbb
hlt
jmp
or
fwait
outsl
in
insb
add
sub
aaa
sub
pop
movsb
les
ja
inc
cmp
movsl
scas
or
mov
popa
cld
cmp
sub
int3
cs
xor
cmpsl
add
aaa
sub
cli
pop
push
leave
cmc
xchg
mov
inc
cwtl
ljmp
lret
sbb
mov
loopne
adc
pop
and
pop
sbb
movsb
sarb
out
nop
cmp
add
xor
scas
in
or
and
lock
push
jg
sub
fldt
mov
dec
xchg
scas
les
lds
in
and
pop
dec
lret
hlt
cmc
loop
adc
push
dec
push
sub
add
mov
sahf
rep
das
ljmp
push
xor
cmpsl
gs
aas
push
inc
les
inc
add
inc
jbe
pop
bound
mov
cmc
inc
jmp
roll
sub
push
xchg
out
xor
sti
mov
fiadds
mov
jno
mov
cs
dec
addl
repz
push
pop
xor
shrb
popa
out
ret
cmp
inc
fs
addb
mov
outsl
loopne
lahf
xor
push
push
add
cmp
mov
push
inc
add
mov
daa
jmp
jns
fistpl
pushf
out
movsl
sbb
scas
pop
aaa
rclb
popa
aam
bound
imul
or
adc
cmp
popa
jns
xor
cmpsb
jle
cmp
fsub
jmp
cmp
psubsw
inc
fwait
sub
negl
sub
cmp
inc
add
inc
enter
cmp
dec
pop
inc
icebp
pop
out
and
aas
add
in
sahf
js
dec
pusha
scas
rcr
stc
aaa
pop
insl
pusha
jmp
sub
and
xor
mov
sarb
push
repz
iret
dec
or
xor
xchg
add
sub
adc
jae
xchg
cmp
inc
inc
push
imul
jg
cmp
mov
add
repz
xchg
shrb
sub
inc
aaa
cmp
sub
jg
push
in
imul
inc
cmp
std
or
leave
fmul
or
stos
lret
scas
or
and
fstpt
dec
inc
mov
cmp
pop
lods
or
dec
js
sarl
fcomi
mov
push
dec
sub
pop
inc
sub
push
mov
rclb
xchg
pop
cmp
mov
jo
dec
mov
fidivl
xor
adc
sub
js
mov
push
jo
into
xor
aas
cmp
mov
sub
cltd
popa
pop
add
icebp
iret
cmp
add
ss
mov
insb
fidivrl
in
mov
mov
test
leave
xlat
fisttpl
cs
inc
jmp
ret
testb
mov
push
pusha
aaa
std
xchg
mov
cmp
dec
pop
outsl
fcmovbe
jne
xor
das
inc
movsl
aaa
inc
sbb
push
add
popa
push
addl
push
jbe
push
xchg
jl
dec
out
adc
sub
cmp
mov
in
push
mov
xor
pop
cmp
pop
inc
pop
push
mov
mov
push
xor
mov
mov
push
cmp
inc
mov
lret
arpl
dec
mov
or
add
cld
les
mov
outsl
testb
ja
push
inc
add
or
cmp
clc
push
pusha
push
fidivl
jmp
aaa
push
pop
leave
test
sub
inc
pop
pop
dec
mov
xor
xor
jae
xchg
and
sub
hlt
mov
bound
inc
clc
and
pop
jmp
mov
adc
pop
gs
cmp
sti
sub
pop
sub
push
sbb
and
dec
jb
in
push
out
dec
mov
xchg
stc
icebp
adc
fcomps
bound
stos
and
shrb
stc
mov
xor
jle
enter
aad
cmp
adc
mov
cmp
pop
dec
insl
inc
sub
inc
inc
adc
repz
mov
roll
push
jbe
outsb
outsb
les
inc
ljmp
iret
inc
cmp
pop
loop
sub
in
cli
push
cmpb
das
aaa
push
xchg
cli
and
sub
push
xor
mov
or
mov
lods
and
or
fmulp
es
rclb
jnp
stc
bound
sbb
push
push
std
cmpsb
xor
or
mov
adc
mul
pop
push
pop
dec
test
xor
popf
sub
sub
cmp
icebp
sub
inc
xor
inc
sub
xor
cmp
jle
lahf
insl
xor
nop/reserved
xchg
das
popa
sub
scas
jle
icebp
arpl
ret
stos
mov
pop
ljmp
in
jl
movsl
stc
je
push
inc
insb
rolb
stos
icebp
dec
add
xor
pop
dec
mov
pop
and
jae
inc
ss
mov
cmpsl
mov
dec
cmp
mov
int3
sub
mov
repz
dec
xchg
icebp
lret
push
inc
add
movsl
cmp
pop
fs
popa
dec
xchg
or
pop
orb
es
cmp
add
and
scas
xchg
jle
inc
xor
imul
dec
jle
mov
cmp
sti
test
adc
sub
inc
push
rcl
int3
rcll
out
add
cmp
out
in
imulb
xchg
mov
inc
xor
test
test
arpl
cmp
ret
stc
in
xlat
jmp
cs
sbb
adc
data16
inc
clc
xchg
inc
xor
ss
mov
cmp
lods
adc
xor
pop
push
scas
dec
sub
push
xchg
cld
xor
mov
mov
shlb
imul
cmp
xor
sub
test
cmpsl
out
faddl
jmp
xor
push
xchg
mov
mov
mov
inc
cwtl
sub
push
xchg
dec
dec
push
mov
lds
mov
enter
push
inc
cmp
test
hlt
jb
push
loopne
cmp
push
xor
xchg
hlt
cmc
icebp
xor
xor
jecxz
and
into
mov
into
cmp
mov
lret
sub
xor
sub
test
dec
add
xor
pop
in
inc
xor
xor
jmp
push
gs
fs
ds
cmp
fiaddl
dec
sti
push
or
pop
fwait
xor
add
push
and
mov
mov
jg
dec
enter
mov
cmp
ljmp
add
or
lock
pop
sub
popf
push
sarl
mov
fimull
repnz
fs
out
dec
mov
jbe
in
scas
insb
adc
ja
bound
movsb
xchg
stos
outsb
pop
inc
xchg
xchg
jmp
bound
add
sub
int3
xor
sti
shll
imull
leave
mov
push
dec
xor
sub
adc
inc
call
mov
or
push
hlt
jl
std
lahf
xor
dec
sub
aad
pushf
push
push
mov
fcompl
jno
or
mov
dec
mov
fprem
call
cld
pop
jmp
mov
mov
daa
cmp
hlt
push
inc
leave
lea
add
dec
int
daa
mov
div
pop
or
add
call
imul
jne
lahf
test
mov
inc
mov
xor
jp
push
xchg
cltd
xor
cld
ja
push
push
in
sub
cmp
inc
push
add
pop
push
jmp
popa
insl
repz
cs
leave
inc
js
mulb
push
mov
sti
mov
test
mov
add
fwait
repz
sub
pop
pop
mov
mov
xchg
fwait
dec
iret
mov
cmp
dec
dec
data16
ss
cld
add
stos
test
sti
push
push
subb
sbbb
jne
filds
sub
outsb
cmp
push
push
dec
bound
ret
lock
jp
std
pop
lcall
outsb
add
fs
push
stos
js
dec
fs
fwait
enter
aaa
push
fsubr
adc
inc
xchg
or
inc
mov
sub
les
push
aaa
aas
pop
ljmp
mov
fs
pop
push
xchg
negb
ss
adc
gs
loopne
add
rolb
xchg
into
test
push
ljmp
loopne
ljmp
lret
inc
push
mov
outsl
adc
arpl
imul
insl
push
movsl
jno
ljmp
arpl
sbb
xor
sub
sub
movsl
xor
sub
popa
cmp
jp
fs
adc
cmp
cmp
mov
cli
imul
xchg
dec
cs
xchg
sbb
cmc
aas
cmp
sub
or
pusha
add
ds
dec
icebp
add
rorb
andl
leave
stc
les
jne
ljmp
dec
xchg
dec
jmp
and
adc
or
or
fldcw
sub
mov
and
push
stc
cs
mov
sub
sub
rcll
scas
ja
in
sub
cs
lods
push
push
or
jo
xor
or
flds
mov
inc
push
mov
mov
add
and
lds
dec
pop
stos
shlb
insb
bound
pop
jmp
add
or
sub
jge
jg
dec
inc
ljmp
push
cmp
call
sahf
pop
bound
xchg
xor
dec
inc
testl
in
inc
xor
std
and
rol
stos
loopne
sub
inc
pop
dec
insb
push
push
ljmp
or
xor
or
aad
xlat
lods
mov
hlt
cmp
test
rorl
xchg
in
pop
ljmp
cmp
mov
popf
push
cmp
test
into
pop
push
mov
or
in
das
rcll
pusha
imul
pop
ja
in
jg
push
push
daa
pop
cmc
into
dec
imul
mov
dec
fs
dec
dec
aam
hlt
out
sub
scas
cs
dec
adc
cmc
add
scas
rclb
inc
pop
popa
imul
cmp
outsl
in
cli
push
xchg
push
sub
or
push
aaa
mov
ficompl
sub
mov
js
sbb
inc
rorl
in
dec
pop
adc
jb
push
mov
cmp
in
stc
lods
push
xor
imul
gs
rcr
push
mov
push
xchg
mul
cs
sub
int
cmp
push
adc
xchg
mov
inc
cmp
outsl
stc
adc
or
jle
shrb
or
ds
jb
cwtl
test
inc
scas
add
push
mov
inc
dec
jge
stc
adc
xchg
mov
xchg
out
jnp
push
ljmp
int3
das
ljmp
or
pushf
dec
movsl
lods
test
popa
sub
or
repz
push
pop
call
iret
mov
or
cs
lock
pop
jge
jl
xchg
fsubr
cmp
and
mov
shr
bound
lahf
jmp
call
inc
jmp
mov
xchg
sbb
ljmp
inc
inc
std
in
push
ss
movsb
xchg
push
cs
or
or
dec
push
push
dec
lods
mov
jmp
mov
cmp
xor
or
sub
xor
sub
dec
mov
sbb
pop
mov
ss
mov
xchg
imull
push
mov
es
cmp
lds
out
stc
xchg
xor
sub
pop
inc
mov
sub
mov
loope
mov
cmpsl
fisubrs
pop
mov
jno
add
into
sbb
xchg
addl
ficoml
int3
push
inc
test
xlat
pop
repz
push
inc
sub
fbld
cmp
sub
and
fcomps
cmp
arpl
dec
or
jg
mov
jno
inc
mov
lods
popa
sub
push
xor
ds
inc
int3
push
gs
mov
xchg
or
mov
cli
pop
sub
js
dec
jnp
decb
in
hlt
mov
das
cs
imul
outsl
shll
addr16
xor
fistpll
mov
nop
hlt
push
movsl
enter
dec
push
xchg
sub
and
stos
add
lock
pop
dec
cmpsb
stos
mov
xor
inc
pop
imul
dec
lret
jmp
call
test
fildl
sub
xor
aas
xor
mov
fdivrl
popa
bound
xchg
adc
or
insl
xor
jge
adcl
xor
movsl
rclb
mov
push
popa
jg
xchg
sub
push
jmp
jecxz
clc
dec
popf
sub
sub
movsb
mov
mov
cmp
addr16
sbb
mul
and
sub
xchg
xchg
pop
push
dec
mov
dec
in
sub
inc
add
pop
mov
movsl
hlt
aaa
mov
cmp
dec
pop
push
xchg
sub
gs
cmc
arpl
sbb
scas
aas
pop
dec
and
imulb
bound
and
fstpl
lods
pop
ljmp
lahf
xchg
in
sub
push
cmp
movsl
adc
dec
jno
push
das
sti
out
stos
mov
bound
and
push
aas
cmpsl
iret
and
jo
push
sarl
mov
arpl
dec
in
repnz
gs
mov
push
lods
imulb
sub
mov
mov
push
push
mov
in
pop
push
mov
aaa
xor
sub
cmp
and
cld
shlb
jno
add
sbb
sub
push
sarl
pop
mov
dec
dec
das
mov
jns
mov
les
jae
inc
push
test
scas
clc
cmp
mov
mov
ljmp
lcall
aad
pop
imul
sbbb
stc
int
jae
sub
in
xor
xor
jno
mov
jns
in
pop
mov
clc
das
jp
pusha
pop
jge
iret
inc
pop
cmp
pop
sbb
cmp
mov
xchg
push
xchg
jns
aaa
mov
sti
cmp
lahf
cmpsl
xchg
repz
cmp
jle
in
dec
outsl
xchg
imul
cs
mov
xor
das
xor
aas
inc
fmull
clc
outsb
roll
scas
inc
cmp
aaa
jmp
xchg
roll
sub
ja
xchg
fwait
and
or
xchg
imul
cmpsb
cmp
dec
cs
cmpsb
push
cli
orb
das
dec
push
jbe
xchg
push
mov
jg,pn
sbb
mov
add
push
dec
jmp
sbb
rcrl
dec
test
movsl
xor
jnp
push
dec
or
das
jmp
dec
mov
jo
insl
in
mov
adc
dec
leave
mov
mov
pop
popf
dec
or
push
or
lds
stos
jo
pop
sub
pop
push
xor
xor
sbb
and
andl
cli
popl
adc
and
int3
dec
push
lods
scas
add
cmp
inc
inc
outsb
sub
scas
adc
sarb
imull
push
xchg
xor
cmp
std
ret
pop
fcomps
cmpsl
cmp
or
stc
dec
add
imul
sub
cld
xor
fnstenv
or
push
dec
xchg
scas
fwait
mov
cmp
jb
pop
sahf
or
push
inc
sbb
adc
lock
dec
jl
movsb
mov
sub
xor
fsubrl
bound
aas
in
mov
mov
cmpsl
les
pop
in
loope
lods
lods
push
inc
ds
dec
push
xlat
je
xor
idivb
dec
push
push
int3
xor
mov
icebp
inc
xchg
cmp
dec
push
lea
push
mov
test
inc
cmp
add
cltd
push
xor
test
mov
push
ljmp
sahf
push
sub
test
lahf
mov
pop
aaa
pop
stos
inc
fnstenv
aam
mov
sahf
adc
stos
ret
lock
inc
adc
fistl
inc
scas
pop
dec
scas
mov
iret
out
xor
mov
stos
bound
cli
lret
ret
cs
cmp
test
stos
stos
lods
and
cmp
fsubp
push
inc
movsl
mov
cmp
repnz
bound
out
pusha
insl
inc
pop
jb
pop
push
pop
mov
mov
jmp
sub
adc
adcb
push
fistpll
shlb
or
push
add
pusha
push
dec
xor
jle
mov
mov
or
mov
jbe
cs
push
push
ljmp
lods
jno
mov
lds
inc
fsub
addr16
dec
xor
xor
push
cmp
mov
pop
adc
imul
out
fbstp
or
aaa
cwtl
std
ds
jno
lcall
push
shlb
int3
ss
xchg
out
ret
mov
mov
pop
inc
insb
adc
lods
cld
push
xor
xchg
mov
or
ljmp
cmc
addr16
bound
test
push
cmp
aaa
scas
sub
clc
cmp
je
push
dec
xchg
dec
dec
cmpsl
and
outsb
out
xor
xchg
pop
in
shlb
insl
xor
add
cmp
jnp
inc
fwait
inc
es
or
inc
xchg
insl
inc
mov
sub
cmpb
mov
or
jmp
dec
lock
imul
in
popa
adc
pop
push
bound
fdivs
dec
push
mov
adc
insl
movsl
fldt
stos
dec
xor
xor
cmp
mov
dec
aam
xor
push
imull
mov
test
dec
sahf
std
lods
icebp
dec
or
or
xor
sti
cmp
or
bound
xor
xor
pop
sub
pushl
mov
xchg
es
in
sub
inc
dec
loopne
mov
das
push
pop
xlat
call
sub
cmp
xchg
push
aas
mov
rcll
imul
cmp
repz
add
dec
inc
mov
xchg
jg
shll
inc
imul
pop
push
pop
xchg
in
xchg
mov
sti
push
repnz
pop
cwtl
aas
cmpl
cltd
sub
imul
xor
out
sub
fcmovne
in
adc
iret
es
je
cmp
inc
cmc
cmp
negb
ret
xchg
cli
jl
sub
add
dec
sbb
cs
mov
mov
jp
push
sub
js
push
pop
cmp
add
int
mov
negb
lret
pop
cmp
test
outsl
mov
inc
pop
cmp
or
inc
xchg
mov
mov
test
mov
xor
subl
xchg
je
push
insl
xor
dec
into
scas
pop
shrb
mov
addr16
mov
push
rorl
outsl
lock
inc
loopne
cmpsl
lret
shll
xchg
icebp
and
sbb
stc
mov
fsubrs
imul
leave
icebp
mov
pop
inc
push
sub
sub
cvtss2si
inc
xor
push
xor
dec
lock
cmpsl
fwait
hlt
idivb
dec
fnstenv
mov
add
mov
pop
push
mov
bound
inc
movsl
jno
aas
jp
addr16
pop
jmp
pushf
mov
and
or
inc
jns
push
cmp
stc
push
xchg
push
push
pop
mov
movsb
jo
and
cs
sbb
sti
inc
push
xchg
arpl
lret
popa
jno
dec
ss
xchg
in
std
stos
dec
pop
daa
leave
sbb
pop
clc
dec
cmp
sbb
xorl
add
xorb
fsts
dec
ds
ja
cld
jb
icebp
data16
jle
pop
or
cmpsb
cmp
push
cmp
cmpsl
movsb
jge
icebp
inc
or
in
xchg
dec
mov
bound
mov
sarb
shll
dec
fs
pop
xor
in
sub
movsb
out
ljmp
jae
xchg
dec
xor
clc
pushf
movsl
xchg
scas
aaa
push
int
or
arpl
fwait
dec
test
daa
xchg
lods
mov
les
jp
push
jmp
fsubrl
pop
dec
add
xor
mov
ja
sahf
icebp
rcrl
xchg
cmp
adc
shlb
jp
cld
sub
jp
cmp
xor
in
mov
adc
sbb
out
filds
dec
dec
lock
pop
push
xor
shlb
jmp
add
sub
mov
sub
fyl2x
insb
inc
push
rol
cmpsl
hlt
das
sahf
xor
movsb
push
jle
dec
fs
daa
in
pop
cs
cs
xlat
imul
dec
mov
fwait
aaa
gs
jmp
clc
jp
fadds
pushf
push
jle
addr16
in
cmp
jno
sub
cs
je
add
push
jbe
ret
add
push
jle
mov
sub
cmpsb
out
call
pop
fidivl
ljmp
cmpsl
cmpsl
xchg
inc
out
jb
push
and
aam
ss
mov
je
test
xor
sbb
jge
out
pop
rorb
mov
jb
cmp
xor
xchg
sub
mov
ljmp
xchg
xor
dec
loop
inc
int
cmp
cmp
out
or
sub
movsb
add
fidivs
fidivl
push
mov
movsb
pop
add
or
adc
cwtl
mov
pusha
jb
cmpsl
jo
dec
cli
fadds
or
call
push
jno
mov
pop
push
mov
pusha
jge
aam
dec
jmp
mov
aam
jo
inc
mov
dec
sub
imul
pop
push
dec
sub
mov
push
fpatan
hlt
popf
dec
push
mov
hlt
xor
insb
mov
sbb
dec
ds
xchg
stos
sbbb
outsl
mov
ja
or
dec
inc
push
int3
dec
push
pop
jns
rorb
xchg
pop
dec
push
add
push
or
negb
cmp
mov
cld
jg
xor
leave
repz
xor
lea
stos
ja
cld
sub
dec
in
fwait
insb
cmpsl
cmp
xor
mov
push
call
cmpsl
mov
repz
je
push
cmp
js
fiaddl
xor
mov
imul
movsl
mov
lods
jnp
jl,pt
nop
pop
sarb
pop
mov
dec
inc
arpl
jg
sub
sub
inc
dec
jnp
out
lods
fs
das
jnp
sub
mov
mov
je
push
xchg
dec
cmpsb
lods
mov
pop
push
xchg
call
rolb
ficoms
sub
jns
in
cli
adc
jecxz
sti
pop
jge
repz
jmp
mov
jg
mov
gs
inc
and
cli
pop
xlat
mov
pop
mov
fstpt
push
in
pop
mov
cmp
in
xlat
inc
xchg
xor
pop
xor
stos
mov
inc
inc
js
fisubrs
adc
xchg
insl
sbb
inc
sub
sub
outsl
jle
cmp
inc
pusha
repnz
pop
je
aas
das
dec
out
lahf
in
es
jnp
pop
adc
xor
cmp
cmp
dec
push
incb
lea
mov
jp
ja
inc
or
mov
add
push
or
sub
fsubrs
pop
mov
cli
xchg
add
pop
cmp
stc
insb
push
xor
nop
push
mov
out
cmp
pop
pop
dec
icebp
or
and
jne
loop
inc
aam
xor
xor
fldcw
popf
repnz
lods
dec
test
mov
test
jb
dec
or
cld
pop
shll
or
ljmp
lret
jge
bound
in
call
imul
xchg
cmpb
mov
not
pop
sub
jmp
xor
push
gs
jnp
sbb
sbb
sbb
pop
jo
jg
push
mov
filds
pusha
push
dec
test
rolb
scas
sbb
adc
sub
negb
mov
sub
add
jp
inc
mov
ljmp
cmp
movaps
mov
ss
test
dec
hlt
icebp
popf
xor
imul
pop
jmp
cmp
insb
icebp
push
or
hlt
or
rcll
mov
sub
sub
addb
xlat
dec
and
mov
inc
or
adc
fwait
inc
inc
fisubl
push
repz
push
aaa
mov
jmp
add
inc
sub
std
mov
mov
dec
ret
out
jae
jmp
inc
xchg
scas
mov
inc
jge
push
mov
daa
lret
outsl
pusha
cmp
bound
pop
sub
scas
in
jp
xor
push
data16
js
pop
push
sub
push
jle
aam
adc
fidivs
dec
xchg
sub
stos
mov
fs
xchg
lock
pop
add
popf
sub
mov
inc
cwtl
jl
in
mov
dec
mov
adc
dec
xor
jmp
sub
xlat
sub
ljmp
test
pop
pop
jo
enter
es
jb
mov
xchg
pop
mov
das
cmp
pop
stos
pop
push
or
dec
int
bound
arpl
push
add
pop
mov
mov
fs
jo
orb
push
sub
pop
xor
std
lods
inc
sbb
push
pop
xchg
loop
jno
aaa
bound
cmp
jg
cmp
mov
outsb
sbb
loop
cmp
push
sub
in
fnstcw
jb
pop
jmp
mov
hlt
push
or
subl
or
adc
in
mov
mov
xor
jno
cmp
mov
jo
push
xor
sub
in
adc
xchg
imul
ljmp
lret
fisubs
lock
dec
inc
out
test
xor
or
in
fs
cmc
jmp
insl
in
std
negl
pop
mov
xor
repnz
int
in
and
ss
sbb
xlat
lods
pop
clc
test
movsl
lea
adc
test
mov
call
cmp
push
sub
push
cmp
inc
fidivrl
bound
neg
sub
xorb
mov
jne
push
arpl
jnp
out
sub
cmp
xor
pop
push
adcl
icebp
fisubrl
hlt
repz
xor
add
xchg
shll
inc
ljmp
sub
sub
dec
das
lret
mov
xor
sub
xor
out
mov
push
dec
pop
cmpsl
xor
fistl
mov
add
inc
movzwl
das
sub
js
popa
imul
push
inc
dec
movsb
and
mov
aas
lods
cmp
pop
push
mov
pop
dec
lea
jno
or
out
pop
mov
jl
mov
sbb
daa
jmp
fisubl
shl
lret
aad
jmp
pushf
hlt
cmc
clc
inc
int3
or
xor
xor
sub
jle
xor
xor
sbb
pop
stc
xchg
hlt
push
aad
test
pop
and
ja
insl
popa
ljmp
aas
sbb
pop
xchg
arpl
mov
mov
clc
jg
mov
and
shlb
push
inc
sub
lock
xor
xlat
sub
imul
mov
repz
mov
jmp
xchg
push
js
sub
jle
test
xor
mov
fsubrs
lret
stos
xor
in
stos
cmp
aad
test
iret
jmp
sti
int
jmp
mov
lahf
dec
push
pop
inc
jbe
lret
xchg
xchg
mov
xchg
pushf
pop
rorl
xchg
mov
lods
divps
scas
arpl
xchg
pop
ljmp
das
sub
pop
jl
push
repz
sbb
xor
and
push
fsubl
push
loop
sub
pop
aaa
push
test
sub
popa
xor
pop
mov
shll
xor
jle
dec
cmpl
adc
push
jle
rol
push
pop
cmpsl
or
sub
ret
add
add
leave
jp
dec
sbb
xor
push
les
aaa
lcall
mov
pop
leave
fdivl
pop
movsl
mov
sub
das
aas
pop
shrb
cmpsl
xlat
subl
sbb
pop
sub
and
inc
aaa
test
mov
xor
es
mov
inc
xchg
or
pusha
cs
mov
cld
out
aaa
adc
fnsave
pop
jmp
bound
or
push
pop
popa
cwtl
pop
movsb
jg
jnp
xor
dec
rolb
sub
xchg
jbe
sbb
dec
mov
mov
xor
jae
cltd
addl
cmpl
sub
dec
dec
test
xor
jae
repz
das
adc
movsl
dec
imul
xor
ja
mov
xchg
clc
lcall
mov
repz
xor
fnstcw
push
stos
ss
dec
loopne
and
cltd
repz
fwait
sub
flds
dec
add
pop
dec
sbb
jae
cmp
lods
sbb
dec
dec
push
shl
aaa
dec
sub
xor
testl
aas
data16
insb
fldcw
mov
mov
mov
mov
dec
movsl
into
pop
insb
inc
inc
mov
cli
xchg
cs
xor
ss
cmc
jl
sub
sub
mov
in
in
cmpsl
test
mov
scas
jmp
lcall
mov
sub
xchg
mov
aaa
mov
in
xor
test
jp
add
sub
push
mov
sub
sub
xchg
pop
xor
sbb
cmp
ret
icebp
mov
mov
inc
dec
push
mov
add
or
mov
int
lret
dec
pop
xor
mov
jecxz
xor
aaa
les
cmp
js
pushf
adc
int
mov
imul
xchg
xchg
pop
xchg
call
arpl
mov
xor
mov
sub
lret
dec
mov
insl
in
icebp
sub
adcb
repnz
mov
inc
lcall
cmp
inc
xor
push
addr16
movsb
cmp
jae
or
adc
mov
xor
jno
and
lods
adc
push
pop
jmp
mov
ljmp
out
int
mov
add
mov
mov
fmulp
lock
inc
push
jle
sub
movb
int3
pop
adc
into
cmc
inc
xor
and
into
loop
sahf
push
push
ja
xor
lock
adc
mov
mov
inc
cmp
or
insb
push
das
sbb
adc
data16
mov
cmpsl
pop
fstl
and
pop
sub
paddsb
xchg
jp
ljmp
push
xor
fs
jle
cld
enter
jmp
mov
xor
repnz
mov
jg
push
mov
movsw
sub
in
mov
cmp
mov
dec
loop
pushl
sbb
xor
mov
add
mov
xlat
sub
nop
jmp
pop
sub
loope
push
sub
add
lods
push
mov
imul
movsl
loope
pop
cs
dec
jl
push
and
icebp
das
or
xor
fs
sbb
lds
stc
push
cmp
fldl
icebp
add
stos
fdivs
cmp
pop
imul
sub
pop
push
xchg
sub
outsl
pop
mov
fs
adc
xchg
addr16
stos
or
pop
lret
push
and
fs
lds
cmpsb
sbbb
icebp
inc
mov
mov
jmp
dec
insb
stos
xor
pop
lods
int
and
movsl
icebp
push
pop
dec
sub
loop
adc
push
sub
lds
dec
ljmp
lods
pop
mov
sub
sub
rolb
inc
fnstsw
sbb
pop
mov
mov
adc
inc
xor
dec
ljmp
iret
aaa
inc
imull
bound
imul
shll
push
pop
push
stos
mov
hlt
cmp
mov
jo
pop
ss
jle
and
dec
stos
sub
jnp
sub
inc
sub
cli
xor
mov
jnp
jge
stos
pop
mov
xlat
hlt
xchg
mov
xor
imul
dec
push
jnp
inc
pop
lret
in
mov
dec
ja
mov
push
test
sbb
sti
cld
mov
sbb
jnp
aaa
cmp
jmp
xor
inc
jp
dec
add
aaa
inc
and
jae
gs
hlt
out
mov
dec
addr16
or
cmp
push
scas
dec
out
out
inc
cs
dec
add
sahf
insb
cmp
mov
jg
xor
mov
lahf
mov
jp
mov
ret
rcr
dec
stos
jnp
push
movsb
inc
jb
aaa
sub
mov
das
push
into
jmp
pop
imul
add
jo
jns
insl
cmc
xchg
mov
dec
cmp
outsl
adc
jmp
inc
sbbl
imul
pop
add
shlb
dec
shlb
jb
mov
in
imul
dec
cld
sarb
pop
mov
xor
jo
pop
ss
bound
push
ja
push
imul
jg
fs
xor
push
movsl
dec
out
cmp
push
inc
in
aaa
pop
sub
jne
pop
pop
test
lods
cmp
jb
inc
ljmp
fisubrl
push
add
jns
push
pop
pusha
push
sub
pop
xchg
scas
ss
pop
dec
jmp
das
aaa
aam
push
pop
pop
add
push
xchg
cmp
dec
stc
jg
stos
xchg
js
bound
ret
jns
mov
cmp
imul
ja
push
cmp
lea
stos
add
dec
dec
pop
pop
cmp
mov
or
out
sub
insb
sub
leave
lods
xor
mov
push
push
jg
scas
xchg
xor
daa
imul
mov
ffreep
inc
push
imul
dec
lret
das
iret
mov
clc
push
xlat
cmp
ret
stos
mov
xor
inc
mov
inc
movsl
sarb
xor
inc
xor
add
lock
out
je
sub
subb
mov
movsb
jge
loopne
fs
jl
icebp
dec
xchg
push
push
fisubl
cmpsl
cli
mov
cmp
sti
lds
xor
test
xor
push
adc
shl
mov
aaa
pusha
add
in
add
and
divb
push
dec
xchg
fimuls
xor
repz
mov
lahf
xchg
xor
test
mov
lods
adc
ljmp
mov
in
mov
pop
inc
jp
shll
incl
arpl
add
inc
inc
and
add
mulb
insb
hlt
in
les
mov
pop
dec
sbb
mov
das
cmp
aas
push
fsubrs
jmp
sub
test
iret
sub
jmp
xchg
push
cmp
rorl
fs
mov
fldcw
cs
sbb
mov
lods
sub
adc
sbb
hlt
mov
fsubrs
out
sub
push
dec
repnz
mov
ret
dec
jmp
daa
jmp
xchg
ja
cwtl
in
mov
out
pop
inc
les
xor
jno
mov
insb
rcll
jb
addr16
jge
test
cmp
in
push
hlt
in
jp
sub
xchg
roll
xor
jl
xor
cmp
je
loopne
mov
aas
rorl
testl
mov
aaa
push
daa
adc
shll
fs
push
xor
repnz
jl
out
arpl
ficomps
jmp
cmp
dec
cld
sub
stos
jp
inc
push
dec
cmp
push
ret
mov
push
sub
mov
jb
aaa
push
mov
mov
shlb
pop
sub
fs
and
lret
and
xlat
xchg
inc
push
mov
sub
xor
mov
push
inc
scas
dec
push
stos
test
in
lret
pop
inc
cmpl
test
push
add
jns
jp
inc
scas
cmp
and
loopne
mov
push
out
push
bound
dec
pop
jmp
sti
mov
out
imul
inc
xchg
jne
cs
sub
cmp
cmpsb
mov
in
pop
dec
cmp
in
pop
daa
add
inc
outsl
sub
sub
dec
int3
shl
stos
mov
test
mov
pop
addr16
movl
inc
nop
jae
icebp
insl
dec
jmp
cmp
sub
in
pop
movsl
and
jp
xor
push
cmpsl
enter
mov
mov
jb
inc
push
rorb
ficoms
loopne
cmpsl
js
rorl
ljmp
xor
mov
dec
adcl
out
or
mov
stos
sub
es
jbe
inc
and
stc
cmp
pop
sub
testl
push
das
jb
data16
cmp
pusha
cmp
jne
std
xlat
insl
cmp
decb
fildll
dec
pushf
das
add
jb
and
iret
repnz
add
pop
pop
inc
dec
and
mov
test
stc
scas
push
cs
test
push
repz
icebp
notb
outsl
andl
dec
pop
sbb
push
cmp
mov
push
aas
insb
jg,pn
mov
ja
xchg
subb
push
xchg
sub
or
cli
cs
push
icebp
and
xor
or
add
cli
cmp
je
outsb
movsb
sub
bound
fucompp
push
adc
push
sub
icebp
aas
leave
xchg
scas
jp
xor
push
stc
gs
inc
xorl
fmuls
mov
xor
dec
pop
shrb
or
sub
jne
leave
push
and
into
push
jnp
repnz
stos
jmp
das
sub
add
add
je
cmp
ss
out
xor
ljmp
sti
sahf
stos
adc
xor
add
xor
sbb
bound
data16
mov
inc
cmp
imul
xlat
xor
push
xor
iret
in
ljmp
add
push
xorb
cmp
push
pop
inc
inc
in
shl
jge
ljmp
ficomps
add
icebp
dec
add
scas
fiadds
cli
dec
push
ficomps
scas
aaa
push
pop
inc
cwtl
in
outsl
outsb
mov
mov
sub
rorl
dec
hlt
mov
xor
jg
mov
in
or
sub
aaa
std
les
and
or
fimull
fld
mov
in
cmp
pop
notb
adc
push
jmp
lds
push
imul
jmp
mov
xor
pop
pop
mov
cmp
in
iret
xor
push
sub
sub
pop
out
adc
dec
ja
or
out
sti
fs
pop
andl
out
pop
mov
cli
pop
push
cli
xor
pop
mov
inc
mov
inc
insb
sub
pop
scas
lock
clc
jnp
dec
mov
out
mov
mull
sub
xchg
and
or
push
pop
cmp
push
inc
insb
mov
mov
push
mov
out
sbb
cs
pop
xchg
push
cmpsl
movsl
ja
sub
xor
mov
cmp
in
xchg
jo
cli
mov
enter
sub
outsl
bound
ret
mov
popa
ja
pop
jge
lret
pop
mov
ja
xchg
fnstcw
jne
out
xor
mov
or
out
mov
cli
xor
cmpsl
sbb
fdivl
push
cmp
mov
fwait
dec
xor
ffree
mov
scas
data16
imul
sub
pop
ret
mov
and
scas
aaa
sub
jl
jne
cmp
ret
inc
movsb
xor
inc
xorb
cmp
jmp
jle
ss
stos
mov
aad
cmpsl
pop
inc
sub
movsl
out
mov
push
sub
xor
fs
mov
pop
cli
jno
push
das
imul
xor
adc
push
es
sub
in
repz
je
cmp
aaa
mov
push
dec
mov
ljmp
xor
and
in
js
jp
cmp
sub
icebp
aad
out
jp
inc
push
pusha
dec
loopne
adc
sub
mov
pop
jmp
dec
cmp
adc
dec
adc
pop
iret
pop
sub
dec
or
sub
hlt
fs
fisttpl
push
mov
je
ss
data16
pop
pop
aam
mov
sub
insl
sub
pop
je
push
mov
jmp
mov
adc
sub
shrb
div
ss
lret
mov
or
sub
jmp
pop
in
ss
cmp
test
mov
sarl
xor
dec
adc
outsb
adc
cmp
data16
aaa
dec
addr16
xchg
xchg
pop
mov
dec
xor
inc
lds
and
inc
mov
divl
movsb
in
xor
jge
xor
iret
jl
arpl
sub
jmp
lcall
cmc
imul
ljmp
iret
pop
aaa
repnz
scas
or
push
xchg
cmp
add
mov
outsb
and
jmp
inc
popa
fs
dec
add
cs
test
push
sbb
dec
pop
stos
xchg
pusha
pop
lds
and
mov
out
ret
inc
xor
pop
mov
jno
movsb
mov
das
cmp
scas
adc
sbb
mov
stos
cs
xchg
imul
leave
xor
lret
push
jmp
shrb
mov
xor
cmpsb
push
xchg
dec
sbb
xlat
outsb
stos
dec
imul
mov
in
sub
jo
data16
xor
dec
test
mov
xchg
xor
pop
fcoms
cmp
fisubrs
fsubrp
ds
sbb
and
sub
dec
xchg
xor
aas
mov
in
lds
lea
xchg
mov
mov
lods
dec
push
jbe
lods
mov
cmpsb
inc
mov
ds
jp
sbb
nop
mov
fcmovbe
out
inc
incl
aad
inc
dec
mov
xor
mov
insb
xor
loopne
pop
mov
cmp
nop
fcomps
testb
xor
fdivrs
mov
ds
arpl
xchg
in
mov
in
pop
inc
or
mov
shl
add
pop
in
adc
push
sbb
scas
sub
cmp
push
cmpsl
mov
ds
cltd
jb
mov
fidivl
arpl
stc
out
adc
push
bound
adc
lea
sub
adc
xor
outsl
or
push
test
mov
dec
and
lock
test
xchg
pusha
fs
out
sub
dec
cmp
in
mov
aad
sub
dec
shrb
inc
pop
cmp
push
xchg
pop
push
in
aaa
testb
jo
cmp
xchg
mov
lods
pop
pop
imul
mov
jg
rcrb
cli
into
xor
add
ljmpw
pop
lret
or
mov
fidivrl
push
jge
jmp
pop
lahf
dec
cmp
jl
add
push
popa
xchg
push
cld
mov
push
sahf
mov
sti
mov
cltd
cmp
les
mov
in
cmp
pop
mov
je
stos
push
mull
inc
dec
lock
mov
mov
fidivrl
dec
addl
sub
and
fwait
push
push
sub
pop
pop
xor
subb
dec
sub
lea
dec
mov
adc
adc
aad
jmp
stmxcsr
xchg
xor
jns
push
int
popa
adc
push
sub
jbe
xor
sbb
lods
or
jmp
ja
mov
mov
jg
xor
jmp
in
in
les
movsb
mov
sub
ljmp
lock
or
xor
mov
xchg
xor
ss
jmp
inc
sub
pop
imul
adc
push
sahf
push
lods
or
loop
ret
sti
mov
mov
mov
jmp
pop
cmp
jg
xor
fwait
push
jl
sti
shll
sub
rolb
in
bnd
bound
mov
push
cmpsl
bound
ja
or
jno
pop
jp
inc
daa
cmpl
lock
mov
cmp
mov
inc
sub
push
adc
sub
shll
shr
das
shrl
inc
inc
fistpl
scas
jp
cmp
push
jge
mov
mov
jp
pop
ljmp
lea
pushl
and
xor
ljmp
outsb
pop
xor
mov
jp
dec
test
sarl
test
sub
mov
mov
sub
gs
out
xor
mov
repnz
imul
mov
lret
add
testl
das
popa
pop
cltd
cmpsb
jp
pop
fwait
out
js
data16
jp
jnp
sar
or
inc
pop
or
in
mov
fsubr
fs
inc
ljmp
sahf
push
dec
int
pop
dec
xor
cld
pop
push
or
mov
iret
add
les
in
repz
adc
push
xor
dec
sbb
pop
mov
aas
xchg
aas
idivb
aaa
xor
jl
nop
in
push
dec
jae
jmp
cmp
xor
push
jp
or
ljmp
xchg
addr16
pop
lods
push
aaa
mov
mov
pop
dec
orl
stos
scas
shrl
push
ss
sub
sbb
out
lcall
mov
in
push
mov
fs
cli
xor
test
cmp
js
addl
test
jno
mov
mov
pop
sub
in
rorl
ret
clc
mov
sub
inc
scas
in
push
dec
xchg
fcoms
js
clc
ja
sub
xlat
and
sbb
mov
sbb
fistl
mov
bnd
in
cmp
clc
fnstcw
sub
push
fs
stos
xor
mov
in
stos
fldt
and
shrl
cmc
dec
ja
dec
dec
add
repnz
ss
cmp
je
inc
daa
xor
xchg
mov
mov
add
mov
subl
xor
mov
fldcw
cs
les
pop
ja
jl
roll
pop
jmp
shll
xor
stos
jmp
dec
push
push
insb
scas
aam
cli
jp
dec
sbb
out
bound
aas
ljmp
fstpt
dec
pop
push
jns
cmp
mov
sbb
push
leave
daa
repz
rcrb
das
mov
fs
xchg
dec
inc
shl
inc
out
arpl
cmp
jmp
aaa
push
dec
pop
sbb
pop
sub
inc
pushf
aaa
fbld
cmp
push
jb
push
inc
dec
lock
ja
movsb
std
cli
xchg
sarb
sub
lods
int3
push
push
mov
jmp
add
jb
fdivrs
dec
aaa
out
and
mov
stc
inc
cmpsb
push
jb
inc
cmp
gs
lds
xor
lea
in
outsb
dec
mov
imul
inc
jmp
cmp
data16
adc
xchg
xor
ss
pop
insb
add
shll
dec
push
xchg
xor
mov
push
xchg
in
mov
pop
inc
mov
dec
fcmovnbe
sub
aas
arpl
cmp
pop
cmpsb
stc
mov
sbb
xor
icebp
gs
jp
cmp
cmp
mov
pop
mov
in
add
xor
mov
adcl
sub
add
xchg
aam
adc
lahf
in
inc
fimull
xor
lahf
sub
inc
ljmp
sub
dec
rcll
mov
sbb
lock
inc
bound
fnsave
pop
imul
lcall
sub
sub
movsl
fildll
xor
push
sbb
sub
cmp
cmpsl
pop
xor
push
movsl
ljmp
sub
roll
xchg
insb
cmpl
xchg
jg
mov
cmp
repz
inc
fdivrp
xor
dec
inc
cwtl
inc
in
fildll
cmp
aaa
and
ds
pop
pop
loopne
dec
xchg
cmp
jl
jae
sub
ljmp
or
xor
cmp
adc
push
lea
out
and
mov
int
or
mov
cmp
cltd
popa
outsl
imul
cmp
cld
jmp
jp
push
xchg
or
sub
xor
lcall
fists
cmp
add
ss
dec
inc
iret
cmpsl
loope
shll
movsl
gs
jb
pop
in
jmp
aaa
cmp
or
xor
cmpsb
push
imul
add
test
rcll
pushf
add
test
pop
stos
cli
fildl
pushl
rolb
dec
adc
push
push
jns
int3
inc
hlt
popa
jmp
fisttpll
ljmp
or
push
inc
adc
pop
push
adc
cmc
push
xor
sub
rorb
pop
xchg
dec
xor
mov
jl
sti
in
push
cld
jmp
ja
xor
lds
cmp
sbb
jp
pop
aad
cmp
jno
dec
insb
mov
and
dec
mov
inc
cs
cmp
mov
jno
xchg
inc
dec
bound
dec
notb
add
in
adc
ja
and
icebp
inc
sub
push
movsl
adc
cmp
test
into
push
dec
repnz
dec
jo
notl
or
cmp
hlt
out
push
mov
mov
jmp
xor
aas
adc
aaa
dec
adc
out
add
cmp
push
cmp
cmp
inc
mov
sbbl
mov
shrb
dec
inc
addr16
xchg
in
rcll
cmc
aas
cmp
ljmp
mov
mov
fmul
scas
pop
inc
mov
in
xor
data16
mov
jbe
rclb
adc
pop
mov
inc
inc
add
push
inc
adc
aad
inc
mov
dec
xor
out
inc
sub
mov
xchg
mov
adc
into
dec
xor
or
inc
xor
inc
pop
push
or
push
push
int
ja
bound
inc
and
add
mov
inc
pop
cmpsl
imul
mov
mov
cmp
jbe
in
push
adc
out
cmp
sub
xor
mov
sub
add
dec
imul
mov
xor
and
out
outsl
dec
cs
imul
dec
das
stos
shlb
testl
dec
ficompl
jbe
aam
fdivr
mov
aaa
aas
pop
mov
cmp
push
sbb
imull
push
mov
xor
aaa
or
jo
mov
pop
shlb
pusha
push
dec
ds
add
cli
adc
xlat
inc
cmp
insb
cmpsl
lret
cmc
divb
leave
mov
xchg
mov
jae
jmp
dec
jmp
in
add
pop
jmp
cld
cli
icebp
cmp
xchg
pushf
in
jp
aaa
cs
mov
cltd
insl
pop
imul
mov
xor
decl
and
sub
dec
sub
push
pop
bound
lods
pop
inc
icebp
push
xor
clc
jno
inc
mov
aam
pop
inc
jp
add
xchg
add
sbbl
or
stos
push
inc
xor
movsb
ss
in
inc
cmp
lret
pop
pop
sti
jbe
movsl
fstl
jo
popa
dec
cmp
movsl
jge
stc
push
mov
das
jl
mov
jp
push
test
pop
inc
mov
popa
int3
loopne,pn
cmpsl
mov
out
mov
imul
lock
bound
xorb
cmp
push
stc
arpl
mov
jnp,pn
addr16
push
sahf
sub
xchg
adc
daa
mov
lods
aas
pop
xchg
imul
xor
iret
mov
idiv
jg
bound
mov
sbb
and
sub
dec
shr
imul
xchg
lock
jge
add
cmc
dec
ret
mov
mov
ljmp
mov
xor
mov
ja
movsb
lods
out
stos
pop
pop
mov
lods
aad
xor
pop
sahf
loopne
jo
push
test
insb
inc
inc
or
push
adc
pop
popa
xchg
mov
in
inc
fmuls
aaa
push
cli
xorl
imul
ret
push
arpl
jmp
sub
mov
sbb
cli
mov
sbb
xchg
pop
ds
sub
jg
push
ss
mov
aaa
sub
int3
ss
lea
scas
in
loop
das
dec
mov
dec
aas
cmp
dec
xor
in
cmp
adc
mov
cli
aas
pop
test
add
inc
or
inc
jne
or
addr16
stos
mov
test
imul
push
inc
push
push
mov
inc
sbb
jmp
jne
ds
cld
out
les
push
push
mov
inc
push
das
adc
push
pop
ss
lods
push
sub
jge
inc
cli
lcall
in
call
pop
push
clc
mov
xchg
insl
outsl
lods
ds
aas
stos
push
sti
dec
fs
pop
mov
cmp
or
cmpsl
dec
std
nop
scas
out
push
or
or
jl
fwait
repnz
fildll
cmpsl
int3
cmp
cs
push
jns
cs
js
inc
push
push
cmp
xchg
jp
loop
dec
sbb
cmp
ljmp
popa
dec
notb
sbb
dec
cmp
lahf
test
outsb
mov
cmp
je
jecxz
mov
jmp
or
adc
cmp
imul
push
daa
stos
repz
xor
nop
adc
add
push
push
inc
mov
les
jbe
or
cmp
in
movsb
in
sub
repz
or
js
jl
pop
shll
pop
fs
imul
inc
push
mov
cmc
push
inc
push
pop
testl
fsubrl
sub
push
xor
movsl
xlat
shrb
and
ljmp
mov
in
pop
dec
mov
es
inc
lcall
popa
dec
filds
add
cmp
pop
pushl
mov
adcb
cwtl
mov
mov
dec
pop
xor
xchg
bound
mov
inc
lahf
sbb
mov
cld
mov
leave
aas
jns
xor
push
decl
push
cmp
leave
xor
pop
test
xchg
xchg
dec
xchg
ss
inc
fidivrl
sub
xor
or
sub
pop
out
mov
add
hlt
lret
sub
add
push
mov
inc
cmp
idivl
pop
inc
std
cmpsl
movsb
push
aaa
div
cmp
stc
mov
dec
dec
mov
adc
push
xchg
add
bnd
add
rorb
cmp
sub
scas
jne
dec
xor
scas
in
pop
cmp
sub
sub
pop
xchg
cmc
imul
jb
inc
xor
mov
jbe
rclb
pop
push
sub
jle
pop
test
jge
adc
jae
cmc
stos
das
jmp
mov
test
jp
cmp
jns
bound
xchg
jae
ljmp
sub
outsb
cld
xor
cmp
add
push
adc
mov
or
mov
pusha
insb
inc
add
inc
imul
mov
mov
dec
stc
push
cmpsb
jp
lret
push
dec
push
and
sahf
jb
cmp
cli
push
shlb
adc
scas
push
push
push
mov
sub
lods
in
lods
push
inc
jmp
or
mov
bound
mov
rcrl
push
mov
xchg
xor
push
out
and
ss
inc
jnp
mov
sub
dec
arpl
pop
mov
dec
jb
test
jp
xchg
inc
mov
adc
inc
and
cmp
xchg
push
xor
cmp
incb
cvttps2pi
std
outsb
sbb
lds
xor
imul
mov
sub
mov
shl
xchg
inc
or
cmp
xchg
jne
pop
and
mov
dec
sub
in
js
ret
lods
add
mov
test
arpl
jg
cmc
shll
scas
bound
out
lds
push
dec
xchg
pop
inc
xor
in
mov
xchg
pop
cmp
jne
je
sub
xor
sub
dec
out
ja
adc
shr
hlt
movsl
pop
sub
sub
popa
add
imul
bound
cmpsl
rcl
mov
dec
jg
cmpsl
pop
cwtd
jb
fs
shrb
in
and
mov
loopne
dec
pop
fwait
dec
dec
ficoml
das
jg
pop
imul
xchg
jbe
fstpl
xor
pop
stc
jp
cwtl
pop
out
push
sbb
jo
sbb
arpl
cmpxchg
push
mov
dec
sub
out
test
sbb
sti
push
bound
jp
cmp
sub
test
cmp
or
ljmp
push
add
mov
push
dec
mov
test
sub
fildll
test
das
ljmp
adc
adc
cmp
imul
jge
dec
pop
push
inc
push
lret
cs
lcall
inc
or
or
js
rcl
pop
dec
fcoml
jae
inc
sub
cld
cmp
push
fucomi
cs
jb
push
push
sub
popa
cmc
xor
xchg
sbb
or
ljmp
inc
inc
mov
push
jnp
pop
adc
in
mov
outsl
int
jecxz
in
mov
lods
pop
stc
mov
daa
mov
sahf
push
enter
mov
sbb
cltd
imulb
cmp
mov
flds
loope
fiadds
sub
bnd
cmpb
cs
add
movsl
cwtl
cmpsb
mov
xor
sub
xor
mov
inc
imul
mov
icebp
push
adc
or
pop
lock
fistpl
clc
xchg
divb
dec
xor
rcrl
sub
cmp
xor
inc
push
mov
adc
sub
jle
xor
sub
lea
dec
push
orl
lret
test
pop
mov
clc
je
fsts
out
cmc
hlt
inc
pop
mov
stos
sub
mov
push
inc
jne
dec
rclb
pushf
xchg
fs
ja
jmp
mov
cmp
bound
in
and
dec
sbb
jmp
std
sub
dec
inc
in
jne
xlat
lods
pop
ljmp
mov
ljmp
fwait
xchg
jbe
jmp
sbb
stos
ss
mov
out
ficompl
xor
dec
jbe
push
les
mov
and
pop
lcall
xor
pop
mov
pusha
in
and
sub
sub
mov
sbb
and
je
adc
ljmp
add
mov
and
fs
mov
cmpsl
hlt
lods
jmp
mov
test
testb
or
jp
push
jmp
mov
cmpsl
push
cmp
pop
inc
test
and
out
pop
imul
fidivs
pop
clc
sub
scas
xlat
inc
ret
insl
sub
mov
nop
icebp
in
cmp
sbb
adc
pop
cmp
mov
popa
jbe
cmp
repnz
arpl
cmp
xor
jecxz
ss
xor
sub
fiadds
dec
leave
or
jp
pop
sub
cmp
test
subb
cmp
fdiv
lods
jge
mov
push
shlb
imul
rcr
mov
sbb
dec
push
loop
add
mov
mov
push
jne
jg
ret
xchg
outsl
mov
pop
and
sub
mov
mov
scas
iret
cmp
bound
xor
mov
xchg
popl
mov
pop
mov
add
aad
in
cld
inc
and
rorl
dec
xor
cmp
outsb
push
and
in
int3
dec
push
js
cmp
lahf
std
dec
lahf
sub
add
lret
adcl
rcll
sub
mov
cmp
mov
sub
mov
js
fwait
cmpb
leave
cli
xchg
push
sub
jp
mov
repnz
fnstcw
out
hlt
push
push
imul
insl
mov
and
mov
push
cmp
jge
loopne
jmp
mov
mov
imul
das
sub
mov
and
outsb
jp
les
inc
repz
shll
jge
cmpsb
sub
push
and
ds
pop
mov
outsb
lods
pop
push
arpl
add
enter
pop
dec
inc
cltd
out
sub
cmpsl
sti
pop
sahf
sbb
dec
inc
inc
cmpsb
mov
add
daa
and
mov
sbb
js
in
jle
inc
xor
mov
mov
js
push
adc
push
cmp
and
rclb
ss
sub
inc
sub
dec
jl
mov
ss
cmc
movsb
mov
out
or
add
mov
xor
pop
loop
sub
sbb
imul
cmp
ja
dec
cmp
dec
ficompl
imul
xchg
aas
dec
fimull
addr16
mov
inc
pop
out
or
jo
ss
cmp
es
add
mov
iret
inc
data16
pop
pusha
sub
pusha
ljmp
lret
ja
mov
mov
mov
imul
xchg
jbe
push
in
jae
pusha
adc
push
jo
add
repz
cli
mov
add
jp
push
push
fstp
mov
lods
pop
cmp
insl
imul
mov
in
pop
push
jno
inc
push
mov
xchg
sarl
pop
pop
adc
in
jp
inc
jmp
pusha
repz
cmp
or
sti
sub
sahf
xor
jp
inc
jecxz
pop
jl
stc
out
jmp
dec
dec
test
int
push
inc
dec
inc
in
stc
rcll
pop
add
and
int3
aaa
push
hlt
xor
jp
jle
fldenv
dec
sub
mov
ljmp
out
bound
dec
inc
test
pop
mov
push
bound
or
sbb
imul
stos
sahf
jg
jecxz
cmc
push
push
adc
sub
jl
or
push
cld
js
sub
xchg
int3
scas
fwait
aas
bound
push
xchg
loopne
popa
mov
push
jmp
or
xor
cmp
das
adc
inc
mov
push
scas
inc
jg
dec
bound
xor
in
aad
mov
arpl
repz
push
dec
add
cmp
sub
out
push
pusha
nop
jb
sub
push
xor
fisubs
in
adc
mov
cmp
xor
cmp
fsub
aaa
shrl
arpl
fistpll
inc
lahf
mov
sub
or
divb
xchg
xchg
cmc
xor
adc
es
push
pop
lea
jl
aam
dec
push
xor
jne
xor
rcrb
icebp
aaa
fisubrl
lds
jmp
inc
insb
xchg
inc
cmpsb
xchg
xor
cmc
jp
ss
mov
call
aaa
sub
and
sub
test
pop
lods
adc
test
cmp
pop
dec
push
sbb
scas
and
or
test
inc
sahf
cmp
subb
notb
xchg
pop
mov
cmpsl
and
jns
xchg
xor
mov
cmp
sub
lods
or
pop
push
or
sbbb
push
mov
xchg
dec
mov
mov
cmp
into
cmpsl
clc
pop
xchg
dec
imul
push
fidivl
inc
sti
call
repz
pop
xchg
lds
enter
dec
push
cld
sub
jb
fnstenv
lods
inc
or
adc
xor
inc
pop
dec
lret
jnp
xlat
ss
sub
sub
dec
push
test
enter
lock
lret
xchg
add
ds
out
iret
push
bound
push
mov
cmp
dec
mov
mov
movsl
xchg
subl
push
popf
pop
xlat
mov
inc
cmp
xor
pop
shl
pop
arpl
shlb
addr16
cs
pop
out
cmp
dec
sbb
xor
or
out
sub
push
add
mov
lcall
dec
das
lods
filds
xor
outsl
leave
xor
cmp
pop
push
inc
cmpsb
jb
movsb
jbe
mov
pop
imul
pop
pop
mov
mov
jp
dec
sub
and
movsb
cltd
or
movsl
ret
jmp
mull
add
jp
mov
inc
outsl
add
shrl
jnp
inc
add
cmp
mov
ljmp
arpl
mov
test
sub
push
push
xchg
mov
decb
loopne
jmp
push
dec
jmp
ja
in
rolb
add
arpl
jge
inc
push
mov
sbb
pop
xchg
loop
lods
mov
in
pop
jb
repz
jmp
sarl
and
scas
pop
xor
in
xor
xchg
insl
pop
push
add
lock
xor
sbb
mov
push
arpl
pop
arpl
mov
dec
sub
inc
jle
ljmp
xchg
or
fistpll
inc
and
xchg
sbbb
lock
sub
hlt
adc
fs
xchg
sbb
mov
cmp
out
mull
insl
xchg
les
divb
cmpsl
das
push
and
push
pop
mov
imull
hlt
mov
sbb
xchg
sub
popf
jo
pop
incb
and
push
dec
cs
add
adc
pop
stc
jno
sub
pusha
in
cmpb
ja
fadds
pop
mov
or
sub
inc
push
test
pop
repnz
fdiv
adc
cmp
out
int
fisubrl
mov
popa
xchg
dec
imul
and
ljmp
push
dec
cmp
sub
push
cmpsb
dec
ljmp
dec
push
jmp
imul
push
dec
jmp
shlb
push
test
sub
insl
jb
dec
pop
leave
outsl
cmc
imul
push
movsl
jb
sbb
xor
pop
outsl
sub
mov
ljmp
jle
push
cs
mov
aam
and
int3
jp
lock
cmp
mov
outsb
outsl
fs
les
ret
stos
cmc
bound
xchg
mov
scas
jg
pop
sti
imul
push
les
mov
sti
fdivrs
mov
das
push
inc
icebp
dec
fwait
dec
inc
dec
xchg
imul
loope
pop
inc
lods
jp
cmp
xchg
mov
cld
stos
hlt
xor
in
and
jns
jmp
push
jo
pop
nop
in
fwait
xor
xor
jp
xor
push
sarl
stos
adc
mov
arpl
adc
mov
mov
sub
outsb
cmp
push
dec
in
lock
mov
pusha
pop
ret
shlb
imul
dec
pusha
movsl
inc
ljmp
jp
dec
pop
pop
sub
das
ss
pop
out
dec
cmp
loopne
lret
mov
inc
push
inc
xchg
sti
jmp
movsl
mov
insb
mov
jbe
aas
in
repz
dec
pop
out
pop
int
sub
pop
ljmp
fwait
mov
ret
xor
into
lret
push
lods
insb
subl
cmpl
pop
ljmp
cmp
das
mov
inc
nop
outsl
or
sarl
outsb
cmp
sub
push
mov
jle
sahf
pop
out
ds
adc
popf
arpl
mov
pop
push
fldlg2
jp
dec
dec
hlt
lock
pop
jbe
lcall
sub
inc
gs
outsb
enter
lods
out
mov
cmp
jbe
pop
dec
sub
imul
aas
push
mov
insl
dec
ljmp
pop
addr16
add
fcomip
mov
aaa
push
xor
jb
inc
out
outsb
xor
jno
xor
inc
dec
mov
xor
les
xor
addr16
push
in
pop
sbb
pop
jp
bound
dec
pop
cmp
divb
xchg
clc
arpl
pop
mov
loope
cs
adc
jmp
jne
int
jns
pop
pop
inc
outsl
mov
mov
icebp
dec
aam
aaa
xchg
cmp
cmpsb
xchg
adcb
mov
inc
scas
cmp
jmp
jle
xor
maxps
cmp
in
stc
xor
mov
das
lods
or
sub
fstps
jecxz
hlt
les
inc
push
rclb
or
inc
ljmp
mov
cltd
sahf
in
mov
inc
sub
lock
mov
ljmp
push
ljmp
lret
pop
pop
aad
and
xor
sub
loopne
mov
mov
sub
add
leave
cmp
stc
out
xor
pop
xor
out
inc
xchg
insb
inc
mov
gs
lock
cmp
dec
stc
int3
fcmovne
mov
pusha
ss
test
stc
ja
sub
dec
sub
fs
movsb
imul
in
xor
pop
aaa
je
pusha
imul
push
inc
add
xchg
clc
jg
das
push
shrl
int3
or
sbb
sub
ficoms
scas
jmp
push
mov
outsb
xor
mov
pop
popf
sub
jns
scas
movsl
jle
pop
cmp
xchg
movsb
decb
cmp
inc
dec
dec
inc
mov
imul
inc
lret
push
aad
mov
cmp
push
cmp
mov
pop
mov
ds
push
nop
pop
stos
outsl
das
push
dec
fs
jge
sub
addl
lcall
inc
or
pop
cmp
ret
ja
push
xor
pop
pop
out
mov
mov
xorl
sub
ss
std
pushf
outsb
andb
push
mov
in
bound
pop
jecxz
in
in
xchg
lret
or
push
jecxz
gs
cltd
or
adc
scas
cmpsb
scas
xchg
pop
mov
sub
push
sub
inc
fisttpl
mov
mov
jb,pn
arpl
in
lods
mov
xor
sbb
mov
xlat
imulb
adc
jno
das
imul
js
sub
inc
xor
jle
cmp
ds
movsb
ljmp
stos
sbb
das
rcl
ja
movsb
sti
mov
pop
cmp
cmp
cmp
roll
stc
xchg
cmpsl
idivl
jmp
cmp
in
push
dec
cs
sub
fsubrp
lds
jae
push
cmp
imul
popa
jmp
inc
cmp
inc
sub
xchg
cmpsl
dec
test
repz
aam
gs
push
shlb
sti
or
mov
popa
cmp
mov
push
dec
out
aad
pop
xor
sbb
clc
cmp
push
popf
cld
fidivrl
dec
xchg
gs
psrld
push
dec
inc
jb
push
cmp
dec
sti
mov
inc
shl
adc
or
loope
jecxz
xlat
ds
ljmp
andl
dec
cs
je
imul
icebp
imul
inc
dec
jae
iret
jmp
dec
repz
dec
dec
in
mov
icebp
jg
push
and
movsb
or
out
mov
fwait
movsl
ljmp
mov
dec
mov
pop
stos
dec
add
xlat
cmc
mov
icebp
mov
jb
or
lods
jl
inc
dec
mov
js
inc
lock
outsl
addr16
sub
in
dec
pop
jge
fwait
cs
imul
jnp
data16
insl
shll
jge
ljmp
fidivs
movsl
pop
js
push
and
pop
xor
clc
xchg
ja,pn
in
outsb
mov
sti
imul
mov
push
rclb
dec
sahf
pushl
xor
xchg
sub
cs
sub
outsl
mov
pop
xchg
pop
inc
shrl
shrb
pop
or
inc
repz
inc
xor
imul
jge
ljmp
lret
cmp
jl
cs
dec
mov
ljmp
push
aad
cmpsb
call
sub
fisubs
cs
dec
and
and
cmp
fidivl
out
inc
mov
mov
push
ja
xor
ret
das
cmp
xor
push
sarb
adc
sub
push
in
mov
bound
mov
sub
sub
and
xlat
cli
mov
mov
xchg
aad
gs
push
mov
xchg
adc
into
std
cs
cli
push
push
jmp
das
inc
inc
pop
pop
jle
mov
int
mov
xchg
mov
inc
sub
les
aam
sbb
xchg
or
scas
in
dec
dec
decl
cmp
std
in
xor
in
mov
in
pop
xor
stc
adc
aad
jg
inc
movsl
jge
pop
inc
js
push
andb
mov
inc
sub
lock
and
in
mov
sub
dec
scas
aas
in
jae
stos
movl
xchg
ljmp
into
pop
xor
mov
je
hlt
dec
cwtl
jp
xor
insl
cmp
mov
lods
in
push
mov
and
sbb
inc
pop
jno
rcrb
ss
or
rcrb
sub
les
ljmp
pop
push
jno
sbb
lahf
cmp
xlat
mov
lods
pop
in
gs
into
loopne
jbe
dec
cli
cs
dec
push
sub
inc
cmp
mov
pop
sub
fxch
call
push
pop
and
lret
mov
subl
lods
xlat
lods
aas
js
mov
popa
mov
test
stos
orb
inc
pop
faddl
dec
jne
sub
push
insb
dec
mov
push
push
push
lods
push
dec
aam
pop
test
dec
in
xor
inc
or
sbb
jl
push
sub
mov
add
push
dec
jmp
push
je
cmp
aas
lock
sbb
mov
push
xchg
add
cmp
cmp
stc
movsl
dec
out
push
addr16
stos
lock
push
jl
add
sub
push
dec
sub
out
add
sahf
add
cmp
dec
jb
jmp
pop
ljmp
lcall
jmp
jb
scas
outsb
nop
cmp
cmp
js
push
dec
push
insl
jae
in
loope
sub
cmp
sub
test
jecxz
and
cli
mov
sbb
lods
sbb
mov
pusha
xor
xchg
sub
xor
sbb
cmp
jbe
aas
loope
je
push
sub
mov
lahf
cmpsb
cmp
sahf
jecxz
mov
shlb
or
xor
mov
mov
mov
dec
pop
xchg
iret
repnz
cmp
push
pop
lahf
sub
les
and
mov
gs
js
dec
pop
pop
cmpsl
scas
push
add
dec
test
and
mov
inc
int3
inc
push
sbb
sub
inc
xor
inc
pop
or
xchg
xchg
adc
adc
ds
sub
nop
mov
scas
cld
xor
test
dec
jle
adc
sub
aad
dec
cs
adc
fsub
icebp
repz
sbb
push
test
xor
clc
inc
jbe
xor
xor
dec
aas
jg
xchg
mov
das
test
push
lahf
push
or
cmpsb
inc
shr
loopne
pop
ja
imul
add
mov
scas
pop
imul
addr16
dec
clc
scas
mov
cs
popa
jne
push
cmp
inc
cmpsl
gs
cmp
lock
inc
xchg
dec
das
cli
lcall
push
pop
shrl
and
cmp
out
push
into
test
mov
cmp
add
add
pop
popf
fldcw
or
xor
jae
inc
ljmp
sahf
sub
add
ret
icebp
xchg
push
mov
or
pop
ljmp
cmp
movsl
cmp
int
and
ss
sub
adc
mov
pop
push
jp
in
lea
jmp
fidivs
inc
adcb
out
inc
mov
cs
mov
insb
fsubl
jns
aad
outsl
sub
push
or
ret
das
inc
fnstcw
ljmp
dec
xor
push
xor
and
jnp
pop
bound
jle
inc
out
ds
addl
pop
iret
xor
dec
xor
push
movsl
jae
adc
lods
sub
icebp
xchg
in
xchg
imulb
ljmp
mov
sub
sub
xor
pop
in
scas
inc
and
xor
or
shlb
jle
add
add
vpmovusdb
pop
mov
push
jnp
inc
xchg
stos
cmp
nop
pop
test
pop
pop
cmp
xchg
mov
xlat
jmp
xor
in
js
xor
xchg
je
pusha
inc
adc
xlat
adc
cs
mov
inc
nop
leave
ds
push
stos
je
cmp
out
hlt
fstp
lock
lret
add
push
outsl
lods
inc
fisubl
rcrb
bound
fxrstor
jg
inc
mov
push
pop
dec
and
adc
dec
adc
loop
push
xor
sub
hlt
adc
subl
push
pop
nop
in
mov
aad
dec
push
inc
push
push
movsb
icebp
test
sub
sub
iret
cmp
int
fisubrl
cmp
add
xor
pop
movsl
lahf
push
ja
in
cmp
test
shlb
mov
adc
leave
pop
jno
adc
je
mov
aam
sti
sub
bound
push
lods
cmp
mov
ljmp
mov
push
or
xchg
xor
decb
push
mov
bound
inc
in
add
in
arpl
cmp
push
mov
mov
imul
dec
cmp
xchg
repnz
lcall
cli
dec
jnp
sbb
xchg
movsb
inc
out
jno
pop
push
cltd
add
pusha
sbb
mov
mov
pusha
loopne
aaa
jl
arpl
jns
inc
dec
push
inc
xor
sub
or
mov
stos
jnp
xor
rorb
sahf
or
ret
ret
xchg
sbb
pop
ja
mov
push
in
nop
loop
dec
das
add
inc
cmpsb
daa
test
aaa
les
dec
jnp
test
mov
pop
pop
test
inc
adc
sub
push
pop
cmp
cld
pop
ds
rorl
stos
inc
push
fcomi
cmp
add
push
sbb
repz
aaa
imul
and
pop
ja
jns
xchg
popa
lea
shrb
push
or
imul
sti
inc
arpl
dec
pop
pop
in
loopne,pn
push
mov
addr16
sub
idivb
popa
or
adc
inc
xor
cmp
jb
dec
clc
mov
sub
std
sbb
and
mov
xor
sub
into
fdivrl
mov
cmp
test
out
sub
cmpsb
imul
mov
mov
push
and
mov
cltd
xchg
pop
sub
xor
xorl
cmp
movsl
xor
std
inc
pop
or
jecxz
and
repz
sbb
insb
outsl
pop
call
mov
xchg
adc
into
mov
scas
ret
push
inc
sub
push
jmp
shll
out
fcos
xchg
mov
insb
test
dec
push
push
mov
scas
in
push
mov
sbb
cmp
shlb
adc
ljmp
and
mov
and
sub
or
ds
and
push
test
and
cmpsb
repnz
lcall
daa
push
xlat
repnz
cmp
cmp
inc
sub
in
push
push
addr16
cmpsl
mov
mov
xchg
inc
movsb
jno
js
pop
sub
cmp
movsl
cmp
xor
ret
inc
sub
imul
lods
arpl
or
push
xor
cwtl
cmp
dec
imul
adc
sahf
jg
out
push
aaa
jmp
add
push
inc
xchg
cmp
inc
mov
mov
sbb
jnp
push
clc
lret
jno
imul
xchg
imull
in
test
or
inc
mov
ss
inc
mov
cmc
mov
adc
adc
cs
xorb
cmpsl
sbb
mov
xor
stc
addr16
divl
mov
and
std
hlt
push
cmp
dec
cmp
push
repnz
es
mov
adc
dec
ja
mov
dec
inc
push
ja
aaa
out
jae
xchg
jmp
xor
or
xlat
mov
das
adc
lods
xchg
push
idiv
insl
dec
dec
cmp
mov
loope
jle
push
aaa
adc
dec
fists
out
jp
sub
inc
movsl
mov
je
dec
mov
pop
test
jnp
dec
lahf
dec
push
push
ja
or
add
xor
cmp
dec
scas
push
fidivrl
add
xor
jo
dec
sub
scas
jp
stos
dec
roll
shll
pop
dec
jmp
pop
hlt
mov
add
test
daa
jle
popa
stos
xor
push
popa
movsb
insl
std
clc
pop
pop
fsubrl
fnstsw
lea
int3
jge
sbbb
dec
pusha
jne
jmp
inc
cmp
jmp
sarl
data16
sub
pop
push
mov
or
and
inc
xor
inc
push
scas
push
jae
test
pop
call
jns
inc
popa
sub
stos
mov
js
stos
cs
cwtl
jmp
fwait
mov
in
inc
sub
es
test
stc
sti
lret
dec
mov
dec
clc
push
cmp
inc
or
pop
les
popl
dec
jp
movsl
loope
shrl
bnd
lods
inc
jmp
xor
dec
popf
dec
pop
sub
rcll
popa
pop
pop
scas
int3
pop
push
adc
into
xor
dec
push
mov
adc
and
aam
push
fwait
in
je
cs
popa
test
into
xor
xor
jns
and
lea
pop
cmpsb
sbb
fdivrs
and
ljmp
jp
in
fs
lret
cmp
adc
test
arpl
add
cmp
push
xor
mov
inc
xchg
sub
mov
or
out
movsb
insl
jp
fs
inc
mov
les
sub
and
ret
xchg
cmc
add
inc
jmp
xor
mov
ret
jecxz
imul
xor
cmpsb
cmp
les
imul
push
pop
and
push
push
pop
pop
out
add
mov
in
mov
insb
adc
xor
addl
jb
bound
cmpsl
push
jo
push
adc
repnz
insb
add
xor
incl
fidivrl
cmp
or
test
das
mov
bound
pop
cmc
in
shr
mov
rcrb
pusha
push
xorl
test
iret
repnz
pop
push
mov
cmp
mov
xor
cld
bound
sbb
stos
bound
jmp
inc
out
insb
push
dec
sub
decl
push
adc
imul
gs
rolb
pop
dec
xor
jmp
xor
xchg
xchg
fldl
pop
xchg
sahf
mov
scas
movsb
aam
das
aaa
fs
mov
mov
bound
out
dec
leave
fidivs
xor
aad
pop
jp
bound
test
sub
sub
stc
arpl
add
xor
nop
inc
xor
lds
mov
test
shlb
scas
xchg
sbb
cld
outsl
popf
data16
jp
fldl
test
push
imul
fistps
xchg
lods
movsl
fisubs
push
xor
xchg
aaa
mov
cmc
ja
sahf
not
xor
repnz
dec
mov
aas
inc
cwtl
subl
push
pop
in
mov
scas
mov
in
sub
test
scas
mov
mov
arpl
jo
icebp
sub
adc
mov
movsb
xchg
pop
fnstenv
lea
xchg
sub
fisttps
loope
cmp
or
dec
pushf
out
xor
inc
jle
pusha
dec
mov
add
nop
lock
mov
pop
push
fcmove
jmp
outsl
cli
fs
int
ljmp
sahf
xchg
imul
push
arpl
or
xchg
jge
cmp
push
fisttps
repnz
and
ja
xchg
xlat
pop
rorb
lds
add
dec
cmp
orb
dec
mov
bound
dec
jbe
insb
push
popa
dec
jge
mov
sub
xor
add
fidivl
inc
pop
negl
jp
fists
test
imul
cmp
pop
mov
dec
faddl
das
ret
hlt
xor
sti
dec
dec
and
dec
inc
push
mov
adc
xchg
pop
push
pop
inc
jmp
or
inc
sub
sub
xchg
cwtl
cmp
int
popa
mov
les
faddl
adc
jmp
inc
or
xchg
repnz
cmp
dec
xor
std
fxch
sub
icebp
or
xchg
stos
scas
add
pop
cmp
lods
dec
scas
in
pop
cmp
fwait
dec
outsl
adc
in
jno
jg
cli
xchg
bound
mov
pusha
das
rclb
and
out
push
cmp
stos
stc
xchg
repnz
insl
adc
mov
cmp
in
xor
out
hlt
ja
in
lock
mov
ljmp
pop
adc
sti
imulb
icebp
aam
inc
ds
mov
jp
aaa
cmpsb
rcrl
mov
clc
or
cmpsl
cmc
jg
lods
hlt
arpl
jno
push
shrl
inc
jl
dec
jbe
das
mov
fadds
or
imul
movsl
dec
nop
je
ss
dec
cli
sub
mov
mov
sub
jg
pop
push
sarl
insl
test
cmp
mov
insl
inc
leave
iret
jne
sbb
push
outsb
mov
pop
inc
inc
sub
pusha
dec
stos
jg
cmp
cmp
xlat
das
xor
loope
mov
mov
dec
fisttpll
push
inc
xchg
repz
popa
sti
xchg
mov
sub
aas
dec
out
outsl
test
pop
pop
mov
mov
cmp
dec
pop
mov
insb
adc
and
hlt
das
dec
ljmp
ljmp
jno
or
pop
push
lahf
nop
fnstcw
cmp
jecxz
xor
sub
pop
xor
data16
cmp
mov
andb
sub
fbld
dec
lds
outsl
stc
addr16
inc
clc
sti
pop
jae
test
imul
sub
gs
int3
push
push
dec
stos
jp
gs
jns
scas
test
sub
add
push
xor
mov
mov
pop
cmp
cmp
jmp
arpl
xchg
mov
lret
in
inc
lock
or
into
pop
xlat
xchg
js
dec
xchg
cs
in
push
xor
jge
mov
pop
addr16
in
outsl
lods
pop
ljmp
cmp
pop
fmull
out
xor
aas
sub
mov
or
aaa
jl
popf
push
dec
push
dec
roll
xchg
mov
push
ja
repnz
dec
cmp
xor
pushf
add
xor
cs
mov
inc
pop
cmp
pop
pop
mov
jo
sub
popa
outsb
dec
popa
inc
push
push
cmp
sub
mov
in
inc
cmp
push
push
jns
popa
in
sbb
inc
jecxz
push
push
mov
sbb
movsl
lods
pop
imul
test
push
loopne
shr
imul
fistpl
scas
fimull
inc
repz
movsl
adc
jns
cmpsl
out
cmp
cmp
in
xor
dec
sbb
add
push
add
mov
dec
inc
aaa
cmpsl
test
cmp
pop
lret
push
or
fidivl
cmp
push
mov
loop
and
aaa
js
xor
jmp
cmpsl
rcrl
outsl
stc
repnz
pop
cltd
les
lods
sbb
mov
xor
or
mov
add
dec
aam
bound
aaa
jp
inc
dec
inc
movsl
out
lahf
icebp
ds
cmp
mov
push
popa
in
sub
ficoms
adc
jbe
push
dec
iret
imul
insb
imul
push
push
xlat
in
cmp
jle
inc
jmp
icebp
xchg
in
push
test
std
outsl
or
ss
xor
add
push
add
mov
jo
ds
xchg
push
dec
xor
fistps
pop
inc
xor
pop
iret
sub
dec
jbe
not
insb
mov
sahf
movsl
jns
sub
dec
pop
pop
imul
cmp
jb
mov
test
das
roll
jno
add
push
adc
es
add
mov
dec
in
xorl
sub
pushf
out
jbe
fcmovne
dec
push
rclb
xchg
mov
and
dec
or
and
clc
sti
push
ds
gs
test
xchg
inc
cmp
push
cmp
cmp
xchg
in
xor
pop
xchg
subb
inc
ss
mov
imul
fs
scas
hlt
cmp
push
xchg
scas
ret
in
lods
addr16
in
ss
xor
pop
pop
cmp
rep
bound
xchg
enter
dec
push
jne
clc
addr16
outsl
xor
jg
popa
mov
aad
addr16
xlat
imul
sub
fisubrs
cmp
cmc
scas
in
cltd
mov
lods
lret
dec
divb
xchg
call
xor
or
pop
ss
add
cmc
or
dec
push
sbb
push
dec
cltd
sub
pop
inc
inc
push
popa
fwait
push
push
cmpsb
pop
out
icebp
jge
pop
sub
jae
ficompl
pusha
sub
push
outsb
int
sbb
dec
xchg
in
mov
pop
loopne
enter
mov
inc
lods
adc
or
test
imul
adcb
aaa
xchg
dec
xlat
xor
inc
cli
and
inc
xor
dec
sahf
pop
lea
imul
pop
pop
adc
adc
inc
in
push
ror
jp
cmp
sub
push
movsb
jecxz
mov
in
cmpsl
jg
shl
cmp
adc
jmp
fiadds
add
xchg
mov
xor
jmp
pushf
mov
cmp
orl
sub
rol
pop
push
pop
sub
inc
clc
scas
pop
dec
mov
xor
cld
je
inc
inc
cli
pop
lock
shr
pop
pop
sti
cli
sbb
xlat
out
in
lahf
pop
sub
pop
cmp
sahf
push
mov
out
jnp
data16
out
int3
jbe
cwtl
xchg
xor
push
sub
shll
sub
fyl2xp1
mov
movsl
pop
jmp
push
ds
imul
sub
xor
dec
mov
push
rcll
cmpsl
push
out
xchg
sub
sub
xlat
sbb
imul
push
sbb
loope
jns
push
loop
or
das
pusha
add
int3
push
mov
data16
mov
js
das
ja
inc
dec
lods
dec
stos
std
pop
inc
mov
push
cmp
xor
mov
pop
dec
mov
mov
ja
sub
mov
loopne
push
sahf
je
cmp
cmp
idiv
mov
clc
push
xor
xchg
xchg
movsl
test
or
repz
push
bound
jge
in
lcall
ss
arpl
scas
jp
bound
cli
mov
sub
fadd
call
imul
ja
push
cmp
jg
mov
cli
shll
push
call
rclb
dec
dec
das
inc
push
sub
lcall
scas
adc
cmp
add
cmp
pop
xchg
out
movsb
aas
scas
mov
pop
add
rcrl
inc
aaa
lock
cmpsl
popf
insb
mov
cs
test
insl
xchg
dec
testb
mov
fidivrl
xor
cmpsl
add
ds
push
jae
movsl
fsubrl
pop
inc
cmp
jbe
loopne
stos
push
je
push
arpl
arpl
sub
sub
and
mov
xorl
pop
sti
stos
mov
inc
sub
jecxz
repnz
inc
inc
xlat
dec
mov
jb
cmp
mov
xchg
and
pushf
outsb
push
or
sub
xchg
xor
aaa
cmp
test
jl
inc
mov
sub
data16
movsl
sub
scas
push
outsl
xchg
push
xor
adc
adc
in
push
or
bound
int3
outsb
in
cmc
clc
sbb
sub
push
aas
mov
or
mov
ljmp
push
pop
test
dec
aad
rdtsc
hlt
xor
lds
in
xchg
and
cmp
daa
in
outsb
mov
mov
inc
sbb
imul
int
lret
xchg
cmpsl
xlat
iret
mov
fadds
inc
add
fmull
jle
sub
add
cmp
xor
ds
push
scas
cmp
imul
mov
xor
jno
popf
int3
mov
stos
movl
sbb
sub
and
xchg
bound
sub
xor
shll
in
mov
xchg
hlt
dec
je
cmp
ljmp
mov
push
push
dec
ss
jg
mov
inc
push
xlat
sub
xor
ljmp
lret
ljmp
lret
test
int3
xor
cmp
mov
fwait
ds
ret
xor
mov
push
xor
xlat
add
cmc
jbe
dec
jmp
and
xchg
sub
bound
sub
lret
pop
shrl
inc
xchg
in
or
les
scas
add
xor
stos
rcrb
push
out
mov
mov
data16
movaps
sbb
je
pop
xchg
jns
popa
add
dec
mov
xor
dec
in
dec
inc
cmp
pusha
dec
xchg
movsb
cmp
dec
dec
cli
sbb
nop
in
jmp
pop
push
fidivrl
jmp
jae
cmc
les
sub
leave
cmc
outsl
mov
aad
pop
jmp
mov
lret
pop
test
ss
dec
sub
repz
sub
push
out
push
mov
or
pop
repz
sub
ja
insb
add
dec
nop
adc
dec
popa
out
scas
neg
and
sbb
bound
add
je
mov
pop
xor
cmpsl
mov
and
inc
push
add
xor
subb
dec
pop
dec
mov
sbb
cmc
and
fs
test
roll
inc
mov
outsl
push
clc
mov
jmp
gs
int3
push
vcvtsi2ssl
imul
bnd
adc
mov
push
pop
sub
pop
outsb
mov
xchg
cmc
xor
test
lods
sub
dec
pop
aad
mov
pop
repnz
loope
pop
cs
jae
pop
loopne
pop
pop
pop
jbe
cmp
and
stos
push
fxch
das
push
inc
lret
insb
xchg
stos
jbe
arpl
scas
cs
push
popl
xchg
test
popa
cmpsb
mov
fs
jmp
jge
aam
push
inc
fiaddl
sti
push
das
icebp
out
test
stos
sti
je
jge
jmp
insb
icebp
pop
rorb
xor
mov
movsl
pop
popa
in
pop
arpl
cmp
adc
xor
sbb
lods
sub
imul
mov
lock
cld
imul
cmp
sbbl
mov
les
ss
adcb
cli
sub
mov
inc
inc
cltd
sahf
sub
shlb
cld
in
scas
pop
cmp
lcall
scas
stos
and
sub
inc
xchg
in
outsl
dec
dec
cmpsb
scas
lds
subl
mov
mov
ljmp
lret
mov
in
fdivr
jg
sub
dec
pop
dec
je
push
pop
mov
pusha
clc
cmp
sub
insl
pop
ret
into
outsl
lock
clc
dec
lret
adc
sub
sub
mov
adcb
mull
sub
dec
dec
ret
ljmp
mov
rorl
adc
imul
push
push
sub
fsubrl
js
pop
push
mov
cli
mov
lods
adc
lds
mov
inc
dec
jne
dec
rol
outsb
add
aaa
lahf
mov
adc
cmp
xor
and
inc
mov
inc
xor
inc
gs
clc
stos
xchg
jp
sbb
add
jb
lods
mov
sub
scas
negb
dec
bound
cmpsl
add
xor
xor
dec
sbb
pop
add
pusha
adc
inc
mov
imul
and
dec
sub
pop
dec
popf
rcr
xor
ja
dec
sub
sbb
stos
lods
aas
or
outsb
push
insb
nop
xor
cmp
push
inc
sahf
jmp
push
push
dec
test
xorl
in
cmp
and
aaa
push
sbb
jo
pop
xchg
push
jge
pop
repz
scas
stos
bound
stos
imul
sbb
pop
mov
cmp
imul
pop
mov
pop
test
ret
and
jmp
js
mov
sbb
inc
stc
xchg
mull
mov
arpl
jae
call
sub
icebp
mov
cli
lods
push
stc
cmp
je
ss
push
xchg
cmc
xor
xor
pop
xlat
push
pop
cmp
pop
inc
sub
xor
push
jns
cmpsl
adc
push
pop
pop
jno
cmpsb
push
cld
xchg
clc
adcl
inc
sub
mov
dec
or
repnz
lret
pop
bound
loop
andl
inc
jae
or
jp
cmp
mov
mov
dec
adc
je
add
mov
mov
mov
xlat
pop
xchg
bound
fsubrs
das
lret
pop
pushf
pop
bound
jle
imul
lahf
loop
movsl
or
data16
out
mov
mov
push
sub
xor
push
inc
lods
add
mov
xor
push
push
dec
mov
xchg
movsl
or
push
pop
jge
lret
xchg
dec
int3
in
adc
xor
lods
lret
sub
dec
add
jno
adc
test
scas
mov
jbe
mul
test
jp
jo
movsb
dec
cmp
stos
sbb
sub
mov
jnp
aaa
aaa
sub
jb
scas
jg
cmp
lahf
cmpsl
cmp
mov
fs
ja
bound
mov
jb
mov
ficompl
mov
add
enter
pop
mov
in
cmpsb
xor
add
gs
mov
cmp
mov
jmp
jmp
call
stc
test
add
jo
push
movsl
mov
xor
pop
cmp
mov
in
push
inc
sub
les
lret
push
dec
cmp
mov
rcrb
cld
cmp
pop
pop
jbe
arpl
fwait
xchg
mov
in
inc
push
mov
jp
fmulp
inc
jnp
inc
aaa
clc
add
das
pop
push
pop
inc
aam
insl
mov
pop
sub
mov
pop
push
in
xor
ljmp
xor
scas
test
dec
push
lret
fucomp
sub
push
inc
jns
mov
lods
pop
dec
cmpsl
fwait
leave
insb
xor
mov
cmp
mov
pop
and
inc
xchg
mov
popa
test
std
mov
subl
adc
jb
push
xor
jmp
jmp
xor
lret
push
fnstenv
inc
cmp
shll
adc
dec
movsl
out
push
mov
sub
daa
push
mov
pop
jmp
sub
sub
stos
insb
xchg
xor
pop
leave
xor
add
adc
mov
jmp
push
popa
fstps
or
pop
pop
pop
add
jecxz
sub
jb
in
dec
inc
pop
pop
cmp
sub
aaa
push
mov
xchg
testl
pushf
ljmp
sti
dec
ljmp
add
stc
dec
movsl
fidivs
jo
jno
jmp
stos
js
jmp
xlat
sub
inc
cmp
push
xor
ja
and
icebp
hlt
jnp
cmp
fisttps
pop
in
jp
xor
mov
mov
fnsave
jb
movsl
lret
dec
xlat
divb
xor
les
clc
jb
bound
imul
push
test
leave
in
push
inc
push
adc
mov
sub
inc
sub
xchg
testb
lret
lods
xchg
dec
push
repnz
sti
neg
pop
pop
cs
cmpsl
sbb
pop
mov
sub
jbe
imul
rcl
imull
push
aaa
test
repnz
dec
jg
out
xor
fidivl
in
ja
dec
dec
not
stos
pop
dec
ljmp
push
xor
ds
das
test
gs
scas
sbb
in
inc
into
push
nop
insl
inc
add
aaa
dec
lret
mov
rcrb
sbbl
dec
xorb
pop
in
bnd
dec
in
stos
sub
popf
sub
fisubrs
dec
bound
test
push
aam
ss
gs
lods
hlt
push
sar
jbe
pop
enter
or
xor
test
lods
or
aaa
push
je
jg
xor
xchg
or
inc
pop
add
stc
inc
xchg
lods
pop
push
sbb
mov
pop
fsubrp
les
cmp
push
mov
pop
pop
ljmp
in
int
ljmp
lcall
mov
inc
shrl
push
jmp
loop
test
push
je
in
inc
dec
push
xchg
or
xchg
lods
adc
sub
adc
stc
cmp
xchg
pop
pop
shrl
shlb
dec
mov
fsqrt
lods
ja
mov
mov
les
ret
test
and
inc
cmp
jge
cld
das
mov
xor
cmp
inc
mov
pop
sub
mov
pop
push
mov
add
xchg
ss
popf
fs
sbb
ret
shlb
push
push
int
movsl
rcrl
scas
in
or
mov
mov
inc
scas
bound
sub
out
adc
cmp
mov
push
or
xor
aaa
mov
in
push
aas
push
adc
xchg
insb
cmp
daa
test
xchg
shlb
imul
ljmp
out
mov
insl
cmpsb
push
or
add
jne
push
sub
in
xlat
out
mov
in
jecxz
sarl
pop
jmp
test
jmp
dec
sub
leave
rorl
jo
cmp
cli
sbb
xlat
xor
pop
sub
mov
dec
xor
add
lock
push
mov
pushl
fstl
jmp
cmp
cmp
mov
adc
ficompl
pop
jmp
icebp
xchg
in
and
xchg
das
ss
xchg
insl
push
cmp
in
xor
jmp
orl
cmp
inc
cmp
xchg
out
pop
ss
aaa
sub
stc
out
jp
arpl
in
or
sub
stos
pop
inc
out
scas
pop
inc
jae
adc
xor
cwtl
pop
push
and
sub
cmp
pop
push
sub
mov
inc
aaa
cmpsl
and
pop
sub
stc
adc
xor
mov
xchg
lock
inc
lods
jno
fcmovbe
test
mov
sti
into
inc
out
xor
jmp
jmp
fimull
pop
or
mov
shll
test
insl
or
in
ja
inc
sub
push
pushf
jo
cmp
shrl
push
add
lods
repz
cmp
cmc
stos
pusha
push
ret
xchg
out
push
pop
jle
dec
shll
inc
pop
iret
sub
ret
insl
jecxz
inc
ds
pop
mov
pop
sub
mov
push
pop
push
test
mov
pop
pop
fwait
insb
mov
inc
out
repz
aas
test
add
xor
pop
imul
mov
cmpl
cmc
out
mov
or
mov
sbb
scas
das
cmp
scas
je
cmp
push
push
cmp
lret
and
ja
jmp
push
jg
ljmp
jbe
cs
cmp
cmp
dec
arpl
xchg
dec
ss
into
sub
cmp
adc
cmp
sarl
cmp
mov
dec
outsl
je
cmp
lcall
inc
cmpsl
or
adc
xchg
mov
cmp
insb
inc
xchg
outsl
cmp
dec
jmp
jl
jo
sub
and
push
jge
aad
inc
cmp
mov
scas
sub
dec
sub
cmp
mov
movsb
movsl
insl
pusha
jmp
inc
je
sub
outsb
imul
dec
into
jmp
cmc
lcall
adc
jp
inc
fwait
sbb
out
in
out
fbstp
cmp
push
insb
push
jo
xor
sbb
jge
sub
test
add
pop
aad
shlb
xor
inc
push
aam
rcrl
pop
inc
or
dec
adcb
adc
fisubl
das
iret
inc
mov
leave
aad
nop
shlb
and
sbb
lahf
sub
mov
add
dec
pop
sarl
inc
xor
enter
xor
add
mov
in
dec
mov
addr16
movsl
cmc
dec
cmp
fidivrl
push
inc
cmpsl
lods
mov
rorl
push
pop
xor
and
shlb
jle
cwtl
inc
sub
or
cmp
cwtl
dec
dec
cmp
in
cmc
dec
addr16
push
repnz
lods
das
sub
jns
xor
sub
add
inc
dec
insb
gs
adc
xor
xor
sbb
outsl
xchg
jmp
push
ss
adc
push
xchg
std
cs
shll
jmp
xor
adc
sbb
xor
daa
cld
icebp
lahf
outsl
and
dec
test
xor
pop
jne
mov
pop
mov
inc
pop
inc
iret
sub
bound
sub
inc
pop
pop
xchg
in
mov
cmp
xor
test
test
popf
pop
jp
xor
pop
sub
sbb
add
jmp
lea
insb
mov
imul
scas
das
push
js
mov
add
js
and
dec
or
jo
imulb
mov
imul
mov
jns
xor
pop
ljmp
sahf
mov
adc
sti
mov
test
xor
bound
fwait
gs
add
cmpsl
cli
sbb
xlat
sub
or
popa
andb
mov
xor
mov
push
cmovs
and
pop
movsb
jns
loopne
inc
jmp
sub
je
xor
rol
loop
mov
add
or
inc
cmp
es
aas
ds
inc
cmpsl
ss
xchg
jb
sub
icebp
push
dec
cmp
adc
out
inc
sub
pop
sub
shlb
int3
imul
sub
mov
adc
push
roll
insl
outsb
daa
xchg
sub
daa
inc
popf
mov
dec
mov
sbb
dec
pop
jge
push
push
mov
xor
pop
dec
stc
xor
inc
cmp
outsb
dec
aaa
jl
xor
cmp
mov
mov
outsb
scas
mov
jle
xor
int3
mov
cli
fnstenv
mov
mov
adc
mov
test
xor
insl
std
les
out
xor
sbb
push
ss
sub
jmp
cmp
cmp
or
fwait
ds
dec
inc
inc
in
in
xchg
inc
pop
ss
dec
and
out
cld
mov
or
hlt
popa
or
popa
aas
pop
jmp
push
xchg
mov
lea
mov
dec
xchg
push
adc
addr16
ret
sub
push
push
js
std
out
xchg
stc
aaa
fwait
imul
loope
in
cs
mov
sub
out
nop
insl
lcall
sub
dec
xor
adc
pop
cmp
dec
dec
sahf
jae
imul
mov
popf
in
lcall
mov
mov
mov
cmc
adc
shrl
or
ss
push
jne
divb
sahf
scas
mov
pop
dec
xchg
xor
ss
xor
push
imul
les
lods
lcall
pop
push
jb
cmpsl
pop
xor
ja
push
push
push
pop
divb
cmpsl
mov
push
data16
imul
jp
cs
mov
xchg
cs
mov
cmp
aaa
and
outsb
hlt
add
test
cld
cs
pop
push
incb
stos
lcall
mov
jmp
ret
or
fimull
xor
mov
inc
push
mov
das
stos
cmp
mov
mov
pop
xor
xchg
pop
scas
lcall
dec
jmp
mov
or
leave
loop
movsl
or
sub
xor
mov
clc
outsl
dec
addr16
imul
aaa
pusha
cmp
inc
cmp
push
pop
in
imul
movsl
scas
movsl
dec
bound
xor
mov
stc
psllw
out
inc
xor
jle
push
jg
mov
cld
inc
push
push
xchg
inc
push
out
out
mov
jb
dec
in
insb
imul
sub
mov
pop
dec
and
xor
in
outsl
add
sub
divl
jmp
push
mov
adc
cld
negl
pop
test
inc
push
cltd
in
xor
cmpsl
inc
mov
iret
push
push
dec
test
sahf
pop
or
dec
test
pop
jb
mov
jmp
ljmp
popa
cmp
push
jg
jo
mov
adc
cwtl
aaa
add
sub
scas
xchg
aas
xchg
bound
sahf
cmp
xchg
stos
jno
or
pop
sbb
das
jecxz
es
mov
push
mov
call
jp
std
sub
popl
cmpsb
in
jne
aas
dec
mov
mov
pop
dec
insb
add
pop
cmpsl
stos
orb
mov
les
cmp
movd
repz
arpl
pop
in
cmc
sbb
inc
mulb
push
insl
ss
jae
pop
inc
cmc
les
popa
lods
das
cmp
push
xor
mov
in
inc
dec
push
fs
lods
in
sub
insb
lock
mov
sub
dec
imul
leave
cmp
loop
outsb
sahf
mov
inc
fidivrl
push
adc
pop
dec
popf
xchg
scas
jge
test
outsb
stc
ja
sub
xor
shll
shll
add
shll
nop
mov
outsl
bound
ljmp
stos
pop
push
mov
std
outsl
xor
loope
jb
stos
bound
mov
movsb
push
xor
pop
cmp
sbb
jnp
pop
cs
in
inc
xchg
xchg
les
imul
jp
cmp
in
dec
xor
pop
jb
loope
stos
add
xor
cs
ret
cmp
cmp
push
jmp
add
add
xor
filds
mov
xchg
sub
popa
cmp
insb
pop
inc
scas
inc
sub
xchg
in
int
cmp
test
xlat
stos
jle
cmp
test
cmp
mov
int
mov
dec
cmp
and
cld
mov
js
xor
dec
mov
ss
mov
push
jmp
jb
mov
push
repnz
fisubs
inc
jns
adc
add
push
aad
pop
test
pop
sub
xchg
movsb
xchg
add
xor
or
add
push
shlb
cmp
aam
in
fistpll
pop
orb
cmp
movsl
lods
lcall
jbe
push
jmp
inc
dec
shlb
sub
pop
cmp
xlat
mov
xor
xor
inc
jmp
sub
mov
xchg
das
cs
fwait
jae
mov
rorb
in
insl
jp
jl
dec
or
movsb
scas
push
ret
inc
sub
add
xor
push
int3
out
in
insb
insl
in
arpl
adc
cmp
aaa
cmpsl
add
push
das
mov
pop
or
sub
movsl
sti
sub
cmp
leave
rcrb
movsl
push
push
cmpsl
and
pop
inc
mov
pop
sub
outsl
lret
push
cmp
push
dec
imul
push
push
mov
mov
mov
test
jmp
in
mov
dec
xor
cmp
inc
push
arpl
dec
xchg
mov
sarb
popa
adc
jmp
int
ljmp
fwait
sub
dec
xchg
cmp
in
sub
mov
cmp
push
pop
jmp
jg
in
sub
sub
imul
sub
pop
push
mov
popf
mov
in
add
stos
pop
das
rolb
inc
pop
sub
jmp
inc
pop
addl
in
js
repz
rclb
inc
xchg
jns
bound
rorl
push
fisubrs
das
xchg
adcb
bound
scas
jno
and
jmp
mov
dec
adc
add
sub
add
cmp
sub
mov
addr16
mov
lret
push
jle
fimull
jmp
shrb
sub
stos
adc
adc
or
ljmp
into
aas
inc
dec
lahf
inc
cmp
aaa
dec
clc
cmpsl
stos
in
xor
movsw
sub
inc
add
xchg
sahf
cmp
in
sbb
addr16
fidivrs
cmp
dec
cwtl
mov
sti
popf
lock
subl
push
addr16
daa
imul
or
outsb
jnp
sub
mov
and
xor
insb
mov
lret
arpl
mov
pop
imulb
push
adc
cmp
out
add
pop
fisubl
sub
mov
in
ljmp
pop
xor
xor
mov
xchg
mov
mov
cmc
mov
dec
cmp
lds
jp
gs
testb
cmp
out
sub
jne
in
out
test
test
jbe
shlb
cmp
xor
jns
or
xor
xchg
stc
sub
popa
xchg
push
mov
inc
ror
lock
es
rorl
fs
outsl
je
das
repz
push
and
xor
test
mov
xor
pop
pop
pop
sahf
das
jb
data16
test
shll
mov
sahf
inc
in
arpl
push
cmp
or
xor
stos
in
hlt
pop
pop
and
pusha
ss
push
push
dec
ds
movsl
xchg
dec
stos
pop
pop
xor
xchg
mov
imul
in
add
lret
stos
pop
xor
fs
ljmpw
pop
lock
daa
filds
das
cmp
loope
les
rclb
xor
add
inc
push
pop
in
fistpl
xchg
ror
gs
stos
adc
dec
ljmp
inc
mov
xor
and
call
inc
aaa
mov
das
clc
sub
sub
cld
inc
cmp
pop
mov
dec
outsb
pop
lds
cli
and
sbb
inc
ljmp
inc
sub
ficomps
pop
test
add
loopne
popa
pop
mov
jmp
push
stc
or
scas
scas
mov
inc
enter
outsl
pop
stos
lcall
pop
lock
push
out
push
lods
cmp
call
and
subl
xor
inc
push
xor
inc
in
push
push
lahf
fcoml
mov
cmp
adc
ljmp
jbe
jne
fidivl
mov
xor
and
push
inc
cmp
cmp
sti
push
stc
mov
fwait
or
dec
daa
cmc
push
sub
enter
sub
dec
mov
sahf
jb
das
xchg
xor
sahf
xchg
icebp
insb
inc
cmp
mov
lds
mov
mov
mov
sbb
jne
sub
push
cmpsb
mov
outsb
inc
lds
pop
fldcw
xor
pop
mov
test
dec
ds
jp
loope
out
cmc
inc
sbb
stos
mov
ret
mov
sub
adc
push
cmp
sti
adc
cmp
xor
adc
adc
ficomps
pop
xor
hlt
insl
push
ljmp
out
mov
into
sbb
jmp
or
xchg
les
mov
stos
lahf
shll
subl
fsubs
cmp
lahf
push
pop
pop
jl
mov
dec
or
inc
andb
js,pn
jno
jmp
inc
inc
loope
scas
inc
das
push
or
in
pushf
out
aad
ds
into
imul
jo
dec
xlat
cs
les
inc
xchg
and
stos
in
sub
test
jmp
mov
sub
out
movsb
push
push
inc
aaa
fidivrs
aaa
cmp
push
in
test
dec
sarl
cmc
repz
fisubl
jbe
or
push
ljmp
or
xor
inc
and
inc
or
stos
mov
xor
imul
push
dec
int3
sahf
add
push
sub
cli
and
fisubrl
jne
out
roll
sub
dec
pushf
xchg
add
xor
sarl
pop
loope
bound
cli
push
gs
mov
push
imul
push
pop
or
lods
xchg
aam
sbb
das
add
sub
hlt
ret
inc
test
in
js
mov
dec
ret
ljmp
fs
popa
mov
cli
push
mov
bound
push
xor
sub
or
mov
sub
jg
push
xor
rclb
in
push
leave
or
jp
inc
xor
cmpsb
mov
dec
jae
pop
dec
or
inc
in
pop
ss
ljmp
dec
lds
jns
mov
xorl
mov
js
cmp
sahf
ret
sbb
call
xor
xor
xor
jle
filds
push
mov
arpl
jl
mov
icebp
pop
push
dec
inc
arpl
call
pop
inc
addr16
in
shr
cmp
sub
mov
dec
lcall
sub
lods
aaa
loop
insb
fimuls
sbb
pop
xchg
insl
jp
push
pop
jmp
daa
je
cmp
inc
mov
adc
jb
pusha
sub
and
xlat
sbb
mov
or
in
dec
icebp
cmc
pop
cs
movsb
mov
stos
pop
dec
shlb
arpl
je
sub
stc
pop
pop
dec
sti
cs
int3
push
jns
xor
roll
leave
xor
add
push
push
dec
gs
popa
bnd
sub
jecxz
jmp
pop
sub
imul
in
mov
testb
rcrb
shrl
xchg
pop
dec
fs
rcrl
mov
test
jne
sahf
jecxz
lods
pop
push
inc
loop
cli
pop
inc
hlt
adc
xchg
das
jb
dec
fwait
and
sahf
dec
mov
rclb
mov
jp
in
pop
cmp
add
sub
or
jmp
fdivrs
jmp
cmp
xor
mov
add
push
push
addl
pop
gs
in
out
out
in
cld
dec
cli
aad
push
cmovp
add
mov
inc
xchg
xor
sahf
xor
xor
sub
push
cmp
hlt
push
test
cld
lock
xor
movsb
pop
mov
and
flds
inc
adc
cs
xor
xor
xor
inc
sbb
xchg
in
push
subl
mov
xor
imul
inc
xor
mov
adcb
mov
jmp
bound
mov
pop
adc
adc
cs
dec
fadds
inc
jo
sub
cmpsl
mov
popf
push
shll
dec
gs
cmp
mov
mov
ljmp
gs
xor
shlb
inc
ds
push
cmp
out
adc
adc
lea
jnp
cmp
jecxz
in
sub
les
cmc
scas
cmp
clc
xor
jecxz
mov
or
cmp
cmp
dec
std
jnp
sub
xchg
cwtd
xor
push
das
pop
xor
mov
cmp
aaa
dec
popa
test
test
sub
mov
jp
dec
pop
jns
addr16
push
test
mov
and
rorb
aad
dec
xor
cmp
jae
push
test
inc
jbe
js
or
imul
enter
dec
or
shlb
adc
popa
mov
in
and
or
fnstsw
int3
sbb
push
pop
out
cmp
mov
aaa
movsl
xchg
ja
dec
pop
fsubl
dec
cmp
in
jns
inc
aad
pop
xor
cmp
out
or
jnp
dec
cmpsl
pop
pop
stos
inc
movsl
mov
bound
cmp
pop
in
mov
sbb
lods
pop
mov
inc
pop
lock
pop
push
push
data16
xchg
cmp
push
add
ss
icebp
xor
cmpsb
mov
cmp
les
jo
xchg
fiadds
aaa
pop
sub
push
fisubl
sbbb
mov
dec
in
fsubr
std
lahf
xor
inc
sub
adc
mov
in
sub
faddl
fisubrl
xchg
das
sub
sub
cmpsl
push
mov
cmp
insb
mov
dec
sarl
jmp
sbb
add
add
xor
lods
sbb
jb
gs
mov
insb
outsb
outsb
les
inc
mov
movsl
in
pop
mov
sub
fwait
push
and
rcrb
xchg
cmp
xor
and
jmp
cmpl
adc
ss
cld
popf
xor
jle
aam
mov
hlt
xor
pop
loope
stos
push
ja
aas
movsb
add
in
inc
pop
push
ljmp
lret
push
push
cmp
pop
inc
jbe
inc
cmp
sub
xor
sbb
sub
mov
addr16
in
mov
jmp
cmpsb
mov
jnp
shr
sub
inc
dec
arpl
test
inc
sbb
les
add
out
xor
cwtl
repnz
sti
stc
jl
aaa
push
gs
imul
stos
fcmovb
lock
mov
ljmp
inc
cmp
add
out
ljmp
xchg
adc
inc
pop
xor
cmpsl
sbb
mov
pop
inc
lock
mov
test
sub
lea
sub
loopne
jne
inc
pop
lret
aam
clc
push
inc
fstps
mov
pop
cmp
or
movsl
pop
out
pop
push
scas
push
orl
cmp
or
mov
jmp
into
mov
dec
jmp
xchg
cmc
arpl
sub
js
mov
jmp
fwait
cmp
mov
xchg
aam
sub
sbb
xorb
test
cwtl
jno
adc
sarb
dec
jb
cmp
jb
push
mov
adc
out
arpl
dec
jae
sar
adc
imul
sub
xchg
sahf
sbb
sub
cs
bound
pop
and
xor
jg
mov
clc
addr16
cmpsl
cs
jmp
sub
stc
push
jge
xor
lahf
or
pop
test
scas
mov
sahf
xchg
or
lock
inc
inc
shrb
out
popa
aaa
sbb
sub
add
add
out
daa
imul
inc
aas
xchg
dec
in
add
push
push
xor
das
jp
sub
mov
lods
cmp
push
ret
pop
lahf
cld
jns
insl
sub
xor
outsl
adc
adc
insl
xor
shlb
stos
mov
and
shll
repz
inc
test
mov
sub
ja
xor
and
cmp
dec
adc
clc
inc
sub
cmpsw
pop
xor
mov
ss
push
cmp
hlt
inc
xchg
adc
mov
push
jno
fidivrl
push
sub
dec
mov
sub
mov
shrb
enter
jle
mov
das
jl
push
adc
lds
inc
push
xchg
sbb
cmc
ljmp
push
and
lods
jl
cmp
sbbb
int
inc
mov
test
mov
divb
cld
push
ljmp
pop
rorb
xchg
add
outsl
jge
out
and
call
int3
outsl
push
mov
xor
imul
movsb
mov
aas
inc
inc
ljmp
lahf
insl
pop
push
xchg
pushf
jne
jp
pop
or
pusha
push
ja
in
adc
test
icebp
sub
in
or
jae
lcall
shrb
dec
xchg
outsb
cwtl
dec
adc
imul
icebp
or
mov
popa
adc
test
int3
cs
fldt
test
cmp
xor
sar
imul
mov
jle
push
imul
push
and
stc
inc
or
fldenv
mov
ficomps
popa
add
sub
ret
aaa
sub
sti
sarb
mov
movsb
pop
xor
cmp
dec
in
out
and
push
sbb
add
dec
loopne
jbe
dec
cmpsl
sub
jmp
and
imul
cmp
pop
ljmp
cs
inc
add
dec
dec
cmp
pop
cs
xor
cmp
cmpb
fwait
out
shll
inc
xchg
pushf
mov
xor
sub
repnz
enter
sbb
inc
dec
shrl
dec
xor
sahf
sbb
sub
push
cmp
jecxz
mov
cs
push
rclb
jns
cmpsl
inc
movsb
cmp
jb
push
shrb
xor
pop
fistpll
or
cmp
stos
sbb
fs
or
push
inc
xor
xor
or
dec
pop
push
sub
add
movsb
jnp
push
and
ficomps
or
sbb
imull
cmp
sub
cmpsl
ret
hlt
inc
imul
pop
push
adc
add
xor
imul
push
dec
adc
mov
cmpsb
mov
scas
xor
ficompl
stc
fwait
mov
lods
dec
dec
mov
hlt
out
in
lock
pop
pop
bound
outsl
loop
dec
js
gs
test
and
push
fcmovb
loope
lock
cmp
enter
push
or
loopne
and
ss
inc
or
mov
cmpl
addr16
jg
andb
rorl
add
clc
mov
int3
ljmp
out
cmp
ds
pop
push
jg
sahf
pop
inc
jge
cmp
or
lods
mov
popf
rorb
jnp
sub
stos
mov
lods
push
pop
mov
pop
push
jnp
jp
mov
push
push
cmp
adc
xchg
inc
inc
imul
xor
shr
sub
cmp
test
jnp
mov
mov
dec
lods
and
cmp
jmp
std
sub
sub
mov
or
bound
adc
xchg
sbb
pusha
jb
inc
imul
push
and
jg
sub
or
fnstenv
lea
fwait
and
dec
ret
in
push
cmp
mov
in
pop
mov
push
inc
inc
xor
inc
or
pushf
je
xor
dec
sbb
stos
bnd
sub
push
fidivrl
xchg
mov
pop
outsb
push
hlt
sbb
bnd
xor
adc
psubw
jae
mov
mov
inc
cmp
std
push
pushf
xlat
insl
xor
sbb
xlat
mov
sub
std
jns
insb
jge
ljmp
popl
pop
sub
inc
ret
pop
icebp
and
sub
xor
lret
out
std
int3
pop
push
ja
sub
int3
push
push
pusha
add
adc
insl
sahf
inc
inc
movaps
test
dec
lock
push
mov
cmp
adc
xor
inc
sub
add
mov
push
inc
dec
dec
xor
inc
addr16
shrb
sub
fisubrs
adc
sbb
mov
stos
fwait
pop
push
cmp
pop
sub
inc
into
sti
les
mov
test
xchg
add
scas
pop
jb
adc
fldenv
xor
jg
out
les
push
cs
mov
popf
pop
test
mov
pop
dec
sahf
loopne
mov
movsl
mov
push
mov
lods
mov
bound
scas
icebp
inc
cmp
pop
pop
mov
jp
repz
mov
mov
lret
dec
xchg
cs
sarl
push
sub
xchg
hlt
les
jae
or
addr16
out
add
xor
sbb
inc
pop
scas
dec
push
lods
adcb
adc
cmc
dec
cmp
and
rol
lods
push
leave
mov
adcb
movsb
cmpsl
dec
roll
sbb
xlat
out
hlt
or
push
pop
push
imul
out
in
cmp
mov
mov
add
ljmp
mov
mov
xlat
cli
pop
mov
mov
or
jmp
pusha
imul
gs
jmp
jl
sbb
xchg
or
push
push
jmp
pop
jno
dec
fwait
sub
ds
dec
cmp
add
rcll
dec
or
xchg
jl
cmp
lock
sub
push
jmp
cmp
movsb
daa
ss
icebp
adc
dec
pop
and
mov
push
jo
dec
sub
mov
aam
cs
inc
push
inc
dec
and
add
inc
repz
ret
dec
das
test
shlb
and
js
pop
stos
adc
into
xchg
mov
imulb
jg
or
add
or
push
aam
fldt
dec
imul
enter
xor
mov
ds
cltd
orb
cmp
xor
hlt
sbb
stos
dec
imul
inc
gs
jecxz
arpl
jmp
pop
sub
shlb
popa
sbb
push
pop
cmp
sub
test
jg
sub
imul
js
iret
mov
dec
push
aas
xlat
push
xchg
cmp
and
push
xor
test
stos
cmpsl
fistpll
lcall
jp
add
cmc
shrb
imul
stc
cmp
sbbl
xchg
lret
xchg
dec
adc
cmpsl
jle
cli
dec
inc
cltd
dec
outsb
aas
sub
xorl
in
insl
insb
sbb
dec
xor
xchg
mov
leave
divb
jp
lods
pop
xchg
lds
imul
stc
push
inc
push
dec
push
repnz
mov
dec
xchg
cs
sub
sub
mov
sbb
sub
add
sub
and
pop
cmp
clc
xor
xor
mov
cmp
dec
into
xchg
sarl
xchg
mov
sub
mov
das
inc
dec
popf
pop
add
cmp
sub
xor
dec
inc
push
ljmp
cli
dec
pxor
pop
ds
clc
mov
push
xchg
mov
scas
mov
mov
scas
inc
cmp
jg
stc
dec
or
and
popa
ljmp
arpl
mov
mov
cmp
mov
mov
fisubrs
pop
xchg
xor
aad
add
outsl
shrl
jp
push
cmp
ss
stos
imul
outsb
aaa
aaa
mov
rorl
test
push
in
fbstp
sahf
loopne
popa
test
in
xor
sub
and
cmp
clc
lret
jbe
rcrb
fadds
xchg
adc
pop
mov
xchg
pusha
imul
pop
xlat
dec
pop
mov
push
lret
cmp
sbb
stos
in
inc
fimull
or
inc
mov
mov
out
jge
xchg
lahf
sbb
in
xlat
mov
pop
dec
idivb
out
sahf
pop
pop
stc
sbb
pop
xchg
xor
out
jecxz
pop
cmp
sbb
or
mov
push
jbe
xor
pop
pop
fwait
xor
in
ret
imul
jae
mov
add
push
push
jp
fs
fdivrl
repnz
dec
out
mov
cltd
cmp
icebp
xchg
sub
ja
push
sbb
inc
or
adc
lods
ss
movsb
jne
negb
mov
lcall
xlat
sbb
jo
faddp
sub
out
xor
lds
xlat
or
dec
xor
mov
push
pop
xchg
ret
lds
sub
jb
jmp
cmp
add
sahf
pop
mov
push
push
push
int
cmp
jle
cmp
xor
in
aaa
sub
sub
cs
insl
out
lcall
repz
into
inc
lods
xchg
sub
imul
cwtl
bound
cmp
in
adc
pop
cmp
cmp
outsb
inc
divl
dec
inc
dec
sub
sub
dec
jl
outsl
aaa
inc
push
pop
stc
push
jp
push
lret
mov
subl
ja
add
or
cmc
aam
sub
inc
push
ret
pusha
loope
jno
and
xchg
mov
xor
bound
lods
or
in
fnstenv
pop
ds
inc
mov
push
dec
mov
shll
adc
cmp
hlt
push
pop
jae
out
push
bound
dec
lahf
dec
cs
shrb
jle
jns
cmc
mov
dec
icebp
jmp
dec
dec
hlt
cmp
idiv
pop
js
sub
dec
mov
sub
fs
push
clc
jp
sub
lds
xor
and
add
push
jo
popa
cmpsb
add
mov
loop
lock
xor
pop
adc
mov
inc
mov
xchg
rolb
testl
shll
test
lods
cmp
arpl
lods
or
in
insl
cmp
cld
lahf
sub
cli
stos
stos
dec
push
push
xlat
jne
xor
cmp
push
sar
push
sub
stc
bound
add
sub
imul
jp
push
mov
je
push
cmp
mov
imulb
mov
mov
dec
lock
cmp
push
dec
dec
xchg
scas
insl
arpl
pusha
mov
xlat
push
sahf
cmp
cmp
cmpsb
mov
in
dec
scas
scas
pop
ds
jecxz
cmc
cmp
or
ljmp
cli
dec
inc
movsl
cmp
pushf
adc
hlt
add
pusha
stc
in
aaa
cmpsl
sub
hlt
mov
xor
cwtl
push
inc
push
mov
xor
xor
mov
xor
inc
pusha
pop
dec
xor
cmpsl
jne
add
adc
popaw
push
imull
lods
inc
sub
movsb
xchg
push
add
push
push
sahf
sub
sub
scas
std
stos
dec
push
ljmp
dec
jns
popa
xchg
mov
inc
or
pushf
stos
jno
ljmp
pop
push
sahf
jmp
icebp
push
inc
pop
jp
loop
cmp
inc
daa
into
xlat
mov
sub
cmp
adcb
mov
stos
mov
in
repnz
dec
push
movsl
sbb
in
jmp
pop
cmpsl
xlat
das
xor
cmp
or
cmp
sbb
push
cmp
into
or
scas
mov
bound
imul
pop
jae
lcall
pop
das
pop
mov
jne
pop
cmc
add
push
push
push
jo
inc
and
pop
or
fildll
in
add
mov
xor
mov
xor
xorb
jp
aaa
push
jae
jp
bound
jmp
fidivs
dec
push
cmpl
cmp
test
int
mov
xchg
jns
add
dec
and
push
or
push
inc
sub
pop
rorl
icebp
xchg
hlt
xor
push
in
jle
les
pop
inc
scas
jecxz
mov
inc
mov
jbe
pop
or
and
scas
mov
fnstsw
test
push
das
lods
xchg
in
sti
dec
sarl
dec
dec
inc
cmpsb
insb
inc
xlat
mov
and
bound
push
nop
cli
push
les
shrl
push
inc
or
insl
push
rcll
imul
push
int
daa
pop
shll
cmpsb
adc
mov
dec
cmpsb
dec
addb
jb
movsb
cmp
inc
ljmp
ljmp
lods
cmc
inc
cmp
les
outsb
in
stc
dec
test
std
dec
iret
das
pop
imul
add
cli
xor
pop
xlat
clc
cmp
jle
into
cmp
test
movsl
mov
mov
mov
xor
adc
fistpll
dec
sbb
or
imul
pop
cmp
inc
xor
data16
xchg
jo
pop
cmp
inc
dec
jae
jp
inc
sahf
dec
xor
pop
xor
adc
pop
mov
cmc
jne
cmp
outsb
jge
fdivrs
mov
adc
xchg
xlat
cmp
sub
cmp
dec
pop
in
pop
cmpsb
repz
mov
dec
cli
mov
xor
into
xor
add
out
cmp
jge
cs
cltd
out
mov
push
ds
ljmp
sub
push
add
ds
jmp
mov
xchg
in
jb
push
pop
popf
xor
fsubrs
std
ja
cmp
lahf
cmp
or
cmp
add
xlat
pop
arpl
cmpsb
imul
lock
lods
fs
push
inc
sub
cmp
xchg
inc
pop
push
dec
int3
sbb
arpl
xor
leave
lea
dec
push
xor
int
add
cmp
aad
je
cmp
movsb
fwait
pop
add
fimuls
jae
je
cmp
stos
mov
ljmp
fstpt
inc
cli
adc
inc
sub
adc
sub
xor
cmp
subb
xor
inc
cmp
mov
lock
pop
inc
cld
xchg
out
pop
pop
or
cmp
inc
push
sub
pop
into
inc
hlt
out
push
cli
dec
xlat
std
scas
push
sub
jg
cs
push
push
cmpsl
mov
scas
das
and
mov
movsb
mov
cmc
mov
aam
sbb
cmpsl
fsubrl
sub
mov
test
mov
xchg
push
mov
test
or
mov
cmp
xor
cmc
sub
ljmp
pop
push
in
adc
loope
ljmp
fistpll
cld
loopne
push
dec
xor
popf
pop
adc
mov
imul
jmp
jge
ljmp
adc
sub
loop
mov
insl
std
sbbl
jnp
fidivrs
jmp
push
xchg
js
pop
leave
inc
in
outsl
mov
push
stc
cmp
sbb
push
or
jg
push
lock
xchg
xor
dec
sub
mov
inc
imul
jo
cld
sub
cmpsl
pop
jmp
push
imul
fimull
clc
sub
shrl
mov
pop
or
rclb
mulb
repz
mov
and
mov
fs
cli
fstpt
push
jmp
scas
cmp
xor
cmpsl
mov
pop
into
das
daa
notb
outsl
and
ss
popa
inc
jle
out
lods
mov
inc
push
mov
sub
pushl
sbb
loopne
push
dec
or
std
outsl
cmp
push
test
mov
xor
push
sbb
add
jle
test
or
mov
dec
scas
xchg
mov
inc
loop
cmp
adc
aas
sub
xor
orb
sbb
cmp
test
xor
sti
imul
adc
xchg
dec
mov
mov
mov
data16
dec
stos
and
sub
cmp
adc
push
test
inc
mov
hlt
jo
clc
or
jmp
lods
imul
xor
stc
or
jae
xor
lret
mov
in
inc
xor
aad
push
mov
pop
add
cli
pop
inc
clc
sub
push
pushf
stc
sbbb
xchg
sub
inc
sub
cmp
aad
xor
jns
push
fidivrs
inc
pusha
xchg
jo
xor
inc
ja
popa
in
push
push
dec
or
lahf
cld
inc
bound
xchg
sbb
pop
pop
shrb
lock
dec
xor
outsb
imul
push
sub
mov
add
xor
stos
push
das
push
dec
mov
and
and
aas
ljmp
mov
dec
pop
aad
sbb
sub
pop
in
sub
jmp
sub
bound
pop
jle
pop
mov
dec
in
mov
fwait
ljmp
lcall
pop
sub
fs
loope
and
mov
mov
sub
aam
icebp
push
jmp
pop
idiv
jnp
inc
nop
mov
scas
leave
dec
lea
cs
repnz
sahf
lods
mov
dec
xor
push
cmp
imul
pop
push
int3
mov
push
push
das
mov
lods
adc
jbe
popl
inc
xor
shrl
pop
sub
push
aaa
stos
shll
sub
in
adc
leave
subb
inc
cmp
test
jnp
scas
pop
pop
les
pop
mov
outsl
dec
add
pop
push
jmp
in
pop
sarl
adcl
cmpsl
cld
inc
arpl
inc
mov
mov
and
mov
cmp
push
or
push
aaa
push
adc
cmpsl
cs
cmp
rolb
dec
repnz
lods
pop
cmp
aaa
test
mov
or
inc
sub
orb
xchg
xor
inc
push
mov
pop
xchg
loopne
pop
pop
and
pop
push
lret
mov
xchg
hlt
idivl
sbb
out
outsb
dec
inc
call
movsl
pop
imul
cli
jp
push
add
push
xchg
movsb
inc
cmp
xchg
imul
mov
inc
mov
push
sbb
add
stc
aam
mov
test
lret
enter
lods
arpl
std
stc
push
or
icebp
out
push
dec
xor
cmp
lods
mov
dec
jecxz
das
push
push
int3
push
pop
es
sahf
insb
in
mov
sub
add
jb
cmp
daa
cvtps2pd
das
test
or
xor
or
rclb
jmp
jnp
arpl
mov
mov
push
cmp
and
dec
jns
adc
scas
pop
bound
jge
cmp
test
pop
adc
stos
es
clc
in
push
pop
inc
int3
mov
dec
inc
dec
dec
mov
inc
pop
hlt
ss
xchg
mov
push
popa
imul
and
push
decb
mov
in
mov
mov
ret
mov
push
test
dec
out
sbb
mov
ret
mov
mov
pop
std
clc
or
fistpll
gs
inc
data16
pop
pmaddwd
inc
test
push
fadds
mull
jne
xor
pop
sub
cmp
dec
jns
mov
and
xor
mov
adc
jns
imulb
jmp
iret
push
mov
inc
pushf
in
pop
dec
push
push
mov
pusha
dec
cmp
sub
orb
mov
out
icebp
sub
mov
xor
and
cmpsl
push
pop
mov
xor
push
cmpsb
daa
clc
cli
or
dec
and
jo
cmp
ds
fwait
mov
and
dec
into
mov
jbe
pop
movsl
arpl
mov
movq
data16
cmp
pop
stc
sbb
aaa
mov
or
push
fldt
stc
popa
xchg
aas
sub
and
lods
mov
push
inc
jg
cmp
enter
push
test
cs
cmpsl
pop
mov
aam
shrl
push
dec
ljmp
mov
in
push
dec
dec
and
fwait
push
adc
jno
xor
cli
arpl
clc
fiadds
inc
jl
push
repnz
inc
shrl
insb
lea
int3
pop
xchg
repz
cmp
xor
push
xor
movl
pop
sub
outsb
inc
ds
mov
mov
pop
popa
inc
sub
int
jnp
scas
ja
in
mov
dec
jmp
sub
push
sub
test
xlat
xor
int3
dec
das
lea
mov
inc
movsb
inc
xchg
mov
sub
stos
pop
dec
mov
popf
sahf
inc
xlat
cmp
jmp
push
aaa
ljmp
out
in
pop
dec
ljmp
mov
daa
xchg
jns
push
cmp
imul
mov
inc
and
cmp
je
pop
mov
les
inc
mov
pop
dec
fildll
add
cs
mov
cltd
and
bound
orb
shll
mov
mov
rcr
jl
out
inc
shll
push
cs
jns
outsl
dec
loop
cmc
jmp
jle
sub
xchg
cmp
cmp
pop
mov
push
pop
pop
xor
sarb
push
xor
sarb
sub
xchg
xchg
push
pop
dec
jp
push
bound
rclb
or
mov
jns,pt
inc
cmp
insb
mov
daa
gs
sbb
lds
cmp
aad
test
push
stos
pop
dec
jecxz
and
inc
shrl
push
xor
popa
and
push
mov
pop
cmp
popf
cmp
push
stos
inc
ficompl
cmp
movsb
ja
push
pop
das
popa
dec
dec
test
lds
mov
stos
inc
cwtl
pusha
lret
push
pop
adc
in
add
lcall
dec
dec
push
nop
jg
in
jno
dec
cmp
aad
aaa
dec
jne
pop
scas
and
push
pop
lods
mov
mov
iret
ljmp
mov
xor
cmp
sub
jae
repz
inc
sub
xor
cld
jb
sub
cmc
push
ljmp
pop
fbstp
sub
jle
xor
xor
into
xchg
faddl
ja
push
cmp
xchg
das
adc
in
cli
stos
aas
gs
cs
and
cmp
fwait
test
add
xor
mov
mov
outsb
lea
in
bound
pop
push
pop
push
sub
pop
outsl
xlat
dec
in
inc
into
sub
mov
mov
dec
cmp
jge
xor
add
pop
test
push
push
mov
dec
sub
sub
int
jb
push
sub
fbld
mov
jmp
mov
push
pop
sub
dec
test
xor
adc
cmpsl
xor
push
lods
xor
stos
outsb
pop
pop
jge
or
inc
push
pop
sbb
cmp
aad
pop
leave
xchg
add
shlb
or
call
or
movsl
xchg
stc
insl
imul
xorl
cs
xchg
cs
xor
in
repnz
sbb
fiaddl
sahf
push
cmp
push
dec
shrb
push
cmp
sarb
dec
nop
outsb
cmp
cmp
pop
pop
pop
scas
mov
inc
cmp
imul
stc
rorb
lds
dec
aaa
movsb
aas
pop
or
dec
jae
dec
push
test
add
or
js
fidivrs
in
and
les
pop
insb
push
inc
pop
dec
rcr
adc
stc
xor
mov
nop
ja
je
xor
push
cmp
cmp
mov
cmp
je
sub
cmp
scas
or
pop
mov
pop
cmp
lahf
dec
orl
sbb
sub
xor
jp
xor
arpl
idiv
test
subl
sarl
dec
fldenv
push
and
ja
push
cmp
xchg
jmp
or
fisubl
xlat
pop
inc
gs
mov
push
sub
aam
dec
push
cmp
sub
push
cmpsl
cmp
jns
scas
iret
cmp
push
sub
pusha
cmp
xchg
mov
sub
or
imul
ss
add
pop
mov
dec
inc
shll
pop
in
jp
inc
push
daa
xlat
popf
mov
ds
pop
fistpl
out
imul
sub
scas
sub
or
push
push
inc
testb
ljmp
scas
xor
pop
and
outsb
popa
ljmp
push
push
mov
xor
aam
sar
inc
or
dec
ss
mov
push
xchg
inc
cmp
std
sub
or
mov
std
sub
lods
push
xor
int
movsb
hlt
mov
bound
rcrl
pop
mov
inc
jp
add
aam
idiv
jbe
adc
popf
mov
cmp
xchg
push
xor
cs
adcl
ffreep
cmp
ljmp
xchg
dec
aaa
pop
or
lods
pop
pop
sub
ljmp
fwait
jge
test
shrl
jge
push
cltd
or
push
xor
push
inc
push
popf
fldt
mov
mov
test
dec
outsb
pop
cmc
movsl
sbb
add
sti
push
in
or
xchg
or
outsl
cmc
mov
xor
ret
xchg
cmp
aad
rcr
icebp
jle
dec
dec
cmp
mov
shrl
lcall
shr
inc
push
pop
in
sti
mov
icebp
dec
lds
pop
cmp
xlat
cmp
xor
pop
popf
push
cs
aas
in
jge
pop
dec
cmp
dec
inc
xlat
scas
pop
xchg
lods
daa
aas
ds
repz
sti
pop
cmp
inc
push
fimull
mov
out
lds
outsb
adc
cmpl
mov
out
and
lock
jne
out
jnp
fiadds
xchg
inc
sub
ljmp
fdivrl
les
pop
outsb
xchg
cmp
mov
out
fwait
out
sub
cs
fiadds
sti
je
aas
loop
sahf
adc
lahf
imul
mov
xor
dec
gs
jno
ljmp
mov
cmp
jl,pn
repnz
out
mov
fistl
sbb
out
ficompl
fs
out
push
fiaddl
mov
sub
cmp
in
pop
pop
pop
push
cmp
xchg
cmp
sarl
pop
sub
xchg
jae
inc
ljmp
push
inc
and
add
jmp
mov
sub
lock
pop
mov
fiaddl
mov
jns
hlt
cmp
push
sub
mov
jnp
pop
dec
cld
repnz
or
lods
movsl
adc
aaa
dec
pop
cmp
cmpsb
jbe
push
ja
sub
popa
push
dec
pop
bound
inc
repnz
ficoms
cmpsl
adc
repz
adc
arpl
jns
icebp
stc
cmp
adc
or
and
testb
jno
jp
ds
sarb
aad
adc
rolb
xor
test
das
add
ret
push
sub
adc
ds
shlb
jns
pop
jp
popa
dec
sub
movsl
std
xor
xchg
inc
call
mov
sub
xlat
outsl
stos
sbb
jle
dec
inc
test
sub
inc
fs
jecxz
jbe
dec
in
sahf
cwtl
outsl
jb
ds
add
aaa
cmpsb
or
pop
inc
aam
repz
xor
stc
popf
lods
ds
jmp
outsl
jl
push
pop
fimuls
mov
dec
mov
xor
pop
aaa
pop
jae
and
cmpsl
xor
inc
lahf
jb
inc
pop
ss
xchg
xor
push
push
fsubrl
jp
inc
xchg
ljmp
lcall
and
mov
jp
cmp
ljmp
decb
fidivl
lock
std
mov
sub
imul
cmp
push
bound
leave
jle
cmp
jne
mov
bsr
xor
outsl
lds
sub
popa
loop
cmpb
dec
xor
jl
jle
xor
clc
jle
xor
lds
sarl
pop
or
pop
mov
xor
clc
cmc
fdivrp
jmp
cmp
sbb
inc
and
xchg
push
push
in
adc
test
cwtl
rcr
mov
inc
cmp
xchg
out
xchg
push
jno
ljmp
lcall
dec
jbe
in
cmc
in
pop
push
xor
and
xor
or
mov
jnp
inc
sbb
jbe
ja
inc
pop
inc
mov
fs
mov
sbbb
and
jb
xor
push
pop
dec
ljmp
push
inc
push
jno
scas
pop
xor
hlt
mov
pop
adc
lods
scas
sub
jo
xor
or
sub
je
push
addl
fsubr
test
pop
mov
cmpsl
outsl
rcrb
mov
xchg
aaa
mov
sbb
test
jge
sbb
xchg
ret
nop
cmp
push
mov
cmp
les
pop
cld
inc
sbb
test
cmp
addr16
pop
ljmp
jb
push
movsb
sahf
je
lock
mov
adc
push
mov
imul
stos
push
dec
add
push
ret
bound
lret
cld
sub
xchg
out
dec
repz
pop
mov
cmpsl
xchg
ss
mov
dec
aas
or
outsw
movsl
sub
inc
sub
mov
sar
jl
in
jno
pop
sahf
pcmpeqb
call
cmp
dec
mov
in
insl
fwait
pop
push
push
xchg
sub
mov
xor
in
in
shlb
into
in
push
bound
ljmp
pop
push
enter
push
outsl
cmp
pop
and
mov
cmp
stos
test
cmp
mov
insb
call
xchg
mov
lret
and
std
int
jmp
push
cmp
daa
imul
test
xchg
mov
std
or
pushf
in
mov
xor
jnp
dec
cmp
jp
mov
cmc
xor
cmp
adc
add
repz
pop
imul
xchg
sub
dec
cs
fidivl
mov
mov
push
push
adc
andb
cs
stc
das
sbb
mov
xor
inc
jmp
mov
les
cmc
inc
xor
push
sub
in
out
das
dec
mov
mov
fsub
add
pop
sub
in
xchg
pop
lods
push
push
adc
jp
cmp
sub
dec
aas
xor
sbb
aaa
fildl
dec
xchg
mov
cmp
outsl
ss
jp
fwait
icebp
sub
sub
pop
jmp
pop
test
sub
jle
fisubrs
outsl
cmp
push
push
cs
xor
ss
push
jecxz
in
xor
xor
fsubrl
add
mov
inc
dec
inc
inc
lods
or
xchg
sub
cmp
sub
test
jne
dec
test
mov
xchg
stos
mov
andl
xor
dec
sub
cmpsl
inc
ror
pop
push
data16
sbb
mov
insl
fidivrs
mov
in
mov
aas
pop
sub
xor
sbb
adc
dec
pop
add
jbe
pop
imul
cmp
in
repz
js
lret
mov
xchg
sub
dec
xchg
dec
cmpsl
and
or
xor
stos
daa
jns
xchg
cmc
push
aas
sub
xor
outsl
icebp
sub
fsub
dec
push
imul
jle
inc
sub
or
aas
cmp
adc
add
jae
xor
out
imulb
insb
in
and
outsb
adc
test
adc
cld
jae
mov
dec
pop
imul
scas
pop
xor
pop
pop
inc
fwait
pop
dec
jge
lret
pop
cmp
mov
shl
push
popa
xor
stos
sbb
push
dec
outsb
cwtl
dec
adc
jp
sub
lods
loopne
stos
xchg
loope
out
arpl
pop
in
push
clc
adc
icebp
or
fistps
sbb
mov
pop
or
jno
test
dec
inc
mov
cmp
jl
add
push
push
xchg
jnp
gs
sub
jbe
arpl
lcall
xchg
pusha
pop
xchg
js
pop
lds
bnd
lret
mov
ljmp
fwait
mov
out
idivb
icebp
jge
pop
cmp
jge
out
out
dec
fwait
lods
mov
pop
pop
movsl
push
xor
cmp
imul
test
lahf
gs
loope
mov
inc
or
jbe
push
ds
ljmp
push
fs
addr16
imul
imul
xchg
mov
dec
sub
sub
sbb
inc
pop
inc
ss
push
pop
sub
cmc
pop
mov
pop
sub
lods
cmp
iret
and
in
push
xor
gs
icebp
lods
dec
cmp
sbb
insl
push
xor
subb
adc
pop
sbb
in
pop
mov
sub
subb
inc
xlat
jne
bound
jg
inc
in
shlb
rcrl
ljmp
adc
jp
xor
push
mov
pop
push
cs
xchg
or
fimull
sahf
sti
and
das
add
push
or
out
mov
push
cmp
xchg
xchg
mov
cmpsb
or
pop
adc
xor
jbe
add
mov
int
jno
jmp
cmp
inc
push
inc
test
sahf
xor
das
add
cmpsb
sbb
lods
inc
ljmp
insl
mov
lods
jmp
pop
xor
sub
and
add
push
andl
push
pop
pop
sub
jecxz
adc
pusha
ds
pop
shr
lea
cmpb
cmp
sub
inc
or
loope
stc
fidivrl
cmpsl
outsl
das
cmp
jmp
add
cmp
mov
cmc
adc
sub
cmp
insl
sub
adc
sarl
sbb
xor
int
lock
pop
xor
mov
jp
dec
dec
push
fwait
sub
jbe
xorb
cmp
jmp
leave
jmp
ret
cmp
pop
inc
bound
xchg
mov
mov
test
call
jae
rcll
scas
shrl
jne
push
icebp
das
scas
lcall
bound
push
leave
push
sub
jnp
inc
pop
or
cmp
push
xor
test
mov
sbb
pop
das
pop
lret
jmp
mov
dec
outsl
mov
pusha
cmpsb
push
xchg
push
pop
out
sub
mov
add
mov
push
mul
mov
and
add
jb
push
xchg
mov
xor
add
and
rcrl
hlt
cli
mov
or
cmpsl
imull
inc
loop
xor
cmp
sub
stc
xchg
jp
gs
cmp
jae
inc
xor
inc
sub
inc
mov
rol
jle
je
dec
pop
inc
push
inc
imul
inc
sub
sahf
imul
loop
test
adc
push
cmp
int
loopne
mov
push
aaa
lret
inc
aas
inc
cmp
jne
je
pop
sub
add
mov
inc
jge
ficoml
mov
sbb
enter
dec
std
mov
stos
icebp
data16
icebp
imul
or
jmp
or
xchg
ret
sbb
jnp
dec
jae
xor
mov
test
bound
dec
dec
in
jge
push
cmp
and
sub
aam
add
lock
sub
mov
dec
and
fldl
push
push
xchg
lret
out
aas
call
add
cmp
mov
lods
pusha
or
jne
dec
pop
inc
mov
shll
xchg
sub
insl
xchg
test
fs
fists
lods
inc
cmp
dec
pop
jmp
cmpxchg
scas
pop
pop
insb
xchg
xor
bound
pushf
sub
pop
xlat
mov
ja
inc
inc
inc
sbb
pop
sub
pop
mov
leave
jae
dec
mov
fdivrl
ss
test
inc
call
lods
xor
clc
adc
sub
push
pop
int
insl
mov
out
push
dec
or
mov
dec
bound
push
cmp
popf
stos
push
dec
scas
jnp
mov
and
lods
dec
inc
sub
shll
inc
push
cmp
adc
mov
jb
sbb
xor
inc
mov
lret
sbb
mov
pop
imul
jno
inc
dec
pop
and
dec
lret
jmp
sti
jmp
cmp
movzbl
fbld
inc
add
or
jae
push
xor
arpl
jecxz
ss
sub
shlb
pop
add
or
sub
push
lods
bound
inc
cmp
icebp
cmpl
mov
dec
jmp
adc
xor
add
jne
dec
out
xor
push
and
cmp
arpl
mov
inc
cmp
inc
fs
mov
dec
adc
mov
movsb
mov
into
ljmp
push
jno
xchg
mov
in
jmp
inc
jmp
imul
cmp
xor
or
bound
lret
pushf
test
jb
ds
cmp
pusha
fistpl
mov
add
dec
mov
xchg
bound
aas
pop
sahf
cmpb
lods
mov
inc
inc
imul
add
add
pop
popa
js
call
push
rdpmc
pop
jp
cmp
je
sub
jg
bound
pop
jb
xor
cmpsl
cmpsl
jmp
xchg
ss
inc
dec
mov
arpl
sub
sub
inc
dec
or
nop
das
popf
mov
mov
imul
sti
sbb
pop
dec
pop
pushf
mov
mov
and
out
mov
pop
pop
movsb
jb
movsb
out
xor
subb
sbb
jecxz
and
pusha
loope
ljmp
push
cmp
inc
pusha
xchg
push
in
jns
push
pop
sbbl
dec
aaa
jge
ljmp
fisubrs
inc
mov
test
push
enter
jge
jg
dec
xchg
data16
cmp
das
push
and
loop
cmp
xchg
addr16
mov
sub
jp
xor
call
jmp
lock
mov
jnp
bound
enter
jbe
pop
pop
out
repnz
push
inc
aas
mov
mov
sub
pusha
inc
cmp
cwtl
call
cld
das
leave
cmc
xchg
leave
sbb
mov
or
outsb
push
dec
les
dec
sub
divl
arpl
sbb
push
mov
call
pop
sti
bound
mov
mov
push
inc
xor
incb
sub
inc
test
into
out
js
divb
sub
imul
mov
inc
cld
iret
pop
xor
lret
inc
cmp
adc
xor
jne
jp
xchg
jle
fs
ds
aam
push
push
scas
sbb
sub
sub
sub
fisubl
xchg
aam
adc
pop
mov
mov
cmp
scas
pop
push
xchg
mov
js
push
push
inc
clc
add
je
cmp
mov
push
test
into
hlt
cmp
dec
fsubr
and
out
std
fs
fldln2
in
or
jg
xor
bnd
pop
call
bound
cmp
xor
inc
sub
cmc
push
pop
inc
xchg
test
add
imul
jp
add
push
imul
push
push
movsb
je
imul
inc
sbb
push
lods
push
cmpsb
and
xchg
push
fistpl
mov
jmp
xchg
jae
sub
xor
aaa
outsl
js
mov
hlt
sarb
pop
ss
std
sub
scas
sub
inc
ds
scas
bound
dec
stos
in
mov
lods
cmp
cmp
sub
insb
push
pop
mov
add
push
push
cmp
stos
jns
hlt
inc
sub
dec
jge
jl
bound
mov
sahf
pop
je
in
push
dec
insb
imul
stos
mov
sub
add
pop
xor
std
mov
cmp
or
xchg
sbb
cmc
xor
sub
lods
xlat
insl
jle
dec
pop
cmpsl
xchg
dec
int
mov
or
cmp
inc
mov
ja
in
lock
pop
inc
movsl
cs
loop
cmpsb
jo
sbb
inc
mov
mov
pusha
cmpsl
inc
jmp
xor
jmp
inc
sub
adc
xor
jo
out
sub
sti
bound
lahf
sbb
filds
or
fcmovnb
pop
stc
add
dec
inc
inc
xor
mov
push
xchg
add
pop
push
cmpsb
and
inc
cs
imul
addr16
jae
cs
inc
ss
mov
stc
sbb
lods
stos
xor
or
pop
jbe
sub
lods
mov
fldl
xchg
das
xor
sub
xor
jle
ss
dec
mov
mov
jl
push
pop
int
mov
sbb
ljmp
lret
cmp
data16
pop
cmpsl
sub
jns
mov
pop
scas
adc
cwtl
mov
fwait
sub
cmp
pop
das
sbb
loop
add
jp
cmp
scas
dec
xor
pop
mov
fldcw
pusha
mov
xor
pop
pushl
in
fs
enter
dec
inc
push
fildll
sti
lods
pop
cmp
inc
out
jno
pop
pop
jle
stos
xor
pop
mov
dec
imul
pusha
and
les
mov
xor
pop
mov
decl
pusha
movaps
in
scas
hlt
outsb
inc
ds
fildl
push
jnp
pusha
jle
stos
ficoml
add
shlb
std
nop
ffreep
lods
jl
push
dec
jnp
mov
cmp
sbb
rolb
inc
adc
sbb
pop
loop
repnz
inc
inc
fwait
push
dec
push
ss
xchg
lods
push
stc
popa
outsl
push
aaa
push
pop
inc
gs
pop
add
mov
je
ss
sub
sub
stos
cmp
arpl
clc
mov
test
orb
movsb
cmc
sub
sub
dec
int3
mulb
or
fxch
sbb
pop
lds
push
mov
add
dec
sub
test
push
out
repnz
movsb
les
inc
push
cmp
fmulp
inc
addl
cs
pop
fucomp
and
pop
mov
sub
popa
ss
push
pop
outsl
cmp
std
movsb
push
xchg
xor
push
cmp
pusha
imul
insb
adc
dec
insb
rcrl
adc
xchg
push
idivb
incl
mov
jns
ds
pop
ljmp
fistpll
adc
jg
pop
inc
mov
sub
pusha
or
adcb
pop
cmp
hlt
mov
mov
xchg
scas
jle
aaa
movsb
subb
inc
xchg
lods
inc
popa
cmp
xchg
icebp
stos
pusha
test
xchg
jmp
push
stc
xor
lods
arpl
sar
das
bound
sbb
cmp
dec
inc
inc
ljmp
mov
pop
aam
mov
fs
cmp
loop
dec
cmp
xchg
sub
sti
insl
scas
hlt
dec
into
lock
inc
xchg
cmp
arpl
out
outsb
mov
jmp
dec
jle
push
roll
dec
pop
jmp
in
mov
rclb
adc
dec
pop
cmp
pop
and
mov
xorl
lea
lds
pop
ds
rclb
add
push
sub
insb
into
fsubr
jp
lret
pop
aas
rolb
faddp
outsb
pop
push
imull
test
bound
dec
cmp
add
inc
or
clc
mov
test
mov
pop
or
inc
out
xorl
mov
inc
cmp
inc
xchg
and
mov
addr16
adc
pop
call
adc
xchg
shll
rcll
xchg
sub
xor
in
bound
imul
xchg
xor
jne
fstl
aam
xchg
jnp
inc
pop
push
das
jno
jmp
adc
add
xchg
dec
xchg
ss
pop
push
jb
ljmp
pop
and
push
fs
imul
mov
cmp
push
push
push
lahf
sti
xchg
mov
cmp
imul
pop
sub
xchg
mov
xor
sbb
stos
leave
dec
xchg
sub
cmpsl
adcb
scas
push
mov
mov
xchg
mov
test
jnp
mov
mov
cmpsb
repz
aad
je
add
xor
or
mov
pop
pop
cmpsb
dec
jns
insb
pop
push
and
inc
dec
loopne
inc
adc
ds
pop
sti
shll
jle
rorl
inc
pop
dec
das
imul
cmp
ss
jg
pop
or
aas
xor
dec
inc
mov
loop
lods
xor
xor
sub
or
inc
pop
pop
scas
xor
cmp
add
movsl
pop
push
mov
cmp
fs
sub
call
dec
sub
mov
fwait
inc
arpl
inc
movsl
loope
jns
push
cmp
cmp
lea
cmpsb
mov
xor
pop
push
inc
lock
pop
xchg
xchg
pop
cmp
mov
mov
mov
add
mov
inc
imul
imul
inc
add
imul
mov
loopne
subl
test
pop
and
mov
cmpsb
fdivrp
leave
cld
push
inc
retw
mov
stc
insl
mov
jbe
xlat
lock
push
xchg
jle
xor
xchg
cmp
mov
scas
stos
add
imul
das
movsl
aam
mov
sahf
mov
mov
mov
push
add
xor
jl
dec
push
add
pusha
test
push
cli
shrl
fimuls
dec
inc
test
mov
dec
loop
xchg
stos
push
insb
adc
push
inc
push
in
mov
ja
jp
test
vmovd
ljmp
xor
aaa
cmp
push
dec
loope
in
mov
leave
mov
jp
inc
test
xor
inc
into
scas
lret
lret
dec
pop
and
les
popf
rclb
mov
repz
inc
mov
jno
pop
xor
push
inc
dec
pop
fs
xor
inc
cmp
in
sahf
jp
inc
popa
add
dec
lea
aaa
xchg
aam
push
xorl
xchg
loope
xor
push
gs
into
imul
bound
and
in
mov
adc
mov
popl
xor
sub
pusha
dec
leave
lahf
imul
sub
adc
in
add
call
push
cmp
xor
push
hlt
push
xlat
sahf
and
jmp
mov
inc
pop
mov
fildl
push
imul
inc
fldcw
outsb
jae
cs
icebp
pop
push
and
inc
mov
in
lock
jnp
cmp
cmp
daa
xor
data16
pop
int
and
sub
inc
xor
outsl
lret
dec
xor
add
cmp
sbb
ss
ljmpw
jl
popf
dec
or
push
das
add
mov
frstor
loope
xor
mov
ror
icebp
mov
shl
push
pop
sub
lods
mov
cmp
sub
movsl
mov
imul
cwtl
repnz
xchg
outsb
aas
popf
mov
cld
cmp
xchg
cs
out
adc
pop
rorl
sti
pop
cmpsb
add
lods
or
or
sub
insl
inc
mov
cmp
sub
sub
stc
lods
outsb
sub
pop
push
pop
dec
popf
push
loopne
xor
inc
dec
idiv
adc
add
sub
sbb
sub
xchg
pop
dec
loop
push
lret
jne
jle
push
fucomp
cmc
icebp
inc
sub
fisttpl
and
imul
sbb
cmp
sbbl
push
xor
sbb
arpl
sbb
jnp
inc
daa
add
sbb
ljmp
aaa
je
pop
xor
push
mov
mov
mov
xor
mov
cmp
add
popa
inc
aam
jo
sub
push
cmp
xchg
stos
sub
loopne
dec
pop
mov
jl
inc
inc
scas
xchg
dec
int3
xchg
je
aaa
cs
test
sub
dec
jnp
inc
pop
je
ds
aaa
in
fistps
push
out
lahf
sub
xor
test
ljmp
jnp
add
fsubrp
inc
dec
push
outsb
inc
dec
mov
mov
out
lods
push
push
jmp
repz
jmp
cmc
pop
dec
test
xorb
in
inc
inc
rcll
js
inc
aad
dec
bound
jae
cs
adc
push
inc
sub
inc
pop
xor
push
pop
pop
test
add
jnp
sub
pop
sarb
jp
daa
pop
push
pop
xor
cli
sarb
dec
lock
xor
mov
loope
negl
sub
cmp
icebp
scas
mov
les
dec
xchg
movl
xor
cmp
test
adc
mov
and
lea
dec
repnz
pusha
xor
int
gs
cmp
adc
jg
cmpsb
mov
in
sub
cmc
pop
add
orl
fsubl
lds
cltd
pop
int3
mov
adc
dec
popa
pop
aas
dec
xor
inc
enter
in
mulb
scas
cmp
push
fwait
mov
pop
jmp
ljmp
push
cmpsl
or
aad
test
jo
inc
jne
cmp
pop
dec
or
push
xlat
cli
aaa
cs
xor
stos
je
inc
ds
clc
push
fistpl
testb
cmp
je
cmp
test
outsb
mov
jp
push
dec
ret
and
shl
ja
pop
xchg
or
pop
mov
scas
adc
cmp
inc
shrb
cmc
jp
dec
pop
jbe
add
je
ljmp
aas
ja
es
jnp
dec
dec
cs
and
jg
cmp
cmp
in
cmc
jnp
pusha
mov
xchg
cmp
xor
test
xor
fisubrl
jb
xor
arpl
add
stos
adc
in
sub
dec
dec
std
imul
ds
jmp
sub
fimull
jl
ja
adc
mov
repnz
dec
imul
xchg
cld
dec
mov
insb
mov
push
pop
imul
push
pop
mov
data16
out
test
aaa
dec
add
or
mov
cmp
xor
insl
push
pop
imul
or
dec
pop
ljmp
aad
push
lods
outsb
mov
fmuls
hlt
xchg
sti
pop
push
fcompl
scas
inc
pop
lods
jb
mov
les
jmp
js
cmpsl
inc
jno
mov
out
repz
push
mov
jne
pop
inc
cli
popa
xchg
stos
pop
push
out
xlat
add
aas
loopne
cmp
icebp
add
mov
imul
repnz
dec
mov
cs
and
fs
sub
sub
inc
inc
mov
jns
mov
cmp
imul
sub
mov
dec
ljmp
inc
popa
aaa
jmp
inc
inc
inc
cmp
xor
cmp
sub
inc
xchg
ja
push
movsl
sub
dec
xor
sbb
repz
xor
inc
cmp
hlt
xchg
mov
sub
test
fstl
add
mov
int3
dec
xchg
shll
jae
in
pop
or
mov
xchg
imul
cmp
sub
aad
outsb
sub
mov
scas
xor
mov
mov
in
lock
sub
jl
repz
dec
pop
xor
xor
or
cmp
add
adc
xor
cwtl
stos
xchg
mov
cmp
les
leave
bound
gs
jmp
pop
stos
pop
push
into
sbb
out
jg
cmp
and
push
cmpsb
cmpsl
sub
outsl
jmp
das
jmp
sbb
inc
xor
push
das
push
inc
xor
jns
cmpsb
inc
add
dec
sub
std
movsb
sbb
in
push
pop
pusha
out
dec
push
sti
pop
xchg
out
push
xchg
outsl
pusha
outsb
fidivl
imul
jecxz
jb
aaa
andl
push
cmp
dec
xchg
add
lods
fs
dec
sub
icebp
jl
dec
dec
mov
xor
or
imul
adc
or
cmp
cmc
jp
push
inc
mov
cs
insl
push
call
std
pop
cmp
fdivrl
repz
imul
sub
loopne
sub
push
add
out
xlat
bound
xor
adc
insb
in
ficompl
mov
add
imul
mov
jae
pop
leave
cmp
inc
jmp
fwait
jne
rcrb
xorl
es
arpl
test
iret
insl
popa
cmpsb
popf
push
loope
xchg
out
cld
adc
ss
jo
les
push
lods
push
sub
shlb
mov
shlb
push
sahf
xor
push
mov
js
lcall
movb
mov
cmp
sub
pop
xchg
imulb
xor
inc
sar
inc
mov
cmp
xchg
scas
rcll
xor
out
inc
sub
mov
sub
mov
mov
lock
jnp
push
pop
rcl
jne
inc
inc
push
xchg
scas
push
xlat
cmp
subl
dec
mov
jnp
xchg
dec
pusha
pop
outsb
shll
sub
inc
inc
cs
mov
out
lret
das
push
leave
push
push
aas
push
lea
jmp
insb
lds
enter
test
cmp
cli
dec
sub
xchg
jo
sub
jecxz
xchg
sbb
xchg
in
pop
imull
mov
pop
clc
in
stos
iret
lods
cmp
jnp
pop
jbe
repz
loope
iret
or
jp
pop
mov
sbb
arpl
pop
rcrl
js
lds
push
pop
sub
jae
addr16
mov
dec
insb
mov
push
xor
ret
add
xchg
jae
orl
push
mov
jno
test
and
add
pop
sahf
test
shl
push
push
pop
push
stos
mov
hlt
push
rorl
sub
sub
mov
in
pop
cs
jmp
mov
repz
push
dec
lea
stos
xor
test
jmp
xchg
sub
or
or
mov
ds
mov
dec
dec
push
xchg
xor
pop
imul
cld
pop
ljmp
lahf
sub
mov
mov
cmp
xchg
sub
test
pusha
cmp
out
push
cmpsl
sbb
movsl
js
jne
dec
xor
imul
jg
fs
test
jnp
push
pop
sbb
mov
cmp
fbstp
addr16
inc
xor
dec
sbb
in
bound
int3
popf
sbb
push
xchg
shrl
in
jp
test
pop
in
in
push
pop
lahf
inc
pop
sub
scas
pop
pop
and
jns
outsl
add
cmp
dec
cmp
jl
fldcw
cmp
mov
call
mov
jmp
jp
push
pusha
out
std
stos
je
xor
nop
adc
push
nop
add
or
dec
sbb
out
popa
inc
lock
or
and
push
inc
xor
lods
adc
rol
mov
fs
dec
cltd
cmpsl
leave
and
adc
or
push
push
cmc
das
sub
inc
pop
sub
jbe
out
orl
inc
pop
lret
pushf
adc
jb
xor
and
pop
cs
xor
mov
cmc
jnp
xor
pop
inc
add
jae
cmp
stc
xchg
sub
mov
sahf
xchg
daa
shrl
test
bound
int
pop
xchg
sub
cli
addr16
or
aad
push
push
inc
loop
arpl
rcrl
stc
outsl
mov
sbb
xchg
scas
jl
pop
fisubl
cmp
push
movsb
shrl
popa
jns
shlb
jmp
mov
sub
add
cltd
inc
xor
in
and
xor
mov
rep
sarb
sub
jnp
arpl
cmp
inc
pop
insb
push
fucomp
and
loopne
jns
test
cmp
in
pop
flds
jmp
dec
ficompl
and
jb
jne
sub
fadds
leave
mov
push
mov
and
dec
sub
imul
outsl
sub
decl
push
push
push
faddl
pop
or
test
aas
jbe
pop
push
dec
ljmp
into
sub
mov
jno
add
cmpsb
push
adc
and
mov
dec
xchg
or
das
stos
inc
pop
jns
pop
test
pop
push
sub
cwtl
popa
mov
mov
push
sub
imul
pop
js
push
int3
sarb
std
push
lds
int3
arpl
jns
fs
jg
sub
pop
jmp
mov
cmpsl
lret
and
cld
pop
dec
inc
mov
lock
in
aaa
mov
adc
in
std
int3
imul
insb
adcb
xchg
rolb
push
push
in
mov
ljmp
inc
mov
push
in
bound
xor
pop
push
sub
inc
mov
popa
mov
sub
dec
jmp
cmc
dec
pop
fisubrl
aaa
add
mov
xor
add
xchg
dec
popf
and
xor
pop
push
hlt
test
cmp
xchg
divl
xor
ljmp
xor
push
movsl
push
je
sub
ds
jns
cmp
pop
lods
repnz
fstl
nop
push
mov
xor
gs
sahf
mull
mov
in
xor
pop
and
scas
mov
sub
outsl
ds
repz
jl
inc
mov
mov
loope
mov
adc
jmp
mov
push
imul
mov
and
adc
js
mov
adc
inc
imul
out
sbb
aaa
popf
sub
xor
sub
negb
xor
bound
jle
xlat
jge
dec
stos
bound
mov
dec
cmc
pop
jmp
ds
cmpsl
adc
insl
jae
pop
lcall
xchg
or
in
inc
jno
pop
push
mov
jle
cmp
sub
cmp
sub
adc
mov
inc
sub
call
cmp
mov
mov
movsb
mov
cmp
xor
insb
fisttps
dec
rcr
addr16
lods
shlb
cs
aaa
mov
push
cmp
mov
and
xchg
ret
pop
iret
movsb
paddw
inc
gs
aaa
ret
pop
je
outsb
push
pop
pop
dec
mov
adc
inc
xorb
testl
xchg
mov
push
cmp
xlat
rep
mov
jecxz
repnz
inc
cmp
mov
ss
lods
push
ljmp
mov
stos
xchg
dec
dec
sub
out
mov
in
sahf
pop
sub
xchg
movsb
push
and
pop
imul
int3
es
decb
aad
popa
or
aad
xor
out
rcll
cmp
jecxz
test
cmp
jb
xor
js
push
addr16
movsb
imul
sub
outsb
jp
or
jmp
push
adc
imul
pop
pop
aam
jno
les
and
or
lods
dec
test
sti
subb
xor
out
nop
jbe
testb
ss
fsubrs
cmp
xchg
push
inc
mov
les
in
xchg
or
outsl
pop
push
add
inc
push
pop
dec
jno
inc
imul
mov
pop
xor
xlat
cmp
inc
sub
scas
out
cmc
inc
inc
mov
lock
cmp
dec
adc
and
dec
es
clc
bound
push
sbb
sbb
xor
enter
popf
pop
inc
or
icebp
xor
sbb
rorl
push
stos
add
jmp
bnd
sub
imul
push
xchg
xchg
mov
imul
sbb
ljmp
xchg
loop,pn
rol
cmp
jmp
pop
dec
inc
cmp
cmc
andb
addr16
imul
cmp
and
mov
push
inc
and
je
imul
add
jbe
dec
ds
push
mov
cmc
stos
mov
jns
sub
push
clc
lcall
push
add
cmp
xor
pushf
bound
rcr
and
sub
xchg
enter
xor
in
pop
mov
arpl
imul
xor
test
mov
pop
cmp
mov
xchg
ja
in
icebp
jg
push
imul
xchg
stos
std
cmp
dec
sub
stos
hlt
cmp
scas
das
mov
sarl
xor
cmp
leave
push
sub
repnz
in
std
outsb
shll
int
push
sbbl
xchg
insb
jno
ljmp
popl
mov
inc
lock
rolb
inc
sub
jb
push
fnstenv
push
repnz
dec
fs
ret
cmp
hlt
inc
or
flds
repnz
push
xor
insl
les
pop
cmp
les
push
mov
jl
sub
push
aaa
cli
mov
sbb
add
ret
jae
sub
movsl
call
mov
push
sub
xor
dec
inc
popa
das
arpl
xor
mov
xor
popf
mov
ds
pushl
xor
js
jnp
jl
gs
roll
cmp
push
inc
imul
scas
hlt
inc
xor
pop
testb
dec
xor
xor
pusha
xor
pop
pop
adc
jle
add
push
mov
in
sti
mov
aas
dec
lods
fisubrs
arpl
push
cmpsb
jno
sahf
cld
mov
out
inc
xchg
dec
xor
inc
xchg
orb
dec
sub
sbb
addr16
jp
inc
inc
pushf
cs
movsb
lret
jg
pusha
mov
xlat
mov
pop
pop
shrb
and
call
mov
insb
push
shrl
pop
xor
imul
pop
pop
shlb
fwait
inc
adc
sub
sbb
push
cmp
sub
sbb
pop
bound
pop
stos
xor
ficoms
shlb
xor
loope
in
dec
imul
cltd
cmp
sub
gs
sub
xor
adc
pop
add
pusha
inc
inc
cmpsl
lret
jmp
sti
into
push
and
mov
dec
dec
cmp
sub
jb
xor
sbb
scas
xor
pop
push
in
aaa
jo
mov
lock
mov
or
imul
inc
inc
cmp
cltd
cmc
call
push
or
push
inc
mov
addr16
xchg
dec
idivb
cltd
sub
pop
cmpsb
icebp
ret
dec
xor
jae
jge
push
sub
cmp
dec
push
sub
lods
test
lods
sbb
out
xor
in
enter
mov
sti
mov
xor
xor
xchg
dec
gs
mov
xchg
sbb
xlat
movsb
fstpl
push
cmp
mov
inc
mov
mov
push
sub
xlat
sbb
mov
pop
pop
dec
xchg
mov
cs
imul
lods
data16
jl
push
mov
aam
movsl
pop
call
xlat
out
xchg
movsl
fstpt
jg
dec
cmp
lret
pop
mov
pop
xchg
cmp
mov
test
cmp
fstl
jl
cmp
cmp
jbe
xchg
and
mov
outsb
loope
fistps
sbb
ljmp
inc
out
mov
roll
aas
or
push
in
in
sub
pop
in
xor
jle
cmp
add
cli
xlat
sub
xor
xchg
scas
push
test
jb
xor
insl
cmp
mov
ret
jns
sub
mov
mov
loopne
ljmp
mov
movsb
shl
sbb
das
or
cltd
xchg
out
xchg
inc
icebp
inc
repnz
mov
pop
adc
rcrl
dec
fs
fs
outsl
outsb
inc
push
add
mov
mov
mov
pop
es
movsl
testl
push
dec
cli
scas
xor
pop
jmp
xor
jmp
add
sub
sub
in
mov
bound
mov
cmp
js
in
sbb
push
ljmpw
inc
cmpsl
add
add
pop
xchg
ss
lahf
mov
push
push
cs
outsb
arpl
idiv
xor
ss
test
xor
aad
repz
push
xor
push
cmp
push
jo
in
cmp
sbb
mov
out
add
imul
xchg
mov
push
xchg
fs
popa
sub
pop
or
xor
xor
inc
cmpsl
adc
out
arpl
and
inc
test
dec
jae
imull
mov
scas
mov
arpl
daa
in
jp
or
repz
sub
pop
push
sbb
xchg
mov
cmp
iret
je
pop
fstpt
jmp
iret
sub
popf
scas
pop
addb
mov
mov
xchg
leave
fidivl
cs
add
sbb
dec
scas
mov
push
cmp
add
push
jno
repnz
pop
inc
cmpsb
lret
adc
scas
mov
sub
cmp
das
cmp
cltd
sub
ja
in
bnd
out
call
sbb
sub
jne
jne
cmp
push
ljmp
lret
inc
aas
sub
dec
movsb
mov
inc
push
ljmp
pop
out
mov
das
ljmp
out
dec
pop
push
push
outsb
cmc
gs
jge
xor
lret
jbe
inc
pop
dec
out
or
lock
je
mov
xor
push
pop
and
xor
cmpsl
in
lods
push
das
jns
sub
cmpsb
mov
fsubl
insl
pop
imul
imul
shll
lods
addr16
inc
insb
jle
dec
mov
mov
sub
sbb
lods
fs
out
loop
mov
inc
stos
fwait
inc
cmp
adc
cmp
inc
xchg
sub
and
xor
push
scas
push
sub
rcrl
gs
scas
fs
js
xor
xor
push
out
jae
cltd
testl
xorb
imulb
mov
inc
popa
je
xor
mov
pop
fistpll
pusha
in
in
xor
and
mov
das
push
sahf
xchg
insb
inc
bound
inc
in
jle
stos
lods
inc
out
bnd
lods
jne
dec
cmp
xor
jb
xor
inc
ljmp
push
fs
jl
dec
pusha
lods
jecxz
cmp
mov
jmp
inc
jno
xor
enter
pop
arpl
pop
and
jbe
pop
rcll
pop
orb
mov
je
inc
pop
xchg
jmp
icebp
push
ds
cmc
lea
cmp
iret
mov
cmp
dec
jp,pn
mov
pusha
cmp
cmp
mov
mov
pop
movsl
inc
pop
lahf
movsl
cmp
cmp
dec
cmpsb
or
pushf
inc
and
lahf
push
xor
jmp
ja
data16
pop
dec
fwait
pop
push
cmpsl
sbb
cli
adc
push
and
data16
adc
jl
push
mov
leave
pop
xor
movsb
lods
outsl
mov
cmp
lahf
je
pop
imul
out
dec
inc
addr16
fistpl
cmp
in
xchg
movsb
or
adc
loop
push
mov
cld
mov
stos
pop
in
mov
aaa
inc
dec
repnz
adc
scas
insl
inc
xchg
test
gs
add
or
dec
pop
cmp
test
add
sub
test
push
inc
sub
adc
test
jne
jno
pop
imul
sub
subl
or
div
push
xor
movsb
push
imull
imul
sti
je
out
dec
xrelease
jb
push
cmp
xorb
pop
sub
dec
ljmp
mov
or
push
xchg
sahf
add
int
jl
lret
pushf
lock
fdivs
aaa
mov
loop
add
jb
outsb
ja
loop
lds
xor
xor
leave
inc
push
imul
mov
and
inc
test
mov
mov
imul
outsl
adc
jno
sahf
lret
inc
pop
mov
cwtl
mov
or
xor
adc
arpl
jno
xchg
dec
mov
xchg
movsl
outsl
mov
pushf
ss
cld
out
add
xchg
scas
jno
ljmp
fidivrl
iret
and
std
int3
dec
dec
cmp
mov
decb
nop
int
jp
mov
stos
inc
jb,pt
push
mov
arpl
in
aaa
mov
stos
arpl
push
pop
mov
push
mov
cs
mov
pop
in
xlat
insl
mov
add
fdivrs
inc
cmpsl
ss
repz
push
or
jbe
ljmp
sub
mov
mov
test
rcrl
out
mov
pop
fnstcw
cmp
out
mov
add
lret
cld
dec
push
inc
pop
add
adc
inc
xchg
outsl
pop
cs
push
inc
cs
dec
scas
xchg
stc
xchg
lock
sub
pusha
xor
in
std
jae
inc
push
mov
sbb
bound
push
push
dec
jmp
inc
dec
imul
rorl
pop
stos
add
xchg
lods
sub
sahf
addr16
fists
sub
loopne
dec
imul
hlt
inc
cli
add
cmp
ja
dec
and
in
aaa
ljmp
push
cmp
mov
sub
jmp
add
repz
inc
jb
push
add
push
jns
scas
jp
push
popa
js
in
gs
jge
idivb
shll
daa
mov
outsl
in
or
cmc
je
cmp
xor
jp
inc
sub
imul
divb
xchg
jne
mov
xorb
dec
mov
xor
test
pop
pop
fwait
mov
test
add
mov
icebp
pop
in
mov
dec
in
mov
pop
dec
dec
xchg
roll
bound
dec
push
jecxz
or
sub
aad
xchg
mov
cld
andl
and
lahf
out
xor
add
clc
mov
aad
xchg
jae
bound
xor
frstor
sub
xor
jp
out
pop
ljmp
mov
stc
imul
xor
std
push
sub
push
out
js
xor
and
jmp
push
push
mov
push
das
ss
dec
pop
pop
leave
scas
pop
and
fs
cmp
push
test
stos
inc
push
push
mov
out
sbb
mov
test
push
push
cli
test
pop
pop
es
fsubr
xchg
int3
jp
das
xchg
pusha
mov
dec
inc
fxch
dec
mov
cli
mov
repnz
jae
stos
cmpl
adc
xor
ljmp
lahf
aaa
dec
mov
mov
data16
adc
ss
xchg
lret
in
mov
rorl
sti
dec
outsl
in
stc
dec
popa
and
fstpl
cmc
sahf
stos
mov
and
insl
stc
inc
pop
outsl
out
push
push
pop
adc
sub
mov
bound
lahf
out
xchg
out
xor
mov
stc
cmp
push
fisttpll
aam
dec
into
daa
cmp
repz
mov
jbe
lds
stos
mov
inc
inc
inc
mov
mov
aad
push
or
mov
cs
cmp
inc
xor
aam
cli
mov
pop
mov
cmpsb
mov
or
push
jmp
jmp
pop
or
lret
movsl
cwtl
mov
cmp
fmull
cmp
mov
cmc
fwait
outsb
pop
inc
sbb
jb
push
rorl
pop
mov
push
inc
inc
push
popf
lret
stos
bound
jge
stos
movsl
js
sub
xor
push
dec
shlb
mov
in
xchg
cmp
shr
aas
arpl
sbb
xchg
mov
aaa
ja
adc
gs
dec
sub
ror
cmp
sub
mov
pop
add
pop
dec
imulb
xchg
test
adc
movsl
and
imul
and
cmp
bound
push
xchg
inc
dec
cld
dec
jo
cmp
mov
adc
inc
mov
push
mov
rorl
mov
in
cmp
movsb
pop
mov
scas
xchg
jecxz
push
mov
insb
jp
out
dec
mov
push
jmp
test
xor
sub
and
mov
pop
dec
fisubs
les
add
sbb
sub
mov
loop
sub
xor
fdivrs
xor
ds
sub
inc
scas
sub
in
jle
cmp
sub
in
sbb
fstpt
cmp
or
ss
sbb
lods
mov
not
ja
push
imul
push
stc
dec
clc
mov
cmp
xor
pop
dec
cs
bound
push
pushf
nop
rcll
popa
push
out
icebp
xchg
xor
repz
xchg
cmpsb
mov
lret
lock
ljmp
iret
ljmp
sub
jge
ljmp
popf
ss
xor
ds
mov
sub
daa
pop
lock
repnz
iret
mov
dec
test
cmp
hlt
je
sub
xor
mov
ds
or
mov
jle
add
mov
dec
ror
in
xlat
inc
sub
xchg
lods
lods
jnp
or
pusha
mov
pop
xchg
lods
add
xchg
mov
xchg
mov
or
jne
jmp
push
dec
push
nop
test
mov
jmp
jmp
dec
mov
loope
sbb
dec
ljmp
pop
cmp
nop
cmp
mov
lock
inc
xchg
jbe
cmp
dec
test
or
xor
add
in
fldt
das
xchg
stc
pusha
leave
aam
stos
jp
bound
or
inc
sub
mov
push
fsubp
aaa
add
jmp
sbb
xor
add
int
adc
subb
sub
cmp
bound
scas
das
push
jnp
imul
sub
push
lods
mov
ss
push
xor
mov
mov
ljmp
popf
pop
dec
bound
mov
inc
icebp
pop
pop
inc
add
dec
cmp
push
mov
xor
jmp
jb
adc
outsb
out
sub
stos
or
mov
cld
pop
or
inc
cmp
call
push
add
subps
mov
mov
lods
scas
add
xor
push
xor
mov
mov
andb
bound
lods
pop
stc
outsb
out
jno
ljmp
adc
fs
int3
pop
pop
in
and
hlt
bound
cmp
push
cmp
adc
adcl
adc
test
push
ja
stos
outsb
mov
pop
push
sub
pop
mov
push
xchg
inc
jmp
push
cmp
int3
das
inc
adc
xchg
js
popa
pop
mov
pop
repz
push
push
and
or
push
xor
xchg
clc
xchg
sub
mov
adcl
cmpsl
dec
adc
cmpsl
scas
sahf
pop
je
inc
inc
adc
cmpsl
hlt
out
xor
out
adc
sub
stc
jge
push
jl
arpl
push
pop
les
xor
push
adc
les
sub
xor
sarl
dec
out
fidivs
dec
cmp
sahf
mov
fs
call
inc
pop
adc
pop
sarl
mov
lock
lret
inc
sub
fnstenv
mov
lcall
or
cmpsb
push
sti
cmp
popa
dec
jbe
add
int
xor
hlt
dec
loopne
cmp
xchg
std
jmp
xor
inc
test
pop
hlt
xor
dec
int
scas
cmp
test
inc
pop
jo
imul
ret
mov
call
sub
cmp
lret
lods
sbb
ja
xor
inc
push
xor
xor
inc
jg
sbb
mov
fs
inc
sub
subl
inc
sbb
ret
cmp
push
sahf
cld
cmp
push
xchg
les
mov
fsubrs
lods
xor
insl
xchg
in
cmp
adc
mov
sub
jmp
dec
cmc
je
dec
mov
xor
xchg
jmp
dec
push
fs
adc
gs
jmp
dec
mov
or
test
mov
ss
sti
pop
sub
je
jge
repnz
stos
sub
push
in
cmp
cmc
mov
xchg
jmp
mov
push
mov
roll
je
push
popa
aas
test
xchg
push
dec
pusha
aaa
mov
xchg
aaa
inc
inc
push
outsb
sahf
nop
movsl
clc
push
mov
in
int3
mov
pop
push
out
addr16
dec
imul
sub
adc
das
dec
jecxz
sub
cmp
push
pop
daa
imul
mov
mov
sub
arpl
in
mov
addr16
testb
pushf
xchg
xchg
jo
in
xor
ret
jns
das
rcll
arpl
add
mov
sbbb
js
jno
pop
out
icebp
dec
or
sub
or
add
sub
inc
xchg
repz
pop
sbb
pop
dec
jmp
mov
cli
jp
cmp
xor
sub
jge
mov
ss
fnstsw
add
push
sub
fistps
xchg
arpl
cmp
in
cmp
mov
sub
scas
fdivrl
pop
sub
push
add
push
sub
cmp
jbe
sbb
sbb
or
and
mov
loopne
xor
mov
sbb
add
fs
xchg
push
data16
xor
xor
vmovntps
clc
xor
pop
jnp
enter
push
add
stos
in
sub
icebp
dec
sbb
insl
push
inc
cmp
call
jbe
pop
inc
add
mov
xor
pop
or
xchg
aaa
fldcw
push
xor
jl
xor
jae
jmp
push
mov
xchg
std
mov
mov
inc
imul
lds
hlt
push
sbb
or
fsubrs
hlt
gs
cwtl
fbld
inc
ljmp
into
jno
ljmp
lret
sub
dec
push
mov
mov
jmp
cmc
push
inc
arpl
into
xor
mov
mov
das
hlt
inc
mov
and
leave
je
dec
aaa
pop
scas
jmp
xor
xchg
xor
dec
dec
jmp
sbb
outsl
dec
dec
pop
lods
mov
xor
xor
sub
push
lods
inc
repnz
lahf
xchg
mov
inc
fs
movsb
iret
stc
mov
stos
outsb
mov
loop
in
xor
aad
sub
jg
sub
test
dec
imul
cmp
notb
cmc
xor
dec
dec
mov
bound
mov
pop
adc
mov
add
sub
cli
xchg
inc
xchg
dec
inc
adc
lahf
shl
cmp
adc
lret
ljmp
stc
cmp
bound
sbb
or
mov
loopne
mov
dec
mov
insb
xor
adc
imul
movsb
js
inc
cmp
or
lcall
test
xchg
push
ds
mov
mov
sbb
repnz
pop
stc
gs
push
ficoml
scas
inc
dec
rorl
push
sbb
or
fistpll
pop
inc
dec
add
or
mov
jp
mov
xchg
int3
shrl
push
in
mov
or
xchg
icebp
or
sub
fdiv
movsl
rorb
push
inc
xchg
and
jg
les
stos
mov
bound
cmp
jo
imul
jl
mov
cmpsb
sub
sub
lock
test
xor
scas
mov
aas
dec
les
lret
mov
clc
vmovdqu
sub
dec
jnp
das
add
xchg
repz
int
jmp
icebp
xor
push
pop
xor
ss
mov
sub
adc
mov
mov
dec
cmpsb
imul
aas
adc
xor
sbb
mov
mov
sub
add
cmp
movl
push
pop
fimull
cmp
scas
sub
aaa
je
outsl
add
push
xor
xor
fnstenv
xchg
movsl
fwait
imul
inc
cmpb
cmp
out
aaa
sub
mov
push
cmp
dec
dec
add
pop
pop
jle
pop
mov
out
sub
cs
sub
out
mov
lcall
sub
cmp
out
subl
or
popa
nop
jp,pn
sub
mov
jnp
pop
int3
mov
push
ljmp
mov
sub
inc
iret
inc
enter
jg
ljmp
adc
imul
push
push
dec
mov
scas
clc
subl
cmp
jo
push
out
xor
idivl
leave
sub
clc
mov
push
sub
std
jl
xor
divl
scas
sub
xor
outsl
xchg
leave
jl
dec
push
sub
imul
mov
push
and
sub
aaa
mov
xor
mov
jo
imul
or
jg
ret
dec
and
std
xchg
call
sbb
jae
out
icebp
xor
push
jnp
dec
jmp
ja
in
clc
sub
aaa
mov
sahf
shll
pop
ds
cmp
cmpsl
movsl
into
inc
inc
xor
shrl
cmp
stos
adc
orps
sub
jmp
aad
inc
ljmp
pop
shll
mov
lock
pop
push
test
arpl
sub
adc
cmp
movsb
idivl
jne
insl
loope
pop
adc
in
push
je
aaa
xchg
mov
push
inc
inc
sub
or
and
push
pop
stos
pusha
bound
sub
movsb
push
aaa
in
mov
push
adc
in
dec
dec
aam
fistpl
aaa
jmp
pusha
push
hlt
pop
sbb
scas
sbb
shll
sub
adc
jnp
push
cmpsl
aam
cmc
rorb
stc
add
aaa
or
jb
push
mov
inc
add
enter
jns
fimull
xor
rol
cld
inc
popa
lahf
dec
ljmp
xor
data16
fisubl
inc
adc
imul
std
or
sti
pop
cmp
cld
sub
test
pop
xor
cmp
test
jo
jp
mov
or
xor
hlt
dec
dec
cmc
call
jmp
inc
jmp
jmp
loopew
test
push
mov
test
or
mov
cwtl
push
pushfw
xchg
scas
cmp
cli
mov
inc
sbb
mov
jno
sub
adcl
lock
dec
daa
sbb
ja
sub
xor
leave
sub
out
aas
mov
cli
cmc
in
loopne
cs
inc
cmpsl
pop
mov
movsb
dec
xor
pop
push
sub
xchg
popa
cld
jl
pop
push
test
sahf
shlb
xor
push
sub
das
pusha
mov
les
ficoms
popf
jbe
lds
push
ljmp
mov
cmp
jp
xchg
mov
inc
and
xor
loop
aaa
out
xor
shll
xchg
cli
stos
inc
xor
ffreep
jne
mov
inc
out
mov
inc
test
arpl
shlb
jo
ljmp
das
pop
mov
jbe
das
das
dec
in
push
fstps
std
insl
vmovaps
inc
aas
lea
cmp
movsb
leave
aaa
pop
cmp
nop
push
xchg
negl
aas
sub
xor
inc
add
cmpsl
insb
add
xor
jbe
sbb
scas
frstor
push
lods
xor
sub
jp
lods
inc
jmp
pop
das
push
push
mov
sub
imul
ds
or
mov
inc
cmpsl
hlt
dec
pop
dec
stc
push
cmp
pop
mov
cs
enter
hlt
and
int3
mov
cmp
jmp
test
sub
fiaddl
out
jmp
pop
jae
es
movsl
mov
push
inc
add
adc
pop
or
xor
int3
data16
mov
sub
in
scas
ss
cmp
mov
rcrl
dec
sub
out
push
dec
stos
sub
xchg
pushf
jp
inc
loopne
mov
jnp
add
pop
sub
dec
jge
jmp
jno
sub
stc
insb
insl
jne
sub
scas
icebp
jecxz
aam
pop
dec
pusha
dec
inc
jge
imul
mov
mov
orb
or
mov
ljmp
das
jne
jp
pop
pop
jge
mov
mov
dec
push
jl
cmp
es
inc
sbb
jns
stc
dec
or
sub
jge
or
std
sub
xor
xorb
ds
aad
add
xchg
sub
fsubrs
out
cmp
cmpsl
dec
ja
jne
cmp
sub
imul
mov
sub
mov
sub
stos
jl
imul
inc
les
les
push
popa
arpl
dec
pop
in
cmp
pop
adc
add
mov
ss
lods
mov
xor
jl
in
insb
scas
pop
inc
ss
push
cmp
fs
cmc
lds
pop
push
pop
stos
movsb
or
dec
test
jnp
cmp
xchg
cmp
xchg
mov
bound
add
dec
movsb
mov
in
ja
imul
pop
hlt
mov
in
mov
cwtl
push
cltd
pop
cmp
mov
xchg
and
hlt
inc
imul
aas
fiaddl
popf
dec
aam
cmp
adcb
repnz
in
sahf
xchg
lds
leave
popa
idivl
ljmp
ljmp
stos
shrl
dec
sub
sbb
cmp
sub
hlt
adcl
sub
stos
scas
inc
cmp
sub
cmpsb
outsl
inc
xor
pushf
jp
sub
pop
in
daa
jmp
sbb
ljmp
xor
pop
cs
sub
jecxz
jae
or
sub
movsb
sub
inc
pop
and
cs
sub
out
jmp
lcall
sub
stc
cmp
loopne
mov
mov
jge
enter
orb
push
inc
cmp
push
jp
mov
cli
adc
adc
jne
mov
cmp
lcall
pop
xor
jbe
in
lods
cs
out
in
adc
sub
in
cmc
xor
sub
mov
adc
stos
or
cmpsb
stc
xchg
or
pop
inc
inc
pop
jecxz
sub
cmp
fs
xchg
push
negb
bound
jae
mov
xor
enter
divl
adc
insb
sbb
xor
pop
jle
outsb
into
push
sub
xlat
xchg
fdivs
inc
inc
subl
adc
dec
shlb
hlt
dec
dec
gs
out
push
movsl
push
jp
push
mov
sub
lods
loopne
lods
push
ja
mov
pop
repz
cmp
mov
push
int
pop
hlt
pusha
inc
insl
sub
push
cmp
push
cmc
in
inc
mov
shrl
cmc
imulb
rcrl
mov
push
into
aad
cltd
inc
dec
xchg
aam
test
arpl
sub
pop
std
sub
ss
testl
sub
test
and
inc
xor
sahf
adc
mov
lds
cmp
outsb
stos
or
xchg
xor
or
push
cmp
inc
mov
psrlq
repz
repz
inc
movsl
insb
andl
jbe
dec
xor
imul
xchg
sbb
sub
mov
fs
jl
mov
pusha
dec
cmp
sub
in
jg
dec
sub
mov
in
dec
push
and
and
push
mov
sub
mov
cmp
jne
cmc
or
sub
arpl
dec
inc
sti
lods
bound
xor
fs
insl
or
dec
mov
cmp
movsb
xchg
fldcw
test
cmp
sub
aaa
and
xchg
jae
or
xor
push
fsub
fistpll
icebp
dec
push
and
lret
pop
push
stos
sbb
inc
sub
jmp
ljmp
andb
lret
fnclex
scas
stc
push
xchg
cmp
inc
pop
adcw
mov
cmp
xchg
repz
dec
pop
outsb
dec
mov
in
xchg
sub
dec
inc
aaa
arpl
inc
xchg
dec
cmp
pop
sub
les
mov
push
xlat
dec
push
bound
cld
imul
dec
sarl
leave
jns
pop
dec
dec
push
lds
adc
inc
imul
inc
inc
fisubrl
outsb
and
jbe
pop
and
push
cmp
stos
shrl
bound
lret
pop
mov
lcall
pusha
lret
dec
add
xchg
clc
mov
sub
sub
imul
shrl
in
out
xchg
inc
ljmp
dec
in
addb
pusha
addr16
rol
out
pop
xchg
out
add
adc
jmp
pop
test
sbb
repz
mov
pop
or
push
sub
bound
jmp
and
outsl
in
shlb
imul
scas
das
cmp
jmp
aam
xchg
adc
mov
ss
fistps
fsubrs
xchg
jl
ja
sbb
out
push
sahf
jp
push
dec
pop
punpcklbw
sub
mov
stc
xor
push
mov
bound
mov
xchg
mov
cmc
dec
out
xchg
lret
inc
repz
jb
xchg
xor
les
rol
xor
popa
pop
outsl
sub
jmp
js
imul
nop
cmp
in
pop
in
cs
add
xor
fs
fdivrp
lds
sti
adc
icebp
xorb
mov
insb
stos
xlat
inc
sbbl
sub
or
bnd
mov
jg
dec
cmp
bound
cmp
call
xor
jo
out
rcl
mov
data16
and
mov
mov
test
push
mov
shr
adc
sub
sbb
mov
pop
sub
stos
call
xor
cwtl
das
lods
push
inc
xor
lret
cmp
cmp
dec
stos
icebp
adc
pop
pop
adc
std
je
sub
adc
push
iret
pop
cmp
or
ds
scas
jp
stos
pop
mulb
adc
dec
in
adc
xor
aaa
js
jno
jmp
push
cmp
or
test
das
xor
sub
xlat
adc
pop
sub
scas
push
in
sub
popf
pop
pop
imul
and
mov
ds
hlt
cs
jnp
pop
gs
mov
inc
inc
xor
jl
popa
jo
cmpsl
mov
arpl
mov
test
jne
mov
xchg
out
adc
jno
pop
test
adc
or
ljmp
push
sub
aad
jb
xor
inc
xor
xchg
div
jno
xor
jge
mov
xor
lock
push
xorb
xor
xchg
jno
fbstp
sub
testl
mov
sbb
xor
pop
xchg
mov
cmp
in
or
ja
jecxz
clc
or
pop
arpl
xchg
mov
mov
push
or
cmp
enter
insb
stos
pop
sub
mov
into
dec
iret
sub
cmp
aad
inc
xor
pop
mov
pushl
push
test
dec
pop
inc
inc
xchg
inc
dec
cmc
in
adc
js
add
sbb
repnz
test
pop
add
imul
and
jb
pop
sub
dec
push
xor
sub
mov
sub
cs
daa
rol
out
mov
popa
fcmovne
repz
lods
jb
rolb
lock
cs
sub
jmp
push
subb
pop
sub
leave
push
push
xlat
xor
insb
repz
mov
popa
pop
sub
pop
fisubl
shr
fisubl
dec
dec
adc
mov
pop
sbb
mov
cmpsb
mov
shr
push
std
inc
imul
xor
adc
pop
push
xchg
mov
xlat
cmc
add
pop
stc
out
mov
dec
cmp
sub
insl
dec
out
lcall
and
sub
imulb
repnz
jmp
in
mov
aaa
popf
fidivrl
sarb
cwtl
adc
in
sbb
jle
cs
push
xor
into
mov
mov
lods
addr16
add
or
cmp
xlat
frstor
dec
xchg
dec
push
out
es
xchg
aaa
cmp
cmp
js
call
xor
out
addr16
jo
push
lods
addr16
orb
rcll
push
dec
ljmp
cmc
push
pop
ds
jno
or
mov
xlat
in
cmc
or
test
div
lods
std
push
das
je
cmp
xchg
mov
dec
sub
xchg
and
out
xlat
mov
out
cmpsl
stos
lahf
aas
pop
dec
mov
movsb
xor
jns
lods
jp
inc
cmp
fstpl
fdivrl
mov
pop
rorl
cmpsl
in
jno
jnp
xor
and
jp
scas
mov
and
jmp
inc
popf
inc
jns
fiaddl
jg
dec
inc
test
fwait
sub
lret
shll
mov
out
arpl
popf
xchg
cmpsl
shlb
jns
lods
pop
push
push
shll
ss
lret
pop
cmp
cs
pop
mov
test
inc
xlat
pushl
sub
imulb
lahf
ja
jnp
xor
cs
cmp
xchg
push
pop
jnp
mov
mov
mov
xchg
iret
ficomps
inc
ja
cmp
add
dec
xor
sub
push
and
sub
and
fwait
bound
jne
and
xor
sub
mov
aaa
push
imul
stos
mov
dec
shrb
aaa
dec
test
add
outsb
add
pop
inc
cmpsl
stos
je
dec
cmpsl
xor
mov
inc
ja
js
add
cmpl
mov
lods
lods
aaa
cmp
mov
xor
dec
cli
inc
mov
xor
fdivs
sarl
ja
pop
adc
xor
push
cmpsl
push
mov
inc
aaa
mov
sbb
lahf
sahf
aad
sub
das
roll
sub
ljmp
fwait
pop
popa
or
jl
cmp
ror
int3
lods
mov
cmp
mov
insb
mov
scas
push
xchg
dec
push
sqrtps
int3
shrl
stc
jp
dec
inc
pop
lahf
pop
xlat
daa
and
stc
in
xor
adc
out
push
xor
mov
xor
jns
aam
push
mov
cmp
mov
pusha
dec
pop
mov
outsl
pop
sub
stc
test
push
dec
cmp
ds
push
fistpl
sahf
data16
mov
cmpsl
adc
dec
ja
ds
daa
jno
dec
adc
jg
dec
jmp
add
push
loopne
xor
xchg
xor
insb
shrb
or
std
in
xor
cmp
mov
cmp
sub
xchg
sub
push
jnp
dec
stos
inc
dec
xchg
or
loop
mov
cmp
xor
inc
jo
out
mov
add
aaa
and
loop
aad
dec
push
xor
push
ficoms
adcl
pop
pop
mov
push
dec
mov
mov
dec
mov
mov
cmp
stc
xchg
add
cmp
pop
xor
cmpsl
repnz
fldcw
mov
iret
xchg
in
stos
pusha
dec
sahf
adc
jmp
ret
adc
jne
dec
pop
lret
add
mov
sub
aam
decl
adc
fstps
jle
aas
lods
pop
in
xor
mov
in
inc
leave
cmp
xchg
mulb
fwait
rorl
wrmsr
ja
cmp
faddl
cmp
test
lock
xchg
leave
cmp
cli
bound
or
cmp
in
sti
push
dec
mov
fistl
and
xchg
dec
dec
mov
pop
arpl
test
dec
xor
inc
into
pop
subb
pop
pop
test
xor
mov
xor
gs
mov
aas
lods
cmp
sti
xlat
lock
dec
dec
pusha
ljmp
pop
fstps
pop
pop
int
std
js
cmpsl
sub
xchg
push
sub
out
dec
loopne
rcl
mov
cs
in
loop
push
sub
push
imul
int3
out
fisubrl
jmp
aas
sbb
filds
mov
jbe
inc
dec
and
or
pop
mov
xor
inc
xor
mov
cmp
repnz
out
fisubrs
dec
dec
scas
push
mov
sub
cmp
or
jmp
enter
inc
xor
test
pop
fnsave
aas
imul
push
mov
imul
aaa
inc
es
test
sbb
nop
sub
cmp
sub
mov
mov
lds
jae
cmp
les
or
push
pop
mov
jp
sub
dec
pop
test
adc
xor
nop
in
scas
repz
es
and
mov
push
pop
mov
dec
mov
mov
xor
mov
xchg
adc
cmp
imul
push
loop
scas
sahf
inc
dec
aaa
sub
xor
push
fidivl
lret
lcall
xor
mov
pop
push
mov
rcl
insl
push
ljmp
lcall
outsl
mov
xor
popf
out
mov
jb
bound
stos
mov
sub
insl
inc
lock
jl
or
inc
sub
add
shl
mov
sti
jae
or
xor
jmp
and
pop
sub
sti
fistl
xor
lret
xchg
enter
rolb
mov
push
pop
push
nop
fdivrp
pusha
pop
xor
movb
ljmp
pop
fs
repnz
fnstsw
call
ds
push
std
sahf
inc
sub
ficomps
or
js
push
es
mov
sbb
popa
xor
arpl
std
lods
pop
cmp
inc
lods
inc
xchg
mov
bound
pop
shlb
cmpsl
mov
dec
out
or
lret
inc
inc
xor
rorl
or
shrb
mov
icebp
xor
in
push
shll
sbb
xor
loop
sub
pop
imul
push
push
cmp
mov
cmp
pop
pop
ljmp
sbb
pop
ljmp
sahf
xchg
dec
int3
dec
jo
push
cmp
imul
cmc
icebp
push
cs
data16
push
cld
xchg
das
lods
aaa
stc
cmp
pop
dec
popf
xchg
cmp
pop
stc
call
cmp
pop
dec
dec
adc
cmpsl
iret
sbb
adc
or
lret
mov
bsr
fsts
cmp
xor
cmp
inc
das
jg
push
push
pop
push
nop
cmp
aam
push
stos
mov
push
push
mov
xor
pop
leave
push
cmpsb
lahf
xor
inc
pop
sub
icebp
mov
out
push
adc
ljmp
dec
arpl
fisubl
loopne
addr16
iret
inc
push
jno
push
imul
xor
sub
inc
sbb
cld
xchg
testb
scas
sub
sbb
pop
movb
std
fsubrs
jecxz
imul
inc
rcrb
jno
mov
push
inc
ljmp
lcall
movsl
add
mov
or
hlt
leave
sub
jae
pop
push
mov
mov
bound
or
inc
dec
mov
shrl
or
mull
movsb
cmp
push
cmpsl
dec
mov
insb
xchg
shlb
mov
das
imul
inc
sbb
test
lods
push
dec
jmp
adc
dec
dec
jbe
sub
sbb
dec
sbbl
push
insb
jg
dec
loop
scas
xor
xor
and
repz
pop
mov
mov
pushw
xor
repnz
xor
push
adc
sti
cli
out
dec
push
adc
cmpsb
test
clc
or
dec
or
filds
mov
jg
jp
gs
fwait
mul
inc
into
xor
cs
out
fcmovnu
cwtl
cmp
push
push
fidivrs
push
cmp
sub
and
mov
jp
cli
push
inc
xchg
cmpsl
adc
lods
gs
jne
loopne
lret
clc
jno
shlb
pop
dec
pop
push
rol
sub
negl
add
adc
dec
outsb
jp
cld
inc
test
sub
pop
outsl
call
fs
xor
sub
cld
out
jmp
popa
imul
adc
mov
push
dec
pop
test
push
in
push
bound
push
inc
and
adc
cmp
gs
mov
sbb
std
jne
leave
cmpl
fcoml
es
pop
inc
aam
fwait
in
mov
dec
pop
sub
sub
sub
out
outsl
hlt
inc
mov
fnstenv
adc
filds
and
jb
dec
sub
insb
arpl
and
hlt
les
cld
mov
sbb
bound
out
jmp
loop,pn
inc
stos
push
pop
out
cmp
lods
cwtl
xchg
sub
cmp
and
cli
mov
pop
xchg
das
sub
outsb
sub
test
adc
push
pop
jns
push
add
inc
xor
adc
js
cmpl
xchg
dec
jno
std
mov
leave
test
pop
xlat
sti
cld
dec
stc
ljmp
ficompl
sub
push
fstpl
pop
sbb
jle
push
cmp
add
push
sub
and
fstps
inc
push
add
add
imul
mov
jle
aas
pop
pusha
add
xchg
mov
idivb
push
test
xchg
dec
or
in
mov
cwtl
pop
mov
shrl
outsl
push
inc
dec
xchg
mov
std
shlb
repz
dec
and
mov
les
xor
sbbb
cmp
dec
imul
outsl
xor
stc
xchg
xor
pop
xor
into
sbb
pop
dec
iret
std
js
cmp
out
pop
js
outsl
fnstcw
push
sub
sub
in
pop
push
sbb
imul
adc
adc
out
sbb
sub
pop
jg
ret
mov
pop
call
dec
mov
inc
sub
xchg
sub
push
jno
xchg
dec
ljmp
add
ljmp
mov
jg,pn
subb
dec
sbb
xorb
add
jnp
inc
ficoml
pusha
loopne
mov
push
xor
sub
loope
mov
sub
insl
addr16
cld
test
mov
adc
imul
cmpsb
cmp
push
xor
in
cmp
adc
push
dec
push
jo
pusha
push
dec
cmpsb
mov
mov
push
inc
fnstcw
ljmp
cld
xor
jo
fstl
inc
mov
imul
push
mov
fiaddl
hlt
jno
push
out
loopne
push
dec
pop
jmp
add
pop
inc
mov
jp
pop
loopne
jl
add
stc
mov
jle
push
add
jne
cmp
lret
arpl
dec
sub
mov
sbb
jle
cmp
mov
push
dec
push
lock
inc
std
cmp
ret
jp
cmp
xor
movsb
and
test
xor
inc
test
lahf
imulb
inc
cmp
iret
cmpsl
jl
cld
jno
xor
jmp
lea
inc
push
out
subb
ljmp
out
xor
xchg
repnz
mov
jne
xor
lret
idiv
mov
mov
xor
push
mov
loopne
mov
mov
addr16
sub
xor
push
adc
adcb
jns
stos
push
pop
sub
xchg
imul
ss
cltd
in
fstl
inc
popf
pop
jge
mov
ljmp
sub
sti
push
ljmp
fldt
imul
shll
dec
add
jno
das
inc
cmp
popa
out
xor
xor
mov
sbb
loope
xchg
inc
sub
cmpsl
out
or
js
les
cs
pop
dec
dec
inc
and
in
dec
dec
dec
iret
push
mov
jo
cmp
cmp
data16
sbb
out
out
xchg
cmp
fimuls
int
test
jae
or
xor
popl
lea
push
shrb
jp
sub
sub
cs
outsl
lea
jg
in
mov
stos
inc
cmp
dec
daa
rcpps
jp
sahf
out
jle
mov
dec
fisttps
sbb
add
xor
dec
sub
cmp
inc
cmp
push
subl
dec
cmp
mov
imul
popa
dec
sbb
out
adc
pop
outsb
fwait
cmp
mov
jno
xchg
xor
daa
xchg
mov
sub
movsb
jge
ljmp
dec
pop
imul
lret
adc
mov
stos
jp
inc
cmp
dec
xchg
sub
pop
xchg
fnstenv
sti
bound
pop
cli
stos
xlat
fdivrp
push
push
das
shrb
data16
mov
dec
jb
test
orb
int3
aad
add
jl
cmp
rolb
jge
js
sbb
cmp
inc
mov
adc
sarb
xor
mov
dec
cmpsb
je
sub
bound
imul
push
loop
scas
inc
clc
in
jae
les
sahf
aaa
scas
mov
mov
scas
xor
das
sub
mov
xorl
cmp
sahf
sub
mov
int3
dec
and
add
imul
dec
jmp
insl
jbe
shlb
cwtl
repz
inc
inc
xor
div
jle
jb
dec
push
cmp
cmpl
xor
imul
mov
lock
fwait
js
gs
pop
pushf
or
sar
mov
jno
out
mov
pop
aas
lock
lret
cmp
dec
pop
popf
hlt
sbb
pop
mov
aad
test
push
lcall
sub
out
sub
inc
or
jle
dec
and
mov
mov
lods
les
jmp
test
repz
dec
test
aad
rorl
int3
dec
cmp
xlat
mov
aam
xor
lods
sub
aaa
mov
jnp
dec
dec
inc
lock
bound
dec
jle
pop
cmpsl
aam
jp
gs
sub
mov
in
xor
and
cmp
sbb
test
jo
sbb
xchg
xor
gs
ljmp
add
fs
fs
int
sbb
inc
jmp
ret
jne
pop
cmp
xlat
fildll
xchg
inc
xlat
movsl
and
test
out
pop
sarl
sub
dec
inc
jnp
insb
cmp
xor
inc
iret
cmp
cmp
std
fstps
cmp
inc
cld
roll
jne
icebp
pushf
ret
das
pop
mov
lods
iret
cmp
xchg
xor
cld
clc
dec
imul
adc
xor
pusha
sahf
pop
ss
push
sahf
cmp
out
shlw
mov
data16
dec
pop
outsl
inc
jmp
add
or
jne
sub
insl
lret
cmp
pop
push
lret
add
push
inc
pop
sub
les
mov
in
push
in
imul
ja
inc
test
pushf
inc
in
in
roll
sub
lods
insb
mov
cmp
fmull
sub
test
inc
push
out
pop
or
mov
and
aam
cmp
xlat
in
dec
cmp
cmp
adc
push
leave
sbb
fadds
cmpsl
push
xchg
in
push
loope
out
in
dec
loopne
pusha
sub
mov
mov
inc
adc
out
ds
jnp
dec
mov
movsl
push
mov
jo
insl
stos
aaa
cmp
or
mov
jne
gs
sub
mulb
jo
cmp
xor
sbb
mov
xchg
sub
push
jo
lret
push
rorl
divb
sub
cli
add
inc
sub
rclb
pop
test
mov
in
les
dec
out
fildl
mov
or
mov
test
push
sub
jae
cld
arpl
into
xor
shl
inc
add
das
fs
subb
xor
mov
push
pop
xor
jo
in
adc
cmp
movsl
adc
loop
add
inc
out
xchg
mov
data16
mov
lock
mov
movsb
stos
jnp
push
cli
jmp
scas
mov
daa
xchg
call
dec
ja
jp
ss
mov
out
pop
mov
inc
popf
add
lods
cmp
cmpl
mov
popa
pusha
and
stos
lods
sbb
arpl
pop
or
mov
hlt
pop
sub
repz
jg
mov
lods
js
in
jnp
aas
stc
and
ljmp
jbe
pop
dec
push
add
inc
das
xor
cmp
sarl
push
push
insl
subb
pop
jb
jbe
xor
mov
jmp
pop
sub
stc
test
cmp
xchg
shlb
jmp
sub
and
cmp
leave
xorb
pop
cmpl
push
and
jp
fs
ja
movsb
cmp
mov
pop
aaa
js
mov
sub
push
leave
fisubrl
popf
push
insl
dec
pop
xchg
subb
dec
nop
push
je
stc
jo
pop
sub
adc
xchg
xor
and
repz
jae
sub
mov
pop
adc
insb
in
and
sub
gs
in
lods
push
inc
aaa
test
xor
mov
clc
push
dec
decl
push
xor
mov
xor
std
push
cmp
nop
sbb
inc
adc
cmpsl
or
cwtl
sub
mov
inc
cmp
and
cmp
loope
jecxz
xchg
cmp
pop
popa
jne
pop
push
push
mov
jno
xor
adcb
mov
lcall
jo
jl
das
push
inc
xor
inc
fimull
imul
popf
pop
mov
cmp
or
add
xor
push
cs
cld
out
popa
xor
sub
xchg
cmp
xor
mov
jb
dec
sti
cmp
in
sub
cmc
divb
add
xor
inc
xor
clc
js
out
cmc
inc
inc
mov
adc
sarb
scas
mov
in
popa
outsb
jb
cmp
inc
enter
jmp
mov
mov
cmp
jge
sahf
les
scas
call
adc
fistpl
loope
jg
push
inc
fstl
leave
cltd
dec
cmp
jo
sbb
movsl
dec
jmp
mov
dec
addr16
push
xor
push
xlat
sahf
lock
out
push
xor
inc
cmp
push
push
imul
xor
loope
outsl
inc
sub
jp
dec
ljmp
lret
pop
sub
out
inc
pop
dec
sub
sub
fdiv
xor
test
dec
repnz
stos
mov
mov
pop
gs
xchg
imul
pushf
clc
sub
aad
jo
test
xor
out
cltd
mov
inc
cmc
mov
pop
or
mov
jg
xor
int3
idivl
push
jae
mov
or
inc
out
and
add
mov
sahf
cmp
mov
and
aaa
and
or
dec
ljmp
pop
xlat
sub
add
inc
ds
inc
jno
notb
mov
jg
inc
jo
mov
cmp
imul
mov
mov
pop
adc
ljmp
push
dec
mov
pop
dec
shrl
inc
or
inc
push
icebp
outsb
mov
idiv
adc
fs
ljmp
jp
push
test
jno
pop
dec
xlat
jmp
pusha
pop
lret
outsb
bound
loopne
sbb
test
pop
fisttpl
and
bound
jge
lock
stc
aaa
mov
dec
sub
xor
mov
dec
dec
addr16
das
aam
and
and
add
pop
push
xchg
cmp
pop
mov
movsl
xchg
mov
push
sbb
lods
jnp
or
repz
out
dec
pop
out
xor
push
pop
or
cmpsl
ret
push
std
icebp
add
test
push
pop
cs
jmp
xor
xor
dec
ja
insl
hlt
pop
adc
pop
jmp
cmpl
fsubrp
ja
test
mov
stos
mov
jbe
iret
adc
xchg
mov
cmp
jb
inc
dec
ljmp
inc
fwait
jbe
xlat
movb
mov
pop
jmp
cld
jmp
push
adc
imul
es
xor
push
dec
test
scas
cmpsl
inc
jmp
pop
mov
jo
push
inc
adc
je
cmp
mov
outsb
pop
pop
cmpsl
push
xor
mov
ds
xchg
lods
mov
inc
sub
in
fcmovb
inc
ljmp
lods
adc
arpl
add
arpl
imul
lret
push
push
repz
int3
bound
sub
stos
cld
sub
inc
xor
jmp
daa
sub
je
out
mov
jmp
call
arpl
jecxz
clc
mov
cmpsl
cmp
arpl
cmp
cmpsl
roll
jge
xor
mov
test
push
pop
notb
stc
push
popa
fiaddl
mov
ret
jle
cmp
cwtl
gs
xor
repnz
lods
rcrl
pop
mov
arpl
das
xor
inc
ja
pop
inc
in
pop
cmp
or
scas
loopne
addr16
push
gs
cld
data16
mov
cmp
je
inc
addr16
xlat
in
ja
dec
bound
stos
push
in
push
mov
xchg
or
mov
push
or
jno
pop
sti
mov
sub
push
aas
mov
lods
mov
and
sub
loop
dec
mov
pop
push
xchg
ja
lahf
aaa
ss
sub
cli
divl
xor
daa
and
pop
or
push
xchg
mov
pusha
xchg
out
insb
mov
inc
pop
pop
ret
test
pop
iret
jo
pop
sub
jl
pop
ljmp
push
bound
sar
lcall
xor
outsb
aas
frstor
sub
sbb
lds
cs
jb
jno
test
rcll
aaa
or
jne
mov
inc
xor
sub
push
inc
jbe
sbb
imul
dec
adc
test
std
and
inc
jecxz
jge
and
xor
and
sbb
inc
pop
enter
out
test
dec
in
mov
fs
out
pusha
mov
inc
inc
dec
dec
hlt
mov
inc
jge,pn
ds
sub
xorb
jb,pn
push
in
bound
sub
insl
cmp
add
rcrb
inc
das
push
inc
jae
pop
rol
loop
icebp
shll
das
lret
ds
dec
mov
fs
xor
lods
jnp
das
test
sub
dec
xlat
mov
cmp
mov
ss
push
push
shlb
add
inc
cmp
sub
decl
adc
pop
inc
fisubs
outsl
sub
cmpsl
jecxz
mov
xor
loop
jb
jge
push
mov
sub
jno
ss
jmp
xlat
cmp
push
or
add
xor
out
int3
jb
pushf
inc
dec
mov
lea
rcrl
mov
bound
jp
aaa
mov
push
outsb
mov
xor
push
sti
add
mov
push
pop
sub
sub
xchg
cmp
repz
rcrb
insl
inc
push
jmp
push
mov
adc
enter
mov
cmc
cmp
dec
push
ljmp
fidivrs
push
jecxz
sar
hlt
cs
sub
cmp
cld
inc
xor
or
mov
popa
xchg
lods
aas
gs
mov
pop
cmp
stos
or
sub
lret
xchg
repz
or
cmp
stc
adc
stos
dec
cmp
ficompl
xchg
sub
add
bound
bound
sub
sbb
outsb
sbb
or
int3
inc
push
or
lds
pop
inc
fisubs
fsub
aam
mov
mov
sahf
pop
mov
roll
idivl
mov
mov
push
fisubs
xor
push
incb
fdivr
iret
int
insb
add
popa
das
jnp
sbb
add
das
out
mov
or
and
mov
sub
push
jge
push
jb
push
sub
or
pop
jnp
in
mov
orb
enter
scas
cmp
add
jmp
push
xor
sub
cmpsl
add
push
sahf
mov
icebp
sub
cltd
dec
je
adc
sub
jmp
pop
cmc
jo
pop
out
mov
out
xor
push
pop
outsl
push
pusha
pop
repnz
xchg
mov
dec
aas
out
jmp
adc
xor
mov
and
jae
pop
dec
jge
cmp
addr16
std
jns
ja
movsl
stos
xor
popa
lock
outsl
mov
push
cmp
mov
inc
pop
aad
push
sbb
stos
shl
arpl
fildl
pcmpeqd
jle
or
fs
and
loopne
sti
mov
mov
aad
push
lock
sub
fs
popf
dec
sub
xor
addr16
jl
inc
dec
mov
sbb
shlb
mov
icebp
gs
mov
sub
jg
lods
in
or
ljmp
push
dec
push
ljmp
stos
outsb
mov
cmp
in
push
xchg
bound
xor
cltd
cmp
cmp
pop
push
sahf
jnp
xor
shl
cli
adc
pop
movsl
sub
addl
in
xor
fs
xchg
jo
sub
es
movsb
nop
sti
mov
pop
inc
pop
orb
dec
test
mov
xchg
mov
pop
das
inc
push
loopne
xchg
stc
push
das
mov
lahf
add
pop
sub
mov
inc
ds
jg
pushf
in
lock
pop
scas
bound
incl
cmp
cmp
adc
xor
sub
insb
in
cmp
push
jbe
fidivrl
push
insb
lret
fcomps
test
sbb
mov
gs
test
int
jge
ljmp
arpl
adc
adc
xor
fisubl
mov
fimull
stos
push
inc
pusha
pop
shlb
hlt
xor
je
shrl
repz
sub
ljmp
rol
cmpl
or
inc
adc
imul
pop
push
sbb
ret
adc
in
pop
rorl
xor
sahf
ja
lods
arpl
jns
dec
imul
ret
inc
fdivrs
jne
pop
push
sbb
push
sbb
jae
pop
dec
test
sub
hlt
jecxz
iret
movsb
xchg
leave
in
scas
movl
xor
sub
xlat
cli
out
pop
dec
rcll
add
dec
movsb
adc
aaa
dec
or
lahf
ret
push
xor
cmp
daa
mov
mov
and
dec
inc
xor
dec
mov
inc
add
jp
xchg
xor
in
add
mov
mov
imull
and
inc
ljmp
push
push
sub
add
xchg
mov
in
xlat
scas
pop
fldt
push
pop
push
aas
lods
mov
mov
stos
push
add
xchg
mov
sti
pop
dec
js
aaa
push
jnp
lods
lret
repz
jp
data16
rcr
scas
mov
and
jns
out
xor
pop
xor
mov
popa
add
jl
sub
stc
imul
xor
pop
stos
aam
mov
imulb
cltd
adc
add
outsl
outsb
inc
shl
xor
xor
test
xor
jno
mov
xchg
les
pop
outsl
xor
adc
aaa
test
dec
shlb
mov
push
pop
mov
popf
mov
sbb
xchg
mov
dec
sub
jmp
xchg
not
rcrb
jg
rclb
scas
push
aas
push
cld
cmp
in
and
push
jae
std
dec
inc
xor
fwait
mov
push
das
pop
aam
xor
mov
clc
imul
aam
cmp
jae
mov
int
sub
jg
add
lahf
int3
stos
mov
xchg
in
inc
je
pop
cmp
cmp
xlat
mov
pop
or
sbb
in
popa
ds
push
data16
js
outsl
cmp
pop
enter
cmp
jmp
push
fxch
repz
push
sub
push
cmp
inc
outsl
movsb
pop
push
cmp
cmp
cmp
cld
int3
shll
xor
or
lahf
xor
les
jmp
and
in
mov
cmp
test
push
inc
loop
xor
push
mov
pop
mov
cltd
pop
out
je
mov
in
arpl
mov
ljmp
repnz
lock
cmp
jno
push
push
xchg
pop
shl
jmp
cmp
dec
jbe
repz
setbe
jge
jmp
and
xor
dec
inc
sbb
lds
xor
ja
in
lcall
push
dec
xor
dec
dec
sub
addl
sub
push
xor
bound
xchg
scas
movsb
pop
shl
pop
cmpsl
mov
push
in
pop
and
notb
aad
ret
leave
addr16
icebp
cmp
dec
inc
icebp
lret
xchg
dec
dec
jmp
or
adc
ljmp
mov
into
movsl
mov
imul
or
in
in
enter
cmp
sub
cmp
mov
shll
test
cld
icebp
stos
aaa
dec
mov
jno
in
or
jmp
lods
cmp
lea
or
repz
aas
jmp
jb
das
das
jl
sub
es
jp
push
ss
fidivs
or
fwait
aaa
int3
inc
dec
fldlg2
add
sub
sbb
pop
add
stos
xor
out
xor
push
dec
jmp
add
mov
pop
xor
or
jmp
inc
jb
cmp
loop
adc
std
or
dec
pop
cmp
lock
mov
cmp
sub
cmp
sub
fwait
js
pop
fidivrl
mov
scas
mov
sbb
adc
dec
gs
fisttpll
or
inc
in
mov
inc
pop
or
lret
xchg
pop
jg
inc
xlat
pusha
inc
cmpsl
jl
add
cmp
loopne
fmuls
and
pop
aaa
xor
aaa
sbb
repz
cmp
mov
lret
mov
adc
leave
inc
cwtl
pop
add
inc
dec
sbb
mov
dec
and
mov
ret
pop
dec
jno
mov
xor
jae
stc
cmp
dec
sub
cltd
mov
movsb
cmpsb
fstpl
mov
cmp
and
ja
mov
inc
sbb
mov
imul
test
outsb
mov
movsl
dec
cmp
sahf
mov
sub
push
mov
fidivrs
push
mov
adc
xor
addr16
mov
inc
gs
xchg
out
rclb
mov
sub
push
jl
pop
insl
lahf
bound
adc
or
out
add
subb
push
movsl
mov
dec
cli
shlb
lret
push
ds
bnd
pop
nop
pop
addr16
push
adc
push
or
shl
hlt
add
sub
mov
pop
push
sub
imul
cmp
adc
fstps
sti
jo
sub
dec
sub
cmp
jae
and
in
cwtl
pop
sbb
pop
mov
in
or
imul
lods
ss
mov
popf
in
jle
sub
adc
sub
dec
jnp
in
add
mov
lock
jg
cmp
mov
push
mov
repz
xchg
or
inc
int
iret
lods
dec
jmp
cli
xor
xchg
sub
cmpl
cmp
and
das
negl
inc
mov
mov
jle
bound
fidivrs
fisubs
dec
cmp
mov
mov
xchg
cs
loope
ljmp
inc
push
mov
inc
dec
cmp
and
loope
sarl
cmp
cmp
scas
fstpt
outsb
popa
dec
push
in
sarl
xchg
leave
mov
sti
cmp
jo
add
arpl
cmp
mov
adc
inc
jo
repnz
mov
and
mov
xor
push
add
stc
xchg
adc
or
rcrb
lods
mov
adcb
stos
pop
sub
cmpsl
daa
out
cmpsl
inc
rclb
jle
mov
les
mov
bound
mov
shlb
test
pop
out
jbe
cltd
rclb
xchg
jno
rolb
bound
mov
stos
negb
gs
xor
push
sahf
adc
out
cmc
sub
lock
push
rcrb
fildll
ret
dec
mov
jmp
inc
inc
inc
pop
adc
sub
lret
imul
lods
push
jmp
gs
pop
cli
xor
aas
cmp
scas
roll
inc
sti
lret
loopne
jo
cmp
dec
xor
mov
inc
test
mov
or
jbe
push
inc
repz
mov
mov
adc
inc
jb
cs
xlat
movsl
fistl
icebp
inc
dec
inc
pushf
mov
jp
cmp
pop
sub
mulb
stos
xchg
in
dec
xchg
push
pop
inc
mov
call
push
pop
fstpl
sbb
test
mov
xor
push
faddl
xor
pop
jnp
or
mov
cmp
sbb
mov
pusha
dec
xchg
lret
mov
lahf
cmp
imul
pop
shll
out
loope
negl
cmp
mov
les
dec
jmp
sub
adc
clc
lahf
jge
arpl
mov
jmp
jnp
mov
pop
push
cmp
outsb
js
inc
inc
cmp
ljmp
pop
imul
add
xlat
clc
cmp
insb
add
mov
push
cmp
or
dec
sub
testb
mov
dec
sub
lcall
outsl
inc
push
pop
or
cmpsl
mov
out
sbb
dec
dec
mov
xor
arpl
cmp
xor
xor
xor
push
scas
lret
cmp
fstpl
cmp
out
cmp
stos
add
sub
pop
push
das
sub
dec
out
clc
xor
mov
out
sub
add
sub
fs
das
jmp
or
gs
dec
push
aaa
xchg
bound
jmp
movsb
push
iret
xor
inc
xlat
outsl
outsb
pusha
pop
stc
xchg
cmp
cmp
fwait
aad
cmc
dec
sarl
push
cmp
pop
mull
add
call
addr16
arpl
out
and
lock
sub
das
clc
je
inc
sahf
pop
jbe
lods
mov
gs
pop
jne
pop
movsb
fs
bound
cmp
push
loopne
imul
in
ficompl
xlat
pop
iret
bound
in
das
inc
cmp
call
arpl
cmp
cmp
stc
call
xor
pop
jg
imul
jle
push
xchg
imul
mov
jbe
icebp
sub
lea
std
icebp
xor
lahf
lock
and
adc
roll
adc
xor
je
xor
push
fdivl
sti
adc
and
jns
mov
cltd
in
cs
dec
js
pop
push
push
jbe
adc
loop
cld
daa
icebp
les
xor
enter
in
mov
pop
loop
dec
lret
addb
inc
cmpsl
dec
rcrb
sarb
jmp
addr16
je
in
sub
jp
xor
dec
fisubrl
shl
xor
sti
or
jmp
jl
push
pop
imul
dec
ss
jge
ljmp
and
sub
int3
pop
test
xor
aas
or
or
test
xor
cmp
push
xor
out
test
fwait
test
scas
and
lods
push
jmp
xchg
mov
sub
inc
cmc
pop
lds
sub
pop
xchg
rcl
sub
push
pop
dec
sub
push
jl
xchg
mov
pop
ljmp
dec
mov
sbb
xor
fucomi
cmp
or
xor
lahf
pop
int3
outsb
xchg
stc
pop
or
les
push
add
cmp
test
xchg
out
das
pop
xchg
in
dec
stc
cmpsl
mov
inc
das
inc
ljmp
fwait
lock
or
in
stos
fwait
mov
es
pop
mov
movsb
xor
mov
jae
aas
lret
sub
addr16
dec
inc
shlb
dec
dec
xchg
mov
outsl
das
cmp
aam
shl
hlt
xchg
pop
jmp
mov
test
loope
movsl
pushf
imul
cmp
xor
in
add
mov
dec
in
cmp
mov
or
aas
xchg
sub
xchg
adc
lods
jg
popa
mov
dec
inc
sbb
inc
push
lret
sub
mov
sub
sbb
jno
add
fwait
dec
bound
aad
push
out
cmp
or
inc
pop
daa
clc
pop
sbb
dec
mov
lods
in
push
mov
cmp
cmpsl
roll
jns
push
pop
push
dec
insl
shlb
inc
xor
mov
jo
jb
gs
sub
pusha
lret
fs
nop
jmp
in
loope
xor
pop
xor
aad
stos
jg
insb
xor
inc
lret
xchg
test
out
fimull
lahf
push
rcrb
sbbb
lret
or
mov
insl
cs
xchg
js
sbb
cmp
xor
test
or
xor
mov
add
cld
stos
out
inc
mov
push
popf
pop
sbb
xor
lcall
stc
cmp
or
push
cmp
xchg
testb
mov
inc
dec
and
adc
popa
orb
arpl
add
push
push
loopne
dec
filds
sti
shlb
push
sbb
data16
aad
fisubrl
sub
cmpsb
clc
lock
sbb
lds
test
fistps
mov
pop
je
xor
sub
mov
insb
imul
lods
pop
mov
mov
sbb
cmp
xor
daa
sub
or
jnp
cmp
mov
outsb
sbb
int3
js
test
mov
sahf
lret
add
jmp
popa
jns
sub
fs
cmp
xor
lcall
inc
sar
stc
mov
shrl
xchg
sub
xorb
push
pop
stos
movsb
mov
jle
sub
je
xor
pop
pop
and
gs
mov
xor
push
dec
dec
aad
in
jo
lock
sbb
loopne
in
imul
or
ljmp
or
or
jnp
leave
out
je
push
xchg
fsubrs
data16
or
shll
pop
lods
sbb
popf
cmp
cmp
xlat
into
jmp
bound
loop
and
pop
pop
mov
out
pushf
cmp
or
lods
xorl
ss
cs
sbb
sarl
pop
data16
imul
adc
inc
sbb
add
dec
sub
add
pushf
ret
out
add
lcall
cmp
push
xchg
cmp
in
push
cmp
sub
pop
jns
scas
xchg
test
pop
mov
jmp
ja
sub
test
jno
idiv
gs
fistpll
mov
cmp
push
pop
add
mov
sub
es
arpl
pop
xchg
stos
cwtl
xor
mov
jg
nop
pop
movsb
pop
imul
cmpsl
mov
sub
xor
cmp
data16
push
jae
dec
shll
mov
sub
mov
mov
fldenv
jp
push
popa
andl
outsl
sub
daa
sub
add
aaa
adc
daa
cmp
jg
and
or
xor
push
adc
pop
test
clc
dec
shll
jno
pusha
les
gs
dec
jne
push
dec
push
xchg
mov
cmp
in
or
shl
push
adcl
mul
ss
push
ja
repnz
in
cmp
movsl
dec
pop
lea
scas
gs
or
dec
push
pop
lds
cmp
lcall
popa
movsb
scas
sahf
xor
sbb
mov
sub
pop
inc
pop
ljmp
ficompl
pop
dec
scas
jns
inc
push
mov
imul
inc
mov
test
shl
xor
shrl
ss
cmp
cmp
ljmp
fldt
dec
shll
lahf
inc
dec
dec
push
addl
xchg
fs
dec
inc
pop
mov
sahf
jne
data16
int
in
push
imul
and
xchg
mov
sub
cld
pop
imul
popa
les
cmpsl
cmp
repz
and
mov
jns
je
movsl
mov
jl
and
jmp
sub
mov
inc
mov
push
dec
jae
mov
gs
test
les
mov
push
inc
insb
cltd
mov
fsubrs
rcr
jne
cli
jl
pop
push
add
mov
cld
rorl
cmpsb
push
xchg
mov
idivb
out
mov
mov
sub
sub
xchg
in
jmp
dec
mov
mov
pop
push
bound
leave
loop
movsl
mov
cmp
jnp
hlt
adc
or
sahf
pop
mov
push
xchg
fldl
hlt
jmp
jno
lret
mov
mov
cmp
mov
jp
push
imull
mov
inc
cmp
jns
dec
mov
sub
push
push
insl
xchg
mov
ret
out
lret
xchg
adc
shrb
sbb
aad
lods
cmp
inc
mov
int
fiadds
dec
jb
inc
push
cmpsb
jbe
push
cmp
adc
xchg
pop
or
mov
imul
iret
bound
dec
imul
arpl
dec
sub
outsl
gs
cs
sbb
cmpsl
push
jae
cmp
ljmp
add
sub
xchg
in
xchg
mov
sub
mov
mov
push
and
mov
mov
xchg
repz
roll
cmp
imul
xchg
imul
xchg
cmp
inc
orb
mov
sub
dec
jmp
subl
stos
bound
pop
cli
add
icebp
xchg
pop
add
cmp
jecxz
adc
aaa
sub
mov
or
cmp
int3
or
ljmp
add
jge
aam
mov
mov
dec
cmp
sarl
faddl
and
aam
push
pop
sahf
cmpl
add
xlat
icebp
jle
dec
arpl
fisttps
push
xor
xor
fidivrs
sbb
push
push
outsl
sub
jb
into
jp
shrb
call
stos
aam
xor
movsl
dec
push
pop
push
mov
and
xchg
push
sbb
idivl
testb
adc
xor
sbb
stos
pop
xor
mov
dec
ljmp
jno
dec
mov
inc
xor
test
lahf
mov
inc
xor
lcall
pop
or
sbb
js
in
and
jns
insb
or
fidivs
outsl
int3
scas
dec
dec
mov
fsubrl
push
stos
or
pop
cmp
dec
and
xlat
bound
je
or
mov
pop
push
push
xchg
xchg
xchg
dec
or
push
cld
test
int3
sub
cmc
xchg
sub
dec
into
dec
adc
push
xchg
rcrb
clc
fldenv
stc
arpl
push
bound
cwtl
addr16
cmc
inc
fs
lods
xor
inc
mov
mov
add
cmp
std
xchg
pop
sub
mov
imul
repnz
sbb
out
mov
cmp
jg
and
or
sub
in
bound
inc
in
inc
push
rcrl
pushf
cmc
push
pop
push
cmp
jne
cs
fildl
shrl
dec
pop
xchg
je
fstpt
push
xchg
xor
sti
js
dec
push
test
xor
imul
pop
cli
adc
std
jne
cmpsl
xor
shlb
dec
cmp
scas
hlt
cli
jge
sub
stos
inc
pop
les
mov
insl
xor
add
dec
sub
mov
enter
dec
pop
popf
cs
fstpt
insb
popf
cmp
dec
js
pop
add
out
push
and
xor
fwait
ljmp
add
aam
ljmp
add
arpl
fs
jae
inc
out
xor
sbb
sub
pop
stos
mov
cmp
cmpb
inc
xchg
jo
bound
cmp
sub
shrb
jno
fwait
clc
addr16
ljmp
push
mov
or
sub
iret
cs
lea
aas
or
jb
xor
adc
and
lock
dec
adc
sub
inc
adc
data16
lcall
cmc
push
cmp
cmp
aaa
movsl
jnp
imul
pop
incb
shlb
gs
jecxz
inc
and
and
mov
sti
shlb
leave
icebp
inc
scas
push
push
test
or
jb
fisubl
jns
sub
shrl
hlt
dec
adc
dec
xchg
inc
inc
jnp
add
push
movsl
mov
cltd
in
sbb
pushw
and
dec
push
cmp
or
xor
pop
adc
in
std
sti
sub
dec
out
cwtl
adc
fidivrs
mov
jl
jmp
push
pusha
adc
imul
repz
or
lods
push
aas
or
inc
bound
popa
jmp
mov
inc
iret
mov
xor
inc
dec
inc
mov
cmp
sub
dec
pop
cmp
fs
repnz
adc
dec
outsl
decb
sub
sub
cmp
test
outsb
negb
out
arpl
shll
mov
dec
xor
push
xor
rcl
mov
push
lahf
sbb
iret
dec
sub
inc
dec
pop
repnz
leave
icebp
jp
push
sub
cmpsl
popf
xorl
das
sarl
xor
hlt
inc
fsin
mov
dec
xchg
mov
cs
jp
lahf
push
mov
xchg
out
pop
pop
jg
jmp
xor
sub
jp
std
das
aaa
sub
dec
ret
jns
ss
aaa
jmp
xchg
je
int
lret
ljmp
fwait
xorl
dec
mov
jmp
mov
inc
scas
gs
adc
insl
jmp
xor
les
inc
cmp
push
dec
cmp
in
sahf
jae
aad
dec
xor
insb
jmp
lcall
divb
xchg
pusha
ljmp
ds
imul
dec
sub
sub
add
push
push
push
fsqrt
add
data16
sub
sub
jmp
cmpsb
daa
in
sbb
sbb
mov
insb
cmp
xor
int
push
cwtl
nop
sub
lods
add
xor
bound
test
cmp
push
mov
sub
mov
sbb
int
pop
mov
stos
or
out
sub
xchg
leave
add
or
inc
sub
adc
mov
dec
movsb
jbe
inc
inc
cmp
movsb
jp,pn
inc
cmp
pushf
mov
pop
sub
jb
mov
bound
inc
push
push
pop
movsl
ret
sub
inc
inc
cmp
imul
stos
ds
pusha
cld
dec
jmp
mov
xchg
and
fsubr
lcall
add
in
mov
shrl
xor
inc
cmp
aam
cmp
dec
popa
push
mov
push
gs
add
ljmp
lahf
popf
dec
sbb
xlat
jle
repz
mov
in
jp
mov
xor
xor
jmp
jp
add
sub
xor
mov
bound
movsb
xchg
dec
in
cmp
popw
xorb
push
add
inc
rclb
sub
je
push
std
stos
cmp
xor
dec
lea
in
cmp
and
icebp
lods
lods
push
ja
jmp
dec
rolb
sub
add
mov
push
rcl
xor
imul
xor
int3
imul
push
mov
pushf
add
jbe
aaa
xor
imul
cmp
sub
gs
cmc
cmp
ljmp
inc
dec
movsl
ds
mov
xor
lods
sub
shl
or
jo
and
jb
cld
mov
daa
jg
imul
mov
push
sub
call
sub
push
sub
or
das
add
addr16
pusha
mov
sahf
insb
data16
imul
push
popa
arpl
cmpsl
mov
addr16
jnp
cmp
aaa
js
jae
jmp
push
jp
cmpb
cmp
pop
sbb
fiaddl
nop
push
push
les
pop
stos
xor
mov
inc
dec
insl
push
fs
popf
ret
dec
xchg
fs
stc
shrl
cmp
inc
mov
xchg
inc
out
scas
mov
add
stc
inc
or
mov
dec
dec
push
jmp
xor
push
sub
or
xor
lret
cmp
mov
lock
gs
inc
push
cmp
insb
ret
jp
dec
adc
scas
insl
ljmpw
mov
inc
outsl
sbb
lock
scas
stos
bound
bound
xor
test
dec
sbb
fbstp
hlt
outsb
bound
dec
push
jmp
cli
jo
push
pop
sub
test
dec
jbe
das
jp
cs
pop
ja
cmp
pop
dec
nop
cld
hlt
xor
sub
add
dec
cmp
cmc
lods
inc
ficoml
sub
cmp
and
and
imul
inc
sub
mov
in
test
jp
lods
fwait
adc
inc
sbb
sbb
cmp
sub
ret
cmc
pop
push
popf
push
mov
jbe
xor
bound
mov
mov
imul
pop
movsl
test
inc
fldcw
sub
pusha
cmp
jnp
sbb
je
push
ljmp
xor
lods
hlt
mov
dec
js
cli
ja
inc
cmpsb
mov
dec
push
fimull
pop
pop
sub
mov
jae
inc
pop
imul
jmp
mov
pop
out
add
rclb
testl
outsl
push
push
jbe
rcll
scas
sarb
inc
aas
cmp
add
lea
sbb
and
pop
mov
and
xor
push
dec
or
mov
and
xor
iret
jns
push
cmp
dec
pop
cmp
pop
lock
ss
aad
inc
pop
movsb
imul
sub
dec
mov
ljmp
mov
xchg
or
test
cmpsl
nop
xor
ljmp
mov
inc
pusha
lods
popf
movsb
rdtsc
leave
mov
sbb
sahf
sbb
popa
stos
cmpsl
in
das
aam
shrl
xor
xchg
xor
les
jge
dec
mov
and
hlt
or
pop
push
movsb
mov
inc
outsb
bound
stc
sub
pop
or
mov
dec
push
mov
xor
or
jg
cs
adc
push
pop
cmp
test
out
in
jmp
xor
xor
push
adc
dec
cmpsl
into
stc
mov
jnp
sub
jae
or
or
lods
in
out
cmp
mov
pop
cmpsl
jns
push
sub
jb
pop
inc
xor
mov
mov
int3
push
in
lds
in
hlt
insl
and
xor
sub
inc
fwait
adc
cmp
xor
daa
clc
sti
out
push
dec
shrb
and
icebp
jne
inc
pop
jo
jg
xor
jmp
push
push
add
in
mov
insl
or
imul
jbe
adc
imul
push
mov
out
add
das
xor
insl
pop
stos
push
jp
pop
bound
mov
push
inc
mov
mov
push
daa
fbld
or
dec
pop
sub
push
fdivrp
sub
lods
add
ret
sti
je
xor
in
jge
scas
inc
push
cmpsb
into
sbbl
jge
jmp
adc
dec
push
fistpl
out
clc
insb
dec
xchg
rcll
lods
cmp
inc
cs
adc
inc
dec
mov
cmp
mov
or
js
fisttps
pop
ss
ja
cmp
cli
push
jecxz
mov
jmpw
push
repz
inc
push
icebp
cmp
mov
jmp
xchg
cli
cmc
in
fimull
xor
push
mov
jno
jmp
orl
jmp
lods
cmp
imul
xor
push
dec
sub
dec
or
outsl
mov
dec
nop
fstl
pop
dec
divb
mov
les
pop
jge
stos
inc
cmp
jns
lock
bound
mov
out
imul
shrb
xchg
mov
xlat
jns
pusha
xor
sub
xchg
dec
sbb
jb
jg
push
dec
jmp
insb
divl
test
add
sub
fiaddl
out
adc
daa
outsl
movsl
xor
aad
xor
push
jnp
jl
mov
xchg
lods
sub
cmp
dec
popa
popf
sub
pop
hlt
jo
lahf
mov
popa
sub
push
pop
inc
in
xor
pusha
clc
jp
aas
ljmp
inc
and
dec
push
xchg
sub
inc
dec
sub
loop
pop
mov
aaa
xchg
cli
add
pop
js
je
jnp
push
lcall
sbb
aas
data16
in
outsb
stos
mov
jmp
pop
adc
clc
jp
arpl
pop
jb
cmp
jmp
lods
pop
cmp
cmp
aas
dec
dec
cmp
push
sbb
jb
jno
xor
sub
push
mov
inc
pop
xchg
inc
push
push
js
xchg
dec
xor
sub
cltd
add
cmp
sbb
xor
sbb
ss
cld
cld
pop
ljmp
cmp
aaa
data16
sbb
mov
xor
sub
add
subb
sti
adc
jl
mov
inc
data16
cmc
adc
add
jge
or
cmp
lock
out
cwtl
fs
bound
mov
pop
push
adc
ja
or
outsb
push
push
cmp
push
sub
std
icebp
jle
cs
scas
shrl
mov
adc
jp
pop
stos
jl
lcall
xchg
insb
in
and
aam
add
xchg
stos
das
push
cmp
push
mov
cmpsb
mov
fwait
sub
or
fdiv
lods
mov
push
cs
ret
mov
popa
pop
hlt
push
cmp
in
call
popf
in
outsb
jp
pop
sbb
enter
dec
dec
int3
sub
sub
pop
inc
fwait
fs
jmp
jp
rorb
sarl
add
mov
ret
ja
in
push
xor
inc
dec
xor
xor
jne
icebp
and
imul
inc
inc
xlat
inc
mov
shl
fwait
jne
dec
fs
popa
repz
mov
icebp
pop
sub
cmpl
push
bound
repz
xchg
ljmp
fistpll
push
dec
xchg
in
dec
sub
sub
icebp
push
int3
and
push
rcr
std
xchg
insl
lods
cmp
xor
pop
das
add
pop
sub
pop
pop
iret
sbb
cmp
jno
ss
aad
add
xor
sti
ss
mov
mov
aaa
bound
outsl
fsincos
int
inc
mov
pop
mov
and
push
dec
repnz
push
mov
movsb
mov
aaa
mov
aas
jne
aas
xchg
jge
pop
pop
cli
les
adc
les
fimull
mov
loope
pop
jg
inc
xor
gs
inc
pusha
dec
shr
add
icebp
lods
cmp
jmp
testl
fs
cmp
les
adcb
push
insb
add
test
je
imul
mov
in
sub
inc
aam
rorl
mov
incb
jno
jmp
add
dec
dec
mov
das
ss
outsb
pop
sbb
rorl
scas
in
pop
test
cs
sub
or
sub
mulb
push
xor
mov
jecxz
das
out
mov
mov
aas
je
pop
push
enter
bound
popa
lods
jg
dec
bound
repnz
and
mov
inc
inc
icebp
loope
dec
aaa
xchg
cmp
xor
mov
jmp
cmp
inc
xchg
xor
and
or
push
mov
inc
cltd
cmp
jmp
in
inc
dec
inc
sub
push
add
mov
push
dec
jmp
js
dec
dec
ds
mov
subb
push
lds
push
jnp
data16
aaa
jnp
aas
cmc
imul
pop
ss
lods
xor
xor
pop
mov
lahf
dec
xor
cmc
in
push
push
jmp
aad
adc
bound
loopne
mov
aas
clc
test
testl
js
data16
add
out
dec
je
ss
gs
daa
outsl
fbstp
cs
sub
cmp
popa
lods
cmp
cmp
add
mov
in
xchg
mov
pop
jae
mov
inc
xor
test
ljmp
scas
in
inc
sub
mov
adc
inc
scas
push
adc
shl
cli
dec
sahf
out
pop
fldl
sub
stos
sarb
fwait
ja
lret
dec
ja
stos
pop
aas
test
push
xor
inc
jo
lock
shlb
xor
push
shlb
insb
lret
xor
mov
pop
adc
cmp
cld
mov
lds
movsb
test
dec
push
push
xlat
fstp
or
dec
add
mov
cmp
xchg
or
int3
mov
adc
cs
push
and
jge
pop
sub
inc
je
rcrl
sbb
jae
addr16
sub
cmp
inc
fbld
dec
or
fldenv
rclb
loopne
hlt
xor
je
cmp
xor
xchg
mov
sub
rorb
cmp
jmp
dec
lahf
cmpsb
adc
bound
push
or
in
imul
cmp
arpl
push
outsb
test
jge
cmp
fdivr
and
mov
inc
cli
cmp
ljmp
cmp
push
jecxz
int3
out
xchg
mov
lret
jmp
stc
scas
mov
inc
sub
mov
out
popa
jnp
flds
pop
sub
test
nop
shll
sub
gs
rorl
cs
cs
xorb
adc
cs
jmp
lcall
imul
push
jb
in
lods
xchg
xor
mov
test
lds
repz
or
cmp
in
cltd
push
cmpsl
les
movsb
test
mov
bound
rol
gs
das
add
pop
dec
std
repnz
imul
pop
ret
bound
jmp
notl
push
enter
ds
inc
push
adc
xor
mov
pop
push
xor
inc
imul
fs
repz
inc
xchg
cmc
sub
mov
pop
cltd
testl
test
dec
cmp
or
aaa
xchg
xor
push
inc
mov
dec
in
lahf
mov
stc
cmp
scas
pop
aas
mov
cmp
cmp
and
out
cld
popf
inc
rorl
mov
cs
addr16
sub
mov
repnz
xchg
sub
scas
out
lret
ljmp
sahf
outsb
pop
push
or
add
divl
dec
xchg
mov
sub
dec
add
inc
xor
arpl
out
ficomps
jo
sub
mov
js
insb
cmc
mov
mov
test
loope
jge
jbe
push
inc
jl
mov
add
insb
adc
mov
in
push
xchg
out
or
add
cmpsl
cmp
js
sahf
cltd
sub
popa
insb
xor
or
push
xor
sahf
or
xor
lret
loope
xlat
mov
pop
repnz
sahf
push
inc
or
test
cmp
inc
dec
jl
sub
push
sbb
mov
sub
pop
cmp
cltd
dec
js
mov
jb
xor
lods
int3
in
mov
mov
jecxz
aas
std
dec
and
nop
in
stc
inc
jp
mov
call
mov
movsl
outsb
mov
insl
cs
outsb
sarb
mov
inc
inc
in
fwait
xor
imul
sub
and
inc
push
je
repnz
jl
mov
pop
insb
push
shlb
nop
xor
cmp
cmc
loope
movsl
popf
xchg
xor
sub
pop
xor
cmc
jg
sub
sarl
in
adc
xchg
mov
jle
xor
ret
cmpsb
shrb
cwtl
cli
or
or
mov
xchg
sub
lret
rolb
lods
inc
mov
scas
clc
subl
sbb
test
out
loop
movsb
sub
mov
cs
outsl
insb
fstpt
dec
and
xor
cmp
das
lods
lahf
in
sub
fwait
jns
into
lea
inc
dec
cmp
xor
cli
sub
mov
xor
insl
inc
or
xchg
sub
imul
scas
lods
ds
jle
push
pop
xchg
cmpsb
cmpsl
xchg
mov
jno
inc
xor
sub
in
sahf
xor
cs
gs
push
decl
fwait
inc
xor
sub
cmp
insl
hlt
jne
test
pop
rolb
jb
sub
push
mov
lret
xor
adcb
or
lock
mov
push
sub
inc
pop
movsl
cmp
arpl
push
inc
int3
sub
push
cli
aam
mov
dec
xchg
dec
mov
jns,pn
xor
decl
cmp
addl
call
fs
shrl
sbb
push
push
mov
scas
jl
sub
out
inc
sbb
and
arpl
xlat
xchg
xchg
xor
ljmp
mov
push
dec
inc
icebp
imul
sub
cmp
sub
sbb
xchg
inc
cmp
cmpsb
jmp
sub
ret
test
mov
lahf
mov
dec
popa
pop
shll
sub
dec
mov
xchg
adc
push
add
xchg
push
xchg
or
push
xchg
repnz
ljmp
sub
cmpsl
lahf
cmpb
pop
or
jne
inc
sub
dec
push
addr16
cld
mov
cmpsb
xor
lcall
cmp
pop
xor
inc
mov
insl
cs
pop
cmp
stc
notb
xchg
arpl
hlt
xchg
stos
divl
sub
xchg
movsl
ret
sbb
cmp
stos
test
loopne
dec
test
imul
repnz
ss
pop
imul
popa
imul
lods
imul
xor
loop
mov
xor
and
aas
pop
mov
cmp
dec
pop
test
ja
push
popa
fidivrl
sub
jno
dec
rorl
mov
sbb
dec
push
pop
or
mov
bound
clc
cmp
mov
xchg
dec
or
push
sbb
xor
ja
xchg
sub
push
xchg
movsb
out
mov
xor
inc
push
cmp
dec
pop
ret
add
push
sub
stc
aas
pop
adc
add
mov
jns
lahf
pop
mov
popaw
mov
repnz
test
arpl
mov
das
jp
push
cmc
mov
cmp
jo
int3
pop
out
imul
pusha
and
daa
inc
and
push
mov
insb
out
pop
shll
in
stc
inc
add
pusha
or
inc
dec
arpl
pop
xchg
jno
stc
dec
or
mov
xor
leave
xor
lret
mov
pop
push
and
mov
lods
stc
cmpsl
out
xor
ret
add
xchg
adc
ljmp
bound
sti
stos
aas
push
sub
mov
insl
adc
adc
dec
and
jne
add
repnz
pop
push
jns
fs
and
sbb
cli
cmp
dec
gs
imul
mov
stc
addr16
sti
pop
bound
test
jno
push
push
daa
out
cmp
mov
popf
jae
xchg
mov
xchg
je
mov
adcb
sub
inc
mov
dec
fidivl
add
mov
push
cmp
cmp
in
sub
cwtl
jae
cld
bound
mov
in
cmp
leave
xor
cmp
push
in
ja
add
dec
adc
xor
pop
push
inc
out
movsl
aam
xor
mov
push
xor
repnz
and
sbb
sub
push
xor
xlat
or
fs
call
inc
fcompl
mov
cmpsb
push
rcrl
fs
dec
dec
sub
adc
dec
test
in
add
scas
push
pop
sub
aad
outsb
pop
mov
movsb
mov
xchg
mov
pop
push
jae
pop
cmp
dec
jle
sarl
ja
in
jg,pn
sub
mov
add
aas
ss
ja
les
test
sub
pop
dec
adc
mov
inc
fwait
adc
mov
test
xor
xchg
cmp
subl
xor
sub
pop
push
sub
je
insb
mov
enter
sar
xchg
push
jmp
jb
xor
mov
mov
dec
sub
sti
lahf
int3
or
imul
and
scas
repz
cmpsl
xchg
push
push
push
dec
in
ret
pop
mov
xor
cmp
aaa
sbb
ret
jle
repz
jbe
popa
sbb
inc
les
ss
imul
add
mov
add
in
jo
dec
mov
sbb
push
dec
jg
pop
mov
mov
mov
stos
inc
sti
dec
cs
shl
xchg
jnp
aaa
repnz
negb
lods
fs
dec
xchg
in
jp
jnp
cmp
jp
inc
cli
int3
out
jp
mov
xchg
lock
or
rcll
sarl
inc
lret
mov
arpl
outsb
dec
jg
cmp
aam
jb
dec
das
loope
sub
stc
jb
push
test
cwtl
das
push
add
xor
sti
mov
inc
cmp
test
jo
mov
clc
pop
push
ds
xchg
ss
push
mov
sahf
sub
xchg
sub
es
jle
xor
push
push
ds
aaa
jp
mov
xorl
or
mov
test
mov
dec
cmp
mov
lds
mov
jmp
mov
and
loope
cmp
jmp
sti
push
aaa
or
dec
shll
ljmp
lret
ja
sbb
mov
aaa
xor
data16
dec
mov
sarl
cmp
or
xor
pop
cmp
mov
pop
in
punpckhbw
sahf
repnz
cmpb
cmp
sub
adc
stos
icebp
dec
jmp
dec
inc
sub
xor
fwait
lock
inc
inc
sti
or
mov
mov
in
jp
jl
fisubrl
mov
cmp
jg
xchg
xor
cmp
in
in
cmp
dec
xor
push
pop
cmpsl
mov
adc
jmp
xor
in
sub
cmp
lock
arpl
adc
inc
mov
sub
inc
orl
mov
mov
test
rcr
cli
cmp
cmp
push
std
shll
pusha
jbe
cmp
cmp
xchg
xchg
stos
dec
data16
lcall
repnz
hlt
pop
dec
mov
add
push
hlt
push
test
dec
push
inc
pop
outsl
jmp
push
mov
adc
das
pop
movsb
or
ds
dec
xchg
mov
push
inc
sub
jg
les
sarl
ja
cmpsl
or
mov
arpl
cmp
imul
mov
xchg
fwait
push
inc
pop
jb
je
insl
inc
test
mull
int3
pop
pop
fldcw
std
shll
pop
xor
imul
aaa
xor
imul
mov
sahf
scas
mov
test
xchg
in
dec
ss
gs
sub
sub
aad
enter
cmp
fldcw
sbb
xlat
sarl
cmp
cmp
shll
aas
ja
or
mov
mov
push
sub
adc
arpl
mov
inc
xor
xchg
in
popa
cmpsl
xor
push
add
pop
pop
mov
jae
push
jae
sbb
mov
mov
imul
addr16
pop
add
sub
in
ljmp
dec
lods
mov
pop
dec
jle
add
js
pop
sub
mov
call
pop
into
shr
adc
sti
lods
inc
jmp
mov
dec
daa
mov
push
into
and
les
cmpsb
mov
shll
ja
js
loop
add
pop
je
push
sub
xor
inc
xchg
ljmp
stos
lcall
inc
sub
mov
ljmp
xor
bound
ret
push
stos
ja
xor
lds
in
in
test
push
xor
sub
call
inc
push
sub
cmp
jle
cmp
dec
inc
repz
dec
xchg
scas
pusha
inc
xchg
sarb
ss
mov
mov
cli
divl
test
xlat
mov
dec
sub
outsb
push
push
aaa
movsl
call
sub
push
aaa
sub
shr
pop
mov
dec
sar
ljmp
mov
cmp
rolb
jmp
movsb
cwtl
shll
mov
cmp
sub
xchg
xor
mov
scas
pop
inc
icebp
ror
sub
leave
outsb
mov
stos
push
push
xchg
leave
out
popf
stos
stos
dec
xchg
in
dec
scas
mov
test
pop
pop
clc
test
in
and
scas
ljmp
sub
xor
pushf
and
sub
pop
sub
pop
adc
add
ret
xchg
jmp
push
xchg
sbb
mov
popa
pop
dec
jle
xorb
into
jo
in
inc
pop
or
idivl
push
fimull
sbb
push
xor
xor
inc
xor
daa
es
int3
cs
mov
das
imul
in
push
js
mov
jmp
push
push
test
stos
cmc
or
aas
push
sbb
sbb
sbb
inc
mov
pop
sub
fsts
ret
inc
sub
das
icebp
or
jnp
push
mov
int
fidivrs
cmp
jg
lods
dec
xor
hlt
scas
xchg
mov
jb
dec
sub
shll
movsl
xchg
or
xchg
test
fwait
outsb
mov
jecxz
shll
push
dec
xchg
or
jle
stc
lock
sub
call
ss
xlat
mov
cmp
mov
xor
loop
mov
mov
sub
fwait
insb
push
hlt
insl
dec
mov
or
je
push
sub
push
push
cmp
cmc
clc
or
push
push
aas
addr16
sub
idivl
ljmp
or
sub
push
lret
ret
sub
xchg
dec
xor
mov
sub
xor
sub
mov
arpl
jp
xor
lahf
dec
es
insl
into
jl
pop
dec
scas
jmp
hlt
inc
dec
aaa
and
inc
rclb
pop
dec
xorl
cmp
cmp
fisttpll
bound
out
cs
jne
ja
dec
mov
js
and
cmp
cmpsb
out
in
pop
xor
push
icebp
stc
jg
dec
pop
test
or
jo
pop
dec
and
sub
hlt
icebp
adc
dec
inc
mov
jge,pn
stos
subb
mov
pop
cs
push
ss
subb
mov
lea
lret
gs
lret
imul
inc
je
das
pushf
pop
iret
bound
repz
cmp
aas
mov
jp
jmp
xor
inc
fucomp
push
cld
push
and
stos
push
pop
cmp
repz
cmp
xchg
inc
mov
sub
xor
stos
es
push
push
in
pop
inc
lods
pop
xor
and
cli
dec
inc
test
daa
xor
fisttpl
mov
xor
fisubs
aaa
xchg
sub
lret
push
xor
mov
mov
xor
add
orb
test
mov
stc
repnz
insl
inc
inc
add
jmp
dec
xor
pop
push
pop
sub
sub
enter
pop
inc
xor
xor
lret
add
out
movb
mov
idivb
ljmp
xchg
xor
push
cmp
pop
jb
inc
shrb
jae
pop
cmp
fildll
add
push
sar
mov
pop
push
push
dec
ljmp
lret
jmp
adc
loop
scas
test
jns
push
dec
stc
cmpsl
sub
movsb
pushf
add
aas
pop
decb
dec
jl
ja
pop
imul
jge
ljmp
lcall
pop
and
in
icebp
dec
jmp
hlt
pop
test
xor
js
inc
xchg
fs
imul
into
add
pop
shrl
leave
cmpsl
inc
xchg
xor
push
sti
cmp
jae
dec
jmp
subl
push
movsb
xchg
cli
dec
mov
dec
js
xchg
inc
lret
pop
dec
mov
pop
inc
adc
pop
and
and
cmpsb
jmp
cmp
icebp
inc
dec
mov
and
jp
pop
ds
testb
fs
push
pop
ret
imul
inc
push
das
sub
add
cmp
dec
inc
das
mov
icebp
push
pop
inc
sub
mov
jno
pushl
or
inc
pop
or
arpl
cmp
sub
shrb
xchg
idivl
mov
test
fcomps
xor
pop
add
ljmp
mov
sbb
stos
inc
repnz
out
sahf
outsl
pusha
push
xchg
aas
push
ljmp
pop
inc
fs
inc
cmp
pop
cmp
mov
xor
insb
sub
daa
cmc
aaa
repz
lea
lock
push
movsb
aam
xchg
push
inc
sub
test
orl
in
mov
mov
and
inc
dec
test
mov
mov
mov
adc
sub
mov
jecxz
ja
inc
pop
jbe
in
fiadds
gs
into
test
lcall
aad
movsb
jp
dec
sub
xor
cld
xor
push
dec
jge
sub
cs
cmp
adc
subl
iret
insl
dec
loop
mov
sbb
dec
push
push
imul
scas
push
popa
pop
jecxz
jmp
mov
cmp
popf
fwait
das
jp
dec
pop
push
ret
sahf
inc
insl
aaa
fs
je
add
lods
inc
mov
sub
mov
popa
push
xor
fwait
add
pop
fdiv
mov
pop
cs
pushf
mov
pop
jne
push
push
repz
js
inc
lods
jle
push
ljmp
out
lret
or
out
in
lods
scas
pusha
aaa
xchg
bound
sarb
push
cmp
inc
ljmp
push
xor
adcb
push
cld
fs
in
xor
cmp
outsl
inc
sub
sub
push
sub
iretw
cld
icebp
push
push
test
add
mov
pop
pop
test
in
push
add
cs
and
in
addr16
pusha
shll
adc
les
mov
pop
sbb
dec
xchg
sub
in
rcrl
gs
gs
add
cmp
dec
dec
inc
pop
lods
cs
cmp
dec
repz
insb
daa
enter
dec
incb
imul
mov
cs
inc
in
sarb
test
adc
mov
or
xchg
subl
push
push
pop
cmp
sti
xor
test
out
pop
out
sub
mov
cmp
int
scas
jns
in
aas
jne
push
inc
dec
xor
cmpsb
cmp
xor
pushf
cmpsl
stc
dec
add
pop
cmp
mov
sbb
push
adc
xor
sub
cmp
xor
pop
push
mov
xor
jo
cmp
arpl
push
call
xor
mov
push
ja
jp
aaa
cmpsb
mov
mov
pop
xchg
or
mov
sub
jle
dec
fs
imul
dec
jmp
inc
cmp
outsl
inc
fwait
lock
add
jp
push
sub
mov
xchg
outsl
lds
jmp
arpl
fiaddl
sahf
xor
popa
incl
or
sub
pop
popa
dec
jbe
and
pop
stos
jb
push
xchg
mov
dec
aad
in
cmp
rolb
repz
inc
pop
fs
cmpsl
aad
enter
cmp
cld
test
mov
hlt
mov
jnp
cmp
sub
mov
xor
xor
scas
xchg
shrl
xor
xchg
mov
sub
jl
jae
pop
xchg
subb
popa
mov
stc
insl
sub
xor
stos
cs
cmp
dec
jae
lods
je
popa
add
ljmp
ljmp
cli
sub
cmp
mov
ja
movsl
pop
aaa
outsb
clc
pop
xor
out
inc
insb
cli
jp
dec
push
sbb
in
cmp
lcall
imul
cli
shl
sub
std
outsl
dec
xor
xchg
dec
dec
add
sahf
sub
cmp
sarl
outsb
push
xchg
outsb
pusha
xor
imul
cmp
fstpt
dec
push
lret
xor
je
cmp
icebp
fs
sub
loope
or
shr
sub
cmp
cmp
int3
jp
cmp
mov
cmp
dec
push
mov
pop
pushf
out
sub
imulb
dec
mov
dec
dec
pop
inc
hlt
in
lock
mov
cmp
xchg
xor
inc
xchg
or
mov
jns
shlb
and
icebp
sub
dec
into
js
push
or
jb
sub
ljmp
pop
xor
push
das
dec
popa
sub
pop
test
dec
mov
inc
or
xlat
out
cld
cmp
gs
xchg
ss
das
ja
std
inc
push
mov
call
jp
add
dec
int
in
test
movsl
cmp
dec
arpl
jae
sub
in
jnp
test
mov
mov
ljmp
lcall
outsb
leave
push
sti
or
mov
leave
lahf
popf
stos
dec
inc
push
test
rorb
mov
xor
jmp
mov
and
pop
jne
mov
imul
scas
test
xchg
mov
lret
les
or
pop
cmp
enter
dec
push
pop
xor
ret
ljmp
cmp
cmpsl
fiadds
bound
rcr
xor
inc
mov
mov
test
loopne
mov
xor
loop
jmp
jp
cmp
dec
inc
adc
imul
aad
inc
cmc
mov
aaa
ret
adc
xor
xor
sub
adc
imul
fnsave
jno
jmp
leave
jmp
xor
aaa
cmpxchg
mov
pop
cmp
mov
sub
lods
aas
push
push
push
jl
in
mov
mov
sub
mov
inc
dec
insl
mov
xorl
adc
xor
cmp
dec
lret
imul
cmp
icebp
and
pop
addl
jbe
adc
imul
sub
aas
jle
arpl
aaa
sbbl
push
es
in
pop
push
daa
push
inc
outsb
incl
dec
in
sub
add
dec
pop
loope
cli
fwait
sub
mov
and
pusha
repnz
xor
xor
pop
sub
sub
pusha
aaa
xor
sub
das
adc
repz
push
push
adc
push
lahf
ljmp
lods
lcall
dec
xchg
pop
shrb
ja
fidivs
sbb
pushl
scas
sub
mov
jae
mov
popa
outsb
mov
lea
sbb
sub
int
jb
imul
mov
xor
cmpsl
loopne
xor
shll
sub
imul
fstpl
and
dec
add
subb
lcall
lret
cmp
push
xor
test
cmp
mov
lcall
in
cli
add
iret
sub
movsb
sbb
cmpl
jl
fistpll
sub
inc
gs
sub
insl
or
dec
jmp
mov
push
dec
and
imulb
jne
push
inc
adc
push
xorl
out
dec
fidivrs
cmc
mov
cmp
pop
loope
lret
stc
iret
cmp
mov
jmp
sub
popa
lcall
das
in
aad
enter
aaa
mov
inc
out
or
imul
dec
iret
cmpsb
push
dec
dec
leave
outsb
mov
stos
movsl
ja
sub
cmp
sbb
xor
lods
add
into
std
cmp
cmpsl
xor
or
jns
dec
cs
push
pop
or
clc
popa
pop
scas
xchg
in
out
repz
cmp
and
test
jne
inc
cmp
lods
loop
aaa
fisubrs
pop
inc
insl
hlt
setle
lea
push
bound
adc
outsl
ja
test
and
pushf
out
stos
lcall
testl
stos
es
in
jp
cs
ss
loope
icebp
mov
mov
sahf
xor
ds
jp,pn
inc
push
dec
fldenv
add
ss
jle
xchg
imul
fs
scas
mov
sbb
mov
mov
pop
cltd
mov
lret
pop
push
outsb
xchg
and
xor
popa
push
ljmp
xor
inc
jmp
shll
cld
cs
sub
pop
call
xor
hlt
cmp
les
mov
cmp
lods
sub
dec
fisttps
lock
popf
mov
xor
das
mov
pop
pop
pop
testl
dec
aaa
sub
push
mov
cmpsb
pop
mov
jo
lods
pusha
dec
out
sarb
fsubl
add
dec
xchg
sub
cmp
mov
sub
rclb
cmpsb
cmp
add
jo
popa
jb
pop
pop
pop
cmp
ds
push
adc
dec
mov
aas
setno
inc
xor
loop
pop
dec
sub
cmc
and
jmp
jnp
imulb
push
insl
ljmp
ds
inc
out
clc
mov
ret
cmpb
xor
cmp
push
mov
jmp
lock
pop
cmp
cmp
and
ret
popa
or
push
push
push
xchg
pop
orl
or
cmp
cmc
dec
enter
xor
mov
cmpsl
outsb
in
sub
pop
lret
les
inc
ljmp
loope
push
mov
stos
pop
inc
mov
mov
fwait
dec
imul
mov
cmp
clc
dec
inc
lret
lods
ss
xchg
cmpsb
or
jne
xchg
push
js
xor
pop
fwait
push
push
ja
xor
sub
jno
mov
gs
ds
int3
sub
dec
iret
ja
dec
and
fidivs
lea
adc
out
pop
jmp
inc
push
stc
test
xlat
fldl
movsl
stc
lods
jnp
dec
test
push
add
sub
dec
mov
in
stos
mov
outsl
out
or
rcll
sub
dec
ljmp
push
fs
dec
mov
mov
ja
imul
negb
cmp
sbb
ljmp
ficompl
cmpsl
mov
insl
pop
pop
xor
fwait
in
sbb
cmpsl
sbb
sub
adc
ds
js
xchg
dec
mov
sti
or
sub
dec
lds
sahf
cs
xchg
xor
dec
cld
inc
xor
and
mov
adc
rolb
in
push
cld
leave
add
cwtl
jle
or
sub
mov
dec
jmp
mov
add
outsl
inc
cmp
dec
imul
lods
out
jb
push
mov
rcll
or
push
xor
cltd
icebp
sub
cs
int
test
jp
adc
add
jge
sub
ljmp
mov
and
jbe
pop
out
movsb
lods
leave
ret
bound
mov
sub
repnz
testb
leave
cmp
mov
dec
sub
jmp
shrb
test
movsl
cmp
inc
roll
test
mov
jmp
jg
or
lods
aaa
inc
fstl
arpl
jb
xchg
in
cli
jp
dec
scas
addr16
sbb
lret
pop
test
cmp
xor
scas
imul
pop
mov
mov
gs
ss
andl
pop
add
and
or
cmp
push
sbb
jle
push
pop
ds
incb
sbb
xor
xchg
mov
in
and
fldcw
jle
cmpsl
or
dec
mov
imul
sti
xchg
je
sub
fldt
lds
push
inc
outsl
mov
mov
insb
or
xor
jno,pn
push
rol
sub
repz
lcall
out
sub
pop
dec
dec
loop
sub
pop
arpl
jne
cmp
jmp
lods
jnp
sbb
inc
push
push
jg
xlat
outsl
bound
and
sbb
xor
inc
cmp
sbb
mov
jp
jo
movsl
jecxz
in
bound
add
mov
mov
xor
mov
aam
out
loop
jecxz
push
shrb
mov
add
sub
dec
sbb
mov
imul
dec
jmp
stos
inc
push
cmp
jo
jle
push
cmp
ss
push
jns
hlt
lock
push
mov
leave
dec
lods
insb
clc
gs
push
sub
inc
inc
jns
cmp
pop
cmp
jno
cmpsl
xor
jle
inc
jmp
scas
adc
sub
fldt
inc
mov
push
mov
xchg
or
xchg
ja
sub
or
arpl
js
adcb
mov
out
push
pop
roll
jae
fstpt
stos
mov
add
inc
imul
scas
shrb
into
sub
dec
loopne
les
jle
cs
ret
sub
jl
dec
push
out
outsb
add
ret
sub
dec
imul
jnp
xor
in
push
xor
push
pop
fsubrp
stos
xor
inc
popa
adc
jl
cmpsl
cmc
out
cmp
inc
test
mov
xchg
sti
push
push
xchg
jge
scas
xchg
mov
sub
mov
mov
xchg
lret
sub
outsl
insb
xor
cmp
or
mov
pop
add
cmp
adc
mov
push
xchg
inc
jmp
cmp
scas
pop
out
test
mulb
sahf
movsb
or
mov
cld
out
and
ret
adcb
xchg
cltd
inc
push
popf
dec
pop
insb
movsb
jnp
cs
push
sbb
ljmp
scas
out
or
lahf
pop
cmp
sahf
mov
xor
push
lret
push
pop
lock
cmp
or
inc
sub
xlat
insb
test
popf
adc
add
cli
sbb
and
sub
iret
lahf
push
pushf
xor
aaa
aaa
leave
sub
mov
in
jno
cmp
inc
jle
inc
dec
lds
out
pop
lock
fs
pop
movsl
cmp
mov
add
push
das
out
pop
gs
xchg
inc
jne
inc
and
je
push
or
testl
adc
jmp
sarb
ret
or
jb
and
mov
push
sub
ret
sub
inc
pop
dec
pop
adc
lock
pusha
cs
mov
xchg
sti
clc
adc
jb
push
pop
icebp
pop
cmp
sub
mov
sbb
les
push
lods
rcll
mov
aam
aaa
insb
or
loop
pop
testb
roll
nop
cmp
xor
sub
add
xorb
ss
sarl
push
sub
fs
mov
cmp
mov
rorl
inc
inc
jge
jno
fists
aaa
push
dec
mov
mov
dec
add
sub
jno
xor
in
rcrl
mov
mov
fsubrl
sbb
ret
out
cmp
ret
test
out
aaa
pop
inc
inc
pop
cmp
mov
cmpsl
loopne
fnstenv
adc
shl
scas
xchg
icebp
xchg
std
xor
cli
mov
xlat
test
cmp
sti
cli
pop
adc
xor
dec
std
dec
xor
inc
arpl
add
push
sub
iret
daa
out
pop
jo
fs
shl
add
xor
lods
cwtl
push
in
inc
pop
xor
int3
imul
push
sub
dec
imul
xor
dec
call
jo
fidivrl
sub
adc
pop
sbb
dec
test
outsb
xor
cmp
and
fs
cmpsl
jne
add
aad
jl
push
sub
inc
leave
pop
or
push
arpl
jno
test
mov
cmp
push
and
shr
sub
or
mov
adc
mov
pop
dec
out
inc
imul
aas
dec
mov
xchg
jns
sub
lods
adc
xor
fprem1
push
mov
mov
and
pop
insl
sub
jmp
daa
pop
xor
sub
add
push
cmpsb
addr16
sbb
pop
cmp
and
xor
sub
cmp
in
outsl
test
lcall
push
lea
push
leave
mov
lock
mov
scas
pop
cmpsl
lret
out
sbb
add
or
mov
inc
insb
mov
and
repz
pop
pop
mulb
hlt
mov
adc
jae
outsb
lods
xor
cmp
aaa
jmp
imul
cmp
push
sub
dec
dec
push
ljmp
lcall
stc
in
bound
pop
mov
pop
push
fwait
push
das
cmpb
in
xor
cmp
ljmp
sub
fwait
jnp
inc
xor
cmp
sub
mov
movsl
pop
aaa
stos
sub
dec
in
insb
xchg
inc
inc
dec
pop
cmpsl
in
sbb
int3
pusha
inc
jno
jmp
inc
mov
xor
sarl
stos
aaa
pop
out
sub
outsl
insl
push
imul
lahf
jle
push
in
test
push
mov
icebp
push
cmp
pop
jo
movsb
pop
outsb
ja
mov
in
xor
loopne
stc
sbb
dec
aam
rcrl
wbinvd
push
pusha
inc
not
jne
push
jl
repnz
mov
xlat
or
int
add
xor
loop
fwait
xor
repnz
xor
jmp
loop
push
aaa
jmp
add
mov
imul
cmp
aas
ds
movsb
incl
pop
inc
fistpl
lds
repz
sub
pop
das
jecxz
xor
hlt
xor
inc
lea
mov
gs
xchg
or
xchg
cmp
cmp
out
fidivrl
inc
jbe
push
dec
sub
sbb
xor
jmp
das
push
pop
cmp
sub
aaa
sahf
hlt
aam
adc
stos
je
arpl
sub
std
popf
inc
insb
std
push
xchg
dec
jmp
fs
out
jns
adc
aas
pop
xchg
push
sub
push
stos
lret
in
sbb
inc
test
popa
pop
imul
stos
mov
fwait
mov
out
out
or
cs
filds
fwait
cmpsl
and
add
sbb
jp
cld
das
sub
xchg
hlt
jge
jo
xchg
gs
and
pop
je
pop
dec
cmp
inc
daa
movsb
xchg
push
insb
hlt
popa
dec
xchg
jnp
add
scas
das
xor
insb
push
inc
mov
out
jl
xlat
dec
pop
xor
cmpsl
add
sbb
lods
pop
xchg
xor
cmp
push
dec
xor
dec
lea
ret
cs
inc
sub
push
push
or
test
dec
dec
or
push
hlt
insl
mov
add
xchg
sub
lods
jp
mov
loop
std
stos
cmpsl
dec
mov
cmp
in
int
pop
lods
adc
pop
or
fidivs
mov
xchg
mov
mov
cmp
ljmp
and
lahf
test
add
xor
cmp
sub
std
aas
fists
ja
push
and
mov
dec
xchg
cmp
les
xchg
jbe
pusha
call
jge
xor
push
int3
xor
push
sub
xor
jmp
cs
pop
adc
xchg
xor
movsb
pop
fistpl
cwtl
dec
jg
cmp
push
cmp
push
mov
in
push
dec
cmp
stos
imul
ss
jae
incb
mulb
pusha
adc
jge
fnsave
adc
es
add
add
mov
pop
fnstcw
test
inc
and
cmp
sub
insb
std
mov
push
xchg
xor
ds
mov
sub
mov
stc
pop
outsb
aad
dec
push
loopne
add
push
push
cmpsl
ljmp
stos
sbb
pop
fsubs
lods
fistpl
jnp
movsl
in
insl
ss
cmp
mov
push
mov
push
dec
inc
adc
dec
test
mov
dec
inc
xor
imul
xchg
lea
pusha
fwait
addr16
mov
mov
mov
cs
xchg
push
jb
out
imul
push
test
sbb
outsl
cli
repz
sub
mov
mov
cmp
push
xchg
xor
ds
lock
pop
movsb
shlb
pop
inc
aam
in
cmpsb
outsb
dec
imul
cwtl
mov
cmp
sub
sbb
loopne
inc
aas
sahf
pop
xor
cs
iret
inc
popa
jbe
in
mov
pop
pop
xor
xchg
inc
jnp
mov
push
stos
scas
add
dec
mov
test
pop
dec
mov
out
adcb
js
add
stc
mov
push
sahf
mov
les
mov
aas
jne
inc
cmp
icebp
jp
inc
dec
dec
movsb
orb
dec
push
dec
scas
xchg
movsb
mov
jecxz
stos
push
cs
cmp
pop
pop
ret
test
inc
jb
in
jp
sub
lcall
std
jb
pop
and
jmp
xor
call
shl
scas
cmp
inc
cli
pop
mov
out
lcall
push
sub
roll
sub
test
in
xchg
xor
sub
or
ja
int3
xor
sub
test
xor
mov
std
jo
cmpsl
pop
lods
je
popa
mov
jns
pop
push
pop
xor
cmp
inc
dec
icebp
jb
pop
jne
in
add
pusha
in
xor
mov
das
push
lods
int3
ss
test
mov
pop
xchg
sub
imul
mov
cmp
add
pop
fbld
stos
test
push
shrl
ljmp
push
inc
mov
pop
dec
dec
fisttps
pop
imul
pop
sub
xor
xor
or
and
dec
lret
inc
sti
pop
cmp
mov
dec
dec
sub
daa
fists
dec
repz
ljmp
pop
xor
add
fcomi
push
mov
pop
cmp
pop
ds
mov
adc
fidivl
cld
shll
movsl
or
xchg
out
jg
pop
test
jmp
cmp
clc
aas
cmp
xor
cmpsb
or
and
sar
pop
xchg
xchg
xor
adc
add
cmc
into
pop
movsl
in
aam
inc
inc
lods
cmpsl
bound
loopne
jno
in
mov
cmp
leave
mov
in
xchg
xor
data16
cmpsl
adc
mov
push
test
fdivrl
adc
adc
mov
dec
lea
movsl
dec
gs
cmp
inc
insb
sub
mov
rorb
sub
pop
mov
dec
aaa
cld
mov
jmp
dec
xor
out
cmp
jae
mov
clc
les
jg
cmp
lret
in
pop
cmpb
test
mov
mov
das
pop
dec
adc
fwait
repnz
push
movsb
testl
cmpsb
or
pop
lds
dec
dec
hlt
fildll
ljmp
push
pop
frstor
lcall
insb
inc
pusha
add
insl
mov
jmp
inc
mov
std
mov
inc
in
push
das
or
xor
dec
dec
mov
cwtl
cmpsl
lahf
adc
xlat
adc
in
sub
lret
loope
adc
dec
pop
mov
xchg
add
cs
shrl
mov
cmp
scas
cmc
movsb
pop
push
jne
dec
popa
blcmsk
lock
dec
dec
inc
lods
iret
insb
movsb
xor
xchg
loop
out
jo
xor
mov
insb
shr
jnp,pn
xor
or
mov
push
pop
jmp
in
mov
jge
pop
jl
movsb
push
imul
xor
pop
xlat
imul
sti
sub
in
int
push
sub
das
lods
cwtl
scas
lahf
and
mov
cmp
mov
outsl
pusha
xor
xchg
lods
xorb
je
stc
shrl
int
sbb
fdivl
and
aas
dec
jnp
lret
leave
sbb
rcl
lods
addr16
dec
push
xchg
cmpsl
or
outsb
jmp
inc
push
je
std
mov
push
cltd
mov
pop
jge
xlat
mov
repz
sahf
stos
mov
leave
inc
arpl
xor
arpl
sbb
push
inc
orb
mov
mov
lcall
les
and
mov
ds
addr16
and
lea
repnz
gs
loopne
nop
pop
cmp
stos
inc
scas
js
jb
pop
dec
mov
idiv
push
aas
xchg
es
cli
ds
ss
xchg
cmp
mov
out
or
cmp
sub
xor
sub
les
repnz
inc
push
out
stos
xchg
inc
ds
add
in
out
cmp
cmp
or
cmp
mov
jl
mov
pop
scas
or
push
and
jmp
cs
gs
pop
inc
push
outsb
pop
imul
lret
dec
pusha
mov
push
mov
inc
popa
loopne
data16
dec
js
sbb
sub
adc
in
pop
push
mov
inc
push
xchg
sub
mov
roll
pop
jmp
insb
push
push
shrl
lret
cmc
in
sbb
in
pop
sub
sub
loop
jl
aas
mov
pop
dec
std
mov
xor
sahf
jbe
pusha
popl
or
xchg
cwtl
xor
dec
push
aam
int3
andl
mov
xor
cld
lahf
leave
sub
pop
xchg
dec
das
icebp
ja
pop
mov
push
inc
cs
sub
jnp
stos
in
push
popa
xchg
scas
dec
fs
fistpll
cmp
jg
and
push
dec
push
sub
push
lahf
ret
xor
push
sub
leave
pop
add
lret
cs
test
push
imul
imull
sub
adc
jp
outsl
push
dec
dec
xor
aaa
cmp
sub
stos
pop
xor
jl
outsl
pop
cmp
shl
inc
pop
cmp
sub
jecxz
stos
gs
dec
ss
pop
in
or
push
push
lahf
cli
xchg
jp
dec
mov
cmp
jl
pop
cmp
jnp
sahf
jl
mov
cmp
pop
jo
jne
outsl
outsb
cmp
sub
add
xor
pop
das
xor
dec
scas
mov
mov
inc
cmp
xor
dec
push
and
nop
adc
lds
sahf
inc
mov
push
push
sub
xorl
cld
cmp
inc
inc
sub
or
xchg
or
fs
and
cmpsl
arpl
repnz
pop
cmp
inc
pop
shrb
loopne
xchg
jo
jp
pop
movsl
and
jnp
and
dec
mov
iret
pushf
and
lods
adc
cmpsl
or
aaa
ja
inc
xor
dec
sbb
xchg
lods
pop
inc
push
xchg
inc
je
in
das
sub
insb
aaa
in
mov
xchg
pop
icebp
cmp
cmc
sbb
loopne
movsl
js
pop
bound
negb
fistpll
aaa
fdivr
fs
lcall
or
xor
pop
sub
cmp
fisubs
in
push
or
add
dec
arpl
jnp
mov
mov
push
lahf
sub
inc
je
lods
jl
pop
pop
xor
mov
imul
shll
push
jmp
shll
out
lret
mov
cmp
ljmp
out
imul
cmp
sub
enter
push
xor
xor
aaa
mov
push
xchg
les
lret
or
pop
add
sub
cwtl
mov
sub
lock
inc
inc
and
push
lret
lcall
dec
aaa
test
in
cli
out
pop
xor
ja,pn
sahf
imul
pop
bound
rol
clc
jp
inc
inc
inc
jmp
idivl
rorl
jmp
pop
xor
sub
mov
shlb
xor
sub
inc
sub
jae
mov
lods
outsb
mov
xor
add
inc
pop
lret
dec
mov
or
cmp
jp
ds
imul
sti
inc
pusha
sbb
movsl
std
inc
mov
imul
lods
push
inc
sub
cmp
mov
scas
stos
cmp
sub
insb
jmp
or
dec
mov
mov
inc
mov
jge,pn
xchg
in
inc
test
cmc
push
bound
lods
std
movsl
xor
inc
imul
pop
inc
or
xchg
jg
js
mov
icebp
dec
sub
xchg
or
jns
cmp
cmp
lods
dec
push
dec
cmp
jno
js
addr16
ljmp
subb
test
mov
cmp
ljmp
into
jno
fiadds
sub
in
mov
dec
dec
add
jae
mov
loop
mov
dec
xor
mov
jecxz
dec
bound
cld
dec
adc
clc
push
outsb
push
xor
in
iret
pop
push
mov
movsl
in
mov
push
dec
mov
bound
ljmp
test
cmp
cmp
inc
cmpsb
insl
mov
lahf
mov
ljmp
jp
push
inc
jmp
mov
imul
jg
incb
lahf
ret
jg
inc
and
xor
cmp
or
jns
pop
push
mov
sbb
mov
mov
push
xchg
adc
pop
cmp
xlat
jns
sub
fldl
mov
inc
sbb
out
stos
pop
push
imul
addr16
cmp
xor
push
aam
sahf
sub
xor
xor
add
out
fldt
dec
mov
mov
arpl
in
jno
lods
sub
xorb
lret
ljmp
iret
lods
dec
stc
scas
stos
xchg
cs
dec
xor
popa
mov
xor
push
xor
pop
inc
xor
lret
inc
dec
or
mov
inc
lret
insl
ds
jle
inc
dec
adc
adc
xchg
data16
push
repz
push
inc
pop
cmp
sahf
es
inc
cmpsl
fs
sbb
arpl
dec
mov
cmp
mov
pusha
cs
pop
jmp
int
or
dec
sbb
inc
jne
push
xor
xchg
adcl
inc
inc
mov
test
sub
xor
add
add
or
pushf
pop
popf
mov
cmp
jnp
sub
xor
pop
inc
dec
dec
push
lcall
lds
sub
and
pop
pop
sahf
movsb
repnz
mov
les
fbld
jno,pn
xor
cmp
lret
inc
mov
jl
cs
mov
sub
add
dec
push
dec
cwtl
pop
notb
sahf
stc
adc
sbb
sub
ljmp
pop
imul
lods
sub
cmp
cmp
imulb
lods
ja
in
jne
push
ds
jp
pop
xor
addr16
subb
lds
out
ljmp
fs
pop
sub
cmpsl
inc
jecxz
jbe
dec
push
sub
mov
push
imul
cmp
inc
pusha
ljmp
and
lods
cmp
loop
leave
mov
sub
push
or
cs
les
sub
sub
cmp
test
mov
cs
call
xor
sti
dec
sub
sbb
and
gs
ja
pop
dec
out
inc
xor
lahf
dec
mov
sub
add
sub
shll
shlb
bound
test
cmp
insl
int
icebp
mov
jmp
dec
in
add
sub
or
leave
cmc
clc
shll
or
sbb
dec
inc
dec
cs
mov
ds
cmp
daa
inc
dec
pop
dec
pop
sub
inc
mov
jmp
adc
test
jl
imul
push
xchg
insb
jns
cmpsl
push
mov
or
jmp
ret
fs
mov
cmpsb
test
dec
insb
in
addr16
dec
adc
xchg
test
sub
stos
dec
push
pop
sub
roll
idivl
mov
popa
dec
scas
sub
push
inc
sub
mov
and
push
cmc
sub
xor
movsl
cmpsl
cwtl
xchg
cmp
shll
pop
xor
fisttpll
jp
cmp
movsl
sub
cmp
pop
push
roll
in
stc
call
dec
jmp
cmp
imul
jne
stc
or
arpl
dec
dec
out
add
gs
out
dec
xor
shl
sub
fwait
clc
sahf
or
sub
mov
and
std
inc
mov
cmpsl
adc
ljmp
sub
movsb
inc
xor
xor
jge
sbb
lock
mov
out
in
lds
cmc
jnp
bound
xor
jl
inc
push
sub
lods
mov
in
outsb
pop
fs
rcrl
lretw
mov
iret
dec
inc
xor
dec
inc
mov
inc
push
imul
cmp
mov
imul
cli
aaa
dec
add
test
add
ds
sub
aad
push
das
into
xor
adc
sub
xor
dec
movsb
push
sub
push
pop
dec
xchg
xchg
inc
jo
in
cs
sbb
pushf
lea
push
mov
in
mov
lods
xor
mov
xchg
sub
xor
pop
cmp
cmp
ror
push
inc
dec
imul
imul
xchg
repz
mov
or
cld
mov
jmp
jl
push
inc
shll
frstor
stos
push
xchg
outsb
imul
push
pop
xor
mov
cmpsl
in
icebp
sti
inc
dec
xor
sub
xchg
xchg
sbb
testl
mov
aas
lret
xor
or
or
fistps
pop
mov
lods
jp
dec
and
cmp
test
push
pop
jmp
dec
jmp
push
dec
xor
ret
push
pop
xchg
xchg
or
sub
pop
dec
dec
out
jg
ds
ja
adc
cs
js
pop
or
xor
ret
cmp
pop
sub
sub
jge
ljmp
fstl
in
mov
int3
imul
jnp
cmp
gs
popa
aaa
jns
lods
ds
fbstp
push
sub
xor
mov
sub
push
lea
sbb
subb
xchg
mov
inc
dec
or
into
aas
push
aas
push
jno
dec
popa
mov
cmp
movsl
sbb
dec
insb
mov
data16
or
mov
fldt
ss
jne
outsb
or
push
xor
mov
inc
sub
xlat
xor
adc
pop
sub
cmp
js
pop
cmc
dec
xor
jb
aad
xchg
les
mov
pop
sub
xchg
sub
mov
lods
sub
dec
lea
mov
xor
gs
mov
ja
pusha
sub
xchg
dec
adc
rolb
negb
test
cmp
sub
dec
sub
imul
dec
ds
pop
ret
cmp
std
cmpsb
in
xlat
push
pop
subl
das
movsl
shr
mov
test
or
push
dec
ss
movsl
adc
lock
cmpsl
or
inc
xchg
mov
movsb
bound
movsl
out
lock
popa
push
cmp
jl
ss
js
cmpsl
stc
aaa
dec
ds
fcomps
cmp
push
sti
xchg
xchg
sub
pop
push
outsb
out
popf
sub
cmp
inc
xchg
lock
das
jg
sbb
and
cmp
xor
fxam
js
cmpsb
jnp
sub
icebp
cli
loope
mov
dec
cs
add
cmpsl
icebp
sarl
jno
xor
add
aad
cmp
jb
movsb
jge
mov
gs
rol
je
rorb
sti
sub
xorl
imul
in
adc
xor
cmp
xor
sub
jno
jno
rcrl
xchg
push
mov
testl
mov
outsb
pop
sub
push
pop
ss
test
icebp
hlt
mov
in
scas
inc
popa
ja
push
cmp
loop
jb
aas
cmp
xchg
push
jmp
dec
cmp
sub
jl
push
ljmp
cmp
jbe
imull
test
outsl
inc
mov
adc
xor
sbb
das
mov
pusha
loopne
aas
jle
stc
mov
dec
push
cltd
lods
ficompl
movsl
cmp
inc
in
dec
cmpsl
addr16
jmp
fldenv
ljmp
jbe
adc
sbb
outsb
push
inc
cwtl
popa
cmpsl
mov
add
fsubp
cmpsl
hlt
test
mov
dec
mov
jae
sbb
int
jbe
popa
dec
push
pop
data16
xlat
push
jle
es
mov
mov
testl
dec
push
nop
es
push
hlt
cmp
outsl
push
stos
cmp
outsb
pop
push
fwait
add
sub
idivb
jp
dec
add
dec
vpcmpeqb
sub
inc
mov
popa
ja
mov
xor
les
scas
cmp
std
in
test
pop
rcll
div
or
fnstcw
or
mov
cltd
sub
inc
sbb
sahf
jnp
push
pop
inc
dec
xchg
sub
pop
dec
ss
dec
sti
in
xchg
repnz
lahf
sub
push
dec
in
push
lock
int
shll
xor
ljmp
scas
and
jg
dec
or
mov
movsl
jb
jno
cmpsb
xor
call
pop
or
xchg
mov
lods
in
sti
cmp
ljmp
fisubrs
cmp
add
das
pop
jmp
scas
adc
pop
sahf
push
mov
pop
add
mov
in
xchg
push
jno
ja
movsl
push
imulb
cmp
mov
cmp
insb
sub
jno
js
popf
ss
inc
int3
popa
rclb
dec
loope
in
cmp
pusha
xor
push
lods
dec
sub
sub
sub
rcr
cmp
sub
test
stc
mov
sub
sub
stos
sub
dec
enter
icebp
push
push
cmp
push
ss
shll
pop
imul
je
iret
jns
mov
inc
sbb
int
mov
mov
sub
inc
push
pusha
mov
lea
xchg
pushl
push
sub
cs
loop
mov
popa
sbbl
jp
inc
push
inc
or
in
repnz
mov
xchg
stos
mov
push
push
in
cmp
mov
sub
lcall
repz
mov
mov
pop
adc
cmc
cltd
icebp
jp
jl
gs
inc
arpl
cmp
lcall
ss
mov
inc
xor
shll
pop
dec
outsl
jmp
xlat
bnd
jmpw
push
mov
xor
bnd
mov
frstor
cli
pop
pop
dec
ja
dec
sahf
lret
mov
cmp
sub
lahf
push
gs
mov
jp
jmp
imul
aam
push
inc
lods
xchg
adc
loop
dec
xor
hlt
lods
jp
push
dec
sub
notl
push
lret
sti
and
repz
cmp
bound
mov
pop
ljmp
lcall
mov
ds
mov
push
roll
movsl
ljmp
stos
gs
add
adc
pop
or
sub
pop
xor
mov
or
or
imul
out
sbb
jmp
das
sub
stos
andb
test
pop
inc
fisubrl
fisttpll
lret
je
jge
inc
cmp
jno
movl
pop
sub
add
push
push
repnz
imul
out
ss
pop
aaa
mov
mov
in
mov
fld
js
stc
push
dec
mov
lock
aaa
into
dec
add
sbb
das
ljmp
into
aaa
fldt
pop
xchg
popa
repz
xor
mov
imul
fldt
cmp
jp
add
cmpsb
icebp
sub
pop
push
pop
dec
out
inc
add
xor
insb
jg
shll
cld
hlt
sub
cwtl
dec
adc
stc
jo
pop
cmp
sub
inc
lock
ret
imul
dec
jns
cmpsl
and
xor
inc
push
sbb
or
shlb
pusha
cmp
scas
pop
push
sub
dec
add
ss
and
cmpsl
jge
lods
sub
adc
cmpsl
out
jbe
lret
xchg
aaa
xor
testb
mov
test
scas
push
shrb
lods
xchg
mov
adc
sub
cli
imul
lods
les
jo
test
dec
out
sub
add
insb
ljmp
inc
outsl
push
pop
sbb
cld
xchg
pop
pop
jns
cmc
scas
pusha
cmp
lods
push
dec
mov
dec
gs
cltd
scas
sbb
call
mov
push
popf
push
test
sub
cwtl
mov
mov
inc
xchg
sub
stos
push
arpl
add
imul
sub
push
or
jp
cmp
sub
cmp
bound
call
adc
and
iret
sub
pop
ja
xor
js
fists
inc
lcall
je
or
sub
sub
sti
repz
push
dec
dec
cmp
lret
pop
and
sbb
fadds
jns
pop
cmp
stos
cmp
lea
sub
and
add
dec
jne
xor
in
push
fcmovb
mov
fisubrl
imul
jl
inc
stc
jp
pusha
push
xchg
outsl
jl
dec
test
mov
inc
sub
jns
divb
jle
xor
inc
js
mov
cld
cli
aam
pop
push
jno
movsb
pop
and
ljmp
mov
cmp
mov
pop
cmp
or
movsl
cmp
inc
push
xor
jp
inc
test
mov
je
adc
ljmp
mov
in
jmp
inc
outsl
mov
jp
xor
push
call
pusha
rclb
add
cli
ret
data16
push
pop
lahf
or
jb
fs
pop
loop
pop
or
push
inc
hlt
mov
movsl
leave
dec
mov
inc
movsl
loopne
out
jno
ljmp
nop
xor
mov
in
jnp
inc
inc
push
test
push
mov
lods
push
ja
adc
sbb
or
in
insb
dec
lcall
jge
insb
das
xor
and
pop
aaa
stos
push
hlt
out
les
push
sti
lock
or
cmp
push
fisttpl
aas
lea
jbe
in
lahf
xor
inc
ljmp
jge
dec
div
jp
dec
push
sti
sub
mov
arpl
scas
cmp
xor
inc
std
inc
lahf
dec
ss
les
cmpl
fcoml
gs
dec
pop
sub
je
cwtl
cmp
mov
mov
das
std
aaa
repnz
jae
cld
bound
mov
imul
xchg
mov
sub
dec
or
loope
push
outsl
jae
pop
insl
jbe
jg
movsl
mov
dec
mov
test
icebp
testb
xor
push
adc
mov
xchg
aaa
dec
movsl
outsl
cmp
sbb
inc
loopne
push
sub
lret
cmp
adc
sub
fs
jne
push
cltd
jbe
dec
repnz
fbstp
movsb
and
mov
mov
or
test
lods
stc
lods
sbbb
dec
je
inc
sub
cmp
xor
xor
mov
mov
imulb
cmp
sub
pop
stos
subl
mov
mov
shlb
xor
mov
sub
xchg
and
push
sub
inc
data16
scas
inc
push
ret
xor
lock
jne
xor
sub
shlb
add
ds
movsb
shll
inc
sub
jb
sub
mov
or
imul
inc
cmp
cmpsl
mov
xor
out
outsl
mov
movb
or
sub
fcmovnu
mov
add
rcll
xchg
adc
sub
add
push
rcll
lods
aam
push
lret
xchg
popf
out
cmpsl
cltd
mov
ret
sbb
bound
bound
sahf
imul
push
fwait
pusha
mov
inc
push
pop
lret
push
pop
xorb
push
dec
xorl
aaa
cmp
and
stc
jb
inc
les
sub
inc
push
cld
or
lock
xchg
outsl
idivb
jp
pop
cmp
movsb
adc
aaa
xchg
movsl
mov
mov
in
fdivr
ja
inc
sbb
push
lods
sub
std
bound
xchg
jae
xchg
in
add
cs
cmp
shll
mov
push
aas
sub
jl
mov
jl
or
cmp
sub
cmp
cmpsl
push
inc
cmp
sbb
mov
dec
sbb
cli
jmp
bound
test
sarb
jno
xor
sub
dec
insl
scas
test
dec
push
mov
cld
dec
ds
loop
fsubs
xchg
scas
popa
xor
addl
movsl
xorb
add
jmp
fbld
cmp
jbe
inc
add
or
dec
out
shrb
cli
and
pop
movsl
ljmp
aas
mov
pop
out
pop
xchg
pop
push
es
out
das
dec
push
cli
dec
inc
or
dec
pop
push
mov
or
xchg
cmp
push
inc
mov
jne
xor
bound
idivl
mov
aaa
test
bound
adc
stos
xlat
popa
out
jp
push
mov
pop
cmpsl
loopne
cmp
cmp
jl
jbe
popf
das
sub
dec
and
cmp
incb
inc
popa
inc
ljmp
lret
sub
pop
gs
fisubl
jle
dec
dec
push
pop
arpl
sarb
push
fnstcw
cwtl
mov
dec
popa
repnz
push
inc
pop
inc
fadds
mov
xchg
jns
xor
je
fmuls
lock
test
cmp
jg
or
cmp
mov
inc
dec
lock
cmp
jp
pusha
movsb
xchg
jne
pop
cmp
arpl
mov
cli
push
push
in
sub
push
mov
outsl
pushf
inc
dec
imul
dec
dec
push
cmc
ret
mov
or
inc
push
add
adc
or
les
mov
popa
cmp
jecxz
scas
cli
push
jno
sub
sub
pop
dec
sbb
jae
iret
into
cmp
pop
pop
leave
ss
mov
fld
or
popa
dec
cmp
sub
repz
rcrb
jb
inc
lods
push
cmp
push
icebp
test
lcall
insb
inc
jb
fmull
pop
and
and
mov
xchg
mov
outsb
insb
mov
in
cmc
jbe,pt
sub
pop
outsl
jg
cmpsb
adc
jne
mov
jbe
movsb
inc
data16
jmp
sub
mov
sub
pop
sub
push
sub
ficomps
les
or
sub
fdivs
push
xchg
xor
mov
clc
push
daa
sub
jp
mov
aam
insl
sbb
fsubr
sub
xchg
adc
sub
ljmp
fisttpl
sub
push
or
sub
int3
adc
or
aaa
inc
dec
cmp
xchg
mov
mov
aas
dec
sahf
xor
sbb
sub
push
adc
push
sub
mov
out
sbb
das
test
cltd
lea
pushf
jp
test
aad
jno
lret
cmp
mov
jo
xor
test
outsl
xchg
add
das
xchg
sub
cltd
cwtl
movsb
sub
aam
dec
shlb
adc
pop
xor
popf
ljmp
or
jecxz
ljmp
bound
mov
sub
aad
sub
xor
sub
rcll
movsb
adc
clc
sahf
fidivrl
pusha
dec
shrl
sub
shr
dec
cs
and
sub
int
cmc
js
mov
dec
jle
dec
roll
sub
mov
inc
and
sbb
insb
cmc
fcoms
mov
and
inc
fdivrl
fwait
ret
mov
ds
fwait
push
addl
sub
fcmovb
xor
in
mov
lods
sub
stos
xchg
cmp
mov
push
push
popf
mov
stos
cs
ljmp
cltd
mov
icebp
clc
rorb
add
movl
or
scas
xor
cli
adc
or
imul
sbb
jmp
test
sub
mov
and
shlb
mov
dec
sbb
cmp
pop
or
cwtl
popf
sub
fnstenv
pop
xchg
inc
fsubrs
pop
inc
sbb
lahf
cmc
jno
jmp
inc
outsl
pop
lods
push
inc
sub
das
es
sbb
dec
enter
push
xor
iret
inc
xchg
pop
fcmovnbe
cmp
jno
aaa
pop
dec
test
pushl
pop
ds
fstpl
sub
sub
sub
pop
test
dec
cmpsl
stos
xchg
jl
pop
mov
mov
lods
int3
fisubrl
dec
jne
cwtl
loopne
mov
mov
sub
repnz
dec
mov
enter
dec
mov
jp
push
add
sub
mov
orb
ja
cmpsb
lret
loopne
jae
jns
mov
sub
and
pusha
mov
inc
sub
inc
aaa
incb
out
imul
aas
sti
xor
mov
sub
jge
test
gs
sub
das
repz
repnz
aam
test
and
sub
out
jne
pop
add
std
mov
cmp
cli
ss
add
sub
lret
daa
push
cmpsb
mov
adc
sub
mov
outsb
sub
enter
das
orl
rclb
push
stos
pop
mov
xchg
mov
sbb
addl
das
test
lret
dec
xor
sub
xor
sub
push
outsl
mov
dec
std
sub
rcrl
mov
or
repz
fcmovbe
sub
outsb
cltd
mov
movsl
jb
or
fs
cmpl
ret
lret
repnz
stc
nop
adc
push
adc
dec
lret
out
sub
outsb
sub
lock
jne
jb
cwtl
icebp
push
xchg
rol
scas
inc
test
iret
lret
mov
movsb
ja
dec
cmp
dec
and
test
pushf
xchg
in
addb
sbb
std
jno
inc
sahf
add
pop
lods
dec
fsts
sub
std
mov
cwtl
sub
out
data16
mov
jg
mov
arpl
cld
mov
and
mov
int3
sub
pusha
bound
daa
scas
mov
scas
sub
push
add
sub
xor
jge
add
jp
pop
push
cld
sub
stc
imull
pop
in
inc
ja
sbb
pop
dec
xchg
ljmp
orb
stc
pop
movsl
je
pop
jnp
ljmp
xor
ljmp
inc
push
sub
cltd
jnp
jle
shlb
sub
ret
sub
adc
out
mov
cmc
ljmp
stos
sub
mov
push
cmp
jb
stc
je
jmp
ljmp
push
cs
stc
sub
jb
je
call
outsl
cmc
sub
jecxz
enter
repz
ficompl
std
fwait
ret
ljmp
repnz
xchg
dec
add
rcrl
xchg
pop
jae
push
add
test
imul
fs
jmp
fildl
ss
out
and
into
std
les
lahf
js
subl
test
jno
je
mov
ret
dec
rcl
xchg
push
ss
jo
lock
testl
movsb
push
lret
cmp
or
sub
mov
mov
sbb
or
cmpsl
ret
mov
out
inc
push
mov
pop
mov
ljmp
xor
mov
lock
sub
dec
movsl
sub
aad
jmp
sub
js
mov
jge
stos
dec
pop
sbb
in
or
and
mov
lret
cwtl
cmpsl
movq
test
push
out
subb
aad
mov
sub
xor
pop
lret
test
adc
sub
add
mov
sub
xor
notb
inc
sub
sbb
sub
jnp
sete
add
ja
fistps
jmp
clc
pop
sub
push
and
js
test
or
fwait
insl
into
adc
ljmp
push
aad
xchg
insb
sarb
fbld
lahf
ficomps
shrl
and
inc
shlb
mov
mov
js
dec
shll
icebp
addr16
pop
add
mov
lret
push
repz
lods
cmpsb
clc
sbb
andb
pop
sbb
cwtl
ja
ror
mov
push
sub
movsl
or
pushf
stos
sub
jl
xor
jmp
lock
lods
and
jge
jo
mov
cmp
stos
ud2
ljmp
sahf
xchg
sub
cs
cmpsb
cli
jno
xchg
dec
dec
mov
arpl
sub
jne
jnp
adc
mov
nop
std
hlt
or
jb
pop
repz
shrd
loopne
cli
add
popf
aad
out
xor
xchg
pop
or
mov
nop
outsl
data16
out
out
mov
lcall
pop
mov
pusha
sub
adc
xor
test
insl
jbe
fdiv
add
repz
and
aam
mov
jge
aad
sbb
sub
add
les
test
mov
dec
push
jg
mov
pop
in
inc
mov
mov
out
adc
aam
decb
inc
popa
sbb
sub
dec
inc
lret
and
and
std
sub
pop
inc
sub
mov
mov
xor
test
xchg
sbb
lret
outsb
sbb
cmp
xlat
jae
enter
sub
sti
mov
mov
dec
les
xor
aas
or
cmp
shl
lock
loope
aad
into
inc
mov
adc
pushf
xchg
xchg
push
outsb
lods
or
gs
mov
pop
sub
push
mov
std
jge
sub
mov
cltd
insb
lock
jns
mov
scas
push
arpl
jg
out
lret
cltd
mov
pop
cs
mov
icebp
rcll
sub
aad
adc
inc
add
push
movsl
inc
in
loope
lea
ljmp
lret
mov
shlb
leavew
mov
sub
mov
ret
popa
sub
cmp
push
mov
sub
or
enter
sarb
fsubs
repnz
add
inc
dec
sub
clc
xchg
dec
subb
into
test
test
add
outsb
cmp
xchg
jnp
inc
fucomp
fs
fsubr
pop
stos
out
sub
test
pushf
dec
and
mov
jae
xchg
add
cmp
xchg
rcrb
leave
sub
mov
inc
jle
and
fimuls
shrl
sbb
inc
sub
mov
push
sub
out
push
cmpsl
test
enter
and
mov
jmp
out
lock
sbb
sub
idivl
cmpsb
jg
hlt
mov
and
jle
std
mov
pop
sub
xchg
fwait
sbb
repnz
test
inc
scas
iret
mov
xor
inc
xor
sub
jnp
lahf
push
scas
popf
jl
pop
imul
fsubs
sub
inc
mov
cli
into
fs
push
sub
fiaddl
aas
bound
dec
or
pusha
shll
jo
out
jns
leave
stos
adc
or
cmp
repz
jp
mov
xor
dec
inc
test
or
xchg
ret
sub
insl
ljmp
mov
cmp
sub
mov
mov
xchg
sub
push
jb
movsl
hlt
sub
push
pop
int
in
mov
sub
mov
and
mov
mov
mov
in
push
mov
out
xor
and
push
cmp
repnz
mov
jo
arpl
jns
loopne
rol
loope
test
bound
cmp
in
out
xchg
int
inc
rdmsr
jnp
push
adc
mov
stos
imul
negb
xor
xor
dec
popf
test
je
push
sub
xor
pop
les
js
insl
out
cmp
sub
hlt
std
pop
and
in
sub
aam
cmp
xchg
push
pop
fiadds
test
mov
inc
sub
gs
popa
ljmp
js
push
cmp
and
mov
jno
fs
sbb
or
cs
mov
negl
inc
iret
fst
es
xor
mov
push
out
repz
or
iret
out
sub
fiadds
mov
jmp
dec
jge
push
pop
dec
test
ss
cld
push
ljmp
sahf
fistps
lds
add
es
or
mov
icebp
sub
lods
mov
mov
orb
dec
pop
xor
xor
repz
mov
add
and
sub
push
mov
inc
jmp
dec
push
sub
fsubl
lret
subl
test
pop
repz
fsubl
lock
jno
mov
jecxz
in
cmpsb
out
adc
push
enter
xchg
test
mov
sbb
sub
push
gs
sbb
notb
outsb
jecxz
fbstp
mov
and
pop
fnstcw
pop
test
sbbl
ret
push
sub
add
dec
frstor
sahf
mov
outsb
test
jecxz
subb
push
data16
in
and
cli
push
aaa
xlat
gs
jp
sub
push
adc
sti
sub
clc
icebp
test
pop
sub
xor
fs
or
xchg
sub
rcll
in
ljmp
mov
pop
sub
add
mov
inc
xchg
push
enter
mov
mov
push
pop
pushf
push
insb
mov
das
sub
inc
or
adc
je
sub
ljmp
js
mov
push
ljmp
sub
sub
mov
lea
scas
cmp
outsb
aaa
add
loop
and
int
jae
test
test
mov
jbe
lcall
add
push
push
sub
jno
adc
add
xchg
push
fbld
pop
cmp
fdivs
ljmp
sub
fwait
or
jp
loope
cmp
sub
mov
ja
cmp
scas
outsl
or
test
sub
out
inc
lcall
pop
dec
push
or
loop
lcall
and
sub
loope
cmp
jle
sub
sub
cwtl
outsl
sbb
out
dec
jmp
cmpsb
in
push
dec
sub
jge
mov
leave
fistpl
fidivs
pop
call
imul
shlb
xor
cltd
mov
pop
jmp
sub
aas
mov
andb
inc
mov
push
cwtl
mov
stos
fimull
mov
xor
and
cwtl
sub
mov
sub
and
scas
pop
fwait
sub
mov
and
bound
sub
lea
xlat
lret
fdivrp
into
mov
lahf
add
sub
lock
push
or
jle
test
mov
cmp
testl
sbb
aam
sub
ret
sbb
adc
sub
mov
ret
jns
mov
bound
clc
test
addr16
jno
ds
dec
ljmp
sub
faddl
mov
fwait
push
sub
pop
mov
or
insb
sub
pop
in
movsb
mov
mov
sub
cmpsl
xchg
int3
mov
push
push
cmp
loope
push
cmp
cltd
dec
pop
push
mov
mov
daa
adc
cmp
dec
movsl
adc
mov
xor
push
test
mov
mov
das
sub
add
sti
and
je
xor
pop
mov
mov
nop
dec
sub
or
scas
das
popa
ss
sub
fnstenv
cmp
out
fisubrs
sub
inc
cmp
mov
pop
sarl
xor
push
sub
fiaddl
mov
and
mov
inc
sub
dec
inc
aas
imul
int
data16
aaa
jge
sub
mov
out
ljmp
sti
push
dec
movsl
mov
xor
scas
add
je
pop
test
fsubr
adc
lods
lcall
popa
xchg
jno
cld
jae
and
mov
out
or
dec
sub
jmp
jae
pop
test
out
mull
fistl
mov
dec
sub
cmp
lcall
or
pop
and
sbb
mov
and
add
inc
add
mov
movsb
mov
ljmp
cmpsl
push
lea
sub
test
fisubrl
sub
pop
sbb
dec
mov
inc
jae
jmp
cmovbe
dec
sub
rcll
adc
sub
adc
add
scas
aas
jb
jg
ljmp
idivb
mov
push
push
inc
jns
inc
lods
cmp
stos
pop
add
cmp
pop
jp
repnz
dec
fucomp
dec
popf
subl
pop
popf
sbb
pop
mov
sub
sub
addr16
xchg
inc
sbb
push
xchg
sbb
cli
out
mov
int
xor
arpl
jbe
push
mov
int3
pop
test
repz
xor
cmp
sahf
inc
ds
imul
cmp
lea
mov
dec
mov
lods
push
pop
loop
ja
inc
sub
inc
push
xchg
cmpsb
xor
mov
ret
push
cld
into
mov
mov
mov
sub
movsl
lea
jo
icebp
sub
gs
sub
mov
xchg
bound
jnp
movsb
push
sub
mov
push
add
pop
pop
mov
adc
sub
lcall
sub
ficomps
mov
push
fbstp
push
cmp
cmpsb
lahf
daa
mov
fwait
dec
dec
dec
inc
ret
sub
pop
ljmp
jp
pop
sbb
cmp
mov
sub
and
or
sub
xor
shlb
and
or
cltd
test
int3
adc
jl
lock
inc
inc
sub
or
int
loope
sub
jle
mov
cmp
sbb
rorl
inc
mov
ljmp
das
mov
cmp
sub
rclb
inc
bound
stos
xor
add
jns
aad
push
sub
outsl
fisttpll
ljmp
jns
ret
or
pop
pop
push
mov
test
inc
pop
movsb
shll
clc
dec
xlat
stc
sub
xor
mov
sub
aas
dec
popf
adc
lret
leave
fisubs
ret
fdivl
test
xchg
adc
push
test
into
mov
std
lahf
inc
mov
dec
fistl
dec
imul
lea
mov
xor
out
call
pop
or
sub
ja
jg
mov
sub
sub
or
test
dec
pop
sub
clc
lock
sub
xor
ljmp
in
cmp
stc
cmp
sub
mov
or
push
subl
pusha
sub
pop
aad
add
mov
loopne
mov
mov
pop
push
xchg
in
test
jge
xchg
test
sub
sahf
mov
or
test
mov
shll
in
sub
xchg
ds
rclb
pop
mov
xor
aaa
loop
mov
ret
jl
sub
je
sub
les
lods
and
pop
xor
mov
or
sub
arpl
mov
mov
mov
xor
sub
adc
cmc
push
shrb
ficoms
or
inc
xchg
ss
es
sub
shrl
cltd
jp
je
adc
aam
mov
pop
mov
mov
jle
orb
je
ljmp
mov
cmp
pop
cmpxchg
shlb
mov
cmp
cmpsb
int
or
cmp
pop
jl
sub
pop
mov
imul
test
jne
sub
popa
mov
cmp
sub
sar
gs
xor
hlt
dec
cs
lret
clc
std
push
dec
aaa
sub
xchg
dec
lahf
ja
jge
test
pop
add
out
adc
mov
orb
hlt
movq
loopne
pop
mov
out
push
xor
pop
sub
xor
add
inc
inc
pop
pushw
and
inc
jp
mov
lret
cmpsl
aas
adc
cmc
out
inc
or
test
add
sub
repnz
lods
outsl
sub
es
inc
cmc
jge
test
xor
push
dec
add
mov
mov
loop
dec
jl
add
scas
pop
subl
mov
in
or
test
mov
pop
mov
not
and
mov
or
imul
sub
mov
fnsave
mov
cltd
or
xor
into
mov
pusha
dec
cmp
xor
xchg
mov
addr16
adc
cmp
sub
push
je
mov
sub
aad
ds
sub
testl
test
xchg
outsb
jp
cmp
mov
sub
inc
adc
out
pop
xor
jo
lods
sub
stos
adc
lret
incl
pushf
cmp
pop
cmp
sub
sbb
mov
jl
mov
mov
dec
fildll
lds
in
jb
cmp
sub
xor
icebp
cmp
or
sub
enter
sub
and
std
aaa
mov
xchg
out
cmp
inc
in
push
out
cmc
or
lea
negb
adc
clc
cs
jbe
movsb
andb
scas
stos
adc
push
nop
mov
arpl
orb
mov
loopne
cwtl
test
int3
dec
push
gs
sub
fsubrs
sub
xchg
cmp
movb
xchg
sub
mov
lock
inc
fdivrl
pop
sub
aaa
hlt
cmp
pop
out
roll
dec
xor
jle
or
jae
int3
inc
xor
xlat
dec
lahf
mov
out
sub
xchg
mov
or
dec
lods
lcall
sbb
shr
xchg
out
mov
dec
mov
decb
fcmovnb
mov
sub
ja
addr16
hlt
pop
lds
movsb
sub
mov
jp
aad
int3
and
xor
fnsave
out
xor
fwait
aam
pop
pop
adcb
sub
xchg
movsl
sbb
movsb
add
jbe
inc
bound
sti
adc
push
sub
dec
inc
lods
popf
pop
popa
out
inc
imul
cli
sub
dec
daa
jle
imul
cmc
ss
push
and
into
sbb
cmpsb
sub
lcall
popa
ret
pop
out
sub
jne
outsb
cmp
cltd
xor
call
mov
sahf
jmp
jp
cmp
xchg
mov
cld
dec
repnz
mov
incb
mov
inc
cmp
sub
cmc
insb
inc
sub
sub
dec
lods
mov
fsubl
leave
jecxz
push
ficoms
in
imul
jne
in
test
lcall
cmp
test
and
es
sub
jb
push
shlb
sub
mov
cmp
inc
sub
movsl
xchg
outsb
test
or
sub
adc
xor
nop
test
sub
test
stos
sysenter
and
xchg
das
jp
jnp
std
cltd
fbld
cmp
je
jns,pn
pop
loope
fisubs
adc
les
sub
mov
sub
hlt
sarl
sub
fimuls
xchg
lea
sub
mov
fmuls
mov
mov
push
inc
out
xor
es
pop
shll
aam
pop
xor
mov
addr16
jno
push
add
sbb
dec
sbb
xor
xchg
shrb
loope
sub
imul
cmp
pop
and
mov
sub
leave
inc
test
in
enter
out
jne
ljmp
cld
sbb
daa
sub
add
stc
inc
ficomps
cmp
ja
jne
sub
sub
mov
into
sub
mov
lds
jno
jns
out
xor
and
sub
arpl
add
jmp
mov
pop
sub
jo
xor
sub
ds
push
roll
out
repz
or
mov
cld
out
jge
mov
dec
sub
sub
xchg
jmp
cmpsb
lahf
pop
cmp
les
add
int
sub
jg
sahf
push
push
and
sarb
jno
mov
loop
inc
or
inc
pop
aaa
fstl
enter
adc
adc
jl
sub
test
push
sarl
test
jle
mov
mov
pop
ljmp
cs
test
rcrb
ss
out
sti
jp
ja
mov
out
stc
xor
outsb
or
lcall
shll
push
int
ret
cmp
or
sub
mov
xchg
cmpl
pop
lock
div
and
xor
sub
inc
imul
clc
test
cmp
lock
jp
push
add
jb
int
push
shll
rcrb
lret
std
sub
jbe
xor
and
mov
cmc
xchg
pop
cmpsb
sbb
cmp
dec
mov
in
fwait
or
imul
ret
int3
mov
mov
jbe
cmp
and
xchg
mov
aam
dec
sub
in
cmp
xor
into
dec
rcrb
xchg
bound
fsubr
in
sbb
js
cs
fidivrs
lods
aad
jp
scas
add
daa
stc
dec
jecxz
mov
xchg
sub
xchg
mov
xorl
ljmp
in
pushf
sub
dec
adc
stc
jo
pop
mov
push
inc
mov
out
pop
shl
xchg
cmpsb
dec
rcrl
sub
test
bound
test
dec
jmp
icebp
push
cmpsb
nop
lret
push
shlb
cmp
mov
in
lcall
inc
cmc
lds
xchg
mov
mov
les
roll
and
sub
add
mov
fwait
sub
out
adc
addr16
dec
iret
mov
cmpsb
movsb
xor
icebp
bound
and
lea
pushf
sub
popf
insl
xchg
pop
sub
mov
and
mov
adc
imul
mov
into
inc
cmpsb
adc
push
scas
add
push
test
aas
ret
imul
sub
xchg
mov
mov
loop
sub
or
lret
ljmp
mov
mov
in
dec
dec
sub
sub
int
cmp
imul
imulb
pusha
shlb
xchg
or
rcl
movsl
cmp
push
xor
sub
xor
mov
sub
out
inc
pop
push
dec
icebp
pop
mov
sub
cmpsl
inc
dec
push
pop
pusha
sub
es
sbb
stos
in
sub
insl
dec
and
fstpt
xchg
stc
movsb
rol
sub
test
push
sub
fsub
fldt
enter
pusha
xor
ja
pop
stos
pop
xor
imul
sub
dec
jae
add
fwait
pop
mov
jbe
or
sub
inc
cmp
pop
jmp
test
cmp
pop
mov
fstps
cmpsb
ljmp
xchg
clc
sub
pop
dec
fisubs
xor
outsl
imull
lds
es
sub
xchg
js
lods
hlt
sub
push
push
pop
inc
das
rcrb
mov
stc
xor
sub
mov
int
mov
push
out
pop
orl
sub
mov
repnz
mov
popf
sub
jl
jmp
loopne
jmp
ss
lods
push
sub
cld
xor
test
outsl
js
sahf
rorb
movsb
std
ficoml
out
ja
cmp
int
lds
loopne
aad
ljmp
comiss
idivl
popf
imul
mov
xorl
subb
mov
sbb
mov
inc
into
pushf
jmp
pop
pusha
fimuls
jbe
add
aas
lcall
cwtl
scas
jns
xor
adc
sub
aam
xchg
int3
jge
iret
test
dec
and
sbb
sub
jno
cmpsb
loope
push
sub
xlat
cltd
scas
ljmp
aaa
sub
stos
cmp
sub
jmp
jecxz
pop
push
mov
and
cmp
divb
xchg
xor
pop
inc
js
hlt
or
push
dec
cmpsb
push
push
or
mov
sbb
fadds
xor
sbb
ds
sub
call
push
sub
dec
pop
sti
shlb
mov
test
int
and
fistpl
mov
test
outsb
or
jne
sbb
push
xchg
sub
in
xchg
sub
sbb
sub
lret
movsl
dec
cmp
push
jne
push
mov
aad
dec
lds
loop
sub
mov
and
or
cmp
mov
icebp
test
mov
shll
mov
negl
fldt
push
and
mov
xchg
mov
mov
test
add
aas
subb
mov
mov
sub
adc
mov
pop
jbe
ljmp
xor
sub
sbb
out
arpl
in
lret
int3
push
cwtl
add
sub
ret
fsubrs
out
cmp
pop
cli
cmc
sub
mov
add
dec
jp
cmp
ds
stc
insb
mov
sub
rclb
aaa
jle
movsl
ljmp
sub
pushf
lcall
sbb
dec
inc
or
int3
fucomip
ljmp
add
test
loope
inc
in
jle
ljmp
sbb
test
ja
sbb
out
pushf
push
ficoml
push
sub
and
cmp
xchg
inc
out
sub
ja
xor
jge
insb
je
push
arpl
aas
aad
lock
cmp
pop
out
cmp
and
ds
jmp
cmpsl
sub
fcompl
or
or
jno
movsb
mov
mov
dec
mov
leave
rcrb
andl
xor
sub
dec
leave
mov
adc
xchg
loop
ss
repz
test
push
sub
add
bnd
sub
clc
iret
subb
push
inc
shll
cmp
pop
sub
mov
imulb
push
jl
movsb
in
or
out
cmp
insb
sub
push
mov
out
and
push
sub
movsl
in
sub
push
xor
xchg
dec
sub
mov
roll
push
pop
repz
adc
mov
cmpsb
mov
notb
jmp
mov
adc
das
cmp
sub
mov
sub
push
jle
ljmp
jge
shlb
roll
movsb
sub
cwtl
addb
daa
and
lock
mov
leave
stos
jge
ljmp
outsb
push
pop
sub
jno
cli
fildll
fisubl
les
imul
jge
and
sub
movsl
fsts
sti
int
sub
test
mov
fsubs
fimuls
outsl
cmp
in
inc
push
insb
stos
je
pop
jbe
mov
or
push
and
cli
cmpsl
insb
fdivrs
xor
cmp
jl
scas
cs
out
adc
pop
pop
sub
sub
shrb
sbb
sub
ds
clc
pushf
inc
or
sub
cltd
shrb
ds
mov
mov
xchg
lret
bound
pop
mov
mov
sub
sub
push
xchg
int3
sub
jge
out
and
sahf
mov
orb
pop
jp
sub
loopne
aas
daa
sub
movsl
pop
xor
and
sub
adc
jbe
inc
lcall
mov
xchg
in
enter
cmp
hlt
test
test
in
shll
cmpb
fwait
outsl
dec
bound
push
xchg
jmp
lock
add
scas
pop
or
mov
mulb
mov
lock
jl
inc
call
sbb
faddl
pop
outsl
popa
or
das
addb
cmp
push
fsqrt
xor
out
jo
sti
mov
cmc
xor
mov
dec
mov
push
xlat
pop
dec
rorl
push
adc
jle
test
pop
cmc
or
sbb
mov
xchg
inc
xor
loop
movsb
mov
push
fisubrl
sbb
cmp
cltd
decb
fmuls
sub
pop
repnz
mov
shll
mov
dec
sub
xchg
lock
int
lods
sub
shll
mov
push
inc
xor
lret
mov
in
dec
add
jge
and
stos
mov
sub
push
out
xlat
sub
in
aam
lea
mov
inc
jge
xor
mov
jbe
lret
xchg
sub
xchg
sub
push
hlt
xchg
pop
push
mov
mov
leave
out
mov
lahf
adc
push
sub
push
daa
jp
ds
insl
jg
xchg
push
imul
dec
clc
and
push
lods
jb
push
jp
insb
xchg
cmp
mov
stc
lret
mov
add
aaa
ret
cmp
ljmp
push
bound
xchg
and
or
mov
sub
aaa
data16
loope
sub
clc
jle
call
ja
sbb
out
ret
xor
dec
xchg
call
int3
xor
test
aad
cmp
inc
insb
mov
rclb
push
xchg
lock
ja
and
bound
pop
fcmovu
test
cmc
jae
xor
addr16
ljmp
mov
lgs
inc
mov
int
lret
push
leave
cwtl
popa
in
xchg
repz
iret
fwait
inc
into
ss
xor
lahf
push
movsb
rdpmc
pop
ds
adc
adc
in
pusha
pop
call
inc
daa
fildl
xor
data16
or
sub
aaa
mov
push
dec
frstor
push
loopne
pop
cmp
sub
or
push
dec
mov
xor
sub
inc
xor
jg
push
sbb
fstpt
movsl
jge
xchg
cli
lds
mov
incl
mov
stos
loope
mov
stc
xor
in
lret
push
outsl
sub
stos
xchg
lret
data16
ljmp
decl
jg
rolb
mov
fbstp
int3
gs
hlt
adc
aaa
test
pop
jle
adc
inc
sbb
imul
and
add
cltd
bound
je
insl
loopne
icebp
adcl
dec
les
imul
mov
nop
mov
dec
or
or
mov
sub
lret
int3
lods
inc
cmpsl
ficoms
rcrl
test
orl
test
int
loopne
mov
movsl
push
dec
jnp
das
dec
scas
adc
mov
lcall
dec
mov
jno
push
jae
xchg
jnp
push
inc
dec
or
inc
mov
subl
int3
lds
jmp
sbb
fldcw
jne
fistl
in
js
cld
into
clc
shll
ret
lret
sbb
fdivrp
aaa
sub
ja
lods
jbe
sub
daa
mov
mov
loop
adc
sets
mov
loopne
jp
jns
imul
xor
arpl
xchg
mov
inc
test
sti
and
subb
fcmovne
sbb
adc
shrb
test
lret
jne
xrelease
cmpsl
aam
jno
jge
sub
dec
lahf
mov
add
sub
popa
jmp
pop
sub
push
inc
sub
sub
cwtl
fucom
mov
js
xchg
test
test
or
roll
outsl
rclb
aas
cmp
mov
orl
xchg
mov
mov
movsb
adc
mov
cmp
inc
sub
pop
lret
jno
dec
shlb
sub
outsl
push
adc
sub
loope
mov
pop
lahf
andps
push
sti
sub
or
sub
jns
or
sub
shll
adc
ds
sbb
or
dec
adc
xchg
loop
cmp
test
test
aam
xchg
lret
or
sub
ja
fsubrl
ds
pop
add
cmp
inc
cwtl
shr
lock
sub
clc
add
jb
dec
sub
push
lahf
xchg
xor
sub
xor
mov
sbb
sbb
and
and
sbb
loopne
jl
out
sub
cmp
mov
add
les
mov
lea
ljmp
mov
cs
sub
in
inc
data16
pop
cmp
inc
adc
fisubl
mov
push
hlt
fistps
sub
cmp
pop
test
lods
fadds
mov
push
inc
cmpb
lods
xchg
jle
jp
pop
fnstcw
sub
mov
sub
test
aaa
ds
stos
ljmp
rcl
pushf
test
vucomiss
mov
ds
xchg
pop
mov
aas
inc
xchg
xor
lret
jae
pushf
jle
xchg
icebp
popf
dec
shll
push
sbb
out
sbb
xchg
sub
dec
scas
dec
lret
push
sub
gs
mov
cmp
out
xor
shrb
xchg
adc
or
shll
pop
aad
pop
popa
cmpsl
or
pop
bound
int
mov
push
mov
mov
bnd
sub
jno
shll
xor
push
mov
jbe
popf
push
pop
in
imul
mov
imul
add
ret
fcompl
xor
pushw
sub
aas
cwtl
test
xchg
xor
push
negl
mov
mov
test
outsl
or
dec
enter
adc
sub
shl
fisubrl
jno
cwtl
pop
inc
test
add
or
insb
mov
push
sbb
sub
fsubl
mov
movsl
jmp
sarl
test
mov
pop
mov
pop
mov
add
cli
je
mov
lock
cmpsl
icebp
int3
sbbb
sub
stos
lds
cwtl
push
dec
in
xchg
call
inc
sub
mov
mov
sub
sbb
cmp
dec
test
jl
adc
in
sub
adc
jecxz
add
sub
fildll
xor
call
aad
sub
add
pop
inc
cmp
xchg
add
hlt
fcoml
test
mulb
xchg
outsb
dec
les
call
add
mov
inc
mov
or
fidivrs
aad
out
xor
dec
insb
pop
sub
jl
mov
dec
lods
sub
rcrl
cld
int
daa
repz
es
sbb
xchg
sub
jae
fwait
sub
or
sub
jl
mov
int3
inc
outsb
imul
push
fisubrl
sbb
fucomip
mov
cld
cmp
mov
pop
sahf
cltd
in
sub
dec
stc
mov
push
jmp
sub
rorl
addb
std
jns
pmaxub
loopne
inc
sbb
xor
movsl
clc
test
mov
mov
sbb
lcall
mov
jnp
ret
jns
int3
adc
scas
arpl
sub
es
imulb
repz
xor
sub
add
dec
fdivl
test
jmp
subb
mov
and
push
daa
in
stos
sub
jae
cli
sub
mov
sub
repnz
imul
out
sub
add
or
sub
iret
push
jno
rcrb
aam
sub
mov
and
mov
mov
cmp
int3
xor
out
xchg
sub
test
ret
xor
jge
cmp
adc
lods
xchg
outsb
jecxz
and
fsubrs
cmpb
movsb
push
movsl
sub
cmp
pop
or
lret
aas
sub
pop
nop
mov
xchg
push
jnp
or
mov
and
mov
mov
stos
in
lds
ds
sub
mov
sub
and
jno
loope
lret
rorb
cwtl
adc
and
cmp
add
sbb
xchg
pop
mov
cmc
stos
inc
test
push
test
pop
adc
adc
aad
stc
dec
xchg
mov
shl
inc
adc
mov
in
dec
jne
daa
dec
fisubrs
fstpt
cwtl
in
lds
mov
jmp
pop
les
fsubrs
in
mov
xchg
sub
clc
movsb
subl
rclb
cmp
ljmp
mov
je
and
dec
cltd
sub
xor
sub
fs
lods
out
or
push
int3
insl
stos
adc
inc
mov
negb
or
loope
inc
int
sub
cmp
dec
sti
xchg
sbb
out
xor
xchg
mov
mov
push
jns
out
fildl
xor
sub
dec
sbb
adc
popa
cltd
imul
add
lcall
sub
fsubs
push
sub
stc
or
dec
popa
sub
cli
ret
mov
mov
sub
movsb
xor
or
cmpsb
mov
push
popf
sahf
jle
imul
and
push
call
and
pop
dec
cmp
and
pop
xchg
xor
sub
push
sub
int3
shrl
pusha
fucomi
push
notl
test
ret
sarl
ss
cmp
or
movsl
ds
dec
push
push
gs
ret
mov
xchg
pop
dec
or
and
or
sub
pusha
mov
mov
int3
xor
ljmp
push
push
and
out
cmpsl
loopne
icebp
sarb
popa
mov
decl
dec
sub
in
dec
fidivs
cmpsl
push
stos
insl
pop
xor
jbe
es
stc
pop
xchg
jo
loop
iret
dec
jecxz
bound
rcl
sub
adc
dec
sub
mov
in
sub
ds
iret
ljmp
adc
and
addr16
das
pop
pop
lds
pusha
dec
movsb
pop
fists
popf
dec
pop
xchg
mov
sub
pop
and
sub
cmp
cmp
inc
sub
sete
pop
and
loop
mov
or
add
iret
movsl
fisubs
sub
inc
adc
std
sub
xor
inc
or
lret
lods
fbstp
pop
xor
pop
pop
into
sub
ljmp
cmp
cmp
int
dec
or
fsubl
sti
xor
sub
and
push
jae
outsl
nop
sub
gs
jge
fisubrl
or
mov
das
jmp
lahf
icebp
fldt
stos
popa
sub
cmp
inc
icebp
rcrl
sub
iret
push
mov
movb
jno
test
out
fwait
sub
movsb
cld
push
mov
faddl
sub
stos
data16
mov
pop
or
inc
cmc
xor
and
dec
mov
pusha
int3
imul
or
fidivrs
jnp
cmpsl
jo
sub
mov
scas
test
or
test
dec
sub
mov
mov
aam
fldl2e
sti
jge
fsubrs
add
jae
add
mov
call
pop
loop
sub
rclb
outsb
push
dec
in
inc
mulb
test
mov
push
sub
lret
pushf
cli
enter
sub
pop
aaa
dec
sub
imul
ljmp
test
lods
mov
out
aad
in
loop
test
push
or
std
addr16
xor
sbb
or
xchg
xlat
ror
pop
mov
jg
and
xchg
sti
sub
jecxz
mov
sub
xor
iret
adc
outsb
sub
popa
jo
add
lret
sti
lods
dec
enter
iret
cmp
imul
sub
clc
fisubrl
push
sub
jno
lods
mov
sub
inc
repz
ljmp
in
cmp
rcrb
xchg
out
mov
sub
and
stos
out
xchg
mov
cmp
pop
mov
mov
lea
push
cmpsl
lods
adc
gs
jmp
cmp
or
sub
rcl
lcall
jl
mov
mov
out
dec
gs
inc
and
inc
ljmp
test
mov
sub
pusha
push
clc
jo
lods
sub
or
mov
sub
cmp
push
lret
scas
xchg
push
rcr
mov
xor
mov
sbb
rorl
std
int3
fsubrl
or
mov
ror
loope
ljmp
dec
fs
negb
out
fistl
dec
xor
ret
leave
pop
pop
aaa
jp
mov
cmp
insl
out
push
xor
cltd
test
and
jns,pn
add
nop
imul
pop
sbb
and
sub
sub
aaa
repz
fiaddl
and
and
dec
repnz
sbb
iret
clc
push
in
movsb
mov
jo
dec
adc
in
mov
call
cvtps2pd
js
and
jmp
sbb
pop
shll
sub
sub
lahf
sub
push
jmp
push
sub
in
ret
lret
in
test
jae
cld
pusha
std
push
mov
lcall
cmpsl
call
cmp
pop
fisttpll
addr16
ss
mov
xchg
nop
dec
mov
test
in
jns
inc
mov
inc
fdiv
loopne
cmp
adc
insb
out
and
in
add
aam
push
negl
lods
sti
push
dec
jo
in
out
add
mov
adc
mov
in
xchg
orps
lods
daa
imul
adc
dec
mov
aam
sub
sbb
dec
fdivr
sub
lods
test
gs
insb
push
adc
movsl
xor
mov
notb
fisubs
out
adc
stos
xchg
imul
mov
das
andl
fistpll
popa
sbb
dec
adc
and
mov
push
ljmp
stos
xor
inc
sub
notl
shrl
fdiv
test
ljmp
inc
xor
xchg
fwait
es
dec
xor
js
sub
xor
das
pop
and
lods
mov
and
dec
xor
dec
sbb
sub
lcall
dec
and
shlb
mov
xchg
sub
add
fiaddl
sub
cmp
inc
adc
jmp
imul
movsl
je
sub
addr16
test
xor
cli
mov
outsb
std
and
dec
cmpsl
dec
fidivrs
fisubrl
mov
pmaxsw
sub
pop
adcb
push
pop
jg
push
movntps
add
loopne
mov
pop
sub
and
push
and
mov
sarb
push
fildl
sub
mov
and
cmp
mov
cwtl
sub
sub
aam
mov
icebp
inc
mov
test
push
mov
adc
bound
jge
loopne
xor
adc
in
sti
pop
jmp
adc
cmp
push
sbb
cmc
add
scas
sub
push
jg
and
push
movsb
sub
pop
notb
push
jecxz
sub
inc
xchg
inc
lods
sub
push
enter
xor
movsb
out
pop
sub
pop
jnp
data16
push
pop
test
es
sub
sub
lret
sub
inc
sbb
pusha
push
xlat
adc
push
mov
enter
sub
sub
pop
pusha
mov
js
sub
xor
les
mov
xchg
mov
jae
sub
fmull
hlt
movb
sub
outsl
jae
arpl
pop
in
sub
movl
lods
mov
pop
add
inc
inc
out
cmp
cs
pop
vpsrld
jb
jns
ss
sub
icebp
out
push
sub
movsl
fstps
dec
sub
cmp
ja
mov
mov
cmp
out
les
mov
xor
in
or
movsb
cld
hlt
jecxz
mov
sbb
mov
jbe
inc
or
and
adc
mov
ds
sub
push
mov
sub
mov
out
cwtl
data16
fiadds
mov
cmpsb
daa
xchg
ja
fsubrs
xchg
sub
sub
sub
xchg
lods
pop
mov
sub
cmp
sub
push
jno
mov
ljmp
sti
xor
push
test
or
adc
or
out
sub
stos
inc
sub
leave
sbb
outsb
jbe
loope
push
data16
add
mov
sbb
out
scas
rcll
push
orb
cmpsb
mov
mov
cmp
dec
out
sub
inc
sarb
sbbl
pop
mov
lcall
pop
inc
fsubl
xchg
addb
jne
mov
fwait
sub
xchg
cmp
popa
cs
mov
pop
hlt
andb
jo
adc
sub
clc
mov
test
imul
mov
jo
inc
dec
imul
and
lods
adc
jecxz
addr16
in
das
and
jbe
inc
cmpb
pop
pusha
test
test
popa
imul
xor
call
cmpsb
cmp
jge
mov
sub
cld
xchg
loopne
das
mov
pop
dec
ret
or
outsl
jb
push
or
inc
and
test
sub
imul
test
sbb
jmp
fsubrl
scas
cld
inc
movsl
outsb
and
push
fldt
ljmp
bound
lcall
int
in
stos
mov
xlat
daa
xchg
sub
ds
stos
arpl
inc
sub
leave
ja
clc
cmp
in
add
sub
in
xchg
adc
cmp
jb
inc
or
xor
clc
xadd
in
pop
mov
call
das
das
mov
push
add
sub
je
sbb
pop
dec
neg
and
std
sub
les
aas
sub
dec
stos
aad
jae
sub
fnstcw
lret
xchg
addr16
mov
cmc
pushf
and
fimuls
into
jns
sub
es
and
aad
jbe
push
repnz
out
and
insl
jno
or
dec
sahf
lahf
sub
sbb
int
jne
push
pop
sbb
sub
rorb
inc
nop
push
sub
add
repnz
sub
rclb
sub
dec
jmp
ds
lods
xchg
ret
das
xchg
roll
sbb
cld
xlat
leave
dec
rcll
int
sahf
xor
mov
bound
cmp
adc
xchg
jg
inc
lock
sub
inc
mov
insb
call
addb
sub
pop
push
sub
loopne
and
and
xor
push
mov
jge
mov
popw
imul
push
sub
jnp
inc
cmpsb
xchg
aas
cli
adc
adc
sbb
scas
test
or
cmp
jp
sub
mov
int
xchg
jge
xchg
mov
xchg
cwtl
sub
jmp
cmpsb
cmp
movb
inc
add
scas
mov
xor
push
sub
std
das
jecxz
test
icebp
mov
prefetcht1
fsts
fiadds
shll
sub
lcall
push
fadd
and
ljmp
sub
sbb
test
sbb
mov
jmp
sub
sti
push
es
mov
test
pop
popa
xor
stc
sub
or
lret
movsb
shl
cmc
jmp
sub
or
ljmp
lcall
lret
sbb
nop
sub
dec
push
sub
sbbl
ljmp
pop
ds
adc
mov
pushf
or
icebp
dec
sub
pop
lret
loope
mov
cmp
out
mov
lock
mov
add
jo
in
dec
sub
pop
lret
sbb
xor
rcr
pop
or
ja
jnp
pop
outsw
xor
xor
cmpsb
jb
arpl
hlt
push
sbb
pop
fistpl
push
das
inc
je
mov
jmp
mov
sub
clc
dec
lret
into
lods
test
mov
pop
or
aad
xor
stc
and
jne
xchg
sub
daa
aaa
push
dec
jmp
ljmp
mov
jae
cld
sub
dec
fs
or
sub
int3
cmp
sub
inc
mov
mov
jo
mov
dec
outsl
loop
mov
mov
sub
je
xchg
ljmp
push
sub
ljmp
jae
cmp
mov
test
scas
sub
sbbb
sub
push
add
sub
adcb
push
add
sub
int3
pop
insb
das
es
test
mov
cmp
test
adc
inc
pushf
in
loop
mov
fdivrs
repz
leave
repnz
xchg
add
dec
and
into
adc
sbbb
sub
fistl
outsl
xor
out
test
lods
insl
pusha
jg
jnp
testl
loop
sub
stos
fldt
dec
mov
cld
dec
or
sub
dec
mov
sub
xor
mov
arpl
dec
insb
dec
and
je
imul
cmp
movsl
fimull
or
mov
sub
ja
or
jb
in
or
or
add
arpl
adc
sub
cmc
jo
sub
das
sub
sub
lahf
mov
sub
sub
mov
and
in
sub
xchg
js
or
push
sub
sub
imul
das
push
push
push
sub
cvtps2pi
test
pop
addr16
scas
and
or
sub
add
xor
cmp
pop
repz
mov
xchg
inc
inc
add
in
fidivs
aam
adc
push
dec
sbb
xchg
sar
popa
xor
lods
sub
add
nop
pop
or
mov
jno
sbb
dec
lret
mov
cmp
sub
int
mov
lcall
fmull
adc
sub
in
int3
jae
inc
sub
push
mov
cmpsl
arpl
sar
mov
inc
sbb
jmp
pop
sbb
jne
sub
popa
clc
popf
leave
cld
ljmp
mov
jp
fwait
xor
sub
fsubs
ja
nop
ljmp
popf
push
and
adc
out
pop
add
pushf
add
aas
jo
jns
dec
leave
fwait
xor
sub
sahf
mov
lret
sub
mov
fs
mov
sub
and
aas
pop
lock
sub
mov
repz
cmp
mov
jge
cmp
cmpsb
call
sbb
outsl
shrb
inc
mov
outsb
sub
scas
sub
and
lea
pop
aaa
mul
jmp
jecxz
mov
mov
inc
xor
sub
pop
jle
stos
enter
sahf
xorl
mov
jecxz
arpl
lahf
iret
sub
out
loop
jp
cmp
fsubrl
scas
sbb
mov
outsl
dec
or
mov
sub
and
cmp
insb
mov
arpl
adc
push
jl
xchg
xor
mov
ret
pushf
sub
out
jle
fcmove
ljmp
decb
push
jp
dec
fsubrl
push
nop
mov
cmp
jne
mov
pushf
imul
lock
aad
xor
xchg
jnp
sub
icebp
push
sub
mov
clc
lret
mov
xchg
mov
dec
pusha
sub
and
sub
lea
rol
adc
xor
sarl
jecxz
cmp
mov
pop
cld
mov
mov
imul
fucomp
push
inc
xor
sub
cwtl
out
call
push
sub
and
fsubrs
dec
sub
xchg
mov
insl
sbb
lods
scas
and
sub
ja
loop
fmull
xchg
outsb
jae
inc
aaa
arpl
lods
out
lahf
rcrl
sbb
ss
insl
xor
push
sub
adc
in
out
sub
loope
mov
scas
dec
sub
jmp
sbb
test
ss
xor
cmpsl
sub
fistl
ss
mov
ret
out
sub
inc
inc
rorb
pusha
cltd
fistpl
push
push
call
jns
sub
xor
or
mov
cltd
add
imul
fwait
or
maxps
rorl
out
loope
sub
sub
and
call
sub
cmp
xchg
fsubrs
and
mov
push
sub
cmpsb
and
xor
xor
ljmp
mov
jl
sub
ret
test
cmp
pusha
loopne
xchg
dec
mov
imul
mov
sarl
push
mov
push
push
mov
mov
dec
sub
rclb
fimuls
sub
roll
pop
cli
sub
cmc
inc
mov
js
ds
insl
mov
inc
sub
sbb
loope
push
pop
pop
insb
push
add
and
iret
sbb
stos
xchg
sub
call
ret
sub
push
lock
cmpsl
xor
out
pop
dec
in
push
in
mov
sub
adc
sbb
jmp
push
incl
out
test
inc
sub
adc
push
push
sub
push
aas
in
test
jae
sub
add
add
dec
addr16
fbld
js
loopne
cwtl
cltd
cmp
test
notb
insl
mov
pop
test
fldcw
mov
pop
inc
popf
inc
sub
stc
nop
into
ficomps
sbb
push
inc
daa
in
sub
pop
mov
rcll
push
stos
xchg
sub
xor
sahf
pop
lea
cmpsb
pop
mov
sbb
push
stc
lcall
gs
sbb
sbb
das
inc
dec
sar
cmp
jae
enter
in
or
pusha
dec
adc
inc
sub
les
jmp
stc
cmp
out
inc
mov
popa
push
sbb
pop
cld
pop
sub
rorl
mov
mov
push
and
pop
ja
loop
sub
repz
mov
adcb
pop
pop
inc
mov
rcrl
jns
test
pop
xor
sub
push
daa
mov
inc
fsubrs
pusha
stos
mov
push
aam
aas
test
fsts
fbstp
repnz
xchg
xchg
jge
insb
sbb
dec
pop
repz
in
adc
or
aad
mov
out
add
sub
jmp
sub
adc
push
mov
xchg
add
scas
out
push
mov
sub
jno
push
fs
jne
out
push
test
dec
mov
fisubrl
rolb
dec
leave
pop
in
ljmp
repnz
pop
or
pop
daa
pusha
fldl
xchg
push
or
cs
add
loop
fldt
cmc
sbb
mov
loope
cmpsb
das
adc
mov
and
push
es
sbb
cmp
mov
aam
fcomps
shrl
or
mov
sub
xchg
add
aaa
push
lret
fwait
jg
sub
mov
push
pop
cmpsl
outsb
jo
inc
mov
mov
ja
or
push
lock
jnp
in
or
test
test
mov
cs
cmpsl
dec
sub
orb
ret
xor
js
nop
xchg
sub
xchg
jo
in
mov
cwtl
jnp
inc
je
lahf
adc
cli
jg
shl
sub
jbe
cltd
data16
aaa
adc
mov
cmp
arpl
jno
add
cld
jne
cwtl
sub
jbe
push
mov
xchg
daa
sub
test
push
stc
rol
iret
and
clc
xor
ljmp
or
mov
dec
stc
sahf
cmp
mov
mov
pop
aaa
test
mov
lcall
xchg
sub
sub
and
push
int3
fsts
push
cmp
pop
into
sbb
icebp
mov
sahf
jle
int
dec
dec
ja
jp
mov
shl
mov
xchg
sub
push
lods
daa
test
fildl
push
adc
add
jbe
out
sub
jb
cs
lods
dec
ljmp
adc
xor
sub
sbb
sub
in
add
idivl
mov
sub
jbe
cmpl
iret
add
sub
jne
sub
or
sub
popf
call
push
and
pop
xchg
leave
test
xchg
jl
ss
into
mov
jnp
sub
out
sub
push
add
sub
ret
fsubrs
test
and
aaa
pusha
add
negl
mov
in
adc
cmp
or
jo
mov
clc
or
fstpl
or
inc
add
cmpsb
sub
jo
mov
push
out
cli
testl
insb
call
cmp
xchg
jge
scas
movsl
xor
pushf
push
push
inc
push
jb
and
cmp
push
and
mov
test
jge
fwait
int
in
pop
outsb
ljmp
test
pop
jg
adc
push
aaa
stos
mov
pop
mov
sub
jp
dec
fldl
mov
push
jae
mov
dec
in
sti
int
sub
iret
js
ret
je
adc
sub
stos
ja
shrb
sub
insb
das
cwtl
in
lods
add
lds
xchg
pop
leave
out
cmp
loopne
les
mov
mov
fldcw
out
mov
jge
out
add
and
fiadds
outsl
pop
mov
popa
lea
xchg
jae
shll
js
xor
lock
cltd
xor
cmp
pmaddwd
xor
daa
sbb
aas
and
nop
cs
arpl
dec
push
lea
test
pusha
jae
xor
push
ljmp
xchg
xor
sub
jl
xchg
push
fnstenv
jmp
mov
cmp
xchg
sbbb
push
sub
popa
jb
fwait
cld
mov
movsb
rol
in
push
dec
or
cs
lret
sub
std
sbb
addr16
out
ja
popf
imul
bnd
int
push
sub
adcb
sub
testb
loopne
fidivrs
js
jbe
ljmp
mov
in
and
mov
repnz
and
sbb
stc
jnp
xchg
jae
jmp
icebp
sub
mov
sbb
fcoml
sub
push
stos
repz
in
loope
dec
mov
orl
adc
sub
repnz
cmp
mov
leave
add
cmp
jg
ss
sub
insw
idivb
insb
sub
jecxz
jno
mov
sub
pop
or
mov
mov
pop
test
sub
jg
fucomp
push
lcall
or
mov
ficompl
loop
inc
lods
adcl
sbb
addr16
scas
stos
sbb
push
aas
mov
pop
mov
sti
dec
sbb
sub
jns
test
adc
arpl
sub
shll
cmp
enter
prefetchw
adc
mov
aad
cmp
insb
pop
shr
or
bound
fnsave
mov
xchg
imul
insb
lock
pop
xor
jb
insl
pop
push
push
or
ljmp
xorl
sub
jp
and
xchg
dec
adcl
outsl
call
in
or
pop
daa
pop
addl
adc
fadds
or
xor
test
dec
sub
adc
sbb
aaa
ret
aas
lea
arpl
sub
cmpsb
push
fcomi
cmc
mov
sub
cmp
push
adc
or
fsubs
xor
sub
lret
lods
inc
sub
arpl
cmp
mov
mov
xor
aaa
lods
pop
ss
int
dec
out
adc
mov
jle
pop
loopne
xchg
outsl
sub
or
dec
xchg
insb
sub
test
adc
sbb
sub
and
sub
mov
sbb
out
or
push
xorl
push
mul
rcr
ja
cmp
cli
xor
jmp
pusha
rorb
jno
push
jo
dec
test
aad
dec
hlt
cmpb
ss
sahf
aam
add
test
mov
pop
pop
decb
repnz
xor
iret
push
aam
ds
out
push
sbb
mov
sub
lock
sub
imul
jecxz
pop
sub
lds
nop
leave
nop
mov
lahf
cmp
andl
test
sub
xchg
mov
cwtl
std
call
sub
pop
ljmp
push
push
fildll
mov
sub
dec
out
jp
or
sub
mov
sub
inc
testl
adc
stc
jmp
repnz
roll
push
mov
xor
adc
mov
arpl
les
adc
in
sti
mov
cmp
test
scas
loope
pop
dec
aaa
nopl
insb
test
cltd
add
sub
sbb
adc
sub
cmp
mov
pop
mov
in
sub
es
popa
mov
push
sub
and
imul
xchg
and
mov
inc
ret
fildll
mov
sub
bound
dec
sub
in
out
les
push
xorl
dec
fldcw
and
xchg
dec
pop
stc
inc
lock
cmc
xchg
fisubrl
fisubrs
imulb
sub
das
inc
xchg
popa
clc
es
stos
std
sarl
sub
pop
pop
mov
inc
dec
pop
jno
out
cli
dec
ss
nop
cmpsl
sbb
enter
push
mov
pop
xchg
mov
mov
jae
sub
push
xor
push
or
imull
arpl
fwait
clc
sub
sbb
loopne
jmp
sbb
ret
popa
iret
push
fs
loopne
cmp
add
sbbb
inc
rclb
add
outsb
loopne
ja
test
mov
pop
jle
out
cmp
loope
mov
xchg
push
xchg
sub
dec
hlt
jp
sbb
ss
xor
push
les
mov
sub
out
lea
ljmp
movsl
xor
maxps
pop
scas
sbb
test
jg
jp
movsl
aam
sbb
and
xchg
pop
add
imul
sub
pextrw
add
scas
jge
popa
jg
lock
mulb
sub
xor
adc
jo
je
test
enter
loop
push
cmp
pop
subb
test
jo
sub
dec
push
xor
add
loop
dec
cmpsl
sub
cltd
push
popa
mov
test
and
push
bound
jle
mov
aad
fbstp
xor
test
or
or
cmp
outsb
popf
dec
into
jns,pt
shrb
sub
xchg
ljmp
pop
jp
lret
sub
nop
jns
subl
dec
sub
hlt
mov
mov
or
sub
andb
out
sub
inc
jb
fwait
clc
dec
sub
fdivl
lret
mov
dec
push
cmp
dec
pop
mov
icebp
sub
je
add
jnp
lea
jmp
shrb
push
adc
mov
dec
sub
dec
jbe
dec
and
test
jecxz
mov
fisubrl
popl
insl
or
mov
cwtl
xchg
pop
ret
push
xor
in
daa
shrb
icebp
adc
out
xchg
jno
shlb
sub
cs
push
push
outsl
dec
lods
arpl
arpl
int
cmp
sub
mov
mov
xchg
dec
sub
xorb
js
ljmp
in
pushf
std
dec
bound
fs
xor
call
aaa
xchg
fcomps
inc
jle
cmp
sbb
dec
shl
push
sbb
fildl
sbb
out
cmp
and
sub
mov
jnp
push
inc
lahf
jno
stos
int3
pop
sub
xchg
mov
lods
test
or
ljmp
add
ja
arpl
fcoml
xorb
bound
lods
add
ficoml
and
test
add
inc
pop
iret
mov
andb
loopne
adc
adc
popf
xor
lret
shrb
in
and
lret
xchg
sbb
pop
sub
xchg
sub
and
icebp
sub
lahf
jl
xor
cwtl
in
ret
aas
jmp
push
mov
sub
movsb
cli
js
jle
add
mov
jge
shr
or
sub
decb
test
into
sub
adc
test
inc
cmp
jmp
pusha
xchg
insb
ds
sub
add
pop
imul
movsl
lret
lods
push
mov
xchg
lods
mov
xor
xchg
pop
out
push
push
in
test
mov
cld
push
push
cmpsl
adc
icebp
mov
push
lret
or
stos
fists
outsl
ljmp
xor
push
sub
sub
pushf
repz
sub
scas
mov
out
das
mov
inc
xchg
cltd
in
loop
ss
pop
adc
stos
es
aas
imul
std
das
and
mov
add
pop
mov
je
jne
pop
test
sbb
sub
lahf
cmpsl
dec
cmp
ljmp
in
mov
sub
stc
xor
jp
fisubrs
in
or
sub
sub
sbb
rorl
add
xlat
xor
cs
sub
xchg
clc
mov
sub
decb
dec
sarb
je
daa
xor
lcall
ret
loop
mov
out
rol
std
pop
jae
pop
mov
cmpsb
push
adc
adcb
je
sub
or
clc
test
lods
dec
lock
out
pop
ss
in
push
test
cwtl
shll
sahf
sub
rcl
std
ljmp
call
sub
or
mov
adc
loope
sub
ja
mov
clc
sbb
push
xor
and
out
mov
and
adc
movsb
and
jl
lret
cs
mov
ljmp
mov
mov
cwtl
mov
sub
imul
ds
mov
jge
push
and
mov
add
sub
lea
sub
outsb
subl
push
sub
sbb
int
cmp
sub
mov
inc
stc
inc
xor
xchg
lea
ds
sahf
subl
lds
cmp
push
mov
lock
shrl
xor
fisubrs
mov
mov
xor
push
aam
das
sti
ljmp
push
add
xchg
xor
sub
ljmp
dec
loop,pt
and
sbb
xchg
pop
cmp
mov
mov
jle
push
sub
ret
mov
dec
pop
add
repz
iret
xor
lock
cmp
mov
push
push
jmp
mov
shrl
in
pop
push
sub
adc
cltd
sub
popa
pop
cs
mov
mov
in
scas
mov
pop
loope
out
fstpt
jbe
loop
pop
fnsave
dec
adc
cmpsb
es
pop
jno
arpl
sub
push
xor
enter
sub
out
dec
push
xchg
mov
aas
daa
stc
clc
call
jns
mov
xchg
jbe
cmp
sub
test
cmp
repz
cmp
int3
outsb
dec
jb
jg
sub
aaa
cmp
repnz
mov
pushf
dec
push
jmp
jno
cmp
dec
int3
sub
shlb
inc
push
sbb
mov
sub
jle
mov
add
push
out
test
ror
ljmp
jecxz
push
adc
xchg
pop
push
sub
fsubs
out
adc
inc
test
cltd
dec
dec
int
or
mov
aad
das
jo
subb
in
mov
fiaddl
in
sbb
push
inc
pop
out
and
lret
sub
jle
xor
dec
dec
jo
stos
sub
cmc
mov
testl
imul
clc
push
leave
pop
jle
xchg
pop
lock
and
into
arpl
xchg
lahf
cmp
xor
ret
ret
xchg
arpl
test
mov
push
pusha
xor
mov
call
in
and
cmp
pop
mov
stos
jg
sub
and
xor
in
ret
or
filds
push
std
sub
icebp
xchg
dec
cltd
leave
lea
mov
popf
mov
sbb
je
fmull
repnz
clc
mov
jae
in
fsubs
mov
ljmp
dec
popa
pushf
in
cmp
data16
pop
jne
jg
push
je
stos
adc
sub
dec
lock
cmp
popf
cmp
sub
test
ss
pop
adc
or
in
dec
sub
xor
mov
inc
cmp
dec
dec
loopne
dec
inc
cmp
in
xor
inc
jns
cmc
pop
popf
xor
and
mov
mov
lea
ljmp
fnstenv
fnsetpm(287
sub
subb
repnz
xchg
cli
roll
sub
mov
inc
cld
addb
cmp
mov
clc
sub
int3
xor
addb
sub
push
mov
or
cld
movsb
dec
out
inc
push
fwait
int
jae
lcall
icebp
inc
sbb
jns
rcrb
cltd
jnp
fldcw
jmp
push
mov
sub
xor
and
xchg
sub
sbb
dec
inc
xor
lods
pop
adc
cmp
das
sbb
cld
inc
push
dec
shll
sahf
jecxz
mov
jae
lds
dec
mov
pop
inc
mov
sub
les
out
loop
mov
pop
adcb
push
pop
dec
sub
test
loopne
sub
jns
pushl
in
mov
js
test
out
popf
inc
fimull
push
mov
jnp
repnz
aas
cltd
test
aaa
or
arpl
je
daa
sub
push
jge
test
jno
inc
test
cmp
cmpsb
stos
mov
ficoms
add
scas
or
out
add
push
push
cmp
or
mov
sub
cld
pop
mov
mov
cmp
popa
jbe
push
sub
xchg
push
fstl
pop
jg
sub
cltd
popa
sub
mov
push
sub
cmp
sbb
outsl
lds
mov
sub
fdivr
fistl
mov
cs
sub
mov
xchg
cmp
inc
ljmp
ds
inc
cmp
insb
push
pop
xchg
sbb
push
ja
lret
mov
mov
nop
cli
orl
mov
loop
test
jbe
sbb
adc
stos
dec
out
or
push
sbb
xchg
sub
loope
das
lret
or
mov
or
ficoml
mov
xor
inc
sbb
xchg
dec
xor
push
add
in
cmpsl
add
fcomps
jno
test
sbb
push
jbe
out
fs
xchg
sbb
sub
sub
and
or
xlat
arpl
lcall
sub
mov
sbb
daa
pop
lds
sub
iret
xor
clc
sub
pop
jp
lret
lahf
sub
sub
mov
icebp
lods
xchg
mov
fdivs
jge
add
ljmp
mov
call
or
scas
mov
xor
mov
subl
jle
int3
jae
sub
sub
lods
leave
lret
out
fucomp
pop
xchg
push
push
dec
pop
cmp
push
sub
hlt
mov
push
push
or
sub
outsl
xchg
pop
repz
cmpsl
jle
lahf
push
pop
rol
add
jl
nop
aad
sub
and
mov
xor
test
or
sub
stc
fwait
sub
out
pop
or
or
leave
iret
adc
and
adc
dec
jp
push
sub
and
pusha
mov
es
sub
mov
sahf
xor
xchg
cmp
xchg
sub
mov
sub
or
lahf
add
add
popf
push
in
movsb
push
movsb
test
test
sub
sub
fcomi
icebp
xchg
inc
call
mov
sbb
or
mov
sub
test
mov
jo
ret
shlb
inc
push
subl
insb
jmp
scas
mov
push
sub
jp
mov
fs
shrb
push
cmp
in
jmp
aas
scas
repz
lahf
pop
subb
mov
sub
stos
cmpsl
fwait
sub
rcrl
sbb
pop
stos
inc
scas
sub
lods
jmp
rcrb
pop
pusha
test
adcl
jae
mov
in
cmp
xor
ljmp
out
mov
das
insl
in
sub
insb
inc
nop
xor
pusha
pop
into
test
mov
imul
cmp
test
popa
fcompp
pop
rclb
sub
lret
sbb
in
popa
adc
ljmp
mov
icebp
ljmp
repz
xchg
outsl
mov
add
dec
sub
dec
pop
idivb
sbb
sub
cmp
pop
jmp
push
mov
push
jae
push
push
push
sub
dec
pop
or
jne
sub
dec
jl
aad
inc
sub
ljmp
ljmp
jo
cmpsl
or
push
rcl
mov
stc
add
or
iret
ja
jmp
sub
add
jae
mov
push
add
mov
minps
sub
loopne
int
jns
or
jb
pop
aam
and
sub
andl
jne
inc
pop
push
sub
cmp
sub
aas
mov
add
sub
loop
aad
fnsave
sub
aam
shrb
jle
adc
repnz
inc
subl
cmp
push
es
jecxz
jae
fwait
xor
ljmp
das
fcomip
mov
das
pop
dec
mov
test
and
inc
lods
cmp
popa
mov
ja
les
arpl
dec
pop
mov
inc
test
divl
lock
sub
es
sahf
loop
outsl
sbb
andl
stos
addr16
dec
mov
mov
test
jg
sub
dec
bound
lcall
or
pop
mov
mov
ss
lds
xor
popl
xchg
int
cmc
cmp
ljmp
mov
cmp
sbbl
mov
push
mov
cs
mov
adc
sub
dec
insl
lock
lds
push
ret
xorb
and
and
xchg
dec
push
add
and
sub
push
adc
push
sub
in
ds
lret
jno
js
inc
adc
jns
sub
push
mov
into
adc
mov
push
xchg
movsl
test
push
les
dec
mov
dec
ds
push
sbb
sub
movsb
dec
or
sub
sti
filds
xor
xchg
imul
int
mov
push
fwait
ret
test
and
ret
push
ljmp
sub
xorl
or
sub
ljmp
jno
sbb
sbbb
loope
cmp
xor
mov
sbb
pop
adc
sub
xor
push
and
sub
mov
cmp
lret
sarb
rorb
and
movsl
nop
int3
add
pop
cmpl
bound
cmpsl
cmp
fidivl
test
fstps
inc
repnz
dec
iret
xor
jmp
push
push
mov
repnz
loop
jns
cltd
rol
enter
rolb
ss
lret
mov
out
imul
pop
jns
push
push
fcmovnbe
ret
stc
daa
arpl
test
sub
push
push
or
call
sub
dec
cmp
sub
test
mov
bound
sub
fcmovbe
dec
mov
inc
or
sub
movsl
jp
test
iret
imul
out
add
push
lcall
pusha
pop
adc
push
jecxz
cmp
dec
adc
mov
inc
sub
jp
in
push
nop
sub
mov
leave
and
push
push
mov
lahf
jo
adc
sub
sbb
ljmp
int
mov
loop
sub
mov
xor
cmp
pop
call
xor
cmpsb
mov
icebp
stos
lret
jecxz
sub
jo
das
rorb
hlt
sub
out
movsl
dec
stc
dec
mov
or
pushf
and
cwtl
les
inc
mov
cmp
sub
in
xchg
out
jns
imul
xor
mov
push
dec
sub
outsl
jb
int
cmpsb
sub
inc
rol
arpl
inc
xor
cmp
pop
fsubrs
inc
dec
gs
pop
add
jne
in
xchg
fisubrl
int
lret
dec
adc
pop
and
sbb
mov
fildl
sub
adc
or
xlat
sub
test
sbb
sti
sub
ret
adc
lods
mov
sub
sub
lds
jmp
in
nop
loop
xor
insb
sub
sub
mov
sub
mov
mov
mov
jbe
jp
adcb
fs
bt
xor
in
data16
sub
cmpsl
xor
sub
mov
inc
xor
outsl
and
stos
sbbl
adc
daa
inc
cmp
out
lret
repz
sub
aam
push
out
jge
jmp
add
cwtl
mov
mov
cmpsb
cmp
push
das
insl
in
add
lcall
or
out
in
mov
mov
mov
sub
mov
enter
jge
fwait
pop
jne
mov
insb
xchg
das
fsubr
inc
daa
push
insl
int3
cli
imul
arpl
loop
dec
adcl
addr16
dec
dec
fimuls
xor
and
push
mov
and
sti
dec
cmp
mov
sub
mov
call
mov
imul
sub
mov
cmp
mov
cmp
insb
dec
std
sub
nop
jp
lds
adc
push
pop
or
push
sub
mov
jns
inc
ja
sub
lock
mov
cmp
pop
sub
inc
es
fldt
cli
adc
mov
and
sub
xchg
repnz
cmp
ljmp
in
dec
pop
lea
adc
adc
dec
sub
mov
jge
pop
xor
sub
adc
sub
xchg
sbb
arpl
adc
aas
mov
outsl
adc
cwtl
mov
movsb
push
fidivrl
hlt
sub
stos
mov
fsub
iret
sub
xchg
mov
mov
sbb
pop
shl
lods
sahf
mov
adc
cmp
add
inc
stc
adc
xorl
aaa
or
mov
das
mov
movsb
pushf
imul
sub
adc
xchg
sub
pop
iret
inc
jae
mov
mov
jp
mov
js
jnp
rcrb
sbb
out
cmp
shl
leave
inc
insb
push
and
adc
mov
adc
cmp
out
std
shr
pop
cltd
sub
xor
mov
mov
xchg
aad
jne
subb
aaa
push
add
dec
push
fisubrl
in
in
fdivrs
xchg
pop
sub
xor
pusha
cwtl
dec
or
int3
sub
loop
mov
inc
sub
mov
sbb
add
sub
or
mov
ss
nop
add
into
push
mov
mov
outsb
das
jl
sub
inc
xchg
test
cwtl
scas
push
imull
jge
cmp
jnp
pop
mov
cmp
mov
inc
bound
mov
test
or
in
jbe
push
aas
aaa
inc
inc
xor
sub
icebp
mov
aad
push
pop
repnz
xor
ret
movsl
mov
mov
dec
in
pop
test
mov
mov
mov
out
in
sub
andl
push
sub
or
fisubl
push
jmp
cltd
xchg
cld
paddd
xor
clc
sub
in
test
mov
jp
xor
pop
js
adc
fsubrl
imul
jmp
int
and
push
fbld
mov
pop
xor
sub
std
push
sub
insl
nop
aad
cmp
mov
mov
mov
rcl
or
xchg
int3
sub
inc
pop
sub
cmc
mov
scas
adc
imul
js
ss
rcrl
in
sarb
lods
dec
xor
sub
mov
jno
adc
dec
mov
fisubs
cmp
int
imul
xlat
adc
fstpl
out
shlb
inc
mov
jbe
sub
push
mov
or
dec
sub
stos
lea
sub
inc
jmp
loop
fldt
loopne
popa
and
cltd
sub
dec
fldcw
jl
cltd
sub
jo
mov
ja
stos
test
out
outsl
pop
pushf
mov
adc
dec
pop
or
jle
jmp
cmp
jns
and
and
sub
pop
mov
mov
jne
and
push
mov
ds
dec
xor
insb
gs
dec
stc
inc
lcall
pop
pop
repz
sub
jge
sub
fisttps
mov
insl
pop
jmp
mov
js
cmp
rorl
insb
push
stc
cmp
sub
mov
mov
aad
add
mov
faddl
cmpsb
pop
jo
add
xor
adc
sub
sub
test
in
fst
sbb
dec
mov
sub
mov
jge
xchg
addr16
sbb
sbb
xor
fsts
add
sahf
dec
push
mov
repz
sub
cmpl
mov
dec
outsb
daa
sbb
ds
mov
or
jl
jns
push
sub
test
mov
push
repnz
pop
cmp
lock
pop
push
shll
dec
mov
dec
xor
les
aad
lds
jb
out
ficoms
xor
icebp
pushf
je
sub
jle
add
sub
mov
and
inc
test
mov
bound
push
cmp
sub
fsubp
test
sbb
lea
cmp
ljmp
mov
in
sbb
cltd
add
pop
mov
fsubrs
insl
mov
dec
rolb
pop
sub
loope
call
lcall
add
and
pop
xchg
fiadds
sub
clc
jg
or
jp
xchg
sbb
sub
xor
enter
push
ljmp
stos
cli
ljmp
jmp
fildll
fs
or
lcall
divb
mov
ret
and
subl
mov
ljmp
mov
cmp
repz
arpl
ljmp
cmp
aad
out
in
mov
lods
pop
cltd
cmp
lret
push
add
mov
aad
popf
cmp
imulb
add
xchg
fisubl
hlt
xchg
rclb
repnz
mov
sub
loopne
dec
scas
sub
les
push
mov
sub
popf
jno
lea
sub
ror
inc
sub
loop
cmp
push
jnp
into
xor
shll
mov
ret
test
push
aad
mov
stos
mul
sub
call
aad
add
and
mov
mov
sub
dec
aas
lock
sub
dec
jge
mov
inc
xchg
imul
mov
mov
test
mov
out
fmull
xor
push
adc
adc
in
les
ds
mov
sub
cmp
mov
sub
dec
jae
pop
xor
jbe
push
dec
stos
and
adc
dec
cmc
sbb
stos
jbe
mov
sarb
mov
jle
in
adc
test
test
iret
insl
dec
xchg
mov
or
xor
adc
mov
imul
das
pop
shr
add
rcr
add
jp
call
in
cmp
pusha
les
insl
fsub
add
mov
add
hlt
ljmp
sub
cmpsl
mov
sub
jmp
mov
jae
or
sti
sub
xchg
inc
adc
mov
std
shrl
clc
js
sub
dec
xor
loopne
pop
gs
in
ret
jno
or
dec
and
cwtl
sbb
sbb
aas
cs
lcall
sub
popa
sbb
shl
ljmp
push
iret
js
lea
sub
out
lret
xchg
sub
mov
into
rol
jmp
sub
lods
pop
xlat
push
dec
sub
cli
popa
aas
add
dec
sub
adc
cs
sbbl
ja
mov
or
out
mov
js
sub
dec
mov
sub
lock
cwtl
aam
lret
test
xor
ret
mov
int3
jnp
cmpsb
enter
push
lock
pop
mov
sub
shrl
aaa
jg
aas
call
mov
test
insl
shrb
daa
filds
repz
sti
lret
xchg
mov
stc
jae
add
sub
mov
cmpsl
push
ror
add
scas
sub
mov
adc
xchg
sbb
dec
sbb
and
jecxz
or
dec
mov
sub
xor
pop
adcl
sub
cs
fldl
and
aad
fistpl
sub
ljmp
mov
stc
test
sbb
and
xlat
sub
popf
mov
in
sti
mov
mov
pop
scas
adc
ficomps
add
shll
pop
mov
xchg
ds
ret
cmp
jl
xchg
push
cmp
out
sbb
lret
test
ja
nop
sti
dec
shrb
sub
mov
mov
dec
mov
shrl
stc
inc
adc
lock
sub
xchg
or
jb
loope
mov
pop
test
fisubrl
pop
lret
xchg
dec
sbb
dec
scas
xor
loopne
rorb
sub
mov
leave
cmp
ds
test
or
rorl
ret
pop
sub
sahf
push
and
mov
jbe
enter
or
mov
and
idivl
sbb
neg
out
push
clc
sub
mov
push
sbb
push
mov
cmp
mov
add
cli
outsl
jns
loope
mov
jbe
or
in
cmp
sub
mov
inc
sub
les
ljmp
jo
sbbl
loop
sub
ret
shll
out
xchg
aam
inc
out
in
sub
loope
xchg
sub
or
jno
push
out
clc
sbb
popf
int3
in
xchg
sub
mov
xor
sub
sub
stos
jns
cmpsb
adc
cmp
loopne
xor
shrb
cltd
push
and
push
dec
or
pop
add
inc
aad
js
subb
fdivs
dec
mov
add
inc
arpl
jbe
adc
dec
and
inc
iret
pop
mov
movsb
cmpsb
outsl
xor
jg
test
adc
rclb
mov
lret
in
jb
cmpsl
std
sub
leave
and
xchg
cmp
or
jle
pushf
push
in
lahf
push
jmp
xchg
cld
stc
cmp
mov
fidivrl
pusha
or
loop
sub
pop
cs
lret
iret
cmp
inc
xchg
xor
sub
repnz
mov
xchg
fs
js
sub
ret
lods
mov
inc
fldt
mov
data16
cmc
dec
insb
stos
int3
mov
sub
aam
fmull
leave
ljmp
hlt
cmp
mov
loopne
mov
repz
in
cmpl
aad
pop
test
dec
dec
mov
jo
sahf
jb
test
sub
sbb
test
gs
loopne
jl
loop
in
dec
stos
xchg
jmp
mov
fcmove
mov
fxch
pop
jae
jno
imul
push
das
orb
sbb
into
das
ljmp
sarl
pop
and
nop
add
fwait
cmp
push
cmp
insb
in
pop
sub
sub
lds
test
pop
imul
in
lods
outsl
aas
cli
lret
inc
data16
out
cwtl
movsl
out
sarl
sub
js
mov
sub
pop
mov
sub
add
jae
cmp
pop
dec
push
stos
sub
or
push
lds
sub
or
sbb
movsb
shrb
dec
xchg
inc
jae
lret
push
cmpsb
adc
or
jl
out
xlat
inc
and
or
jge
jns
sub
fnstsw
popa
sbb
scas
sarl
call
data16
lock
popa
out
loope
int
test
sub
mov
lcall
push
and
mov
adc
ss
sub
mov
jns
dec
sub
dec
cmp
sub
popa
lret
mov
cld
rcll
das
xchg
mov
jnp
cmp
movsb
adc
and
rcrb
call
sub
mov
and
jge
push
dec
dec
sub
mov
jmp
sub
negb
push
or
adc
scas
push
addl
ljmp
dec
bound
sub
sbb
dec
and
mov
jg
enter
pushf
adcl
add
sub
jae
ljmp
lret
cmp
pop
mov
loop
cvtpi2ps
hlt
push
mov
iret
sbb
pop
xlat
sti
repnz
mov
xchg
or
imul
cmpsb
movsb
mov
dec
sub
xor
cld
and
std
les
fisttpl
sbb
pop
shrb
mov
or
sub
cmp
sub
xchg
lret
int3
out
nop
stos
mov
lods
pop
fildll
loopne
mov
pop
cmpl
and
or
pop
out
icebp
sbb
or
push
in
mov
lds
test
and
push
lods
mov
sub
add
cmp
adc
sub
adcl
pop
insl
inc
lret
adc
push
dec
js
daa
ss
jbe
pop
stc
data16
inc
jge
push
sub
mov
popa
test
repnz
test
push
lods
jge
jae
imul
out
daa
sahf
xor
fsubs
push
sub
sub
add
sub
lods
pusha
xchg
ja
sbb
add
mov
stc
scas
ljmp
xchg
jbe
xor
xlat
xor
cmpsb
lret
fildll
cmp
pushf
scas
sbb
xor
inc
push
mov
ljmp
in
dec
add
fstps
cmp
je
push
xor
sub
hlt
out
and
adc
pop
xchg
fcomip
mov
test
or
je
xchg
shrb
jl
push
jmp
sub
rolb
or
lcall
xor
imul
add
cmp
test
cmp
fcmovbe
int3
ljmp
inc
ja
repnz
mov
sub
dec
mov
imul
mov
mov
popf
or
sub
aam
xor
dec
leave
mov
sub
and
into
dec
flds
xor
cs
dec
sub
push
sub
cmp
test
aam
xor
mov
cmp
sub
mov
dec
mov
arpl
outsl
ljmp
out
xor
inc
dec
and
mov
insb
sub
xor
add
testb
cmp
adc
movsl
xor
out
in
inc
cmpsb
scas
mov
jbe
mov
xchg
into
xor
iret
xchg
insb
mov
xchg
jbe
sub
leave
pop
fidivrs
ret
xchg
sbb
mov
ja
out
add
hlt
shlb
xchg
fbld
rorb
mov
data16
xor
pop
sub
adc
clc
stos
call
ret
das
out
sub
add
cld
loop
add
jl
pop
add
jbe
les
xor
call
inc
leave
flds
sub
cli
mov
pop
and
outsl
lret
subl
inc
jnp
call
inc
rcl
icebp
mov
in
sub
xor
outsl
sub
jne
loop
dec
jge
xor
cmc
adc
sub
popf
ret
mov
push
cltd
sbb
pop
and
movsl
add
jae
lods
sbb
or
jne
cmp
inc
inc
xor
xor
roll
test
mov
mov
sbb
cld
mov
xchg
rcrl
cmpsb
out
sahf
push
mov
daa
std
sub
cmpsl
test
mov
sub
cmpsb
out
dec
adc
pop
xorb
pop
mov
pushf
jge
loopne
movsl
mov
jns
pop
dec
xor
and
mov
mov
push
inc
inc
sub
jg
mov
jnp
add
adc
fldcw
scas
hlt
or
ljmp
pop
cs
test
scas
jge
sti
test
add
sub
jmp
pop
xor
push
push
cmp
cmp
jg
add
push
mov
jne
stc
jecxz
sub
pop
inc
push
sub
pop
arpl
cmpb
push
or
sub
jne
inc
fstpl
jle
sub
dec
pop
xchg
sub
inc
or
subl
addr16
jnp
inc
xlat
ds
or
mov
test
push
lea
decl
ljmp
push
aaa
or
ljmp
outsb
xor
in
or
push
test
sub
add
mov
add
sbb
int3
gs
mov
aam
mov
pop
inc
insb
pop
mov
cmpsb
scas
jb
sub
popa
push
jae
test
push
sub
mov
rolb
sbb
mov
add
mov
repz
popa
sub
push
fldcw
in
ljmp
pop
stos
mov
adc
clc
xchg
mov
jbe
push
pop
mov
dec
lea
movsl
lret
arpl
dec
test
sbb
mov
sub
pushf
cwtl
mov
push
sub
stc
fsub
test
lahf
xchg
xchg
cwtl
sub
clc
cmp
jp
lcallw
stc
sub
movsb
add
aaa
sbb
push
arpl
out
pop
mov
jmp
xor
leave
xchg
or
push
sub
repnz
mov
ljmp
cmpsl
hlt
inc
bound
in
pop
sbb
out
xchg
xchg
add
sub
fdivrp
enter
and
fcmovnb
stc
and
xchg
dec
test
nop
out
int
mov
cmp
jle
out
jge
test
jmp
jmp
vpavgw
fmulp
sbb
or
mov
sub
iret
movsl
mov
movsb
pop
adc
dec
and
das
adc
lahf
aaa
popf
test
cli
mov
and
in
mov
jmp
nop
sahf
dec
mov
jne
and
into
jmp
inc
lahf
stos
pop
sub
xor
push
sub
test
aaa
test
pusha
mov
push
loope
inc
jno
sbbl
cmp
or
bound
insb
mov
out
xor
xchg
fisttpll
lret
lret
pop
mov
inc
dec
mov
call
and
jmp
ficomps
dec
push
lcall
sbb
jno
xchg
in
cwtl
insl
mov
ljmp
inc
mov
push
lock
push
pop
cwtl
mov
js
mull
adc
mov
stos
mov
cwtl
in
dec
mov
cld
rclb
xchg
xor
sub
das
pop
adc
pop
adc
mov
mov
fwait
nop
xor
or
stos
and
cmpsb
jnp
or
adc
data16
and
adc
dec
fwait
or
cli
xor
xor
iret
dec
sub
lahf
enter
mov
push
inc
inc
sub
cmc
mov
hlt
int3
addb
lret
ljmp
in
ja
shrl
fsts
sub
mov
jno
adc
sub
sub
int
sarl
sub
inc
mov
ljmp
xchg
mov
sub
mov
je
jl
scas
hlt
inc
subb
ljmp
jne
adc
ret
cld
sub
cmp
pop
pop
jp,pn
adc
sub
mov
popa
xchg
jns
out
cwtl
sub
adc
sub
pop
adc
cmpps
mov
ss
test
es
xor
mov
mov
arpl
lcall
ljmp
das
xchg
jnp
hlt
pop
xchg
aas
pop
mov
xor
jecxz
stos
push
sub
les
aam
cmc
mov
xor
dec
test
gs
cs
cmpsb
test
bound
cmp
xlat
scas
fsubp
dec
jg
iret
test
push
push
xchg
js
fists
ret
loop
cmp
aas
idiv
stos
xor
enter
cmc
orl
sbb
ljmp
in
outsl
dec
outsb
sub
xchg
adc
sub
dec
dec
addr16
sbb
into
xlat
adcl
dec
and
ja
sub
shrb
in
jbe
or
push
sub
add
jle
out
sub
lods
inc
or
sub
xchg
sub
cmp
jg
incb
rcll
or
inc
fcoml
sub
in
pop
sub
xor
mov
mov
cli
js
mov
sub
clc
mov
cmp
jge
jle
xchg
test
mov
sbb
xchg
sub
and
add
mov
xchg
arpl
sbb
movsb
inc
in
xor
insb
out
pop
sub
mov
adc
data16
outsl
movsl
pop
lods
xchg
movsbl
jmp
scas
sub
inc
inc
out
iret
fisubrs
dec
cwtl
jmp
mov
sub
fadds
inc
xchg
sub
mull
sub
pop
fnstsw
aam
add
mov
add
xchg
mov
in
ljmp
xor
jmp
jno
sub
loope
int3
mov
daa
or
lds
sbb
out
jae
loope
or
jle
fidivrl
and
divb
mov
xor
push
xchg
push
adc
icebp
push
bound
shl
mov
shr
ret
push
xchg
fcmovb
negb
cltd
sub
cmc
test
pop
aad
mov
pop
bound
fcoml
lret
fiaddl
sub
shrb
movsl
push
repnz
enter
movsb
aaa
mov
jne
ss
adc
sub
pop
mov
xorl
ljmp
and
xor
xchg
stos
xchg
bound
and
push
sub
les
fsub
js
push
aam
mov
cli
ss
sub
shll
ss
idivl
frstor
adc
cmp
sub
mov
mov
add
pop
dec
imulb
xor
mov
pop
jb
imul
cli
add
mov
test
pop
js
cmpsl
out
shrl
mov
add
dec
push
add
stos
or
mov
lret
sub
pop
popa
jle
in
sub
inc
cmc
mov
mov
push
push
pop
dec
addr16
mov
sbb
add
dec
cli
and
decl
mov
pusha
test
gs
enter
out
xchg
in
mov
sub
cltd
out
adc
adc
imul
loope
das
xor
add
fisttps
jnp
mov
cmpsl
sub
jno
dec
in
sbb
std
lret
cmp
and
sub
repz
fcomp
sti
xlat
sbb
aam
popa
mov
cmc
and
jb
fdivp
adc
or
jo
inc
es
push
push
rolb
cmp
fisttpl
pop
ds
cmpsl
mov
lea
sbb
sbb
lahf
mov
sub
outsl
lcall
out
mov
outsb
rclb
leave
jae
xor
mov
cld
cmpsb
mov
testl
and
popa
out
cmp
jle
cld
push
sub
cmp
nop
test
in
adc
jecxz,pn
mov
sub
testl
sub
loop
mov
std
adcb
das
push
sub
jae
or
dec
loope
jnp
cmp
and
ret
out
rclb
sub
and
pop
dec
mov
jnp
lods
aas
scas
out
sub
adc
adc
mov
mov
add
sbb
sub
jge
popf
dec
dec
out
movsl
lods
add
xchg
gs
mov
imul
out
mov
cmpsl
dec
sub
scas
push
hlt
sbb
insb
sub
testb
mov
cmp
inc
mov
lods
push
stc
add
clc
subl
dec
adc
sub
cli
mov
mov
xor
and
dec
pushf
pop
loop
push
repz
and
push
test
sbb
lock
cmpsb
subl
sti
int
arpl
sbb
pusha
xor
add
data16
pop
add
outsb
sub
shrl
rorb
loopne
pop
xchg
add
cmp
mov
lret
dec
cmpsb
sub
nop
cld
jne
push
pop
jb
xor
jne
ss
inc
pop
lods
fdiv
sub
xchg
jmp
rorb
pop
and
pop
push
jb
dec
les
test
sarl
fldt
in
cmp
jmp
add
mov
xor
cmp
inc
adc
cwtl
cmp
jbe
mov
mov
sub
arpl
nop
inc
jbe
insb
pop
xor
cwtl
or
pop
push
sub
push
jb
push
icebp
add
sub
or
shrl
fisubrl
int
and
jp
ds
cmp
lahf
and
mov
sub
mov
int
xchg
aad
mov
cmpsl
cmpsl
lock
ljmp
pop
pushf
lahf
pop
out
fs
push
or
cmp
mov
inc
sub
ds
sbb
repnz
loope
push
lods
jle
sbb
test
xchg
out
in
cmpsl
push
xchg
mov
dec
sub
outsb
push
sub
pop
pop
fldt
mov
mov
cmp
jno
out
dec
gs
nop
mov
sub
push
inc
cs
mov
sub
aad
loop
subb
lahf
cmp
out
mov
jns
js
dec
fwait
push
sub
pop
das
repnz
pop
shlb
sub
adc
int
sub
mov
imul
jo
test
loopne
and
dec
mov
jle
cs
int
sub
daa
nop
add
je
decl
sub
test
xchg
xor
mul
and
loope
add
sub
add
sub
les
lods
dec
out
cmp
ret
test
inc
mov
cmp
test
cmpsb
and
insb
stos
sbb
out
sbb
push
aad
je
push
movsl
out
mov
adc
in
std
aas
ja
sub
insb
jnp
test
int
in
jp
in
test
xor
pop
jle
sub
xor
stos
pusha
dec
jmp
pop
mov
dec
cmp
ljmp
adc
cmpsl
cwtl
gs
lea
scas
test
dec
in
or
mov
or
rol
jmp
test
jg
dec
das
xchg
jecxz
add
test
lods
insb
sub
pop
fdivr
int3
jl
jns
xor
cwtl
iret
insl
cmp
std
sub
cmp
jge
gs
sub
xchg
add
sub
aad
cmc
push
pop
lods
fisubrs
push
add
inc
cmp
sub
andl
pop
js
add
xchg
imul
int3
pop
movsb
jbe
mov
xor
mov
fneni(8087
sub
xchg
and
lcall
sub
sbb
lods
shrb
sub
jo
lock
pop
mov
ljmp
lea
and
xchg
loopne
lods
mov
dec
out
popa
xchg
sub
cld
sub
aas
shrl
push
mov
std
scas
xor
clc
ds
jecxz
ficoms
sub
out
in
cli
sub
ffreep
adcb
pop
xchg
adc
dec
pop
popa
test
cli
sub
xlat
mov
pop
mov
push
xor
mov
repz
mov
fisubs
push
sub
cmp
mov
jnp
jno
aas
call
adc
ret
das
test
filds
sub
jns
repz
dec
xor
jge
xchg
fwait
dec
sub
lea
add
inc
push
jmp
cmpsb
adc
lock
add
sub
pop
or
js
fdecstp
xor
inc
jecxz
dec
cmp
jg
xchg
sub
pop
push
add
enter
cli
addl
sub
sub
fstpl
das
push
inc
iret
or
test
jb
sbb
sub
pop
fildl
test
dec
repnz
or
xchg
mov
loope
mov
es
and
jl
xor
jbe
or
push
cli
not
jp
sahf
outsb
sub
aaa
ja
aas
mov
and
sub
xrelease
scas
sub
cmp
aaa
sub
cmpsb
pop
nop
sub
dec
pop
sub
inc
mov
inc
push
out
lock
dec
dec
vmovdqa
jb
sub
push
aas
or
out
sbb
sbb
ljmp
cmc
mov
xchg
ret
loope
cmp
jmp
lcall
lea
dec
ficompl
push
notb
pop
or
mov
push
aad
data16
mov
out
inc
in
lods
xor
jmp
addl
ljmp
cwtl
push
int3
cmc
lret
push
pop
adc
fcomps
dec
add
sub
or
xor
sub
popf
std
cmp
cmp
stc
out
sub
or
rolb
lods
test
enter
out
das
popf
pushf
scas
sub
lea
paddd
mov
sub
lds
inc
sub
sbb
xchg
loope
sbb
iret
sub
nop
fwait
dec
mov
in
cmp
out
cmp
mov
mov
xchg
push
repnz
inc
fistpl
and
push
out
xchg
sti
cmpsb
popa
rolb
push
cmpsb
add
aad
mov
scas
pop
bound
cltd
imul
sub
pop
xlat
daa
sub
push
mov
iret
dec
dec
outsb
mov
fists
mov
fnstenv
mov
sub
jno
and
inc
lea
xchg
push
ss
in
push
and
loopne
rcrw
inc
sub
push
imul
insl
pusha
test
mov
inc
xor
cltd
test
ss
pop
mov
das
pop
adc
or
sub
mov
sub
addr16
fs
inc
mov
dec
notb
sub
cld
jle
sub
in
sbb
fs
fsub
mov
dec
sbb
jg
dec
in
dec
mov
mov
lret
mov
pop
mov
shrb
mov
jg
cmpsl
loope
cmc
sub
rcrl
stos
xchg
jecxz
jo
clc
mov
dec
ljmp
rorb
subl
aam
mov
ljmp
cmp
inc
ljmp
adc
adc
mov
sbb
mov
mov
popa
push
sub
pop
pop
or
imulb
and
xchg
pop
sub
sub
cmp
or
hlt
xchg
cmc
cmp
jno
mov
xchg
sub
inc
pop
fsubl
sub
add
outsl
xchg
movsl
testl
es
scas
lret
arpl
fistps
js
xchg
xor
lret
mov
jno
fwait
sbb
jb
sbbl
jle
sub
ret
lcall
jmp
loope
sub
sbbb
push
das
xor
or
dec
mov
nop
jl
fnstsw
sub
scas
jmp
jecxz
mov
sub
and
popa
scas
sub
add
test
mov
fs
push
sub
fcmovb
test
ja
sub
sahf
sub
lcall
cmp
and
pop
aam
sub
xchg
js
loopne
mov
sub
scas
and
and
xor
mov
jo
push
and
jbe
mov
test
aas
push
xor
mov
test
nop
cmp
sub
aam
sub
mov
inc
cmp
dec
test
pusha
fsubrs
cld
ss
push
cmp
pushf
xchg
call
scas
xor
insb
jg
push
inc
int
pop
imulb
sahf
cmpsl
dec
decl
inc
and
ret
pop
cmp
test
das
addl
cmp
test
sub
int3
sub
arpl
pop
test
sub
addr16
je
sbb
sbb
mov
sub
push
sub
cmpsl
cmpl
sub
mov
shrl
aad
push
outsb
subb
jae
iret
dec
or
imul
cmp
cmp
sub
fdivs
lret
or
mov
push
pop
in
pop
mov
and
push
mov
adcb
lock
scas
or
mov
cwtl
js
icebp
push
mov
test
and
cli
pop
stos
aad
pop
adc
hlt
mov
ret
add
add
in
das
imul
push
adc
aam
mov
jbe
bound
adc
push
push
sub
jbe
out
arpl
mov
mov
mov
xor
cwtl
lods
aad
fistl
or
fst
fisttpl
xchg
test
ds
sub
lods
js
or
pushf
cmp
aad
stc
sub
daa
sub
sub
pop
lcall
and
out
sub
pushf
imul
cmp
inc
int3
das
mov
out
inc
popf
test
jbe
sub
addr16
test
mov
push
out
mov
xchg
adc
sub
jns
cmp
xchg
shrl
cmpsb
std
mov
xchg
sub
jnp
fcom
repz
int3
mov
push
fadd
pop
add
mov
push
mov
add
lods
mov
fwait
mov
cmp
sub
mov
push
iret
jb
lret
sub
lock
sub
sbbb
int
cmp
inc
imull
sbb
leave
sub
add
out
jae
sbb
jge
or
xor
xor
sub
mov
test
mov
xchg
imul
lock
cmp
or
sarl
test
adc
dec
mov
test
js
ret
dec
inc
cmp
jno
mov
dec
cmp
xor
or
sub
gs
fcoml
sub
test
faddp
add
pop
xor
mov
sbbl
pop
pop
sbb
push
sub
push
popf
icebp
sub
pop
in
push
mov
dec
stos
cmpsl
pushf
jne
fsubrl
cmp
cmpsb
or
rclb
add
or
cli
pop
in
mov
push
xor
cmp
std
test
packssdw
in
cs
and
sub
repz
insb
sub
pop
pop
cmp
sub
es
in
idivl
mov
inc
std
cmp
xor
clc
xchg
xchg
or
cmpsl
cmc
scas
fsubs
fsubrp
sbb
outsl
dec
std
test
in
dec
fsubl
push
out
enter
push
js
stos
pop
xor
leave
popa
pop
icebp
sahf
imul
dec
fildll
imul
repz
int
inc
ret
test
pop
lcall
cmc
ljmp
jae
pop
lods
pop
push
je
dec
or
cmp
mov
jl
push
test
mov
dec
add
lods
daa
and
adc
or
shl
push
jmp
inc
bound
outsb
aaa
cs
mov
mov
int3
mov
ja
das
aam
sub
xchg
mov
push
orb
pop
push
pushf
sub
fcmovnu
mov
xor
sub
xchg
xor
and
jne
mov
mov
inc
xchg
cs
mov
jnp
dec
idivl
xor
sbb
mov
scas
or
sub
lcall
aam
pop
sbb
lea
sub
in
js
cs
adc
jmp
movsl
lret
push
xorb
out
mov
sbb
pusha
test
sub
scas
cs
mov
fldenv
pop
mov
xor
or
test
sub
inc
sub
mov
outsb
mov
mov
mov
sub
xchg
and
loop
clc
shrl
subl
addr16
pop
sub
mov
cmp
mov
sub
jecxz
mov
pop
mov
adc
bound
out
push
shll
in
sub
mov
test
xor
jbe
icebp
sub
jecxz
insl
push
jmp
sbb
nop
mov
pop
fistps
inc
sub
test
mov
movq
sbb
cmp
jo
fsubs
in
add
mov
bound
mov
pop
lret
dec
je
push
sub
adc
idivl
xchg
mov
cmp
cmp
pop
in
sbbb
cwtl
sub
test
adc
sub
mov
out
insl
jnp
int3
mov
adc
mov
mov
dec
ljmp
mov
cmp
stos
lcall
daa
add
cmp
fcomps
pop
ret
test
jbe
adc
inc
push
jl
jecxz
xchg
stos
jp
pop
pop
cmp
sub
lret
mov
out
adcl
cmp
inc
mov
pushf
push
mov
ljmp
in
jns
sahf
pop
cmpsb
mov
inc
mov
jmp
test
sub
fld
sbb
out
loop
xchg
cmp
dec
sub
out
push
xchg
dec
sub
add
push
into
sub
fisttps
sub
add
inc
ljmp
in
aad
ljmp
bound
push
sub
pop
pushf
cmp
pop
in
pop
repnz
sub
out
aad
mov
pop
fwait
pop
adc
mov
cmpsb
scas
imul
adc
xchg
inc
bound
mov
ljmp
into
das
ficoms
sub
lods
adc
sub
mov
sub
mov
aad
insb
cli
call
mov
repnz
leave
xchg
push
or
adc
movsb
mov
cmp
stc
dec
iret
dec
or
mov
ljmp
icebp
cmp
sub
pop
mov
test
sahf
shrl
out
sbbl
fwait
aas
fcoml
inc
movsl
or
sub
lahf
mov
push
mov
sub
scas
mov
pop
mov
gs
mov
arpl
cvtdq2ps
and
adc
or
mov
sbb
lcall
inc
test
jl
shlb
daa
int3
movsb
sbb
jb
jmp
imul
jle
les
lea
cmpsb
stos
xor
aas
cmp
jns
inc
fimull
je
sub
add
clc
jl
sub
aam
and
xor
inc
inc
scas
sub
dec
cmp
fistpl
popa
sub
cld
jbe
fldcw
jge
test
inc
jno
and
inc
stos
loop
mov
sub
jne
sti
movsl
push
sub
inc
cmpsb
test
inc
mov
daa
xor
arpl
jno
mov
sub
xor
and
pop
jae
lcall
popa
test
push
icebp
mov
jae
out
lret
push
inc
or
or
jl
cwtl
sub
jnp
jmp
ds
push
bnd
pop
scas
sub
stos
sbb
pusha
sbb
test
sahf
cs
cs
std
mov
add
sub
mov
sub
push
lcall
jge
add
pop
push
jmp
add
loopne
das
and
lahf
push
mov
mov
add
cwtl
inc
bound
push
and
pop
out
xchg
aas
cwtl
push
push
adc
es
sub
jo
loope
sub
jae
repz
aam
incl
jno
mov
fdivp
scas
cmpsb
int
jmp
push
lret
push
addr16
and
mov
push
cmp
cli
jecxz
test
lahf
mov
add
int3
out
enter
je
add
pop
inc
in
sub
xor
dec
push
xor
sub
xor
mov
add
into
sub
and
fbld
sub
mov
rorl
repnz
sti
out
mov
sub
enter
sub
subb
adc
das
ds
test
sub
mov
pushf
mov
cmp
cwtl
pop
sub
sbb
dec
mov
ljmp
pop
xchg
mov
mov
insb
rorl
cld
sbb
sub
test
mov
jno
sub
cmp
mov
data16
add
fld1
loopne
sub
lea
mov
sub
ja
ds
int
arpl
pop
dec
adcb
ret
pop
jbe
clc
push
sbb
sub
push
mov
call
arpl
movsl
jle
push
xchg
fidivrs
mov
lock
dec
cwtl
or
add
fcomps
mov
mul
mov
sub
lods
wrmsr
idivl
jne
icebp
cmp
stc
sbbb
mov
add
xchg
out
sub
ljmp
xchg
dec
pushf
mov
inc
inc
cmp
add
int3
int
insb
xchg
lret
sub
shrb
sbb
push
push
loope
xor
mov
sub
sbb
out
sti
mov
mov
dec
sub
leave
push
sarb
fucomi
cmp
xor
jp
sub
shlb
cltd
lods
stc
sub
aaa
sbbl
out
xchg
cmp
push
addb
sub
dec
add
fisubrl
xchg
pop
mov
pop
sub
aad
repnz
shlb
dec
sub
sbb
mov
fld
lcall
sub
or
pushf
jae
xchg
push
fistl
daa
pop
into
xchg
aas
out
lahf
clc
mov
xor
mov
mov
in
mov
lds
js
xor
out
imull
cld
xor
mov
cmp
jbe
sub
cld
xchg
dec
or
pop
inc
sub
lcall
sub
jle
cli
inc
shr
sub
lods
pop
cmpsb
sub
add
or
push
push
mov
in
sub
jbe
mov
loope
mov
cmc
mov
cld
in
test
pop
add
cmpsl
mov
test
push
push
inc
test
test
pop
outsb
inc
dec
inc
popf
sub
rclb
int3
pop
mov
mov
mov
les
xor
sbb
adc
imul
das
or
test
add
repnz
ficompl
inc
and
xchg
in
cmc
insl
or
ljmp
fnstenv
sub
int
ljmp
jae
dec
das
fisubrs
cmp
inc
sub
mov
push
cmpsb
shrl
cltd
jns
js
xchg
or
test
jge
xor
cld
inc
sub
jno
sub
sub
sbb
popa
inc
int
leave
sub
pop
fdivs
push
imul
sub
fwait
adcl
xor
sub
dec
or
jl
call
mov
sub
jne
sub
xchg
popa
xchg
sub
sub
sahf
movlps
movsl
cs
jmp
push
pop
sub
pop
add
ljmp
cwtl
xor
sub
inc
loopne
dec
dec
jns
enter
incb
and
mov
push
push
sub
mov
insl
sbb
jne
mov
aam
pop
scas
stos
pushf
pop
test
repnz
repz
inc
subl
es
dec
mov
xchg
add
sbb
jmp
cmpsb
negb
push
adc
into
xchg
push
scas
dec
rorb
push
cmp
negb
sub
push
out
mov
sub
movb
out
mov
enter
leave
xorl
insl
xchg
inc
sub
xor
into
push
add
cli
pop
into
sub
cmp
stc
loop
popf
outsb
orl
addr16
xor
das
mov
and
ret
sti
std
mov
lea
es
pop
in
cmpsl
and
mov
inc
sub
fs
in
jp
aas
add
rclb
and
lret
out
stos
nop
test
insl
xchg
push
shll
sub
rcl
mov
xor
dec
lock
dec
test
ret
sbb
xchg
icebp
or
outsb
lahf
dec
mov
mov
xchg
push
dec
call
pop
cmp
and
xchg
les
cmp
sub
add
sub
bound
xchg
mov
sub
mov
push
sub
orl
sub
fisttpl
mov
pop
enter
popa
lock
sub
or
nop
ja
fcomps
cmp
lahf
sub
push
pop
dec
sub
test
shr
cmp
add
sub
loopne
and
xchg
sbb
pop
sub
mov
cmp
int
lock
pushf
std
test
fs
cmp
jp
in
icebp
loopne
add
inc
xor
fwait
ret
enter
negb
push
dec
aas
dec
xchg
cmp
out
push
mov
dec
xchg
stos
push
xor
sub
sub
imul
cmp
js
cmp
rolb
dec
push
push
test
add
mov
nop
sub
jb
inc
test
xchg
dec
test
inc
movsb
push
fwait
ja
adc
adcb
iret
pop
int3
or
xor
nop
adc
data16
sub
sub
mov
stos
dec
or
xlat
rolb
dec
xchg
xchg
repnz
je
in
mov
pop
lahf
cmp
dec
ljmp
leave
xor
cmc
test
fisttps
add
bound
data16
sub
ret
mov
push
sub
lcall
mov
test
inc
or
mov
xor
fbstp
pop
sbbl
sub
fsub
xchg
aam
mov
je
sub
mov
sub
mov
das
aam
in
shl
mov
popf
and
cmpsl
mov
sbbl
movsl
repz
stos
mov
popf
adc
dec
cmp
shl
shlb
xchg
test
scas
imul
xlat
in
xchg
dec
test
bound
xor
imul
mov
imul
das
rcr
inc
add
mov
outsl
fistps
int3
sub
sti
and
bound
insl
push
sub
cmp
pop
sub
mov
mov
in
inc
add
daa
cmc
jns
fucomp
ficomps
and
pop
inc
sub
es
mov
dec
sub
mov
aaa
pop
jecxz
popa
ljmp
out
sub
pop
sbb
test
xor
pop
adc
sbb
or
lahf
or
xor
inc
dec
ds
fdivrl
or
add
in
cmp
cmc
leave
lods
mov
sbb
dec
popa
jecxz
cmp
les
cmp
inc
sahf
push
sub
adc
pop
aaa
pop
std
dec
sub
in
mov
cmpsb
cmpb
xchg
cmp
sarb
xchg
pop
pop
fsts
sub
outsb
jecxz
loopne
xor
jns
or
xor
pop
sub
push
mov
push
insb
mov
inc
pop
add
mov
test
es
sub
fnstsw
and
sbb
cmp
jp
scas
push
and
sub
ss
sahf
fdivs
cmp
insl
dec
sub
pop
mov
call
cmpsb
mov
imul
jno
sub
jg
push
mov
loop
or
dec
xchg
jae
imul
push
out
jb
clc
pop
push
ret
repz
subl
pop
sub
xchg
cmpsb
push
subb
sub
les
fs
cmc
xor
insl
fdivr
sbb
pop
es
and
xchg
andl
mov
jecxz
fldcw
mov
std
or
sub
lahf
rol
imul
cmp
dec
ljmp
cmp
jmp
dec
divl
lret
sbb
nop
jge
mov
xor
sbb
push
sahf
mov
loope
mov
out
inc
xchg
dec
lock
sub
push
out
pop
jb
xchg
data16
jge
sub
dec
rolb
sub
into
pop
cmc
dec
lea
cltd
mov
xchg
sub
bound
and
in
cwtl
dec
lea
aam
mov
mov
jbe
leave
adc
lds
mov
popl
fsubrp
sub
ljmp
sub
dec
jle
sub
mov
mov
sub
rcrb
lods
movsl
subb
sub
xchg
cmp
movb
sub
mov
push
sbb
pop
sub
int
or
jge
adc
or
pushf
add
fs
pop
inc
or
pop
or
test
push
cmpsb
xor
lods
mov
sub
lret
adc
add
aam
es
and
mov
dec
enter
gs
sub
fidivs
mov
lcall
fcmovb
loopne
pop
sub
shl
pop
sub
jp
out
aad
cld
sub
lret
jb
dec
add
in
push
sub
cmp
pop
xchg
idiv
repnz
push
iret
jg
insb
movsb
sub
jae
dec
in
add
das
cmp
xor
imul
push
test
mov
sub
xchg
iret
lret
lods
cmpsb
adc
jmp
xor
test
xor
xor
ret
lods
cmp
arpl
cwtl
and
mov
call
sub
cmp
inc
xchg
and
mov
insb
fisttpl
wbinvd
jle
aam
scas
leave
sub
mov
push
xchg
test
out
inc
cmp
aaa
inc
xor
xor
loop,pt
fcoml
cltd
adc
push
rorl
xlat
mov
lock
mov
mov
stos
push
mov
faddl
popf
pop
incb
scas
fsubrs
xchg
stos
sarl
sub
ret
cmp
rclb
sub
scas
call
mov
xchg
popf
cmp
cmp
sbb
adc
enter
addr16
jle
dec
notl
add
and
filds
jg
dec
mov
push
adc
hlt
lods
add
mov
aad
shlb
das
xchg
sub
inc
dec
cltd
push
cmc
fsubp
sub
shrb
inc
inc
sub
shrl
add
test
xor
sub
pop
or
adc
jno
cmp
dec
aam
xor
sub
test
sub
aas
sbb
out
mov
shlb
test
pop
xor
sub
rol
rclb
sub
iret
jmp
sbb
pop
lods
and
cmp
sub
adc
popa
add
xor
rorl
sahf
lahf
jae
ljmp
mov
in
ja
pushf
arpl
sub
aam
mov
adc
lock
sbb
cvtpi2ps
sbb
inc
sub
xor
fwait
inc
sub
mov
jecxz
mov
inc
js
push
and
fistps
push
test
sub
push
pop
scas
xor
mov
push
fstpl
jne
jge
dec
loop
push
fcmovb
sub
adc
cmpsl
cmpsb
xchg
push
ds
add
sub
push
inc
jg
sbb
push
sub
dec
enter
mov
lret
inc
idivl
dec
cmp
insb
pop
jnp
push
enter
push
subl
jmp
and
push
fcomps
test
sub
loop
xchg
dec
mov
sub
sahf
outsb
xlat
sub
pop
push
push
sub
shlb
out
or
mov
jae
push
rcrl
arpl
outsb
jmp
xchg
pop
scas
out
sub
xchg
bound
mov
adc
fisubrs
sti
nop
mov
push
out
pop
pop
sbb
mov
adc
sbb
xchg
jmp
jecxz
mov
push
mov
lds
push
pop
nop
jb
adc
and
lret
cmp
and
addl
xchg
cmpsb
gs
in
dec
sbb
add
sub
lea
adc
sub
mov
enter
data16
cs
sub
roll
gs
sbb
scas
test
clc
cwtl
stos
ss
push
sub
rcr
sbb
aad
sub
inc
movsl
clc
sub
cmp
jp
test
cmp
xchg
stc
sub
sub
cmpsl
subl
sub
xchg
ljmp
loopne
pushf
push
or
push
int3
test
addl
sbb
in
mov
fsubrl
sti
dec
bound
sub
mov
ficoml
dec
in
push
outsl
repz
lods
mov
xor
push
rolb
aam
cltd
dec
or
push
pop
insl
xor
mov
cmp
or
scas
xor
mov
cmp
aaa
fwait
and
pop
sub
dec
push
iret
sub
inc
movsb
cmp
dec
ficomps
sub
dec
xchg
xor
popf
sub
fwait
and
push
pop
push
leave
dec
sub
xchg
sub
or
push
into
dec
cli
aad
les
xor
pop
sub
push
out
outsl
ret
xchg
lock
pusha
mov
scas
gs
call
scas
mov
inc
fimuls
sti
aaa
sub
mov
in
or
sub
sbb
sub
push
mov
sub
icebp
dec
mov
cmp
shl
xor
lahf
sub
jo
movsl
cld
out
ret
cltd
out
in
mov
sub
rcrl
hlt
in
xor
aaa
ficoms
cmpsl
cmp
inc
push
cli
xor
adc
int
add
decl
in
test
gs
popa
add
push
clc
inc
sub
icebp
xor
xor
test
fstl
das
pop
cmp
push
int3
rcr
and
jno,pn
sbb
sub
xorb
cmp
add
hlt
ljmp
and
inc
sub
int3
cmc
push
and
fsubp
out
push
dec
outsl
xchg
push
adc
ljmp
test
cmp
pop
inc
jl
mov
jno
cmp
or
das
int
mov
pop
test
and
jae
bound
movsb
or
cs
push
mov
mov
inc
jmp
inc
lods
xchg
push
add
popa
pop
inc
mov
sub
shrl
sahf
arpl
bound
pop
lods
push
test
jmp
icebp
xchg
ja
inc
sub
sub
mov
out
mov
sub
adcb
sub
pop
lods
test
sti
arpl
insb
loopne
aas
sub
mov
xor
and
rclb
shrl
mov
rcrl
and
out
cmp
mov
xor
push
aas
insl
sub
adc
data16
mulb
repz
adc
out
arpl
lret
push
add
shlb
add
cmp
cltd
int
push
cmp
jg
push
cmpsb
push
dec
and
xchg
push
jecxz
cmp
lds
and
pop
enter
andl
xor
loopne
aaa
fisttpll
cltd
outsl
push
add
lret
sub
test
mov
movsl
xchg
sbb
sub
xlat
ficomps
dec
mov
test
cli
pop
sti
ljmp
pop
sub
and
mov
or
fsubrl
movsl
sarl
nop
jo
repnz
or
sub
xchg
and
out
jg
xor
pop
lock
andb
leave
nop
dec
test
sahf
pop
xor
sbb
mov
and
mov
inc
sub
xor
xchg
punpckhdq
push
pushf
fnstenv
mov
or
out
icebp
pop
inc
ror
dec
mov
pop
out
sub
je
sub
xchg
das
fimull
inc
data16
nop
mov
in
add
adc
dec
inc
lahf
scas
sub
outsl
mov
icebp
test
or
mov
adc
arpl
jmp
push
jle
lods
mov
sub
xchg
cwtl
or
dec
push
lret
icebp
daa
inc
pop
in
fcomps
jmp
push
sub
clc
mov
and
pop
jp
in
cmp
mov
stc
jnp
jmp
imul
xchg
mov
cmp
xchg
dec
pop
sub
andb
loopne
mov
add
or
cmp
inc
enter
inc
or
sub
and
sub
sbb
jb
out
cmp
xchg
outsb
ljmp
push
cmp
push
sub
inc
dec
insb
mov
cmp
xchg
mov
mov
imul
pop
enter
aam
aad
pop
je
subb
scas
bound
lret
jl
add
adc
pop
outsb
fwait
xor
hlt
mov
repnz
andb
leave
in
cmp
out
mov
shr
imul
adcb
mov
or
and
into
jae
inc
lahf
addr16
ds
adc
mov
xor
sub
les
call
mov
in
push
ss
cmpsl
adc
adc
cmpsl
adc
sti
outsb
int3
ret
lcall
ficoml
ljmp
lods
push
ds
ret
sbb
outsb
hlt
mov
push
dec
sub
in
paddusw
daa
or
and
xchg
adc
aad
insb
xchg
stos
mov
jecxz
andl
push
inc
enter
mov
jle
dec
inc
jno
in
inc
push
loopne
cmovns
addr16
xchg
mov
mov
in
int3
test
test
mov
lret
stos
mov
popa
das
sub
leave
outsb
fucomip
cmpsl
pop
je
jb
xor
and
inc
xchg
cmp
push
cld
jns
cmp
push
sub
aaa
mov
fsts
cmp
sub
fwait
daa
cmc
sub
ficoms
dec
outsl
sub
pop
inc
inc
gs
cs
mov
jmp
xchg
pop
dec
scas
mov
jno
mov
dec
das
in
test
int
mov
shlb
mov
push
push
shlb
ss
sub
mov
mov
pop
sub
push
jmp
dec
push
or
sub
lods
cmpb
cmpsb
mov
out
sub
faddp
and
push
dec
lock
fs
clc
sbb
std
inc
rol
cmp
ja
inc
aad
sub
inc
and
incl
mov
adcb
pop
test
inc
insl
dec
loopne
stos
sub
scas
pusha
xor
and
dec
mov
and
sub
inc
jmp
push
and
inc
idivb
xor
aas
sub
cmp
adc
jne
scas
test
loope
ds
add
adc
xor
dec
push
pop
addl
data16
pop
rcll
sub
jb
add
scas
addr16
and
xchg
jbe
mov
inc
mov
cld
xchg
mov
inc
lret
sub
or
mov
mov
cs
cmp
xor
jmp
push
test
dec
add
push
sub
or
loop
or
pop
js
cmp
pop
mov
dec
sub
mov
stos
dec
das
jl
sti
push
fwait
xor
movsl
xchg
xor
push
out
or
push
out
rcll
jg
ds
aam
sub
and
sub
arpl
pushf
lret
mov
in
nop
sub
push
stos
test
fwait
mov
pop
push
mov
mov
mov
lock
repz
cmp
shrb
dec
decb
icebp
add
xchg
dec
lret
stc
mov
sbb
sub
insl
or
ljmp
sub
cmpsb
dec
fucom
sbb
mov
sub
lock
xor
ret
out
ds
ss
sub
adc
jb
cld
push
sub
or
push
call
push
mov
cwtl
sub
or
dec
in
shlb
and
or
cmp
push
push
sub
lods
addr16
inc
jp
xor
cmp
jno
sub
das
xchg
pop
in
mov
mov
fidivrl
dec
mov
xchg
imul
and
lahf
cmp
dec
dec
leave
sbb
movsb
xor
push
xchg
cmpsl
dec
jle
sbb
imul
sbb
sub
jecxz
dec
lods
mov
sti
push
add
nop
fstpt
loopne
mov
pop
push
pusha
out
sub
jne
mov
jns
sub
inc
leave
mov
jb
mov
test
test
xchg
jnp
sub
pop
sub
fwait
mov
pop
inc
sbb
sub
iret
imul
xchg
mov
mov
pop
mov
icebp
loope
sub
test
sub
leave
int
xchg
sub
ss
ja
add
fimull
sub
push
cmp
xor
test
cmp
xor
xlat
ljmp
icebp
push
rclb
pop
cmp
sub
xor
loopne
rorl
pop
jmp
inc
lock
inc
and
cmp
insb
daa
shll
cmp
sub
add
pop
clc
sub
test
popa
and
sbb
mov
inc
addr16
sub
outsb
pop
push
mov
insl
jge
loope
sub
sub
xchg
xor
mov
test
gs
sahf
pop
fldcw
in
sub
lret
xchg
inc
inc
ljmp
add
dec
stos
mov
mov
xchg
das
out
cmp
add
mov
xor
je
xor
pop
adc
es
and
faddp
and
sbb
dec
sub
inc
sub
cmc
jbe
jb
ret
test
jl
mov
inc
dec
loope
jp
sub
mov
sub
js
mov
pop
sub
push
fidivl
dec
fs
pushf
mov
cmpsl
sub
fdivl
lcall
or
sbb
aam
jl
pop
inc
jae
inc
mov
or
sub
stc
pushf
das
lret
sbb
xchg
and
sub
fidivs
add
mov
shll
sbb
fsubl
push
push
sahf
cmp
sbb
jge
dec
jg
push
into
ja
or
inc
arpl
dec
out
or
sub
pop
fidivs
aad
xchg
sti
loop
dec
xchg
sub
and
call
xchg
mov
inc
test
aaa
inc
mov
jnp
lock
clc
cwtl
sub
popa
aaa
mov
xchg
test
add
repz
sub
aam
addr16
arpl
inc
cmp
sarl
sub
inc
cmpsb
aas
mov
stos
clc
add
sub
inc
pop
push
push
mov
mov
jo
int
jbe
cmc
xor
in
inc
in
cmp
or
lock
push
lahf
adc
pop
sub
int
sub
mov
cvtpi2ps
sbb
dec
loop
xor
pop
push
sub
sbb
sub
gs
mov
push
jmp
aas
sti
pop
mov
mov
test
pop
ja
out
in
or
cmp
shrl
sub
jb,pt
adc
imul
sub
lret
sub
pop
push
nop
jle
jb
cs
sub
pop
icebp
inc
scas
mov
xor
push
mov
inc
fwait
stos
lock
jb
mov
dec
cld
icebp
inc
aad
shr
cmp
mov
sub
sub
cmp
pop
sahf
mov
xchg
testb
int3
sbb
out
in
ja
push
lea
mov
pop
leave
lds
or
mov
outsl
sub
andl
pop
out
cmp
cwtl
cmp
push
push
adc
aaa
mov
add
cs
ficoml
dec
and
xor
scas
ljmp
xor
sub
lods
xchg
dec
add
lahf
mov
cmp
mov
xchg
clc
sub
fidivs
pusha
shrl
aaa
sbb
jo
cmc
dec
test
xchg
pushf
insb
mov
sub
jmp
lock
sub
xchg
aam
loope
je
jle
loop
mov
cmp
rorl
divl
dec
fisttpll
jmp
mov
lahf
sub
jp
lret
rcr
mov
jl
dec
das
sbbl
sbbb
adc
add
mov
lods
ljmp
push
inc
repnz
mov
xchg
xchg
sub
jo
xor
imul
pop
mov
add
xchg
or
sub
add
lahf
xchg
xor
mov
push
movsl
sub
inc
cmp
test
mov
pusha
sub
sbb
call
stos
sub
pusha
or
loope
cltd
sub
mov
sbb
test
ret
mov
inc
inc
enter
jecxz
outsl
mov
popa
sub
insb
dec
lahf
enter
sbb
sbb
stc
repz
sarb
push
movb
in
sub
inc
mov
xor
sub
push
mov
and
sub
sbb
stos
inc
out
sub
jo
mov
cmpsb
ja
push
cmp
rorb
adc
adc
or
fstpt
sub
das
sub
inc
inc
subl
insl
or
xor
add
dec
push
fwait
je
sub
pop
sub
in
sbb
aaa
les
icebp
adc
cmp
mov
pop
hlt
fcmovne
xchg
fldl2t
fwait
mov
xchg
inc
xor
xor
sub
cmc
loopne
pop
fsubp
arpl
enter
pop
sub
jg
sub
stos
jbe
sub
int3
jecxz
and
push
mov
dec
sub
mov
sbb
push
add
ljmp
daa
pop
insb
push
fwait
out
sbb
jae
sub
adc
or
repnz
test
dec
je
inc
xchg
push
sub
jmp
cmp
sbb
xchg
std
popa
notb
mov
sarl
sub
test
xchg
mov
or
cmpsb
dec
and
sub
imul
xchg
sub
mov
xchg
sub
jp
bswap
pop
sub
loopne
insl
bnd
jb
addr16
movsb
push
sub
mov
stos
cmp
inc
popf
daa
jg
call
mov
adc
aas
pop
sub
adc
fwait
lock
sub
lret
sub
push
or
sub
mov
pushf
jl
iret
pop
nop
add
inc
cs
cmpsb
cmpsl
dec
enter
xchg
add
scas
mov
out
sub
pop
xchg
push
or
dec
jecxz
bound
sub
mov
pop
xchg
jb
test
ss
sbb
std
or
mov
sub
shrl
mov
or
xchg
loop
pop
incl
addr16
dec
adc
lret
xlat
test
testb
inc
in
sti
ds
insl
ret
pop
xor
sub
imul
mov
ds
pmulhuw
test
jge
xchg
lds
int
pop
push
incb
xchg
dec
nop
mov
cmp
jge
cmp
inc
adc
lock
dec
lds
cltd
fbstp
lods
cmpsb
mov
mov
cwtl
mov
stos
pusha
sub
mov
ljmp
and
loop
mov
pushw
cmpsb
xchg
jmp
out
sub
xchg
lea
mov
in
xchg
daa
imull
mov
jmp
adc
xlat
jle
mov
arpl
scas
sub
inc
lahf
mov
iret
out
cwtl
lods
les
outsb
sahf
mov
sbb
add
fcoms
inc
inc
xchg
loop
sub
mov
adc
mov
mov
and
loopne
in
xchg
add
push
xchg
cwtl
mov
sub
xorb
popa
notl
dec
xchg
pop
out
mov
push
sub
or
add
cmpsb
mov
cwtl
jecxz
mov
gs
sbb
or
loope
inc
test
les
push
dec
icebp
arpl
out
stc
xchg
xchg
pop
xchg
sub
dec
adc
sub
mov
cmp
jmp
out
sar
mov
mov
lock
dec
stos
movsb
add
mov
mov
bound
in
sub
ficompl
sub
fwait
icebp
push
xchg
pop
iret
addr16
repnz
add
scas
hlt
movsb
cmp
or
sub
sub
mov
pop
sub
jne
out
imul
pop
or
xchg
ss
mov
and
into
imul
lcall
test
mov
in
lcall
fidivrl
stos
cmp
add
xor
mov
call
dec
ljmp
ret
adc
mov
loopne
sub
jae
mov
jmp
idivl
jbe
inc
sbb
adc
hlt
movsl
in
jp
push
pop
and
sub
lds
inc
mov
push
dec
in
push
fidivrl
mov
les
cmpsl
dec
fcompl
and
stos
adc
test
jo
add
ljmp
lcall
test
gs
xchg
repnz
pop
sub
ret
push
push
xchg
loopne
das
push
sub
cwtl
sub
lods
imul
sbb
xor
add
lret
fbstp
cli
je
xlat
xor
xor
les
inc
mov
insl
loopne
dec
cmp
lds
dec
hlt
push
adc
fldl2e
add
cmp
jnp
sub
or
sub
outsl
call
inc
and
push
fisttpll
pusha
xor
js
std
inc
pop
aas
pop
pop
dec
in
ljmp
add
dec
push
negl
sbb
mov
jmp
test
push
sub
shr
mov
jae
push
fsubrl
pushf
call
mov
jl
fnstcw
inc
loop
in
jmp
cmpsb
add
push
imul
pop
cld
xor
rol
sub
pop
shrb
lret
adc
loop
test
push
ljmp
sub
sbb
fisttpll
sbb
pop
popa
sub
pop
unpcklps
ljmp
mov
mov
and
or
scas
jge
mov
inc
mov
daa
popa
adc
jnp
aam
aas
subb
loop
aad
mov
mov
jb
subl
pop
enter
into
aam
lcall
dec
or
jb
test
mov
iret
out
push
aad
sub
outsl
scas
sbb
sbb
sub
bound
xor
xchg
jecxz
mov
cli
sbb
outsl
orl
enter
sbb
push
pop
cmp
clc
sub
adc
mov
pop
mov
sub
sub
mov
enter
ret
scas
mov
addr16
sar
stos
out
inc
mov
mov
std
mov
test
sub
mov
or
sub
out
shll
sub
adc
std
pop
add
pusha
popa
mov
xchg
mov
push
decb
xor
lea
nop
ljmp
push
pop
jge
in
mov
mov
xor
es
lock
push
fistps
test
adc
popa
sub
icebp
mov
jmp
sub
dec
ret
sbb
and
push
mov
xchg
in
out
mov
ja
in
cmp
mov
xor
pop
out
xor
imul
jbe
addr16
adc
mov
and
arpl
repnz
or
iret
mov
daa
pop
fldenv
sub
out
pop
cmp
sub
dec
mov
lds
lods
sub
adcl
sub
mov
je
push
mov
rolb
arpl
int
out
je
push
pushf
mov
bound
or
push
add
int3
jp
xchg
out
jae
inc
mov
mov
and
inc
cld
sub
iret
sbb
sub
add
dec
out
jae
push
cmp
neg
push
and
jb
pop
sub
pop
out
push
js
rcrb
cltd
jp
ficoms
sub
add
mov
aad
push
inc
adc
arpl
sub
fisubrs
lds
pop
adc
out
pop
push
iret
ret
movsb
push
inc
dec
xchg
mov
cmpl
popf
sub
popa
and
in
mov
jbe
call
pop
ss
hlt
into
nop
jo
lahf
sub
aad
xor
add
cmpl
xchg
sub
sbb
and
xor
mov
mov
sub
xchg
mov
sub
cmc
or
in
sub
loopne
mov
inc
or
mov
jbe
sub
repnz
sub
popf
sti
mov
lea
insb
scas
lods
repnz
mov
std
fsubrl
imul
movsl
pop
movsb
test
inc
fidivrs
sbb
je
sub
push
mov
daa
sbbb
mov
pop
mov
fwait
aad
cmpsl
jo
cs
or
xor
sub
test
ljmp
jne
ljmp
loopne
push
rorb
out
clc
mov
adc
sub
cli
fwait
xchg
stos
inc
sub
loope
jae
mov
movsl
cs
sub
das
xchg
mov
add
jecxz
or
bound
inc
stc
and
ja
insl
in
cmp
add
pop
xchg
hlt
inc
das
mov
icebp
xchg
mov
out
cmp
fidivs
out
ljmp
mov
je
jl
inc
jae
movsb
xchg
cmp
xchg
xor
mov
mov
mov
jno
mov
mov
fcmovne
sahf
daa
sub
pop
loop
sbb
sbb
mov
inc
daa
sahf
jae
and
das
push
sub
or
mov
sub
testw
mov
sub
mov
jmp
shrb
test
jl
cmp
jo
sub
shll
cmp
sar
icebp
xor
cmpsb
push
mov
sub
cld
and
mov
sub
sub
mov
pop
pushf
jns
stos
cmp
cmc
stos
bound
shlb
sub
mov
cli
add
add
adc
sbb
ja
sub
jge
aas
out
dec
adc
adc
jo
out
lahf
pop
sub
adc
mov
jge
pop
cld
dec
dec
jmp
lahf
cli
in
dec
jae
cmpsb
clc
mov
movsl
push
pop
jne
add
sub
jg
ja
push
mov
sub
das
test
in
sbbl
ss
shr
xor
and
sub
adcl
mov
aaa
insl
xor
popa
movsb
pop
mov
dec
pushf
arpl
in
cmp
lods
pop
loop
sub
mov
addr16
das
sub
sbb
insl
xlat
out
pop
out
mov
insb
cmp
sar
inc
jl
fidivrl
xor
scas
or
mov
sub
jne,pn
push
or
lcall
and
cmp
dec
lret
rolb
test
stos
insb
sub
pop
ret
arpl
mov
lret
mov
jp
loope
add
sub
and
pop
mov
icebp
cmpsb
std
adc
mov
fistpl
and
movsl
pop
adcb
adc
add
ljmp
lea
pop
or
add
mov
jbe
call
daa
push
adc
sub
add
gs
arpl
in
mov
rcll
mov
loope
cwtl
sub
push
mov
fwait
xchg
pop
call
shrl
clc
sub
lods
sub
jp
xchg
jae
sarb
sub
xchg
std
pusha
adc
stos
fisubs
out
ds
mov
fildl
dec
loope
or
int3
mov
pusha
es
mov
fldenv
insl
mov
inc
mov
scas
dec
nop
aam
leave
sbb
fcomps
js
jge
lods
push
in
scas
sub
mov
cmp
leave
out
popf
bound
sub
pop
cltd
mov
outsb
das
add
aad
lahf
aas
sbb
mov
sub
test
fcmovb
cmp
fwait
lcall
xor
dec
sahf
insb
iret
sub
sbb
dec
sbb
sbb
adc
cmp
push
test
and
mov
mov
sub
sbb
dec
or
mov
push
lahf
ljmp
mov
jp
cli
dec
es
enter
inc
std
sbb
push
or
dec
into
inc
push
mov
cmp
cmp
or
dec
lds
xchg
mov
ret
sub
cmc
into
mov
call
sub
out
xor
mov
sub
sbb
adc
push
out
insl
stc
in
sub
das
push
adc
lret
test
sbb
cmpsl
sub
adc
test
mov
out
lahf
sbb
scas
sub
jmp
mov
fsts
jg
in
aam
xchg
sub
xor
lods
cmp
sub
and
out
mov
cmp
fildll
mull
js
pop
mov
mov
mov
pop
test
insl
cmp
or
sub
and
js
mov
dec
inc
push
imul
jl
xchg
or
es
push
shrl
dec
cmp
jge
fidivs
sub
jnp
pop
aad
iret
mov
jno
ret
sub
and
int
leave
dec
jmp
xor
jmp
mov
shll
cltd
test
jae
push
add
or
adc
sbb
sub
jg
inc
test
mov
xor
scas
ss
jne
sub
popa
int
push
or
push
movsl
dec
sahf
sub
fs
fdivr
aas
xchg
sub
pushf
push
jne
test
add
pop
test
mov
adcb
cmp
mov
xchg
jmp
xchg
xor
sub
dec
fldenv
sub
xchg
mov
and
mov
xor
adc
sub
fldcw
sub
loopne
sub
dec
sbb
mov
mov
lret
dec
ljmp
andl
sub
mov
push
out
mov
sarl
mov
and
negb
xor
add
insl
pop
leave
inc
repnz
cmp
enter
xor
les
cmp
fisttpll
dec
jl
xchg
xor
cmpsl
aaa
fistl
mov
addr16
bndldx
test
xor
hlt
sub
scas
push
mov
inc
and
jb
sub
mov
xor
les
rcr
push
pop
push
ds
add
or
inc
cmc
sub
sub
addr16
cmp
out
sub
inc
cmp
nop
sub
pushw
push
sub
push
aaa
mov
scas
sbb
fs
mov
les
orl
and
sbb
sbb
lret
pop
or
mov
out
cmpsb
and
inc
pop
pop
enter
imull
hlt
pop
cmp
mov
add
test
sbb
data16
sub
pop
fildll
call
dec
xchg
mov
jbe
sub
adc
sub
test
xchg
dec
sub
sub
adc
jo
mov
lea
inc
push
push
push
jne
daa
call
aam
jmp
xchg
sub
sub
dec
sub
jmp
sub
fdivrs
stc
icebp
nop
xor
mov
fists
aaa
sub
shr
push
imul
jmp
repz
repz
ret
sub
data16
xchg
mov
jl
cmp
or
mov
jle
ljmp
dec
mov
sbb
dec
mov
mov
aaa
mov
sub
mov
jb
test
out
jecxz
add
sub
cltd
adc
test
stos
stos
outsb
and
sbbb
or
test
fcmovb
inc
dec
sbb
sub
cmp
xchg
lret
sub
cltd
add
movsb
or
outsl
push
adc
xor
mov
shll
pop
aas
sub
in
and
dec
xor
and
pop
stos
out
out
mov
jp
push
mov
mov
sti
test
cmp
xchg
idivl
ljmp
mov
pop
or
bound
sub
ljmp
and
or
push
sub
inc
cmp
aad
cli
int3
mov
dec
das
je
xor
xor
fmull
ds
movsl
mov
rclb
cmp
testb
stos
mov
or
in
add
outsl
sub
stc
inc
cltd
sub
fnsave
push
roll
push
stos
aaa
xchg
sub
cwtl
mov
int3
jns
in
sub
incb
add
lock
adc
movsl
mov
aad
xor
adc
inc
in
stos
adc
xchg
imul
mov
das
and
add
mov
rol
je
adc
pop
dec
fcmovb
dec
icebp
jmp
out
push
int3
or
loop
in
xchg
fnstenv
or
push
mov
or
scas
rclb
fisubrs
ss
push
in
test
roll
in
js
fstl
xor
push
fwait
pop
sub
pop
jle
je
fs
mov
int3
sub
lods
ror
cmc
pushf
push
popf
mov
pop
sbb
dec
sbb
mov
addr16
test
out
push
push
cmp
lods
mov
jl
sub
mov
test
adc
loopne
cld
sub
int
shrl
sahf
mov
sub
std
lea
lods
jecxz
ja
xchg
in
sbb
mov
adc
or
jno
movhlps
icebp
loopne
aam
sub
stos
fwait
xor
and
add
jne
sti
lea
imul
loope
push
mov
jnp
cmp
aas
xor
dec
mov
test
pop
scas
add
jbe
add
into
mov
inc
and
fdecstp
cmp
mov
pusha
js
scas
xchg
jmp
mov
cmpsb
pop
push
jno
cmpsl
add
sarb
sbb
ljmp
lret
dec
mov
dec
rorl
sub
xchg
insl
cmp
dec
cmp
int3
lret
fdivp
cmp
fnsave
fiaddl
pop
sub
test
push
push
andl
cmp
pop
xlat
sub
mov
aad
push
dec
mov
push
sti
fwait
adc
test
mov
mov
mov
shrl
clc
pusha
fldt
mov
or
lea
xchg
sub
loop
imul
pop
sub
addr16
nop
mov
sub
dec
sub
mulb
mov
js
cmpsb
inc
int
leave
lock
lds
les
mov
loopne
cmp
jns
ljmp
add
jae
pop
and
loop
mov
xchg
stos
xor
sbb
dec
and
in
inc
sub
imul
cld
ja
arpl
push
call
jae
mov
rolb
outsb
sub
sub
arpl
jl
cmp
sbb
ret
add
push
sub
jecxz
setno
icebp
dec
rcl
arpl
clc
insb
loopne
fsubrs
sarl
adc
es
dec
or
mov
add
loop
movsl
ljmp
cmp
or
pushf
push
test
xchg
inc
sbb
adc
das
nop
or
sub
stc
sub
and
into
loope
shl
jle
in
jne
push
ss
addr16
pusha
xchg
sub
daa
dec
sub
push
sub
sbb
cmp
inc
out
sub
lret
cli
xor
mov
sub
or
add
stos
sub
xorb
cmpsb
icebp
add
inc
sub
fwait
add
test
repnz
mov
movsb
jo
push
dec
sub
loopne
shll
sub
sbb
imul
sub
xchg
sub
into
inc
insb
sub
xor
cmpsl
aad
mov
mov
inc
scas
imull
stos
mov
cmp
lods
jo
lds
or
daa
sub
dec
cmp
add
pop
push
sub
inc
jg
sub
cli
daa
in
mov
leave
out
insb
lahf
dec
mov
bound
sbb
cmp
mov
loopne
sbb
into
sbb
addr16
jmp
pop
stos
xor
push
sbb
mov
sbb
dec
pop
inc
mov
push
sub
out
sub
hlt
inc
dec
push
and
ljmp
jae
push
shr
xchg
push
test
gs
iret
adc
sub
in
mov
cmpsl
mov
insl
popf
dec
mov
ja
stos
arpl
cld
mov
push
ficomps
mov
js
fistpll
test
lods
pop
push
sub
and
sub
insl
ror
sub
mov
lret
mov
faddp
sub
mov
xchg
mov
sub
push
and
inc
xor
xchg
cmp
lret
cmpsl
sub
leave
xorb
dec
xchg
pop
sub
ja
mov
scas
jno
repnz
in
mov
sub
mov
jg
pop
dec
push
sbbl
sub
lret
mov
push
das
out
sub
or
ljmp
inc
out
arpl
fs
inc
pusha
sub
popa
dec
push
push
cld
cmp
sub
roll
xlat
cs
xor
fistl
or
ja
jp
stos
sub
jns
out
xor
jmp
das
pop
pop
mov
ljmp
fwait
xor
scas
sbb
out
lret
and
mov
and
mov
adc
and
cmpsb
ret
jmp
jnp
adc
aas
and
lret
outsl
sub
test
xor
fsubrs
and
std
negl
aam
jnp
in
jge
mov
sbb
dec
jl
jmp
loop
cmpsl
lahf
pop
mov
dec
sub
cli
jle
jg
mov
sub
mov
imul
sbb
push
jecxz
int3
cmp
sbb
adc
pop
rcll
enter
xchg
cmp
sub
pop
pop
ret
push
test
add
dec
test
fcmovu
sub
js
in
sbb
and
adc
xlat
mov
xchg
pop
push
add
sti
cmp
adc
test
xor
stos
mov
pop
fcmovnbe
push
sub
outsb
hlt
bound
ljmp
mov
xchg
sbb
popf
lret
inc
push
stos
nop
mov
sub
outsb
addl
inc
push
mov
cltd
and
mov
out
sbb
jp
test
sahf
lds
xor
jae
cli
mov
icebp
sub
into
mov
sub
or
and
bound
xchg
xchg
ret
sub
in
add
les
sbbl
adc
xchg
repz
std
data16
mov
ret
inc
bnd
arpl
nop
cmp
mov
imul
cwtl
push
icebp
inc
push
aam
cmpsb
push
daa
xor
leave
call
sub
into
les
lods
inc
test
ljmp
sub
mov
inc
add
jnp
insb
int
xchg
gs
mov
sub
test
int3
les
dec
xchg
push
inc
adc
sbb
cmp
loope
sub
cs
dec
sub
push
out
sub
sbb
sub
push
lret
repz
fistpl
call
sub
daa
jne
out
xor
leave
jmp
pop
and
cltd
lea
arpl
push
and
add
sub
sub
inc
imul
dec
test
add
rclb
insb
out
fwait
push
jp
pop
or
and
cld
das
ljmp
xchg
in
sub
icebp
adc
jl
fidivl
mov
mov
xchg
or
sub
jg
lcall
insl
xor
das
xor
pop
mov
bnd
mov
adc
jo
and
in
call
mov
push
scas
cmpsb
or
sub
mov
pop
sub
or
in
pop
ret
addr16
test
or
cli
inc
in
add
mov
xor
scas
jo
xor
adc
inc
test
mov
js
ss
sub
and
cmp
mov
dec
mov
pop
sahf
pop
inc
in
pop
fmuls
cmpsl
sub
ljmp
inc
cmp
imul
cmpb
push
popa
pop
jl
repz
int
in
push
popf
or
or
sbb
dec
js
mov
dec
stos
sub
je
addl
xor
mov
and
pop
lods
xor
mov
sub
mov
cmp
dec
cmp
arpl
cmpsl
dec
mov
hlt
jmp
ss
fimuls
clc
outsl
push
cmp
movsl
ret
sub
nop
loop
pop
mov
sbb
sahf
mov
jno
mov
dec
pop
sub
sbb
or
loop
std
fwait
dec
pop
movl
xor
dec
push
lods
dec
or
push
adc
jl
mov
lret
test
jp
inc
lods
test
jne
test
popa
movsl
sub
push
rcr
mov
and
xor
std
ljmp
dec
ja
sub
sub
mov
xchg
out
pop
push
xchg
mov
ljmp
mov
and
test
mov
daa
mov
sub
ret
cmc
scas
adc
sub
xor
xchg
jp
sub
pop
scas
sub
push
addl
xor
sub
dec
aas
sub
jmp
cmpsb
sbb
push
add
push
dec
mov
test
adc
int3
push
mov
cmpsb
negb
mov
stos
mov
insl
inc
aad
sub
pop
cli
insb
cmp
stos
lods
test
addl
data16
dec
shrw
inc
jo
push
mov
inc
test
lock
mov
aaa
pusha
sbb
cs
mov
cld
sub
insb
inc
mov
repz
sti
or
sub
int
adcb
xor
add
out
push
shll
popf
bnd
cmp
jne
dec
or
arpl
add
sub
aad
int
push
nop
out
cmpsl
scas
push
fmull
fdivs
stos
test
sub
cmp
out
sub
jb
fdiv
push
push
mov
sbb
lret
test
add
and
jg
fs
out
mov
mov
in
loope
lea
jbe
outsb
ds
je,pn
loop
push
and
pop
mov
push
test
xor
sbb
sbb
arpl
rcrl
ljmp
lcall
jp
xchg
xor
dec
xchg
dec
rorb
clc
icebp
pop
rep
inc
push
sub
jp
or
test
cmp
sbb
lock
aaa
shlb
int3
out
mov
cs
mov
sub
hlt
stc
xchg
cmpl
mov
sub
test
mov
xchg
out
mov
roll
or
dec
xchg
ljmp
leave
outsl
sub
push
jbe
pop
sarb
cltd
jmp
mov
sub
popf
andb
xchg
andb
cld
sub
hlt
fwait
push
cmp
ss
aad
inc
test
lret
and
leave
into
lret
movsl
fcoml
popf
jmp
test
imul
cmpb
leave
ficoms
shlb
dec
leave
or
into
aam
mov
pop
xor
jge
push
dec
out
ret
sub
subb
ds
inc
pusha
inc
outsl
add
call
inc
and
es
xchg
xor
mov
mov
enter
ljmp
ret
mov
inc
or
sub
add
lret
or
xor
xor
push
out
jbe
sahf
add
mov
sub
pusha
ljmp
in
lods
xor
mov
in
in
pop
sub
jnp
xchg
pop
push
jo
or
dec
nop
or
incl
push
cmp
push
fsubs
and
adc
js
xchg
dec
sbb
adc
xor
loop
mov
inc
xor
cmp
add
ljmp
je
addr16
sub
in
and
stos
int3
test
fistl
pop
cmp
jnp
inc
fldenv
das
ret
repz
fidivs
fldt
movsb
popa
inc
sub
iret
cmp
js
fidivrl
shlb
or
pop
scas
sub
add
das
pop
sub
sub
xor
lcall
pop
add
jno
shlb
xor
mov
sbb
or
cli
icebp
sahf
jbe
mov
stos
addl
jmp
sti
sub
fsts
jmp
sahf
cld
push
outsb
int3
shl
in
scas
pop
cmp
adc
dec
sub
inc
std
cmp
rcll
cltd
lret
sub
sub
cwtl
das
out
call
add
push
cmp
test
dec
xor
xor
push
mov
sub
jmp
dec
sub
and
push
jnp
stos
jmp
and
test
scas
dec
fldcw
test
dec
sub
mov
aaa
fs
scas
cmp
fistpll
add
cmpsb
sub
andb
dec
stc
sub
sub
test
mov
int
jg
ja
push
loope
cmp
cmpsb
adcb
nop
jae
mov
xlat
test
pop
pusha
ljmp
cmpl
push
sub
mov
test
fisttps
sub
or
push
not
cmpl
and
inc
sub
aas
xor
sub
pop
dec
sti
pop
call
shrl
lods
fmul
xor
out
or
push
rcl
leave
mov
jl,pt
dec
push
or
arpl
nop
xchg
dec
fildll
inc
jno
lret
add
imul
test
pop
and
sbb
sub
lock
mov
lds
movsb
pop
push
push
insb
data16
sub
xor
dec
lret
add
dec
arpl
ljmp
icebp
xor
jbe
add
mov
push
pop
lea
or
cmpsb
mov
cmp
jbe
loopne
xchg
inc
push
imul
jp
mov
arpl
mov
adc
jge
gs
mov
mov
xchg
rorl
shll
adcl
out
clc
push
sub
cmp
jp
test
stos
cmp
call
pop
dec
xchg
inc
test
add
out
dec
shrl
pushf
add
aas
fs
or
sbb
js
scas
sub
inc
jno
sti
sbb
ljmp
jle
cs
dec
fsubp
xor
std
or
arpl
xor
fidivs
repnz
mov
inc
out
mov
xlat
mov
cltd
js
jge
mov
inc
add
sub
sbbb
fstl
mov
cmpsb
jl
fwait
mov
rcl
test
iret
cmpsb
cs
or
int
dec
sti
dec
rcll
ret
out
arpl
idivb
sbb
test
leave
sbb
xchg
iret
xorb
aas
cmp
call
adcl
jae
mov
pop
dec
ja
cmp
pop
and
pop
pusha
cmpsl
outsl
and
hlt
push
sub
test
xchg
loop
cmp
mov
stc
sub
pop
loope
dec
and
dec
or
and
and
inc
dec
fbstp
cli
mov
sti
test
and
inc
insb
add
xor
sub
fistpl
dec
mov
faddl
sub
movsl
loop
push
push
mov
std
xchg
test
sub
call
pop
icebp
ljmp
mov
pop
movsl
sub
std
shrb
mov
push
jo
sub
dec
roll
insb
cmp
xchg
pop
test
gs
sub
out
mov
dec
dec
andb
xor
add
adc
cmp
sub
test
sub
notb
lea
pop
jl
loop
addr16
cmp
out
dec
sub
and
in
jmp
insl
jb
jbe
jne
push
out
hlt
lods
scas
dec
jmp
xchg
xchg
push
jl
cmp
cli
mov
rorb
push
outsl
fcoml
inc
mov
cli
lods
hlt
shll
sub
js
jmp
iret
or
mov
dec
out
xor
cmp
xor
fsubrs
lcall
lods
push
sbb
mov
jae
rcr
test
or
mov
dec
adc
inc
fwait
mov
jmp
out
jge
sbb
jne
repz
popa
and
movsb
cld
repnz
rcll
sahf
andb
sub
jae
mov
mov
dec
scas
sub
shr
lahf
int
sub
push
sbb
sbb
sub
je
cmpsb
sub
jns
and
xor
jbe
mov
mov
dec
mov
inc
cmpsl
ffreep
and
scas
out
sub
or
test
inc
les
scas
pop
mov
test
cmp
xchg
xchg
fildll
pop
cwtl
jge
out
dec
mov
push
push
cmpsb
test
xchg
inc
jbe
push
nop
add
scas
sub
or
mov
fists
ljmp
jecxz
inc
or
inc
pop
jmp
mov
enter
cmpl
les
and
fucom
adc
jge
andb
and
neg
loop
jne
sub
mov
xchg
or
sub
mov
std
push
mov
adc
je
xchg
sub
pop
imulb
xor
loopne
mov
mov
imull
iret
xchg
ds
cmc
or
push
loope
cmp
iret
cmp
adc
push
xchg
nop
rcrb
fistps
imul
mov
adc
lock
or
test
fdivl
push
mov
xor
ljmp
jp
dec
mov
inc
in
and
rcrb
ja
push
ljmp
in
lea
xor
cwtl
push
adc
js
sub
stos
pop
jnp
data16
xchg
adc
jno
mov
arpl
xor
rorb
cwtl
scas
mov
lea
sub
sub
adc
and
sub
jne
mov
xlat
inc
test
jp
out
idivw
sub
jns
dec
xchg
out
repnz
aaa
cmp
ljmp
or
sub
mov
adc
inc
and
jns
cli
sbb
mov
jecxz
loopne
ljmp
popa
xor
out
dec
cmp
dec
std
push
ss
dec
jbe
les
pop
cmp
add
cs
or
push
jb
add
mov
bound
adc
jne
cli
sub
push
in
pusha
fwait
adc
popa
repnz
out
fmulp
sub
loope
movsb
cmp
dec
dec
or
adc
push
cmp
pop
cmp
sub
xchg
stos
sub
and
into
arpl
je
mov
sub
shll
loope
ljmp
mov
enter
mov
mov
sub
sub
iret
inc
mov
sub
ret
stos
dec
pop
dec
rorb
pushf
jl
aaa
mov
insb
pop
inc
xchg
fnstsw
ljmp
cmp
cmp
orb
out
fdivl
sub
push
sub
int
in
xlat
xor
mov
sarb
inc
pop
pop
mov
inc
in
dec
inc
xor
sub
adc
pop
xor
push
sub
int
stos
out
jnp
jo
and
loop
adc
ljmp
mov
mov
out
out
test
gs
sub
in
movsb
or
nop
xor
inc
adc
sub
inc
jae
mov
pop
push
scas
add
sbb
fildll
dec
bound
sbb
and
aad
sub
lret
insl
ret
sub
scas
adc
clc
sub
sbb
push
xchg
mov
test
mov
pop
outsl
and
fiadds
sub
fs
shrl
lcall
xor
mov
pop
cmp
mov
jno
lea
ficompl
cmpsb
ret
pop
ds
lds
xor
adc
dec
rol
enter
push
sub
outsb
stos
es
std
or
pop
and
dec
sub
dec
pop
jg
xor
lret
dec
popa
sub
shll
mov
fsubrl
wbinvd
std
aam
ffreep
or
adc
ja
sbb
sub
sub
out
scas
insb
insl
mov
sbbb
pop
sub
push
cmp
push
insb
push
loopne
sub
inc
jns
push
xor
sbb
enter
into
sbb
ljmp
or
mov
jnp
aas
rolb
pmullw
scas
ss
fiaddl
add
shll
aam
scas
or
fwait
or
dec
imull
pop
add
cmp
sti
cmpsb
rcrl
icebp
pop
push
and
repnz
pop
out
mov
push
dec
cli
scas
imulb
movsl
cmpsb
test
mov
dec
bound
lcall
enter
cmp
push
xchg
and
daa
inc
lock
adc
xorb
test
mov
loop
mov
sub
mull
in
sbb
jb
xlat
lds
jns
mov
idivl
sti
lret
mov
test
pop
xor
push
sub
test
roll
push
jmp
sete
push
out
dec
mov
or
cmp
adc
pop
xchg
sub
cmpsl
cmp
nop
add
punpckhbw
popw
outsl
xor
mov
xchg
cmpsb
mov
inc
adc
lods
lock
out
mov
adc
jmp
dec
imul
xor
arpl
dec
lods
dec
andb
dec
movswl
cwtl
bound
cmp
sbb
fcoml
mov
lea
call
pop
mov
sbb
pop
xchg
sub
push
in
adc
fdivs
cmpsl
sbb
xchg
test
push
inc
test
dec
cwtl
jb
test
or
xchg
add
ret
fstl
lods
add
int
adc
sub
xor
push
stc
cmpsb
ljmp
daa
mov
jge
xchg
stos
mov
add
nop
xor
jnp
sub
pushf
movsb
mov
push
in
dec
fisubrs
nop
xchg
cli
add
mov
loope
sub
sub
mov
sbb
out
xchg
test
mov
cmpsb
dec
xor
sub
mov
dec
fldt
dec
sub
in
mov
lret
push
shrb
cltd
jle
cmpsl
push
dec
cmp
repz
lds
inc
bound
cmp
sbb
test
lds
pop
bound
dec
repnz
in
sti
mov
insb
inc
xchg
sub
xlat
adc
sub
int
lods
jecxz
lahf
push
imul
nop
dec
out
xchg
add
lret
mov
fldl
xchg
lahf
cld
hlt
cmp
xor
mov
pusha
xchg
ret
cmp
popf
test
cwtl
ja
cmp
ja
cmp
js
clc
repnz
cmp
cmp
push
mov
mov
jb
es
les
mov
fldenv
mov
pop
sub
mov
dec
xchg
insb
mov
ds
sbb
movsl
pop
and
push
sub
leave
in
ljmp
rorl
subl
mov
or
cmpsl
xchg
and
pop
push
aas
xor
or
dec
push
sub
dec
rolb
test
xchg
test
jbe
movsb
sub
jb
lcall
icebp
ljmp
mov
scas
sub
xchg
imul
mov
mov
cmpsl
add
je
sub
push
pop
mov
mov
jbe
stos
pop
les
insl
sub
cld
jo
in
cs
lret
movsl
fsts
mov
fiadds
add
cmc
das
or
sub
cmp
cmpsl
inc
sub
mov
rorl
pop
outsl
in
push
sub
mov
jno
sahf
or
dec
push
sub
cmpl
lcall
fistpl
sub
cli
adc
add
adc
leave
or
jnp
sub
in
lods
rolb
ljmp
fldt
jns
sub
popa
lcall
xadd
cli
mov
adc
mov
sub
inc
gs
inc
ja
or
sub
cli
shll
lret
or
mov
cmovl
shl
sub
ljmp
sub
push
out
sti
jo
mov
adc
jae
pop
mov
xor
cld
sub
mov
jnp
pusha
xchg
shll
jb
and
outsb
scas
ficomps
or
sub
repz
insb
fwait
aam
movsb
sub
jge
aas
and
mov
mov
mov
lock
cli
mov
push
sub
sub
scas
ds
sub
push
mov
inc
loope
jecxz
sbb
mov
dec
sub
pop
sub
pop
mov
out
incb
pop
dec
cmp
dec
mov
test
push
mov
sub
leave
subb
cmc
jle
sbb
jae
xor
test
addr16
dec
ds
lock
add
orl
xor
and
and
cmp
sub
ss
out
or
sub
outsb
pop
sub
into
ds
mov
sahf
sub
or
stc
filds
xchg
sub
stos
cmp
dec
movsb
push
jne
lret
fidivl
nop
inc
test
push
mov
or
ss
pop
mov
sub
mov
lds
dec
mov
cmp
icebp
out
adc
imull
mov
mov
pop
and
cs
enter
test
sarl
loop
cmc
test
cs
pop
lret
xor
sub
xor
mov
dec
push
addr16
cmpsl
inc
out
js
sub
pushf
push
jecxz
sub
cwtl
das
movsb
sub
sti
inc
jge
je
push
fsubrs
aaa
pop
xchg
cmp
and
jne
lods
out
shlb
cmp
in
mov
xchg
cld
xchg
pop
scas
test
inc
ljmp
js
pushf
push
ja
cmpsb
pop
sub
sahf
or
icebp
lods
sub
xchg
je
sub
dec
sub
sbb
adc
ljmp
lcall
xor
shl
mov
sub
xchg
sub
icebp
fistpl
pop
xlat
cmp
insb
mov
sub
push
push
sub
push
aad
jns
and
pop
xchg
xchg
jbe
pop
fcmovb
adc
fwait
sub
adc
ret
outsl
pop
test
movsb
fmul
lahf
dec
sub
jb
adc
aam
sbb
mov
popf
lock
insb
imul
iret
dec
sub
lret
sahf
pop
xchg
cs
lock
lret
stos
fsubrl
inc
into
mov
xor
xor
and
ss
das
ret
adc
or
aas
mov
lods
pusha
dec
adc
out
and
xor
sub
or
adc
cmp
iret
sub
ret
push
js
sub
cmp
mov
andl
add
scas
xor
and
das
sbb
dec
xchg
in
movsl
cmpsl
sub
push
mov
in
sub
push
mov
add
mov
lods
push
jno
in
cmpsl
xorl
mov
push
jo
and
pusha
dec
xchg
sbb
lcall
add
ljmp
jb
cli
jecxz
sub
movsl
xchg
sub
push
xor
out
sbb
mov
sub
das
in
out
add
outsl
sub
adc
ljmp
and
pop
les
fadd
mov
cmp
xor
xor
out
cld
fsts
push
sub
inc
sbb
mov
stos
outsl
test
jns
sub
mov
loopne
in
jg
ss
xchg
mov
jno
fwait
pop
sub
out
jae
jmp
cmpsl
xchg
int
jge
sub
mov
test
sbb
xchg
sub
push
pop
xchg
sub
adcl
dec
inc
dec
xchg
sub
lods
call
lret
popa
mov
aas
cld
xor
shrl
fs
sahf
pop
ljmp
xor
ljmp
sbb
sub
inc
mov
sbbb
decb
sub
popf
jmp
test
loope
xor
cmp
andl
xor
and
xchg
icebp
or
sub
adc
aas
testl
scas
add
sub
cmp
dec
fcmovbe
or
cmp
push
data16
into
bound
and
cmp
cmpsb
lods
dec
sub
push
xor
add
scas
movsl
push
push
jg
pop
inc
push
sub
adc
in
mov
dec
inc
sub
mov
pop
cmp
enter
sbb
scas
add
out
test
dec
lock
push
dec
jle
sub
mov
loop
andb
orl
in
xlat
dec
ds
mov
imulb
inc
push
imul
sti
aaa
inc
sub
mov
frstor
xor
inc
push
shll
movsl
xor
mov
xor
sub
xor
cmp
xor
scas
iret
and
push
mov
test
inc
pop
cld
xchg
mov
adc
loopne
cmp
pop
pop
lock
lds
lret
sub
jb
idivl
xchg
cltd
test
stc
lret
or
dec
dec
or
loop
adc
xchg
stc
xchg
sub
sub
add
out
in
xor
int
sub
movsb
or
mov
jbe
dec
add
mov
rclb
sbb
inc
arpl
pop
push
ljmp
mov
gs
fcmovu
cmp
sub
iret
push
xchg
jns
leave
sub
clc
pop
push
lods
sub
enter
loop
mov
and
xchg
mov
stos
sub
push
gs
aaa
sbb
sub
add
sub
adc
inc
or
notb
inc
cmpsb
int
sbb
lea
push
loope
mov
and
sbb
sub
icebp
inc
xchg
ljmp
movsb
push
dec
enter
rorb
cmpsl
cmp
outsb
gs
aad
push
shlb
mov
rolb
out
out
aad
cmp
sub
or
add
mov
movsl
dec
pop
test
cltd
popf
aas
jae
imul
ja
sub
pop
push
adc
dec
mov
sub
fwait
popf
cmp
xchg
leave
dec
and
add
das
xchg
testl
xor
xor
jmp
ret
sub
xchg
out
ds
dec
pop
add
cmpsb
arpl
sub
cmp
imull
fwait
mov
mov
jo
pop
dec
js
popf
test
das
sub
dec
sbb
jno
pop
test
or
lea
cld
sub
faddl
in
movsl
shrl
sub
sub
in
mov
ljmp
mov
push
sub
in
hlt
shlb
sbb
sbb
sbb
sub
push
shrl
stos
sub
adc
inc
sub
lcall
scas
rolb
idiv
adc
mov
addr16
mov
jg
xchg
xchg
mov
inc
adc
push
stos
push
or
sub
hlt
add
outsb
sub
xor
sbb
mov
mov
les
mov
sbb
hlt
mov
xor
int
fstl
inc
popa
cli
cmp
lret
pusha
mov
and
sub
jnp
and
and
hlt
push
mov
xor
dec
in
jns
sub
out
jo
mov
jno
rorb
stos
lock
int
jmp
movsl
xchg
pop
pop
mov
inc
in
stos
and
jae
sub
dec
or
into
jns
dec
dec
rolb
jb
add
cmp
test
clc
test
roll
sahf
mov
cwtl
mov
adc
fnstsw
xor
and
jns
pop
leave
mov
mov
ljmp
cmpsb
pop
mov
psubusb
sub
fdivl
and
pushl
mov
bound
and
repz
sbb
dec
sub
pop
das
and
xchg
fiaddl
scas
gs
test
pop
test
repz
jbe
jge
sub
dec
scas
cmp
add
sub
pop
jmp
mov
and
add
scas
int3
test
pop
cmp
push
subl
jecxz
rorb
inc
pop
xchg
lahf
push
adc
subl
int
inc
fst
imul
fsubr
stos
ljmp
repnz
addl
insl
stc
sbb
push
xchg
xlat
vphaddudq
out
mov
sti
enter
fimull
sub
je
push
or
icebp
push
fcmovbe
adc
lea
adc
ds
test
sti
int3
dec
xchg
cmp
nop
sub
stc
test
test
sbb
push
ljmp
std
pop
sahf
pop
out
inc
mov
xor
stos
sahf
lds
call
bound
ljmp
lret
pop
mov
sub
mov
mov
jb
mov
imul
jle
jecxz,pt
in
outsl
enter
lds
imul
mov
int3
mov
sub
adc
mov
sub
arpl
loopne
rolb
cmp
mov
jo
cwtl
pop
scas
inc
sub
in
adc
add
sub
fmuls
dec
sub
sub
xchg
clc
jle
test
lea
adc
stc
pop
inc
and
sub
xchg
push
aaa
pusha
cmp
cli
out
cmc
cmc
cmp
add
test
or
bswap
xchg
or
add
ljmp
jae
jle
cmpsb
cmpsl
jl
in
jbe
cmp
int3
inc
or
adc
push
xchg
sub
sahf
add
scas
sub
popa
out
sbb
mov
hlt
sub
push
dec
push
repz
dec
add
fiadds
xorb
in
add
inc
icebp
fisubrl
xor
and
lret
repnz
out
call
iret
sub
sbb
cmp
sub
mov
sub
dec
cmp
lods
leave
inc
push
stos
cmpsb
xchg
cmp
sub
xchg
outsl
xor
fldcw
lahf
enter
insb
stc
jmp
ret
jp
subl
not
cmpsl
xor
call
lods
sbb
cs
inc
sub
pop
dec
jbe
cmpsl
data16
sub
inc
addr16
in
ret
mov
loope
test
stc
fcmovbe
mov
sbb
push
xor
ljmp
xor
xchg
push
push
add
in
loopne
jle
mov
push
inc
mov
mov
xchg
mov
mov
xchg
push
push
cmp
dec
loopne
and
test
sbb
add
jmp
test
pop
test
pop
adc
sub
cmp
lret
sub
ja
jp
adc
aas
stos
inc
cmp
sub
rcrl
xor
sub
add
movsb
sub
je
sub
cmp
cmc
and
push
les
cmpsl
xchg
sub
cmp
mov
dec
xor
or
xchg
loopne
add
inc
push
sub
and
nop
fwait
outsl
test
cs
es
test
xchg
roll
push
js
adc
pop
push
sub
or
adc
imul
outsl
sub
pushf
lcall
or
inc
rolb
xor
loope
test
push
loop
cld
or
fldcw
jl
insl
and
test
lods
inc
jnp,pt
arpl
xchg
dec
popa
xor
cld
dec
test
adc
cs
cwtl
std
int
mov
and
mov
sub
out
fmuls
pop
dec
sbbb
pop
xor
cmp
nopl
jne
jns
push
xor
and
repz
sbb
mov
inc
in
xchg
and
repnz
mov
fsubl
aas
andl
iret
sub
dec
mov
repz
loopne
aam
adc
sub
les
dec
in
inc
sbb
add
sub
jmp
cmpsb
mov
mov
add
scas
hlt
ret
xor
dec
xchg
shrl
push
popa
dec
pop
testb
dec
sub
add
lret
xchg
les
dec
sub
lds
enter
sub
dec
pop
adc
sub
out
jo
std
loop
out
cmc
andb
iret
lcall
xorl
sbb
xchg
shrb
push
mov
mov
push
push
cmpsb
ss
sti
jecxz
sbb
ret
pusha
sub
rcr
jns
jmp
sub
subb
xchg
ds
sub
sahf
or
into
sub
scas
xchg
sbb
add
mov
cwtl
lret
je
dec
sbb
js
mov
pop
mov
jmp
pop
inc
add
push
dec
adc
nop
cmp
add
push
sub
pop
lret
test
mov
insb
xchg
dec
ret
data16
mov
dec
fistl
sub
sub
mov
xor
mov
sbb
adc
and
dec
int3
jbe
push
add
fstl
xorl
push
push
in
negl
cwtl
adc
mov
daa
addr16
ret
fmuls
hlt
xchg
repnz
pop
xchg
clc
sub
inc
lods
fdivp
ret
sub
repz
stc
lahf
jg
mov
and
xchg
xchg
mov
das
pop
ljmp
fisubrl
sub
popa
or
imulb
loop
mov
mov
or
jbe
sub
loope
popf
stos
jle
lock
dec
dec
push
xor
sbb
out
xchg
lret
xchg
jb
sub
inc
stc
mov
fstpl
jbe
cmp
mov
out
bound
inc
sub
lock
outsl
pop
push
fiaddl
dec
add
lods
fst
pop
iret
sub
bound
scas
add
xor
inc
fisubl
cmp
pop
hlt
aam
repnz
and
mov
push
mov
push
adc
add
mov
mov
out
imul
jge
cmp
mov
mov
into
cmpsl
inc
adc
xor
ljmp
int
into
test
mov
mov
call
mov
add
push
pop
mov
mov
xor
shrb
pop
sub
or
mov
inc
scas
sub
xchg
cli
push
fadd
mov
lods
sub
insb
mov
lahf
xor
mov
sbb
cmp
fsubl
sub
jge
pusha
daa
sub
repz
bound
sbb
dec
pop
test
popf
mov
nop
pop
add
xor
or
push
sub
inc
stos
add
jo
bound
add
shrb
dec
inc
shll
fdivp
adc
jnp
addr16
mov
in
xor
add
jle
jl
xchg
movsl
cmpsl
or
xchg
popa
dec
sub
fbld
mov
sub
pop
mov
enter
out
les
add
xchg
cmp
add
hlt
sub
pop
flds
xchg
test
adc
mov
push
cmc
push
dec
out
ret
xor
or
ja
leave
rcrl
jmp
mov
fwait
pop
sub
das
mov
push
push
popa
dec
inc
jecxz
sub
shl
adc
movsl
sbb
test
pushl
pop
pop
cmp
sbb
pop
sbb
jae
xchg
adcl
mov
arpl
dec
test
adc
add
sub
insb
icebp
mov
push
jne
rolb
lahf
ja
sarl
in
cs
pop
std
sub
jno
sub
movsb
ja
les
and
adc
pop
cld
sub
jno
outsl
pcmpgtw
sub
jns
xchg
cmpsb
mov
and
cli
mov
add
cmp
js
cmp
push
or
cwtl
jnp
cmpb
out
xor
sub
pop
out
scas
stos
scas
test
cmp
gs
arpl
jge
movsb
mov
outsb
in
sub
sti
test
cmpsb
fwait
sbb
push
push
pop
push
add
enter
jg
mov
mov
jge
xor
fbstp
pop
in
test
daa
enter
andl
shrb
cmp
push
dec
sbb
sub
cmp
test
cmp
inc
add
xchg
addr16
xchg
sub
xlat
push
pusha
int3
aad
fldcw
cwtl
push
pop
cltd
or
cli
in
sub
test
out
pop
xchg
or
jmp
dec
pop
outsb
adc
pop
aaa
loop
or
push
out
xchg
repnz
decb
dec
sub
inc
xchg
je
mov
into
movsl
mov
mov
xor
sub
xchg
adc
std
xchg
pop
mov
xorb
ljmp
test
cmp
add
je
and
xchg
mov
xchg
inc
inc
cmp
outsl
outsb
stos
add
mov
push
pop
sub
lea
int
pop
mov
push
mov
pop
jbe
pop
imul
orl
sti
test
jo
andl
out
push
int3
in
pop
mov
lret
sub
and
push
add
cmpsl
aaa
fmuls
sarb
aam
clc
ljmp
out
dec
mov
scas
cmp
mov
stc
mov
add
fists
stos
sub
fs
fwait
lods
in
dec
or
dec
int3
out
xchg
lods
xchg
movsl
and
dec
inc
ds
xor
loope
inc
cmp
dec
sub
push
sbb
pop
scas
out
sub
jl
sub
push
sub
mov
insb
jge
push
cmp
mov
shr
test
shlb
clc
cltd
lret
pushf
push
lea
add
sarl
andb
imul
gs
test
pop
pop
inc
pop
stos
repnz
mov
pop
xchg
movsb
sub
push
dec
roll
adc
pusha
pop
jg
sbb
inc
popf
sub
incb
pop
xor
fadds
pop
leave
mov
xor
rcll
into
jno
fcompl
xor
movhps
loop
ret
and
test
dec
cli
pusha
sub
shl
pop
int
call
mov
sub
testb
sub
dec
mov
sbb
or
ljmp
das
inc
sub
stc
pop
cli
insl
push
sti
mov
in
sub
insb
add
and
pop
sub
xor
pop
sub
movsl
cwtl
mov
sub
in
inc
dec
or
mov
lcall
scas
sub
in
fdivrp
and
cmpsl
sbb
mov
pop
mov
adc
jb
test
stos
mov
lock
lcall
shlb
ljmp
mov
or
and
xchg
dec
stos
cmp
daa
sub
mov
mov
mov
cmp
fistps
sub
sub
sub
ja
aad
push
insl
sub
cmp
fs
push
lea
outsl
xchg
push
push
or
in
push
cmc
dec
dec
mov
jo
dec
outsl
pop
jp
int3
shlb
pop
es
sbb
lods
addr16
subb
pop
loopne
mov
jno
je
dec
jo
int
and
mov
cmp
test
xchg
rcrl
xlat
shlb
sub
jae
sahf
dec
push
sub
or
xchg
nop
jnp
dec
jl
push
or
sub
jmp
fisttpl
in
test
cmp
test
loopne
rcll
xor
std
xor
sub
jae
dec
mov
sub
pop
out
sub
inc
stc
fiadds
adc
push
psrad
pop
pop
add
inc
jns
das
jmp
int3
and
push
addr16
xor
and
jmp
and
jns
or
gs
int3
aas
sub
add
test
and
loopne
fwait
adc
cmpl
xor
dec
cmpsb
or
sub
or
ss
lods
inc
sub
notl
inc
rolb
cmp
nop
jg
test
std
aaa
notb
inc
cmp
add
cmp
xor
and
stc
pusha
andl
scas
push
fstl
pop
jo
lret
sub
sub
loop
movsl
mov
jb
xchg
sbb
loop
xlat
cmp
mov
pusha
mov
push
jo
mov
push
mov
cmp
dec
sub
inc
shl
ljmp
ds
push
pop
popa
sbb
xchg
and
sub
xlat
fstl
lret
sbb
dec
sub
xorb
mov
dec
inc
jmp
lahf
ljmp
lds
mov
xchg
push
jbe
mov
data16
mov
jecxz
pushf
rorl
xorl
lret
test
les
cli
push
sub
loopne
sub
and
mov
test
fnstsw
ljmp
pop
dec
outsl
test
and
mov
push
leave
sub
pushf
cwtl
xchg
arpl
xchg
inc
push
negl
data16
mov
xor
cmp
mov
mov
mov
add
sub
es
sub
jmp
dec
or
sbb
jmp
std
xchg
fs
aaa
push
shr
sbb
imul
xlat
pushf
sub
jne
fs
int
sbb
pop
adc
xchg
fwait
roll
sbb
aad
and
or
jle
jg
sub
push
push
sbb
out
dec
jne
sti
jb
xchg
adc
push
xor
sbb
ljmp
inc
bound
jle
ss
mov
push
fisubl
sub
dec
cmpsl
sub
pushf
data16
les
add
adc
fadd
pop
test
orb
movsb
push
dec
sub
dec
add
jns
pop
mov
jmp
jae
add
xchg
hlt
out
cmp
sbb
scas
and
into
idivb
sbbl
push
mov
jbe
sub
jno
mov
mov
imul
mov
lcall
pop
mov
sti
ss
in
or
sbb
mov
cmp
sbb
sub
push
cmpsl
mov
movsl
sbb
jb
movsb
faddl
shrb
cli
dec
scas
arpl
xchg
cwtl
cmp
push
mov
pop
sti
std
in
cmp
inc
ljmp
adc
dec
lret
movsl
stos
aam
xor
jo
mov
xor
cmp
jns
subl
das
gs
mov
xchg
push
in
sub
xorb
mov
stos
jmp
iret
imul
ljmp
ds
sub
filds
out
push
sub
dec
pop
mov
mov
test
les
sub
inc
jnp
pushf
mov
mov
mov
arpl
mov
test
jg
xlat
mov
outsl
mov
jecxz
sub
or
rolw
sub
lcall
arpl
sbb
mov
jno
lahf
pop
dec
fisttpll
dec
and
cld
cwtl
mov
outsl
in
mov
cmp
or
sub
rol
fs
jle
sub
jb
rorb
popfw
mov
sub
lds
inc
sub
lea
in
sub
popa
or
sub
cld
add
inc
shll
sub
sahf
test
jge,pn
sub
std
js
push
mov
dec
cmp
out
lods
je
sbb
jns
adc
pop
pop
hlt
mov
cmpxchg
sub
sub
jmp
and
xchg
insb
dec
mov
inc
jno
mov
adc
out
jnp
pusha
das
sub
xor
pop
adc
xlat
sub
inc
xor
or
fisubrs
aam
mov
mov
dec
jecxz
loopne
fs
and
imul
add
scas
jmp
sub
push
and
idivb
ret
jecxz
out
pop
mov
lock
js
mov
arpl
ss
adc
sub
sub
iret
fnstsw
pop
inc
shrb
test
nop
loop
adc
sbbl
xchg
bound
sbb
inc
mov
js
xor
cmpsb
in
movsl
mov
test
test
ds
or
into
or
xor
cs
movsb
fstpl
xchg
popf
cmp
inc
sar
and
lret
dec
ror
nop
ret
cld
push
pop
sub
mov
jne
mov
shl
les
dec
shlb
data16
jb
cmp
push
iret
cmp
pop
icebp
movsb
sub
mov
sub
dec
jb
xchg
and
loop
mov
xchg
aam
adc
cmp
add
mov
insb
hlt
xor
lea
popa
pop
sbb
pop
adc
cmp
les
mov
jbe
xchg
pop
data16
sub
call
imul
and
dec
test
and
popa
mov
js
cwtl
mov
pop
push
cmpb
cmpsb
sub
xchg
out
xchg
gs
xchg
dec
jae
mov
cmpsb
jp
ljmp
stc
xor
jae
sbb
out
cltd
aaa
xor
xor
out
sub
adc
sub
push
or
or
sub
adc
sub
sbb
andl
adc
adc
sbb
ds
xchg
pop
sarl
jl
sub
adc
dec
fisubl
cmp
mov
shr
cmc
dec
mov
out
inc
cs
sub
aam
add
loopne
aad
std
setp
push
jne
addl
dec
ror
sti
sub
cmp
pop
jecxz
sbb
cmpsb
mov
mov
cmovl
ss
mov
mov
aaa
test
jns
test
mov
leave
sub
sub
ss
pop
ljmp
pop
cmp
lahf
sub
leave
fnsave
stos
sub
mov
dec
ret
xchg
push
shlb
pusha
shrb
mov
fwait
mov
mov
mov
arpl
addr16
push
ror
ljmp
xor
ljmp
cli
and
divl
insb
mov
mov
push
sbb
xor
mov
sub
loopne
in
jmp
lods
loope
mov
fs
add
sub
shll
pop
std
enter
cmp
jo
lock
sbb
xor
shl
sub
test
gs
inc
rclb
inc
sub
lds
xor
xor
stos
bound
jo,pn
add
mov
fbld
movb
sub
mov
outsl
insl
sub
cmp
test
and
dec
cld
jns
push
rcll
repz
jbe
sahf
out
inc
stc
jnp
sub
mov
push
pop
mov
lahf
xor
sub
sub
stos
push
mov
sub
fwait
mov
js
inc
int
cmpl
out
pop
sub
and
imul
lahf
xor
sub
subb
pop
and
scas
sahf
fidivs
xor
das
xchg
lods
sub
mov
sub
push
mov
rorl
cmp
cs
std
arpl
ja
test
adc
rorl
mov
sbbb
dec
pop
xor
clc
loop
loopne
mov
cmpsb
jns
lock
scas
cmpsb
or
lret
jge
loop
in
mov
inc
sub
and
or
mov
aas
ljmp
adc
sub
out
sub
cmp
repz
push
dec
dec
sub
add
add
lds
test
mov
mov
cmp
jne
sub
cmc
scas
adc
jg
sbb
cmp
imulb
lret
jecxz
call
sub
andl
add
mov
arpl
ds
sub
mov
fucomp
push
test
push
fisubrl
test
cmp
inc
loop
insl
sbb
and
mov
packsswb
jno
mov
push
test
movsl
sbb
mov
addb
sbb
xor
xor
push
jg
mov
sub
rcrl
jmp
pop
mov
push
mov
out
add
stos
dec
cmp
addb
cmp
xchg
xor
sub
sub
orl
sub
jge
stc
pop
mov
sub
xor
jmp
sub
push
lds
pop
loop
dec
sub
icebp
loop
sub
lret
into
mov
orb
movsb
and
je
pop
ss
cmc
ljmp
movsl
add
lea
fnsetpm(287
mov
jp
fstps
push
sub
sbb
sub
cmp
data16
or
sub
pushf
fs
and
mov
fsubs
sub
dec
sub
ret
mov
inc
sub
mov
xchg
and
or
sub
jmp
sbb
mov
push
cmp
mov
xorb
int3
and
aaa
jp
mov
mov
cwtl
mov
hlt
mov
dec
test
int3
mov
push
pusha
sub
jg
sbb
add
sub
sbb
jns
adc
mov
bound
out
lds
andl
dec
pop
fcmovu
push
lcall
mov
cmp
loopne
out
cmp
jo
cltd
mov
xor
or
sub
dec
or
test
aaa
mov
fiaddl
dec
insb
or
or
or
pop
lock
sub
mov
or
dec
sub
jg
lock
and
aad
push
ljmp
outsb
cmp
sub
adc
aam
add
push
cs
sub
ret
fidivl
sub
cmp
adc
leave
addr16
cmpsl
test
in
fildll
mov
mov
cmp
or
ret
sub
mov
mov
inc
cmp
leave
cli
cmp
pop
sub
mov
iret
pop
xor
scas
sub
out
movsb
fcompl
pop
aas
dec
push
push
sub
cld
xor
or
cmp
lea
test
andb
xchg
mov
insl
sub
arpl
movsl
xchg
inc
mov
lods
test
mov
sbb
into
call
mov
jb
adc
mov
inc
push
imul
fldcw
arpl
popf
sub
fisttps
jnp
mov
out
pop
mov
pop
inc
sub
orl
cmp
add
hlt
fs
pusha
sub
xor
dec
xchg
ljmp
push
cmc
popa
push
in
fisubs
andl
mov
cmpsl
push
or
jge
je
sbb
push
jno
sub
mov
fisubrl
loope
dec
and
aas
or
sub
ss
jae
push
mov
fmuls
fidivl
inc
pop
ljmp
inc
lcall
and
orb
test
sub
loopne
sahf
sub
push
cmp
cs
xchg
dec
pop
clc
ja
xor
or
or
mov
and
pop
sbbb
pop
jbe
sub
loopne
sbb
xor
and
loop
mov
inc
and
aas
and
loope
ljmp
int3
insb
ds
mov
sbb
out
sub
sub
ljmp
aam
cmc
sarb
mov
pop
mov
enter
sub
dec
loop
cld
sbb
push
bound
in
jg
cmp
sub
int3
push
mov
cmpsb
pop
jecxz
jbe
mov
fiadds
in
cltd
pop
add
mov
clc
rcrb
leave
sub
pop
mov
test
push
outsb
sub
std
insl
arpl
sub
mov
pop
subl
mov
sbb
imul
mov
push
fs
sti
adc
test
push
xor
and
sub
add
enter
cld
scas
xor
sbb
or
repz
jns
dec
mov
jbe
or
lret
mov
jg
inc
xchg
in
push
out
sbb
mov
mov
mov
inc
xor
lock
aad
jb
inc
movsl
push
inc
sub
adc
and
pushf
lret
sbb
mov
loop
mulb
mov
cmp
repnz
cmp
sub
add
mov
daa
lea
adc
imul
ds
cmp
sub
sbb
arpl
mov
cli
add
xor
adc
add
sub
xchg
fmuls
sub
xor
or
mov
sarl
sub
and
mov
int
mov
addr16
add
jg
aaa
mov
sbb
aas
ret
pop
pushf
mov
jl
jo
sbb
dec
nop
loopne
int3
jmp
repnz
xor
popf
xor
out
pop
dec
lods
pop
movsb
arpl
out
sub
out
lea
xchg
scas
add
adc
xor
jns
dec
mov
cmp
sahf
add
subl
push
cltd
mov
cmpb
cs
clc
and
nop
mov
mov
jl
popf
lods
ja
pop
cs
repnz
push
dec
iret
ljmp
dec
pop
dec
sub
cmp
mov
push
push
sub
mov
loope
dec
leave
in
shrb
xchg
subl
and
stos
mov
imul
push
dec
mov
ret
out
lods
out
test
fisubrl
push
daa
mov
add
push
and
cmp
jne
test
mov
imul
dec
fprem1
sbb
sub
dec
mov
fbld
sbb
inc
inc
daa
push
cli
xchg
dec
sub
mov
hlt
call
shll
fmul
fisubrs
into
adc
mov
jae
in
dec
orl
mov
bound
mov
out
in
xlat
inc
je
inc
test
cmpsl
fcomps
mov
fwait
add
sub
mov
or
out
decl
pop
mov
pop
dec
ljmp
lods
bound
sub
jecxz
in
cltd
sub
xorl
and
cmp
imul
sub
sub
ds
add
sub
pop
jmp
mov
pop
in
shl
repnz
les
arpl
int
cmp
jl
fldcw
cmp
in
adc
jb
xchg
fimuls
mov
mov
lcall
sbb
fisubrl
aad
xchg
mov
imul
iret
sub
inc
lcall
std
ss
imul
dec
fs
pop
lock
sbb
jmp
rorb
movsb
pop
mov
fninit
or
xor
xchg
mov
inc
pop
sub
pushf
jmp
or
add
popa
loope
shrb
mov
arpl
cmpsb
cmp
mov
cmpsl
addr16
nop
dec
add
or
sub
dec
cs
rclb
inc
mov
orl
loopne
movsb
mov
adc
dec
test
xorb
inc
loopne
inc
cmp
sbb
imul
push
cmp
sub
adc
clc
adc
test
stos
dec
sub
ljmp
aam
movsb
lods
sub
test
add
fidivs
arpl
cmpsb
mov
pop
imul
jbe
add
lahf
test
jmp
movsb
mov
loopne
push
idivb
iret
jecxz
xchg
add
inc
sub
cld
pop
sub
push
movsb
cmpsb
pop
fsubrs
mov
orb
sub
mov
sub
scas
sub
sub
xorl
stc
test
imul
push
test
xlat
outsb
dec
adc
jne
cmc
sti
imul
inc
test
inc
adc
sub
rcl
pop
outsb
cmpsl
xchg
ljmp
ds
or
cmp
cmpsl
cmp
rcrb
sub
inc
mov
push
pop
out
mov
enter
pop
pop
inc
xchg
dec
sub
movsl
lds
dec
fidivs
sub
icebp
sub
repnz
aad
lret
mov
orb
sbb
mov
xchg
sti
data16
cli
repz
dec
pop
jecxz
lea
sub
adc
pop
mov
lret
cmpsl
cwtl
out
mov
adc
popa
xor
adc
pop
push
and
mov
movsb
inc
int
xchg
dec
xor
mov
das
fsubs
fwait
clc
inc
sub
sub
iret
jbe
jae
test
sub
jecxz
push
adc
xchg
aas
xchg
xor
add
dec
or
jae
ljmp
adc
cmp
int3
sub
rcll
test
jecxz
dec
loope
xchg
in
jle
cmpsb
bound
addr16
adc
sub
xchg
or
sbb
int
push
push
pop
add
mov
js
xchg
out
xchg
sub
ror
dec
cltd
sbb
or
das
in
jo
scas
aad
fisubrs
pop
cmpb
jmp
out
into
cmp
fwait
dec
mov
sub
xchg
mov
stc
iret
lea
bound
mov
ja
outsl
jl
mov
xor
ret
popf
pop
jae
imul
adc
call
je
cwtl
xchg
js
add
sub
into
adc
mov
imul
int3
push
jb
pop
ret
inc
test
andb
inc
xor
mov
aas
sbb
or
outsb
and
mov
sbb
jo
sti
or
int
xor
push
sbb
mov
sub
mov
movsl
xchg
insb
push
mov
xchg
push
dec
je
xchg
sub
movsl
mov
pop
push
iret
pop
sub
out
mov
subb
mov
jg
mov
mov
dec
addr16
push
xor
in
lahf
stos
sub
adc
call
sbb
cmp
sti
sub
call
in
dec
push
sub
push
pop
icebp
pop
stos
or
popa
cmpsl
imul
mov
add
bound
je
adc
sub
and
and
fsubr
cmp
mov
ljmp
inc
pop
xor
cmc
mov
popf
or
xor
test
es
xor
push
sub
sti
xor
sub
mov
jno
mov
push
mov
pop
scas
movsl
int
sub
xor
imul
inc
cmp
in
dec
sub
xor
xchg
sub
dec
jmp
loopne
mov
pop
inc
push
push
cs
sub
fs
outsl
jne
pop
popa
sub
sbbb
or
pop
rcrb
mov
add
pop
xlat
mov
adc
mov
mov
inc
or
dec
pop
stc
lods
lahf
cvtpi2ps
jp
loopne
rolb
jmp
and
xchg
mov
mov
xchg
sbb
and
mov
jnp
mov
mov
adc
push
jmp
sub
xchg
sub
mov
rep
in
sub
int
or
ds
ret
ljmp
jmp
mov
cmp
push
test
fwait
add
scas
aad
jg
test
cmp
inc
out
js
jecxz
dec
decb
inc
addr16
out
pop
xchg
xchg
enter
cmpsb
adc
sub
jb
fbld
cmp
push
xchg
sahf
dec
outsl
movsb
or
sub
mov
push
addr16
cltd
sbb
sub
movsl
mov
jg
or
test
sub
xor
mov
sbb
dec
scas
sub
ds
out
or
sub
push
lds
push
mov
push
lret
pop
ja
nop
ret
sub
push
xor
loopne
mov
add
mov
in
addl
jecxz
dec
or
scas
jb
dec
pushf
sub
mov
cld
sbb
orl
or
rep
and
cmpb
xchg
sub
sti
cmp
sub
ret
sbb
jle
outsl
dec
pop
pop
adc
adc
sub
jo
test
jbe,pt
ljmp
adc
mov
lcall
bound
sbb
dec
jae
dec
mov
popa
mov
push
xchg
call
dec
fmuls
push
rcll
test
rorl
lods
sub
inc
jp
mov
jecxz
stc
xor
sbb
xchg
test
jle
sub
bound
sub
pushf
push
jp
fs
ljmp
mov
jbe
clc
out
test
lods
sbb
sub
stos
xchg
fistpll
sub
lock
out
js
xchg
xor
mov
push
movsl
leave
inc
test
and
dec
mov
mov
push
aas
push
shr
inc
negl
sbb
mov
mov
ljmp
pusha
bound
lock
add
scas
fwait
push
out
cs
mov
adcl
iret
mov
aas
movsb
xlat
fimuls
out
dec
adc
jle
mov
xchg
popf
push
pop
jle
sub
and
lds
pop
sub
pop
ss
sub
and
cmp
pop
or
xor
mov
sub
fdivr
sbb
xchg
push
test
frstor
dec
and
lahf
xchg
xchg
push
stos
mov
sub
icebp
cwtl
aas
sub
lret
sub
daa
testb
pcmpeqw
dec
bound
inc
xchg
and
or
ljmp
lods
cmp
iret
sbb
dec
fsubrl
and
daa
push
in
xor
loope
mov
dec
mov
push
sub
pop
dec
mov
in
int
movsb
mov
sub
cmpsl
popa
push
pop
sub
out
push
lock
jb
movsb
adc
mov
dec
and
call
fnstsw
test
dec
push
jns
ss
or
xor
adcl
push
hlt
stos
aas
pop
mov
jmp
pop
or
jno
or
mov
and
and
lcall
aad
inc
fidivrs
into
jge
hlt
sti
push
push
and
js
xchg
loop
mov
sbb
in
dec
ficomps
mov
adc
test
inc
push
mov
es
dec
lock
popa
je
js
mov
sub
pop
inc
push
pop
inc
ljmp
jno
ja
dec
add
arpl
cmpl
lcall
mov
inc
add
cld
sub
push
out
push
int3
push
in
or
and
icebp
jl
scas
dec
ljmp
scas
cmp
inc
pop
dec
popa
pop
and
sub
pop
cli
dec
sarl
out
lods
pop
mov
fdivrp
push
mov
dec
inc
ja
loopne
call
out
stos
sbb
sarb
mov
pop
fidivrs
out
sub
adc
sti
loopne
fs
jns
movsl
mov
and
add
mov
xor
jg
mov
ljmp
add
pop
mov
sub
test
adc
sub
shrl
adc
pop
repz
aam
sbb
addr16
dec
sub
cmc
inc
add
xchg
ret
jmp
cmpsb
mov
and
movb
out
or
push
sub
push
adc
test
iret
inc
inc
hlt
pop
sub
loopne
subl
xor
push
jne
pop
out
xchg
testl
sub
push
sub
sbb
inc
mulb
imul
lods
jae
das
mov
les
jbe
aad
ret
pop
sbb
test
addl
mov
mov
ret
cld
push
sarb
ljmp
das
in
cwtl
sub
lret
mov
sub
add
push
push
pop
jp
cmp
mov
jg
inc
lock
lds
sub
jb
call
sub
icebp
fildl
fmulp
mov
pop
adc
sub
imul
sub
xchg
fwait
jmp
sub
cmpsb
fiaddl
in
popf
sub
pop
dec
and
mov
hlt
mov
sub
testl
ds
mov
idivb
and
sub
mov
mov
sub
push
call
fucom
repnz
dec
xchg
adc
aad
sub
mov
in
out
cmc
xchg
jp
cmp
cmp
sub
stc
xchg
nop
enter
sub
xchg
fnsave
and
jbe
push
movsl
rcr
pushf
cmpsl
gs
mov
stos
or
push
mov
int3
mov
pop
and
adc
vcvtsi2ss
loope
mov
push
jle
push
hlt
dec
pusha
subl
pop
mov
xchg
scas
dec
xor
jnp
push
and
mov
cmp
mov
sub
cltd
xchg
adc
xor
sub
cmc
sbb
aad
xor
push
sub
lds
mov
add
push
fisubl
sub
rcrl
xchg
repnz
or
iret
adc
jecxz
outsl
jbe
sub
push
adc
xor
mov
sub
mov
and
push
sbb
leave
xchg
in
testb
xchg
xor
inc
pop
hlt
into
mov
out
dec
test
push
cltd
or
pop
cs
out
test
pusha
stc
in
mov
pop
sub
cmp
or
loope
lods
scas
mov
hlt
dec
test
dec
dec
ret
mov
mov
fsubr
into
ljmp
xorl
loopne
lds
fcmovb
push
dec
fcompl
mov
scas
repnz
in
add
lods
sub
sbb
sub
and
mov
mov
call
fcomps
mov
sub
jo
mov
fst
iret
rorb
std
sub
gs
psrld
lock
xchg
adc
fsubrl
adc
cwtl
stos
jbe
dec
test
das
jg
mov
rcr
aam
fsubr
outsl
out
push
pop
rclb
andl
mov
and
test
hlt
sub
das
fisubrs
xchg
or
mov
pop
filds
inc
out
outsl
pop
or
scas
arpl
lret
mov
mov
adc
ljmp
repnz
std
xor
dec
sub
and
cwtl
xchg
lcall
push
sbb
subb
leave
jae
sub
push
adc
add
ret
mov
push
fstpt
rolb
fdivl
jmp
mov
lods
jo
in
jne
stc
ds
jns
fwait
dec
cld
sub
rcrl
imulb
out
xchg
cs
ljmp
data16
mov
sub
or
mov
stos
in
sub
pop
sbbb
jnp
dec
lods
push
sub
gs
cwtl
imul
icebp
cmc
pop
and
int
sub
ljmp
push
and
rorb
cmp
add
pop
cld
aas
or
mov
pop
lock
dec
add
scas
arpl
repz
testl
std
call
add
rcll
stc
cmpsb
mov
push
test
scas
cmp
adc
xor
xchg
push
mov
cmp
mov
mov
test
inc
jmp
xchg
enter
xor
dec
and
pop
sub
bound
cmp
mov
cmp
inc
sub
sub
clc
dec
loop
pop
sub
orl
sub
push
push
and
lock
sub
mov
sarl
loop
aad
xchg
xor
dec
sub
push
test
shll
inc
pop
cld
ds
or
adc
pop
xchg
mov
bound
popa
movsl
cmpsl
fwait
lahf
sbb
lret
rcrl
and
sahf
fistpl
shlb
sub
dec
inc
sub
lahf
lock
mov
sbb
jb
or
icebp
sbb
jmp
mov
nop
fimull
sub
and
test
push
xchg
lret
iret
inc
cmp
lock
or
or
push
sub
inc
push
sub
adc
push
mov
ja
pop
mov
adc
lds
pop
sub
out
cmp
arpl
jmp
pop
add
int3
cwtl
sub
in
mov
daa
movsb
jg
imulb
xor
pop
dec
clc
adc
xor
js
cmp
scas
dec
inc
mov
mov
dec
jg
aam
sub
ljmp
call
sbbb
sbb
test
test
mov
push
lcall
sub
test
repnz
jmp
mov
insb
pop
sub
cli
jl
fildl
sub
mov
cmp
repz
lcall
xchg
cltd
lods
sub
adc
aaa
sub
fcmovbe
subb
lods
lds
bound
sbb
sub
xlat
jg
fwait
outsb
inc
push
pop
inc
pushf
popf
repnz
sub
movsb
fcomip
add
dec
fnstsw
pop
cmpsb
mov
cmpsb
out
add
jo
stos
mov
pop
cmp
ss
push
sub
enter
lahf
xor
push
xor
or
sub
cltd
mov
push
dec
fwait
call
inc
jmp
cmp
or
outsb
mov
mov
xor
mov
das
fisubrl
ret
into
mov
inc
push
add
mov
mov
in
adc
test
out
pop
testl
int
jp
loop
push
cmpsl
sub
push
in
mov
sub
sub
fldt
or
mov
cmpsl
jmp
sub
push
test
jnp
dec
jg
movsb
sbb
insb
pop
ljmp
rcrb
test
gs
adc
in
test
xchg
dec
cmp
xor
stos
sbb
stos
stos
lods
cwtl
fwait
sub
jg
das
in
jecxz
add
push
pop
lods
pop
cmpsb
je
and
mov
inc
jge
iret
pushf
subl
mov
lods
hlt
lahf
sub
push
cltd
adc
xchg
xor
inc
pop
pop
decb
fisubrs
lods
outsl
pushf
sub
push
es
or
rol
rorl
xor
pop
push
sub
outsb
jo
movsb
dec
lcall
int
sbb
xchg
pop
adc
fidivs
shrb
pushf
test
sub
mov
or
xchg
push
cmpsb
push
xchg
mov
pop
pop
fdivl
lret
adc
sub
in
popa
bound
out
shr
stos
sahf
lods
mov
cs
shlb
std
pop
sbbl
ja
jae
sub
inc
enter
adcl
pusha
js
sbbb
aad
popf
push
out
test
cld
lock
jns
pop
add
and
mov
data16
test
bound
andl
mov
mov
testb
dec
inc
dec
scas
sub
loope
test
cmpsb
insl
sub
stos
fcomi
lea
data16
shlb
nop
lock
or
jmp
inc
dec
fs
popa
xchg
arpl
jl
cmp
jg
fstpt
mov
mov
pop
jecxz
sub
rorl
or
pop
mov
inc
sub
push
ljmp
pop
xor
mov
xlat
mov
push
inc
dec
test
jo,pt
loop
test
mov
adcb
insb
sub
call
xor
add
aas
sti
inc
xor
mov
xor
xchg
jle
pusha
sti
sarl
mov
and
push
cmpsb
cltd
xchg
test
xchg
mov
or
sub
add
pop
mov
mov
inc
pop
sahf
int3
lock
test
lds
imul
ljmp
mov
mov
sub
pusha
and
cmpsl
ret
pushf
mov
cld
aam
cmp
stos
jmp
mov
sub
xor
sub
jae
adc
sti
dec
mov
jbe
pop
dec
data16
sahf
adc
sub
or
arpl
and
mov
mov
jno
xchg
sub
cmp
in
fadd
fildll
mov
sub
clc
aaa
sub
lods
mov
movsl
mov
pop
rcrl
sub
mov
mov
xchg
inc
mov
pop
mov
jmp
sub
in
jo
pushf
or
cs
sub
mov
test
xchg
sub
inc
test
sub
sub
mov
adc
sbb
icebp
xchg
or
sub
jmp
inc
inc
mov
mov
fucomip
loopne
sbb
cltd
sub
mov
push
les
sub
jg
lret
pop
incl
into
aaa
push
add
jbe
fimull
sbb
fwait
ret
insb
pop
test
popa
repnz
sub
movsb
adc
mov
dec
adc
arpl
dec
imul
sbb
push
test
xchg
fbstp
push
out
cmc
and
into
lock
fs
sub
lret
xor
fwait
sbb
or
inc
pusha
jnp
xor
ds
mov
sbb
or
and
or
xchg
pusha
test
dec
clc
insb
inc
ss
stc
xor
ljmp
add
arpl
mov
inc
mov
jnp
adc
add
xchg
mov
sbb
sti
dec
shlb
les
sub
mov
stos
pop
add
xor
sbb
cmpsl
push
adc
sub
push
jp
into
lods
js
sub
adcb
push
in
pop
ljmp
int3
fcom
jnp
mov
mov
adc
adc
or
xor
and
push
and
xchg
stos
and
mov
cmp
sti
pop
ja
pop
xchg
sub
je
stos
movsl
pop
arpl
sub
ss
bound
mov
pop
cmp
sbb
ljmp
repnz
and
fisubrs
sar
outsl
loopne
inc
inc
loop
push
pop
or
sub
rcrl
mov
out
xor
push
xor
stc
cmp
outsl
jno
xchg
cs
sub
adc
sbb
pop
int
push
jno
mov
dec
xchg
sbb
rcll
mov
pushf
subb
cmp
fwait
xchg
jl
adc
jmp
or
lods
movhps
jne
jmp
add
sub
rorl
sahf
xchg
mov
std
push
ret
mov
call
sub
shr
mov
push
sub
aam
hlt
pavgw
popf
jns
push
xor
and
jno
mov
sub
dec
or
sahf
and
mov
xchg
aas
pop
sub
sub
xchg
jne
scas
dec
sub
xchg
sub
sub
scas
aam
imul
push
int
sbb
add
pop
jmp
loop
xlat
push
push
jl
add
jecxz
ss
sub
dec
not
lcall
mov
int
sub
sbb
pop
push
rcrb
pop
test
mov
in
sub
call
mov
cmovle
xchg
push
in
pushf
sub
inc
loop
mov
xorl
or
sbb
sub
dec
mov
adc
mov
cwtl
sub
cmpb
cmp
mov
sub
hlt
outsb
rolb
ds
pop
test
aad
sub
out
cmp
lret
and
hlt
das
inc
xor
arpl
nop
les
xor
inc
jne
pop
dec
mov
jp
mov
and
mov
push
adc
lds
pop
jb
add
push
fldcw
stos
icebp
sub
inc
mov
sbb
cmpsl
dec
pushf
js
and
sbb
cmp
jmp
sbb
xor
dec
sub
push
cmpsb
pop
sbb
pop
add
mov
ret
nop
jbe
inc
mov
adc
mov
sub
push
out
arpl
roll
mov
addl
push
mov
daa
jmp
add
xchg
or
cltd
dec
sub
lods
lret
stc
pop
jp
xor
fdivrl
or
push
inc
sub
cmp
xchg
jp
shlb
sub
inc
ljmp
sub
pop
fildll
sbb
sub
or
pop
int3
xchg
xchg
and
dec
inc
loop
sub
lcall
adc
cli
jle
adc
push
insb
pop
sub
inc
sbb
orb
mov
mov
sub
in
or
mov
cmp
fs
sub
in
cltd
or
sub
aaa
inc
add
pop
cmp
adc
xchg
bound
sub
add
jmp
fisubrl
inc
jnp
fwait
pop
jmp
mov
int3
iret
test
inc
mov
adc
mov
jecxz
popf
sub
dec
scas
and
dec
xchg
aaa
leave
dec
xchg
das
lods
dec
and
into
push
sbbl
mov
aad
xchg
cmp
hlt
ret
sub
outsl
and
mov
fnstsw
mov
cmp
cli
sub
aad
outsb
loop
stos
xor
das
or
push
sbb
inc
test
aas
cli
hlt
out
clc
mov
cmp
sub
xchg
lcall
subl
dec
fsubrl
jle
movsl
adc
jae
in
mov
mov
mov
xchg
mov
sub
inc
cltd
adc
pop
inc
into
mov
popa
stos
and
sub
sbb
jbe
leave
xchg
lahf
rcr
stc
xor
cmp
das
xor
sub
dec
sti
xchg
mov
cmpsb
cmp
adc
pop
mov
imul
dec
in
add
xor
nop
and
ds
and
fs
les
dec
or
cmpsb
fsubrl
cmp
shl
add
test
jb
xor
push
inc
sbb
stc
and
inc
ja
outsl
mov
sbb
dec
ret
sub
shrl
sti
sarb
dec
sub
pop
out
pop
pop
jns
xor
in
jge
daa
sub
sbb
inc
or
leave
push
jns
xchg
add
pop
fisttpl
jae
sti
aad
sub
push
cmc
or
icebp
iret
sub
hlt
inc
shrb
popa
or
inc
xor
call
mov
cld
push
movsl
pusha
mov
into
out
cs
push
std
sub
xchg
lock
xchg
inc
mov
stos
mov
out
sub
or
cmpsb
subb
mov
test
sub
fsubr
loopne
enter
or
push
mov
and
adc
fbstp
rcrb
adc
std
add
mov
popa
xchg
sub
aas
orb
lret
dec
sub
scas
outsl
dec
lds
sbb
sub
loopne
jge
pusha
sub
or
aaa
add
push
sub
jmp
aad
ljmp
test
outsb
scas
fwait
or
jg
jnp,pt
pusha
dec
sub
sti
xor
jmp
sub
repz
inc
lea
pop
shlb
enter
push
sub
sub
or
test
push
fwait
stos
sub
push
stc
sub
mov
incl
or
negl
ljmp
out
pop
lret
cmpsb
push
sbb
test
mov
test
mov
sub
lods
mov
sub
sub
cmpsb
and
mov
pop
xchg
push
mov
lret
fwait
cmp
in
mov
sub
push
mov
mov
sub
and
ljmp
xchg
loop
jb
mov
ja
icebp
aam
lock
idiv
mov
xchg
test
sub
push
xchg
xchg
pushf
jnp
cmp
out
sub
in
mov
call
pop
inc
lock
adc
std
xchg
cmpb
sbb
cmp
cld
cmp
xchg
pop
movl
mov
sub
popf
in
pop
mov
sub
sub
lods
or
xor
leave
inc
rcll
lock
mov
divl
jo
cmp
stc
mov
and
xchg
scas
cmp
test
ljmp
sbb
test
xor
pop
push
int3
mov
pop
clc
xchg
dec
dec
xchg
inc
add
cli
sub
fnstsw
jle
arpl
dec
inc
push
sub
fcomip
jge
jg
hlt
xor
das
sub
dec
inc
outsb
int3
push
fsub
sub
add
sbb
add
vcvtsd2si
sub
rorb
cltd
adcb
add
pop
movsl
ss
jg
insl
jge
mov
add
fidivrl
dec
push
fwait
dec
sub
or
sub
dec
jno
mov
cmc
mov
sub
pop
adc
dec
and
add
sub
test
pop
xchg
lahf
dec
in
js
sub
jg
aad
jle
inc
push
and
xor
xor
and
push
pop
jo
ret
mov
add
test
or
pusha
loop
sahf
idivl
adc
fisubrs
mov
pop
gs
mov
mov
jle
dec
push
aam
or
les
andb
test
dec
fs
dec
add
mov
popf
mov
insb
mov
bound
fldcw
adc
cltd
push
adc
aas
and
in
push
mov
sub
std
stos
mov
popa
in
jnp
cmp
cmpsl
xchg
aaa
xchg
pop
mov
in
stos
push
dec
pop
jp
outsb
sub
jge
pushl
cli
mov
test
mov
adc
sbb
jbe
mov
adc
xchg
xchg
or
imul
test
add
mov
je
mov
ljmp
adc
outsb
insl
cmp
test
xor
inc
loop
xchg
push
sub
loope
pusha
mov
cmpsb
insb
inc
cmp
es
push
mov
orl
and
jle
pop
pop
test
mov
push
jno
dec
adc
xchg
sub
lods
in
int
aas
sub
shr
lcall
inc
shll
sub
push
or
andl
movsb
jmp
sub
imulb
sub
inc
cld
jp
xchg
nop
rol
mov
pop
inc
mov
fscale
pop
bound
inc
push
lods
ja
mov
mov
and
out
out
sub
pop
pop
mov
out
sub
wrmsr
addr16
sub
or
arpl
and
mov
cmpb
sub
jle
sub
sub
out
int
and
sub
mov
jne
sub
adc
sbb
scas
sub
loopne
test
sub
repz
loop
sub
out
xor
dec
test
or
add
sub
bound
std
js
sub
xor
push
push
push
jne
sub
gs
movsb
jecxz
push
fiaddl
inc
scas
push
mov
cmpl
test
jmp
sub
scas
pusha
cmpsb
push
dec
mov
imull
sub
jge
loop
cwtl
sub
sbbl
imul
sub
outsb
xlat
std
xchg
or
jnp,pn
sti
dec
add
daa
fiadds
sub
xchg
mov
mov
rorl
outsb
popa
xor
imul
xor
sub
cli
or
ss
incb
lret
int
sub
push
pop
int
jmp
fistpll
ds
sub
cld
lods
push
sub
icebp
adc
ljmp
adcb
dec
daa
cmp
xor
inc
jae
dec
xchg
sub
popf
mov
add
mov
shl
repnz
loop
push
dec
jg
mov
inc
sub
sub
jbe
sahf
ljmp
dec
dec
xor
dec
pop
sbb
loop
or
testb
cwtl
xor
push
cmpsb
cmovne
andl
xchg
inc
mov
clc
mov
sub
lods
bound
jp
in
sub
stc
call
sbb
add
aaa
jmp
lds
repnz
lods
popf
pushf
mov
jp
rorb
ja
out
and
inc
xchg
xor
pop
loope
sahf
cmp
pop
je
cmp
cmpsl
sbb
out
das
gs
leave
aam
xlat
dec
jnp
or
and
loopne
xchg
mov
push
out
dec
add
cwtl
out
jae
rorb
in
cltd
fmulp
and
arpl
inc
adc
aad
xchg
mov
out
xchg
push
add
imul
fwait
jg
jb
pop
add
or
inc
inc
arpl
movsb
loopne
sahf
dec
loop
dec
adc
sub
dec
mov
lods
sub
imul
mov
inc
leave
mov
call
dec
hlt
and
cmpsl
in
pop
lahf
aaa
jmp
fcomps
ljmp
inc
xor
pusha
out
cld
add
call
mov
dec
imul
or
aad
add
mov
les
sub
ds
outsb
mov
inc
repz
dec
cli
sub
adc
insb
sub
popa
mov
loop
adcl
push
sbb
push
mov
mov
adc
rol
dec
in
leave
mov
sub
cmpsl
cmpsl
mov
mov
cs
sub
hlt
inc
dec
ljmp
in
pop
dec
mov
sub
scas
add
xlat
lret
sub
aad
in
sahf
xor
or
rcrl
stos
lret
imul
push
out
mov
jmp
aas
cmp
int3
pop
mull
sub
rclb
rol
lds
sub
mov
xchg
sub
test
aam
xchg
cwtl
lods
push
sub
pop
cmc
subl
cmp
mov
aam
fsubl
xchg
cltd
rorl
push
js
out
test
xor
pushf
ret
pop
stos
mov
mov
lahf
push
hlt
mov
sbb
aas
xor
xlat
sub
lcall
in
sbb
lock
sub
xchg
jge
cmp
sub
mov
pop
jns
dec
ja
mov
or
mov
add
jae
popa
lret
ljmp
sar
xor
cs
test
sub
mov
adc
or
mov
sub
popf
lea
pop
shrl
jbe
push
sub
stc
imul
xor
popa
push
pop
mov
jb
sub
inc
inc
or
and
add
jnp
inc
mov
sub
inc
loope
scas
testb
adc
cmpsb
das
aad
sub
pop
jge
imull
addr16
dec
add
ds
cmp
int3
fisubrl
add
cltd
mov
fdivl
lret
sbb
xchg
or
gs
pop
pop
ja
sub
sbb
xorl
push
sub
test
mov
mov
sub
dec
sub
sub
pop
adcl
test
xchg
cmp
sbb
aas
xlat
inc
out
push
mov
xor
jg
addr16
pop
or
mov
loope
stos
xor
add
or
cmp
shrl
test
std
push
or
xor
leave
mov
cmp
dec
shrb
pop
sub
or
cmpb
and
aad
mov
jb
inc
jle
loopne
lock
test
sub
pop
test
icebp
push
js
lret
hlt
sub
dec
push
cmp
and
movl
mov
scas
sub
in
or
lea
movsl
pop
mov
mov
sti
mov
lock
pop
sub
adc
gs
xchg
sub
repnz
mov
xor
sub
xor
movsb
daa
mov
scas
pop
xchg
jge
adc
ds
clc
inc
sub
jp
stos
push
mov
lea
push
je
aaa
out
ljmp
out
ficomps
test
lret
jo
or
int3
push
inc
or
jp
xlat
push
sbb
into
sbb
test
mov
and
sbb
push
insl
sub
xchg
out
dec
in
dec
mov
mov
sub
loop
mov
cmp
enter
cltd
sti
xor
push
sub
add
lea
bound
fdivs
pop
ja
rcl
rcrl
fimuls
inc
sub
cmpsl
xor
je
adc
jb
test
pusha
in
popf
inc
and
pop
pop
es
leave
arpl
pushf
xchg
mov
ss
sub
into
or
mov
in
xchg
cmpsb
xor
fwait
test
dec
ret
pop
jne
test
pop
sub
pusha
sbbb
nop
xor
repz
je
sub
jns
cwtl
or
subl
add
dec
sbb
test
ffree
icebp
aam
mov
cmpsb
cmp
cli
jle
pop
mov
popf
leave
insb
popa
push
cmp
adc
sbb
sub
clc
out
ljmp
cmp
aad
jb
adc
mov
dec
sub
adc
pop
cwtl
sub
push
mov
sub
stos
mov
cwtl
lcall
inc
or
or
test
and
sbb
es
ljmp
lock
mov
stos
add
imul
sbb
das
pop
int
push
and
fildll
repz
je
jb
pop
xor
push
and
push
or
sbb
xor
insl
imul
cmp
aas
hlt
fisubrl
cmp
xchg
jl
jge
inc
xor
push
xor
scas
sub
or
mov
arpl
sub
es
adc
shrl
mov
sub
das
int
add
stos
adc
and
dec
mov
xor
or
ds
lcall
pop
sbb
sub
rcr
push
pop
jae
and
cs
sub
sub
popa
aad
das
mov
push
out
inc
je
xor
and
sub
or
inc
jne
jg
xchg
popa
sub
mov
pop
mov
outsl
sbbb
insb
xchg
fdivr
sub
jge
test
inc
or
sub
int
movsb
outsb
mov
frstor
stos
push
mov
mov
jns
je
xor
and
and
mov
and
mov
test
mov
push
in
push
cmp
mov
rcrl
test
dec
sub
lods
mov
repz
aam
push
sub
dec
ret
xor
popa
mov
js
sub
mov
cmp
scas
rolb
cmpsl
jg
sbbb
notb
push
jecxz
aad
mov
shll
inc
xor
lods
mov
mov
push
pop
sub
jge
sub
lds
push
cmp
sub
xor
test
dec
arpl
jl
or
addr16
std
sbb
dec
test
xchg
push
sub
sbb
sti
jno
int3
mov
test
push
lods
xor
jnp
and
push
sub
outsb
mov
mov
ret
or
jnp
adc
cmp
sbb
xor
cmpsb
inc
jp
dec
cmpsl
insl
pop
mov
mov
in
mov
sub
lock
pminsw
lds
mov
jb
xor
shl
aas
adc
sub
pushf
mov
dec
cmp
jno
imul
jmp
sub
pop
movl
in
xchg
mov
mov
adc
shll
jbe
shrb
jb
fstps
sbb
pop
arpl
xlat
push
test
scas
sbb
inc
cmp
push
sub
jmp
fsub
add
cmp
fildll
xor
mov
fisttpll
pop
cmp
inc
mov
gs
jmp
popa
xchg
pop
cmp
add
mov
dec
int3
pushf
pop
cmc
je
test
out
inc
insb
orl
addb
sbb
dec
sub
jle
push
lret
ljmp
sbb
out
scas
xor
dec
es
mov
pop
in
mov
cmp
adc
jns
shrb
adc
cmp
push
pop
lcall
aad
jns
xorb
mov
add
sub
lret
fisubl
loop
sub
sub
pop
dec
cmp
repnz
aam
iret
lret
movsb
inc
xor
dec
inc
jne
adc
cmp
cmp
popf
mov
imul
push
and
shll
dec
push
fisttpll
dec
xchg
sub
xor
and
xor
mov
jmp
test
adc
pusha
loope
dec
fincstp
mov
nop
call
mov
out
sbb
or
test
mov
int3
mov
sub
out
or
mov
sub
dec
jo
mov
inc
jge
test
fwait
mov
sub
movsl
mov
xor
std
dec
mov
pushf
jo
fsubl
out
sub
and
pushf
mov
mov
jne
aad
popf
pop
sub
loopne
data16
mov
pop
test
mov
dec
lahf
lret
add
stos
out
jnp
jo
sbb
and
inc
mov
mov
test
data16
add
adc
inc
jmp
xchg
fstpl
in
adc
aam
imul
ljmp
cld
dec
sub
test
pop
cltd
mov
mov
jg
mov
pop
xor
hlt
or
std
add
in
ljmp
inc
jle
mov
sub
push
rsm
outsl
test
sub
outsb
xor
xor
mov
js
into
xor
inc
test
mov
sbb
cwtl
add
sub
rcrl
sub
mov
sbb
sub
idiv
lods
jae
shrb
push
mov
fimuls
jnp
sub
jl
lcall
jmp
xchg
mov
cmp
mov
and
xor
scas
in
pop
imul
sub
std
mov
jmp
adc
shrl
shrb
test
mov
data16
sbbb
lods
in
pop
inc
add
cld
and
pop
mov
int
dec
and
and
adc
sub
mov
xchg
fwait
inc
mov
ljmp
jnp
repnz
xchg
fisttps
fs
jl
lahf
sub
xor
aam
add
mov
add
cld
add
sub
sub
mov
ljmp
fsubrs
mov
scas
sub
jg
getsec
adc
dec
scas
sub
and
jmp
sub
xchg
and
call
cmp
pop
sbb
adc
adc
dec
xor
jns
push
add
dec
mov
pop
sub
mov
out
roll
pusha
add
and
xchg
dec
xlat
mov
and
sti
sub
roll
xor
fwait
jno
int
daa
add
jecxz
outsb
js
inc
or
sub
ret
sub
mov
sub
lret
test
cmp
jb
mov
scas
sub
je
cwtl
sub
ret
fcomip
sahf
inc
sbb
mov
push
sbb
icebp
int
in
or
mov
cmp
aas
mov
pop
jae
cmp
cmp
xchg
popf
cmp
mov
cld
repnz
jo
aaa
in
cmp
push
pop
pop
mov
popa
stc
aam
test
dec
lret
cmp
in
sbb
inc
arpl
mov
fldl
sbb
ljmp
daa
dec
or
inc
jmp
in
add
shrb
mov
sub
lods
and
hlt
jp
sbb
pushf
stc
andl
adc
test
pop
repnz
sub
test
mov
fwait
or
xchg
int3
mov
sub
inc
cmc
pop
sub
loope
adc
xchg
rorb
sbb
out
repz
pop
sub
pop
pusha
and
shl
pop
fldt
psrad
cmp
pusha
or
sub
mov
sub
add
add
cwtl
addl
fistpll
sub
lcall
test
or
movsb
repnz
sarb
iret
out
cmp
dec
jbe
ficoms
push
lea
fistps
sahf
xchg
arpl
and
leave
jno
sti
ljmp
jge
jb
sub
into
fwait
in
lahf
adc
inc
fidivl
add
push
sbb
pop
mov
mov
negl
sbb
aad
in
sub
sub
push
mov
xor
int
ljmp
inc
xor
sub
aaa
jb
mov
test
popl
sbb
rcrl
movsl
xor
enter
sbb
jge
sub
in
je
pusha
inc
mov
cmpb
mov
pop
nop
sub
push
dec
ljmp
jo
jle
dec
sub
iret
pop
cmp
imull
lock
cmp
rclb
sub
in
imul
adc
or
test
imul
out
sub
cwtl
sbb
sub
jp
lret
test
jae
daa
les
xchg
insl
add
jmp
cmp
in
add
aas
sub
cmp
xchg
or
fdivrl
dec
cmp
fidivrs
cmp
inc
inc
dec
sub
call
push
js
or
push
cmp
sahf
lcall
push
inc
orb
lcall
mov
test
int
aad
inc
add
sub
rorb
sbb
jae
mov
or
aad
das
movl
in
std
inc
pop
dec
pop
jmp
nop
cmpsw
lods
push
xor
xchg
fs
mov
shlb
test
clc
cmp
jmp
add
cmp
inc
aam
hlt
sub
add
out
pop
cltd
fistl
sub
lret
sbbb
pop
sub
shl
sub
cmpsl
jmp
xor
and
pushf
xlat
mov
arpl
cpuid
in
push
fadds
or
fs
xchg
sub
out
std
and
fildll
mov
aam
js
dec
xor
sub
adc
jne
jge
pop
pop
lret
cmp
hlt
cmpsb
jl
out
cmp
push
and
add
scas
dec
pop
and
lea
jae
pop
dec
repz
dec
cmpsb
out
mov
inc
mov
out
pop
addr16
or
enter
sub
pop
pop
mov
xchg
ss
cmp
push
mov
xor
sub
sub
repz
loop
sub
mov
addr16
push
sub
cmpsb
mov
inc
mov
sti
sub
push
mov
cmpsb
in
mov
add
push
sarl
outsb
mov
mov
xor
xlat
or
or
xchg
xchg
lret
jbe
ljmp
lret
fldt
leave
sub
xor
pop
sub
in
pop
mov
sarb
lea
mov
lock
xchg
cmp
iret
das
pop
jb
xor
fs
xor
movsb
icebp
sub
mov
mov
xchg
ds
dec
cld
or
sub
inc
mov
sub
pop
sub
jno
add
into
or
in
inc
sub
pop
je
rclb
cmp
mov
sub
pop
data16
add
mov
sub
arpl
mov
xor
sub
rclb
xchg
daa
sub
jbe
sbbb
or
cmp
add
daa
pop
pop
lods
dec
and
jp
xor
stc
test
mov
outsb
fcoms
aaa
mov
loop
nop
out
mov
pushf
sub
fstl
sub
inc
inc
xchg
sub
pushl
sub
loope
and
sub
dec
xchg
push
je
sub
pop
test
jecxz
pop
xchg
cmp
sub
dec
nop
cmp
push
or
test
enter
jge
pop
out
mov
dec
shlb
cmp
add
lcall
xor
add
fiaddl
xchg
sbb
nop
ret
pop
sub
pop
std
iret
sub
add
dec
pusha
out
jmp
inc
aad
mov
and
popf
test
stos
xlat
imul
aas
sub
xchg
test
xchg
and
test
je
lahf
push
jge
xor
mov
push
ret
adc
cs
xor
sub
inc
xor
pop
cmc
nop
sub
inc
xor
sub
xchg
mov
mov
pop
mov
enter
popa
sub
jp
sub
stos
loopne
or
cli
xchg
mov
add
xor
inc
cmp
lds
movsl
pushf
sub
stos
in
imul
adc
pop
in
xor
ret
lods
fdivrl
sub
sub
xchg
xchg
inc
stos
xchg
jecxz
sub
add
sub
push
xchg
shll
inc
gs
daa
xor
adc
mov
in
mov
xchg
insl
push
fidivs
jp
cmpsb
adc
lret
out
dec
imul
sbb
shrb
in
pop
fists
sub
je
mov
cmovp
sub
push
insl
push
out
lcall
jno
mov
jae
push
fwait
xchg
xor
push
addr16
jp
dec
rcr
movsb
lods
out
outsl
jle
mov
push
pop
sub
loope
sbb
push
loop
in
sub
les
scas
mov
test
sub
dec
test
lret
or
or
cmp
dec
pop
pop
pop
xchg
rcrb
shlb
mov
push
inc
pop
iret
test
movl
in
jmp
sub
fisubrl
sub
arpl
aad
jmp
dec
sahf
inc
sub
push
cs
sub
cmpsl
pop
or
arpl
inc
sub
mov
cmpsb
mov
sahf
popa
mov
lock
pop
les
ljmp
inc
int
sub
roll
lods
pop
and
jecxz
insl
sub
jnp
lcall
adc
inc
scas
add
sbb
test
in
jo
andb
rcl
jne
xor
fwait
pop
jmp
add
add
sub
sub
sub
jbe
dec
sub
int
push
filds
sub
js
push
jecxz
sub
nop
inc
adc
push
sub
enter
andl
cwtl
out
and
xchg
pop
dec
gs
xchg
sub
and
andl
addr16
outsb
sub
jle
repz
dec
xchg
scas
sub
adc
or
popf
mov
loopne
xor
push
xor
pop
xchg
outsb
mov
and
ds
sub
push
shrl
xchg
arpl
dec
xor
ljmp
push
pop
stc
adc
movsl
mov
out
sub
and
mov
shll
out
fwait
push
mov
icebp
dec
jge
sub
arpl
mov
int
mov
and
dec
iret
sub
inc
in
add
pop
in
lea
sub
or
adc
push
les
mov
mov
or
adc
push
adc
mulb
lds
pop
push
sbb
mov
movsl
es
xchg
sub
fs
xor
push
fpatan
test
scas
ret
xchg
push
add
sub
clc
dec
das
int3
lods
jp
sar
dec
cmpsl
test
cmp
scas
xchg
stc
add
out
sub
add
pop
sub
std
xchg
pushf
or
fs
out
sub
mov
xchg
int3
push
notb
roll
bound
and
xor
lods
jle
sub
pop
dec
mov
inc
aaa
out
or
das
ljmp
mov
dec
lds
push
push
test
mov
inc
std
push
shrl
mov
rol
sub
cltd
in
fisttpl
add
mov
mov
subb
sub
fadds
add
sahf
jmp
scas
fwait
push
in
pop
int
sub
repnz
adc
iret
je
sub
adc
dec
sbb
and
movsl
bound
sbb
mov
lcall
out
ss
bound
sub
pop
pushf
lahf
cltd
lods
pop
xor
push
in
push
insl
outsb
cmpsb
ret
pop
push
mov
pusha
test
sub
call
mov
outsb
jmp
dec
sub
mov
xor
lods
jg
ljmp
pop
and
adc
stos
mov
mov
sub
aam
push
mov
pop
xor
pop
stos
ja
cmc
movsb
rcll
pop
pop
push
scas
lods
sub
sub
pop
mov
add
pop
xcrypt-cfb
cmpsl
loop
adc
push
jne
cmp
pop
sti
movsl
mov
nop
stos
enter
jo
imul
lcall
fnop
jne
sub
push
sbb
adc
xor
test
mov
sbb
pop
sub
into
imul
add
hlt
test
push
add
rol
je
sub
pop
sub
sub
jb
pushf
insl
dec
sub
cwtl
xor
jecxz
js
scas
sub
xchg
xchg
popf
xor
pop
sub
pop
cmc
call
test
cmp
mov
push
sub
lock
add
cmc
sbb
loope
push
sbb
test
jmp
lahf
mov
int3
inc
out
sbb
mov
sbb
cwtl
pop
int
xor
lcall
sbbb
push
cmpsb
sarb
mov
jne
or
arpl
pop
add
push
outsb
shll
xor
jmp
and
lods
or
xchg
xchg
jne
inc
mull
sub
cltd
cld
sub
mov
fs
jnp
mov
inc
cs
and
sub
ja
mov
ljmp
and
mov
sbb
popa
pop
or
iret
dec
loopne
imul
xor
and
mov
sub
cmp
sub
add
mov
out
xor
xor
xorb
scas
data16
cmp
inc
sub
push
xor
aam
mov
inc
ljmp
and
jmp
cmpsb
outsl
imul
fldl
xor
call
aam
cmc
pop
xor
loop
push
jmp
sub
adc
jb
enter
and
and
dec
add
fnsave
xlat
cltd
dec
sahf
or
test
mov
jo
xchg
sub
scas
push
xlat
sbb
fistl
dec
nop
jae
mov
jno
sub
aam
mov
in
sub
jge
mov
repz
js
ds
push
fisttpll
shrb
mov
pusha
sub
push
xchg
out
lret
inc
or
mov
mov
test
or
gs
dec
add
mov
sbb
xor
data16
jb
loop
pop
push
jecxz
in
icebp
sub
daa
out
mov
cld
insb
adc
rorl
int
sub
xchg
cs
add
scas
cwtl
add
or
into
in
shlb
pop
out
dec
push
lods
mov
mov
sub
mov
adc
sub
pop
mov
bound
fadds
inc
je
mov
ficoms
inc
cwtl
mov
cmp
or
dec
scas
fsubrs
stos
jbe
sub
clc
imul
mov
mov
xor
stc
mov
cmpsl
cltd
pop
xchg
pushf
rcrb
inc
ljmp
mov
pop
cmp
and
mov
fisttpl
outsb
or
or
xchg
add
push
inc
lods
xor
pop
sbb
jb
loope
shl
adc
sub
es
adc
sub
mov
in
dec
sti
xor
ljmp
jbe
ficomps
sub
enter
sbb
sub
and
in
mov
push
cld
fldcw
sub
icebp
out
sbb
mov
adc
test
stc
cwtl
lds
mov
mov
loopne
push
add
popa
inc
icebp
sub
push
test
push
jge
or
push
cmc
imul
inc
leave
mov
jecxz
cmp
sub
and
push
fsubrl
pop
lahf
fstl
dec
xor
and
dec
push
dec
mov
out
rorb
push
aas
addr16
subl
push
jns
pop
push
dec
addr16
jae
call
pop
stos
popf
arpl
push
fwait
repnz
or
ljmp
js
aad
pop
stos
inc
ljmp
mov
rorb
es
pushf
mov
mov
inc
out
repnz
jns
or
mov
xor
cmpsl
cmpsb
mov
xor
jnp
daa
lcall
push
inc
std
push
adc
sbb
out
scas
pop
inc
push
push
pop
inc
ds
inc
lret
outsb
cltd
test
push
dec
jno
mov
dec
mov
pop
test
enter
add
ljmp
scas
pop
jp
test
in
cmpsb
pop
cmpsb
pop
pop
xchg
push
xor
inc
sbb
lock
dec
movsl
gs
jg
les
inc
xchg
xchg
flds
jg
sbb
ljmp
add
fwait
dec
test
ja
popa
pop
xchg
lock
sbb
out
lret
xor
jb
and
jns
push
push
push
dec
leave
sbb
dec
xchg
dec
lret
or
jle
mov
arpl
mov
clc
subl
les
xor
ror
aam
ljmp
decb
fucomi
out
push
sbb
mov
pusha
pop
mov
and
push
sub
adc
ljmp
push
in
xor
push
fiadds
mov
push
lret
pop
push
jae
repnz
pop
mov
jo
sub
lret
or
inc
pop
pop
faddl
xchg
mov
out
pop
mov
lcall
ljmp
mov
mov
dec
ljmp
jb
andl
mov
mov
push
dec
mov
add
repz
jbe
in
push
inc
iret
mov
imul
lds
pop
bound
stc
fwait
push
data16
push
scas
outsb
repnz
mov
scas
inc
test
xor
loopne
aaa
or
iret
cmp
out
push
sbb
sbb
dec
test
push
cwtl
mov
jo
pop
mov
mov
shrb
push
inc
xchg
popa
lds
push
shlb
bound
stc
xchg
xor
lahf
test
bound
sbb
pop
loope
daa
pop
mov
cli
xor
imul
inc
je
push
gs
xor
sar
inc
mov
cmc
sti
pop
pop
sbb
mov
fmul
test
loopne
insl
fistps
dec
arpl
cmpl
lcall
insw
pop
insb
sub
push
out
dec
push
push
mov
inc
clc
add
mov
pop
aam
leave
push
lock
mov
push
das
arpl
out
adc
xchg
jnp
sbb
add
mov
xchg
or
imul
adc
js
repnz
imul
pop
repnz
in
insb
cmpsb
idivl
pop
dec
push
mov
dec
push
inc
mov
jbe
bound
push
sub
and
fists
xor
pop
cmpsb
mov
sbb
push
cmp
out
mov
lock
and
lahf
adc
mov
outsl
in
repnz
jb
gs
inc
push
into
mov
pop
fimuls
repnz
ljmp
loopne
or
mov
sub
push
incl
jp
xchg
sub
jo
gs
out
arpl
vsubpd
cmp
jns
sub
mov
test
test
jge
push
in
js
pop
rolb
push
sub
jge
xchg
inc
insb
jne
push
adc
jg
sbb
pop
lock
lea
fcmove
popa
testb
cmpsb
mov
rcll
xchg
decl
in
jge
ss
imul
or
leave
cwtl
enter
jne
push
inc
testl
lret
mov
push
or
push
dec
mov
je
jp
or
mov
pop
push
mov
inc
movl
pop
inc
leave
xor
mov
pop
ficoms
sti
ds
xchg
push
cmp
mov
ds
aam
dec
inc
mov
fcmovb
sbb
inc
adc
adc
or
call
add
aaa
mov
aaa
mov
dec
mov
pop
xor
insb
mov
sbb
sub
inc
sub
sti
sbb
scas
inc
data16
inc
jl
outsl
pop
popf
in
lock
push
mov
fldl
popf
imul
cmp
sub
ror
dec
inc
cli
scas
fdivrl
pop
and
pop
repnz
pop
adc
lds
jb
adc
jbe
scas
into
pop
in
xor
push
popa
addr16
cmp
or
push
adc
push
out
lds
adc
xchg
push
dec
dec
fidivl
ljmp
mov
xorl
dec
popa
push
inc
push
fsubrs
mov
pop
and
daa
xor
pop
adc
cli
cld
loop
push
sub
gs
mov
mov
fsubr
in
lds
mov
dec
ret
ljmp
fnstcw
popa
test
adc
ret
dec
and
nop
aad
jne
and
cmpsb
or
xor
mov
testb
cmpsl
lds
jnp
cmp
dec
xchg
xor
loopne
imul
mov
imul
mov
and
and
imul
test
mov
adc
pop
jns
adc
fucom
jl
push
clc
dec
mov
clc
movsb
rolb
out
pop
add
jmp
sub
xchg
out
test
cld
in
adc
lcall
adc
arpl
pop
xchg
xchg
jne
lods
lds
fwait
leave
enter
testb
pop
test
cwtl
arpl
lds
dec
pop
xchg
sub
gs
fcomip
addr16
stos
in
xchg
push
and
push
out
cmc
inc
sti
mov
pop
fsubl
sti
and
cmpl
movsl
fldenv
adc
lds
fs
mov
pop
cwtl
pop
lds
dec
jecxz
jmp
fadds
arpl
xchg
sub
push
dec
sbb
or
fsubr
xor
mov
push
in
testb
push
iret
ljmp
cmpl
inc
cmp
cmp
pop
sub
lahf
push
out
jmp
dec
mov
movsl
push
xchg
loope
mov
addr16
pop
ds
into
gs
jmp
push
aad
sbb
daa
imul
ss
push
xor
mov
pop
stos
inc
and
push
pop
dec
fbld
pop
into
in
jns
loopne
jne
mov
xchg
push
pop
sbbl
aad
movsl
arpl
mov
push
inc
cmpsb
hlt
jnp
cmp
popa
jecxz
jmp
inc
imul
push
into
ss
mov
aad
lds
dec
shll
pop
add
xor
cmp
sbb
and
dec
or
inc
adc
jns
or
inc
pop
pusha
cmpsb
leave
jg
test
mov
lahf
addr16
mov
loopne
ror
cmp
push
dec
mov
clc
sub
inc
movsb
xor
push
jecxz
inc
and
in
pushf
loopne
loop
push
jbe
loope
inc
or
bound
cmp
pop
cmpsb
inc
xchg
mov
or
cmp
in
mov
arpl
arpl
hlt
xor
pop
pop
lock
fnstsw
ret
jg
movsl
pusha
xchg
notb
mov
lods
rorb
icebp
mov
adc
cmp
push
dec
pushf
mov
or
lahf
pop
mov
mov
test
push
pop
adc
and
xchg
aam
inc
push
mov
call
xor
ss
jns
or
push
rcrl
sub
jnp
in
sub
sub
sbbb
add
out
sbb
mov
test
ds
sub
jb
ret
daa
pusha
sub
cmp
loope
xor
or
and
adc
push
cmpsl
test
add
sub
loope
jnp
loopne
int3
sub
lea
and
sub
cltd
or
mov
sub
add
inc
sub
mov
jl
or
adc
pop
out
mov
cmpsb
in
rolb
sub
aad
das
inc
ljmp
xor
sub
clc
and
fisubrs
jae
fdivrs
out
jnp
arpl
sub
sub
add
sub
into
stos
cs
sub
cmpsb
jbe
xchg
ljmp
mov
xchg
xor
sbb
and
shlb
icebp
cli
xor
loop
mov
adc
test
xchg
es
leave
pop
call
inc
and
mov
test
sub
push
cmp
mov
sub
pop
lret
push
adc
fs
pop
adc
dec
xor
sbb
stos
leave
xchg
cmp
gs
inc
lcall
stos
mov
add
mov
cli
and
xchg
enter
adc
sub
inc
xor
subl
push
scas
dec
cmpsb
clc
stc
fstpl
jae
int3
cmpb
or
fimuls
inc
jmp
add
mov
xor
pop
cli
loop
ficomps
das
scas
stc
test
insb
mov
in
cmp
push
sbb
arpl
xchg
mov
rorb
mov
push
fimull
or
frstor
sarb
call
jle
mov
mov
dec
sub
xchg
mov
add
pusha
xchg
cmp
sub
iret
movsb
jo
imulb
jae
lahf
jmp
cmpsl
mov
dec
fcompl
bound
and
xchg
rorl
mov
dec
jno
popa
pop
mov
test
gs
sbb
je
or
fucomi
dec
sub
mov
add
push
adc
push
xor
dec
cmpl
inc
inc
xchg
test
into
rcrb
push
ljmp
push
xor
xor
xchg
stos
pop
sbb
test
pop
sub
push
inc
mov
sbb
aaa
sub
xchg
les
test
sub
mov
mov
or
pop
mov
gs
push
mov
inc
leave
mov
dec
sub
fsts
sahf
xchg
cwtl
sub
int3
stos
push
testb
sub
lods
mull
sub
and
inc
sub
mov
rcr
push
mov
cltd
ljmp
adc
sub
mov
test
arpl
loop
aas
add
ret
bound
cmpsb
inc
pop
push
cmpb
pop
incb
sub
int3
push
push
fwait
push
or
sub
xlat
lds
mov
pop
in
jecxz
xchg
shlb
or
mov
daa
out
es
int3
xor
sub
imull
orl
or
mov
mov
dec
mov
add
arpl
test
aad
imul
out
jmp
js
mov
fcomip
jb
push
cmp
push
xchg
xchg
movsl
xchg
xchg
test
mov
xor
add
fisubrs
push
mov
or
icebp
in
sbb
outsb
loope
mov
sub
mov
xor
sub
mov
or
fidivs
mov
jo,pn
jle
push
cmp
mov
dec
movsl
lods
mov
and
int3
sub
cmc
xlat
fisttpll
jmp
repz
in
mov
sub
push
xchg
jb
shrb
jno
dec
add
pop
inc
testb
add
sub
incl
rcrl
dec
sub
popf
movsb
push
xor
and
out
in
add
pop
ja
cmp
xchg
sub
lock
pop
sub
push
adc
out
push
insl
sub
imul
xor
sub
mov
mov
sbb
test
subl
or
inc
cmp
xor
pusha
fistpl
nop
jbe
cmp
cmpsb
pop
leave
test
mov
ficomps
int3
or
rcrb
lods
jge
or
sub
mov
sub
push
xlat
sub
mov
test
daa
lcall
sub
sub
xchg
pop
add
xchg
repnz
mov
cmp
xorl
and
inc
hlt
sahf
mov
mov
test
int
dec
jge
pop
arpl
pop
pminsw
sub
pop
cmpsb
xchg
stos
dec
iret
bound
addr16
dec
ud2
sub
es
aaa
subb
push
out
adc
sub
cmpsb
enter
pop
scas
mov
sbb
out
mov
mov
pop
sub
mov
xor
popf
push
movsl
xchg
test
idivb
jmp
and
or
sti
sub
aad
cmp
sub
mov
outsb
stc
sub
sub
arpl
mov
test
flds
mull
iret
xor
mulb
lret
push
sub
pusha
dec
test
sub
add
push
int3
mov
adc
sub
jns
sub
clc
cmp
es
sub
cli
inc
repnz
mov
sub
in
jl
sub
mov
and
adc
mov
xlat
jg
lahf
push
je
xor
push
test
xorb
ljmp
xchg
sub
bound
jne
add
lock
sub
ja
mov
daa
fadd
ljmp
nop
cmp
les
in
dec
enter
adc
add
push
lods
movsb
lret
xchg
sub
inc
repz
cmp
sub
dec
clc
mov
xchg
jne
jnp
sbb
mov
xor
int
push
mov
xchg
icebp
or
sub
cmp
or
test
fildll
jmp
add
mov
or
dec
rolb
inc
std
xor
sub
xlat
inc
test
xchg
rolb
xor
or
add
xchg
sbb
xor
sbb
push
xor
mov
push
mov
cmpsl
sub
fwait
push
dec
cmp
inc
push
sub
sahf
xlat
push
mov
and
dec
jne
jg
push
and
fdivr
pop
jo
cs
out
jns
push
std
sbb
xor
outsl
je
pop
and
pop
cmp
sub
dec
cmpsb
xchg
push
mov
add
add
push
test
push
enter
das
push
sub
rorb
fwait
bound
lock
incb
fstl
or
ljmp
mov
std
adc
push
sbb
xor
cmpsb
adc
push
and
out
jg
sub
xor
arpl
stos
mov
lds
and
fsubp
mov
ret
subb
es
pusha
testl
push
lret
pop
stos
sbb
test
cs
cmpsb
ljmp
inc
adc
xor
imul
xor
xor
rcrb
pop
inc
inc
loope
jbe
xor
dec
and
dec
lock
push
fmuls
dec
lret
mov
movsl
xchg
adc
dec
subb
mov
imul
push
popf
movb
imul
inc
call
push
inc
js
inc
mov
repnz
std
mov
inc
xchg
push
pop
dec
aad
hlt
mov
dec
jno
xlat
rcl
nop
push
cmp
sti
and
push
xchg
in
ljmp
fs
mov
sar
mov
lds
lcall
xchg
hlt
sti
xor
or
mov
inc
cmp
cmp
pop
cmp
in
sub
inc
push
test
dec
data16
pusha
mov
cmpsb
dec
ds
mov
lods
std
mov
lock
outsb
pop
mov
ss
push
and
mov
pop
pop
xchg
mov
out
push
lock
test
cld
cmp
inc
and
test
xor
movsb
lds
in
es
enter
addr16
lock
pmulhw
shll
gs
ljmp
or
lock
adc
repnz
out
mov
aas
push
sbb
stos
jmp
in
jae
push
movsl
sbb
pop
dec
aaa
jp
jecxz
adc
fbld
fs
inc
ret
cmpsl
lock
cld
test
xchg
addr16
fwait
sbb
mov
mov
dec
fsubl
shl
push
fdivs
mov
add
jns
lret
leave
dec
lea
leave
push
aaa
fisttpl
nop
aad
testb
xor
imul
sti
mov
push
rorb
jg
inc
lahf
pushf
adc
mov
sbb
pop
mov
cmp
into
inc
ds
fsubr
mov
cmpsl
xchg
leave
xor
adc
leave
pop
pop
push
jecxz
mov
sub
mov
out
inc
sub
mov
xchg
mov
mov
push
hlt
jmp
jp
insl
sub
sbb
jge
scas
movsl
pushw
fcmovu
push
call
or
in
mov
inc
xchg
pop
cmp
sub
ljmp
test
mov
or
ficoml
loopne
push
xor
push
cld
int
sbb
pop
pop
shrb
lods
iret
jecxz
jno
mov
iret
xor
jmp
call
add
mov
mov
lock
imul
xchg
ja
push
test
insl
imul
and
imul
enter
inc
push
xor
loopne
test
cwtl
in
fsub
stos
out
push
mov
push
es
ds
mov
cmp
add
in
inc
jno
stos
shlb
leave
cmp
or
xchg
das
mov
dec
xchg
xchg
outsl
in
or
dec
dec
sahf
and
dec
stos
lods
fisttpl
bound
jp
int
and
mov
inc
pop
push
jmp
adc
mov
inc
dec
arpl
cmpsb
orl
rcll
cmp
hlt
jge
lock
sbb
daa
cmp
sbb
aad
popa
fs
mov
cli
lock
mov
push
sub
fildll
cmpsl
rclb
es
push
xchg
xorb
ja
pop
shl
xchg
xchg
ss
iret
xlat
mov
lock
add
pop
fs
test
stc
lea
in
popf
pop
jmp
cmp
fs
imul
xor
mov
mov
mov
xor
gs
or
jb
cli
cmp
loop
add
sti
shrl
mov
in
mov
cmp
fwait
mov
inc
adc
mov
push
cmp
clc
adc
cld
dec
sarb
lods
xor
push
lret
insb
and
call
or
fstpt
int3
mov
inc
push
sub
je
cld
ds
dec
mov
jmp
xor
sub
pop
push
jbe
sbb
cmp
test
push
clc
scas
cld
shll
ja
inc
bound
cmp
xchg
mov
pop
push
pop
push
repz
imul
xchg
adc
data16
sbb
add
adc
sbbl
jl
xor
fcomip
push
push
cltd
lahf
clc
jo
pop
xor
pop
repz
or
lock
iret
roll
add
cmp
sub
adc
fs
das
bound
xor
lea
lret
rorl
xchg
xchg
mov
popa
add
xchg
ljmp
lock
in
stc
dec
mov
stos
xor
roll
push
pop
push
clc
cmp
sbb
mov
ja
xchg
push
adc
cmpsl
dec
push
inc
xchg
or
in
repz
cmp
mov
jne
add
xlat
roll
adc
mov
inc
push
loope
pop
rcll
pusha
lock
test
es
sbb
cmpsb
add
push
sahf
imul
inc
xchg
pop
xor
addr16
xor
or
cmp
pop
sahf
sub
mov
push
inc
push
inc
cmpsl
xchg
sbb
mov
pop
outsb
xor
mov
adc
pushl
arpl
push
and
jns
aas
or
or
or
ja
cld
test
fnstenv
push
push
rorl
fbld
hlt
in
push
cmpsl
sub
leave
push
cli
std
iret
stos
push
dec
inc
push
in
lea
inc
pop
sub
das
dec
out
int3
cmpsl
pop
xchg
out
sbb
cld
addr16
add
data16
cmp
clc
inc
push
outsb
loopne
inc
iret
scas
pop
push
ret
or
xor
xchg
ja
arpl
shl
xor
mov
repnz
push
cmp
sbb
adc
test
ljmp
adc
lcall
xchg
pop
jmp
jmp
inc
sub
sub
mov
xor
test
add
xchg
test
mov
mov
inc
bound
sub
pop
stos
aaa
test
mov
sbb
ja
ja
stos
fwait
test
lock
test
outsb
and
xchg
lock
cmp
mov
push
mov
stos
stos
pop
dec
push
push
sbb
out
inc
dec
jmp
inc
inc
xchg
adc
in
gs
mov
daa
jo
xor
push
notl
sub
pop
inc
sub
sbb
jl
cmc
and
adc
mov
xchg
scas
fisubs
shrl
test
pushf
xchg
add
adcb
xchg
lea
movsl
or
dec
push
xor
and
data16
jmp
pop
addl
fimuls
mov
sub
pop
addl
in
push
push
ficoms
test
cli
xor
push
dec
icebp
mov
jno
pop
xchg
gs
jnp
pushf
inc
push
andl
mov
in
sub
xchg
fwait
in
inc
mov
inc
mov
in
data16
js
push
addb
outsl
idiv
in
ljmp
stc
lock
xchg
sbb
and
xor
push
iret
pusha
and
sub
sbb
dec
and
imul
mov
data16
mov
push
or
pusha
jmp
jno
dec
xor
shrl
push
fstpl
xchg
dec
nop
pop
adc
call
ja
mov
rorl
addr16
loopne
cmp
inc
js
popf
xchg
addr16
rclb
push
xchg
dec
xchg
pop
outsb
cmpsb
mov
ja
test
xor
sub
push
cmpsl
bound
push
push
sub
cmc
and
sbb
sahf
das
pop
in
jb
pop
inc
mov
xchg
jb
popf
add
incl
shll
imul
roll
sbb
aad
dec
cmp
lods
idiv
inc
in
mov
lock
bound
out
mov
mov
jle
push
pop
inc
rol
mov
fstl
dec
pop
test
lock
jbe
cmp
lds
mov
stc
push
inc
repz
fadds
pop
pop
sub
xor
lock
shrl
sbbb
mov
jbe
jl
xchg
pusha
ja
call
mov
jp
shll
fs
imul
imul
pop
bound
push
jno
out
xchg
inc
loop
xlat
sbb
hlt
inc
iret
cmpsl
lahf
scas
movsb
xlat
jg
add
hlt
cmpsl
pop
lock
lds
scas
add
jg
test
inc
lods
loope
xor
imul
fcoms
mov
mov
xor
mov
cld
lret
pop
mov
sub
sbb
ljmp
lock
mov
add
enter
add
mov
das
nop
bound
fs
jo
in
cmpsb
xchg
sub
pop
fdivl
inc
cmpb
cmp
inc
sbb
mov
xchg
xchg
and
lcall
negb
out
xor
sbb
rcrl
xor
add
jg
sub
mov
in
shll
ljmp
xor
test
adc
in
je
adc
jo
lret
pop
lcall
or
xchg
and
push
sub
data16
insb
push
sub
jmp
xor
sub
sub
jb
scas
loope
sub
push
push
sbb
testb
pop
aaa
cmp
dec
movsl
outsb
out
cmp
ljmp
xor
xor
clc
xor
jge
rcll
sub
mov
inc
in
pop
dec
mov
outsb
pop
push
pusha
scas
jno
out
and
in
cmpsl
sub
or
ja
lods
pushf
test
mov
inc
icebp
sub
sub
jge
imul
out
lcall
mov
xchg
in
xor
mov
mov
inc
dec
pop
int
sub
ret
fwait
stc
daa
mov
sub
inc
cmpsb
sbb
outsl
ja
sti
mov
fdiv
and
sub
inc
test
fs
push
cmp
mov
fwait
movsl
icebp
call
sbb
sahf
ret
jne
dec
stc
sub
dec
dec
mov
mov
sub
ljmp
add
shll
call
dec
sub
xor
aam
das
fstp
or
ss
gs
lods
sub
mov
mov
sub
cvtpi2ps
mov
lret
out
aas
lret
rclb
addb
push
inc
sbb
cmp
jle
cmp
inc
pop
les
inc
sti
mul
cmp
pop
sub
in
nop
ss
ss
ljmp
inc
das
test
sub
inc
add
xor
jle
xchg
lock
aaa
sbb
fcos
mov
cwtl
xchg
dec
fdivrs
outsb
inc
dec
movswl
in
das
fwait
inc
add
mov
sub
dec
push
test
test
outsb
sub
dec
hlt
mov
mov
test
sbbl
addr16
fidivrl
outsb
sub
arpl
loop
iret
xorl
in
dec
jecxz
pop
pop
cmp
ljmp
sbb
sbb
sub
aad
adcb
pop
sub
fucomip
mov
mov
outsb
and
and
test
or
or
or
out
cmpsl
xchg
jnp
inc
fbld
inc
sub
xchg
dec
cli
call
mov
cwtl
pop
cmpsb
push
int
sub
sbb
push
xor
sub
sbb
hlt
dec
arpl
or
paddsw
ss
dec
adc
push
iret
subb
or
jo
sub
inc
inc
sub
and
gs
sub
and
add
subb
push
mov
sub
mov
pop
push
push
pop
inc
sub
xchg
mov
push
push
mov
inc
jp
and
std
cli
jnp
mov
mov
je
mov
or
sub
and
outsl
or
dec
dec
imul
test
jnp
loopne
loope
ljmp
inc
jae
decb
loop
sub
xlat
aas
repz
inc
aaa
cwtl
push
pusha
pop
add
imul
out
lods
jns
sub
adc
sbb
and
sbb
aad
fxch
sarl
xchg
ds
stc
xchg
mov
xchg
daa
aam
sub
and
test
mov
movsb
sub
ds
les
sub
and
mov
mov
sub
push
stc
add
sub
push
cmp
popf
mov
sub
fisubl
movsl
mov
cld
scas
push
dec
arpl
into
cmp
fs
mov
in
pop
lods
mov
mov
xor
jle
fsubrl
movsl
inc
ficompl
subb
cmp
jbe
sbb
dec
cmp
pusha
gs
cmp
out
outsb
sub
xchg
aaa
xor
pushf
sahf
stc
adc
inc
jnp
sub
mov
sub
mov
jae
movsl
xchg
pop
xchg
push
loope
je
xor
lods
sub
push
jl
push
ds
subl
sbb
xchg
imul
test
test
fidivrs
xor
lcall
or
jg
push
call
cmp
pop
dec
mov
sub
add
push
cmp
pop
adc
lods
ljmp
stos
xchg
adc
scas
mov
cmpsl
repnz
lods
mov
sub
adc
pop
jg
jae
imul
jmp
xor
fidivrs
sub
pop
imul
inc
push
jbe
loope
sub
mov
fnstcw
xchg
mov
std
xor
scas
aam
fcmovnbe
incl
jge
pop
lahf
mov
js
fwait
pop
pop
push
rcrb
ficomps
sub
std
sub
sub
popa
shrl
lock
mov
xchg
push
or
sub
ret
cld
lcall
push
sub
inc
or
fisubrl
cmp
sub
sub
nop
inc
insb
mov
loope
into
pop
add
cltd
scas
mov
sahf
inc
hlt
repz
out
or
jge
pop
popf
mov
sub
outsb
inc
dec
movsl
inc
arpl
adc
xchg
cltd
adc
jmp
pop
push
inc
or
push
sub
adc
jbe
push
sub
fisubrs
ja
test
inc
mul
sub
pop
inc
pop
data16
jg
cmp
hlt
mov
fiadds
repz
test
je
lods
xor
lds
aaa
cmp
jl
xchg
pop
xchg
push
jle
mov
cs
in
jl
sub
rorl
xchg
fisubl
mov
sbb
sub
mov
inc
pop
in
lds
rcr
gs
mov
and
push
pop
cmp
loop
mov
sbb
sub
mov
enter
sub
fdivrs
inc
mov
sub
dec
popf
rolb
call
push
fnsave
pop
pop
sub
fbstp
ret
cld
imul
dec
fcomip
loope
push
fs
mov
test
pop
sub
add
addr16
xchg
sub
xchg
cmpsb
sahf
mov
lods
jge
std
cmp
stos
xchg
stos
pushf
pop
pop
in
ficoml
jg
nop
aam
rcr
xor
adc
rolb
test
mov
cmpsw
mov
push
add
sub
push
jecxz
aaa
and
sub
fisttpl
sub
lods
hlt
mov
sub
in
mov
pop
loopne
clc
jecxz
in
pop
sub
jae
add
aaa
push
mov
shrb
insb
mov
xor
sub
testb
je
sub
call
ljmp
sub
xchg
or
xor
mov
test
cmp
mulb
iret
sub
xor
inc
shl
and
ljmp
jge
imulb
inc
roll
mov
movl
adc
mov
imull
out
ljmp
and
sahf
mov
test
pushf
fldcw
dec
aaa
fcompl
cmpsb
mov
cmpl
movb
xor
dec
mov
mov
push
hlt
sub
in
lcall
jae
inc
add
mov
jle
stos
call
or
in
sbb
jl
pop
sub
inc
xchg
mov
add
add
sbb
in
fsubrl
push
sub
jecxz
cvtpi2ps
xor
jmp
das
mov
sub
sub
sub
cs
out
jle
pop
jp
testb
icebp
inc
push
cmpsl
sbb
imul
cmp
inc
rol
sub
lods
xor
push
int
data16
pop
inc
movsb
insl
add
repnz
cmp
loopne
mov
sbb
out
or
andb
mov
xor
xor
mov
js
aad
jns
test
pop
mov
es
jp
and
mov
into
push
movsl
dec
das
sti
xlat
cmp
push
xor
xchg
jecxz
cli
push
out
dec
mov
pop
mov
jle
int3
inc
pop
pop
pushw
pop
and
lock
out
or
xchg
es
sbb
inc
xor
adc
sahf
fs
dec
push
jb
sub
call
push
cmp
xchg
push
and
adc
pop
test
add
and
xor
inc
and
int
and
movsb
push
mov
ljmp
xchg
mov
stos
cli
and
adc
mov
aad
add
pusha
lock
testl
add
fistps
cmp
xchg
lods
pop
imul
and
dec
inc
pop
addr16
fwait
in
adc
rorl
imul
inc
inc
add
adc
sub
pop
aam
fwait
mov
push
bound
out
je
leave
mov
add
fldcw
dec
and
test
inc
leave
push
xor
xchg
shrl
cmpsb
cltd
mov
in
out
pop
les
pop
lds
jmp
pop
sub
stc
push
and
aam
cmp
out
popf
daa
data16
or
xor
loopne
out
std
push
fsubrp
push
mov
inc
call
xchg
push
pop
inc
pop
call
pop
or
addr16
daa
iret
out
inc
fisttps
imul
js
sbb
adc
mov
inc
aam
or
or
pop
inc
jmp
add
das
lock
sub
pop
inc
push
jae
push
stos
lock
or
in
stos
daa
cmp
add
leave
lock
dec
fildll
push
inc
test
mov
mov
mov
sbb
pusha
mov
dec
sub
mov
add
addr16
dec
adc
adc
fisubrl
mov
sub
sub
xchg
pop
rcrl
pop
test
or
orb
pop
add
lods
mov
int
loop
loopne
ret
xor
mov
mov
test
xchg
sbb
sub
scas
xor
inc
pop
imul
and
cmpsb
add
lods
or
aas
sub
vorps
imul
pop
cli
mov
out
xor
xchg
dec
cs
fnstenv
pop
push
ja
pop
frstor
jnp
mov
cmp
lock
test
push
sub
inc
mov
int3
sub
cmpsb
sub
cwtl
sub
sbb
xchg
sub
mov
sub
add
es
call
inc
sub
pop
and
dec
add
mov
test
cs
roll
popl
bound
enter
add
jb
movsl
mov
lcall
jae
es
call
sub
insb
add
js
xchg
dec
cmpsb
inc
loop
lea
enter
lock
push
sub
push
sub
xlat
outsb
cmp
xchg
and
arpl
xor
jmp
std
in
pop
or
xor
adc
sub
and
loopne
repz
sbb
js
in
loop
daa
cmp
adcl
xchg
std
lcall
sub
in
mov
clc
xchg
mov
int3
int3
xchg
fmull
lock
dec
ret
xlat
loope
cli
fimuls
push
sub
mov
push
dec
mov
iret
push
pop
lret
and
in
xchg
notl
add
in
xchg
and
lcall
or
mov
out
and
clc
mov
fimuls
cwtl
gs
inc
pushf
hlt
jb
push
jmp
cmp
push
je
out
or
fwait
popa
pop
aas
xorl
and
push
xchg
pop
mov
push
mov
cmpsb
inc
cli
test
arpl
jae
push
pop
inc
imul
push
addr16
adc
mov
orb
push
in
clc
ret
sbb
pushf
pop
scas
dec
outsl
mov
enter
mov
mov
push
xor
lcall
lock
cmpsl
or
in
push
pop
push
js
push
lret
push
test
pop
sahf
ss
pop
xor
and
push
lock
jp
mov
mov
inc
rcrl
xor
cmpsl
pusha
xor
push
loope
push
sbb
push
imul
fucomp
jp
leave
add
lods
sub
mov
fbld
popf
push
mul
ret
cs
xor
inc
aas
push
push
mov
pop
test
push
cmpl
add
add
lahf
imul
mov
roll
fadds
mov
es
pop
pop
sbb
std
pop
pop
pop
xor
or
adc
pusha
test
test
clc
sti
sub
bound
je
imulb
sbb
or
fcomip
rcrb
and
inc
repnz
outsl
popa
in
mov
jnp
or
test
loop
cmp
or
xchg
sub
call
sub
test
repz
movsl
push
cld
jp
int3
or
push
sbb
das
test
cmp
lods
mov
cmp
orl
inc
cli
lock
fcomi
int
ljmp
push
or
call
dec
fs
push
imul
or
or
pop
push
imul
sub
mov
je
mov
ficoml
lds
out
sti
adc
xchg
je
and
or
popa
sbb
xor
ljmp
fisttps
aad
ja
outsb
mov
leave
cmp
push
sti
sub
into
jp
xchg
daa
imul
ds
call
call
jns
lods
cmp
push
out
xor
in
test
jge
icebp
test
inc
xchg
xor
and
mov
lret
test
sbb
sbb
movsl
test
push
jp
pop
dec
jg
cmp
add
push
pop
add
cmp
xor
icebp
dec
pushf
add
movsl
imul
jp
cmp
dec
andl
jo
push
jge
fistpl
mov
fidivl
sub
pop
orl
fwait
cmpsl
addb
mov
add
jg
jae
sbb
jb
daa
and
fstpl
sub
mov
adc
lea
push
divb
sub
movsl
push
mov
fs
addr16
lock
pop
insb
jg
inc
pop
sbb
xchg
stos
cs
pop
and
xor
call
sbb
inc
push
xlat
push
push
sbb
sub
cmp
xchg
addr16
sub
pushf
nop
xchg
xor
mov
cli
pop
mov
popa
cmpsl
daa
push
mov
mov
enter
loope
jnp
sbb
rcrb
inc
cli
push
cmpl
movsl
lock
sbb
pop
xor
dec
sti
bound
cmp
dec
lahf
push
push
imul
stos
loope
fwait
cmp
out
pop
jmp
or
lret
hlt
sub
ja
xchg
mov
mov
shr
cmc
fisttpl
iret
mov
out
cmp
popa
hlt
sbb
dec
mov
ret
iret
ret
xor
jg
inc
andl
xchg
loope
movsl
jecxz
and
mov
pop
popa
dec
aas
cmp
sub
mov
adc
push
lods
xor
pop
and
daa
sub
stos
jmp
je
divl
fsub
aam
or
fs
and
andb
inc
push
pop
xlat
or
dec
movsl
test
pop
hlt
es
jmp
mov
dec
dec
xlat
jne
inc
lock
mov
and
std
test
imul
int3
add
mov
aas
inc
inc
dec
push
sub
lods
lcall
lock
push
cs
shll
int3
arpl
stos
jne
hlt
push
gs
stos
aad
bound
jae
cld
fildl
jmp
cmpsl
orb
loopne
dec
pusha
jge
in
push
inc
pop
push
or
add
cmc
rcl
cmp
mov
dec
dec
stos
setae
xchg
lcall
cmpsl
dec
push
push
sbb
sub
out
lahf
lock
xchg
mov
cli
lahf
gs
jge
xor
dec
push
xor
push
or
sahf
clc
and
push
ljmp
mov
sub
les
or
std
jmp
fs
jnp
lods
inc
repnz
pop
out
vcvtpd2psy
shrb
jmp
fwait
sub
movsb
cs
xchg
aam
loope
push
les
lret
jb
add
lods
ja
dec
rcrl
es
or
mov
pop
ljmp
or
add
sub
push
sti
imul
adc
lock
lret
sub
out
scas
sbb
pop
adc
shlb
in
mov
lock
loopne
add
jmp
inc
aas
lea
push
add
les
dec
cmp
dec
test
xchg
xchg
in
shll
sub
cmp
cmp
xchg
sbb
dec
push
lods
lock
sarl
pop
push
shll
dec
mov
bound
mov
jbe
addr16
mov
dec
icebp
mov
pusha
add
xor
inc
into
jns
mov
push
jge
xor
adc
add
int3
in
add
stos
lock
lret
lcall
js
mov
pop
sbb
sub
push
data16
ret
dec
ret
sbb
jbe
cmpsl
sbb
lods
jmp
pop
shll
push
jmp
fisttpl
jnp
mov
dec
sub
pop
mov
scas
mov
bound
xchg
fnstcw
adc
push
adc
inc
jp
mov
mov
js
stos
cmp
arpl
mov
les
push
add
gs
xchg
pop
inc
sub
pop
loop
or
shll
sbb
xor
lods
cmc
push
or
cmp
roll
fsts
pop
pop
cmpsb
push
or
int3
pop
cmpsb
pop
gs
stos
push
in
rcrl
pushl
in
sbb
mov
out
popf
addr16
inc
arpl
loopne
aaa
outsb
inc
int
rclb
pop
sbb
jno
lahf
cmpsb
movsb
xchg
cmp
aas
stos
movsb
push
dec
dec
imul
add
xchg
push
clc
sbb
movsl
icebp
push
pop
and
dec
and
lret
adc
imul
mov
push
sub
push
out
sub
pop
push
cmp
pop
flds
mov
repnz
jmp
jmp
inc
incb
icebp
sarb
or
jae
fxch
aad
pushl
mov
pop
push
ja
hlt
je
dec
push
push
jb
jp
aam
mov
cmpsb
ret
cmp
xchg
xor
lock
leave
je
pushf
mov
faddl
insb
mov
js
pop
jne
lock
dec
cld
jo
mov
push
pop
outsb
int
sub
cmpsb
cmp
xor
and
sar
pop
lods
mov
jecxz
xlat
xor
jb
mov
lods
repz
sbb
aam
adc
xor
inc
flds
pop
dec
xor
push
mov
les
cmp
xorb
push
pop
jno
cmpsl
lock
inc
inc
ret
and
xor
ss
lds
sbb
push
aam
ja
xor
jp
push
push
dec
push
mov
and
int3
sbb
sub
ljmp
aam
push
iret
or
sub
movsb
imul
xlat
push
xchg
sbb
dec
cmp
out
in
fs
xchg
xchg
sbb
cmp
xlat
gs
mov
push
in
adc
mov
xlat
push
sub
scas
inc
pop
insl
pop
std
mov
scas
jle
jb
mov
sub
ds
out
scas
shr
mov
cmpsb
movsb
dec
or
push
mov
jb
subb
jg
std
pop
imul
xor
into
nop
pop
roll
ljmp
xchg
and
or
jne
push
mov
ret
int
xchg
stos
imul
add
inc
les
je
inc
push
arpl
sub
scas
mov
sar
setg
xor
sub
jle
aam
mov
stos
mov
mov
ds
lret
clc
stos
push
add
or
dec
loope
inc
mov
ret
ret
mov
test
sub
mov
loopne
cld
data16
pop
lods
xor
addr16
dec
or
xor
shlb
jbe
les
push
inc
xchg
mov
arpl
push
mov
lds
cmpsw
cld
sub
sub
cmp
push
push
mov
fwait
push
xlat
add
stos
sbb
fcmovnbe
inc
xchg
inc
adcb
fimuls
xchg
sub
mov
pop
adc
fidivl
and
inc
xchg
cmovbe
xor
ljmp
xor
xlat
in
pop
push
adcl
data16
filds
repz
inc
xor
mov
push
lahf
outsb
or
and
cwtl
pop
dec
or
sti
push
adc
movsb
addr16
cli
push
in
inc
push
clc
lea
lods
xchg
pop
in
pop
cmp
movsl
pop
or
mov
or
fs
cli
es
xchg
cmp
fnstenv
out
xchg
aam
xchg
mov
pop
push
imul
aam
and
sbb
fists
leave
and
repnz
stos
adc
xbegin
sub
clc
or
ss
movsl
cmpsl
jns
sub
jne
jns
and
inc
insb
sub
lock
pop
mov
push
loopew
xor
push
aam
es
xchg
pusha
adcb
or
outsb
fxch
jb
roll
push
inc
jbe
push
into
and
in
pop
movsl
or
pop
xor
test
dec
mov
mov
scas
dec
fdivrs
push
popf
add
pop
pop
xor
push
mov
xchg
xlat
std
dec
fwait
push
test
fcompl
punpckhwd
pop
in
inc
pop
loopne
mov
into
lret
and
sub
xchg
js
call
out
pop
mov
mov
jmp
fildl
sub
push
cmp
xor
jmp
sar
push
cwtl
cmpsb
inc
cli
dec
inc
cmp
xor
xor
jecxz
in
mov
aas
inc
push
stos
es
popa
cmp
movsb
fidivrs
mov
ds
ljmp
sbb
ret
fdivs
xor
mov
add
xor
or
mov
data16
push
cli
jg
subb
out
pop
add
cmp
mov
adc
jmp
inc
lods
mov
add
leave
aam
mov
cmp
jl
xor
xchg
nopl
mov
push
js
test
pop
aas
fdivl
mov
fs
mov
lret
sub
dec
xor
lret
imul
mov
notl
mov
incl
nop
aas
push
rcrl
pop
jge
push
movsl
shl
in
add
aad
cmp
fnstsw
shlb
shlb
xchg
lock
aam
ljmp
movsl
movsb
lret
push
aad
mov
lock
fsts
aaa
and
popa
add
popf
xchg
pop
mov
pop
xor
pop
mov
xchg
pop
xchg
xor
sbb
stos
lds
out
mov
mov
pop
lock
add
movsb
pop
mov
add
mov
dec
cmp
mov
mov
or
inc
push
add
in
mov
mov
pop
jp
xor
cwtl
xlat
test
ljmp
js
lods
mov
mov
xchg
or
mov
xchg
sbb
icebp
enter
adc
mov
mov
pushf
mov
mov
inc
cmp
jle
incb
add
pop
aam
jp
xlat
push
data16
jg
je,pt
lea
mov
stos
ret
int3
frstor
jle
xchg
xchg
inc
mov
or
push
inc
cmp
cmp
dec
xchg
cmp
leave
leave
dec
push
call
sarb
aaa
popf
dec
mov
inc
data16
ljmp
mov
aad
mov
clc
lret
negb
inc
adc
pop
or
mov
xchg
xor
imul
fucomp
imul
xchg
imul
movsl
arpl
imul
data16
add
inc
inc
push
out
push
aam
cmp
std
lahf
mov
inc
mov
scas
aam
nop
adc
xor
mov
in
int3
inc
pop
dec
sar
cmp
cmc
xor
dec
inc
sbb
and
movsb
fiaddl
mov
push
cld
or
cmpb
icebp
xlat
aam
stc
bound
out
cmpsb
test
adc
xor
jl
loopne
cmp
cwtl
push
push
pop
gs
adc
cld
cmpsb
inc
shll
adc
inc
test
ret
lock
xlat
adc
lods
mov
mov
test
xchg
pop
inc
push
mov
stos
jno
jnp
imul
add
or
xchg
ss
sub
sbb
addr16
je
adc
ficoms
xchg
cmp
pop
mov
popa
inc
pop
sbbb
push
mov
add
pop
and
lods
sbb
popf
aam
in
mov
cmp
bound
xor
jmp
in
stos
pop
push
pop
sub
mov
add
loope
pop
pop
pushf
es
cmpsl
dec
cmp
fimuls
out
xor
jbe
cmp
call
push
jb
popa
fstpt
sbb
jecxz
addr16
push
cmc
push
push
das
test
mov
push
inc
cmp
cld
and
sahf
sbb
xor
jbe
or
rolb
idivl
outsl
cltd
xor
adc
sub
pop
outsb
out
bnd
push
add
int
or
test
push
lock
pop
lret
in
int3
sub
xchg
push
mov
pop
pop
mov
lcall
add
or
inc
hlt
dec
test
sub
cltd
xlat
push
dec
loop
fiadds
imul
mov
loopne
mov
and
push
mov
xlat
pushl
mov
cmp
in
xor
sub
out
inc
sub
push
cwtl
iret
push
adc
lcall
push
jg
push
arpl
sub
stos
and
pop
lcall
xor
lahf
pop
outsb
push
jle
cmp
inc
xchg
out
xor
jnp
repz
cmp
push
outsb
gs
lea
enter
xchg
cli
lret
mov
push
pop
dec
xor
inc
imul
push
dec
jne
in
lea
out
aas
stos
cmc
or
inc
mov
inc
test
enter
ss
fists
mov
sbb
sbb
cwtl
add
push
cmpsl
pop
movsb
lahf
sub
dec
jp
lahf
adc
cmpsb
movsl
xor
cwtl
fs
xor
xor
or
test
pop
cli
imul
fs
test
addr16
and
adc
adc
push
data16
xlat
cwtl
stos
lods
jg
loop
mov
jne
hlt
pop
jbe
mov
add
inc
scas
mov
sub
iret
xchg
fwait
mov
fcoml
je
jp
xor
in
sub
pop
mov
pop
mov
xchg
jl
sbb
push
and
stc
and
jns
cmp
daa
or
aam
pop
pop
dec
sub
leave
sbb
pusha
mov
cmp
incl
in
xchg
jp
test
sub
mov
jecxz
add
ljmp
call
cmp
sub
lret
mov
mov
sub
das
and
dec
cmpsb
cmp
xor
in
push
cli
pushf
out
inc
cwtl
sub
aas
pop
test
mov
out
out
loop
push
hlt
scas
shrb
je
out
inc
popa
sub
clc
or
push
jne
in
dec
xchg
andl
and
dec
rclb
sub
inc
or
cmp
nop
outsl
push
fisubs
mov
mov
orb
push
adc
jp
pop
xchg
punpckhwd
and
cmp
push
mov
out
inc
pop
shlb
mov
and
fs
enter
adc
mov
push
push
pop
sub
test
out
fwait
jae
mov
push
cmp
pop
add
or
mov
xlat
pop
loope
data16
pmullw
in
sub
test
pop
xchg
or
mov
push
ret
cmpsb
or
dec
outsb
pop
dec
and
push
jmp
std
adc
ffreep
add
daa
xor
sub
xchg
stos
xchg
pop
mov
dec
popf
iret
cwtl
and
jmp
and
xchg
cmpsl
cmp
xor
xor
rcrl
cmpsb
xchg
movb
movsb
insl
mov
push
inc
add
stos
aad
xchg
mov
sub
pop
fsubs
iret
sub
daa
dec
daa
xor
lahf
int
inc
fldl2t
add
push
inc
pop
inc
cmpsl
inc
repnz
subl
sub
jae
iret
mov
fstp
xor
fsubrs
jl
inc
mov
and
push
shl
in
cli
out
or
cmp
or
scas
cmc
push
mov
mov
lret
leave
out
sbbb
gs
pop
pop
inc
xorb
loope
xlat
repnz
lods
ficomps
stos
push
inc
lock
lock
test
into
outsl
add
imul
movsl
lods
lock
dec
sbb
hlt
jae
out
stos
jp
push
fs
mov
rcrb
loop
addr16
movsl
or
xchg
xlat
lock
icebp
mov
pop
in
in
fwait
mov
push
dec
daa
jmp
subb
inc
mov
std
aaa
push
push
push
or
or
imul
idiv
sbb
xor
out
mov
jo
cld
and
dec
lods
insb
cmc
es
fsubrs
das
ja
data16
inc
das
jp
fiadds
mov
dec
mov
xchg
test
push
push
xlat
fucomi
sub
out
push
or
mov
sub
xchg
xchg
sub
gs
xlat
test
test
jo
xlat
addr16
iret
xchg
jmp
xor
xor
cs
or
das
stos
jbe
cltd
push
imulb
outsb
sbb
jmp
lock
insb
stos
pop
jecxz
push
cmpsb
leave
jmp
jmp
add
xor
aas
in
pop
scas
int3
cli
pop
push
test
fs
outsl
xchg
push
bound
mov
xchg
ljmp
sub
push
or
adc
pop
xchg
sbb
push
std
or
pop
call
dec
mov
pop
or
stos
out
inc
mov
and
inc
pop
addr16
and
jge
fnsave
fmull
ret
fisubrs
testb
or
cmpsl
outsb
cmp
movsb
stc
xor
inc
mov
in
lods
in
ret
stc
adc
mov
out
sbb
push
lret
jg
dec
out
roll
scas
lcall
shr
pop
sti
push
stc
jbe
or
scas
push
lock
sbb
lods
xor
pop
mov
push
sub
cmpsl
inc
xor
jp
cmpsb
cwtl
pop
push
mov
xlat
xlat
xchg
bound
mov
mov
movsb
push
dec
shlb
in
cmp
movsl
jnp
push
xchg
ds
sub
push
mov
pop
xor
mov
sub
clc
sub
cmp
iret
pushf
lds
jne
dec
push
jno
jb
sahf
sub
sub
inc
mov
cmpsl
stos
mov
imul
push
sub
adc
test
call
mov
rcrl
icebp
inc
push
cmp
repz
inc
cmpsb
inc
enter
subl
xchg
dec
test
mov
cmpb
dec
xor
cmc
sub
popa
rol
lahf
inc
mov
sbb
cmp
jne
cmp
test
mov
adc
lret
ds
dec
and
sbb
cmp
sub
loop
test
push
fiadds
push
pushf
sahf
xchg
dec
cmp
cmc
cmp
addr16
jbe
mov
pop
push
lret
pop
movsb
inc
rolb
push
fisttpl
dec
into
daa
lahf
mov
mov
in
push
shlb
xor
ret
push
lds
movsl
lock
jne
xor
movsb
lcall
push
out
adc
in
jp
enter
sti
fadds
ds
imul
pusha
pop
fildll
cmp
xor
jp
sbb
rcrl
push
sub
sub
adc
pop
movsb
call
and
sub
movsb
push
push
cld
jbe
push
inc
pop
out
cld
jecxz
pop
cmpb
jns
jmp
cmpsl
sub
mov
adc
cwtl
push
add
mov
ds
into
ficoms
and
lds
pop
cmpsb
stos
cltd
int3
in
or
mov
mov
and
xchg
lea
jae
lds
sub
or
sbb
or
cmp
leave
mov
sub
daa
lods
stc
std
scas
pop
lret
jp
pop
mov
ret
into
mov
mov
xlat
jge
fstl
add
sub
xor
jg
addl
xor
stc
mov
sub
clc
aam
out
push
sub
fistps
inc
sbb
and
div
and
lock
out
sub
loopne
dec
fsts
sbb
jl
clc
cmp
push
jg
shr
repz
cli
shlb
mov
mov
arpl
jecxz
icebp
sahf
pop
push
dec
lds
sbb
cmpsb
inc
mov
test
push
cmp
mov
pop
cmp
mov
adc
jmp
push
pop
sbb
sbb
incl
push
test
jge
loop
push
sub
push
add
jns
xchg
aam
push
push
mov
and
jae
sub
pusha
push
dec
fldt
data16
shl
inc
or
dec
std
sub
sarb
cs
xor
cmp
mov
loop
sahf
aam
call
mov
cld
leave
sti
xor
jmp
sub
dec
aam
sub
xor
or
stos
inc
js
movsl
sbb
hlt
pusha
push
scas
lds
repnz
or
adc
scas
icebp
addr16
aad
push
pop
push
sbb
shr
dec
clc
mov
xchg
scas
and
mov
jmp
iret
pop
add
pop
push
push
in
fnstenv
xor
jne
test
xchg
jns
xor
mov
into
or
xor
dec
pop
mov
dec
fsubrs
cmp
fisttpll
cmp
mov
mov
cmpsb
add
sub
sahf
jnp
xlat
lea
imul
jne
bound
in
subb
or
ror
and
xchg
stos
sub
push
inc
les
mov
loopne
and
xor
push
dec
into
cmp
jae
jo
rcrb
push
sbb
cmp
cmp
in
xor
sub
inc
aam
jbe
sub
ret
faddl
inc
stos
clc
add
adc
leave
xchg
dec
inc
add
lods
jne
add
xlat
ret
dec
push
lock
sub
mov
in
push
mov
and
xchg
jno
mov
addr16
push
inc
or
or
push
das
xchg
lea
push
js
es
sbb
aad
ss
push
test
mov
pusha
leave
pusha
loopne
fildl
and
push
in
inc
sub
stos
sti
clc
cmp
int
push
repz
inc
dec
cmp
pop
and
movsb
push
aam
subb
pop
adc
lcall
lock
add
sar
stos
rorl
cmp
bound
sahf
cmpsb
movsb
outsl
lock
test
push
xchg
leave
add
ret
cmpsl
mov
ljmp
dec
pop
push
or
jne
cld
mov
int3
mov
cmp
xchg
out
push
jb
sbbb
insl
imul
dec
jae
push
dec
push
shrb
xor
pusha
ljmp
sub
and
gs
outsl
movsl
push
les
push
lret
pop
jge
mov
in
fs
lods
dec
dec
mov
push
sbb
inc
cmpsl
sub
adc
dec
xor
xchg
inc
cmp
inc
dec
in
rcl
jmp
je
jge
adcb
push
out
cmc
arpl
xchg
cmp
test
enter
cmp
adc
inc
push
sbb
add
pop
in
stc
jle
int3
int
cmp
push
add
xchg
lock
cmpsl
xor
cmp
push
sub
dec
sub
jns
cmp
aaa
mov
mov
xchg
insb
sub
je
repnz
sub
or
jno
sub
mov
dec
push
sbb
sub
test
xchg
add
pop
scas
sahf
inc
aam
pop
push
call
shr
xlat
mov
fsubrs
stc
mov
xor
dec
mov
pusha
inc
lock
push
sub
inc
or
sub
sub
cmpsl
cmc
mov
or
jne
inc
cmpsb
aad
ret
dec
sub
jno
sahf
fcoml
sub
lods
pop
mov
sub
xchg
movsb
es
lahf
xlat
out
fisubrl
stc
xchg
inc
and
push
pushf
jns
cmpsb
or
ljmp
dec
jne
jle
mov
jmp
int
xchg
xor
adcb
cmp
sub
sahf
lcall
mov
jge
and
mov
movsl
test
cmp
push
xor
xor
mov
aaa
inc
cltd
mov
jle
and
sub
mov
xchg
arpl
lret
jge
sub
push
push
sub
sub
sub
shl
es
cld
and
sub
xor
aad
sub
movsb
outsb
jae
lahf
imul
out
test
sub
sub
arpl
ja
dec
xchg
jne
push
jecxz
bound
pop
push
and
sub
out
cltd
fwait
das
xor
das
imul
adc
bound
out
in
lret
and
out
mov
cmp
loope
iret
lds
out
subl
icebp
mov
das
dec
xchg
sub
jmp
push
xchg
xchg
sarb
xor
sbb
fiaddl
iret
fwait
adc
jp
mov
lahf
xchg
and
ds
xchg
lret
jp
pop
mov
mov
mov
mov
inc
sbb
cmp
arpl
pop
mov
dec
loope,pt
fmuls
push
inc
mov
ss
dec
mov
dec
ret
pop
xorb
push
mov
sbb
test
push
adc
inc
addr16
aas
mov
div
movsl
movsb
sbb
dec
sahf
xor
fdiv
pop
sahf
out
lock
cmp
enter
cmp
xchg
into
xlat
and
lahf
cltd
push
data16
test
inc
xchg
daa
hlt
ret
mov
shlb
xchg
jp
add
or
loope
pop
rclb
pop
xor
mov
fldl
pop
sysenter
mov
cli
sub
mov
push
jmp
xchg
aas
movsl
test
or
xor
movsb
rol
xor
pusha
sub
in
mov
repz
push
or
xor
xchg
fs
imul
lods
subb
ret
mov
inc
adc
push
bound
add
lods
mov
pop
mov
pop
xor
inc
mov
jmp
xor
stos
xlat
and
cmp
fcoml
jnp
in
inc
sbb
cs
mov
test
lock
fucom
mov
lods
dec
adc
out
fisubl
ds
adc
xchg
adcb
sahf
or
dec
jl
js
int
adcl
ret
pop
ja
aad
pop
jae
jmp
jmp
insl
mov
mov
inc
jb
mov
ljmp
push
cmpsb
pop
inc
cli
sbb
pusha
mov
and
cmp
fcomps
jl
stos
arpl
push
add
sub
push
js
jbe
mov
xor
les
mov
xchg
bound
pop
shlb
imul
push
jne
addr16
sbb
and
dec
mov
popa
bound
jge
nop
inc
jnp
sub
sub
add
insl
in
ret
imul
or
scas
mov
shrl
movsb
xor
mov
out
lock
jecxz
pop
mov
subb
inc
in
sub
jp
in
fldcw
cmp
cmpb
fnstenvs
sub
inc
lods
sub
xor
dec
cmpsl
lea
inc
ljmp
lock
shlb
cld
ds
mov
inc
sti
mov
xchg
bound
dec
pop
ljmp
dec
imul
sub
pop
xlat
xchg
add
flds
xchg
cmp
mov
pusha
pop
fmull
cmp
sti
loope
loope
dec
xor
ljmp
sub
loopne
or
in
sub
mov
adc
in
xchg
inc
cmp
jbe
and
data16
dec
call
and
pop
jmp
hlt
sbb
clc
add
xchg
mov
inc
movsb
and
inc
cmp
add
adc
dec
pop
cmp
repz
dec
sub
or
pop
jns
cmp
xchg
jmp
sarb
ds
dec
daa
test
test
lret
enter
adc
pop
addb
lret
jmp
adc
mov
sub
push
lret
cmpsl
scas
aam
adc
inc
fisttpl
adc
cmpsb
testl
pop
mov
mov
jnp
dec
cmp
lock
lret
idivl
inc
xor
xor
mov
adc
pop
lret
push
xchg
dec
sub
ds
adc
inc
push
fbstp
sub
jnp
test
xor
negb
ret
outsl
insb
xor
es
inc
inc
sub
jb
lock
sub
ss
pop
jns
pop
loop
lods
test
mov
es
out
and
sub
mov
xchg
lods
icebp
test
cs
cmp
or
jle
pop
pop
push
in
repz
dec
fstpt
xor
add
mov
dec
xor
dec
jg
aad
lock
fs
inc
add
mov
mov
add
arpl
rclb
movsl
ret
in
stos
xchg
mov
aas
aad
push
xlat
jne
aam
jmp
cmp
lret
xor
in
fisubs
mov
roll
and
roll
lret
sbb
and
insl
cmp
aaa
gs
fs
and
cmp
imul
test
or
mov
test
in
jbe
das
add
cmp
pop
fsubs
mov
sub
js
sbb
xor
jne
push
sti
push
xor
xchg
or
dec
jge
mov
fmuls
cs
pusha
std
or
xor
sbbb
insb
mov
and
pop
loopne
jp
les
mov
jge
out
aad
adc
movsb
inc
inc
pop
adc
mov
ja,pn
inc
xor
mov
andb
jecxz
cmp
arpl
push
push
lret
pop
push
icebp
sub
mov
mov
xor
and
xor
addr16
in
xchg
inc
mov
shl
or
lret
xchg
out
push
xor
pop
sbb
in
or
lea
das
and
cmp
pop
xor
rcrl
aad
mov
dec
lock
or
imulb
xorb
je
jg
cmp
xor
mov
clc
das
mov
xchg
cmpb
out
test
jmp
push
pop
push
push
sbb
pop
cmp
cmp
mov
jp
fwait
and
fisubs
in
mov
push
adcl
lret
inc
add
push
push
nop
cmc
push
repz
mov
ja
lock
xchg
sbb
adc
out
hlt
std
in
shlb
jne
dec
pop
push
or
pop
pop
sub
shrb
or
add
dec
lods
mov
inc
mov
xchg
ss
pop
pop
sub
adc
aaa
or
jecxz
sar
add
or
lds
lock
shr
sti
movsl
sarb
jecxz
mov
inc
and
cmp
flds
and
mov
pop
test
and
inc
push
test
jge
es
push
inc
fcmovnu
push
mov
sub
in
and
push
sbb
push
lock
ljmp
int
lret
or
jmp
cmp
xchg
jl
dec
ficoms
xchg
mov
imul
addb
inc
scas
push
std
pop
inc
xor
sub
fstl
lock
cmp
inc
jno
out
in
dec
pop
rcrl
fcmovnu
insb
scas
xchg
icebp
mov
and
cmc
mov
cmp
test
mov
xor
push
mov
xor
pop
push
push
gs
movsl
lcall
cmp
mov
adc
movsb
ucomiss
jmp
movsl
pop
add
es
and
xor
xchg
jne
in
icebp
lret
movb
push
inc
movsl
push
pop
add
dec
lock
or
dec
repnz
jbe
dec
in
and
xor
mov
jnp
adc
sahf
jge
in
js
add
stos
jle
inc
and
fucom
sub
mov
push
mov
ror
sbb
mov
mov
xor
imul
sub
dec
sub
mov
sbb
adc
and
lock
shl
sti
in
popa
adc
and
sub
cmp
jl
ret
or
cmpl
cmp
mov
scas
inc
loopne
loopne
dec
int
rcrl
xor
addr16
lock
ret
cmpsl
cmp
inc
push
pop
xlat
fildl
addr16
pusha
cmp
xor
and
pop
inc
in
test
pop
and
icebp
stos
lods
popa
pop
cmp
inc
mov
dec
ds
jb
sub
mov
in
xor
mov
sarb
mov
mov
ljmp
bound
negb
mov
sub
jp
mov
shr
xor
adc
lods
push
lods
sbb
cmp
add
dec
or
fwait
bound
mov
pop
outsb
pushf
ja
andb
pop
push
cmp
xchg
adc
ljmp
cmp
mov
out
cmpsb
push
dec
lret
pop
cltd
lock
mov
bound
popa
fisubrs
inc
pusha
push
ja
ss
or
xor
push
push
mov
jns
stc
mov
out
inc
call
xchg
xor
out
jne
inc
or
test
mov
mov
ret
dec
sub
out
gs
dec
popf
clc
out
idiv
cmp
dec
push
cmpsb
movl
or
jbe
popf
push
decb
dec
fisubs
dec
sti
xchg
push
dec
stos
xor
xor
rclb
mov
dec
dec
shl
imul
test
pushf
fdivl
cmp
xor
data16
imulb
push
adc
mov
rcl
dec
add
dec
push
xchg
bound
cmp
scas
xchg
loop
adc
aam
std
fsubrs
push
pop
cmp
sub
add
test
out
stc
xchg
push
pop
mov
insl
stos
add
movb
enter
mov
shlb
cmp
cmp
push
pop
mov
inc
ror
pop
lock
push
mov
push
ja
push
lret
mov
in
or
sbb
or
inc
pop
xchg
mov
aas
fisubl
inc
inc
andb
pop
dec
xchg
addl
push
aad
ret
dec
icebp
fimull
cmp
ficoms
add
push
pushf
sub
inc
leave
jns
sti
lret
or
mov
dec
into
push
mov
lock
or
sahf
and
sbb
mov
jmp
push
adc
sbb
cmp
sub
xor
dec
insb
mov
cmp
jp
out
xchg
mov
xchg
imul
xor
jge
xchg
dec
inc
cmp
xor
aad
and
leave
pop
into
cmp
pop
imul
cmp
into
rcrl
jg
pop
mov
and
scas
pop
les
fsubrs
je
mov
push
lods
cltd
or
xchg
scas
mov
adc
test
sahf
add
lea
xchg
in
adc
je
push
inc
pop
lock
and
std
leave
bound
mov
hlt
mov
inc
sarb
push
cmc
mov
fldenv
daa
xchg
fmuls
mov
xchg
jno
xor
cmpsb
push
cmp
adc
add
mov
mov
push
add
enter
and
imul
jmp
fldl
subl
sbb
lods
addr16
jge
out
or
rcrl
inc
lret
cmp
push
pop
sub
inc
call
jns
add
sub
mov
ljmp
push
sbb
lods
sti
div
enter
xchg
inc
lods
movsb
cmp
mov
das
outsb
dec
inc
dec
pop
cmpsb
mov
pop
lock
jl
pop
inc
ljmp
cli
in
push
insb
imul
mov
xor
mov
cmc
dec
in
adc
cmp
pop
es
mov
xor
rcl
addl
pop
sub
add
push
mov
rcr
jmp
push
xchg
xchg
in
repz
mov
cmp
mov
push
pusha
and
je
iret
xchg
pop
sub
xor
ss
mov
push
dec
xchg
jmp
or
aas
sahf
pop
test
mov
cltd
inc
xor
ss
loope
xchg
ret
pop
shr
fidivl
push
dec
shrb
popf
mov
pop
cmp
pop
pop
fstps
xchg
gs
cmp
pop
add
pop
xor
fistpll
ds
fnsave
xchg
sub
in
test
rcll
mov
jmp
pop
and
mov
test
pop
or
adc
loope
push
jmp
mov
pop
pop
xchg
push
pop
scas
int
xchg
mov
mov
or
add
pop
mov
shlb
sub
inc
insl
cmp
xchg
inc
push
jp
xchg
push
lcall
xor
ret
stos
adc
pop
addr16
cld
mov
push
fidivl
push
icebp
ja
xchg
stc
mul
cmp
push
jge
hlt
cmp
jp
enter
loopne
test
decl
sub
insl
dec
or
mov
cmc
xchg
pusha
mov
sub
push
dec
lahf
mov
sbb
xor
lods
cmp
lock
mov
xor
fdivp
pop
mov
in
or
jecxz
imul
mov
outsb
lods
dec
pop
jbe
arpl
push
outsl
mov
mov
mov
pop
sub
mov
test
or
insb
je
fmul
sub
xchg
push
dec
mov
loop
stc
cltd
cmpsb
add
sub
mov
pop
sbb
jmp
ret
cwtl
pop
and
out
sub
addr16
in
insb
cmc
inc
xchg
es
jne
gs
cld
or
test
pop
pushf
cmp
inc
mov
jo
popa
insb
dec
dec
push
lock
rcll
or
push
orb
mov
arpl
cmpb
xchg
push
dec
popa
xchg
push
movsb
std
sahf
sub
ficoms
mov
dec
xchg
fidivl
int
jge
pop
adc
xchg
insb
cmp
xor
cmp
xor
push
rcr
pop
mov
notb
fucomi
rcl
lock
push
data16
push
mov
inc
push
pop
and
sbb
mov
sahf
pop
dec
cmpsl
push
stc
mov
out
pop
xchg
lds
xchg
jo
pop
rolb
cmpb
pop
test
cwtl
mov
fnstcw
xor
mov
into
cli
fistpl
or
movsl
or
scas
lcall
fldenv
and
cmp
mov
sar
mov
pop
pop
fisttpll
rorl
out
in
add
and
bound
mov
xchg
shlb
mov
fistl
push
or
je
loopne
mov
lock
je
aam
jnp
sub
leave
or
jnp
lcall
fbstp
int
rol
mov
scas
aad
sarb
xor
pop
mov
repz
mov
test
imul
mov
xor
enter
in
cmp
sarl
pop
das
bound
movsl
stc
das
or
fisubs
cld
jnp
xchg
jbe
jg
jno
lock
and
popa
mov
pop
aaa
push
ds
mov
leave
test
cs
scas
js
hlt
repz
aaa
mov
mov
xor
fdivrs
popa
andb
pop
dec
fnstenv
fldcw
push
nop
xor
and
add
leave
jecxz
sub
fs
idivb
sub
jge
pop
out
mov
jge
sub
cmp
lods
ss
and
dec
xor
mov
stos
pop
xorl
push
xor
mov
test
enter
push
push
dec
out
iret
movsl
cmp
push
lock
int3
idivb
push
push
mov
enter
or
popa
jle
jp
mov
outsl
sub
push
pop
sub
bound
sbb
inc
mov
inc
iret
dec
mov
push
rcll
mov
mov
sbb
lret
sbb
test
xchg
mov
push
fistpll
or
adc
das
rcrb
leave
in
popf
sbb
cltd
cmp
lods
push
xor
bound
adc
or
lcall
loope
xorb
pop
inc
jl
push
lcall
aad
xchg
rorb
push
cltd
fidivs
xor
push
mov
xor
ret
cmp
jl
and
sahf
mov
or
das
xlat
jmp
jge
lret
xchg
outsb
lcall
out
js
jmp
shrl
jmp
push
stos
stc
loope
jecxz
insl
jns
shrl
xor
fcoms
pop
push
aam
and
mulps
xchg
pop
mov
inc
inc
dec
testl
push
psrlw
or
ja
rcll
test
das
dec
and
cmp
jg
es
add
sete
test
out
movsb
push
xor
aad
jmp
xchg
mov
pop
repz
dec
pop
mov
adc
dec
lods
in
daa
int3
xor
cmp
push
xor
ss
push
loopne
xchg
mov
dec
xor
movsb
iret
inc
out
into
pop
subl
lock
test
sbb
or
mov
jmp
and
cmp
outsb
fcomi
int3
push
inc
lods
pusha
lds
stos
dec
jmp
ss
add
mov
shr
call
lahf
xor
and
scas
cld
jecxz
cmp
repz
lods
scas
inc
mov
addr16
push
add
xchg
cmp
push
mov
and
enter
addl
hlt
out
test
movsl
das
mov
mov
jmp
scas
scas
hlt
subl
test
pop
inc
cmpsb
scas
xchg
cmp
movsb
xor
fwait
inc
jbe
pop
test
mov
cmpl
cmpsl
aam
pop
sbb
push
push
and
xor
es
aam
das
or
lds
xchg
scas
std
adc
and
cli
or
ret
push
roll
or
adc
adc
lret
sub
xor
leave
mov
sbb
sub
mov
mov
jl
aam
push
mov
pop
jnp
xchg
xchg
sub
xor
push
jg
xor
bound
mov
mov
lods
stc
sbb
dec
fwait
pop
mov
arpl
pop
jge
popf
dec
shr
sbb
insb
jp,pn
or
movsb
xchg
popa
adc
jg
push
push
mov
sub
and
sbb
pop
mov
mov
out
lock
xor
pop
cltd
test
dec
pop
insb
fistpl
add
adc
xchg
jbe
mov
or
xchg
inc
fwait
loopne
xchg
dec
jae
xchg
xchg
xchg
cmp
xchg
fdivrs
pop
fbld
mov
or
sahf
into
mov
pop
push
fiadds
mov
mov
lods
cltd
fildll
ja
jnp
insb
fldcw
add
lcall
dec
mov
add
jno
adc
dec
or
cltd
insl
dec
and
std
les
cmpsb
dec
mov
mov
in
hlt
adc
jno
jecxz
cwtl
mov
in
sbb
aad
dec
mov
dec
mov
xor
cmpsl
sti
adc
jg
xchg
icebp
iret
lds
or
out
mov
sbb
dec
xchg
aam
push
inc
inc
in
cmp
mov
ds
loop
call
loop
sub
xchg
mov
push
xchg
or
push
mov
fstpl
sub
rcrb
mov
les
sbb
and
aaa
iret
dec
fdivrl
psubusb
cmpsl
jno
fstps
test
push
cwtl
out
imul
movsb
xchg
in
pop
lds
mov
sub
std
outsb
popa
sbb
adc
int
and
fistpl
xchg
sbb
test
bound
pop
pop
pop
loop
mov
icebp
jae
cmp
test
xor
push
aad
addr16
ds
inc
rcrl
bound
push
daa
lock
xlat
xor
cmpsl
pop
out
les
inc
jp
mov
push
xchg
mov
fistps
scas
aaa
xchg
pop
mov
sub
movsl
jne
pusha
testl
pop
cs
imul
mov
loope
fs
adc
dec
scas
sti
das
inc
jmp
mov
fisttpl
aas
sahf
mov
sbb
jb
subl
neg
xor
add
pop
xor
add
insb
stc
push
jl
push
push
in
sbb
std
cmp
cmpl
imul
mov
addb
data16
push
hlt
in
adc
icebp
dec
das
insb
jecxz
fsubr
dec
xor
dec
mov
movsl
dec
mov
cli
jl
pusha
lret
stc
dec
fwait
sbb
pusha
clc
sub
mov
jmp
cmp
loopne
fildl
rcl
mov
in
xorb
lock
clc
push
jp
mov
fiadds
cltd
repnz
or
das
or
and
cmp
xchg
aad
arpl
aam
enter
jne
pop
adc
mov
call
aad
inc
testb
aad
jmp
sbb
les
xor
xchg
pusha
addb
inc
xchg
lret
push
leave
jnp
daa
out
lds
pop
shlb
andb
jl
add
xor
jecxz
add
int
or
sub
scas
in
mov
mov
in
pop
dec
inc
pop
leave
ljmp
movsb
cmp
nop
in
sub
sbb
nop
adc
or
jp
xchg
cmpb
lock
dec
addr16
push
cmp
mov
idivb
in
sbb
inc
dec
fisubl
clc
cmp
adc
push
testl
repz
cmp
icebp
adc
int
ret
xor
mov
pop
call
mov
mov
xor
ljmp
xchg
dec
mull
das
test
sbb
pop
insb
fs
in
test
dec
in
adc
sbb
das
scas
cmp
mov
fdivp
xor
inc
push
xchg
test
pop
arpl
outsl
sub
inc
jp
add
iret
outsl
push
test
push
jbe
push
add
sti
cld
sub
imul
imul
mov
inc
enter
lahf
mov
cmpl
fs
jo
mov
and
aad
test
push
rcl
xor
bound
sub
mov
sub
dec
mov
loopne
mov
outsl
dec
nop
hlt
push
and
mov
scas
lock
mov
add
loop
clc
shr
pop
adc
sub
loop
loopne
mov
cld
stc
mov
pop
test
or
inc
and
addl
std
dec
pop
movl
pop
jmp
scas
jnp
inc
pop
push
fwait
inc
sbb
sarb
cmp
fsubl
lds
aaa
cmc
dec
pop
int3
out
leave
dec
adc
daa
insb
test
cmp
or
dec
mov
push
arpl
fisttpll
test
leave
inc
dec
xor
cmpb
movsb
fs
pop
int3
xchg
lds
adc
mov
sti
mov
xor
xchg
div
lret
lods
mov
ja
push
js
hlt
add
lock
lods
push
push
inc
inc
push
jge
jo
cs
lcall
popf
xchg
inc
or
mov
jmp
insl
sbb
movsb
xchg
ljmp
fidivs
lock
pop
stos
jle
sbb
iret
push
in
test
mov
sub
shl
dec
push
jae
jmp
imul
in
js
mov
mov
pop
mov
popa
sub
cmp
daa
dec
inc
fmull
pusha
js
mov
in
lock
mov
loope
or
cmp
xchg
sub
adc
movsb
outsl
push
jle
adc
pop
and
shll
jg
jmp
pop
leave
cmpsb
mov
sbb
cli
movsl
push
bound
stos
in
jle
and
or
scas
mov
nop
stos
xor
push
inc
testl
xchg
pop
xor
pop
push
bound
pop
xchg
sarb
and
adc
fidivrs
sbb
jp
out
std
ficoml
cmpsb
adc
mov
in
stos
daa
das
and
xchg
aam
jg
in
cmc
pop
add
dec
sbb
fsubr
lds
push
dec
outsb
push
jl
add
jnp
das
mov
clc
sub
jo
mov
and
icebp
out
packssdw
push
xchg
shll
sarb
pushf
mov
aam
outsl
aas
rorl
pop
inc
cmpsb
add
fs
and
sub
xor
orb
jmp
dec
imul
in
imul
mov
sub
ss
data16
cli
je
cld
add
pop
sub
nop
xchg
pop
pop
lds
out
xor
mov
lds
push
dec
mov
test
sub
stc
out
pop
or
cmp
in
pop
push
gs
or
les
jmp
vunpckhps
mov
xor
add
addb
pop
inc
dec
sti
push
and
dec
nop
sahf
ds
pop
rclb
daa
xchg
repnz
xor
adc
add
inc
in
xchg
pop
cmp
mov
imul
ljmp
jmp
fsubp
je
inc
test
lock
sub
sub
dec
andl
and
lea
or
stos
adc
jno
xchg
sahf
or
xor
in
inc
push
icebp
fisttps
sbb
mov
lock
lods
movsb
xchg
cld
movsl
out
fdivp
xor
and
sub
xchg
sub
sbb
xchg
pop
addr16
xor
mov
dec
adc
xor
jns
mov
test
cmp
cmp
push
scas
xor
rolb
jl
outsl
push
push
lret
mov
sbb
imul
bound
push
lock
test
mov
int
insl
dec
and
loop
jb
das
or
imul
mov
sbb
dec
cmp
enter
adc
loope
inc
xchg
push
sbb
dec
push
sbb
sti
pop
xchg
jg
inc
sub
and
push
jge
aam
jnp
sbb
loope
cld
pop
gs
mov
in
and
jbe
pop
mov
sahf
imul
mov
lods
ss
in
push
stos
lock
mov
arpl
and
cmp
leave
imul
scas
in
jno
pop
outsl
sub
dec
push
clc
outsb
ljmp
xchg
lock
xchg
push
movsl
push
sub
push
and
jbe
addr16
ss
ret
xor
xchg
lods
repz
leave
or
testl
sub
repnz
pusha
movsb
sbb
clc
mov
imul
xor
sbb
addr16
sarl
and
sub
mov
inc
jb
sub
push
dec
xor
rol
inc
cmp
rorl
negl
cmpsl
push
mov
xchg
arpl
add
loope
lcall
rcl
lock
les
icebp
dec
sub
pop
lds
fucomip
shll
mull
and
mov
pusha
pop
xchg
xchg
pop
aaa
push
cmp
int
or
mov
cmpsb
imul
lcall
test
adc
mov
or
and
arpl
cld
cmpl
xor
inc
inc
and
imul
in
fidivs
arpl
imul
call
xor
inc
push
and
popf
mov
mov
mov
arpl
test
add
xor
out
icebp
int3
xor
pop
dec
pop
pop
imul
xchg
mov
js
movsl
mov
out
popa
repz
cltd
sub
dec
or
lds
dec
mov
andl
call
fisttpl
sub
mov
dec
xchg
test
mov
test
lahf
add
push
movsl
or
out
in
dec
imul
jae
ds
inc
dec
repnz
cmpsl
hlt
jle
sti
mov
add
pop
movsb
ret
stc
add
mov
pop
and
and
stc
inc
push
iret
ja
fcoml
xorb
inc
fcoml
cmpsl
mov
inc
sub
and
in
mov
aas
jne
call
xor
scas
sub
dec
lock
jmp
sub
mov
push
scas
pop
sub
xor
aam
jge
sub
adc
cld
and
add
adc
pop
push
mov
mov
daa
sbb
incl
imul
outsl
orl
cmp
mov
je
mov
and
jnp
xlat
add
xor
cltd
inc
push
or
push
add
cmp
in
mov
fdivl
jne
xlat
js
or
fcompl
addr16
cli
and
and
and
push
in
notl
lods
inc
or
cmpsb
xchg
dec
ss
pusha
dec
mov
xchg
movsb
aad
xchg
clc
push
xchg
xchg
es
mov
fiaddl
or
and
adc
sbb
inc
mov
fdivl
dec
mov
cmpsl
mov
dec
and
fcoms
test
xor
mov
pop
push
mov
cmp
ret
dec
fs
jg
xchg
jle
ret
push
xor
cmpsl
jnp
inc
mov
jbe
sti
cmpsb
xor
mov
xchg
dec
dec
mov
sub
xlat
adc
mov
sahf
jns
xor
push
addb
push
into
shll
icebp
mov
dec
cli
jmp
or
lds
xor
inc
ret
pop
jecxz
xchg
mov
sub
xlat
insb
cmp
sub
mov
push
xor
lock
cmpsb
mov
add
lock
repnz
rorl
mov
arpl
cmp
xor
adc
data16
pop
outsb
mov
les
push
xchg
out
ljmp
mov
sbb
scas
in
jbe
push
adc
sahf
int3
pushf
push
push
cmpsb
and
out
or
iret
loopne
adc
sbb
xor
mov
mov
inc
add
mov
ret
and
push
push
inc
ds
and
mov
mov
loopne
subb
inc
les
xchg
or
xchg
fldenv
mov
and
test
in
test
or
mov
inc
add
ds
sub
sub
and
cmp
jp
std
and
inc
jecxz
loope
and
cmp
push
mov
jg
cmp
inc
inc
sub
lock
mov
rol
inc
adc
add
mov
mov
out
or
xorl
mov
in
fs
insl
add
rolw
sub
mov
push
or
imul
shrl
jb
enter
rclb
pop
push
cmc
lods
jno
xchg
push
je
lock
or
loop
je
jmp
jns
orl
int3
lock
or
dec
pop
fcom
jecxz
jno
arpl
pop
fidivrl
jmp
sub
dec
mov
daa
dec
dec
ds
add
mov
aad
les
mov
popf
lahf
imul
imul
mov
jb
ljmp
adcl
push
jbe
ficoml
jns
mov
sub
lea
daa
icebp
or
bound
fwait
sub
pop
aas
xor
cmp
mov
mov
cwtl
or
insl
inc
mov
psubw
xor
push
push
pop
add
or
pop
inc
imul
push
add
dec
icebp
mov
xor
or
das
test
pop
out
stos
call
imull
mov
cmpsl
cmp
xchg
mov
jmp
sti
in
hlt
sbb
ss
adc
dec
push
adc
lds
dec
movsl
shrb
sub
ret
pop
dec
sahf
adc
loopne
inc
and
mov
sub
add
mov
insl
sub
clc
es
jo
dec
les
sbb
push
xchg
or
xor
jns
aaa
or
pop
inc
sub
stos
pop
mov
pop
cmp
or
mov
mov
into
aam
push
lea
sub
jae
ret
pop
jns
or
or
aad
cld
test
sub
adc
mov
fadds
addr16
cmp
or
push
cmp
ljmp
mov
arpl
jmp
mov
adc
lret
cli
sbb
cmp
pop
inc
fucomip
icebp
inc
or
xchg
data16
add
mov
cmova
iret
jns
push
pop
adc
xchg
mov
and
jne
cmp
pop
xor
movsb
imul
sub
std
dec
push
dec
ljmp
hlt
scas
pop
inc
or
dec
pop
ret
into
sub
movl
push
js
notb
lahf
enter
in
aam
jnp
mov
shlb
rcll
int
lahf
pop
push
testb
repz
mov
jecxz
mov
and
sub
jp
pop
xchg
aas
or
push
sti
inc
not
cld
arpl
cmpsl
lock
aam
fisttps
lret
push
cs
ret
sbb
lock
inc
pop
add
test
jle
or
lds
popa
jecxz
xor
jno
clc
cmp
inc
aam
jle
dec
cld
stos
in
jmp
rclb
repnz
pop
jbe
lods
cmpsl
dec
cmp
xchg
xlat
add
pusha
rcrl
into
dec
pop
lods
pop
mov
aad
pop
push
add
mov
enter
xchg
jp
outsb
enter
and
jmp
and
mov
push
mov
fstpl
nop
shr
cmpsb
xor
aas
or
push
cmpsl
ret
or
cwtl
inc
jno
xchg
mov
xchg
xor
mov
lods
or
rcr
xchg
mov
xchg
mov
out
sbb
aaa
test
test
cmp
sbb
inc
sub
push
cmp
rcrb
add
jne
push
sub
sub
stc
into
idivl
std
and
xchg
push
imul
pop
test
lds
jns
sub
jb
aas
lock
pop
inc
lret
fstl
nop
inc
mov
inc
sahf
sbb
lock
push
mov
gs
mov
push
pop
and
dec
mov
mov
add
xchg
aas
pop
fistps
sahf
lcall
in
call
add
push
test
add
sahf
pop
cmp
loop
in
xorb
loope
pusha
stos
push
push
jp
adc
mov
and
mov
out
push
pop
or
mov
inc
jp
mov
push
ljmp
jge
mov
clc
popf
fs
and
repz
sti
pop
push
addb
xchg
add
aad
icebp
mov
in
sbb
ja
or
lcall
add
xlat
xchg
shl
lods
gs
adc
inc
add
pop
filds
jmp
push
mov
inc
leave
dec
xchg
inc
mov
jne
movsl
mov
adc
inc
test
push
jg
jae,pn
mov
xchg
shlb
cmp
in
hlt
sub
jno
in
movsl
mov
adc
shr
pop
or
arpl
xor
lock
xor
movsl
push
or
hlt
pop
fdivs
cld
ffree
test
repnz
push
or
scas
xlat
pop
inc
shl
sti
inc
lcall
insl
add
pop
imul
xor
enter
push
hlt
jl
sbb
enter
lock
test
inc
pop
stos
adc
int3
mov
jmp
xchg
lds
loop
adc
shr
push
xor
xor
push
cmpsb
fldenv
xlat
pop
fyl2x
test
pop
cmpsb
push
insl
add
lods
xchg
push
xor
inc
pop
jp
andl
sub
mov
sub
je
data16
jmp
mov
movsl
in
jp
lea
sub
push
push
or
mov
arpl
stos
jno
dec
clc
and
adc
notb
adc
rolb
icebp
sub
pop
xor
push
aad
scas
lock
add
sti
cmc
or
notl
jp
adc
jge
sub
pop
pop
sarb
mov
nop
jge
fstl
adc
add
lods
loop
in
mov
sbb
push
jb
rol
inc
pop
inc
mov
jle
sbb
lds
leave
aas
stos
and
fs
pop
aad
push
insb
aaa
aam
dec
xchg
sub
cmp
jne
jmp
in
xchg
push
adc
lret
lock
lret
cltd
fs
test
jle
mov
clc
or
cmp
imul
sub
in
and
insb
dec
and
insl
in
xchg
or
inc
push
xchg
cltd
mov
inc
aaa
push
push
xlat
lods
sub
push
or
dec
loope
inc
mov
dec
pop
scas
cmp
sahf
insl
xchg
rcl
cld
rolb
clc
xor
push
or
jne
gs
adc
lock
cmp
rcll
scas
inc
in
sub
sbb
inc
sbb
jo
push
hlt
lret
mov
sahf
out
mov
jnp
mov
xor
xor
or
jmp
xor
movsl
addr16
push
cmp
xor
lds
pop
push
push
rcrb
aas
jb
xchg
and
scas
sbb
xchg
cmpsb
lock
inc
mov
push
sub
xchg
hlt
cmp
adc
xor
inc
adcb
pop
sti
sarl
add
lods
jnp
ljmp
sub
scas
movsl
movsl
lock
lea
pop
jno
popa
xchg
adc
lock
sbb
aad
sub
xchg
pop
pop
cli
cmp
jl
addl
lds
das
sub
leave
fisubrl
sub
mov
push
std
inc
mov
sub
cld
je
jg
gs
in
xor
in
shlb
lods
ljmp
jmp
push
push
push
fwait
xchg
cli
sub
adc
test
sarl
pop
aad
out
aaa
push
sahf
jg
into
mov
in
adc
jge
jmp
les
or
bound
mov
add
mov
jo
push
movb
dec
out
jbe
cltd
sub
xlat
stos
push
in
pusha
into
aad
inc
filds
sub
and
lods
mov
mov
in
mov
dec
xor
mov
out
inc
inc
sbb
and
cmp
rcrb
dec
push
movsb
lds
popf
mov
mov
xchg
cmp
rcr
inc
push
cmpsl
adc
push
cmp
sub
sub
adc
add
lahf
stc
pop
jmp
push
mov
scas
inc
jae
push
push
gs
jl
fiadds
icebp
jle
mov
sub
test
mov
inc
cmp
cmpsl
adc
sub
adc
adc
insb
push
sub
jnp
xchg
xor
in
popf
mov
inc
pushf
imul
lcall
push
in
dec
sub
ljmp
imull
les
sahf
jge
psubusb
in
jbe
pop
sub
scas
push
push
add
and
ficompl
pop
push
jae
in
add
cmpsl
cmpb
dec
sti
hlt
iret
cmp
lock
push
cs
ret
push
out
scas
fists
sub
scas
sahf
fldt
adc
out
pusha
mov
daa
dec
mov
or
sub
lahf
mov
repnz
xor
clc
cs
dec
fwait
orl
sub
xorb
mov
jne
and
addr16
push
lds
or
loope
pop
pop
or
lock
stos
sbb
cmc
add
cs
sub
push
lcall
mov
out
adc
xor
aaa
fwait
mov
mov
cmpsb
enter
sti
add
adc
pop
cmpb
in
xor
clc
xor
stc
test
cltd
pop
mov
and
jmp
cld
mov
pusha
push
xor
xlat
dec
sahf
mov
xchg
xor
data16
movsl
adc
mov
push
cmpsb
or
cld
jecxz
adc
popf
mov
fwait
movsl
pop
ss
out
call
dec
push
stos
dec
pop
pop
lea
mov
movsl
lock
ffreep
push
pop
or
sti
or
xchg
lcallw
aad
in
pop
mov
push
ljmp
sbb
addl
scas
or
loopne
cmp
push
call
test
and
popa
cmpsl
mov
mov
movsb
fidivrs
push
jle
lods
sahf
int3
mov
push
fistpll
add
sbb
xchg
sub
in
xchg
add
je
movsb
xchg
mov
gs
adc
out
jmp
pop
push
lock
stos
jbe
jno
and
inc
lds
push
dec
test
fdivl
sahf
lds
dec
cmp
addr16
pusha
icebp
jnp
lock
dec
shl
fdivl
xchg
clc
test
cmpsb
or
mov
add
data16
jbe
loop
adc
jmp
fldcw
ja
in
dec
ljmp
inc
in
xchg
rcrl
dec
mov
cmp
inc
mov
cld
clc
push
insl
xchg
shrb
test
or
rorl
add
sub
xchg
subb
das
adc
or
push
pusha
out
sbb
outsl
psrlq
mov
push
push
out
cmp
xlat
out
outsl
ret
mov
add
and
pop
jl
inc
data16
xchg
fwait
xchg
dec
mov
or
addl
add
dec
sti
cltd
mov
lea
xlat
pop
add
dec
xchg
out
sub
push
stos
or
nop
mov
sbb
rorb
or
call
mov
and
shrl
pop
sub
jg
xchg
mov
dec
gs
push
or
insl
jmp
adc
dec
pop
sti
mov
add
jne
mov
and
stos
xchg
push
cmp
push
cmpsl
loopne
hlt
addr16
in
mov
fcompl
sarb
adc
mov
xor
dec
mov
sbb
inc
jnp
test
jle
xchg
movsl
lock
add
add
xlat
sbb
mov
rcl
xchg
ja
push
pop
mov
mov
sbb
gs
bound
shlb
mov
sub
ret
jnp
es
lock
mov
icebp
xchg
cmp
push
cmp
pop
imul
or
in
inc
mov
adc
icebp
jb
iret
jge
int
sbb
pop
cmp
test
cmp
xlat
jg
add
or
rcrl
jbe
push
jne
dec
stc
xchg
xor
push
add
repz
outsl
dec
inc
scas
jl
add
cmpsl
add
inc
jb
add
loope
les
rcr
pop
jnp
mov
add
fdivs
sahf
pusha
mov
push
cli
inc
mov
sahf
cld
outsb
xor
pop
stos
clc
push
xor
or
xchg
push
sub
fcmovnb
xchg
xor
push
loop
mov
jmp
sub
jmp
lret
sub
sarl
jl
in
inc
sarb
push
push
add
ljmp
push
jae
xor
and
popa
enter
es
jg
jp
xchg
push
ja
dec
test
dec
test
flds
xor
jl
rcl
cmp
mov
movsl
dec
push
pop
cmp
nop
rolb
clc
adc
stos
shl
sbb
mov
sbb
loopne
iret
imul
mov
xchg
push
lret
imull
ror
sub
mov
sub
xor
mov
sub
addb
pusha
sahf
movsl
jle
sbb
movsl
lock
js
xchg
out
mov
jbe
pop
sbb
dec
mov
fmulp
push
out
push
ds
xchg
jl
mov
pop
pusha
lock
int
pushf
cmpsl
push
loope
data16
mov
iret
dec
daa
or
inc
lods
repz
incl
sti
sbb
fisubl
setl
push
imulb
mov
pop
arpl
insl
movsb
shl
xor
js
lret
dec
aam
out
sbb
inc
pop
add
cli
lock
mov
fbstp
xchg
ret
dec
sub
test
dec
push
std
mov
vshufpd
lods
jle
cmp
and
movsl
pop
or
cmp
inc
jge
sar
sub
rclb
sub
mov
or
mov
sub
mov
mov
popa
sbb
imul
test
or
mov
sbb
dec
clc
sub
sub
pop
ret
sti
dec
loop
push
push
jns
adc
xchg
mov
out
roll
adc
ror
mov
mov
sahf
test
sub
outsl
lcall
or
push
out
cmpsl
imul
outsl
adcb
xchg
scas
lods
ljmp
sbb
or
mov
sub
pop
push
and
push
shlb
sub
mov
lret
test
mov
imul
fistl
and
je
cmp
jg
cmpsb
pop
leave
outsl
mov
cmp
sub
pop
dec
stc
sub
pop
dec
push
sub
cmpsl
call
add
mov
icebp
jmp
and
sub
testl
push
inc
daa
push
sub
pop
mov
or
cmpsb
adc
jne
xor
jg
fwait
stos
sub
sub
jbe
imul
mov
mov
sub
ret
xchg
lods
std
jle
fadd
push
add
dec
mov
dec
pop
xchg
mov
sub
cmp
dec
es
xchg
sub
pop
jns
add
xchg
je
shrb
jb
out
and
lds
sub
jno
arpl
mov
sub
xchg
xchg
jl
mov
push
lret
mov
lea
lret
into
ljmp
movsl
mov
mov
call
lea
sub
cltd
ja
xor
or
xor
jne
fstpl
xchg
inc
pushf
rcrl
lahf
pushf
sbb
ja
inc
lret
out
faddp
sub
stos
shlb
sarl
or
rcrl
imul
cmp
jge
mov
pop
inc
or
cmp
es
and
mov
clc
pop
addr16
ljmp
add
arpl
cmpsb
idivl
sub
in
fwait
cmp
add
fsubs
into
mov
jle
loopne
pop
rcrb
xchg
fldenv
aad
xor
pop
int
pop
inc
sub
sub
mov
mov
pop
mov
inc
fisubl
jle
push
idivb
inc
imul
das
jmp
movsb
xchg
test
out
inc
xor
mov
sub
lock
dec
fisubrl
nop
ja
dec
or
cli
cld
and
push
adc
les
mov
cmp
or
pop
cs
push
mov
mov
movsl
gs
push
leave
mov
jmp
cmpsl
outsb
pop
arpl
jge
in
inc
pop
xchg
xchg
or
jno
cmp
sbb
jmp
push
push
pop
xor
jno
fs
fbstp
pop
sub
scas
dec
loop
ds
push
ret
pop
pop
push
inc
int3
pop
cmpsb
cmpl
push
and
test
cmp
orl
xor
push
lret
in
sub
imul
pop
push
push
inc
push
push
inc
icebp
pop
adc
scas
push
pop
pop
and
leave
sbb
xor
jae
dec
xchg
mov
pusha
add
paddsb
jle
popa
ja
imul
sub
ret
popf
shll
push
pop
data16
sub
dec
sbb
arpl
shl
jecxz
push
cmp
push
inc
push
cmpsl
inc
lock
push
add
lods
sbb
movsl
mov
mov
sub
mov
jp
xor
leave
cmpsl
leave
lock
adc
cmc
arpl
cmpsb
push
aam
mov
lock
xor
cmpsb
test
lock
sbbl
sbb
add
ret
lret
pop
aad
add
jg
movsl
fwait
pushf
xchg
push
jecxz
sub
fdivrs
ret
sub
xchg
push
movsb
repz
lods
lods
mov
lahf
mov
adc
jne
aaa
cs
sbb
xor
out
sbb
addr16
or
in
sub
pop
sub
ret
popa
lods
clc
lret
jge
loopne
and
xor
addl
pop
mov
cmp
push
or
ret
cmc
inc
imul
pushl
repz
push
into
sub
sub
pop
xor
pop
inc
shrl
add
icebp
stos
mov
mov
out
dec
add
mov
mov
hlt
shll
sbb
push
mov
cmp
shlb
fnstenv
inc
repz
pop
aam
mov
add
adc
fcmovnu
lods
inc
stos
pop
sbb
adc
arpl
push
jnp
sahf
jmp
shll
rcll
inc
clc
test
lcall
int
inc
mov
jmp
jno
or
cmp
add
repnz
test
and
out
jp
ss
call
in
insl
into
or
mov
ljmp
scas
pop
insb
jne
into
in
out
jle
rcrb
aad
push
fisubrl
in
mov
push
push
scas
stos
xchg
in
ret
out
scas
xlat
fdiv
xor
sahf
icebp
adc
and
ficomps
lcall
xor
sub
addr16
sbb
addr16
outsl
jae
push
loope
mov
inc
push
cmp
std
rcrl
cmpsb
dec
dec
into
in
push
inc
xchg
imul
leave
or
xchg
sbbb
lahf
inc
xor
dec
leave
adc
cmpsb
mov
xchg
xor
jns
push
imul
daa
sbb
daa
movsl
add
sub
gs
pop
xchg
mov
mov
cmp
fisttpl
ds
cmp
mov
hlt
nop
fwait
loope
push
adc
stos
push
jmp
lock
xor
pop
orb
in
pop
test
decl
pop
inc
iret
lods
mov
cmpsb
push
mov
dec
push
movsl
mov
aad
dec
or
addl
push
inc
lods
or
mov
pop
mov
rcll
and
mov
fwait
add
rorb
xor
cmp
nop
cmpsl
mov
inc
out
dec
mov
lods
movsb
lahf
push
dec
mov
dec
roll
xor
cld
jb
push
outsb
add
push
push
or
or
mov
mov
sub
lahf
adc
rcrb
push
leave
xchg
in
pop
adc
push
xchg
roll
add
push
movsb
mov
int3
push
cmp
inc
push
xor
xor
push
xor
enter
xlat
push
mov
pop
cs
in
or
pusha
dec
scas
mov
in
xor
lds
addr16
and
fcomip
mov
rcll
cmpsb
addr16
repnz
stos
xchg
pushf
fbld
lock
inc
jmp
iret
mov
jge
jae
loopne
mov
push
in
mov
inc
ret
rolb
xor
xchg
rorb
cmp
cld
sbb
push
fucomi
push
mov
jmp
and
lahf
cmp
dec
ja
pop
cwtl
in
shlb
mov
stos
movsb
cmpl
cli
pop
xor
push
or
sub
sbb
fs
lea
jmp
mov
inc
mul
add
or
or
scas
or
mov
std
add
in
pop
cmpsl
pop
sbb
add
repnz
mov
in
mov
inc
popa
mov
cmpsl
shl
std
inc
adc
sub
test
dec
push
xchg
pop
mov
push
out
fistpll
jmp
lret
out
cmpb
dec
in
sub
sti
mov
jge
pop
fwait
or
adc
or
xor
xor
enter
je
dec
mov
sbb
mov
jle
ffree
bound
pop
mov
push
inc
sbb
cmpsb
or
push
dec
xor
bound
out
pop
mov
stos
sbb
add
jnp
enter
xor
addr16
xchg
je
xchg
call
cld
push
or
inc
xchg
inc
mov
cmp
cmp
cli
ret
mov
lock
in
jge
test
sbb
push
and
notl
inc
lret
push
sbb
xor
test
loope
nop
dec
push
sbb
aas
ret
les
adc
cmpsb
sbb
psrld
add
data16
inc
jmp
jmp
loopne
dec
inc
dec
pop
push
lahf
cmpsl
insl
adc
sub
sbb
movsb
jnp
pop
in
mov
outsl
enter
les
adc
jo
add
arpl
push
call
or
jmp
enter
cld
sbb
lods
xchg
and
sbb
xor
in
jmp
or
jmp
sahf
push
push
or
jmp
daa
adc
push
push
loopne
lret
into
mov
int
shlb
sbb
cmpsb
push
cmp
pushf
adc
repnz
sub
cmpsl
aaa
jno
leave
lods
add
aam
stc
pop
jnp
sbb
mov
das
lcall
dec
std
mov
inc
int3
in
aas
mov
inc
jl
jl
and
subl
jle
mov
pop
xor
push
lahf
fiaddl
scas
mov
sub
sub
sbb
pushf
and
adc
mov
hlt
lds
cs
inc
in
notl
pop
adc
rcll
mov
jb
mov
xor
xor
mov
test
jmp
pop
jle
mov
xor
fcmovnb
aas
mov
mov
movsl
xorb
cmp
fwait
add
mov
xchg
mov
adc
sub
cmp
out
into
push
mov
aas
cmp
mov
mov
leave
lock
adc
adc
nop
or
mov
push
lock
je
xor
in
push
outsl
sbb
repnz
int
xor
xor
cmp
jne
cs
lea
out
dec
in
inc
xor
xchg
push
inc
cltd
add
xlat
push
mov
mov
cmp
in
mov
mov
sar
lret
xor
sar
jns
lock
sti
dec
mov
xor
stos
add
add
xlat
cwtl
xchg
jbe
dec
fldl
lock
xor
push
shll
mov
fcomi
mov
cli
xchg
shr
das
and
cmpsl
jmp
dec
or
pop
jle
enter
cmpb
mov
inc
xor
dec
add
inc
lock
cltd
mov
lock
mov
push
push
sarl
aam
aad
add
movsl
push
ss
cmp
inc
bnd
push
cmp
pop
cmpsl
ljmp
cli
cmp
jne
dec
mov
add
lock
stos
or
ljmp
push
pop
bnd
out
add
add
xchg
push
popa
dec
fbstp
rcl
cmpsl
shll
push
sub
adc
push
mov
adc
int
bound
xchg
inc
jge
jmp
fadd
push
pop
push
outsb
xor
les
xchg
mov
mov
or
test
push
inc
and
xor
in
lods
dec
imul
xchg
out
jecxz
lock
inc
fs
bound
sbb
adc
fisttpll
push
test
es
cmpsb
ret
in
jp
test
inc
imulb
and
jle
stc
sbb
cmp
outsl
data16
loope
xchg
cmp
in
inc
ret
out
ja
lock
jns
push
hlt
packsswb
inc
xchg
pop
xchg
gs
daa
lret
mov
pop
les
push
roll
xlat
push
outsl
sbb
icebp
inc
jp
mov
cmc
jmp
push
pop
cli
push
add
dec
dec
push
ja
sub
leave
mov
sub
leave
lret
cmpsl
inc
xchg
or
div
sbb
lret
push
aas
dec
jl
add
mov
test
and
loopne
sub
rorb
dec
mov
jecxz
popf
adc
mov
andb
dec
and
lock
jb
rcrb
lds
push
sub
ficompl
mov
cmpsb
adc
inc
lock
inc
pop
sub
or
repnz
push
rorl
xchg
or
inc
mov
sbb
xchg
push
xchg
aaa
orb
pop
mov
inc
enter
int3
cmp
pop
shll
pop
add
inc
adc
cmp
xor
add
push
in
dec
rclb
sahf
cmp
push
or
enter
orl
sub
inc
rorb
cmp
lods
adc
or
rclb
les
or
fwait
dec
xor
cli
jp
jns
loopne
dec
xchg
mov
pop
lock
out
add
inc
push
cmp
ret
xor
rdtsc
pusha
in
in
pop
lret
lea
mov
jl
xchg
jecxz
bound
add
mov
pop
push
push
mov
push
addr16
sub
push
stos
stos
pop
cmp
mov
cltd
insb
je
imul
fcomps
jmp
xchg
ljmp
stos
mov
aam
aam
sub
push
clc
jp
scas
push
pop
incl
leave
mov
popf
mov
in
movsl
gs
dec
jle
aad
jg
loop
cmp
and
xor
lock
jne
call
push
adc
repnz
push
mov
xchg
imul
stc
sbb
inc
jmp
leave
add
xchg
or
ja
into
xor
cmc
cmpsl
mov
inc
push
mov
and
andb
fidivrl
lcall
sbb
shr
fadds
xchg
lock
mov
push
sbb
add
sub
andb
push
and
sub
or
lds
lock
add
mov
cmc
mov
sub
pop
lret
push
ljmp
and
dec
push
sbb
aas
cwtl
out
ds
fistps
cli
pop
sbb
je
inc
cld
mov
stos
sar
push
xchg
pop
xor
push
in
popa
jbe
mov
xchg
push
js
mov
and
jle
jae
jp
mov
das
mov
pop
xchg
dec
push
std
or
pop
push
lea
cmp
push
xor
outsl
inc
sub
shll
pop
aad
call
sti
jecxz
inc
test
insb
and
pop
jae
pop
dec
rclb
data16
loop
xor
or
call
dec
or
testl
das
xchg
push
cmp
les
addr16
lock
js
sbb
lods
mov
xchg
inc
sub
scas
sub
push
xchg
cmc
stc
pop
daa
push
pop
inc
aad
xchg
inc
cmpsl
inc
pusha
mov
mov
jl
outsl
xor
pusha
pop
aas
sub
cltd
mov
and
mov
stc
xchg
push
fwait
scas
xchg
pop
xor
jl
dec
sub
mov
lds
adc
or
sbb
lret
stc
fnstcw
cltd
xchg
inc
in
pusha
mov
lock
ljmp
sahf
inc
jg
pop
xor
jp
pop
out
mov
mov
jp
inc
dec
xor
jne
in
test
sub
sar
mov
loop
enter
jg
push
mov
movsl
pop
and
and
jge
inc
pop
sub
cmpsl
xor
in
push
cmpsb
push
pushf
xchg
inc
imul
les
shl
inc
and
fwait
push
mov
fsubl
xor
shrb
jp
mov
adc
mov
sub
fiadds
or
dec
and
idivb
fwait
pop
jp
push
adc
jmp
aaa
jns
mov
mov
inc
stos
and
mov
sahf
pop
inc
xor
jne
scas
pop
scas
inc
push
or
xchg
aad
sub
mov
clc
lcall
inc
movsl
mov
cwtl
sahf
mov
cmpsl
out
xchg
inc
fwait
push
or
pop
push
pusha
ja
pop
inc
pusha
push
movsb
inc
scas
and
sub
fldl
out
pop
pop
ljmp
lea
cld
mov
lods
inc
cwtl
adc
mov
cmpsb
ja
sar
add
lods
push
xchg
dec
cmp
inc
in
bound
sub
scas
jb
pop
jecxz
insb
adc
jb
mov
push
sbb
push
dec
mov
push
adc
adc
in
sub
pop
out
cli
pop
subb
pop
ret
hlt
add
dec
adc
inc
hlt
sahf
repz
sahf
shl
sbb
aas
xlat
aad
sub
jmp
repz
pop
je
xlat
ficomps
orb
shll
loope
movsb
xor
push
add
sahf
sub
arpl
mov
testl
stos
pop
push
mov
dec
ret
jle
or
sarl
mov
cs
fcmovnbe
jl
sub
adc
subb
lret
push
repz
stc
fiaddl
addr16
add
push
ret
sar
leave
adc
mov
xor
mov
mov
lahf
popa
imul
aaa
inc
lock
aad
les
imul
inc
xchg
mov
mov
addr16
ret
jp
arpl
std
xchg
sbb
adc
repnz
xor
popf
daa
dec
sbb
repnz
cmpsl
movsl
pusha
push
push
out
jp
sub
in
aad
outsl
push
int3
adc
jb
xor
in
fs
stos
and
sbb
lea
stos
arpl
sub
xchg
adc
out
mov
xorb
xchg
cmpsl
dec
adc
jnp
push
out
dec
ret
xchg
inc
add
psubw
push
outsl
jmp
add
add
and
popf
sub
sub
inc
adcl
xlat
push
mov
dec
inc
mov
addl
imul
mov
sub
xchg
jmp
jecxz
inc
push
scas
inc
jl
cwtl
push
leave
pop
dec
xor
add
repz
into
xor
scas
xor
pushf
inc
fists
or
or
mov
pop
xor
lock
inc
xlat
movsl
fstpt
lods
jo
xor
cmpsb
xchg
in
repnz
dec
fstl
loope
push
xchg
ja
xor
sub
pop
iret
xor
in
or
out
jno
mov
lret
pusha
xchg
pop
adc
pop
lcall
mov
jle
dec
ss
lds
movsl
inc
pop
xchg
inc
sub
movsl
xor
int3
fcomps
sahf
int
pop
fs
xchg
lods
pop
sahf
jmp
cmpsl
push
mov
adc
and
dec
out
imul
ja
dec
and
iret
inc
ds
push
inc
add
xchg
xor
ja
loope
mov
xchg
mov
enter
sbb
cmp
dec
sub
jmp
ficoml
cld
push
xchg
pop
or
sahf
out
loop
lods
push
movsb
inc
push
cmc
icebp
sub
dec
mov
add
lahf
popa
insl
sub
ficoms
ja
mov
orl
push
dec
sbb
and
push
jle
or
dec
scas
push
rcll
add
dec
jo
sahf
xor
xchg
es
mov
push
inc
adc
sbb
mov
sti
xorb
adc
lock
mov
fsubs
jb
push
aam
xchg
jmp
cmp
shrb
push
les
cli
xchg
sti
xlat
pop
cli
add
push
cmp
push
adc
adc
js
pop
mov
fists
push
divl
xlat
lcall
test
lds
mov
loope
or
cmp
xlat
push
or
loope
add
mov
push
cmp
sbb
jp
dec
push
leave
sub
iret
pop
cli
or
adc
int
mov
xchg
int3
call
xchg
sub
aam
arpl
clc
js
data16
xor
jno
shlb
sarb
dec
iret
cmc
test
adc
inc
mov
jmp
dec
rolb
push
cmpsl
outsb
iret
mov
pop
mov
lea
and
mov
fcoml
or
movsl
sahf
hlt
sbb
sub
ret
push
in
or
adc
mov
cmpsl
jb
fldl
fs
jo
mov
or
hlt
sub
mov
xlat
jae
and
ja
push
lock
sub
cmp
gs
ds
or
pop
mov
sbb
xor
fnstenv
fucomp
shlb
jl
cmp
xlat
in
inc
xchg
or
sub
jle
inc
push
cmp
push
stos
cmp
sub
jecxz
sbb
inc
and
aad
fs
ja
out
jge
icebp
xchg
push
pop
mov
sub
lods
sbb
ljmp
xor
and
cmpl
jb
mov
mov
flds
adc
decb
je
add
fdivp
push
sbb
push
dec
inc
pop
enter
cmpsl
pop
xor
repz
xor
cmpb
mov
adc
in
and
xor
and
push
call
add
stos
test
jmp
ds
xchg
out
leave
sub
cmp
rclb
mov
jecxz
push
dec
xchg
leave
mov
or
aam
fcomps
or
movsb
xor
adc
stos
sahf
push
add
jb
jle
pop
jmp
adc
scas
movsl
mov
and
nop
pusha
sbb
lock
push
or
out
push
sbb
sbb
add
or
adc
gs
cwtl
fistpl
push
cli
pop
ss
push
dec
test
aam
jns
ljmp
cltd
inc
mov
inc
mov
int3
out
mov
pusha
jae
sbb
xchg
xchg
fsts
mov
xor
pop
dec
jecxz
addr16
pop
pop
add
pop
and
iret
sub
push
push
enter
push
test
mov
and
xor
xlat
daa
cmp
je
push
loope
and
inc
into
repz
aad
aad
mov
sti
push
cmp
xor
mov
hlt
test
xor
out
xor
hlt
inc
mov
pop
push
pop
in
xor
in
test
in
xchg
in
scas
push
int3
lock
mov
jg
cmp
aas
jb
jp
sub
fs
cmp
mov
into
xor
xchg
pop
fldcw
xchg
int
mov
mov
aad
pop
cld
add
test
mov
int3
mov
dec
out
push
cmp
push
jne
mov
pop
test
in
call
out
and
shr
aad
lock
rorl
inc
xchg
adcl
dec
stos
mov
aam
adc
mov
sbb
lods
lods
push
data16
stos
pop
dec
pop
push
inc
xchg
adc
pop
add
mov
add
mov
shrb
and
mov
in
pop
cmpsl
lock
lret
inc
adcb
dec
lock
lret
imul
adc
adc
les
xor
in
xor
lock
adc
lock
arpl
fwait
cmp
imul
ljmpw
xor
push
xchg
adc
ret
push
mull
adc
pop
xchg
xor
or
call
movsb
cmp
sub
stos
jp
jae
out
pop
dec
push
sub
popa
ds
in
mov
dec
arpl
test
jmp
pop
inc
adc
mov
sub
out
pop
pop
xor
push
minps
cmp
sub
inc
sbb
adc
sbb
inc
push
pop
mov
repnz
mov
pop
es
jg
mov
test
loope
jg
xor
mov
repz
sub
jbe
popa
mov
mov
sub
add
jb
addr16
mov
aas
idiv
dec
dec
jp
sbb
pop
lock
mov
movsl
insb
sub
sbb
xchg
mov
cmpsb
pop
das
jmp
mov
lock
sub
sti
hlt
jmp
xchg
dec
mov
arpl
jg
dec
jns
xor
xor
and
xor
out
xchg
data16
lret
test
test
les
aaa
clc
jbe
mov
pusha
cmp
sub
std
mov
lcall
lds
inc
into
jnp
add
sub
aaa
jg
add
push
enter
add
adc
fstl
add
ljmp
frstor
push
push
adcb
ror
push
ja
mov
or
add
lds
xchg
push
fdivrl
mov
or
and
xchg
mov
in
or
inc
add
jl
inc
pop
xchg
lock
xlat
fs
cmp
scas
push
pop
movsl
jp
loope
inc
mov
mov
or
xor
fstpt
inc
lret
mov
std
pop
cmp
and
aad
add
sbb
dec
dec
jle
jl
sahf
iret
xchg
lahf
incl
mov
xor
les
in
pop
adc
push
xchg
adc
shll
mov
pop
xor
addr16
out
icebp
addr16
aad
lock
jns
mov
jo
scas
outsb
testl
fisubs
sbb
test
in
imul
xchg
xor
cmpsb
stos
sbb
pusha
xor
mov
fcoml
dec
cmp
rcr
push
cmp
dec
or
enter
movsb
lods
xor
push
lock
dec
or
mov
repnz
repz
cld
jb
xchg
dec
out
ror
lret
jmp
pop
stos
sbb
lds
xchg
xor
inc
lock
in
and
lods
cld
xlat
sbb
rorb
push
inc
xor
inc
xchg
sahf
dec
or
pop
call
sbb
push
inc
lock
inc
push
insb
inc
push
mov
sbb
mov
data16
dec
pxor
xchg
ss
jb
adc
loopne
sbb
scas
imull
loopne
ss
mov
rorb
in
je
xchg
mov
jge
add
aam
clc
test
cmp
inc
shlb
in
shlb
mov
test
gs
push
mov
push
pop
in
stos
or
inc
movsl
inc
or
inc
fndisi(8087
fistpl
lret
push
out
lods
xor
pop
ds
mov
jmp
inc
xchg
jae
xchg
shl
addl
inc
and
dec
jbe
aad
lock
dec
xchg
arpl
jle
imul
cmpsb
pusha
gs
pop
and
lock
arpl
inc
mov
mov
cmpsl
inc
lret
sub
dec
jmp
or
add
int3
test
inc
mov
in
add
adc
test
in
mov
lock
fisubl
xchg
out
das
roll
arpl
mov
lcall
pop
add
mov
sarl
push
push
test
jne
movsl
pop
negl
push
adc
lds
or
sub
aaa
or
and
icebp
hlt
xor
leave
stc
mov
inc
lock
cmp
in
sub
push
jb
mov
inc
fisubs
movsl
pop
jmp
loope
push
imul
adc
shlb
mov
inc
mov
jmp
mov
subl
xor
inc
sub
cmpsl
xor
shl
pushf
in
sub
add
inc
jecxz
push
jne
je
arpl
inc
xchg
xchg
pop
mov
jecxz
not
mov
cmp
ljmp
int
push
mov
sub
shrl
sub
inc
jmp
push
lds
mov
push
pop
pop
adc
test
add
imul
add
test
xor
or
cmc
loopne
sbb
or
pop
inc
xchg
lea
out
cmp
dec
insl
push
mov
and
data16
mov
fsubrl
rcll
jae
out
mov
insl
push
clc
cmp
aad
pop
mov
pop
add
sub
std
mov
xor
push
mov
sub
mov
mov
call
in
repnz
add
and
sahf
aaa
aam
sbb
sbb
dec
sbb
outsb
ret
xor
cmc
mov
leave
dec
inc
mov
lods
pop
jmp
pop
or
or
movsb
out
lock
add
xchg
and
xor
lea
inc
fsin
pop
dec
push
xlat
jmp
cmp
es
cld
xchg
jnp
xor
movsl
inc
sarl
repnz
inc
test
repz
push
jo
push
add
aas
rorl
sbb
sub
push
and
mov
into
shrb
xchg
jmp
inc
in
aas
jmp
cmp
dec
mov
inc
xor
pop
sub
inc
sbb
sti
cmpsl
cmp
fsubrs
mov
clc
lds
pop
gs
push
punpcklwd
arpl
push
xor
lock
sti
lds
jg
inc
add
dec
push
icebp
rcrb
inc
dec
dec
jmp
aas
dec
push
mov
dec
addr16
jecxz
push
mov
mov
je
out
cmp
fsubl
cld
jl
xor
roll
movsl
lock
fstps
in
sub
mov
mov
in
xor
stos
pushf
mov
push
mov
cmp
add
out
dec
bound
and
stc
sbb
lods
sbb
or
test
mov
mov
sahf
inc
shrb
call
xor
rcl
out
pushf
push
xchg
mov
jmp
adc
sahf
pop
leave
in
lret
repnz
jmp
dec
aaa
xor
fidivrs
clc
fcomps
cmp
dec
pop
roll
inc
in
lahf
adc
ret
in
sahf
adc
mov
sub
cmpsl
dec
fstpl
or
iret
ss
xor
mov
sub
test
lock
sbb
fs
call
pop
les
movsl
xchg
push
fisubrs
stc
push
das
jo
pop
ds
pop
fidivl
leave
push
es
or
aam
int
cmp
mov
fiaddl
ljmp
jbe
lods
adc
mov
into
cmpb
jp
ljmp
ret
cmp
bound
inc
push
mov
loopne
xor
cmpsb
lcall
push
jno
xor
jnp
mov
add
leave
add
std
adc
sub
pushf
inc
mov
or
adc
imul
pop
sub
mov
mov
fmull
or
xor
call
pop
scas
push
mov
lret
xchg
inc
xchg
fwait
sub
xchg
ret
outsb
jg
aad
sbb
clc
je
xor
roll
aam
popa
mov
stos
jb
cltd
outsl
in
add
sbb
popf
jnp
test
mov
jle
inc
push
mov
mov
ds
xor
shll
jns
mov
push
and
sub
inc
sahf
push
xor
lret
les
pop
jne
lock
xor
fstl
jge
stc
scas
negl
fistps
push
in
pop
inc
shll
pusha
sbb
into
test
or
sbb
mov
popa
fdivl
mov
in
xor
push
aad
iret
in
cs
out
in
adc
pop
sub
add
cmp
inc
scas
jmp
xchg
add
js
mov
rclb
xor
dec
std
mov
hlt
jnp
stos
cs
enter
pop
std
jle
jle
aam
pusha
push
lock
pop
xor
push
mov
cmpsl
fs
dec
xchg
cs
cmp
pop
imul
cmc
mov
pusha
jl
sub
jae
leave
inc
jl
gs
movsl
xor
sti
jno
testl
mov
shrl
jne
adc
mov
pusha
mov
inc
push
cltd
inc
or
inc
cmp
mov
fs
cmp
lds
sbb
push
cmc
lods
stos
popa
cs
addb
bound
notb
mov
lods
int3
aas
outsb
inc
adc
push
mov
dec
mov
mov
sub
pop
push
aad
out
sahf
xchg
lock
jg
loope
lret
pop
adc
dec
cltd
adc
dec
jb
ljmp
and
scas
scas
or
ds
mov
push
inc
sub
ss
and
in
insb
imulb
or
ret
loope
bound
pop
xchg
flds
mulb
dec
lock
mov
dec
dec
pop
sahf
inc
pop
lods
rcrl
movsl
test
jbe
or
das
inc
inc
xchg
nop
pop
add
sub
jecxz
int3
jae
dec
mov
shrb
push
cmp
and
cli
or
cmp
jmp
cmpsb
sub
or
lds
xorl
daa
adc
mov
enter
fs
stos
xor
push
fstps
and
or
fcoms
sub
sub
or
sub
xor
mov
pop
sahf
or
jmp
jp
pop
negl
mov
das
popa
adc
pop
ret
decb
inc
and
insl
sub
push
mov
pop
adc
rorb
push
sub
clc
pop
pop
cwtl
ljmp
ficoml
xchg
jno
insb
xchg
fdivrl
sbb
pop
hlt
fcmovu
cmp
stc
sahf
dec
fildll
outsb
lret
sahf
xchg
test
fmull
iret
cmp
pop
imul
sti
cmp
pusha
sbb
jge
inc
lock
adc
in
xchg
stos
lds
pop
jp
mov
push
xchg
and
jb
pop
or
cmp
xchg
sub
lea
mov
mov
pop
jle
loop
xchg
jp
jmp
push
adc
xor
cmp
lock
aad
xchg
dec
xor
imul
adc
xchg
inc
arpl
loop
mov
nop
imul
stos
sti
xchg
les
arpl
imul
mov
fwait
ret
fidivrs
xchg
out
cmp
mov
cmp
inc
cmp
lock
adc
test
push
jg
sbb
or
je
inc
mov
push
cmpsl
cmp
push
xchg
sbb
jb
aam
mov
mov
outsl
rcll
insl
and
xor
jnp
push
iret
cli
push
ljmp
out
add
rorb
cmc
adc
cmpsl
push
xchg
lock
cmp
mov
out
dec
adcb
jmp
rcrb
aad
daa
and
and
jb
push
pop
and
mov
imul
rcll
setnp
push
mov
js
nop
ljmp
dec
jle
jbe
jg
iret
xor
mov
movsb
movsl
or
mov
fnsave
lock
push
in
lods
mov
xchg
dec
mov
pop
shl
inc
jnp
test
add
sub
lock
imul
jns
es
test
out
pop
sbb
ljmp
enter
pop
push
pop
in
roll
push
xlat
cs
dec
into
fucomp
stos
xor
es
repz
repz
pop
stos
mov
pop
das
mov
icebp
jg
mov
sub
mov
daa
loopne
sub
xor
loopne
jmp
dec
sbb
lret
xor
lods
jg
loop
cli
andnps
fmuls
pop
inc
aam
ret
push
inc
sub
lock
mov
jb
mov
aad
scas
rolb
fwait
lcall
fstl
movsb
lock
jp
sbb
push
je
cmp
jl
cmp
push
imul
push
sarl
cmpsl
test
adc
cmpsb
in
mov
out
mov
jle
add
subl
jecxz
push
int3
lcall
jne
xor
mov
stos
inc
insb
mov
cwtl
stos
in
data16
push
sub
xchg
jb
xor
pop
push
mov
mov
xlat
lds
xchg
fisttpll
shrb
mov
aad
cmc
outsb
fidivrs
loopne
sbb
sub
mov
cmpsl
stos
ja
xor
ljmp
adc
mov
sbb
shrl
sub
pop
xlat
test
xchg
inc
aad
inc
push
add
lods
lahf
inc
pop
push
pop
lret
cmp
adc
dec
push
adc
adc
imul
or
push
and
xchg
mov
add
mov
in
movsl
rcrb
xor
icebp
mov
xor
es
adc
inc
out
lock
aad
sub
mov
mov
push
sbb
std
push
jp
rol
add
loope
stc
pop
sarl
and
mov
ja
jne
xor
cs
xor
mov
test
mul
ljmp
push
or
divl
sarl
add
xorb
mov
stc
nop
out
or
xor
mov
ljmp
jp
ja
push
shll
sbb
stos
push
out
cmp
stc
inc
mov
shrb
shrl
std
icebp
cmp
xor
test
test
imul
scas
sahf
push
hlt
cmpsl
leave
push
leave
jp
mov
jne
cmpl
jns
aam
mov
sub
pop
xor
scas
hlt
push
outsb
cmp
pop
test
test
push
xor
or
adc
pushf
lds
imul
lahf
cmpsb
and
cmp
lret
and
pop
push
mov
cmp
sub
xchg
loope
insl
sub
into
mov
ss
xchg
aam
mov
lds
sbbl
rol
out
push
or
mov
xor
push
out
cs
cmp
and
push
fisubrl
cwtl
xor
cld
fwait
pop
pop
ror
sub
xchg
xlat
fsubs
sbb
data16
push
jae
mov
push
lahf
mov
push
ret
subl
lcall
loope
sub
das
in
add
sbb
mov
test
and
dec
jne
in
add
cli
mov
cmpsl
adc
inc
add
mov
fwait
aam
sbb
push
test
popa
stos
fnstenv
mov
sub
sub
icebp
mov
sub
ljmp
cmpsl
imulb
cmp
stos
and
jmp
add
cmp
sub
outsl
daa
jae
sbb
ljmp
add
subb
out
nop
and
xor
dec
test
scas
popa
or
mov
outsb
jb
push
leave
std
adcl
dec
sub
inc
cwtl
in
sub
pushf
or
test
lods
dec
add
fs
xchg
inc
movsb
xor
pop
inc
add
cmc
add
adcl
outsb
pop
cmp
xchg
fnstenv
and
into
mov
mov
push
sar
ret
loope
test
push
push
pop
iret
and
outsb
ss
dec
mov
sub
adc
mov
ljmp
xchg
xor
dec
sub
sub
jbe
jmp
in
add
pop
inc
addr16
xor
mov
mov
cmp
stos
inc
mov
cld
dec
mov
sub
test
inc
andb
clc
mov
daa
rolb
dec
pop
add
test
pop
orl
mov
int3
xor
push
pop
or
sub
cmp
cmpsb
xor
in
push
and
xor
pop
pop
or
imul
aaa
imul
insb
ja
adc
mov
jg
adc
std
jle
lds
je
mov
jecxz
jnp
sarb
inc
cmpsb
inc
js
xor
push
push
mov
jge
gs
jns
les
mov
lahf
push
mov
cmpsb
or
jo
inc
icebp
jmp
add
into
bound
lock
nop
pop
mov
sbb
insl
cld
outsb
and
gs
lcall
dec
mov
xchg
jb
inc
jge
mov
je
add
or
push
cmc
aas
outsl
dec
stos
sahf
imul
aam
push
inc
subl
cmc
pop
inc
xor
hlt
test
sti
ret
xor
adc
xchg
push
pop
pop
sbb
inc
adc
je
hlt
popa
push
jns
push
xchg
add
in
mov
and
inc
cs
jge
jno
cmp
add
jne
out
xor
dec
lea
sub
xchg
nop
jmp
or
pop
addr16
insl
adc
flds
shll
lahf
pusha
adc
loop
test
icebp
hlt
cli
and
inc
leave
popa
lret
mov
ja
or
daa
out
sarl
mov
xor
and
les
js
pop
aam
daa
xor
xor
mov
lock
or
push
pop
add
mov
push
jge
xor
xchg
mov
repz
call
push
leave
push
hlt
int
mov
in
subl
and
pusha
mov
dec
inc
cmp
lret
dec
sub
push
cmp
adc
jno
cld
sub
xor
jge
jp
das
stc
jecxz
fsub
dec
ror
insb
add
jg
call
and
xchg
push
jnp
xor
ds
loopne
jae
adc
mov
repz
scas
sysenter
lods
shlb
movsb
sub
mov
sahf
mov
fcmovne
sub
ficoms
in
lock
lcall
cmp
and
cmp
push
mov
stos
sub
adc
js
aad
push
push
xchg
push
jle
pop
stos
or
mov
xor
jae
dec
adc
adc
dec
xor
pop
jp
xchg
push
and
push
f2xm1
sub
xor
add
lds
outsl
inc
fs
xor
pop
cmp
xchg
jmp
jbe
push
cmc
and
ret
dec
js
imul
sub
push
imul
sub
loop
xchg
inc
dec
inc
scas
lods
in
pop
adc
sub
dec
mov
push
fwait
cmpsl
or
jbe
or
movsl
in
mov
into
rolb
jl
adc
dec
addr16
popa
repz
aaa
shlb
out
lock
lret
pop
test
and
adc
dec
and
mov
jmp
sub
push
shlb
adc
dec
cmp
xchg
xor
sbb
and
mov
ljmp
xlat
cmpl
lock
pop
push
in
addr16
xor
push
mov
shll
and
lock
push
sbb
leave
idivb
push
mov
adcb
bound
or
cmp
fwait
out
call
add
sbb
and
test
push
rcr
adc
push
fnstsw
inc
push
mov
dec
xor
movsb
xchg
xlat
call
cmpsb
cwtl
sub
fnstenv
out
dec
inc
scas
rcl
insl
pop
sub
inc
mov
call
pop
icebp
xor
add
add
inc
add
mov
add
lock
rcr
xchg
idivl
cltd
sub
test
inc
pop
in
dec
dec
jnp
mov
xchg
adc
lock
add
dec
in
outsl
pusha
pop
add
mov
inc
fcoml
pop
xchg
stc
dec
imul
in
aad
std
cmp
testl
inc
cmpsb
fs
sub
cmpsb
and
mov
push
cwtl
sub
mov
mov
subb
adc
push
out
insb
cmp
jp
sub
lock
lock
jae
sbb
fsubrl
imul
push
push
or
sahf
jmp
push
push
out
cmc
das
popa
inc
push
mov
clc
and
lds
jmp
test
or
out
xchg
push
sahf
push
cmc
leave
sub
mov
add
inc
mov
xor
mov
xchg
add
out
mov
lock
pusha
push
mov
mov
adc
sti
xchg
xchg
mov
pop
add
bound
fldt
jo
cmp
push
arpl
out
out
ret
test
jns
addb
lods
xor
aaa
ss
in
sbb
push
cmpl
pop
inc
hlt
and
xchg
jecxz,pn
in
mov
aam
insl
adc
inc
and
xor
or
pop
jmp
mov
scas
je
mov
imul
test
dec
cmp
dec
xorb
dec
jmp
adc
push
lock
push
popf
push
xor
mov
lcall
shrb
test
lcall
mov
dec
stos
and
cmc
jecxz
mov
leave
cs
xor
mov
sbb
jmp
xchg
inc
gs
adc
arpl
and
subb
mov
mov
test
shl
sbb
xor
and
and
mov
pop
imul
sbb
cmp
mov
xor
sub
inc
je
sbb
test
jo
sub
movsb
pop
cmp
xchg
push
rcll
fisubrl
imul
xchg
orb
push
scas
mov
les
aaa
inc
sub
ret
aam
mov
push
jle
xor
cld
lahf
jl
jne
shlb
cmp
aad
aad
dec
movl
mov
movsl
lcall
xor
sub
sahf
or
jno
pop
es
rcl
test
jmp
das
aad
cld
adc
lock
dec
sbb
rclb
aas
xchg
xor
mov
scas
sub
cmpsl
or
std
fnstsw
sub
testl
sbb
jmp
inc
inc
sti
push
popf
std
lea
jmp
dec
fstpl
mov
mov
dec
cmp
aam
and
mov
fildll
add
adc
or
inc
cmp
popf
test
xor
and
loopne
xchg
ss
push
and
pushl
cmpsl
or
push
push
fldenv
rcrb
andb
pop
test
into
aas
dec
sbb
jbe
rol
jmp
insl
ficoml
sbb
popw
jmp
pop
xchg
cmpsb
jbe
dec
jp
add
sub
push
imul
xchg
mov
aam
mov
andb
or
lea
call
repnz
xlat
xchg
push
fsubs
mov
pop
push
cmpsb
add
inc
cmp
pop
aas
sub
mov
dec
sahf
jecxz
jmp
pop
subb
or
mov
push
mov
pop
cld
xchg
lods
push
mov
stos
cltd
mov
jle
xor
cmp
rcll
data16
bound
rorl
mov
inc
popa
dec
cmp
pop
adc
ljmp
ja
popf
push
in
std
cmp
mov
cs
mov
xor
repz
sub
xor
in
lds
pop
testb
mov
push
pushf
push
lret
jne
sbb
jmp
xor
jns
sub
adc
xchg
sbb
xchg
mov
arpl
adc
push
cmp
lock
add
movsl
or
aas
mov
cli
push
daa
adcb
fdivr
int3
dec
aad
out
and
insb
sub
rorb
cmp
sub
mov
in
push
jp
mov
gs
mov
adc
mov
jg
cmp
lods
dec
sahf
jne
inc
and
sub
orb
popa
mov
or
or
pop
inc
cmpsb
cmpl
cmp
mov
addr16
dec
out
jbe
loopne
sbb
inc
xlat
jge
sbbl
pop
pop
adc
jmp
insb
mov
sub
fcomip
xchg
inc
repz
pop
test
lock
lds
pop
stos
enter
sbb
push
jmp
iret
sahf
sbb
test
add
mov
mov
scas
or
das
shll
repz
mov
pop
sti
pop
pop
in
xorb
inc
pop
sub
mov
jo
out
movsl
cmpsb
inc
xchg
test
arpl
iret
mov
dec
cmpsl
mov
xchg
lahf
and
sbbb
popa
out
hlt
sbb
pop
in
push
mov
loop
sub
push
aad
rorb
and
jnp
sub
jb
inc
xchg
jns
mov
mov
jb
js
mov
test
xor
push
dec
jmp
push
sbb
pop
pop
push
test
jp
jo
push
jno
pushf
mov
lods
imul
pusha
mov
mov
sub
dec
hlt
lock
rol
ret
push
mov
std
stos
dec
jl
adc
xchg
daa
lock
inc
sbb
jo
pop
and
lods
orb
cmp
lret
sbb
roll
inc
dec
push
sahf
xorl
lock
andb
idiv
jns
sahf
fists
and
cltd
mov
popf
nop
test
test
pop
subl
movsl
outsb
mulb
adc
fistps
dec
jbe
cmp
fisttpl
test
testb
fdivrl
lds
jl
sbb
std
mov
das
test
xchg
movsl
outsl
scas
xor
sub
cmp
aad
pop
movsl
push
cmp
out
mov
push
pop
sarb
sub
iret
add
sahf
in
out
aad
lods
jb
add
xor
lods
push
xor
add
lock
dec
ljmp
cli
jae
pop
fisubs
leave
push
xor
popl
inc
push
xchg
mov
daa
push
lock
lds
adc
call
mov
ljmp
sub
mov
testl
mov
push
cmp
sub
iret
shrb
add
dec
mov
jecxz
pop
sub
test
add
dec
jecxz
dec
scas
add
movsl
push
sahf
sarl
adc
filds
inc
loope
cmpsb
les
xchg
mov
inc
xchg
xchg
ficoms
ficompl
subb
pop
sbb
in
push
mov
add
std
sbb
push
mov
mov
es
mov
adc
fisubrs
push
adc
loop
mov
imul
push
inc
and
lods
xchg
pop
leave
lock
xlat
in
xor
push
inc
shll
insb
ss
incb
imul
shlb
xlat
add
aas
add
test
out
xlat
ljmp
mov
fdivl
iret
aaa
sahf
pop
inc
dec
orb
lds
fcmovnu
dec
xchg
cmpsl
cmp
jns
xchg
or
mov
cmp
shr
mov
fildl
mov
lds
lahf
pop
jmp
leave
xchg
cmp
jl
leave
cmp
call
inc
scas
sub
sub
sub
push
mov
mov
je
jecxz
ja
dec
fst
xchg
push
mov
stos
popa
and
sub
dec
pop
test
test
mov
and
adc
gs
add
mulb
jae
push
xor
pusha
in
xchg
hlt
jo
insl
std
add
xor
add
inc
gs
pop
push
enter
leave
xor
mov
jmp
in
mov
andl
pop
xchg
pop
sub
xor
movsl
fsubrl
sub
in
out
repz
mov
sbb
inc
aam
sbb
test
push
lahf
dec
sub
addl
and
adc
sub
push
jmp
fisubs
sub
jne
cmpsl
testb
loope
pusha
xor
out
mov
jl
popa
ja
jp
shll
xor
mov
flds
push
enter
push
inc
stos
sti
mov
lret
lock
sbb
xchg
mov
sub
pushw
scas
xchg
xchg
adc
cmp
and
sbbl
xor
std
rclb
xchg
lret
repnz
mov
push
lock
sbb
jle
fcoms
adc
idivb
movsl
mov
lods
mov
jo
xor
ret
mov
lods
sbbb
in
xor
notl
loop
mov
in
aad
sub
xor
cmc
jmp
inc
push
and
xchg
add
ja
xor
xchg
xor
daa
or
xchg
mov
lock
mul
fiadds
ljmp
jo
lods
add
jne
shl
rolb
pop
addr16
and
stos
or
aam
js
jmp
test
sub
xorl
pop
pop
mov
dec
lret
sub
loopne
out
je
movsb
or
push
add
add
pop
sbb
jne
lcall
or
movsl
pop
mov
jle
jmp
pop
or
sbb
pushf
ss
inc
inc
lods
std
es
sub
test
cmp
aam
mov
in
sbbl
push
dec
aas
pop
mov
add
xchg
push
push
mov
cmpsb
and
add
shrb
mov
jo
fadd
pop
dec
mov
popa
data16
inc
dec
imul
xchg
cmp
std
clc
push
out
rolb
adc
in
pop
ret
add
jp
jns
adc
xlat
bound
fistpll
pop
sbb
sbb
int3
sub
out
mov
pop
mov
stos
movsl
popf
mov
jp
jmp
paddsb
and
mov
mov
add
dec
dec
imul
cmp
shrl
pop
mov
add
mov
rcl
add
sub
in
jb
xor
push
stc
or
push
mov
cmpsl
lock
push
insl
jecxz
and
sub
rorl
push
xchg
sbb
test
clc
or
mov
add
movsb
mov
es
bound
repnz
dec
in
insl
xor
movsl
mov
loopne
mov
jmp
sub
sub
popf
mov
xchg
mov
push
sahf
pop
xchg
sbb
sbb
popa
test
xlat
or
stos
in
cmp
mov
movsl
mov
xor
xlat
push
cmpsb
sahf
pop
ds
sub
push
mov
xlat
clc
push
push
sub
cmpb
out
cs
je
push
std
inc
lret
dec
hlt
mov
clc
fwait
push
mov
xchg
pop
push
leave
mov
ret
mov
out
mov
popa
pop
dec
mov
sub
out
cltd
pop
into
push
gs
rorb
push
test
negb
out
cmp
imul
adc
jb
adc
fwait
dec
outsl
xchg
ja
adc
out
jl
pop
pop
cld
xlat
push
lds
xchg
lods
lret
in
cmp
sub
cmpsl
stc
rcr
insl
inc
mov
xorb
lock
fidivs
mov
jge
or
jno
mov
xchg
sub
pop
dec
je
dec
shll
push
sub
xor
test
sub
sahf
lods
loop
push
test
movsl
test
arpl
pop
out
cs
sub
push
push
mov
or
jb
inc
test
push
mov
lea
push
aas
fidivl
inc
call
jmp
fmuls
imul
test
scas
inc
pop
mov
mov
push
pop
loopne
push
inc
out
clc
jbe
pop
pop
sub
jecxz
xchg
cltd
ds
push
sbb
rorb
pop
pop
int
xchg
push
cmc
cmp
jecxz
andb
pop
mov
daa
push
into
mov
xlat
dec
scas
xchg
xor
pop
mov
inc
adc
movsl
iret
in
mov
test
lock
fs
fs
sbb
outsl
mov
xor
rcl
and
push
add
pcmpgtd
sbb
movsl
xor
stc
stc
push
adc
adc
jle
aam
xchg
popa
inc
sbb
add
fildll
roll
orb
dec
leave
popf
pop
add
in
lods
bound
pop
dec
push
fmul
in
xor
iret
xor
repz
pop
sbb
jmp
out
sub
rcrl
or
mov
lock
push
sub
dec
addb
scas
aam
xchg
movsl
sub
imul
andb
aad
leave
or
in
sub
or
pop
shll
sub
xchg
cltd
mov
sub
or
ret
or
fcomp
std
inc
dec
push
ja
xor
js
movsl
xchg
mov
and
jnp
push
mov
and
jle
cmc
sahf
out
jae
or
shlb
mov
loop
xor
push
jg
test
jns
test
shlb
adc
pop
ss
add
dec
leave
sbb
popa
and
stc
push
clc
fdivrp
adc
popl
add
mov
xchg
ja
and
sahf
adc
jge
movsl
dec
mov
cmpb
ljmp
in
orl
jb
cmpps
dec
add
sti
arpl
scas
xchg
adc
jo
test
inc
sahf
mov
and
push
pop
fildll
mov
scas
xor
leave
mov
outsl
xorl
mov
clc
into
shll
mov
mov
adc
add
cmp
or
stc
pop
cmpsl
pop
std
scas
fstps
daa
inc
adcb
xor
icebp
sub
outsl
push
cs
cmpsb
ret
cmp
xchg
push
js
cmc
xchg
adc
cli
adc
out
jecxz
dec
mov
xchg
por
mov
decb
add
in
xor
scas
add
imul
incl
int3
jbe
pop
iret
push
data16
aad
ja
jo
sub
ror
pushf
je
nop
mov
cmp
loopne,pt
call
out
and
in
out
test
push
es
adc
inc
out
cwtl
scas
sub
or
fidivs
sbb
stos
dec
xchg
sbb
cmp
popa
sub
andl
movsl
jbe
inc
jge
sub
out
lods
lods
xchg
fsts
adc
push
idivl
pop
jne
fildl
mov
push
fisubrl
sti
addr16
mov
or
sub
int
mov
xor
mov
fdivrp
loopne
je
dec
aad
loop
bound
pusha
push
xor
ds
jp
sbb
rolb
nop
or
or
xor
stos
dec
mov
fstpt
repnz
xchg
sub
pop
outsl
insl
ficompl
imulb
and
repnz
inc
or
cmp
imul
mov
sub
test
pop
gs
xchg
fwait
js
mov
or
insl
mov
xor
ljmp
inc
xchg
sbbl
lods
jle
xchg
scas
dec
enter
push
inc
fcmovbe
divb
push
cmpsl
lcall
imul
test
xor
mov
or
adc
xchg
or
insb
arpl
xor
fisubs
push
adc
and
std
in
add
jp
cmp
sahf
inc
mov
ss
mov
js
cmp
push
inc
mov
push
inc
ss
je
sub
xchg
cmc
aad
pop
in
lock
sub
sbb
sub
xor
xchg
jp
cmp
mov
add
push
jno
push
mov
leave
lock
rcrb
inc
and
sub
cmp
shr
imul
inc
lcall
cld
and
xlat
es
leave
jmp
lahf
popf
dec
dec
sbbl
dec
lcall
mov
test
das
ret
jp
xchg
jb
movsl
push
stos
sbb
insl
xchg
lock
insb
mov
push
sub
sub
roll
ljmp
cmp
xchg
mov
fbstp
inc
in
mov
lret
pop
add
inc
adc
lock
repnz
push
sub
or
aad
push
aad
add
inc
ss
idivb
mov
xchg
mov
repnz
smsw
jle
add
imul
pop
hlt
mov
rclb
pop
mov
loope
pop
cli
leave
or
and
xor
push
xlat
fldl
mov
mov
pop
cmp
push
mov
jle
adc
xor
mov
in
int3
lcall
shrl
pop
xchg
sub
inc
pop
or
cs
in
scas
mov
fnstenv
pop
push
or
cwtl
lods
popa
cmp
and
and
test
aas
xor
rolb
addb
fcmovb
lods
cmp
shrl
insb
outsb
sahf
cmp
inc
ljmp
psllq
es
mov
vrcpps
xor
shll
xchg
push
mov
mov
pop
push
or
mov
es
inc
aaa
iret
mov
pop
in
pop
jp
sbb
push
adc
fwait
mov
mov
xor
mov
push
std
rol
fs
loopew
fldt
aad
movsb
mov
jp
push
hlt
inc
cmp
cmp
lock
imul
dec
in
sbb
mov
adc
ljmp
sub
arpl
dec
push
lock
mov
sbb
push
pop
xor
movsl
aam
dec
inc
sbb
pop
out
loop
sub
lock
ficompl
mov
fistl
jmp
dec
js
fbld
notb
add
mov
and
jno
xlat
cmpsl
aas
in
stc
pop
adc
mov
push
jno
xchg
and
inc
sub
cmpsb
lahf
cmp
movsl
xor
jo
cmp
ret
xchg
movsb
push
mov
jne
call
sub
push
test
lods
andb
hlt
mov
ds
mov
lods
sub
add
imul
sub
repnz
sti
movsl
lds
adc
aam
dec
clc
in
xchg
mov
inc
push
cmp
fs
mov
mov
lock
mov
dec
xchg
sbb
inc
dec
xor
aad
cli
mov
xor
test
push
or
sbb
cld
pop
mov
pop
cs
popf
push
mov
imul
jo
cmp
sub
jmp
mov
loope
out
les
ret
xchg
sti
mov
out
inc
jg
jmp
dec
push
add
lock
mov
pusha
cmc
mov
inc
mov
daa
push
data16
lock
push
test
subl
mov
sti
je
out
es
lds
and
inc
mov
in
pop
adc
les
dec
lret
fwait
ss
call
test
pop
in
test
dec
cld
add
lret
sti
sub
inc
das
mov
pop
pop
push
jmp
mov
xor
in
andl
ret
xor
imul
sub
cmp
cmp
lock
mov
push
adc
push
add
rorb
inc
inc
lods
lock
dec
jns
xchg
jmp
sub
xor
lods
xchg
push
add
adc
cld
nop
fmull
dec
xchg
js
std
fidivrl
push
sub
cs
jb
pop
scas
or
loope
leave
sub
pusha
stos
dec
ja
adc
jg
lods
sub
xor
xchg
ret
daa
aad
roll
push
mov
and
push
movsl
mov
mov
push
sbb
cmc
ds
popa
imul
sub
add
push
fs
mov
aam
pop
mov
pop
sub
cmp
push
fimull
pushw
xchg
mov
insl
in
xor
aas
mov
xor
jmp
xchg
ss
jae
in
dec
push
jmp
xchg
test
fcmovbe
in
xor
push
and
out
test
sarb
push
cmp
sbb
lock
fnstsw
aad
loop
inc
rolb
sub
or
cwtl
shlb
test
repnz
cmpsb
in
js
cmp
daa
stos
and
pop
loope
pop
mov
mov
jmp
adc
out
mov
jecxz
or
imul
sub
add
ret
icebp
adc
in
repnz
dec
cwtl
pop
sub
sahf
shlb
cmpb
sub
cwtl
pop
mov
ljmp
sti
rclb
pushl
outsb
jmp
mov
movsl
mov
cmpsb
xchg
jno
xchg
add
adc
je
adc
or
pop
or
adc
mov
es
xchg
mov
push
jne
sbb
lods
inc
xorb
xor
ljmp
or
cwtl
mov
lock
pop
cs
stos
push
mov
jb
pop
sub
pop
mov
adcb
lock
loop
imul
notb
pop
popf
ja
jnp
push
mov
inc
movsl
add
movsl
ret
xchg
cmp
sub
inc
mov
icebp
mov
adc
ret
mov
ja
insb
xor
dec
cmp
dec
mov
aad
mov
sti
mov
test
in
jmp
cmp
mov
cld
out
outsb
imul
xchg
adc
inc
jne
sarl
mov
mov
in
lahf
inc
fmull
dec
lea
hlt
cmp
pusha
lods
xor
mov
imul
push
xor
shll
adc
es
inc
lods
mulb
pusha
push
jl
and
cmp
or
mov
cltd
xor
cmp
xchg
lock
cmp
and
mov
mov
std
iret
lea
mov
adc
mov
pop
pop
mov
pop
sub
push
mov
add
pop
mov
push
xchg
xchg
pop
xor
xchg
movsl
cmp
cli
push
cld
jl
mov
stos
push
call
loope
leave
insl
int3
clc
mov
lret
in
sub
stc
scas
cmp
push
icebp
pop
sub
pop
les
in
lods
inc
repnz
in
jb
mov
xchg
das
mov
dec
sub
sbb
test
clc
mov
in
stc
mov
mulb
sub
dec
cmp
stc
pop
sub
or
pop
xor
inc
ljmp
dec
jmp
lods
push
scas
pop
insl
ret
push
cmc
in
mov
sahf
call
fs
push
inc
les
sub
icebp
sub
lds
call
inc
adcl
es
leave
ds
movsl
mov
pop
je
xchg
push
sbb
in
push
jae
lds
add
lds
and
in
xchg
ss
xor
pop
andb
jbe
ds
lock
ret
ret
pop
and
mov
out
inc
ljmp
stos
sbb
mov
jb
outsb
sub
sbb
jns
scas
sti
scas
aaa
jo,pn
pop
lret
push
lcall
xor
loop
and
adc
gs
pop
test
xor
push
pop
push
out
in
aaa
add
data16
fwait
xlat
mov
cmpsl
aad
or
sub
call
loope
mov
fldt
mov
push
pusha
lret
scas
mov
sahf
xlat
push
lock
dec
dec
push
lds
sub
mov
gs
xchg
jp
pushf
inc
adc
sarl
sub
in
xchg
inc
daa
mov
sub
pop
ret
rcrl
xor
outsb
test
es
outsb
call
aam
push
mov
movb
sub
mov
dec
enter
xor
pop
push
enter
mov
inc
pop
jnp
data16
popf
lcall
neg
inc
inc
xor
inc
pop
jmp
inc
ljmp
cmp
pop
out
dec
aad
nop
sarl
xor
sahf
jne
lock
mov
jecxz
xchg
je
dec
and
sub
mov
sbb
sub
jmp
sbbb
lahf
out
sub
jnp
into
sbb
in
sbb
push
inc
cmp
test
adc
dec
dec
stos
jo
sub
sub
fs
lds
lds
in
arpl
lock
xchg
pop
or
pop
pop
push
test
dec
into
jmp
push
dec
sti
sub
jnp
lret
rolb
or
xor
cmp
push
andl
stos
jecxz
xor
call
jp
lcall
mov
fs
ja
jmp
inc
mov
xchg
lods
xchg
xlat
shl
push
sarb
xchg
sahf
dec
call
stos
rclb
pusha
lock
movsl
js
add
push
inc
xchg
push
insl
xchg
sub
in
add
loope
sahf
pop
scas
add
inc
popf
push
xor
and
in
aam
ret
neg
test
xor
push
dec
icebp
dec
or
leave
inc
mov
fists
subl
movsl
movsb
pop
mov
xor
je
or
inc
pop
imull
xor
ljmp
mov
sbb
outsl
test
xor
rorb
and
mov
jae
fsubrp
cmp
mov
sub
mov
xchg
outsb
sbb
inc
leave
and
in
mov
test
cmpsl
in
pop
cmp
andb
mov
adc
in
mov
fs
push
lcall
jo
fbld
cltd
test
aam
inc
test
add
adc
fsubl
loop
and
int3
and
lock
xchg
fcomps
jno
std
inc
push
cmp
xchg
mov
adc
inc
xor
movsb
lods
stos
addl
stos
test
movsl
fistl
pop
xchg
jge
cld
in
das
jno
adc
or
mov
lret
dec
ret
mov
je
lcall
test
movsl
rorl
aam
or
loopne
lock
cmpsb
cmpl
sub
push
mov
xchg
sub
and
mov
insl
imul
in
bound
xor
pop
in
ret
out
mov
mov
push
adc
subb
pop
mov
imul
inc
jmp
jl
test
lock
int3
sbb
jae
inc
push
xor
lods
add
mov
cli
push
pop
lock
cld
pop
dec
clc
in
mov
andl
imul
xor
aas
cs
and
adc
call
sub
lds
movsb
test
ret
hlt
cmp
push
and
cld
pop
dec
jge
mov
sub
stc
or
xor
in
jbe
mov
les
stos
lret
cmpsl
jmp
push
push
push
out
mov
jnp
mov
popf
lret
cmp
stc
xchg
addb
dec
sub
jmp
adc
mov
in
add
xchg
or
test
sub
jae
inc
xchg
push
cmp
inc
je
loope
out
pop
roll
jg
xor
push
jp
mov
push
in
inc
pop
out
inc
mov
lock
fsubrp
mov
jne
mov
dec
push
shrb
loope
negl
push
push
fsts
jno
stos
mov
mov
sbb
mov
inc
xor
test
jle
adc
xchg
inc
stos
xchg
cmp
nop
data16
fbld
ljmp
inc
xchg
push
xchg
inc
push
dec
icebp
pop
fwait
adc
jg
pop
lea
insl
in
js
adc
test
ljmp
dec
clc
fs
adc
sub
pushl
ficoml
pop
loop
jle
push
mov
mov
add
testb
imul
jle
mov
std
xor
dec
xor
jge,pn
mov
outsl
sbb
and
push
or
add
add
stc
sub
sbb
mov
xlat
data16
and
addr16
fildll
aad
lds
pop
out
jp
or
in
clc
sbb
inc
adc
in
out
inc
xchg
cmp
pop
dec
or
lcall
loope
pop
mov
xor
lds
inc
dec
sbb
push
mov
push
rorl
sti
int3
imul
stos
xchg
pop
cmpsb
arpl
mov
and
pop
lret
mov
push
adc
or
ss
out
add
lock
les
push
imul
lret
es
pop
lds
sahf
aad
xor
or
leave
repz
mov
fimuls
xchg
adc
mov
cmpsl
pop
lods
mov
adc
dec
movsb
test
xchg
sbb
inc
adc
aam
adc
sub
inc
icebp
inc
cmpsb
jmp
xor
inc
inc
sahf
cmpsb
in
imul
imull
push
xlat
xchg
sbb
dec
pop
mov
cmpsl
sub
test
pop
mov
lods
mov
xchg
xchg
jp
call
jmp
jae
sub
mov
push
adc
ja
sub
xchg
jg
mov
and
mov
addl
test
sub
lea
movsl
frstor
mov
aas
xchg
or
in
pop
push
push
sbb
filds
push
cmpsl
dec
pop
lea
xor
mov
repnz
fdivrp
aam
jno
adc
xchg
stos
sarb
jo
sbb
roll
xor
mov
inc
fidivs
mov
imul
dec
pop
in
push
push
pop
or
sbb
sbb
mov
mov
add
ljmp
std
pop
jns
mov
inc
aad
shll
stc
adc
jmp
mov
cs
sub
std
subl
imul
sbb
pop
adc
xor
stc
lds
sbb
jmp
dec
out
outsl
push
ljmp
mov
mov
andnps
or
inc
push
mov
sti
add
inc
cmp
dec
fadd
fldenv
mov
pop
lret
in
outsl
hlt
push
popl
lahf
mov
and
adc
out
xor
movsb
jmp
insb
xor
mov
pop
jmp
adc
cmpsb
mov
xor
pop
lahf
and
inc
into
inc
cmovg
fisttps
repz
push
in
mov
enter
les
ljmp
sub
mov
xchg
xor
lods
xorl
cmp
sub
cmp
sbb
mov
mov
je
or
inc
negl
das
dec
in
inc
jns
push
dec
jmp
adc
dec
hlt
xchg
mov
loope
mov
gs
jge
lret
in
insl
pushw
ljmp
sahf
in
out
mov
adc
movsl
aad
mov
sahf
jae
movsb
jb
cs
out
push
push
push
sahf
xchg
dec
rorb
lock
scas
pop
mov
inc
aam
push
dec
push
sti
xchg
pop
inc
push
pop
push
test
sahf
cmc
ljmp
push
out
ss
mov
jp
sub
mov
imul
nop
test
dec
out
mov
fs
in
push
adc
cmp
lret
xchg
cmp
jae
stos
pop
mov
ret
ret
pop
insl
scas
imul
stos
ret
or
gs
jmp
mov
xchg
arpl
cli
push
add
subb
sarb
in
sub
inc
xor
or
cmpsl
pop
lock
and
jb
mov
jnp
jmp
push
dec
sbb
or
sarb
enter
movsb
inc
jae
jmp
pop
jne
jns
aam
call
add
les
gs
rcr
pop
fdivs
imul
xor
adc
test
cmp
testb
inc
ljmp
ljmp
lds
dec
pop
movsb
leave
fstps
sub
sti
lea
jmp
mov
mov
pop
cmpb
clc
xchg
xchg
jmp
dec
adc
and
push
xchg
sti
dec
pop
add
mov
or
or
aam
rorl
dec
filds
inc
cmpsl
in
aas
call
and
add
faddl
lock
mov
ret
push
pushf
rclb
out
icebp
inc
fildl
mov
inc
fmull
xor
arpl
test
xor
lods
lods
mov
sub
ret
clc
cmpsl
add
pop
daa
cwtl
cs
sub
bound
mov
sub
pop
std
jmp
xchg
ret
ret
push
stc
repz
testl
int3
mov
pop
ljmp
test
jns
xor
das
jge
dec
inc
lahf
movsb
mov
sub
inc
add
xchg
lcall
sub
adc
mov
xchg
and
mov
jge
dec
adc
in
fstpt
or
std
ss
ljmp
in
enter
xchg
sbbl
pop
shll
daa
rorl
int3
stc
std
and
sub
lret
pop
mov
mov
aam
push
xchg
loope
mov
clc
mov
jg
mov
dec
inc
mov
pop
pop
or
or
add
or
mov
bound
cli
inc
sub
rol
xchg
ds
pop
sub
xchg
cmpsl
xchg
dec
cmpsb
nop
adc
ficomps
ja
int3
mov
xchg
pop
add
sbb
nop
push
pop
or
push
sbb
mov
ds
out
push
sub
mov
jmp
in
jnp
inc
popf
xchg
int3
jmp
test
inc
outsb
bnd
or
cmovs
mov
xor
aaa
or
dec
int
sbb
push
add
faddp
mov
popf
movsb
je
addl
lock
jp
out
jns
sti
cmp
mov
aad
adc
mov
cmp
mov
test
jp
sub
notl
sub
fnstsw
lods
and
shll
inc
int3
inc
repz
andb
lret
mov
dec
mov
cmp
mov
test
cwtl
jl
sub
repz
mov
sub
movsl
in
or
loopne
clc
inc
sub
mov
sub
pop
sub
movsl
addr16
sub
lods
icebp
push
dec
push
add
dec
nop
test
dec
pop
sarl
insl
mov
cmp
popf
test
dec
jne
add
sub
xchg
and
daa
out
pop
loope
int
in
pop
out
fiaddl
jmp
loope
sub
mov
mov
adc
dec
or
js
call
xor
jnp
stc
in
jb
sbb
cmp
test
sub
mov
jge
daa
jb
mov
pop
iret
cwtl
jmp
lods
push
push
nop
inc
fcomip
lods
sub
into
mov
or
enter
or
sub
mov
mov
xchg
sub
sahf
jecxz
push
sub
jae
scas
movsb
xchg
push
sbb
and
xor
fucom
sub
lds
push
sub
cwtl
jecxz
imulb
or
nop
dec
bound
adc
popa
cmpsb
cmpsb
xchg
xorb
sbb
fcmovbe
movsl
ljmp
into
pop
and
xor
dec
mov
sti
sub
bound
mov
or
cmp
insb
inc
inc
mov
popa
arpl
lock
ja
adc
scas
xor
push
jecxz
sbb
xchg
mov
mov
insb
ds
loope
sub
mov
fcoms
inc
lods
push
push
ret
mov
sub
ds
les
sbb
lds
sub
mov
shl
or
popf
stc
loopne
sub
xor
jae
mov
adc
sbb
fsubr
push
mov
sub
femms
add
lret
fildl
sub
in
dec
or
lock
out
sub
arpl
fsts
push
or
iret
mov
enter
mov
ljmp
cmc
fcmovbe
sbb
in
jno
fwait
add
add
sub
add
sub
je
dec
xchg
loop
pop
mov
cli
bound
mov
js
bnd
and
xor
dec
test
sub
push
adc
lret
push
xchg
aas
fdivrp
sub
aam
xor
sub
shrl
push
push
js
cmp
cli
cmp
adc
mov
sub
jge
punpckldq
std
sub
lods
push
add
loopne
test
fidivl
stos
add
cmpsb
sbb
mov
cmp
push
test
lea
pop
sahf
lock
loope
dec
adc
fldenv
subb
les
inc
ds
dec
lea
or
cmp
jmp
mov
pop
cmc
fsubl
sub
xor
fwait
adc
insl
jb
movsl
popf
dec
mov
cmp
sub
insb
jp
sbb
xchg
test
xchg
lcall
or
xor
xchg
fldenv
fsubrl
add
cmp
and
into
xorl
add
sub
mov
fcoms
adc
lds
enter
xchg
push
mov
inc
lcall
loopne
cmpb
sub
add
dec
mov
loop
xchg
cmp
cli
test
sub
xor
es
dec
aaa
xor
test
add
mov
adc
sahf
ja
push
xchg
sub
fisubrs
lea
es
cld
loopne
sub
sub
cli
xchg
mov
jns
jo
jnp
arpl
mov
mov
add
push
stos
jecxz
das
inc
lcall
mov
adc
cli
sub
cs
mov
bound
out
outsb
lock
mov
fsubrs
insb
mov
dec
shrl
popl
xchg
and
loopne
movsl
sbb
sub
nopl
jge
sub
inc
bound
push
pop
xor
mov
lret
adc
push
cld
shrl
out
pop
push
hlt
mov
dec
pop
ljmp
popf
sbb
nop
dec
xchg
mov
cltd
and
rclb
push
pop
add
mov
mov
jae
test
pop
sub
pop
repz
mov
lret
sub
leave
nop
out
adc
mov
push
iret
pop
test
cwtl
loopne
test
mov
mov
rcr
test
mov
inc
ss
sub
popa
js
sub
and
arpl
jmp
xor
cs
jns
cld
sbb
jg
add
shrl
inc
ljmp
jge
aad
or
sub
nop
xchg
mov
ljmp
call
add
packuswb
out
sub
add
sub
stos
adc
mov
jnp
sub
push
and
dec
lods
loope
cs
inc
fcomps
sub
mov
push
mov
and
shlb
sub
cld
mov
pop
and
sub
aaa
mov
sub
and
jnp
inc
enter
iret
int
imul
paddsw
mov
push
mov
or
xor
dec
dec
and
imul
in
jmp
xor
xchg
adc
fimuls
sub
xchg
rorb
lock
mov
loopne
movsb
pop
sub
add
insl
xchg
sub
mov
sbb
or
or
xor
out
dec
push
pusha
mov
ret
movsb
inc
call
cmpsb
aam
jecxz
pop
mov
dec
add
xchg
lea
sbb
sub
arpl
rcll
aam
or
cs
mov
push
les
sbb
inc
and
es
or
pop
aaa
adc
xchg
jge
sub
repnz
pop
mov
fdivr
aaa
in
je
sbb
int
adc
xor
lock
fildll
in
mov
cmpsl
mov
lcall
bound
sub
lcall
pop
cs
aam
dec
xor
loopne
mov
jl,pt
cmpsb
sub
mov
sub
repnz
xchg
repz
ret
in
jae
mov
cmp
lcall
push
rcr
pop
movb
cltd
sub
pop
mov
push
xchg
xchg
inc
ja
xor
sbb
gs
and
xchg
add
mov
sub
sub
sbb
and
jne
dec
xor
xchg
sbb
loopne
mov
sub
pushf
test
jno
mov
mov
decl
xor
sub
mov
sub
adc
add
dec
mov
aam
sub
sub
rcrb
sub
loopne
and
test
popa
fimull
sub
add
jp
cmpsb
jae
ret
or
sub
rcrl
mov
inc
test
pop
out
mov
dec
xchg
imul
cmp
je
and
sub
mov
cmpsb
mov
xchg
arpl
pop
dec
jbe
lcall
dec
push
test
sub
jl
sub
xorl
and
jg
sub
aad
pop
cmpsb
aam
sub
pop
sbb
cwtl
movsb
mov
ds
xor
pop
mov
fnstenv
or
inc
sub
or
adc
mov
sub
push
cmp
sarl
enter
int
cmpsb
mov
or
mov
aas
inc
in
cwtl
jle
push
mov
aam
std
sub
xchg
int
rorb
daa
lcall
test
inc
in
mov
push
add
and
jmp
jb
arpl
fadd
add
sub
stc
out
aam
xor
lods
sub
enter
fs
shrl
push
sub
inc
es
cltd
inc
pop
or
ljmp
in
mov
or
push
xor
xor
xchg
insl
gs
jg
addr16
jg
push
inc
pop
cs
and
jb
aad
push
arpl
inc
cmp
icebp
sub
lock
ss
jno
cmp
push
jg
jns
add
daa
bound
xchg
jp
or
roll
out
dec
sbb
push
imul
push
lock
xor
mov
and
insl
stos
sub
test
lret
mov
mov
inc
push
pusha
or
xor
adc
sub
lcall
or
adcb
outsl
fucomi
xchg
add
cld
mov
pop
lods
adc
pop
push
adc
push
push
lahf
xchg
or
jb
enter
lds
mov
jne
out
sahf
ljmp
insb
cmp
fcoml
pop
movsl
inc
sub
mov
insl
sti
ret
call
cmpsb
test
jns
cmpsl
adc
xor
stos
push
sub
fadds
cmc
jle
sub
mov
addb
out
push
cli
xor
lret
subl
lds
sub
add
and
cmp
inc
xor
imul
inc
inc
and
test
inc
or
push
in
and
pusha
or
addr16
dec
test
imul
rorb
fsubl
sub
test
lods
int
jb
into
push
and
xlat
add
ds
out
cld
jo
cld
out
ror
cmp
test
xorb
into
call
cmp
mov
fs
xchg
xor
adc
push
mov
push
fsts
inc
cmpsl
mov
fs
insb
fistpll
mov
fs
mov
inc
sub
mov
dec
xchg
xlat
test
sarb
shlb
xlat
add
fidivs
aad
inc
lea
je
fcmove
xchg
pop
sarb
ja
ror
sarl
xchg
fxch
fidivl
and
bound
lods
sti
std
out
test
pop
mov
stos
enter
ficoms
dec
pop
fnstcw
jmp
adc
sahf
out
sub
ja
jp
or
jbe
pop
sub
fld
mov
out
aas
dec
pop
add
sub
add
imul
lods
adc
mov
push
lock
mov
lods
cmp
cmp
sbb
lods
sub
pop
mov
adc
jmp
or
xchg
push
orl
lock
mov
sub
sub
push
inc
stos
sbb
ret
fstpt
push
sti
pop
mov
outsl
inc
test
push
sub
jns
pushf
adc
adc
pop
insb
je
in
sar
xchg
adc
les
test
icebp
jecxz
pop
lret
ret
fmuls
cmc
out
xor
ret
les
scas
mov
push
bound
aad
dec
mov
push
rcll
lds
ja
lods
sub
xor
jecxz
pop
lock
lret
xchg
loop
inc
xor
dec
xor
std
or
loopne
daa
sub
movsb
popa
cmp
cmp
sub
pop
mov
pop
mov
fwait
and
xlat
lock
xor
jl
cmc
lea
adc
dec
lock
mov
lret
inc
stc
push
pusha
jle
pushf
sub
sbb
jb
sbb
cmp
xchg
add
rcll
jp
rcll
out
out
out
push
notb
lods
fidivrl
sbb
mov
jo
pop
xchg
add
imul
scas
add
push
sub
mov
pop
push
pop
daa
adc
ljmp
jecxz
inc
mov
repz
rcrl
jnp
jae
push
push
sub
pop
in
cwtl
bound
cltd
and
lods
push
xchg
dec
mov
movsl
lea
mov
fs
enter
xchg
int
push
ret
dec
out
sbb
fsubrs
imul
xchg
js
pop
dec
jle
int3
std
pop
pop
icebp
push
sahf
and
int
icebp
test
mov
cmc
jno
fisttpl
xchg
gs
in
mov
ljmp
jnp
aaa
mov
mov
scas
cli
fmull
lcall
ljmp
jnp
xchg
repnz
xlat
add
in
or
xchg
add
xor
mov
xchg
push
stos
and
je
ljmp
nop
vmovhps
xchg
cmpsl
lret
shr
inc
push
xchg
lret
jp
inc
lods
pusha
xor
subb
push
leave
xor
push
inc
mov
fsin
sbb
fcoml
sbb
cmp
test
pop
insb
add
mov
add
js
sub
pop
adc
push
mull
je
notb
sahf
lods
mov
fcoms
xchg
aam
aad
bound
leave
loope
sub
ds
je
lret
testl
filds
add
mov
or
ds
push
mov
sub
sarl
xchg
push
mov
in
aad
movsl
cld
addl
adc
mul
cmpsb
inc
cld
add
hlt
dec
cmp
cmc
mov
adc
pop
sub
shlb
shrl
jl
xor
addl
cs
inc
popa
xor
in
test
mov
outsb
mov
stos
jb
cmp
lahf
je
cmpsb
mov
mov
cmp
jecxz
popf
xor
or
xor
loopne
leave
adc
call
sti
cmp
add
imul
lods
icebp
mov
mov
mov
std
mov
scas
divl
divl
les
mov
push
jmp
push
fcompp
mov
in
insb
out
mov
mov
jne
jno
incl
test
fimull
stos
pop
leave
mov
mov
out
push
jnp
out
sahf
inc
fnstsw
pusha
lret
aam
add
inc
shlb
mov
fisttpl
clc
shrl
lret
fs
xchg
fnstsw
add
fscale
leave
imul
out
mov
test
adc
mov
push
or
notb
leave
or
adc
ljmp
repnz
push
ret
arpl
fsubrl
jne
sub
fst
push
xchg
pop
je
sti
xchg
cmp
push
lods
iret
or
xor
mov
repnz
inc
test
gs
cmpl
inc
xor
mov
xor
jg
sub
ljmp
in
out
stos
sub
ja
push
xchg
xchg
outsb
xchg
cmp
fs
adc
mov
jnp
stc
lods
dec
sub
movb
or
adc
movsl
leave
cmc
mov
sarb
xor
stc
xchg
xchg
jl
imul
mov
inc
jle
pop
push
jb
js
mov
out
loope
cmpsl
movsb
and
xor
iret
dec
mov
and
dec
push
sar
pop
iret
mov
xchg
int3
pop
int
xor
bound
push
aam
xchg
je
push
addr16
fs
cmp
sub
clc
sub
in
dec
std
std
mov
jge
stc
jmp
jb
fdivr
dec
xor
dec
ret
or
lret
or
push
mov
movsb
orb
ficomps
jmp
scas
cltd
dec
xor
or
enter
sbb
mov
or
imulb
push
sbbl
push
adc
mov
out
pushf
push
ljmp
mov
xchg
cmp
cmp
in
nop
popa
lds
push
sub
and
sbb
ljmp
int3
mov
adc
stos
cmc
dec
cltd
fst
and
xor
pop
push
sti
lret
push
push
aad
pop
lock
out
nop
loop
out
xchg
sbb
movsl
data16
imul
push
lahf
aaa
mov
stos
sbb
or
pop
or
repz
fstl
jns
fcomip
jb
rcl
bound
or
arpl
mov
cmp
sbb
xor
js
and
mov
push
movsl
cltd
dec
insb
xlat
dec
push
and
jp
sub
jmp
mov
pop
cmpsb
sti
jge
add
add
sbb
sbb
xchg
or
in
out
mov
sbb
insl
or
rcl
mov
jecxz
rcl
mov
jl
aad
in
out
loope
adcb
xchg
shlb
dec
push
in
sbb
pop
pop
jbe
xor
pop
test
es
jge
pop
inc
xor
jae
sub
aaa
mov
and
cmp
stos
or
lds
std
jne
inc
mov
sub
rcl
cmp
ret
inc
xchg
in
xchg
cmc
ret
scas
inc
cmpsl
dec
cmp
fsts
inc
xchg
adc
ljmp
jp
ds
xchg
mov
imul
cmp
aam
push
xor
je
and
mov
cmp
cmp
xchg
in
sbb
xor
dec
movsl
in
add
out
mov
rclb
pop
sti
dec
repnz
imul
lods
scas
mov
jge
push
fcos
in
fistps
cmp
or
in
adc
inc
rclb
fisubrl
xor
cmp
xchg
cmp
pop
inc
push
mov
fcomps
imul
dec
push
jp
das
and
sti
or
daa
adc
imul
aad
cmp
mov
or
mov
xchg
push
adc
push
xor
xchg
test
xchg
mov
repnz
cwtl
mov
cmp
shlb
push
jl
outsb
idivl
xchg
dec
incb
xchg
jnp
and
inc
cmp
lahf
mov
xor
insb
push
xlat
sarl
push
clc
mov
aam
out
movsb
and
lock
push
xor
rol
add
or
imul
stc
loopne
stos
pushf
jne
inc
lock
dec
jecxz
push
mov
push
mov
or
sub
jecxz
sub
adc
pop
mov
xchg
push
xchg
rcll
or
fwait
imul
lret
stc
aad
or
fwait
in
in
pop
ficompl
push
adc
cltd
mov
mov
jnp
js
enter
xor
dec
or
shl
mov
push
adc
add
data16
out
repnz
lcall
inc
cmp
xchg
pop
test
aad
sub
sti
mov
ja
dec
int3
iret
test
sub
lahf
mov
or
out
or
icebp
mov
mov
std
mov
shr
push
jne
fidivrl
mov
push
sbb
push
push
jnp
mov
mov
in
loope
xor
outsl
lods
je
jmp
fs
in
dec
and
pop
inc
sub
mov
pop
popa
push
add
sub
stos
mov
inc
mov
mov
das
xchg
inc
jbe
cmpsb
dec
inc
test
icebp
inc
adc
ljmp
les
and
xor
sti
lods
push
push
test
in
or
inc
mov
repnz
sub
in
ljmp
ljmp
sbb
mov
movsl
lea
cmc
arpl
push
mov
je
xchg
lock
loope
pop
sub
daa
inc
scas
frstor
pop
cmp
hlt
xchg
sbb
popa
pop
xchg
out
dec
jle
lods
xchg
fnstcw
xchg
mov
push
xor
push
xchg
scas
dec
es
arpl
push
lock
pop
push
rolb
push
jg
pop
inc
popa
pop
push
cmpsb
dec
push
push
cmp
shr
xchg
or
mov
dec
mov
aad
xorb
add
xchg
inc
push
mov
and
in
mov
fucomip
jns
pop
sbb
lret
or
dec
inc
sbb
inc
push
sbb
fisubs
jno
fdivs
add
mov
fstpl
rolb
movsb
dec
jg
inc
xor
gs
outsb
cmp
and
inc
mov
xor
push
sbb
or
nop
push
sub
mov
ret
lods
outsb
push
xor
into
fildll
jns
cli
mov
mov
or
xor
in
lods
insb
idivb
push
pop
mov
clc
push
je
lods
cmp
add
shrb
jmp
jmp
hlt
lock
adc
pop
aaa
mov
imul
jb
fldcw
push
fs
and
sbb
xchg
sub
mov
dec
push
add
sahf
mov
test
cmpsl
or
cmp
xor
push
xor
fistps
push
mov
lds
aas
and
jae
js
mov
mov
jb
lock
loopne
push
adc
jnp
lret
hlt
repnz
arpl
stos
in
xchg
lds
stc
mov
pop
out
ljmp
pop
scas
in
je
les
imul
scas
in
jp
fs
ja
jno
xchg
pop
fs
sbb
inc
xor
test
cmpsl
inc
lock
xchg
data16
cli
xor
pop
xchg
bound
or
mov
mov
mov
dec
movsb
adc
inc
nop
xor
sbb
jmp
mov
or
push
push
out
jae
out
icebp
jp
mov
or
xchg
js
push
pusha
mov
sti
push
xor
jb
mov
xchg
nop
inc
mov
shll
pop
aas
imul
mov
mov
lret
dec
in
pop
pop
push
roll
mov
fnstcw
lret
push
rorb
ja
cbtw
test
xchg
mov
mov
scas
push
repnz
inc
mov
or
fisttpll
shlb
test
lahf
jno
inc
iret
and
pop
call
jns
mov
out
mov
xchg
lea
xor
testb
aaa
add
add
xorb
cmpb
insb
ret
das
dec
fld1
xor
or
ret
scas
pop
imul
ss
push
iret
orb
sti
inc
out
add
and
or
sbb
shl
xchg
mov
imul
xchg
adc
push
jb
leave
pop
pop
sbb
mov
push
cld
mov
push
jnp
cs
test
nop
xchg
rcl
fxch
jno
jp
repnz
stos
sbb
push
stos
out
and
cmpsl
imul
aad
clc
ds
ds
mov
inc
jmp
and
loope
aam
cmp
xchg
ljmp
iret
sbb
inc
xor
out
loopne
mov
fwait
leave
aaa
sub
xor
sub
jns
add
sub
movsb
dec
insb
lcall
jns
mov
cmpsl
adc
loopne
repz
lock
xchg
out
std
mov
or
xor
lock
sub
fwait
or
stos
lret
adc
jno
cmp
ds
pop
aam
sahf
pop
clc
mov
roll
lods
aaa
dec
mov
mov
cmp
jbe
sti
push
jp
mov
roll
dec
mov
outsl
popf
push
movsl
rcrb
sbb
inc
ficoml
push
icebp
inc
cmp
ret
int
popa
adc
in
in
lods
cmp
shll
lods
adc
mov
or
out
mull
lods
and
cmpsl
mov
jp
dec
sti
add
daa
push
dec
in
dec
bound
xlat
mov
push
push
dec
in
xor
aad
insb
outsb
icebp
mov
jbe
or
xchg
inc
push
stc
and
aam
lds
lahf
xchg
sub
ret
push
xchg
test
and
mov
lret
cmpsb
test
pop
add
les
mov
insb
push
das
popf
les
lock
scas
test
and
fsubrl
xchg
dec
lock
inc
inc
fistl
cmpsb
add
adc
repnz
imul
inc
mov
mov
xchg
jb
cmpsl
xor
mov
mov
cmpsl
test
inc
and
cmc
sub
mov
or
fsubrl
call
bound
bound
int3
lock
or
push
lret
dec
push
xchg
or
gs
ljmp
in
dec
jp
dec
fistpl
imul
aaa
lock
cltd
or
lret
add
mov
sbb
clc
stos
adc
lds
add
pusha
sub
into
dec
jmp
mov
ror
mov
pop
or
add
aad
shl
scas
sbb
lods
and
dec
inc
or
pop
cwtl
fcoms
cmp
and
push
mov
imul
dec
stos
cmpsb
ret
mov
gs
in
or
push
adc
dec
loope
sub
bound
icebp
dec
push
iret
movsl
pop
jecxz
int
test
ss
stos
idivb
push
insl
cmpsl
lock
in
dec
lret
inc
xor
movsl
or
inc
inc
imul
aaa
add
cmp
xor
cmp
test
sub
pusha
inc
fldt
loope
stos
loope
shlb
inc
in
test
mov
mov
shrd
sbb
fadd
sbb
push
mov
mov
push
dec
push
je
movsb
lds
pop
jmp
jmp
or
imul
add
std
movsl
int3
cld
sub
inc
lcall
aas
sbb
in
lahf
mov
out
test
les
imul
inc
data16
xchg
mov
sub
cmp
mov
in
int3
push
sahf
inc
cmp
or
ret
pop
cmpsl
xor
mov
pop
loop
rorl
bound
mov
out
sbb
cs
sub
in
in
inc
sub
mov
add
ret
clc
xlat
fbld
je
in
into
sti
push
push
out
sub
push
enter
push
gs
in
and
cmc
lret
fbld
pop
adc
cmp
pop
push
dec
movsl
jle
clc
or
rolb
iret
mov
into
aaa
mov
push
or
out
xor
xchg
clc
and
xor
mov
push
and
pop
pop
cmp
cld
shlb
sub
je
jno
inc
jae
test
movq
lock
pop
bound
inc
xlat
xchg
cmp
fldcw
pop
xor
jecxz
lret
push
jno
xchg
addl
or
repnz
out
imul
inc
clc
outsl
ffreep
push
ljmp
lret
push
hlt
pop
scas
aas
loope
sahf
in
mov
int3
in
fwait
test
clc
pusha
xor
jno
mov
mov
dec
xor
in
mov
lret
lods
test
sub
push
cld
sub
pop
cmpsb
xchg
mov
sbb
pop
out
lods
dec
cmpsl
push
lock
aas
inc
ljmp
lea
cmp
aaa
sti
cmp
sbb
push
add
pop
test
cmpsl
outsb
ss
mov
lds
push
mov
arpl
cmpsb
pop
ret
cli
fimuls
hlt
arpl
dec
adcl
xchg
inc
sub
push
jmp
xor
xchg
push
pop
ljmp
jo
push
ja
popa
adc
stos
dec
rcll
add
dec
lock
push
imul
pop
enter
insb
das
xchg
repz
in
in
dec
lcall
les
ja
shrl
dec
xchg
mov
and
out
mov
shrl
movsb
xchg
repnz
jg
movsl
inc
or
xor
mov
pop
jbe
aad
xchg
push
jno
imul
shrl
push
mov
enter
in
lock
pop
adc
loop
mov
push
jp
sub
xor
mov
int
and
lods
mov
shl
mov
arpl
pop
xor
or
cmp
adc
clc
stc
xor
adc
test
mov
add
or
repz
mov
cltd
fstpl
or
leave
aad
inc
cmpsb
in
mov
lea
dec
push
loop
and
xchg
jl
stc
icebp
push
imul
xor
fsubl
sub
mov
pop
adc
inc
jmp
icebp
and
pop
pop
sbb
scas
add
lea
bound
lock
shl
cmp
cmp
insl
sub
in
inc
xor
dec
add
pop
clc
dec
rcrb
je
inc
adc
movsl
stos
in
stos
cmp
xor
or
xchg
xchg
out
xor
pop
stos
xchg
in
arpl
stos
clc
add
dec
imul
mov
push
cmp
sbb
iret
mov
push
aas
adc
cmp
xor
ficomps
mov
mov
aaa
clc
pop
std
sub
push
addr16
lea
dec
and
insl
in
add
cmp
or
xchg
cmp
mov
aaa
ja
jl
fs
call
mov
ja
scas
add
mov
test
jmp
jae
bound
xchg
ret
clc
aaa
sub
mov
sahf
sahf
jp
push
sub
je
in
imul
bound
data16
call
xorb
xor
movsl
sbb
mov
push
js
mov
push
insb
aad
pop
test
or
xor
xor
push
stos
dec
cmp
test
push
mov
fld
jmp
fnclex
jle
adc
data16
pop
inc
movsl
sti
cmp
loope
add
jmp
lret
shr
fldl
ljmp
pop
in
cmc
ss
mov
jecxz
dec
pusha
pop
add
das
imul
repz
in
adcl
cmp
pop
push
cmpsl
push
ds
iret
sub
mov
push
mov
xchg
xor
mov
pop
lock
sub
xor
rorl
xor
hlt
jns
or
dec
push
add
int3
and
test
push
inc
gs
addr16
mov
pop
lock
test
lds
aad
std
pop
mov
inc
xor
jo
adc
pusha
pop
loope
mov
in
fstl
push
hlt
xor
aas
in
cmpb
cmpsl
es
icebp
dec
pop
std
stos
xor
testb
xor
lret
outsb
mov
sub
dec
shrl
sbb
jae
in
std
shll
ja
shlb
sti
stos
shll
ljmp
imul
cmpsl
sub
int3
adc
sahf
in
out
mov
cmp
rolb
sub
pop
insb
mov
adc
pop
pop
ss
inc
dec
jle,pn
in
ret
mov
mov
jmp
xchg
cmp
xchg
fwait
adc
inc
sar
sbb
pop
and
nop
push
xlat
jecxz
into
leave
mov
sahf
push
adcb
and
pop
in
ljmp
sbb
gs
shll
mov
data16
push
inc
ss
sbb
push
push
dec
pop
outsb
push
jge
xchg
push
mov
push
test
or
dec
xlat
push
adcl
popa
mov
cmp
push
dec
loopne
ss
dec
push
sub
pop
lretw
fbstp
or
inc
add
xor
cwtl
lds
aaa
nop
pop
jmp
int
jl
dec
add
or
aam
jg
dec
pop
cld
repnz
jae
or
popa
fldcw
cmpsb
push
jecxz
cli
pop
sbb
inc
rolb
sti
enter
xor
gs
cmp
bound
fldcw
sub
insl
mov
xchg
and
lcall
add
lock
mov
jne
jl
addb
inc
dec
sbb
rorb
js
stc
xchg
add
and
lock
inc
mov
jmp
mov
push
mov
and
das
out
sahf
inc
ucomiss
jmp
sbb
es
outsb
push
sahf
or
negb
xor
repz
stos
cs
cmpsl
xchg
addr16
and
add
int3
in
lock
fnstsw
cmc
test
mov
or
mov
jns
arpl
pop
push
inc
das
xchg
mov
addl
or
pop
adc
xlat
jns
adc
or
cmpsb
scas
leave
adc
push
fcomip
xchg
mov
push
into
xchg
stos
addb
outsb
divl
jno
in
xor
cwtl
cmp
sub
push
pop
sarl
subl
mov
addr16
add
adc
xchg
repnz
mov
in
sbbb
mov
pop
imul
xchg
cmp
pop
mov
mov
adc
fdivrs
pop
add
xor
mov
leave
sub
sbb
in
dec
pop
scas
cmpb
inc
jnp
or
mov
mov
adc
jle
or
sti
insb
push
outsb
or
arpl
and
dec
aad
push
add
cwtl
mov
pop
jge
gs
push
scas
add
adc
xlat
pop
orb
sub
mov
pop
sub
fisubrs
dec
lahf
pop
sti
push
fbld
andb
mov
ret
mov
gs
test
movsb
lock
mov
pop
push
jmp
daa
cmp
mov
inc
dec
and
fsubs
sahf
mov
mov
jno
loope
dec
mov
fnstenv
push
mov
stc
inc
mov
xchg
imul
jle
js
push
into
out
xchg
pop
xor
mov
fimull
addr16
add
or
fs
mov
inc
xor
imul
cmp
lock
addb
les
mov
data16
xor
stos
inc
imulb
dec
mov
cmp
aam
xor
in
sarb
hlt
insb
rclb
mov
scas
or
add
push
lock
xlat
leave
sbb
cmp
outsb
pop
mov
xchg
and
sbb
dec
mov
hlt
mov
ret
ds
in
jbe
testb
popa
int
stos
add
cmp
mov
xchg
lock
push
xor
enter
out
mov
cmp
push
bound
leave
inc
pop
lock
subl
push
or
imul
mov
repnz
ret
add
pop
xchg
mov
pop
mov
pop
fisubrs
push
outsl
add
inc
xor
daa
out
pop
insl
sbb
push
push
push
sarl
test
fdivl
sbb
lods
cwtl
sub
out
cmp
out
xchg
mov
inc
sub
lods
mov
or
orb
rolb
test
out
cmp
pop
repz
sbb
jno
lock
shrd
sbb
int3
mov
push
pop
ss
shrb
lods
iret
ret
dec
jno
sub
xor
sub
loopne
stc
xor
movsl
stc
mov
and
test
loopne
push
int3
and
xor
cmp
repz
jnp
scas
cld
or
test
fdivr
inc
cmp
bound
stos
test
adcb
or
test
mov
xchg
in
jbe
lahf
lcall
movsl
out
imul
sub
or
jae
lds
sub
xchg
xchg
shll
jl
clc
add
dec
mov
psrlq
add
sarl
mov
inc
mov
cmpsl
dec
clc
sbb
sarb
adcl
mov
push
xor
lahf
aam
repnz
push
sub
push
mov
lods
lcall
mov
mov
xor
adc
lods
xor
lock
xchg
mov
inc
mov
adc
inc
add
push
xchg
int3
sbb
lret
pop
lea
inc
icebp
jl
jns
subb
das
jl
lret
pop
push
mov
in
jecxz
push
mov
mov
imul
aad
cmc
jmp
cltd
or
add
das
mov
outsb
icebp
dec
push
or
push
aad
mov
mov
lcall
cmp
and
and
add
or
add
testl
inc
cmp
inc
push
ret
lret
int3
xor
ficomps
int3
mov
jne
pop
sbb
and
idivb
les
mov
adc
cld
aad
mov
leave
pop
push
out
into
js
mov
rcll
pop
ljmp
push
sahf
lock
xor
jne
jp
inc
imul
arpl
jecxz
rolb
push
jmp
xchg
cmp
pop
inc
xor
lods
push
loope
arpl
pop
dec
pop
movsl
lock
arpl
sub
jns
ret
mov
fdivl
aad
scas
mov
shrb
push
xchg
aas
mov
sbb
push
inc
addl
xchg
xchg
into
cmp
orl
xchg
ss
daa
mov
in
cmp
sti
mov
pop
xor
outsl
testb
iret
bound
shll
mov
cmp
les
addr16
xor
gs
cwtl
fidivl
sub
adc
jbe
xor
add
adc
or
mov
aad
xchg
cmpsl
pop
lock
mov
pop
mov
shrl
mov
repz
ljmp
gs
cmp
push
mov
dec
dec
sbb
xlat
xchg
rorb
mov
push
xchg
adc
gs
sahf
mov
sub
dec
pop
mov
scas
mov
adc
nop
push
or
or
sahf
lods
sbb
pop
xchg
test
sbb
push
leave
mov
clc
adc
outsb
lock
in
stos
push
test
aam
rorl
mov
bound
xorb
fdivl
pop
out
jge
or
xor
push
repnz
aam
mov
xor
pop
push
data16
aad
jecxz
mov
xchg
mov
aad
xor
mov
popa
ret
mov
xor
xor
shrl
stos
pop
jno
clc
imul
push
and
add
xlat
mov
jle
jp
cld
push
fldt
jmp
cli
je
cmp
dec
cmpsb
not
sti
inc
xchg
stos
outsl
call
scas
push
rcrb
mov
sahf
inc
xchg
popa
mov
xchg
xchg
mov
fs
or
rcrb
loope
xor
out
jno
inc
lock
sub
jnp
sahf
pushf
sub
lods
mov
inc
scas
movsb
scas
imul
dec
sti
pop
sbb
outsb
mov
cmpsl
stos
mov
sub
sub
push
insb
scas
xchg
dec
adc
push
dec
test
or
cmp
cld
add
mov
xor
subb
push
divb
faddl
mov
jmp
lock
inc
mov
inc
sub
adc
stos
movsl
fwait
jno
adc
or
and
lock
stos
push
adc
or
cmp
lock
inc
inc
push
cmp
insl
stos
xchg
or
xchg
inc
sahf
lods
in
push
inc
rcll
notb
mov
rolb
jb
xor
push
sub
mov
in
push
xchg
ds
mov
cmp
mov
pop
outsl
dec
push
mov
cmpsl
jp
jnp
das
aam
xor
xrelease
decb
pop
incb
push
push
xchg
lods
add
cld
test
jmp
rorl
imul
and
pop
rcr
das
or
adc
dec
in
inc
mov
fnstcw
cmc
push
mov
dec
push
int3
into
push
inc
jle
pop
pop
push
xor
push
movb
adc
jo
xchg
inc
dec
les
sub
imul
imul
aaa
mov
xor
pop
cmpsb
in
or
jecxz
cmp
out
cmp
and
xor
add
xchg
mov
cltd
xchg
cmovs
mov
test
gs
adc
jle
mov
add
lds
jge
fs
aaa
mov
pusha
lock
xchg
and
ds
xor
mov
push
jp
sub
iret
das
rcll
or
notb
mov
aam
rcl
mov
cmc
aas
sub
sti
adc
or
mov
jno
xchg
mov
cli
sub
jecxz
shll
ds
xchg
xchg
fs
fidivl
movsl
lock
inc
cmpsl
or
mov
ficomps
sub
dec
xchg
in
test
and
mov
pop
or
ja
sbb
xchg
in
cmc
jmp
ficoml
mov
icebp
int3
lock
adc
fcom
xor
jae
imul
jno
mov
in
adc
aas
clc
push
insl
fadds
xor
xchg
lods
jg
push
subb
dec
jg
mov
jns
pop
xchg
and
sbb
sub
inc
out
mov
inc
pop
dec
push
sarb
iret
xor
adc
pop
int3
loopne
jae
sub
inc
loope
std
fisubrs
mov
mov
ljmp
cmp
push
push
lods
push
jp
insl
in
push
cmpsl
shrl
cmp
rclb
cmp
push
xchg
lret
outsb
sub
leave
mov
mov
jmp
xor
jmp
imul
or
int3
test
out
jmp
inc
mov
shrl
push
movsb
imul
cmp
cmp
stc
pop
add
push
mov
sbb
jge
push
xchg
imul
loope
je
dec
icebp
sbb
and
xchg
or
mov
jmp
call
outsl
and
cmp
sub
push
aam
insl
xchg
das
mov
dec
sarb
outsl
bound
data16
cmpsl
lock
push
ret
or
xor
pop
xor
cmp
mov
andb
cmpsl
xchg
cmc
das
in
sahf
inc
adc
test
lock
cmc
sbb
mov
scas
sahf
sbb
iret
test
pop
xor
aas
aaa
das
or
pop
mov
xlat
push
andl
repz
insb
sub
in
xor
xchg
or
cmpsb
aad
cmpsl
inc
cmpsl
push
movsb
mov
pop
out
jecxz
lea
testb
shl
movsl
cmp
daa
or
dec
cmp
xor
add
dec
lret
fs
adc
sub
sahf
pop
push
mov
ret
cmp
and
scas
inc
push
xchg
mov
fidivs
push
outsl
xor
push
sbb
and
pop
cmp
adc
insl
mov
xchg
pop
mov
jne
inc
fnstsw
xchg
xchg
inc
repnz
adc
test
and
jl
es
fldt
push
push
cmp
lods
sar
sbbl
cmpsb
push
pop
pop
jb
mov
pop
xorb
es
or
push
aad
stos
clc
in
pop
adc
pop
add
divl
js
leave
scas
out
rcrb
inc
adc
xlat
jp
mov
mov
jp
and
pop
repz
mov
jl
pop
dec
or
mov
cmpl
sub
xor
call
add
into
push
adc
xchg
imulb
lock
inc
add
cmp
fcompl
adc
jmp
in
repnz
dec
int3
insb
mov
cmpsb
jae
leave
ss
testb
mov
sti
jg
andb
sub
test
add
addr16
loope
xchg
mov
repnz
lret
xor
mov
xor
push
aam
imul
aad
dec
orb
jg
push
in
gs
or
inc
js
jmp
and
loop
addr16
flds
sbb
add
leavew
pop
push
in
in
mov
sahf
xchg
das
xor
imul
fadd
sub
push
jne
sub
jnp
inc
adc
cmp
jo
jmp
adc
lock
pop
iret
add
mov
int3
jl
insb
adc
out
dec
push
inc
jge
and
mov
dec
mul
or
orb
jmp
lods
push
imul
iret
sbb
jb
push
xchg
sbb
inc
lds
cltd
imul
stos
lcall
sub
dec
mov
cmp
mov
fldcw
sarl
icebp
sahf
fldcw
mov
mov
sbb
inc
inc
mov
roll
cmp
pop
sarl
pop
bound
jle
lods
js
pop
pusha
test
push
inc
scas
xor
push
sbb
pop
cmp
sub
roll
lahf
mov
jmp
sbb
out
dec
push
pop
add
mov
das
lahf
ljmp
dec
lods
xor
mov
sarl
push
push
dec
repz
popf
ja
in
in
sub
mov
cmc
mov
sub
fldenv
subb
push
xchg
adc
dec
dec
dec
push
std
call
xlat
aad
or
add
xchg
aaa
mov
mov
dec
cmp
in
lock
test
cmpsl
add
jb
test
imul
movsb
sbb
inc
add
cmpsb
push
pop
xchg
inc
inc
mov
dec
cmp
call
mov
shrb
addr16
push
repnz
push
push
push
movsl
in
stos
pop
pop
pop
cmpsl
cmpsb
mov
push
push
ret
out
jb
cmpsl
js
aas
jmp
ljmp
js
inc
adc
xor
in
dec
cmpsl
sbb
mov
dec
inc
xor
bnd
mov
push
gs
sbb
clc
sub
mov
sub
mulb
test
mov
xchg
sub
or
lds
pusha
mov
ficoml
in
jmp
cmpsl
xor
in
loopne
mov
imul
jp
mov
shlb
stc
aad
inc
pop
stos
or
ja
aas
stos
and
xchg
sbb
mov
pop
push
sub
pop
fwait
shll
cmp
mov
rorb
xor
sub
in
movsb
cmpl
addr16
into
mov
inc
fsubp
xor
push
push
inc
adc
out
mov
push
imul
sub
jb
imul
jp
int3
xor
xor
jb
and
pop
xor
lret
adc
sub
xor
sbb
cmp
fldl
popa
out
cmp
xchg
pop
mov
repz
mov
jmp
jp
insb
push
in
rolb
inc
lds
ljmp
lret
push
popa
xor
adc
adc
scas
sbbl
lcall
div
iret
fidivl
and
mov
mov
lock
dec
fistps
xchg
aas
ds
test
ljmp
in
cmp
ret
xor
sti
in
push
jnp
dec
xlat
sbb
aaa
pop
ss
cmp
out
cmp
mov
movsl
arpl
sub
out
cwtl
push
inc
lods
je
es
aad
mov
cmpsl
jp
fcoml
pop
mov
test
aas
and
and
pusha
push
add
repz
xor
lock
mov
das
rolb
and
loopne
mov
in
xlat
cld
xchg
fdivrl
lock
xor
sbb
orl
mov
cld
in
ret
test
pusha
inc
lock
popl
cmpsb
cltd
and
sub
xor
xor
sti
adc
add
mov
add
scas
filds
push
ljmp
stc
insb
cmc
std
scas
leave
shl
mov
push
jl
leave
mov
in
xchg
out
cs
js
std
push
jnp
push
mov
movsb
cmpsl
cmp
ret
mov
jp
nop
lods
push
pop
xchg
push
xchg
xchg
add
pop
popf
adc
imul
xor
fs
push
test
or
mov
add
or
or
push
stos
xchg
adc
or
cmp
or
pop
push
sub
in
scas
mov
cmp
stc
pop
or
test
lock
mov
cmp
xor
adc
pop
dec
xchg
arpl
mov
jo
adc
mov
mov
cmpsb
enter
fs
in
cmp
jns
mov
push
shrb
fdiv
sub
xchg
jae
pop
in
outsl
hlt
std
repnz
push
nop
sbb
inc
sbb
xchg
iret
ret
pop
sbb
sub
sahf
xchg
jp
popf
test
cltd
or
xor
push
adc
or
pusha
pop
les
not
aaa
notl
flds
leave
mov
pop
shrb
adc
repz
lods
aaa
stos
xlat
inc
test
xchg
cmp
inc
cmp
pusha
pop
sub
fiaddl
imul
lods
pop
mov
fdivrl
loop
fst
ret
lock
mov
int3
sub
push
dec
push
jnp
loope
dec
adc
into
xchg
and
pushl
jbe
push
addr16
scas
dec
loope
sbb
push
xchg
aad
mov
data16
xchg
rorb
pop
mov
shlb
jmp
mov
mov
imul
sub
xchg
add
inc
sbb
pop
mov
enter
push
inc
cld
pushf
cld
outsl
push
xchg
call
xchg
cmp
push
cld
lods
icebp
cmpsl
inc
push
sub
out
cwtl
in
movsl
mov
dec
push
fcmovnu
ds
cmpsb
push
sti
or
fs
dec
iret
mov
and
mov
movsl
fdivrs
xor
fnstcw
inc
shl
or
mov
aad
jp
cmpsl
push
imul
inc
or
add
lock
stos
movsw
sub
push
es
lea
cmpsl
xor
out
pop
in
xchg
dec
inc
push
fs
sbb
xor
sbb
jbe
lods
push
pop
push
movsl
call
xor
push
push
sub
mov
jno
jbe
xchg
jp
loope
xchg
mov
pop
fcomi
cmp
and
in
sbb
mov
cli
aad
cmc
loop
imul
pop
adc
ja
mov
mov
popa
mov
inc
pop
push
adc
cmc
ljmp
fidivrs
xor
push
repnz
push
sub
in
push
sub
stos
in
cmp
lahf
insl
mov
aas
lods
bound
rorb
daa
movsb
push
inc
xor
inc
xor
cli
cmp
mov
sub
adc
fistl
nop
decb
dec
adc
daa
lcall
dec
stos
xor
and
inc
iret
sub
lods
cld
and
add
insl
lcall
cmpsb
cmp
sbb
in
test
mov
jo
adcb
rcrl
cmpsl
int3
shll
je
lret
cmp
jecxz
ja
xchg
lods
dec
xchg
aad
pop
into
xor
sahf
or
test
mov
in
pop
push
sahf
das
cs
gs
sbb
popa
cmp
stos
xor
ret
mov
mov
movsl
jmp
lcall
xchg
mov
lahf
xchg
adcl
out
pop
adcb
cmpsl
out
mov
add
cmp
pop
movl
cmp
xchg
cld
int
ljmp
adc
pop
scas
xchg
scas
mov
in
sbb
mov
jns
pop
xor
lods
test
inc
cmp
sarb
adc
stos
inc
sarb
stc
pop
or
inc
adc
jns
mov
xor
frstor
mov
xchg
mov
mov
mov
lret
mov
pop
mov
es
mov
lock
mov
jmp
inc
push
je
cmc
fidivs
dec
push
push
mov
mov
adc
mov
je
mov
cmp
sub
add
stos
push
pusha
imul
jp
addr16
adc
and
xor
mov
jecxz
xor
and
dec
pop
out
xor
push
push
bound
out
push
lret
mov
sti
xor
xor
aaa
jae
add
popf
mov
imul
outsl
imul
movsl
push
dec
mulb
pop
sub
in
xlat
bound
add
xchg
scas
push
pop
or
dec
loopne
fucomp
movsl
xchg
call
rcll
out
push
aaa
lods
bound
push
cmpsl
int3
test
inc
inc
xlat
inc
aas
xor
in
pop
xor
sbb
dec
pop
test
loope
inc
aam
clc
xchg
pop
jmp
das
pop
inc
add
jb
mov
enter
mov
roll
ljmp
pop
ret
inc
pop
pop
mov
jns
cltd
into
rcll
and
or
push
in
icebp
loope
lret
adc
push
pop
scas
push
sub
jnp
sbb
jae
fucomp
and
or
dec
cmpsl
xchg
pop
lods
add
jle
mov
mov
mov
test
mov
push
lock
je
ret
nop
cmp
push
in
iret
push
push
imulb
xor
add
jmp
ljmp
mov
mov
int
sahf
cmp
jge
pop
dec
imul
push
push
in
arpl
addr16
ljmp
addr16
in
repnz
mov
ja
stos
dec
ds
add
jp
push
mov
rclb
and
adc
mov
ret
xchg
cmp
aad
hlt
inc
aam
sbb
mov
pop
pusha
pop
arpl
aam
mov
mov
imul
mov
cld
cmpsl
push
pop
sbb
xor
adc
out
dec
inc
int3
mov
mov
ljmp
sarl
das
popa
pusha
add
add
jb
jecxz
outsl
idivl
mov
adc
and
pop
add
cmc
les
fisttpll
fistpl
lret
and
or
xchg
mov
xor
or
or
xchg
scas
push
and
daa
or
inc
outsb
push
mov
cmpsl
sbb
xchg
xchg
das
pushf
mov
ret
mov
mov
fisubl
out
mov
sarl
push
rclb
lret
sbb
fs
xchg
push
add
push
jp
xor
or
mov
or
icebp
pop
xcrypt-ecb
cmpsl
dec
jl
pop
push
mov
sub
push
jge,pn
std
xlat
cs
insb
aaa
and
inc
jmp
dec
sub
stc
sub
xchg
negl
lds
jae
popa
jle
je
lods
stos
jo
dec
sbb
hlt
hlt
into
out
mov
and
adc
or
add
lcall
imul
and
push
test
push
adc
cmp
ds
inc
and
add
sub
inc
xor
mov
cmc
cli
adc
xchg
fdivr
and
je
mov
add
jecxz
inc
daa
xor
dec
cmp
ss
sub
loope
push
addr16
add
mov
or
leave
fnstcw
push
mov
dec
mov
jge
pop
inc
js
mov
inc
sub
imul
mov
and
push
sbb
jmp
or
lret
mov
mov
decl
cmp
mov
or
mov
clc
xor
jno
adc
adc
iret
popl
test
pop
imul
mov
mov
in
jmp
xchg
test
ret
jmp
mov
add
xchg
fstpl
adcl
mov
push
push
clc
pop
mov
inc
in
mov
icebp
push
in
push
xchg
in
stos
aas
pop
sbb
adc
sub
sub
outsl
sbb
dec
test
mov
js
leave
xchg
xchg
jnp
cmp
ja
add
sahf
inc
inc
add
add
bound
jnp
cmp
mov
cmp
nop
xchg
or
adc
add
dec
mov
mov
jo
add
lods
leave
data16
cltd
dec
aaa
fildll
stc
push
stos
inc
mov
aaa
fcoms
cs
in
fstps
and
pop
sub
sub
icebp
jnp
sub
fcmovu
sti
emms
jg
cmpsl
xor
jmp
shrb
xchg
inc
lret
mov
inc
nop
in
pop
mov
cmpsb
fs
add
cltd
pop
mov
loop
loop
repz
adc
jo
push
shl
movsb
dec
mov
xor
push
mov
mov
pop
ss
and
and
jmp
ljmp
jnp
shlb
pop
pop
repnz
ret
xor
mov
adc
in
ljmp
jb
mov
push
lret
pop
insb
mov
pop
movsl
xor
outsb
mov
sub
xorl
dec
xchg
icebp
int
dec
adc
frstor
gs
cmp
push
test
xor
sar
cmp
jg
mov
dec
push
inc
test
mov
jne
jnp
cmp
pop
into
cmp
movsb
mov
cld
leave
mov
adc
push
mov
push
jl
outsl
inc
pop
test
out
enter
bound
add
aam
pop
cmp
add
cmp
push
jge
xchg
pop
xchg
xchg
cmp
or
stos
ss
out
out
adc
mov
lods
xor
adc
test
and
mov
in
mov
lock
mov
push
es
int
dec
cmp
aas
cwtl
lods
adc
repnz
pop
in
adc
inc
out
rcrl
data16
and
mov
insl
and
popa
mov
sub
clc
dec
xchg
cld
pop
out
icebp
popa
push
dec
pop
pop
and
cmpsl
adc
ret
orl
mov
aas
xor
mov
insl
icebp
lahf
or
adc
add
mov
mov
inc
out
leave
push
popf
or
lret
lret
pop
adc
nop
in
int3
inc
inc
or
mov
xor
repz
push
and
xor
lods
repz
push
sbb
mov
hlt
jl
divb
flds
inc
jl
test
repz
iret
push
mov
stos
inc
in
insl
mov
adc
xchg
dec
jle
outsb
int
leave
lock
scas
ljmp
lret
inc
sub
jno
mov
adc
rcl
sub
push
sub
xchg
outsb
inc
pop
add
xchg
in
inc
into
push
xor
int3
pop
cmp
fstl
mov
out
mov
cmp
cmpsl
scas
iret
jae
fwait
mov
push
lret
pop
cmpsl
lock
dec
pop
pusha
jecxz
rorb
push
push
and
ds
pop
push
test
push
and
add
pop
sub
push
stos
int
bound
ror
aam
cmp
push
sub
dec
inc
jl
test
inc
mov
movsl
orb
xor
xchg
in
or
popa
mov
add
repnz
insl
or
mov
imul
dec
mov
pop
dec
xor
or
andl
je
and
dec
push
push
fidivl
inc
out
or
js
aam
add
out
daa
mov
mov
fsts
xor
or
push
pop
in
mov
dec
and
loopne
mov
cmp
inc
jl
nop
imul
dec
pop
push
xor
int
js
push
lock
pop
fwait
icebp
mov
push
rcll
mov
dec
push
les
push
jb
mov
jle
mov
leave
or
rclb
stos
sbb
and
xchg
xor
xor
in
push
aaa
leave
or
inc
sti
in
sbb
je
out
cmp
dec
in
cmp
adc
lock
clc
xor
rcrl
jbe
xor
shl
and
xchg
sarb
xchg
pop
pusha
pop
cmp
sub
adc
ja
jle
sub
pop
push
cmp
repz
mov
jp
or
mov
sub
lds
nop
aam
insl
jno
jp
icebp
sub
pop
xchg
pop
test
cmp
inc
mov
imul
pop
lret
out
pusha
or
sbb
xlat
ja
sub
inc
mov
repnz
repz
jmp
cmp
xor
pop
bound
pop
cmc
and
test
orb
add
push
mov
push
add
popa
mov
aam
orb
inc
xlat
cld
cmpsl
cmp
in
rcrl
and
in
lock
sbb
pop
pop
push
hlt
xor
daa
rcr
sub
xchg
pop
sti
sub
and
sub
test
push
loope
shl
lock
imul
mov
out
into
pop
and
mov
mov
mov
dec
pop
push
pop
xchg
pop
sbb
nop
int
xchg
cmp
and
scas
clc
push
sbb
mov
sbb
sbb
xor
sub
jo
mov
or
inc
or
dec
test
es
sbb
sub
or
leave
int
in
std
jne
leave
pusha
mov
and
xor
or
test
xchg
lock
cmp
cmp
pop
leave
mov
or
hlt
mov
dec
jp
aaa
sub
movsl
jle
outsb
dec
xor
pop
jecxz
mov
test
xor
outsl
jo
lock
cmpsl
or
mov
sub
jp
cmc
add
lock
add
jb
add
mov
pop
push
test
jns
and
pusha
inc
pop
hlt
mov
insl
cld
ljmp
xchg
leave
movsb
cs
ljmp
add
mov
fs
lock
lahf
std
xor
js
xor
push
mov
call
pop
sub
mov
clc
popa
aam
das
arpl
inc
cmp
inc
outsb
mov
mov
jno
std
jae
hlt
mov
pop
lds
fnsave
jmp
mov
mov
js
xchg
xlat
ret
fidivrs
popa
notb
dec
mov
orb
outsb
pop
hlt
sub
ja
inc
push
lds
and
jmp
in
inc
into
cmp
xor
cltd
adc
xchg
pop
mov
ret
dec
pusha
ret
mov
add
lret
cmp
sbb
mov
or
imul
mov
adc
out
lods
lods
sub
lahf
sub
xlat
jp
iret
mov
sti
push
and
aaa
sbb
dec
mov
xchg
outsb
inc
aad
xchg
aas
mov
and
cmpsb
add
filds
pop
sub
adc
mov
xor
movb
xor
cmp
inc
imul
mov
adc
lahf
sti
push
aad
movsl
sarl
fs
sub
ds
inc
cli
xor
inc
xor
bound
push
and
pop
xor
pop
out
mov
idivl
inc
das
ljmp
dec
pop
cwtl
xor
pop
dec
mov
cmpps
cltd
rcl
dec
hlt
mov
and
repz
push
push
jmp
mov
sti
mov
adc
cmc
leave
jae
dec
xchg
mov
stos
xorl
or
add
xor
fcoms
sbb
push
call
push
movb
stc
mov
shll
inc
pop
mov
mov
jb
stos
std
push
rorl
sbb
cli
xor
sub
dec
gs
mov
push
lock
in
nop
mov
sti
push
inc
imul
ss
int
mov
add
or
push
xchg
fmuls
or
pop
inc
and
lock
cli
ljmp
fwait
fs
out
je
cld
loope
pop
rolb
and
gs
inc
lock
ret
test
mov
or
mov
cmp
push
std
sub
inc
dec
sub
jnp
add
push
fidivrs
mov
cmc
mov
imul
aas
xor
popa
clc
or
cmpsb
ss
in
shr
xchg
imul
testl
mov
mov
and
jmp
dec
xor
adc
mov
push
cmp
push
shrl
imul
push
add
inc
ss
clc
xchg
cmp
sub
imul
or
repz
push
or
cld
xor
xor
inc
lods
jmp
cs
jmp
and
repnz
cmp
dec
scas
push
pop
gs
sbb
in
fsts
mov
mov
aas
inc
adc
repz
lds
imulb
dec
movsb
lods
leave
push
fucomip
sahf
jbe
pop
rolb
pop
aas
in
push
test
mov
and
iret
stos
aad
push
into
out
push
jle
ret
icebp
adc
mov
shll
idiv
icebp
inc
hlt
ljmp
int3
and
addr16
je
bound
mov
ja
adc
adc
fidivl
shl
mov
hlt
push
sbbb
dec
lock
pop
cld
xor
mov
jle
jo
xchg
add
push
mov
sub
pop
xor
imul
ss
inc
mov
push
push
fwait
mov
rorb
lods
aas
or
arpl
mov
sub
cmp
notl
cmp
fs
jge
mov
adc
cmp
xor
imul
faddp
jecxz
mov
jo
jno
pop
or
adc
cld
dec
sub
push
dec
xor
mov
pop
xchg
sbb
sbb
adcl
hlt
pop
loopne
and
test
sahf
gs
pop
inc
xchg
push
push
adc
adc
sub
pop
push
in
add
testl
loope
dec
aam
lds
push
sbb
ss
bound
orb
xor
jae
xchg
int
push
adcb
xor
adc
inc
cmpsb
test
mov
dec
lods
ret
std
ljmp
sahf
jae
mov
or
in
bound
fcomip
cld
outsl
aas
cmp
inc
adcb
dec
into
pop
int
cmc
jae
pop
andb
in
pop
push
dec
popf
adc
sub
xor
bound
mov
es
and
loope
xchg
sub
mov
push
stos
clc
push
or
fcmovbe
push
lods
cmp
insb
xor
fstpl
aaa
test
fnsave
cmc
addr16
pop
outsb
jmp
sbb
jnp
loop
sub
outsb
cs
loopne
hlt
xchg
push
mov
push
je
inc
jge
mov
in
mov
in
sub
add
jmp
lock
jbe
jne
push
jp
cmp
stos
sub
xor
addb
or
jge
or
ret
int3
mov
jnp
shlb
add
xchg
lock
das
mov
out
xor
in
xchg
bound
pop
pop
inc
fidivs
add
adc
out
in
in
or
mov
std
cmp
out
inc
or
call
shll
add
xor
inc
xchg
mov
mov
jnp
add
and
push
int3
xchg
pop
ss
push
push
shlb
dec
test
cmpsl
adc
sub
mov
or
mov
push
xor
cmp
lock
aad
or
inc
mov
xchg
jmp
clc
into
jb
xorl
dec
call
xchg
fnstcw
xor
rcr
sub
sbb
cmc
xchg
scas
shlb
or
cmp
adc
mov
inc
cld
mov
fmuls
sbb
lock
lds
add
push
jae
pop
ja
or
fmuls
in
or
lods
jne
jae
dec
fists
jmp
push
dec
insb
or
mov
or
loopne
pushf
sub
sahf
dec
push
repnz
adc
in
sbb
xchg
inc
in
test
dec
push
fs
popf
rcl
cmp
rolb
ja
pusha
in
or
push
outsb
push
cli
or
mov
xchg
sub
pop
loopne
or
sub
cmp
push
inc
pusha
jnp
and
popw
dec
xchg
pusha
js
cmp
movsb
xor
aam
test
fstl
lds
jno
mov
jmp
jge
sub
rcll
loope
pusha
sbb
das
enter
mov
mov
inc
xchg
inc
sahf
inc
push
xor
insb
imul
int
pop
xor
xchg
add
xor
add
adc
jns
cmp
xchg
lea
imul
les
add
cltd
lock
lock
adc
daa
cli
xor
inc
cmp
jmp
mov
lock
add
movsb
mov
jp
or
pop
stos
sti
adc
mov
and
push
and
inc
xchg
or
jmp
fisttpl
pop
mov
imul
lret
shl
js
sub
jl
pop
imul
mov
xchg
imulb
out
inc
mov
add
rcrb
into
xor
jmp
sar
icebp
out
mov
xchg
pop
xchg
jno
mov
xor
xor
dec
xchg
lret
outsb
in
jge
shl
shll
adc
icebp
outsb
jne
inc
xchg
lret
push
mov
sbb
push
in
mov
pop
inc
mov
sbb
nop
mov
push
in
pop
push
push
out
jbe
mov
push
cmpl
fimuls
or
loop
pushf
xchg
mov
cmp
push
loope
cmpsb
mov
dec
lret
lock
sar
sbb
inc
lods
insb
jne
pushl
lea
push
mov
dec
sbb
insb
insb
cmp
xor
or
stos
pop
jp
in
jmp
add
mov
loop
ja
scas
lret
aam
push
sbb
mov
pop
jo
push
xor
lds
cmp
aas
mov
cli
add
pusha
in
sarl
sbb
mov
mov
es
and
ljmp
call
sti
sub
mov
xchg
addl
call
push
aad
clc
lock
inc
jmp
jb
push
sub
pop
cs
insb
xor
pop
das
jecxz
mov
adc
lret
cmp
sbb
mov
or
dec
adc
sti
lods
push
pusha
test
jno
ja
sarb
lahf
add
jp
outsl
shlb
fwait
sub
xor
xor
fwait
xchg
aas
adc
not
mov
fildll
jmp
das
pop
clc
mov
xchg
gs
pushf
pop
jne
stos
push
out
inc
sbb
dec
movsl
cltd
bound
mov
inc
pop
clc
and
adc
cmp
pop
or
and
lcall
and
cmp
int3
dec
and
stos
adc
insb
lahf
pop
out
pushf
std
cmpsl
lret
mov
cmp
faddp
mov
adc
pop
mov
and
xor
inc
hlt
imul
or
dec
jp
dec
dec
insb
lds
ficoml
push
sub
lock
testl
data16
lods
sub
roll
lret
repnz
fwait
cmp
clc
jo
andl
inc
testl
or
scas
adc
in
jnp
fwait
pop
jl
jbe
mov
jns
mov
fsubrs
add
gs
pop
adc
pop
cmpsl
inc
shrb
and
mov
xchg
push
or
cmpsb
xor
add
std
sub
xor
or
pusha
arpl
jmp
jp
mov
jne
jg
add
clc
lea
bound
out
ds
inc
rcrb
or
xor
cli
stos
fnsave
sarl
rorl
dec
push
flds
subl
mov
outsl
xor
std
push
stc
clc
or
scas
push
imul
jo
cmpsb
ret
lahf
scas
int
or
rcrb
ds
aam
inc
cmpl
push
stos
test
ljmp
add
lods
adc
lahf
dec
dec
jp
iret
add
push
repz
push
stos
lahf
pop
add
in
xor
pop
push
xor
nop
inc
dec
sub
test
inc
out
push
or
sbb
jmp
push
sub
mov
imul
push
out
push
xchg
stos
enter
cmp
loope
lods
repnz
incl
dec
push
push
adc
dec
mov
xchg
mov
frstor
sbb
imul
sbb
testl
push
repnz
shrl
inc
push
mov
ror
dec
lahf
movsl
dec
ss
into
push
repnz
jbe
shr
ds
jg
cmc
int
mov
pop
mov
rorb
mov
stos
add
cmp
adc
sub
xor
pop
pop
dec
push
aad
mov
mov
inc
popf
lds
and
popa
xchg
enter
xchg
mov
push
mov
mov
loop
xchg
fwait
jns
inc
movsb
ja
mov
lret
cmp
push
pop
adc
xchg
ljmp
xchg
push
popf
mov
sahf
push
dec
mov
mov
mov
insl
repz
pop
sti
cmp
stos
push
dec
mov
in
aad
das
pushf
add
add
mov
lods
test
lock
push
mov
sub
push
in
fisttps
pop
push
loope
xor
hlt
jns
fildll
xchg
xchg
out
ja
gs
ds
push
stc
mov
leave
popa
add
push
mov
push
mov
sarl
nop
std
xor
or
stc
xor
mov
sahf
rol
pop
cli
mov
subb
aaa
inc
scas
jne
jb
in
xchg
mov
movsl
push
cmpsb
cmp
lea
scas
rol
push
cmpsl
push
cmp
mov
dec
jb
sub
cmp
xchg
mov
mov
aas
mov
jmp
adc
add
repnz
or
gs
cmc
sbb
test
jp
test
add
mov
add
ret
mov
into
fistpl
jge
xchg
mov
cmp
mov
insl
jae
out
sbb
mov
inc
jg
mov
cmp
shrb
outsl
push
jb
sbb
cmp
xor
inc
or
xor
inc
jne
jp
outsb
pushf
add
cs
out
das
push
cmp
out
or
popf
sbb
ss
push
mov
adc
sub
mov
xorb
es
aad
sbb
adc
pop
push
jp
cwtl
imul
cmp
loop
sbb
in
sbb
mov
jl
mov
cmp
add
lods
outsb
sahf
cli
andb
jbe
push
push
mov
cmpsb
sar
lcall
xchg
iret
jg
dec
xchg
loope
push
shrb
push
aaa
dec
adc
ds
xchg
inc
xchg
faddl
cmp
cmp
rcll
mov
mov
lock
insb
andb
ljmp
es
lea
pusha
lock
iret
cmp
or
push
inc
mov
push
cmp
sbb
imul
outsb
mov
insb
adc
jmp
fcoms
pop
mov
cmpsb
icebp
inc
sti
sbb
test
inc
sub
in
dec
iret
xor
adc
cmpsl
mov
rolb
in
aad
dec
pop
cmp
out
orl
popf
or
xor
pop
add
sub
xlat
mov
lcall
inc
and
inc
or
mov
inc
sbb
cmc
iret
cmpsl
mov
sub
cmp
jne
push
dec
imul
push
cli
incb
pop
inc
cmp
test
sub
lock
rcr
jnp
loop
popa
fbstp
mov
lret
bound
mov
push
shll
xor
pop
sub
scas
scas
jnp
fwait
mov
out
jbe
adc
xor
out
mov
mov
fisubrs
dec
adc
cmp
out
gs
std
push
add
mov
out
clc
ja
sub
pop
aad
push
popa
pushf
outsb
lods
sahf
sub
fs
adc
add
je
pop
sbb
push
jnp
out
push
bound
shlb
xchg
xorb
sahf
dec
inc
xor
test
push
cli
cmp
sbb
sbb
xor
adc
cs
jge
and
enter
jp
pop
sub
lds
add
hlt
mov
jl
data16
jecxz
or
xor
inc
push
std
cmp
lock
push
pop
mov
mov
lods
push
push
gs
rcrb
insl
gs
mov
mov
loop
scas
inc
into
add
fisubrs
xor
add
dec
arpl
or
sahf
sub
inc
ljmp
repnz
and
cmpsl
xchg
lock
ret
cmp
xor
pop
call
ljmp
push
fstpt
sub
push
or
sbb
and
aas
mov
mov
mov
popf
adc
push
cmp
rolb
imul
repz
jno
xlat
add
loope
data16
or
add
xor
dec
div
add
into
adc
sub
in
mov
adc
pop
iret
in
scas
xchg
mov
add
dec
pop
daa
pushf
stos
jnp
cmp
push
shl
adcl
enter
or
ja
add
sbb
xchg
imul
jns
shrl
sbb
or
push
adcb
stc
pop
dec
jp
and
ror
and
outsb
push
cmpsb
adc
push
stc
sarb
mov
sbb
jns
mov
mov
xor
lods
mov
push
movl
sbb
mov
xchg
pop
lock
push
or
jge
out
inc
les
sub
dec
lret
cmp
mov
jmp
xchg
xchg
cmp
addb
xchg
jmp
sub
bound
pop
dec
pop
je
mov
into
sbb
sub
and
or
add
imul
out
in
adc
fucomip
and
push
mov
cmc
fldcw
jecxz
push
dec
mov
xchg
es
mov
xchg
xchg
mov
aas
add
inc
add
cmp
inc
fisubrs
in
mov
xor
jnp
in
xlat
sub
cmp
scas
add
scas
ljmp
fucompp
cltd
jnp
push
push
mov
je
mov
iret
movsl
lret
in
stos
pop
inc
adcb
decl
aad
dec
and
add
adc
mov
or
mov
mov
inc
pop
xchg
je
lret
inc
int3
sahf
es
lods
cli
outsl
data16
sbb
xchg
sub
add
pop
inc
or
sub
dec
xchg
push
out
xchg
out
fs
ret
stc
lds
cld
out
je
add
push
sbb
aad
aam
xchg
jge
xchg
jp
and
mov
bound
arpl
arpl
xchg
jle
mov
mov
aad
add
out
lock
es
lahf
sub
mov
mov
cs
aas
push
and
aad
stos
cmp
cmp
dec
pop
pop
pop
jg
and
cld
fnsave
repz
mov
sub
add
pop
sub
push
pop
lods
clc
xor
in
mov
dec
lock
inc
mov
jl
inc
dec
movsb
cli
or
mov
add
add
stc
xor
lret
lcall
cmc
xchg
ljmp
add
cwtl
jmp
adc
pop
stc
addl
xchg
sub
pop
mov
push
sub
stos
ljmp
add
push
cmc
movsl
pop
xor
and
jecxz
cmp
mov
push
cmp
scas
xor
add
lret
sti
dec
inc
push
mov
mov
stos
dec
xor
ja
sbb
rcll
lock
pop
sbb
xor
addr16
lock
xor
cmp
sbb
push
aad
pop
insb
rcr
push
les
xchg
dec
decl
sti
jb
xchg
sub
xor
insb
stos
xchg
incb
fisubs
mov
addr16
sahf
pop
stos
cld
loopne
mov
jl
leave
in
add
jno
std
fucomp
cld
dec
inc
mov
dec
mov
imul
dec
inc
or
adc
inc
sub
push
aas
xchg
sti
in
mov
sub
fisubs
lahf
roll
cld
enter
jl
stc
loopne
dec
xchg
adc
push
ja
dec
iret
fs
or
xor
mov
or
cmpsb
xchg
adc
movsb
mov
aad
cmc
mov
xor
imul
in
add
inc
jge
pop
lret
push
xchg
negb
dec
bound
xchg
subl
cs
cmpsb
push
cli
cld
lahf
pop
loopne
mov
adc
fstpt
dec
cwtl
ss
scas
imul
leave
lds
mov
pusha
outsb
xor
aaa
in
mov
cmp
in
std
fldenv
adc
inc
cltd
mov
iret
aaa
push
imul
sub
xchg
inc
lods
cmp
insb
pop
dec
arpl
ja
mov
adc
inc
jp
shrl
push
and
xchg
outsl
loop
sbb
sub
jmp
mov
pop
ds
mov
push
nop
fistpll
dec
inc
es
lods
in
mov
rclb
sbb
inc
fdivrp
sub
sub
subl
sub
inc
and
mov
push
add
imul
pop
imul
insl
jns
cmp
imulb
cmpsb
cmpl
pop
mov
insb
lea
or
adc
cmp
aaa
jp
icebp
jp
scas
int3
and
xchg
xor
cmp
ficomps
push
cli
addb
add
std
add
stos
mov
sub
icebp
add
dec
aam
mov
or
push
dec
add
dec
into
push
sti
in
jo
mov
scas
icebp
xor
inc
push
mov
les
lock
xor
jecxz
jg
push
add
sub
dec
test
mov
inc
sbbb
adc
fbstp
out
adc
inc
sub
jnp
mov
inc
push
jmp
mov
rol
test
ret
movsb
pop
sub
mov
or
mov
aaa
lods
mov
roll
xor
cmc
push
lock
dec
rclb
sarl
jmp
in
and
inc
mov
push
ja
push
and
call
aas
jmp
icebp
rolb
dec
dec
test
inc
movsl
js
outsb
xor
sub
sub
in
in
sbb
push
lods
pop
sbb
ret
test
mov
dec
inc
lds
push
pop
test
jmp
dec
cmpsb
inc
lret
popa
ret
mov
cmpl
and
push
test
outsl
sub
xchg
add
jl
or
shll
pop
sub
jo
imul
cmp
jg
cmpsl
ja
sbb
fs
xchg
cmp
gs
adc
ja
xchg
rcll
insl
imul
inc
and
cmpsb
cwtl
cmc
out
pop
in
or
jb
shrl
ja
jo
cmp
xor
jp
xchg
and
xchg
xor
push
std
push
fs
xlat
dec
aas
mov
xchg
movsb
push
andl
mov
test
or
cltd
outsb
add
or
xchg
hlt
xor
push
outsb
notl
xor
lds
or
lds
roll
invd
inc
jb
pop
dec
xchg
inc
ret
pop
test
add
movsl
xor
xchg
movsl
leave
and
pushf
sbb
and
push
out
push
inc
dec
and
jns
loop
test
push
fisubs
popa
clc
call
loope
jge
fstl
xchg
mov
jg
dec
rcl
mov
mov
fidivl
cmp
pop
cmpsb
dec
push
dec
xor
cmp
cmp
aam
xchg
push
push
subb
xor
add
xor
cmp
scas
dec
arpl
push
pop
xchg
cmp
fidivrs
push
inc
lds
int
movsb
stos
push
repnz
ds
daa
push
jg
mov
ljmp
lcall
addb
mov
or
cli
inc
jge
inc
xchg
jnp
or
movsb
xor
add
pop
fdivrp
test
add
repnz
inc
sbb
add
xorb
or
inc
aam
imul
and
push
push
lea
in
mov
fidivrl
test
cmp
jae
xchg
lock
xlat
gs
mov
stos
movsb
daa
cmp
scas
dec
add
js
cmpsb
mov
cmp
bound
stos
test
and
mov
mov
add
xlat
inc
test
daa
push
or
insl
shrl
push
inc
jg
mov
insb
adc
sahf
inc
sbb
xchg
push
outsl
adc
in
pop
lods
loop
push
je
or
test
in
leave
pop
stos
test
cmp
cmpsl
scas
inc
call
adc
clc
or
add
or
lahf
fs
sub
out
ret
add
sahf
loop
adc
mov
pop
js
xor
jp
orb
iret
lds
mov
aaa
cli
arpl
push
in
dec
sub
or
sub
mov
lret
and
and
mov
xchg
cwtl
push
mov
cmpsb
cmpsl
mov
insl
pop
cmc
aam
in
mov
xchg
aam
pop
js
lods
cld
jl
push
push
icebp
sbb
mov
lcall
adc
mov
push
cmp
enter
outsb
dec
adc
push
lret
mov
push
adc
adc
fdivrp
and
cs
dec
and
push
inc
mov
push
sbb
xchg
mov
mov
test
jge
fidivs
or
cwtl
adc
aas
shlb
imul
mov
cld
fistps
adc
aad
and
repz
cmp
pop
ret
shll
das
mov
mov
insb
dec
jmp
iret
jb
lods
lock
ret
mov
mov
in
outsb
loope
inc
aad
and
je
dec
scas
aam
fadds
or
xor
xor
lret
addr16
or
xor
push
adcb
push
pushw
pop
inc
pop
inc
mov
cmpsl
aad
shl
mov
es
int3
mov
pop
ljmp
cmpsb
add
push
xchg
mov
jecxz
dec
mov
inc
pusha
jbe
jp
pushf
pop
add
dec
sti
in
rcll
sti
push
pop
xlat
add
fs
mov
or
inc
adc
jmp
mov
shr
icebp
rep
dec
repnz
mov
pop
mov
and
adc
stos
aam
jbe
fwait
or
shrl
push
inc
mov
push
mov
scas
sub
mov
xor
mov
addr16
sti
addr16
fnstcw
push
int
xchg
push
or
mov
jns
aaa
push
shlb
cmpsb
xchg
add
sti
stos
adc
ja
aad
pop
loop
repnz
adc
mov
mov
add
pop
push
mov
dec
repz
lock
xchg
aad
pop
ljmp
push
jns
lds
sub
dec
mov
outsb
popf
cmp
mov
scas
sbb
nop
ljmp
sahf
cld
es
pop
or
stc
xchg
cmp
rclb
push
mov
fdivp
and
xchg
sub
xchg
pop
sub
dec
and
in
jg
xor
in
stc
aam
push
insl
sahf
movsl
lcall
xlat
ja
movsl
jnp
add
pop
imul
mov
jae
cmpb
mov
mov
xor
out
xchg
xor
add
jmp
pop
push
pop
shlb
in
xchg
sub
dec
lds
sub
adcb
imul
imul
mov
cli
aad
repz
enter
pop
xor
xchg
ss
dec
test
xor
mov
xor
jmp
cs
mov
arpl
mov
push
and
mov
adc
mov
pmuludq
xchg
mov
insb
jns
outsl
shr
sbb
cmp
leave
sbbl
in
or
lods
jmp
adc
mov
cmp
jne
push
dec
repnz
inc
enter
rorl
jns
xchg
cmpsl
lods
inc
mov
lock
aas
mov
inc
test
add
pop
jl
cld
lock
pop
movsb
enter
mov
mov
inc
add
jne
dec
shll
bound
in
pop
andb
mov
mov
mov
lock
repnz
mov
push
shrb
xor
push
and
decl
aad
mov
leave
movsb
xchg
mov
ljmp
cmp
lods
movsl
push
sbb
xor
ds
fabs
leave
adc
les
jl
neg
push
in
push
pop
dec
imul
nop
inc
jns
mov
dec
enter
xor
xor
leave
push
or
pop
inc
movsb
fwait
or
mov
cmpsb
pusha
rcl
das
rorl
fidivl
push
lock
loope
xor
aas
sub
jp
imul
jg
cmp
inc
sbb
loope
and
pop
jp
xchg
cmp
leave
or
xchg
sub
pop
pop
addr16
aaa
bound
and
mov
fsubp
stos
dec
push
test
jo
into
cld
sub
add
xchg
xchg
mov
or
les
mov
fisubs
mulb
fwait
imul
aam
pop
popa
mov
mov
dec
movsb
xor
dec
bound
loop
push
fwait
add
mov
out
mov
fimull
dec
push
mov
cmp
in
and
xor
das
jp
pushf
pop
inc
icebp
out
aas
xor
aas
popa
xor
movsb
daa
xchg
outsb
test
fnstsw
jle
call
ficoms
cmpsl
lds
add
rcrl
mov
xor
push
pop
rol
sahf
sub
mov
call
subl
movsb
or
pusha
into
inc
iret
mov
cmp
cmp
push
dec
push
lods
adc
subl
push
loopne
sub
jbe
mov
or
xor
xchg
sub
fs
jno
test
jecxz
shlb
sbb
sub
cltd
ret
sarb
mov
pop
dec
push
inc
pop
rorl
push
jmp
mov
mov
pop
pop
jb
add
test
jns
xchg
xchg
cs
mov
bound
lock
sbbl
lret
sub
inc
push
pop
in
imul
xor
mov
jb
push
pop
aad
add
out
lea
push
mov
cmpsb
imul
ljmp
mov
add
xor
cld
xor
ffreep
jmp
add
sbb
cmpsb
pop
xor
les
mov
scas
and
xlat
dec
pop
movsl
enter
cs
push
aad
in
mov
xor
mov
outsb
out
sti
les
inc
jnp
addb
fwait
into
xchg
popa
mov
sarl
das
mov
mov
mov
jae
xor
gs
icebp
cmpsb
adc
ret
repz
mov
fisttpl
dec
aam
fimull
mov
stos
in
mov
je
sub
je
adc
imul
push
lret
adc
or
inc
and
es
fwait
cmp
inc
stos
and
mov
mov
adc
repz
push
adc
ds
xor
xchg
gs
add
add
leave
test
mov
cs
sbb
xlat
loop
data16
pop
mov
jp
add
movsb
mov
fsin
shr
mov
or
addb
cmpsl
data16
push
fstpt
lock
sbb
and
and
ja
das
bound
imul
lret
rcrl
ficoms
inc
mov
outsb
sbb
imul
stos
lock
lds
inc
fcmovne
dec
stc
lock
inc
pop
cli
push
addb
hlt
inc
fisubs
pushf
push
pop
call
jns
and
dec
sahf
loopne
jnp
and
sbb
xchg
in
sbb
push
out
xorl
cmpsb
inc
or
mov
les
inc
cmp
xor
push
aas
xor
sub
test
dec
cmpsl
xchg
dec
daa
lds
cmp
xor
cli
bswap
rcll
shl
jnp
in
push
mov
adc
gs
pop
cmp
fldcw
adc
xchg
loop
push
pop
mov
bound
xchg
pop
push
jle
sbb
mov
mov
sbb
xchg
jecxz
fxam
fldcw
mov
cmp
push
pop
pop
jl
daa
add
adc
and
and
std
in
adc
inc
cmpsb
xchg
fadds
mov
test
lock
xchg
jl
aas
outsl
pop
sbb
aaa
imul
lahf
jno
in
mov
dec
js
rcll
push
jmp
fmuls
enter
inc
lret
mov
les
ss
mov
dec
push
adc
inc
push
add
inc
fmull
or
mov
sbb
fsubrs
test
and
clc
mov
jle
pop
xchg
add
aad
repnz
pop
movsl
lds
subl
jp
out
pop
jle
cmpsl
test
pop
inc
xor
or
push
in
mov
outsl
sti
cmp
cmpb
mov
inc
mov
call
cmp
jp
int
bound
cli
add
cmp
scas
add
sub
adc
orb
js
outsb
jmp
lret
and
inc
sub
add
sbb
sbb
sbb
insl
pop
fidivrl
xchg
repnz
push
push
cmp
ror
cli
sub
out
cmpl
cmpsl
pop
inc
mov
lock
testb
fidivl
clc
jno
fstpt
mov
dec
mov
dec
cmp
push
jle
popf
cmp
scas
adc
pop
push
mov
inc
pop
inc
cmpsl
lret
stc
push
xchg
xlat
in
sub
daa
mov
push
push
test
mov
mov
jp
push
pushf
jnp
mov
sbb
xchg
icebp
sub
jl
jp
sbb
pusha
movsb
dec
add
xor
xor
aas
mov
mov
cmc
dec
loope
scas
lret
push
xor
pop
ret
cmp
ret
jne
push
test
jge
push
mov
mov
stos
dec
scas
nop
fidivl
enter
xor
pop
adc
inc
push
adc
sbb
dec
push
sbb
push
pop
stos
sbb
out
add
push
pop
jo
mov
int3
cli
lea
stos
dec
in
mov
fsubr
mov
fdiv
add
xor
jno
in
pop
scas
lods
sub
mov
cli
mov
pop
or
or
or
sub
or
and
lcall
movsb
xor
inc
xchg
movsl
sarl
movsl
push
dec
or
or
cmp
sub
jnp
dec
in
jnp
es
jmp
ljmp
jg
cmp
aas
insb
cmpsb
or
popa
inc
cmp
mov
or
in
iret
jp
test
pop
xor
inc
fistl
xchg
shrb
imul
in
jp
fstpl
sub
cmpsb
not
jg
or
inc
lds
leave
cmpsb
mov
test
outsb
inc
test
push
and
cmc
jp
add
sub
mov
ret
sbb
adc
aam
push
push
insl
fists
push
mov
mov
rorb
add
lods
fwait
push
ljmp
mov
ljmp
pop
push
pop
icebp
mov
dec
add
xor
popa
js
rcll
jp
cli
sbb
sub
lea
sbb
push
mov
pop
jae
adc
push
jnp
adc
mov
pop
adc
mov
jle
iret
pop
repnz
and
fldt
std
in
push
push
mov
jp
adc
arpl
or
xchg
sti
mov
into
inc
outsb
repnz
lock
and
iret
xchg
jno
sub
inc
add
xlat
lock
dec
mull
push
fdivrs
and
pop
push
mov
xchg
xchg
les
sbb
xor
cmp
adc
mov
ss
or
sub
in
test
insb
adc
cmp
rcl
mov
pop
lods
push
and
out
push
lcall
inc
arpl
mov
jmp
pop
or
adcb
mov
dec
sub
ja
pop
push
std
cmp
les
mov
mov
popf
fst
gs
mov
test
stc
or
lods
insb
or
or
mov
cwtl
das
add
sbb
mov
iret
xchg
inc
int3
sub
pop
clc
pop
pop
aas
shrb
xor
pop
ror
sbb
out
mov
push
mov
fs
or
push
test
js
leave
sub
into
roll
sub
es
inc
mov
xchg
push
jge
push
add
mov
int
add
or
stos
ficompl
outsl
xchg
cmpsl
push
dec
cs
in
test
pop
ret
addr16
cmp
cmpsb
lcall
sahf
xchg
jo
xchg
lods
dec
mov
lret
inc
shrb
xchg
dec
or
mov
xchg
ret
cmp
jns
ret
test
mov
cmpsl
inc
aaa
fdivs
sub
push
pop
repz
add
iret
inc
ljmp
mov
mov
push
sub
out
xor
lcall
in
xchg
xchg
leave
test
clc
pop
repz
push
push
inc
pop
bound
mov
add
aad
cmp
push
xor
pop
int3
mov
test
aas
icebp
xchg
mov
xchg
cmpl
dec
jle
outsl
popa
or
std
loope
leave
lock
jg
jmp
and
lods
mov
pop
jg
cmp
lds
pop
pop
push
dec
mov
movsb
lock
ret
dec
sti
push
cmp
fldt
out
outsl
mov
or
mov
test
in
xor
fildll
test
inc
cmp
stos
jmp
pop
push
xlat
in
out
dec
mov
push
lock
pop
push
add
sub
mov
inc
dec
mov
insl
in
xchg
test
call
jno
mov
ljmp
or
sahf
mov
sub
div
js
pop
cli
mov
or
sti
jb
inc
mov
lret
lods
lcall
mov
xchg
or
jnp
dec
inc
rcll
or
sbbb
mov
mov
sub
adc
mov
addb
sbb
sahf
insl
out
aad
mov
fmuls
and
inc
push
mov
outsl
mov
xchg
jnp
ds
flds
data16
add
fucomip
inc
mov
xlat
out
andl
sub
lock
xor
nop
and
rcr
mov
roll
bound
cmpsl
lods
mov
pop
sub
push
sbb
xor
pusha
testb
cs
inc
push
sahf
frstpm(287
pop
mov
ljmp
cmp
lds
je
outsb
arpl
push
mov
xchg
pop
popa
push
gs
ljmp
dec
lret
popa
test
addr16
shrl
adc
leave
xor
iret
push
mov
inc
popf
jl
and
fiaddl
test
stos
add
push
mov
aam
or
cmpsl
mov
xchg
sbb
iret
xor
xchg
xchg
pop
add
xchg
xchg
sbb
ficoms
cmpb
or
jge
in
jge
pop
fs
xor
push
push
mov
stos
adc
pop
int3
imul
call
jp
mov
imul
loopne
ret
pop
loope
mov
ret
repz
loopne
mov
or
fidivl
push
fcoms
mov
mov
les
jae
pop
loop
and
mov
aas
out
xchg
mov
popa
punpckhwd
mov
gs
lcall
lods
inc
mov
cmp
add
jle
xchg
ret
mov
cmpsl
xor
sub
xchg
inc
loope
sti
adc
leave
push
jp
and
rcrl
popl
imul
pop
pop
lods
mov
lcall
lret
xor
stos
filds
mov
mov
adc
mov
mov
xor
xchg
dec
and
jb
repz
xor
mov
xor
dec
and
jno
lods
mov
inc
outsl
and
adc
je
testb
xor
decl
sti
mov
jne
sbb
fisubrs
and
cmp
push
dec
repz
add
cmp
fwait
int
jbe
sub
lods
pop
xor
jnp
fsts
stc
ja
sub
push
jns
sub
mov
shr
arpl
mov
lret
inc
mov
sahf
fadd
imul
mov
mov
xchg
cmpsb
cmp
inc
pop
pushf
fwait
and
aad
fistpll
or
lock
and
test
push
pop
lock
xor
lods
das
mov
fidivrs
test
leave
mull
or
adc
adc
push
xchg
sub
into
inc
shrb
jge
mov
aas
mov
push
stc
pop
fwait
jne
adc
in
sbb
add
or
mov
push
jb
sub
xor
out
mov
mov
and
jne
jp
inc
and
mov
push
hlt
xchg
inc
jae
cmp
pop
sar
pop
imul
push
insb
inc
inc
rorb
mov
push
lock
out
push
fwait
lods
cmp
push
inc
xor
popl
pushw
cmp
sbb
mov
lcall
mov
adc
cmpsl
leave
pop
pop
enter
loopne
xchg
xor
push
cmp
dec
sub
mov
xor
dec
sbb
dec
movsb
xor
push
dec
pop
fidivs
shrl
cmpsl
adc
jb
add
js
push
insb
lods
bound
stc
xlat
in
xor
sub
add
addr16
lods
stos
or
pop
mov
insl
jnp
pop
push
ret
xor
add
imul
insl
cmp
outsl
mov
inc
rorl
inc
call
cmp
addb
dec
pop
in
iret
mov
das
add
aad
imul
out
mov
dec
std
pop
mov
mov
xor
jge
rcll
fmull
or
pop
or
sbb
mov
test
je
mov
in
scas
lods
movsl
pop
inc
inc
sub
fwait
xorl
xchg
mov
xchg
xchg
mov
jnp
push
test
and
lahf
jno
dec
loope
push
int3
and
cmp
inc
movsb
aaa
or
dec
imul
insl
sbb
pop
lock
popa
sub
xor
sbb
inc
sbb
xchg
rol
jmp
mov
xlat
jg
cli
sub
ret
pop
inc
test
in
adc
lahf
mov
mov
pop
in
stos
sub
jb
cmp
push
push
call
add
jl
push
push
mov
and
adc
push
xchg
mov
std
movsl
xchg
outsl
lds
std
jo
or
mov
xchg
xchg
shll
pop
cmpsb
jo
xor
outsl
lret
enter
xor
gs
inc
xor
lret
scas
cmp
addr16
inc
insb
sbb
pusha
push
jmp
push
mov
test
cmp
fildl
inc
pop
adc
cmp
and
sahf
inc
xor
pop
xchg
lds
jns
sbb
push
push
into
lock
std
pop
addr16
mov
cmc
cmpsb
aaa
pop
in
sub
push
lock
lcall
mov
push
cmova
std
lock
leave
xlat
stc
icebp
xor
pop
pop
int
mov
leave
subb
push
cmp
jecxz
cmp
mov
fiaddl
out
aad
dec
inc
call
cs
sbb
and
sti
jns
pop
sbb
push
or
dec
lods
sub
cmpb
rcrb
dec
sub
aad
push
sub
dec
adc
imul
add
lock
in
iretw
addr16
rcrb
xchg
out
movsl
xor
sbb
lock
insb
subb
test
inc
jp
aad
in
out
shr
shl
lcall
sti
xor
pop
or
ret
jne
popa
scas
das
rolb
xor
xor
xchg
pop
xor
xchg
outsb
and
ja
inc
push
push
or
test
xor
push
adc
sub
xor
cmpl
imul
pop
imul
mov
lret
sub
push
bsf
js
lds
push
xchg
test
test
jno
stc
jp
dec
das
adc
sbb
push
cmp
gs
rcl
and
xor
adc
or
push
hlt
into
inc
fiadds
in
inc
push
xor
sahf
rorl
sub
add
jl
push
push
ficompl
cld
pusha
stos
mov
xchg
idiv
fisttps
cmpsb
sub
cmp
xchg
rcrb
cmpsb
in
cmpsl
ljmp
mov
scas
int3
add
mov
enter
and
push
sub
inc
mov
int3
stc
stos
test
push
ja
dec
push
ficoms
js
in
movsl
sub
xor
loope
dec
mov
test
pop
arpl
jle
sbb
cmp
pop
push
cli
movsb
inc
sub
add
sbb
mov
movsb
mov
adc
iret
sub
sub
cltd
jnp
fwait
push
cmp
inc
jno
pop
aaa
test
aas
cmpsb
cwtl
imul
push
shlb
addb
aas
movsl
inc
loop
cmpsb
test
adc
int
ds
ja
inc
pop
aam
sub
orb
das
xor
sub
loop
push
xor
jb
inc
lock
sbb
sub
call
mov
dec
in
cmp
nop
cmp
stos
jge
popa
dec
fcomps
and
lock
adc
sti
jg
mov
arpl
imul
jne
adcb
pushf
mov
mov
jns
adc
push
imul
cmpl
sub
adc
cmc
inc
add
pop
or
sti
push
mov
fcmovnbe
pop
lds
sub
mov
shlb
or
hlt
push
sbb
jl
dec
pop
jnp
cld
jl
cwtl
adc
sub
ret
lock
fbld
mov
xor
fiadds
sarb
dec
cmpsl
jmp
outsl
sbb
inc
jb
cltd
pop
scas
sub
stos
lcall
jle
add
push
mov
fists
mov
je
out
and
pop
std
stos
pop
imul
outsb
cld
jbe
xor
cwtl
imul
and
inc
xlat
mov
jg
or
or
sti
mov
inc
dec
and
lock
or
add
loop
ficomps
je
mov
jno
sti
push
enter
insl
out
or
or
mov
rolb
ficoms
loop
xor
lock
clc
fbstp
push
or
stos
add
out
in
add
das
or
aam
aad
loope
cmp
lock
add
or
shrl
or
mov
sub
jmp
mov
test
xor
bound
fildll
adc
mov
fcmovnbe
scas
jmp
cmpsb
pop
xor
adc
in
push
push
fwait
mov
and
pop
lock
jecxz
ret
sub
fdivs
movsl
jmp
jne
inc
push
xchg
test
repz
mov
incl
dec
std
dec
pop
push
mov
mov
dec
xorl
cltd
mov
mov
pushf
push
in
popa
sub
lock
sub
loopne
mov
push
addb
mov
add
xor
jno
mov
fldl
mov
call
sub
jecxz
sahf
aas
mov
mov
cwtl
push
push
push
mov
push
outsl
sbb
lods
rcrl
pop
rorl
gs
jmp
adc
push
lret
aam
jnp
dec
mov
jp
and
dec
jae
or
sub
lret
push
xchg
or
push
je
and
cmpsb
lods
arpl
xchg
push
ljmp
sub
push
or
mov
inc
cmp
pop
xchg
xor
xor
xor
dec
stos
int
cmp
in
out
sub
mov
and
sbb
repnz
jns
aam
lcall
mov
shl
jp
popf
jp
mov
sahf
sub
or
or
jg
repz
nop
and
in
dec
aas
cwtl
or
pop
or
xchg
xchg
lock
xlat
scas
and
fcomps
pop
xor
imul
xchg
mov
push
xor
lret
xor
movsl
sti
test
cmpsb
push
in
aad
dec
repnz
mov
xchg
in
rcll
xor
arpl
scas
mov
jo
cmp
ss
sahf
ret
in
mov
ljmp
out
mov
inc
or
xor
std
pop
or
cmc
in
pop
cmp
inc
sahf
push
fcompl
inc
xchg
push
cmpl
cmp
dec
repnz
sub
dec
std
xchg
scas
or
aas
pop
shlb
xor
push
test
shlb
orb
aas
scas
shll
inc
sti
mov
jl
push
add
orl
gs
scas
dec
and
in
xchg
jge
xor
jp
pop
cmp
pop
stc
jo
push
adc
sub
shrl
jmp
dec
cmp
clc
cmp
arpl
cmpsb
inc
xor
in
pop
imul
xor
jns
pop
ljmp
sub
repz
stos
in
pop
fildll
and
dec
insl
or
test
mov
cmp
cmpsl
das
stos
clc
sub
inc
inc
outsl
add
ret
je
mov
and
or
in
ljmp
cld
push
imul
mov
je
jmp
xchg
push
pop
lock
mov
pop
or
adc
leave
push
dec
inc
or
push
adc
xsaveopt
pop
cmpsb
sahf
dec
es
int
les
mov
sbb
lods
hlt
xchg
addr16
jge
pop
ret
xor
imul
push
cmc
inc
and
xor
outsl
jmp
sarb
leavew
and
test
insb
fs
repz
into
and
or
add
dec
cmpsl
std
push
xchg
ret
fnop
insb
mov
leave
xchg
outsb
test
jl
mov
fidivrs
leave
dec
ja
fbstp
cmc
jmp
adc
pop
hlt
pop
adc
sbb
lods
jp
sub
dec
pop
subl
mov
je
mov
cmc
push
mov
xor
mov
in
jns
mov
mov
sbb
lret
pop
imul
test
xor
sarl
sti
push
fdivrs
pop
iret
or
in
push
adc
adc
scas
adc
cmp
lock
ss
insb
sbbb
shlb
xlat
add
imul
roll
mov
cli
push
inc
inc
jge
outsb
jmp
pop
mov
movsl
rolb
pushf
pusha
mov
leave
testb
mov
pop
add
fadd
xchg
mov
xor
inc
out
jae
stos
inc
out
pop
in
fs
mov
xlat
leave
lea
fimull
dec
scas
pop
mov
insb
mov
mov
fadd
dec
cmpsl
subl
xor
aas
rol
inc
mov
ja
je
pop
sub
scas
loope
into
xor
inc
sbb
rclb
xor
out
mov
movl
pop
pop
cs
dec
mov
nop
jmp
orb
xchg
les
dec
dec
xchg
jl
push
or
inc
int
lea
or
lcall
imul
xor
sub
add
lcall
add
shr
paddw
int
lret
mov
cli
xchg
clc
out
mov
sub
lcall
pop
push
movsb
and
jo
cmp
pusha
hlt
sub
xlat
fisttpl
ss
mov
mov
sub
test
in
push
leave
in
mov
inc
aam
test
sub
sbb
inc
inc
mov
sub
or
mov
mov
stos
and
mov
pop
call
stos
dec
aas
repz
mulb
lock
push
jge
add
mov
mov
inc
xlat
aas
or
lret
add
fwait
jo
sub
pushf
pop
dec
xor
pop
xchg
insb
cmc
adc
lods
sbb
adc
stc
or
sbb
movb
les
lcall
push
mov
aam
adc
mov
popf
jns
push
call
ret
jns
push
data16
dec
push
or
jge
lcall
push
sub
les
mov
adc
shll
sbb
test
xor
inc
jo
dec
push
out
pop
or
shrl
dec
cmpsb
inc
jg
dec
daa
mov
inc
sub
or
addr16
arpl
cltd
pop
adc
mov
sub
mov
cmpsl
adc
mov
xchg
jbe
ret
fs
mov
mov
dec
inc
jo
push
repnz
subb
xchg
xor
sub
mov
or
ret
sub
in
xchg
icebp
andl
push
jbe
and
mov
and
dec
mov
mov
xchg
lahf
jmp
inc
imul
mov
jg
int3
enter
mov
xor
hlt
loopne
pop
scas
mov
push
adcl
mov
test
insl
jle
push
mov
cmp
xchg
jl
ret
sbb
push
movsb
nop
imul
outsl
nop
pop
pop
lcall
into
aas
mov
mov
sbb
inc
mov
dec
in
dec
jbe
inc
es
filds
out
sti
orl
lds
lods
add
int
inc
jo
mov
push
jp
movsb
xor
int3
jp
fldt
adc
add
fimuls
dec
std
out
rclb
in
dec
and
jl
cmp
aam
lret
andb
adc
xchg
lods
pushf
dec
in
jns
into
push
push
xor
nop
mov
daa
mov
pop
daa
out
sahf
mov
outsb
pushl
ja
ror
outsl
popa
adc
cmp
push
sub
jnp
inc
inc
imul
xchg
pop
push
add
fstpl
sub
fs
sbb
addr16
addr16
push
mov
in
mov
in
in
sub
mov
inc
arpl
lods
xchg
cmpb
push
xchg
in
in
movsl
inc
mov
xor
pop
cmpl
mov
sbb
aas
jecxz
mov
xchg
push
adc
jp
lahf
mov
aaa
outsl
inc
mov
lahf
in
mov
test
sub
xor
mov
icebp
sti
pop
xchg
push
cld
xchg
pop
pop
mov
inc
test
push
mov
inc
arpl
jnp
fdivl
mov
movsl
xor
jge
pop
dec
data16
in
rcl
mov
mov
mov
movsl
jnp
ret
xor
ret
sahf
rdpmc
or
iret
mov
arpl
dec
mov
fs
or
fcomi
jns
lock
test
stc
testb
movsb
push
inc
inc
xchg
inc
pusha
sub
bound
or
inc
call
imul
mov
in
adc
daa
cld
notl
cmpsl
and
adc
push
jecxz
lret
aad
fstl
jmp
sbbl
cmp
test
in
daa
sti
sub
repz
or
sarl
mov
lock
lret
xchg
xchg
gs
dec
jl
push
mov
and
jp
inc
xor
mov
adc
dec
mov
bound
push
pushf
in
ss
push
in
and
dec
pop
or
insb
mov
jle
inc
pop
inc
inc
push
sub
and
pop
jmp
cmpsb
jl
xor
popa
lea
jae
shll
cld
inc
xor
cmp
jp
adc
test
ret
ljmp
sti
add
fnstcw
mov
pop
push
jmp
sahf
mov
addr16
dec
imul
test
xchg
sbb
pusha
dec
in
adcl
das
sbb
sahf
out
out
cmpsb
std
mov
pop
xchg
bound
stos
jl
jnp
cmp
sbb
mov
mov
inc
xor
ljmp
gs
inc
push
mov
dec
int3
sub
sahf
cmp
ret
cmp
in
imul
inc
or
add
and
popa
lret
insb
inc
push
xchg
jns
or
sarb
mov
ret
push
sahf
mov
adc
fwait
movsb
pop
inc
add
sti
in
xlat
inc
psubsw
cmp
and
fstpl
fs
movsb
jmp
insb
lahf
daa
shll
push
aaa
stos
bound
test
mov
sarb
cmpsb
call
mov
repnz
in
outsb
stos
jne
sub
dec
sub
scas
inc
add
jbe
push
data16
je
scas
xor
push
push
cmc
add
sbb
push
xchg
jecxz
xlat
sub
mov
xor
dec
xor
push
out
mov
mov
scas
fldlg2
mov
add
loop,pt
in
cld
repz
pop
loopne
ffree
mov
popa
sub
jno
leave
cli
xchg
pop
fcompl
sub
mov
mov
sbb
sahf
pop
or
dec
xchg
inc
ficoml
and
push
pop
xchg
xchg
jg
push
addr16
dec
imul
sub
inc
mov
addr16
outsl
push
push
cli
fs
ficoml
repz
es
sahf
jbe
cmpsl
iret
sar
mov
add
pop
sbb
push
xchg
sbb
insb
lock
push
cwtl
xor
vdivss
pop
inc
cmp
xchg
and
negb
jae
mov
xor
xor
cmp
push
mov
scas
mov
push
push
push
dec
push
pop
or
xchg
pop
inc
push
leave
or
test
data16
xchg
out
loopne
outsl
cmp
lret
add
loopne
pop
inc
push
sub
adc
or
pop
xor
jp
outsb
xchg
push
cmp
icebp
sub
jne
sti
das
loopne
scas
jmp
xchg
daa
adc
ret
lret
sbbb
push
adc
adc
pop
and
push
scas
cmp
push
sub
inc
xchg
lahf
inc
sub
mov
and
arpl
dec
shlb
test
stos
jb
and
imul
int
inc
push
addr16
cmp
test
leave
cmp
jb
pop
imul
pop
lds
in
or
jl
in
rorb
push
mov
mov
sahf
les
jnp
fsubrs
movb
pop
xchg
in
dec
sbb
mov
inc
mov
cmpsb
mov
jp
mov
push
movsb
adc
pop
icebp
loop
out
jge
push
fisubrs
jno
sub
sarb
daa
sbb
lret
xor
lret
mov
push
popa
mov
nop
sub
inc
push
jle
jmp
fwait
mov
mov
or
xchg
mov
ret
imul
mov
or
testb
adc
fistl
orb
cmp
sub
arpl
jo
push
rclb
and
cmc
xor
jb
mov
xchg
rcl
push
add
iret
rcll
cltd
mov
mov
jecxz
jle
mov
int
pop
push
xchg
xchg
das
adc
icebp
cmpsb
jge
cmp
in
cmpsb
add
cmp
cmpsl
iret
ret
inc
orb
fdiv
add
dec
push
lods
xor
or
cmpsb
addr16
xchg
xor
aad
push
push
inc
pmaxsw
sti
hlt
imulb
sbb
mov
imul
adc
arpl
icebp
pop
fbld
mov
loopne
sbb
ret
popf
loopne
lds
sahf
adc
js
aam
aad
pop
stos
jmpw
ljmp
push
cmp
push
and
dec
sub
fsubs
dec
inc
outsb
lock
in
add
test
stc
mov
sub
mov
lods
inc
in
outsl
and
add
mov
dec
xlat
mov
out
dec
push
inc
pop
sbb
inc
lock
push
or
inc
es
sbb
and
xlat
stos
cmp
in
cmpb
mov
push
bound
je
ret
push
out
push
das
dec
test
mov
cmp
das
daa
xchg
rolb
mov
push
xchg
dec
ja
and
xor
test
movsl
andb
insl
lret
sbb
stc
xor
push
or
in
pop
imul
sub
jp
add
popf
cltd
jge
into
mov
icebp
dec
mov
adc
sub
call
lcall
mov
lcall
sub
mov
out
aam
xchg
mov
push
out
xor
mov
movsb
test
pushf
test
lock
cmp
inc
arpl
push
dec
push
jg
lods
cwtl
test
adc
xchg
push
movsl
lcall
stc
pop
push
jns
sub
xchg
jl
pushf
data16
inc
rcll
cli
and
mov
dec
shll
xor
in
aad
imul
fisubrs
and
pop
test
test
push
push
lock
jnp
sub
movsb
xchg
loope
movsl
lock
scas
sbb
ja
cmpsl
mov
jmp
xchg
cmpb
sbb
mov
enter
fnstenv
cli
pop
push
pop
pop
cli
dec
lock
aaa
push
dec
fistps
inc
fs
xchg
mov
xchg
lcall
mov
sahf
mov
inc
cmp
and
aad
jge
xor
mov
add
mov
inc
pop
dec
or
cltd
push
ja
dec
jae
ret
imul
popa
outsb
or
xchg
insb
xchg
stos
sub
pop
or
mov
lock
out
mov
cmp
inc
cmpsb
dec
dec
xor
inc
lods
sub
jns
cmp
pop
mov
mov
adc
out
scas
dec
or
in
repz
dec
mov
pop
jge
dec
lock
jmp
jae
call
push
rcrl
cmp
mov
cmp
fsubr
sbb
xor
ret
leave
adc
push
or
adc
lret
or
test
in
lds
imul
stos
fmul
fcmovbe
push
xor
pusha
inc
push
call
jmp
pop
dec
rol
xor
or
or
inc
pop
sub
imul
notl
in
in
aad
sar
repz
mov
lods
loope
in
and
xor
fbld
push
ret
fstpt
lock
test
pop
orb
cmp
or
fimull
addr16
call
filds
sbb
jbe
fisttpl
shlb
pop
mov
sub
jnp
out
cmc
das
lret
sbb
pop
addr16
inc
clc
inc
pop
sbb
imul
ffreep
stos
sub
movsb
fdivs
test
or
jl
loop
push
sub
pushf
jge
aaa
rorl
test
push
lds
lcall
mov
insl
aad
dec
inc
cmp
cltd
or
push
jnp
sti
inc
cld
pop
mov
aas
jle
jp
aaa
lds
stos
add
push
fildll
shl
sub
push
lock
gs
lahf
mov
sbb
dec
sbb
cmc
shll
or
out
push
mov
mov
divb
pop
push
ljmp
or
sbb
gs
jecxz
ss
lss
xchg
out
test
pop
pop
stc
addr16
or
xor
fcomi
callw
aaa
test
jmp
adc
cmp
data16
lea
sbb
ret
sbb
push
fiadds
pop
daa
imul
sbb
cmp
inc
stos
lock
rcrl
fwait
dec
add
jmp
mov
xchg
push
mov
push
xchg
pop
dec
js
sbb
ret
inc
rcll
jbe
in
jl
sahf
addr16
xor
or
ret
jmp
das
mov
or
push
movsl
scas
jno
cmpsl
or
xchg
jo
sbb
lret
jnp
add
loope
jno
push
in
adc
ljmp
or
jo
mov
cmp
pop
push
int3
adc
insb
pusha
add
mov
lahf
fisttps
lock
dec
pop
xor
cmp
adc
leave
push
dec
lods
addr16
aad
shr
and
iretw
push
jb
cmp
sbb
mov
cmp
adcb
ds
mov
or
mov
outsl
push
imul
or
cmpsl
leave
push
and
sbb
mov
cmp
sbb
scas
or
mov
popa
or
pop
push
add
popa
mov
pop
mov
cli
add
stos
mov
sub
lock
js
jmp
jbe,pn
les
outsl
fdivrs
push
add
leave
addr16
je
stos
cmovp
xor
addl
test
sar
clc
cmp
xor
dec
pop
cld
xchg
aaa
mov
shll
gs
aad
jne
je
lds
inc
ss
enter
insb
mov
push
xor
xchg
push
fldenv
pop
lret
jp
inc
dec
rclb
dec
jle
test
and
inc
jmp
cmp
xor
mov
pop
insl
iret
in
js
popf
pop
repz
aad
dec
stc
mov
mov
push
mov
adc
inc
aad
dec
xchg
and
stos
daa
gs
ss
push
nop
stos
insb
jnp
mov
push
sub
inc
ret
pop
aas
mov
mov
or
popf
xchg
pusha
xchg
push
insb
pop
bound
pop
stos
shl
adc
out
ljmp
test
push
mov
mov
lds
inc
lret
cli
mov
mov
into
clc
mov
jle
push
aaa
sub
loop
test
add
into
pushf
mov
jl
movsl
loope
sti
outsl
xorl
sbbl
inc
scas
pop
scas
and
pop
xlat
sbb
push
or
jne
lcall
sbb
lock
outsb
push
and
pushf
mov
or
and
ss
push
cld
push
mov
mov
into
xchg
add
in
sahf
movsl
push
subb
sbb
imul
outsl
test
addr16
pop
popa
push
sbb
mov
subb
mov
xchg
in
leave
pop
insb
je
jge
jp
sbb
cmp
stos
pop
jnp
or
hlt
fistpll
and
dec
daa
repnz
pop
jmp
fimull
inc
pop
push
jle
mov
push
outsl
test
inc
into
jl
add
inc
xor
loopne
lea
out
and
and
insb
bound
stos
sbb
lods
je
dec
clc
lea
insb
mov
mov
jp
mov
test
push
rcrl
cmpsb
fsubs
jmp
lea
or
adc
out
shll
xor
ljmp
sbb
xchg
movsb
and
aaa
jnp
and
fsubl
lret
xchg
sub
js
cld
stos
pop
outsl
jge
cmpsl
lock
insb
xchg
sub
xchg
ljmp
out
mov
cmpsl
cmc
rcrl
sub
ret
mov
inc
sbb
das
mov
add
lahf
pop
repz
clc
inc
std
ss
pop
push
lock
push
xor
stos
xchg
jecxz
out
jecxz
dec
push
mov
inc
pop
cmp
xchg
loop
roll
inc
mov
and
mov
inc
sub
addr16
xchg
xor
pop
ljmp
or
andl
sub
dec
std
xchg
dec
out
cmp
lcall
mov
dec
mov
roll
stos
push
std
adc
push
sbbl
sbb
notl
cmp
fisubs
xor
shrb
xor
stc
push
sarl
das
ljmp
shll
jae
aad
cs
push
outsl
outsb
or
pop
scas
sub
add
aam
mov
scas
mov
or
jmp
pop
lds
test
cli
lahf
fwait
dec
or
cmp
into
fsubrl
mov
mov
cmp
xor
pop
lock
out
insb
xor
dec
lea
xor
pop
fs
jbe
pop
jecxz
and
mov
cmpsl
dec
mov
push
in
lock
xchg
imul
pop
mov
and
out
push
pop
push
push
push
stc
mov
icebp
pop
xchg
and
loopne
mov
outsb
shrl
aas
adc
xor
inc
addr16
jmp
lahf
incl
push
and
rcr
xor
notb
lcall
or
jle
inc
mov
xchg
cmp
test
or
jl
lock
into
test
push
mov
sbb
repnz
jg
out
scas
dec
daa
lock
lea
xor
sbb
shll
fdivrs
icebp
adc
or
movsb
adc
or
push
int3
dec
push
cmpsb
sbb
rclb
mov
aas
and
insl
cmp
repz
jg
inc
int3
testb
pop
push
add
add
dec
addr16
and
mov
int3
in
pop
xchg
jmp
cmp
push
jg
mov
sbb
ljmp
dec
movsl
ljmp
jae
xor
sub
in
stos
add
mulb
popf
pop
xor
lahf
push
push
jae
xchg
scas
pop
xor
mov
aad
cli
pop
push
inc
icebp
push
shr
jns
adc
xor
xor
adc
push
mov
pop
dec
pop
lock
sbb
jp
aaa
in
sti
pop
sbb
pop
xchg
and
fcoml
gs
push
push
sbb
jno
in
dec
push
test
push
data16
sub
fildll
in
add
xor
xor
jmp
arpl
imul
addl
sbb
test
sbb
aad
jo
add
out
fs
jl
push
or
pop
mov
idivl
jle
stos
adc
pop
sub
stc
cli
clc
outsl
popl
push
pop
jl
movsl
cs
pop
test
into
push
xor
fsubrs
and
cmc
ljmp
dec
lret
xorl
mov
mov
pop
out
sahf
push
mov
jne
out
and
adc
sahf
jb
xor
push
pop
lock
in
sti
test
mov
test
push
clc
jle
rcr
pop
and
push
push
cltd
xor
pop
xchg
cmp
sbb
rclb
cld
sbb
jecxz
sub
jmp
pop
arpl
outsl
icebp
jmp
xor
add
jp
hlt
xchg
pop
imul
push
fnstsw
outsl
bound
out
iret
in
sbb
shrb
addr16
sti
fsubrp
push
repnz
jb
xor
fisttpll
mov
and
mov
bound
daa
fistps
mov
adc
pop
xchg
mov
jp
dec
sub
mov
jmp
pop
in
or
push
das
out
mov
jo
and
sub
push
adc
xchg
je
int
jnp
data16
mov
mov
jmp
test
aam
mulb
and
push
lds
and
ret
inc
popw
imul
aad
rorl
subl
sbb
mov
pop
ret
mov
in
push
sbb
rcl
mov
scas
in
lods
lcall
push
push
push
aas
cmp
adc
std
mov
push
ss
cmp
sub
pop
xor
pop
add
push
xor
clc
stos
popa
jecxz
call
push
push
or
test
lret
loop
xor
cmp
clc
scas
clc
mov
push
mov
inc
dec
fiaddl
test
aas
mov
dec
iret
movsl
iret
lock
aas
enter
pusha
add
mov
add
lods
add
outsb
jne
and
gs
xchg
jbe
loope
ja
jmp
mov
add
dec
mov
mov
clts
sahf
out
xor
mov
enter
fcoml
or
in
or
pop
sbb
cmpsl
lds
push
cmp
pop
mov
cld
sahf
popf
xor
mov
dec
jmp
push
cmp
pop
dec
push
xchg
cltd
movsb
daa
and
mov
xchg
scas
dec
adc
scas
int3
in
rcll
leave
xchg
aad
out
dec
and
push
pushf
add
xchg
lock
jbe
clc
pop
lahf
lahf
bound
decl
pop
das
stos
popa
mov
test
jb,pn
push
xor
pop
add
xchg
sub
lock
insb
pop
pop
pop
or
out
cmp
or
xor
lock
xchg
sub
out
fstpt
sahf
xchg
sub
jno
push
adc
xor
pusha
iret
adc
fildll
fwait
lcall
mov
mov
push
fldcw
into
xchg
mov
xlat
jg
mov
pop
or
mov
enter
push
xor
in
lock
inc
into
jb
and
stc
test
xlat
scas
dec
enter
sub
jp
imul
mov
adc
pop
insb
add
xchg
dec
lret
add
cmp
stos
scas
sub
call
dec
sbbb
cmp
test
pop
mov
pop
sarl
jp
inc
pop
push
inc
lock
cld
mov
adc
pop
push
jmp
fstpt
outsl
mov
mov
clc
xchg
or
xlat
adcl
dec
movsb
pop
lock
cmp
mov
lods
xlat
ljmp
jo
rcr
xor
jle
xchg
and
pop
outsb
daa
sub
sub
inc
stos
fdivrl
mov
mov
inc
rcl
adc
roll
nop
stc
sahf
and
test
jo
cltd
rcl
mov
rcrb
lock
jmp
adc
mov
inc
int3
scas
add
outsb
movsb
lock
test
ret
sub
shl
movsb
sbb
out
cmpsl
dec
mov
js
shrb
cmp
pop
call
jne
add
pop
push
mov
dec
repnz
test
xor
mov
imul
andl
mov
cld
arpl
or
xchg
and
sub
push
ficoms
gs
or
xor
ds
dec
sub
xor
sbb
push
push
dec
xchg
cmp
aam
jecxz
ret
test
ljmp
stos
mov
loope
mov
lret
je
lods
les
sub
adc
sub
xchg
fldenv
out
loop
mov
lock
xchg
leave
add
ret
mov
in
push
or
out
adc
or
leave
inc
mov
fwait
add
jp
add
sub
pop
mull
mov
or
mov
sarl
bound
sub
push
and
add
test
cwtl
test
sub
insl
inc
pop
cmpsl
nop
pusha
adc
in
fwait
pause
iret
insb
dec
pop
push
lock
sub
es
testb
ss
add
cmp
cmc
jno
inc
testl
jno
out
inc
mov
cmp
sti
add
jmp
lret
rcl
cmpsl
dec
daa
lds
lcall
push
push
repz
sbb
xchg
leave
popf
lock
push
xor
xor
fisttps
aad
roll
dec
int
aam
fadd
orb
mov
mov
pop
or
sub
lds
or
or
arpl
push
add
loopne
jmp
mov
inc
movsb
addr16
stos
pusha
pop
jmp
adc
mov
mov
inc
and
sub
outsb
xchg
shlb
std
cmp
sahf
sbb
lret
sub
xchg
leave
bound
lock
cmp
push
lahf
mov
nop
push
int
push
xlat
movsl
cmp
and
test
xor
pop
movsb
fucom
cmp
loopne
push
pop
gs
sahf
pop
xchg
mov
jmp
jmp
xchg
insb
ds
jg
jmp
xor
inc
stos
mov
je
adcl
lods
bound
bound
jnp
xorl
testb
sbb
inc
into
push
mov
lret
or
xchg
lret
cld
out
mulb
pusha
xor
cmp
stos
or
lock
out
test
in
cmp
mov
stos
push
push
mov
mov
xor
cmp
add
jno
mov
jnp
inc
shr
or
dec
xchg
xor
cmpsl
gs
xor
pop
adc
sbb
leave
add
outsl
pushf
fidivrs
fs
xlat
add
aas
stc
pop
lock
sub
enter
movsb
imul
cmpsl
xor
push
add
rcrl
in
cmp
xor
add
je
sbb
fstpl
xor
es
jl
dec
xchg
xlat
cmp
vpcmpeqb
roll
mov
jge
push
popf
cli
mov
jo
les
inc
es
inc
xchg
sub
inc
cmp
psrld
adc
mov
cltd
push
shlb
shll
dec
imulb
movsb
das
add
xchg
xor
hlt
xchg
stos
stos
rcll
adc
popa
add
bound
mov
mov
movsl
adc
xchg
es
mov
subb
lods
test
fildl
dec
xor
sbb
daa
adc
sbb
or
pop
lea
ss
scas
scas
test
cwtl
ljmp
outsb
jbe
cli
hlt
mov
inc
in
mov
pop
adc
push
shrl
in
sub
jmp
sub
stos
cmpsb
cmp
jle
or
negb
daa
ja
sbb
int
xor
cmp
mov
jne
dec
pop
mov
sub
std
pop
sahf
fstpt
aam
jle,pt
sub
mov
test
mov
sbb
sub
pop
addl
int3
cmp
jge
xor
sub
adc
jg
je
sub
adcl
add
pusha
xchg
fstpl
xlat
mov
in
and
or
mov
imul
xor
cli
push
cmp
imul
push
mov
and
int
das
mov
adc
sti
fcmovb
jge
mov
adc
mov
insl
mov
mov
es
or
cwtl
les
cld
and
fnstenv
inc
adc
iret
mov
mov
test
cld
push
fisttpl
sub
shl
fistps
sub
sahf
imulb
adc
or
in
sub
ja
mov
cmc
js
jl
dec
push
add
sub
enter
sbbb
insl
je
mov
inc
pop
arpl
xlat
lret
dec
fnsave
test
pop
iret
xor
sarb
cwtd
pop
add
lods
inc
sbb
loopne
cs
std
sub
jmp
cmp
das
adc
mov
aad
dec
sbb
and
xor
jl
test
push
cli
mov
cmp
roll
sub
daa
insl
data16
inc
mov
test
push
mov
sti
mov
or
xor
jmp
popf
cmpsb
push
jb
dec
cmpl
lds
inc
jb
rorl
add
adc
xchg
sahf
into
jge
sub
inc
in
dec
adc
mov
jns
testb
jbe
jo
and
lret
icebp
pop
xor
push
in
scas
iret
test
xor
inc
ret
in
fxch
cmpsb
dec
or
shrl
push
and
dec
cmp
add
mov
idivb
addr16
jo
dec
movsb
jl
and
sbb
sbb
and
cmp
in
and
dec
pop
inc
cld
dec
push
scas
adc
sub
scas
mov
push
xchg
fldcw
lcall
xchg
jmp
inc
cs
ljmp
sub
ds
and
lods
in
in
cwtl
cmp
out
lcall
dec
bound
pop
popf
mov
mov
push
lret
sub
dec
sub
daa
cld
inc
jmp
xchg
push
mov
sbb
xchg
mov
push
cld
popa
and
test
jbe
xor
cmp
popf
sub
movsl
sub
fwait
movsb
shrl
ret
push
inc
clc
cmp
adc
cmp
mov
lds
jmp
js
inc
cmc
xor
xchg
sbb
dec
enter
into
cmp
xor
xor
lock
sub
pop
cmpsb
or
pop
cmp
pusha
shlb
je
shlb
xchg
jmp
adc
xchg
movsl
scas
inc
adc
mov
mov
dec
push
in
je
imul
dec
sbb
sahf
adc
push
mov
scas
dec
xor
mov
pop
loopne
push
push
ret
jo
lret
sahf
lods
xor
mov
inc
dec
pop
jge
xor
xor
inc
add
inc
scas
push
or
adc
sbb
xchg
roll
adc
gs
pop
inc
dec
addr16
pop
mov
push
mov
divl
jp
cmp
push
clc
jo
or
xchg
mov
jmp
inc
shrb
lret
fs
adc
mov
push
xchg
sub
xor
add
pop
dec
and
inc
stos
popa
or
test
jae
add
mov
sub
add
cs
stos
cmpb
adc
rol
cmp
push
sbb
aas
fisttpl
imul
mov
out
jle
fidivrs
sub
outsb
aaa
call
scas
mov
mov
adc
xlat
dec
sbb
push
mov
dec
je
pushf
sbb
mov
inc
xor
shrl
test
pop
add
mov
sub
in
pop
push
stc
shll
negb
and
push
xchg
mov
and
cld
sti
lret
cmc
xlat
loope
imul
fwait
mov
leave
sub
mov
mov
adc
lcall
mov
push
mov
dec
push
aam
cwtl
and
and
ljmp
or
sbb
mov
lock
adcl
test
pop
icebp
stos
rcrb
loope
mov
lock
xlat
insb
stos
push
dec
mov
pop
pop
xchg
or
out
jmp
sub
jge
sarl
cltd
jae
and
or
jae
xchg
imul
dec
sub
xor
addr16
lret
inc
out
add
sub
adc
repz
pop
sub
lds
mov
dec
push
dec
mov
pop
rcll
push
test
inc
ss
pop
xchg
xchg
mov
inc
roll
pop
inc
fidivs
or
cli
mov
les
sub
jecxz
addr16
gs
out
roll
inc
lock
bound
xor
sbb
fistpll
sbb
cmp
jg
lret
xchg
ss
cld
es
mov
jne
cmp
std
js
push
cmpsl
jmp
mov
cwtl
gs
leave
movsb
hlt
xlat
xor
dec
pop
lret
daa
sub
jg
int3
pusha
lea
mov
outsl
in
scas
sti
mov
popa
xlat
pop
mov
xchg
push
push
in
gs
cmp
in
push
push
mov
xchg
ljmp
adc
mov
jb
inc
insl
pop
inc
pop
movsl
lock
xlat
in
push
ds
dec
lahf
inc
cmpsb
jmp
push
aam
ljmp
iret
mov
xchg
fnstcw
outsl
mov
xor
adc
mov
mov
inc
iret
sub
sub
enter
popa
push
dec
scas
cld
lret
xchg
int
lret
and
je
xchg
movsb
out
in
pop
cmp
inc
test
lds
stc
stos
popf
subl
sub
sub
nop
mov
ficomps
scas
mov
push
push
dec
jmp
das
jmp
mov
iret
and
fldcw
sub
mov
jns
cwtl
xchg
fidivrl
mov
pop
lret
cld
imul
push
push
inc
inc
outsb
xchg
das
outsl
or
or
std
or
dec
push
sub
popf
push
shlb
xchg
test
ret
sub
mov
add
and
jae
mov
ret
out
fsubr
leave
rorb
es
test
xor
cmp
outsb
cmp
mov
mov
movsb
mov
dec
hlt
icebp
add
xchg
mov
cmp
aad
mov
jno
sbb
push
mov
xchg
dec
or
test
cmpl
aam
push
rol
xchg
xor
xor
es
jecxz
and
push
lret
xchg
pop
adc
cmp
clc
xlat
data16
jmp
leave
xor
mov
push
add
divb
out
dec
dec
sahf
mov
in
xchg
cmp
push
add
jno
cld
lcall
pop
loopne
xchg
xlat
mov
xor
and
xchg
pop
test
mov
adcb
jb
inc
test
lods
sub
das
movsl
inc
xchg
or
dec
and
add
aam
popf
and
xlat
adc
cmp
in
lret
test
outsl
sbb
push
fwait
lock
insb
xchg
in
jg
lods
push
push
fistpll
fistl
sbb
pop
jecxz
sub
repz
fdivrs
jge
xor
mov
scas
cmc
push
int
fs
lcall
mov
cmp
push
and
dec
jp
jle
adc
pop
jle
mov
insb
push
addr16
cmp
mov
lds
icebp
sub
push
and
lock
push
ret
adc
push
das
or
push
inc
push
icebp
lods
cmpsl
into
data16
cmp
ja
pop
push
pop
sub
cmp
mov
rorl
xor
enter
push
adcb
or
sub
pop
int3
push
pop
mov
data16
push
sub
fcomp
call
mov
inc
sub
mov
xchg
jne
subb
shrl
stc
test
mov
call
scas
push
addb
xchg
sub
pop
jne
xchg
int3
in
in
or
jl
in
jns
mov
mov
mov
mov
sbb
cmpsb
pusha
testl
iret
gs
rcrb
push
adc
and
roll
xor
xor
and
mov
ficomps
pusha
lock
aas
push
hlt
repz
mov
mov
scas
push
pushf
fs
push
inc
push
pop
xchg
lret
sbb
pop
mov
push
add
decl
cld
rol
sbb
push
xor
adc
das
imul
pop
pop
stos
lock
repz
jno
jp
gs
lcall
into
sub
aam
fists
inc
shll
iret
loope
push
sub
in
xchg
cmp
fcoms
pop
aad
movsl
add
mov
inc
lahf
cmp
or
loopne
in
cmp
outsl
xlat
dec
das
push
bound
cmpsl
cld
dec
mov
cli
repz
outsb
leave
xchg
xchg
dec
mov
sbb
xor
dec
imul
cli
pop
adc
aam
in
push
popf
das
stos
inc
idiv
lahf
pop
mov
and
inc
push
pop
loope
pop
icebp
data16
jle
add
movsb
sbb
sub
rclb
ja
jno
lret
push
js
loope
cmpsl
xor
fisubrs
ret
popf
mov
push
scas
stc
cmpsl
or
mov
sti
jmp
xor
or
shlb
nop
or
jle
inc
cmpsb
add
mov
pop
movsb
lock
xchg
mov
aad
xchg
cli
push
lret
ja
scas
in
xor
jl
pushf
adc
test
push
xchg
dec
aam
push
xchg
lret
repnz
fnsave
call
jmp
mov
inc
jnp
add
mov
or
movsl
adc
mov
addr16
jecxz
sub
xor
jg
xchg
clc
lea
fwait
jl
cltd
rcrl
xchg
cld
jmp
add
aas
test
stos
mov
sub
xchg
scas
inc
mov
psubusw
xor
orb
cli
adc
negb
and
fcmove
mov
addr16
shll
ret
pop
mov
push
lods
pop
out
loopne
ficomps
imul
cli
xchg
pop
inc
or
inc
add
insl
mov
in
mov
pusha
push
sbb
testb
mov
daa
mov
fstl
pop
xchg
push
xor
or
pop
movsl
dec
xchg
cmpsl
loope
pop
pop
test
and
jle
js
dec
loope
push
test
sarb
lret
repnz
ret
or
sahf
mov
popf
xchg
int3
std
xor
add
into
pop
push
pop
sbb
leave
dec
mov
adc
cmpsb
push
not
sbb
lea
jmp
inc
push
aaa
xchg
test
pop
sbb
mov
lock
mov
test
xchg
jnp
push
xlat
pop
pop
cmpsb
sbb
shl
je
jns
mov
sub
sahf
inc
pusha
sti
fs
xlat
sub
ja
int
inc
or
inc
push
dec
imul
stc
negb
xchg
or
cmpsb
adc
sahf
or
imul
sarb
pushf
mov
add
sub
cmp
push
loop
push
mov
lods
rolb
out
fisubrs
leave
lock
mov
iret
bound
inc
mov
sti
icebp
cwtl
dec
add
subb
pop
dec
inc
push
cmpsb
movsb
jle
xor
lock
hlt
lret
mov
lret
mov
adc
mov
aas
cmpsl
dec
xor
jge
movq
dec
outsl
loope
pusha
cmc
push
pop
xlat
xchg
stos
mov
and
popf
xor
test
inc
test
pop
outsl
gs
lds
or
inc
pop
jb
adc
imul
and
mov
inc
lahf
xor
pop
lret
addr16
mov
mov
adc
inc
pop
sub
sub
pop
inc
cmp
inc
sbb
cmc
mov
sahf
dec
aas
push
pop
mov
test
pusha
sub
aad
xchg
in
xchg
inc
lods
adc
pop
push
shll
push
sub
les
roll
mov
fildll
jmp
pop
xlat
inc
or
repnz
cmp
ret
xchg
shl
mov
mov
dec
cld
pop
ljmp
push
hlt
and
pop
xlat
xor
clts
je
movsb
jmp
daa
cmp
jbe
add
mov
imul
adc
out
mov
jl
jl
outsb
cmp
cmpsb
test
es
stc
dec
jp
pop
jnp
imul
add
mov
pop
add
lcall
and
mov
dec
cs
sub
pop
sub
adc
hlt
inc
pop
std
fldcw
xor
mov
cmp
clc
fs
decl
push
out
ja
dec
in
lret
stos
aam
cltd
push
or
insb
hlt
cltd
fwait
aas
or
lock
sub
stos
push
and
jno
cld
ss
sbb
or
test
and
in
add
ljmp
ja
push
sub
std
xchg
mov
std
push
mov
push
scas
subl
lret
and
or
in
inc
xor
adcl
pop
lods
movsl
push
js
sub
sahf
ret
sbb
std
pop
out
repnz
adc
and
mov
or
inc
cmp
sub
xor
test
cmpsb
or
push
xor
lods
ret
int
insl
inc
lds
xor
testb
adcl
in
pop
xlat
jg
in
pop
lock
mov
push
lods
push
cmp
mov
mov
push
push
cld
or
mov
cli
lock
ljmp
lods
fnstsw
mov
pop
sub
sti
xchg
mov
pusha
movsl
mov
sub
inc
mov
cld
cmpsb
xchg
fnstcw
sub
roll
inc
jmp
mov
or
in
stos
xor
pop
xchg
jnp
push
and
xor
lret
xor
dec
dec
cmp
push
inc
aaa
jle
inc
lds
jecxz
and
sub
rcll
fst
pusha
aam
sbb
mov
shl
cli
mov
inc
cmp
or
fistpll
enter
das
and
dec
lret
or
in
push
pop
repz
dec
popa
mov
iret
stos
clc
xchg
ljmp
imul
mov
mov
stc
enter
add
call
shrb
jge
iret
inc
sarb
pop
dec
and
lahf
cmp
cmpsb
or
pop
stos
cmp
adc
push
push
mov
pop
dec
sub
xchg
mov
dec
push
lods
sbb
loopne
ljmp
outsl
and
arpl
push
cmpsb
cltd
mov
pop
arpl
mov
cmc
mov
xchg
push
xor
fcmovu
arpl
repz
xchg
jns
jno
test
xchg
repnz
popf
fstpl
jnp
xor
imul
lds
out
lods
jecxz
inc
xlat
lods
mov
mov
lret
cli
xor
sub
sbb
scas
aad
pop
xchg
sbb
xchg
leave
pop
xchg
add
in
xchg
or
push
fisubs
das
or
lret
add
insl
push
mov
mov
ja
gs
mov
and
outsb
sahf
push
imul
mov
repnz
mov
dec
jg
loop
sub
popf
loope
sub
adc
jge
and
js
xor
out
jp
cmp
sbb
pop
rcll
pop
xor
xchg
in
push
in
sub
xor
inc
add
xor
adcb
cmp
xchg
mov
test
jmp
pop
out
sarl
xchg
pop
cmpsb
movsb
mov
lcall
push
rcrb
in
ret
mov
cld
test
stc
mov
insb
xchg
iret
add
mov
jl
lock
insb
or
sub
out
sbb
cmpsl
rcll
mov
mov
xchg
in
popf
sub
test
ss
xchg
add
or
lret
push
ljmp
adc
dec
mov
push
out
into
clc
xchg
mov
push
inc
mov
mov
ds
sub
or
stos
cmp
xchg
xchg
loop
mov
lret
sub
mov
cmpsl
ljmp
pusha
imul
popa
jnp
mov
xchg
ror
clc
cmp
xor
scas
xor
pop
pop
movsb
push
mov
push
imul
pop
leave
int
repnz
cwtl
or
jnp
add
imul
mov
addb
cltd
sbb
imul
stos
lods
push
insb
push
jle
repnz
sub
dec
jb
push
fnstenv
xor
xlat
push
sub
arpl
pop
or
daa
jmp
aas
dec
xor
stos
push
sarb
repz
lahf
or
mov
mov
pop
pop
mov
pop
mov
scas
sub
cmp
in
sahf
sahf
mov
je
aad
gs
push
nop
stos
dec
in
sbb
ss
push
imul
push
pop
les
mov
adc
pop
rcll
jo
xchg
hlt
movsb
or
addr16
lret
xor
cmc
push
out
pop
movsb
mov
mov
cmp
mov
push
cmp
cmc
shr
cmp
icebp
mov
std
adc
jl
std
or
lret
add
ljmp
testl
xchg
dec
lock
daa
popa
and
xchg
jle
nop
lds
cmp
and
cmpb
nop
sub
mov
imul
push
jno
lock
cli
int3
cmp
xor
inc
mov
out
lock
jae
mov
out
xchg
cmpsl
inc
pop
lock
jmp
int3
inc
fisubrl
mov
xchg
mov
jns
xor
inc
sub
inc
or
add
inc
in
out
popf
jecxz
or
out
jno
xor
movsb
fidivrs
dec
push
cmp
jb
ja
fldcw
stos
lods
test
or
or
push
cmp
mov
insb
cmpsl
jns
pop
adc
insl
sub
lock
loope
arpl
or
pop
mov
gs
aaa
jecxz
sbb
shlb
xchg
loope
ja
subb
pop
inc
leave
daa
inc
insb
fcomps
test
lcall
or
lcall
push
mov
push
pop
stos
clc
sub
jge
jmp
xlat
pop
sub
push
push
dec
mov
ljmp
data16
push
cmc
cmpsl
clc
lea
popa
pop
and
popa
inc
push
push
push
cmp
in
xor
pusha
sub
xlat
cmp
aaa
push
lock
fisubl
and
pop
xlat
movsl
inc
lds
inc
pop
xor
xchg
push
pushf
push
mov
out
out
sbb
cmpsb
sub
icebp
sub
mov
adc
cwtl
arpl
cmp
push
fldt
sub
testb
xor
and
insb
push
dec
mov
push
outsl
lcall
cmc
sub
and
xor
jnp
cmc
das
push
fnsave
or
inc
ret
mov
ss
xchg
icebp
imull
dec
and
pop
lods
stc
std
jmp
aaa
inc
test
push
ds
jbe
lret
push
sub
xchg
mov
push
rolb
cmp
push
pop
inc
ss
sbb
pop
test
rcrb
add
push
sub
shlb
xchg
xor
sub
std
aam
mov
dec
imull
aas
dec
test
adc
and
arpl
sub
fistl
outsb
cs
pop
jp
dec
dec
ss
mov
mov
xor
mov
imul
clc
cmp
scas
mov
push
mov
sbbb
test
sub
notl
sub
and
repz
adc
xchg
add
sub
imul
or
enter
les
mov
inc
andb
sub
xchg
adc
out
cmpsl
push
or
loope
sbb
bound
xor
mov
outsb
xor
out
fistpll
jmp
shrl
mov
insb
sub
lcall
sub
mov
lds
gs
or
leave
movsb
fistps
xor
xchg
jle
sahf
mov
cmp
test
push
or
sub
add
adc
xor
fistps
jae
outsl
sub
push
inc
jecxz
scas
cmpl
mov
pop
mov
pop
outsl
loopne
pop
pop
or
test
mov
xchg
add
pop
aad
lock
inc
jmp
daa
pop
cmpsl
lods
xchg
in
or
inc
js
add
sub
jl
mov
push
hlt
adc
and
repnz
adc
add
mov
ret
dec
clc
frstor
mov
int3
xlat
adc
fwait
test
push
xchg
xchg
push
inc
sahf
inc
subb
jmp
push
lcall
aaa
stos
cltd
stos
mov
mov
sub
lods
pop
jmp
add
mov
cmp
fisubrs
cmpsb
jp
and
jno
xchg
mov
rorb
adc
sub
pop
jne
push
shrl
xor
add
push
sub
and
lahf
insb
add
inc
dec
outsl
pop
or
pop
mov
cmpsl
cmc
jnp
jno
mov
int3
addr16
lcall
aam
or
leave
push
jnp
xchg
mov
sahf
gs
mov
jns
test
dec
adc
jnp
mov
xor
cmp
push
push
push
pop
mov
scas
lahf
fucomp
push
and
push
mov
in
es
into
push
pop
jp
and
jno
sub
rolb
cmp
and
xchg
or
aas
enter
and
xor
daa
dec
jo
mov
call
xchg
mov
xchg
xchg
repnz
aad
pop
pop
push
movsl
in
add
lcall
in
sahf
test
loopne
cmpsb
or
mov
inc
loopne
mov
mov
fisttpl
scas
std
fs
pushl
shrl
loopne
xor
rcll
pushf
sbb
test
in
insl
inc
jecxz
mov
addr16
add
inc
shlb
scas
mov
dec
arpl
mov
inc
adc
into
or
mov
je
add
pop
jp
jg
in
sbb
pusha
sub
push
add
jmp
xchg
dec
lcall
or
fimuls
lock
lret
imul
mov
std
sbbb
and
ds
inc
test
inc
scas
pop
aas
ja
sarb
or
pop
into
lds
add
cmp
cmp
out
in
jnp
stos
lods
int
std
jmp
inc
or
flds
cld
mov
push
dec
lock
bound
test
jg
adc
cmp
dec
pop
out
push
pop
xchg
dec
scas
add
cmp
out
orb
repz
xor
int
lods
subl
pop
rclb
je
sub
jbe
or
add
and
sub
mov
mov
lea
jnp
sbb
xchg
cmp
adc
fwait
hlt
sub
inc
jne
ret
sbb
mov
imul
sub
mov
jp
push
dec
push
sub
out
fninit
stc
ficomps
pop
mov
sub
and
stos
sub
imul
push
sub
fdivrl
or
fdivs
fnstcw
lds
enter
fsubp
sub
dec
inc
mov
roll
adc
das
sub
dec
js
test
nop
sub
mov
adc
mov
sub
decl
ret
and
and
fsubrs
clc
scas
push
jns
in
movsb
into
js
sub
xchg
xlat
adc
lock
repz
testl
sbb
mov
ret
loop
xrelease
inc
mov
daa
fistl
test
shlb
ss
jp
xor
imul
loopne
and
sbb
or
fsave
pop
insb
inc
test
movb
or
push
sub
inc
call
les
sub
and
sahf
inc
in
or
push
outsb
inc
fwait
insb
push
and
arpl
jb
dec
stc
push
leave
push
shll
mov
sbb
mov
push
ret
lock
inc
push
jmp
inc
mov
out
mov
cld
adc
sbb
mov
mov
pop
in
xor
jmp
lock
ret
pop
adc
xor
inc
or
push
loope
rclb
jo
pop
dec
cmc
mov
pop
bound
fildl
sbb
incb
xor
mov
leave
in
mov
sub
jg
jmp
fstpt
neg
lock
xlat
ljmp
sti
rcrl
lea
repz
or
rcl
es
xchg
data16
dec
inc
xlat
stos
negl
inc
pop
or
out
xor
sbb
sti
iret
iret
jl
or
sti
xchg
pushf
mov
cltd
ja
sub
push
adc
hlt
in
outsl
push
jmp
aaa
dec
lahf
add
push
xchg
lock
hlt
sub
inc
subb
fistpll
loope
mov
jb
sahf
jp
xor
mov
icebp
lds
mov
mov
fisubl
xor
lret
mov
sub
cmp
push
and
dec
pop
ja
or
bound
int3
jo
ret
cli
xlat
mov
cs
fs
jns
mov
fsub
mov
xchg
push
lahf
outsl
adc
jns
in
mov
xor
cmpsl
cld
jmp
xor
cmp
leave
lret
mov
mov
xchg
sub
out
lret
fildll
sub
fmul
jmp
add
lret
std
adc
and
in
cmp
xor
js
data16
call
jno
pop
adc
jmp
sbb
iret
adc
es
mov
sbb
pop
inc
cmpsl
push
sub
xor
mov
into
pop
adc
and
sub
cmp
stos
sub
add
insl
insl
jge
sub
scas
rorb
sbb
fmul
push
xor
dec
adc
imul
mov
push
imul
mov
xor
mov
push
xor
inc
push
or
orl
xor
pop
adc
mov
ja
xchg
xor
push
jge
test
jbe
push
in
andb
cmp
adc
jmp
xchg
mov
jnp
adc
in
insb
adc
or
clc
inc
mulb
push
les
testl
push
xor
iret
jno
das
mov
sub
movsb
or
pop
ud2
and
int
mov
iret
inc
push
sbb
cld
dec
mov
cli
xchg
pop
je
pop
sahf
into
not
das
xchg
repz
sbb
scas
bound
xor
pop
pusha
xchg
fidivrs
lods
inc
inc
mov
sub
add
add
lea
mov
scas
add
mov
inc
pop
into
fs
lock
sub
sarl
jl
push
xchg
xchg
fwait
push
xor
xor
ljmpw
mov
mov
jmp
int3
lods
adc
sub
or
jle
std
aad
sahf
sub
mov
adc
cmc
xlat
mov
clc
sahf
pusha
sub
inc
jmp
mov
sub
xchg
int
imul
mov
roll
mov
dec
je
add
pop
lret
out
xor
add
fwait
add
pop
test
mov
std
fnstcw
jmp
ds
mov
pop
popf
push
bound
xor
xor
mov
sbb
int
mov
cld
fisubrs
mov
cwtl
jp
dec
std
dec
imul
cli
mov
mov
cs
lods
jg
jl
rorb
or
shll
xchg
adc
in
imul
pop
pop
clc
mov
jl
push
push
stc
push
ljmp
xor
arpl
aam
sub
cmp
push
or
imul
push
jmp
dec
or
xlat
dec
cmpsb
mulb
inc
cli
rcr
jns
mov
dec
sub
pop
pop
xchg
mov
jo
pop
push
sbb
repz
into
mov
push
pop
fldl2e
addr16
fistl
stc
push
movl
ror
lret
dec
inc
into
fisubrs
pop
push
jmp
es
int
fisubl
fdiv
sbb
pop
ss
pop
inc
es
cli
addr16
xchg
outsb
movsl
mov
and
mov
jb
ret
push
jmp
cltd
adc
sub
popa
shr
cmpsb
push
mov
push
push
lcall
fistpll
insb
xchg
mov
lods
xchg
loopne
loop
or
xchg
xor
aad
mov
adc
in
sbb
test
in
or
xchg
dec
push
mov
call
cmp
dec
out
dec
add
loope
push
adc
jl
mov
mov
push
cmpsb
dec
into
cld
xchg
sbb
xchg
out
xchg
fwait
adc
cmp
stos
jno
ret
pop
sub
xor
jbe
int
and
inc
scas
and
cs
clc
lods
xchg
sub
rcr
push
dec
inc
sbb
jp
or
call
add
js
lock
lods
dec
jg
ss
and
es
sub
xchg
lret
adc
test
leave
inc
andnps
push
lods
stc
mov
pop
insl
int3
xlat
jne
push
jl
dec
jnp
outsb
sbb
inc
inc
out
mov
push
push
and
cs
sti
add
lock
pop
insl
scas
lods
xchg
xchg
cltd
in
call
ljmp
gs
mov
sub
cmpsl
sbb
or
lock
dec
fiadds
in
mov
cli
fadds
ljmp
xchg
in
xor
adc
call
fsts
sti
aaa
int
ja
pop
lds
cmp
add
pop
shlb
push
mov
dec
dec
in
call
mov
adc
cs
push
je
ss
and
aad
lock
mov
xor
xchg
in
ret
jns
jbe
scas
test
xchg
rolb
fwait
mov
iret
pop
mulb
sbb
lock
fwait
xlat
sub
sahf
xchg
dec
test
and
shll
jg
jp
sub
sub
cmp
mov
addr16
lock
and
adcb
sahf
inc
mov
lods
add
stos
ja
shlb
inc
mov
and
xor
add
and
in
push
lock
lahf
fstps
add
inc
xchg
das
into
mov
mov
dec
xchg
add
lock
push
push
sub
xchg
movsl
stc
xchg
sti
lock
stc
inc
inc
aaa
repnz
dec
and
es
enter
repz
loope
jge
jnp
mov
xchg
jnp
imul
jp
and
push
cmp
or
xchg
mov
pop
pusha
jp
in
dec
xchg
out
sub
xchg
scas
sbb
pop
rcr
sbb
int3
cmp
cmp
xchg
enter
jo
sub
jmp
mov
push
out
cmpsb
dec
shl
movsl
in
insb
imul
insb
mov
mov
sbb
in
xchg
bound
mov
test
mov
cmp
sub
scas
pop
loope
cld
cltd
xchg
aas
fistpll
push
jne
fs
leave
dec
or
sahf
outsl
sbb
jle
add
movsb
js
stc
push
sub
movsb
sub
cmp
loope
xchg
xorb
xchg
add
sahf
notb
sub
push
scas
jmp
imul
lcall
mov
pop
ds
sar
in
adc
and
nop
lret
sbb
int3
testb
arpl
je
xlat
cmp
push
inc
add
mov
jae
mov
jge
ficoml
out
int3
mov
pop
mov
inc
cli
loope
xor
sahf
lods
repnz
xchg
lock
loope
jbe
rclb
or
sbb
push
and
mov
inc
add
cmp
mov
arpl
dec
orb
pop
push
cmp
and
pop
js
sub
mov
testb
push
or
stc
dec
pop
gs
js
sahf
fwait
mov
ss
fs
fcomps
icebp
mulb
xchg
sub
push
inc
jbe
pop
cmp
mov
pusha
lods
mov
dec
xchg
mov
hlt
xchg
jmp
lds
pop
lds
test
arpl
cmc
pop
push
adc
out
or
inc
cmpsl
pop
sbb
or
test
inc
lahf
outsl
movsb
jl
imul
in
jecxz
ss
xchg
mov
dec
lock
mov
cmpsl
outsl
jge
mov
sub
and
outsb
hlt
and
or
ljmp
ja
ss
ret
ljmp
mov
adc
addr16
out
push
cmp
int
in
adc
fldz
daa
subb
test
cmp
mov
push
rcr
pop
mov
movsb
shlb
xor
sti
sub
mov
mov
test
imul
cmpsl
jg
out
sbb
xchg
dec
ss
jae
andb
or
push
jle
xchg
inc
adc
xor
sub
stc
std
sbb
cmpsb
ret
cmp
lock
cld
add
rcll
adc
sub
inc
insb
jle
or
xchg
das
outsl
pop
lods
mov
push
ss
shrl
xor
jmp
adc
add
stos
insl
add
iret
and
xor
push
push
sub
push
shll
lock
push
inc
push
and
jle
and
xchg
jnp
inc
push
outsb
mov
bound
imul
aad
dec
jle
ja
dec
es
pusha
add
jl
or
clc
loope
loope
jo
ja,pt
addb
pop
data16
pop
outsl
xchg
into
clc
outsb
fwait
jle
hlt
inc
xchg
or
sarl
mov
jnp
int
out
out
scas
ret
mov
leave
xorb
dec
mov
aam
adc
sub
insb
mov
inc
jb
icebp
xchg
dec
cmp
std
mov
lcall
mov
mulb
fdivr
aas
pop
jecxz
ret
lahf
jl
cmpsb
mov
loopne
xchg
inc
jle
imul
lcall
or
lock
xlat
sysexit
dec
cld
push
aad
das
jle
cmc
and
imul
in
sbb
cs
scas
xchg
lds
adc
push
test
push
adc
bound
sahf
xor
stos
cwtl
pop
insb
jecxz
dec
movsl
push
or
data16
fwait
les
out
inc
jg
popa
xor
lcall
cmpsb
ret
mov
in
pop
add
dec
mov
fwait
ret
push
mov
ror
xchg
gs
xchg
icebp
inc
mov
rcl
cmpsl
ss
add
jbe
mov
add
loop
pop
mov
leave
push
xlat
test
jl
sbb
testl
out
push
stos
mov
fldt
mov
jmp
stos
pop
push
xor
aad
inc
mov
push
cmpsb
lds
ja
das
scas
xchg
adc
sarl
call
inc
push
xor
mov
pusha
pop
arpl
pop
lds
imul
lock
out
stos
ret
adc
outsb
cmpsb
lahf
inc
add
push
cmpsl
inc
inc
push
xor
inc
push
mov
stos
cmp
pop
sahf
dec
mov
in
mov
jmp
mov
jp
pop
pop
inc
sub
jns
idivb
movl
aam
stos
push
dec
push
inc
xor
lods
data16
xor
lret
adc
std
sub
inc
into
mov
push
cmp
inc
f2xm1
in
cmp
pop
cmp
xlat
leave
int3
mov
sbb
add
mov
jl
mov
lret
sti
or
mov
xor
add
ret
dec
sub
or
push
cmpsb
test
cltd
lock
and
xchg
lock
jno
clc
push
mov
cmp
inc
adc
inc
push
lcall
lods
arpl
push
pushf
dec
mov
push
bound
out
sub
add
mov
lds
repz
xchg
in
imul
in
dec
gs
push
mov
xor
test
inc
dec
xor
cmp
push
jecxz
and
and
out
sub
push
adc
add
inc
fmull
xor
sbb
xor
inc
sbbb
and
inc
pop
jns
add
les
adc
sbb
pop
outsb
add
mov
arpl
mov
fdivp
insb
jecxz
pop
or
out
negb
movsl
lock
xchg
cmp
mov
and
push
sbb
sub
mov
push
mov
sahf
push
in
push
lods
addb
mov
add
jne
xchg
pop
push
or
lahf
leave
and
sbb
fisubrl
add
mov
xor
movsb
lods
call
inc
fidivrs
fidivrs
xor
sbb
not
jg
ja
cmp
lock
sbb
insb
in
dec
sahf
out
push
aas
mov
aam
push
pop
test
sahf
cwtl
sbb
inc
sbbl
pushl
addr16
and
lock
xchg
xor
test
dec
inc
xor
or
xchg
push
lret
mov
rcr
arpl
sub
dec
xor
imul
arpl
inc
sahf
adc
mov
or
sbb
leave
f2xm1
add
push
fldenv
and
sbb
lods
das
scas
xlat
pop
and
fistpl
cmp
fwait
insb
ss
dec
jb
jne
jmp
stos
pushf
jmp
mov
ror
fidivrs
adc
jmp
adc
inc
mov
mov
in
pushl
adc
cmc
lock
dec
mov
jl
jne
es
pop
sub
fwait
or
xor
xor
xchg
mov
cltd
dec
cmpsl
sbb
xor
xchg
cli
pop
hlt
xor
jg
dec
ret
mov
dec
sub
xor
cmpsl
data16
and
jmp
xchg
xchg
mov
mov
or
dec
dec
xor
pop
adc
cmp
push
lret
mov
into
xlat
out
mov
lcall
dec
out
lret
add
mov
mov
cmp
jmp
ror
hlt
test
hlt
pop
ret
ds
add
repz
xchg
jnp
xchg
sbb
incl
or
gs
cmpsl
add
es
push
pop
cmp
sbb
pop
test
inc
jns
das
les
dec
lret
lock
nop
jl
jns
imul
negb
inc
cmp
pop
ret
test
xlat
enter
xchg
mov
jbe
mov
out
mov
xchg
clc
test
in
rcl
sub
fbstp
mov
push
icebp
and
and
mov
cltd
iret
sub
jecxz
popa
inc
int
in
in
outsl
mov
test
and
mov
faddl
dec
cmp
fidivrs
sub
femms
mov
loope
lret
sub
test
aam
stos
mov
dec
add
lock
xchg
push
into
enter
add
push
cs
mov
adc
bnd
repz
jnp
ret
pop
pusha
xor
lret
rcll
cmp
enter
xlat
inc
bound
dec
stos
jecxz
and
cs
sti
lahf
icebp
push
dec
mov
lds
sub
adc
push
negl
add
sub
inc
mov
cmp
cmc
xor
or
cmpsl
lret
in
pop
pop
pop
push
repz
test
mov
icebp
test
je
dec
pop
mov
sbb
fisubrl
jbe
out
adc
pop
add
cmpsb
mov
aad
xor
push
mov
inc
xchg
ds
pop
pop
pop
adcl
rorl
xchg
adc
in
imulb
gs
in
rcl
mov
out
imul
scas
mov
mov
shr
xchg
add
inc
testb
mov
or
sub
leave
pushf
repz
or
add
addr16
dec
imul
testl
inc
adc
pop
les
pop
in
mov
or
mov
xor
ds
push
in
loopne
sub
movsl
std
fnstcw
sarl
sbb
lock
mov
mov
rorb
mov
ret
mov
xor
lretw
repnz
repnz
adc
imul
push
retw
sub
adc
daa
inc
adc
adcb
xchg
mov
adc
ljmp
lahf
icebp
mov
add
ds
xor
inc
icebp
and
gs
push
mov
leave
divl
les
sbbl
insb
inc
xchg
scas
pop
out
cwtl
sahf
push
pusha
jge
mov
jo
push
add
sub
mov
mov
fisttpll
sahf
arpl
and
jnp
int3
mov
fldl
pop
out
jb
xchg
xor
xchg
jae
pop
jg
xchg
push
sbb
xor
and
mov
clc
cmpsl
hlt
push
dec
mov
cmp
fidivs
in
in
js
bound
xchg
arpl
mov
je
dec
rep
out
test
lds
scas
push
xor
xchg
fwait
ljmp
int3
mov
mov
or
xchg
dec
fimuls
pop
lock
mov
add
mov
das
mov
test
addb
xchg
sbb
add
addr16
enter
mov
pop
xor
cmpsl
jae
ds
negl
sub
icebp
gs
and
xchg
inc
mov
stos
push
test
jbe
ljmp
dec
adc
movsb
lock
dec
mov
sbb
inc
mov
scas
ljmp
loopne
push
jo
inc
iret
add
rorl
pop
int
push
imul
aad
cld
push
stos
sbb
push
mov
cmp
cmp
pop
outsl
dec
xchg
push
lock
sub
das
rcrl
dec
push
xor
inc
js
pop
add
cmpb
push
js
lcall
or
jle
pop
sub
sub
aaa
sub
dec
hlt
xor
and
mov
cmpsl
lea
push
fcoml
sub
mov
mulb
insl
je
xlat
pop
push
mov
sub
xor
lahf
adc
fldcw
ljmp
jne
in
lcallw
repz
push
mov
cmpsl
jmp
aad
cmp
sub
test
mov
daa
imul
xor
xor
jge
jmp
movups
into
lock
fsubrp
jmp
jle
orb
scas
and
movsb
inc
push
aam
jae
xchg
push
notl
push
mov
pop
xor
sub
and
pusha
pop
add
push
stc
adc
outsb
ljmp
scas
insl
popf
mov
xor
scas
adc
aad
mov
xor
stos
xor
imul
dec
mov
xor
inc
cmp
mov
pop
dec
mov
loopne
or
inc
cmp
cmpsl
dec
lock
mov
or
in
mov
dec
mov
dec
clc
shrl
je
mov
mov
lods
pop
mov
lds
leave
hlt
dec
push
testb
mov
dec
adcl
bound
cmp
adc
mov
frndint
push
xor
xor
inc
out
add
or
jns
cli
test
cmpsl
leave
mov
inc
pop
dec
xor
into
loope
dec
or
in
ja
inc
push
inc
insb
fidivrl
cmp
inc
mov
xor
mov
cmp
imul
add
in
adc
rorl
scas
xor
leave
insl
inc
and
pop
scas
pop
mov
or
sub
sti
inc
inc
or
xor
dec
cli
pop
xchg
xchg
cmp
or
pop
movsb
in
mov
dec
in
lock
adc
into
notl
mov
push
aad
pushf
xchg
xchg
out
dec
push
adc
sbb
cmp
xchg
push
jg
lds
mov
mov
xchg
mov
int3
xor
add
mov
dec
inc
pop
jnp
xor
out
push
leave
enter
test
or
jp
or
imul
shlb
cmp
mov
sub
push
sbb
and
sub
ljmp
rcr
mov
gs
xor
aad
test
enter
inc
jno
pusha
mov
les
aas
push
aam
xor
and
in
jmp
test
jg
addr16
in
out
jg
cmp
xchg
in
sbb
xchg
mov
repnz
cmpsb
mov
insl
xlat
push
jb
fimuls
jl
jmp
or
dec
sarb
andl
fisubs
inc
mov
xchg
push
lea
jle
ljmp
mov
xor
lods
int
push
push
das
in
lock
push
xchg
aas
cld
cs
scas
pop
dec
mov
gs
insl
sti
out
cli
adcb
pop
jno
push
push
cmp
imul
sub
in
test
cmp
rol
adcb
in
and
les
orl
mov
and
sub
mov
pop
in
cli
mov
mov
pop
sti
test
push
aas
out
jge
in
mov
add
mov
aaa
out
es
negb
jnp
xlat
inc
and
lods
sti
adcb
adc
out
mov
in
mov
and
jo
fst
sub
sub
inc
popf
inc
stos
popa
sub
sahf
sbb
repz
mov
cmpsl
mov
sub
cmpsb
push
jg
jns
and
push
or
insb
sub
xor
pop
ds
jmp
flds
or
jl
cwtl
sbb
cmpsl
dec
xchg
push
xor
movsb
cmp
push
movsb
add
push
lock
shll
pop
or
push
in
in
stc
push
jno
xor
std
or
jp
loopne
outsl
scas
not
sbb
cmp
mov
fimull
adc
push
jbe
xchg
fstps
es
mov
in
je
test
jo
dec
inc
jl
jns
xor
pop
xchg
jae
mov
insl
mov
cltd
dec
push
sahf
sbb
inc
in
sub
cmpsb
std
xchg
mov
push
cmp
add
filds
adc
loopne
dec
adc
sub
mov
gs
leave
sub
mov
call
gs
mov
shrl
xchg
pop
fidivrl
ja
inc
scas
rcll
xor
xor
xchg
or
cltd
insb
int
dec
xchg
inc
push
iret
ljmp
pop
xor
aam
ss
cmpsb
push
push
cmp
jnp
lock
data16
sub
ja
jnp
push
mov
pusha
lcall
pusha
fmuls
dec
inc
cmp
mov
jg
push
push
addl
rorb
mov
scas
add
into
ljmp
nop
aam
lods
pop
xor
lock
lods
xchg
outsb
inc
rorb
rorb
rcl
repnz
inc
mov
sbb
push
push
mov
mov
push
es
je
jo
std
add
stc
addr16
mov
add
jmp
cmc
add
dec
mov
fsts
jecxz
mov
fwait
test
in
mov
push
sub
xor
inc
notb
in
sub
adc
push
jae
xor
lock
clc
adc
push
lcall
stos
in
sbb
mov
loop
jno
xor
repz
xchg
lock
cmp
sub
fxch
outsl
insb
mov
add
xor
sub
daa
pushf
imul
data16
out
push
mov
mov
xchg
push
lahf
mov
inc
fsubl
dec
cmp
jg
inc
or
add
aas
fidivrl
pmulhuw
jmp
test
inc
rcrl
push
and
out
or
test
jge
inc
or
push
xor
jg
inc
mov
loop
sub
push
xor
inc
and
das
sub
stos
pusha
lret
pushf
xlat
pop
inc
pushl
pop
arpl
ret
mov
add
mov
sub
popa
sbb
lods
and
or
sub
cld
out
inc
push
lret
sub
mov
or
ljmp
pop
int3
adc
gs
inc
cmp
push
adc
imul
push
pop
inc
mov
data16
pushf
mov
sub
es
gs
push
and
or
add
xor
ja
mov
das
xchg
addb
cmpsl
pusha
xor
paddsw
fcomip
sti
movsl
ds
or
sub
pop
fidivl
ja
fistps
dec
ficompl
sbb
or
mov
pusha
lcall
daa
mov
and
xlat
bound
test
jns
cmpsl
daa
dec
xor
cmp
fidivrs
sti
pop
cmp
ret
in
mov
inc
stc
adc
test
fmuls
cmp
jmp
in
lret
les
cmp
leave
and
andb
aas
inc
movsb
lretw
jecxz
fisubs
repnz
lcall
mov
aad
stos
cmp
jns
pop
cltd
jmp
xor
xchg
scas
adc
test
roll
je
lods
movsl
dec
dec
add
and
push
adc
mov
pop
subb
or
sarb
xor
mov
sahf
or
push
mov
mov
loop
scas
insb
lahf
faddl
cs
push
outsb
cmp
cmp
std
xor
dec
adc
pusha
adc
adcl
push
lock
inc
push
cwtl
xorl
jb
je
popf
push
int3
xchg
sbb
cmpsl
lock
orl
ja
mov
gs
pop
pop
inc
xchg
lock
jl
jb
xchg
and
fs
icebp
push
repz
sub
cwtl
xlat
push
and
stc
add
pop
nop
pop
mov
shlb
xchg
sahf
addr16
in
cmp
add
aas
fcomps
mov
jne
sub
xchg
ficompl
add
jae
popf
dec
xor
ja,pt
in
inc
aad
nop
pop
lods
imul
jno
in
das
bound
xchg
dec
test
push
mov
pop
mov
mov
pop
mov
xor
cmp
xchg
test
cmp
dec
hlt
ret
mov
push
in
aas
add
xor
arpl
xor
mov
lahf
or
in
out
pop
push
in
mov
rolb
sbb
pusha
lea
sub
dec
cmp
pop
xor
aad
subb
dec
add
in
jns
pop
pop
pop
mov
inc
fstps
int
xor
insb
int3
pop
mov
mov
dec
mov
popf
xor
adc
ljmp
mov
mov
mov
pop
flds
mov
add
pop
push
shr
dec
fsubrl
lahf
mov
clc
jae
and
loopne
lahf
mov
ds
pusha
movsl
jnp
jo
jno
pop
ds
outsl
pop
lods
imul
xchg
cmpsl
xor
stos
in
aad
in
cmc
imul
sub
js
push
pop
add
mov
inc
insl
inc
test
dec
loope
push
leave
rolb
mov
pop
sbb
fmuls
lret
out
pop
pop
dec
repz
sub
mov
test
xchg
dec
imul
xchg
scas
das
fwait
clc
pusha
cmc
enter
movsb
xor
pop
std
adc
mov
testb
shrl
lret
std
push
out
lock
addb
bound
scas
lds
xrelease
je
mov
pop
les
test
push
movsl
jl
fsubs
jmp
jnp
test
cld
sub
jne
rolb
dec
cltd
fisttps
shlb
es
xor
ss
fildl
xor
pop
stc
cmp
stos
push
or
in
cwtl
mov
scas
push
or
cmc
jecxz
dec
inc
rolb
sbb
xchg
push
xchg
fwait
imul
xchg
fistps
xlat
inc
hlt
addps
sub
jnp
dec
cmpsl
scas
push
fldl
push
ret
pop
push
ret
stos
jmp
xchg
mov
mov
icebp
sub
push
repz
mov
das
jae
push
jae
in
xor
mov
xor
sbb
cmp
push
push
sbb
jne
inc
orb
cmp
or
push
xchg
out
mov
xchg
sub
xor
mov
sbb
mov
push
cld
cmpsl
jle
in
dec
mov
xchg
mov
in
out
and
pop
xchg
push
bound
push
cmp
sub
cmp
lret
mov
sub
scas
inc
xor
and
mov
inc
js
push
orb
in
cmpsb
out
mov
jecxz
mov
aad
mov
jl
loopne
sub
cmpsl
or
scas
push
sub
cmp
mov
cmp
push
mov
je
jl
inc
lods
imul
outsb
insb
in
xchg
mov
sub
and
jmp
fadds
mov
arpl
insb
ror
mov
and
ljmp
call
mov
push
bound
jecxz
decl
iret
pop
lock
insb
xor
cmp
adc
mov
adc
out
repnz
push
cmpsl
ljmp
pusha
and
clc
repz
popa
mov
fdivr
shrb
ljmp
mov
pusha
push
stos
push
mov
pushf
jne
dec
xchg
xor
loope
mov
pop
mov
cs
mov
mov
sarl
je
fisubrs
jno
out
push
ss
jecxz
xchg
out
or
rolb
je
pop
or
inc
movsl
mov
mov
dec
push
mov
push
push
or
mov
fwait
add
sahf
in
push
inc
mov
scas
add
sarb
fildll
call
jp
in
rorl
imul
or
sqrtps
mov
add
adc
jle
lds
mov
push
xor
jle
popaw
mov
jae
out
repz
dec
xchg
push
inc
shlb
push
or
cmp
mov
xchg
cmpl
rcr
push
jecxz
and
divl
lods
jmp
in
dec
inc
xor
dec
icebp
enter
mov
ljmp
mov
in
fisubrs
or
lods
scas
jmp
sub
stc
sbb
push
popa
push
pop
iret
or
xchg
mov
test
fisttpll
ljmp
jp
ljmp
in
inc
push
dec
imul
popa
pop
scas
pop
mov
xchg
xor
sbb
xchg
mov
dec
push
and
jbe
mov
jne
pop
mov
sbb
xchg
or
jmp
mov
sar
mov
mov
sbb
ret
imul
inc
std
pop
or
sub
fistpll
mov
xchg
test
xchg
jmp
push
pushf
loope
ljmp
int3
fwait
ss
sub
xchg
cmpsb
dec
sbb
lock
dec
pop
cmpsb
xor
scas
lcall
inc
add
xchg
cmp
mov
insl
mov
dec
or
loopne
clc
lahf
and
aaa
jl
cmp
enter
or
xor
mov
or
push
imul
dec
mov
add
inc
mov
mov
repnz
xor
mov
xor
mov
cmp
cmp
cmp
xor
sbb
out
or
push
int3
cli
xor
add
paddsb
popw
jge
lds
shlb
mov
cmp
les
addl
loope
mov
dec
dec
stos
rcll
xor
sbb
fstpt
cwtl
xchg
lds
adc
xor
outsb
mov
mov
cli
or
in
mov
dec
nop
scas
fwait
or
je
lock
mov
cmp
mov
into
jo
and
push
sti
lret
mov
sarb
mov
sub
stos
lods
aam
loope
push
lods
cmp
dec
hlt
pop
sbb
dec
inc
into
jp
mov
push
jl
mov
lock
cmp
out
orb
sub
inc
dec
push
mov
sub
sub
imul
or
push
int
lret
ljmp
pop
mov
lods
aas
inc
add
pop
add
adc
push
cmpsl
ficompl
mov
jmp
movsl
in
dec
cmpb
jmp
jno
jno
jle
cmp
dec
push
fwait
push
mov
dec
push
push
cld
sub
stos
lods
in
mov
cmp
shlb
push
mov
pop
push
mov
sbb
xchg
sub
xchg
clc
add
mov
shll
push
dec
sub
adc
mov
or
xchg
mov
rol
ftst
mov
push
iret
push
add
out
jne
mov
imul
pop
rcrl
pop
push
pop
xor
add
push
add
push
xor
pop
pop
add
lock
jp
xchg
push
test
pusha
ja
push
xchg
mov
dec
cmpsl
lds
dec
movsb
fstps
insb
rcr
jl
cmp
lods
sub
insl
xchg
lcall
popa
test
sti
sbb
jp
aad
js
lock
aas
cltd
lcall
mov
jg
rcl
sbb
adc
pop
insb
push
mov
and
in
cmp
jp
mov
pop
cmpsb
inc
js
xchg
imul
push
inc
mov
loope
cmp
outsb
mov
add
les
inc
xor
icebp
sub
in
push
lahf
or
jle
mov
xor
in
jle
jle
xchg
lock
or
test
lock
rcl
mov
mov
pusha
cltd
pmaxsw
mov
arpl
adcb
lahf
test
and
bound
jbe
jp
sub
stc
mov
cmp
jge
dec
ljmp
insl
cmp
sub
nop
dec
push
mov
clc
ficoml
leave
repz
sub
mov
subb
imulb
jl
xchg
cmp
popa
lcall
jmp
mov
cmpsl
lahf
insl
ja
sbb
adc
fsubs
and
sub
cmp
push
into
sub
mov
ljmp
jae
mov
or
cmc
push
test
stos
repnz
das
lret
sbb
mull
pop
sbbw
sub
xchg
adc
add
dec
movsb
gs
out
test
cmc
pop
pop
sub
add
jbe
mov
lcall
mov
mov
lret
arpl
lods
push
int
cvtpi2ps
shll
rcrb
cmp
pop
sbb
and
fwait
out
dec
jae
dec
and
clc
inc
sub
rolb
adc
cltd
call
xor
add
pop
into
fcmovu
mov
hlt
insb
xor
cmp
ljmp
fsubrl
fnsave
inc
xor
sub
jmp
test
cltd
sub
stos
lcall
lods
pushf
call
test
fsubrs
inc
test
jmp
fsubp
shlb
sub
mov
xor
outsl
jne
andb
cmp
push
sub
cmp
push
or
cli
or
sub
mov
shlb
int
imul
movsl
sub
push
jne
jecxz
pop
inc
roll
sub
or
int
test
add
push
mov
subl
ds
mov
test
es
stc
mov
sub
push
add
ljmp
scas
mov
cmpsb
cmp
mov
jl
sub
out
fsts
fistpll
pop
scas
add
or
imul
jecxz
das
gs
loopne
call
or
adc
arpl
ja
dec
shl
pop
push
pop
sub
mov
mov
fsubrl
dec
lahf
sub
loope
lods
push
scas
nop
ljmp
aaa
push
cmp
mov
and
mov
aam
push
sub
pop
test
sub
arpl
adc
push
fidivs
xor
push
stos
adc
add
in
and
cmp
movsl
cltd
sub
lret
mov
stc
mov
mov
arpl
ss
jns
sub
adc
leave
jg
cmp
sub
mov
sub
xchg
fldl
mov
adc
ljmp
or
mov
sub
lds
data16
inc
hlt
out
jecxz
int3
push
mov
sub
sub
test
sub
mov
mov
in
jo
add
cld
test
mov
xor
mov
dec
sub
pop
pcmpeqb
push
sbb
lret
js
sub
and
push
shrb
lcall
mov
jmp
iret
jnp
and
mov
xchg
cmp
lock
dec
cmp
aas
test
hlt
fisubrs
out
arpl
lret
xchg
add
pop
ds
std
imul
add
das
movsb
push
pop
adc
mov
arpl
adc
mov
idivl
fstl
lret
mov
pop
adc
cmpsl
arpl
int3
dec
push
adc
cmp
and
nop
test
test
add
fsub
sub
sti
and
int
sub
jmp
dec
add
push
cmp
xchg
mov
xchg
or
mov
jnp
mov
stc
push
jb
sbb
inc
xchg
sub
push
insl
xor
cmpsb
jb
popl
inc
xchg
mov
jnp
adc
or
int
dec
xchg
stc
pop
push
fldcw
add
out
mov
dec
sub
push
cmpl
sub
insl
out
push
int3
mov
test
addb
jge
stc
inc
push
test
sub
add
pushf
sub
out
lds
pop
jno
pop
push
push
movsb
dec
and
sub
xor
sub
push
shrl
icebp
xor
and
or
ja
cmp
sahf
xchg
sub
fsubrl
mov
ror
mov
push
push
dec
and
and
mov
jl
sub
sub
out
sbb
sub
lretw
cmpsl
cs
pop
push
insl
fldenv
sub
cwtl
les
mov
push
test
sub
xchg
outsb
lods
rcl
sub
roll
inc
push
jg
pop
scas
xor
test
xor
xor
in
pop
xchg
adc
fldt
scas
sub
mov
cmp
sahf
lods
test
dec
test
lock
sub
sub
loop
mov
adc
mov
jae
dec
pop
lods
pop
sub
mov
movsl
test
das
dec
sub
fdivrl
pop
inc
pop
out
lret
jg
pop
push
stos
leave
cli
sub
ljmp
jg
pop
les
adc
xchg
dec
or
sub
out
and
test
addb
ss
and
sarl
pusha
inc
mov
pop
fsubrs
jmp
repz
loopne
fs
mov
pop
inc
fldcw
jmp
mov
imul
and
mulb
loopne
rclb
xlat
sub
sbb
pop
in
jg
fiaddl
xchg
sub
xor
stc
adc
mov
jg
xchg
lods
cwtl
sub
stos
inc
mov
sbb
mov
cmpsl
sbb
push
xor
mov
data16
ret
and
xor
sub
xor
addr16
insl
jmp
sbb
xor
mov
inc
cmp
jg
shrl
jbe
xor
mov
cmp
sub
sbb
les
pop
test
daa
cwtl
ss
dec
cltd
popa
out
sub
loope
popfw
jnp
sbb
push
xor
pop
jle
sub
cmp
add
or
mov
es
dec
push
sub
cld
and
inc
pushf
inc
sub
ret
xchg
and
push
je
dec
cs
add
cli
sub
outsb
push
mov
or
ljmp
add
std
pop
xchg
add
pop
out
lahf
or
mov
das
out
jmp
adc
jp
sub
ja
and
and
lret
jnp
fidivs
aas
int3
sub
ss
add
inc
movsb
mov
stos
xor
lcall
mov
xor
sub
dec
test
push
sarl
sarb
mulb
test
das
in
test
outsb
sbb
pop
cmpsl
mov
or
sbb
push
sbbb
cmp
pop
mov
sbb
lock
repnz
jecxz
lods
pop
cmpsb
leave
pop
mov
xor
out
sbb
lcall
dec
decl
test
add
in
imul
cmp
ret
sbb
sbbb
jle
sub
repnz
push
int
or
sub
test
mov
sub
inc
mov
fsubrs
aas
and
jo
cmp
push
fs
dec
dec
add
addl
xlat
shl
aad
mov
sub
cld
pop
mov
sbbl
popa
aas
cmp
mov
sub
dec
scas
cmpsl
arpl
adc
mov
inc
sub
push
loop
jle
mov
ss
enter
loope
jnp
push
dec
jge
test
mov
repz
add
sbb
jae
push
mov
stos
imul
lds
sahf
shrl
push
lock
std
flds
fistps
rep
add
hlt
push
incb
insl
das
dec
mov
pop
fs
insb
in
test
nop
imul
mov
stos
mov
clc
dec
mov
sbb
sub
bound
mov
xchg
bound
and
and
cld
pop
out
jbe
pop
jmp
inc
sti
imul
movsb
xor
jg
xchg
ds
mov
leave
test
inc
cmpsl
test
cmp
jae
dec
push
mov
in
aaa
cmp
in
or
shl
in
imul
push
scas
mov
xchg
jno
mov
or
push
insl
test
icebp
jp
push
dec
testl
in
and
sub
leave
mov
in
push
mov
lock
test
mov
pop
in
mov
jmp
or
or
mov
xor
or
insl
lret
mov
fldl2t
repnz
jb
jecxz
call
loope
sahf
jl
lds
xchg
add
lock
out
jp
cwtl
imul
xchg
call
push
sbb
pop
clc
rolb
inc
cltd
shrl
mov
mov
mov
jbe
arpl
dec
lods
pop
in
jge
push
or
inc
mov
add
sbb
ss
lahf
and
jbe
rolb
inc
inc
leave
add
repz
lea
or
lock
push
push
mov
xchg
ss
shrb
cli
or
stos
push
ljmp
arpl
or
or
ljmp
icebp
cmp
sub
sbb
xor
loopne
aas
lods
mov
pop
ret
mov
inc
cwtl
lcall
sbb
dec
or
dec
inc
out
loope
xor
pop
or
cmp
iret
xchg
lods
sbb
scas
fisubl
sub
pop
sbb
jae
mov
insl
filds
cli
into
sub
rclb
mov
rclb
pop
ljmp
xor
lock
imul
and
in
lods
imul
dec
sub
stos
push
outsl
les
das
pop
fistpl
sub
ret
push
in
inc
mov
push
shll
jne
sub
imul
out
mov
jle
dec
lods
lsl
cmp
fs
pop
les
inc
pusha
sbb
sub
mov
in
enter
ds
pop
dec
xor
mov
stos
lahf
das
push
cs
arpl
cmp
aam
roll
daa
inc
mov
icebp
jns
sti
and
out
out
mov
daa
pop
sbb
iret
pop
insb
cltd
dec
adc
mov
sub
in
out
fwait
cmp
pop
sbb
das
sbb
lods
fidivrl
test
insl
ficoml
xor
test
repz
sub
cmc
ljmp
imul
mov
enter
sbb
xchg
sub
das
fwait
add
loop
sbb
fnsave
pop
shrl
jbe
les
sub
cltd
adcl
clc
pop
insl
add
sub
jmp
jns
addl
bound
sbbb
dec
arpl
sarl
push
ret
xchg
ja
subl
mov
adc
sub
mov
in
int3
into
out
adc
ljmp
xchg
std
or
ret
sub
ret
mov
add
repnz
dec
hlt
scas
sub
dec
sub
mov
adc
xor
ror
xchg
jmp
jl
dec
insb
aas
movsb
cmp
stos
pop
mov
push
push
std
mov
cs
popa
sub
test
inc
or
sub
pop
sub
xor
add
inc
sub
cmpsb
call
insb
lret
jns
shrl
jecxz
jg
out
mov
cmp
into
pop
push
stos
test
push
js
cmp
inc
sub
subl
in
add
and
jg
aas
repnz
xor
mov
lds
xor
jmp
dec
cmp
test
inc
leave
cs
sub
xchg
xor
mov
adc
adc
cwtl
dec
sub
in
imul
fisubs
das
push
repz
mov
jle
mov
mov
ret
and
stc
movsb
outsb
sub
add
movsl
cmp
dec
std
inc
sbb
aad
xchg
xchg
xorl
xor
hlt
out
arpl
xchg
stc
imul
pop
jecxz
mov
sub
push
mov
jno
cwtl
pushf
mov
daa
add
loopne
sbb
pop
sub
jo
dec
pop
mov
jne
xchg
pop
ret
int
in
push
mov
sub
xchg
jne
cmp
add
scas
jb
sub
sub
ds
sbb
mov
call
mov
dec
sub
or
sub
mov
test
test
bound
sbb
adc
pop
roll
sub
and
sub
lock
sbb
lods
iret
and
sbb
mov
push
scas
fldcw
sbb
jg
sub
push
sbb
sbb
jp
jae
push
in
jmp
hlt
sub
adc
dec
out
add
inc
push
std
mov
divl
cltd
into
mov
out
cli
clc
lods
cmp
jne
scas
bound
movsb
mov
cmpsb
cmp
pop
and
test
aad
add
push
pusha
mov
out
mov
pop
xchg
push
sub
loope
test
sub
repz
faddl
fidivl
jns
into
sub
in
rorl
jb
sub
mov
jmp
xchg
mov
data16
mov
int3
repz
add
pushf
lret
inc
lods
fldt
shrl
in
gs
neg
arpl
out
xchg
enter
repnz
pop
out
jnp
jb
add
lods
call
pop
jmp
les
mov
or
ret
push
repnz
jp
lret
cvtpi2ps
lods
pop
mov
rcll
cltd
push
filds
fidivs
mov
sub
mov
inc
lds
sbb
sub
jmp
outsl
daa
sub
dec
push
mov
scas
mov
test
and
push
stc
mov
lods
sti
je
rcrb
ds
idivl
sbb
ljmp
mov
pop
cmp
sub
lods
pop
mov
jl
in
test
mov
xor
popa
lds
adc
sbb
sub
jecxz
loope
subl
lret
test
adc
sbb
push
in
xchg
arpl
and
add
outsb
push
jge
repnz
ljmp
and
adc
ret
xor
lds
enter
adc
and
jle
sub
sbb
push
sub
cmp
lahf
aaa
sbb
xor
dec
or
fildll
cwtl
pop
daa
jmp
cwtl
ret
pop
sub
and
xor
mov
adc
xor
dec
clc
das
or
stc
sub
mov
push
test
repz
cmp
push
or
inc
cld
inc
cmp
sub
insb
pop
adc
adc
cmp
sub
mov
fnstenv
push
sub
cmpsl
mov
aas
shl
mov
cmpsb
mov
pop
add
sbb
inc
cmpsl
lock
pop
popf
sub
stc
ficompl
imul
mov
cmp
xchg
and
inc
mov
pop
push
cmp
std
pop
ds
aaa
imull
push
je
add
shll
pusha
sub
jp
xor
mov
jge
xchg
pop
and
jmp
sub
mov
inc
jmp
pop
cld
sub
add
push
icebp
adc
sub
cltd
mov
push
sub
pop
pop
sub
imulb
xorb
sbbb
imul
dec
xchg
jb
ds
imulb
sbb
sbb
out
dec
xor
test
jmp
jge
cmp
jb
mov
sub
mov
pop
sbb
sub
scas
iret
sub
mov
jg
push
sbb
int3
adc
cli
popa
add
cmpsb
sub
xorb
xor
inc
lds
dec
sub
repz
cmp
sbb
mov
out
sub
sub
mov
or
sub
std
mov
fs
adc
sub
pop
jp
sbb
dec
inc
add
fcompl
xor
sahf
dec
push
stos
lds
negb
lahf
mov
out
pop
js
es
push
mov
leave
xchg
aas
cmp
sub
xchg
mov
or
dec
out
imul
dec
mov
fcompl
push
xchg
mov
pushf
aam
das
sub
sbb
int
push
fcomps
push
dec
pushaw
xchg
out
sub
mov
in
dec
mov
sub
repz
inc
xor
xchg
sub
fsub
mov
sub
nop
lcall
arpl
sub
insl
xor
sahf
xchg
int
sub
mov
lods
in
adc
sub
xor
aas
movsl
cmp
dec
sub
cli
xor
call
scas
lock
mov
mov
jb
dec
scas
movb
enter
imul
ror
dec
stc
pusha
push
mov
inc
lcall
inc
dec
cmpsl
hlt
int
insb
cmpsl
xchg
mov
pop
xor
add
je
mov
icebp
in
inc
push
fldenv
xchg
push
pop
movsl
cmpsb
cmpb
and
and
sub
into
cli
out
mov
jle
sub
test
popf
aam
add
mov
pop
and
negb
sub
jle
push
iret
js
mov
or
jle
push
negl
xor
add
ss
addr16
lock
stos
push
xor
sti
mov
jp
jg
lock
cmpsl
jmp
dec
daa
imul
addr16
or
sub
fs
mov
inc
lock
xchg
jmp
ja
shl
sti
mov
daa
push
fstl
fistl
add
aad
xor
push
cs
loope,pn
cwtl
nop
push
iret
cmpsb
push
out
insb
scas
adc
jnp
mov
push
std
ds
add
subb
cmpb
idiv
iret
pop
scas
push
lea
std
add
inc
jg
jno
lret
aad
popa
push
mov
mov
cmp
imul
or
addr16
push
xor
inc
stc
cmpsl
xchg
sbb
and
push
add
fimuls
popa
sti
pop
cli
movsl
adc
xlat
mov
insl
dec
or
jp
fs
push
ja
mov
and
into
in
mov
cmp
inc
clc
lock
sahf
lock
push
jb
repnz
pop
jae
mov
stos
jmp
mov
sub
sarl
sbb
aas
out
hlt
popf
add
mov
xchg
cmp
push
xchg
mov
mov
test
xor
mov
push
xchg
dec
xlat
adc
cmpsl
daa
xor
mov
sub
int3
test
out
and
pop
or
xor
inc
out
fyl2xp1
aam
push
fisttpll
or
xchg
xor
jo
xor
push
xor
testb
dec
jb
pop
inc
cs
jns
lods
leave
xor
add
das
je
or
push
jmp
fisubs
and
lock
out
sub
xchg
mov
ret
sbb
mov
test
ljmp
out
dec
inc
mov
scas
lcall
sbb
pop
fisttpl
fisttpl
dec
inc
imul
push
popa
push
nop
fnstenv
xlat
stos
and
enter
and
aad
not
cltd
fwait
scas
xchg
popa
xchg
lock
lds
jp
mov
push
jno
push
mov
or
pushf
pop
imul
imul
mov
mov
cmp
dec
pusha
movsb
push
inc
push
cmpsb
shl
xchg
arpl
add
in
lock
adc
and
jmp
imul
icebp
mov
mov
cld
jl
jns
ja
inc
add
call
je
clc
mov
xchg
repz
xor
sub
jl
aas
xchg
mov
aam
stos
cmp
push
loopne
push
pushf
clc
adc
xlat
inc
sub
or
xchg
in
inc
inc
lcall
jnp
xchg
pop
adc
lahf
je
mov
add
mov
push
movsb
xchg
and
aam
xchg
push
xchg
out
jbe
inc
lds
cmpsl
sub
inc
lods
ss
andl
lahf
outsb
pop
add
mov
outsl
mov
mov
ja
data16
sahf
mov
mov
and
movsl
push
push
inc
rorl
lock
in
subl
lods
std
push
movsb
fucomi
inc
outsl
xchg
add
repz
or
adc
in
out
or
or
or
iret
ds
adc
scas
mov
sbb
mov
push
xchg
push
fwait
icebp
clc
and
in
or
std
dec
or
or
pop
jl
pop
shr
xchg
and
out
arpl
pop
pop
mov
push
xchg
add
inc
jge
xor
adc
repz
pop
mov
testl
int3
lock
ss
ljmp
fs
cli
lock
sti
push
js
adc
push
rol
lods
sbb
jnp
nop
data16
jmp
mov
pop
sbb
mov
inc
int
sub
cmc
inc
jp
icebp
sbb
jg
push
jns
xchg
loop
xchg
aaa
jge
and
and
fwait
cmp
or
gs
inc
scas
push
test
push
sahf
aaa
or
xor
rcrb
mov
jb
inc
xor
sub
movsl
jp
jle
push
fisubs
cmp
cmpsb
or
aad
inc
les
add
stos
rclb
clc
mov
lock
pop
addr16
pop
xchg
pop
sbb
xchg
fimull
xchg
dec
xchg
aaa
addr16
repz
lods
stos
cld
cmp
cmp
inc
add
mov
cmc
xlat
jg
and
ret
iret
or
lods
ljmp
inc
bound
jle
mov
adc
ret
sahf
bound
das
lret
and
lock
outsb
in
lods
mov
movsl
in
stos
cmpsl
addb
xor
js
dec
dec
push
and
hlt
sub
xor
cld
pop
outsl
sub
inc
les
fsubl
jge
cmp
add
out
mov
enter
arpl
lods
shlb
sbb
in
rcrb
aas
mov
sub
subl
test
lods
insl
call
sub
test
cltd
pop
inc
int3
dec
in
sbb
in
sbb
sub
dec
inc
lret
push
add
mov
mov
out
rorb
cli
pop
and
jl
add
fcomps
sbb
lea
clc
je
stos
push
sbb
pushf
out
loopne
sub
jmp
fistpll
loop
dec
sbb
lds
pop
into
cli
outsl
js
xor
cmp
mov
lds
div
dec
and
aam
lods
lock
in
dec
push
mov
inc
scas
pushf
dec
xor
sbb
inc
and
xor
popa
negb
ret
cmc
pop
push
fidivrs
out
cwtl
stc
out
xor
push
inc
pop
mov
lock
dec
jo
jecxz
leave
out
sbb
imul
cmp
jmp
fidivl
mov
fs
ret
pop
mov
mov
lock
les
into
xchg
or
pop
or
fwait
and
icebp
ficoms
xchg
pop
jge
and
cmc
cmp
cli
gs
jecxz
push
scas
test
enter
imul
jp
xor
push
aas
cmc
push
aas
in
xor
loop
and
lods
jecxz
loope
push
xlat
xchg
outsb
jmp
jb
mov
mov
cmpsb
xor
insb
int3
jp
in
jae
xor
pushf
into
pop
enter
int
or
movsl
xor
push
jg
loopne
sbb
push
cli
in
xchg
xor
jp
test
loope
mov
adc
cmp
lods
mov
dec
dec
das
lea
insl
jmp
mov
inc
test
sub
and
or
cwtl
cmpsb
test
or
inc
shlb
pop
outsb
jl
roll
in
imul
int3
xor
cld
scas
and
shrl
ss
pop
and
mov
sub
inc
dec
xchg
shlb
push
lock
inc
xchg
pop
rclb
out
jecxz
jge
mov
mov
int3
mov
mov
gs
orl
addl
or
hlt
inc
cmp
scas
aam
inc
test
sub
push
sbb
dec
xchg
sub
jno
jecxz
ja
aad
xchg
scas
fnstenv
sbb
push
fs
insb
out
inc
repz
test
cld
and
loopne,pn
push
adcl
xchg
xor
ret
xchg
dec
jb
xor
cwtl
mov
mov
inc
adc
iret
popa
jo
ds
hlt
fnstcw
adc
test
test
xchg
mov
pop
leave
jae
sub
out
mov
outsl
push
dec
gs
lock
xchg
sti
mov
pop
pusha
adc
push
mov
sub
inc
cmpsl
dec
xlat
adc
push
cmpsb
or
xchg
inc
sbb
test
jmp
mov
dec
jbe
sub
mov
cmp
pop
xchg
scas
dec
cmp
fwait
dec
lret
fucomp
in
lret
imul
jb
in
pop
outsb
clc
outsb
adc
xchg
clc
andl
lds
inc
fidivrl
mov
xchg
stos
fidivrs
add
mov
sub
mov
dec
orl
push
fisubrs
jmp
cld
repnz
pop
pop
push
jg
or
cwtl
sbb
out
adc
out
inc
xchg
add
in
repz
push
mov
gs
push
pop
xor
push
jb
sbb
push
adc
push
movsb
mov
paddd
aad
mov
in
mov
mov
xchg
outsl
or
outsb
mov
sarb
push
inc
push
clc
std
test
fimuls
imul
xchg
mov
xor
add
mov
push
xchg
mov
in
mov
rolb
mov
adc
adc
xchg
lods
call
rorb
push
fidivrl
jmp
shrl
push
out
sub
pop
mov
aad
adc
xor
testl
ss
xor
ss
sbb
ret
popf
lods
xor
mov
movsb
mov
call
scas
mov
cwtl
bound
pop
push
xlat
lret
cmpsl
jmp
call
popf
mov
in
stos
call
mov
hlt
popf
fiaddl
popl
add
adc
loop
jmp
mov
movsl
xchg
scas
mov
sub
adc
xor
stos
sbb
lds
sub
hlt
pusha
pop
sbb
xchg
mov
test
std
dec
in
add
in
or
call
push
inc
jecxz
mov
mov
mov
inc
push
push
jmp
mov
idiv
adc
sub
aam
mov
adc
cltd
ret
mov
cmpsl
iret
insb
stc
inc
imul
stos
push
in
in
jg
movsb
scas
or
insl
das
mov
imull
xor
out
inc
xor
shll
negb
cmp
or
bound
outsb
clc
push
cmp
mov
add
addr16
scas
push
aam
cmpsl
xchg
std
divl
sub
mov
movsl
pop
and
pop
xchg
shrl
cmp
addr16
fisubrs
fiaddl
shl
xchg
push
mov
fisubl
xor
jnp
testb
sbb
stos
clc
sub
sbb
in
inc
scas
fstpt
icebp
cmp
flds
add
sbb
in
lock
sub
mov
sarb
jae
outsl
push
cmp
lret
add
aad
subl
cmp
inc
mov
fs
push
clc
outsb
dec
lret
push
push
in
mov
popa
int3
inc
pop
lcall
sub
sbb
rclb
mov
xor
ud2
xchg
xor
cld
test
or
sbb
addb
outsl
into
xor
jge
lods
lock
inc
lods
sbb
bound
pop
xor
push
add
lods
mov
mov
or
add
inc
pop
add
jno
mov
aas
cmpsl
test
mov
in
ret
lock
xchg
scas
push
sbb
jl
xchg
push
outsl
dec
xor
mov
out
or
divl
xlat
xchg
imul
es
arpl
jno
jmp
or
sbb
cmp
jg
jle
mov
and
sbb
pop
push
test
stos
and
mov
cmpsl
gs
inc
pusha
lds
outsl
loop
fbld
jmp
jb
add
fs
mov
add
test
rol
cmp
jbe
outsl
inc
xor
push
sti
icebp
fstps
rol
jmp
bound
xor
pop
insl
jmp
or
imul
sbb
cmpb
jmp
cmp
sub
test
test
in
sbb
addb
inc
fs
push
jp
mov
aad
xlat
js
fiaddl
sub
jle
xorl
adc
insb
hlt
iret
adc
shlb
sub
jne
xchg
ret
bound
inc
lock
cli
cltd
push
xor
or
imul
mov
mov
adc
xchg
jae
pop
lret
sbb
andb
lret
fimuls
or
movsb
stos
dec
xor
cmp
leave
and
pop
pop
jns
jp
mov
repz
mov
xchg
scas
in
stos
pop
adc
push
xor
mov
and
and
in
loop
test
xchg
insl
jg
jmp
shl
in
mov
jp
fisubl
mov
adc
shll
bound
mov
or
enter
push
inc
das
push
fdivr
cmp
dec
pop
arpl
sbb
push
xor
cwtl
insl
xor
sub
xor
pop
sub
ja
iret
mov
jl
xor
adc
mov
ljmp
in
inc
stos
cmpsl
arpl
mov
xchg
mov
push
xor
or
sub
negb
out
sbb
sub
push
push
negl
adc
xor
add
dec
int3
mov
push
shll
in
iret
outsb
lcall
pop
adc
dec
call
lock
push
jp
mov
dec
cmpsb
dec
movb
adc
clc
in
mov
adc
addb
test
outsb
xchg
jae
insl
insb
ret
imul
dec
cmp
push
pusha
cld
dec
pusha
cli
push
add
cmp
lret
dec
stos
aaa
pop
sub
xchg
scas
loop
repz
std
fldcw
xor
dec
adc
mov
mov
mov
in
pop
or
inc
jp
sub
jp
xchg
dec
dec
xor
adc
xchg
jl
and
adc
mov
std
shl
adcb
stc
iret
std
mov
cld
fnstcw
sbb
xcrypt-ecb
cmpsl
or
xor
sti
pop
push
mov
sub
xchg
dec
insb
push
xor
xchg
shlb
mov
and
out
sub
imul
adc
test
jae
pop
stos
mov
jbe
xchg
cmc
iret
in
mov
pop
and
dec
addr16
scas
or
inc
push
les
ret
mov
adc
or
inc
xor
push
mov
dec
fucomi
out
lock
nop
push
je
pop
popa
adc
loopne
int3
lahf
in
inc
adc
fisttpll
push
pop
jecxz
sahf
outsl
pop
aas
pop
push
xchg
das
repz
mov
nop
and
fwait
pop
addr16
xchg
inc
fwait
jmp
mov
mov
es
dec
push
mov
push
sbb
xlat
lds
xor
add
fwait
inc
out
lcall
addr16
mov
mov
imul
fadds
inc
clc
inc
stos
test
dec
fwait
aaa
inc
jmp
or
jp
scas
fistl
pop
outsl
pusha
pusha
xchg
incl
in
insl
push
test
adc
loopne
mov
jns
cli
cld
push
jmp
and
ja
lods
ljmp
dec
jns
subb
shr
xor
mov
pusha
imul
cmp
fadds
push
loop
sub
jae
push
aad
cmpsl
adc
push
adc
add
dec
xchg
cs
add
enter
push
push
flds
int
mov
inc
ret
lock
stos
sarl
pop
cmpsb
xchg
and
in
imul
int
scas
cli
test
in
pusha
xlat
cld
ret
adc
pop
mov
dec
mov
add
jp
adc
xchg
push
cmp
sbb
cmpsl
or
pop
push
mov
mov
jle
and
jp
in
xchg
sti
in
sbb
cmp
repnz
std
adc
push
mov
xchg
outsl
xchg
lock
cli
xchg
lock
jbe
and
andnps
jle
loope
sub
xchg
adc
lahf
dec
sub
cmp
jo
jmp
cmc
or
icebp
adc
test
or
push
mov
jecxz
pop
xchg
sub
mov
push
push
js
and
jae
add
add
iret
pop
push
out
adc
roll
push
addb
xchg
loope
xlat
cmp
inc
loope
ret
inc
popf
inc
adc
xor
cmp
or
sub
lret
rcr
fsub
lock
roll
xor
les
lcall
jne
jnp
sub
lock
orb
scas
cs
js
and
dec
pop
inc
sub
add
bound
xchg
add
xor
xchg
insb
popa
cltd
cmp
popf
pop
aam
adc
stos
test
jmp
ret
lock
std
adc
test
ss
adc
bound
lods
xor
cli
inc
mov
push
sub
or
jns
adc
test
sub
or
mov
jbe
inc
daa
push
dec
sti
pop
push
dec
in
lock
add
xor
scas
pop
je
not
cmp
inc
push
mov
cmpl
lock
rcll
mov
xor
fbstp
dec
sbb
lock
mov
mov
sub
insb
jo
push
push
out
mov
push
shr
cmp
stc
nop
xchg
imul
ficomps
jmp
aam
push
cmpsl
inc
xchg
neg
rcr
out
lods
jg
gs
pop
ret
in
push
cmp
pop
xchg
into
pop
je
sub
test
add
and
aas
mov
push
lret
movsl
mov
ficoml
xchg
xchg
aad
or
push
pop
mov
mov
add
imul
lea
aad
popa
sbb
outsl
adc
popf
or
pop
adc
hlt
insb
jns
pop
xchg
push
loopne
xchg
adcb
xchg
fnsetpm(287
pop
inc
aam
dec
inc
out
mov
push
jno
imull
xchg
jb
lret
sbb
mov
jne
fst
in
stos
lods
cmp
shrl
mov
les
mov
stc
cld
inc
mov
push
push
test
sub
xor
lds
push
and
aam
dec
xchg
cmp
imulb
dec
test
cmpsb
cmp
push
pop
push
adc
test
cltd
dec
xchg
out
adc
lcall
push
outsb
and
push
in
mov
push
stos
pusha
adc
inc
sub
movsl
cmpsb
or
adc
inc
data16
mov
fmull
out
mov
jno
push
pop
addr16
es
addr16
jge
jecxz
mov
sub
jne
divl
sub
inc
imul
mov
xchg
push
test
xchg
pusha
push
out
sub
xchg
stos
mov
xchg
enter
test
or
mov
sub
dec
mov
movsl
xchg
not
outsl
and
bound
push
and
loope
jne
xchg
pop
mov
int
out
cld
jae
xchg
mov
pop
pop
dec
addr16
lock
test
mov
shr
and
push
int
jmp
pop
aam
jbe
clc
adc
xchg
stos
pop
mov
in
sbb
mov
pop
repnz
ljmp
lret
clc
mov
mov
in
lret
xchg
xor
fdiv
and
fdivrp
pop
sub
aad
ja
push
sub
subl
dec
xor
mov
pop
movsb
mov
adc
inc
pop
xchg
push
out
ret
jmp
mov
insb
nop
sbb
pop
sub
repnz
jb
cld
jl
jp
nop
dec
or
aas
popa
imul
cmpsl
jae
dec
xchg
daa
sub
inc
or
dec
ja
push
jmp
mov
or
add
xchg
xor
push
dec
ret
pop
mov
fsubrs
mov
imul
stos
daa
push
xchg
sub
sub
xchg
scas
lock
orl
push
xor
adc
jb
fxch
xor
push
repnz
jl
pop
popa
inc
loop
or
cmp
and
std
pop
inc
lock
jp
lock
hlt
push
and
out
lock
inc
ss
mov
push
imull
lods
aad
mov
nop
push
add
sahf
push
pop
mov
ret
lock
rcr
bound
movsl
adc
and
loope
push
pusha
lock
dec
xchg
hlt
and
push
or
xchg
ds
and
loop
cmpsb
inc
cmp
in
jb
inc
pushf
adc
orl
hlt
push
sbb
inc
inc
push
inc
sbb
push
std
mov
loope
push
inc
cmp
push
jnp
out
aad
inc
sub
mov
pusha
push
pop
repnz
lods
ss
adc
xor
push
loopne
sub
sbb
xor
lock
jl
jo
xorb
rclb
jmp
jo
adc
outsl
cmp
add
test
pusha
adc
cmp
inc
cmpb
xchg
leave
push
xor
shl
mov
jl
dec
cmp
adc
adc
insl
jg
movsl
iret
sub
jns
add
mov
or
mov
adc
sbb
out
xchg
dec
dec
mov
adc
xchg
mov
inc
mov
aam
jp
data16
mov
or
ret
mov
lahf
lods
sub
lea
add
inc
das
inc
jne
inc
dec
pop
xor
xor
adc
sbb
xchg
jg
sub
std
ret
and
pop
push
mov
or
mov
jns
leave
lock
pop
jb
int3
fbld
xchg
inc
pop
xchg
sbb
call
pop
xchg
popa
or
cltd
mov
sbb
lds
lds
ljmp
and
lods
dec
out
lds
movsb
shll
mov
sub
outsl
mov
mov
mov
in
mov
xchg
xchg
xchg
push
aad
ds
pop
cs
inc
shlb
jmp
xlat
cli
shll
mov
mov
shll
mov
xchg
xor
popf
mulb
dec
shl
dec
loope
es
or
jnp
js
out
sub
cld
ret
idiv
pop
push
sub
es
aad
out
mov
or
adcb
pop
xor
inc
and
sbb
dec
fldt
adc
mov
ss
das
scas
out
imull
xor
mov
roll
xor
push
fwait
movsl
jae
inc
jg
jle
and
inc
bound
xchg
jg
jle
xorb
loope
jbe
mov
dec
outsb
jmp
cmp
fildl
shrb
les
sahf
xor
test
rorl
jmp
aad
fldt
shr
orl
fldcw
ss
in
sub
repnz
xor
stos
sub
das
lcall
xchg
lds
in
scas
cmp
pop
adc
jnp
fs
lods
loope
fisubrl
sbb
sti
imul
cltd
sahf
pop
lods
mov
jge
and
xor
xor
lods
out
out
dec
test
and
xchg
xor
or
loopne
sbb
test
mov
adc
leave
lock
sub
jecxz
adc
pop
sub
mov
jnp
sub
xor
push
inc
xlat
mov
les
xchg
inc
add
cmpsl
lds
inc
lds
arpl
dec
ret
into
mov
ficoml
in
dec
aam
loopne
dec
je
fnstenv
push
push
adc
jnp
sahf
lret
and
mov
jns
imul
lods
push
out
in
mov
ljmp
repnz
fiaddl
out
cmpsl
lock
jp
insb
je
leave
push
imul
pop
jp
rcrl
nop
subb
imul
stos
popa
push
xor
fisttpll
xchg
or
xchg
in
cmp
fbld
je
insb
sbb
jmp
out
dec
dec
or
xchg
add
xor
or
sahf
aam
mov
push
xchg
int
ds
je
rcrb
xor
ret
mov
daa
lods
pop
ss
imul
cmpsl
push
push
push
sbbb
push
adc
jg
sub
push
aad
adc
inc
pop
in
push
aad
mov
push
cmpsb
mov
enter
dec
xor
lock
rcll
push
sbb
and
aas
lods
or
ljmp
addr16
arpl
movsl
inc
mov
xchg
arpl
pop
mov
xchg
aad
aas
dec
in
daa
stos
ljmp
add
ds
pusha
fistpll
ds
es
pop
xlat
test
dec
lea
push
xchg
punpckhwd
push
lods
idivb
stc
rorb
sbb
add
into
xchg
or
ljmp
mov
adc
xlat
mov
dec
jp
ret
addr16
fwait
push
add
dec
xor
jo
je
scas
xor
in
shlb
movsl
outsb
and
sub
add
sub
sub
xor
jmp
jo
jne
cmp
bound
inc
mov
mov
fnsave
stos
mov
mov
movsl
jnp
je
fdivrs
jmp
out
dec
xchg
or
cs
or
pop
jnp
es
sbb
pop
adc
mov
jbe
sarb
xchg
add
push
dec
xor
leave
fidivs
fstpt
std
adc
xor
imul
cmc
aad
cmpsb
push
jmp
and
mov
adc
mov
mov
adc
shll
push
mov
icebp
dec
mov
sub
xchg
cmp
dec
lock
mov
xchg
jns
dec
ss
add
sti
push
and
insl
mov
repnz
movsb
cmc
jmp
nop
sbb
popa
sarl
cli
push
dec
inc
notb
imul
inc
hlt
pop
and
dec
es
push
dec
pop
sbb
mov
dec
and
movsb
js
sub
lret
aaa
add
sub
clc
cmpl
incb
and
lock
lret
enter
cltd
inc
xor
push
xor
add
outsl
pop
arpl
sub
sub
xor
mov
pop
pop
jp
aas
sub
jns
out
inc
dec
inc
lret
cmpsl
inc
ds
inc
xlat
pop
hlt
push
push
ss
lret
dec
andb
inc
push
cmp
pop
mov
mov
andb
xor
pusha
push
cmp
and
mov
lods
lods
xor
push
fsubrs
push
testb
push
enter
add
sti
loope
or
pop
sbb
push
test
cld
lods
xchg
fwait
adc
or
inc
jae
fidivrs
dec
arpl
xchg
shrl
mov
fisubs
adc
pop
mov
xor
imul
add
clc
sub
xchg
pop
cmpsl
dec
inc
repz
cmp
lret
push
insl
or
popf
insb
jmp
imul
mov
movsb
or
dec
ja
jge
in
pop
dec
leave
leave
mov
stos
lods
push
cmpsb
or
fstpt
or
into
les
and
dec
cmpsl
cs
jge
push
xchg
jns
and
dec
and
jo
outsl
mov
pop
or
or
pop
dec
pop
cli
mov
push
mov
push
fs
orl
cmp
mov
xchg
lock
adc
movsb
inc
jle
or
shl
jmp
xor
push
xor
and
or
and
fldl
movsb
sub
pushf
sti
aaa
push
pop
leave
add
test
xor
shrb
es
mov
stos
call
punpckldq
adc
aad
pop
outsl
rclb
cmp
push
mov
pop
addb
mov
mov
dec
int3
movsb
gs
jg
addr16
or
jbe
std
sbb
aad
mov
xor
mov
push
bound
int3
push
mov
push
mov
lods
xchg
sbb
out
mov
inc
lcall
xor
fsubrp
mov
cld
insb
lret
andb
leave
sbb
test
aad
into
hlt
fldcw
test
dec
lock
in
sahf
insl
repz
inc
xchg
push
add
pop
pop
jl
xchg
xor
xchg
mov
mov
inc
imull
sahf
jge
and
ljmp
vpshlb
cmpsl
mov
pop
addr16
insb
imul
lock
inc
xchg
sub
mov
and
in
in
xor
mov
jae
lods
sub
out
fsubs
inc
repnz
lahf
pop
in
pop
stc
out
xchg
lgs
andl
or
lock
mov
in
cmpsb
cltd
pop
jl
test
inc
fs
push
sub
aad
mov
pop
push
jne
loop
loopne
xchg
cld
mov
mov
test
movsl
xor
mov
cmc
movsl
leave
adc
in
fildll
jb
loopne
mov
pop
and
add
jmp
mov
mov
mov
imul
xchg
jno
inc
bound
bound
add
lds
loope
pop
push
stc
jno
bound
push
or
pop
xor
dec
repz
pop
call
push
pop
enter
mov
push
inc
sbb
mov
push
push
dec
fdivr
push
jne
mov
andb
fwait
inc
mov
data16
jge
push
sub
stos
mov
sbb
sbb
jmp
pop
lret
into
adc
xor
lock
xor
jne
cmc
stos
pop
bound
xchg
inc
lods
lcall
addr16
sahf
jle
icebp
in
mov
popa
imul
dec
jb
lret
dec
push
xor
scas
mov
pop
push
addr16
push
push
inc
nop
leave
std
test
sbb
or
cmp
mov
push
into
test
xor
and
in
insb
sub
mov
xchg
sti
dec
loop
imul
outsl
movsl
xchg
mov
jbe
push
scas
les
mov
ljmp
test
mov
and
lods
cmpsb
lds
test
lcall
bound
test
xchg
mov
mov
mov
push
push
fbstp
add
and
in
or
sbb
loopne
pop
jle
pop
push
test
pop
or
cltd
out
push
lock
cmpsb
add
fs
adc
mov
jmp
xchg
in
lret
jmp
addl
mov
mov
push
push
mov
and
push
shlb
add
jge
xchg
push
mov
lock
push
jnp
jg
lods
gs
adc
sbb
inc
or
jmp
test
in
sub
mov
inc
push
mov
in
mov
or
xor
loop
cmc
xor
cld
aam
cmp
shl
mov
jp
lret
das
fs
iret
int
cmp
push
push
xchg
or
test
adc
xchg
adc
jecxz
test
mov
dec
fldt
adc
xchg
or
movsl
rcrl
jl
push
test
add
dec
mov
and
jp
xor
cld
aam
jno
mov
mov
jbe
inc
in
push
xor
mov
jno
clc
dec
subb
xchg
adc
or
xor
lds
mov
sub
pop
decl
pop
xor
jae
call
fs
dec
jb
adc
sbb
mov
ret
outsb
scas
pop
mov
scas
lahf
test
mov
add
pop
add
add
cmp
or
pop
inc
xor
jecxz
in
sbb
mov
jo
pop
loopne
mov
mov
dec
shlb
repz
test
subb
mov
dec
adcb
repnz
mov
fistpl
lds
mov
push
pop
xor
push
sbb
in
sub
xchg
mov
cli
es
mov
adc
test
aad
out
mov
cs
xchg
js
cli
lret
mov
sahf
insl
mov
mov
mov
lret
and
test
lock
xlat
das
sub
push
es
mov
fstp
dec
push
iret
mov
pop
adc
scas
fdivl
stc
cmp
sub
push
aad
lods
push
dec
and
movsl
add
xchg
pop
adc
sub
push
lods
sti
das
aaa
test
xchg
mov
hlt
dec
dec
in
inc
cli
sub
push
xor
lods
stc
cmp
test
sub
in
shll
in
dec
sub
add
jno
xchg
inc
xlat
xor
sarl
dec
cmp
enter
pop
mov
adc
jnp
test
loop
in
adcb
push
test
daa
data16
xchg
cmpsb
aad
and
sub
mov
jne
jp
in
aaa
xor
sahf
inc
or
pop
sbb
inc
jne
lret
push
clc
xchg
inc
or
push
or
fdivl
ret
test
lock
push
into
mov
pop
lods
shr
push
rclb
adc
add
scas
jle
push
ret
cmp
dec
push
mov
roll
xor
movsb
lock
xor
loope
inc
xor
int3
adc
nop
push
dec
in
add
inc
mov
insl
idiv
cld
adc
into
in
fsubr
pop
push
in
daa
pop
mov
pop
pop
push
stos
test
cmc
call
shll
out
sbb
sbb
cmp
push
outsb
lods
adc
lods
imul
inc
gs
mov
subb
gs
cld
xor
aad
jo
add
jp
cmp
inc
or
mov
add
bound
jecxz
or
sti
xchg
mov
xor
sbb
dec
cwtl
sbb
insb
test
inc
dec
ret
js
mov
scas
push
pop
hlt
lret
fidivrl
lds
xor
add
imul
mov
jbe
stos
and
dec
mov
inc
ljmp
lock
and
or
push
and
mov
out
sub
in
pop
inc
sub
lock
cmpsl
cmp
pop
adc
pop
imul
cmp
insb
mov
mov
push
mov
adc
out
jle
aad
adc
adc
xlat
repz
insb
add
push
leave
mov
imulb
sbb
mov
int3
push
fcomps
mov
add
pop
out
adc
fs
inc
push
or
test
dec
sub
aas
scas
mov
in
dec
xchg
dec
sub
add
fucomp
and
test
sub
jo
xchg
mov
cltd
out
jno
andb
mov
pushl
add
add
push
xchg
lods
testb
jns
aas
ret
xchg
dec
stos
int3
mov
mov
or
mov
jae
lock
aad
incb
test
mov
dec
imul
mov
dec
lock
test
arpl
imul
and
dec
test
sahf
mov
lock
nop
adc
jo
scas
bound
cmp
xchg
cltd
mov
inc
shrb
sub
cmp
xor
fsubrs
jnp
push
add
imul
sub
dec
das
jp
icebp
movsb
inc
mov
push
stos
cmp
lock
adc
push
xchg
cmp
jne
daa
sbb
aad
xor
jmp
pop
bound
pusha
lock
cmp
inc
cmp
bound
adc
inc
xor
push
sub
pop
insl
add
push
test
rcll
fnsave
lock
adc
mov
nop
outsl
std
or
mov
jnp
xor
push
xchg
xchg
es
and
test
lds
jmp
and
sub
insb
movsb
enter
test
dec
cmp
mov
ja
mov
std
stos
add
add
nop
pop
sahf
xor
add
jns
or
mov
xchg
add
dec
push
mov
cmp
cltd
lahf
add
inc
fdivrl
push
fistps
jae
in
adc
mov
add
out
push
fldt
adc
push
inc
push
jmp
lock
pop
add
push
lret
and
cmpsl
dec
xor
rclb
pop
fsubr
lret
jp
lock
pop
rorb
mov
pop
mov
arpl
data16
cli
push
rcl
fstpt
mov
pop
sub
bound
stos
inc
insb
cli
sbb
inc
scas
mov
and
push
pop
inc
stos
mov
pop
jnp
test
icebp
cmp
push
push
sub
and
push
inc
sub
orl
xor
pop
xor
cmp
fs
leave
sahf
insl
push
adc
sbb
mov
xchg
add
cmpb
dec
xor
inc
pop
sarl
sub
sbb
and
mov
push
push
push
stos
xchg
push
sbb
inc
inc
push
cmp
jae
imul
adc
or
in
imul
xchg
imul
add
mov
jge
in
vphaddbq
jo
cmpsb
or
and
outsb
aaa
sbb
lock
test
rcr
pusha
push
mov
ret
out
cmp
xchg
push
xchg
push
mov
and
adc
or
testl
lock
pop
add
xchg
std
notb
in
sub
ja
push
out
jne
lds
popl
test
jnp
out
imul
sub
push
rorl
or
rol
xchg
pop
scas
shlb
addr16
ret
xchg
xchg
xor
pop
stc
dec
xor
inc
sbb
lods
push
out
lock
imul
lahf
mov
mov
lock
pop
outsl
add
xchg
lret
add
inc
outsl
cli
xor
es
iret
sbb
ljmp
or
or
push
push
mov
mov
sub
mov
adc
and
sub
inc
mov
lock
push
into
movsb
inc
fcmovne
movsb
push
stos
data16
test
imul
lret
push
push
push
adc
aad
int3
cmpsl
lock
cmp
sub
pop
or
insl
fidivs
insb
pop
ss
jl
lods
or
stos
adc
xor
push
mov
jnp
mov
loopne
push
or
pop
mov
roll
mov
in
imul
sbb
aas
push
test
pop
sahf
sbb
lock
jnp
cmp
clc
pop
sbb
sbb
xchg
cmc
cmp
pop
push
mov
call
ret
out
lock
int
out
pop
sbb
mov
sub
outsb
and
add
hlt
int3
and
cmpsb
adc
xchg
orl
subb
data16
in
jnp
repnz
add
stc
jne
and
and
test
call
sub
jmp
movb
fstl
test
stos
addr16
lea
xor
rcrb
das
jmp
mov
bound
inc
jnp
fistps
sahf
push
aaa
inc
into
out
xlat
inc
mov
enter
repnz
clc
test
frstor
push
cs
xor
in
in
or
sti
les
cmp
test
dec
cmp
sbb
xchg
gs
dec
pusha
push
sbb
or
cmpsl
mov
nop
sti
xor
je
or
adc
iret
xor
notl
pusha
push
fdivrl
dec
adc
pop
add
pop
movsb
repz
dec
mov
ljmp
mov
movsl
xor
jno
cmp
sbb
lret
in
outsb
test
sbb
push
jp
xchg
pop
jp
add
pop
dec
mov
mov
je
clc
or
xor
fwait
jnp
dec
pop
sub
std
and
mov
dec
push
jg
inc
mov
mov
fsubs
adc
mov
dec
out
mov
mov
aas
and
fdivs
adc
lock
ret
cltd
dec
push
inc
in
mov
lock
sbb
out
or
in
mov
ret
dec
cmp
popl
out
mov
cmp
adc
push
inc
jo
cmp
fsub
and
int3
pop
loopne
push
and
push
xchg
jae
cmp
sbb
popa
fmull
pop
pop
sbb
jle
shl
push
sbb
xchg
xlat
iret
shlb
clc
mov
jp
lea
cli
xor
or
lcall
push
and
loope
cmp
arpl
cmp
test
lock
push
imul
js
inc
aam
adc
ljmp
leave
xor
lret
mov
out
imul
mov
adc
add
ljmp
stos
or
jno
in
rcrl
shlb
mov
pop
xchg
cli
jg
dec
aam
mov
pop
inc
movsb
and
lahf
mov
pop
icebp
add
xor
push
jmp
lret
push
jge,pn
pop
cmc
cmpsl
inc
lea
pop
sub
jecxz
or
dec
mov
lahf
cli
das
imul
out
inc
mov
sub
and
fwait
movsl
sbb
cli
in
xchg
cmp
aas
push
in
jge
or
inc
ss
push
push
push
sub
mov
bound
int3
jecxz
lock
adc
in
es
push
fildll
es
push
inc
or
jns
outsb
rol
ja
ja
cwtl
insl
js
insl
test
lock
leave
cs
xchg
jb
in
sub
lea
mov
push
outsb
sub
out
clc
and
int3
push
sbb
iret
inc
insb
sbb
dec
outsb
mov
sbb
fidivs
fucomp
out
xchg
sub
jne
or
mull
adc
lock
jg
popf
lds
leave
xor
push
xor
push
fnstsw
sbb
mov
rcl
pushl
test
and
cltd
jns
cld
das
jmp
add
test
inc
rclb
jb
and
loope
test
push
rcrl
mov
mov
and
das
jnp
and
movsb
in
mov
pop
repnz
fwait
xor
dec
inc
sbb
orb
pop
cmpsb
add
ss
fidivl
gs
dec
mov
fiadds
roll
mov
movsl
push
xchg
pop
cmpsl
hlt
jno
push
insb
outsw
lock
into
popa
inc
add
xor
jb
mov
inc
test
in
fs
inc
pop
pop
out
ret
sub
and
je
in
pop
mov
push
mov
jp
clc
pusha
aam
mov
dec
sub
pop
add
mov
rorb
inc
mov
mov
jl
ret
pop
sbb
rolb
pop
xor
imull
jge
pop
push
cmpsl
xchg
xor
inc
gs
push
jnp
cmp
lock
push
pushf
push
andb
xchg
in
pop
test
into
cmpsl
cmp
insb
insb
pop
xchg
aad
adc
lret
sub
mov
mov
inc
test
sbb
fcoml
in
pop
in
subl
cltd
mov
rorl
outsl
movsb
into
fabs
push
lock
jae
cltd
insb
and
rcll
cmp
xlat
lds
cwtl
pop
xchg
jp
bound
enter
xor
lock
cmp
test
push
and
lahf
mov
and
movsl
shll
pop
push
mov
out
enter
jl
je
in
fadds
filds
mov
push
lock
adc
adc
imul
cli
mov
pusha
sbb
xlat
mov
pusha
adc
stc
and
mov
lret
sub
into
std
cmp
sub
push
jp
add
mov
sarb
jmp
sbb
jg
inc
jecxz
and
and
sbb
push
jnp
dec
dec
int
aaa
iret
lock
sahf
push
sub
push
pop
into
daa
sub
imul
inc
insl
outsb
mov
out
jge
sub
sbb
in
stos
aam
insl
xchg
or
ja
xor
pop
test
dec
stos
ret
popf
lahf
scas
pop
xor
rclb
mov
shl
in
mov
or
jo
sub
sub
daa
push
xor
clc
mov
and
lock
int
in
xchg
inc
xor
loopne
mov
adc
lock
mov
stc
inc
add
shl
movsb
ljmp
ljmp
sarl
test
cmp
push
inc
push
sbb
xchg
cmpsl
lock
aas
dec
or
fs
dec
sbb
mov
fisttpl
push
loop
jg
xchg
lock
pop
out
jne
es
das
adc
add
fadds
repnz
dec
add
outsl
jo
jg
lods
pop
aad
sub
sbb
xchg
push
dec
xlat
adc
adc
nop
adc
sub
in
xor
and
push
jnp
les
jmp
mov
movsl
ja
push
fbstp
and
sbb
push
mov
mov
add
imul
stos
mov
mov
pop
mov
sub
xchg
push
add
out
sbb
fwait
or
inc
dec
xchg
out
movsl
sti
das
mov
cmp
lock
insb
and
fidivl
pop
bound
loop
xchg
inc
and
sbb
mov
adc
and
cmc
rcr
or
lcall
scas
xor
pusha
cmp
lock
or
je
xor
repz
push
cltd
xor
sub
push
in
jnp
mov
jl
push
xchg
hlt
mov
adcb
andb
lahf
push
imul
mov
arpl
inc
mov
mov
and
fldt
ret
jnp
clc
inc
cmp
and
inc
fsts
rcr
es
out
push
xor
xchg
test
push
dec
sbb
mov
aas
int
int3
or
outsb
fidivrl
sub
push
cmp
shll
sub
or
xchg
fs
pushf
push
mov
out
pop
jl
or
cmc
aas
mov
adc
movl
inc
push
xchg
cmp
rolb
mov
in
sbb
pop
mov
inc
enter
fldl2t
xorl
test
dec
decl
jb
loope
jle
js
inc
mov
repnz
lret
cmp
bound
xor
pop
inc
mov
xlat
sub
adc
add
jns
lock
icebp
jg
je
das
xchg
cmp
jle
xor
xchg
pushf
push
lods
push
cmpsl
mov
leave
hlt
lock
cmp
icebp
loopw
lods
mov
fcoml
push
cld
test
push
mov
cmp
jo
inc
cmc
rcrb
mov
mov
insl
cmp
out
rolb
gs
data16
xor
stos
jle
stos
sub
mov
jg
std
jp
sar
cmc
addb
fdivrp
sub
xor
adc
imul
xor
loope
mov
nop
xchg
inc
xor
fidivs
out
test
mov
aaa
and
mul
in
jnp
adc
cli
jne
xor
xlat
ficoml
aas
sbb
in
decl
pop
adc
sub
insb
dec
lret
aad
outsl
sub
pop
int3
pusha
mov
call
mov
outsl
dec
sbb
addr16
jo
sbb
sahf
jae
lds
push
add
jge
ficomps
repz
pop
cmpb
mov
loope
mov
shlb
xchg
sahf
clc
adc
mov
stos
sub
out
lea
mov
push
or
ljmp
inc
pushf
jb
dec
jg
andl
ljmp
ja
xor
or
lock
or
pushf
xchg
scas
movsl
or
movsb
rcl
mov
inc
sub
mul
mov
inc
mov
sub
or
and
out
and
subl
lahf
cltd
jle
ljmp
push
adc
stos
mov
sbb
sbb
sub
icebp
adc
mov
mov
add
sub
orl
icebp
sub
cmp
cmp
pop
sub
aaa
ficoms
inc
test
xchg
test
outsl
es
dec
xchg
cmp
cmpsb
mov
in
rolb
cmpsl
test
push
push
test
cmpb
sbb
sub
xor
xchg
stc
testb
xchg
jecxz
push
jge
sub
lods
mov
loopne
jmp
add
pop
ljmp
test
add
testl
lock
push
rcrb
and
cli
pop
pushf
push
mov
push
sub
inc
out
test
pusha
insl
mov
sub
imul
cmc
jmp
pop
mov
dec
sub
outsl
stc
popf
ret
fildl
sub
outsb
out
mov
sub
cmpsl
test
or
and
out
mov
das
bound
arpl
mov
push
xchg
pop
js
sub
addb
mov
add
jmp
mov
arpl
jl
sub
mov
mov
pushf
add
je
push
or
or
test
jno
bnd
das
repnz
mov
je
stc
test
push
nop
repnz
test
sub
sub
stc
scas
push
sub
inc
sub
push
inc
mov
xchg
adc
sbb
sub
call
jmp
sub
mov
mov
push
lahf
cmpsl
test
cmpsb
push
jmp
cli
dec
insl
in
mov
jo
jb
mov
pop
mov
dec
int3
test
pushf
das
xchg
cmpsb
inc
cli
adc
mov
push
lcall
sub
push
jmp
xchg
jbe
movsl
imul
sbb
movsb
outsb
cmp
lods
dec
adc
or
pop
xchg
sbb
lock
aaa
add
jne
mov
mov
mov
arpl
loopne
mov
jg
or
cltd
fstl
out
daa
arpl
pop
cli
mov
repz
pop
call
mov
and
ljmp
xchg
iret
dec
shll
inc
sbb
pop
dec
test
inc
fisubrl
lret
inc
ud2
flds
pop
into
mov
mov
repz
stos
mov
test
movsb
out
rsm
ljmp
sbb
adc
loopne
outsb
stos
sub
stc
sub
sub
das
xchg
insl
push
stos
xor
sub
dec
in
and
scas
test
insb
or
sbb
mov
rcrl
mov
mov
jmp
sub
in
pop
jo
mov
ljmp
ret
ja
cmp
iret
mov
cmpsl
mov
and
and
push
test
adc
sub
push
sti
and
xchg
sub
test
push
pushf
mov
out
xchg
pop
mov
mov
jno
int
sbb
fwait
out
dec
and
in
push
mov
cmp
mov
sbb
insb
jo,pt
je
xlat
sahf
and
xchg
push
stc
shrb
dec
clc
pop
pop
add
xchg
xor
xchg
cmpsb
mov
or
shl
ss
add
sbb
mov
sbb
mov
sub
sub
rcl
sub
test
jbe
mov
es
sub
outsl
adc
sub
lods
adc
into
pop
jp
sbb
sbb
xor
int
shlb
jle
cmpsl
insl
pop
or
sbb
lret
pop
in
jmp
jl
pop
dec
lret
subl
idivl
jnp
jmp
hlt
mov
and
add
sub
add
or
mov
add
add
dec
push
dec
pop
xor
inc
jae
dec
loop
es
dec
decb
outsb
out
xor
jne
sbb
in
mov
fstl
sahf
fistpll
add
pop
and
sub
mov
ljmp
jnp
sub
sub
push
dec
sbb
popa
jecxz
sub
jbe
loopne
paddd
xchg
bound
mov
jg
push
xchg
jge
sub
arpl
jns
sbb
fwait
inc
call
sub
stc
jbe
or
sub
mov
out
sub
fimull
test
divl
xor
or
inc
lock
fdivs
sbb
inc
push
jns
imul
and
cwtl
fstpl
and
cmp
mov
out
outsb
sub
std
out
jnp
add
adc
xorb
sbb
sub
fisttpll
push
call
add
or
xor
push
add
rclb
dec
xor
xor
jae
mov
rcrb
xchg
cmp
fs
jne
push
and
xlat
jmp
or
push
aad
movsl
jmp
clc
jmp
pop
int3
test
ss
and
inc
dec
xor
nop
sahf
out
mov
and
push
frndint
push
data16
xchg
arpl
push
fs
push
xchg
dec
cmc
insl
dec
inc
adc
subb
adc
pop
lret
test
mov
daa
pop
xor
xchg
test
adc
pop
sub
mov
in
lods
mov
cmp
stos
inc
add
cmp
shll
xchg
mov
testb
call
pusha
aad
aaa
mov
mov
scas
fnstcw
and
cli
and
les
nop
pusha
mov
push
xchg
pusha
cmpsl
shlb
dec
push
leave
push
xchg
aam
xor
repz
lods
mov
and
aad
jne
or
adc
pop
aam
cltd
pop
sub
push
fimuls
push
fwait
push
shlb
fbstp
cltd
mov
ret
or
dec
pop
into
add
push
xlat
mov
in
push
add
out
outsb
test
adc
lock
mov
jmp
stos
scas
pop
sub
adc
fsubrs
ljmp
sbb
fiaddl
pop
inc
bound
mov
loop
cwtl
scas
xor
xor
ficoms
cmpsl
jne
shr
add
mov
xchg
push
mov
mov
xchg
sar
or
push
test
out
negl
xchg
push
lods
stos
and
push
movsb
lcall
inc
add
rorb
outsl
inc
sub
insl
into
cmp
dec
dec
mov
pop
sbb
add
jnp
sbb
stos
mov
xor
lock
test
inc
cmpsl
xchg
mov
pop
je
push
mov
in
in
pushf
mov
test
arpl
jmp
cmp
push
pushf
add
bound
jmp
lea
arpl
and
cmpsb
or
sbb
int3
lods
je
mov
xchg
jg
dec
or
leave
or
xchg
cltd
out
sub
xchg
pop
inc
push
daa
test
inc
jnp
pop
andb
icebp
jg
lods
mov
lods
pop
mov
sti
push
scas
fdivs
inc
inc
jg
je
sub
enter
inc
cmp
out
sbb
dec
jp
mov
jne
xchg
adc
pop
fidivl
fists
and
cs
dec
sahf
cmc
lea
pop
sti
jmp
xchg
testb
cmp
lock
xor
pop
xchg
cmp
and
pop
lds
cmpsb
mov
mov
and
cld
test
imul
push
test
in
jecxz
mov
push
ficompl
std
out
xchg
inc
icebp
jo
inc
fs
xchg
notl
xchg
leave
mov
lock
jl
jno
pop
jge
loop
jne
push
movsl
lds
sub
add
rorb
orb
decl
cli
stos
sbb
notb
lock
lods
xchg
bound
popa
jg
loop
testl
loopne
aam
inc
or
rcl
mov
or
sbbl
data16
sub
sti
pushf
fisttpl
or
mov
popa
lock
xchg
xchg
pop
jb
test
adc
movsl
pushf
test
decb
fwait
xor
leave
dec
sbb
mov
cmp
or
sbb
jl
jns
xor
sti
cs
shrb
and
cmpsl
or
stos
subl
lret
mov
push
sbb
loope
dec
lahf
popa
sbb
sub
push
subb
shll
orl
adc
lret
lret
mov
xchg
push
cwtl
pop
pop
xor
pop
std
popfw
pusha
cmpb
adc
je
and
rolb
sbb
xchg
fisubrs
cltd
lret
shrl
cmc
add
ficoms
sti
je
adc
xor
roll
push
test
mov
aad
push
dec
daa
cmp
sbb
dec
inc
or
jle
stos
ja
sahf
push
cmc
inc
jnp
mov
lcall
mov
push
xchg
pop
test
in
test
stc
ljmp
mov
movsb
iret
mov
lods
dec
pop
jo
mov
dec
pop
mov
push
outsb
mov
sbb
inc
imul
xchg
lea
jmp
pop
sub
arpl
jmp
pop
mov
movsb
lock
out
lahf
stos
sub
pop
aad
inc
in
andl
jge
or
movsb
fdivp
xchg
in
call
in
aas
adcl
inc
imul
sar
adc
mov
lock
insb
call
mov
push
push
mov
pusha
stos
aas
adc
lcall
lock
les
fisubrs
pop
jp
dec
add
rclb
lods
and
lahf
mov
and
enter
das
scas
xor
into
nop
rcl
xor
nop
filds
adc
sbb
sbb
repz
inc
mov
fucom
adc
out
push
in
pop
xor
pop
lahf
in
jecxz
stos
jmp
stos
sbb
sbb
fldl
clc
pop
aam
test
push
xor
das
outsl
cmp
lods
sbb
dec
pop
sub
cmpsb
mov
test
mov
cmp
int3
test
les
call
pop
jl
cltd
pop
add
sbb
scas
mov
inc
je
mov
or
leave
mov
mov
bound
dec
pop
dec
and
imul
sub
xor
push
lret
push
push
cmpsb
pop
mov
sahf
call
jge
xchg
divb
push
cmpb
arpl
out
jne
mov
repnz
paddw
or
inc
shrl
icebp
sbbb
jno
mov
pop
rorl
outsl
mov
nop
or
in
sub
adc
mov
cmp
loopne
outsl
out
cmp
dec
pushf
xor
mov
mov
inc
push
cld
mov
movsb
movsb
out
out
pop
sub
add
xchg
sbbl
inc
stos
arpl
add
inc
clc
push
cmp
push
scas
add
out
cmp
lock
or
add
pushf
popa
or
mov
mov
fcmovnbe
daa
clc
out
in
adc
insb
dec
lret
in
add
test
inc
mov
idivb
or
fdivrs
sub
pop
cltd
dec
pop
pop
lods
push
or
push
push
mov
aad
xchg
and
jp
cld
inc
ds
shlb
add
mov
bound
lret
imul
and
sbb
jg
add
xor
pop
jg
movsb
mov
sbb
loop
and
std
out
inc
xchg
push
outsb
cld
js
sub
xchg
lds
cld
imul
cmp
push
outsl
xchg
jb
push
or
aam
inc
popl
push
sahf
lods
push
ficoms
and
or
enter
add
pushf
cld
cmp
push
test
xor
sbb
lahf
or
fisttps
and
mov
push
or
fsubrl
cs
push
xchg
outsb
movsl
sbb
stc
in
add
or
sub
push
pusha
xor
shrb
jne
mov
stos
cmp
fidivs
jmp
mov
mov
testl
sbb
inc
lock
push
outsl
mov
inc
and
adcb
mov
and
sub
xor
xchg
cmp
and
pop
cmp
adc
ret
cmp
push
push
adc
lock
inc
cltd
sub
pop
adc
in
mov
cmp
js
pop
mov
mov
call
push
outsb
cmp
push
sub
xchg
aaa
xchg
mov
jb
movsl
es
shll
mov
aas
push
dec
xchg
push
fisubrl
or
cwtl
mov
jo
pop
dec
icebp
cmp
mov
add
loopne
pop
lahf
add
add
lock
and
hlt
arpl
mov
sahf
mov
cltd
idiv
sub
sub
adc
movsb
xchg
xor
push
sub
leave
push
lock
jmp
push
adc
dec
shll
xchg
das
cmpl
add
mov
loope
xor
inc
mov
sbb
push
imul
arpl
fsts
data16
or
lret
add
inc
sti
or
inc
or
xor
leave
shll
xchg
imul
and
pop
xchg
pop
or
pop
shlb
xor
mov
lods
fs
inc
fisubrl
jbe
xchg
adc
sub
imul
add
add
adc
add
pop
sbb
sbb
cmp
loope
push
push
lock
xor
jg
mov
xor
incb
lret
mov
and
fcmovnu
cmp
test
xor
push
push
pop
sbb
cmp
push
mov
dec
cmp
adc
std
sub
mov
jle
jle
lods
add
inc
cmp
cmp
out
push
mov
int
in
inc
jp
outsl
mov
outsl
lock
dec
sti
fdivrs
xlat
out
mov
jg
mov
push
cmpsb
sahf
dec
lret
test
cmp
loope
pushf
push
push
mov
imul
pusha
push
sbb
xor
mov
popa
std
jns
aaa
push
fidivrs
scas
cmp
xor
enter
clc
stos
push
xor
ja
fdiv
xlat
and
xor
insb
std
xlat
rorb
in
notb
movsl
fucomi
push
cmp
rorl
dec
pop
jge
push
adc
clc
adc
es
add
dec
inc
data16
cmp
inc
lods
je
mov
stos
insb
lods
in
add
mov
ret
cmpsl
les
cmp
aaa
and
push
mov
or
pop
or
pop
xchg
fadds
pop
dec
fsubs
roll
in
sbb
aam
out
xchg
test
push
js
cmpl
mov
cmp
pop
adc
mov
jp
push
mov
inc
pop
push
cmpsl
je
mov
clc
cmp
xor
jae
icebp
jns
pop
xor
lods
outsl
jnp
xor
cli
pop
int
aam
ret
lock
repz
sbb
or
mov
int3
lret
test
imul
lahf
shlb
les
clc
pop
mov
test
jle
push
or
std
sbb
xor
aas
insl
aad
out
mov
imul
inc
int
loopne
push
ret
cmp
ss
cmp
push
sbb
sbb
lea
daa
adc
or
cmc
add
in
mov
test
insb
xor
xchg
sub
inc
cmpsl
rcrl
mov
rcll
jnp
mov
jmp
popa
inc
scas
repnz
lret
or
mov
jp
xchg
imul
int3
xor
addr16
repz
ds
inc
sub
pop
and
ds
test
inc
mov
inc
adc
cs
adc
push
push
lock
in
cmp
sub
pop
xchg
repz
xor
mov
aam
bound
xor
add
mov
cmp
xchg
stos
or
cmp
sahf
inc
lods
add
mov
xor
add
lock
inc
or
add
pop
cmpsb
push
jbe
pop
popf
add
je
mov
push
jg
outsb
xchg
insl
ss
jge
movsl
pop
std
outsl
jno
cmpsl
sub
lahf
xor
mov
push
or
and
push
aam
pop
mov
lahf
pushw
dec
push
int3
in
xor
cmpsb
pop
push
bound
xor
movsb
jb
dec
push
out
lret
sub
jnp
jmp
ljmp
imul
inc
xor
sbb
cmp
cmp
mov
jge
mov
mov
js
sub
insb
pop
push
or
add
cmpsb
sub
pusha
inc
ds
stos
fsubrs
leave
cmp
sub
leave
push
cmp
aam
fldenv
repz
push
sub
push
cmpsl
orb
ds
jo
add
lret
push
fldt
clc
aad
imul
incb
xchg
or
rcll
call
xchg
mov
push
inc
int3
sarb
add
daa
mov
or
inc
xchg
dec
inc
adc
xchg
lock
in
fsubrp
xor
sbb
dec
push
fstpl
shl
lock
add
addb
sbb
lcall
movl
push
loopne
xorl
icebp
repnz
pop
inc
adc
cld
lods
dec
sub
pop
mov
out
mov
sahf
xor
nop
mov
mov
push
mov
inc
loopne
xor
push
push
data16
jmp
cwtl
divb
or
bound
arpl
xor
inc
je
loope
xchg
inc
adc
pusha
mov
mov
aaa
shrb
inc
and
mov
jmp
push
shlb
dec
loope
and
add
jmp
hlt
push
sahf
push
xor
lock
mov
je
mov
in
inc
js
xchg
jno
imul
pop
xor
jmp
notb
imul
xor
adc
jle
mov
enter
jnp
cmp
sub
cmp
popf
pop
mov
mov
jl
mov
pushf
mov
sub
stos
xor
stc
fildll
jbe
cmp
push
fiadds
pop
in
push
xor
loop
cmp
aad
mov
cli
shll
popf
push
pop
test
bnd
sarl
pusha
adc
or
gs
iret
rcr
xchg
push
xchg
aad
add
lds
jl
push
cwtl
inc
inc
xchg
jl
rcll
dec
cmpsl
leave
xchg
mov
mov
jmp
sub
out
mov
sbb
pop
clc
adc
and
insl
in
jmp
mov
into
pop
xchg
scas
arpl
mov
ret
shll
or
sbb
stc
popf
pop
ja
ljmp
mov
les
cmpsl
inc
xor
cmp
rolb
pop
jae
ficomps
and
lcall
scas
aaa
mov
xorb
and
sbb
sahf
jnp
add
shll
insb
gs
push
sub
ja
je
push
pop
push
popa
cmp
and
push
sub
xchg
xchg
repz
rcll
movsb
push
test
sub
out
jp
adcb
xchg
lock
mov
cmpsl
jecxz
int3
std
jle
sbb
cmp
das
ret
sub
pop
stc
js
test
xor
xlat
cmp
mov
roll
mov
xchg
sub
repz
xchg
cmp
jp
push
or
mov
sahf
pop
int3
xor
xchg
insb
scas
sbb
sahf
sbb
int
pop
jl
mov
pop
lds
sbb
repz
mov
insb
push
data16
pop
mov
adc
sti
fs
data16
xchg
movsl
push
daa
add
mov
adc
fwait
cmp
mov
mov
or
pusha
shr
test
or
arpl
xor
push
inc
clc
leave
data16
insl
aad
adc
test
inc
adc
mov
iret
out
lea
jae
adc
push
mov
popl
jecxz
adc
cmpsl
cmp
sbb
ret
mov
ja
adcb
imul
je
xor
in
adc
cmpsb
inc
cli
pop
cmp
xor
popa
test
xor
ss
rorb
and
dec
stos
lea
iret
mov
pop
and
loope
imul
jle
sub
xchg
mov
pop
mov
cmc
push
loope
xchg
add
shl
jp
xlat
cmp
pop
scas
push
outsb
in
or
push
ja
adc
push
jp
sbb
insl
sub
sti
inc
std
test
pushf
lock
aad
pop
xor
sahf
inc
xchg
xlat
pusha
data16
or
jae
mov
loope
mov
insb
testb
inc
mov
inc
cmc
xchg
or
idiv
int3
mov
imul
lea
jne
push
push
call
cmpb
jmp
mov
roll
popf
aam
jo
cmp
ja
jae
xlat
scas
xor
xlat
lret
xchg
orb
inc
aas
add
adc
add
mov
sub
push
adc
daa
cmp
sbb
dec
int
xor
inc
or
pop
in
aad
stos
pop
adc
dec
adc
push
inc
jle
arpl
inc
cmp
fcmovu
push
jl
lock
adc
shrb
xchg
data16
dec
lock
aas
sbb
push
inc
and
dec
mov
mov
dec
inc
insb
jne
add
leave
lret
es
imul
je
mov
insb
push
cmpsb
or
adc
pop
pop
push
clc
push
jecxz
add
sbb
lds
popf
jb
push
jge
movsl
imul
mov
lret
sub
leave
push
in
stos
sub
jnp
popf
fildl
or
popf
mov
adc
loop
jb
cmpsl
xchg
into
push
fnsave
out
push
cmpsl
mov
pop
insb
lahf
shll
frstor
scas
xor
test
insb
push
jl
fiaddl
ljmp
pop
fwait
lret
sub
lock
pop
shll
and
jno
push
add
test
insb
xor
pop
inc
pop
xchg
adc
cmp
bnd
sbb
pop
loope
ljmp
fwait
push
jae
repz
cmpsl
cmc
mov
pop
add
mov
jecxz
loop
inc
mov
ret
add
dec
je
sub
mov
aam
or
xchg
and
inc
mov
rcll
repz
push
or
inc
arpl
inc
add
dec
xchg
call
sbb
lock
jae
sub
lcall
movsb
lock
mov
or
xchg
dec
push
mov
out
in
mov
in
cmpb
xchg
or
push
dec
add
jb
sbb
call
sbb
jbe
inc
xchg
jns
ds
pop
mov
push
push
push
adc
or
xor
movsb
cmp
sahf
stos
out
dec
clc
sti
mov
xor
dec
pop
xabort
mov
jae
in
ljmp
bnd
dec
sub
cmp
pop
and
mov
or
mov
inc
sbb
xchg
jl
lock
aam
mov
in
outsb
dec
dec
into
xor
insb
pop
mov
adc
cld
sub
test
loopne
jl
pop
add
cmpl
mov
bound
push
sub
pop
cmpsb
cld
fdivl
cmp
inc
xchg
push
mov
inc
leave
sbb
ss
jbe
jmp
xor
pop
les
add
pushf
dec
mov
mov
pop
push
int
out
mov
xor
xor
mov
jle
mov
xchg
jno
sar
push
fstpt
cmp
cmp
or
call
xchg
xchg
mov
in
jnp
imul
lods
lods
mov
ret
xor
in
mov
xchg
xchg
in
sbb
xchg
mov
jp
insb
pop
ret
mov
xchg
jmp
fwait
scas
loopne
loopne
popf
xor
jl
lret
inc
and
insb
ss
insb
xor
push
fisubrs
sbb
cmp
or
mov
cld
mov
inc
push
inc
repz
fcomps
or
fs
sub
or
add
push
push
pop
push
data16
mov
imul
aad
les
push
inc
xchg
pop
stos
cmp
sbb
daa
sub
push
aam
out
popf
out
dec
lahf
lock
xor
in
rorl
mov
sub
dec
lds
inc
call
mov
outsb
xlat
inc
aas
lret
lock
lock
fcmovnu
testl
cmp
xchg
xchg
pop
dec
mov
or
mov
sub
ds
in
push
inc
cwtl
pop
jb
xor
out
fldcw
push
mov
push
repz
daa
test
imul
mov
dec
or
xchg
or
sub
add
loope
pusha
push
pushf
test
mov
cltd
add
cmpsl
inc
fistps
in
dec
pop
pop
fcmovu
cmp
or
mov
call
push
mov
insl
push
lock
pop
jp
or
scas
push
pop
xchg
shl
sub
clc
xchg
or
inc
mov
das
out
das
xchg
insb
shl
shll
mov
fsubs
imul
ljmp
lret
fcomi
popa
outsb
movl
adc
mov
hlt
pop
lcall
mov
lock
aaa
mov
aad
das
push
inc
add
pusha
cmpsl
in
in
pop
cmpsl
mov
sub
lcall
aam
push
je
mov
testl
test
inc
addr16
pop
xchg
cmc
push
sbb
or
adc
clc
cmp
push
aas
jns
jnp
sbb
sub
call
dec
fidivl
sub
xchg
in
jb
mov
sbb
cmpsb
pop
test
jmp
aas
xor
cmc
sub
xchg
push
sub
call
jnp
mov
inc
add
and
mov
shll
and
cmp
ret
aaa
sub
mov
push
inc
pop
cwtl
jle
jg
or
adc
xor
cmpsl
push
rcrl
push
adc
insb
pop
adc
dec
sbb
addr16
dec
jl
xor
adc
sub
data16
xor
sbb
mov
cmpsb
repz
sub
dec
subb
push
or
dec
ret
mov
xor
sub
dec
sbb
stos
out
ja
fwait
mov
lock
pushf
inc
es
aad
push
cld
sub
cmp
movsb
ud1
inc
pop
sub
jg
stos
lcall
or
fisubrl
xlat
enter
pushf
pop
pusha
sub
in
push
xchg
test
or
cmp
push
sub
ja
sub
aaa
repz
mov
insb
xor
outsb
clc
add
mov
push
rcr
xchg
mov
leave
fldt
ss
iret
mov
fcoml
addr16
cmp
ds
sub
jae
pop
sub
push
out
mov
jo
lock
jno
xor
inc
lret
pop
sub
and
cmp
lret
fbld
sti
dec
sbb
cmpsb
das
daa
nop
inc
push
and
idivb
in
arpl
push
dec
pop
inc
sub
ret
faddl
push
dec
jg
sub
cmp
sub
xchg
hlt
xchg
std
insb
or
dec
sub
dec
jne
jmp
aam
add
or
lock
xchg
icebp
sub
mov
ljmp
lock
in
in
jl
clc
pop
dec
lea
jo
cli
adc
sub
pushf
jp
adc
push
inc
sbb
std
jns
xor
shl
adc
pop
in
and
jmp
push
sbb
out
ficompl
mov
pop
inc
outsb
cmp
inc
adc
pushf
outsl
mov
clc
pop
out
std
int3
bsr
enter
sub
int3
ss
xchg
push
daa
or
loop
mov
and
dec
lea
mov
and
pusha
or
xchg
fldt
in
jge
pop
dec
xorb
and
in
cmpsl
lods
out
aad
cld
sub
push
push
aam
push
xchg
and
popf
pop
or
fnstcw
jb
clc
gs
repz
int3
sti
jg
mulb
icebp
movsl
in
mov
pop
fs
push
cmp
mov
inc
movsl
incl
notl
mov
aas
xchg
mov
aas
pop
loop
xchg
cld
roll
mov
mov
in
inc
mov
das
movsb
sbb
add
ds
dec
mov
insl
jo
xlat
pop
and
xchg
scas
lock
cmpsl
sbb
addr16
fldl
jno
push
aas
lods
ss
adc
jge
push
popf
xchg
addr16
sti
inc
addl
sbb
outsl
test
jl
bound
inc
cmc
hlt
or
pop
lods
imulb
sub
jae
pop
imul
rclb
pop
movsl
test
cmp
mov
in
stos
jp
test
jne
arpl
mov
scas
and
lahf
sub
je
mov
ret
xchg
push
lods
addr16
mov
js
jnp
sbb
jnp
lock
add
iret
jno
in
outsl
jmp
xchg
xchg
imul
pop
imul
je
in
or
mov
pop
push
mov
shll
mov
jo
mov
add
pop
mov
movsb
jl
sbb
stos
pop
or
lock
xchg
loop
xor
jp
cmpsb
inc
js
lahf
push
pop
sbb
sub
dec
roll
stos
add
sbb
pop
pushl
je
sub
add
mov
or
out
into
mov
lds
jp
mov
js
popf
jmp
cmp
ret
ret
pop
push
xchg
std
int3
and
dec
stos
and
or
jmp
push
lods
inc
or
mov
jb
sub
ret
jns
pop
sbb
and
pop
call
lods
jns
int3
mov
data16
push
out
push
inc
scas
xor
es
in
andl
insl
and
adc
cmp
mov
ficoml
cmpsl
and
push
cmpsl
mov
adc
fstl
aam
or
jb
mov
pop
dec
xchg
data16
mov
mov
jecxz
push
dec
lods
cmp
add
xor
xchg
popf
or
jecxz
mov
shll
mov
xchg
and
orb
xchg
cli
outsb
aad
add
incl
mov
push
mov
pop
push
pop
jmp
movsb
das
add
or
add
xor
add
add
call
movsl
jp
loope
out
adc
mov
jne
pop
add
add
in
hlt
cmpsl
mov
dec
pop
and
adc
inc
add
pusha
in
lods
mov
sub
in
push
int
jmp
jne
jne
inc
jae
sahf
xchg
lret
and
repz
sbb
ds
sub
fcom
xor
or
mov
cmp
imul
sbb
and
test
mov
inc
inc
aas
xchg
in
jg
dec
das
das
cli
enter
sub
adc
and
jnp
pop
pop
push
rolb
mov
pop
or
jb
imul
lods
loop
cmp
mov
push
popa
sub
jbe
rcll
add
mov
sub
in
add
add
add
popf
sti
inc
cmp
fiaddl
lock
mov
pop
inc
xor
movsl
imul
jns
inc
fwait
sbb
cmp
fcompl
mov
not
sub
adc
pop
scas
xorl
sbb
sti
imul
dec
inc
sub
inc
sub
pop
push
lods
pop
sub
fwait
mov
xchg
loope
xchg
rorb
mov
lret
cs
push
xor
or
loope
xor
ja
cmp
pop
or
dec
or
lock
pop
pop
jmp
rclb
orb
dec
roll
lock
addr16
stos
dec
insl
addr16
sarb
cmpsb
aas
fcomip
mov
mov
loopne
sbb
enter
sub
ss
xchg
lods
cmc
bound
xor
fidivrs
and
clc
sbb
adc
jg
or
sbb
dec
push
fstpt
lahf
inc
sub
inc
aad
and
jmp
dec
stos
aam
dec
xor
cmp
and
aam
flds
xor
dec
ljmp
jno
xchg
data16
mov
fcoms
lds
sbb
rcrl
shll
push
mov
fiadds
int3
lahf
and
sub
adc
shll
sbb
bound
sub
clc
pop
or
ja
aaa
add
sub
push
cmpsb
sbb
andl
sub
fldl
lcall
xor
sbb
sbb
stos
loop
jnp
xchg
sahf
push
xchg
xor
rcrb
into
sub
and
jae
out
or
out
div
mov
orl
xchg
gs
sub
test
daa
pop
es
dec
jmp
aam
test
cmp
scas
aaa
inc
cltd
xchg
mov
das
inc
divb
lcall
out
push
push
daa
mov
iret
mov
pop
sub
scas
pop
or
push
and
xchg
cmp
mov
adc
cmp
add
stos
sub
repz
mov
mov
aaa
add
lods
lret
fwait
and
xor
xchg
gs
fnsave
shlb
shlb
inc
mov
sub
or
aam
addr16
dec
icebp
dec
pop
pop
std
and
fadds
inc
push
rorb
out
xchg
dec
outsb
test
sbb
adc
mov
lock
insb
stos
or
movsl
aad
loope
data16
and
js
inc
xor
imul
jnp
jbe
sarb
cmpsl
mov
int
inc
pop
push
stos
and
lock
jg
add
stc
loopne
iret
push
addb
ret
xor
inc
insl
or
in
in
fildll
dec
pop
loopne
sbb
scas
and
sub
leave
test
int
rolb
sbb
in
lock
inc
insb
shlb
jecxz
sar
cmp
js
adc
mov
or
jbe
outsb
sub
push
xor
adc
pusha
push
xor
xor
mov
push
sahf
mov
in
hlt
mov
sub
xchg
or
mov
sub
inc
mov
sbb
add
stos
inc
and
push
add
pop
pop
pop
dec
cld
pop
xlat
pop
xor
ja
mov
mov
pmulhuw
push
stos
cwtl
xchg
out
test
lds
int
bound
push
pop
add
xchg
in
orb
pop
mov
mov
icebp
lock
mov
jecxz
jae
sub
lret
scas
outsl
mov
test
push
inc
adcb
fs
dec
pop
bound
imul
jns
movsl
and
test
mov
xchg
popa
cmp
xchg
sbb
dec
ret
mov
fidivs
jle
rcrl
mov
push
cli
dec
jg
and
push
out
inc
adc
jle
dec
ret
dec
pop
mov
pop
unpcklps
fs
mov
fwait
xchg
flds
roll
iretw
and
mov
push
in
cmpsl
pop
adc
ret
test
jns
adc
jmp
xchg
icebp
sahf
movsl
paddsb
jl
dec
sub
lock
inc
shrl
adc
or
test
dec
dec
mov
sub
adc
shrl
adc
idivb
imul
sbb
fbld
mov
rolb
pop
mov
dec
mov
push
ljmp
mov
fisubl
out
lahf
jge
loope
cmp
mov
dec
aad
and
sbb
sbb
or
inc
movsl
and
sbb
leave
rol
push
outsl
out
sti
iret
repnz
xor
xor
push
das
xor
jnp
pop
adc
mov
jo
rorb
ljmp
mov
aaa
jmp
cmp
sbb
sub
mov
outsl
or
add
loopne
pop
ds
aas
cmpsl
lods
int3
cmp
xchg
sub
imul
inc
ja
mov
test
dec
cmp
lods
mov
pop
cmpsb
push
repnz
push
fisttps
loope
daa
xlat
imul
cmpsb
add
jae
call
xchg
xlat
les
add
aad
inc
push
fs
mov
sbb
aas
pop
dec
lods
jg
stos
pop
mov
lock
push
dec
push
iret
rorb
notb
push
adc
cmpsl
enter
xor
adc
arpl
xchg
lock
push
repz
fs
xchg
sti
pop
lea
test
add
sarl
sbb
xlat
and
std
push
mov
aad
scas
scas
xor
sbb
pop
decl
dec
xor
cmpsb
fldl
test
loope
jmp
mov
jl
mov
pop
mov
mov
xor
mov
adc
or
lock
ljmp
dec
fmull
ds
sub
dec
sahf
jecxz
inc
mov
add
mov
jecxz
adc
bound
adc
sbb
pushf
lea
es
mov
and
inc
add
pop
lods
js
cmp
movsb
lcall
les
or
call
xchg
cmp
jno
push
sbb
test
and
inc
cmp
dec
imul
sub
sbb
xorl
xor
inc
cs
lock
sti
lea
or
fidivrs
xor
adc
enter
mov
test
and
addr16
loope
mov
lds
xchg
add
xchg
inc
int3
test
inc
aaa
aaa
pop
push
inc
sub
jg
jmpw
or
fwait
sub
inc
sahf
and
cli
js
xchg
lock
int3
scas
or
adc
xchg
and
xor
add
in
imul
addb
pusha
sti
aas
push
push
popa
dec
jle
sub
sbb
insb
sbb
fcomps
mov
rcll
mov
mov
add
arpl
lods
scas
iret
rcr
sub
mov
ja
fisttpl
lea
pop
test
cld
mov
mov
lret
mov
xor
adc
fstps
sub
out
push
mov
dec
movsb
pop
sub
push
fsts
sti
js
std
cmp
xor
xchg
leave
xor
outsb
adc
out
jno
arpl
in
xor
pop
dec
dec
add
popf
cmp
in
testl
dec
sub
lea
xor
testl
std
mov
cmpsl
rcrb
push
movsb
lahf
mov
cmp
mov
xor
aad
cmpsb
mov
sbb
inc
decl
and
pop
imul
call
repz
int
lock
imul
jl
xchg
stos
aam
divb
sarl
xchg
jo
lods
sti
hlt
cltd
adc
xor
js
mov
cmpsb
out
push
orb
push
adc
mov
push
mov
cmp
outsb
test
lock
lret
sub
mov
fwait
xorl
pop
cmp
sub
int
je
lea
dec
fisubrl
hlt
xlat
aam
lods
imul
loop
lods
repz
aas
mov
pop
stc
fs
sbb
dec
mov
jae
cld
xchg
jno
insb
adc
out
lcall
loope
mov
aaa
notl
cmpsl
mov
adc
loope
push
subl
cs
stos
cltd
xchg
add
rcrb
iret
imull
imul
push
sub
mov
sub
sub
inc
fcmovbe
or
mov
jbe
bound
dec
jnp
add
rol
mov
fiadds
jmp
mov
and
inc
cmp
cmp
mov
xchg
pop
iret
lock
xchg
xchg
movsb
inc
inc
pop
imul
push
cmpsb
cld
pop
test
test
and
out
xchg
loop
lret
xor
jb
jmp
add
xor
int3
sbb
dec
push
pop
leave
leave
insl
les
push
dec
mov
add
or
pop
arpl
jp
stos
jbe
mov
sbb
sub
cmpb
ljmp
pop
lds
jmp
ret
lods
inc
xlat
lds
push
mov
out
or
sub
push
xchg
or
jg
sti
push
fstl
arpl
and
jmp
mov
mov
pop
sbb
cmp
mov
inc
jnp
out
jle
sbb
je
jge
flds
sub
xchg
rorl
sub
or
nop
push
ljmp
fcmovbe
and
xor
aad
mov
iret
cmpsb
mov
notl
aam
cld
cli
das
sbb
ret
sbb
xchg
in
push
jge
and
push
xchg
jns
mov
rclb
cli
lock
sahf
mov
mov
push
dec
sub
lcall
fldt
push
dec
sti
rcll
push
lock
test
ljmp
sbb
xor
xor
cmp
int
dec
sub
mov
dec
stos
ret
mov
mov
cli
test
jae
rclb
xor
inc
ljmp
xchg
data16
xchg
pop
sarl
pop
push
xor
cs
add
dec
pop
pushf
data16
inc
test
xlat
test
les
cs
sahf
pop
loope
xor
jne
mov
movsl
push
push
or
pop
xor
mov
lds
pop
imul
repz
jae
cmp
mul
shll
lds
inc
popa
xlat
and
sti
cmp
inc
and
into
mov
inc
inc
repnz
clc
sti
stos
dec
aam
fs
stc
mov
xor
mov
mov
shl
call
sbb
lock
or
push
cmp
mov
popa
mov
sbb
mov
outsl
push
pop
xchg
cmp
fisubs
dec
push
mov
cmp
adc
sbb
rorb
xor
in
fwait
jnp
xlat
and
xchg
dec
rcrl
cmp
jecxz
ret
fidivrl
leave
or
adc
dec
imul
xor
movsl
lcall
in
in
lretw
sub
sbb
mov
shlb
sub
cli
lock
pop
mov
out
xchg
hlt
outsb
mov
pop
add
pop
jae
mov
int
shrl
scas
push
mov
sahf
lea
lret
je
pop
stos
sub
stos
popa
xchg
ss
lods
je
shlb
push
rorb
or
je
pushf
inc
xor
xor
jl
pop
mov
or
mov
mov
mov
cmpsl
sub
fwait
loopne
pop
scas
cmp
jno
movsb
movsl
push
push
dec
xor
inc
sub
hlt
in
imul
mov
dec
lds
mov
test
ficoml
jo
push
loopne
pop
es
movsl
ret
lock
mov
jno
mov
adc
mov
push
sub
movsb
in
inc
jp
push
mov
push
pop
mov
pop
jbe
jnp
and
mov
les
xor
mov
mov
fsubrs
clc
scas
shl
push
cmp
into
jmp
sarb
stos
adc
cmc
mov
mov
add
xor
xchg
shll
in
mov
cmp
or
repz
clc
jecxz
add
push
xchg
bound
mov
insl
adc
sub
scas
call
in
sbb
jae
sub
mov
xchg
loope
mov
lods
cmc
add
push
pop
cld
lods
and
and
lods
in
xchg
sub
gs
test
cwtl
insl
or
aad
push
xor
sub
push
ss
rcll
inc
xchg
notl
mov
mov
addr16
scas
insl
mov
pop
add
dec
and
test
test
out
cli
push
dec
sbb
insb
sarb
mov
subb
dec
inc
push
mov
cmp
inc
loop
mov
or
ljmp
loope
sub
xor
pop
jecxz
sub
leave
sarb
sarb
lret
xchg
daa
ss
lock
faddl
cmc
incl
xchg
aas
bound
std
das
jnp
mov
shll
cmp
stos
jle
push
mov
adc
lahf
ja
pop
filds
xchg
stos
mov
dec
push
adc
loopne
xorb
xor
or
inc
inc
aam
sti
cmp
sub
xchg
mov
mov
jae
xor
pop
and
mov
mov
cli
dec
or
cltd
loop
and
jae
pushf
or
add
xor
mov
lods
cmc
inc
mov
sub
jnp
in
in
iret
mov
aad
adc
mov
sub
int3
mov
sarl
push
adcl
jge
inc
push
repz
sbb
xor
clc
cmc
push
clc
lcall
xor
mov
lock
inc
data16
mov
aam
clc
movsl
filds
mov
xchg
sbbb
jp
mov
push
test
fisttps
lock
cmc
add
xchg
push
bound
or
pusha
int3
testl
insb
pop
cmc
xchg
fisttps
pop
mov
cld
inc
or
push
int3
cmp
xchg
mov
jnp
out
push
push
stc
loop
mov
push
inc
popa
dec
ja
loope
shrl
adc
lock
sbbb
cmp
fisubrs
push
xor
lock
jl
sbb
sbb
jge
push
mov
aaa
adc
xor
roll
push
or
xchg
es
push
cmc
movsb
dec
gs
mov
push
mov
jnp
addr16
sti
in
cmp
inc
lock
push
jl
in
mov
dec
xor
stos
cmp
mov
std
add
pusha
repz
ret
push
sub
dec
stc
pop
mov
in
cwtl
insb
jmp
mov
cld
xlat
das
jo
cmp
cli
sub
ljmp
xchg
jb
out
sti
ret
std
jb
sbb
push
mov
xchg
add
insb
adcb
adcb
xchg
loop
xor
bound
lea
fs
in
xor
inc
mov
mov
mov
xchg
leave
movsl
xchg
push
adc
xchg
lcall
xchg
xlat
adc
clc
xor
arpl
and
xchg
dec
clc
int
and
pop
pop
pop
popa
movsl
addr16
mov
loop
pop
mov
cmp
ljmp
addr16
dec
dec
dec
and
add
cmpsb
push
push
mov
addr16
iret
enter
xor
and
mov
les
out
lock
imull
js
dec
movsl
rclb
ds
push
xor
lret
ss
pop
sbb
rorb
cld
arpl
mov
cltd
adc
leave
btr
stos
xchg
aad
rclb
pushf
and
imul
lret
cmp
cmp
inc
int
cld
ds
sub
xchg
cmpsb
pusha
xorb
mov
lock
mov
mov
sub
pop
arpl
bound
push
cwtl
mov
test
pop
dec
cli
mov
lret
les
mov
insl
pop
hlt
and
dec
dec
mov
xor
inc
rcl
xor
daa
xchg
fsubrs
in
xor
push
adc
arpl
leave
push
mov
cmp
das
movsl
aam
fisubrl
rcll
sbb
dec
outsl
divl
add
mov
xchg
fisttps
and
push
and
adc
sub
lock
fsubrs
cltd
or
inc
pop
pop
push
mov
sbbl
pop
cmpsl
outsb
push
jmp
iret
sahf
mov
stos
xor
insb
je
movsl
jge
adc
xchg
imulb
ret
lcall
push
cltd
mov
push
push
out
cli
mov
in
inc
ja
jle
aad
not
aam
sahf
pop
adc
fsubs
pop
das
lock
fistpl
sbb
pop
int3
jl
pusha
adc
stc
dec
mov
sbb
movsl
pop
test
inc
scas
sti
neg
inc
leave
cld
popf
push
test
sub
jb
test
mov
push
roll
add
or
sbb
loop
jge
add
jnp
ds
push
movsl
nop
std
cld
lcall
lock
out
xlat
cmp
ja
xchg
push
notl
stc
bound
ljmp
push
push
pop
test
xchg
xchg
dec
lret
jmp
push
decl
lock
mov
fstl
rep
cmp
dec
push
adc
mov
out
adc
popa
out
stos
out
adc
push
add
call
xchg
sarl
sbb
adc
mov
adc
aaa
adc
daa
xor
mov
popa
cmp
nop
hlt
inc
mov
sti
mov
test
jge
inc
lcall
stos
clc
imul
imul
in
shl
pop
mov
ljmp
in
mov
outsl
push
pop
dec
addr16
xchg
int
imul
out
inc
xchg
inc
sarb
or
cmp
fistl
sbbl
jg
mov
daa
stc
lea
xchg
cmp
scas
xchg
sbb
adc
jp
int
adc
rol
test
push
mov
cmc
jecxz
or
pushf
and
dec
aad
cltd
xor
pop
ljmp
shrb
or
mov
xor
adc
aam
push
pop
push
adcl
add
adc
call
adc
push
imul
xor
xchg
in
aam
imul
pop
int3
psubusw
push
movsb
push
sarl
adc
dec
fstps
jnp
stos
test
pop
lods
jb
outsl
js
aas
mov
out
pusha
inc
cmpsb
push
jns
ja
flds
negb
mov
ss
sbb
shrb
sahf
adc
pop
push
xchg
inc
jno
xor
scas
pushf
test
xor
notl
inc
xchg
jg,pn
movsb
and
or
inc
sub
popa
in
scas
in
push
or
iret
jge
pop
das
xchg
hlt
enter
leave
cld
stc
xor
gs
adcb
jg
pop
push
popf
leave
jp
lcall
jae
stos
dec
popa
adc
mov
or
insl
decb
xchg
jo
jle
stc
inc
in
pusha
test
adc
push
fisubrs
imul
test
sti
dec
adc
call
out
pop
mov
add
mov
sbb
movsl
lcall
xchg
data16
shr
mov
sub
xor
mov
call
cmp
xor
inc
hlt
nop
sbb
loopne
mov
push
jp
push
scas
inc
lods
popa
addr16
xchg
xor
arpl
insl
test
sahf
insb
jle
or
in
popa
mov
cld
or
bound
inc
ss
gs
dec
xor
hlt
add
in
xchg
stos
cmp
jne
out
dec
add
test
imulb
push
repz
les
adc
cmp
cld
call
or
scas
rclb
pop
xor
inc
push
lods
jb
and
pusha
hlt
xchg
lds
pop
jp
ja
push
lock
sahf
sbb
xor
test
sbb
sbb
inc
inc
loop
fidivrs
addr16
into
ret
adc
sub
xor
sbb
cs
pushf
cmp
aad
sub
or
test
push
jecxz
xor
adc
test
loop
xor
or
daa
mov
movsl
loopne
adc
gs
and
xlat
mov
aad
loope
jae
push
mov
insb
out
je
lock
fmull
aam
test
xor
xchg
dec
xlat
mov
push
sub
add
mov
xor
jp
lret
pop
addr16
cmp
sub
cs
stc
mov
stos
xchg
push
in
bound
jge
popa
inc
cmp
pop
cmpsl
in
cmp
push
push
mov
stos
push
pop
push
ret
sub
pop
insb
movsl
fsubs
cmp
and
dec
jge
sarb
mov
dec
andb
xor
negl
outsb
dec
sahf
jns
and
in
cmp
bound
inc
icebp
test
ja
jecxz
je
push
test
push
jne
push
sahf
add
mov
in
ret
or
test
sti
and
dec
jle
das
test
adcb
and
pop
pop
lock
pushf
icebp
cs
cmp
push
push
xor
ljmp
jmp
xchg
insb
cmp
lcall
xor
mov
xchg
jp
out
push
xor
add
sub
rorl
leave
xchg
lods
sub
or
jle
dec
xor
dec
add
insb
adc
push
mov
mov
dec
lods
xor
jo
mov
repz
mov
aam
adc
pop
jnp
cmc
mov
in
xor
jle,pt
mov
jno
dec
pop
jnp
sarl
dec
push
stos
dec
or
orl
les
sbb
ret
pop
or
lods
arpl
lea
clc
call
sub
pop
movsb
inc
jp
pop
dec
fsts
or
das
xchg
outsl
push
movsl
inc
xchg
mov
stc
cli
pop
test
inc
or
in
in
stos
xor
xor
xchg
pop
mov
add
inc
arpl
mov
push
and
bound
or
jp
mov
inc
pop
lret
cmpsl
iret
test
mov
in
shll
xchg
scas
pop
adc
xor
mov
scas
inc
jl
mov
xchg
mov
cmp
jbe
inc
push
incl
xchg
push
sti
jbe
mov
xor
push
push
aas
dec
movsb
punpcklbw
mov
je
cld
push
aad
int
into
xor
int
inc
mov
into
imul
adc
or
add
cmpsb
inc
or
dec
sbb
jmp
cmp
xlat
jne
sbb
push
jge
adc
jp
stc
outsl
jb
jge
mov
adc
mov
pop
loope
repnz
sbb
pop
xor
jg
mov
xchg
inc
adc
xor
cli
jle
mov
inc
loop
lock
mov
test
test
or
lea
or
data16
jb
lock
and
out
xchg
sub
test
mov
rclb
orl
sub
scas
pushf
shll
push
lods
pop
push
xor
mov
push
cmp
and
adc
lret
jnp
push
out
jmp
rcrl
mov
and
adc
rcll
insl
dec
push
mov
lods
pop
cmp
scas
mov
xchg
lods
addr16
movsb
lods
iret
xor
lret
sbb
gs
insl
popa
frndint
jmp
leave
jnp
je
sub
out
jmp
cmc
ret
sahf
xchg
jne
sbbb
test
cmpsb
sub
hlt
cwtl
add
or
lret
out
push
shl
pop
punpcklwd
and
int3
jns
xchg
cld
movsl
or
mov
test
adc
mov
fisttpl
cmp
les
jg
ds
ss
inc
sub
inc
dec
mov
fnstsw
mov
jae
dec
sub
in
add
and
adc
daa
je
mov
orl
mov
pop
rorl
sub
fiaddl
cs
cmc
mov
out
loope
xchg
repnz
sahf
and
push
sub
arpl
and
cli
test
dec
sub
pop
xorl
sub
ja
jb
sub
xchg
pop
lods
sub
sub
or
loop
xchg
or
flds
xor
test
fldt
sub
mov
cmp
aaa
mov
pop
inc
cmp
sub
outsl
lods
push
sub
adc
in
cmp
jae
movsl
std
into
testb
sub
fnstenv
or
out
and
xchg
idivb
cmp
sub
push
xchg
sub
inc
lods
ret
inc
add
aas
in
insl
sbb
pusha
bound
sub
and
fbld
push
shr
ljmp
cmpsl
xorb
hlt
das
jae
or
sbb
popa
test
jbe
xchg
loop
push
sahf
dec
fadds
pop
inc
add
inc
cwtl
xor
mov
mov
test
xchg
into
inc
push
or
aam
sub
sub
add
mov
dec
cltd
cmpsb
into
clc
in
int3
bound
test
or
or
mov
inc
loopne
lahf
sbb
popf
leave
loop
jp
cmp
cmp
cwtl
cmp
mov
sub
fs
sub
mov
or
stc
xchg
ds
sub
sub
fs
inc
sub
ret
hlt
jnp
pusha
mov
jae
loope
push
std
ss
sbb
push
jo
xor
pop
arpl
push
xchg
test
xchg
ss
sbb
push
test
mov
das
sub
loop
popf
push
mov
or
pop
stos
mov
in
add
sub
bound
out
push
and
and
xor
adc
je
ljmp
ja
mov
and
addr16
add
xchg
cmp
dec
stos
xlat
sbb
sub
inc
cmp
and
push
mov
sbb
cltd
fsub
lret
bound
dec
mov
push
js
jmp
mov
iret
stos
inc
sub
repz
fldl
cmp
cmp
sub
dec
inc
or
pop
xchg
sub
jns
or
inc
stos
test
int3
mov
dec
mov
imul
outsb
adc
ljmp
sub
sub
fnstsw
mov
sbb
test
mov
test
shrb
movsl
outsl
gs
or
int3
popa
in
mov
ret
hlt
sub
xor
cmc
jl
jns
xchg
inc
adc
addr16
pop
int3
ljmp
jno
pop
out
mov
inc
xchg
cmc
sub
enter
sti
pop
push
ljmp
movsl
stos
cmp
test
cmp
xchg
dec
iret
sbb
xchg
in
pushf
sub
fs
in
test
mov
test
insl
out
fdivrl
push
jmp
outsl
lea
and
jle
cmp
cmp
dec
push
icebp
and
mov
int3
adc
sub
pop
xor
push
push
push
jb
jo
push
in
imul
mov
fists
jae
sub
pushf
xchg
rcrb
test
add
das
sbb
inc
sub
lock
jne
sub
sub
fdivrs
dec
sbb
pop
enter
jae
sbb
cmp
lahf
outsl
loop
lods
xor
lret
or
mov
push
inc
stos
sbb
mov
cmpsb
nop
fists
call
insl
adc
sub
lea
std
xor
out
cmp
arpl
dec
pop
cli
and
jne
loop
pop
out
cmp
pop
lods
or
dec
test
es
push
add
adc
hlt
iret
sbb
xor
push
xchg
nop
adc
std
test
popa
inc
lret
inc
int3
mov
loope
push
aad
inc
hlt
lock
or
mov
arpl
cld
cli
ds
rorl
xor
add
push
add
int3
jge
out
adc
sub
jns
sti
mov
cld
sub
cmp
jmp
pop
sbb
movsb
sub
test
in
jns
dec
dec
push
sub
test
aad
sbb
out
aaa
and
call
pop
stos
mov
jne
sub
test
js
adc
fs
push
pop
fs
sub
xchg
sub
loop
pop
xchg
cmp
xchg
lock
rcl
pushw
mov
sub
shrb
daa
adc
repz
dec
cld
jl
in
jae
ficoml
dec
fwait
mov
sbb
mov
xor
ret
sub
loop
mov
movsb
adc
sub
dec
sub
xchg
add
test
es
lahf
push
or
rolb
sub
push
mov
ds
jns
inc
sbb
rorb
mov
xor
push
jo
insl
lds
jnp
sub
sti
sub
xor
or
cwtl
js
lcall
push
daa
iret
xchg
sub
sub
lcall
mov
movsl
ficomps
mov
lods
cwtl
push
int
jle
pop
inc
xlat
fidivl
sub
pop
dec
inc
rorb
test
andl
test
mov
pop
imul
jno
sbb
sub
jmp
rorl
xchg
test
mov
xor
sbb
into
jb
and
inc
les
loopne
sub
cli
cmp
and
jp
cmp
xchg
jne
sahf
inc
lret
pop
and
and
test
pop
push
insl
mov
and
sub
out
cmc
ret
pop
faddl
push
std
jge
inc
mov
mov
shrl
xchg
loope
cli
popa
and
jecxz
adc
inc
add
pop
stos
cmp
add
pushl
adc
inc
int
aas
loop
cwtl
push
push
cmp
cltd
and
mov
mov
and
scas
jg
rcl
in
sub
sbb
ljmp
fdivs
lods
cmpsb
xchg
loopne
mov
clc
jne
loop
stos
inc
cmp
hlt
sub
mov
or
inc
fistpl
sub
sbb
andb
int
cmpl
sub
scas
pop
lods
ja
inc
loop
imull
mov
mov
sub
jb
mov
jge
push
jp
test
mov
rorb
adc
sub
jle
ljmp
xor
fsubl
sub
ja
and
xchg
sub
lahf
and
sub
iret
mov
and
movsb
mov
sbb
sub
icebp
js
push
nop
inc
sub
add
and
mov
lcall
pop
imul
fwait
push
sub
xchg
mov
lock
cmp
sub
div
out
arpl
adc
je
mov
sub
fld1
pop
mov
mov
sub
cmp
out
and
push
pushf
pop
idiv
pop
xchg
rol
sub
xchg
xor
shrl
stos
shl
inc
or
xchg
bound
add
sbb
pop
out
lret
sub
orb
lcall
scas
sub
cwtl
sub
mov
std
pop
cld
repnz
sub
and
orl
ljmp
sub
movsl
outsb
iret
or
pop
mov
std
imul
loop
sub
in
adc
ds
out
and
mov
test
int
ljmp
sahf
xor
rcrl
pusha
push
xchg
push
dec
fidivl
lcall
cmovs
call
mov
into
push
scas
int
cmp
sti
xor
add
mov
jp
pop
jecxz
fcoms
dec
fldl
pop
or
lea
out
decl
jne
mov
mov
mov
inc
and
dec
sub
cwtl
xor
push
xchg
inc
arpl
cmc
rcrb
hlt
bound
lock
sar
ljmp
dec
mov
sub
sti
mov
xchg
test
pop
cmpsb
test
adc
outsb
push
mov
inc
das
scas
cmp
adc
data16
in
push
mov
decb
outsb
inc
aad
push
cmp
jl
jbe
mov
add
fstl
inc
and
push
inc
cmp
rol
faddp
je
jne
cmpsb
out
mov
mov
jne
dec
aad
clc
pushf
pop
xchg
cmc
in
stos
mov
fwait
xor
hlt
andb
add
cld
lock
inc
push
jne
dec
push
out
mov
add
ja
les
xchg
jecxz
scas
sub
into
cli
insl
das
inc
dec
add
mov
mov
bound
das
stos
mov
imul
scas
mov
push
inc
dec
sub
adc
out
inc
jmp
int
inc
xor
call
pop
insl
sub
flds
mov
insb
movsb
push
pop
scas
and
add
les
jae
sbb
jge
dec
mov
or
dec
mov
push
aad
and
push
mov
sub
pop
and
hlt
push
lods
and
or
cld
and
shll
lret
roll
addr16
jge
imul
xor
gs
adc
sub
sbb
or
add
pop
lcall
fldcw
sbb
cld
mov
into
negb
fistpll
popl
push
pop
sbb
dec
push
test
jecxz
add
xor
mov
adc
subb
fiadds
sub
scas
lods
sti
inc
mov
ds
adc
bound
pop
and
pop
fwait
into
clc
pusha
mov
sub
xor
je,pn
aas
mov
lods
mov
push
test
leave
xor
aad
imul
cltd
lock
add
xlat
mov
lcall
push
clc
pop
jns
sar
pop
pop
cmp
hlt
pusha
push
add
lret
pusha
lret
stos
jmp
push
mov
gs
fnstsw
xchg
xor
push
mov
nop
jns
fs
inc
mov
xor
gs
or
pop
pop
popa
cmpsl
adc
cmpsl
mov
cmp
pushf
in
out
or
mov
mov
xor
das
adc
in
pop
mov
enter
popa
mov
rorb
lret
xor
dec
pop
inc
sbb
adc
fdivr
lret
push
sbb
and
pop
mov
push
popf
add
jmp
lods
mov
xlat
loope
aaa
mov
ds
xor
fimull
inc
xchg
adc
test
sbb
pop
ss
xchg
out
mov
fxch
cmpsl
ret
or
mov
pop
xor
arpl
mov
cmp
and
or
cmp
dec
loopw
push
xchg
lock
pop
jp
or
jnp
aam
and
and
push
pop
inc
jmp
je
push
dec
stos
imul
add
push
sub
loope
imul
pop
aam
mov
jl
movsl
stos
ret
cltd
or
cmp
xor
out
mov
in
adc
dec
pop
movsb
lock
rcrb
cmc
push
scas
inc
mov
mov
mov
or
lcall
sub
mov
mov
stos
jnp
iret
xor
clc
inc
pop
dec
enter
or
gs
xlat
lock
addr16
out
popa
inc
xchg
sti
pop
hlt
fld
xor
push
cmpsb
ret
inc
das
lock
nop
stos
aam
cmp
push
in
in
mov
leave
adc
mov
add
xor
jno
fstpt
fdivrs
ds
mov
scas
sub
or
cmpsl
out
xchg
pop
cwtl
in
mov
outsl
dec
fs
pop
add
add
imul
xlat
cmp
and
pop
add
or
int
adc
testl
in
int3
push
orb
cli
neg
aam
cli
push
xor
cmc
inc
into
hlt
rcr
or
pop
inc
decb
jmp
pop
push
int
add
icebp
jmp
mov
outsl
bound
xor
xchg
dec
jg
rcr
cmp
dec
cmp
jp
or
or
add
test
jecxz
pusha
jo
arpl
scas
push
sti
mov
pop
dec
push
cltd
aad
pop
jle
aad
cld
lret
int3
adc
mov
dec
jne
cli
xchg
mov
mov
test
divb
dec
int
in
ss
das
jnp
fisttpll
ja
pop
push
push
adc
push
lret
jl
sub
sub
popf
sti
pop
push
pop
add
lea
lock
fs
test
stos
xchg
cmp
xchg
bound
xor
or
pop
cmp
push
or
mov
repz
sub
fisubs
out
cmpsl
sub
daa
stc
imul
sub
add
rcrb
or
imul
xor
fcmovb
frstor
rclb
add
notl
jmp
mov
int3
push
in
jp
pop
scas
imul
repnz
sub
jmp
mov
addr16
ljmp
pop
mov
adcl
adc
lods
in
and
mov
shl
xchg
adc
pop
out
ds
mull
je
popa
sbb
scas
push
out
pop
xchg
test
js
jg
or
dec
gs
cmp
lea
das
xor
ret
rcrl
bound
test
mov
stc
stc
imul
in
inc
mov
icebp
stos
dec
imul
cmp
or
es
sbb
sub
mov
xor
or
sbb
inc
scas
in
dec
idivb
sbb
jle
or
lods
mov
lock
lret
div
leave
add
mov
mov
fildl
dec
pop
jmp
mov
pusha
cmpsl
repz
jecxz
mov
into
sub
mov
fld
outsl
adc
push
cmp
mov
shr
adc
mov
movsb
push
xchg
adc
sbb
jmp
in
pop
jnp
add
mov
fwait
hlt
insb
mov
add
xor
sub
or
pop
or
loope
cmp
sub
fucomip
push
push
pushf
rorl
xchg
push
pop
lds
xor
inc
jp
xchg
inc
sbb
pop
xor
push
fwait
aaa
pop
lock
fildl
testb
mov
popf
jns
stos
push
movsb
pop
fdivrp
and
std
orb
dec
je
jle
loop
xchg
xor
xor
out
xor
es
stos
mov
adc
in
push
add
sub
pop
lock
push
mov
gs
dec
xor
mov
fisttpll
repnz
jae
jge
sub
dec
cmp
xor
and
mov
loopne
sub
xor
out
dec
jle
sub
int3
pop
add
push
movb
in
imul
dec
aaa
ret
or
cmp
hlt
imul
in
aad
pop
push
ret
jge
cmp
loope
fwait
addr16
in
push
data16
divl
cmp
sti
shrb
fs
sub
mov
bts
and
and
cmp
scas
scas
ss
and
push
jne
es
push
pusha
inc
xor
popa
movl
shrb
add
shlb
sub
es
adc
push
cmc
sub
into
mov
inc
add
jl
pop
notl
jo
ret
sbb
or
in
leave
mov
dec
push
mov
hlt
testb
enter
inc
test
lahf
sbb
in
sub
cmp
inc
test
mov
sbb
cmpsl
lods
sub
fs
sahf
mov
data16
ss
in
sub
imul
and
movsl
cmp
in
fsubrs
mov
cmp
sub
mov
mov
ss
fiaddl
add
in
xchg
loope
dec
dec
outsb
fnstcw
xchg
popf
aas
pop
and
mov
mov
shrb
lret
xorb
mov
imul
pop
ja
xor
pusha
sti
push
dec
sti
xchg
shrb
sub
cmp
pop
jmp
leave
ret
pop
sarb
rolb
mov
pop
addr16
loop
push
je
data16
outsl
push
lcall
xchg
xchg
movsb
sub
sbb
pusha
mov
and
scas
xor
pop
push
cmp
fistl
cmp
hlt
out
sbb
sarb
add
cwtl
push
mov
test
mov
movsl
and
push
rol
repz
loop
outsb
mov
add
icebp
fldcw
or
inc
push
add
dec
or
or
mov
lds
sahf
xor
in
aam
sub
dec
gs
stos
aaa
push
add
sub
jbe
lds
test
push
add
cmpsl
jnp
push
bnd
hlt
and
mov
xor
std
ds
lods
xlat
je
push
jb
pop
test
push
inc
cmp
push
xor
mov
push
aad
in
bound
jge
iret
and
lods
push
jmp
pop
inc
mov
test
and
dec
fcomp
adc
stc
mov
test
adc
ret
test
sub
jb
dec
cmpsl
pop
dec
insb
scas
les
mov
jnp
inc
and
mov
adc
repz
sahf
push
xchg
add
push
pop
ret
inc
and
cmp
test
sub
sbb
lock
je
pusha
push
lock
push
lret
dec
scas
mov
inc
or
jno
lret
mov
and
sbb
scas
pop
sub
xor
mov
xchg
lret
jmp
out
jmp
dec
push
ret
outsb
into
das
cltd
adc
cmp
pop
cmc
pushl
fbld
xchg
stos
add
add
rolb
mov
notl
sub
mov
nop
cmpsl
jo
sub
push
add
test
ja
mov
out
xchg
sub
inc
leave
push
cmp
sbb
popf
mov
sbb
pop
sub
clc
bound
mov
jo
bound
shrl
repz
cld
push
sub
test
imul
stos
dec
sub
shll
pusha
xchg
xchg
lods
jge,pt
jmp
das
out
ret
or
pop
inc
jge
sub
icebp
or
sti
lods
push
pop
cmp
push
pop
xlat
in
push
jmp
popa
push
outsb
sbb
outsl
jle
js
xlat
sub
xchg
dec
mov
sub
dec
jbe
xor
lret
not
sti
call
mov
cltd
test
push
mov
ret
cli
cld
and
xchg
mov
mov
das
mov
mov
ja
lods
xchg
xor
ret
push
int
mov
scas
int
cmp
jb
cwtl
cmpsl
popf
pop
adc
sub
cmp
movsl
inc
sub
push
push
pop
call
ds
sbbl
sbb
int3
adc
pop
adc
mov
es
in
mov
stos
addr16
push
lods
shll
inc
das
inc
cmp
mov
cmp
lahf
pop
xor
cli
inc
jnp
mov
mov
negb
mov
cmp
iret
ss
arpl
mov
mov
xor
inc
mov
fs
pop
jmp
mov
shlb
mov
or
repz
xchg
dec
out
insl
jp
and
test
or
adc
pop
movsl
stos
xor
loop
icebp
mov
xchg
out
inc
fcmovb
sbb
and
mov
mov
and
add
add
dec
push
loopne
inc
fisubrl
addr16
push
fstl
lock
sbb
aad
fistl
or
stos
add
add
dec
xor
or
aas
outsl
xchg
outsb
xchg
ror
test
xchg
out
push
and
test
push
addr16
frndint
and
adc
jns
mov
adc
out
push
loopne
cmp
stos
jnp
cmpsb
adc
clc
or
xchg
and
push
inc
call
and
push
test
stos
shll
out
out
sbb
bound
inc
test
sbb
mov
push
push
ret
mov
mov
dec
lock
sbb
shl
sbb
in
loop
std
xchg
push
push
push
pop
add
mov
pop
push
movsb
cmpsb
sbb
cmp
jl
or
and
scas
scas
imul
xor
sub
xlat
inc
sub
test
nop
jle
ljmp
add
jp
repz
ljmp
push
imul
lds
mov
cmp
hlt
ljmp
lods
outsl
pop
btc
es
rorl
pop
fnstsw
jp
cmpsb
repz
ret
or
jmp
dec
jbe
fstl
push
sub
popf
stos
inc
add
adc
xor
sub
cmp
outsl
xlat
ret
adc
cli
or
pop
mov
sahf
arpl
push
or
add
subl
or
insl
xchg
sbb
jno
lds
push
cli
fistps
call
dec
inc
jmp
or
in
int
outsl
fidivs
pop
test
xchg
and
cmpsb
lds
ror
add
mov
push
xor
test
clc
iret
inc
dec
sbb
xor
movsb
iret
int
cmc
into
dec
int3
fs
out
sub
and
and
mov
push
imul
sub
cmp
add
mov
in
push
push
popa
dec
xor
mov
pusha
ds
jp
cmc
shrl
mov
pop
mov
add
mov
push
push
jnp
push
ret
and
leave
mov
gs
orl
mov
or
cmp
mov
sbb
into
fimull
add
sbb
addr16
frstor
les
in
sub
sahf
push
sub
dec
jge
cmp
imul
xor
dec
shll
pop
mov
leave
xchg
test
xchg
sarb
sbb
push
mov
cmp
push
mov
push
lahf
sub
stos
add
lock
outsb
inc
push
add
inc
xchg
dec
addr16
adc
add
push
sub
stc
das
dec
jle
ja
mov
mov
fsubl
and
ljmp
jno
xor
lock
dec
inc
mov
pusha
loope
movb
push
pop
fdivs
push
dec
jmp
cmp
xchg
in
pop
push
out
pop
enter
push
mov
shrb
inc
sub
rcl
nop
mov
rcrl
std
push
js
bound
push
add
bound
cs
aam
mov
mov
jmp
inc
shll
cwtl
loop
ret
aaa
hlt
sub
jmp
pop
adc
lock
pop
dec
push
cltd
jle
adc
pop
pushf
repnz
cmpsl
mov
mov
pop
inc
mov
jle
hlt
fwait
cmp
std
into
je
xor
cmpb
lock
test
xchg
pop
mov
mov
jecxz
in
loope
dec
movsb
dec
sub
or
dec
jae
mov
pop
dec
lret
in
ljmp
jb
inc
test
or
jmp
mov
sbb
sarb
or
cmc
aaa
fs
in
lods
sbb
rorb
sub
loope
add
sub
lret
stos
pop
mov
mov
cmc
pop
pop
or
insl
xchg
fiaddl
push
in
mov
jp
sbb
test
fisubrl
mov
push
push
lods
ss
sub
fisubrl
jmp
por
lock
fnstenv
aas
xlat
sub
movsb
xchg
cs
stc
dec
or
sbbl
cmc
bound
push
int
add
fisubrl
in
out
fisubl
stc
insb
je
das
jmp
sarl
adc
insl
ret
mov
imul
lock
sub
lea
xor
imul
sbb
test
movsb
sbb
push
mov
or
dec
xchg
mov
inc
sub
and
insb
cmp
sbb
sbbb
test
lret
fisubrs
ljmp
rcrl
imul
fistps
mov
lret
dec
xchg
insl
enter
push
mov
push
and
dec
rolb
push
and
test
insb
mov
pusha
pop
adc
sub
add
pop
imul
sub
gs
jno
xchg
in
jg
mov
and
out
push
test
mov
jmp
es
cmp
sarl
mov
push
mov
dec
sahf
push
ljmp
or
or
imul
imul
test
cld
xlat
mov
pop
test
ljmp
push
xor
jp
dec
mov
mov
pop
xor
pop
xchg
mulb
lock
push
mov
int
pusha
xchg
fiaddl
inc
mov
cmp
xor
mov
loopne
out
repz
jmp
test
pop
imul
loope
jne
daa
fisttpll
dec
and
outsb
inc
mov
addr16
in
int3
rclb
add
lock
xchg
aad
mov
aad
fstpl
mov
jae
pop
cmpsb
mov
sub
push
adc
push
inc
add
insl
insb
cld
mov
or
mov
pop
push
or
data16
push
nop
ret
jno
inc
adc
call
in
dec
stc
or
jle
aaa
call
movsl
lock
lods
rcrb
and
jle
mov
das
sbbb
sbb
push
std
pop
adc
xor
pop
wrmsr
arpl
sub
inc
loop
popf
fcomps
jmp
or
cmpl
pop
pop
push
push
jnp
dec
mov
enter
add
aaa
or
rol
loope
lock
int3
lret
sub
mov
nop
push
cmp
fistpll
dec
push
sub
push
gs
outsb
inc
sub
push
aaa
rorl
call
mov
push
sarb
adc
jecxz
inc
sub
push
lea
shrb
shl
jmp
setg
into
fildll
mov
inc
jns
add
lahf
sub
xor
cmc
fstpl
pop
fiadds
push
lret
outsl
add
pop
stos
sbb
inc
lock
je
stos
aad
push
notb
sar
sbb
cmp
push
iret
and
sub
jne
fld
sub
xlat
mov
movsl
data16
sbb
adc
out
pop
pop
xor
mov
mov
xchg
out
mov
inc
psubb
lahf
pop
adc
test
lock
test
push
xor
loope
push
inc
xchg
xor
mov
jae
aam
adc
xchg
sub
add
mov
repz
sub
sti
into
adc
or
mov
jmp
xor
add
xor
in
mov
push
and
test
mov
sub
les
and
gs
mov
lcall
xchg
push
mov
cmp
ds
lea
dec
in
dec
adc
xchg
pushf
sub
or
loopne
aam
and
or
cmp
outsb
cmpl
sbb
lods
push
movsb
test
mov
mov
pop
dec
frstpm(287
jp
adc
std
ret
pop
mov
fcomi
testl
xchg
jp
mov
scas
bound
mov
imul
enter
and
mov
adc
shrl
dec
push
andb
fisubs
fidivrs
mov
jno
cli
cld
arpl
outsl
pusha
mov
or
inc
pop
stos
push
fstps
aas
pop
inc
xchg
mov
cmp
cwtl
xchg
stc
inc
jb
mov
push
inc
movsl
push
adc
push
lea
push
sbb
out
jmp
add
jbe
pop
dec
and
fstps
ljmp
sahf
insl
int
pop
jmp
xchg
push
aas
mov
stos
sbb
or
cmp
xchg
hlt
and
push
in
adc
lret
pushl
inc
add
aas
pop
mov
arpl
and
inc
push
aad
inc
push
mov
xchg
pop
or
xchg
xor
insb
mov
push
in
jb
push
js
pop
test
test
mov
test
mov
mov
or
add
outsb
mov
pusha
xor
cmp
les
mov
jnp
popf
lret
add
out
cmp
mov
daa
imul
aas
sub
lock
and
outsb
mov
stc
data16
sbb
mov
inc
movsl
xor
jmp
sub
add
call
in
mov
subl
push
hlt
lahf
fsubs
int
and
insb
addb
cmp
push
inc
dec
or
sti
xchg
push
xchg
pop
lock
jp
les
pop
out
inc
popf
pusha
mov
outsb
inc
xlat
cmp
pop
jmp
rorb
sub
loop
in
sub
lock
mov
mov
cmpsl
aam
cmp
cmp
sahf
mov
fisubrs
lds
mov
sahf
mov
cmp
cmpb
outsb
xor
push
call
push
scas
ja
dec
jmp
inc
jb
mov
neg
jmp
push
iret
sti
and
dec
or
cld
push
jecxz
cltd
pop
add
scas
ja
popa
out
push
mov
cmp
popf
ds
lock
lds
sub
fs
repnz
xor
int
jbe
or
cmp
stos
adc
aaa
ret
and
sbb
sahf
mov
pop
mov
sub
divl
xchg
cmpb
jb
es
icebp
cli
lock
and
and
mov
mov
xchg
lcall
cmpb
adc
or
push
sub
mov
push
or
out
imul
pop
rcrb
pop
mov
idivb
mov
repz
push
rclb
xchg
sbb
pusha
and
outsb
orb
lds
ss
mov
out
xor
sub
push
mov
and
sub
push
pop
aam
pusha
pop
jg
scas
xor
in
sbb
stc
fcom
lea
sbb
pop
aad
mov
push
movl
mov
xor
or
jle
outsb
ja
and
mov
mov
pop
jl
imul
xor
dec
cwtl
pop
jmp
into
xchg
add
xchg
movsl
or
test
lret
test
cmp
sahf
cmp
push
repz
scas
daa
pop
push
cmp
push
inc
jge
ljmp
jo
mov
loope
addr16
push
mov
sti
push
out
pop
into
cmpsb
xchg
cmp
inc
mov
flds
push
je
mov
icebp
lret
xchg
push
dec
xchg
outsb
pop
and
adc
fldcw
push
cmpsl
pop
jns
pop
adc
xor
aad
sarb
mov
push
pop
or
adc
xlat
push
xor
xor
std
ljmp
call
xor
mov
imul
out
iret
out
fistps
jae
jle
repz
out
fisttpl
or
out
imul
inc
jp
mov
sahf
dec
lea
cmc
xor
pop
adc
fsub
inc
pop
mull
into
bound
mov
loopne
mov
inc
adc
push
sub
fsubr
imul
in
rorl
mov
push
mov
xor
adc
rcll
push
mov
lock
lahf
insb
cmp
or
leave
repnz
and
dec
jp
in
pop
cli
sub
add
pop
add
inc
sahf
in
idivb
push
je
pop
sbbl
outsl
add
das
inc
add
in
sub
pop
test
out
mov
fs
loop
mov
push
roll
mov
add
nop
pop
rcr
cmpsl
arpl
shrl
sub
in
lods
shl
mov
mov
outsb
imul
pop
gs
mov
stc
movsl
add
push
cld
or
add
sbb
iret
mov
lret
mov
lret
mov
fisttps
icebp
sbb
clc
stos
sub
push
mov
jp
or
xchg
xor
push
cmp
xchg
sti
push
out
dec
inc
inc
inc
dec
arpl
scas
lock
cmc
dec
int
cmpsl
mov
fwait
xchg
stos
das
pop
fists
lods
outsl
xchg
jno
sub
lods
adcl
mov
mov
mov
dec
in
dec
out
rolb
insb
test
add
xor
pop
roll
stos
sbb
loope
push
pop
xchg
push
lock
lea
mov
clc
mov
lretw
adc
sti
add
out
cmp
adc
cmp
mov
js
scas
pop
leave
ljmp
mov
in
test
sub
loope
xor
arpl
mov
cltd
and
pushf
lods
mov
lahf
dec
xchg
fldcw
push
sahf
adc
je
repz
call
sub
pop
stc
jnp
dec
xchg
cmpsb
adc
test
mov
out
adc
and
jge
pop
xchg
mov
je
lods
out
cli
int3
sub
mov
lock
mov
shlb
xchg
lock
loope
dec
orl
shll
cld
repnz
adc
mov
bound
cmpl
rcrb
clc
addr16
popw
dec
mov
jp
out
adc
mov
xchg
insb
push
loope
addr16
ljmp
divl
dec
dec
ret
inc
out
out
imul
lret
xchg
cld
aas
stos
mov
mov
mov
push
test
aas
or
decl
xchg
adc
pop
inc
push
push
dec
push
pop
out
lock
mov
xchg
dec
lds
mov
cmpl
push
shl
lock
lods
push
rclb
xor
inc
rol
jns
jg
push
pop
imul
adc
mov
push
aaa
inc
and
iret
add
mov
imul
popf
add
sti
int
pusha
lock
insb
mov
mov
in
test
lcall
ret
pop
arpl
jne
dec
repz
mov
fnstenv
or
xor
sub
sub
xor
sub
int
ja
push
or
cmp
xchg
dec
push
jno
sub
push
jnp
imul
cmpsl
or
mov
cmpsl
cmp
stos
push
rcrb
fiaddl
inc
loopne
clc
call
lahf
or
fwait
pop
pop
jmp
fdiv
or
add
stc
lods
fistl
push
add
push
cmp
jle
inc
movsl
bound
iret
sbb
pop
ret
or
popa
xchg
pushf
leave
lea
sahf
loop
lret
xchg
xchg
mov
add
fwait
xchg
cmp
pusha
dec
pop
lock
loopne,pt
pop
rorb
pop
filds
pop
xor
cmp
imul
xchg
pop
and
data16
jge
push
xchg
stc
jae
lock
and
cmpsb
mov
ja
jp
sbb
in
cmpsl
xchg
int
lods
xor
in
dec
inc
into
loope
push
jb
or
imul
clc
pusha
inc
and
imul
jns
imul
dec
pusha
mov
xchg
bound
pop
bound
in
rolb
cmpsb
adc
xchg
divl
mov
add
ljmp
mov
out
push
jb
cmpsl
mov
jo
cmp
xchg
jmp
adc
sti
add
xchg
je
mov
imul
insb
jnp
jb
sub
inc
fisubs
xchg
xchg
xchg
inc
popf
sbb
flds
xlat
loop
inc
in
push
mov
dec
jb
test
cli
mov
mov
sbb
mov
lret
hlt
cli
ljmp
cmpsb
sbb
popf
addr16
jge
or
xchg
cmpsb
test
xor
mov
fwait
or
imul
sub
mov
cmpsl
addr16
dec
push
xchg
sbb
dec
sbb
inc
adc
xchg
xor
xchg
xchg
mov
sti
xor
sub
mov
imul
iret
gs
or
sub
lock
ljmp
bound
inc
popa
mov
add
xchg
iret
imul
push
dec
push
lret
xchg
adc
jecxz
pcmpeqw
shl
add
push
and
xchg
test
aam
pusha
inc
ret
adc
cmp
mov
fists
lods
xchg
add
pop
dec
imul
subl
adc
pop
inc
or
mov
cmp
filds
push
adc
sti
push
scas
push
pop
stos
shll
lods
imul
sub
bound
pop
inc
mov
inc
gs
gs
mov
bound
scas
inc
mov
add
das
cmpsb
jbe
sub
mov
sub
add
xchg
fisubs
xchg
pop
jmp
addb
adc
pop
push
jmp
mov
aad
sahf
ja
lock
gs
mov
xor
mov
mov
sub
fisubl
sbb
xchg
subb
hlt
push
push
imul
insl
xchg
test
add
xchg
or
sbb
stos
push
mov
and
je
fs
push
mov
jae
xor
and
outsl
inc
int3
popa
or
cld
adc
dec
push
mov
scas
aam
mov
mov
push
std
out
dec
and
ror
ljmp
xchg
stos
xchg
movsl
pop
gs
pop
or
ret
pop
push
mov
lock
out
out
xchg
push
jnp
repnz
jle
loope
sub
xor
push
scas
inc
stos
scas
push
inc
test
xor
lea
dec
aam
negl
mov
push
adc
out
add
in
sarb
mov
lock
jmp
add
inc
push
ljmp
inc
sti
pusha
cmpsl
repz
sahf
mov
inc
push
cmp
icebp
aad
out
call
mov
pusha
jnp
mov
mov
sub
rcr
add
xchg
adc
xchg
ret
dec
jle
cmpsl
mov
sarl
pop
out
ret
lock
mov
add
mov
mov
dec
push
mov
jg
xchg
and
repnz
sbb
cmp
fadds
sti
dec
cmp
cmp
mov
jne
sbb
mov
cwtl
push
pushf
rcrl
addr16
insb
pop
roll
ljmp
test
jecxz
imul
xor
mov
jp
mov
mov
jge
test
push
push
test
inc
aam
jns
mov
shrl
out
push
ja
sub
aad
subb
push
xchg
sti
hlt
pop
jmp
clc
subb
out
ljmp
loopne
pop
pop
sti
xchg
sbb
pop
icebp
cs
jp
dec
pop
addr16
mov
fs
and
mov
icebp
xor
cmp
jns
xchg
xor
es
arpl
out
les
inc
movsl
push
xchg
xchg
imul
in
ror
push
out
sub
cmp
inc
jmp
mov
cwtl
dec
adc
aas
sbb
in
or
or
rclb
das
mov
xchg
mov
sahf
push
push
aaa
sarl
xchg
ror
inc
mov
mov
or
mov
movsb
imul
int3
mov
push
mov
aad
mov
fwait
insl
add
mov
add
xor
sub
mov
pop
int3
ds
adc
int
popa
push
jmp
rcr
jmp
lahf
add
sub
dec
adc
lods
mov
mov
mov
mov
in
xchg
push
cmp
push
das
movsl
jb
add
lret
ficoml
sbb
sbb
or
pop
sti
fs
sub
sub
dec
cli
xchg
xor
cli
fildl
mov
movsl
fcmovu
out
xchg
push
scas
xchg
mov
mov
lock
subb
lods
mov
xor
jecxz
cli
adc
push
aam
push
lock
jge
add
add
mov
or
jo
popa
movsb
fistl
popa
pop
mov
leave
incb
mul
pusha
pop
or
inc
cmp
cmp
test
xor
test
xchg
and
cld
cmp
test
mov
int3
dec
rclb
lea
add
scas
hlt
pop
xchg
sub
mov
repz
push
out
fnstsw
jp
add
pop
push
mov
or
fwait
lock
push
mov
sbbb
mov
pop
xchg
jle
xchg
push
addr16
add
lret
scas
xor
lret
xchg
inc
sbb
loope
popa
outsl
pop
imul
or
fsub
mov
stos
dec
mov
adc
adc
cld
shrl
jl
sbb
or
cwtl
mov
popf
dec
roll
out
jne
outsb
aaa
mov
imul
jmp
mov
xor
dec
sub
push
jecxz
dec
push
lods
inc
nop
iret
dec
jg
test
cli
shl
scas
inc
push
scas
push
jns
push
sti
push
data16
sub
xor
popf
out
pop
sbb
fucomp
dec
lret
loope
mov
add
stos
push
push
mov
test
mov
or
sub
mov
sub
cmp
adc
pop
outsl
dec
loopne
les
sbb
jl
shll
jae
mov
pushf
xor
cmp
pop
xchg
inc
stos
sbb
xchg
clc
xorl
cmp
idivl
loopne
fadds
xor
pusha
test
inc
mov
data16
jne
xchg
xchg
vaddps
movsl
jg
shl
je
ret
xor
leave
xor
xorl
jnp
addr16
pop
push
pop
outsb
pop
sub
aas
mov
mov
push
adc
push
pop
push
callw
inc
je
mov
or
push
cmp
cmpsl
lock
fstl
xchg
aad
addr16
testb
pop
or
sub
adc
adc
lret
mov
adc
or
je
insl
pop
imul
sub
std
mov
jmp
jae
mov
ret
in
insb
cmp
mov
or
mov
sti
lahf
mov
push
dec
pop
cmp
inc
lock
test
mov
adc
xchg
cmovns
outsl
jno
pushf
mov
push
lock
jg
cli
cmp
shl
xor
jnp
shrl
insb
dec
pop
sub
negb
mov
in
xor
cs
sti
sub
insb
into
jae
inc
xchg
fwait
js
rcll
shlb
sub
pop
shl
mov
cmp
loop
and
add
pop
pop
iret
insl
enter
fsub
cmp
pop
mov
orb
sub
adc
int
shrl
int
cmpsl
ret
popf
sbb
imul
sub
ljmp
sub
pop
push
push
push
mov
scas
jmp
jmp
repz
push
push
add
push
inc
dec
ja
imul
xchg
movsl
insl
les
mov
fsubrs
xor
loope
push
stc
add
xlat
or
lret
mov
movsb
push
data16
xor
leave
jecxz
int
jecxz
push
hlt
xchg
or
jns
xchg
cmp
clc
xchg
lods
inc
mov
stos
push
aad
imul
dec
dec
dec
jns
aad
test
jl
fisubrl
mov
cltd
or
scas
mov
gs
jl
jo
outsb
jb
fsubrl
or
xor
sti
cmp
inc
pop
rcrl
cmpl
inc
adc
pop
fistl
dec
sub
daa
pop
push
out
cs
lret
cli
push
rcrb
jle
xor
xor
jbe
pop
gs
ret
jmp
mov
mov
push
jp
xchg
movsl
lock
jp
xchg
sub
push
int
cmp
cld
add
push
or
or
jb
aam
sti
mov
adc
add
adc
test
jmp
dec
adc
in
push
arpl
cmc
mov
fisttps
dec
cmp
mov
je
inc
in
mov
add
neg
jmp
xor
int3
or
inc
mov
cmpsl
xor
dec
inc
out
outsl
jp
sti
add
or
xor
sbb
popa
fisttpl
or
scas
pop
jl
add
cmc
xor
imulb
jns
sahf
lock
cli
inc
push
mov
fsubp
push
aad
dec
xchg
imul
inc
pop
bound
jo
mov
dec
ss
lock
std
jmp
enter
pusha
cmpsb
lds
jae
xor
je
aad
in
inc
popf
push
mov
cli
push
clc
adc
dec
push
repz
pushf
fidivrl
mov
out
mov
cwtl
or
push
mov
hlt
add
mov
mov
outsb
mov
mov
aad
clc
hlt
inc
jcxz
sub
pusha
pop
mov
pushf
mov
clc
push
mov
and
in
inc
jbe
pop
sbb
mov
fnstenv
adc
addr16
mov
es
xchg
mov
sbb
xchg
testb
stos
or
leave
out
xor
out
xchg
into
arpl
testb
out
mov
sub
xchg
leave
push
jl
mov
xor
or
ss
or
push
pop
lods
gs
mov
pop
pop
dec
add
cmp
jle
lcall
stos
sub
mov
aaa
lock
mov
mov
fidivl
repnz
loop
int3
adc
roll
inc
dec
sahf
xor
testl
ljmp
out
fistps
ret
pop
xor
lds
sarb
cmovno
and
shl
gs
pop
mov
out
ja
add
push
mov
leave
mov
test
pop
xchg
xor
jae
fmull
imul
lcall
adc
les
lock
or
cmp
mov
jg
inc
shrl
pop
jle,pn
xchg
fnstcw
ret
mov
mov
push
lock
add
bound
pop
mov
shlb
and
sti
mov
push
lods
xchg
xchg
inc
cmp
imul
mov
or
mov
add
cmp
push
dec
dec
les
lods
imul
jo
xlat
imul
aas
sahf
or
add
push
cli
sbb
adc
mov
cmp
xorb
sahf
scas
sbb
or
sub
lcall
sub
dec
jp
sbb
je
scas
repnz
in
ss
push
lock
pop
ljmp
sbb
ret
mov
sbb
mov
in
rcll
mov
test
pop
int3
pop
inc
sub
push
dec
out
push
cli
adc
maxps
gs
cmpsb
out
and
push
cltd
dec
xor
stc
xor
jbe
cltd
or
lock
dec
cmp
xlat
test
fisubl
bound
push
push
jp
pop
push
sub
xlat
pushf
push
lret
and
negl
inc
push
or
mov
mov
in
mov
mov
lea
push
push
push
dec
or
mov
loope
test
jle
sahf
pop
sahf
sub
lock
dec
adc
adc
pop
sahf
bound
xchg
xor
aas
adc
dec
int
add
movsl
xor
popa
mov
mov
out
ret
jne
or
movsb
add
push
inc
mov
or
jnp,pt
push
pop
shlb
jecxz
stc
and
je
repnz
lock
push
xchg
subb
pop
sub
pusha
mov
xor
jge
jae
pop
pop
rolb
adc
push
mov
cmp
xor
push
popf
xchg
xor
adc
into
call
std
xchg
scas
in
push
inc
insb
cmc
cmp
sub
cmpsl
xchg
shlb
jno
pop
pop
cmp
inc
push
jle
push
mov
in
lahf
dec
dec
jmp
jp
dec
shrb
clc
mov
rcrw
jp
mov
mov
movsb
jecxz
stos
pusha
clc
aad
in
mov
inc
je
jp
xchg
adc
pusha
stos
adc
aam
pop
jp
push
jp
gs
icebp
aad
pop
push
inc
lret
jl
es
imul
leave
ror
es
cmp
xchg
jnp
mov
fstpt
scas
mov
xchg
fdivl
xor
and
test
cli
adc
dec
sti
in
shr
add
sbbb
mov
cmp
adc
mov
or
xor
push
insl
sbb
aad
aas
jmp
push
ret
dec
push
dec
stc
sbb
xor
nop
or
fs
in
lahf
out
mov
xchg
out
mov
sti
ja
scas
lods
jns
mov
pop
dec
push
dec
inc
xchg
test
push
mov
jg
jmp
mov
lock
dec
xchg
dec
add
mov
test
pusha
and
in
das
and
push
pop
test
or
dec
and
inc
fbstp
adc
imul
adc
lock
fstp
out
repnz
xchg
cmp
outsl
imulb
pop
add
mov
std
enter
pop
push
int
scas
dec
lock
xchg
and
addr16
push
test
sbb
push
stos
imul
sbb
mov
mov
xor
mov
stos
adc
imul
dec
push
mov
sarb
fstpt
sub
inc
es
mov
inc
lods
addr16
xchg
leave
pusha
lock
jmp
in
scas
je
mov
popa
repnz
xchg
dec
pop
inc
adc
add
mov
out
pop
loop
xchg
sub
cld
fsubrl
or
mov
xchg
push
nop
addb
outsb
cmpsl
mov
xchg
push
fbstp
insl
mov
roll
add
dec
pusha
adc
loopne
aad
call
inc
mov
jb
mov
movsl
addr16
shl
push
sub
push
jns
add
add
sub
mov
push
subb
aas
ljmp
xchg
xchg
data16
movsl
lret
js
xor
push
sub
and
push
fcom
aas
xchg
xchg
aad
adc
cmp
hlt
add
in
jnp
cld
imul
jb
push
lret
lock
andb
xchg
dec
clc
in
lret
pop
mov
in
test
and
mov
cmpb
loope
adc
negb
xor
push
test
ret
out
xchg
in
xchg
mov
xor
pop
xchg
pushf
das
pop
push
jg,pn
fnstsw
repz
adc
or
pop
add
adc
cmc
sbb
sub
imulb
push
out
out
jb
pushf
sub
or
movsb
sub
inc
mov
cltd
stos
mov
and
ficoml
leave
push
in
jbe
cmp
jo
sbb
pop
pop
aam
xor
loop
inc
pop
sub
outsl
sub
adc
aaa
sub
mov
sbb
fwait
scas
daa
cmc
das
ja
sub
xor
lret
cwtl
push
rcrb
sbb
pop
leave
adc
jo
xchg
sub
movsl
add
movl
jg
test
xchg
lock
ljmp
pushf
sbb
orl
mov
popa
mov
imul
out
pop
rorl
imul
sub
addr16
cmp
ror
sub
cs
mov
mov
mov
inc
mov
fs
fildll
sub
hlt
cs
pop
xchg
sub
jp
push
ss
insl
sub
je
sbb
sbb
dec
out
mov
mov
jae
jns
mov
dec
push
loopne
gs
and
sub
lea
fucomip
add
sub
outsl
cmpsl
add
mov
sub
adc
sub
sahf
bound
test
push
mov
pop
sub
push
fisubrs
jmp
sbb
mov
or
sti
repz
push
cmp
xlat
jmp
pop
mov
mov
cmpsl
les
mov
sub
cwtl
out
pop
jp
and
mov
sti
clc
or
sub
pop
aas
js
push
xor
xlat
popf
mov
fsub
mov
andl
inc
in
sub
mov
out
pop
sub
jb
pop
in
sarb
xor
test
xlat
sbb
repz
or
xchg
and
addr16
dec
es
dec
adc
test
or
mov
stos
popf
sub
sarl
jmp
stos
mov
push
stc
add
adcl
lret
dec
pop
adc
pop
pop
cli
orb
pop
sub
dec
dec
pop
js
jne,pn
mov
test
lods
rcl
mov
fdiv
fistpl
jecxz
pop
mov
das
jae
mov
jns
ljmp
dec
dec
dec
cmp
inc
and
cmp
dec
inc
push
sub
mov
or
sbb
mov
sub
mov
inc
sub
pop
pop
push
test
addr16
dec
push
ficomps
and
xor
sbb
add
inc
add
outsl
aas
cmpsl
or
sub
sub
sub
shlb
dec
subb
pop
ljmp
mov
cmpsb
mov
popa
inc
ja
addr16
out
xchg
cmp
cmp
fmuls
flds
jecxz
jne
ret
insb
test
mov
mov
push
cmp
push
push
ljmp
mov
inc
add
sarb
cltd
and
add
jne
and
loop
push
sarb
enter
adc
pusha
test
in
or
mov
fimull
test
xorb
push
enterw
outsl
dec
stc
mov
mov
add
mov
ret
push
inc
outsl
pop
test
das
dec
cmp
outsb
popaw
jno
repnz
and
cmpsb
ds
add
sub
xchg
ja
nop
int3
cmpb
lahf
inc
std
mov
jge
cmp
leave
push
push
mov
test
ja
sub
sub
xchg
sub
in
jmp
sub
in
and
popf
xchg
lods
test
push
push
mov
inc
xor
fwait
outsb
lds
icebp
lea
or
xchg
or
xchg
or
out
inc
bound
imul
push
sbb
aad
cli
mov
cmpsb
dec
xchg
cmpb
inc
loop
add
dec
dec
sbb
dec
or
pusha
iret
loope
sbb
jae
inc
cltd
pop
rcll
scas
aaa
sub
in
mov
push
imul
and
push
les
mov
and
sub
dec
outsl
lret
scas
mov
test
cmp
ds
mov
fstps
cmpsb
cld
xor
jle
aad
mov
adc
sbbl
pop
jmp
out
dec
cmpsb
mov
adc
shrb
mov
cmp
mov
sbb
sub
mov
sbb
fwait
jbe
jmp
mov
lahf
lock
jb
mov
sub
lahf
sub
fsubp
add
adc
ss
ljmp
inc
xor
movsb
and
add
out
sub
in
add
test
sbb
lahf
mov
inc
sbb
pop
js
xor
es
xchg
pop
sub
sbb
xchg
push
arpl
loop
pop
sub
sub
rcl
call
cmp
cmpsb
dec
nop
gs
xchg
pop
push
inc
lcall
cmp
pop
push
xchg
push
loop
jnp
sub
push
mov
push
les
shrb
lea
sub
sub
adc
sub
lods
repnz
rcll
ljmp
aaa
pop
sub
mov
test
out
testl
push
sub
xor
dec
xchg
outsl
frstor
lock
or
sub
cmp
mov
decb
mov
sbb
in
call
ljmp
xchg
push
ljmp
jl
or
xchg
dec
cmpsb
lret
push
push
jns
push
stos
insb
sub
lahf
ficoml
rorb
xchg
fs
ljmp
arpl
cmp
nop
sub
mov
popf
sub
jne
mov
pop
int
test
jl
scas
mov
push
or
inc
jmp
xor
enter
ljmp
repnz
mov
fnsave
pop
test
orl
push
dec
fsubrl
js
mov
mov
or
ljmp
jmp
cmp
in
adc
mov
dec
jmp
out
into
push
inc
inc
insl
sub
adc
ror
push
loop
inc
inc
xchg
pop
mov
loopne
dec
pushf
sub
xchg
mov
sub
push
in
mov
out
sub
mov
daa
and
out
sub
mov
and
cmpsb
sub
pop
call
repnz
mov
add
sub
in
sub
add
lcall
mov
loop
call
mov
aam
xor
ret
imul
inc
xlat
inc
loopne
dec
shrb
jbe
xchg
xchg
lods
pop
ljmp
int3
and
mov
sbb
dec
shlb
mov
cltd
decb
mov
data16
push
dec
out
pop
lock
mov
sub
ja
cmc
ljmp
jnp
cmp
addb
ljmp
add
xlat
sub
add
or
and
jnp
sub
mov
mov
cmpsl
test
xor
dec
in
pop
pushf
adc
sub
inc
stos
xchg
inc
sub
test
adc
or
pushf
in
popf
call
testl
test
pop
loope
dec
jns
add
lods
std
stc
lahf
iret
or
xchg
hlt
ljmp
nop
cmp
mov
in
arpl
bound
imul
aaa
sub
icebp
sub
ss
shll
sub
mov
sub
outsl
adcl
sub
dec
xchg
sbb
cmp
dec
cmp
pop
xor
test
insl
ljmp
inc
dec
es
push
call
cmp
jno
sbb
shlb
cmp
cmp
cs
mov
xchg
xchg
and
push
mov
xor
push
pop
mov
pushf
mov
adc
sbb
sbb
sbb
inc
lret
mov
push
mov
popl
xor
mov
pop
cmp
hlt
sub
lret
pop
mov
fwait
inc
sbb
sbb
fiadds
cltd
push
int
stos
xchg
inc
fwait
mov
cld
jns
stos
mov
sub
lock
iret
jmp
sub
xchg
jmp
lahf
cmpsb
xchg
jg
aaa
outsb
xor
xor
lock
xchg
pop
mov
in
mov
inc
xchg
std
jne
aam
in
in
das
dec
sbb
ds
stc
loop
dec
aam
in
les
sub
mov
adc
push
cmp
xor
push
dec
les
insb
inc
or
out
in
push
adc
sahf
mov
jg
mov
sarl
and
stos
inc
xlat
inc
inc
push
mov
and
cmp
in
insb
xor
lret
mov
sub
sbb
and
aas
mov
out
xchg
cli
mov
scas
sub
push
lock
cmp
pop
or
or
aad
js
mov
mov
or
dec
and
ss
xor
call
adc
xchg
push
mov
jae
orps
repz
imul
imul
cld
pop
ss
lods
mov
xor
lret
sub
xchg
ja
sahf
fsubr
adc
xor
sub
inc
cld
int
adc
rcrb
or
xchg
adc
les
rcrl
mov
jmp
adc
xchg
popa
repz
or
mov
in
and
cwtl
fidivl
sbbb
push
or
cmp
push
pop
clc
add
sub
sub
or
pop
xchg
push
dec
idivb
push
or
clc
push
leave
xchg
pop
xchg
pop
in
or
insb
push
pop
cmpsb
mov
roll
bound
pop
adc
icebp
sti
repz
stos
adc
cmp
lock
add
adc
scas
push
daa
loopew
dec
pop
icebp
lahf
cmp
jno
lock
testl
inc
push
xchg
mov
inc
fdivl
push
mov
mov
faddl
dec
or
pop
push
or
push
addl
jp
shlb
mov
dec
in
ret
dec
xor
add
ror
fdivrl
mov
push
and
mov
jno
mov
out
mov
sub
dec
add
stc
adc
mov
pop
cmp
sub
pop
repz
mov
orb
cli
ret
inc
mov
add
pop
icebp
fisttps
fld
cli
pop
std
lea
and
lock
inc
mov
push
dec
or
out
leave
jp,pt
jns
shl
into
add
xor
jl
jge
repz
jle
xchg
rolb
popa
or
les
in
mov
mov
or
loopne
cld
rorl
fsubrs
xor
loop
into
lea
rcr
idiv
lret
cmp
ds
pop
push
sbb
jnp
int
mov
pop
outsl
nop
imul
aaa
lret
or
mov
ficoms
rol
in
imul
mov
sbb
int3
sahf
imul
jb
push
outsb
push
imul
sahf
inc
inc
stos
and
cmpsb
in
adc
mov
and
dec
dec
jne
sbb
addr16
push
dec
loope,pt
ds
mov
jbe
xchg
in
mov
fwait
movsb
add
and
mov
add
jmp
mov
push
into
xor
lock
pop
lds
mov
les
popa
lcall
in
lret
mov
pop
and
repz
gs
sub
cltd
dec
rorb
icebp
int
add
push
mov
jo
insb
cld
xor
in
in
pop
out
jbe
xor
in
jp
mov
jmp
das
cmpsl
fistpll
mov
fdivs
lock
jl
dec
add
in
lret
test
dec
ret
cmp
pop
dec
push
lods
mov
out
mov
xor
stc
cmp
jo
mov
aas
lods
in
push
add
sub
xchg
push
hlt
loopne
cmp
mov
leave
outsb
cmpsl
outsl
sbb
sarl
xor
clc
adc
adc
cmc
inc
mov
push
jbe
mov
inc
addr16
dec
push
xor
fs
shll
mov
or
ds
pop
leave
gs
jp
mov
lods
addl
clc
jp
lahf
cmp
pop
push
adc
sub
inc
push
pusha
lods
mov
test
push
in
cmp
mov
ret
inc
xchg
mov
or
xor
test
push
lcall
test
in
aas
int
movsl
xor
add
mov
dec
xor
stos
mov
and
testl
lods
xchg
sub
mov
add
iret
mov
popa
gs
jb
les
repz
pop
cmp
jmp
jb
dec
aad
and
stos
in
mov
dec
xchg
xor
int3
arpl
inc
pop
std
xor
mov
aam
pop
bound
insl
jnp
imul
jl
flds
mov
add
pop
std
inc
pop
aam
in
xor
mov
lahf
repnz
cmp
pop
arpl
in
lock
fs
or
pop
ret
jmp
jmp
popf
adc
jecxz
gs
imul
inc
sbb
pop
lret
stos
loope
pop
rcl
xchg
adc
lods
adc
and
mov
cmp
cli
xchg
lds
add
jbe
adc
mov
mov
dec
insl
add
movsb
or
pop
push
insb
jns
adc
ljmp
cmp
outsb
popa
lds
jmp
adc
mov
pusha
mov
sarl
mov
inc
sbb
cmp
pop
lods
xor
sti
lret
push
adc
and
pop
mov
lds
lret
sub
xor
dec
fs
bound
mov
sub
xor
in
scas
hlt
bound
inc
cmpsl
mov
hlt
loop
lret
pop
adc
and
dec
push
ljmp
adc
aad
sbbl
aam
loope
pop
stos
jp
lds
cmp
cmp
add
xchg
mov
pop
push
xor
lahf
je
add
movsb
ja
loop
in
aam
add
xchg
dec
inc
imul
lret
in
xchg
or
push
jecxz
mov
bound
xor
std
test
pop
cmp
jne
add
int
inc
fsub
or
xor
repz
and
lods
and
int
scas
test
aad
fwait
sub
cmp
add
shll
mov
in
das
adcl
lock
xor
stos
ret
fildl
jmp
mov
pop
inc
lock
std
loope
and
aam
sti
push
xchg
sub
add
stos
scas
xor
test
mov
aas
pop
mov
lods
xchg
popa
and
push
sbb
mov
xchg
push
imulb
cmp
push
in
movsl
clc
xchg
data16
xor
mov
std
jmp
push
lock
and
xchg
in
scas
clc
test
lcall
mov
mov
ljmp
add
mov
hlt
out
push
and
mov
sbb
ficompl
adc
push
lret
scas
inc
xor
mov
cmp
cmp
xchg
push
mov
lret
loope
fsubs
lods
cmc
push
xchg
lock
test
aaa
lods
xor
cmp
ja
rorl
iret
sub
shl
lock
or
int
mov
jnp
sub
movsl
cmp
aad
jnp
jle
lock
movsl
push
inc
ret
sub
jmp
adc
idivb
adc
dec
movsl
nop
insb
xchg
jg
pop
daa
insb
cmc
cs
sahf
mull
subb
stos
idivb
aad
aam
stos
xchg
jns
imul
fdivs
mov
cmp
test
in
mov
mov
cmpl
lock
jge
mov
or
sti
and
insl
cltd
shrb
jg
outsl
lock
mov
pop
lea
rcrl
in
mov
or
push
push
cli
inc
mov
add
loope
push
fldt
aad
aad
loopne
xchg
dec
out
adc
add
inc
das
fidivrs
dec
stos
mov
sub
pop
adc
xchg
movsb
addr16
xor
aas
aad
cmp
fs
das
ds
leave
in
mov
call
adc
popa
rorb
or
sbb
or
jg
sub
es
lret
mov
mov
dec
cmp
fisubs
shll
mov
pop
int3
testl
shrl
jmp
jae
shl
adc
scas
pop
mov
jmp
cmpsb
aad
lock
jne
jg
jae
xor
je
xchg
lret
shl
bound
arpl
inc
mov
sub
add
cmpsb
dec
fiaddl
imul
pop
pop
sub
push
outsb
outsb
mov
sarb
icebp
mov
imul
aaa
push
inc
jecxz
fbstp
xchg
sbb
cltd
sbb
or
sub
rclb
inc
cli
mov
jmp
ds
stos
shll
lcall
dec
idivl
mov
pop
fidivl
std
dec
mov
xor
popf
pop
cmp
jge
clc
and
cmp
inc
je
lock
cli
pop
int3
sahf
outsl
push
adc
inc
outsl
sub
xchg
das
xchg
mov
or
pop
mov
pop
dec
and
xchg
mov
test
cmpsl
nop
popfw
bound
push
mov
lahf
add
and
repnz
push
test
ficoml
xor
cmp
pop
test
pop
sarb
insb
push
iret
das
xor
add
bts
mov
je
scas
aaa
cmpsb
leave
dec
cs
pushf
pop
add
jl
lock
fiadds
jle
add
add
push
mov
rcr
sub
and
jae
xor
inc
adc
cmc
dec
leave
ficoms
cli
outsb
cmp
inc
arpl
js
insl
xchg
xor
dec
imul
nop
add
es
jle
adc
into
xchg
stos
cmp
jle
sub
cmpsb
adc
pop
stos
xchg
lods
aam
fldcw
dec
sub
push
dec
imul
mov
pop
jge
add
cmpsb
test
push
std
cs
jp
mov
ja
test
adc
or
cwtl
daa
in
sub
jne
push
xchg
xchg
jmp
adcl
hlt
or
xor
cwtl
inc
cmc
rclb
jl
mov
scas
mov
push
jp
movsb
dec
mov
add
push
stos
outsb
test
movsb
pop
dec
in
or
movsb
sahf
mov
test
aad
popa
gs
daa
icebp
pop
push
sarl
lcall
shr
add
xchg
out
movsb
cmpsl
int3
mov
rorb
orb
sub
push
je
inc
sbb
shrb
push
ficoms
xor
rcr
dec
sub
mov
ja
push
mov
imul
gs
cmp
in
mov
scas
and
add
cmpsb
xor
cmpsl
into
lock
jne
adc
push
call
les
call
test
push
stc
xchg
fs
cwtl
xchg
mov
int
loop
push
pop
lods
push
push
ds
push
adc
xor
push
daa
lea
outsb
sbb
add
cmpsb
add
aam
je
xchg
mov
nop
dec
bswap
jne
insl
out
aaa
add
pop
out
aam
jns
dec
leave
xor
jmp
inc
push
out
pop
inc
aad
jp
pop
cmp
cmovne
test
mov
add
pop
aam
imul
mov
and
gs
mov
and
xlat
fs
hlt
ljmp
addr16
cmpb
add
arpl
fld
stos
and
push
jle
xor
adc
or
xchg
pop
inc
loope
push
dec
aas
jp
bound
insl
lods
das
inc
jne
jo
insl
sub
jg
xor
and
xchg
rolb
xlat
inc
mov
mov
lock
add
andb
daa
adc
mov
push
movsl
jne
sbb
arpl
pop
repz
mov
fsubl
pop
xor
sub
dec
sub
ret
call
xchg
inc
aam
jne
pop
in
loope
and
xlat
push
xchg
jmp
test
fildll
mov
jno
mov
movsb
inc
sub
popa
xor
dec
mov
imul
add
jp
pop
add
push
xchg
sub
aas
imul
and
or
insb
scas
popf
popl
adc
ret
inc
repnz
loopne
push
sub
jne
cli
sub
cmp
and
test
repz
aam
fildll
sub
push
sbb
jne
add
push
mov
in
rolb
push
jno
adc
gs
xor
dec
stos
popa
js
mov
mov
out
add
iret
dec
jl
mov
sti
or
roll
or
jl
fsub
inc
and
gs
pushf
cld
mov
cmpsl
sub
loopne
aas
lahf
dec
test
dec
and
rcrl
test
nop
mov
cltd
insb
fwait
xchg
movsl
js
sahf
xchg
jle
cmp
ljmp
std
xor
jnp
xchg
icebp
ja
pop
aas
mov
adc
filds
leave
mov
das
addr16
fcomp
jl
dec
adc
decb
push
arpl
lock
xor
xor
sbb
ret
loope
mov
jge
cwtl
push
lock
std
imul
test
ljmp
stos
xchg
sub
xchg
out
insb
test
addr16
adc
leave
sahf
mov
clc
out
sbb
mov
sub
adc
insl
inc
jp
and
fnstsw
popf
repnz
sub
inc
push
pushf
sub
enter
mov
aad
add
sub
cmpsl
inc
xchg
sub
insl
add
cmpsb
clc
push
sub
scas
sub
mov
xchg
ljmp
ja
xorb
out
sub
fucomi
rcrb
cld
sub
ficompl
into
sub
cmp
mov
scas
cmp
outsl
mov
out
sbb
sub
in
sub
sbb
adc
int
sahf
test
pop
test
dec
mov
aad
and
or
cmpsb
mov
fsts
into
mov
popa
sti
cmp
lahf
cmp
pop
inc
adc
lcall
fildll
cli
push
push
mov
mov
fcomp
nop
dec
cmp
pusha
enter
out
cld
sub
das
mov
test
cmpsl
mov
call
dec
iret
sub
mov
lcall
push
test
jmp
test
jns
dec
loop
leave
pop
cmp
xchg
pop
ds
sbb
pop
sub
lret
ss
inc
sub
xor
nop
test
xchg
js
xor
xor
mov
sub
das
ds
jno
sub
arpl
ljmp
negl
sti
xor
mov
sub
cmpsb
movsl
in
and
mov
sub
imul
sub
sarb
cmp
cmp
pop
mov
xchg
mov
out
and
fldt
or
fists
ljmp
mov
mov
dec
bndstx
lahf
adc
aam
adc
xor
mull
test
mov
test
mov
mov
push
sub
loope
test
gs
fdiv
lea
and
push
enter
mov
xor
or
stos
push
in
inc
xor
mov
adc
lea
jne
enter
mov
xchg
lahf
sub
scas
lcall
leave
lods
push
add
and
jmp
cs
lods
ljmp
cmp
scas
movsb
out
and
mov
outsb
sub
ja
ficoms
dec
stos
xchg
scas
stos
rol
out
hlt
push
push
sub
insl
loopne
adc
add
fwait
loope
sub
dec
int
pop
test
add
mov
inc
lret
add
ljmp
popa
popf
sub
or
fwait
add
jae,pt
das
xlat
or
mov
cmp
and
mov
sub
or
movsl
inc
rclb
sub
in
movsb
test
inc
dec
xchg
stos
ss
jne
fldenv
lret
mov
cmp
push
mov
mov
xchg
divl
hlt
jae
mov
jo
sub
sub
jg
sub
mov
int
mov
outsb
xchg
rolb
mov
mov
pop
and
enter
sub
inc
lods
orb
mov
fwait
adc
iret
sub
icebp
adc
adc
pop
sub
jnp
loop
adc
insb
add
in
jmp
loopne
cmp
cli
jb
movsb
in
cmpsb
or
fsubrp
lret
xorb
repz
mov
roll
sbb
add
and
adc
int3
ret
xor
push
test
shlb
mov
lret
pusha
fs
xor
mov
loopne
mov
pop
mov
bound
clc
sub
sti
ljmp
push
cmp
ljmp
push
push
sar
movsl
jg
jb
cmpsl
sub
mov
push
in
sbb
add
or
adc
test
call
sub
adc
stos
pop
sub
cwtl
fnstsw
dec
ds
sub
std
mov
mov
mov
xor
push
lret
inc
sub
enter
xor
in
ljmp
fidivs
inc
mov
out
and
sub
push
js
sub
dec
sub
xor
sahf
cmpsb
push
fsubrs
test
mov
jo
adc
push
push
mov
xchg
cmp
sub
div
in
pop
mov
push
and
jl
or
inc
aad
test
lods
jmp
fisubrl
outsb
cmp
cli
xchg
fwait
push
and
jno
push
mov
mov
ljmp
jo
jecxz
dec
shlb
mov
movsl
xchg
repz
out
mov
ljmp
iret
and
fwait
or
subl
mov
mov
ljmp
jle
in
into
sub
cmpsb
fs
add
ja
sub
cmp
cs
or
test
and
cmp
cmp
cwtl
adc
call
mov
pop
test
sub
out
shrl
and
xchg
sub
add
mov
mov
dec
mulb
sub
in
dec
pop
imul
fldl
pop
stos
jmp
sub
mov
fwait
lcall
jno
push
ja
pop
ret
jns
jmp
sub
and
lds
sub
dec
insb
or
movsl
std
xchg
es
push
iret
push
sub
sbb
in
fwait
into
add
inc
pusha
mov
sbb
fidivrs
push
insl
sub
addb
lock
xchg
incl
mov
xor
scas
movsb
pop
imul
xchg
xchg
ret
loop
test
outsb
push
stos
in
xchg
lock
and
adc
lock
outsb
in
dec
cli
xor
pop
mov
inc
cmp
or
jle
aaa
push
inc
test
mov
jl
xchg
jl
pop
jb
decb
cmp
jbe
cltd
xor
sub
adc
or
jb
xchg
pop
arpl
jno
sti
add
adc
or
lock
jmp
jmpw
cmpsb
into
cmp
test
pushf
jbe
jg
rep
sbb
fidivrl
out
shrl
lods
iret
jmp
jnp
imul
hlt
and
pusha
orb
pop
cmp
xor
pop
dec
popa
addr16
cmp
or
test
and
lock
sub
jecxz
mov
dec
add
adc
adc
in
xor
mov
into
fs
dec
lea
pop
jp
je
jnp
clc
add
lret
out
das
fstpt
fldl
sub
lods
and
lods
cmp
pop
cmpsb
add
ljmp
data16
xlat
lock
mov
mov
pop
ret
push
aaa
adcl
movsb
cmp
mov
dec
cs
cmpsb
or
xchg
jecxz
xor
and
imul
xchg
jnp
xor
bound
jmp
lcall
or
jmp
mov
jmp
inc
jmp
mov
mov
xchg
lret
stos
aaa
jno
rcll
bound
in
popa
mov
sub
fadd
in
jae
xchg
adc
sub
aaa
inc
sahf
xor
jmp
jecxz
inc
inc
cmpsl
jb
xchg
repnz
loopne
cmp
sub
push
pop
loope
fidivs
outsl
mov
mov
std
scas
mov
das
gs
outsl
dec
jmp
pop
jp
pop
lock
push
push
sbb
in
mov
cmp
jnp
pop
bound
add
sub
push
test
cmp
sahf
mov
icebp
in
loop
mov
push
cmpsl
jge
cmp
das
push
sbb
incb
cmp
mov
cmp
in
leave
add
pop
pop
std
inc
je
outsb
in
mov
sarb
daa
xchg
inc
xchg
out
mov
in
jns
push
and
push
ja
push
scas
test
insl
xchg
mov
fimuls
dec
adc
imul
fldl
pop
movsl
mov
aaa
sub
mov
mov
scas
inc
ja
test
in
enter
in
mov
mov
in
in
push
xor
in
lea
xor
cmpsl
cmc
shrl
xchg
std
push
les
push
dec
mov
rcr
add
pusha
stos
sub
push
lds
je
pop
sub
mov
stos
stc
inc
mov
push
ds
cmp
inc
aam
and
or
pop
add
fld
xor
jnp
lcall
out
inc
or
sahf
cltd
ljmp
aad
add
pop
xchg
fwait
or
out
xor
pop
push
jnp
pushf
dec
adc
insl
ficompl
xchg
sahf
aam
cld
lock
fbld
jp
add
jmp
mov
push
in
movl
andl
fimull
push
aaa
xor
jg
mov
jno
pop
jecxz,pt
out
int
and
dec
inc
push
pusha
cmp
xchg
sub
fiaddl
adc
hlt
test
jmp
and
mov
mov
nop
cmp
sahf
cltd
in
out
or
fiadds
xchg
dec
jb
ja
sub
xchg
jmp
push
or
bound
pop
and
fisubrl
pop
push
xor
stos
movsb
mov
in
or
or
mov
dec
xor
pop
sahf
fsubrs
nop
shlb
jae
lods
leave
jge
dec
or
adcb
stos
cld
dec
inc
jne
jle
mov
fidivl
es
jns
mov
ret
push
mov
cmc
inc
aaa
imul
lcall
mov
test
xor
jle
and
or
add
out
lods
dec
pop
jnp
sub
jg
subb
push
xor
hlt
lcall
arpl
cld
xor
and
and
push
mull
bound
push
mov
mov
lret
mov
in
xchg
and
ss
or
xor
cld
mov
mov
sbb
sub
cmpsb
mov
call
mov
pop
inc
pop
push
sub
lock
rcll
scas
cltd
push
test
roll
movsb
push
arpl
jb
jmp
daa
mov
sub
push
imul
bound
and
and
es
sbb
pushf
ret
push
ds
xchg
push
ljmp
testl
xchg
js
mov
push
pushf
mov
std
cmpsl
lock
jmp
xchg
shrb
xchg
lret
imul
xchg
xor
jne
fwait
xchg
mov
xchg
addr16
sbb
orb
sbb
xor
loope
into
push
jbe
arpl
mov
cmp
lock
lds
ror
adc
or
mov
push
dec
mov
pop
test
and
in
and
push
fmul
icebp
dec
jecxz
sarb
push
jg
xchg
les
lret
repnz
jg
lds
mov
adc
xor
add
xorb
leave
xor
inc
jns
repz
push
sub
jp
sub
push
adc
pushf
leave
jne
sub
fstps
sbb
push
mov
jnp
test
cli
lock
in
pusha
jmp
inc
push
sbb
test
and
adc
sbb
mov
in
sti
lahf
cmp
lods
xchg
repz
ret
push
jmp
aaa
aaa
sub
rcr
cmpsl
ss
push
mov
or
inc
imul
or
jo
push
bound
mov
add
int3
pop
or
outsb
mov
mov
mov
imul
aaa
cwtl
inc
lods
roll
and
xrstors
mov
mov
xor
add
movsl
and
sti
xchg
addr16
add
jb
rorb
jnp
lds
cmpsb
outsb
xchg
cmp
lahf
out
test
add
dec
repnz
jmp
or
jp
outsb
xor
popa
dec
xchg
inc
mov
out
pop
add
arpl
fcomip
push
jmp
add
fwait
xchg
cmp
sbb
test
jmp
andl
movsl
push
movl
lock
jae
enter
test
mov
lds
fdivrs
mov
outsl
loopne
mov
lcall
sub
add
jl
xchg
fcompl
cs
or
pop
pop
andl
imull
xor
and
test
sub
rolb
sub
addr16
lds
mov
push
sub
aam
ljmp
dec
xor
dec
and
ljmp
sub
mov
mov
ficoms
data16
notb
das
adc
dec
sub
icebp
es
sbb
rclb
and
test
jne
adc
out
adc
lds
fmul
mov
call
ds
cs
mov
xor
fldenv
mov
lds
outsb
cmp
test
clc
jbe
sti
test
jmp
shrl
sub
mov
ud2
lret
adc
icebp
and
outsl
popa
cwtl
lcall
jne
and
loope
lsl
ljmp
pop
sub
lods
pop
jne
sub
xor
xchg
aas
add
or
cmp
fld1
push
sub
mov
enter
lds
cmp
sub
mov
into
adc
pushfw
movsb
push
mov
cs
repz
hlt
xlat
bound
sub
lahf
popa
ljmp
hlt
pop
ffreep
test
xchg
out
cmp
divb
fstl
mov
int3
addb
push
sbb
sub
dec
pop
xor
jecxz
xchg
cmp
ljmp
fdivs
imul
cmp
imul
dec
ficomps
xchg
ds
cmp
data16
cwtl
xor
jno
and
push
in
cmp
push
lret
lret
cmp
jne
subb
sbb
dec
cmp
imul
pop
loopne
sub
int3
sbb
outsb
or
and
cmp
jo
pusha
dec
subb
cmpsb
dec
pop
or
sub
push
xor
xchg
mov
pop
xor
scas
je
and
sub
daa
repz
out
xor
xlat
leave
xchg
es
frstor
inc
or
sub
sbb
push
xlat
adc
dec
cmp
dec
cltd
lea
pop
and
mov
dec
sub
daa
or
popa
sbb
xor
loope
xor
loopne
sbb
sub
adcl
out
test
fcom
sbb
sub
inc
jl
xlat
leave
cli
cmp
aaa
and
les
cmp
inc
int3
cwtl
bound
sbb
push
into
cmp
cwtl
jl
mov
or
sub
cmp
loopne
popa
add
xlat
stc
cli
mov
les
orl
and
pop
dec
xor
dec
in
push
sbb
dec
xchg
dec
or
mov
pop
in
in
jne
sub
xchg
xchg
sub
adc
xchg
adc
aaa
jp
dec
test
cltd
xchg
scas
shrl
adc
mov
cmp
dec
and
xor
sub
or
sti
test
in
jg
lea
loope
xlat
jbe
jne
pop
dec
xchg
inc
xor
fnstenv
test
jae
in
iret
adc
out
arpl
adc
cmp
xor
adc
fstps
enter
and
js
clc
jae
sti
jle
sub
andl
into
aam
xor
bound
js
loopne
push
mov
hlt
sbb
or
lret
cwtl
add
fbld
pop
xchg
pop
push
mov
je
push
adc
mov
ret
sub
lods
icebp
pop
push
adc
movsb
repnz
out
popa
mov
adcb
ss
test
out
fsubr
sbb
sub
mov
adc
dec
mov
data16
xchg
imul
lods
pushl
sub
xlat
push
or
and
out
jne
push
dec
mov
int
xor
test
push
add
out
lea
pop
sub
mov
pop
push
jmp
popa
sub
cmp
mov
pop
sbb
test
test
dec
dec
sub
loope
fcmovnb
lds
out
arpl
sub
jb
shrb
dec
mov
pop
es
loopne
out
sub
ss
adc
dec
mov
add
shll
sub
aad
mov
push
test
fmull
xchg
loop
mov
push
or
aaa
ljmp
adc
clc
mov
xchg
test
jecxz
cmpsl
call
sub
sub
or
jbe
jne
lock
shrb
loop
inc
rolb
pop
mov
sub
mov
out
mov
inc
std
bound
idivb
sub
inc
and
sub
mov
add
flds
inc
lret
sub
and
pusha
xor
mov
xor
arpl
outsb
add
fbstp
push
mov
adc
adc
dec
dec
subb
jecxz
and
in
adc
or
div
scas
xchg
push
jne
fisttpl
ljmp
push
getsec
cld
sbb
dec
lea
mov
push
mulb
xchg
ds
out
test
mov
mov
cli
sub
xchg
loope
jbe
jne
pop
out
sbb
les
sub
test
or
int3
pusha
xchg
and
sbb
rcrl
xor
lds
gs
and
mov
xor
icebp
and
push
loope
mov
cmp
bound
popa
sub
repz
inc
sub
cmp
dec
scas
add
scas
jmp
adc
test
adc
dec
bound
fnsave
ljmp
in
xchg
mov
test
mov
aam
mov
mov
pop
nop
dec
dec
sbb
sub
lret
inc
sub
mov
mov
out
push
loope
xchg
or
lret
xchg
jbe
jne
pop
aaa
andb
push
add
pop
adc
movsl
sbb
sub
rcll
decl
sub
scas
xor
sub
mov
in
lods
and
inc
pushf
stc
xor
pop
mov
or
push
inc
in
data16
sbb
mov
loopne
int3
sub
sub
in
or
icebp
jmp
adc
ljmp
ds
sub
js
inc
sub
daa
mov
nop
pop
leave
xor
imul
adc
push
pop
sbbb
inc
inc
bound
jge
and
xor
sar
and
cmpsb
push
inc
cld
iret
mov
ljmp
jne
mov
shll
push
xor
loop
lret
sub
inc
and
psubw
cmp
mov
pop
add
add
outsl
imul
jl
hlt
adc
dec
outsl
xchg
dec
ret
pop
pop
mov
jne
push
fildl
test
lcall
movl
fbld
lahf
adc
mov
dec
mov
add
lods
mov
and
fisubrs
xchg
and
jmp
xchg
cmpsb
sub
aaa
sbb
mov
nop
imul
test
jecxz
dec
inc
hlt
test
mov
xchg
or
mov
sbb
jg
dec
sub
pop
jbe
jne
pop
and
sub
test
pusha
rcll
push
mov
pop
movsb
cmc
rolb
lock
cmp
pop
fst
dec
shrl
pop
lcall
clc
insb
and
sub
and
dec
mov
dec
inc
mov
and
xorb
int3
mov
mov
scas
jmp
in
sub
loop
inc
push
and
pop
lock
or
mov
stos
dec
movsl
sub
cmp
or
jo
xchg
mov
sbb
cmp
push
cmpsb
dec
sbb
ljmp
mov
cmp
popa
movsb
vcvtps2pd
popl
or
ljmp
mov
dec
push
or
push
pop
jg
pusha
popa
push
push
inc
sub
jnp
cmc
and
gs
sub
mov
cmp
mov
or
and
pop
iret
mov
add
cmc
and
ret
lds
mov
in
push
loop
push
and
mov
in
negb
fidivs
push
add
cmp
add
in
in
xchg
push
xchg
inc
icebp
mov
xor
ljmp
pop
cmpsb
fstps
cwtl
fisubrl
in
hlt
push
repnz
lock
in
jns
imul
int
dec
pop
int3
nop
dec
push
lods
popf
int
arpl
sub
sbb
xor
dec
cmp
sbb
mov
lret
fwait
sbbl
cmc
fisubrl
stos
out
push
push
push
or
scas
inc
sbb
int3
xor
mov
lcall
jno
cs
das
mov
aad
roll
js
mov
adc
mov
hlt
imulb
xor
pushf
int
dec
andl
and
ret
aaa
xorb
test
cwtl
sbb
mov
fcmovnu
clc
sbb
mov
lock
sub
int3
adc
orl
arpl
sbb
mov
cwtl
call
cwtl
aad
adc
insb
scas
cld
add
call
andb
dec
orb
mov
push
mov
and
fstp
stos
int3
int
jnp
aaa
popf
je
pop
dec
sbb
cs
fmul
push
dec
add
lret
scas
arpl
and
pop
push
shl
mov
std
or
fildl
fwait
clc
sub
pop
int
dec
int
add
dec
xor
sbb
sbb
pop
mov
test
mov
ret
or
lcall
cltd
ret
inc
out
cmp
cmp
pop
xor
xor
das
cmp
je
daa
sbb
push
fildl
adc
push
inc
call
arpl
pop
pop
fwait
lret
pop
out
sbb
fisubl
pusha
push
ss
cmp
in
push
std
ffree
popf
add
mov
scas
das
ds
jnp
test
fwait
test
add
add
or
pop
pop
jle
imulb
xchg
fcmovne
clc
cmp
xchg
fwait
int
dec
cmp
movsb
pop
adc
push
test
sbb
cmp
inc
les
inc
push
add
sbb
push
fcmovnb
fwait
stos
sub
mov
ret
jns
popf
cmp
pop
pop
sbb
fwait
out
fsub
inc
jnp
jmp
cld
pushf
cmp
pop
adc
xorb
sbb
mov
clc
out
fwait
aad
ss
outsl
jns
pop
lock
xor
inc
sbb
jl
in
rolb
cmpsb
test
test
fnsave
test
pop
popf
sub
sbb
jle
jnp
stos
mov
push
test
sbb
xor
cmp
fcmovnu
fwait
test
jmp
out
pop
cmpsb
aad
push
cmp
out
fisubl
mov
lods
test
xchg
inc
dec
repz
mov
adc
sub
out
imul
xor
fstpl
fcom
fwait
add
sbb
pop
test
cmpsl
ja
jae
xor
fmull
xor
sub
inc
pushf
andb
mov
loopne
sbb
pop
testb
inc
repnz
pop
das
stos
sbb
push
out
fwait
push
pop
insl
pop
call
sbb
popf
push
add
and
xor
pop
and
mov
test
hlt
fwait
sub
mov
popf
adc
inc
xorl
inc
stos
push
sbb
xchg
ds
call
jb
outsb
test
push
cwtl
and
dec
lret
pop
arpl
mov
scas
test
sbb
mov
add
in
imulb
pusha
lcall
mov
cmp
pop
add
cmp
ret
and
popf
xchg
sti
mov
outsb
and
xor
pop
scas
inc
jecxz
xchg
xor
xor
call
leave
pop
es
pop
push
xlat
xor
sbb
rcr
test
movl
mov
fs
mov
jne
mov
push
int3
xchg
dec
push
lret
dec
arpl
ficoml
jns
push
out
popf
pop
lcall
jmp
pop
jno
imul
push
pop
aas
arpl
mov
pop
mov
out
add
fprem
adc
pmuludq
repnz
jbe
push
pop
pop
pushf
clc
dec
popa
fldcw
pop
xchg
jge
jp
pop
cs
push
or
mov
cmc
lret
repnz
fisttps
adc
stos
sub
sbb
sbb
xchg
loopne
xor
inc
cwtl
cmp
lea
sub
dec
push
sbb
sbb
jecxz
out
int
mov
cmp
fistpl
out
pop
ret
adc
les
shrl
jl,pn
repz
sbb
and
cwtl
fwait
mov
sbb
popa
out
dec
inc
aad
shlb
dec
cmp
cmp
ja
out
xchg
or
repz
lock
movb
adc
cmpsb
adcl
mov
cmp
out
push
push
mov
or
dec
jae
out
lret
fistps
push
inc
mov
pop
imull
push
add
mov
aas
mov
push
ss
xchg
aas
sub
in
push
mov
lret
mov
cmpb
xor
ret
xlat
xor
lock
dec
mov
or
int
dec
lret
int3
xchg
imul
jbe
cmpsb
ss
jae
sub
cwtl
orl
movsb
sbb
xor
fistpl
movb
add
vcvtdq2ps
mov
lcall
xor
popf
mov
rcr
inc
jmp
xor
pop
pop
int3
inc
scas
mov
mov
scas
scas
hlt
lods
ljmp
ret
mov
sub
popa
filds
cmp
cmpsl
sbb
in
leave
fwait
mov
inc
fiaddl
loop
pop
bound
or
arpl
inc
jne
pop
mov
mov
and
inc
loop
add
jb
mov
xlat
mov
ret
mov
sbb
xchg
testb
xor
dec
popa
or
push
rolb
mov
xor
nop
cmp
sbb
das
out
lcall
pop
icebp
lahf
jnp
outsb
mov
sub
push
ret
out
addr16
jo
insl
fcompl
mov
xchg
mov
or
pop
and
in
ljmp
pop
pop
clc
sub
xor
sbb
gs
popf
xchg
fwait
pop
leave
sbb
jp
ja
out
gs
inc
jns
cmc
dec
xor
les
out
fimull
jle
std
jns
lcall
mov
leave
push
ljmp
in
push
adc
inc
and
push
adc
jne
jno
movsl
pop
mov
je
sbb
clc
mov
mov
and
cmp
fcmovne
addr16
xchg
int3
adc
arpl
ljmp
sbbb
dec
push
out
fsubl
rol
mov
sbb
sar
xor
insb
test
mov
fwait
jbe
sub
adc
push
in
sub
sub
jmp
cmp
xor
mov
sbb
xorb
out
iret
push
cs
mov
scas
add
pushf
xor
inc
inc
fcomps
xor
out
fstpt
dec
push
fwait
dec
or
and
popa
pop
mov
sub
outsb
popa
mov
xor
test
in
movsb
js
mov
int3
out
pop
sbb
xchg
jne
pop
roll
fisttpll
xor
and
fistpl
enter
jmp
cmpl
fiaddl
out
lcall
inc
cmp
inc
dec
pop
pop
xchg
cs
mov
mov
pop
sbb
fcmovb
mov
jne
sbb
pop
push
pop
xor
stos
test
fsub
pop
push
fwait
jl
mov
lods
push
pop
cs
and
out
lea
sub
inc
loop
jb
xchg
add
std
ret
mov
out
test
pop
pop
mov
mov
cwtl
sbb
mov
outsb
in
sbb
jbe
sbb
xchg
ret
jmp
pop
inc
inc
or
data16
popa
inc
xor
sbb
sahf
fcmovne
fwait
jg
cmp
lcall
test
inc
jns
mov
jle
add
xchg
ret
leave
addb
js
mov
mov
mov
enter
stc
cs
sub
sbb
or
out
out
fcompl
dec
mov
test
testb
ds
pop
int
dec
dec
int3
jnp
das
sbb
inc
mov
sbb
inc
loop
mov
dec
sub
xchg
test
dec
xlat
ds
int
dec
or
dec
sub
xor
fcmovnu
sbb
push
popa
add
das
in
xor
sbb
pusha
fcmovnu
fwait
ficoms
iret
add
ljmp
mulb
gs
int
dec
lret
test
sbb
fwait
or
cmp
jne
sbb
shlb
xchg
add
test
ficoml
es
mov
loope
dec
adc
adc
mov
dec
mov
clc
das
xor
out
mov
pop
cmp
mov
insb
xor
pushf
int
dec
push
int3
mov
mov
push
fwait
jle
jp
out
dec
ja
jae
or
mov
insb
imul
sbb
movsb
fcmovnb
pop
mov
jo
xchg
mov
ss
dec
lcall
and
nop
xor
push
pop
push
fcompl
jae
cmp
gs
aad
or
sub
xor
ss
pusha
sub
fistpll
sbb
into
inc
test
movsl
popa
shlb
mov
pop
cmp
add
lahf
mov
mov
sbb
push
ss
fstpt
imul
repnz
int
aaa
ficomps
stc
ret
mov
sbb
adc
pop
clc
stos
dec
push
sbb
pusha
or
xor
xchg
pusha
arpl
out
pop
ss
aas
sbb
cmp
mov
sbb
fildl
pop
mov
mov
inc
jge
cmp
sbb
aas
das
xor
stos
sub
mov
in
arpl
in
aad
out
lock
cmpsl
out
xchg
mov
mov
or
inc
inc
mov
sbb
mov
mov
cmpsl
cs
xor
das
push
mov
dec
sahf
popa
iret
mov
popa
ljmp
pop
inc
es
out
pop
push
mov
mov
sahf
test
inc
fstps
xor
xor
fisttpll
inc
int
dec
lock
test
das
je
aam
dec
xor
fstpt
test
mov
or
push
mov
fstp
sbb
ds
lcall
sarl
ja
ret
fiaddl
sahf
cmp
int
movsl
fxch
xor
dec
bound
jmp
pop
out
dec
mov
cltd
in
jnp
fnstcw
popf
addb
and
or
pop
add
add
fxtract
repnz
pop
test
into
cwtl
lret
lds
or
xor
xlat
or
inc
mov
cmpsb
ficoml
add
cmp
cltd
fst
mov
aas
mov
scas
sub
pop
popf
pop
call
arpl
test
ret
fsubl
clc
or
cmp
jo
xor
imul
xor
adc
aas
sarb
mov
imul
ret
ret
add
cld
jns
lods
insl
jmp
push
dec
mov
int3
rcll
lret
fisubrl
mov
lret
xor
inc
sub
and
push
fistl
dec
pop
dec
sbb
cmpsl
sbb
mov
dec
mov
test
jo
repnz
pop
and
mov
sbb
fistl
push
pop
push
sbb
sbb
or
and
mov
ret
insl
sub
dec
lcall
or
xor
push
shrb
xchg
mov
adc
fwait
jmp
push
out
imul
and
test
jns
cmp
cs
xor
das
sbb
nop
sub
loope
es
mov
pop
dec
inc
inc
dec
insl
sub
loop
and
fwait
inc
sahf
aas
jmp
repnz
repz
lock
mov
hlt
xor
xchg
cmp
sbb
xor
loopnew
fildl
mov
sub
pop
mov
inc
cs
add
stos
ret
sub
movsl
pop
fisubl
add
addb
jmp
xchg
adc
hlt
in
sub
cmp
gs
bound
rorl
rorb
pop
notl
push
aad
sub
and
cwtl
mov
movsl
sbb
lret
lcall
in
sbb
sbbl
dec
out
sbb
test
mov
loop
cs
and
fildl
andb
in
cli
push
inc
fldenv
adc
inc
ret
loope
cmp
lret
stos
ficoms
sbb
movsb
cmp
cmc
mov
xchg
fistl
push
mov
lock
test
popa
inc
mov
jb
lcall
inc
out
inc
sub
add
cmp
inc
addr16
cli
loop
sbb
stos
add
mov
cmp
adc
repnz
jmp
call
fwait
push
mov
js
repnz
and
shlb
or
orb
cmpsb
fst
jecxz
lock
sub
int3
cmovl
xchg
lret
fistps
aas
sub
jns
jb
outsb
ficompl
iret
mov
aas
fistpl
clc
pop
notb
push
arpl
jae
shr
cltd
xor
das
adc
cli
sub
pop
pop
sbb
hlt
xchg
bnd
js
in
mov
dec
loop
sub
and
and
pop
dec
cltd
lret
orl
stos
out
fwait
fs
pop
movb
scas
repnz
cmpl
in
and
or
cmpsb
xor
fisubl
clc
imul
or
jns
mov
push
lret
cmp
push
sub
sub
fs
and
xor
insb
mov
aas
popa
mov
das
mov
push
mov
call
sub
aam
call
idivb
push
test
pop
push
mov
push
js
stos
fstpl
int3
or
dec
dec
popf
loopne
jmp
stos
inc
lock
jecxz
fisttps
int3
enter
shlb
inc
pop
and
dec
in
xor
call
adc
addb
jmp
dec
subb
push
sub
iret
xor
sub
cwtl
ficomps
push
mov
iret
sbb
fcmovnbe
mov
jne
sub
jmp
cmp
xor
test
int
dec
mov
lds
cmp
arpl
inc
inc
aad
mov
mov
clc
fcomip
sbb
pop
repnz
lock
test
int
adc
sub
ret
mov
out
in
and
repnz
inc
repnz
lock
insl
or
mov
cs
sub
jmp
bound
jb
das
lcall
sbb
inc
aam
mov
addr16
dec
nop
ja
xor
xor
bnd
pop
cli
clc
mov
pop
dec
out
lret
push
sbb
lds
ss
jne
xor
fcmovnbe
xor
add
xorb
pop
cmp
fildl
jbe
mov
insb
leave
mov
dec
ss
mov
pop
sbb
mov
mov
mov
das
dec
add
stc
loopne
fimull
and
loop
lds
frstor
xor
shl
pop
js
sub
sub
or
arpl
loopne
das
xchg
cs
sub
mov
add
pop
lods
add
cld
lods
test
or
mov
dec
dec
sbb
lods
lcall
fsubs
push
sbb
ss
xor
sahf
dec
loope
pop
fwait
xchg
pop
rcrb
mov
fimull
push
ss
cmp
aaa
leave
aam
clc
loopne,pn
push
pop
cmp
cmp
mov
jecxz
and
sbb
inc
xchg
sub
imul
and
jmp
fistl
xor
inc
shl
ds
cs
fistps
stos
xchg
jne
loope
and
mov
inc
mov
imul
add
dec
test
mov
pop
frstor
das
int
mov
cmp
iret
les
popf
decb
mov
mov
sbb
mov
inc
fdivrl
inc
inc
mov
xchg
add
inc
rcll
leave
adc
push
fldt
add
ds
test
repnz
test
xor
cs
in
dec
mov
xor
test
shl
mov
xchg
fldl
mov
xor
loope
int
roll
loop
mov
das
fisubl
dec
pusha
jle
in
cmp
ret
inc
dec
inc
movsl
test
incl
out
popa
out
sbb
int3
sub
sbb
add
fisubl
xchg
bound
add
sbb
clc
mov
or
fildl
dec
pop
dec
sbb
jmp
daa
ss
inc
into
dec
rclb
xor
cmc
sub
data16
sbb
sub
pop
int
in
shlb
mov
add
divb
shrb
ficompl
mov
pop
test
ds
inc
ficompl
inc
pop
lods
ret
ds
and
push
push
dec
iret
fists
pusha
loop
jecxz
sahf
sbb
mov
repnz
test
test
shll
imul
cltd
cmpsb
fsubl
jnp
pop
das
cmp
pushfw
int
dec
sbb
mov
mov
es
popa
xchg
fistpl
mov
xchg
add
fs
jbe
test
xor
pop
imul
pop
arpl
test
cmp
sub
loopne
roll
int3
in
cmp
cmpsl
lcall
jmp
push
xor
inc
sub
push
xchg
inc
pop
mov
mov
repz
cmpsl
popf
movsl
dec
sbb
mov
mov
lods
out
adc
ds
adc
mov
sti
repnz
xor
pushf
int
dec
or
out
arpl
jo
popf
inc
pusha
or
ljmp
fwait
cmp
ficomps
cmp
arpl
or
dec
mov
icebp
test
xor
mov
jmp
lcall
fstps
ror
dec
mov
add
or
les
sub
or
xchg
lods
mov
inc
mov
icebp
insl
shll
mov
stos
jmp
push
adc
push
mov
lds
push
movsl
push
fnstsw
mov
repz
gs
fwait
aam
add
jo
jo
xor
push
mov
xlat
xlat
mov
xor
out
jecxz
test
mov
jle
fldt
ret
in
cwtl
sbb
add
in
jns
inc
jne
mov
dec
aam
cwtl
mov
das
lea
lret
sub
lds
and
push
pop
movsb
push
jns
shrl
pop
ljmp
stos
pushf
mov
dec
inc
cmp
subb
xor
orb
shll
xor
call
int3
test
mov
xor
mov
vpmacssww
lret
aas
dec
jp
mov
shlb
xchg
lds
inc
mov
lds
sbb
int3
fwait
mov
xchg
inc
jmp
lcall
int
dec
mov
cli
jno
bound
das
int
cmp
xchg
mov
xor
leave
call
test
ds
adc
cs
std
test
loop
mov
pushf
and
repnz
fwait
sub
push
push
int
dec
and
pop
xchg
pushf
mov
jno
lods
jne
dec
sbb
pusha
rcl
mov
jno
cs
pusha
cmpsb
sahf
sbb
test
push
push
addb
lds
out
lret
fsubp
movl
sbb
jb
lods
in
jmp
sahf
push
leave
fcmovnb
mov
xorb
imul
dec
dec
int3
dec
test
orl
test
jns
inc
jns
jne
mov
push
ret
in
mov
inc
jge
mov
jns
inc
xchg
xor
add
cld
cmp
aaa
ss
xor
inc
ret
in
xlat
xor
test
fldenv
mov
or
add
loopne
das
movl
popa
pop
loopne
mov
pop
ret
test
vmovhlps
stos
loop
loop
cmp
testl
or
aas
fsubl
mov
loopne
pop
xchg
das
mov
leave
sub
jbe
arpl
push
test
push
cmpsl
cmp
mov
mov
in
cmp
ret
loop
loop
orb
add
xor
lret
nop
dec
int
inc
jmp
lock
sbb
sub
cmp
pop
push
xor
loop
lahf
xlat
cs
xchg
mov
data16
lock
sbb
jo
repnz
fstpl
push
in
notb
sub
or
xor
push
out
popf
ficoms
lahf
mov
loope,pn
sahf
cmp
add
xchg
pusha
mov
ret
dec
scas
ret
fbstp
push
mov
mov
push
mov
test
cmp
mov
mov
hlt
les
movsl
gs
popf
mov
dec
jns
lock
lods
cs
aad
xor
inc
dec
lret
test
pop
add
sti
push
int3
sub
imul
pusha
fists
int3
lcall
imul
jae
jo
stos
iret
sub
add
mov
sub
sub
inc
into
mov
test
rcll
in
filds
mov
sub
lock
push
test
xor
cmp
push
push
jmp
sbbb
fidivrl
frstor
cmpsb
ret
cmp
imul
addb
cmp
sbb
loopne
repnz
inc
insb
jns
sbb
mov
loop
les
sbb
aad
dec
imul
cmp
mov
xchg
mov
dec
ljmp
stos
sub
ret
push
ds
cmpsb
scas
mov
inc
inc
xlat
mov
mov
les
xchg
ret
push
dec
dec
int3
push
roll
jns
jnp
out
insl
jmp
push
adc
test
ret
sub
cli
lds
ret
enter
addb
push
xlat
xor
or
leave
sub
push
dec
xchg
pop
cmpsl
cs
sbb
repnz
jge
jns
in
out
xchg
push
clc
push
dec
cmp
imul
pop
fcmovnu
fsubs
adc
cmp
out
shr
push
out
ficomps
fwait
repnz
shl
adc
test
lods
jp
mov
ret
shrb
es
adc
ret
pop
pop
popa
lret
filds
in
data16
rcr
mov
fbstp
sub
pop
adc
xlat
repnz
sahf
loope
in
push
pusha
arpl
add
movsl
pop
shll
lcall
pushf
int
dec
pop
rclb
arpl
icebp
add
cmp
pop
cmpsb
clc
sbb
cmpsb
xor
jg
hlt
cs
movsb
sub
cmp
add
cmpsw
call
sbb
mov
push
clc
sub
lret
insl
xchg
and
dec
sti
xchg
mov
lock
pop
loopne
and
test
mov
lcall
mov
xor
outsl
lods
lods
sub
mov
mov
cmp
out
jecxz
jecxz
dec
test
jle
jnp
mov
hlt
xor
dec
pusha
pop
xchg
das
or
aad
inc
mov
cmpb
jnp
aaa
jmp
push
xor
xchg
or
dec
cmp
mov
xor
aaa
movsb
ret
xor
ret
dec
xlat
push
cmpsl
mov
cli
pop
orb
repnz
pop
dec
test
xor
inc
mov
pop
inc
pop
push
xor
test
leave
add
dec
add
adc
mov
mov
xor
faddp
fwait
xor
shl
adc
lods
jns
and
and
cmp
cwtl
cs
sti
les
in
mov
mov
pop
popa
inc
mov
xor
pop
fimuls
mov
popw
mov
fcos
mov
out
xor
out
and
dec
fs
dec
test
xor
repz
das
loope
pop
pusha
fisttpl
adc
mov
fisubl
dec
in
int
cmp
dec
fidivrl
push
xchg
cmpsb
jns
adc
into
xorb
inc
mov
inc
cmpsl
pop
pop
or
out
dec
call
mov
cmpsl
inc
xchg
mov
cmp
sbb
and
sbb
sub
fistpl
cs
ja
aad
leave
arpl
pop
xchg
mov
mov
and
pop
inc
shrb
push
ds
aaa
addb
pop
pop
sbb
aad
adc
enter
sub
xor
ret
pushf
pop
mov
add
movsb
pop
in
inc
mov
cmp
in
fs
addl
fisubl
lds
aas
dec
sahf
cmc
mov
rclb
popf
mov
ss
pop
or
and
xlat
aam
mov
mov
int
sub
mov
adc
les
xchg
inc
and
fdivrp
push
testb
pop
fistpl
lds
inc
mov
push
sahf
sbb
inc
repnz
sub
rolb
cmp
inc
bound
pop
push
pop
push
pop
shll
push
lahf
sub
lods
push
iret
int
push
sub
adc
jecxz
xor
pop
fidivrl
push
dec
xchg
arpl
mov
add
dec
dec
data16
cs
dec
leave
popf
push
pop
dec
xor
xchg
inc
xchg
sbb
fildl
sub
or
movl
adc
cmp
int
xchg
mov
push
dec
xor
lcall
test
in
sbb
inc
mov
push
ret
xchg
pop
mov
in
inc
fsubrs
stos
cmp
push
sub
pop
ljmp
dec
cmp
jne
xor
push
mov
push
jns
sti
jno
lods
lock
pop
in
stc
enter
mov
idivl
ret
bound
push
inc
push
pop
push
sbb
fimull
or
jnp
mov
lock
dec
and
ds
cld
lds
cmpsl
pop
push
scas
dec
mov
lods
cs
arpl
pop
test
dec
das
mov
and
and
mov
je
xlat
test
sahf
fwait
aam
xchg
mov
dec
push
out
sbb
fcmovnb
lcall
inc
icebp
shll
call
shrb
js
je
insb
pop
cwtl
pop
push
dec
xor
fstps
mov
push
iret
add
dec
lock
cmp
icebp
mov
adc
xor
xor
fisubl
sbb
iret
dec
dec
lret
or
jno
mov
js
mov
dec
inc
cmp
aas
pop
roll
fldcw
in
cmp
pop
sub
test
cmpsl
adc
pop
pop
inc
dec
cs
inc
mov
cmp
fucom
mov
dec
ds
inc
sub
std
or
hlt
cs
xor
jecxz
mov
mov
dec
das
dec
rclb
dec
sbb
mov
inc
popa
and
aam
fadd
sti
imul
lods
jbe
je
push
mov
add
pop
lods
dec
leave
and
in
in
ds
mov
insb
jo
inc
fsubr
aam
mov
aaa
xchg
or
ja
loope
in
loop
cmpsl
adc
fildl
repnz
push
push
pushf
add
dec
xchg
pop
jnp
data16
and
ret
fmull
orb
cmp
adc
mov
fldl
rol
loopne
xchg
xchg
push
mov
in
xor
cmp
lock
in
ja
in
out
push
movb
mov
call
pushf
dec
enter
out
insl
imulb
mov
pop
into
repnz
cmpsb
sub
and
nop
mov
jb
mov
fildll
int
ss
inc
mov
in
inc
jns
into
mov
cmp
lret
lods
dec
inc
and
jb
imul
pushf
pop
or
dec
mov
ja
sub
in
dec
in
leave
push
or
in
xchg
fsubp
fadds
leave
test
mov
cmpsl
xor
int3
push
dec
lret
roll
lods
ljmp
testb
sbb
popa
fwait
sahf
add
mov
shll
ds
inc
in
inc
sarl
ds
test
mov
or
gs
aam
xchg
sub
xor
mov
mov
loope
cwtl
leave
popa
sub
dec
test
mov
pop
sbb
loope
adc
iret
sahf
stos
test
fbld
sahf
inc
sub
mov
pop
xor
mov
sub
lds
xor
popa
jg
ret
stos
ds
fistpll
xchg
movsb
add
test
sbb
shlb
in
out
sub
fsubr
clc
mov
jg
mov
inc
movsl
stos
mov
filds
dec
cs
jns
jns
pop
movsl
test
sbbl
in
clc
xchg
popa
gs
mov
pop
pop
stos
test
sbb
test
sub
fwait
movsl
dec
aaa
xchg
push
mov
jae
mov
xchg
dec
pop
mov
in
mov
ret
sbb
fcmovnu
loopne
pop
adc
lahf
leave
loope
dec
inc
xchg
js
aad
mov
loop
in
cmp
out
in
push
pop
insl
pop
pop
mov
mov
sbb
jbe
imul
xchg
cmpsb
pop
lret
cmpsl
mov
ss
fsubl
inc
xchg
inc
xor
and
in
sbb
xor
lret
loope
mov
pop
add
jo
pop
clc
rorb
dec
add
cmp
pop
mov
gs
lods
ds
loope
mov
adc
jnp
pop
fcmovnu
sahf
pushf
repnz
dec
lcall
xor
or
inc
jbe
dec
lret
sbb
add
adc
or
rcrb
das
repnz
or
mov
sahf
sbbl
and
jmp
mov
push
push
and
mov
cmpb
in
adc
mov
int
mov
ret
push
icebp
dec
mov
in
pushf
pop
pop
mov
add
jmp
in
sbb
push
int
mov
int
out
cld
xchg
cmp
sub
xchg
mov
daa
mov
addl
mov
jecxz
mov
sbb
inc
push
jb
jge
mov
aas
mov
push
mov
inc
mov
scas
lcall
data16
cs
jge
pop
adc
gs
hlt
dec
mov
insb
fs
sbb
push
xchg
cmpl
insl
sti
movsb
pop
pop
loop,pt
add
adc
fistl
or
nop
jmp
sub
repnz
lcall
pop
test
arpl
or
cmpsl
cmp
xlat
xlat
add
fistpll
xor
push
and
dec
testb
stc
push
cmp
fildll
fsts
pop
rcll
cmpsb
mov
xchg
clc
clc
and
daa
popf
sbb
xlat
pop
sub
subb
inc
dec
push
mov
movsb
sbb
das
clc
cs
in
fistps
ffreep
dec
das
in
leave
rclb
repnz
aaa
adc
sub
xchg
loop
pusha
lds
iret
sub
mov
dec
lods
fmulp
jmp
out
imul
mov
sbb
clc
mov
xor
and
add
xor
adc
testb
stos
mov
imul
iret
addl
std
or
adc
cmpsb
inc
aaa
cmpsb
stos
sbb
xor
dec
add
arpl
loopne
idivb
call
int
dec
dec
int3
mov
sbb
xlat
inc
or
pushf
scas
xor
rol
test
test
loop
or
iret
cs
cmp
out
cs
sbb
adc
or
lds
repnz
sub
mov
enter
xor
imul
pop
pop
into
fcmovne
xor
pushw
stos
popa
adc
in
jge
mov
pop
jmp
test
xor
mulb
dec
mov
push
xchg
dec
jns
scas
mov
cld
gs
enter
test
popa
loopne
out
inc
mov
stos
addr16
inc
xor
ror
pop
xchg
das
mov
xchg
cmp
xchg
mov
scas
and
in
popf
cs
sarl
inc
ds
bound
pop
leave
xor
movsl
rorb
dec
push
xchg
pop
sub
push
fimuls
xlat
and
lret
xchg
mov
xchg
int
loopne
ds
xor
inc
lock
pop
jecxz
mov
dec
cmp
scas
sub
cs
arpl
test
ds
jo
or
mov
sbb
mov
xlat
xor
pop
mov
shll
xor
or
mov
mov
sbb
cmp
iret
push
int3
fcomps
dec
andb
cmpsl
repnz
lock
pop
lds
ds
add
loope
xlat
mov
loop
loop
add
and
dec
popa
pop
xchg
pop
std
sbb
mov
mov
leave
cs
mov
hlt
scas
cli
inc
sar
adc
dec
mov
leave
ffreep
mov
xchg
repnz
outsb
adc
jb
lds
dec
dec
cmp
fwait
int
sbb
and
mov
sub
sbb
loop,pt
fnstenv
push
xor
into
ficomps
ds
imul
pop
rol
adc
lds
rcr
loope
push
stos
jnp
xor
repnz
in
int
sbb
dec
or
cmp
fidivs
dec
rcrl
fiadds
adc
inc
test
leave
mov
dec
dec
add
fwait
shrl
imul
ret
popa
into
push
inc
fiaddl
push
pop
mov
call
xchg
xlat
xlat
inc
inc
test
clc
pop
jmp
pop
loopne
xlat
fmul
inc
add
in
cmp
and
xchg
aam
aam
mov
outsb
inc
sub
cmp
push
iret
inc
sbb
or
sahf
rorl
jne
out
lods
stos
dec
pop
arpl
push
xor
cs
sub
sbb
rcrb
push
add
xor
cmpsl
cmp
add
sub
or
mov
mov
insl
repnz
clc
pop
push
pop
mov
jne
mov
jae
stos
in
fwait
sbb
mov
in
sub
mov
hlt
popa
dec
jmp
pop
inc
sbb
std
rcrl
loopne
push
pop
xchg
jp
mov
aaa
ror
mov
push
jmp
addr16
push
sub
mov
pushf
lcall
adc
leave
xchg
test
aad
xlat
sub
dec
lea
ja
in
in
vmovq
int
mov
pop
je
ja
inc
lds
jns
stc
rcr
lret
mov
sub
icebp
mov
lds
sti
or
or
jmp
sub
dec
add
lds
mov
or
cli
ret
cld
mov
addr16
repnz
pop
popa
ja
loop
int
xchg
repz
pop
pop
xorl
cmp
mov
out
loop
dec
mov
pop
inc
fistpl
shll
inc
ret
out
and
shlb
std
sahf
lahf
dec
mov
inc
mov
adc
rol
andb
dec
fisubs
inc
mov
pop
inc
das
fs
sub
cmp
arpl
xchg
mov
out
and
cmp
lods
lahf
fucom
in
push
or
push
in
mov
aaa
pop
xor
add
leave
mov
aam
pop
adc
pop
fucomip
and
clc
push
cs
int
dec
inc
xchg
andl
cmpsb
sarl
cmpsl
enter
negb
dec
fisttpl
xchg
inc
jb
fsubp
fcmovu
sbb
sub
test
ss
clc
dec
inc
and
popa
inc
stos
and
mov
mov
pop
add
sbb
mov
xor
cmp
pop
inc
cmp
push
and
inc
enter
mov
repnz
push
push
and
mov
jmp
mov
in
ds
fidivs
in
lock
xorb
mov
out
jns
xchg
pop
rol
stos
pop
in
ds
fidivrl
loop
jns
imul
sahf
das
push
xchg
fistpl
iret
movsl
shll
mov
fiaddl
jl
imul
cmp
pop
ret
inc
xchg
in
mov
pushf
adc
stos
pop
jbe
leave
and
mov
cwtl
cmp
addr16
adc
adc
inc
pop
mov
lods
adc
loop
cmp
in
fwait
inc
fimull
cmp
sub
aaa
push
jae
push
mov
xor
and
popf
pop
and
aas
scas
in
icebp
data16
ret
mov
push
clc
xor
dec
scas
and
dec
lods
pop
stos
mov
arpl
stos
cmpsl
mov
mov
mov
dec
dec
in
mov
mov
mov
sahf
fsts
push
pop
gs
ds
inc
mov
mov
sbb
lock
out
xchg
leave
xor
mov
mov
push
push
lds
dec
xlat
pop
cs
mov
mov
mov
fsubp
adc
rorl
shrb
les
loopne
roll
mov
mov
in
fistpl
addr16
xor
icebp
stos
dec
lods
shl
leave
addr16
or
xor
xor
jb
scas
cltd
enter
repnz
imul
dec
inc
inc
fldcw
pop
pop
push
fisubl
jne
xor
mov
hlt
movsb
lret
push
mov
inc
jns
push
pusha
popf
push
xor
clc
das
mov
or
stc
sub
fucomi
and
mov
pop
rorl
addr16
pop
mov
dec
mov
sub
mov
sbb
fwait
jp
popa
mov
or
cmp
inc
movsl
pusha
sbb
pop
fwait
jns
out
fsubrl
adc
lret
push
fisubs
movsl
add
inc
pop
movsb
adc
dec
test
imul
mov
gs
fnsave
leave
or
xor
push
in
push
xlat
mov
movsl
mov
mov
adc
inc
les
sub
ss
ret
pop
or
mov
cmp
vpblendvb
outsb
mov
push
fbld
sub
jns
lods
lods
xlat
push
int3
xlat
inc
leave
scas
and
das
inc
leave
push
sbb
xchg
test
xor
jp
lds
inc
imul
mov
ljmp
sarl
mov
sub
aas
les
and
popa
xchg
add
push
ja
lods
and
pop
xchg
popa
in
sub
xchg
cs
xor
xchg
xchg
mov
imul
pop
movsb
enter
sarb
or
mov
or
push
inc
lret
sub
sub
xchg
movsb
enter
sbb
fdivrs
ds
jnp
adc
in
cs
dec
sti
or
push
iret
data16
pop
ljmp
aam
rolb
pop
dec
scas
in
fwait
icebp
jns
xlat
lds
in
sbb
stos
dec
mov
xchg
leave
cmpsb
push
cmp
add
xchg
jo
leave
sub
fstpl
dec
popa
push
jle
push
or
xor
in
mov
or
fs
xor
stc
popa
xor
test
mov
pop
loopne
fdivrl
push
sbb
mov
xchg
lea
mov
sbb
sbb
xchg
and
movsl
mov
out
xor
dec
cmpsb
scas
test
lds
push
imul
xchg
aaa
cmc
xor
les
dec
shrl
pop
scas
std
es
pop
ret
jmp
mov
popa
lods
sub
cltd
sbb
out
pop
xor
lea
and
xor
push
xchg
add
fisubl
lret
push
lret
daa
and
sub
pop
lcall
xchg
sub
mov
push
sbb
pop
out
mov
movsl
ret
cmp
loopne
push
divb
mov
dec
loope
dec
pop
pop
rcll
push
and
adc
loop
mov
xor
and
cmp
jns
cs
mov
dec
push
popa
xchg
mov
mov
cmp
or
cmp
mov
call
xlat
cs
xor
mov
roll
cmp
xor
icebp
cmp
inc
jmp
cmpsl
inc
pop
lahf
mov
xor
jecxz
test
arpl
mov
sbbb
and
sub
push
inc
push
imul
ss
loope
fcmovu
push
dec
add
pop
arpl
mov
popf
mov
jae
pop
int
xor
cmp
mov
and
adc
jge
mov
leave
das
jo
test
gs
test
shll
dec
loop
push
mov
xchg
pop
rolb
imulb
aaa
dec
push
out
testl
add
pop
sahf
sahf
mov
xor
add
ja
ds
push
sbb
cmp
out
and
inc
xor
clc
out
loope
xchg
lods
in
mov
into
xchg
jns
lods
mov
add
sbb
ljmp
cli
aaa
jns
das
or
fists
xor
sub
pop
adc
repnz
js
out
xchg
and
inc
shlb
dec
mov
add
imul
mov
jae
rcrb
arpl
call
sub
xchg
std
out
cmp
rdmsr
mov
xor
mov
loop
in
pop
inc
sbb
pop
clc
xchg
mov
jle
leave
repnz
in
add
push
cmp
callw
popa
push
adc
loop
lds
pop
xchg
test
adc
data16
inc
mov
cli
enter
roll
repnz
add
notb
sbb
dec
leave
arpl
sub
dec
adc
lods
popa
xor
test
dec
fildl
repnz
fsubs
ret
mov
ficoml
mov
call
rcr
jmp
jno
pushf
es
pop
inc
dec
ds
pop
pop
inc
cli
int3
dec
pop
das
pop
call
sub
sti
fisttpll
call
testl
inc
das
ds
in
push
fdivrl
sub
mov
mov
jns
test
cmc
dec
cmp
leave
jge
call
mov
inc
pop
pop
pop
arpl
mov
lods
into
loopne
loop
mov
ds
ret
cs
add
in
leave
adc
add
ret
das
dec
fsubp
out
pop
test
out
call
push
imul
push
fistl
sub
fcompl
test
fs
dec
sbb
sbb
jne
push
lcall
push
inc
xchg
pop
leave
xor
inc
in
xor
sbb
fstpt
repnz
xchg
push
leave
mov
fsubp
dec
imul
data16
dec
fs
arpl
popa
lods
pusha
dec
lret
ds
pop
ja
pop
cli
mov
lahf
leave
in
xchg
mov
insb
test
sub
inc
pop
inc
push
pop
xchg
inc
mov
imul
in
cmp
dec
cmp
sbb
aaa
sahf
mov
xor
cmp
mov
inc
adc
bound
add
jne
out
bound
or
call
fisttpll
out
aas
sub
aas
loope
pop
jmp
dec
test
popf
xlat
arpl
dec
rorl
rcrl
sbb
cld
mov
pusha
fdivs
jnp
ljmp
lret
cmpsb
sbb
popa
mov
cmp
sahf
sbb
repnz
out
pop
clc
pop
repnz
add
insl
dec
addl
fstp
je
jmp
jmp
test
in
pushf
fistpl
leave
xor
ds
xor
xchg
push
inc
aam
adcb
dec
pop
dec
pop
dec
cs
cmp
lcall
je
xor
jmp
cmc
ds
jno
out
in
lahf
xchg
sub
fcoml
fs
rolb
es
mov
aam
xlat
gs
mov
fisubrl
push
cs
arpl
pusha
cmc
mov
dec
push
cld
cmp
or
xor
lods
and
scas
rorb
rorb
mov
dec
inc
cmpsb
mov
repnz
inc
in
aas
sub
and
xor
pop
push
push
pop
dec
adc
cmpsb
shlb
adc
in
mov
ss
cmp
xor
mov
dec
inc
ss
jl
rorl
jne
aas
test
pushf
daa
sbb
cli
dec
adc
mov
add
clc
inc
sub
aad
jge
xlat
in
popa
dec
push
pop
or
call
ss
fucomp
sbbl
xor
add
cmp
arpl
fldl
push
cmp
xor
aam
sbb
lods
movsb
dec
aam
add
add
into
cmp
sub
call
lods
xor
mov
jmp
out
jecxz
and
inc
xor
subl
scas
rcll
xor
int
mov
dec
lea
or
sbb
xchg
mov
mov
dec
fisttpl
push
pop
inc
push
push
inc
mov
add
sub
pop
jecxz
enter
into
dec
sub
dec
ret
cmp
jmp
pop
outsb
test
pop
mov
imul
push
aad
inc
sti
sub
movsl
push
leave
pop
push
cs
dec
or
rcr
mov
mov
push
mov
sub
sbb
sbb
sbb
repnz
pusha
fisubrl
imul
sub
cmpsb
out
push
adc
push
stos
adc
inc
test
sbb
and
sub
repnz
in
aaa
dec
fs
xor
and
loopne
negb
sahf
jns
push
mov
push
popa
pop
xor
or
and
push
sub
xor
xchg
add
in
out
popa
sbb
mov
and
sub
ret
aam
jge
ljmp
mov
mov
cli
pop
out
iret
sub
pop
mov
mov
outsb
push
out
push
jecxz
xchg
enter
pop
lods
sahf
add
jecxz
repnz
mov
xor
pop
test
inc
push
pop
icebp
cmp
popa
rcrl
adc
pop
lahf
cmpsl
sub
xor
xchg
push
ds
add
shrl
xlat
sub
dec
sbb
imul
repnz
in
xchg
iret
mov
ljmp
mov
test
push
sbb
and
push
xor
or
imul
scas
adc
push
aad
xor
mov
fstps
orl
push
fwait
push
pop
push
pop
push
cli
lret
push
pop
rcrb
push
or
jbe
shl
mov
or
pop
pop
stos
add
outsl
sub
push
shl
in
mov
pop
lods
pop
sub
mov
fisubrl
aaa
ds
sbb
cmp
cmp
and
adc
xor
int
dec
loope
lret
stos
and
add
push
xor
std
adc
sub
cltd
dec
cmp
jbe
cmp
fwait
mov
addr16
bound
dec
rcrb
sub
adc
scas
mov
inc
fs
cli
fs
fistl
xchg
push
xchg
push
ss
xchg
dec
xor
sub
popf
mov
lret
fisttpl
pop
divb
or
xchg
cmpl
sub
sub
xchg
inc
leave
sub
ljmp
push
jne
or
fwait
sub
notb
lret
cltd
mov
loop
loop
test
cmp
fadd
test
or
inc
sbb
inc
sbb
inc
in
inc
dec
sub
sub
int3
sbb
inc
inc
or
mov
arpl
dec
xor
int
inc
mov
in
xor
inc
sub
jp
mov
xchg
inc
ds
cmp
aas
fstpt
cmp
jne
cmpsl
stos
jecxz
pop
fstp
cmpsl
inc
cltd
and
or
bound
movsl
dec
les
push
lret
inc
roll
lods
mov
in
leave
push
mov
inc
shlb
popa
push
push
sub
fistl
mov
ljmp
cmp
aaa
sbbl
out
xor
and
dec
mov
sbb
test
movsl
mov
push
inc
inc
sti
repnz
lcall
cmp
jp
jecxz
xor
xorb
std
sub
or
sub
mov
in
pop
xchg
mov
fidivrs
lods
sbb
sub
pop
mov
xchg
sub
leave
mov
iret
cmpsb
scas
les
dec
lods
xchg
mov
sti
inc
lret
movsb
testl
mov
lock
sahf
sub
shl
and
or
mov
xor
test
push
add
fs
push
mov
jle
sbb
mov
cs
dec
in
sub
mov
sub
ds
push
mov
push
lds
or
lods
xorb
xchg
add
push
mov
mov
mov
xor
dec
in
in
push
dec
pop
sub
cmp
in
push
and
pop
xor
adc
in
adc
cmpsb
cs
ja
pop
pop
adc
in
repnz
add
imul
mov
out
cli
in
in
scas
dec
les
fcmovne
out
cmpsb
sub
mov
movsl
lahf
lods
fisubl
in
push
fidivrs
adc
sub
imul
inc
lds
cwtl
shll
mov
or
ss
imul
out
popa
lds
xlat
out
fwait
sub
mov
cmp
pusha
popf
jg
push
inc
mov
cmp
mov
push
int
mov
icebp
push
inc
inc
aam
ss
in
test
pop
mov
pop
stc
push
jne
sar
pusha
dec
test
cmpsb
sarl
mov
pop
lcall
jns
out
lea
xchg
add
rcl
imul
mov
cs
mov
cltd
sbb
dec
test
inc
and
mov
mov
mov
fwait
pop
sbb
and
mov
pusha
ss
push
std
mov
aaa
mov
std
adc
clc
ja
repnz
fs
and
enter
dec
xlat
dec
mov
mov
popa
xor
fwait
xlat
pop
adc
int
lret
in
cs
orb
mov
xor
jmp
sub
add
dec
cmp
push
cmp
test
and
mov
jp
gs
popa
push
into
add
les
mov
pop
mov
mov
rclb
leave
adc
aaa
xchg
inc
sub
cltd
jns
xchg
ljmp
pusha
jmp
rcrb
pop
or
pop
jne
pop
insl
push
lods
push
adc
push
in
push
pop
arpl
or
mov
inc
xchg
popa
inc
ja
push
fcom
inc
in
jbe
movsl
fidivl
push
fwait
lods
fwait
shll
sub
jle
inc
fcoms
pop
in
jmp
pop
ficoml
dec
pop
popf
mov
jne
imul
sbb
cmpsl
dec
adc
mov
leave
imul
sbb
pop
xor
xchg
dec
mov
fs
xchg
mov
xor
or
add
cmp
push
and
clc
sbb
dec
movsl
outsb
mov
sbb
xor
les
popa
pushf
sarl
loopne
add
scas
push
push
push
mov
pop
bound
bound
fwait
stc
xor
fsubs
out
jmp
lret
fidivl
jge
cmp
push
push
pop
lret
mov
inc
and
movsb
dec
fstp
mov
in
pop
arpl
mov
cmp
cmp
sti
sbb
xor
and
dec
dec
rcll
aad
cli
sub
pop
aas
pusha
pop
pop
pusha
add
pop
lret
xor
icebp
stos
adc
idivb
cmp
inc
dec
sub
sub
cmp
and
cwtl
and
adc
mov
pop
andb
out
sub
or
imul
data16
mov
mov
xor
pusha
sbbb
mov
pusha
pop
jo
xor
int3
push
ret
push
test
mov
dec
jo
mov
dec
int3
pop
xor
mov
pop
dec
push
movsl
gs
imul
repz
sahf
ficompl
cs
and
cmp
sbb
mov
sbb
lock
cld
loop
sahf
inc
push
mov
sbb
lahf
pusha
fistpl
xchg
ficoml
cmp
push
jp
popa
xor
xor
xor
pop
push
cmpsl
dec
mov
das
cwtl
xor
xor
xor
shlb
sbb
cs
jne
jle
push
adcb
jge,pn
push
gs
dec
popa
xor
dec
pop
insl
pop
lods
pop
adc
dec
push
adc
mov
ss
dec
shll
das
or
adc
inc
mov
in
xor
jl
imul
popa
jns
fidivrl
cli
cmpsb
sub
cli
cwtd
hlt
xchg
lahf
sub
push
in
call
out
mov
lods
jne
sbb
jp
repz
or
pop
jge
lds
leave
out
aam
fnsave
lcall
push
push
fnsave
pop
and
pop
fildl
push
leave
pop
ret
pop
xchg
fsubl
mov
xchg
or
mov
das
cmp
jmp
int
pop
repz
sub
add
dec
pop
movsl
out
scas
dec
imul
adc
xchg
leave
mov
outsb
sub
fstpt
fwait
rcrb
sbb
jl
std
push
sbb
cmpsl
mov
sub
inc
popf
mov
inc
mov
mov
or
fdivr
aad
xor
mov
push
bound
adc
or
ret
inc
ds
sbb
int
sub
ds
les
pop
adc
fdivrl
in
ss
int3
lods
out
push
pop
ja
xor
jno
insb
leave
int
imul
sar
in
cmp
pop
loop
pop
push
repnz
inc
daa
les
adc
mov
int
push
jle
push
in
shll
mov
mov
fnsave
xor
stos
fstl
dec
dec
push
or
repz
fstpl
int3
cmc
mov
ds
mov
xor
mov
mov
cmpsl
cltd
fisubrl
cs
jg
cmc
scas
loopne
inc
pop
inc
rol
movsb
push
push
mov
sub
lret
cli
scas
xchg
dec
cmp
push
test
dec
cmp
xor
dec
test
cmp
lods
cmp
cmp
xor
jns
xor
lods
xor
in
sbb
mov
mov
lret
test
vrcpps
test
xor
fisubrs
push
hlt
cmp
popa
sub
and
jge
jb
cmpsl
loop
push
sub
notb
cwtl
mov
pop
leave
xor
sti
jl
fists
xor
sbb
mov
mov
bound
mov
sbb
mov
movsb
fsub
test
sub
in
sbb
icebp
cld
enter
sub
inc
pusha
inc
cmp
shrl
push
pop
inc
mov
mov
lock
pop
fisttpll
and
xor
movsb
and
dec
jo
dec
test
ds
xor
jp
inc
cs
in
ret
popf
les
push
pop
inc
pop
dec
iret
push
in
fcoml
xlat
push
jl
xor
push
in
xor
addr16
jg
out
or
inc
ds
dec
call
mov
xchg
enter
sub
sahf
inc
sub
xchg
inc
cs
ds
or
sub
dec
stos
movsl
dec
inc
rorb
cmp
jne
or
test
sbb
xor
mov
aad
dec
sub
frstor
xor
sbb
cmpsl
mov
fwait
test
pop
inc
sbb
inc
ds
jp
pop
inc
jg
addr16
dec
ss
xor
or
push
xor
int
xchg
mul
bound
popa
pusha
xor
push
xchg
in
outsb
xchg
adc
cmp
sub
sbb
dec
mov
outsb
fwait
lods
leave
xor
dec
cmp
or
addr16
sub
std
push
push
test
gs
cmp
cmp
insl
repnz
mov
sbb
jno
clc
sbb
fnsetpm(287
adc
mov
ret
inc
cmpsl
data16
sub
pop
push
ss
cs
inc
movsb
jl
leave
jmp
add
arpl
fiaddl
jmp
push
sub
mov
test
test
xor
jecxz
gs
sub
push
in
add
dec
rcl
dec
cmpsl
dec
orl
add
inc
jno
or
aas
test
adc
sub
add
mov
filds
clc
add
cmp
sub
ret
aam
sbb
cmp
push
test
inc
leave
sub
lods
sub
mov
mov
push
bound
sub
fstpt
fcmovne
fwait
or
pop
ret
sub
adc
xor
push
push
in
pop
shrb
jmp
inc
hlt
pushf
jns
jne
popf
xor
pop
pop
dec
fwait
pop
inc
lods
xlat
cld
sub
dec
movsb
add
sub
cli
fsubl
lahf
push
test
sbb
mov
xor
mov
mov
push
into
fs
inc
dec
sub
inc
test
sbb
xor
xor
das
lret
jns
sub
pusha
mov
imul
push
jbe
clc
mov
and
push
push
imul
ds
std
dec
xor
sahf
std
dec
rcl
mov
or
ficoml
dec
cmp
mov
out
add
cmp
adc
cwtl
add
mov
pusha
lea
sub
and
inc
pop
in
fsubp
pop
out
iret
sbb
dec
dec
xchg
add
call
inc
dec
insb
data16
popf
adc
in
sub
loopne
adc
xchg
int3
in
sub
int3
arpl
sarb
mov
push
mov
sub
push
les
and
rcl
cmpsl
iret
inc
dec
aad
cmp
xor
test
rorb
leave
mov
adc
dec
xrelease
pop
filds
or
insl
in
xor
mov
jns
mov
lea
bound
cmp
test
mov
test
push
jl
push
aam
mov
add
jo
dec
mov
fndisi(8087
cmp
int3
cmp
mov
sbb
adcl
cld
push
mov
stos
in
ds
add
xchg
cmpsb
cmpsl
push
cli
mov
inc
push
jecxz
addr16
jno
data16
popf
cmp
pop
pop
outsl
lds
inc
sbb
inc
das
mov
imul
push
in
pop
in
stc
push
mov
test
xchg
js
jo
xor
jp
cmp
fstl
aas
dec
fists
ret
push
pop
dec
xor
pop
xchg
ds
iret
dec
outsl
xchg
or
fs
pop
sbb
push
inc
popa
pop
jb
fldenv
pusha
cltd
pop
pop
and
pop
cs
pop
jp
mov
fidivs
mov
stos
repnz
loopne,pt
fld
daa
xchg
fsubr
test
rol
leave
stos
gs
imul
jl
inc
or
ss
mov
push
ficompl
sbb
scas
in
sub
and
pop
mov
push
rorl
or
inc
push
push
inc
ret
mov
xor
aam
push
faddp
inc
lds
mov
dec
pop
push
cli
rorl
cmpsl
aaa
addb
ds
jl
fists
cmpsl
aas
jl
xor
mov
les
out
mov
mov
xchg
push
adc
dec
fucomip
mov
and
cmpsb
or
orl
imul
dec
imul
jmp
inc
mov
lahf
cmpsl
mov
push
shlb
sub
cs
lret
or
xlat
mov
in
scas
cmpsl
dec
sbb
les
cmpsl
imul
xchg
in
out
rcrl
adc
lods
shl
imul
or
push
call
sbb
and
fwait
fwait
sub
push
mov
adc
sub
psrlq
ja
pop
sbbb
xchg
fistpll
scas
or
movsb
mov
sbb
testb
mov
repz
dec
inc
and
xor
and
sbb
aad
subl
sub
mov
pop
sub
aam
pop
in
leave
rcll
xor
movsl
dec
stc
fcmove
mov
adc
inc
gs
test
mov
flds
mov
shl
xor
arpl
bound
jmp
lret
pop
inc
sub
jne
or
lahf
out
lods
or
mov
pushf
push
fistl
pop
cltd
leave
jmp
sub
mov
mov
addr16
hlt
sub
popa
sbb
push
dec
adc
or
pop
iret
mov
jb
push
int3
pop
jecxz
stos
adc
pop
add
mov
add
dec
movsl
mov
dec
arpl
mov
mov
call
in
inc
loopne
sub
rclb
popa
jl
pop
push
adc
pop
in
adc
sbb
inc
les
sub
jg
mov
inc
fcmovnb
fwait
inc
sarb
cli
cmp
or
insl
sbb
lds
dec
push
add
lret
mov
sub
stos
xor
pop
xlat
jp
fcmovbe
dec
pop
and
inc
and
inc
lds
imul
out
cmp
fisubrs
pop
adc
loopne
mov
ror
aaa
sar
cmp
jl
aaa
pop
pop
inc
add
mov
cmc
mov
out
inc
mov
fsub
sbb
fstpt
adc
jecxz
js
jo
scas
xor
pop
call
cmp
sbbb
inc
in
inc
lahf
ljmp
cmp
aas
mov
fisttpll
mov
cmp
sahf
inc
push
sub
ret
sub
aaa
sbb
pop
lret
xor
out
cmp
scas
sbb
add
dec
mov
sub
fwait
mov
push
cmp
aad
push
cli
push
ss
pop
bound
add
pop
imul
xor
inc
scas
in
cs
fwait
jp
in
pop
fcompl
sub
out
es
xor
push
popa
cmpsl
jg
pop
fidivl
dec
inc
subl
adc
shll
ret
and
gs
dec
das
mov
push
in
push
test
call
push
mov
repz
mov
jnp
jmp
cs
xlat
pop
test
lds
push
mov
mov
add
ret
cmpsl
push
cs
jns
nop
fldl
jecxz
or
pusha
aam
imul
arpl
adc
movsl
bound
loop
in
fstpt
and
mov
sub
xchg
subb
add
movsb
das
pushf
loopne
stos
mov
out
lds
pop
mov
int3
dec
stos
xchg
daa
aas
bound
aam
mov
jo
adc
dec
push
pop
dec
push
xchg
push
push
inc
in
in
push
mov
inc
mov
pusha
pop
add
aaa
mov
scas
ret
fcmovu
pop
push
jmp
xor
xor
push
pop
pop
jbe
out
push
jmp
out
mov
test
dec
jne
das
movsb
fs
adc
xor
sub
dec
stos
mov
xor
shrl
dec
test
pushf
fs
fnstcw
aas
or
imul
ficompl
loopne
cmp
mov
scas
xor
cmpsl
mov
sahf
fisttpl
sbb
xor
ss
stc
das
je
loope
gs
callw
fdivp
popa
mov
mov
and
adc
imul
fwait
cmpsb
loopne
jbe
jbe
jbe
ja
push
mov
outsb
sub
imul
adc
push
pop
dec
pop
cmp
test
sahf
jns
fmulp
dec
add
shrl
out
inc
loope
or
xor
stc
jp
cmp
in
jno
pusha
dec
inc
pop
inc
ja
pop
mov
lods
lret
in
arpl
je
sub
jo
xor
in
fxam
das
xor
arpl
mov
int3
les
or
push
push
and
loop
dec
sbb
shll
jl
mov
sub
sub
adc
xchg
mov
scas
cs
int3
js
mov
call
fildll
push
push
dec
push
xchg
shlb
push
xor
fwait
leave
pop
in
rol
push
xchg
sarl
sub
cli
in
in
icebp
lcall
or
sub
inc
dec
push
xchg
inc
cs
sub
call
shll
jmp
mov
daa
add
xlat
cmp
xor
inc
fisubrl
cmpsl
xor
sbb
lods
loope
xchg
cli
aas
mov
in
sbb
ds
mov
in
sub
pop
dec
xor
adc
mov
mov
jbe
inc
daa
hlt
mov
and
loopne
out
outsb
les
inc
xchg
lcall
idivb
in
inc
mov
std
fsubrp
aaa
in
mov
mov
movsb
cmp
into
inc
cmp
movsl
adc
loope
pushf
je
mov
dec
pop
xchg
aas
push
roll
popa
shrl
pop
xchg
sub
lods
cwtl
mov
mov
cs
sub
aaa
push
mov
xor
xor
xor
dec
jp
push
push
ds
lods
out
fmulp
gs
or
xlat
into
inc
inc
xor
xchg
or
adc
std
xchg
cmpsl
arpl
dec
cmp
imul
push
lods
popa
daa
dec
sahf
lcall
vunpcklps
dec
and
aam
movsl
outsb
cmp
sbb
and
sbb
pop
push
imul
xor
lcall
or
loopne
push
push
xor
movsl
dec
cmp
jle
inc
cmp
clc
iret
cmpsb
cmp
int
cmpsl
jns
loop
push
mov
in
mov
mov
lods
sahf
hlt
mov
jno
sub
fstp
mov
pop
rorb
cmp
lcall
mov
lea
jo
hlt
inc
gs
aas
call
inc
in
mov
das
adc
js
test
movsl
mov
repnz
testb
xor
push
movsl
in
leave
dec
mov
movsl
ljmp
jmp
and
cmpsl
int3
pop
push
int3
xchg
adc
push
fiaddl
in
inc
push
outsl
sub
add
sub
push
xor
fwait
in
fidivs
loope
jl
xor
cmp
popa
inc
pop
jl
inc
xchg
lret
fisubrl
cmp
pop
popa
leave
ljmp
dec
cs
leave
mov
ret
in
cmpsl
pop
inc
sbb
pop
fidivl
aam
fisubs
adc
lret
fimull
cld
mov
out
add
mov
ss
movsl
jno
dec
test
sbb
sbb
jmp
fnstsw
lds
ficompl
cmpsl
pop
inc
cmp
pop
xchg
push
jmp
sbb
hlt
add
cmp
rorl
sub
in
push
loope
adc
les
add
pop
out
xor
dec
dec
jae
pop
inc
mov
call
lret
xchg
push
xorb
in
jecxz
into
sbb
test
jmp
jecxz
inc
cmp
sub
adc
xor
dec
leave
xchg
stos
jno
aam
outsl
out
cmc
xchg
outsl
sub
jmp
cmp
loop
aas
popf
dec
add
jae
mov
jmp
shlb
in
shlb
fs
inc
dec
movsb
inc
jns
mov
inc
scas
inc
dec
fisubrs
test
cmp
pop
pop
test
sbb
inc
xor
std
adc
test
scas
xchg
fdivrs
dec
xlat
ret
add
push
in
cs
in
sbbb
lcall
ds
dec
xor
sub
inc
out
push
pushf
pop
in
lret
nop
sub
mov
push
lds
das
in
inc
iret
daa
std
adc
negb
jo
sti
mov
add
xor
ss
pop
xchg
cwtl
sub
sub
adc
sub
inc
xor
das
popa
xor
sbb
inc
hlt
jo
data16
pop
xor
xchg
inc
mov
sti
ja
mov
dec
mov
mov
jg
cmp
dec
xor
inc
in
leave
cmp
test
jp
pop
sbb
leave
lods
dec
adc
add
dec
into
inc
jl
push
mov
out
mov
pushf
pusha
pop
jmp
mov
jle
ljmp
jmp
xchg
push
mov
mov
in
mov
mov
scas
mov
mov
iret
push
push
cld
mov
mov
inc
hlt
dec
cmp
mov
lds
mov
inc
stos
mov
and
and
sub
adc
lcall
addb
inc
dec
movsb
mov
into
popa
sub
push
roll
in
mov
mov
aaa
mov
scas
ds
pusha
lret
jl
mov
icebp
jno
mov
out
pop
popa
sub
mov
adc
mov
cld
sarl
push
rcll
aam
dec
shl
sub
leave
sbb
fcmovnu
fwait
fwait
pop
pop
cs
rcll
cmpsb
imul
inc
xchg
ret
ljmp
sub
das
dec
inc
dec
mov
jae
pop
pushf
push
std
cs
std
mov
cmpsl
mov
mov
popa
loope
data16
fidivrs
test
rcrl
pop
push
sbb
dec
mov
xlat
sarb
mov
cld
pop
mov
xor
push
repnz
mov
xor
add
fstpl
dec
popa
and
mov
push
xor
xor
xchg
sub
mov
pop
sub
insl
das
cmp
pop
int3
les
push
xor
int3
adc
iret
mov
movsb
add
sbb
fcmovnu
sahf
pop
adc
pop
push
ror
out
or
in
notb
mov
rcrl
mov
in
fstl
adc
out
cmp
outsl
pop
insl
mov
arpl
in
mov
cmp
imul
cmp
pusha
clc
loopne
testb
loop
cmp
inc
sub
pop
ja
lods
cli
cmp
cmp
scas
sbb
and
loop
loope
filds
xchg
mov
fnstcw
int
xlat
push
xlat
inc
loop
popf
xchg
inc
test
fcompl
aad
and
test
jg
push
cmp
fs
leave
push
shl
les
mov
jmp
or
cmpsb
dec
das
xchg
sub
out
jmp
mov
pop
gs
fldcw
pop
xor
add
lods
incl
leave
lods
shlb
sahf
inc
leave
fisubrs
dec
jae
or
dec
mov
mov
pop
mov
push
loope
popf
rcr
popa
pop
rorl
push
popa
dec
mov
xor
pop
iret
jns
pop
addl
cmp
jecxz
pushf
loop
mov
je
xor
aas
ret
sub
xlat
jnp
dec
or
aam
in
sahf
jmp
rorb
xlat
xor
out
test
xlat
mov
inc
mov
cmpsl
ret
dec
in
dec
lds
push
ret
loop
leave
dec
subl
scas
sub
popa
mov
inc
sub
mov
cmp
pushf
pop
fimull
out
dec
push
push
mov
pop
aam
in
leave
inc
jbe
aas
int
jnp
inc
jne
loop
mov
in
aaa
es
jecxz
fwait
leave
push
mov
in
sub
sti
dec
cmp
xchg
insb
mov
sbb
inc
int3
push
sahf
or
pop
movsb
clc
mov
out
or
sbb
dec
sahf
mov
loope
mov
inc
pop
pusha
sbb
leave
in
leave
aad
xchg
dec
rcrb
rol
ja
out
cmp
sahf
push
mov
ret
ja
aaa
test
jmp
sarb
imul
pop
hlt
or
fnsave
aas
and
pop
xchg
iret
jmp
cs
xchg
popf
loopne
sub
fucomi
pop
es
repnz
pop
mov
aad
mov
sarl
aad
in
into
fldt
push
int3
adc
dec
jb
push
lds
in
clc
ret
lret
mov
mov
mov
mov
mov
iret
shll
mov
sub
dec
cli
xchg
mov
iret
xlat
addl
push
in
inc
in
jp
push
mov
out
imul
ficoml
lcall
dec
adc
data16
fldl
sahf
aam
ret
in
inc
or
xor
in
jns
in
cmc
cli
pop
fistl
cltd
subb
jle
inc
sbb
fldl
movsl
and
cmp
push
mov
mov
and
cmp
sub
cmp
sub
popa
or
add
daa
sbb
pop
popa
dec
xor
nop
leave
xchg
sub
jnp
call
out
testb
xor
add
xor
in
fnstsw
or
add
add
add
xor
push
pop
xchg
cli
ds
clc
sub
sti
or
cmc
mov
sub
sub
out
inc
lcall
popa
sub
dec
es
sub
ds
push
jl
push
ret
pushf
xchg
mov
scas
mov
xchg
dec
loopne
cmp
sti
mov
in
addr16
lds
popf
int
dec
rcl
enter
sbb
xlat
dec
inc
xchg
ret
lods
sub
sarl
pop
add
cmp
xchg
clc
sahf
push
xor
loopne
mov
cmp
jmp
out
pop
cmp
inc
in
xor
jle
push
push
cmp
fisttpl
dec
add
mov
loopne
lods
lock
lcall
mov
sbb
mov
dec
pusha
cmp
in
xor
adc
addr16
lcall
inc
mov
xor
stc
sub
sbb
inc
xor
repnz
mov
xor
rclb
xor
enter
or
lods
jo
addr16
outsl
out
mov
loop
or
dec
test
push
rcr
and
rcrl
pop
pop
cmp
arpl
sub
push
imul
ficoms
xchg
inc
sbb
lds
jnp
pusha
lret
das
dec
cs
sub
rolb
mov
sub
jnp
mov
sbb
adc
rcr
mov
das
xchg
dec
ja
mov
push
mov
lds
xor
add
mov
mov
out
sbb
mov
clc
leave
data16
cmp
push
cmp
xor
mov
or
inc
lds
adc
icebp
dec
mov
sti
es
in
sub
fiaddl
sub
pop
xor
mov
sub
xor
shll
push
fstpl
aam
scas
or
mov
shrb
lods
sub
and
hlt
fbld
mov
ds
mov
add
cmp
repz
jp
pop
stos
mov
leave
ret
mov
push
lcall
ds
sub
mov
pop
scas
xlat
inc
bound
xor
rcl
fldt
rclb
cli
loope
fndisi(8087
ss
push
lret
jg
sarb
repnz
sub
cmpsl
scas
dec
adc
cmp
cli
pop
mov
scas
in
stos
in
push
lods
mov
fisubrl
pop
xchg
adc
adc
pop
mov
fs
loop
inc
xlat
into
leave
rolb
fbld
clc
and
test
into
pop
push
or
imul
es
clc
scas
lds
pop
sbb
mov
in
cld
dec
fistl
or
stos
cli
inc
data16
push
leave
out
adc
outsl
jmp
dec
cmp
inc
imul
jb
push
and
imul
xor
vcvtsd2si
loop
loop
lds
sbb
aaa
lret
push
xor
inc
shrl
out
inc
flds
clc
mov
adc
enter
and
and
cld
ret
sub
dec
cmp
ja
pop
sbb
shlb
dec
ds
cs
cli
les
and
cmp
or
sar
sarb
mov
push
mov
div
push
arpl
inc
inc
int
dec
push
xchg
shl
sub
or
mov
jne
jp
aad
inc
sbb
mov
or
add
hlt
sti
or
mov
pusha
lahf
sub
enter
dec
fmuls
add
lret
jl
out
stc
loopne
inc
pop
or
addr16
xchg
and
or
in
sub
popa
or
imul
sahf
xchg
jno
xor
loope
std
popa
pop
testb
lods
mov
and
clc
sub
leave
hlt
mov
adc
sahf
leave
ss
fdivr
iret
cmpsb
loop
mov
mov
cmp
es
repnz
adc
js
hlt
add
add
pop
add
mov
dec
repnz
inc
pop
fwait
cld
lret
std
test
and
test
lock
fst
hlt
repnz
insl
test
ret
jge
mov
mov
sbb
out
movsl
push
inc
imul
or
gs
inc
ja
adc
bound
xchg
sub
and
inc
push
and
adc
aaa
jo
ret
sbb
fiaddl
into
cmpsl
shl
dec
inc
in
lcall
xor
push
daa
rclb
sub
push
fistpl
popa
adc
test
arpl
mov
fwait
out
cmp
dec
sub
rolb
push
cmpb
nop
clc
mov
inc
sub
push
push
jno
jl
cmpsl
xor
rcrl
mov
cs
sbbb
sbb
push
test
cmp
dec
sub
jmp
es
sbb
add
out
or
loope
lods
xor
jecxz
pop
cmp
or
out
aad
mov
or
xor
ret
bound
psraw
icebp
sub
push
sub
pop
pop
sbb
sub
push
in
inc
pop
xor
lret
cli
sbb
sub
jmp
mov
add
xor
out
cmpsl
cmpsb
fisubl
cmc
sbb
repnz
pop
dec
sahf
or
push
sub
bound
sbb
push
dec
cs
roll
movsw
gs
arpl
pusha
sahf
sub
push
inc
lret
pop
mov
insl
pop
lods
push
ss
xlat
push
leave
aas
push
or
push
inc
mov
dec
cs
dec
sub
dec
sub
sbb
sbb
leave
lret
cmc
les
push
clc
push
shr
xchg
sbb
mov
mov
aas
xor
pop
sub
sub
and
inc
addr16
data16
jns
xor
xor
mov
pop
in
mov
imul
cmp
lods
aaa
adc
xor
int3
inc
aad
xorb
dec
daa
aas
inc
add
les
int3
inc
xlat
rorb
imul
insb
or
sub
jp,pt
xor
pushl
mov
mov
int
dec
inc
mov
add
stos
xchg
mov
loope
push
mov
xchg
push
lods
fcomps
iret
movsl
ds
sub
inc
xchg
daa
cmp
data16
test
mov
push
popf
dec
dec
push
int3
inc
xor
inc
and
or
xor
das
jmp
ljmp
insb
test
jnp
jp
jns
push
ja
mov
icebp
je
inc
lcall
fwait
leave
mov
imul
cmpsl
cmp
in
mov
jno
lods
or
movsb
pop
sub
add
add
insl
ljmp
lods
std
push
dec
xlat
sti
leave
aas
stc
dec
inc
in
mov
repz
repnz
cmpsb
cmp
xor
xor
and
and
pop
lret
push
adc
push
mov
xor
or
mov
fisubs
pusha
or
lret
pop
rcrb
add
add
addb
incl
mov
ss
cmp
jl
rol
leave
pop
rclb
sub
subb
mov
push
lcall
sub
int3
xor
sub
jp
inc
pop
aas
aad
sbb
sbb
pop
clc
push
sub
cmp
imul
xor
das
cmp
cmp
stc
push
int
adc
icebp
push
aas
cmp
cmp
sub
pop
inc
pop
mov
inc
jns
cmp
imul
rcrb
dec
lds
mov
sub
sti
or
sub
and
mov
pusha
sub
dec
fiaddl
aas
or
xor
sub
gs
pop
hlt
jmp
inc
test
cs
inc
frstpm(287
pop
mov
dec
mov
cmp
add
mov
adc
fidivs
dec
adc
dec
pop
rcll
adc
lcall
pop
popa
push
pusha
push
cs
push
xor
in
inc
push
clc
dec
add
inc
dec
inc
lcall
pop
xchg
popa
ror
push
cs
inc
cs
cmp
lret
mov
or
das
inc
fistpll
inc
xor
ret
dec
mov
mov
xor
ds
pop
add
xor
pop
aas
mov
sub
inc
dec
imul
call
popa
xchg
aas
xor
xor
dec
addr16
push
popa
test
dec
out
push
flds
fadd
lret
imul
inc
cmp
leave
jbe
cmpsl
dec
and
aas
scas
sub
xor
popa
in
sbb
sahf
test
cmp
insl
das
in
mov
pop
jne
push
dec
push
enter
cmp
lcall
pop
push
hlt
push
sub
mov
mov
mov
cmp
lahf
dec
es
push
xchg
dec
ret
mov
call
pop
pop
push
shll
lods
lret
push
mov
fcoms
rcrb
inc
sub
aam
int
loope
in
cmp
aaa
adc
push
xor
fistps
dec
pop
data16
fs
arpl
bound
pusha
sub
pop
inc
sti
sub
jb
push
dec
cmp
adc
mov
xor
inc
mov
sub
sub
sbb
imul
gs
jno
lods
bound
mov
in
pop
in
pop
in
pop
in
pop
pop
cs
cmp
mov
push
xchg
stos
push
cli
rcll
cmpsb
scas
push
ja
and
dec
in
dec
pusha
lods
xchg
dec
jge
in
jp
inc
push
aas
cmp
cmpsl
push
push
inc
stos
push
fcomps
dec
scas
adc
fcmovb
inc
inc
adc
movsb
inc
cmp
inc
dec
test
sub
mov
lds
outsb
pop
dec
arpl
repnz
in
pop
adc
roll
and
xor
or
mov
int
aas
mov
inc
das
add
cmp
cmpsl
das
cmp
cmp
lcall
in
xor
xchg
ja
jge
arpl
inc
out
dec
sub
pop
int
xchg
push
lahf
mov
add
lods
lcall
cmp
lret
ss
xor
mov
dec
xchg
fs
push
xchg
test
pusha
jo
jo
lock
lret
mov
icebp
mov
pop
dec
stos
roll
dec
pop
dec
les
addb
leave
loop
push
rcll
aas
push
fbld
cmp
lret
xor
cmp
lret
sbb
sub
pop
dec
sbb
imul
fs
int3
lcall
jge
lods
push
lret
mov
rorl
repnz
inc
push
cmp
cmp
and
sub
cmp
mov
lock
data16
fs
push
pop
mov
push
cmp
cmp
lcall
insl
inc
lods
inc
or
push
xchg
cmp
sub
jbe
clc
cmp
ss
out
xor
xor
fs
arpl
bound
mov
cmp
lcall
mov
xchg
push
sub
cli
cmp
dec
fidivl
inc
dec
aam
xor
inc
lcall
sarl
mov
lcall
dec
lret
sub
out
imul
das
sbb
or
scas
fcmove
xchg
mov
fnstsw
inc
sub
sub
les
cmp
aaa
clc
mov
shll
xor
dec
mov
xchg
cmpsb
dec
sub
sub
out
imul
pop
cmp
inc
inc
aaa
add
adc
dec
push
pop
xlat
inc
leave
arpl
lods
mov
xchg
sbb
inc
push
das
inc
xor
xor
mov
les
pop
cmp
int3
das
jmp
push
and
push
push
mov
bound
pop
xor
dec
xor
mov
mov
inc
sub
xor
int
xchg
ds
cmp
pusha
cmp
push
fbstp
lock
pop
dec
inc
dec
cs
cld
int
dec
sbb
cmc
push
leave
aad
lock
pusha
jle
sbb
shl
pop
pop
stos
les
mov
push
pop
mov
adc
xor
aas
test
xor
dec
and
fistpl
push
dec
jmp
mov
adc
push
pop
pop
mov
pop
inc
sub
jmp
jne
mov
inc
adc
fiaddl
cmp
dec
ret
xchg
push
std
out
push
movsb
in
sbb
xchg
push
movsl
arpl
fs
adc
ret
aaa
pop
xor
addr16
mov
ficoms
pop
mov
pop
bound
push
cwtl
inc
cmp
push
push
pop
in
cmp
stc
ret
andl
cmp
xor
add
dec
pop
scas
inc
ret
mov
cmpsl
mov
dec
lds
push
ret
dec
pop
and
lret
cmp
dec
dec
aaa
retw
cmp
dec
imul
out
ds
imul
movsl
push
in
aaa
mov
rorb
inc
aam
adc
dec
fs
inc
pusha
mov
fstpl
out
dec
xchg
inc
mov
pop
imul
mov
inc
inc
mov
fmull
push
ja
add
push
mov
dec
lock
mov
and
dec
in
shrb
xor
xor
lret
mov
lea
divb
ljmp
xchg
ja
add
imul
mulb
dec
pop
mov
adc
fiadds
test
inc
xor
imul
push
cmp
cmp
ret
add
jmp
imul
mov
lcall
cs
shlb
cmp
out
sub
rclb
cmp
lds
outsl
mov
push
cmpsb
int
clc
inc
cwtl
push
in
dec
push
sub
gs
fsubp
pop
ret
fs
pop
sub
sub
dec
jl
mov
ss
mov
cmp
and
inc
push
ss
dec
inc
sub
leave
cs
lock
frstor
push
adc
out
call
inc
sub
and
push
popf
mov
pop
mov
loopne
pop
inc
pop
movsb
push
es
dec
das
roll
movsl
cmp
fsubs
pushf
fsubp
pop
bound
xor
inc
aas
sbb
stos
lds
dec
jmp
es
pop
sbb
or
push
sbb
aaa
cmp
lret
sbb
or
loope
push
stos
clc
dec
and
inc
lret
loope
xor
mov
loopew
pusha
xchg
ss
cmp
cmp
cmp
popa
pusha
inc
lds
inc
push
dec
jg
movsb
aaa
dec
inc
xor
mov
cmp
push
cmp
push
inc
pop
mov
push
inc
rorb
imul
pop
dec
xor
pop
rol
inc
adc
in
mov
lcall
scas
sbb
mov
push
adc
inc
cmp
les
sub
mov
rcll
xchg
inc
loope
cmp
mov
push
pop
push
cmp
add
sub
dec
xor
lock
pop
lds
fmull
fistpll
inc
mov
sub
sub
data16
xor
push
jp
mov
cmp
in
cmp
shrl
in
mov
dec
ror
and
mov
pusha
pusha
xlat
push
inc
fistpl
rcr
cmp
xlat
xor
in
push
jecxz
pusha
shrb
push
mov
mov
cmp
mov
pop
mov
dec
add
test
rclb
movsb
pusha
scas
xor
mov
dec
push
dec
xchg
aas
loope
cmp
pop
test
push
hlt
popa
in
mov
loopne
cmp
cmp
xchg
cs
xor
ds
rcl
iret
xor
inc
lcall
mov
lret
int
xor
gs
ss
mov
inc
dec
lock
pop
inc
xor
xlat
push
shrl
push
pop
ret
jp
inc
aaa
pop
ret
pusha
test
inc
pop
test
bound
in
pop
ret
dec
ret
lds
ja
dec
push
loopne
enter
push
dec
scas
dec
mov
inc
adc
in
iret
dec
sbb
imul
pop
pop
dec
and
dec
pop
lret
test
inc
xor
leave
cmp
aam
add
loopne
lret
sbb
fists
inc
dec
loope
xlat
xor
fildll
lret
gs
pop
repnz
pop
inc
mov
mov
aas
popa
xor
push
pop
push
mov
push
loop
test
push
dec
inc
rorb
pop
inc
ret
push
lret
xor
call
pop
adc
push
dec
xor
mov
dec
pop
inc
cmp
pop
xor
lcall
mov
mov
dec
aam
inc
imul
dec
dec
xor
push
sub
sub
gs
shll
aam
push
pusha
movsl
dec
leave
push
inc
dec
xlat
lret
cmp
pop
xor
idivb
mov
xor
dec
test
inc
xor
cmp
cmp
movsl
sbb
inc
fsubs
ficomps
pop
add
test
stos
inc
test
xchg
pop
xor
sub
dec
movsl
pop
sbb
push
sbbb
dec
cs
dec
sub
fistl
cmp
adc
fisubs
test
scas
dec
adc
dec
in
inc
dec
das
cmp
sbb
adc
cmp
push
xorb
xor
cmp
inc
xor
fistps
pop
rolb
dec
stc
inc
jne
inc
lods
inc
into
ficoms
push
xlat
adc
and
push
pop
repnz
popf
pop
fimuls
lds
pop
inc
sub
fistpl
ss
adc
dec
jmp
sbb
ss
lock
in
inc
in
aas
pushf
fistpl
xor
xor
ret
fsts
pop
ja
cli
jecxz
dec
out
cmp
call
xor
pop
sub
test
mov
dec
pop
fadds
pop
test
sbb
xor
xchg
imul
movsb
popa
xor
adcl
xchg
cmp
push
mov
cmp
adc
sbb
push
les
cmpsl
mov
inc
cmp
add
adc
mov
pop
movsl
aaa
xchg
shlb
cmp
test
mov
push
dec
loope
cmp
das
fists
gs
push
icebp
dec
inc
mov
cmp
cmp
mov
les
ds
adc
inc
loopne
aad
pop
xchg
insb
xchg
inc
push
inc
ret
dec
jae
xlat
mov
les
inc
push
dec
push
rorl
push
dec
add
inc
push
push
lcall
mov
lods
xor
sarb
inc
shrl
aam
add
pop
dec
inc
pop
sub
iret
xor
inc
inc
inc
ds
sub
lds
popa
lock
pop
dec
inc
pop
sub
inc
lret
push
dec
lods
inc
lock
dec
mov
xor
xor
pop
sub
xor
cmp
pop
sbb
dec
test
leave
push
aaa
lock
push
xabort
cli
shlb
arpl
loopne
test
rcll
push
adc
pop
dec
inc
sub
cld
mov
pop
imul
sbb
push
mov
cmp
dec
mov
inc
sub
cli
sarl
in
aaa
gs
pop
cmpsl
push
push
les
addl
frstor
pop
mov
mov
mov
pop
mov
ret
inc
adc
mov
sub
xor
push
loopne
inc
adc
popf
fidivrs
mov
cs
push
push
clc
jmp
push
leave
lret
inc
push
dec
movsl
cmp
aam
das
sbb
xchg
push
ds
out
dec
fisttpll
cmp
ss
pop
das
in
sub
add
push
pop
pop
ficoms
push
inc
mov
inc
sub
sarl
mov
xor
inc
pop
movsl
push
pop
movb
or
dec
das
ss
lret
dec
es
sbb
push
adc
fidivrs
mov
xor
dec
sub
or
sub
jo
xor
popf
sub
pop
pushf
loopne
dec
or
in
ss
dec
push
sbb
pop
negb
dec
scas
loope
inc
cs
xor
popw
imul
test
inc
cli
mov
aad
cld
mov
push
inc
push
mov
dec
jo
push
xor
pop
cmp
in
leave
mov
dec
loop
ss
pop
rclb
push
fnsave
in
cmp
pop
mov
push
es
sbb
mov
xorps
xor
cmp
adc
repnz
push
cmp
rorl
cmp
cmp
sub
adc
adc
mov
test
imul
stos
pop
adc
lret
push
les
cmp
xchg
mov
ss
xchg
jnp,pt
or
cli
inc
push
in
dec
int
clc
inc
dec
dec
lret
aas
sub
xor
dec
lret
push
mov
sub
aaa
add
xor
pop
adc
out
push
pop
push
orl
aas
int3
ja
adc
fdivrs
stos
xlat
bound
movsl
dec
aam
ds
push
xor
lcall
pop
leave
push
dec
sub
xchg
inc
cmpsb
push
inc
clc
aas
int3
aam
lds
imul
xchg
sub
add
scas
pop
jo
inc
int3
push
aas
in
movsl
xor
pop
nop
pop
dec
push
pop
inc
mov
ds
test
dec
dec
or
rorl
fidivrs
mov
push
leave
sub
dec
int3
pop
xor
mov
dec
rorl
movl
xchg
mov
cmp
sub
test
arpl
dec
gs
testl
dec
cmp
push
push
or
rclb
xlat
xchg
dec
push
pop
push
pushf
fistpl
pop
aaa
inc
push
sub
stos
cwtl
inc
xor
pop
fiadds
xor
cmp
push
add
xor
xchg
cmp
movsb
xor
movsb
pop
movsl
dec
int
cmp
cmp
int3
lds
pop
inc
sub
jl
rcrl
cmp
pop
mov
dec
roll
les
pop
pop
rcr
push
lock
dec
sbb
ss
sub
rcrb
aas
dec
sahf
push
sub
sub
int3
cmp
ret
fimull
push
sub
ds
loopne
dec
cs
inc
mov
cmp
loopne
fs
or
jecxz
inc
mov
andb
pop
fistl
inc
cwtl
inc
xor
push
sub
cmp
pop
cmpsb
mov
lods
xchg
cmp
inc
clc
adc
repnz
dec
cmp
mov
clc
push
leave
pop
xor
lret
and
icebp
push
rol
mov
pushw
enter
push
pop
scas
xor
xor
adc
push
mov
cmp
test
lret
subb
int
inc
xchg
mov
ss
push
insl
push
sbb
pop
dec
fistps
inc
imul
pop
cmp
pusha
loope
lret
dec
adc
inc
push
icebp
xor
aad
fsub
cmpl
dec
shl
test
fcoms
in
inc
fisubrl
call
and
push
sub
ds
mov
add
sub
sub
push
faddp
dec
jns
lods
aaa
scas
ficomps
pop
xor
lea
in
jbe
test
pusha
ret
or
push
mov
dec
fdivs
xor
bound
inc
xor
sahf
inc
mov
pop
les
scas
lds
popa
cmp
cmpsb
cli
push
inc
cmpsb
mov
data16
pop
xor
inc
addb
sahf
xor
pusha
push
lcall
mov
frstor
pop
repnz
and
lods
cmp
fsubs
test
call
test
mov
fisubrs
mov
xor
pop
fstl
shlb
mov
dec
inc
mov
inc
aas
into
lds
dec
xchg
rorb
int3
fimuls
int
sbb
xorl
sbb
xorb
add
mov
cmp
pop
cmp
sbb
cmpl
mov
inc
rorl
roll
add
iret
loope
testb
mov
ficoms
out
push
pop
dec
sti
xor
adc
push
les
xlat
iret
popa
pop
dec
das
cmp
jbe
push
or
rorl
loope
sub
sub
std
sub
push
sub
rorl
cs
inc
gs
cmp
hlt
inc
cmp
sbb
sub
add
pop
sub
xchg
lods
mov
rorb
in
fsubs
ret
stos
or
push
jmp
in
push
lock
dec
add
arpl
in
xor
ja
push
jle
push
sti
ret
push
lret
xor
sti
lds
ficomps
scas
hlt
pop
and
hlt
loopne
shl
lods
loop
xor
sti
sub
or
xchg
lods
xor
adc
jle
xor
aaa
sahf
fdivrs
sti
sub
ss
ss
subl
pop
popa
pop
rolb
out
les
pop
inc
sub
xchg
clc
inc
fistpll
mov
in
aas
inc
pop
pop
push
dec
push
nop
xor
jge
xlat
jge
rolb
xor
mov
dec
pop
sub
in
imul
fs
adc
dec
ret
int3
dec
int
into
loopne
clc
aam
sahf
push
inc
add
fisubrs
lcall
or
popa
lods
loop
lods
fs
push
ret
ret
sub
sti
in
dec
pop
sahf
push
lret
lret
or
das
out
push
and
add
push
pop
andb
aam
and
and
in
adc
aam
xchg
aaa
pop
mov
ffree
push
lret
dec
xor
inc
clc
ds
xor
xor
cs
out
sarb
cmp
jmp
test
ret
ret
lret
sbb
or
lret
movsb
dec
ror
or
test
dec
lret
and
xor
or
lret
movsb
push
rclb
xlat
lret
sbb
jno
rolb
add
lret
sbb
or
movsb
jecxz
gs
or
xor
test
imul
popa
scas
jg
aas
lods
scas
xchg
mov
push
lret
or
cmpb
mov
lahf
rorb
xor
ror
mov
sbb
aas
jl
inc
mov
dec
ret
and
adc
and
dec
movsl
pop
lods
mov
clc
push
in
out
push
lds
push
lods
cmp
insl
cmp
insl
cmp
jge
xchg
idivl
aas
mov
inc
xchg
stc
inc
sti
inc
in
ret
fistpll
fstpt
fnstsw
xchg
in
mov
into
imul
adc
dec
adc
xchg
inc
adc
cld
ret
or
imul
data16
mov
sbb
pusha
cmp
iret
cmp
loopne
sarb
mov
mov
ficoml
pop
scas
fstl
or
rcrl
int3
push
and
push
sbb
push
adc
pop
adc
adc
pop
adc
pop
adc
adc
adc
adc
adc
or
in
cmpsl
cmp
lea
and
adc
rcr
xchg
pop
and
pusha
adc
add
bound
aad
mov
in
adc
xor
loope
cmpsl
xor
xor
push
mov
fsts
stos
sbb
adc
and
fsubs
push
flds
push
fcmovb
sub
jmp
add
fiadds
lods
fimuls
mov
xor
mov
xor
xor
out
fdivp
cmp
xchg
and
cmp
jbe
cmp
push
out
arpl
rclb
call
dec
pushw
arpl
pop
fisttps
mov
aam
int
pop
inc
cmp
add
ficoms
loope
arpl
xor
lds
xlat
shrb
imul
xlat
pop
pusha
and
mov
stos
xor
mov
das
mov
cmp
inc
adc
stos
or
inc
cmp
into
test
push
xor
xor
sub
int3
jl
push
or
in
lods
push
and
into
pop
mov
mov
xor
inc
cmpb
inc
sub
je
les
inc
cmp
je
inc
fildl
jp
xlat
sub
cs
inc
hlt
pushf
fisubs
ss
inc
sbb
int3
xlat
repnz
in
sub
xor
cmp
les
push
mov
xlat
xlat
mov
rolb
mov
lds
rorb
dec
lahf
dec
mov
in
cmp
lds
rcll
or
movsl
dec
inc
xlat
lds
pop
mov
ficoml
fstpl
xchg
popa
xor
clc
push
stos
dec
clc
scas
mov
inc
lods
lret
xchg
jno
xchg
jno
xchg
jno
xchg
jno
xchg
jo
and
pusha
cmp
out
stos
pop
sub
cmp
mov
iret
xor
inc
lods
xor
pop
mov
add
inc
in
inc
gs
jbe
mov
fs
xor
cmp
push
dec
popf
inc
lods
inc
popa
aas
mov
scas
mov
dec
pop
or
lahf
dec
xor
cmp
lds
xor
xor
mov
mov
sti
jecxz
mov
ret
adc
movsb
cmp
sub
shrb
and
rcll
inc
dec
das
ljmp
mov
cmpsl
fistpll
pusha
jp
stos
mov
mov
xor
jae
push
lods
push
scas
inc
roll
mov
notl
notl
dec
loope
pop
sarb
sarl
aaa
jnp
cmp
arpl
gs
pop
data16
dec
out
pop
out
pop
call
movsl
inc
shll
push
popa
pop
mov
shrl
ja
or
or
push
pop
lock
popa
mov
shll
or
das
test
cs
cmp
addr16
pop
inc
sbb
fwait
mov
mov
mov
jl
cmp
aaa
pop
stos
xor
sub
dec
in
xchg
lods
pop
popa
sub
sti
xor
cmovo
lret
adcb
scas
out
ss
ljmp
add
cmp
popa
dec
pop
inc
lds
mov
sti
shll
test
xor
mov
dec
push
push
inc
ljmp
test
inc
add
xor
xor
push
testb
mov
sub
scas
leave
mov
xchg
es
inc
pop
imul
mov
xor
xor
fisubs
add
push
cmp
or
push
out
data16
push
push
inc
dec
inc
xchg
cmp
pop
xor
pop
ds
sub
lods
adc
xor
mov
pusha
xchg
xor
sbb
jmp
mov
xchg
std
dec
fidivrs
dec
ss
mov
xchg
test
dec
dec
inc
repz
loope
inc
pop
ret
pop
inc
fsubl
lods
push
pop
pop
push
ljmp
dec
jl
mov
mov
fdivl
insl
scas
insl
lods
insl
lods
insl
stos
lods
stos
mov
sub
clc
out
out
in
in
jecxz
loop
loope
xchg
not
aam
scas
movsb
push
test
sarl
mov
or
iret
mov
inc
or
int3
add
loopne
pop
and
mov
jge
inc
sahf
xchg
mov
repz
outsb
adc
pop
test
lds
lcall
xor
sbb
or
cmp
std
push
push
xchg
push
sub
sbb
fisttpl
test
repnz
popa
mov
inc
popa
cmp
je
xchg
cmp
jmp
ret
fmull
hlt
mov
dec
add
pop
pop
in
xchg
stos
inc
xor
notb
cmp
cmpsl
pushf
mov
stc
shll
daa
jl
fisttpll
int3
mov
fwait
jbe
mov
in
pop
jl
mov
adc
lahf
jnp
pop
jne
xor
pop
pop
inc
test
jae
fwait
inc
lods
push
ds
loopne
jnp
or
clc
outsl
aaa
xchg
lcall
pop
push
pop
dec
jp
int
push
popa
lret
movsl
popf
adc
clc
pushf
in
mov
cmp
fcmovnbe
ds
mov
mov
mov
aad
test
inc
add
push
gs
adc
loopne
fimull
out
jp
inc
lret
test
pushf
adc
cmp
mov
add
cld
sub
int3
add
mov
fistpl
fwait
hlt
loope
push
cwtl
out
movsl
lcall
test
out
clc
xchg
cmp
icebp
pushf
repz
rcrb
test
adc
dec
mov
sbb
test
bound
ja
cmc
push
push
dec
push
fnstenv
in
cli
mov
div
xor
fstl
xor
insl
mov
sbb
pop
and
test
rcrl
mov
loopne
fisttps
test
aas
ret
jb
out
lcall
dec
incb
sahf
out
mov
mov
rcl
jmp
sbb
mov
sbb
jp
dec
fildl
inc
xor
push
out
jne
dec
loope
pop
pop
cmp
dec
arpl
add
and
xchg
xchg
ljmp
sahf
sub
in
scas
test
test
mov
xchg
and
pop
int
imull
dec
ficompl
addr16
dec
pop
pop
int
mov
int
inc
inc
int3
out
arpl
fstp
add
popf
mov
repnz
mov
ds
out
mov
xchg
jg
sbb
mulb
sahf
ds
std
ss
mov
fstpt
adc
std
push
hlt
gs
les
out
scas
dec
icebp
fsubl
ret
bound
rclb
xor
int
dec
adc
loopne
push
push
push
or
mov
imul
dec
outsl
inc
rcrb
int
pusha
mov
lret
cmp
cmp
fstpt
arpl
mov
sbb
loope
ficompl
inc
cmp
sbb
lods
mov
jbe
cmp
push
mov
loope
xchg
mov
pop
cmp
cs
push
xchg
lods
xor
jle
push
jp
pushf
adc
xchg
icebp
out
pop
sbb
jmp
rorl
mov
inc
mov
cmpsl
push
popf
xor
movsb
nop
sbb
pushf
jbe
and
xor
xor
popf
fcomi
push
dec
sub
dec
fcmovbe
push
xor
xchg
push
push
adc
insl
lret
xchg
sbb
inc
test
jbe
mov
bound
sub
mov
in
scas
sub
mov
mov
jmp
sahf
jl
mov
push
inc
into
test
cmp
jmp
cmpsl
pop
sbb
adc
fisubrs
cmp
fldcw
stos
push
cmc
ljmp
inc
test
mov
rcl
add
test
sbb
or
sub
xchg
sbb
test
movsl
mov
lret
push
shlb
pop
int
dec
push
int3
jmp
mov
fstpt
and
add
jbe
call
cmp
inc
push
in
mov
bound
adc
enter
stos
movsl
iret
outsb
test
test
jmp
out
sahf
xor
out
sti
dec
xlat
int
arpl
sbb
mov
add
cmc
mul
movsl
pop
sahf
mov
mov
sub
popa
inc
mov
push
cmp
pop
sbb
push
fnstsw
loop
mov
adc
mov
dec
insl
shr
sub
inc
sbb
jns
imul
xchg
xor
and
sbb
clc
or
ret
hlt
jbe
xchg
popf
int
pop
inc
pop
dec
sbb
shl
lods
pop
xor
push
sbb
sahf
cmp
xor
push
ret
in
cs
add
dec
xor
pop
sahf
icebp
push
mov
test
jo
push
pop
inc
jl
arpl
sbb
add
and
loop
jge
rcrl
mov
insb
loopne
cs
lods
fwait
out
ret
popf
loopne
fs
test
sub
pusha
jle
add
and
push
xor
jno
push
test
jns
xor
cmp
mov
out
and
push
and
repnz
repz
lods
jmp
movsl
push
and
ljmp
adc
clc
inc
adc
test
bound
sbb
jp
xor
mov
call
pop
or
into
repnz
mov
dec
xchg
mov
shlb
cs
push
or
adc
cli
out
pusha
dec
fucomi
push
push
sub
pop
jo
push
mov
push
rorl
push
loopne
test
vucomiss
pop
popf
lret
lds
test
out
pushf
sub
mov
dec
mov
pop
fldt
pop
sbb
xlat
cld
xor
aam
sbb
arpl
push
fstp
mov
pop
imul
jae
mov
sbb
out
mov
in
inc
mov
movb
into
in
scas
mov
fcmovb
test
or
and
sub
mov
and
sar
dec
das
fisttps
xor
mov
pop
insb
cmp
sbb
clc
fadds
mov
lds
pushf
xchg
loope
inc
pop
in
movsb
fcmovnbe
xor
std
mov
ss
arpl
mov
cli
xor
mov
dec
and
pusha
pop
pop
push
xor
xor
xorb
pop
cltd
loopne,pt
inc
or
xchg
xor
xor
and
sub
push
push
test
push
enter
lret
pop
mov
pushf
xlat
cmpb
test
xchg
xor
mov
pop
mov
enter
dec
pop
or
push
and
push
clc
jle
ljmp
mov
jns
mov
mov
pop
stc
sbb
fcmovne
jle
mov
in
insb
fiaddl
and
xchg
dec
ds
pop
or
jg
in
mov
sub
and
lret
mov
js
inc
mov
sbb
push
sub
mov
arpl
rorb
jb
aad
aas
aaa
test
inc
push
pop
pop
push
ret
push
int
dec
jb
and
xchg
add
int3
shrb
xchg
jnp
jmp
mov
popa
dec
pop
orb
dec
decb
inc
lock
sub
sbb
shrb
and
sahf
mov
ss
cmp
cwtl
mov
int
mov
test
cmpsb
jns
in
add
mov
pushf
stc
icebp
dec
aaa
adc
add
mov
in
pop
lea
popa
inc
lods
xor
xor
lds
ficoml
popa
xor
mov
sahf
cmpsb
call
lret
test
rcrl
lds
push
dec
mov
push
sub
fidivrs
inc
jb
addr16
movsl
xchg
test
roll
mov
add
aas
pop
ficomps
dec
and
pop
insb
sbb
arpl
and
inc
push
adc
push
loope
ljmp
sbb
pop
inc
sarb
jecxz
dec
jns
mov
dec
inc
cmp
jmp
xchg
mov
shr
sahf
fcoml
inc
push
int
inc
sbb
push
mov
into
sbb
negb
pop
xor
icebp
and
push
push
pop
cmp
jecxz
bound
in
dec
mov
testl
xchg
pushf
sbb
ljmp
inc
mov
push
rclb
push
dec
push
movsl
adc
jge
sbb
fcomi
fwait
imul
pusha
pop
xor
cmc
or
and
ficompl
imul
les
stos
or
and
dec
mov
add
jnp
mov
sub
push
popf
test
test
rcrl
in
mov
xchg
jb
pop
xchg
cwtl
iret
nop
test
mov
inc
orb
mov
cmp
pushl
inc
cmp
ss
arpl
adc
and
call
mov
push
cmp
in
fistl
in
out
lret
push
loope
in
pop
add
fisubs
mov
aam
adc
mov
popa
fnstenv
xor
dec
sbb
dec
fbld
clc
sub
stos
rcl
jns
insb
pop
lods
stos
js
adc
movsl
arpl
adc
xchg
sub
or
popa
push
jecxz
into
je
lret
push
xchg
or
mov
mov
sub
dec
mov
sbb
out
fcoml
xchg
pop
pop
lods
bound
into
add
inc
sub
testl
std
sub
int
xchg
mov
rolb
jnp
mov
int
in
das
jle
dec
push
pop
es
mov
outsb
mov
sar
mov
in
pop
out
cmpsl
aaa
mov
xchg
cwtl
adcb
popf
pop
sbb
or
push
lcall
sbb
mov
cmpsl
fwait
int
dec
jo
and
mov
cmp
ja
push
add
sbb
movsl
loope
cmp
clc
lret
xorb
les
push
cs
shlb
xchg
pop
inc
sbb
and
pusha
jecxz
push
rclb
ret
adcl
loopne
sub
pop
dec
push
leave
in
scas
pop
mov
pop
xchg
pop
jmp
adc
aas
jecxz
xchg
fildl
lock
stos
arpl
sub
push
fimuls
xlat
pop
cs
jl
push
sub
ds
shll
push
aaa
pop
push
rorb
mov
push
mov
imul
mov
xor
pop
fwait
jg
mov
shlb
dec
push
adc
push
sbb
pop
or
pop
push
ficomps
into
pop
test
test
pop
shll
ret
fucomip
shll
movsl
mov
dec
in
or
xchg
mov
pop
lahf
xchg
int
dec
leave
in
fcmovu
sbb
add
and
bound
push
add
sub
mov
push
enter
dec
fcompl
inc
int
clc
rcrb
jecxz
mov
jb
dec
pop
xchg
sub
fdivrp
ss
out
xor
pop
pop
push
incb
rcr
dec
loopne
mov
adc
flds
pop
jbe
ret
out
shl
leave
adc
mov
mov
dec
xchg
dec
out
xor
ljmp
in
mov
sub
push
aaa
dec
xor
shlb
movsl
adc
fisubrs
dec
inc
xlat
loope
ficomps
mov
rol
out
ret
inc
cld
test
mov
test
and
add
dec
push
loope
mov
out
sbb
xor
addr16
test
fisubrs
lds
sbb
dec
mov
xrelease
push
lds
fidivrs
or
fwait
pop
pop
enter
stos
ss
int
dec
push
add
shlb
out
add
call
loop
dec
popa
xor
das
popf
sub
jle
dec
rcr
je
aaa
pushf
ret
orb
and
lds
xchg
and
popf
imul
adc
pop
fsts
mov
leave
scas
mov
push
jmp
in
mov
cmp
xchg
fcoml
xchg
aas
in
sub
inc
and
cs
pop
cwtl
arpl
xchg
insl
leave
addr16
int3
lods
pop
in
cs
sbb
add
pop
loope
movsb
pushf
push
xchg
loopne
imulb
into
imul
fcmovne
pushf
add
ljmp
xor
dec
push
ss
xlat
pop
pop
push
fildl
add
ss
loop
popf
out
fistpl
add
pop
push
lods
or
dec
sub
cmp
dec
mov
add
and
cmp
mov
dec
push
mov
lret
ds
das
in
ja,pn
frstor
sub
pop
sub
sahf
imul
cmpsl
mov
lahf
jle
fisubrs
xor
aam
dec
mov
or
fstl
fldt
insl
sbb
ret
mov
shlb
xchg
and
jne
js
in
int3
lds
ds
or
lcall
pop
dec
add
cwtl
ds
repnz
inc
ret
sub
lock
and
ljmp
xor
add
fisubrs
lds
arpl
lret
push
mov
enter
inc
mov
je
mov
insb
repnz
pusha
sbb
fucomi
mov
fwait
cs
pushf
leave
push
mov
dec
mov
mov
pop
ja
or
push
loopne
in
or
data16
dec
loope
inc
incb
push
loop
xor
mov
and
fcompp
movsl
jno
mov
and
mov
mov
fld
cmp
inc
and
mov
sbb
push
fldt
pusha
mov
popf
push
lahf
out
push
xchg
mov
xor
aaa
add
push
flds
lret
cmp
mov
pop
push
mov
lea
ffree
xor
and
dec
pop
jl
push
mov
imulb
adc
sahf
mov
lds
fwait
iret
fisttpl
fwait
add
and
pop
cli
clc
negb
pop
fildl
xor
pop
push
pusha
imul
in
loopne
hlt
shlb
rorl
clc
lret
pop
push
sbb
cmp
fistl
fwait
adc
dec
sub
jmp
mov
inc
leave
or
sub
fstl
add
mov
fstpl
aam
in
cltd
push
xchg
pushf
stos
lds
or
mov
dec
dec
lcall
mulb
xor
movsl
jns
cmp
mov
ds
cmp
push
sahf
sbb
pop
mov
lcall
arpl
addr16
add
mov
inc
fs
xor
or
add
sub
imul
sbb
int3
adc
mov
ret
mov
sub
cmp
or
pusha
arpl
and
int3
lds
mov
mov
jb,pn
test
stos
and
das
lret
pusha
les
push
pop
into
out
sub
test
lds
popf
mov
mov
add
xor
sahf
sub
outsb
cli
clc
notl
out
xor
xorb
cmp
mov
lea
sbb
lcall
push
jecxz
inc
jmp
leave
sub
cbtw
clc
stos
ss
int
dec
test
xor
xor
movsl
sub
xor
inc
and
dec
sbb
mov
int3
movsl
movsb
sub
fistl
fwait
xchg
pop
mov
dec
cmp
das
lock
jae
sub
cmp
cmp
scas
xor
sahf
enter
jge
dec
push
test
cmp
inc
shll
insl
mov
xor
dec
mov
push
cmp
arpl
adc
cli
sub
mov
int
add
cs
sbb
aaa
jbe
pop
xor
arpl
arpl
dec
pop
jnp
push
push
scas
data16
jmp
sbb
adc
int
xor
pushf
inc
cmp
pop
cmp
icebp
aaa
pop
push
ja
push
xor
sub
rorb
cmp
mov
rcrb
sbbl
pop
fstpt
xor
out
sub
mov
jns
cmp
fwait
int
dec
adc
pop
scas
test
lods
test
js
scas
jmp
dec
dec
arpl
pop
pop
shll
cli
leave
mov
pop
loopne
lret
test
xchg
xor
sbb
cmp
sbb
and
ret
pop
ja
mov
pop
or
add
pop
mov
jmp
xor
cmp
mov
pusha
push
aam
sub
mov
sbb
push
pop
data16
mov
mov
test
fwait
mov
cld
inc
mov
das
add
rep
jne
pushf
cmp
shl
sub
sbb
out
lcall
inc
movsl
add
fbstp
xchg
std
ds
inc
cmpsl
popf
or
push
inc
ds
xchg
icebp
mov
push
xchg
pushf
mov
sub
xchg
mov
add
inc
dec
dec
xor
cs
insb
add
xorl
clc
inc
sete
jmp
mov
aaa
push
xchg
sbb
dec
int3
inc
test
and
pushf
inc
aad
push
fists
mov
cmp
xlat
inc
fsubl
pop
sub
jo
mov
jecxz
outsl
mov
pop
shr
sub
pop
dec
mov
xorb
fucomi
je
add
repnz
push
cmp
fstpt
push
adc
sbb
push
lret
and
dec
or
ds
cmp
iret
and
xchg
mov
data16
aad
outsl
lret
arpl
adc
add
cmp
xchg
rorb
fstps
push
cmc
rclb
sub
sub
adc
pushf
cwtl
xor
stos
push
mov
jge
addr16
je
cmpsb
pop
xchg
pop
push
ljmp
ret
and
ja
and
inc
mov
inc
shll
call
aaa
lea
icebp
mov
xchg
leave
insl
stc
pop
sarl
addr16
sub
add
dec
xchg
add
dec
clc
ret
movsl
xchg
push
mov
pusha
enter
dec
cs
ss
bound
and
or
repnz
dec
sti
inc
dec
mov
outsb
mov
mov
sbb
jae
mov
ficoml
outsb
in
clc
test
fisubrl
fldl
or
daa
pop
int
push
sbb
inc
pop
add
and
adc
in
loopne
fs
shrb
cmpsl
stos
test
mov
pop
arpl
enter
aaa
xor
xor
xchg
aas
xchg
jmp
andl
push
pushf
dec
les
mov
cli
mov
sub
out
and
xor
inc
adcl
dec
stos
sbb
xchg
jo
sub
cmpsb
push
add
jmp
cmpsb
inc
jge
inc
aaa
pop
ret
push
jb
dec
push
jp
mov
test
adc
add
faddl
pop
and
push
das
loope
sbb
divl
jae
xorb
rcr
sub
mov
inc
push
push
adc
aaa
xor
push
dec
scas
mov
jle
mov
add
nop
mov
push
js
jl
or
bound
popf
cmovle
mov
addb
sbbb
inc
mov
adc
mov
inc
and
push
ss
mov
xchg
push
iret
jns
aam
insl
gs
jno
fisubrl
push
movsb
pop
nop
fwait
mov
imul
xor
mov
pop
les
add
test
stos
shlb
sub
nop
inc
in
movl
into
push
push
jmp
pop
jb
scas
es
push
pushf
cmp
pusha
lea
jmp
enter
inc
aaa
cmp
inc
mov
dec
pop
int
adc
lods
mov
lock
inc
fcoml
popa
adc
in
in
mov
cwtl
pop
lods
insb
ljmp
movsb
sti
and
movsb
ret
jle
data16
outsb
jmp
rclb
outsl
xor
sub
xchg
jnp
out
sub
push
cmp
int3
add
push
jno
mov
jp
decl
mov
sbb
push
lret
xchg
lahf
adc
mov
call
negl
das
shlb
xlat
fadds
data16
hlt
sbb
lock
and
adc
jge
push
mov
dec
mov
ret
push
push
es
ret
push
cltd
or
in
inc
mov
pushf
pushf
cmpsl
mov
out
adc
sub
mov
into
rcrb
sbb
rorl
je
subb
inc
pushl
push
xchg
mov
movsl
ja
xchg
std
outsl
inc
push
push
cmpsb
mov
repz
push
jmp
aaa
mov
push
and
xor
lea
cmpsb
push
push
fstps
mov
cmp
mov
rorb
cmp
incb
fistpl
ficoms
mov
jle
fisttps
and
dec
cmp
mov
daa
mov
cmp
cmp
xor
cmc
xlat
imul
sub
push
pop
sub
cmpsl
test
push
xor
movsb
cmp
jl
mov
fimuls
fs
fmull
adc
mov
cmp
pop
pusha
jmp
mov
add
in
jge
push
cmpb
xchg
lea
push
fsubs
jbe
jbe
aam
movsl
fdiv
fldt
out
lcall
ds
bsr
cmp
jge
mov
mov
in
cwtl
dec
cld
mov
jnp
test
lea
push
inc
push
dec
xor
cs
insb
add
sub
inc
aaa
jge
lcall
es
adc
pop
ljmp
mov
sbb
aaa
aad
lahf
or
addb
cs
int3
jno
adc
insb
loopne
sarl
int
shlb
inc
test
inc
scas
ss
stos
call
mov
test
lcall
jg
and
jb
aam
je
xchg
int
push
sti
cmp
pop
push
fimuls
rcll
mov
pushf
lea
jmp
movb
inc
lea
jmp
mov
aaa
xchg
sahf
adc
divb
scas
inc
into
jb
jb
xor
repz
push
subl
bound
fiaddl
nop
decl
add
inc
stc
sbb
call
fstl
mov
fidivrl
add
jecxz
leave
adc
imul
lahf
or
mov
test
inc
div
in
jae
pop
jb
fldl
cld
lahf
out
jge
ds
gs
xchg
add
mov
and
lret
daa
fldz
cmp
push
shl
inc
aam
mov
pop
aam
loope
in
dec
stos
fidivrs
or
and
adc
add
inc
daa
mov
lods
push
lret
mov
xchg
in
cwtl
call
cltd
addl
loope
push
sbb
push
adc
dec
cwtl
add
lcall
jnp
loopne
pop
inc
lahf
pusha
add
mov
xchg
lahf
and
add
pop
test
cwtl
test
xchg
jns
les
xchg
fadd
scas
pop
hlt
mov
mov
movsb
and
aas
rcll
imul
pop
aas
nop
mov
sti
shl
movsl
inc
aaa
out
adc
rcll
ret
pop
stos
mov
sub
and
inc
faddl
xor
andl
in
clc
push
push
adc
dec
in
ljmp
push
test
rclb
pop
push
or
jnp
inc
and
movsl
pop
stc
dec
cmc
xchg
sbb
je
aam
jnp
add
add
lods
adc
inc
aaa
ret
imul
out
mov
xchg
pop
lret
outsl
dec
fisubs
jle
sub
push
std
dec
in
lcall
mov
out
jb
jle
int3
mov
inc
popf
cmp
sub
jb
cmp
push
sub
cmp
jl
lret
push
mov
push
push
sbb
pop
adc
jl
mov
jl
push
nop
aas
in
sub
clc
test
aaa
adc
insl
adc
cltd
std
sub
adc
xor
ret
push
mov
xor
dec
stos
mov
int3
fstpl
idivl
sub
leave
cld
inc
stos
enter
cmp
out
adc
sbb
inc
inc
mov
outsl
lds
and
dec
jo
mov
pop
pop
jae
mov
mov
in
add
push
adc
es
aas
pop
movsl
out
mov
pop
pop
maxps
mov
cs
bound
cmp
pusha
mov
inc
pusha
ljmp
jnp
or
stos
cs
stos
xor
xor
into
fldt
jnp
arpl
add
out
xor
imul
mov
inc
mov
jb
adc
aaa
imul
sub
loope
lahf
sub
daa
jo
sub
and
xchg
add
hlt
aad
repnz
cli
ficoms
lret
cmp
negb
fistpl
mov
xchg
adcl
mov
push
sti
xchg
les
xchg
shl
scas
imul
xchg
adc
ja
hlt
mov
jp
dec
dec
xor
aaa
xor
add
fnstsw
aam
rorl
lea
jb
cmc
test
cmp
stc
cmp
jnp
jae
bswap
rol
xor
mov
xor
jmp
arpl
fcomp
hlt
sub
inc
js
test
gs
push
push
jge
cli
lcall
xor
mov
or
inc
jge
pushf
xchg
in
clc
in
inc
lock
cmp
ja
cltd
cltd
pop
nop
inc
faddl
cmpsb
imul
lods
push
sahf
sub
aam
in
mov
loop
ret
addr16
nop
sbb
repnz
loopne
std
icebp
outsb
adc
dec
add
sub
ja
add
push
mov
call
pop
std
std
addl
mov
dec
gs
shrb
sub
pushf
mov
pop
aas
ss
loope
mov
icebp
cmp
mov
add
loop
es
test
std
popf
adc
sbb
sbb
inc
aaa
add
xchg
push
push
movsb
inc
adc
add
andl
adc
inc
cmc
arpl
inc
aaa
push
dec
sbb
pop
mov
pushf
sbb
popa
sbb
data16
inc
ret
aam
out
xor
jge
fstps
cs
lret
jne
dec
scas
loopne
inc
loop
sbb
icebp
xor
add
inc
mov
mov
inc
sbb
pop
pop
push
sbb
mov
dec
aaa
lcall
in
xchg
loope
out
nop
push
or
lock
dec
std
insl
mov
imul
and
call
stc
bt
sub
js
pushf
lea
jne
call
add
add
add
les
add
rcrb
rcll
add
jmp
lret
sbb
fidivrs
or
sbb
lahf
or
cmpl
fcmovbe
or
incb
in
shll
in
sbb
out
sbb
cmp
pop
outsl
xor
insb
outsb
scas
cli
sbb
xor
push
fwait
out
cwtl
adc
push
pop
adc
jmp
es
inc
mov
sbb
js
or
loope
push
cli
pushf
sbb
dec
cmp
pop
xchg
sbb
mov
bt
stc
rol
movb
cmp
clc
add
pushf
xor
stc
push
rol
call
pushf
jmp
pushf
inc
pushf
pushf
push
pusha
adc
lea
pushf
pusha
call
pushf
lea
jne
pusha
pusha
jmp
in
ret
mov
int
adc
push
int
in
inc
cmpsb
hlt
push
dec
jns
push
and
pushf
fistpll
mov
faddl
pop
and
es
lds
push
leave
pop
cmp
mov
pop
sub
push
jb
pushf
cmp
mov
int3
int
inc
adc
cli
cli
cmp
rorb
jl
lahf
mov
push
fdivr
lahf
xor
inc
and
test
sub
imul
fiadds
xchg
push
ja
sub
pop
daa
ret
adcb
mov
ds
fimuls
sbb
mov
popf
xor
xor
pushf
repnz
inc
push
cmp
repz
movsl
mov
mov
or
mov
nop
mov
cld
fbstp
dec
cli
ljmp
jge
addr16
sub
call
mov
js
cltd
in
cs
es
xchg
fcmove
and
sbb
jmp
imul
aam
rorl
mov
inc
testl
into
mov
es
jno
inc
aaa
fs
sub
and
sub
mov
cs
sbb
and
cmp
jge
adc
sbb
mov
out
jmp
jecxz
xor
sbb
pop
mov
bound
out
push
cmp
mov
mov
mov
add
outsl
inc
pop
sbbb
sahf
divb
loop
sbb
dec
mov
push
cmc
adc
inc
clc
inc
xchg
notb
js
inc
popf
in
cwtl
jb
xchg
push
jg
inc
aaa
push
mov
nop
aam
insb
enter
push
dec
dec
cmp
daa
inc
daa
test
movsb
adcb
mov
mov
mov
xchg
and
xor
cld
adc
repz
add
inc
add
or
popa
add
cmp
enter
movsb
les
fistpl
xchg
xor
dec
ret
mov
into
call
mov
aaa
push
jp
and
divb
into
and
inc
negb
mov
loopne
sub
in
inc
in
repnz
jbe
cli
lahf
or
out
inc
mov
and
push
stc
dec
popa
mov
das
xchg
gs
adc
mov
jp
or
cmp
mov
mov
mov
std
addr16
push
sbb
inc
stos
xabort
enter
mov
lea
lea
call
lea
je
bt
pushf
sub
cmp
pusha
cmp
push
pushf
pushf
jmp
mov
in
inc
aaa
repnz
iret
jae
inc
scas
rep
lret
dec
fwait
ds
jne
pop
xchg
xchg
xor
adc
xor
gs
outsl
xchg
push
push
xor
sub
mov
data16
xor
out
push
insl
cmc
cwtl
jns
mov
lods
ja
shrb
inc
push
push
jl
push
adc
pop
leave
sbb
hlt
adc
xor
out
adc
xchg
jl
cmp
jg
scas
push
hlt
pop
fiadds
aam
jl
adc
lret
xor
jl
or
jno
mov
adc
pop
fidivrl
loop
mov
push
lret
cmpsb
add
push
mov
xor
pop
or
lds
jno
cmovs
xor
out
cmp
bound
int
inc
repz
jl
sub
je
push
push
cmpsb
test
lods
jg
sbb
rsqrtps
loope
cmp
push
dec
sbb
adc
xchg
mov
ljmp
aam
cmpsb
cmp
xor
sbb
cmp
xor
std
mov
adc
into
push
adc
pusha
push
js
icebp
mov
lcall
and
xor
gs
fwait
cmp
pop
mov
adc
jle
adc
js
insl
xor
insl
mov
add
loopne
add
xchg
fidivrs
ljmp
popf
inc
aaa
jge
adc
test
jbe
insl
xlat
popf
aas
je
add
test
push
mov
aam
jmp
pop
stc
and
int3
mov
or
mov
imul
add
getsec
ret
cmp
in
mov
jnp
and
inc
mov
mov
outsl
jmp
mov
dec
xchg
push
insl
sub
lods
ss
inc
scas
andl
xor
daa
lcall
repnz
dec
sbb
out
stos
inc
cmpsl
dec
fists
jp
dec
cmp
and
mov
cmp
inc
mov
mov
jmp
xchg
or
das
lock
call
fidivl
add
adc
addl
jbe
or
fiadds
in
xchg
notb
jns
jmp
cmp
loopne
xchg
fiadds
dec
in
repz
rolb
dec
std
xor
rcrb
cmp
xor
shll
decb
push
mov
pop
jo
jno
daa
fcomi
es
sbb
lahf
add
or
sub
lea
or
std
aas
stos
adc
lods
sub
pop
mov
pop
cmc
adc
aam
movsl
andb
add
fninit
mov
lcall
inc
jo
stc
movsb
stos
frstor
test
lods
add
sub
xchg
inc
add
pop
lods
scas
push
pusha
test
imul
repz
movzbw
mov
clc
and
cmc
jb
cmc
add
push
pushf
pushf
lea
jmp
pushf
mov
not
inc
inc
mov
push
call
push
ljmp
out
arpl
xchg
pop
stos
aaa
pop
mov
sti
stos
popa
sbb
xor
cmpsb
add
callw
iret
add
mov
leave
scas
aaa
lds
int
xlat
cmp
test
jbe
mov
int3
push
out
adc
push
cs
stos
js
inc
mov
add
daa
mov
shlb
mov
imul
lret
bt
jg
mov
cmp
sbb
out
or
movsb
andb
roll
divl
in
imul
mov
mov
subl
mov
add
xor
lock
movsl
xchg
or
xchg
dec
and
inc
int
jmp
mov
fs
mov
mov
call
jg
mov
pushl
ret
sbb
aaa
call
dec
cmc
mov
sbb
jns
xchg
inc
add
and
cmpl
fidivs
leave
cld
pop
sub
mov
cmp
push
lahf
arpl
xchg
mov
xlat
icebp
pop
sub
xchg
mov
lcall
jnp
repnz
bound
pop
mov
adcl
idivb
add
xchg
repnz
cltd
inc
aaa
pop
jo
mov
push
clc
rcrb
push
test
sar
push
into
flds
std
rcr
jecxz
int
movsb
adc
jmp
jbe
or
or
xchg
push
push
cld
pop
adc
ret
adc
cmp
sbb
and
pop
outsb
cmpsb
xor
movl
push
pop
subl
cmp
jno
cwtl
inc
aaa
fidivl
roll
jno
add
mov
rcrl
ljmp
xchg
inc
addr16
dec
or
ror
lret
aaa
loopne
and
mov
mov
pop
fwait
jle
jb
inc
insb
and
lcall
add
daa
fwait
call
jecxz
jnp
dec
rcrb
daa
mov
fistpll
sbb
insb
add
or
push
lea
jne
mov
movb
movzbw
mov
movzbl
push
mov
lea
pushf
pusha
jmp
mov
bt
push
test
jmp
loop
adc
or
cli
jbe
mov
mov
into
lods
add
icebp
xor
add
in
fs
pop
jle
out
fiadds
lods
std
push
cmpsl
add
insl
outsb
lret
push
jmp
mov
adc
in
call
insl
cwtl
pop
hlt
xor
mov
mov
fwait
sahf
and
insl
cmp
outsb
cmpsb
inc
xchg
cmpsb
pop
data16
inc
lock
out
add
jge
or
rcrb
ss
imul
in
add
inc
shr
xchg
inc
aaa
out
dec
fidivrs
repnz
push
xchg
add
es
out
xor
shrb
jno
sbb
adc
or
push
adc
outsl
xchg
push
out
or
daa
das
inc
pusha
fcom
xor
mov
je
xlat
fs
add
or
push
cwtl
add
push
adc
sbb
push
mov
inc
sub
movb
cwtl
jne
inc
mov
lods
insb
inc
push
push
mov
cs
into
das
jmp
andb
xor
ja
cmpl
loop
or
push
add
mov
cmp
mov
xchg
inc
aaa
pop
nop
pop
add
aam
in
cmp
jnp
shll
arpl
or
push
js
inc
pop
dec
addr16
enter
push
popa
add
dec
sbb
jge
adc
mov
add
jge
or
adc
imul
inc
data16
xchg
xor
dec
mov
ja
mov
inc
mov
adc
add
or
lcall
lret
add
mov
lods
mov
adc
pushf
jb
inc
aaa
lods
jns
test
dec
and
test
aas
nop
mov
xor
sub
ljmp
negb
rorl
cmc
xchg
lcall
add
nop
jnp
stc
cmp
insb
lahf
cwtl
mov
sub
repz
std
lock
cs
int
leave
mov
inc
add
rcr
add
xchg
mov
out
xor
gs
cltd
xor
push
inc
and
pop
xchg
mov
inc
aaa
in
sbb
imul
adc
or
jp
jnp
lahf
push
daa
xchg
idivl
jecxz
dec
sbb
cmp
xchg
dec
fmuls
adc
dec
iret
stos
imul
shll
sub
xchg
xor
imul
dec
mov
push
imul
xor
scas
loope
add
movsl
mov
jmp
mov
mov
inc
aaa
and
pop
pushf
sub
xor
sbb
lods
cmp
stos
adc
in
out
lock
xchg
xor
mov
push
jp
lahf
ss
pop
xchg
aad
ljmp
sub
stos
movsb
pop
cmp
in
out
fnstcw
sbbb
add
ror
pop
inc
mov
rcrb
int3
push
mov
in
nop
push
in
xchg
pop
lret
cmc
jg
jmp
jmp
mov
movsl
pop
jle
or
xchg
inc
aaa
icebp
adc
cld
nop
cmp
aam
hlt
enter
pop
mov
icebp
mov
mov
pop
ret
mov
pop
jmp
cltd
pushw
sbb
insl
cltd
in
test
pop
out
fwait
pop
mov
pop
sub
mov
dec
inc
rol
test
jge
xor
andw
loopne
ja
and
inc
add
inc
shr
mov
lds
repz
mov
inc
lea
ljmp
push
adc
aaa
add
jno
pusha
sub
cmc
push
cmp
pusha
lea
ja
push
mov
pushl
mov
imul
test
pusha
push
jmp
jge
pusha
pushf
movl
pushl
movb
pushf
push
movl
push
pushf
pushf
push
lea
jmp
jl
jg
inc
aaa
push
outsb
fisubrl
inc
cmpsb
inc
mov
sub
cltd
xchg
fcmovnbe
orl
subl
lret
push
adcb
inc
addr16
insl
xchg
enter
cmpsl
and
cmpsl
pop
push
mov
dec
sub
push
dec
push
js
mov
hlt
mov
lods
clc
test
sub
dec
stos
push
cmp
std
aaa
xchg
fstpt
cmp
daa
cwtl
mov
lock
not
bswap
movsbw
pusha
mov
pusha
lea
mov
movzbw
mov
mov
mov
push
pushl
ret
out
xchg
sub
mov
push
pop
push
stos
ficomps
jle
and
mov
adc
jg
mov
add
cld
into
iret
add
sub
daa
and
fwait
jecxz
inc
mov
sub
and
mov
push
into
popa
mov
repz
push
mov
addb
pop
mov
fistpl
ror
loope
call
sub
inc
jmp
pusha
add
or
ror
push
pushf
mov
les
fs
outsl
push
sub
test
adc
mov
inc
sbb
mov
lods
out
mov
aaa
fsubl
in
hlt
nop
cld
test
add
xor
iret
cmp
lock
cltd
sbb
enter
das
rcrb
cmp
sar
ds
push
adcl
pop
mov
dec
dec
xor
adc
cmp
mov
fists
call
pop
jecxz
mov
aad
push
divb
jle
xchg
daa
mov
xchg
inc
roll
sar
pusha
or
data16
in
xchg
mov
inc
aaa
inc
insl
leave
inc
adc
mov
mov
ret
jns
ljmp
in
subb
push
ss
pop
scas
mov
test
inc
nop
rclb
fs
ret
or
push
lds
stc
andb
push
inc
lret
fildll
and
movsb
and
xor
cli
pusha
jno
call
sbb
push
xchg
inc
aaa
enter
inc
mov
mov
cmp
mov
std
shll
xchg
hlt
push
push
mov
cmp
xchg
and
add
and
cs
test
inc
addr16
sbb
sub
inc
mov
es
out
push
or
push
decb
repz
jecxz
xor
popa
jns
sbb
loopne
pushf
es
aam
xor
or
dec
pop
arpl
push
lea
jae
cmc
stc
pusha
cmp
mov
pusha
jmp
or
fwait
add
and
fs
add
movsb
aas
rcll
adc
mov
test
dec
cmp
adc
faddl
dec
and
jecxz
pop
add
ficompl
roll
test
jo
jnp
ljmp
xor
dec
mov
ds
mov
or
jae
rep
mov
inc
sub
jb
out
mov
xchg
loopne,pt
xor
adc
jbe
notl
sbb
sbb
inc
aaa
sub
xchg
adc
jno
fiadds
cmp
pop
or
shlb
test
jo
std
mov
or
leave
arpl
das
test
sarl
mov
jb
daa
inc
or
jle
inc
aaa
push
fildl
pop
jmp
jecxz
jecxz
jae
ret
and
dec
or
insl
roll
arpl
sbb
cmpsb
cli
adc
popf
mov
shr
and
aam
mov
shll
mov
lcall
push
ja
lret
jnp
mov
and
gs
loopne
sub
into
sub
mov
shr
or
or
out
imul
xchg
ret
push
jnp
cmpsl
movntq
adc
test
sub
lea
leave
sti
jge
add
xor
sub
push
ds
pushf
and
add
out
mov
cmp
ljmp
dec
or
inc
outsb
ljmp
in
jg
and
dec
sarl
jecxz
inc
imulb
inc
pop
push
jp
push
in
outsl
lret
insl
mov
mulb
or
fimuls
add
in
shrb
cld
and
sahf
insb
jmp
mov
pop
shr
test
jl
clc
mov
or
fwait
mov
addl
test
pusha
jmp
sub
aaa
fsubr
or
flds
mov
or
popf
inc
fwait
lods
jno
mov
clc
push
sub
xchg
movsl
cwtl
cmp
stc
sbb
pop
es
icebp
rclb
push
adc
dec
mov
xor
cltd
mov
das
jg
lret
clc
es
inc
add
int
ret
jmp
fbstp
in
xchg
inc
dec
add
frstor
push
mov
movsb
push
mov
jl
xorb
mov
lahf
sub
xor
xor
cmpsl
add
mov
out
inc
into
cmp
loop
or
adc
mov
jl
and
or
xorb
ja
jl
arpl
push
shrl
shll
jge
push
mov
xorl
cs
and
pop
daa
icebp
pusha
test
xchg
in
dec
push
int3
stos
cmpsb
cltd
or
add
and
mov
test
dec
add
mov
mov
pushf
lea
call
pushf
pushf
lea
jae
setns
push
call
jle
jne
inc
aaa
push
scas
xchg
push
push
push
lret
ficomps
stos
negb
lds
scas
lahf
gs
lret
cmc
das
jno
inc
sbb
sub
movsl
xorb
adc
fstps
cltd
and
out
pop
lret
push
cmpsl
jp
adc
mov
stc
sub
mov
in
and
fwait
pop
fimuls
jecxz
movsb
int3
dec
aas
insl
push
add
out
sbb
add
add
shll
in
mov
test
pusha
add
loopne
pushf
push
or
adc
fiadds
faddl
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
movsb
dec
lea
mov
inc
loopne
rolb
arpl
das
add
jae
js
int3
xchg
test
jnp
test
or
andb
cli
cmp
ds
sub
imul
push
push
inc
cld
lea
sub
icebp
inc
movsl
xlat
idivl
out
out
bound
fsubrs
adc
rcrl
xor
call
mov
jmp
mov
pop
lea
jns
sub
rcll
insl
cltd
cmp
rorl
jl
push
mov
bound
daa
fcoml
cmp
mov
jno
cmp
cs
js
add
mov
sbb
xchg
popa
repz
mov
sbb
aad
inc
adc
test
ds
mov
cld
clc
arpl
jp
out
adc
mov
fs
fildl
aam
xor
push
mov
je
mov
fimuls
jg
mov
xor
adc
xor
outsb
xor
mov
fisubs
fisubl
inc
aaa
lods
cmc
jns
cltd
dec
cmp
adc
incl
shr
xchg
jns
push
push
ret
mov
psrlw
in
jecxz
adc
les
push
push
pop
dec
push
xchg
loope
mov
cmp
sbb
inc
push
insb
push
xchg
shrb
cmp
adc
lret
or
aas
int
mov
out
mov
and
mov
nop
call
xor
jle
lret
cmp
leave
add
repz
inc
pushf
mov
pop
xchg
or
lock
fsubrl
mov
and
inc
xor
cwtl
orl
insl
mov
addr16
cmc
in
aam
mov
xor
ret
mov
ds
adc
outsl
mov
or
aam
jnp
and
leave
lods
xor
dec
pop
aas
mov
xchg
mov
dec
push
push
cmp
push
stc
jno
mov
stc
mov
out
data16
into
sub
andb
and
repz
pop
jmp
mov
fwait
push
and
sub
adc
fwait
lahf
pushf
add
int3
hlt
push
lea
fildll
xor
mov
popf
test
mov
push
js
sub
push
int3
push
push
test
movl
lods
push
xchg
xchg
inc
inc
mov
fwait
dec
xor
or
sbb
pop
inc
insb
lahf
or
push
dec
mov
inc
mov
es
dec
jg
mov
aaa
add
and
push
push
aam
sbb
test
gs
enter
inc
les
push
mov
adc
xor
adc
jl
xchg
lds
xchg
aam
aad
adc
imul
xchg
repz
gs
mov
insl
scas
cmp
push
and
and
xchg
xor
out
int
aaa
mov
pop
add
pop
and
or
xchg
scas
xchg
cmpsb
push
bound
imull
jbe
xor
inc
out
push
and
pop
mov
ror
jl
dec
xor
shr
or
aam
mov
cmc
adc
push
mov
lret
mov
cltd
jle
mov
ja
dec
mov
dec
sahf
mov
xchg
mov
repz
call
cmp
sbb
lods
in
movsb
pop
push
arpl
iret
pop
fistl
mov
inc
arpl
cwtl
sub
sbbb
ja
out
cmc
lock
inc
fcmovnb
adc
scas
pop
or
movsb
shl
cmp
xlat
and
je
push
or
sub
mov
loope
inc
add
xchg
mov
push
stc
lret
sarl
scas
fildl
push
mov
xor
add
loope
stos
add
call
adc
push
repnz
ret
mov
xchg
mov
shll
xor
cmp
jbe
fiaddl
cmp
or
mov
rolb
adc
stos
jmp
and
cmp
jno
in
add
loope
push
loopne
pop
loope
cmpsl
inc
pusha
jmp
cmp
dec
jnp
es
lods
fcompl
in
jg,pn
imulb
sbb
mov
jns
es
shll
movmskps
aas
in
and
shll
pop
inc
sub
mov
fucomip
pop
test
pop
cmp
or
add
dec
push
mov
popf
mov
push
mov
sbb
cmc
fidivl
add
repnz
rcr
sbb
xor
pop
xlat
xchg
pop
rcrl
out
sbb
cld
jmp
inc
xchg
out
sbb
insb
pusha
sbb
dec
sahf
inc
dec
dec
fdivs
or
sar
sub
sti
or
das
std
sbb
cmc
sub
mov
and
out
arpl
sbb
cs
pop
leave
and
mov
loope
cs
imul
test
xchg
les
ja,pt
or
pop
ja
mov
push
addr16
stc
lret
mov
push
faddl
pop
xchg
in
shr
imul
leave
call
movsb
add
mov
sar
add
cmc
push
sbb
mov
hlt
lock
adc
jl
repz
sbb
mov
rcll
push
mov
lock
cmp
hlt
shrb
shrl
fwait
jbe
adc
nop
loope
sbb
cmp
push
rcrl
enter
in
or
and
ja
push
loopne
scas
add
mov
fmuls
inc
mov
test
or
bound
fsts
test
lret
xchg
je
xchg
mov
sahf
dec
pop
popf
repnz
enter
adc
jns
cmp
out
nop
in
dec
popf
sahf
sbbl
dec
or
lds
rolb
sub
popf
lods
push
sti
xor
jb
or
jle
loop
jg
in
and
sbb
pop
cltd
test
dec
insl
jecxz
and
inc
jmp
xor
mov
inc
insl
gs
jno
packsswb
jmp
jg
xchg
or
sub
ficomps
aas
push
imul
pop
and
aam
cld
xor
test
leave
cmpsb
sbb
add
add
fidivl
jl
rcr
into
or
lods
daa
push
incl
aam
mov
lods
in
and
xor
sub
or
shrb
repz
sbb
rolw
jns
lock
dec
cmp
pop
pop
mov
bound
cmp
movl
mov
or
xchg
push
dec
mov
jbe
jbe
lods
mov
inc
sti
push
mov
insl
push
adc
aam
or
sarl
mov
dec
xchg
or
push
xchg
dec
cwtl
push
icebp
addr16
lcall
bound
push
mov
test
cmp
arpl
jp
add
or
fimull
outsl
jo
nop
cltd
ret
push
inc
movsb
fcompl
cmp
add
inc
enter
insl
int3
and
sbb
ja
mov
adc
and
sbb
push
jge
pop
out
hlt
jns
or
mov
lret
push
and
jl
fnstenv
nop
iret
cli
add
int
mov
data16
sbb
bound
data16
fbld
jge
dec
mov
aad
in
shrb
adc
jo
push
xchg
push
iret
xlat
lds
sub
stos
pop
lock
xor
stc
jo
cld
out
sahf
sbb
push
andb
insb
fldcw
adc
jecxz
xor
mov
lret
sbb
fwait
rclb
sub
hlt
arpl
cltd
movsb
in
xchg
fildll
xor
mov
cmp
daa
xor
push
adc
mov
jns
sub
add
add
cwtl
inc
mov
add
pop
sub
loop
inc
sub
or
and
cmpsb
xchg
jbe
les
testb
cli
sub
and
xchg
clc
loop
jmp
cwtl
dec
cmp
push
das
sub
shlb
jmp
mov
mov
xlat
xchg
das
mov
add
mov
inc
orl
out
insl
adc
aam
repnz
loope
mov
xchg
and
mov
mov
arpl
stc
jmp
cmp
and
dec
and
rcrl
push
gs
adc
scas
mov
insl
out
cmp
adc
shll
pop
enter
jno
data16
inc
mov
mov
test
std
call
mov
adc
pop
inc
lret
sti
mov
dec
or
dec
js
fisttps
dec
mov
mov
push
push
out
rcrl
andb
mov
fadd
sbb
jbe
neg
adc
adc
movsl
mov
jg
leave
ja
outsb
pop
popa
leave
cmp
mov
popa
cltd
sarb
lcall
outsb
lods
inc
mov
jle
lea
or
inc
xchg
loope
aas
push
jo
lea
test
popf
fiadds
jp
sub
pop
push
movsb
in
mov
inc
outsb
jbe
and
sbb
jmp
or
xchg
loop
aaa
xchg
push
icebp
push
enter
in
mov
test
cs
mov
je
pop
les
ljmp
in
xor
daa
pop
and
gs
or
iret
mov
popa
jmp
fwait
xor
int3
mov
fsubr
fisttpll
xchg
add
sub
dec
sbb
dec
mov
aaa
pop
pop
inc
test
inc
cld
adc
xor
sbb
sti
mov
data16
push
mov
pop
loop
inc
mov
fiaddl
sarb
xchg
lret
mov
dec
mov
je
cmp
sahf
lahf
ss
inc
and
mov
and
pusha
or
push
or
out
out
jl
fs
lsl
fwait
cmp
cwtl
jecxz
xchg
arpl
dec
rol
rcll
mov
mov
sbb
cmp
aam
sub
lods
xor
xor
mov
xor
sahf
mov
out
pop
or
inc
scas
push
sub
adc
mov
enter
add
adc
dec
mov
loop
dec
aas
ficompl
and
sub
and
xor
add
lret
sahf
jmp
pop
movsl
nop
jae
mov
push
test
out
push
dec
mov
out
mov
lds
lods
cmp
dec
mov
dec
int
popf
aaa
push
test
push
leave
xchg
adc
cmpb
xchg
ret
adcl
push
pop
push
xor
inc
jle
addb
inc
push
add
xor
bound
and
cmp
out
enter
inc
loop
addr16
rorl
adc
sbb
rorl
nop
push
jne
rcll
cmc
and
or
pop
xchg
pop
ss
fs
dec
lcall
les
sti
push
out
or
dec
pop
cltd
fidivl
jae
in
mov
sbbl
dec
dec
mov
mov
or
cmc
popa
int3
push
fwait
dec
sbb
test
cmp
inc
jo
into
sti
dec
jae
sub
decb
or
sbb
cmp
cmpsb
xor
idivb
cmc
ret
fcomps
scas
xor
sbb
push
andl
faddl
sar
adc
int3
fstps
xlat
cmpsb
fistps
sbb
or
out
cmp
push
jmp
mov
xchg
frstor
push
xchg
adc
mov
shrb
pop
rolb
fdivl
dec
cmp
and
xor
sahf
push
call
nop
pop
mov
push
inc
dec
jne
mov
and
adc
adc
and
aas
in
dec
jo
pop
jbe
mov
fnstsw
jge
and
sbb
sbbb
or
fsts
fidivrs
or
add
fldt
int
inc
sub
push
xor
pop
scas
xor
repnz
popa
xlat
dec
fnsave
jae
dec
call
movsb
pop
jo
das
add
orb
jge
xchg
test
jns,pt
in
mov
add
fs
jp
pop
bound
fsqrt
pop
loopne
xor
outsb
rcrb
xor
add
insb
jmp
movsb
in
daa
push
lea
dec
pop
call
lds
aad
popf
pushf
add
cmpsl
gs
jge
fisttpl
nop
or
movsl
mov
lret
out
jbe
cmp
adc
mov
fbstp
in
cmpsl
je
and
icebp
in
inc
mov
push
aas
pop
push
mov
and
dec
cmpsl
repnz
xor
scas
and
pop
notl
push
lcall
sub
add
sbb
mov
in
cltd
adc
and
sub
out
cmp
adc
cs
mov
and
lcall
arpl
inc
scas
mov
jp
dec
fwait
mov
into
cvtps2pd
scas
mov
lods
mov
ret
jb
outsl
cmp
jae
cltd
loop
cmp
je
dec
sub
mov
add
fsubrl
js
mov
xor
adc
push
scas
xlat
sbb
pop
int
test
test
int3
ficoml
sub
or
push
jge
pop
cmc
mov
ljmp
or
scas
or
sbb
and
and
pop
mov
fisubrs
outsl
sub
int3
out
ljmp
push
cmp
ljmp
or
stc
mov
jmp
or
fnstenv
scas
jecxz
mov
dec
loop
loope
imull
sbb
inc
int3
cs
xor
mov
jne
add
mov
loope
fnsave
inc
js
inc
ret
inc
jnp
fistpl
sub
inc
mov
shl
nop
push
jnp
inc
bound
adcl
fcomi
int
jae
in
xchg
test
decb
lea
pop
call
insb
push
cmp
pushf
in
pop
adc
stos
ss
ret
or
xlat
ret
lods
xor
adc
int
pop
cmp
in
dec
subb
out
pop
mov
push
fwait
dec
dec
dec
iret
rcl
mov
push
jmp
xchg
dec
push
shrl
xor
pop
aad
adc
inc
mov
sbb
push
cmp
in
lods
mov
inc
orl
sbb
xor
insl
scas
or
in
and
and
fcoms
rcll
rorl
and
hlt
inc
std
mov
daa
nop
mov
jbe
mov
gs
lcall
mov
or
push
push
xor
clc
jecxz
repnz
cld
je
cmc
mov
jb
mov
ret
mov
sbbb
push
shlb
jnp
push
mov
fstl
pop
xchg
sbb
xchg
sub
sub
das
hlt
mov
call
loopnew
hlt
fsin
aam
cmpl
ljmp
loope
pop
cmp
add
push
notl
or
pop
arpl
push
mov
jl
or
pop
pop
mov
sti
xchg
inc
pop
icebp
adc
jecxz
dec
xchg
int
xchg
add
dec
je
call
adc
pop
std
inc
add
addb
orb
testb
outsb
inc
movsl
or
gs
mov
xlat
pop
push
shll
ret
scas
push
cltd
mov
pusha
fcoml
insb
icebp
hlt
cmc
call
mov
pop
inc
ja
lret
mov
orl
sub
xor
sub
mov
cltd
push
fwait
sbbl
out
or
xchg
in
push
mov
inc
lret
cltd
into
sub
mov
jmp
fdivr
popf
into
mov
pop
cli
xor
js
popa
mov
mov
cmp
cmp
inc
xchg
int3
add
pop
sbb
inc
scas
sbb
jge
or
xor
and
xor
or
arpl
pop
mov
loope
mov
mov
jno
adc
xchg
mov
add
ja
xor
inc
leave
rol
in
das
je
jbe
xchg
dec
out
fiadds
arpl
push
stos
mov
add
mov
xor
push
popa
inc
pusha
jnp
adc
lods
or
mov
pop
mov
lret
testb
call
aas
inc
push
test
cltd
jns
leave
lret
stos
jb
hlt
in
loope
cmp
or
xor
imul
mov
sub
push
nop
cmp
xor
stc
xor
and
mov
cmp
sbb
les
jg
jnp
inc
pop
stc
in
sbb
inc
jl
cmp
mov
movsb
int3
and
mov
lcall
dec
mov
cmc
and
fsubl
out
sbb
negl
push
pusha
in
popf
fisttpll
stc
fdivl
cltd
push
xor
pop
lea
cltd
add
cmp
sbb
into
adc
lds
call
rcll
add
mov
xlat
xchg
mov
xlat
xor
je
inc
jl
pushf
sarl
in
push
outsb
lret
or
aas
add
and
cmp
dec
sbbl
mov
mov
lea
ret
jbe
xchg
jns
inc
bound
pop
jns
push
pop
mov
dec
sub
andl
aam
push
cmp
xchg
js
dec
test
leave
or
mov
cmp
cld
iret
xlat
mov
out
pop
lods
test
cmp
xchg
cwtl
jnp
mov
mov
scas
push
fs
mov
mov
scas
insb
jae
push
push
dec
mov
push
jb
out
or
or
sti
mov
push
pop
fdivl
xor
mov
sub
sbb
lret
or
icebp
add
xlat
test
pop
adc
sbb
jb
data16
mov
sbb
mov
fiadds
xor
mov
xchg
fcoms
imul
jno
mov
add
movsb
add
mov
jmp
mov
jp
aad
and
sar
stos
insb
out
mov
popf
fildll
jbe
fidivl
test
movups
pop
std
dec
jg
pusha
xor
cvtdq2ps
adc
popf
adc
cmc
and
pop
pushf
push
adc
dec
ja
mov
inc
into
jmp
in
cmp
pop
popf
mov
mov
sti
push
xchg
push
xlat
adc
xor
push
es
std
dec
adc
loopne
mov
mov
fs
nop
jle
jp
lret
ljmp
jmp
lcall
dec
fsubrs
adc
cwtl
sarl
js
jle
dec
call
xchg
xchg
cmp
loop
inc
cmp
es
mov
mov
call
test
dec
fwait
loopne
out
adc
aam
stc
out
cmp
jg
push
cltd
mov
dec
loope
mov
adc
mov
cmpsb
rcll
mov
cmp
popf
xor
or
sbb
pop
adc
sub
popa
jl
and
imul
aaa
mov
and
fdivs
les
jle
cmp
xchg
rcll
push
mov
dec
dec
xor
xor
test
or
orb
movsb
scas
out
cmpl
xor
xchg
out
aaa
xchg
xchg
mov
jp
out
and
in
cltd
mov
std
jae
cmp
pop
test
add
inc
pop
fisttpl
adc
ds
pop
cmpsl
cld
and
popf
mov
xchg
dec
int3
shl
xlat
fsub
and
pop
cmp
xor
into
pop
les
push
mov
daa
loop
jl
rcl
xchg
pushf
pop
lods
cmp
dec
push
mov
and
xor
sub
sub
fwait
andb
out
inc
outsl
mov
jge
mov
mov
inc
repz
mov
out
xchg
and
sub
test
movsb
sub
arpl
xchg
jp
sar
imul
out
cmp
rolb
js
mov
leave
add
pop
mov
adc
cmpsb
adc
fucomip
jg
jge
fwait
pop
dec
das
mov
outsb
sbb
jp
iret
cwtl
shr
ror
xor
jns
mov
out
ficoml
pop
push
pop
lahf
ljmp
sbb
sub
cmp
mov
in
add
pop
pushf
sub
rclb
sbb
jg
aas
aas
mov
pop
xchg
push
iret
xchg
dec
faddl
pop
roll
lahf
and
push
pop
adc
repz
mov
cld
mov
rclb
add
cmp
dec
mov
sub
mov
jno
jne
mov
pop
or
lret
add
dec
sha256msg1
imul
and
dec
mov
xor
arpl
adc
dec
gs
push
mov
push
mov
in
shlb
dec
mov
xor
pushf
inc
int
xchg
mov
mov
ss
jo
rclb
pop
fwait
aam
aad
mov
orl
inc
jl
pop
mov
lock
ficomps
je
leave
mov
ret
and
imul
test
fcomp
sub
outsl
rcll
xchg
addr16
jge
mov
aas
loope
pop
push
jno
jmp
ret
mov
ljmp
mov
jae
xchg
arpl
call
mov
mov
pop
mov
mov
mov
enter
test
das
les
push
daa
loop
leave
sub
popf
lods
push
xchg
mov
push
jb
into
add
mov
es
push
or
js
cmp
insl
mov
lret
repnz
pop
sbb
or
dec
sub
adc
nop
push
out
inc
inc
dec
cmp
xlat
push
and
lret
push
js
pop
scas
cltd
mov
mov
stc
mov
dec
leave
lods
js
jne
int
pop
in
jb
enter
add
sub
fmul
dec
add
jmp
jge
addr16
xchg
jns
lret
int
int
dec
add
iret
call
out
push
ja
inc
sub
outsl
fidivrl
pop
mov
lahf
mov
es
out
pop
sub
xor
scas
xlat
fdiv
jns
sarl
or
or
shrl
jbe
scas
mull
out
aas
ret
ds
sub
stc
cltd
fldcw
mov
pop
push
je
pop
cmpsb
ljmp
mov
pop
and
dec
mov
fptan
or
cmp
mov
cld
testl
lahf
mov
pusha
add
es
enter
cs
shll
lods
jp
jmp
rorb
aaa
scas
lock
pop
xchg
push
push
lock
lea
pop
xor
cwtl
xor
into
mov
mov
pop
push
jl
mov
xchg
adc
jnp
push
mov
in
cmp
or
jae
add
pop
fwait
sub
rorl
cltd
jns
lea
mov
dec
mov
push
cmp
or
jne
push
pushf
imul
popa
xlat
int3
xchg
scas
cmp
out
mov
lret
fnsave
test
dec
aaa
push
aas
fst
mov
gs
faddp
mov
shl
bnd
mov
mov
xor
jb
inc
fadd
sti
jb
aaa
pop
lea
imul
mov
cmpsb
push
cld
or
cmp
dec
icebp
cmp
sbb
cmp
sbb
pop
jno
or
popa
stc
dec
mov
sub
mov
mov
ds
mov
repnz
jne
pop
ss
int3
mov
xor
and
std
shl
bound
and
pop
out
inc
jb
jecxz
xchg
mov
and
aas
out
pop
or
sbb
mov
dec
jne
int3
push
gs
jno
sahf
in
and
shrl
cmp
or
xchg
mov
mov
stos
jnp
dec
pusha
js
mov
aaa
inc
push
lcall
pushf
mov
insb
aaa
mov
pop
push
cld
add
aam
js
movsb
push
mov
and
dec
fsubs
mov
and
movw
push
pushl
ret
shlb
inc
aaa
jp
out
xchg
loop,pt
lret
enter
mov
imul
mov
jge
call
dec
icebp
xchg
xor
cmp
pop
mov
jle
add
inc
pusha
xchg
ss
jno
aaa
pop
outsb
lcall
push
push
dec
cmc
cmc
add
dec
std
xchg
lds
inc
movsl
icebp
push
mov
add
and
sbb
mov
xchg
and
leave
push
cmpsl
addr16
sahf
sahf
sbb
out
out
fbstp
daa
mov
xor
add
pop
stc
hlt
jo
aaa
loop
ja
mov
xor
dec
push
xchg
repnz
sbb
test
lea
cmp
lds
cld
scas
push
mov
insb
cltd
fs
sbb
fbstp
out
inc
gs
int3
shll
movsl
mov
sbb
gs
add
fldt
sub
leave
inc
pop
mov
adc
pop
fbld
ja
dec
adc
jne
lcall
push
jmp
cltd
imul
insb
mov
stc
add
popf
push
pop
sbb
inc
aaa
inc
cmp
mov
movsb
adc
out
cld
jne
fst
fidivs
dec
pop
fwait
or
in
movsb
test
push
dec
sub
mov
xchg
pop
adcb
mov
mov
xchg
lret
push
push
xor
mov
adc
pop
mov
ret
loope
shr
adc
xor
sbb
cmp
mov
repz
iret
jp
es
pop
fdivr
adc
lock
movsl
in
mov
outsl
inc
aaa
or
stos
ljmpw
fisubs
xchg
push
test
shll
mov
dec
movsb
movsb
add
mov
pop
jae
cs
jecxz
push
mov
mov
cmp
pop
fdivrs
inc
mov
push
jne
mov
rclb
aas
outsl
ljmp
les
push
or
in
mov
out
pop
pop
fwait
outsb
and
sub
call
jb
icebp
jns
xor
xchg
xchg
or
inc
add
add
xor
add
add
add
cmpsb
and
or
sub
add
add
add
sub
add
xor
add
add
add
repnz
sbb
sub
add
add
add
mov
add
sub
add
add
add
mov
add
sub
add
add
add
adc
xor
sub
add
add
add
or
and
pop
xor
add
add
add
lds
add
and
pusha
xor
add
add
add
add
and
push
add
add
add
add
mov
and
jo
sub
add
add
add
xchg
and
pop
mov
add
sub
add
add
add
mov
add
add
add
add
add
cmpsb
and
push
add
add
inc
incl
movsbw
call
add
aaa
lock
iret
pop
setae
mov
inc
pop
shll
pop
stos
pop
xor
loope
dec
movsl
sahf
shlb
std
aam
pop
pop
roll
roll
in
xor
pminsw
mov
inc
cmp
adcb
movsl
andb
lret
mov
sbb
iret
mov
test
add
ud0
jge,pn
lds
mull
mov
aad
xchg
sub
outsl
jmp
jns
pop
jo
mov
les
hlt
mull
sti
outsl
pop
mov
dec
jae
test
ret
inc
jp
xor
cmp
pop
lahf
daa
dec
in
xor
cmpl
pop
popf
popf
dec
rcrl
outsl
or
sar
cld
push
sbb
push
dec
stc
inc
xchg
xchg
fadds
dec
jne
xchg
sub
fiaddl
ret
dec
xor
jmp
xchg
bound
xor
xchg
xchg
ja
ret
mulb
jb
xlat
pop
xchg
aad
dec
mov
addr16
mov
sub
in
and
nop
push
push
lea
ja
jmp
imul
xchg
inc
or
pop
fwait
inc
cmp
add
out
or
nop
stos
ret
or
inc
add
sbb
xlat
shl
bound
mov
iret
clc
jbe
jecxz
lock
iret
adc
ret
ret
hlt
jle
insb
ds
shll
aad
pop
test
mov
loope
cltd
fs
xorl
popl
shl
out
pop
add
add
xor
add
push
jle
add
mov
mov
insb
inc
adc
dec
adc
pop
sub
dec
inc
les
add
push
pusha
pushf
lea
jne
call
xor
ja
dec
mov
adc
cmp
pop
les
add
or
inc
and
std
fisttpl
cmp
loop
mov
mov
push
cmc
jle
dec
lods
fstpl
test
xor
out
add
jle
leave
cmp
sub
mov
dec
mov
lods
call
xor
dec
aaa
testb
aad
and
imul
push
inc
add
pusha
movsb
adc
push
scas
rcll
push
int3
jno
in
xchg
push
sbb
xor
ja
lods
adc
or
jnp
stos
sbb
xchg
sub
inc
mov
or
sub
scas
test
dec
cltd
jno
bound
inc
jns
pop
iret
xor
popf
addr16
push
cmp
fimuls
jae
lods
test
bt
xor
bt
bt
sub
call
pop
push
lods
scas
sbb
dec
xlat
lret
addr16
and
pop
pop
cwtl
sarb
clc
jge
fldl
pop
repz
jg
jnp
das
pop
xor
xlat
pop
sbb
outsb
inc
das
les
pusha
pop
mov
pop
rcl
add
inc
push
adc
pop
xchg
lods
clc
imul
dec
push
testl
aad
fwait
xchg
dec
loopne
les
and
and
jnp
sti
lods
pop
mov
xchg
gs
imul
movsb
xchg
push
lea
call
push
lea
jb
pushf
pusha
pushl
ret
aaa
sbb
xor
push
lds
stc
sub
mov
stos
in
add
repnz
dec
xchg
es
xor
or
mov
mov
das
xor
je
mov
jmp
mov
adc
cld
rcll
push
fs
sub
test
mulb
jp
loope
scas
addr16
dec
mov
push
sbb
xor
insb
dec
xchg
fisubs
loop
push
cltd
lret
xor
out
shlb
push
pop
stc
jo
popf
push
push
aaa
js
xchg
inc
xlat
sub
fsubrl
and
add
adc
int3
mov
js
inc
popf
scas
cli
push
fcompl
stc
rolb
sub
mov
addr16
repnz
xor
icebp
nop
aam
out
roll
ds
cmp
lods
and
ja
loop
in
xchg
cmpl
xorl
pop
mov
fcoml
sbb
jl
mov
cmpsb
xchg
xchg
or
dec
scas
int
pop
jne
ror
jge
and
enter
repz
cmpsb
jmp
pushf
cltd
cmp
call
mov
xchg
movsbw
seta
mov
jmp
test
clc
cmp
pusha
lea
jae
clc
jmp
mov
imul
repz
sub
data16
pusha
sub
nop
in
add
or
and
mov
in
mov
sahf
stc
orl
in
mov
and
cmp
xchg
push
ljmp
ret
lods
jp
mov
mov
icebp
xor
and
pop
jae
nop
sarb
xor
mov
cmp
ss
jg
add
xchg
pop
mov
nop
lret
into
test
int
adc
js
push
out
mov
outsl
push
xor
adc
rorb
lods
daa
dec
out
push
loopne
ds
xchg
sbb
dec
push
fwait
xchg
mov
or
aad
test
cltd
addr16
popa
inc
push
sbb
add
push
dec
aad
pop
push
adc
lea
pop
adc
bound
mov
nop
loop
pop
push
dec
and
jno
inc
and
or
sbb
test
popf
frstor
loop
sbb
sbb
pop
inc
pop
mov
lea
sub
mul
xor
sub
nop
push
icebp
sahf
jecxz
mov
lea
cmp
push
test
mov
ljmp
cld
int
int
orl
xlat
dec
lea
mov
add
add
sub
pop
loopne
imul
ljmp
sub
push
push
pop
inc
push
sbb
cld
pushf
adc
bound
cmp
stc
cli
dec
leave
sub
rorb
int3
in
loope
cmp
push
data16
dec
sub
in
mov
jmp
cs
xor
fs
stos
mov
cmp
lcall
in
sbb
mov
imul
and
ljmp
cmpsb
push
mov
cmp
repnz
add
aam
ljmp
test
dec
cli
cmpsb
in
popa
mov
jmp
test
clc
sub
push
pop
imul
das
sub
xlat
imul
lods
and
imul
dec
fldenv
adc
pop
xchg
sub
gs
pop
mov
and
sub
dec
mov
xchg
aaa
xchg
loop
arpl
fs
orb
out
test
push
mov
call
pop
out
dec
cmp
pop
test
lock
bound
cs
loope
jmp
cmp
sub
push
cli
sub
jns
js
pop
jbe
lods
ljmp
fiadds
test
imul
pop
pop
add
lds
mov
dec
push
push
sub
pop
sbb
ja
dec
loope
inc
dec
imul
bound
test
dec
pop
dec
mov
sub
xchg
mov
pop
pop
jmp
mov
nop
dec
lcall
and
daa
jae
ret
cli
dec
divl
jmp
inc
data16
mov
test
jmp
loop
push
in
call
pusha
imul
mov
dec
shll
addr16
cltd
mov
mov
and
sbb
push
mov
gs
xorps
and
dec
push
cmp
add
push
dec
dec
mov
inc
or
xor
dec
adc
push
clc
cmpsb
loop
cltd
xor
repz
pop
xchg
xor
or
repz
fxch
xor
mov
ljmp
sarb
pop
jp,pn
test
data16
data16
loope
dec
sbb
mov
pop
dec
pop
push
andl
push
pop
stos
ret
pop
shrl
fldt
pop
inc
jl
xchg
dec
xor
ds
out
adc
pop
shll
xlat
rolb
push
pop
bound
xrelease
movsl
push
icebp
pop
push
xchg
adc
push
pusha
int
cmpsl
nop
pop
inc
xor
je
adc
jp
cmpsl
andl
loopne
pop
stos
andl
inc
gs
and
pop
mov
ret
inc
mov
ljmp
outsb
mov
dec
das
gs
push
leave
gs
dec
push
and
pusha
cmp
gs
dec
cmp
inc
imul
pop
iret
pop
sub
add
bound
and
pmulhuw
mov
out
fs
pop
sub
in
rcll
imul
leave
mov
jp
cmpsl
addr16
imul
shrb
xor
nop
cltd
addr16
cmpsl
mov
cmpsl
push
movsb
rorb
push
push
leave
push
mov
add
adcb
mov
push
add
int3
mov
call
cmpsb
xchg
or
mov
mov
cmp
and
addr16
dec
sub
add
xlat
push
movsb
dec
sub
filds
inc
test
xchg
dec
dec
test
mov
mov
out
test
push
mov
test
jnp
test
stos
mov
xchg
shrb
pop
ds
sbb
test
inc
add
inc
cmpsl
jl
pop
push
inc
jmp
out
out
dec
xchg
ret
pop
mov
jl
in
push
pop
xor
cs
sbb
mov
pop
cmp
ja
and
adc
cmp
xor
mov
xor
mov
pop
xor
in
bound
rcll
mov
and
and
mov
std
out
popf
test
xchg
loope
fsubrs
mov
test
dec
data16
mov
mov
inc
loop
insb
out
std
jg
testb
test
inc
mov
ljmp
sub
push
jne
cmpsb
or
shll
insb
gs
popa
add
cmp
cld
xor
test
je
pop
and
fsts
add
inc
push
popa
push
inc
add
dec
out
mov
sbb
jbe
jl
inc
popa
pop
stos
inc
test
enter
mov
sub
pop
out
test
push
cmp
into
test
cmp
pop
ja
test
test
or
cmpsl
test
xor
popa
push
xor
adc
cmpsl
jo
dec
adc
push
adc
cmpsb
mov
and
pop
jecxz
dec
icebp
jecxz
icebp
daa
pop
in
es
dec
cmc
push
push
jge
adc
popa
mov
pop
inc
dec
dec
enter
out
pop
sub
lds
push
cmp
loope
sbb
in
in
push
mov
test
xor
test
test
mov
out
inc
push
and
mov
dec
push
add
test
push
imul
inc
iret
iret
push
sub
push
mov
gs
imul
gs
shll
xlat
sub
pusha
xorps
pusha
push
xchg
pusha
xchg
add
and
fdivrl
or
clc
insl
addr16
add
dec
xor
cmpsl
and
cld
fdivs
cmpsb
pop
dec
fadds
xor
inc
gs
pop
and
push
adc
in
mov
lahf
dec
gs
mov
mov
xlat
jecxz
sub
push
popf
addr16
mov
leave
fidivs
filds
cmp
aad
add
gs
mov
dec
mov
mov
lahf
clc
inc
adc
nop
cli
adc
adc
cmp
rcr
push
sbb
arpl
pop
push
out
icebp
out
push
and
pop
cmpsl
rcrb
adc
sub
pop
sub
fnstenv
sbb
dec
shrb
xchg
ret
xchg
dec
push
cwtl
test
push
fsubrs
xchg
std
and
dec
out
gs
popf
pop
std
nopl
lret
in
pusha
inc
sbb
push
cmp
push
pop
push
pop
adc
rclb
push
push
mov
dec
out
popa
pusha
loope
sahf
rclb
push
int
out
inc
bound
inc
push
or
in
test
loop
ret
aad
fnstcw
and
or
inc
aad
mov
xchg
and
fisttpl
ljmp
push
pop
and
addr16
xchg
es
dec
pop
pop
shrl
nop
jg
rcrl
xchg
and
sar
xor
adc
inc
movsl
push
mov
xor
xchg
mov
xchg
and
popa
bound
arpl
loop
int
leave
adc
or
pop
rcrb
and
dec
lock
test
dec
loopne
inc
outsl
dec
lcall
dec
sbb
arpl
in
add
xchg
jmp
sub
ljmp
add
pop
mov
dec
jnp
scas
dec
stc
imul
movb
mov
and
gs
pop
push
pusha
and
mov
dec
inc
xor
aam
pop
mov
dec
aaa
mov
adc
add
bound
sbb
sub
adc
dec
sbb
cwtl
xchg
mov
xchg
adc
arpl
or
movsb
xor
xchg
push
xchg
inc
adc
xchg
xchg
push
mov
pop
push
jmp
dec
cltd
roll
cltd
call
mov
test
jmp
shlb
push
fs
xchg
loopne
push
dec
jp
scas
add
sbb
notl
push
popa
cli
ss
test
loope
dec
dec
daa
pop
push
in
and
cmp
sbb
imul
mov
add
sub
lret
sub
lods
loope
inc
xor
fldenv
imul
addr16
int
xor
and
cwtl
aaa
movl
jne
xlat
pushf
out
xor
in
mov
ss
mov
imul
push
mov
fwait
xchg
rep
fcoms
push
inc
loope
cs
arpl
nop
aas
sub
pop
and
ds
lcall
pop
push
les
adc
in
dec
aas
test
addr16
negb
mov
aad
adc
lods
fisttpl
push
pop
add
xor
inc
flds
in
leave
arpl
scas
pop
pop
pop
imul
push
pop
push
pop
or
pop
inc
inc
cld
xchg
push
pop
adc
aaa
outsl
in
dec
and
xor
and
aam
pop
mov
popf
mov
iret
pop
jecxz
sbb
cli
or
cmp
dec
es
orb
push
mov
adc
ret
adc
push
xchg
dec
and
pop
inc
scas
sti
add
pop
mov
adc
ds
enter
push
adc
adc
xlat
xchg
cmpsb
insw
xchg
cmp
enter
ror
nop
and
cmpsb
sub
fxch
cli
and
testb
sbb
push
pop
xor
ljmp
cmp
hlt
dec
xchg
inc
sbb
cli
leave
adc
pop
mov
aad
xchg
fsts
jno
leave
push
popa
adc
or
popa
xchg
sbb
popa
dec
in
add
xor
imul
call
fsubs
je
push
mov
dec
insb
cltd
xchg
mov
shlb
inc
cmp
test
inc
pop
dec
inc
xor
cmp
cwtl
adc
push
mov
xchg
fistps
sbb
enter
inc
push
dec
movsl
cltd
rcr
imul
pop
rcrb
pop
fistl
fs
aad
pop
movsb
xor
push
dec
cmpb
mov
sbb
mov
ja
adc
inc
into
call
fsubs
push
push
rclb
aaa
xchg
push
loopne
xor
dec
cltd
ss
leave
jne
xchg
nop
and
cmp
push
stos
jnp
inc
push
arpl
adc
push
inc
mov
inc
test
mov
notb
rolb
jne
vpmovmskb
cltd
inc
rorb
cltd
xchg
popa
jb
add
scas
ffreep
dec
inc
bound
xchg
into
mov
jae
pop
dec
addb
inc
pop
dec
jnp
pushf
jbe
stos
dec
push
pop
add
dec
cld
sarb
xchg
insl
ljmp
sub
xor
ja
push
jmp
daa
adc
push
pop
lds
data16
lret
mov
hlt
jb
fsubrs
rcrb
add
lret
popa
sub
inc
rdmsr
jbe
and
cmp
and
popa
lcall
cmp
mov
adc
cmp
cs
stos
cwtl
ljmp
movw
pusha
lea
in
imul
sub
movsb
dec
xchg
jae
pop
jmp
push
xor
dec
stc
mov
sbb
nop
push
aaa
das
fildl
mov
xchg
cmp
leave
shlb
push
test
enter
pusha
xchg
inc
addr16
insb
xchg
lret
and
mov
dec
adc
cmp
pop
sbb
push
push
pop
gs
rorl
mov
pop
cmpsl
add
xchg
inc
inc
dec
in
push
rclb
aas
icebp
push
pmulhuw
cmp
out
test
out
mov
pop
dec
arpl
xor
or
cmp
cmp
xor
xor
xchg
ret
jl
fsub
leave
adc
pop
pop
and
stos
dec
adc
sub
daa
nop
movsl
lods
push
call
push
pop
bound
ss
and
pusha
inc
cmpsb
in
push
pop
push
adc
or
loopne
out
lret
pop
cmp
pop
movsb
jo
mov
fdiv
push
aad
dec
pop
push
cmp
cmp
sbb
sub
pop
jae
stos
popa
push
mov
xor
pop
jmp
pusha
push
inc
xor
push
xchg
out
daa
push
subb
xchg
inc
cs
xor
inc
outsl
mov
sub
int3
int
testb
pop
loop
lods
adc
cwtl
xor
xlat
ss
pop
xlat
aad
cmp
movsl
sbb
test
mov
cli
mov
sbb
lods
inc
cmpb
push
scas
and
out
xor
pop
lods
add
xlat
adc
test
inc
lds
jle
cmp
xchg
dec
fisubrs
or
adc
push
cmp
fists
sbb
lcall
jbe
test
movl
add
push
jmp
xchg
call
lret
in
ljmp
xor
xchg
xor
arpl
pusha
inc
into
inc
fdiv
dec
dec
dec
xor
push
mov
dec
fs
inc
fisttps
mov
and
dec
imulb
pop
dec
mov
test
dec
arpl
and
gs
inc
push
inc
push
sbb
inc
aad
in
xor
and
repz
ss
pusha
xchg
mov
mov
sub
sahf
adc
gs
leave
push
sub
arpl
pop
sub
xor
ds
xchg
sub
and
lret
add
ret
test
cmp
inc
popa
add
pop
ljmp
pop
inc
jg
fldt
shlb
sub
inc
hlt
push
pop
sbb
stos
cmp
push
leave
adc
adc
sub
xchg
stos
dec
into
dec
dec
and
popa
iret
rolb
stos
pop
push
and
push
in
fidivl
push
jmp
push
ret
push
jns
sbb
push
xlat
sub
pop
mov
mov
or
shll
pusha
inc
adc
pop
fs
mov
add
fmuls
xor
push
test
push
cmp
nop
push
aam
ds
adc
pusha
iret
fidivs
shrl
push
pop
int
nop
push
push
pop
pop
loope
fiadds
dec
mov
dec
aad
in
data16
popa
push
and
mov
test
mov
inc
push
pusha
mov
pusha
xchg
xchg
pusha
fldenv
adc
inc
pusha
rsqrtps
pop
loopne
bound
vmovapd
shll
add
mov
sbb
cmpsl
nop
xchg
ret
cmp
icebp
scas
mov
cli
inc
shrl
fildl
gs
ljmp
push
sarb
pop
iret
inc
dec
inc
cmp
cmpsb
xchg
or
popf
inc
aad
sbb
mov
hlt
lret
push
outsb
dec
pop
adc
arpl
scas
leave
into
dec
xchg
in
xorb
ret
sarl
repnz
fistps
push
pop
in
xchg
jecxz
addr16
mov
test
call
jbe
fsubr
int3
push
mov
mov
mov
xor
enter
scas
and
or
fs
mulb
addr16
lods
add
call
push
lret
ljmp
fs
mov
arpl
inc
dec
in
dec
inc
mov
add
pop
xor
frstor
mov
movsb
sbb
xchg
in
inc
loop
xor
xor
call
xor
aad
sub
in
mov
lods
lds
aaa
out
push
lods
movsl
cmp
gs
pop
pop
cmp
push
pop
pop
or
push
mov
adc
cmp
sub
and
add
pop
dec
push
dec
mov
xchg
pop
mov
repz
mov
mov
fistps
test
sbb
rcl
inc
cltd
rol
popa
loop
push
adc
dec
sub
in
mov
out
aad
sarb
icebp
xor
xchg
inc
pop
loop
and
dec
dec
mov
in
lds
add
xlat
push
or
sub
push
jg
xrelease
bound
ljmp
push
pop
sbb
cmp
xchg
push
push
loopne
lret
mov
inc
fdiv
pop
xor
fbld
cmovg
popf
gs
lds
push
cmpsl
dec
imul
dec
leave
ret
cwtl
shlb
popa
int3
loopne
xchg
movsl
push
adc
lods
jecxz
popa
int3
loopne
pop
pop
and
push
xchg
or
ret
push
ljmp
cmp
lret
mov
bound
lea
arpl
pop
cltd
sbb
cwtl
push
pop
pop
sub
shld
or
dec
or
cwtl
fcomps
xor
jg
ret
pushf
out
mov
dec
push
data16
jo
clc
cmp
aad
inc
outsb
jg
gs
and
inc
loopne
jae
sub
inc
je
leave
test
inc
lods
xchg
sar
and
lahf
xchg
jno
ja
or
xor
mov
push
into
inc
jne
popf
aam
test
lcall
lret
shrb
ret
inc
std
sub
repz
push
shl
cvtps2pd
pop
add
clc
stos
test
in
es
pushfw
popw
cmp
shl
mov
test
jmp
sahf
sbb
push
inc
aaa
xor
sarb
adc
lret
es
pop
fldl
movsb
mov
mov
push
out
mov
push
mov
sub
stc
fmuls
pop
push
stos
or
add
scas
das
ljmp
pop
adc
cmp
jp
adc
addl
xor
pop
cmp
in
mov
sub
cmp
adc
xchg
cmp
adcl
pop
dec
inc
cmp
jns
jne
leave
push
xor
xor
fldenv
inc
push
inc
aaa
mov
dec
testb
adcb
xor
pop
add
test
ljmp
xchg
mov
mov
test
stc
xor
mov
sbb
daa
mov
das
test
push
stos
fwait
stos
and
dec
jb
popf
mov
dec
jg
xor
imul
mov
xlat
sub
les
push
inc
aaa
dec
sahf
add
jp
push
out
loop,pn
bound
add
pop
subb
popa
cmp
push
sbb
xor
mov
dec
out
adc
jno
jae
or
int
jb
jno
fistpl
or
jp
adc
add
sbb
test
cmp
sub
adc
add
pop
andl
dec
lret
or
call
into
mov
or
sub
js
sbb
cli
cmp
ljmp
repz
pop
imul
push
adc
imul
xchg
out
sahf
das
push
lahf
pushf
dec
push
pushf
sbb
sbb
dec
cwtl
sbbb
pop
mov
inc
xor
sub
mov
shr
add
int
jno
and
or
jo
or
jl
out
lds
push
add
adc
or
dec
jl
popa
jp
mov
cmpsb
cmp
lods
pop
xor
or
dec
call
aad
mov
inc
aaa
jg
mov
lcall
cmp
fwait
xchg
mov
push
cmp
xchg
dec
add
mov
sti
inc
fisttpl
inc
int3
or
cwtl
faddl
fwait
cmp
mov
lods
or
pop
jg
xchg
adc
cs
mov
push
mov
and
sub
dec
cli
insl
loope
out
jne
fwait
push
insl
fdivrs
jns
lea
jno
gs
mov
or
mov
dec
jbe
or
xlat
sbb
fs
jb
clc
cmpb
call
sub
pushf
movb
pushf
pushl
rep
movzbw
mov
pushl
movb
pushl
lea
jmp
pushf
lea
jne
pusha
stos
push
pusha
mov
lea
jmp
pop
lds
inc
aaa
lret
mov
out
cmp
dec
xlat
mov
shll
mov
jg
pop
fdivl
outsl
enter
sub
and
fwait
sti
aaa
push
pushf
jo
mov
xlat
xor
mov
mov
lods
jle
pop
cmp
xchg
push
adc
mov
dec
scas
shrb
into
pop
add
cmpsl
mov
jae
mov
mov
rcl
neg
jae
hlt
mov
mov
dec
jge
push
rcrl
ja
push
inc
push
ja
stos
mov
mov
not
pusha
lods
jmp
repnz
call
loope
sub
aaa
fdivs
mov
sub
mov
stos
fidivrs
scas
ja
cmp
stos
inc
or
inc
or
in
pusha
in
inc
adc
sbb
jno
or
xor
out
jnp
push
cmp
cmp
inc
cmovns
rcll
test
sub
xor
push
cmp
cmp
mov
repnz
nop
dec
mov
adc
scas
fsub
pop
add
aaa
aad
adc
cs
xchg
ss
mov
leave
daa
in
test
fldl
pop
mov
outsb
outsl
ret
jns
out
xchg
push
dec
sub
outsl
test
xor
jnp
sub
sub
xchg
loopne
rclb
xchg
push
lds
cmp
and
or
rol
scas
outsb
jmp
adc
xor
iret
jle
rorl
pop
or
pop
shlb
int3
push
enter
sub
adc
push
in
xchg
fmulp
cwtl
sub
aaa
lods
test
pop
scas
adc
sahf
and
jb
jns
jns
cmpsb
shrl
ss
mov
inc
lcall
add
dec
call
fisttps
pushl
lret
jo
and
adc
leave
and
imul
rclb
add
mulb
and
in
ficomps
inc
dec
mov
sti
movsb
sbb
pop
inc
fsubs
arpl
mov
out
or
xchg
sbb
mov
and
stc
jae
addr16
and
cmovno
fdivrs
pop
mov
bswap
bswap
pushf
pushf
mov
mov
pushl
lea
jmp
dec
in
dec
inc
aaa
stc
sub
bnd
outsb
out
add
jle
les
jmp
sbb
aam
fstps
mov
push
inc
xchg
xor
imul
add
inc
shr
enter
pop
xchg
lret
incl
mov
shrl
xchg
sti
pop
out
cltd
sti
nop
ficompl
ja
mov
call
es
dec
inc
aaa
sub
push
into
cli
inc
lret
mov
jae
in
outsb
scas
sbb
test
pop
loop
xorl
mov
decb
adc
bound
jb
mov
sti
movsb
outsl
jbe
inc
loopne
das
cltd
jecxz
add
jmp
in
fs
mov
pusha
aad
rsm
jns
sbb
and
push
jle
cli
pushf
push
cwtl
adc
inc
mov
add
packuswb
aas
imul
dec
inc
aaa
in
mov
fld
jns
adc
in
and
and
sub
call
fcomps
ret
scas
push
rcrb
enter
sub
dec
xor
cmpsb
and
mov
lret
adc
push
xor
jb
test
jb
jbe
ds
scas
sbb
jp
outsb
mov
push
clc
cmp
je
add
sbb
jl
add
mov
add
jae
mov
int
ret
dec
mov
push
jb
lds
aas
pusha
cltd
mov
js
sub
pop
sub
es
ret
push
adc
mov
add
popa
stos
out
cmp
lods
sub
es
and
aam
dec
stos
aad
pop
xor
jmp
adc
push
and
xchg
notb
nop
jp
mov
and
shlb
int
mov
jmp
jb
pop
clc
adcb
loop
push
ret
cmpsl
je
aaa
data16
xor
inc
aaa
ja
mov
pop
arpl
jae
push
cmpsl
or
mov
outsl
cmp
out
xchg
and
mov
cmp
xlat
call
pop
fistpll
into
push
pop
mov
xor
cltd
jno
jo
jae
subl
aaa
pop
pop
sar
es
xor
mov
push
loope
sti
and
nop
push
shrl
jne
and
cmp
push
call
in
or
push
lcall
out
dec
sahf
fisubrl
leave
addr16
daa
test
aad
xchg
aas
hlt
test
mov
testl
lock
sbb
hlt
std
adc
fistl
inc
cmp
int3
push
bound
jns
push
adc
and
jo
dec
adc
jnp
out
inc
pop
fwait
jbe
add
cmp
insl
clc
adc
mov
jl
lret
jnp
mov
aas
push
cltd
popa
sub
rcrl
and
mov
imul
pusha
ret
dec
sbb
sbb
pusha
lea
jae
cmc
stc
cmp
push
pushf
pushf
lea
ja
dec
inc
pushf
jmp
or
jmp
mov
sbb
call
cmp
pushl
lea
ja
mov
setle
jmp
call
sbb
mov
add
call
imul
adc
leave
movsl
inc
test
jne
xchg
shl
inc
in
dec
xchg
jae
lods
lds
or
ljmp
fistpl
and
fiadds
sub
xor
cmpsl
mov
repz
mov
pop
add
cmc
inc
es
sbb
icebp
bound
lods
packuswb
mov
mov
pushf
out
add
and
ds
pop
cmp
mov
pushf
lea
jae
bt
pusha
cmp
mov
movb
jmp
adc
jns
push
stc
jge
and
mov
xchg
xor
dec
xchg
pop
inc
xor
lods
in
fildl
or
scas
fstpt
out
icebp
and
int
cwtl
or
and
mov
sbb
and
mov
data16
and
orb
insb
loop
mov
ret
cltd
xor
inc
out
outsb
mov
jl
loopne
in
push
test
push
adc
pop
sub
xor
lea
je
pusha
cmp
pushf
lea
je
push
lea
jmp
cltd
or
inc
aaa
rcl
or
xor
xor
or
repnz
mov
sbb
leave
in
fwait
jmp
push
xlat
clc
push
sub
push
cmpsb
iret
cmp
pop
adc
and
dec
dec
test
imul
xchg
out
jecxz
add
jmp
inc
jg
out
add
xchg
pop
test
fbstp
out
sub
and
ds
daa
cs
add
push
sub
jmp
jmp
dec
mov
pop
aam
mov
insb
xchg
xchg
mov
shrb
lea
jl
pushf
pushf
inc
pushf
lea
call
call
lea
call
call
pushf
pushl
mov
lea
jne
btr
bts
mov
push
inc
rcl
pushl
sub
adc
lea
clc
pusha
movw
call
outsb
hlt
int
inc
aaa
sti
push
jp
mov
push
mov
pop
in
mov
inc
xchg
ja
xchg
mov
xchg
fbld
scas
add
mov
dec
testl
jae
jl
fstps
inc
fisttps
or
cmp
xor
mov
test
jns
addr16
ret
bound
iret
adc
lcall
add
fcmovbe
cmp
or
mov
dec
fldl
repnz
push
mov
or
cs
inc
lret
or
xor
pop
mov
test
repz
arpl
sahf
jge
rcr
or
mov
lret
mov
mov
mov
inc
ja
pop
out
push
or
lret
pop
xlat
mov
mov
loop
and
mov
ss
dec
add
push
jae
and
lea
add
xor
repnz
lcall
mov
and
mov
mov
mov
pusha
stos
mov
jno
and
lods
mov
dec
mov
push
pop
cmpsl
mov
mov
mov
daa
imul
add
inc
xlat
mov
mov
insb
loopne
pop
lea
mov
popf
imul
in
fmul
jecxz
incl
push
adc
rcrb
mov
out
push
or
jmp
xor
mov
lea
jmp
popa
icebp
mov
push
sbb
in
push
sub
mov
aam
lea
mov
popa
xor
mov
jb
shrl
lea
mov
mov
fdivs
push
js
dec
lea
mov
mov
popa
xchg
pop
or
mov
mov
pusha
jns
and
xchg
test
pusha
aaa
lea
mov
push
add
daa
lea
mov
clc
xor
mov
fldenv
mov
mov
jnp
adc
push
inc
fld
xor
jns
mov
mov
mov
pop
out
push
or
das
mov
ja
lea
sub
imul
sbb
lea
mov
inc
gs
mov
lods
mov
push
dec
fsts
fsub
or
mov
inc
lahf
mov
mov
mov
cmp
cmp
cmp
mov
mov
or
outsb
mov
pop
out
push
or
les
pop
out
push
or
pop
xchg
xor
mov
push
or
fisubl
cmp
mov
dec
or
mov
fimull
jg
mov
mov
ljmp
mov
sti
rolb
jmp
mov
shl
mov
sbb
test
shrd
mov
mov
push
add
push
shld
shr
rcr
mov
sub
movsbw
add
jmp
sub
test
jbe
sub
mov
mov
out
cmp
pop
mov
data16
cwtl
and
lea
push
loope
in
fdivr
and
mov
fsubr
sub
ficoml
cmpsb
xor
adcb
ficompl
mov
insl
pop
dec
loope
das
bound
popf
inc
pop
ss
ffreep
pop
push
xchg
push
sub
pop
mov
ljmp
push
jle
mull
int
add
notb
inc
data16
arpl
jmp
cmpsl
cli
addr16
daa
cli
cmpsb
cli
adc
sarb
pop
sub
call
pop
imul
frstor
sub
pop
pop
pop
push
pusha
popf
test
dec
out
xor
jno
mov
jmp
imull
aas
dec
iret
cli
jno
mov
mov
cmp
mov
test
mov
stc
mov
cltd
jae
mov
push
data16
cmp
pop
stos
ja
mov
mov
mov
in
push
xor
imul
push
mov
data16
insl
out
xor
and
jns,pt
cmp
jge
sub
cmp
ss
mov
lret
mov
and
scas
imul
cmp
mov
jns
ljmp
dec
popf
and
ficoms
cwtl
dec
dec
pop
adc
xor
out
dec
sbb
pop
fistl
xor
dec
pushf
cmovle
pop
aam
outsb
pop
out
cmp
push
sbb
cltd
xor
aad
dec
out
mov
pop
pop
and
mov
dec
xchg
or
mov
push
pop
mov
pusha
out
adc
hlt
xchg
pop
cmp
jbe
or
cwtl
jle
cmp
mov
sub
mov
cmp
stc
and
dec
adc
ss
add
xor
push
inc
je
or
xor
sub
bound
popa
cmp
das
xor
push
cmp
pop
dec
sub
hlt
and
inc
es
stos
jecxz
pop
lock
gs
cmp
sahf
and
xchg
insl
push
rorl
scas
and
gs
lods
xlat
pusha
mov
gs
in
imul
xchg
pusha
cmp
cld
imul
push
int
inc
ljmp
add
sub
dec
gs
add
inc
gs
pop
inc
ret
pop
lock
inc
or
bound
pop
shrl
hlt
outsl
loope
sub
add
sbb
bound
dec
lods
arpl
lcall
shll
mov
fldt
inc
imul
cmp
cmp
stos
stc
push
mov
dec
adc
mov
pop
sub
xlat
mov
sub
lods
add
insb
xchg
push
inc
stos
lcall
icebp
push
in
out
pushf
push
sti
or
test
lret
fwait
pop
mov
pusha
in
mov
dec
jp
push
lock
ljmp
gs
dec
scas
aam
stos
inc
imul
pop
inc
stos
rclb
test
das
lahf
pusha
fldenv
in
add
jne
adc
in
jl
sbb
das
jmp
js
aad
pop
and
stos
aam
pop
out
cmpsb
pusha
lds
stos
mov
jae
or
push
xlat
push
hlt
push
insb
scas
sub
clc
pusha
imul
inc
mov
push
scas
xlat
sbbb
insb
sbb
xor
inc
mov
lahf
lds
cmp
mov
pop
repz
subb
add
fcmovnu
xor
scas
xchg
es
pop
jp
cmp
imulb
call
sub
iret
push
mov
pop
sub
icebp
das
mov
inc
xchg
out
inc
xchg
jg
mov
cvtpi2ps
and
movsb
dec
cmp
xchg
mov
and
push
test
mov
push
stos
aam
mov
scas
cmp
aad
das
stos
adc
push
push
jb
push
stos
repnz
in
jnp
mov
hlt
mov
les
adc
call
xchg
es
dec
pop
inc
loope
and
jmp
push
push
enter
jmp
and
xor
popf
xor
mov
dec
dec
sub
out
dec
jno
js
xchg
mov
daa
adc
out
sbbl
and
fst
push
push
push
imul
push
push
lret
inc
or
bound
cs
insb
and
mov
pop
cmp
xchg
inc
mov
mov
leave
jbe
out
daa
mov
add
push
xchg
data16
mov
adc
sbb
pop
dec
push
jmp
jmp
or
out
jmp
mov
pop
pusha
pop
out
imul
ss
pop
out
fbstp
or
imul
sub
sub
sub
jmp
pop
jmp
cli
popf
jnp
xchg
push
dec
mov
mov
push
jne
es
jno
mov
and
dec
mov
data16
adc
lret
dec
inc
ljmp
inc
scas
inc
fsubrp
scas
jbe
jg
push
scas
lock
mov
in
jg
push
ja
push
dec
adc
gs
and
sbb
push
jg
int
orb
pop
int3
mov
or
ss
stos
lods
imul
in
push
push
pop
or
sub
cmp
xor
gs
mov
in
sahf
dec
mov
push
push
aaa
and
sub
xlat
cs
ds
or
mov
pop
sbb
push
dec
sti
repnz
push
pop
dec
xchg
push
sahf
adc
cwtl
or
dec
int
push
std
adc
lea
int
cwtl
xor
pop
dec
jmp
cld
add
loope
std
cmp
lahf
xor
jl
mov
js
pop
add
mov
xor
inc
data16
mov
jns
cli
scas
fsubs
pusha
mov
in
fsubr
jmp
cmp
jnp
outsl
add
mov
out
xchg
cmp
dec
mov
negb
ja
mov
dec
fidivl
add
sbb
aas
pop
lods
and
cmp
out
jl
scas
xorb
sti
jbe
ret
mov
xchg
jmp
push
push
imul
adcb
out
mov
cmp
inc
fstl
push
jb
jnp
loop
jbe
idivl
in
mov
mov
inc
addr16
insb
aas
pop
push
push
inc
pop
mov
jbe
mov
cmp
inc
pop
leave
pop
jecxz,pt
add
adc
clc
xor
jbe
mov
mov
fs
jno
test
dec
xor
push
lahf
js
cld
and
jp
ds
movsl
call
repz
fbstp
pop
xor
iret
push
loopne
inc
cwtl
dec
inc
pop
inc
enter
jmp
dec
dec
sub
mov
jno
push
jge
mov
push
and
pusha
js
gs
adc
jmp
les
int
adc
ror
hlt
or
fidivrs
sub
sub
mov
mov
and
and
add
push
clc
pop
xor
dec
das
into
lods
xchg
das
cmpxchg
outsb
mov
arpl
dec
push
adc
fimull
cmp
fwait
push
pop
dec
push
call
dec
add
push
fldcw
jle
xchg
push
push
sbb
imul
lods
xchg
push
pop
adc
pop
inc
dec
cmc
test
fxam
es
pop
out
mov
fidivl
mov
lods
nop
repnz
gs
jbe
push
mov
cs
lods
sub
mov
cmpb
dec
mov
xor
outsl
gs
ljmp
jno
sti
rcrb
adc
push
shr
push
push
cmp
clc
ss
inc
fcompl
ljmp
loope
xor
mov
mov
mov
mov
out
and
mov
mov
pop
push
dec
in
pop
cmp
aam
jl
push
in
arpl
mov
test
mov
ffreep
bound
and
test
ss
jbe
cmpl
dec
stos
mov
ss
cmp
mov
inc
mov
into
int
adc
xchg
call
aad
xlat
dec
dec
sbb
sbb
sbb
arpl
popa
lretw
arpl
jne
jl
adc
sbb
sub
inc
push
mov
icebp
repnz
sub
mov
pop
loopne
inc
popa
mov
in
and
arpl
mov
je
jnp
inc
ret
sub
pop
sub
jle
adc
jp
inc
outsl
clc
out
push
arpl
sbb
sub
das
fldenvs
pop
cmp
lods
test
push
dec
or
inc
xor
mulb
lcall
push
or
jecxz
data16
fucom
mov
out
mov
jecxz
xor
sbb
and
mov
jno
daa
mov
dec
shrl
adc
ljmp
jmp
add
dec
bound
push
push
bound
pop
movsl
ss
imul
callw
mov
fsts
xchg
popf
xor
enter
int
imul
add
dec
pop
gs
stos
setb
repnz
pop
and
jmp
aaa
pop
aam
movsl
adc
test
sub
arpl
and
add
pop
sub
mov
inc
dec
push
popa
sub
mov
sbbl
repnz
push
xor
pop
dec
sub
gs
loop
dec
mov
xor
or
out
jl
cmp
call
sbb
inc
sub
test
iret
das
cmp
pop
data16
xor
inc
jmp
in
pop
jl
rolb
push
inc
cli
adc
fcoms
popa
xor
aas
and
sbb
frstor
ds
inc
or
xchg
in
jmp
dec
popa
jae
into
mull
pop
xor
mov
cld
sbb
push
imul
cmp
dec
daa
mov
adc
sbb
aam
popa
xchg
das
push
push
xor
loop
fcmovb
bound
xlat
mov
sbb
negb
aas
push
inc
bound
int
out
push
xlat
fisubl
dec
call
push
dec
add
push
imul
mov
popa
imul
dec
inc
dec
loope
fidivs
push
lds
imul
adcl
dec
inc
or
inc
mov
punpcklbw
std
push
iret
push
cmp
cmpsb
inc
call
mov
mov
mov
into
fmuls
cs
andl
addr16
pop
data16
sahf
cmp
es
xor
cmp
or
xchg
push
ljmp
jmp
loope
pop
enter
in
popa
dec
pop
imul
and
fmull
inc
push
lahf
out
dec
mov
jl
addr16
mov
cmp
leave
jne
loope
cmp
xor
enter
pop
xor
popa
xor
sub
xor
test
aaa
in
popa
cmp
push
cmp
out
cmp
popa
cmp
daa
push
cmp
cmpsb
or
movsb
inc
push
inc
loope
pop
inc
in
inc
in
popa
inc
pop
gs
inc
loope
pop
inc
in
inc
in
popa
inc
pop
fs
dec
loope
pop
dec
jecxz
dec
in
popa
dec
pop
arpl
dec
loope
pop
dec
loop
dec
in
popa
dec
pop
bound
push
loope
pop
push
loope
push
in
popa
push
pop
popa
push
push
loope
pop
push
loopne
pop
in
popa
pop
pop
pusha
push
pop
loope
sbb
pop
pop
lahf
push
pop
loope
lock
popa
pusha
pop
fiadds
popa
loope
pop
bound
arpl
push
popa
fs
fldl
gs
jmp
pop
popa
addr16
sbb
pop
imul
sub
nop
push
adc
dec
cvtpi2ps
dec
push
int
dec
or
or
push
sub
addr16
cmpsb
daa
cmpsl
in
out
sub
and
bound
in
adc
mov
popl
pushf
jae
lea
fwait
and
lahf
sub
mov
jecxz
arpl
fstp
ljmp
pop
aaa
popf
pop
fwait
sahf
and
sub
nop
iret
dec
shrl
int
lret
adc
jecxz
arpl
loop
bound
sbb
mov
jmp
fs
jnp
arpl
test
push
aad
in
mov
jmp
arpl
call
add
arpl
test
dec
push
push
in
aas
out
jmp
cmpsb
and
dec
mov
and
mov
icebp
pop
jmp
and
xor
cmpsb
dec
add
enterw
lock
arpl
inc
mov
dec
push
movsl
add
mov
and
jmp
dec
out
movsb
shlb
sub
jecxz
and
pop
fs
add
gs
or
mov
xchg
mov
and
dec
pop
inc
jmp
mov
fsub
popa
out
jmp
pusha
int
and
popa
dec
push
jmp
push
lret
imul
cmp
add
inc
pusha
insl
and
pop
xchg
cli
sbb
inc
push
jmp
lahf
dec
pop
test
mov
pop
pop
jns
cltd
sub
sahf
and
cmp
pop
mov
jmp
push
dec
call
xchg
fs
jmp
add
sbbl
mov
pusha
dec
pushf
dec
int
add
and
jmp
push
jmp
sbb
jmp
pop
jmp
fiaddl
lcall
sbb
call
inc
jmp
mov
test
xchg
mov
pop
sbb
push
bound
cmpsl
or
dec
push
addr16
cwtl
test
jmp
jmp
jmp
fsubs
jecxz
jmp
arpl
xchg
dec
xlat
push
dec
dec
call
es
sub
mov
cmp
adc
jmp
popa
push
mov
jmp
push
xchg
out
fucomp
cltd
sbb
mov
push
dec
sub
out
adc
aam
es
sub
pusha
jmp
bound
jmp
loop
xchg
push
and
jmp
dec
push
addr16
sbb
mov
jmp
into
xchg
data16
push
inc
addr16
pop
adc
lahf
jmp
loop
rorl
addr16
or
push
jmp
jmp
cmpsb
adc
and
rolb
pop
jmp
jno
pushf
imul
subl
out
pop
jmp
push
in
and
jmp
lahf
sub
push
and
orb
jmp
dec
mov
in
push
xlat
jmp
mov
movsb
fs
sub
out
pushf
pop
mov
dec
aas
jecxz
fucomip
cmp
or
push
jmp
data16
and
in
leave
insb
mov
call
fs
dec
inc
push
fsubs
add
jmp
pusha
add
and
pop
inc
pop
mov
popa
fcmovu
pop
or
push
jmp
inc
jmp
xchg
inc
add
mov
fs
adc
mov
dec
sub
jbe
inc
addr16
addr16
jmp
test
and
fcoml
and
sbb
add
jmp
xchg
les
mov
pushf
push
arpl
add
pop
jmp
or
out
ret
dec
daa
sbb
dec
call
and
lods
mov
jecxz
jmp
test
call
out
dec
push
jmp
jmp
es
cmp
jmp
bound
add
addb
sub
and
lahf
jmp
or
cmpsb
lcall
call
and
jmp
add
out
mov
ds
movsb
icebp
mov
arpl
sub
sarb
bound
lret
and
fdivl
and
jmp
std
dec
mov
lcall
pusha
es
push
pushf
cmp
subb
inc
pop
in
sbb
fsubs
cmp
and
or
in
fs
jnp
cmp
es
in
pushf
inc
fsubrl
xchg
dec
and
push
lahf
cmp
call
jmp
jmp
cmpsb
out
mov
jmp
jns
addr16
cmp
stc
lret
data16
arpl
adc
and
lea
cwtl
sbb
leave
ja
aaa
cmp
push
popf
jmp
pop
and
xchg
fildll
out
ss
enter
xchg
lahf
jmp
out
lret
xor
test
jmp
or
mov
add
je
cmp
pop
xor
lahf
jmp
dec
imul
arpl
pop
mov
xchg
fdivrl
pusha
rcrb
pop
and
ljmp
and
lret
daa
jecxz
push
frstor
mov
lcall
and
mulb
jmp
pushf
jb
iret
jmp
xor
and
jecxz
and
cmp
data16
and
jmp
xchg
addr16
fsubr
mov
jo
xor
push
mov
cld
pusha
outsl
scas
loop
and
mov
dec
ss
dec
aam
in
outsb
data16
pushf
and
fs
sub
or
pop
fcomp
fucomp
pop
sbb
lods
imul
insl
dec
aad
gs
pusha
jmp
and
add
hlt
frstor
dec
mov
and
insb
dec
adc
in
mov
push
adc
fs
jmp
arpl
add
lods
and
jmp
pop
add
adc
mov
frstor
and
cltd
pushf
mov
sub
daa
fucomp
fcmovne
aam
jmp
loope
and
jecxz
xor
aaa
daa
fs
xor
or
or
inc
aad
jmp
pop
pop
loope
sub
call
repnz
inc
test
push
out
out
popf
cmpsl
stos
push
and
push
ss
jnp
and
cmpsb
or
data16
daa
sub
jmp
sahf
pusha
jmp
sub
jmp
or
and
loopne
cmp
aam
pushf
in
push
imul
jmp
and
fstl
jmp
jcxz
or
pushf
jmp
arpl
loop
push
faddl
jmp
xlat
jmp
jmp
and
jmp
loope
pusha
cmpsl
or
or
and
pushf
fistps
and
cmp
jmp
in
pop
mov
cwtl
daa
jmp
and
fsubs
test
jecxz
fs
arpl
lahf
bound
pop
pop
jne
sub
mov
arpl
ljmp
push
push
mov
jmp
mov
and
in
fs
arpl
popf
inc
mov
cmp
fsubl
sbb
sub
mov
dec
aad
jmp
sbb
add
xchg
jmp
jmp
aad
lods
pop
sbb
test
daa
fimull
out
pop
jmp
jmp
mov
sbb
inc
xor
cltd
data16
jmp
and
jmp
popa
jg
push
fbld
sbb
mov
jmp
movsb
ljmp
sub
das
sub
arpl
sub
sbb
rcrl
xor
daa
pop
pop
addr16
dec
pop
and
sbb
dec
push
fsubl
xchg
jne
test
jecxz
pop
ja
jle
fs
sub
or
cmp
pop
inc
pushf
bound
mov
pushf
pop
mov
push
dec
scas
sub
popf
sub
push
dec
fcompl
or
mov
dec
pop
or
pushf
mov
pop
ja
mov
cs
dec
aas
lods
inc
aas
lock
mov
enter
adcb
jecxz
pop
pop
sub
cmpsl
out
call
cmpsl
cltd
rcr
push
xchg
or
in
pop
fistl
cmpsl
movsb
sbb
mov
daa
pusha
cmpsb
insl
test
xor
cs
movsl
add
pop
sub
movsl
out
jmp
pushf
pop
inc
push
fimuls
jecxz
icebp
fnsave
fcompl
bound
xor
jecxz
pusha
addr16
sub
pop
pop
cs
fs
aam
dec
rcll
inc
imul
aas
cmpsl
fildll
dec
and
bound
or
pusha
gs
leave
popf
call
dec
jecxz
jecxz
out
pusha
pushf
dec
pop
aas
fsubs
cmp
popa
xor
or
pop
test
adc
xor
es
pushf
fists
dec
std
pop
sub
aas
call
and
fisubs
dec
arpl
fmuls
sub
loope
flds
xlat
rcll
dec
mov
xor
out
push
into
inc
dec
xor
test
call
popa
jmp
out
push
mov
fwait
jcxz
loopne
call
mov
dec
pop
divb
shll
in
sbb
pushf
ljmp
ffree
shll
dec
scas
int3
sbb
xor
push
cmp
jmp
cmpsl
mov
out
call
arpl
and
mov
push
gs
mov
add
fisubrs
mov
inc
push
mov
lret
fmul
dec
xchg
push
or
int
cs
fisubrl
push
in
mov
sub
push
ljmp
shr
call
or
gs
inc
push
into
lods
cltd
pop
mov
adc
rcrl
pop
in
and
jmp
xchg
enter
cmpsl
mov
adc
pop
call
and
inc
push
rclb
pop
push
in
loopne
pop
and
mov
xor
pop
inc
adc
mov
cmp
sub
pushw
movsl
xlat
push
push
sub
popa
ret
inc
lret
leave
inc
rcr
jmp
inc
xor
in
pop
mov
pop
out
xor
out
xor
adc
in
dec
push
sarl
pushf
stc
shll
xor
addr16
pop
lahf
push
sbb
sub
call
ss
inc
push
and
push
adc
xchg
dec
mov
rorl
xor
jmp
test
addr16
imul
push
nop
inc
mov
mov
dec
xor
shl
cmp
fcoml
xor
inc
mov
gs
rcr
adc
inc
adc
ds
popf
mov
rcll
mov
lss
lods
imul
loop
pop
inc
push
lds
shll
scas
sub
bound
ret
test
aaa
cmp
and
pop
gs
stos
push
mov
sub
push
pop
test
xor
inc
jmp
and
in
pop
inc
enter
push
aaa
pop
aad
inc
daa
fs
jne
push
inc
dec
repnz
in
pop
push
dec
or
arpl
xor
sub
adc
imul
xor
ss
or
lahf
movsl
jecxz
ficomps
pop
mov
inc
addr16
out
push
inc
fldenv
xlat
pop
xchg
cmp
int
inc
mov
mov
mov
mov
jmp
mov
and
aam
jmp
into
movsl
fnstsw
lods
jb
mov
jl
mov
icebp
out
xor
push
or
push
push
cmp
inc
mov
inc
arpl
and
fimuls
cmp
lds
popf
or
pusha
out
and
bound
adc
ds
xor
aas
cmp
or
loopne
fisubs
dec
xchg
push
adc
cmp
andb
xor
int3
mov
and
iret
sbb
popa
call
fisttps
sbb
sbb
or
dec
sbb
pop
dec
or
lret
ds
cmpsb
add
pusha
daa
fisubs
dec
pop
pop
fcoml
mov
sub
dec
pusha
inc
inc
loopne
pusha
cmp
jmp
inc
inc
add
loope
or
sub
inc
in
popf
cmpsb
xlat
lret
je
inc
mov
push
gs
in
push
sub
mov
out
and
cwtl
mov
mov
inc
pop
imul
push
and
insl
inc
cmp
mov
leave
dec
xchg
les
cmp
ljmp
addr16
call
add
iret
push
push
or
fldz
pop
shll
xorl
inc
enter
enter
movsb
enter
mov
and
movsl
loop
fbld
mov
ss
inc
cmp
enter
arpl
mov
rcrb
push
mov
jecxz
inc
cmp
or
aas
or
movsl
dec
or
dec
movsb
mov
jmp
or
mov
pop
mov
shll
push
dec
out
ret
push
popf
dec
jecxz
bound
dec
inc
test
cmp
sub
dec
out
aad
lret
jae
das
in
xor
out
fcomp
out
aam
std
xor
sub
pusha
sub
shrl
mov
ss
push
pop
rcr
sub
shrl
mov
dec
rcrb
push
test
out
int3
sub
sbbl
shll
sub
inc
out
cmp
or
jmp
popf
inc
push
ret
loope
fsubl
dec
adc
or
adc
rcr
inc
inc
push
movsl
inc
sbb
pop
jecxz
mov
inc
mov
mov
inc
or
sbb
aas
push
mov
inc
and
rcll
pop
sub
mov
and
push
pop
and
bound
cmp
iret
aas
aas
cmp
mov
dec
dec
cmp
call
les
dec
push
stos
arpl
dec
test
cmp
jecxz
pop
dec
fsubl
movsl
addr16
or
pop
bound
and
inc
dec
movsl
and
pop
xchg
jb
mov
xchg
pop
movsl
shlb
or
movsl
pop
in
gs
sub
fisttps
push
insl
ficoms
sahf
ret
inc
xor
int3
adc
out
int3
imul
jecxz
scas
ret
xchg
xchg
call
pop
fildll
add
pusha
cltd
stos
push
pop
roll
or
call
mov
push
add
cmp
sub
jge
loope
dec
cmp
adc
xor
scas
out
out
ficoms
pop
scas
call
push
leave
and
inc
cmp
push
inc
dec
aaa
pop
and
adc
adc
or
scas
out
push
pushl
adc
cmp
sbb
cmpsl
inc
cmpsl
pop
aad
or
jmp
adc
xchg
loop
loopne
pop
cmp
jns
popf
shl
fnstcw
cmpsl
dec
sub
scas
call
mov
loopne
popa
and
popf
arpl
xchg
inc
popa
gs
mov
dec
pop
ror
testb
xor
daa
cmp
mov
pop
ret
test
xlat
aaa
test
in
addr16
xor
dec
pop
inc
push
sbb
gs
shr
and
dec
in
add
inc
or
enter
mov
mov
movsl
push
inc
imul
ds
out
mov
push
mov
push
repz
loope
and
pop
test
ljmp
stos
jns
mov
enter
jne
test
imul
dec
lret
clc
pusha
orl
pop
sub
inc
cmp
inc
pop
gs
loopne
cmp
inc
adc
inc
push
mov
add
xor
addr16
test
and
ret
dec
popa
fucom
aam
inc
ret
ss
scas
mov
aas
inc
xor
and
dec
movsl
sar
inc
fistpl
sbb
and
dec
in
inc
cmp
movl
cmp
cmp
fdivl
and
aas
movsl
add
imul
jmp
jecxz
mov
or
pop
inc
icebp
mov
sub
loope
popf
inc
cmp
test
lods
and
mov
pop
into
push
or
movsb
push
aaa
push
inc
push
imul
rcll
pop
and
dec
or
push
roll
mov
inc
shlb
movsb
mov
addr16
sub
or
inc
pop
mov
fnstcw
movsl
push
cmp
add
add
mov
popf
pop
cltd
dec
push
popa
ror
push
test
rcrb
imul
rclb
popa
inc
mov
cs
and
add
sub
ds
es
mov
cmp
pop
and
aaa
xchg
sbb
cmpsb
push
jb
mov
push
mov
sub
jg
in
jp
int
rcll
pop
inc
jecxz
fistps
mov
mov
loopne
mov
ds
shlb
xor
dec
ljmp
or
pusha
ljmp
mov
int3
clc
arpl
and
ds
and
dec
movsl
fldl
pusha
loopne
sbb
push
loope
ss
gs
dec
in
sub
fs
fldl
aas
adc
sbb
dec
leave
sbb
scas
mov
inc
xchg
ss
and
pusha
sbb
aad
inc
push
mov
pop
sub
jecxz
and
mov
and
dec
out
int3
lcall
mov
mov
scas
push
cmp
xchg
call
mov
mov
inc
dec
popf
pop
pop
dec
dec
repz
inc
scas
inc
mov
data16
sub
fs
jle
leave
lds
enter
push
fstl
loope
xor
gs
push
sub
push
or
in
loopne
loop
movsl
mov
sub
mov
cmp
repz
daa
sahf
push
das
pusha
add
push
std
call
xchg
rcll
ds
pop
into
dec
push
js
cmp
ljmp
sbb
mov
call
sub
ret
pop
mov
dec
mov
jp
int
pop
push
int
in
push
enter
stc
pop
jge
cmc
pop
movsl
ret
pop
fsts
sub
bound
inc
lret
push
shll
sub
jp
fisubl
xchg
movsl
movsl
fsub
mov
sub
std
cmpsl
out
push
mov
cmpsl
mov
pop
js
pop
test
pop
push
fdivrs
jecxz
lods
pop
push
mov
cld
cmp
mov
pop
popa
push
aad
push
pop
cmp
int
and
sub
mov
pop
cmp
fistpll
xor
inc
sub
ja
call
aad
xchg
mov
fbld
pop
mov
inc
gs
cmpsb
loopne
popa
daa
sub
imul
jecxz,pn
ret
sub
jecxz
push
shlb
in
dec
mov
arpl
dec
popf
and
mov
mov
cmpsl
ret
pop
sub
mov
int
fnstsw
ss
leave
call
pop
dec
movsl
inc
aas
pop
dec
inc
xor
lret
inc
fdivp
addr16
mov
pop
mov
mov
cmp
imul
jecxz
push
in
fnstcw
jp
ss
inc
icebp
dec
dec
gs
out
push
jmp
sarl
mov
xlat
sbb
data16
sbb
fldcw
dec
stos
add
loopne
leave
adc
and
mov
or
daa
aad
in
movsb
inc
daa
les
sbb
dec
mov
enter
in
test
push
inc
aaa
sbb
pop
and
rorl
sub
mov
push
cmp
imul
dec
das
mov
jmp
xor
enter
fs
sub
and
enter
cmp
arpl
inc
pop
gs
stc
ja
out
cmp
vpaddq
movsl
sub
pop
sub
jg
jmp
shlb
cmp
inc
and
arpl
inc
in
mov
in
in
daa
adc
inc
shrb
pop
imul
scas
in
loopne
dec
and
dec
sub
int3
bound
mov
sub
and
in
fists
inc
mov
iret
enter
inc
addr16
push
bound
mov
imul
iret
sbb
or
pop
pop
loop
dec
fsubs
inc
fdivs
rcpps
push
xchg
data16
in
pusha
inc
dec
jb
fstl
cmpsb
aam
add
sub
fisubl
fs
pop
pop
in
inc
movsb
out
addr16
inc
sbb
mov
stos
les
mov
jne
test
pusha
pop
loope
pop
clc
or
sub
sub
in
cmpsl
fs
aaa
outsl
xlat
popa
sub
pop
fsts
push
and
mov
push
out
in
in
leave
push
cmp
adc
cmp
cmp
clc
pop
test
leave
cmpsl
les
mov
pop
dec
sub
aas
aad
push
and
shrl
lahf
ret
push
push
mov
pushf
and
xchg
test
sub
pusha
cwtl
xor
dec
mov
push
mull
fnstsw
add
dec
sbb
in
lods
bound
mov
fisubs
sub
inc
jecxz
push
jbe
ss
notb
pop
bound
ficompl
cs
shr
pop
and
mov
xor
mov
lds
xor
push
cmp
sub
stc
loop
xor
imul
mov
dec
popa
movsb
pop
arpl
leave
fs
xor
xor
shrb
dec
sahf
sub
add
inc
and
or
aaa
ficoms
mov
pusha
fsubp
out
add
addr16
dec
ret
dec
shlb
daa
in
push
aas
cmp
mov
or
pusha
shrb
dec
ds
push
cmp
and
push
and
and
mov
popa
in
fcomps
sub
push
and
mov
lods
aas
bound
addr16
aaa
mov
xor
inc
xor
push
and
mov
bound
xor
addb
and
call
mov
mov
iret
ds
add
inc
xor
lahf
pop
aad
push
inc
sbb
sbb
cmpsl
mov
popa
dec
rclb
je
das
cmpsl
push
cmp
inc
xchg
scas
jns
daa
in
scas
xor
jecxz
mov
adc
push
arpl
xlat
in
movsl
daa
enter
rclb
shl
daa
pusha
inc
test
inc
rorb
xor
leave
fistps
ds
movsl
in
xchg
cmp
mov
arpl
ss
pop
jp
adc
inc
jecxz
cmp
sub
int3
and
and
std
push
out
out
inc
dec
inc
inc
xor
jp
and
pusha
inc
enter
dec
data16
cmp
ja
pusha
and
xor
loope
in
ss
and
std
cmp
mov
lods
sub
mov
lods
ds
hlt
cmp
sbb
int
cmp
dec
or
xor
add
pop
test
addr16
jle
shlb
sbb
gs
mov
int3
mov
cmp
inc
cmp
clc
dec
lahf
scas
out
mov
pop
aas
aam
inc
push
sub
sahf
mov
sub
das
clc
and
ror
inc
xchg
shl
mov
out
aaa
adc
ret
dec
movsl
sbb
pop
jae
pop
cmp
jo
icebp
pusha
or
inc
cmp
ss
fnsave
es
test
xor
lods
adc
cmp
push
push
push
ret
out
ss
pop
popa
mov
sarl
movsb
mov
cmp
movsl
sub
addr16
scas
adc
add
popa
ret
xchg
cmp
dec
pusha
ffreep
xlat
gs
cmpsb
out
xchg
xor
mov
out
movsb
inc
inc
dec
sbb
xchg
dec
movsl
les
flds
pop
cmp
dec
dec
pop
cmp
push
mov
lret
frstor
xchg
rcrl
test
xor
mov
inc
sub
movsl
mov
inc
jecxz
fmull
mov
pop
sahf
mov
cli
rcrl
push
sbb
cmp
mov
les
adc
cs
pop
fnsave
enter
mov
das
dec
dec
in
aad
repnz
inc
inc
popa
mov
ss
pop
popf
pop
fnstsw
push
lods
pop
iret
bound
cmp
lahf
movsl
mov
pop
sub
cmp
mov
cmp
cmpsl
dec
es
js
push
dec
push
push
arpl
pop
mov
fucomp
dec
inc
fisubrs
inc
test
pop
xor
pop
scas
aas
cmpsl
mov
cmpsl
push
push
xlat
and
dec
mov
jmp
stos
push
into
jae
push
daa
xor
call
sub
mov
xchg
loope
push
and
call
rcrb
push
pop
pushf
shr
dec
sbb
mov
das
push
pusha
fsubr
in
repnz
sbb
in
jmp
popa
les
dec
lods
call
dec
cs
into
mov
daa
xor
sub
jne
push
push
call
in
add
mov
or
movsl
stc
adc
mov
push
mov
sub
add
mov
call
sbb
movsl
jmp
mov
sbb
and
pushf
movsb
pop
gs
repnz
daa
push
adc
sbb
inc
addr16
jns
push
and
dec
push
mov
fsubrl
adc
and
mov
pushf
imul
repnz
movsb
push
jmp
and
cmpsb
sbb
out
fs
mov
addr16
sub
daa
and
rclb
xor
andl
pop
inc
jne
in
aas
fstpl
fsubs
sub
mov
in
stos
dec
daa
sub
dec
dec
les
inc
fbld
pop
daa
jmp
repnz
inc
pop
addr16
fsubs
popfw
and
and
es
push
xchg
dec
pop
movsl
call
and
ljmp
jg
shll
call
in
inc
aas
and
pop
call
pop
push
je
out
push
popa
loope
daa
mov
movsb
mov
cmp
arpl
call
das
fs
je
ss
stos
inc
dec
cmpsl
idivl
daa
repnz
jle
push
daa
lret
bound
es
les
in
xchg
fidivrs
pushf
mov
and
es
inc
imul
daa
jecxz
movsb
int3
addr16
call
adc
mov
andb
mov
call
pop
fsts
loope
in
and
ds
jne
cmp
call
call
popf
daa
mov
mov
xchg
sbb
sub
in
sbb
mov
cmp
shr
int
call
mov
out
int3
bound
packuswb
and
dec
call
loope
jb
faddl
inc
xor
jcxz
es
dec
mov
sbb
xchg
xchg
roll
test
loope
pushf
mov
inc
and
add
pop
addr16
xlat
sub
in
lds
call
xchg
push
cs
jmp
xchg
aas
cmp
imul
daa
data16
mov
dec
daa
dec
jb,pt
and
adc
addr16
xor
aad
fbld
call
gs
movsb
jle
rcr
dec
fisttps
addr16
test
andb
mov
jecxz
fstpt
inc
fsub
les
cld
cmp
stos
pusha
repz
ljmpw
call
pop
fiadds
test
fsub
call
fldenv
and
call
push
fs
mov
out
mov
or
out
fs
test
dec
mov
loop
call
int
jp
inc
and
mov
jmp
fcoml
inc
push
sub
mov
mov
pop
ljmp
pop
call
lods
jecxz
xor
fsubl
inc
movsl
mov
mov
cmp
sub
push
out
push
das
and
call
xor
gs
inc
and
mov
push
addr16
cmp
shlb
mov
sbb
lods
sbb
call
jne
sbb
inc
call
pop
pop
daa
pusha
dec
addl
and
mov
dec
xor
ss
cld
push
sbb
mov
call
pushf
push
les
fsts
and
call
stos
pop
rclb
dec
movsb
fs
mov
addr16
push
shr
xchg
cmp
xor
mov
int
pop
mov
sub
lahf
inc
les
in
xor
and
ja
pop
push
sub
or
cmp
ret
popa
pop
jecxz
ret
out
xor
in
in
inc
daa
cmpsl
loop
pop
out
dec
arpl
push
sbb
fldl
adc
fwait
out
das
out
rolb
pushf
aas
dec
add
and
and
sahf
push
mov
cmpsb
add
aaa
packuswb
fnstsw
push
sbb
inc
pop
iret
pop
gs
das
out
dec
xlat
and
sub
and
lret
imul
dec
aam
out
test
add
pusha
dec
scas
push
push
fimull
lret
xchg
mov
ret
pusha
aaa
or
scas
fcmovnbe
dec
data16
pusha
test
mov
bound
shr
pop
mov
sbb
gs
ljmp
scas
les
gs
call
xlat
and
ret
sub
dec
sub
lahf
xlat
mov
test
adc
vpsubw
xchg
xlat
hlt
leave
push
mov
inc
fisttpll
and
dec
movsl
dec
testl
pusha
loopne
and
pushf
push
inc
pop
dec
xor
divl
dec
fstl
adc
shrl
push
movsb
in
jg
mov
addr16
fsub
sbb
jmp
mov
mov
push
pop
clc
push
inc
int3
xor
add
icebp
push
in
mov
mov
enter
lret
aam
fnstcw
dec
sub
gs
loope
inc
rcrl
or
pusha
push
push
fidivrs
loop
mov
sbb
loopne
stc
dec
subl
adc
sbb
int3
sub
adc
and
movsl
into
dec
or
mov
pop
into
subl
push
mov
cmp
int3
shrl
and
xor
or
cmp
and
push
popf
mov
push
or
lea
push
lret
loope
pop
dec
push
or
in
popa
push
adc
dec
sub
popa
dec
pop
push
push
shl
mulps
or
lret
addr16
add
push
dec
jle
neg
test
incb
mov
cwtl
cmp
sbb
cmp
bound
icebp
cli
lcall
adc
dec
jnp
mov
pusha
pusha
xchg
push
lcall
lock
inc
data16
xlat
shrl
addr16
data16
mov
jle
out
pop
xchg
push
lret
gs
push
fdiv
cmp
cmp
jle
popa
fsubs
push
push
cmp
stos
sahf
and
fs
out
sub
aam
jns
pop
sbb
pop
daa
jb
and
jae
sbb
notb
mov
icebp
sub
xchg
mov
dec
scas
xor
cmp
mov
cmp
cmp
cmp
ds
inc
inc
or
popa
dec
pop
dec
push
dec
loope
pop
push
push
or
popa
pop
pop
pop
push
pop
loope
pop
pusha
bound
movsb
xor
push
or
das
push
xor
xor
xor
xor
xor
push
cmp
cmp
ds
or
inc
popa
inc
pop
dec
push
dec
loope
pop
push
push
or
pop
popa
pop
pop
pusha
push
arpl
or
sub
mov
xor
loope
pop
inc
dec
or
push
popa
push
pop
pop
push
pop
loope
sbb
popa
addr16
inc
push
flds
cltd
loope
pop
sbb
or
pop
xlat
push
xchg
loope
pop
pop
or
pop
aad
xchg
loope
pop
adc
push
popa
adc
rcrl
push
nop
mov
or
mov
mov
adc
push
popa
int
lea
dec
loope
pop
int3
mov
dec
in
popa
lret
adc
imul
xchg
loope
movsb
cmp
adc
out
movsb
cmp
dec
xchg
xchg
loope
movsb
cmp
pop
popa
sub
pop
rcrl
xor
sbb
jns
cltd
dec
int
lahf
xchg
push
pop
adc
int3
arpl
push
fstpl
pop
pop
dec
sbb
es
lods
pushf
ficompl
pop
mov
dec
push
loop
repnz
jl
cmpb
jle
and
subb
or
cmpb
dec
addb
push
xchg
addr16
xor
sbb
push
push
fdivrl
sbb
sbb
and
nop
leave
xchg
push
pop
mov
mov
pop
mov
pusha
aaa
rol
push
push
xchg
cmp
xor
arpl
cwtl
push
mov
xor
int
sbb
arpl
cwtl
sbb
fdivs
sbb
pop
fwait
das
int
sbb
sub
dec
add
pop
inc
xor
adc
xlat
push
cwtl
or
pop
jb
daa
loope
fadds
ss
daa
fsts
mov
xlat
fcoms
into
mov
popf
in
movsb
pop
test
push
or
mull
loopne
scas
pop
add
loopne
das
mov
insl
loopne
cmp
outsl
fimuls
hlt
inc
arpl
arpl
xor
mov
cmpsb
int3
adc
mov
pop
dec
pop
jmp
out
cmpsb
inc
sub
imul
sub
cs
popa
inc
push
sahf
fisttps
pop
cwtl
rcll
cltd
jns
pop
ss
mov
xor
clc
mov
js
adcb
push
dec
sbb
data16
push
dec
loope
pop
push
sub
push
in
popa
pop
pop
stos
push
pop
loope
pop
bound
push
pop
lods
loope
pop
in
aaa
or
pop
inc
push
lods
loope
pop
out
dec
or
in
popa
outsb
pop
push
push
scas
data16
das
or
in
popa
ds
scas
push
inc
loope
pop
push
xor
push
fldt
pop
xor
icebp
loope
pop
xor
jno
aas
popa
mov
inc
push
repnz
pop
xor
jb
pop
popa
mov
gs
repz
xor
jae
aas
in
popa
inc
pop
hlt
push
dec
loope
pop
dec
je
push
in
popa
pusha
pop
cmc
push
loopew
bound
pop
pop
jne
or
pop
cmp
ss
pop
jbe
or
pop
dec
push
aaa
loope
pop
ja
or
pop
sub
push
js
ss
popa
inc
pop
cmp
inc
loope
loopne
rcrl
es
push
and
fisttpll
cmp
pop
jp
push
loope
pop
pop
sti
or
cmp
pop
jnp
imul
pop
cld
xor
cmp
cmp
push
mov
pop
or
pop
imul
loope
pop
cmp
or
outsb
ss
xor
arpl
sub
repnz
mov
fsubl
mov
ret
mov
mov
mov
jnp
inc
gs
ja
rorl
push
jns
jl
mov
mov
or
dec
xor
pop
jge
lods
test
dec
and
aas
cld
jmp
pop
stc
test
add
xchg
pop
test
out
cmp
xor
pop
out
ja
jno
xchg
add
push
bound
mov
adc
pop
xor
add
lret
mov
mov
lcall
lock
fnstenv
jne
enter
ds
lds
mov
pop
dec
jbe
xor
cmp
outsb
lods
push
push
bound
sub
inc
bound
pop
out
pop
out
xor
movl
mov
add
out
add
cmp
loopne
push
ret
pop
adc
loopne
sub
cmp
mov
inc
inc
cmp
inc
mov
out
aaa
xor
mov
scas
int3
pop
nop
negb
dec
mov
lods
aas
gs
sbb
xlat
lods
xorb
decb
jno
or
bound
loopne
push
inc
lret
adcl
in
push
inc
or
aad
pop
inc
cmp
dec
inc
mov
cmp
cmp
outsl
shlb
and
xor
data16
iret
adc
sub
popa
ss
pop
data16
test
cmc
cmp
dec
mov
aad
dec
push
sub
xor
ss
mov
pop
mov
push
ja
ret
pop
or
and
sbb
aam
push
cs
jg
xor
inc
and
mov
jmp
jnp
pop
fs
mov
mov
dec
push
or
cs
movsl
pusha
mov
mov
fst
inc
shll
out
sbb
popa
roll
bound
jecxz
dec
mov
inc
addr16
es
gs
into
cltd
cmp
fmull
fst
add
sti
push
sub
pop
fldenv
popa
hlt
inc
popf
dec
inc
inc
or
pop
stc
add
scas
fldenv
je
aaa
push
sub
jns
add
lds
mov
jg
xchg
sti
js
bound
pop
inc
mov
aas
mov
bound
push
cmp
xlat
lods
in
lds
scas
cmp
roll
jl
pop
dec
mov
js
clc
jmp
repz
data16
pop
sbbb
sbb
jmp
xor
cmp
fsubr
cmp
xlat
sbb
popa
cltd
inc
bound
xor
fidivs
inc
mov
cmp
pop
jg
fisubl
fdivl
pop
sbb
fsub
push
mov
in
jg
inc
bound
fadds
sub
mov
adc
ss
stc
aaa
roll
sub
icebp
loope
lds
push
arpl
sarl
idivl
fs
jne
movsb
arpl
jbe
out
pop
fists
test
dec
sub
in
and
push
ss
cld
inc
je
insb
arpl
pop
cmp
sub
push
mov
inc
pop
bound
pop
mov
pop
pop
sub
adc
gs
mov
jl
pop
cltd
inc
mov
or
std
push
sbb
leave
imul
out
push
pop
push
push
xchg
bound
rorb
clc
pop
sahf
out
sbb
aad
fsubs
and
push
inc
cmp
sub
inc
dec
and
xor
into
pop
cmpsl
lds
rcrb
xor
leave
inc
fnstcw
imul
push
fisttpl
dec
sahf
sub
adc
out
jb
insl
test
adc
jne
repnz
mov
jb
cltd
push
sub
jp
leave
out
lods
daa
out
mov
mov
dec
test
sub
inc
mov
imul
and
shrl
push
adc
xchg
or
adc
push
jmp
enter
dec
dec
or
push
popa
push
pop
push
push
pop
loope
popa
divl
pop
dec
adc
dec
mov
push
push
in
push
dec
mov
mov
scas
and
cmpsl
ss
shlb
ficompl
in
push
test
cmc
jmp
xor
clc
inc
sahf
sbb
mulps
in
sub
dec
mov
data16
fsts
fs
bound
push
lods
jge
push
jmp
mov
add
bound
leave
shlb
sahf
adc
push
push
dec
shrl
sub
es
mov
jmp
loope
pop
arpl
xor
into
out
ss
mov
imul
push
cmp
xchg
mov
xlat
int3
inc
pop
lcall
push
ret
pop
bound
dec
xor
push
bound
das
jmp
inc
push
xchg
shl
push
fisttpll
dec
push
pop
fucomip
inc
pop
and
ds
cmp
push
in
aas
pop
pop
or
jmp
mov
xor
mov
sub
fnstcw
mov
aaa
aad
data16
jbe
cmp
sub
ds
push
dec
jl
pop
mov
gs
inc
pop
ret
pop
pushw
inc
pop
ss
ret
dec
movsl
pop
fsts
mov
jl
push
addr16
divb
dec
pop
dec
fstpl
pop
js
inc
pop
xor
inc
fcomps
dec
sbb
push
dec
inc
or
mov
movups
cmp
in
cs
sub
out
push
dec
push
sub
sub
sbb
pop
pop
pop
call
dec
dec
jl
xlat
push
sbb
sub
pop
cmp
shll
sbb
jmp
xchg
push
ret
lret
and
out
cmp
inc
sahf
sbbl
mov
push
je
insb
das
xor
mov
lea
je
imul
test
xor
es
pop
sub
popa
movhps
lods
push
add
iret
mov
xor
mov
pop
pop
dec
adc
int
bound
lcall
hlt
lcall
xchg
add
sahf
or
xor
dec
fstpl
ss
lock
and
cltd
fs
pop
lahf
fbld
adc
sahf
push
fs
mov
ret
push
fcoms
ss
fs
fsts
and
or
jmp
push
pop
dec
jg
adc
dec
mov
fs
out
fucomi
push
in
mov
adc
pop
inc
pop
mov
xcrypt-cbc
cmpsl
push
push
adc
sub
xchg
nop
xchg
fs
adc
push
dec
pop
push
fcoml
popa
adc
lea
iret
push
int3
mov
sahf
inc
pop
push
sub
sbb
xchg
add
push
pop
lret
push
popf
pop
sub
sbb
int
push
dec
or
pusha
leave
xchg
dec
adc
in
xchg
cmp
dec
and
fs
cld
outsl
out
mov
dec
mov
shll
popf
push
cmp
cmp
jle
arpl
stc
xchg
push
sbb
cmp
lret
aad
dec
repnz
popf
inc
xor
or
into
lret
adc
lret
movsb
inc
mov
aad
xor
sbb
pop
xchg
pop
adc
xor
bound
fsqrt
xchg
sbb
xor
dec
andb
ss
dec
shll
icebp
mov
fnstcw
rcll
adc
push
imul
ficoml
xchg
sbb
push
fstps
pop
popa
dec
inc
rolb
push
pop
ftst
xchg
std
mov
dec
int
push
mov
jmp
sbb
inc
adc
and
loope
pop
cs
aas
mov
ud1
pop
sti
orl
jge
iret
iret
jmp
out
nop
add
bound
popa
xchg
push
movsl
sub
push
adc
gs
cmp
pop
dec
pop
pop
jecxz
into
or
arpl
arpl
pop
and
movsl
mov
push
setp
pop
xchg
pop
mov
mov
mov
cmpsl
inc
out
cmp
mov
adc
xchg
sub
jbe
mov
push
int
cli
cmp
pop
lret
jecxz
push
push
enter
int
sbb
movsl
mov
adc
or
je
mov
psubusw
push
sub
in
add
mov
cld
shll
lea
jmp
fs
imul
lcall
fisubrs
mov
push
movsb
mov
in
inc
dec
and
mov
dec
andb
sbb
add
mov
movsb
bound
and
cmp
dec
or
dec
adc
sbb
sub
iret
in
aas
push
jp
push
add
ljmp
ss
dec
cmp
push
cmp
jns
dec
loope
dec
pop
dec
dec
or
push
popa
push
pop
push
push
push
loope
pop
pop
pop
or
bound
pop
fs
or
addr16
popa
imul
sub
or
in
popa
xor
ss
pop
sarb
cmp
pop
cmp
or
inc
popa
inc
pop
dec
push
dec
loope
pop
push
push
push
addr16
jbe
and
fs
sub
or
in
popa
test
addr16
push
frstor
loop
in
pop
push
data16
xchg
in
pop
fs
xchg
sbb
cltd
mov
pop
adc
frstor
push
rorb
fs
xchg
bound
sub
ss
lahf
dec
cmp
leave
bound
int
add
push
in
and
frstor
cld
inc
inc
push
dec
add
jl
and
fs
addr16
inc
test
test
push
pop
shlb
add
add
xorb
bound
dec
enter
cli
xorl
push
pop
das
sbb
pop
mov
pop
jecxz
icebp
pop
xor
add
out
sub
sbb
rclb
dec
fstp
jmp
in
jmp
aam
xor
out
push
popa
pop
mov
sub
arpl
pop
sub
sbb
fwait
aaa
push
adc
inc
es
in
push
pop
movsl
push
lods
pop
and
or
in
popa
mov
loope
pop
dec
or
sub
push
cmpsb
or
out
jne
addr16
push
mov
xor
rorb
daa
mov
insb
sub
cltd
addr16
and
add
aad
adc
pop
in
gs
in
adc
sbb
jno
sub
mov
cmpsb
lret
clc
rcr
cs
push
mov
shrb
lods
cmp
and
mov
sub
mov
pop
xor
and
xor
in
popa
daa
pop
aaa
push
cmpsb
loope
insl
in
popa
sub
push
loop
ds
in
or
inc
popa
addr16
inc
push
cmpsl
loope
pop
and
dec
popa
and
dec
push
es
pop
fs
or
in
popa
movsb
pop
push
push
loope
push
pop
mov
push
pusha
sub
mov
ret
dec
cmp
push
pusha
pop
xchg
fsubrp
xor
add
out
cld
sub
pop
push
dec
sub
mul
arpl
popa
scas
dec
push
cltd
push
push
add
jne
cmp
mov
push
mov
ss
mov
or
xor
push
fndisi(8087
xlat
pop
ror
or
in
popa
lcall
push
mov
mov
stos
in
cmc
fisttpll
pushf
in
popa
aam
int3
push
loope
pop
mov
in
popa
stos
pop
jecxz
push
rcrl
mov
add
ret
pop
mov
scas
loope
sbb
fxam
shll
pop
movb
loope
pop
js
or
clc
sub
cli
push
adc
stos
jbe
sbb
bound
push
push
xchg
lret
pop
dec
push
out
mov
lea
jmp
rorb
cwtl
mov
and
ljmp
jmp
pop
in
jg,pn
loope
fsubrp
pop
cli
xor
mov
lcall
cs
repnz
ljmp
ljmp
pop
sub
adc
jp
bound
pop
daa
adc
shlb
xor
clc
es
add
push
rclb
push
pop
xchg
pop
add
mov
sbb
xor
xor
pop
shrw
call
and
imul
push
pop
inc
mov
lods
test
test
in
cld
inc
loop
outsb
fwait
push
negb
fildl
adc
mov
loope
pop
jne
aaa
sub
sahf
cmp
pop
push
dec
dec
sbb
sub
dec
sbb
stos
rolb
es
or
fs
push
lahf
inc
loopne
and
or
rcll
in
imul
stos
mov
pop
cmp
cmp
mov
push
cmpsl
push
popa
sub
les
imul
jp
mov
out
aaa
mov
mov
bound
ret
lahf
inc
jmp
ss
and
jecxz
xchg
and
mov
push
les
cltd
out
pop
and
cs
jp
inc
pop
out
or
xchg
cld
insl
xor
cmc
shr
push
mov
sub
clc
cwtl
mov
cmp
adc
insb
dec
xor
cs
sub
lret
sub
aaa
lods
and
sahf
dec
or
pop
pusha
data16
and
stc
cmp
fldt
dec
repnz
lret
add
aaa
js
out
mov
sbb
or
sub
pop
pop
push
fnstenv
addb
mov
icebp
adc
stc
stos
xchg
pop
shrb
bound
sub
inc
pushf
adc
jmp
int
sub
adc
in
jae
mov
mov
repz
sub
push
clc
addl
cmp
or
add
sub
push
sbb
je
orl
push
fwait
jb
pop
test
mov
jns
pop
adc
test
movsb
jl
out
cmp
cmpsb
mov
test
stc
subb
ljmp
outsl
cs
sbb
cmp
lret
icebp
cmc
inc
jp
dec
jo
mov
dec
mov
jg
xor
sahf
push
xchg
repnz
cmp
clc
loop
sub
gs
dec
jle
mov
mov
loop
jbe
test
mov
fwait
push
adc
sub
lret
dec
in
dec
xchg
sub
pop
call
and
add
sbb
mov
fisttps
aas
add
cmp
push
dec
fdivs
repz
call
mov
push
or
cmp
and
cltd
push
cmp
pop
and
imulb
cmp
jmp
fwait
xor
dec
push
push
enter
sub
mov
jae
fistpl
mov
inc
rcrl
ljmp
leave
xor
std
sub
mov
mov
sub
jl
pop
and
xor
pop
fcompl
xchg
mov
sub
inc
cmp
xor
rcll
mov
fs
cmpsb
xchg
adc
jmp
xchg
inc
or
push
mov
mov
imul
push
stos
arpl
rorb
add
xor
sub
test
sbb
push
and
gs
enter
xor
sub
gs
dec
test
xor
push
gs
lahf
pushf
inc
push
gs
sub
inc
cmp
sub
popf
rcll
push
orl
jmp
and
cmpsb
dec
fisttpll
mov
popf
push
mov
push
popa
push
sbb
fdivr
sar
loop
or
pop
and
out
sbb
pusha
and
pop
cli
and
push
lcall
lahf
data16
enter
push
cmpsb
jmp
push
xlat
bound
arpl
sub
pop
pop
in
xor
std
lock
ror
push
and
data16
xor
repnz
or
fs
xor
cmp
data16
adc
subl
inc
aam
add
arpl
in
mov
loop
pushf
xchg
mov
pop
int
arpl
in
sti
imul
pop
loope
fwait
mov
pop
jmp
xor
inc
pop
popa
xor
dec
cmpsl
push
push
cmp
loopne
pop
in
mov
sub
push
xchg
and
and
inc
mov
into
push
jecxz
pop
dec
cli
push
into
push
pop
pop
xchg
cli
cltd
and
fiadds
arpl
xor
into
movsb
mov
cli
pop
xchg
mov
pop
popfw
fidivs
fiaddl
push
jmp
pop
int
pop
ss
fistps
and
xchg
sbb
add
clc
adcb
popa
stos
dec
jo
adc
add
add
into
adc
fisttps
and
xchg
nop
sub
stc
sub
cwtl
pushf
adc
or
push
cli
add
and
fsts
jge
adc
push
pop
xchg
pop
push
or
negb
call
int3
es
adc
pusha
addb
test
mov
or
cmpsb
out
dec
xchg
clc
inc
adc
stos
pop
imul
mov
inc
aaa
pop
in
xchg
inc
fcompl
sub
rclb
insb
and
push
sbb
dec
cmp
push
xchg
cmc
shrl
sub
pushf
out
lret
jecxz
addb
rcll
lock
jbe
ror
pop
push
imul
dec
add
cmpsl
sbb
sbb
fnsave
sbb
mov
adc
fucom
scas
cli
or
ja
into
xchg
jb
push
jg
jae
push
subb
push
loopne
pop
push
cmp
popa
cmp
cmp
adc
inc
aaa
das
shll
mov
das
stos
pop
xchg
out
addb
inc
stos
cmpsb
mov
movb
int
je
xchg
imull
or
rcll
aas
mov
shl
or
push
std
xlat
sbb
inc
pop
sub
cmp
sub
push
clc
cmp
and
and
arpl
jl
subb
fistl
es
cmpsl
cmp
push
or
clc
jbe
out
into
into
iret
mov
push
enter
mov
ret
jno
movsl
je
cmc
cmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cld
adc
inc
aaa
mov
and
loope
inc
popf
mov
mov
mov
cmp
lret
mov
movsb
leave
cmc
add
hlt
mov
aas
shr
movsl
inc
pop
rorl
or
jb
mov
cmp
es
je
and
jg
cmp
pop
push
jecxz
adc
cmc
fwait
xor
xchg
pop
sub
nop
in
and
iret
das
stos
rolb
push
add
xchg
test
repz
jns
ss
push
cmpsl
inc
cld
inc
aaa
mov
repnz
shlb
mov
clc
inc
mov
je
in
sub
out
loop
cmp
add
movsb
jne
into
cmp
xlat
rorb
xchg
mov
data16
in
pop
lahf
pop
nop
jnp
ficoml
push
mov
out
pop
mov
les
sbb
lock
push
bound
lea
xor
push
std
cmc
push
jle
xchg
loope
add
outsb
mov
mov
stc
sbb
sub
fs
xor
pop
incl
dec
or
xor
xchg
idiv
dec
adc
pop
in
sbb
or
sub
or
add
test
push
inc
inc
mov
inc
test
mull
dec
pop
iret
repz
fwait
pop
cmp
aam
lcall
out
pushf
xchg
xchg
mov
inc
mov
lret
pop
repnz
push
add
pop
call
jnp
stos
mov
sti
inc
aaa
mov
mov
push
xor
in
inc
inc
mov
pushf
inc
test
rcr
sbb
lret
mov
push
ljmp
shlb
loopne
mov
xchg
mov
xchg
pusha
andb
out
lahf
xlat
and
mov
dec
and
fwait
testl
inc
mov
add
add
ja
scas
in
orl
shrl
adc
adc
cli
jecxz
inc
ljmp
pop
mov
jbe
pop
in
push
mov
add
dec
insl
popa
addr16
imul
insb
imul
lahf
xor
inc
aaa
xchg
roll
lds
mov
mov
mov
dec
add
ret
stos
or
loope
cwtl
xchg
das
xchg
imul
jae
cmp
xchg
jmp
mov
cmp
push
pop
test
jmp
repz
fisubrs
add
and
jl
xchg
fisttpl
mov
aaa
je
lock
xor
dec
push
pop
or
adc
push
pusha
lret
xor
test
inc
aam
sbb
add
je
cld
inc
stos
or
sbb
add
pop
in
pop
or
sub
and
inc
add
inc
test
inc
jmp
pop
stc
stos
push
mull
jno
cmc
das
hlt
movw
pushf
lea
je
jnp
cmp
call
lea
call
call
cs
stc
inc
aaa
leave
lret
es
incb
dec
jle
cmpsb
xchg
dec
fldt
pop
std
es
cmpsl
inc
and
fists
sbb
aam
fsubs
retw
fstpl
addr16
in
cmp
in
icebp
cmp
lahf
push
push
mov
push
data16
in
dec
add
imul
mov
sbb
jg
repz
mov
jnp
xlat
sbb
lahf
sub
ret
inc
jp
cmpsb
stc
arpl
sub
clc
inc
aaa
xor
sbbb
pop
sub
mov
addr16
sbb
xchg
js
pop
jl
dec
sbb
rcll
jecxz
sub
mov
sub
out
sub
inc
scas
das
adc
mov
in
cltd
repz
xchg
ret
sbb
xor
sub
jge
sbb
clc
inc
aaa
sbbl
cs
mov
shll
mov
test
bound
jle
fmuls
aam
aaa
repnz
lret
add
sub
and
and
inc
nop
mov
rcll
iret
sti
lods
ja
ret
popa
mov
dec
into
lds
jns
jnp
xchg
push
push
add
cmp
or
enter
and
add
xor
pop
mov
test
jae
inc
aaa
bound
xchg
push
mov
mov
or
test
sbb
mov
pusha
cmp
mov
mov
mov
mov
pop
and
push
sbb
es
int
jg
xchg
mov
dec
inc
and
roll
inc
xor
xchg
or
cmp
test
jns
and
sub
mov
and
loop
loopne
cmc
pusha
mov
call
jno
mov
inc
aaa
ds
std
test
jne
insl
add
out
iret
push
sbb
xor
setge
push
mov
add
pop
inc
push
mov
adc
fimuls
scas
fs
loop
loopne
jl
std
jecxz
ret
pop
pop
fcmovnu
shlw
and
repz
cmpsb
fbld
push
mov
cmp
imul
push
iret
cltd
or
and
arpl
les
rorl
mov
mov
imul
inc
jmp
add
xchg
mov
adc
mov
imul
ja
jmp
mov
jo
nop
cmova
lock
mov
adc
lea
push
push
dec
mov
pop
or
pop
mov
and
mov
inc
add
push
subl
mov
pop
ret
mov
and
jae
pop
stc
cmp
cmp
pop
pop
jmp
daa
mov
dec
mov
jp,pt
lcall
push
addb
fwait
push
sub
das
xor
iret
cwtl
sahf
incb
add
lea
fistpl
adc
rclb
imul
in
push
add
sub
adc
xor
lock
and
imull
into
sub
daa
andb
xchg
iret
ljmp
out
loope
in
jmp
lods
aas
mov
sub
jmp
test
aaa
dec
cmpsb
repnz
out
push
push
ljmp
stos
adc
cmpsb
mov
inc
and
xchg
fdivl
stc
je
or
push
push
cli
mov
aas
sub
jae
or
pop
mov
loope
push
pop
jnp
inc
test
scas
pop
icebp
push
push
daa
mov
insl
pop
repnz
sub
jo
popf
dec
lea
cmpsb
and
push
fidivs
pop
mov
adc
jmp
gs
imul
add
lods
cmc
inc
aaa
sub
cmpsb
cmp
bound
push
lret
pop
jge
or
cld
insl
jp
jg
adc
or
incb
mov
sbb
jecxz
lret
lahf
sub
mov
iret
push
and
hlt
inc
aaa
and
lea
mov
leave
cmp
out
inc
push
fcomps
jae
dec
and
ss
hlt
pop
outsb
out
sbb
mov
sbb
adc
inc
ljmp
xorb
imul
xchg
jnp
lret
pop
int3
inc
mov
pushf
cmpsl
in
ss
add
push
fstpl
adc
ds
pop
outsb
inc
push
push
sbb
push
jbe
fdivs
sbbl
mov
push
leave
xchg
cwtl
pop
mov
or
inc
aaa
push
jb
xor
shlb
push
push
cli
xchg
bound
aad
inc
in
push
jl
mov
or
inc
jnp
ljmp
sbb
shll
cmp
lea
lea
sub
dec
sbb
inc
cltd
fs
fs
popf
movsb
cmp
js
pop
test
ja
addr16
jecxz
or
je
inc
adc
sbb
or
and
add
out
pop
scas
repz
aaa
es
cmpsb
dec
into
adc
mov
sbb
sub
sbb
cltd
shl
sub
leave
mov
push
and
fistl
out
lcall
pushf
mov
jo
imul
icebp
or
imul
aam
stos
xor
add
mov
mov
cmp
inc
mov
cmp
daa
ficoml
jae
not
mov
pushf
inc
pusha
inc
pusha
mov
mov
mov
movb
jmp
btc
xadd
daa
aad
mov
mov
das
bsf
lea
mov
bt
shld
xor
shr
push
pusha
shld
mov
cmc
bt
or
pusha
lea
je
rol
and
bts
add
push
pop
stc
sub
push
btr
and
shr
shr
mov
bsr
cmc
shl
add
shl
sbb
add
neg
not
sub
xor
mov
call
std
xchg
cs
aaa
test
in
test
sbb
xchg
and
pop
mov
sti
fwait
dec
xchg
test
xor
loope
fnstenv
push
jns
xchg
xor
cmp
cmp
leave
xor
or
addps
lea
scas
xor
dec
clc
clc
mov
cmp
loop
imull
popa
jmp
push
in
pop
jno
insl
pop
orl
jns
xchg
clc
xor
adc
mov
btr
pushf
mov
clc
stc
cmc
and
call
lock
icebp
inc
aaa
repnz
fisubl
out
jb
stos
outsb
cli
jle
fstl
clc
test
and
and
cmpsb
icebp
xchg
mov
movsl
out
mov
and
inc
push
pop
add
ds
arpl
push
lahf
aam
mov
out
lahf
out
add
pop
mov
sbb
sub
shrb
fisttpl
jmp
in
lods
call
add
pop
out
iret
mov
sbb
mov
fildll
dec
jge
fldenv
pop
sti
lods
sub
xor
pop
loop
testl
add
inc
and
inc
lahf
mov
and
push
lcall
xchg
inc
loop
lahf
sub
mov
dec
std
int3
in
aaa
sbb
flds
cmpsb
jae
dec
nop
dec
xor
or
lret
sbb
dec
shll
dec
mov
incl
daa
cmp
shrb
mov
out
sub
sarb
sub
mov
mov
lea
pop
fisubrl
jo
adc
and
pop
arpl
jo
lock
aaa
addr16
repnz
mov
inc
add
hlt
fists
insl
fstpt
xchg
aaa
inc
add
mov
lods
add
stc
loopne
xor
iret
xor
add
out
cld
leave
adc
fbstp
jne
sub
rcrl
xor
add
cs
cs
pop
sub
enter
mov
cmp
or
jne
jno
cwtl
rolb
lret
sbb
mov
insl
loope
mov
jno
jg
sbb
mov
jg
test
inc
popa
cs
jge
jmp
jb
rcll
je
lahf
rcrb
pop
adc
in
and
dec
jnp
inc
mov
repnz
or
out
jmp
out
xor
test
fsubs
inc
std
pop
mov
mov
testl
xor
xchg
push
nop
repnz
jle
andb
imulb
and
inc
aaa
xchg
ficoml
xchg
jp
ljmp
pop
push
in
xchg
push
daa
loop
push
rclb
jp
adc
and
aam
fimuls
or
pop
fmull
in
inc
cmpl
hlt
push
adc
pop
sub
div
fimuls
inc
inc
inc
sahf
push
call
jg
daa
sub
adc
and
cltd
pop
insb
repz
sub
mov
repz
push
cmpsb
pusha
cli
movsb
pop
shlb
in
call
push
cmp
lds
push
pop
and
shll
jg
pop
mov
inc
ret
adc
mov
shr
sbb
notl
and
pop
and
sub
sub
xor
out
inc
aaa
sti
dec
fmuls
lock
cld
jo
adc
mov
sub
xchg
cmpsb
idiv
adc
es
mov
xchg
lea
adc
loope
push
lea
jmp
test
add
or
cvtps2pd
stc
std
add
push
gs
movsb
push
inc
xchg
add
add
jmp
inc
cld
mov
jne
cwtl
pusha
ficompl
test
std
xchg
jg
btc
sub
and
push
and
pop
test
mov
out
inc
aaa
lds
mov
inc
mov
mov
xor
ret
dec
in
pusha
in
xlat
jl
sub
add
jl
and
inc
mov
test
ds
test
cld
std
mov
shlb
lock
sbb
or
xor
jp
cld
out
or
imul
sbb
mov
loope
dec
call
and
in
in
dec
and
xchg
cmp
push
fucomi
inc
mov
adc
mov
rorb
out
das
fdivs
sub
call
shll
into
xor
adc
insb
cmpsb
std
out
scas
xor
mov
inc
sbb
jns
lcall
push
clc
ret
or
pop
push
push
cwtl
ret
adc
test
mov
jns
jg
or
pusha
lea
call
pushf
pusha
pushf
mov
adc
call
rol
sub
pushf
stc
pop
add
dec
mov
not
xor
mov
jmp
lods
fwait
es
inc
aaa
mov
popf
and
jge
dec
fsts
shl
push
lods
xor
lds
push
dec
jge
aad
fisttpll
mov
cmpsb
aas
out
int3
xor
xchg
xchg
repz
arpl
sbb
or
dec
aad
clc
fwait
pop
aam
push
adc
idivb
mov
adc
lret
xchg
adc
shll
xchg
mov
outsb
jle
ja
cmpsb
adc
cltd
mov
cltd
xchg
enter
adc
aad
mov
sbb
in
pop
adc
push
dec
dec
inc
inc
push
push
xor
cs
insb
add
aaa
mov
in
lea
xchg
ror
pop
lock
ret
jecxz
fnstsw
cmpsb
jnp
stos
imul
push
adc
mov
xor
orb
mov
rolb
in
dec
cwtl
pop
jmp
adc
jo
mov
dec
int3
addr16
ret
sub
jp
xchg
dec
cmp
push
lods
ret
js
pop
sub
push
inc
mov
lret
aas
int
mov
jb
fnstenv
xchg
sbb
enter
iret
lea
fistpl
outsl
push
into
push
out
fldl
push
xor
xlat
stc
jae
xlat
popa
mov
sahf
cmp
mov
aam
adc
jne
and
out
mov
jnp
add
dec
jmp
aaa
jnp
mov
pop
daa
repz
sbb
in
lods
sub
mov
pop
vpcmpgtw
push
sub
out
add
sbb
mov
rcll
mov
push
fistpl
outsl
rolb
fldcw
neg
stos
repz
sub
cs
jcxz
jg
lret
pop
push
call
push
sti
sub
mov
or
push
shrb
xor
lret
rcll
insb
ret
push
and
xchg
in
bound
sub
pop
aam
cmpsb
mov
dec
daa
stos
pop
popl
push
movl
scas
lods
loop
pop
lds
xor
dec
iret
addb
sarb
fisubrs
jns
adc
xchg
push
and
adc
arpl
mov
lock
adc
repz
sti
arpl
jmp
mov
inc
loop
cmpsb
add
aam
nop
cmc
jne
xchg
fs
loope
imul
pushf
dec
jmp
test
bt
sub
jo
shl
not
lods
cmc
sub
pushf
rol
jmp
sbb
aaa
rolb
dec
popa
aad
in
in
xchg
dec
and
ljmp
xchg
ss
incb
data16
fildl
mov
push
xchg
fisttpll
dec
mov
mov
and
xchg
sbb
pop
out
xlat
pop
sahf
dec
sbb
stos
es
nop
fsubs
adcb
dec
add
daa
leave
pop
jge
pusha
mov
mov
fs
call
jmp
call
js
fucomi
inc
aaa
in
dec
sub
dec
or
or
xchg
addl
mov
jge
hlt
push
inc
nop
rorl
cmpb
in
mull
fdivl
push
add
sub
sbb
jo
mov
pop
bound
xor
js
push
mov
sub
xor
or
sar
xchg
push
call
xor
mov
mov
pop
jnp
dec
std
inc
in
arpl
xlat
ret
adc
mov
sbb
mulps
rcrb
pop
mov
jmp
dec
mov
mov
test
inc
cmp
popf
and
cwtl
insb
and
fistl
test
dec
mov
sti
lcall
data16
shlb
stos
lds
lock
loope
xor
dec
loop
aas
rcrb
ss
fistpll
fwait
pushf
stc
pop
mov
or
rcll
pop
repz
push
cmp
mov
sahf
mov
mov
add
jge
push
jmp
dec
stos
fisubs
mov
pop
push
in
enter
jbe
fstpt
rorb
outsb
mov
out
pop
push
ds
insb
dec
mov
mov
dec
jns
cmp
fwait
dec
fnstenv
sub
rcll
pop
lret
movsl
clc
pusha
mov
cmp
jmp
imul
mov
pop
add
mov
out
shll
push
cltd
mov
aas
jl
sub
dec
subl
or
roll
jne
mov
xlat
mov
stc
pusha
pusha
cmp
test
mov
call
jle
call
jae
jmp
mov
arpl
pop
aaa
or
xchg
xchg
sarb
bound
je
mov
test
into
das
fistl
cmp
jno
adc
push
mov
xchg
mul
sbb
cmp
fsubrs
mov
outsb
and
aas
shr
testb
aas
fimull
jns
cmc
inc
push
jp
or
and
mov
add
push
and
lret
lea
pop
jbe
loope
xor
in
fdivrs
jge
xor
xchg
pop
push
and
push
mov
fisubl
pop
out
aaa
mov
nop
adc
cmp
les
cld
mov
icebp
and
into
xchg
mov
adc
cmp
daa
sub
add
jns
dec
stos
cld
push
ret
push
loop
in
cld
dec
mov
or
sti
jecxz
push
adc
xor
fldl
push
jg
sbb
outsl
rolb
sti
pop
inc
aad
cmp
mov
xchg
push
in
push
mov
lods
imul
movsb
pop
xorl
aad
clc
adc
pop
mull
movsl
out
call
lea
jae
pusha
call
repnz
aaa
fmull
and
adc
adc
sbb
mov
sbb
inc
dec
fucom
fimuls
xchg
cmpb
andb
jecxz
mov
jae
rorb
inc
shlb
into
call
popl
sub
push
ljmp
adc
or
cld
pusha
imul
add
loope
lock
push
jge
adc
mov
pop
cmpl
pop
out
fdivrl
pop
aas
or
out
pop
adc
fdivr
jo
in
lock
or
pop
mov
pop
lea
je
pushf
call
je
mov
inc
aaa
pop
jo
enter
clc
jl
dec
clc
xchg
and
inc
dec
pop
fnstsw
repnz
xor
lods
fstpt
nop
icebp
call
cltd
xchg
stos
mov
pop
adc
repz
fldl
lret
in
stc
es
pop
aam
cmpsl
jmp
pop
xor
push
lea
jnp
pop
inc
sbb
xor
imul
sub
inc
mov
sub
sti
nop
push
xor
jl
ret
inc
lret
addl
xchg
inc
mov
jno
add
pop
loope
and
xor
or
add
outsl
push
insb
in
aaa
push
fists
outsl
or
daa
ret
aas
shll
inc
cmp
jecxz
xchg
lods
stc
sub
jle
xchg
add
push
jbe
movsb
sub
lock
int3
push
add
cmp
sbb
xchg
xchg
out
insl
cwtl
popl
sbb
popa
jmp
dec
dec
dec
xor
es
mov
pop
icebp
xchg
int
xchg
scas
cmp
push
fnstsw
leave
sub
popa
inc
pop
iret
out
ss
cmpsb
jb
fbld
or
pop
mov
dec
push
pushf
addr16
xchg
jmp
in
es
aaa
scas
iret
push
repz
cmp
scas
fwait
outsl
or
stc
fsubs
cwtl
cwtl
enter
mov
imul
jge
adc
push
lret
push
lret
ljmp
in
stc
loope
in
jno,pt
xor
dec
or
cmpsl
sub
sub
bnd
insl
cwtl
mov
lock
test
mov
fildl
outsb
sbb
jb
push
lahf
lock
push
int3
fwait
cmp
jecxz
aaa
out
popf
dec
int
jge
and
adcl
cwtl
lds
pop
int
dec
lds
push
pop
imul
je
and
push
mov
xchg
lahf
pop
xchg
cmc
pop
imul
sub
dec
xchg
sbb
xorb
and
mov
dec
js
push
adc
and
stc
cmpsb
mov
addr16
pop
insb
inc
mov
xlat
mov
rol
es
pop
cmp
js
hlt
push
pusha
loop
cmpsb
inc
mov
add
inc
dec
mov
loopne
dec
jecxz
aaa
mov
inc
rolb
std
rdtsc
push
pop
xor
mov
jge
cmp
fistpll
mov
stc
hlt
mov
jge
add
xor
cmc
xor
shr
mov
push
jae
and
dec
ret
xlat
xor
call
jge
adc
add
mov
mov
sub
xchg
mov
xchg
scas
push
sbb
or
ds
dec
in
adc
pop
push
and
add
inc
test
jmp
gs
push
xor
pop
add
scas
fsts
xor
stos
or
dec
in
cltd
or
loop
aaa
out
insl
adc
jns
mov
xchg
adc
fucom
mov
mov
icebp
data16
ret
das
or
jno
push
stos
cmp
rol
mov
adc
cmp
lods
mov
sub
jmp
push
xchg
jmp
sti
hlt
stos
mov
mov
sub
lret
dec
imul
add
and
les
outsl
js
dec
rolb
stos
pop
jl
stos
push
fisttps
in
cmpsl
jno
sub
mov
xor
add
enter
push
outsl
sti
push
ret
outsl
sti
outsl
dec
pop
xchg
divl
sbb
je
cmp
xchg
cmp
push
je
sbbl
sub
mov
int
pop
in
call
ret
dec
pop
leave
xor
ja
add
add
push
inc
dec
sub
xchg
ret
int
xchg
push
jle
and
ja
xor
nop
and
xor
cmp
daa
imul
mov
loope
aaa
rcrb
fstpl
sbb
leave
cmp
pop
out
pop
push
cmc
arpl
xor
sub
test
lret
sbb
mov
nop
bnd
mov
dec
rcrl
xor
push
xchg
movsb
sbb
lods
addr16
sbb
push
push
ds
mov
pop
pop
mov
mov
in
pushf
dec
or
or
sub
aaa
jmp
mov
shr
call
jg
test
inc
aaa
jle
sarb
sub
int3
add
inc
leave
push
mov
ret
ret
in
pop
aad
xor
jmp
or
push
push
mov
shll
cmpsl
notl
popf
test
das
pop
stos
xor
dec
mov
pop
dec
cmpsb
sbb
xlat
jecxz
in
pop
mov
pop
fisubrl
aaa
xchg
jge
sub
dec
test
add
insl
jmp
inc
dec
decl
jbe
xchg
data16
jl
or
xchg
cmpsl
jbe
aam
shlb
lea
jne
jmp
push
jmp
loopne
fwait
loopne
aaa
cmp
lock
cltd
psubusw
idivl
mov
adc
cs
jnp
imul
sbb
dec
and
sub
idivl
sub
stos
xlat
repz
sbb
mov
pop
mov
cltd
rorb
enter
push
dec
push
lods
das
xchg
sub
mov
ds
inc
adc
xor
xchg
xor
movsl
pop
mov
gs
jmp
out
lret
out
or
adc
rorb
idiv
jmp
pushf
bound
inc
aaa
imul
add
or
rcll
jb
das
dec
sub
into
js
xchg
repnz
aas
mov
test
jp
mov
imul
xchg
imul
jbe
xchg
pop
sub
jge
add
mov
stos
rcll
dec
add
cmp
popl
sbb
movsl
decl
mov
xchg
int
and
and
xor
push
fmulp
mov
sub
add
cmp
lea
in
int
xchg
loope
inc
in
jns
dec
movsb
push
mov
sarb
cmp
cmp
cmp
ror
dec
in
shlb
incb
xchg
mov
aas
inc
sub
ja
and
add
mov
enter
dec
push
lret
mov
jne
sahf
jne
sub
inc
aaa
stos
add
mov
inc
mov
inc
aam
jns
stc
adc
mov
or
addr16
ficompl
inc
je
add
lret
sbb
inc
mov
hlt
sbb
es
dec
jnp
pushf
sbb
jle
pop
fistl
jnp
mov
test
sbb
fstl
repz
xor
sub
adc
pop
push
aad
mulb
or
lret
sub
lods
dec
stc
inc
int
les
loopne
add
add
call
cmp
mov
dec
hlt
pop
fcoml
insb
or
dec
je
xchg
xor
lcall
xor
jno
nop
xchg
stos
out
mov
sbbl
dec
gs
push
xchg
fbld
js
incb
call
in
addr16
add
iret
gs
js
fistpl
imul
leave
pop
int
rorl
sbb
test
mov
jg
loopne
mov
std
fldl
adc
loope
inc
or
add
push
aad
bound
fwait
or
aas
lea
and
xchg
sbb
mov
xor
test
pop
xchg
cmp
pushf
inc
aas
cmpsl
leave
jg
add
pop
movb
push
pop
rorl
lock
fsubrl
pop
dec
adc
dec
pushf
shrl
lahf
mov
adc
scas
mov
fs
hlt
push
adc
dec
jmp
pushf
int
mov
sbb
test
xchg
idiv
adc
pushf
lea
jmp
btc
test
pusha
mov
add
push
cmp
jmp
mov
inc
aaa
movsl
xor
stos
inc
xchg
out
arpl
cmp
inc
jmp
js
lods
cwtl
fimull
out
fs
rcrb
dec
adc
push
aas
mov
roll
ret
leave
and
jnp
mov
inc
dec
or
mov
and
orb
mov
push
enter
fiadds
adc
xor
push
push
pop
insl
ficomps
inc
xchg
adc
icebp
fwait
cmp
dec
adc
xchg
cmp
mov
push
mov
sbb
cmpsl
shl
fcoml
add
fildll
mov
mov
rcrl
inc
aaa
push
push
jb
push
dec
add
stc
test
lcall
jp
in
cmp
adc
pop
add
or
adc
add
in
rcr
mov
jecxz
sub
or
pop
mov
push
mov
pop
xchg
sbb
std
lahf
inc
mov
int
lds
shl
push
call
jp
cltd
faddl
jae
pand
mull
jcxz
sub
pop
bound
mov
mov
mov
std
mov
out
sbb
and
cmpsb
ljmp
jbe
pop
sub
push
test
and
and
les
shlb
adc
adc
repz
je
pop
gs
ss
xchg
sub
adc
test
sbb
dec
mov
add
daa
test
into
mov
test
in
jmp
jo
inc
aaa
dec
mov
out
pop
mov
decl
test
cld
movsb
leave
lods
cmc
out
xor
imul
xor
inc
xchg
mov
insb
mov
cld
lock
or
and
sbb
jp
or
xor
lods
in
into
lcall
pop
mov
in
shlb
push
cmp
test
push
inc
inc
les
nop
xchg
mov
pop
mov
aaa
mov
sub
daa
ret
push
mov
mov
test
mov
or
iret
mov
js
lock
pop
nop
push
jae
mov
push
fisttps
popf
icebp
cmp
pop
lcall
out
sahf
ret
insb
arpl
sbb
dec
rcrl
test
repz
popl
ffreep
sub
insb
add
pusha
sbb
je
in
test
out
in
mov
sub
lds
mov
jb
xchg
fs
and
js
test
out
pop
add
addr16
xor
cmp
jns
mulb
mov
mov
push
loopne
or
pusha
mov
cld
jg
ret
jne
mov
int
inc
jecxz
ljmp
push
imul
fbld
jmp
mov
push
cmpb
push
call
jae
cmp
pushf
xor
call
ja
mov
sbb
sub
jns
add
mov
lcall
xor
xchg
bswap
inc
xchg
cmpsb
mov
xor
xor
pop
out
bound
ficompl
movsl
mov
mov
insl
lds
insl
ljmp
lods
xor
push
bound
mov
fisttpl
push
mov
das
mov
sti
cli
jmp
pusha
add
pusha
pushf
movb
lea
jmp
add
inc
aaa
inc
mov
scas
pop
mov
and
mov
aas
xlat
or
inc
pop
lods
in
mov
hlt
fst
pop
daa
mov
pop
ret
loope
sbb
adc
stos
scas
mov
icebp
insl
and
adc
and
inc
pop
mov
inc
jns
cmp
fnsave
adc
sahf
inc
pop
lcall
xor
arpl
lret
or
mov
adc
jle
popf
enter
loop
or
dec
push
lahf
adc
or
fs
mov
push
mov
je
inc
cwtl
xor
sbb
dec
fcoms
jge
jb
dec
lods
pop
outsl
sbbb
mov
xchg
aaa
add
push
mov
test
into
push
imul
int3
mov
test
icebp
push
out
fbld
bound
xchg
dec
and
iret
or
scas
xor
bound
pop
inc
mov
psrld
jo
pop
or
add
pop
scas
out
xchg
add
and
pop
fadds
mov
repnz
xchg
push
push
and
subb
sahf
or
fsubrp
push
out
loope
in
cmc
mov
sub
int3
lret
pop
repz
xchg
mov
scas
fcomps
ffree
js
cmpsl
aad
adc
ret
dec
fadds
sbb
xor
xchg
dec
xor
pop
inc
push
mov
sub
xchg
stc
mov
dec
loopne
add
or
lret
xor
ljmp
mov
int
loope
fs
push
push
ljmp
and
jb
jmp
and
repz
inc
aaa
loop
mov
dec
adc
inc
pop
lcall
in
sub
repz
jl
jl
adc
mov
lahf
jne
push
imul
push
mov
pop
jae
nop
pop
cmp
hlt
pop
lret
aam
lods
dec
xchg
ret
mov
mov
jp
pop
pop
or
push
nop
test
pop
inc
and
mov
pop
pop
inc
cmp
cmp
test
add
xor
mov
push
hlt
jmp
rcrb
push
fsubr
add
add
leave
jmp
cmc
sub
stc
cmp
movb
lea
ja
jmp
mov
aaa
imul
pop
sbb
js
call
int
test
adc
rorb
xor
clc
jns
pop
mov
cmp
pop
pop
jne
arpl
sahf
xchg
mov
xchg
adc
call
push
adc
mov
dec
mov
mov
sbb
dec
lret
es
push
mov
mov
jno
popf
pop
sbb
aas
adc
pusha
aas
dec
aas
pop
pop
lahf
dec
cs
fs
add
imulb
repnz
loop
leave
and
dec
mov
inc
aaa
xor
inc
test
lods
push
repnz
push
mov
fwait
and
lahf
mov
fnstcw
lcall
adc
icebp
mov
cltd
xchg
mov
lea
fisttpl
xchg
add
ds
out
es
and
jb
mov
pop
jle
jle
inc
push
lret
lret
sub
out
lcall
sti
pop
lds
or
xor
mov
inc
aaa
repnz
jmp
mov
dec
mov
sub
and
adc
mov
inc
in
data16
mov
adc
adc
jno
mov
cmc
stos
aaa
sbb
or
and
sub
in
in
sbb
lds
sbb
sub
jmp
daa
mov
adc
and
mov
aam
jbe
inc
addr16
nop
sbb
pop
mov
pop
sub
test
and
adc
fs
jae
clc
cmc
sub
jmp
jl
scas
aad
aaa
daa
pop
cld
mov
pushf
nop
rorb
mov
insl
and
mov
fistl
repnz
cli
popa
jno
jmp
pop
fwait
pop
xchg
fistpl
jle
xor
or
sbb
cmc
dec
in
hlt
je
dec
hlt
cmpsl
push
cmp
or
leave
xor
imul
movsl
and
sub
ss
xchg
add
pusha
xor
lea
call
mov
pusha
pushf
mov
pushl
ret
movb
movl
push
lea
jmp
mov
cmc
cmp
test
pushf
pushf
push
pushf
lea
je
bt
add
pusha
pushf
call
dec
or
inc
aaa
int3
or
pop
add
mov
sub
or
fildl
loopne
fstpt
add
jecxz
ficompl
inc
jbe
daa
ret
es
mov
incl
mov
pop
adc
insl
jge
js
and
and
sarb
in
cmpsl
pop
xchg
fdivl
add
les
and
pusha
loop
sarl
roll
inc
jge
mov
pop
icebp
popf
and
mov
jge
dec
loop
pop
lcall
shr
mov
andl
popa
test
cmpsb
lret
or
testb
mov
jecxz
std
xor
mov
mov
mov
push
jnp
lret
mov
mov
ljmp
xchg
sub
icebp
or
lods
push
je
fnstsw
inc
mov
fisttpll
leave
fwait
inc
xlat
mov
movsl
pop
addl
imul
jle
xchg
roll
inc
dec
xchg
out
incb
mov
add
adc
xchg
pop
addr16
out
stos
mov
adc
pop
test
int3
or
ja
xor
nop
cld
add
shll
pop
lret
adc
mov
cmp
enter
aas
incl
inc
and
cmpsb
clc
les
cmp
mov
insl
out
mov
std
lahf
xor
mov
loope
mov
jnp
rolb
lods
and
dec
mov
inc
shlb
cmpsl
fcoms
jl
mov
clc
and
mov
mov
mov
test
xor
jno
jnp
mov
in
sbb
inc
push
pop
mov
cltd
pop
in
add
pop
mov
negl
dec
push
sub
test
mov
sub
jmp
mov
jmp
rolb
mov
adc
mov
clc
inc
inc
jno
xchg
add
decl
mov
mov
call
pop
add
fwait
aam
dec
lahf
fwait
sbb
fadd
and
add
popf
xlat
inc
shl
cmp
mov
fdivs
das
inc
sub
testl
add
lea
dec
clc
sub
cwtl
xchg
mov
add
push
jge
in
xchg
mov
mov
hlt
icebp
mov
xchg
mov
jo
sbb
push
inc
jmp
dec
hlt
push
lret
fwait
jae
sbb
and
pusha
loop
push
cmp
divb
xchg
jecxz
pop
icebp
hlt
shl
movb
jmp
lea
jae
stc
cmc
stc
xor
jmp
jnp
mov
and
cmp
adc
mov
nop
xor
inc
cmpsb
mov
sub
daa
pusha
in
ja
push
jnp
sbb
in
cmp
ret
insl
testb
add
and
inc
mov
std
push
sbb
cmpsb
xor
stos
int
sbb
es
push
mov
pop
cltd
sbb
lret
js
cwtl
test
leave
xchg
mov
adc
xchg
cltd
adc
adc
out
mov
test
adc
rolb
and
push
pusha
jmp
int
pop
rolb
ja
inc
lahf
repz
ret
pop
mov
jmp
dec
imull
je,pt
sahf
jmp
stc
push
mov
cmp
mov
dec
cmp
pop
jmp
test
push
push
int
add
int
push
pop
orb
xor
mov
lret
insb
push
imul
sub
xor
sub
and
call
std
outsl
pop
mov
sbb
push
jb
jae
jp
cmpsb
pusha
lret
mov
imul
pushl
lea
jne
aas
movsbw
aas
sub
jmp
jns
ror
inc
aaa
add
pop
std
popa
cmc
test
std
and
negl
and
add
mov
mov
sub
sub
dec
pop
ds
fsubrs
aad
xor
adc
les
test
out
sbb
mov
xchg
iret
inc
aaa
ss
mov
lds
xchg
in
xor
loop
ss
leave
xchg
test
dec
test
lock
adc
pop
lret
xor
lretw
and
adc
movsl
mov
xlat
stos
mov
icebp
push
jg
mov
pop
jmp
hlt
xchg
out
mov
ja
fimuls
outsb
loop
out
pop
sti
pop
xlat
or
push
or
pop
mov
mov
lea
call
pusha
call
lea
call
push
jmp
call
pusha
jmp
pop
int3
add
add
mov
dec
xchg
cmp
into
test
fwait
scas
aaa
xchg
jge
pop
subl
and
pop
pop
inc
mov
jecxz
dec
std
pushf
jne
dec
pop
mov
jp
push
mov
scas
iret
inc
sbb
add
je
add
pop
sub
dec
sbb
loopne
pop
shl
seto
pushf
inc
not
xchg
daa
rol
aad
mov
stc
call
jmp
aaa
and
icebp
gs
std
jns
adc
jbe
sti
out
xlat
jns
scas
xchg
cmp
js
mov
and
sbb
and
fadds
mov
cmp
mov
jecxz
ret
cmp
fsubrs
xor
pop
test
aas
ret
pop
add
adc
mov
adc
jle
sub
sahf
push
stos
imul
fs
mov
mov
int
add
jge
pop
jl
data16
dec
movsl
mov
lock
inc
aaa
add
push
sub
mov
pop
aad
mov
xlat
push
aaa
cltd
ret
jo
fildl
mov
scas
dec
jg
int
jle
out
fstl
jbe
sbb
and
dec
pop
outsb
sahf
or
sub
out
mov
xor
repnz
and
jne
jno
in
jge
fmulp
icebp
sbb
jb
aas
adc
int3
inc
aaa
adc
add
xchg
pop
mov
movl
mov
mov
xor
pusha
test
jg
cmpsl
in
mov
leave
outsb
ja
pop
cmpsl
push
cs
cltd
xchg
hlt
jg
xchg
int3
repz
lret
xorb
xorb
sbb
or
xor
fisubs
sub
cmp
dec
jg
fwait
arpl
mov
dec
js
mov
rolb
loop
repz
mov
fdivrl
clc
mov
or
inc
mov
xchg
mov
loope
inc
aaa
and
jnp
imul
fistpll
mov
adc
inc
ds
cld
xchg
push
add
stc
fstpl
add
xor
cmp
js
in
lret
sub
je
push
cld
ror
testb
mov
cmp
xchg
add
and
mov
in
lea
movsb
ds
in
pop
lods
movsb
cmp
addl
cmp
out
cmp
loop
movsl
push
jle
cmpsl
pushf
jmp
pushf
call
xchg
int3
inc
aaa
jp
mov
push
out
iret
jmp
ret
jbe
or
and
xchg
leave
out
subl
mov
pop
and
pop
dec
dec
ds
sti
add
inc
cs
xor
cltd
pop
ds
mov
les
cltd
xchg
aas
pushf
jge
add
out
lods
sub
pushf
lock
inc
jae
fists
sub
push
insb
enter
outsl
xor
sbb
lret
inc
aaa
xor
jbe
cmp
push
dec
insl
cmpsl
sbb
loopne
lods
pop
pop
inc
mov
xchg
adc
mov
rcrb
or
into
jnp
push
into
ja
sub
fdivrp
hlt
fsubs
xchg
push
xchg
push
into
test
out
jb
and
sub
mov
xchg
sbb
push
push
xchg
loope
ljmp
sbb
pop
hlt
inc
mov
in
mov
lahf
fbld
andb
aaa
jle
and
xchg
data16
rcrl
iret
cmove
or
sbb
sbb
das
aam
into
imul
push
mov
test
push
fcoms
cmpsl
cmpsl
je
aad
dec
iret
ljmp
mov
jle
shrb
jo
xor
add
pop
push
jno
jle
mov
push
inc
sar
shl
ss
enter
xchg
push
lds
aaa
mov
test
add
movsb
inc
in
cmpb
shlb
jecxz
mov
das
sbb
xchg
mov
orl
push
ret
fwait
cmp
cmp
testb
test
and
bnd
and
adc
es
push
cmpsl
push
std
mov
ja
addr16
jle
addb
les
xor
arpl
test
les
aaa
jne
pop
scas
bound
mov
lret
popf
outsl
mov
aad
insl
lahf
cmpsb
push
ljmp
dec
daa
daa
pop
adc
shlb
mov
xchg
test
outsb
lret
ret
lret
or
inc
aam
aas
js
xor
xchg
xchg
xchg
jmp
mov
andl
sub
push
aad
fimull
cs
lahf
mov
pop
sbb
and
fdivrs
xchg
cwtl
push
cmp
jecxz
mov
dec
pop
call
call
inc
inc
dec
xor
cs
insb
add
aaa
fadds
inc
rcll
imul
inc
dec
xor
lahf
decl
jmp
test
and
addb
jecxz
mov
pop
in
jge
das
ss
cwtl
or
shll
push
mov
nop
cmpsl
decl
loopne
fwait
data16
pop
or
outsb
lret
inc
clc
jne
arpl
xchg
mov
rorl
jbe
dec
add
add
cmp
in
jmp
fimuls
and
adc
add
cmp
je
xor
in
aas
sub
cwtl
icebp
mov
xchg
lret
jp
mov
jns
les
xor
cwtl
fwait
idiv
ret
lcall
jle
daa
icebp
xor
add
loopne
in
scas
push
pop
aaa
adc
js
fs
mov
push
cmp
les
fisttpl
add
pushf
pusha
jmp
pushf
lea
call
pusha
pusha
lea
jae
bt
cmc
test
stc
sub
call
add
movsbl
movl
bsf
pusha
cmp
mov
stc
cmp
jmp
sahf
insb
gs
jbe
outsb
adc
adc
andb
ja
ja
mov
out
jbe
add
lahf
pusha
fildl
js
mov
xchg
repnz
pop
aam
mov
mov
pop
and
xlat
das
out
and
xlat
pop
popf
cs
icebp
gs
mov
mov
es
subl
ficoml
sbb
adc
mov
aas
adc
rol
inc
aaa
push
pop
push
xchg
xor
jecxz
mov
fbstp
xor
dec
or
inc
cmp
mov
insb
int3
mov
jge
shl
enter
fwait
xchg
out
mov
cmpsb
mov
cmp
jmp
or
jnp
bound
xor
inc
pop
fstpt
inc
jae
adc
imul
call
icebp
jmp
dec
rorb
pop
xchg
ficoms
mov
jne
jbe
inc
pop
jae
mov
cld
neg
jb
data16
sbb
cld
movsl
mov
mov
jno
xchg
inc
movl
arpl
jae
push
jg
xchg
sub
cmp
or
hlt
mov
rcrl
push
cmp
add
lret
and
imul
mov
sbb
xor
cwtl
jg
dec
cmp
sub
js
inc
or
sbb
cld
cmc
push
cli
xchg
rclb
pop
sub
xlat
movsl
lret
pusha
push
push
push
insb
ljmp
xor
inc
inc
stos
cmp
lock
imul
cmpsb
cmpsl
sub
inc
aaa
lods
in
movsb
enter
cmpb
imul
cli
dec
movb
mov
xor
sub
mov
mov
sub
pop
ja
mov
mov
imul
push
mov
les
idivl
sbbl
xchg
ficomps
imul
in
sbb
lds
fbstp
in
sbb
les
test
jnp
outsb
xchg
imull
fiadds
mov
in
cmp
subl
shlb
push
add
call
push
test
inc
xchg
out
jle
es
push
int
nop
mov
call
stc
loope
int3
jge
cmp
in
mov
ret
mov
enter
add
std
scas
cmp
add
and
cmc
sub
jmp
jmp
call
adc
aaa
xlat
out
mov
xchg
adc
dec
rcrl
sub
sbb
push
es
mov
sbb
test
inc
xchg
mov
jo
xchg
add
loop
mov
mov
out
mov
xchg
add
dec
sub
fcmovbe
inc
pop
or
fwait
gs
icebp
inc
lds
mov
jge
sub
dec
popa
xlat
ret
push
popa
out
rol
inc
aaa
add
cmp
shll
mov
jge
repnz
mov
stos
mulb
imul
dec
ljmp
neg
lea
adc
std
or
push
dec
lahf
cli
data16
cmp
dec
mov
cli
loop
pop
addr16
lret
hlt
movsb
out
jmp
adc
int3
pop
inc
adc
and
sar
stos
pop
or
inc
or
sbb
and
mov
pop
mov
mov
sar
pop
fsubrs
jmp
lea
ret
add
lods
les
pop
cmpsl
cmp
and
mov
fwait
out
dec
mov
mov
scas
xlat
aaa
dec
clc
add
pushf
mov
jno
fidivs
pop
imul
sub
inc
mulb
cld
jbe
mov
add
or
pop
push
jno
mov
xchg
push
pop
int3
xchg
adcb
les
push
xchg
cmp
inc
cmpb
xchg
or
daa
cmp
inc
mov
fldl
or
lret
dec
stos
test
jg
les
dec
xor
push
icebp
test
inc
fldenv
jecxz
imul
jns
jl
lahf
out
add
cmc
lock
loop
or
mov
ss
push
mov
addr16
or
test
or
mov
push
scas
push
xchg
pushl
idivl
es
mov
dec
test
movsb
ret
mov
xchg
scas
pop
les
outsb
pusha
les
imul
test
sbb
int3
cmpsb
and
pop
mov
movsl
sub
fiaddl
add
movl
jmp
popa
pop
stos
ret
inc
aaa
sub
dec
jge
xor
stc
movsl
cltd
shlb
mov
sub
and
jns
stos
mov
pop
add
js
aad
jnp
and
jne
cmp
outsl
add
or
shll
in
incl
outsb
addr16
repnz
icebp
xchg
into
mov
mov
fmulp
jl
jecxz
xorl
sub
addb
sbb
testl
shlb
dec
cs
popa
sti
adc
pushl
rol
mov
stc
movb
neg
jmp
pushf
bt
test
pushf
lea
je
call
call
pushf
mov
mov
pusha
pusha
push
pushl
ret
push
push
rep
movzbw
pushl
mov
pusha
push
push
push
lea
jmp
data16
cmc
roll
sub
nop
in
push
or
test
xchg
jb
mov
mov
jmp
fldt
negb
ss
pop
pop
les
mov
lods
mov
mov
mov
test
dec
cli
add
pusha
jmp
sbb
jge
out
fsts
fists
fstpl
call
gs
filds
or
fnstcw
xchg
popf
cmpsl
mov
pushf
aas
jle
xor
repnz
adc
xchg
scas
pop
andl
rcrb
mov
jle
pushf
int
mov
test
call
xor
mov
inc
aaa
and
test
popf
roll
mov
mov
pop
scas
shl
dec
bound
mov
push
mov
imul
xlat
inc
mov
inc
add
jnp
mov
test
add
cmp
mov
rolb
int3
xor
add
int3
jo
push
fisubs
cmc
push
das
pop
push
jns
mov
xchg
mov
jge
popf
out
in
and
mov
lods
inc
cltd
mov
ja
fs
lcall
roll
and
dec
or
push
stc
mov
cmc
jmp
adc
roll
xlat
cmp
pop
out
cmpsl
adc
repnz
fisubrl
dec
adc
and
dec
out
jne
cmpb
dec
ljmp
pop
fucomip
add
pop
and
xchg
cmp
addr16
or
jecxz
dec
fiaddl
mov
mov
cmp
cmp
inc
jle
ljmp
mov
inc
or
fnstsw
jb
or
xchg
ljmp
jbe
jb
stc
mov
xchg
shlb
lea
xor
lahf
sbb
daa
pushf
clc
xor
aad
int
jnp
daa
cwtl
push
wbinvd
sbbb
push
lahf
daa
in
add
sub
aad
ljmp
insb
aaa
pop
xchg
inc
pushf
test
leave
xor
in
sbb
sub
and
aas
sbb
push
pusha
pop
jmp
pusha
cmp
call
repnz
inc
aaa
lds
push
xor
loop
outsb
data16
cmpsl
and
hlt
in
stos
imul
stc
lret
sub
jbe
ss
lds
fs
subl
mov
xor
mov
repz
fmul
nop
pop
push
xor
mov
daa
lock
cmp
mov
inc
scas
pop
mov
das
mov
mov
mov
mov
dec
mov
mov
mov
data16
and
or
jmp
idiv
xchg
jae
mov
xor
jno
adcl
or
mov
int
aas
xchg
xrelease
fnstcw
leave
hlt
jbe
ljmp
scas
push
pop
mov
dec
or
movsl
pusha
rorl
dec
scas
mov
cmp
ja
and
jg,pn
inc
lahf
scas
mov
daa
push
outsl
and
adc
fcoms
nop
scas
in
es
pop
fwait
push
pusha
rclb
adc
cmp
jo
inc
stos
mov
not
lods
clc
sub
jmp
xor
mov
xor
fscale
jno
mov
inc
jnp,pn
imul
out
mov
call
sbb
dec
in
mov
mov
xlat
pop
ret
xor
test
mov
jl
fwait
stos
inc
stos
aam
and
mov
in
out
clc
sub
shl
fstp
lock
xor
xchg
addr16
jg
ret
in
mulb
movb
dec
mov
mov
or
jns
test
stc
jnp
addr16
testb
lods
mov
or
bt
sub
clc
sub
jle
pushl
push
cmp
pushf
pushf
lea
ja
shl
sub
mov
sub
xor
sar
add
rcl
add
bsf
stc
cmp
bsf
mov
shr
pusha
inc
clc
mov
jmp
and
iret
mov
lcall
into
or
xchg
push
jns
gs
xor
js
xlat
clc
inc
pushf
pop
vfnmadd231ps
test
pop
cli
call
call
bound
shlb
push
imul
mov
out
test
add
int3
sti
push
out
sub
sbb
mov
ret
inc
mov
rol
scas
pop
adc
out
fists
mov
leave
xchg
imul
and
cmp
mov
insb
sbb
daa
orl
mov
xor
icebp
in
sbb
push
idiv
adc
in
outsl
aad
pop
dec
xchg
stos
xchg
sub
repnz
sub
xor
cs
mov
xchg
xchg
push
in
xor
mov
xorb
cmp
or
push
out
jne
push
jb
xchg
sbb
adc
pop
mov
and
jne
dec
movsl
mov
and
inc
rcl
xchg
dec
lea
stc
stc
mov
and
add
sar
shr
mov
pusha
mov
and
cmp
mov
call
or
push
movb
push
lea
je
push
ror
rol
sub
clc
bts
stc
lea
js
mov
test
daa
cmp
pusha
mov
pusha
or
shrd
shr
lea
btc
xor
or
clc
mov
cmp
bt
or
pusha
mov
pusha
pushl
lea
je
xchg
pushf
add
clc
movzbw
sets
sub
cmp
shr
shld
mov
btc
movzbw
btc
or
add
shrd
add
lea
shrd
rol
shld
mov
bt
shr
bt
jmp
xor
loop
inc
aaa
repz
mov
inc
ret
out
cmp
fldt
movsb
arpl
out
inc
insb
push
pop
pop
sarb
dec
iret
cwtl
mov
pop
lock
das
cmp
adc
xchg
cmp
pop
fwait
sahf
mov
cmpsl
in
outsl
push
or
pop
enter
fistps
and
inc
mov
add
jno
xor
jno
gs
xor
cmpsb
scas
push
leave
sub
addb
mov
jo
mov
or
insb
lock
dec
mov
xor
mov
dec
xlat
xchg
push
dec
pop
jnp
ficompl
push
out
xchg
and
cld
inc
mov
das
mov
jno
scas
add
clc
lock
or
and
fs
add
pusha
test
jne
repnz
je
cmp
lcall
and
jae
pop
fnstenv
lds
inc
cmp
xchg
call
stc
imul
pusha
test
stc
movw
add
pusha
mov
push
lea
jmp
jnp
nop
mov
jo
test
mov
movsb
jo
stos
popa
imul
pusha
arpl
inc
das
adc
inc
lret
dec
out
mov
aam
outsl
nop
mov
sbb
leave
test
insb
and
jo
jecxz
mov
je
ret
aaa
add
fs
fwait
cmp
jp
dec
xor
out
adc
jl
xchg
push
cmc
sub
scas
push
adc
popa
test
push
or
dec
push
sti
pop
adcl
add
pop
mov
jae
adc
xlat
mov
pop
repnz
aam
push
imul
mov
xchg
cltd
xor
imul
daa
mov
in
je
sti
xor
insl
popf
mov
enter
test
rorb
outsb
cs
pop
add
lcall
inc
push
pusha
pop
test
sbb
out
sbb
pop
loope
xchg
adc
xlat
out
or
mov
dec
rcrl
ret
xchg
pop
or
aad
iret
lret
xlat
jbe
adc
and
les
dec
mov
loop
jp
imul
divb
sbb
call
test
outsl
call
mov
adc
call
xor
jmp
aas
xchg
adc
jp
cli
cmpsb
out
cli
inc
add
and
sub
cmp
pop
mov
les
insb
lock
add
test
ljmp
dec
les
and
add
stos
push
mov
push
loop
andl
push
rcrb
inc
outsb
inc
jae
jne
daa
adc
xlat
mov
adc
inc
or
mov
outsb
ds
sahf
or
int
insb
mov
mov
rcrb
push
imul
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
aaa
sti
adc
in
sarb
pushf
xor
add
add
mov
jbe
aad
sbb
stos
mov
push
pushf
xlat
or
jns
push
jo
mov
aas
mov
lods
push
cmpsb
inc
or
cwtl
cmc
mov
mov
cmovns
xor
adc
dec
jl
pop
mov
les
sub
rclb
scas
cs
out
stos
push
or
pop
push
imul
adc
aas
les
pusha
jnp
cmp
aaa
push
dec
mov
ljmp
sahf
inc
into
pop
lods
test
insb
int
ljmp
mov
and
mov
int
mov
jb
out
les
sbb
aaa
mov
push
dec
and
jb
rcrl
sarl
xchg
daa
lock
popa
sahf
pusha
shrl
jb
fisttpl
pop
sbb
subb
rcrl
daa
aaa
popf
ret
jg
cmp
xchg
sub
xchg
dec
mov
lods
daa
mov
int
dec
loopne
push
mov
aaa
or
hlt
xor
fdivs
adc
or
mov
fwait
cmp
jle
xchg
cmp
cwtl
push
enter
or
jae
es
mov
lcall
nop
int3
and
in
iret
out
mov
sub
pop
or
cmpsl
fsts
sub
pop
test
mov
push
aaa
jle
add
mov
aaa
push
dec
test
cmp
icebp
fnsave
ss
dec
mov
push
mov
mov
icebp
xchg
sti
lods
gs
stos
mov
inc
xchg
int3
nop
pop
mov
push
hlt
push
stos
dec
jmp
jbe
mov
and
mov
xlat
push
movsb
inc
xchg
das
scas
and
and
jmp
sub
jle
adc
imull
mov
in
push
xchg
cmp
xchg
inc
adcl
xchg
call
sbb
shlb
or
in
das
pop
adc
aaa
xor
adc
roll
mov
icebp
dec
push
pop
and
or
dec
fildl
adcb
cmp
lods
lahf
scas
or
jmp
push
and
dec
xchg
test
movsl
cmp
sub
mov
test
aad
inc
fs
push
cwtl
cwtl
dec
push
jp
pop
rcrl
xlat
inc
fwait
int
or
inc
push
lret
aas
sbb
inc
addl
mov
aaa
gs
sbb
mov
cwtl
imul
adc
sbb
or
aad
out
jno
jae
pop
mov
dec
sub
imul
sbb
xchg
fst
nop
cmpb
sbb
repnz
nop
imul
divb
dec
or
ja
outsb
aaa
in
fistps
call
sbb
adcb
xchg
mov
dec
repz
mov
pop
adc
xor
in
pop
add
pop
mov
xchg
ss
fistpll
insb
fldl
orl
push
or
stos
inc
mov
inc
inc
test
rcrb
insl
movsb
xor
call
mov
arpl
arpl
inc
mov
inc
movsl
movsb
adcb
push
xchg
in
mov
fsubs
movsb
adc
push
scas
inc
pop
mov
push
ss
out
dec
jecxz
xor
jns
test
and
jmp
or
and
popa
lret
orl
fwait
int3
and
pop
add
aad
inc
xor
or
nop
push
jmp
inc
out
mulb
data16
dec
lret
sub
shrb
add
out
mov
andl
jecxz
mov
jbe
mov
mov
jae
xchg
loop
jl
cli
lret
imul
lock
call
pop
popf
sub
je
fxch
sbb
and
fdivl
push
loop
iret
push
sub
insb
mov
js
loopne
leave
aam
inc
xchg
push
or
enter
lahf
fldt
scas
add
in
stc
nop
mov
movl
add
fcoml
popf
dec
fwait
xor
xchg
mov
repz
pop
test
mov
xor
outsl
in
cmp
cld
xchg
outsl
push
jmp
xchg
xchg
push
or
imul
cmp
and
xchg
loope
add
ficoms
repz
push
punpckldq
aaa
push
cmp
jmp
jb
rorl
pop
imul
xchg
xchg
test
jp
add
cmpsb
cmp
xor
inc
test
jmp
out
sahf
xor
xchg
stos
in
insb
pop
push
cmp
jl
mov
fldcw
or
xor
and
and
cltd
gs
scas
mov
int
enter
aaa
iret
lret
idivb
and
sbb
dec
cmp
loope
mov
or
jo
adc
add
lds
int
mov
adc
push
push
pop
mov
scas
stos
sub
and
jbe
lea
sub
daa
add
roll
cs
and
movsb
xchg
aas
cmp
in
in
inc
add
adc
pop
xchg
or
pop
cmp
fs
mov
or
xchg
mov
push
scas
sub
pop
lret
inc
mov
aaa
xchg
stc
fstpl
stc
popf
jns
rcll
jb
cmpsl
sbb
pop
out
sbb
fwait
addr16
adc
movsl
in
pop
test
cld
adc
cmp
jb
and
mov
lock
cmp
inc
in
in
aad
dec
movsb
cmpsl
imul
mov
and
add
jp
mov
imul
jle
test
sub
inc
jl
pop
jecxz
inc
loope
lds
insb
shll
mov
call
lahf
pop
fs
aaa
push
push
mov
dec
mov
jecxz
add
pop
inc
mov
mov
mov
push
vrcpps
push
jp
mov
andb
xor
iret
lock
or
lods
sub
test
push
imul
loop
cmp
shlb
scas
movups
arpl
add
jp
sbb
push
andl
ds
mov
sbb
dec
xor
sti
aaa
iret
ljmp
shlb
stos
mov
sbb
fwait
daa
bound
movsl
mov
test
sub
outsl
leave
xor
jge
and
ljmp
or
mov
adc
pushf
movl
jmp
cltd
cmp
arpl
jae
mov
arpl
imul
addr16
icebp
jno,pt
mov
sub
adc
xchg
in
mov
jl
pop
pop
cwtl
jecxz
mov
mov
inc
add
divb
incl
inc
mov
repz
bound
add
mov
mov
cld
enter
test
clc
fcompl
ds
daa
push
dec
rorb
andb
outsb
jnp
jmp
sbb
rorb
add
add
add
movw
pushl
push
lea
jmp
sbb
cmpsl
or
adc
jmp
lea
jae
push
add
call
sub
cmpsb
cltd
lds
aad
std
sub
cltd
fsubrl
ret
in
pop
or
sbb
imul
dec
inc
dec
mov
mov
adc
mov
xchg
push
nop
sub
cld
push
xchg
xor
ret
shrb
mov
add
push
js
repz
cmp
fdivrp
jns
and
push
mov
mov
in
addr16
and
push
test
in
dec
in
pop
cmpsb
loope
sbb
inc
aad
in
xchg
or
adc
cwtl
jbe
in
in
xchg
cltd
jmp
subl
add
cvtpi2ps
sub
fscale
sbb
adc
cld
fs
cld
xor
movb
aam
pop
cmp
pop
hlt
js
sbb
dec
mov
adc
test
mov
in
sbb
jle
scas
inc
aaa
xchg
add
cmp
scas
cli
jbe
rorb
push
je
ljmp
jp
sub
add
jo
inc
jo
cmp
std
push
mov
xor
insl
add
sbb
push
mov
add
sbb
imul
mov
insb
xchg
inc
mov
pop
xchg
mov
addl
sbbb
leave
inc
nop
cli
je
call
cli
pushf
outsl
scas
xor
pop
lahf
pushf
cli
enter
aaa
fstpl
jp
mov
xor
mov
repnz
in
dec
lds
es
ss
imull
ss
orb
int3
ljmp
cmp
les
sbb
rcrl
add
adc
outsb
test
in
inc
push
push
lock
sahf
cmp
hlt
mov
rolb
mov
aam
mov
add
clc
add
cmp
lahf
stos
cwtl
sub
loopne
fsubrs
push
les
je
lds
pop
mov
inc
fildl
bound
loop
jecxz
cs
int
lcall
add
push
jl
daa
dec
mov
pop
test
xor
pushf
rol
push
jp
cmp
inc
int
or
jb
imul
xor
lahf
sarl
psubd
stc
or
inc
pop
mov
sbb
jnp
cmp
sarb
in
icebp
orl
xor
push
lcall
int3
mov
movb
call
call
aaa
andb
xor
ljmp
in
jmp
push
jl
push
movsl
pop
jno
subl
and
sahf
inc
dec
gs
dec
sub
mov
daa
lret
aas
insb
nop
xchg
test
lock
sub
rclb
arpl
xor
cmp
incb
fwait
inc
add
dec
ljmp
jg
sub
cmp
push
sub
pop
sti
push
into
mov
sbb
mov
int
shll
sarl
cmp
sub
inc
mov
aaa
pop
fidivrs
push
jns
std
pop
imulb
adc
fwait
xchg
mov
bnd
sub
dec
mov
ds
adc
out
outsl
cmp
mov
xor
aas
adc
test
dec
jg
inc
jns
shlb
cwtl
iret
pop
adc
movsb
pop
popa
fwait
mov
push
jmp
pop
mov
aad
add
loopne
sub
cmpsl
decb
xchg
stos
inc
aaa
mov
mov
jno
dec
and
into
sub
test
mov
pop
pop
xor
xor
ljmp
add
ret
pop
jecxz
cmp
cltd
in
adc
adc
rcll
je
loop
fistps
xor
loop
int
dec
adc
lods
mulb
fbld
or
cltd
repnz
cmp
pop
pop
jnp
xchg
ficoms
and
mov
int
pop
mov
mov
jbe
rcll
orl
xor
outsb
xchg
leave
push
mov
leave
or
lret
filds
pop
lret
setnp
daa
fildl
xchg
loop
and
cmp
imul
stc
pop
or
xchg
les
stc
mov
mov
pushf
mov
dec
scas
imul
rclb
mov
insl
sbb
test
jecxz
mov
fisubrs
shlb
lcall
rcrl
cmpsl
call
je
stos
inc
aaa
pop
movsb
pusha
adc
pushf
sub
loopne
loopne
lock
popf
insl
mov
fnstsw
mov
sbb
rorb
jecxz
push
cmc
jnp
fs
iret
in
jne
jo
cld
jp
vcvtsd2ss
push
add
ljmp
sahf
sarl
jle
xchg
mov
xor
or
loope
pop
les
dec
and
movsl
cs
outsb
mov
push
aad
imul
jo
mov
rdtsc
add
fs
call
push
call
movw
lea
call
jmp
out
shrl
sub
movsb
pusha
in
dec
mov
loopne
rorb
pop
ret
add
mov
jg
pop
into
out
adc
into
pop
fmuls
push
and
xor
movsl
jne
push
inc
repnz
push
xchg
lahf
ret
xchg
js
out
inc
pop
jl
cmpsb
cmpsl
xchg
test
insl
mov
xor
mov
fisttpl
push
push
xchg
inc
cmpsb
xchg
call
push
push
leave
mov
sub
adcb
jo
dec
sbb
dec
int
iret
add
lcall
popf
sbb
and
mov
fcomps
pusha
loopne
mov
repz
pop
mov
in
data16
mov
sti
and
mov
out
das
fsubs
pusha
mov
sahf
stos
mov
push
test
pop
jno
and
sbb
int3
jg
aaa
in
mov
js
mov
or
bound
in
cmp
add
orb
jmp
push
adc
sbbl
pop
inc
jo
sbb
or
add
jmp
push
call
pusha
pusha
adc
movb
call
pop
adc
cmp
push
in
cmp
adc
jl
fldenv
and
fbld
lcall
testl
cmpsb
ret
mov
ja
adc
notl
sub
out
sub
adc
clc
cmp
imul
xchg
dec
or
jmp
sub
mov
hlt
je
int3
xchg
pop
and
stos
dec
push
ficoml
adc
arpl
xor
hlt
stos
daa
cmpsl
inc
aaa
mov
adc
xor
xor
rcrl
sub
sbb
cmp
sbb
pop
adc
lds
aaa
pop
inc
imul
mov
sub
inc
mov
push
ret
rcrb
inc
outsb
mov
sub
mov
add
mov
pop
or
fstpt
ljmp
mov
imul
dec
ret
push
mov
cmp
insl
mov
in
jp
daa
dec
fimull
aaa
push
pop
cltd
add
test
mov
insl
jno
push
xchg
lods
es
es
fiadds
inc
outsb
cli
sahf
cmp
inc
pushw
and
inc
mov
push
notl
push
je
pop
adc
adc
mov
outsl
ret
or
xchg
dec
sti
sub
and
push
mov
or
out
mov
add
inc
cmp
daa
ret
or
imul
imul
ljmp
cmpsb
inc
aaa
xchg
ret
sahf
or
sbb
inc
fwait
cmp
jae
cmp
lea
popa
sub
cmp
or
pop
pop
inc
pop
add
scas
mov
jecxz
xor
lock
add
cmp
test
pop
out
call
jmp
mov
lret
mov
mov
jl
or
mov
push
lods
scas
stos
mov
xlat
adc
push
adc
lods
dec
loope
popf
das
aam
out
xor
and
movsl
inc
aaa
fisttps
mov
cwtl
adc
mov
mov
scas
stos
test
hlt
daa
movsb
xlat
adc
pusha
fcoms
test
and
sbb
lds
push
into
cmp
mov
mov
cwtl
std
insl
xor
push
leave
subb
test
sub
adc
popf
push
sub
push
orb
jl
shrb
sub
lret
sub
cmp
ret
insb
jg
sub
pop
push
mov
jbe
cmc
fnstcw
aad
dec
adc
pop
sub
xchg
movsl
call
scas
call
popa
aas
andb
inc
mov
and
jo
dec
aam
test
mov
or
pop
xor
xchg
mov
push
mov
adc
popf
pop
jbe
add
mov
sub
rol
fxch
sbb
jnp
lret
add
inc
adcb
mov
add
jbe
or
jae
sarl
iret
dec
test
js
or
jno
lods
pop
push
ret
push
scas
rorl
pop
fstl
mov
iret
imul
aaa
out
das
and
lahf
imul
daa
mov
xor
mov
pop
and
ljmp
neg
dec
mov
test
mov
or
sbb
mov
inc
inc
add
jno
mov
scas
shll
mov
int
xor
sub
push
lods
dec
mov
loop
daa
aad
ss
ret
aam
je
jnp
neg
pop
aad
inc
mov
push
test
dec
ret
out
pop
repz
movsb
inc
aaa
outsb
push
fiadds
adc
pusha
push
pop
stc
aad
inc
xchg
and
cltd
or
shrl
outsb
add
inc
mov
cld
inc
mov
test
push
dec
loop
dec
aam
fwait
jno
pop
mov
or
rorb
iret
xchg
addr16
xor
arpl
push
mov
dec
movsb
inc
aaa
outsb
rcrl
or
movsl
in
fs
out
inc
push
test
jmp
jg
inc
add
mov
mov
jmp
mov
into
mov
or
rorb
mov
xchg
and
inc
sbb
hlt
or
repnz
jp
push
mov
stc
stos
cmpsb
repnz
neg
outsl
enter
daa
cmp
or
mov
sub
test
xchg
repnz
rolb
sbb
pop
imul
lock
push
imul
or
movw
mov
movsbw
pop
pusha
pusha
pushf
pushl
ret
and
lods
mov
sbb
inc
es
sbb
sbb
inc
loope
adc
sbb
rcr
scas
loope
jae
rorb
fidivrl
and
out
cmpsl
scas
xlat
add
mov
cmpsl
xor
push
cli
pusha
jmp
lods
out
inc
mov
inc
aaa
lods
mov
rorb
movsb
sbb
lods
push
mov
std
ss
insb
iret
xchg
pop
jns
ljmp
and
pop
adc
or
out
mov
cmp
cmp
add
mov
mov
mov
push
sbb
inc
jmp
sub
pop
lcall
jae
dec
and
jnp
and
hlt
fbld
sub
push
jle
push
pop
pop
xor
and
ljmp
and
out
fistl
and
sbb
fsubrs
adc
jne
mov
cld
jg
pop
pop
push
xchg
int3
cmp
or
rcll
pop
gs
jg
xor
mov
jmp
cmpsl
fiaddl
add
sub
sarl
inc
jl
and
inc
shr
xchg
js
test
and
sarb
mov
gs
jp
pop
stc
adc
outsb
xor
repnz
aam
ss
in
cmpsb
repnz
stc
jg
out
pop
ret
popf
lods
cmp
push
cmpsl
cmpsl
dec
push
cwtl
aam
outsb
push
data16
and
mov
add
loop
adc
fistl
sahf
shll
sbb
es
jns
dec
pop
push
xor
inc
jle
je
xor
popf
sbb
jmp
rcll
push
gs
dec
and
mov
push
ret
inc
jp
adcb
jbe
lea
jne
push
pop
inc
in
rorb
xchg
dec
in
push
and
mov
ficomps
out
lock
add
addl
jb
pusha
pop
outsb
fimull
out
add
add
lods
inc
adc
mov
nop
insb
xlat
insl
repz
dec
xchg
or
pushf
mov
sub
lods
das
jns
push
and
shrl
mov
aaa
xchg
xchg
adc
fdivr
cmpsl
xchg
movsl
lret
pop
xor
ja
pop
pop
lret
cmp
test
cmpsl
lock
and
jp
mov
cmp
jns
inc
inc
ret
and
movsb
lea
in
insb
ret
aaa
sti
push
pop
add
xchg
cmp
fsubrl
aaa
pop
fsubrs
cmpsl
loop
mov
xchg
imulb
lods
xchg
pop
out
repnz
mov
push
shlb
in
xor
aaa
fisubrl
stc
dec
jno
or
push
xchg
lcall
jmp
or
std
jbe
lfs
push
ljmp
dec
mov
adc
das
lahf
sbb
aas
push
mov
neg
adcl
lods
adc
jne
dec
sbb
push
inc
outsb
outsb
loop
scas
pop
mov
int
and
fsubr
xor
mov
shlb
fcmovne
xchg
or
mov
mov
sub
enter
or
xor
dec
adc
imull
and
shr
mov
scas
repnz
mov
in
add
dec
xchg
inc
push
aas
push
cmpsb
outsb
jmp
rol
pushf
adc
pop
arpl
jl
test
outsb
imul
ret
lods
in
ss
mov
cmp
push
int
mov
clc
mov
lods
adc
mov
mov
enter
into
fsubrs
fwait
aad
xchg
inc
aaa
cmpsl
lcall
adc
push
cmpsl
cmp
sbb
rcrb
push
mov
adc
imul
xchg
and
cmp
cmp
pusha
and
jp
cli
pop
mov
inc
in
xchg
aaa
aaa
nop
dec
add
mov
clc
mov
xor
pop
and
sahf
xlat
sbb
ret
cmc
imul
ret
mov
shrb
push
dec
int3
sub
ds
fistpl
sarl
mov
clc
jae
cmp
mov
adc
lock
sahf
inc
aaa
inc
jae
arpl
stos
out
dec
ret
movnti
inc
in
cmp
aas
lods
popf
xchg
out
pushf
lock
jo
and
xor
in
aas
push
mulb
xor
sub
clc
jae
jecxz
daa
mov
icebp
clc
cwtl
xor
jecxz
push
pushf
jb
call
pop
push
add
add
jge
cli
pop
test
in
scas
sub
sbb
pop
jmp
loopne
inc
jmp
ret
aas
lret
pop
adc
bswap
push
sarb
xchg
js
adc
test
icebp
lock
lret
out
mov
lret
stc
sbb
xlat
cs
mov
sub
jl
cltd
mov
movsb
cmp
pop
jp
xor
leave
sbb
repz
or
pop
inc
fisubl
sbb
sub
fsubrs
je
xchg
add
or
cmp
cli
mov
cs
dec
imull
push
inc
push
xor
cs
insb
add
test
add
xchg
ja
xchg
cmpsl
pop
adc
xor
dec
pop
jle
push
add
cmp
push
inc
push
jb
dec
or
repnz
pop
add
xchg
inc
in
sbb
and
test
jl
jg
test
xchg
nop
xchg
imul
cwtl
jecxz
pop
push
mov
lods
lods
mov
arpl
jae
fldt
xor
xchg
aaa
lcall
call
dec
dec
push
push
xchg
and
int
xchg
adc
ja
fidivrs
repnz
out
jmp
pusha
pushf
pushl
stos
not
not
pushf
mov
mov
push
lea
call
pusha
lea
jae
stc
jmp
clc
clc
pusha
rol
push
rol
shl
bt
neg
jmp
mov
lea
ja
pushf
imul
bt
cmp
bt
add
pusha
pushf
mov
movb
lea
jmp
lea
jbe
btr
adc
mov
call
lea
call
jne
clc
cmp
jmp
shl
add
cmc
stc
inc
neg
movl
jmp
not
movsbw
not
mov
pusha
movw
push
call
popf
pop
pushfw
inc
aaa
jo
pop
stc
lods
add
movsl
popa
fsubr
lahf
xor
data16
mov
fdivrl
lcall
pop
and
stos
pop
icebp
es
push
mov
cmpsb
mulb
jno
and
imul
or
pop
inc
arpl
ljmp
mov
jns
aad
push
es
mov
sbb
clc
inc
xor
lods
cltd
fmull
shlb
cmp
add
ds
loope
scas
sbb
cmp
shll
es
inc
sti
cmpsb
mov
call
call
sbb
pop
push
je
pop
push
imul
and
pop
jno
cmpsl
je
and
aam
push
xor
and
inc
cmpsb
clc
jne
pop
adc
xor
and
ja
push
shl
sub
movzbw
add
add
movsbw
btr
mov
not
jmp
pushf
jmp
movsl
pop
data16
inc
aaa
jo
in
dec
aad
std
jno
jmp
lods
imul
pushf
adc
push
stos
pop
push
dec
or
loopne
ja
adc
sub
cs
fdivrs
fcoms
or
mov
inc
leave
and
sub
mov
adc
imul
lret
mov
push
jmp
jne
in
or
cmp
adc
xor
adc
pushf
out
int
mov
push
push
pushf
lea
je
push
test
pusha
cmp
jmp
addr16
inc
jae
xchg
das
fwait
out
dec
pop
mov
jmp
lret
sbb
pusha
fsubrl
jae
xchg
push
mov
sbb
cmc
mov
jno
gs
sbb
dec
std
xchg
mov
sub
add
lods
adc
iret
ret
cmp
ret
adc
adcb
push
xchg
imul
dec
push
or
cltd
dec
jo
lea
mov
jmp
xor
pop
mov
push
xchg
jne
sub
mov
jecxz
push
xchg
loop
out
stos
shl
push
rcl
push
fwait
cltd
inc
aaa
cmp
mov
pop
out
or
push
aas
and
and
sub
xorb
jns
pop
ffreep
popl
pop
movsl
add
pop
movsb
xchg
sarb
lods
or
add
loop
xor
into
fnstsw
inc
and
in
daa
aam
pop
cmpsl
push
cmp
fwait
jg
and
xor
mov
jo
cli
add
fsts
test
flds
and
inc
cltd
sbb
mov
adc
jo
sub
movsl
movsl
cmpsb
xchg
push
decb
push
stos
push
jae
sbb
or
popf
lret
lock
or
testl
cmpsl
cltd
ret
mov
jl
lds
repnz
idivl
xor
cmp
out
test
pop
jb
push
push
stos
jb
sub
lock
cwtl
push
lahf
mov
mov
xchg
in
cmpsb
jo
pop
out
mov
imul
sub
sbb
popa
sub
int
mov
mov
mov
pushl
ret
add
dec
outsl
arpl
inc
jb
add
mov
inc
aaa
and
sbbb
call
in
arpl
mov
adc
mov
sahf
lahf
push
std
rorl
fs
add
jmp
mov
inc
cmpsl
clc
sub
movsb
pop
cmp
pop
mov
push
bound
add
cmp
mov
jno
or
leave
sub
lahf
xchg
xor
xor
ret
push
pop
pop
es
jno
movsb
std
sbb
cmp
sti
dec
scas
and
gs
adc
mov
mov
mov
aaa
inc
aas
pop
xchg
lahf
jnp
or
jne
lret
jp
insb
adc
clc
into
pop
sbb
andl
lret
push
lods
lahf
stos
push
mov
popf
loopne
dec
push
shll
test
mov
or
fdivrl
js
adc
adc
pop
xor
aaa
sub
sub
repnz
call
sbb
jnp
dec
mov
fistl
xchg
jecxz
hlt
push
mov
xor
push
lcall
std
mov
dec
ja
lds
bound
mov
xchg
push
ret
in
test
push
inc
or
lds
pop
push
xor
pusha
fdivs
and
mov
push
addr16
dec
adc
mov
dec
mov
lock
popf
cs
mov
gs
mov
inc
jg
loope
xlat
hlt
das
push
hlt
cmc
dec
mov
aad
pop
lcall
mov
ret
cmp
pop
imul
and
xchg
inc
aaa
cmp
fsubrl
fs
and
xchg
pusha
adc
jne
pop
dec
pop
pop
mov
repz
sub
test
enter
jmp
out
out
ljmp
fwait
insb
xchg
mov
clc
testl
adc
cmp
mov
adc
mov
int3
jle
and
loopne
adc
icebp
icebp
sbb
frstor
xor
jmp
jne
pop
xchg
inc
aaa
scas
ds
push
fiaddl
dec
pop
pop
hlt
jge
scas
push
adc
out
sbb
mov
adc
mov
inc
mov
jns
neg
dec
xor
mov
lock
push
mov
in
inc
sub
add
data16
pushf
das
pop
mov
mov
jae
sub
outsb
mov
xor
add
xchg
out
cmp
scas
cmc
out
pop
pop
je
jmp
xor
pusha
mov
jmp
mov
mov
pop
jnp
inc
pop
adc
jg
fbld
mov
and
sub
inc
shlb
mov
xlat
sub
mov
push
sbb
hlt
push
popl
fists
sbb
subb
ret
and
jle
dec
in
inc
xchg
out
xlat
and
pop
dec
lods
cmp
inc
push
lods
inc
lret
xchg
daa
int3
xchg
repnz
cli
ret
mov
add
lods
sahf
inc
mov
cltd
psllw
jg
cmp
call
pop
add
xchg
inc
aaa
add
inc
ficompl
pop
mov
lock
mov
daa
loope
push
pop
sbb
gs
cmp
movsb
xchg
incl
popl
shlb
loopne
cld
outsl
enter
int
dec
and
mov
dec
sub
pop
cld
dec
dec
ret
out
xchg
insb
ret
jle
cmp
dec
xchg
pop
loopne
cmp
adc
les
out
pop
jg
mov
adc
xor
lock
sbb
orl
adcb
call
aaa
add
xor
js
call
adc
cmp
xor
mov
jle
jp
out
sub
xchg
test
add
jns
sbb
lret
sbb
lods
push
pop
sbb
in
in
xchg
sbb
in
sub
loope
lahf
ret
xchg
addl
ljmp
xlat
or
push
cmp
loop
fs
addr16
mov
ficomps
testl
or
push
stos
sbb
push
lret
notb
insl
inc
int
xor
xor
or
jb
lock
inc
mov
add
and
fstpl
jne
fimuls
xor
push
push
mov
jl
lock
je
sub
daa
or
or
sub
and
stos
or
push
test
popf
jae
fsubs
nop
xchg
pushf
or
out
dec
pop
test
out
add
nop
test
inc
ljmp
stos
lods
sbb
jno
xchg
outsl
adc
and
xor
push
lea
movzbw
not
mov
pushf
lea
jmp
call
jmp
pop
or
xchg
inc
aaa
adc
mov
into
cmp
mov
cmpsl
stc
in
inc
cmpsb
xor
push
aas
nop
xchg
dec
fs
mov
mov
test
nop
and
or
jg
test
inc
das
daa
push
mov
loop
jnp
rorb
fwait
mov
sar
shll
fbld
add
push
mov
cld
pushf
call
lret
sub
xchg
inc
aaa
hlt
cmp
fldcw
rcrl
sub
push
xor
lahf
testl
iret
xchg
mov
mov
pop
mov
in
in
push
pminub
fs
adc
out
push
fsubl
outsb
dec
jg
ljmp
lods
shl
inc
mov
jmp
sub
addr16
pop
fldl
jns
pop
add
add
add
and
add
mov
add
add
add
add
add
add
sub
add
add
aas
xor
aas
test
aas
test
add
imul
insb
insb
add
mov
adcb
popf
sbb
sarl
cltd
std
push
mov
aaa
mov
mov
cld
fmuls
movsb
mov
sub
push
test
cmovg
mov
out
je
mov
mov
icebp
test
jne
inc
lret
cmp
dec
xchg
push
mov
sbb
out
iret
test
in
pop
xor
in
incl
pop
cmpsb
loopne
xchg
sbb
push
roll
stc
cmp
push
call
xor
lret
aaa
out
add
lea
sbb
iret
dec
das
inc
inc
nop
ds
push
int3
xor
sbb
imul
cmp
cmp
xchg
stos
push
mov
lcall
nop
in
insl
dec
push
mov
icebp
in
shlb
push
xchg
leave
or
mov
ret
mov
mov
negl
in
loop
push
xchg
adc
cli
fmull
shlb
fs
pop
outsl
imul
fnstsw
rorb
test
gs
icebp
test
gs
cmp
testb
iret
sbb
add
cld
mov
xor
mov
add
daa
add
xor
pop
jecxz
or
in
or
pop
or
jo
push
jbe
js
das
pop
daa
leave
cs
or
aam
xchg
loope
xor
cwtl
or
push
lods
ss
int3
mov
nop
push
sbb
or
push
dec
idiv
xor
add
push
xor
or
sbb
mov
xchg
fildll
pop
addr16
sub
mov
jge
dec
fiadds
mov
arpl
lds
xchg
out
pop
dec
mov
sbb
les
inc
lret
or
faddl
push
inc
sarl
mov
shll
mov
xchg
rcrl
ret
jo
insb
push
dec
stos
repz
xchg
repz
add
sar
popl
es
es
out
notb
cmpsl
arpl
or
sub
add
insl
adc
sbb
jns
aas
arpl
test
dec
ss
inc
and
sbbb
and
test
ret
and
fcompl
mov
jg
xlat
lods
inc
lret
lahf
sti
clc
cli
sub
xor
mov
test
gs
dec
dec
or
sub
xlat
and
jne
cltd
jae
das
pop
adc
sub
subl
decl
lea
jmp
xor
incl
aaa
mov
mov
mov
jge
imulb
insb
xor
orl
mov
lret
sub
outsb
or
and
call
or
sahf
push
aad
gs
pop
dec
mov
push
in
xchg
data16
jne
in
xchg
pop
lret
and
cld
lock
xchg
mov
xor
pop
push
or
enter
or
fsubl
popa
out
sbb
shl
arpl
pop
in
sbb
in
outsb
out
js
mov
fcmovbe
clc
or
pushf
cmpb
pusha
lea
jne
lahf
xor
mov
rol
pushf
mov
sub
and
adc
add
ror
and
add
jmp
pushf
push
pushl
lea
je
pushf
sub
clc
call
imul
dec
mov
mov
popf
and
es
adc
pop
xchg
jp
jp
mov
daa
fildl
ds
mov
daa
call
std
push
sub
xor
mov
xor
jp
ret
dec
cmp
jbe
clc
mov
lods
jecxz
mov
cmpsb
fsubs
jl
inc
ljmp
push
fnsaves
jmp
inc
aaa
outsb
shll
gs
mov
cmp
xchg
mov
fsts
test
lock
push
and
push
mov
psadbw
jbe
cli
jb,pn
leave
lea
push
fisttps
mov
outsb
iret
adc
dec
ret
cmp
addl
orb
or
mov
and
cltd
std
add
and
in
imul
imul
push
push
enter
lcall
les
lahf
sahf
pop
add
mov
cmp
ss
xchg
lahf
pop
out
int3
cmpsb
push
add
repnz
cmp
cli
pop
not
add
shld
shr
sar
mov
push
add
test
cmp
cmc
mov
movzbw
adc
mov
bt
cmp
movl
lea
jbe
add
cmp
mov
bt
shr
add
sar
xadd
mov
inc
call
lods
stc
sub
pushf
call
sti
roll
inc
aaa
setae
and
or
pop
lcall
cmp
jns
fistl
xor
xor
frstor
cli
xchg
mov
movsldup
push
xchg
add
pop
mov
test
in
adc
add
rorl
mov
xchg
shl
mov
icebp
push
lahf
xor
cmp
out
jnp
rorb
pop
std
mov
xchg
imul
aaa
outsl
mov
dec
shll
cmpsl
rcrl
cmpsl
cmp
lcall
add
les
dec
sbb
cwtl
jae
adc
add
adc
aas
out
mov
rcr
cmp
fildll
fadds
pop
adc
jl
test
mov
pushf
daa
lods
mov
fistl
push
imul
sub
push
int
pop
pop
push
jbe
inc
shll
add
add
cmp
add
add
add
add
add
cmpsb
and
add
add
xchg
xchg
and
add
add
xor
add
in
dec
sub
add
add
add
add
add
sub
add
add
adc
add
pop
mov
add
lods
pushf
and
mov
mov
sub
add
jns
add
add
add
aaa
fcompl
and
lods
lock
add
cmp
xor
mov
push
add
inc
dec
movsl
xor
sbb
inc
add
push
xlat
mov
adc
loope
cmp
xchg
ret
cmp
xchg
mov
movl
out
sbb
pop
rorl
mov
les
sub
mov
lock
inc
orl
cmc
pushf
lea
call
push
pusha
jmp
call
aaa
push
push
mov
scas
add
scas
ljmp
mov
mov
inc
movsl
mov
iret
mov
mov
pop
jp
inc
add
pusha
xor
sahf
insb
mov
insl
cmc
pusha
pop
test
loopne
pushf
xor
and
out
fnstsw
push
pop
outsl
dec
ss
lahf
cmp
or
jp
push
test
insl
in
lea
movb
jmp
imul
mov
or
inc
jno
push
xor
clc
dec
mov
add
and
push
push
sbb
mov
enter
test
cmp
mov
sarb
or
stos
je
outsb
sbb
and
mov
add
fisubs
rcrl
test
add
imul
cmp
pusha
call
sar
and
mov
test
cmp
cmpb
pushf
push
push
lea
jne
btr
dec
btc
bsr
sub
rol
aad
xor
mov
pushf
dec
stc
push
add
stc
pusha
ror
mov
clc
test
jmp
push
jmp
movl
pushf
movb
movl
pushf
pushl
lea
jmp
lea
je
pushf
cmp
mov
pusha
jmp
mov
daa
mov
scas
rorb
call
mov
fsubrl
mov
mov
test
pusha
loop
xchg
pop
mov
bound
sub
fdivp
inc
inc
sti
inc
sahf
rorl
rclb
int3
lods
inc
pushf
mov
call
mov
popf
jge
test
stos
jmp
xchg
fcoml
cmpb
push
mov
inc
imul
xchg
mov
and
sbb
sub
push
cmpsb
add
mov
xchg
test
rorb
out
sub
enter
repz
iret
adc
xor
push
cmpsb
test
mov
jnp
fcompl
cmp
outsl
cmp
test
dec
rorl
jo
dec
enter
js
pop
pop
cmp
push
xchg
or
sbb
mulb
shll
hlt
sbb
inc
mov
outsb
add
sub
jns
sub
js
xor
sub
push
push
lret
pop
jg
lods
js
iret
mov
data16
xchg
clc
pusha
sub
hlt
js
clc
je
jl
sbb
aaa
in
dec
mov
mov
lds
jns
ds
dec
loope
jns
js
adc
mov
pop
or
pop
sbb
mov
loope
xchg
dec
call
push
fstpt
jne
lret
mov
mov
pop
clc
subl
or
mov
pop
call
or
aaa
pop
pusha
mov
xchg
mov
inc
aaa
fbld
sub
pop
dec
xchg
dec
pop
or
movsl
cmpsl
lock
test
cli
xor
ljmp
imulb
sbb
or
push
fucomip
push
out
pop
push
jo
add
les
cmp
inc
adcl
jge
loope
dec
sbb
ljmp
roll
mov
lea
pop
and
adc
inc
sbb
lcall
test
bsf
mov
pusha
add
jmp
ret
xchg
cli
push
out
dec
jbe
scas
or
push
add
imul
cmc
or
push
or
pop
movsb
push
cltd
push
jp
rcr
jle
add
push
std
pusha
jp
xchg
cmp
inc
cmpsb
push
xchg
int
push
mov
inc
jmp
xchg
mov
pop
sti
lahf
xchg
dec
fwait
pop
mov
in
bound
and
aam
cmp
jbe
cld
daa
xor
mov
jns
outsb
mov
mov
outsb
xchg
rclb
sub
mov
clc
imul
dec
in
lods
movsl
std
adc
cwtl
shlb
nop
jge
ss
pushf
ror
bt
bt
mov
stc
cmp
movsbw
jmp
popf
push
outsb
xchg
xchg
shl
jb
inc
cmpsb
add
scas
mov
mov
das
lea
ss
and
cmpb
xchg
pusha
stos
leave
mov
fnstenv
xor
sti
cld
push
cwtl
leave
bound
mov
les
fldcw
pop
cmp
mov
jmp
mov
dec
scas
outsl
xchg
stos
inc
mov
or
xorl
sub
rorl
cltd
inc
adc
pop
push
mov
inc
mov
test
cmpsb
pop
lret
das
jae
jmp
fistpl
mov
pop
jp
pop
stos
dec
adc
push
icebp
mov
cmp
das
cwtl
outsb
mov
and
in
push
mov
cmp
enter
adc
scas
lea
ret
add
bound
in
sbb
and
push
or
xchg
inc
jo
pop
addr16
cltd
mov
inc
cltd
aam
jbe
mov
stc
addr16
dec
mov
notb
in
out
and
cli
pop
std
mov
jg
xor
inc
andb
xchg
pusha
jecxz
pop
push
test
mov
dec
sahf
sub
mov
xor
pop
pop
outsb
lock
mov
xor
sbb
or
addb
stos
leave
int
mov
addb
testb
inc
stos
push
out
mov
jmp
push
ds
nop
clc
aas
cmp
xchg
iret
cmp
ror
gs
pop
int3
idivb
loop
pop
jcxz
cmpsl
movsl
aad
cmp
inc
aaa
stc
and
out
jle
out
jb
stos
ss
in
xchg
xchg
lret
test
push
icebp
hlt
pop
mov
or
iret
mov
jno
fildl
scas
cmpsb
push
in
pop
repnz
push
lcall
ds
inc
xchg
jb
stc
in
pop
leave
xor
insb
mov
test
ss
and
push
or
test
dec
xchg
mov
mov
cs
shlb
mov
adc
out
and
xchg
lea
call
jmp
stos
pusha
pushf
pushf
pushf
lea
jmp
pushf
movb
pushf
lea
call
jmp
filds
dec
and
sub
inc
enter
test
xlat
cmpsl
fnstcw
mov
sub
call
sub
xchg
add
cmpl
lods
or
clc
fs
mov
jp
fsubl
clc
cli
cmp
jg
inc
out
lret
mov
pop
or
adc
or
aam
push
movb
pop
push
cmp
xchg
dec
stos
jno
ja
mov
in
inc
fistpl
and
sub
lds
mov
fs
jae
mov
push
setg
mov
mov
mov
pushf
setl
inc
push
mov
call
mov
aaa
mov
add
push
repz
sti
iret
xchg
filds
mov
loopne
jmp
mov
fwait
jbe
mov
mov
add
mov
xchg
popa
mov
setge
divl
xor
shlb
jmp
out
pop
dec
ja
stc
ficomps
shll
mov
adc
mov
cld
je
fldcw
pop
pop
aad
int
sub
adc
dec
xchg
pop
cmp
pushl
fwait
mov
xchg
inc
add
aam
ret
insb
pushf
pushf
lea
jbe
call
sub
lahf
addb
mov
test
pop
loopne
inc
push
pusha
loopne
jnp
lcall
enter
mov
mov
mov
sub
inc
insb
daa
or
push
into
pop
jo
andl
gs
xchg
mov
jbe
fidivrl
sub
out
test
inc
or
divl
lea
jle
xchg
xchg
xor
scas
and
insl
icebp
lds
icebp
jge
dec
loope
and
xchg
out
mov
jle
ret
adc
mov
jb
dec
cmp
rcrl
std
xchg
jmp
popa
pushf
clc
bound
in
or
scas
insl
sbb
js
or
ficoms
jae
addl
in
ja
mov
ja
out
jns
sub
or
jnp
jle
movsb
mov
test
inc
fiaddl
rclb
shl
adc
mov
add
dec
dec
dec
cs
insb
add
test
mov
ljmp
push
xchg
call
push
pushl
pushf
mov
jmp
fadd
sti
addb
in
pushf
and
and
nop
and
mov
fs
pop
xlat
dec
rcll
sti
sbb
dec
sbb
xchg
xor
mull
out
mov
xchg
sarb
hlt
mov
mov
rolb
inc
cmp
push
mov
fnsave
cmp
sub
in
inc
inc
xor
push
je
lock
mov
push
xchg
mov
jb
cmpsb
lock
sub
xor
clc
mov
daa
stos
addb
insl
adc
cmp
mov
iret
lret
movsb
mov
or
and
and
mov
xchg
rcrb
mov
mov
and
dec
xchg
aaa
push
pusha
cvtdq2ps
jnp
jno
fstpl
inc
jecxz
adc
push
addb
add
lea
pop
hlt
xor
shrb
rolb
in
cmpsl
mov
adc
sub
ja
inc
jns
lcall
adc
out
das
mov
stos
pop
repz
pop
lcall
cmc
addr16
jg
lods
movsl
pop
dec
scas
dec
stc
push
loope
push
movsl
imul
cltd
xchg
hlt
scas
out
inc
sub
sub
lods
mov
mov
imul
add
popf
add
out
add
xchg
cld
sub
cmpsb
push
xchg
idivb
pop
rcll
push
mov
fs
mov
mov
pushf
stc
dec
mov
xor
cmc
aas
mov
mov
pop
jo
sbb
in
pop
or
jle
aaa
ljmp
out
mov
cmp
lcall
popf
or
out
mov
je
aas
sbb
sub
ljmp
clc
mov
xchg
pop
loop
fs
and
fbld
lahf
fwait
pop
in
add
imul
and
scas
cli
je
and
push
andb
out
mov
xchg
or
in
or
xchg
push
into
xor
pop
push
jecxz
sbb
lahf
cli
jl
xchg
pusha
push
pushf
movl
push
jmp
pushf
cmc
cmp
call
adc
stc
jge
aaa
add
dec
xchg
movb
stc
sub
adc
lret
enter
mov
xor
push
sbb
testb
dec
sahf
or
sub
fsts
lahf
pusha
subb
xchg
int
cwtl
pop
popa
sbb
aaa
testl
pop
cmc
xlat
pop
inc
push
mov
sbb
scas
cli
movsb
ss
lcall
sbb
and
dec
mov
push
movsbw
bswap
lea
pushf
movb
lea
je
push
movl
jmp
test
push
jle
aaa
cmpb
xchg
inc
scas
ljmp
js
test
or
adc
incl
sbb
cmp
xchg
ret
pop
adc
mov
jl
dec
fsubr
inc
xchg
lds
sbb
imul
lea
shl
add
movsb
or
push
pop
xor
sbb
call
mov
insb
xchg
jbe
es
mov
push
incb
test
push
xor
out
fucomi
in
lods
test
enter
call
out
sub
sub
popa
std
push
out
inc
mov
pop
xor
bound
mov
dec
cmp
xchg
or
idivl
inc
sahf
pop
out
iret
xor
fcomps
dec
mov
mov
data16
mov
mov
mov
and
xchg
mov
sub
fsubs
cmpb
pop
pop
sub
rcll
xchg
icebp
sub
punpcklbw
das
jecxz
mov
push
jp
sahf
cltd
mov
add
in
sbbb
mov
dec
jge
aaa
jg
sahf
and
ljmp
and
clc
cmp
dec
mov
shlb
lret
std
stc
hlt
pop
mov
stos
in
xor
lret
or
fisubrs
xor
das
fldt
mov
mov
out
pop
fsqrt
and
repnz
mov
mov
dec
sbb
dec
mov
jmp
dec
in
xor
movsl
in
nop
js
call
add
in
inc
add
sbb
sarl
outsl
cmpsb
es
sbb
xor
jo
test
jg
mov
out
jnp
aaa
out
add
inc
clc
test
or
fmull
xchg
push
sub
notl
jb
cmp
or
xchg
add
mov
xchg
pop
std
push
imul
dec
mov
in
mov
or
mov
dec
out
sbb
jge
adc
and
setne
xor
xchg
lods
mov
call
lcall
pop
dec
add
jecxz
cld
call
mov
aaa
and
fiadds
fidivs
lds
jp
mov
push
push
ds
or
ficoml
loope
xor
mov
inc
outsb
ficoml
cmp
jne
jnp
inc
mov
dec
cltd
jg
cmpsb
cmp
and
xchg
stos
lods
notw
std
into
pop
and
pop
or
sub
shl
lds
ljmp
dec
mov
in
or
lahf
inc
scas
and
aaa
mov
mov
dec
loopne
add
daa
cmp
dec
push
sub
rcll
imul
ficoml
add
jae
repnz
mov
add
repnz
adc
dec
jmp
push
push
xorl
xor
dec
aaa
cmpsb
lret
call
mov
mov
daa
push
mov
mov
lret
mov
aas
int3
movsb
stos
xchg
sub
out
sti
lods
jb
jae
xor
sub
aaa
pop
pop
jae
sbb
jecxz
adc
gs
xor
adc
out
test
push
push
dec
aaa
adc
xchg
cmpsb
sbb
imul
mov
imul
dec
in
andl
int
adc
mov
mov
mov
pusha
sub
jg
faddl
cmovnp
push
push
pop
jge
adc
sbbb
js
adc
dec
jae
das
and
lret
inc
mov
mov
fdivs
outsl
inc
ds
call
imul
lcall
dec
and
cltd
shll
cmc
dec
dec
enter
not
shl
cmc
push
bsf
shld
inc
mov
pushf
clc
cmc
inc
mov
mov
adc
rcl
push
shl
lea
movzbw
push
shl
pushf
mov
call
pop
std
les
aaa
adc
dec
mov
das
mov
scas
jecxz
loopne
push
xchg
insb
pushf
andl
lods
dec
cld
adc
xchg
sbb
xor
and
mov
popa
add
sub
rclb
xchg
imul
test
enter
sbb
add
push
movsl
push
push
and
test
jo
test
jns
ja
xchg
mull
cmp
mov
jns
and
sub
nop
bound
call
push
rep
not
mov
push
mov
mov
push
lea
jmp
movl
pusha
movl
pushf
movb
pushf
lea
jmp
mov
aaa
pop
mov
push
lods
push
aam
pop
clc
cmp
lods
iret
sbb
xchg
mov
inc
in
aam
mov
cmc
iret
pop
sahf
ss
inc
sbb
movsl
in
icebp
stc
or
mov
fsubl
mov
fs
not
out
adc
dec
lods
mov
pushf
jno
aaa
xor
xor
or
or
iret
shll
push
int
adc
ss
je
dec
rcrb
pop
mov
call
jmp
adc
pushf
bt
cmp
jmp
sbb
jg
inc
aaa
push
nop
faddl
fcomps
rolb
shll
pushf
scas
and
shl
adc
mov
pusha
popa
cld
insl
jle
cmc
pop
dec
jecxz
sub
push
lea
inc
popf
cmp
jb
sbb
sub
xor
jg
mov
mov
pop
adc
scas
in
inc
add
push
mov
cmp
add
clc
sbbl
mov
jle
test
iret
outsl
repnz
hlt
mov
ja
aaa
test
mov
cwtl
sub
fs
adc
jmp
cmp
push
push
xchg
lea
int
dec
fucomp
or
jb
or
imul
xor
mov
adc
imul
xor
hlt
lods
jle
cwtl
mov
xchg
inc
repz
cli
pop
mul
jp
scas
or
lods
sbb
pusha
mov
std
sbb
mov
inc
aaa
and
mov
das
jae
arpl
inc
out
imul
push
xorb
xor
jns
mov
es
icebp
je
hlt
mov
outsl
mov
mov
sub
inc
dec
mov
xchg
lret
arpl
incl
movsl
outsb
lcall
jns
cmpsb
and
data16
mov
xor
mov
adc
out
xor
mov
adc
xchg
outsl
xlat
cmc
xchg
icebp
push
mov
push
test
hlt
cmp
pop
jl
lea
shlb
and
mov
jmp
pop
cltd
push
jbe
aaa
scas
sub
hlt
mov
faddl
dec
or
mov
or
test
xchg
ret
xchg
mov
loop
sbb
lahf
lret
stos
sub
mov
push
rcr
mov
ds
cmc
cmp
incl
jmp
hlt
leave
xchg
push
mov
push
sub
cwtl
fadds
inc
shl
fwait
push
pop
sbb
adc
xchg
out
jbe
hlt
fcomps
leave
jmp
pop
mov
adc
mov
push
xchg
rorl
lea
ja
je
push
pushf
push
pusha
lea
jmp
lock
jne
aaa
aad
mov
fdivs
adc
nop
add
adc
scas
cld
dec
leave
pop
sbb
in
cmc
mov
xchg
loopne
mov
clc
and
jae
mov
inc
cltd
lret
fstps
into
movsb
xchg
cwtl
jae
call
sbb
sbb
jne
arpl
out
lretw
sti
lods
mov
add
pop
lahf
or
in
pop
dec
mov
cmp
sbb
or
pusha
mov
xchg
inc
or
gs
add
cmp
sahf
cmp
dec
daa
movsb
into
jae
inc
mov
fmuls
sbbb
lock
add
js
in
cs
aad
and
pop
pop
pushf
lea
jbe
adc
bsr
jmp
jl
xor
aaa
movsl
sahf
adc
and
add
adc
cmp
test
fwait
dec
imul
dec
push
rcrl
js
adc
cld
jno
aad
and
push
ficoml
movsl
xor
cmp
decb
inc
xchg
mov
inc
pop
jecxz
sub
mov
lret
cld
aaa
cmpsb
ss
jb
imul
and
cmpsb
and
inc
mov
inc
pop
fmulp
jae
dec
icebp
mov
pop
jno
jne
pop
jle
test
cmp
jae
aaa
icebp
dec
mov
add
mov
cmpsb
cli
xor
fisttpl
inc
popf
jmp
jbe
sarl
adc
push
cld
fwait
pop
mov
imul
aad
dec
repz
les
and
mov
adcl
cli
lds
lock
negl
jge
cmp
pop
fisubs
dec
ficoml
inc
inc
iret
aas
addr16
mov
ljmp
dec
fistpll
xchg
insb
xor
or
lcall
or
pop
mov
mov
inc
fsub
insl
icebp
xor
lret
je
aaa
popf
mov
into
sub
sahf
loop
bound
xorl
mov
das
popf
jno
out
inc
leave
arpl
xchg
or
xchg
icebp
imul
xchg
cmp
pop
fcmovbe
mov
pop
push
mov
loopne
je
xacquire
cli
sbb
adc
pop
jae
addr16
sti
bound
push
enter
sti
dec
add
sub
fwait
mov
cmp
mov
sbb
int3
in
add
inc
fsubl
and
or
mov
xlat
jl
addr16
aaa
outsl
cwtl
cld
nop
je
jl
pop
mov
sarb
push
int3
cli
sub
out
aam
es
xchg
dec
jge
sub
add
inc
ja
bound
xlat
test
repz
mov
decl
pop
mov
inc
shll
cmp
dec
js
sub
or
cmpsl
xchg
into
stos
jb
sub
mov
ret
mov
popa
loope
out
test
lahf
and
popf
hlt
or
jge
xor
and
mov
enter
inc
cmpsl
dec
popa
mov
decb
mov
je
or
filds
add
add
push
gs
imul
outsb
add
clc
sub
mov
jmp
lea
add
clc
cmc
test
jb
sub
cmp
clc
cmp
push
pushl
popl
push
call
lea
jne
or
mov
call
andl
inc
aaa
jbe
add
cmpsl
or
mov
orb
inc
jg
out
mov
fwait
into
fldenv
push
sub
mov
push
mov
cmc
lock
xor
lea
in
aaa
inc
jb
cmp
xor
or
pop
pop
mov
movsb
sub
movsb
outsl
jbe
xchg
mov
mov
pop
cmp
mov
sbb
adcb
mov
mov
imul
jge
test
pop
xor
imull
jno
aaa
xchg
pop
out
imul
xchg
push
imul
aaa
ret
mov
sub
mov
fildl
cs
mov
xor
in
dec
mov
and
pop
adcl
xchg
push
lods
and
ret
push
xchg
mov
aas
stos
cmp
mov
inc
outsl
or
int3
sub
cli
stc
push
test
pop
ret
push
movsl
sbb
jg
iret
out
shlb
into
and
repz
dec
fwait
jmp
out
xor
sbb
in
jo
aaa
jmp
shlb
ds
das
pop
test
dec
loope
stc
loope
subb
rclb
bound
test
leave
cmp
xor
xor
xor
fs
pusha
jnp
test
push
xchg
je
add
rolb
adc
mov
ret
in
insb
sub
arpl
arpl
dec
das
sbb
sub
dec
loop
mov
pop
push
daa
pop
sbb
pop
pushl
insb
cmpsl
mov
sbb
xchg
mov
pop
push
mov
insb
adc
insl
mov
icebp
jno
jne
shlb
mov
fsubl
imul
ljmp
aaa
xlat
call
aam
mov
mov
xor
roll
dec
add
push
pop
lcall
inc
popf
pop
js
arpl
xchg
xor
in
fucomip
xchg
jb
jp
jp
xchg
push
push
loopne
mov
mov
xor
adc
ja
arpl
xchg
cmp
fldcw
xor
orl
add
es
add
push
push
dec
outsl
je
data16
arpl
inc
add
aaa
adc
movsl
dec
add
jno
cmp
push
pushf
ss
mov
pop
sbb
adc
xor
pop
and
popf
cmc
pop
les
sub
sahf
pop
iret
test
mull
sub
xor
cmp
out
dec
fwait
pop
dec
jae
jmp
xchg
stos
arpl
sbb
fwait
ret
decl
divb
or
dec
lret
jnp
push
out
xlat
daa
mov
mov
sub
movw
mov
movw
mov
pushl
ret
xor
pushf
cmp
neg
pushf
call
lea
push
push
mov
mov
call
sub
push
mov
lea
jmp
pushl
pushf
popl
push
push
push
push
xchg
movl
bswap
lea
xchg
lea
pop
movw
pushl
popl
lea
jp
movzbw
movsbw
push
push
pusha
dec
mov
inc
inc
movw
cmc
stc
mov
not
cmc
xor
shld
pushl
jmp
pop
movsbw
rcr
lea
bt
call
lea
jl
inc
call
pushl
pushf
mov
mov
pushl
call
mov
mov
xchg
movzbw
lea
push
movsbw
lea
push
pusha
pushf
popl
movsbw
not
mov
dec
xchg
movzbw
pushf
pusha
call
mov
pusha
mov
push
mov
pushf
lea
push
jmp
mov
jmp
jmp
inc
cmp
sub
movl
clc
call
sub
shrd
bswap
lea
stc
test
clc
sub
pusha
mov
lea
jmp
xchg
lea
inc
movsbw
xchg
pusha
pushl
popl
movsbl
lea
movl
lea
jg
not
pushf
mov
bswap
not
dec
inc
push
bt
neg
pop
not
pop
sar
bt
sub
xor
dec
call
lea
jne
rol
sub
bt
ror
xorb
mov
movzbw
setle
bswap
pop
pusha
mov
pushf
lea
jmp
movzbl
jmp
pushf
movsbw
movzbl
cld
push
call
mov
pusha
push
push
lea
jmp
jmp
shl
bswap
movzbw
lea
pushl
clc
call
push
pushf
mov
jmp
mov
mov
jmp
call
call
pusha
movb
mov
push
jmp
inc
cmc
not
test
xor
xor
sar
ror
shl
lea
clc
stc
sub
pusha
lea
jmp
movl
xchg
dec
bswap
mov
movsbw
call
lea
push
call
pushf
xchg
call
xchg
movzbl
pushl
popl
xchg
dec
push
movl
call
movzbw
mov
mov
setl
rcr
mov
cmp
stc
cmc
sub
cmc
test
jmp
mov
call
jmp
pop
push
pushl
pusha
movb
lea
jmp
sbb
bswap
mov
call
sub
pusha
pushf
pusha
push
lea
jmp
pushf
mov
mov
push
pushl
pusha
lea
jmp
movw
test
cmp
sub
pusha
lea
jmp
jmp
jmp
xor
stc
bt
cbtw
jmp
mov
pusha
mov
movw
pushf
mov
pushl
lea
jmp
lea
jne
add
rol
sub
mov
pusha
add
ja
and
cmp
bt
cmc
test
cmp
jmp
jmp
pushf
movzbw
pushf
inc
not
ror
neg
push
not
shl
shrd
xor
btr
sar
pushf
sbb
lea
jmp
pushf
movl
pushf
popl
pushf
pusha
pushf
pushl
popl
push
pushf
lea
jmp
call
pushf
cmpl
mov
mov
call
lea
mov
inc
pop
inc
ror
pusha
shrd
not
jmp
push
call
pusha
lea
jne
rcl
mov
bswap
not
xorb
pusha
call
bt
cmc
bswap
mov
pusha
bt
xor
jmp
jmp
jmp
bswap
ror
shl
mov
rol
bswap
shl
xor
dec
bswap
pushf
neg
mov
setp
lea
bswap
btc
sub
bsf
dec
xor
btc
rol
bsr
xor
movzbw
movzbl
call
mov
pusha
lea
jmp
add
mov
push
mov
stc
mov
sub
jp
pusha
sub
pusha
pushf
div
jmp
bsf
and
das
lahf
mov
cmc
push
pushf
sub
pushf
clc
stc
add
pushl
jmp
call
pushf
popl
pushf
call
inc
jmp
pushf
popl
call
das
shr
xor
aaa
mov
ror
mov
pusha
pusha
add
pushf
movl
jmp
pusha
lea
jmp
pushf
test
clc
xor
bt
test
cmc
mov
add
test
stc
jmp
bsr
neg
rol
lahf
mov
shr
mov
push
movb
push
sub
clc
pusha
shl
movb
push
mov
mov
pushf
popl
pushf
movw
pushf
call
pusha
mov
call
call
pushf
mov
mov
push
push
pushf
lea
jmp
rol
pushf
shr
mov
bt
add
call
pusha
pushf
pusha
mov
pushl
push
mov
jmp
mov
pushf
mov
pushf
mov
call
mov
push
jmp
call
pushf
call
jmp
aam
mov
inc
cmp
clc
mov
clc
cmp
call
aam
daa
rcl
mov
clc
call
push
add
movb
push
lea
jmp
mov
pushl
push
lea
jmp
pushf
popl
push
pushl
popl
pushf
pushf
mov
pushf
lea
jmp
cmp
shr
pushf
call
lea
push
inc
sbb
bts
not
bsf
xor
call
pushf
pushf
popl
call
cwtl
pushf
movsbw
mov
mov
pushl
pushl
ret
push
pusha
jmp
stc
jmp
pushf
pushf
mov
pushl
popl
movb
movb
lea
jmp
pushf
call
push
push
push
add
pusha
mov
push
mov
pushf
lea
jmp
sbb
mov
test
call
mov
jmp
call
pushl
mov
call
mov
movl
lea
pushf
pushl
call
movw
jmp
pusha
pushl
popl
mov
lea
jmp
mov
push
pushf
xor
pushf
call
mov
pusha
pushf
mov
movb
call
pushf
pushl
push
mov
jmp
btc
mov
clc
bsf
clc
shld
mov
clc
cmp
jb
pushf
add
pushf
pushf
mov
pushl
pusha
lea
jmp
pushf
popl
call
not
bswap
sar
mov
shrd
mov
pushf
add
call
xchg
std
not
mov
mov
pushl
pop
lea
call
pushl
mov
mov
movb
pushf
pushf
lea
jmp
sete
mov
shl
test
and
mov
cmc
test
cmc
not
push
clc
pushf
cmc
not
bt
and
push
movw
pusha
mov
mov
movb
pushf
popl
pushl
pushl
popl
push
push
pushf
lea
jmp
pushf
popl
pushl
lea
jns
popl
pusha
lea
jmp
add
lea
jno
pushf
mov
mov
push
pusha
movb
lea
jmp
jmp
mov
jmp
sbb
mov
bt
add
jmp
mov
not
mov
push
mov
pusha
mov
jmp
mov
jmp
xchg
mov
rdtsc
and
shl
shrd
pushl
popf
movsbl
mov
movzbw
mov
lea
movzbw
mov
mov
mov
pop
mov
call
pusha
sub
cmc
movw
cmc
ror
clc
movw
add
cmc
clc
cmc
mov
xchg
bt
cmp
cmc
add
cmp
sub
pushf
mov
call
xor
lea
call
cmc
bsr
lea
cmc
bt
sub
pushf
lea
jmp
not
jmp
inc
pusha
pushf
mov
neg
pushf
call
call
mov
lea
jne
jmp
call
mov
pushl
mov
pushf
lea
push
call
movw
decl
movl
jmp
stc
shl
test
mov
setp
pushl
jmp
mov
setnp
pushl
popl
pushf
movl
dec
call
xor
mov
push
push
clc
call
jmp
pushf
adc
pop
bswap
mov
and
add
mov
not
push
pushf
mov
push
lea
jns
mov
pusha
lea
jmp
cmp
rdtsc
bt
bt
sub
pusha
call
call
xchg
movw
movsbw
pushl
popl
movsbl
movl
lea
movw
movsbw
mov
lea
movw
bswap
movsbl
inc
rcl
adc
not
movsbw
xor
pushl
cmc
or
lea
clc
pusha
pushf
sub
pusha
push
pushf
mov
lea
jmp
cmc
bt
xor
stc
clc
bt
call
test
shld
cmp
mov
shr
cmp
mov
pushf
bt
pushf
stc
not
stc
pusha
cmp
call
pushf
call
pushf
movl
pushf
push
jmp
push
xchg
jmp
pushl
mov
call
sub
movb
lea
jp
mov
pushf
push
lea
jmp
jmp
mov
pushf
pusha
pushf
lea
jmp
jmp
movb
jmp
dec
add
dec
xor
xor
movzbw
movsbl
and
bt
xor
cmp
jmp
mov
jmp
mov
pushf
push
pushf
lea
jmp
movb
call
push
mov
mov
jmp
call
pushf
pusha
mov
push
jmp
pushl
inc
dec
bsf
sar
not
cmc
shr
sub
xor
and
ror
movzbw
movsbl
lea
test
jmp
bt
mov
aas
shl
jmp
pushl
movb
xchg
pop
movsbw
lea
xchg
mov
pusha
movzbl
pushl
popl
pushf
dec
xchg
movl
jmp
xchg
pushf
pop
mov
pushl
popl
xchg
mov
movw
inc
movl
inc
dec
call
call
pusha
mov
movb
mov
pusha
mov
push
jmp
sub
push
push
pushf
lea
jmp
xchg
push
xchg
mov
push
movzbw
pop
inc
sbb
add
pushf
ror
not
cmc
rol
xor
btc
bt
lea
stc
sub
pushf
mov
pusha
mov
lea
jmp
bt
xchg
call
call
push
lea
jns
mov
jmp
pushf
jmp
rdtsc
pushf
mov
jmp
push
mov
push
jmp
mov
pop
dec
movzbw
mov
xchg
xchg
movzbw
pushl
popl
pushf
jmp
pusha
mov
push
pushf
pushf
lea
jmp
sub
pushf
lea
jmp
lea
jns
bswap
jmp
stc
add
push
cmc
sub
jmp
movw
mov
jmp
pushf
popl
pushf
movw
pushf
movb
pushl
popl
pushl
pushf
mov
push
lea
jmp
movw
jmp
movb
pushf
jmp
mov
jmp
clc
mov
mov
pusha
stc
sub
stc
cmc
shr
call
pushf
popl
mov
pushl
popl
mov
pushf
lea
jmp
add
add
stc
not
sbb
or
sub
xor
add
lea
cmc
cmc
sub
push
lea
jmp
pusha
pusha
push
mov
call
pushl
popl
pushf
pusha
pushf
pushl
lea
jmp
pushf
push
pusha
mov
setp
shl
sbb
mov
pushf
cmc
pushf
test
sub
pushf
test
pushf
bt
shr
jmp
push
lea
jmp
pushf
pushf
mov
mov
lea
jo
pusha
movb
mov
pushl
mov
call
lea
push
pushf
mov
pushf
mov
call
pusha
call
push
bt
sub
pushf
jmp
mov
push
jmp
mov
push
mov
pushl
pushf
lea
jmp
pushf
jmp
call
test
cmc
xor
push
call
jmp
mov
pushf
pushf
lea
jmp
adc
lea
pop
movsbw
jmp
inc
cmc
push
call
lea
push
push
mov
pushf
pushf
pushf
pushf
popl
jmp
pusha
pushf
pusha
pushf
mov
pushf
pushl
pushl
ret
call
bsr
mov
movsbw
pusha
mov
pushf
mov
call
movw
call
call
pushl
popl
mov
pushl
pushf
lea
jmp
push
pushl
mov
jmp
clc
test
not
jmp
call
not
setp
bsf
mov
rcr
shl
bswap
clc
xor
mov
movzbw
inc
shrd
neg
movzbw
not
pusha
dec
inc
inc
clc
sete
bsr
xor
mov
pusha
call
test
add
cmc
pusha
test
bt
xor
push
jmp
jmp
sub
pusha
pushf
movw
lea
jmp
pushl
popl
mov
lea
jmp
pushf
popl
call
call
add
pushl
push
mov
pushf
mov
mov
movl
lea
jmp
call
btc
xor
bswap
mov
seta
stc
and
add
not
push
not
mov
mov
pusha
mov
pusha
lea
jmp
movw
pusha
mov
pushf
lea
push
call
inc
xadd
sub
movzbw
rcl
neg
mov
setno
shrd
bsr
sub
mov
clc
cmp
xchg
xor
add
shl
movsbw
sub
mov
sar
clc
clc
xor
sub
cmp
bts
neg
movzbw
ror
pusha
shl
shrd
add
btc
add
rol
rcr
sub
not
movzbl
clc
call
dec
mov
push
cmp
call
jmp
call
call
lea
bt
ror
clc
test
test
add
bt
pusha
pushf
xchg
cmc
cmc
stc
add
clc
stc
cwtl
cmc
cmp
pushf
cmp
sub
movb
push
mov
mov
mov
movb
lea
jmp
pop
pushf
shl
and
btc
mov
pusha
jmp
pushf
popl
call
pusha
jmp
push
rep
or
not
mov
cmp
pop
inc
mov
cmc
cmc
movb
std
pushl
popf
movb
push
pushf
lea
jmp
jmp
mov
push
pushf
pushf
lea
jmp
btc
rcl
adc
xor
not
push
lea
lea
jle
pusha
mov
sub
pushf
pusha
lea
jmp
sub
mov
btc
bswap
mov
add
cmc
and
xor
mov
pusha
add
jmp
pusha
cmp
call
pushl
popl
pushf
movw
lea
jmp
pushl
popl
pushf
movl
pusha
mov
lea
jmp
call
jmp
call
jmp
push
mov
mov
pusha
call
jmp
pusha
push
movl
mov
push
jmp
inc
ror
not
shld
xor
call
shld
sar
not
call
jmp
pusha
pushf
popl
push
jmp
movb
mov
jmp
pusha
push
mov
mov
jmp
setae
jmp
inc
call
pusha
inc
btc
inc
lea
not
test
call
pushl
pushf
popl
movb
mov
lea
movsbw
movzbw
mov
push
pushl
popl
mov
lea
pop
bswap
movl
pusha
dec
inc
lea
mov
movsbw
lea
inc
jmp
jmp
call
mov
pushf
mov
pushf
popl
push
pusha
jmp
call
jmp
inc
movzbw
mov
dec
setns
inc
test
not
btc
bt
xor
movzbw
bswap
bswap
lea
rcl
jmp
pushf
mov
push
lea
push
pusha
mov
push
pusha
pushf
popl
mov
call
movb
call
xchg
call
jmp
pushf
mov
lea
jmp
setnp
mov
push
pusha
movb
lea
cpuid
jmp
inc
movb
mov
call
jmp
lea
mov
mov
movb
call
mov
pusha
pushf
push
call
test
pushf
clc
sub
pushf
pushf
lea
jmp
mov
call
lea
shrd
movzbl
sub
not
xchg
call
pusha
pushf
movl
mov
pusha
pushf
push
jmp
push
pushf
popl
pushl
call
pusha
pushf
popl
jmp
pusha
mov
jmp
push
mov
call
movl
push
movsbl
bswap
mov
call
not
pushf
sub
clc
pushl
and
call
cmc
clc
sub
pusha
pushf
movw
lea
jmp
movb
pushf
popl
jmp
xor
call
call
mov
not
movsbw
pushl
popl
not
bswap
lea
jl
push
dec
movzbl
dec
mov
jmp
pushl
popl
pushl
mov
movb
pushf
lea
jmp
mov
pushl
mov
push
lea
jmp
mov
push
jmp
mov
mov
mov
movw
lea
jmp
mov
push
mov
pushl
mov
lea
jmp
pushf
popl
pusha
pushf
movw
pushl
popl
pushl
lea
jmp
mov
movb
lea
jmp
pushf
pushf
lea
dec
movl
pusha
mov
call
sub
movw
push
jmp
mov
push
pushl
jmp
jmp
movw
pusha
inc
bts
not
inc
xor
rol
lea
test
sub
pushf
pusha
pushf
lea
jmp
pushl
popl
inc
call
movb
mov
pusha
push
pushf
pushl
ret
shl
pushl
pushl
mov
jmp
pusha
call
pushf
popl
mov
pushf
movb
pushl
pushl
popl
pushf
pushf
push
lea
jmp
jmp
movb
call
push
bts
lea
call
pusha
pusha
push
mov
call
push
jmp
inc
notl
test
mov
stc
sub
test
pushf
clc
jmp
pushf
pushl
lea
push
push
mov
jmp
mov
call
rol
xor
clc
movzbl
pushf
call
clc
neg
cmc
pushl
stc
stc
sub
stc
xor
jmp
pushf
mov
push
pushf
mov
lea
push
push
push
pusha
call
stc
add
call
lea
pushf
movb
jmp
sub
pusha
pusha
mov
lea
jmp
jmp
pushl
lea
ja
or
mov
call
call
push
mov
push
lea
jmp
mov
pushf
pushf
lea
jmp
add
test
stc
mov
xor
call
push
jmp
sub
movb
cmc
test
clc
shl
call
movl
mov
not
lea
mov
jmp
push
lea
push
push
pushf
push
mov
mov
jmp
pusha
pusha
movb
mov
mov
push
push
push
mov
lea
jmp
shld
sub
adc
bts
movzww
bt
add
call
pushf
mov
pushl
pushl
pushf
pushl
lea
jmp
mul
movb
pushl
call
lea
jb
push
pusha
pushl
ret
test
cmp
stc
add
call
xchg
movsbw
movzbw
bswap
push
call
push
inc
stc
jmp
push
movl
pushf
mov
pushf
pushf
mov
pushf
pushl
ret
pushf
call
mov
movzbl
pop
lea
mov
pushf
movb
cld
call
mov
push
pushl
mov
mov
lea
push
call
mov
jmp
pusha
mov
jmp
mov
cmc
sub
jne
stc
add
push
pushf
mov
pusha
pushl
lea
jmp
movb
lea
jne
call
pushf
pusha
pushf
pushf
popl
lea
jg
push
bswap
jmp
pushl
mov
movw
pushl
mov
call
bt
test
pushl
clc
bt
add
pushf
stc
std
pushl
popf
pusha
pushf
lea
jmp
call
call
pushf
popl
call
bt
sub
jmp
jmp
pusha
mov
pushf
pushf
pushf
lea
jmp
pushl
popl
pushl
pushl
push
mov
lea
jmp
shl
clc
cmc
stc
shr
add
jge
test
stc
bt
or
test
clc
push
xor
pusha
inc
mov
pusha
call
mov
call
mov
jmp
scas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
test
xchg
not
dec
pushl
mov
pushf
jmp
ror
push
movsbl
lea
ror
seta
call
pushf
or
pushl
call
setge
movzbl
clc
jmp
call
stc
xor
pusha
jmp
cmp
mov
shl
setl
bswap
adc
add
bsr
ror
sub
cmc
shld
mov
test
pushf
call
pusha
push
mov
pushl
mov
mov
lea
push
jmp
pushl
popl
pushf
movzbl
pusha
movl
movsbw
inc
movzbw
mov
mov
bswap
inc
mov
jmp
cmc
sub
pushf
pushl
mov
xchg
cmc
pushf
clc
pushf
mov
stc
sub
movb
call
jmp
and
bsf
xor
sar
bsf
sub
push
mov
not
jmp
pusha
call
mov
jmp
movb
lea
push
push
pushf
push
push
mov
pushf
pushf
pushf
push
pushf
popl
pushf
xchg
inc
pushf
mov
jmp
pushf
call
push
call
dec
aam
seta
bsr
mov
cmp
bt
stc
push
sub
pushl
pushf
mov
pushf
lea
jmp
pushf
movb
mov
pushf
pusha
push
lea
jmp
cmp
movzbl
test
add
setae
sar
add
bts
pusha
xor
inc
inc
bswap
inc
movzbw
mov
jmp
mov
test
jmp
mov
pushf
popl
jmp
jmp
and
call
mov
call
push
mov
movb
pushf
pusha
pushf
lea
jmp
call
mov
jmp
clc
xor
pusha
pushl
push
xchg
call
aam
mov
rol
not
push
mov
pusha
clc
clc
sub
pusha
call
mov
movb
mov
mov
pushf
call
pushf
push
xor
call
pushf
push
pushf
mov
pushf
lea
jmp
mov
lea
jne
pusha
mov
push
lea
jmp
add
pushf
pusha
pushl
push
mov
movb
mov
pushf
push
lea
jmp
jmp
xor
pusha
push
movl
xor
mov
pushf
clc
stc
sub
mov
mov
pushf
pushl
push
lea
jmp
pushf
pushl
movl
mov
call
btc
rcl
shl
rcl
mov
cmc
add
cmc
bt
call
jmp
pushf
pusha
pushf
pushl
popl
pushf
mov
lea
jmp
pushf
pusha
mov
pushf
lea
jmp
jmp
add
stc
shrd
pushf
pusha
jmp
mov
movl
mov
push
jmp
clc
bt
cmp
call
mov
call
jmp
pushf
popl
jmp
call
pushf
pusha
movl
mov
movb
pusha
lea
jmp
stc
sar
mov
bt
cmp
add
push
push
mov
pushf
lea
jmp
jnp
pushf
lea
jne
shld
not
xorb
movzbl
jmp
jmp
call
call
divl
pusha
mov
mov
push
call
pushl
popl
pushf
lea
jmp
mov
mov
call
movzbw
mov
push
lea
pusha
jmp
jmp
sub
jmp
mov
push
call
pushf
pushl
popl
mov
pushf
mov
movb
lea
jmp
lea
jne
call
pusha
movb
lea
jne
push
add
jns
pusha
movl
xor
call
pushf
pushf
pushf
mov
lea
xchg
pushl
xchg
inc
pushl
popl
inc
mov
movl
pop
pushf
movsbw
movsbw
mov
bswap
pushf
movzbw
bswap
inc
stc
push
cmp
rcr
not
rcl
inc
cmc
rol
xor
sbb
btr
lea
cmp
mov
clc
sub
pusha
pushl
pusha
lea
jmp
movb
pusha
div
call
mov
pushf
pushl
ret
lea
push
push
pushf
mov
call
bt
stc
and
test
bt
cmp
pushf
jmp
pusha
mov
pushf
movw
mov
push
pushf
lea
push
pusha
movw
jmp
jmp
push
xchg
pop
lea
not
not
xchg
mov
not
pushl
popl
pop
pop
mov
movl
movsbw
lea
lea
pusha
mov
not
inc
xor
btr
not
cmp
xor
rol
bt
lea
cmp
sub
push
lea
jmp
bt
add
mov
test
adc
not
mov
pusha
sub
call
pusha
pushf
pushf
mov
movl
call
xchg
mov
movsbw
not
mov
push
pushl
popl
movsbw
pushf
lea
movl
pop
not
inc
mov
inc
dec
pop
inc
pop
shrd
rcr
not
neg
sar
adc
xor
jmp
inc
clc
cmc
bt
mov
ror
clc
add
bt
mov
stc
push
test
clc
sub
pushf
lea
jb
mov
push
pusha
lea
jmp
pushf
push
pushl
mov
pushf
call
cwtl
aaa
mov
mov
cmc
clc
bt
add
push
pushf
pushf
call
sub
cmc
call
pushf
xchg
lea
movsbl
push
jmp
mov
push
mov
lea
xchg
pop
movsbl
lea
pushl
popl
call
clc
mov
shld
add
call
mov
not
call
stc
btc
bswap
ror
sbb
add
shl
sar
xor
mov
pushf
bt
add
jmp
call
not
dec
movw
xor
call
call
clc
add
pushl
call
mov
pushf
pushl
movb
lea
jmp
pushf
lea
je
pusha
pusha
jmp
pushf
mov
pushl
pushl
call
pusha
mov
jmp
clc
shld
push
pushf
mov
pushf
mov
push
movb
pushf
popl
call
pushf
mov
mov
call
xchg
pusha
movl
movb
call
add
sar
clc
xor
pop
lea
jmp
movw
jmp
call
mov
call
shl
bt
mov
cmp
bt
clc
sub
cmp
pusha
add
call
movb
pushl
mov
mov
pushf
movb
pushf
popl
pushf
call
jmp
call
rol
mov
pushf
test
clc
cmc
add
pusha
mov
lea
js
pushf
push
movb
mov
movb
pushf
lea
jmp
dec
mov
pusha
call
rol
clc
mov
mov
dec
mov
pushf
movl
test
cmp
sub
stc
cmc
test
shl
push
pushf
pushf
pushf
mov
call
jmp
pushf
add
jmp
pushf
pusha
pushl
popl
pushf
push
push
pushl
lea
jmp
mov
push
pushf
lea
jmp
push
movw
pushf
popl
pushf
pushl
pushl
popl
pushf
mov
lea
jmp
push
mov
pushf
movb
lea
jnp
pushf
call
movsbw
pop
jmp
test
add
pushf
push
lea
jne
pushf
mov
mov
pusha
lea
jmp
movzbw
pushl
popl
pusha
movzbw
pushl
mov
movl
movsbw
dec
push
mov
lea
movzbw
not
inc
cmp
not
bts
sar
dec
adc
xor
mov
lea
call
pushf
popl
pushf
call
pusha
pusha
push
inc
call
pushf
popl
jmp
mov
lea
jg
mov
push
pushl
pushf
popl
jmp
mov
mov
mov
mov
movb
pusha
mov
pushf
mov
jmp
mov
call
inc
pushf
push
call
pushf
cmp
sub
pusha
lea
jmp
mov
jmp
pushf
popl
push
push
mov
pushf
pushl
popl
mov
movb
pushf
push
lea
jmp
pusha
push
mov
mov
movb
mov
pusha
mov
call
decl
jmp
pop
add
aam
shl
pop
test
bsr
bsr
bt
pop
dec
inc
call
clc
cmc
sub
pusha
push
pushl
lea
jmp
xor
shrd
and
mov
rcl
xor
jg
rcl
mov
jmp
jmp
pushf
popl
pusha
mov
call
jl
mov
sbb
mov
pushf
pushf
cmp
call
call
mov
stc
or
pushf
pusha
lea
jp
je
cmc
cmc
xor
pushf
xchg
clc
cmc
pusha
mov
bt
sub
call
pusha
mov
call
movl
lea
inc
lea
pushf
mov
movsbw
call
pushf
mov
pushf
pusha
movw
jmp
push
jmp
cmp
cmc
add
cmc
pushf
call
jmp
jmp
cld
pusha
pushf
call
bswap
push
mov
dec
inc
shl
not
btc
mov
cmc
xor
bts
bt
rol
lea
call
rcl
lea
call
pop
push
movsbl
mov
push
movzbw
movsbl
inc
mov
not
shl
shl
bts
inc
xor
btc
lea
lea
jp
sub
pusha
pusha
push
lea
jmp
xchg
not
xchg
movzbw
mov
movsbw
movzbw
call
rol
stc
lahf
mov
cmp
push
pushl
clc
sub
movw
pusha
mov
pushf
movb
push
push
lea
jmp
lea
bt
btc
ror
call
cwtl
movb
cmc
sub
call
pushf
pusha
pushf
push
mov
movb
mov
pusha
movb
jmp
decl
pushf
mov
call
pushf
jmp
shrd
mov
mov
rcr
pusha
call
mov
push
jmp
