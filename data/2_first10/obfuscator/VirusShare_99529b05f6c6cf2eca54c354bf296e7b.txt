add
add
incl
add
mov
add
add
fs
add
add
test
add
mov
add
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
lea
push
mov
push
call
fidivl
add
fs
add
add
test
add
mov
add
add
cld
pop
pop
ret
mov
push
mov
nop
nop
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
nop
push
mov
push
nop
nop
nop
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
mov
nop
nop
nop
jmp
inc
cmpb
jne
inc
ret
lea
nop
nop
nop
add
ret
nop
push
mov
add
push
push
push
nop
nop
nop
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
pusha
call
ret
nop
nop
nop
push
nop
mov
push
push
push
mov
push
mov
sub
push
push
nop
push
pop
pop
pop
add
nop
pop
mov
pop
pop
nop
pop
pop
mov
nop
jmp
ret
nop
nop
push
mov
nop
push
push
push
mov
push
mov
nop
pop
mov
pop
pop
nop
pop
pop
mov
nop
nop
jmp
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
pop
pop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
push
mov
push
push
push
mov
push
mov
pop
mov
pop
pop
pop
pop
mov
jmp
ret
mov
pusha
call
nop
nop
ret
lea
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
ret
mov
nop
nop
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
add
add
ret
lea
push
nop
nop
nop
nop
nop
mov
push
push
nop
nop
nop
nop
nop
push
mov
push
mov
sub
push
push
push
pop
nop
nop
nop
nop
nop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
pop
pop
pop
mov
jo
jno
ret
nop
push
mov
nop
push
nop
nop
nop
nop
nop
push
push
mov
push
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
nop
nop
nop
nop
nop
nop
pop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
nop
pop
pop
nop
pop
mov
jo
nop
jno
ret
lea
nop
push
mov
nop
nop
nop
nop
nop
push
nop
push
push
mov
push
nop
mov
nop
nop
nop
nop
nop
sub
push
push
push
pop
pop
nop
nop
nop
nop
nop
nop
pop
add
pop
mov
pop
pop
nop
nop
nop
nop
nop
nop
pop
nop
pop
mov
jo
nop
jno
nop
nop
ret
push
nop
mov
nop
nop
nop
nop
nop
nop
push
nop
push
push
nop
nop
nop
nop
nop
mov
push
mov
sub
push
nop
push
push
pop
nop
nop
nop
nop
nop
nop
pop
pop
add
pop
nop
mov
pop
pop
nop
pop
pop
nop
mov
jo
jno
ret
mov
nop
nop
nop
pusha
nop
nop
call
nop
nop
nop
nop
nop
ret
lea
jo
jno
call
nop
nop
nop
ret
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
push
mov
push
nop
push
nop
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
nop
push
mov
push
push
push
nop
mov
push
mov
sub
push
push
push
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
nop
push
mov
push
push
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
mov
nop
nop
push
mov
push
nop
push
push
mov
nop
nop
nop
push
mov
sub
push
push
push
pop
pop
nop
nop
nop
pop
add
pop
mov
pop
nop
nop
nop
pop
pop
nop
pop
mov
jmp
ret
lea
add
add
sub
add
in
mov
add
add
mov
add
add
add
inc
add
add
test
add
adc
add
mov
add
test
add
add
add
rolb
add
add
test
add
xchg
add
add
add
add
mov
add
or
add
mov
add
inc
lcall
and
dec
loop
in
and
and
mov
adc
dec
add
jo
adcb
and
dec
scas
xchg
mov
clc
mov
movsb
sbbl
dec
dec
xchg
pop
and
test
rorb
xchg
negb
sub
enter
stc
or
loope
adc
xchg
or
fs
sub
xor
mov
xchg
and
and
dec
ja
lret
adc
and
inc
or
pop
mov
adc
xchg
or
inc
jp
mov
dec
les
or
inc
adc
mov
and
fs
jb
mov
fs
adc
dec
aam
out
pop
cltd
and
cli
xchg
sbb
sbb
test
aas
push
les
xor
xor
ds
dec
test
test
or
fs
mov
cwtl
inc
cmpsb
mov
ret
and
dec
repnz
fbstp
jno
adc
xor
inc
sbb
dec
or
or
orb
adc
mov
or
in
push
cld
test
imul
inc
pusha
push
jp
test
dec
test
mov
ret
rclb
mov
adc
sbb
cmpxchg
adc
pop
adc
cmp
aaa
nop
or
cwtl
add
sub
movsb
sub
inc
jmp
or
ljmp
adc
repnz
cmp
jno
test
in
bound
nop
or
pop
in
repnz
scas
mov
xchg
repz
or
mov
inc
sti
cmp
inc
adc
decl
mov
inc
addr16
fists
iret
popa
adc
xchg
adc
mov
add
jle
add
dec
add
ficomps
mov
xor
mov
movsb
cmp
sbb
inc
or
cmpsb
or
add
and
mov
inc
mov
clc
adc
mov
outsb
or
test
or
and
rcll
test
es
lret
adc
scas
xchg
adc
cmp
inc
pop
cs
sysexit
enter
sbb
cmpsl
aam
call
adc
and
and
lds
rolb
adc
xchg
xchg
and
push
xchg
mov
pop
xor
dec
sbb
cltd
mov
movsb
sbb
and
les
or
xor
lds
adc
sbb
out
icebp
dec
push
filds
cmp
push
addb
and
inc
cmpb
mov
sub
lret
or
sub
movsb
mov
stos
xor
push
sub
pop
icebp
pop
orb
xor
adc
mov
pop
and
sub
lds
fcoms
inc
xor
mov
adc
aaa
and
mov
cmp
add
and
cmp
dec
cmp
adc
inc
sub
or
lds
or
outsb
jo
or
andb
lods
add
ret
lret
or
adc
push
xor
loop
mov
mov
loopne
dec
add
js
xor
pop
mov
movsb
adc
push
pop
cmp
xchg
pusha
push
arpl
mov
xor
arpl
cmp
aas
and
jo
insb
orl
xchg
enter
push
cmc
and
fisubrl
loope
ret
xor
mov
movsl
pop
or
jb
ret
or
dec
adc
jae
inc
mov
pop
je
mov
jne
adc
cmove
js
outsl
or
add
adc
or
adc
mov
or
xor
and
and
in
and
imul
sub
outsb
xchg
mov
enter
add
mov
push
mov
mov
mov
adc
xor
pusha
adc
nop
adc
xchg
xor
or
imul
xchg
pop
inc
inc
lcall
ret
adc
and
int3
xchg
frstor
in
xchg
cld
adc
cmp
and
dec
test
mov
xchg
loope
cli
and
inc
cmp
push
adc
jbe
mov
stos
and
or
and
dec
lea
mov
add
mov
cltd
xor
push
and
dec
popa
xchg
test
xchg
mov
and
cmp
jp
add
mov
xorl
pop
in
dec
test
lods
mov
mov
jge
mov
in
sbb
and
fidivl
inc
sahf
xchg
add
mov
and
and
mov
dec
adc
jle
fisttpll
or
les
mov
pusha
push
jl
cmp
xchg
inc
cmpsl
addr16
adc
dec
jno
cli
stos
add
movsb
popa
call
out
inc
data16
or
imul
push
add
jmp
or
xchg
jl
push
rclb
sbb
push
or
sbb
or
test
xchg
sub
push
adc
xor
jnp
or
or
test
xchg
pusha
das
sbb
push
xor
inc
inc
adc
xchg
or
push
hlt
xchg
sub
push
push
and
in
push
in
pusha
inc
push
movsb
test
sub
cwtl
adc
xchg
jl
sub
pusha
and
sub
pop
xchg
and
sbb
push
adc
or
test
fcompl
enter
movsl
sbb
cmp
push
pop
sub
xchg
and
sub
adc
sub
inc
sarb
cmp
push
es
mov
adc
dec
and
or
int3
fs
push
add
xor
sub
dec
push
mov
sub
cwtl
xchg
rolb
sub
and
dec
ret
mov
mov
push
push
mov
xor
dec
inc
mov
or
xchg
and
xchg
dec
xchg
gs
fs
dec
push
in
gs
and
push
xchg
mov
shlb
and
fcmove
xor
sahf
mov
and
pop
xor
fcoms
xchg
and
mov
adc
sbb
or
test
or
push
xchg
addb
xchg
adcb
fs
or
pop
ja
push
push
pusha
adc
xor
pop
jns
mov
or
pop
inc
pop
movsb
add
cmp
add
fs
popa
je
adc
imul
lock
jecxz
pop
xor
mov
sbb
or
or
leave
cmp
pop
jno
push
dec
mov
jmp
arpl
pop
mov
test
fiadds
je
jne
jne
pop
jb
lock
in
outsl
and
dec
dec
scas
add
insl
aaa
and
mov
lds
fwait
mov
cmp
mov
pushf
std
addr16
xchg
and
push
pop
adc
lds
loopne
test
jns
adc
cmp
pop
mov
or
repz
js
ljmp
add
and
scas
lcall
outsl
mov
repnz
cmpb
jge
lret
mov
adcl
ret
xor
inc
add
xchg
sti
out
test
test
decl
imul
fwait
add
dec
xor
or
stos
leave
cwtl
add
sbb
pop
cli
outsl
in
and
dec
jno
mov
in
xor
cmp
or
or
add
je
mov
dec
mov
cmpsb
pusha
callw
popf
cmp
sub
loopne
in
pusha
insl
mov
or
dec
outsl
add
or
nop
inc
add
imul
cmpsb
add
in
jmp
inc
rcrl
push
cmp
mov
mov
add
pop
leave
xor
js
pop
ret
add
pop
int3
adcl
add
sbb
movsl
cs
push
jne
leave
outsl
outsb
add
cmp
cmpsl
dec
daa
mov
ja
test
lea
inc
mov
sub
pop
dec
or
int3
outsb
add
add
adc
add
nop
shrb
addr16
push
cmp
in
pop
into
inc
popf
push
clc
and
xchg
cmc
cld
cmp
lods
xor
or
stos
mov
dec
add
add
jb
xor
scas
add
mov
leave
pop
mov
pop
pop
push
roll
mov
lret
test
out
lret
enter
cmp
and
and
test
or
add
inc
or
add
jo
push
cltd
sub
or
insl
push
addb
or
inc
add
adc
insb
rolb
ljmp
pop
lar
cmp
shl
incl
or
sbb
push
add
add
fnstsw
fistps
jl
and
jecxz
js
push
pop
aam
cwtl
fucomip
adc
fwait
mov
add
and
mov
or
jg
cmp
mov
mov
or
jne
insl
sub
imull
test
and
xor
shlb
cmpsl
push
mov
push
xor
inc
mov
cmpl
fwait
dec
cmc
push
insb
addl
ljmp
adc
adc
and
mov
inc
lcall
push
mov
jecxz
inc
cmpsl
jo
push
loop
inc
nop
sub
sub
je
sub
inc
sbbb
in
adc
sub
aam
xchg
mov
push
clc
xchg
mov
push
inc
dec
inc
les
dec
adc
add
or
or
and
inc
pop
adc
xchg
adc
inc
mov
xlat
sbb
je
mov
mov
push
inc
xor
iret
add
pop
pop
loopne
inc
adc
adc
sub
clc
inc
pusha
inc
adc
push
popa
push
xor
jle
adc
mov
mulps
add
mov
mov
loopne
and
cmp
fisttpll
repnz
and
jo
aam
leave
xor
sub
adcb
and
dec
loopne
inc
and
mov
mov
popa
insl
xor
adc
cmp
add
lock
sbb
xor
or
add
arpl
ss
cmp
mov
ret
fdivs
mov
neg
test
outsl
or
mov
fnsave
dec
add
cmp
lcall
into
movsl
aaa
add
or
add
or
xchg
mov
loopne
add
mov
lret
stc
rcl
mov
int3
fcom
divl
lods
cmpsl
je
rolb
xlat
or
push
enter
outsb
je
add
jo
mov
stos
nop
push
addl
adc
or
inc
cltd
outsb
xor
or
mov
add
sbb
adc
adc
xor
add
clc
pop
xor
cmp
add
and
mov
mov
sbb
dec
or
into
adc
cltd
lods
sbb
or
inc
xor
int3
cmp
jae
mov
adc
cmp
adc
test
lret
cmp
testl
dec
or
xor
adc
add
adc
cmp
sub
push
xor
or
aam
shr
mov
inc
mov
enter
or
xchg
push
aaa
leave
aaa
lcall
decb
mov
mov
cmp
and
pcmpgtb
xor
scas
shl
xor
inc
inc
ja
add
mov
or
cmpsb
push
xchg
adc
repnz
xchg
pop
add
inc
and
lods
and
mov
add
add
adc
bound
test
push
das
pop
and
ror
push
mov
and
insb
mov
pop
cmp
xchg
repnz
aas
xor
adc
repnz
xlat
push
cmp
cltd
add
adc
mov
inc
or
mov
or
cmp
xor
clc
int
aas
aad
sbb
je
jo
das
push
inc
jnp
sahf
in
sbb
pop
cmp
inc
dec
xchg
and
adc
xchg
outsb
sbb
add
add
lret
pusha
aas
in
sub
mov
mov
repz
xchg
sti
mov
adc
adc
push
add
sub
cmp
push
push
or
and
add
xchg
pop
and
jecxz
or
mov
xor
adc
xchg
inc
mov
add
stos
adc
mov
rclb
mov
mov
inc
insb
je
cmpsl
js
fcompl
push
or
add
inc
jno
cmp
lods
inc
pop
add
push
mov
fdivr
pop
sbb
jge
and
xor
jbe
arpl
cs
dec
adcl
adc
or
mov
aas
lock
test
mov
xor
in
sbb
test
cmp
or
and
cwtl
js
jne
dec
fildl
push
dec
push
xchg
int
cmpsb
jb
push
aad
xor
or
pop
push
or
adc
and
jge
xor
inc
sbb
adc
nop
inc
add
mov
cwtl
mov
mov
or
mov
cmp
mov
adc
add
loopne
aad
add
xor
push
or
xor
sbb
sub
cmpsb
insb
bound
or
add
dec
pop
cltd
adc
and
add
push
jmp
or
inc
sbb
loope
mov
mov
inc
push
or
mov
mov
call
adc
enter
dec
push
mov
fs
popa
add
sbb
xchg
adc
rorb
bound
or
test
pop
fsubl
lahf
mov
add
mov
xor
and
add
add
add
lods
mov
and
pushf
int3
and
js
adc
sub
test
mov
push
js
xchg
loopne
push
imul
fwait
pusha
adc
adc
hlt
or
clc
and
fsubl
inc
das
sbb
cmpl
xor
sub
aam
aaa
rclb
and
xor
les
mov
test
cmp
cmp
insl
and
inc
xchg
adc
into
push
add
mov
add
dec
jecxz
bound
push
and
jae
test
jno
sbb
push
dec
cli
insb
inc
adc
fdivrs
pop
and
out
inc
stos
jecxz
add
arpl
inc
fwait
movsb
or
inc
or
xor
inc
add
scas
loopne
cmpsb
push
add
adc
dec
add
xor
add
adcb
cli
or
mov
incl
test
mov
inc
pop
push
push
push
mov
adc
loop
lods
pop
cmp
rcrb
inc
add
notb
dec
xchg
pop
mov
pop
mov
mov
add
add
add
inc
jg
add
into
or
dec
mov
and
pop
enter
test
movsl
lock
dec
lahf
dec
sub
and
je
andb
mov
or
lods
rol
imul
sbb
sub
cmp
adc
bound
add
pop
xchg
dec
inc
adc
push
test
enter
dec
add
addr16
pop
adcl
mov
mov
adc
outsl
or
or
xor
bound
and
jge
xor
das
daa
dec
sub
pop
inc
int3
cmp
and
daa
shll
int
add
and
xor
inc
mov
inc
or
add
dec
sub
shrl
sbb
cwtl
mov
adc
inc
and
xor
incl
add
or
sbb
pushf
loopne
inc
adc
or
and
frstor
sub
sbb
and
xchg
or
adc
and
loope
nop
les
sub
mov
push
sti
mov
push
ss
mov
repz
gs
cmp
fisttpl
push
cmp
or
inc
lret
xor
sbb
adc
repz
pop
push
cmpsb
add
sbb
cmpsb
adc
lods
sub
adc
mov
inc
aaa
pop
xchg
dec
inc
lcall
add
dec
fiadds
sbb
lret
push
cmp
pushf
inc
add
xorb
fldenv
cmpsl
sbb
sbb
test
js
cmp
mov
mov
adc
cmp
dec
xchg
push
and
jge
mov
cltd
dec
loope
out
adc
xor
das
or
xchg
dec
movsb
xchg
mov
mov
or
dec
insb
jecxz
push
js
test
ds
inc
inc
fisubrs
mov
add
dec
or
insl
shlb
dec
xchg
dec
xchg
push
xchg
mov
inc
call
popa
in
push
adc
icebp
pop
outsl
movups
jno
int
inc
loopne
pop
orl
cmpsb
or
pusha
cmpsb
cmpsb
dec
fmuls
fwait
cwtl
cmp
mov
repnz
cltd
or
xor
xchg
or
int3
sbb
js
push
add
bound
or
mov
call
mov
sbb
add
adc
cmp
int3
and
or
xchg
adc
mov
cmp
faddl
cmp
fnstenv
enter
push
mov
pop
add
push
lods
pop
mov
ljmp
sub
or
jg
push
sub
lock
lds
xchg
sub
add
or
adc
lea
mov
xor
dec
dec
or
push
xor
dec
or
int3
enter
lock
jp
test
pusha
jns
xchg
or
lahf
and
cmp
or
and
or
roll
test
xchg
adc
lea
jge
or
add
and
or
add
dec
fcomps
in
or
xchg
pushl
sub
mov
cmp
call
gs
push
nop
mov
sub
push
adc
pusha
add
adc
add
call
call
push
mov
sarb
add
and
dec
testl
adc
enter
xor
mov
pop
or
jl
jle
xorb
dec
mov
fldenv
fiaddl
lret
jo
fisttpll
mov
mov
cmp
inc
mov
push
add
sbb
inc
adc
sub
inc
mov
mov
sahf
sub
mov
xor
sub
ror
pusha
inc
inc
sub
add
push
gs
imul
sbb
dec
icebp
mov
sbb
inc
sbb
add
inc
fisubrs
inc
and
cmp
dec
fmuls
arpl
xchg
jge
mov
mov
pop
sub
popf
sub
je
sbb
pop
sub
nop
fdivr
push
test
cmp
ret
push
pushf
dec
sub
mov
cld
push
inc
enter
jbe
scas
dec
out
mov
test
or
mov
mov
fbstp
push
push
sub
mov
or
mov
testb
rorl
ret
xor
mov
in
repz
mov
sub
xchg
pushf
pop
push
mov
enter
xchg
pusha
mov
mov
shll
popa
mov
mov
insb
cmpsb
adc
or
jo
push
js
adc
je
inc
mov
adc
bound
fmul
mov
daa
sub
adc
or
test
cwtl
leave
js
dec
sbb
add
sub
cmp
inc
sub
inc
add
sub
dec
mov
sub
call
cmpsb
sbb
xchg
into
push
inc
or
inc
and
lock
and
inc
jg
enter
pop
xor
xor
dec
dec
xchg
pop
and
daa
jo
loopne
imul
inc
mov
enter
add
sbb
les
inc
outsl
mov
out
sar
adc
aas
and
mov
sub
pop
jae
fisubl
mov
out
or
or
or
cs
cli
aas
js
pop
inc
add
dec
or
dec
test
or
adc
or
adc
bound
xor
in
je
jne
sbb
popf
lret
in
rorb
fdivs
or
pop
aam
push
or
or
jne
lods
xchg
in
jge
cmp
das
addr16
lds
push
sub
mov
add
js
enter
adc
push
push
push
out
cmp
sub
addl
add
leave
adc
daa
add
lea
dec
add
idivl
dec
xchg
add
nop
pop
add
push
and
rorl
add
fcoml
push
pushf
fistpl
push
or
adc
cli
adc
jne
jae
jmp
ds
jge
aam
mov
sbb
jo
js
push
outsl
or
loopne
enter
lea
js
and
outsb
dec
xchg
out
inc
or
stc
iret
pop
loope
add
loope
scas
enter
aas
fmulp
and
push
cltd
cs
in
add
mov
pusha
lock
dec
insb
daa
and
and
loope
scas
add
cwtl
add
aam
or
adc
xor
cld
clc
mov
nop
cmpsl
jnp
loopne
shll
inc
mov
ljmp
out
or
inc
mov
xchg
das
sub
xchg
and
push
data16
aaa
and
add
test
mov
push
mov
xchg
in
dec
add
or
lea
add
out
jle
push
sub
or
sub
cld
inc
icebp
xchg
test
sti
jl
out
push
int3
push
int
addr16
mov
cli
fsub
add
sbb
push
xchg
adc
cwtl
pop
mov
loopne
sub
pusha
dec
or
push
popl
imul
push
rcrb
mov
pop
in
cltd
inc
loop
xor
cmp
push
add
lods
push
popf
dec
and
pop
clc
jo
add
clc
push
in
jnp
cmpsb
sbb
je,pt
iret
js
repz
out
and
mov
add
mov
mov
stos
popf
insl
fisttpll
test
xlat
jno
clc
inc
dec
imul
and
inc
add
out
dec
movb
add
lret
or
add
add
jmp
test
sub
sahf
mov
lret
push
adc
or
dec
dec
cmpsl
rorb
cmp
adc
xor
mov
pop
into
or
mov
enter
pop
leave
adcl
loopne
push
cli
mov
gs
or
or
and
dec
pop
mov
int3
or
lods
mov
inc
cwtl
dec
movsb
fdiv
int3
xchg
cld
or
mov
sbb
nop
in
add
aad
fcomps
imul
adc
cmp
sub
flds
push
and
push
adc
sbb
push
sub
push
mov
arpl
jne
mov
and
in
jb
and
jb
cmp
and
mov
aam
or
dec
push
xor
adc
and
nop
or
lods
cmp
or
or
sti
hlt
ret
add
dec
push
enter
push
mov
xchg
inc
in
mov
mov
inc
xchg
mov
sbb
xchg
add
nop
adc
push
push
push
mov
fs
push
inc
mov
movsb
sbb
enter
push
mov
sbb
clc
mov
les
bound
xor
and
sub
rorb
fimuls
lods
test
sbb
add
add
adc
icebp
xchg
push
sbb
cmpsb
sbb
push
inc
lock
sbb
xor
movups
cwtl
inc
push
sbb
pop
and
or
mulb
lods
push
les
mov
mov
mov
inc
in
mov
dec
pop
xchg
je
lahf
test
dec
shlb
xor
xchg
dec
icebp
jmp
sub
pop
add
subb
mov
add
test
std
nop
sar
enter
and
icebp
dec
paddb
incb
out
sub
lods
call
dec
pushf
decl
pusha
aas
repnz
jns
dec
lods
cld
fadds
fsts
mov
sub
push
mov
mov
dec
pop
in
js
xor
xchg
mov
aam
fsubl
jge
rorb
sbb
ss
lods
mov
jl
cwtl
jle
sti
mov
or
inc
andl
or
les
and
xchg
sbb
and
adc
scas
or
inc
pop
xchg
lock
jns
jne
cs
mov
loope
dec
jg
mov
stos
add
pop
dec
inc
pop
and
rorb
lds
movsl
or
mov
mov
inc
cmp
nop
pop
pop
pop
insb
add
addl
xor
pop
loop
inc
cwtl
adc
mov
sarl
or
mov
popa
or
xor
add
pushf
xor
je
bound
mov
add
mov
ret
mov
adc
adcb
int3
cmp
adc
mov
mov
xchg
pop
and
dec
shl
cmp
pushf
pop
xor
fcoms
sbb
inc
mov
push
ret
inc
in
add
sbb
test
inc
clc
push
test
or
xor
and
sbb
test
sub
loopne
sahf
je
xchg
jo
adc
and
movups
add
inc
adc
and
rorl
je
or
adc
or
adc
or
nop
movsl
je
mov
nop
mov
movsb
inc
mov
xchg
in
cs
and
pushf
lcall
cmp
mov
cltd
test
or
mov
push
cwtl
or
test
add
adc
or
adc
movsb
jl
into
sarb
dec
fs
or
cmp
cmp
out
popa
stos
or
jns
sbb
and
sahf
cwtl
xor
lcall
push
inc
js
pop
inc
jl
das
sbb
mov
cmp
clc
lods
fldenv
andb
pushf
shll
or
xorl
xor
and
add
xor
mov
inc
push
leave
adc
test
mov
pop
mov
pop
sub
sahf
and
call
xor
adcb
cmp
lret
cltd
xor
aaa
sbb
aaa
dec
fisttpl
cmc
pop
adc
les
cmp
aad
insl
xor
ljmp
push
adc
aaa
push
fnsetpm(287
xor
push
outsl
push
mov
dec
gs
xor
adc
dec
or
and
lret
in
and
cltd
xchg
xor
sub
pop
or
mov
cmp
cmp
sub
xor
pop
insb
sub
xor
mov
pusha
mov
xor
push
push
and
cmp
gs
sub
and
xor
and
aaa
dec
sbb
test
and
out
aaa
push
push
ss
insb
push
dec
and
mov
movsb
lea
inc
ficoml
cmpsl
xor
in
mov
dec
adc
int
outsb
dec
inc
ss
adc
mov
cmc
dec
orb
push
stos
add
lock
sub
lods
adc
ja
sub
xor
push
pop
push
xor
pop
inc
xor
xor
insb
dec
gs
movsb
pop
pop
ljmp
inc
call
aaa
xor
adc
cmp
shr
push
inc
cli
dec
sahf
jmp
sahf
popf
scas
mov
dec
pop
movsb
pop
add
dec
dec
push
iret
push
test
dec
xchg
sub
xor
push
dec
cli
dec
mov
dec
xor
mov
inc
movsb
adc
stos
adc
push
fimull
adc
test
ss
mov
ds
rcr
mov
inc
test
xchg
and
cmp
pop
xchg
mov
rcr
cmpsb
push
xor
mov
or
and
xchg
cmp
xchg
jns
push
in
sbb
imul
pop
cmc
cs
push
push
mov
enter
cmp
dec
cmp
mov
jb
push
jp
and
inc
push
std
pop
aam
ljmp
add
pop
and
jle
hlt
pop
mov
lret
dec
push
movsl
push
jb
inc
das
cltd
sub
sbb
cmp
push
lods
pop
sti
inc
cli
lahf
dec
sub
sarb
push
xchg
ss
cmpsl
dec
jb
adc
cmp
movsl
dec
push
mov
rcrb
push
xchg
mov
cmpsl
dec
jb
dec
cli
mov
ficomps
push
pop
mov
inc
xlat
movsl
adc
sarb
lahf
mov
sub
mov
inc
xor
xor
ret
push
lahf
mov
push
add
xor
pop
rolb
fisttps
inc
ljmp
mov
pop
nop
pop
test
pop
std
pop
inc
test
enter
xchg
out
aad
mov
inc
ljmp
mov
add
push
xor
aad
movsl
pop
or
jle
mov
add
xchg
lods
shrb
in
and
leave
push
sub
cmpsl
inc
leave
sbb
jbe
xchg
or
nop
xchg
repnz
inc
movsb
push
lods
je
xchg
inc
imul
lret
xlat
mov
hlt
mov
sub
mov
sub
push
inc
mov
sbb
xchg
aaa
cltd
and
repnz
loop
pop
ret
scas
out
cmc
sub
mov
shrl
scas
out
aad
pop
push
scas
dec
scas
jbe
xchg
idivb
movsb
sub
pop
push
pop
jle
popf
cmpsb
pop
sub
cli
pop
xchg
ficoml
imul
cmc
scas
out
and
xchg
xchg
or
push
sub
cs
lods
inc
push
xor
jmp
pop
sub
push
xchg
push
jmp
cmp
loop
inc
mov
iret
cmp
pop
lret
lret
jg
ds
mov
jo
adc
add
mov
adc
mov
cld
mov
cmp
pop
ret
jo
cld
add
push
push
dec
fsqrt
pop
lahf
in
jbe
sbb
bound
mov
das
addr16
xlat
scas
shll
mov
and
frndint
aad
negb
cli
int
repnz
jge
std
mov
imul
push
movsl
in
pop
mov
adc
js
insb
inc
scas
pop
clc
mov
pop
out
mov
mov
mov
das
mov
mov
lock
hlt
mov
incl
movsb
cltd
ljmp
pushl
in
pop
dec
add
xlat
pop
test
lock
stc
jp
test
mov
in
dec
inc
pushf
daa
xor
lahf
adc
mov
mov
pusha
push
popf
fcmovne
idivb
ss
lret
aam
cli
fisubs
cmpsl
jl
push
fisubs
dec
mov
cmp
push
cmpsl
jl
push
jbe
mov
dec
mov
aad
mov
fidivrl
pop
movsl
push
cmp
movsl
ds
mov
jne
push
inc
push
add
lods
add
test
int3
mov
std
sub
mov
int3
scas
cmc
ljmp
hlt
outsb
adc
dec
dec
test
inc
add
pop
add
push
xor
pusha
ret
and
jns
pop
test
dec
xchg
dec
fildll
dec
outsl
xchg
push
fiaddl
dec
aaa
in
cs
mov
or
sub
jno
add
pop
push
inc
cmp
or
ss
dec
pop
adc
pop
in
int3
dec
ss
xchg
int
jg
mov
sub
out
pop
fcoml
xor
adc
movsb
pop
xchg
xor
mov
je
cmp
xor
ficoml
xor
mov
rorl
adc
lahf
xchg
test
push
lret
adc
sub
dec
js
dec
aaa
push
push
add
and
insl
imul
pop
cmp
xchg
or
adc
or
xchg
inc
jno
daa
gs
cmpsl
jge
add
add
scas
add
sbb
test
call
cmpsb
and
xchg
inc
and
fisttpll
pop
xlat
and
push
push
add
xchg
pop
test
ficoml
and
imul
mov
insb
cmpsl
ljmp
lds
into
repnz
pop
aad
daa
add
hlt
jne
push
mov
mov
pop
imul
pop
mov
and
pop
lea
cs
stos
dec
lret
clc
out
shll
out
and
jne
shrl
add
sub
xlat
call
xchg
adc
and
inc
jp
add
sub
xor
sbb
or
add
sahf
lret
sbb
addl
jg
loope
mov
popf
sarb
scas
add
fisubrs
jno
mov
adc
mov
xor
ss
or
mov
jge
dec
xlat
enter
push
aad
mov
jg
scas
xlat
sub
jb
add
add
sahf
jl
dec
adc
inc
stos
xchg
mov
inc
sar
stc
sbb
stc
add
mov
push
xchg
or
xor
pop
mov
sbb
nop
lret
ja
cmp
jge
sbb
insb
lret
mov
fcmovu
jns
lods
cmc
mov
jge
cmp
jge
or
divl
sub
jae
sub
repnz
mov
ja
add
lods
sbb
std
xor
add
xor
adc
lock
jb
mov
imul
and
shlb
or
sbb
je
push
sahf
push
jbe
arpl
pop
outsl
or
add
dec
inc
dec
ljmp
insl
outsb
iret
dec
inc
jbe
das
and
jb
sub
sbb
cmp
add
inc
jl
mov
shlb
loopne
js
mov
jl
rcrb
call
or
aas
dec
jo
outsb
jns
mov
rorb
adc
int3
ds
adc
gs
js
dec
add
add
sbb
fs
add
and
inc
insb
outsl
jae
dec
dec
push
push
xchg
push
enter
push
and
popa
nop
push
imul
or
sahf
lods
jns
sbb
jl
lods
pop
sub
adc
mov
cmp
clc
jl
mov
xchg
jo
pusha
scas
push
dec
xor
mov
mov
outsl
bound
movsb
xchg
inc
dec
xlat
or
sbb
add
cltd
add
xor
popf
enter
dec
adc
sbb
test
add
lods
cltd
adc
add
or
push
pop
push
out
jb
sub
pop
cs
or
repz
xor
adc
xchg
arpl
dec
cs
mov
ds
or
sbb
out
subb
mov
fwait
push
dec
lret
adc
test
push
bound
sub
js
xchg
add
sti
out
pushf
outsl
dec
cmpsb
add
adc
and
lods
and
mov
test
ret
inc
and
scas
fadds
and
dec
push
ljmp
in
push
leave
or
adcb
push
dec
mov
xchg
insb
or
jb
pop
outsb
mov
cld
fsts
ror
sub
scas
dec
and
or
bound
and
sub
xor
pop
xor
add
adc
push
in
pop
lret
jne
sahf
in
push
or
dec
sub
dec
loopne
pop
and
jl
xor
mov
and
hlt
push
add
adc
and
ss
es
mov
push
dec
or
push
lods
or
rcll
push
or
and
cmp
pop
lret
cmp
or
loopne,pt
xchg
cld
bound
mov
lods
or
data16
lcall
insb
and
lods
dec
mov
test
or
cwtl
call
pushf
in
test
inc
adc
or
or
mov
inc
adc
fisubrl
nop
enter
dec
fs
add
xor
movsb
test
inc
push
bound
inc
arpl
adc
add
push
sub
inc
fs
sub
pop
ds
lock
bound
push
js
scas
dec
pop
inc
test
inc
lcall
lea
enter
xchg
dec
into
sub
cmp
int3
inc
aam
mov
push
gs
push
test
hlt
and
inc
loopne
add
pop
mov
xor
push
ja
cmpsl
inc
mov
push
inc
insb
cmp
pop
and
inc
in
cmp
nop
or
mov
mov
test
lock
clc
loop
ds
push
push
add
outsl
jbe
cmpsl
and
mov
or
lock
lahf
ror
mov
or
mov
inc
dec
inc
mov
data16
add
jno
dec
movsb
pop
test
nop
adc
pop
xchg
popa
movsb
dec
xchg
xchg
enter
push
and
dec
mov
dec
loopne
and
ds
or
fidivs
push
movsb
cmp
sub
dec
xor
or
icebp
pop
adc
and
or
pushf
xchg
xor
jp
pop
adcb
and
inc
mov
inc
loopne
les
inc
inc
xor
dec
mov
stc
or
push
jb
sarl
addr16
pop
fmuls
inc
or
push
inc
pop
cmp
or
or
gs
rorb
jne
dec
push
dec
pop
xor
mov
insl
cwtl
cwtl
xchg
dec
je
cmp
jb
outsl
out
add
push
enter
push
and
push
mov
in
dec
cltd
mov
mov
push
dec
addl
sub
and
in
mov
add
cmp
cld
and
ds
inc
mov
dec
push
push
divl
mov
inc
mov
call
mov
stos
push
jle
cwtl
xor
push
push
bnd
test
add
add
bound
aaa
push
fs
mov
or
push
aam
sub
add
aam
and
or
add
negb
mov
mov
or
adcb
shll
pop
adc
adc
sub
pop
lcall
adc
add
je
loope
outsl
pusha
add
arpl
jns
ljmp
cmp
pop
dec
stc
pop
add
jge
gs
add
jo
xlat
add
or
pop
cmp
jmp
aas
cld
movsb
int3
adc
loopne
nop
fcmove
pop
jae
jns
xchg
xor
adc
mov
dec
jo
adc
cmp
inc
jl
inc
imul
sub
ds
add
add
jae
loope
jns
add
jns
adc
lds
insl
jg
and
stc
sub
or
or
cmp
ss
push
sbb
xor
push
fs
add
sub
cs
js
push
add
sbb
push
push
mov
movsl
adc
mov
mov
adc
nop
int3
mov
xchg
or
and
push
insb
je
movsl
ljmp
dec
push
and
aad
arpl
test
fs
push
xchg
mov
jb
pop
lahf
pop
ljmp
mov
out
mov
dec
adcb
ss
movsb
pop
loop
add
ja
or
cmc
orl
mov
shll
mov
ret
xchg
mov
dec
adc
cli
jns
inc
add
arpl
popa
fs
push
dec
xor
inc
outsb
mov
mov
inc
sub
dec
or
dec
xor
call
xchg
xorl
hlt
jae
fcom
sbb
xchg
cld
inc
insl
push
jo
inc
insb
inc
xchg
inc
fcoml
je
cmp
pop
push
hlt
and
dec
and
adc
cmp
mov
fistpl
xchg
cmc
mov
dec
or
outsb
std
sub
inc
ljmp
sbb
or
outsb
mulb
xchg
cmp
iret
jge
mov
xor
loop
imul
push
das
adc
mov
scas
sbb
sti
push
jns
push
xlat
repnz
sbb
incl
sbb
xchg
lock
sub
xor
insb
je
es
pop
movsl
add
cli
cmp
sar
and
push
shll
loopne
pop
dec
scas
sub
mov
or
xchg
dec
pop
push
in
dec
jno
cmc
insl
cwtl
test
inc
jne
sub
dec
dec
xor
cmp
imul
push
shrb
das
mov
dec
stos
lock
jmp
xchg
pop
outsl
sub
push
mov
cld
mov
cld
bnd
insb
dec
pop
adc
test
and
push
dec
fisubrl
ja
adc
test
mov
and
adc
orb
sbb
rol
sarl
mov
test
jp
xchg
or
sbb
inc
sbb
adc
mov
adc
xchg
sarl
mov
add
push
push
push
arpl
xchg
imul
lods
or
mov
mov
push
inc
test
outsb
popf
int3
inc
std
into
js
adc
bound
xchg
sbb
std
and
std
in
and
fisubl
aad
hlt
sbb
iret
lods
aad
lahf
jbe
div
iret
xchg
out
lahf
sahf
stos
mov
jmp
sbb
movsb
sti
mov
mov
mov
in
into
out
mov
out
ljmp
in
mov
mov
insb
jge
imul
enter
pop
dec
or
or
push
cmp
inc
mov
push
jae
inc
lret
push
into
std
bound
out
imul
gs
mov
mov
imul
call
idivl
xor
and
or
sub
outsb
cli
lret
add
push
std
in
insb
add
les
mov
sbb
outsb
sti
mov
dec
fisubs
dec
add
ja
jb
push
pop
mov
dec
xor
imul
cmp
add
mov
inc
jl
jo
dec
test
popf
movsl
jno
inc
adc
mov
shlb
add
mov
test
dec
mov
add
jge
jle
inc
dec
add
inc
fists
adc
cmc
gs
or
mov
fadds
and
inc
xchg
pop
mull
orb
mov
mov
jo
xchg
dec
xchg
adc
or
inc
fs
test
cmp
adc
or
je
adc
dec
jge
mov
mov
test
push
sub
inc
mov
dec
mov
dec
jae
xor
xor
hlt
push
icebp
xor
inc
sub
int3
pop
inc
cmp
jo
into
mov
xor
insl
xchg
dec
cmp
jmp
jge
in
jb
aad
inc
sub
mov
mov
imul
ljmp
in
lods
test
ljmp
test
insl
jmp
dec
imul
imul
adc
unpcklps
rcrl
cmc
pop
cmp
jecxz
arpl
cltd
mov
pop
mov
addr16
add
cwtl
clc
mov
push
or
jp
rolb
in
cmp
andl
daa
push
outsl
insb
daa
push
outsl
mov
adc
imul
pusha
sbb
push
insl
xchg
repnz
sub
mov
and
jne
in
ja
in
bnd
in
jne
add
jne
int3
repnz
testb
fstpl
dec
les
pop
sub
adc
xor
xorps
leave
push
data16
shrb
xchg
orb
and
mov
pop
fisubl
movsb
push
inc
mov
cmp
nop
or
or
push
mov
call
sbb
push
jns
push
push
mov
mov
jne
mov
hlt
lea
cld
loop
or
sub
ja
jne
push
fs
jae
jg
cld
or
adc
xchg
cmpsl
lea
jg
and
fs
inc
adc
pusha
xorb
mov
fs
and
fsubl
sbb
sbb
add
push
ja
lcall
sbb
out
mov
jl
push
xchg
ljmp
mov
adc
pop
mov
inc
sahf
sbb
push
and
adc
dec
adc
ss
and
inc
and
adc
adc
std
das
and
subb
arpl
xchg
lods
pusha
in
mov
inc
jno
movsb
mov
and
cs
add
pop
faddl
cmp
xchg
sahf
adc
ja
mov
loopne
xor
or
add
sbb
pop
enter
or
or
xchg
sbb
imul
fdivrl
xor
inc
jo
leave
iret
or
sub
inc
push
cmp
xor
insb
mov
xchg
dec
js
or
adc
mov
imul
add
sub
fs
push
insb
and
xchg
mov
loope
pop
dec
adc
mov
lods
jno
ficoms
and
lahf
cwtl
stos
jmp
jge
xchg
dec
lods
jb
imul
mov
sub
imul
pushw
sub
mov
sbb
inc
push
sbb
data16
insl
loopne
loopne
leave
sub
push
jo
mov
jo
test
add
or
cmp
inc
xchg
xchg
and
mov
hlt
jb
push
outsb
push
xor
jl
push
or
fldz
pushf
sub
inc
push
adc
xchg
fbld
mov
pop
jecxz
sub
outsb
sbb
push
push
ss
data16
push
or
mov
clc
adc
jmp
dec
inc
adc
adc
fbld
mov
aam
pushf
inc
movsl
rcrb
enter
or
inc
jns
jne
mov
xor
popa
or
outsl
lds
push
sbb
push
cmp
push
daa
sub
js
dec
cltd
faddl
arpl
les
sbb
adc
insl
sbb
adc
dec
gs
inc
jg
jo
movsb
mov
pushf
test
je
rorb
jne
adc
int3
or
add
jmp
gs
pusha
or
pop
adc
mov
sbb
je
adc
adc
push
add
jne
push
stos
addr16
push
jns
into
inc
pop
or
xchg
pop
add
push
push
popa
push
add
mov
movsl
repz
mov
sub
or
lods
inc
xchg
add
add
add
add
aam
xchg
rclb
inc
loop
test
mov
inc
inc
nop
jb
add
ss
lea
movsb
add
imul
dec
lods
adc
call
push
out
mov
and
adc
stos
lret
repz
enter
ja
inc
add
sbb
test
daa
push
sbb
daa
call
sub
dec
arpl
mov
push
or
push
inc
and
dec
pop
mov
mov
and
dec
and
xchg
pop
xor
sbb
mov
add
cmp
lods
inc
rclb
mov
lcall
add
cmpsl
add
gs
inc
lcall
jge
imul
jnp
pop
sub
rorb
insb
js
in
cmp
and
int3
push
or
stos
cli
rorb
aad
adc
dec
inc
fdivrs
shlb
shlb
push
xor
les
or
inc
add
mov
add
add
out
shlb
ret
sub
xor
movsb
adc
addl
mov
int3
in
cmc
mov
mov
mov
fsubrl
pop
ret
mov
push
adc
xchg
mov
inc
call
popf
cwtl
mov
mov
aam
icebp
cmp
clc
sbb
xor
add
in
cld
adc
ret
das
or
mov
add
loopne
and
jo
dec
inc
das
xor
mov
xor
sbb
outsb
and
sbb
inc
dec
rorb
mov
mull
push
sbb
daa
add
sbb
or
jno
add
loop
out
icebp
jg
push
xor
add
push
lods
push
adc
scas
inc
push
mov
and
cmc
push
push
sbb
ret
out
adc
push
bound
xor
test
push
icebp
jne
add
mov
push
scas
inc
push
rclb
push
outsb
push
nop
push
in
push
nop
push
mov
push
push
and
cld
insl
popf
or
in
sbb
scas
movsb
aam
cwtl
mov
test
or
pop
test
scas
adc
pop
xchg
notl
test
lahf
cmp
inc
nop
je
mov
lds
ret
add
pop
andl
inc
mov
or
sub
dec
or
mov
xchg
sbb
inc
rorl
cwtl
adc
shlb
mov
cmp
xchg
cmp
push
xor
inc
xor
cmp
sub
lds
inc
pop
mov
jo
js
jl
adc
clc
push
mov
or
movsb
les
push
add
rol
sub
mov
or
push
test
sbb
and
out
add
inc
add
mov
les
lock
jle
sub
int3
adc
or
test
mov
xchg
xor
adc
jo
push
push
and
sub
or
movsb
add
pop
push
movsl
pop
adc
lods
pusha
fs
mov
and
dec
pop
sub
adc
sbb
in
and
rolb
in
aas
or
add
in
or
das
xchg
jb
insb
xor
cmp
mov
dec
cs
inc
insb
mov
mov
pop
mov
add
inc
mov
and
mov
dec
add
sub
or
sbb
and
nop
lods
pop
leave
add
dec
ret
sub
sub
push
push
xor
neg
inc
sbb
push
flds
push
es
mov
les
adc
or
add
test
leave
and
andl
test
movsl
dec
push
push
dec
les
das
fsubs
push
cmp
loop
pop
pushf
pop
adc
dec
repnz
xchg
mov
lods
orb
mov
enter
std
shlb
out
push
pop
sbb
adc
push
pop
lods
adc
adc
pop
sbb
das
dec
xor
adc
or
inc
mov
clc
add
sbb
sbb
and
push
es
or
dec
adc
or
xchg
sub
fcom
and
inc
call
add
mov
and
cmp
mov
cmp
mov
add
pop
mov
mov
mov
dec
les
jl
roll
sub
rclb
push
clc
and
jo
test
dec
rolb
push
inc
mov
mov
mov
add
and
and
xor
inc
add
adc
lret
pop
sbb
mov
and
test
sbb
cmpsl
push
sbb
fnstcw
push
and
dec
push
cmp
pusha
or
and
dec
lods
xchg
mov
and
mov
pop
cld
int
xor
lcall
inc
test
push
adc
repz
mov
add
les
js
test
push
adc
insl
adc
dec
cmpsb
xor
pop
bound
imul
or
inc
cmp
jecxz
dec
shrb
jl
adc
mov
push
cs
insb
mov
jo
xchg
or
jl
insb
push
and
sub
inc
sub
add
push
xor
push
inc
pop
mov
jl
pop
add
xchg
andb
push
pushf
adc
loopne
xchg
mov
into
xchg
xor
cmp
sbb
loope
lds
test
inc
mov
pop
aam
call
xchg
sbb
mov
pop
inc
add
into
and
mov
insb
cmp
xorb
mov
sub
shlb
push
push
sub
leave
xor
je
cmpb
dec
xchg
inc
push
sbb
es
in
shlb
xchg
rorb
cwtl
or
inc
mov
cmp
test
mov
into
dec
adc
loope
sbb
sbb
cwtl
inc
mov
push
and
cmp
add
adc
xor
int3
jno
pusha
mov
loopne
movsl
inc
adc
mov
in
sarb
inc
aam
fdivl
and
adc
les
shlb
inc
cmp
inc
and
sub
push
inc
pop
aam
shlb
xor
cmp
xor
les
aaa
clc
fildll
cli
add
js
lret
js
in
or
mov
dec
int3
xchg
fsubl
lock
cld
add
aam
adc
mov
pop
imul
sbb
push
les
mov
cmpsb
mov
push
test
cld
and
mov
sub
inc
mov
pusha
and
dec
adcb
mov
and
dec
lock
xchg
lea
pop
shl
js
or
jo
push
dec
or
mov
xor
push
loopne
sub
sub
cmp
loopne
clc
pop
pop
fsub
in
dec
lods
shl
jge
movsl
cld
jecxz
and
lds
adc
xor
enter
leave
inc
popa
inc
lods
adc
xor
sbb
or
incl
and
fcomps
sbb
sbb
sub
fmuls
in
lds
lock
mov
add
sub
aam
xor
insl
jae
push
ja
popa
jb
pushf
sbb
subl
pushf
sub
or
jne
inc
mov
cltd
sbb
push
mov
jge
clc
faddl
popa
fs
outsb
fidivrl
xor
imul
jno
stos
jb
and
or
stos
inc
call
aaa
sbb
popa
insb
cmpsl
mov
outsb
xor
data16
jae
sbb
push
imul
movb
dec
sbb
in
jl
xor
jo
push
pusha
nop
inc
outsb
jns
or
call
arpl
mov
popa
sbb
mov
std
cld
or
pop
inc
or
xchg
sbb
inc
jne
mov
es
inc
inc
in
dec
push
imul
js
popa
js
adc
arpl
xchg
inc
addr16
pop
out
in
sbb
jne
push
xchg
push
mov
ss
outsl
cwtl
inc
lods
jo
sti
dec
popa
sbb
ja
test
and
outsb
adc
in
in
movb
push
js
imul
inc
inc
inc
mov
addr16
dec
ds
cmc
dec
jle
mov
nop
je
adc
sti
push
push
pmulhuw
push
pop
adc
sbb
mov
jo
sub
cmp
into
cmovb
adc
xchg
test
mov
cltd
push
dec
jne
jge
xor
dec
xchg
jae
in
adc
sbb
sbb
inc
adc
dec
gs
ja
fldcw
les
dec
es
jno
rcll
pop
and
pusha
das
mov
pop
mov
shll
cld
js
add
mov
or
sub
push
inc
dec
jae
outsl
cwtl
inc
cwtl
test
dec
lret
add
and
push
mov
and
das
push
mov
and
lock
or
gs
or
cld
push
shlb
add
push
call
les
mov
movsb
or
lods
insb
or
xchg
and
enter
inc
mov
data16
push
adc
dec
xor
lea
dec
in
call
cmpsb
cmp
push
xlat
adc
adc
loopne
pop
xor
or
fnstcw
adc
test
hlt
fwait
adc
sbb
xor
fs
cmp
call
push
adc
movsb
xchg
enter
das
xchg
push
stos
movb
adc
and
push
and
and
push
push
xchg
sbb
push
sbb
cmp
rcll
mov
les
xchg
push
push
ret
inc
es
sbb
adc
mov
push
mov
mov
mov
int3
push
mov
test
and
jle
cmc
or
push
push
adc
repz
leave
inc
or
adc
nop
sub
cli
add
xchg
stos
add
push
loop
lea
fnsave
mov
pop
xor
and
fldl
in
sbb
cmp
or
lods
adc
dec
mov
repz
push
mov
add
push
jmp
xchg
push
adc
test
adc
and
adc
pop
aaa
dec
push
and
pop
ret
out
sbb
xchg
adc
js
jg
add
sahf
fidivrl
jno
or
sub
xor
hlt
and
mov
pop
adc
ret
and
inc
repz
fsub
ja
les
or
xchg
sub
adc
mov
jge
enter
loopne
faddl
aam
rolb
int3
add
or
adc
and
add
fstpt
cmp
push
push
xchg
push
inc
js
xor
inc
push
inc
or
push
push
mov
pop
push
inc
out
push
push
dec
mov
and
in
inc
mov
pop
fsubs
lods
mov
mov
adc
ror
push
loopne
sub
push
in
mov
jne
sbb
pushf
shll
pushl
mov
adc
aam
rorb
mov
fadds
mov
enter
and
fnstenv
inc
rclb
dec
loop
nop
xchg
cwtl
call
in
enter
in
pushf
test
mov
stc
add
aam
cmp
je
nop
push
push
adc
call
mov
push
xchg
and
mov
outsb
push
or
dec
call
loope
imul
jno
mov
xchg
adc
test
in
les
dec
cmp
loopne
and
inc
cwtl
and
jno
out
xor
pop
seto
xor
sbb
and
in
loopne
adc
or
adc
and
cmp
jl
ret
cmp
insb
push
inc
pop
and
push
and
les
and
test
jnp
dec
fildl
shrb
and
pop
fcoml
adc
les
pop
push
test
test
enter
mov
mov
jae
and
push
add
mov
wbinvd
xchg
ret
neg
cmp
cmp
cld
test
pop
add
mov
int3
mov
dec
mov
ret
je
pop
shll
adc
cmp
add
push
push
lock
call
je
adc
enter
dec
pop
mov
add
enter
mov
or
sbb
push
dec
inc
xor
push
push
mov
mov
insb
leave
push
insb
sbb
push
movsb
cmp
push
pop
sbb
pop
mov
mov
xor
xchg
fsubrs
xor
adcl
test
dec
aas
loop
dec
lods
xchg
scas
stos
inc
lods
stos
and
in
xchg
je
pop
insb
adc
movsb
js
ss
xchg
adc
add
hlt
push
mov
fs
push
fs
mov
xchg
dec
adc
inc
aas
and
xchg
sbb
jbe
pop
xchg
dec
or
push
mov
sub
movsb
stos
inc
sub
dec
ljmp
in
push
out
add
adc
jge
pop
movsl
ss
ret
inc
mov
add
cmp
lock
mov
neg
sbb
inc
or
and
test
xor
test
enter
jne
push
jp
aas
xchg
lret
mov
imul
inc
mov
pop
aad
inc
xor
or
mov
dec
je
and
add
pusha
outsl
sub
adc
inc
or
xor
test
mov
js
xor
cmp
push
sub
mov
sub
mov
xchg
test
fs
out
push
adc
aad
and
aaa
jp
and
and
movsb
fwait
adc
push
mov
lock
clc
xchg
test
sub
sub
and
icebp
ret
adc
mov
or
mov
fs
xchg
cwtl
pushf
in
adc
jmp
ret
dec
or
mov
xchg
es
daa
mov
jo
lock
mov
jns
stos
int
lea
sub
out
and
inc
in
and
sti
aam
push
xor
or
test
in
fiadds
fidivrl
fdivs
mov
add
mov
mov
movsl
push
push
inc
clc
repnz
and
lret
rorl
dec
ljmp
out
push
out
test
push
lcall
cmp
push
pop
push
add
repz
cmpl
sub
cmpb
add
jmp
jno
pusha
in
cs
and
mov
adcl
lods
xor
test
sbb
inc
and
mov
and
popf
and
enter
inc
jno
test
mov
cwtl
nop
clc
mov
cmpps
add
cwtl
cmpsl
sbb
icebp
lcall
inc
aaa
lret
mov
pusha
mov
sbb
std
mov
pop
xchg
or
nop
xor
or
dec
xchg
pop
fxch
cvtps2pd
sbb
adc
push
jnp
fcomps
out
mov
sub
add
xchg
leave
adc
int
jmp
fwait
push
jmp
dec
enter
push
adc
pop
push
dec
add
pop
push
sbb
lea
push
and
sub
adc
pushf
test
push
sbb
ret
sti
rcll
push
rcll
and
or
enter
dec
cld
and
jbe
sbb
inc
mov
aas
jo
dec
mov
adc
fisttpl
out
mov
add
repz
xor
mov
fcomp
adc
int3
dec
push
push
lds
loopne
ret
dec
add
pushf
jno
adc
ret
push
sbb
rcll
push
push
push
inc
dec
roll
or
mov
cmp
inc
push
js
push
mov
xor
pop
inc
inc
mov
push
sub
jg
jg
push
xchg
and
sub
insb
repnz
push
xchg
call
push
dec
pop
xchg
inc
sbb
in
jge
mov
in
inc
xlat
mov
ficoml
ret
adc
push
outsb
test
insb
or
mov
test
push
jns
push
xlat
mov
dec
adc
sub
pusha
inc
jmp
or
pop
icebp
jg
xchg
xor
sub
and
icebp
or
mov
inc
pop
fwait
jge
call
loope
push
add
mov
lcall
stc
sbb
and
or
rcl
jae
push
or
lcall
mov
in
add
fmull
cmp
push
fs
push
push
jmp
and
mov
loope
inc
loopne
or
inc
loopne
mov
mov
pop
mov
callw
movsb
rcl
in
adc
sbb
and
jo
sbb
and
pop
mov
fadd
adc
int3
imul
lods
pop
or
sub
repz
les
sahf
into
popa
push
inc
adc
std
pop
std
dec
sahf
adc
inc
add
scas
adc
shrb
pop
pop
insb
push
test
cld
or
mov
fs
push
push
sbb
xchg
and
add
hlt
and
sbb
or
mov
mov
fiadds
je
sbb
fs
ljmp
sub
xorl
mov
das
push
inc
adc
test
push
addl
dec
adc
outsb
pushf
mov
inc
test
sub
test
imul
push
push
fdivr
or
jns
sub
loopne
lret
icebp
push
push
lcall
insb
cwtl
inc
push
mov
inc
xor
xchg
sub
ds
mov
push
imul
or
or
or
lret
dec
leave
mov
decb
mov
push
sub
enter
jl
enter
lods
add
rorl
into
or
dec
mov
imul
inc
mov
push
xor
dec
ret
popf
aam
adc
in
push
mov
and
sbb
pop
sub
add
arpl
xchg
xchg
lods
lds
mulb
data16
inc
inc
push
jo
dec
cmp
mov
sub
mov
add
sub
loope
rolb
xchg
xor
cmp
jne
sub
fdivrs
das
dec
adc
xchg
fnstenv
sbb
jg
mov
mov
xor
insl
lods
and
sbb
loopne
jl
das
jne
adc
shrb
or
xchg
adc
or
int3
daa
xchg
mov
sbb
in
js
jne
adc
sub
call
sbb
adc
xor
push
adc
cld
inc
adc
and
or
inc
cmp
mov
mov
sub
or
jns
and
rorb
cmpb
test
or
popf
mov
adc
push
and
sbb
pop
jno
ret
ficoms
int3
add
mov
sub
inc
sbb
sub
fwait
je
fstps
push
lea
cs
and
xor
adc
popa
push
mov
inc
xor
sahf
or
sbb
mov
popf
mov
push
push
loopne
jl
add
sbb
faddl
jecxz
lret
xchg
pop
sarb
inc
mov
mov
test
jb
dec
cmpsl
or
push
push
jnp
pushf
push
pop
adc
inc
inc
ja
adc
pop
add
xor
inc
xor
insl
inc
jns
cmc
daa
cmpsl
sub
inc
xor
sahf
mov
mov
cmpsl
fsts
xor
test
ljmp
daa
cmp
sbb
adc
adc
enter
and
xchg
or
and
cmp
xchg
inc
mov
sti
xor
mov
lods
fwait
push
xor
filds
xchg
mov
addr16
pop
pop
xor
out
push
rolb
adc
cwtl
and
or
mov
mov
add
inc
loop
push
mov
inc
inc
adc
add
fnclex
pop
jnp
dec
push
fmul
push
aam
shlb
or
adc
int3
enter
les
rolb
xorb
inc
push
pop
xor
fimull
mov
cs
aam
adc
mov
or
mov
movsl
cmp
pop
aad
push
cmc
fs
sub
mov
xor
dec
aas
inc
push
je
dec
pop
mov
jle
push
enter
sub
xchg
xchg
mov
pop
ss
mov
ljmp
mov
mov
add
mov
push
and
inc
cmp
clc
add
lret
nop
jge
test
repz
dec
addb
shll
jne
jp
fimull
aam
and
push
mov
shl
xor
les
enter
int3
push
push
fs
jnp
jns
mov
xchg
dec
adc
call
mov
dec
push
test
sahf
loope
inc
or
add
adc
nop
inc
jmp
xchg
mov
adc
pop
mov
dec
mov
popf
push
notb
cwtl
lock
add
or
and
fcmovu
or
movl
and
inc
sahf
imul
adc
sub
add
mov
inc
inc
ljmp
and
and
clc
mov
inc
sbb
jae
push
pop
dec
les
imul
inc
or
testl
sub
in
arpl
es
xor
loopne
repz
dec
lret
dec
adc
mov
aam
cwtl
lret
cmp
mov
loop
adc
sub
jle
inc
lds
aad
cld
dec
jmp
xor
out
stc
push
or
je
fcoms
iret
adc
dec
inc
cmp
and
dec
setne
add
push
mov
mov
push
loope
mov
push
test
xlat
fidivs
std
push
push
sbb
in
mov
mov
cld
xorb
nop
lods
xor
xor
lret
adc
pop
ret
inc
and
sub
push
sub
jge
push
std
bound
and
fs
and
push
shll
stc
or
shlb
shll
push
in
pushl
in
stc
enter
or
mov
and
pop
and
and
push
roll
sbb
sti
lods
add
pop
and
jmp
and
pop
push
sub
xlat
and
jb
and
pushf
or
inc
repnz
inc
loopne
in
aas
and
fs
lods
and
or
icebp
push
pop
outsl
jb
push
fdivl
push
lahf
xchg
mov
sbb
dec
lods
or
and
cmp
and
loope
movl
aam
out
xor
add
dec
pop
mov
jno
or
inc
jle
xchg
push
cmc
pop
test
test
ds
js
ds
xchg
inc
scas
adc
ds
jne
adc
push
xor
push
mov
fs
movsl
mov
add
das
push
mov
mov
pop
nop
or
into
sub
call
add
adc
xor
fdivrl
ljmp
ljmp
inc
cmpsb
fmuls
or
jnp
nop
je
adc
push
je
insl
adc
and
push
test
and
in
mov
int3
and
pop
mov
cld
inc
inc
push
mov
fildl
push
cmp
inc
nop
jp,pt
and
cmp
andnps
dec
rcrl
cmp
jg
int3
dec
ds
shlb
push
push
shr
adc
mov
inc
or
and
and
movsl
pop
lock
inc
or
add
cwtl
imul
or
movswl
orl
pushl
jle
test
and
mov
mov
nop
or
shl
int3
push
loopne
or
xchg
mov
lods
mov
jmp
push
push
sarb
dec
adcl
cmpb
stc
imul
shlb
jae
jae
inc
push
inc
js
dec
out
dec
rorl
push
push
dec
clc
dec
and
mov
rorb
shrb
and
call
inc
xchg
and
and
pop
push
and
ret
sub
pop
fmull
cmp
ret
icebp
mov
insl
and
sbb
xor
or
pop
lock
pusha
in
xor
cmp
add
fdivrl
jmp
or
add
pop
cmp
loopne
or
int3
mov
fstpl
xor
loop
add
inc
mov
fldcw
push
lret
pop
push
pop
push
cmp
fistps
insl
pop
sub
xchg
aaa
iret
and
adc
lds
inc
daa
adc
xorl
lea
push
mov
fiadds
dec
dec
xchg
cld
add
jo
push
pop
or
push
test
dec
mov
xchg
or
mov
fdivl
jmp
cmp
adc
xor
adc
xor
call
mull
lock
sbb
shlb
imull
push
lock
push
hlt
mov
cld
add
push
push
sub
mov
adc
inc
push
adcb
xor
jne
and
add
test
cwtl
testl
pop
cmp
repnz
aas
mov
cmp
inc
push
and
push
mov
xchg
in
xchg
lea
mov
sbb
pushf
and
mov
dec
mov
push
dec
mov
push
inc
add
push
xchg
or
out
mov
push
fstps
fadds
or
xchg
add
xchg
add
push
shlb
call
or
mov
add
cmp
and
pop
cmp
jge
and
add
inc
mov
xor
push
std
out
adc
mov
xor
test
aam
and
mov
and
mov
xor
mov
mov
cmp
sbb
sbb
inc
add
frstor
lahf
bound
xor
ret
push
mov
nop
mov
inc
mov
inc
mov
xchg
sbb
push
daa
lods
mov
out
scas
adc
dec
nop
mov
leave
push
fdiv
pop
mov
pop
pop
cwtl
pop
jmp
sbb
push
flds
or
nop
push
add
mov
pop
test
aaa
push
cwtl
inc
inc
jne
dec
push
je
scas
push
mov
bswap
shl
and
or
adc
adc
arpl
xchg
imul
mov
movsb
xchg
xchg
jbe
inc
push
nop
adc
push
pop
or
fistps
push
mull
sbb
adc
daa
push
repz
cwtl
int3
les
aam
dec
and
pushf
pop
lods
fldl
gs
daa
jecxz
fnclex
push
inc
test
jge
cmp
inc
dec
lods
push
mov
cmp
mov
icebp
adc
movsb
aas
das
xorb
or
xor
or
sbb
jb
ret
scas
lret
adc
xor
aad
pop
stc
and
jmp
xchg
outsb
adc
push
out
ss
imul
leave
jne
dec
cmp
aas
test
mov
outsl
aam
add
pop
adc
or
sbb
jge
dec
mov
add
push
sbb
iret
pushf
xchg
adc
iret
leave
fcoms
repz
and
inc
pusha
adc
or
cmp
and
cld
and
push
xchg
cmpsl
and
pop
or
and
sbb
cmp
add
leave
mov
jmp
xchg
jmp
sub
add
in
fcoms
lock
dec
and
jecxz
adc
dec
add
leave
or
mov
dec
mov
sub
out
sub
fstl
js
push
push
and
test
aas
inc
inc
cmp
sub
xchg
xchg
lock
cmp
inc
jmp
jno
add
lock
xchg
cmp
icebp
cltd
pop
jp
jg
push
and
dec
mov
add
add
add
fwait
rorb
adcl
mov
inc
push
sub
pop
in
mov
addb
adcl
mov
jmp
cmpl
pushl
lcall
jge
nop
ljmp
rcl
addl
sarb
mov
inc
cmp
mov
mov
xchg
push
lods
sub
or
pop
mov
lahf
jecxz
pop
shll
adc
inc
or
mov
cmove
test
lahf
gs
pop
lret
adc
pop
sahf
cwtl
dec
mov
nop
mov
enter
lods
sbb
push
push
push
call
mov
cltd
enter
inc
push
lock
imulb
loopne
add
call
in
jb
fsubr
fcomps
cmp
es
jo
inc
jns
mov
repz
xchg
divb
xchg
lcall
addb
mov
push
add
or
sbb
and
rolb
les
push
imul
test
test
ret
aam
mov
jo
imul
pop
sarl
popf
sub
dec
cmp
sub
xor
fucom
or
jmp
cmp
imul
lcall
jge
mov
outsl
enter
sbb
in
rcl
mov
xchg
sub
inc
or
and
movsb
push
cmp
mov
lock
jb
loopne
xchg
mov
nop
pop
and
adc
gs
cmpsl
jle
mov
inc
test
std
imul
xchg
outsl
imul
fcoms
pusha
test
mov
mov
sub
or
push
cmp
jmp
cwtl
flds
mov
ss
aaa
mov
cmp
inc
shr
dec
adc
pusha
xchg
cld
int
push
call
jl
sub
push
inc
jp
idiv
lahf
xchg
and
adc
push
add
jo
inc
sbbb
adc
outsl
push
in
rcrb
adc
popf
jbe
jecxz
push
sub
cmpsl
addr16
mov
pop
lods
mov
push
sbb
push
xor
inc
fmuls
sahf
loop
nop
enter
push
dec
lods
in
lods
test
push
pushf
and
xchg
jb
dec
push
adc
mov
mov
scas
data16
push
push
aam
imul
das
and
fnsave
pop
xchg
pusha
and
cmp
and
inc
aam
cmp
pop
jne
into
and
xchg
enter
xchg
sbb
cltd
mov
sbb
xor
mov
pop
inc
aam
in
or
hlt
cmp
or
rcr
xor
jp
stc
sub
mov
lcall
jnp
jbe
insb
imul
in
push
loop
dec
jle
mov
lea
inc
mov
xchg
jmp
inc
mov
gs
adc
and
sbb
imul
repnz
xchg
inc
xlat
lods
rcl
pop
inc
cmp
dec
adc
mov
xor
dec
or
xchg
and
nop
or
clc
mov
pop
int3
mov
pushf
and
cmp
mov
mov
cmp
mov
js
shrb
js
mov
inc
jns
xor
mov
mov
outsb
mov
mov
fs
and
inc
xor
push
pop
les
js
mov
sahf
movsb
mov
push
int
or
xchg
and
adc
mov
jns
or
leave
pop
fnstsw
int
inc
mov
enter
sub
test
int
dec
adc
jne
dec
sbb
mov
cmpsb
inc
std
imul
push
push
mov
out
pop
loope
xor
xchg
and
out
inc
test
or
es
fsubs
orl
xchg
push
in
cwtl
jns
inc
mov
push
div
xchg
out
jno
clc
fs
sub
adc
or
pop
or
sub
push
enter
pop
pop
mov
mov
push
or
nop
pusha
add
hlt
inc
cmp
mov
xchg
xlat
imul
cmpb
and
push
testb
mov
or
mul
adc
mov
test
cmpsb
sub
in
mov
adc
sbb
sub
js
cmp
mov
sub
inc
dec
adc
xchg
push
in
sub
shr
sub
xchg
xchg
push
mov
dec
leave
lods
outsb
fwait
jb
int3
nop
fsubrl
es
or
stc
push
jno
cmpsb
imul
imul
push
das
pusha
adc
cmp
lahf
sbb
in
mov
das
mov
xchg
call
enter
sub
fs
cs
mov
out
and
push
rorb
fadds
fidivl
lods
push
sub
pop
jg
mov
sti
cmp
clc
mov
inc
jp
adc
push
push
rcr
in
jp
out
inc
rorb
test
push
fsubs
das
inc
jno
iret
mov
dec
inc
push
out
dec
mov
dec
je
jb
push
shl
es
inc
xchg
mov
sub
daa
leave
pop
incb
repnz
jns
mov
dec
lock
scas
push
xor
adc
inc
movsb
sbb
or
adc
xchg
call
cs
dec
and
push
dec
in
dec
sbb
cld
or
mov
sub
jae
or
add
or
and
adc
and
add
dec
jl
xchg
adc
lret
test
inc
movups
mov
insb
cwtl
or
int3
test
push
rcll
dec
xchg
dec
rolb
ja
cwtl
and
cmp
cmpsl
scas
mov
dec
inc
stc
js
ljmp
pop
sahf
jo
movsb
sahf
popa
cmp
mov
mov
popf
addr16
push
nop
mov
adc
out
mov
mov
popf
adc
pop
push
ret
cmp
fmuls
clc
mov
jecxz
ja
push
mov
xlat
mov
test
mov
shll
ds
xor
ds
add
push
mov
out
cmp
iret
nop
repnz
std
bound
mov
cmp
mov
xor
jno
or
mov
std
in
jns
rclb
cmpsl
ss
adc
push
arpl
mov
addr16
cmp
into
pushf
push
jge
push
pop
movsl
push
sbb
and
jmp
icebp
loop
andl
sbb
mov
mov
sub
mov
mov
mov
mov
sbbl
stos
inc
push
enter
cmp
test
mov
enter
lahf
bound
push
mov
in
popf
and
adc
xchg
in
lock
fldenv
adc
sub
pusha
mov
sbb
push
fs
cwtl
push
xchg
mov
in
shll
ficoms
cmp
dec
mov
fdivrl
sbb
xchg
push
shlb
mov
addr16
jecxz
les
out
out
dec
sbb
mov
nop
xchg
dec
dec
pop
mov
aad
jo
into
pop
xchg
dec
cmp
cmp
and
fcoml
sbb
push
or
pop
pushf
xchg
sbb
or
add
push
dec
enter
dec
jmp
mov
loop
nop
mov
fldcw
int3
into
testl
mov
sub
or
test
out
push
pop
mov
iret
inc
push
push
or
or
xchg
loope
icebp
es
sub
and
xchg
icebp
push
out
insl
subb
inc
push
les
cmp
test
adc
cld
lock
loopne
mov
pop
or
pop
mov
xor
push
and
addr16
aam
js
pop
outsl
xchg
xchg
pop
push
lods
adc
adc
add
or
push
repnz
les
mov
mov
push
lcall
shlb
or
fisttps
repnz
adc
lods
cld
inc
mov
push
xchg
push
mov
cwtl
fsubrp
and
fidivs
sti
and
sub
push
xlat
call
mov
movsb
out
xchg
popa
stc
lods
sub
mov
xor
mov
push
inc
pop
add
daa
jl
aaa
loop
add
pop
dec
sub
sbb
dec
movsb
mov
sahf
leave
push
sti
or
mov
inc
dec
js
inc
fwait
push
sbb
scas
lock
add
rcr
adc
inc
movsb
lods
ret
jecxz
icebp
sub
rcrb
aam
fdivs
fsubrl
ficoms
jbe
jmp
cli
sub
dec
into
pusha
enter
push
xchg
jbe
dec
jge
in
push
mov
fstpl
adc
mov
lret
pop
xlat
jmp
movsb
push
mov
mov
lock
adc
mov
mov
mov
add
test
repnz
mov
in
imul
movsb
insl
mov
xchg
xchg
rcll
es
mov
jg
push
mov
stc
jg
xchg
mov
outsb
jb
mov
inc
outsl
inc
sbb
pop
add
pop
pop
mov
in
push
jp
inc
push
nop
dec
mov
push
cmp
mov
push
push
xchg
icebp
aam
or
clc
mov
inc
or
pop
rol
push
data16
push
arpl
test
or
insb
cwtl
push
add
bound
pusha
add
test
xlat
mov
adc
and
imul
hlt
ret
aas
push
push
push
jae
out
or
or
xchg
inc
push
enter
stos
popf
push
or
mov
inc
add
insl
pop
mov
adc
push
mov
cli
adc
ljmp
scas
loop
adc
push
fcoms
sbb
sub
xchg
jge
in
out
cmp
inc
leave
pop
sbb
sub
mov
cmp
mov
xchg
sub
inc
push
mov
push
xchg
push
icebp
mov
ldmxcsr
incl
out
les
into
inc
add
sub
sbb
push
inc
dec
jmp
mov
cmp
pop
and
or
jno
sbb
enter
sbb
enter
sub
in
lods
decl
sarl
leave
jbe
mov
mov
arpl
push
jge
aaa
mov
mov
shl
push
mov
adc
rcl
lea
add
mov
sbb
nop
sub
mov
in
push
test
inc
xchg
mov
push
fwait
nop
hlt
push
popa
cmp
loop
inc
xchg
mov
or
push
mov
mov
pushf
and
inc
loop
push
xchg
dec
inc
je
and
sub
xchg
mov
inc
push
leave
inc
sbb
jno
mov
rclb
cmp
fisttpll
pop
xor
mov
inc
scas
setnp
jae
je
pop
out
mov
push
je
fnstenv
inc
xor
jo
mov
xlat
and
pop
fbstp
cmpb
fnstcw
adc
jae
xchg
push
mov
cmp
std
adc
dec
lods
mov
mov
lcall
hlt
xor
sahf
in
div
aaa
popf
cmp
fnsave
push
pop
mov
or
inc
pop
push
and
pop
sbb
daa
push
dec
pop
adc
in
in
stos
dec
mov
push
cld
mov
jne
mov
das
mov
jb
add
push
fdiv
xchg
cmp
push
sbb
sbb
enter
call
dec
jo
cmp
lods
sbb
enter
pop
sar
sbb
shl
adc
and
fucomip
jle
jp
jecxz
in
and
push
push
loopne
mov
push
bound
rolb
add
sti
lea
dec
mov
push
mov
push
test
je
mov
jle
dec
test
cmp
cs
and
nop
push
mov
cmpsb
adc
push
dec
mov
dec
les
dec
pop
les
call
aad
xor
inc
fisttpll
xor
out
dec
lods
inc
mov
adc
and
fcoml
sarl
and
xchg
enter
test
enter
test
movsb
enter
adc
xor
push
fcmovne
cmp
fcomp
insb
and
lcall
jae
les
in
mov
aaa
jmp
push
and
add
add
sbb
mov
je
xor
sti
sub
jo
sbb
jmp
xchg
stos
rolb
test
and
add
adc
xchg
dec
adc
adc
pop
sub
test
stos
cltd
outsl
das
mov
dec
out
cli
jne
jb
push
ljmp
ficoml
test
inc
or
incb
push
add
xchg
daa
repz
ficoms
test
jb
xor
add
or
outsl
out
dec
sub
sbb
mov
sahf
fs
loop
inc
mov
je
call
push
mov
icebp
dec
iret
push
out
sub
jmp
mov
jmp
loop
add
addr16
mov
inc
and
add
popa
es
outsl
jmp
ret
lret
ror
or
pop
add
inc
jmp
mov
test
or
xlat
xor
leave
hlt
mov
push
push
out
sbb
adc
jmp
clc
xor
and
cmpsb
xchg
pop
out
jne
push
mov
mov
pop
push
cmp
movl
in
es
movsl
sahf
and
adc
xor
roll
popa
push
mov
mov
mov
adc
jge
mov
dec
andb
shlb
stc
dec
iret
int3
fnsave
lahf
fdivrs
ret
push
jns
inc
dec
add
sub
cmp
pop
in
aam
int3
int
idivl
jbe
insl
cmp
insb
cmp
fisttps
push
nop
cwtl
mov
ret
les
mov
test
pusha
push
mov
xor
lret
movsb
shrb
jecxz
xchg
imul
add
adc
mov
add
int3
cmp
adc
sbb
loop
sub
in
cmp
in
mov
xchg
pop
pop
lods
cmc
test
mov
xlat
jmp
int
outsb
dec
jg
push
mov
test
mov
fwait
lock
sub
popa
xchg
and
jmp
cld
or
lods
mov
inc
mull
and
inc
fisubs
push
sbb
out
in
adc
rcrb
ret
aaa
imul
adc
xchg
push
push
cld
les
dec
cmp
sahf
rclb
adc
push
adc
add
ljmp
sbb
inc
push
and
ljmp
dec
lcall
push
loope
add
cmp
pop
sub
mov
icebp
jne
or
loope
xchg
test
pop
sarb
and
dec
inc
push
and
test
cmp
push
xchg
ja
imul
mov
dec
clc
inc
mov
aas
mov
lods
stos
out
jne
jno
dec
loopne
mov
out
inc
xchg
call
shrb
mov
mov
xchg
lret
xchg
xchg
and
push
and
mov
div
and
add
pop
mov
xchg
mov
and
jno
or
pushl
mov
dec
jns
inc
mov
pop
scas
pop
cmpsl
imul
es
movsl
xor
mov
shrl
mov
jp
xchg
inc
int3
pop
dec
mov
mov
mov
imul
ficompl
outsb
inc
mov
add
pop
sub
and
cli
add
cmc
lcall
or
push
dec
add
nop
mov
popl
gs
lcall
lods
push
xor
xlat
ret
sub
test
pop
rorb
cmp
inc
inc
inc
mov
adc
jp
or
mov
rcrb
aam
scas
pop
push
mov
jg
dec
mov
sbb
inc
sarl
push
repz
in
push
push
pop
ja
stc
shr
jmp
add
out
bound
jne
and
aam
dec
imul
imul
imul
imul
ret
xor
inc
jmp
xor
push
insl
int3
jnp
lea
bound
mov
imul
fmull
loopne
dec
in
push
mov
adc
mov
mov
clc
addl
loopne
sub
cmc
insb
cs
mov
pop
mov
sub
cmp
adc
mov
shr
adc
adc
ljmp
jne
lret
mov
xor
rclb
cltd
cltd
int3
sub
and
cmp
es
push
push
pop
les
adc
or
inc
pushf
aam
iret
push
fsubrp
sub
inc
lcall
lret
adc
inc
adc
leave
pop
mov
sahf
pop
mov
in
repnz
lock
cmp
pop
call
jle
sub
lea
push
adc
incl
std
insb
sub
push
xchg
push
lahf
clc
loopne
lea
sbb
mov
pop
das
aam
das
push
inc
jmp
dec
pusha
mov
cmpb
mov
push
in
mov
je
fdivrs
movl
pop
mov
dec
aad
xor
mov
xchg
jo
iret
loopne
pop
movsl
mov
and
cld
dec
or
jo
ror
push
mov
xlat
xchg
jno
push
dec
sub
inc
inc
or
cmp
mov
mov
aad
aaa
pop
shll
push
or
adc
mov
hlt
rolb
test
or
mov
add
insb
push
adc
out
int
das
lods
mov
cmp
clc
sub
aad
xchg
cmp
dec
les
scas
xchg
adc
mov
subl
mov
sbb
pop
pop
out
inc
cmpsb
rolb
push
mov
shr
inc
jb
mov
je
or
mov
push
adc
sub
xchg
sub
dec
pop
mov
sub
push
rcrl
adc
adc
sbb
scas
into
rdmsr
push
fucomp
dec
sub
or
or
stos
loopne
loope
and
adc
or
mov
jno
in
sahf
xchg
sti
sahf
ljmp
pop
mov
inc
pop
cmp
push
inc
jle
mov
mov
push
cld
push
sbb
pop
xchg
sub
mov
mov
cwtl
cmpsl
cld
fsubs
stc
pusha
je
nop
pop
push
cmpsb
addr16
or
clc
das
xlat
hlt
adc
rolb
icebp
cltd
push
rclb
xchg
dec
call
pop
lods
in
xor
cli
push
aam
mov
and
mov
xlat
outsb
inc
and
or
add
mov
lret
push
sbb
adc
nop
rep
imul
sbb
mov
popa
test
mov
jb
jnp
mov
leave
in
push
push
push
inc
xlat
sbb
inc
adc
or
push
inc
sub
aad
ficoml
add
mov
or
fbld
jle
test
subb
xchg
dec
xor
jge
adc
mov
push
inc
adc
jle
sbb
push
sub
xchg
dec
out
push
mov
clc
pop
ja
mov
mov
ret
or
mov
loop
sub
mov
in
adc
inc
enter
adc
test
stos
les
adc
mov
call
testl
inc
inc
push
pop
loope
push
les
push
cmp
std
pop
dec
mov
test
xor
adc
adc
mov
leave
sbb
adc
inc
push
jmp
cmpsl
push
jmp
sub
outsb
mov
xchg
incl
shrl
add
ja
jo
jne
jns
jle
popf
addr16
sbb
out
xor
push
sub
sbb
jbe
mov
bound
pop
push
lahf
push
adc
shlb
rclb
pop
ljmp
and
sbb
adc
repnz
divb
xchg
sahf
pop
mov
jecxz
dec
rcrl
pop
psubusw
lea
mov
sub
fs
in
cs
shlb
rcll
xor
and
leave
sbbb
adc
shlw
mov
xor
mov
mov
jp
mov
js
ss
leave
sti
sub
cwtl
dec
int
inc
pop
shl
push
add
scas
outsl
cmp
inc
or
jbe
mov
jp
xchg
fnsave
rcll
xor
enter
adc
pop
sub
enter
daa
pop
sub
cs
mov
call
jbe
lock
cmpsb
inc
mov
xor
sbb
push
mov
add
js
leave
sahf
fdivs
sbb
ret
xchg
push
push
scas
mov
inc
push
neg
sbb
push
or
jne
pop
inc
xor
negl
fcomps
rorb
shrb
and
jmp
pcmpeqb
sub
test
push
add
test
mov
outsb
cmp
sub
jp
jno
pop
mov
xchg
cld
mov
leave
dec
or
ljmp
mov
std
cmpsb
xchg
adc
add
push
sbb
test
push
rolb
adc
outsl
inc
lods
shrl
adc
sbb
mov
sbb
inc
and
orl
outsl
ss
pop
stc
aad
xor
cli
sub
call
repz
sub
sub
imul
jmp
adc
add
dec
push
mov
dec
addr16
mov
mov
sub
push
and
push
pop
dec
cld
dec
xchg
sahf
les
cwtl
lds
mov
inc
int3
push
adc
cmpsb
adc
jae
adc
popf
xchg
mov
daa
mov
popa
sbb
inc
sbb
push
shrb
inc
mov
mov
or
and
push
sbb
sbb
mov
adc
push
add
push
sub
or
inc
pop
and
notb
add
sbb
nop
test
cmp
push
addl
lahf
mov
lea
mov
mov
jg
jl
push
cmp
mov
pop
jae
adc
push
pushf
push
xchg
xchg
mov
pop
loop
dec
jbe
push
mov
ds
and
mov
jmp
js
mov
loopne
adc
adc
pop
push
add
mov
movsl
push
scas
int3
add
scas
popa
inc
adc
outsl
loop
roll
push
test
rcr
sbb
sbb
or
cmp
ljmp
cmp
inc
pop
mov
aaa
bnd
call
in
clc
mov
pop
xchg
add
jo
xchg
nop
adc
xor
imul
and
stc
and
mov
sbb
dec
add
xor
push
loopne
lret
jns
pop
and
fs
sbb
adc
jl
inc
test
jl
jl
repnz
cmp
jp
pop
push
adc
in
push
in
roll
and
inc
cwtl
mov
faddl
mov
jbe
aaa
out
repz
mov
and
sbb
jp
lret
add
leave
sub
je
inc
mov
nop
call
cs
shlb
lock
movl
jmp
ja
inc
push
sub
and
mov
nop
frstor
idivl
lds
push
cmp
pop
xor
push
les
pop
push
xor
jmp
fs
pop
mov
push
and
add
mov
imul
push
movsl
xchg
in
cwtl
xchg
cmpsl
jl
push
jb
cmpsl
mov
enter
pop
orb
ror
sub
das
or
fmul
mov
dec
lock
mov
arpl
std
pop
mov
adcb
push
push
xor
xchg
test
subb
or
test
mov
aas
add
test
je
mov
pop
sub
xor
dec
mov
gs
test
pop
pop
scas
leave
sbb
and
jnp
add
sub
fcmovbe
push
in
movsl
pusha
jl
add
jo
mov
jl
gs
mov
sbb
cs
mov
push
nop
loopne
in
cmp
mov
jl
out
dec
sbb
jo
inc
pop
adc
sub
push
adc
push
js
sub
mov
adc
cmp
jo
test
cli
dec
and
cmp
movb
test
call
jecxz
xchg
push
dec
xchg
lcall
or
adc
mov
adc
pop
and
clc
repnz
loope
cmp
push
es
inc
jmp
repz
push
popa
clc
call
and
push
cmp
stos
pop
xchg
fidivrs
sahf
rorl
movsl
das
mov
or
push
inc
mov
shlb
push
cli
sbb
or
ror
sub
xchg
mov
xor
mov
mov
or
push
test
call
push
xchg
and
mov
mov
stos
movb
mov
ret
inc
lret
xor
aas
movsb
add
cld
xchg
mov
mov
insl
call
sub
in
and
stos
test
push
mov
roll
sub
cmpsb
rclb
mov
push
sbb
pusha
xchg
frstor
xchg
or
or
rolb
or
cltd
sub
adc
fwait
xchg
xchg
insb
daa
push
pop
adc
adc
test
sub
daa
das
pusha
inc
das
rolb
dec
popa
or
jae
dec
nop
inc
in
ja
push
jmp
cmp
jne
push
call
dec
inc
adc
enter
std
cmpsl
jg
mov
roll
jle
mov
cmp
xchg
sub
push
in
popa
and
out
orb
inc
pop
mov
inc
mov
mov
push
pop
aam
add
sub
mov
and
sub
mov
in
xchg
mov
mov
test
bswap
sub
dec
mov
insb
and
shll
xor
adc
mov
and
fdivs
sub
scas
jbe
mov
inc
sbb
mov
sbb
mov
rolb
pop
mov
cmc
lahf
xchg
nop
inc
xor
jne
mov
push
jg
and
rorb
flds
addr16
ret
cmp
rcrb
sbb
push
inc
cltd
add
push
jne
incl
push
cld
popf
pop
inc
inc
cmp
popf
pop
push
mov
add
mov
incb
push
inc
jmp
or
push
hlt
andb
pop
push
sbb
add
adc
and
nop
insb
rorb
sub
adc
sub
inc
push
dec
clc
mov
fs
or
xor
or
mov
or
xor
add
cmp
std
xor
sbb
testb
push
test
cmp
push
push
repnz
mov
notl
out
lock
int3
pop
and
lret
orb
push
jg
sbbb
mov
and
pop
out
mov
mov
adc
sbb
add
or
adc
add
cmp
mov
sbb
lds
int3
pop
cmovge
cmp
daa
push
pop
call
out
mov
inc
push
mov
shr
jbe
imul
femms
inc
ljmp
xor
mov
xchg
mov
or
xor
jne
cli
xchg
and
mov
mov
xor
cmp
adc
sti
stos
repnz
mov
sbb
and
mov
loopne
out
and
push
adc
stos
cltd
jne
dec
mov
out
pop
in
es
mov
nop
adc
dec
mov
mov
push
cltd
adc
fcoml
and
je
shr
and
jo
dec
cmc
data16
jecxz
inc
mov
call
cs
sub
push
arpl
fcmovnbe
dec
cmp
push
adc
pop
call
inc
adc
push
add
cmp
push
xchg
mov
push
dec
mov
test
mov
push
aaa
movsl
xor
das
push
popf
stos
test
adc
adc
cmp
imul
mov
pop
adc
push
test
sbb
imul
movsb
sub
xchg
jns
xor
xor
outsl
and
jge
mov
and
push
push
inc
in
bound
inc
ds
push
je
dec
fwait
sub
or
inc
fs
scas
cwtl
add
xchg
add
sbb
aam
dec
rcll
and
sbb
rcrl
movsb
add
and
push
test
mov
add
cltd
into
outsl
cmp
push
mov
int3
cmp
mov
push
mov
out
sbb
fiadds
push
mov
add
inc
mov
or
js
fistl
mov
jl
test
cmp
adc
mov
sahf
das
sbb
mov
jb
lea
das
push
fisubrs
int
aas
les
xor
sti
bound
test
cwtl
add
pop
nop
ss
jo
mov
les
dec
mov
sahf
and
push
jo
lahf
dec
xchg
hlt
out
adc
fmul
pusha
push
push
push
dec
push
jmp
aas
test
movsb
je
sub
xchg
hlt
popf
push
dec
xor
out
jle
sub
rolb
pusha
lock
mov
pusha
sbb
fwait
xor
sub
inc
add
dec
and
sbb
test
nop
push
aas
int
cmp
sub
test
pusha
inc
movswl
imul
or
or
mov
repnz
js
push
or
pop
lahf
mov
lods
and
icebp
lret
ljmp
xchg
add
xor
sbb
test
push
and
inc
jns
push
sub
gs
cmp
jb
xor
imul
push
inc
xor
and
sbb
or
mov
mov
xchg
out
or
push
insb
inc
aas
dec
nop
scas
leave
cltd
mov
data16
roll
jne
aas
negb
pusha
nop
or
sbb
or
popa
aas
cmpsb
xchg
insb
pop
and
cmp
das
add
xor
xor
adc
sti
mov
inc
inc
jle
adc
xchg
jp
cwtl
out
pop
popa
leave
push
test
mov
jge
les
lods
push
int3
inc
lods
mov
push
arpl
or
sub
mov
mov
mov
decl
aam
daa
aam
sbb
and
dec
jp
mov
add
gs
lret
dec
mov
jge
mov
popa
mov
xchg
push
sbb
push
repnz
mov
sbb
inc
push
popf
jle
lea
push
cmp
shlb
cmpl
outsb
or
jmp
cltd
sbbb
cmpsl
faddl
sub
mov
enter
push
jae
je
stos
dec
and
aad
xor
inc
loopne
test
sub
les
add
mov
call
jp
popf
or
and
xchg
xor
neg
sbb
fimull
add
mov
sub
pushf
push
call
fimuls
fmuls
mov
fildll
ficoms
addl
push
in
or
jo
test
inc
push
data16
xchg
fcoml
xchg
sub
lahf
push
in
sub
mov
int3
jne
enter
negb
add
dec
inc
enter
and
dec
push
mov
adc
jmp
daa
xor
pushl
rcrb
add
xchg
rcr
xor
xor
and
xchg
add
jmp
xchg
xor
fwait
add
std
out
xchg
jbe
sarl
aaa
movsb
inc
cltd
lds
addb
mov
addb
sbb
mov
scas
add
mov
cltd
jmp
std
bound
push
and
mov
push
loopne
dec
sbb
cmpsl
or
cmp
stos
or
adc
loope
fwait
mov
inc
testl
subl
xchg
cmp
mov
lock
cmpl
sbb
repnz
into
sbb
mov
push
dec
jno
repz
pop
movsb
and
or
pop
dec
inc
scas
xor
adc
std
pop
fists
int3
add
out
mov
push
mov
lea
repz
roll
mov
clc
pop
test
cmp
lea
mov
rep
les
and
adc
nop
sbb
jmp
xchg
pop
dec
and
test
push
sbb
mov
imul
xor
or
adc
dec
rcrb
xor
or
cltd
les
xor
add
add
imul
push
adc
nop
push
xor
outsl
outsb
dec
mov
cmpsb
jp
adc
adc
and
push
pop
insb
lods
nop
out
lret
mov
cmp
or
xchg
dec
mov
je
inc
xor
leave
add
pop
or
call
sub
or
pop
sub
stos
adc
cltd
gs
and
and
pusha
or
int
sub
or
add
mov
sub
fmull
dec
pop
push
jle
add
ljmp
mov
outsb
shlb
and
add
flds
adc
in
jbe
mov
cwtl
fs
and
dec
pushf
and
mov
pop
test
push
xor
push
adc
dec
sbb
xchg
inc
cmp
movsb
xor
sbb
cmp
adc
hlt
and
adc
les
mov
bound
dec
xchg
fcoml
mov
repz
push
call
ds
ret
rorb
aas
add
inc
test
jmp
pushf
out
inc
mov
sbb
mov
in
jl
repnz
adc
jp
test
call
loopne
fstps
lods
mov
and
clc
and
inc
movsb
and
jl
push
pop
adc
push
test
add
and
loop
adc
loop
cmp
or
jge
lods
sub
adc
and
mov
and
inc
dec
lahf
inc
lods
mov
les
jl
push
je
inc
jl
je
js
call
dec
xor
lods
and
add
xchg
insb
push
mov
sbb
fs
push
test
sub
and
nop
pop
repnz
sbb
push
nop
pop
fbld
cmp
lods
sbb
lock
dec
repnz
sbb
inc
nop
dec
fbld
sub
movl
enter
call
xchg
in
lea
fsubl
cmpsl
lock
lea
cmpsl
sbb
adc
loopw
adc
sub
cmpsl
sub
jle
add
stos
mov
bound
sub
adc
lea
inc
mov
imul
test
dec
dec
mov
dec
rcrl
push
dec
push
mov
jl
or
mov
das
xchg
jbe
mov
xor
or
jns
les
or
lea
sub
push
adc
mov
movsb
pop
inc
insb
loop
sbb
xor
outsb
mov
insb
test
xor
jp
adc
xorb
mov
stos
or
add
dec
insb
nop
pusha
cmpb
sahf
xchg
jl
pop
lock
jns
imul
sbb
cmp
roll
push
mov
gs
pop
push
mov
push
adc
inc
js
xchg
stc
xor
pop
xchg
daa
and
loopne
aam
faddl
cltd
dec
sbb
enter
push
sbb
adc
adc
xor
stos
enter
mov
dec
sub
mov
cwtl
add
inc
cwtl
xor
cmc
sbb
test
adc
xchg
adc
sub
mov
loopne
inc
xor
mov
int3
mov
fmuls
les
sarb
pop
xchg
aam
pop
sbb
and
mov
jmp
or
cmp
call
sub
mov
ja
addr16
loopne
adc
and
jmp
mov
push
mov
pop
pop
in
push
push
push
pop
or
adc
stos
scas
je
mov
sarl
std
into
nop
inc
loopne
adc
xor
pop
daa
cwtl
je
in
adc
cltd
gs
push
sub
jo
hlt
and
cwtl
and
test
jbe
fwait
push
cmp
iret
nop
jle
dec
sub
lds
mov
int
cli
jns
xor
inc
ja
loop
push
xchg
std
jne
push
rorb
push
dec
inc
xor
sub
das
shll
and
mov
sbb
daa
xlat
fdivrs
stc
and
sub
adc
push
mov
sbb
stos
imul
das
in
aad
and
jmp
mov
cmp
dec
bnd
in
inc
call
pop
mov
mov
push
loopne
loop
xlat
pop
rorb
push
or
xchg
call
rclb
aam
jl
js
cmp
je
dec
push
push
stos
cmpsb
fisubs
or
mov
pop
movb
push
and
call
lock
std
adc
leave
push
rcr
push
test
repz
ds
and
push
sbb
mov
cmc
sbb
mov
and
mov
daa
mov
pop
adc
add
fs
mov
lret
outsl
sub
ja
popl
fisttpll
imul
push
movsl
mov
clc
xor
cli
cmp
jb
test
or
or
sub
sbb
or
inc
or
add
js
mov
jle
pop
out
aas
inc
dec
dec
in
push
jge
add
nop
cwtl
daa
jmp
xchg
cld
adc
push
sub
outsl
push
mov
pusha
pop
xchg
sbb
rcrb
cmp
fldcw
add
push
out
es
dec
cmc
dec
mov
adcb
jno
jae
ds
jne
out
cmp
in
push
repnz
cld
push
ficompl
jo
mov
sbb
sarb
test
or
cli
movsl
xchg
add
inc
test
xor
outsl
cmp
sbb
mov
inc
mov
push
dec
push
in
push
sarb
int3
imul
pop
ljmp
andl
xchg
push
call
push
cmp
push
mov
rcrb
cmp
lret
in
adc
mov
rcrb
loopne
add
mov
xor
xor
add
mov
pop
adc
mov
xchg
shll
je
rclb
ficompl
popa
sahf
add
sar
rorb
cmp
push
add
into
xor
ljmp
push
dec
and
dec
bound
dec
push
xor
or
loop
repnz
mov
sbb
xchg
cmp
dec
inc
pop
outsb
mov
and
dec
mov
inc
out
add
mov
or
mov
int3
enter
int3
or
pop
int
insb
or
and
dec
push
pop
cmpsb
int3
adc
push
mov
or
or
and
dec
ja
decb
xchg
or
inc
inc
pop
adc
cmp
jp
or
inc
mov
ljmp
and
and
pop
je
pop
mov
or
mov
inc
out
enter
or
and
and
int
inc
adc
dec
les
fs
les
int3
sbb
adc
and
dec
out
notb
push
mov
adc
cmp
jno
adc
inc
sbb
mov
lods
shll
mov
sbb
and
dec
inc
mov
int3
or
sbb
adc
and
adc
or
imul
or
mov
out
notb
sub
out
sbb
mov
inc
dec
lea
adc
orl
dec
aam
gs
cmove
gs
insl
mov
hlt
jo
and
jp
leave
ja
sub
inc
lock
punpcklwd
data16
mov
xor
push
and
adc
pop
addr16
outsl
data16
dec
push
xor
sbb
fidivrl
ss
pop
cmp
xchg
fstl
test
imul
dec
imul
push
jne
xor
inc
outsb
fs
ret
imul
and
outsb
adc
into
push
dec
imul
dec
je
sub
insl
mov
sub
lea
ret
ds
sbb
sbb
leave
out
lahf
mov
pushf
sbb
fwait
jns
sub
ja
stos
and
push
dec
mov
jne
je
push
pop
out
adc
xor
aas
outsl
insl
adc
and
jns
nop
popa
adc
outsl
imul
fildll
mov
inc
adc
adc
js
xor
lods
and
sub
iret
cmc
daa
xchg
out
mov
hlt
scas
cld
or
stos
std
pop
in
stc
pushf
mov
in
aam
or
stos
dec
or
mov
shlb
aas
imul
push
xchg
jns
in
mov
sbb
push
xor
es
pop
outsb
push
jb
sub
sub
dec
jae
in
out
insl
jo
sbb
rorb
push
outsb
adc
repz
inc
int
inc
mov
or
push
xor
jo
jne
mov
es
out
adc
test
cltd
data16
es
scas
mov
jl
xor
mov
iret
dec
lret
loope
dec
xor
ret
jb
sahf
xor
cmp
mov
ljmp
popaw
pop
arpl
mov
js
sbb
fs
pop
fimull
dec
into
mov
mov
in
in
lock
adc
xchg
pusha
mov
test
scas
lods
scas
repz
test
dec
xchg
pminub
hlt
adc
xchg
movsl
adc
or
xor
sbb
out
fwait
xchg
imul
xchg
push
jl
test
cmp
push
data16
imul
pop
push
dec
imul
in
and
cmpsb
daa
xchg
fmull
fistps
and
dec
int
jbe
rcll
and
pop
inc
enter
dec
pusha
cmp
rcll
mov
jecxz
shrb
jecxz
inc
push
addb
and
cmc
addr16
stos
mov
insl
xor
ss
mov
pop
cmp
push
sarl
xor
mov
and
mov
shrb
mov
cs
adc
sub
out
ds
loope
add
pusha
add
rolb
stc
push
inc
sub
add
or
mov
int3
adc
mov
adc
push
xor
sbb
mov
cwtl
popf
sbb
jne
test
push
gs
dec
loopne
push
and
push
add
and
jp
dec
inc
cmp
and
insb
nop
jo
aam
mov
into
and
loope
lea
call
inc
mov
notl
mov
push
loopne
loopne
loopne
loopne
mov
xor
sbb
jb
mov
or
add
bswap
rorb
push
cmp
mov
int
mov
push
push
sbb
outsl
addr16
popa
insl
push
arpl
iret
bound
sahf
jne
xor
inc
dec
push
cld
insl
pop
outsl
fs
inc
negl
and
add
stc
xchg
icebp
mov
xchg
les
loop
and
and
pushf
loop
cmpsl
and
cmp
arpl
xor
test
add
pop
inc
test
add
sidtl
xchg
sbb
sbb
and
in
rdmsr
inc
add
fwait
adc
test
sbb
xchg
push
push
mov
cmp
jae
unpcklps
popa
cmp
sub
adc
je
js
test
xchg
in
imul
jb,pn
popa
je
test
cld
push
mov
and
call
or
and
dec
push
pop
jb
jo
mov
pop
hlt
and
inc
pop
xor
arpl
dec
or
or
adc
std
inc
adc
mov
jp
add
mov
jmp
cmp
inc
add
and
loopne
ds
or
mov
add
nop
cmpsl
add
push
cld
das
push
sub
pop
push
push
mov
rolb
add
movb
add
stos
data16
lods
adc
or
test
add
sbb
cmp
add
mov
mov
hlt
pushf
add
xor
fwait
push
add
pop
or
pop
add
mov
add
xchg
push
sarb
lea
insb
rorb
jge
jg
out
sar
lea
sbb
add
repz
pusha
enter
add
push
hlt
movsb
int
or
sub
out
test
xchg
and
lret
jg
in
add
call
cmp
add
push
sub
push
call
xor
add
pop
xchg
mov
std
hlt
pop
loopne
lcall
xorb
or
adc
inc
pop
hlt
push
call
sub
mov
xor
xor
push
xchg
adc
pop
mov
cmp
mov
cmp
jne
push
xchg
cs
add
mov
ret
mov
or
push
push
mov
inc
mov
cmp
pop
cwtl
pcmpgtb
add
clc
test
imul
push
add
cmp
mov
sbb
adc
rorl
lret
ljmp
push
jle
ja
and
sub
or
test
pop
shr
jae
or
push
push
push
inc
out
in
add
pop
pop
mov
inc
dec
daa
push
mov
repnz
or
push
pushf
and
call
jbe
shlb
pop
add
adc
jp
ds
sub
add
sub
xchg
and
lea
sbb
add
outsb
push
sub
adc
push
into
fnstsw
nop
inc
loop
ja
add
stos
jl
sbb
add
scas
and
lods
shl
sbb
jge
icebp
lahf
imul
adc
or
lock
sub
and
and
add
cmp
inc
aam
add
mov
movl
add
sub
jle
jl
add
movsb
mov
pop
add
outsb
mov
addr16
add
shll
add
cmc
mov
pop
call
popf
jle
or
push
jae
and
cmp
add
inc
or
inc
stos
add
pop
mov
add
test
push
fldlg2
pop
pop
push
push
dec
mov
nop
mov
add
and
sbb
sub
lock
push
push
sbb
or
sbb
mov
or
clc
lea
add
mov
bound
js
xor
shlb
dec
jl
sbb
mov
andb
add
xchg
imul
es
sub
add
adc
incw
push
mov
dec
push
dec
js
xchg
add
sbb
rorb
orl
add
push
fisttps
cmp
jne
sbb
rolb
adc
dec
add
sbb
push
loop
add
add
jnp
shl
ja
add
add
incl
adc
adc
inc
sub
push
ret
push
jb
data16
and
test
xchg
dec
adc
push
cwtl
dec
call
xor
mov
xlat
div
call
out
xchg
xor
mov
add
and
jbe
mov
cmp
cmp
movsl
in
sbb
lret
dec
mov
add
shll
add
jmp
mov
cmpsl
dec
xchg
sub
movsb
xchg
add
cmp
data16
add
nop
and
cs
roll
or
int3
push
add
push
icebp
test
xor
jnp
enter
dec
or
or
pusha
movl
mov
insl
adc
shl
add
test
loope
add
or
xchg
cmp
add
mov
mov
ror
push
adc
and
pop
mov
dec
ljmp
inc
sbb
pusha
or
sub
jbe
pop
xor
insb
dec
mov
adc
fadds
fst
adc
lahf
dec
dec
or
sub
xchg
or
ljmp
fwait
add
rol
mov
in
cmp
add
sub
push
cmp
xor
adc
jp
xor
lcall
jne
cmp
and
fadds
sbb
xor
push
xchg
aam
mov
bnd
push
push
xchg
in
inc
cmp
add
out
and
leave
mov
std
in
sti
pop
mov
adc
cmp
or
dec
or
sahf
in
add
call
xlat
imul
add
movsb
adc
add
and
jns
xor
add
mov
sbb
push
add
mov
push
add
push
imul
add
sbb
pop
cli
add
and
mov
sub
pop
inc
andb
stos
scas
xor
dec
ret
test
call
xor
sub
cmp
add
cmp
xlat
add
xor
addb
sbb
add
test
push
jne
cmp
xlat
pop
pop
imul
mov
inc
rorl
pop
adc
push
negb
subb
xchg
add
ret
and
sbb
mov
jmp
mov
lock
shrl
push
mov
call
adc
jo
rolb
cmp
jae
add
sub
mov
add
into
jno
pop
jg
add
sub
jge
pop
pop
inc
test
orl
push
add
into
jge
inc
daa
mov
dec
and
movsb
pop
add
fiadds
xor
add
lea
lret
test
add
adc
clc
cli
aas
je
or
out
add
ret
das
jne
inc
pop
sbb
add
push
leave
fwait
and
xchg
pushf
mov
xchg
add
dec
mov
andb
jg
add
sarl
pop
lcall
in
or
rcrb
insb
cmc
cmp
bound
pop
xchg
test
push
inc
push
add
addr16
add
mov
shl
cli
inc
add
pop
push
add
push
mov
out
add
fs
sub
mov
lea
pusha
js
call
and
inc
aad
sub
or
add
loop
verw
stc
ret
and
enter
aam
std
or
cmp
pop
outsl
nop
div
and
mov
xchg
mov
add
xor
arpl
icebp
pop
dec
sbbb
xor
inc
aaa
jmp
out
dec
lods
add
ja
sub
push
rorb
sarb
push
sahf
add
pop
or
jge
add
dec
sbb
jne
add
xchg
or
popa
ret
cs
lea
and
add
inc
mov
inc
adc
arpl
ja
repnz
imull
stos
push
adc
and
mov
sti
sub
add
mov
push
aas
sbbb
add
sbb
roll
add
lret
mov
sbb
subb
out
push
pop
imul
sub
push
add
mov
nop
add
xchg
jmp
cltd
sbb
in
cwtl
mov
pusha
dec
adc
add
lcall
sbb
and
rclb
leave
scas
inc
add
in
xor
push
push
adc
pusha
rcrl
inc
fildll
sbb
or
sub
pop
dec
add
or
sbb
push
add
test
icebp
xor
add
xor
add
pop
fcomp
adc
and
ds
icebp
adc
aas
add
into
xchg
mov
jne
push
dec
mov
inc
cli
cmp
mov
jns
mov
add
sub
dec
lret
or
mov
stos
xchg
ljmp
shrb
nop
adc
lock
adc
in
xchg
add
loop
cmpsb
aaa
mov
adc
add
adc
sub
push
inc
add
lret
mov
dec
call
add
das
xchg
add
rorl
push
pop
adc
jne
ret
add
sbb
push
inc
aas
sub
jp
dec
or
or
arpl
push
or
or
push
xchg
add
es
sbb
jae
pop
mov
xor
push
jb
sbb
call
pop
sub
js
paddw
xchg
sub
push
ffreep
pop
push
push
call
inc
leave
mov
cmc
sbb
cmp
add
cmpsl
loopne
inc
push
cwtl
add
adc
fistl
dec
popa
jo
mov
add
inc
les
shlb
jle
arpl
sbb
filds
sarl
pop
clc
rclb
pop
enter
pop
jl
cwtl
incl
mov
fwait
push
stos
jo
add
jl
mov
movsl
jmp
add
inc
sbb
mov
mov
inc
dec
add
ljmp
push
adc
push
push
sbb
rorb
lea
add
push
cli
jns
add
test
jb
leave
dec
lcall
sahf
push
arpl
or
js
jecxz
fs
pop
mov
rcll
xchg
insl
mov
cltd
xor
jle
int3
aam
jmp
sub
adc
cmp
std
xchg
adc
jno
pop
add
add
lea
lock
pop
xor
lret
jmp
ficompl
and
nop
cmp
inc
shll
ret
push
loope
rol
mov
lea
jne
xchg
pop
mov
psrlw
movsb
sbb
sarb
test
test
call
or
lock
setns
push
arpl
pop
mov
add
sbb
inc
out
pushf
mov
xchg
pop
push
xchg
rcll
mov
xor
aad
fs
fdivr
dec
push
add
iret
dec
xchg
sbb
sub
mov
mov
jno
add
std
shrl
pop
and
add
inc
push
sub
mov
jnp
xchg
sbb
add
inc
aam
push
hlt
jno
ret
add
lret
aaa
inc
std
aam
flds
add
les
or
pop
xor
ret
aam
and
add
jmp
or
inc
lds
mov
xchg
sbb
movl
fildl
lock
or
scas
bswap
rolb
loope
popf
or
xor
add
dec
xor
inc
xor
cld
cmp
jl
add
xchg
cmp
add
in
xchg
cmp
sbb
dec
xor
int3
add
mov
or
sbb
lock
pop
cmp
shlb
and
out
nop
adc
rclb
pusha
push
fs
xor
mov
mov
jmp
sub
cmp
add
call
jmp
adc
stos
add
jge
push
in
pop
enter
xchg
js
xchg
add
cmp
jnp
jge
mov
fsubrs
or
sti
clc
in
push
ret
test
inc
das
or
or
loope
cmp
add
add
pop
repz
push
cmpsb
mov
xchg
fisttpl
nop
pop
xchg
loop
or
int3
add
or
mov
add
mov
or
or
pop
pusha
call
inc
sub
mov
sahf
cmpl
and
cmp
pop
add
add
movsl
lock
dec
in
cld
sbb
dec
cmp
in
rcll
cmp
push
inc
inc
es
cmpl
push
push
jbe
pop
push
add
cmp
mov
in
cmp
pop
bound
add
xorl
clc
add
das
mov
pop
and
addr16
aas
test
andl
insb
mov
scas
xor
lods
daa
mov
sub
ret
mov
inc
fdivs
mov
add
jge
mov
repz
out
lret
ds
pushf
aas
push
rorb
adc
lea
or
sub
add
xchg
movsl
xor
add
and
mov
dec
fadds
es
mov
cwtl
pop
adc
fld
jge
and
dec
jnp
push
add
lea
or
out
int3
dec
inc
imul
add
jmp
loop
js
add
dec
adc
add
xor
xchg
cmp
jbe
pop
inc
mov
dec
movsl
or
out
inc
inc
add
lea
mov
xor
cmp
add
push
int3
or
dec
cmp
add
push
add
push
xor
inc
inc
add
in
jo
daa
adc
push
das
ja
adc
push
jle
shll
inc
adc
xchg
in
add
sub
les
icebp
clc
cmp
or
stos
add
sbb
pop
xor
xor
in
pop
or
cmp
jo
mov
cmp
xchg
add
mov
test
loope
add
repz
jb
in
xorb
jne
dec
jmp
sub
inc
adc
aad
repnz
sbb
add
adc
insb
jae
push
push
jmp
inc
faddp
adc
adc
adc
les
sbb
fisubrl
into
test
cwtl
push
push
mov
notl
add
iret
inc
sub
push
int
add
inc
mov
push
add
fstl
xor
push
cwtl
dec
add
jbe
aam
and
int3
arpl
fucomp
gs
cltd
jno
and
cwtl
mov
fists
add
fs
fcom
jmp
sahf
xor
lock
jae
push
jbe
add
test
lss
cmp
add
dec
jl
leave
or
pushf
popa
sti
inc
stos
frstor
jo
push
xorb
pop
or
inc
pop
push
sar
add
pop
or
fbld
cmp
shlb
movsb
or
je
inc
add
scas
jmp
add
imul
jo
andb
mov
push
jne
sarl
sub
sbb
testb
jne
add
push
call
add
mov
test
lock
mov
pop
insb
lds
lahf
mov
add
cmp
cmpsb
dec
sub
sbb
adc
add
adc
push
fdiv
cmp
and
mov
add
decl
sbb
pop
dec
xorl
cmovge
inc
push
mov
lahf
adc
inc
dec
subb
test
and
or
or
nop
jecxz
sbb
gs
sbb
push
orb
mov
cmp
ja
out
pop
push
pusha
in
inc
mov
jne
shll
add
ror
aam
popf
add
push
cli
test
ret
add
add
add
cwtl
push
je
lret
add
pusha
adc
mov
add
and
lret
in
xchg
rorb
pop
pushf
testl
sbb
pop
add
cld
mov
ja
jle
add
rolb
movsb
out
xor
ficoml
leave
or
cltd
pushf
js
add
cld
add
mov
add
neg
into
dec
pop
fsubrl
add
ljmp
lcall
jbe
push
cmpsl
jecxz
dec
orb
push
mov
daa
sbb
out
aad
push
push
xchg
or
scas
jo
imul
lods
push
xchg
daa
arpl
and
call
ja
or
ja
mov
jmp
add
jbe
sbb
xchg
or
test
sbb
adc
movl
pop
pushf
sub
add
jae
les
clc
add
jge
mov
out
sbb
and
sub
sbb
adc
and
inc
mov
lahf
lods
pop
adc
add
add
xor
jnp
adc
mov
adc
pop
inc
pop
sbb
inc
inc
sbb
loopne
and
femms
popf
or
push
and
daa
incl
mov
fnsave
jmp
adc
pusha
sbb
adc
pop
test
lock
xor
loopne
cld
jl
add
rcl
pusha
add
cs
mov
and
xchg
icebp
cmc
and
clc
and
add
push
call
les
lock
dec
mov
push
xchg
movsb
add
sbb
add
ret
mov
add
pop
xchg
jmp
sub
mov
add
scas
ds
add
jecxz
ret
psrlw
dec
add
xchg
jae
add
inc
je
mov
pop
rolb
loop
out
and
add
or
xor
cmp
push
adc
lret
std
xorps
mov
filds
in
sub
lea
add
pop
pop
test
je
xchg
add
push
out
aaa
loopne
sub
sbb
dec
inc
add
addl
and
or
add
add
sbb
stos
pop
inc
inc
dec
xchg
pop
movsl
jne
xor
mov
add
sahf
push
icebp
movl
test
mov
sti
and
ret
ret
pusha
cmpsl
xchg
or
add
test
mov
fildl
pop
aam
aaa
imul
inc
rorb
or
and
mov
mov
mov
push
push
jnp
mov
rorl
jbe
scas
cmpl
sbb
add
call
iret
orl
push
sbb
and
push
inc
scas
and
push
add
pop
movsb
xchg
pop
int3
nop
fdivrl
rcll
or
jmp
add
lea
ja
mov
xchg
jae
popa
jl
aam
add
jge
rorl
testl
loopne
pop
fdivl
pop
add
jae
orl
adc
xchg
sub
add
shr
add
dec
add
test
cli
add
push
jb
hlt
or
inc
xchg
pop
xchg
mov
sub
sti
stc
add
and
add
sub
adc
or
sub
push
add
adc
add
push
ja
add
call
notl
push
pop
xor
cmpsl
mov
add
add
loope
rorl
and
repz
pop
xor
enter
inc
mov
in
and
jbe
add
shr
repz
xor
xor
mov
decb
add
mov
sbb
xchg
adc
push
in
adc
jno
pop
jp
add
addr16
clc
cmp
push
jl
mov
call
inc
pop
dec
and
add
cmp
jl
ja
add
pop
in
stc
xor
out
sbb
cmp
add
mov
jmp
sub
xchg
in
fnstcw
ret
ret
push
dec
and
test
stc
mov
push
mov
dec
or
xchg
imul
or
push
lods
aas
mov
mov
movsl
adc
sti
loope
adc
aas
lea
xchg
cmp
pop
and
mov
sub
adc
icebp
add
adc
addl
adc
inc
jge
clc
fildl
cmp
push
loope
adc
subl
and
pop
mov
cmp
jbe
lcall
add
mov
movzbl
mov
jle
lods
pop
xchg
jp
sbb
mov
xchg
add
sub
add
mov
or
sbb
cld
movsb
adc
add
stc
or
es
test
dec
orb
and
scas
add
arpl
xchg
mov
xchg
ret
xchg
fcoml
dec
loopne
mov
mov
sti
loopne
add
xchg
stos
ja
testb
and
lea
mov
hlt
or
sbb
or
jb
adcb
xor
xchg
fdivs
scas
out
jmp
or
enter
mov
jmp
out
jns
jbe
push
adc
mov
cmp
xchg
rclb
mov
or
out
lds
jnp
cli
cmp
mov
ja
add
inc
jle
shll
pop
add
add
sub
mov
add
push
lea
dec
add
call
js
repnz
cmp
jne
mov
cmp
jb
lods
sub
add
test
adc
dec
push
and
ja
cli
add
lea
cmpb
xor
insb
shl
mov
dec
sub
in
clc
xor
add
mov
sarb
add
pop
lret
xor
xchg
imul
push
push
roll
jne
dec
push
jg
inc
push
ljmp
mov
adc
or
or
stos
mov
imul
jno
ud2
lret
test
push
lret
pusha
inc
jb
testb
push
adc
add
jbe
aas
decb
flds
mov
loop
mov
push
mov
lods
inc
push
dec
fsub
je
adc
mov
or
bound
mov
js
push
mov
add
ret
xor
rclb
add
js
cmp
cwtl
mov
mov
add
inc
sbb
je
or
or
mov
or
xor
aam
cmp
add
and
xchg
xchg
inc
and
inc
jmp
ljmp
add
cmp
or
mov
or
xor
mov
test
dec
pusha
and
pop
das
add
enter
sbb
pop
bound
fdivl
and
xor
xchg
sub
sbb
add
dec
xchg
add
inc
mov
bound
sbb
mov
add
jle
dec
jne
out
imul
mov
mov
sub
xchg
adc
sub
xchg
sub
stc
jle
test
add
inc
xchg
inc
les
push
or
xor
paddusw
adc
cli
sbb
dec
pop
lret
ret
inc
pop
dec
pop
adcb
inc
test
and
jne
and
pusha
sbb
pushf
push
push
sarb
lret
or
addr16
addb
rclb
loopne
test
pop
mov
xorb
idivl
and
cltd
pusha
or
pop
mov
mov
sub
push
push
xor
lea
cmp
mov
iret
dec
addl
jl
hlt
push
lret
cmp
cs
add
mov
pusha
addl
lcall
adc
aam
add
hlt
popa
adc
data16
pop
inc
xor
cmp
push
dec
mov
icebp
jge
daa
cmp
xchg
rolb
or
add
pop
cltd
pushf
pop
xchg
sbb
inc
and
and
inc
push
lea
sub
popa
cs
inc
cmp
mov
pop
jp
add
xor
sub
lds
negb
add
scas
mov
pop
rcl
add
mov
repnz
cli
mov
test
in
cltd
lods
sub
test
ja
add
sar
cmp
enter
jge
cmc
adc
es
cmp
ret
jl
push
push
pop
or
mov
mov
push
add
mov
xor
imul
push
push
xor
xor
push
sbb
inc
push
shlb
sub
dec
add
insb
add
pop
and
jle
and
or
mov
fmul
fiaddl
add
inc
add
xchg
add
mov
add
add
push
in
xchg
push
stos
idiv
nop
add
rclb
xor
int3
sbb
scas
test
mov
sub
or
mov
add
pusha
adc
xor
add
addr16
pop
and
outsb
jne
add
inc
pusha
jmp
sbb
sub
jp
mov
es
sub
cmp
push
fildl
add
adc
mov
or
pop
in
neg
inc
add
push
aad
test
invd
loopne
mov
xchg
jno
pop
mov
or
test
mov
add
add
scas
hlt
cmp
sti
sbb
cmp
enter
jmp
mov
nop
fisubrs
out
shl
hlt
insb
sub
add
std
add
es
in
add
cli
arpl
mov
push
or
sbb
andb
mov
pop
mov
mov
xchg
test
imull
and
in
mov
add
and
push
andb
int
lahf
mov
dec
jle
ret
adc
dec
bnd
ljmp
call
push
enter
test
add
or
loopne
cltd
xchg
cmp
sti
add
sub
push
ja
cmp
aad
inc
push
dec
cmpsb
sub
add
push
bnd
mov
mov
test
mov
push
pusha
jg
add
cmp
rcll
add
adc
sbb
pavgb
adc
jmp
cmp
aad
xlat
mov
add
or
inc
dec
test
jmp
mov
lea
daa
dec
jmp
mov
xor
call
and
inc
push
mov
out
ss
nop
repnz
lds
and
jb
push
adc
inc
sti
pop
mov
add
daa
xor
mov
lcall
mov
xcrypt-ctr
cmpsl
cltd
adc
inc
sub
or
in
adc
pusha
fldt
mov
es
xor
out
popa
xchg
imul
pop
ds
add
push
movsl
leave
shl
js
mov
inc
jmp
movb
cltd
push
lsl
inc
and
mov
shlb
pop
roll
call
pop
movsl
loopne
inc
add
les
cmp
pusha
push
call
ret
pop
push
sbbb
enter
jge
xor
nop
sbb
sbb
add
inc
test
lods
jmp
xor
adc
sub
add
jne
in
mov
push
push
sub
adc
sbbb
clc
inc
in
and
ja
into
dec
pusha
fsubs
jg
stc
and
bound
cwtl
inc
lret
add
cmp
jbe
ret
bound
mov
push
mov
jbe
add
popf
jae
pop
cmp
cwtl
add
test
inc
inc
call
jb
loopne
pop
call
and
pop
mov
mov
adc
cmpsb
dec
sar
mov
sub
repz
sahf
pop
jl
add
aad
iret
aas
xor
add
andb
push
xchg
push
jne
in
add
jmp
pop
add
push
or
in
add
and
pop
jmp
sub
sti
inc
cmp
call
push
mov
pop
addb
call
cmp
cmp
arpl
loop
push
inc
clc
cmp
lret
add
inc
or
shll
sbb
and
add
mov
dec
repnz
add
xor
out
add
jge
sbb
loop
cmovbe
movl
mov
call
or
in
adc
mov
xchg
cld
sbb
sub
jne
xchg
add
cli
pop
mov
add
add
mov
adc
pop
out
jns
pop
je
push
and
or
xor
jns
push
add
rorl
cld
lds
inc
sbb
and
adc
mov
ret
call
sahf
lea
adc
pop
adc
ret
mov
adc
mov
call
out
add
ja
pop
and
in
sbb
xchg
and
or
adc
and
add
mov
loopne
imul
add
mov
insb
adc
sub
je
adcb
or
je
pop
ret
lahf
inc
sub
xchg
rorb
out
lock
push
addr16
pop
add
sbbl
ja
cli
std
add
dec
push
fsubr
or
inc
dec
add
sub
sub
xchg
int3
sbb
sbb
imul
xor
pop
jle
sub
cmp
xor
inc
int
push
ret
xorb
jg
outsb
and
pop
cmpsb
loopne
push
daa
add
push
push
les
xchg
sbb
jo
mov
cmp
cmp
add
sub
mov
add
repnz
iret
xor
sub
inc
dec
lahf
xor
inc
nop/reserved
push
mov
sub
inc
and
and
push
and
pop
mov
add
subl
jne
add
or
push
fnstsw
add
mov
dec
cmp
adc
rorl
out
enter
clts
inc
add
out
pop
xchg
push
push
add
ds
clc
jle
add
and
cld
rcrl
mov
repnz
in
jne
xor
clc
adc
cmp
jae
jnp
pop
nop
ret
hlt
jbe
jecxz
pop
mov
icebp
imul
push
and
pop
pop
test
dec
or
dec
add
call
data16
xor
add
pop
jmp
fbld
out
lods
add
decl
sbb
cmp
mov
xor
jle
push
adc
sbbb
mov
fimull
xor
add
rorl
cwtl
and
fmul
or
enter
sbbl
sarb
sbb
push
cs
inc
inc
mov
add
das
adc
rorb
jge
cmp
out
movsb
push
flds
mov
inc
icebp
or
roll
add
sbb
call
nop
inc
repnz
cmc
arpl
orb
outsl
lcall
adc
es
add
mov
xor
mov
movsl
fsts
add
nop
pop
push
add
push
xor
pop
and
call
adcb
pop
push
sbb
in
add
mov
loopne
xchg
fcomps
push
imul
mov
clc
stc
add
adc
add
je
or
add
aam
push
ret
add
popa
test
ljmp
and
adc
lock
in
pop
add
or
mov
fstps
xor
testl
push
push
cmpl
sub
or
mov
dec
and
adc
sti
arpl
adc
push
jp
sahf
sbb
pop
sbb
add
lods
mov
add
data16
ds
in
push
add
mov
cmp
je
dec
lods
and
or
testb
jmp
mov
add
adcl
mulb
fiadds
in
or
pop
pop
inc
shlb
inc
inc
pop
int3
das
mov
addl
xchg
jno
inc
test
add
mov
inc
xor
push
shlb
sldt
dec
lods
mov
mov
ret
inc
push
dec
push
add
sbb
sub
cmp
and
or
push
movsbl
ret
jle
pop
in
movsb
adc
sbb
ds
dec
and
pop
clc
ret
pop
addb
ja
decl
and
cmp
dec
add
xorl
add
enter
faddl
add
aam
lds
xchg
addl
and
or
push
sub
pop
dec
inc
int
sbb
fdivrs
pop
and
sub
popf
or
add
push
xchg
popl
mov
andb
sti
sub
jne
test
pop
xchg
add
pop
cmpsb
add
cmc
out
push
sbb
mov
inc
inc
rolb
jmp
jmp
push
add
inc
and
nop
add
xor
shr
pop
cmp
int3
aas
adcb
mov
push
inc
add
ja
xorb
out
loope
jle
lock
push
iret
add
adc
jle
xor
in
push
jno
mov
dec
mov
mov
gs
ror
add
addr16
adc
jle
add
add
test
add
mov
push
ret
es
lcall
scas
das
jmp
pop
clc
fadds
xchg
ror
movl
pop
int
in
add
les
add
mov
sub
jo
add
push
adc
push
mov
lock
inc
sti
mov
je
arpl
mov
add
push
add
pop
out
or
data16
mov
popf
mov
add
pop
ret
sbb
or
filds
rorl
pop
add
dec
std
adc
cmpw
repz
es
loop
adc
add
and
push
and
push
pop
mov
mov
sarb
pop
fisubs
inc
clc
push
dec
add
add
add
xor
mov
adc
cmp
icebp
add
call
lock
add
mov
add
cvtps2pd
or
lds
dec
lret
test
pusha
mov
pop
mov
ss
inc
lock
dec
popa
jle
jmp
ljmp
xor
jp
mov
add
orb
lar
roll
call
out
push
ljmp
in
mov
mov
lahf
lcall
pop
pop
push
addr16
ds
xchg
ret
xor
jle
mov
or
and
and
pop
add
call
or
add
mov
cmovns
jmp
inc
outsb
es
dec
adc
add
push
clc
cs
mov
and
mov
mov
push
out
add
loopne
lds
aas
add
and
je
inc
pop
nop
and
ss
dec
pop
mov
test
notb
in
aas
sub
addb
fistl
push
call
pop
jmp
add
ror
adc
inc
loop
pop
je
les
xor
xchg
sub
sub
ret
int3
add
mov
cmp
sub
rol
int
lret
add
out
in
mov
push
mov
dec
jmp
or
xchg
testb
addb
xchg
adc
pop
mov
sub
adc
ljmp
add
jno
jmp
inc
inc
and
pop
cmp
push
nop
dec
add
dec
add
dec
std
add
in
call
mov
ret
cmp
inc
jns
or
add
or
cmp
add
fsubs
or
ret
or
cmc
and
pop
xlat
add
rcrb
mov
iret
push
and
or
aam
cmpb
int3
in
rolb
jecxz
and
lds
jae
jns
pop
andl
sahf
loopne
fiaddl
and
jmp
push
or
pusha
nop
cmp
push
mov
push
popa
adc
cld
add
mov
and
xor
loop
loopne
aam
in
fcompl
push
dec
roll
mov
sbb
add
lock
mov
sub
test
jb
and
add
or
xor
inc
pop
lret
jle
mov
les
xor
mov
jmp
and
sbb
adc
xchg
add
shll
xor
les
and
add
mov
call
les
pop
add
je
push
movl
add
or
nop
pop
nop
ds
loope
in
dec
mov
push
fsubrs
jle
add
lock
mov
and
imul
ret
hlt
or
add
mov
inc
je
or
popa
cs
jle
sbb
mov
or
mov
mov
js
mov
add
xchg
mov
fisubs
jns
cmp
xchg
fwait
push
stos
add
jmp
ds
fdivrl
shrb
sbbl
rolb
hlt
call
add
add
pop
cmpsb
sub
or
repz
xchg
leave
sbb
pop
ret
push
mov
or
mov
insb
shlb
inc
hlt
sbb
inc
or
dec
cmpsl
xchg
mov
add
xor
add
decl
js
push
sub
adc
rolb
mov
add
sub
and
clc
lahf
cmp
lds
mov
sbb
push
xor
pop
imull
push
push
lret
cmpb
lods
lods
movlps
fwait
loopne,pt
pop
and
add
loop
popf
fs
mov
jb
xor
insl
adc
outsl
shll
call
es
lret
call
pop
adc
add
jg
pusha
ds
push
andb
mov
adc
es
mov
add
jge
pushf
sub
add
ror
js
dec
int3
mov
push
sub
call
push
fcompl
add
pusha
mov
ret
push
mov
and
cmp
ljmp
ret
add
inc
sbb
pop
cmc
xor
cmpsl
std
repz
cmp
lret
aad
add
inc
xorl
jns
cwtl
lcall
cmp
add
icebp
ret
push
imul
and
push
xchg
add
add
arpl
outsl
adc
lahf
lock
ltr
jne
insl
mov
push
aas
out
addb
add
test
scas
leave
pop
mov
xor
push
adc
inc
add
push
xchg
fs
cmp
push
jo
arpl
mov
les
sub
mov
add
xor
xor
jmp
inc
es
mov
xor
and
inc
add
mov
clts
add
idiv
roll
or
or
repz
push
pop
add
adc
and
sarl
rol
mov
cmp
std
sub
push
sbb
xor
or
xchg
dec
fnstcw
xor
cli
shlb
add
call
inc
test
mov
add
fucom
inc
jmp
cmp
jb
sub
movsl
fs
jecxz
mov
add
push
loopne
scas
and
sub
dec
aam
jle
mov
or
test
jb
sub
xor
dec
shrb
leave
mov
push
push
push
je
pop
add
sbb
movsl
push
adcb
andl
xchg
lret
add
push
jg
add
mov
sub
add
or
inc
sarb
gs
inc
jb
add
in
ss
xor
push
add
inc
cmp
adc
or
je
mov
inc
leave
add
out
push
jo
push
cmp
add
lret
mov
jp
add
push
es
mov
inc
or
inc
inc
daa
jns
add
jbe
add
sub
jl
add
push
cltd
adc
xor
sbb
enter
outsb
shll
les
cmpsl
sub
test
add
and
pop
cmp
adc
and
cmp
jne
inc
jle
pop
test
int
push
shll
andb
add
or
jbe
sub
xor
or
add
add
xorb
pop
sub
add
std
lock
movb
inc
popl
cmpsb
dec
sub
xchg
imul
push
jl
pop
cmp
fdivl
add
add
dec
clc
sbb
inc
add
xchg
sbb
pop
add
inc
jo
add
jge
scas
scas
cwtl
pop
sub
neg
fdivl
or
mov
add
mov
push
enter
add
sub
dec
vpmullw
aaa
add
jge
mov
test
mov
adc
dec
inc
mov
repz
es
push
and
add
add
add
daa
setl
mov
sub
inc
insb
add
shrb
jl
lahf
test
sbb
ret
cld
pusha
adc
stc
and
decb
sub
or
jo
push
jmp
daa
adc
xor
or
bound
pop
inc
jns
cmc
repnz
push
add
mov
add
call
and
push
pusha
or
cmp
dec
push
and
out
sub
bound
roll
or
add
insl
adc
out
sarl
xchg
sbbb
push
push
adc
adc
lahf
inc
icebp
in
cld
inc
sub
add
push
addr16
sbb
popa
jbe
jge
xor
add
push
pop
data16
adc
pop
mov
vcomiss
sbb
jmp
cmp
test
cwtl
cs
cmp
movsb
or
xchg
sbb
test
xor
jbe
das
loopne
add
push
or
jbe
push
sbb
sbb
jne
adc
jb
cmpsb
ljmp
aam
in
pop
push
pop
add
loopne
jo
inc
push
sbb
xor
lea
sub
popf
jo
add
add
jl
fnstsw
pop
jg
sub
mov
inc
add
sbb
in
inc
test
push
jle
rclb
pop
enter
sbb
dec
adc
dec
add
es
rcrb
mov
sbb
push
push
inc
dec
in
xor
lods
add
test
push
push
sub
pop
sub
inc
loop
jb
ja
sbb
push
cmpb
add
dec
cmp
push
xchg
pop
push
dec
sub
sub
cmpsl
pusha
pop
je
sbb
lcall
add
cwtl
mov
jns
pop
push
add
xorl
lcall
lcall
sbb
ss
xchg
mov
mov
js
pop
jne
jp
mov
xor
out
dec
mov
verr
mov
js
lods
ret
dec
jg
add
test
mov
mov
add
enter
add
test
pop
mov
inc
lahf
and
movl
mov
js
jo
mov
enter
jl
add
cmp
add
mov
call
icebp
xor
pusha
test
add
inc
divl
jnp
pop
addl
cld
sub
adc
iret
imul
lea
adc
xorb
dec
ds
loopne
cld
jne
call
lahf
repz
hlt
leave
cmp
orb
adc
ret
cmp
xorb
cli
sbb
add
jbe
push
pop
mov
clc
cmp
or
jne
and
jae
push
dec
mov
movsl
or
jg
add
mov
pop
mov
or
cmpb
cld
sbb
pop
push
sbb
push
or
cmp
mov
add
mov
in
cmp
add
icebp
adc
add
sub
roll
movsl
add
in
sub
decl
ss
stos
pop
dec
pop
or
jbe
add
cmp
shll
add
adc
jno
out
inc
cmp
sbbb
add
shr
not
add
je
mov
sbb
es
loopne
aam
sbb
inc
mov
xchg
lcall
or
sar
and
movsb
iret
jnp
pop
mov
lahf
ljmp
aad
adc
roll
mov
push
add
pop
jo
or
mov
jne
pusha
add
mov
add
and
orb
mov
and
or
outsb
jno
inc
scas
negl
jne
sub
adc
fs
and
test
and
inc
xor
mov
adc
fiadds
dec
mull
mov
cld
push
push
in
sbb
mov
inc
or
or
cmpsb
addr16
add
push
and
or
clc
sub
push
or
xchg
repnz
movsb
add
and
dec
or
dec
push
add
jns
test
add
orl
or
xchg
imul
gs
mov
pop
mov
xor
add
addb
sub
sub
dec
push
shr
cmpsl
add
dec
add
fsubs
decl
xchg
pop
push
xor
add
and
sub
adc
sbb
inc
mov
push
mov
dec
cltd
sub
push
fs
xor
fsub
pop
push
subb
and
lock
cmp
add
jge
leave
into
decl
add
in
xchg
pop
add
imul
adc
int3
mov
fistps
jae
pop
and
jns
adc
roll
cld
xor
jb
adc
jne
mov
push
ljmp
and
out
xor
arpl
jae
icebp
jnp
xor
push
jmp
mov
or
add
push
call
test
fistl
je
aas
sbb
mov
inc
sub
and
or
pop
subl
sbb
cmp
cli
mov
fistps
nop
add
inc
jl
inc
sub
adc
and
and
ficomps
cmpsb
or
add
sbb
pop
push
xchg
test
dec
xor
popa
lods
add
or
xlat
je
pusha
stos
addl
popa
or
adc
add
cmp
pop
add
loope
add
xor
mov
stc
rorb
pop
icebp
pop
cwtl
jge
cmp
push
aas
jle
add
or
testl
cmp
cmpl
test
add
sete
push
push
hlt
add
and
inc
mov
cmc
cmp
or
mov
add
dec
mov
enter
xchg
xchg
lahf
lods
xchg
outsl
xchg
add
mov
jns
in
sbb
adc
ja
sti
xchg
stos
push
jl
pop
push
shlb
push
lea
and
mov
add
cmp
mov
ret
out
ret
fisubs
mov
into
rcr
or
add
inc
nop
stc
jl
scas
jmp
das
dec
sub
mulps
push
jnp
pop
jbe
add
or
or
sub
sahf
or
leave
mov
add
cld
add
lock
ds
inc
movlps
xor
pop
mov
lea
and
bound
cmp
sbb
ficomps
or
dec
jo
and
inc
add
loopne
add
add
inc
shll
jo
mov
test
ret
mov
push
push
mov
ljmp
mov
add
mov
inc
and
cmp
xor
add
hlt
scas
push
push
sub
add
jbe
test
or
das
std
call
cli
pop
les
loop
cmp
jle
lret
arpl
pop
add
push
jmp
inc
xchg
xor
add
loopne
mov
xor
add
xor
hlt
xor
inc
or
pusha
cs
mov
shl
fstpl
or
jno
add
sub
xchg
inc
jne
xchg
inc
out
cli
add
cltd
inc
lock
popa
repz
rorb
jle
cld
in
enter
lock
inc
imul
sbbl
add
sub
and
add
popf
push
pop
dec
aam
lods
aas
lea
jbe
addb
fs
jle
cmp
mov
int
add
or
pop
sarb
add
inc
adc
dec
mov
not
push
and
push
add
xor
dec
add
stc
mov
int
rorb
aas
sbb
lds
xchg
or
dec
sub
pop
in
add
jg
add
fildll
lds
and
or
dec
mov
adc
lock
shl
add
pop
insl
sub
addr16
out
add
jmp
mov
mov
out
jp
xor
xchg
inc
push
xchg
xor
adc
rorb
push
dec
sbb
adc
stos
add
in
mov
mov
jg
add
popf
ret
push
cltd
and
xor
and
sub
adc
sbb
add
ljmp
xlat
pop
jno
icebp
jl
add
aam
lock
sbb
jmp
into
rolb
mov
adc
xchg
add
movsb
push
sub
add
xor
adc
cmp
nop
add
inc
mov
push
xchg
sub
clc
pop
push
lret
stos
mov
add
cmp
push
add
adc
sub
pushl
jg
pop
cmp
push
scas
movsb
mov
and
inc
fbstp
adc
test
scas
jno
pop
xorl
xor
add
add
outsl
pushf
xchg
repz
rorb
or
sub
sbbl
mov
lret
jns
add
add
inc
and
pop
sub
adc
and
cli
sbb
dec
or
xor
call
pop
cmp
add
xchg
push
daa
xchg
jecxz
leave
adc
lret
sbb
jbe
add
setbe
jmp
test
es
add
inc
add
adc
in
pop
pop
jb
das
and
xchg
xchg
add
jmp
in
sub
rcrl
ret
lds
addl
add
out
push
jle
mov
dec
adc
sar
or
enter
sbb
xorb
and
or
add
add
pop
popa
in
or
sti
and
push
and
ljmp
jno
stos
pop
jno
add
push
popa
lahf
add
mov
pusha
add
adc
sub
cmpl
lret
lea
xchg
stc
add
adc
mov
clc
fadd
add
jl
cmp
nop
jbe
push
push
lock
sbb
jge,pt
add
dec
mov
jb
int3
adc
dec
and
lea
add
clc
cmp
insb
dec
add
add
mov
jmp
lcall
push
scas
dec
aas
push
out
es
addb
or
jge
jb
inc
inc
ss
pusha
je
jmp
push
mov
sbb
sub
push
add
ret
lods
sbb
cmp
pop
or
add
xlat
and
call
leave
inc
xor
sub
notl
loopne
and
sahf
cmp
jns
xlat
xor
stos
imull
add
mov
pop
loopne
sub
punpcklbw
mov
aam
repz
clc
add
call
push
cld
add
mov
popa
mov
xor
mov
mov
rolb
dec
mov
inc
std
icebp
ret
push
rolb
rcl
pop
jne
mov
dec
aaa
cmp
enter
cmp
add
add
shlb
push
cs
add
dec
clc
push
jbe
cmp
sub
popa
mov
add
and
sti
or
sbb
mov
lea
mov
rorl
pop
push
and
shrb
add
andl
sti
add
adc
or
or
lea
add
mov
add
pop
xor
jae
add
pusha
rorb
cmp
adcb
mov
inc
cmp
mov
add
js
add
cmp
jae
inc
mov
add
pop
out
pop
and
or
inc
jmp
mull
mov
clc
mov
aas
push
or
cmp
add
mov
cltd
jg
mov
aad
jmp
inc
mov
inc
jne
call
clc
sbb
jae
notb
mov
jbe
push
lock
into
movsl
pop
push
pop
inc
and
sbb
js
add
or
lods
push
push
int3
add
mov
dec
ret
xor
add
jae
sub
pop
or
add
lock
push
rol
in
cmpsl
jo
mov
inc
ret
rorl
mov
push
mov
cmovb
xlat
mov
adc
mov
rcrl
inc
mov
add
jecxz
xor
cs
pop
or
cmp
and
push
add
ret
cmp
push
out
mov
das
and
adc
push
lds
fists
sbb
mov
and
push
clc
cmc
mov
sub
sbb
cmp
push
hlt
xor
dec
adc
cld
mov
aas
jb
sub
cwtl
and
pusha
add
adc
and
jae
inc
shlb
xchg
xchg
add
or
mov
loop
pop
test
and
sbb
add
add
mov
in
dec
sbb
loopne
pop
add
cmp
in
mov
lcall
xchg
add
push
pusha
adc
jmp
jne
pusha
or
adc
or
push
pop
add
lds
loop
sub
and
dec
enter
cmp
cmpb
push
cmp
lret
sbbl
adc
xor
add
stos
inc
int3
or
dec
jne
mov
inc
xor
cmp
aam
add
inc
jmp
sub
nop
adc
and
xchg
xchg
orb
push
inc
test
or
pop
lea
pop
and
orl
inc
or
mov
mov
push
add
or
pop
add
mov
lea
xor
or
add
dec
into
adc
popf
mov
ja
paddsw
mov
in
faddl
inc
out
pop
in
enter
loopne,pt
add
cmp
jne
lea
mov
mov
mov
ret
rclb
add
sub
pusha
pop
add
cli
xchg
mov
add
pop
cmp
cmp
xor
cmp
rolb
jle
pop
aas
pop
lea
pop
add
push
hlt
adc
mov
sbb
and
or
call
cmp
pop
je
stos
push
ret
inc
into
jne
rcrl
aas
add
in
imul
add
das
scas
inc
push
jo
xchg
add
jge
add
pop
add
test
sahf
inc
mov
sbb
inc
xor
add
out
pop
xchg
cmp
test
lock
mov
mov
popf
int3
movsl
add
dec
dec
xchg
adcb
pop
sbb
imul
sub
mov
aad
fsts
jne
das
aas
xlat
and
nop
pushf
push
or
inc
add
mov
add
sub
leave
dec
fcomps
movhps
rcrb
push
andl
sbbb
std
inc
mov
mov
adc
add
aaa
pop
mov
cmp
and
stos
movq
add
and
sub
jecxz
test
loopne
addr16
add
leave
add
add
mov
jo
inc
push
inc
or
aad
sub
into
or
ds
inc
mov
lock
adc
xchg
add
fdivrs
inc
add
xor
loopne
and
or
cs
adc
jg
add
mov
sbb
add
rcrb
and
sub
sub
sbb
adc
mov
stc
add
mov
fmuls
add
inc
pop
jne
pop
inc
adc
cmc
xchg
mov
mov
inc
pop
cmp
leave
add
and
in
cmp
sbbb
mov
rolb
std
add
rorl
or
stos
push
inc
hlt
add
adc
pop
inc
mov
or
jne
andl
pop
adcb
mov
push
cmp
push
inc
sbb
leave
push
xor
add
int
sub
jmp
or
mov
or
addl
daa
and
pop
out
nop
dec
sbb
daa
push
add
test
inc
jnp
fisttpl
add
aad
lldt
imul
hlt
add
add
inc
and
jmp
loop
mov
adcl
inc
add
push
ljmp
sbb
sub
pop
add
xor
sbb
xchg
mov
add
add
jmp
xor
dec
xor
jae
dec
sub
jge
sub
add
or
push
jno
or
jbe
adc
inc
cltd
or
inc
pop
lahf
pushf
adc
fstpl
xchg
adc
xchg
mov
je
popa
in
add
testb
push
mov
fwait
cmpb
mov
add
mov
stc
je
push
lret
ret
bound
adc
loop
in
inc
cli
stc
dec
push
pusha
and
scas
inc
icebp
push
sbb
fimull
sub
mov
hlt
inc
bound
jo
loopne
jae
push
xor
addb
movb
add
and
rorl
aam
push
pop
adc
and
add
cmp
out
lret
xchg
mov
fstpl
adc
dec
jp
das
add
inc
pop
mov
jge
mov
nop
ret
pop
adc
fbstp
jge
add
cmpsb
movq
clc
sbb
and
or
mov
pop
cmovp
cmp
add
mov
jle
icebp
add
leave
add
mov
sub
popf
dec
hlt
popa
add
or
push
cmpsb
mov
add
shll
dec
iret
movsb
add
loope
sub
push
enter
mov
popa
cmp
inc
inc
add
cmp
jl
mov
pop
cmp
add
lea
jne
loopne
nop
add
cs
mov
push
pop
add
orb
in
add
mov
outsl
sahf
jno
add
push
pop
addr16
pop
and
add
adc
push
sbbb
add
dec
movsb
leave
or
pop
add
jg
or
push
add
inc
mov
add
addb
pop
add
xor
push
leave
cmp
repnz
push
sbb
movsb
mov
call
cltd
lret
inc
test
fdivrs
out
xchg
pop
aad
mov
cmp
addl
loop
cmp
pslld
andb
out
cmp
xchg
sbb
repz
push
insl
add
or
sub
icebp
test
add
mov
arpl
adc
sbb
mov
add
pop
xchg
or
pop
inc
sarb
push
clc
push
ds
addr16
pop
or
add
sub
dec
push
frstor
sub
cmp
push
jg
add
test
jmp
lock
pusha
ljmp
add
test
inc
scas
or
push
inc
xor
mov
mov
and
or
adc
add
les
adc
jmp
aad
stos
add
add
push
mov
roll
add
adc
hlt
xchg
iret
sub
add
repz
pop
dec
cmpl
add
add
pop
sar
aam
lea
push
push
sbb
ljmp
or
xchg
adc
cmpsl
and
loop
loopne
enter
and
movsb
inc
rcrb
ds
cmp
xchg
loop
add
or
outsb
push
sub
add
cmp
add
aaa
test
pushl
add
inc
inc
sub
testl
test
mov
test
fwait
or
jmp
orl
xchg
lret
jmp
fs
mov
add
pop
mov
inc
add
push
pop
dec
add
adc
mov
jge
sbb
inc
test
mov
inc
cmp
or
dec
adc
movlps
mov
mov
add
push
jo
in
inc
add
fidivrl
or
adc
jl
cmp
out
add
and
movsb
add
add
adcb
test
add
pcmpeqw
icebp
add
add
add
fdivl
orb
arpl
pusha
call
add
shl
and
test
add
int
adc
mov
mov
jg
mov
add
adc
sub
test
not
add
add
cmc
add
loopne
ljmp
addl
inc
sbb
add
lea
add
mov
xchg
jmp
xorl
jbe
sbb
and
add
xor
pop
mov
sub
orl
push
aad
xchg
or
in
leave
lods
in
xor
or
lods
mov
add
shrb
sbb
or
shr
jl
pop
enter
call
jmp
in
fadds
dec
or
xor
repz
sbb
fs
je
pusha
mov
push
lock
icebp
xchg
pop
jbe
dec
lcall
fmuls
push
sbb
push
popa
mov
or
clc
ret
jmp
push
mov
mov
xchg
ds
or
jge
mov
sub
sbb
add
adc
mov
mov
jge
pop
push
int
and
mov
sbb
and
lock
mov
or
mov
cltd
cmpb
adc
fisttpl
sbb
mov
ds
inc
addl
clc
out
in
add
fcomip
add
add
je
ds
push
adc
cld
sub
sahf
pop
add
xchg
add
cwtl
or
add
fs
lea
mov
dec
mov
mov
enter
add
popf
in
in
or
pop
dec
sti
sub
push
lea
and
lahf
clc
and
icebp
aas
add
sti
dec
and
sbb
add
mov
sbb
mov
or
and
or
adc
jne
add
push
pop
push
roll
xchg
cmp
pop
les
enter
orps
pop
fcomps
cmpsb
add
inc
pop
stos
and
psubsb
add
sbb
push
mov
ja
imul
dec
js
xor
pop
fnstsw
adc
add
xchg
add
insb
inc
lock
lea
push
jmp
sub
mov
add
pusha
and
push
push
or
fisubrl
add
xor
mov
nop
xor
icebp
pushf
dec
popa
sbb
jmp
xchg
xor
mov
xchg
inc
or
dec
fwait
inc
stos
push
sub
push
cmc
jo
mov
add
or
or
cmp
sub
add
pop
sub
sbb
inc
add
pop
and
sysenter
mov
call
or
sti
test
add
rol
test
fstcw
popf
and
add
enter
ljmp
invd
mov
xchg
xor
fldcw
xchg
dec
xor
imul
add
daa
inc
call
ja
add
fcomps
xchg
pop
adc
lea
ja
iret
jnp
jno
and
mov
inc
mov
xchg
mov
lret
nop
mov
sarl
push
sbb
mov
add
or
adc
int3
test
insl
cmp
lcall
push
add
stc
add
int
shll
dec
add
pop
test
adc
pop
js
xchg
adc
jnp
push
fistpl
mov
adc
cli
xchg
lea
mov
dec
add
inc
mov
roll
dec
adc
xchg
dec
and
sbb
or
popf
and
pop
pop
ss
or
push
push
jne
or
pop
mov
pusha
inc
leave
dec
add
rol
movsl
or
in
orb
or
jne
pop
or
sbb
fadds
jmp
add
push
shl
inc
cld
loopne
mov
gs
loopne
cmp
xchg
inc
std
add
sti
jmp
sbb
pop
mov
add
or
dec
lods
jno
jno
add
call
sbb
ds
push
inc
or
mov
test
dec
das
add
pop
str
popl
mov
je
inc
add
mov
cmp
fistps
and
jle
add
mov
repnz
jmp
add
pop
and
add
mov
adc
adc
inc
and
orl
test
mov
mov
pop
or
mov
jbe
dec
mov
adc
mov
hlt
mov
add
cltd
inc
call
add
cmp
cmp
shll
js
add
or
pop
shl
or
add
cltd
pop
testl
lock
adc
push
push
pop
add
cmp
orl
shl
add
rolb
sbb
inc
cli
add
cmp
xor
or
and
add
ss
pop
cmpsl
popf
pop
in
dec
fdivrl
das
dec
push
or
cmp
mov
pop
insb
pop
push
movsb
roll
dec
loopne
or
call
dec
js
mov
inc
add
das
inc
in
pop
out
inc
lods
idivb
add
aaa
shll
mov
add
iret
adc
pop
cltd
mov
leave
enter
sti
sbb
mov
push
mull
sub
pop
pop
add
sahf
and
inc
mov
dec
mov
pop
push
movups
inc
adcb
pop
pop
inc
dec
and
push
clc
popf
jo
xchg
cmp
and
adc
jnp
sbb
rep
loopne
inc
sub
movsl
cmpsb
push
push
inc
fdivrs
mov
xor
push
orb
add
adc
js
add
scas
or
in
andb
lret
adc
or
lods
iret
mov
jge
mov
lcall
add
or
xchg
mov
and
movsl
les
rcrb
rclb
mov
fistpl
test
or
cld
and
jmp
sbb
test
adc
icebp
inc
adc
jne
xchg
cwtl
add
push
sbb
mull
out
pusha
imul
sahf
dec
add
add
sbb
jmp
inc
mov
dec
aad
clc
jns
add
xor
lea
fisubl
add
fxch
jo
ret
cwtl
dec
iret
push
push
and
add
jg
jb
sub
inc
fsubrl
arpl
rcrb
cld
mov
notb
push
add
push
insb
sbb
nopl
fsubl
jns
cmc
add
jge
rcll
or
call
sub
and
pop
jnp
test
inc
add
in
and
sub
sarb
jge
and
cmp
fdivrs
add
inc
push
lock
cmp
mov
push
sub
dec
add
xchg
add
arpl
cmp
mov
movsl
pop
push
add
or
dec
test
push
mov
add
aaa
andl
pop
notl
and
add
inc
inc
xchg
add
cmp
adc
xchg
mov
pop
sbb
and
icebp
sub
push
incl
or
push
clc
push
out
outsl
sbb
jne
das
jmp
add
hlt
popf
inc
and
add
xor
insb
add
cltd
in
xchg
add
add
mov
push
out
leave
test
and
lahf
sub
xchg
adc
mov
and
adc
push
add
adc
pushf
mov
add
sbb
add
insl
or
jmp
cli
add
dec
lea
pusha
sbb
mov
or
inc
arpl
out
add
add
push
push
repnz
popa
ljmp
push
push
inc
adc
movl
ja
movsb
pusha
iret
movb
add
or
add
fiaddl
and
daa
das
popf
scas
dec
testl
pop
loopne
pop
pop
add
xchg
lret
push
add
jne
push
inc
mov
add
adc
daa
sbb
jmp
loope
push
jl
add
cmp
add
in
daa
js
push
jmp
idiv
sub
inc
add
adc
push
call
cmpsb
jg
shlb
add
adc
sbb
push
dec
xlat
jo
lods
pop
arpl
mov
xchg
cs
dec
adc
cmp
add
pop
rcl
mov
sbb
jg
addr16
mov
mov
les
or
sbb
pop
mov
inc
data16
lahf
bnd
sub
and
in
nop
xor
jne
mov
lret
add
fnstcw
jnp
test
add
cld
je
mov
cmp
mov
dec
and
dec
xorl
adc
movsb
mov
add
sbb
add
pop
mov
add
dec
mov
add
pop
cwtl
dec
into
sbb
leave
sbb
jmp
pop
or
mov
inc
add
lret
jmp
add
push
sbb
iret
lcall
pop
add
cltd
xchg
test
add
mov
inc
mov
cli
add
sub
pop
andb
inc
dec
add
cmc
add
jl
adc
add
adc
add
pop
mov
xchg
dec
dec
imul
mov
movsl
and
adc
xchg
jb
roll
add
cmp
jbe
lock
incb
test
imul
sub
fdivr
and
xchg
call
mov
cmp
shr
mov
xor
test
les
clc
dec
nop
add
jl
data16
cmp
add
sub
mov
add
int
add
clc
add
int3
add
dec
movsl
sub
es
push
outsb
repz
inc
shlb
mov
inc
mov
xor
str
and
les
mov
lods
adc
mov
test
call
je
lock
pmuludq
clc
add
pop
xchg
lock
lock
adc
pushf
sbb
inc
and
sbb
into
nop
movsb
sahf
xchg
and
push
and
mov
or
xor
jl
jmp
and
or
cld
icebp
jge
jg
push
sub
xor
stc
sbb
sub
jle
sub
mov
push
dec
add
outsb
loopne
dec
mov
mov
cmp
and
movsb
jno
xchg
push
add
xor
xchg
sub
add
fimull
lods
push
out
int3
out
movsb
jl
add
pop
adc
mov
clc
pop
and
dec
push
xchg
shlb
fs
ja
push
push
sbb
adc
adc
or
add
rcl
and
sbb
or
push
cmpsl
mov
and
add
push
call
in
out
stos
push
xor
rcr
push
movsl
push
cmp
enter
pop
lea
stos
sbb
pop
movsb
shlb
cmp
out
imul
and
rclb
fcompl
add
jmp
cmp
jb
pop
add
orl
out
sbb
sub
push
xor
dec
add
mov
test
pop
or
cltd
add
pop
xor
sbbl
je
ja
push
hlt
stos
jmp
hlt
push
fisttpll
ficomps
cmp
jne
imul
add
and
pop
lmsw
test
xchg
cvttps2pi
cmp
mov
cmpb
jle
jbe
psubsb
fwait
adc
lret
add
movsl
pop
jo
pop
pop
add
adc
sarb
loop
orb
cli
push
jo
xchg
mov
and
push
dec
add
adc
sbb
add
push
cmp
pop
sub
hlt
jb
mov
or
test
add
add
sbb
push
cmp
orb
sbb
fs
pusha
add
in
lahf
movsl
push
adc
sbb
orb
add
add
mov
popf
adc
add
and
rcrb
cmc
ja
fsubl
sub
in
or
cld
or
mov
loope
and
adc
cltd
mov
pusha
idivb
dec
aas
push
orb
mov
add
push
in
add
neg
jp
loopw
mov
push
adc
je
cmp
mov
ja
jge
pop
add
out
adc
fadds
sub
aad
shl
mov
or
ja
pop
shl
xchg
push
jge
add
push
lock
push
adc
add
in
xor
xor
inc
loopne
mov
aas
cmp
movb
and
and
pop
inc
out
or
out
loope
les
rclb
adc
je
ret
out
xor
ret
pushf
dec
movntq
rclb
jmp
pop
sbb
jo
inc
std
and
daa
insb
add
push
mov
add
jl
jmp
add
ret
mov
pop
adc
loop
push
xor
js
pop
in
imulb
add
adc
por
popa
add
imul
adc
cmp
mov
add
push
data16
fisubs
pop
xchg
jmp
pusha
subb
jmp
cmp
sbb
adc
add
dec
and
add
es
out
add
sub
lret
cli
pop
pop
sub
cmpsb
test
cmp
data16
xor
dec
loop
add
xor
pop
mov
push
aas
mov
shll
addl
add
sbb
in
sub
mov
nop
loope
testl
or
add
jl
mov
xchg
add
add
test
inc
xor
in
add
sub
adc
mov
cmp
js
add
aam
cmp
dec
pop
fisubl
push
mov
add
add
add
sbb
mov
sbb
xchg
out
and
test
mov
rcrb
sbb
inc
mov
add
xchg
push
add
jmp
push
dec
xchg
lea
daa
xor
rclb
pop
sahf
push
mov
add
sub
push
add
mov
cli
lock
ja
adc
xor
inc
xchg
mov
nop
inc
icebp
xchg
addb
popa
jge
cs
ret
adc
push
pusha
add
jb
lret
add
mov
jo
sub
call
lods
jns
adc
and
mov
mov
add
and
cmp
orb
adc
add
push
sti
xor
movsl
inc
das
mov
push
cmp
je
call
add
or
cld
test
add
push
sub
add
aaa
cwtl
iret
xchg
cmp
les
imul
adc
jne
add
push
and
sub
jo
sub
add
or
add
fldl
add
push
jl
or
adc
nop
insl
mov
stos
mov
aam
and
mov
imul
push
push
jmp
call
push
sub
mov
test
add
jb
mov
testb
pop
aaa
xchg
rolb
adc
sbb
cmp
ja
sbb
mov
cmpsb
add
add
lret
xor
mov
shlb
add
cld
mov
push
ljmp
push
lea
push
xchg
roll
test
and
std
xchg
push
sub
pop
mov
call
cld
cs
add
stc
add
adc
lret
cmp
daa
mov
cld
mov
push
add
adc
add
nop
and
pushf
je
adc
wbinvd
cmpb
sbb
sub
adc
push
call
or
stos
add
enter
out
in
push
dec
lock
popa
xor
add
jp
push
lods
dec
into
cmp
jmp
dec
xchg
daa
add
dec
hlt
les
fmull
std
call
mov
mov
aas
iret
xor
jg
add
pop
cwtl
mov
fnstenv
push
enter
icebp
jnp
cld
pop
and
pop
idivb
add
pop
clc
icebp
sbb
sub
xchg
push
loop
xor
or
cs
js
jg
cmp
pop
popf
add
pop
clc
push
das
in
jl
add
cs
sbb
push
jmp
int3
lock
aad
inc
enter
addr16
add
push
call
nop
sbb
subl
movsb
adc
icebp
stc
mov
andb
aam
aad
pusha
cmp
xor
rep
xchg
popa
orl
adc
mov
adc
add
jmp
enter
push
add
mov
sahf
adc
inc
adc
popa
or
bound
adc
jne
mov
js
xchg
shlb
push
dec
push
add
and
jne
mov
faddl
push
orl
lds
add
mov
add
xor
ret
jp
je
or
mov
or
out
repnz
insb
xor
add
test
add
sub
push
out
mov
mov
push
sbb
mov
jne
je
sbb
sbbl
push
push
pop
or
arpl
push
mov
mov
pop
inc
sbb
adcb
movsb
sub
cmp
bound
es
sbb
testb
roll
add
and
dec
mov
shl
adcb
lock
imulb
insb
repz
stc
or
mov
dec
add
add
or
or
push
cmp
push
data16
and
inc
add
add
loope
mov
rclb
cmpsl
fprem
clts
lock
mov
inc
out
imul
push
lret
fsubl
loopne
adc
cmc
add
insb
aaa
inc
xor
cld
mov
out
and
call
or
pop
sub
out
push
or
adc
fcoms
je
inc
lea
lret
stos
and
adcb
xchg
add
add
inc
hlt
pop
mov
and
push
push
aaa
in
xor
xor
sbb
daa
hlt
add
clc
jno
jl
mov
lret
mov
jp
cmp
or
adcb
add
add
mov
push
cs
push
adcb
jmp
lea
sub
fsubl
xchg
lds
or
mov
inc
pushf
mov
aad
pop
add
xorl
sar
cmpb
nop
add
dec
int
pop
insb
mov
mov
push
mov
adc
rorb
test
mov
add
add
cmp
jl
add
shlb
or
push
pop
in
push
jecxz
inc
stos
or
add
dec
and
test
test
push
sti
cwtl
mov
xchg
inc
and
sub
cltd
or
or
scas
mov
andb
lea
fwait
xchg
call
jmp
daa
call
cmpsl
ljmp
inc
loopne
cmpl
or
add
test
sbb
jmp
sbb
xchg
adc
add
orl
add
mov
iret
add
mov
daa
verw
cmp
call
sahf
ds
push
imul
imull
ret
sbb
adc
fs
xchg
das
cld
mov
add
xor
push
push
or
cld
rcl
add
cmp
or
leave
adc
repnz
pop
in
xor
xor
or
fcoml
jmp
add
and
add
adc
add
scas
jne
cmpsl
sbb
xchg
das
add
or
cmp
fsubs
and
lahf
and
arpl
sbb
inc
stos
nop
inc
orl
pop
and
push
sti
sbb
clc
scas
je
arpl
and
add
add
dec
push
test
shl
orb
fcoml
repnz
pop
sub
inc
jp
jo
add
cmp
or
xchg
sub
cmp
add
lret
and
add
lea
jg
cmp
leave
add
dec
aam
sbb
adc
pop
jne
mov
push
out
sahf
add
dec
ds
mov
ret
andb
add
push
cltd
dec
xchg
cmp
xlat
xlat
inc
pop
pusha
daa
xor
add
jle
cwtl
inc
add
gs
xor
add
cld
push
sbb
leave
pop
fs
dec
adc
add
sub
test
jge
jg
jge
jns
clc
and
cmp
mov
cmp
fistpll
mov
sbb
icebp
xor
test
decb
les
pusha
push
sub
add
stc
mov
shlb
ret
bound
pop
mov
dec
mov
cmpsb
adc
dec
mov
cmp
je
xor
inc
or
add
repnz
cmp
push
jg
pop
push
and
popl
jp
scas
adc
jge
add
inc
add
adc
lock
aam
loopne
enter
inc
push
sbb
je
push
lret
push
in
push
jnp
adc
jne
add
push
lods
rclb
in
or
mov
push
xchg
jno
xchg
sub
jmp
out
movsl
add
dec
or
ja
mov
add
repz
adc
push
test
jbe
lock
mov
pop
xor
add
call
inc
add
or
lldt
aaa
test
add
lret
dec
cltd
sub
andb
adc
lahf
add
ret
push
or
jno
mov
dec
popf
jae
xor
js
bound
inc
add
add
aas
rolb
or
icebp
cld
dec
mov
add
jb
add
jg
cmp
add
out
ss
lahf
pop
repnz
stc
repz
or
or
mov
sbb
sbb
push
jae
rcrb
add
clc
loop
adc
rdpmc
add
adc
mov
orb
pop
sbb
jbe
pusha
sub
inc
repz
lcall
xchg
jle
push
pusha
jecxz
gs
add
dec
adc
enter
add
cmp
mov
xchg
and
jle
daa
sbb
inc
clc
add
xor
lods
add
sub
decl
xorl
pop
sbb
cld
loope
sti
inc
sar
lods
inc
cmp
or
add
adc
add
jmp
cli
loop
outsb
pop
mov
sbb
pop
xchg
fstps
add
jo
hlt
or
xor
push
dec
call
add
push
rolb
in
pop
add
lock
mov
sbbb
add
je
or
or
aas
cmp
orb
push
add
cmp
pop
pop
cwtl
fmull
sldt
adc
mov
push
xor
cmp
jg
pop
push
jmp
push
xchg
repnz
rcrb
push
pop
stos
and
sub
dec
call
inc
or
add
test
les
or
fmul
cmc
pop
jo
and
data16
sahf
lahf
andb
movsl
jle
xchg
dec
inc
fdivrs
xor
sub
xor
add
mov
inc
jle
andl
gs
jb
adc
push
jmp
jo
cmpsb
dec
xchg
pop
add
lcall
popf
add
mov
inc
xlat
or
std
cmp
jle
xchg
pop
mov
fimuls
sub
imul
lock
and
dec
hlt
and
adcb
xor
enter
push
clc
shrb
mov
dec
or
popa
and
negb
mov
cmpsb
pop
out
scas
xchg
inc
sub
repz
ljmp
adc
push
adc
and
pop
cmp
add
jmp
xor
add
leave
mov
dec
add
inc
mov
mov
inc
fs
add
xor
add
movsb
andl
addr16
add
jmp
add
jl
and
jb
popa
pop
add
mov
adc
jmp
ror
and
sub
mov
shlb
psubsb
push
pop
jmp
or
add
and
and
sbb
add
xor
outsb
push
popf
faddl
sbb
out
mov
xor
jp
add
cmp
pop
jne
scas
dec
adc
lods
aas
rcl
int
jno
pop
sub
mov
movsb
add
mov
mov
cmp
adc
syscall
jl
out
lods
add
mov
jmp
lods
adc
add
xchg
push
clc
xchg
loope
xor
sub
add
push
push
push
mov
jns
lock
loopne
mov
and
jns
hlt
jg
neg
add
add
fsubrl
lock
cmp
scas
add
xchg
push
incb
add
fstpt
mov
rcr
add
cmp
push
movsb
xchg
shlb
out
dec
nop
add
pop
or
add
add
or
sti
jmp
jnp
add
inc
hlt
jp
sub
add
adc
sub
pop
push
add
pusha
jecxz
sbb
jno
add
pop
add
add
inc
mov
sbb
or
xlat
xor
fildl
or
cmp
mov
mov
rcll
shlb
cwtl
fstl
enter
add
push
test
leave
push
mov
and
or
add
call
ljmp
add
sti
sub
pushf
jo
sub
lret
inc
add
sub
pop
push
rorb
adc
xor
mov
pop
inc
adc
or
xor
add
andb
jmp
add
outsl
jp
jnp
subb
cs
lahf
clc
cmpsl
fsts
maskmovq
sub
sti
add
js
pop
jmp
inc
es
je
add
cmpsl
clc
mov
push
add
sbb
test
add
sub
pusha
mov
add
jmp
andb
cmp
add
and
adc
iret
shlb
sbb
fcoms
dec
add
or
bound
or
jae
push
cli
add
jge
cmpsl
add
and
pop
sar
mov
mov
mov
push
sub
loop
addb
cmpl
cwtl
enter
sbb
add
movsl
add
xor
nop
xor
addr16
adc
ja
je
add
or
icebp
inc
outsl
ds
aaa
sbbb
sub
add
mov
aad
and
adc
inc
pop
pop
clc
sarb
mov
add
add
neg
and
push
or
xchg
sbb
repz
sbbb
cli
nop
pop
pushf
jne
in
shlb
daa
sbb
sbb
adc
or
or
cmpsb
testl
cmp
add
push
lret
adc
sub
add
mov
jne
mov
or
mov
bound
stc
xor
add
into
jb
push
movsb
add
push
inc
dec
jmp
mov
jle
add
popa
mov
sub
jbe
sub
mov
or
mov
add
popa
or
xor
mov
flds
nop
in
andb
add
cmp
inc
subb
enter
cmpsb
add
adc
dec
sbb
sub
push
loop
xlat
out
mov
pop
adc
mov
mov
inc
imul
clc
cld
or
popa
pop
hlt
loopne
pop
stos
sarb
test
sub
repz
push
jae
jns
les
cmp
pop
xchg
nop
or
je
pop
aaa
in
xor
pop
icebp
popf
sub
or
add
push
push
jmp
cld
add
mulb
add
insl
or
orl
jle
iret
sbb
sub
notb
and
add
inc
add
jg
subb
mov
cmp
je
fldl
sub
inc
dec
add
adc
stc
cwtl
aad
test
or
sbb
cmp
xor
movsb
push
mov
stc
hlt
pop
add
adc
lret
mov
or
push
dec
pop
ret
push
out
adc
cmp
add
negl
testb
imul
mov
mov
dec
mov
repnz
add
mov
push
mov
jecxz
add
lds
inc
sbb
pop
stc
sbb
clc
add
or
dec
jl
xor
add
sub
pop
xchg
mov
je
push
sbb
xor
push
fucompp
add
js
je
xrelease
jle
sbb
iret
mov
nop
or
sti
xlat
cli
mov
xorb
mov
cmp
movb
cwtl
push
es
or
add
dec
mov
and
ret
andl
add
lea
out
mov
or
rolb
lods
ret
add
std
mov
call
add
cmp
inc
fnstsw
sbb
pop
add
ret
sub
inc
xor
or
mov
jmp
add
enter
pop
push
loopne
add
inc
into
cmp
scas
add
push
or
jmp
rcrl
or
add
cmpl
bound
dec
test
adc
hlt
cli
jo
call
adc
sbb
jno
int3
xchg
roll
cmp
xor
and
call
sub
stc
add
add
addl
sbb
adc
sbb
add
pushf
addl
pop
jle
testb
test
jno
cmp
push
adc
jg
pop
mov
push
push
sub
mov
divl
fadds
or
fdivrl
mov
adc
jne
sbb
dec
in
rol
orb
or
mov
mov
sub
inc
icebp
sbb
add
sub
gs
add
sbbl
inc
stos
xor
xchg
mov
inc
lret
outsl
hlt
cld
loop
fiadds
mov
xor
add
cli
or
mov
add
push
cmp
or
in
aam
push
fnstenv
jmp
neg
shll
xlat
xchg
add
data16
or
andl
subl
or
mov
xchg
jmp
add
and
cld
push
push
pop
mov
mov
cmp
add
inc
cmp
push
jge
mov
addl
enter
cmp
adc
in
aad
call
jge
add
movsl
add
fs
push
add
dec
std
repnz
inc
jl
int3
jmp
add
test
nop
jo
add
pushf
enter
mov
loop
mov
dec
push
lahf
sub
mov
cmp
mov
cltd
mov
mov
and
shlb
push
add
sub
dec
pop
xchg
push
and
xchg
std
fidivl
ljmp
pop
or
jb
add
mov
xadd
mov
out
out
testb
cltd
push
and
xor
sub
push
pop
inc
add
ja
loopne
sarl
mov
sbb
add
add
add
inc
and
xor
push
adc
and
cmp
pop
sysret
or
out
and
jecxz
mov
cmpsl
pusha
push
adc
js
incb
add
xor
sbb
leave
sub
outsb
adc
jne
ss
sub
mov
out
mov
xchg
aas
or
shlb
inc
adc
dec
push
jl
push
stos
add
jbe
inc
pop
popa
je
jge
and
sbb
outsb
jmp
inc
dec
inc
add
xor
pop
fiaddl
adc
sub
and
dec
inc
inc
jmp
ljmp
inc
push
dec
inc
sbb
dec
pop
add
push
and
or
add
imul
rorb
test
adc
loope
dec
dec
add
aam
adc
dec
mov
push
ss
xor
add
add
pcmpeqb
imul
jp
push
xchg
cmp
aaa
pop
and
sub
fdivrs
addr16
adc
pshufw
add
add
xor
sbb
cmp
mov
mov
ret
loopne
cmpsl
jbe
imul
cmpsb
add
and
mov
std
mov
xor
dec
pop
ficoms
add
das
mov
add
jecxz
pusha
xor
scas
clc
out
add
mov
inc
mov
jl
fistps
call
mov
dec
cmpb
dec
add
aad
movsb
or
add
insl
xor
pop
lods
xchg
push
sbb
arpl
pop
xor
in
xor
insl
pop
lcall
add
out
lods
add
add
and
leave
push
add
test
sub
xor
jne
sub
popa
inc
andb
adc
outsb
add
or
cmp
and
orb
in
ret
sbb
add
mov
add
notb
mov
bound
or
or
mov
jmp
aad
add
and
add
lods
add
push
or
lock
in
ds
cmp
add
ret
sbb
push
inc
loope
push
das
mov
push
add
mov
repz
fidivrl
popl
jne
ljmp
cwtl
sub
dec
add
jmp
nop
pop
xor
xchg
rorb
xchg
xor
add
xor
sbb
push
dec
inc
mov
es
or
cmp
add
sbb
add
das
add
jmp
repz
inc
add
aas
push
jl
fstpl
add
enter
popa
sbb
add
jge
xor
sbb
ja
jmp
add
push
repz
xlat
inc
or
push
mov
xor
pop
jns
push
add
push
outsb
add
inc
push
jb
xor
add
sbb
or
xchg
pop
clc
arpl
test
pop
xchg
add
je
or
iret
add
add
push
xchg
sub
jns
aad
dec
lret
flds
and
or
cmp
mov
rolb
pusha
nop
dec
push
xchg
mov
out
movsl
sahf
lret
and
addr16
sub
xchg
loop
js
push
pop
sbb
sbbl
xchg
mov
or
xor
das
push
add
inc
push
and
mov
outsb
inc
inc
xor
dec
and
mov
sbbb
addr16
cmp
inc
int3
cmpsb
bound
push
add
cmp
mov
pushl
pop
jle
push
dec
and
adc
les
dec
push
inc
push
or
pop
inc
sbb
push
ret
add
or
insb
add
data16
push
cwtl
add
push
fwait
push
pop
lcall
mov
mov
and
and
push
movsb
lldt
sahf
add
jp
add
negl
add
xchg
lods
dec
xor
mov
and
call
fcomps
in
push
add
cmpsb
mov
add
addr16
add
sub
add
jb
outsl
dec
dec
xchg
inc
pop
jns
mov
das
fcoml
or
jmp
data16
push
sub
add
xor
outsb
ret
icebp
sub
jns
jo
push
xchg
push
push
out
adc
clc
dec
outsb
shll
push
mov
loopne
mov
xchg
push
add
dec
inc
dec
add
xor
pop
add
add
jmp
das
lret
add
push
add
sub
sub
push
add
rcr
imul
cmp
cltd
push
push
cmc
shlb
jo
or
inc
rclb
inc
add
repnz
inc
add
jl
movsl
add
sub
jb
ds
sub
outsl
jo
loopne
addr16
jno
xor
mov
and
add
push
roll
xchg
mov
xor
cs
call
insl
pop
jo
ffree
in
data16
cmp
test
push
sub
cmp
add
data16
insb
gs
pop
add
je
or
cmp
popa
cld
sbb
in
outsl
inc
pop
je
mov
dec
cwtl
jo
sub
sbb
and
dec
outsl
cmp
inc
aas
loopne
imulb
sub
fisubs
insl
stc
add
sbb
jne
add
adc
lods
xor
je
add
inc
sbb
popa
pusha
testl
js
add
shlb
add
pusha
fsts
pop
push
in
push
je
add
push
insb
cmp
mov
mov
aam
push
push
add
or
cmp
std
or
roll
jno
xor
sub
test
inc
add
insb
pusha
push
dec
daa
push
mov
mov
add
push
mov
iret
out
imul
cmp
mov
ds
xor
add
jge
and
add
sub
pushf
dec
or
jl
pusha
or
add
imul
add
xor
fstpt
lods
add
mov
push
pop
rclb
push
cmp
pop
push
mov
xchg
jecxz
cmp
add
sbb
dec
outsl
dec
pop
add
jae
fdivl
adc
push
popf
loope
insl
or
les
add
dec
and
adc
sub
bound
je
ss
dec
rolb
adc
sbb
mov
andl
mov
add
imul
lods
popa
dec
sti
sub
jge
xor
mov
mov
rclb
icebp
jmp
push
sbb
mov
add
sbb
adc
js
add
mov
movsb
add
cmp
cwtl
and
jae
cmp
lock
jle
call
sbb
das
add
sbb
ret
xchg
or
pop
movsl
sub
out
fldl
out
loopne
jg
inc
movsl
popf
jmp
test
cmpsb
push
add
aaa
icebp
xor
add
loopne
push
add
adc
sbb
inc
xchg
enter
jmp
mov
in
cmp
xchg
and
rolb
or
bound
add
fs
pushf
sub
cmp
sbb
jne
call
mov
jno
add
adc
xchg
sbb
dec
add
add
inc
mov
lock
pop
and
dec
sbb
stc
loopne
xor
push
js
jg
jg
jg
cmp
loope
popa
add
repnz
add
add
scas
rclb
add
adc
test
add
and
jle
inc
adc
cmpb
pop
call
aas
scas
add
add
rclb
cld
fmuls
mov
es
les
inc
add
imul
sbb
sbb
add
aas
add
xor
dec
pusha
add
inc
sub
fisttps
loop
add
cld
test
pop
inc
add
int3
test
sarl
fidivrl
mov
addl
add
xchg
mov
push
iret
mov
in
call
aam
jle
adc
push
add
lret
cmp
pop
cmp
and
xor
fcoms
fsubp
stc
add
xor
xchg
inc
adc
add
cld
sub
or
inc
add
pop
or
sub
or
fisubrs
adc
add
leave
pop
cmp
adc
dec
cmp
test
cltd
pop
adc
adc
sub
cmp
inc
inc
sub
mov
push
or
xor
cltd
pop
jl
dec
dec
insl
xchg
add
enter
add
push
xor
cmpb
andb
test
pop
and
mov
jo
cmpsl
in
jb
into
add
xchg
adc
mov
enter
cmp
pushf
fcompl
jns
add
ret
adc
adcb
mov
add
leave
sbb
mov
pop
in
int3
into
add
rorl
and
sahf
loopne
add
test
lds
add
and
sbb
jmp
add
xlat
xchg
inc
xor
scas
sahf
cmp
mov
adcl
mov
cmpsb
add
dec
aaa
pop
js
jp
outsl
loopne
add
or
mov
add
add
jl
addb
mov
stc
popf
add
jmp
stos
push
push
inc
mov
int3
repnz
test
adc
stos
add
scas
ljmp
add
cmpsl
aam
negl
xchg
add
inc
gs
xchg
orb
scas
add
jge
pop
add
or
addl
inc
in
xchg
cmp
add
push
mov
cmp
sahf
push
xchg
pop
jp
add
or
add
pop
push
nop
fsubs
add
mov
fldl
fwait
xchg
xor
add
les
and
int
add
add
sub
cmp
jo
add
jo
add
dec
lea
cld
ret
loopne
add
mov
add
icebp
add
mov
inc
nop
lods
lds
cmpsb
mov
and
scas
sbb
mov
xor
cmp
in
xchg
add
std
into
jge
add
loopne
cmp
loope
les
leave
clc
xchg
lock
pop
cmp
inc
int
jecxz
scas
loopne
add
add
mov
filds
and
aas
loop
add
jp
inc
add
sarl
push
jl
adc
das
rorb
adc
add
daa
ljmp
jge
mov
inc
loopne
add
push
arpl
int3
shlb
add
call
loopne
add
jp
and
lods
cmp
and
cltd
xchg
mov
cmp
mov
add
mov
jecxz
cmpsb
push
add
movb
add
fildl
cmp
jno
sbb
and
xor
fisttpl
pop
cmp
xorps
movsl
and
push
mov
loop
add
sbb
pop
mov
adc
ss
dec
push
scas
into
imul
pop
add
add
faddp
jge
sti
call
out
pop
push
mov
push
adcl
dec
dec
bound
add
scas
push
xchg
jge
rcrb
into
ror
add
push
cmpsb
pop
fmuls
mov
sti
pop
adc
mov
loopne
lds
subb
cwtl
jo
mov
adc
icebp
xchg
or
and
das
and
mov
cmpl
xchg
fadds
sbb
sub
and
sbb
and
push
add
jle
dec
or
sub
sub
pop
inc
inc
adc
xor
jo
in
or
xchg
mov
sbb
sub
inc
fadds
xor
add
or
mov
popa
lea
xor
das
mov
jno
jo
jne
jo
data16
sub
inc
sub
mov
cmp
xor
and
sub
push
sbb
sub
jl
into
or
mov
sbb
inc
loopne
sub
bound
pop
and
add
inc
roll
dec
and
and
add
sbb
push
add
sub
or
das
push
xor
or
xor
add
pop
xor
pop
or
popa
adcb
fisubs
cs
bndstx
ret
insl
orb
outsl
jb
cmp
jne
cmp
jl
cmp
or
orb
mov
dec
mov
outsb
mov
xchg
enter
fmuls
sbb
push
mov
push
test
push
pop
lods
xor
pop
mov
xchg
je
mov
js
mov
pop
mov
pop
inc
pop
mov
mov
pop
adc
int3
mov
mov
jo
mov
xchg
sub
ret
loope
ret
mov
popa
movb
xor
enter
lret
xchg
arpl
add
gs
add
and
dec
rorb
addr16
push
or
xor
or
insl
add
mov
cmpsb
cmp
or
or
js
cmpsb
nop
js
iret
test
leave
or
icebp
push
addb
jl
rcl
test
adc
js
inc
mov
adc
addr16
push
sbb
sbb
gs
or
rcrb
nop
and
movsb
fcoms
bound
arpl
inc
sbb
fs
sbb
add
cmp
es
push
mov
adc
sub
add
cli
jno,pt
sbb
pushf
addr16
pop
lock
dec
sarl
add
inc
xor
sub
outsl
mov
cmp
push
adc
icebp
dec
push
mov
dec
xchg
lret
pop
adc
push
cmp
and
push
jno
sbbb
or
sub
push
cmp
adc
mov
sub
sub
addr16
push
dec
or
inc
sub
mov
rcrb
movsb
out
push
es
push
sbb
sbb
sete
shrb
ficoms
and
dec
outsl
add
add
push
push
xchg
add
xchg
sub
jp
mov
sub
push
sub
stos
ds
cmp
inc
dec
xorl
lcall
inc
dec
and
pop
xor
add
pushf
inc
lcall
dec
xor
add
iret
subl
lds
jno
push
lea
push
sub
aaa
push
mov
cmp
in
shl
push
or
jle
test
into
xchg
push
xchg
jbe
pushf
dec
cmc
dec
fsubrs
mov
fidivl
push
js
inc
sub
cli
sarb
shlb
xchg
xchg
xor
pop
dec
dec
outsl
jne
mov
mov
addl
dec
dec
dec
jne
and
mov
insl
cld
movsl
adc
or
dec
addr16
mov
cmp
mov
jb
sbb
dec
cmp
inc
jp
xor
cmpb
cmp
repnz
push
incl
xor
xor
push
aaa
mov
dec
cs
clc
cmp
lea
incb
dec
inc
push
sbb
inc
and
sbb
xchg
xchg
addr16
add
and
push
cwtl
dec
loop
cmp
mov
xor
push
inc
or
inc
or
sub
and
jp
add
call
popa
push
jno
sahf
cmpsb
imul
stos
mov
add
call
or
mov
xchg
pop
push
xchg
or
and
mov
and
mov
add
enter
fdivrs
sbb
jmp
lret
mov
xchg
gs
adc
pop
sbb
loopne
popf
dec
sbb
push
add
dec
add
ljmp
xchg
lods
add
or
sarl
push
cmpsl
mov
and
sbbb
xor
push
and
popa
js
pop
je
jno
hlt
push
bound
add
jne
stc
imul
xchg
or
shll
daa
fiaddl
int3
adc
push
mov
pop
add
pop
mov
lahf
dec
sbb
jo
inc
xor
icebp
je
inc
clc
add
push
imul
mov
push
add
dec
add
add
loopne
and
sbb
adc
data16
adc
add
pminsw
add
pusha
dec
xor
ficomps
lcall
mov
inc
push
adc
sbb
nop
pop
into
sub
add
xchg
xor
cmp
pusha
hlt
inc
inc
lret
xor
adc
or
and
sbb
adc
adc
pop
rolb
insb
mov
or
adc
push
test
add
in
add
inc
rolb
sbb
add
or
add
nop
in
mov
decb
es
aam
add
adc
out
dec
test
jne
or
leave
mov
add
mov
pusha
in
popa
add
xor
test
push
int3
jnp
and
stos
inc
lock
xor
adc
call
maxps
test
clc
sub
add
pop
add
iret
add
xchg
adc
cld
mov
sbb
leave
std
mov
add
in
je
xorb
fldl
dec
add
test
sub
mov
arpl
adc
push
dec
mov
and
into
arpl
mov
jmp
dec
dec
lods
add
nop
inc
inc
test
sbb
int3
sub
mov
fwait
or
scas
add
incb
inc
shl
or
sti
xchg
mov
jnp
add
or
jb
mov
enter
clc
imul
call
bound
test
or
mov
rorl
and
arpl
add
mov
jnp
jo
pop
sub
lret
add
rcrl
les
ret
nop
and
push
call
adcb
iret
adc
insb
js
add
mov
add
cmp
add
or
adc
mov
inc
mov
xor
pop
add
in
mov
shlb
rolb
add
rorb
adc
loope
lea
je
jp
add
mov
pop
mov
out
lea
int3
hlt
mov
cmp
pop
dec
in
nop
add
test
aas
je
add
push
add
dec
push
ret
sub
test
sub
fdivl
int3
jmp
cmpb
fadds
sbb
test
movsb
test
or
pop
push
call
dec
js
add
test
mov
sarb
clc
mov
cmp
enter
add
push
xor
movntps
lret
scas
rorl
shr
inc
fdivrl
fsubrp
movsb
lret
add
test
je
push
inc
xchg
add
fstps
push
hlt
mov
loopne
jle
rol
pop
cmp
sbb
sub
fsubs
add
movsl
adc
xchg
pusha
test
adc
cmp
or
int3
sbb
jnp,pt
adcl
call
and
sbb
inc
pop
fadd
sub
dec
xor
inc
addr16
jle
call
push
jae
cmp
xchg
add
pop
test
out
add
jmp
adc
or
es
ja
jg
jp
jp
add
mov
test
sub
sub
lret
mov
adc
rcrl
stos
pop
ret
or
mov
add
cmpsb
scas
mov
mov
add
sbb
movsb
pusha
adc
in
push
add
cmp
pusha
in
push
push
add
jle
and
add
cmp
fadds
out
call
jo
push
or
movsl
or
or
pusha
call
int
mov
arpl
mov
push
add
xor
icebp
add
fcos
adc
fucomi
add
je
add
pop
jns
add
add
in
cmp
pop
and
popl
xor
push
adc
test
xadd
add
jge
jne
jmp
ret
dec
cltd
add
test
in
add
adc
add
lea
call
sub
xchg
inc
dec
add
ret
fsubr
xor
mov
inc
mov
add
inc
push
xor
or
push
mov
or
pmulhw
push
add
push
push
xor
std
add
cmc
sarl
inc
sbb
xor
or
mov
and
incb
push
cwtl
xor
push
aaa
add
loop
adc
jl
sbb
pop
add
push
shrl
in
sbb
sub
popa
mov
cmp
lods
dec
cwtl
xor
testb
or
or
pop
mov
cmpsl
dec
adc
mov
lret
mov
repz
jbe
or
addb
mov
mov
hlt
outsb
add
lea
pop
data16
push
cmc
clc
cmp
pushf
sahf
or
pop
add
jmp
adc
push
imul
jns
aaa
push
or
ret
cs
stos
jle
test
mov
push
adc
cld
or
cmp
ja
nop
dec
gs
add
sbb
aam
add
sub
cmp
jo
call
add
add
gs
fwait
xchg
out
pop
push
imul
adc
arpl
inc
repz
enter
inc
lock
mov
mov
and
mov
mov
add
test
xor
sbb
inc
add
mov
cmp
es
add
and
or
sarl
add
mov
xchg
push
jmp
rol
cmp
push
mov
loopne
inc
mov
and
pop
pop
ret
fimuls
enter
mov
push
repnz
adc
or
push
or
mov
xchg
add
cmpsb
daa
pop
leave
in
gs
add
mov
mov
int3
sub
sbb
clc
add
inc
gs
jnp
cmpb
fs
add
jecxz
and
sbbb
fdivp
imul
jns
and
add
incl
mov
add
popa
jo
out
jp
push
add
push
lahf
sbb
mov
ret
jb,pn
jae
arpl
push
pushf
aaa
outsl
jne
lock
add
push
and
sbbb
frstor
aad
add
popf
jne
inc
add
bound
stos
call
add
cmp
imul
cmp
cmp
sbb
xor
dec
roll
dec
fsts
jmp
stc
mov
mov
xchg
stc
repz
xor
jo
jb
je
jbe
add
jp
arpl
xchg
cmpsl
mov
add
rcl
jecxz
repz
add
xor
cmp
inc
in
pop
aam
add
pop
cmp
or
pop
es
cmp
dec
fbld
inc
ljmp
mov
aaa
xchg
sub
xchg
fimull
add
pop
inc
and
xor
and
stos
loope
rolb
mov
in
xchg
in
jmp
movb
lret
xchg
arpl
mov
aaa
std
popa
cmp
shlb
bound
repz
pop
xor
arpl
adc
mov
mov
mov
jno
sti
add
fildl
test
movsl
push
bound
mov
or
adc
pop
idiv
lret
jnp
inc
cmp
jb
add
add
adc
ret
adc
push
bound
or
mov
dec
and
jl
and
inc
mov
scas
imul
push
call
push
push
jmp
ss
mov
mov
cli
and
sbb
sub
or
adc
xorb
jno
cmp
add
add
rclb
dec
push
xchg
or
add
sub
push
sbb
push
mov
imul
mov
popf
pop
daa
mov
je
cld
push
jg
bound
ret
push
mov
fdivl
sub
sbb
fadds
add
or
test
test
rorl
les
mov
sarb
mov
cmp
je
test
mov
jmp
jmp
mov
adc
repz
ja
in
adc
cwtl
test
and
ss
movsb
outsl
hlt
fs
sub
pop
enter
cmp
sbb
sub
push
xchg
sbb
adc
and
cmp
or
mov
jnp
adc
push
je
call
sbb
pop
lock
ret
and
dec
xor
push
mov
dec
cmp
cmp
pusha
pop
test
je
mov
mov
adc
es
fldl2t
push
xchg
adc
add
adc
sub
mov
pop
add
pop
push
in
daa
shll
stos
xor
jae
or
mov
adc
adc
mulb
leave
adc
cmpsl
in
xchg
shl
inc
add
les
adc
xor
mov
sub
pop
subl
call
out
xor
jo
push
je
cli
inc
nop
add
push
add
dec
push
jmp
movsb
xor
mov
sbbl
fwait
adc
jmp
lods
and
stc
xchg
in
cmp
cmpsl
cmpb
popl
inc
add
push
pop
adc
push
out
xchg
mov
repz
adc
dec
std
adc
jl
movsb
adc
add
movl
in
dec
loope
out
sub
sbb
cwtl
enter
inc
push
or
aad
mov
jne
mov
and
push
push
mov
push
add
sub
jp
call
sbb
mov
clc
scas
inc
mov
lds
xchg
data16
dec
push
xor
in
sbb
jl
sbb
add
push
roll
rcrb
shll
ss
stos
adc
cwtl
xor
inc
dec
and
and
adc
mov
pushf
dec
inc
dec
lret
adcb
inc
dec
dec
jbe
and
mov
pop
dec
xor
sub
imul
data16
push
mov
cmp
sahf
or
push
sbb
and
sub
imul
das
stos
xor
xor
fs
inc
popf
dec
dec
loop
rol
fnstenv
xchg
adc
mov
pop
or
adc
inc
aaa
sub
jnp
ss
inc
imul
dec
sub
cli
fbld
fwait
xchg
out
push
imul
adc
out
or
cmp
enter
inc
cmc
pop
adc
push
and
insw
daa
mov
test
adc
push
inc
fstpl
and
cmp
mov
mov
lds
test
lcall
add
or
rclb
cmp
add
sub
push
nop
bound
add
pop
adc
push
dec
adc
adc
test
mov
or
mov
adc
daa
inc
test
shlb
xchg
cmpsl
sti
sbb
fs
jno
shll
sti
out
ficoms
and
xlat
mov
cmp
sti
ss
fs
lods
cmp
jno
fs
xor
xchg
iret
sbb
add
andb
or
add
or
hlt
scas
out
xor
outsl
jne
adc
and
fistps
ljmp
adc
frstor
scas
inc
stos
js
push
jne
inc
sub
dec
pop
push
or
adc
setne
add
sbb
sub
add
pop
scas
testl
cmp
pop
into
add
push
fs
push
imul
cld
xor
add
sub
loopne
mov
or
sbb
adc
adc
mov
mov
nop
sub
xor
xor
int3
test
pusha
add
xor
enter
clc
scas
add
dec
or
xchg
call
and
mov
inc
inc
dec
push
xor
xchg
or
lea
je
jae
fnsave
js
sbb
mov
cmp
loop
push
imul
gs
inc
jo
ljmp
sub
repz
js
test
add
pusha
test
adc
push
sub
mov
mov
iret
sbb
cld
rep
pop
pop
push
call
xchg
push
jae
add
out
stos
pop
push
outsl
adc
pop
adc
ret
mov
mov
adc
cmpl
mov
cmp
sub
ds
xor
or
leave
mov
xor
xor
sbb
cmp
xchg
movsl
les
jb
cltd
cmp
push
je
push
hlt
pop
roll
rcrl
and
mov
dec
stc
fs
mov
and
push
pop
push
or
cmp
unpcklps
jne
adc
mov
jge
out
xor
pop
mov
shl
icebp
adc
push
dec
jae
lret
sub
fucomi
into
mov
push
adc
add
xchg
mov
pop
or
xor
pop
mov
add
leave
mov
push
popa
lock
cmp
add
mov
popa
dec
push
adc
inc
pop
clc
dec
add
movsb
sbb
cltd
cld
jae
lar
enter
or
popl
enter
or
dec
gs
or
js
jne
imul
jno
mov
sbb
add
or
sub
xchg
and
add
push
enter
neg
mov
sbb
add
add
nop
add
and
movsl
jbe
test
mov
mov
add
jge
pop
and
enter
outsl
nop
mov
or
or
leave
or
dec
push
add
or
ss
add
loop
add
neg
mov
and
mov
jge
nop
or
mov
inc
or
scas
jne
cwtl
das
outsb
mov
and
sbb
xchg
pop
cwtl
lret
jno
or
inc
mov
nop
ljmp
les
imul
imul
call
je
dec
add
fs
push
adc
xchg
sete
and
mov
ret
mov
mov
and
mov
popa
and
outsl
scas
loope
sbb
push
adc
add
cmp
in
or
enter
and
push
outsl
add
and
or
dec
add
into
or
jl
cmp
xchg
adc
adc
std
xchg
shll
push
push
and
cmp
je
test
sar
cmpb
pop
lret
mov
cmp
sar
movsl
cltd
pop
push
lea
call
xor
jns
nop
cmp
jne
daa
sub
cld
add
stc
xor
sub
psubb
jne
xor
scas
or
push
xor
and
outsb
xor
dec
sti
stc
add
adc
inc
xchg
adc
jne
jb
and
adc
test
mov
fildl
mov
dec
fdivs
add
push
adc
fs
call
pop
and
inc
xchg
push
cmp
adc
call
mov
sub
pop
aad
cmp
aad
addb
sub
add
xlat
xchg
sbb
mov
stos
dec
jb
and
dec
push
inc
in
sub
jb
xor
sbb
add
sub
push
nop
sahf
movsl
mov
sbb
inc
mov
add
cltd
sub
or
add
adc
xchg
sub
in
cmp
jge
pop
add
mov
or
inc
mov
fdivrs
dec
mov
push
sub
adc
aam
ret
inc
push
xor
jb
std
adc
xor
add
or
xchg
dec
ret
dec
sbb
daa
push
mov
movsl
imull
in
enter
and
jno
and
andb
rorl
add
pop
es
nop
ljmp
push
or
sar
push
xor
pop
mov
push
pop
cmp
sub
in
mov
cltd
addr16
add
cltd
and
pop
int3
lds
xchg
or
xor
ret
fwait
std
mov
stc
push
xchg
lsl
out
inc
sub
andb
fcoms
push
dec
shll
xor
jmpw
mov
movsl
sbb
or
ficoml
sahf
rolb
adc
add
push
pop
xlat
adc
sahf
add
jno
mov
idivb
adcb
fimull
sbb
fsubl
and
cld
setge
les
cmp
adc
out
daa
and
sahf
sbb
cltd
push
rcll
push
clc
fdivs
test
push
pop
daa
or
out
cmp
cmp
inc
adc
add
push
push
ja
lea
je
pop
cmp
rolb
or
dec
pop
je
push
aas
push
nop
sub
xor
inc
lods
cmp
mov
and
hlt
aam
sbb
mov
sub
cmp
cmp
cmpl
ret
adc
cmpl
inc
bound
je
leave
fs
imul
cmp
sub
lods
cwtl
fs
mov
lods
or
lea
jbe
push
mov
xacquire
jbe
inc
jmp
inc
or
mov
into
adc
xor
add
inc
loopne
mov
mov
test
test
inc
push
cmovs
cmc
xchg
and
fnstsw
xor
cmpsb
test
add
push
sub
aas
sbb
xchg
xor
pop
or
das
xor
dec
cmp
fcoml
adc
into
and
or
cmp
pop
push
popa
adc
cmc
stos
or
shlb
ficompl
in
push
and
mov
push
call
cmp
mov
mov
lds
pop
jge
mov
add
sti
jle
push
xor
ret
and
sar
cmpsb
add
adcb
std
imul
jg
push
cmp
std
movsb
sbb
push
mov
sbb
mov
popa
sub
ret
xor
pop
add
in
stos
push
sbb
test
stc
in
inc
jg
jmp
cmp
lret
add
std
jg
mov
rolb
test
jg
movl
xchg
insl
add
ss
sbb
insb
ficoms
aas
push
repnz
scas
jg
xor
add
cmpsb
jg
or
jnp
mov
add
stos
clc
ljmp
mov
lcall
repnz
jg
mov
call
in
sub
or
add
pop
pop
pop
push
push
pop
mov
dec
shr
bnd
subl
insb
loope
jae
push
mov
aam
jb
ljmp
pop
aas
push
and
mov
adc
or
bound
adc
jle
or
add
adc
pop
mov
ljmp
or
and
mov
jg
call
and
adc
jecxz
xchg
lods
repz
sbb
cmpl
jne
mov
jp
fs
shufps
daa
pushf
or
add
or
lock
inc
imul
repz
mov
or
aas
or
sbb
pop
lods
mov
and
pop
sarb
std
jmp
cs
sbbl
mov
es
fistpl
or
sub
stc
add
push
mov
inc
mov
mov
adc
dec
je
imul
add
jg
or
repz
cmp
mov
mov
adc
sub
sbb
lea
lods
adc
dec
push
sbb
and
inc
inc
or
sub
push
loope
or
adc
push
mov
inc
repnz
scas
out
lea
pop
cwtl
stc
mov
and
xchg
arpl
loop
lret
add
jns
dec
sarb
push
ret
and
and
cmp
jb
je
std
push
lea
bts
inc
pop
cmp
out
inc
mov
cld
jmp
cmp
and
xchg
inc
or
nop
inc
mov
ret
adc
or
test
pop
imul
dec
jl
ret
push
inc
add
ss
and
cmp
dec
xor
or
xor
or
daa
add
or
push
and
inc
sbb
andl
or
add
enter
inc
cld
mov
or
loop
mov
lret
or
inc
pop
call
dec
sbb
testb
fsubs
hlt
repnz
movsb
sbb
test
shlb
bound
jge
test
stc
xchg
and
movsb
jne
mov
push
mov
add
sbb
movnti
test
addr16
sbb
sbb
add
jno
sbb
add
roll
outsl
sub
pop
jmp
out
cld
test
add
mov
das
sub
orb
and
jne
mov
mov
push
push
jmp
push
and
inc
push
or
adc
add
dec
and
xchg
mov
ds
push
in
mov
int
pushf
or
prefetchw
inc
add
inc
inc
dec
jne
scas
aaa
inc
movsl
jecxz
cmpsb
adc
add
or
cmp
push
addl
or
frstor
push
outsb
rol
pushf
and
xchg
pop
push
insb
sub
adc
dec
cltd
inc
add
and
push
ds
movsb
sub
inc
push
int
dec
push
jmp
adc
mov
out
add
adc
jge
scas
pop
insl
out
xchg
sbb
add
lahf
in
imul
ret
outsb
mov
push
mov
inc
movsbl
add
adc
pop
mov
into
sbb
pop
push
mov
lcall
mov
pop
jb
rorb
sub
sbb
cmp
shlb
test
mov
jns
sub
or
xchg
or
cmpsb
jmp
je
cmp
jne
add
test
sbbl
or
fisubl
mov
cmp
jbe
popa
xchg
xor
add
and
cmp
movw
inc
pop
pop
adc
inc
insb
roll
aas
or
in
jl
cwtl
mov
test
jg
push
pop
mov
pop
outsb
add
sarb
rclb
aaa
out
xor
add
nop
or
cmpl
sub
shll
sbb
and
test
inc
adc
loopne
push
add
xor
in
pop
adcb
mov
cld
ljmp
or
dec
jge
int3
mov
inc
pop
inc
lret
add
inc
jecxz
sub
sbb
add
jns
mov
mov
inc
repnz
call
loopne
xchg
adc
or
ja
jg
test
gs
gs
enter
call
push
lcall
adc
add
test
add
sbb
insb
iret
xor
dec
or
ss
lock
fcoms
cs
ljmp
insb
repz
xchg
push
and
clc
scas
mov
dec
xchg
xchg
jg
cli
lock
and
movl
push
sbb
add
adc
sub
or
gs
repnz
rclb
rorb
sub
jge
xor
les
cli
outsb
movsb
movups
inc
pop
xor
sub
mov
sbb
insl
push
lret
push
int3
push
rcll
xor
mov
add
enter
mov
add
jb
mov
and
or
mov
test
dec
adc
push
into
fwait
pop
or
and
adc
fisttpll
cld
lcall
test
cmpl
push
leave
pop
pop
dec
jmp
cmp
push
lea
pusha
shr
outsb
or
movsl
aaa
std
dec
mov
mov
sar
xchg
push
push
or
adc
call
sub
sbb
ret
push
adc
popa
cmpsb
jmp
xchg
inc
nop
repnz
ss
jns
cld
lea
test
xor
nop
es
dec
and
mov
or
add
ss
inc
and
ja
or
sub
sub
jae
jg
xchg
xor
mov
pop
gs
xchg
test
and
pop
sbb
lahf
jmp
push
push
push
jle
lcall
fidivs
and
jmp
sbbb
adc
dec
jmp
scas
add
add
roll
mov
sbb
sbb
sub
xor
adc
cli
repz
sbb
movsl
push
jb
loopne
test
or
test
adc
les
or
pusha
xchg
or
mov
add
mov
push
pop
fdiv
ret
adc
je
sub
or
sbb
jmp
mov
sub
stos
gs
bound
mov
mov
adc
sub
push
cld
xor
cmp
mov
dec
loop
gs
inc
push
cmp
push
pop
jmp
scas
inc
out
imul
mov
adcb
xchg
scas
insl
mov
or
call
dec
ret
andb
jecxz
popa
mov
ja
movl
nop
push
sbb
and
outsb
sub
or
adc
dec
xchg
xlat
jns
push
pop
prefetcht0
xor
sbb
bnd
mov
insl
push
push
add
inc
ja
outsb
adc
test
push
bound
sbb
sbb
and
bound
cld
aaa
mov
mov
dec
pop
daa
stos
sbb
push
rorb
cmp
lea
push
test
lds
jge
sbb
xchg
and
ret
or
out
mov
je
sti
sub
adc
mov
out
pop
cwtl
cmp
adc
inc
sbb
leave
dec
adc
mov
xchg
pop
sub
xchg
pop
cmp
push
add
ja
push
jb
out
add
test
and
mov
out
mov
sbb
and
push
popa
cltd
negl
and
or
stos
inc
lods
and
out
pop
dec
dec
xor
push
pop
sbb
out
add
and
sub
inc
into
ret
dec
cmp
or
xor
xchg
sub
andl
mov
xchg
test
mov
or
test
and
push
outsb
jge
adc
fiaddl
sbb
and
sbb
sub
fs
or
inc
inc
inc
adc
mov
inc
add
test
adc
adc
push
rclb
roll
and
add
fs
push
add
rorl
adc
mov
cld
mov
cmp
nop
push
sbb
cmp
arpl
adc
add
inc
add
test
mov
and
add
cmp
movsb
dec
jg
dec
mov
outsl
es
xor
sub
lea
lods
mov
adc
movups
ds
jns
es
and
push
sub
and
adc
cmp
adc
xchg
cmp
push
insl
sub
dec
push
adc
and
xor
and
cmp
adc
push
and
sbb
ljmp
xchg
ds
adc
xrelease
and
mov
jb
ret
jmp
out
cmp
int3
mov
es
in
pop
test
jecxz
mov
jecxz
movl
mov
inc
sbb
mov
mov
push
mov
movsb
jecxz
adc
cmp
inc
stos
sub
mov
jmp
aam
inc
inc
mov
call
ret
cmp
push
jecxz
cmp
test
push
cli
out
andb
add
push
push
pop
mov
cmp
inc
lods
sbbb
cwtl
xchg
scas
sub
pop
int3
lds
mov
push
add
inc
push
call
fcomps
mov
movsb
adc
int3
lret
movl
loop
loop
xchg
and
daa
daa
rol
push
sbbb
les
popa
enter
enter
add
push
or
push
gs
xchg
inc
add
out
sub
push
or
nop
push
and
sbb
inc
adc
inc
or
sbb
inc
rcrl
jbe
or
call
and
jmp
push
orb
jnp
lea
inc
mov
cmp
jae
xor
or
outsl
int3
mov
push
mov
scas
or
jecxz
push
fisttps
movsl
mov
mov
cwtl
adc
aam
push
dec
icebp
mov
pop
mov
cwtl
shr
dec
xchg
fs
mov
rcrl
enter
push
adc
push
jbe
inc
add
mov
jg
lods
outsb
xchg
pop
and
jbe
loope
imul
jecxz
aaa
pop
and
xor
testb
dec
dec
adc
pop
dec
xor
cld
pop
add
push
pushl
ljmp
bound
sbb
inc
fs
push
jae
test
lods
test
and
or
mov
or
adc
cli
sub
xor
jbe
das
jae
call
nop
mov
lock
clc
jp
cmp
jne,pt
call
lea
mov
and
inc
dec
loopne
mov
adc
cmp
mov
sbb
mov
cmc
jge
cmp
sub
or
mov
fldenv
push
or
subl
or
add
test
hlt
repnz
xchg
sbb
call
dec
inc
add
cmp
insl
cld
adc
push
ret
cmp
cwtl
hlt
rolb
cmp
adc
mov
and
adcl
aas
mov
and
fwait
outsb
and
mov
inc
sub
lods
das
add
mov
aad
inc
dec
add
or
inc
push
or
cmp
rol
add
dec
inc
adc
inc
rcll
fstl
in
or
icebp
sbb
dec
inc
xchg
mov
je
pop
cmovg
push
push
call
adc
add
cmp
push
mov
fs
dec
dec
sbb
add
ja
jmp
lea
je
mov
and
push
adc
negl
push
push
mov
mov
or
addl
sub
xor
sub
add
pop
adc
jo
pop
xor
rorb
test
sub
inc
pop
hlt
mov
jns
push
lea
jbe
into
or
in
inc
loope
jmp
enter
push
add
adc
mov
jge
cmp
sarb
nop
xor
or
dec
notb
inc
xchg
mov
jp
ret
mov
cmp
and
jno
popf
cmp
lods
jo
vpmacsdql
lock
pop
push
push
sbb
in
scas
jmp
xchg
bound
mov
aad
push
push
and
xchg
add
sub
jnp
jp
lea
xchg
insl
inc
jl
add
dec
adc
fmuls
sub
or
addr16
cmp
mov
mov
aad
shll
dec
sbb
pop
push
or
pop
adc
push
sub
lahf
adc
sbb
test
sbb
sbb
or
jb
dec
mov
shrl
jmp
push
adc
inc
add
mov
or
adc
mov
cmp
dec
clc
lds
call
xchg
mov
adc
faddl
add
jmp
pop
push
pop
sub
add
or
pop
jl
push
xor
lcall
cmp
add
dec
or
inc
lcall
push
pop
mov
push
scas
and
pop
cli
jns
imull
jmp
mov
fmull
clc
adc
or
add
push
call
stos
and
mov
mov
and
adc
stc
jle
or
pop
or
jb
int
xchg
sub
data16
jae
adc
add
test
das
mov
jge
out
dec
sub
sahf
es
mov
or
jae
roll
call
adc
sbb
or
in
cmp
inc
shr
subb
inc
inc
loop
mov
cmpsb
out
int3
mov
dec
dec
cmp
or
iret
imul
enter
and
js
in
sub
inc
add
call
dec
dec
in
add
inc
add
je
push
out
adc
sub
std
test
in
jne
dec
push
pop
out
dec
or
and
adc
xor
inc
dec
or
andb
lahf
mov
ret
sub
movsb
mov
sub
fmul
mov
je
call
or
cmpl
pop
or
and
arpl
mov
jno
or
fidivrl
sbb
call
repz
and
xor
mov
add
push
xor
sbb
ss
mov
and
pop
pop
adc
push
repz
aaa
nop
adc
out
adc
or
add
inc
pop
in
and
add
cmp
mov
dec
adc
add
sub
adc
push
inc
inc
fadds
push
and
adc
sbb
in
xchg
push
fsts
test
xor
ja
push
cmc
cmp
xchg
push
call
sub
mov
add
and
loop
in
test
inc
testl
insb
jno
adc
loopne
jecxz
sub
call
in
jge
and
stc
scas
outsl
add
fstps
imul
inc
repnz
test
loopne
inc
mov
daa
icebp
push
mov
int3
loopne
out
aas
mov
mov
push
int3
ja
loop
fcoms
stos
xchg
jmp
and
adc
pusha
call
adc
inc
add
pop
cmp
xlat
test
xlat
sbb
nop
movb
mov
or
adc
dec
sbb
mov
js
call
out
popa
jmp
dec
pop
fidivs
jmp
dec
xchg
push
dec
into
adc
inc
mov
je
lods
xor
inc
in
and
dec
adc
rol
sub
movsb
decb
icebp
and
aas
cmp
inc
in
cwtl
dec
xlat
mov
and
jnp
lret
or
sbb
imul
fsubl
fwait
push
or
and
push
scas
adc
push
nop
aas
outsl
imul
fs
and
and
jle
mov
and
je
test
xlat
out
adc
andl
jge
cmp
mov
dec
or
adc
ret
test
and
jb
int3
jnp
pushf
sbb
mov
and
lret
inc
loop
push
adc
mov
cmp
sub
mov
scas
or
mov
test
test
mov
and
xor
push
mov
dec
dec
or
jae
push
xchg
pop
inc
push
adc
sub
jo
jbe
xor
jp
pop
adc
mov
rcrb
inc
fistpll
jmp
test
add
jmp
and
or
out
xchg
scas
mov
in
and
or
xor
aad
cld
cmp
adc
lret
pop
lds
adc
pop
lds
inc
sbb
cmp
mov
sub
jecxz
jnp
and
add
fidivs
sbb
clc
sbb
repnz
adc
dec
das
sbb
mov
ljmp
shr
and
lock
push
hlt
gs
mov
out
lret
mov
push
xchg
mov
push
or
mov
inc
xchg
mov
cmp
ja
mov
and
push
pushf
sub
mov
popl
int
or
jmp
sbb
mov
jmp
lahf
movsl
imul
mov
cmp
xor
test
adcl
fildl
pop
adc
mov
adc
and
pop
inc
iret
data16
sub
test
aam
xor
xor
jmp
clc
or
jo
movsl
mov
jge
fwait
in
ljmp
and
cmpsl
jno
xlat
iret
push
nop
xchg
add
add
or
or
sbb
or
push
leave
lret
adc
bound
inc
shlb
in
test
dec
inc
inc
dec
adcb
mov
stos
inc
shll
cwtl
xor
jmp
push
pop
lahf
mov
cs
pushf
gs
pop
dec
fistl
or
inc
mov
lcall
push
std
add
add
das
dec
and
cmc
aad
hlt
jmp
fsubrl
push
sub
iret
loopne
rcrl
inc
fisubl
mov
inc
or
push
pop
and
fabs
test
es
pop
test
push
pop
jecxz
pop
and
inc
and
pop
nop
test
jo
aam
imull
movsl
sub
sarb
inc
cmp
jbe
jne
xchg
and
pop
inc
xor
pop
xor
pop
clc
imul
sub
cmp
and
bound
imul
sub
repnz
dec
inc
push
mov
fs
sbb
pop
sub
bound
push
scas
sbb
xchg
xchg
jnp
add
xchg
push
or
dec
sahf
rcrb
add
add
dec
mov
jle
xorb
fnstsw
push
lret
clc
popf
mov
cmp
add
xor
lret
fcmovu
sbb
jae
clc
xor
cld
xor
in
adc
or
sbb
mov
mov
fwait
inc
shlb
outsl
daa
xor
push
lods
inc
pop
dec
sbb
test
aas
xor
sub
sub
test
sub
push
and
and
andb
xor
out
or
mov
dec
add
insl
lds
and
inc
sahf
or
test
or
loop
dec
addb
or
inc
nop
adc
dec
xor
inc
and
ljmp
sub
add
and
out
and
pop
push
sub
jno
pushf
adc
mov
dec
or
mov
dec
ror
xchg
js
push
mov
adcl
mov
out
mov
add
or
and
sti
pop
push
outsb
and
adc
or
xor
fisttpll
inc
cmp
inc
jbe
pop
adc
and
sbb
loopne
lret
pop
std
data16
inc
shr
insl
pop
bound
out
adc
push
sub
cmp
les
nop
mov
jle
push
add
or
or
ret
or
and
add
add
mov
mov
mov
push
jecxz
xor
adc
mov
dec
inc
pop
xor
in
mov
arpl
ja
pop
dec
bound
inc
xlat
dec
jne
mov
dec
inc
and
and
and
nop
mov
jle
xchg
push
out
cld
mov
hlt
mov
dec
inc
add
mov
nop
fstpl
add
push
adc
adc
dec
pusha
test
mov
sub
insl
sbb
out
push
call
or
aaa
mov
cmp
jae
and
rolb
and
xchg
sbb
dec
cmpb
mov
lods
pandn
leave
inc
mov
xlat
and
ds
pop
jp
out
popf
inc
call
cltd
idivl
and
cwtl
and
jns
fcompl
sbb
push
and
jno
jae
loopne
and
xchg
cmp
pop
in
sub
adc
das
push
xchg
push
and
jo
and
push
das
nop
or
jmp
hlt
dec
cmp
mov
cmp
mov
add
jne
aad
adcl
and
jb
popa
inc
lods
mov
les
adc
fisttpl
push
call
mov
cmp
or
out
fldl
pop
popf
xorb
faddp
xchg
mov
xor
std
xor
adc
sbb
and
and
xchg
inc
je
xchg
jl
cmp
mov
data16
push
and
xchg
push
or
jmp
push
add
pop
mov
dec
and
add
xor
xchg
mov
fs
add
mov
repz
daa
mov
cmp
xchg
or
je
leave
xchg
jb
jle
test
adcb
enter
sti
lahf
cltd
scas
sbb
mov
jmp
mov
dec
jle
push
test
and
adc
mov
inc
inc
cmp
dec
pop
or
pop
in
je
mov
xlat
loopne
inc
sahf
mov
cmp
inc
and
fisttps
add
cmp
sbb
pop
out
mov
pusha
nop
push
pop
imul
push
cmp
and
xchg
nop
adc
nop
inc
mov
sahf
cltd
pop
addr16
pop
jge
jne
in
xor
push
add
jo
test
subb
cmp
int
and
sbb
push
call
fidivl
jne,pn
mov
out
pop
adc
pop
lods
jno
icebp
and
fs
sub
idivl
pushf
test
pop
shrb
imul
imul
nop
and
add
rcll
push
ret
cld
pop
cmp
stos
adc
mov
test
mov
je
xchg
lods
cld
or
not
and
test
les
iret
dec
inc
dec
pop
xchg
lock
ja
mov
jne
jbe
and
sub
into
jp
dec
dec
cwtl
cmp
insl
adc
cmp
dec
or
push
adc
cli
cld
sub
sbb
daa
mov
push
mov
jle
mov
pop
cmpsl
std
adc
sub
orb
leave
repz
and
dec
xor
push
add
add
mov
push
out
pusha
and
dec
ret
mov
dec
pushf
inc
or
jo
mov
adc
fs
pop
lea
das
add
add
dec
rorl
int
pop
and
aaa
xchg
or
add
daa
neg
outsl
mov
shl
cwtl
cmpl
mov
hlt
es
push
aad
dec
seto
push
lods
int
push
andb
call
adc
inc
mov
imul
cmp
cmp
inc
aas
repnz
and
shrl
fs
mov
in
dec
sub
jg
add
fcoml
push
lods
inc
shlb
inc
hlt
mov
mov
push
leave
mov
xchg
or
pop
or
aam
leave
orb
adc
mov
xchg
mov
mov
inc
or
test
and
or
shll
test
clc
inc
cmp
inc
pushf
adc
or
pop
lods
inc
pop
and
lods
dec
or
push
jle
xchg
jmp
xchg
lret
test
pop
cmp
test
and
lds
pushf
xor
aas
dec
mov
or
nop
xchg
ds
dec
cwtl
or
bound
bound
sub
jae
inc
addr16
lfs
outsl
jge
push
xchg
mov
filds
aas
testb
mov
imul
lret
or
in
and
dec
addl
pop
jae
in
mov
enter
xchg
nop
sbb
inc
dec
bound
or
or
pop
dec
insb
xor
cld
std
sbb
popw
js
test
test
pop
ret
jo
jmp
bound
push
out
fsubr
adc
imul
xor
loop
and
mov
lahf
sbb
adc
dec
stc
pop
cmp
mov
adc
push
scas
and
xchg
rorb
fstpl
jnp
and
ffree
jmp
sbb
outsb
adc
cs
clc
or
sahf
call
xor
jmp
cs
sub
aaa
adc
adc
jmp
jns
xchg
or
push
add
or
bnd
dec
movsb
add
mov
in
cld
lds
dec
mov
sbb
jb
movsl
and
mov
push
mov
cmp
into
daa
les
test
sub
cmp
pop
sbb
xor
or
mov
push
nop
stc
mov
inc
or
mov
cs
push
imul
fsub
add
scas
and
mull
dec
in
cld
sub
aaa
sub
je
movsb
cmp
movsb
test
mov
sub
das
dec
fs
mov
pop
add
movsl
stc
xor
fsts
lods
xchg
fs
dec
dec
xchg
in
push
push
mov
pop
inc
mov
or
add
andl
arpl
sarl
cmp
sbb
pop
int
lods
aaa
push
ret
fldenv
imul
movsb
movsb
jmp
pusha
repnz
popa
fs
pop
pop
filds
adc
je
pop
push
in
insl
xor
cmp
jae
cmp
inc
test
add
cmpsb
add
rolb
inc
pop
jae
xchg
add
mov
push
mov
adc
adc
in
push
sbb
orl
leave
cmp
mov
sahf
sub
mov
cmpb
and
and
xchg
nop
test
or
popl
or
sub
andw
ljmp
dec
adc
cmp
or
xorb
repz
push
adc
jne
push
fmuls
gs
mov
dec
xchg
mov
adc
test
add
lret
jg
add
sbb
add
pushf
imul
push
int3
or
test
es
push
inc
mov
es
jg
fld
mov
add
and
movsbl
push
mov
and
xchg
xchg
jne
mov
pusha
or
mov
jnp
push
mov
adc
add
ss
jl
xchg
or
mov
inc
add
call
jmp
and
xor
insb
sub
nop
or
mov
adc
adc
rcrl
dec
add
adc
imul
xor
jae
dec
or
sub
push
dec
mov
mov
iret
or
mov
mov
add
mov
insb
enter
xchg
scas
xor
call
in
mov
es
xor
roll
lock
inc
or
add
sbb
dec
xchg
shr
dec
test
cli
in
mov
mov
test
push
mov
repnz
add
jb
adc
pop
mov
jge
daa
adc
cmp
jmp
cmp
mov
dec
add
adc
inc
sub
xchg
cmpb
jne
and
outsb
ret
outsl
sbb
add
and
mov
ret
stc
lret
inc
js
out
roll
ss
or
mov
and
mov
or
mov
and
shl
or
dec
and
lods
fldenv
adc
js
dec
add
pop
lahf
inc
adc
cmp
out
lret
mov
call
or
push
aas
adc
jnp
xor
cld
jae
dec
adc
xchg
xchg
cmp
and
mov
xchg
jge
imul
jp
testb
pop
push
dec
xor
add
shrb
jle
dec
xchg
dec
push
std
popf
adc
or
jae
or
cli
pop
and
or
xchg
mov
jecxz
jno
mov
adc
loop
lea
add
jb
dec
pusha
out
jae
sbb
push
aam
xchg
imul
mov
mov
adc
mov
xchg
sbb
call
dec
in
push
adc
movsb
rolb
ss
mov
push
inc
enter
add
int3
inc
popf
cmc
pop
inc
or
fists
push
leave
xor
xchg
inc
push
cmp
jb
inc
dec
lock
cwtl
bound
jl
es
sub
push
ljmp
rolb
jmp
or
cwtl
mov
add
int3
or
testb
xor
cmp
nop
rorb
insl
push
loopne
mov
pushl
and
jbe
sbb
loop
insb
jp
inc
push
shr
or
sub
clc
fistpl
popf
idivb
sbbb
push
add
aaa
or
ret
lods
jg
js
xor
orl
fcompl
rorb
das
nop
or
add
dec
xchg
pusha
xor
insl
test
cmp
sbb
push
shlb
call
sbb
jb
inc
ret
cld
ret
push
mov
cs
xor
dec
ss
jmp
add
xor
dec
xor
pop
adc
imul
arpl
inc
sub
jp
mov
pop
rcll
xchg
push
clc
mov
call
pop
dec
cmpsl
inc
and
inc
out
arpl
pop
mov
or
je
loop
loopne
or
xor
sbb
push
aam
and
repz
xchg
pushf
jno
roll
fisubs
scas
add
loopne
ja
pop
push
mov
ret
sub
aas
cs
int3
popf
xchg
add
negb
nop
dec
pop
scas
jns
dec
xor
cld
andb
inc
cli
enter
ja
fs
xchg
out
rcll
repnz
jge
xchg
or
cmp
add
inc
jmp
lds
lock
mov
cmp
test
pop
mov
inc
rorl
pop
and
sub
ljmp
sbb
ss
decl
mov
inc
sbb
mov
in
xchg
xchg
or
or
sbb
test
daa
imul
xchg
add
fldl
push
in
lods
js
and
shlb
pop
xchg
decl
dec
rcll
cwtl
add
push
mov
inc
push
xor
sub
adc
fs
shr
addb
add
lea
aam
mov
or
not
lock
sub
sub
hlt
rorl
stos
xlat
pop
aas
sar
mov
push
cwtl
pause
inc
enter
pop
jb
mov
sub
pop
sub
jne
sub
jns
test
sub
sbb
jo
xchg
push
mov
mov
push
xchg
dec
xchg
push
in
fstl
jo
jae
jmp
sbb
xchg
jle
or
or
in
daa
jne
popa
lds
test
loop
inc
jl
and
mov
mov
inc
std
cmpsl
rcrb
in
adc
in
cmpsl
insb
pushf
lahf
cmp
dec
call
adc
mov
ret
cmpb
mov
rcr
xor
push
cmpb
xchg
inc
cmc
sbb
movsb
rcll
rolb
push
jno
mov
add
adc
fstl
mov
js
pop
dec
inc
insl
adc
jmp
sti
lods
or
dec
mov
dec
jle
lds
inc
mov
cmp
jle
push
lea
and
pmaxub
xchg
popa
sahf
ja
int3
aaa
testb
or
or
jecxz
lods
rolb
pop
mov
sbb
es
pop
es
cmp
cmp
sub
mov
sbb
jg
adc
or
pushf
pop
negb
add
push
or
lea
neg
mov
or
in
mov
mov
lea
add
inc
sbb
xor
ret
dec
xchg
xor
adc
mov
xor
xchg
ret
sub
push
push
push
sbbb
addr16
out
fidivrs
or
icebp
pop
sub
push
lret
leave
in
cmc
xor
push
pop
adc
pop
sub
les
and
xor
scas
ret
incw
lahf
in
push
push
mov
add
bound
ss
orb
inc
or
js
testb
movsb
push
cmp
sbb
xor
hlt
ret
mov
dec
mov
call
and
push
or
clc
push
inc
xor
rcl
and
and
je,pn
push
pop
cltd
adc
xchg
in
test
adc
push
adc
add
mov
lods
inc
and
push
movsb
scas
cmp
or
incb
test
daa
cli
ds
inc
mov
test
add
les
cmc
mov
push
push
repz
mov
das
jge
adc
or
push
pop
inc
mov
push
xor
scas
adc
int
mov
push
push
or
xor
scas
xchg
in
push
mov
jmp
push
push
movsb
and
leave
mov
push
dec
call
xor
xor
or
mov
inc
pop
daa
or
inc
lret
mov
andl
sbb
jl
xchg
push
les
cmp
adc
movb
inc
inc
movsb
and
rcl
int
in
rorb
testb
mov
pop
std
and
mov
cmp
bnd
and
les
jae
movsb
xor
add
add
xor
stc
sbb
adc
test
stos
sub
inc
sbb
push
cli
dec
das
xor
push
and
and
cmp
lea
sbb
repnz
and
sbb
lcall
dec
and
inc
and
loop
fs
mov
lea
arpl
lods
lret
sub
and
mov
sbb
loopne
push
imul
lea
push
ret
test
and
mov
and
mov
ret
mov
dec
adc
mov
shl
add
inc
je
inc
scas
lock
leave
mov
andb
mov
sub
dec
dec
or
pushf
call
mov
and
test
rcrb
cld
std
mov
push
lahf
mov
push
jp
jmp
sub
pop
movsb
jb
push
pop
mov
out
loop
pushf
xor
mov
push
or
mov
jbe
push
dec
pop
jo
push
mov
int
ret
enter
xchg
and
cmp
ret
adc
adc
push
aaa
add
out
add
dec
test
jge
loope
rolb
sub
lock
or
sbb
adc
or
xor
push
inc
test
scas
mov
and
adc
inc
xchg
inc
neg
pop
test
test
add
adc
mov
push
lea
mov
std
adc
or
mov
imul
add
addb
sbb
jae
loopne
mov
shr
or
rcl
pop
jg
xor
mov
add
jb
outsb
rcll
dec
push
jmp
ja
jmp
or
or
rcll
adc
loopne
mov
mov
dec
fwait
mov
bound
jb
or
adc
cld
inc
pop
inc
addr16
test
imul
pop
add
dec
fiaddl
adc
aas
and
sub
cmp
and
add
out
push
inc
loop
sbb
push
or
pop
jns
fimull
idiv
push
sbb
jle
inc
inc
adc
mov
push
pop
add
dec
cld
andb
jge
test
jbe
or
fdivr
lock
push
mov
ja
jmp
add
sahf
ret
mov
inc
dec
fs
out
mov
jmp
ret
sarb
mov
lods
jns
jmp
imull
add
mov
lret
sub
mov
jae
mov
fisttpl
inc
inc
adc
out
jmp
add
or
pop
mov
test
adc
ljmp
xor
inc
cld
push
lds
test
xchg
mov
cwtl
adc
xor
movl
push
adc
or
push
jmp
and
cmpl
jg
cmc
dec
movsl
and
push
lahf
lods
cwtl
je
push
lcall
fsubr
nop
push
je
sbb
sbb
aam
stc
out
push
cltd
sahf
mov
push
jmp
imul
or
inc
add
scas
xor
addr16
ss
je
or
xor
sbb
sub
popa
dec
pop
fdivrl
push
sub
in
xchg
sbb
stc
cvtdq2ps
icebp
fadds
dec
push
call
push
inc
push
add
or
jecxz
push
and
xchg
lret
test
incb
sub
adc
cwtl
adc
enter
mov
push
shlb
cmpb
jne
decl
jmp
lcall
sub
call
mov
push
clc
cmp
jle
lcall
ds
and
out
and
xor
dec
xor
jg
bound
xchg
add
pop
dec
jge
out
adc
addr16
dec
sub
adc
test
ja
push
and
pop
in
dec
cltd
call
push
mov
aaa
xchg
xor
xor
jnp
and
addr16
xchg
dec
sub
sbb
pop
dec
addr16
mov
test
sub
and
and
pop
sbb
xchg
nop
xor
arpl
cmp
jmp
mov
in
sar
dec
dec
push
dec
mov
int3
mov
js
jmp
xor
test
xor
int3
dec
andb
jmp
mov
lds
sar
xlat
push
subb
sbb
inc
push
push
push
je
pop
push
xor
mov
add
icebp
or
iret
and
adc
jg
movsl
jecxz
out
adcb
xchg
mov
and
nop
mov
cmpb
jle
icebp
movsl
push
ret
mov
fcmovb
sub
es
aaa
and
dec
or
push
cmp
mov
xchg
mov
aaa
pop
rcl
loop
out
out
push
xor
sub
jg
push
push
shl
mov
cli
xor
pop
jne
push
stos
inc
arpl
add
or
das
jns
inc
fisttpl
lds
mov
sbb
add
pop
and
jno
or
jg
pop
inc
inc
je
and
push
call
xor
adc
pushaw
ret
pop
sub
fwait
or
mov
sahf
and
or
xor
jne
cmpsb
cmp
das
mov
mov
pop
sub
divl
shl
adc
xchg
sbb
push
mov
xor
in
jne
mov
cmpsb
push
lods
jmp
es
mov
pop
or
test
daa
mov
cltd
sbb
inc
mov
cmp
cmp
add
mov
inc
mov
inc
mov
xor
and
adc
and
outsl
jp
loopne
inc
lret
dec
lcall
fcmovnbe
mov
ror
fldl
sub
inc
dec
and
jo
leave
dec
or
aaa
dec
inc
xchg
gs
xor
dec
arpl
adc
aam
mov
jmp
push
xchg
sub
adc
push
stos
das
mov
lea
dec
test
inc
mov
imul
or
inc
xchg
push
outsb
xchg
out
pop
sar
sub
add
imulb
xor
sbb
sub
mov
pop
movsb
jnp
xchg
inc
out
cwtl
movl
loopne
or
pop
js
mov
hlt
jno
or
inc
gs
inc
hlt
pop
iret
or
or
call
jmp
js
mov
cmp
mov
les
cwtl
pop
js
push
sbb
push
add
xor
cmp
outsb
push
xchg
cwtl
repz
and
push
sub
sub
and
test
decb
sahf
scas
push
sbb
cmp
ds
in
or
enter
jp
pop
fisttps
add
ret
push
push
adc
mov
ret
jmp
ds
xor
cmp
push
clc
inc
sub
shr
dec
and
dec
jle
push
or
sub
movsb
es
or
adc
outsb
hlt
lahf
stos
dec
in
sbb
or
xor
adc
test
inc
shl
jae
movsl
testb
adc
add
xchg
add
adc
aam
push
mov
push
push
sbb
ja
push
fsubs
inc
add
sti
aaa
dec
test
adc
xchg
pusha
and
add
inc
mov
iret
jge
add
sub
pop
test
cmp
adc
insb
ja
push
push
dec
hlt
mov
push
dec
nop
orl
sub
dec
push
popf
js
daa
decl
ret
dec
add
push
mov
xchg
mov
mov
add
clc
cmp
jae
add
jne
cmp
add
movsb
mov
xor
add
jmp
pop
cwtl
inc
lock
mov
enter
in
js
sahf
das
mov
sub
jae
sub
fistpll
xor
xor
or
test
sub
out
mov
and
add
lock
jmp
test
sbb
repz
push
mov
mov
je
das
mov
sbb
sbb
inc
lea
int3
inc
add
adc
pop
jb
add
push
mov
push
das
pop
nop
and
daa
add
loope
int
mov
js
cmp
sub
sbb
add
cltd
sbb
mov
xchg
rorb
sub
pop
mov
pop
push
and
mov
movsl
jnp
adc
pop
roll
jnp
negb
sbb
and
add
jp
or
cmp
ja
test
xchg
bound
dec
mov
icebp
cmp
push
fiaddl
mov
adc
lods
lock
lcall
cmpl
pop
inc
xchg
dec
adc
roll
mov
or
not
push
stos
pop
pop
leave
orb
push
bound
add
sub
dec
clc
push
mov
movsl
push
sbb
dec
pop
mov
or
je
adc
xor
adcl
pop
test
cmp
pop
or
js
adc
pop
sbb
mov
std
push
adc
bound
pop
or
fstl
xchg
inc
cmp
sarb
or
push
sub
aam
orb
adc
cs
pop
dec
shlb
pop
inc
mov
jl
or
lods
pop
mov
xchg
sub
mov
sbb
add
inc
sbb
out
jle
sarl
shll
shlb
push
adc
inc
sub
add
pop
pop
adc
cmp
push
dec
das
adc
xchg
inc
and
fsubrl
mov
ljmp
or
mov
cld
dec
imul
mov
subb
pop
push
shlb
pop
cld
mov
push
push
cmp
inc
jle
mov
int3
adc
pop
push
and
ljmp
push
inc
mov
inc
decl
andl
sub
or
test
fmull
lock
ss
pop
stc
shlb
stos
xchg
js
xor
or
xlat
push
sbb
or
test
mov
sbb
push
outsb
or
out
and
lock
movsl
mov
mov
mov
mov
xchg
dec
and
pop
or
lods
xchg
jns
rorl
xor
mov
fistl
aam
sbb
jge
mov
mov
ret
or
inc
pop
or
sub
clc
sbb
and
scas
daa
cmovae
or
mov
jl
les
xchg
jmp
xor
dec
mov
lock
shl
push
push
inc
add
adc
into
push
subl
imul
leave
push
sub
clc
mov
hlt
clc
mov
inc
jl
movsb
mov
add
orl
andl
inc
loope
test
sbb
scas
dec
arpl
or
rorl
inc
rclb
nop
jo
pop
adc
or
mov
mov
xor
aaa
pop
cli
or
inc
pop
sbb
call
js
imulb
ds
dec
outsb
xor
add
stc
push
mov
aas
cmpb
cltd
mov
jle
repnz
sub
cs
pop
push
jo
sbb
mov
test
mov
leave
sub
notl
jecxz
scas
inc
daa
aam
test
mov
adc
push
lods
mov
xor
mov
jecxz
dec
sti
and
js
movsl
fwait
sti
and
shl
je
in
loope
aam
call
mov
xor
push
xchg
inc
sahf
ficoml
movsb
decb
rcll
dec
dec
adc
and
xlat
sahf
push
and
mov
cmp
icebp
out
pop
push
ret
cmp
cmp
cmpsl
loopne
sete
clc
pusha
mov
pushf
sbb
xor
test
adc
fs
sbb
addb
pop
je
nop
cmp
or
or
mov
push
add
mov
lret
or
cli
mov
sub
insl
outsl
test
movsl
mov
insb
pop
cmp
jle
test
pop
pop
or
call
loop
xlat
xchg
or
mov
std
dec
out
xchg
pushf
and
hlt
sbb
jg
je
sub
jmp
or
or
jmp
adc
adc
sub
sbb
adc
adc
add
pop
or
add
leave
fildl
push
ljmp
cld
and
adc
sbb
push
inc
adc
in
dec
cltd
and
cs
popf
loop
mov
push
add
sbb
pop
and
dec
or
inc
test
xchg
clc
es
jl
pop
in
int
js
adc
add
and
pop
sbb
lock
mov
adc
push
push
sub
sbb
lock
in
andb
shl
pop
daa
push
hlt
jp
dec
push
mov
cld
fwait
in
cmp
mov
out
pop
add
jne
mov
mov
ret
dec
mov
adc
inc
mov
add
push
and
push
or
out
fsubl
mov
xor
push
std
popa
inc
inc
push
mov
leave
test
testl
dec
fs
nop
es
mov
add
mov
add
xorl
repz
and
and
jmp
jae
or
mov
mov
js
adc
push
inc
sub
mov
inc
mov
xchg
mov
rorb
ljmp
ja
popa
or
inc
jg
inc
xchg
sbb
add
add
sbb
inc
and
sub
dec
cmp
push
pop
mov
jo
jnp
dec
dec
jg
add
xor
and
mov
mov
and
inc
lods
sbb
dec
adc
xchg
sub
hlt
adc
and
adc
popa
ficomps
mov
into
lret
fnstenv
fs
push
add
or
inc
or
sbb
and
sbb
sub
jb,pn
cmp
sbb
mov
and
inc
enter
jb
cmp
pop
mov
and
enterw
jb
cmp
jp
inc
jle
xor
ret
addl
and
xchg
xchg
xchg
loop
sbb
sahf
mov
stos
les
mov
mov
movswl
push
adc
cmp
stos
shrl
push
inc
ret
and
sbb
sub
je
lret
xor
ret
es
push
or
add
xchg
jl
clc
mov
rorb
adc
push
or
or
pop
push
add
add
xchg
adc
xchg
imul
mov
dec
das
shll
sub
mov
adc
sub
adc
lea
or
mov
inc
sbb
sbb
and
sub
sub
clc
adc
add
and
mov
adc
xchg
pop
inc
or
and
inc
adc
adc
cmpl
jg
imul
ljmp
xor
push
hlt
sbb
and
sbb
adc
mov
mov
mov
cmp
or
fldl
ret
mov
pop
lock
dec
adc
dec
repnz
sub
and
adc
testb
clc
aam
xchg
cltd
sub
push
das
push
mov
cmp
in
inc
push
cltd
or
sbb
jmp
pop
rorb
lock
sbb
ret
addl
and
cmpb
jo
pop
scas
push
test
movzwl
bnd
and
cmp
xchg
xor
sbb
and
push
and
adc
popf
js
xchg
scas
inc
inc
xchg
add
jno
push
pop
adc
jns
ficoms
add
sbb
push
and
dec
adc
push
push
cmpl
or
scas
cmp
jp
cmpl
sbb
cmp
popf
mov
mov
or
ljmp
push
popa
jns
push
cwtl
aam
push
call
shll
mov
popf
adc
pop
or
cmpb
add
rcrb
cmc
or
dec
andl
ljmp
rorl
mov
test
in
lret
push
daa
inc
add
stos
test
nop
lret
mov
negb
xchg
pop
dec
dec
or
sub
or
push
pop
movsb
or
jmp
sub
lods
mov
ds
and
add
push
mov
test
adc
mov
jnp
bound
jmp
les
orb
insb
mov
roll
int3
jmp
or
sbb
xor
mov
and
or
or
xor
adc
sbb
mov
sub
push
mov
jl
inc
or
pop
push
cmp
mov
clc
sbb
push
mov
or
sub
add
frstor
sub
pop
adc
and
or
and
movzwl
addb
mov
jmp
sti
sbb
cmp
mov
push
push
pop
cld
mov
in
or
jmp
dec
or
cmp
aam
lea
cmp
jmp
fwait
aas
inc
add
stos
or
jo
mov
sbb
sub
movsl
loope
or
add
mov
xchg
cwtl
adc
aad
lcall
dec
roll
push
call
dec
and
lahf
push
push
dec
cmp
inc
push
sub
push
ret
mov
lods
addl
hlt
loope
adc
or
clc
jns
rol
inc
jge
cmp
lret
hlt
xchg
ljmp
dec
and
push
jl
adc
insb
and
inc
adc
movsb
jmp
adc
push
jmp
les
and
out
aas
loope
fstpl
xchg
pop
andl
test
add
jb
rcrb
dec
dec
rcll
pop
data16
cwtl
push
ljmp
fldenv
adc
addl
ds
mov
sbb
lcall
stos
inc
inc
mov
xor
mov
jns
dec
mov
pop
sbb
pop
pop
inc
out
data16
rclb
out
popa
add
cmp
jecxz
movsb
scas
mov
mov
notb
sar
jne
jge
adc
test
mov
inc
inc
inc
inc
sub
in
pop
mov
sub
lods
mov
cltd
aaa
test
pop
in
mov
bound
call
fnop
jmp
pop
into
gs
call
push
push
or
pushf
jno
divl
aad
inc
jns
lahf
dec
in
enter
fs
or
add
ljmp
lcall
pop
and
mov
rorb
jmp
cli
pusha
pop
adc
neg
in
je
xchg
dec
addr16
fldl2t
mov
sbb
orl
jne
push
shl
xchg
shlb
std
push
jb
ja
into
xrelease
mov
ret
adc
inc
shlb
repz
jmp
js
jbe
das
sub
dec
cli
adc
pop
pop
pop
sbb
xchg
cmc
repnz
ret
xchg
xor
das
je
pop
xor
push
cmp
jl
or
outsb
add
ret
loop
pf2iw
loopne
sar
nop
fsubrl
clc
cmp
cmp
push
shr
movsb
sbb
enter
gs
fnstsw
fnclex
in
stc
in
fsubrs
cld
fstcw
xchg
or
and
not
sti
pop
cmp
inc
fmull
ret
fldcw
sub
mov
fldenv
push
fninit
sti
jmp
xor
and
cmpsb
and
inc
pop
xorb
fildll
inc
popf
jp
lds
dec
add
xor
pop
ds
fldt
rcll
dec
xchg
xchg
mov
sbb
xor
fldt
sbb
cmp
push
and
fldt
fxam
inc
fcomps
fmul
cltd
cld
xchg
loopne
call
add
mov
mov
adc
hlt
and
jne
bound
add
sbb
pop
movb
pop
inc
call
shl
mov
lea
mov
cltd
sub
sbb
call
add
inc
xchg
pop
mov
pop
pop
xor
clc
add
int
pop
dec
mov
cmp
or
rol
mov
inc
jmp
add
sbb
notb
sbb
jne
fcmove
adc
aas
or
and
inc
std
test
loopne
negl
in
push
cmpps
sub
sub
or
sub
push
lds
pop
inc
xor
nop
xchg
call
sbb
mov
inc
push
popa
add
adc
je
push
dec
leave
add
inc
call
rol
incb
int
lds
adc
xchg
jge
sbb
jg
les
push
push
jl
test
lret
sti
xlat
mov
lock
sbb
xor
jp
jne
jp
add
xchg
sti
push
mov
push
add
data16
mov
pop
in
faddl
fldl
rcll
and
out
insb
mov
cwtl
or
mov
dec
add
add
push
jno
mov
cs
es
adc
call
and
mov
lds
bts
push
popa
mov
mov
xor
adc
cmc
mov
jl
dec
cmp
dec
fwait
dec
cmp
cmp
add
movb
inc
neg
lea
cmp
or
xchg
adc
add
dec
mov
adc
add
sbb
cld
add
cmp
pop
mov
bound
dec
sbb
jle
and
xor
mov
sete
xor
add
push
push
sub
xor
lods
or
imul
sbb
inc
cmpsl
mov
imul
loope
jbe
popf
hlt
clc
cmp
jne
imulb
insl
lods
cwtl
sub
pop
push
sbb
loop
adc
and
or
in
adc
mov
sub
orb
adc
call
cmp
je
add
addr16
jmp
dec
cmp
mov
jg
xor
je
mov
cmp
stc
jle
cmp
fdiv
mov
div
adc
jle
lods
cmpsl
or
xor
dec
adc
sbb
testl
or
xor
sub
jmp
sbb
int3
lods
or
outsb
inc
imul
pushf
daa
enter
xchg
push
loop
adc
cld
clc
push
cmp
cmp
das
add
subb
jnp
leave
mov
outsb
mov
jg
xchg
outsb
mov
add
jge
imul
adc
jg
cmp
lahf
and
or
and
std
in
test
std
dec
xchg
leave
jl
lods
pop
test
jg
adc
pop
add
xor
push
ret
mov
mov
and
inc
inc
cltd
divl
inc
dec
jmp
push
das
dec
xchg
daa
testb
cmp
iret
aad
std
mull
xorb
push
call
fisttps
inc
stc
sbb
or
xchg
imul
cmp
push
or
mov
adc
dec
push
pop
loop
insb
aad
inc
fcmovnb
or
sbb
adc
testb
xchg
rorb
adc
std
dec
into
jmp
mov
push
sub
inc
js
aad
loop
out
sti
dec
mov
push
and
jmp
sub
xorl
add
leave
adc
add
sub
movb
insl
or
xchg
ja
cld
jnp
dec
clc
call
dec
and
lds
fistps
and
sahf
shlb
fs
sbb
cmpsl
and
xchg
push
cwtl
fs
push
mov
and
out
mov
ljmp
unpcklps
or
mov
adc
addl
mov
push
shll
mov
jmp
aam
out
mov
pop
xchg
push
mov
dec
pop
loope
or
dec
enter
or
sbb
test
nop
pushf
repnz
adc
enter
push
clc
xchg
adc
xchg
into
jmp
xchg
and
inc
push
fwait
mov
movsl
out
adc
mov
xchg
mov
sub
pop
xchg
in
adc
leave
repnz
inc
test
and
icebp
lcall
adc
push
and
and
add
push
xor
xchg
sub
shlb
lock
loope
enter
xchg
mov
xor
or
jmp
adc
and
xchg
xchg
incl
ficoml
aam
push
in
add
jbe
or
ljmp
or
and
out
insb
and
cmpsb
sbb
stos
sbb
inc
mov
dec
add
adc
lea
xor
or
push
imul
lret
push
lahf
jp
imul
xor
enter
xchg
mov
inc
enter
and
and
dec
outsb
inc
sbbl
dec
fldl
adc
testb
cmc
adc
sub
in
mov
cltd
add
lcall
roll
xor
push
movsb
mov
scas
inc
outsl
sub
mov
mov
icebp
nop
or
mov
xchg
adc
dec
sbb
mov
xchg
push
fcomip
jmp
or
mov
mov
sub
mull
push
js
test
movsb
sbbb
je
pop
fmul
or
mov
sub
mov
fmuls
jne
cmpl
push
or
test
scas
mov
frstor
xchg
dec
sub
test
mov
or
sub
aam
test
fmull
ljmp
push
into
mov
test
shll
sbb
or
jge
pop
add
push
mov
xchg
jmp
jne
movsb
inc
les
mov
ret
mov
jae
lock
mov
add
je
cmc
cmp
or
push
stos
dec
loop
daa
sbb
seta
enter
jmp
gs
cmp
pop
test
js
or
jl
gs
out
jo
pop
nop
pop
push
mov
dec
pop
and
addl
dec
mov
pop
inc
hlt
fadds
cmc
jl
and
jg
sbb
xlat
add
fisubl
shl
sti
and
jle
jmp
push
lods
test
mov
in
xorb
fldl
lret
adc
jmp
jge
inc
inc
push
or
int3
dec
mov
ret
fdivl
sub
pop
adc
or
faddl
and
enter
cmp
dec
jnp
test
cld
inc
mov
cld
call
fistl
test
sbb
or
sub
or
dec
fcoms
mov
fbstp
mov
sbb
stc
push
jmp
cmpsb
or
movsl
or
and
loopne
sarb
or
sbb
mov
loopne
mov
leave
fsub
add
mov
cld
call
push
xchg
or
mov
dec
lea
jne
insl
xchg
add
mov
inc
jne
aas
fdivs
add
mov
adc
mov
adc
into
add
pop
xor
aaa
push
inc
xchg
shlb
mov
mov
popa
xchg
mov
dec
sub
lret
sbb
adc
sbb
and
mov
or
fisubs
rolb
jbe
adc
mov
adc
scas
std
aam
test
lret
test
je
pushl
cmp
push
push
or
add
xor
dec
int
adc
push
out
inc
xchg
cmp
or
popa
dec
in
mov
dec
jg
mov
fistl
jmp
clc
fstpl
ret
or
cmp
call
pop
mov
fiaddl
mov
adc
nop
shll
out
adc
ret
and
sbb
loope
mov
test
loope
mov
sbb
push
pop
xchg
adc
mov
sahf
and
in
xchg
icebp
sahf
push
popa
inc
or
cld
outsb
or
pop
mov
mov
in
push
nop
in
lods
inc
in
enter
xchg
inc
aam
clc
xchg
cmp
mov
or
data16
or
xchg
adc
or
push
or
cltd
mov
pop
or
test
push
sti
mov
fisubrl
std
xchg
scas
sub
scas
fs
inc
shr
pushf
fcomip
cmp
movl
dec
xchg
aas
pop
pop
in
and
pop
stos
cmp
scas
mov
cmp
mull
jp
sub
push
xor
push
cmp
cmp
imul
adc
addl
mov
add
mov
out
out
push
and
add
cmp
mov
add
xchg
pop
movsb
mov
mov
pusha
out
enter
xchg
movswl
adc
add
add
test
in
je
xor
sub
int
push
push
std
sub
jl
sub
mov
mov
sub
ret
lret
fsubrp
add
mov
mov
call
xor
aas
movnti
adc
fdivp
inc
push
add
jmp
dec
bswap
jl
fsubs
inc
jne
adc
call
fcompp
filds
jae
cmpsb
xchg
das
jg
and
push
testl
bound
faddp
cmp
call
loopne
mov
cwtl
xchg
dec
cmp
adc
rorb
jno
sub
cmp
cmc
jmp
mov
pop
xlat
andb
loope
and
dec
push
jne
shr
movzbl
and
out
inc
xor
movsb
cmp
inc
sbb
pop
inc
mov
mov
jge
test
loop
jg,pn
mov
add
mov
or
add
fwait
add
sub
pop
adc
add
push
sub
jle
push
adc
push
add
mov
sbb
push
in
pop
adc
dec
rcrb
lock
inc
mov
push
mov
adc
and
mov
lock
lea
cld
jp
add
dec
inc
add
push
inc
add
outsl
lea
and
xchg
xlat
and
rorb
xchg
adc
icebp
and
repnz
or
inc
out
or
data16
movsb
jb
inc
fisttps
push
pop
fsubrl
push
je
jo
fwait
in
dec
push
out
sar
jns
add
inc
mov
sbb
std
out
rcll
xchg
inc
aam
cli
mov
or
sub
sub
inc
add
ret
and
jo
lret
and
adc
scas
neg
rcrb
loope
or
clc
add
jmp
xor
adc
and
adc
icebp
loopne
je
int
pop
sbb
push
sar
lods
xchg
mov
jle
and
adc
jb
and
or
nop
pop
inc
lcall
mov
or
fdivrs
pop
xchg
in
out
nop
test
popa
cmp
push
pop
imul
lods
jb
mov
mov
or
sti
rclb
arpl
mov
cmc
add
inc
cmp
jle
push
in
inc
jbe
push
bnd
adc
or
nop
pop
dec
jmp
and
add
fisttpl
jle
repnz
sub
jns
jne
es
mov
or
lahf
iret
or
movsb
xor
jne
inc
aam
int3
icebp
add
dec
inc
pusha
add
shrl
sarl
inc
into
mov
xor
sbb
cmp
mov
mov
mov
call
jmp
cmp
dec
enter
clc
cmpsl
xchg
add
adc
stos
inc
out
loop
jmp
pushf
movsb
inc
xor
int
testb
push
js
or
cmp
subl
daa
sbb
shl
xorb
or
fidivrs
lret
jne
sub
jmp
push
inc
or
mov
lds
mov
mov
adc
or
out
jg
sub
sarb
xor
dec
sub
in
or
push
ljmp
pop
repnz
ljmp
pop
testl
in
adc
add
sbb
hlt
mov
add
push
or
inc
cmp
loop
adc
testl
add
into
add
ret
adcl
fisubrl
xchg
push
aaa
push
push
or
cmp
fldt
rorl
mov
inc
orl
sarb
adcb
lret
mov
push
lea
cwtl
xchg
je
lock
cmp
cld
sub
cmp
js
and
cmpb
cld
lea
mov
xchg
sub
lock
sub
or
cli
lea
push
add
xchg
loop
pop
dec
dec
pop
jle
out
jae
add
adc
std
dec
push
dec
adc
out
add
cmpsl
pop
mov
push
stc
adc
nop
dec
clc
add
mov
sbb
adc
jl
or
roll
lret
add
adc
ret
sub
xchg
icebp
push
repnz
adc
out
cmp
mov
xor
outsl
or
sarl
lahf
and
push
or
shlb
jbe
adc
push
ds
push
sub
xchg
push
xchg
adc
adc
nop
lret
fstps
inc
ficompl
nop
lods
mov
sub
mov
xchg
add
adc
pop
jl
sarb
out
jb
xor
xchg
in
movsl
cli
xor
inc
outsl
xorb
movsb
lret
dec
xchg
adc
call
inc
or
inc
movsb
or
pop
sub
xor
scas
test
add
sub
xchg
repnz
repz
or
dec
dec
cmp
xchg
adc
sbb
dec
ss
mov
push
hlt
add
jmp
shll
push
pop
cmp
xchg
pop
or
inc
mov
dec
cmp
inc
xchg
ret
xchg
dec
loop
rclb
int
or
or
in
divb
sub
add
and
lock
inc
scas
sub
add
push
call
and
icebp
roll
and
fs
and
outsb
push
adc
adc
push
clc
jp
or
adc
mov
xchg
rol
sub
adc
pushl
inc
cs
push
shrl
mov
pop
mov
jg
lock
push
mov
mov
sarb
adc
sti
xor
dec
xchg
cld
sbb
and
data16
sub
sub
mov
xor
xchg
dec
insb
pop
enter
mov
sub
out
xchg
jnp
call
in
popa
xchg
pop
dec
sub
daa
incl
inc
mov
cwtl
add
push
xchg
cwtl
sbb
pop
mov
jb
xor
cmp
jne
movsb
arpl
sbb
cmp
sub
dec
dec
lods
cld
xchg
out
je
jmp
cmp
add
inc
ret
sub
pop
cmp
outsl
jbe
int
adc
sub
repnz
push
pop
insb
cmp
xor
test
add
jno
xor
cli
sub
stc
int3
and
sti
mov
inc
in
dec
scas
adc
push
in
ret
xchg
ror
xor
push
dec
push
add
roll
sub
lods
out
ret
pop
sbb
stos
push
cs
xchg
inc
or
push
movl
lods
clc
push
movsb
and
in
iret
inc
out
xchg
inc
add
sub
les
xchg
aas
les
lds
jle
or
stc
lcall
test
je
fs
push
stc
jne
gs
das
or
inc
sbb
and
or
in
jo
pop
add
shlb
testb
push
jne
cmpsb
inc
sub
cmp
or
or
pop
or
lods
mov
into
imul
dec
sarl
or
jbe
pop
mov
aas
addb
cmp
mov
jae
jmp
xchg
jne
jp
adc
rcll
arpl
in
mov
ljmp
fnstcw
lds
add
lods
test
mov
lea
ljmp
loopne
cli
lds
or
push
jne
ret
jo
cmp
cmp
lock
sub
and
inc
cli
incl
rorl
xchg
movsb
hlt
add
mov
or
push
fs
cmp
clc
xor
sub
jne
or
jo
push
sbb
mov
jnp
inc
cmp
xor
sbb
cmp
inc
jmp
shlb
sahf
pushf
lods
sub
mov
cltd
mov
pop
fimull
xchg
sbb
add
mov
sbb
and
xor
pop
mov
and
inc
mov
xor
sbb
mov
and
adc
add
lds
outsb
les
or
sarl
sbbb
int
adc
sub
dec
jb
sub
push
fisubrl
negb
lods
inc
dec
roll
jmp
lea
negb
or
sub
fsub
aas
cmp
leave
dec
and
les
xchg
xor
dec
xchg
or
aaa
or
in
mov
sbb
dec
adc
mov
mov
lds
shll
outsb
xor
xorb
std
lds
jmp
xchg
sbb
aas
loopne
add
push
and
push
mov
and
in
shlb
repz
pop
mov
cmp
sarb
outsb
nop
pop
add
test
jl
jno
popa
aas
std
clc
sub
push
les
in
sarl
inc
xchg
and
xlat
add
cmp
cld
pusha
jge
pop
xor
and
pop
jg
enter
addr16
daa
fsub
jo
call
enter
mov
ljmp
andb
ja
sub
add
aaa
out
cmp
add
test
push
jecxz
fisttps
ja
leave
xor
sbb
rcrl
jb
and
or
mov
js
jle
inc
mov
ss
sbb
inc
xchg
jae
mov
jp
sub
add
adc
je
ds
pop
adc
imul
sbb
lea
add
cmp
rcrl
and
arpl
mov
or
xor
repnz
sbb
sbb
cmpsb
jmp
lret
adc
push
mov
mov
cmpsw
pop
fs
sti
adc
xchg
imul
call
mov
ljmp
xlat
and
scas
test
std
aam
int
in
into
es
nop
aaa
test
pop
repnz
push
in
rcrb
call
mov
and
stos
mov
mov
arpl
insb
add
mov
push
fiadds
cmp
mov
dec
add
or
adc
mov
dec
pop
dec
lods
fdivs
push
jl
leave
rclb
add
cmpsb
adc
and
adc
jns
ja
sbb
sub
jg
mov
sbb
ss
test
not
inc
enter
repz
sub
fidivrs
and
xor
inc
and
push
rcll
lret
adc
call
jmp
xchg
leave
mov
stos
repz
test
adc
and
or
hlt
or
mov
add
xchg
dec
mov
mov
inc
jae
or
inc
add
mov
push
xchg
xlat
push
test
into
push
rclb
mov
adc
xchg
xchg
jo
cld
neg
sarl
incl
and
lret
add
adc
xlat
test
push
xor
rolb
addr16
jo
or
dec
jp
mov
into
dec
loope
add
adc
cmp
xor
xchg
movzwl
loope
pop
add
or
xchg
aam
lea
scas
add
xor
or
xor
inc
sbb
jecxz
ss
lods
or
xchg
dec
pop
cmp
cmp
push
pop
push
out
lods
jmp
xchg
pop
pop
pop
push
fs
aas
lock
push
dec
adc
js
lea
pop
lods
jmp
inc
call
adc
xchg
mov
addr16
repnz
adc
and
mov
push
imul
jno
push
and
mov
enter
and
mov
movq
adc
xchg
insb
push
xchg
inc
mov
mov
add
ret
pop
addb
cld
insb
fs
mov
mov
adc
dec
stc
repnz
push
rolb
ja
dec
pop
jb
fiaddl
adc
es
movsbl
and
push
or
and
outsb
or
pop
mov
push
mov
cld
movsb
lods
fcoms
push
mov
test
mov
xor
cmp
mov
decl
jae
loop
mov
popa
pop
adc
cmc
sbb
aas
out
jge
add
test
mov
clc
rcll
orb
shlb
fisubs
cli
movsb
dec
jmp
pop
mov
adc
psrld
sbb
in
and
add
and
or
or
adc
test
and
push
dec
pop
popf
push
ret
pop
push
jle
jg
aad
cmpsb
imul
sbb
nop
cmp
jmp
mov
jbe
inc
add
mov
cvtps2pi
mov
call
inc
inc
sub
xchg
and
or
pop
mov
mov
dec
or
xorb
xor
call
jl
je
cmp
movsl
sbb
adc
inc
inc
leave
cmpsb
cwtl
xor
clc
mov
orb
je
jp
sbb
or
or
mov
scas
mov
test
add
and
or
cmp
and
sub
or
pop
scas
scas
lds
xchg
push
and
mov
or
sbb
jl
outsb
pop
arpl
xchg
hlt
add
or
xchg
ret
and
or
call
dec
sahf
and
js,pn
or
inc
mov
jne
xlat
or
idiv
push
cmp
sub
mov
pop
clc
mov
mov
xor
push
aas
add
incl
stos
add
or
mov
and
or
push
lock
cmpb
dec
into
pop
xor
xchg
and
xchg
dec
mov
dec
jbe
inc
repnz
push
in
dec
leave
or
xchg
mov
push
jle
xchg
jae
and
push
daa
or
or
and
or
lods
mov
sbb
jg
xchg
dec
pusha
popf
xchg
jg
add
pop
and
jge
in
leave
push
addl
mov
lahf
test
std
mov
dec
cmpb
add
decl
fldl
sbb
cltd
sahf
sub
or
mov
cli
xor
orl
dec
mov
vpsrad
sub
pop
adc
add
inc
repz
inc
ljmp
pusha
or
xor
stos
dec
fstp
test
test
aas
les
xchg
decl
notl
pop
lock
nop
daa
cmpsl
dec
add
incl
movsb
mov
adc
stos
int
rcll
mov
push
cmp
mov
out
inc
cwtl
adc
jmp
daa
out
hlt
add
adc
sbb
mov
or
inc
js
adc
push
nop
in
add
adc
adc
or
inc
and
mov
sub
sbb
lea
inc
inc
mov
xor
lock
sbb
je
add
jb
fadd
jl
rorl
jge
push
adc
fcmovu
adc
push
mov
ret
adc
xor
or
and
andb
add
test
dec
leave
popa
pop
ljmp
xchg
sbb
outsb
mov
and
orb
xor
cltd
pop
jb
cmp
pop
sahf
ss
inc
add
sub
mov
pop
je
sub
sti
sbb
repnz
push
call
add
add
mov
dec
pop
inc
out
mov
adc
imul
scas
arpl
aad
xor
clc
mov
push
cmp
add
inc
call
pop
je
rol
scas
xor
xchg
fstps
lods
jo
das
jl
pop
jecxz
roll
test
dec
push
cli
arpl
scas
enter
pop
or
add
xchg
add
sarb
push
shr
add
movsb
andl
add
jno
cmp
add
xchg
pop
shll
fwait
cmp
push
jo
dec
inc
xchg
imul
xor
orl
enter
mov
enter
inc
jmp
bound
test
adc
test
orl
xor
sbb
sbb
and
inc
adc
cmp
pop
jg
cli
insb
mov
das
stc
and
pusha
les
pop
push
pusha
loopne
sti
hlt
mov
cwtl
je
adc
xchg
jmp
call
fidivrs
pop
pop
jmp
and
test
jmp
dec
hlt
and
pop
hlt
shrb
xlat
and
es
pop
and
inc
push
pop
mov
cld
aaa
das
roll
lods
fmull
or
adc
pop
xor
xchg
test
cmpb
jne
fstl
lock
push
mov
cmp
add
xchg
std
adc
xchg
jne
inc
loopne
pushf
push
adc
out
xor
jmp
push
mov
fdivrl
dec
call
sar
clc
inc
fstps
fs
xor
pop
call
nop
mov
enter
mov
inc
and
cli
xor
fnsave
pop
std
xor
sub
xchg
in
data16
jle
xchg
addr16
or
push
xchg
stos
mov
push
je
inc
test
mov
or
in
call
and
jnp
sub
int3
adc
push
xchg
jp
popa
mov
mov
cwtl
or
and
add
dec
pop
lret
or
mov
mov
or
popf
jns
jecxz
or
mov
or
cwtl
inc
aad
add
mov
pop
inc
push
mov
jo
add
xor
or
jno
jmp
je
mov
cmp
fsubrl
pop
ret
into
jne
push
lahf
push
movsl
leave
xchg
push
xlat
mov
push
shrl
mov
ret
test
adc
jg
in
and
movb
aad
lret
jle
push
sub
in
decl
cmp
inc
out
icebp
ljmp
sub
pop
test
xchg
jnp
xor
push
call
in
xor
push
jmp
pop
int
push
adc
cmp
fstps
xchg
aaa
inc
inc
scas
cmp
jl
jbe
adc
inc
add
adc
and
lods
add
pop
jb
std
imul
loopne
mov
test
push
and
dec
sbb
or
lret
ret
inc
sub
pushf
and
pop
xor
mov
sub
adc
push
test
lahf
fneni(8087
stc
shlb
or
cmc
sbb
cs
lods
push
mov
movl
ret
sbb
lods
out
add
lea
adc
loope
sbb
mov
movsb
mov
adc
in
xchg
gs
std
cmp
mov
icebp
sbb
mov
or
xor
cmp
rorl
jmp
or
sbb
cmp
orb
lret
pop
imul
mov
lret
rcrl
push
xchg
jmp
and
mov
mov
or
mov
js
and
xor
imull
and
decb
adc
flds
int3
pop
adc
sbb
pusha
cmp
jno
sub
nop
aam
xchg
sbb
and
pop
mov
push
hlt
push
popf
insb
adc
adc
sbb
push
mov
sub
sub
mov
and
add
inc
nop
es
in
add
add
sbb
subb
jmp
push
or
jmp
rcrb
sub
ret
popa
fcoms
and
cwtl
lock
dec
subb
xchg
sub
add
inc
dec
cmc
popa
pushf
data16
sub
mov
inc
scas
jp
dec
sub
ljmp
lret
mov
mov
inc
cmpsb
inc
xor
inc
das
sbb
push
je
mov
mov
mul
adc
je
and
and
jno
mov
dec
lret
inc
push
bound
inc
sbb
inc
and
adc
mov
sbb
xor
sub
cltd
sbb
repz
mov
jge
loopne
push
mov
cmpl
push
ss
mov
fmuls
xor
int3
push
pop
push
add
mov
inc
sbb
add
sub
jl
adc
adc
lret
mov
sub
jge
clc
mov
dec
movsb
nop
lret
lea
nop
jp
popa
pusha
xchg
inc
cwtl
outsb
shr
add
cmp
adc
sub
lock
push
xchg
fprem1
mov
dec
repnz
xor
mov
mov
gs
or
fs
or
sbb
mov
inc
add
mov
xchg
sub
imul
add
sbb
in
pop
and
pop
add
mov
inc
dec
nop
adcb
pop
hlt
arpl
and
mov
movsb
push
or
adc
adc
sbb
nop
and
sub
xor
xor
cmp
nop
inc
enter
xor
push
or
xchg
and
fs
xor
je
js
inc
jl
adcb
xor
xchg
and
lods
xor
xchg
and
lea
pop
loope
outsl
jb
adc
and
cmp
pop
sti
ds
cmp
jmp
sbb
cs
int3
fs
cmp
add
push
sbb
sbb
add
sbb
jbe
je
push
outsb
and
mov
or
sub
inc
jno
jae
ret
adc
and
xacquire
jae
out
sbb
jns
push
add
xor
sub
or
fs
imul
insl
jo
jo
mov
fs
jo
pop
addb
jo
pop
or
jg
ret
push
aas
cld
or
out
and
jb,pn
bound
cmp
fidivrs
sub
add
dec
pop
mov
mov
sbb
push
ret
out
out
mov
xchg
push
inc
sbb
jge
cmp
mov
ljmp
mov
pop
sub
rorb
pop
sub
popf
js
push
inc
pop
jo
and
and
test
inc
pop
mov
cmp
sarb
add
mov
mov
sbb
jno
xor
inc
fdivr
and
addb
imul
dec
andb
outsl
ja
sbb
and
dec
enter
sbb
add
hlt
cld
sub
cmp
int3
xor
sbb
je
icebp
dec
test
loopne
inc
xor
xor
sub
cmp
loop
sbb
jle
cmp
cs
push
xor
insb
and
push
and
or
push
inc
sub
shrb
data16
cmpsl
xor
jb
js
mov
shl
adc
popa
icebp
addr16
jg
sbb
maxps
mov
pop
jo
mov
xchg
dec
mov
insb
jbe
jl
lea
fisubl
cltd
xchg
arpl
and
push
dec
xor
push
inc
and
push
inc
pop
mov
sub
pop
adc
cmp
mov
icebp
insl
pop
push
inc
pop
mov
and
dec
inc
push
and
inc
insb
movsl
xor
mov
and
jo
push
imul
adc
clc
sar
or
inc
sub
and
add
jne
and
mov
pushf
jmp
bound
insb
pop
jne
ja
fs
sub
mov
dec
les
mov
daa
dec
add
insb
test
mov
push
jbe
cmp
je
jmp
mov
arpl
rolb
inc
mov
inc
add
push
dec
push
lods
das
les
sub
int
and
arpl
dec
outsb
imul
or
cmp
sti
sub
jnp
sub
mov
and
lea
push
sbb
and
mov
bound
and
sub
and
gs
pop
cmpsb
pop
lods
xor
dec
cmpsl
xchg
inc
sbb
aam
and
or
jge
add
adc
xor
sbb
popa
jmp
jb
call
in
dec
fcompp
sub
cmp
cmp
jmp
inc
gs
dec
dec
add
daa
adc
lods
imul
ds
push
fdivrs
jl
or
sub
lods
dec
dec
fidivrl
sub
lock
push
jge
clc
push
notl
mov
mov
ljmp
fisubl
ds
hlt
mov
test
fnstsw
cmpl
imul
add
push
inc
sub
and
psrlw
push
sub
xor
xchg
cmp
inc
and
and
sbb
sbb
addr16
or
xor
mov
inc
leave
xchg
imul
dec
jno
stos
std
test
fdivs
dec
cmp
addr16
mov
dec
cmp
aaa
lea
push
push
xchg
mov
sub
jb
sub
ss
mov
adc
outsb
jmp
or
jnp
popa
outsb
daa
cwtl
scas
ret
sub
jne
and
arpl
dec
mov
xor
sub
mov
cmp
pop
scas
sbb
fstl
jl
lods
mov
inc
insb
mov
cmp
xor
add
add
add
xor
xchg
pusha
push
mov
add
repnz
jl
popa
push
dec
push
shrb
faddl
and
and
or
or
inc
and
mov
push
and
dec
jl
mov
stos
inc
mov
out
and
inc
or
or
mov
adc
orb
test
mov
add
sub
shll
dec
inc
pop
imul
enter
cmc
call
push
adc
dec
je
stos
jne
push
pop
pop
add
jbe
insb
imul
das
mov
cld
nop
insl
bound
out
shll
arpl
ss
push
js
jmp
jns
push
popa
jmp
mov
popa
push
jns
sbb
jae
sahf
subb
mov
jle
dec
inc
popa
lcall
sti
cltd
repz
cmp
lock
push
and
inc
sahf
rorb
popf
fbld
adc
popf
push
sbb
popf
mov
dec
test
mov
cmp
push
test
xlat
cli
sub
repz
jo
cmp
out
jo
rolb
jae
jb
jbe
mov
iret
push
jp
mov
cmp
inc
ss
or
xorb
xchg
setle
test
or
scas
outsb
mov
or
pop
and
imul
shrl
fs
popa
mov
cwtl
je
das
dec
dec
mov
ja
popa
ficoms
push
mov
js
jmp
xchg
jp
mov
push
jg
pop
data16
xchg
fnsave
dec
insb
and
sarl
jmp
or
sub
inc
jae
push
push
xor
inc
fisubl
jl
xor
jle
sbb
test
out
outsl
scas
jl
js
and
shrb
std
les
sub
and
test
fs
or
and
mov
sbb
jo
add
fimull
push
xchg
jae
cli
and
movsb
adc
fst
fmull
or
add
loop
xlat
push
adc
loope
xchg
inc
cmp
jno
imul
sub
in
out
and
popa
xor
dec
jae
cmovno
push
mov
or
push
or
push
ja
lahf
sahf
cmp
pop
lret
arpl
lods
les
in
push
bound
mov
and
and
and
insl
lods
or
in
mov
insb
sub
outsb
push
xor
jnp
add
jae
jne
int3
add
push
add
sub
add
adc
sbb
or
aas
adc
test
adc
add
adc
or
add
scas
adc
sbb
push
push
adc
or
and
or
imul
stos
xchg
mov
or
sbb
add
adc
test
adc
pop
adc
push
sub
mov
pop
mov
out
adc
sbb
and
cli
mov
cmp
sbb
jp
jg
pop
aas
jnp
dec
push
and
sbb
pop
ljmp
sub
or
push
andl
clc
sbb
push
push
push
sbb
or
sbb
sbb
test
fildll
call
cld
cmp
xor
jecxz
jae
lcall
out
lds
jl
sub
loopne
test
inc
and
or
in
inc
cmp
add
add
cmp
and
mov
add
adc
mov
lret
addl
inc
inc
inc
inc
mov
inc
and
dec
dec
xchg
dec
and
push
push
mov
mov
push
and
pop
inc
bound
jns
jl
add
jg
and
cwtl
and
dec
test
mov
mov
les
enter
rclb
in
mov
adc
and
dec
decl
and
inc
and
mov
adc
and
dec
cmp
inc
dec
mov
push
and
push
add
in
xor
or
int3
adc
pop
mov
or
mov
adc
jbe
push
cltd
sbb
mov
cmp
adc
fs
jns
dec
inc
mov
jae
pop
xchg
dec
push
push
push
ljmp
push
jne
jae
or
repnz
nop
or
jne
or
push
imul
and
ja
xor
ss
adc
inc
and
pop
push
aam
jbe
jb
ja
bound
cwtl
dec
or
shl
subl
sbb
dec
dec
outsl
or
shll
mov
inc
dec
mov
push
inc
inc
aad
or
dec
and
dec
addb
and
xorb
loopne
inc
push
add
cmp
test
data16
adcb
lock
adc
out
push
dec
xlat
jge
arpl
sub
add
inc
mov
inc
push
aas
cmpb
adc
or
and
jmp
push
rorl
add
out
jle
incb
je
lcall
dec
dec
inc
add
mov
cmp
inc
dec
mov
inc
or
adc
enter
or
xor
sub
jnp
sub
aas
sbb
pop
add
mov
cli
inc
or
pushf
or
push
ret
pshufw
mov
add
mov
stc
and
and
cmc
jg
jmp
shll
out
decl
inc
aad
xchg
pushl
out
jg
xchg
jae
cmp
popa
insb
and
cmpsb
fbld
cmp
iret
cmp
adc
enter
cmp
dec
adc
push
int
dec
loope
mov
mov
inc
add
add
fbstp
je
add
add
xchg
movsl
lret
add
mov
mov
sub
push
adc
or
sub
call
xor
cmp
jle
std
dec
add
imul
jp
cs
retw
cmp
aam
insb
pushl
je
dec
pop
outsb
xor
xor
fdivs
add
stc
jl
mov
adc
out
cltd
pop
adc
inc
mov
inc
and
lahf
lahf
jbe
test
sub
mov
dec
xchg
cld
push
cmp
inc
jbe
xchg
and
inc
lods
or
addr16
push
jo
mov
fsubrs
addr16
gs
imul
bound
mov
pop
add
add
inc
add
mov
adc
insb
loopne,pt
mov
or
mov
into
sub
test
xchg
sbb
pop
push
sbb
or
pop
jp
xor
xor
loope
sbb
mov
cmp
or
add
lock
adc
jo
test
or
add
lods
lahf
or
and
movsb
mov
add
adc
ret
push
pushf
mov
pop
ds
cwtl
testb
add
add
mov
add
push
cmp
addl
add
cmpsl
insb
mov
loopne
les
arpl
fbld
push
xor
popa
sbb
or
adc
mov
xor
or
bound
ss
inc
xchg
push
and
jl
mov
ret
and
inc
adc
and
pop
dec
jo
xchg
mov
aam
ljmp
adc
sub
ds
push
pop
mov
je
orb
scas
and
adc
add
adc
jl
lods
enter
sahf
or
cmpsl
jp
inc
or
gs
imul
jb
scas
inc
js
frstor
cmpsl
jmp
add
mov
adc
cmpb
inc
mov
mov
dec
outsb
push
outsl
or
xor
dec
imul
fs
loop
cmp
bound
andl
hlt
js
mov
inc
shrb
loope
sbb
dec
cmp
pop
out
fs
pop
adc
insl
test
fs
dec
popf
sub
add
push
mov
mov
sbb
push
jo
adc
push
sub
mov
fdiv
arpl
lret
jle
sbb
jne
stc
jae
test
dec
jno
mov
hlt
xchg
dec
mov
pop
lods
ret
mov
lret
ffree
dec
mov
imul
xchg
push
outsl
push
xchg
push
outsl
xchg
adc
test
movsb
push
xor
aam
mov
test
and
repnz
push
shl
jae
ja
mov
or
push
pop
and
and
nop
pop
xchg
push
mov
loop
xchg
xchg
rcrl
xchg
ficoml
jne
push
push
xchg
clc
int3
fsubr
pushf
insl
lret
or
push
std
and
adc
inc
push
aaa
push
mov
movsb
adc
add
dec
cld
mulb
fisubrs
jne
mov
nop
add
or
lock
jo
add
data16
cmp
inc
push
outsl
shlb
inc
loopne
mov
sar
inc
and
int3
xor
xchg
mov
lock
test
push
roll
cs
addl
inc
cwtl
pop
jno
jb
push
in
sub
pop
nop
xor
sbb
dec
jno
push
imul
daa
movsb
and
inc
dec
mov
jp
pop
loop
sub
daa
jno
jge
cmpsb
aam
nopl
xor
popf
adc
cmp
gs
xchg
lahf
lods
lahf
ret
lahf
loope
out
lahf
cli
xchg
push
daa
inc
inc
js
xchg
xchg
cmpsl
loope
jmp
cli
loope
xor
jl
mov
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
sbb
xor
popf
sbb
addb
xor
std
sahf
xchg
push
fwait
lahf
movsl
pop
mov
pop
adc
sbb
addr16
xchg
mov
aaa
mov
mov
cmp
je
jbe
js
jp
jl
sbb
cmp
jo
jp
mov
into
lahf
xlat
pop
loop
icebp
xchg
cmp
push
jle
lods
xchg
mov
fcmovnbe
in
fprem1
loopne
cmp
mov
mov
iret
xchg
lods
add
cwtl
ret
lgs
rcll
cmp
xor
xchg
cmp
cmp
sarl
xlat
aas
fnstsw
loope
out
aas
cli
push
add
or
push
mov
iret
orl
movsl
iret
mov
iret
stc
ret
sbb
and
mov
ret
roll
repz
repz
sti
cmp
cmp
in
test
jmp
fprem
int
jb
sbb
cmp
popf
sub
push
lcall
cmp
xchg
loopne
loop,pt
jb
je
jbe
js
dec
sti
rcll
test
pop
jl
jle
js
jp
jl
sbb
xor
popf
inc
sbb
xchg
xor
addr16
xchg
into
shl
sbb
xor
imul
jp
sbb
xor
aaa
and
es
ss
cmp
xchg
cmp
pop
sahf
cmp
das
jge
ds
imul
xchg
push
daa
movsb
inc
test
mov
mov
in
popa
sbb
lock
jb,pt
push
xor
fldcw
je
xchg
icebp
cwtl
clc
push
aas
jb
je
jbe
js
jp
jl
jle
popf
mov
lock
dec
cmp
cmp
push
dec
xor
stos
mov
xchg
mov
add
in
mov
push
shll
repz
lock
xor
xor
dec
lock
hlt
and
cmpsb
aam
pushf
cmp
popa
push
cmp
leave
sub
xor
push
loope
jmp
leave
and
mov
cmp
inc
push
cmp
xchg
dec
mov
lret
jb
je
jbe
sbb
ds
mov
mov
xor
inc
xor
pop
push
sub
daa
rolb
adc
cmp
sbb
cmp
popf
inc
sbb
addr16
xor
repz
repz
mov
lock
xchg
in
call
not
add
in
call
ljmp
pop
cmp
cmp
cmp
cmp
jb
test
cwtl
aas
sahf
aas
mov
mov
ds
mov
push
rcll
pop
repz
repz
repz
jne
jns
jge
xor
repz
repz
repz
repz
repz
repnz
dec
dec
inc
pusha
add
xor
xor
aaa
mov
in
pop
cmp
and
adc
inc
dec
imul
popf
popa
pop
sbb
sahf
xchg
push
mov
lahf
lds
sti
xchg
cmp
xor
xchg
insb
jg
xchg
out
out
out
out
jmp
cli
loope
ds
sub
inc
lock
hlt
pop
clc
push
cld
idiv
cld
cld
or
aas
pop
cmp
cmp
lahf
int
fcoml
lock
lsl
setae
mov
sti
push
mov
cld
leave
push
cmpsl
addb
xchg
rcl
shl
loopne
xor
dec
cmp
push
cmp
cmp
gs
imul
jne
jns
jge
cmpl
lea
xchg
lahf
cltd
lahf
popf
xchg
mov
lods
iret
mov
mov
data16
jecxz
out
jmp
out
stc
repz
idiv
sti
stc
jmp
xor
call
xor
jmp
or
cmp
js
shr
lock
sar
aam
fdivr
fdivr
loopne
in
call
cld
hlt
cld
clc
cld
cld
mov
jb
je
jbe
sbb
cmp
mov
sub
arpl
mov
not
xor
repnz
imul
add
aas
mov
jl
orl
pushf
call
xor
cmp
pop
push
loope
in
dec
stc
addb
clc
cmp
sahf
call
cmp
jl
andb
jno
xchg
and
cmpsb
cmp
in
cltd
adcl
sbb
popf
push
sbb
or
jecxz
repz
in
repz
add
sub
mov
mov
xchg
jecxz
repnz
loopne
fwait
inc
addr16
xchg
lods
mov
mov
in
shrl
je
outsb
in
jb
js
jl
pop
cmp
popf
rclb
iret
out
ret
add
push
xchg
sub
data16
jle
jle
jle
dec
adc
dec
je
pop
es
lahf
jnp
mov
lret
inc
mov
ficompl
popf
xchg
sbb
rcrl
sub
or
xchg
stos
push
jae
xor
stc
vaddsubpd
pop
xor
je
jbe
js
jp
sbb
xor
popf
sbb
push
lahf
pop
pop
gs
jo
jl
xchg
lahf
lcall
lahf
ret
xchg
xor
daa
pusha
inc
jg
xchg
test
loope
xor
inc
mov
cs
pop
ss
daa
lcall
roll
ret
in
scas
stc
mov
mov
pop
cmp
push
jo
orl
mov
cmpsl
movsb
repz
jmp
mov
outsb
addr16
xchg
cmpsl
clc
lret
xchg
jmp
add
push
leave
data16
jb
je
jbe
js
sbb
ds
popf
mov
mov
lahf
jmp
popf
jle
call
adc
add
xor
leave
shrl
jmp
dec
hlt
inc
mov
jns
iret
mov
lock
cmc
mov
leave
and
fistpll
es
xlat
lahf
inc
pop
dec
xchg
xor
daa
pop
inc
and
sarl
repz
repz
out
icebp
repz
or
les
data16
pushf
xor
cld
aad
in
cmc
cld
add
and
das
cmp
cmp
pop
aas
xchg
cltd
lods
adcb
dec
in
jmp
jo
xchg
clc
cltd
xchg
push
sbb
cmp
popf
aas
sbb
mov
lret
cmp
add
adc
and
es
inc
ret
insb
shll
jg
mov
cwtl
push
je
jnp
cmpl
dec
add
push
dec
xorps
pushf
iret
mov
iret
cmc
iret
std
ret
add
adc
mov
pop
pop
inc
jmp
rolb
xor
pop
les
out
loope
xor
popa
sub
es
push
lahf
jns
jg
test
les
push
int3
mov
stc
stc
int
sar
fyl2xp1
in
fidivrl
icebp
aas
idivl
std
push
add
or
cmpsl
adc
xchg
cmpsl
daa
les
aas
cld
inc
cld
dec
xchg
mov
pop
arpl
jmp
pop
sub
sbb
add
xorb
cs
dec
cmovo
pop
push
and
dec
in
test
xor
xor
movsb
hlt
clc
clc
add
xor
mov
fsub
dec
mov
leave
and
sub
sub
mov
cmp
cmp
inc
out
in
xchg
mov
movsb
pop
xor
fs
push
cld
je
js
jl
test
mov
cwtl
xchg
pushf
dec
ret
test
mov
cld
enter
rclb
and
insb
cmp
cmp
jbe
js
dec
sub
push
xor
cmp
cmp
inc
iret
inc
iret
dec
iret
dec
iret
push
leave
push
cmpsl
sbbb
rcll
repz
xor
repz
mov
nop
repnz
pop
adc
jle
jle
jle
pop
lods
adc
mov
stc
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
jo
ds
or
or
and
mov
cmp
mov
pusha
aas
fs
push
int3
hlt
sar
aam
ret
and
jb
sbb
xor
add
test
gs
dec
mov
push
in
lahf
repnz
clc
xchg
decb
or
mov
iret
sbb
and
movsl
mov
repz
repz
repz
repz
repz
repz
xor
je
loope
add
add
add
das
pop
aas
push
adcb
icebp
dec
pop
add
sbb
or
mov
and
loop
pop
or
jp
cmp
sbb
jns
xchg
hlt
ljmp
pop
lahf
jmp
mov
and
or
cs
cltd
and
dec
sbb
add
adc
xor
and
xor
ds
pop
inc
loop
jl
jle
jne
adc
pop
movsl
sub
movsb
push
jo
inc
ror
adc
inc
enter
bound
rclb
mov
xchg
and
push
nop
mov
adc
nop
xor
sbb
adc
mov
outsb
xchg
cmp
outsb
or
xchg
imul
rorl
push
cmpb
or
sbb
add
pop
lock
inc
rolb
test
lock
test
sbb
or
inc
cld
jg
mov
ret
jae
inc
jecxz
out
negl
inc
ss
call
ror
xor
push
sbb
sbb
inc
rcll
dec
adc
pop
daa
pop
jnp
ds
mov
decb
push
into
xor
add
js
add
adc
popa
gs
imul
outsl
xchg
push
int3
cmp
inc
adc
cmp
sbb
push
sub
inc
imul
and
push
cmp
inc
xor
inc
or
pop
add
inc
int3
dec
insl
add
hlt
int3
jns
rorl
and
xorb
or
loop
test
nop
push
inc
mov
mov
pop
les
cmp
sub
pop
jae
sub
xor
cs
sbb
pop
sbb
je
sub
sbbl
sub
lcall
pop
pop
popf
pushf
pop
push
push
dec
jb
cmp
cwtl
xor
test
loop
xchg
adc
lcall
pop
adc
lods
mov
insl
mov
cltd
push
adc
dec
dec
sarb
dec
mov
js
push
sub
cltd
outsl
in
xchg
cmp
je
in
xchg
fs
push
cmp
add
mov
mov
add
or
and
inc
loop
mov
adc
mov
dec
ds
dec
inc
add
adc
orb
dec
mov
inc
clc
push
inc
movsb
sbb
dec
dec
pop
xchg
outsb
and
adc
and
dec
mulb
stc
dec
or
es
cmp
adc
cmpsb
or
and
dec
rclb
dec
fcoms
or
mov
dec
sbb
int3
adc
pop
mov
jp
mov
xchg
test
mov
fmull
add
and
dec
inc
mov
pop
or
mov
mov
or
mov
sahf
or
and
jno
dec
or
push
test
and
xor
ds
dec
xchg
sub
or
mov
xchg
cmpsb
and
loopne
repnz
enter
inc
add
lret
or
inc
dec
push
sahf
sub
je
orb
dec
cmpsb
xchg
mov
int3
les
shlb
and
push
cld
pop
stos
mov
adc
inc
inc
push
mov
push
jp
test
mov
mov
add
rolb
jo
loopne
faddl
add
jbe
xchg
push
xor
fs
loopne
jb
pop
dec
push
pop
push
dec
push
dec
push
inc
gs
inc
jae
dec
data16
popa
insl
mov
dec
jnp
cmp
inc
stos
push
mov
hlt
or
pop
je
dec
xor
inc
ljmp
push
data16
sbb
dec
outsl
or
in
pop
addr16
dec
outsl
data16
adc
inc
adc
inc
push
jns
mov
mov
xor
add
adc
andl
inc
lds
mov
rcrb
xor
imul
test
outsb
fs
xchg
xor
sub
dec
subl
push
in
jl
inc
movsb
outsb
je
push
cmp
push
out
and
xor
call
jae
push
outsl
push
mov
adc
sbb
inc
outsl
jo
jb
mov
add
xor
jle
adc
inc
dec
cmp
jne
and
inc
out
fsubs
rolb
loop
cmpsb
and
jne
je
inc
push
iret
shlb
xor
pop
outsl
insl
lock
jo
xor
outsl
scas
pop
lea
push
sbb
push
and
lea
cwtl
pusha
imul
lahf
dec
test
lcall
xor
ficompl
stos
movsw
and
shlb
fcmovnb
add
outsl
jo
sti
and
addb
inc
nop
xor
inc
jno
push
insb
adc
dec
jne
clc
lea
mov
dec
cmp
sub
sub
push
imul
cltd
or
xor
jbe
insb
gs
int3
mov
fwait
add
nop
push
nop
and
outsb
divb
pop
lret
test
and
insl
jo
adc
jno
pop
push
adc
pop
xor
add
sub
cmp
lret
push
insl
sub
lahf
dec
xor
mov
mov
and
hlt
mov
test
sbb
fisubl
in
pop
jne
rorl
cmpsb
jns
pop
dec
mov
lods
sysexit
xor
and
dec
adc
dec
scas
ja
pop
hlt
push
push
dec
pop
xor
xorb
addr16
andb
xor
dec
push
dec
jne
sub
sbbl
push
xor
sub
fldenv
rol
pop
pop
push
pop
int
pusha
dec
fs
pop
sub
insl
shrb
mov
lret
adc
popa
pusha
sub
push
movsb
arpl
adc
cmpl
xor
inc
jns
aam
stos
pop
or
sbb
sti
or
sbb
out
fsubl
ja
pop
les
jb
xchg
je
jne
or
push
test
push
dec
xor
cmpsb
fisubl
jns
loopw
movsb
pop
fisttpl
xchg
in
imul
xor
enter
enter
dec
imul
stos
test
lcall
push
and
bound
inc
dec
dec
movsb
jecxz
push
in
test
and
fs
add
xchg
clc
jmp
in
stos
or
out
mov
jp
dec
cli
imul
push
mov
out
xchg
sub
cwtl
outsl
insl
jne
inc
xchg
pop
or
xchg
push
insb
lret
xchg
adc
les
js
leave
push
jo
sub
adc
pusha
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
dec
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
dec
push
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
add
incl
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
add
incl
incl
incl
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
add
incl
add
incl
incl
incl
incl
add
incl
add
incl
incl
incl
add
incl
add
incl
incl
incl
add
incl
add
incl
incl
add
incl
add
incl
incl
add
incl
add
incl
add
incl
inc
incl
clc
add
jg
add
aas
lock
pop
clc
add
psubb
add
clc
add
pop
lock
pop
loopne
add
rolb
pop
rolb
pop
rolb
pavgb
add
lock
pop
clc
add
pop
clc
add
pop
clc
add
add
add
pop
loopne
add
loopne
add
rolb
add
adc
add
aas
cld
add
jg
add
incl
sar
add
inc
jmp
out
push
