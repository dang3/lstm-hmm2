cs
testl
sbb
push
cld
xchg
mov
cli
cmpsl
add
ds
shrl
loopne
xchg
xchg
dec
dec
mov
pop
arpl
push
mov
je
movsl
movsl
rcrl
pop
stc
mov
jno
jp
shrd
cmp
sbb
fists
lret
out
mov
push
sbb
dec
push
mov
or
xchg
mov
mov
mov
inc
or
lcall
movl
or
je
cli
cmpsb
cmp
xchg
adc
mov
sub
jbe
movl
mov
pop
js
aam
push
jnp
fsubrl
cltd
pop
mov
out
shrb
rolb
std
cmp
sbb
adc
pop
adc
lret
ret
jp
sbb
mov
imul
mov
loope
add
lea
cwtl
mov
call
call
call
call
pushf
lea
jb
push
pushl
mov
mov
pushl
ret
mov
pushf
lea
call
pusha
pusha
jmp
pushf
lea
jae
pusha
test
stc
pushl
add
pushl
mov
mov
pushl
pushf
movb
lea
jmp
test
call
movl
push
pusha
pushf
lea
jmp
mov
mov
pusha
cmp
and
bt
add
pusha
push
pushf
lea
jmp
inc
clc
lea
in
mov
inc
mov
ret
cmc
xlat
inc
leave
or
test
jge
mov
ficomps
pop
fdivp
lds
add
rcrb
leave
adc
and
mov
imul
repz
loop
roll
cmp
rorl
jge
xchg
fisttpll
xchg
adc
div
in
wrmsr
test
ret
pop
jbe
std
adc
pop
outsb
and
xchg
jnp
sub
cmp
sub
or
andl
push
pushf
pusha
lea
call
call
xor
hlt
mov
andl
hlt
push
or
mov
jo
loopne
std
and
outsl
aaa
sahf
arpl
jo
inc
cmpsb
mov
sub
adc
mov
out
push
enter
gs
lods
mov
icebp
fwait
in
xor
loopne
pop
xchg
sub
lret
in
icebp
add
mov
xchg
imul
je
adc
add
out
dec
jnp
push
in
cltd
or
xor
outsl
inc
jno
sub
jns
imul
addl
in
fdivrs
mov
lds
and
pop
and
loop
lea
fnstcw
ljmp
shll
cwtl
aad
pushf
add
jb
push
lds
movsl
fcomps
mov
cld
push
mov
push
lods
and
cmp
cmp
cltd
mov
mov
dec
pop
js
lret
cmp
mov
push
pop
sub
inc
mov
xor
aam
jg
stc
push
xchg
pop
cmp
iret
scas
mov
pusha
dec
push
lods
fistpll
inc
push
int3
call
adc
clc
push
push
loopne
cmp
cs
enter
and
adc
ljmp
inc
jmp
mov
mov
dec
pop
call
xlat
ficomps
dec
sub
cmp
leave
dec
mov
sti
push
mov
fs
movzwl
sub
clc
bsr
rcr
call
push
movw
pushf
lea
jae
pusha
mov
add
mov
bsf
lea
ja
mov
cmc
mov
pusha
pop
bsf
dec
mov
cmc
clc
cmp
bt
sub
pushf
movb
cmp
bt
repnz
mov
mov
lea
jne
movsbl
neg
mov
clc
sub
bts
not
sar
mov
pusha
sub
pusha
jmp
jbe
loope
cwtl
aad
add
insb
adc
arpl
das
cmc
sti
mov
push
sahf
pop
sbb
pushf
sub
add
ss
mov
les
idivl
pushf
push
sahf
stos
push
fcomps
xor
fimull
pop
mov
fstps
stos
mov
sbb
mov
pushf
mov
push
pushl
ret
call
movzbw
rol
xor
rcr
mov
shrd
mov
pusha
and
mov
cmp
stc
clc
pushf
mov
stc
mov
stc
xor
bt
ror
push
movb
jmp
jmp
test
clc
pushl
popl
clc
cmp
call
jne
lahf
mov
pusha
push
push
lea
jmp
pushf
pushf
cmp
pushf
lea
jae
call
mov
mov
test
imul
mov
push
xchg
cwtl
sub
icebp
adc
fmuls
add
ss
dec
mov
xchg
int3
inc
xchg
rolb
mov
mov
mov
pusha
pushf
inc
xchg
mov
leave
cmp
dec
lahf
push
std
adc
sub
or
mov
or
push
cmc
mov
faddl
add
cli
stc
xchg
sbb
lods
imul
cmpl
sti
adc
popa
out
aaa
adc
fnstcw
je
or
fs
je
push
cmc
sub
cmc
cmp
jmp
push
lea
ja
xchg
lea
xchg
pop
push
mov
mov
call
mov
not
lea
jmp
sub
add
jbe
stc
pushf
bt
cmp
mov
lea
ja
clc
imul
clc
add
pusha
pushf
push
push
lea
jmp
sub
bt
add
shrd
add
adc
inc
mov
shl
mov
clc
pushf
cmp
repnz
mov
mov
lea
jmp
add
add
push
add
push
add
adc
or
push
add
push
add
add
add
call
pusha
lea
ja
jmp
lea
js
ja
xor
neg
sub
sbb
rcl
adc
neg
add
cmp
mov
setge
mov
jmp
mov
cmp
pushf
cmp
stc
add
sub
test
mov
clc
clc
test
push
jmp
pushf
jmp
jae
cmp
pusha
test
xor
pushf
call
cmp
cmp
mov
jmp
pushf
lea
ja
inc
sub
dec
sub
movzbw
and
movzbl
add
shrd
bswap
push
mov
jmp
pusha
mov
movsbl
bswap
movsbl
mov
lea
call
call
mov
cmp
push
jmp
bound
xchg
cld
arpl
mov
xor
outsl
add
adc
in
outsl
mov
push
or
sarl
push
dec
jbe
add
jmp
and
pop
sti
data16
pop
xchg
jb
inc
mov
mov
lahf
shlb
out
lods
add
jecxz
pusha
add
scas
mov
ja
out
hlt
ljmp
repz
aas
pop
xor
inc
or
fs
jne
bsr
not
mov
test
push
cmp
add
call
lods
push
pushf
ror
cmc
test
call
xor
aad
sub
mov
fwait
inc
push
sub
add
mov
mov
pop
sub
ret
dec
das
sbb
popf
stos
loope
xor
fwait
dec
mov
stos
loopne
sub
out
mov
and
mov
out
mov
sub
les
fs
je
pushf
mov
lahf
cwtl
mov
not
setnp
jmp
adc
xchg
cmp
sahf
inc
int
fcmovu
outsl
xchg
add
add
pop
xchg
aad
ret
dec
add
push
into
je
stos
js
push
xchg
sub
gs
push
push
lods
bound
arpl
in
mov
or
clc
add
add
jmp
aaa
mov
dec
andb
dec
mov
lahf
cmpsb
sub
cmpsb
outsl
sarl
out
pop
loope
cld
mov
mov
lods
mov
push
and
lcall
stos
mov
scas
sbb
in
inc
fnstenv
inc
xchg
cs
xchg
fisubrl
stos
das
lea
jbe
and
btc
test
shrd
mov
xchg
adc
btc
add
add
call
mov
movl
push
pushf
movb
movw
lea
jmp
push
pushf
movl
push
mov
pusha
movl
pushf
pushl
lea
jmp
clc
push
or
movl
call
into
lds
cwtl
aad
jnp
call
mov
jg
or
es
push
jno
dec
adc
hlt
pop
lahf
out
cmpsb
jmp
push
xchg
xor
lods
out
je
test
mov
dec
jg
test
cmpsl
push
mov
in
outsl
sbb
lret
add
je
xchg
push
adc
and
dec
std
idivl
pop
and
sub
mov
dec
pop
xlat
ljmp
pop
aad
mull
stos
daa
mov
inc
sbb
pushf
std
xor
xor
stos
xor
mov
stc
cmpb
pushf
pusha
push
mov
lea
jne
lea
aas
rcl
xor
shl
bts
or
mov
xor
test
add
shl
bt
shr
call
movsbw
call
mov
clc
test
neg
clc
call
pushl
popl
movb
pushl
ret
mov
lea
ja
clc
cmc
imul
test
stc
pushf
bt
add
mov
pushf
movl
mov
lea
jmp
rol
lea
jbe
pushf
pusha
stos
mov
mov
lea
jmp
pusha
mov
movw
push
pushl
ret
movzbl
mov
call
ror
jmp
call
in
out
cwtl
aad
inc
orps
sub
jnp
adc
mov
bound
cmpsb
in
xor
adc
sahf
lret
sbb
push
cmp
in
jge
daa
sub
out
mov
lcall
mov
and
xchg
rorl
nop
out
and
push
int
mov
popa
xor
cmp
adc
and
movsb
movsbw
movsbw
bswap
movzbw
mov
push
mov
movw
pushf
lea
jmp
lea
je
pusha
cmp
clc
add
cmp
cmp
cmp
movb
cmp
mov
call
inc
mov
movl
pushl
lea
ja
shr
sar
sub
shl
push
sub
add
call
cmp
push
push
jmp
pushf
pushl
lea
je
cmp
pushf
push
add
stc
call
push
shr
cmc
jmp
or
call
test
sbbb
jae
inc
mov
mov
pop
pop
xor
push
cmpsl
push
out
ret
sub
inc
fdivrl
rcrl
cmp
xchg
daa
stos
je
fbld
aas
jbe
jmp
idiv
mov
cli
icebp
sub
push
lods
shl
dec
sub
test
dec
adc
addr16
or
cltd
lret
loopne
and
je
cmp
filds
mov
arpl
inc
clc
in
call
fcmovnbe
sbb
dec
mov
add
repz
xor
mov
pop
push
addr16
mov
cmc
mov
sbb
ds
jns
and
and
lods
ljmp
jns
push
pop
adc
xchg
xchg
rcrb
ds
sub
dec
insb
push
dec
iret
or
inc
mov
xchg
out
mov
inc
mov
jae
push
into
jmp
out
mov
dec
dec
int
mov
inc
push
cld
adc
sti
mov
mov
pop
lcall
cmp
xchg
sub
sbbl
lods
push
jns
cmpsl
dec
aam
mov
add
pusha
push
add
cmp
jmp
sbb
stos
pop
inc
xor
sub
fistl
fs
xchg
sub
xor
adc
test
mov
in
xchg
xchg
mov
repz
add
xor
pop
sbbl
push
pop
mov
mov
push
in
adc
lods
shll
std
push
xchg
sub
jp
fcoms
jbe
or
mov
mov
mov
dec
in
fwait
cmp
mov
mov
mov
cmc
sub
loope
enter
test
mov
push
jns
mov
addl
xchg
imul
add
popa
sub
pop
shll
lea
jne
lea
cwtl
push
lahf
movb
call
call
data16
cwtl
aad
enter
mov
jge
lret
mov
push
jl
dec
sbb
push
add
and
lcall
sahf
stos
or
idivl
sbb
pop
mov
inc
xor
and
mov
shlb
push
pop
int
outsb
sbbb
mov
in
adc
sbb
or
jno
rol
call
dec
mov
mov
inc
and
adc
dec
push
push
imul
loop
pop
cmp
es
inc
cwtl
inc
stos
cld
mov
lods
das
mov
int
popf
adc
and
lea
stos
inc
push
mov
cwtl
aad
stos
xchg
fdivrs
inc
mov
and
jmp
stc
imul
ret
push
js
movsl
insb
rcrl
cmp
in
fdivl
daa
sub
adc
std
xor
fldcw
mov
ret
mov
movsb
cmp
cs
cmp
repz
rcl
fildll
mov
xchg
and
or
mov
int3
aas
mov
inc
hlt
add
ret
push
push
mov
push
adc
sti
sub
lds
outsb
cli
dec
lock
sahf
pop
nop
pop
add
inc
ret
pop
mov
stos
test
shlb
jno
pop
xchg
ret
sub
mov
jo
shl
ds
or
pop
jae
mov
shlb
dec
cmc
movl
rorb
movzbw
lea
lea
jnp
pushf
movl
push
movb
jmp
call
jmp
scas
inc
fidivrl
aad
fwait
ret
xlat
mov
sahf
add
daa
sbb
pop
jecxz
aas
mov
adc
jp
shlb
and
inc
imul
rorl
stos
inc
xchg
or
lock
mov
es
std
cwtl
and
inc
adc
fisubrl
push
and
je
and
dec
adc
push
sbbl
movzwl
add
bsf
mov
pusha
pushf
clc
bt
add
cmc
pushl
stc
mov
test
cmc
cmp
cmp
test
mov
call
in
sub
aad
test
sub
push
xlat
idivb
cli
push
add
stos
shrl
fcomps
cwtl
pusha
ret
and
cmp
or
gs
mov
cltd
xor
lds
ret
mov
pusha
xchg
repz
fs
ja
push
movb
pushf
movw
lea
jb
clc
cmpb
push
jmp
cltd
inc
ret
aad
cli
subb
mov
hlt
dec
popa
idivb
sbb
push
lods
mov
bound
dec
mov
or
fs
and
cmp
jnp
out
loop
lods
xor
daa
xchg
pop
cwtl
ja
stos
stos
add
cltd
out
add
js
mov
add
xchg
and
jle
xorb
shrl
xchg
imul
cltd
jl
push
aam
sub
outsl
adc
cmp
aad
inc
mov
cmc
xchg
add
fistpll
pushf
sbb
and
sbb
mov
fwait
or
pop
inc
ret
sti
mov
call
shrl
scas
cmc
loop
loop
dec
incl
cmp
sti
repnz
cmpsb
sub
pop
test
sub
lahf
outsb
cmc
lcall
stc
bound
and
arpl
inc
test
sub
aam
sahf
iret
fildl
pop
dec
push
lret
add
xor
mov
xor
stc
std
shl
test
xor
dec
icebp
or
pop
fistpll
fbld
fs
sbb
inc
add
je
adc
jp
into
push
or
fs
mov
jb
movsb
mov
adc
add
mov
xor
inc
stos
pop
imulb
call
mov
pop
lea
jae
pusha
pusha
mov
pop
pushl
pop
mov
movb
pushf
movw
pushf
mov
lea
pop
pusha
pusha
pushl
push
pushl
ret
test
call
add
lea
aad
cmp
jecxz
scas
ja
sub
push
mov
stos
inc
and
jo
sub
inc
dec
in
add
popa
inc
pop
out
ret
dec
pusha
inc
cmpl
aad
cmp
std
or
sbb
les
aam
cs
mov
cld
push
jecxz
mov
sub
pop
push
nop
les
adc
mov
cmp
pop
pop
pop
dec
gs
xchg
pop
loop
sbb
scas
sub
nop
pop
pushf
sbb
xor
iret
out
adc
xorb
ds
rcl
ja
enter
je
or
and
fs
jne
mov
shld
bsf
xor
sar
shl
mov
sar
neg
add
not
cmp
setle
mov
pushf
cmp
pushf
stc
test
pushl
pusha
jmp
pushf
lea
jb
clc
cmp
test
cmp
js
jae
cmp
dec
mov
bsf
mov
shrd
bsr
mov
push
sub
call
bt
clc
call
xlat
out
cmpl
mov
mov
sub
push
xchg
push
outsl
ja
popf
push
and
adc
outsb
adc
bound
incl
lods
inc
cwtl
outsb
arpl
out
out
adc
bts
shld
add
xor
adc
movl
bsf
cmp
shrd
mov
pushf
clc
cmp
movw
movw
pushf
pusha
lea
jbe
ror
adc
sub
xor
shr
or
mov
neg
test
mov
xchg
adc
call
call
add
add
jle
addr16
aad
inc
or
nop
clc
jmp
and
aam
int
mov
sub
pop
addr16
cmp
sub
enter
xor
mov
mov
lock
mov
aam
sub
cmp
fidivrs
mov
sti
mov
or
adc
add
aad
pop
arpl
rol
dec
or
repz
addr16
push
and
push
fcmovb
cmpsb
dec
rcrl
inc
or
push
aam
shlb
jp
decl
sbbl
pushl
inc
idiv
push
icebp
mov
int3
add
out
sbb
dec
pop
fs
mov
popf
ficoms
sbb
push
jb
fisttpl
mov
jecxz
lods
jmp
cmp
mov
or
xchg
std
les
or
ja
inc
cmp
mov
or
lods
shlb
cltd
and
lcall
dec
jg
jo
pop
hlt
mov
pop
sbb
lret
subl
sub
push
cmp
jg
push
aam
repz
nop
push
leave
dec
in
mov
mov
cwtl
repz
xchg
xchg
and
daa
xchg
adcl
icebp
ret
jae
std
inc
loopne
dec
and
dec
add
push
xchg
test
scas
movsl
imul
aad
mov
mov
mov
ljmp
test
adc
lds
mov
mov
lcall
insb
inc
mov
mov
ret
jl
pop
jmp
andb
arpl
cmp
outsb
xchg
mov
push
sahf
je
mov
add
icebp
mov
xor
mov
in
jbe
mov
fs
dec
scas
jnp
cs
fcoms
push
test
shlb
xor
enter
mov
mov
inc
cwtl
scas
gs
rorl
pop
rclb
popf
ret
loop
adc
xchg
pushf
pushf
ror
call
or
aam
cwtl
aad
aad
inc
es
xor
push
leave
xor
js
fsubrs
cmp
xchg
clc
lahf
inc
scas
xor
imul
repz
cmc
adc
loope
or
pop
or
mov
mov
lds
imul
pop
xchg
pop
pop
insl
dec
mov
cld
or
xchg
mov
rcrl
aad
jecxz
pop
test
and
movsb
roll
aas
outsb
jecxz
jbe
lahf
popf
or
mov
incl
add
xchg
inc
fwait
mov
rcll
les
data16
add
mov
ja
hlt
mov
aam
xchg
dec
sti
imul
out
mov
fabs
aas
outsl
xor
xchg
jne
push
or
jmp
xchg
xchg
inc
xchg
leave
xchg
in
or
sbb
cltd
outsb
sti
cwtl
mov
pinsrw
ficomps
hlt
xlat
or
aas
sbb
in
dec
inc
fldenv
mov
add
popa
xchg
mov
cmpsl
jb
push
xorb
pusha
mov
sarb
cmc
ss
push
mov
mov
in
cmpsb
add
test
mov
dec
inc
fwait
or
xchg
fisttpll
aaa
in
xorb
add
shrb
nop
insb
dec
loopne
add
push
test
xor
jp
enter
pop
dec
jns
mov
stos
mov
sub
mov
pop
mov
out
inc
jno
repnz
inc
sbb
push
cmp
inc
pop
add
fistpl
dec
js
dec
incb
inc
cmp
push
lret
fldenv
cmp
pop
pop
lea
call
sub
aaa
push
lcall
cmp
int
mov
pop
pop
add
int3
and
out
jmp
xor
pop
ljmp
jns
dec
adc
dec
xchg
ljmp
or
fmulp
loopne
xor
xlat
inc
hlt
mov
adc
jno
xchg
gs
push
cmp
scas
js
jmp
in
daa
add
rorl
sub
es
or
adc
sbb
adc
jnp
add
sbb
mov
iret
or
mov
movsl
mov
and
adc
xchg
dec
fimull
aam
push
stc
int3
mov
cli
adc
pop
mov
mov
inc
and
popf
adc
pusha
mov
movl
push
lea
jmp
test
call
lea
jb
ja
pusha
lea
jb
clc
test
pushf
jmp
jmp
sub
cmc
bt
jmp
cmc
cmc
cmp
add
pushf
pushf
pusha
dec
pushf
lea
jo
jne
cmc
mov
push
cmp
call
push
xchg
je
aad
fiadds
push
jns
and
lock
aas
inc
and
js
mov
mov
and
pop
sbb
ret
cmp
out
jmp
xchg
add
mov
rcrl
jnp
nop
pop
fstl
lahf
ja
mov
aam
roll
lock
add
push
push
cmp
pushf
movw
lea
jb
clc
cmp
jmp
and
pop
jae
aad
out
jbe
ss
mov
test
pop
hlt
out
rorb
push
jno
sbb
in
mov
jg
sub
xor
lods
cmp
jge
sbb
mov
js
cli
mov
jg
pop
jno
lahf
out
scas
arpl
stos
xorl
pop
adc
xchg
clc
mov
xor
or
rorb
jmp
mov
sbb
mov
cmp
sbb
lds
xchg
push
add
sub
ss
add
test
add
shl
mov
shld
sub
adc
shr
bswap
xadd
mov
sar
xor
pusha
add
shl
add
lea
btr
btr
mov
cmc
test
jmp
call
dec
test
xor
jmp
pushf
inc
jmp
cmc
pusha
jmp
jmp
iret
or
jb
aad
push
cmp
lods
sub
fwait
das
mov
popa
xor
in
fidivs
hlt
sbb
call
push
or
push
or
jmp
lret
jae
push
dec
stos
add
aaa
inc
jne
sti
push
dec
mov
out
sahf
add
notb
inc
jbe
xor
push
scas
pop
insb
inc
das
sub
out
movsb
xorb
dec
lods
mov
mov
out
enter
jbe
ljmp
push
xor
mov
shrl
ret
and
movsb
xchg
imul
stos
aas
inc
mov
xchg
ljmp
fistpll
fadds
jle
mov
movb
inc
movb
movb
pushl
push
lea
jmp
outsl
sub
cwtl
aad
fldenv
addl
inc
jne
stc
lret
icebp
xor
push
cmp
test
mov
xchg
shll
mov
lret
dec
loopne
sti
into
mov
test
push
jl
sub
add
cwtl
jmp
scas
aad
jmp
mov
in
popa
cmc
cwtl
mov
js
sahf
mov
ret
cmp
pop
out
and
jb
pop
jne
loope
outsb
dec
jp
cmpsl
cmp
shlb
aad
add
ss
stos
xor
jle
add
inc
mov
jge
shl
mov
inc
movsb
rcll
aam
add
xor
xlat
adc
int
xor
aas
sub
sbb
in
decl
out
roll
xchg
mov
cmp
cmp
shll
jo
mov
add
push
or
sub
xchg
cmp
mov
cmp
adc
cli
push
dec
popf
imul
icebp
icebp
enter
push
jo
aad
out
adc
mov
mov
xchg
xor
lahf
and
or
cmpl
lods
mov
pop
movsb
push
aam
ljmp
pop
mov
aam
mov
in
bound
sub
pop
in
mov
jae
jb
ficomps
dec
gs
mov
xchg
jae
loope
mov
movsb
pop
jno
call
jge
sbb
insb
sub
test
inc
pop
jp
ret
imul
shll
fs
daa
aas
notb
into
and
bswap
mov
mov
call
add
inc
js
je
jb
arpl
jae
inc
push
mov
cwtl
aad
add
dec
mov
movsb
lret
incl
les
lcall
mov
stc
push
test
push
xor
inc
xorb
arpl
call
jge
xchg
add
lods
in
cmp
js
notb
mov
negb
aas
es
lea
jp
pop
cmp
or
xchg
mov
or
lds
leave
pop
cmc
insb
mov
mov
and
sbb
mov
out
lea
call
pusha
movw
jmp
add
test
sbb
ror
or
mov
cmp
test
cmc
clc
test
push
pushf
pushf
lea
je
pusha
jmp
stc
test
sub
pusha
pusha
lea
jne
jmp
clc
shrd
mov
push
pusha
pushf
cmpb
pushf
jmp
push
pushl
movl
movb
pushf
pushf
mov
pushl
popl
push
pushl
ret
add
add
adc
add
add
add
add
add
inc
adc
add
adc
add
add
inc
adc
dec
xchg
add
call
pop
jecxz
cmp
test
lret
jbe
mul
in
popf
aaa
ljmp
iret
test
call
sub
insb
jo
iret
fcmovu
xor
mov
int
loopne
ss
push
xchg
repz
into
ret
jno
dec
std
pop
and
dec
lea
loope
les
bound
stc
inc
test
adc
mov
insl
arpl
jns
push
add
xchg
jne
cmpb
arpl
inc
jbe
cmp
xorb
mov
cmp
test
lock
push
int3
dec
paddw
sub
aam
stos
and
leave
ret
lea
dec
fstpt
ds
cmp
std
mov
push
adc
mov
fidivrl
adc
mov
out
dec
sahf
add
dec
sbb
add
sub
adc
out
or
adc
mov
cmpsl
mov
aam
std
aam
push
fnsave
mov
adc
mov
mov
sub
loope
and
push
sti
nop
xor
hlt
sub
adc
push
rolb
out
xchg
sub
cmc
adc
lea
dec
jns
test
dec
jns
fsubrl
or
js
xor
int3
push
ficompl
shll
aam
int
jbe
cltd
jmp
push
fbld
pop
inc
adc
lcall
xchg
mov
and
mov
push
xor
jb
xor
rcr
inc
cs
mov
cwtl
or
inc
adc
insl
dec
addb
sub
jge
mov
loop
inc
cwtl
mov
push
xlat
fninit
xchg
dec
xor
inc
mov
push
xor
push
scas
fisubrl
int3
in
jg
push
cmp
or
icebp
rclb
jg
dec
and
aad
jne
cli
add
xor
jnp
stc
xchg
ret
ret
mov
mov
loope
stc
int3
jmp
adc
jne
repnz
xor
popa
ss
sbb
iret
jl
pop
inc
inc
inc
mov
dec
ret
loope
movsl
push
gs
mov
adcb
cmp
and
inc
cmp
repnz
movb
add
shl
lret
mov
xor
and
inc
bound
push
mov
pop
iret
xor
std
xor
divb
es
fldl
fisubs
mov
push
sbb
leave
jl
inc
fistl
cwtl
les
sub
mov
andl
outsl
jge
addr16
enter
and
xchg
cwtl
test
mov
loopne
mov
stos
les
adc
jl
pmaxub
dec
mov
inc
mov
pop
aad
rcr
xchg
lods
push
adc
mov
loope
pop
dec
xor
jbe
mov
ret
mov
jp
stos
orb
js
in
push
imul
sub
jp
xor
fidivl
mov
in
jmp
ret
stos
xchg
xchg
mov
sbb
sub
xchg
test
xchg
loop
mov
ja
cmpsb
inc
ds
mov
out
pop
bound
or
fucom
xchg
jnp
xor
je
cmpsl
sub
icebp
push
pop
out
js
nop
add
adc
ss
das
sbbl
or
imul
cld
or
aaa
addps
movsb
xchg
push
fidivs
enter
push
sbb
pop
imul
imul
or
cmp
neg
ss
rclb
pop
xchg
or
xchg
push
adc
ja
cmp
inc
stos
jb
or
sub
aas
inc
mov
fcomps
rcr
jo
fisubs
xor
push
aam
out
and
or
push
dec
mov
or
push
stos
adc
lahf
push
jmp
shlb
add
pushf
pop
mov
jmp
cwtl
and
and
mulb
call
add
iret
daa
int
pop
lcall
dec
mov
repz
not
mov
outsb
push
out
or
lods
jno
ljmp
push
jl
dec
fcoms
in
insb
xlat
dec
xchg
dec
xor
xchg
mov
fsub
cmp
xchg
adc
push
xchg
movsb
in
cmpsl
stos
scas
insl
push
mov
roll
fld
mov
add
cmc
and
cli
stos
leave
or
sbb
cltd
xor
lods
jne
loope
mov
jge
aas
sub
mov
outsb
mov
addb
jmp
pop
cmp
mov
xchg
sbb
daa
test
fidivrs
pop
mov
xor
push
pushf
hlt
jno
sti
xchg
fistpll
mov
mov
imul
pop
xchg
cmp
in
fwait
adc
cmp
jg
into
xor
add
sub
push
inc
test
push
pushf
mov
inc
loop
add
jge
out
out
fcom
xchg
loop
insb
add
dec
test
int3
dec
rcr
jne
sub
aam
inc
push
dec
pushf
inc
mov
mov
icebp
xor
mov
add
pop
fsubs
jne
call
std
aam
xchg
gs
fwait
mov
mov
outsl
sti
in
loop
out
jnp
dec
aaa
push
cmpsl
xchg
mov
dec
out
test
cmpsb
adc
ret
xchg
popf
xchg
xchg
rorl
out
bound
xor
dec
or
cmc
jp
xchg
cmp
mov
push
fsubrl
push
jns
jmp
lahf
pop
mov
ret
aas
pop
out
out
and
jecxz
jns
add
dec
stos
mov
aas
ljmp
ja
ljmp
nop
leave
xorb
ret
fs
or
shr
adc
mov
frstor
scas
out
push
fs
test
pop
aas
and
lea
xchg
hlt
and
aaa
mov
flds
inc
pop
or
push
test
rorl
cmp
dec
test
pavgb
hlt
jecxz
loop
mov
sub
and
jle
xor
xchg
movsl
fiaddl
jbe
jo
into
sbb
lds
push
cmp
sbb
push
pop
sbb
aaa
pop
add
xor
xlat
cmp
xchg
fs
jp
test
adcb
out
out
adc
je
mov
enter
dec
stos
icebp
jno
loop
gs
xorl
and
cltd
sbb
pop
xor
xchg
test
imull
shll
fs
xlat
fmulp
aas
imul
leave
dec
mov
shll
mov
jne
jb
popf
xchg
jo
mov
out
pop
enter
cmpsb
sarb
sarl
dec
pop
fldl
ror
aad
sar
xor
xor
jg
mov
clc
aas
iret
mov
shr
mov
outsl
jle
test
jge
jo
mov
fistpl
push
out
hlt
jge
cwtl
or
lcall
mov
cmp
add
mov
cmp
or
mov
test
mov
loopne
rcl
int
stos
push
lds
push
aas
mov
sbb
xlat
xchg
into
inc
sub
pop
stos
push
xor
and
in
sbb
aas
push
enter
nop
pop
cmpb
enter
or
cld
and
xchg
popa
fidivl
ljmp
dec
and
pop
sahf
ss
loopne
pop
and
xor
pop
push
cmp
push
sbb
push
in
sbb
xor
xorl
mov
pop
pop
push
inc
xlat
jp
inc
cli
xor
fimuls
push
in
ficomps
jmp
loop
data16
lret
add
jne
sbb
sub
push
dec
cmpsl
stos
in
fmull
xor
call
jnp
xlat
insb
push
push
jp
sti
test
sahf
pop
adc
mov
rolb
cmp
pop
sarb
stos
adc
jbe
shl
vpunpckhbw
push
inc
dec
cmp
mov
imul
jl
add
adc
addr16
test
addr16
xchg
mov
lock
push
sub
dec
gs
mov
mov
xor
mov
rcrl
cltd
loop
xor
jae
arpl
int
cld
aad
stos
aaa
cli
push
sub
hlt
sbb
push
loopne
mov
or
pop
add
sbb
mov
dec
into
cmp
pop
int3
mov
inc
push
in
movsb
mov
outsl
shll
pop
xor
xorl
into
ljmp
mov
repnz
dec
xchg
xchg
pop
rcrb
lret
or
fisubrs
jmp
jnp
shrl
aaa
sub
cmpsl
cmp
cmp
jp
iret
cmp
mov
notb
jae
ret
xchg
push
das
xor
loope
inc
and
xchg
mov
jecxz
insl
and
movsb
cmp
lss
xor
lods
pop
subb
leave
icebp
rcrl
add
test
enter
push
xor
add
xchg
ds
pop
int
jl
call
pop
jno
or
clc
fdivp
mov
popa
push
mov
jae
xchg
sbb
cld
fisubs
xchg
xchg
rcr
jbe
push
push
push
loope
insb
and
rcrl
dec
shr
je
mov
dec
mov
mov
inc
cld
imul
es
test
std
jne
fcompl
jns
rolb
idivl
loop
out
popf
jle
das
jecxz
mov
das
or
sbbl
jmp
push
xlat
into
sbb
rcr
jb
gs
test
iret
cmc
push
cltd
inc
xor
mov
dec
call
stos
movsl
fdivr
dec
xchg
xor
lret
test
lret
jl
dec
nop
adc
push
imul
mov
lea
call
shrb
sarl
rcl
popf
adc
sub
xor
rcl
push
outsl
push
sbb
shll
jg
pop
insb
negl
mov
pusha
mov
mov
mov
xchg
mov
out
push
inc
pop
push
jno
cmc
adc
cmp
mov
sti
xchg
sub
jmp
dec
aaa
mov
jl
fdiv
outsl
mov
data16
adcb
xchg
mov
push
push
sbb
xorl
jno
xchg
sub
mov
cmp
pop
movsb
pop
jecxz
lret
sbb
inc
dec
je
sub
adc
jae
jl
or
add
dec
and
push
mov
int3
xlat
jns,pt
push
test
and
adc
fs
shrb
icebp
mov
test
mov
pop
out
stc
jge
fucomi
and
jg
push
stos
in
xchg
into
enter
leave
int3
and
test
inc
xor
add
sub
ja
test
cmp
pusha
movb
lea
jb
pushf
push
pushf
lea
jmp
test
pusha
push
call
test
sub
bt
jmp
lea
je
aam
cwtl
xor
test
aad
rcr
ror
mov
das
and
aaa
lahf
mov
rcl
jmp
pushf
movl
pushl
call
cmp
bound
add
and
js
push
addl
push
xor
ss
subb
scas
aad
dec
mov
ja
mov
or
nop
adc
sti
or
aas
jbe
rcrb
dec
lret
mov
dec
subb
shll
dec
pop
insb
imul
mov
mov
mov
dec
mov
in
pop
jl
push
aaa
in
std
xor
xchg
and
pop
and
sbb
push
call
pushf
push
lea
call
call
dec
movb
xor
pusha
pushf
call
movsbw
jmp
movl
pushf
mov
movb
movb
lea
jmp
push
movl
pushf
mov
movl
pushf
push
mov
lea
jmp
sti
lea
or
push
push
iret
cmc
cs
cmp
insb
or
and
sbb
or
pop
pop
mov
cmp
cmp
xor
je
fs
inc
jns
or
and
data16
and
je
insb
or
movhps
cmp
pop
pop
mov
xchg
cmp
sahf
jns
or
pop
pop
in
mov
insb
or
pop
mov
cmp
jg
insb
or
add
fnstsw
insb
or
mov
insb
or
pop
add
insb
or
lret
jg
insb
or
push
mov
test
or
and
aam
dec
jns
or
pop
pop
ljmp
insl
or
mov
and
sahf
jns
or
and
jge
repz
insb
or
ja
icebp
and
into
sub
or
std
pop
out
sbb
push
out
imul
pop
outsb
mulb
mov
insb
or
mov
fwait
stc
inc
jns
or
fs
adc
and
adc
mov
insb
or
jecxz
xor
insb
or
pop
xchg
out
les
arpl
pop
pop
add
das
xchg
cwtl
je
insb
or
pop
dec
push
mov
pop
sub
mov
les
and
mov
sub
bound
insb
or
jecxz
sub
jns
or
jmp
jl
filds
decl
ret
aaa
jns
or
pop
pop
xor
mov
mov
or
or
xor
xchg
fsubrs
fiadds
test
arpl
pop
pop
mov
insb
or
mov
and
jo
insb
or
cld
sarb
inc
jp
push
shrl
or
pop
pop
xchg
xor
aaa
jns
or
pop
pop
mov
lret
inc
arpl
pop
pop
add
fs
jb
clc
bt
cmp
pusha
lea
jae
xchg
clc
mov
neg
xadd
push
mov
sub
cmc
shr
btr
mov
cmc
jmp
clc
jmp
or
adc
add
adc
add
adc
add
sbbb
dec
jo
add
pusha
adc
add
add
add
mov
ljmp
jb
gs
xor
cs
insb
add
pusha
cmp
jmp
stc
call
pusha
cmp
pushf
call
cmp
test
pushl
popl
stc
stc
call
movw
movl
pusha
mov
mov
lea
jmp
iret
add
enter
push
xchg
popf
les
dec
inc
jle
out
fisubl
scas
loopne
lret
loope
adc
imul
push
sub
test
push
outsl
and
ljmp
xor
jb
cmp
pop
mov
sti
cmpsl
fisubl
clc
cltd
cmp
enter
mov
push
pop
jns
pop
scas
push
ljmp
lret
push
rcll
inc
inc
ret
ficompl
xor
subb
sub
jns
xchg
imul
lods
stos
subb
mov
dec
jns
inc
xchg
addr16
lds
bound
lret
and
jo
arpl
stc
mov
cld
test
pop
jae
jo
xchg
cli
inc
xor
fnstsw
add
pushf
loop
push
aam
push
scas
jne
mov
sub
cwtl
push
dec
mov
lds
push
rcrb
cli
test
mov
jne
mov
or
xchg
dec
adc
testb
inc
jb
int
repnz
xchg
inc
push
repz
or
mov
mov
jge
jge
fdivs
int3
mov
lret
xchg
push
movsb
jg
push
adc
mov
sub
mov
mov
outsl
adc
inc
loope
adc
adcb
call
test
jp
sbb
aam
insl
push
sbbl
fwait
pop
stos
das
shrl
cmp
fsubs
cmp
adc
out
cmp
sbb
cmp
imulb
ret
sarl
mov
mov
adc
ja
shl
pop
fsts
cld
movsb
out
adc
push
fistpl
das
dec
mov
mov
shr
xchg
adc
ja
cmpsl
stc
addr16
fisttpl
xchg
mov
xor
out
pop
sbb
subl
adc
sbb
outsl
stc
mov
push
scas
aaa
cwtl
cs
insb
ret
sub
sbb
push
imul
or
fdivrl
xor
in
stos
or
and
fwait
and
lahf
js
mov
pop
lods
jp
std
mov
sub
fwait
xchg
mov
mov
into
dec
aaa
xlat
shr
dec
dec
or
adc
out
xchg
mov
and
aad
lahf
insl
pop
je
dec
add
lods
ret
cmp
mov
leave
insl
jg
xchg
or
mov
nop
push
outsl
adc
push
pop
lret
adc
xchg
fnstsw
jge
cmc
mov
loopne
mov
mov
jl
mov
cmp
cs
outsl
fwait
loope
mov
aaa
insb
int
inc
push
pushf
in
push
or
int
ret
push
dec
es
jg
adc
hlt
rcpps
push
pop
xor
pop
mov
leave
mov
sbb
mov
es
stc
or
jle
das
mov
sti
out
stos
cmpsl
dec
lret
scas
cmp
dec
fistl
pop
je
call
add
adc
jbe
in
cmp
sti
ds
mov
jl,pn
mov
hlt
ja
ja
sarb
gs
movsb
pop
cmp
add
sahf
push
sub
insb
lds
je
cmp
js
repz
rcll
mov
adc
lea
ds
lock
xchg
lret
adc
cmp
cli
push
dec
push
adc
repnz
mov
xchg
imul
enter
insb
hlt
xchg
lcall
aam
loope
jg
mov
aam
mov
and
arpl
mov
jl
nop
movsb
xchg
add
sub
es
test
and
stos
sbbb
sahf
push
push
mov
add
pop
rcrl
clc
pop
pushf
jmp
lea
je
jmp
jmp
sub
bsr
cmp
and
mov
test
cmp
cmc
cmpb
pushf
pushf
pushf
pushl
lea
jne
das
sub
aaa
ror
mov
rol
dec
pushf
add
sar
cmp
sbb
mov
jmp
add
dec
gs
popa
addr16
outsl
js
add
sub
frstor
mov
shrl
jo
shll
mov
cmp
sbb
sub
lcall
ret
into
push
adc
stos
jno
add
hlt
test
xchg
data16
stos
xor
repz
ffreep
xor
cli
shrl
mov
sub
rcr
daa
lods
mov
loop
les
jno
lret
cwtl
in
add
mov
dec
test
jo
jbe
sbb
cmp
mov
xchg
inc
add
add
popa
xchg
mov
push
xchg
mov
sbb
mov
jnp
adc
daa
jp
sbb
and
lcall
xchg
inc
and
sub
add
push
and
inc
cltd
loop
xor
fsubl
imul
and
mov
xchg
push
ljmp
adc
mov
popa
repnz
lods
fnstsw
nop
sbb
push
push
sub
addl
or
test
cmc
cs
ljmp
jecxz
stos
push
fists
cmp
lea
clc
in
and
fistpl
nop
add
cmp
add
shlb
stos
sub
pusha
movb
lea
je
push
pop
mov
jmp
jmp
in
pop
mov
xorb
cltd
je
pop
hlt
movsb
inc
test
cmp
push
and
ret
or
mov
loope
scas
push
fisubs
cmp
dec
add
add
int3
pusha
data16
stc
sbb
xchg
hlt
mov
adc
stc
lret
xchg
mov
cmp
test
into
test
jns
and
ror
leave
push
daa
add
std
pushf
xchg
lret
scas
pop
std
rorb
fists
loope
mov
xchg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
in
jo
inc
and
mov
fs
jmp
push
adcl
add
lods
push
sbb
out
mov
enter
cmp
add
mov
mov
in
mov
pop
mov
lock
pop
mov
jnp
or
sar
cmp
xchg
pop
fcoml
xor
xchg
sahf
push
add
push
sub
push
jmp
aas
adc
add
and
inc
mov
mov
jl
adc
xor
fs
lock
pop
es
and
sbb
adcl
mov
pop
gs
imul
jne
pushf
inc
movb
pusha
bt
rol
push
push
push
stc
xor
clc
cmp
pop
lea
pushf
setne
mov
pushl
call
lods
lock
jge
inc
xor
and
add
fsubs
test
or
push
out
mov
into
mov
mov
imull
push
pop
fistpll
clc
insb
add
stos
js
xchg
mov
jecxz
add
cmpsl
call
jo
andb
int3
ret
outsb
les
hlt
test
xchg
fwait
enter
aad
mov
stos
cmpsl
adc
jp
dec
movsl
mov
imul
inc
mov
test
jmp
incl
mov
ljmp
xor
out
push
sub
pop
and
mov
pop
divl
ret
pop
dec
loop
pop
aaa
test
lods
mov
cmp
add
negb
fiadds
inc
clc
xchg
sub
lret
lss
lds
out
sub
push
lret
into
mov
cmp
in
popf
cmc
jnp
mov
mov
gs
and
push
arpl
into
ficoms
clc
in
js
push
cwtl
aad
lods
sarl
inc
mov
pop
lds
out
push
enter
inc
or
jns
add
or
jnp
mov
fstpl
pop
pop
jle
aam
sub
mov
scas
jmp
push
xchg
mov
fstl
test
dec
loop
fstps
es
cmp
orl
mov
xchg
cli
into
stos
ficomps
ljmp
sbb
pop
pop
lods
cmpsl
movb
stos
outsl
aam
loop
scas
aam
aaa
lods
or
sarb
mov
cmp
adc
xchg
sahf
rol
push
lock
bound
fsts
add
mov
jp
bound
pusha
push
jmp
cltd
shrl
push
insl
fwait
jecxz
mov
add
mov
or
cmp
stc
pusha
and
cmc
jmp
sub
jmp
movl
pusha
mov
mov
pushl
pushf
pushl
ret
imul
pushl
bt
test
add
pushf
pusha
push
movb
lea
jmp
pushf
jmp
inc
movb
stc
rol
stc
push
xor
jmp
imull
cwtl
aad
adc
stc
adc
fcomip
fadd
and
adc
adc
and
fldenv
inc
cmpsl
dec
hlt
cld
inc
sub
jo
sbb
ja
pop
or
clc
sub
lea
mov
fnstsw
ds
lds
inc
xchg
mov
mov
popa
testb
dec
fwait
mov
dec
outsb
cmc
push
call
clc
pusha
test
or
pusha
jmp
mov
call
movl
pushf
pusha
lea
jmp
pop
add
or
mov
add
shr
xadd
mov
bsf
sub
add
bswap
mov
bswap
mov
mov
push
call
movzwl
shld
rcr
sbb
mov
cmc
pushf
bt
pusha
add
clc
mov
mov
test
call
lods
bt
ror
stc
stc
pushf
sub
call
pushl
call
lea
je
test
clc
cmp
pusha
lea
je
pusha
pusha
cmp
jmp
jmp
push
lea
je
stc
call
cmp
push
cwtl
aad
lcall
jecxz
mov
pop
and
pop
aas
notl
adc
add
les
add
sub
jecxz
pop
in
pop
sub
sahf
lahf
sub
repz
inc
mov
jmp
cltd
in
mov
fs
push
push
or
or
mov
stos
bound
sbb
fnsave
out
xchg
xorb
loopne
inc
fwait
adc
mov
in
fdivs
mov
dec
pop
ret
call
add
dec
push
cwtl
aad
add
int
clc
lahf
cmpsb
insb
mov
inc
adc
adc
int3
jmp
outsb
mov
popa
lahf
loop
mov
xchg
mov
dec
pop
xchg
stos
or
mov
cs
pop
pop
loope
xchg
ljmp
cmpsl
sahf
leave
mov
or
or
sub
call
add
pusha
pushf
movb
pushf
lea
jmp
sub
aad
push
xchg
cmp
test
cli
jl
jmp
imul
cmpsb
rcrl
inc
dec
out
mov
and
add
test
cmp
jge
or
stos
mov
cmp
gs
lret
xchg
adc
and
stc
clc
mov
pop
mov
lret
add
rorl
loope
call
jmp
call
pushf
movb
call
pushf
lea
pusha
movb
call
movb
dec
clc
pushl
cmp
call
lea
jne
rcr
mov
stc
inc
sub
btc
push
and
bsr
lea
bt
pusha
sub
bt
pushl
popl
pusha
test
cmp
push
lea
jns
pushf
pusha
lea
ja
rol
add
dec
shl
sub
xor
rol
bsr
add
xor
call
stc
cmc
imul
pusha
add
pusha
mov
pushf
lea
jmp
xor
aad
mov
inc
lods
xchg
aaa
pop
test
jno
hlt
cmp
sti
int3
out
sarl
pop
mov
cs
jbe
iret
ljmp
stos
ret
js
push
xchg
mov
aaa
imul
add
xor
sahf
aad
inc
push
cmp
or
nop
sub
inc
pop
jl
pop
push
cwtl
aad
call
int
jbe
dec
fwait
pop
hlt
sub
and
sbb
dec
lahf
add
subl
pop
and
mov
add
mov
pop
cmc
jo
pop
add
jmp
push
xor
cwtl
aad
adc
sbb
pop
dec
xchg
in
mov
pop
cs
sub
and
push
repnz
push
pusha
jnp
addr16
lea
sub
fld
xor
mov
jns
sub
add
push
fmul
sbbl
out
aad
js
arpl
popf
adc
movl
jne
push
movl
pusha
pushf
pushf
lea
jmp
pusha
lea
call
pusha
lea
jmp
lea
je
test
stc
add
pushf
pusha
pusha
lea
jmp
push
lea
jae
adc
test
rol
mov
shr
mov
bsr
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
push
fwait
dec
cwtl
aad
mov
jg
sub
xchg
mov
dec
icebp
cmpsb
jg
andb
out
lods
fmull
cwtl
mov
adc
mov
push
xchg
cmpsl
xor
push
or
fs
pop
push
repz
mov
push
stos
jle
aaa
rorb
movl
jecxz
dec
inc
push
popf
or
xor
sti
jp
sbb
sarb
cs
mov
fstl
or
lea
je
test
add
test
cmp
cmp
call
pop
mov
pop
push
lea
pusha
mov
mov
mov
bswap
pusha
movzbw
lea
je
pop
pushf
pusha
pushf
push
pushl
ret
xor
jge
cwtl
aad
mov
loope
xorb
mov
xor
fs
jle
dec
adc
cwtl
lahf
pop
xchg
imul
out
es
aad
adc
pop
popf
jmp
mov
pushl
daa
test
mov
clc
add
adc
cmc
sbb
or
mov
pusha
test
pushf
lea
je
stc
bt
stc
clc
sub
cmc
call
add
add
xor
stc
inc
cmc
push
bts
btr
rcr
mov
pushf
sub
test
push
movsbw
das
push
test
and
stc
push
movsbw
das
movsbw
adc
sub
setl
jmp
call
xor
clc
bt
test
mov
cmp
cmp
add
stc
pushf
pushf
test
pushl
jmp
movl
movb
pushf
lea
jmp
adc
lea
pushf
pushl
ret
stos
fbstp
aad
lds
jp
cmpsl
int
cltd
shlb
cmpsb
jbe
xorb
pop
jnp
fs
dec
xchg
aaa
xor
es
hlt
xor
jmp
mov
jecxz
lret
outsb
popa
movsb
outsl
jnp
aad
inc
pop
fisttpll
mov
arpl
mov
push
imul
fldt
pop
cltd
xchg
add
mov
insb
push
sub
inc
pop
cmc
lret
ret
inc
jge
cmp
call
inc
pushl
inc
pusha
mov
pushf
push
lea
call
push
adc
pusha
lea
jae
push
call
repnz
pusha
lea
jmp
cmp
test
pushf
movb
lea
je
cmc
clc
setg
ror
add
and
sar
sar
test
mov
pushf
add
pushf
stc
mov
bsf
pop
mov
pushl
cmp
bt
cmp
push
call
ja
stc
dec
cwtl
aad
mov
pop
sbb
lods
xchg
pop
hlt
fstpl
in
outsl
das
sbb
dec
scas
ss
add
test
leave
cmp
or
imul
fstps
jne
add
xor
out
daa
clc
pop
lds
fidivl
lods
dec
mov
out
ror
popa
and
in
int3
test
mov
sahf
adc
sbb
mov
or
inc
bound
xor
pushf
lea
call
jmp
clc
movb
jmp
inc
lds
mov
inc
push
inc
call
les
inc
call
lds
shrb
inc
inc
inc
mov
mov
inc
jmp
mov
add
clc
jmp
aad
rorb
dec
fdivrs
pop
gs
jns
in
sbb
push
imul
or
pop
icebp
mov
test
and
or
mov
pusha
push
sbb
pop
push
add
jns
inc
fcomi
inc
mov
or
xchg
xor
mov
call
sbb
cwtl
aad
cld
andb
jnp
dec
inc
and
cmp
inc
test
in
les
sub
scas
repnz
mov
in
push
pop
push
cmp
loop
fildll
xchg
add
jae
jns
xchg
in
ret
xlat
lcall
jmp
btr
aas
push
aam
aam
inc
ror
mov
shr
sub
das
push
sbb
bsr
bt
pusha
mov
btr
mov
jmp
call
mov
lea
ja
shr
jmp
fcomps
cwtl
aad
fcomps
ljmp
mov
out
cli
out
pop
or
adc
ret
and
lret
pop
stos
je
les
or
or
stos
push
and
insl
push
mov
adc
sbb
sbb
into
test
jmp
mov
mov
mov
cmp
pushf
jmp
push
clc
repnz
call
rcr
shld
bswap
inc
mov
bt
push
pusha
cmpb
mov
lea
jne
aaa
bts
sub
mov
or
shl
movzbw
mov
push
add
neg
test
pushf
mov
clc
jmp
cmp
movw
lea
ja
pusha
dec
dec
inc
push
inc
setns
shl
sbb
xchg
aam
aad
cmp
shrd
mov
neg
stc
dec
shr
mov
bt
pushf
call
pusha
push
call
jmp
lea
jae
push
jmp
pusha
push
jmp
pushf
lea
jne
movsbw
pushf
lahf
push
movb
lea
jmp
lea
pushf
mov
pushl
mov
pusha
xchg
lahf
bswap
pop
mov
bswap
lea
pushl
xchg
setne
pop
pushl
pop
movl
pusha
lahf
lea
call
mov
bswap
setp
lea
pushl
movl
pusha
pushl
popl
mov
pushl
ret
pushf
call
lea
add
sar
mov
pusha
jmp
bt
bt
jmp
lea
ja
clc
cmc
cmc
clc
imul
pushf
add
pusha
mov
lea
jmp
inc
pushl
push
pushl
lea
jmp
movb
pusha
pop
movzbw
jmp
test
add
call
int3
popf
pushf
push
push
movl
movb
call
mov
bt
cmp
shr
cmp
mov
pusha
repnz
pusha
pushf
push
jmp
call
lea
jne
push
pusha
movl
push
movb
pushf
call
jmp
cmp
aad
std
in
mov
jbe
pushl
sbb
inc
pop
pop
sbb
lds
push
or
loopne
ret
je
cli
fwait
xor
stos
and
sbbb
insb
sub
pop
ss
mov
das
nop
and
dec
dec
or
pusha
cltd
insl
out
jo
hlt
or
sbb
sbbl
xchg
push
aas
aad
shlb
data16
push
movb
pop
lea
push
mov
lea
call
pushl
jmp
pusha
mov
pusha
lea
ja
pusha
mov
pushf
lea
jb
pushf
push
cmpb
call
dec
fucomp
inc
cwtl
aad
out
cmc
faddl
popa
int
jp
xlat
adc
pop
adc
cli
inc
jo
xor
mov
mov
jl
mov
rorb
std
cmp
add
aaa
jg
xchg
and
lcall
sbb
test
adc
add
sbb
popa
xchg
scas
movsl
cld
sub
dec
sti
cltd
dec
xor
xlat
inc
cwtl
aad
pop
or
push
mov
jno
mov
insb
int3
mov
sbb
cmpsl
pop
xor
mov
or
sarl
and
movsb
push
flds
sbb
sahf
pop
xor
mov
pop
inc
xor
and
daa
ret
sbb
or
mov
xchg
lcall
mov
add
sti
test
ret
test
pop
sub
sbb
pop
xor
lret
test
dec
repnz
stos
ss
mov
das
lret
jecxz
mov
mov
sub
adcl
mov
pop
or
add
outsl
fs
loopne
sbb
mov
cmpsb
fstps
adc
mov
subb
adc
aad
xor
fsubl
test
xor
mov
imul
ret
lea
add
add
aad
ja
mov
xchg
stos
jo
cli
int3
cmpsb
lock
int3
out
movsb
sbb
in
sbbl
gs
psubb
mov
sub
test
push
out
cmc
adc
cmp
aas
mov
xchg
mov
push
adc
and
xor
lahf
xor
pushf
push
lea
je
pusha
lea
jmp
pushf
mov
pushf
push
pusha
pushl
ret
bsr
mov
adc
xor
pusha
xor
mov
clc
lea
jnp
stc
call
push
movw
lea
jne
adc
bts
movsbw
mov
clc
jmp
int3
aas
dec
inc
cwtl
aad
out
aad
and
push
inc
push
jg
in
lcall
cmp
pop
sbb
outsb
mov
jmp
pop
pop
stc
xchg
in
sbb
ljmp
mov
or
inc
dec
inc
push
js
adc
outsb
orl
imul
jae
inc
lret
bound
adc
mov
sub
lea
je
pushf
stc
stc
clc
cmp
lea
push
pushl
pushf
pushl
ret
bt
add
push
movb
mov
mov
lea
jmp
mov
pushf
lea
ja
cmp
clc
add
call
cmc
xor
sub
sar
add
push
bsr
mov
xor
mov
call
call
in
nop
inc
cwtl
aad
add
sub
pop
popf
add
fdivp
das
fs
fistl
jo
jp
jnp
nop
inc
or
sarb
int3
push
insb
sbb
jmp
js
pop
fdivl
divb
stos
ljmp
loop
repz
push
xlat
insl
sbb
adc
inc
and
pop
out
inc
cwtl
aad
int3
push
fcmovnb
mov
lods
imul
scas
js
divb
mov
inc
push
jnp
add
stos
addr16
jmp
sbb
mov
icebp
loop
pop
sub
jne
ficoms
int
inc
add
dec
outsl
lahf
jno
mov
mov
inc
or
lret
cwtl
out
fincstp
dec
mov
push
push
xlat
mov
into
cmp
pop
cmp
lahf
out
dec
push
loope
test
mov
dec
mov
push
fwait
stc
into
ret
fmuls
movsl
pop
hlt
stos
mov
jae
mov
mov
jl
sbb
stc
adc
mov
shl
mov
inc
mov
mov
clc
shr
mov
clc
shl
neg
cmc
sub
lea
not
pusha
xchg
lods
pushf
rcl
rcl
rol
ror
shl
sub
inc
neg
mov
pushl
clc
jmp
dec
es
lret
jno
push
les
xchg
pop
inc
dec
xor
lret
mov
push
mov
mov
int
imul
pushf
sahf
push
pop
sbb
shrb
scas
adc
in
stc
lcall
insb
jg
jno
ds
adc
aaa
dec
jecxz
cwtl
aad
sub
outsb
xor
je
inc
enter
shll
mov
mov
add
cmp
imul
dec
outsl
and
je
jle
pushf
icebp
and
adc
aas
dec
mov
xor
and
les
cmp
or
enter
push
shr
neg
rol
jl
mov
push
bt
sub
pusha
push
pushl
movb
rep
not
movzbw
lea
jl
pop
push
movb
mov
lea
jmp
pusha
jmp
lea
jb
stc
stc
cmpb
jl
jne
ror
rcl
cmc
xor
mov
test
add
cmp
movzwl
shrd
bts
rcl
mov
clc
push
test
stc
add
jmp
call
movb
call
push
push
repnz
jmp
sbb
inc
cwtl
aad
repnz
test
stc
cmp
fcoms
jo
xabort
ja
in
add
push
fildl
or
idiv
in
mov
xchg
shrb
and
and
xor
fwait
mov
rol
in
imul
mov
outsl
es
leave
fucomip
popf
lods
and
push
int
sahf
adc
sub
push
out
adc
dec
mov
pushf
xchg
mov
test
push
add
test
out
pop
cmp
push
stos
fsubrl
mov
jae
pusha
rol
jo
push
pop
je
test
insb
or
ljmp
out
xchg
cmp
sub
pop
pop
call
loopne
out
adc
cmp
adc
adc
sub
mov
lcall
into
push
fists
pusha
out
pushf
fs
out
orl
push
outsb
neg
ljmp
inc
mov
out
xrelease
dec
cmpsb
jl
xchg
dec
test
inc
and
lea
pushl
and
fs
jmp
lea
jae
ja
bt
pushf
imul
test
add
movb
mov
pushl
mov
lea
jmp
pushl
call
dec
and
hlt
fildl
test
adc
pop
and
push
mov
push
loopne
scas
aam
and
int
jns
mov
cs
jge
pop
fcoml
shlb
mov
fnstenv
xor
bound
ret
mov
mov
xchg
pop
dec
lods
sbb
arpl
push
in
inc
and
and
cmp
loopne
cld
xlat
inc
jmp
mov
test
jge
push
test
mov
push
lods
add
mov
mov
iret
push
lret
lea
jae
cmp
pusha
xor
pushf
jmp
ror
jmp
pushf
mov
lea
call
jmp
movl
dec
movsbw
test
shrd
mov
cmp
movl
stc
cmc
cmp
movw
pushf
jmp
test
mov
mov
lea
je
shl
shl
mov
jmp
pushf
stc
pushl
popl
pusha
cmp
call
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
sarl
and
sbb
inc
and
insl
clc
jne
pushf
pushf
lea
jmp
movsbw
rcr
ror
add
bts
xchg
bsf
clc
shr
jmp
pushf
lea
je
shl
add
ror
mov
cmp
bt
add
call
jmp
cli
mov
test
negl
gs
clc
dec
in
scas
or
pop
cmp
aam
pop
inc
out
cmc
fwait
cmp
rcl
test
movsl
mov
inc
test
or
es
xchg
out
rcrb
mov
cmpsl
leave
in
cmp
fstpl
pop
pop
inc
push
popa
push
pop
push
mov
mov
push
pusha
lea
jae
setg
mov
pushf
inc
jmp
mov
rcl
neg
mov
bt
pusha
jmp
lods
test
cmc
push
test
xor
clc
pushl
ror
jmp
jmp
lea
jbe
cmp
mov
movsbw
add
pushf
clc
mov
ror
add
shrd
movsbl
ror
test
movl
add
neg
mov
sub
pushf
cmp
push
movw
pusha
lea
jbe
ror
cmp
sar
rcl
sub
not
clc
mov
shld
sbb
push
call
bt
cmc
test
add
lea
push
shl
add
mov
stc
cmc
call
mov
jmp
pop
dec
in
cwtl
aad
in
outsl
push
cmp
push
pop
cld
mov
cmpb
lods
mov
push
mov
mov
pop
shrl
dec
jae
cmp
dec
subl
mov
sub
lods
cmp
push
adc
in
loop
xor
cwtl
push
or
sbb
xchg
repnz
lcall
cs
cmp
das
push
mov
cld
arpl
or
pop
mov
push
jmp
lods
pop
pop
mov
les
dec
insl
es
js
and
and
dec
xlat
mov
pushf
add
scas
inc
mov
outsb
and
mov
add
add
idivb
xor
pushf
movl
movb
pushf
lea
jmp
lea
jmp
pushf
pusha
not
lods
bt
call
mov
bound
loope
mov
shlb
mov
jmp
movsl
in
decl
add
adc
shr
dec
out
sbb
repz
pop
push
pop
int3
jl
sbb
xchg
into
inc
scas
mov
adc
loope
mov
outsl
stos
xchg
rorb
insb
cs
ds
es
add
cmpsb
sbb
xor
dec
sub
fcoms
jge
sti
lds
flds
cmp
dec
jg
js
jmp
push
mov
fs
je
cmp
cmc
test
sub
pushf
bt
movl
cmp
pushf
pushf
call
movl
mov
ja
or
pop
mov
out
stos
filds
daa
sub
sbb
add
sub
cmp
push
dec
call
pop
mov
sbbl
lahf
out
push
mov
jnp
or
hlt
pop
sub
leave
push
sarl
push
and
fldenv
dec
insb
jne
popa
insl
pop
jp
pushf
ja
dec
or
and
and
test
outsl
inc
sbb
or
cmpb
into
pop
mov
pop
nop
push
lds
inc
push
cmp
lret
sub
or
divl
fdivrs
leave
sbb
mov
cmp
aas
xchg
sub
xor
imul
ljmp
jge
pusha
sub
or
jnp
mov
push
jl
inc
loop
add
lret
xchg
pop
add
inc
dec
movb
mov
movb
mov
xchg
ficomps
sub
xor
sub
pop
aas
jnp
or
orb
pushf
fcoms
add
jp
popf
push
pop
iret
jp
and
xchg
xor
cmpsl
and
imull
fistpl
inc
xchg
ror
sbb
lock
sub
jge
pop
xor
cs
adc
fsubrl
test
xchg
jbe
pop
pop
out
ss
enter
mov
jne
movsb
jns
push
shll
std
pop
xor
xchg
jg
insl
jle
movsb
cld
adc
sbb
pop
mov
mov
cmp
mov
xor
movl
push
jmp
popa
imul
aad
lods
xchg
stc
test
push
sbb
fadds
ret
xor
and
lret
fsts
je
mov
test
icebp
push
pop
jo
outsb
jmp
not
jmp
call
sub
aad
nop
idivl
mov
mov
sahf
mov
fsts
inc
iret
je
jecxz
orb
mov
mov
mov
in
fwait
mov
mov
jecxz
pusha
movsb
sub
testl
xor
push
mov
int3
xchg
loopne
or
stos
sbb
inc
lea
stc
jmp
cmp
mov
or
and
pop
pop
xchg
xchg
or
xor
push
pop
xor
imul
cmc
mov
xchg
fsts
popf
xchg
pop
cmp
lock
test
lret
adc
cli
mov
cmc
jb
jb
dec
xchg
adc
push
push
imul
and
jno
mov
mov
je
push
lcall
add
pop
sbb
or
pop
and
push
push
rep
stos
dec
nop
dec
jae
cmpsb
mov
sub
ret
int3
pop
lcall
out
fnstenv
add
or
fstp
sbb
push
scas
mov
adc
sbb
ficomps
add
inc
daa
mov
mov
rclb
movsl
mov
lock
or
out
and
adc
test
pop
xlat
jb
dec
and
ss
cmp
adcl
rcr
aas
mov
adc
stc
test
test
inc
jbe
test
call
fcomp
fnstcw
scas
hlt
cmp
aas
ss
aad
mov
push
lcall
mov
bound
bound
pop
insb
inc
push
xchg
das
jnp
jge
xor
jmp
scas
out
mov
shl
aas
dec
popl
inc
cmp
sub
jle
stos
inc
xlat
scas
add
stc
sti
adc
inc
pop
adc
fsubrs
or
popf
fwait
or
mov
hlt
and
hlt
adc
or
cmc
je
mov
mov
into
std
xor
lret
ret
cmp
mov
dec
sub
insl
ret
jae
mov
aam
mov
xchg
pusha
fidivs
xor
imul
cld
loop
xchg
cmp
inc
cwtl
mov
in
push
int3
out
xchg
das
push
fsubrs
pop
jno
sub
jl
mov
xchg
aam
hlt
and
xchg
movsl
and
dec
repnz
inc
popf
jno
int
ds
arpl
arpl
xor
pavgw
rcrb
add
loopne
std
xchg
int
xlat
fdivs
mov
jmp
sahf
test
test
leave
aad
and
js
cwtl
jecxz
jecxz
and
jp
adc
sbb
and
cs
push
or
xchg
cmp
cmpsl
dec
sbb
pop
idiv
cli
mov
xor
cmp
add
arpl
xchg
sub
pop
fs
call
mov
movzbw
pusha
mov
seto
call
call
call
pusha
mov
lea
push
call
lea
not
pushl
movl
setb
lea
push
movl
push
call
ds
jmp
pop
mov
cwtl
sub
pop
hlt
push
leave
es
pop
sbb
int3
adc
add
xchg
in
add
pusha
jmp
mov
jp
test
cmpsb
jle
bound
xor
jecxz
pop
mov
adc
dec
mov
nop
rcll
lock
mov
popf
fmuls
clc
loope
dec
add
out
leave
adc
mov
cltd
and
xor
add
out
gs
call
imul
pushf
movw
pushl
xor
movw
jmp
xor
movb
cmp
movzbw
lea
lahf
cwtl
movsbw
movzbw
mov
pushl
call
pushl
lea
jbe
test
bt
cmc
sub
sub
mov
pushf
rol
pop
mov
call
pusha
pusha
movb
lea
call
jmp
ds
xor
popf
subl
mov
orb
push
movsb
inc
ja
dec
andb
out
add
call
xor
push
sbb
pop
rolb
test
inc
stos
adc
jns
mov
or
xchg
js
fnstcw
adc
inc
loop
imull
ret
and
test
dec
mov
mov
scas
push
aad
cmpl
mov
mov
pop
adc
fsubrs
lock
je,pn
mov
out
mov
leave
xor
out
lds
cmpsb
lea
subl
stc
mov
cmovns
cmpsb
jl
ds
and
mov
nop
xchg
daa
aaa
test
mov
mov
shl
in
push
adc
adc
inc
jne
icebp
in
mov
repnz
sbb
push
insl
push
mov
movsl
lods
call
cwtl
cmpsl
inc
mov
cmpsb
in
lret
int
sbb
inc
sbb
sbb
adc
aaa
call
mov
clc
cmp
pushf
cmp
cmp
jmp
test
scas
xor
mov
cld
arpl
mov
andl
push
add
pushf
jle
pop
js
cmc
or
xchg
ficomps
sbb
mov
xchg
xor
call
pop
scas
mov
jge
into
mov
in
hlt
stos
mov
sub
in
lock
mov
addr16
xchg
lret
add
loop
scas
push
adc
push
mov
mov
adcb
insl
les
adc
notb
pop
test
popf
xor
lea
clc
ds
lret
arpl
push
out
xchg
or
sarb
sti
jecxz
shll
arpl
out
sub
mov
or
faddl
sahf
stc
adc
filds
xchg
dec
inc
lds
lods
and
inc
mov
andl
loop
inc
pop
or
call
stos
cmp
sbb
ficoms
pop
int
add
cwtl
aad
aam
ret
dec
movsl
mov
into
test
shll
popa
shlb
test
sbb
icebp
xchg
sub
imul
xor
xor
sbb
cmp
fstp
into
int3
or
scas
scas
inc
xchg
and
popf
lahf
movsl
jecxz
loop
daa
sbb
mov
inc
ficoml
test
loope
ja
mov
cltd
cmpsl
insb
js
inc
jg
pop
dec
xlat
mov
ja
int
jbe
push
mov
cmp
adc
sbb
cmc
cmc
adc
mov
dec
fidivs
cwtl
aad
pop
addr16
push
sbb
test
int3
xchg
push
dec
dec
add
push
ja
sti
jl
insl
lods
push
mov
test
dec
repz
sub
aas
cmp
stos
sbb
outsb
xchg
sub
stos
lods
movsl
aad
es
movsl
jmp
xchg
jecxz
mov
pop
mov
jae
jg
pop
nop
test
inc
fwait
decl
sub
lods
pop
cmp
aad
scas
mov
inc
int
and
sbb
bound
aas
cmp
add
lods
lods
add
xchg
sub
jo
jbe
fnsave
stc
aas
pushf
movl
call
push
movzbw
mov
call
movb
movl
pusha
lea
jmp
jnp
push
mov
inc
call
into
push
xlat
das
cwtl
aad
out
xor
out
mov
jl
hlt
movsb
xchg
popf
adc
push
cwtl
or
orl
mov
leave
jae
lret
popa
pop
mov
jae
ja
jl
ror
pop
xor
pop
or
popf
aam
nop
xadd
pop
rcrb
add
jnp
or
fucomp
ljmp
dec
mov
xchg
pop
add
pop
sbb
data16
les
sub
adc
cmp
stos
lock
cmp
sub
push
adc
and
jnp
daa
xor
add
jl
or
xchg
add
inc
add
rcl
mov
pushf
pushl
pushf
cmp
pushf
pushf
lea
jb
stc
bt
push
cmp
jmp
or
aad
ja
inc
test
sub
pusha
addr16
jp
shrl
mov
push
test
cmp
mov
push
cli
sub
inc
inc
or
in
dec
or
leave
std
jecxz
js
ret
xor
add
mov
adc
adc
mov
add
push
xor
cmp
iret
int3
rorl
push
cmpsl
pop
je
xorb
add
jp
addr16
jg
pushf
cs
aad
incl
data16
es
cmpb
inc
xchg
push
push
inc
test
push
clc
fmuls
aad
ljmp
xor
inc
xlat
sub
dec
into
dec
clc
fisubrl
loopne
jb
fiaddl
and
jg
mov
and
inc
mov
adc
cwtl
pop
das
les
cwtl
aad
jl
imul
jo
xor
cs
push
and
fildl
lods
xchg
mov
xor
pop
xlat
pop
pop
pop
lahf
loop
lret
or
outsb
rclb
test
rep
pop
shlb
outsl
pushf
push
xchg
sub
mov
dec
push
sti
rcll
in
or
xor
cmp
test
mov
mov
pop
fs
or
stc
aas
cmpsb
jle
mov
mov
mov
sbb
gs
mov
ja
mov
dec
mov
adcb
inc
decl
mov
mov
jecxz
dec
pop
add
sub
inc
and
das
inc
jmp
push
into
add
lds
lods
js,pn
mov
ret
outsb
clc
push
fdivl
andl
jns
test
or
cltd
outsb
bound
push
loop
jge
add
fs
mov
sahf
mov
rclb
sub
adc
or
pop
add
cmp
bound
push
ret
cmc
test
test
jne
jp
xchg
dec
es
adc
inc
dec
lcall
mov
lea
jne
mov
bswap
movb
bswap
push
cwtl
call
adcl
aad
mov
inc
mov
mov
cmp
xchg
subb
mov
pop
push
scas
dec
or
xchg
jbe
out
rclb
xor
dec
clc
sub
jl
cmp
movsl
adc
mov
leave
jb
sti
es
adc
mov
mov
jbe
jmp
bound
cs
dec
popa
testb
repz
mov
leave
fisubrl
and
mov
iret
lds
mov
xadd
cs
jmp
in
imull
cwtl
aad
sub
ss
faddl
loopne
cmpsl
cld
movsl
aaa
mov
and
xchg
les
es
ror
in
ret
enter
mov
stc
mov
mov
jle
xlat
xchg
or
aas
push
or
xchg
mov
xor
push
inc
cmpsb
jae
xor
mov
jecxz
push
cltd
cltd
or
pop
xchg
cmp
popf
and
fistl
mov
and
test
cmp
stc
int3
cs
push
int3
push
cmp
xor
std
jnp
call
stc
sub
test
ret
ss
incl
fcmovu
jo
pushf
dec
sub
jmp
movsb
sbb
or
out
xchg
int3
and
mov
mov
xchg
leavew
push
fs
addr16
push
xchg
pop
pusha
push
into
jbe
push
rclb
jne
lods
and
cmp
pmaddwd
mov
push
xor
test
lock
mov
outsl
sub
xchg
icebp
add
and
mov
jecxz
scas
pop
cmp
add
test
in
or
dec
test
test
cmc
xor
bt
pusha
jmp
pushf
lea
je
pushf
movl
call
call
mov
movb
lea
jne
test
ror
shr
rol
mov
stc
cmp
call
clc
bt
sub
clc
cmp
push
pusha
lea
jae
pusha
lea
jmp
pusha
inc
pushf
push
mov
lea
pusha
pushf
lea
call
push
adc
pusha
pushl
lea
jae
pusha
pusha
push
pushf
lea
jne
pushf
stos
mov
pushf
mov
lea
jmp
roll
sub
lret
push
in
sarl
fcmovu
xor
mov
pusha
jecxz
ret
lret
into
pop
push
inc
adc
mov
mov
sbb
jne
js
push
das
imul
or
push
add
mov
jl
sub
iret
test
cpuid
nop
pusha
pushf
lea
js
push
pusha
movl
pusha
lea
jmp
pop
icebp
or
shrb
mov
xor
pop
or
mov
lret
xchg
xor
or
sbbb
cmp
ljmpw
sub
push
pusha
int3
xor
inc
rcrl
adcl
into
arpl
int
icebp
push
push
xchg
cmc
pop
inc
in
ja
in
adc
stc
fwait
mov
sbb
je
mov
xor
sub
jne
dec
add
xor
in
jmp
and
sub
rclb
dec
xlat
sub
cmpsl
mov
xor
adc
add
bound
cmp
or
adc
in
out
ljmp
ret
movsl
in
je
pop
inc
jge
aaa
movsb
lcall
sbb
arpl
xchg
jbe
mov
sahf
mov
lods
imul
inc
icebp
xor
mov
lock
cwtl
aad
pop
bound
std
xchg
push
imul
divl
xchg
inc
mov
push
jle
data16
scas
dec
xchg
dec
inc
add
push
pop
mov
mov
daa
imul
mov
adc
movsl
inc
jp
xchg
shll
cmpsb
sub
lea
int3
movsb
inc
shll
xor
xchg
nop
push
jp
adc
jle
aam
xor
xchg
push
daa
xor
inc
dec
js
lods
test
test
hlt
ja
or
xchg
ret
data16
dec
inc
mov
xchg
div
or
mov
push
mov
cmp
push
xor
mov
leave
test
inc
std
adc
push
dec
sti
and
ret
data16
ret
int3
sbb
lret
addl
xchg
insl
test
mov
out
mull
inc
pop
dec
pop
lret
out
outsl
daa
jne
and
push
lds
inc
ret
pop
xor
push
ret
rol
dec
adc
jb
jnp
into
cmpsb
mov
inc
movaps
jge
mov
nop
mov
sbb
sbb
sbb
cmp
pop
enter
aaa
leave
mov
mov
pop
les
sbb
add
test
aad
and
cmpsl
mov
xor
push
int3
lcall
in
lret
or
jae
sarl
adcl
xor
lret
jb
addr16
push
jge
dec
aaa
mov
clc
int
sub
xorl
ror
das
ret
mov
xchg
xchg
sub
mov
xor
sub
call
xor
dec
dec
cmpsl
or
xchg
xor
mov
loope
mov
inc
dec
out
inc
push
push
push
int3
xchg
leave
bound
sub
popa
les
xchg
scas
inc
shlb
push
aaa
inc
mov
aam
mov
and
es
push
out
inc
or
fnstcw
xor
jle
data16
pop
sub
adc
jns
mov
lea
jbe
push
push
gs
dec
sarl
mov
xor
dec
cmp
and
inc
jecxz
int3
imul
and
add
push
xchg
xchg
xlat
fsubrl
imul
aam
in
movsb
or
mov
leave
sbb
mov
or
push
cmp
inc
push
gs
leave
sub
mov
fildl
inc
xchg
sbb
int
rcll
ja
stos
mov
jne
adc
ret
xor
scas
jge
mov
ds
test
mov
ds
cmp
cmp
mov
lahf
mov
xor
aas
sub
xchg
loope
add
cli
jecxz
cli
test
imul
xor
xor
addr16
mov
inc
mov
leave
inc
adcb
jle
push
push
rcll
leave
rorb
into
setne
push
mov
cmp
cld
aam
gs
inc
inc
inc
jge
mov
ret
sub
xchg
jge
call
shr
nop
popa
inc
test
xor
aam
sub
shlb
push
xor
sahf
jne
jle
jg
inc
sub
mov
rcl
inc
test
negl
mov
push
nop
xlat
les
ja
out
lea
leave
mov
push
or
fldl
xor
and
out
and
adc
gs
out
inc
push
inc
cld
mov
jb
stos
or
stc
xchg
hlt
mov
cli
mov
lahf
mov
data16
subb
pop
jnp
xor
dec
mov
add
and
xchg
dec
mov
jo
das
inc
in
rclb
ja
movnti
mov
inc
stos
xchg
lret
dec
cld
lcall
mov
cmp
sub
mov
cmp
jle
mov
mov
sub
hlt
push
push
lods
ss
mov
arpl
mov
fiadds
out
add
mov
stos
lret
shlb
lcall
dec
xchg
dec
inc
roll
mov
lret
bound
shll
lods
leave
xor
mov
loope
movb
int
xor
mov
adc
mov
or
mov
aas
jp
push
loope
into
pop
and
shrl
xchg
in
orl
data16
sbbl
rclb
jmp
sub
inc
lods
bound
sbb
inc
jns
xchg
adc
xchg
sbb
lahf
out
into
jns
mov
jl
shrl
adc
leave
test
es
fs
movsl
stc
fnstenv
es
dec
insb
bound
test
int
inc
push
int3
ja
in
inc
push
xchg
xchg
xorl
imul
pop
or
push
mov
mov
adc
stos
xor
hlt
mov
xchg
mov
mov
loop
xor
push
nop
mov
and
pop
inc
xchg
scas
int
jp
jg
inc
lret
shlb
mov
adc
or
push
cwtl
pop
inc
adc
imul
jbe
rcr
and
mov
pop
insb
stos
sub
ss
sub
jp
jo
pop
test
in
adc
push
out
inc
and
shlb
mov
adc
cmpsl
mov
xor
aaa
ret
rorb
sarb
jns
or
cmpsb
and
or
and
out
dec
sarb
dec
xchg
mov
hlt
push
push
xacquire
stos
repnz
and
mov
jg
out
mov
mov
push
mov
push
stos
ss
outsb
test
push
lea
int3
enter
add
int
jg
dec
outsb
push
xchg
in
xchg
cmpb
mov
rorb
loopne
jns
ds
popf
mov
ret
scas
cmc
sub
lea
les
stos
lods
and
aaa
leave
sbb
dec
dec
jo
inc
inc
ror
mov
or
jle
cwtl
stc
mov
test
adc
dec
imul
into
repz
testl
fisttps
push
addr16
scas
cmp
aam
jmp
scas
addr16
dec
mov
mov
testl
int
test
hlt
cmp
lret
test
pop
in
push
mov
mov
inc
into
mov
cmp
in
push
dec
xor
aas
xor
fisttps
nop
out
test
mov
pop
push
dec
mov
sbb
mov
lds
addr16
dec
xor
push
aad
inc
movsl
les
mov
aam
mov
mov
imul
add
into
and
pop
addr16
loopne
xchg
mull
sub
ja
sub
cmp
push
add
ds
out
mov
pop
lret
loop
daa
mov
lods
loopne
ret
and
adc
into
rorb
les
inc
mov
lret
sbb
jne
mov
sub
mov
stc
xchg
rclb
rcrl
into
xor
sbb
scas
rolb
adc
push
add
mov
inc
stos
mov
dec
cmp
das
test
lret
push
out
xchg
test
lods
addb
popf
dec
js
mov
sarb
les
mov
xchg
xor
dec
xor
dec
push
and
or
incb
push
push
int
or
cwtl
and
cld
int3
xchg
sub
xchg
out
test
sti
xor
cmp
cmp
mov
sbb
int3
xchg
aad
fisubrl
push
adc
into
int
aad
insb
jno
push
leave
mov
enter
mov
scas
xchg
rorb
outsl
add
dec
int3
mov
rcll
xchg
jno
xor
lret
pop
jb
inc
cmp
cmpsl
cmpsl
mov
inc
cmp
lods
mov
fstps
stc
push
rolb
repz
and
popf
cltd
notb
stos
enter
outsb
dec
dec
ds
and
jle
push
inc
jge
jle
jl
scas
int
dec
ret
jo
out
xchg
xor
push
fwait
cmpsb
jecxz
and
add
mov
pop
xchg
addr16
cmp
dec
and
add
test
push
inc
into
shld
mov
std
mov
es
jno
cltd
shrb
dec
mov
jg
jno
movsl
inc
xchg
lods
or
insb
stos
or
mov
fimuls
leave
lods
testb
jne
sub
shlb
scas
out
or
mov
rclb
ljmp
stos
mov
or
dec
and
ljmp
push
aam
rorb
mov
ja
cmp
aas
popf
into
rorb
pusha
std
cwtl
clc
dec
ret
cmp
movsb
or
dec
dec
xchg
push
mov
out
cmpsl
icebp
xor
jg
xchg
mov
jle
mov
inc
mov
xor
cltd
jl
fidivrl
js
psubw
sahf
jmp
jp
insl
inc
pop
push
xchg
cmp
cwtl
pop
jb
sahf
cmp
nop
jno
ljmp
adc
aaa
imul
push
out
lods
loopne
or
adc
stc
xchg
lcall
repnz
icebp
lret
mov
mov
fidivs
cltd
psllq
dec
nop
lret
insb
mov
push
or
mov
push
loope
push
cmc
outsb
jp
mov
jb
ja
lods
push
jbe
pop
out
je
inc
cmpsl
add
pop
int3
xchg
mov
sti
or
mov
sbb
push
dec
lea
rcl
mov
mov
mov
adc
adc
shrb
out
jns
gs
xchg
add
mov
xchg
sbb
push
mov
sub
mov
outsb
push
xchg
loope
insl
mov
xor
test
sahf
mov
loope
movsl
xchg
xchg
mov
repnz
add
je
push
arpl
jge
push
mov
jg
cmpsb
push
repz
or
xor
jae
popf
push
lret
mov
push
push
mov
loope
lds
cmpb
ljmp
sub
push
cmp
and
lods
xchg
mov
aaa
pop
push
jp
adc
jbe
push
test
ljmp
shlb
repz
push
or
fimuls
xchg
jp
shr
popf
outsb
inc
sahf
ss
aam
mov
jg
jge
or
push
push
mov
shlb
mov
mov
cmc
and
xchg
mov
loope
mov
push
sub
fmulp
add
add
lds
xchg
in
push
stos
fwait
pushf
shll
add
ret
inc
push
push
cld
lods
or
out
jns
insb
rolb
mov
or
mov
mov
jno
iret
cmp
sbb
jle
pop
out
fwait
dec
rclb
ja
cli
idivl
test
cmp
mov
data16
xor
iret
inc
mov
nop
and
int
in
xchg
das
dec
push
scas
ret
imul
xchg
mov
flds
roll
xchg
push
dec
sub
cmpsb
or
xor
lea
jecxz
mov
bound
repz
sbb
cmp
mov
aaa
push
xchg
mov
insb
and
or
in
push
or
jge
sbb
fmulp
mov
or
enter
cli
adc
je
xchg
into
orl
adc
aad
push
xor
mov
lds
js
ret
fs
inc
adc
xor
mov
stos
bound
ss
sti
inc
cmp
cs
repz
xchg
xor
mov
jo
jno
inc
xchg
jmp
rorb
and
inc
xchg
and
dec
add
movsb
popf
cmc
and
shld
jge
mov
cmc
cltd
leave
jp
pop
rcrb
adc
inc
dec
jmp
mov
add
lock
sub
inc
mov
mov
adc
dec
push
push
cli
mov
xchg
mov
push
lret
stos
and
dec
inc
xchg
loop
jns
xor
into
int3
push
xchg
pushf
xchg
not
inc
movsl
int3
sbb
mov
ret
mov
pop
xor
inc
push
mov
ret
mov
push
test
test
push
or
inc
insl
or
add
jle
enter
mov
loope
in
loope
adc
mov
and
lods
and
mov
mov
add
dec
sub
mov
xchg
push
cmp
pop
or
imul
xlat
test
push
test
jb
pop
outsl
scas
ret
fst
rorb
jecxz,pn
outsb
dec
loope,pt
push
popf
insl
adcl
xor
dec
dec
movsl
mov
mov
inc
sub
int
jae
orl
or
jecxz
mov
repz
mov
jae
mov
jno
dec
outsb
fdivrl
aas
mov
add
add
sbb
mov
push
add
aaa
jno
adc
and
popa
subl
fucom
roll
lret
xor
iret
mov
int3
mov
lret
pop
xchg
and
loop
xchg
dec
push
jne
iret
and
and
adc
andb
xor
out
cld
xor
add
roll
cmp
xchg
mov
inc
xchg
ds
mov
loop
mov
xchg
or
mov
inc
stc
outsl
ret
xor
cld
andb
xor
cmp
dec
mov
rolb
inc
out
and
and
add
into
mov
inc
addr16
push
xor
jl
adc
fistpl
in
mov
mov
mov
inc
xor
push
push
outsb
or
ftst
test
mov
push
sbbb
mov
jp
sub
pop
outsb
dec
insl
sbb
repz
in
mov
lea
int3
in
xor
fwait
out
cmp
xchg
stos
mov
fs
int3
sub
dec
leave
shl
inc
outsb
out
add
inc
mov
inc
xor
mov
iret
hlt
or
lret
jle
aad
dec
cmc
mov
push
inc
stos
dec
test
sub
outsb
push
leave
mov
and
arpl
rolb
add
stc
lods
add
push
js
rclb
movsb
rorl
or
dec
outsb
jns
xchg
mov
inc
or
int
mov
jl
sbbb
jb
or
sarl
leave
xor
sbb
out
fs
insl
or
push
xchg
in
push
fstps
jp
adc
mov
inc
push
lahf
fldl
xchg
pop
ja
bswap
cmp
lret
ret
dec
lods
lods
int
out
jbe
and
jecxz
je
xchg
ret
gs
adc
hlt
sub
lea
push
test
mov
xchg
mov
fwait
add
push
in
int3
test
xor
mov
scas
push
pop
push
xchg
mov
xchg
inc
inc
cmpsl
inc
mov
arpl
or
in
out
ret
popf
shlb
cmp
cmp
jb
sbbb
push
jno
or
and
jge
mov
rcrb
fwait
mov
xchg
cmpsl
push
ret
push
leave
push
add
int3
pop
fisubl
inc
nop
mov
jnp
shlb
lods
xor
shlb
movsl
aaa
test
dec
push
popa
inc
int3
int3
aaa
hlt
stc
adc
mov
mul
or
xchg
ret
les
and
inc
enter
ds
fdivl
mov
xchg
xchg
mov
out
adc
push
test
clc
dec
mov
leave
stos
test
mov
or
fadds
mov
sbb
pop
lock
and
inc
cmp
add
mov
and
inc
jg
cmp
adc
daa
mov
pop
int3
pusha
fdivl
mov
test
daa
insl
inc
imulb
pop
leave
test
int
xchg
mov
out
mov
inc
push
sbb
xor
xor
mov
std
ss
jo
add
jecxz
mov
outsl
jne
ficomps
fidivrl
imul
sbb
in
dec
inc
andb
jnp
clc
shrl
push
shll
sti
mov
cmpsb
xchg
mov
add
xchg
test
bound
test
rorb
sbb
leave
xchg
rcrl
jb
nop
jnp
mov
dec
addl
fmul
movsb
xchg
loope
ret
imul
mov
xor
mov
mov
and
mov
bound
adc
xchg
cmp
pop
push
in
mov
sti
es
mov
dec
mov
mov
jne
fdivrl
mov
push
stos
stos
aas
mov
int3
subb
ljmp
sbb
mov
cmp
mov
into
std
ss
sub
enter
sbb
mov
stos
cmp
int3
addr16
ss
pop
lods
rcrb
adc
stos
jl
mov
test
cmp
inc
sbb
cmp
inc
ficomps
sbb
lea
xor
mov
out
cmpsl
adcb
inc
push
xor
das
cmp
out
push
mov
shlb
inc
lret
push
arpl
push
imul
fs
into
inc
shlb
push
ret
dec
outsb
xor
push
movl
mov
int3
pop
mov
and
cmpsb
sub
dec
testl
mov
mov
adc
push
jnp
mov
jnp
lahf
sbb
in
mov
imul
xchg
ret
aas
lret
mov
cmp
and
daa
ss
mov
int3
sbb
mov
leave
xchg
cmpsl
ret
jne
aaa
fadds
push
in
inc
jecxz
lret
mov
cmp
std
inc
push
xchg
cmp
jl
sti
fwait
and
jo
xchg
leave
push
mov
mov
shl
inc
dec
jg
jmp
ss
negl
xor
inc
xchg
and
test
sub
sub
sbb
jno
mov
mov
cmp
jo
das
or
dec
xor
dec
mov
test
sub
mov
ret
mov
jbe
fs
lret
roll
iret
or
jg
xor
jns
xor
mov
push
mov
jge
xlat
xchg
cs
dec
jns
insb
and
insl
mov
cmpsl
inc
ret
hlt
cmp
or
stos
jns
xchg
in
jb
enter
mov
and
mov
mov
adc
addr16
in
shrb
call
lret
mov
pop
jno
mov
jecxz
ds
shll
stos
push
xor
repnz
ds
and
rolb
sbb
lea
movb
aam
outsb
dec
lahf
lret
shlb
inc
inc
xchg
xor
sti
lea
iret
adcl
and
jge
scas
mov
mov
pop
inc
mov
dec
imul
icebp
cmp
int
mov
cmp
out
xchg
decb
mov
stos
fldl
adc
dec
outsl
std
daa
gs
hlt
lock
cmp
adc
push
adc
xchg
dec
cmp
sahf
push
movsb
mov
mov
push
repz
and
add
push
out
test
inc
es
sti
and
jbe
dec
mov
sahf
fwait
xor
xlat
test
shl
out
movsb
call
das
mov
and
or
push
stos
shl
pushf
or
in
push
xor
push
or
icebp
cmp
inc
sbb
cmp
jmp
fwait
sahf
fmul
mov
int3
mov
lcall
pop
jo
data16
lret
mov
popf
pusha
pop
mov
shlb
lret
sbb
mov
pop
rcrb
xor
inc
dec
lock
mov
inc
mov
jno
xchg
jecxz
cmp
int
xlat
and
mov
sub
add
and
mov
mov
test
inc
test
sub
adc
cmp
fidivl
scas
mov
std
xchg
dec
ret
scas
and
mov
in
fnsave
and
addl
pop
mov
movsb
arpl
push
xor
je
dec
rcrl
xstore-rng
cmpsl
add
xlat
test
mov
fisubrl
xchg
popf
ds
dec
dec
inc
push
test
dec
mov
mov
push
lds
mov
xchg
lret
add
adc
add
adc
push
xchg
pusha
ss
int
call
outsl
add
andb
pop
xor
push
dec
test
cs
mov
inc
jecxz
fisubs
into
pop
sub
mov
jno
mov
add
inc
out
test
mov
xchg
les
sub
out
and
mov
mov
addr16
popa
xor
insb
xchg
lret
add
and
mov
insb
insl
popa
in
push
cltd
int3
cmp
jbe
in
lock
cmc
popf
mov
mov
sbb
mov
push
getsec
repnz
push
cld
or
ds
or
lods
dec
les
sahf
stos
mov
lea
cmpl
stos
cmp
mov
rorb
push
mov
lahf
mov
sbbl
xor
push
lods
push
push
stos
ret
ja
cmp
and
or
sbb
inc
pushf
mov
mov
shlb
adc
outsb
shlb
int
into
jge
xor
lret
inc
push
inc
out
cmpsb
fstps
ss
ljmp
mov
outsl
movsb
in
addr16
dec
movsb
aaa
xchg
xchg
jbe
adc
push
gs
or
adc
test
in
jne
icebp
mov
dec
push
fldenv
lahf
orl
mov
mov
mov
nop
xor
jl
xor
test
cmpsb
loope
inc
das
inc
ret
mov
ljmp
mov
stc
dec
inc
push
in
cs
test
outsb
mov
xorb
cli
xor
cmp
dec
pop
sbb
xchg
cmp
shll
adc
cmp
xchg
imul
xchg
int
inc
mov
jbe
lcall
mov
mov
pop
aad
push
adc
xor
movb
inc
fbstp
icebp
out
push
test
mov
adc
test
pop
push
ja
xlat
or
dec
sbb
pop
lods
push
pop
imul
mov
ds
dec
xchg
inc
add
lods
out
clc
cwtl
sub
dec
outsl
addb
mov
mov
jp
xlat
dec
out
dec
pop
pusha
jecxz
clc
fs
xor
pop
outsl
pop
pop
inc
mov
rcrb
add
adc
outsb
in
jmp
mov
bound
push
aam
adc
jmp
mov
cmp
out
loopne
dec
popf
pop
dec
dec
shl
adc
or
mov
jge
cmpsb
mov
push
xchg
jnp
push
out
xchg
jp
cmc
pushf
cmpsl
aas
jnp
addb
adc
sbb
aas
jnp
xchg
lds
lods
inc
into
ds
bound
inc
cmpsl
gs
and
pop
rcll
mov
ror
outsl
jae,pt
inc
loope
pop
sbb
inc
cmp
push
adc
cmp
enter
inc
adc
fldcw
stos
pusha
lcall
mov
xor
inc
cltd
dec
adc
inc
xchg
nop
sub
mov
shlb
notl
pop
negb
ret
lahf
loop
xchg
xor
aaa
adc
mov
jae
insb
rorl
in
filds
lret
jmp
adc
cmpsl
cmp
les
adc
xor
int
inc
cli
lea
icebp
jb
inc
nop
sahf
cmp
stos
lret
sbb
lods
scas
enter
and
rol
jle
sahf
xor
pop
mov
push
shr
sub
xchg
jbe
dec
add
negl
scas
xchg
jp
push
dec
add
out
inc
addb
inc
ret
adc
mov
fwait
repnz
in
xchg
jbe
add
jg
push
and
pop
rcrl
jecxz
xchg
sub
lcall
lea
jecxz
cmc
aaa
fucomi
les
insl
insl
es
mov
sbb
js
jne
inc
aam
int
dec
jg
cmp
out
inc
lahf
ss
dec
cs
inc
pushf
je
js
or
sbb
pop
xor
push
aas
call
out
test
fisttpll
jmp
push
lret
xchg
push
push
fdivr
je
fidivs
lea
cmp
scas
inc
lods
pop
daa
cmp
or
iret
ds
int
pop
mov
sahf
add
mov
nop
ja
sbb
cmpl
hlt
xchg
fcmovne
repz
lret
push
push
mov
push
aad
xor
out
lcall
dec
push
jo
adc
lret
rcrl
mov
cmp
or
push
fists
mov
dec
mov
xchg
shll
ret
or
xor
adc
push
jnp
rcl
mov
jb
in
sarb
dec
xchg
inc
lock
into
sbb
xchg
xchg
shl
xor
scas
mov
rorl
dec
push
add
dec
mov
lret
roll
shll
push
push
xchg
leave
dec
leave
dec
leave
adc
xchg
xchg
shrb
xchg
or
jecxz
sahf
inc
leave
or
push
addr16
pop
lret
mov
push
push
enter
push
dec
cli
into
or
mov
insl
dec
adc
es
jg
rclb
ret
sbb
dec
lods
or
nop
orb
nop
push
adc
push
jp
xchg
rorb
dec
dec
rorb
ss
jle
nop
xchg
nop
pop
rorl
shrb
or
mov
xchg
mov
or
rorl
adc
push
rcl
add
es
lods
mov
aad
push
mov
stos
adc
xchg
rolb
dec
leave
push
xchg
push
stos
into
test
adc
inc
ja
ror
mov
adc
nop
xchg
dec
mov
xchg
into
adc
adc
cltd
push
or
sarb
inc
inc
xchg
jge
orl
stos
or
mov
mov
sub
xor
lods
jb
or
stos
inc
lods
adc
nop
dec
leave
or
push
inc
lret
xchg
xchg
orb
push
mov
nop
adc
or
int3
leave
or
nop
lret
cmp
mov
leave
lret
leave
or
adc
or
shrb
lea
leave
mov
mov
dec
mov
shrl
mov
hlt
mov
jle
dec
inc
ds
push
nop
xchg
stos
loope
cmp
mov
fwait
or
jnp
sets
mov
and
ret
gs
flds
mov
dec
ret
cmp
fcmovbe
xor
jle
mov
cmp
mov
jne
mov
cwtl
push
and
lock
and
stos
jno
int3
or
pop
or
sub
lcall
mov
jne
int
test
fisttpl
insb
jle
sbb
mov
mov
test
jns
push
aaa
xchg
fisubrl
aad
xor
leave
cmp
clc
loope
xor
push
lods
pop
popf
int3
movsb
loopne
in
mov
cltd
lods
and
ret
ret
loopne
jecxz
cli
or
xor
add
add
fcomps
in
cmp
aas
xlat
mov
sbb
lcall
in
add
ret
test
in
mov
xchg
fs
mov
cmp
mov
xor
lret
outsl
jbe
push
inc
in
imul
jno
fwait
rolb
sbb
jbe
enter
push
scas
or
mov
xchg
xor
xchg
jp
cmp
xor
sub
cmp
adc
xchg
mov
pop
in
lret
dec
je
mov
andb
xor
mov
adc
ljmp
xor
sar
cltd
rcr
in
xchg
inc
and
stos
nop
loopne
pop
pop
jecxz
pop
adc
cmc
and
pop
inc
pop
mov
fnsave
fiadds
in
sahf
and
inc
mov
inc
loopne
movsl
jecxz
dec
shr
inc
mov
and
xchg
mov
adc
add
shll
inc
mov
add
cmp
out
push
xor
cpuid
or
inc
push
iret
mov
mov
rcrb
aaa
out
lret
push
inc
popa
add
xchg
in
lcall
mov
int3
in
addb
or
xchg
popf
leave
popa
cmp
sbb
repz
mov
cld
stc
xchg
int3
sbb
addl
mov
jle
cmp
rcrl
dec
or
mov
mov
push
jg
nop
inc
dec
mov
jns
mov
dec
mov
aaa
or
dec
icebp
rolb
push
xchg
cmp
and
sbb
mov
shlb
aaa
stc
inc
pop
mov
fsubrs
fsubs
or
insl
mov
inc
hlt
xchg
test
push
cs
adc
cwtl
mov
xchg
sbb
and
pop
mov
xchg
mov
inc
pop
mov
stos
sbb
insl
mov
andb
sub
xor
cmp
xchg
jp
cmpsl
sbb
push
shll
movb
stos
fidivs
inc
push
sbb
push
std
cmp
add
data16
rcl
mov
inc
movsl
mov
cmp
jecxz
enter
call
sub
aaa
xlat
add
nop
shrl
shlb
jne
scas
mov
cs
lods
cmp
add
pop
lock
loope
sbb
inc
cmp
xchg
idivl
stos
jo
jae
ret
adc
cli
adc
or
push
pusha
dec
setg
xor
ja
pop
pop
mov
or
mov
call
insb
inc
inc
pusha
inc
mov
ja
mov
xor
orb
cmp
ds
push
pusha
mov
lret
mov
jge
enter
int
loope
bound
mov
out
enter
insb
sbb
xchg
scas
test
shl
inc
out
mov
jb
push
mov
cmp
in
add
inc
sbb
xchg
mov
divl
xchg
lods
stc
mov
clc
pusha
out
and
gs
shrl
mov
inc
push
in
ret
sbb
sbb
inc
pop
rcll
dec
in
push
orb
cmp
push
aas
ret
mov
leave
xchg
mov
dec
add
cli
mov
xchg
popf
inc
movsb
and
push
mov
inc
inc
pop
out
lods
pop
mov
mov
or
pusha
xor
lods
inc
fidivs
and
push
push
data16
cli
bound
ret
int3
leave
sub
mov
pop
lock
sub
test
adc
mov
mov
shlb
outsl
aaa
mov
bound
shll
cmp
call
js
ja
rorl
pusha
or
or
push
xchg
mov
adc
arpl
cs
roll
mov
push
inc
mov
popa
lds
gs
jecxz
out
mov
dec
dec
push
jp
mov
addb
stc
lock
jbe
pop
or
jecxz
inc
dec
or
push
inc
and
adc
pusha
scas
les
xchg
test
cmp
mov
and
mov
shr
mov
int3
mov
data16
sub
adc
xchg
cld
mov
add
mov
pop
push
outsb
out
out
xchg
rclb
push
mov
roll
push
adc
mov
jns
pop
movsl
xor
lsl
ja
out
stc
outsl
in
out
gs
scas
mov
inc
xor
ficoms
movsb
dec
andl
dec
push
test
mov
bound
or
mov
xor
xor
lods
addr16
into
pop
xchg
jns
lea
inc
mov
repnz
or
or
mov
fidivs
push
jnp
fisttpl
add
decl
dec
test
jl
ja
inc
pop
es
or
jb,pt
fsubrs
push
rorb
dec
cmp
cmp
mov
xchg
sbb
in
data16
sub
add
mov
cmpsl
insb
cli
iret
in
divl
mov
xchg
mov
cwtl
jo
sbb
push
imul
and
arpl
jb
cld
pop
cmp
dec
push
in
out
sub
rcll
add
xor
pop
hlt
mov
in
cmp
push
stc
test
mov
loope
js
adc
scas
ja
inc
and
sbb
inc
jo
push
ret
xor
test
insl
fildll
push
jns
or
mov
hlt
mov
mov
cld
and
push
dec
dec
push
in
jle
mov
mov
pop
unpcklps
inc
clc
jecxz
sbb
test
fldcw
or
cmpsb
adc
lds
xchg
in
fs
clc
movsl
push
push
mov
jbe
add
stc
jb
push
imull
int3
dec
dec
mov
adc
inc
sbb
insb
cmp
adc
rcll
dec
dec
out
fsubrl
subb
cwtl
les
mov
into
dec
daa
and
imul
xor
pop
fidivl
or
sub
shlb
xor
pop
outsl
into
sahf
cmp
mov
mov
out
lods
ja
ret
pop
repnz
bound
xchg
mov
stc
lret
je
mov
faddp
adc
call
popf
je
iretw
dec
push
out
cld
push
imulb
lret
lret
lret
lret
lret
iret
rclb
mov
mov
rorb
cmp
mov
dec
shrb
into
fidivrs
pushf
cmpsl
shrl
rcll
jb
and
pop
lods
push
rcl
stos
dec
leave
adc
fst
sub
ret
push
or
push
mov
mov
lea
push
sahf
mov
or
inc
subl
fsave
jecxz
adc
scas
or
and
push
test
xor
xchg
dec
dec
sahf
mov
repnz
dec
mov
inc
int3
mov
xor
push
push
dec
or
adc
dec
pop
push
sub
rcl
mulb
push
push
push
and
pop
mov
dec
or
stos
inc
mov
mov
mov
push
shlb
push
push
nop
icebp
out
into
cmc
mov
adc
fsubrs
or
sub
mov
ret
mov
mov
outsb
inc
test
jle
popf
cmpxchg
jl
rorl
sub
nopl
xchg
xor
lods
int3
dec
lret
cmp
dec
xor
dec
pusha
xor
dec
xchg
lret
push
sbb
roll
jbe
pop
push
mov
stos
rorb
lret
inc
push
xchg
into
mov
jo
lds
mov
insl
inc
mov
lret
mov
rol
or
mov
or
mov
test
roll
leave
inc
clc
repnz
mov
sarb
int
mov
sub
dec
adc
std
dec
jo
dec
inc
scas
inc
mov
dec
push
dec
std
into
jae
sub
dec
inc
shlb
push
mov
movb
scas
push
mov
lods
push
mov
mov
leave
or
add
iret
mov
xor
push
and
aad
xor
push
push
or
test
mov
inc
dec
mov
xor
lret
dec
inc
mov
es
dec
xchg
lds
push
or
orb
add
push
push
int
or
dec
fisubs
aaa
leave
mov
adcl
mov
les
sub
out
bound
or
dec
ret
adc
mov
leave
xor
iret
inc
adc
and
test
jno
sbb
sub
clc
jle
push
pop
dec
and
fcmove
scas
dec
imul
scas
ljmp
mov
mov
js
test
mov
lds
stos
xchg
xor
dec
xchg
or
sub
pop
push
call
add
popf
or
mov
or
lahf
xchg
xchg
cwtl
sub
insb
sbb
dec
add
xor
inc
mov
push
cmp
adc
and
adc
mov
movsl
movsb
jns
cmp
push
out
insl
jb
jb
xor
movsb
dec
in
push
and
push
mov
icebp
xor
lods
lahf
cltd
pop
incl
push
inc
lahf
test
adc
xlat
fistpll
dec
jae
repnz
xor
mov
mov
fsubrs
cmc
inc
imul
cmp
cmp
popf
mov
sub
jne
cmpsl
dec
mov
jmp
or
cs
std
bound
jns
daa
jl
lds
mov
mov
mov
jb
aas
xchg
dec
cmpb
or
xrelease
mov
inc
jbe
mov
or
lret
and
cmp
lds
ja
mov
loop
lock
hlt
xchg
pusha
inc
rclb
xor
push
cmpsb
dec
loope
xchg
fstpt
shrb
sbb
push
inc
popf
mov
xchg
out
cmc
int3
xchg
inc
adc
xorl
adc
xchg
je
mov
or
mov
cmp
dec
movsb
or
rcll
push
popa
int3
cmpsl
jle
dec
push
dec
int
add
movsl
pop
dec
sbb
mov
shlb
aaa
mov
bound
cmp
cmp
sub
xor
push
add
movsl
inc
popl
mov
inc
test
pusha
dec
mov
and
xorb
nop
int3
jecxz
sbb
rcr
xor
and
dec
fstps
jo
addl
xor
lods
hlt
iret
mov
cmp
movsl
inc
inc
lds
jo
addr16
xchg
sti
pop
jecxz
test
stos
lret
adc
icebp
lret
add
sub
adc
mov
into
fisubrs
out
shl
out
or
jno
popf
les
inc
loopne
sub
or
test
cs
rorb
dec
scas
fsubp
frstor
mov
push
xchg
test
jecxz
in
dec
int3
adcb
and
je
xchg
sub
push
cmpl
nop
inc
cmp
add
cltd
andb
mov
mov
adc
ss
addr16
push
sub
sub
mov
mov
mov
int3
push
xor
xor
inc
push
pop
xchg
mov
aas
stc
js
into
mov
xchg
adc
lods
addr16
adc
int
je
and
push
xchg
mov
cmpsl
xor
adc
fxch
mov
fcmovne
out
orb
decl
test
lea
mov
mov
cmpsl
les
mov
into
mov
xor
addb
out
stc
xchg
jecxz
mov
adc
adc
outsb
or
cmpsl
ss
or
xchg
jo
ja
xchg
sub
or
mov
dec
add
jp
outsb
out
iret
and
dec
mov
adc
outsl
jo
jns
jnp
push
push
mov
iret
mov
mov
cmp
xchg
cmp
inc
and
into
shl
shrl
shll
sub
or
stos
hlt
test
icebp
pop
jb
dec
test
jae
mov
addr16
in
or
xchg
add
inc
xor
xor
push
jg
push
dec
icebp
lret
pcmpeqd
insb
in
lret
inc
mov
test
bound
cmp
sbb
movb
push
in
dec
inc
icebp
daa
ja
pop
insb
inc
inc
xchg
in
aad
jmp
xor
les
or
cli
mov
push
mov
xchg
or
sbb
int
cmpsl
inc
notb
inc
idivl
push
xchg
rorb
and
xchg
cmp
dec
jp
jae
rol
ret
mov
ljmp
ja
jmp
lods
imul
cli
es
jbe
pop
cltd
jge
pushf
pop
or
leave
cmpsl
cwtl
dec
ljmp
pop
xlat
mov
mov
jne
popf
cmp
mov
mov
cmpb
dec
inc
jl
shl
testl
mov
mov
shl
roll
mov
mov
mov
into
js
movsl
bound
inc
cmpsl
addr16
push
dec
outsb
ja
xlat
or
cmpsl
cmpsl
imul
xchg
cmpsl
inc
mov
out
sarl
cld
xor
pushf
pop
sbb
push
fldl
sets
xchg
rcll
ret
cli
adc
mov
and
push
xor
dec
xlat
jl
add
xchg
addb
mov
jge
repz
jecxz
test
dec
xchg
lret
ja
jne
dec
add
xor
ret
ret
in
mov
in
jge
sti
cli
mov
and
mov
add
into
xor
lcall
and
jge
cmpsl
movsb
mov
xchg
stos
sub
xor
push
repz
stos
ret
or
data16
pushf
pop
push
js
cmp
mov
jg
push
mov
fs
cltd
stc
mov
fldcw
lea
jecxz
repnz
pop
or
andl
leave
push
sti
and
in
and
fsubr
int
jle
pop
mov
pop
push
ljmp
inc
loopne
jle
push
or
mov
jb
adc
cli
cmpsb
pop
stc
xchg
mov
pop
jo
mov
mov
pop
test
push
xchg
push
jne
cltd
popa
xor
ds
fnop
movsb
jp
mov
inc
ret
ret
bound
mov
int
mov
mov
jne
jecxz
adc
mov
mov
jg
sub
pop
push
xchg
inc
mov
cs
stos
arpl
dec
push
rcrb
pop
int
jecxz
rorl
push
cld
int
ss
push
aas
loopne
or
dec
gs
adc
xor
mov
das
adc
arpl
lods
add
pusha
loope
ret
inc
data16
mov
inc
aaa
nop
stos
mov
dec
xchg
jmp
loope
pop
outsb
daa
push
xor
es
movsl
inc
ret
sub
inc
repnz
arpl
int
loop
pop
aad
and
fldt
or
or
cmpsl
outsb
jo
mov
xchg
xor
mov
pop
dec
or
mov
push
inc
mov
out
fucom
xor
aad
push
in
mov
mov
int3
fs
sbb
mov
xorl
cwtl
lds
mov
and
mov
rcr
test
enter
adc
mov
dec
inc
insl
mov
push
dec
pop
stos
push
and
and
xor
fldcw
dec
addr16
add
xchg
aaa
rcrl
loope
inc
xor
add
bnd
xorb
popf
inc
jae
testl
cld
movl
xor
dec
push
xchg
cmpsb
cltd
xor
jmp
cmp
rol
dec
or
fs
dec
stos
cmpsb
cmp
sbb
jge
push
out
cld
lret
xor
into
cwtl
adc
inc
bound
es
ret
out
fdivrl
inc
repz
mov
test
inc
add
repnz
sub
xor
or
dec
pop
bound
mov
mov
or
xchg
cs
ss
inc
rorb
mov
push
dec
xor
mov
cmc
cmp
adc
jl
xchg
jl
popa
lock
out
pop
push
sarl
xor
aam
enter
mov
inc
flds
xor
mov
dec
dec
pop
inc
push
es
inc
cmpsb
sub
imul
movsl
mov
ss
mov
sub
insl
jb
imul
int3
push
ret
mov
test
je
push
push
xor
adc
pop
xor
es
std
inc
js
ret
bound
pop
cmpl
dec
jp
xlat
ds
scas
mov
pop
mov
inc
test
jecxz
dec
fadd
gs
or
mov
add
cmpsb
or
push
jb
inc
adc
vmovaps
xor
int3
arpl
jg
test
sub
bound
and
xorl
mov
ret
ja
int
mov
jge
arpl
dec
shl
cwtl
sbb
bound
cmp
mov
dec
cmp
lds
shrl
pushf
inc
sub
xchg
xchg
fucomp
adc
push
rclb
in
rcl
in
mov
adc
or
fisubs
out
lea
shlb
and
int3
sbb
imul
cmp
fwait
add
inc
pop
mov
repz
jmp
iret
pop
insl
mov
add
dec
jbe
mov
ret
sbb
aam
movsl
xchg
cmp
ds
stos
jne
xchg
in
mov
xor
jmp
popf
cmp
xor
cmp
mov
ror
xor
adc
cmpsl
jl
pop
int3
or
lcall
push
xor
jmp
pop
adc
mov
inc
inc
adc
lcall
xor
and
adc
jmp
push
nop
test
lods
and
sub
mov
ret
call
das
bound
xchg
push
xchg
leave
iret
mov
fsts
dec
rcl
les
jnp
pop
je
sub
cmp
inc
movsl
mov
into
dec
sahf
in
fdivl
addr16
push
stos
jg
or
push
in
ret
sbb
cmpsl
dec
testb
mov
push
mov
adcb
into
ret
mov
adc
push
cmp
call
movsl
and
dec
inc
loopne
inc
xor
ret
int3
arpl
mov
sub
inc
enter
sub
pop
aaa
test
hlt
lret
nop
mov
into
es
mov
arpl
sahf
xlat
xorl
ret
lds
cmp
inc
dec
cmc
mov
lret
outsl
popl
dec
imul
cld
push
sub
movsl
push
xchg
dec
mov
jo
call
and
insl
mov
repz
mov
lret
aam
ljmp
cmp
xor
mov
or
dec
stos
mov
push
pop
sbb
and
jl
jg
or
or
mov
imul
test
push
mov
adc
dec
adc
cmp
cmp
pusha
notl
aas
les
sbb
aas
imul
mov
add
pop
inc
xchg
inc
ret
mov
js
sbb
aam
fwait
inc
xchg
icebp
inc
inc
daa
sub
movsl
xor
sub
lret
inc
xor
push
enter
xor
js
sub
push
inc
test
mov
shll
popf
mov
mov
xchg
fcoml
rolb
sbb
cmp
stos
xchg
mov
jmp
adc
push
pop
in
adc
call
inc
mov
rorb
jne
movsl
mov
cs
dec
push
lret
shlb
out
int
icebp
xchg
movb
ds
lea
dec
or
test
icebp
xor
cmpb
incl
push
movsl
xchg
push
cmp
pop
sub
lahf
xchg
in
push
jmp
imul
daa
or
mov
push
push
cld
enter
in
int3
es
js
stos
add
mov
jecxz
aaa
sbb
jbe
cmc
repnz
pop
lcall
outsl
xchg
dec
test
or
sbb
sti
dec
push
jp
es
inc
ja
add
push
push
ret
pop
int
inc
jbe
sbb
push
xchg
fwait
lret
and
movsb
jmp
test
repnz
cwtl
das
mov
popf
xor
enter
rcrw
adc
in
push
ret
xchg
xchg
fdivrs
cli
dec
push
lret
gs
out
inc
xchg
dec
shl
mov
es
js
int
adcb
inc
lock
ja
lds
addr16
xor
int
mov
cmpsl
pop
xor
cmp
jp
data16
jo
imul
lret
or
mov
mov
or
push
lods
sahf
ret
mov
sbb
inc
sbb
test
ja
or
sbb
mov
and
mov
ja
lea
dec
xchg
mov
xor
sub
or
dec
adc
pop
sbb
push
jne
mov
in
repnz
orb
outsb
xchg
jnp
push
stc
adc
jb
push
pusha
xor
insb
cs
inc
mov
nop
out
in
sbb
jle,pn
dec
jge
iret
xchg
fisubl
xchg
jnp
xchg
addr16
mov
mov
inc
out
jno
cmp
mov
add
sti
xchg
das
adcb
mov
and
fwait
jno
add
pop
dec
or
jp
inc
push
rorl
popf
cmpsl
mov
inc
lret
push
xor
or
cwtl
andb
cs
cmp
and
mov
inc
mov
in
fnstsw
or
mov
outsl
jle
mov
sar
out
lret
js
fistl
in
movsl
divl
divb
push
insl
ljmp
inc
xor
subl
out
xchg
or
lods
insb
insb
ds
popa
mov
push
adc
mov
insl
cltd
push
inc
dec
in
pop
jl
push
add
dec
cwtl
xor
xchg
push
adcb
int
xor
xchg
dec
pusha
test
aas
jns
xchg
test
xchg
xchg
les
inc
insl
or
cmp
inc
enter
push
xchg
mov
cmp
mov
sbb
lock
push
fdivl
lods
sub
sbb
popf
or
inc
mov
sbb
ret
scas
ds
leave
hlt
mov
push
sub
jae
outsb
data16
clc
test
out
mov
scas
leave
aam
inc
pop
mov
jo
mov
add
mov
daa
or
mov
mov
stos
add
mov
aas
ret
rorb
lock
mov
xchg
fs
in
dec
stc
xchg
jbe
aaa
sbb
push
push
and
in
pop
inc
cmp
in
add
fisubs
dec
and
ret
push
sti
dec
js
scas
lock
lret
into
shll
mov
inc
inc
jecxz
xchg
mov
cli
sbb
push
and
mov
out
lods
fsubrs
ret
dec
mov
cwtl
pop
mov
ret
les
mov
pop
xchg
mov
xor
and
rcll
lds
mov
lret
jb
jl
sbb
inc
out
iret
cmp
xchg
cmp
inc
dec
xchg
cli
or
movsb
les
sahf
mov
aaa
int
add
jb
jecxz
xchg
lds
ja
dec
xchg
fldenv
out
stc
roll
cli
mov
sub
sbb
stos
aam
mov
fwait
dec
push
mov
jge
pop
push
shrl
les
cmp
rcll
fs
inc
loop
jo
mov
ror
jp
arpl
ja
pusha
jecxz
inc
and
sub
push
push
rorb
cltd
lds
stos
and
mov
adc
xchg
mov
daa
push
dec
xor
adc
jge
rol
sbb
je
lahf
push
pop
sbb
dec
push
mov
sbb
out
je
nop
inc
cltd
andb
cmp
scas
lret
xchg
jmp
dec
push
sbb
xchg
dec
das
dec
icebp
xchg
mov
jo
or
hlt
fsubrl
in
loope
mov
push
insl
jg
push
rolb
cmpsb
jecxz
inc
jne
out
push
push
inc
into
jnp
mov
pushf
mov
cmpsb
sbb
inc
add
fdivrs
cmp
daa
xlat
subb
int
mov
sub
test
xchg
pop
xor
jmp
push
gs
int3
mov
adc
in
and
subb
mov
xor
mov
and
mov
jecxz
ror
and
in
mov
xchg
sub
jbe
fwait
test
jecxz
jmp
dec
fs
inc
aaa
ret
jl
pop
inc
xchg
fsubl
std
sbb
cs
jbe
stc
nop
xchg
xchg
in
je
mov
pushl
in
xor
nop
mov
std
aad
icebp
sbb
cwtl
dec
daa
push
movsb
movsl
push
fs
push
hlt
pop
mov
inc
hlt
fimull
dec
mov
xchg
mov
out
add
lods
inc
push
cmp
leave
xchg
inc
pop
daa
sti
inc
movsl
out
mov
cmp
xchg
sbb
sub
in
or
sub
cmp
adc
adc
sbb
or
mov
dec
loopne
lea
mov
adc
or
sahf
fcompl
push
dec
imul
xor
lds
mov
xchg
push
mulb
pushf
addr16
inc
shlb
mov
xor
add
imul
loopne
mov
xchg
js
xchg
cmp
js
xor
push
xchg
ja
jno
stos
inc
in
lea
push
in
dec
cwtl
popa
adc
movsb
xchg
dec
addb
push
fxch
les
movb
dec
jge
ja
daa
insl
inc
xchg
loopne
test
jge
jge
stc
in
xor
sbb
cwtl
push
cmpsb
nop
loop
add
push
or
push
movsl
dec
jo
shll
int3
mov
pop
mov
sbb
mov
ljmp
jecxz
dec
sbb
inc
movsl
and
enter
and
leave
jb
mov
inc
roll
push
mov
cmpsl
inc
push
cmpsb
fisttpll
outsl
popa
inc
cmp
mov
bound
jecxz
xorl
cs
shr
cwtl
loopne
jb
adc
push
shrl
cmp
dec
xchg
mov
ret
push
ljmp
loope
mov
inc
into
ret
adc
mov
push
inc
push
push
lea
lret
lret
xchg
jo
imul
ds
and
rorl
daa
into
mov
push
rorb
sarb
insb
sti
inc
pop
rcl
mov
rcr
add
movsb
mov
inc
push
jbe
mov
mov
inc
and
rcl
nop
lea
push
cmc
insl
adc
cmp
cmpsl
cwtl
rcll
sub
dec
leave
ror
aad
mov
stos
cltd
dec
sahf
cmp
inc
shrd
mov
mov
lods
mov
push
pop
les
fnsave
mov
xchg
mov
outsb
int3
lcall
mov
test
cmpsb
pop
or
push
mov
fnstenv
subl
or
xchg
or
sub
roll
cmpsb
cltd
dec
rorb
orl
push
scas
into
sub
mov
push
lret
inc
inc
xchg
mov
jo
dec
or
stos
inc
mov
ror
pop
loop
lea
mov
cmp
mov
mov
nop
dec
jl
inc
add
xchg
lds
dec
jmp
iret
xor
movsl
dec
dec
pop
mov
mov
push
cwtl
leave
xor
int
mov
xchg
test
xchg
and
int3
push
std
lret
xchg
enter
dec
or
mov
push
mov
les
test
dec
mov
jle
mov
or
sbb
push
dec
stos
dec
push
adc
dec
mov
rcl
test
mov
cmp
xchg
cs
jno
test
mov
jge
rorl
jmp
pop
movsb
lods
mov
int3
dec
stc
sbb
jbe
repnz
aaa
xchg
filds
cmp
mov
imul
sub
clc
clc
jb
rcr
or
inc
cmp
jl
cmpsl
fsubrl
scas
adc
mov
rorb
out
out
dec
fwait
jmp
or
incl
inc
int
outsb
iret
jg
xchg
add
or
jno
dec
pop
mov
adc
sub
mov
ret
mov
pop
int3
mov
rorb
mov
aad
inc
lret
int
mov
lahf
std
pop
xorl
pushf
addr16
loope
lret
or
push
movsl
adcb
cmp
out
or
movsb
xchg
mov
mov
cmp
ret
sbb
hlt
mov
out
mov
mov
adc
lret
xchg
adc
mov
sbb
xchg
jp
fwait
call
notb
xchg
movsl
sti
push
nop
inc
inc
ja
ja
inc
inc
lcall
adc
jmp
cmpsl
xchg
loope
sbbb
push
loop
and
pop
mov
jg
ror
pop
int
addl
xchg
stos
inc
cli
pop
icebp
insl
fnstsw
sub
sahf
xor
fildll
mov
jle
mov
lock
or
cmp
lret
shl
mov
mov
lea
adc
push
adc
rorl
jg
sbb
dec
sbb
mov
nop
ret
int
insl
xchg
popf
add
jo
lds
outsb
shlb
cmpsb
out
add
pusha
lods
xchg
pop
push
xchg
inc
adc
int
pop
xchg
pusha
mov
dec
insl
shll
out
push
enter
shrb
addr16
pop
mov
ret
pop
aas
xor
adc
push
mov
add
popw
int3
ret
xchg
nop
lret
fs
in
mov
sub
std
push
lea
mov
rcl
cmpsb
in
mov
adc
jb
loope
push
sub
dec
gs
leave
das
stc
inc
ja
adc
mov
leave
sar
mov
dec
and
jl
loop
push
add
ss
pusha
or
and
add
stc
mov
jl
mov
adcb
dec
int3
lds
push
scas
inc
xchg
inc
mov
add
lcall
ja
insl
and
xchg
out
inc
aas
and
adc
ret
mov
adc
aad
das
mov
cs
ds
jno
testb
sahf
xor
push
ss
in
enter
or
popf
frstor
mov
in
mov
shr
clc
loope
xchg
pop
daa
jns
dec
mov
jne
mov
lods
jge
sahf
push
rclb
aaa
inc
push
xchg
loope
sti
cmp
dec
orb
popa
les
cmp
inc
test
mov
sub
ljmp
and
shlb
sete
add
in
jmp
aad
aad
inc
or
push
mov
lds
or
rcll
in
xchg
cmp
jns
mov
jns
fmuls
dec
stos
xchg
pop
jmp
mov
xor
stos
cmp
rorl
in
pop
gs
sti
fdivl
int3
fisubrs
out
into
cmpsl
or
lds
push
xor
mov
mov
js
mov
adc
add
sarl
cmp
pop
outsb
fsubs
push
xor
pop
sub
inc
xor
add
xor
inc
call
aaa
and
and
mov
pop
cmc
dec
sti
mov
inc
inc
mov
cmp
test
jp
inc
and
movsl
push
lds
adc
les
iret
lods
push
cwtl
neg
mov
outsb
stos
cld
ret
into
sbb
pop
xor
fisubrl
mov
inc
xchg
mov
mov
cmp
push
enter
lods
popa
lock
or
inc
stc
cmp
ss
shll
sub
mov
jge
enter
push
fistpll
lea
mov
out
dec
xchg
or
push
adc
xchg
jns
inc
testb
jns
jge
or
mov
movsl
sub
aas
jge
jb
mov
push
mov
and
loope
jno
mov
cli
mov
pop
jbe
inc
aas
push
cmp
movsl
sbb
test
rorb
dec
add
clc
popf
add
dec
pop
cltd
adc
add
movsb
mov
das
clc
mov
cmp
jge
lea
outsl
stos
xor
cmp
scas
mov
pop
mov
mov
stos
inc
inc
jecxz
ret
cmp
or
fs
inc
test
adc
and
sub
jnp
in
or
int
adc
cld
fst
test
hlt
stos
push
inc
push
dec
adc
ror
into
mov
jne
shlb
in
xor
sbb
stos
xchg
xor
js
js
xchg
lret
add
cmpsb
cmp
rorb
push
mov
popf
icebp
xor
cmp
out
bound
out
xor
and
daa
add
gs
pusha
dec
xlat
shlb
add
aad
addr16
imul
inc
push
sbb
ss
push
in
test
repz
cli
jecxz
inc
lret
out
push
shr
insl
or
leave
popa
inc
and
ret
sub
inc
pop
push
imul
shrb
xor
mov
jg
adc
push
je
rep
ret
cmpsl
aaa
cmp
inc
xchg
ljmp
fdivs
mov
in
push
adc
jns
cwtl
add
in
cmpsb
xor
mov
shl
movsl
test
push
adc
inc
inc
pop
push
inc
orl
clc
xorb
mov
or
cwtl
cmp
pop
jg
cmp
mov
cmpl
pop
jno
int
cltd
xchg
movsl
sbb
inc
sbb
rcll
xor
jae
ja
mov
rorb
cmpsl
std
out
leave
xchg
jge
push
icebp
gs
cwtl
sbb
orb
mov
push
and
mov
in
lea
sbb
xor
cmovns
bsf
mov
aaa
mov
mov
sbb
imul
add
in
bound
add
lods
mov
inc
ffree
push
xor
insl
lock
dec
out
xorb
mov
shlb
lds
inc
adc
push
sub
mov
aaa
mov
inc
mov
or
mov
inc
and
adc
xor
jae
iret
stos
mov
movsl
divps
sub
arpl
rol
ret
into
ror
ror
mov
setae
enter
inc
int3
mov
std
push
add
xor
int
push
sbbb
xchg
push
enter
rcrb
les
dec
loope
xor
and
dec
xchg
lea
shlb
out
leave
int
mov
int
or
ret
ja
rcll
stos
int
dec
lds
lds
mov
adc
cmp
clc
mov
xor
out
iret
adc
adc
push
int3
test
mov
rcll
mov
mov
push
sub
arpl
lret
shlb
or
rorb
sti
rolb
and
mov
int
mov
lds
push
test
test
lea
out
lret
leave
mov
add
xchg
rcl
leave
xchg
xchg
int
dec
dec
push
dec
dec
rclb
pop
rorb
inc
inc
arpl
rclb
mov
mov
lret
adc
dec
lret
cmp
adc
cmp
adc
stc
jnp
cmpsb
test
std
int3
and
or
ror
mov
add
dec
rcl
xchg
stos
into
test
adc
dec
dec
dec
nop
inc
mov
xchg
mov
outsb
lods
lret
nop
inc
push
cs
scas
lret
dec
lret
dec
cmc
iret
push
mov
les
cmp
mov
lret
inc
inc
inc
inc
rclb
push
adc
ds
test
inc
inc
rcll
rorb
std
into
jo
lods
nop
mov
nop
into
rorl
adc
add
lods
inc
lods
inc
scas
or
repz
xor
rcll
lret
dec
stos
dec
test
shll
adc
mov
push
dec
into
mov
inc
pop
inc
movntps
aas
fcomp
out
and
int3
lock
lea
pop
inc
loop
or
sbb
mov
push
loope
inc
pop
test
inc
gs
sbb
sub
adc
ret
lahf
jbe
xchg
mov
and
xor
into
cmpsb
inc
data16
push
hlt
inc
xchg
fldenv
in
mov
and
sub
ja
addr16
push
stc
or
mov
out
and
pop
bound
mov
int3
test
dec
dec
addb
repz
lock
shlb
xor
sub
sbb
and
push
sub
fildll
dec
out
retw
cmpsl
pop
in
dec
add
popa
add
popf
and
dec
insl
dec
mov
pop
jg
cmp
mov
inc
xchg
xor
sbb
fwait
cmpsl
mov
loope
cmc
mov
into
jg
jo
inc
mov
fmull
cwtl
inc
stos
movb
outsb
jge
lcall
push
xor
or
in
inc
call
test
movl
das
jg
aaa
jp
and
je
cmc
or
loopnew
jge
mov
scas
ret
xchg
push
dec
testl
rcr
orb
shll
push
in
pop
dec
pushf
in
inc
and
leave
fwait
push
push
out
cmpsl
ss
xor
es
sar
outsb
fmuls
pop
loope
jns
dec
mov
and
outsb
and
sbb
adc
test
jb
jbe
jecxz
mov
addl
test
gs
movsb
scas
inc
cld
inc
test
adc
fmull
in
or
outsb
sbb
into
or
scas
pusha
jge
in
mov
and
adc
mov
mov
xchg
push
movsb
inc
add
leave
sbb
push
ret
xchg
sub
and
loopne
ja
ficoml
in
scas
out
push
aad
popf
mov
fidivs
xor
sub
or
mulb
xchg
int
jne
mov
clc
je
loop
inc
push
imulb
cmp
in
xor
xorl
mov
push
jl
push
dec
sti
test
out
mov
xchg
xor
jns
inc
dec
and
mov
or
push
out
imul
pop
cmpsb
lret
xlat
push
inc
add
push
es
jmp
sub
lret
mov
pushf
dec
xchg
idivb
dec
mov
xchg
mov
cs
sbb
xchg
inc
cmp
scas
dec
mov
pop
jne
mov
xchg
pop
stc
cmp
popf
rorb
jo
sub
mov
xor
jge
jno
mov
xchg
sub
dec
clc
xchg
add
adc
outsb
fmuls
ljmp
out
les
js
jae
jo
dec
adc
cmp
mov
sarl
xchg
imul
lea
xchg
pop
into
xchg
stc
sbbb
cld
mov
jnp
movsl
das
es
ja
loop
stc
xor
movsl
mov
dec
test
inc
fdivrl
mov
cmpsb
cmc
sarb
stos
mov
fnsave
test
lea
jmp
pop
and
popf
js
out
sub
nop
mov
mov
push
push
sbb
adc
push
fists
sti
and
mov
dec
push
sbb
out
cmp
pop
pushf
out
push
xor
xchg
test
rorb
cmp
adcb
push
rclb
fwait
xlat
rcr
mov
dec
inc
mov
mov
inc
jno
inc
mov
mov
xchg
mov
insl
aaa
ja
xlat
pop
xchg
icebp
popa
test
scas
sbb
test
add
dec
dec
lea
hlt
mov
push
cmp
mov
xlat
test
sbb
jge
push
dec
das
in
add
cltd
sarl
repz
pushl
cmp
leave
js
test
and
movsl
and
adc
testb
dec
rcl
shlb
push
aam
lds
stos
popf
fdivr
clc
add
sbb
inc
xor
jae
shrl
punpcklwd
ret
call
cmp
xlat
test
or
into
cs
sub
cmpb
and
add
repnz
insb
ljmp
movsb
mov
outsl
sbbb
or
and
scas
pop
and
ret
xor
clc
inc
mov
lds
inc
cltd
shlb
ret
test
push
arpl
les
out
data16
jp
in
data16
push
pop
ja
das
outsl
jno
mov
leave
pop
jp
dec
int3
push
int
enter
ja
xor
add
jle
push
pop
mov
addb
test
outsl
inc
test
scas
pop
add
out
mov
pop
rolb
sub
loope
scas
inc
fsubrs
mov
adc
ss
les
stos
clc
lcall
mov
out
aaa
into
cmpsb
int3
lods
insb
sub
dec
inc
imul
inc
xor
mov
lcall
push
mov
iret
push
mov
out
gs
enter
fidivs
lods
scas
int
nop
ret
out
scas
inc
cmp
das
ja
add
lods
scas
loopne
mov
mov
cmp
xor
cmpsb
leave
xchg
test
dec
fstpl
je
mov
in
mov
mov
lods
pusha
push
mov
into
icebp
inc
inc
sub
daa
outsb
xchg
dec
pop
fnsave
inc
xorl
push
pushf
icebp
mov
inc
push
xchg
xchg
xchg
xchg
jbe
push
enter
ljmp
outsb
scas
push
pop
sbb
pop
sbbb
lods
pop
shl
lock
push
push
add
inc
inc
dec
iret
aaa
jg
int3
iret
inc
push
lea
call
mov
test
sarl
stc
imul
or
andw
sbb
jp
movsl
add
or
popa
rol
lds
icebp
mov
enter
sub
cmp
jge
cmp
in
adc
jb
ret
in
jne
jb
popf
pusha
test
or
int3
flds
xor
sub
mov
cld
mov
pop
test
xor
rcl
enter
dec
xchg
scas
adc
sbbb
cmp
cltd
ficoml
sub
or
lahf
push
inc
ds
mov
fwait
push
ja
ret
out
mov
gs
in
data16
xor
shr
adc
stos
bswap
mov
lods
outsl
mov
jo
mov
imul
sub
decl
ret
cmpb
mov
pop
jae
sub
pop
dec
xor
jg
sbb
loope
mov
cwtl
mov
or
cs
xor
in
xchg
cmpsb
inc
xor
out
mov
pop
bound
js
scas
int3
mov
jb
adc
push
xchg
cmp
dec
lock
sub
mov
add
jae
das
jbe
fdivrs
enter
inc
aaa
adc
gs
mov
mov
cmpsb
mov
ret
push
adc
sbb
mov
fiaddl
mov
inc
pusha
mov
inc
loop
xor
fcoms
popa
adc
sbb
jge
push
inc
inc
push
mov
mov
cld
xor
push
mov
xchg
mov
in
mov
lret
inc
adc
sbb
int
shlb
dec
mov
test
les
cmovnp
mov
pop
cmpb
xchg
adc
xor
and
xor
leave
xchg
sbbl
jno
roll
push
in
xchg
stos
test
inc
mov
jb
or
xchg
idivb
sbb
shlb
dec
imul
fmull
stc
outsl
mov
xor
in
jp
xor
xchg
pushf
flds
mov
scas
push
ja
sbbl
jge
cmp
stos
fnsave
hlt
mov
leave
popf
decl
bound
int
push
lock
sub
mov
dec
push
sbb
jp
sti
mov
mov
in
add
into
ds
adc
pop
ret
inc
mov
cwtl
sti
jnp
iret
dec
pop
into
push
pusha
ret
jb
dec
scas
push
inc
mov
stos
dec
sub
scas
insl
mov
orb
cmp
inc
ret
aad
mov
imul
ds
xorb
pop
js
call
ja
adc
stos
xlat
loop
and
shrl
js
add
adc
mov
out
movsl
jne
sub
xchg
push
movsl
popf
jecxz
sub
push
inc
gs
test
out
add
xchg
mov
mov
mov
inc
aaa
int
inc
ret
orb
dec
cmpsb
aas
dec
icebp
cmp
sti
insl
stos
rcl
aad
push
nop
cmpsl
repnz
aas
pop
xchg
sub
int3
mov
ror
aas
clc
xchg
je
lcall
xorl
out
ja
test
xchg
jns
dec
xchg
or
mov
push
jmp
cmp
add
push
scas
movsl
xor
dec
adcb
inc
push
push
ret
cmp
jp
inc
loope
xchg
mov
jns
xor
or
cmp
push
cmpsb
sar
arpl
mov
xchg
cmp
dec
add
stos
clc
scas
push
lods
xchg
lds
dec
test
in
pop
adc
or
popa
lret
or
je
adc
xor
dec
pop
push
dec
jge
in
dec
adc
cmpsl
adc
push
sub
ss
lock
shll
fwait
in
sarl
dec
mov
daa
sbb
pop
test
push
stc
jns
popa
or
into
mov
popf
sbb
fbstp
pop
xchg
pop
adc
dec
iret
rcll
lods
and
add
jae
or
mov
loope
xchg
jno
out
jno
jp
jp
mov
fsubrs
mov
push
in
je
daa
mov
enter
adc
rclb
adc
fcoml
rol
sti
adc
xchg
or
mov
stos
inc
cmp
mov
mov
mov
std
pop
xor
test
mov
sbb
push
sbb
mov
xor
mov
inc
test
mov
addr16
jg
lea
lret
lret
cmp
outsl
xor
pop
jae
xchg
imul
ja
aaa
inc
cmp
cmpsb
fisubs
mov
push
mov
inc
mov
and
or
stc
adc
inc
popl
push
push
cmpsl
dec
not
inc
xor
push
mov
in
aad
inc
nop
jns
mov
jns
and
cmp
push
scas
inc
xor
jbe
xchg
mov
inc
addr16
pop
inc
adc
push
adc
aaa
sub
loop
xchg
push
mov
fucomip
andl
inc
je
arpl
or
mov
fs
xor
xchg
xor
inc
or
repnz
and
mov
pop
inc
enter
test
or
and
rol
cmp
jb
lds
inc
movl
jecxz
push
sbb
adc
jbe
pop
ja
stc
lret
jne
out
mov
pop
test
add
outsb
sbbl
popa
test
and
dec
out
dec
inc
xor
sti
insb
jno
inc
clc
and
out
clc
shll
mov
inc
fcomps
cmpsl
fwait
imul
mov
mov
js
daa
inc
xor
mov
inc
out
stc
imul
lret
scas
cmp
jo
dec
out
push
push
cmc
push
mov
int
lods
jb
push
ljmp
pop
aad
adc
dec
loopne
insl
dec
flds
ss
dec
and
sti
stos
pop
shl
shll
cmp
popf
mov
inc
aas
sbb
in
jno
stos
dec
xchg
movsb
shl
dec
outsl
iret
or
sub
jecxz
in
add
xchg
ret
push
mov
xchg
or
out
idivl
and
scas
xor
sub
nop
inc
push
mov
xchg
call
arpl
jbe
into
lret
lret
mov
jg
orb
or
es
sub
and
in
xor
pop
rcrb
push
roll
pop
inc
push
inc
mov
sahf
inc
mov
test
lret
add
inc
xor
out
enter
je
in
sub
sbb
xchg
jg
repz
stos
std
insl
sahf
mov
mov
ljmp
pop
xor
or
push
pop
imul
jecxz
mov
cmp
jno
in
jg
in
out
dec
xor
mov
ja
adc
hlt
shrl
or
jae
dec
div
out
add
mov
inc
cmp
push
fisttpll
push
mov
sbb
sbb
repz
inc
pop
subl
and
lret
out
mov
jne
dec
shl
jnp
or
inc
sahf
lds
ljmp
mov
popa
push
mov
imul
adc
leave
pop
nop
mov
out
xor
pop
and
mov
in
push
inc
les
lret
or
adc
stc
sub
push
cmp
dec
int3
or
xor
fdivrp
sbb
ret
in
pushl
push
xchg
ret
lcall
mov
lret
leave
add
fadd
cmp
into
int3
adc
lret
lds
mov
jb
rorb
add
or
mov
push
mov
push
mov
inc
xor
out
push
fs
jbe,pn
and
stos
or
test
jo
pop
xchg
adc
fmuls
int
jge
mov
fmull
int3
mov
adc
xchg
mov
cmp
jge
lahf
pop
fnsave
or
ss
or
cli
xor
add
push
ror
mov
or
hlt
jb
adc
cmp
imul
popa
mov
or
and
dec
ret
cmp
and
roll
dec
inc
xor
enter
or
imul
sub
xor
add
push
mov
int
pop
fimuls
out
iret
dec
xchg
pushf
mov
jg
pop
out
sbb
in
fdivrl
sub
pop
jno
stos
mov
dec
dec
das
and
stos
icebp
inc
out
pop
repz
add
inc
xor
stos
insb
xor
xchg
shll
loope
xchg
sub
jmp
cs
mov
inc
ss
jae,pt
push
mov
adc
cmp
add
gs
push
in
ljmp
in
test
sar
mov
cmp
aaa
mov
xchg
in
insb
cmp
cmc
cltd
or
sub
jge
pop
sub
and
lret
mov
push
enter
lret
mov
inc
ja
mov
inc
les
int
sbb
and
in
outsl
jge
add
and
xor
insl
push
aam
jg
pop
loope
fucomip
subb
lret
mov
jle
push
test
push
imull
push
mov
lahf
sbb
insb
add
mov
insl
scas
js
inc
es
in
cmp
jge
or
jp
inc
ja
lret
mov
cs
mov
or
scas
cld
nop
mov
mov
cmp
repnz
out
shrb
movb
fdivs
pushf
lret
adc
hlt
lret
je
repz
push
cmp
push
in
popf
add
mov
add
cs
push
ss
int3
add
sti
sub
sbb
je
and
and
test
xchg
jne
xchg
imul
add
scas
in
xchg
mov
ds
ret
jge
cld
cmpsb
shlb
mov
je
stos
push
xor
jo
testb
test
stc
dec
sub
jo
and
mov
in
divps
and
xchg
push
shlb
out
into
dec
outsl
sbb
ret
or
mov
mov
cmp
push
jns
jne
hlt
mov
xchg
sub
cmp
xchg
dec
mov
push
xor
cmpsl
xor
cmp
adc
pusha
inc
and
cmp
cmpsb
jge
pop
test
jl
cli
dec
xchg
fwait
pop
fisttpll
das
imul
enter
cmp
pop
pusha
and
jle
shrb
loop
pop
and
movsl
popa
pop
dec
or
loopne
or
aaa
fdivl
dec
xchg
and
popa
dec
ret
xor
push
mov
inc
lret
or
xorl
inc
xchg
cmp
jp
lds
or
add
mov
jbe
gs
test
and
mov
inc
sub
push
dec
ret
xor
add
cmp
in
jae
fisubl
into
mov
shrb
xchg
cli
aas
mov
in
cmp
mov
push
mov
aam
rcll
xchg
mov
inc
shrl
stos
test
adc
data16
or
adc
mov
addr16
or
int3
dec
mov
fnsave
xchg
mov
adc
jbe
mov
insb
inc
mov
in
cmp
adc
iret
fsubs
push
test
loop
ret
sbb
gs
xchg
dec
xchg
and
popa
xor
dec
cmp
sahf
and
pop
xchg
rorb
or
data16
jno
push
xchg
or
xor
xor
jb
popf
push
push
adc
sbb
aas
imul
gs
pop
fdivl
pop
add
rcrb
or
cmp
xor
pushf
sti
lods
push
mov
and
pop
mov
data16
jmp
je
sub
data16
push
dec
and
xor
dec
add
sbb
dec
mov
jecxz
je
push
or
movb
movsb
mov
pop
dec
sub
leave
jle
jo
dec
enter
add
jns
xchg
mov
shlb
xor
pop
clc
ljmp
xor
popf
xchg
mov
inc
mov
pop
inc
in
rcr
testl
inc
xchg
dec
repnz
xor
adc
movsl
movsl
movb
dec
in
pop
sub
jle
cli
pusha
les
cmp
mov
repnz
rcr
pop
test
push
int3
adc
mov
lahf
fmul
ljmp
sub
lahf
mov
xor
into
cmp
xor
inc
lret
mull
in
test
adc
test
les
cmc
mov
pop
xor
xor
sbb
sub
push
xchg
push
stos
aad
dec
mov
or
psubusb
repz
push
test
jl
add
lea
pop
pop
cmpsl
mov
mov
inc
add
leave
mov
mov
jle
out
clc
push
cmp
push
and
push
cmp
sti
movsl
fld
add
pop
hlt
inc
notb
outsb
mov
gs
push
popf
or
stos
cmp
and
test
pusha
push
add
das
xchg
push
maskmovq
mull
push
push
outsb
dec
mov
inc
dec
in
push
movsb
cmp
inc
adc
push
nop
mov
mull
fisubrs
shrb
dec
fsubrs
mov
inc
call
shr
popa
sub
inc
dec
cs
jbe
lea
inc
xchg
or
fwait
shll
pop
lds
adc
shll
ja
sub
push
inc
sbb
pop
jle
lahf
mov
lret
inc
and
inc
in
pop
es
xchg
cmpsb
adc
inc
rorl
lea
push
push
xchg
lds
inc
test
xor
cmc
xor
test
xchg
xchg
pop
mov
cmp
test
cmpsl
xor
mov
lahf
imul
cs
ret
outsl
rcll
fstpt
jb
ja
jbe
push
mov
add
clc
ret
movsl
mov
mov
push
mov
leave
or
mov
xor
dec
dec
insb
xchg
xchg
popf
cmp
dec
add
push
add
icebp
or
xchg
and
xlat
xor
xchg
mov
lret
in
out
rcl
clc
xchg
sbb
and
ljmp
pushf
push
lods
dec
mov
insl
jecxz
in
ds
scas
shll
sub
xchg
mov
out
rolb
stos
orl
shlb
sbbb
lods
pop
mov
ret
or
add
sahf
cmpb
int3
shl
or
orl
pop
lea
sub
mov
bound
fmuls
ja
inc
cmp
and
cmp
rorb
xchg
pop
insb
push
mov
and
dec
lds
and
inc
or
mov
outsb
and
notb
add
fidivs
mov
mov
mov
mov
cmpsb
adc
dec
inc
fmull
mov
or
and
out
int3
pop
add
mov
push
fmuls
fsubr
pop
xchg
stos
out
xchg
lret
sub
add
popf
cmp
cmpsl
and
dec
pop
rcrl
in
and
push
popf
jo
aaa
cmpsl
jle
and
sub
cmp
roll
xchg
adc
in
insl
xor
scas
and
dec
lods
mov
stos
movsb
pop
push
xchg
fiaddl
push
aaa
or
ds
sbb
orb
lods
test
frstor
inc
jg
lea
stos
lret
xchg
or
push
xor
sar
or
add
push
daa
and
test
jmp
js
push
cli
jns
mov
pusha
jno
call
aaa
stos
dec
dec
movsl
movsl
fucom
add
popa
orb
xchg
pop
lock
add
xchg
outsl
cld
rclb
inc
mov
and
into
stc
sbb
addr16
lock
jmp
mov
outsb
inc
in
jge
or
xor
mov
out
mov
rolb
jmp
mov
into
js
push
into
lret
mov
jp
push
scas
cmpsb
xor
push
test
sub
shl
clc
xchg
dec
dec
jnp
call
mov
pop
mov
cmp
incb
hlt
in
ss
in
adc
test
lods
daa
sbb
gs
stc
mov
test
inc
pop
jmp
push
jge
xor
shl
xor
adc
ljmp
jb
push
out
inc
ret
fwait
adc
push
cmp
jb
push
jecxz
pop
push
xchg
push
es
repnz
push
leave
and
arpl
push
xchg
xor
inc
push
and
mov
add
loop
out
xchg
lods
movsl
and
hlt
pushf
xor
or
cmp
shl
mov
push
in
out
xor
push
aaa
mov
jns
cmpsl
pop
and
dec
mov
pusha
mov
push
insl
mov
xchg
stos
jecxz
nop
aas
clc
shll
adcb
divb
mov
sbb
or
ret
adc
fimull
push
push
insb
xor
add
out
sarb
push
loope
sub
movsl
jbe
inc
in
and
adc
mov
push
pop
push
cli
mov
andb
lods
sbb
jle
add
cmp
andl
or
mov
mov
push
sbb
stos
loopne
xchg
mov
sub
and
jnp
int3
inc
mov
adc
inc
cmp
mov
inc
mov
xor
shlb
ret
popa
fiaddl
in
jnp
scas
stos
jp
ljmp
dec
sbb
xchg
lret
push
out
cmpsb
dec
cmc
je
jnp
xor
inc
jmp
lret
imul
xor
lods
stos
in
sub
push
sub
cmp
in
mov
inc
insl
ret
fisubs
leave
add
jbe
js
jbe
popf
int3
pop
cmc
adc
cmp
push
sbbl
inc
in
fcomps
ffree
or
movsl
dec
jecxz
cwtl
testl
test
data16
xchg
mov
jmp
and
stos
bound
xor
aas
test
int3
push
fwait
dec
dec
fwait
adc
sub
in
sti
lods
pop
mov
pop
jge
jne
in
push
push
cmpb
stos
int
shrl
movsl
xlat
rcrb
xchg
mov
cmp
and
sub
push
xchg
nop
pop
jno
divb
lret
flds
bound
insb
mov
aas
jmp
add
nop
lods
imul
cmp
movb
and
push
push
mov
mov
aad
mov
and
int
xchg
je
loop
xor
fcmovne
mov
xor
in
push
cmc
add
and
cwtl
jo
shlb
jle
push
in
lods
fwait
in
add
hlt
jbe
xor
addr16
rcll
iret
pop
lcall
insl
pop
gs
dec
std
mov
or
rorl
cmp
dec
lcall
mov
xor
movsl
lock
ret
xor
addr16
ja
mov
aaa
mov
adc
inc
mov
sbb
push
mov
in
inc
inc
ret
mov
outsl
or
js
mov
data16
leave
jne
mulb
xchg
jecxz
aas
sbb
and
sbb
testb
xchg
fdivl
aam
pop
xor
mov
jo
jp
dec
adc
fisttpl
icebp
dec
cld
add
mov
mov
or
pop
popf
xchg
inc
sub
jo
fldenv
ljmp
dec
push
fnsave
shlb
insb
add
mov
lods
fstpt
or
ss
xor
and
and
push
in
xlat
scas
or
inc
out
xchg
mov
or
popf
aas
cmp
inc
sbb
in
lods
xchg
pusha
xor
pop
ret
adc
dec
jmp
jbe
xchg
or
inc
xchg
mov
xchg
rolb
cmpsb
mov
mov
pushf
jae
clc
cmp
push
repnz
pop
leave
jo
pop
jnp
aaa
aaa
add
test
add
xchg
xor
mov
dec
push
andl
dec
xchg
ret
insl
jl
shrb
stos
inc
outsl
pusha
insb
xchg
mov
jnp
fadds
aaa
cmp
stos
pop
dec
sti
idivl
loopne
inc
inc
sbb
mov
xchg
xchg
fwait
jnp
int3
jne
insl
ja
xor
and
popa
cli
ja
stos
aad
inc
push
and
or
nop
jp
dec
shrl
mov
sbb
and
addr16
sti
inc
aaa
test
jecxz
inc
shr
dec
shl
push
jge
sub
push
stos
cmp
repnz
push
xor
test
inc
ja
insb
outsl
mov
icebp
popa
out
test
add
adc
push
mov
lret
aaa
dec
lret
push
outsb
aad
ds
or
pop
dec
stos
inc
lcall
insb
cmpsl
cs
ljmp
repnz
mov
inc
push
fcoms
repnz
gs
jle
inc
dec
pop
xchg
addr16
sub
dec
lret
ja
test
mov
icebp
push
in
mov
testb
xchg
addb
daa
stos
js
faddp
mov
loope
adc
pop
jb
addr16
aam
add
lods
popf
inc
add
inc
repnz
push
dec
addr16
adc
push
lret
push
inc
fsubs
xchg
aaa
xchg
subb
bound
xor
lret
lcall
sub
jnp
push
xor
mov
fldl
and
adcb
pop
rcll
shlb
aam
test
movsb
push
cli
dec
jne
lcall
fs
scas
inc
sub
xchg
ds
or
inc
sbb
fistpl
adc
cmpsb
pop
into
push
rcrl
push
and
in
insl
cmp
cmpl
adc
out
mulb
addr16
push
push
mov
mov
sub
pushf
inc
adc
gs
fs
inc
ljmp
stos
pop
jecxz
push
inc
mov
stos
leave
clc
xor
and
dec
or
addr16
pop
inc
sub
loope
dec
mov
mov
adc
xchg
lods
out
mov
andb
scas
lds
lds
aaa
mov
mov
or
xchg
aaa
dec
jg
mov
jmp
fidivs
bound
daa
int3
jno
test
andl
mov
enter
std
stos
sahf
jno
jle
and
cmpsl
jp
adcb
add
pop
push
fsubrl
insl
dec
rcl
inc
xor
pop
mov
arpl
into
pop
popfw
out
jecxz
mov
or
xor
mov
mov
pusha
inc
pop
in
cmpsb
mov
loope
repz
mov
cs
shll
dec
push
xchg
and
mov
scas
adcb
add
dec
cli
jg
cmc
jg
jecxz
pushf
in
fcomps
mov
sarb
lret
sbb
mov
imul
rorl
je
inc
push
mov
mov
idivb
dec
cs
daa
int3
or
jp
inc
cmp
popf
add
dec
adc
call
dec
xchg
int3
cli
push
out
cmpsl
imul
lea
lds
fstpt
int
jo
es
and
icebp
mov
pop
ret
js
loope
cmp
insl
jo
jle
les
sti
lea
inc
aaa
andb
mov
jg
stos
addr16
jmp
aam
and
mov
jp
test
inc
popa
rol
loop
adc
adcb
lock
popf
jne
shr
psrld
adc
addl
in
cs
lea
inc
bound
and
pop
lods
dec
in
push
sti
xchg
aaa
cmp
add
fcompl
pop
push
sahf
test
inc
and
push
inc
push
inc
cmp
jge
in
mov
and
jg
inc
pusha
and
lea
adc
movsl
inc
aam
popl
mov
adc
or
cs
dec
mov
into
and
jnp
arpl
mov
stc
movsl
cmpsb
ficompl
sub
pop
adc
jge
cmp
xor
gs
imul
lds
jl
mov
pop
add
dec
in
dec
ja
push
xor
repnz
je
hlt
daa
push
sbb
adc
in
cmpl
sub
xchg
daa
add
adc
popf
lods
cmp
addl
enter
add
and
sub
mov
int3
push
movb
inc
inc
xchg
outsl
pop
push
dec
or
gs
out
jecxz
xchg
adc
inc
or
scas
lret
jp
jp
orb
mov
mov
int3
or
fdivr
cmp
pop
push
std
fcoml
push
hlt
pshufw
dec
and
lret
psubusb
jbe
in
sub
lret
mov
cmc
pop
mov
inc
stos
pop
dec
out
shlb
notl
stc
ljmp
pop
movsl
insb
inc
or
loopne
cmp
sahf
pop
pusha
test
and
xor
inc
mov
int
ja
lea
push
xchg
adc
jbe
xor
mov
adc
push
popf
adc
and
bound
mov
enter
or
sbb
mov
mov
xchg
and
push
aas
pop
cmp
jg
aad
es
xchg
dec
xor
sbb
xor
sub
xor
out
adc
mov
sbb
icebp
add
jae
mov
dec
shlb
aam
or
inc
mov
mov
pop
sbb
cwtl
fs
xchg
movsl
fstl
mov
xlat
in
mov
fs
mov
ret
cmp
cs
xor
cld
fiadds
aaa
mov
xchg
lcall
movsb
es
out
daa
cltd
mov
xchg
outsb
dec
mov
cmpl
ror
jmp
mov
xor
test
sbb
adc
sbb
int
enter
mov
mov
jmp
daa
sbb
cmpsb
jp
fimull
mov
int3
inc
mov
test
outsb
je
xor
mov
mov
jmp
ja
push
fcompl
or
ss
fcmovnbe
mov
dec
xchg
pop
fidivl
mov
push
lea
jg
or
jns
jmp
data16
xchg
lret
test
xchg
aam
and
shlb
cli
lds
out
add
popa
arpl
pop
mov
outsb
les
jbe
ja
xor
adc
and
es
cmp
popa
inc
xor
jp
lcall
test
inc
pop
lds
inc
out
outsl
xchg
jl
rolb
xchg
jns
cltd
mov
mov
xchg
jbe
mov
sub
pop
inc
decb
aaa
or
sbb
mov
push
cmp
ja
movsl
jge
fcoml
fadd
adc
insl
mov
or
cmpsb
sub
mov
outsb
out
inc
lds
pusha
jbe
or
shlb
aas
inc
xor
dec
inc
cmc
adc
hlt
imul
jbe
inc
cmp
lcall
popa
sbb
xchg
lds
sub
xor
lret
ror
divb
ret
sub
loope
xor
inc
or
push
sbb
mov
sub
addb
mulb
jp
fwait
movsb
push
inc
inc
cld
jecxz
ret
sbb
lods
mov
fnstcw
xchg
das
inc
mov
mov
inc
xchg
xor
cmp
leave
in
push
stos
divb
sub
loope
fisubl
clc
out
addr16
add
mov
in
in
mov
es
or
adc
bound
jecxz
int
mov
stos
cmp
xchg
pop
lret
lahf
shll
lock
nop
push
cmp
jnp
mov
pop
data16
adc
jecxz
idivb
sub
xchg
and
lods
inc
mov
push
jno
into
adc
call
test
cltd
loop
repz
icebp
outsl
mov
insb
dec
insb
xchg
xchg
popfw
ljmp
push
mov
aaa
movsl
mov
mov
dec
mov
je
mov
insl
jg
lea
ds
pop
jns
xchg
xor
adc
xor
mov
cmp
arpl
adc
dec
xor
ret
inc
es
add
xchg
dec
lret
loope
sbb
cmpsl
iret
inc
mov
aaa
iret
dec
mov
dec
sbb
sub
lds
xor
or
lret
pop
xchg
orl
cmp
into
mov
and
ret
mov
xor
xlat
dec
lret
in
jge
cmp
in
inc
push
rcll
cmc
inc
test
fistl
movsl
clc
lods
shll
push
cs
and
jp
cld
xchg
aad
pop
std
shr
push
xchg
xor
dec
movsl
movsl
add
adc
pop
sbb
inc
or
pop
mov
mov
mov
mov
xor
mov
icebp
push
jp
push
loop
scas
pop
jns
jns
jb
push
enter
jecxz
sbb
scas
ret
fwait
loop
pop
into
ficoml
pop
adc
pop
mov
adc
dec
cmpsl
dec
fidivl
dec
pop
insb
mov
xchg
sbb
mov
or
test
sub
mov
dec
inc
jnp
and
sbb
and
mov
mov
fiaddl
lods
sbb
cmpsl
stos
cs
adc
dec
mov
fs
cli
data16
sbb
fsubl
cmove
xchg
lock
test
cmp
mov
xchg
icebp
mov
jne
fsubrp
and
mov
pop
push
fld
mov
loopne
lods
loope
sbb
jne
mov
stc
mov
xor
imul
xchg
add
sub
push
mov
mov
shr
xor
in
mov
icebp
inc
push
pop
testb
mov
enter
hlt
inc
mov
mov
gs
cli
aam
ret
in
pop
xchg
movsl
rcl
leave
dec
dec
ljmp
cmp
dec
mov
inc
cmp
iret
les
cmpsb
or
cld
in
adcb
mov
ds
idivb
insb
cs
rorb
stos
and
rorl
sbb
dec
cmp
xor
inc
out
inc
fbld
lret
jbe
cmp
push
push
into
inc
pop
pop
cmp
cmpsb
repz
rcrl
jns
stos
js
test
mov
fwait
icebp
inc
inc
add
lds
mov
out
mov
addr16
int3
push
inc
int3
inc
or
xor
cmc
repz
push
sbb
jno
mov
lea
call
mov
sbb
out
shll
jno
ret
iret
sbb
cli
dec
popa
inc
mov
jmp
inc
push
pop
sarl
adc
rcrl
and
push
xor
dec
insb
imul
int3
cs
add
lods
jl
xchg
loop
insl
in
xchg
mov
and
cmp
adc
clc
leave
fldt
pop
fadds
loope
xchg
add
dec
inc
pop
push
or
xchg
cmpsb
jne
das
stos
sub
sub
mov
pop
and
xchg
jne
pop
inc
int3
mov
mov
enter
cmpsb
imul
push
lods
push
xchg
add
int3
movsl
les
mov
xlat
inc
add
lret
imull
and
fdivrl
in
push
stc
xor
xor
mov
fisttpl
dec
xor
mov
dec
les
or
mov
xchg
adc
inc
xchg
and
mov
fidivrs
pop
mov
sub
mov
dec
push
mov
sub
in
mov
inc
movsb
cmp
mov
inc
jecxz
fwait
dec
inc
loop
mov
or
dec
jns
jno
cmp
lahf
pusha
sbb
and
pop
push
push
shll
out
push
cmp
int
cli
pop
insb
cwtl
lods
shrl
mov
rorb
lss
mov
pop
out
jl
aaa
xchg
add
fwait
stos
enter
test
mov
stos
dec
cmpsb
dec
shll
ret
inc
fildl
cmpsb
pusha
aaa
daa
lods
push
inc
xchg
push
mov
jge
pop
hlt
mov
jmp
sbb
dec
dec
cld
dec
push
xchg
faddl
fstpt
leave
mov
jge
aad
mov
cmpb
je
jecxz
cmpsl
lret
mov
sbb
mov
cltd
dec
and
jns
inc
loop
pop
xchg
xor
lret
out
sarb
mov
xchg
mov
mov
and
je
jne
nop
add
dec
pop
and
rol
mov
xchg
push
jo
int
gs
dec
and
sbb
and
lea
cli
cmp
shr
cs
add
add
aam
inc
enter
mov
jg
push
popa
jge
mov
hlt
pandn
sahf
loop
dec
data16
mov
inc
cmpsb
sub
vmovntps
bound
popf
je
jle
mov
sbb
lcall
popa
adc
inc
fldenv
stos
test
ljmp
imul
bound
and
push
outsb
and
cmp
dec
and
int3
add
fwait
inc
jne
mov
mov
popf
dec
cwtl
adc
in
dec
cmp
or
xlat
inc
fcompl
lret
rcrb
aaa
xchg
outsb
les
outsb
in
outsl
out
in
divb
cmpl
mov
mov
movsl
adc
jge
adc
xor
mov
push
les
iret
stos
pop
mov
and
cwtl
outsl
xor
imul
dec
fildll
mov
test
dec
incb
popf
cs
pop
jns
sbb
or
test
and
xchg
add
cmc
ficoml
fstl
sub
js
bnd
or
movsl
xor
aas
rol
add
packssdw
jmp
xchg
ret
inc
ja
int3
jnp
test
xor
ret
movb
enter
jb
pop
add
pop
mov
repz
jae
ret
outsl
int3
or
stc
fidivrs
cmpsb
push
je
sbb
mov
sbb
shll
in
dec
xor
jle
cwtl
pop
dec
decl
shlb
mov
bound
sub
je
das
int
popa
jno
neg
orb
mov
cmp
nop
jle
mov
push
aas
loope
mov
mov
test
jo
cmp
inc
inc
push
mulb
mov
pop
xor
jp
add
in
lds
cmpsb
mov
xchg
cs
lds
dec
dec
pop
inc
pushf
sbb
pop
dec
jp
and
mov
xchg
mov
je
push
sbb
lret
pop
mov
fstl
bound
and
add
test
aaa
dec
lods
pop
jecxz
xor
dec
clc
enter
xchg
inc
sub
pop
ja
pop
mov
xor
xchg
popa
jno
mov
cwtl
inc
inc
mov
or
shll
sti
andb
cmp
xor
fisubrs
fwait
dec
test
enter
imul
or
ss
aas
sbb
mov
movsl
xchg
xchg
mov
dec
add
dec
orl
in
dec
fdivl
xor
dec
xor
das
pop
mov
sti
xchg
dec
aaa
into
movsb
pop
adc
in
sar
xor
xchg
hlt
xlat
cli
js
push
dec
pxor
es
sbb
adc
cld
sub
lret
pop
shlb
cmc
dec
xor
movsl
inc
stos
int
lret
mov
pop
popa
sbb
sarb
out
mov
stc
das
mov
mov
lret
shl
pop
cmc
pop
inc
fcoms
lea
scas
in
pushf
cld
xor
mov
jne
je
out
dec
orb
mov
popa
cmpsl
xor
push
mov
xchg
push
aad
add
pusha
push
cmc
push
cli
xchg
mov
int3
and
fadd
lds
xor
cli
push
adc
jp
pop
mov
mov
or
leave
adc
push
push
xor
xor
dec
mov
imul
xchg
jl
and
mov
inc
cmp
mov
pop
es
imul
shr
shld
daa
lcall
xor
sbb
inc
flds
add
scas
xor
push
repz
xchg
jns
mov
jmp
jb
cli
scas
fidivrl
ret
push
out
adc
rcll
push
push
ss
sahf
inc
in
inc
out
cmpsb
fidivs
dec
les
ljmp
sti
or
add
and
and
pusha
xor
int3
push
push
inc
push
aaa
mov
push
mov
outsb
lds
daa
sub
cmove
lods
sbb
xor
mov
stos
int3
cmp
dec
out
xchg
dec
and
push
jne
ret
dec
xchg
sub
inc
and
inc
test
and
pop
mov
data16
jno
mov
mov
ljmp
shll
daa
and
jo
push
push
xor
imul
shl
ds
cmpsb
jle
out
push
and
pop
cli
fstl
xor
and
pusha
es
shl
jecxz
ja
repz
lahf
cmpb
enter
lret
gs
sub
stos
add
or
jne
and
sbb
ret
cld
and
mov
jnp
xchg
rcrb
sub
mov
xor
inc
mov
nop
pusha
mov
fdivrl
lods
rolb
ret
mov
mov
stos
cmp
sbb
dec
mov
mov
popf
out
rcll
lahf
and
push
cli
jle
cwtl
ficompl
or
lret
mov
les
pop
inc
xchg
std
push
out
mov
and
xchg
dec
loope
fisubrs
inc
push
filds
push
pop
loope
dec
push
inc
sbb
test
adc
ss
sti
adc
into
dec
fwait
cmpl
js
das
mov
lea
pop
rorl
pop
xchg
loope
xchg
cltd
incb
xor
push
out
xor
cmp
mov
xchg
shlb
lea
divl
ss
sarl
xchg
mov
mov
cmpsb
lahf
movb
cmc
test
lahf
push
xor
cs
xchg
push
cmpsl
mov
loopne
inc
shl
pop
mov
mov
lds
inc
add
and
jbe
stos
loope
mov
mov
shlb
jnp
push
cmp
jmp
aaa
aad
leave
inc
inc
mov
lods
sbb
jno
out
xlat
inc
dec
push
add
adc
rclb
testb
lret
push
data16
fs
cmp
push
in
jne
xchg
xor
fisttpll
mov
int3
and
rol
leave
fs
mov
inc
insl
bound
mov
xchg
cmp
cmp
and
cltd
das
fnstenv
mov
rolb
pop
mov
les
sub
ja
int3
adc
scas
add
lods
scas
js
ficoms
aas
imull
dec
xchg
movsl
fadds
pop
mov
daa
insb
pop
ja
test
and
xor
pop
inc
rolb
cltd
addr16
aaa
xchg
fdivs
int3
in
inc
sub
mov
adc
sub
cmpsl
movsl
mov
pushf
mov
call
repz
xor
mov
sbb
dec
cmp
pop
jg
mov
pop
test
xor
inc
movsb
or
cli
loop
lret
sbb
out
ret
ja
adc
stos
push
cmp
push
or
ljmp
cmp
gs
ss
ret
sahf
fnstsw
xchg
push
pop
xor
pusha
mov
push
rcll
inc
mov
and
jp
gs
mov
and
mov
fisubl
jl
mov
in
aam
xchg
inc
repnz
in
push
mov
dec
sub
imul
xchg
or
sar
jne
addr16
push
mov
or
std
mov
andb
cmpb
lods
push
push
stos
xchg
loopne
xchg
clc
dec
push
cmpsb
lret
adc
fdivl
or
push
dec
xor
cmp
int3
mov
cmc
add
xchg
jbe
leave
add
aaa
jno
jge
notb
test
or
movsb
dec
sub
mov
hlt
cmp
cmpsb
inc
push
push
leave
xorb
lods
cwtl
inc
mov
xchg
imul
lock
xchg
jb
test
cli
inc
or
xor
jo
in
call
jecxz
pusha
xchg
dec
jo
sti
xor
jbe
in
lods
insl
add
movsl
xchg
data16
ljmp
rorl
add
ret
ja
stos
dec
fs
xor
pop
std
out
je
ret
insl
test
jmp
and
hlt
shll
int3
mov
int3
inc
aad
stc
mov
movsl
les
pop
lods
sub
xchg
lret
xchg
popa
divl
test
out
data16
mov
out
mov
loope
xchg
push
xchg
xchg
ret
inc
cmp
or
das
movb
pop
shlb
popa
ja
das
mov
cmp
adc
mov
xor
lret
das
andl
mov
xor
hlt
ss
aaa
ja
sbb
lcall
mov
dec
mov
das
out
xchg
scas
int
mov
ffreep
inc
lret
mov
lods
cmp
dec
loope
mov
lret
jp
cmc
push
adc
lods
test
mov
movsl
movsb
and
inc
adc
dec
jecxz
je
hlt
test
addr16
ss
div
sub
imul
cmp
xchg
xor
in
xor
mov
lods
fsubs
xor
out
hlt
call
lods
mov
rolb
insb
xor
mov
mov
adc
aad
filds
push
dec
psraw
inc
mov
pop
sbb
push
daa
out
aas
mov
adc
pop
mov
fbld
cmpsb
stc
imul
cmp
test
pusha
or
dec
lds
inc
scas
jge,pn
cli
out
lea
lcall
mov
xchg
nop
inc
dec
jno
dec
loope
adcb
jge
lahf
roll
xor
sahf
sahf
scas
jns
xchg
adc
mov
mov
cmc
xor
xchg
stos
and
push
push
adc
mov
in
push
xlat
mov
adc
jne
xchg
divl
jb
jne
push
lds
daa
imul
aas
xor
push
dec
sbb
testl
movsl
das
add
mov
add
ljmp
imul
aam
sti
jle
fdiv
xor
cltd
or
scas
ja
mov
pusha
aaa
or
movsl
inc
in
inc
inc
loop
in
insl
cs
sti
es
int
add
mov
movsl
jne
enter
mov
test
mov
inc
and
mov
add
xor
pop
xchg
add
dec
or
jecxz
mov
and
inc
push
cmp
das
sbb
addr16
xchg
mov
leave
gs
sub
jecxz
pop
shll
into
ja
into
pop
mov
lea
pop
cmpsb
movsl
lret
mov
sbb
lret
pop
dec
dec
ret
jp
mov
rclb
sub
ret
popa
popa
adc
mov
lods
push
push
imul
pusha
xchg
or
enter
sahf
mov
nop
bound
insl
inc
hlt
sbb
and
mov
mov
in
mov
dec
std
shlb
repz
xchg
inc
das
inc
fmul
in
arpl
nop
movsl
ret
into
pop
lea
mov
dec
sub
mov
cld
fcmovb
into
out
daa
call
pusha
push
les
js
inc
sub
push
repz
addr16
scas
inc
les
xchg
dec
cmp
pusha
idivb
mov
pop
mov
push
sbb
into
add
push
test
mov
ret
sub
rorl
adcb
sub
fstl
int
and
enter
cmp
roll
addb
mov
inc
xor
cmpsl
inc
aaa
in
jge
cld
movsl
adc
push
imul
enter
stos
cmp
loopne
dec
rclb
xchg
inc
xor
into
insb
dec
nop
clc
sub
sub
leave
mov
cmp
add
ja
push
ljmp
fcos
mov
adc
push
add
jp
push
mov
cltd
add
push
gs
sbb
inc
pop
leave
jl
lock
inc
add
in
jb
out
mov
mov
loop
sbb
popa
dec
mov
mov
jecxz
mov
data16
and
xor
push
ja
jno
int3
cmp
and
fisttpl
outsb
fisttpll
and
dec
sbb
int3
stos
call
mov
and
cmpsl
shrl
fsubl
add
xchg
mov
ret
movb
push
jnp
pop
push
stos
inc
pop
enter
dec
adc
pop
shll
xlat
dec
lea
xchg
or
in
xor
in
push
lods
jg
bound
xchg
jle
hlt
sub
test
mov
gs
lret
add
fsubs
mov
inc
xchg
dec
sbb
jl
xchg
and
inc
test
mov
int
shrb
and
xchg
xlat
outsb
repnz
mov
lcall
sahf
inc
cmpsl
mov
sub
rolb
nop
push
xlat
popf
pop
scas
sahf
aaa
and
adc
push
int
push
push
ret
mov
xor
xor
movsb
sbb
test
push
fistpl
test
shrb
in
movsb
xor
push
pop
xor
hlt
cltd
mov
mov
rcrl
test
jb
lea
or
sbb
pop
dec
xlat
popa
jb
lea
cmp
and
inc
stc
xchg
jmp
mov
std
imul
inc
addr16
jbe
mov
out
xchg
fidivs
aas
cmc
les
lret
dec
jne
and
in
jg
leave
data16
sbb
popf
xor
jl
add
or
mov
bound
inc
xor
into
cs
lods
orb
not
inc
iret
jns
inc
push
push
hlt
mov
pop
pusha
push
adc
adc
mov
ljmp
pop
xchg
sub
sahf
sbb
jno
int3
cmp
mov
push
sbb
sub
mov
cmp
mov
ss
and
stc
loope
push
add
push
xbegin
fdivr
xchg
inc
sbb
in
jnp
je
enterw
xor
mov
dec
call
insl
aaa
pop
push
adc
idivl
lret
push
adc
icebp
mov
inc
es
arpl
xchg
jb
movsl
push
pop
cmp
xor
xor
jmp
cmc
gs
leave
pop
pop
cmc
repnz
out
ret
inc
ds
std
iret
ret
push
dec
push
jecxz
push
testb
or
push
dec
loop
fwait
bound
es
push
pushf
daa
shl
dec
push
push
add
jl
push
mov
int3
push
test
mov
push
xchg
outsb
rol
adc
popa
mov
inc
or
push
int3
sbb
rolb
sarl
or
mov
rolb
shll
push
lods
adc
ljmp
scas
cmp
es
dec
ror
mov
ror
loopne
mov
mov
mov
pop
mov
mov
fiadds
movb
ror
shll
dec
mov
and
xor
iret
mov
loop
mov
adc
or
loop
mov
or
mov
mov
ret
iret
mov
lret
into
adc
xchg
rclb
mov
mov
scas
or
push
outsb
shlb
mov
push
outsb
mov
sar
dec
out
mov
adc
scas
scas
mov
repz
bound
mov
or
mov
or
adc
xchg
jnp
mov
rcr
mov
sub
and
addb
push
mov
out
cmp
mov
es
mov
test
xchg
mov
int
lea
xchg
xchg
xchg
push
adc
inc
and
arpl
push
rorb
int
dec
push
push
lret
or
pop
leave
dec
shlb
aaa
lea
inc
push
push
leave
inc
leave
mov
xchg
mov
pop
or
pop
loopne
dec
rclb
xor
test
push
push
adc
les
rolb
push
xchg
or
mov
push
adc
rorb
xchg
int3
push
mov
leave
add
or
scas
test
or
xchg
mov
dec
or
rolb
sar
push
subb
adc
aad
xchg
mov
and
adc
or
in
mov
inc
push
push
xchg
out
sbb
add
out
jp
fsubs
shlb
pop
in
shr
idivl
shrl
cmp
incb
test
cs
or
mov
out
sbbl
pop
and
aaa
cmp
and
cs
xchg
pusha
int3
xor
or
pushf
xchg
clc
hlt
fwait
stos
jno
add
inc
stc
dec
and
loope
add
mov
mov
orb
jmp
mov
popf
int3
xlat
mov
add
out
cli
rcll
hlt
notb
sti
gs
mov
cmp
movsl
and
gs
hlt
dec
mov
ljmp
in
push
xor
push
in
leave
dec
jb
cmp
push
aaa
lods
sub
mov
mov
dec
and
push
xchg
ret
or
inc
out
adc
add
cmp
push
xchg
shll
add
insl
sbb
sub
push
mov
nop
lods
dec
lea
mov
les
mov
dec
mov
push
adc
shrl
mov
xchg
xor
loope
mov
mov
clc
shrl
xor
es
cld
and
fsubs
push
mov
nop
pusha
js
pop
sti
bound
pop
cmp
js
scas
xorb
int3
fistpll
xchg
ffreep
push
sbb
addr16
jg
jnp
dec
std
addl
jle
inc
xchg
data16
and
cmp
insb
shlb
shll
inc
jbe
int
xorb
lods
cmc
jno
jbe
loope
mov
out
adc
mov
out
adc
int3
test
xor
add
and
lcall
mov
mov
fildl
mov
and
jns
sar
add
jns
test
decl
adc
xchg
mov
inc
add
or
sub
xchg
or
push
ja
inc
xlat
mov
imul
xchg
out
add
mov
iret
push
and
mov
lea
sbb
xchg
shlb
jecxz
hlt
movsl
out
fstl
ss
mov
and
cmp
addr16
data16
popa
loope
xchg
test
orb
sar
and
mov
xchg
mov
inc
cmp
cs
mov
xchg
movsb
mov
or
icebp
push
fisttpl
jns
lods
lods
stos
push
outsb
dec
xor
mulb
or
rorb
emms
lock
mov
cmp
mov
fcoml
xchg
inc
xchg
movsl
call
sarb
inc
out
daa
lds
mov
cli
push
movsl
jg
setle
mov
orb
push
frstor
in
push
sub
fdivrs
repz
dec
adc
jl
cwtl
push
nop
shr
mov
lret
mov
jge
add
push
jns
xchg
inc
iret
mov
jp
push
repz
mov
inc
or
pop
cwtl
ds
xor
jl
push
cltd
mov
or
notl
std
inc
roll
icebp
xchg
dec
stos
jb
push
iret
in
dec
lods
xor
cli
icebp
lret
push
mov
sbb
push
jmp
push
jecxz
ret
add
or
sahf
add
add
push
xchg
xor
divb
ds
xor
lea
jno
sti
loop
mov
add
stc
xor
pop
mov
xchg
int
dec
std
and
or
add
loope
sbb
mov
int3
enter
inc
sbb
mov
jmp
lea
movsb
or
inc
jnp
cwtl
mov
push
test
leave
pop
rclb
imul
andl
jle
adc
std
jae
push
int3
sub
repz
cltd
adc
inc
mov
or
xchg
pushf
cmc
dec
loop
mov
xor
mov
or
lds
fmuls
push
inc
ret
mov
inc
adc
rorl
pushf
lret
pop
test
sbb
and
sbbb
out
mov
in
hlt
jge
in
test
mov
pusha
cmpsb
push
add
mov
jmp
clc
cmp
pop
rcrl
dec
cmp
cmp
ss
mov
and
fadds
into
ja
in
pop
repnz
inc
xchg
test
sahf
xor
fcomp
stos
mov
daa
mov
dec
xchg
das
addr16
sbb
inc
pop
jle
xchg
xor
adc
xchg
mov
stos
push
pop
xor
pop
jnp
popa
mov
ja
push
mov
sub
dec
lds
stos
lahf
icebp
jg
xor
lods
dec
clc
jne
xorb
sub
jnp
mov
movsl
ret
ret
lret
xlat
js
scas
shl
into
in
pop
jns
in
int3
int
dec
repnz
inc
lcall
lods
xchg
outsl
inc
mov
mov
jle
shll
in
xor
imul
mov
mov
mov
cmc
xchg
scas
mov
inc
lret
aam
fwait
in
pusha
or
pop
fwait
in
push
mov
cld
inc
out
mov
push
push
sahf
notb
pop
adc
out
jle
adcb
push
add
pusha
sarl
mov
scas
pop
xchg
mov
pop
jo
iret
push
xor
jnp
ret
imul
test
xchg
jns
ret
out
inc
pop
jo
repnz
and
rclb
sahf
fiaddl
das
ret
xor
loop
lock
sub
mov
cmp
leave
dec
test
add
or
es
clc
push
mov
mov
jg
xchg
call
mov
hlt
mov
pop
inc
cmpsb
add
sbb
or
inc
add
mov
ja
sub
xor
daa
adc
inc
mov
inc
movsb
add
dec
or
mov
cmp
popf
xchg
push
pusha
aad
dec
movsl
int
xchg
xor
lea
sub
cld
test
int3
hlt
push
sub
push
test
cwtl
idivl
test
cmpsb
rcr
bound
mov
jp
mov
inc
inc
cmp
push
repz
int
xor
sub
nop
mov
inc
test
lret
dec
je
mov
scas
cmp
xor
lea
dec
add
jl
sarb
and
fsubrs
mov
jnp
cmp
test
int
adc
cmpsl
dec
fidivs
ficoms
mov
push
dec
mov
xchg
ljmp
fs
mov
div
mov
pushfw
andb
cli
sub
mov
xchg
push
iret
sbb
xchg
addr16
xchg
jmp
adc
or
shl
mov
ja
aam
cmpsl
push
lds
loop
xchg
ret
xchg
lret
int3
ret
xor
mov
mov
nop
das
add
aaa
cltd
int3
lret
sbb
adc
fwait
inc
insb
gs
aam
sub
pop
dec
jae
add
pop
aam
mov
test
lds
xor
cmp
mov
pop
mov
and
xor
xchg
push
mov
jo
pop
stos
mov
in
cmpsl
add
sub
push
out
in
xor
dec
xchg
xlat
movsw
inc
fdivs
call
and
popf
pop
sub
mov
ljmp
das
lods
xor
popf
orb
push
xor
scas
les
out
sub
jne
ret
out
xchg
in
jge
adc
nop
scas
inc
cmp
jne,pn
or
fs
cmove
cli
out
dec
movsb
xchg
popa
dec
dec
pop
jne
adc
cwtl
pop
cmp
jnp
lcall
mov
mov
mov
inc
popf
lret
arpl
in
pushf
inc
inc
pop
shlb
cli
inc
jne
jnp
lock
imul
daa
pop
dec
mov
xchg
int
xor
jnp
add
leave
cmpsl
and
aam
dec
test
adc
ja
mulb
sbb
sub
ficoms
inc
inc
or
cmc
cmp
add
mov
addr16
and
lret
clc
or
mov
mov
mov
aad
in
sahf
sbb
and
ret
xor
stos
sub
into
cmp
in
aaa
xchg
mov
adc
push
and
xchg
jne
lods
xchg
add
mov
or
sti
add
mov
add
in
in
xor
je
xchg
mov
cwtl
mov
imul
cmp
push
sar
push
sub
fistpll
jmp
fwait
testb
lea
sbb
test
xor
daa
andb
dec
mov
repnz
adc
add
add
and
xor
mov
repz
int
mov
dec
xor
adc
cmp
shl
mov
push
popf
jns
sti
int3
dec
sub
mov
inc
mov
cli
mov
clc
lods
push
pushf
aas
dec
mov
enter
sub
fptan
test
xchg
xor
daa
dec
inc
push
fdivrl
in
xor
sub
jbe
pop
mov
mov
lock
gs
test
jno
leave
jo
mov
mov
testl
in
divl
and
ret
mov
or
shll
cwtl
outsb
enter
xchg
in
stc
dec
xchg
jns
jg
xor
adc
pop
add
mov
dec
push
inc
out
push
popf
loopne
sbb
pushf
jge
cmpsl
imul
out
fnstsw
sub
inc
pop
sub
mull
popf
test
adcl
daa
mov
sbb
push
or
fs
or
fdivrs
inc
iret
mov
test
clc
push
mov
push
push
xchg
mov
fldt
xchg
or
lods
add
lock
insb
dec
jns
test
push
xchg
cwtl
add
aaa
cmc
push
mov
lea
popf
test
nop
inc
push
inc
lods
pop
and
pusha
push
sbb
mov
jg
xchg
push
into
data16
stos
push
les
inc
mov
testl
stc
mov
movsb
jno
js
pop
call
adc
cmp
mov
mov
addl
dec
xchg
or
inc
jl
pop
roll
mov
jbe
pop
push
mov
xchg
cmp
in
push
pop
adc
ret
icebp
pmaxub
jbe
pop
test
fs
jl
ljmp
mov
in
sbb
or
mov
jecxz
jne
jo
movsl
xor
sbb
add
adc
loope
sbb
testb
adc
sbb
aaa
xchg
cld
dec
lea
mov
and
call
dec
decl
and
adc
cltd
xor
sub
lret
dec
lods
sbb
movsb
fdivl
stos
add
ss
inc
int3
shlb
insl
fdivl
xor
data16
add
sub
cmpsl
divl
test
and
pop
inc
cli
leave
insb
dec
daa
ja
out
push
inc
jno
jbe
das
inc
push
jb
int3
xor
int
leave
movsb
pop
fmulp
push
fiaddl
stos
lods
repz
xchg
test
mov
ss
int3
or
movsl
pop
sub
movsb
outsb
xchg
jne
jo
int3
xor
in
cmp
cmpsl
clc
jbe
enter
xchg
pusha
cs
mov
loop
adcl
add
in
mov
jecxz
lods
inc
sbb
dec
lds
dec
lea
lret
mov
adc
cmpsb
push
add
sub
xchg
inc
add
cmp
popa
inc
xor
out
testb
enter
into
inc
addr16
setbe
aaa
add
and
mov
pop
pushl
adc
mov
add
push
inc
insl
push
out
dec
mov
dec
pcmpeqd
pop
dec
push
pop
repz
test
cmpsb
pop
jnp
dec
arpl
fwait
push
inc
adc
cwtl
pop
sbb
js
xor
gs
mov
insb
sti
outsl
icebp
xchg
adc
xchg
dec
mov
out
push
dec
dec
mov
leave
in
cmp
xchg
inc
mov
stos
stos
sbb
decb
loopne
les
test
imul
shlb
sub
dec
sub
push
dec
xor
cmp
lea
sub
xchg
fiadds
daa
push
cs
or
jmp
jns
and
mov
popf
dec
js
mov
ficompl
push
xchg
sbb
and
outsb
popa
xor
aam
jl
pop
hlt
fisubrl
insb
mov
ss
arpl
pop
pop
adc
push
and
movsb
mov
adc
inc
mov
arpl
and
movsl
push
push
dec
inc
inc
mov
or
aas
jp
inc
sbb
pop
cmp
mov
dec
fmulp
fisubl
xchg
sub
adc
gs
pusha
test
dec
cmc
jo
sti
xchg
pop
jg
popf
jno
add
gs
stos
pushf
push
sbb
pop
insl
push
lahf
sbb
fidivs
xorl
das
push
rcr
pop
jns
insl
ret
je
out
pushf
ja
push
xchg
xchg
sarb
dec
xchg
popf
xchg
mov
ret
popa
loope
sbb
dec
xor
xor
cld
add
cmc
mov
dec
in
mov
jne
repnz
xchg
mul
inc
or
sbb
push
popf
sbb
jno
inc
subl
hlt
leave
les
add
pop
inc
xor
cwtl
pop
inc
xchg
jmp
aas
mov
dec
aam
push
add
ss
enter
and
int3
stc
pop
test
pop
dec
mov
pop
push
xor
xchg
stos
stos
dec
xchg
mov
fwait
in
nop
push
pop
clc
adc
bound
test
mov
or
iret
sbb
fxch
jp
dec
fadd
pusha
sub
fisubl
jo
std
jecxz
out
pop
sub
leave
pusha
cmp
mov
icebp
outsb
lods
repz
dec
inc
icebp
cmp
jo
pop
or
aaa
cmp
pop
and
loopne
cli
ss
mov
jbe
in
leave
int
aam
into
rolb
into
in
mov
inc
jne
or
add
push
or
dec
mov
mov
inc
insl
or
dec
adc
repz
shlb
adc
inc
fcompl
sub
into
push
movsl
mov
inc
out
add
psraw
push
shrb
cs
mov
mov
sarb
int
pop
bound
xlat
mov
dec
mov
sub
outsl
call
sub
mov
mov
cwtl
sbb
popf
stc
or
jmp
jno
or
sub
jecxz
jnp
sub
mov
xchg
mov
and
adc
orb
aaa
out
adc
push
dec
lods
adc
mov
fidivrl
jo
ret
std
out
xchg
xchg
and
cmp
push
xchg
jp
aaa
sub
xor
pushf
inc
xchg
repnz
in
test
and
or
pop
or
stos
mov
out
test
mov
imul
adc
fdivp
stos
icebp
inc
xchg
xchg
lea
in
cli
mov
cmp
rol
out
or
mov
dec
push
xlat
mov
jbe
aam
shl
cmpsb
incb
jns
xchg
dec
fcom
lcall
rcr
pop
scas
mov
mov
cmp
and
into
ficoms
pop
mov
push
lea
enter
cld
popa
xchg
mov
adc
xor
cmpsl
and
cmp
sahf
popf
shll
xor
mov
mov
push
inc
add
push
cmp
roll
hlt
rcrl
xchg
xlat
xchg
inc
lret
push
xor
lret
movsb
test
mov
inc
and
mov
cmp
enter
stos
mov
xchg
aas
jnp
add
push
std
int3
fcmovnb
mov
loop
movsl
push
gs
cmp
cmc
divb
int3
jno
mov
outsb
rorb
dec
pushf
fidivs
or
fistps
xor
inc
dec
xchg
imul
adc
out
int
pop
xchg
shrl
inc
sub
in
out
jge
jns
push
fwait
mov
sbb
ja
xchg
or
push
mull
push
xor
xor
lods
inc
push
push
bound
xchg
dec
add
out
mov
jae
adcb
test
xchg
cs
or
sub
mov
fdivl
loopne
jl
iret
and
adc
das
outsl
stos
fisttpll
push
xchg
repz
int
add
fisubrs
jmp
dec
xor
xchg
xor
and
dec
pop
cmp
cltd
lret
or
popf
mov
inc
es
xor
ja
loop
das
xor
sbb
loope
jns
mov
inc
daa
int3
push
adc
cli
cmpsl
andl
dec
in
cld
mov
mov
xor
mov
jle
jb
push
push
loope
dec
sbb
insb
inc
xchg
jo
les
scas
daa
jg
pop
mov
mov
sub
mov
inc
pop
pop
mov
stos
xor
dec
cmpl
js
push
punpckldq
lods
add
mov
add
sbb
sti
loopne
mov
push
add
sbb
jle
sbb
cmp
out
xor
sub
movb
mov
mov
mov
lret
sbb
dec
js
sub
inc
mov
jg
repnz
sbb
sub
ss
imull
dec
add
test
mov
adc
or
and
push
inc
fiaddl
push
xchg
cmove
push
mov
cmpb
and
lds
sbb
and
test
push
out
dec
inc
push
shlb
je
jbe
jae
cmp
xchg
mov
rol
xchg
and
stos
mov
or
adc
lcall
xchg
enter
pop
cmp
or
pop
xor
push
dec
dec
mov
sbb
pusha
or
sub
jg
popa
dec
sar
mov
prefetchwt1
cmpsb
mov
test
daa
jp
push
sbb
sbb
aam
ret
lea
dec
shlb
inc
adc
jmp
orb
fnsave
outsl
sub
mov
add
movsb
adc
ja
mov
shl
jnp
push
in
pop
sub
sub
movsb
adc
fcoml
outsb
aas
cs
jb
cs
es
dec
cmp
adc
sbb
xchg
push
inc
cltd
jo
and
add
xchg
push
dec
ds
cmp
cmp
ds
movsl
pop
sbb
dec
orl
pop
addr16
jmp
mov
inc
mov
mov
lret
sub
xchg
dec
movsl
fildll
fidivrl
cmp
mov
nop
std
mov
sbb
inc
lods
fstl
insb
mov
repnz
gs
push
es
cmpsl
adc
leave
mov
mov
in
mov
jbe
or
in
fmull
xchg
repz
xor
loopne
jecxz
or
ds
pushf
sbb
lods
movsl
mov
ljmp
push
decb
and
ret
out
mov
stos
repz
shlb
cmpsl
inc
jg
das
sbb
pop
mov
add
icebp
mov
divl
ss
mov
jecxz
dec
xor
mov
inc
mov
repnz
stos
and
mov
push
add
dec
inc
inc
pop
jnp
repnz
fstps
pop
or
addl
xchg
loop
jge
sub
xor
pop
xchg
leave
test
pop
and
divb
dec
pop
dec
sbb
or
inc
inc
xor
shlb
fstp
es
xchg
mov
aas
sub
call
push
xchg
push
test
mov
push
and
dec
sub
adcb
xor
dec
pop
dec
xor
arpl
push
shlb
jbe
or
lret
and
dec
inc
in
xchg
mov
shrb
enter
cmp
xchg
shrb
adc
inc
ret
in
int3
pop
jp
aad
xchg
mov
mov
xchg
push
xchg
cld
testl
and
fcmovne
mov
mov
outsb
mov
mov
xchg
pop
pop
js
pop
lret
push
movsl
data16
imul
daa
lret
sub
iret
and
push
xchg
xchg
es
lahf
lds
je
lcall
in
popf
mov
pop
imul
insl
sub
add
rol
sbb
xor
xchg
ljmp
test
dec
inc
xor
les
notl
fildl
aam
ret
push
ja
adc
push
fstl
push
xor
daa
add
mov
mov
jp
icebp
imul
lods
int
scas
mov
adc
add
in
xchg
stos
sahf
loope
inc
mov
pop
in
mov
iret
cmp
out
ja
lcall
lods
pop
push
xchg
push
pop
sub
xchg
nop
mov
lret
fs
in
movsl
popf
jmp
ja
aaa
sbb
loop
sub
rsqrtps
inc
imulb
mov
pop
inc
xorb
loope
mov
jp
lea
xor
ja
adc
fadds
scas
cmp
sub
out
int
jle
repnz
mov
int3
mov
dec
dec
mov
xchg
jge
xchg
addr16
cmp
or
ja
notb
lods
xchg
dec
pop
sti
movsl
aad
mov
push
ss
pop
outsb
pop
jno
lea
mov
fimull
and
insl
sarb
lret
xor
into
ja
jb
dec
es
dec
and
inc
and
test
adc
pop
in
insb
out
xor
ss
insl
jmp
push
sbb
xor
int3
adc
rol
sub
lcall
mov
scas
sarb
xchg
bnd
pop
or
out
xor
adc
stos
lods
inc
mov
cmpsl
pushf
inc
subl
inc
adc
jno
data16
adc
sahf
mov
sahf
add
ret
cli
push
pop
ret
xchg
xchg
inc
dec
subb
inc
sub
cmpsb
leave
jnp
js
cld
pop
int
jnp
or
sub
pop
outsb
pop
insb
jge
inc
cli
push
inc
xchg
or
cmp
mulb
movsl
imul
in
mov
xor
sub
dec
mov
dec
pop
sbb
xchg
lock
lcall
fnstcw
xor
loopne
xor
cld
scas
jle
xor
lret
sarl
icebp
and
inc
sbb
ret
pop
jae
mov
aaa
lret
cmc
dec
add
sbb
mov
cld
pop
daa
mov
sbb
testb
shll
mov
arpl
pop
inc
int3
loope
dec
jns
adc
inc
xor
neg
sub
mov
test
cs
sarl
fldl
arpl
scas
dec
into
cmp
sarb
dec
fs
pusha
std
xor
dec
inc
or
aas
out
mov
mov
pop
stc
adc
icebp
sbb
mov
mov
xchg
push
xchg
or
iret
mov
loopne
sub
test
imul
into
and
adc
mov
adc
sub
mov
mov
dec
stos
mull
adc
sub
mov
bound
mov
adc
rclb
mov
jp
or
loopne
lea
mov
mov
repnz
cltd
pop
mov
popa
pop
aaa
mov
in
nop
sbb
int3
movl
jae
int3
jb
xchg
add
cltd
imul
outsb
dec
jle
imull
mov
jb
mov
push
mov
lcall
cld
lods
jns
dec
je
adc
push
adcb
ret
test
ror
std
adc
mov
dec
lods
andb
adc
clc
sub
pop
jmp
add
jge
xchg
aas
inc
xor
sub
pop
test
jo
out
mov
inc
fidivrs
popa
imul
xor
orl
hlt
pop
inc
push
pop
cmp
mov
mov
mov
cli
addr16
in
insb
shr
or
rolb
mov
pop
data16
insl
or
jae
out
mov
test
test
pop
movsl
in
or
adc
mov
and
pusha
pop
fiaddl
jg
mov
xchg
cmp
out
ds
outsb
lods
cli
fwait
push
dec
dec
aad
lods
int3
fcoml
aaa
xor
dec
push
and
aas
cmpsl
cs
lods
addr16
aaa
inc
popa
jge
testl
mov
nop
mov
sbb
mov
inc
sub
push
pop
lods
push
in
add
rorb
xorl
xor
jne
out
jp
dec
lcall
lea
inc
into
outsb
cmc
jnp
or
mov
fisubs
sti
js
adc
jno
idivl
daa
push
frstor
lods
stos
ret
push
xchg
xor
adc
imul
mov
cli
or
mov
pop
mov
pop
mov
pop
mov
aam
inc
dec
push
xor
add
lods
ds
dec
jecxz
mov
push
mov
pop
repnz
sarb
into
rorl
jno
movsb
pop
push
imul
jns,pt
mov
cmp
loope
mov
rcll
pop
sbb
sub
lea
adc
shll
cmp
ljmp
mov
scas
lret
mov
int
in
xlat
lret
pushf
lret
xor
inc
cli
dec
into
divl
ret
xchg
les
lds
push
inc
lret
pusha
push
cmp
mov
xor
imul
fisttpl
sbb
lcall
std
fsubs
and
cmc
rclb
dec
mov
cld
pushf
jge
jnp
in
xchg
or
addr16
inc
js
mov
sbb
push
add
cmp
adc
push
push
repz
inc
call
xchg
icebp
mov
scas
jbe
imul
inc
shl
shll
jge
in
push
jbe
movsb
xorl
and
add
clc
pusha
out
push
rcrb
dec
out
inc
mov
fsub
cmp
inc
push
xchg
pop
lds
push
in
mov
xchg
imul
push
push
push
jns
nop
or
sub
sub
out
jnp
sti
bnd
xchg
fmull
push
sub
mov
mov
adc
sbb
lds
imul
inc
xchg
es
ja
adc
add
mov
fsubl
pop
roll
cmpsl
cwtl
in
enter
cmp
cmpsb
and
js
xchg
pop
nop
jmp
adc
negb
mov
dec
inc
int3
jne
je
retw
inc
cmpsl
psubb
jb
dec
push
inc
inc
adc
aaa
dec
movsl
mov
out
push
mov
fcomp
cmp
or
das
jmp
sbb
pop
push
movsl
ds
jbe
adc
daa
push
pop
dec
leave
lret
int3
jecxz
gs
fdivl
dec
aaa
xor
jb
ja
adc
in
pop
xor
xchg
les
xchg
mov
and
pop
xchg
addl
xchg
mov
in
lret
xlat
dec
movsl
or
add
in
and
int3
sub
jnp
dec
cmpb
adc
lahf
rorl
pop
test
cmp
jbe
ss
xchg
lret
sub
jecxz
cmp
push
mov
imul
jp
cmp
mov
mov
push
inc
jns
dec
mov
lahf
mov
cmp
mov
nop
pop
scas
scas
push
aad
leave
addr16
aam
in
fistpl
sbb
rcrb
xor
sub
shl
aam
inc
dec
push
xor
gs
mov
xlat
push
loope
rorb
dec
call
adc
test
push
fs
jae
sarb
mov
hlt
test
mov
mov
xlat
cmp
cmp
jbe
testl
sti
lds
stos
les
mov
and
add
cld
dec
or
in
jno
jg
push
fs
fldl
lret
sbb
idivl
pop
cmpsb
cmpsl
std
filds
xor
and
fisubl
pop
les
jne
cmp
sub
jbe
lret
movsb
addr16
xchg
jno
mov
sbb
xlat
mov
pop
adc
push
lahf
mov
mov
lods
mov
out
sbb
in
iret
push
or
xchg
push
sti
push
test
add
imul
adc
mov
push
movsb
xor
inc
mov
cld
push
jecxz
sub
int3
in
xchg
dec
pop
xchg
inc
repz
push
test
mov
and
movsb
cs
xchg
mov
outsl
cmp
cltd
ret
mov
pop
or
mov
fdivs
das
cmpsl
aas
mov
orl
addr16
sbb
rcl
dec
fiaddl
or
imul
push
pop
shrb
adc
push
cmc
outsb
lcall
cmovl
jge
xor
sub
outsb
jmp
mov
or
mov
mov
fidivrl
enter
push
int3
push
push
ljmp
mov
insl
jge
repz
ja
cmp
sbb
sub
inc
ja
call
cs
mov
nop
mov
aam
lds
inc
in
popf
mov
mov
pop
inc
xchg
or
inc
sbb
or
inc
push
jns
inc
std
leave
dec
pop
xor
pop
subb
inc
dec
jmp
push
mov
pop
in
jne
cltd
outsb
fmulp
cmc
movsl
jbe
in
cmp
adc
add
pop
in
mov
add
test
into
sbb
pop
xchg
push
iret
sub
das
rclb
popf
in
inc
mov
xchg
inc
ret
aaa
jno
jae
stos
mov
es
or
mov
ja
pop
andb
push
push
repz
mov
jg
mov
pusha
imul
mov
adc
out
imul
push
rorb
stos
dec
mov
inc
add
mov
push
insb
jg
les
je
xor
orb
test
inc
mov
mov
add
mov
loope
outsl
cli
xor
test
dec
dec
add
add
adc
xor
mov
inc
push
rcrb
cmc
lods
push
cmp
outsl
rcll
cmp
add
xchg
and
int
mov
inc
pusha
mov
xchg
movsl
in
push
or
mov
pop
mov
ret
cmpsb
adc
outsl
sbb
mov
push
xchg
ja
popl
les
or
push
aam
mov
scas
sub
sbb
in
push
cltd
popf
daa
mov
jmp
scas
push
and
xchg
dec
popf
mov
cltd
and
mov
or
dec
faddp
jo
cmpsb
fdivl
inc
cmp
mov
lock
aam
dec
add
push
test
dec
jge
mov
add
lret
daa
mov
roll
fbld
into
and
jp
rorb
push
mov
xor
cmpsb
addr16
idiv
pop
leave
pushf
xchg
popa
xchg
test
mov
pop
insl
jae
aas
inc
in
cmp
dec
push
lds
mov
xchg
in
mov
mov
and
in
mov
adc
mov
enter
leave
repnz
xchg
sarb
sbb
sbb
jns
movsl
fsubl
js
xor
stos
push
popa
int
mov
cmp
in
push
aaa
jae
mov
mov
inc
or
push
push
mov
and
jecxz
sub
mov
add
incb
mov
lret
les
lret
push
inc
js
cmp
ret
and
mov
ja
xor
int3
jno
repnz
jl
sub
enter
test
clc
mov
sub
inc
int3
mov
pop
gs
jb
push
adc
bound
xchg
mov
xchg
cmp
mov
mov
lods
mov
push
addr16
cli
aad
stos
jl
mov
mov
inc
push
ja
cmp
in
jmp
popa
or
adc
dec
xor
jne
popa
data16
sbb
jb
xchg
sbb
outsb
iret
ljmp
sti
jns
scas
adc
dec
sbb
mov
push
sti
sbb
push
inc
je
mov
shlb
imul
lret
cltd
fldt
sub
cld
in
jnp
push
into
pop
push
fidivs
movsl
jecxz
push
mov
pop
cmp
fimuls
cmp
ljmp
hlt
jle
or
icebp
jb
jne
mov
mov
sub
mov
clc
pop
xchg
add
inc
and
adc
jp
adc
ret
imul
xchg
mov
or
lods
push
cli
mov
mov
rcl
mov
mov
sahf
lcall
cmp
adc
inc
mov
ror
shrl
icebp
lret
les
fnstsw
ja
xchg
push
pop
inc
fdivrl
das
addb
inc
shlb
out
inc
pushf
sbb
sbb
shll
push
ss
repnz
add
pop
scas
hlt
cs
es
mov
push
mov
jo
lods
outsb
sbb
imul
or
mov
adc
arpl
test
nop
loopne
popf
lcall
xor
inc
movsl
and
dec
jle
cwtl
push
lds
icebp
scas
mov
fidivl
in
mov
mov
leave
cwtl
jo
or
fidivs
xchg
push
ret
dec
sbb
imul
pusha
mov
roll
mov
mov
mov
inc
or
xor
mov
out
mov
add
push
lea
jne
sbb
sahf
js
mov
adc
add
dec
add
add
dec
ret
cmp
add
rol
outsl
nop
lods
mov
cmp
mov
push
gs
imul
loope
xor
hlt
lock
fdivrl
ret
cwtl
fbstp
inc
adcb
inc
xor
lods
popa
roll
dec
out
data16
jmp
jl
mov
ljmp
bswap
mov
or
sbb
add
scas
inc
jno
loopne
pop
cltd
shrl
mov
clc
adc
stc
cmp
mov
pop
idiv
les
sbb
cmpb
push
cs
mov
dec
push
inc
roll
movsl
cmp
loope
inc
cmp
push
inc
pop
pop
lahf
push
adcl
and
add
jp
dec
vcvtsi2ssl
mov
adc
rcrb
loope
dec
mov
int
jne
push
sarl
inc
xchg
into
in
mov
leave
push
ret
push
sbb
push
sarb
shll
cmpsl
dec
rclb
xor
jmp
sub
popf
or
push
xchg
dec
xchg
pusha
add
cwtl
adc
int3
jp
imul
mov
lret
cwtl
push
and
out
adc
sbb
pcmpeqd
int3
mov
push
push
rorb
rorb
nop
xor
mov
push
xchg
inc
or
aaa
inc
adc
lret
and
jp
pop
nop
mov
dec
fisttpl
xchg
jb
cmpsl
insb
roll
movsl
rclb
mov
les
dec
lret
jp
push
rorb
ret
movsb
outsb
int
push
into
push
xchg
shlb
jbe
dec
call
int
rorb
mov
mov
sarl
int3
mov
xchg
je
mov
insb
mov
mov
rol
je
aas
pop
test
into
lods
iret
shl
xor
test
inc
dec
test
push
nop
cltd
shrb
lret
dec
inc
or
adc
mov
mov
rcll
xchg
leave
mov
imul
inc
adc
adc
test
push
or
inc
mov
push
rorb
shlb
dec
mov
lds
xchg
into
cmp
mov
xor
into
or
xchg
xchg
dec
nop
dec
rorl
xchg
jmp
xchg
dec
dec
leave
les
xchg
cmp
mov
test
test
ds
mov
sub
or
lret
test
cmc
dec
cmp
or
into
mov
into
insb
dec
into
push
push
stos
dec
push
or
mov
insb
xchg
mov
xchg
mov
dec
mov
sarl
adc
arpl
inc
shll
fs
bound
jge
cmc
pop
sbbb
mov
mov
adc
popa
xchg
mov
loope
push
jmp
aaa
ja
jg
xor
or
insb
arpl
pop
push
int3
mov
dec
dec
inc
jmp
cmp
jne
push
inc
xchg
adc
mov
bswap
addr16
xchg
pop
jno
dec
ja
negl
and
pop
push
fcom
mov
aaa
ljmp
daa
xchg
dec
aam
jecxz
insl
insb
xor
and
ret
in
movsb
flds
faddl
inc
adc
cmp
xlat
jl
fstpt
test
adcb
cmp
add
inc
push
xor
mov
jnp
xchg
cmp
stos
push
xor
shll
mov
xchg
repnz
lret
push
bound
dec
subb
add
rcrb
lret
or
cmp
lahf
stc
int
mov
dec
and
jecxz
leave
lods
mov
xor
mov
movsb
aaa
aam
out
mov
arpl
push
sbb
dec
jmp
xchg
lods
int3
dec
mov
ds
jns
cwtl
dec
inc
inc
adc
ja
sti
fidivrl
aaa
int
lcall
scas
in
out
xchg
insb
les
ret
jmp
ret
dec
dec
addr16
cmpsl
jmp
jecxz
push
push
adc
xor
fcmovnbe
adc
out
cli
repz
je
ret
loope
cli
daa
insb
inc
push
mov
jp
push
xor
cmp
push
cmp
pop
inc
mov
int3
gs
fstpt
movsl
inc
clc
cmp
mov
pop
adcl
movsl
loope
adc
pop
sbb
invd
cmp
and
push
sbb
pop
jae
fistpll
movsb
lods
sbb
lret
xchg
lods
enter
xor
push
das
int
popa
push
cmp
mov
push
addb
push
adc
mov
les
pop
and
andl
xchg
clc
sub
jno
dec
xchg
dec
js
fisubs
insb
cmp
xor
aaa
push
dec
pushf
loope
add
leave
adc
inc
xchg
push
push
xchg
cmp
rcrb
dec
mov
int3
sub
or
mov
pop
push
cmpsl
fabs
cli
mov
ret
movsl
pop
cmpsl
adc
push
inc
data16
add
jecxz
cmpsb
xchg
xchg
mov
sbbb
in
or
in
lret
or
dec
test
sub
and
xchg
pusha
cs
out
fsubp
aaa
nop
mov
xchg
mul
movsb
sbb
mov
testb
mov
adc
lahf
xor
pop
inc
mov
jno
ja
mov
sub
lds
or
xchg
jno
jl
stos
shlb
aam
loop
pop
dec
test
push
in
mov
cltd
xor
aas
or
hlt
imul
lret
or
test
in
add
shlb
push
in
or
je
lret
push
fmul
das
or
xor
sub
pop
inc
fstl
adc
lret
dec
push
popa
dec
push
mov
pop
test
inc
ror
xchg
inc
cmpsb
push
test
in
int3
jge
addr16
movsl
sbb
xor
xlat
pop
movsb
xor
mov
addr16
xor
lahf
ror
pop
or
cmp
or
data16
insb
push
lcall
jno
fs
cld
cmp
push
pop
cmp
fiaddl
mov
mov
adc
mov
aad
fucom
lret
stc
adc
loope
xor
ret
mov
sbb
int
push
sub
mov
aaa
mov
es
movsb
ds
pop
imul
jecxz
mov
pop
inc
push
adc
lds
std
adc
arpl
mov
inc
sti
jg
stos
stos
fs
xchg
dec
jp
dec
pushf
mov
int3
int
or
mov
add
sub
cltd
nop
testb
rclb
jns
dec
or
inc
adc
push
xor
mov
mov
jns
pop
inc
fnsave
jge
int3
lret
inc
and
jns
aas
jns
ss
push
lea
pop
xchg
imul
inc
mov
es
in
or
lcall
mov
popa
rorb
fwait
cmpsb
inc
xchg
mov
insb
sbb
mov
mov
ds
lock
outsl
sahf
push
roll
pop
xchg
push
dec
or
mov
test
jp
into
shll
push
lock
xchg
adcb
fucomp
je
gs
das
adc
leave
rorl
mov
icebp
cmc
jns
mov
sbb
inc
sbbb
shlb
fs
cmpl
jb
xlat
loope
inc
inc
xchg
les
into
pusha
cmpsl
sub
in
jge
popa
int3
push
xchg
adc
shll
loope
or
imul
add
out
outsl
clc
cmpsb
pop
ret
ss
loope
jmp
shlb
dec
push
les
bound
push
mov
mov
popf
pop
shrb
and
mov
pop
lret
ja
loope
mov
fs
rclb
mov
cmpsb
jo
or
inc
mov
xchg
lret
jp
les
inc
jmp
xchg
cmp
cltd
mov
inc
jg
mov
call
test
xor
outsb
in
in
lcall
jnp
add
jns
in
repz
dec
and
mov
cmp
lods
push
addr16
movsl
inc
adc
lods
fcmovu
lds
inc
cmpsb
inc
add
jb
fs
push
jg
mov
cmp
push
movb
jg
push
insb
push
aam
test
repnz
test
js
rol
add
dec
sbb
sarl
or
lock
repnz
mov
add
inc
out
mov
fsubl
je
mulb
mov
lret
cwtl
lcall
call
es
xor
int3
out
mov
dec
test
js
mov
adc
xor
jo
nop
pop
adc
mov
mov
loopne
rorb
push
lahf
int3
cmp
ret
das
popf
cmp
xor
bound
and
out
int
test
mov
fdivs
xchg
and
jo
fistps
in
ljmp
lds
fcmovnb
hlt
cmp
popf
into
jno
icebp
or
jle
mov
mov
rclb
in
adc
adc
lods
mov
xchg
jg
pop
inc
faddp
int3
fcomps
mov
jnp
and
stos
mov
cmpb
mov
and
imulb
adc
out
sbb
shll
fidivrl
mov
and
push
movsl
es
data16
les
jb
inc
or
sbb
or
cmp
cmpsb
loope
push
pop
sbb
pop
lods
test
inc
je
test
jns
dec
loop
pop
aaa
ja
out
lcall
add
inc
sub
inc
leave
icebp
scas
cmpsl
stos
incb
popf
jae
outsb
mov
mov
dec
test
mov
ljmp
pop
mov
into
fistpl
pop
scas
mov
mov
dec
rolb
xchg
lock
push
mov
add
jno
push
xchg
jecxz
push
mov
push
leave
shlb
or
xchg
je
shlb
cmp
ret
fs
out
add
mov
mov
int
jecxz
adc
and
lahf
out
loope
mov
cmp
jns
add
cmp
clc
shlb
push
dec
jne
mov
sti
mov
test
mov
enter
cld
and
cmpb
in
mov
mov
shlb
clc
mov
pop
inc
jg
les
imul
fadds
inc
xchg
iret
test
cmpb
aas
mov
and
out
sbb
xor
mov
shlb
dec
xor
adc
xchg
hlt
in
pop
jge
lret
xchg
inc
out
jb
dec
inc
lods
dec
sbb
dec
inc
cli
lret
dec
inc
pop
or
faddp
add
mov
pusha
xor
pop
sti
dec
add
sbb
loopne
mov
shl
adc
stos
stc
dec
and
ret
lcall
cmp
ret
adc
add
popa
fwait
hlt
fldt
rolb
xlat
sbb
adc
aam
cltd
and
mov
rclb
loop
ret
in
ljmp
jns
cmpsl
cmp
inc
loope
stc
cmp
into
jp
adc
enter
push
add
mov
and
cmc
xchg
popa
xor
stos
nop
ja
movsb
mov
jp
cli
add
push
pop
insl
hlt
push
push
jp
or
ret
inc
mov
lock
sbb
sbb
jle
movsl
je
mov
sbb
iret
or
loopne
mov
mov
inc
jle
mov
mov
int
jns
push
addr16
daa
mov
inc
inc
mov
mov
pusha
mov
sub
mov
jns
xchg
sub
and
inc
clc
mov
mov
daa
stos
adc
xchg
call
in
inc
out
push
dec
push
rcrb
shll
xor
sub
mov
dec
xchg
in
les
sbb
lea
roll
pushf
dec
adcl
imul
push
movsl
popa
lret
out
jmp
scas
or
inc
push
cwtl
and
aam
outsl
jne
or
imul
aaa
and
insb
lods
orb
imul
and
lret
xchg
sub
mov
shll
xchg
lods
sbb
and
dec
xchg
jmp
fstpt
fdivrs
pop
xor
sti
mov
dec
xchg
std
mov
xor
mov
lret
ret
push
xor
jp
mov
adc
scas
cmpsl
dec
push
sub
call
lahf
mov
lea
lods
aam
xchg
shlb
push
sbb
outsb
mov
lahf
pop
mov
data16
orb
mov
or
shll
imul
mov
out
xchg
jo
lods
pop
clc
xor
outsl
inc
mov
icebp
ds
aad
fs
shrb
mov
add
mov
xor
int3
scas
lcall
xor
js
add
xchg
stos
lret
pop
stos
mov
mov
and
xor
xchg
sub
cmc
out
nop
sub
lcall
dec
sbb
mov
jle
push
stos
out
out
outsb
sub
sbb
or
ds
sub
xchg
jo
sahf
pop
in
call
push
shr
in
ss
push
xchg
lea
jnp
cld
cmp
in
sahf
cli
add
jge
sub
mov
bextr
cs
push
and
xchg
out
in
loop
sub
imul
or
sarb
ss
push
iret
mov
dec
hlt
aaa
inc
nop
jnp
enter
fstps
fs
inc
xor
mov
leave
fdivs
mov
shl
loopne
mov
xor
cltd
gs
sub
icebp
dec
es
dec
dec
cli
xchg
hlt
jns
xchg
cmc
inc
flds
dec
mov
sbb
scas
hlt
popa
mov
ss
adc
notb
mov
in
jbe
push
lea
mov
sub
or
inc
repz
ss
mov
popa
shr
xchg
push
adcb
pop
cltd
xchg
in
xchg
cmp
jb
add
test
fadd
pop
push
lods
add
push
inc
ret
ret
ret
ret
bound
push
rcrb
ret
or
mov
dec
roll
setno
shlb
mov
lock
xchg
iret
pushf
pop
push
or
mov
mov
shrl
sqrtps
sahf
icebp
or
arpl
cmp
insb
mov
dec
adc
push
iret
push
mov
scas
lds
add
loopne
ret
pop
push
dec
cmp
cs
outsb
dec
shrl
push
inc
push
leave
lret
shrl
cmp
test
or
push
inc
or
xchg
psrlw
dec
or
into
into
test
mov
push
mov
or
add
leave
lret
mov
xchg
rorl
dec
sti
mov
or
dec
nop
lret
xchg
mov
dec
rcl
lret
dec
mov
push
fidivrl
mov
xchg
mov
mov
mov
dec
push
xor
push
push
test
cltd
mov
orb
push
scas
scas
lds
push
dec
inc
add
inc
xchg
dec
inc
inc
xchg
psrlw
test
push
rolb
xchg
push
mov
xor
adc
test
adc
mov
pusha
xchg
into
lods
adc
nop
dec
rcll
rolb
int
push
pop
aaa
mov
push
ret
nop
push
xchg
nop
nop
mov
push
mov
rcll
inc
dec
push
ror
mov
into
mov
rorl
lods
cmp
lret
test
rclb
adc
mov
roll
mov
dec
push
lret
dec
inc
dec
iret
rclb
iret
mov
rorb
cmp
push
adc
sbb
pop
jne
leave
or
mov
lea
and
aam
data16
xchg
xchg
and
ret
test
and
pop
inc
daa
or
mov
jmp
loope
mov
ja
push
stc
out
mov
scas
mov
inc
cli
dec
inc
test
insl
in
loope
pop
ljmp
dec
call
and
inc
mov
inc
faddp
test
cs
popa
add
cmp
daa
aas
lahf
orb
enter
cmpsb
and
and
pop
mov
sub
out
mov
xor
aaa
aam
pop
movsl
push
mov
ret
sbb
inc
cwtl
leave
dec
mov
pop
mov
xor
dec
sub
sub
movsb
scas
cmpsl
mov
or
mov
addb
or
inc
sarb
sarb
les
dec
stc
call
shrl
dec
inc
sub
sub
xchg
dec
cmp
iret
test
dec
jge
cmpsb
ss
push
jecxz
dec
scas
push
xchg
lea
jnp
mov
push
xor
das
movsl
xchg
fidivl
sub
pusha
or
sub
test
inc
sbb
nop
loope
mov
sub
dec
inc
jb
das
pop
mov
xchg
xor
js
js
push
fists
fildl
add
out
ss
out
jle
adc
repnz
mov
jae
jae
fwait
in
data16
sbb
stc
out
movsb
inc
gs
leave
cmpsb
lock
sbb
ret
stc
ret
jbe
test
inc
icebp
xlat
jne
out
jp
xchg
or
ds
fidivs
mov
sub
and
sbb
mov
mov
aaa
mov
adc
pop
fldt
push
xor
popf
movsl
adc
cmpsl
data16
dec
push
test
sarl
es
pop
push
mov
inc
mov
stos
xor
lcall
in
into
aam
ja,pn
cwtl
jne
test
ret
leave
pusha
scas
push
aaa
xor
inc
aaa
ss
cmpsl
push
add
out
jnp
inc
inc
xor
sbb
pop
shrb
xchg
push
out
pop
mov
mov
pop
movsl
insl
ret
adc
rcll
xor
mov
ret
ja
gs
dec
and
xchg
adc
mov
push
cli
mov
xor
cmp
in
sbb
aaa
stos
add
int3
dec
fidivs
mov
sub
mov
ds
add
dec
mov
push
std
fst
nop
and
add
push
jb
xchg
jecxz
aaa
test
fists
ja
mov
ljmp
aad
imul
gs
xchg
xchg
mov
test
push
bound
mov
cmp
ret
xorl
and
dec
fsubs
and
mov
les
fdivrp
sbb
or
into
push
xor
cmp
mov
je
push
data16
xor
roll
xlat
ret
jo
inc
repnz
scas
and
add
into
sti
cli
push
test
push
test
jmp
sub
rcll
popa
ja
pop
inc
cld
imul
xor
adc
inc
mov
loopne
mulb
shlb
popa
dec
and
stos
add
ret
push
ja
divb
loop
or
push
jbe
enter
mov
pop
mov
call
jle
outsl
int3
frstor
push
jge
push
dec
addr16
and
xor
in
hlt
in
dec
push
mov
inc
pop
ja
sbb
stos
jne
add
pushf
jg,pn
cs
loop
jb
inc
lods
jnp
popa
idiv
add
in
mov
dec
mov
stos
push
push
test
cmp
and
popa
fiaddl
loope
or
dec
jl
fucomp
jbe
jmp
mov
fisubl
mov
jns
lret
adcb
insl
test
fmuls
add
pop
arpl
in
and
pop
outsb
mov
dec
inc
mov
xor
mov
dec
popaw
jno
cmpsb
xchg
jb
xor
pop
inc
imul
sub
lret
cmp
dec
test
dec
subl
popa
push
icebp
push
or
scas
mov
jge
mov
loope
push
sbb
icebp
js
adc
jl
xor
cs
nop
negl
ret
sbb
notl
aam
mov
inc
fs
sub
xchg
cwtl
jb
sbb
jno
push
int3
fmul
test
popf
pop
add
jbe
xchg
pop
fistl
movsl
adc
aam
int3
jge
dec
int3
mov
mov
je
ret
mov
xor
and
mul
push
flds
mov
inc
fnsave
rorb
xorl
xchg
jnp
sbb
inc
mov
rep
mov
adc
pusha
cmova
mov
xor
lret
pop
push
push
test
lahf
pop
fsubl
jno
adc
cmpsl
xchg
test
mov
pop
push
lock
mov
aad
enter
sbb
bound
xchg
xchg
outsl
or
mov
jns
mov
xor
out
pop
rclb
stc
fwait
jg
addr16
es
dec
fs
arpl
cmc
pop
test
pop
xchg
or
in
std
and
and
bound
in
dec
mov
sub
dec
mov
mov
jb
sub
lret
mov
mov
enter
xchg
mov
xchg
push
icebp
into
mov
sbb
mov
jne
aam
xor
inc
push
sbb
and
ljmp
inc
sub
jb
or
xor
pop
mov
lret
test
mov
sub
cmpsb
and
jmp
shll
les
shr
stc
lret
popa
xorb
xchg
mov
add
stos
mov
or
or
mov
movsl
sub
dec
mov
cltd
inc
add
test
ss
or
xor
mov
insl
orl
pop
in
popf
xchg
xor
scas
cmpsb
mov
aam
mov
shrb
dec
dec
jge
push
imul
push
jnp
and
je
pop
ret
inc
inc
fiadds
mov
sbbb
inc
lock
adc
outsl
sub
imul
xor
cmpsb
xchg
pop
xorl
cmpsl
pop
frstor
ja
mov
adc
mov
dec
jl
pusha
or
push
inc
xchg
rolb
mov
xchg
ret
nop
xchg
inc
call
ret
in
dec
pop
adc
sub
sbb
mov
jno
mov
ss
xchg
xor
out
or
mov
cmpsb
lcall
or
mov
dec
sbb
dec
push
test
inc
scas
cld
mov
xorb
fiaddl
mov
push
hlt
sbb
mov
cmp
xlat
mov
out
push
idivb
mov
sahf
loope
inc
out
inc
add
ss
cld
das
sub
pusha
push
std
adc
fdivp
add
add
sbb
int3
sbb
std
test
pop
jge
mov
into
dec
pop
add
in
in
je
pop
test
mov
xor
repnz
and
jnp
sarb
les
lods
or
mov
lret
jle
mov
aaa
jmp
cltd
les
and
xchg
inc
in
imul
sbb
fildl
mov
lds
jg
jno
dec
inc
sub
push
inc
inc
push
xor
lods
pop
ret
mov
cmp
sbb
loope
sbbb
cmp
lea
mov
cmpsb
lock
arpl
mov
lods
xor
xor
shll
push
mov
or
xchg
mov
sub
lret
jmp
pop
mov
mov
push
and
dec
les
ret
sbb
ret
xor
das
jnp
sub
shrb
cmp
jg
enter
lret
xchg
jp
mov
and
xchg
inc
int3
ret
push
lret
mov
jb
frstor
xor
xchg
adc
or
stc
jmp
xchg
test
xor
iret
dec
fdivrs
adc
or
jae
pop
jo
out
pusha
dec
fwait
jne
push
sbb
and
mov
fnstenv
lret
imul
xor
jo
cmp
or
loop
int
scas
test
mov
out
inc
sub
repnz
ja
dec
fidivrs
add
gs
fcmovbe
adc
sub
in
or
out
mov
inc
iret
dec
push
test
shr
sub
add
mov
and
xchg
inc
mov
jg
aas
shlb
lcall
inc
fsubs
adc
test
insl
dec
inc
xchg
and
and
movsb
xor
mov
sbb
fmul
add
xor
or
lods
ficoml
out
lods
and
push
in
into
jne
ret
addr16
cwtl
test
cltd
push
movsl
lds
mov
out
test
jp
int3
xchg
xchg
sti
movsl
lcall
mov
mov
lret
movsl
rclb
cltd
jp
mov
mov
jmp
cli
lods
mov
pusha
adc
lea
xorl
lret
mov
inc
sbb
push
dec
test
push
cmpsb
mov
pop
mov
daa
dec
or
sbb
cmp
shll
adc
dec
adc
jbe
pop
jmp
cltd
xchg
jns
idivl
ja
ja
mov
inc
push
inc
add
les
addl
jns
data16
insl
pop
inc
repnz
dec
and
cmp
mov
mov
adc
xchg
inc
fmul
cmp
adc
dec
loopne
xor
pop
mov
push
les
jnp
sub
ss
in
lods
adc
mov
mov
enter
pop
rcll
ja
mov
jo
addb
cmp
int3
sahf
mov
xor
adc
dec
rol
or
ds
xor
ret
aad
jg
leave
lock
movsl
fisubs
lds
add
aas
loope
clc
icebp
sub
xlat
outsl
push
xorb
leave
or
mov
les
aad
or
adc
lret
pop
fdiv
daa
mov
dec
dec
xchg
fcompl
and
push
adc
hlt
sub
pushf
adc
gs
ret
dec
imul
sar
jbe
xchg
dec
clc
push
jp
ljmp
xchg
adc
test
loopne
jno
ficoml
cld
iret
insb
sbb
lods
cmp
push
add
movsl
cmp
or
hlt
or
fs
sbb
pop
mov
xchg
mov
movsl
push
mov
sub
dec
xor
cmc
xor
jecxz
repz
mov
pop
pusha
gs
movsb
fisubrs
ret
inc
mov
gs
xchg
es
xor
ret
cltd
add
pusha
in
out
mov
inc
call
jmp
sub
dec
cli
ljmp
aad
xor
mov
add
mov
jnp
ja
out
add
hlt
jno
mov
rcrb
xor
push
int
xchg
fisttpl
cld
mov
in
dec
aas
pusha
cltd
mov
scas
int
push
aas
mov
into
pusha
rcrb
jg
mov
jo
xlat
and
pushf
mov
mov
and
cmp
adc
jp
insl
jmp
shrb
mov
lea
nop
stos
sahf
andl
pop
int
aaa
inc
inc
xor
test
mov
sbb
sub
inc
stc
fisubl
outsl
sub
call
add
nop
pop
cmc
sub
pop
out
xlat
fnstcw
inc
push
jl
rorb
scas
into
push
outsl
pop
cltd
lret
push
add
inc
xchg
bound
shll
out
popa
lret
or
fdivrs
and
shlb
xor
ljmp
mov
scas
mov
lea
andb
sbb
out
jae
or
addr16
insb
mov
xchg
xor
jbe
jge
sub
push
push
pushf
xor
hlt
push
or
sub
lods
fnstenv
test
mov
mov
pop
in
test
fidivrl
push
loope
xchg
mov
ja
inc
hlt
sbb
xchg
mov
mov
sbb
aaa
xchg
ret
dec
not
jae
loop
xchg
insb
dec
shll
shlb
cli
data16
inc
lret
jmp
aad
clc
jecxz
ret
pop
stos
pop
dec
rcrb
sub
mov
jg
mov
or
ja
ss
in
lods
or
lods
xchg
add
jp
cwtl
add
lret
adc
into
add
pop
xor
rclb
iret
inc
jle
fsubl
pop
xor
cmpl
jecxz
or
and
int
adc
pop
out
mov
jle
loopne
insb
adc
loopne
dec
lret
fnstcw
inc
push
addr16
scas
inc
mov
xchg
inc
movsl
jb
fcomps
push
daa
dec
fwait
mov
or
cmp
jge
ror
fimuls
jle
shlb
mov
push
xor
cmp
xlat
fs
jle
ror
in
addl
lcall
test
pop
pop
xlat
pop
stos
mov
jecxz
lcall
xchg
sbb
push
fmul
imul
mov
or
and
mov
mulb
lret
icebp
jnp
jl
idivb
fisttpl
mov
insb
jl
mov
cwtl
adc
mov
in
cltd
and
int3
fisubrl
jl
fs
adc
ds
pop
cmp
or
push
clc
mov
pop
sbb
cmp
mov
stos
shll
or
andb
std
into
xor
xor
das
and
mov
push
mov
pushf
cltd
sbb
pusha
fdiv
mov
push
mov
pop
popa
dec
inc
in
push
lods
pop
lods
test
fwait
aad
lcall
scas
adc
dec
pop
push
neg
inc
cmp
gs
pop
hlt
ja
cmc
jge
lock
lds
movsl
inc
sbb
push
xchg
mov
dec
bnd
inc
lods
cmp
cmpsl
roll
bswap
dec
rcr
cmp
rcl
fcompl
adc
ja
sub
lcall
and
scas
mov
mov
nop
sub
jno
and
and
dec
andl
roll
add
cmpsb
push
inc
filds
inc
adc
mov
mov
pop
add
popa
dec
cs
fmul
movsl
push
cld
jmp
sbb
imul
rolb
mov
into
jmp
mov
in
push
mov
push
stos
sbb
mov
js
add
push
adcb
cltd
out
mov
mov
pushf
icebp
pop
inc
xor
adc
fnsave
test
mov
data16
or
int3
inc
fstp
cmpsb
dec
loope
pop
ret
xor
inc
movl
jo
xchg
mov
jl
cmp
je
test
sub
adc
int
fs
pop
xor
jnp
mov
dec
sub
add
into
les
fnsave
sub
jge
and
push
sub
jecxz
mov
push
dec
mov
jnp
sbb
data16
lods
out
inc
and
lret
xchg
lcall
mov
repz
xchg
mov
or
into
dec
add
arpl
loope
ss
mov
rcll
inc
sbb
push
movsl
mov
mov
mov
leave
mov
adc
rol
sub
cli
je
stos
adc
scas
js
xor
jle
inc
inc
daa
cld
ficomps
hlt
lds
cmc
jecxz
dec
xchg
sbb
cmp
movsl
clc
cmp
or
xor
cmp
sbb
xchg
jo
pushf
mov
jbe
into
enter
sub
fwait
int
pushf
or
mov
lahf
push
or
scas
cmp
loop
lds
mov
dec
ret
enter
ja
cmp
mov
rep
pop
xor
cmpsb
push
jne
xor
loopne
icebp
cmp
mov
mov
pop
push
mov
mov
stos
loopne
adc
out
idivl
in
lret
sahf
daa
ret
xchg
shl
mov
repnz
mov
outsb
movsb
or
xor
jbe
fisttpl
mov
je
daa
rcrb
jb
xlat
repnz
psrlw
out
nop
xchg
ja
jno
push
xchg
int
pop
sarl
stos
adc
dec
daa
aam
daa
mov
add
xor
gs
lea
ret
inc
repz
lea
jecxz
sbb
dec
sbb
pop
int3
jge
scas
test
mov
scas
cmp
jg
push
add
add
out
dec
xchg
sbb
adc
and
lret
fistpl
int3
sub
sub
int3
test
and
jmp
das
mov
movsb
pushf
and
shll
mov
ret
out
lea
dec
pusha
rcrb
xor
pop
ret
mov
mov
minps
fisubl
fbstp
sub
int
mulps
hlt
test
or
sbb
jb
in
ja
xchg
out
cvtps2pi
leave
movsl
testb
cmp
inc
mov
mov
mov
inc
pop
js
std
dec
jg
repz
jns
pop
dec
xor
pop
sub
lds
arpl
sub
mov
loopne
lret
mov
movsl
ret
pop
out
sub
cmp
and
push
idivb
inc
sbb
cmp
in
movsl
cmpsb
je
push
jnp
mov
aaa
inc
std
fwait
xchg
sub
lock
ja
jbe
jp
pusha
lret
popf
or
jb
push
int3
sti
fmul
xor
daa
jge
hlt
dec
and
es
xchg
jle
mov
dec
popa
stos
xor
sbb
cmp
ret
and
mov
inc
adc
push
ljmp
dec
inc
mov
loope
mov
std
fdivrp
cmp
test
fbld
mov
adc
push
dec
jns
test
test
inc
sbb
out
xchg
stc
outsl
pop
ljmp
xchg
pop
push
inc
pusha
into
stos
or
and
ss
pusha
cmp
loope
int
fsubrl
jmp
xchg
imulb
and
into
into
imul
add
leave
loop
and
clc
negb
push
push
push
shrl
fwait
mov
scas
pop
add
or
push
dec
xchg
shrl
cmpsb
xchg
push
rol
test
inc
cmpsb
mov
and
out
in
jb
inc
cmpb
mov
xchg
fiadds
or
call
or
sarb
jae
jns
sbb
mov
cli
jo
mov
push
inc
push
fidivrs
adc
or
out
dec
inc
shll
jno
sub
push
movsl
pusha
adc
lds
adcl
sub
sbb
ss
mov
xchg
xor
negb
sub
inc
ja
pop
mov
sub
popa
ret
mov
xor
inc
rcr
jb
mov
aam
xchg
sbb
scas
and
ljmp
ja
or
inc
xor
shlb
inc
outsl
jo
fistl
push
orb
cmpsl
jbe
aaa
or
das
pop
ds
in
add
aas
shll
dec
mov
dec
ret
popf
dec
jae
xchg
in
fwait
add
cmp
push
mov
inc
xor
insb
jp
push
movsl
ja
repnz
outsl
sahf
xchg
dec
push
mov
cmp
icebp
jne
mov
and
std
or
movsb
nop
dec
in
or
xchg
sbb
and
aaa
jo
pop
jo
sbb
mov
xchg
das
stos
mov
outsl
pop
lods
lret
pop
mov
cli
mov
nop
push
imulb
push
dec
inc
aad
clc
mov
fmuls
mov
jne
cwtl
rclb
xchg
out
xchg
movsl
cli
mov
xchg
rcl
lods
cmpsb
out
xchg
lea
mov
mov
test
inc
inc
push
je
test
cmpsb
sbb
mov
lret
push
int3
dec
fdivrs
mov
and
sbb
pop
into
rolb
fs
inc
mov
push
movsb
sbb
fisttpl
ror
mov
stc
ret
lods
fnstsw
movsl
mov
cmp
out
test
inc
les
rcrb
jp
lret
push
dec
movsl
lahf
pop
pop
test
repz
jne
jecxz
fadds
icebp
sub
xor
jg
cmp
aad
add
mov
in
sbb
aas
adc
test
xor
jns
test
push
popa
icebp
js
lcall
out
push
push
xor
sbb
daa
xor
lods
jns
push
fildl
mov
aaa
adc
daa
xor
and
test
cld
adcb
pop
loop
sti
dec
test
xor
mov
push
pop
or
mov
inc
mov
sbb
cmp
mov
lret
inc
fsubl
and
insl
popa
sub
int3
outsb
fistl
mov
adc
repnz
out
test
inc
dec
cld
cmp
test
mov
ss
cmp
xchg
dec
enter
jp
push
cmpsb
mov
inc
push
mov
inc
xor
idivb
sbb
int
dec
sub
sbb
sbb
push
mov
dec
aaa
sahf
arpl
or
mov
dec
sub
pushl
mov
ljmp
in
mov
dec
pop
dec
imul
das
jecxz
xor
decl
nop
icebp
mov
mov
out
ret
xchg
sbb
xchg
ret
lds
xchg
dec
mov
xchg
inc
inc
cmpsb
std
push
xchg
cwtl
or
sbb
mov
jle
dec
repz
testl
dec
into
xchg
loop
mov
stos
or
push
inc
loope
in
stos
imul
aaa
inc
jo
jbe
mov
add
adc
stos
xchg
mov
pop
sarl
rolb
xor
notl
sbb
sbb
mov
mov
pop
push
daa
shlb
cmp
fimull
pop
xor
sub
out
inc
clc
add
xorb
ds
inc
and
cmpsb
mov
icebp
and
xor
pop
cld
aas
dec
jecxz
cmp
into
icebp
ss
cmpsl
lahf
jmp
leave
addr16
pop
cli
shrb
and
inc
ret
sbb
sub
scas
xor
inc
push
inc
test
dec
mov
ss
inc
insl
mov
imul
insb
push
add
roll
add
and
xchg
je
push
xor
insl
adc
cmpsb
xor
dec
pop
test
cs
cld
mov
inc
mov
jle
push
add
jle
mov
adc
int
into
in
or
adc
jno
popf
aam
lods
push
fldl
repnz
ret
test
mov
movsb
int
test
cmp
push
mov
es
outsl
mov
lcall
sbb
push
dec
mov
fcmovne
inc
dec
out
inc
stos
xor
mov
repnz
mov
xor
insb
dec
jno
xor
jmp
xor
dec
push
cld
xchg
dec
pop
xor
mov
jno
mov
dec
push
loope
dec
mov
xlat
mov
ret
sbb
andb
fsubs
cmp
cmp
jl
mov
sub
loope
jmp
gs
iret
cmc
lret
jle
adc
jo
hlt
and
dec
mov
and
jno
inc
aam
daa
js
sbb
shll
xchg
and
sub
add
mov
sub
cld
adc
cmpb
push
and
pop
icebp
mov
sub
dec
dec
mov
out
shlb
ret
or
mov
push
sbb
fmull
pop
sti
xchg
inc
loope
je
push
loop
ja
add
aad
aaa
jnp
pop
adc
ja
xchg
js
in
inc
fisubl
pop
pop
xor
adc
lret
cmpsl
testb
mov
ss
xor
enter
mov
xchg
fiadds
xchg
mov
sub
adc
movsb
xor
xchg
dec
inc
ror
in
adc
aas
into
pop
mulb
mov
sub
data16
xor
loope
loopne
mov
fiaddl
imul
test
les
xchg
cmp
xchg
dec
dec
cmp
cli
dec
stc
cmc
sub
mov
test
sbb
cmp
ret
rorl
ds
fstl
push
inc
cmp
dec
int3
or
jne
jmp
adc
pop
leave
mov
xor
add
xor
in
cs
mov
pop
or
movsl
lret
and
mov
fsubrs
fstpl
inc
cld
aam
enter
outsb
and
testl
mov
aaa
dec
sub
aas
jge
dec
fdivs
hlt
bound
cmpsb
ja
jmp
push
icebp
js
mov
out
mov
hlt
mov
in
cltd
xor
cmpsl
rcl
jne
sub
incb
adc
or
shr
aaa
pop
lret
addr16
push
sbb
add
pop
pop
inc
xchg
fdivl
inc
push
gs
mov
mov
xchg
fmuls
cmpsl
pop
push
adc
adc
lret
fdivrl
loope
mov
aam
insb
in
xchg
inc
push
sub
cli
sbb
xor
test
test
inc
xor
xor
ljmp
sti
sub
pop
xchg
aaa
rcl
iret
xchg
adc
jnp
push
out
insw
inc
push
inc
int3
ljmp
xor
jae
std
mov
ret
sbb
lock
sbb
mov
dec
or
idivl
lods
dec
push
fsts
mov
ret
and
into
ljmp
popa
dec
mov
mov
icebp
movb
dec
les
sbb
jecxz
pushf
sub
shll
xchg
jg
and
icebp
xchg
mov
jnp
cli
add
mov
scas
and
dec
outsb
aas
mov
push
xor
mov
inc
or
cmp
das
in
pusha
push
int3
stos
adcb
inc
lods
aam
jbe
shlb
mov
hlt
jle
cmpsl
outsb
popa
bound
mov
dec
inc
mov
adc
and
sbb
loopne
adc
ret
aaa
loop
outsl
orl
mov
mov
pop
das
xor
push
inc
xchg
cmp
jbe
xchg
stos
icebp
push
movsb
int
fmuls
aam
sbb
cmc
movsb
dec
enter
lret
rcrb
dec
push
cmp
dec
cmc
pushf
icebp
ss
mov
add
mov
xchg
test
xor
enter
xchg
rolb
mov
or
xchg
ss
add
cld
sbb
jne
inc
sub
addr16
adc
es
cld
scas
push
pusha
mov
adc
int3
mov
xor
mov
mov
lea
iret
cld
jg
aas
mov
add
pop
test
jle
ret
sub
push
scas
test
sbb
sbb
les
jo
jecxz
cmovno
mull
dec
js
dec
mov
cmpsb
dec
aam
out
pusha
dec
cmp
pop
ss
dec
xchg
mov
jp
negl
in
into
dec
adc
mov
adc
movsb
add
fadds
adc
push
mov
pop
fs
pop
sarb
jg
dec
inc
dec
mov
xor
mov
out
dec
test
shll
cmp
ljmp
mov
in
inc
mov
sti
lds
pop
mov
xchg
add
xchg
jbe
fisttpl
fisubrs
adc
loop
mov
clc
xchg
jp
pusha
es
andl
pop
pop
inc
push
pushf
mov
out
pop
insl
add
inc
and
pop
push
xor
mov
sub
addb
inc
loope
jle
int3
fnsave
pop
and
push
shrl
popf
xor
and
dec
jmp
mov
data16
pushf
movsl
andb
push
adc
mov
add
in
cwtl
mov
mov
js
sub
fs
lahf
mov
mov
adc
testb
arpl
sub
add
frstor
fildl
popf
mov
enter
lods
pusha
inc
push
jmp
mov
mov
je
push
cwtl
jle
and
fwait
push
mov
ror
pop
sub
sti
in
gs
or
outsl
jle
mov
scas
pop
mov
add
pop
cmp
mov
xor
into
cs
adcb
cwtl
mov
lods
ljmp
daa
xchg
ret
jno
movsb
cld
jae
lods
or
jne
mov
repz
lods
lret
pop
inc
or
movsl
ss
sarb
ret
mov
xchg
jnp
test
sbb
jmp
ret
test
push
or
jbe
in
movsl
imull
ds
xor
and
ss
es
dec
pop
xchg
add
mov
pop
dec
inc
movsl
pop
in
pusha
dec
test
imul
mov
movsl
sarl
int
xchg
and
inc
ja
es
pop
filds
testb
push
loope
mov
test
inc
xchg
push
shrl
and
data16
insb
ja
xor
xchg
jle
push
cwtl
fcmovne
jl
jns
ret
fucomip
jge
inc
and
in
ljmp
add
mov
shl
pop
fists
mov
jmp
repnz
movsb
fadds
push
pop
test
test
jne
stos
mov
mov
in
inc
es
cmpsl
push
pushf
sbb
loope
cmpsb
and
jecxz
jbe
fcmovnu
stc
imul
shl
xchg
rcll
cmpb
mov
shlb
outsb
testb
imul
shl
mov
sahf
arpl
or
push
aaa
inc
and
dec
inc
unpcklps
inc
mov
or
inc
sbb
sub
movsl
lds
stc
adc
dec
clc
or
xor
cmp
in
out
lock
aas
das
pop
ja
xchg
pop
xchg
repz
sbb
inc
shrb
sub
xchg
ljmp
pusha
aam
cltd
push
dec
lcall
stc
dec
jno
pop
outsl
repz
out
fwait
into
out
dec
aaa
ret
ret
and
cltd
int3
cmp
or
aad
push
lret
adc
imulb
aam
inc
xor
mov
and
cmc
inc
pop
and
addb
in
inc
mov
lret
push
orb
stos
int
and
jno
jmp
mov
push
dec
mov
jmp
xor
sub
jge
addr16
lcall
sub
aad
imul
loopne
cmp
stos
jno
xlat
and
xchg
adc
repz
mov
fidivs
and
clc
xchg
daa
mov
cld
test
mov
addr16
cmp
and
add
fiadds
sub
andb
addr16
leave
pop
into
fisttpl
sbb
insl
mov
daa
js
lret
test
jne
stc
adc
add
mov
mov
movsl
mov
inc
xor
int3
pop
test
adc
mov
adc
out
into
or
inc
sarl
es
mov
xor
add
fucomp
or
cmp
jb
add
mov
xchg
popf
adc
xchg
popf
fwait
adc
pusha
jmp
mov
and
jns
andb
sub
negb
push
or
outsl
jle
lods
inc
int
push
dec
or
jge
mov
ja
push
dec
test
inc
aas
push
mov
xor
dec
test
xor
mov
cmp
jne
jno
roll
lea
adc
out
cmpsl
dec
dec
icebp
in
stos
pop
shll
mov
add
mov
ret
clc
cmp
cwtl
or
lret
adc
mov
mov
push
mov
dec
adc
xor
test
mov
mul
stos
sbb
xor
in
std
xlat
or
rcrl
adc
fstpl
in
push
ds
xchg
jle
jb
or
xor
test
adc
inc
daa
xchg
pop
adc
loopne
xchg
pop
fstl
and
add
test
ja
and
fcmovnu
mov
jo
add
mov
pusha
out
mov
dec
xchg
mov
mov
adc
int3
sbb
fsubrs
data16
das
fisttpll
cmpsl
mov
fisttpl
hlt
dec
push
or
outsb
xor
dec
adc
inc
mov
mov
lock
shl
mov
cwtl
out
adc
xchg
jmp
inc
mov
cltd
push
dec
daa
push
popf
jge
dec
jo
and
jmp
nop
mov
adc
ss
mov
or
jg
dec
shlb
add
adc
jns
adc
mov
xchg
int
mov
cwtl
fdivrs
mov
leave
test
add
int3
jp
js
in
add
mov
xor
add
mov
mov
mov
nop
xor
mov
ss
add
lret
sub
inc
cmpsb
bound
out
mov
out
adc
xor
insl
scas
mov
push
mov
adc
xchg
nop
add
inc
aas
stos
pop
mov
xor
or
cmp
popf
test
pop
movsb
outsb
ret
dec
stos
ds
dec
outsb
jb
stos
jecxz
xchg
out
aaa
fsubrs
mov
insl
jnp
or
xchg
mov
stos
push
nop
inc
inc
sbb
andl
dec
adc
inc
sub
mulb
push
je
sbbl
mov
cld
movd
mov
in
xchg
push
and
mov
leave
dec
push
int
mov
addr16
arpl
cltd
js
jns
jecxz
or
pusha
adc
cmp
adc
ret
out
popa
pop
mov
push
dec
xchg
xor
lods
pop
xchg
cli
mov
cmpsl
ficompl
shll
or
add
test
jmp
pop
push
and
scas
xchg
faddl
lea
mov
in
popf
popa
repnz
xchg
mov
or
push
sub
fsubl
aas
int3
mov
dec
lods
lret
idivl
rorl
cmc
mov
ret
mov
fdivl
sarl
in
movsb
fsubl
cmp
js
mov
addr16
je
mov
mov
shrb
aaa
shll
cmc
loope
mov
sbb
sbb
jp
arpl
cs
push
lahf
xchg
inc
cli
test
cwtl
movsl
sub
mov
push
push
mov
shll
dec
outsb
stc
xchg
fwait
out
cmpsl
icebp
inc
sub
aam
inc
jne
insl
jp
sbb
shll
in
sub
lret
xor
or
test
icebp
push
scas
sti
ja
jbe
mov
push
stos
shll
int3
inc
xchg
loop
leave
dec
mov
sub
ficompl
outsb
pop
or
iret
scas
test
jle
ret
cmpsb
repz
lds
lods
sahf
ret
pushf
push
movsl
xchg
sbb
xchg
inc
in
push
call
add
adc
adc
xchg
push
vpshuflw
mov
out
lret
and
and
aas
dec
jmp
cmc
xor
mov
test
ja
lcall
cltd
cmp
xor
cmp
xlat
sbb
sub
push
push
in
scas
dec
inc
call
enter
xchg
mov
cmp
dec
sti
jb
data16
adc
mov
out
ss
iret
outsl
inc
fstl
pop
inc
xchg
adc
into
xor
xor
dec
mov
stos
outsl
jb,pn
push
inc
push
stos
jnp
xor
mov
push
cmp
mov
cmp
sub
add
imul
aaa
jecxz
gs
jmp
xchg
inc
adc
negb
dec
cmpsl
and
or
je
sub
jne
mov
pop
fidivrl
ffree
call
pop
jl
sub
imul
add
xor
push
or
fcomi
push
jae
shlb
inc
push
mov
out
outsl
xchg
leave
sbb
pop
ret
xor
xchg
dec
insl
das
cmp
or
in
mov
shll
sub
bnd
outsb
jecxz
adc
xchg
bound
dec
aad
adc
sbb
stos
or
inc
mov
mov
xchg
xor
xchg
push
outsl
insl
cmp
jge
mov
xchg
push
leave
sub
inc
or
test
mov
pop
test
sub
push
xlat
shr
sbb
cwtl
inc
insl
jns
movsl
xor
xor
mov
sti
ficoml
mov
jmp
lods
pushl
inc
mov
test
cmp
outsl
in
rclb
xor
addb
dec
popa
rorl
dec
push
rorb
inc
mov
push
adc
xchg
jb
loope
rclb
sub
jnp
dec
movsl
bound
lret
xchg
repnz
iret
pop
add
and
fsubp
fadds
dec
stos
mov
dec
movsb
add
rcrl
add
int3
sbb
aad
cmp
mov
fst
imul
cltd
or
add
cmp
ss
mov
clts
xchg
mov
cmc
sub
sub
xchg
orb
dec
testl
and
jp
xlat
into
inc
xor
mov
idivb
ja
inc
push
nop
xchg
mov
mov
or
cmp
and
lds
fldl
mov
pop
add
into
and
repz
push
fsts
sbb
in
mov
xchg
sbb
std
leave
adc
ja
mov
roll
cs
mov
nop
aaa
jl
dec
mov
jbe
lds
je
int3
sub
fnsave
push
sub
jmp
dec
adc
or
xchg
or
mov
sbb
movsl
sub
sub
mov
push
data16
ljmp
into
popa
dec
cs
stc
xor
or
pop
ss
cwtl
insb
ds
mov
jmp
and
pop
push
call
xor
pop
mov
ror
inc
sub
dec
mov
pop
mov
rolb
insl
or
adc
jl
adc
xchg
inc
sbb
push
xor
gs
cmp
sub
cmp
pop
rol
test
fs
test
inc
aaa
int3
loopne
adc
dec
inc
lret
in
mov
movsb
inc
scas
aam
outsl
xor
clc
jp
jge
xlat
shll
imul
xchg
push
xchg
and
sub
pop
and
push
inc
or
mov
out
repnz
out
mov
jecxz
inc
cmp
lods
mov
loope
in
out
adc
mov
fmul
xchg
imul
repz
push
pop
dec
mov
dec
or
sub
lret
dec
mov
popa
mov
inc
xor
addr16
sub
outsl
shll
pop
add
lcall
cmpsb
xor
sub
clc
jge
mov
les
bnd
jno
xchg
test
pop
lret
adc
pusha
push
aam
in
jecxz
xlat
sub
or
mov
bound
int3
dec
stos
mov
pusha
jp
ficompl
inc
cmpsb
sub
dec
popl
fsubl
cmp
mov
in
or
punpckldq
out
movsb
enter
js
adc
mov
mov
pop
shlb
lds
push
mov
dec
in
push
orb
stos
mov
fsubr
not
mov
xchg
ljmp
in
lods
push
dec
jne
clc
sarb
jnp
jbe
dec
mov
xchg
sbb
mov
ficoms
mov
xor
stos
and
and
aad
lods
push
gs
xor
push
inc
scas
adc
imul
push
push
inc
adc
lret
movsl
mov
stos
pop
xor
out
test
or
roll
jbe
aaa
mov
jp
aam
mov
les
dec
pop
loop
loop
in
mov
in
mov
les
outsl
cwtl
and
mov
js
jno
fcompl
sar
add
roll
adc
outsb
inc
out
sahf
pop
xchg
sarb
loop
or
insl
mov
pop
push
xor
loop
dec
movsb
mov
or
cmp
aas
xor
daa
adc
xor
pop
repnz
cmpsl
xchg
pop
test
std
or
loope
xchg
andl
jecxz
xlat
test
ss
push
ljmp
ds
cwtl
into
cld
out
xor
out
add
sub
push
gs
adc
mov
cmc
enter
and
test
in
jl
lock
and
inc
push
mov
fstp
lea
pop
stc
jnp
testb
xchg
lcall
adc
les
rcrl
je
or
out
adc
aaa
ja
out
push
out
pop
push
dec
and
xchg
jb
pop
cwtd
daa
dec
dec
dec
loop
ja
mov
pop
out
sub
jg
lods
test
lret
sbb
int
jg
xor
roll
and
and
sub
push
inc
lea
js
pop
movsb
shll
pop
movsl
xchg
xor
mov
sbb
pusha
pop
xchg
addr16
and
ljmp
sub
arpl
mov
addb
pop
mov
repz
sub
add
push
int3
fldcw
cli
enter
pop
push
insb
dec
daa
xchg
cmp
mov
pop
test
lcall
cmpsb
nop
or
ja
sub
inc
cld
inc
push
in
dec
testb
jne
push
outsb
dec
or
insb
mov
out
icebp
int3
std
xchg
jno
push
push
jnp
movsb
int3
sbb
pop
xchg
xor
sbb
inc
fs
mov
mov
testb
cmp
aam
dec
test
into
push
lds
lods
jge
jp
pop
mov
add
popa
push
and
fldenv
fisubs
faddl
popf
pop
hlt
pop
mov
xchg
lods
dec
jecxz
mov
jge
pop
xor
clc
flds
fdivrl
or
mov
mov
ljmp
sub
or
popf
mov
sti
jmp
cmpsb
jge
push
cmp
mov
adc
cmc
bound
sub
cmp
mov
push
leave
push
int3
aaa
pusha
push
mov
mov
aad
aad
sbb
adcl
insl
pop
leave
pop
inc
sbb
in
jmp
mov
ljmp
stc
push
xor
mov
xlat
push
fcmovnu
mov
jecxz
int
adc
in
push
xor
mov
fstl
sub
lahf
std
push
dec
push
cs
lods
sbb
popa
popa
push
faddl
leave
xchg
inc
roll
mov
xor
add
in
test
jno
loope
pop
xlat
dec
inc
pop
add
cmp
xchg
sarb
cmp
fistl
hlt
xchg
lahf
xchg
push
cmpsb
adc
int3
jmp
cltd
pop
push
movl
mov
push
inc
mov
and
and
xor
pcmpeqd
pop
add
inc
rol
push
jnp
pusha
and
inc
repnz
add
out
sbb
push
sub
test
scas
dec
mov
dec
test
enter
movsb
xchg
push
sbb
dec
pop
mov
jg
xchg
gs
ljmp
pop
les
orl
fimull
out
mov
jge
lea
sub
into
inc
or
add
cmpsb
repz
stos
cmp
xor
movsl
jne
mov
divb
or
fucom
setne
imul
fmuls
cli
add
ficompl
lock
xchg
data16
xor
int3
push
fbld
movsb
push
aas
and
les
push
rcll
xchg
mov
stos
mov
jg
xor
int3
mov
inc
push
jmp
jge
out
les
add
inc
push
or
pusha
fwait
mov
scas
mov
sbb
sbb
mov
mov
ficomps
fldcw
xor
pop
test
and
inc
jbe
testb
rcrb
xchg
shll
add
out
addr16
ljmp
cmp
mov
fcom
inc
lcall
fiaddl
icebp
stc
jmp
mov
mov
xchg
sbb
mov
shrl
jecxz
aas
in
inc
jnp
sub
pop
xchg
cmp
aaa
loope
add
or
in
mov
ja
cmp
sub
sbb
stc
xchg
jns
ss
les
enter
or
fsub
js
leave
add
hlt
or
and
mov
rsm
shlb
cld
cmp
fimull
int
xor
into
push
xor
cli
push
push
mov
dec
testl
in
jnp
shll
fistl
pusha
int3
mov
stos
dec
or
lret
outsb
mov
mov
stos
filds
jp
ret
in
arpl
xchg
cmc
icebp
stos
mov
cmp
lods
sbb
stos
push
xor
lret
pop
aas
xchg
sti
pop
rcl
out
xchg
lea
jno
fistpl
es
es
inc
nop
imul
jbe
mov
mov
in
cmp
and
sbb
inc
or
mov
sti
hlt
sub
lds
ret
inc
lods
dec
fsubs
mov
sub
std
fs
mov
sahf
adc
xor
sbb
xchg
xchg
push
data16
add
push
clc
sbb
in
inc
inc
lds
adc
test
mov
cmp
jmp
cmp
xchg
icebp
push
loope
sti
fs
outsb
mov
pop
sbb
pusha
orb
mov
push
les
xor
fistpl
mov
sub
sbb
mov
dec
into
mov
xchg
jmp
xlat
in
mov
mov
xchg
sahf
inc
popf
out
pop
movsl
or
xchg
cltd
xor
adc
negl
sub
mov
inc
jne
andb
mov
cld
leave
jns
icebp
add
ror
mov
mov
xor
add
fdivr
cmpsb
cs
pop
xchg
andb
mov
pop
cmpb
inc
pop
sbb
push
rclb
xor
add
imul
add
xchg
mov
cmp
hlt
das
jbe
add
sub
xlat
shlb
and
out
adc
leave
push
or
mov
std
daa
add
faddl
call
inc
imul
test
xchg
lods
pop
out
mov
notrack
inc
xchg
outsb
into
leave
jecxz
loope
jne
pop
sub
lcall
sub
imul
in
mov
cmpsl
addl
adc
scas
dec
inc
jae
mov
jnp
or
pusha
inc
mov
xor
movsl
sti
fucomi
inc
pop
push
ljmp
int3
sub
xchg
mov
or
inc
sbb
cmp
inc
pushf
das
subl
rcr
xor
pop
mov
adc
fidivrl
dec
pop
lahf
xchg
xor
jge
testb
lods
mov
dec
adc
aas
add
lods
add
sbbl
jmp
fldcw
in
lahf
inc
push
pop
cwtl
jmp
jo
les
jge
inc
jl
pop
stos
subb
and
clc
jbe
push
inc
push
dec
rorl
sub
sub
icebp
inc
xor
inc
xchg
lret
aaa
sbb
dec
cwtl
adc
add
dec
and
xor
imul
stos
mov
cmp
in
pusha
je
movsl
lods
fwait
push
adc
jnp
mov
jge
mov
mov
imul
mov
fwait
cltd
cmp
push
jo
pusha
bound
inc
inc
into
or
mov
aad
pop
movsl
ficoml
xor
mov
lock
aad
ficompl
lds
mov
mov
mov
nop
shlb
jo
xchg
cltd
and
jae
int
rcll
stos
lods
pop
inc
inc
jmp
mov
aaa
loop
fsubs
into
mov
jecxz
out
cmp
mov
mov
cwtl
inc
out
or
lcall
aam
xchg
shrb
adc
ret
cmp
and
fildl
xchg
mov
push
dec
leave
or
in
push
pop
jecxz
mov
xchg
fimull
mov
and
aaa
xor
popa
sub
and
punpckhwd
xchg
and
jno
xchg
leave
xor
test
fcoml
push
jne
outsb
sub
test
xorl
pop
adc
lret
ljmp
cs
xchg
ss
pop
test
in
xchg
mov
adc
cmp
sub
imul
or
dec
mov
pusha
jae
mov
dec
jge
and
stos
pop
add
lret
mov
dec
ss
cmp
imul
pop
pop
fcoml
ljmp
lods
mov
in
inc
pop
insb
jp
inc
shll
insl
xor
xlat
mov
sbb
popf
add
bound
fmuls
jo
jno
nop
mov
daa
jb
shll
fwait
and
icebp
xchg
jl
ss
and
add
mov
out
xor
mov
jns
loopne
adc
and
push
fcmovb
inc
cmpsb
lods
adc
xor
sub
cltd
inc
rep
xchg
fisubrl
int3
pop
insb
fnsave
popa
das
scas
lret
dec
inc
addr16
push
ret
lds
aam
pop
mulb
out
daa
sti
jo
push
into
mov
pop
cmp
leave
mov
mov
sbb
fistl
xor
sub
add
shlb
out
xlat
inc
test
add
sbb
xor
outsl
or
int
mov
mov
jno
sub
push
jnp
pop
or
in
mov
pop
je
stc
jbe
add
cmc
push
sbb
popa
je
jb
mov
data16
inc
in
sbb
cmp
rcll
mov
popf
push
notl
int3
pop
adc
lods
sub
ficompl
sbb
sbbb
int3
pop
or
mov
xor
out
add
in
repnz
cmc
xor
jg
xor
inc
inc
fisubrs
mov
mov
addr16
popf
ret
test
lret
cld
cmc
mov
movsl
mov
push
mov
inc
cmp
into
imulb
daa
cltd
stos
pop
cli
stos
and
cli
pop
mov
cld
adc
dec
xchg
loope
int3
fsts
mov
and
aas
inc
push
inc
notl
inc
jecxz
ret
jle
stos
xorb
lods
mov
cmp
aad
orb
xor
jmp
inc
push
or
popa
stos
pop
or
lcall
in
inc
ret
int
push
ss
fs
nop
xchg
mul
push
dec
mov
mov
bound
aam
sbb
fstpt
pop
decb
jmp
hlt
imul
daa
pop
pop
dec
sub
pusha
jge
jo
mov
in
int3
sbb
mov
outsl
ss
insl
dec
sub
push
xchg
and
not
jecxz
dec
jecxz
jg
mov
cmp
je
mov
xchg
cmp
jecxz
mov
push
push
cmpsl
jecxz
popf
shl
popf
cmpsl
jb
cmp
stos
movsb
cmp
scas
mov
pop
sbb
les
mov
shlb
nop
lea
test
ret
cmpsb
mov
pop
test
adc
mov
fisubrs
xor
dec
mov
imul
lahf
push
popa
xor
insl
leave
pushf
push
adc
xchg
jg
push
or
cld
mov
mov
and
mov
in
ss
jno
pop
movsl
filds
imul
cmpsb
call
js
jno
adc
cmc
add
nop
pusha
addr16
rol
in
movsl
cmpsb
xchg
push
fsubrs
sbb
jne
into
sub
pop
xchg
pop
jnp,pn
sub
in
add
jmp
mov
dec
mov
jmp
mov
loopne
ror
and
rcl
aad
inc
loope
mov
inc
push
out
push
pushf
or
mov
mov
in
push
enter
jbe
call
and
dec
repz
mov
lea
rcrl
decb
in
ja
mov
mov
loop
shl
mov
arpl
jle
dec
push
mov
test
mov
xor
sarl
push
xor
push
scas
mov
mov
add
ret
ret
or
test
push
sbb
mov
fisubs
push
pop
sbb
xchg
repz
jb
lea
test
push
cmpb
xchg
sbb
jg
scas
lret
push
xchg
ja
jp
fwait
push
rolb
ror
std
ds
inc
or
jo
inc
or
and
mov
sar
mov
mov
xor
ret
add
push
cmp
xlat
aam
cmp
adc
insl
push
dec
into
adc
ret
ret
ret
ret
movsb
dec
rorl
scas
insl
test
dec
mov
xchg
rol
fcompl
dec
mov
mov
and
inc
rol
xlat
aam
scas
mov
adc
inc
test
shll
dec
shrl
shl
test
xor
dec
fwait
shl
inc
or
pop
in
jle
xchg
sarl
rcl
inc
push
push
out
push
xor
ror
push
rcl
add
push
lcall
mov
push
push
outsb
rorl
dec
sbb
cltd
orb
cmp
dec
lea
inc
mov
mov
dec
dec
sub
stos
shrb
inc
or
movsb
popf
push
enter
push
insl
dec
dec
jge
mov
mov
shll
shr
int3
ds
add
xchg
iret
mov
mov
rorl
or
adc
xorb
int
cmp
orl
xchg
dec
sub
push
out
jae
mov
or
add
or
nop
iret
and
rclb
cltd
imul
mov
mov
outsb
xchg
scas
xchg
sub
pmaddwd
jo
dec
iret
adc
dec
rclb
sbb
jecxz
loopne
negb
call
shlb
out
mov
inc
int
xchg
dec
xchg
in
xchg
xorb
cmp
scas
stos
daa
jb
push
out
fstl
and
jns
mov
or
or
insb
pop
inc
popa
inc
lds
and
inc
xor
test
das
xchg
fmul
dec
loope
and
clc
cld
jecxz
push
pusha
inc
push
xchg
shrb
inc
push
ja
sub
sub
push
dec
or
jno
scas
add
sbb
jge
outsb
xor
mov
cmc
adc
aam
das
cmp
adc
and
adc
push
push
push
fnstenv
push
in
add
xchg
mov
add
mov
jge
cmp
adc
negb
out
lahf
addr16
call
dec
jno
sbb
in
mov
adc
mov
dec
add
int3
mull
inc
inc
testb
sahf
js
inc
xor
inc
push
and
xchg
repz
adc
jg
push
mov
rcrb
xor
hlt
inc
shl
ret
cmp
inc
push
xchg
ja
sbb
in
dec
mov
pop
and
ficoml
nop
scas
das
dec
das
pop
arpl
lods
push
inc
cmpsl
out
out
clc
popf
pop
pop
pushf
mov
loopne
loope
sti
mov
out
pop
sub
aas
inc
rolb
cmpsb
cmc
push
cltd
xchg
sub
ja
inc
cmpsb
rcll
cmc
mov
loop
push
inc
jne
jecxz
dec
xchg
sti
out
inc
arpl
aaa
arpl
inc
dec
ja
and
adc
xor
jg
mov
inc
shlb
cmp
lret
jo
mov
insl
lds
loopne
fisubrl
orb
mov
jnp
and
ret
xorl
xchg
andb
jno
aaa
cld
jmp
xchg
adc
inc
inc
mov
scas
sti
enter
addr16
int
icebp
lds
arpl
and
add
hlt
lods
call
jecxz
xor
leave
push
dec
push
sub
or
repnz
fcompl
lods
jge
xchg
gs
es
sahf
mov
jb
in
mov
fs
stc
jecxz
mov
fiaddl
daa
ffree
and
std
or
ds
sbb
call
faddl
push
mov
js
imul
cmpsl
mov
inc
and
rcrb
mov
pop
sub
jge
sbbb
int3
int
stos
dec
sbbb
es
fistpll
lods
daa
icebp
insb
data16
mov
pop
mov
fwait
out
xor
outsb
in
cmp
inc
push
je
into
popa
jp
or
adc
ret
pop
fdivrp
repnz
adc
xchg
or
stc
sub
negb
sbb
dec
pusha
mov
pushf
stos
xor
outsb
push
xor
aaa
inc
fidivs
xor
xor
push
xchg
fsubs
xlat
push
lahf
push
xor
out
les
lods
fstpt
sbb
paddusb
cs
sub
mov
ret
mov
js
loope
fdivs
ds
iret
and
sub
fadd
xchg
and
mov
push
gs
out
iret
ja
testb
mov
jge
mov
lock
inc
fsubrl
popa
cmp
in
push
dec
dec
idivl
xchg
xchg
in
in
dec
les
int3
pop
and
dec
stc
int
cmpb
popf
xchg
sbb
ja
dec
mov
add
lcall
andb
in
mov
scas
lret
negl
jmp
dec
lea
pop
push
sub
mov
stos
mov
and
leave
sub
sbb
or
cli
inc
mov
mov
and
lods
sub
or
leave
cli
cmpb
cwtl
pop
adc
hlt
divl
repnz
enter
pop
mov
xchg
lret
movsl
sub
imul
ficompl
cld
lea
cltd
push
add
int3
pop
jne
sub
jns
out
js
cmp
sar
mov
push
in
sahf
lods
mov
pop
stos
inc
cs
loopne
inc
and
dec
sarb
int
arpl
mov
or
loop
xchg
jecxz
out
rcrl
inc
push
lds
mov
xor
adc
daa
push
xorb
jbe
mov
sarl
xchg
mov
int3
in
mov
jne
loope
fidivs
xor
jecxz
mov
inc
ss
add
add
mov
lock
insl
pop
daa
ss
enter
jl
or
mov
xor
fadds
pusha
jmp
push
scas
push
lret
dec
sub
push
out
mov
pop
test
mov
adc
add
inc
pusha
mov
xor
addr16
outsl
mov
gs
dec
pop
popf
jge
roll
cs
ficomps
xorl
jecxz
mov
xor
or
cmpsb
imul
sbb
in
movsl
inc
jb
dec
mov
imul
mov
dec
in
cmpsl
jl
test
jb
gs
imul
xorb
fs
movsb
xor
add
pop
jbe
or
add
jne
dec
je
popf
jns
cmc
test
icebp
push
das
in
sbb
shrl
icebp
inc
scas
je
ja
hlt
inc
adcb
push
xor
push
xchg
inc
mov
dec
dec
rorl
scas
ror
dec
leave
or
or
insl
stos
push
lods
or
inc
lcall
lea
popa
mov
mov
push
push
insb
inc
hlt
push
scas
pushf
inc
push
sti
inc
sti
cmpsl
xlat
loopne
ss
movsl
notb
cmp
aas
xchg
adc
mov
lret
push
inc
jl
cltd
stc
inc
pop
icebp
add
popa
push
gs
fisubrs
adc
cltd
and
adc
mov
bound
sbb
loop
daa
sbb
fnstenv
test
in
stos
stc
xor
mov
lods
enter
pop
mov
pop
outsl
mov
jl
cmp
test
inc
pushf
dec
test
ja
pushf
jnp
push
xchg
or
xchg
add
cmp
call
cs
cld
mov
int3
mov
inc
add
sub
xor
inc
inc
lds
stos
cwtl
mov
dec
loop
xor
cmp
mov
inc
sbb
xchg
cmc
mov
testb
xchg
xchg
mov
roll
pop
jg
ds
test
mov
outsl
mov
icebp
in
sbb
addr16
stc
inc
inc
push
addr16
in
mov
and
test
mov
push
inc
frstor
jp
dec
mov
lret
out
cmpsb
adc
adc
out
or
mov
loop
stc
test
inc
mov
jo
daa
jo
xchg
inc
push
add
push
int3
cmp
or
mov
repz
xchg
dec
xchg
push
gs
xchg
mov
mov
cs
daa
mov
adc
jecxz
jp
stos
mov
enter
mov
outsb
lods
ret
cli
addr16
fbstp
movzwl
mov
outsb
sahf
sarl
in
sub
inc
mov
adc
xlat
inc
outsb
shrb
inc
jne
or
jmp
fimuls
adc
stos
lret
lock
movsl
jbe
jne
xor
nop
fstps
iret
test
repnz
sub
cmpsb
inc
adc
dec
lahf
inc
addr16
loopne
cmp
sub
inc
dec
add
daa
leave
pop
leave
mov
movsb
lret
pop
pushf
or
sti
jl
lahf
lea
dec
enter
cmp
inc
fwait
sub
leave
int3
int
mov
popa
dec
mov
pop
pop
cmpsb
arpl
xchg
lods
xor
incl
sbb
lock
pop
inc
pop
dec
in
int3
mov
pop
mov
add
cltd
jnp
out
test
mov
cmp
loop
mov
mov
fisubs
cmp
lret
cs
inc
jns
mov
fsubr
shrl
mov
xor
push
or
xorl
push
push
add
nop
iret
and
cmpb
or
je
fstpl
jb
and
data16
je
xor
add
enter
jle
fdivrs
mov
or
stos
or
xor
push
sar
movsl
sbb
popa
in
jp
js
jo
int3
out
xchg
and
push
lods
int3
push
pop
xlat
inc
mov
js
push
jns
cs
int3
push
push
movb
leave
mov
mov
jg
cli
mov
mov
in
or
nop
call
xor
rcr
sahf
or
adcb
cs
pop
mov
test
sub
cs
inc
pushf
aas
add
lea
movsb
push
push
xor
icebp
sbb
and
data16
aaa
or
mov
mov
cmp
jp
add
and
testb
mov
xchg
ss
cltd
pop
leave
dec
rol
sbb
pop
xchg
leave
jne
ja
cs
hlt
jbe
stos
jle
addr16
pop
jg
mov
aam
aam
sbb
arpl
xlat
mov
stos
mov
fsubrp
sbb
xchg
push
aaa
cmp
pusha
dec
call
rclb
jecxz
and
sub
cld
push
push
popf
and
aaa
dec
int3
insb
jne
lock
dec
outsb
mov
stos
and
jb
lea
lods
pop
hlt
and
cs
lds
pusha
mov
mov
aas
fsubs
in
out
or
aas
push
enter
stos
xor
test
lods
adcb
push
addb
lret
fs
sub
mov
jge
or
jp
or
or
into
orb
jge
repz
adc
mov
sbb
ds
dec
push
test
int3
lret
stos
cltd
inc
std
xchg
jmp
cmp
inc
subl
lcall
stos
cmp
psrlw
movsl
jo
addr16
cmc
in
xchg
xor
iret
xchg
jg
adc
mov
jmp
mov
fs
adc
ret
xor
popl
scas
sahf
pusha
add
lret
imul
and
fwait
or
and
lahf
stos
xchg
xor
cmp
lds
and
stos
stc
jp
dec
movl
lods
xchg
pop
fistpll
jecxz
xor
xchg
pop
fstpl
sbb
shlb
ja
xchg
das
enter
movsb
enter
mov
push
mov
je
mov
mov
test
inc
das
pop
jo
repz
xchg
jecxz
push
test
inc
inc
out
xor
mov
mov
sub
adc
pop
sar
add
cmp
insl
leave
lea
stos
pop
test
call
test
lods
mov
loope
pop
in
sub
pusha
add
scas
jnp
fisubrs
cmc
jae
jb
incl
arpl
pop
outsb
mov
xchg
xchg
add
inc
lcall
fstpl
mov
mov
pusha
loope
mov
hlt
sti
out
mov
inc
sbb
ss
fs
mov
out
stos
sbb
push
aaa
jl
cltd
ja
sub
aaa
add
es
sub
inc
pop
and
cmp
xchg
pop
test
pop
pop
push
in
dec
aam
shl
mov
hlt
xchg
jns
cmp
mov
scas
sti
scas
fs
int
lods
or
jmp
inc
xor
ss
ret
sbb
sbb
sti
daa
sbb
cmp
pop
out
adc
inc
xor
cmp
out
sbb
cld
insb
sub
jge
adc
pop
or
hlt
popf
mov
push
sarb
shlb
loopne
mov
dec
xchg
idiv
and
ja
not
call
jno
bound
shrb
xor
cmp
in
popf
cmpb
push
gs
flds
xchg
fsts
das
pop
mov
ds
movups
popa
test
and
aaa
inc
popa
jge
cld
cld
pusha
mov
stos
loopne
adc
imul
orb
push
ljmp
rcrl
push
testb
sub
lods
inc
nop
cwtl
cmpsb
xchg
cltd
push
cmc
int
xchg
jmp
lret
shlb
mov
mov
adc
jno
mov
jno
pop
shlb
jb
daa
fnstcw
popa
out
inc
addl
addr16
adc
ds
sbb
jbe
fstpt
ja
xchg
pop
pop
aam
dec
loopne
mov
jno
jae
aam
ja
adc
test
lahf
push
dec
sub
pop
out
or
sbb
push
xchg
fnsave
into
stc
cmp
xor
mov
and
mov
sbb
mov
xor
ljmp
pushf
jp
adc
and
pop
and
cmp
cmp
and
cmpsl
xor
xchg
roll
cmpsl
loop
jp
xor
mov
inc
mov
rcr
jo
icebp
add
mov
das
gs
fmul
xchg
pop
addb
add
xchg
aas
int
cld
filds
and
pop
ss
xchg
push
insb
cmp
jns
sbb
jb
xor
and
rcll
scas
jb
movsb
xchg
adcb
inc
enter
jns
or
or
ljmp
xor
stos
fs
lods
arpl
jge
dec
pop
popf
xchg
cli
jno
rclb
push
in
aam
or
int
popf
insl
xlat
xorb
int3
lds
das
enter
sub
lods
or
test
adc
sub
shll
mov
push
push
in
sbb
stos
inc
sbb
insl
stos
popa
mov
adc
lret
cmpsl
or
adc
dec
sbb
mov
dec
xchg
xlat
in
cli
int3
add
addr16
cmpsb
cmp
ret
movsb
fistl
and
lea
cmp
inc
ret
data16
push
arpl
ficoml
cmpsb
cmp
sub
insb
ds
ret
mov
add
fcmovnbe
xor
push
shl
or
shrl
iret
push
mov
ljmp
inc
cld
jl
lret
xchg
rcrb
xchg
arpl
mov
sbb
in
xor
jg
and
ret
mov
cmpsl
test
ljmp
xor
sbb
scas
mov
scas
jg
aaa
or
out
xor
push
into
retw
adc
push
cmp
xor
int3
dec
or
xchg
ds
lods
mov
rcr
push
inc
adc
sbb
jl
push
std
lea
pop
lods
dec
mov
xorb
push
adc
ret
shll
mov
rol
inc
dec
stc
jbe
xchg
dec
ror
sti
adc
dec
or
jge
out
out
adc
mov
cmp
and
push
xchg
in
sub
std
testl
in
sub
mul
jno
je
fisubl
mov
sbb
mov
roll
popa
hlt
testb
jg
xchg
mov
ja
icebp
cld
inc
sbb
fldenv
dec
xchg
jno
popf
fiaddl
cwtl
jno
out
cli
in
das
mov
push
rcr
adc
adc
inc
sahf
cld
jae
sub
push
xchg
ficoml
mov
xor
and
jge
mov
dec
mov
and
pop
ja
push
and
sub
dec
sub
jno
sub
add
jmp
into
dec
loope
push
out
stos
popa
fdivr
push
push
mov
out
bound
mov
mov
mov
jnp
shl
mov
sub
ja
push
stos
lock
pop
or
scas
lret
sbb
or
jp
popf
orb
inc
es
mov
inc
inc
cmc
or
gs
lods
mov
lea
mov
shl
inc
aam
aaa
dec
mov
insb
jg
sub
jge
push
push
pusha
inc
sub
into
jl
xchg
aaa
lahf
mov
mov
xchg
dec
xchg
inc
mov
adc
mov
pop
xlat
xchg
xchg
pop
mov
mull
popa
push
pop
push
xor
test
out
scas
icebp
test
daa
loope
subb
and
jg
aaa
mov
mov
ret
rol
dec
andb
repnz
adc
inc
lret
jecxz
lcall
or
rcrb
fnsave
ret
aam
lds
fwait
and
or
int3
jmp
mov
mov
push
dec
stos
jecxz
and
or
cmp
sti
inc
add
add
pusha
sarb
nop
add
inc
mov
rcll
rcll
xorb
sbb
lret
xor
jns
aaa
ficomps
and
jle
aad
or
frstor
pop
loope
sbb
push
inc
cmpsb
outsl
repz
imul
add
mov
popf
and
push
push
pop
shll
jmp
pop
ljmp
or
xchg
inc
test
xor
out
jae
repz
fwait
jnp
xlat
stos
sub
mov
dec
ss
or
out
lods
fsubrl
fcom
dec
ss
in
and
inc
inc
aaa
or
xlat
sub
and
add
fildll
push
and
inc
adc
jns
fbld
cmpsl
fadd
jle
mov
loope
mov
es
pop
pop
imulb
mov
stc
sbb
out
addb
lods
add
enter
jno
sub
into
lcall
xor
into
dec
push
popa
lret
add
push
stc
sbb
pop
add
mov
nop
mov
lods
shll
jbe
sarb
mov
inc
pop
cmpsl
fcoml
mov
in
xor
jne
leave
sub
mov
movsb
js
pop
in
popa
mov
int3
daa
in
inc
loopne
mov
cmp
add
popa
sbb
mov
ja
or
mov
dec
sbb
sub
fnstsw
out
popa
repz
cmpsb
cmc
das
out
fwait
cmp
mov
mov
rclb
jecxz
sbb
frstor
and
xor
enter
bound
jp
inc
xor
test
xor
int3
mov
jmp
ret
dec
inc
or
jo
ret
inc
aam
nop
inc
xlat
xor
jmp
jp
xor
neg
push
mov
mov
mov
dec
lods
jp
adc
or
mov
adc
call
cld
inc
dec
ss
sbb
test
and
pop
xchg
dec
rorl
dec
rcl
pushf
les
clc
aas
or
not
pusha
pop
add
or
jge
testb
mov
mov
test
int3
pop
arpl
aas
in
push
push
jae
mov
xchg
pushf
pop
fucom
aaa
add
idivl
xchg
js
dec
sub
mov
scas
cmpsb
and
mov
and
inc
xor
mov
pusha
mov
orb
ss
or
loop
mov
incb
push
add
add
loope
cmp
mov
add
repz
popf
dec
dec
imul
mov
pushf
xlat
xor
sub
adc
test
xchg
pop
and
in
jl
cmp
stos
leave
add
dec
pop
add
dec
xchg
mov
push
sub
testb
sbb
fsubl
sub
sbb
sar
ds
insb
and
ret
lock
dec
mov
xchg
jno
pop
sbb
mov
cmpsb
push
jmp
paddusb
cmp
int
les
pusha
test
pop
dec
imull
xor
mov
mov
push
in
sbb
adc
ja
fsubrs
fstp
movsb
xchg
rorl
aas
adc
xchg
sbb
ucomiss
xor
into
cld
insl
sbb
lret
out
or
add
leave
daa
inc
mul
mov
testb
mov
inc
gs
mov
jl
xchg
or
sub
xor
outsb
xor
subl
cmpsb
xchg
jmp
adc
ss
mov
loop
pop
scas
mov
cmp
jnp
push
lock
inc
ljmp
push
mov
jb
push
cltd
mov
shr
push
dec
pop
add
mov
mov
idiv
outsl
sbb
je
aaa
inc
imul
enter
out
ss
or
idivb
fdivrs
xor
or
push
sbb
lock
sbb
mov
lret
jp
ljmp
push
fisubl
mov
push
mov
rcr
ljmp
dec
inc
sbb
imul
cmc
les
ret
inc
inc
sbb
inc
shrb
inc
out
xorb
and
and
push
push
movsl
addr16
pop
pop
test
xchg
dec
repnz
das
dec
fadds
adc
jmp
punpcklwd
inc
xchg
inc
fmuls
cmp
push
push
push
mov
cs
or
jo
lret
clc
jl
lcall
call
pop
mov
pop
pop
aaa
ret
fmuls
mov
xor
adc
movsb
lcall
sarl
mov
mov
adc
xor
pop
out
stos
and
cmpsl
sbb
or
lods
inc
push
and
in
hlt
dec
xor
imul
cmp
movl
xor
fwait
push
daa
int3
lock
test
xchg
test
sub
xor
ja
ret
xchg
cmpsl
xchg
jge
pop
pop
rorl
int
cwtl
enter
dec
cli
inc
imul
mov
pop
pop
das
dec
pusha
push
push
popa
or
push
push
push
cmp
cmp
rorl
mov
xchg
add
das
dec
popf
shrb
jb
mov
jbe
jno
rcl
adc
scas
push
rcll
cwtl
push
jg
lret
mov
roll
ret
sub
cmpsb
rcrb
into
mov
xchg
faddl
xchg
or
xchg
xchg
rol
outsb
xchg
add
xor
lret
or
inc
push
inc
mov
nop
rcl
and
roll
lods
insb
ror
adc
lods
rcl
push
push
cmp
and
cli
push
outsb
dec
mov
sarl
mov
aam
das
push
lods
fsts
icebp
push
into
xor
xchg
or
xchg
mov
cmp
rcl
shrl
jmp
xchg
cmc
rolb
mov
mov
push
mov
mov
test
push
js
xchg
sarb
mov
xchg
imul
jecxz
lcall
inc
or
iret
rcl
pop
shrl
iret
jmp
repnz
popa
dec
dec
test
rclb
fdivp
aas
xchg
sarb
cmp
std
or
sub
dec
mov
aaa
lea
xchg
movsl
outsb
mov
cmpb
inc
shlb
push
mov
adc
scas
xchg
push
mov
insl
cmp
insb
or
lea
push
push
leave
ds
mov
dec
mov
inc
jo
mov
push
mov
shrb
or
dec
dec
leave
or
into
mov
push
dec
mov
int3
mov
mov
leave
int
mov
mov
setb
jmp
lret
adc
ds
xchg
cs
mov
into
int3
mov
outsb
mov
int
dec
and
insb
push
scas
or
shll
inc
lea
sbb
dec
jle
mov
rcll
insl
int
or
sbb
mov
shll
mov
popl
jle
ror
push
orb
jecxz
jecxz
push
jge
scas
and
sbb
fcomps
cmp
mov
xchg
cld
lea
mov
ret
xchg
mov
vsqrtss
or
aas
dec
jns
mov
xchg
stos
and
jecxz
lret
fdivl
shl
mov
loope
fwait
in
adc
sbb
push
push
mov
ss
xor
daa
push
sti
in
insl
mov
add
movsl
xor
add
dec
inc
jae
mov
jge
mov
mov
add
jg
movsl
push
or
mov
je
loop
les
cmpsl
inc
lret
lock
inc
int
fwait
addr16
ljmp
xor
push
mov
pop
mov
push
xor
addr16
fnstsw
into
xlat
mov
adc
dec
sti
push
mov
icebp
push
and
mov
inc
lock
cmpsl
xchg
jmp
adc
hlt
push
push
enter
pop
push
repz
xor
xor
cmp
lea
xor
imul
int3
mov
addl
jp
cmpsb
pop
fisttpll
adc
mov
shl
sbb
les
scas
pusha
data16
ret
add
in
dec
mov
inc
and
push
add
inc
shrl
mov
mov
and
aas
mull
rcrl
movb
mov
push
sub
popa
shr
mov
jge
cwtl
sti
push
xor
cmp
mov
xor
rol
xchg
dec
push
dec
adc
sbb
xor
dec
outsb
stos
push
jno
pop
cmp
dec
int
sbb
xlat
leave
je
scas
rcll
inc
mov
and
insb
push
hlt
push
out
and
mov
mov
jnp
rclb
cld
es
mov
cmp
test
int
push
ds
adc
fisubl
mov
adc
aaa
pop
push
incb
mov
sbb
cmpsb
int3
decb
push
mov
rcll
dec
xchg
out
test
ret
jecxz
sbb
lds
addr16
push
ja
scas
inc
sahf
push
lods
movsl
in
cmc
test
into
enter
sub
sbb
jmp
xchg
add
xchg
out
into
mov
xchg
pop
iret
lret
in
mov
mov
pop
xchg
daa
xor
xor
mov
mov
xor
nop
imul
jmp
andb
mov
xor
cld
inc
cmp
enter
sbb
dec
pop
fs
jb
inc
je
ret
push
xchg
scas
dec
lret
sub
inc
insl
nop
push
scas
sub
fcmovb
xchg
add
or
adc
jp
bound
adc
test
mov
loop
inc
sbb
jne
inc
pop
xor
mov
aam
sahf
add
push
pop
aad
pop
adc
mov
mov
mov
lret
jno
int3
cmp
divb
cld
test
addl
and
sbb
jge
inc
sub
scas
push
ja
pop
in
inc
sbb
shr
xchg
lds
mov
xchg
inc
aas
push
clc
dec
je
loopne
pop
arpl
pop
jmp
mov
xor
out
add
lock
mov
lcall
sub
imul
add
and
lods
pop
int3
dec
xchg
popf
xchg
cmp
and
fdivl
repz
fucomip
cltd
sbb
data16
mov
pop
cmpsb
mov
movsb
add
pusha
int
cwtl
dec
fmull
in
jne
xor
or
dec
lods
inc
test
or
cmp
adc
sti
mov
push
daa
cli
data16
in
inc
js
out
mov
pop
es
dec
jno
or
sub
dec
inc
lret
lock
fistl
les
jb
cltd
out
jb
cmpsb
add
xor
shrl
fwait
inc
inc
scas
push
sub
in
pop
ret
daa
mov
jecxz
mov
push
or
pop
xchg
push
rolb
outsb
aaa
dec
adc
xchg
pop
pop
or
movsl
xchg
sti
mov
pop
insb
nop
mov
aaa
push
mov
psubusb
popa
xchg
or
xchg
nop
inc
iret
popa
pop
stc
outsb
ret
data16
inc
xchg
stc
outsl
lcall
orb
pusha
scas
inc
orb
out
fdivp
ljmp
sbb
inc
repz
out
frstor
jbe
aam
mov
push
lcall
inc
dec
mov
mov
testb
xchg
inc
aaa
test
lret
pusha
sbb
mov
sbb
cmp
mov
insl
cmp
push
repz
cmpsl
xchg
out
shll
or
pop
cmp
and
xor
push
mov
mov
mov
shll
std
test
ja
inc
data16
sub
mov
dec
pop
sar
sbb
lea
lcall
sarb
mov
inc
sahf
imul
inc
aad
sub
imul
lret
push
xor
inc
xchg
inc
imul
rcl
sub
ja
push
cmp
xor
mov
xchg
repnz
cmp
lods
lea
aas
adc
stos
xchg
xor
jg
repz
cmove
pop
dec
mov
pushf
push
and
movsb
sub
loop
mov
rol
in
jno
lods
test
data16
pop
cld
fdivl
mov
xor
and
sub
imul
imul
mov
bound
mov
xlat
shll
lea
scas
and
mov
jne
jle
xchg
jl
ljmp
in
xchg
je
lock
xor
lret
mov
ljmp
push
push
or
inc
mov
les
cmp
mov
cmpsb
cmp
movsb
push
push
xorb
ror
dec
mov
xor
clc
dec
jb
inc
mov
pop
sahf
add
pop
jb
sbb
jge
jb
sub
bound
inc
inc
stc
lds
xchg
push
inc
or
in
xchg
pusha
sbbl
int3
testb
das
sbb
push
gs
xchg
arpl
outsb
imul
push
push
xchg
add
lods
cs
and
mov
iret
inc
adc
cmpsl
push
dec
lcall
in
push
adc
popa
add
popa
push
std
mov
or
cli
mov
inc
scas
jle
addr16
test
fadds
jmp
cmc
cltd
cmp
movsl
sub
inc
cmpb
jns
push
clc
xchg
pop
adc
inc
shrb
data16
sbb
dec
cld
xor
jns
stos
popf
hlt
imul
mov
dec
mov
sbb
ds
fnsave
sbb
insl
inc
fsubrs
mull
shll
mov
aaa
xchg
lock
inc
add
pop
loope
pusha
hlt
inc
icebp
scas
int3
mov
sbb
fwait
pop
sub
push
cmpsb
push
repnz
rep
mov
cmp
aad
mov
lret
sahf
decb
pop
outsb
mov
pop
pop
jo
mov
sub
dec
inc
mov
xor
ljmp
jbe
aam
insl
cmp
and
int3
jae
mov
outsl
test
in
xchg
xor
aad
cld
jmp
jae
sub
aad
sti
lahf
clc
sbb
dec
aas
add
roll
inc
or
int3
xchg
ss
pop
jno
mov
fnstcw
rorl
gs
frstor
lcall
push
pop
lds
movsl
mov
aaa
mov
mov
xor
out
mov
or
mov
gs
and
in
arpl
jg
mov
ss
dec
adc
into
xchg
push
mov
sbb
movsl
ja
mov
push
pop
insb
inc
cmp
jg
je
test
add
cmp
test
hlt
test
fsubrs
outsl
push
push
stos
ret
in
in
mov
add
mov
out
push
lock
mov
cmp
push
mov
pop
mov
jns
sub
mov
pop
mov
cmp
in
outsb
or
jo
call
add
fdivrs
lods
or
les
lock
push
lret
mov
push
std
ja
lds
insl
sti
inc
ret
mov
icebp
movsl
les
pop
and
aad
mov
push
xor
pop
dec
and
xchg
mov
add
cs
mov
inc
pmulhuw
add
push
addr16
lods
icebp
xchg
imulb
inc
mov
xchg
js
gs
pop
in
push
int3
add
addr16
inc
mov
xchg
js
xchg
and
lea
dec
fdivrl
jecxz
outsb
es
lods
mov
hlt
int3
outsl
push
pop
pop
into
repnz
mov
lock
jl
js
int3
pop
leave
jo
and
mov
test
mov
aas
int
xor
fwait
gs
mov
incb
lods
fwait
or
jne
mov
lret
push
aam
in
cltd
inc
cmc
xchg
xchg
rclb
sbb
ja
pusha
inc
push
ficoms
shlb
cmp
mov
inc
xchg
pop
lds
jge
rorb
addb
divb
repz
push
and
fcmovnb
inc
xchg
addr16
mov
orl
icebp
mov
dec
jl
sbb
xor
fdivrs
imul
mov
or
clc
xchg
fcmove
sub
or
xchg
mov
and
stos
mov
js
rcr
test
test
icebp
mov
aaa
aaa
les
ret
pop
cmp
stc
xor
repz
push
adcb
push
add
stos
ret
repnz
stos
int3
mov
outsl
out
or
jne
loope
leave
dec
fisubrl
jnp
out
jbe
mov
inc
xchg
or
data16
mov
jge
out
std
aas
add
push
jnp
test
test
jge
hlt
push
shlb
outsl
rolb
dec
and
outsb
cmp
push
and
pavgw
mov
dec
cmpsb
sbb
dec
in
inc
xor
fcoms
push
shlb
push
inc
pop
and
shlb
hlt
incb
ror
fmul
sarl
pop
lods
jle
cmp
pop
imul
lods
cld
lret
sbb
jns
rol
push
sub
jbe
rol
mov
int3
mov
shlb
mov
push
icebp
lret
mov
push
xor
jge
insl
imul
mov
test
divb
lods
movsb
dec
mov
sub
inc
imul
jbe
das
aaa
enter
in
xor
fadd
inc
hlt
aam
xchg
dec
adc
outsb
stc
sub
mov
jg
lret
fbstp
or
mov
loopne
imul
inc
inc
rorl
sub
testl
ja
adcl
rolb
dec
push
mov
movsb
aad
xchg
aaa
push
aaa
outsl
rolb
dec
data16
lods
hlt
cld
dec
cltd
adc
roll
xor
mov
mov
pop
in
inc
xor
push
or
outsb
clc
test
popa
xor
xchg
and
jmp
sbb
in
inc
adc
sarl
add
divb
movsl
daa
mov
out
or
mov
sbb
rorl
lea
xor
dec
pop
inc
cmp
push
imul
push
ret
repz
not
dec
xchg
int3
inc
fbld
mov
popf
icebp
pop
nop
test
pop
jp
adc
inc
sub
mov
ret
out
and
rorl
or
pop
popf
arpl
subb
stos
shlb
nop
xor
stos
cmp
out
add
sbb
and
pop
mov
ret
xor
push
lret
jbe
lret
std
int3
roll
neg
testb
stc
test
and
adc
shrb
mov
push
rcll
xchg
hlt
cmp
mov
cltd
test
pop
pusha
lea
xor
sbb
push
test
pop
xor
fisubrs
xchg
sub
inc
pop
jnp
shll
pop
loope
mov
push
pushf
push
or
sbb
loopne
int
lahf
fisubl
and
and
xor
pop
xor
pop
incl
test
sti
xor
adc
fildll
xchg
mulb
cs
mov
bound
sbb
leave
and
pop
scas
in
push
or
adc
sbb
cmp
icebp
mov
dec
arpl
sub
dec
sbb
push
xor
add
or
push
pop
scas
inc
in
fcmovnb
sbb
xchg
cwtl
lds
mov
loopne
int
fcmovb
es
jecxz
cs
jb
pusha
loop
dec
imul
fadds
mov
gs
sbb
ss
bound
in
pop
dec
adc
mov
mov
mov
push
test
loope
out
mov
dec
push
dec
mov
add
mov
outsb
adc
dec
outsb
idiv
xchg
fcomi
inc
aas
scas
mov
das
imul
test
add
dec
insl
cmovge
xor
lods
rcrb
cmp
lret
idivl
add
daa
test
mov
ljmp
add
mov
stc
xchg
jnp
push
xchg
mov
and
clc
inc
push
sub
pop
adc
jg
lea
call
xor
lret
cs
test
push
mov
xchg
push
xorb
add
imul
hlt
aaa
out
lret
add
fwait
ud0
or
and
sahf
pop
push
jg
sbb
add
leave
jg
je
aaa
xchg
jb
cmc
aaa
and
mov
int3
xor
and
das
jb
lods
in
and
imul
mov
jmp
pop
cmp
cmp
or
or
dec
das
scas
sub
or
in
aaa
stc
push
sub
int
ljmp
icebp
aaa
mov
rorl
dec
hlt
addr16
aad
jge
pop
int
push
lods
cwtl
aad
aas
pop
notl
push
loope
clc
push
xchg
in
pop
mov
push
es
sti
cmp
lods
cmp
mov
xchg
mov
mov
adc
push
loop
daa
xchg
mull
add
mov
pop
mov
mov
rorl
jne
or
mov
mov
cmpl
bound
mov
add
imul
push
push
inc
cli
leave
jns
mov
dec
xor
clc
inc
xor
lods
into
jg
inc
inc
push
xor
fimull
dec
repz
dec
insl
fisubrl
out
mov
jl
xor
adc
insb
cmp
sbb
jbe
xor
push
cmp
adc
pusha
addr16
cs
stos
mov
das
roll
out
or
repz
mov
leave
mov
mov
bound
push
push
cmp
cmp
adc
notb
dec
xorb
or
int3
push
dec
stc
cmpb
in
sub
lret
dec
iret
dec
pusha
shll
inc
sbb
mov
enter
jo
dec
les
inc
int
sbb
xor
jmp
sub
scas
movsl
fsts
mov
xor
mov
addr16
daa
mov
icebp
dec
ficoml
jmp
cwtl
jmp
mov
pusha
int3
inc
push
push
ret
popa
inc
lods
inc
xchg
lea
xchg
hlt
inc
fidivl
shll
sub
pop
insl
arpl
jmp
enter
inc
repz
xor
push
push
inc
sub
rcrl
mov
ret
sbb
push
in
mov
add
push
pop
cltd
inc
cmp
gs
lahf
lcall
idivb
or
sbb
cld
dec
xchg
cmp
mov
fidivrl
test
mov
and
sbb
clc
adc
fisttps
xchg
mov
pusha
xchg
cmp
dec
ja
pop
call
xchg
pop
in
adc
push
cmp
shrl
cmp
xor
or
sbb
cmp
dec
rorl
dec
add
outsb
stos
iret
push
cmp
sub
in
nop
inc
jb
xor
inc
pop
push
sub
gs
shl
jnp
ret
lds
sub
roll
arpl
add
xorb
ss
xor
lock
pusha
int
jg
fildl
daa
stc
xor
popf
adc
rcr
xchg
inc
xchg
das
test
bts
mov
pop
sub
mov
jl
jno
dec
push
into
aas
xchg
aaa
adc
faddl
mov
pusha
xchg
jmp
cld
push
addr16
loope
aad
movsl
insb
add
movl
and
sbb
getsec
pop
mov
adc
push
mov
clc
mov
ss
data16
cmp
sub
adc
sbb
push
dec
lods
shll
dec
push
dec
inc
loop
cwtd
inc
les
mov
push
xchg
sbb
xchg
mov
pop
ret
sub
lret
dec
jle
daa
lcall
test
cmp
inc
mov
xchg
fwait
sar
dec
xor
mov
into
aam
xor
in
lahf
cmp
dec
jo
ret
je
or
insl
loope
dec
push
inc
lahf
iret
mov
push
jbe
or
ss
xchg
xor
cmpl
xchg
fcmovnb
ljmp
sub
dec
and
gs
inc
add
lds
xor
lret
lea
inc
xchg
scas
bound
outsl
fsubl
sbb
mov
push
pusha
sub
or
stos
aam
add
imul
jne
sbb
call
xchg
ja
lret
pop
fwait
xor
mov
jnp
pop
lock
dec
pop
xor
lret
hlt
test
fidivs
jg
sub
cmp
int
loopne
ja
test
xor
inc
sub
sbb
push
lahf
repz
les
inc
adc
js
lret
pop
jl
call
dec
mov
cmp
mov
dec
inc
add
jecxz
push
mov
inc
sahf
mov
add
int
lods
cmpsl
push
arpl
repnz
lea
in
push
adc
dec
inc
adc
pop
adc
xchg
push
mov
out
pop
cmp
push
pop
push
scas
outsb
push
sarl
jb
ret
sub
push
sub
pop
push
imul
rol
inc
mov
out
repz
push
cmp
mov
xor
data16
push
mov
ror
into
mov
mov
data16
mov
rcll
movsb
push
sbb
sub
es
adc
inc
shll
push
scas
mov
ror
stos
dec
ds
inc
push
jb
sar
shll
in
or
leave
xor
jmp
es
movsb
leave
dec
xchg
rcl
stos
into
inc
dec
movsb
mov
adc
int
xchg
test
rcll
inc
into
push
iret
or
mov
adc
out
test
push
into
dec
dec
nop
rorl
or
out
lret
adc
inc
stos
rcll
into
rolb
push
imul
inc
enter
leave
enter
add
int
jno
jl
shrb
dec
leave
or
mov
adc
sub
fisttpll
push
xchg
stos
into
jb
adcb
dec
leave
into
scas
dec
mov
psubb
xchg
inc
push
insb
and
mov
mov
dec
or
dec
rcll
push
mov
mov
movsb
xchg
mov
orb
xchg
dec
ds
or
xlat
mov
push
nop
jo
dec
into
into
cmpsl
mov
inc
inc
lret
xchg
seto
adc
xchg
or
mov
jle
nop
dec
ds
mov
stos
push
mov
mov
test
or
inc
test
or
push
mov
lret
push
mov
cs
dec
lret
outsb
cs
mov
xchg
into
rcll
xchg
int3
xor
adc
into
mov
stos
push
xor
dec
or
rclb
ror
push
mov
int3
inc
rolb
xchg
or
adc
ds
ds
mov
movsb
jb
rcrl
test
mov
scas
mov
jge
fwait
xchg
dec
xchg
cltd
push
mov
cmpsl
jbe
sub
repnz
sbbb
adc
dec
imul
je
sub
flds
lret
xor
fdivl
sbb
sbbb
jns
lret
pop
xchg
xor
test
lret
adc
cs
dec
sbb
jno
inc
xor
mov
adc
stos
adc
js
cmpsl
hlt
pop
cs
adc
call
mov
sub
aaa
or
and
rclb
adc
das
inc
xchg
mov
loope
lea
pop
jnp
mov
mov
push
inc
inc
sets
push
mov
cwtl
mov
mov
in
pop
and
jb
fsubp
pop
test
xchg
push
popf
pop
in
cmc
lret
loopne
jnp
call
dec
mov
cmp
lcall
push
xor
pop
add
test
das
lahf
adcb
sub
fwait
lret
mov
mov
call
notb
mov
sbb
xchg
adc
add
ja
lret
into
in
clc
add
push
lds
imul
cs
sbb
mulb
and
mov
xlat
shlb
dec
scas
pop
xchg
in
xor
es
mov
push
repz
aaa
mov
pusha
xchg
jecxz
test
dec
xchg
mov
mov
test
out
add
int3
pop
or
das
inc
mov
adc
into
outsl
out
dec
imull
test
mov
into
adc
pop
inc
push
mov
xchg
mov
lds
mov
sub
movsl
mov
les
jb
out
mov
add
sub
hlt
and
jecxz
lahf
rcrb
lret
jnp
inc
sbb
mov
push
lret
lcall
xchg
jmp
stos
sub
clc
notb
inc
daa
pop
mov
xchg
inc
iret
cmpsl
leave
lods
jnp
jns
add
sbb
mov
pop
mov
push
dec
mov
push
loopne
sbb
addr16
div
jl
adc
enter
sbb
addr16
sub
fnstcw
push
jo
sub
dec
push
sti
hlt
adc
insl
pop
sub
xchg
sbb
movsb
pop
mov
mov
sub
mov
pop
insb
ja
lcall
push
xor
fiaddl
dec
jne
jge
dec
cmp
int3
cmpsb
push
test
movsl
and
pop
mov
adc
and
mov
inc
jl
into
jp
jp
gs
jno
in
pop
push
insl
sub
xchg
mov
outsl
xchg
ljmp
cmp
lods
xor
je
xor
ja
insl
out
dec
cmp
adc
aaa
xchg
cmp
jecxz
inc
mov
jo
addr16
and
or
add
scas
pop
mov
lods
push
mov
mov
lea
rcrb
outsl
outsl
shll
movsl
mov
lea
out
js
push
mov
push
jne
push
int3
in
cltd
jns
cwtl
xor
lods
sbb
ret
mov
sub
test
cmp
scas
sub
push
pusha
les
and
mov
dec
add
lock
scas
jns
out
enter
pop
xchg
test
stc
xor
rolb
adc
mov
push
lods
jo
out
mov
adc
test
inc
mov
bound
mov
jno
or
subb
and
inc
mov
cmp
divl
dec
repz
mov
inc
push
jmp
sub
cmc
xchg
out
lcall
movsb
mov
pop
adc
push
lret
xchg
jae
adc
xchg
push
push
leave
jo
fildl
xor
pop
sti
cmp
jbe
aaa
test
in
cmp
rcr
pop
pop
bswap
sbb
pop
push
sub
mov
jne
mov
je
dec
mov
mov
out
dec
jnp
popa
xor
pop
data16
xchg
int
adc
dec
ret
popf
cmpsb
mov
and
ret
mov
mov
cmp
cld
cs
xchg
int3
fcomps
test
and
push
push
test
in
add
jle
dec
rorl
dec
and
dec
roll
sbb
enter
test
aaa
in
ficompl
movsl
bound
adc
mov
inc
iret
pop
pusha
xchg
test
sarb
ja
rcll
mov
negb
push
xor
xlat
mov
jne
hlt
outsb
jb
pop
out
xchg
scas
aas
mov
jnp
cmp
into
out
sub
dec
bound
mov
insb
cmpb
nop
scas
jl
inc
jge
mov
sub
push
push
cmpsb
rcll
or
push
outsl
push
adc
fisttps
add
add
mov
cmp
je
push
cmp
hlt
lea
lcall
push
fistpl
push
fcoml
fbld
int
movb
dec
in
sub
into
pop
mov
inc
loopne
jg
cmp
je
and
dec
in
lods
fs
and
push
push
pop
outsl
enter
nop
adc
sbb
sub
in
mov
cmp
cmp
mov
ret
ret
xchg
inc
mov
mov
inc
mov
xchg
adc
out
mov
mov
mov
add
and
jge
xchg
mov
add
xchg
and
jns
in
and
cmc
pusha
xchg
lock
jg
pop
test
pop
daa
xchg
pusha
pushf
adc
adc
mov
lea
push
cmp
xor
pop
dec
popf
hlt
xchg
jns
addr16
sub
movsl
sarb
fsubrs
fwait
pop
sarl
mov
jbe
js
into
sub
pusha
pushf
in
jl
mov
pop
lods
cmpsb
adc
andl
or
cmp
cmpsb
xchg
push
outsb
mov
inc
push
push
sti
popf
push
je
push
addr16
rclb
mov
xchg
sub
sub
cmp
fscale
inc
push
sbb
xchg
xchg
stos
out
or
sub
mov
or
mov
cmpsl
out
pop
movsl
fidivrl
nop
out
divb
dec
jo
and
cmpsl
jae
cmp
divl
fcmovne
orb
inc
xchg
shrb
nop
mov
ja
filds
jne
pop
clc
fisubl
fistpll
out
lea
es
or
jno
pop
jp
sbb
cmp
dec
xchg
lds
aam
fcoml
adc
jbe
inc
xchg
inc
and
sbb
test
testb
dec
test
cs
cmp
mov
shrb
inc
shl
leave
inc
je
jge
lods
dec
dec
xchg
xchg
cltd
popf
movsb
inc
jp
rclb
inc
mov
add
sub
aas
push
sub
mov
sub
nop
push
dec
xchg
sub
jge
push
subl
scas
ret
xchg
ret
add
adc
arpl
ss
rcr
cld
outsb
loope
imul
mov
push
testb
xchg
aam
fcmovbe
adc
cmp
push
loope
xchg
js
wbinvd
scas
sbb
fsubl
out
xchg
ficompl
mov
sub
xor
es
pop
in
ja
dec
aad
cs
cmpsl
rcll
sbb
adcb
nop
add
xor
mov
and
out
aaa
pop
mov
adc
cmpsl
hlt
mov
or
dec
mov
out
jle
adc
ret
jb
ret
cmc
mov
insb
xchg
cltd
rcrb
pop
xor
je
out
jnp
sub
push
mov
jno
aaa
cmp
das
out
in
or
dec
pusha
pop
insl
mov
add
cmp
dec
push
add
xor
scas
jmp
int
lret
lret
iret
cs
pop
nop
clc
xchg
mov
dec
push
fs
daa
pop
shll
adc
push
pop
stc
fisubl
xor
lods
push
inc
push
in
xchg
mov
jmp
mov
jo
xchg
cli
nop
data16
int
movsl
pop
push
adc
cmp
int3
xchg
sbb
inc
add
push
sbb
or
push
push
das
ja
ror
adc
sti
fstpt
ret
push
mov
aaa
jbe
and
lret
fwait
mov
test
sub
cmp
fmull
sbb
mov
mov
and
or
dec
sub
idivl
icebp
jno
pop
inc
mov
clc
mov
inc
leave
cli
int
sarb
sahf
decl
or
inc
and
ss
insl
scas
xchg
xor
pusha
jge,pt
repnz
sbb
lods
cli
loope
dec
pusha
dec
mov
out
xchg
lds
out
cwtl
mov
enter
in
adc
mov
cmc
jno
sbb
dec
cld
mov
je
pop
push
lods
lcall
mov
push
lds
mov
lock
push
push
mov
xchg
sub
push
cwtl
scas
clc
mov
cmpsb
sbb
dec
daa
push
fisubs
fisubs
arpl
sar
cmpsb
adc
push
popf
cld
js
xorl
sbb
insb
mov
ds
nop
add
stos
jbe
mov
addr16
jae
daa
inc
jns
shlb
sbb
mov
dec
mov
sbb
roll
dec
xor
jl
int3
aaa
and
inc
fcompl
and
lret
pop
pop
inc
xor
test
fstl
in
scas
jecxz
int
sbb
jl
lcall
xor
push
jbe
dec
ja
shr
fsubl
lret
loop
pop
sbb
clc
push
stos
mov
sbb
loope
dec
lods
fimuls
xor
in
neg
in
inc
inc
cmpsl
lretw
in
pop
inc
sub
mov
lock
jg
add
pushf
lods
inc
pop
bound
inc
and
cld
test
xchg
dec
out
scas
or
in
pop
mov
dec
nop
add
adc
push
iret
cmp
lock
pop
add
enter
imul
int
dec
and
loope
inc
pop
aam
jne
xchg
cli
mov
decl
test
arpl
jle
fucomi
xchg
in
pop
insl
fs
lods
push
popa
cmc
insl
sbbb
inc
push
xchg
pop
sbb
add
mov
sub
sbb
xchg
hlt
jg
mov
addr16
cld
push
ffreep
out
pop
dec
dec
mov
jb
enter
movsl
mov
in
lret
pushf
and
or
sbb
cmp
adc
or
sarb
push
dec
jb
mov
add
paddsw
sbb
sbb
xor
xchg
cli
and
inc
movsl
pop
fidivl
pop
outsl
push
sub
orb
lahf
push
aad
dec
jle
push
into
icebp
mov
push
add
lods
cltd
cmp
cmp
mov
mov
push
sbb
imul
int
cmpl
add
cmp
dec
dec
xchg
xor
lret
dec
fcompl
popa
pop
neg
cs
dec
test
test
sub
ds
leave
mov
pushf
outsb
sub
data16
sbb
fsubs
movsl
es
mov
fwait
xchg
adc
inc
js
pop
dec
jecxz
push
mov
jb
cmp
out
aad
xchg
mulb
inc
dec
nop
xor
lds
jbe
cltd
inc
je
sub
loop
mov
mov
xor
out
adc
inc
jae
les
int3
aas
rorl
xor
arpl
jge
and
fdivrl
pop
bound
dec
inc
int3
pop
sub
or
xchg
pop
cld
or
das
xor
andb
jmp
psubsw
xlat
fnstsw
orb
ret
pop
push
pop
add
dec
inc
adcl
int
xchg
xor
jge
in
and
rol
adc
nop
push
adc
push
mov
addl
inc
int3
dec
scas
int
movsb
or
in
sti
jae
mov
popf
inc
test
dec
mov
xor
inc
insl
pop
ficoms
push
sbb
dec
pop
enter
push
xchg
lds
lock
and
and
fwait
mov
rcr
test
xorb
mov
int
test
shl
pusha
sbb
adc
into
ljmp
xchg
lret
mov
in
roll
mov
outsl
test
add
inc
jmp
mov
jo
stc
push
out
inc
icebp
dec
xchg
or
inc
push
sub
lods
into
or
mov
xchg
lods
push
les
out
inc
xchg
mov
jae
mov
inc
aaa
clc
mov
cs
bound
aas
cs
dec
dec
add
jge
adc
scas
cmp
test
sbb
jns
adc
xor
jae
cmpsl
cli
in
or
popa
jp
scas
shufps
or
push
xchg
mov
test
cmp
gs
stos
mov
fistpl
stos
stos
mov
cmpsl
and
add
ret
inc
xor
add
call
push
int3
pop
jmp
clc
sub
ss
out
sub
dec
test
mov
rolb
les
aaa
or
jns
push
inc
fdivl
test
cmpsb
push
or
cmpsb
xor
fdivrp
xchg
push
js
shl
mov
xchg
push
adc
pop
cmp
out
fsts
gs
or
sbb
cmpsb
jmp
push
fnstsw
mov
icebp
inc
add
out
inc
cwtl
sbb
int
pop
fs
push
xchg
push
inc
mov
aas
sahf
orb
enter
lret
push
lods
pop
movsl
stos
stos
femms
ror
notb
xchg
xchg
inc
xor
and
loop
ss
mov
notb
inc
je
jnp
xor
sub
jo
jmp
lods
imul
mov
jp
lret
and
fsubr
enter
pusha
xchg
cmpsb
lcall
shrb
dec
ret
jno
stc
xor
test
ds
mov
mov
xor
jmp
notl
andb
add
sbb
repz
xlat
std
mov
rorb
dec
in
xchg
adc
jbe
and
or
xor
es
mov
xchg
sarl
jge
enter
cwtl
repnz
mov
iret
lds
xor
iret
pop
jno
lret
push
inc
aam
int3
push
rcrb
ja
das
bnd
rcrl
mov
jb
push
clc
jl
nop
aad
jb
std
cmp
mov
pushl
push
mov
fwait
add
and
inc
out
sbb
xchg
arpl
push
test
jmp
rcl
shlb
and
sti
and
mov
dec
js
mov
jle
sbb
cmp
mov
xorb
repnz
pop
inc
fsubrs
test
xchg
sbb
xchg
loop
adc
inc
mov
lea
sub
pop
xchg
mov
rcrb
decb
and
enter
pop
nop
or
push
fbld
in
dec
sub
aaa
mov
arpl
and
adc
pop
mov
out
loopne
sbb
aas
mov
mov
mov
dec
sbb
push
aad
sbb
shlb
into
and
adc
aaa
test
or
pop
pop
test
shrb
cmpl
dec
pop
ret
xchg
jge
cli
pop
rclb
mov
leave
frstor
shr
mov
dec
sbb
sub
and
mov
mov
push
iret
dec
pop
push
arpl
out
bound
fistl
iret
mov
int
leave
dec
mov
fs
mov
fldenv
xor
or
imull
fcomps
and
addr16
mov
sarb
lock
rorl
and
and
xchg
sar
xchg
negl
push
or
aaa
and
cwtl
inc
rclb
mov
sbb
lahf
cmp
sbb
inc
pop
mov
push
inc
test
mov
rclb
int3
fsubl
shrl
or
js
mov
out
je
push
pop
lcall
es
icebp
jmp
int
or
inc
inc
mov
loopne
test
pop
jb
jmp
repnz
ret
lcall
jmp
movsl
and
jne
insl
in
lods
arpl
pop
jbe
rcr
mov
sbb
leave
shll
lret
loope
lret
inc
jb
cmp
int
leave
jns
xor
aas
nop
mov
dec
inc
mov
push
dec
sbb
pushf
add
mov
mov
dec
push
pop
sub
insb
mov
mov
dec
mov
cmc
cltd
andb
cmp
popf
sbb
lds
outsb
ror
xor
rcrl
and
sub
cmp
ror
jmp
faddp
aas
mov
stos
hlt
aas
sub
pusha
movsb
mov
test
inc
xor
jmp
pop
add
sbbb
in
les
aaa
xor
sarb
xor
push
lret
pop
mov
int3
lea
add
mov
scas
cmp
and
xchg
and
mov
in
pop
push
in
outsl
sbb
js
lcall
dec
inc
fs
push
lds
and
cmp
sbb
icebp
scas
int
stc
cmp
ds
aad
nop
mov
xor
sub
mov
setp
adc
test
jg
jl
sti
arpl
jno
loopne
push
mov
pop
cmpsl
decl
push
fucomi
imul
cmp
adc
push
or
and
inc
outsb
mov
jb
stos
cmp
stc
adc
ficoms
sub
inc
jmp
cs
add
or
fildll
insl
pop
scas
or
loopne
adc
sub
in
mov
sbb
sub
icebp
enter
lahf
imul
push
jmp
cmp
lret
icebp
mov
cmp
enter
int
sbbb
xchg
mov
mov
inc
push
aaa
ss
loope
mov
sarb
pop
mov
popf
addr16
adc
push
test
jnp
cmp
add
popa
and
ud0
adc
popf
xor
gs
adc
icebp
dec
mov
out
mov
fistpll
test
inc
aad
cmc
ja
and
je
pop
sub
fs
out
enter
xchg
adc
orb
into
sbb
jle
ds
das
cmp
mov
inc
fcomps
je
lcall
int3
jp
cmp
repnz
mov
int3
add
inc
mov
pop
pop
mov
sub
loope
sub
inc
dec
mov
jb
dec
rorb
xchg
out
cmpsl
add
cmc
lock
movsb
cmpsb
pop
scas
mov
fsqrt
shlb
xor
xchg
mov
mov
jmp
inc
mov
rolb
daa
iret
in
push
je
xor
aam
sub
mov
sub
ds
adc
subb
das
cmpsb
push
sahf
jge
mov
loope
and
lcall
add
and
lret
xlat
lcall
lahf
xchg
xlat
aas
mov
sub
ret
ljmp
add
into
adc
mulb
lds
ja
inc
fldl
pop
jge
fiadds
aad
inc
inc
jae
ljmp
pop
lret
stos
pushw
xchg
shl
dec
shl
icebp
into
aas
mov
xor
icebp
cwtl
inc
mov
loopne
lret
pop
dec
ftst
or
mov
lret
cmpb
mov
in
sbb
push
cmp
ds
xchg
shrb
sbb
sbb
int3
xchg
arpl
fwait
divl
out
aaa
scas
push
clc
cli
xchg
ja
sbb
ftst
push
mov
fiadds
rcl
jg
mov
test
leave
sbb
in
pop
mov
xchg
sub
mov
mov
mov
stos
push
pop
and
mov
push
arpl
xor
sub
roll
push
std
pop
sbb
mov
arpl
movsb
icebp
add
dec
dec
loope
cld
int
cmp
mov
adc
mov
fisubrs
cmpsb
adc
sbb
mov
jge
dec
dec
movsb
bound
shr
mov
inc
mov
pop
and
mov
xchg
or
jmp
xchg
arpl
push
movb
rolb
ret
sub
insb
sbbl
and
lods
leave
mov
bound
mov
sbb
xchg
in
pop
inc
out
shll
sbb
ds
jg
arpl
ret
mov
roll
xchg
fisttpll
lock
and
int3
sbbb
aas
or
mov
stos
fnstcw
shl
inc
lods
push
test
fcmovne
fsubl
cltd
jne
fldenv
adc
nop
aas
outsl
pop
jmp
add
leave
xchg
dec
mov
dec
lock
cmpsl
inc
jo
fmulp
loop
test
outsb
add
cmp
loope
hlt
stos
roll
mov
jb
push
xor
jle
test
lock
inc
jmp
out
leave
add
out
cs
lock
cmp
pop
adc
push
in
into
adc
movsl
jecxz
xchg
mov
inc
shlb
pop
je
xor
jb
jne
jae
mov
push
jp
in
inc
sahf
adcb
sbb
mov
xchg
mov
jns
stc
push
aam
pop
jno
fwait
and
and
jns
sti
mov
and
movsl
sbb
xor
ret
std
and
jno
lret
jecxz
pop
into
sbb
mov
sub
movsl
or
sarl
pop
jg
xor
jae
aas
adc
imul
cltd
dec
sbb
lret
mov
repnz
rcll
push
pusha
push
aam
jge
sbb
repz
cld
arpl
cwtl
cmpsb
rcrl
fdivr
and
push
mov
inc
inc
adc
mov
sub
xchg
xor
pop
enter
ds
subb
out
add
mov
outsl
and
mov
scas
leave
jecxz
loopne
insb
mov
shlb
and
inc
sub
rol
fnstcw
jae
adc
inc
test
in
adc
jnp
js
sub
jge
ret
pop
hlt
adcl
loope
lds
in
sahf
xchg
lods
jecxz
pop
xchg
and
mov
rorl
adcb
push
fwait
data16
add
ret
adc
push
scas
movsb
int3
and
push
dec
mov
jle
imul
std
xchg
add
dec
scas
test
or
mov
and
push
mov
ljmp
aas
mov
dec
push
mov
sbb
cmpsl
stos
bound
out
ret
inc
iret
mov
mov
inc
sub
pop
test
cmp
mov
gs
mov
mov
popa
incb
xor
out
loopne
adc
into
pop
addr16
pop
cmp
pusha
call
jb
mov
jae
fisubrs
cmp
xchg
scas
into
addr16
sub
enter
leave
and
xchg
arpl
and
and
in
mov
xchg
xlat
es
xor
mov
xchg
sbb
bound
mov
sti
mov
cmc
repz
mov
pop
mov
mov
sti
xor
insl
sub
fsubs
pop
lret
inc
out
daa
sbb
shlb
dec
jb
addb
mov
dec
and
shlb
sub
xor
stos
lret
lret
or
notb
sbb
aaa
dec
inc
std
and
cltd
adc
mov
pop
adc
dec
loope
lret
and
outsb
pop
mov
adc
mov
mov
jne
sbb
sbb
xchg
out
ficoml
fs
rcl
ret
mov
imul
out
and
daa
sub
lret
xor
leave
mov
arpl
mov
into
adc
dec
data16
rolb
mov
sbb
mov
and
fistl
push
adc
fstps
clc
push
inc
adc
xchg
cmp
out
push
and
jb
daa
mov
pop
fidivs
xchg
fdivl
adc
lahf
stos
inc
pop
push
inc
in
enter
mov
push
je
sbb
xchg
cmp
mov
push
jae
xchg
mov
ds
cmpsb
push
xchg
xlat
movb
rcl
sbb
int
adc
mov
mov
mov
add
sbb
aaa
cld
stos
stc
or
andb
shll
shlb
addb
icebp
sub
les
enter
adc
cmp
out
mov
int3
scas
fxch
rolb
nop
push
pop
aas
cwtl
adc
pusha
cs
sub
jl
xchg
push
aad
sbb
mov
pop
inc
ss
add
mov
movsl
jae
adc
repz
addr16
sahf
shll
and
pop
push
fisttpl
daa
mov
or
ret
cwtl
lea
sbb
push
xchg
mov
and
cmp
rcl
pop
daa
xchg
fisubl
les
arpl
test
xchg
out
add
adc
mov
fcompp
sbb
lea
ret
hlt
fcmovne
sub
dec
jl
rcrl
sbb
and
lret
arpl
pop
ret
dec
mov
lock
test
add
fs
dec
adc
lods
lock
inc
push
jge
fwait
shlb
icebp
add
inc
and
shll
jb
dec
fwait
and
push
or
sub
popf
xchg
dec
pop
sbb
pop
loope
ret
lods
mov
dec
dec
add
and
xchg
aam
sbb
jne
bound
aam
movl
aas
leave
mov
fs
pop
mov
ja
out
xchg
aaa
iret
lret
repnz
in
movb
mov
mul
data16
daa
test
std
inc
cmpsl
arpl
stos
aad
add
cmpsl
ret
pushf
aas
outsb
sbb
daa
jb
fldl
popf
andb
lret
ret
mov
dec
pushf
lretw
pop
mov
jo
ds
jno
shrl
fidivrs
int3
lret
imulb
mov
dec
inc
pop
xlat
test
sub
adcl
pop
int
and
insb
or
pop
sbb
push
cmpsl
xorb
sbb
shll
or
mov
stc
cmpsl
popa
flds
jbe
mov
xor
dec
lea
mov
fstps
mov
inc
lods
sbb
lret
addr16
int
ret
stos
cmp
sbbb
pop
daa
add
out
test
lcall
shlb
dec
int3
xchg
mov
mov
inc
mov
int3
sar
jnp
daa
or
mov
sahf
addr16
cmpsl
inc
int3
arpl
jl
shl
arpl
mov
jno
mov
add
pop
aas
mov
outsl
pop
aas
and
aaa
mov
mov
out
pop
cs
cmp
sub
jle
cltd
movsb
adc
dec
fwait
cmpsb
sbb
les
jmp
sahf
dec
push
and
fs
shlb
popa
aad
out
int3
arpl
notb
inc
push
testl
shl
mov
cltd
lods
lret
daa
push
fwait
inc
jb
inc
int
sahf
jae
xlat
mov
lock
arpl
mov
push
jp
insl
adc
jb
push
cmpsl
inc
andb
iret
nop
rolb
pop
ffree
sbbb
xchg
cmpsl
test
shrl
idivb
adc
out
sbb
xor
jae
stos
fimuls
outsb
adc
push
xchg
and
addr16
insl
mov
dec
les
mov
pop
cmp
sub
shr
or
leave
shlb
jl
test
movsl
mov
dec
js
addb
outsl
rorb
and
aaa
subl
cli
dec
cmp
mov
cmp
iret
sti
cmc
shlb
insl
ret
rcrb
sbb
mov
sbb
inc
mov
lret
inc
cltd
xchg
push
popf
fistps
mov
mov
add
inc
and
add
outsl
mov
std
repnz
mov
mov
fbld
nop
cmc
lret
scas
inc
or
mov
imulb
pop
push
sar
push
ds
cmp
adc
push
jle
sub
sub
ds
mov
xchg
cmp
xchg
add
mov
rcrl
adc
arpl
cli
jo
loop
xchg
rcll
daa
mov
rcll
dec
inc
dec
or
jecxz
rcl
pop
xor
add
stos
jo
pop
mov
inc
das
imull
out
push
nop
pop
inc
sbb
imulb
push
and
aaa
repnz
leave
into
ja
ret
fmuls
xor
xchg
ror
xor
cmp
add
ret
adc
inc
int3
ds
mull
dec
sub
jmp
pop
bound
leave
push
stc
inc
mov
mov
sbb
push
push
add
divb
lret
das
aas
mov
cmc
and
ds
cwtl
mov
aaa
loope
push
aad
nop
stc
testb
aas
xorb
mov
fwait
dec
xchg
les
lahf
shr
sbb
cltd
mov
je
or
mov
mov
cltd
xorl
push
fcmovnb
rcrl
nop
outsl
mov
adc
and
clc
pop
add
iret
imul
mov
into
adcb
divb
ret
sbb
mov
cmpsl
addr16
mov
mov
cmp
push
ds
jbe
cmc
gs
xchg
inc
lock
xchg
mov
jmp
aaa
mov
leave
out
nop
aas
push
icebp
ret
test
pop
dec
cmp
test
pop
sahf
push
sbb
push
adc
out
mov
fsubrl
pop
sbb
xlat
fists
loope
xchg
addr16
inc
das
lret
pop
xor
test
cmpsb
je
push
les
adc
addr16
cli
mov
mov
mov
push
shlb
push
movsb
in
adc
inc
mov
push
daa
mov
and
sahf
adc
fcomps
ror
cmp
or
sbb
out
incl
test
call
pop
inc
punpcklbw
or
aas
shlb
mov
adc
shll
jns
dec
mov
test
test
out
pop
ficompl
pop
push
or
je
push
ret
or
divl
ljmp
mov
mov
int3
pop
test
rorl
cwtl
roll
sbb
and
pop
sbb
jle
pop
addr16
sbb
sub
shlb
clc
ja
ror
sbb
add
adc
ficoms
jb
add
push
and
int3
push
adc
testl
sbb
cmp
divb
sarl
xchg
mov
test
or
xchg
call
pop
test
fs
fildll
jo
push
and
xor
mov
pop
aaa
mov
inc
test
pop
cmp
and
inc
ds
movsb
mov
sti
imulb
and
jb
add
jp
dec
jns
dec
inc
out
adc
xchg
mov
dec
iret
or
dec
lcall
nop
ret
movsb
idivl
add
lret
add
inc
jmp
movsl
mov
cmpsb
shlb
call
dec
sbb
clc
inc
mov
imul
adc
shlb
sbb
xor
into
pop
xchg
mov
cmp
jl
int3
mov
scas
adc
xchg
push
xor
ljmp
inc
dec
icebp
sbb
or
xor
push
ljmp
stos
sbb
gs
lret
out
xor
frstor
add
test
mov
int3
sti
jns
mov
pushf
out
inc
daa
outsl
inc
cmp
sahf
imul
push
mov
xlat
sti
lock
pop
sub
mov
inc
iret
mov
or
push
test
movsl
mov
jb
mov
aaa
mov
nop
dec
xchg
rol
push
and
pop
or
lock
lret
xlat
or
shrb
testl
fadds
gs
add
pop
xlat
dec
cmp
nop
adc
push
daa
jnp
mov
inc
icebp
outsl
and
ret
pop
and
lret
adc
pop
dec
andb
pop
mov
arpl
dec
xor
mov
sbb
jnp
push
cwtl
push
mov
test
loopne
xchg
mov
mov
repz
test
in
test
xor
push
ljmp
push
int
sbbb
cmpsl
fstl
fnstenv
inc
lods
sahf
jnp
clc
mov
subl
cmpsb
mov
jb
sbb
mov
pop
daa
mov
xor
rcrl
adc
dec
ret
test
fadd
mov
adc
lcall
test
add
das
sbb
mov
mov
aaa
loopne
arpl
fucom
pop
push
mov
pop
int3
pcmpgtd
cwtl
mov
mov
or
in
dec
js
lods
lret
xor
icebp
or
fdivrl
addr16
and
push
popa
jno
sbb
lods
aaa
mov
xchg
lea
jnp
mov
or
fiadds
push
jge
sub
loope
jl
dec
add
int3
pop
adc
out
inc
fmuls
push
mov
fdivrs
int
cs
lret
dec
mov
stc
stos
xor
xchg
sti
jno
sbb
or
lods
ficompl
push
les
pop
and
xchg
mov
or
shrl
sub
mov
lcall
adc
xlat
push
or
mov
jns
pop
jnp
shr
jbe
loope
xchg
cltd
xor
inc
jo
frstor
bound
sub
int
mov
adc
mov
dec
pop
push
loope
jge
fsubl
and
popf
mov
scas
push
mov
addr16
pop
pop
les
in
mov
orb
int3
dec
pop
dec
mov
lods
into
push
cwtl
cltd
mov
cmp
loope
dec
das
or
rorl
dec
mov
dec
and
push
mov
xor
outsb
call
mov
inc
cltd
mov
mov
mov
into
inc
push
int
sbb
dec
scas
or
sbb
pop
pushf
mov
dec
lcall
xor
pop
push
inc
push
xchg
mov
pop
cltd
out
loopne
fdivl
sbb
sub
xchg
mov
ret
xor
jmp
sti
stos
mov
pop
xchg
cmp
ficoms
inc
pop
jno
cmp
int
inc
push
ljmp
xor
loopne
xor
push
adc
mov
fsts
pop
outsl
lret
sti
adc
cmp
or
mov
xchg
dec
enter
mov
movsb
add
xchg
cltd
mov
inc
jnp
xor
jne
dec
sbb
mov
daa
rclb
pop
int3
or
insl
cltd
in
xchg
movsb
mov
add
xor
rclb
mov
icebp
insl
ja
dec
jecxz
movsl
add
fwait
mov
mov
add
add
mov
mov
repz
neg
lret
lock
filds
add
jbe
or
sarb
or
jmp
mov
jae
xchg
mov
sahf
sarl
lret
push
int3
int
push
push
test
cmp
mov
jns
sbb
stos
cmp
push
out
sub
push
inc
mov
out
lret
cmp
mov
and
xchg
mov
dec
icebp
stos
adc
inc
jnp
out
adc
xchg
mov
adcl
std
jecxz
inc
cmp
xor
xchg
jb
repz
mov
cltd
mov
pop
push
xor
xor
jge
ss
sub
js
repnz
xor
mov
push
out
ret
out
push
ljmp
mov
repnz
sbb
xchg
nop
lds
shll
addb
iret
jb
dec
push
mov
push
inc
and
shrb
jbe
mov
loope
jge
loopne
sar
movsb
insl
xchg
adcl
push
into
leave
fwait
add
and
xchg
pop
std
movsl
push
icebp
ja
mov
les
xchg
popf
inc
xor
mov
data16
mov
stos
xchg
addr16
inc
mov
sbb
jae
test
xchg
je
pop
outsl
mov
xor
sbb
fwait
mov
mov
ret
sub
or
rcl
fldl
nop
pop
lods
inc
push
jmp
movsl
das
adc
mov
pop
jle
and
rcrb
pop
ret
clc
shlb
xchg
mov
loope
push
scas
mov
dec
mov
xor
jnp
jle
cmp
jo
shrb
sub
lods
sub
mov
shrb
rorb
inc
sub
dec
scas
ds
shlb
lods
jg
and
loop
shrb
ret
cmp
xchg
shrb
scas
loopne
ja
mov
ds
pop
pop
xor
leave
mov
popa
shlb
sbb
adc
lods
popa
cwtl
push
in
mov
insb
push
pop
arpl
cmp
cs
lahf
push
sub
stc
ja
cwtl
nop
rol
inc
dec
loopne
push
push
sub
dec
add
push
adc
mov
repnz
ljmp
xor
jl
shlb
mov
mov
cmc
sub
out
js
ror
mov
sahf
jmp
jecxz
das
cmp
cmp
sub
jno
in
push
lret
add
je
mov
add
and
ret
cltd
js
jne
mov
dec
adc
or
pop
in
loop
push
out
mov
pminsw
sub
lret
fcos
lret
addr16
cmp
rorb
sub
pop
ja
scas
jbe
xchg
inc
popa
testl
inc
test
std
mov
lds
int3
ds
aad
xchg
sbb
fcmovnbe
and
and
jle
add
rcrb
pop
mov
xor
imul
aaa
inc
cmpl
into
hlt
pop
dec
rcrb
xchg
arpl
mov
mov
and
and
push
icebp
sbbb
sbb
dec
rclb
or
rcrb
push
lret
jl
rclb
mov
aam
in
fidivrl
xor
mov
push
and
ret
mov
out
xchg
insb
sub
fwait
or
mov
rorb
sub
add
jns
scas
not
test
idivl
pushf
adc
mov
dec
outsb
rcl
mov
inc
data16
daa
rcl
xor
sub
xchg
sub
sbbl
xor
int3
lahf
aaa
sbb
aad
test
jmp
mov
dec
jge
mov
ret
dec
mov
shl
fnstsw
out
data16
jns
shlb
fcompl
scas
repz
jo
lret
jnp
aam
or
lods
mov
push
pop
rorb
les
shlb
mov
ds
shrb
jne
inc
push
xor
dec
rolb
cld
sbb
out
mov
aas
ror
mov
mov
ror
push
cli
mov
add
push
pusha
dec
shll
xchg
jo
xor
mov
mov
addr16
xor
fidivl
mov
in
inc
arpl
rcrb
scas
inc
xchg
lods
push
inc
pop
les
std
xchg
rcr
mov
scas
add
and
jbe
lea
shlb
in
movsb
push
das
mov
sahf
inc
dec
xor
push
shrb
jecxz
xchg
pusha
scas
sbb
cwtl
stos
push
cmp
mov
int
add
rcl
and
and
and
loopne
pop
cwtl
bound
imul
push
sarb
out
mov
sar
icebp
add
rcrb
mov
sub
xchg
inc
xchg
jb
dec
shl
pop
pop
jmp
inc
shrb
pop
stc
pusha
outsb
ficoml
fidivrs
inc
shlb
es
loope
repz
mov
sbb
xor
out
rcr
jnp
pop
jbe
push
lahf
rolb
mov
ljmp
repnz
rcrb
hlt
pop
sbbl
stos
les
inc
loope
sub
loope
fstpt
ret
imul
gs
sub
xchg
int
scas
xchg
sarb
jmp
jb,pt
xchg
repz
sbb
xor
bound
rorb
es
mov
and
lock
rcrb
pop
lds
rolb
and
out
leave
inc
clc
pusha
and
add
and
adc
inc
dec
shrb
loopne
pcmpgtb
and
lret
pop
gs
sub
inc
in
pop
mov
xor
sub
ret
imul
pop
jle
mov
and
adc
je
adc
lahf
rcrb
jg
xchg
mov
loope
icebp
push
outsl
rclb
lea
pop
lods
shlb
xlat
mov
aad
cmpsl
adc
dec
cltd
jbe
push
clc
and
insb
inc
int3
adc
fbld
loope
rol
xchg
iret
out
rolb
cmp
in
scas
push
mov
adc
outsb
mov
shr
cmpb
sbb
bound
sbb
inc
fsubrl
ficoml
cmc
jnp
imul
jp
add
dec
loope
mov
leave
jb
iret
lds
pop
inc
js
mov
test
roll
rclb
in
cmp
lea
ret
cld
mov
jmp
rclb
jno
into
push
out
jle
xchg
rclb
sbb
pop
push
add
loope
dec
adc
pop
lcall
sbb
mov
lods
xchg
xor
jmp
rcl
les
xor
mov
push
add
lock
shlb
jmp
cmp
inc
fstp
lret
mov
cmp
lock
push
sbb
test
mov
enter
inc
push
jmp
mov
loopne
add
pop
inc
shlb
outsb
push
popf
shlb
in
adc
xchg
and
test
or
rorb
fstps
add
lret
jmp
xchg
out
dec
bound
adc
roll
testl
ret
mov
cmp
mov
cmp
adc
loope
repnz
into
pop
ljmp
and
in
out
and
add
xlat
jno
into
loope
popf
ret
jl
and
pop
xchg
sti
or
jb
into
sub
movsb
mov
ret
cltd
add
ret
jecxz
gs
add
mov
popf
xchg
repnz
mov
gs
inc
and
rolb
sbb
shlb
imul
lret
test
push
pop
dec
ja
sar
ficoms
lods
cwtl
add
daa
mov
popf
aad
pushf
imul
in
imul
fistpl
add
test
mov
shlb
in
int3
loope
mov
loopne
popf
push
ret
pop
push
rcrl
xchg
mov
and
pop
fsubp
ret
or
mov
pop
inc
loope
sub
pop
outsl
ror
aam
mov
incl
lds
ja
cmp
push
mov
cwtl
push
pop
pop
shlb
mov
outsl
test
ret
iret
mov
hlt
rclb
insl
xor
ret
ss
outsb
ljmp
mov
pushf
and
call
pop
ret
arpl
hlt
sbb
nop
jl
sub
ret
pop
int3
xchg
movsl
add
adc
js
mov
les
mov
shrl
rcll
imul
mov
scas
adc
pop
fs
rcrb
push
test
inc
push
xor
sti
int3
pop
fmull
jmp
add
mov
je
push
xchg
addr16
lea
or
xchg
mov
test
cmp
pop
gs
mov
pusha
xor
inc
adc
shrl
push
inc
mov
xor
insl
jecxz
mov
jmp
and
lea
mov
ljmp
jl
enter
cmpsl
popf
out
jb
inc
xor
ja
ret
jge
inc
sub
mov
cld
cs
sub
and
push
and
popf
je
ucomiss
addr16
xor
push
jmp
fstpt
pop
pop
mov
aas
sbb
imul
repz
cmp
pop
mov
icebp
lea
xchg
jns
and
idivb
mov
jecxz
lea
lods
dec
shr
push
push
or
bound
jno
into
xchg
dec
lds
cmp
inc
and
mov
adc
jg
pop
xchg
push
dec
aad
mov
sub
dec
push
outsl
test
nop
and
jb
icebp
int
add
adc
dec
cmp
test
xorl
adc
sub
cmp
lods
adcl
ljmp
dec
out
push
leave
lods
call
adc
dec
ret
sarl
fildll
cpuid
push
sub
push
leave
sub
mov
rcll
ljmp
mov
xchg
fmulp
add
mov
sbb
cmp
dec
rcl
popf
cmp
sbb
int3
leave
sbb
daa
jno
inc
sub
pop
add
shrb
jae
push
mov
add
sbb
inc
jp
push
ss
shll
shll
pop
gs
lock
mov
aad
aam
ljmp
inc
enter
imul
lea
lds
sahf
out
fistl
jecxz
xchg
dec
test
rclb
popf
add
jns
bound
dec
mov
loopne
sbb
lret
pop
add
nop
cltd
leave
adc
into
faddl
jge
addl
inc
xor
mov
jmp
push
sub
add
push
int
jge
mov
enter
cmpsl
pop
push
cmp
push
imul
test
dec
test
shlb
mov
dec
ljmp
std
mov
inc
inc
sbb
repz
cmp
loop
das
sbb
pop
mov
cmp
repz
dec
push
cmc
rorb
xor
ret
loope
test
mov
nop
inc
pushf
cmp
push
int3
or
adc
leave
lea
movsl
aam
pop
jg
ja
dec
shlb
mov
std
dec
int3
xlat
mov
insb
orb
xchg
dec
adc
sbb
pop
fiaddl
gs
cwtl
add
pop
dec
je
adc
repz
scas
mov
out
jge
mov
xchg
lods
lods
xchg
jo
xchg
jb
ret
push
adc
sbb
dec
adc
enter
test
rcr
dec
push
xchg
idivl
popa
xchg
mov
inc
push
push
cmpsb
iret
in
rclb
in
in
xchg
jge
inc
adc
hlt
mov
xchg
adc
inc
jl
clc
jno
in
lods
jo,pn
cltd
out
sbb
test
mov
mov
sti
shlb
popa
lcall
imul
mov
ret
ficompl
into
pushf
orl
rcr
mov
mov
pop
imul
mov
ret
stos
ds
mov
je
and
xor
dec
cmc
dec
ss
stos
mov
stos
jae
sub
addl
sub
jne
and
mov
in
out
pop
lods
pop
addb
mov
cmp
adc
pusha
jo
fsubrs
stos
xor
push
inc
push
sub
cmpsl
daa
inc
sarl
xchg
mov
push
push
cs
in
xor
testb
xor
repz
in
negb
dec
punpcklwd
xchg
inc
jbe
lret
mov
int3
lret
repnz
mov
push
mov
mov
fists
sarl
outsb
adc
sub
addr16
daa
mov
sub
pusha
sub
fidivrs
xor
nop
push
cmp
jnp
pusha
xchg
test
dec
repz
mov
mov
sbb
fmul
xchg
sbb
and
negl
xor
outsl
ljmp
test
rolb
pop
adc
add
rorb
push
enter
ret
jns
add
xor
mov
mov
imul
cmc
jo
stos
xor
shlb
mov
out
icebp
lret
inc
bound
xchg
rcr
fildl
xchg
mov
outsb
cltd
dec
loope
inc
rol
inc
cmpsb
jns
hlt
lret
dec
loope
addr16
into
jl
loopne
mov
push
jp
lret
jmp
into
aaa
into
cmp
cmpsb
outsl
arpl
imulb
hlt
xor
out
add
aas
sub
inc
mov
adc
shrb
sbb
dec
out
cwtl
rclb
mov
push
aas
push
add
pop
out
or
icebp
mov
movsb
shlb
or
push
jns
push
jle
rcr
les
add
out
cmp
jmp
test
or
xchg
out
test
shlb
adc
ss
add
add
cmp
cwtl
jg
cld
sbbl
adc
push
mov
arpl
add
loop
jl
ret
mov
mov
cwtl
sti
fsubrl
mov
xor
ret
ja
hlt
jmp
add
jns
and
push
mov
inc
test
jnp
arpl
cmp
subl
mov
out
sbb
ret
jl
ret
dec
xor
dec
rcl
sbbb
shlb
dec
and
rol
and
sbbb
popa
rolb
cmc
inc
adc
xchg
rcr
in
mov
or
imul
push
adc
sub
sarb
pop
leave
jle
pop
and
mov
mov
cs
into
in
sbb
push
je
mov
aaa
sarb
shlb
pop
and
sarb
shr
fnstenv
mov
loopne
pop
clc
pushf
push
jb
cwtl
notl
inc
loop
mov
dec
lahf
or
rcrb
mov
in
inc
pop
mov
mov
fisttpl
push
testl
dec
lret
imul
jp
cmpsl
mov
ret
adc
mov
js
push
add
rcll
sub
jns
and
pop
pop
pop
cmpsl
jp
jl
daa
ret
cmp
out
rorb
mov
cwtl
rol
hlt
mov
adc
sti
pop
ret
pop
icebp
mov
xchg
inc
out
push
jno
mov
test
mov
push
in
inc
xor
pop
in
jmp
shl
xor
jp
icebp
les
stos
mov
mov
out
shr
push
fstps
rolb
dec
movsb
dec
shrb
and
rorb
and
push
ror
shlb
je
ljmp
cmp
shrb
and
cld
pop
jmp
loop
out
mov
mov
rcrb
xlat
dec
in
and
fisubrl
rclb
mov
add
add
shlb
fmuls
rolb
jno
cmpsb
jo
es
sub
sub
je
loop
mov
push
shlb
lods
fiaddl
push
push
std
pusha
dec
clc
push
xor
pop
shl
pushf
icebp
inc
dec
in
rolb
mov
popa
outsb
shrb
shll
push
cltd
mov
jle
test
push
int3
jg
repnz
ss
mov
rolb
clc
andb
or
inc
xchg
shlb
dec
lcall
test
movsb
fadds
iret
mov
push
cmp
mov
push
dec
leave
jno
inc
shlb
mov
xor
bound
shr
popa
ds
dec
push
aaa
adc
sub
pop
out
shlb
and
fsubl
jge
dec
inc
dec
addb
int
je
push
dec
cmp
xchg
push
cli
inc
test
xchg
push
inc
inc
xchg
fidivrl
push
xor
mov
inc
lahf
or
jne
dec
out
clc
cld
nop
or
xchg
inc
pusha
enter
insl
sub
sbb
les
jge
hlt
repnz
into
ret
dec
jl
lret
scas
add
mov
cld
sahf
adc
jle
test
inc
mov
ret
outsb
push
ret
jmp
ret
jb
xor
std
call
sub
daa
mov
cli
dec
ret
arpl
cmp
pop
rorb
or
push
insb
ja
lods
inc
sub
sub
je
push
test
mov
pop
out
inc
adc
leave
sub
mov
loope
push
lret
insl
jb
mov
out
dec
int
dec
les
pop
nop
out
int3
and
mov
mov
adc
mov
lea
sub
mov
xorl
add
dec
xchg
jp
inc
dec
ret
push
int
jmp
push
push
movq
mov
push
mov
into
xor
inc
ds
jge
cmc
and
dec
gs
inc
int
fmull
lods
and
fldl
jg
adc
push
lds
mov
incb
lods
rcrl
cmc
sub
cmpsl
call
popa
aaa
mov
rcrb
sub
mov
and
sahf
ss
add
adc
jbe
jg
cmp
mov
pop
mov
mov
leave
stos
cli
jnp
xlat
popf
or
mov
dec
cmp
cli
and
dec
push
test
imul
popf
jne
ret
arpl
out
cwtl
mov
dec
cmc
lret
push
inc
hlt
aas
mov
lods
pop
out
sub
test
dec
cmpsl
pusha
mov
pop
xchg
les
mov
lea
je
mov
aas
add
hlt
mov
popf
lret
push
lea
sahf
and
cli
xor
jae
and
pop
call
test
mov
into
and
mov
popa
pop
sub
add
mov
neg
xchg
and
xor
push
jecxz
shlb
in
xlat
loope
adc
mov
inc
sbb
rcrb
pop
pop
pop
inc
hlt
rclb
arpl
sbbb
stc
jge
jle
mov
mov
movsl
jmp
mov
leave
imulb
fnsave
push
xor
shrl
insb
rorl
jns
iret
lret
ret
inc
shlb
cmp
xor
enter
add
das
sbb
ret
inc
mov
call
outsb
xchg
daa
sbb
incl
ljmp
mov
mov
sbb
sbb
mov
test
ret
out
aad
cli
sub
jne
mov
and
xor
pop
sub
lcall
pop
imul
adc
cmpsl
mov
sarb
mov
lock
and
lods
push
bnd
xchg
andb
cs
inc
mov
dec
or
add
popf
imul
jp
loopne
fs
push
jns
test
jge
inc
adc
ret
mov
lret
or
sti
sub
pop
rclb
lcall
add
inc
xchg
mov
cmp
leave
clc
adc
ror
xchg
hlt
sti
xor
pop
rclb
cmp
mov
inc
push
repnz
jne
js
iret
push
or
icebp
mov
mov
test
rolb
inc
jle
into
cmp
rcrb
mov
sbb
rclb
xlat
mov
mov
inc
mov
faddl
mov
xchg
repnz
push
push
xchg
cmp
dec
pop
fidivrs
push
push
sub
fwait
sarb
or
pop
and
xor
movsb
shl
ret
ds
jno
push
xor
dec
insl
adc
mov
cmp
adc
daa
sub
sarb
rclb
nop
outsl
iret
dec
and
pop
loope
mov
and
je
inc
aam
mov
es
push
mov
xchg
xchg
push
xchg
push
pop
mov
xor
adc
and
xchg
cmc
imul
lret
add
arpl
pop
mov
loop
out
jbe
ret
pop
xor
testl
xchg
repz
inc
cmp
sbb
es
xchg
stos
xchg
lock
lods
add
push
std
out
movsl
movsb
rclb
xchg
fdivrs
ret
jg
outsl
inc
mov
sub
and
add
adc
call
into
inc
push
rcrl
sbb
loope
hlt
imul
ds
jp
icebp
popf
add
inc
sub
inc
lock
lods
in
arpl
mov
jnp
fldt
loop
fistpll
mov
or
mov
xor
lds
fcoml
add
imul
mov
mov
cmc
loopne
mov
test
mov
fs
dec
ds
and
scas
ret
mov
adcb
fcomps
pushf
jnp
nop
loope
dec
mov
cmp
stc
mov
rclb
xor
mov
data16
test
les
or
cmpsl
lods
mov
iret
daa
xor
cmc
adc
adc
je
xchg
jae
sarb
push
mov
mov
pusha
rol
sub
jle
repnz
push
rcl
jmp
scas
das
adc
data16
fisubl
fmul
shlb
pusha
cmp
outsb
jp
out
cmpsl
rcr
aam
adcl
mov
in
push
cwtl
mov
cs
and
and
mov
xchg
adc
sub
in
call
xor
cmp
int3
xor
imul
lret
int
jecxz
sahf
xchg
pop
xor
lret
mov
jno
fdivs
sub
in
dec
jmp
dec
shll
cltd
hlt
movl
or
and
outsb
shrb
mov
jmp
xor
dec
sub
inc
add
push
or
loope
mov
sub
and
rcr
sub
add
into
je
call
rclb
pop
in
rclb
imul
loopne
push
aad
xchg
pop
xchg
std
and
inc
lret
mov
xor
xchg
in
loop
in
sbb
mov
loop
aaa
mov
xor
push
lcall
fsubrs
push
and
jb
in
pop
adc
arpl
adc
mov
rcl
mov
stos
push
gs
sahf
add
sbb
call
ljmp
lea
add
xchg
inc
loopne
cmc
js
mov
xor
outsl
pop
mov
out
subb
jne
mov
loopne
adc
xchg
push
mov
sub
lret
dec
jl
orb
loope
pop
sarb
mov
and
pushf
cmpsl
mov
push
subb
push
cmpsl
adc
dec
testl
jecxz
cwtl
or
int3
repz
test
insl
nop
cmpb
shl
sbb
test
data16
mov
xchg
int3
mov
lret
rorl
jae
xchg
loope
xor
scas
clc
idivb
push
mov
lret
rorl
jmp
xchg
add
cmp
dec
push
aam
mov
sub
or
cs
addr16
xlat
js
pop
dec
ficompl
xor
inc
mov
pop
lea
pop
push
dec
out
movl
sub
or
shll
ficoml
lods
xchg
stos
xor
cmp
sub
fdivr
and
dec
adc
shll
or
add
test
jns
and
iret
nop
pop
fcomp
xchg
pop
pop
add
rcrb
jns
jle
js
sti
popf
and
fwait
xlat
xchg
dec
lahf
lods
push
xchg
fldt
cmc
push
dec
shlb
std
popf
aas
xchg
fidivrs
movsl
shlb
test
test
lcall
mov
test
push
pushf
lret
imul
cmpsl
aaa
into
add
shrb
pop
inc
mov
bound
shl
outsb
jae
sbb
int
mov
fcompl
and
or
cmp
push
cmp
lock
lretw
sbb
xchg
ret
fidivrl
or
jnp
xchg
ret
rorb
cli
clc
pushf
fs
inc
adc
aam
nop
cli
loope
and
inc
dec
icebp
xchg
add
ret
pop
rcll
lret
cmpsl
ret
and
scas
pushf
mov
or
ret
mov
rcl
call
shlb
xchg
and
cld
pop
rorb
pop
movsl
fmul
add
into
iret
sbb
jge
sub
imul
or
mov
fcmovbe
ficompl
sbb
je
sarb
mov
enter
pusha
mov
scas
push
push
pop
dec
lret
shll
add
rorl
mov
and
imul
and
lea
mov
lret
mov
fnstsw
and
addr16
sbb
stos
inc
mov
aad
bound
inc
add
shlb
mov
or
mov
mov
jbe
jecxz
sub
push
jge
pop
rcl
mov
pop
fst
into
xlat
loopne
jne
outsb
jge
jbe
sbb
add
mov
shlb
int
test
dec
sub
bound
iret
add
push
shlb
mov
sbb
dec
pop
jg
loopne
std
lretw
sbb
jae
iret
and
dec
repz
cltd
ds
cmpsl
std
imul
out
inc
int3
jle
int
push
xchg
mov
mov
test
inc
pcmpgtw
mov
push
or
jno
ret
iret
xchg
into
icebp
push
and
inc
jecxz
xor
test
shlb
loopne
into
xchg
iret
xchg
dec
es
mov
cmp
push
xor
ss
pop
js
or
jbe
add
ss
insb
cmpsl
test
test
lret
fistl
xor
xchg
lea
aad
xchg
pop
pop
pop
and
add
loop
sub
inc
jo
scas
push
leave
xor
dec
pop
pop
inc
xorl
rorl
lahf
xchg
ror
sahf
loope
rcrb
push
cmp
mov
xchg
insl
inc
repnz
mov
mov
or
and
push
aas
fcmovbe
push
mov
mov
inc
inc
push
int3
cmp
xchg
call
cmp
fbld
or
inc
hlt
add
into
push
insl
jb
in
ljmp
add
lods
mov
add
nop
cwtl
cld
or
push
test
mov
shlb
push
rol
push
dec
xchg
loope
cmp
jl
les
xor
push
push
test
inc
pop
pcmpgtd
jp,pn
push
bnd
jb
push
cmc
aas
pop
scas
leave
lods
movb
xchg
lret
push
jb
insl
ret
int3
xchg
push
mov
rorb
into
in
cmp
push
pop
inc
jp
add
leave
mov
roll
or
or
jno
push
mov
adc
xchg
sarb
fsubrs
nop
ss
nop
mov
push
ret
lea
jecxz
roll
pop
lods
xchg
push
jb
mov
es
or
jo
mov
sbb
sub
push
out
roll
fidivrl
or
ret
mov
mov
adc
inc
rcll
inc
cmpsb
rcrb
ja
or
inc
outsl
or
push
cmpsb
add
mov
punpckhdq
stc
cmpsl
mov
sahf
or
cmc
mov
into
mov
mov
push
aas
hlt
loope
mov
ret
fmuls
mov
mov
mov
mov
mov
mov
xchg
ja
shl
sub
xor
push
cmc
push
mov
add
cltd
mov
pop
pop
int
test
jecxz
and
dec
or
test
fbld
pop
rorl
fucomp
adc
test
ss
shlb
pusha
pop
push
jg
enter
mov
pop
xor
fdivrs
add
xchg
jle
fstpl
dec
test
or
dec
daa
pop
and
ret
shrb
stos
pop
repnz
aaa
aam
adc
xchg
pop
enter
fistpl
ljmp
pop
add
xor
pop
jecxz
jl
adc
jne
rclb
pop
cmp
addb
jno
test
sbb
out
pop
and
movsl
stc
in
mov
in
xlat
shrb
aad
jae
test
pop
xorl
pop
push
push
andl
dec
xlat
mov
std
or
cmpsb
iret
and
subb
movsl
stc
loopne
push
loopne
or
cmpsb
call
mov
repnz
bound
lcall
or
std
jg
xchg
sub
rcl
push
loop
adc
rcll
rcrb
mov
cmpsb
xchg
lea
popa
dec
push
mov
aad
add
sub
loopne
decl
mov
push
nop
std
in
rorb
or
cmc
inc
sti
sub
out
inc
xchg
sbb
push
rclb
cmpsb
pop
mov
scas
push
out
test
xchg
xor
ret
mov
int
cs
push
iret
and
rcl
and
pop
pop
lock
rcr
push
fbstp
rclb
mov
mov
mov
mov
add
fisubs
cmp
je
rcr
or
iret
cli
mov
pusha
pop
out
inc
movsl
into
sar
popa
cmp
aas
jge
shrb
pop
and
test
shr
inc
rolb
lret
shr
mov
andb
mov
rcrb
mov
or
jns
add
mov
xchg
loope
jb
jmp
rclb
fs
mov
cmp
lcall
mov
xor
mov
shl
jb
mov
popa
xor
rorb
push
pop
cmp
jae
sbb
pushf
xchg
mov
sbb
loopne
movsl
or
or
and
dec
scas
jp
mov
xchg
ret
jmp
les
arpl
dec
mov
shlb
sbb
pop
jae
cs
mov
mov
loop
and
lock
jns
loope
adc
dec
and
inc
lahf
pop
rorb
dec
aam
shlb
dec
fistpl
int3
or
xchg
incb
outsl
loopne
sub
mov
test
lret
int3
or
loopne
xorb
fstl
cltd
mov
dec
lods
add
sbb
sbb
cld
cli
in
ret
popa
std
and
mov
pop
stc
shlb
ret
mov
or
pushf
divb
popl
int3
dec
adc
outsl
rcrb
mov
dec
shrb
jnp
push
add
xor
daa
mov
insl
lcall
mov
faddl
stc
dec
adc
jp
mov
push
int3
or
addr16
mov
lods
sbb
aad
shlb
in
jge
or
sbb
shlb
cmpsl
loop
add
sub
cmp
rcll
cs
mov
dec
jp
les
pop
test
mov
not
add
cld
lds
loop
jb
lea
push
jmp
mov
shrb
mov
mov
aas
jns
xchg
clc
mov
rolb
shlb
adc
push
imul
lods
test
rolb
fmuls
inc
mov
lods
enter
inc
lret
add
rolb
addr16
inc
adc
ficomps
call
xor
jmp
das
bound
pop
jo
sub
pop
push
adc
or
xlat
rorl
rcr
stc
inc
xor
mov
dec
test
rclb
aaa
pop
push
shlb
pop
bound
lret
mov
rcl
mov
repnz
inc
push
shlb
fdivrl
add
mov
pop
data16
rcr
fcomp
popf
mov
imul
pop
lret
xor
test
aad
daa
or
bound
ret
mov
and
out
sar
outsb
xchg
aaa
fwait
jnp
and
je
popa
out
lock
xor
mov
outsl
pop
lock
push
into
mov
outsb
adc
not
andb
inc
in
rorb
mov
int
shlb
nop
mov
sarb
mov
or
shl
push
aaa
mov
ret
fcompl
and
pop
enter
mov
test
xor
popl
push
mov
rclb
jbe
adc
into
out
sbb
fmull
pop
into
sub
inc
cmpb
rclb
lods
mov
lret
icebp
adc
xchg
inc
pop
jmp
mov
outsb
ret
std
rcll
in
test
cs
in
popa
rorb
mov
mov
enter
inc
rcr
std
cmc
push
sbb
jb
popa
je
cmpsl
repz
rcll
sub
mov
xchg
into
imul
lret
insb
mov
inc
pop
dec
scas
lret
mov
mul
add
scas
nop
mov
xor
aas
and
repnz
test
pop
push
rcrb
test
sahf
les
rcrb
adc
call
push
ljmp
inc
xchg
les
insl
inc
sbb
movsl
add
shlb
add
add
pop
mov
mov
sarb
adc
rcrb
dec
rol
push
rol
push
andl
mov
ds
data16
loopne
mov
fsts
push
hlt
jns
sahf
mov
fwait
or
jno
xchg
pop
dec
lea
mov
arpl
push
leave
ja
or
shl
ss
mov
movl
test
rclb
cld
mov
jg
shrl
cmp
aam
ja
fneni(8087
cli
dec
call
icebp
lret
cmpsl
pop
adc
mov
test
jne
xlat
in
ds
dec
cld
rorb
sbbb
jo
rorb
je
xchg
enter
rolb
icebp
xchg
cmpsl
outsb
inc
lock
rolb
sahf
aaa
icebp
aad
cltd
rcl
jg
jp
ror
inc
push
xchg
dec
xor
ljmp
gs
into
hlt
push
loop
push
cmp
and
add
or
xorb
addr16
inc
mov
aas
aaa
xchg
cmc
mov
mov
rcrl
fsubrs
dec
fdivrl
push
bound
mov
cld
ds
in
mov
lret
repz
xchg
lahf
dec
call
shlb
rcrl
hlt
out
xchg
mov
arpl
dec
popf
mov
shrl
loopne
outsb
xchg
xor
rclb
repz
repnz
inc
data16
stos
sahf
neg
adc
adc
inc
xor
imul
dec
pop
lret
rorb
or
cltd
iret
out
es
fnsave
jl
lcall
data16
sub
jnp
lret
mov
jno
test
push
mov
xor
aaa
insb
cli
arpl
mov
sub
xor
in
jb
xor
mov
or
lahf
and
rorl
shrb
ret
movsb
mov
adc
mov
ret
rol
xlat
fldpi
test
ret
and
push
fmul
adc
test
dec
das
cmp
inc
inc
jo
or
shl
inc
daa
int
hlt
cld
jo
mov
shlb
test
mov
test
xchg
pop
push
or
inc
push
add
rorb
lds
scas
in
cmp
cmpsb
mov
mov
dec
in
fs
and
nop
sbb
lret
sbb
movb
repz
pop
rcrb
stc
mov
or
jle
mov
xchg
add
adc
mov
dec
leave
mov
leave
sbb
sti
lcall
mov
sub
ret
ds
ljmp
xchg
mov
ret
test
mov
xor
clc
imul
fidivs
iret
jbe
inc
cmc
adc
rcr
ror
insl
sti
and
inc
shr
cmpsl
leave
and
rcrb
nop
movsb
imul
sarb
sbb
test
cmp
mov
ss
daa
fsts
or
sbb
jns
stc
sbb
out
lret
rolb
movsl
lods
and
adc
lret
sbbl
lods
rcrb
inc
pop
inc
xchg
test
rolb
and
pop
je
lret
rclb
mov
add
scas
faddl
mov
jnp
xor
cs
call
stc
cmp
inc
cmc
icebp
lock
xor
and
and
rcrb
jno
test
or
mov
aas
cld
jecxz
aam
jns
adc
or
leave
jge
sub
mov
imul
xchg
pop
add
ret
push
push
xor
mov
dec
dec
inc
xchg
inc
ljmp
es
rorb
js
fisubs
les
dec
push
sub
loopne
xchg
or
cmpsb
rcll
ds
mov
hlt
push
pushf
mov
cmp
andl
sub
push
pop
cmp
je
dec
in
into
notb
insl
in
cmp
mov
adc
mov
mov
shr
scas
mov
shlb
popf
add
lock
inc
jle
sbb
push
inc
data16
rclb
adc
dec
out
stos
pop
mov
insl
cmpsb
dec
int3
pop
scas
ror
arpl
fildl
xor
mov
scas
sub
fsts
cld
jg
shlb
in
notl
lea
rcl
and
bound
lds
mov
add
insl
mov
mov
into
cld
lods
or
xchg
push
sbb
xor
adc
push
test
cmpsb
mov
shlb
movb
add
or
mov
add
rcrb
scas
loop
clc
pop
shlb
jle
nop
lret
dec
sbb
shlb
pop
mov
mov
ret
test
add
adcb
mov
sbb
push
iret
lods
mov
rcl
inc
push
in
jmp
loope
ret
cmpsb
fxch
jle
xchg
adc
xchg
out
rclb
std
fmuls
inc
je
inc
in
xchg
jge
jbe
adc
ror
cs
rclb
mov
clc
ret
mov
outsl
xor
outsb
data16
pushf
shlb
xchg
jl
add
push
dec
mov
test
bound
cmp
pop
test
cmpsb
push
into
pop
add
jecxz
pop
mov
shll
aad
pop
push
inc
add
fidivrs
shrb
dec
in
mov
popf
lods
into
div
rolb
mov
into
cld
cmp
mov
imul
sahf
hlt
jb
mov
and
mov
adc
or
mov
ret
mov
inc
scas
push
xchg
push
jg
test
adc
shlb
pop
push
aam
shl
out
inc
je
inc
in
rorb
nop
into
test
test
leave
jno
shr
js
or
mov
dec
inc
popf
dec
gs
xchg
xor
es
mov
test
leave
jne
lcall
shlb
inc
sbb
data16
jo
mov
adc
push
test
mov
shr
push
jge
cmpsl
test
or
mov
rolb
jae
mov
pop
sti
inc
mov
sub
mov
mov
sahf
shlb
xchg
jp
mov
adc
scas
dec
hlt
add
push
jo
shrb
les
in
aad
jns
add
pop
arpl
dec
xor
mov
shl
nop
mov
mov
add
jl
add
sarb
loopne
outsb
push
ret
mov
rolb
flds
adc
movsl
mov
rclb
xchg
lds
shlb
repnz
jl
mov
shrb
in
xchg
je
push
icebp
mov
loope
repz
int3
cmp
in
xor
arpl
pop
push
lock
xchg
das
rcrb
dec
scas
leave
loopne
mov
dec
push
fistpll
jnp
xor
out
xor
cmp
fcomps
mov
add
shlb
push
jbe
sub
sbb
popa
loopne
pop
or
popa
loope
add
pushf
pushf
cmp
int
orl
push
in
lret
gs
test
sarb
push
fwait
je
sbb
mov
mov
int3
mov
rol
popf
xchg
mov
std
or
stos
cld
daa
addr16
inc
or
inc
or
rolb
or
xchg
bound
dec
repz
aam
pop
sahf
rorb
jo
sti
push
loopne
adc
cltd
xchg
ja
popf
out
int
xchg
pop
xor
pop
jno
mov
cs
mov
adc
pop
jecxz
les
or
aas
dec
not
mov
jle
jge
popa
in
fldenv
jp
test
imul
repnz
adc
pop
jge
jns
loope
dec
shrb
lret
cmp
test
add
sarb
pop
xor
ficomps
out
enter
dec
or
shlb
scas
je
pushf
rorb
mov
mov
sub
shrb
aam
arpl
rclb
pop
mov
dec
pop
mov
ja
sub
add
aaa
xchg
out
or
into
jle
xor
shrb
cmc
adc
mov
les
inc
sbb
fs
imul
pusha
mov
shll
popf
or
bound
enter
pop
xchg
outsb
adc
fdivl
rolb
sbb
lods
in
cltd
push
addr16
jmp
std
shlb
clc
xor
rclb
push
out
cmpsb
lods
leavew
rcrb
xchg
dec
les
xchg
and
mov
xor
cmp
das
inc
mov
and
rol
loope
test
xorb
rorb
xchg
sahf
push
or
mov
loope
cmp
aaa
scas
aas
scas
dec
cld
mov
xchg
xchg
cmp
or
pop
shl
lock
mov
adc
lahf
int
mov
fidivrl
sub
stos
adc
lahf
or
ret
inc
or
dec
inc
add
push
adc
mov
fstpl
push
shll
sbbl
dec
in
add
jae
fbstp
fst
nop
out
ret
mov
shrb
loop
adc
inc
mov
inc
lods
dec
pushf
push
jp
lret
bound
aad
mov
add
mov
inc
dec
sub
cmc
mov
rcr
loop
fldl
or
xchg
into
dec
lock
inc
fcoms
mov
insl
push
sub
mov
fistpl
xchg
mov
rorb
pop
cs
ret
out
push
faddl
xor
pushf
int
jbe
rorb
lret
mov
nop
lahf
shlb
and
shll
dec
shl
popf
adc
daa
jns
loope
das
imul
inc
not
ret
je
cmp
lods
mov
xor
mov
adc
imul
dec
mov
adc
pop
es
lea
in
leave
cmc
cmp
rclb
adc
fisubrl
sbb
sarb
stos
jmp
mov
cmc
push
sahf
jne
imul
sbb
in
stos
sarl
out
lcall
out
cmp
mov
scas
cmp
lds
shlb
jae
add
rorb
dec
fdivl
nop
xchg
scas
inc
and
call
inc
fcoms
mov
into
popa
lcall
loope
push
cmp
cltd
daa
and
leave
mov
in
and
push
sbbb
repz
or
lahf
inc
idivl
repnz
xor
pop
jns
mov
mov
inc
push
mov
shr
jecxz
inc
leave
xor
jae
movsl
mov
push
mov
cmp
pop
dec
ret
scas
lcall
pop
lret
mov
fadd
shlb
push
and
out
rclb
test
pop
dec
cld
adc
cmp
push
aad
sub
sbb
adcl
sarb
xchg
jl
cmp
mov
ja
lret
loopne
mov
jmp
shlb
cmpsb
push
cmp
sti
push
imul
int
ret
test
push
mov
push
shlb
jp
push
fistl
stos
cs
push
loope
dec
lock
andb
or
jae
loop
ret
push
popf
jb
sbb
push
aaa
shlb
mov
or
icebp
ret
into
les
cli
pop
jo
mov
test
movsb
jle
mov
in
jns
daa
iret
pop
jbe
mov
jo
jae
mov
je
jns
inc
loope
add
fs
enter
leave
mov
cmp
stc
rclb
push
cmp
dec
shl
dec
repnz
or
rcll
mov
ss
mov
inc
div
jb
lret
pop
push
xor
std
in
sub
gs
dec
mov
and
inc
ret
push
or
mov
rolb
into
jne
jbe
dec
les
rcrb
mov
bound
sbb
or
xchg
subb
pop
rcl
into
jne
lret
ret
stos
pop
inc
jno
ret
nop
lret
ds
sub
loopne
or
in
jae
xchg
inc
jmp
or
popa
std
dec
mov
fisubrl
xchg
xor
out
je
push
dec
leave
mov
xchg
aad
xchg
test
jns
lret
lret
push
and
lods
mov
out
loope
jle
mov
sub
mov
push
mov
sub
roll
jne
mov
mov
ds
lret
xor
mov
out
inc
add
xor
bt
or
and
or
sub
mov
lret
push
and
lods
fmul
nop
cmp
sub
mov
mov
nop
xor
pop
push
adc
adcl
call
or
in
scas
jne
rep
jl
add
fs
stc
mov
aaa
inc
aam
pusha
jp
popf
dec
fwait
xlat
mov
sbb
cs
ret
push
mov
stos
shl
rclb
push
dec
sbb
inc
outsl
fcmovbe
inc
push
imul
loop
arpl
push
lret
lods
mov
and
inc
dec
out
pop
mov
cs
call
inc
fsts
sbb
iret
and
jge
mov
cltd
and
icebp
mov
jns
fimuls
push
add
ror
into
aam
rcrl
inc
jle
mov
xchg
ficomps
inc
dec
nop
jae
lods
nop
sbb
out
and
and
loope
clc
xor
fwait
insb
adc
inc
mov
jmp
add
out
aas
add
ffree
pop
xchg
adc
nop
rcrl
dec
pop
rcrl
out
jle
shlb
out
xchg
lret
cmpsb
xor
stc
pop
leave
sub
mov
nop
jne
dec
ljmp
popa
jae
pop
jge
add
cmp
insb
sar
jle
cmp
mov
in
fnstenv
mov
pop
push
sub
popf
jmp
jnp
inc
push
nop
pop
mov
mov
ffree
cmpsb
imul
pushf
stos
or
inc
sub
ds
testl
sar
or
mov
ljmp
repnz
sub
inc
into
loopne
ret
add
and
cmp
mov
xchg
bound
mov
push
shlb
xor
mov
dec
push
jp
ret
mov
sarl
or
sub
frstor
icebp
add
into
mov
je
sarl
rorl
push
xchg
fiadds
fyl2x
lods
jae
into
jmp
mov
cmpsl
and
adc
roll
incb
jns
jbe
pusha
ret
je
sbb
xchg
scas
rclb
inc
rcl
mov
ret
xor
and
pop
filds
fs
mov
xchg
bnd
jl
inc
into
rclb
inc
mov
xor
or
push
in
push
lret
imul
loop
int
int3
xchg
loope
arpl
adc
add
jmp
int3
push
push
dec
popf
mov
adcl
xchg
loop
or
ror
mov
sarb
lret
xchg
mov
jae
cli
ret
inc
jge
sbb
add
gs
inc
mov
xor
shll
mov
pushf
add
mov
inc
inc
leave
adc
leave
push
lret
xor
icebp
add
ret
mov
pop
ret
lcall
adcb
adc
mov
sbb
jae
pop
pushf
arpl
adc
mov
shll
test
in
sahf
inc
xchg
out
addl
sbb
int
adc
aas
loop
or
mov
mov
ret
inc
int
adc
cmp
add
les
enter
sbb
popa
jae
arpl
test
ror
adc
push
adc
inc
dec
clc
out
ret
jae
jbe
jne
mov
push
mov
dec
inc
jae
push
cmp
je
inc
push
je
lods
pop
mov
bnd
enter
xchg
rcll
ret
aas
mov
pushf
inc
cs
ret
push
dec
xor
cli
clc
mulb
inc
pop
sar
adc
repnz
loop
rcl
xchg
adc
pop
xor
and
xor
shl
add
aaa
lret
into
rorb
mov
icebp
mov
mov
ret
jae
xor
rolb
out
test
xchg
int
or
xchg
push
movsb
cmp
mov
lods
int3
push
mov
cmp
icebp
jae
arpl
push
mov
mov
shll
loopne
adc
or
rol
pop
add
into
dec
and
scas
adc
arpl
addb
lret
leave
xchg
shrl
adc
decl
push
shlb
mov
xor
lret
lret
inc
mov
pop
dec
subl
sahf
scas
jae
shl
ret
ss
mov
mov
into
xchg
sarb
sbb
test
ret
scas
jp
clc
outsl
hlt
ljmp
xchg
cmpsl
inc
push
adcl
xor
mov
in
out
add
loop
scas
stos
sbb
in
adc
nop
jae
jns
leave
lcall
sar
fdivr
lret
shlb
shlb
or
pushf
pusha
mov
jmp
mov
setle
jmp
cmp
aad
in
hlt
sti
add
jo
cmp
imul
insl
icebp
int
in
inc
test
and
fildll
mov
into
cmp
push
pop
shl
or
inc
pop
das
jl
stos
rclb
lds
push
mov
pushf
movl
push
mov
pushf
mov
mov
pushf
pushl
pushf
mov
pushl
ret
pushf
sar
mov
movzbw
pop
pushf
add
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
aad
or
movzbl
orb
rolb
jmp
repnz
sub
imul
push
add
mov
popa
stos
pop
scas
mov
fs
shlb
jl
push
xchg
cmc
das
cwtl
jecxz
sbb
je
sbb
cld
clc
std
mov
jnp
out
loopne
into
sbb
or
sbb
inc
negb
test
jne
pop
int
adc
stc
test
repz
dec
sub
jle
jecxz
lea
shufps
lahf
sub
mov
push
mov
or
je
pusha
pushl
push
adc
push
lea
jmp
test
pusha
push
push
lea
je
cmc
sub
call
lea
jne
sbb
shl
sar
mov
test
add
call
arpl
mov
sbb
push
insb
repnz
xchg
mov
fists
jl
addr16
adc
xchg
cmpsb
fsubrl
rclb
jnp
pop
sub
call
fwait
mov
in
mov
adc
repz
scas
jns
es
and
xchg
lock
push
ret
pop
cmpsb
fnsave
or
push
push
test
add
mov
mov
repnz
jmp
test
test
cmp
pushf
jmp
cld
adc
enter
xchg
mov
mov
pop
ja
xor
rcr
jl
mov
sbb
dec
repnz
js
outsb
inc
cmp
pop
push
ret
cmc
inc
dec
dec
outsb
fnstenv
outsb
jo
xor
mov
push
push
mov
sbb
data16
imul
aas
ss
pop
adc
into
xchg
adc
and
popa
ss
mov
jae
and
pop
enter
add
add
bound
into
adc
pop
mov
cwtl
loope
ror
xchg
inc
mov
int
jbe
add
mov
les
dec
jl
stc
jg
sub
xor
fnstenv
inc
rcr
jbe
es
pushf
outsb
xchg
mov
jmp
daa
test
jge
jno
sbb
mov
lret
shlb
scas
in
pop
mov
push
fcompl
bound
pop
and
or
cmpsb
mov
shll
cmp
cmp
jp
dec
xor
cmp
loopne
mov
lods
lock
call
add
dec
mov
icebp
in
sub
jg
jg
jb
mov
adc
jbe
in
rcrl
sbb
push
fwait
ljmp
add
mov
or
inc
xchg
cmp
loope
aam
mov
cltd
jp
sub
call
adc
aaa
push
inc
ret
cld
mov
mov
push
lods
inc
mov
xchg
dec
stos
add
es
and
mov
push
jno
movsl
mov
jne
test
jno
add
adc
xlat
out
sub
xor
mov
sub
out
mov
jl
movzwl
jmp
call
lea
ja
pushf
movw
bswap
not
mov
call
xchg
pushf
push
push
pushf
movl
pusha
jmp
movl
push
pushf
movl
push
pushf
lea
jmp
sub
movb
push
pushf
repnz
call
jmp
mov
pushf
movw
pushl
ret
call
mov
mov
pushf
lods
cmp
xor
movb
bt
ror
pushf
call
les
scas
cltd
xchg
aad
inc
inc
lea
or
pop
hlt
cmp
sbb
das
js
pop
cmpsb
insb
mov
lahf
push
sub
mov
in
sub
adc
xchg
mov
jmp
das
cmp
mov
call
push
add
add
lret
push
push
les
cmp
mov
cmp
call
outsl
or
xchg
fisubrs
and
mov
or
mov
lock
insl
inc
aaa
lods
mov
stos
jecxz
pop
xor
and
ss
xor
mov
xchg
jg
lahf
pop
dec
add
out
cwtl
xchg
aad
pop
jecxz
iret
ja
push
or
mov
or
xor
mov
or
jge
mov
lret
loope
and
pop
add
in
loop
and
push
xor
lahf
orl
jbe
pop
int3
adc
push
adc
pop
xor
adcb
push
cmp
lcall
popa
cltd
adc
push
push
sbb
out
and
pop
lods
dec
mov
and
movb
lea
jae
jp
bt
push
cmp
pusha
movw
pushf
jmp
mov
call
out
in
xchg
xchg
aad
pop
jg
lret
bnd
pusha
push
leave
mov
jge
push
pop
sti
lret
push
es
mov
cs
sti
inc
test
mov
hlt
out
inc
sbb
mov
imul
iret
push
pop
mov
or
or
mov
popa
cmp
arpl
mov
test
dec
cmp
or
jo
stc
call
ljmp
out
pop
mov
cmp
out
fimuls
inc
fsubrs
pop
fstps
add
mov
xor
push
lods
shlb
mov
aas
loop
push
lock
ss
add
inc
outsl
lret
mov
push
std
jns
imull
mov
cli
test
mov
jle
mov
xor
xor
or
inc
fcoms
cli
lods
into
or
push
xor
jmp
and
pop
aas
cmc
sub
cmpsl
jns
iret
rorb
call
bt
bt
stc
pusha
xor
jmp
movl
call
bt
push
movb
test
movb
lea
je
push
add
cmc
clc
pusha
test
cmp
push
jmp
pusha
movl
pushf
pusha
mov
push
movl
push
lea
jmp
add
add
adc
add
adc
add
adc
add
sbbb
dec
jo
add
pusha
adc
add
add
add
scas
inc
xchg
xchg
aad
arpl
xor
fwait
ret
lcall
rclb
adc
pushf
jb
xor
iret
mov
sub
pop
gs
mov
add
outsb
adc
sbb
mov
sbb
dec
xchg
mov
mov
loop
ljmp
adc
cmp
jae
pushf
arpl
push
fs
dec
jno
rorb
cltd
mov
xchg
xor
and
aaa
or
loope
outsb
fcmovnu
adc
xchg
dec
mov
pop
not
lea
bswap
mov
movw
call
pusha
pusha
lea
ja
rcl
sub
lea
bt
and
add
shl
mov
mov
mov
clc
repnz
jmp
clc
cmc
mov
bt
sub
call
xchg
enter
aad
sti
and
aam
mov
in
add
cmpsb
and
lods
mov
mov
out
push
push
mov
in
cmp
jb
sbb
in
enter
jns
repz
adc
jns
jge
or
repz
dec
mov
setno
out
pop
popf
xchg
pop
test
adc
leave
inc
in
mov
push
cli
outsl
dec
test
cmpsl
push
setno
jbe
mov
xorb
jnp
mov
push
pushl
shrl
xchg
xchg
aad
pusha
and
inc
fsubrp
movb
xchg
jbe
and
repnz
rcrl
dec
leave
addr16
cmc
push
jge
or
fbld
dec
cmova
xchg
dec
mov
mov
lds
pop
dec
adc
cmp
dec
adc
pop
int
cmp
enter
sbb
movsl
fwait
xchg
sbb
arpl
mov
jl
ljmp
pop
jl
adc
mov
add
imul
sub
pop
add
push
leave
pop
cld
nop
push
mov
mov
xor
aam
jmp
scas
repnz
sub
mov
call
lea
jb
pusha
cmp
push
jmp
not
bswap
mov
setnp
call
mov
pushl
pushl
ret
push
pop
xchg
xchg
aad
fwait
mov
bound
lods
ret
xor
adc
cwtl
aad
jg
ljmp
mov
jnp
popa
std
xor
and
xchg
test
mov
xchg
xchg
aaa
lret
lods
dec
sbbb
mov
pop
cmp
xor
xchg
xchg
aad
cld
inc
addr16
jne
and
icebp
fcoms
inc
mov
jl
movsl
add
lods
xchg
nop
xchg
aaa
test
ljmp
sub
cmp
push
mov
push
jmp
ss
das
ret
mov
stos
pop
push
aam
in
int3
fsub
cmp
sbb
sahf
inc
and
lds
sarl
sbb
mov
iret
test
js
loope
or
add
popf
testl
push
or
sysret
mov
inc
cli
xor
add
imul
jae
jmp
add
jmp
lea
jne
rcl
bt
shl
cmc
mov
test
stc
test
add
bt
movzwl
sar
mov
pusha
call
movl
pushf
lea
jmp
mov
shl
bsf
add
cmp
bsf
add
jne
shr
push
rcr
jmp
push
lds
xchg
aad
lcall
pop
jbe,pn
ficomps
insb
in
mov
loopne
leave
mov
mov
and
adc
push
xchg
call
mov
jg
push
subps
jb
mov
call
fs
je
dec
mov
test
movsbw
rcr
add
mov
mov
jmp
pop
pushf
pushf
jmp
setnp
mov
jmp
pushf
movl
pusha
movl
pushl
push
lea
jmp
jmp
call
movl
mov
push
jmp
mov
stos
seto
call
jmp
lea
jae
dec
sub
mov
not
bswap
dec
push
mov
test
movzbl
and
shl
mov
cmc
sub
bt
repnz
pushf
lea
jne
test
neg
mov
bswap
shld
sbb
shrd
sub
clc
call
rcl
btr
sub
push
movzbw
not
movsbw
mov
pushf
call
lahf
not
movb
bswap
pusha
bswap
lahf
mov
bswap
cwtl
push
lea
pushf
lea
jb
pusha
movl
mov
pusha
mov
mov
movb
pushl
ret
jmp
sbb
mov
call
inc
push
setg
mov
call
pushf
lea
ja
pushf
or
setns
sub
not
shr
shld
not
add
add
lea
neg
xor
shrd
mov
shl
mov
clc
bt
bt
call
lea
jne
je
mov
rcr
add
mov
shl
mov
pusha
pushf
cmc
call
pushf
movl
pusha
push
movl
pushl
push
lea
jmp
rol
mov
adc
inc
adc
dec
jl
enter
jb
sub
fsts
mov
addr16
cmpsl
jle
mov
stc
mov
int
adc
mov
xor
or
nop
xchg
inc
push
inc
dec
jmp
mov
in
inc
cmp
jge
fadds
fisttps
into
push
inc
inc
dec
xchg
loope
movsb
inc
aaa
add
loope
sbb
mov
ret
sub
loope
int
fiaddl
jge
push
rorl
inc
pushf
xchg
mov
xchg
add
push
shll
jno
mov
dec
sub
lock
cmp
int3
jbe
push
push
adcb
push
mov
mov
and
add
xor
push
push
pop
fwait
orl
or
mov
or
ret
dec
jge
sbb
adc
scas
fiaddl
movsl
jge
mov
xchg
pop
aas
mov
inc
push
ret
inc
popf
push
adc
js
sbb
insb
add
mov
mov
js
mov
ret
push
adc
inc
mov
roll
inc
jecxz
mov
notb
add
repz
int
jg
fmull
shrb
outsl
addr16
pop
lock
sub
cmpsb
pop
ret
push
shll
mov
push
insl
shrb
outsl
lods
jae
pushf
dec
lahf
repz
mov
call
xchg
push
xor
adc
mov
mov
mov
sbb
sbbb
xchg
dec
shr
inc
mov
dec
dec
popf
sbb
aas
iret
jl
xor
int
sbb
cmp
adc
mov
mov
lahf
cltd
test
dec
aad
pop
lea
push
sbb
or
hlt
dec
push
call
out
into
push
mov
outsb
out
rol
pop
jns
out
rol
repnz
mov
aad
bound
push
mov
scas
or
push
rolb
repz
leave
rclb
pop
fsubr
bound
push
jnp
sahf
test
mov
and
jns
push
inc
mov
rolb
add
sarl
nop
scas
outsb
jae
ror
add
xchg
fdivl
fwait
sbbb
les
adc
cs
jb
inc
int3
dec
std
popf
ds
mov
sahf
dec
pop
mov
mov
sub
pushf
ja
cmpsb
xchg
sarl
sub
into
push
inc
ret
or
xchg
inc
iret
cmpl
sub
xchg
or
xchg
ret
push
mov
repz
into
jecxz
dec
imul
or
inc
test
lret
nop
dec
push
movl
rorl
add
inc
jmp
inc
mov
roll
rol
inc
dec
cltd
inc
lea
mov
dec
mov
jo
ds
add
push
roll
cmp
inc
inc
mov
insb
pop
cmp
mov
push
inc
lret
rcll
rclb
mov
jecxz
mov
mov
nop
mov
mov
iret
cmp
mov
mov
into
orl
cmp
inc
dec
mov
add
lret
inc
rcrl
icebp
push
xor
adc
fadds
dec
int
or
outsb
push
test
mov
jle
jge
dec
pop
rol
into
fmulp
lret
lcall
cmp
xchg
scas
sub
mov
jle
jge
mov
push
dec
div
add
xchg
mov
add
cld
and
sar
sbb
inc
adc
sarl
int3
adc
int3
xor
push
dec
lods
pop
adc
adc
sub
push
je
and
cmp
ret
int3
cmpsb
cli
ret
dec
ds
xor
mov
and
cmp
mov
inc
stc
push
rolb
mov
add
mov
dec
rorl
mov
dec
sbb
ret
test
dec
loopne
nop
inc
dec
outsb
xchg
arpl
dec
xchg
movl
rcll
mov
adc
data16
rorl
push
inc
dec
inc
lret
cmp
add
push
les
repz
shlb
shl
jno
add
int3
inc
inc
dec
mov
or
andl
shlb
mov
lea
inc
inc
les
mov
jle
insb
test
mov
insb
mov
cmp
mov
mov
adc
rorl
aad
inc
dec
insb
or
push
or
push
rorl
cmp
sub
push
aad
mov
test
add
insb
dec
inc
popl
or
cmp
or
inc
lea
rcll
dec
addr16
inc
mov
mov
cmp
icebp
popf
or
les
inc
shrl
inc
rolb
inc
push
inc
lea
inc
leave
into
mov
or
inc
xchg
adc
dec
mov
ror
mov
sub
pushf
mov
loop
or
push
jle
nop
scas
add
dec
push
push
repnz
lret
out
xchg
mov
inc
rorb
mov
inc
rorl
dec
dec
ret
push
mov
pop
roll
jp
mov
rolb
mov
mov
mov
rolb
or
stc
push
xchg
ret
mov
ret
dec
shrb
dec
inc
dec
push
enter
shlb
std
push
mov
mov
xor
xor
push
ret
enter
dec
lahf
mov
inc
popf
lret
push
into
push
or
sahf
and
sub
push
enter
pop
mov
push
enter
rolb
pop
cs
dec
push
vrsqrtps
push
or
std
push
mov
or
loope
add
push
mov
or
push
mov
pop
mov
mov
leave
dec
jmp
sbbb
or
mov
push
mov
test
adc
outsb
jo
cmp
push
push
xchg
sahf
roll
test
rorl
inc
scas
mov
mov
mov
xchg
dec
mov
mov
jmp
je
arpl
mov
add
xchg
outsb
push
mov
pop
add
mov
mov
inc
add
xchg
leave
adcb
test
int3
shlb
inc
cmp
std
push
mov
test
test
lret
sqrtps
rolb
clc
mov
cs
push
cmp
jo
pop
iret
rclb
xor
enter
insb
pop
rclb
mov
xchg
dec
bound
mov
sahf
dec
pop
mov
cltd
pop
cmp
mov
nop
xchg
dec
push
dec
and
shl
mov
mov
lods
mov
mov
push
inc
push
push
xchg
iret
add
lods
and
add
adc
repnz
adc
loop
or
insl
xchg
mov
cli
out
mov
fmulp
push
cli
daa
popa
inc
xchg
fwait
into
fisubs
fcmove
mov
loopne
or
xchg
lea
test
mov
dec
enter
or
int3
or
xchg
inc
int3
pop
mov
inc
or
int3
out
or
dec
mov
inc
test
lods
dec
int3
sbb
pop
aaa
or
pop
nop
scas
loopne
add
cs
xchg
dec
fildl
in
pop
ret
scas
lds
cli
vmwrite
loopne
push
dec
dec
into
insb
add
jmp
xchg
xchg
stos
and
inc
mov
sub
les
rorb
cmp
pushf
adc
lods
loop
mov
push
jle
mov
nop
scas
cmp
cmpsb
inc
inc
int
bnd
add
xchg
xor
xchg
mov
xchg
leave
std
rclb
push
test
mov
adc
xchg
dec
enter
rorb
add
or
fucom
sbb
sub
jle
jmp
gs
xor
mov
cltd
or
enter
inc
inc
xchg
mov
push
lea
into
push
sub
adc
enter
mov
sub
sub
lret
adc
orl
cmovl
adc
nop
rcrl
std
fisttps
loope
bound
hlt
inc
in
cmpsb
jecxz
mov
outsb
iret
repz
dec
lcall
adc
adc
popa
ffree
mov
les
les
pop
les
cmp
pop
cmpb
pop
iret
push
push
cmp
sub
sbb
xchg
mov
mov
out
icebp
cs
icebp
jno
jg
sub
aas
stos
das
shll
lcall
movsl
lods
or
jecxz
adc
push
fwait
adc
sbb
scas
out
rorl
mov
push
inc
test
cwtl
cli
idivb
enter
test
push
inc
cltd
mov
shlb
and
mov
les
setb
cltd
cmp
out
outsb
leave
jg
test
or
outsb
cmp
mov
insb
cmp
xor
into
xchg
rdmsr
dec
iret
lahf
lahf
mov
andl
push
in
mov
dec
std
jl
aas
test
push
dec
add
inc
ds
cwtl
lea
dec
scas
or
mov
cmpsb
push
mov
xor
dec
cmpsb
into
jecxz
dec
inc
lea
iret
mov
inc
out
cmp
dec
lea
mov
sub
push
mov
dec
mov
icebp
mov
pop
bound
mov
insb
into
call
pop
lea
lods
xchg
sahf
jp
cmp
mov
and
lea
mov
adc
into
cmp
test
ds
rcll
pop
fists
pop
cmpsb
mov
lahf
shlb
jo
mov
or
pop
xchg
outsb
fcoml
mov
addb
cmp
mov
inc
out
ss
sahf
mov
cmp
in
push
pop
stos
xchg
mov
dec
pop
popf
xor
inc
inc
jl
divl
jle
insb
or
pop
orl
xor
jl
sbbl
jg
out
cmp
inc
mov
jmp
cmp
xchg
mov
mov
push
es
pop
enter
jle
por
push
insl
scas
mov
xchg
mov
mov
mov
xchg
enter
push
lret
mov
rorl
xchg
push
rcr
sti
mov
pop
in
sub
or
or
push
push
leave
outsb
mov
call
adc
or
cmp
lds
inc
cs
inc
xor
lea
jle
scas
dec
push
insb
xchg
mov
ds
sbb
dec
push
adc
in
sbb
shrl
adc
or
lahf
mov
push
rcrb
jns
pop
add
int3
les
jmp
fcomps
mov
mov
lods
fstl
fcomps
mov
fmul
and
pop
and
shl
mov
pushf
shl
movb
das
insl
pop
jg
mov
das
mov
inc
push
and
jecxz
and
out
insb
mov
push
inc
push
or
leave
imul
je
ds
pop
mov
pop
dec
orl
pop
mov
add
mov
pop
pop
ds
pop
fstpl
lcall
xchg
lahf
push
fstpt
sti
mov
mov
adc
aas
sarb
sarb
lret
in
adc
push
mov
ret
stos
mov
mov
adc
mov
push
cmpsl
iret
xchg
mov
mov
mov
dec
ss
and
mov
arpl
mov
or
and
dec
shll
sbb
cmp
ret
push
push
inc
jmp
pop
cmpsl
leave
gs
test
leave
xchg
adc
ds
adc
inc
lds
in
sbb
mov
inc
out
sub
adc
push
mov
dec
or
nop
dec
dec
or
iret
mov
iret
dec
lods
andb
jae
or
or
adc
adc
jge
adc
repnz
inc
and
iret
lahf
iret
outsb
jno
rcll
jno
int
rorl
mov
mov
push
xchg
or
lea
dec
stos
jecxz
jno
push
or
push
shlb
sbb
outsl
adc
mov
dec
mov
lret
pop
leave
ljmp
ret
adc
into
lods
push
mov
popf
aam
ret
jg
lret
lods
stos
sub
out
mov
jne
ficompl
ret
pop
mov
dec
loop
sub
jmp
push
je
mov
mov
xor
dec
mov
das
insb
shrb
mov
dec
repz
or
fdivr
lods
jno
mov
movsb
sbb
imul
push
or
das
lret
dec
or
add
daa
js
mov
sbb
jae
outsl
scas
dec
xchg
inc
or
mov
cmp
movsl
mov
shr
dec
adc
iret
jecxz
inc
cmpsl
dec
jecxz
xchg
push
test
inc
ret
mov
xchg
push
inc
xchg
add
cmp
scas
xchg
jnp
leave
icebp
jp
dec
aad
dec
push
out
in
arpl
dec
iret
sbb
test
mov
test
loopne
lea
test
movsb
push
jb
pop
inc
dec
decl
cmpsl
mov
mov
loope
xchg
mov
mov
leave
into
test
jb
jns
jge
fwait
jo
xor
shlb
lock
jg
lret
jle
dec
scas
or
leave
and
cld
dec
imul
pop
jp
mov
lea
movsl
ret
nop
lret
rcll
mov
cmp
sub
lret
lods
dec
sbb
lock
les
mov
sbb
jns
rcl
mov
sbb
out
into
lret
jo
jl
pop
dec
dec
fcmovb
fisttpll
aas
ds
xor
dec
mov
xchg
lret
xchg
adc
mov
in
push
jg
or
in
xlat
popf
je
adc
into
mov
xor
leave
dec
pop
leave
or
lea
int3
add
mov
cmpsb
sub
jmp
and
jecxz
js
xchg
dec
cmp
lock
push
movsl
test
frstor
adc
imul
cmp
mov
adc
ret
cmp
pop
mov
mov
rclb
sub
or
mov
test
cmp
repz
mov
adc
push
dec
lods
mov
cmp
pop
mov
sub
cli
mov
push
subl
dec
or
shlb
int
mov
addb
gs
dec
sbb
or
repnz
leave
ss
imul
dec
shll
out
sbb
inc
into
scas
pushf
rorb
test
inc
aas
push
push
out
jmp
lea
mov
add
push
mov
xchg
mov
in
leave
outsb
mov
mov
nop
inc
xchg
ljmp
inc
adc
loopne
leave
insl
scas
sub
inc
inc
and
insl
dec
xor
lahf
mov
push
not
lods
or
repz
mov
fstps
lcall
leave
enter
pop
mov
ret
mov
mov
in
es
int3
int3
xor
dec
mov
int
or
inc
push
mov
add
mov
shll
cs
lcall
popf
les
sbb
push
mov
inc
dec
popf
mov
test
lret
xchg
inc
jne
jle
cli
iret
iret
lcall
xor
lahf
push
scas
jmp
jecxz
cmp
in
or
adc
pop
les
roll
adc
dec
pushl
xor
repz
xor
xsaveopt
cmp
mov
add
lods
inc
vpmulhw
and
push
js
inc
dec
andb
adc
loopne
pop
cs
movsl
fsubrs
inc
vhaddps
inc
push
jae
push
fcompl
mov
and
add
mov
push
fucom
std
mov
push
sbb
dec
sub
push
outsb
jg
stos
insb
xor
fcompl
repnz
lret
cmovs
mov
or
sbb
imul
scas
xchg
xchg
in
lds
faddl
cmp
insb
adc
push
flds
retw
fdivl
mov
rol
jb
lret
or
xchg
jp
dec
sahf
fistps
in
jb
orb
imul
mov
cltd
xchg
das
repz
test
push
lahf
es
mov
add
mov
stos
mov
or
inc
iret
iret
push
xor
adc
mov
shl
sub
lea
ds
dec
inc
inc
leave
xor
add
jp
cmp
sub
or
or
lock
fisttpll
dec
add
iret
in
in
xor
scas
nop
icebp
stos
cmp
into
into
rclb
cmp
popf
jb
mov
imul
outsl
jns
adc
repz
in
repnz
test
sbb
lods
je
pushl
mov
pop
mov
push
sti
pop
push
imul
ljmp
sti
jnp
ja
and
push
cmp
sbbb
add
sub
mov
mov
push
insl
movsb
in
inc
cmp
and
xor
loopne
push
push
popa
dec
xchg
dec
rorl
mov
movsl
rcl
dec
adc
jge
shll
ljmp
mov
sarb
xorl
dec
dec
ret
rclb
rclb
scas
or
int
cltd
mov
push
adc
inc
push
lds
push
rcll
fbstp
cld
je
or
cld
inc
push
adc
adc
inc
lcall
xchg
adc
into
xchg
xchg
mov
test
or
or
push
lea
nop
stc
lock
jae
push
mov
jbe
fwait
xor
mov
or
push
adc
inc
into
xchg
or
mov
insb
push
inc
inc
mov
push
pop
push
or
mov
inc
icebp
leave
inc
dec
dec
push
push
push
or
inc
popf
dec
test
mov
inc
push
mov
push
mov
push
mov
int3
mov
sub
push
mov
add
leave
int3
flds
mov
cltd
mov
mov
lret
mov
mov
enter
dec
dec
xor
ror
movsb
test
mov
mov
inc
or
push
mov
cmp
mov
push
jl
cmp
mov
mov
test
dec
xor
test
push
movl
popf
xchg
or
roll
inc
mov
out
lds
mov
arpl
aas
cmc
ss
int3
mov
pop
lret
mov
movsl
cmp
test
or
add
sarl
mov
add
and
sbb
into
xor
jno
cmpsl
mov
cmp
rcll
insl
sbb
movsl
inc
fwait
into
in
or
gs
bound
dec
adc
lahf
shl
jmp
push
in
mov
dec
push
mov
xchg
dec
cmp
cmp
repz
dec
je
leave
mov
dec
outsl
adc
movsb
xchg
cmp
push
sub
and
andl
std
add
mov
or
rclb
xor
or
aaa
cmp
inc
dec
push
jo
int
movsl
in
mov
inc
mov
mov
or
xchg
mov
rcrb
dec
int
dec
xor
ret
push
push
push
rcll
insl
int3
mov
pop
push
test
add
les
in
jnp
loopne
xor
lds
sahf
inc
cs
push
dec
movsl
es
test
xchg
sti
dec
shrl
inc
cmp
dec
dec
push
sub
lea
inc
in
iret
gs
cmp
mov
and
push
lods
xchg
mov
shll
ret
xorb
pop
push
adc
pop
adc
add
mov
pop
add
jmp
inc
mov
rcrl
stos
push
jmp
les
xchg
ror
mov
inc
mov
add
lret
xchg
fmul
das
stc
adc
and
std
pushf
rcl
stos
rcrl
inc
subl
shl
adc
cmp
int
lret
pop
loopne
dec
out
mov
jmp
cwtl
pop
mov
mov
ret
pop
lret
jmp
xor
dec
xchg
push
dec
fcomip
movsb
sub
lret
sbbb
fisubrs
lret
add
roll
lahf
or
or
pop
lret
sti
fisubs
ror
mov
sarl
ljmp
bound
mov
push
cwtl
ficomps
icebp
pop
je
inc
cltd
cmp
pop
lcall
adc
fidivs
dec
xor
lret
sti
mov
lret
mov
ror
mov
adcl
insl
rclb
jmp
pop
sti
mov
jmp
or
shlb
push
hlt
or
lcall
repnz
mov
jbe
jle
fs
les
mov
jmp
sbb
lret
jp
dec
or
dec
or
dec
lret
adc
subl
dec
lahf
icebp
mov
inc
cmpb
addr16
enter
cs
mov
cmpsl
jle
fdiv
adc
cmpsb
fdivrs
cltd
lcall
xor
fiadds
subb
outsl
icebp
cltd
sbb
ret
or
ja
popf
stos
mov
adc
mov
stos
xchg
into
outsl
mov
mov
addb
es
int
icebp
fisubl
inc
lcall
in
sub
icebp
pushf
arpl
push
push
xchg
mov
cmp
mov
aaa
movsb
push
sbb
aas
pop
enter
popf
enter
fdivrs
shl
dec
mov
jmp
stc
pushf
mov
sahf
leave
mov
enter
sub
pop
stos
xor
imul
dec
stc
rcrb
test
cmpsb
and
lahf
dec
cmp
js
lss
cmc
addb
mov
inc
dec
cltd
xchg
jb
rorb
mov
sti
leave
inc
mov
xor
dec
mov
mov
into
sbb
lahf
loopne
std
push
call
outsl
dec
inc
xor
inc
push
jmp
js
jg
addl
nop
and
sub
inc
mov
push
adc
scas
cwtl
add
int
test
inc
sbb
or
push
or
lods
jecxz
xor
lcall
push
fsubrs
mov
test
nop
mov
mov
loope
jo
fdivr
lods
loopne
scas
mov
pop
rclb
jns
in
push
cmpsl
sub
outsl
sbbb
cmpsb
push
adc
movsb
mov
icebp
subl
shlb
js
mov
rolb
fnstcw
mov
fdivrl
mov
mov
fincstp
cmc
sub
leave
pop
sub
cltd
inc
dec
adc
adc
mov
les
xchg
jmp
cmpsb
and
xchg
cmp
mov
sti
xor
mov
xor
sahf
pop
xor
sbb
hlt
sub
and
mov
nop
es
stos
int
and
inc
xchg
mov
cmp
mov
xchg
cmpsb
jb
mov
sti
ja
adc
imul
stos
inc
test
inc
fcompl
jnp
cmpsb
jmp
cmp
add
fwait
inc
mov
mov
dec
or
mov
push
jno
rcrl
aas
mov
push
pop
dec
mov
or
xchg
sbb
mov
pop
in
mov
adc
nop
inc
xchg
bound
mov
and
jecxz
cmp
push
outsl
cmpsb
xchg
add
ret
add
roll
sub
aaa
cs
sub
nop
insl
in
pop
sbbb
sbb
mov
mov
sbb
mov
fwait
mov
pop
add
xorb
shl
pop
sub
sbb
lock
inc
rcrb
inc
imul
and
sbb
pop
pop
loopne
jnp
ficomps
data16
movq
jmp
sbb
pop
imul
inc
fiadds
js
cmpsl
or
cmpsb
scas
push
add
fidivrs
icebp
enter
and
xchg
jns
push
lods
add
outsb
pop
jno
xchg
cmc
and
sub
lea
xchg
fs
stc
movsb
pop
xor
lret
mov
sub
jmp
and
pop
jle
lahf
fsub
cmp
arpl
fmulp
inc
xchg
call
es
add
jbe
shl
adc
pop
mov
push
pop
mov
and
cmp
mov
mov
mov
sbb
jno
int3
push
push
adc
ss
test
es
add
bound
mov
sbb
pop
jle
mov
add
push
cmp
mov
stos
imulb
and
sbb
shrl
arpl
cmpsb
in
fidivrs
inc
adc
jecxz
adc
int
inc
sbb
xor
cmpsl
rorb
cmpb
test
cmp
dec
enter
sbb
sub
ficoms
sbb
and
or
adc
cltd
push
jmp
sbb
fmuls
shlb
mov
lcall
sbb
adc
sbb
mov
cmp
out
movsl
loope
mov
cmovle
fisubrs
dec
adc
cmp
fstps
lods
cwtl
icebp
roll
cmp
pop
mov
sbb
pop
sarb
dec
add
mov
cli
clc
sbb
add
call
lret
and
aad
jp
jb
jl
dec
lds
inc
inc
orl
sti
sbb
shlb
pop
sub
cmpb
jmp
xchg
pusha
out
adc
es
aad
aaa
movsl
push
stc
ret
pop
ret
pop
jecxz
addl
cmpsb
cmp
mov
cltd
pop
mov
add
jmp
mov
adc
mov
pop
icebp
cld
dec
xor
sbb
in
cmpsl
inc
ret
clc
mov
test
inc
in
and
sbb
jo
outsb
jo
sbb
push
sbb
rorl
daa
pop
in
sbb
jmp
stc
sbb
fdivr
mov
xor
or
push
idivl
cwtl
sbb
mov
inc
movq
cmp
clc
in
fs
popa
cmp
sarb
xor
mov
negl
push
adc
scas
mov
xchg
jl
cmp
push
inc
sbb
das
inc
mov
incl
icebp
push
mov
int
fwait
adcl
jb
mov
jecxz
icebp
jns
xchg
or
mov
sbb
inc
mov
cmp
movsb
call
shrl
mov
xchg
mov
inc
insb
cmp
xorb
mov
lret
xor
xor
sbb
sub
pusha
and
pushf
subl
sbb
and
lods
mov
jns
movl
inc
jb
inc
sbb
jp
inc
xchg
xor
insb
push
fldt
popa
jg
in
mov
test
les
cltd
sub
push
jns
pop
fdivrs
jle
xchg
js
cltd
leave
ret
add
pop
aas
scas
mov
sbb
sbb
pop
jmp
jl
cmp
jle
pop
sbb
iret
sub
sti
sar
and
mov
shrl
jns
jo
cwtl
lret
js
decl
mov
pop
jno
sbb
ds
cmp
mov
stos
jb
xchg
add
mov
or
ror
pop
inc
add
inc
bound
inc
mov
pop
jmp
imul
aaa
and
out
jmp
call
add
add
dec
fwait
or
fstl
aas
mov
rcl
dec
mov
mov
pop
and
cmp
mov
std
pushf
cmpsb
xchg
add
mov
pop
lods
cmp
inc
aaa
stos
adc
or
loope
fcmovne
pop
stos
inc
mov
aam
push
sbb
jmp
sbb
mov
std
test
mov
jno
stos
mulb
sarb
sbb
xchg
xor
stos
in
enter
insl
stos
xchg
lret
adc
clc
jmp
sub
fdivp
mov
ljmp
cmpsb
adc
roll
push
push
fcoms
or
sub
jo
push
pusha
mov
stc
cmp
cwtl
movsl
js
into
jae
sbb
in
push
popf
sahf
rcr
and
inc
and
pop
mov
loop
pop
push
or
mov
leave
pop
jb
sbb
jbe
sbb
jns
mov
les
test
gs
push
addb
pop
lahf
imulb
jmp
dec
lahf
sbb
fmuls
jp
sbb
mov
push
imul
jmp
or
in
stos
mov
jmp
rcr
adc
or
inc
cltd
incw
mov
push
popf
test
mov
xchg
xor
mov
out
xchg
add
cs
arpl
aam
pop
push
popf
inc
out
in
or
lret
add
jecxz
fsubl
inc
and
ret
sarb
sub
sbb
in
xor
dec
scas
mov
or
in
mov
cli
iret
icebp
out
fbld
mov
inc
sbb
subl
mov
dec
cmp
mov
jnp
mov
lock
out
fimuls
mov
jae
mov
addb
insl
mov
mov
pusha
push
inc
xchg
pop
mov
in
mov
push
sub
cmp
fcoms
shl
ljmp
and
fiadds
mov
test
enter
sarb
cwtl
and
jp
cmpsb
jnp
mov
loop
jl
xchg
repnz
mov
cld
stos
xchg
mov
and
jno
jecxz
lret
dec
and
and
push
pop
dec
xor
aad
mov
ficomps
lahf
cmc
aaa
gs
decl
sbb
icebp
mov
fidivs
shll
mov
pop
mov
shll
xor
cmp
lret
pop
xor
dec
fdivp
out
fld
xchg
icebp
out
push
xchg
roll
adc
inc
pop
jecxz
in
test
loop
jb
flds
mov
lcall
push
fidivs
and
shll
aaa
pop
loopne
lcall
cmpsb
btc
mov
push
lock
mov
loop
push
mov
loop
push
dec
mov
bound
rclb
rcll
roll
bound
iret
pop
es
out
sbb
dec
inc
xor
out
inc
fsts
mov
pop
xchg
push
lcall
push
inc
xchg
cltd
or
mov
mov
lret
mov
push
lret
sub
push
inc
rol
loop
xchg
mov
mov
rclb
sub
subl
mov
lods
inc
loopne
rol
cmpsb
jmp
xchg
arpl
fstpt
inc
loop
rorb
xor
dec
lods
mov
adc
push
lret
mov
xchg
xor
push
les
push
out
js
mov
aad
in
jmp
rorl
ror
rorl
das
push
inc
mov
mov
jecxz
nop
rcrb
mov
mov
lret
fiadds
divl
fiadds
rcrl
lods
inc
fldenv
jbe
ja
dec
push
inc
loope
out
stos
shr
loopne
fildll
pop
rol
fldcw
xor
shll
pop
loope
enter
bound
jns
push
rcl
mov
push
pop
ror
add
lock
push
nop
mov
pop
jle
jo
xorl
repnz
sbb
lods
mov
push
les
les
rclb
ret
pop
daa
inc
mov
bound
inc
loop
test
inc
lret
rcr
inc
data16
loop
mov
mov
loopne
lcall
shrb
test
andb
pusha
jge
subb
ret
dec
pop
inc
xchg
fidivs
jmp
fldpi
xor
shll
and
notl
mov
ret
adc
rcr
mov
jge
xor
push
leave
mov
shlb
mov
iret
lods
add
push
jecxz
int
mov
loope
inc
jmp
and
les
mulb
loope
xor
decb
shll
push
loop
mov
jb
jo
shrl
and
scas
lret
vcvttss2si
inc
lods
jb
push
daa
pop
pop
sarl
popf
jmp
inc
loope
enter
subb
fdivp
out
pop
les
leave
xchg
fcmovb
ret
cmc
std
or
push
cltd
lret
movsl
out
push
mov
xchg
js
in
or
push
mov
data16
rcl
xchg
adc
ss
add
test
adc
cltd
dec
loopne
jne
sub
push
inc
jmp
push
push
shll
push
rclb
adc
lock
jne
cmp
adc
pusha
into
and
push
jecxz
or
das
or
rcll
or
lret
and
push
nop
xor
pusha
mov
loopne
cmp
xor
pop
stc
xchg
test
inc
into
xchg
xchg
sahf
mov
inc
dec
jne
mov
jo
mov
xchg
lret
jne
dec
push
rol
imul
shll
dec
ret
inc
mov
push
xchg
inc
in
inc
xor
fcompl
scas
addl
gs
dec
push
mov
rorl
push
out
or
push
xor
fsubrl
push
or
andb
push
rorl
les
icebp
and
movsl
mov
aam
mov
inc
or
push
lret
push
es
fwait
push
add
std
mov
push
popa
add
inc
in
inc
xor
sbb
fs
test
push
daa
lds
rolb
cmp
mov
aaa
mov
mov
jecxz
xchg
mov
jmp
mov
xchg
jo
sahf
popf
arpl
mov
adc
pop
into
cmp
into
push
xchg
mov
xchg
mov
jmp
inc
xchg
mov
mov
mov
cmovb
shrb
nop
jb
push
xchg
add
push
adc
inc
sub
outsb
mov
xchg
sub
outsb
push
sub
adc
pop
pop
xchg
test
push
dec
push
dec
orl
adc
rorl
dec
push
adc
ljmp
xor
dec
push
mov
xchg
popf
adc
push
lds
shrl
in
mov
pop
rclb
clc
mov
pop
mov
adc
lret
pop
or
rep
icebp
test
mov
mov
les
movb
into
test
sub
inc
xchg
inc
fsubl
shlb
lock
and
fxch
adc
fistpl
xor
icebp
or
mov
iret
mov
mov
pop
mov
into
mov
cs
cld
in
fdivrl
ja
and
sbbb
cmp
sbb
and
scas
insl
jp
mov
rorb
outsb
dec
rep
mov
push
adc
js
cmpsb
push
inc
xchg
loopne
or
xor
sbb
out
dec
mov
inc
pop
iret
dec
sarl
pushaw
scas
push
insl
sahf
popa
push
mov
jmp
inc
mov
jo
call
into
or
shrl
rclb
inc
fnsave
xor
cs
cld
mov
push
dec
add
iret
pop
call
dec
ljmp
stos
or
adc
leave
fs
push
inc
rcl
mov
nop
xor
inc
sbb
pusha
popa
rolb
aaa
push
filds
xor
lret
jb
into
add
loope
mov
mov
xchg
andl
lret
adc
sub
shlb
ss
push
out
cs
inc
mov
xchg
rcr
push
inc
loope
pop
lret
imul
out
xchg
push
loopne
dec
mov
xchg
fdiv
cld
aad
push
loop
fs
push
inc
jg
inc
lds
call
mov
aam
sub
adc
inc
jb
fsubs
icebp
xchg
xchg
pop
ret
dec
roll
or
and
int
shr
in
adc
mov
roll
pop
xchg
bound
hlt
imul
add
xchg
pop
adc
push
xchg
push
test
xchg
mov
xchg
xchg
inc
or
in
mov
mov
shll
test
jo
scas
test
mov
insb
in
mov
lods
or
sbb
xchg
inc
mov
push
xchg
mov
fildll
in
aam
inc
xchg
mov
add
adc
cmpsb
xor
in
or
inc
rol
mov
dec
or
inc
inc
xor
ja
rcl
cmpsl
lock
je
scas
lret
mov
pushf
enter
mov
lds
xchg
or
jb
negl
dec
mov
mov
loope
rorl
mov
push
and
orl
push
int3
mov
ret
test
xlat
inc
lock
or
add
sbbl
push
add
loope
xchg
xchg
dec
xor
mov
xlat
xchg
inc
inc
je
mov
outsl
cmp
mov
sub
jl
mov
xor
jl
filds
jmp
ds
xchg
inc
out
mov
dec
lret
push
sarl
xchg
lea
movsl
mov
cmp
mov
test
or
inc
cld
or
not
and
or
cmp
lock
or
dec
roll
into
lea
cltd
adc
dec
orl
mull
xchg
shrl
ret
rolb
adc
insl
inc
add
adc
or
push
movsb
and
popa
insl
push
jno
mov
mov
imul
and
icebp
or
adc
inc
inc
inc
mov
mov
pusha
mov
mov
inc
fcoms
dec
inc
loop
aad
mov
aam
mov
rolb
rclb
not
mov
dec
int3
imul
sbbb
fwait
ds
adc
mov
inc
and
repnz
outsl
lea
insl
jne
dec
jmp
popa
inc
mov
dec
ret
arpl
push
mov
dec
sar
mov
rcrb
lock
fimull
mov
mov
arpl
orl
sub
cmpsl
dec
pop
xchg
push
mov
push
lds
daa
bound
mov
roll
dec
add
test
pop
lcall
inc
xchg
lds
xchg
and
mov
imul
enter
mov
adc
idivb
adc
or
mov
push
loope
pop
add
xchg
in
cmc
jnp
dec
pop
dec
gs
shr
ret
mov
shrl
gs
out
sub
adc
dec
clc
loope
test
pop
sbb
jl
scas
push
pusha
in
out
rol
pop
adc
adc
into
std
shlb
xchg
in
pop
ret
cli
lds
enter
adc
xor
xchg
mov
lods
pop
aam
push
lock
mov
adc
mov
rorb
push
sahf
xchg
mov
push
xchg
mov
movsb
push
xor
pop
or
pop
adc
call
clc
nop
push
mov
lret
out
int
les
mov
fcoms
inc
insl
dec
or
lock
mov
andl
mov
ljmp
inc
push
push
int
or
pop
mov
sub
add
xor
dec
push
xor
jne
xchg
mov
nop
dec
idiv
xchg
test
dec
dec
push
dec
xchg
sub
adc
ret
mov
adc
or
xchg
sub
push
std
insl
xchg
or
dec
cmp
xchg
into
or
dec
cs
mov
inc
push
fstp
cmpsb
into
mov
push
repnz
and
jbe
mov
leave
and
test
push
mov
cmpsb
push
push
iret
inc
push
cmpl
push
dec
jbe
test
and
sub
int3
adc
in
sarb
mov
sub
push
dec
mov
adc
mov
adc
cmp
pushf
sub
dec
ret
pusha
adc
adc
leave
and
mov
lea
dec
or
mov
mov
lcall
mov
mov
rclb
push
jne
mov
mov
jle
mov
lods
mov
add
les
test
mov
rolb
ror
xorb
nop
cmpsl
int
aam
jnp
xchg
add
pop
shll
mov
lcall
xor
roll
adc
add
xor
cmpsb
xchg
jnp
int3
inc
mov
mov
add
fistpll
inc
pop
jne
xchg
stos
mov
test
or
stos
or
dec
xchg
fdivrs
or
dec
lret
mov
push
sub
nop
hlt
mov
ja
mov
push
dec
adc
jp
orl
leave
cmpsl
mov
jnp
int3
adc
aam
cmp
adc
sbb
xchg
rol
test
push
and
cli
dec
cwtl
sti
mov
adc
or
sub
movswl
sub
pop
xchg
push
xchg
mov
mov
in
lret
xor
dec
push
jle
je
mov
iret
gs
lret
push
adc
shlb
push
mov
data16
jns
sub
test
add
ss
nop
iret
add
mov
popa
leave
nop
xor
mov
push
push
nop
adc
jne
ret
mov
jmp
or
fldt
int3
xchg
mov
jbe
dec
lds
mov
fdivl
mov
in
xor
in
into
cmc
jb
push
push
push
sti
cmpsb
mov
dec
in
roll
lret
push
cmp
push
hlt
push
jle
inc
sbb
iret
es
pop
jmp
push
test
adcb
adc
dec
inc
inc
je
rolb
dec
gs
stos
int3
xor
jp
xchg
mov
in
inc
push
jmp
mov
pop
aad
loopne
mov
mov
int
xor
or
mov
movsl
mov
and
xchg
cmp
mov
dec
push
out
mov
loopne
sub
lret
adc
push
test
cmp
int3
cmp
movsb
inc
push
bound
jne
sub
hlt
scas
add
nop
movsl
ret
aam
mov
es
dec
xchg
ds
dec
jo
push
inc
push
xor
int
lds
pusha
or
xchg
popf
out
or
or
lods
dec
ds
xchg
sahf
or
sarl
jno
movsb
adc
repz
add
xchg
icebp
inc
pushf
adc
rcll
cmpsl
push
lea
pop
cmp
bound
mov
xchg
mov
inc
or
dec
cmpsl
sub
punpcklwd
orb
xchg
pop
xchg
repnz
push
cmp
mov
mov
add
xchg
inc
lss
dec
orb
dec
inc
das
std
les
nop
ret
sti
add
adc
mov
xchg
inc
int
mov
jg
push
lds
int
xchg
roll
jb
sahf
jb
mov
dec
int3
int3
xor
xchg
lds
rolb
rorl
adc
xor
pop
mov
mov
inc
lock
xchg
pop
add
enter
adc
pop
inc
les
dec
xchg
mov
xor
int
dec
xor
push
cmp
inc
push
jp
adc
mov
mov
insl
cwtl
mov
inc
jbe
dec
xchg
into
xchg
sub
jecxz
rorl
test
mov
lret
lods
or
ds
jbe
adc
xchg
dec
nop
sbb
shll
cwtl
adc
cs
mov
out
dec
jmp
adc
lea
mov
icebp
movsb
jb
adc
aam
iret
jns
dec
es
enter
cld
xchg
and
xchg
dec
addr16
push
out
push
mov
and
jmp
cs
imul
pop
mov
sti
or
push
adc
inc
cmpsl
xchg
jbe
rorb
xchg
push
adc
sub
inc
iret
imul
orb
mov
inc
bnd
aaa
dec
jno
js
mov
dec
mov
xchg
xor
dec
rcll
fucomip
in
jg
jno
daa
add
and
xchg
in
les
adc
mov
popf
rolb
js
mov
push
jl
mov
push
in
push
test
mov
in
mov
cmc
adc
cmp
test
add
fmuls
ds
push
xchg
loope
pop
jbe
lret
dec
icebp
out
nop
test
or
int3
imul
xor
xchg
add
or
jl
add
ds
mov
push
dec
mov
adc
stos
int
jge
add
pop
inc
adc
movsl
mov
lods
push
cs
into
sahf
ret
lea
jecxz
push
aad
popa
jne
nop
mov
out
sub
arpl
fidivs
inc
les
dec
leave
mov
stos
movsb
xor
mov
decl
mov
movsl
mov
test
clc
lods
mov
cmp
sti
lods
dec
cld
add
cmp
sub
sbb
test
xchg
movsb
es
or
sahf
push
movsl
je
dec
add
ret
lods
mov
push
push
pop
dec
and
mov
or
mov
inc
and
push
mov
mov
mov
inc
xchg
dec
push
dec
add
call
leave
pop
jmp
xchg
leave
xchg
dec
add
lods
adc
or
nop
lea
lcall
mov
mov
mov
pop
lret
add
push
out
icebp
jne
push
mov
xchg
ret
jae
test
sub
int3
xor
mov
lret
les
adc
test
rcrb
inc
cmpsb
ss
xchg
iret
xchg
cmp
rcl
inc
mov
cmp
nop
push
jne
ret
push
mov
xor
movsl
xchg
popf
or
inc
iret
mov
aas
jl
xchg
xchg
cmp
lret
test
pusha
mov
iret
dec
rorb
add
inc
ss
xchg
imul
adc
sub
shll
lahf
cmp
push
ds
iret
jbe
adc
popa
xchg
inc
lcall
lds
mov
sub
movsb
mov
adc
mov
adc
les
repnz
adc
sub
push
mov
cmpsb
dec
je
dec
or
mov
push
js
into
jo
push
dec
in
movl
rcrl
and
insl
dec
jno
add
xor
inc
repz
mov
jl
aas
fs
adc
adc
lret
test
mov
jbe
add
or
adc
test
std
lret
rorl
or
aas
dec
xchg
adc
cmp
dec
dec
jecxz
enter
mov
inc
inc
or
repz
inc
je
decl
dec
andb
dec
outsb
cmp
test
push
ds
mov
es
mov
push
mov
lods
push
inc
adc
xchg
xchg
ljmp
push
ret
inc
inc
outsb
mov
cmp
or
jo
add
adc
popf
orb
les
mov
sar
orb
adc
adc
inc
gs
setno
inc
pop
push
lret
mov
inc
jmp
mov
in
iret
inc
xchg
sub
xchg
jne
xchg
adc
arpl
xor
push
ret
xchg
jne
inc
mov
cmp
lock
nop
pop
fbstp
nop
loop
icebp
aas
adcb
cmp
mov
nop
mov
xor
pop
xor
pop
test
insb
test
dec
js
xor
cmp
sub
xor
or
pusha
in
cmp
and
iret
inc
mov
movb
jp
mov
test
test
mov
stos
inc
imul
in
rol
shlb
jno
enter
in
stc
or
mov
mov
or
or
movb
movsb
in
inc
jno
push
inc
cmp
xchg
xchg
js
jo
pop
lds
inc
ret
lods
dec
bound
loopne
jb
or
dec
pop
fs
dec
xchg
stos
xchg
das
lea
mov
jge
add
popf
in
or
or
dec
mov
adc
xchg
inc
or
jl
movsl
dec
out
add
nop
leave
xchg
mov
mov
xchg
mov
mov
cltd
xchg
scas
or
xchg
jecxz
and
cmpsb
pop
xchg
shr
int
push
mov
and
les
shrl
inc
mov
sarl
rorl
movb
rorb
call
xchg
lods
and
ja
mov
int
sarb
out
push
add
inc
outsl
iret
test
dec
adc
jge
repz
and
dec
rolb
stos
inc
sbb
js
or
or
inc
mov
jecxz
adc
or
inc
inc
adc
jo
add
adc
mov
nop
push
xchg
sub
pop
xchg
rol
mov
test
jne
ds
xorb
adc
push
mov
jne
add
insb
adc
pop
push
mov
jae
mov
xchg
inc
aad
dec
xchg
mov
stos
mov
aad
jmp
add
push
adc
or
mov
jne
adcb
and
js
fs
push
push
xchg
faddl
jne,pt
xorl
in
push
sti
lret
shll
jecxz
cmp
dec
int
daa
sahf
xchg
ds
leave
shlb
pop
mov
or
or
js
cmp
push
jg
ret
xchg
mov
ret
xor
xadd
cmp
jo
not
nop
cmc
and
mov
cmpsl
rcll
inc
push
dec
mov
imul
inc
push
xor
or
lock
sysexit
and
pop
and
xor
add
test
jecxz
adc
aaa
ret
inc
or
push
jo
fwait
dec
jmp
adc
adc
xchg
mov
mov
mov
popa
xor
int3
stos
xchg
push
test
cmc
jb
adc
in
dec
dec
test
inc
enter
gs
mov
test
push
inc
nop
dec
imulb
lea
and
add
js
subb
mov
inc
movsl
daa
push
xchg
xchg
xchg
jne
cld
movsb
hlt
jbe
movsl
pop
mov
jmp
cld
or
push
insb
shrl
jne
inc
rdmsr
xchg
push
mov
adc
les
add
sbbb
mov
cmc
mov
inc
sub
dec
mov
or
pop
gs
nop
and
cltd
push
adc
cmpsl
loope
cli
inc
stos
push
aad
xor
mov
xor
lret
adc
sbb
adc
aaa
cmc
test
cmp
repnz
adc
or
xor
add
fnsave
dec
fcmovnb
repz
mov
and
testl
or
push
cmpsb
movl
push
data16
cmc
xchg
ret
mov
addb
mov
rcll
xchg
adc
stos
dec
push
mov
dec
cs
cltd
ret
ret
icebp
dec
lcall
popa
adc
into
pop
sar
lods
rol
pop
or
xor
popa
loope
into
mov
or
xchg
push
pop
leave
jo
or
dec
incb
dec
mov
pop
dec
or
lret
js
cmp
andb
mov
dec
in
push
inc
addb
repnz
xor
inc
mov
vshufps
xor
andl
xchg
ret
push
fldl
cvtpi2ps
shl
leave
sub
xchg
orl
jbe
lea
sub
xor
clc
adc
and
sarb
and
repnz
or
add
push
mov
add
push
add
mov
mov
fcoml
int3
cltd
pop
inc
rol
ds
orb
pop
mov
das
nop
cmpsb
test
fidivrl
insl
fsubs
xchg
dec
push
in
ret
les
sub
cmp
les
dec
inc
xorb
adc
and
iret
xchg
mov
std
pop
js
cld
pop
cmp
movsl
adc
xchg
frstor
shl
nop
xchg
ljmp
push
rorb
ret
nop
and
mov
xchg
inc
movsl
dec
sub
rcrl
mov
inc
out
movsb
xor
in
mov
xchg
xchg
pop
mov
or
pop
cld
or
adc
push
add
lods
and
shll
test
push
test
jmp
fimuls
push
aaa
sub
push
dec
pop
fidivs
mov
push
adc
loop
loopne
pop
mov
std
out
mov
sbb
inc
xor
jmp
lcall
scas
pop
adc
rcl
aaa
sbb
cmpsb
pop
mov
loopne
sbb
dec
mov
ja
rorl
mov
fs
xchg
neg
xchg
aad
ret
push
shlb
rolb
ret
or
mov
divb
mov
repnz
xlat
dec
pop
dec
lock
in
xchg
xchg
push
test
mov
dec
leave
push
bound
xlat
push
lods
adc
test
cmp
ret
push
xchg
daa
mov
pop
test
out
adc
nop
roll
les
outsb
scas
mov
mov
gs
sbb
push
aad
pop
add
leave
icebp
pop
mov
int
push
mov
movsb
xchg
push
popf
hlt
lret
cs
push
push
scas
rcll
aaa
les
or
mov
cmp
sbb
faddl
mov
xor
dec
push
leave
ret
xchg
in
nop
inc
cmp
stos
inc
mov
push
or
and
mov
icebp
dec
push
dec
mov
xor
into
orl
pop
push
sbb
rcpps
dec
push
ret
or
push
dec
iret
inc
push
dec
les
push
jns
xor
dec
cs
pop
sbb
xchg
bound
and
mov
dec
cmp
dec
pop
test
rcrb
lea
aad
enter
rcr
andb
inc
pusha
push
inc
test
fcmovne
mov
xchg
dec
jo
or
jecxz
pop
int3
mov
inc
push
jle
mov
ret
add
test
lds
in
or
orb
in
and
inc
or
repz
movsl
std
stos
into
aaa
jno
popw
jne
inc
test
jno
inc
jl
mov
cli
roll
addb
and
rcrl
push
scas
xor
in
push
sti
scas
out
sti
mov
aam
push
dec
jne
lods
movl
inc
fstps
dec
es
push
out
mov
jle
adc
movl
mov
push
inc
push
enter
stos
push
mov
rol
and
jecxz
mov
adc
mov
or
inc
mov
in
ds
les
mov
push
test
xchg
mov
and
sarl
inc
ds
dec
adc
push
aad
bound
fnsave
inc
pusha
xchg
mov
mov
mov
jecxz
mov
dec
push
inc
das
pop
dec
lahf
xchg
push
gs
lret
fdiv
mov
jge
add
out
push
pop
gs
mov
xchg
aas
cmp
push
mov
mov
in
dec
cwtl
mov
mov
xchg
pop
dec
lds
mov
mov
fmuls
iret
test
in
push
lret
jmp
push
dec
mov
jge
dec
xchg
sub
lret
xor
xchg
hlt
jecxz
leave
inc
jo
jge
std
jne
fstl
sub
fmull
adc
adc
mov
xchg
xor
shll
mov
push
mov
ret
sbb
insb
or
mov
mov
lret
inc
ret
shll
inc
xchg
inc
push
gs
push
orb
popa
dec
stos
rolb
dec
mov
sbb
mov
jl
push
mov
xor
xor
push
mov
clc
and
dec
push
inc
and
pop
lods
cmp
test
or
adc
inc
int3
shll
stos
adc
hlt
xchg
jb
dec
js
mov
icebp
lret
scas
inc
push
js
or
lds
cmpsb
mov
xchg
mov
xor
mov
mov
test
shrb
fisubrl
cli
adcb
std
xchg
pusha
sarl
test
mov
mov
push
decl
add
roll
xchg
adcl
mov
nop
int
popf
dec
inc
push
xchg
push
es
push
fsubs
or
add
cmpsb
into
add
out
jbe
repz
pusha
dec
inc
mov
leave
out
sub
pop
dec
dec
mov
xchg
push
push
jnp
popa
rclb
mov
pop
aaa
fdivrs
and
xor
inc
jmp
dec
and
mov
hlt
cmovne
dec
sbb
ljmp
sub
jl
repz
adc
fists
dec
dec
push
ret
push
out
sarl
nop
mov
lea
out
and
add
adc
ds
xchg
in
jnp
jecxz
inc
pop
adc
mov
imul
jbe
or
mov
cmp
sub
inc
int
mov
push
shlb
nop
push
jp
mov
lret
xor
xor
inc
dec
pusha
mov
mov
bound
jae
dec
ret
jp
lret
movsb
mov
sbb
std
test
push
mov
test
inc
jl
aaa
repnz
xchg
xchg
jl
inc
jmp
or
shll
sbb
ret
test
test
or
mov
into
fsubrs
lods
nop
push
into
insb
inc
test
pop
sbb
cwtl
and
out
std
mov
push
dec
mov
mov
ret
mov
inc
ss
push
dec
mov
rorl
in
or
dec
or
orb
roll
ds
nop
mov
dec
cmc
sbb
or
fisubrl
ds
cwtl
rorb
rorb
in
cmp
inc
into
out
clc
cmp
push
mov
lds
push
pusha
aam
lds
inc
lret
push
pushf
jmp
movsb
or
pusha
das
nop
ss
or
das
mov
jmp
or
into
mov
mov
pop
pop
mov
mov
lds
inc
push
sub
test
inc
inc
leave
aad
xchg
int
jne
mov
lret
jo
jb
and
enter
xchg
scas
dec
push
adc
lds
push
or
or
iret
add
xchg
lret
inc
or
test
lret
jb
dec
xchg
dec
push
push
add
js
jg
xchg
cmp
dec
pusha
fld
lea
std
lea
loopne
dec
jne
pusha
out
or
ss
mov
jne
sarl
ss
sub
sub
enter
shrl
gs
rcl
and
es
shlb
inc
xchg
mov
aam
shll
dec
lods
call
dec
mov
add
test
push
or
gs
into
dec
enter
jne
add
xor
push
jl
push
or
lret
ljmp
leave
cltd
or
mov
add
mov
push
dec
sbb
jbe
cmp
mov
lds
fsubrl
dec
nop
mov
lds
dec
lret
mov
mov
jb
inc
ds
jo
or
std
js
nop
lea
jns
nop
xchg
dec
inc
nop
orb
dec
in
cmp
adc
push
leave
pop
stos
adc
cltd
rol
push
inc
aad
les
sub
push
iret
mov
nop
into
pushf
test
jge
push
inc
jno
xchg
cmp
or
or
jl
adc
cltd
ds
fimuls
inc
inc
rolb
into
test
xchg
pop
ds
xchg
jne
inc
lds
push
ss
lods
push
nop
ret
movsl
mov
lods
adc
xchg
and
dec
dec
sub
ds
dec
test
mov
notl
icebp
lods
into
cmp
fiadds
push
lret
mov
mov
adc
adc
mov
in
wrmsr
push
test
stos
int3
jmp
adc
adc
push
ja
mov
push
push
xchg
rorl
jbe
fbstp
inc
movsb
gs
imul
ds
insl
shl
lret
imul
sbbb
sub
ljmp
int
mov
inc
adc
aaa
add
int3
dec
ret
popl
mov
popa
push
dec
dec
sahf
xchg
repnz
iret
lods
xchg
and
les
inc
std
enter
pop
dec
sub
add
push
repz
adc
xchg
inc
mov
rorb
insb
mov
iret
pop
and
lea
scas
lds
xchg
gs
mov
mov
adc
inc
xor
in
js
scas
or
dec
sub
xchg
adc
xor
insb
inc
shlb
jge
or
and
xor
in
mov
adc
clc
loop
adc
dec
pop
lahf
jnp
mov
addb
movsl
xchg
add
test
jns
dec
mov
xchg
inc
aad
push
or
adc
in
addl
rorl
mov
leave
sub
std
hlt
inc
add
iret
leave
jecxz
xchg
and
mov
jne
xor
shl
imul
addl
js
dec
xlat
orb
xchg
andl
rorl
jno
mov
xchg
pop
jb
mov
in
push
mov
jno
orl
xchg
mov
mov
dec
fistps
rorb
iret
shll
jmp
cmpsb
lret
insl
inc
cmp
mov
mov
or
movsl
ds
inc
pop
xchg
into
je
mov
push
push
push
inc
shrd
lds
inc
enter
pop
les
inc
pusha
lds
mov
cmp
add
dec
mov
push
dec
adc
lea
cltd
cli
xchg
mov
cs
push
inc
test
ljmp
outsl
dec
xorl
mov
iret
mov
cmp
xchg
enter
dec
ror
adc
enter
xchg
lret
cs
mov
jns
xchg
ret
outsb
push
mov
inc
int3
mov
movsb
es
dec
mov
mov
lea
push
jge
aam
cmp
dec
mov
xor
subb
sbb
push
cmp
dec
push
pop
ret
ret
jge
xchg
repz
bound
xchg
popa
cmp
imul
lcall
repz
subl
xchg
inc
pop
paddusw
jo
shrb
mov
lcall
ret
or
inc
enter
int
inc
xchg
xchg
push
btrl
adc
xor
repnz
nop
insb
js
lret
outsb
or
or
xchg
adc
int3
inc
mov
inc
cld
push
test
mov
push
cmp
fdivrl
push
mov
inc
jae
add
cmp
push
iret
dec
push
bound
push
add
lds
or
xchg
pushf
inc
loopne
inc
dec
sar
lds
jg
cmpsl
lret
fwait
push
or
xchg
enter
lea
ss
cmp
lea
ret
in
jno
mov
jle
jnp
pop
test
movl
ret
xchg
dec
bndstx
popa
testl
mov
cmc
ret
loop
addl
js
mov
inc
ret
shrb
pop
xor
mov
xchg
mov
icebp
mov
pop
add
mov
scas
mov
call
in
bound
inc
jb
dec
les
mov
push
add
dec
mov
ret
cpuid
adc
xchg
jb
cmp
ret
inc
in
inc
push
jnp
lds
add
addb
cmpsb
adc
mov
jp
cmc
inc
dec
dec
sahf
cmpsb
ret
sub
mov
repz
xchg
push
loope
xor
mov
xchg
ret
lcallw
add
mov
daa
lcall
cltd
vucomiss
ds
ret
add
iret
xchg
mov
xchg
fidivrl
cmp
xor
iret
mov
ret
xchg
clc
xorb
dec
or
jmp
cvttps2pi
iret
ret
divl
mov
adc
ficompl
xchg
mov
and
dec
push
mov
push
shlb
int
adc
mov
popf
addr16
aaa
pop
loop
push
adc
ret
clc
xor
jb
rclb
aad
mov
push
push
push
inc
enter
dec
jb
xorl
inc
jmp
ja
cld
mov
inc
out
pop
loop
jo
ficoms
loop
repz
or
es
int3
dec
push
sbb
cmc
inc
sbb
testl
std
fisubrl
repz
mov
mov
lret
xchg
sbb
inc
pop
out
adc
shll
cld
loope
loope
inc
ja
push
aam
hlt
jb
ret
in
ret
inc
sub
cmp
xchg
push
das
mov
and
sub
cmp
ret
mov
push
jbe
hlt
in
adc
aad
cmp
cltd
xor
ret
mov
nop
dec
xchg
inc
sti
das
fildl
xor
rcll
dec
dec
pusha
xorb
stos
call
rcll
mov
mov
mov
sarb
subl
sahf
subb
lahf
rolb
jo
cltd
rorb
jae
shlb
fwait
mov
xchg
outsb
pusha
mov
xchg
jnp
jne
ja
insb
outsl
shrb
push
shlb
pop
pop
pop
pop
pop
pop
mov
push
sarl
mov
push
sbbl
int
mov
mov
mov
mov
mov
lcall
xchg
mov
jb
into
bound
cmpsb
lea
pop
jge
jae
jl
lcall
mov
and
xor
mov
leave
pop
ds
xor
xchg
out
fwait
icebp
fsubrp
push
inc
xchg
sub
out
daa
lahf
outsl
orl
std
ljmp
rcrb
testl
daa
cmp
outsl
test
call
pop
mov
in
aam
sbb
movsb
mov
mov
loopne
mov
js
jp
ljmp
xor
mov
push
popa
clc
mov
sarb
arpl
pop
fists
add
loop
sub
pop
rclb
jle
mov
decl
pusha
xchg
loope
aam
ret
push
jmp
jg
repz
adc
mov
mov
dec
loope
push
xchg
les
nop
cmp
loop
orl
pusha
add
loope
sub
mov
cli
test
mov
ss
repz
mov
gs
xchg
mov
inc
mov
pop
fiadds
mov
das
xor
mov
les
icebp
dec
loop
mov
push
inc
lods
iret
in
fwait
pop
std
shlb
fs
adc
sbb
jo
ret
adc
test
aam
cmc
cmp
cwtl
addl
inc
out
sbb
shl
add
loope,pt
outsb
dec
ret
pop
push
push
inc
dec
les
inc
in
jo
out
cwtl
cmp
cld
mov
push
xor
xchg
rolb
jmp
xchg
xlat
insl
rcr
mov
push
rolb
shlb
pop
mov
add
or
imul
mov
xchg
fcmovb
test
inc
adc
ror
mov
dec
jl
push
data16
jmp
addr16
add
test
mov
int
inc
icebp
fldl
pushf
pop
daa
pop
shlb
add
mov
mov
rcrb
dec
ljmp
das
aas
xchg
inc
aaa
xlat
cmp
sbb
or
xor
xor
mov
cs
mov
adc
mov
stos
ds
sub
int3
mov
push
or
rcrb
push
cmp
mov
cltd
shlb
das
mov
arpl
dec
inc
mov
or
push
rclb
sbb
fwait
pop
ret
mov
fistps
rcrl
xchg
mov
ficompl
ja
ljmp
repnz
and
xchg
nop
cli
jnp
mov
sub
hlt
popf
pop
adc
out
mov
pop
push
sarb
cld
mov
lods
fwait
and
mov
push
xor
mov
pusha
mov
sarb
push
pop
add
loop
ffree
xlat
rolb
or
jle
and
lock
gs
enter
sti
shlb
cli
or
sbb
data16
sarb
imul
jp
sbb
add
cmp
data16
ret
inc
xor
movsl
add
loopne
dec
ficoml
xorb
and
movsb
xchg
xchg
and
shrb
sbb
lcall
cmpsl
or
xchg
outsb
fdivrs
sub
lcall
in
rclb
adc
shl
xor
xchg
jp
fldenv
cld
repnz
jg
mov
aaa
andl
into
insl
pop
inc
fidivrs
jne
ret
cmp
lret
es
sbb
jae
fsubs
jns
cmp
das
std
add
or
push
jbe
dec
movsb
insb
xor
cs
cmpsl
add
out
in
test
add
sbb
lret
cmp
jle
bound
adc
sbb
fs
fcompl
sbb
mov
lret
test
and
lds
add
adc
mov
mov
or
dec
out
push
not
aad
arpl
mov
push
sub
add
sbb
jnp
iret
test
gs
pop
lcall
add
jae
jge
pushf
add
or
mov
sub
pushl
mov
scas
sub
cmpb
adc
pop
inc
and
mov
add
fcoms
dec
lods
rolb
enter
loope
shl
arpl
and
ret
dec
aam
stos
scas
test
dec
mov
pusha
add
dec
lock
rcr
sti
xchg
pop
mov
push
shrb
pop
ljmp
shl
lahf
push
gs
enter
adc
call
pop
lcall
outsl
insl
out
mov
mull
into
cmpsb
xrelease
mov
xor
fsubs
sbb
sub
enter
rclb
bound
mov
adc
sbb
adc
test
mov
dec
in
arpl
push
or
add
pop
lock
pushf
push
test
fst
inc
por
out
fisubl
inc
adc
inc
or
ret
ror
add
cmp
ja
add
into
jo
pop
xor
or
jle
lret
cmp
sub
hlt
je
sahf
js
enter
mov
pop
sahf
in
out
sbb
shlb
out
add
adc
lods
pushf
out
jnp
push
pop
push
fwait
inc
jne
push
shlb
pop
fidivl
pushf
mov
lahf
dec
stc
xchg
push
test
push
mov
and
mov
jbe
fxch
mul
or
rorb
scas
xor
push
fst
and
stos
lret
xchg
loope
shll
mov
popa
inc
jne
or
cld
aam
leave
inc
ret
pop
mov
scas
iret
or
adc
sahf
and
rorb
jg
mov
rol
jbe
fsubs
frstor
xor
rclb
push
dec
out
sub
add
or
xor
xchg
daa
sbb
lds
or
pop
push
addr16
add
shrb
or
pop
imul
mov
lock
lock
xchg
test
xor
cmc
mov
inc
idiv
popa
mov
cltd
stc
mov
pop
xchg
out
push
fisubs
in
jb
fstpl
into
pusha
rclb
xor
data16
sbb
lret
rclb
das
into
aas
push
cmp
arpl
in
nop
out
addr16
adc
out
cmpsl
jno
sarb
loop
push
pop
sub
mov
cwtl
pop
ja
adc
dec
pop
rclb
ds
push
dec
je
mov
mov
or
lret
push
pop
sub
push
xchg
mov
and
sarb
jae
adc
fsubp
shl
dec
push
daa
js
test
repnz
add
or
or
decb
pop
clc
fs
fnop
je
sub
lret
fcompl
push
jae
les
out
dec
shl
test
das
fsubrl
aam
lahf
loopne
stos
ret
nop
idivb
or
mull
out
or
sub
cmp
je
aaa
jecxz
in
leave
js
mov
leave
lods
inc
ljmp
adc
or
repnz
dec
cld
sub
pop
dec
fidivs
jecxz
daa
jp
sbb
addr16
loopne
movsb
addb
nop
lret
popa
lods
xchg
test
sub
pop
test
rcl
fcmovnbe
cmp
fisubs
mov
mov
push
adc
rcrb
stos
xlat
pop
addr16
mov
sbb
call
fistpl
jmp
sbb
mul
or
repz
rcll
xchg
sub
jbe
mov
imull
stc
mov
push
cmp
adc
pop
xor
lret
xchg
add
movsl
orl
inc
lods
push
ret
xor
add
xor
inc
add
mov
jecxz
adc
jae
mov
mov
mov
jle
push
mov
push
add
iret
push
inc
ret
out
rcr
adc
xchg
push
jno
dec
inc
mov
mov
jae
mov
xor
mov
fwait
push
movsl
xchg
shlb
cmp
push
in
pop
xchg
shl
insl
rol
mov
mov
inc
out
jb
lods
fisttpll
lods
fmuls
in
cld
or
out
pop
int3
pop
push
jl
popf
rcr
scas
aam
inc
pop
aad
cs
rolb
adc
insl
pop
push
sub
rorb
adc
add
bound
scas
jp
iret
adc
cmp
idivb
pushl
add
jle
addl
mov
scas
xor
scas
mov
mov
ljmp
xor
lcall
rcrb
xchg
mov
jle
push
pusha
mov
pop
outsb
jl
jb
or
pop
test
call
sub
lahf
dec
cmp
push
pop
pop
loopne
inc
and
rolb
inc
mov
xlat
pop
mov
dec
loope
dec
insb
popa
pusha
push
bound
jecxz
leave
mov
jecxz,pn
insl
jecxz
jecxz
and
adc
rorl
scas
pop
inc
mov
out
push
nop
inc
mov
sub
xor
adc
test
and
xchg
dec
jecxz
insb
dec
lods
push
push
scas
pop
adc
movl
out
dec
xchg
out
stos
ret
push
inc
push
js
jle
cli
testl
aaa
mov
stos
xor
sbb
sub
dec
loope
fstpl
ds
push
ds
dec
cmp
inc
lahf
lods
xor
aaa
jge
mov
xchg
push
sahf
call
inc
bound
mov
adc
xor
shr
lahf
repz
pushf
mov
and
sub
add
adc
iret
dec
adc
das
aaa
int3
bound
rclb
pusha
xlat
sbb
adc
lret
mov
shl
iret
sahf
jl
cwtl
dec
das
scas
fwait
popf
enter
sbb
inc
rorb
dec
xor
mov
mov
test
cld
xchg
enter
jecxz
mov
dec
std
int
movsb
movl
add
mov
adc
scas
mov
add
cwtl
into
mov
mov
iret
adc
in
repz
push
dec
pop
stos
out
inc
mov
shll
jle
lahf
aas
out
aad
dec
dec
int3
mov
cmp
out
xor
dec
shl
call
mov
pushf
fdivrl
mov
mov
into
pop
dec
in
mov
lmsw
orl
jmp
out
jne
pop
fiadds
jl
jae
lods
mov
mov
pusha
leave
push
fdivrl
xor
xor
shrb
dec
nop
popf
scas
fisubl
xchg
mov
repnz
jae
adc
test
xchg
or
mov
or
ret
dec
mov
xor
stc
mov
push
mov
and
fcoms
popf
rcr
mov
mov
loopne
mov
cmp
xchg
pop
jl
flds
adc
mov
scas
aas
repnz
xor
push
fnstcw
and
loope
xor
inc
or
mov
xchg
adc
mov
jg
andl
sahf
cmp
xchg
pop
jge
cli
cmc
repnz
and
add
imul
ret
push
add
adc
inc
bnd
jbe
bound
clc
mov
push
fs
aaa
fwait
mov
std
fisttps
subb
dec
add
push
mov
inc
adc
sbb
jp
cmpsb
or
pop
orl
stos
aas
adc
pusha
push
fldt
inc
fistps
js,pt
sbb
xchg
xor
rcrl
jne
aas
sahf
insb
xchg
xlat
std
xchg
mov
pushf
push
testl
jl
lods
pop
xor
or
xor
leave
leave
pop
cmp
xor
sub
xor
dec
test
lods
loopne
rclb
cmp
ret
jl
adc
xor
cmp
out
mov
pop
out
mov
or
ret
xchg
outsl
xchg
mov
ret
shl
je
enter
xchg
push
fisttpl
movsb
mov
inc
lahf
cs
add
cld
add
icebp
mov
aam
js
movsb
lea
test
flds
mov
movsb
xchg
or
sbb
addr16
aam
fcompl
or
mov
xchg
mov
mov
lods
mov
mov
scas
stos
mov
sbbb
pushf
rcrb
cltd
cwtl
fwait
shlb
lea
push
jo
or
rorb
mov
mov
push
xor
mov
jns
outsb
dec
jns
xor
push
dec
dec
dec
rorb
dec
dec
dec
inc
inc
inc
rolb
inc
ds
cmp
cmp
xor
xor
sub
sub
daa
sbb
inc
jb
push
cli
push
ljmp
mov
fwait
mov
push
xchg
mov
shlb
scas
mov
rclb
test
pushf
stos
cmpsb
bound
mov
sbb
jo
jle
pusha
enter
int
xchg
xchg
push
inc
xchg
fstpt
fwait
outsb
pop
pop
adc
js
jle
pop
aaa
sub
rolb
inc
sbb
jbe
dec
loope
rcl
lds
dec
int
cmp
pushf
lret
pop
push
rorb
aaa
lahf
ss
jns
out
mov
xor
fsub
cmp
pop
rorb
rorb
fists
sbb
cmpsb
dec
add
rolb
pop
and
rolb
jmp
ret
xor
fisubl
mov
xchg
xchg
mov
push
pushf
rcl
aad
repnz
inc
mov
rcl
out
mov
dec
aas
je
push
bound
test
aaa
xchg
cmpsl
pop
push
repnz
mov
jo
xchg
push
pop
int3
jmp
cld
sbb
iret
inc
push
jo
and
pop
and
adc
daa
xor
push
imul
loopne
sbb
loopne
cmp
shlb
xchg
data16
dec
scas
mov
inc
sbb
or
out
aaa
add
popa
cmpsl
scas
pop
dec
pop
scas
xchg
push
loop
jg
push
cmp
sbb
aas
enter
cmp
and
mov
pop
mov
ret
call
cld
inc
loope
xchg
cmp
lret
mov
nop
sub
loope
ds
repz
inc
cwtl
xchg
rcl
movsb
mov
inc
stos
fucomp
mov
cmc
aam
aas
sbb
movsl
jnp
popa
loopne
imul
repz
fs
enter
mov
push
gs
push
lret
adc
inc
in
mov
inc
outsb
cmp
lock
rclb
fidivrs
push
sbb
jae
and
sub
test
sbb
push
xchg
adc
ja
out
jae
lret
faddl
aaa
pop
rorb
push
lcall
shr
lret
sub
push
bound
cmp
dec
push
lret
mov
or
pop
aas
cmp
bound
inc
pop
aad
int
mov
cltd
in
loope
stc
mov
sub
pop
jmp
dec
das
imul
xchg
xchg
repz
adcl
ss
leave
inc
clc
pop
mov
xchg
js
rclb
xor
fs
test
mov
pushf
cmp
mov
setbe
fwait
adc
sub
lods
xchg
mov
rclb
add
rcrb
scas
rolb
idiv
shl
ret
jo
or
xchg
or
pop
repnz
cwtl
lock
xor
add
les
jl
movsb
imul
inc
es
pop
leave
fwait
icebp
test
fiaddl
pusha
repnz
cld
and
scas
pop
rolb
mov
fcmovnbe
inc
jnp
cmp
lahf
xor
sarb
adc
pop
or
shl
xor
fwait
js
outsl
mov
roll
xchg
adc
cmp
fisubrl
mov
adc
adc
mov
push
mov
scas
lret
popa
jbe
pop
cmp
out
test
xchg
loope
dec
icebp
pop
cmp
fs
jecxz
out
testl
rolb
iret
inc
adc
repz
pop
insl
imul
daa
cmp
xor
pop
dec
rol
xchg
xor
call
aad
adc
nop
leave
xchg
xchg
js
clc
int
les
inc
rcr
mov
loope
lods
mov
in
data16
jge
mov
sbb
fwait
repnz
shr
clc
mov
rcrl
addr16
outsl
outsl
shrb
cmc
aas
push
mov
adc
xchg
pushf
in
filds
fmul
cli
out
cltd
repnz
pop
mov
add
pop
rolb
add
mov
mov
jo
les
pushf
mov
dec
sar
lea
dec
popa
xchg
pop
lock
push
fs
imul
shl
push
out
fistpl
pop
push
daa
or
sub
shlb
mov
push
movsb
lods
adc
mov
sub
cwtl
lcall
aaa
aam
pop
es
cli
cmp
fdivs
repz
arpl
lea
shl
add
sarl
insl
inc
cmpl
aaa
sbb
sar
test
xorl
not
loop
sub
lock
into
add
clc
jb,pt
movsb
test
sbb
adc
and
push
mov
sub
hlt
pop
mov
lock
mov
sbb
repnz
lret
xchg
dec
lret
dec
add
mov
fcmovb
filds
xchg
frstpm(287
lcall
sbb
std
pop
jne
fdivrp
mov
roll
rcrb
ds
je
xchg
rolb
arpl
cmp
movsl
shrb
mov
adc
mov
push
jmp
rcl
push
sbb
inc
mov
fnstcw
xchg
arpl
std
call
mov
xchg
lahf
xchg
movsb
sub
or
sarb
leave
mov
mov
dec
movd
push
xor
lock
fstpl
popl
ljmp
sbb
xchg
outsb
loop
or
cld
jnp
push
xchg
lret
movsb
inc
push
or
xchg
test
inc
scas
sub
xchg
or
shlb
push
subl
push
icebp
inc
cmp
mov
test
mov
test
dec
adc
xchg
pop
mov
popa
inc
insl
ret
mov
cmpsl
mov
mov
push
mov
gs
lcall
xchg
ficomps
movsb
scas
loop
sbb
add
push
jo
ror
pusha
mov
loopne
sarb
into
add
adc
xlat
aam
xor
out
mov
fdivl
daa
inc
jle
fmuls
stc
jo
pop
mov
push
shll
push
stos
push
xor
inc
sbb
rolb
nop
xor
mov
outsl
dec
enter
loopne
lcall
inc
into
push
scas
adc
loope
push
jae
loop
pop
push
sub
lret
add
call
add
daa
lret
push
in
pop
mov
dec
std
rorb
mov
jge
rolb
mov
dec
mov
lock
push
xchg
lret
ret
aad
ret
cmpsb
popf
inc
sbb
loopne
std
iret
into
xchg
adc
or
loope
mov
or
cmpsl
push
push
adc
xchg
rcrb
add
je
lret
imul
stc
mov
mov
cld
mov
test
xor
scas
ror
sub
push
out
jo
mov
mov
dec
cmp
lret
repnz
sbb
fwait
and
cwtl
mov
push
push
push
jo
or
mov
lods
mov
cmp
sar
pop
addr16
je
aad
ret
out
push
fdivl
in
xchg
or
add
add
push
adc
sti
or
repnz
pop
out
not
fs
pop
and
pushf
fsubp
gs
jecxz
out
add
cmpsb
mov
shl
pop
call
mov
or
test
or
loopne
pop
adc
bound
mov
movsb
add
std
sub
call
cmp
shl
xor
and
mov
sbb
adc
adc
shlw
and
jae
mov
leave
mov
movsl
bound
in
pop
out
cmp
rolb
and
or
mov
pop
push
fs
sarb
imul
out
stos
inc
push
rcr
bound
and
mov
inc
add
rolb
imul
mov
xchg
pop
lret
bound
sub
xchg
jmp
enter
rcl
mov
repnz
shlb
pop
les
enter
xor
jae
cmp
out
xchg
outsl
pusha
sbb
add
mov
mov
inc
rcrb
sbb
aaa
test
je
add
xor
mov
xchg
push
lret
nop
inc
je
rorb
mov
ficomps
loopne
faddl
in
test
xchg
xchg
push
or
rcr
popa
sub
inc
arpl
xor
roll
pop
shlb
push
rcr
ds
jb
or
pop
xchg
mov
test
inc
dec
repnz
pop
gs
fsubp
in
out
in
and
xorb
fs
fbld
push
dec
xor
xor
inc
jmp
sbb
push
xchg
scas
push
scas
xlat
adc
inc
stc
sarb
iret
xchg
xor
ret
inc
dec
out
call
pop
rorb
addr16
popf
rcrb
xchg
jl
push
ja
dec
popl
call
je
das
ret
xchg
mov
push
lret
nop
sbb
out
shrb
ljmp
push
jle
imul
jmp
les
mov
movsb
into
shlb
or
rol
stos
adc
xor
fldcw
mov
inc
rclb
rcl
mov
xchg
mov
insb
outsb
push
sub
rcrb
pusha
hlt
out
std
mov
adc
ljmp
lahf
shrl
inc
lret
xchg
xor
sarb
inc
sbb
rolb
and
pushf
cmp
adc
push
into
xchg
sbb
sbb
jg
das
std
mov
mov
outsb
aaa
test
ret
push
jg
movsl
mov
adc
add
mov
insb
inc
xor
mov
jg
mov
xor
outsb
rcl
test
aad
test
inc
adc
cs
cmpsl
bound
stos
xchg
lret
add
inc
mov
ret
aas
call
lret
jbe
fidivrs
orl
sbb
fistpll
movsl
rcrb
das
stc
dec
jle
push
sub
ror
xlat
xchg
inc
aad
jl
push
icebp
js
clc
sub
inc
push
jbe
cltd
shl
xchg
pop
lock
jecxz
xchg
frstor
imul
lret
pop
mov
sbb
push
pop
vfnmadd231ps
bound
push
repnz
dec
data16
leave
jecxz
pop
mov
adcb
pop
lret
imul
fsubl
aaa
mov
xchg
jne
pop
inc
mov
xor
inc
test
push
cltd
push
push
mov
or
pop
inc
aas
xchg
pop
fwait
cli
cmpsl
xor
test
movb
rcrb
xor
fs
andl
pop
cmpsb
mov
dec
leave
xlat
shl
in
xchg
cmc
mov
loop
and
stos
shrl
inc
jae
adc
in
add
fyl2x
or
out
cmp
xor
push
pop
push
push
lret
or
jno
sub
push
rcr
inc
and
jns
cmp
test
xchg
rolb
imul
shlb
inc
push
scas
mov
incb
leave
jp
fcomip
dec
adc
jb
jl
jno
insb
ret
rolb
mov
mov
loop
fldenv
mov
pop
lds
aam
pop
rcrb
mov
fsubs
sahf
cmp
sub
push
cmp
push
scas
xchg
in
pop
aas
xor
out
pop
mov
xchg
icebp
mov
jbe
rolb
je
inc
fcmovnbe
mov
pop
sbb
shlb
pop
jg
add
fyl2x
adc
sub
jmp
fidivrs
mov
fcoml
dec
jo
ret
fidivl
cltd
cmpsl
arpl
adc
je
add
insl
not
sti
fiadds
div
and
push
sbb
jnp
ficoml
fmul
push
movsb
xchg
xor
lret
inc
sub
es
leave
fwait
mov
mov
adc
sbb
adc
loop
cli
pop
fdivs
inc
dec
mov
push
xchg
inc
shrb
mov
repnz
outsb
mov
stos
fcom
cmpsb
bound
pop
lock
mov
cmc
xor
jae
push
in
shlb
stos
sbb
cmp
push
lcall
test
mov
fiaddl
push
fstps
es
cmp
movsb
nop
hlt
inc
push
mov
add
jecxz
adc
jbe
fstl
rorb
test
sarb
pushf
mov
icebp
pop
push
xchg
mov
inc
pop
in
loop
ficompl
add
call
push
ret
and
mov
rcrb
xorb
orl
test
cld
xchg
loop
sahf
jmp
push
mov
cmpb
lret
mov
adc
fnsave
fs
test
adc
xchg
adc
mov
cmp
sub
dec
loopne
icebp
mov
aaa
mov
sub
andb
insl
jo
lret
push
adc
popa
mov
ss
movb
adc
jge
mov
add
fsubs
fwait
lods
mov
pop
fcoml
cmpsl
enter
shl
dec
gs
pop
pop
and
xchg
sub
dec
leave
adc
sarb
adc
sub
cmpsl
loope
adc
lret
jb
sub
rolb
aas
sbb
lret
cmp
pop
dec
push
adc
sarl
mov
ret
mov
push
arpl
jl
rorb
cld
mov
mov
pop
repnz
addr16
inc
mov
scas
lods
fsts
sahf
js
testl
out
out
and
aas
stos
loope
in
jno
mov
add
imul
and
dec
flds
cmp
jge
mov
jmp
xor
sarb
std
push
cmp
sbb
jnp
and
mov
push
out
iret
inc
shlb
pop
pop
adc
incl
icebp
mov
repz
push
cmpsb
shll
rolb
and
mov
inc
mov
imul
repnz
repz
ret
sti
insb
ja
gs
test
aas
push
out
mov
cli
mov
out
shlb
lahf
out
cmpsb
addr16
roll
push
add
dec
fimuls
push
int3
shr
adc
fstps
ja
add
jle
push
xor
adc
add
in
aaa
fsts
into
addl
xchg
push
out
mov
enter
or
je
cmc
sarb
adc
push
repnz
lcall
rep
add
sbb
mov
lret
xor
out
aam
lret
fistps
in
aad
sbb
inc
les
ror
fldl
xor
sub
cmp
fidivrs
mov
call
push
or
je
fsubrs
rclb
jg
inc
test
fucomip
popa
push
arpl
out
addl
stos
outsl
repz
and
rolb
xchg
pop
popf
xor
lret
cs
dec
xchg
fnstenv
stos
insb
shll
pop
jecxz
aad
push
enter
xchg
loop
adc
sbb
jnp
cmp
movsb
push
jg
adc
in
xchg
jns
add
daa
stos
shlb
pop
push
loopew
mov
mov
cmp
pop
xlat
cmpl
inc
mov
xchg
dec
cmc
jmp
cmp
or
dec
mov
lahf
aas
aaa
cmpsb
xchg
je
mov
pop
jbe
rorb
sub
out
test
sarb
pop
loopne
ret
cmpsb
lret
xchg
mov
inc
cmp
fsubs
mov
pop
xchg
inc
fcmovne
push
shlb
lods
ss
mov
loopne
ret
pusha
ds
rorl
jbe
in
add
rcrb
adc
aas
jno
shlb
repnz
mov
inc
filds
sbb
iret
xchg
and
test
lods
mov
add
fcoml
jno
xor
sub
push
rorb
sahf
out
shl
leave
loopne
push
ds
pop
rcrb
mov
loop
push
sub
xchg
rol
sbb
adc
pop
mov
push
loopne
mov
sub
inc
loop
enter
xchg
iret
neg
sarb
pop
shlb
repnz
repz
gs
pop
mov
inc
into
mov
and
xchg
pop
sub
loopne
xlat
popf
push
into
and
shrb
int
xchg
in
xchg
inc
pop
inc
rclb
push
pop
pop
add
mov
fwait
ja
push
fists
xchg
loop
into
iret
lock
push
rorl
and
js
cmpsl
mov
push
fdivr
pop
inc
scas
loop
movsb
dec
into
rolb
pop
cmpsl
push
in
popf
inc
push
mov
mov
dec
ret
out
sbb
jne
dec
loop
cltd
mov
rcll
scas
cmp
add
and
scas
xor
push
jns
loopne
xchg
rclb
xor
mov
stos
fdecstp
mov
into
movsl
testb
cli
sbb
call
aaa
pop
cmc
out
loopne
xchg
inc
rcrb
push
rolb
out
push
ljmp
mov
mov
stc
out
filds
ficoml
mov
fldlg2
jo
adc
cmpsl
call
pushl
mov
xlat
mov
into
out
jecxz
imul
nop
mov
mov
ds
jae
sub
push
rol
push
add
or
in
pop
shl
add
cmp
mov
mov
adc
cld
aas
mov
imul
push
shrb
jbe
dec
push
pop
adc
call
fnsave
nop
into
stos
cmp
sbb
dec
out
rolb
sub
fsts
push
les
lea
push
sub
insb
out
xchg
shrb
inc
inc
push
mov
mov
mov
movsl
sub
pop
mov
rcl
pop
cmp
test
push
fildl
cmp
lock
gs
out
lret
outsb
adc
push
js
jb
push
bound
lret
cmp
mov
jle
push
shrb
fstl
mov
pop
and
lock
filds
jo
cs
ret
sbb
jg
inc
daa
pop
loope
icebp
ret
es
scas
call
sbb
fucomp
adc
shrl
push
fistps
pop
mov
rclb
jmp
das
rcrb
negl
fisubl
add
sar
or
mov
xchg
sbb
sub
mov
cmpsb
lret
mov
std
ret
push
imul
ffree
or
mov
push
xor
fwait
into
mov
push
shl
test
popf
lds
pushf
mov
pop
push
arpl
mov
xchg
out
loopne
xchg
bound
adc
fbstp
push
mov
rcl
ret
mov
xchg
lods
mov
or
leave
mov
mov
inc
iret
jge
mov
mov
sahf
mov
xor
aam
rol
loope
std
mov
mov
scas
test
mov
nop
outsb
shll
lds
xor
das
add
jecxz
out
xor
in
xchg
inc
push
loop
mov
scas
xchg
dec
loop
adc
loope
loop
xchg
pop
out
daa
ret
inc
xchg
mov
sub
scas
out
adc
xor
add
imul
inc
mov
fcom
in
lods
and
mov
lock
out
cwtl
push
inc
and
ret
jle
mov
outsl
jg
mov
out
xor
push
jb
add
xchg
mov
or
xor
icebp
ret
bound
or
xor
ret
cmpsb
mov
mov
mov
jb
ret
xor
pop
xchg
movsl
imul
daa
push
lret
mov
test
cwtl
stc
mov
mov
rcrl
shlb
jbe
push
movsb
mov
pop
fisttpl
xor
hlt
push
ret
loope
outsb
mov
roll
mov
inc
cmp
lcall
dec
dec
gs
xchg
ret
cltd
mov
mov
sti
scas
movsb
xchg
mov
pop
xchg
popa
lods
les
mov
jb
cmp
mov
inc
mov
scas
std
movsl
adc
xorb
push
ret
push
push
sarl
pop
jle
inc
xor
fbld
ds
pop
lock
mov
sti
and
lcall
sahf
fisubrl
js
lds
sti
es
pop
jg
popl
scas
pop
cmp
mov
dec
dec
and
mov
push
movsl
jle
add
xchg
mov
push
fisubs
inc
ret
push
mov
mov
mov
mov
inc
mov
bound
outsl
out
inc
adc
mov
daa
leave
dec
and
jl
pop
xchg
or
ljmp
pop
sahf
loopne
fisubrl
out
mov
and
jmp
dec
sti
mov
lds
pop
add
sbb
shll
fstps
nop
inc
jge
je
cmpsl
popf
push
jg
scas
lock
adc
push
iret
xor
jnp
sbb
js
inc
push
jbe
ret
push
test
adc
orb
adc
rclb
clc
cmp
xchg
cmpsl
jge
pop
pop
ret
cmp
push
dec
icebp
push
jb
and
into
rcrb
aaa
dec
push
subb
icebp
cmp
shlb
jno
xor
das
mov
scas
rclb
roll
dec
lret
mov
lods
and
adc
mov
sbbb
cmp
push
xchg
sub
and
dec
xor
sahf
xchg
ret
mov
shl
ds
repz
mov
jb
push
xchg
int
icebp
mov
inc
ljmp
mov
lods
xor
or
cmp
jno
nop
popa
bound
jnp
inc
subb
in
stos
mov
xchg
mov
jp
les
mov
push
into
mov
mov
nop
cmp
sub
xchg
out
scas
pop
orl
push
add
repnz
cmp
stos
aaa
out
enter
jb
idivb
rcl
fcmove
into
fnstenv
or
fs
lahf
xchg
arpl
jl
rol
push
dec
push
sbb
shl
mov
sbb
test
sub
rol
lahf
jns
dec
add
push
std
xchg
or
pushl
xor
mov
or
cmpb
lret
mov
jnp
fistpl
int
rclb
jp
int
and
mov
sahf
clc
xchg
mov
xor
pop
mov
jno
mov
adc
es
mov
test
and
push
movsb
push
ja
pop
push
adc
or
nop
add
mov
cmp
subl
mov
adc
outsb
push
inc
lds
mov
roll
jle
mov
or
mov
mov
pop
dec
mov
mov
pusha
dec
dec
xchg
nop
adcb
fcoml
cwtl
ror
sbb
incb
jo
or
push
test
ror
leave
push
push
jae
decl
xor
scas
ds
mov
push
gs
sbb
outsl
adc
inc
push
sbb
xor
xchg
iret
or
ja
fnstcw
fsubrl
xchg
shll
dec
mov
xchg
pusha
pop
adc
nop
pop
mov
xchg
inc
dec
adc
leave
jg
inc
add
pop
push
iret
das
imul
cmp
dec
mov
pop
dec
sub
dec
pusha
inc
pop
out
adc
xor
orl
ja
cwtl
sbb
jp
jb
loope
mov
loope
bound
rcrb
outsb
repz
sub
repnz
xchg
xor
adc
imul
ffreep
adc
push
and
inc
jle
orb
push
mov
inc
adc
call
jecxz
or
rclb
loopne
cmp
nop
and
out
dec
fildl
inc
les
sbb
xorb
push
adc
jno
and
push
sbb
repnz
xchg
xchg
imul
pop
ficomps
loop
pop
push
sahf
xchg
push
popw
sbb
xchg
sub
test
or
int3
jmp
icebp
xorb
popa
jb
xchg
fstp
push
adc
cli
inc
scas
cmp
sub
pop
setae
lret
sbb
rorl
and
xchg
or
adc
adc
out
outsl
pop
in
test
push
lods
push
idivb
data16
mov
shrl
insl
adc
test
test
addl
notl
sbb
dec
mov
lock
scas
es
or
or
nop
int
push
cltd
mov
mov
test
into
sbb
xchg
mov
jge
push
popa
popa
jp
jo
lock
and
mov
dec
movsl
sbb
in
mov
iret
lea
push
lcall
xchg
adc
lods
xchg
shlb
ror
scas
xor
lcall
rorl
cli
push
mov
xchg
xor
test
mov
les
leave
xchg
ss
rclb
jb
dec
dec
push
mov
ret
icebp
test
in
cs
sub
mov
mov
cmp
xchg
insb
ja
movsb
cmp
xchg
adc
add
ret
sbb
pushf
shll
mov
outsb
nop
decb
cmp
sbb
enter
addr16
sbb
adc
sub
iret
jnp
imul
lock
gs
pop
mov
adc
sub
enter
inc
adc
or
mov
lcall
or
fcoms
push
jno
andl
adcl
orl
mov
mov
std
lock
shl
movsb
jo
ror
rorb
sbb
and
insl
xor
lock
loopne
out
popf
mov
lods
arpl
mov
adc
mov
pop
xchg
adc
jmp
pop
cmp
inc
inc
pop
inc
jnp
out
cmp
push
dec
mov
test
sub
rorl
dec
leave
dec
sub
push
lods
inc
aas
cmp
test
lods
nop
xchg
sar
jo
incl
push
sub
dec
add
mov
dec
push
adc
xchg
mov
shll
shlb
popa
cwtl
mov
and
or
jb
test
shr
sbb
ljmp
add
movsb
xor
mov
xor
mov
call
sahf
push
shlb
push
mov
mov
push
mov
nop
or
nop
xorb
stc
xor
in
iret
dec
xchg
push
mov
jo
mov
sarb
insb
xlat
jnp
push
inc
ja
nop
jb
call
adc
mov
aam
leave
adc
insl
lods
outsb
outsl
and
jne
push
mov
popa
iret
add
fidivl
push
adcl
sbb
or
xlat
inc
dec
scas
or
dec
mov
loopne
xor
or
xlat
fmull
lret
mov
inc
cli
lock
out
xchg
adc
mov
in
sub
xor
pop
and
or
in
in
jno
or
push
test
add
adc
pop
ret
int3
sbb
fildll
dec
fs
mov
mov
jno
mov
loopne
out
lods
loope
bound
mov
lods
vaddsubpd
lea
icebp
ljmp
xor
mov
or
xchg
inc
ret
xor
push
add
mov
push
notb
mov
mov
xor
inc
test
or
mov
in
sarl
dec
and
or
mov
push
xlat
ror
jecxz
nop
pop
ds
mov
xchg
mov
mov
push
push
inc
xchg
pop
rcll
adc
jo
sub
lret
shll
xchg
popa
mov
jecxz
push
in
addb
mov
clc
xor
push
test
and
nop
cmp
sub
and
push
out
loopne
iret
in
or
sti
dec
and
sti
push
sub
mov
and
out
in
dec
inc
and
inc
leave
dec
cmp
leave
push
pop
lea
cld
test
sarl
push
pop
icebp
testb
or
nop
lcall
dec
stc
jmp
dec
into
mov
add
icebp
cmp
dec
shrl
pop
gs
add
cmp
loope
test
pusha
xchg
adc
test
iret
stos
cmp
mulb
push
push
stos
in
mov
dec
push
or
push
lock
setbe
mov
adc
mov
dec
push
fisttpll
lods
add
inc
pop
dec
rclb
bound
adc
lcall
sbb
enter
adc
insb
in
fstl
push
push
add
pushf
sub
or
test
and
lahf
cld
int3
pop
pop
inc
rorl
or
stos
cmpsl
sub
add
or
scas
adc
mov
xor
pop
mov
mov
test
jg
int3
adc
mov
jb
outsb
sbb
push
and
fisttps
xor
cmc
push
mov
mov
xor
mov
lds
mulb
scas
xchg
jmp
mov
mov
mov
into
mov
lahf
xchg
and
and
in
xchg
dec
ret
jb
rcrl
rclb
push
iret
call
fs
imul
mov
adc
cmp
adc
mov
dec
lock
xchg
adc
push
out
sub
shll
leave
repnz
shl
movsb
dec
ffree
popa
jb
adc
and
popa
dec
lods
std
in
mov
add
rol
inc
pop
mov
add
mov
add
xchg
test
mov
xchg
mov
in
push
shl
push
adc
adc
xchg
fiadds
negl
std
push
lock
push
xor
mov
xor
out
dec
ja
fst
in
and
fsubrl
stos
dec
xchg
mov
lods
repz
or
enter
dec
out
dec
mov
int3
out
bound
pusha
jmp
arpl
mov
push
outsl
cmpsb
add
xor
sbb
repnz
ret
iret
mov
outsb
add
xchg
or
push
nop
sub
pop
lods
leave
jecxz
push
cs
inc
out
sahf
mov
mov
add
xchg
push
mov
arpl
shll
xchg
mov
test
outsb
call
xor
ret
outsl
adc
addl
and
xor
fidivrl
adc
loope
push
xor
aas
into
and
xor
xorb
in
inc
lock
mov
and
sbb
mov
dec
mov
insl
loope
mov
pop
fcoms
ds
jno
xchg
jae
inc
outsb
fildl
sbb
push
mov
xchg
adcb
or
shll
adc
mov
xor
pop
push
rorl
pop
lods
lret
ret
pop
test
cmp
cmp
dec
scas
adc
aaa
jo
nop
pusha
jge
int
mov
addr16
cmpsb
jmp
adc
adc
xor
bound
sub
jmp
sbb
bound
jmp
test
pusha
out
xchg
mov
push
ljmp
jae
xor
jo
or
or
jecxz
dec
scas
rcrl
mov
inc
ret
or
mov
pusha
dec
xor
mov
std
test
decl
mov
fucomp
loopne,pt
lea
mov
cmpsl
mov
mov
scas
mov
dec
leave
mov
pop
aad
cmpsl
adc
sbb
or
sbb
adc
xorb
out
mov
cli
scas
pop
or
mov
mov
stos
or
pusha
sub
mov
pop
shll
mov
mov
call
dec
mov
js
mov
dec
push
mov
mov
test
movsl
lods
cmp
push
ror
jecxz
or
dec
dec
xchg
pop
mov
mov
jno
ficomps
cmp
jns
rcll
inc
inc
and
xor
adc
mov
adcb
mov
cld
insb
repz
fucom
cmp
dec
sub
clc
pop
xor
mov
shll
lods
push
mov
or
rclb
mov
push
jp
push
and
sub
xor
pop
loope
mov
jnp
jnp
inc
ja
nop
das
push
sub
ret
dec
mov
mov
mov
adcb
add
scas
jo
test
ljmp
scas
bound
stos
iret
or
mov
inc
dec
insl
scas
arpl
push
fcmovnb
mov
mov
cmp
cmp
xchg
pusha
sti
sahf
xchg
xchg
add
lock
mov
lock
icebp
xchg
xchg
scas
repnz
aaa
loope
loop
pop
dec
test
mov
xchg
mov
mov
pop
leave
scas
dec
lret
rorl
mov
shlb
dec
dec
xchg
dec
adc
int3
mov
xchg
dec
mov
loop
mov
pusha
mov
xor
stos
in
dec
notl
imul
jb
lods
pop
pop
loope
bound
dec
push
inc
jecxz
jae
outsb
andl
or
xchg
or
cmp
adc
lret
dec
stc
sti
or
or
mov
bswap
je
sti
int
test
push
push
gs
int
dec
adc
mov
sbb
addr16
scas
pop
les
cmp
andb
and
cmp
lds
mov
xchg
mov
xor
pop
cmp
mov
and
xor
mov
out
mov
mov
jo
adc
mov
dec
push
jp
mov
scas
mov
enter
inc
adc
push
lds
pop
add
mov
inc
out
mov
mov
xlat
mov
mov
lods
xchg
mov
jbe
pop
stos
add
aad
mov
insb
pop
daa
push
insl
mov
jmp
dec
loop
xchg
push
nop
xchg
mov
incb
iret
adc
jae
xchg
ret
gs
xchg
sub
push
or
push
jno
sbb
fwait
leave
adc
xor
push
xchg
fldenv
push
lods
dec
icebp
fs
test
jle
mov
lret
xchg
cmp
negl
xor
cmc
das
adc
js
pop
inc
rorb
loopne
mov
insb
jmp
sahf
nop
movsb
ja
or
push
pop
movb
jp
sahf
movsb
add
pop
push
popf
push
cmpsl
xor
xchg
and
aaa
cmp
in
shll
neg
mov
mov
cmp
mov
xchg
xchg
iret
or
mov
lock
jbe
push
add
rcrl
push
scas
pop
and
mov
add
cmpsl
or
mov
sbb
xchg
addr16
and
iret
ret
out
test
add
pop
add
jb
cmp
lret
in
push
mov
jecxz
ret
dec
mov
mov
loope
inc
sbb
and
loop
std
mov
ja
sub
mov
icebp
stos
jge
out
jle
pusha
movl
inc
rcl
lahf
cltd
in
inc
flds
mov
in
pushl
iret
or
adc
xor
xchg
out
int
xor
andl
jb
cmc
nop
mov
pushf
adc
call
outsl
push
nop
fxsave
or
push
repnz
push
test
pop
out
add
adc
out
sub
mov
or
mov
sarb
dec
cmp
into
push
int
mov
shlb
add
jns
scas
push
dec
mov
mov
mov
js
popa
adc
mov
jno
push
or
xchg
jbe
ret
mov
mov
cmp
jg
int
lahf
add
out
out
sbb
lock
jne
xchg
daa
xor
cmpsb
dec
mov
ja
pusha
jbe
mov
push
or
mov
f2xm1
push
popf
lods
imul
sbb
in
in
lods
stos
lret
pop
cmp
insl
cmp
popa
jno
popa
pop
int3
lds
iret
and
xor
xchg
iret
pop
push
and
mov
std
xchg
jns
jecxz
insb
in
pavgw
icebp
pop
adc
adc
mov
jp
mov
fwait
xchg
mov
mov
pop
sub
dec
adc
mov
inc
aas
inc
loop
jle
out
cli
xchg
pop
sbb
ss
fisubl
into
pop
mov
pop
xorb
xchg
cs
out
add
arpl
repz
rolb
dec
mov
scas
push
stos
and
das
stos
mov
jp
cmpl
xchg
mov
jne
sahf
pcmpgtw
cmpsl
push
lods
dec
jge
lahf
lret
aad
shll
xor
adc
leave
cmpsb
pop
pop
adc
xor
sub
xchg
loop
xchg
jl
enter
xchg
out
lods
loopne
in
es
push
cmp
mov
xor
mov
mov
div
mov
xchg
inc
mov
lods
lcall
fcomp
jb
mov
test
ja
pusha
inc
stos
mov
sarl
adc
and
jp
or
mov
dec
bound
push
in
mov
add
scas
pop
jb
scas
mov
jb
inc
aaa
jb
pop
mov
lock
jle
xlat
lds
xchg
bound
xor
call
mov
and
inc
xchg
adc
rcrb
pop
fwait
cwtl
lret
outsb
insb
dec
jge
jno
cmc
xchg
and
les
inc
mov
iret
popa
loopne
icebp
in
xor
or
shrb
mov
add
rsqrtps
mov
mov
hlt
addr16
addl
push
xchg
js
into
inc
adc
lock
dec
sahf
rcrb
rorl
adc
sub
roll
xor
test
add
out
adc
mov
xor
jp
lea
adc
incl
push
mov
sbb
and
pop
nop
and
shr
and
scas
pop
and
xor
lcall
rep
or
mov
jl
and
push
sbb
sbbl
in
arpl
lcall
mov
int3
roll
mov
sub
push
mov
fs
repz
xchg
xchg
dec
in
mov
out
jl
icebp
or
lcall
xor
mov
sbb
mov
or
insl
xor
stc
testl
cld
and
popl
add
inc
push
jb
mov
and
xchg
xchg
adc
rcl
mov
push
rorl
or
int3
roll
out
enter
add
inc
xor
shll
incb
ret
add
xchg
adc
popa
icebp
mov
ret
mov
and
push
pop
inc
loop
pusha
nop
adc
xor
xor
loope
mov
xchg
mov
in
cmp
movsb
sarl
dec
inc
lea
test
adc
je
enter
adc
shl
sub
lcall
push
mov
cwtl
stc
das
mov
pusha
outsb
adc
inc
rcl
mov
out
or
enter
push
pushf
popf
adc
cli
out
push
dec
and
iret
icebp
inc
rcll
mov
pop
pusha
pop
jne
mov
or
es
dec
xor
test
rclb
lods
and
lds
push
dec
push
jb
shlb
insl
lock
repnz
mov
add
aam
mov
add
arpl
cmove
out
push
cmp
mov
rcrl
pop
mov
rcrl
or
dec
les
idiv
in
cmp
out
jle
out
pop
nop
into
in
cmp
adc
jno
testb
rclb
mov
mov
mov
lock
mov
enter
mov
mov
push
mov
sbb
adc
inc
jnp
lods
pop
or
and
pop
inc
cmpsb
cmpsb
rclb
mov
sub
pop
sub
xor
shll
shrl
or
scas
add
lods
and
negb
pop
outsl
outsb
es
les
nop
push
fildll
inc
mov
mov
xchg
mov
fsubr
outsb
push
mov
and
xchg
lret
inc
jne
add
dec
dec
jae
sub
shll
adc
testb
add
dec
cli
dec
daa
jle
xchg
repz
mov
xlat
mov
into
mov
inc
sarl
dec
mov
inc
dec
mov
dec
xor
leave
push
xor
into
push
push
inc
mov
inc
or
inc
mov
inc
mov
mov
bound
mov
arpl
xor
leave
imul
push
test
lods
ds
jmp
movsl
add
cwtl
mov
jno
and
xchg
imulb
repnz
hlt
cmc
push
mov
jge
mov
mov
mov
sub
fidivrs
jbe
ljmp
and
test
pusha
dec
and
and
jnp
add
nop
sub
int
cmp
pop
jae
add
cld
repnz
xchg
outsl
scas
ret
xor
or
inc
cmp
shlb
scas
push
mov
cmp
jne
bound
pop
mov
popa
shl
push
gs
push
adc
les
and
adc
call
inc
popa
adc
mov
mov
jge
or
lock
mov
mov
and
test
mov
add
push
rolb
loopne
test
int
rorb
andl
test
jnp
adc
cmp
lock
mov
dec
push
shll
rclb
call
and
mov
mov
mov
lock
or
dec
stos
sub
leave
loopne
mov
pop
dec
shl
outsl
flds
shl
shlb
xchg
pop
or
jae
shl
cmp
adc
leave
lods
leave
loope
add
sbb
test
scas
imul
push
iret
daa
jnp
xor
or
test
pop
pusha
ror
mov
sub
lock
rorl
sahf
pusha
loopne
sbb
add
mov
repnz
mov
dec
leave
push
dec
push
jp
movsb
shlb
xor
aaa
jle
js
in
loopne
or
xchg
rorl
jae
adc
popf
cmp
iret
fldcw
lock
mov
adc
sub
mov
js
or
xchg
insl
pusha
push
outsb
jns
pusha
mov
mov
nop
xchg
dec
inc
pop
pop
cmp
stos
icebp
cmp
jecxz,pn
mov
push
aaa
cmc
jae
jle
call
stos
push
adc
cmpsb
pop
popf
shlb
test
mov
push
xor
shl
outsl
sahf
outsl
outsb
dec
mov
je
ret
cltd
imul
push
or
mov
xchg
ss
scas
ret
test
push
loopne
in
mov
adcl
mov
push
rorb
cs
pop
out
jne
push
stc
mov
or
mov
nop
xchg
lret
into
insl
mov
xchg
dec
sbb
sub
jo
xor
adc
push
push
scas
mov
adc
lods
mov
push
xor
aaa
popf
inc
mov
add
dec
xchg
inc
inc
shrl
add
mov
pop
sub
ja
push
add
lea
inc
mov
mov
loop
pop
outsb
dec
arpl
cmp
sub
das
mov
inc
pop
adc
pop
lods
cmp
xor
sub
sub
cmpl
icebp
test
adc
mov
addl
jo
ss
call
xchg
sbb
push
push
xchg
lock
sub
bound
mov
lret
xchg
dec
mov
xchg
subl
push
cmp
xor
xor
adc
sbbl
int3
push
ja
out
xchg
sub
sahf
pusha
dec
in
out
dec
push
pop
mov
les
je
popa
lret
roll
icebp
push
push
outsb
sbb
jmp
add
xor
pop
outsb
jp
nop
leave
sbb
mov
jns
mov
mov
xchg
loopne
mov
test
adc
adc
dec
repz
in
or
les
or
sub
inc
add
pop
and
mov
adc
jnp
shrl
mov
pop
leave
fstl
pusha
lea
or
enter
cmpsl
cmp
cmp
roll
mov
nop
nop
dec
sarb
xchg
cmpb
aad
adcb
push
xchg
nop
dec
dec
dec
mov
jg
push
inc
mov
cmp
dec
nop
push
cs
ret
popa
inc
aas
call
ret
scas
xchg
inc
push
and
mov
inc
mov
lret
push
mov
popf
dec
insl
mov
dec
icebp
sub
testb
xchg
mov
inc
jo
inc
dec
mov
push
inc
fdivrl
mov
inc
popa
dec
jp
scas
mov
fisttps
inc
inc
jle
int3
mov
data16
sti
shll
adc
mov
or
cmpsb
add
cmp
mov
nop
fptan
push
stc
int3
mov
sbb
imul
scas
push
aam
fnstcw
push
bound
std
dec
adc
loop
jp
or
push
push
pop
adc
out
or
loope
shr
lcall
push
adc
inc
rorb
lds
mov
lcall
test
cli
aam
jmp
aaa
xor
mov
data16
add
mov
std
pop
xor
ss
stos
mov
shlb
inc
and
gs
push
jmp
bswap
call
xor
call
lods
lock
add
fs
jae
xor
jb
push
push
jge
rcll
jae
sbb
or
stos
sbb
sbb
push
rcr
jno
test
jl
xchg
mov
jecxz
add
or
mov
insb
test
arpl
lret
fstps
sub
pop
fcoml
mov
outsl
adc
cld
inc
cmpsl
push
dec
in
sub
insl
nop
dec
dec
aad
pop
lds
rclb
sar
fimuls
stc
jmp
clc
cld
movsb
sub
or
fdivl
shll
mov
lahf
mov
push
fdivl
out
subb
arpl
mov
pop
mov
sbb
and
xbegin
fists
daa
push
pop
mov
mov
xor
jae
sub
xchg
adc
jecxz
lret
add
sbbb
pop
dec
or
outsl
and
push
arpl
enter
adc
xchg
aad
rcr
jmp
enter
push
xchg
in
fcoml
andb
test
push
int3
xchg
mov
call
add
les
push
mov
mov
mov
dec
add
or
mov
cmp
inc
or
mov
pop
mov
pop
loopne
jle
push
mov
mov
mov
cmpsl
roll
dec
mov
xchg
stos
push
nop
cmpsb
mov
sub
cmp
add
movntps
sarl
push
and
pusha
lea
je
pushf
pusha
jmp
clc
movb
jmp
inc
inc
shrb
mov
outsb
mov
call
inc
inc
push
inc
call
les
inc
call
lds
shrb
inc
inc
inc
mov
mov
inc
jmp
mov
push
xchg
xchg
aad
lods
xor
lods
push
movsb
xchg
shlb
or
insb
lret
lcall
mov
cmp
add
outsl
jne
jmp
sbb
lret
pop
das
fmul
push
repz
movzbw
jmp
bsr
ror
shr
shr
shrd
shr
dec
mov
bts
rcl
rol
add
bswap
mov
jmp
pusha
cmc
cmp
jmp
jo
fildl
xchg
aad
imul
lcall
jg
out
dec
jmp
and
pop
ds
je
mov
mov
mov
mov
jmp
jge
add
sub
inc
pop
xor
rep
test
mov
cltd
and
ljmp
mov
cmp
rol
mov
mov
cmp
mov
dec
repz
mov
movsl
stos
cmpsl
pushf
icebp
out
cmc
stos
add
adc
mov
bt
call
pusha
add
pusha
lea
jne
push
mov
pusha
mov
pushfw
popw
rcl
rcr
rcr
pusha
mov
cmc
push
ror
bt
cmp
cmc
stc
sub
pushl
neg
cmc
jmp
jmp
add
test
mov
cmp
cmp
bswap
call
jmp
xchg
lds
inc
inc
les
inc
call
inc
jmp
inc
jmp
and
repnz
lock
std
std
xchg
xchg
push
mov
or
es
sbbl
lret
shlb
jno
in
cmp
andl
push
pop
lret
jmp
xchg
data16
test
and
add
addr16
xchg
in
xchg
push
test
aad
mov
mov
bound
enter
rorl
movsl
and
inc
dec
xor
faddl
push
xchg
xchg
js
adcl
and
xlat
daa
pop
xor
add
pop
loop
aaa
xchg
lods
jecxz
adc
xchg
mov
insb
fwait
hlt
push
pop
cli
movsb
xlat
scas
imul
fsts
aad
mov
shl
lcall
xchg
jae
sub
mov
loope
into
movsb
fnop
mov
mov
in
popa
fimull
xchg
aad
cli
shlb
dec
push
js
xchg
jbe
gs
fcomip
and
rep
stos
sbb
stc
sahf
jle
es
lcall
jmp
pop
xor
pop
int
js
mov
add
add
dec
outsl
popa
fs
imul
add
or
xchg
aad
in
shlb
mov
inc
int3
mov
sub
leave
mov
mov
push
rorl
jne
jne
xor
mov
xor
pop
ds
xchg
gs
dec
std
xchg
aad
out
xchg
cld
test
lock
xor
sbb
loope
fisubl
or
sbb
dec
lock
xor
div
push
movl
jmp
jecxz
int3
jae
inc
jo
mov
cmp
dec
add
loopne
int3
xchg
ds
shlb
cwtl
insb
inc
mov
pusha
test
inc
cmp
fistl
mov
mov
or
lea
jb
pushf
stc
movw
stc
cmpb
jmp
str
jmp
pushf
mov
jmp
cmc
add
pusha
lea
jmp
push
call
pusha
movl
jmp
lea
ja
call
call
call
mov
pushf
sar
sub
neg
or
and
lea
sub
test
cmc
sub
bt
test
jg
push
pushl
popl
push
pusha
cmp
lea
jnp
ja
ror
sub
push
sub
lea
rol
lea
add
setb
mov
pushf
mov
mov
cmp
bt
repnz
lea
call
rcl
add
mov
bt
pusha
shl
call
sbbb
mov
ret
sub
adc
xor
and
divl
js
fbstp
test
sarl
mov
loope
call
xor
loope
je
cli
sti
imul
jo
sbb
mov
sub
mov
mov
test
dec
shll
sbb
cltd
or
sbb
add
into
push
inc
jp
sti
dec
pop
cmc
ficompl
push
mov
cwtl
sahf
movsl
dec
xchg
lcall
js
call
inc
mov
stc
std
adc
xor
mov
mov
inc
addl
arpl
lret
icebp
jno
in
pushf
out
or
mov
dec
push
pop
xchg
xor
in
fsubs
lret
mov
push
or
xchg
mov
dec
ljmp
test
xor
ja
and
add
sbb
sbb
movzwl
pop
btc
sar
mov
stc
bt
add
movb
pusha
pusha
lea
jmp
mov
cli
xchg
aad
insb
jno
std
in
push
sbb
pusha
cmpsb
lods
mov
inc
sub
int
sbb
jle
pop
jo
popa
push
push
and
enter
hlt
push
cli
xchg
fdivl
dec
pusha
xlat
lods
dec
mov
jb
scas
out
add
stc
shld
aad
les
xor
mov
in
sti
push
das
jl
push
fsubl
xor
mov
xchg
dec
popf
sti
adc
in
outsl
jmp
mov
inc
std
sub
fdiv
push
sbb
push
add
cmp
fwait
adc
bound
mov
cs
cs
sbb
imulb
sti
mov
movl
and
das
dec
push
push
jmp
lea
ja
push
pusha
jmp
xor
lea
pusha
mov
jmp
mov
pushf
cmp
cmp
call
bt
repnz
call
pushf
pushl
rol
test
call
lods
out
stc
xchg
aad
adc
jae
jle
mov
jns
cmp
or
les
mov
lcall
ret
lahf
mov
loope
cld
aad
stos
push
pushf
stos
add
nop
jno
aad
fs
data16
adc
aad
dec
sub
inc
cmp
mov
and
xchg
aad
shlb
insb
arpl
fs
dec
mov
inc
pop
hlt
xchg
cmpsl
lahf
mov
in
loop
mov
pop
test
icebp
xlat
popf
ret
or
mov
in
sbb
cmp
pop
jne
bound
cmp
lret
pop
add
xchg
sete
mov
bsf
bsf
add
pushf
add
neg
test
pushl
mov
cmp
rcr
lea
bsr
add
shl
shrd
movl
bsf
call
lahf
mov
mov
bswap
pop
movsbw
movsbw
bswap
pop
movzbw
pop
pushf
push
pushf
mov
mov
not
pushf
mov
pusha
movb
pushf
movl
pushl
ret
test
add
cmc
mov
jmp
jmp
movb
movb
lea
jne
jmp
shr
jle
xchg
aad
mov
add
pop
add
mov
insb
movsb
jne
cli
lods
insb
lods
leave
ds
pop
cmp
cmp
std
xor
lahf
imull
sahf
push
xchg
adc
push
sahf
and
test
adc
dec
push
push
adc
push
cmp
notb
pop
pushf
clc
xchg
aad
cmp
leave
scas
leave
push
mov
pop
dec
ret
mov
lods
adc
mov
or
xor
loop
push
cmp
out
sub
and
xchg
mov
cmp
mov
bnd
xchg
sbb
jno
or
loop
dec
iret
mov
addb
push
test
fs
xchg
aaa
stos
lahf
dec
stos
push
out
movsb
sbb
and
call
mov
inc
movsl
sbb
xchg
aad
cli
inc
cmpsb
int3
inc
shl
pop
cmp
inc
fs
mov
in
cs
pop
lods
push
pushf
movsb
sub
sub
lcall
dec
and
fisttps
pop
mov
lods
push
mov
sbb
popa
sbb
add
pop
mov
xchg
stc
pop
fiaddl
jecxz
dec
les
add
or
xchg
adc
mov
add
daa
xchg
pop
xorb
out
mov
adc
pop
movsl
fwait
jae
or
addl
js
hlt
pushf
pusha
pushl
push
lea
jmp
inc
push
in
cmc
xchg
aad
dec
ss
test
mov
or
push
imul
xor
adc
cmp
fldl
stos
push
in
pop
cld
xor
sbb
ds
mov
push
pop
xor
sub
xchg
aad
or
push
pushf
add
pop
pop
in
push
pop
push
sub
xchg
stos
push
out
push
fcmovne
in
push
pop
pushf
dec
inc
iret
sbb
or
pop
push
sub
mov
adc
add
fs
inc
jp
or
xor
fcomp
push
inc
xor
push
rcl
pushf
test
and
mov
mov
movsb
loop
jbe
loopne
pop
cmp
popa
push
push
in
ret
jno
inc
or
pushl
xchg
int
jl
xchg
icebp
mov
xchg
xchg
cmp
push
lea
jae
test
or
mov
mov
clc
mov
neg
mov
setbe
sbb
mov
push
cmc
stc
call
dec
adcb
lret
jb
sbb
inc
pop
hlt
shl
sub
xor
incl
dec
adc
inc
enter
movsl
xor
in
inc
in
or
mov
and
jecxz
inc
pop
loopne
dec
orps
add
and
jo
xor
cmp
sbb
push
aam
bound
dec
mov
mov
sbb
jge
pop
pop
nop
pop
dec
pop
ficoml
pop
mov
or
inc
hlt
xchg
cld
cmpsl
fmul
or
pop
xor
aad
clc
dec
push
fnsave
pop
mov
or
mov
inc
repz
cmpsl
in
neg
push
pushf
movb
rol
pushl
movb
lea
call
stc
jmp
movzbw
mov
call
std
push
sub
mov
inc
mov
mov
inc
adc
loopne
bnd
cmc
rolb
dec
cmp
shl
iret
scas
fistps
lcall
pop
out
loopne
push
lods
jl
aad
fmull
jb
fucomp
popf
mov
repz
xor
sub
adc
dec
xchg
dec
repnz
cmp
shrl
sahf
sub
rcl
mov
jle
push
ret
test
xchg
les
jb
mov
and
xchg
insb
mov
jl
inc
rcrl
rorl
jle
popl
mov
mov
lahf
pop
push
xchg
loope
pop
into
and
popf
push
lret
push
pop
ret
pop
mov
scas
or
ret
repz
dec
xchg
cmp
int3
repz
jmp
js
mov
repz
lahf
test
ja
shl
imul
loopne
or
sbb
std
popf
insl
scas
repz
mov
xchg
cmpsb
pop
ret
mov
aaa
inc
loope
ret
dec
mov
sbb
lods
addr16
loopne
ljmp
mov
mov
outsl
inc
xor
rorl
ret
push
out
mov
dec
cs
dec
sar
push
mov
add
shll
mov
lods
adc
mov
iret
imul
mov
in
cmp
ret
cmp
push
cltd
lods
jns
jp
mov
cmp
sub
cmp
push
mov
mov
push
mov
arpl
xor
mov
insb
or
ret
out
sarb
push
roll
push
mov
dec
sti
data16
test
xor
push
mov
push
mov
shl
add
mov
and
add
push
xchg
in
loopne
ret
shll
shll
jp
mov
push
lods
rcll
ret
pop
push
shrl
mov
mov
push
pop
sarl
and
leave
mov
mov
inc
adc
mov
adc
inc
leave
dec
inc
xchg
adc
xchg
leave
add
inc
mov
adc
sahf
pop
push
inc
rorb
dec
inc
dec
mov
adc
sahf
mov
nop
leave
push
inc
iret
mov
or
push
rorb
inc
mov
adc
push
inc
rclb
les
mov
dec
push
or
dec
leave
lret
push
or
and
leave
ss
mov
fbstp
mov
shlb
pop
jg
test
sub
inc
mov
push
ret
xchg
ljmp
sahf
push
sub
rorb
pop
shll
sbb
rol
std
sub
mov
push
push
sahf
xor
sti
mov
rcrl
sub
int3
xchg
cltd
mov
inc
mov
fildll
ret
dec
pop
lds
aad
inc
insb
pop
jp
mov
lcall
pop
pop
ror
xor
outsb
inc
inc
repz
outsl
sahf
movsb
mov
xchg
out
xor
imul
adc
push
lock
mov
les
xorb
icebp
daa
xchg
mov
add
jb
rcl
xor
xor
push
je
ret
push
push
mov
insl
scas
add
loopne
shrb
mov
push
xor
enter
jmp
iret
rol
test
pushf
mov
xor
adc
add
mov
mov
mov
dec
orb
dec
dec
sar
lock
iret
inc
push
rorl
int3
cmp
push
sub
rorl
lods
dec
nop
mov
mov
iret
xchg
lods
or
mov
rorb
push
test
mov
loopne
adc
xchg
xor
lret
inc
data16
inc
dec
popf
xchg
push
pop
adc
xor
xchg
mov
mov
push
cmp
shl
inc
and
inc
xchg
ds
nop
in
test
loopne
xor
mov
mov
jbe
jge
mov
scas
xorb
mov
in
lods
and
mov
mov
xchg
jmp
int
enter
inc
xchg
cmp
bound
mov
rorl
dec
rcrb
pop
addr16
pop
punpcklwd
insb
lret
push
jl
insl
push
dec
scas
out
adc
or
mov
xchg
shlb
jmp
sbb
in
outsl
inc
lods
cmp
xlat
xchg
pop
push
rorl
adc
rol
dec
add
xchg
adc
aam
inc
scas
mov
and
fsubl
test
ss
nop
inc
mov
dec
rolb
test
push
scas
adc
mov
jle
dec
pop
adc
mov
lret
leave
ret
lods
les
or
movsl
mov
pop
rolb
test
mov
dec
scas
push
xor
out
cmpsl
jne
out
pop
xor
xor
pop
lds
dec
repz
pop
pop
daa
enter
push
enter
mov
jnp
xor
outsb
cmp
jl
lahf
outsl
std
out
pushf
rolb
lcall
jg
or
popf
adc
mov
inc
int3
push
and
fisttpll
ja
push
jns
pop
xchg
push
rorb
int3
ja
andb
aad
jo
mov
sbb
scas
cmp
mov
popf
mov
mov
push
mov
xchg
mov
les
dec
cmp
lds
inc
lods
add
in
inc
push
and
mov
lds
push
inc
mov
shll
push
shr
lds
aas
push
xchg
rorb
push
inc
iret
push
rorl
inc
lods
jno
mov
mov
mov
call
dec
push
sbb
in
jmp
dec
icebp
mov
das
xchg
in
ret
push
push
lds
pushf
xor
inc
push
enter
cmp
xor
mov
pop
je
leave
mov
fsubl
jl
scas
dec
jge
scas
sarl
mov
sarl
push
arpl
cmp
pop
lret
xchg
dec
cmp
icebp
and
mov
adc
scas
bound
mov
in
dec
scas
scas
jl
nop
insb
inc
sahf
imul
shll
int
xchg
adc
test
mov
dec
or
iret
pop
or
maskmovq
idivl
push
lret
sahf
pop
dec
inc
pushf
sbb
in
jl
mov
push
call
adc
mov
aas
leave
add
mov
pop
int3
ror
insl
dec
xchg
lods
mov
repnz
push
add
lods
push
ds
lahf
pop
xchg
mov
xchg
or
xchg
enter
fnsave
outsb
mov
shrl
adc
mov
push
rorl
cs
test
mov
mov
inc
fwait
dec
or
into
push
cmp
push
dec
mov
iret
push
sbb
xor
push
loope
jge
add
mov
dec
scas
pop
push
mov
cmp
popf
insl
pop
cmpsl
int3
sti
push
jle
inc
roll
mov
bndldx
push
int
lock
mov
lock
inc
jb
roll
dec
loope
stc
jle
fcmovb
mov
lret
mov
cmp
les
faddl
mov
mov
add
adc
loopne
les
loope
mov
inc
push
test
lods
leave
jno
fnstcw
sub
dec
inc
dec
int
rolb
or
push
repz
jno
cmp
push
jb
mov
mov
sbb
xchg
adc
pusha
addr16
xchg
popl
repz
arpl
xchg
cmp
in
mov
push
les
mov
rolb
leave
subl
popa
xor
mov
out
leave
sub
into
mov
jg
arpl
or
cld
lret
xchg
loope
xchg
out
adc
inc
mov
and
mov
or
jb
mov
dec
or
mov
addb
adc
cli
add
push
daa
popa
cs
into
mov
xchg
fistpl
adc
add
or
rcrb
lods
xchg
adc
loope
ljmp
xchg
inc
cmp
lds
add
arpl
add
addl
mov
add
lods
push
mov
push
xchg
mov
add
pushf
mov
test
xor
inc
cmp
or
rcrl
popf
push
xchg
lods
dec
mov
jp
xchg
lods
in
mov
push
mov
push
incb
rorb
jle
cmpb
mov
sbb
inc
jg
in
popf
sti
push
mov
jle
lcall
mov
xor
mov
dec
inc
enter
mov
repz
jp
aas
mov
xchg
mov
popf
insl
mov
cltd
insl
sub
jns
mov
inc
or
int3
xchg
int3
jp
stc
xor
mov
mov
add
xchg
mov
leave
push
lret
mov
sahf
push
pop
stos
sbbb
sub
add
adc
lock
popf
mov
adc
movsb
jmp
shrl
outsb
lods
nop
inc
lcall
push
lahf
faddl
jl
mov
push
jnp
or
push
or
sub
nop
rclb
push
mov
or
push
aaa
stc
push
mov
sbbl
mov
push
xchg
loope
jge
stos
dec
mov
test
sahf
ds
pusha
fildll
mov
cmp
push
push
jmp
jae
rclb
sbb
mov
shrb
in
scas
xchg
push
jge
lods
inc
ficomps
sub
pop
ds
and
add
xchg
add
xchg
ja
popf
dec
dec
pop
rorl
lds
add
lea
sahf
xchg
scas
cmp
dec
aas
cmp
int
mov
lds
mov
rorl
pushf
and
xor
mov
cmp
dec
movsl
adc
dec
leave
mul
dec
push
inc
int3
inc
inc
sub
cli
dec
sub
jns
stos
std
dec
sbb
push
mov
or
shrb
jae
stos
std
nop
cltd
dec
push
dec
out
sbb
cmpsb
jle
jns
dec
sub
dec
xchg
cmp
hlt
cmp
inc
push
xor
cmp
sarl
jmp
or
das
fwait
ret
mov
mov
dec
flds
adc
std
sub
bnd
lcall
sub
push
mov
cmp
sbb
adc
and
test
add
in
mov
dec
or
ret
dec
sarl
dec
inc
sbb
data16
jmp
insl
ljmp
adc
inc
jb
repnz
xchg
dec
jp
add
clc
test
imul
xchg
and
les
cs
adc
mov
mov
push
lahf
dec
xor
cmp
push
cmpsl
xchg
or
mov
push
cmpsb
mov
js
inc
inc
lods
leave
cmp
rorl
adc
adc
ds
dec
iret
dec
fsubrl
lods
ljmp
fstpl
push
popf
jecxz
pop
leave
adc
test
js
stc
inc
scas
pushf
jns
jns
stos
imul
packuswb
xchg
ret
adc
leave
ret
push
inc
dec
inc
push
nop
inc
dec
add
inc
rcll
mov
mov
cmp
dec
stos
jmp
test
cmp
inc
mov
cmp
popa
jb
mov
mov
shr
xchg
mov
inc
cmp
mov
mov
inc
inc
dec
xchg
jecxz
push
jno
push
mov
mov
in
cmp
cwtl
or
inc
cmp
das
rorl
rorb
cmpsb
inc
movsl
sub
rcr
sahf
ds
fistps
out
sub
insb
iret
movsl
out
movsb
adc
es
and
test
int3
add
outsl
cmpsl
call
xchg
push
push
das
movsl
push
sub
js
rclb
in
test
xchg
test
mov
int3
movsl
xchg
inc
ret
jae
call
lea
mov
pop
sub
iret
lahf
adc
fcompl
mov
jl
sahf
outsb
jg
pushf
aaa
cmp
gs
xlat
push
in
adc
scas
or
mov
scas
mov
xchg
mov
or
pushf
out
add
push
xor
dec
sub
and
sub
push
dec
pop
mov
pop
aad
xchg
cwtl
in
test
addr16
jnp
lods
cmp
xor
daa
lock
or
stos
jne
cltd
test
sti
mov
test
xchg
jl
mov
or
mov
scas
ret
mov
push
mov
xorb
mov
into
mov
push
sub
mov
clc
push
leave
dec
sti
or
ret
jg
les
ret
mov
inc
cmp
pop
sub
stos
ret
push
das
push
sahf
push
cmpsl
push
loopne
push
ror
mov
xchg
dec
xor
into
sahf
shll
push
ret
mov
lret
add
inc
ret
xor
insl
mov
mov
or
jle
lods
cmpl
or
insb
add
dec
push
cli
xchg
xor
out
jp
mov
adc
cmp
xchg
push
jl
in
out
lret
push
fistpll
xor
add
mov
xchg
push
jmp
int
dec
jae
ret
push
mov
js
jl
lea
xchg
inc
scas
mov
sahf
in
ds
stos
in
jecxz
sti
lret
sub
adc
adc
shlb
test
mov
xor
mov
lahf
call
shll
addr16
adc
decb
mov
sarl
jo
jl
or
sub
dec
push
adc
in
add
mov
sti
xor
push
movsb
mov
pop
mov
sarl
xchg
mov
pop
ds
mov
dec
addr16
push
or
adc
sub
lods
hlt
pop
lods
bound
mov
jge
dec
ljmp
mov
push
mov
roll
push
loope
xchg
or
push
iret
stc
push
icebp
les
notl
lea
push
into
flds
mov
cmp
and
xchg
push
shrl
nop
into
mov
filds
bound
bound
sar
sbb
scas
rol
jle
and
pop
rcr
mov
iret
mov
inc
dec
xchg
xor
adc
inc
icebp
xchg
pop
push
pop
fld
addr16
fwait
mov
jb
adc
ret
xchg
or
rcll
fiadds
xchg
test
loop
bound
pop
sbb
lods
fldl
jecxz
outsb
or
xchg
gs
imul
mov
mov
pop
add
xchg
and
jns
add
stc
or
divl
push
rorb
lret
subl
adc
les
sbb
xor
dec
mov
shll
inc
les
pusha
dec
inc
push
icebp
adc
inc
cmpl
iret
stc
enter
xchg
xchg
add
xor
iret
data16
rcrl
sub
push
dec
xor
ror
xchg
mov
jmp
adc
or
loopne
sti
inc
cmpsb
dec
fidivl
stos
mov
inc
or
and
es
ret
pop
inc
dec
xchg
or
xor
push
push
jl
fistps
enter
push
popa
scas
out
shlb
rcrb
dec
or
lcall
xchg
lds
stos
dec
icebp
cli
shl
xchg
mov
cmp
cmp
cs
xor
icebp
dec
pop
sbb
and
and
sub
lret
mov
mov
xchg
mov
sub
inc
mov
mov
cmp
mov
nop
dec
int3
mov
mov
cmp
popa
push
dec
cmpsl
cmp
test
cmp
mov
nop
or
mov
dec
push
cmp
dec
xchg
fs
test
enter
mov
nop
in
dec
push
mov
rcl
dec
daa
pop
xor
xchg
lret
dec
mov
or
rcll
inc
dec
imul
mov
jle
xchg
mov
or
roll
dec
sub
push
ret
jbe
push
inc
sub
in
cmp
xchg
rorl
mov
dec
sub
nop
push
imul
rcll
dec
xchg
mov
sub
push
mov
shrl
mov
insb
into
ret
lea
cmp
cmovb
cmp
mov
nop
int3
dec
iret
mov
or
into
mov
cmp
stos
mov
sub
cmp
mov
dec
es
mov
nop
lods
dec
into
jns
or
xchg
inc
out
mov
nop
and
sub
out
mov
nop
insl
dec
outsb
mov
push
icebp
into
xchg
cmp
mov
inc
test
jmp
ret
in
mov
xchg
jo
xor
inc
push
shll
lea
inc
inc
outsb
mov
mov
dec
cmpsl
mov
push
dec
sub
mov
mov
nop
lods
dec
scas
mov
push
inc
into
fiaddl
popa
inc
mov
test
insb
nop
sub
mov
mov
cmp
shll
movsb
nop
movsl
dec
mov
leave
lret
mov
nop
lods
dec
mov
lock
xchg
shll
test
lret
mov
mov
mov
mov
mov
xchg
xchg
out
dec
out
ret
ss
stos
inc
lods
nop
int
push
mov
daa
inc
mov
xchg
scas
into
roll
adc
add
inc
and
dec
xchg
mov
aaa
mov
loope
sarl
popa
push
cmp
mov
mov
jo
inc
mov
inc
cwtl
dec
es
mov
imul
cmp
inc
adc
bound
jb
cmp
mov
and
leave
jp
es
rorl
or
jo
rorl
cmp
inc
mov
mov
dec
cmp
mov
nop
dec
push
mov
mov
ljmp
mov
xchg
push
dec
jo
jae
dec
mov
cmp
push
call
mov
mov
mov
repz
dec
mov
iret
mov
nop
imul
mov
and
mov
cmc
xchg
push
dec
adc
sub
test
mov
movl
adc
mov
in
xchg
popa
ret
sarb
jg
xchg
jb
push
adc
inc
shlb
inc
iret
sbbb
sub
dec
pusha
cmpsb
daa
xor
popf
push
cld
push
insl
dec
lock
adc
inc
cmp
in
loope
call
sub
sahf
repz
mov
adc
add
xchg
mov
push
mov
inc
jb
ror
mov
sub
jl
push
mov
or
cld
xchg
fidivl
and
inc
inc
adc
rorl
push
xor
sahf
icebp
jne
dec
clc
push
insl
push
pop
sub
es
lret
insb
sub
xchg
and
dec
xor
mov
mov
xor
imul
xchg
sub
add
mov
stc
pop
jmp
lods
lcall
inc
nop
jp
or
inc
lret
add
dec
sbb
inc
pushf
xchg
ficompl
add
shl
popl
rclb
xor
cld
adc
outsb
int
inc
mov
push
lret
adc
sahf
and
outsl
fs
sub
icebp
push
push
ret
fbstp
outsb
into
lret
mov
jb
repz
cmp
fstps
mov
xchg
mov
popf
cmp
rclb
sub
cmp
fstl
and
movsb
sub
nop
push
in
pop
inc
es
adc
mov
daa
jb
inc
xchg
in
enter
jb
sbb
or
movsl
int3
lcall
aaa
lods
cmp
adc
fwait
nop
rorl
cmc
test
sbb
adc
mov
xor
mov
pop
jl
sub
mov
lret
ror
xchg
cmp
adc
cmp
cwtl
mov
lods
xchg
mov
push
shll
push
or
roll
in
fldln2
push
jl
ficoml
sbb
mov
or
inc
mov
mov
push
sub
lods
ret
sbb
jp
stos
lods
ret
mov
aas
xchg
mov
pop
rcrl
dec
sub
xor
int
call
repnz
int
mov
lret
mov
adc
mov
shll
inc
ljmp
inc
imul
pop
and
pop
nop
adc
and
mul
int
jge
cmc
shll
iret
adc
bound
data16
jae
push
add
mov
xor
pusha
adc
push
into
push
test
adc
xor
pusha
jge
inc
push
inc
inc
jl
lahf
nop
mov
dec
adc
inc
cmpsb
rcll
push
mov
loopne
sar
mov
std
ds
into
cmpsl
jecxz
outsl
ljmp
pop
jl
pushl
jle
mov
sar
out
sarb
mov
int3
cld
sbb
insl
mov
inc
movsb
inc
mov
ret
imul
adc
push
jae
mov
pop
addl
fnstcw
pop
and
aaa
add
mov
into
fnstcw
movsl
inc
xchg
mov
sub
inc
sbbb
pop
lock
and
mov
pop
fnstcw
lcall
fs
push
inc
xor
adc
mov
push
jmp
aaa
cwtl
loopne
mov
addb
mov
mov
mov
cmpsl
imul
pop
inc
dec
aaa
ds
mov
sbb
mov
push
fnstcw
pop
mov
loopne
rcr
adc
mov
fstps
aaa
stc
fnstcw
cwtl
inc
cltd
pop
mov
mov
mov
jl
mov
mov
sti
adc
pop
pop
out
test
mov
aas
add
clc
insl
adc
pop
int3
int
jg
out
pop
sbb
std
pop
loopne
sarb
or
out
loopne
imul
scas
ja
nop
mov
ljmp
cs
pushf
insl
rol
pop
ss
mov
aas
testl
adc
xchg
or
pushf
scas
jg
stos
fucomip
pop
lret
filds
out
into
and
xchg
or
iret
adcl
popf
inc
lret
pop
out
mov
ds
stos
and
out
in
pop
mov
xchg
jnp
sbb
inc
mov
and
sbb
adc
insl
subb
jne
pushf
xlat
repnz
mov
or
jae
pop
leave
shlb
icebp
push
pop
dec
rorl
lds
pop
pop
rcrb
cmp
dec
nop
dec
jl
adcl
loope
movsl
inc
jb
insl
leave
xor
push
aad
push
add
negl
scas
adc
scas
movsl
inc
outsb
icebp
push
mov
lahf
push
cmp
mov
push
lock
dec
lock
lods
push
popf
dec
dec
cmp
cwtl
rcll
shll
adc
mov
mov
enter
push
or
pop
mov
lahf
std
push
push
push
cmp
out
adc
push
sbb
jecxz
push
pushf
scas
inc
or
ret
inc
push
repz
or
sbb
clc
aad
mov
in
stos
sahf
jle
insl
pop
push
and
jecxz
sbbb
push
std
sbb
enter
xchg
adc
mov
cld
cmpsb
push
lret
fidivrl
mov
adc
shll
cmp
push
rcll
nop
loop
outsb
loopne
inc
pop
inc
mov
int3
pop
rolb
push
movsl
adc
pmaxsw
int
insb
sti
repz
insl
bound
and
adc
jge
mov
xchg
dec
cmpsb
stc
dec
test
das
lea
daa
push
xchg
js
xchg
cmpsl
jae
movb
inc
mov
rorl
dec
outsb
mov
sub
rcll
fs
pop
mov
xor
outsl
inc
loopw
orb
jb
and
xchg
pop
outsl
mov
xchg
sub
cmp
data16
push
loope
cmp
out
pushf
and
jae
ss
in
push
add
clc
rcrl
and
inc
into
add
sub
inc
adc
cmp
in
mov
inc
ret
jb
pop
xchg
xor
push
and
mov
cmp
and
jno
jg
xor
orl
inc
pusha
insl
pop
mov
enter
jl
lods
jge
shl
lods
and
lods
mov
ret
mov
cld
roll
jb
stc
jle
int
mov
mov
add
adc
mov
xchg
add
xor
dec
dec
imulb
scas
fisubrl
mov
xor
mov
sbb
mov
mov
int
pop
mov
fwait
mov
popa
mov
push
shlb
outsb
iret
ds
subl
jp
cmpsb
lods
pop
cmp
xor
add
and
xor
inc
mov
sbb
in
xor
xor
add
mov
push
call
aaa
adc
dec
cli
sbb
inc
stos
out
in
in
filds
scas
mov
mov
mov
mov
sub
mov
sbbb
pushf
rclb
xchg
dec
mov
push
add
dec
jl
std
xor
xchg
add
xchg
lcall
cltd
xchg
inc
and
cmp
cmp
int3
iret
loopne
mov
fnstsw
inc
ss
inc
push
xchg
mov
xor
adcl
cmc
iret
cmp
mov
or
push
nop
loopne
and
adc
push
pop
lock
sub
lea
mov
ror
xchg
jo,pt
std
sbb
xchg
shrl
jmp
stc
ljmp
mov
mov
pusha
add
inc
cltd
enter
incl
adc
into
jb
inc
push
std
dec
into
push
mov
std
mov
adc
mov
out
jl
lds
mov
jns
mov
dec
pop
js
dec
or
inc
loopne
out
inc
jns
inc
sub
aas
sub
iret
inc
adc
push
push
push
xchg
mov
push
add
leave
bound
jl
dec
adc
sbb
add
shll
mov
fists
stos
or
cmpl
jo
push
or
inc
jo
in
push
pop
dec
int
ss
inc
sub
push
lcall
data16
sbb
cld
mov
mov
int
jp
mul
std
mov
repz
jecxz
or
pop
inc
dec
or
int
icebp
jno
xchg
aad
dec
sbb
lcall
adc
jg
filds
or
cmp
out
scas
ds
jo
fs
xchg
adc
rorl
push
mov
mov
adc
push
cmpsl
mov
in
dec
xchg
push
test
sbb
xor
sub
stc
mov
into
xlat
pop
sub
mov
dec
mov
fstp
fs
stos
out
jmp
sub
cmc
push
inc
mov
int
inc
sbb
cli
jns
sbb
push
or
into
dec
push
in
xor
pop
stos
daa
adc
mov
dec
sbb
mov
mov
push
insb
in
xor
mov
lods
movsb
shll
dec
popa
fcompl
xchg
loop
sbb
mov
mov
mov
int3
int
dec
push
stos
mov
and
cmpsb
cltd
dec
repz
push
nop
and
mov
adc
xchg
lahf
mov
dec
addr16
jle
xor
mov
sbb
insb
sub
mov
pop
sub
lods
mov
imul
push
aad
aam
lcall
push
mov
sbb
cld
adc
cmp
or
push
jns
icebp
rorb
stc
stc
sti
pop
inc
and
notb
test
adc
pop
je
and
out
pop
mov
xchg
adc
adc
lahf
int3
sub
roll
nop
out
xchg
adc
fs
pop
mov
popf
or
sahf
jp
adc
ret
jae
or
ret
aaa
xor
sub
pusha
mov
rolb
push
std
jbe
dec
nop
sbb
cmpsb
imul
ss
outsb
cmp
fsubrl
inc
arpl
scas
in
sarl
dec
mov
leave
movsl
mov
mov
in
stos
mov
mov
jae
xchg
aas
lds
and
loop
push
dec
inc
faddp
dec
loopne
fisubl
mov
sahf
push
adc
shl
in
sub
mov
out
mov
dec
mov
push
xor
mov
fs
lcall
cmp
push
xchg
stc
pop
pop
iret
aaa
add
jae
bswap
and
xchg
in
and
leave
adc
cmpsb
xor
adc
mov
data16
fs
push
rcrb
loopne
or
push
dec
shll
bswap
ret
loope
push
jl
mov
je
dec
and
cmpsl
fisttps
cmpsl
mov
test
stos
jnp
adc
jns
xor
aaa
xchg
addr16
xchg
mov
jge
add
jnp
dec
scas
mov
in
pop
jb
into
dec
iret
adc
dec
xchg
inc
dec
loopne
lcall
or
loopnew
std
jg
popf
and
shrb
nop
sbb
lcall
and
iret
rolb
push
mov
pusha
outsl
jo
int
mov
mov
repz
sarb
loope
mov
and
mov
loop
int3
movl
or
in
in
xchg
mov
mov
xchg
mov
out
dec
jns
sbb
popa
pusha
test
repnz
dec
ret
adc
push
into
in
outsb
rcl
mov
sbb
adc
cmp
and
mov
or
and
sbb
mov
push
push
mov
movsl
pusha
sbb
addb
inc
fnstsw
mov
xor
shr
mov
daa
mov
shll
stc
jmp
repnz
add
push
dec
jg
xor
pop
popa
inc
push
stc
pop
mov
xchg
sbb
push
mov
sub
mov
and
std
add
jno
scas
and
lcall
inc
leave
xor
jp
cmp
in
lret
outsb
mov
adc
sub
mov
lods
mov
jae
sub
and
test
test
inc
inc
push
fdivl
ljmp
xchg
mov
xchg
xchg
xchg
mov
jg
nop
shll
stos
sbb
inc
mov
int
sub
rcl
mov
xor
sbb
out
dec
mov
xchg
jne
pusha
mov
mov
push
dec
sarl
or
rorb
inc
lret
insb
pop
and
mov
pushf
adcb
xor
adc
int3
sub
pop
mov
xchg
popl
push
jmp
mov
shrb
into
popa
cmp
in
jbe
pushw
inc
push
or
pusha
sbb
fstpt
fisubrl
pushf
jge
aam
lcall
cmp
ljmp
in
lret
mov
pop
sub
xor
rcll
sbb
int
addl
xchg
mov
adcb
shlb
mov
jno
test
mov
inc
xor
mov
pop
lods
mov
out
cs
and
in
int3
iret
xchg
mov
popf
scas
push
ret
in
sbb
fldcw
in
aam
xchg
sbb
jno
xor
clc
idivl
inc
xor
ret
insb
out
jb
loope
add
sbb
aas
add
loop
leave
add
push
insb
and
fdivs
es
mov
inc
cmpsl
lcall
jo
xchg
fst
insb
push
pop
test
add
xor
or
das
out
lods
loop
adc
pushf
pop
xor
or
mov
lcall
iret
dec
in
shrl
xchg
dec
inc
int3
sub
mov
das
insb
aaa
xchg
cmp
xor
xchg
cmp
push
outsl
ds
push
and
jo
mov
ret
adc
xchg
or
sbb
lret
and
lret
test
enter
popf
rcll
ss
dec
cmpsl
fidivrs
cmp
call
jl
addr16
icebp
aam
ret
sbb
rcll
mov
je
pop
shrb
aaa
adc
xor
push
and
cmp
test
jb
dec
inc
int
xlat
mov
push
mov
and
ret
mov
fimuls
jg
lahf
mov
add
mov
dec
inc
push
sbb
popa
shll
imul
xchg
push
test
cmp
push
scas
inc
xor
ret
mov
sub
inc
inc
ret
jg
mov
xchg
push
jnp
mov
and
cmp
dec
pop
and
add
test
int
jecxz
xorl
lods
add
and
repz
or
rolb
push
adc
cmp
mov
push
adc
push
mov
mov
push
push
sub
mov
adc
insb
fwait
mov
outsb
inc
ljmp
jg,pn
call
cli
pushf
ret
lret
xor
ja
sahf
aad
mov
cwtl
arpl
es
xor
mov
push
push
aam
ret
scas
push
jle
out
mov
sbbl
xchg
mov
aad
pop
inc
lods
inc
ret
and
lods
fldenv
adc
push
leave
fdivrs
sub
jg,pn
adc
mov
dec
mov
ss
into
inc
aas
out
push
in
xchg
inc
sbb
jle
std
xchg
push
jge
dec
fadds
inc
ret
cmp
lods
jecxz
data16
fmull
sarb
xorl
jb
scas
std
int
fmull
ret
outsb
es
push
push
pop
rcrb
push
addr16
inc
mov
bound
xchg
out
iret
push
inc
mov
inc
mov
in
fsubrl
shll
popf
inc
mov
incb
pop
in
jno
mov
aad
inc
inc
incb
inc
icebp
rcrl
inc
insb
add
jl
mov
inc
mov
cmp
out
jecxz
mov
or
jmp
imul
adc
popa
fiadds
in
push
jg
imul
mov
and
push
dec
cli
aaa
jle
xor
add
xchg
sbb
mov
fimuls
cmpsb
out
mov
popf
mov
add
enter
and
sub
pop
loop
add
xor
rclb
and
das
push
or
inc
gs
popf
mov
lods
popf
push
dec
mov
jo
out
xorb
xor
push
iret
push
adc
popf
int
lds
adc
inc
std
jmp
push
push
jle
sub
or
ret
inc
in
scas
divb
int
push
adc
out
and
mov
add
or
jl
dec
jnp
rol
pop
and
std
fbld
mov
pop
xor
ror
insb
lret
jecxz
in
mov
into
es
xor
mov
pushf
sahf
xchg
loopne
push
sbb
nop
jg
and
rcl
jno
hlt
xchg
and
aaa
in
xchg
mov
in
std
add
shr
xor
mov
scas
out
pop
std
lcall
inc
xchg
lods
dec
rcl
adc
push
imul
and
add
push
call
xor
jns
xor
dec
cmp
incb
add
test
pop
inc
lods
cltd
mov
xor
js
outsb
dec
inc
dec
jp
mov
mov
push
xor
std
test
mov
xchg
adc
xorb
add
sbb
shll
mov
inc
sub
addl
lods
push
shrl
cmp
inc
insb
mov
test
inc
insb
cmp
cmc
mov
jp
xlat
shrl
or
inc
rorb
inc
jmp
out
pop
mov
xor
and
imul
imul
insl
mov
ret
into
xor
mov
mov
pop
mov
mov
aas
adc
mov
aaa
xor
mov
and
mov
icebp
pop
xor
addr16
rcl
inc
out
adc
addb
fs
pop
ljmp
xchg
notl
cltd
mov
mov
sahf
je
mov
jle
fnsave
inc
cmpsb
in
lea
and
divl
mov
xor
fsubrs
lods
out
ds
js
push
rcrl
jo
add
sub
sti
mov
pop
inc
dec
mov
xchg
push
pop
stc
rcr
mov
mov
and
idivb
mov
ja
jge
stos
not
leave
jb
adcb
outsl
mov
adc
pop
mov
inc
mov
add
fwait
scas
pop
sbb
iret
push
jle
repz
pop
adc
lcall
rorb
push
cmpsw
popa
xchg
jbe
mov
lcall
mov
cmp
bound
sahf
jecxz
mov
push
orb
jbe
into
push
dec
repnz
stc
adcl
adc
push
jne
test
adc
lcall
into
lods
scas
sarb
dec
push
repz
dec
inc
pop
adc
fdivs
adc
push
sub
inc
int3
rorb
es
mov
rclb
mov
insb
mov
sbb
data16
push
ret
into
mov
xor
ficoml
cmp
shl
loopne
or
int3
pop
push
inc
jg
mov
cmp
dec
mov
faddp
cmp
shrd
jb
cld
xchg
in
ss
add
xchg
push
jb
int
sub
dec
and
out
leave
cs
dec
aam
sbb
jge
mov
outsl
mov
jb
xor
xchg
cmp
mov
cmp
inc
nop
xor
imul
xor
cld
lret
inc
sub
sti
or
pop
jb
xchg
insb
xchg
sti
push
movb
xlat
shlb
dec
testb
and
sub
xchg
insl
cmp
pop
aad
ss
movsb
out
xor
es
xchg
dec
scas
mov
sbbb
mov
out
ret
and
mov
sti
clc
decb
cmp
mov
aas
rorl
adc
mov
mov
daa
pop
push
sti
xor
mov
add
add
sub
fnsetpm(287
addb
adc
cs
mov
insb
adc
sbb
cmp
or
rcrl
int3
adc
sbb
sahf
pop
xor
popf
inc
mov
mov
and
testl
js
or
mov
pop
rcrl
pop
fdivrl
ret
fs
jno
mov
bound
xchg
adc
pop
dec
xchg
or
jmp
cmpb
jecxz
cs
fnstsw
in
ds
popf
jecxz
pop
jp
mov
push
inc
and
and
dec
jp
sarl
mov
pop
push
and
mov
mov
pop
mov
sbb
das
out
jl
pop
sub
out
insb
cmp
adcb
int
sarb
gs
mov
pop
ljmp
lret
sbb
shll
out
push
shlb
movsl
add
test
add
jno
pop
in
repz
sti
mov
stos
lret
sbb
ss
and
add
scas
int
stos
enter
adcl
aaa
inc
xor
adc
push
into
dec
mov
data16
adc
inc
dec
or
adc
rcrb
ficoms
popf
clc
and
push
inc
xchg
dec
push
out
cmp
inc
inc
push
shlb
mov
or
dec
movsb
add
adc
flds
push
bound
addr16
lcall
jb
jge
test
ficoml
lcall
int3
and
mov
clc
and
ret
inc
int
sbb
lea
dec
push
push
xor
lcall
mov
adc
mov
push
adc
adc
lods
test
jle
xchg
shrb
clc
mov
jne
pop
out
inc
jb
cmp
ljmp
ret
inc
mov
jnp
in
sarl
out
shrd
cmp
loope
jle
test
daa
push
outsb
or
scas
jno
inc
push
in
jle
insb
dec
pop
dec
xchg
pop
roll
mov
and
insb
inc
mov
push
lret
stc
inc
xchg
sbb
loop
scas
xchg
ljmp
mov
xchg
js
push
or
mov
xchg
pop
scas
rcr
and
sub
out
lock
ret
inc
mov
iret
pop
mov
jg
mov
jae
fisubrs
mov
xor
dec
pop
lds
mov
push
shl
push
popf
fistpl
pusha
jle
outsb
out
data16
mov
pop
in
xchg
movsl
xchg
in
pop
xchg
adc
and
popl
push
scas
out
nop
adc
stos
mov
pop
push
pop
push
int
sub
inc
icebp
mov
sbb
popl
jno
popa
lods
inc
sbb
or
and
cwtl
mov
mov
stc
loop
aaa
mov
mov
test
push
out
mov
in
movsl
mov
cld
mov
lcall
test
sub
xlat
test
mov
mov
xchg
adc
outsl
xchg
pop
fs
add
jae
dec
aas
jg
sarb
clc
adc
push
mov
mov
mov
call
xor
push
jmp
xchg
stos
clc
jecxz
mov
xor
stc
mov
pop
sbb
outsl
cmp
inc
xor
xchg
lock
cmp
push
test
add
shll
int3
dec
icebp
xor
adc
jbe
jl
mov
popf
clc
and
mov
sbb
outsb
jno
faddp
enter
lods
sub
push
mov
shll
jbe
mov
xchg
rcll
xchg
pop
ss
push
mov
popa
xchg
or
test
xchg
sahf
xchg
test
into
pushf
xchg
inc
or
enter
mov
dec
mov
add
mov
jle
jecxz
sarl
inc
pop
push
gs
sub
clc
xchg
dec
push
jge
xor
xchg
xchg
xchg
cmpsb
mov
test
push
jp
jp
dec
enter
adc
add
xchg
int
in
mov
out
mov
inc
shl
xchg
shl
or
or
add
dec
or
adc
popa
out
pop
bound
lret
popf
inc
nop
or
imul
jmp
adc
rorl
lock
mov
jmp
mov
jle
les
fcmovb
icebp
jae
mov
mov
adc
adc
mov
stc
jmp
mov
mov
lahf
orl
stos
mov
je
sub
mov
int
cwtl
loopne
call
adc
jle
jle
sbb
or
int
in
andb
loope
jmp
into
int
bound
ds
xor
test
mov
push
push
inc
lahf
add
mov
sub
inc
clc
bound
loope
lock
repnz
mov
push
jle
cmp
mov
mov
jg
mov
inc
les
adc
dec
mov
imul
jb
inc
sub
cmp
pop
adc
js
cs
cltd
fdivrl
or
fstl
pop
ret
dec
dec
add
cltd
fwait
jo
or
sbb
and
pop
rorl
loop
and
dec
push
in
adc
test
cld
mov
or
jge
fcoms
xchg
lcall
cmp
cmp
into
mov
adc
sub
xchg
call
xor
add
pop
lock
andb
adc
int3
push
loope
mov
dec
loop
xlat
jg
xchg
and
push
repz
add
and
js,pn
jnp
addr16
cli
fldl
into
mov
inc
popf
push
aas
subl
imul
and
fldl
fstpt
or
push
inc
inc
add
out
xchg
ffreep
xchg
cmpsl
pop
movsb
scas
xchg
xchg
cmp
into
dec
dec
inc
popf
daa
cmp
pop
nop
pop
aad
lcall
icebp
rcrl
loop
mov
das
inc
int
or
push
aam
stos
jno
adc
ret
and
dec
shlb
mov
scas
dec
sub
test
mov
fstl
mov
lret
aas
das
rol
add
addr16
sub
rcll
sbb
pop
cmpsl
sub
int
jne
sub
jnp
scas
jmp
inc
ss
nop
in
sti
shrb
cwtl
cwtl
mov
mov
mov
scas
out
jmp
sti
push
shrb
xlat
insl
add
mov
mov
lds
popa
cld
inc
push
cmp
scas
popf
bound
insb
outsb
xor
movsb
mov
subb
inc
sub
lock
mov
or
lods
xor
adc
xchg
bound
stos
insl
xor
adc
lods
adc
push
rol
dec
or
scas
add
inc
or
ds
lods
das
daa
fcoml
xor
sarl
push
or
mov
std
ja
inc
in
cs
jp
dec
les
test
cmp
sub
cmp
ror
into
sub
mov
sub
fisubl
test
xchg
mov
pop
mov
sahf
mov
scas
rcll
mov
inc
arpl
ret
dec
cmpsl
xchg
mov
xor
jne
xor
cmp
out
push
inc
lock
shlb
or
dec
je
sahf
dec
push
inc
lret
lahf
lea
sbb
outsl
test
rol
and
cmpsb
push
fmul
lret
inc
test
xchg
fs
stc
ljmp
orl
add
pushf
or
imul
subb
lret
inc
pop
mov
mov
sbb
or
cmpb
test
into
pop
and
xchg
xchg
cld
insb
jb
loope
les
jecxz
or
mov
dec
mov
inc
mov
push
jg
stc
icebp
inc
sbb
mov
xchg
or
adc
sub
imul
pop
xchg
paddw
push
std
popf
sti
pusha
les
ja
bound
sar
jg
pop
imul
test
sub
int
mov
cmp
ja
in
pop
inc
inc
xchg
sarl
mov
movsl
and
xor
push
mov
aas
mov
pop
and
es
bound
and
adc
and
inc
and
seto
imul
incb
out
and
adc
lods
inc
push
sub
inc
and
push
adc
push
adc
iret
mov
mov
stos
jecxz
push
mov
xchg
sbb
ret
inc
aad
lea
into
push
push
fmulp
cmpsl
mov
out
ret
and
mov
sti
aam
movsb
aad
add
adc
cmpsb
cmp
out
sbb
sbb
pusha
inc
add
setle
cmpsb
mov
das
xor
ret
jns
scas
and
mov
adc
sbb
nop
loop
mov
lds
xchg
sbb
mov
movsl
inc
inc
push
adc
xor
inc
jl
xor
jo
xchg
stc
call
push
pop
adc
les
repnz
in
cmpsl
and
jg
rorl
insl
dec
int
sub
dec
mov
frstor
dec
mov
jb
jle
mov
push
sub
jno
mov
add
jmp
aam
mov
lcall
addr16
add
mov
inc
mov
xchg
cs
add
pop
jle
mov
mov
and
mov
adc
mov
mov
lods
xor
dec
stc
lahf
in
mov
seta
or
arpl
mov
jae
inc
inc
inc
pop
in
popf
cmc
mov
dec
xor
or
mov
outsl
xchg
jl
xor
stos
icebp
dec
cltd
add
jno
clc
outsl
test
sarl
inc
inc
in
aam
out
lahf
dec
hlt
ret
xchg
movsb
in
sub
fistpll
xor
xchg
rcrl
inc
insl
lret
popa
movsl
push
lret
xchg
mov
inc
add
scas
shll
sub
ljmp
inc
cmp
adc
inc
inc
lods
jns
ds
outsl
mov
xchg
dec
into
out
aam
in
popa
mov
jb
mov
pop
adc
cltd
fadd
or
mov
outsl
xor
cmp
iret
sti
rclb
or
iret
dec
push
gs
inc
inc
fists
mov
cmp
dec
int3
xchg
adc
mulb
mov
dec
mov
sbb
loop
jb
sub
testb
pop
add
orb
popa
inc
jg
sarl
rclb
lret
mov
call
in
push
adc
mov
mov
shlw
push
xor
pop
add
mov
push
gs
adc
mov
ds
idivl
pop
shl
mov
jno
cmpsb
enter
popf
or
repz
sahf
js
mov
or
shll
bound
pop
lds
mov
push
fidivrl
pop
pop
cmp
cltd
iret
mov
test
mov
mov
pop
dec
cmp
sub
movsl
out
mov
push
cmp
mov
ss
or
cmp
add
mov
pop
jp
into
dec
inc
lods
xchg
dec
ds
add
sub
lock
pop
jbe
nop
mov
loope
pop
cmp
push
push
xchg
into
sbb
adc
rcrb
xchg
inc
jp
jnp
jns
loope
xchg
lock
xchg
dec
xor
ljmp
pop
into
movsl
adc
lods
shrb
add
xchg
outsb
xchg
inc
stos
push
adc
sbb
outsb
popa
popf
ds
arpl
nop
ror
mov
fcmovb
mov
xchg
inc
cmp
or
ret
sub
insb
out
jmp
dec
xor
cs
in
mov
mov
push
clc
dec
pop
mov
jl
pusha
stc
outsb
adc
pop
inc
cmp
loope
lcall
sbb
or
repz
mov
sbb
mov
ffreep
lret
or
add
cmp
sub
shrl
iret
cltd
or
pop
jbe
test
and
das
pop
jnp
push
fdivrs
mov
pop
cmp
xchg
rorl
jp
inc
sbbb
sub
clc
jno
mov
pop
or
inc
sub
jmp
shlb
push
jle
loop
mov
push
mov
sub
aaa
arpl
mov
mov
aas
cmp
pop
ret
fnstenv
cmc
aaa
lcall
pop
bound
loope
mov
lods
dec
insl
into
cmovl
push
xlat
jp
scas
jb
cmp
mov
insb
pop
mov
cld
pop
adc
lcall
ret
icebp
dec
pop
sub
mov
xorb
imul
or
lcall
push
scas
push
test
les
rclb
inc
jo
leave
jb
rclb
into
rcll
mov
push
imulb
rorb
sbb
pusha
sbb
stos
iret
addr16
clc
add
pop
outsb
inc
enter
out
inc
stos
add
cmp
xchg
stos
push
inc
out
mov
popf
gs
jge
insb
andb
push
and
inc
jmp
xchg
add
dec
jno
into
mov
push
mov
cmovle
sarl
push
popl
xor
mov
inc
outsb
shrl
pop
addb
lods
ret
mov
pop
xchg
pop
xor
mov
dec
addr16
arpl
ret
jmp
push
push
jg
loop
mov
jle
cmpsb
dec
push
bound
xor
xchg
pop
popf
shll
xor
lds
in
repz
sbb
jg
xchg
outsb
nop
imul
inc
pop
mov
lods
mov
jle
lods
idiv
test
pop
adc
cmp
lods
fildl
lds
cmpsb
je
jbe
xchg
push
mov
dec
push
mov
roll
xchg
push
adc
bound
jmp
pop
add
rcll
lcall
repz
add
mov
push
jo
lea
fnstenv
fcoms
mov
sbb
in
mov
pop
scas
sbb
mov
popf
test
push
stc
dec
rolb
inc
adcb
in
aaa
mov
dec
pushf
ret
and
sbb
push
cmp
push
dec
addr16
cmp
adc
cli
pop
lcall
scas
mov
jb
xchg
push
inc
xchg
mov
cltd
push
mov
sub
jb
cmp
inc
mov
jl
mov
dec
lea
xchg
sarb
test
sub
xor
aam
push
pop
pop
repnz
xor
mov
jmp
insb
or
jg
fisttpll
stc
jmp
lods
loop
fbld
bound
fcmovnbe
cmp
and
mov
stc
xorb
sub
dec
mov
inc
inc
fs
pop
and
dec
push
ds
lods
movsw
enter
lods
lret
xor
mov
mov
mov
push
repz
cmp
enter
adc
hlt
clc
shl
mov
and
orb
popf
faddl
cmpsl
das
jnp
inc
into
mov
enter
dec
mov
push
xchg
fwait
cmpl
cwtl
or
lret
lea
jne
pop
les
adc
xor
mov
cmp
out
shll
leave
xchg
push
mov
lcall
mov
test
inc
cmpsb
adc
mov
dec
lea
jecxz
sub
push
mov
sbb
jl
icebp
jmp
ljmp
into
aaa
sbb
inc
jp
lret
adc
rcll
cmp
jmp
aaa
insl
inc
std
dec
jp
sbb
push
in
pushf
or
push
inc
jbe
jge
shlb
fidivrl
mov
inc
mov
sbb
adc
scas
mov
pop
adc
dec
adc
xor
into
sbb
jae
jg
xchg
iret
push
mov
xchg
out
dec
addr16
cld
dec
imul
and
in
es
stc
add
push
mov
mov
and
aaa
fistpll
mov
sub
orl
aaa
movsb
add
pop
repz
mov
lcall
push
fs
jnp
loope
aad
sub
decb
sbb
pop
sahf
aas
pusha
add
decb
jno
push
jns
sti
push
xchg
jb
stc
jno
lock
mov
xor
adc
mov
push
sub
adc
sub
mov
or
inc
adc
mov
mov
cmp
cltd
repz
leave
cli
mov
add
out
dec
pop
scas
mov
pop
daa
pop
push
jl
insl
in
lock
fldenv
push
jecxz
adc
mov
and
or
sarl
and
stos
pushf
mov
adc
push
dec
inc
dec
dec
xlat
jge
test
cs
xchg
push
xor
inc
lock
mov
mov
sub
mov
gs
stos
gs
xor
cs
xchg
pop
fdivl
ret
insb
mov
ret
xchg
lock
test
sbb
mov
sub
ds
cmp
push
and
xor
and
adc
xor
int
jg
fbstp
insb
push
push
push
push
cmp
jg
test
sbb
push
in
dec
mov
stos
sbb
sub
sti
pop
shll
adcl
popf
pop
and
cmp
repnz
into
lods
fidivl
lahf
sarl
add
sub
cmovs
ret
test
xor
dec
inc
mov
icebp
insl
rol
inc
push
mov
pop
xor
push
push
inc
cmp
and
test
in
cmp
dec
push
nop
jg
fsubr
xlat
jno,pt
and
lret
or
mov
lcall
pop
mov
mov
icebp
iret
mov
mul
iret
test
push
or
out
pop
cmp
or
xor
dec
mov
outsl
push
cltd
lds
sbb
sar
in
and
xor
popf
xchg
decl
cmc
scas
sbb
mov
loop
add
cmp
stc
fwait
lods
mov
pop
mov
dec
les
test
lods
pop
in
inc
adc
dec
add
nop
mov
stos
adc
nop
enter
adc
das
pop
pop
leave
ljmp
fwait
mov
sbb
inc
nop
push
inc
lock
or
lcall
dec
sub
or
dec
inc
into
push
punpckhdq
adc
push
rorb
sahf
addr16
ss
stc
cltd
das
std
inc
js
mov
daa
push
jb
mov
sahf
xor
int
rcll
xchg
mov
enter
dec
rorl
xchg
push
ror
mov
dec
dec
dec
lods
or
push
mov
dec
mov
xor
push
mov
stc
inc
sbb
xchg
test
rorb
mov
and
int
lods
aaa
loope
push
add
mov
dec
xor
aam
jg
hlt
mov
mov
xchg
dec
push
dec
jmp
fadd
icebp
or
jno
sti
push
mov
out
mov
dec
jb
push
enter
sub
inc
xchg
testb
aas
cmp
loop
adc
nop
and
jnp
ds
push
mov
mov
ret
cld
adc
adc
nop
xchg
xchg
mull
inc
cmp
push
outsb
push
int
adc
adc
push
mov
scas
dec
dec
push
push
dec
scas
ds
dec
bound
sahf
push
rorl
arpl
in
mov
scas
inc
jecxz
in
enter
lcall
push
inc
bound
dec
push
mov
dec
dec
shrl
jb
bound
lret
rorl
ret
mov
adc
cmp
inc
stos
iret
jb
xchg
dec
loope
je
or
push
jp
mov
or
mov
sbb
es
enter
inc
mov
adc
inc
cmp
sarb
mov
shl
scas
ss
daa
fmulp
adc
hlt
inc
fisttpl
inc
cmpsl
mov
jl
rcll
push
dec
in
push
lcall
xor
data16
xchg
fimull
mov
add
adc
xor
mov
jg
icebp
rol
shll
and
sub
mov
out
push
jg
push
and
adc
rclb
adc
nop
lods
xchg
and
rcl
mov
push
mov
lret
inc
nop
fdivrl
iret
push
adc
dec
fidivl
xchg
inc
jb
rcll
adc
push
push
mov
mov
adc
cs
rorl
or
mov
adc
arpl
iret
fstp
outsb
fsubl
cvtpi2ps
rorl
cs
clc
lods
and
cmp
dec
push
push
out
ss
mov
loop
subb
push
cmp
sbb
push
mov
enter
outsb
push
and
pusha
adc
in
xchg
cmp
pop
lea
icebp
cwtl
adc
xor
adcb
loope
in
rcrl
pop
xchg
into
xchg
lcall
jg
movsbl
shrb
or
and
pop
rcrl
lcall
sahf
das
rolb
shl
adc
jecxz
outsb
lret
or
push
cs
iret
cwtl
dec
xchg
cmp
push
enter
leave
inc
inc
into
leave
mov
sahf
xchg
scas
or
mov
in
adc
mov
adc
stc
mov
xchg
xchg
pop
adc
xchg
adc
push
data16
cmp
les
mov
push
pop
push
mov
sub
daa
pop
stos
inc
cli
in
shll
orb
lcall
jbe
pop
daa
pop
jmp
pop
faddp
jne
mov
stc
aas
dec
leave
test
mov
inc
inc
add
push
frstor
mul
jp
fsubrl
mov
mov
dec
mov
mov
dec
ret
inc
shl
push
cmp
mov
push
lods
clc
mov
and
sbb
mov
gs
js
sbb
test
add
sti
in
cmpsb
mov
dec
lret
test
fmull
sbb
cmpsb
pusha
lret
fimuls
dec
out
sbb
lret
mov
jmp
ret
inc
pop
in
faddl
test
inc
sub
mov
repz
mov
je
loop
cmp
pop
lock
and
xor
rcr
leave
hlt
jae
jo
xchg
xchg
popl
cmp
fsubrs
icebp
sbb
pop
aas
jnp
nop
aaa
inc
in
scas
pop
cmp
cmp
ret
lods
or
lcall
jbe
xor
iret
negl
addl
into
int3
mov
add
mov
fiadds
sub
fisttpll
or
int
stc
xchg
sbb
dec
ja
mov
mov
aam
push
cmpb
shl
data16
int
cmp
mov
insl
push
mov
fldl
mov
dec
stos
into
cs
adc
sahf
xchg
fistl
add
insl
adc
and
aas
cld
push
les
adc
jl
call
and
sub
mov
pop
push
xchg
out
and
outsb
push
mov
add
rcl
add
sbb
std
lahf
xchg
loope
shll
movsl
lret
cmpsl
and
jo
mov
cmpl
inc
out
add
fcmovne
pop
cs
lret
in
fsubs
sbb
sbb
push
adcb
add
inc
sub
cmp
stc
mov
popa
mov
into
int
push
fcompl
jns
inc
les
stos
je
mov
mov
lods
loope
pop
pop
mov
add
push
and
mov
adc
lahf
lret
inc
loope
push
jg
xor
cmp
dec
sbb
fnsave
inc
jecxz
dec
cmpsl
mov
jl
push
icebp
mov
xchg
pusha
sub
mov
mov
leave
jecxz
mov
bound
xor
jno
jle
cmp
inc
pushf
sbb
lret
cmpsl
cmp
push
cmp
dec
cmpsb
jb
adc
jge
xchg
sub
adc
insb
lcall
popa
mov
movsl
cmp
and
repnz
push
mov
mov
and
rcll
iret
inc
inc
stos
sbb
xor
sub
xor
mov
inc
adc
xchg
jecxz
cld
pop
jmp
stc
jmp
mov
push
mov
inc
lods
lcall
stos
push
inc
mov
jmp
push
cmp
stc
inc
inc
jle
mov
sti
dec
into
dec
stc
push
insl
jl
int
mov
cs
jecxz
xor
rol
dec
dec
int
push
inc
loopne
rclb
dec
into
dec
lods
mov
inc
dec
out
push
shrb
int
lock
adc
dec
xchg
push
adc
xor
bound
mov
scas
ror
jne
dec
add
cmc
call
lret
insl
insl
test
adc
inc
inc
in
lods
mov
stos
or
sub
lods
or
jb
and
sbb
mov
and
mov
cmc
lret
repnz
mov
xchg
ds
and
stc
out
xor
mov
pop
rclb
inc
pusha
or
call
jb
out
xor
xchg
jb
dec
mov
rorb
dec
shll
xchg
jno
lods
aam
inc
stos
xor
cmp
mov
inc
dec
vmovntps
xchg
das
adcb
add
inc
push
cmp
inc
xor
mov
mov
ss
fists
bound
pop
or
stos
xchg
cld
in
sbb
mov
insb
mov
xchg
scas
jl
subb
sub
pusha
inc
into
in
rcrl
das
pop
pslld
add
xchg
push
or
aaa
mov
ds
xchg
jge
mov
cmp
rep
jge
sbb
out
daa
lahf
or
in
outsl
xchg
and
push
or
fiaddl
xor
cmpsl
std
in
push
aad
xor
and
mov
push
push
mov
int3
data16
sub
shrl
dec
dec
inc
xchg
add
pop
or
cli
sub
lret
insb
push
dec
add
ja
adc
and
ljmp
xor
ret
sarl
mov
mull
adc
imul
aam
mov
insl
push
rcrb
nop
ret
movsb
xchg
mov
xchg
inc
mov
xchg
pop
mov
sub
insl
xchg
pushf
mov
mov
inc
les
add
jb
popa
xchg
sub
xor
xchg
and
cli
mov
adc
imul
inc
jp
fnstsw
je
xchg
in
mov
add
sub
inc
sub
xchg
subb
xchg
pminsw
fmull
int3
in
sarb
jb
aas
mov
cmp
jp
inc
nop
lahf
inc
lds
outsl
mov
pop
js
pop
and
xlat
adc
adc
inc
repnz
push
fnstenv
shlb
lods
vdivps
jno
loopne
out
fldt
push
xchg
mov
dec
adc
add
iret
repz
sub
gs
and
daa
xchg
dec
dec
pop
and
push
out
int3
dec
and
cld
aas
adc
subl
rorb
and
popl
or
and
test
adc
mov
mov
mov
or
xchg
stc
cld
in
out
push
test
xor
mov
push
add
in
int
sbb
push
fimull
insb
push
bound
popa
add
push
outsb
ret
js
popa
xchg
or
pop
ss
cmpsl
or
add
sub
jo
adc
inc
sti
and
inc
add
mov
repnz
push
outsb
filds
incb
and
adc
scas
sub
xchg
loop
xchg
icebp
inc
mov
cmp
sub
push
ret
adc
scas
std
test
lea
out
dec
sbb
mov
xchg
mov
pop
mov
adc
push
lds
pop
xchg
imul
fildll
inc
push
inc
lods
push
scas
xchg
jp
adc
clc
adc
lods
insl
or
in
scas
xchg
scas
sbb
mov
mov
addb
loope
cwtl
mov
push
pushf
shll
ret
mov
adc
cmpsl
mov
into
lock
int
flds
xor
rcrl
je
add
enter
into
ret
or
in
addr16
xor
push
mov
int3
shlb
orl
adc
pop
mov
stc
hlt
sub
push
adc
cmpsl
jge
lea
inc
shlb
pop
inc
out
lret
xor
xorb
mov
aaa
hlt
and
inc
xchg
or
sbb
int3
jmp
shrl
and
mov
fbstp
adc
push
xor
ror
test
pop
int
out
cli
mov
sahf
sahf
sbb
sbb
fs
dec
inc
jecxz
push
mov
adc
pop
mov
mov
mov
jns
shrl
lock
jno
je
jl
jecxz
mov
int3
stc
pop
std
jo
int
sub
adc
shll
push
xor
dec
mov
sub
adc
mov
xchg
push
stos
int3
inc
jge
jg
loope
addb
xchg
test
sarl
xor
mov
cmpsl
and
sub
dec
in
loopne
push
scas
out
in
aaa
scas
sub
push
push
add
cmc
push
scas
aam
add
mov
mov
test
out
jmp
das
jp
pop
jecxz
and
lret
scas
mov
pop
jnp
es
out
pop
mov
xchg
xchg
jbe
add
leave
push
mov
dec
push
push
lcall
js
shr
ret
adc
adc
inc
adc
dec
inc
pop
pop
clc
mov
int
sub
cmp
mov
daa
mov
mov
push
cltd
mov
xchg
adc
and
cmpsb
mov
or
add
xor
or
fcmovnu
mov
jmp
jbe
shlb
push
clc
jo
mov
cmpb
sbb
imul
pop
mov
sar
dec
lret
xchg
mov
adc
mov
iret
fdivrl
mov
mov
in
mov
jb
mov
cld
leave
jb
test
or
adc
cmp
scas
add
sbb
dec
cmp
push
mov
bound
mov
aam
scas
jle
inc
dec
jl
inc
lock
xchg
adc
fdivrl
adc
lds
leave
shll
jbe
scas
dec
push
inc
sar
loope
inc
movsl
enter
xchg
in
dec
sub
xor
push
out
push
es
out
push
stc
ljmp
push
shll
pop
shrb
out
int
cmp
loopne
aad
out
xor
sub
paddd
int
adcb
sahf
outsb
or
mov
jg
add
aad
jne
loop
sti
push
iret
dec
xorb
aaa
int
jg
mov
adc
lods
dec
into
sub
pop
ds
or
inc
add
mov
push
xchg
ja
rcr
mov
in
loop
sarl
and
add
xchg
mov
aad
nop
inc
in
mov
mov
gs
jnp
out
je
pop
pushf
mov
lea
sub
fstl
xor
ret
dec
dec
push
pop
xchg
test
fiadds
pop
stc
mov
mov
xchg
test
lods
dec
mov
xchg
sub
or
xor
xchg
movsb
aas
cs
mov
dec
cmpsl
call
inc
shrd
or
out
dec
loope
stc
orb
cmp
sub
subl
or
insb
iret
dec
inc
int
js
xchg
js
add
pop
divb
sbb
loope
mov
lcall
push
mov
bound
insl
lea
rdtsc
lock
push
int
repnz
mov
fidivs
movsb
and
dec
bound
mov
lcall
xor
mov
loopne
mov
scas
inc
push
int
rcrl
xchg
sarb
shlb
xchg
cmp
and
cld
jne
loop
sbb
push
lds
dec
faddl
lods
mov
push
int
test
dec
cmp
mov
rol
xchg
xor
lcall
adc
adc
push
sub
and
insb
mov
dec
mov
mov
je
jle
shl
out
or
addr16
pop
lea
add
lcall
mov
cmpsl
adc
into
stos
inc
mov
in
lods
or
add
iret
sub
out
inc
sub
lret
addb
mov
dec
adc
shlb
mov
xchg
lock
cld
and
call
and
adc
sub
out
or
cwtl
xor
mov
sub
push
xlat
std
mov
movsb
cmp
inc
and
cmpl
inc
mov
adc
push
adc
sub
stos
pop
cmp
imul
test
jb
dec
sub
pop
leave
pop
sub
mov
into
dec
lret
lcall
scas
mov
cltd
repz
xor
xchg
lret
push
cmp
sahf
mov
test
mov
scas
cmp
or
pop
lods
sub
pop
mov
push
repnz
dec
lock
xchg
lea
test
push
mov
adc
xor
es
into
inc
inc
lahf
and
pop
sub
aam
lcall
lock
jg
mov
popa
inc
ret
adc
int3
test
sub
nop
clc
mov
std
mov
negl
or
lods
pop
mov
dec
xchg
test
aad
push
mov
sub
inc
push
or
test
mov
xor
jns
std
dec
daa
addr16
daa
mov
test
adc
mov
mov
mov
arpl
cmp
shll
mov
lahf
inc
mov
pop
outsl
dec
pop
xor
dec
addr16
sbb
cmpsb
mov
in
inc
imul
xchg
pusha
repz
xor
xor
mov
subb
jp
jmp
popa
sub
xor
jge
pop
lods
sbb
lds
cmp
cmp
mov
pop
sahf
jle
loop
jle
orb
ret
jecxz
sbb
lds
push
xchg
fiadds
jo
mov
mov
cmp
and
aaa
outsl
push
mov
in
rcrl
dec
stc
outsb
mov
and
adc
xchg
pop
mov
scas
imul
stos
jae
std
lcall
jbe
fwait
dec
add
jae
xor
mov
lret
mov
sbbl
mov
ret
testb
cmp
jb
and
lods
scas
mov
sbb
add
popl
cmp
test
testl
fs
jle
sub
sub
dec
cltd
jl
testl
cltd
push
mov
inc
hlt
cmp
cmp
scas
xor
out
jg
inc
call
das
add
add
push
xor
and
pop
sbb
xlat
test
cmc
orb
lds
clc
int
xor
lret
xchg
jo
in
mov
outsb
mov
lods
stos
mov
xchg
fistpll
into
pop
push
add
or
dec
mov
push
test
xchg
test
mov
xor
xchg
xchg
icebp
jb
jp
popa
add
dec
repnz
stos
ret
jae
stos
pop
dec
push
xchg
xchg
leave
cmp
std
adc
push
jnp
mov
pop
inc
sub
jb
and
ret
push
stc
stos
inc
rcr
insl
popf
inc
bound
adc
pop
rcll
sbb
mov
or
xor
mov
xchg
pushf
xor
mull
nop
out
mov
add
inc
mov
aaa
sub
fwait
pop
aam
mov
xchg
jmp
ss
adc
enter
or
stos
and
dec
fisttpl
fdivrs
leave
jne
push
add
sub
popf
adc
dec
es
mov
mov
ds
test
and
aas
cmpb
jb
nop
dec
sbb
jbe
push
mov
roll
cmp
rclb
sub
cmc
mov
sub
neg
inc
mov
adc
ret
inc
adc
mov
outsb
xor
not
stos
cmp
xchg
or
mov
loopne
jp
loope
push
xchg
adc
fcoms
or
popf
adc
and
ret
dec
push
xlat
mov
add
pop
pop
mov
xchg
enter
cs
xor
out
cld
inc
out
or
hlt
mov
sub
fbstp
xor
fists
repnz
shlb
xchg
pop
inc
and
ja
jo
and
int3
inc
sbb
notl
or
sub
pusha
scas
mov
lea
add
negb
push
xchg
dec
ret
and
in
mov
ja
cld
adc
xor
push
sahf
or
in
insb
jae
inc
movsb
or
in
popf
mov
inc
xchg
jnp
adcb
inc
gs
mov
push
and
rorl
push
inc
inc
int
loopne
sbb
ret
cmp
xor
aam
mov
shrb
aad
lods
test
push
mov
push
sub
push
dec
mov
sub
xchg
push
xchg
addr16
mov
in
stc
loope
xor
movsl
sub
int
jne
out
rolb
dec
inc
cld
cmp
add
mov
add
xchg
int3
adc
push
cmp
addl
and
mov
push
dec
mov
push
orl
popa
xorb
lret
dec
adc
rcl
or
jno
mov
push
dec
lds
xchg
lret
jp
enter
sahf
dec
mov
scas
iret
mov
mov
in
push
dec
dec
mov
in
lds
lea
or
lret
push
mov
call
shll
adc
rol
nop
mov
ret
fcoml
popl
inc
xchg
inc
dec
add
jmp
mov
pop
pop
es
lods
mov
sbb
mov
rorl
stc
mov
out
pop
int
adc
lds
push
scas
xor
stc
sbb
inc
push
push
sahf
mov
lret
sbb
stos
imul
mov
push
mov
adc
push
int3
sarb
cmp
dec
in
lds
outsb
dec
loope
inc
addl
jb
icebp
push
adc
mov
sbb
push
pop
mov
jnp
nop
jg
nop
cmpb
push
mov
dec
push
ljmp
enter
push
cmpl
sub
mov
mov
rcr
iret
mov
mov
xor
fidivs
xorb
adcb
sub
push
or
lret
fnstsw
inc
or
clc
iret
push
rcll
cld
and
ss
jbe
lret
xor
insb
int
minps
dec
dec
out
out
shll
add
xchg
daa
int
dec
mov
push
pop
out
pop
incl
dec
mov
imul
pop
popf
js
xchg
sub
pop
leave
cmp
pop
inc
xchg
lcall
adc
xchg
xchg
lcall
fstp
movsl
push
xchg
xchg
adc
push
mov
filds
pop
sub
shlb
inc
inc
mov
mov
xchg
push
add
in
inc
inc
clc
aam
xor
adc
int
orb
mov
stos
in
xor
pop
jne
rol
cmp
xchg
fisubl
shlb
mov
shll
inc
mov
push
mov
mov
add
loope
loopne
mov
mov
dec
or
jl
adc
and
in
adc
mov
jb
jg
mov
xchg
test
aas
aas
jmp
sarb
sub
into
adc
push
jle
dec
dec
ret
insl
jns
clc
sti
out
lods
xchg
das
mov
clc
ss
sub
mov
jns
lock
into
inc
inc
cmpsb
or
mov
mov
pop
push
out
and
es
andb
cmpsb
lock
punpckldq
jb
mov
xchg
or
out
rorl
cmp
dec
pop
jne
pusha
dec
testb
jecxz
sbb
xchg
mov
cwtl
out
dec
sub
fdivs
pushf
sbb
mov
aas
ss
mov
loope
ljmp
hlt
ss
movsl
push
stos
into
push
push
adc
push
in
push
mov
sarb
jno
sub
leave
loopne
mov
cmpsb
push
insb
imulb
push
xchg
cmp
inc
add
add
push
push
jno
sbb
inc
les
add
and
mov
or
jb
insb
loope
add
popa
inc
imul
aas
sbb
insl
ss
jns
jl
xchg
fwait
cs
inc
imul
arpl
subl
pop
xor
mov
jb
adc
jle
daa
sbb
lcall
insl
sub
out
dec
mov
mov
ret
rorl
push
and
mov
inc
sub
push
lret
jae
mov
ret
rclb
mov
loopne
mov
mov
mov
icebp
bound
jb
xchg
xor
push
inc
and
dec
leave
mov
rorb
imul
cld
adc
insb
adc
testb
aaa
mov
mov
xor
xchg
repz
es
xor
mov
xchg
xchg
mov
jb
adc
negl
jb
jp
js
pop
inc
inc
push
icebp
insl
bound
push
mov
inc
call
clc
mov
jp
adc
cld
sbb
rcl
fdiv
xor
push
ror
jge
insl
test
dec
jle
mov
popf
les
xor
and
dec
cs
inc
mov
loopne
cmpsb
lcall
rorl
xorb
sbb
andb
popa
xor
out
std
seto
xchg
call
sbb
or
dec
cmpxchg
mov
stos
call
shll
aaa
push
dec
cli
mov
dec
subb
ret
jge
push
cmp
mov
mov
push
xlat
scas
push
mov
add
rcll
xchg
mov
mov
adc
push
aam
adc
call
icebp
loope
pop
cli
mov
sbbb
push
inc
mov
xlat
rcrb
imull
add
push
test
mov
mov
jb
xchg
test
xor
bound
scas
mov
into
iret
ret
mov
xor
inc
mov
int
lods
lea
dec
dec
push
or
dec
mov
aad
sbb
push
push
ja
rol
ret
test
mov
lcall
dec
test
jp
test
test
mov
jns
dec
shrl
nop
pop
insl
lret
fimuls
ret
ljmp
lret
mov
sbb
test
add
mov
mov
stos
js
pushw
xor
jbe
rcrl
dec
sbbl
pop
dec
inc
pop
push
inc
pop
push
adc
lahf
cltd
dec
lret
leave
push
mov
adc
nop
push
int
insb
inc
rorl
loopne
inc
push
ja
pusha
mov
test
xchg
or
xor
xchg
mov
aam
jae
nop
pop
mov
pop
pop
dec
sbb
adc
push
and
push
inc
push
dec
mov
int
jns
lock
in
xor
jg
lret
int
test
daa
mov
lods
push
push
xchg
jno
gs
push
test
ficompl
ret
nop
or
mov
outsl
pop
lods
inc
jns
sub
xor
pop
xchg
mulps
xchg
inc
addr16
sahf
add
shl
mov
dec
push
xchg
cmpsb
mov
mov
and
sbb
mov
jge
cwtl
sub
sahf
dec
iret
nop
add
test
cmp
cmp
sti
add
cli
adc
pop
add
mov
jmp
push
add
mov
pop
popf
or
jno
dec
xor
pop
repz
lds
into
ror
int3
xchg
push
dec
bound
stos
cmp
mulb
fdiv
rcrb
jns
mov
outsl
lock
sarl
and
mov
dec
aas
mov
icebp
sub
cmp
add
or
mov
xchg
mov
lods
push
adc
fcmovbe
push
mov
fdivs
dec
xchg
cmp
mov
dec
and
dec
add
je
cltd
dec
sbb
mov
inc
addr16
int3
or
stos
in
iret
in
push
sub
ss
lcall
inc
jae
popf
pusha
ljmp
mov
inc
popa
xchg
les
roll
xor
push
test
sub
inc
inc
add
int3
fsubs
fldl
dec
ret
inc
push
inc
push
add
pop
inc
addr16
into
sub
mov
adc
movsb
adc
mov
jmp
push
fcmovbe
xchg
push
je
inc
add
in
pop
lock
xor
mov
fbld
ror
jno
orl
jg
fsubrp
xor
jecxz
xchg
int
arpl
dec
cmp
xor
xchg
adc
leave
mov
xchg
vmovaps
pushf
dec
and
mov
push
fmulp
push
scas
aad
int3
adc
iret
shrb
sub
adc
mov
inc
rorl
aaa
push
xchg
sub
mov
sbb
and
adc
lcall
mov
xchg
sarl
outsl
sbb
jo
stc
call
lret
in
dec
pop
adcl
push
outsl
nop
ds
push
adc
xchg
dec
inc
adc
jns
ret
or
mov
in
sarl
out
data16
lret
bound
and
lret
leave
mov
mov
xchg
inc
shr
cmpsb
fists
fcompl
js
popf
lods
aam
in
fnstenv
ljmp
push
xchg
dec
xor
dec
mov
mov
sub
mov
movsl
push
jmp
mov
mov
fsub
add
sahf
mov
xor
arpl
mov
stos
jecxz
mov
hlt
rclb
push
dec
mov
xchg
inc
sbb
jmp
test
sar
jle
push
lret
cmp
xor
scas
sahf
or
roll
adc
cltd
pop
sub
out
dec
mov
xlat
imul
ljmp
and
repz
jnp
outsb
sub
outsl
mov
dec
ret
imul
fldl
xchg
push
sub
push
lret
mov
cmp
mov
rorb
and
cmp
sbb
xchg
in
fbstp
fs
in
or
mov
mov
sub
adc
test
inc
fsubl
mov
dec
pusha
cmp
xchg
out
push
mov
ss
stc
cld
movl
jb
inc
loop
int
outsb
push
popf
mov
jne
sahf
xchg
pop
inc
mov
lea
xor
dec
inc
outsb
fcoml
push
lea
or
mov
and
insb
dec
xchg
push
and
aam
icebp
sbb
cmc
pop
add
test
push
rclb
out
cs
imul
jl
xor
shll
repz
xlat
shrl
in
mov
call
push
test
in
push
in
xchg
jge
sbb
das
or
mov
mov
push
mov
jl
push
cs
ljmp
add
leave
mov
shlb
mov
or
icebp
cmpsb
xor
inc
xchg
xor
mov
sbb
or
mov
push
dec
and
mov
xchg
cmp
enter
rorb
daa
imul
fsubl
sahf
nop
nop
jno
loope
dec
and
ret
dec
loope
lcall
ds
jne
mov
sahf
jmp
int
xchg
stos
icebp
xchg
pop
xor
cs
cmp
jbe
lods
xchg
xchg
xor
add
jg
fdivrs
rcll
push
lods
fsubl
clc
cmpsb
mov
subb
aam
filds
shll
pusha
add
sar
xchg
fdivs
push
or
adc
pop
dec
into
mov
frstor
imul
push
jle
push
insl
inc
sub
adc
outsl
andb
mov
pop
mov
mov
mov
inc
mov
dec
push
pop
dec
adc
cmpsl
cmp
ljmp
out
xchg
inc
mov
mov
es
movsl
and
xor
stc
jnp
ds
jb
fsubl
mov
sub
dec
cld
pusha
scas
sub
xchg
out
or
mov
lea
sub
js
sbb
mov
xchg
call
fs
push
xor
ds
mov
pop
lcall
popf
add
sub
xor
in
dec
mov
dec
es
rcll
or
sub
inc
in
jo
popf
pop
cltd
popa
jo
insl
orl
jae
pop
out
sub
dec
testl
icebp
loop
ja
mov
test
push
xor
xchg
pop
jae
lods
rep
cltd
jecxz
xchg
sbb
mov
mov
js
rcll
xor
ss
jecxz
sti
and
pop
push
shrl
insb
clc
aas
loope
call
vpmacswd
cltd
addr16
or
movsl
push
cmp
adc
ljmp
mov
fcoms
lahf
mov
sbb
sub
push
mov
xor
ret
out
add
cmp
mov
dec
inc
faddl
aas
jnp
pusha
mov
cmp
xchg
ret
inc
les
xor
andb
jmp
lds
xchg
jbe
mov
les
cmp
filds
jle
inc
test
xlat
scas
leave
cwtl
cmp
jns
jo
add
jne
sbb
pop
xor
push
int
sub
mov
in
adc
cli
cs
xchg
or
mov
and
stos
movl
inc
mov
and
movsl
pop
cmpsb
out
pop
in
shrb
adc
push
push
mov
mov
lds
aam
out
leave
push
mov
and
ss
dec
adcl
inc
xorb
lret
gs
push
jo
inc
xchg
pop
and
adc
xor
jge
xor
movsb
movsl
xor
loop
jo
rcll
mov
xor
dec
xchg
cli
add
mov
lcall
mov
cmp
adc
lcall
in
rcl
push
push
cs
icebp
rcll
push
pusha
jno
mov
or
jno
pop
out
addr16
fs
in
cmp
pop
adc
ds
push
jecxz
sbb
and
adc
lcall
xchg
inc
out
xor
xor
sub
dec
adc
int
aaa
cmp
nop
orb
inc
add
inc
inc
add
inc
shll
out
pop
xor
outsl
push
jns
or
sti
push
or
sub
pop
and
mov
jnp
lcall
mov
adc
pop
mov
pop
sub
adcb
sub
cmp
popa
xchg
xor
inc
mov
mov
ficomps
jp
xchg
cmp
add
jl
mov
push
cmp
push
in
dec
inc
ljmp
dec
push
jno
in
adc
and
leave
ja
aaa
xor
cs
pusha
dec
inc
xchg
fsts
jge
mov
cwtl
or
jbe
add
jns
mov
sbb
imul
cmp
and
sarl
push
fists
and
outsl
lret
lock
aad
push
xor
xchg
shrl
xchg
mov
mov
insb
cmpb
mov
xchg
andb
data16
inc
inc
fnstcw
xlat
add
adc
fs
push
jo
pusha
je
adc
cmpl
adc
and
xor
push
mov
ficomps
hlt
out
push
pusha
mov
jb
lcall
cmp
dec
pop
adc
push
push
push
lcall
fdivrs
add
imul
shr
aam
pop
xchg
mov
push
inc
jb
mov
push
roll
subl
into
inc
sbb
int
mov
into
pop
sbb
fsubrl
jle
fwait
popf
inc
mov
mov
xchg
xchg
and
mov
rcll
sti
sbb
scas
andl
dec
aad
pop
mov
mov
sbb
sbb
iret
ror
push
mov
xlat
test
mov
push
pop
enter
dec
jp
mov
adc
mov
xchg
fwait
test
dec
jg
mov
xchg
inc
andl
adc
jp
jo
mov
pushf
lods
iret
mov
mov
or
xchg
mov
sub
lods
mov
mov
mov
test
cmp
packuswb
and
out
cmpsb
ret
inc
ja
mov
mov
sbb
pop
cmp
dec
push
push
inc
cmpsb
inc
sub
int
out
or
jbe,pn
subb
add
xor
xorl
repz
addl
mov
test
jb
jo
mov
es
add
lret
scas
push
cmp
in
xor
pop
jge
lret
cmp
sub
ds
test
xchg
mov
aas
rcrl
lret
inc
out
pop
call
push
rclb
sub
lret
fistpl
out
xor
inc
clc
mov
sti
cmp
ljmp
aam
mov
jo
adc
subb
mov
inc
mov
int3
lahf
adc
int3
dec
lock
add
movsb
xchg
inc
xchg
lock
mov
xlat
out
inc
aad
and
sub
sub
xchg
gs
scas
outsl
nop
stc
push
ret
sub
mov
daa
mov
mov
dec
fisubs
adc
iret
mov
insl
dec
mov
pmuludq
mov
xor
or
sub
mov
frstor
cmp
sub
int
shr
dec
add
shll
shlb
ret
mov
stc
pop
test
or
inc
mov
mov
sbb
nop
dec
push
repnz
scas
or
dec
and
inc
push
imul
test
sahf
icebp
rorl
daa
repz
iret
lret
mov
and
flds
mov
je
dec
mov
mov
lcall
loope
sbb
xor
jb
jo
adc
nopl
mov
mov
or
leave
jb,pn
mov
dec
push
mov
jns
mov
xor
fimuls
sahf
pop
clc
out
lret
pop
pop
mov
jmp
pusha
shrb
pop
mov
imul
sub
adc
fcoms
adc
xchg
sbb
scas
lods
xor
xchg
sarb
sbb
das
mov
xchg
lahf
scas
jp
int
push
sbb
imulb
lock
mov
or
dec
add
and
test
lret
mov
test
fisubl
inc
dec
aam
xor
pushf
xchg
mov
sahf
ror
pop
xor
jp
mov
dec
jne
cmpsb
rcll
mov
cltd
cltd
in
mov
out
pop
and
aaa
mov
test
ret
lcall
push
dec
xlat
xor
std
jns
aad
in
dec
into
jo
and
adc
es
sarb
in
lcall
into
leave
out
inc
add
jne
sbb
xlat
scas
add
cmp
inc
scas
cwtl
mov
xchg
loop
jg
sbb
jmp
inc
mov
sub
adc
inc
sub
jmp
inc
xor
ljmp
fldcw
sub
cmp
jle
pop
cmp
adc
mov
sub
sbb
push
adc
pop
xor
pop
sbb
xor
stos
lods
xlat
cmp
mov
xor
dec
je
ja
in
push
adcb
inc
rorl
mov
mov
jge
mov
mulb
sarl
fbld
jg
out
rol
int
cmp
cli
xor
fcomps
add
mov
add
jg
cmp
xchg
pop
aas
les
nop
push
es
sbb
push
lgs
push
insl
pop
jl
sub
insb
mov
pop
popa
ss
xor
cltd
int
mov
jge
push
dec
stc
paddusw
jno
cmp
sub
mov
pop
mov
cmp
js
outsl
aam
mov
ljmp
imul
iret
mov
out
jecxz
adc
mov
clc
xchg
jge
add
pushf
dec
popf
pop
dec
lea
popf
sarb
pop
mov
test
cld
les
xorl
cld
inc
sbb
pop
dec
repnz
and
mov
push
idivl
data16
push
mov
loope
mov
popa
rorb
adc
jo
sub
repz
jae
shrb
mov
xchg
pop
flds
pmaxsw
jne
out
ja
add
jle
and
push
gs
add
xchg
iret
lock
rorl
inc
xchg
fadd
xor
jecxz
inc
jno
xchg
sbb
in
insl
call
push
ret
jg
mov
in
pop
sbb
jp
inc
inc
push
adc
pop
mov
mov
mov
xchg
into
mov
pop
movsb
lret
int
mov
jge
aas
xor
mov
sub
rolb
pop
mov
out
xchg
mov
lret
roll
in
mov
cmp
mov
repz
into
dec
and
jo
cmpl
fistl
loop
in
enter
add
insb
inc
or
inc
and
jno
pop
xchg
push
shll
mov
sbb
pop
rcrl
mov
push
loope
xchg
loope,pt
lods
cmpsb
mov
ret
ret
xchg
sbb
mov
xor
clc
inc
jae
mov
inc
mov
xchg
mov
inc
mov
mulb
push
xchg
inc
mov
sub
dec
add
cmc
stc
mov
push
push
test
in
mov
ret
cs
xchg
mov
or
inc
nop
push
adc
or
mov
inc
push
jle
or
arpl
or
loopne
adc
not
imul
flds
add
inc
mov
add
out
push
movsb
mov
inc
mov
mov
shll
and
enter
push
sti
mov
in
iret
xchg
sub
fisttpl
repz
mov
mov
in
xor
in
imul
lret
aas
imul
push
in
fistps
push
dec
out
pop
push
cltd
mov
adc
mov
mov
mov
xchg
sub
xchg
mov
in
cmpsb
int
jb
daa
xchg
mov
in
jo
jg
test
sub
add
push
xchg
js
cmpsl
ret
cmc
sbb
lods
cmp
jg
insb
mov
inc
dec
xchg
mov
xor
stc
lcall
arpl
mov
xchg
fwait
jnp
sub
and
xchg
fsubrs
lahf
repz
mov
add
scas
fbld
adc
mov
dec
cmpsb
lret
dec
mov
mov
jb
fcomps
jg
int3
adc
or
fisubl
xor
cmp
movsb
dec
push
cmp
push
leave
cmpsb
bswap
enter
lahf
in
cli
leave
and
shr
mov
add
dec
addr16
cli
xor
jmp
lcall
loopne
cmpb
lds
mov
leave
pop
fxch
mov
xchg
push
jg
sbb
stc
pop
outsb
jb
jo
push
pop
cmp
push
sub
and
jg
subl
clc
mov
inc
push
adc
cmp
test
sbb
xchg
push
sti
outsl
jb
mov
sub
ja
dec
inc
jo
or
pop
jle
out
xchg
adc
jb
data16
sbb
rcll
mov
cmpsb
stc
aas
mov
stos
push
mov
dec
dec
outsb
mov
adc
rcr
leave
stos
scas
stos
mov
jb
add
mov
sbb
lcall
stc
pop
push
and
and
and
shlb
ret
xchg
push
fnstsw
loop
cmp
sub
pusha
xor
mov
mov
sbb
es
jp
jl
push
orb
insb
shll
jecxz
cld
outsl
nop
sub
in
jecxz
sbb
sub
cmp
int
adc
sbbl
dec
sahf
sbb
pop
inc
arpl
fnstenv
pusha
insb
js
dec
mov
jle
mov
sub
adc
xchg
ficoms
fs
inc
mov
cmp
lcall
add
cmpsl
gs
fists
rclb
into
mov
jl
mov
lahf
ficomps
sar
sar
repnz
fsub
dec
fidivl
mov
lods
lret
insl
mov
mov
movsl
mov
data16
and
sub
inc
sahf
sub
mov
lret
movsb
sbb
cmp
jmp
sbb
xchg
sub
pushf
push
mov
ljmp
outsb
inc
out
imul
cmp
shlb
enter
mov
pop
notb
call
addr16
inc
cwtl
shlb
gs
inc
rolb
adc
mov
inc
xchg
push
mov
mov
push
outsb
push
aaa
and
dec
xor
rolb
mov
out
ret
xchg
jns
push
ja
imul
mov
into
adc
mov
jge
movsl
scas
push
out
orb
mov
sbb
dec
or
cmp
sub
pcmpgtd
call
addr16
aaa
leave
adc
cs
dec
ficompl
lods
cmpl
call
mov
pop
mov
bound
xchg
sub
cmp
mov
fmul
and
fiaddl
scas
adc
popf
shr
or
lods
push
test
xor
mov
xor
pop
mov
shl
out
lret
das
dec
mov
sub
mov
insl
subl
cmc
dec
call
adc
jns
pop
mov
inc
mov
fstpt
pop
int
scas
sbbl
push
sbb
xchg
ucomiss
ss
xchg
push
cmc
insl
enter
test
dec
or
ljmp
arpl
cmp
xchg
scas
arpl
aas
jecxz
xorl
mov
dec
ret
js
stc
mov
popa
insl
cmp
negb
iret
andb
add
rcrl
test
fwait
mov
movsl
cltd
repnz
inc
enter
pop
or
pop
fsubs
and
adc
pop
shlb
pop
mov
sbb
cmp
adc
out
ret
nop
and
lods
jle
out
stos
repnz
pop
mov
out
xchg
inc
fmuls
pop
rcrb
outsb
inc
stos
dec
gs
push
adc
adc
dec
or
mov
hlt
ret
nop
push
fistps
jg
jb
lcall
movsb
mov
out
notb
hlt
pop
cmp
pop
mov
cmpsl
aam
sarb
or
into
movsl
pop
andl
out
rcrl
jp
cmp
sbb
mov
sbb
cwtl
inc
outsb
adc
jl
fwait
inc
cmpsl
jns
sub
dec
test
ja
icebp
fs
and
and
test
adc
fs
popf
jg
pushf
cld
inc
stc
inc
ds
insb
fbstp
sub
lock
mov
inc
popa
cmp
pop
add
jmp
dec
jp,pn
aad
cmp
jle
cmp
dec
mov
cwtl
jbe
shl
or
sbb
inc
and
or
into
int3
inc
insl
xchg
sub
movsl
test
xor
push
mov
subl
negl
push
push
faddl
mov
outsl
popf
pusha
add
iret
ret
clc
fwait
rcll
sti
adc
pushf
mov
sub
push
and
rcr
cmpsb
mov
pop
jmp
pusha
cmp
xchg
lret
sub
imul
jbe
inc
hlt
test
jg
dec
sub
mov
shll
pop
fmul
insb
out
in
jns
jmp
bound
sub
jmp
roll
pop
movq
lods
aaa
push
inc
pop
mov
xor
jo
mov
dec
sti
xchg
add
hlt
push
repz
enter
out
outsl
das
in
adcb
lea
mov
test
push
inc
aaa
cmp
lea
ja
sbb
fucomi
cmp
mov
shl
mov
inc
pusha
mov
stc
dec
jl
std
or
cmp
cld
jne
inc
in
dec
movsl
scas
mov
stc
dec
push
mov
push
push
jecxz
dec
test
xchg
pushf
int3
sarl
ret
fdivrs
pop
inc
sarl
clc
pop
mov
jecxz
push
fisttpl
dec
in
sti
scas
sarl
rclb
lcall
ret
add
fdivrs
pop
sbb
scas
xchg
addr16
dec
loopne
xchg
imul
test
arpl
fdivrs
fdivrl
outsl
lea
lret
out
jns
adc
subb
call
push
popf
sub
mov
lahf
sbb
outsl
mov
sbb
outsl
xchg
lods
mov
jb
xor
shll
dec
sub
mov
mov
sub
jecxz
in
inc
cmp
inc
les
push
mov
test
jl
push
ja
adc
shll
rcll
lds
inc
xchg
ss
in
inc
xchg
daa
int
shrl
pop
je
jecxz
out
fbld
lret
hlt
mov
loopne
mov
dec
adc
sub
and
subl
leave
popa
frstor
dec
sub
jno
cli
mov
mov
test
test
hlt
mov
pop
faddl
insl
shlb
rcll
movsl
pop
into
loopne
jb
sahf
push
jo
pop
rcrl
and
in
push
pop
gs
scas
gs
lock
inc
scas
xchg
lcall
cs
sub
jg
dec
sub
shr
imul
imul
mov
inc
jp
jg
xchg
xor
xchg
sub
add
or
leave
dec
lahf
into
pop
add
push
cmpsb
pop
cmpsl
and
mov
xorl
cmpsl
aam
cmpsl
shll
rcr
insl
add
push
jg
out
dec
xchg
outsl
out
popf
jecxz
insl
hlt
rorb
xchg
faddl
cmpsl
push
xor
inc
mov
xor
xor
decb
jle
punpcklwd
js
jle
bound
add
sahf
push
mov
lret
out
and
add
cs
adc
cmp
lock
mov
and
push
mov
aad
aaa
movsb
sarl
jno
cmp
lods
shr
xchg
cmp
daa
push
sbb
in
mov
sub
cltd
stc
push
sbb
nop
int3
inc
jbe
int3
and
or
es
aam
xlat
or
inc
xor
shll
in
out
inc
lret
inc
int
mov
push
xchg
pop
stos
adcb
out
imul
xchg
or
nop
pop
jns
add
mov
xchg
imul
mov
mov
clc
popa
arpl
lods
cs
insl
push
std
test
inc
les
pop
add
jp
dec
fisubrl
aam
fwait
loop
pop
jl
adc
mov
ja
mov
xchg
shlb
cmp
pop
add
pop
add
es
dec
cmp
dec
mov
hlt
xor
adc
pop
push
jno
xchg
mov
lret
sub
pop
mov
inc
leave
xlat
add
popa
mov
pusha
and
js
popl
cmp
push
jno
and
push
popa
fnsave
dec
imul
adc
push
xor
xchg
xlat
lea
pop
sbb
fwait
pop
pop
xchg
nop
iret
sbb
sbb
daa
and
and
mov
jp
xchg
adc
adc
mov
imul
out
ror
jno
in
inc
inc
into
pop
inc
roll
popf
mov
es
push
xchg
ljmp
and
and
and
inc
adc
test
mov
sahf
lods
repz
ss
dec
add
lea
xchg
xchg
pop
xchg
int3
sbb
sub
enter
ret
mov
mov
aas
mov
sbb
xchg
mov
xor
inc
xor
xchg
pop
les
cmp
andl
dec
cltd
push
test
or
inc
inc
pop
mov
lcall
int3
es
inc
dec
js
jge
push
push
mov
push
fcomps
das
adc
sub
dec
mov
jns
pop
dec
je
mov
enter
xchg
xchg
xchg
inc
adc
push
jle
add
ljmp
lret
mov
dec
cmp
fisubrl
mov
sti
jle
rorl
jnp
gs
test
test
dec
icebp
rorb
in
int
loope
ret
mov
dec
ds
mov
mov
inc
data16
sub
iret
adc
sub
xor
lea
push
cmp
or
push
add
xor
pop
fcomps
jmp
out
int
pop
add
or
int3
divb
lods
test
xchg
push
push
addr16
push
adc
lds
enter
or
pop
jb
cmpsl
xchg
mov
aam
adc
xor
jge
cmc
jmp
addl
movsl
jmp
outsl
testb
out
addb
rol
int
mov
mov
inc
ja
test
push
xchg
inc
cs
std
mov
mov
xor
and
fs
pusha
inc
pusha
mov
cmp
push
adc
push
shrl
rorl
push
sbb
stos
rcr
popa
fcoml
push
les
pop
mov
sbb
sahf
xchg
jnp
sub
push
cmp
stc
fmull
sub
call
sti
sub
pop
je
rorb
js
or
jecxz
push
je
adc
and
jne
inc
add
jecxz
push
mov
push
mov
ret
adc
mov
fsubrl
push
inc
push
mov
xor
sbb
mov
mov
xor
mov
stos
xchg
dec
push
mov
popa
adc
cwtl
popf
push
jg
lret
cli
lret
rcll
push
inc
adc
pushf
sbb
cmp
shlb
shlb
scas
xor
dec
outsb
adc
lcall
clc
add
movsl
fildl
adc
push
lds
mov
inc
sbb
out
rcl
das
mov
sub
mov
loope
or
xchg
adc
scas
add
pop
or
outsb
rol
mov
xchg
fisttpl
pop
iret
pop
jne
clc
jp
and
dec
rcrl
subb
outsb
arpl
or
sbb
shll
sub
push
scas
divl
inc
repz
inc
nop
push
fisubl
mov
sti
sarl
push
mov
jge
loope
cwtl
lods
lods
loopne
popa
int
insl
nop
nop
bndstx
push
or
push
mov
or
lea
adcb
adc
std
mov
movl
inc
stos
dec
cmp
jle
cli
loope
xor
lock
xchg
jbe
inc
icebp
addr16
rorl
mov
je
ret
push
cltd
mov
cmp
rolb
into
xchg
add
and
push
arpl
pop
fidivl
and
addr16
xor
cmp
outsl
xchg
add
push
jno
pusha
roll
adc
imul
seto
xchg
dec
lods
jecxz
lods
push
push
dec
or
and
inc
add
adc
pop
sbb
xor
rcll
inc
push
inc
inc
in
stos
add
mov
adc
push
jg
inc
mov
mov
data16
or
dec
stc
into
mov
cmp
inc
outsl
dec
cmpsl
mov
ret
push
pop
loopne
dec
and
je
orb
push
sub
xor
nop
mov
sahf
stc
adcb
outsl
sbb
insb
lret
subb
xchg
insl
popl
dec
push
push
testb
cs
pop
dec
push
jecxz
imul
mov
jne
aad
sarl
jecxz
in
in
shll
outsl
jnp
mov
push
fs
cld
cmpsl
insl
stc
test
jecxz
mov
stc
mov
jmp
sbbb
pop
js
jmp
cmp
xor
jnp
pop
push
xor
sti
ss
and
and
jb
popa
mov
lcall
push
or
inc
mov
stos
sub
es
or
pop
rolb
dec
loope
test
test
aas
imul
inc
mov
dec
addr16
add
xor
ret
push
sti
mov
inc
les
and
lcall
add
xchg
add
add
pop
or
idivb
test
mov
stos
scas
xor
sbb
inc
les
sbb
mov
in
ret
jns
jnp
dec
pop
stc
sbb
cmp
cltd
mov
stc
incb
lcall
pop
mov
stos
lea
rol
sbb
mov
js
dec
sub
scas
xchg
jae
jl
int3
mov
sub
adcb
in
inc
rclb
pop
cmp
mov
ds
jl
inc
stc
fdivl
push
dec
xor
pop
in
ss
jb
imul
imul
xchg
in
loope
mov
cmpb
ja
stc
inc
lcall
nop
test
pushf
lods
loope
cmp
scas
test
lcall
repnz
sbb
stos
and
lea
cmp
mov
and
xchg
lcall
and
arpl
mov
daa
repnz
jmp
and
jno
mov
das
push
and
or
test
inc
cmpsl
inc
push
leave
xchg
adc
call
dec
popa
cmp
fstpl
xor
push
cld
stos
adc
out
orl
repz
jb
out
scas
push
mov
adc
jp
imul
xchg
sahf
shll
push
lods
sbb
sub
sub
out
lods
or
arpl
xor
test
sbb
mov
ret
push
adc
sub
mov
cmc
adc
inc
icebp
inc
push
push
adc
cmp
xchg
into
out
shufps
arpl
cmpsb
outsl
xlat
add
je
dec
subb
jne
enter
ja
roll
sub
cltd
divb
pmaxsw
divb
dec
cld
mov
mov
mov
fwait
mov
sbb
jge
lahf
aam
movsb
xchg
cmp
int
in
push
inc
dec
jae
push
mov
repnz
inc
cwtl
in
xchg
rcr
sub
cmp
mov
pusha
add
mov
sbb
nop
rcll
je
ss
mov
add
mov
test
stos
es
pop
mov
int
lret
adcl
adc
xor
push
cmp
stos
fcoml
repz
mov
rorl
pop
loope
scas
les
mov
mov
jg
sbb
and
gs
jl
int
cs
popa
inc
dec
negb
mov
loope
mov
jg
mov
jge
fistpll
push
xchg
cmpsl
out
push
pop
insl
sbb
add
out
xchg
loop
ficomps
jmp
inc
push
mov
fs
adc
fildl
rcr
and
push
fsubp
hlt
insb
mov
negb
push
xchg
les
sahf
pushl
mov
pop
and
aam
jp
lcallw
or
and
rcl
orb
xor
aad
mov
shrl
outsl
or
call
daa
rcll
stc
in
dec
outsl
fwait
addb
fsubr
imul
pop
icebp
mov
add
jmp
and
mov
mov
jb
sti
dec
pop
pop
cmp
inc
adc
shrb
gs
or
xchg
enter
test
mov
repnz
out
data16
mov
or
stos
xchg
mov
add
push
loope
iret
pop
stc
jp
jmp
mov
mov
or
stos
cmp
sahf
aad
lcall
sub
mov
popl
xchg
pop
test
stc
cs
filds
inc
sti
sbb
jbe
jns
repnz
mov
sub
mov
pop
inc
adc
mov
sub
dec
lea
pop
inc
cltd
imul
mov
sahf
rcr
fcmove
jb
mov
dec
shll
mov
and
xor
ret
xor
mov
pop
stc
lcall
rol
cmp
lahf
mov
jle
int3
int3
dec
mov
mov
stos
mov
cmpsb
cmovno
sbb
es
lock
js
mov
pop
sub
pop
mov
cmp
xor
inc
stos
xchg
cmp
ficomps
lcall
insb
adc
mov
jmp
jnp
test
ret
out
adc
imul
jbe
in
dec
icebp
scas
outsb
ss
pop
and
lods
adc
adc
mov
inc
rcll
fwait
push
push
xchg
orb
adcl
outsl
push
sub
xchg
out
push
loopne
fstpl
mov
into
jecxz
ja
cmp
je
jns
aad
cmp
or
sarl
mov
xchg
xor
add
mov
lods
clc
pop
mov
inc
add
cmp
add
dec
lahf
dec
out
mov
jns
sub
call
pop
mov
adc
push
mov
jae
into
std
adc
push
push
inc
sbb
pop
inc
xchg
rolb
cli
xchg
or
xchg
cs
dec
xchg
call
subl
push
mov
roll
inc
ds
movsb
or
insb
ret
pop
jo
clc
sarl
jl
adc
fdivp
mov
fs
dec
add
push
rol
adc
push
js
stos
or
inc
jp
inc
jmp
hlt
mov
push
ret
mov
ret
mov
jge
enter
test
or
cli
push
mov
aas
sub
imul
push
das
push
cli
stc
pusha
xchg
jno
adcl
insl
lea
mov
add
inc
xchg
or
mov
adc
cmpsl
jns
dec
nop
jp
sub
enter
hlt
pusha
test
clc
cmpsb
cs
lcall
mov
in
add
pop
sbb
and
test
lods
sbbb
cmp
add
stc
insl
leave
repz
dec
jno
sub
sbb
sub
xor
aam
jbe
pop
subb
xor
pop
cwtl
mov
mov
mov
pusha
ret
push
xor
inc
movsl
add
ror
and
insl
cmpsl
sbb
int3
pop
dec
ror
jb
push
outsb
jno
push
push
xchg
and
or
adc
sarb
lods
xor
insl
xor
stc
inc
loope
xor
sbb
inc
les
icebp
rolb
xchg
jmp
add
insl
daa
push
flds
jge
and
int
iret
les
sub
inc
inc
dec
jl
leave
xchg
sbb
push
idiv
jmp
mov
cmp
and
xchg
popa
inc
sarl
push
mov
mov
jne
and
pusha
cld
insl
xchg
int3
push
into
int
or
movsl
icebp
xchg
sbb
inc
les
popf
shrl
ds
mov
mov
loope
jg
push
add
cwtl
repz
lret
xor
sahf
insb
lcall
mov
jno
xor
inc
mov
and
lods
mov
inc
into
xor
inc
repnz
ljmp
rcll
loopne
ficomps
mov
inc
inc
and
pusha
xor
jecxz
leave
call
lock
pushf
jbe
std
pop
dec
lret
inc
sub
outsb
out
ret
mov
iret
mov
into
xor
leave
sti
sub
jge
fiaddl
add
xor
push
lahf
add
lea
jp
add
lcall
and
enter
movsb
leave
pop
insb
inc
jbe
sbb
add
mov
dec
addr16
incb
inc
sub
xor
notb
lcall
mov
mov
mov
push
cltd
es
or
int
or
in
cli
cmpsb
mov
outsb
jg
stos
fiadds
sub
mov
jg
into
pushf
push
adc
dec
jl
test
nop
mov
add
xchg
sub
ret
pusha
jo
rcll
pop
mov
inc
and
adc
rcrb
xor
add
push
sub
out
mov
inc
push
cmp
lret
call
inc
jb
mov
test
jge
or
pop
data16
test
sub
pop
or
adc
enter
cmpl
inc
and
jae
out
or
addb
sbb
mov
mov
orb
add
imul
mov
mov
test
sub
pusha
lret
inc
jle
push
jecxz
loopne
push
xorl
in
jns
dec
shlb
mov
lret
adc
outsl
lock
test
repnz
jmp
stc
rclb
dec
mov
cwtl
inc
push
add
dec
pop
push
jle
cltd
push
or
adc
and
cli
inc
addr16
push
bound
add
scas
and
or
shrb
push
lret
addr16
push
xor
fcomip
sub
pop
add
jp
movsb
std
mov
xor
push
mov
popl
dec
mov
inc
cli
mov
popa
scas
pop
or
fcoml
inc
iret
dec
xor
outsb
adc
add
mov
loopne
dec
sbb
lret
cmp
mov
cltd
into
fildl
sub
ret
lret
jg
adc
sbb
xor
inc
push
mov
xchg
or
push
cmpsb
into
and
mov
outsb
sbb
sahf
cmp
mov
xchg
out
mov
jmp
lds
into
sub
mov
push
jns
jne
or
xor
cli
dec
fsubrs
repnz
push
inc
dec
mov
lods
jecxz
nop
xor
fwait
cmc
jnp
subl
test
lds
pushf
outsb
mov
dec
or
mov
xor
outsb
repnz
ret
int
stos
jle
push
sbb
dec
mov
int3
jne
and
ret
loopne
ret
add
sub
rcr
pop
adcl
and
mov
push
roll
sub
xchg
rorb
stc
xchg
push
jnp
ret
lods
push
mov
repnz
adcb
test
aad
mov
add
and
xor
mov
add
mov
jb
jb
sbb
daa
cmp
rolb
jmp
mov
sub
push
mov
cltd
adc
mov
shlb
add
sub
fwait
sbb
inc
lods
mov
mov
push
int3
lea
call
cmp
aaa
pushf
mov
push
movsl
mov
lds
cmpsb
adc
jge
sub
pop
mov
sbb
dec
adc
and
jbe
inc
lds
mov
xchg
mov
insl
stos
mov
ss
inc
insl
add
mov
lret
stc
mov
jle
add
int3
push
mov
inc
mov
jmp
xlat
jb
dec
and
xchg
bound
jb
sub
cmpsl
adc
jae
mov
inc
push
enter
out
sbbb
test
lock
cmp
push
adcl
pop
test
adc
push
in
xchg
sub
aam
je
lcall
in
mov
popl
xchg
cmp
call
aad
cwtl
add
xchg
subl
xchg
jnp
jg
sub
inc
inc
test
add
data16
inc
xchg
enter
add
pop
dec
pop
jecxz
rorl
cwtl
pop
jb
cwtl
or
imul
leave
mov
push
mov
ljmp
jp
lea
xchg
lds
jo
sahf
sbb
push
lcall
bound
insb
adc
cmpsl
subl
subl
mov
repnz
scas
sub
pushf
dec
dec
add
mov
adc
mov
adc
addl
lock
push
xor
vmovsd
adc
int3
pop
sub
mov
fildll
or
into
add
les
mov
sub
ljmp
jns
sub
insl
sub
aam
ficompl
sub
inc
fs
iret
cmp
cmc
out
mov
dec
aaa
shll
cmp
ret
pop
xor
sbb
mov
dec
je
ret
pminub
mov
in
cmp
adc
xor
jno
add
sub
loopne
imul
xchg
adc
enter
adc
add
or
outsb
jge
das
mov
dec
roll
movq
sbb
ss
scas
decb
mov
cmp
mov
leave
stos
mov
cmp
movsb
repnz
inc
ficomps
fsubs
inc
call
adc
xchg
dec
dec
push
xchg
fimuls
dec
clc
mov
mov
mov
cmp
inc
push
int
ds
cmpsb
mov
loopne
push
ds
ret
or
pop
and
nop
je
inc
mov
ret
inc
rclb
shrb
sbb
lds
sbb
push
mov
or
mov
into
mov
inc
jecxz
jne
push
jl
xchg
rorb
push
lea
call
insl
enter
cli
aas
pop
sub
rol
adcl
pusha
repnz
jg
nop
or
cmp
push
or
inc
cli
orb
popl
pop
inc
or
xchg
and
scas
lock
sub
adc
test
push
xchg
lock
push
cs
cmp
jo
lock
loopne
adc
aad
xor
and
mov
ret
shl
push
push
xchg
aaa
mov
mov
cmpsl
lcall
es
daa
dec
fs
jo
aas
push
mov
mov
mov
sub
icebp
jb
loope
es
in
xchg
aaa
xchg
into
xor
outsb
adc
fdivl
mov
xchg
scas
dec
dec
mov
pop
dec
cmp
xchg
inc
mov
cltd
cli
and
hlt
or
push
adc
pushf
jo
popf
xchg
push
rclb
mov
popl
into
imul
cmpsb
icebp
push
push
push
mov
movsb
pusha
repz
inc
and
bound
mov
and
dec
lods
sub
repz
addb
ret
push
push
sub
inc
lds
inc
outsl
push
or
pop
in
pop
xorl
hlt
push
ret
ret
mov
into
pop
inc
lcall
pop
loop
pop
out
sub
xchg
sbb
dec
test
into
cs
es
les
leave
mov
fidivrl
xor
out
fildl
inc
dec
xorb
addr16
mov
shll
divl
adc
out
xor
sub
mov
dec
add
mov
xchg
mov
and
xchg
lret
mov
fimuls
lcall
xor
adc
pop
cmpsb
push
jg
test
and
jne
roll
jo
and
fs
sub
out
into
cmp
mov
xchg
jae
add
xlat
pop
pop
stos
stos
dec
loop
xchg
lret
test
inc
fists
add
cltd
cmpsl
icebp
iret
push
xchg
pop
push
mov
aam
dec
push
jbe
mov
inc
or
jl
cmpsl
or
mov
cmp
ljmp
dec
jno
pop
shl
lret
bound
sub
insl
cwtl
pop
inc
stc
xchg
mov
xchg
fcoml
lds
push
cld
lods
mov
imul
jle
pop
fwait
or
cwtl
cmp
nop
pop
cmp
xchg
push
pop
xchg
add
adc
addr16
inc
mov
mov
inc
out
xor
aas
lods
pop
lods
add
insb
ficomps
pop
sar
lahf
xchg
ror
jns
fadds
jno
ds
push
dec
inc
jno
mov
xlat
repnz
adc
movsl
jmp
pop
gs
pop
mov
jl
pop
out
sbb
and
or
call
xlat
gs
mov
iret
loope
add
mov
sbb
ret
inc
mov
jle
mov
dec
mov
sbb
mov
arpl
scas
sbb
xchg
shll
sbb
fstl
mov
jns
mov
dec
pushf
int
mov
test
push
lea
cld
int
jo
jge
fisttps
hlt
shll
xor
lret
inc
cmp
push
popf
shlb
xchg
xchg
int
insb
jge
ds
add
jle
or
jl
mov
push
mov
jmp
dec
or
pop
inc
sub
dec
push
xchg
push
je
icebp
daa
ret
movups
push
push
cld
lds
shlb
push
test
insl
dec
pop
sbb
repnz
ret
cwtl
int3
jl
mov
sahf
adc
mov
int
aam
dec
rorl
or
mov
push
out
lret
xchg
mov
arpl
sbb
mov
in
fs
mov
mov
mov
push
fsubrl
mov
or
adc
ret
inc
push
dec
int
repz
push
mov
sbb
addb
scas
fcomi
jb
mov
popa
jnp
loope
ret
cmp
or
ss
sahf
adc
movsb
int
xchg
inc
and
mov
dec
lea
fnsave
inc
cmp
mov
or
iret
sub
dec
push
nop
jle
testl
ucomiss
pop
aam
mov
andl
hlt
lods
leave
push
roll
pop
mov
sarl
imul
jp
inc
test
jecxz
sub
test
or
xor
cld
cmp
lds
cltd
pop
insl
addl
shll
adc
clc
mov
dec
adc
enter
sbb
in
insl
mov
cli
mov
out
es
loop
sbb
jno
mov
pop
mov
popf
inc
dec
jbe
call
ret
test
jnp
adc
jge
fildl
jecxz
test
lods
int
test
jmp
out
sarl
in
test
out
mov
fadds
inc
add
icebp
mov
or
sbb
pop
mov
jb
pop
mov
jp
les
enter
lods
add
add
jne
inc
pop
mov
adc
push
sbb
mov
inc
test
popa
aad
mov
rol
mov
rorb
add
jno
cmpsl
rorb
dec
mov
cmpsl
test
nop
xor
sahf
mov
inc
inc
bound
lds
mov
iret
inc
lods
and
adc
jmp
cmp
or
inc
push
out
cli
jmp
in
dec
aas
gs
sbb
mov
mov
or
and
nopl
sarl
imul
push
xchg
in
push
or
shrb
mov
jle
test
xchg
mov
mov
adc
das
repnz
add
stos
xchg
cld
aas
or
jnp
movl
and
mov
xchg
leave
andb
jnp
xor
jb
xchg
cmp
xor
xor
jg
push
xchg
bnd
push
cmp
shld
rclb
scas
fcmove
or
lret
mov
in
sbb
jg
addl
push
test
dec
int
imul
dec
jmp
aas
fstpt
shrl
add
push
add
test
dec
cmpsb
inc
jge
pop
jb
fldl
cltd
test
incl
dec
push
inc
je
pusha
insl
cmp
add
mov
cmpsb
pop
jge
xor
movsl
adc
xor
push
mov
inc
xor
xchg
mov
loope
inc
cmovno
xor
xor
rorb
cmpsb
ljmp
and
mov
inc
das
mov
mov
mov
xor
sarl
sahf
add
jb
mov
stc
add
ja
mov
push
scas
inc
xchg
cmp
ror
jecxz
lcall
add
pop
scas
pop
push
aam
sub
test
mov
out
out
xchg
add
xor
aad
adc
inc
and
lds
test
dec
addl
bound
dec
or
jb
push
push
dec
into
xchg
cmp
lret
push
nop
into
and
pop
roll
xchg
adc
push
sbb
jno
mov
icebp
dec
imul
sbb
dec
inc
mov
sub
and
leave
pop
cwtl
xor
dec
dec
push
inc
cmp
mov
pop
or
xchg
bound
mov
movsl
paddw
xchg
stc
mov
dec
mov
inc
cmp
incb
ja
sarb
mov
das
outsb
push
dec
pop
or
sub
xchg
mov
jae
inc
movsb
sub
cs
popf
jno
out
add
sbb
dec
dec
inc
scas
pop
and
loop
adc
mov
aad
cld
sub
pushf
mov
adc
xor
lcall
inc
push
jo
mov
sbb
into
jo
std
fmuls
pop
andl
fidivl
cltd
inc
sub
jno
xchg
lret
sub
inc
out
into
xchg
adc
pop
lods
inc
mov
xorb
loopne
mov
mov
fstl
shll
addb
dec
adc
jle
and
adc
cltd
call
jge
adc
push
pop
cmp
jns
fdivl
stc
insl
test
loopne
mov
xchg
icebp
aas
push
popa
xchg
pop
scas
push
shll
and
xor
std
hlt
push
int
outsb
cmp
xchg
push
out
mov
incb
imul
iret
xchg
mov
mov
inc
mov
clc
dec
add
jmp
fdivrs
aas
stos
pop
xchg
outsb
fwait
popf
or
push
popf
in
inc
push
add
add
inc
jb
outsb
and
pop
push
inc
das
cmp
add
xor
dec
mov
adc
mov
imul
inc
jmp
and
push
mov
lret
stos
or
jg
mov
push
std
stc
jnp
push
out
xchg
into
mov
jno
inc
outsl
inc
xor
cltd
js
js
cmc
cmp
repnz
and
bound
adc
test
jg
lret
xor
xor
xchg
adc
fsubl
lret
push
sub
mov
add
js
push
xor
lds
dec
xor
sbb
or
mov
adc
or
lret
inc
dec
in
mov
xor
fstps
mov
mov
mov
pop
fldcw
mov
jnp
enter
xor
inc
sbb
mov
int3
test
loope
scas
or
mov
shrl
sbb
cs
jns
xor
loop
std
es
andb
mov
cmp
insl
jmp
scas
or
push
push
scas
jno
lahf
pusha
mov
imul
xor
cltd
adc
inc
mov
es
dec
mov
dec
scas
leave
test
inc
push
jne
pop
mov
int
sbb
mov
adc
outsl
stos
dec
stc
call
inc
gs
push
and
or
enter
gs
ss
xchg
push
push
xor
es
js
jl
stc
lret
inc
mov
xor
gs
dec
adc
sub
enter
fadd
call
mov
adc
add
in
scas
fstl
mov
push
push
pop
push
push
loop,pn
mov
mov
sbbb
jp
inc
xor
xchg
push
cmp
aaa
aam
mov
jmp
cmp
push
sub
pop
push
adc
inc
jmp
add
mov
rcl
inc
mov
sub
scas
mov
js
shll
jg
mov
push
jae
inc
sub
sbb
push
xorl
and
je
stc
jg
loop
idivb
adc
stc
fsubs
lods
push
xor
sub
cmp
fbstp
outsl
cmpsl
mov
adc
sarl
mov
repz
les
jo
xchg
lds
stos
jl
fistl
xor
sub
push
push
inc
rcrl
push
jns
fwait
push
iret
mov
dec
lret
adc
pusha
or
mov
ret
inc
insl
inc
xchg
add
rcrl
mov
mov
mov
inc
mov
outsl
icebp
push
cs
xchg
pop
mov
push
cltd
into
and
adc
rcrb
fs
inc
inc
shrb
aas
cmpb
stos
mov
shrl
scas
shrl
mov
inc
insb
pop
rorl
or
inc
lds
jns
push
mov
mov
xor
mov
lret
inc
sbb
nop
jbe
jge
adc
aas
std
xor
inc
cltd
push
sbb
dec
cs
ds
mov
cwtl
cld
in
out
vcvtsi2sdl
cld
ret
lret
sti
push
dec
inc
jge
outsb
xchg
push
jb
idivb
data16
call
sbb
xor
fwait
std
rclb
shr
sbb
subl
out
enter
pop
push
fsubrl
inc
ret
repnz
jbe
mov
and
es
jge
test
push
popa
jg
hlt
ja
out
movsb
fsubrl
xor
dec
in
lret
mov
jae
or
mov
insl
rclb
mov
adc
popf
mov
mov
mov
mov
adc
add
mov
stc
pop
jae
cmp
fcmove
jg
cmp
aas
inc
sub
sbb
adc
scas
push
fists
inc
loope
mov
dec
das
into
clc
repz
cld
addr16
stos
add
sub
int3
cltd
nop
stc
enter
mov
in
sbb
leave
into
stos
mov
lcall
and
push
leave
jp
gs
ss
mov
adc
leave
lret
inc
or
dec
lcall
int
mov
sub
leave
add
imul
sbb
mov
rcl
sub
xlat
inc
add
mov
adc
enter
in
mov
call
dec
jp
insl
repz
cmpsb
movsb
repz
jne
ror
push
inc
add
push
rclb
mov
es
and
jns
lock
idivl
movsb
int
adc
sub
mov
bound
out
mov
xor
add
in
jb
daa
xor
adc
repz
inc
adc
idivl
pop
fsubl
xchg
sub
test
lret
movsl
loop
inc
push
jmp
into
repnz
jle
push
add
sahf
sub
mov
jne
jne
outsb
fcoml
imul
data16
ret
sbb
jo
addr16
ljmp
mov
inc
pop
clc
xchg
pop
bound
xchg
out
and
aas
ficompl
test
xor
or
pop
out
imul
mov
push
dec
add
pusha
dec
adc
mov
mov
xor
flds
test
aaa
enter
cmpsl
int3
mov
pushf
xor
inc
mov
rcrl
and
iret
pushf
int
sub
push
icebp
stos
popa
cld
mov
pop
in
dec
push
mov
dec
jp
nop
ror
roll
std
ret
jno
in
xchg
xchg
sub
dec
mov
testb
xchg
sbb
jle
push
and
mov
rcrb
and
push
mov
and
lods
int3
fisubrl
enter
dec
jae
fdiv
mov
in
or
lret
add
shll
inc
xor
inc
enter
push
hlt
push
dec
sarb
inc
aaa
sahf
mov
mov
mov
xor
insl
cmp
mov
pop
sbb
mov
mov
rolb
test
daa
mov
dec
fstp
cmpsl
or
xchg
adc
fistl
or
fmuls
mov
lret
adc
mov
aam
inc
jno
dec
sub
cmp
pop
and
xchg
data16
push
ret
jo
fmuls
in
cmp
push
pop
pop
push
outsl
in
adc
rorb
int
or
lcall
mov
push
scas
and
push
xchg
mov
movsb
nop
jl
nop
inc
add
sub
in
adc
mov
jmp
sbb
sahf
daa
pop
dec
js
mov
out
jg
mov
mov
or
jl
jae
std
rorl
pop
ret
mov
cmp
dec
sub
ret
cld
jae
cs
dec
push
mov
inc
mov
ss
mov
cmp
addr16
out
inc
enter
cmc
lret
mov
ror
xchg
mov
inc
mov
or
push
inc
addr16
mov
aas
stos
push
mov
mov
push
pop
sbb
or
cmp
pop
scas
jns
sub
stos
pop
jp
or
dec
sti
lea
mov
mov
outsb
rolb
jnp
mov
out
xor
mov
negl
stc
and
popf
and
adc
inc
mov
push
ds
cmp
add
clc
sub
mov
inc
lea
pusha
cmp
ficoms
lcall
mov
and
mov
jecxz
sub
pushf
in
mov
lea
cmpsb
sub
mov
xchg
dec
mov
outsl
lcall
sub
popa
push
xchg
dec
dec
mov
sub
push
daa
jno
subb
arpl
daa
cltd
stos
adc
dec
add
sub
loope
cs
rcrl
mov
lret
les
mov
insl
roll
mov
faddp
add
ja
adc
push
and
roll
testb
adc
decb
mov
lcall
dec
inc
dec
sbb
and
inc
mov
xchg
fildl
sahf
mov
and
scas
clflush
pop
aam
mov
rcl
stc
into
and
clc
pop
cmp
sahf
jnp
sub
cmpsb
jo
xchg
adc
and
xor
push
pop
rorl
and
stc
in
and
inc
roll
add
jns
int
dec
pop
push
mov
mov
cmp
jae
and
xor
das
dec
sub
cli
test
push
movsl
push
in
pusha
sub
bound
xchg
daa
popa
ljmp
add
adc
imul
stc
in
call
xchg
push
mov
pop
adc
cmp
jecxz
das
test
fildll
inc
push
or
inc
cwtl
xlat
cmp
leave
decb
push
dec
test
lods
mov
pusha
add
lret
xor
pop
sub
test
into
jae
pop
dec
leave
inc
cmp
insl
adc
pop
sub
mov
sub
repnz
or
push
inc
mov
pop
mov
nop
in
add
and
fisttpl
xchg
fldl
shlb
pop
mov
or
add
test
xchg
enter
mov
push
and
into
push
jg
sbb
mov
nop
ds
mov
push
shl
lods
adc
dec
sub
pop
inc
mov
cwtl
into
mov
add
sarl
lods
enter
mov
leave
inc
cmp
push
mov
popf
fiaddl
ljmp
cwtl
pusha
sarl
gs
mov
mov
imul
xlat
inc
mov
and
sbb
lret
pop
rorb
jbe
ja
movsb
stos
call
cmpl
out
roll
sbb
jns
dec
mov
sbb
push
insl
mov
mov
push
insb
loop
cs
inc
inc
xchg
mov
rcrb
test
in
xchg
pop
movsl
gs
add
rorb
mov
inc
psubusb
inc
test
arpl
iret
mov
das
inc
mov
rorl
int3
insb
lret
mov
inc
xchg
ficomps
mov
cmpl
jp
push
jmp
sarl
inc
add
les
mov
xor
dec
xor
jmp
jle
push
xchg
mov
mov
and
sbb
stos
inc
es
xchg
adc
or
into
mov
mov
cmp
jno
jecxz
lods
mov
push
insb
stos
mov
push
xor
ror
scas
jo
scas
adc
rcrb
bound
rcll
dec
mov
mov
dec
cmp
inc
push
cmp
mov
xor
push
in
or
mov
aad
aas
test
mov
push
leave
or
lret
jb
push
aaa
inc
fwait
lods
add
jg
push
mov
pop
inc
sbb
mov
cltd
stos
dec
out
dec
mov
sub
addr16
test
dec
lds
add
sar
mov
daa
dec
add
xchg
insb
ret
dec
jmp
mov
test
mov
fisttps
sbb
mov
shr
push
mov
pop
int
adc
rcrw
sarb
lret
rcll
and
int
or
sub
into
jecxz,pn
pop
rcll
leave
mov
cmp
add
shl
mov
dec
mov
test
dec
xchg
int3
add
jp
mov
sbb
sar
ret
mov
sahf
adc
xchg
mov
movsb
adc
mov
xor
cmc
lea
ss
int
mov
pop
dec
fmulp
sub
inc
sbb
or
inc
nop
lea
sub
xchg
inc
mov
inc
jo
pop
add
jnp
or
mov
pusha
inc
sbb
popf
mov
jmp
lods
ror
insl
pop
leave
rol
icebp
and
sarl
push
xchg
cmp
sbb
in
pop
rcl
lea
in
lcall
fadd
mov
push
jg
inc
pop
adc
aad
idivl
and
mov
cld
lret
rolb
inc
clc
addl
and
sub
adc
or
rclb
or
mov
xchg
sti
sub
jb
insb
or
dec
xor
hlt
pop
nop
xchg
push
cmp
test
lds
adc
or
cwtl
adc
inc
pop
cmp
fildl
inc
mov
and
loope
sbb
mov
int
jmp
adc
push
or
clc
sbb
mov
adc
xor
push
scas
mov
insb
insb
mov
out
call
adc
xor
imul
fmul
movsb
sub
fcoml
pop
fs
out
sahf
dec
xchg
incb
or
xchg
gs
jae
lods
adc
sbb
pushw
imul
jecxz
dec
hlt
mov
or
cld
movl
js
pop
xchg
iret
inc
push
add
in
stos
pusha
sbb
xor
pmaddwd
mov
shll
jnp
shrb
outsl
and
mov
in
mov
test
cmp
notl
cmp
adcb
sarl
out
testb
add
sbb
scas
rorb
add
nop
push
notb
icebp
adc
cmp
inc
nop
cmpsb
xor
idivb
fists
lcall
repnz
push
insb
mov
jl
loope
fwait
inc
mov
mov
mov
mov
mov
xor
int
pop
into
ds
lods
pop
fidivs
imul
loopne
and
cld
sub
mov
movsb
mov
jb
cmpsl
inc
daa
daa
jecxz
cmpsb
test
in
lock
adc
xchg
fsubr
ds
cs
fidivrs
mov
ficoml
sub
pop
sbb
int3
clc
inc
inc
pop
pop
ficomps
sub
sub
stc
out
rorl
cs
in
inc
mov
jno
sub
bswap
or
pop
test
pop
jmp
test
fbld
add
mov
inc
into
call
repnz
inc
mov
jg
mov
jns
pop
xchg
adc
dec
xchg
dec
in
sub
mov
xchg
ret
call
jle
shlb
cmp
adc
jge
jno
cmc
xor
int
mov
xor
mov
lahf
inc
neg
inc
jle
mov
mov
clc
xor
pop
inc
sahf
int
pop
inc
adc
imul
jno
mov
ret
lcall
mov
fcoms
dec
xor
lcall
sti
push
fsubl
scas
xchg
mov
les
lss
mov
cwtl
mov
sub
pop
jmp
fldenv
push
movl
adc
push
adc
mov
movsl
sub
addr16
sub
add
rcll
insl
and
inc
mov
cmp
lahf
dec
mov
dec
addr16
loopne
and
aam
pusha
push
pop
adc
cmpxchg
sbb
cmpsb
push
and
adc
add
mov
mov
inc
sahf
push
je
pusha
adc
dec
ds
xor
cli
adc
inc
fidivl
xor
loope
and
fnstcw
and
inc
sbb
mov
sub
in
rorl
fdivl
mov
pop
daa
pop
ljmp
in
rcll
jno
or
adc
jmp
ffree
cltd
pop
and
inc
rorl
fidivrs
jae
pop
sahf
repz
inc
ja
mov
loop
push
xchg
push
out
clc
aas
dec
mov
and
dec
insb
push
fistl
pop
jns
inc
dec
mov
xchg
test
leave
mov
cmp
push
jnp
push
or
gs
sub
gs
mov
mov
and
jge
dec
stc
cltd
popa
jg
pop
rcll
imul
test
inc
mov
aas
push
dec
sbb
pop
dec
stos
jge
mov
xor
xchg
mov
add
and
mov
ds
movsb
mov
loop
xchg
mov
pop
sbb
dec
xor
add
xchg
add
jg
sub
and
ljmp
xor
jne
imul
add
mov
push
int
inc
aas
mov
mov
cmp
or
sbb
sub
stos
adc
mov
out
sbb
fcompl
cmp
adc
pop
jle
inc
jmp
xchg
xchg
nop
pop
mov
sub
movsb
dec
push
aaa
mov
push
add
push
push
xchg
lcall
inc
mov
subb
dec
call
mov
repz
dec
out
lods
lcall
test
mov
gs
incb
xor
fidivrs
flds
sbb
fistps
inc
xchg
push
mov
jns
inc
fwait
sub
fmull
mov
fnstcw
aad
stc
leave
jmp
add
push
inc
mov
and
int
pop
test
push
mov
popf
jb
pop
mov
or
dec
mov
popa
inc
test
fcmovnb
ljmp
jg
adc
insl
popf
test
test
mov
sar
in
orb
mov
adc
rorb
xchg
int
pusha
inc
stos
pop
sbbb
in
loope
fcmovnb
aam
ret
jl
mov
jo
xchg
cli
xchg
xchg
and
sti
int3
push
xchg
push
dec
jg
arpl
scas
cmp
jge
mov
pop
data16
push
sbb
sahf
sbb
cmp
xor
loopne
jmp
sahf
std
nop
cmp
mov
test
mov
xchg
fs
inc
adc
push
xor
push
xor
push
std
push
mov
scas
xor
hlt
push
pop
mov
jle
shlb
jle
insl
xor
mov
js
mov
jge
dec
adc
outsb
mov
sar
xchg
cli
lea
nop
in
rol
ret
fsubl
stos
cs
cmpsb
lock
inc
dec
dec
int3
das
aas
add
xorb
sub
ret
adc
movsl
adc
dec
rcll
push
into
inc
imull
lods
fidivrl
mov
loope
or
inc
push
push
pop
leave
inc
jg
jo
ret
int3
and
sti
sbb
pop
add
sarl
mov
dec
cmp
daa
out
xchg
imul
mov
pop
ret
mov
popf
sarl
mov
dec
rolb
ds
in
outsl
js
jo
loop
aad
and
test
jns
dec
inc
std
dec
loopne
mov
xchg
ret
icebp
inc
and
push
push
sti
xchg
inc
sbb
stc
push
std
imul
imul
push
sbb
cmovo
cmp
mov
mov
sarl
sbb
call
mov
iret
inc
lock
rolb
out
push
cmp
inc
push
and
mov
inc
push
inc
nop
dec
mov
xor
xchg
dec
int3
ret
inc
cmp
add
cmp
mov
mov
notb
adc
xchg
and
cmp
pop
mov
push
jo
aaa
insb
loope
mov
lcall
cmpsb
dec
inc
jns
mov
test
add
dec
inc
jnp
or
dec
inc
add
cmp
xor
dec
insb
mov
and
jno
insl
ret
cmp
iret
ret
push
ror
sub
cs
or
ret
push
inc
scas
xchg
dec
iret
xchg
shll
inc
scas
iret
lea
jb
repz
iret
test
inc
inc
inc
js
iret
fs
mov
cmpsl
in
iret
popf
and
xchg
or
lret
inc
inc
or
or
cmp
xor
push
dec
mov
js
iret
fs
rcrl
cwtl
mov
mov
push
cmp
mov
pushf
cmovl
enter
stos
mov
cmp
enter
test
adc
mov
mov
lcall
lds
mov
dec
movsb
dec
rorl
pop
repz
insl
ror
push
xchg
loop
xor
addl
not
bound
out
jns
jecxz
repnz
or
dec
jbe
adc
inc
mov
addl
in
dec
ss
mov
sub
cltd
or
rcll
ljmp
mov
mov
mov
mov
dec
cmp
mov
mov
fwait
rol
cmp
out
sub
std
push
push
push
popa
and
inc
adc
or
inc
inc
inc
mov
push
sbb
inc
inc
lds
cmp
jl
ret
pushf
or
test
inc
jne
inc
jle
or
dec
mov
mov
out
out
aaa
popa
lods
notb
das
int3
mov
out
xchg
jg
push
xchg
lret
sbb
push
iret
ret
mov
push
lret
sarl
jl
adc
adc
rcl
subb
mov
cmpsb
mov
xor
ret
xor
insb
xchg
fsubp
mov
pop
imul
stc
into
faddl
inc
push
mov
adc
sarb
inc
pop
push
and
mov
insl
dec
inc
stc
in
xchg
rolb
jnp
bound
pop
or
inc
jmp
addr16
push
xor
push
sbb
fs
and
pop
push
fadd
test
loopne
ss
in
cmc
lret
sbb
xchg
sbb
insb
aad
inc
nop
mov
and
mov
mov
cmp
cmpsb
addl
adc
xor
in
mov
mov
mov
jae
lret
push
sbb
push
lcall
jmp
mov
movsb
ret
and
gs
shll
cmp
jne
stos
mov
adc
inc
in
adc
jg
sbb
xchg
cwtl
jg
sahf
jb
xchg
pop
pop
cmpsb
jb
lock
jecxz
les
xchg
mov
cmp
push
clc
insl
stc
rcr
lea
cmp
push
adc
mov
push
sub
inc
bound
shl
stc
lods
imul
int3
inc
cwtl
cmp
jns
enter
shrl
mov
mov
in
inc
or
push
cmp
inc
aad
inc
ret
popa
shrb
leave
xchg
test
mov
jmp
push
ret
les
cmp
int3
xchg
cmp
xor
enter
cmp
sub
mov
inc
test
mov
mov
dec
or
enter
enter
iret
mov
das
imul
lods
inc
or
push
rcll
insb
adc
jno
jle
add
or
roll
or
dec
and
push
in
mov
push
dec
lcall
popf
mov
mov
xor
in
out
enter
and
aad
push
mov
js
enter
or
nop
clc
push
adc
shr
push
cmp
dec
xor
lahf
movsb
and
sar
xchg
scas
mov
sbb
push
xor
dec
loopne
rorl
jo
or
je
dec
dec
sub
or
xor
stc
push
in
fidivs
or
pushf
shrl
inc
mov
rol
scas
dec
lret
push
cltd
pusha
inc
dec
pushf
sub
ljmp
inc
int3
cmp
stos
dec
pop
imul
ret
and
push
push
sarl
stos
dec
cwtl
iret
pop
cmp
push
mov
inc
inc
mov
mov
adc
dec
mov
call
sahf
sti
ret
lret
lret
lcall
repz
dec
in
add
sahf
insb
mov
inc
add
in
push
jg
xor
adc
imul
and
adc
add
leave
cmpsl
mov
mov
fisubrs
sbb
cmpsb
mov
fsubl
rolb
mov
mov
lock
mov
cmp
or
mov
pop
or
xchg
jmp
dec
cltd
stc
frstor
out
mov
and
mov
loope
aaa
rorb
in
xchg
fsubs
fmul
and
popf
pop
inc
push
cmp
out
mov
adc
loopne
ficoml
pushf
outsb
lret
or
mov
sbb
adc
cld
add
iret
cmpb
jb
sti
scas
mov
xchg
pusha
test
cmc
flds
roll
in
lret
sub
jge
mov
insl
cmp
into
dec
dec
adc
adc
xor
mov
cmpsl
adc
xchg
sub
mov
inc
ret
dec
or
fidivl
jge
add
sub
icebp
sub
addl
jns
nop
test
andl
pop
popa
xchg
out
and
nop
stos
xchg
negb
rolb
rorl
push
and
aas
xchg
in
mov
inc
push
xchg
stos
or
int
sub
mov
outsl
imul
sbb
ljmp
push
aas
lock
or
insb
mov
sbb
pop
mov
cmpsb
mov
push
sub
cmp
jp
or
mov
mov
or
sarb
mov
push
xchg
lods
mov
cmp
mov
mov
rorb
repz
icebp
std
mov
rcll
sbbb
sar
test
daa
mov
or
jnp
jp
repz
sub
inc
out
sub
popf
inc
int
xchg
mov
add
or
in
fisubrs
cmp
adc
push
movl
scas
lahf
or
push
roll
xadd
cltd
adc
iret
sbb
mov
push
or
mov
inc
call
ljmp
inc
sti
inc
cli
cmpsb
nop
push
daa
push
lahf
jo
xchg
inc
insb
les
and
mov
push
test
insb
mov
push
inc
jle
les
lea
adc
push
inc
inc
lahf
fcmove
adc
lret
push
add
out
add
stc
iret
dec
dec
lret
gs
rolb
outsl
cld
xchg
ret
sti
in
lea
xchg
push
inc
xlat
adc
cmp
shrb
adcb
lods
add
lods
mov
ficompl
rol
xchg
mov
movups
push
mov
jb
int
mov
roll
cmpsl
xor
stc
push
inc
stos
shll
or
rcll
jb
pop
out
mov
ds
push
aad
mov
push
into
mov
sub
push
sub
push
mov
cmp
mov
jbe
mov
mov
dec
inc
test
inc
mov
sarl
mov
popf
enter
jecxz
pop
dec
dec
insb
sahf
mov
mov
shll
mov
insl
icebp
outsl
dec
mov
repnz
inc
jge
push
xlat
mov
in
cmp
cmp
rclb
repnz
dec
mov
push
rorl
lds
sahf
mov
dec
adc
das
es
test
inc
insb
mov
mov
inc
gs
aaa
cmp
mov
into
cmp
inc
and
rcr
mov
jns
into
xor
out
into
lods
sub
ret
imul
mov
mov
jmp
and
jg
xor
push
mulb
push
lret
xor
push
pop
jnp
mov
adc
icebp
pop
add
or
push
adc
adc
and
fcoms
cmp
pop
ljmp
jo
add
cmp
ja
ret
leave
mov
mov
sub
push
int
add
aam
fildl
inc
xchg
push
sub
sahf
add
xor
push
dec
dec
ja
sbb
push
xchg
dec
dec
mov
cld
pop
cmp
loopne
pop
iret
mov
insl
push
jl
inc
iret
add
js
xchg
popa
test
adcl
call
xchg
addl
jb
pop
mov
adc
out
inc
adc
loope
addr16
sbb
mov
rcll
and
pusha
xchg
dec
hlt
xorl
push
jnp
add
push
mov
inc
jbe
cwtl
and
insl
push
jl
inc
and
sbb
aas
dec
inc
das
adc
push
movups
add
sar
push
scas
add
mov
jo
push
adc
cmp
mov
or
call
and
xor
sarl
sub
int
xchg
and
mov
cmpsl
ret
xor
dec
mov
inc
sahf
xchg
orl
das
das
test
mov
push
dec
lock
mov
sbb
sarb
ss
xchg
mov
popa
pop
cmp
loopne
mov
and
subb
pusha
cltd
xor
push
rol
jl
mov
test
inc
mov
ja
dec
xor
bt
add
ret
and
pop
pop
pop
dec
jo
dec
ss
addr16
dec
neg
add
sub
lahf
ret
ljmp
jmp
mov
sbb
mov
mov
sbb
push
mov
lds
scas
sub
inc
popf
jge
sub
mov
dec
aas
ljmp
push
mov
fst
les
jns
sub
ret
dec
push
and
sub
xchg
repnz
push
add
out
sbb
adc
dec
shlb
cmc
inc
fidivrs
and
int
ja
notb
cmp
nop
cmpsl
popf
popa
sbb
bound
xor
pop
cmp
push
popf
es
cmp
stc
mov
es
in
lcall
push
fcmovu
mov
cmp
pop
and
aas
xor
adc
and
adc
lcall
cli
shll
fwait
mov
adc
push
test
xchg
mov
out
sub
outsb
fwait
jae
fdivs
pushf
mov
jb
into
cmp
dec
jo
inc
mov
orl
lcall
dec
xorl
xor
cwtl
and
mov
cld
je
std
lret
pop
mov
dec
add
mov
inc
repz
cmpsb
ljmp
push
pusha
popa
scas
dec
mov
pusha
addb
loop
jb
inc
in
decb
xchg
ds
movsl
adc
mov
mov
xchg
in
push
sub
jmp
push
data16
add
mov
xchg
insl
mov
test
int3
ror
xchg
jecxz
inc
xor
pop
pop
pusha
cmp
lds
cli
xchg
testl
rcll
daa
cltd
fwait
add
ja
xchg
pop
xchg
cmp
push
adc
repz
cli
pop
dec
push
or
aam
outsl
pop
fcmovb
add
inc
lcall
sub
rcrl
sarl
xor
sbb
cmp
dec
mov
sahf
pop
dec
adc
pop
orl
loop
push
mov
jle
and
cmp
push
mov
dec
psubusb
mov
call
mov
dec
mov
dec
into
orb
add
push
inc
out
lock
loop
repnz
push
mov
movsl
push
inc
lret
dec
inc
call
cmp
mov
jae
sarl
jg
add
mov
outsb
out
ret
pcmpeqb
xor
fildl
mov
mov
loop
cmp
adc
and
cmpsl
cltd
xor
mov
es
outsl
pushf
out
shlb
inc
jge
leave
pop
outsb
inc
sahf
dec
shll
loope
aaa
repz
sub
pop
inc
je
mov
pop
dec
in
mull
inc
push
push
clc
mov
inc
ret
icebp
inc
and
addr16
aas
sbb
pop
inc
shlb
xchg
fcoms
lds
inc
pushf
stos
shr
xor
inc
fstpl
inc
mov
inc
dec
clc
call
lret
sub
push
inc
dec
shrl
xor
rorl
cli
xchg
nop
mov
es
lods
dec
inc
adc
xor
shll
inc
mov
inc
dec
inc
loope
xor
ret
add
cmpsl
lods
clc
rolb
pusha
cmc
inc
xor
out
dec
mov
cwtl
inc
inc
mov
movsl
pop
dec
cld
dec
in
xchg
jecxz
negl
xor
push
dec
push
inc
xor
rcrl
inc
add
sahf
popf
sub
lret
rolb
dec
std
iret
adc
mov
movsb
inc
mov
out
ret
stc
rolb
ret
sbb
xchg
mov
dec
movsl
fldenv
test
das
outsb
or
and
sub
loope
dec
insb
daa
rcll
mov
push
mov
push
sarl
cmp
or
or
jns
sbb
je
outsb
test
push
insb
lods
mov
mov
in
aad
mov
ljmp
inc
int
inc
mov
lods
addb
iret
dec
cmpsb
or
sub
mov
call
cmp
std
mov
mov
test
or
push
xchg
mov
aam
shlb
jne
rcl
enter
sbb
outsl
int3
rcl
lret
arpl
outsb
fdivrs
dec
in
dec
daa
inc
push
mov
push
or
add
lahf
mov
sub
movb
jl
push
lret
out
dec
adc
sbb
push
jmp
sahf
xchg
int3
xchg
cmp
mov
mov
enter
mov
mov
sub
cmova
xchg
in
leave
cmpsb
xor
xchg
dec
enter
inc
stos
dec
ret
mov
cwtl
addb
push
inc
jb
adc
movsl
inc
cmp
pop
push
and
in
cmp
sub
hlt
mov
rcll
rorl
dec
sarl
mov
mov
clc
push
cmp
iret
lods
test
out
outsl
shrb
mov
inc
pushf
push
sbb
inc
xor
mov
dec
push
ret
aas
inc
enter
lahf
mov
std
nop
int3
ret
arpl
iret
dec
roll
xor
mov
mov
xchg
push
aam
int3
cmpsl
popf
xchg
cwtl
push
inc
mov
push
inc
scas
js
xchg
mov
pop
test
add
test
push
inc
outsb
or
push
ret
icebp
jp
and
dec
mov
insb
pop
inc
sbb
jp
jg
push
ficomps
shll
jp
addr16
lidtl
and
hlt
mov
lret
lcall
mov
inc
inc
cmp
push
inc
sbbb
fs
inc
lods
lds
jo
mov
fcompl
mov
adc
add
pop
sub
sarl
jnp
jmp
mov
or
sub
aas
sub
jnp
jns
mov
push
dec
cwtl
lds
jg
ret
adc
dec
loop
cmp
xchg
fimull
jp
fisttpll
mov
xchg
xchg
data16
enter
mov
sub
mov
into
mov
push
mov
sarl
cmp
mov
lods
xchg
cwtl
test
dec
ret
inc
pusha
repnz
mov
clc
mov
call
mov
or
cwtl
jle
sbb
arpl
push
mov
and
inc
pop
les
outsb
fdivs
addb
and
mov
and
jl
jbe
sub
mov
pushf
cmp
jns
jl
fmull
insb
sub
ret
mov
rcl
sub
inc
cli
inc
int3
je
add
inc
insl
sahf
stc
and
jbe
xchg
cmp
xchg
or
jb
lea
in
mov
jmp
sub
rorb
stc
cmp
xchg
push
and
mov
out
mov
mov
and
loope
xchg
shrl
ret
inc
fmull
stos
jp
fsubp
xchg
es
mov
cmp
int3
sahf
popa
and
jne
lcall
inc
leave
scas
or
dec
and
loop
push
cs
insl
loope
cmpsb
or
jno
and
fadds
inc
stos
andb
rcl
movsb
lahf
mov
mov
sub
lock
inc
mov
xor
xchg
push
pop
movsl
push
pop
gs
and
test
mov
outsb
mov
in
int
fmul
ficoml
pop
push
test
les
shrl
push
int3
push
pushf
ds
xor
and
icebp
das
mov
mov
or
sbb
pop
add
test
insb
push
stc
add
sbb
pop
dec
sub
cmp
fdivrl
lea
iret
push
lods
dec
int
pusha
mov
or
gs
mov
mov
lods
cmpsb
inc
adc
popa
cmp
sahf
nop
in
lahf
mov
push
mov
pusha
push
mov
pop
add
and
dec
pop
movsl
pop
jb
dec
shrl
xor
xchg
lahf
push
addr16
jg
inc
sbb
insb
stos
daa
pop
dec
or
cmp
sbbb
mov
aaa
sub
push
imul
inc
mov
inc
into
and
xor
lcall
jge
add
lds
mov
and
mov
cmc
fdivrl
mov
mov
cmp
xor
mov
mov
nop
in
lcall
loop
outsb
cmp
int3
stc
push
mov
dec
stos
lds
lret
push
jg
cmp
or
add
mov
push
mov
pushf
push
lret
and
inc
jo
divb
push
or
inc
or
fucomi
lock
cmpsb
lahf
sbb
mov
or
mov
hlt
test
sub
daa
or
xorl
out
out
inc
inc
dec
jg
push
xor
inc
sti
cmp
jle
add
mov
in
push
out
rorl
mov
fisttpll
mov
ret
dec
jecxz
jp
mov
sarb
push
cmp
xor
inc
into
lcall
dec
mov
dec
adc
lret
mov
or
inc
jmp
jo
inc
pop
fimull
dec
shll
adc
scas
out
mov
int3
fimull
lret
xor
shrb
fiadds
pushf
pop
ljmp
outsb
shll
leave
mov
and
rcll
jg
int
xchg
mov
in
adc
fistl
sbb
and
notl
mov
ds
inc
sbb
mov
stos
pop
lods
xchg
push
insb
push
xor
mov
sbb
add
imul
fcmove
rcll
push
pop
push
pop
dec
mov
test
int
aaa
repnz
inc
adc
mov
bound
push
add
and
lods
aas
dec
stc
dec
pop
xorb
dec
push
xorb
cld
in
pop
les
cwtl
rol
sbb
test
enter
ficoml
pop
rcpps
add
adc
hlt
test
pop
and
jnp
jb
inc
out
push
jg
xlat
sub
stos
in
inc
xchg
into
fsubrl
pop
outsl
imul
mov
xlat
fucom
xchg
sbb
mov
testl
pushf
push
push
adc
test
in
mov
xor
add
shlb
pop
xchg
adcb
adc
fdivs
mov
sub
cmpsb
mov
iret
xchg
jns
mov
into
leave
cmpsb
inc
sbb
divb
adc
lcall
jbe
dec
mov
push
scas
lea
push
jns
sbb
xchg
outsb
adc
mov
sub
xchg
lret
movsl
xor
addb
into
rcll
inc
fmuls
lahf
push
stos
jge
aad
in
std
xchg
fisubs
mov
add
call
outsb
mov
in
popa
imul
stc
mov
jl
push
fsubrl
push
iret
push
adc
push
into
rorb
dec
dec
adc
sahf
dec
ror
iret
xchg
adc
shll
dec
inc
mov
mov
mov
inc
ror
push
rorb
xchg
inc
or
inc
push
dec
pop
adcb
cmpsb
push
push
xchg
scas
adc
test
into
enter
push
dec
push
dec
push
push
mov
lea
xchg
adc
jecxz
jg
inc
test
xor
scas
xchg
jb
sbb
stos
pop
dec
mov
jmp
push
dec
and
mov
push
addl
inc
push
filds
cli
push
js
lea
xor
and
mov
ret
dec
cmpsb
out
jne
lock
leave
inc
popa
inc
pop
add
xchg
popa
outsb
in
in
lds
push
push
shlb
dec
aaa
mov
mov
inc
push
inc
and
fdivl
int3
and
iret
pushf
iret
xchg
cmp
pop
das
dec
dec
pop
stc
ljmp
stos
adc
add
xchg
iret
dec
mov
cmp
sbb
mov
dec
test
mov
adc
jmp
fisubrs
cmp
sbb
gs
cli
out
mov
ss
and
mov
push
ja
cs
add
cmpl
or
mov
insl
idivb
idivb
inc
inc
daa
shr
mov
sub
mov
adc
les
stc
push
inc
mov
incb
mov
pop
fadd
bound
adc
mov
movsl
pop
jno
rcl
in
inc
jns
pop
inc
cs
shrl
fs
in
and
call
push
push
dec
lds
stos
adcb
in
mov
cmp
out
outsl
push
pusha
adc
jne
in
mov
cmp
pop
cmp
jle
jp
pop
jb
mov
flds
mov
fdivl
sbb
ds
cwtl
sbbl
push
push
cmp
test
xchg
and
push
jmp
lock
mov
mov
cli
aaa
aaa
mov
fstpl
mov
cmc
aas
std
sub
sbb
jp
ret
adc
mov
or
icebp
or
adc
push
ljmp
xchg
mov
loopne
sub
aas
mov
ret
push
adc
jl
jg
out
or
push
mov
adc
mov
in
negl
pop
jb
out
xchg
or
cmp
adc
clc
popa
es
mov
xchg
mov
cmp
or
int
jb
loope
ret
es
xorb
mov
or
cmc
push
xor
inc
push
push
mov
shr
add
rorb
mov
mov
jb
push
lahf
adc
mov
insb
adc
das
mov
mov
lea
jge
inc
sbbl
in
test
cltd
adc
ret
inc
inc
jnp
mov
xor
push
xchg
mov
mov
out
or
and
cmp
scas
push
orl
add
arpl
cmc
inc
mov
rcrb
lock
and
lahf
into
nop
inc
xchg
popf
mov
mov
movsb
andb
push
shlb
xchg
push
jle
inc
pusha
in
cmc
mov
mov
out
lods
test
dec
fsubs
mov
popa
mov
sahf
testl
sbb
and
test
add
nop
push
xchg
mov
ficoms
cli
pop
inc
add
std
subb
inc
mov
leave
xchg
lcall
rol
inc
rorl
dec
icebp
push
push
test
or
push
mov
dec
push
insb
mov
mov
fcompl
push
sbb
xchg
aas
or
rcll
mov
cli
or
jno
push
mov
adc
test
sbb
fnclex
sahf
sar
fucomi
fistl
mov
mov
dec
xlat
adc
adc
adc
dec
test
cmpsl
out
fnstenv
hlt
in
xlat
add
pushf
sbb
cltd
push
pop
sub
lods
mov
lcall
sub
into
and
out
lret
sbb
pop
test
popf
xchg
inc
dec
push
jg
lcall
addr16
xchg
out
rorb
sub
dec
xchg
mov
scas
dec
lret
int3
bound
push
push
pop
out
cmp
in
adc
mov
dec
mov
xor
mov
inc
mov
pop
pop
in
push
rcll
cmc
mov
push
pop
inc
xor
mov
sbb
sub
ret
hlt
and
sbb
cld
adc
rol
mov
jns
inc
dec
rcrl
or
adc
repnz
push
add
test
jp
in
stc
out
push
xchg
outsb
xchg
sahf
imul
add
push
addr16
rcl
pop
icebp
shll
inc
and
cmp
push
lret
dec
xor
mov
in
ror
mov
xchg
mov
xor
mov
push
xor
aam
xor
cmc
or
out
push
push
push
xchg
jle
pop
daa
cmpsl
cmpsb
loop
lds
sbb
lret
daa
andl
and
fwait
jg
adc
addr16
into
add
push
jmp
mov
mov
test
mov
test
mov
dec
sbb
sbb
lock
sub
xchg
int
inc
pop
mov
enter
mov
cmp
rclb
and
push
xchg
fdivr
dec
je
orl
mov
jmp
push
xor
cmp
or
cli
mov
xor
add
xchg
xor
call
mov
ret
in
out
rcrl
jbe
mov
xchg
mov
sub
dec
push
xchg
xchg
sub
nop
vrsqrtss
push
loop
mov
inc
pop
shrl
test
hlt
in
xlat
in
mov
or
fnstenv
sub
dec
outsb
adc
xchg
lret
push
mov
jbe
mov
cmp
ficoml
jmp
and
pop
fdivs
std
movb
idivb
testl
dec
xchg
int
xor
cmc
jo
outsl
mov
adc
sub
cmc
shr
icebp
mov
adc
mov
nop
jne
dec
mov
mov
lods
adc
push
jge
xchg
leave
ret
xor
inc
xchg
inc
ljmp
jo
xor
and
int
inc
inc
xor
xchg
push
inc
xchg
fnstsw
stc
mov
or
adc
es
sub
add
pop
loope
dec
inc
pop
pushl
aam
mov
inc
jno
scas
sbb
push
pop
test
outsl
cmp
dec
cs
adc
jmp
mov
mov
inc
cmpsb
sarl
outsb
sub
mov
lock
inc
sub
add
pop
cmp
lcall
fbld
test
clc
push
push
pop
jg
jg
fmulp
ret
sub
mov
scas
icebp
inc
add
aas
cmp
cmp
jb
int3
xlat
inc
jmp
les
insb
std
push
adcb
mov
andl
stc
ljmp
adc
add
arpl
sub
repnz
inc
outsl
adc
dec
mov
in
pop
xchg
add
incl
cmp
or
add
jb
mov
xchg
test
add
jno
push
cmp
cmpsb
mov
popa
stc
push
sahf
call
add
cmp
add
call
jecxz
shll
stc
mov
in
nop
add
gs
mov
test
or
jb
push
sub
mov
gs
stos
movsl
in
das
sub
dec
add
ss
xchg
sarl
add
sub
dec
mov
cmpsb
sub
add
xor
sub
mov
pop
shrl
mov
andl
mov
inc
loope
sub
inc
stc
xchg
movsl
fisubs
mov
in
mov
xor
mov
dec
lock
push
loope
fistl
fmull
test
js
cmc
add
xchg
insl
and
cli
andl
push
xchg
test
movsl
mov
cli
push
daa
sbb
add
push
dec
into
push
call
jp
dec
jb
xor
mov
jno
fwait
mov
add
dec
subb
fcmovnbe
sub
and
xor
dec
jge
and
ret
shl
pushf
jb
adc
and
ffree
and
out
fidivl
mov
adc
push
mov
loopne
or
rcrl
insb
dec
pop
jns
mov
movsl
rcr
inc
stc
shl
push
fcomps
mov
lods
mov
fs
ror
mov
mov
in
or
or
scas
and
scas
lods
xchg
imul
paddq
xchg
or
add
push
mov
nop
cltd
sahf
imul
sti
loope
ds
sbb
out
push
xor
and
jno
nop
fildl
dec
push
std
pop
ss
sahf
ja
dec
dec
add
mov
imul
shl
addl
hlt
mov
jmp
push
xor
xor
xchg
sbb
jge
dec
repz
jle
or
xlat
cmpsb
andl
xchg
cwtl
sub
and
jo
and
mov
xchg
fadd
addr16
mov
xchg
push
xchg
sti
dec
xor
mov
jg
lock
mov
mov
xchg
cmc
dec
lock
ficoml
mov
jo
ret
sbb
and
jbe
inc
fldcw
mov
loope
loopne
pop
xchg
xchg
ret
push
js
mov
cmp
jbe
mov
sub
pop
sub
mov
fstl
aaa
or
iret
pop
mov
enter
mov
jl
jg,pt
rcll
push
call
push
mov
xchg
adc
rcll
push
mov
xchg
xchg
xchg
pop
add
mov
xor
stc
xor
push
push
and
test
jno
and
sti
mov
sahf
imul
push
fldcw
andl
mov
sbb
and
mov
mov
jnp
aas
mov
mov
jno
push
fs
xor
jg
add
push
das
into
inc
jp
mov
scas
in
arpl
mov
lods
out
dec
push
sbb
or
jo
iret
and
or
test
leave
fwait
or
sub
out
mov
mov
in
or
mov
xor
movsl
push
mov
xchg
sbb
mov
aad
mov
inc
test
pop
pop
dec
cmc
push
dec
stos
or
inc
aas
xchg
push
test
xor
pop
pop
out
xor
or
sbb
in
mov
mov
mov
clc
jb
mov
xor
out
roll
cs
cmp
push
inc
shrb
add
js
mov
mov
jecxz
sahf
add
mov
mov
mov
add
mov
pushf
lahf
xchg
push
inc
sbb
cli
dec
cmc
inc
sbbb
leave
xor
loope
std
mov
fimuls
and
mov
enter
push
dec
and
fs
int
inc
js
test
sarl
arpl
and
add
popf
dec
subb
iret
sub
and
lcall
sbb
pop
mov
imul
ret
movl
loope
call
loop
and
mov
xchg
rorl
fisttps
dec
das
xchg
xchg
andl
fisubl
adc
addr16
inc
aas
mov
bound
jge
adc
aad
add
push
cmpsb
cmpsl
inc
lahf
or
mov
out
add
sbbl
pushf
in
add
insb
iret
mov
pop
inc
aas
bnd
jno
lret
jb
decb
mov
fldenv
push
or
in
inc
ret
fisubs
test
lods
data16
mov
inc
outsb
js
or
or
aad
jmp
xchg
loopne
sub
jp
sahf
inc
outsl
mov
xchg
mov
test
into
and
jge
sarl
fldt
inc
mov
test
push
inc
adc
jecxz
dec
aam
push
in
adc
jmp
mov
out
out
loope
push
hlt
adc
dec
or
dec
out
xchg
test
sub
cwtl
lods
leave
mov
mov
inc
in
mov
ss
mov
mov
js
mov
cs
sbb
inc
push
sub
add
adc
shl
add
inc
aas
pushf
shrl
pop
pop
adc
cmpsb
jae
push
call
inc
rcll
mov
sub
ret
pop
leave
sbb
cwtl
aad
aaa
push
shlb
jno
cmp
jp
insb
int
mov
xor
or
jge
bound
dec
mov
sub
je
adc
inc
je
pop
lret
movl
fistps
jno
sarl
mov
lds
out
cs
rcrb
xor
jg
rcrl
into
lret
aas
mov
enter
inc
inc
xchg
fcomip
test
out
pop
and
mov
or
lret
call
addr16
cmp
inc
dec
inc
push
mov
les
mov
adc
mov
adc
inc
ds
inc
addr16
push
shll
frstor
push
xchg
and
lea
mov
out
addr16
lret
jg
pusha
ror
pop
push
inc
xchg
pusha
mov
cltd
jnp
andb
pop
fdivs
out
ds
rcll
adc
dec
int3
adc
les
mov
arpl
divl
sub
xchg
dec
repnz
xor
xor
test
jp
leave
inc
jg
call
fldcw
mov
xchg
stc
outsl
fnstcw
outsb
out
popf
rclb
sub
push
out
enter
insl
adc
inc
out
shrl
push
xchg
cmp
insl
push
mov
cmp
ds
and
repz
pop
adc
and
int
mov
insb
jb
jb
repz
sbb
sbb
inc
into
shlb
pop
ror
cli
notl
js
idivb
std
cli
popf
loopne
mov
das
and
xchg
add
and
mov
popa
push
and
inc
repnz
xlat
inc
popf
pop
dec
add
test
adc
stos
and
push
sub
fisubl
and
pop
xchg
fs
push
in
xchg
stos
imul
roll
push
daa
mov
sbb
sub
into
es
push
daa
cmpsb
inc
sub
sahf
mov
mov
out
data16
clc
movsl
fcomp
out
mov
dec
adc
jns
cmp
fsubrl
dec
push
inc
imul
inc
insb
mov
pusha
stos
fiaddl
inc
sub
mov
ret
push
outsl
xchg
mov
mov
jp
icebp
adc
mov
adc
in
out
xchg
in
or
push
cmpsl
sub
and
aad
push
push
andb
popf
lea
dec
pop
inc
sub
jo
icebp
mov
mov
ds
in
pop
jle
addr16
cltd
push
jecxz
data16
jno
add
jb
inc
inc
sarb
mov
sbb
addr16
inc
dec
and
mov
mov
hlt
arpl
jo
int
pop
cwtl
nop
daa
in
js
jle
xacquire
mov
int
loopne
repnz
lret
xchg
shrb
sub
xor
in
jg
and
pop
or
push
into
mov
in
fs
or
in
mov
xor
and
jecxz
stos
jnp
adc
leave
in
jmp
dec
rolb
hlt
push
and
xor
das
cs
jmp
push
movsb
loopne
sub
cmp
dec
adc
sbb
and
xchg
lret
sbb
inc
in
mov
orl
rolb
les
push
test
lret
inc
gs
testl
push
in
push
mov
pop
insb
leave
sbbl
sarl
mov
dec
lea
lret
mov
fiadds
loop
jns
js
popf
add
in
or
fsub
cmp
loopne
or
rolb
inc
mov
fsubrs
movsl
cmp
shrb
inc
pusha
adc
or
mov
mov
fistpl
arpl
addr16
in
int
std
jnp
mov
sub
add
mov
jb
jmp
andl
or
shlb
popf
leave
clc
and
out
jb
or
xchg
xchg
pop
sti
xor
enter
mov
out
sub
bound
push
rclb
mov
pop
outsl
les
push
mov
mov
and
fcoml
jecxz
cld
scas
cli
pop
xor
mov
push
add
loop
jecxz
lods
std
mov
in
pop
xor
mov
pop
popa
push
mov
pop
adc
sub
or
sbb
push
or
mov
das
in
dec
inc
sbb
pop
cld
xor
int3
sbb
adc
push
push
adc
pusha
lods
pusha
mov
in
inc
jnp
aaa
mov
andb
inc
pop
hlt
cmp
jmp
shr
dec
nop
ret
into
xchg
xlat
fcoml
insl
rcrb
inc
mov
add
dec
jne
stc
test
ja
adc
xorl
stos
push
push
inc
sub
inc
inc
mov
push
sbb
fbstp
inc
aam
stos
sub
jp
movl
mov
mov
fbld
sub
lcall
or
daa
mov
mov
inc
ljmp
mov
inc
adc
push
cltd
popa
mov
mov
orb
ror
lcall
xchg
int
lret
les
sarb
inc
cld
push
test
imul
cs
mov
dec
cmc
mov
inc
or
repz
repz
cmpsl
cmc
lea
inc
xchg
add
adc
inc
cmpb
mov
lds
mov
jl
jne
cs
add
xchg
out
push
insl
ljmp
int
inc
rorl
xlat
in
fcoml
insl
inc
sub
mov
jns
mov
or
loop
je
push
nop
mov
push
addl
scas
mov
iret
shll
adc
fstl
fsubl
push
mov
cwtl
sbb
cmp
mov
or
andb
jge
jbe
dec
add
inc
pop
adc
push
sub
jge
xchg
mov
and
and
inc
dec
adc
push
mov
or
add
repnz
sub
rorb
out
and
mov
ss
xor
jge
sbb
mov
and
pop
mov
int3
das
out
jo
loop
or
mov
fwait
lcall
shll
outsb
and
pcmpgtb
flds
mov
push
cmp
cmp
sub
push
pop
or
cmp
inc
xorl
mov
fistpl
dec
mov
popl
xchg
shrb
fdivs
push
mov
push
inc
int
repnz
js
xor
xchg
rcrl
orl
adc
ficomps
adc
sbb
scas
cmp
xchg
xchg
mov
and
dec
loop
shl
xor
repz
addr16
pop
mov
faddl
pop
add
mov
sarb
lret
and
cmp
mov
push
push
inc
out
lods
jb
test
scas
outsb
xchg
xor
movsb
iret
pop
insb
push
jecxz
into
fisttpll
xchg
sub
add
mov
add
sbb
mov
addr16
push
xchg
xchg
inc
mov
pusha
aaa
xchg
js
xor
int
lahf
shrb
out
dec
xor
fisubrl
sbb
aas
aas
push
ret
scas
xchg
sbb
sbb
xchg
mov
test
push
ljmp
dec
sub
mov
ljmp
ret
into
jmp
out
mov
dec
pusha
sarl
mov
data16
inc
add
or
rorl
pop
mov
jecxz
loop
test
xchg
lret
movsl
and
shll
inc
adc
xchg
push
fisubs
ret
mov
sub
loop
push
into
xchg
mov
mov
jp
movsb
dec
or
push
and
cmp
out
cltd
xor
cltd
mov
jae
ret
je
not
std
inc
xchg
pop
and
daa
cmpsb
mov
pop
xchg
rclb
and
push
mov
mov
push
push
push
cmp
lahf
mov
insl
jae
scas
add
pop
xchg
mov
push
mov
mov
gs
mov
jbe
fs
in
daa
mov
loopne
js
loope
fwait
mov
imul
fsubr
add
mov
scas
push
jae
ffreep
addr16
stc
xchg
and
dec
dec
mov
inc
jns
test
popf
adc
cmp
jb
pop
stc
inc
outsb
int
nop
es
in
test
cmpsb
inc
jb
outsb
fdivs
pop
inc
dec
inc
inc
inc
adc
loope
in
dec
push
xor
xchg
push
cmp
hlt
rorb
inc
adc
inc
mov
popf
fldl
movsb
fwait
pusha
mov
out
rclb
ret
xchg
inc
int
hlt
cmp
mov
cmp
mov
pop
mov
setl
out
inc
jne
xchg
sub
sbb
mov
scas
sti
cmp
scas
adc
insb
mov
out
and
lods
cmp
inc
inc
or
int
inc
addb
jp
mov
mov
jo
aaa
and
loopne
outsl
mov
adc
push
repz
int3
addr16
add
dec
mov
cmp
mov
adcb
scas
out
fisttpl
mov
sti
and
dec
pop
jns
xchg
dec
pusha
int
aam
xor
or
xor
insb
outsb
fdivrl
mov
sbb
cmpsl
cs
and
inc
lea
inc
test
int
cmp
xchg
mov
add
bound
push
or
mov
sub
pop
sbb
imul
ss
push
lods
fistl
int3
push
loop
stos
movsl
jnp
divl
jl
xchg
mov
push
sbb
mov
push
jb
rolb
xor
and
rclb
mov
iret
and
add
mov
rorb
dec
add
mov
pop
inc
lcall
lret
rorl
arpl
adc
pop
andl
inc
sub
cmp
and
rcrl
rcll
and
xor
cmp
loope
std
in
out
push
sbbb
in
popf
jp
xchg
movsb
les
iret
push
mov
inc
dec
mov
or
xor
push
jbe
jecxz
inc
aas
std
xor
mov
shld
sub
scas
stc
push
jb
cmp
out
out
xor
xchg
adc
xchg
js
clc
and
jecxz
inc
mov
mov
pop
push
or
aaa
jns
xor
cmp
testb
add
aad
clc
jge
loopne
pop
mov
or
je
andb
sub
icebp
clc
loopne
lret
nop
push
decb
lock
out
sbb
fistpll
lds
mov
stos
xor
out
mov
xor
js
or
adc
dec
or
rolb
jecxz
push
xchg
push
orb
xor
adc
mov
lret
fmull
in
sub
or
popf
cwtl
shlb
sti
sahf
mov
shr
sbb
xor
cmp
jno
dec
mov
and
mov
inc
scas
lcall
gs
push
ss
or
mov
iret
add
dec
pop
xchg
sbb
sbb
lahf
rcr
pop
sbbb
dec
test
xchg
mov
add
mov
inc
push
and
pop
enter
or
cmp
xchg
insb
inc
mov
cmp
cmp
sub
cmp
mov
sub
mov
aaa
adc
lahf
or
sub
xchg
cmp
outsl
loopne
stos
cmp
adc
xor
jnp
xchg
shlb
push
pop
pop
mov
inc
shlb
sti
adc
mov
mov
or
jp
imul
mov
jnp
pop
jno
sti
imul
pop
stos
lock
and
mov
in
sub
mov
fs
mov
mov
mov
mov
and
ficomps
xor
fildl
push
jg
mov
outsl
mov
aaa
xor
xor
das
dec
fisubrs
xchg
sar
push
cli
outsl
add
aaa
orb
pop
mov
mov
jecxz
mov
sub
sti
int
cwtl
clc
pop
and
movsb
lcall
pusha
jo
fadds
subl
inc
fmuls
mov
mov
jbe
add
lock
out
push
mov
gs
and
mov
nop
push
roll
jb
das
fsubl
push
cwtl
adcb
mov
inc
shll
inc
out
loopne
ror
test
inc
mov
jbe
xor
addb
rcrl
add
push
and
enter
nop
ret
push
test
push
xor
clc
insb
loop
mov
pop
xlat
in
ljmp
outsl
ljmp
imul
add
mov
int
test
push
fldt
mov
xorb
out
loope
push
mov
dec
inc
or
das
in
mov
xor
fidivl
xchg
xor
push
shll
inc
insb
jmp
mov
dec
push
fidivrl
mov
adc
test
out
in
pop
fildll
roll
daa
xchg
xchg
and
mov
push
inc
call
mov
scas
out
sub
xor
xchg
loope
femms
push
sub
fsubs
xchg
mov
mov
inc
push
mov
and
xchg
sarb
mov
mov
cmp
and
es
int
int
cmpb
out
dec
or
lret
js
data16
pop
iret
pop
mov
or
mov
sub
or
xchg
shlb
sbbb
ret
rcrb
mov
aaa
add
dec
pop
mov
rcrl
push
sub
stc
inc
js
js
ficoml
jecxz
jge
pop
jge
jle
push
mov
bound
adc
jnp
adc
xor
or
xchg
add
push
cmp
jg
ja
daa
jmp
adc
jns
inc
aad
mov
sbb
push
mov
or
outsb
adc
xor
test
mov
cmp
test
repz
kmovb
cmp
lods
fidivrl
adc
imul
jne
mov
push
sub
sbbb
stos
fcomp
in
imul
dec
jge
cmp
roll
adc
popa
push
mov
fisttpl
in
pop
daa
lea
mov
dec
push
dec
mov
xchg
and
hlt
sti
xchg
mov
push
cmp
pop
inc
jbe
mov
push
mov
fildl
mov
jecxz
jmp
bound
xchg
dec
cmp
mov
enter
scas
fistpll
enter
push
std
jge
cli
gs
and
roll
jno
push
sbb
movb
stos
sub
inc
adc
fdivl
je
jmp
fisubl
in
cmpsb
cwtl
testb
and
jg
adc
popa
pop
les
aad
xor
adc
push
clc
inc
cmp
add
fucomp
mov
adc
jmp
cmp
ljmp
leave
repz
mov
xchg
sti
roll
test
push
rcrl
push
and
aaa
lret
lea
pop
fimull
dec
lret
decb
mov
push
xor
test
cwtl
ret
pop
push
mov
xchg
xchg
out
jns
mov
std
adc
and
aam
pop
cld
xchg
stc
shr
les
aaa
mov
adc
dec
jne
xor
and
js
inc
movsb
lahf
mov
les
mov
dec
ret
ret
test
rcl
lock
ret
adc
ret
push
movsl
and
pop
ret
test
push
punpcklbw
movsb
cwtl
rolb
inc
push
nop
lcall
or
jecxz
leave
aas
mov
push
inc
and
ljmp
loope
mov
imul
fs
jmp
jb
or
cmp
mov
cmp
cmp
mov
jle
cmpsl
mov
aas
mov
movsb
iret
movsl
ljmp
jno
jmp
rorb
cmc
leave
ret
jmp
ss
mov
repz
or
jl
push
dec
in
dec
mov
or
lock
xchg
xor
cwtl
stos
mov
shl
test
test
lret
push
push
adc
stos
adc
mov
sub
sti
jbe
jle
ret
and
dec
lock
fisubs
pop
std
push
cld
hlt
fistpll
rorl
push
sub
xor
jns
add
adc
cwtl
int
push
int3
jecxz
cmp
imul
cmpsl
pop
xchg
data16
icebp
fcmovnu
mov
cmp
mov
ret
adc
jecxz
mov
sub
mov
sub
fucomip
xchg
mov
mov
xchg
push
out
mov
jmp
and
adc
icebp
aam
inc
scas
jge
push
pop
movsb
lcall
cmp
xorl
pop
xor
imul
cwtl
mov
and
dec
mov
pop
mov
xor
dec
stos
or
lret
mov
rorb
cmp
lds
sarl
inc
fsubp
into
test
add
inc
icebp
inc
aaa
add
pusha
inc
daa
pop
rcrb
in
jb
ja
lret
mov
adc
int
pop
mov
stos
jg
xor
push
push
popf
clc
jmp
mov
stos
sub
decb
imul
pop
push
jg
push
dec
cmc
xchg
fprem1
out
dec
jecxz
inc
int
loop
call
xor
nop
push
and
pusha
xchg
outsl
inc
mov
outsb
dec
mov
rcr
mov
jb
incb
and
sbbb
or
sub
popa
mov
pushf
ja
mov
push
mov
push
sbb
and
decb
inc
out
ds
push
mov
cwtl
adc
mov
jg
iret
mov
pop
out
inc
shl
pop
pop
push
mov
xchg
push
test
and
mov
cmpsb
movsl
mov
scas
in
adc
repz
mov
in
insl
push
cmp
xor
das
mov
movsb
mov
xchg
or
cwtl
outsb
les
inc
negb
stos
mov
mov
dec
loopne
cmpsl
lea
push
or
add
dec
inc
fimull
int
stos
inc
sbb
push
mov
mov
add
mov
adc
repz
mov
inc
inc
icebp
push
mov
mov
testb
call
imul
popf
out
inc
cmp
or
pop
sarl
test
xor
outsb
xchg
inc
jae
and
mov
mov
inc
mov
test
mov
loope
js
inc
cmp
xchg
cmp
mov
sub
mov
add
pslld
xchg
cmc
daa
sub
mov
adc
jae
inc
jmp
sbb
outsb
cmpsl
jecxz
cltd
inc
cwtl
ja
hlt
add
nop
fidivs
sbb
fs
mov
and
test
sub
inc
dec
or
mov
or
or
ret
or
cmp
repnz
push
mov
sub
pusha
imul
lret
mov
test
test
inc
cli
adc
cwtl
pusha
jecxz
pop
es
push
mov
mov
cli
mov
scas
in
test
push
mov
jns
outsl
mov
jmp
mov
dec
ljmp
sahf
inc
dec
sub
clc
or
xchg
nop
pushl
outsb
mov
push
stos
adc
out
cmp
jge
test
sti
addr16
xchg
xchg
stc
mov
or
test
jge
stos
fdiv
push
adc
rcl
sub
or
icebp
mov
mov
lds
lds
jl
inc
leave
popf
test
ret
popf
loopne
popf
scas
pop
cmp
jg
and
jae
cli
lea
add
or
pop
lods
sbb
push
sbbb
test
std
xlat
ss
pop
stc
ljmp
inc
pop
clc
or
dec
inc
pusha
mov
and
push
fisubrs
mov
cmpsb
mov
push
jl
daa
int3
mov
xchg
mov
cltd
test
mov
in
cmp
xor
push
xlat
cmpsl
pop
dec
xchg
jge
fimuls
stos
inc
insl
push
mov
sub
cmovae
inc
aad
push
icebp
mov
or
xchg
dec
push
pop
inc
bound
xor
dec
xchg
test
jg
fisubrl
ret
or
movsb
xchg
fstl
inc
out
cs
jecxz
cmp
stos
add
push
mov
push
cmpsb
xor
pop
pop
sub
jecxz
gs
jae
xor
ja
mov
out
add
push
mov
es
cmpsl
mov
sarb
daa
mov
call
mov
push
rolb
or
ds
les
pop
mov
xchg
push
cs
or
test
pop
cli
ret
nop
push
jne
jg
das
and
into
ret
out
xchg
adc
mov
stc
lods
sub
mov
mov
push
push
mov
outsb
sub
sub
stos
mov
xchg
scas
adc
pop
sub
aaa
testb
push
and
push
dec
xor
and
mov
inc
pop
xor
xchg
aaa
pushfw
sub
or
push
imul
pop
orb
mov
es
das
cmpsb
popa
lcall
cmp
ss
mov
xchg
sub
fimuls
push
mov
mov
mov
dec
lds
dec
cmp
jbe
sub
pop
inc
je
das
test
or
mov
mov
stc
fsub
popa
and
add
in
jo
js
inc
xor
jg
sbb
insl
inc
lcall
mov
icebp
cmp
mov
xchg
cmpb
and
dec
dec
test
lods
scas
sbb
lock
dec
mov
scas
xlat
popa
sub
shr
lea
sbb
xor
ret
adc
ret
inc
mov
mov
lret
push
push
dec
jo
lret
cld
jo
adc
push
cmpsb
pusha
outsl
inc
mov
gs
inc
jbe
int
rcll
popa
add
popa
ds
mov
popf
cmp
xchg
mov
mov
pop
shl
ss
out
jle
stc
jp
pop
mov
nop
ret
stc
add
fsubr
in
inc
xchg
push
lea
les
or
xchg
test
nop
mov
mov
mov
aam
insl
stos
loope
cmp
cs
jbe
mov
xor
sbb
gs
xchg
in
stos
in
adc
sbb
xchg
or
add
mov
jl
fcoms
jge
and
cmp
mov
popa
ds
cmp
mov
sub
test
movsl
adc
cmp
loop
daa
jg
jmp
fwait
jge
xor
xor
xchg
jae
movsl
sub
mov
sbb
and
add
int
lock
daa
and
cmp
mov
pop
rcll
shll
ja
mov
cmp
sbb
jno
lock
fisttps
inc
xor
ret
xlat
mov
xchg
or
xchg
push
push
push
mov
cmp
bound
dec
inc
lods
in
inc
nop
adc
dec
movsb
fcom
andb
sbb
pop
scas
mov
jmp
cmpsb
test
jmp
mov
int
jb
in
adc
dec
movsb
mov
push
je
cli
outsl
xchg
push
ja
jb
mov
mov
stos
popf
sbb
sar
daa
mov
mov
or
adc
push
lods
add
std
xor
das
int
fldl
cmpsl
push
cs
push
dec
xchg
test
negb
xorb
inc
cwtl
xchg
sbb
add
jnp
in
push
push
mov
inc
jp
xchg
xchg
nop
xchg
fcmovu
scas
mov
int3
insb
add
lahf
or
addl
pusha
jae
inc
orl
inc
jle
pop
sbb
ret
shrl
and
or
mov
mov
inc
out
mov
sbb
and
add
mov
xchg
mov
inc
cmp
aam
fstl
sbbb
into
bound
xor
xor
shlb
pop
mov
pop
cwtl
mov
xor
push
jg
sub
pop
pop
lret
mov
jle
mov
mov
pop
jl
xchg
pop
dec
xchg
jb
sub
push
jmp
dec
xchg
pop
xchg
pop
outsl
loop
lods
mov
lods
aaa
dec
xor
dec
push
jmp
and
lahf
inc
mov
adc
ficoms
nop
inc
sahf
or
push
cmp
scas
mov
stos
loope
cmp
xchg
add
adc
lret
jge
popa
jecxz
cmp
test
xor
pop
idivb
loopne
or
aas
mov
repz
mov
hlt
dec
xchg
aas
pop
inc
rcr
stos
clc
fdivrl
sbb
or
push
popf
dec
mov
mov
test
lcall
sub
or
pop
nop
and
mov
inc
enter
in
addb
sbb
cld
ja
pop
and
js
leave
jl
pusha
and
imul
sbb
leave
pusha
mov
cmp
jecxz
cld
jmp
clc
movsl
lods
cmpsb
mov
adcl
inc
and
aam
push
xchg
or
stos
clc
test
cmpb
sub
shlb
ret
inc
mov
dec
aaa
nop
ss
mov
jecxz
movsb
inc
pop
jl
sahf
or
lahf
dec
add
jmp
adc
adc
mov
aad
sub
cltd
lret
cmc
out
cmc
and
jle
add
cmc
cwtl
pop
jne
outsb
mov
cmp
leave
testl
cmpsb
xchg
scas
jp
dec
cwtl
cmp
int
adc
xlat
adc
notb
shl
push
dec
sahf
test
dec
xchg
loop
pop
clc
mov
pop
inc
add
cmp
ljmp
stc
add
dec
push
add
push
insb
dec
jb
push
sub
sub
sub
andl
rcrl
jp
mov
jns
roll
add
loope
dec
shrb
and
jge
rcrb
sahf
xor
shll
cltd
addb
loopne
loop
dec
push
or
sub
les
shlb
jb
adc
iret
add
pop
or
or
movsl
andb
les
cltd
les
lods
mov
and
add
aaa
or
xchg
fmuls
push
pop
jp
std
inc
cld
lea
nop
mov
mov
cmpsl
outsl
cmp
rorl
movsl
fcoms
loop
or
subl
fnstsw
lods
int3
jmp
xorl
imul
or
fcomps
jg
push
insb
sahf
outsl
push
jle
push
shr
jge
adc
inc
mov
xchg
xchg
xor
adc
add
inc
lods
dec
dec
popf
jecxz
scas
sub
popl
shrb
ds
gs
sbbl
sub
out
jno,pn
push
dec
loope
xchg
loope
xor
pop
subb
decl
leave
adc
push
sar
push
jb
inc
addb
sti
cmpsb
adc
dec
movsb
ss
int3
fisttpl
int3
dec
mov
mov
mov
iret
xchg
out
iret
sbb
mov
jge
cmp
std
inc
xchg
push
push
rcrl
mov
mov
cs
jge
push
scas
inc
rcll
jmp
mov
sbb
repnz
or
sub
xchg
int
test
in
adc
xchg
sub
insb
add
loope
adc
add
jecxz
xor
out
adc
sar
push
bound
mov
xor
xchg
std
jl
inc
leave
mov
rolb
in
push
subb
cmpb
sub
out
scas
mov
idivb
mov
pop
sbb
lods
pop
fcoms
dec
pusha
adc
xor
call
cmp
stos
inc
pop
inc
mov
adcl
add
popf
movsb
cmp
push
icebp
popf
xchg
loope
sub
xchg
sti
notb
cs
nop
dec
pusha
out
lahf
or
push
test
cs
rcrb
dec
xchg
ret
push
xor
xor
jle,pt
sbb
xor
dec
sbb
shrl
jns
hlt
jg,pn
std
fiadds
cli
jl
add
add
fisubrs
nop
mov
push
xor
aas
loope
inc
xchg
mov
rorl
lret
daa
inc
ret
mov
xorl
out
mov
adc
nop
inc
mov
mov
cld
in
push
mov
mov
je
and
push
mov
leave
adc
lcall
xor
mov
in
shrb
dec
mov
or
mov
or
nop
pop
test
lods
lods
sub
cmp
hlt
ds
adc
in
mov
aaa
dec
sbb
xchg
xor
mov
ret
ds
dec
ret
add
mov
and
test
jnp
loop
js
push
insb
pushf
jns
daa
and
inc
push
nop
sub
cmp
insl
sbb
clc
out
jb
adc
lods
push
arpl
mov
in
ljmp
ss
adc
xchg
mov
push
hlt
mov
pop
test
push
inc
out
mul
mov
pop
jo
and
inc
gs
jo
out
mov
sti
inc
aad
mov
mov
mov
and
and
xchg
and
mov
add
stc
scas
xchg
and
sbb
pop
lods
dec
sarl
jp
cmp
inc
add
xchg
cmp
and
mov
rolb
cmp
lcall
lcall
mov
aas
xor
pop
fwait
jae
mov
or
push
dec
cld
mov
mul
out
int
cmc
clc
out
sub
push
inc
mov
aad
hlt
and
add
ljmp
xor
cltd
jge
pusha
out
dec
insb
sbbl
xor
xchg
scas
adc
push
test
cmp
cmp
cmpsb
pusha
mov
fsubrl
stos
sahf
mov
jge
xchg
xor
nop
mov
mov
je
lds
orl
xchg
insb
and
xor
sbb
aam
les
popa
add
jo
xchg
pop
jp
adc
test
push
mov
mov
cmp
adc
push
xchg
jo
ficomps
hlt
inc
inc
nop
sbb
popa
jecxz
fistl
adc
xchg
adc
shll
adc
iret
dec
xor
jns
inc
stc
sbb
jo
dec
pop
pusha
adc
fcomps
iret
inc
sbb
mov
dec
es
lret
dec
stos
daa
mov
dec
lcall
aaa
imull
or
call
mov
mov
ret
roll
lahf
rclb
jle
sbb
daa
pop
cmp
sub
cmp
cmp
jle
loop
sbb
and
mov
cs
dec
clc
popa
or
or
mov
outsb
jb
fldt
fdivrl
pop
fsubrl
pusha
lods
mov
adc
mov
dec
jg
sarb
xor
push
adc
movlps
outsb
rolb
xor
outsl
mov
push
adc
cwtl
loop
xchg
or
mov
iret
subb
mov
in
into
xchg
iret
loope
daa
push
sbb
mov
lcall
lret
mov
pandn
mov
mov
pop
pop
xlat
mov
jae
adc
or
pop
or
out
cli
xchg
scas
xor
cmp
cwtl
sub
inc
lcall
pop
inc
adc
outsb
adc
stos
ficomps
lcall
fmull
push
ljmp
out
shl
or
mov
push
cmp
mov
xor
loopne
into
outsb
pop
mov
jg
inc
jb
daa
mov
push
mov
pusha
test
or
xchg
movsl
dec
push
mov
mov
mov
lods
in
cmp
mov
or
rorl
jg
fwait
inc
cmp
stos
shr
push
inc
in
out
pop
sub
inc
and
add
loope
mov
subb
lcall
pusha
cmc
sbb
xchg
or
in
pop
scas
cmp
int3
iret
push
lcall
adc
jno
jno
fdivrs
int
insb
sbb
mov
movsl
popa
jnp
adc
pop
out
movsb
dec
pop
pop
aad
dec
loope
mov
mov
mov
pop
adc
in
idiv
sbb
in
sbb
sub
hlt
shll
and
shrb
lahf
bound
lret
xchg
and
jnp
shrl
pop
dec
inc
jge
test
enter
cmpsb
jp
cmp
dec
xchg
sbb
add
inc
adc
pop
xchg
adc
lret
pop
lea
push
shl
adc
lret
xor
and
decb
cltd
mov
inc
outsb
rcrb
mov
pop
sub
daa
mov
jg
xor
mov
dec
jle
fucomi
push
in
lret
stos
sarb
cmpsl
push
orl
inc
loope
and
jg
arpl
and
xchg
xchg
sbbb
dec
dec
call
sub
inc
cld
lahf
push
andb
int3
sub
scas
sub
inc
jg
out
jl
add
xor
test
out
push
dec
add
pop
rcrb
adc
xchg
mov
mov
dec
jp
repnz
pop
ret
mov
scas
pop
xchg
movsb
stc
cmc
lods
ljmp
movsl
mov
mov
shlb
adc
aad
jle
xchg
pop
mov
push
int
jg,pt
in
push
in
movsl
jo
pop
out
push
pop
pop
pop
mov
mov
push
ja
xchg
lcall
adc
jg
adc
cmp
repz
idivl
mov
stos
std
clc
ds
insl
shlb
jg
outsl
push
adc
cmp
xor
mov
int
pop
sbb
xchg
pop
rclb
pop
jno
into
fcmovb
sub
orb
add
push
inc
sbb
push
mov
leave
dec
mov
adc
mov
lds
inc
in
xchg
xchg
inc
js
push
sub
mov
inc
repz
xor
inc
je
repnz
mov
xor
out
dec
fidivl
call
scas
outsb
scas
imul
cmp
adc
mov
dec
jg
pusha
dec
movsl
mov
fcompl
mov
and
imul
outsb
cmc
rcrl
fists
insb
xchg
pop
fmull
xchg
jp
inc
iret
out
inc
in
pusha
lock
and
sbb
cmp
add
rclb
push
rcrb
bnd
push
orb
mov
mov
enter
lret
jbe
mov
adcb
and
push
cwtl
clc
mov
sbb
xor
mov
pushf
aam
jp
mov
inc
inc
test
dec
cmp
jbe
movsl
sbb
decb
popf
or
inc
aaa
push
mov
inc
sbb
push
dec
dec
les
inc
pop
sbb
rol
dec
xchg
xor
addr16
or
ret
jge
inc
fdivr
pop
push
aas
add
shlb
sbb
roll
and
adcb
push
pop
inc
sbbb
aad
mov
mov
test
aam
push
lock
scas
push
mov
mov
cs
fcmovnbe
rclb
sbb
sbb
aam
push
xor
inc
ss
mov
lcall
ficomps
lods
mov
rclb
fnsave
sarl
movsb
lahf
push
xchg
jo
test
ror
xchg
pop
push
or
ds
lret
jo
adc
rorl
scas
mov
fisubl
push
dec
fcompl
push
xor
or
inc
out
push
movsb
push
movsb
fs
cmp
sub
xchg
add
mov
xor
insb
js
mov
inc
cmp
fnsetpm(287
int3
fmull
je
gs
mov
inc
js
push
out
jl
insb
push
cmp
dec
pop
cmp
jl
enter
sbb
sarl
push
lods
cmc
int
iret
mov
pop
inc
cmpsl
jecxz
sbb
inc
leave
in
mov
sub
lret
inc
mov
ds
mov
mov
sarb
mov
or
fnstcw
test
xor
cmpl
mov
inc
xchg
aas
mov
mov
pop
iretw
insb
cmpsl
shll
aaa
pop
roll
dec
lods
dec
inc
orb
jb
xchg
rorl
stos
into
lahf
stos
xchg
call
jnp
xor
ss
inc
jl
sub
mov
lahf
sub
cmp
inc
leave
dec
add
inc
mov
jecxz
rol
jmp
inc
or
mov
add
js
jle
fsubl
out
fisttpll
shll
mov
into
rcrb
push
inc
ret
ret
mov
jmp
rorb
xchg
adc
daa
inc
roll
jecxz
inc
lock
push
lds
or
jo
mov
push
mov
dec
mov
xchg
mov
and
cmpsl
cltd
pop
cld
and
mov
arpl
cmpsl
ljmp
sub
mov
stos
cmp
lret
in
jmp
add
push
mov
jae
jns
mov
jns
mov
mov
xor
lret
enter
rcll
fmuls
dec
adc
xchg
rorl
shlb
lds
dec
dec
or
push
mov
push
dec
iret
pusha
in
pop
dec
sbb
mov
mov
addl
ret
cltd
daa
int3
out
xchg
lcall
iret
pop
jl
ret
inc
call
pop
sbb
pop
xchg
adc
out
push
fcoml
addl
push
xchg
fsubrs
xor
xchg
inc
pop
pop
xchg
scas
xchg
out
dec
mov
mov
pop
mov
cwtl
stos
lds
fnstenv
sbb
mov
xor
xchg
adc
mov
out
dec
fstpt
mov
mov
ror
lods
push
int3
xor
daa
movsl
sbb
dec
inc
xchg
pop
mov
pop
fidivs
mov
dec
push
dec
jns
ret
cmp
js
pop
jge
sub
das
cmp
mov
outsb
adc
adc
outsb
loope
sub
mov
adc
add
push
lods
in
adc
xor
decl
mov
jns
in
cwtl
orb
in
nop
icebp
sbb
sti
mov
out
xchg
pop
in
pop
lahf
sbb
cmp
repz
push
lods
insl
sbb
jbe
cmp
mov
daa
add
sbb
lods
push
stos
sub
iret
sbb
inc
test
ret
and
cs
scas
in
push
lcall
enter
in
int
sbb
mov
xor
outsb
xchg
jns
mov
insb
jb
dec
rorl
js
fs
sbb
jb
cmp
iret
inc
pop
stc
gs
and
mov
xor
mov
sahf
mov
mov
lds
push
cmpsl
mov
jns
push
aad
setns
leave
rorb
popf
sbb
or
shll
cmp
cld
movsl
push
and
fisttpl
mov
cmpsb
int3
push
mov
sub
jo
jmp
clc
inc
mov
sbb
stos
mov
cs
pusha
adc
int3
shl
xchg
stos
ja
xor
mov
mov
mov
mov
ds
fldz
mov
sbb
dec
pop
int3
test
lea
lcall
lret
cmp
fisttpl
cmpsb
mov
pop
mov
sbb
pop
js
pop
mov
movsl
fisttpl
outsl
inc
mov
pop
adc
lret
std
and
jo
and
lahf
xchg
fldt
rcll
lds
dec
xor
sub
mov
test
sub
jge
ss
pop
shlb
cld
fs
int
stos
inc
clc
mov
xchg
je
sub
loop
push
movsb
clc
hlt
sbb
push
adc
lret
mov
mov
mov
bound
ja
jge
loopne
fcmovnbe
shr
sub
or
lret
push
mov
dec
jns
xor
fst
fnsave
ret
jg
add
inc
cmp
lea
sahf
push
je
aas
in
lcall
jl
sub
cmp
sbb
cwtl
test
lcall
jecxz
adc
adc
pop
rolb
out
shl
imul
jbe
das
lcall
cmpb
roll
aas
fiaddl
add
movsl
test
repz
sub
mov
stos
stos
test
adc
mov
aaa
pop
shrb
popf
fsubs
xor
push
push
xchg
arpl
lcall
fst
cmp
jecxz
stos
jb
addb
and
int3
lcall
or
dec
pop
sbb
dec
fstpt
sub
addr16
pop
lods
xlat
or
sbbl
cmpsl
ljmp
ss
mov
in
dec
xchg
adc
cmp
dec
add
dec
pop
outsb
cmpsl
xor
out
in
lea
mov
fbld
loopne
mov
xchg
pop
mov
mov
xor
push
xor
dec
xchg
push
pop
daa
shr
mov
hlt
test
jl
inc
pop
pop
nop
ss
push
pop
shrb
fadd
clc
sbb
dec
test
adc
pop
dec
pop
mov
daa
push
scas
nop
mov
mov
and
adc
fmuls
mov
mov
fstl
sbb
push
ljmp
shll
sti
jmp
jne
js
repnz
bound
cmpsb
leave
cld
lock
mov
rcll
pop
push
inc
mov
sbb
test
or
in
addr16
xor
iret
mov
pushf
push
inc
jp
clc
mov
xor
mov
stos
xor
xchg
push
fstpt
lcall
lock
push
push
cli
jecxz
xor
jge
cmp
aam
mov
cmp
inc
inc
repnz
add
out
int3
jno
push
roll
fidivl
jnp
in
cmp
ror
orb
mov
enter
cs
adc
lret
sub
and
aad
loop
aaa
xlat
mov
mov
int
imul
shrl
ret
mov
pusha
repz
mov
jne
sub
into
out
fisubrl
ljmp
bound
jmp
inc
push
mov
push
adc
jle
sbb
mov
cmpsb
mov
jns
mov
lret
mov
mov
sub
mov
loopne
add
out
xchg
imul
jbe
inc
loopne
or
das
mov
xor
ret
in
mov
int3
int
xchg
xchg
ret
xchg
popa
out
mov
bound
dec
cwtl
push
push
fdivp
or
mov
shll
cld
daa
mov
psllq
in
or
xchg
fsubl
hlt
adc
rolb
aam
mov
imul
lods
jne
cmp
xchg
rcl
hlt
into
jg
push
pop
int
orb
jg
hlt
xlat
inc
ficoml
xchg
in
imul
sub
dec
jne
dec
mov
xchg
xchg
daa
mov
decb
cmp
test
jo
jnp
inc
jecxz
adc
aas
js
pop
stc
xor
loope
jg
adc
scas
inc
fistpll
jg
test
fcmovu
inc
add
and
mov
add
xchg
jle
mov
scas
jecxz
mov
lods
adc
popf
nop
fsubrs
and
mov
and
mov
test
scas
xor
xor
nop
stc
mov
mov
pop
daa
test
adc
lds
loope
push
push
adc
push
or
jnp
aas
or
stos
mov
hlt
test
test
inc
jo
pop
add
aas
xor
pop
xor
int
jge
lcallw
mov
and
sub
enter
jnp
sti
xchg
add
xor
sti
mov
lods
inc
inc
push
jo
loop
lcall
mov
mov
xchg
shrb
push
mov
adc
shrl
dec
loop
lahf
push
hlt
lock
in
sub
mov
leave
mov
xchg
stos
inc
test
icebp
sub
lock
psubb
mov
fidivrs
lcall
mov
sub
and
stos
jne
adc
dec
xchg
test
inc
scas
pop
push
mov
jmp
mov
push
push
je
jecxz
nop
jns
sub
sub
mov
inc
iret
call
stos
mov
mov
fsubrp
adc
insl
jo
push
adc
inc
xlat
arpl
xchg
jle
shll
xchg
bswap
shll
ret
in
dec
jb
popl
dec
or
shlb
and
cmp
jnp
movsl
mov
mov
ljmp
mulb
push
xor
sub
jnp
xor
std
cmpsb
orb
mov
sub
cmpsl
mov
shrb
mov
repnz
cmp
pushw
shlb
add
jmp
fnstcw
in
mov
inc
mov
xchg
sub
ret
dec
cmp
xchg
insl
decb
add
sbb
push
mov
shll
sub
add
push
mov
rclb
xchg
push
jns
mov
dec
add
or
mov
dec
jp
sub
shrl
xchg
repnz
enter
pop
rcr
lcall
or
int3
clc
imul
pop
mov
inc
cmp
stc
clc
or
leave
xchg
sub
or
add
adc
pop
cwtl
and
rcrb
popf
lret
xchg
cmp
daa
divb
push
insl
push
dec
fcmovu
inc
add
daa
pop
faddl
rcl
lret
and
pop
in
sbb
ds
mov
fstl
ljmp
and
or
adc
pop
xchg
mov
out
testl
mov
out
push
pop
mov
lock
mov
xchg
push
out
notl
inc
aam
fwait
xchg
xchg
mov
in
or
in
push
and
nop
xchg
test
mov
mov
insb
es
mov
mov
xchg
mov
rorb
shrl
cmp
sarb
sub
xor
es
mov
sbb
ror
into
and
inc
mov
cmp
dec
inc
lahf
inc
sub
gs
mov
pop
popf
fidivrs
xchg
ret
cmp
addr16
sbb
lock
cmp
mov
pop
jecxz
lahf
rorl
aad
mov
mov
adc
xchg
rol
mov
lret
ljmp
add
mov
lret
jmp
sbb
pop
add
test
iret
adc
jmp
cmp
pop
daa
cmp
rclb
push
push
aad
adc
ja
movsb
xchg
mov
mov
out
push
push
sub
sbb
sti
push
xor
js
cli
movsb
adc
cmp
add
inc
push
jp
mov
mov
in
adc
int
jnp
mov
push
stos
sbb
mov
jmp
jne
sti
and
dec
xchg
lret
add
jno
xchg
xchg
add
jb
push
mov
mov
inc
mov
repnz
mov
repz
cmpsb
mov
aaa
addr16
lret
pop
push
leave
imulb
xchg
push
xchg
xchg
int
inc
xor
loope
nop
int3
mov
cmpsl
push
test
adc
cmp
jae
or
jbe
add
cmp
cli
sub
lret
sbb
pop
lahf
or
arpl
jo
pop
popa
or
push
adc
jle
mov
xor
inc
and
push
sub
or
mov
pop
cmp
repnz
movsb
lret
daa
xchg
jnp
std
xor
into
fcmovb
xchg
mov
sub
es
fwait
mov
mov
or
push
xchg
sub
outsl
xchg
loope
jnp
add
xor
adc
adc
jmp
pop
scas
loope
mov
xchg
inc
imul
pop
xchg
xchg
leave
out
cmp
sub
mov
out
lds
xor
inc
sti
jo
test
mov
ret
nop
cld
les
in
sbb
push
xchg
in
dec
push
lods
xor
aaa
cs
inc
sbb
shll
cmp
jp
pop
fwait
repz
dec
movb
mov
cmpsl
fdivrs
stos
pop
sub
push
xchg
nop
cmpsl
pop
sbb
cwtl
loop
fsubr
imul
xor
dec
mov
lret
movl
mov
xchg
jb
stc
pop
dec
stc
add
xor
insl
mov
push
andb
add
scas
imul
adc
movsb
rcl
test
lds
call
sti
int
nop
inc
xchg
int
inc
mov
inc
ret
nop
dec
inc
test
add
or
sub
or
mov
dec
mov
clc
stos
add
fsubrs
fs
pop
mov
jbe
mov
xchg
leave
and
xchg
xchg
stc
int
andl
jp
dec
xchg
sub
mov
jecxz
shlb
xchg
add
mov
test
int3
in
or
in
jo
mov
lret
or
cmpb
es
sbbb
mov
and
fnstsw
cli
int
mov
loop
sbb
aas
imul
shll
sarl
xchg
shlb
push
in
out
xchg
add
xor
pop
jmp
push
stos
test
ja
jmp
fstps
dec
pop
fwait
outsb
push
sub
sbb
fistpl
jns
lret
iret
xor
scas
outsb
scas
cltd
mov
push
pop
jno
inc
rorl
cmp
jle
loope
mov
hlt
sar
push
test
hlt
fcoms
sub
push
aam
adc
das
xchg
addr16
nop
xchg
jg
pusha
dec
fstpt
roll
adc
pop
mov
cmp
ds
inc
popa
dec
mov
mov
leave
testb
addb
divl
lods
idiv
lods
bound
outsl
sub
xchg
inc
add
pop
xchg
stc
cltd
adc
mov
fadds
cmp
cld
xchg
jno
mov
ljmp
inc
loopne
sbb
mov
adc
lret
mov
add
lcall
xor
addr16
in
jle
xchg
dec
mov
sbb
fadds
icebp
cmpb
jns
outsb
cmc
fdivs
and
or
jno
mov
dec
adc
jle
inc
fsub
subl
arpl
pusha
inc
shrl
lcall
rorl
mov
inc
pop
stos
push
push
push
test
mov
sbb
lock
inc
dec
pop
bound
inc
jle
push
andb
adc
push
test
add
jge
jp
inc
and
int
or
enter
leave
jmp
repz
push
or
and
mov
jecxz
add
jle
popa
fisttpll
fldl
sub
jg
sahf
dec
push
cs
imulb
and
mov
and
std
clc
jg
jecxz,pn
in
shll
xchg
push
loop
xor
add
cmc
lods
in
mov
jecxz
mov
int3
hlt
adcb
adcb
push
test
xchg
inc
xor
out
jb
xor
and
mov
sbb
ja
cli
inc
mov
jge
dec
aam
jmp
and
push
hlt
int3
arpl
aaa
xchg
push
loope
aad
aaa
test
mov
or
cmp
inc
sbb
loopne
fisubs
lcall
loope
aad
push
cmpsb
out
xor
sbb
push
cmp
mov
cmp
add
and
mov
lods
inc
scas
inc
dec
cmp
xchg
cmp
rcll
rorl
stos
pop
test
push
ss
movsb
dec
test
je
lock
mov
ss
mov
daa
gs
push
inc
in
inc
mov
sti
ja
push
inc
mov
xchg
add
ret
icebp
out
mov
pop
jp
inc
shll
fistpl
test
add
pop
test
or
inc
mov
fwait
dec
and
shrb
ds
arpl
xor
testl
push
jg
cmc
or
adc
lods
or
jae
in
xor
repz
adc
mov
into
jo
xor
jg
mov
lods
aaa
mov
mov
jge
mov
pusha
shll
sbb
inc
cmp
sub
jle
fistps
sbb
fcomi
daa
lcall
add
dec
idiv
cmpsb
mov
and
mov
xchg
daa
rcr
test
and
push
fsubl
or
adc
jp
sar
ljmp
aam
push
cwtl
xchg
pop
sbb
iret
pop
aaa
cmc
jl
sbb
and
jg
pop
dec
mov
movsb
mov
sub
ret
lret
mov
mov
in
mov
push
subl
loop
and
int
jbe
into
test
popa
lcall
pop
cwtl
mov
js
fs
inc
adc
stos
icebp
into
jg
lret
push
xchg
dec
inc
jno
aam
xchg
ds
mov
bound
shll
push
shll
xor
pusha
cwtl
xchg
push
jb
stc
jp
inc
sarb
add
outsb
cs
sub
je
xchg
mov
into
popa
outsl
rorl
adc
bound
outsb
and
add
insl
pop
test
adc
pop
out
pusha
mov
jns
adc
shl
mov
push
xor
into
dec
in
dec
and
jo
into
cli
xchg
or
sub
mov
push
out
lods
xchg
mov
cltd
mov
test
addl
shr
sub
and
sarl
fstpt
je
lods
ds
mov
subl
mov
sahf
add
mov
loopne
add
orb
sbb
jle
sub
cwtl
mov
negl
sub
xchg
pop
aam
ss
hlt
xor
mov
jmp
push
xchg
jg
mov
mov
sub
push
mov
mov
jle
cmc
xor
les
inc
cli
jp
adc
jo
loope
xlat
movsl
inc
shll
jmp
jb
inc
pop
mov
mov
mov
pop
jle
out
inc
mov
sahf
adc
sub
sub
fimull
mov
inc
mov
dec
movsb
push
sarl
and
rclb
rcrl
ljmp
icebp
add
push
mov
xchg
push
imul
cs
and
inc
mov
mov
inc
clc
clc
xor
jecxz
scas
jge
push
pop
loope
add
inc
xchg
and
inc
aas
ret
sti
test
stos
outsb
dec
adc
xchg
idivb
adc
inc
out
inc
xor
sbb
adcb
mulb
mov
dec
inc
dec
and
sub
subb
pusha
jb
jge
sub
jmp
das
int3
pusha
in
or
loope
inc
test
lods
cltd
add
ds
pop
imul
mov
lea
stc
push
push
cltd
inc
cltd
pop
or
push
push
pop
in
mov
insl
enter
mov
in
les
jp
das
imul
xchg
xchg
dec
and
mov
out
enter
and
adc
clc
mov
adc
movsl
mov
int3
sbb
out
xor
fldenv
fisttpll
scas
mov
lret
shll
push
push
nop
xor
std
fdivl
sbb
es
in
stc
inc
and
ret
ss
cmp
xor
inc
mov
repnz
and
outsb
lcall
and
inc
mov
aad
push
or
add
fcomp
push
into
jno
out
push
loope
jno
xchg
mov
inc
insl
adc
pop
ja
mov
xchg
mov
cmpsl
dec
xchg
inc
fstpt
sbb
and
dec
in
lea
fistl
inc
subb
fcmove
push
scas
and
std
pop
sbb
jl
adc
add
jge
lret
push
sub
adc
mov
lea
sbb
adc
push
das
nop
std
xchg
roll
adc
dec
add
scas
dec
add
stos
scas
inc
sub
and
shl
aam
add
push
mov
jge
aad
push
pop
jo
jl
mov
push
mov
das
int
push
stos
mov
push
nop
lret
addr16
imul
cwtl
int3
push
and
mov
into
push
out
lea
faddl
ja
inc
jo
xor
and
cmp
outsb
inc
add
jecxz
addr16
ror
mov
mov
cltd
jb
adc
faddp
jns
sbb
ds
jmp
inc
push
mov
shlb
cmp
pop
and
mov
clc
push
dec
xlat
stos
sbb
lods
jg
mov
pop
jl
fnstsw
dec
jge
push
rep
add
sbb
add
sbb
mov
int3
cmp
mov
pop
int3
or
daa
adc
dec
sbbb
out
sarb
add
pop
adc
lods
lds
sarl
inc
add
mov
xchg
nop
jns
outsb
lea
adc
add
or
addr16
pop
shl
outsl
xchg
push
das
mov
push
cmovge
jb
xchg
push
jl
xor
jl
pop
popf
jo
nop
popf
sarb
inc
rcll
mov
jle
scas
pop
xor
in
jp
call
mov
cmp
nop
push
mov
movsb
push
mov
ret
scas
xchg
add
xor
movsb
ja
sbb
xchg
jns
mov
cmp
add
mov
xchg
out
ret
test
lods
mov
mov
mov
mov
push
jno
popf
pop
cmpsb
xchg
dec
pop
xchg
fnstsw
les
cli
cmpsb
test
sub
lahf
mov
test
and
mov
dec
popa
rolb
and
mov
pop
adc
es
push
mov
sub
pop
jmp
mov
xlat
inc
mov
cmp
add
pop
nop
mov
lds
push
jg
dec
sarl
sbb
add
lods
xor
sub
adc
inc
dec
bound
jb
out
out
sbb
mov
loopne
mov
pop
dec
jle
cmp
movb
mov
fucom
nop
jecxz
mov
xchg
scas
sarb
dec
mov
mov
ja
call
dec
mov
stc
test
lret
lcall
jg
out
lcall
in
cmpsb
aaa
xlat
pusha
jmp
push
dec
mov
pop
icebp
jns
jno
loopne
cmp
js
unpckhps
int
shl
inc
cwtl
lret
mov
notb
mov
in
push
js
lds
mov
in
aas
in
and
inc
mov
pop
ds
cmp
push
and
or
nop
stc
push
data16
xor
ret
dec
lods
xor
jecxz
cmp
sti
andb
sub
adc
aaa
inc
stos
jo
lret
ds
les
mov
add
int
movl
inc
xchg
push
pop
inc
xchg
cld
mov
punpckldq
faddl
sbb
imul
pop
adc
faddl
or
sub
inc
xor
sub
pop
push
pop
test
pop
mov
dec
or
jno
adc
outsb
movsb
cltd
out
mov
inc
mov
test
out
inc
mov
fisttpl
push
pop
daa
fwait
mov
out
sub
rolb
mov
in
nop
xor
push
pop
mov
dec
popa
lcall
fiaddl
and
or
sar
dec
fwait
cmp
push
pusha
inc
mov
add
sub
je
lea
xchg
mov
test
aaa
insl
sub
sbb
push
bound
js
fcoml
testl
mov
mov
adc
ds
fcompl
daa
stos
dec
xchg
xor
rorl
xchg
push
lods
dec
pop
cmp
push
rolb
xor
roll
xchg
adc
arpl
fisubrs
inc
aaa
mov
jle
inc
cmp
jg
gs
pop
inc
ss
orl
push
push
stos
push
cmpsl
dec
adc
not
mov
xchg
repz
xchg
repz
adc
pop
popf
mov
mov
sti
and
dec
sub
fs
mov
mov
jns
xor
add
xchg
ffree
fisubrs
push
mov
pushf
fsubs
push
insb
clc
add
jb,pt
ljmp
cld
lods
inc
cli
dec
pop
in
icebp
xor
xchg
add
inc
out
int
cmpsb
jle
xchg
cmc
dec
lahf
in
push
call
hlt
mov
cli
mov
mov
mov
dec
mov
mov
cltd
push
jmp
push
test
in
scas
rorb
inc
cmpsl
fxch
cmp
dec
cld
test
into
popl
popa
adc
xchg
mov
sub
in
adc
daa
inc
mov
ds
mov
repz
inc
jg
and
mov
shrl
mov
ljmp
cwtl
push
scas
roll
ss
mov
push
cmp
dec
sub
test
jo
insb
dec
sub
push
bound
pop
cltd
std
mov
jp
stos
adc
and
jb
ret
cmp
jno
ds
loope
sbb
mov
int
jae
jp
dec
cmc
hlt
test
adc
or
jge
cmp
popf
pop
fsubrl
or
jno
push
stc
jae
inc
out
je
adc
in
sbb
nop
test
daa
cmp
dec
dec
jbe
stos
and
imulb
mov
into
pop
jbe
pop
ret
adc
sub
xchg
mov
sub
cld
mov
cmp
mov
ret
popf
outsb
out
mov
pop
inc
mov
push
and
rclb
test
imul
push
adc
mov
pop
inc
shll
dec
cmp
push
mov
inc
lahf
enter
arpl
mov
imul
inc
sbb
imulb
movsb
push
xchg
mov
movb
push
sbb
stos
push
pusha
xor
xchg
lds
dec
loope
test
dec
cmpsl
into
test
sub
jg
nop
xchg
mov
dec
xor
mov
cmc
fdiv
and
push
mov
jle
test
lds
mov
add
add
mov
pop
mov
inc
and
pop
stos
and
cmp
ja
rcrb
mov
and
mov
jg
fstpl
jb
xor
dec
mov
mov
cmp
jbe
mov
xlat
leave
sbb
lahf
shrl
dec
xchg
push
mov
fists
jl
imul
or
adc
iret
cwtl
push
push
push
outsb
inc
stc
pop
shrb
push
push
dec
fcomp
xchg
pop
dec
pop
xchg
test
mov
inc
adc
dec
mov
in
mov
sarb
push
inc
xchg
popa
jmp
inc
and
popf
icebp
push
jno
sbb
mov
sub
mov
ljmp
orl
mov
sahf
jle
dec
dec
lds
cmp
xchg
repz
je
mov
insl
insl
sub
sub
inc
lcall
add
cli
faddl
add
ds
fs
int
xchg
cmc
cmpb
jmp
xor
xor
call
xchg
xor
test
mov
pop
mov
ja
fwait
pop
xchg
inc
sub
xorl
rclb
pop
push
in
mov
adc
lret
pushf
xor
rorl
pop
mov
or
out
cmp
sub
cmp
gs
es
mov
int3
shrl
xor
pop
inc
push
sbb
xchg
fdivrs
pusha
adc
and
inc
aad
outsb
or
push
sti
pop
stos
into
pop
imul
ret
xchg
stos
int
mov
cwtl
je
mov
out
push
aas
mov
xlat
in
sub
push
jnp
xor
sbb
pop
and
ror
mov
scas
lods
push
mov
ds
scas
xchg
imul
rcll
outsl
sbb
add
inc
int
clc
mov
adc
scas
adc
jmp
inc
mov
pusha
push
scas
lds
hlt
fwait
movsl
cmp
dec
cmp
push
mov
rclb
pop
in
jecxz
xor
dec
clc
cmp
mov
jne
xchg
pop
dec
xchg
adc
stos
xchg
sub
or
xor
adc
mov
mov
mov
movsl
in
sahf
int
jg
ss
cmpsb
push
cmp
daa
or
and
rcr
fdivrs
loope
jo
inc
and
mov
mov
push
inc
stc
add
lea
jle
mov
jno
cmp
sub
adc
sub
outsl
adc
add
jae
and
clc
add
mov
popf
enter
popf
ds
out
ja
xchg
inc
xor
movsl
mov
mov
push
sbb
ret
pop
dec
lahf
cli
jmp
cmp
mov
aaa
cmp
xchg
insb
push
jo
mov
test
loopne
and
addl
add
xor
push
nop
mov
loopne
xchg
mov
ror
xchg
mov
inc
fidivl
mov
add
jl
sub
cmp
sbb
or
mov
sub
sub
mov
outsl
insl
jle
cmp
mov
mov
inc
std
sub
push
push
out
and
hlt
movl
in
mov
jp
and
out
iret
lret
or
addb
adc
adc
jg
mov
stos
hlt
jl
push
enter
xor
xchg
cmp
mov
sub
enter
notb
xlat
fsubrs
imul
cmp
fnstenv
int3
jae
mov
adc
inc
mov
mov
mov
loopne
repz
cmpsb
jmp
mov
push
inc
mov
dec
push
lds
shll
clc
out
lea
adc
adcl
adc
cmp
addl
mov
rorl
xor
popf
and
subb
mov
mov
or
mov
arpl
repnz
add
dec
dec
or
jo
test
fmuls
ret
sbb
mov
rol
inc
or
mov
arpl
xchg
dec
fistl
pop
inc
or
dec
sbb
lea
movsl
dec
inc
int
adc
and
mov
inc
jbe
jmp
inc
pop
cmp
lods
mov
cmp
mov
mov
mov
inc
das
jns
inc
fisttps
xor
xlat
cli
inc
fwait
repnz
dec
inc
lods
inc
pop
lock
insb
rol
xor
xchg
xor
inc
jno
jge
inc
test
inc
jns
inc
aas
and
mov
inc
fwait
std
test
fldt
inc
push
rorl
mov
inc
aas
dec
mov
jns
inc
outsl
lods
or
hlt
and
inc
add
ljmp
inc
add
es
inc
pop
sub
xor
mov
jns
inc
decb
push
mov
lahf
shrb
xor
jns
leave
mov
fcomi
inc
lea
mov
mov
adc
sarl
dec
mov
xchg
xlat
rorl
or
cmpsb
or
loopne
push
xchg
cwtl
inc
inc
jmp
mull
rcl
enter
cmp
shlb
test
inc
in
inc
dec
nop
leave
lods
jmp
inc
xchg
ljmp
inc
dec
inc
fwait
rcrl
xorb
push
mov
sbb
pop
inc
lahf
cmp
xchg
push
mov
jo
adc
mov
int3
mov
push
mov
sar
cmp
or
pop
mov
out
iret
inc
mov
cmp
cmpsb
xchg
fwait
mov
cmp
popa
ds
in
add
cltd
add
in
push
push
insb
pop
inc
sub
mov
and
js
inc
jecxz
push
sub
push
lods
outsl
scas
rorl
mov
rcrb
insl
inc
mov
movsb
inc
inc
add
nop
mov
push
xchg
mov
mov
lret
ljmp
jns
cmpsl
push
mov
mov
leave
jge
dec
ja
lea
jecxz
int
or
mov
add
jno
add
adc
and
dec
rclb
adc
or
int
mov
iret
ret
push
jecxz
lret
mov
jns
mov
cmp
or
ret
mov
insl
mov
xchg
dec
inc
mov
inc
ret
lods
push
dec
mov
ret
or
pusha
mov
rcl
adc
push
addb
idivl
mulb
cmp
mov
push
ror
pop
cmp
mov
lods
pop
ds
insb
mov
stos
mov
sarl
xorb
push
inc
xor
adc
fadd
rolb
icebp
loope
shll
popa
push
inc
xor
adc
mov
inc
ja,pn
popa
repz
mov
add
and
fisubs
ss
sbbb
or
xchg
push
sub
push
out
in
xchg
add
clc
xor
and
add
push
dec
sub
mov
pop
add
rol
dec
sub
fsubl
aam
mov
cmp
fisubrs
inc
bnd
adc
mov
stc
push
pop
or
repnz
dec
aad
fcomps
and
or
inc
daa
mov
lds
sbb
cli
scas
call
addl
push
pop
je
dec
insb
sbb
dec
in
dec
daa
inc
dec
daa
inc
push
mov
xor
pop
jne
jb
dec
cld
leave
xor
jns
sub
in
jmp
out
dec
iret
negb
mov
push
dec
mov
stos
pop
int3
enter
ret
mov
pop
push
mov
and
pcmpgtd
ljmp
jns
pop
mov
sbbl
in
mov
sub
mulb
xor
cmp
and
cwtl
jge
add
or
mov
pop
sbb
inc
inc
loopne
out
dec
xchg
cmp
jb
and
pop
or
jae
out
push
fmull
add
mov
mov
pop
or
jbe
cmp
mov
and
jne
adc
mov
mov
xchg
gs
cmp
out
inc
mov
and
hlt
int
or
pop
xor
push
cmp
inc
xchg
dec
bound
test
insb
imul
divl
lds
and
sub
sub
subb
xor
roll
jmp
test
jno
fisubrl
fimull
in
mov
incl
push
jnp
fwait
rcll
rorb
outsb
sbb
imul
inc
icebp
add
stc
xchg
or
mov
cmp
dec
cwtl
int
xchg
cli
test
lcall
adc
cmpsl
lret
cmp
cmp
mov
loop
test
xor
mov
repz
fs
jecxz
jo
int3
sbb
test
ret
cmp
jecxz
add
mov
lods
or
in
repz
out
mov
add
mov
out
adc
mov
sar
inc
aad
xchg
and
inc
push
jo
mov
adc
in
inc
cmp
adc
sub
push
inc
shll
daa
test
fucomi
nop
shl
push
sub
push
dec
or
mov
cs
movsl
ljmp
leave
scas
rclb
shrl
mov
and
push
push
rclb
pop
sbb
dec
dec
jo
pop
mov
ljmp
adc
add
rclb
test
in
lret
pop
cs
adc
test
imulb
out
out
dec
adc
fistpl
add
jge
sbb
into
cmp
add
push
xchg
jno
pop
xor
stos
pop
cmp
inc
insl
mov
push
movsl
inc
je
add
add
cmp
fcoml
pop
outsl
dec
popf
out
cltd
inc
loopne
push
mov
xchg
shll
and
dec
adc
mov
fwait
cmp
mov
sti
dec
scas
ret
mov
sbb
push
cli
xor
xchg
mov
loope
mov
mov
insb
orb
imul
or
mov
mov
xchg
push
xchg
pop
or
jno
pop
pop
inc
stc
cmp
xchg
sbb
jg
nop
aad
jo
and
and
movsb
xor
ds
and
and
and
add
sub
mov
xor
sbb
pop
movsb
pop
nop
mov
mov
dec
lcall
lea
jb
enter
jns
mov
jl
rorl
fwait
jmp
or
xor
sar
sub
jle
das
push
lret
sub
mov
out
push
in
enter
andb
mov
pop
loope
leave
dec
pop
mov
sub
bound
icebp
sub
mov
push
insl
inc
sbb
sar
cmp
rcrl
sti
mov
fwait
mov
iret
cmp
flds
lcall
adc
mov
adc
stos
lret
mov
inc
lods
sbb
and
and
mov
adc
push
xor
mov
cwtl
push
xchg
push
popf
popa
and
pop
call
repnz
shrb
rol
push
orb
xchg
jns
test
push
mov
push
mov
mov
call
xor
sbb
push
cmpsl
inc
and
stos
push
and
fidivs
popa
repz
adc
push
lds
cld
scas
push
mov
xor
and
int
mov
sub
sbb
dec
sbb
xor
repnz
sbb
xor
out
jecxz
leave
push
pusha
and
xchg
jmp
dec
xchg
movsl
imul
jecxz
scas
fisttpl
sti
and
out
mov
xorb
or
std
and
mov
shll
inc
inc
cmp
subb
stc
push
cmp
jg
jns
jp
pop
adc
fisttpl
lea
dec
out
sti
cmpsl
cmp
xchg
jne
mov
lcall
mov
subb
jmp
adcb
mov
push
popa
mov
inc
hlt
ret
pop
mov
jecxz
xchg
mov
mov
stos
sahf
fsubs
adc
add
fisttpl
sub
mov
aas
inc
adc
sbb
outsl
inc
push
rorl
in
jno
ljmp
in
push
call
mov
add
fbstp
xor
cmp
mov
rorl
test
adc
int
push
xchg
popl
subb
push
sbbb
inc
rcll
push
adc
arpl
iret
idivl
lods
cmpb
push
mov
dec
das
pop
out
icebp
xor
and
xchg
incb
fistpl
out
outsl
scas
xor
pop
out
jle
push
leave
jge
push
aas
cmp
push
insl
mov
shll
test
fistpl
inc
leave
ret
sbbl
xchg
popa
lcall
cli
call
sarb
jno
dec
cmp
dec
xor
dec
cmc
mov
jne
sbbl
and
jb
repz
sahf
mov
lds
lret
mov
lcall
jmp
je
arpl
sbb
push
and
adc
xchg
cmp
test
lcall
inc
popf
inc
out
jns
xorb
popa
push
add
mov
pop
sbb
lds
jno
pusha
lahf
movq
inc
lea
cmp
xchg
jae
or
sbbl
inc
mov
jb
adc
rorl
lock
es
mov
xor
sbb
into
loop
xchg
lahf
adc
jmp
popa
shr
icebp
das
lret
mov
ljmp
dec
xor
push
mov
dec
jmp
push
ss
mov
subl
icebp
fldl
push
and
sti
aam
and
adc
xor
cmp
incb
popa
add
adc
popa
or
lret
into
bound
dec
dec
jle
pop
int
aad
stos
push
popa
mov
jns
ljmp
mov
xchg
jp
pusha
fsubs
pop
faddl
ret
push
jg
out
push
ret
adc
sbb
inc
mov
xchg
repnz
das
cmpsl
push
stos
addr16
inc
mov
in
mov
stc
jmp
mov
fnsave
cmp
int
inc
addr16
mov
jno
daa
dec
add
hlt
jns,pn
insb
xchg
fbstp
fisttpl
test
add
push
adc
test
sub
push
stos
cmp
mov
cwtl
loopnew
div
push
adc
ror
in
movsb
xchg
add
pop
iret
xchg
test
add
leave
mov
xchg
mov
insl
push
lock
sub
jb
xor
xchg
push
sbb
nop
sbb
mov
stc
dec
add
xor
cmp
cmpsl
cltd
lock
jnp
in
leave
out
dec
push
dec
adc
cmpsl
mov
sbb
mov
sbbb
pop
adc
mov
adc
mov
push
adc
dec
mov
dec
xor
xor
lcall
adc
fbstp
adcb
rcl
inc
nop
lods
mov
xchg
xor
jb
jae
lret
ficomps
mov
loope
pop
lods
shrb
jg
arpl
cmp
sbb
dec
push
xor
push
cltd
or
mov
test
jle
sarb
xor
sub
loopne
mov
mov
xor
stc
rcll
dec
repnz
call
jge
daa
test
add
int
cmp
shll
out
sub
inc
shlb
shrb
xor
inc
mov
jae
or
xor
dec
arpl
ret
sub
das
mov
mov
in
mov
shll
in
cmp
call
cmp
jae
scas
out
mov
in
mulb
push
sbb
xor
clc
xor
cmp
rolb
addr16
mov
mov
sahf
sti
das
or
inc
mov
adc
and
push
cmp
hlt
lahf
data16
icebp
adc
lcall
mov
sub
mov
outsb
xor
xchg
jo
stc
mov
ret
loop
and
adc
and
jno
adc
lcall
xchg
sbb
test
insl
inc
mov
push
insb
sub
movsb
pop
pop
stos
stos
dec
cmp
jg
inc
xchg
push
adc
jge
ret
cmpsb
xchg
add
mov
scas
mov
and
inc
loope
addr16
mov
popf
xor
push
lret
push
mov
cmp
fcoml
dec
xor
push
xchg
pop
fs
imul
xchg
rclb
mov
dec
hlt
bound
and
or
fisubrs
nop
mov
rolb
gs
cmp
leave
adc
and
mov
dec
inc
xor
inc
xchg
jmp
inc
sbb
push
and
jg
popa
cmp
xchg
aaa
adc
mov
pop
push
cmp
mov
adc
jno
dec
dec
jno
xchg
call
jb
fists
mov
and
mov
or
pusha
mov
gs
dec
xchg
jecxz
nop
sbb
imul
add
jnp
and
pop
mov
and
test
test
mov
pop
jae
inc
or
jecxz
inc
in
out
xchg
test
mov
mov
gs
xchg
mov
mov
insb
mov
adc
cli
or
lea
push
es
leave
in
push
mov
daa
mov
jb
sbb
mov
lods
adc
and
sub
xchg
fdiv
push
mov
insl
xorl
fs
inc
xor
push
add
mov
jg
ret
sub
orl
out
jb
cld
fs
xchg
out
cmpsl
loopne
xchg
pusha
nop
and
out
jecxz
mov
cmpsl
int
cmp
in
dec
ss
nop
adc
push
int
incb
ret
adcb
add
push
xchg
mov
shr
lahf
rsm
adc
jo
mov
scas
mov
sti
jne
pop
hlt
sub
sub
int
ja
shrb
test
sbb
mov
push
sbb
faddl
out
jno
jo
popf
and
arpl
pop
imul
push
hlt
leave
lahf
mov
jae
scas
fcmovnu
or
lahf
mov
in
sbb
sbb
and
and
in
mov
stos
xchg
popl
insl
push
push
lock
rclb
scas
scas
add
and
push
int
outsb
push
pop
mov
test
push
addr16
xchg
into
std
lcall
inc
jp
push
push
jecxz
nop
add
mov
cmp
jae
dec
movl
xor
xchg
rcrb
cmp
mov
loope
outsl
ret
mov
cmp
xor
jg
sub
adc
cmp
pusha
lds
fstpl
roll
lcall
in
inc
and
sub
push
cmpsb
pop
and
ds
or
shll
xchg
jle
shrb
xchg
cmp
cmp
sbb
inc
repnz
in
in
inc
negb
ja
mov
loop
mov
and
arpl
mov
sbb
sub
lock
and
or
int
icebp
xchg
js
push
popl
mov
adc
adc
push
int
pushf
dec
cmp
fidivrl
pop
adc
dec
cmp
lahf
into
sbb
cwtl
xchg
lret
ja
movsl
jle
cmp
xor
inc
lods
cld
mov
add
jns
dec
popa
test
stos
fsubs
icebp
rorl
imul
in
cmpsb
sbb
xchg
gs
sbb
jg
xchg
aad
jmp
lock
into
in
int
dec
inc
mov
mov
xchg
mov
shll
sti
pusha
shr
dec
xor
outsl
mov
push
jp
stc
xchg
and
cmp
popf
int
sub
and
or
pop
fsubl
jmp
mov
xchg
adc
imul
mov
ja
cmp
push
out
iret
jp
jg
fildll
daa
push
dec
mov
shll
movsl
addr16
insb
inc
mov
jl
xchg
insl
ljmp
insl
sarl
sbb
push
mov
test
and
decb
lcall
mov
ja
cmp
mov
sub
fistl
sub
ret
xor
xchg
mov
fcmovbe
data16
cmpsb
push
push
push
inc
xor
xchg
sub
scas
loope
xor
pop
mov
fidivl
clc
jnp
clc
push
pop
lods
loope
lock
push
push
xchg
and
enter
cmp
xor
push
xor
pop
add
pop
pop
ss
mov
orl
aas
push
fnsave
sbb
mov
insb
inc
jno
push
push
jge
les
mov
adc
es
sti
jnp
and
inc
sbb
call
add
xor
in
leave
rclb
cmpsl
dec
stos
das
sbb
xor
adcb
mov
and
insl
fidivs
inc
mov
xor
sbb
dec
sbb
scas
cmp
push
lcall
inc
ret
push
push
roll
lods
xchg
dec
and
adc
test
insl
shll
mov
mov
aam
adc
mov
add
iret
cli
mov
imul
rolb
inc
dec
sub
sub
sbb
mov
daa
xchg
inc
dec
mov
add
jle
jp
lea
sub
scas
xchg
mov
mov
cltd
pop
sub
ret
scas
je
sub
xor
pop
jp
add
add
adc
ret
das
test
dec
les
cmp
ja
mov
scas
adc
jo
pop
lret
into
shrl
pop
and
scas
sbb
enter
stos
mov
test
out
and
popa
mov
nop
sub
inc
fiaddl
push
inc
psraw
icebp
rcll
inc
add
out
mov
into
in
dec
cmp
mov
cmp
ret
mov
sub
push
and
inc
and
fwait
add
into
cmc
inc
push
cmp
mov
das
pop
push
test
pop
out
or
add
inc
push
inc
out
and
out
mov
std
ret
test
dec
cld
push
mov
jl
ret
stos
mov
adcl
hlt
out
insb
sbb
dec
inc
jle
and
into
mov
inc
out
clc
ss
add
shrl
pop
xchg
out
into
rcll
ret
inc
mov
mov
or
cmpsb
add
out
icebp
clc
test
ret
mov
or
xor
imull
pop
jo
sbb
mov
aad
cmp
mov
inc
mov
cltd
mov
inc
orl
icebp
rcrl
int
add
xor
push
into
dec
pop
cmp
sub
push
pop
arpl
outsb
jg
mov
dec
sbb
mov
mov
movsl
pop
pop
into
insb
mov
add
xchg
fbld
cmp
movsb
pop
pop
into
inc
xchg
and
cmp
mov
nop
test
rorb
mov
dec
push
mov
push
push
adc
ret
cmp
mov
into
pushf
dec
icebp
jbe
pop
push
jecxz
les
vpsubb
into
jp
shrl
dec
repnz
cld
mov
inc
mov
inc
cmp
into
aaa
mov
mov
fmull
and
nop
push
inc
adc
push
inc
ret
mov
inc
mov
inc
add
roll
cmp
pop
mov
push
push
or
cmpsb
inc
inc
in
mov
cmc
ret
jne
insb
lds
inc
pop
insb
push
lret
call
mov
inc
imul
jbe
adc
push
mov
into
lret
dec
mov
dec
push
lods
push
push
inc
int
push
lea
or
adc
test
in
cwtl
call
shrl
jmp
ret
jb
jle
andl
dec
mov
inc
adc
cmp
cmpsb
add
mov
xlat
inc
jno
adc
cmp
ss
lods
cmp
call
jp
movsb
faddl
setnp
jle
sub
mov
gs
inc
stos
fmuls
and
xchg
stc
ljmp
fldenv
mov
adc
inc
lock
scas
fs
sub
pop
xchg
sub
inc
daa
mov
dec
adc
ds
pop
xorb
ror
xchg
push
stos
lcall
js
xor
jge
dec
stos
popa
mov
cmpsl
add
mov
repz
lcall
mov
sbb
rolb
xchg
or
push
mov
cmp
pop
mov
cmc
sub
inc
addr16
pop
out
add
cmp
repz
enter
pop
mov
lahf
icebp
push
jnp
mov
add
sub
lahf
adc
sbb
out
add
ret
push
xchg
inc
mov
shrl
and
cmp
call
clc
rcrb
in
sbb
mov
cs
inc
jg
lock
mov
xchg
cmp
xor
xchg
jno
jg
mov
dec
rcrl
inc
pop
mov
cmp
or
imul
insl
lfs
repz
dec
adc
or
test
in
clc
scas
aaa
lcall
cmp
iret
jb
dec
sbb
in
jbe
cmp
cmc
pop
mov
mov
mov
push
push
fstl
xchg
cwtl
jecxz
push
ljmp
pop
pop
stos
leave
mov
int
ret
inc
cmp
out
fwait
inc
stos
mov
lahf
mov
icebp
push
sub
testb
jb
das
stc
pop
xor
lock
mov
pop
dec
adc
data16
lret
adc
cmp
sbb
sub
mov
shlb
popf
pop
sbb
jge
test
jecxz
daa
add
push
and
inc
aam
jp
jecxz
push
pop
sbb
nop
ret
adc
out
jno
andl
push
jno
inc
out
push
xor
out
movsb
mov
or
sub
pusha
jb
inc
mov
xchg
popf
xchg
or
jmp
testl
inc
loopne
addb
inc
loopne
inc
add
sbb
loopne
aas
pop
and
xchg
jmp
jle
cmp
push
inc
cs
aam
out
jnp
adc
aas
adc
add
add
mov
sbb
stc
iret
mov
mov
adc
adc
popa
fcomps
insb
nop
sub
clc
pop
lock
mov
hlt
into
gs
dec
and
sbb
push
arpl
scas
and
cld
mov
mov
ret
dec
mov
pop
in
pusha
dec
insb
fxch
mov
xor
rorb
mov
lods
mov
or
cmc
mov
and
shll
mov
aam
mov
push
dec
test
pop
xor
xchg
pop
roll
pop
sub
pop
inc
add
push
and
cmp
adc
scas
mov
inc
rcrl
push
pop
adc
xor
frstor
jns
lock
out
xor
outsl
data16
jmp
icebp
adc
out
mov
mov
ficoms
adc
jae
dec
movsl
mov
jp
jmp
cwtl
pop
scas
mov
mov
cli
inc
add
mov
loop
ror
push
mov
mov
lods
adc
stos
add
push
ja
jmp
movsb
cs
aad
or
leave
sti
sub
pushf
or
mov
push
mov
inc
rcl
neg
cmp
xchg
rcll
ja
and
mov
mov
mov
ss
xorl
bound
loopne
mov
dec
mov
fucomp
or
stos
and
mov
sub
out
inc
bound
ss
ror
add
lock
popf
repz
cltd
nop
ret
push
iret
jg
adc
or
cmpsb
cltd
mov
gs
leave
daa
mov
sbb
adc
xor
outsl
inc
add
in
popf
jp
addr16
xor
stc
or
push
add
daa
sbb
sti
dec
jg
fbld
inc
aas
flds
lcall
and
jmp
arpl
sub
addb
lahf
pop
adc
dec
roll
fwait
mov
cmp
stos
push
rorb
sub
fwait
jno
repnz
inc
adc
addr16
unpcklps
jge
push
push
push
add
negb
cmp
and
push
roll
sahf
outsb
pop
cld
and
xchg
jmp
inc
ret
rcrb
pop
dec
xor
ret
cs
and
inc
mov
outsb
test
or
mov
sub
cwtl
fnstsw
push
mov
aas
pop
xor
jmp
jb
sub
aas
push
loope
dec
ret
dec
movsl
jge
adc
xor
hlt
mov
pop
add
mov
inc
repz
mov
inc
pop
ret
push
popf
mov
cmp
dec
stos
and
push
fiadds
pop
enter
cwtl
ret
or
loopne
mov
and
in
mov
dec
leave
xor
popf
push
add
xor
shl
stos
pusha
mov
mov
push
adc
xor
dec
jmp
lret
adc
test
shl
inc
dec
or
clc
pop
xchg
or
in
xchg
sbb
ljmp
jmp
int3
popa
cmp
push
divl
notb
test
in
sub
inc
rolb
scas
stos
xorl
fisttpl
outsb
clc
loopne
xacquire
pusha
loope
xor
fdivl
xor
mov
icebp
test
das
jmp
stos
xchg
mov
or
test
sbb
jl
sub
inc
inc
push
jle
dec
andb
mov
cmpsl
pop
mov
movsb
fs
cvtpi2ps
aaa
hlt
adc
sbbb
xor
push
dec
xor
ret
mov
inc
iret
arpl
or
push
jg
icebp
jns
jnp
ss
push
jp
dec
mov
cmp
and
jmp
jno
cltd
dec
add
xor
movups
ljmp
mov
faddl
xor
jns
out
or
imul
jge
into
push
push
popf
jno
push
ja
mov
jbe
push
inc
dec
jle
push
xchg
mov
data16
sbb
fildl
sub
fdivrs
pop
jle
or
sbb
pop
cmpsb
push
cwtl
push
shlb
adc
jmp
mov
in
inc
cld
mov
or
fs
xchg
lods
mov
outsl
in
xor
jns
mov
movsl
push
push
mov
sub
cs
cmp
frstor
inc
adc
hlt
xchg
flds
add
imul
push
dec
repz
mov
dec
push
jno
icebp
adc
pop
jp
nop
shll
dec
imul
xorb
rolb
shl
in
and
and
insl
rcrl
into
mov
in
add
imul
push
into
xchg
clc
adc
mov
insl
mov
xchg
jecxz
daa
sub
loop,pt
lea
pop
mov
xor
adc
lret
jns
jo
jo
sbb
or
xchg
sbb
mov
jl
sub
jg
ds
stos
lock
fdivr
push
ret
xor
mov
lret
xchg
sbb
cmp
jl
shll
lods
xor
adc
cmpsb
adc
nop
icebp
push
jne
sub
inc
add
dec
xorl
xchg
cmp
rorl
cmovle
pusha
imulb
dec
add
into
ret
rorl
leave
lret
mov
dec
mov
sarl
mov
push
outsb
lods
adc
loopne
mov
in
adc
mov
mov
frstor
add
ret
pushf
nop
popf
sbb
push
sub
xchg
mov
add
sbb
insl
in
mov
push
ds
inc
xchg
orl
mov
adc
mov
or
test
call
mov
add
inc
pop
enter
rep
jb
int3
xor
xchg
cmpsl
xchg
out
jmp
popl
and
aas
jo
js
fdivrs
cmp
xor
mov
add
in
outsb
mov
cli
sbb
cmpsl
dec
and
stos
fiadds
sahf
rol
mov
icebp
popa
adc
pop
mov
dec
in
fs
dec
cmp
and
out
popa
lcall
cwtl
out
stos
or
mov
adcb
mov
lret
loopne
or
mov
call
mov
leave
mov
mov
or
add
rep
push
or
rorl
jns
jle
outsl
or
fnop
mov
ja
adc
aad
mov
ror
repnz
addr16
aam
pop
jp
or
ljmp
or
mov
mov
sbb
xor
dec
in
push
cmp
hlt
je
sbb
xchg
xchg
inc
mov
inc
push
sbb
mov
push
inc
inc
rcll
int3
roll
push
ret
jle
adc
jae
and
adc
mov
mov
cmp
jbe
and
lods
cmp
rol
test
lret
mov
adc
clc
in
enter
icebp
mov
mov
inc
xchg
in
cld
mov
shr
cmp
lods
icebp
arpl
inc
add
xchg
pop
pop
jbe
mov
or
jmp
pop
fiaddl
cmc
sub
xor
and
std
xchg
mov
dec
or
pushf
inc
in
subb
dec
adcb
sbb
fdivrl
sub
jge
arpl
ljmp
jns
pop
std
movl
mov
inc
lcall
jg
out
xchg
pop
xor
add
push
push
sbb
scas
popf
inc
ja
mov
ficoml
les
outsl
sub
fdiv
xchg
and
mov
stc
fwait
xor
xor
cmpsb
mov
mov
mov
and
mov
mov
mov
fldl
ljmp
inc
xchg
adc
xchg
pop
add
inc
pop
or
lret
mov
dec
enter
jl
inc
cltd
push
enter
mov
mov
loopne
cs
cwtl
inc
adc
jno
mov
cli
pop
inc
lret
mov
test
iret
and
jno
mov
sbb
iret
push
cmp
mov
or
fcoml
dec
out
push
xor
insl
outsl
cmpsl
cld
or
ds
jp
ret
lcall
jl
fldt
and
cmp
or
imul
push
push
in
inc
jno
stos
xrelease
and
ds
sbb
add
jae
cld
and
push
fisubrl
cmpsb
add
jns
test
adc
push
test
leave
out
xor
add
ja
xlat
push
scas
cwtl
adcl
iret
repnz
mov
mov
popl
lcall
inc
cmc
add
movsl
jg
sbb
stos
xchg
scas
imul
int
push
inc
adc
fld
into
cltd
dec
movsb
adc
lods
int
fimull
mov
dec
sub
and
and
out
jns
pushf
mov
mov
jmp
sbb
icebp
aam
sub
jg
sarl
sbb
adc
cltd
cld
and
inc
mov
sbb
xchg
mov
repnz
sbb
mov
sub
jb
nop
rcll
mov
pop
cs
and
sub
sbb
lcall
jg
fstpt
cmpsb
jge
gs
inc
sbb
popa
lea
mov
sbb
sub
rcll
adc
mov
ret
push
xor
push
mov
subb
cld
loope
add
mov
das
stc
jae,pn
movsb
ret
pop
scas
clc
cmp
or
ret
cmpsl
out
rorl
inc
movsl
enter
rorl
movsl
outsb
push
cli
sbb
mov
dec
cmpl
nop
fistps
shlb
add
sub
lcall
xor
cmpsb
in
add
xor
dec
stc
cmp
mov
fidivl
popa
aaa
cmp
sub
ret
adc
adc
loop
sbb
adc
mov
lock
les
dec
xchg
add
jle
inc
or
pusha
xchg
test
adc
movsl
fucomp
movsb
scas
cs
lcall
mov
sbb
dec
mov
sub
inc
repz
imul
adc
shll
inc
lcall
popf
add
ds
lods
idivb
clc
movsb
cmp
dec
aaa
xorl
xor
mov
mov
popf
test
adc
hlt
sub
jg
push
cmp
jp
inc
pushf
test
in
pusha
inc
cmpsb
loop
or
call
push
mov
pusha
add
jg
ds
cmpsl
push
fdivrs
arpl
pop
movsb
or
sahf
adc
inc
out
adc
xchg
inc
inc
movsl
jp
ret
mov
pop
pop
add
xchg
cmp
fs
sub
in
fcoml
jmp
stos
test
fisubl
ficompl
cltd
icebp
shr
sub
cltd
addr16
jg
popf
xor
push
ja
push
pop
jp
mov
adc
cmp
and
int
call
add
out
movsb
lret
push
sub
pop
mov
xor
mov
and
or
outsb
xchg
mov
sub
loope
in
sub
mov
js
xchg
xor
inc
dec
lock
shll
mov
leave
pop
pop
jp
mov
addr16
aad
arpl
push
jg
mov
lock
idivl
mov
fwait
push
sbb
push
cli
pop
lret
mov
cmp
mov
or
rcrl
mov
dec
mov
xor
mov
push
cmp
aaa
mov
popf
outsl
xchg
mov
nop
mov
es
shr
inc
int3
cmp
mov
xor
jp
scas
rcrb
sbb
xorb
push
mov
xor
stos
or
push
pop
cli
insb
and
call
jb
cmpsb
mov
mov
cmp
mov
cmp
jecxz
sbb
ret
call
or
or
les
cmp
inc
pop
xchg
sbb
cmp
dec
jbe
xor
mov
and
sbb
shrl
int
outsb
pop
stos
pop
stos
out
sub
mov
or
sbb
mov
dec
ret
cld
cmc
adc
repz
xor
pop
push
mov
push
mov
mov
jg
jl
rcll
jb
sbb
stc
mov
inc
cmp
mov
shlb
xchg
movsb
cli
inc
repnz
xor
xchg
push
xchg
mov
mov
sub
cltd
jg
sub
ret
inc
lds
xchg
cld
in
mov
std
popa
mov
jmp
jno
cmp
mov
inc
mov
xor
sub
lods
pop
scas
sti
int3
mov
sbb
jb
ret
pop
inc
cltd
xor
xor
in
pop
out
pop
mov
jnp
and
inc
xchg
add
mov
cmp
mov
imul
adc
add
sbb
inc
push
pusha
imul
cmc
fcmovnb
out
xchg
xchg
scas
sub
mov
pop
lea
scas
imul
push
pop
insb
data16
xor
inc
cmp
aaa
mov
outsl
and
sbb
subb
cld
insl
in
dec
lret
outsb
mov
or
ret
fs
xor
lret
mov
xchg
inc
mov
les
mov
mov
push
sbb
int3
pop
push
cmp
xchg
mov
or
into
and
orb
and
movb
pop
adc
rol
pop
sbb
mov
push
outsl
push
inc
mov
rolb
loope
mov
insl
call
ret
popf
mov
or
xchg
xor
cmpb
leave
icebp
mov
decb
lods
enter
mov
sub
ljmp
insb
popa
mov
lcall
cmp
adc
cmp
ret
out
mov
push
loopne
jg
das
cmp
push
bound
insl
imul
pop
mov
and
pushf
mov
adc
push
and
fildll
dec
lds
mov
or
mov
and
mov
sub
dec
inc
cmp
xchg
sahf
loopne
mov
aaa
mov
stos
test
call
fcoml
divl
xchg
mov
in
mov
dec
scas
lcall
xchg
call
out
xchg
and
fsubp
leave
add
movnti
nop
outsb
xchg
scas
jecxz
or
movsl
jg
leave
int
insl
or
mov
inc
pusha
mov
leave
mov
sti
sub
sarl
adc
sarb
adc
lret
xchg
xor
mov
xor
sbb
push
lods
fsubr
lret
mov
push
push
xchg
rorb
nop
loope
lods
mov
out
mov
pop
sub
mov
push
push
and
mov
call
sbb
sbb
loope
aaa
inc
pop
xlat
dec
inc
popa
gs
in
adc
std
sub
sbb
js
and
pop
mov
and
stc
test
xor
inc
jns
jp
jl
dec
mov
cs
pusha
outsl
xchg
sub
arpl
pop
int
mov
adc
sbb
inc
fsubrl
bound
inc
push
and
lea
cmp
xorb
data16
imul
fwait
inc
fdivrl
cmp
lods
or
add
cs
mov
rcll
lret
repnz
sbb
and
out
test
idivl
xor
mov
sahf
add
sub
xchg
jb
push
adc
mov
pop
inc
cli
sbb
pop
sub
out
shlb
pop
sarb
popa
cmp
inc
mov
mov
inc
inc
ficoms
mull
orb
pop
push
xchg
scas
imul
xchg
adc
mov
ljmp
fcoml
outsl
scas
loope
popl
shll
mov
pop
movsl
mov
dec
and
insb
mov
mov
jb
in
out
aam
aaa
sub
cwtl
or
scas
loope
cli
mov
dec
arpl
xchg
dec
cltd
push
adc
popa
pop
mov
dec
sub
pop
dec
sti
inc
sbb
xor
dec
mov
lods
push
sbb
popa
mov
call
jle
pop
shll
mov
sbb
push
sbb
ret
popa
jl
mov
and
xor
test
push
pop
out
xor
jl
add
jle
xchg
std
xchg
jmp
je
arpl
daa
mov
xor
sahf
mov
call
nop
shrl
jmp
xchg
jp
mov
fcoml
fdivr
inc
int
mov
cmp
sahf
xchg
incl
imul
or
inc
ljmp
jp
leave
adc
sbb
daa
pop
inc
mul
out
rsqrtps
push
push
mov
sarb
ret
xchg
mov
and
imulb
cli
add
push
popa
stc
dec
rcr
hlt
pshufw
into
jg
sub
jge
cmp
loope
mov
xchg
dec
jo
into
js
inc
aas
and
je
jbe
adcb
cli
lret
hlt
popa
inc
jmp
jbe
jg
negl
sub
dec
cmpb
sbb
or
notb
add
mov
sub
jge
add
sub
out
fucomip
mov
or
into
incl
cs
mov
orb
push
js
pop
ret
adc
iret
add
fidivs
inc
ret
daa
xchg
insb
pop
or
leave
aaa
ds
xor
int
iret
xor
js
insl
adc
dec
sarl
fdivl
pop
mov
leave
mov
scas
and
xchg
jno
adc
daa
cmc
sub
es
outsl
loopne
sbb
push
test
jo
movsb
or
mov
sub
orb
scas
cmc
aaa
scas
inc
fisubs
pop
fadds
sub
pop
jns
pop
jno
stc
lret
pop
icebp
ljmp
lcall
dec
sub
lahf
pop
enter
clc
outsb
cld
aas
xchg
jecxz
repnz
jmp
sub
xchg
inc
sbb
fdivrl
stos
push
je
and
out
mov
push
loopne
sahf
in
pusha
inc
push
push
jno
jmp
movsb
inc
mov
cwtl
into
out
adc
fisubrs
jbe
inc
push
inc
lret
mov
nop
mov
in
nop
push
popf
test
add
cs
inc
pop
mov
dec
dec
pushf
jge
out
xchg
xchg
dec
jns
push
into
jno
mov
pop
into
dec
popf
bswap
inc
mov
jne
into
out
sar
iret
mov
inc
inc
test
into
fs
rorb
mov
inc
dec
fdivs
sbb
fists
and
xlat
mov
or
in
icebp
addl
iret
loopne
shlb
xchg
popa
roll
into
xor
sub
into
lcall
or
xor
and
push
movsb
mov
pop
push
aaa
into
mov
mov
inc
xchg
rcl
mov
pop
mov
aas
outsb
adc
xor
in
ret
sub
into
jbe
pop
inc
or
nop
lret
pop
mov
subl
push
sub
jmp
loopne
repnz
test
int
adc
and
lret
in
into
pushf
insb
xchg
xchg
inc
outsb
sub
xor
jl
shll
xchg
lds
inc
mov
inc
insb
mov
mov
pop
adc
inc
fbstp
dec
jb
xor
cwtl
rorl
adc
cmp
and
mov
fisubrl
pushf
cmp
sub
push
mov
setae
adc
xor
cmp
adc
rorb
mov
pop
std
stos
incb
repz
sarl
inc
int
or
pop
inc
mov
cmp
push
xchg
addr16
push
mov
imul
mov
inc
add
cltd
test
sub
lds
xchg
in
mov
cmpl
cld
and
cwtl
cmp
push
pushf
outsl
mov
xor
stc
inc
push
cmp
mov
rolb
mov
cmp
shrl
mov
mov
mov
test
cmp
jns
clc
inc
ret
pop
inc
and
mov
inc
sub
rorl
shlw
mov
shl
inc
inc
push
cmp
scas
ja
inc
xchg
cli
shr
inc
xor
scas
icebp
loopne
fidivrl
cmp
and
inc
inc
inc
popf
push
scas
sub
aad
rcll
xchg
add
inc
insl
cmp
aas
jae
inc
pop
adc
cmp
cmp
stos
mov
xchg
inc
shrl
push
sbb
adc
cmp
inc
cmp
mov
or
cmpsb
pushf
dec
sarl
js
vpacksswb
xchg
call
sbb
mov
sub
jae
mov
or
aas
and
clc
push
inc
push
mov
shll
ret
mov
aas
adc
cmp
sarl
jo
mov
arpl
movb
mov
inc
dec
add
fdivrs
pop
cmpsb
dec
lock
pop
dec
insb
lds
lock
pusha
out
inc
aaa
mov
push
dec
mov
mov
push
or
es
push
push
push
add
rclb
clc
inc
cmp
xor
dec
push
leave
mov
js
insb
dec
mov
nop
shl
mov
scas
mov
lret
add
shlb
ret
adc
aas
inc
popa
push
in
pop
ret
cmp
ds
mov
mov
lahf
adc
or
push
dec
adc
std
insl
push
ficomps
dec
or
pop
mov
add
and
movsb
push
adc
pop
inc
scas
jnp
mov
mov
pop
dec
inc
xor
rcll
mov
mov
insb
outsl
inc
pop
inc
mov
mov
mov
ret
cmp
cmp
inc
adc
jle
mov
mov
mov
inc
inc
push
xor
mov
rorl
mov
mov
loope
sarb
fs
js
mov
ret
dec
xlat
cmp
inc
int3
cmp
jle
pop
cmp
ret
jae
sarl
inc
xor
cmp
mov
shlb
cmp
aam
ds
mov
cmp
sub
or
cmp
loopne
fisttpl
orb
xchg
xchg
xor
cmp
in
cltd
popa
lcall
xor
push
test
mov
mov
cmp
mov
mov
in
repnz
xor
shrl
lahf
cltd
jmp
mov
inc
xor
or
add
fs
dec
ret
mov
bswap
icebp
jecxz
jne
mov
push
inc
icebp
popa
out
jbe
jo
gs
push
loop
insl
cmpsl
ret
push
add
fimuls
lahf
dec
dec
jne
mov
dec
fiadds
outsl
xchg
and
test
sub
mov
outsl
add
adcl
dec
dec
insl
loopne
adc
test
push
sbb
jb
jmp
inc
sub
shr
test
xchg
ds
popa
mov
mov
scas
ljmp
out
push
mov
sub
or
dec
test
sub
dec
fidivs
adc
bswap
test
shlb
xchg
pop
add
cs
push
mov
test
flds
int
popa
mov
mov
inc
loopne
mov
aad
xor
rcll
stos
dec
jae
ror
bound
adc
sahf
sar
rol
push
mov
dec
dec
push
push
dec
push
int
dec
lea
dec
push
push
or
int3
les
dec
inc
push
sub
xchg
dec
ja
add
scas
cmp
dec
mov
inc
adcl
inc
cmpsl
xchg
push
add
pop
aad
iret
sbb
jl
roll
add
rclb
out
rcll
shlb
iret
push
mov
ret
movl
pop
push
negb
xchg
rorl
int
aad
push
mov
mov
fidivrl
fwait
xor
pushf
pop
sti
sub
test
or
dec
mov
icebp
out
fs
loope
test
and
ja
adc
icebp
frstor
or
xor
and
int3
jge
dec
inc
ret
and
mov
pop
scas
inc
cwtl
or
sarl
xchg
jge
and
jmp
push
sbb
daa
pushf
mov
ds
and
rcll
inc
push
inc
and
sub
test
fidivrl
sbb
cld
or
lock
scas
mov
cmp
adc
or
insl
push
add
call
lcall
shl
push
push
in
mov
call
sbb
xchg
sarb
push
dec
rcrb
push
scas
movsl
and
adc
jle
cwtl
mov
lea
pop
sbbb
sub
pop
inc
cmp
mov
lods
jg
mov
insl
data16
jo
mov
dec
inc
adc
insl
inc
push
dec
out
push
cmp
and
sub
rorb
mov
mov
imul
sarb
jb
test
jb
xor
leave
push
and
aas
dec
adc
mov
push
adc
pop
pop
inc
leave
xchg
rcll
jb
inc
fcomps
mov
cmp
adc
test
dec
imul
and
mov
ret
fldl
adc
shll
int
sahf
jp
or
mov
jb
xchg
inc
jb
xlat
and
int3
into
lret
cli
adc
pop
mov
test
mov
cwtl
sub
in
add
ficompl
aaa
pushf
testb
lea
sub
psraw
lods
bnd
mov
in
or
adc
push
mov
pop
insl
cmp
sbb
pusha
out
test
and
inc
lock
movsb
fisttps
js
or
sub
das
aad
popf
pop
ret
sub
filds
jo
popf
mov
sub
and
pop
add
mov
pop
inc
sbb
and
out
sbb
popf
mov
jne
lret
lock
int3
das
cmp
inc
stc
nop
int3
mov
xchg
adc
jge
xchg
scas
adc
sbb
cmpsb
shll
sub
cmp
mov
xchg
int
popa
inc
insl
push
mov
pop
rolb
sbb
popf
cmp
push
cmp
xchg
loop
andb
sub
and
cld
cmp
inc
xor
xor
insl
push
adc
mov
mov
mov
lcall
mov
rcll
push
sub
shll
inc
push
mov
fs
out
and
jae
xchg
rcl
testb
jno
rclb
xor
mov
xlat
mov
dec
adc
shl
test
shl
rcl
fisubs
mov
xor
rcll
shll
mov
push
cmp
xchg
nop
and
push
sbb
bound
in
push
int3
sbb
inc
cmp
fdivrl
outsl
stos
sub
andb
out
stc
fcmovnb
lods
outsl
adc
adc
mov
movsl
push
sti
add
jnp
ljmp
loopne
pop
ret
mov
popa
dec
out
xchg
mov
jb
std
add
fcoms
adc
adc
lods
inc
test
dec
jo
lea
adc
dec
mov
mov
adc
lea
int
ret
loope
sub
mov
add
outsb
scas
push
add
shrl
push
mov
adc
mov
pop
int
aam
fidivrl
mov
imul
inc
outsl
pop
das
lods
popa
cli
jmp
jg
sbbl
inc
into
cmp
jnp
js
mov
pop
push
lret
pop
jg
inc
xchg
loop
fnstenv
incb
jle
push
mov
lcall
inc
mov
ret
stos
push
pusha
aad
cmp
fsubr
mov
ss
fucompp
js
dec
cmp
jae
inc
icebp
add
les
nop
outsl
ret
mov
int
add
mov
fmul
sub
ljmp
scas
push
and
mov
movsb
xchg
mov
decb
push
lods
call
mov
mov
lea
lret
sbb
dec
xchg
icebp
lea
into
jne
fldcw
push
xchg
mov
or
icebp
pop
xchg
cmp
sti
xor
mov
push
sub
sahf
mov
add
mov
xchg
jb
inc
scas
mov
lods
push
mov
cmp
shrl
mov
cmp
test
imul
ret
test
xlat
adc
xchg
std
and
test
jecxz
inc
out
ret
subb
sub
jl
pop
ss
fistps
pop
add
enter
sub
icebp
js
mov
int
sub
cmp
ja
jbe
movsb
add
arpl
in
dec
fstp
cmp
or
ja
dec
inc
or
push
test
mov
jo
adc
cmpb
pop
dec
inc
and
jo
insb
add
sbb
ret
jg
sub
adc
out
inc
cmp
sbb
xchg
cmp
mov
cmp
lret
pop
aaa
enter
mov
adc
cmp
adc
and
pop
lods
dec
popf
into
mov
add
fistl
and
xchg
cmpsl
sub
xor
enter
adc
sbb
xchg
pop
mov
pop
add
sbb
cmp
daa
dec
xor
cmc
adc
pop
fs
fisubrl
loopne
pop
stos
xchg
jge
int3
push
out
fs
cmp
push
push
push
je
mov
pop
sub
pop
mov
sbb
ss
idivb
pop
in
fnsave
mov
lcall
in
rclb
mov
out
fiadds
es
adc
mov
mov
add
cli
xchg
cmp
sbb
mov
aaa
bound
pop
or
daa
jnp
and
inc
add
mov
lock
mov
push
add
scas
mov
sub
inc
mov
cmp
lret
jb
mov
lcall
shr
sub
mov
add
mov
shlb
cmp
or
xchg
jp
pop
cmp
inc
stc
in
cmp
int
ret
sbb
jle
xor
push
mov
push
inc
nop
leave
xchg
add
xchg
push
adc
xchg
push
mov
ret
inc
pusha
jno
mov
mov
jbe
not
sub
add
push
cmp
adc
in
sub
ja
cwtl
mov
pop
fisubl
js
std
mov
add
xchg
xchg
mov
mov
push
ret
jo
push
ja
rorb
mov
mov
xchg
outsb
mov
mov
ja
adc
xchg
subb
mov
ret
sahf
sbb
std
daa
push
pop
idivl
sub
mov
xchg
out
cmc
jp
fisttpl
cmp
cltd
sbb
fwait
mov
adc
mov
mov
pop
xorb
std
shl
mov
out
push
pop
scas
sub
cwtl
sub
dec
pop
ds
jbe
fiadds
cld
jno
fs
out
ljmp
out
jg
out
dec
ja
adcb
inc
add
sub
ja
mov
add
mov
cmp
or
popa
adc
inc
roll
dec
inc
sahf
fsubl
lds
int
loop
sahf
roll
in
aad
vmovmskpd
aad
lds
or
ja
add
fxch
int
dec
test
inc
or
mov
ret
xchg
mov
add
pop
xor
call
lods
in
insb
lcall
mov
lds
cmp
scas
mov
xor
mov
rol
xor
jle
sbb
rclb
jecxz
lss
inc
push
orb
mov
cmpsb
mov
sahf
fnstsw
mov
inc
into
dec
xor
aad
mulb
lea
ficoml
shll
sti
daa
mov
ds
cld
push
jo
popa
aam
mov
lods
lcall
ds
fiaddl
mov
stc
and
movsb
push
test
xor
cmp
or
scas
xchg
push
push
outsl
fbstp
movl
or
aam
test
fists
clc
xor
call
rcr
aam
js
popf
lods
popa
lds
mov
loope
add
test
es
andb
enter
sarl
mov
and
pop
in
shl
in
push
xchg
xchg
inc
xchg
mov
cmp
adc
xor
mov
popf
dec
push
aaa
leave
xchg
mov
test
and
mov
and
adc
dec
and
jns
sub
insl
roll
dec
xchg
mov
js
sub
push
jno
or
in
inc
lcall
scas
jle
dec
popl
xor
cmp
inc
loopne
sub
xchg
cld
adc
adc
std
push
ss
mov
das
inc
loope
sbb
jmp
test
inc
inc
loope
repz
jne
xor
dec
cmp
rol
sub
mov
xchg
repz
pop
jge
xchg
test
xchg
add
faddl
lcall
in
xchg
adc
cmpb
push
mov
imul
popl
adc
popa
fstpt
cmpsb
call
sbb
gs
xor
insb
sub
fimull
jg
mov
pop
sub
mov
push
mov
out
adc
push
insl
push
lock
jbe
daa
and
pop
xlat
int
adc
popf
cmp
mov
xchg
and
or
call
xor
fmull
xor
nop
sub
or
add
xchg
mov
mov
adc
shll
xor
rol
cs
stc
dec
mov
bound
adc
ljmp
and
push
add
jp
dec
adc
repnz
jns
int3
scas
sbb
ds
xor
in
out
fidivs
in
out
jp
aaa
dec
ss
xchg
fsubl
xor
mov
fstps
jge
movlps
adc
pop
gs
pusha
adcl
sarl
dec
aam
out
dec
hlt
xchg
into
test
scas
cli
jbe
int
adcb
push
test
push
lret
add
leave
popl
xor
shl
aaa
inc
aam
mov
test
sbb
lods
mov
into
add
xchg
jl
fiadds
adc
adc
sub
cmp
sti
adc
mov
sbb
and
jge
fs
ficoms
aad
popf
mov
subb
pop
add
cmpsb
into
movsb
neg
jl
roll
inc
movsl
lea
xchg
adc
push
jns
cmp
mov
ss
test
pop
add
cmovbe
es
loope
loope
adc
push
mov
adc
mov
ja
das
push
bound
loop
lock
add
jns
repnz
jg
pop
cmpl
push
and
mov
sub
sub
jne
outsl
sbb
loop
push
inc
lds
mov
dec
ja
mov
mov
push
xchg
xor
jge
fstl
popa
rorl
push
out
scas
faddp
jge
xchg
push
call
xchg
int
std
incb
push
inc
adc
int
adc
xchg
pop
xor
mov
add
jge
mov
testb
xor
stos
mov
xlat
and
mov
unpcklps
ds
mov
fs
xchg
call
sub
cwtl
xor
xchg
out
ret
clc
xchg
shlb
repnz
ror
cmc
mov
insb
pop
rcr
mov
inc
decb
inc
push
cmp
mov
mov
in
cmc
mov
int3
dec
push
add
sub
mov
adc
push
inc
add
shl
inc
movsb
lea
lret
xchg
or
inc
jae
pop
sarl
popf
ret
int3
mov
iret
xchg
adc
inc
in
cmp
loopne
push
rcl
mov
mov
clc
xor
hlt
stc
shll
ss
repnz
mov
inc
xchg
clc
push
sarl
mov
jnp
xchg
lcall
pop
push
filds
nop
xlat
out
rol
sbb
xlat
movsl
repnz
ror
mov
aaa
movsl
cmpsl
inc
mov
mov
mov
ret
out
or
xchg
pop
sarl
add
push
mov
pop
pop
rorl
mov
mov
mov
mov
push
fdivrs
mov
pop
rorl
or
divb
inc
jo
mov
rcll
mov
mov
lds
mov
pop
movb
cmc
inc
cwtl
dec
and
loop
loop
mov
insl
jp
pop
popa
int
or
rolb
scas
mov
mov
cmp
push
adc
dec
add
push
ret
hlt
into
mov
sarl
sti
repnz
inc
inc
mov
push
popa
inc
adc
jecxz
jecxz
sub
mov
push
loop
mov
add
pop
push
outsl
mov
test
mov
push
jb
jo
jno
into
mov
cmpsl
push
mov
adc
pop
mov
popa
fucomp
rorb
inc
ljmp
fsubrp
cmp
les
push
jbe
xor
mov
inc
cmp
adc
add
daa
subb
dec
pop
and
test
sbb
jno
mov
dec
iret
cmp
sbbl
xchg
test
inc
bswap
iret
cmp
iret
test
adc
fs
mov
cmp
js
jl
rclb
and
lret
mov
cmp
test
xchg
addr16
lds
and
and
xchg
flds
leave
push
sbb
out
xchg
xchg
pop
rclb
mov
xchg
mov
aas
jns
stos
aaa
aaa
inc
adc
jl
jne
push
add
pop
inc
xor
int
cmp
adc
pop
aas
jb
cmpsb
push
mov
mov
dec
ret
push
or
insb
mov
jae
adc
push
and
dec
push
clc
loopne
outsl
push
or
pushf
sub
imul
jno
into
adc
xor
jno
mov
rcll
fsubrl
cmovbe
stos
sub
addb
inc
rcll
imul
xlat
mov
cmp
pop
add
push
mov
inc
dec
mov
jl
xchg
inc
dec
andb
push
mov
imulb
rorl
mov
xor
iret
mov
jns
cmp
jge
sub
inc
out
js
std
insl
into
inc
lds
xor
inc
or
imul
sub
push
mov
xchg
out
xor
test
lods
adc
fistl
test
lret
adc
scas
xchg
daa
js
inc
lea
cmp
out
imul
mov
jb
cmpsl
lahf
fisubs
rcll
iret
add
sbb
insl
inc
dec
mov
mov
mov
stos
mov
fisubl
push
inc
out
inc
xor
stos
push
jg
idivb
ret
jmp
pop
addr16
push
push
rorl
sbb
push
inc
popf
shlb
add
xchg
jmp
sbb
dec
inc
mov
mov
pop
lds
lahf
iret
inc
and
sbb
mov
mov
in
popa
aad
std
lods
or
push
cmp
adcb
fdivl
lds
lea
popf
popa
inc
movsb
mov
jg
add
out
fsts
dec
das
das
dec
in
addr16
sbb
loope
pop
fwait
popf
aaa
sahf
testb
mov
cmp
rcrb
pop
push
mov
jno
push
popf
rcrb
adc
xchg
and
loop
inc
mov
adc
inc
pop
jg
push
cs
inc
xchg
sub
iret
sbb
inc
ret
inc
and
movl
jp
gs
fidivl
dec
ss
cmp
sbb
add
mov
pusha
mov
mov
and
les
ret
adc
filds
mov
jnp
loopne
pusha
xor
enter
xchg
push
sbb
ja
enter
sarb
rolb
cvtps2pi
les
inc
xor
aas
into
imul
orl
fbstp
push
adc
shll
fsincos
rcl
stc
cmp
notb
dec
lds
adc
and
pop
out
lret
jae
pop
out
cs
jbe
sbb
mov
xor
cmp
insl
roll
dec
repnz
stc
sbb
mov
out
enter
mov
test
sub
sbb
adc
pop
lods
std
push
adc
fisubrs
pop
or
inc
xorl
xchg
mov
bound
cs
cmp
jb
xor
rorl
mov
sbb
xlat
shl
xor
mov
orl
lret
cmpb
push
inc
leave
adc
imul
repz
cli
out
popf
xchg
in
push
popf
push
jno
cli
out
popf
mov
add
adc
out
in
sbb
inc
xchg
mov
movsb
pop
adc
push
or
and
pusha
push
and
cld
xchg
xor
push
cmpl
mov
xor
mov
and
clc
in
sub
out
add
pop
adc
inc
cld
xchg
push
dec
jb
adc
dec
fists
stos
stc
je
mov
mov
cltd
sti
sbbl
mulb
les
mov
xchg
lret
rorb
insl
inc
std
push
pushf
andl
loop
test
inc
lods
and
daa
bound
aaa
scas
mov
andl
mov
fldt
popf
dec
out
adc
sbb
push
gs
jne
loopne
xor
fldl
lea
in
fsubs
mov
outsl
pushf
shrb
dec
cmp
popa
jae
out
jl
inc
ficoml
imul
imul
mov
mov
nop
mov
stc
lea
push
cmpsb
xor
out
das
push
mov
lahf
inc
jne
cmpl
jg
xor
lcall
in
ja
out
pop
imul
jg
sbb
ja
leave
out
and
mov
or
mov
push
leave
ret
leave
js
cmp
mov
mov
out
sub
jo
mov
cmpsl
sub
push
fidivl
stos
xor
and
sti
jge
loope
mov
insl
aas
adc
adc
jp
daa
mov
in
inc
cld
mov
adc
into
push
cmp
push
scas
test
inc
xchg
mov
cli
push
shlb
mov
cmp
mov
scas
sub
mov
mov
pop
adc
decb
push
into
mov
or
mov
mov
inc
push
xchg
sbbl
or
add
and
push
pushf
pop
lcall
adc
sub
or
pop
jno
dec
outsb
bound
outsb
ja
sbb
push
jg
inc
xor
lock
rep
cmp
add
push
into
outsl
mov
lret
aad
pop
sbb
lahf
nop
iret
popf
dec
aad
rcrl
xor
or
ror
dec
jnp
sub
test
scas
sub
cld
int3
pop
scas
dec
icebp
sbb
lods
nop
mov
lcall
xchg
xchg
insb
sub
cltd
ds
int
nop
ret
push
push
subb
sbbb
int
push
xor
mov
fwait
jl
test
std
dec
outsl
sahf
push
into
rcll
mov
rol
into
mov
nop
lock
or
xor
xchg
lods
les
cmp
mov
xchg
dec
data16
dec
ljmp
inc
out
arpl
xchg
les
stc
xor
inc
ret
sbb
mov
add
push
fisubl
mov
adc
cltd
mov
jmp
and
cmp
jno
enter
dec
inc
mov
cmp
push
inc
jecxz
out
cmpl
pop
nop
push
dec
adc
das
movntq
out
mov
xchg
sar
das
lret
leave
push
inc
xor
bound
cli
dec
push
les
and
mov
sub
sbb
xchg
sbb
pop
mov
and
add
sbb
push
dec
add
mov
xchg
loope
test
jmp
jb
fmuls
adc
jg
int
sbbb
sub
inc
lock
cld
mov
dec
sub
out
push
sar
sub
fs
xchg
ucomiss
sbb
jp
sub
cmp
mov
mov
into
in
nop
ds
inc
push
into
test
stos
and
cmpsl
push
mov
pop
mov
nop
popf
xchg
rorl
mov
cmp
nop
pop
xchg
xchg
pop
rcrl
jno
jb
add
lods
push
popl
push
fisttpll
in
pop
cmc
movsb
sbb
aas
xchg
lods
cmp
testl
sub
mov
push
sub
pop
push
mov
fsubrs
pop
addr16
mov
test
sarb
dec
mov
or
ds
mov
jns
jmp
pop
push
mov
sarb
cwtl
jge
jb
add
dec
push
nop
lret
mov
movsl
or
subb
mulb
ljmp
push
test
mov
mov
inc
mov
push
psubb
lcall
std
rol
xchg
mov
pop
adc
pop
mov
in
lods
jge
nop
fstpl
lea
loope
dec
mov
jecxz
lods
cwtl
mov
lds
push
cmp
les
jo
loopne
jmp
or
jp
add
dec
into
test
sbb
pop
hlt
mov
lea
incb
les
mov
push
xchg
pop
enter
inc
addr16
sub
push
out
add
mov
lret
insb
dec
icebp
jno
addr16
pop
inc
push
insb
dec
push
cmp
push
shlb
adc
js
out
add
sbbb
lahf
gs
lret
adc
lods
jg
adc
rcrb
xorl
lds
cmp
jae
add
insl
ja
sbb
ja
mov
ret
xor
dec
adc
pusha
cld
insb
cmp
imul
dec
ss
mov
add
aas
fwait
js
or
jle
aaa
aam
int3
sbb
mov
dec
lods
out
pop
push
mov
sbb
loope
sbb
arpl
imul
fidivl
push
pusha
push
nop
sub
sbb
mov
adc
ja
mov
fwait
mov
jecxz
addl
sahf
and
icebp
mov
cmp
sbb
scas
andb
xchg
fisubl
jmp
mov
mov
inc
mov
jae
adc
wbinvd
jl
xor
pop
jae
push
in
jns
push
push
or
adc
sub
stc
pop
xchg
lcall
cmc
dec
adc
sub
and
out
mov
nop
add
mov
jno
adc
jns
and
and
jnp
add
sub
lea
aaa
fnsave
in
pop
pop
aaa
in
mov
repnz
or
mov
negl
out
add
daa
mov
test
sahf
mov
mov
inc
push
cmp
lahf
cmp
mov
jo
arpl
lcall
xor
push
pop
adc
stos
lahf
scas
jns
inc
xchg
mov
into
mov
jne
pop
js
aas
xchg
pop
out
jb
sub
rcr
test
leave
dec
lret
ja
push
loope
imul
mov
lret
jg
jb
andl
push
std
ss
jge
push
sbb
lods
enter
jle
movsb
dec
mov
jg
pop
sarl
out
add
cmp
mov
and
inc
mov
nop
and
adc
inc
int
and
pop
jp
test
testb
in
call
enter
xor
inc
mov
jle
jno
mov
lds
mov
and
xor
clc
or
mov
dec
adc
lret
fisubs
or
adc
adcb
mov
jp
int
xchg
pusha
outsl
xchg
decb
roll
sbb
jo
inc
and
add
mov
outsl
mov
pop
clc
or
push
cmp
add
daa
nop
fwait
xlat
cwtl
mov
dec
bound
ljmp
inc
into
xchg
and
sub
pop
push
mov
xchg
xor
jmp
dec
lret
out
sbb
push
mov
cmp
xchg
test
test
inc
into
test
pop
je
cs
mov
mov
incb
stos
push
addr16
inc
ds
xchg
inc
fs
dec
sbb
push
stos
adc
inc
xchg
xor
pushf
into
jmp
xor
in
cli
cmp
xor
rcr
jg
and
popa
push
jbe
mov
cmpsb
add
shrl
adc
cmp
sbb
mov
inc
loop
mov
test
xor
pop
sbb
and
lea
cltd
sub
test
lcall
push
mov
inc
push
sub
icebp
dec
jb
orb
sub
jno
addr16
sub
fwait
xor
xlat
dec
fwait
rorl
into
les
pop
push
jae
ret
mov
mov
mov
pop
mov
dec
jo
add
xchg
fimull
addr16
leave
jne
ficompl
sub
push
jo
inc
pusha
orb
push
xor
push
jge
std
push
push
mov
ret
and
xchg
jae
cmp
outsl
mov
sub
push
adc
dec
push
mov
adc
lea
adc
rorl
xchg
xchg
popl
iret
or
test
fiaddl
in
push
jae
dec
adc
xchg
mov
subl
mov
retw
addr16
lcall
testl
or
lahf
nop
jae
pop
xchg
fidivrl
add
daa
ret
jecxz
shrl
dec
dec
test
cmp
mov
pop
dec
lcall
jo
add
mov
jl
inc
fisubrs
aaa
adc
or
decb
nop
test
inc
mov
sub
push
pop
dec
lock
mov
adc
or
arpl
jne
or
mov
subb
inc
sub
inc
dec
push
xor
xchg
fisttpl
dec
sbb
sbb
inc
cli
xor
leave
jb
rorb
or
dec
scas
mov
mov
rorl
xchg
adc
enter
ds
stc
or
leave
inc
jnp
or
pop
and
add
bound
jnp
jge
xchg
pop
inc
cmp
movsl
mov
dec
add
scas
das
repz
xor
rcrb
mov
ja
out
mov
js
adc
sbb
dec
cmp
rcll
inc
mov
stc
out
dec
dec
test
clc
fcomi
stos
sbb
xor
inc
data16
inc
insb
cmpsl
outsb
jecxz
popf
stc
js
and
test
andb
adc
inc
scas
popa
xchg
cltd
lock
cmp
cmp
push
aam
arpl
xor
mov
push
jmp
adc
fidivs
dec
lock
sbb
mov
jp
lea
xchg
fldl
out
pop
shll
push
push
lahf
pop
mov
and
add
dec
movsl
lahf
jp
shr
testb
and
jo
je
aas
out
in
jp
dec
ljmp
repz
lea
insl
daa
mov
sub
int3
in
pop
adc
mov
mov
mov
mov
mov
bound
and
add
push
inc
or
cli
das
push
ret
lcall
ret
inc
repnz
daa
arpl
mov
mov
pop
inc
out
out
or
adcl
ret
mov
rorl
mov
nop
iret
test
xchg
inc
dec
cmp
pop
repz
sub
int
loop
in
shll
pop
ja
cmp
dec
mov
shrb
sub
ljmp
cld
pop
and
test
inc
cwtl
xor
or
mov
fistpll
pop
sbb
aas
movsl
fnstenv
incb
orb
aaa
lock
jp
add
pop
mov
aas
lods
jmp
lea
mov
lods
mov
stc
jge
cmp
test
addl
icebp
insb
lcall
mov
rorl
mov
jecxz
movl
jge
cld
aaa
inc
add
mov
ret
cmpl
fcoms
dec
mov
pop
pop
or
jge
dec
dec
jo
je
outsb
xchg
pop
mov
sub
adc
and
fadds
into
push
aam
ljmp
scas
dec
mov
lcall
xchg
outsb
push
rcrl
jbe
dec
adc
mov
insl
xchg
cld
jne
mov
fs
sar
aaa
mov
inc
adc
dec
sbb
rol
xchg
jnp
jb
push
stc
mov
adc
rclb
xchg
xchg
insb
dec
testb
mov
cwtl
jbe
mov
pop
insl
and
cmp
jle
ljmp
sahf
shll
popw
mov
mov
mov
inc
andl
xchg
movsb
call
sbb
push
rol
rcl
mov
and
sbb
ds
push
stos
push
xchg
stos
sub
jg
push
mov
mov
shrl
pusha
pop
add
or
and
jns
popf
mov
lcall
xlat
rorl
outsb
mulb
push
and
loop
adc
adc
fmull
inc
insb
inc
add
lods
adc
test
mov
adcl
adcb
mov
gs
shrb
sbb
pop
fadd
pushf
xor
xchg
jns
and
jecxz
insl
sbb
popa
rolb
mov
push
shll
inc
mov
nop
enter
pop
out
pop
mov
push
xlat
jae
mov
std
adc
pop
notl
les
out
mov
daa
cmpsb
imul
adc
cmp
mov
xor
lcall
lret
mov
out
mov
sbbb
inc
push
inc
dec
aaa
xor
mov
or
fmuls
sbb
insb
mov
and
xchg
inc
sarl
dec
loope
addr16
jle
or
in
adc
sub
mov
jo
inc
negb
imul
inc
mov
mov
mov
lretw
cmp
dec
enter
or
mov
out
jbe
sbb
jecxz
mov
xchg
dec
loop
xchg
cmpsl
xor
outsb
or
inc
xchg
ret
out
mov
push
aad
imul
jnp
add
jg
and
insb
sbb
int3
loopne
shl
pop
mov
adc
xor
jecxz
fsubrl
mov
jae
mov
out
mov
xchg
into
in
mov
lahf
gs
imul
mov
ficoml
stos
xor
mov
cmpsl
fisubrs
adc
in
sahf
mov
pop
xchg
cld
inc
repz
or
inc
fisubrl
call
outsl
jbe
fcompl
pop
mov
mov
jo
test
sbbl
enter
outsl
xchg
in
lret
test
mov
les
enter
call
ljmp
mov
das
or
sbb
add
test
and
stc
xchg
sahf
push
jb
pop
xchg
add
in
loopne
push
jnp
lcall
and
js
movsl
mov
dec
stc
mov
sub
icebp
hlt
cmp
mov
add
cmp
sbb
inc
out
inc
cmp
mov
sub
add
xor
xchg
dec
inc
sahf
sub
or
pop
mov
xchg
adcb
mov
mov
sbb
or
fidivrl
mov
sbb
mov
push
aad
xchg
dec
sbb
nop
cmpsl
je
dec
sub
ret
push
lds
ljmp
cmp
and
daa
lods
andb
xchg
loopne
popl
mov
pop
mov
rorl
jo
imul
loope
pop
inc
pop
inc
fcomip
sub
mov
jns
lret
test
in
das
in
filds
fisubs
lcall
fidivrs
nop
mov
mov
mov
mov
dec
dec
sub
rcl
fimull
sbb
adc
mov
xor
cmpsl
xchg
jle
shrb
xchg
and
cmp
push
xor
inc
mov
mov
and
sbb
xchg
inc
subl
dec
cmpsl
mov
lret
mov
or
cwtl
movsb
push
out
inc
dec
mov
es
cmpsl
das
sti
pop
pop
mov
aaa
fisttpl
repz
jmp
pop
rcl
je
add
xor
jb
dec
fsubrs
sub
xchg
dec
les
pop
lret
fwait
shll
inc
mov
xchg
mov
jg
aad
sub
mov
mov
inc
sbbb
adc
or
iret
jnp
nop
push
dec
mov
cmp
inc
jl
enter
or
xchg
sti
sub
aaa
mov
orb
dec
cmp
setbe
sbb
fisttps
add
sub
repnz
xlat
inc
lds
push
sub
and
cli
or
subb
add
lret
and
adcl
gs
into
xor
push
stos
ss
fldt
cmovo
daa
add
mov
mov
adc
rclb
mov
lods
mov
test
aam
mov
push
imul
cli
imul
lods
shll
push
push
into
jnp
test
cmpsb
cld
divb
sarb
ficoms
shll
test
int
out
pop
adc
pop
cmp
and
inc
sub
popf
push
sbb
das
mov
mov
daa
mov
test
cmp
out
push
xor
pop
mov
pop
pop
inc
inc
out
ror
mov
adc
pop
sti
fisubs
loopne
stc
xchg
jnp
inc
in
push
sub
mov
aas
cmp
sub
cmp
push
bound
cmp
push
aas
insl
aas
cmp
adc
push
dec
and
bound
lcall
or
mov
cmp
ds
mov
push
and
mov
in
nop
xlat
iret
sbb
into
cmpsl
sbb
es
add
push
lcall
scas
popl
jae
mov
scas
inc
nop
inc
rcll
push
loop
fcmovnb
stos
int3
push
adc
pop
or
into
xchg
sub
sahf
aad
dec
shlb
jg
cmpb
lods
mov
xchg
xlat
popf
mov
xchg
rclb
mov
stos
nop
stc
fsub
mov
cmp
lea
or
jge
js
dec
shr
sub
imul
into
pop
dec
add
add
and
dec
stos
repnz
push
push
adc
popa
cltd
inc
fistl
cld
shr
mov
outsw
aaa
push
in
adc
mov
roll
add
sub
repz
xor
nop
mov
and
xor
setno
pop
sbb
cwtl
pop
mov
jg
and
inc
ja
mov
push
int
or
and
stos
out
xor
jp
shlb
and
pusha
inc
mov
push
mov
lcall
stc
sub
xor
movsl
out
inc
xor
into
adc
jne
cmp
sarw
or
es
push
mov
xor
fidivs
inc
and
push
dec
out
and
mov
inc
daa
mov
test
jmp
xchg
mov
fsubl
bound
cli
addr16
in
push
sbb
cs
add
hlt
push
pop
push
cmp
cld
lahf
mov
mov
mulb
mov
insb
xchg
test
add
int
pop
fs
pop
mov
xor
add
dec
or
push
stos
popf
imul
into
lods
fnsave
cmp
mov
leave
scas
sarl
push
pop
jecxz
mov
pusha
adc
xor
and
sbb
xchg
pusha
sub
fldt
popl
xchg
push
stos
xchg
xor
dec
xchg
test
cmovo
mov
and
stos
add
movsl
sti
js
jge
mov
push
xor
fdivrs
xor
ljmp
sub
shrb
xor
mov
outsb
xor
mov
pop
fnsave
add
addb
dec
roll
jae
sahf
ljmp
sbb
fwait
jns
int3
mov
cmp
ss
push
in
mov
sbb
fisubl
popf
fdivl
stos
popf
pop
xchg
inc
lea
lods
sbb
mov
or
xor
lock
xchg
adc
ret
ljmp
pop
ljmp
and
out
test
adc
cmp
inc
fcomi
inc
dec
imul
or
adc
ficoml
insl
call
inc
sub
ret
push
mov
lds
lcall
lret
nop
out
mov
bound
dec
mov
jo
lret
push
lock
rolb
mov
int
pop
dec
dec
hlt
sub
rcrb
xchg
and
sbb
jle
sarb
xchg
lret
bound
pop
cld
dec
rcll
aam
and
add
mov
outsb
nop
ds
popf
ss
mov
lret
push
shrb
enter
mov
mov
adc
xchg
xchg
add
mov
fnsave
arpl
out
mov
jae
cmpsl
mov
in
out
sbb
shrl
jmp
cmp
or
xor
pusha
mov
cmp
mov
stos
enter
jnp
dec
mov
arpl
xchg
mov
test
inc
sti
imulb
adc
inc
es
aam
scas
inc
xorb
ljmp
lea
out
push
fists
scas
cld
inc
xchg
into
push
mov
xchg
call
add
cmp
in
mov
adc
mov
rdtsc
push
insl
adc
inc
adc
mov
jle
dec
jmp
cwtl
jle
adc
int
mov
cld
cmp
das
dec
mov
jae
cmpsb
push
jg
inc
add
adc
dec
and
jns
lret
xchg
sub
aaa
rcrb
outsl
cmp
sbb
out
icebp
dec
adc
pushf
push
incb
repnz
ficompl
jb
enter
push
xchg
loopne
xchg
sub
mov
pop
jb
mov
add
mov
mov
push
adc
rcl
loopne
int3
fs
lcall
jmp
dec
jno
dec
xchg
xlat
mov
dec
ja
push
das
xchg
cld
dec
repz
xchg
mov
das
loope
mov
clc
dec
adc
inc
mov
or
pop
ds
mov
movlps
mov
int
aaa
hlt
insl
mov
into
cwtl
sbb
clc
cltd
xchg
popa
sbb
pusha
jg
mov
mov
sub
pop
xchg
in
inc
scas
push
stos
cmp
loopne
out
repz
fmul
lock
mov
dec
inc
jno
xchg
outsl
ret
xchg
xchg
es
xchg
and
and
sub
jne
insl
das
out
jo
outsl
mov
dec
sub
mov
push
xor
insl
xor
push
add
jg
xor
jne
or
rcrl
stos
test
push
pop
xchg
sub
pop
popf
dec
sub
out
jle
jns
xchg
push
out
adc
cs
nop
ss
cmp
xor
mov
mov
scas
ds
jg
popa
xchg
lods
pop
jp
lret
inc
leave
pop
push
out
rorl
fldl
inc
popa
loopne
lods
jecxz
mov
imul
test
inc
or
dec
repnz
ja
in
jg
sbb
and
filds
push
out
ss
ja
lea
outsl
inc
test
out
orb
xchg
dec
jb
cmpsb
add
scas
inc
call
ja
and
dec
js
dec
jbe
test
ret
ljmp
lcall
addb
dec
sar
inc
mov
or
packsswb
add
mov
icebp
xchg
fdiv
stos
shrl
in
out
aaa
push
ret
imul
jns
lock
or
and
ljmp
sbb
testb
aas
pop
xorb
cltd
lock
add
call
adc
pop
inc
stos
push
dec
mov
es
in
fiaddl
fsubs
push
std
mov
aam
dec
xorb
inc
outsl
push
lods
scas
adc
jbe
xchg
dec
adc
jno
or
notb
insl
and
xor
pop
cmp
mov
test
cmpsl
push
repnz
jns
mov
adc
les
sarb
movl
xchg
fsubl
sbb
inc
cmp
bound
sub
mov
dec
enter
adc
inc
out
pop
xchg
out
mov
xor
dec
enter
sbb
outsb
stos
xor
sarl
aaa
or
adc
js
fxch
mov
cmp
add
dec
inc
push
xchg
jns
stos
mov
in
lcall
adc
enter
out
lock
loopne
movsl
lahf
dec
nopl
add
cmp
mov
adcl
pop
jns
mov
stos
cmp
mov
xor
pushl
push
es
data16
arpl
inc
ret
adc
inc
sti
dec
pop
dec
push
repz
sub
ffree
xchg
cmp
mov
adc
scas
push
pop
rcrl
jecxz
outsb
sahf
add
inc
xchg
inc
int3
call
fdivrl
and
rolb
jge
dec
adc
mov
sarl
cmp
mov
mov
ret
repnz
jb
loope
stos
repnz
push
xchg
add
xor
push
rorb
pushf
sbb
icebp
cs
adc
mov
add
out
in
fstpl
sarb
inc
shrb
push
sub
dec
or
loop
in
sub
es
mov
or
adc
jns
out
lret
xor
pop
in
into
pop
mov
add
rorb
cmp
push
adc
clc
hlt
xor
and
push
into
xchg
xchg
mov
mov
lock
and
sbb
mov
sub
xorl
jg
sbb
push
call
push
ret
jg
cmp
out
and
xchg
lahf
cmp
shll
mov
lods
jg
pop
cmp
jnp
dec
fcompl
shrb
add
adcl
mov
aam
inc
ret
inc
cmp
cld
inc
cmp
int3
xlat
popl
adcb
cmp
mov
test
stc
pop
xor
fucomp
jne
xlat
stos
push
mov
push
dec
scas
sub
lcall
outsl
sbb
add
in
rol
xchg
in
insl
xchg
adc
jbe
out
andl
fldenv
rorb
adc
data16
scas
int3
sub
mov
mov
popa
adc
out
mov
pop
sub
dec
dec
lock
mov
xchg
pop
fs
orl
stc
mov
icebp
icebp
lcall
lock
adc
rclb
insb
adc
popf
popa
mov
mov
inc
lcall
push
xchg
cmp
push
or
pusha
and
fwait
icebp
jo
or
popf
pop
in
nop
test
push
notb
inc
or
jg
mov
pop
jg
out
cli
and
jge
aad
fsubl
push
test
inc
test
lcall
pop
add
pop
mov
xor
xchg
sub
subb
jge
sub
adc
stos
mov
push
xor
add
out
sbb
sbb
outsl
cmc
and
mov
jno
xchg
call
mov
mov
and
fisttpl
aad
cmc
clc
xchg
mov
andb
xor
clc
dec
and
lock
jecxz
repnz
push
fidivs
jno
xchg
jne
or
pusha
das
jnp
push
sub
pushf
or
fistps
mov
in
add
enter
or
pop
stos
sbb
outsb
lahf
mov
dec
jnp
or
popl
inc
loop
xchg
in
out
lods
inc
outsb
jmp
dec
add
fimuls
mov
xchg
adc
dec
fadd
inc
jle
out
fwait
inc
popa
std
xchg
mov
inc
aaa
jp
xor
pusha
xor
push
jmp
aas
xchg
hlt
std
mov
pop
arpl
mov
sahf
sbb
lods
ret
fcoml
sub
jno
xchg
aad
mov
pop
push
lret
cmovle
das
loop
or
or
dec
jno
call
dec
mov
pop
lock
jnp
sbb
cmp
in
or
pop
mov
out
mov
call
xor
mov
testb
xor
pop
inc
sub
mov
js
sub
xchg
and
inc
fldl
push
xchg
fdivs
jge
pop
pusha
adc
mov
rol
popf
jg
int
mov
or
out
xor
mov
mov
cs
rolb
add
aas
cmp
pop
mov
iret
mov
pusha
fiadds
sbb
push
adc
jb
jne
addr16
jge
sbb
adcb
jb
xchg
mov
cmpsb
out
and
or
pop
aaa
and
pop
fstl
out
int3
mov
gs
nop
sbb
in
or
stc
outsb
adc
xchg
jno
in
pop
xchg
jle
inc
jo
daa
xorb
adc
sti
xor
jl
sbb
sub
or
aas
adc
leave
andl
mov
inc
mov
jp
mov
cmp
or
movsb
in
xor
xchg
push
mov
scas
adc
movsl
adc
mov
aas
xor
mov
nop
dec
stos
out
int3
inc
loopne
adc
or
jae
lods
adc
lods
dec
ja
xchg
sub
scas
sub
mov
add
mov
xchg
xchg
jg
push
mov
mov
in
movsl
or
cmp
in
in
push
inc
out
jbe
cwtl
mov
in
je
fucomi
packssdw
xchg
imul
adc
movsl
stos
clc
data16
mov
and
orb
add
outsb
je
rcrb
dec
xchg
sbb
pop
testb
push
and
mov
outsb
push
and
sbb
jae
ja
push
xor
aad
cmp
mov
fnstsw
adc
add
inc
lock
push
ds
ds
jp
cmp
push
sbb
insl
loopne
or
mov
lahf
push
push
pop
in
leave
pop
dec
inc
lods
jecxz
mov
mov
loope
mov
test
and
cs
xchg
int
adc
sbb
pop
mov
pusha
fisttps
cltd
repnz
shrl
push
xchg
mov
mov
and
inc
mov
arpl
fnsave
add
addr16
call
fdivrl
insb
and
mov
adc
scas
or
sub
add
sti
out
les
mov
jns
sbb
jle
jns
xchg
add
test
push
les
addr16
lea
lcall
in
and
xor
in
out
push
pop
in
test
pop
jmp
cmp
inc
cmpsb
test
popa
pop
pop
ror
push
sbb
ss
add
sbb
arpl
xchg
adc
pusha
pusha
lock
jno
sub
pop
shrl
xor
xchg
lods
sbb
int
mov
insl
rcll
shll
mov
fsubl
xchg
dec
xchg
mov
mov
xchg
adc
push
xor
xor
mov
ljmp
out
bound
into
adc
in
or
rorl
dec
push
adc
pop
cmp
mov
mov
and
data16
ds
popl
inc
mov
push
scas
and
jg
or
xchg
or
jo
push
insl
cmp
ret
ss
sbb
push
pop
enter
jg
aas
sahf
xor
sub
iret
shr
cmp
cmp
cmpsb
ja
sub
push
add
pop
ss
popa
lcall
hlt
ljmp
popf
or
mov
jo,pn
ret
jmp
ja
and
cmpsl
sub
insl
inc
rcrl
pop
xchg
sahf
sub
push
push
enter
adc
jg
ret
js
push
lods
in
leave
sarb
scas
icebp
mov
jno
sti
pop
mov
fcompl
out
xor
pop
jl
outsb
fneni(8087
xor
push
pop
adcb
into
hlt
call
bound
ficompl
cmp
imul
and
pop
cltd
xchg
and
mov
shll
adc
or
mov
mov
imul
fldt
sbb
lods
lods
inc
ret
aaa
jns
cli
and
mov
mov
inc
sbb
js
push
pop
cmp
xchg
dec
ret
mov
mov
into
jecxz
mov
sbb
dec
or
push
adc
fmuls
cmp
dec
mov
jb
inc
mov
xchg
mov
adc
js
pusha
mov
mov
push
mov
xchg
or
lods
inc
mov
cmp
dec
mov
leave
std
push
inc
add
rep
nop
ss
fidivs
ret
rorl
adc
push
int
fildl
stc
cmp
xchg
xchg
decb
mov
fmull
push
aad
cmpsb
mov
push
cltd
test
cltd
test
cltd
push
dec
roll
cmp
or
out
jp
mov
popa
push
sbb
imul
dec
push
cmp
and
inc
aam
arpl
pcmpgtw
popf
mov
std
or
mov
mov
dec
fst
mov
and
bound
mov
mov
shrl
mov
inc
mov
jp,pn
add
push
mov
lods
js
sbb
in
xlat
insl
mov
jb
or
xchg
adc
out
xlat
cli
addr16
fnsave
pop
mov
sub
jg
fucomip
cmpl
and
popf
sbb
iret
inc
lds
jg
mov
xor
cmp
test
mov
test
jbe
nop
inc
ljmp
int
inc
cs
lret
inc
nop
xor
pop
mov
xor
mov
sbb
repz
ljmp
cmp
in
dec
cmp
inc
sub
mov
movsb
rol
xor
jl
ljmp
scas
mov
mov
fsts
add
nop
mov
out
adc
add
xchg
out
lock
stos
dec
pop
cs
inc
xchg
mov
nop
std
push
inc
and
mov
js
data16
repz
push
test
mov
xchg
js
sub
out
pop
mov
xchg
es
fnsave
jb
pcmpgtw
test
data16
rol
adc
fmul
jge
leave
mov
repnz
and
loopne
xor
adc
pushf
mov
mov
std
sbb
xor
jnp
adc
mov
testb
ja
rcr
inc
mov
psubq
lret
sahf
stc
pop
fisttpll
aam
pop
cmp
mov
jge
ficomps
jle
divb
pop
and
sbb
dec
insl
mov
int
mov
cld
cmp
mov
clc
jb
cld
jl
mov
pushf
mov
add
jno
mov
add
and
test
cmpsb
leave
stos
in
sbb
fsubr
pop
jp
mov
cli
jbe
stos
or
xchg
and
stc
bound
jb
push
mov
sub
mov
push
dec
adc
push
out
or
enter
cld
jno
xor
outsb
xor
bound
mov
adc
rcrb
adc
push
push
xchg
xor
lods
out
test
mov
jns
lock
dec
inc
fdivrs
sahf
mov
int
pop
pusha
or
jno
popl
imul
leave
dec
and
sub
inc
clc
cld
xchg
mov
mov
add
repnz
cltd
insb
inc
outsl
jp
push
push
sbb
mov
mov
dec
mov
imul
lcall
aad
in
xchg
leave
xchg
sarb
xor
push
rcrl
pop
push
rorl
inc
dec
ss
sub
aas
xchg
xor
int3
clc
pop
or
scas
aaa
dec
pop
jno
out
loop
mov
mov
add
pusha
test
mov
inc
cltd
cmpsl
xchg
enter
dec
in
ficoml
dec
rol
mov
mov
xchg
lock
sub
push
sbb
lret
inc
rorb
push
jnp
inc
jae
lss
sbb
push
dec
rol
btc
pop
addr16
fcoml
inc
mov
xchg
xor
fisttpll
in
push
das
jecxz
mov
xlat
add
insl
in
sahf
rcrb
mov
out
jge
xchg
push
mov
inc
test
sub
xchg
mov
ds
adc
nop
popf
call
popa
cmp
dec
imull
aaa
push
adc
mov
icebp
jl
push
adcb
movsl
mov
cs
sub
lret
push
stos
out
jb
inc
inc
test
sbb
and
or
js
lcall
call
cltd
movsl
xchg
out
and
insb
rcll
mov
pusha
dec
mov
push
pop
push
test
stos
ds
jle
pop
cwtl
jmp
nop
ret
lret
sub
cmp
xchg
pop
inc
stos
xchg
dec
dec
jo
sub
xchg
mov
clc
je
rclb
push
dec
inc
and
push
mov
mov
cmpl
push
rcll
lret
push
sub
shl
addl
push
inc
ret
cmp
jno
inc
mov
shl
push
shr
mov
or
adc
jne
ret
addb
cmp
stc
xor
inc
mov
cmpb
fisubrs
rorl
xor
mov
mov
ret
mov
adc
mull
push
mov
mov
icebp
jb
lcall
out
mov
cwtl
lahf
lock
lcall
xchg
adcb
fcoms
movsl
imul
loope
in
cli
sub
xchg
faddl
mov
lods
dec
push
aaa
sbb
nop
push
sub
adc
mov
pop
insb
ret
jo
clc
movsb
addr16
dec
xor
mov
insb
lods
mov
inc
popa
dec
mov
mov
jecxz
mov
mov
mov
inc
jmp
and
and
pop
leave
orl
jns
or
shl
dec
inc
insl
repz
lds
or
inc
mov
daa
shll
scas
cltd
cmp
in
cmp
js
cmp
or
stos
adc
cmp
aas
std
push
mov
imul
scas
or
ja
out
lcall
lahf
rorb
adc
sbb
nop
xchg
mov
inc
inc
orb
enter
mov
pop
cltd
jb
adc
aaa
arpl
jl
aaa
pop
mov
mov
add
jnp
popf
or
cmp
and
les
cs
loopne
sar
fsubrl
inc
xor
cmpsb
imul
jp
adc
xchg
std
dec
mov
cmc
fnsave
mov
xor
pop
je
push
in
fistl
sbb
lahf
hlt
cmp
scas
sub
lods
jmp
push
sbb
xchg
cmp
out
gs
dec
dec
add
jns
adc
lods
cwtl
jnp
dec
mov
xchg
mov
mov
stc
mov
mov
jg
dec
dec
mov
sbb
lock
mov
adc
cmp
stc
subb
mov
sarb
lret
push
outsb
or
mov
push
in
icebp
int
push
pop
cmp
jb
scas
xchg
outsl
pop
push
push
cmp
cmpb
int
pop
adc
adc
push
mov
push
xor
xchg
lods
std
and
pop
add
mov
loop
ror
xor
jb
outsb
call
mov
jg
dec
xor
pop
cmp
movsl
mov
dec
addr16
mov
inc
popa
mov
mov
push
mov
xlat
subb
and
and
add
insl
mov
ja
xor
xchg
cli
lcall
jge
xlat
sub
fisubl
scas
mov
dec
adc
and
sbb
addl
ja
xchg
xchg
sarb
das
or
out
jle
sbb
add
leave
sbb
ds
xor
aad
sub
mov
lcall
aad
insb
cwtl
xchg
mov
adc
push
outsb
movsb
xor
sub
or
fidivs
sti
pop
es
add
push
clc
jg
pop
sub
mov
push
roll
push
lods
xchg
jbe
jl
mov
in
nop
and
mov
cmp
pop
jg
mov
scas
push
in
and
pusha
outsl
mov
clc
hlt
stos
dec
pop
psubusw
inc
sbb
aam
xchg
pop
xchg
popa
xor
loopne
lods
push
xchg
orl
mov
jo
add
adc
pop
or
mov
nop
std
popa
inc
mov
ret
sbb
and
xor
scas
loopne
ja
inc
ss
and
mov
jmp
sahf
pop
adc
ss
ljmp
js
subl
dec
push
or
xchg
pusha
cmp
std
outsl
loop
mov
scas
sub
shll
pop
sbb
clc
out
inc
mov
and
ret
cld
bound
add
xchg
cwtl
cld
mov
cmp
push
outsl
xchg
ret
xchg
jb
sbb
adc
mov
dec
push
inc
adc
scas
shll
xor
inc
sbb
mov
and
mov
mov
and
mov
aaa
insl
iret
push
cmpsb
addr16
jae
ret
jbe
adc
mov
subl
mov
fisubrl
shrb
jp
dec
push
in
cmp
rcll
mov
cmpsb
xchg
fwait
xchg
fcompl
jg
and
pop
repz
insb
xor
inc
data16
lock
sub
cmp
jl
sar
sub
repz
sahf
mov
and
mov
mov
adc
pusha
movsb
in
sbb
inc
push
mov
push
cmpsb
pop
ret
mov
dec
clc
push
mov
fstl
lods
les
shll
movsb
xchg
punpckldq
inc
add
inc
dec
pop
dec
mov
notl
scas
and
sbb
mov
jmp
icebp
pushf
dec
jecxz
aam
push
adc
clc
cmpsl
sbb
or
divb
mov
push
xchg
push
lock
inc
add
xor
xlat
mov
aam
sub
or
orb
lods
pop
mov
xor
jge
int3
ds
in
iret
ret
pop
sahf
shlb
outsb
ds
lock
outsl
ret
inc
adc
dec
mov
xchg
mov
xchg
push
jb
xor
std
adc
push
push
andl
mov
loope
xchg
inc
hlt
and
test
test
enter
jns
and
xchg
and
push
int
and
cmp
mov
push
adc
mov
stos
cmp
cmp
pop
adc
stc
adc
sub
lods
mov
es
and
xchg
xchg
out
repz
test
add
or
sub
jns
mov
dec
sub
aad
jmp
mov
mov
sbb
ss
jge
out
cmp
dec
and
std
rcl
daa
lcall
mov
mov
add
xchg
dec
mov
adc
mov
testb
xchg
and
inc
jmp
pop
dec
in
mov
xchg
mov
or
add
sub
outsb
push
dec
push
jns
dec
fcomps
or
or
addr16
pop
push
ret
fcoml
push
sub
cmp
mov
adc
clc
jbe
loope
inc
iret
sub
mov
xchg
cvtpi2ps
cwtl
jl
stos
mov
xchg
cmpl
rolb
dec
mov
mulb
jno
and
sbb
push
iret
into
in
cli
cmpsl
pop
dec
inc
aaa
xor
xchg
push
mov
cmpsb
aas
test
cmp
cld
outsl
inc
insb
mov
sbbb
inc
hlt
dec
pop
sub
movsl
jl
mov
nop
pop
insb
mov
jecxz
and
subl
push
repnz
or
shrl
scas
pop
orb
lods
adc
ds
imul
dec
push
inc
sti
loop
xchg
insb
cmc
into
mov
gs
push
outsb
and
pop
daa
pusha
add
dec
pop
pop
iret
sbb
jle
cmp
sub
sbbb
stos
mov
xor
fistl
lea
je
adc
inc
mov
dec
stos
mov
pop
in
jle
out
rcll
bound
jne
ret
xlat
xor
pop
fbstp
out
sbb
mov
pop
psubq
cwtl
push
mov
mov
or
jbe
ljmp
adcl
sbb
jb
int
jb
jl
lea
lret
mov
enter
shlb
or
movsb
jbe
mov
xor
mov
cmp
imul
jmp
pop
jle
push
je
mov
ret
push
dec
outsb
js
jb
push
bound
imul
cmp
in
int
inc
ror
bound
cmpb
dec
fndisi(8087
rcrl
dec
mov
push
xor
pop
pop
aam
test
dec
das
and
add
jecxz
xor
mov
shl
pop
or
mov
int
pop
sbb
stos
or
loopne
inc
mov
test
pusha
sbb
jecxz
popa
adcl
xchg
rorl
sub
daa
jmp
jb
bound
adc
dec
pusha
push
std
inc
cmp
nop
dec
imulb
inc
adc
leave
out
or
inc
dec
ja
pop
movsl
adc
mov
int
std
xchg
jmp
push
xchg
sub
sub
pop
ror
inc
inc
pop
lods
lahf
stc
in
vmovaps
inc
dec
insl
pop
cmp
pop
fidivrs
adc
cmp
push
pop
inc
add
jne
and
adc
je
out
mov
ret
sbb
push
addr16
les
add
mov
push
xlat
pop
out
test
pop
xor
add
loope
mov
xor
aad
dec
adc
or
pop
mov
jmp
pop
or
sub
int
stc
jecxz
dec
push
das
push
xchg
add
mov
lods
or
dec
lds
mov
fcmovnb
sbb
cli
pop
cld
lea
xor
shrl
ret
jg
cmp
ljmp
out
or
lods
out
lods
mov
out
outsb
popf
jb
inc
int3
cmp
test
adc
cmpsl
inc
pmaxsw
cmp
shlb
sahf
pop
shlb
int
lods
in
clc
mov
lea
icebp
into
sbb
fimuls
push
adc
xlat
out
cmpsl
jmp
adc
inc
push
incb
int
cmp
add
inc
jge
stos
nop
mov
fdivl
out
add
pop
xchg
mov
xchg
icebp
xchg
aas
lea
add
lret
push
into
faddl
imul
adc
adc
fsubs
es
jns
out
push
or
dec
adc
ret
jns
adc
mov
push
pop
int
mov
sub
mov
pop
mov
nop
inc
aaa
sub
sti
ficoms
ret
divb
int
lret
roll
ret
mov
dec
sub
xor
mov
pop
mov
sub
fidivrs
push
dec
sti
pop
jmp
jnp
or
scas
xchg
rorb
mov
xor
ret
cld
mov
ret
out
jecxz
and
xchg
or
out
mov
rcll
pop
xor
dec
lods
lods
outsb
stc
arpl
or
push
mov
bound
xor
outsl
in
mov
or
push
inc
sbb
xor
mov
ror
icebp
fsubr
clc
inc
sub
rolb
mov
and
dec
shrl
ljmp
je
xor
xchg
addb
mov
leave
and
and
add
clc
adc
mov
mov
xor
xchg
sbb
push
stos
cld
add
pmaxsw
dec
cli
add
aad
xchg
xchg
jl
push
push
mov
cmp
aas
arpl
aam
test
dec
je
sar
jecxz
cs
nop
outsl
jmp
bound
adc
shrb
inc
mov
inc
stos
lock
aas
test
in
int3
pop
outsl
test
sub
ljmp
mov
sub
testl
jb
push
outsb
adc
iret
adc
mov
adc
push
xor
sbb
sbb
add
inc
fistpll
roll
orl
clc
int
mov
addr16
cmc
xchg
aas
fdivrs
dec
dec
fildl
inc
add
jmp
lods
mov
mov
addr16
lret
xor
cltd
loopne
data16
insl
mov
add
scas
js
jecxz
testb
cmp
into
imul
movsb
insl
fsubrp
add
lock
sub
pop
fdivl
adc
insb
sbb
adc
sub
cli
sub
popl
fistpl
aaa
mov
ds
das
fwait
hlt
in
cmpsl
dec
addb
inc
cmc
sbb
cmp
cltd
les
jb
outsl
push
mov
js
into
movsl
adc
lcall
in
sbb
in
add
add
jecxz
xor
pop
in
mov
xchg
xor
cmp
cwtl
sbb
mov
enter
jl
mov
clc
add
push
pop
shlb
inc
bound
popf
and
aam
pop
mov
mov
and
add
dec
nop
mov
pop
xor
stos
pop
call
jl
push
cmpsb
xor
dec
mov
test
sbb
out
mov
cmc
adc
mov
pop
mov
push
in
inc
mov
cmp
std
clc
xorb
jb
jbe
or
lcall
inc
in
pusha
cmp
xor
jno
mov
jb
lods
jmp
pop
jp
out
adc
sbb
sti
add
repnz
and
leave
sub
in
or
cmp
sahf
dec
out
test
sbb
inc
and
lahf
mov
fld
nop
sahf
mov
int
adc
dec
mov
push
icebp
and
scas
dec
icebp
aad
movsl
sub
jno
int3
andb
mov
push
mov
mov
mov
orl
or
xchg
pusha
xchg
repz
movsl
mov
nop
inc
loopne
mov
mov
je
cmp
pop
or
mov
int
daa
push
xchg
rorl
inc
inc
mov
pop
dec
mov
int3
push
lea
mov
sbb
inc
roll
add
sbb
sbb
mov
dec
int3
jne
lea
mov
and
mov
addr16
mov
cld
dec
cmpsl
push
sub
sbb
or
inc
mov
lret
scas
mov
mov
cmpsb
loop
addr16
push
dec
lea
inc
loopne
or
or
xor
sbb
push
ret
sub
pop
sbb
xchg
adc
in
rcr
push
into
and
pop
push
mov
int3
lcall
sub
rcr
dec
imul
xorb
leave
inc
cmp
jge
aas
sub
pushw
adc
rcrl
push
adc
sub
inc
dec
jno
ds
push
push
xchg
xor
mov
inc
cmpb
clc
lods
fwait
xorb
pop
cwtl
lahf
xchg
mov
add
inc
xor
xchg
loopne
sti
int
fisubrs
mov
push
lods
repnz
fdivl
pop
mov
arpl
dec
rcll
xchg
adc
je
mov
je
test
rcll
mov
push
cs
sbb
ficoms
pop
xor
pop
das
mov
or
adc
xor
add
scas
xchg
push
jecxz
fs
imul
adc
pop
lcall
aam
or
nop
xchg
sub
lret
sbb
clc
ret
test
push
lret
mov
dec
and
or
fucomp
mov
mov
ret
hlt
daa
gs
push
jno
xlat
cmpl
data16
push
fmuls
inc
and
xchg
jecxz
mov
jnp
js
scas
dec
setb
ret
cmp
adc
mov
stc
mull
xor
mov
jmp
negb
mov
xchg
outsb
push
mov
xchg
sti
addr16
in
jo
roll
int
into
lds
and
shrb
stos
cltd
mov
xor
loop
xchg
mov
inc
add
inc
and
ss
inc
mov
jle
mov
call
jno
adc
jne
imul
jns
xchg
or
ficompl
mov
test
and
fldl
fs
inc
inc
xchg
in
call
mov
sub
int3
loope
divb
divl
test
pop
cmc
pusha
incb
movsb
lods
mov
icebp
sub
aaa
jp
push
adc
adc
jecxz
push
push
adc
add
jb
xchg
mov
lcall
in
xor
jge
or
data16
xor
mov
nop
pop
cmp
shll
and
movl
sub
shll
jo
outsb
rclb
pop
mov
adc
cmp
add
jg
insb
pop
in
sub
test
daa
xlat
pop
cli
jge
mov
stos
mov
daa
stos
je
jg
mov
pop
in
out
push
mov
std
shll
pop
mov
ljmp
jg
fimull
insb
cwtl
stc
ds
push
sub
push
adc
mov
jle
and
jg
sbb
xchg
les
mov
dec
pushl
sbb
mov
lea
imul
dec
sbb
into
push
rcrb
or
or
xchg
andb
jg
adc
adc
xlat
inc
dec
mull
cs
sub
mov
movsl
cmp
test
and
adc
dec
xchg
outsb
mov
jle
cltd
filds
int
sahf
jbe
stc
jge
clc
popf
sbb
lret
popl
sub
mov
mov
inc
fmull
push
or
mov
dec
and
mov
stos
loopne
aad
movl
jp
stos
scas
adc
pop
or
lock
stc
int
mov
xor
and
lock
jle
and
mov
jnp
jns
adc
test
or
out
inc
lods
ja
dec
cs
jle
xchg
mov
or
out
cmp
and
dec
jle
add
sbb
inc
ja
inc
adc
jno
addr16
mov
sbb
mov
push
adc
jno
cmpsl
mov
cs
lahf
lods
push
sbbb
dec
dec
ja
jmp
add
inc
ret
clc
xchg
nop
sbb
dec
cmpsl
cmovo
fdivs
iret
lret
rcr
aas
mov
out
not
std
inc
mov
jns
inc
mov
jno
mov
mov
and
sbb
or
aad
inc
mov
xchg
mov
push
stc
inc
cmc
movsb
add
mov
cwtl
fcmovne
pop
orl
mov
insb
jl
push
icebp
pop
dec
stc
fcompl
cs
cwtl
xor
sub
adcl
lret
mov
inc
dec
jp
ret
pop
xchg
xchg
mov
shrl
lods
pop
mov
push
dec
xorl
ficoms
xchg
fisttpll
lahf
xor
popf
mov
add
rcrl
mov
sahf
fstpl
scas
daa
mov
imul
faddl
inc
scas
inc
adc
ds
or
pop
insl
ds
xchg
lock
and
cmpsl
and
mov
cmpsb
cmp
cmp
xchg
mov
xorl
pop
mov
jno
or
push
sbb
jmp
movl
xchg
push
pop
insb
lahf
iret
inc
mov
hlt
pop
push
and
stc
xchg
lods
inc
sbb
xchg
pop
test
scas
dec
jp
push
fisubrl
andb
xor
ljmp
fs
cmpsb
rcl
iret
into
insb
mov
cmp
pop
idivl
push
dec
mov
adc
cmpsb
testb
rcr
cmc
inc
test
mov
xchg
dec
in
jnp
mov
pop
sub
inc
mov
sub
pop
lods
mov
mov
int
xlat
xchg
stos
dec
out
ja
inc
loop
adc
mov
daa
iret
clc
inc
cvtps2pi
pop
clc
mov
adc
cwtl
xchg
mov
mov
popf
inc
mov
data16
shll
rcrb
mov
xor
rcrl
xlat
sub
dec
adc
xchg
js
or
and
arpl
jl
cld
push
jnp
int3
fadd
aaa
fucom
out
mov
push
and
push
jge
test
loop
push
and
loopw
adcb
jns
enter
mov
in
shll
pop
push
aas
stos
jle
adc
and
cmp
into
loop
jae
lret
imulb
in
lods
push
mov
mov
movsb
ljmp
fidivl
inc
lcall
fiaddl
adc
mov
sbb
xchg
xor
sbb
mov
out
push
lods
loope
inc
mov
jp
dec
sbb
popa
loopne
xchg
inc
ficoml
add
adc
inc
inc
addr16
stc
lcall
dec
repz
jecxz
inc
cmc
leave
xchg
mov
inc
sbb
in
into
rorl
mov
jmp
scas
outsb
and
cld
in
test
cld
push
cwtl
mov
clc
shrb
dec
xchg
adc
rcll
push
push
mov
or
outsb
rclb
jle
loop
in
dec
sbb
ds
xor
and
adc
add
scas
jl
ja
cmp
nop
outsb
sbb
pop
mov
jge
mov
dec
lea
xchg
scas
fidivrl
insb
cmp
mov
clc
inc
push
roll
int3
add
test
cltd
adc
shlb
xchg
jmp
pop
ljmp
outsl
push
jns
sub
mov
add
add
cltd
cmpsb
popa
xor
std
movsl
mov
jmp
in
xchg
stc
test
mov
cmp
mov
xor
dec
repz
sahf
sahf
pop
cmp
sub
shlb
or
mov
jne
cmp
mov
xor
xchg
stc
retw
loopne
xor
or
pop
jg
mov
or
lret
jg
addr16
mov
ds
cmpsl
pop
shrl
sti
cmp
adc
mov
jno
add
cmpsl
cmc
jns
jecxz
pop
addl
xor
pop
adc
loopne
rclb
sti
sbb
or
jno
pop
insb
lea
push
jbe
mov
outsl
jne
ljmp
ljmp
cli
add
pop
sub
cs
aam
push
mov
add
rorb
mov
fisubrs
shrb
insb
mov
mov
push
mov
mov
pop
nop
adc
scas
pop
popf
push
add
repnz
inc
push
mov
stos
jb
fabs
cmp
mov
add
jl
xchg
sub
xor
inc
dec
sub
mov
fidivs
jge
ret
push
in
shlb
sbbb
fildll
hlt
adc
data16
sahf
ret
popa
mov
pop
dec
je
lods
sbb
cltd
push
daa
jbe
jbe
push
sbb
ret
push
adc
int3
movb
jnp
mov
mov
inc
cmpb
and
add
fsubr
outsl
push
xchg
ret
pop
fistl
and
xor
inc
xor
int3
adc
sahf
sub
movsb
inc
lahf
enter
iret
loope
fnstcw
je,pn
adc
mov
or
inc
iret
adc
jne
mov
mov
mov
adc
or
int3
repz
int
mov
fcoml
jl
inc
inc
lds
adc
ret
adc
or
notl
or
mov
mov
test
out
rcrl
ss
ja
std
xor
mov
cmp
pop
add
rcll
mov
lods
and
ret
cmp
adc
xchg
repz
or
inc
ret
mov
hlt
ljmp
sti
jno
sbb
sbb
mov
mov
iret
xlat
jnp
lods
dec
addr16
mov
test
stos
adcb
mov
adc
rorb
popf
inc
in
mov
movsl
or
cs
fcmove
push
out
jl
xor
rorl
add
out
cmp
cs
mov
lret
test
mov
daa
subb
xchg
sbb
or
pop
mov
push
rcrl
mov
sub
mov
inc
add
in
stos
hlt
out
mov
mov
mov
or
xor
or
cld
rorl
adc
lcall
adc
stos
and
xchg
stc
xchg
imul
jp
rol
mov
and
iret
or
fidivrs
test
clc
test
outsw
repz
push
test
jb
nop
out
leave
int
sahf
lea
mov
and
or
test
ret
inc
mov
insl
movsl
sub
movsl
ja
sub
pop
call
movl
inc
std
pop
pop
dec
and
inc
inc
test
add
ret
ficoml
xor
xbegin
mov
ds
mov
push
xchg
ljmp
jmp
mov
lret
jle
mov
ficompl
aas
sbb
ficoms
iret
mov
pop
and
dec
les
and
lea
sbb
loop
movsl
outsb
cmpsb
rclb
xor
push
mov
iret
insb
sahf
test
inc
inc
mov
nop
or
jg
dec
add
jno
push
lret
outsl
popa
fcmovu
icebp
mov
testl
loope
pop
shl
hlt
in
cmp
xchg
les
and
and
repz
jbe
dec
xor
add
out
sbb
mov
mov
xchg
push
cmp
adc
inc
adc
sub
and
or
adc
add
inc
shlb
inc
les
xchg
adc
dec
dec
bnd
into
jno
test
jmp
push
push
sti
mov
popa
je
cli
dec
out
in
cld
movsl
push
mov
ret
mov
inc
mov
mov
mov
mov
in
subl
outsb
and
push
bound
pop
xor
jmp
xchg
push
movsl
ljmp
dec
shll
js
outsl
into
inc
dec
dec
test
push
inc
daa
cmp
mov
adc
mov
clc
clc
xchg
les
out
sti
xchg
mov
ret
mov
enter
dec
sub
scas
dec
test
add
sbb
cmpsl
gs
mov
push
adc
stos
fisttpl
in
lret
mov
sub
pop
inc
mov
push
pop
cmp
add
push
push
fisttpl
lods
mov
out
cmp
jl
push
jns
test
cmpl
arpl
add
lods
pop
ret
not
push
mov
mov
in
dec
and
test
mov
es
cmp
test
xlat
mov
xchg
mov
out
mov
fwait
scas
popl
mov
test
pop
fisubs
out
in
mov
iret
ss
ficompl
imul
fdivrp
and
add
aas
xor
adcl
xchg
aaa
mov
sbb
jbe
cmc
mov
push
mov
sti
dec
inc
shlb
fldcw
add
push
cli
pop
xor
lods
out
mov
cmp
nop
cs
and
xchg
or
sbb
sbb
xor
mov
pop
xor
cmp
popa
xor
mov
mov
cmp
mov
inc
or
push
add
xchg
sbbl
pusha
jecxz
and
je
mov
and
xor
fsts
dec
lahf
xchg
cwtl
cmp
xchg
pop
fsubl
imul
xor
loop
aam
add
mov
and
in
mull
jno
leave
pop
aaa
and
jns
xor
iret
jecxz
jle
jecxz
mov
mov
mov
gs
and
cmpsb
stc
adc
dec
lcall
sahf
outsl
sub
xchg
iret
test
mov
incb
popf
xchg
mov
xor
ret
inc
pushf
and
sti
movsb
xchg
cmp
lret
and
idivb
fucom
popl
ret
scas
adc
iret
outsb
in
adc
mov
mov
testb
xor
fadd
xor
lret
fs
cmp
mov
fdivrp
rclb
dec
popa
jnp
addb
xchg
add
pop
popl
mulb
out
adc
movsl
aas
jnp
jmp
lret
mov
and
xchg
add
in
pop
and
push
pop
subb
xor
inc
std
jae
incb
popf
test
out
sub
jecxz
movsl
ret
push
adc
loop
or
divb
pushf
in
pop
sar
inc
arpl
js
data16
mov
rorb
fcmovb
and
mov
jae
pop
mov
inc
xchg
sub
mov
inc
adc
fdivl
adc
hlt
mov
adc
push
push
sbb
xchg
int
fnstcw
jb
pop
mov
push
dec
movsl
pop
cmp
push
inc
cmp
pop
inc
sub
scas
xor
pop
orb
into
push
and
das
dec
fidivrs
inc
scas
add
inc
adc
or
ret
mov
lds
pop
inc
xchg
jnp
bound
sub
stc
cmp
pop
mov
sti
push
lret
test
mov
fsubrl
jle
sahf
xrelease
mov
fildl
int
xchg
adcb
or
dec
jle
xchg
sti
push
and
ret
into
push
mov
dec
push
xchg
lods
mov
xchg
lds
push
xchg
aad
pop
add
idivl
mov
xor
mov
cmp
sub
mov
loopne
mov
push
inc
and
loope
into
sub
pop
xor
aaa
or
dec
cmpb
mov
add
pusha
lods
xor
nop
ror
movsl
mov
add
cmpsl
jbe
jns
scas
inc
cmpl
lcall
xchg
sub
popf
cmp
pop
andl
dec
leave
imul
into
rcr
sub
popa
sbb
mov
popf
mov
push
and
in
pop
cmpsb
insl
and
xor
jecxz
das
push
inc
out
adc
scas
adc
lcall
jnp
mov
dec
lods
mov
xchg
mov
bound
push
pusha
pop
sbb
fidivrs
fsubp
das
lods
add
mov
cs
jb
mov
icebp
push
loop
les
cmpb
mull
mov
cltd
or
lock
enter
xor
pop
out
inc
loope
rcrl
fdivl
fldenv
add
adc
outsb
fmull
stos
dec
xchg
or
mov
cmp
out
cmpsb
inc
aam
mov
into
mov
scas
push
dec
mov
mov
push
insb
jne
mov
orb
nop
in
mov
lret
sbb
cmpxchg
les
pop
ds
sbb
pusha
mov
clc
pop
cmp
rcrl
test
leave
pop
in
cmp
mov
mov
test
cmp
or
pslld
or
push
adc
mov
clc
or
mov
std
dec
out
mov
inc
rcrl
popf
sbb
in
das
in
jae
xor
leave
inc
ret
into
movsb
sar
outsb
shrl
pusha
pop
les
outsl
test
dec
pop
imul
push
and
inc
sbb
shll
shl
jno
jbe
jle
xor
dec
rcll
dec
stc
pop
add
jo
and
pop
nop
and
mov
fwait
mov
std
sub
inc
jg
lcall
int3
scas
ss
inc
mov
adc
mov
nop
lahf
xchg
inc
or
out
push
not
dec
test
xchg
ljmp
lea
add
rorl
xor
ret
xchg
xchg
popa
and
xor
test
add
shll
inc
push
pop
dec
adcb
sub
int
je
cltd
dec
jno
out
cltd
shll
cmpb
lret
sub
data16
push
cs
mov
loope
movsl
push
roll
shrb
inc
lret
cli
lret
jecxz
and
movsb
push
mov
inc
mov
and
add
mov
or
cmp
jo
inc
std
sub
inc
and
repz
orl
addr16
push
ss
jno
stos
dec
loope
mov
jge
mov
cmp
jae
ret
mov
cmpsb
out
mov
inc
xchg
cmp
or
jmp
or
xchg
mov
push
push
pop
and
push
xor
cmp
mov
test
push
movsl
or
mov
mov
outsb
mov
sbb
dec
cmp
push
sbb
mov
lods
mov
xchg
mov
dec
lcall
sti
mov
cs
rclb
xchg
cmpsb
mov
jg
jge
xchg
ret
push
xor
stos
adc
insb
cmpsb
shlb
fidivrl
jnp
out
jle
mov
into
sub
ficompl
gs
cmpsl
mov
cmp
cld
dec
xchg
in
push
cmpsb
ja
dec
dec
ja
add
mov
aaa
jecxz
jb
mov
lret
add
pop
inc
iret
push
lret
outsl
jb
stc
out
jae
pop
sbb
js
stos
xchg
or
jb
push
sub
mov
or
push
shl
sbb
xor
adc
push
cmp
jo
mov
pop
outsb
jp
push
out
lea
insl
gs
stos
cmp
jp
push
lea
inc
sarl
mov
inc
mov
add
xchg
sahf
into
add
mov
jg
jge
movsb
cs
pop
add
sub
sbbb
aaa
lock
lret
xlat
dec
adc
push
xchg
xchg
pop
shll
xchg
mov
cwtl
dec
cld
jns
sub
jecxz
inc
sbb
adc
mov
mov
push
movsl
fsub
in
fcompl
test
lods
jg
mov
or
mov
mov
out
xor
dec
push
sar
mov
andb
lahf
aaa
pop
cmpsb
push
inc
mov
lds
push
xchg
js
pop
out
movsb
sub
cltd
mov
add
clc
lea
int
add
mov
pop
sbb
in
out
cli
or
imul
loope
jmp
in
cwtl
jbe
cmovo
fadd
int
stos
add
lds
mov
xor
lods
lock
xor
inc
or
sbb
xchg
out
xchg
les
dec
adc
or
mov
and
ss
andb
or
adc
fcomi
sbb
ja
inc
arpl
mov
mov
xor
and
adc
mov
jl
mov
cmp
or
cs
sbb
sub
and
adc
mov
cmp
jmp
in
das
adcl
out
xchg
mov
sub
fwait
push
hlt
out
test
imul
test
mov
fisubrs
stos
pop
inc
sarl
rorb
shlb
jno
jge
dec
ret
jo
fcoms
nop
mov
dec
popa
lds
adc
inc
jo
push
jg
fstps
xchg
test
adc
xchg
fldt
shll
adc
nop
add
inc
les
mov
in
dec
pop
lahf
push
adc
jle
movsl
sbb
sahf
and
inc
nop
mov
fs
lea
add
mov
inc
xor
mov
push
dec
inc
sbbb
mov
into
inc
add
sbb
gs
pop
xchg
push
int
mov
push
push
lret
cmp
pop
clc
jo
adc
test
hlt
xor
into
or
lods
add
or
stc
lea
movsl
push
shlb
mov
decb
xor
test
in
jle
push
jmp
sbb
and
das
mov
adc
cmp
dec
sub
imul
rclb
mov
movsl
shrb
or
mov
lret
sub
test
inc
jp
jno
subl
pop
pop
or
test
xor
jge
clc
mov
mov
mov
cmpsb
rclb
mov
cltd
sub
aam
jge
and
xchg
rclb
lea
pusha
inc
in
jb
ja
andl
sub
es
adcb
leave
dec
nop
test
jne
das
aam
mov
fidivl
add
sbb
jg
lea
add
add
test
rorb
push
mov
cld
gs
mov
sub
out
cmp
and
std
enter
push
test
dec
dec
rorl
nop
xchg
mov
out
push
xorl
mull
inc
or
mov
lcall
push
in
jg
sub
and
cmp
shll
pop
std
inc
xchg
cmpsl
aad
jg
mov
jmp
push
xlat
fiadds
mov
std
fstps
mov
lret
cld
push
stc
mov
and
and
call
loopne
in
call
push
shll
outsb
mov
loope
adc
mov
xchg
cli
adc
cmp
stos
adc
xchg
ret
cmp
scas
jl
fimull
inc
in
inc
sbb
int
pop
and
sub
lds
pop
mov
xor
jmp
cmp
xlat
ret
int
rol
sub
repz
or
cli
jae
pop
in
aad
push
out
xor
xor
mov
icebp
and
fisubs
es
mov
dec
insb
mov
jg
mov
jno
popf
or
push
stos
adc
push
jle
inc
jge
adc
out
or
dec
mov
mov
roll
imul
and
lahf
out
sub
inc
and
adc
push
ror
jae
xor
call
jb
adcb
inc
push
cmp
rorb
jg
jp
adc
es
cmp
jg
sbbb
jo
out
push
hlt
popf
push
call
fsubs
movb
in
or
jg
pop
and
jb
dec
push
std
dec
clc
negl
int
inc
icebp
dec
push
test
sbb
add
jle
and
or
test
mov
iret
out
in
adc
or
fdivr
inc
mov
inc
xchg
or
mov
inc
std
popa
adc
cmp
mov
fisubrl
inc
xchg
jle
cmc
repnz
or
pop
inc
ret
loopne
imul
addb
scas
leave
dec
sbb
cmc
inc
inc
sub
push
fbld
adc
jl
dec
out
out
inc
jb
rorl
rorb
mov
roll
mov
test
scas
xchg
cmpsl
call
xchg
add
lds
movsl
push
sbb
fdivs
lcall
mov
imul
xchg
cmp
stos
jp
push
jge
jne
xchg
mov
loopne
rorl
push
and
xchg
dec
lods
jecxz
mov
bound
jb
mov
or
shrb
rcrb
xchg
jle
out
push
rcll
std
mov
or
and
out
push
pop
xchg
fnstenv
into
inc
lods
sbb
jge
and
sub
cmp
into
and
orb
repnz
mov
pop
movups
lahf
push
xor
pop
idivb
lock
push
aam
stos
fisubrs
cmp
jmp
dec
gs
pop
push
stos
insl
fnstsw
adc
sbb
xor
scas
mov
aad
mov
adc
test
xchg
adc
dec
sub
cmc
mov
jp
mov
lods
dec
adc
pop
scas
adc
inc
mov
mov
leave
rol
jne
jge
movsb
jns
shll
mov
add
push
mov
dec
aam
adc
pop
inc
mov
add
neg
ds
cmp
push
jecxz
sbb
icebp
sub
jle
fwait
dec
push
jecxz
cmp
push
nop
dec
xchg
fs
shlb
popf
adc
pop
aam
xchg
outsb
int3
xor
pop
rcrl
mov
adc
lods
push
movsl
cmpsb
popf
mov
jno
pop
mov
cld
inc
cld
sub
push
xor
std
negl
loopnew
shll
faddp
inc
adc
adc
jno
mov
lock
mov
rcrl
sub
outsl
mov
jge
add
or
adc
insl
mov
mov
mov
sbb
fistl
iret
dec
jns
and
dec
xor
mov
fcomip
jns
icebp
jmp
mov
xchg
insl
stc
inc
shl
shl
pand
jb
shrb
ja
loope
sarl
mov
lods
ffree
xchg
aaa
inc
sbb
dec
cmc
xor
sub
dec
sub
mov
roll
leave
xor
sahf
push
insl
inc
jb
nop
or
pop
inc
sbb
and
mov
and
pop
push
dec
xchg
es
dec
jo
mov
in
cmc
and
rcl
pop
xchg
adc
leave
pop
xchg
ret
out
aas
ljmp
mov
or
adcb
cmp
push
inc
fstp
jmp
sar
nop
mov
ljmp
cmp
int3
mov
test
insb
jno
mov
sub
test
test
adcb
push
sub
mov
mov
xchg
lcall
in
sbb
and
xchg
sub
repnz
maskmovq
testl
stos
push
cs
jne
test
mov
imul
push
repz
inc
sbbb
addb
pop
popf
adc
add
push
pusha
inc
xor
ret
inc
popa
inc
sbb
ss
or
inc
add
jecxz
cmpsb
lcall
pop
add
mov
pop
adc
xlat
mov
mov
das
dec
push
rclb
mov
mov
fs
sbb
pop
add
dec
enter
xor
inc
sahf
lds
mov
xor
sbb
mov
mov
icebp
fwait
adc
lds
mov
dec
inc
lea
pop
lret
sbb
cmp
mov
pop
dec
loope
lods
pop
sbb
jne
or
ljmp
dec
push
cs
cmp
lcall
pop
das
fwait
jge
xchg
dec
push
loope
dec
push
pop
out
popa
enter
js
adc
cld
sbb
xor
pop
mov
and
shll
lret
pop
push
repnz
or
fldcw
inc
aaa
dec
add
es
call
push
dec
insl
push
mov
push
out
cmpsl
ss
mov
sbbb
cmp
inc
xchg
sbb
jne
std
mov
sub
test
cmpsl
loopne
xchg
jae
add
cmp
add
mov
mov
addl
gs
vmovaps
dec
push
popf
push
sbb
icebp
mov
pop
icebp
xor
movsb
dec
test
movsl
pop
out
call
movb
insb
pusha
inc
mov
movsb
dec
repz
test
xor
mov
or
xchg
or
mov
or
jae
loopne
mov
mov
add
fldl
lods
mov
push
aam
inc
push
fisubrl
push
xlat
rorb
decb
pop
lret
subb
roll
jp
jecxz
sbb
sti
pop
ljmp
fnstsw
ljmp
loope
mov
icebp
inc
jne
adc
lea
jg
cmpb
push
pop
or
cmp
sti
push
test
ja
es
vmwrite
lods
jno
repnz
push
insb
xor
inc
cmp
push
sbbl
sbbl
mov
addr16
xor
push
adc
mov
add
adc
insl
movsl
xchg
outsb
lret
mov
jo
jns
or
push
mov
lret
or
dec
mov
sub
mov
and
push
int3
sub
shl
xlat
adc
leave
fadds
arpl
in
jge
mov
aas
shlb
pop
rorl
rorl
adc
jg
jl
add
or
les
dec
dec
mov
fmulp
ja
pop
sbb
mov
into
pop
int3
push
lret
xchg
xlat
lcall
xor
jecxz
loop
adc
repz
jle
iret
xchg
jbe
lret
adc
jp
push
loop
rcrl
mov
push
popf
das
in
repz
outsl
in
imul
stos
insl
mov
lock
dec
jl
repz
pop
jmp
mov
popa
addb
sbb
repnz
notb
lahf
mov
dec
in
dec
mov
jg
push
inc
sub
insl
sbb
mov
mov
xchg
sbb
xchg
ds
mov
fbstp
ret
or
sbb
fcoms
test
jae
jge
outsb
insl
or
in
add
je
and
adc
insl
mov
es
fisubrs
lret
mov
push
mov
lea
xlat
cmp
jecxz
sarl
mov
jge
xchg
adc
add
fcmovb
sarb
jns
dec
mov
jmp
mov
nop
xor
sub
pop
shr
fwait
mov
icebp
rorl
int
adc
push
mov
divl
and
cmp
sbb
pop
mov
push
fidivrs
scas
push
dec
xchg
or
leave
stos
lcall
andl
mov
jp
jge
dec
pop
movsl
ss
pop
fidivs
stos
sbbb
or
sub
movsl
sbb
sbb
push
fistl
gs
in
jle
mov
adc
popa
test
add
mov
mov
out
mov
jb
mulb
mov
sbb
into
push
pop
mov
bound
mov
add
sahf
adc
faddl
ret
insb
stos
test
into
nop
mov
ja
mov
in
push
shrb
fbstp
fptan
add
scas
into
mov
add
sbb
stos
dec
out
mov
pusha
sub
movsl
cwtl
inc
mov
test
arpl
inc
inc
repnz
push
lods
lds
sti
sbb
mov
mov
aas
xchg
inc
decl
into
mov
mov
jg
subl
negb
push
inc
aam
pop
dec
out
xchg
ret
add
dec
arpl
cltd
inc
jle
mov
cld
dec
xchg
mov
dec
inc
outsb
jg
or
test
jbe
mov
push
mov
mov
xchg
fldl
loope
lea
inc
addb
into
push
mov
call
sub
xor
imul
into
and
imul
push
std
push
cmp
test
xor
adc
stc
add
loope
stos
out
fwait
rol
adc
push
imul
rorb
dec
mov
or
neg
out
adc
nop
pop
fiaddl
in
or
push
pusha
out
mov
popf
inc
and
or
mov
push
inc
inc
aaa
bound
adc
sbb
push
popf
pop
xchg
orb
sub
mov
jne
push
or
dec
mov
cmp
sub
mov
icebp
pop
aaa
xchg
ds
push
inc
aad
arpl
faddl
lea
cmp
lret
mov
lret
ret
popa
shll
xbegin
in
call
dec
jg
mov
cmpsb
dec
xor
jne
push
cmp
push
dec
lcall
cmovl
xor
mov
jge
popa
addr16
jbe
rcl
push
cs
push
xlat
mov
mov
cmp
inc
jle
fwait
jne
arpl
add
lret
cs
mov
in
dec
dec
or
stos
sub
or
test
inc
inc
sbb
xor
xchg
sbb
jno
leave
mov
lret
int3
push
bound
cmp
inc
mov
mov
pop
insb
push
dec
sbb
xchg
pop
xchg
ljmp
dec
js
push
iret
and
into
push
lcall
or
xchg
or
inc
insb
icebp
mov
repnz
loopne
fistl
sbb
jae
clc
cmp
xlat
push
jmp
mov
adc
cld
jo
hlt
mov
mov
lods
push
sub
xchg
ret
cld
inc
pusha
jecxz
aam
cs
mov
sbb
shrb
stos
mov
andl
inc
jle
fsub
or
add
std
mov
sbb
int
fimull
cmpb
popl
adc
stc
sub
and
push
mov
mov
rclb
cltd
sbb
inc
cmpsb
lods
cld
in
dec
push
jle
rcll
and
cmp
push
pop
test
repz
insb
fldt
push
inc
add
add
xchg
mov
scas
push
shl
dec
xor
inc
and
pop
scas
sbb
pop
ret
add
ljmp
repnz
add
dec
push
cld
test
xlat
mov
mov
shlb
cmp
jo
adc
dec
icebp
nop
or
add
rcr
iret
fimull
sti
fsubrp
jo
stos
push
dec
ret
xor
push
sahf
mov
pop
or
insl
sub
mov
adc
popa
jg
jmp
ret
repz
xor
out
inc
insl
mov
outsl
into
stos
push
inc
repz
push
lret
push
pop
ret
jp
jecxz
je
xchg
push
fidivl
hlt
in
add
insb
adc
push
fucomp
sub
and
cltd
mov
gs
jno
pop
andb
cmp
sbb
js
dec
or
test
xchg
cs
enter
std
adc
cwtl
push
in
push
stos
das
rorb
lea
jle
adc
out
mov
pop
cmp
jb
cmovge
pop
popf
xchg
int
mov
push
out
loopne
shlb
xor
lds
dec
int
daa
push
pusha
lfs
jbe
idiv
shll
pop
test
into
and
pop
push
adc
add
cmpsb
lea
add
dec
xchg
fmul
jl
fiaddl
dec
test
push
push
rorl
aam
stc
pop
shlb
sub
mov
adc
sti
pop
cmp
push
mov
pop
nop
pop
mov
inc
mov
test
dec
cmp
into
jg
xchg
popf
inc
add
and
imull
ljmp
sar
subl
insb
adc
pop
ret
add
push
sub
int
mov
mov
push
mov
rolb
jle
push
jecxz
dec
sti
subl
mov
push
push
push
mov
push
shl
fnsave
dec
in
fcompl
jns
sub
hlt
pusha
cmp
pop
repz
cmp
out
dec
test
jbe
xor
cld
outsb
lods
pop
mov
fwait
xchg
cmp
add
or
outsl
push
test
lods
mov
inc
mov
movsbl
cltd
jbe
out
adc
stc
jge
cmp
mov
sbb
cmp
sub
dec
loope
inc
xchg
dec
and
mov
test
jp
loopne
xor
nop
sbb
iret
in
push
dec
adcl
ds
xchg
pop
mov
movsl
rclb
pop
lea
nop
lds
roll
out
mov
scas
pop
jbe
subb
in
cmova
sbb
mov
cmp
lea
test
shll
sbb
jo
into
popf
sub
cmpsb
add
xchg
jle
push
lret
dec
lret
test
je
int3
sub
outsl
rep
xchg
iret
lds
mov
cmpb
test
push
jo
push
pinsrw
adc
mov
movsb
shll
test
rorb
inc
clc
inc
fldt
pop
push
movsb
mov
inc
leave
fisubrl
xchg
sbb
or
or
xchg
sub
aas
pop
dec
test
outsl
dec
ds
jnp
cmp
mov
bnd
imul
jns
mov
cmpsb
popf
shll
mov
ret
rol
xor
out
shlb
bound
inc
and
jbe
jge
data16
das
ret
mov
inc
mov
mov
pop
in
fistl
pusha
jnp
cmp
mov
push
jb
inc
cltd
inc
out
push
xor
movsb
pop
decb
inc
cmp
jp
std
dec
mov
dec
nop
rclb
cmp
adc
or
mov
test
sbb
xor
out
fists
cwtl
pop
insb
push
pop
sbb
ret
fcoml
xor
jge
cmpsb
inc
aam
js
lcall
fs
in
xchg
sub
mov
adc
pop
xchg
fcomip
popa
cmp
inc
movzwl
call
repz
push
xor
mov
adc
push
mov
sarl
xchg
movsb
icebp
popa
imul
stos
mov
clc
mov
mov
jne
incl
inc
out
gs
push
stos
lret
je
jecxz
gs
jnp
popl
add
scas
das
cwtl
lea
pop
testl
pop
jge
pop
iret
sub
movsb
cmp
pop
push
addb
jle
pop
inc
fnsave
pop
push
gs
adc
xor
jno
addr16
loopne
into
out
add
ficoms
push
dec
mov
std
adc
leave
sbb
or
xchg
jecxz
sub
push
in
call
and
inc
add
or
lods
ret
lret
les
dec
rclb
loope
xchg
call
adc
push
movsb
shlb
add
daa
xchg
jns
rorl
es
popf
push
sub
cmp
push
jg
push
cli
cmpsl
sub
cmp
dec
pop
push
pop
mov
jmp
jecxz
mov
cmp
das
sar
mov
enter
mov
sub
push
testl
jg
xchg
push
int
pop
pop
stc
adc
push
jg
popa
ja
and
addb
sbb
mov
cmp
or
xchg
shl
addb
in
loope
cld
adcl
cmp
mov
sub
or
fimull
fidivs
aam
and
imul
out
and
sahf
addb
mov
imul
imul
jle
mov
and
cli
push
sub
fsub
cli
dec
sbb
sti
pop
mov
scas
iret
scas
sbb
jbe
and
mov
scas
inc
subl
mov
je
pop
test
mov
outsb
mov
int
cld
mov
and
rcrb
jge
xorb
gs
jp
fsubr
sub
or
ljmp
dec
xorb
mov
out
popa
stc
adc
or
test
dec
adc
mov
add
mov
dec
lock
aam
imul
push
movsb
push
mov
mov
push
adc
in
jmp
mov
sub
inc
lods
pop
stos
jno
jge
fisttps
shlb
push
testl
fiadds
xor
sbb
insl
xchg
push
xchg
and
mov
aaa
dec
xchg
bound
push
hlt
test
adc
push
xor
stos
adc
js
stos
vpavgb
pusha
jp
test
stos
inc
imul
hlt
mov
jno
xchg
ljmp
mov
negb
testb
mov
lods
push
mov
fisubrl
shll
out
fidivs
fwait
aam
mov
lcall
mov
insl
cmp
pop
aad
outsb
mov
pcmpeqb
sbb
adc
repz
adc
out
adc
leave
addr16
imul
sbb
rdtsc
test
into
in
inc
dec
aaa
fimuls
jbe
insl
adc
and
mov
stc
mov
mov
mov
frstor
pop
fdivrs
push
pop
inc
cmp
xor
sbb
aam
dec
stos
sti
lret
inc
scas
mov
mov
das
bnd
pop
pusha
pop
dec
lcall
mov
add
inc
push
and
enter
out
mov
dec
and
ret
mov
push
pop
subb
lock
fsubrp
sub
push
stc
in
dec
iret
fsubs
lods
fiadds
pop
mov
movsl
dec
jnp
out
adcl
jno
mov
data16
fsubrp
cs
sbb
movsl
ficomps
cmp
inc
adc
xchg
jno
mov
sahf
dec
and
mov
mov
adc
xor
mov
sub
mov
enter
cmp
or
les
mov
gs
dec
test
mov
xchg
cmp
int3
mov
inc
add
jae
mov
pop
xchg
xor
add
jp
pop
mov
push
inc
scas
cmp
mov
lret
aad
mov
push
or
xchg
pop
popl
xchg
mov
mov
mov
inc
ret
sbb
jae
out
xchg
mov
enter
inc
nop
mov
mulb
std
mov
adc
xor
stos
shll
ss
ljmp
in
pop
out
jbe
test
jle
dec
mov
jnp
sub
lock
dec
mov
inc
lret
add
mov
jecxz
shrb
xchg
shrl
sbbb
push
mov
push
pop
jg
adc
movsb
jb
outsl
sub
mov
adc
cmp
dec
push
mov
push
or
loopne
mov
sti
clc
bound
lods
lahf
fadds
xchg
mov
jns
adc
rcl
sbb
cld
add
mov
and
rorb
jp
inc
cld
scas
lret
push
mov
mov
call
mov
mov
dec
inc
xor
xlat
outsl
sbb
dec
int
iret
jns
pop
cmc
mov
pusha
jmp
jl
clc
push
dec
and
fdivrl
sub
cltd
pop
sbb
stc
cli
adc
xor
sbb
lods
pop
lret
push
mov
mov
mov
fadds
addr16
orb
xchg
mov
jg
cmp
loop
jnp
fisttps
cmp
jg
loope
mov
mov
fistps
loop
rcr
xor
rol
pop
psubq
sbb
in
mov
or
in
int
mov
mov
mulb
or
mov
clc
ret
jo
test
sarb
nop
enter
int
push
enter
mov
xor
leave
mov
mov
imul
inc
sahf
adc
adc
shlb
push
call
jne
pop
ffree
pop
cwtl
pop
es
cmpsl
addr16
faddl
stc
push
push
ret
dec
mov
shrb
test
inc
mov
or
mov
scas
popa
test
push
dec
xchg
mov
icebp
sub
pop
jp
inc
push
lret
into
jbe
jg
pop
or
scas
or
cmp
inc
movsl
and
mov
xorl
push
jns
add
test
test
dec
stos
inc
pop
xor
xchg
push
rol
ds
adc
jno
push
add
insb
xchg
xor
pop
add
mov
test
inc
mov
sbb
inc
test
mov
test
jecxz
mov
arpl
push
adcb
or
lods
sub
dec
adc
popa
mov
lods
push
int
adc
loop
inc
jb
inc
and
mov
inc
push
in
mov
xchg
mov
test
pusha
adc
and
xchg
cs
pop
pushf
cmp
push
pusha
cld
and
sarl
mov
push
test
sub
in
mov
out
inc
leave
push
xor
cmp
push
into
mov
mov
mov
or
mov
ss
adc
sbb
movsb
cmp
push
into
cmp
sub
sahf
pop
out
adc
adc
jl
pop
rorb
test
mov
gs
loope
je
aas
pop
mov
test
dec
stc
inc
sbb
dec
rclb
in
jb
lret
adc
mov
out
dec
push
inc
rolb
ja
pop
imulb
sar
out
fildll
adc
sbb
lods
mov
sarl
test
jnp
test
pop
rolb
inc
inc
jp
sub
pop
jle
addl
test
testb
cmp
pop
mov
les
imul
in
sub
push
inc
and
adc
cld
push
sbb
loopne
leave
mov
clc
inc
lods
mov
mov
inc
push
push
push
mov
outsl
cmp
push
mov
and
int
mov
xor
in
mov
or
or
jb
ss
lahf
lods
cwtl
pop
mov
xor
push
and
xchg
gs
mov
jnp
jae
lret
push
ljmp
mov
or
stc
xor
cmpsb
xor
mov
std
xor
jmp
adc
jge
enter
inc
scas
mov
in
or
clc
jmp
sub
dec
jno
push
test
int
cmp
out
movsb
cmp
jl
inc
ljmp
mov
aam
and
and
lret
lss
or
sub
pop
pop
xchg
fucomp
cmpsl
stos
xor
cld
push
out
jbe
paddusw
mov
xchg
test
in
xor
mov
rcl
icebp
rol
add
adc
adc
rcrb
dec
xor
pop
das
addr16
fstp
fcompl
jno
bound
out
icebp
jle
in
mov
jo
shrb
shll
mulb
aam
pusha
mov
gs
mov
daa
dec
push
lcall
sarl
dec
rorb
loop
ss
ja
test
mov
pop
jmp
push
and
sub
xor
inc
jno
inc
lcall
and
jb
pop
test
test
fwait
jg
pusha
xor
dec
sbb
shll
xchg
sbb
mov
cmp
popf
cmc
shrl
xor
mov
push
add
ds
insb
outsb
ja
inc
pushf
jmp
dec
je
xchg
test
rorl
rcrl
cmp
shrl
inc
lea
inc
cs
inc
xor
xchg
inc
lods
ds
shll
mov
loope
iret
shll
sub
pushf
inc
mov
jb
mov
inc
mov
mov
stos
mov
cmp
lret
sub
out
das
ror
inc
xchg
into
iret
adc
mov
inc
ret
insl
add
int3
pop
push
jge
inc
out
push
leave
mov
cmp
out
inc
mov
inc
sbb
dec
scas
popa
ss
adc
pop
stos
test
mov
or
mov
inc
out
das
push
mov
sahf
lods
push
push
sarl
outsb
lods
pop
xor
js
rorl
mov
inc
imul
ret
and
lds
and
xchg
jg
lret
xor
rcll
ret
lret
stos
cmp
or
xorl
mov
gs
xchg
es
inc
dec
mov
call
or
mov
shlb
mov
and
mov
shrb
shl
aas
jne
lock
cmpsb
jecxz
ret
mov
andl
test
inc
sbb
nop
arpl
movl
mov
mov
popf
popa
adc
sbb
jbe
in
daa
test
xor
sbb
push
pop
jbe
in
ret
test
mov
test
xchg
push
shl
or
or
pop
nop
jp
cltd
pop
dec
fdivr
callw
fildl
inc
jle
lock
mov
mov
inc
add
inc
xchg
mov
or
mov
rcll
adc
push
mov
mov
enter
rorb
out
mov
inc
rclb
iret
mov
ret
jo
push
es
mov
inc
out
imul
xor
adc
xchg
je
xchg
xchg
jle
adc
adc
mov
in
mov
push
test
cmp
inc
inc
shl
mov
ret
inc
frstor
dec
insb
lds
roll
shlb
or
imul
into
mov
data16
imul
loopne
mov
mov
sub
jns
out
stos
minps
mov
popf
and
lret
mov
jns
xor
stos
lret
clc
xchg
jp
pop
add
xchg
sbb
sbb
fstl
and
sub
jo
pop
sarl
add
fdivl
imul
push
xor
pop
jg
cld
addr16
lds
loopne
push
xchg
jge
mov
iret
jae
insb
testl
sbb
paddd
ss
in
sub
add
div
cmpsb
add
mov
and
xlat
or
insb
enter
mov
lret
pop
cmp
adc
int
cmp
jno
pop
adc
add
pop
lea
psrad
adcb
xor
mov
dec
dec
mov
pop
out
fs
dec
lock
enter
push
andb
mov
jle
stos
addb
inc
push
gs
xor
call
decl
rorl
pushf
loopne
or
pop
ja
xchg
and
inc
mov
cltd
xor
cmp
loop
add
jbe
int3
ret
pushf
sbbl
xchg
jmp
inc
inc
sub
jge
add
fldenv
xchg
scas
aad
dec
inc
sbb
or
push
test
pop
imul
loope
adc
adc
sbb
pushf
pop
mov
lods
xchg
out
test
push
pop
iret
add
out
xchg
scas
dec
jmp
cmp
add
mov
push
js
outsb
xor
inc
nop
and
and
pop
and
pop
add
test
sarb
sbb
jnp
clc
cmp
sbb
imul
mov
pop
sahf
or
add
jg
and
cmp
icebp
jns
in
adc
ret
roll
scas
outsl
fwait
test
in
push
fdivrl
and
mov
subb
push
mov
adc
jg
jns
ljmp
icebp
push
pop
mov
xchg
dec
adc
jl
jle
fcomp
rcrl
jg
mov
in
lret
push
push
add
add
cmc
negb
push
inc
jne
aaa
arpl
in
loop
jo
pop
rorb
jnp
jecxz
imul
scas
push
out
fcmovnb
and
pop
lahf
loop
adc
xchg
dec
mov
daa
xchg
mov
cmp
mov
mov
inc
push
ds
jae
fildll
add
aaa
xor
mov
dec
fnstsw
push
inc
sbb
ljmp
call
loopne
push
mov
out
add
dec
xor
lret
cmp
lea
addr16
push
aam
ds
sbb
pop
sbb
loopne
in
pop
ss
sub
in
ret
enter
xchg
lahf
dec
out
mul
jge
mov
iret
cli
and
in
pop
add
jns
sbb
cmp
pop
jnp
mov
lods
xor
mov
pop
xchg
movsb
pop
out
test
jo
jecxz
add
ss
mov
out
inc
lock
push
out
cmc
sub
loopne
bnd
sbb
inc
aaa
cltd
dec
inc
cmp
mov
inc
pop
fmuls
inc
dec
adc
mov
sbb
mov
decb
std
mov
mov
testb
lods
in
iret
leave
jle
shl
aaa
dec
or
jb
movsl
mov
mov
push
inc
mov
or
std
and
adc
sbb
cs
inc
pushf
es
mov
jge
and
test
sbb
fdivrl
push
or
add
lcall
lret
test
shrl
adc
mov
xor
pop
movb
inc
dec
out
adc
mov
pop
clc
scas
inc
cld
lea
push
lret
push
inc
ret
mov
xor
adc
jp
nop
xchg
sbb
icebp
push
insl
sub
aas
adc
fcmovb
xchg
mov
dec
pop
push
arpl
popf
jge
xor
test
inc
mov
xor
xchg
repnz
sti
dec
xchg
shll
jns
cmp
into
cld
mov
adc
aaa
data16
or
lahf
sahf
gs
lahf
ljmp
mov
test
nop
cmp
xchg
sub
iret
adc
std
mov
cltd
shlb
mov
int
pop
lock
xchg
fiaddl
addr16
mov
xchg
in
jo
push
and
push
sbb
js
int
pop
sarl
jo
pop
dec
jecxz
pop
mov
and
mov
adc
inc
xchg
xchg
add
in
clc
aam
stos
mov
into
inc
mov
add
rcl
xchg
cltd
fistl
ret
xchg
mov
test
mov
pop
adc
out
sbb
xchg
loop
sub
out
jl
flds
das
nop
adc
add
sub
xchg
dec
dec
sbb
adc
dec
lret
mov
ret
and
mov
cs
mov
xor
into
iret
aam
mov
ret
pop
xor
out
pusha
stos
inc
mov
addr16
mov
adc
fdivl
fstl
jl
cmp
fstps
lret
cmp
inc
dec
add
push
add
mov
inc
imul
shll
xor
fdivrl
sbb
scas
aas
test
and
push
xchg
sub
loopne
mov
pop
sahf
outsl
int
arpl
xor
add
xchg
repnz
roll
push
xor
mov
mov
je
insl
adc
jg
sbb
cmp
push
clc
scas
xchg
inc
cli
xchg
imul
and
das
aas
lds
scas
les
push
ljmp
fisttpl
sbb
loopne
call
aam
stos
pop
pop
add
pop
aaa
and
push
imul
in
add
sbb
jmp
fnstcw
mov
xchg
ds
inc
inc
test
jg
jg
movsl
push
mov
data16
pop
rolb
mov
daa
mov
adc
adc
add
jecxz
push
push
add
shll
jle
lock
iret
pop
add
mov
xorb
mov
sub
jno
push
repnz
jno
mov
jl
pushf
cwtl
xchg
mov
xchg
imul
xor
cmp
xchg
out
dec
inc
test
and
and
mov
fsubrl
addr16
rol
movsl
xor
and
pop
rol
and
jns
push
sub
ret
lret
into
jmp
lds
xor
inc
mov
jecxz
insb
cbtw
sub
fisubrs
roll
stc
loopne
push
cmpb
mov
and
fcoml
push
xchg
fildl
inc
mov
insb
into
fstp
sbb
pop
mov
mov
xchg
jno
inc
scas
add
inc
ret
outsb
or
test
push
push
rcl
inc
fdivrs
stc
jp
mov
sub
fistpl
das
jbe
ljmp
push
adc
lret
mov
icebp
cmpsl
nop
mov
and
negb
dec
jg
sbb
jbe
pop
xor
mov
adc
out
jg
pop
int
fsub
mov
pop
inc
pop
aam
add
pusha
not
stos
mov
repz
jne
add
inc
out
cld
inc
lods
test
xchg
arpl
inc
sbb
push
mov
xchg
pop
mov
mov
outsl
ja
stos
lret
cld
mov
outsb
notb
jg
sub
adc
or
cmp
pop
lea
inc
not
scas
popl
outsl
movsl
ds
ret
setno
xchg
mov
insl
pop
adc
stos
cwtl
insb
or
test
cmp
outsb
sub
ds
cmpsb
stos
jge
lahf
lods
sub
iret
mov
mov
jl
push
sub
mov
int
or
stos
je
mov
and
fdivrp
int
cmp
mov
les
mov
dec
xor
pop
test
rorb
inc
lahf
jmp
test
jg
imul
pusha
cld
jl
jmp
into
and
scas
das
loope
fwait
mov
sar
ljmp
shrb
inc
jns
push
insb
loope
push
fidivrl
mov
dec
sbb
push
popf
outsl
enter
jb
xchg
inc
repz
dec
jmp
lods
sbb
btr
inc
jb
cmp
shrl
dec
mov
cmp
loope
jns
sahf
mov
jbe
xchg
lret
rclb
jno
les
aas
clc
sub
stos
clc
pop
pop
or
loope
fisubl
out
cltd
cmp
xchg
dec
pop
sbb
cwtl
inc
cltd
jmp
add
jns
push
sbb
xchg
fstl
or
sub
lock
mov
xlat
pop
jp
out
int
sub
loope
mov
lds
leave
test
loopne
nopl
jge
dec
loope
mov
cmpl
nop
and
sbb
xchg
sbb
inc
pusha
fiaddl
inc
insl
inc
in
call
in
mov
outsl
mov
testb
into
mov
insl
xchg
shll
push
xchg
mov
dec
jne
jnp
inc
aas
pop
arpl
sarb
pop
outsb
aad
jnp
mov
mov
or
shrb
jnp
lahf
mov
leave
notb
inc
repz
jbe
xor
scas
cs
ljmp
inc
cmp
les
lret
call
test
cmp
mulb
mov
popa
add
or
inc
aas
int3
push
pop
clc
aaa
mov
jge
pop
inc
push
xchg
rorl
jl
inc
push
push
jb
popl
push
and
or
test
pop
ss
dec
test
ds
push
popa
bnd
lods
mov
jns
push
lods
gs
inc
cld
mov
inc
divl
stc
push
repnz
xchg
jno
sub
dec
push
stos
cmp
xor
mov
outsb
inc
mov
push
ds
ja
clc
scas
and
cmp
push
stos
push
stos
pop
xorps
mov
jne
pop
mov
fs
in
inc
out
lea
and
jns
jbe
mov
mov
xchg
es
lret
lcall
stc
and
and
cmpsb
mov
and
jbe
aaa
into
lods
popa
fstps
rcr
loope
dec
outsb
jnp
ds
inc
pop
push
lock
rcrl
popf
fxch
ljmp
stos
test
not
int
cmp
xchg
adc
ljmp
pop
push
and
sarl
jg
insl
and
pop
mov
cld
add
lcall
inc
in
iret
xor
sub
cld
xor
push
xor
cli
and
hlt
int
insb
inc
mov
jb
les
inc
lret
stos
fisubs
xchg
lar
into
dec
in
aam
into
dec
iret
push
lcall
aad
mov
sub
pop
jge
std
inc
mov
ss
fsubs
out
pop
out
xchg
lret
mov
add
cmp
sbb
push
rcll
cmpb
xor
shr
mov
or
imul
insb
push
jmp
in
prefetch
lret
out
inc
test
rolb
int3
push
int3
inc
mov
push
mov
shrl
rolb
cmp
xor
insl
testb
jns
and
pop
loop
push
imul
adc
mov
punpckhwd
mov
mov
adc
xchg
adc
mov
xchg
popa
jns
pusha
and
and
push
mov
mov
dec
sub
inc
rcrl
addb
shll
loop
lock
mov
mov
push
loopw,pt
out
in
dec
adc
popa
mov
sub
repnz
sti
push
and
sub
add
mov
push
pop
imul
in
pop
popa
and
pop
dec
push
or
fsubs
mov
jb
movsb
pop
test
mov
push
ficoml
packuswb
xor
je
or
sbb
jp
insl
testl
push
mov
mov
sub
in
adc
add
leave
nop
inc
mov
mov
and
mov
sbb
add
pop
add
cmp
jo
pop
lods
dec
inc
mov
lods
add
aad
jl
xchg
mov
pop
bound
dec
and
xor
mov
cmp
repnz
xor
pop
xor
add
aad
xchg
mov
inc
sbb
mov
mov
setge
jp
test
sahf
pop
shlb
es
pop
push
push
inc
les
sarl
leave
xchg
jns
stos
mov
mov
jo
out
xchg
ljmp
mov
imul
pusha
dec
pop
adc
adc
sub
add
arpl
xchg
arpl
dec
arpl
test
mov
repz
pop
jo
inc
adc
int
pop
cmp
aaa
and
leave
push
jp
mov
popf
leave
sub
jno
xor
adc
sub
mov
outsb
xlat
scas
shll
add
mov
sbb
add
add
dec
push
call
ds
pop
lcall
sbb
and
imul
rorb
fisttpll
pusha
xor
push
scas
js
adc
cmp
js
mov
popa
pop
cmp
out
inc
jp
test
pop
mov
push
inc
das
xchg
cld
into
xchg
aas
sbb
nop
out
les
fidivrs
add
popf
add
sub
fisttpll
jg
xor
jo
jl
xchg
or
push
rcll
push
ljmp
sub
outsb
outsl
jo
mov
out
int
xchg
popa
cmp
and
ja
jmp
cmpsl
int
addr16
mov
movsb
insl
push
push
mov
gs
lods
inc
fldl2t
pop
jle
iret
push
movsl
dec
add
jle
mov
test
cli
daa
dec
or
mov
jne
scas
into
inc
jmp
mov
aas
adc
aad
mov
mov
push
sub
pop
std
sub
fcomps
fmuls
rorl
loope
inc
push
inc
mov
in
lcall
pop
in
pop
adc
mov
and
shlb
ds
mov
sbb
flds
xor
aaa
push
imul
add
sbb
mov
in
stc
lret
jl
mov
testb
jo
mov
sbb
push
fs
mov
mov
sbb
xchg
popa
loop
sbb
shll
pop
jbe
inc
add
mov
ljmp
pop
push
pop
add
mov
sbb
lods
sarb
inc
ror
and
inc
pop
and
mov
popa
sub
inc
in
and
jbe
gs
xlat
mov
mov
cmp
mov
ja
pop
test
fsubl
cltd
add
test
bound
test
sub
pop
xchg
mov
xchg
adc
xor
jl
lods
mov
inc
rclb
cmp
jo
push
das
rcrb
les
in
push
dec
push
clc
push
jno
test
fisttpll
cmpsb
int
cmpsb
xchg
pop
outsl
sub
sti
mov
ret
push
int
push
push
pop
push
cmp
sqrtps
mull
cmc
mov
fstpt
repz
rclb
jl
xchg
rorb
jno
shlb
adc
or
pop
arpl
mov
cltd
xchg
shrb
stc
out
mov
jmp
xor
xorb
pop
xchg
add
xchg
fsubrl
xchg
cs
pop
mov
mov
jno
repnz
fldt
push
mov
das
dec
dec
fs
adc
and
mov
dec
clc
and
es
sub
into
stos
fcoml
ss
mov
mov
add
dec
aaa
mov
xchg
mov
push
icebp
adc
andl
mov
lods
sbb
xchg
add
iret
cs
out
in
insb
inc
push
jbe
popl
mov
lods
cmp
xlat
fwait
adc
adc
cltd
sub
jg
in
int
loop
sub
dec
dec
mov
mov
pusha
push
cmp
mov
mov
dec
cmp
push
inc
loopne
cwtl
pop
das
add
mov
cs
fbstp
mov
popa
into
push
mov
ljmp
roll
push
jo
and
add
xor
dec
push
cmp
dec
xchg
repnz
push
jmp
adc
cmpsl
xor
sub
jne
mul
cmp
inc
lret
scas
scas
out
mov
xor
jbe
std
add
jle
and
xor
lcall
and
jecxz
inc
adc
gs
push
pop
xchg
push
jp
out
xchg
cmp
or
fadds
cmpb
mov
dec
push
push
jp
lock
inc
and
frstor
dec
andb
jecxz
jbe
sbb
dec
sub
mov
mov
adc
ds
ficoml
and
xchg
adc
stc
lret
dec
jecxz
pop
xorb
fistpll
and
loopne
mov
push
cli
inc
dec
adc
test
in
test
test
mov
jle
lods
push
iret
cmp
dec
fsubrs
rcr
iret
pusha
xchg
or
sub
pop
inc
xchg
mov
mov
pop
test
fisubrl
fucom
sbb
adc
or
cmp
sub
xchg
or
jge
mov
fisttps
and
jmp
adc
mov
bound
lods
repnz
jne
pop
inc
push
test
sbb
roll
or
inc
inc
ffreep
sbb
push
push
adc
and
sbb
sbb
stc
xor
jmp
dec
xor
jp
push
add
mov
leave
jg
sar
insl
pop
lods
cmpsl
ljmp
inc
push
xchg
xor
in
hlt
mov
sbb
in
fildl
mov
and
out
lret
push
sub
iret
push
lcall
cmpsb
mov
adc
hlt
cmp
mov
sbb
xchg
and
outsl
icebp
jmp
pop
or
out
cld
mov
fisubrl
pop
pop
pop
sub
jb
jno
sbb
sub
sub
inc
enter
inc
stos
dec
clc
inc
cmp
jns
dec
sub
mov
ljmp
std
mov
loop
and
add
es
dec
lock
shlb
sub
orl
data16
test
pop
mov
out
int
lret
inc
fwait
aad
push
rorl
mov
loope
sahf
stos
fidivrl
dec
je
dec
xchg
lds
dec
dec
pusha
and
fsub
dec
jbe
xor
out
mov
and
rorl
xchg
push
inc
mov
add
call
jns
mov
daa
lods
iret
and
inc
enter
decb
jns
pop
imul
inc
xchg
int3
push
jecxz
int
xor
cs
mov
movq
pusha
outsl
push
pop
sbb
dec
sahf
subl
pop
gs
lret
fs
int
jg
clc
rcll
arpl
test
ss
and
test
loopne
xor
push
popf
into
sbb
mov
adc
push
push
cmp
mov
nop
out
pop
push
cmp
sub
inc
jae
lret
dec
or
pusha
hlt
sbb
xchg
xor
mov
aad
mov
mov
ljmp
add
pop
sti
dec
gs
aaa
repz
mov
lock
les
push
pop
jmp
and
adc
mov
cmp
jae
push
ds
fisubl
inc
cmpsb
imul
mov
mov
or
lea
out
data16
jg
add
sub
mov
lret
int3
cmp
out
cmp
sar
adc
adc
sub
rcl
scas
push
xchg
mov
or
push
pop
aam
divl
aam
pushf
lods
aas
push
pop
cmp
inc
and
vpsrlw
call
xchg
xor
cmpsb
lods
adc
pop
xor
cmpsl
lods
xor
inc
jg
add
mov
push
imul
push
test
lcall
icebp
cmp
push
xor
ss
xchg
fadds
and
pop
into
scas
jle
xchg
pushf
add
leave
dec
pop
call
enter
loopne
cmp
add
icebp
xchg
sti
jne
rclb
sub
pop
int3
dec
mov
and
push
mov
cmp
adc
push
outsl
pop
cs
add
jle
and
dec
test
mov
push
jmp
fiaddl
cmpsl
aad
fsubl
sti
mov
negb
xchg
int
jg
out
scas
or
lods
pusha
pop
je
cmp
ja
daa
sbbb
rcrl
or
dec
pop
mov
inc
pushf
sub
aaa
leave
ss
xor
scas
pop
imul
add
hlt
pushf
arpl
insb
lcall
ret
rorb
rcll
fdivrl
mov
cmp
pop
pushf
jecxz
push
pop
test
sbbl
sbb
jl
ss
jle
inc
sbb
into
jno
mov
jl
inc
adc
xchg
inc
inc
mov
stc
jecxz
in
movsl
jae
shll
adcl
or
fdivs
icebp
test
mov
lahf
das
jmp
push
and
pop
cmp
and
xchg
or
jb
test
adc
mov
pop
enter
sbb
sub
das
int
mov
jle
jmp
icebp
rorl
or
aaa
mov
inc
jle
lock
popf
adc
leave
jl
jb
inc
int3
cmp
cmp
jo
xchg
insb
lret
push
or
inc
repz
jecxz
movsb
sar
jg
imul
into
test
cmp
subl
xor
and
jle
fwait
std
cli
xor
adc
ret
scas
xchg
sub
jno
lds
cmp
or
shr
sbb
dec
lods
sbb
clc
je
xchg
jae
pop
ret
sub
ret
or
jae
ror
add
fcompl
xchg
jo
sar
insb
add
cmp
test
xchg
incb
cld
loop
push
in
push
ja
ljmp
pop
popf
or
leave
ds
mov
fiadds
movsl
mov
mov
std
or
cmpsl
push
xchg
ljmp
mov
mov
inc
ljmp
icebp
mov
bound
cld
add
scas
xor
jmp
inc
popa
pop
cmc
leave
scas
push
fmull
and
lss
xchg
push
test
aam
loope
adc
inc
pop
lret
scas
popf
push
adc
dec
pause
mov
cmp
inc
test
imul
leave
push
mov
pop
lret
fstps
xchg
pop
xor
jmp
mov
arpl
cmp
dec
sti
cmp
in
dec
push
push
pop
fwait
insl
jle
mov
roll
mov
outsl
sbb
or
leave
dec
lods
call
inc
dec
pop
pop
cmp
movl
mov
mov
push
mov
cld
dec
ja
inc
cmp
mov
aam
fadds
adc
sbb
aad
shll
and
pushf
lods
andl
jle
jp
xor
inc
mov
mov
popf
nop
pop
push
arpl
mov
push
test
pusha
hlt
imul
sbb
imul
popa
mov
mov
fmuls
mov
lock
mov
cmp
cmpsb
gs
ljmp
das
es
push
js
das
stos
cwtl
enter
repnz
mov
jnp
cli
pop
das
es
lock
and
mov
loope
mov
and
xchg
adc
lds
pop
xor
mov
fidivs
movsl
outsb
cwtl
mov
mov
sarl
data16
push
imul
push
mov
cmpsl
sbb
mov
and
sub
mov
mov
cwtl
pop
inc
inc
adc
sbb
pusha
mov
cmp
les
mov
andb
push
sub
pop
lock
mov
pusha
shlb
loop
mov
aas
or
or
adc
data16
xor
lods
jno
popf
sub
jo
mov
add
inc
inc
call
push
pop
inc
stc
xchg
adc
jae
push
mov
dec
mov
and
mov
int3
jbe
pop
gs
clc
insl
pop
outsl
test
mov
and
jl
rorl
sbb
orl
inc
daa
adc
xor
adc
inc
push
cmp
inc
push
jg
jecxz
mov
decb
push
dec
inc
add
mov
aad
in
dec
push
fstl
pusha
cmpsl
xchg
mov
pop
or
push
rcll
cmpsl
push
inc
mov
adc
scas
enter
xchg
xor
es
push
int
dec
push
retw
sbb
jno
lods
cs
mov
adc
cmp
or
mov
inc
adc
in
cli
add
jecxz
pop
xchg
pusha
inc
push
mov
xor
jno
mov
popf
ret
push
fdivr
adc
xor
push
and
sub
pop
xor
mov
sbb
fdivl
sti
sbb
orb
inc
push
sub
jl
int
scas
lcall
push
push
xchg
mov
mov
mov
ja
clc
jle
fwait
int
jge
add
sub
and
xchg
add
add
mov
icebp
cmp
dec
insb
imulb
sbb
mov
jno,pt
fwait
mov
inc
and
addr16
or
add
data16
out
incb
adc
dec
mov
inc
push
or
stc
jle
push
rorl
inc
scas
imul
jle
cli
pushf
mov
sarl
imul
icebp
adc
dec
mov
mov
cmc
gs
out
mov
sbb
mov
hlt
mov
or
inc
imul
xchg
mov
das
inc
mov
jge
stc
mov
cmc
test
out
cmp
movsl
ja
out
cmpsb
mov
into
int
je
sahf
jno
xor
fmull
aad
push
jo
jnp
pop
addb
mov
rcll
xchg
fwait
mov
int
lcall
pop
pop
sbb
add
popf
adc
jnp
jl
jbe
xchg
fdiv
mov
fucom
mov
scas
ds
fs
push
mov
rcrb
imul
int
leave
push
inc
or
imul
lds
out
adc
rcl
pop
icebp
mov
mov
dec
into
sub
cmpsb
xchg
fidivrs
cltd
ret
mov
ss
and
push
stos
mov
subl
imul
jne
adc
cmp
and
xchg
jns
jecxz
insl
add
sub
lea
push
stc
aam
push
jle
int3
scas
pop
pop
pop
loope
loopne
xchg
jnp
in
cmp
orl
pop
and
jne
roll
andb
bound
mov
add
repz
or
sbb
stos
adc
xor
rcr
testb
hlt
lock
fnstenv
scas
xchg
xchg
inc
pop
or
in
pop
sub
jbe
push
inc
lahf
sahf
hlt
in
mov
push
cmp
and
lret
gs
sbb
shlb
xchg
xchg
arpl
stc
push
xchg
push
sub
xor
subl
movsb
pop
cmpsb
sbb
stc
addr16
cmp
xor
dec
mov
lcall
dec
push
jne
dec
jg
cmp
ljmp
inc
xor
dec
in
dec
jnp
andb
cltd
push
xchg
dec
push
jae
push
or
sub
cmp
xchg
scas
mov
and
inc
pop
xor
jno
dec
or
mov
insl
mov
sbbl
add
inc
jge
xor
test
mov
sbb
xor
scas
add
jmp
sbb
fwait
mov
pusha
ja
fsubs
stos
insl
cli
inc
popl
xchg
dec
loope
in
inc
mov
jbe
popf
int
mov
mov
inc
icebp
sbb
pop
mov
jne
repnz
mov
sbb
out
jmp
sub
sarl
mov
cmp
lods
pop
sbb
sbb
aas
lock
xchg
add
cmpsb
push
mov
into
add
xchg
inc
push
xchg
pop
mov
bound
push
xor
js
hlt
xchg
aaa
imul
or
xchg
test
in
sub
jg
mov
sub
cmp
dec
outsl
adc
cmp
enter
lcall
dec
ret
idivb
push
mov
in
add
mov
xlat
popa
arpl
inc
loope
xchg
imul
stc
imul
add
es
mov
xchg
icebp
int
mov
jb
mov
popf
popa
xchg
mov
adc
arpl
aad
mov
mov
xor
mov
jb
and
rorb
mov
jno
rcrl
inc
cmp
leave
jno
and
leave
xor
cmp
leave
lock
loope
rclb
sarl
xchg
rol
nop
mov
jno
jo
popa
mov
xor
lcall
push
std
adcb
pop
push
sub
cmpsl
in
fnstenv
or
stos
xchg
lahf
xchg
loope
adc
mov
sub
mov
adc
movsb
push
sbb
xchg
les
test
and
sbb
out
jg
inc
push
shrb
pop
out
inc
sub
and
add
and
andb
pop
cltd
cmc
outsl
fldt
mov
sbb
push
push
data16
and
inc
jno
lods
psllw
adc
test
imul
add
adc
mov
push
sub
loope
sbb
sub
lods
mov
mov
and
mov
jo
and
push
in
jae
les
add
fiaddl
sub
jo
dec
aas
push
lcall
fcmovnu
mov
shll
fisubl
repz
xchg
shl
pushl
pop
iret
ljmp
mov
test
cld
dec
lods
push
shrl
int3
fnsave
dec
pop
push
stc
lcall
call
mov
testl
xorb
mov
push
xor
mov
arpl
cmpsl
mov
push
lea
iret
adc
je
xchg
xor
lds
adc
mov
inc
nop
pop
inc
movsb
inc
inc
mov
inc
lahf
sar
xor
xchg
mov
stc
mov
mov
std
pop
ret
and
inc
ja
push
ds
xlat
movsl
sbb
fucomp
stc
fsubrs
xchg
jae
xor
mov
lods
xchg
cltd
sbb
int
mov
inc
ficompl
ret
dec
gs
fdivr
lea
push
stc
adc
sub
gs
lods
std
int
jecxz
and
hlt
into
xor
adc
push
pusha
mov
cmpsb
sub
inc
mov
mov
std
test
mov
push
inc
shrb
pop
push
sbb
out
loope
push
mov
outsb
mov
mov
mov
jo
decb
xor
push
mov
sti
push
in
js
cs
add
aas
xchg
pop
pop
lret
insb
mov
cmp
push
loope
sbb
mov
xchg
inc
out
into
sub
jno
push
lcall
movsl
enter
repz
dec
loopne
cmpl
loop
jne
pop
cmpb
mov
dec
in
cmp
xor
mov
xchg
adc
jne
cltd
jle
xor
adc
lret
paddsw
xchg
mov
xor
cli
in
sbb
xchg
dec
les
js
sub
lods
punpcklwd
xchg
mov
insb
adc
push
jne
idiv
ss
inc
and
insb
and
stos
sbb
inc
adc
add
lea
cmp
fisubl
dec
sub
enter
push
inc
sahf
jle
sbb
inc
repnz
adc
push
subb
jno
rorl
pusha
and
sbb
int
pusha
loope
inc
jno
mov
mov
mov
and
mov
xor
mov
cld
das
and
dec
dec
xchg
repnz
inc
inc
and
sarb
clc
cmp
inc
and
inc
rorb
lods
out
pop
sbb
scas
faddl
lods
xlat
add
inc
repnz
add
ja
pop
pop
sgdtl
sbb
ss
sbb
sbb
mov
inc
out
sarl
adc
lahf
jbe
adc
sti
rcrl
je
inc
loop
in
pop
sub
cs
fcmovnb
pop
mov
aaa
out
dec
add
out
sub
dec
shll
dec
push
dec
test
mov
mov
xor
popf
std
fistl
jno
sbb
jp
daa
fdivs
mov
cmpsl
mov
movsl
testl
sbb
mov
or
xor
push
push
fisttpll
pop
call
sub
xchg
inc
sub
in
push
xchg
or
test
cwtl
sbb
rcrl
arpl
rorb
enter
xor
dec
pop
add
xor
pop
jno
in
fsubl
sbb
ds
adc
shrb
rcll
popa
pop
sub
sub
aaa
mov
addr16
test
stos
sub
cmp
pop
cmpsb
xchg
imul
push
jne
repnz
mov
in
nop
or
inc
jmp
rcr
cld
loop
and
call
pop
popf
cli
mov
int
bound
lods
jno
jge
bound
or
sbb
outsl
adc
icebp
xor
cmp
inc
mov
jae
shlb
rcrb
fdivrs
dec
jle
pop
int
in
jg
adc
push
mov
cmp
enter
push
mov
add
mov
add
addb
jg
xor
ret
inc
dec
lock
push
sbb
fisubrs
push
fidivrl
hlt
paddsb
push
fs
icebp
sub
inc
push
push
popf
scas
movd
mov
mov
sahf
sbb
cmpsl
inc
loope
and
aad
mov
jns
adc
dec
hlt
pop
cltd
ljmp
xchg
xchg
arpl
or
sahf
mov
push
jg
sbb
mov
mov
sbb
xor
cli
or
mov
mov
inc
adc
es
addr16
push
lods
or
jmp
sub
loop
pop
sbb
sub
or
aam
fs
pop
adc
cs
cmpsl
sub
repnz
outsl
push
pop
and
xchg
push
pop
lods
cld
adc
insb
jns
int3
orl
sbb
cmpsb
jae
pop
repnz
jle
mov
out
dec
sbb
mov
out
inc
int
lds
and
xchg
fstps
ds
mov
cmp
pusha
xchg
and
in
pop
push
mov
push
push
xor
fimull
cmp
or
sbb
push
push
push
add
and
insl
arpl
lds
and
notl
ret
fmull
mov
movsb
add
dec
leave
adc
dec
mov
scas
es
jp
andb
push
cmc
ret
cmp
movsb
jo
fwait
xor
jmp
outsl
pop
add
lcall
rcrb
jge
sbb
inc
adc
mov
nop
iret
inc
mov
or
inc
cmp
dec
dec
mov
sbb
lahf
popa
jmp
lods
inc
mov
sub
pop
mov
pop
xchg
inc
leave
xchg
mov
cli
loope
icebp
stos
andl
loopne
jb
mov
inc
mov
pop
sbb
mov
outsb
mov
or
mov
outsl
in
push
test
stc
inc
paddd
sbb
jge
add
je
out
or
push
push
popf
or
fs
outsb
inc
push
inc
push
mov
xor
mov
inc
xchg
or
and
jge
and
sbb
mov
xor
rcll
ljmp
and
jge
inc
and
mull
pusha
jne
aaa
aad
or
push
cmp
mov
ret
dec
xor
stos
ror
mov
push
xor
sbb
xor
mov
mov
scas
add
mov
out
push
les
fs
test
pop
xor
mov
movsl
bound
mov
fwait
mov
pusha
mov
popf
push
dec
sbb
adc
in
jge
mov
mov
push
sub
cmp
stos
xorb
lods
mov
mov
sbb
pop
xchg
push
test
pop
insb
sbb
mov
mov
testl
lsl
sahf
test
jg
sub
sub
movsl
xchg
lret
cwtl
and
sub
sbb
jbe,pn
inc
jmp
pusha
sbb
ljmp
jno
dec
or
pop
popf
pop
lock
mov
xor
pop
cmp
jnp
jg
push
ljmp
in
sub
loop
jb
btr
fiadds
mov
or
add
stos
cmc
inc
push
pop
ror
push
mov
and
imul
mov
push
sub
or
or
xor
xchg
mov
leave
jo
push
add
cmp
addr16
test
out
fistpl
ss
mov
cmp
mov
fisubs
jl
push
mov
pop
and
movsb
loop
lds
mov
mov
jne
es
lock
mulb
cmpxchg
push
pop
je
sbb
aad
cmpsl
into
mov
jmp
fbstp
mov
loop
out
lds
or
mov
in
push
stos
adc
pop
or
shrb
sub
mov
push
and
add
mov
inc
rcll
jns
hlt
shrl
and
popa
dec
addr16
stc
pop
leave
addb
jle
sub
mov
cs
cmp
mov
adc
cmp
pop
nop
out
iret
and
std
imulb
cmpsb
jno
lret
leave
adc
jl
dec
leave
add
dec
sub
dec
iretw
mov
stc
dec
rolb
adc
popa
sub
ret
and
pushf
pusha
pop
in
gs
mov
ljmp
jae
inc
jle
fidivs
cmpsb
xchg
mov
mov
mov
push
fstpt
push
lock
push
mov
pop
mov
std
jnp
xchg
shlb
xor
test
leave
add
xor
in
inc
adc
inc
in
jo
xlat
add
xchg
into
mov
and
sbb
mov
fstps
xor
inc
sar
sbb
sub
loop
jbe
push
add
mov
ja
mov
sub
jmp
fsts
adc
cmp
sub
cmpsl
inc
mov
adc
stc
and
adc
inc
xchg
jle
xor
mov
imul
xchg
push
mov
adc
xor
push
lea
shlb
ret
sub
xchg
out
insb
fmul
pusha
stc
sarb
or
or
dec
adc
lahf
xchg
adc
cmp
adc
mov
ret
leave
pop
popa
lcall
xchg
sahf
scas
adc
push
mov
das
mov
adc
js
sbb
movsb
mov
push
push
test
push
sbb
sbb
inc
xchg
and
ja
mov
dec
dec
fisubs
cmpl
stc
jns
lea
xchg
arpl
add
adc
in
xor
lods
jg
inc
sub
out
cmp
push
pop
pop
adc
mov
jmp
sub
mov
cmpb
and
jg
cmp
mov
cmp
mov
ds
xchg
pusha
test
xchg
adc
mov
xor
es
aaa
shl
or
ret
cmpsl
jno
jnp
dec
bound
scas
icebp
xchg
jecxz
and
mov
imul
push
push
test
outsl
shrl
ds
jno
fisubl
or
or
sbb
rolb
scas
add
mov
bound
and
xchg
cmpb
mov
in
dec
loope
mov
sub
lds
or
sub
out
imul
out
lods
adc
dec
cmp
and
jp
mov
orb
add
dec
pusha
and
loope
mov
addb
mov
jp
sbb
out
outsl
rcll
cmp
and
rolb
mov
aam
jmp
xchg
fisubrl
ljmp
in
pop
in
mov
xor
fisttpll
cmp
adc
dec
or
out
push
mul
aam
pop
scas
test
dec
lret
ds
out
or
inc
shll
gs
bswap
std
dec
cmpb
jno
and
mov
and
incb
mov
subb
js
les
add
out
int
mov
mov
movups
mov
lcall
sbb
jne
sub
xor
and
mov
and
mov
and
ror
jae
ja
add
call
scas
clc
xchg
sub
and
push
push
mov
inc
add
mov
xchg
rolb
lea
lock
jmp
out
xchg
cmpsl
jne
inc
or
adc
stos
cmp
jns
test
fcoml
adcl
out
addb
lcall
lea
or
cmp
aaa
xchg
mov
mov
xchg
inc
lods
insl
jecxz
jmp
lcall
iret
add
into
cmp
jmp
cmpsb
fsts
aas
std
pop
hlt
sbb
sti
jbe
mov
rcrl
dec
aas
mov
jno
into
adc
jne
pop
in
cmc
push
cli
mov
ficoms
sbb
push
mov
mov
and
dec
mov
clc
mov
pop
mov
mov
ss
cwtl
mov
pop
pop
ror
test
incb
push
data16
fs
icebp
test
sbb
lds
and
jl
out
or
int
add
fstl
adc
inc
mov
xor
in
or
ja
cmp
and
sti
mov
push
int
cmc
mov
sbb
mov
xchg
xchg
jb
mov
sbb
mov
fdivrs
iret
mov
arpl
pop
mov
dec
stc
lcall
inc
inc
fsub
lahf
fs
out
lret
incb
push
mov
fcom
test
xchg
fdivrs
add
mov
dec
mov
pop
rcl
daa
cmp
jg
xchg
je
xchg
aam
push
or
punpcklwd
push
cmp
jl
mov
cwtl
xchg
mov
sbb
adc
cld
mov
outsl
or
lock
push
xor
jb
in
gs
cli
dec
mov
insl
jae
adc
lsl
out
jecxz
mov
stc
dec
ret
xor
pop
lds
testb
shll
mov
and
lret
sub
adc
pop
insl
adc
adc
sub
fistps
mov
and
sub
jg
in
xor
cmova
inc
mov
pop
xor
loop
sbb
add
in
ss
imul
fmuls
ret
in
mov
icebp
inc
jmp
and
mov
es
push
jmp
push
mov
lret
mov
xor
int
or
sahf
sub
orl
xor
sbb
mov
push
pop
mov
sbb
dec
mov
out
das
cli
sub
insb
shl
lcall
pop
and
xor
jle
ficoms
fiadds
add
adcl
adc
xchg
mov
push
and
addb
push
cs
inc
lcall
popf
inc
nop
stos
lods
cs
sbb
popf
out
mov
dec
rcrl
movb
add
out
mov
insl
gs
fistps
sbb
mov
lret
into
or
fcoms
adc
dec
out
jae
dec
lods
xor
fwait
push
mov
pinsrw
pop
mov
inc
dec
xor
xchg
icebp
add
dec
aaa
out
test
leave
aaa
sbb
mov
or
mov
stos
std
and
jno
mov
mov
iret
cmc
das
into
jno
pop
dec
lcall
xor
andb
pop
dec
das
and
out
mov
mov
test
mov
cmp
xor
int
repz
adc
out
ret
iret
dec
negb
sbb
loope
icebp
inc
dec
sbb
push
jne
lock
out
aad
jno
cmpsb
and
daa
xor
and
inc
pop
add
mov
ret
cmp
fwait
xchg
inc
push
cltd
pop
and
xadd
push
sbb
xchg
add
cmp
or
xor
lea
ret
sbb
movsb
adc
push
jbe
mov
in
mov
mov
adc
push
push
bound
lcall
movsl
adc
out
sbb
sbbl
dec
push
stc
outsb
add
fidivl
imul
adc
dec
dec
fildll
mov
jnp
jnp
or
inc
inc
cmpsl
test
out
mov
shll
mov
mov
shll
es
pop
adc
or
push
mov
mov
push
xchg
jle
notb
dec
mov
jnp
sub
aad
xor
xchg
push
pop
push
mov
cmpsb
lcall
jbe
push
fiadds
hlt
push
in
sbb
clc
aad
add
cmpxchg
addr16
shlb
mov
sub
lds
add
aad
push
mov
dec
mov
xchg
insl
mov
lret
mov
ja
cmp
rorl
cmpsl
jmp
and
lea
xchg
and
sbb
xchg
loope
lret
push
push
ja
cmp
sbb
sub
add
or
mov
mov
icebp
jns
sub
jmp
subb
clc
fcoms
insl
int3
outsl
ljmp
bound
mov
inc
xor
adc
inc
rcrb
or
stos
mov
mov
test
and
dec
pop
add
lret
outsb
into
push
cmp
inc
xchg
scas
sar
xchg
insl
arpl
add
jns
das
cmpsb
test
shll
mov
cli
xchg
adc
dec
cwtl
push
cs
push
test
enter
inc
or
in
dec
lret
pop
in
ret
jbe
dec
jo
mov
dec
std
push
cmp
inc
push
movsl
loope
ret
jecxz
mov
adc
ljmp
xor
movsl
push
pusha
push
cld
insb
or
sbb
enter
jmp
leave
mov
push
pop
sti
clc
mov
movl
cmp
jb
loopne
iret
mov
inc
mov
push
dec
rclb
dec
into
dec
lods
mov
and
push
push
sahf
ror
dec
xchg
adc
push
rorl
adc
push
int
xor
sbb
xchg
mov
call
push
jne
mov
inc
push
push
pop
mov
ja
xor
sarl
cmp
hlt
mov
mov
es
xor
jb
jle
adc
rclb
push
inc
divb
and
and
sub
cmc
xchg
stc
ljmp
mov
xchg
mov
sub
mov
fbld
ret
push
stc
push
stos
xchg
cmp
cmp
push
test
jb
rolb
mov
inc
mov
dec
push
or
leave
sub
ljmp
mov
push
ss
out
cmp
cmp
fwait
or
rol
ret
push
xchg
ror
dec
inc
cmpsl
iret
mulb
in
pop
outsb
out
mov
jp
adc
dec
ret
lock
mov
fsubl
push
int
test
xor
xchg
inc
lock
jp
pop
push
loopne
inc
pop
jecxz
in
jle
push
adc
shrl
push
roll
push
sbb
cmp
dec
adc
push
stc
adcl
cmp
cs
push
fmull
add
mov
sbb
mov
fimull
jp
dec
ss
shrl
nop
outsl
or
ss
into
outsl
and
ljmp
mov
rorl
mulb
xlat
dec
orl
les
cli
aas
push
mov
sbb
inc
sbb
rclb
nop
pushf
pusha
popf
inc
inc
sub
sub
insl
cmp
lds
mov
pop
cld
jno
clc
jg
subb
jle
mov
jb
cmpsb
pop
jmp
js
mov
push
pop
jle
lds
pop
jo
out
call
sub
jo
inc
mov
xor
pusha
insb
sti
int
mov
mov
jg
mov
add
pop
mov
inc
pop
aas
and
rol
cmpsl
sub
mov
lods
ret
dec
dec
push
shl
xlat
bt
icebp
pop
pop
ficomps
mov
xor
hlt
adc
xchg
cld
pop
xor
cld
inc
repz
inc
jo
sub
ljmp
adc
and
mov
icebp
into
loopne
xor
add
movsl
mov
mov
out
sub
push
gs
cmp
gs
jg
ror
aaa
and
push
or
adc
mov
fldenv
cmp
mov
rcl
mov
or
rcll
mov
push
filds
ficoml
and
aad
mov
sbb
cmc
frstor
or
and
pop
movsb
test
push
dec
out
fsin
rcl
sbb
xor
rcrb
aaa
cli
enter
std
inc
mov
dec
cmp
inc
cmp
lret
gs
pop
fs
jns
cltd
adc
dec
xor
jle
out
aas
sahf
cltd
push
dec
push
out
add
xor
xchg
cmpsl
enter
push
mov
jecxz
adc
or
jnp
mov
xchg
call
jae
xor
inc
test
mov
lcall
pop
rorb
in
pushf
ficomps
fcomps
decl
stc
add
jb
xor
cli
out
inc
inc
push
cmpsb
push
mov
xor
sub
test
xor
or
pop
movsb
cmp
cmp
or
std
test
loopne
dec
and
int3
jp
push
adcl
cmp
je
and
scas
xor
sti
push
dec
sbb
into
lcall
shrl
sbb
jg
mov
iret
pusha
test
or
call
mov
pop
popf
mov
adc
cli
shll
or
fwait
sub
icebp
out
sahf
pop
sub
mov
ret
stc
jbe
dec
xor
xchg
pop
dec
inc
jge
insl
dec
enter
and
test
int
shlb
and
decl
ss
mov
or
nop
daa
lret
mov
cmp
mov
sub
loop
mov
add
sbb
jge
xchg
hlt
nop
inc
xchg
cmp
daa
push
ret
lcall
xor
hlt
pop
ror
outsb
mov
ret
das
shrb
add
mov
inc
xor
dec
icebp
lea
mov
repnz
push
out
add
cld
and
repz
aaa
cmp
xor
and
leave
sarl
je
loop
mov
lods
rcr
fsubrs
ret
jecxz
push
or
mov
xor
in
hlt
push
inc
add
arpl
xchg
data16
xor
ds
cmp
xor
dec
pushf
outsl
adc
jle
pop
shrl
push
shl
adc
cli
dec
pop
add
mov
arpl
lret
mov
and
adc
js
and
add
cmp
add
cmp
xlat
mov
dec
sbb
cltd
and
mov
cmp
xor
mov
imul
dec
xor
lods
sarl
and
jb
pop
jns
mov
aaa
cmp
inc
mov
mov
mov
jge
mov
jae
pop
and
mov
nop
filds
mov
jp
ljmp
mov
push
cvtdq2ps
xchg
jns
mov
dec
add
push
mov
mov
inc
and
jecxz
gs
gs
outsl
xchg
out
test
pushf
xor
loop
mov
mov
adc
loopne
ljmp
push
insl
push
inc
clc
lock
cmp
add
inc
dec
lcall
cmpl
repz
mov
jle
and
rclb
xchg
jmp
adc
mov
cmp
icebp
push
or
out
pop
mov
lods
adc
loope
or
movsl
popf
out
loope
dec
sub
push
mov
pusha
ljmp
fidivrl
push
test
mov
outsl
xchg
add
fdivs
sbb
jecxz
scas
xchg
jge
dec
cs
dec
ds
aas
pop
fcomps
pop
push
shll
mov
dec
sub
mov
inc
or
ljmp
inc
xchg
icebp
dec
iret
imul
shlb
adc
push
push
pop
adc
and
jae
cld
mov
sub
inc
xor
dec
cmpsb
mov
repnz
fnstenv
ud1
mov
cs
fst
push
fsubs
fdivrs
xchg
mov
push
fdivr
mov
jb
and
insl
adcb
daa
jl
fisttpl
push
repz
inc
and
jae
push
stc
stos
pop
addb
enter
clc
cmp
dec
aad
push
fdivrs
insl
inc
ret
pop
xchg
adc
test
or
jb
mov
cmp
jp
xor
sbb
lea
notb
adc
clc
and
jae
aad
xchg
mov
push
xor
inc
ja
ljmp
adc
rorl
sub
cmp
sbb
push
inc
hlt
fs
pop
outsl
add
lods
rorb
bound
pop
inc
rcrl
pop
xor
enter
outsl
mov
sbb
sarl
xor
lods
jbe
sub
cld
aas
ss
cs
icebp
sub
mov
pop
insl
cmp
xchg
dec
jg
xchg
xor
xor
inc
jg
jno
mov
movsb
pop
nop
mov
addr16
jg
cld
cmpsb
push
xchg
scas
cmp
outsb
mov
cld
adc
add
clc
ficoms
int3
in
insb
sbb
inc
mov
jl
test
sahf
xor
popf
sub
test
test
sbb
adc
fs
mov
dec
jnp
mov
int
popf
jbe
aas
jns
outsl
jo
sarl
mov
incb
xchg
and
insb
push
pop
adc
push
jl
stos
dec
shll
jo
push
xchg
xor
sub
sub
cmp
addb
push
mov
push
es
mov
mov
ja
inc
add
test
popa
add
outsb
leave
mov
lret
mov
mov
inc
inc
xor
popa
sbb
inc
dec
and
jae
inc
mov
shrb
or
push
xchg
mov
jo
das
movsb
inc
rclb
xor
xor
test
and
pop
xor
xchg
movsl
jmp
lods
mov
add
mov
pop
mov
ret
inc
push
out
adc
cmpsb
cli
xchg
repnz
cmp
rol
jnp
adc
orb
or
mov
sbb
in
gs
inc
and
lret
cs
mov
push
enter
add
enter
fistl
cmp
into
cld
cmp
sub
add
jb
mov
and
arpl
scas
xchg
fisubl
jno
pop
fnstenv
test
dec
in
or
adc
xor
insl
in
or
xchg
es
int
xor
into
movsl
sbb
inc
push
cmp
jecxz
fwait
xchg
xchg
fs
test
sbb
nop
mov
rorl
inc
and
mov
ret
inc
fimull
insb
mull
test
lea
and
mov
lods
iret
fildl
push
xchg
dec
enter
push
test
mov
mov
jg
inc
outsb
out
or
dec
sub
cmp
jg
jmp
push
out
xchg
mov
or
lods
push
push
subb
push
pop
iret
repz
jbe
movsb
adc
sub
call
repz
sbb
inc
sbb
repnz
sub
lock
repz
xor
popf
ret
dec
sti
push
or
cltd
fcmove
idivb
mov
lock
cmp
faddp
addr16
cmp
imul
dec
pop
mov
dec
fwait
ja
push
scas
loope
mov
out
adc
in
add
loope
stc
add
sub
inc
push
lods
mov
sbb
lea
push
sbb
stos
cmpsl
sub
mov
pop
jl
ljmp
mov
mov
jle
fisubl
sub
imul
cli
ficompl
and
mov
in
test
fsubrs
inc
xchg
xchg
jbe
or
lret
mov
pop
pop
jmp
mov
dec
pop
scas
mov
xchg
cmp
fnstsw
pusha
aaa
pushf
xor
subb
notl
xchg
test
push
or
out
sub
cs
insl
sbbl
icebp
cmpsb
jl
stos
nop
sar
mov
mov
test
dec
insl
test
out
cmp
jnp
mov
mulb
xchg
push
xchg
loope
inc
mov
inc
cmpsl
out
push
add
lret
adc
fmuls
dec
jp
sub
pop
ret
orb
mov
jl
jb
xchg
mov
popf
xlat
dec
stos
fnsave
mulb
scas
lcall
mov
sahf
dec
sbb
or
push
sub
sub
mov
cmp
push
pop
and
flds
jge
repnz
dec
lods
in
lcall
add
inc
xchg
xchg
cmpsb
in
and
cmpsb
cli
cmp
in
popf
andb
sub
push
mov
notl
bound
rclb
push
imul
int
sarl
fwait
mov
mov
andb
jnp
xor
add
enter
notb
mov
aaa
outsl
push
xor
or
jg
jae
js
insl
pushf
popf
mov
les
lret
stos
dec
and
dec
push
pop
inc
add
fsubrl
and
jne
xchg
mov
pop
jmp
push
inc
pop
cltd
dec
add
lahf
cmc
mov
xlat
sbb
inc
jne
ret
stos
aad
inc
dec
mov
loope
test
lods
lret
jb
or
icebp
arpl
subb
and
pop
rorl
xchg
movsb
mov
sbb
dec
test
out
shlb
pop
stc
jbe
dec
push
jle
lods
insb
xlat
enter
and
xchg
mov
jp
cmp
out
adcb
cmp
test
inc
add
mov
mov
dec
mov
mov
imulb
daa
sbb
pop
insb
jmp
int
xorl
ret
xor
inc
mov
sub
cmp
mov
push
mov
xchg
imul
sub
mul
aas
or
aaa
adc
inc
out
adc
loopne
pop
mov
xor
stc
mov
scas
sbb
mov
or
frstor
cmp
fimuls
pop
mov
popl
lods
cld
negl
imul
dec
mov
jb
stc
in
or
push
push
lds
xchg
and
fucomp
jne
ret
lods
push
and
pop
cmp
fmuls
dec
inc
inc
mov
mov
mov
pushf
insb
outsb
pushf
adc
xchg
js
inc
in
sbb
fcompl
adc
jmp
xor
std
scas
adc
lahf
adc
jbe
mul
xor
push
pop
out
repz
jo
mov
test
scas
sbb
xchg
lret
push
loope
repnz
or
jmp
insb
jp
sbb
addr16
leave
mov
xor
scas
cmpsl
push
in
addl
ficoms
mov
dec
shlb
enter
loop
test
cmp
or
push
adc
enter
idivb
data16
iret
filds
lcall
pop
xchg
jg
xorb
push
mov
shll
xor
inc
pop
jne
jmp
mov
iret
inc
mov
sbb
test
mov
pushf
adc
nop
inc
xor
fldenv
aam
lods
addb
shrb
rorl
xor
shll
scas
sbb
xor
sbb
movsl
sub
popf
add
loopne
mov
push
mov
mov
shll
xchg
scas
adc
jbe
out
mov
xchg
pop
insl
stc
cmp
pop
stc
inc
int
mov
cs
pop
fistpll
xchg
orl
pusha
test
mov
lret
out
xor
and
sbb
repnz
jmp
pushf
xchg
sbb
shll
push
out
jnp
sub
ljmp
xor
stos
pop
jae
notb
mov
inc
inc
jge
mov
ret
inc
jnp
jb
jp
mov
lds
xor
mov
and
nop
sub
insl
insl
sbb
scas
hlt
cld
xor
fwait
pop
mov
out
jg
sub
loop
inc
xorl
cmp
sbb
pop
movb
cmp
fadd
aad
out
push
dec
pop
loope
pop
inc
and
fimuls
js
outsb
mov
je
push
xchg
xorb
push
js
xchg
cmp
push
mov
xchg
clc
cwtl
and
sub
aaa
lret
and
sbb
xchg
in
in
pop
pop
xchg
jle
fildl
adc
add
add
cwtl
fists
mov
push
aad
adcb
mov
or
cmpsb
pop
or
sub
outsl
je
add
adc
test
push
les
xor
inc
addr16
lret
nop
scas
das
xchg
xor
pop
sbb
lahf
in
add
xchg
cmc
popa
adc
ja
mov
test
aad
cs
popf
loop
jle
mov
push
jge
das
and
es
outsb
fwait
leave
cmpsl
pop
add
rol
loope
lea
lock
or
jbe
inc
xchg
push
adc
jnp
add
test
lds
inc
push
jl
mov
mov
pop
sbb
roll
cmp
cmc
loop
lahf
lock
jno
sub
or
xchg
fidivs
mov
sahf
mov
jns
cmpl
jae
cmp
sahf
inc
int
inc
mov
fwait
and
sub
popf
pop
sub
test
push
sbbl
or
mov
pusha
sahf
pop
adcl
xchg
add
and
pop
data16
repz
imul
test
test
push
popa
scas
inc
cs
cmc
mov
mov
jle
and
jmp
fisttpll
inc
test
sub
icebp
and
add
cmp
push
add
loop
leave
xchg
adc
stc
xchg
divl
insb
mov
jge
xchg
jmp
mov
sti
xor
fadd
and
pop
data16
fsubrl
push
xchg
dec
loop
rolb
xor
mov
inc
inc
and
in
mov
stos
outsl
aaa
in
roll
inc
cli
push
xor
inc
into
add
lcall
outsl
daa
and
insb
int3
cmp
sahf
sbb
fdiv
adc
outsl
scas
loop
and
mov
adc
ljmp
cwtl
push
lahf
cwtl
pusha
push
adc
nop
adcl
xchg
nop
dec
jp
pusha
push
or
fisubs
push
faddl
fbstp
shll
stos
std
out
fstl
mov
jb
ret
push
cmp
cltd
xor
lret
push
cmp
movsb
iret
and
jl
inc
push
ret
xchg
mov
int3
mov
rclb
xor
movb
xchg
and
mov
fiaddl
es
in
nop
xchg
test
andb
xchg
ljmp
jno
lea
jne
data16
ja
jg
sbb
movsb
call
and
mov
fdivrp
pop
pop
orb
xor
test
sub
sbb
leave
pusha
cmpl
sub
imul
nop
lea
daa
mulb
xchg
insl
nop
sbb
jge
scas
pop
xchg
push
lods
and
adc
mov
scas
cs
jmp
pop
call
cs
jmp
divl
sbb
in
incb
mov
js
gs
xchg
add
stos
aaa
mov
pusha
sub
popf
inc
dec
stos
and
lcall
ss
shlb
nop
leave
pop
cs
fstpt
pop
repz
cmpsb
xchg
out
idivb
stc
pop
or
xor
addr16
dec
in
stos
mov
sbbb
ja
clc
outsb
inc
and
cmp
or
mov
stos
push
jg
leave
push
ljmp
pop
pop
xor
xchg
dec
cmpsl
pop
loopne
je
jg
scas
stc
das
lea
sub
sti
sbb
jbe
and
lcall
insl
inc
js
or
inc
out
pop
outsb
pop
mov
mov
nop
xor
cmp
rcrl
aad
int
inc
inc
pusha
daa
or
insb
mov
mov
inc
nop
pop
negb
movl
lcall
jno
fidivrl
ret
add
adc
add
movsl
xor
mov
sahf
stos
fstpt
cld
test
shll
or
inc
int3
pop
inc
mov
xor
inc
dec
or
inc
scas
cmp
push
dec
int
inc
jge
hlt
repnz
sbb
scas
mov
push
lods
pop
cs
add
shrl
pop
rcrl
xchg
jo
int
lret
ds
mov
or
in
xchg
inc
mov
insl
inc
loope
lock
dec
jle
enter
mov
into
push
aas
mov
dec
xlat
in
mov
mov
xchg
and
jg
mov
mov
mov
rolb
jns
mov
nop
popl
add
andb
pop
dec
xlat
mov
subb
xor
cmp
scas
inc
ficomps
lea
dec
mov
fstp
test
dec
rclb
call
out
iret
push
insl
jbe
out
inc
xchg
out
cmc
dec
dec
push
sbb
cmpsl
pusha
push
xor
mov
and
loop
push
pop
xchg
push
loop
lcall
out
mov
jg
adc
pop
sub
cmc
fisubrl
xor
dec
shlb
xor
fdivs
dec
add
adc
rorb
rclb
fisubrs
inc
mov
push
ja
incb
leave
add
mov
sahf
mov
and
jno
dec
adc
mov
popa
and
push
sub
sub
idivl
lcall
out
mov
xor
adc
push
xchg
pop
out
mov
mov
jp
aam
dec
xchg
pushf
js
rcrl
cmc
mov
sbb
jge
shll
mov
addr16
jg
mov
mov
andb
stc
jecxz
xsavec
mov
sub
pop
jo
test
ret
rcll
xchg
mov
vcvttps2dq
pop
inc
imul
movsb
mov
popa
or
jg
sahf
mov
sti
test
outsb
dec
test
push
mov
mov
mov
lods
inc
cld
sbb
xor
push
scas
push
add
or
and
push
adc
jg
cld
cmp
pop
xor
sub
cs
hlt
in
cmpsb
adc
mov
and
jg
lock
fdivrl
mov
or
fcoml
add
adc
inc
fcoml
scas
jns
ret
mov
pop
in
inc
ds
xor
jb
xchg
mov
mov
jp
sub
dec
pop
mov
fdivrs
mov
xor
adc
pop
pop
jge
mov
lods
scas
daa
push
testl
push
enter
and
push
je
inc
mov
lahf
dec
jnp
cmp
enter
jb
fs
fdivs
outsl
and
mov
adc
mov
mov
out
scas
cmovl
mov
pop
push
shrd
sarb
dec
cmp
test
add
mov
dec
cmp
leave
pop
inc
or
add
push
push
int
inc
clc
jge
ficoml
pop
sbb
in
aaa
jns
sub
movsb
mov
cmp
inc
in
jns
test
adc
pop
cmp
dec
lcall
out
aad
test
push
inc
sbb
add
stc
mov
inc
jb
jns
xchg
stos
icebp
in
cmp
mov
fcom
aaa
fadds
adc
test
sti
mov
popa
mov
loope
sarb
adcb
or
jae
scas
dec
in
mov
sarl
sub
add
into
pop
jo
fsubr
adc
movsl
gs
inc
sbb
lock
jle
outsl
dec
sub
sub
mov
jmp
les
mov
enter
fsubr
push
add
mov
and
inc
sahf
pop
jp
jb
mov
sub
or
cmp
xchg
add
sahf
dec
imul
sub
xchg
mov
out
pop
push
mov
bound
xchg
sub
sub
orb
adc
pop
push
out
and
mov
roll
dec
jp
add
adc
addr16
mov
test
and
jl
rclb
stos
ret
test
jns
icebp
dec
subl
fldenv
mov
mov
pushf
movsl
mov
movsb
sbbb
cmp
insl
out
iret
cli
sbbb
sub
lcall
jl
cltd
popa
mov
jb
xor
push
xor
nop
jb
xchg
push
out
mov
sbb
hlt
mov
inc
push
jae
push
xor
mov
xor
and
jo
fildl
jno
test
xchg
outsb
push
int
das
jb
sahf
rcll
nop
mov
push
rclb
mov
and
and
cmp
jno
mov
adc
pop
xchg
pop
sarb
or
ret
pop
dec
mov
xor
imul
in
xchg
inc
cli
mov
cmpsb
pop
test
jbe
mov
testl
pop
sub
fisttps
jg
cmp
cs
pop
mov
sbb
push
mov
inc
jle
inc
pop
nop
ds
adcb
push
aaa
in
pushf
jle
iret
inc
and
test
mov
es
pop
push
jp
pushf
daa
sub
push
shl
pop
ds
scas
inc
inc
pushf
cld
sub
fnstsw
jb
jne
jle
mov
rolb
xor
mov
xchg
pop
cmp
cld
mov
mov
test
mov
inc
jecxz
fidivrs
cmp
jg
pop
subb
mov
jae
rcll
sbb
xchg
dec
cmp
xchg
jne
scas
repz
push
clc
pop
or
stos
lods
test
mov
mul
xchg
stos
mov
or
pop
mov
or
popa
sbb
xchg
xchg
lret
cs
xor
mov
out
cmp
mov
mov
pusha
mov
pop
fldl
sub
xor
jmp
popa
cmp
jbe
inc
sarl
ds
cmc
lods
adc
inc
int3
repz
cmp
dec
mov
jg
fcmovnu
mov
mov
clc
dec
js
insl
test
scas
mov
andl
cmpl
jo
ret
comiss
imul
xchg
xchg
stos
jl
mov
aad
int3
mov
pushf
fstpt
shl
sub
xor
shlb
loop
pusha
mov
ret
in
and
dec
xchg
dec
xor
xchg
jp
fdivrl
and
in
dec
repnz
cli
test
adc
int3
in
ljmp
stc
incb
pop
xor
and
sub
and
push
cmp
add
test
sbb
or
in
inc
sub
int3
popa
stc
call
push
in
push
sbb
mov
inc
negb
push
cmp
and
xchg
cmp
leave
cld
xor
add
jno
cmp
pushf
movsb
cmpsl
cmp
and
xchg
int
icebp
cltd
pop
rorl
push
mov
adc
popa
iret
imul
rorb
xchg
xor
push
popf
fiadds
and
sbb
and
mov
enter
mov
mov
jb
ljmp
nop
enter
mov
hlt
xchg
pop
js
scas
xor
shrl
dec
ljmp
daa
jle
add
loopne
pop
mov
addb
imul
jle
inc
xchg
push
push
inc
sbb
lret
stc
mov
xchg
test
xchg
call
lods
pop
pusha
movq
pop
mov
pop
sub
mov
fldl
xchg
inc
daa
icebp
mov
popf
mov
shrb
jecxz
cli
outsb
dec
adc
loope
flds
pshufw
xor
test
dec
inc
mov
popf
cmp
fldcw
popa
out
mov
test
xchg
inc
and
les
cmc
jecxz
jge
decb
popf
cltd
xor
inc
pmullw
lds
push
jo
lcall
shl
cwtl
stos
jle
jp
divb
xchg
fmuls
mov
xor
aas
mov
adc
out
aaa
pop
loopne
ja
xchg
loop
mov
xchg
stc
sbb
fwait
lahf
pop
cli
or
jecxz
bound
push
sub
fcomps
xor
pop
es
rol
xchg
pop
pop
clc
nop
imul
mov
xchg
int
adc
testl
push
lahf
fadd
sub
loopne
cmc
fnstcw
push
push
outsl
fcoml
pushf
pop
out
ss
pop
mov
inc
or
arpl
push
mov
add
mov
or
loope
loopne
out
cld
xchg
pop
mov
out
lahf
push
lds
mov
hlt
popa
jg
mov
adc
movsb
js
adc
or
data16
test
inc
lods
test
imul
push
pop
jno
cmpsb
daa
mov
mov
ds
jmp
jmp
pop
adc
in
jp
cmp
dec
stc
scas
shlb
and
jp
daa
xor
add
jle
push
fisubrs
out
add
mul
xor
pop
and
push
gs
push
adc
fs
leave
push
pop
pop
and
sbb
pusha
jno
lahf
cmpb
dec
fwait
jnp
mov
cmpl
push
idiv
or
push
ret
dec
mov
dec
dec
fstpt
mov
sub
sbb
cld
je
rol
jnp
in
adc
aad
arpl
outsl
cmp
inc
daa
imul
enter
mov
inc
mov
pop
inc
pushf
daa
push
and
pop
push
lock
inc
and
mov
scas
inc
mov
push
out
add
push
pushf
cltd
inc
add
inc
add
push
dec
jl
adc
in
inc
or
inc
adc
cmp
inc
leave
cmp
mov
or
and
out
addr16
mov
mov
inc
mov
aaa
mov
xchg
shll
not
retw
notb
sub
cli
repnz
insl
mov
mov
dec
push
mov
fdivs
mov
repz
dec
lods
rcrl
lea
mov
shll
hlt
out
iret
mov
xchg
cltd
xchg
mov
dec
cmpsb
cmp
aad
add
push
dec
jo
sbb
mov
fwait
mov
inc
dec
mov
sub
data16
dec
jecxz
push
lods
xchg
ljmp
inc
movnti
inc
leave
insb
jb
mov
push
idivb
rorb
arpl
push
into
shrl
inc
lea
jp
mov
jae
aas
mov
xor
push
fimuls
dec
test
mov
jl
inc
cmp
test
push
into
idivb
jle
add
inc
icebp
mov
or
xor
mov
inc
incl
rclb
inc
pushf
pop
cmp
lret
mov
int
inc
stos
inc
inc
es
xchg
adc
jae
pop
jle
ret
mov
mov
mov
cmp
inc
jecxz
adc
test
pop
mov
mov
inc
orl
into
scas
push
xor
rcrb
int
xchg
inc
hlt
nop
mov
or
adc
inc
push
cmp
dec
stos
jp
or
test
push
mov
cs
dec
xchg
push
aad
aas
test
lds
jl
push
leave
nop
push
inc
xchg
adc
aaa
inc
fwait
add
mov
xor
nop
mov
xor
out
dec
mov
inc
lret
inc
repz
inc
cltd
sarb
xchg
push
cmp
cli
mov
xor
subb
adc
mov
cmp
mov
sbbl
mov
mov
adc
test
mov
push
stos
cltd
test
test
lds
insb
out
push
pop
inc
mov
call
push
fidivs
sar
mov
xchg
push
or
and
pop
push
outsl
sub
and
ret
jecxz
dec
sub
push
mov
inc
test
add
mov
in
mov
jbe
mov
or
inc
stos
inc
call
in
insl
mov
das
push
mov
jmp
add
int3
movsb
ss
mov
cmp
xchg
out
pop
sar
dec
int3
cmp
push
push
pop
shlb
clc
shlb
cmp
xchg
mov
cltd
repz
iret
inc
addr16
ret
mov
imul
xor
xchg
cmc
ret
sar
rcr
dec
push
dec
mov
popa
dec
scas
rorb
iret
xchg
jecxz
jge
aad
sub
outsl
dec
into
mov
mov
rcr
rol
lret
adc
mov
or
pushf
filds
xchg
cmpb
repnz
push
jbe
clc
lret
mov
xchg
dec
adc
lods
cld
mov
inc
lret
mov
mov
ds
jo
inc
mov
inc
push
cmp
xchg
jp
sbb
push
outsb
push
mov
rol
mov
mov
ret
scas
push
push
in
dec
push
push
std
push
inc
in
inc
hlt
inc
insl
cmpsb
xchg
xchg
add
inc
dec
test
inc
push
dec
cmp
inc
push
repnz
rorb
sti
ret
inc
or
add
xchg
and
stos
push
and
adc
lds
xchg
inc
inc
mov
and
bound
cmp
insb
not
push
rcrl
mov
rorl
shrl
mov
jo
mov
sub
mov
loopne
mov
adc
hlt
cmp
mov
add
fcmovbe
xchg
incl
lods
scas
out
cmpsb
xor
mov
cli
pop
jb
ret
add
or
jb
scas
push
inc
adc
inc
in
movl
insb
pusha
imul
pop
ficomps
xor
fidivl
out
xchg
repnz
ret
push
or
aam
dec
adc
sub
out
push
insl
into
jle
mov
xchg
popf
shll
and
in
pop
inc
dec
outsl
adcb
jmp
xchg
dec
pop
test
xor
dec
mov
pop
das
es
mov
mov
mov
lock
sbb
insl
out
ret
push
sub
mov
movsb
outsl
test
cmpsb
push
in
pop
mov
pop
xor
and
mov
add
mov
xor
mov
pusha
add
decl
mov
xor
pusha
xchg
pushl
mov
cmp
sarl
into
test
push
inc
mov
and
xchg
inc
add
adc
fisttpl
aaa
mov
dec
dec
and
lea
inc
sar
lock
push
insb
sbb
and
xchg
lods
jb
shll
mov
lods
pop
or
mov
lods
lahf
xchg
mov
and
daa
jmp
mov
mov
xchg
xor
js
in
fsubrs
addb
inc
leave
stos
sub
pop
jns
aaa
mov
xor
icebp
jg
jmp
orl
iret
xor
mov
pop
cmpsb
mov
inc
mov
inc
out
arpl
repz
jge
clc
mov
xor
push
xor
xchg
mov
xadd
cmp
inc
xlat
xchg
scas
jg
pop
push
pop
cmp
xor
adc
inc
pop
mov
nop
and
lods
fsub
add
test
fidivl
clc
lahf
mulb
mov
test
pusha
lods
int
push
les
or
mov
into
sarl
dec
mov
shlb
cmp
mov
add
leave
mov
aaa
andl
into
loope
in
sahf
add
enter
les
mov
push
lods
sub
shlb
in
cmp
inc
das
push
dec
aad
push
pop
push
test
decl
repnz
add
into
clc
push
dec
int
pop
sbb
adc
push
aaa
jbe
add
insb
into
das
push
rolb
pop
lods
or
pop
and
data16
mov
stos
mov
ret
test
jecxz
mov
out
mov
xchg
lret
push
pusha
lods
out
mov
inc
dec
lock
mov
mov
sub
jle
test
add
in
shll
and
cmpsb
inc
lea
and
mov
sbbl
cmp
cmp
int
xor
jp
mov
stc
xchg
ds
stos
icebp
xor
dec
xchg
ss
in
fcoms
ret
jno
shll
repz
scas
data16
mov
inc
sbb
int3
shlb
pop
inc
in
das
pop
jg
sub
int
pop
pop
mov
dec
es
sbb
xchg
xor
xchg
movsb
loop
lcall
xchg
aaa
push
repz
adc
daa
sbb
ljmp
sbb
push
roll
and
insb
mov
xchg
lock
call
je
and
and
ret
mov
movsl
push
cmp
mov
stc
add
into
dec
lods
sub
jg
jno
mulb
jl
jb
dec
xlat
mov
stos
pop
sbb
pop
sub
je
xor
dec
xor
aad
movsl
shrb
icebp
sqrtps
ret
ljmp
repnz
pop
aad
scas
cmp
jne
out
rolb
scas
or
push
lods
xlat
ss
daa
les
ret
adc
adc
bound
xchg
loop,pt
leave
fimull
je
and
bound
push
out
pop
lahf
adc
fiaddl
int
rcrb
inc
sub
push
mov
cmp
insl
mov
sub
std
xchg
shll
dec
pop
jno
jecxz
addl
pop
and
add
add
inc
sbb
pop
iret
jg
cmc
inc
push
jae
dec
fwait
xchg
in
mov
sbb
repnz
lahf
insb
test
jo
fidivrl
mov
sbb
rcr
aaa
arpl
bnd
out
inc
mov
fistpll
dec
mov
mov
ss
inc
shlb
out
js
movsl
pop
jae
divl
lahf
mov
inc
ret
icebp
int3
and
push
repz
iret
mov
jg
outsl
fisttps
xchg
hlt
dec
add
mov
test
rol
outsb
ret
sbb
push
sub
xchg
inc
mov
sti
xchg
mov
push
sahf
mov
incb
aas
xor
lock
add
inc
sbb
fidivrl
dec
dec
mov
and
jnp
and
push
cwtl
std
jns
outsb
stos
roll
fisttpll
xor
jae
std
in
in
sbb
call
dec
cmp
iret
je
adc
dec
mov
in
out
lods
inc
or
push
arpl
jg
or
sbb
data16
notl
cmp
adc
aad
xor
inc
fsubrl
insl
ljmp
cltd
sub
ret
sbb
in
leave
arpl
ss
and
inc
aaa
andb
cmpsb
add
repz
xchg
lea
aad
sahf
and
popf
sbb
sbb
add
popf
inc
outsb
mov
or
pop
mov
lock
push
repz
xchg
xchg
call
out
adc
add
push
mov
mov
sub
push
push
pop
inc
cld
xchg
clc
in
sti
sub
lds
out
movl
or
cmp
je
add
mov
fldcw
cmp
test
outsl
repz
daa
ror
mov
dec
pop
xchg
mov
addb
es
mov
fidivl
push
inc
push
out
test
xchg
cmc
push
xor
sbb
enter
inc
mov
in
or
mov
inc
mov
out
inc
ret
or
xorb
sbb
mov
xchg
pop
ficompl
out
and
xchg
add
adc
es
dec
push
inc
stc
fisttpll
in
xchg
mov
subl
mov
mov
mov
dec
rcrl
mov
mov
push
stc
mov
inc
mov
insl
xor
jl
xchg
jg
popa
jns
xchg
sub
cli
cmp
adc
sbb
es
scas
fsubs
add
dec
fildll
jns
sbb
ljmp
divb
in
test
data16
xor
push
add
cs
pop
out
inc
test
repnz
and
dec
lods
inc
sub
jmp
lret
cmpb
mov
js
mov
add
les
adc
lods
addl
fsubs
ficoms
shrl
lock
scas
jnp
mov
cmpl
mov
mov
mov
outsb
or
rclb
jecxz
shlb
aaa
clc
mov
push
xchg
mov
popa
repnz
xor
ja
and
push
insb
cmp
into
ror
cmp
roll
mov
inc
jns
push
pop
out
sub
movsl
mov
jno
inc
shll
cmpsb
cmp
dec
jg
andb
mov
push
mov
imul
and
sub
xchg
pop
mov
std
jo
pop
mov
mov
ret
test
and
push
xchg
pushf
mov
jno
lcall
aaa
cld
lods
adc
jmp
cmpb
push
xchg
mov
dec
dec
cmp
fldenv
jne
and
add
xchg
cwtl
ds
xor
push
mov
mov
xchg
cmp
subb
clc
push
xchg
push
sbb
xor
insb
jle
and
ss
daa
mov
push
leave
pop
xchg
adc
push
adc
pop
scas
enter
sbbb
popa
xchg
add
and
mov
push
xlat
pop
mov
dec
push
fisttpll
les
xor
mov
popf
adc
aad
xor
xchg
cmp
jge
pop
inc
mov
outsb
callw
push
pop
leave
outsl
push
sbb
movsl
jmp
lret
and
xchg
jecxz
int
popa
mov
dec
pop
dec
dec
stc
leave
roll
sbb
fidivl
aaa
add
jo
and
into
jg
cmp
xchg
xor
movsl
ljmp
icebp
xor
and
icebp
enter
mov
and
test
inc
mov
mov
aaa
and
cwtl
jecxz
cmp
mov
pop
xor
not
lods
rolb
or
scas
mov
xchg
inc
ljmp
adc
out
shrl
or
or
iret
push
mov
in
test
outsb
push
daa
mov
jo
push
mov
js
gs
push
xor
add
push
mov
dec
or
js
or
into
hlt
out
or
mov
dec
inc
jecxz
pop
aas
pusha
fsub
rcll
jle
addr16
lock
inc
ret
pusha
sbb
call
mov
insb
add
movsl
and
sarl
and
cmp
enter
pop
and
dec
or
nop
sbb
enter
nop
std
add
es
scas
adc
sbb
mov
sub
mov
shrb
adc
popl
int
test
insl
dec
aad
fidivrl
cld
in
testl
aad
cld
jp
cmpxchg
mov
sub
aam
push
sub
sbb
stc
repnz
inc
int
clc
or
ret
mov
ret
sarb
adc
cmp
inc
push
jns
jne
insb
lods
xchg
pop
xchg
popl
ret
jbe
jecxz
jle
cltd
mov
sbb
call
test
and
out
inc
test
or
lret
adcb
adc
mov
sbb
add
xlat
and
stos
add
lds
xor
jmp
mov
add
rcl
fbld
mov
incl
and
fisubrl
xchg
sub
lcall
cld
ret
fimull
dec
add
mov
int
je
imul
popf
jnp
xchg
lcall
orl
dec
rcr
fsubs
add
push
cmc
jo
push
ret
clc
add
repnz
xchg
icebp
push
xchg
sub
in
and
mov
sti
xchg
dec
test
jno
in
xchg
and
dec
repz
add
xor
xor
cmp
popf
out
ljmp
fildl
cld
sbbb
mov
adc
inc
sarl
sub
pop
jle
roll
dec
cmpsb
aas
cs
dec
lret
pop
out
ss
dec
stos
dec
jbe
or
inc
lea
pop
mov
xchg
sti
or
les
mov
popa
dec
dec
mov
cld
sub
inc
dec
sar
mov
mov
push
ss
inc
dec
lods
lret
outsb
adcb
push
xchg
flds
popf
mull
ss
movsb
cmpl
push
xchg
sbb
lds
mov
mov
push
and
enter
out
outsb
xor
jno
dec
mov
int
adc
sti
inc
adc
addr16
fdivl
or
mov
sub
pop
pop
xchg
sub
jbe
lock
inc
cmp
inc
adc
push
or
ja
stos
ret
out
mov
loope
inc
call
mov
int
mov
movsl
xchg
in
insl
inc
pop
mov
xor
js
fimuls
lcall
add
jge
lcall
jp
fwait
out
insb
arpl
lret
or
adc
xchg
mov
jg
mov
cltd
sub
sub
mov
xor
test
or
bound
inc
daa
rol
dec
sbb
xchg
add
lods
mov
add
stc
cs
lds
jecxz
popa
cli
lods
dec
add
xor
sbb
pop
jns
mov
jns
fs
test
rorl
insl
cwtl
jnp
das
inc
arpl
or
mov
add
movsb
test
js
push
jle
dec
xchg
jnp
pop
cltd
ret
adc
roll
push
pop
xchg
sbb
int
lds
jg
test
enter
jmp
fstpt
xorb
jle
stc
rcll
pop
mov
sbb
dec
sub
pusha
pop
mov
adc
int
xor
jecxz
adc
sub
xor
push
fidivl
mov
jmp
sbb
and
aas
icebp
mov
inc
sub
aam
das
pusha
xor
lods
mov
sbb
out
sbb
dec
dec
push
sbb
xchg
cld
adc
sti
cltd
adc
call
push
jo
xchg
aad
or
in
mov
push
jecxz
inc
pop
jl
dec
test
inc
ret
pop
loope
mov
inc
pushf
mov
pop
lods
pop
mov
jno
xchg
js
jnp
adc
mov
js
ret
ds
mov
adc
mov
rcl
cli
xor
fisttpll
cmpsb
dec
mov
push
mov
xchg
ja
push
and
add
cld
bound
or
xor
mov
movb
fmull
add
cmp
push
pop
or
mov
mov
aam
mov
lock
gs
xor
in
xor
jbe
jge
je
mov
hlt
cmp
mov
pop
loop
push
mov
pop
lods
orb
iret
mov
daa
lcall
inc
sub
pop
lods
test
xor
push
aam
and
andb
xchg
roll
inc
sub
jnp
test
push
pop
dec
addr16
pop
movsb
or
les
push
xor
scas
iret
dec
cli
pop
mov
sbb
aaa
sarb
arpl
jae
int
adc
das
push
sahf
popf
loope
push
dec
mov
push
insb
in
out
pop
mov
xchg
jle
adc
paddq
inc
fisubl
push
cmp
ret
inc
adc
cmpl
js
mov
insb
add
dec
cmp
imul
inc
inc
sbb
inc
loope
mov
cmpsl
inc
sbb
inc
ret
mov
mov
inc
xorb
sti
and
adc
sahf
sub
pop
dec
mov
jmp
jp
mov
dec
add
sahf
fbstp
and
and
test
mov
shll
inc
dec
int
mov
roll
inc
ror
sub
nop
and
test
jmp
mov
in
dec
mov
xor
sub
in
xor
pop
popw
test
pop
and
js
and
popf
movsl
pop
xchg
das
in
leave
dec
adc
fwait
leave
push
inc
jge
or
mov
inc
fiadds
cwtl
add
out
fdivrs
inc
mov
push
orl
out
daa
es
push
push
add
ret
adc
jp
mov
rcrb
inc
cmpsl
jbe
adc
dec
inc
mov
inc
push
nop
fcmovu
cmpsl
cmpl
mov
dec
fadd
jg,pt
inc
sub
std
cmp
mov
xchg
fdivs
adc
insl
dec
popa
test
ret
mov
sub
xor
aaa
nop
jg
test
dec
sub
mov
xor
into
inc
push
jmp
push
pop
sbb
neg
pop
mov
les
dec
cmp
pop
xchg
cli
dec
loope
roll
mov
pusha
mov
mov
xchg
mov
add
fisttps
inc
add
jecxz
jb
jle
add
mov
stos
and
mov
push
adc
lds
repnz
lret
mov
mov
aaa
mov
movb
jno
push
pop
cmp
aaa
mov
xchg
imul
cmp
insb
and
and
dec
enter
mov
pop
pop
movsl
sar
inc
pop
dec
movsl
into
dec
mov
pop
outsb
fnstsw
xor
cmp
mov
aas
sar
sub
adc
cld
xor
jmp
xchg
int
mov
sub
mull
pop
dec
ucomiss
in
fldl
mov
ficomps
dec
adc
outsl
aas
jnp
mov
jnp
pop
pop
or
add
mov
jnp
loop
cmp
or
pop
clc
sub
test
mov
je
and
jns
push
ficoml
mov
pusha
lods
and
push
adc
clc
dec
add
sbb
icebp
jns
insl
in
sarl
and
out
sub
insl
lock
in
daa
jno
pop
push
cmp
push
lods
clc
pop
sub
xor
repnz
roll
xchg
cs
push
jecxz
inc
or
pop
into
mov
mov
jle
sub
nop
dec
pop
ja
mov
outsb
iret
push
mov
rorb
aad
bswap
push
xchg
add
pop
test
lods
mov
lods
jmp
fadds
jg
enter
int
dec
lock
jne
xor
or
clc
sahf
out
fnclex
repnz
lahf
ja
cmp
loopne
dec
inc
add
and
mov
mov
mov
xor
and
shl
dec
push
pop
ret
jb
inc
inc
aas
mov
mov
xchg
adc
dec
pusha
sub
and
or
pusha
push
and
xchg
jg
or
sarl
fwait
aam
aaa
xlat
lods
outsb
adc
inc
adc
cltd
cmpsb
outsb
mov
shll
sbb
rolb
jno
inc
dec
mov
popa
inc
jo
in
jecxz
std
xchg
cwtl
in
xor
xchg
mov
cmp
mov
adc
and
inc
or
lret
imul
inc
and
scas
cmpsb
push
push
adc
inc
mov
int
add
idivb
cmpb
sbb
popf
mov
push
and
cmp
lods
jb
jle
roll
rolb
sbb
mov
insl
sbb
popa
mov
pushf
mov
push
popf
pusha
lret
jmp
rcrl
dec
pop
pushf
imul
int
in
inc
insb
out
add
rcrl
pop
push
roll
xchg
jp
xor
mov
lods
jge
inc
js
jle
sbb
cli
push
pop
and
cld
loope
pop
idivb
push
out
jbe
dec
fs
cmpsl
cmp
pop
popf
insb
fdivl
inc
enter
out
es
pop
ja
or
and
mov
decl
adc
loop
mov
mov
xor
jns
inc
xor
cmpsl
loope
add
add
lret
push
repz
cs
sbb
int3
push
ljmp
scas
js
imul
aaa
cwtl
pop
imul
inc
jbe
xor
jo
fwait
lcall
push
cmpsl
inc
mov
and
xor
or
in
or
mov
pushf
in
sub
rcrb
cmpsb
sahf
mov
int
add
adc
xchg
or
insb
cs
ljmp
xor
jnp
out
pop
clc
or
movsl
shrb
shrb
je
arpl
daa
stos
inc
lods
sbbl
outsb
int
ja
divl
mov
mov
jp
xchg
out
inc
sarb
cmpsb
push
xor
popf
pop
pop
mov
nop
out
test
xchg
jbe
xor
push
fnsave
push
shld
stos
fcompl
mov
xchg
cs
xchg
xchg
push
jae
mov
mov
stos
mov
ss
mov
or
in
jbe
xchg
das
cmp
scas
ss
or
cmp
movsl
rcl
test
cli
cmp
add
fdivs
push
scas
xchg
xchg
or
xor
add
push
xchg
sbb
imul
in
ja
cli
int
jo
fadds
mov
jecxz
jae
mov
sub
adc
pop
rcrl
sub
sbb
adc
inc
dec
or
or
dec
nop
mov
loopne
stos
aaa
out
nop
jne
lret
adc
dec
into
ret
add
mov
out
mov
aam
mov
lret
mov
aad
xchg
fstl
mov
add
enter
jae
mov
sub
and
dec
xchg
mov
pop
mov
pop
push
cmpb
dec
fstpl
stc
mov
test
loop
mov
adc
nop
mov
and
imulb
inc
inc
pop
or
mov
mov
mov
mov
dec
cmp
ret
cld
dec
fucomp
stos
sbb
outsl
jle
nop
dec
adc
insl
dec
adcl
pop
cmp
in
fdivl
ja
addb
mov
pop
fists
adc
lds
call
add
rclb
pop
stos
xor
push
push
xchg
es
nop
lahf
dec
sub
cmp
lcall
pop
xor
mov
jecxz
call
js
push
mov
call
popa
adc
jle
mov
xor
cmp
cld
inc
mov
mov
test
jno
sbb
mov
inc
jb
xchg
popf
inc
dec
cmp
movsl
mov
cmp
adc
sub
adc
popf
push
mov
mov
fsubrl
movsl
mov
in
outsb
mov
mov
je
popa
push
movsb
hlt
sar
xchg
ficompl
mov
sbbb
subb
or
lods
jnp
mov
dec
inc
out
adc
stos
mov
adc
ret
inc
fcmove
call
pop
jb
push
mov
cld
mov
test
or
cmpsb
popf
mov
inc
lret
push
in
push
js
cmp
adc
push
sub
inc
xchg
es
sub
xchg
int3
mov
dec
mov
addr16
push
loope
int
ds
mov
cmpsl
out
adc
stc
in
out
mov
pop
sbb
fbstp
das
mov
sbbb
and
out
adc
mov
popa
dec
insb
xor
mov
add
loope
xchg
ret
mov
dec
and
nop
mov
inc
lret
or
ret
add
and
out
xadd
mov
out
popf
inc
adc
mov
add
xchg
clc
mov
out
mov
mov
cmpsb
jbe
mov
dec
xchg
into
adc
jle
or
rorl
pop
xor
mov
dec
aaa
fimull
movsl
rol
xchg
js
adc
inc
or
adc
dec
lret
mov
sub
jecxz
aas
jge
inc
bound
cli
inc
inc
mov
in
adc
lret
adc
xchg
pop
adc
scas
cmp
out
xchg
jmp
aam
pop
cld
xor
jns
jno
lea
out
mov
fcompl
sarl
jge
adc
or
sbb
jo
sbb
repnz
outsl
add
mov
out
add
cmpsb
xchg
mov
xchg
fsubrs
or
jle
ret
bound
inc
in
xchg
nop
or
push
pop
inc
xchg
ljmp
data16
push
adc
sbb
out
dec
cmp
inc
mov
pop
cmp
stos
test
decl
dec
int
fstpt
inc
inc
sub
movsb
cmpsb
mov
stc
int
mov
in
dec
inc
push
leave
xchg
lret
push
cltd
jecxz
das
mov
add
inc
iret
xor
shl
add
mov
fbstp
inc
out
xchg
sbb
dec
push
xor
add
movsl
sub
stos
push
mov
pop
scas
adc
cs
cmp
clc
test
dec
dec
mov
pop
int3
dec
dec
jo
pushf
rorb
and
cltd
fwait
add
xlat
push
sub
iret
jns
sub
dec
push
cmp
mov
call
mov
push
sbb
movsl
sub
add
jns
push
adc
mov
adc
sarl
inc
inc
rol
sbbb
roll
scas
mov
xor
push
jo
fisubrs
mov
mov
jmp
jg
xor
scas
lret
push
rol
ret
push
xor
lds
push
add
mov
mov
jp
lock
pop
fisubs
cs
ja
inc
fisubl
xor
addb
mov
movsl
int
mov
adc
xbegin
cmp
inc
iret
xchg
mov
xchg
adc
mov
pop
rclb
sub
xor
fsubs
jne
jle
dec
push
lock
xor
test
fcmove
scas
mov
divb
insl
cmp
inc
and
into
jno
sti
cs
pushw
xchg
pop
cmp
repnz
xchg
push
cmp
lret
push
cmpsl
jae
ds
adc
icebp
icebp
sub
add
and
xchg
push
pop
out
xchg
nop
aam
sub
jge
mov
jecxz
xchg
inc
loopne
cmp
insl
fcmovbe
push
scas
hlt
mov
pop
or
sbb
add
sub
and
fldcw
or
xchg
fisubrs
into
pinsrw
mov
mov
jne
pop
push
mov
lcall
mov
mov
mov
mov
adc
jnp
sbb
leave
or
test
movl
pop
roll
test
nop
xchg
add
jle
cmp
cmpsb
inc
es
fcomps
inc
mov
pandn
pop
sahf
push
ret
popf
imul
jge
mov
and
mov
and
adc
dec
rorb
popa
sub
int3
jmp
xchg
and
pop
add
mov
xor
popa
inc
je
jne
xor
gs
cmpsb
push
sti
pop
addl
les
xchg
pusha
and
pusha
mov
sbb
inc
mov
insb
sbb
and
adc
pop
cmp
jge
xchg
pop
mov
and
shll
mov
mov
mov
nop
out
sub
scas
adc
in
mov
jae
and
nop
xlat
add
ss
enter
lcall
mov
xchg
jge
inc
jle
mov
movsl
outsl
jb
inc
lock
jge
loope
pop
inc
gs
adc
add
jns
push
aad
test
icebp
mov
test
cmp
xchg
sti
push
mov
adcl
mov
dec
xchg
lahf
add
pop
pop
repz
mov
mov
test
cmc
adc
cmpsl
pop
mov
mov
ret
and
lds
in
mov
loope
out
mov
inc
and
outsl
stos
lods
push
push
rcrb
add
jmp
push
jecxz
xor
aaa
sub
mov
hlt
mov
mov
add
adc
iret
sarb
sub
inc
or
call
push
je
and
inc
cwtl
stos
lock
push
mov
popa
jle
mov
ss
or
test
les
mov
dec
xchg
jno
add
dec
sbb
loopne
and
gs
push
out
leave
add
out
das
push
loop
jns
cltd
fimuls
cmp
fadds
shrl
jae
outsb
ret
repnz
cmpsb
pop
lcall
mov
stc
in
push
mov
xchg
jns
sub
in
loope
into
lret
js
cltd
out
cmp
fiadds
loopne
mov
imul
fs
shll
rclb
inc
push
mov
xor
push
popl
inc
int
dec
cmp
loope
adc
pusha
adc
scas
adc
inc
jmp
popf
movsl
adc
sbb
sar
mov
jmp
setge
dec
mov
cmc
leave
lea
lcall
mov
ret
inc
and
dec
xor
pop
jnp
scas
jge
negl
pop
pop
push
cld
cli
cltd
add
fcoms
filds
xor
and
jne
adc
lods
adc
clc
das
jo
js
pop
jnp
adc
mov
push
ret
or
xorb
mov
arpl
pop
std
faddl
adc
mov
or
xor
adc
out
adc
lods
notb
jg
scas
pop
sbb
jns
inc
pop
outsb
push
dec
shl
sub
mov
shl
add
ljmp
jbe
clc
insl
pusha
sbb
lds
xor
push
jl
cmp
jg
xor
add
adc
int
jle
and
outsl
sub
fcmovu
xchg
xor
sbb
notb
jp
roll
stos
nop
notb
in
jnp
loop
or
sbb
inc
shlb
icebp
test
out
divb
adc
lahf
xchg
or
dec
lea
lret
xor
sbb
scas
addr16
sarb
lcall
mov
and
push
mov
mov
push
push
add
lds
jb
push
push
cmp
jo
mov
cmp
cmp
call
mov
lods
dec
lods
pop
push
inc
or
add
cmc
jbe
out
xchg
je
ss
cmpsl
mov
mov
rorl
lods
cmp
inc
sbb
adc
ja
insl
js
push
ja
xor
aam
nop
movsb
jmp
cmovle
fisttpll
mov
push
mov
leave
mov
and
push
sbb
std
inc
dec
enter
xor
jge
mov
push
jmp
out
fnstsw
inc
mov
adc
and
jmp
insb
and
adc
mov
out
aam
xchg
jle
fcom
mov
outsb
cmp
cmpsb
jmp
pop
xchg
into
loope
insb
push
mov
and
mov
rorb
pop
jno
fldcw
test
dec
sbb
cmp
xchg
bound
es
bnd
jb
jno
jg
pop
into
jb
xchg
sbb
push
adc
and
xlat
pop
jo
jbe
lahf
popa
or
push
sbb
push
and
lock
mov
shr
push
push
test
mov
push
inc
pushf
push
testl
addr16
call
dec
add
push
push
push
sub
mov
push
or
cmp
mov
movsb
cltd
daa
nop
adc
rcrl
outsl
push
cmp
jl
and
adc
xor
mov
call
jmp
inc
lcall
rcrb
cmpsb
fimull
fisttpll
fistps
xor
mov
and
mov
shlb
jno
push
mov
cmp
in
mov
movsl
in
sbb
idiv
sbb
pushf
mov
mov
in
popa
mov
add
mov
push
inc
aam
test
xchg
sub
in
lret
dec
mov
inc
jle
loope
insb
test
arpl
das
rorl
insb
es
sbbb
pop
cmp
jne
inc
sub
pop
mov
popf
movsb
mov
ss
je
orl
in
xor
cmp
js
das
add
mov
lret
sbb
pop
in
dec
mov
popf
mov
sub
scas
lcall
mov
cmp
fsubs
inc
cld
clc
or
popf
inc
lcall
sub
scas
js
push
popa
push
jmp
mov
rclb
fadd
ds
rclb
les
inc
ret
scas
push
jle
lcall
aaa
adcb
inc
jg
test
xor
inc
push
loop
ljmp
bound
sub
call
pop
push
js
pusha
fnsave
adc
jg,pn
mov
out
or
or
outsl
bound
int
pop
mov
rol
inc
add
pop
dec
call
sbb
loop
test
movsb
pop
dec
push
push
xchg
xor
add
addb
test
shr
mov
icebp
xchg
fmull
xchg
inc
inc
out
jmp
xchg
lea
jle
adc
mov
sarb
xchg
pop
fbstp
xor
mov
inc
gs
xchg
movsl
xchg
inc
ljmp
xorb
push
into
inc
scas
inc
popf
cmp
sub
jl
pop
dec
lock
xor
enter
sbb
fisttps
mov
dec
icebp
rclb
daa
es
or
std
xchg
add
jg
jmp
adc
pushf
adc
jg
in
add
add
pop
insl
gs
add
gs
fbstp
dec
pushf
mov
std
xchg
mov
cmp
mov
lock
mov
mov
call
pop
lea
fstpl
sub
fxch
mov
add
mov
push
mov
sub
xchg
sbbb
add
rolb
inc
stos
adc
sarl
lods
mov
pop
push
test
aam
pop
insb
jns
les
mov
std
xchg
pushf
mov
shr
aad
dec
mull
fsubs
mov
lcall
icebp
rorl
xchg
adc
pop
xchg
cmpsb
rorl
scas
or
and
pop
and
pop
mov
test
inc
adc
mov
pusha
push
pop
movsb
xchg
fstl
inc
dec
jmp
push
dec
insb
pop
in
push
adc
in
pop
mov
pop
pop
loope
dec
and
mov
subb
add
mov
and
lret
outsb
dec
lret
dec
icebp
pop
or
sti
add
js
fdivr
movl
pop
and
add
in
or
pop
jbe
cmpsb
mov
fdivrl
inc
mov
imul
push
jmp
inc
into
mov
orb
xchg
and
push
ss
iret
mov
mov
xchg
js
push
add
into
fdiv
mov
xchg
scas
jecxz
xchg
lret
test
push
in
dec
test
inc
cld
test
sbb
not
push
fisubrl
cmp
shl
pop
sahf
dec
les
pop
fisttps
cs
and
cmpl
lods
xchg
and
out
scas
jl
stc
cmp
test
fiadds
stc
les
mov
mov
sub
int3
xchg
adc
dec
outsl
lahf
adc
xchg
mov
cmp
fstps
cltd
ja
scas
data16
lock
into
into
pop
pop
lret
or
inc
lock
and
jp
popa
out
into
into
sbb
mov
std
roll
adc
xchg
adc
in
arpl
stc
adc
fists
push
mov
inc
rcrb
jge
fidivl
inc
push
leave
ss
loopne
mov
push
cmp
adc
push
pop
stc
or
sahf
ret
stos
int
sub
inc
dec
aas
and
push
and
xchg
pop
xchg
dec
mov
ret
xlat
xchg
mov
jle
mov
int
sbb
cwtl
int3
int
adc
pop
test
test
pop
out
aam
inc
pop
sub
punpckhdq
dec
sbb
dec
rol
push
inc
inc
xchg
jp
push
xchg
cmpsb
js
or
rclb
pop
pop
shll
and
test
enter
fcmovb
fnsave
mov
jecxz
aas
and
jmp
popf
into
pop
adc
and
xor
jb
sti
xchg
or
out
xor
daa
push
dec
cmp
mov
and
inc
dec
xchg
fdivrp
aad
aaa
mov
shrl
and
inc
sbb
das
xor
lret
ror
inc
fisubrs
lcall
dec
dec
out
inc
data16
movl
mov
dec
movl
loop
jbe
inc
and
mov
adc
jae
dec
mov
adc
jle
adc
and
fiaddl
mov
cli
sti
sbb
mov
stos
or
test
push
xor
lds
push
pop
js
dec
xchg
pop
adc
lahf
and
xor
jg
mov
inc
mov
xor
pop
icebp
aam
lcall
xchg
rol
ret
jb
push
pop
adc
cld
lret
repnz
ficoms
mov
sti
adc
dec
adc
nop
test
ficompl
or
orl
push
fwait
mov
aaa
das
mov
arpl
rcrb
aas
add
push
lret
lcall
dec
push
push
xchg
sti
fidivs
or
mov
loop
sub
mov
addb
sbb
mov
out
push
sahf
mov
movsb
xor
sub
inc
mov
cld
repz
ret
insl
shrl
movsb
push
jmp
jp
mov
inc
rcrb
imulb
jno
push
adc
pop
int3
fsts
pop
lds
enter
outsl
and
jl
push
dec
cmpsb
pop
mov
les
in
xchg
in
std
mov
xchg
cwtl
cmc
sub
inc
fstpl
shrl
inc
pusha
adc
mov
dec
dec
scas
sub
and
js
push
jns
push
or
jecxz
jns
mov
or
add
or
test
adc
out
dec
shl
adc
xchg
in
int
les
mov
mov
scas
das
add
push
adc
mov
sbb
inc
stos
push
mov
mov
std
lock
fstl
inc
push
sub
add
inc
pop
mov
adc
pop
pavgb
cmpsb
nop
mov
mov
int3
sbb
fdivp
mov
pop
push
dec
int
mov
ljmp
test
push
outsb
and
test
rcll
popf
or
frstor
lcall
or
stos
inc
pop
shll
out
fldcw
mov
sbb
aas
cmp
pusha
pop
stos
dec
scas
fstpl
pop
out
mov
stos
pop
inc
mov
cmp
pop
xchg
xchg
cs
cs
adc
movups
xor
fcoml
ds
jge
or
and
mov
jmp
adc
lret
inc
mov
incl
push
ret
cltd
movsl
outsl
add
mov
cmp
sub
mov
or
jp
adc
dec
and
mov
and
sub
mov
inc
hlt
ret
jg
pop
outsb
add
xchg
dec
add
mov
flds
in
mov
insl
mov
push
sub
fiadds
pop
jl
subb
sbb
mov
popf
mov
bound
pmaxsw
xor
jns
dec
int
mov
and
std
sarb
lret
repnz
cld
cmc
bound
movsb
ret
mov
repz
push
jg
xor
es
dec
icebp
add
sub
fsubs
ret
jnp
rol
js
xchg
mov
sbb
jo
popl
test
mov
sub
scas
mov
ret
loope
pop
xor
mov
mov
lahf
nop
into
dec
dec
call
jo
mov
pushf
insl
add
xor
movsb
in
xchg
or
mov
cmpsl
pop
rcl
repnz
mov
xchg
adcl
nop
lahf
fldl
dec
imul
sub
fcompl
xor
fwait
mov
pop
pop
das
push
mov
push
mov
adc
jne
lock
scas
push
mov
ret
nop
push
outsb
xchg
inc
lods
mov
ss
pop
push
cmp
int
push
xchg
cmp
dec
rorb
push
ret
rolb
aas
cmp
mov
push
out
es
enter
inc
fsubl
push
adc
dec
lcall
rcl
sub
cmp
rcll
addr16
enter
stc
sbb
enter
test
sub
rcll
sub
mov
call
dec
ja
jecxz
and
xor
lods
inc
sub
dec
jmp
push
pop
push
jmp
cmp
inc
push
movsl
int
push
in
push
push
sbb
add
mov
push
and
mov
push
fwait
jecxz
jp
mov
sub
jb
mov
and
outsb
orb
sahf
inc
sub
sbb
mov
inc
inc
jg
in
xor
jl
sbb
fists
jl
sub
mov
jb
mov
xor
or
push
lcall
push
adc
sub
and
sbbl
into
pop
lahf
dec
repnz
ret
dec
sti
pop
in
inc
daa
and
mov
int
push
adc
int
into
popa
dec
pusha
jg
aaa
mov
jmp
popf
dec
pop
push
gs
push
cmpb
adc
out
mov
pusha
pop
ja
xchg
push
mov
lea
xlat
dec
pop
or
call
stos
add
lret
imul
push
jno
jns
mov
aaa
mov
sbb
fiaddl
push
fiadds
adc
fs
dec
jnp
fidivrs
sub
add
nop
jb
xchg
inc
dec
in
leave
jno
ror
faddl
mov
sub
add
push
shrl
gs
pop
cld
mov
sti
lds
dec
pop
jmp
in
scas
adc
test
or
gs
adc
jecxz
dec
roll
jle
jg
cli
repz
push
cmp
sub
ja
ficompl
sbb
cld
or
les
insb
mov
call
adc
pop
lret
and
dec
mov
jnp
xor
pushf
jecxz
js
xchg
and
pop
jmp
lret
inc
out
stos
xor
stc
jecxz
xchg
das
xchg
fistl
inc
orl
and
inc
outsb
iret
mov
mov
pop
jg
mov
cmpb
pop
mov
mov
or
inc
inc
pusha
xor
push
push
push
inc
popf
inc
mov
xchg
adc
sbb
sub
push
daa
mov
or
push
inc
xor
rorl
jmp
xchg
sbb
sub
jl
inc
loop
adc
into
mov
xchg
cmp
push
mov
shr
push
push
mov
xor
xlat
in
dec
adc
xor
adc
lahf
cld
or
cld
jle
jmp
es
cltd
ds
std
lcall
push
ret
lods
out
sub
and
sub
xor
movsb
rcr
sbb
leave
xor
cli
out
adc
test
hlt
repnz
inc
call
jmp
ja
in
cmp
xor
dec
loop
or
adc
push
mov
push
hlt
mov
xor
rcr
inc
shr
sub
test
lret
popf
lods
out
push
pop
pop
dec
mov
dec
lock
push
ds
sbb
es
nop
and
clc
add
dec
pop
mov
jg
shrb
and
scas
sarl
in
mov
iret
shl
jno
aaa
jo
insl
mov
adc
scas
adc
mov
mov
sahf
shll
adc
ds
push
adc
push
pop
mov
cmpsl
adc
rcr
xor
iret
pop
mov
lahf
adc
and
jp
inc
or
push
ret
adc
popf
xor
int
jne
mov
fldenv
add
sahf
cmpsb
les
data16
xor
push
xchg
fmulp
ret
xchg
push
cld
lock
adc
jg
jno
adc
fisubrs
sub
popf
cmp
inc
inc
and
cmp
lcall
stos
inc
pop
in
testl
lcall
xor
add
push
pop
in
pop
jns
dec
enter
gs
es
mov
aaa
test
or
sti
lea
xchg
mov
nop
xchg
pop
push
out
mov
outsb
push
movsl
aam
pop
mov
inc
push
push
pop
cld
push
insl
pop
sbb
dec
xor
aaa
inc
pop
xor
outsb
dec
mov
cmpps
sub
pop
in
inc
into
jecxz
in
add
xchg
and
pop
push
fildl
xchg
mov
sub
and
das
dec
in
rcl
jmp
sbbl
fdivrp
insb
pusha
mov
mov
xor
sti
inc
js
or
test
jg
cmpsb
les
fisubs
faddl
push
iret
rcll
mov
ljmp
dec
pop
lahf
scas
rcrb
fadd
xlat
push
shlb
movsl
or
stc
push
or
popa
inc
in
add
mov
fisubrs
xor
jle
cmpsl
fdivl
stc
adc
test
inc
pmaxsw
js
in
testl
shlb
imul
jecxz
pop
inc
rcrl
or
roll
movsl
mov
in
mov
and
jbe
dec
into
adc
sub
add
xchg
jmp
adc
cli
icebp
mov
fcompl
adc
fsts
daa
orb
adc
outsl
jle
movsb
sub
push
fisubl
pop
add
pop
addr16
je
cli
outsl
or
scas
fdivrs
mov
mov
mov
sbb
shlb
rorl
pop
mov
jge
aaa
jmp
out
cmp
inc
pop
jbe
mov
xor
call
add
mov
ror
clc
inc
inc
or
shrb
adcb
jbe
and
xchg
aaa
lret
lret
unpcklps
xor
in
lds
es
pop
adc
lds
lods
or
fldl
push
cld
push
pop
insb
add
jmp
notl
pop
jne
arpl
push
aam
out
mov
and
shrl
test
xorb
cwtl
jno
xchg
jmp
insl
inc
cmp
xor
mov
jp
mov
pop
xchg
push
inc
push
or
fadds
notb
push
pop
pop
out
fcoml
adc
aad
cmp
push
out
mov
mov
dec
jb
mov
cltd
in
add
aad
jo
js
push
pushf
cli
shl
repz
mov
push
dec
insl
fidivl
scas
pop
loop
aam
xor
data16
das
nop
jno
test
push
inc
xchg
fnstsw
jecxz
and
mov
dec
cs
jecxz
jbe
inc
inc
into
or
sahf
inc
fcompl
js,pn
xor
dec
test
xor
lahf
mov
jg,pt
sbb
jecxz
ljmp
out
mov
xor
mov
mov
inc
ficoms
cmp
cmp
xor
add
pop
hlt
add
or
and
jg
adc
in
mov
subl
pop
in
push
xchg
xor
mov
sub
push
mov
mov
inc
nop
mov
xchg
cmp
mov
pop
add
mov
adc
shlb
fimuls
cmp
dec
xor
fwait
push
adc
jb
lods
rcl
adc
mov
mov
cmp
xor
and
fsubrl
adc
adc
cmpsl
jle
or
shrl
arpl
je
adc
and
inc
pop
subb
insl
sub
sbb
push
idiv
mov
adc
cmp
add
ret
pop
dec
dec
sub
mov
add
jle
nop
jp
inc
xchg
ds
outsl
push
mov
inc
dec
lds
pop
sub
call
pusha
add
mov
lods
mov
fcompl
out
je
stos
push
in
ja
push
icebp
push
mov
daa
add
test
repz
add
imul
stc
inc
orb
ret
rcrl
push
roll
mov
dec
std
mov
ret
into
rcrb
mov
mov
pop
icebp
lds
and
push
cmp
pusha
insl
mov
push
in
lret
testb
mov
inc
call
shll
sbb
pop
clc
jmp
sbb
rcll
gs
mov
clc
pop
sbb
out
lea
imul
inc
mov
dec
es
stos
or
bound
cmpsl
int3
pusha
push
lea
pop
xchg
shrl
ja
cmp
sub
jge
mov
jmp
or
jb
pop
xor
mov
mov
or
jmp
inc
int
outsl
dec
ret
cmpsb
inc
fcomps
test
rorl
rorb
push
dec
pushaw
addr16
inc
or
pop
mov
add
push
int
add
and
jge
loop
lahf
cmp
dec
push
jp
xchg
lret
inc
fdivrs
adc
adc
outsb
or
jbe
xor
dec
xor
mov
test
sbb
mov
pop
mov
gs
cmp
jle
rclb
xchg
clc
cmp
sti
icebp
inc
ds
adc
mov
or
idivb
int
jbe
outsb
imull
jle
gs
inc
shrb
push
call
sub
sub
cltd
hlt
movsb
push
sub
mov
or
jp
mov
test
push
sub
div
sbb
or
call
bndstx
mov
xor
dec
jne
rclb
lret
cltd
je
inc
inc
gs
fimull
xchg
cmp
jg
dec
jl
pop
cs
sub
int
out
rol
dec
test
mov
and
add
ja
mov
or
test
add
push
xchg
push
ret
xchg
mov
inc
out
movsb
mov
test
jns
or
push
mov
popf
cltd
mov
jnp
and
dec
pop
in
lods
and
cmp
pop
push
push
fldl
por
mov
dec
jo
inc
push
inc
cli
mov
push
pushf
js
mov
dec
leave
xchg
add
sub
and
sub
cld
inc
add
inc
nop
lahf
andl
mov
stc
jle
aaa
popf
roll
insb
sbb
das
push
push
insl
adc
and
adc
repnz
ret
mov
dec
bound
inc
fwait
rcrl
xchg
lods
shll
jl
adc
lcall
lcall
adc
repz
cmp
repnz
mov
or
add
addr16
ss
insl
mov
cmpsb
jmp
pop
cmpsb
cltd
push
test
mov
sub
xchg
sbb
xor
adc
jl
sahf
xchg
inc
mov
popf
dec
push
aam
outsb
adc
mov
sbb
pop
in
pop
addr16
rorb
jo
inc
cmpsb
cmp
xchg
bound
sbb
pop
mov
xor
dec
jp
roll
mov
in
sub
cmpb
jns
mov
movsb
int
fdivr
cmp
stc
call
enter
jle
or
mov
in
push
adc
fisttpll
dec
pop
addr16
addl
fnstsw
fiadds
jl
adc
dec
rol
ds
lea
roll
push
jl
imul
fdivrl
push
xchg
imul
rorb
cmp
and
and
mov
inc
fcomps
pop
adc
dec
call
repnz
push
fld
push
insl
and
or
fucom
iret
xchg
push
or
in
mov
les
ljmp
and
xchg
lret
cld
mov
out
cmp
mov
into
outsl
addr16
xor
jns
or
dec
fwait
mov
xor
popl
test
in
cmp
xlat
gs
push
rcll
std
adc
test
popa
xchg
mov
mov
push
xchg
pusha
shll
push
das
xchg
jg
divl
sub
pop
rclb
fiaddl
rolb
push
out
adc
xor
in
loop
aas
sub
cmpsb
shll
ret
test
pop
jbe
add
mov
adc
or
sahf
ficoml
pop
lret
enter
push
scas
and
shll
aad
push
push
out
and
ja
fwait
jbe
mov
xchg
xbegin
mov
add
repnz
cmp
adc
in
jp
cmp
pop
in
pop
lods
stc
subl
lods
ja
cmp
ja
jne
push
pop
add
je
pusha
popf
subb
cmp
sbb
mov
out
adc
lds
mov
or
jo
xor
mov
in
ficoms
and
push
fsub
sub
cmp
xchg
adc
pop
popa
sbb
push
cmp
cs
outsl
adc
paddw
or
punpcklbw
jg
mov
xchg
xchg
mov
repz
push
cmp
mov
fstl
stos
sbb
add
and
fiadds
rcr
pop
adc
xchg
shrb
movsl
hlt
cmp
hlt
xor
adc
pop
xor
test
sub
pop
outsl
fistpl
xchg
cmp
in
bound
lea
and
and
inc
data16
ds
subb
push
imul
dec
pop
jecxz
sbb
test
jnp
jbe
popf
daa
mov
scas
fcompl
add
mov
push
int
test
push
scas
cmp
test
sub
cmc
mov
inc
xor
mov
outsb
shrb
cmp
and
xchg
add
add
divl
adc
pop
ret
push
lods
or
fmull
cld
enter
clc
fisttpll
push
xchg
cs
xor
adc
push
adc
ja
xchg
rcll
aaa
lock
pop
and
sti
jne
push
fwait
pop
fdiv
lret
xchg
pop
out
jge
mov
pusha
out
push
xor
jns
leave
mov
aad
jp
inc
push
imul
test
mov
xor
fisttpl
xor
push
cmp
ja
scas
mov
sub
jl
inc
and
fldt
mov
fisubrs
jle
into
in
rcl
mov
ljmp
and
adc
sub
or
adc
or
pop
fs
or
orl
lret
inc
and
pop
mov
fistpl
call
in
mov
add
popf
es
mov
pop
fldenv
out
or
adc
mov
xor
das
pop
inc
pop
arpl
fstpl
jge
adc
pusha
in
cmpb
loop
push
into
push
add
test
adcb
mov
mov
iret
mov
pop
pop
test
push
in
lods
outsl
mov
mov
shrb
push
push
xchg
pop
sub
gs
ds
push
hlt
movsl
push
inc
rcrl
add
test
add
mov
inc
inc
sbb
aad
mov
in
dec
fldenv
cmp
test
gs
nop
inc
xchg
dec
fisttpl
mov
push
mov
iret
movsb
enter
lods
cmpsl
test
addr16
or
inc
xor
and
lock
xor
inc
ja
cmp
icebp
xchg
push
jb
rclb
dec
xor
cld
xlat
rclb
jnp
clc
jbe
scas
xor
add
jno
ret
cmp
mov
push
out
push
lds
mov
mov
pushf
dec
fiaddl
lcall
cmp
mov
nop
mov
jb
out
scas
pop
lods
sahf
jecxz
or
movsb
or
xor
mov
stos
jno
mov
in
pop
xchg
movsl
xor
inc
loopne
mov
ret
push
mov
pusha
ret
movsb
inc
insl
les
in
xchg
aas
dec
pop
movsl
repz
jae
cmp
in
cmp
mov
inc
movsl
into
lret
out
call
xor
in
adc
mov
xchg
cs
dec
xor
movsl
jp
stos
in
jecxz
inc
outsb
clc
xchg
mov
mov
cmp
inc
jg
ror
rorl
mov
sub
out
pop
stos
fyl2x
xor
jne
dec
xchg
fldt
inc
shll
mov
mov
xchg
inc
test
inc
out
out
shll
shlb
xor
jo
xlat
test
pop
lcall
jmp
xorb
mov
inc
xchg
add
xchg
jp
fsubrl
stos
dec
aam
inc
add
test
pop
out
sbb
mov
inc
out
mov
mov
push
inc
add
sbb
cld
push
pop
ret
cmp
in
out
xor
jno
push
aas
outsl
jp
insb
out
inc
lahf
and
push
pop
adc
pusha
mov
adc
mov
popa
in
mov
push
int3
sub
cwtl
xchg
xchg
sarl
and
xor
xchg
stos
or
popa
outsb
in
mov
lods
adcb
loope
adc
jp
xchg
lods
sub
shll
dec
loopne
rorl
shlb
push
fdivl
mov
adc
mov
cmpsl
fldt
test
test
cmc
lret
push
xchg
mov
das
mov
mov
inc
push
xor
sbb
fldt
ror
xchg
xchg
pop
dec
out
push
jno
xchg
shl
cwtl
xchg
mov
or
arpl
lcall
sbb
adc
out
lock
movsb
pop
neg
bound
adc
mov
mov
fidivs
ja
add
outsl
jg
scas
rol
push
lea
sbb
cmp
fstl
sub
add
inc
mov
mov
ret
mov
sbb
mov
nop
add
imul
inc
test
push
xor
out
sbb
lcall
jmp
les
jecxz
inc
xchg
in
loope
mov
pop
pop
cwtl
notl
sub
sarl
cmpsb
nop
neg
in
jle
mov
rcrl
push
xor
movsl
xlat
mov
jb
or
out
mov
add
xchg
inc
sub
out
pusha
inc
lea
add
cld
out
das
out
jp
or
push
scas
popa
sub
mov
sahf
dec
adc
add
popf
or
lret
add
and
mov
mov
out
mov
ret
mov
lock
pop
dec
mov
or
stc
inc
lds
out
es
shl
out
sbb
add
popa
std
inc
add
inc
inc
push
jae
dec
movsl
cmpl
dec
aas
dec
lods
in
pop
cmpsl
notl
fimuls
daa
mov
lods
js
add
popa
add
jnp
cmc
ljmp
neg
mov
stc
lcall
and
es
push
lods
das
xchg
scas
sbb
pop
inc
sub
ljmp
add
int3
popf
out
add
pop
inc
adc
js
in
xchg
fisubl
dec
stos
stos
push
aas
jae
adc
stos
enter
xchg
fisubrl
inc
fnstsw
inc
lcall
popf
aam
xchg
rol
std
aas
aam
jne
cmpsl
loop
push
stc
mov
sarb
or
shll
aas
es
shll
mov
jmp
sub
cmpsb
adc
popf
jge
out
xchg
ret
jle
pop
xchg
lcall
push
addr16
jne
aam
aam
mov
push
mov
in
mov
gs
lods
loope
data16
stc
lahf
iret
insl
sub
cmpxchg
shll
push
jb
mov
push
push
and
mov
stc
and
mov
neg
sbb
test
inc
repz
mov
cmp
pushf
mov
mov
mov
push
loop
imul
shll
mov
int
xchg
shl
mov
dec
pop
inc
roll
cmpsl
adc
daa
out
dec
les
xchg
sub
mov
sar
lea
mov
xor
ss
cmpsb
sbbl
pop
ss
mov
rcrl
mov
xchg
rolb
rcrl
addr16
mov
xchg
push
push
and
adc
jl
lods
sbb
pusha
and
mov
xor
or
dec
xor
ja
aam
xchg
pop
ret
in
movb
adc
jb
shl
push
mov
mov
mov
add
sub
mov
and
mov
sub
insl
mov
xchg
scas
loope
dec
jp
push
lock
adc
pop
shrl
cmp
mov
jg
les
hlt
xor
into
dec
pop
xor
add
fbld
push
inc
adc
xor
mov
iret
bound
je
push
and
push
fwait
cmp
jb
cmp
inc
push
add
xor
or
and
daa
mov
adc
out
pop
lcall
repnz
sbb
fisubrl
pop
sarl
push
mov
lret
fistps
dec
push
adc
mov
jl
add
pushl
sub
jo
xchg
ret
mov
enter
in
in
sbb
cli
push
adc
inc
imul
inc
cmp
and
arpl
out
cmp
or
add
ds
push
repz
loop
fisttpll
call
adc
lock
xchg
pushf
push
xor
dec
mov
nop
fimull
inc
or
mov
shll
sub
pusha
addr16
fsubrs
add
mov
aaa
hlt
jo
or
adc
xchg
lret
sub
cmpsb
add
rcll
rol
pop
inc
mov
out
mov
roll
mov
into
inc
stos
sbb
inc
shrb
ss
jge
mov
clc
pop
mov
cmp
mov
and
pushf
jno
or
lret
jno
iret
xorl
in
sbb
jb
pop
sub
and
pusha
xor
jp
inc
push
out
cmp
cs
jno
mov
or
test
add
pop
popf
pop
in
xor
cmpsl
jns
cmp
pop
aas
ficomps
in
sub
push
xor
out
mov
leave
mov
mov
xchg
roll
cmovno
pop
or
data16
sub
xchg
in
push
adc
cmp
xchg
inc
loop
int3
xchg
int
xchg
adc
test
in
inc
mov
cmp
sbbb
mov
sbb
aaa
push
mov
in
int3
shrl
aam
push
repz
xchg
cli
mov
mov
ret
dec
mov
xor
jae
push
dec
xor
repnz
std
mov
add
pop
into
cmp
test
shll
ret
mov
fldcw
ret
fidivs
jo
cs
or
rorb
push
notb
push
leave
cs
or
int
loopne
aas
dec
psrlw
hlt
out
pop
add
pusha
lods
xchg
nop
jno
mov
mov
mov
or
hlt
mov
in
ror
xor
cmovb
fstps
inc
mov
popa
xor
sbb
push
mov
pop
mov
sti
jo
aam
dec
mov
xor
cmp
sbb
dec
jns
mov
orb
das
ja
jecxz
pop
imul
scas
in
sarb
sub
dec
mov
pop
aas
out
leave
xor
fcmovb
test
jnp
xchg
popa
imul
dec
and
or
pop
xor
fdivrl
int3
loope
cs
orb
in
daa
inc
mov
inc
imul
push
mov
dec
push
adc
ficompl
xor
pop
push
loopne
popa
push
jne
bound
xor
cmpsl
mov
add
jmp
mov
repnz
adc
sub
ffreep
cmpsl
movsb
pop
in
inc
cmc
cmp
mov
paddusb
es
jno
push
stc
test
lret
cmp
mov
std
mov
push
jne
adc
jns
sub
xchg
rcrl
jg
sbb
pop
andl
iret
xor
ficompl
in
addr16
popa
push
xchg
cmp
cmp
rcl
jnp
test
adc
lahf
sar
fwait
insb
xchg
mov
sbb
cld
ds
rclb
outsl
lds
addr16
push
das
mov
jge
cltd
adc
test
xchg
pop
lahf
iret
sub
scas
mov
jp
cmovp
or
int
fbstp
test
icebp
dec
xchg
loope
inc
into
sbb
lods
add
sbb
xor
out
mov
fdivl
lock
in
dec
or
std
jle
and
sub
into
and
sub
mov
jecxz
push
sbbl
jg
repnz
ret
and
mov
lods
dec
mov
jb
adc
dec
push
dec
sbbb
leave
jp
adc
shl
fsubrl
mov
and
je
cmp
or
cmp
cmp
or
mov
and
or
sahf
in
xchg
cmp
int
cld
xor
jg
in
xor
ror
stc
das
inc
sti
cli
in
and
dec
js
lret
pop
push
mov
out
movsl
aas
inc
imul
rorb
sbb
mov
jno
xchg
loop
sahf
adc
lds
and
pusha
int3
jge
repz
in
negb
movsl
adc
jbe
push
dec
or
rorl
dec
ja
cltd
adc
dec
insl
jp
cmp
leave
push
pop
mov
fdivrs
mov
inc
pop
sub
sbb
iret
lahf
mov
and
lock
or
mov
ret
mov
aaa
add
and
ret
pop
adc
jp
xchg
sbbl
das
pop
xlat
inc
and
test
or
insb
lcall
adc
clc
push
xchg
dec
mov
sbb
cltd
jp
mov
aaa
stos
dec
and
cmpsl
pop
xchg
pop
jno
and
stc
out
je
jle
inc
pop
clc
mov
in
leave
push
mov
cld
dec
adc
sub
mov
faddl
jmp
mov
int
pop
fcoml
xchg
data16
xor
outsb
add
out
sbb
xchg
jnp
loope
push
cltd
lock
sub
scas
mov
imul
push
das
jle
sub
add
sbbb
mov
jg
mov
dec
sbb
lea
sub
jno
jmp
add
add
mov
nop
xor
xor
fs
dec
scas
inc
dec
push
dec
xor
xchg
xchg
not
dec
dec
adcl
shll
and
out
mov
test
dec
mov
push
mov
out
sub
outsb
in
lcall
in
cmpsb
testb
das
jge
rcrb
leave
cmp
jb
shlb
push
lcall
add
in
fimull
or
leave
cld
mov
mov
add
jmp
cmp
mov
les
fidivrs
ja
insl
les
cmpsb
push
inc
stos
sub
mov
loopne
sub
add
call
xchg
push
nop
mov
out
mov
ret
out
xchg
sbb
and
decb
pop
mov
adc
mov
clc
inc
aaa
jg
fimuls
or
pop
es
sub
inc
xchg
mov
or
cmp
mov
fiaddl
rcll
sti
sti
out
mov
dec
push
pop
jnp
cmp
xor
jne
insb
jno
xchg
loope
cmp
stc
pop
aas
mov
xor
lock
stc
push
dec
shll
mov
xchg
in
lock
push
xchg
jle
dec
adc
xor
into
sub
ja
int
cmpsl
adc
pop
jecxz
push
jp
ret
xor
loop
lods
sub
jecxz
ja
adc
xor
out
pop
arpl
inc
mov
mov
mov
mov
adc
nop
addr16
xlat
xor
fwait
mov
inc
mov
popa
pop
jno
add
dec
push
dec
mov
xor
rcll
in
sbb
pop
inc
js
add
dec
mov
add
jl
in
pop
popa
shll
sub
inc
lea
pusha
inc
adc
push
mov
jecxz
cmp
inc
push
or
mov
and
mov
jmp
inc
mov
mov
inc
mov
xor
jae
outsl
xchg
sbb
adc
inc
inc
rorb
sbb
mov
lods
adc
lret
out
daa
xchg
push
adc
and
icebp
sahf
ljmp
fisttpl
push
xchg
fstpt
out
orl
adc
inc
int
sbb
jecxz
adc
stos
push
cli
xchg
push
cmp
cli
int3
xchg
xor
jno
xchg
mov
popa
jae
cli
inc
dec
push
adc
cwtl
pop
mov
and
jne
outsb
cmpl
das
pop
cwtl
js
mov
mov
xor
shll
rorl
pop
test
xlat
jmp
mov
cld
insb
jg
pop
fcmovu
cwtl
in
pop
xor
flds
into
int
mov
xor
cmp
popf
incb
shlb
repz
pop
leave
jns
add
mov
repnz
pusha
popa
push
mov
or
jle
repz
and
lds
mov
enter
pushf
je
mov
and
cli
cmc
pusha
pop
cwtl
mov
mov
in
jmp
mov
mov
push
rclb
add
or
ss
jmp
inc
mov
shrl
in
sub
jo
incb
nop
xlat
aas
sub
jne
xchg
mov
loop
js
cmp
iret
cmovle
in
aam
les
push
faddl
adc
arpl
movsl
test
outsl
js
lods
jp
xchg
dec
pop
xchg
iret
arpl
in
jge
ret
push
inc
stc
pop
mov
inc
sbb
and
xchg
fldl
scas
and
jmp
mov
int3
enter
outsb
jl
dec
dec
in
mov
mov
push
or
fcomip
and
add
and
lods
into
inc
lea
jg
jns
push
rorl
xchg
adc
push
and
stc
mov
aad
push
and
stos
sbb
loop
imul
mov
jmp
mov
fsubl
sbb
sbb
push
jecxz
xlat
xchg
mov
sub
or
jg
in
imul
outsl
xchg
adc
and
push
or
sub
cltd
enter
cmp
cltd
scas
shll
jg
cmpsb
push
sahf
scas
fldt
lcall
and
test
daa
jb
outsl
mov
mov
fdivrs
ljmp
mov
in
push
aad
int3
xor
dec
imul
mov
xor
dec
mov
enter
xchg
dec
cmc
sub
mov
cmpsb
mov
bound
ja
jmp
sub
adc
xlat
loop
lods
pop
jecxz
inc
adc
mov
sub
mov
mov
test
push
jb
ds
imul
sahf
jmp
xchg
push
cmp
cwtl
sbb
jb
xor
xchg
cmc
push
fisubrl
mov
out
add
jmp
adc
and
imul
sub
mov
push
push
push
pop
ss
rorl
movsl
xor
shll
into
push
adc
scas
icebp
and
inc
xchg
jo
icebp
std
adcb
jo
add
adc
adc
and
mov
nop
insl
mov
pop
jbe
inc
into
dec
pop
pop
cmp
gs
int3
xchg
pushw
subl
pop
int
movsw
int
popf
div
cltd
test
xchg
lcall
pop
out
imul
mov
sub
cs
movsl
repz
out
inc
enter
fnsave
mov
fiaddl
pop
out
daa
push
les
lret
jg
inc
xchg
data16
sbb
popf
mov
push
or
rep
adc
adc
popf
sub
insl
andb
mov
xchg
fwait
pop
scas
movsl
push
ljmp
idiv
fs
add
fists
out
movsb
cmc
das
sbb
and
out
or
mov
jl
into
loopne
movsb
push
lret
mov
outsb
nop
loop
mov
cmc
mov
push
cvttps2pi
insb
bound
mov
mov
enter
inc
repnz
stos
add
das
in
int
mov
scas
push
lea
lcall
jno
mov
lret
lret
or
mov
xorb
add
enter
jecxz
cld
sub
push
mov
mov
movsl
fisttpl
lods
sbbl
data16
insl
testb
ds
cs
pop
int3
adc
cmc
push
loop
sbb
shll
stc
imul
repz
xor
test
mov
idivb
cld
push
dec
mov
insb
xor
clc
aas
adc
add
push
pop
and
pop
scas
sarl
sbb
aam
mov
cmpsb
scas
adc
mov
ret
test
push
xchg
xor
cmp
jg
jnp
fcoml
mov
test
mov
mov
cli
push
pop
les
push
movsl
sbb
cltd
xorl
lahf
push
out
jno
sub
fidivrl
jmp
jg
aad
fwait
stos
movsl
xchg
ja
and
cwtl
mov
cs
and
pop
or
movsb
lahf
inc
enter
pop
roll
gs
adc
or
test
stos
or
into
xchg
int
jns
cwtl
nop
push
xchg
lock
add
inc
int
ret
inc
sub
imulb
mov
fiaddl
test
add
andb
xor
or
repz
aam
out
jge
cmp
adc
ds
outsl
push
lret
xchg
cmp
xor
xchg
push
xor
mov
xchg
add
dec
in
xlat
cmp
out
in
add
stc
int
in
jle
into
mov
push
xlat
mov
mov
push
push
popf
pop
arpl
inc
repz
pop
inc
add
sbb
ds
inc
inc
inc
testl
adc
sbb
repz
and
cli
xchg
jle
mov
pop
xchg
xchg
cmpsl
mov
and
int
sbb
test
dec
push
xchg
cmp
xchg
shlb
jb
clc
pop
int3
into
in
dec
inc
insl
mov
loopne
push
jmp
add
fldcw
push
imul
popa
push
cmp
daa
mov
dec
adc
xor
cmc
cmpsl
rolb
dec
mov
pop
rorb
sbb
gs
cmp
lea
add
jge
adcb
xor
push
aaa
loopne
mov
insl
inc
mov
les
outsl
mov
xor
fimuls
leave
mov
bound
shl
xchg
mov
mov
leave
js
inc
sbb
adc
mov
jo
mov
lahf
pushf
sbb
testb
sub
push
in
fdivs
sbb
fdivs
cltd
outsl
jmp
xor
and
xchg
in
cmp
arpl
or
aas
test
inc
insl
ficompl
cmpsb
mov
xor
jns
ljmp
sub
addr16
lock
fxch
mov
imul
repnz
mov
scas
xor
mov
pop
mov
pop
push
jl
xchg
in
mov
mov
mov
or
cmp
pop
mov
pop
jns
push
js
xor
sbb
adc
and
lods
leave
int3
test
int3
jnp
pop
xchg
add
cmp
test
pusha
dec
dec
inc
pusha
jg
pop
dec
push
xor
xlat
clc
xor
test
or
ficoms
add
xlat
cmpsl
insl
loope
sub
mov
add
mov
cmp
std
cmpsl
xchg
and
cmpb
mov
adc
dec
inc
mov
loope
les
cld
push
js
jl
xchg
insl
sbb
inc
xchg
sbb
mov
mov
test
cmp
aad
aaa
lods
mov
xchg
dec
shl
add
mov
mov
addr16
mov
adc
shrl
lds
les
cmpb
mov
jle
cs
out
mov
sbb
xchg
mov
push
xchg
xchg
pop
jmp
mov
ret
fwait
cmc
imul
repnz
dec
out
add
scas
xlat
mov
sbb
xchg
add
and
test
pop
mov
xchg
iret
mov
jle
sbb
enter
jns
push
pop
ret
insb
mov
mov
push
iret
jg
xchg
inc
dec
inc
push
push
sbb
and
fistl
inc
cmp
popa
inc
dec
lock
and
inc
adc
aas
pop
repnz
xor
repz
in
orb
push
js
nop
addr16
cmp
jne
addb
jae
add
mov
ds
mov
shlb
lret
ret
or
xorb
mov
push
push
and
xchg
mov
push
push
xor
shrl
les
nop
ret
imul
inc
push
daa
dec
fwait
mov
cld
in
aaa
sbb
ret
or
jmp
mov
pop
push
xchg
sbb
dec
lcall
inc
inc
stc
incb
mov
cmp
xor
test
sti
sbb
mov
or
sub
lret
cmp
ss
push
ficoms
pop
dec
aas
or
scas
les
rcl
sarb
xor
dec
xchg
adc
loope
test
cmp
dec
and
testb
mov
add
xor
sti
movsl
xchg
jecxz
lods
subl
jae
test
in
fdivrs
pop
pop
movsl
dec
fwait
mov
cmp
rcrb
sbb
inc
outsb
mov
gs
dec
fisubrs
ljmp
stos
ja
inc
and
pop
xchg
fidivl
roll
orb
mov
gs
jp
lods
fildl
inc
roll
or
jle
jno
insl
jle
and
push
clc
fmul
push
sbb
jg
in
push
std
xchg
inc
or
rcll
rol
inc
jb
push
fsubs
ss
in
imul
call
ljmp
dec
sub
loop
jecxz
inc
in
mulb
pusha
cmp
jne
mov
push
xchg
stos
dec
pop
cli
aad
cli
popa
xor
ret
xchg
stos
pop
mov
jmp
shll
dec
add
faddl
fadds
mov
inc
mov
push
insb
sar
jecxz
or
pop
pop
push
mull
jbe
and
daa
mov
sbb
out
mov
rcr
inc
jg
push
mov
push
addr16
mov
jmp
dec
mov
popl
fdivrs
xchg
push
sbb
sti
adcl
ret
mov
dec
outsb
sub
push
sar
push
outsb
inc
cmpl
mov
adc
hlt
pop
push
sti
lods
mov
sbb
xchg
or
es
xor
cmp
mov
repz
and
pusha
inc
stc
mov
sahf
lods
xchg
mov
in
or
outsb
test
fwait
pop
push
dec
add
mov
jnp
xor
cld
sub
pop
mov
movl
adc
dec
outsb
inc
jg
dec
sub
xchg
in
insb
sbb
pop
adc
xchg
in
mov
outsb
adc
outsl
shll
scas
dec
je
sbb
mov
mov
and
cwtl
scas
mov
jb
sub
nop
xchg
jecxz
pop
ret
out
stos
cmp
push
leave
popa
mov
push
mulb
out
stc
push
xor
push
enter
mov
jo
mov
repnz
xchg
dec
mov
outsb
sbb
fnstcw
ds
popf
jg
sub
out
nop
subl
add
pop
mov
int3
stos
push
fsubrl
jle
adc
jg
int
stc
ud1
ljmp
jns
imul
add
roll
mov
in
ss
cmp
test
lods
lcall
xor
subb
push
ds
and
xchg
cmp
pop
stos
mov
out
jns
pusha
push
mov
lea
mov
mov
int3
cmp
orb
add
addr16
push
adc
adc
dec
mov
mov
xor
or
faddl
sahf
out
pop
loop
cmp
sub
sbb
es
xor
pop
fcompl
repz
je
lea
pop
cli
out
push
dec
ljmp
icebp
pop
jecxz
shll
cmpsb
xor
adc
xchg
xlat
sub
mov
sbb
sti
jg
xchg
pop
insb
sub
out
fstpl
xchg
and
pop
mov
aas
add
push
inc
aas
sub
pop
mov
rcrl
rcll
jae
out
and
mov
jp
andl
pop
and
dec
adc
fcmovb
add
out
test
mov
cmp
ret
add
cmpb
loope
mov
lcall
sub
outsb
sub
into
add
ret
push
mov
push
inc
push
add
pop
call
mov
push
dec
push
jno
lret
outsb
cli
test
inc
popa
fwait
xchg
dec
cmp
xchg
mov
xor
addr16
xchg
insb
xlat
test
out
push
mov
jle
mov
bound
mov
push
cmp
pop
sbb
icebp
les
es
pop
scas
test
jno
push
gs
scas
pop
test
xchg
xchg
push
les
outsb
test
push
sbb
jbe
ljmp
pop
cld
subl
aam
repnz
ret
xor
orb
sbb
adc
imull
xor
ja
add
xchg
icebp
lret
movsb
popf
ss
hlt
jno
and
adc
sub
not
inc
ret
xor
ret
loopw
sub
push
mov
inc
xor
call
inc
mov
add
dec
lock
sti
pop
and
fbstp
inc
xchg
inc
push
mov
dec
sbb
arpl
adc
cmp
mov
ret
dec
push
jbe
out
sbb
cld
mov
sub
or
scas
outsb
sbb
movsl
mov
cli
dec
mov
test
xor
dec
leave
or
dec
repz
sbb
add
sub
adc
aam
aas
scas
xchg
inc
or
and
cltd
in
out
lods
sbb
icebp
sbb
jae
shlb
ud1
adc
or
push
mov
fwait
loope
sub
pop
push
mov
dec
pop
jbe
sub
aam
cwtl
ficoms
out
fidivs
xor
loope
xchg
filds
out
adc
or
jp
sbb
inc
test
imul
repz
into
dec
xor
mov
xchg
fwait
shlb
cmpsb
xor
int3
andb
int
cmp
dec
sbb
push
sub
inc
jne
mov
lock
gs
scas
int
mov
xchg
rcrl
sub
and
push
roll
stos
nop
mov
mov
jns
cltd
inc
pop
mov
adc
mov
stc
jmp
xchg
cmpsb
cmp
mov
movq
sub
cmpb
sub
xchg
mov
or
jp
add
pusha
aas
mov
mov
mov
jns
mov
insl
or
lret
fsubl
inc
mov
cwtl
mov
push
push
jecxz
enter
mov
pop
shl
cwtl
mov
push
pop
lods
sub
xor
inc
jg
into
cmp
cmp
or
aam
xchg
mov
xchg
jecxz
loopne
fs
mov
push
inc
or
jge
jp
push
dec
and
fsubrs
ss
stos
adc
fisttps
shrl
sbb
xchg
jge
loopne
enter
fst
mov
inc
ja
jbe,pn
mov
stc
sub
jno
ss
out
nop
call
sbb
les
aam
push
repz
pop
std
test
das
jno
sub
test
cmp
inc
scas
shr
mov
dec
rcrb
pop
inc
and
insb
into
mov
lods
jg
mov
es
ret
cmp
mov
out
sbb
popf
xchg
lret
and
mov
insl
cli
cmp
cld
fbld
inc
cwtl
mov
sbb
prefetch
or
and
mov
xchg
mov
roll
lock
and
movsl
hlt
inc
mov
mull
loope
cmpsl
icebp
push
mov
and
repz
xchg
mov
les
push
jae
adc
adc
inc
sbb
paddusw
out
bound
js
jns
inc
shll
inc
js
jge
pop
loop
cmp
loop
pop
xchg
adc
sub
je
mov
mov
and
aam
andb
lds
stos
scas
bnd
xlat
shrl
in
pextrw
jle
adc
mov
mov
rol
test
xchg
divb
lret
jns
cmp
aam
inc
test
dec
inc
xchg
inc
into
addr16
push
aas
dec
lods
ret
mov
or
mov
inc
adc
les
in
mov
mov
je
adc
ljmp
inc
push
sub
daa
nop
inc
pop
pop
inc
cli
notb
prefetchwt1
shrl
add
fistpl
push
dec
jge
mov
xchg
inc
push
cmp
mov
jnp
xor
xchg
fimuls
ret
xchg
mov
or
xchg
sbb
push
mov
or
inc
sbb
adc
test
mov
xchg
jge
lahf
or
pop
pop
adc
lods
add
test
pop
xor
repz
cmp
loopne
adc
outsl
jbe
jno
leave
xor
faddp
lds
sti
cli
out
adc
push
enter
mov
outsb
pop
aam
and
insb
pop
insl
popf
popa
fmuls
int
sbb
add
data16
fldcw
pop
ds
popf
dec
jecxz
pop
jp
dec
jl
je
mov
mulb
jl
jno
mov
or
pop
dec
inc
pop
movsb
and
lds
frstor
jnp
jbe
mov
rorl
cli
push
inc
lahf
rcrb
xchg
les
adc
sbb
scas
insb
push
sti
push
mov
mov
sbb
repnz
fsubrs
aam
bound
dec
cmpsl
push
popl
cmp
fxch
aaa
bound
movsb
cs
jg
shll
movsb
xor
test
lahf
insl
mov
pop
mov
sbb
cs
fwait
repnz
inc
loope
subl
adc
jne
dec
sar
pusha
mov
pop
inc
notl
dec
pop
addl
dec
mov
arpl
push
and
xor
test
inc
rorl
cmp
shrl
cmp
subb
movsb
call
lods
pop
sub
addb
mov
mov
lahf
orb
ja
sar
mov
std
jnp
pop
sbbb
int3
test
push
in
sub
rolb
sub
out
pop
aam
xchg
push
adc
fiaddl
push
mov
int
jge
mov
enter
shll
sahf
call
adc
sbb
in
mov
out
push
in
and
mov
popf
lret
sub
shl
mul
and
pop
push
adc
mov
and
add
aad
mov
sbb
iret
lock
and
test
dec
popa
insl
test
ret
push
sbb
adc
aad
rorl
jecxz
and
int
int
faddl
jl
adc
push
pop
cmp
jb
adc
or
jle
lods
ret
ds
fwait
push
mov
mov
adc
js,pn
repz
jo
inc
adc
push
mov
xor
jb
inc
leave
les
pusha
or
sahf
loopne
cmp
xor
and
push
test
xor
dec
fldl
repnz
aad
repnz
mov
mov
push
sbb
adc
mov
mov
mov
xchg
mov
aam
sub
in
or
dec
push
rorl
mov
adc
popa
cmpb
mov
add
mov
push
std
or
cmp
sti
add
mov
push
xor
inc
pop
pushf
mov
rolb
leave
jge
add
xor
mov
lods
jecxz
mov
inc
addr16
sbb
add
addr16
popa
sub
loop
push
aam
notb
lds
jnp
lods
popf
imul
out
sti
cmc
jecxz
aad
scas
das
push
std
lcall
fwait
icebp
in
add
bound
xor
mov
je
mov
sbb
imul
cmc
xchg
test
push
push
xchg
lret
xchg
xchg
and
shll
fildl
shrb
mov
fs
in
notb
push
test
sahf
nop
test
mov
fs
cltd
cmp
stc
jge
lods
int
mov
inc
jbe
mov
pop
cltd
mov
lahf
les
stc
into
dec
xchg
fsubs
inc
and
scas
lds
and
outsb
ds
sub
setae
jp
pop
aaa
jae
jo
int
sub
lahf
stc
iret
stos
mov
insl
push
mov
out
jnp
test
xorl
pop
mov
cmp
or
es
add
mov
mov
cmpsl
testb
test
rolb
adcl
leave
xlat
jecxz
inc
addr16
pop
fidivs
cld
lods
std
push
push
mov
adc
in
xchg
mov
fisubs
pop
dec
in
or
into
ja
outsb
pusha
jo
xchg
xor
insl
push
cmpsl
into
add
sub
push
nop
sahf
fnsave
test
add
xchg
dec
jns
push
cmp
shll
mov
mov
fxch
out
sbb
pavgw
cld
jmp
je
js
fsubl
scas
lods
scas
lods
sub
test
repz
cmpl
btr
mov
cmp
les
inc
aas
xchg
jmp
or
mov
jp
ret
shll
push
test
add
mov
inc
pusha
fisubrl
int
xchg
cli
ss
negb
add
push
cli
popf
fucomip
sbb
test
lcall
inc
and
adc
mov
cli
inc
pop
outsl
inc
or
pop
or
enter
cltd
shlb
cmp
adc
adc
jo
loopne
inc
pop
xor
xor
rolb
mov
mov
daa
cmpsl
mov
test
xchg
pop
imul
sbb
jecxz
adc
jmp
and
lods
arpl
xchg
push
inc
arpl
sbb
cmp
pop
out
cmp
push
push
cmp
mov
pop
mov
fidivrs
add
fcoml
les
les
out
pop
nop
mov
hlt
mov
aas
mov
leave
cli
cltd
jae
cmpsb
dec
dec
pop
jne
pop
jge
jae
outsb
and
pop
adc
scas
ficoms
movsb
insl
out
sar
adc
xchg
jle
xor
push
mov
mov
adc
rolb
cmp
or
inc
cwtl
scas
in
pushf
clc
cs
lock
mov
test
inc
adc
shrl
jae
dec
pusha
and
xchg
xchg
icebp
outsl
sbb
jecxz
mov
mov
fsub
fs
push
mov
out
call
out
in
adc
lock
inc
outsl
cmp
inc
out
add
mov
sub
inc
cmpb
lods
fsubrp
enter
lock
xor
mov
into
push
xor
add
pop
jbe
push
lods
xor
daa
stos
pop
mov
mov
insl
hlt
pop
sub
rclb
ret
and
lock
test
xor
xchg
adc
mov
es
test
fadd
in
ffreep
mov
jl
lahf
mov
ret
jb
loop
pusha
jnp
mov
push
xor
mov
out
rolb
cld
test
xchg
movsb
daa
aad
shlb
xchg
xor
mov
inc
stos
cwtl
mov
xchg
andl
sbb
lcall
xchg
xchg
mov
xorb
ret
lahf
add
inc
sbb
jns
and
xchg
les
inc
aam
jb
filds
mov
rcrb
or
mov
jae
pop
mov
sahf
xchg
xor
arpl
rcll
cli
push
add
or
scas
popf
jl
outsl
xorl
mov
xor
pop
add
fnop
pop
cmp
int
and
stc
lahf
jns
sbb
into
mov
lods
stos
ret
fsubrl
pop
fsubl
loope
fists
push
and
mov
add
push
xor
in
xchg
inc
scas
out
dec
subl
insl
inc
push
jecxz
jg
or
movsb
jp
xchg
mov
mov
jno
ljmp
adc
inc
icebp
cmp
cmpsl
out
test
jb
push
dec
in
pusha
push
popf
inc
mov
subl
sbb
jmp
andb
int
inc
pop
int
or
jge
ljmp
sbbb
mov
pop
aas
push
stc
pop
dec
mov
popa
ljmp
lock
mov
aaa
or
xor
mov
adc
leave
or
test
xchg
mov
scas
push
mov
sub
push
clc
int
shll
jns
scas
lods
test
sub
mov
wrmsr
into
push
push
cmpl
leave
push
les
stos
stc
aad
out
arpl
outsl
mov
xor
sub
sub
mov
lret
clc
mov
dec
lock
movsl
dec
test
lret
ror
push
sbbb
hlt
add
sti
adc
jb
jnp
popf
pusha
insl
sbb
push
fstl
xor
les
sub
push
fistpll
ljmp
push
mov
dec
rcll
mov
fimull
fiadds
loope
enter
inc
jl
mov
loop
jge
pusha
cmp
faddl
adc
js
ret
jecxz
mov
std
mov
and
popf
gs
jnp
adc
psubsw
mov
outsb
shlb
gs
out
xor
xchg
cmp
out
loopne
daa
fadd
pushf
pop
xchg
mov
inc
out
pop
push
xchg
push
lret
mov
push
out
push
inc
jae
mov
sub
dec
stc
xor
shl
xchg
dec
fwait
xor
fs
addr16
xor
xor
stos
ret
inc
imul
pop
and
cmp
popf
lret
xor
mov
push
xor
imul
inc
xchg
les
mov
jle
pop
sub
or
ss
imul
mov
mov
inc
push
rcl
mov
mov
dec
xor
lods
jnp
les
stc
or
test
and
pop
cmpsb
test
mov
pushf
in
loopne
push
sarb
cmp
sub
xchg
mov
fldl
sub
xchg
dec
xor
cwtl
test
sbb
jecxz
or
test
pop
sbb
scas
inc
dec
and
mov
pusha
loope
addr16
inc
xor
jbe
xlat
shl
test
push
test
jle
cmovnp
mul
xor
insb
push
int3
out
rcrb
hlt
lods
in
mov
and
pop
mov
mov
fildl
pop
xchg
sub
mov
js
jp
xchg
out
xchg
dec
xchg
pop
inc
inc
ficoml
divb
cmpsb
mov
jecxz
out
lret
xchg
dec
ret
fisubrl
imul
ret
sub
roll
xchg
and
jge
xchg
and
and
mov
jmp
icebp
shlb
sbb
xor
mov
aam
fwait
push
test
das
std
nop
into
in
cli
cmpsl
add
mov
and
dec
dec
adc
cwtl
mov
inc
mov
inc
mov
cmp
shlb
sbb
cmpsl
divb
data16
into
cld
pop
stc
dec
adc
push
mov
xchg
mov
loopne
aas
or
in
mov
add
mov
repnz
jne
jge
mov
adc
xor
jg
xor
aaa
jbe
nop
push
lahf
push
loopne
lret
into
adc
mov
test
loop
fisubl
clc
xlat
roll
dec
cltd
fisubl
jb
ds
jmp
inc
inc
mov
in
sub
xor
cli
movsl
rcl
lcall
sub
or
or
das
pop
sbb
cmovbe
or
mov
mov
cmp
fsub
loop
sub
stos
roll
outsb
sbb
das
push
fiaddl
push
cmp
sbbb
add
ds
mov
lock
lock
lea
xchg
mov
and
repz
push
inc
jo
lret
movsb
xchg
push
inc
ret
push
pop
scas
dec
roll
flds
aam
jbe
pop
roll
push
sbb
and
cmc
dec
fmuls
ss
sbb
jns
repz
es
stos
into
xchg
adc
push
jae
idiv
adc
dec
cltd
dec
scas
jmp
imul
mov
inc
cwtl
in
xchg
leave
xchg
cmp
cmp
xchg
mov
movsl
ja
mov
popa
iret
cmp
cmp
ret
subl
sub
cs
jge
sbb
pusha
in
ficoml
lahf
sahf
clc
stos
xchg
sahf
add
cs
xor
fildl
push
mov
mov
popf
mov
pusha
lahf
xor
mov
push
daa
push
bound
inc
icebp
loopne
lds
repz
push
in
out
outsl
adc
jnp
push
hlt
sub
out
sbb
inc
sub
loopne
test
mov
jns
cmp
inc
cmp
jne
bound
push
inc
test
insb
inc
dec
inc
jnp
lods
shl
inc
or
push
andb
sahf
inc
cmp
int
pop
clc
loope
aam
sub
mov
adc
in
fidivs
xchg
sbb
sbb
mov
or
cmp
fstl
ret
adc
ja
fsubs
dec
pop
sarb
dec
fcoml
inc
xchg
cs
inc
sub
fisttpll
jmp
add
test
fxch
fmuls
push
lret
cld
jp
cmp
xor
cmpsb
xchg
dec
sti
insb
mov
jo
inc
into
jno
sub
sub
sub
and
sub
push
sbb
pushf
push
pop
popf
mov
das
dec
push
jnp
xchg
arpl
xor
popa
jecxz
jb
mov
sbb
add
fwait
mov
inc
mov
stos
mov
add
rcrl
jb
pop
push
in
sub
jnp
sahf
sbb
mov
or
xchg
xchg
pop
lock
mov
push
lahf
add
add
adc
je
aam
mov
pop
mov
sbb
mov
xchg
inc
cli
add
test
push
xchg
sbb
push
aam
stc
push
xchg
out
pop
dec
pop
in
ja
loopne
mov
in
lret
shrl
mov
pop
xchg
sbb
jmp
out
pushf
xor
dec
pusha
mov
lods
fdivl
inc
aad
push
cltd
pusha
scas
cmc
dec
lret
mov
add
mov
mov
inc
faddl
leave
aam
stc
lods
jmp
scas
or
hlt
push
jecxz
rcl
stc
jge
mov
xchg
pop
push
cmp
arpl
push
push
imul
push
decb
mov
mov
pop
mov
lahf
mov
sub
adc
test
adcb
xchg
jl
or
rclb
jl
into
sub
jecxz
fwait
sbb
bound
outsl
ret
mov
xchg
push
inc
nop
pop
jo
pop
and
and
pop
mov
and
adc
outsl
inc
lods
sahf
call
add
xor
jmp
les
sub
stc
call
loop
adc
sub
jle
lret
popa
into
in
stos
adc
call
adc
loopne
push
inc
jl
es
mov
pop
xchg
lea
shll
dec
push
shrl
lcall
push
sbbl
xor
and
cmp
mov
inc
adc
pop
leave
pop
fstl
sub
inc
sub
push
dec
rorb
fcmovnb
lret
xchg
pop
mov
test
xchg
sti
int3
sbb
int3
jg
pop
pop
out
jb
inc
mov
mov
sbb
addb
cmpsl
stc
bound
inc
ret
push
andl
stos
jo
xchg
rcl
push
mov
cmpsl
adc
test
fisttpll
xchg
pop
inc
add
sbb
push
pop
pop
in
jmp
ss
lcall
shl
stc
pop
pop
enter
outsl
or
ss
push
mov
add
or
sahf
int3
xlat
pop
add
pop
or
inc
and
push
or
jae
pop
loope
cli
mov
or
cmp
xchg
add
imul
push
xor
sbb
dec
clc
xor
pop
mov
lcall
push
mov
aaa
aaa
stc
xor
add
dec
lock
cmp
dec
ret
mov
sahf
adc
subb
test
fmulp
inc
pop
mov
sub
jns
stos
cli
jno
mov
fnstsw
cmp
adc
mov
inc
ja
leave
es
adc
pop
push
sbb
orb
arpl
mov
inc
or
jp
dec
dec
fcmovne
mov
mov
jge
inc
std
int
mov
adc
inc
rcrb
push
dec
out
dec
setno
movsl
jecxz
stos
outsb
sbb
mov
outsb
mov
and
mov
enter
pop
cmp
roll
sbb
loop
xlat
lahf
and
push
movsl
and
mov
xor
les
adc
subl
roll
icebp
jecxz
divl
xchg
shrl
mov
lcall
mov
dec
lea
or
xor
iret
sbb
dec
mov
cld
rorl
cmp
shll
mov
stc
adc
shll
test
int
rcll
icebp
push
xor
cs
mov
cs
mov
mov
pop
mov
pop
adc
scas
sbb
setle
in
fsubrs
ss
lret
lock
sbb
inc
jge
push
or
jg
and
dec
iret
adc
pop
gs
jno
push
jmp
fnstcw
mov
jns
and
fiaddl
fsubrs
xor
mov
rcl
popf
or
or
jns
and
fdivl
mov
mov
sub
repz
inc
ss
mov
mov
push
dec
icebp
jmp
daa
mov
mov
adc
xchg
jle
jmp
mov
dec
daa
idivl
inc
mov
pusha
push
inc
mov
and
jg
xor
xor
into
mov
sub
aam
push
gs
inc
scas
cs
dec
aad
xor
stc
iret
add
add
lds
daa
fisubrl
sub
xor
inc
adc
stc
push
inc
sbb
lcall
addb
mov
jle
mov
push
aaa
adc
fmuls
pop
mov
inc
lods
add
clc
add
cld
test
sbb
pop
out
stc
aad
imulb
jp
adc
rolb
ljmp
popa
repnz
lahf
cmp
xor
pop
inc
jg
add
add
xor
lods
aam
mov
stc
and
add
dec
adc
xchg
sahf
sub
sbb
aaa
les
popa
push
enter
adc
inc
ret
push
outsb
rcl
jecxz
mov
loop
bound
push
fsub
mov
mov
jg
sub
bound
es
ljmp
stos
popa
push
sti
sahf
movsb
inc
clc
test
notl
xor
mov
int
push
ds
and
shlb
xor
lock
xor
mov
test
push
inc
popf
sub
pop
cli
sub
cmc
cmp
ljmp
or
sub
out
xor
xor
cmp
into
rolb
jno
test
sub
cs
push
inc
xor
cmp
push
xor
iret
fdivs
or
ljmp
addr16
faddl
inc
xchg
cld
jl
mov
outsb
andl
mov
push
cwtl
or
add
push
popf
test
jl
adc
sub
or
insl
sahf
rorb
ret
mov
xor
and
cwtl
cmpsl
pop
push
loope
mov
cmp
lods
cmpl
out
sbb
popf
fidivs
sub
cmp
ret
mov
mov
inc
xchg
test
lahf
cmp
cmpsl
shll
or
sbb
cli
std
jb
popf
inc
add
mov
cli
jb
sbb
int
push
xchg
cld
lods
push
pop
xchg
mov
sahf
outsl
jns
leave
mov
sbb
iret
xchg
and
monitorx
add
jb
cmp
xchg
cmp
mov
add
test
xchg
inc
push
in
mov
xor
popf
and
movsl
adc
xchg
fadds
call
dec
cltd
dec
sbbb
push
cmp
mov
mov
aam
gs
adc
fiaddl
sub
adc
inc
repnz
mov
shl
clc
std
or
push
inc
out
mov
dec
leave
and
lds
jne
test
sub
add
mov
mov
or
int
inc
pop
inc
dec
mov
fistl
pop
lds
jb
pop
xchg
outsb
mov
inc
add
test
add
les
fadds
add
test
dec
mov
adc
ret
xchg
test
aas
push
cmp
cltd
popa
in
rcrl
imul
push
std
iret
aas
pop
mov
xchg
mov
or
mov
mov
insb
adc
mov
enter
cmc
lock
popf
or
pushf
inc
mov
dec
fstp
lahf
xor
ds
test
jno
jne
mov
enter
sub
jmp
inc
cmp
ss
rclb
rorb
fisubrs
addr16
int3
jo
mov
inc
lods
mov
xchg
mov
mov
mov
int
fistpll
shr
pop
mov
insl
popa
sub
scas
xorb
test
dec
test
dec
mov
inc
out
jmp
xor
sub
neg
inc
mov
fwait
or
nop
mov
dec
xor
negb
dec
mov
inc
popa
dec
add
sbbb
js
inc
push
push
pop
adc
test
xchg
jecxz
xlat
bound
arpl
lret
cmpsb
stc
int
lahf
cmp
mov
das
addr16
stos
std
jno
xlat
stc
dec
mov
inc
jge
out
popa
sub
iret
data16
ret
jno
cli
or
bound
repz
cmp
pop
lea
inc
push
add
push
push
sub
push
outsl
jle
lahf
jmp
push
jmp
sarl
insl
lret
sub
xor
mov
addb
cmp
addr16
mov
sub
mov
les
cmp
and
xor
cmp
cmp
add
rorl
xor
loopne
shl
out
scas
dec
mov
lret
shrb
iret
leave
cmp
jge
mov
and
int
je
fsubs
push
adc
addb
es
mov
or
jae
fsubrl
data16
rolb
les
test
roll
sub
loope
std
mov
pop
lret
push
xor
jmp
inc
ss
in
jge
dec
mov
data16
jnp
inc
pop
mov
ss
xchg
and
inc
outsb
push
out
mov
stos
mov
mov
fldcw
ljmp
sub
xor
mov
dec
pop
es
stos
cmpsb
fs
addr16
out
jecxz
cltd
push
enter
mov
addr16
das
cmp
cmp
adc
xchg
dec
mov
xchg
cld
mov
adc
xchg
add
adc
dec
mov
gs
hlt
inc
stos
mov
xor
and
je
adc
cmp
jge
sub
pop
sbb
pop
xchg
clc
repnz
push
test
dec
leave
movsl
in
mov
cltd
cmp
in
clc
xchg
mov
xchg
inc
push
loope
into
or
bound
mov
int3
jb
out
dec
jge
mov
sub
mov
idivb
or
inc
mov
dec
mov
clc
mov
fbld
pop
inc
sub
outsl
pop
aaa
xchg
mov
dec
inc
popl
push
sbb
mov
sbb
rorb
jno
push
mov
outsb
sbb
jecxz
mov
mov
fistpl
repnz
push
pop
xor
fldenv
jns
xor
inc
fsubs
mov
xchg
push
cmp
xor
add
gs
stos
xchg
outsb
xchg
sub
xchg
jg
mov
push
aad
jg
add
enter
clc
pop
inc
in
lods
decb
adc
cmp
or
inc
mov
orb
xchg
lret
sbb
jle
xchg
fcmovnb
xchg
jbe
mov
mov
loopne
mov
mov
mov
call
push
repnz
rcrl
sarb
sti
mov
lock
js
cwtl
pop
add
movsb
inc
fimuls
cmpb
ss
ret
add
in
pcmpgtd
xor
mov
cmp
xor
dec
pop
ficompl
add
daa
mov
pop
pop
push
and
adc
cmp
inc
outsb
jbe
pusha
sbb
adc
mov
cmp
andb
lods
lcall
dec
fmuls
or
mov
jp
xor
or
pop
inc
outsb
orl
daa
daa
fs
popa
adcl
push
inc
xor
clc
push
sbb
xor
add
stc
adc
xor
push
les
vsqrtps
dec
jl
pusha
repz
sahf
xor
in
mov
repnz
psubusw
sarl
pop
stos
insl
cmp
cmp
je
insb
add
push
fistpll
das
cmp
xor
mov
lahf
mov
adc
pusha
cld
bound
in
out
dec
xlat
adc
aam
dec
sbb
add
and
out
jo
mov
ds
pop
sub
cmp
rorl
inc
inc
xchg
in
jmp
mov
pop
sub
nopl
inc
shrb
in
insl
data16
mov
imul
jnp
sub
inc
adc
mov
adc
jp
mov
cld
inc
fmuls
insl
dec
push
xchg
rorl
jo
add
addb
xor
add
stos
je
add
loopne
leave
xchg
jl
out
repnz
cmp
cmp
adc
sub
imul
out
sub
push
dec
sbb
aas
jp
push
mov
shlb
out
push
inc
add
movsl
shl
movsl
sub
ss
stos
push
mov
mul
xor
adcb
inc
cmp
jae
lcall
inc
xchg
cwtl
push
jbe
pop
sbb
mov
adc
xchg
xlat
mov
pop
dec
mov
sub
xor
orl
xor
cmp
popf
movsl
jge
sbb
sbb
push
les
mov
int
cwtl
inc
mov
popa
jae
xchg
iret
mov
scas
adc
mov
push
jecxz
daa
imul
sbb
int
popf
sbb
push
test
xor
adc
and
lret
ret
or
inc
or
mov
jl
xor
ret
push
mov
sbb
addb
test
scas
stc
call
jle
pushf
mov
xchg
ss
lods
jno
stos
fwait
cmp
lahf
cmpsb
sub
mov
and
fwait
inc
sub
pop
mov
cmp
xor
sbb
pop
jp
adc
sbb
dec
pop
out
movsl
jle
mov
in
dec
jbe
es
pushl
filds
notb
jp
mov
arpl
jmp
xor
add
pushf
add
movsb
stc
repnz
pop
inc
adc
cs
imul
dec
loope
mov
js
popf
dec
shll
mov
shl
xor
fsubrl
inc
out
les
dec
pop
imul
popa
adc
sarb
cwtl
sbb
nop
xor
pusha
out
push
imul
xchg
aad
fisubrs
icebp
push
ljmp
mov
mov
movsb
addr16
jge
xchg
lret
movsl
push
sti
mov
mov
lea
and
insl
pop
and
adc
fxch
cli
pop
fimuls
movsl
sub
mov
xchg
xor
mov
cmp
ss
mov
inc
mov
int
xor
inc
adc
xor
arpl
mov
ficompl
ss
jg
jnp
shl
daa
adc
popf
and
xchg
and
lods
iret
mov
test
jns
pusha
xorl
sti
xor
jno
test
mov
adc
dec
loope
fadd
jb
mov
xor
add
out
cmp
push
adc
and
jmp
xchg
and
ds
push
push
scas
pop
nop
adc
test
add
xor
cmp
mov
mov
push
add
sar
lods
sbb
mov
aaa
pop
sahf
and
dec
cmpsb
ficompl
pop
jl
xor
scas
mov
mov
in
sahf
dec
icebp
fmul
jg
sbb
xchg
sbb
pop
pusha
inc
popa
xchg
xchg
sbb
sub
add
sub
cmpl
and
sub
xor
cmp
loope
jp
lcall
mov
jae
adc
mov
ret
xchg
das
daa
in
jg
xchg
fmull
adc
or
push
and
les
add
cli
addr16
jne
and
movsb
xor
add
cltd
stos
cmp
jo
cmovno
clc
insl
insl
push
insb
lret
jle
stc
out
mov
xchg
mov
adc
xor
pop
or
stos
add
rcrl
cmp
jge
or
mov
cmp
mov
jge
adc
mov
and
mov
adc
std
or
scas
fdivrs
dec
xchg
out
mulb
inc
test
not
mov
jle
push
mov
fidivrl
xlat
add
test
stos
pop
cltd
lods
mov
stos
cmp
pop
xchg
mov
mov
and
movsb
shrb
sti
mov
push
cld
shll
mov
push
gs
aam
inc
mov
addr16
mov
inc
std
sub
sbb
mov
js
push
or
jnp
or
daa
int
jp
jp
je
negb
mov
out
aaa
mov
mov
out
mov
cli
jno,pn
mov
push
mov
xchg
xor
lret
mov
aam
mov
push
faddp
inc
push
in
and
push
hlt
out
aaa
push
jp
pop
rolb
arpl
add
add
in
popf
sti
xor
push
decl
push
sub
jb
jecxz
popf
arpl
mov
negb
push
mov
adc
dec
out
pop
test
iret
add
popf
jl
mov
popf
scas
lds
movsb
cltd
xchg
xchg
inc
dec
mov
popa
jg
mov
jb
sub
jbe
js
push
sub
daa
mov
out
adc
stc
jecxz
adc
mov
bound
inc
mov
leave
push
movsb
add
stos
jecxz
jmp
jmp
lds
fcoml
adc
mov
xor
popa
jne
xor
test
sub
mov
insl
cmc
sub
jecxz
or
arpl
dec
cld
xchg
imul
push
popf
pop
cmpl
mov
push
xor
mov
mov
pusha
mov
add
movq
jecxz
cmp
xchg
jp
push
test
sbb
cmp
sahf
pop
lods
adc
ds
or
dec
push
jno
inc
push
inc
test
jo
sbb
mov
scas
mov
std
push
ss
wbinvd
push
mov
jmp
push
inc
int3
rcrb
pop
xchg
cld
rcrl
outsl
cmpsb
or
dec
jnp
das
and
xchg
imul
push
out
testb
divb
pop
cmpb
xchg
xor
hlt
int3
lcall
inc
lcall
loop
leave
fiaddl
dec
scas
pop
sarl
dec
js
out
addr16
mov
xchg
repz
and
into
sti
xchg
insl
adc
lret
cltd
ret
xchg
mov
add
punpcklbw
mov
movsb
aaa
insl
mov
push
cmp
mov
adc
je
push
mov
lret
mov
jge
pop
es
addr16
mov
xchg
jmp
mov
aas
mov
xor
lods
popf
imul
dec
inc
aad
fmuls
mov
rcrl
mov
push
rclb
pop
xchg
mov
mov
jnp
div
aaa
sbb
cs
push
add
mov
les
test
mov
jb
dec
fdecstp
push
popf
xchg
fldenv
mov
fs
or
lds
jnp
push
pop
push
mov
and
rorb
fnstsw
sahf
inc
or
mov
xor
inc
mov
sbb
cmpsl
inc
sarl
dec
mov
enter
imul
fcmove
mov
dec
dec
dec
jno
sub
jb
popf
loope
sti
outsl
mov
shr
icebp
stc
outsb
dec
lods
pop
cwtl
and
or
dec
pop
lahf
fwait
addb
aam
jge
mov
fldz
into
xor
pop
cmp
cmp
push
xchg
sub
jns
xor
and
das
xchg
cli
pop
sti
or
int3
int
cmp
loope
inc
jge
outsb
cld
pop
std
mov
sbb
or
mov
jle
sbb
iret
sbb
or
inc
sub
subl
dec
sbb
addr16
inc
adc
dec
pop
roll
push
rcrb
lahf
fnstsw
xor
jecxz
push
push
scas
pop
mov
push
cmpb
ss
bound
adc
or
adc
mov
nop
inc
ljmp
jp
shl
xchg
bound
cmpb
pop
jl
lock
ja
rclb
mov
jno
xchg
xchg
insl
and
mov
mov
xchg
aam
xor
add
mov
outsb
int3
mov
in
test
inc
dec
mov
ljmp
mov
aas
mov
add
adc
inc
stos
imul
enter
inc
ret
pop
in
outsb
call
mov
pop
cmp
push
xor
insb
sbb
rcll
lods
mov
mov
or
iret
repz
xchg
sbb
dec
push
xor
cld
sub
push
sub
inc
sahf
aas
mov
lods
mov
dec
popa
mov
popf
js
mov
xor
jl
hlt
push
sub
xchg
repz
dec
stos
stc
sub
int
xlat
and
dec
rolb
das
es
andl
xor
out
icebp
test
jmp
pop
roll
and
sub
gs
cmp
mov
jle
xor
aam
push
inc
or
or
xor
jnp
adc
pop
adc
or
cmp
xchg
cmp
mov
mov
ja
lcall
mov
inc
es
lret
cli
mov
test
mov
push
jle
mov
rorb
fstps
jnp
fisttps
and
cmc
adc
dec
mov
fnstenv
outsl
scas
rorb
or
in
pop
insl
inc
fmull
in
jmp
mov
push
mov
fstl
and
inc
sbb
cmpsl
icebp
adc
frstor
shlb
sub
clc
xchg
sub
xorb
loopne
sti
imul
cmpsb
xor
daa
ljmp
aas
adc
pop
jbe
xor
sbb
mov
adc
iret
cmpsl
orb
add
mov
movsl
mov
js
call
in
imul
or
out
or
push
sbb
mov
fcmovnb
stc
xor
andl
call
jecxz
stos
dec
test
push
lret
mov
xor
jecxz
insl
clc
loopne
mov
ljmp
stos
jg
xor
test
mov
in
push
das
nop
cltd
int3
and
shrl
and
into
outsl
adc
mov
mov
mov
pop
das
stos
pop
stos
das
pusha
sbb
nop
push
sub
je
iret
ss
nop
rcrb
rolb
lcall
pop
into
push
jb
nop
dec
jg
sbb
dec
data16
jo
cmp
cmp
xor
rol
mov
push
mov
shlb
adc
pop
mov
lret
pop
ret
outsb
jp
clc
mov
mov
inc
xor
xchg
inc
nop
dec
repz
loop
jle
jle
stos
pop
mov
daa
mov
xchg
and
dec
push
out
lock
nop
xchg
insb
nop
mov
ss
xchg
cs
xchg
dec
mov
mov
leave
mov
add
push
adc
mov
push
mov
xor
mov
inc
and
test
sahf
insb
mov
into
cmp
xor
mov
push
stos
cmp
rcrl
into
mov
adc
fmull
loop
push
cmpl
jecxz
xor
mov
int
test
jno
mov
sbb
cld
lret
dec
popl
clc
aam
inc
mov
mov
adc
lcall
clc
out
xchg
das
and
out
int
idiv
pop
cld
aaa
push
jg
sub
mov
jo
insl
movsb
jge
mov
fstl
sarl
das
mov
push
shr
ja
test
popf
lahf
adc
int3
mov
addr16
cmp
std
int
fwait
pop
fnsave
cli
xchg
cltd
mov
out
xchg
clc
jge
xor
xor
pop
xchg
pop
sub
xor
ds
add
pop
int3
dec
movsl
xlat
push
pop
pop
mov
push
mov
and
rorl
pop
lods
lock
jmp
xchg
notb
mov
xor
and
push
mov
sbb
rcl
and
mov
dec
cmp
stc
ljmp
jne
mov
stos
xor
pop
test
lahf
cmpsl
test
int3
lods
mov
xor
xorb
sbb
push
jmp
lahf
xchg
dec
addb
test
sub
push
test
inc
pop
cld
test
icebp
inc
in
hlt
add
sti
enter
jnp
mov
jg
push
lcall
popa
cmp
mov
mov
enter
test
xor
repz
xor
pop
loope
dec
cmp
ror
int
sar
fsubrl
orl
movsb
movsl
cwtl
gs
sbb
cwtl
dec
pop
adc
fdivrs
mov
and
push
pop
pop
mov
add
xchg
pop
sarb
dec
std
leave
cmp
xor
cmp
xchg
push
cwtl
pop
dec
inc
aaa
pop
aaa
mov
lea
adc
jecxz
and
mov
jl
mov
mov
jl
add
inc
cmpsb
sbb
xor
cs
mov
pop
inc
mov
ficomps
push
and
push
cmp
js
xorb
push
push
test
clc
out
fcoms
rorb
and
xchg
jmp
outsb
repnz
jp
jno
xor
mov
dec
xor
cs
or
je
sub
push
xor
jmp
push
pop
iret
push
xor
pushl
pop
adc
lcall
jb
jbe
sti
daa
sti
and
cld
mov
dec
lret
and
test
sbb
cmp
push
pop
scas
or
cmp
sub
pop
ja
jo
aaa
out
lods
and
mov
test
fdivl
xor
in
test
or
dec
mov
mov
jp
jb
inc
mov
cmpsl
mov
pop
outsb
xor
push
int
dec
pusha
jg
cmp
cwtl
push
sahf
mov
dec
push
mov
jns
add
and
test
js
jo
pop
mov
push
daa
sbb
pop
mov
repz
rcll
push
adc
push
xor
inc
xchg
and
fcomip
das
fistps
mov
lock
outsb
movl
movsl
nop
dec
push
jp,pn
add
pop
inc
add
mov
jge
sahf
add
inc
mov
int
dec
cs
movsl
dec
lods
loopne
icebp
lods
pop
pop
mov
fsubs
std
lds
pushf
jl
sub
into
cld
pop
inc
mov
add
rcrl
jp
cmp
pop
mov
mov
push
xor
jae
pop
jo
and
divl
out
leave
xchg
mov
adc
add
cmpsl
mov
xor
out
rorl
xor
mov
cmpsb
popf
lret
jmp
xchg
mov
in
int
movsl
ret
jnp
ret
xor
fnstcw
jge
or
nop
inc
jl
push
xchg
sbb
sbb
push
lods
xlat
push
popa
stos
cltd
sbb
xchg
mov
push
xchg
jb
sbb
xchg
push
push
xlat
or
dec
push
sbb
in
pushf
adc
adc
push
enter
mov
shl
push
add
scas
adc
and
and
push
iret
jl
scas
fcoml
sti
fimull
mov
cmp
jge
push
and
std
jnp
das
pop
outsl
div
pop
cmp
xchg
loopne
cmp
lahf
in
icebp
mov
push
movsb
stos
push
sub
fcom
pop
mov
xchg
mov
inc
jecxz
and
lods
mov
xor
inc
addr16
pop
dec
pop
sbbl
jns
repz
fdivrs
inc
inc
cltd
test
mov
jae
or
js
pop
mov
adc
mov
mov
nop
and
lock
pop
inc
sarb
jecxz
movsl
movsb
fidivrl
and
cmp
daa
xchg
mov
daa
cmpl
dec
mov
imul
popf
xchg
aaa
xchg
cmp
je
inc
roll
mov
add
jge
ss
std
and
push
rorl
push
shrl
fmull
je
in
adc
mov
xor
cmpsl
push
stos
fucomip
inc
lods
in
lds
mov
push
inc
fnsave
leave
lahf
mov
lret
push
jnp
cmpsl
cmp
mov
popa
cmpl
lods
xor
and
aam
cli
fadd
insb
xchg
inc
and
pusha
mov
cmpsl
inc
lock
pop
mov
jecxz
xor
jecxz
out
notl
jmp
iret
add
aas
cltd
inc
jg
movsl
mov
mulb
inc
xlat
push
push
xor
out
dec
mov
subl
in
pop
mov
mov
dec
mov
test
xor
adc
mov
test
dec
mov
sbb
out
testl
dec
pop
xchg
jle
data16
jecxz
cmp
nop
mov
std
cmp
out
mov
jno
add
pusha
ficompl
mov
sbb
ja
in
or
fcompl
daa
cmp
clc
inc
lahf
fstps
popa
inc
and
and
cmp
mov
aad
lahf
add
push
in
jmp
xor
pop
stc
push
lea
sbb
test
ss
mov
cmp
sbb
or
jmp
add
xchg
mov
stos
cmpsl
pop
jp
push
leave
fwait
das
push
inc
mov
jae
add
mov
pop
jle
pop
push
lcall
stos
pop
inc
lock
loop
stos
adcb
clc
fdivs
div
sbb
fdiv
dec
dec
xchg
test
shl
pop
sub
adc
push
jno
and
sbb
lds
cmp
xor
mov
addb
inc
lret
mov
sub
repnz
scas
xchg
cltd
outsl
inc
xlat
mov
xchg
cwtl
dec
arpl
cltd
data16
cli
out
cmpsb
xchg
iretw
loopne
call
add
fistps
incb
clc
pop
int3
in
popf
jmp
ficoms
scas
add
shr
inc
pop
rcrl
mov
dec
add
jno
pop
enter
fsubrp
pop
jbe
and
pushl
rcrb
aaa
insb
xchg
mov
mov
jp
shll
jle
pop
shll
sub
loopne
pop
scas
xchg
ret
jp
ljmp
cli
xor
push
mov
jne
setle
pop
lret
rcl
mov
loop
aad
divl
loop
add
mov
addps
roll
sbb
imul
sar
inc
add
sub
xor
inc
clc
push
inc
leave
push
mov
pop
in
pusha
jmp
add
popl
movsl
and
and
push
mov
enter
dec
mov
pusha
ret
xor
rcrb
ljmp
and
inc
testb
or
inc
jae
pop
add
xor
repnz
roll
pop
aad
dec
inc
iret
lahf
mov
pop
adc
jbe
cmp
mov
dec
inc
sub
jae
int
fistpll
icebp
jp
mov
addr16
incl
mov
test
jo
or
mov
inc
jmp
or
dec
subb
mov
dec
sub
loope
pop
ret
sub
scas
and
sbb
cmp
lret
jecxz
mov
mov
mov
fstps
fadd
or
insl
iret
pop
and
xor
jo
jno
addr16
push
mov
push
ret
cmp
ja
insl
aad
pop
rclb
jbe
dec
mov
push
shll
mov
ja
aas
int
mov
test
ret
pusha
cld
push
push
adc
daa
lods
xchg
push
mov
outsl
leave
stc
sahf
xor
add
push
gs
xchg
or
jb
and
xchg
xchg
bound
mov
jle
sub
mov
sub
sti
stos
es
xchg
dec
loope
dec
xorl
aas
rol
dec
int
cli
cmp
sub
cltd
dec
in
pop
shlb
adc
lds
and
pop
cmpl
lcall
testl
mov
rorl
sbb
stos
repz
shll
negb
mov
mov
imul
sub
mulb
mov
ds
jp
pop
lcall
shrl
mov
pop
lahf
dec
dec
sbb
test
dec
pop
shrl
lahf
andb
bound
scas
stc
mov
dec
insl
mov
cmp
rolb
and
in
mov
mov
rcrl
cld
fdivl
jecxz
push
ret
fisubrl
mov
pop
popa
mov
pop
icebp
in
lret
cmp
test
jno
test
xchg
xor
mov
aas
into
push
xor
xchg
outsl
lods
outsl
fisttps
xchg
jnp
xlat
sub
roll
sbb
add
dec
mov
xchg
icebp
cwtl
mov
dec
xsaveopt
jno
mov
jno
mov
shll
mov
loope
cmp
mov
cwtl
cld
dec
inc
cmp
roll
jl
out
fcompl
sub
mov
pop
popf
mov
sub
popa
adc
fsubrs
dec
nop
call
push
mov
sub
xchg
movsb
movsb
adc
dec
add
and
sub
xchg
add
sbb
push
adc
prefetch
fldcw
jg
cmp
hlt
aaa
lret
push
xchg
or
dec
xchg
pop
and
int3
add
push
mov
jo
or
ficoml
movsl
xor
scas
mov
xor
mov
mov
loope
repnz
pop
cwtl
cmpsl
mov
mov
int
shl
es
jnp
jle
mov
and
ljmp
inc
std
add
jl
sbb
sub
popf
fdivp
test
popf
xchg
movsb
dec
outsb
inc
jbe
bound
popf
out
les
dec
rorl
push
pop
xchg
xor
test
out
jge
loope
push
adc
mov
pop
push
shlb
sbb
popa
inc
inc
jecxz
xor
inc
push
psrlq
jecxz
push
sarb
sti
fcompl
addb
jns
fisubrs
movsl
repz
gs
in
test
test
in
dec
cmp
rolb
test
xchg
les
jle,pn
push
clc
mov
in
pop
add
lods
push
inc
jge
dec
pop
cmp
insb
out
and
mov
iret
or
aas
cli
xchg
ret
pop
lea
into
insb
in
fmuls
in
icebp
xchg
lds
pop
sub
inc
xlat
gs
dec
pop
cmpsb
mov
add
lret
rol
int
inc
cli
into
clc
ret
sbb
add
and
cltd
jge
jle
adc
rclb
mov
ret
int3
sbb
imul
sbb
mov
mov
add
cmpsl
mov
inc
lods
imul
jo
addb
jge
loopne
push
lea
mov
inc
mov
add
or
add
push
xchg
out
or
xor
popf
outsb
shlb
or
mov
nop
lahf
fs
mov
push
xor
fisubrs
insl
cmp
imul
ja
mov
inc
call
inc
sub
clc
fidivrs
mov
jl
xor
adc
add
and
cld
inc
pop
inc
rclb
sub
and
sbb
dec
orb
add
push
outsb
mov
cs
sub
and
or
mov
inc
std
push
mov
push
test
imul
aam
dec
push
mov
stos
lcall
xchg
inc
clc
mov
cmpsl
sub
pop
jo
xchg
jle
pop
mov
cmp
cmp
loop
aam
mov
dec
aaa
jp
mov
or
cmpsb
out
mov
int
shld
cmp
inc
pop
nop
pop
xor
aam
out
add
dec
jecxz
push
pop
mov
nop
xor
pop
pusha
dec
lods
xchg
into
data16
mov
adc
cmpsb
cmp
decb
mov
outsb
icebp
adc
iret
sub
loopne
sbb
pop
das
mov
and
dec
inc
fcomi
adc
pop
ljmp
loopne
les
jb
mov
adc
out
pushf
sub
or
push
popa
lahf
adc
ss
hlt
aas
pusha
test
int3
adc
jo
jle
push
add
add
lcall
mov
lds
mov
xor
sub
add
xor
push
and
mov
xor
dec
clc
adc
ss
and
in
cmp
mov
add
sbb
or
pop
mov
push
push
adc
pusha
cld
add
add
es
inc
jg
add
mov
add
xchg
or
xor
push
cmp
xor
aas
add
fsts
cwtl
ljmp
or
lods
xor
test
cs
inc
xchg
fscale
mov
inc
std
dec
ret
mov
lock
push
ret
stos
cltd
js
inc
mov
inc
adc
stc
sbb
sub
out
push
pop
mov
ret
in
js
std
imul
pop
mov
es
lods
jbe
in
out
sar
lea
jl
pandn
pextrw
or
into
cwtl
mov
daa
lret
xchg
jbe
inc
call
outsl
and
xchg
arpl
cmp
xor
mov
aam
adc
push
pop
pop
xor
jp
les
pop
mov
shll
or
mov
mov
mov
mov
or
mov
inc
and
inc
adc
ffreep
lahf
scas
out
mov
lcall
movsb
int
cmpsb
into
fisubl
dec
int3
add
out
mov
jg
lret
push
xorb
iret
ljmp
adc
int
inc
outsb
pminub
std
mov
pop
add
cmpsl
mov
test
mov
jle
cmp
push
jge
clc
sub
lods
add
mov
mov
and
int
mov
jb
push
xor
ds
cld
call
gs
rcll
enter
out
xor
loop
mov
xorl
cli
ja
fwait
sbb
ret
add
dec
mov
pop
in
jp
adc
data16
inc
pusha
pop
cmpsl
clc
inc
mov
xor
mov
pop
or
and
cmp
call
stos
pop
ja
ljmp
add
jno
lcall
roll
sbb
adc
rclb
mov
xor
add
js
jge
adc
mulb
pop
push
jnp
push
push
icebp
cmc
popf
inc
ret
pop
xor
sti
inc
jno
jns
mov
sub
inc
pop
ret
rol
scas
bound
test
pusha
mov
jl
pop
mov
gs
mov
jmp
les
dec
adc
cld
fildll
aam
shlb
nop
out
loope
xchg
sub
push
xchg
mov
cli
mov
sbb
push
and
cli
popa
cmp
imul
adc
jg
or
push
ret
inc
sbb
jg
dec
mov
nop
shl
mov
jo
out
rcll
jo
leave
les
outsb
xchg
sub
addr16
mov
xchg
jo
lret
popl
and
cmp
in
sahf
cmp
stc
js
or
stc
jno
shrl
stos
adc
lcall
es
dec
inc
rolb
mov
sbb
in
push
jb
stos
push
xor
sub
fstpt
or
in
shrl
cmpsl
ja
lret
imulb
jbe
xchg
pop
lock
cmp
adc
push
pop
in
insl
add
out
xchg
lods
cmc
cmpsl
xor
fsubrs
xlat
jle
or
pushf
cli
shr
fwait
inc
int3
adc
fdivr
nop
add
mov
loope
stc
push
pop
fistpll
dec
mov
and
stos
mov
in
cmp
adc
out
cs
enterw
mov
shll
sbb
test
jno
into
popf
les
pop
lods
in
mov
jmp
cld
ret
mov
xchg
adc
pop
sbb
repz
lods
stos
cmp
mov
push
insl
loopne
jecxz
les
nop
or
loope
mov
leave
pushf
mov
outsb
mov
add
fdivp
dec
jge
jp
and
push
aas
insl
dec
stos
popa
adc
mov
and
leave
add
xchg
popf
mov
jl
mov
jl
jbe
push
arpl
aad
xor
jg
imul
rorb
shll
adc
inc
mov
cmp
outsl
jb
jb
stos
xchg
xor
shr
or
add
add
mov
sbb
mov
xchg
mov
test
xchg
mov
pop
mov
push
xchg
ja
sub
ret
sarb
xchg
push
shrl
mov
icebp
ljmp
out
int
adc
and
test
xchg
cmp
insb
roll
movsl
rorb
stos
sub
adc
std
imul
sbb
out
roll
inc
outsb
xchg
lret
stc
in
mov
int
xor
sub
dec
push
mov
xchg
mov
mov
push
xor
clc
cmp
lods
xor
xorb
jb
lods
pop
pop
xor
or
cmpsb
xor
ljmp
stc
lods
add
push
dec
gs
mov
xchg
lret
int
inc
lret
arpl
mov
lcall
cmp
andb
mov
dec
or
andl
and
test
jge
shll
inc
xor
rorb
leave
xchg
or
mov
and
adc
add
sbb
lret
pop
or
hlt
sar
lret
faddl
dec
test
cwtl
insl
addb
incb
sub
xchg
sbbb
int
push
mov
mov
dec
xor
test
fstpt
adc
pop
push
add
insb
sub
inc
jns
popf
sbb
inc
bnd
pop
imul
adc
testl
xor
mov
push
mov
stc
leave
sti
sub
dec
lock
sbb
xor
pop
mov
mov
cs
ss
outsl
ja
fnsave
pushf
xchg
cmpsl
mov
and
push
xchg
mov
scas
ds
sub
cmp
shll
out
mov
mov
clc
add
push
iret
mov
out
stos
enter
mov
pop
xchg
dec
cmp
push
or
lds
mov
lret
and
cwtl
popa
cmp
test
sbb
dec
in
cmpsl
mov
add
loopne
lret
push
jl
and
xor
and
mov
mov
jns
sbb
rorl
mov
cmp
dec
pop
bound
adcb
into
or
pop
mov
es
adc
pop
mov
and
push
adc
lea
xchg
lea
loop
jge
jecxz
add
call
idiv
aam
insl
add
jecxz
adc
stc
loope
aad
push
jge
test
test
rol
add
adc
mov
mov
add
stos
cmp
cs
insb
and
lock
nop
sub
push
test
jecxz
call
in
pop
test
pop
jge
mov
popa
std
adc
outsb
mov
dec
mov
xchg
mov
cltd
pop
ret
in
dec
icebp
and
fbstp
std
sar
push
mov
and
push
jecxz
mov
cltd
jmp
dec
mov
cmp
mov
or
icebp
mov
pop
mov
xchg
test
lods
repnz
scas
icebp
mov
mov
repz
rcll
xor
cltd
dec
pop
int
aaa
inc
adc
std
xchg
shll
xchg
jecxz
mov
or
mov
rep
push
inc
xchg
inc
pop
lahf
and
test
clc
cmp
jecxz
xchg
add
sub
inc
stc
js
dec
sahf
inc
adc
leave
js
inc
scas
aaa
mov
push
inc
scas
mov
unpckhps
fwait
pop
sbb
push
repnz
xchg
insl
adc
mov
push
int3
jae
in
lret
push
adc
mov
xor
rorb
xchg
in
mov
lret
cmp
mov
dec
int3
js
out
cmp
cmp
adc
mov
pop
and
mov
mov
nop
inc
adc
inc
int3
mov
js
loopne
lcall
mov
jo
sbb
xor
std
pop
xor
push
mov
inc
xor
xchg
mov
aad
rcrl
sub
scas
les
push
test
cmpl
cmpsl
rorl
cwtl
mov
pop
inc
push
ljmp
and
xor
adc
sbb
lret
call
mov
mov
jg
and
popa
lcall
out
sbb
xor
lret
stos
and
add
mov
mov
inc
fcmove
inc
test
aam
mov
jne
jle
inc
jl
push
dec
push
stos
arpl
add
fstpt
jle
inc
jo
mov
xchg
or
jns
popf
pop
adc
shl
incb
sbbb
insb
nop
inc
es
mov
dec
and
aam
sbb
push
stc
insb
pop
jo
adc
into
setne
int
das
dec
out
jnp
mov
pop
mov
mov
js
out
shll
fs
aad
addr16
jle
sub
cmp
or
rolb
sub
push
inc
movsl
mov
mov
sub
filds
aad
xchg
inc
clc
sarb
cltd
jmp
mov
les
jns
dec
inc
jle
ret
pop
andl
cmp
mov
loopne
pop
push
jp
stos
mov
in
push
cmp
lret
mov
jbe
call
nop
jbe
es
loopne
insb
lcall
sbb
das
das
push
inc
lea
into
mov
xchg
je
insb
scas
mov
push
shr
xor
or
xor
nop
xor
jecxz
sarl
sbbl
outsl
popa
push
adc
ljmp
push
ret
sub
out
jl
mov
pop
lds
adc
pop
mov
fdivrl
xchg
std
cltd
inc
icebp
xor
stc
loop
adc
fidivs
pop
lods
outsl
clc
pop
cmp
lock
sti
adc
add
popa
jno
xchg
fcomp
xchg
shlb
lcall
adc
mov
adc
aaa
dec
xchg
mov
adc
mov
cs
pop
rcl
in
dec
repz
mov
or
mov
push
test
sub
test
pusha
mov
lods
pop
mov
xor
loope
pop
iret
and
loope
div
xor
push
xor
mov
pop
sub
iret
xor
scas
out
dec
rorl
fstpt
xor
outsb
sbbl
add
loope
mov
fstpt
dec
inc
iret
pop
xchg
mov
shll
das
out
in
stc
jp,pn
ljmp
mov
pop
lods
sbb
jnp
inc
xor
mov
das
out
sub
scas
out
or
adc
mov
cmp
int3
into
push
mov
inc
inc
push
jg
popf
arpl
mov
dec
fistl
pop
lods
add
and
jno
cld
ret
iret
out
in
stc
out
aas
cmp
imul
dec
cmp
icebp
movsl
dec
mov
aad
inc
inc
imul
in
jg
movsb
push
shl
jp
adc
jb
pusha
or
mov
inc
daa
stos
pop
repnz
cmp
loope
cmp
jp
jecxz
sub
xor
dec
scas
stos
gs
daa
mov
xchg
out
roll
push
shll
dec
test
push
fwait
pop
push
xor
cmp
int3
xor
fbld
dec
mov
lods
push
xchg
mov
add
xchg
fadd
jmp
inc
cli
sahf
fnstenv
cmpsb
ret
xchg
not
add
inc
repz
in
push
incb
xchg
xor
mov
pop
xorb
popl
mov
xchg
pusha
inc
adcl
pop
aam
inc
dec
stc
xlat
mulps
sbb
out
sbbl
xlat
hlt
out
sbb
adc
lret
xchg
xchg
dec
sarb
hlt
cmc
jmp
adc
dec
add
fistl
or
fyl2x
inc
aam
mov
rcrb
es
fsub
fmull
icebp
cmpsl
sub
pop
lock
pop
jmp
dec
lock
shl
inc
pop
mov
add
scas
cmpsl
addl
and
mov
pusha
mov
mov
sbb
loope
push
pop
scas
adc
hlt
push
test
pop
push
mov
xor
pop
lret
mov
dec
mov
fnstcw
push
xchg
or
pop
mov
popf
test
jp
dec
movsb
mov
or
insb
repnz
mov
push
xchg
imul
adc
pop
push
fldcw
mov
daa
call
adc
fmul
sbb
call
mov
mov
cld
xchg
shll
jb
sahf
add
jecxz
and
mov
push
lahf
or
cmpsl
andb
shl
shl
orb
push
dec
xchg
pop
cmp
in
inc
fildl
aaa
jg
jle
mov
push
dec
cwtl
inc
lea
loop
inc
sbb
sarl
inc
out
mov
jle
mov
pop
test
leave
dec
lahf
inc
xor
lods
daa
data16
call
xchg
adc
mov
sahf
xchg
out
sbb
pop
add
call
push
inc
xor
and
fs
test
hlt
push
lcall
in
fs
in
and
cmp
inc
xor
leave
out
movsl
in
lahf
rcr
ror
adc
mov
sahf
lods
xor
sub
and
stos
or
sbb
imul
cmp
lret
scas
shl
push
sbb
cs
sub
adc
dec
push
sahf
adc
xchg
cmp
mov
loopne
jmp
xchg
xchg
and
into
in
mov
fistps
es
adc
push
push
xor
sub
cmp
jge
mov
pop
int
xor
pop
jbe
int
xchg
xchg
mov
lret
xchg
xor
repnz
and
mov
dec
sbb
push
jb
icebp
les
int3
divb
adc
xor
mov
push
xchg
pop
dec
mov
icebp
dec
or
sbb
jg
mov
add
sahf
int
and
mov
repnz
outsb
mov
sbb
push
pop
fnsave
xor
cwtl
repnz
test
lret
dec
mov
mov
mov
push
std
lret
push
insl
insb
xor
insl
mov
or
add
add
adc
mov
or
fidivl
inc
xchg
mov
psubb
sbb
and
xor
add
mov
push
es
jecxz
div
aaa
lds
shrb
xchg
fisubl
test
scas
outsb
sub
push
mov
ror
push
lcall
mov
pusha
loopne
pop
jb
loope
cmpsl
or
push
sbb
rcrb
nop
push
dec
fstpt
push
repnz
ljmp
shr
inc
xor
xchg
test
loopne
cmpsl
and
lds
mov
mov
lea
jbe
out
ljmp
mov
dec
mull
out
mov
repz
xor
or
inc
loop
mov
xor
ret
movsb
popa
mov
pop
cmp
icebp
stos
fwait
push
sahf
pop
push
ret
pop
lret
xchg
daa
outsb
jno
sahf
xor
clc
sub
clc
add
push
inc
inc
sti
bound
push
dec
sarl
and
fwait
push
outsb
adc
fiaddl
dec
mov
test
push
inc
pop
adc
addr16
push
and
mov
in
mov
mov
adc
jae
loope
jge
mov
mov
dec
dec
ss
int
add
xchg
lret
pushf
arpl
pop
cwtl
clc
xchg
add
fwait
cmp
inc
xor
outsl
imul
hlt
repz
cmpsl
add
mov
js
scas
shll
sbb
mov
lret
xchg
xchg
mov
outsl
gs
xor
adc
fwait
mov
cld
shll
dec
gs
or
jno
xor
lcall
pop
adc
lcall
fcmove
pop
pop
mov
cmp
dec
leave
adc
ffree
sub
mov
scas
rcll
xchg
lods
jns
push
mov
sbb
imul
inc
lahf
xchg
mov
adc
pop
inc
das
in
sbb
stc
lret
jno
sbb
shlb
mov
cmp
jecxz
adc
ficoml
sbb
jo
mov
sub
cmpsb
jmp
repnz
into
sub
inc
in
loop
sub
addr16
xchg
enter
test
xor
mov
test
jb
add
push
push
lcall
movsl
nop
xor
dec
xchg
sbb
xor
and
inc
and
into
fstps
xor
sbbb
mov
mov
and
test
xchg
call
mov
pop
gs
movsb
mov
jb
mov
cwtl
sub
pusha
and
jge
add
push
fstps
dec
cmp
lods
mov
les
jmp
inc
fldln2
jb
dec
xor
mov
xchg
dec
jo
dec
sbb
adc
insl
nop
test
inc
stos
int
push
outsl
push
xorb
or
mov
es
or
imul
cli
xchg
mov
add
or
mov
scas
lock
cmpl
jge
repz
cmpsl
fidivs
xlat
and
pusha
inc
fs
xor
cmp
inc
xchg
add
inc
aas
or
or
mov
mov
fbstp
sbb
xchg
mov
push
dec
testl
fst
add
cmpsl
push
mov
and
int3
mov
aad
jbe
mov
jb
cmpsl
rcrl
mov
push
xor
add
jbe
mov
cmp
adc
pusha
mov
jg
mov
pop
std
mov
dec
cmp
sub
clc
fwait
sti
insl
inc
dec
fnsave
fistl
int
and
inc
mov
xor
add
mov
inc
mov
push
or
pop
aaa
sarb
popa
jge
lods
lret
ret
test
cli
mov
add
call
lods
mov
lahf
xchg
hlt
jo
dec
popa
mov
stos
pop
cmp
hlt
or
stos
jg
sbb
sti
mov
orl
xlat
mov
xor
into
xor
jg
mov
std
in
mov
pop
inc
sub
jne
mov
lret
sbb
jle
and
out
mov
shll
dec
adc
ret
push
stc
push
das
add
push
mov
movsl
leave
mov
push
xchg
xor
cli
sbb
inc
dec
dec
nop
mov
push
iret
cld
mov
mov
shl
pop
push
mulb
jge
mov
xchg
sbb
outsb
loop
inc
push
mov
pop
cmp
push
xor
roll
xor
das
mov
add
stc
dec
jb
nop
mov
xor
dec
mov
push
mov
clc
xor
adc
scas
loopne
int
pop
mov
xchg
jb
cld
inc
jg
or
ljmp
ficoms
nopl
xchg
mov
adcl
push
push
scas
jo
mov
mov
sbb
mov
fadd
les
ret
rcl
fisubs
mov
pop
mov
dec
adc
add
aad
pop
lret
das
push
cld
roll
lea
fnstenv
js
pop
push
bound
ficoms
rcll
adc
mov
inc
add
jge
lea
test
sarb
cld
rcr
push
cmp
pop
inc
xchg
jg
mov
inc
xor
loopne
inc
in
jb
inc
fidivl
sub
mov
pop
rolb
nop
js
popf
xor
nop
push
inc
inc
pop
fldenv
movsl
andl
ret
add
xchg
loope
sub
call
mov
movsb
decb
int
add
enter
inc
and
sub
inc
arpl
pop
aaa
and
sbb
xchg
nop
jecxz
inc
add
stc
fldl
outsb
loope
test
dec
jne
adc
inc
and
in
out
jne
stc
sub
inc
out
push
out
cmpsb
or
mov
cmp
pop
mov
addr16
jg
inc
sbb
cmpsl
inc
sbb
jns
cmpsb
subb
mov
out
inc
lods
inc
mov
jmp
and
lret
adc
adc
mov
insl
xchg
ret
paddd
into
scas
imul
sbb
rcrl
sti
outsb
shrb
cmp
int3
push
mov
ljmp
mov
scas
inc
push
enter
rolb
mov
out
test
fistl
das
push
out
mov
jle
mov
cltd
adc
iret
dec
mov
cmpsb
cmp
insl
dec
cs
mov
dec
dec
pop
mov
xor
leave
test
cs
lret
push
jge
inc
cs
jg,pt
sub
push
inc
xchg
jl
adc
cmp
dec
int3
sarl
dec
fcoml
addb
out
push
ret
lcall
sbb
and
xor
xchg
xor
mov
push
xor
mov
sbb
push
pop
roll
mov
pushf
or
cld
out
insl
stc
dec
xchg
pop
repz
xchg
nop
mov
inc
push
gs
mov
push
dec
cwtl
jp
pushf
jl
mov
adc
and
rol
mov
repz
mov
xor
andl
in
adc
xor
and
into
and
jae
andl
fisubrl
mov
add
xor
xchg
and
je
cwtl
and
xor
cmpsb
test
sbb
mov
repz
jp
mov
mov
pop
lahf
call
or
mov
repz
stos
cmp
sti
sbb
dec
or
in
mov
fadds
inc
movsb
repnz
nop
and
test
stos
xorl
dec
in
pop
mov
mov
stos
mov
add
inc
gs
outsb
in
mov
adc
push
loope
ds
imulb
or
dec
dec
in
gs
add
fcomps
mov
dec
xchg
xchg
xchg
push
lock
test
adc
sbb
insl
movsl
or
cmpxchg
mov
out
out
inc
sbb
dec
loope
outsb
xor
jge
andps
psllw
adc
nop
jo
sbb
mov
xchg
or
dec
fldt
xchg
inc
mov
rcrb
std
inc
cltd
xchg
adc
fisttps
pop
lds
je
enter
test
sbb
ret
sub
mov
xchg
cli
xorl
iret
js
mov
lods
imul
or
insb
jb
out
push
add
xor
jb
jge
pop
sub
add
arpl
mov
test
pusha
and
rorl
dec
inc
into
cwtl
sbb
add
ja
loope
aaa
cmpsl
jno
mov
sahf
add
dec
shrb
dec
das
lret
jl
cmpsb
adc
push
cmpb
mov
and
sub
int
inc
and
pushf
cmp
shll
pusha
inc
daa
stos
fdivrs
lds
xor
adc
fmull
insb
mov
xchg
mov
and
test
mov
mov
adc
jl
sub
ret
test
pop
shll
xor
sahf
add
mov
in
mov
mov
mov
std
outsl
fcmovb
pop
pusha
jno
mov
inc
rcrl
rcrl
lea
scas
push
push
dec
adc
push
das
dec
mov
cmp
add
bound
lea
mov
leave
push
stos
icebp
inc
ret
clc
rorb
mov
ret
xchg
pop
pop
mov
sub
mov
leave
jmp
push
xor
mov
add
inc
scas
mov
cmp
insl
rclb
xorb
pop
icebp
pop
push
into
in
mov
cmpsl
xor
mov
test
jno
cmc
or
cmpsb
jnp
dec
inc
sbb
jge
or
or
mov
adc
imul
popf
or
lcall
mov
lock
and
rol
sbb
xchg
xchg
and
gs
adc
aaa
arpl
xchg
sub
cmpb
mov
add
jns
daa
and
jmp
dec
popa
jb
andl
or
pop
out
jmp
cs
or
mov
inc
es
and
pop
sub
fisubl
ja
ds
mov
or
inc
xchg
xor
inc
pop
inc
mov
mov
ljmp
mov
pop
or
mov
xchg
cmp
cmp
cs
adc
mov
sbb
jnp
scas
jbe
out
stc
bound
mulb
xor
xchg
sub
stc
and
pop
inc
daa
cmp
loop
sbb
arpl
jns
dec
aam
mov
test
sub
popa
pusha
cmp
loope
test
loope
pop
jb
mov
xor
fildl
and
xor
mov
popf
xlat
shll
cld
in
and
gs
jns
inc
push
xchg
xor
je
insl
roll
insl
imul
lret
ret
cmp
stos
mov
adc
push
nop
sub
loope
mov
mov
pop
lea
sub
cmp
push
pop
cmpsb
loop
aam
cmp
mov
add
add
vcvtss2si
pop
cmc
push
dec
shlb
xorb
int
popf
inc
pop
sbb
sbb
dec
mov
scas
enter
negl
xchg
mov
dec
sbb
dec
dec
popf
inc
cmp
adcb
xchg
pop
ficompl
icebp
lcall
adc
cltd
push
xchg
das
je
pop
push
pop
shr
and
dec
call
xchg
pop
xchg
movsb
mov
outsl
iret
fdivs
sub
push
sarb
adc
movsl
popa
fimull
sbb
add
ret
scas
mov
xchg
dec
rorl
bound
lods
das
or
lret
cli
jae
jp
jl
and
data16
clc
mov
dec
ret
push
scas
sar
dec
lahf
jg
inc
arpl
stos
sahf
push
mov
jmp
jbe
xor
mov
add
push
and
addr16
test
jo
orl
and
sub
cmp
xlat
sub
push
sbb
loope
into
push
cs
push
add
std
rcl
sbb
and
jge
jmp
and
ljmp
sahf
push
cs
loop
xchg
pop
into
push
inc
out
daa
mov
push
cmpsb
shrl
ds
jg
stc
push
inc
movsl
xchg
std
int3
out
dec
in
imulb
and
or
movsl
rclb
test
push
jecxz
insl
mov
lcall
mov
adc
add
mov
movsb
push
push
xchg
popa
cli
mov
pushf
xor
pop
push
sbb
xchg
sbb
sub
jno
lahf
lea
mov
xchg
bound
inc
mov
xor
dec
out
mov
push
push
rcrl
orb
mov
shrb
inc
mov
add
lods
orl
xchg
fnstenv
inc
mov
lret
stc
insl
loope
lods
dec
dec
pop
jmp
mov
jl
pop
push
sbb
xchg
dec
into
mov
in
xchg
rolb
test
hlt
insl
xlat
es
mov
jle
les
out
fs
loope
xlat
test
roll
adc
cmp
sub
stc
jge
jb
stos
lods
fsubrl
sti
xchg
mov
xchg
dec
dec
stc
popf
pop
and
out
addr16
lods
inc
xchg
jno
xchg
faddl
mov
mov
lods
xchg
xor
nop
std
push
mov
inc
pop
popf
loope
sahf
lret
in
les
dec
outsl
xchg
les
xor
xor
mov
xchg
jg
std
lahf
int3
add
jle
addl
inc
push
cmpsl
jle
sbb
sub
out
cmc
lods
mov
mov
ret
test
dec
jmp
dec
push
nop
or
les
mov
cmpsl
das
fmul
cmp
sub
and
rcl
xchg
pusha
dec
test
dec
dec
mov
xor
repnz
mov
lods
cmp
scas
jne
imulb
in
add
inc
lds
rorl
sbbb
test
pop
mov
sub
in
clc
aaa
cwtl
rcrb
out
xchg
cmp
add
sbbb
lods
jmp
out
ss
mov
mov
or
mov
call
loopne
mov
leave
into
xor
jns
mov
orb
outsb
movsl
mov
mov
sub
add
pushf
xor
lcall
sub
insb
fcomps
push
fs
cmp
add
sbb
jmp
cwtl
push
shlb
pop
add
pop
mov
pop
or
test
mov
push
dec
cmp
or
mov
jb
inc
xor
inc
xchg
xchg
sarb
cmpsb
outsl
sbb
pusha
mov
cld
dec
add
in
std
fs
or
xchg
mov
xchg
roll
fmull
pusha
repnz
jp
inc
ror
push
inc
jae
lea
sbb
neg
test
cwtl
xchg
das
fwait
pop
pop
cmp
popf
sub
mov
int
jp
sbb
pop
add
and
mov
rcll
mov
or
pop
outsb
push
int
fdivrs
clc
xchg
dec
pusha
jl
xchg
pop
addl
sbb
pop
jle
mov
cld
testb
xor
inc
scas
xchg
pop
cmp
jge
pop
stos
dec
test
addb
dec
xor
pop
shll
fwait
xchg
dec
and
push
mov
loope
mov
mov
mov
xchg
pop
xor
test
xchg
orb
or
push
xchg
cmp
push
adc
cld
jno
call
sarl
lcall
in
out
aas
shll
jae
aas
rcll
dec
jno
pop
push
adc
mov
mov
fcoms
rcll
fstpt
jg
lret
jnp
mov
lea
mov
xchg
pusha
shll
xchg
inc
pop
push
aam
cmp
loopne,pn
outsl
xchg
adc
test
sbb
subl
into
outsb
xchg
and
insl
sbb
in
jbe
mov
enter
jle
data16
cwtl
mov
pop
mov
sbb
add
dec
decb
repnz
outsl
push
cs
mov
pop
fisubrs
dec
ror
pop
lcall
xchg
mov
sub
inc
popa
dec
imul
aaa
adc
adc
mov
out
stos
mov
xchg
push
lcall
out
cmp
lods
lds
pop
mov
pop
push
scas
sub
test
jae
or
leave
jp
xor
test
popl
xchg
in
ds
icebp
call
cmp
cmp
lahf
pusha
pop
test
fs
fcmovnbe
mov
push
jae
outsb
pop
in
cmc
push
pop
mov
dec
cmp
test
dec
adc
addr16
lret
out
pop
stc
mov
into
lcall
imulb
adc
pop
les
es
cmp
inc
and
icebp
mov
es
jnp
adc
out
xchg
dec
push
leave
loopne
in
out
xchg
imul
mov
inc
nop
sahf
mov
add
stc
xor
adc
hlt
xchg
or
clc
test
adc
inc
and
stos
out
xchg
test
movsl
xchg
fwait
lret
push
pop
rorb
or
popf
push
adc
push
adc
scas
and
fs
cli
cmpsb
cltd
pop
xor
fsubrl
or
or
mov
push
faddp
popa
push
mov
loopne
jge
and
shll
aam
sub
dec
xchg
mov
dec
insb
mov
cli
inc
adc
push
aas
fisubl
xor
dec
mov
ljmp
add
mov
shr
lcall
jmp
ja
fisubrs
mov
rcll
jns
ds
movsl
adc
shl
mov
jg
dec
test
mov
in
call
sti
jb
mov
dec
ljmp
loop
repz
nop
push
enter
dec
rol
rcrl
hlt
inc
sahf
mov
xchg
and
ret
mov
mov
icebp
mov
notb
movsl
loopne
mov
jae
add
cli
addr16
push
int
fwait
test
into
xlat
adc
stc
dec
rclb
stc
dec
lahf
movsl
cld
xlat
jp
les
push
xchg
mov
lahf
inc
adc
popa
push
sbb
mov
sar
mov
xor
sub
sbb
xor
call
sub
sar
aas
test
mov
mov
xorb
repnz
mov
out
jns
test
jecxz
push
inc
inc
dec
dec
insl
rclb
kmovb
fisttps
mov
mov
je
aas
lods
loope
ror
shll
push
enter
inc
mov
push
inc
je
data16
xor
sbb
out
mov
addr16
movsb
lcall
shl
pop
rcrb
repnz
add
push
xor
pop
pop
mov
push
xor
movl
inc
inc
adc
inc
mov
scas
push
jae
inc
and
sbb
outsb
shll
pop
lea
test
addb
push
imul
jg
sbb
scas
stc
pop
or
lock
std
insl
insl
mov
mov
xchg
movsl
fadds
adc
es
cmpsl
orb
sahf
inc
outsl
jge
mov
movb
data16
cli
cmp
pop
adc
bound
rorl
or
mov
add
jmp
push
inc
sbb
xchg
jl
mov
dec
push
popa
or
gs
sub
cmp
jae
dec
cmp
mov
xlat
mov
jmp
orl
push
jbe
imul
mov
mov
faddl
ss
xor
jo
ret
divl
nop
rol
nop
testb
or
mov
sbb
push
ret
in
or
add
mov
add
xor
nop
in
cwtl
push
orb
or
mov
rcl
arpl
loopne
mov
adc
mov
jg
jne
pop
fimull
movsl
mov
push
jp
jo
jle
mov
sub
insl
sub
sub
repnz
push
sar
add
outsl
mov
movsb
mov
mov
cmp
push
mov
jmp
xor
or
inc
bound
xchg
xor
das
inc
jb
mov
inc
call
xchg
mov
mov
lock
push
repnz
sbb
imul
and
pop
jnp
pop
sub
xor
std
or
mov
or
mov
pop
cmpsb
mov
ret
int3
fsubl
mov
ret
inc
in
add
and
ret
leave
or
xchg
data16
push
and
xor
lds
jge
add
sarl
pop
out
push
push
pop
cmp
inc
mov
shlb
fdivl
mov
scas
xor
push
mov
and
cmovl
ret
aad
test
jns
mov
mov
dec
or
mov
daa
outsb
sub
mov
inc
inc
shll
jno
addb
verw
ja
xchg
rolb
mov
or
mov
fisubrs
mov
lret
stc
jge
sbb
xchg
ds
xor
and
push
bound
std
lock
aad
out
mov
mov
pusha
addr16
in
inc
mov
cmpsb
add
xchg
sub
jecxz
sbb
imul
inc
les
stos
jbe
repz
sub
adc
pop
lretw
test
jbe
mov
xorl
out
sti
leave
pop
push
xchg
inc
xor
stos
pop
push
or
bound
fadd
insl
mov
aaa
xor
mov
lock
sbb
subb
fs
pavgw
stc
aam
push
clc
xlat
xor
in
mov
and
sub
cmc
loope
cmpsb
mov
mov
push
dec
push
addr16
sbb
push
ljmp
test
or
sbb
dec
mov
mov
adc
push
mov
out
dec
and
test
cmpsb
clc
mov
ret
int3
cmp
int3
stc
ja
cmp
add
fbld
jne
outsb
call
xor
pop
out
inc
pop
loopne
xor
fsubrs
cs
pop
arpl
imul
jl
lahf
add
in
cmpl
push
cltd
jl
pusha
and
scas
aaa
ds
cwtl
add
jge
jp
jle
arpl
outsb
loope
dec
pop
sub
mov
ret
jb
inc
push
mov
pop
or
int3
mov
xchg
xor
push
cmp
rorb
push
xchg
xchg
js
mov
mov
pop
pop
dec
xchg
dec
dec
sub
lea
cmp
push
xchg
cltd
std
stos
pop
fs
sbb
xor
cmpsb
cmpsb
std
cmp
popa
in
pusha
mov
cmp
in
insb
xchg
pusha
lds
fisubrs
js
inc
nop
ret
xchg
stc
icebp
sub
clc
jnp
sub
mov
stc
popf
xchg
mov
add
in
xor
rclb
or
jp
mov
sub
pop
daa
push
jl
jb
aaa
jo
mov
sbb
out
icebp
int
scas
push
loope
loopne
mov
push
in
jp
add
lret
pop
lea
dec
pop
jno
dec
mov
movsb
lods
lds
xchg
ret
test
roll
icebp
pop
dec
add
jb
mov
andb
xchg
pop
jg
loop
jecxz
iret
pop
call
mov
push
fidivl
add
fmuls
rorl
xchg
xchg
xor
mov
insb
ja
scas
add
xchg
xlat
addr16
popf
mov
mov
out
insb
jno
cli
pop
outsl
pop
xor
in
cmpsl
inc
repnz
xchg
and
into
arpl
mov
xor
mov
bound
outsb
out
xchg
fdivp
inc
sbb
mov
leave
pop
movsb
or
in
inc
aam
call
hlt
mov
ljmp
xchg
rol
andb
jle
lock
insl
cwtl
call
popl
lcall
push
lret
cld
fstl
inc
mov
mov
arpl
and
dec
cmpb
add
aam
jb
std
jecxz
adc
insl
int3
inc
pop
jge
data16
aas
jecxz
lea
xchg
fwait
repnz
inc
push
mov
jns
mov
test
pop
dec
and
aad
sub
mov
subb
call
xor
lahf
and
jge
dec
aaa
mov
xor
fcompl
dec
or
in
and
add
sbb
xchg
ret
and
test
fstpt
sbb
rcrl
mov
fmul
or
xor
mov
pop
xchg
and
pop
push
sub
mov
sub
outsb
stc
and
mov
mov
roll
test
pop
pushf
inc
gs
push
arpl
in
inc
rorb
inc
cmc
and
sub
int3
inc
xlat
mov
lock
pop
stos
lods
int
push
xchg
in
jge
mov
dec
mov
call
jge
test
jmp
inc
and
test
inc
pop
push
fdiv
push
std
xchg
mov
mov
sbb
dec
in
shll
adc
insb
inc
orl
insl
add
jne
sub
movsb
mov
and
pop
mov
movsb
pop
mov
scas
push
shlb
adc
inc
mov
push
nop
in
dec
in
add
or
add
stos
icebp
or
xchg
icebp
outsb
push
dec
sbb
into
mov
fcomps
jmp
sbb
shrl
sbb
leave
mov
mov
jno
adc
xor
adc
xor
mov
jno
nop
adc
mov
push
cmp
pushf
lahf
fmul
xchg
in
dec
push
loope
ficomps
or
xchg
push
push
pop
popa
outsl
push
jle
and
adc
mov
add
push
scas
idivl
js
or
adc
add
lea
fiaddl
xorb
inc
xchg
mov
push
mov
pop
mov
sbbb
mov
cmp
sbb
scas
ljmp
xor
fcompp
xchg
adcb
andl
push
shrl
int
mov
inc
and
gs
mov
or
or
sub
cmp
ret
loope
repnz
repz
enter
push
mov
and
add
sub
outsl
addb
mov
xchg
ljmp
clc
or
jecxz
dec
push
mov
push
int3
xchg
cwtl
mov
fnstsw
mov
inc
loope
ret
mov
inc
sbb
push
mov
mov
jnp
test
les
orl
xchg
adc
cmpsl
mov
mov
cmp
lods
pop
mov
xor
jno
divl
and
ret
sbb
inc
hlt
mov
fimuls
enter
or
xor
mov
or
lret
out
andb
loope
sub
shll
rclb
outsb
inc
mov
leave
xor
mov
jl
xchg
add
inc
mov
lret
movsb
pop
jmp
mov
jle
cmpsl
xor
xchg
xchg
mov
pop
mov
xchg
loope
pandn
xchg
rcr
push
in
subb
mov
fucomi
mov
scas
push
inc
in
xchg
ss
pop
sub
scas
sbb
gs
xor
inc
and
lahf
inc
loopne
into
mov
loop
jbe
dec
dec
cmpb
push
sbb
jno
xor
scas
mov
lcall
rcl
psubusb
hlt
jbe
jmp
cmp
lret
jae
bound
jne
push
xchg
jg
mov
push
shr
movsb
data16
loopne
xchg
ja
jne
insl
enter
leave
cmp
sub
int
push
mov
dec
stos
iret
push
stc
fcoms
jmp
aam
xchg
jns
jo
sub
in
mov
mov
xchg
rolb
setb
pop
loop
xor
dec
inc
mov
ficoml
cmp
inc
dec
fs
loopne
sub
into
lret
popl
push
mov
mov
fwait
gs
popa
cmp
sbb
xor
and
push
dec
icebp
dec
xor
push
adcb
jno
push
lods
jg
lret
popa
xchg
iretw
jb
outsb
lret
jg
insl
leave
shrl
and
cmp
cmp
xchg
dec
xor
adc
sbb
je
loopne
xor
mov
sub
inc
inc
pop
lods
test
fdivs
shlb
mov
nop
arpl
adc
popa
xor
fisttpl
mov
pop
xchg
and
dec
into
lret
dec
cmp
or
add
ret
lods
mov
jg
insb
testb
pop
push
push
add
ret
jge
add
insl
mov
les
xchg
lret
inc
addl
or
pop
mov
mov
xorl
fiaddl
stc
adc
mov
mov
pop
xchg
mov
in
faddl
roll
inc
cmp
lret
pop
repnz
js
mov
inc
xor
dec
or
mov
xchg
and
xchg
scas
std
ljmp
lods
js
loope
sbb
mov
lcall
inc
loopne
add
or
cwtl
movl
inc
stc
cmpb
arpl
jb
loope
add
push
jp
mov
fmull
add
cld
sub
pusha
push
add
inc
xor
mov
xchg
mov
stos
push
cld
adc
mov
cwtl
sbb
xchg
lret
mov
out
gs
sub
mov
xchg
nop
xchg
sarl
std
ret
sarl
adc
loop
xchg
adc
xchg
xabort
idivl
popf
inc
imul
mov
xor
popf
pop
pop
sbb
shlb
mov
mov
mov
inc
pop
adc
rclb
xlat
mov
jo
and
clc
ror
and
sub
pop
xchg
loope
mov
sbb
cmpsl
scas
and
bound
or
xor
mov
add
and
or
hlt
cmpl
mov
andl
ret
pop
dec
rclb
or
neg
lods
fadds
dec
xor
cld
outsb
enter
lret
jle
and
adc
rcrb
lret
std
leave
addr16
shlb
xor
in
dec
xor
or
push
mov
push
and
ds
into
rcrb
sbb
addl
mov
sub
outsl
out
mov
stc
mov
lahf
mov
inc
rclb
xchg
outsl
xor
popf
or
mov
arpl
push
push
pop
xchg
int3
test
scas
shr
inc
mov
lea
in
mov
testl
pop
js
out
lcall
xor
test
data16
mov
ret
les
popl
cwtl
pop
cmp
sub
xchg
and
xchg
jb
int
adc
xor
leave
sub
add
xor
sub
cmovo
inc
inc
jno
inc
inc
mov
icebp
cmpsl
xlat
xchg
mov
mov
out
hlt
mov
mov
fiadds
mov
add
sub
xchg
mov
adc
xor
jmp
mov
lea
shl
mov
out
mov
pop
ja
push
stos
divb
lretw
mov
add
mov
mov
or
lcall
repnz
stc
jp
sarb
lahf
icebp
lcall
push
scas
xchg
iret
fldcw
adcb
fdivrl
pop
mov
xlat
in
and
push
jmp
nop
mov
loope
pop
in
push
std
sbb
shll
mov
mov
jno
fildl
es
sahf
mov
jb
dec
js
or
out
lods
stc
outsb
out
cmp
ret
into
mov
mov
or
xchg
into
imul
cmp
xchg
out
inc
cmc
stc
adc
inc
ret
loope
inc
scas
cli
sub
stos
mov
ljmp
inc
mov
iret
pushf
mov
and
xchg
and
dec
push
movsl
scas
cmp
in
sbb
mov
adc
xorb
jmp
sub
mov
xchg
lahf
adc
cmp
imul
xchg
mov
cmpsb
push
jp
xor
into
ljmp
pop
negb
adc
or
outsb
or
xchg
adc
sbb
test
out
dec
xchg
dec
xchg
mov
dec
ret
std
xor
dec
adc
enter
mov
inc
aam
mov
loope
sub
mov
push
mov
mov
jmp
inc
xchg
int
and
in
dec
pop
cmp
iret
jb
xor
add
lcall
loop
xor
pop
adc
add
sbb
hlt
stos
dec
or
jne
mov
fsubr
leave
jnp
outsb
rorl
mov
and
lds
mov
lods
inc
jnp
mov
jg
and
std
dec
and
pop
nop
cmp
jb
je
xchg
rcrb
xor
out
mov
addr16
lods
jle
sub
add
jp
mov
and
sahf
pop
jbe
sub
jecxz
int3
or
imulb
inc
int
mov
fsub
leave
rorb
scas
push
sahf
shrl
int3
scas
adcl
jp
xchg
inc
or
lds
dec
dec
jmp
scas
adc
dec
or
dec
or
jp
push
stos
arpl
scas
adc
push
rorb
stos
nop
push
xor
lcall
xchg
inc
sub
inc
test
pop
cwtl
cs
mov
xor
and
inc
test
and
inc
dec
int3
mov
leave
mov
xor
and
xorb
rcl
lret
push
pop
add
in
repz
rorb
mov
fstl
mov
mov
lea
mov
push
test
mov
data16
out
shl
xor
adc
xor
popf
popa
xor
cs
push
add
shrb
cmc
xor
bound
lods
adc
movsb
ret
push
xchg
sub
data16
into
inc
ffreep
stos
into
addl
xchg
push
mov
mov
jae
pop
loope
mov
mov
lcall
adcb
push
inc
subl
cmp
in
mov
rolb
movl
mov
insl
or
mov
and
sbbl
jo
mov
adcl
adc
rorb
arpl
sha256msg2
pop
xor
mov
xchg
incb
sbb
shl
mov
stc
jp
sbb
addr16
dec
jne
inc
push
cmc
pop
into
popa
into
out
push
mov
xor
out
push
dec
mov
imul
loope
movsl
push
inc
mov
pop
cmp
rorl
in
mov
subb
jo
cli
movsb
in
rolb
mov
sub
mov
aad
insb
mov
sar
adc
sub
jo
and
xchg
xchg
shlb
mov
xor
inc
xchg
mov
dec
bound
in
sbb
sti
loopne
push
mov
movsb
shlb
xchg
sbb
jle
stos
jae
popf
dec
scas
sub
inc
fucom
dec
xchg
outsl
in
fld
pop
xchg
cmp
sub
cltd
push
sub
sbb
xchg
scas
push
aad
mov
jo
pop
arpl
pop
cwtl
or
push
pusha
inc
rol
inc
mov
xor
xchg
xchg
lods
push
and
mov
inc
rcll
shr
pop
jb
inc
mov
lods
pop
xchg
sti
pop
bound
xchg
addb
xchg
aam
adc
andl
mov
rcrl
test
push
mov
and
cmp
inc
mov
xchg
sahf
xor
outsl
adc
mov
nop
popa
xchg
mov
int
push
mov
jo
mov
movsb
inc
sbb
push
xchg
stc
adc
sub
test
inc
push
adc
jle
mov
dec
pop
inc
xlat
out
test
pop
jae
in
jl
das
xchg
inc
jne
cmc
jle
addb
sbb
sahf
adc
push
fnstcw
adc
stc
inc
into
mov
xor
mov
loope
mov
int
test
aam
cli
int
mov
dec
push
xchg
mov
sub
cmp
roll
xor
shll
xchg
cmpsl
push
loope
pop
mov
pop
add
pop
add
out
dec
out
mov
mov
mov
mov
lds
mov
push
adc
push
mov
mov
daa
fs
stos
pop
inc
push
iret
adcl
xor
adc
out
mov
xor
jb
mov
push
outsl
notb
xchg
sbbb
jge
mov
test
stos
int3
outsl
nop
mov
jno
dec
roll
mov
repnz
lret
sahf
xchg
ret
and
xchg
movsl
push
popf
or
scas
int
test
gs
fldcw
cmp
or
push
popf
xchg
add
scas
xlat
push
mov
pop
out
xor
enter
sbb
push
push
into
fcomp
rol
out
in
jbe
pop
inc
cmp
inc
xchg
es
mov
add
out
dec
cltd
loope
add
into
bound
scas
push
mov
mov
fidivs
jne
cmovae
pop
or
push
mov
adc
mov
lret
sarl
mov
sub
jnp
inc
and
les
xchg
shll
std
pushf
and
mov
mov
or
jbe
xor
in
xchg
xchg
dec
popf
jo
add
mov
sbb
mov
ds
xchg
adcl
or
xchg
jne
mov
cmp
repz
dec
mov
loope
lods
sub
rep
adc
js
int
sbb
imul
xor
inc
jns
test
xor
push
testl
int
jno
or
ror
lcall
cmp
push
popf
and
mov
add
adc
jge
pop
pop
fsub
adc
out
xorl
into
sbb
adc
xchg
cmp
nop
mov
sub
inc
popf
mov
mov
mov
sub
pushf
jnp
pushf
loope
outsl
popf
ss
inc
aam
hlt
sbb
mov
test
mov
jbe
stos
adc
in
mov
aas
insb
test
sbb
jns
push
xor
pop
movsb
cmpsb
mov
insb
in
pop
inc
loope
and
enter
scas
jns
pop
loopne
push
je
outsb
into
mov
ficoml
pop
ds
push
mov
fcoml
aaa
adc
iret
push
xor
data16
add
fdivrl
test
dec
inc
jo
mov
xor
mov
into
push
lcall
mov
or
jecxz
dec
jl
add
dec
movsl
mov
jg
mov
lds
stos
mov
mov
ret
xchg
fldt
sti
mov
popf
push
sub
test
aas
arpl
mov
sub
popf
xor
push
flds
add
adc
mov
and
outsl
dec
add
lods
push
inc
dec
ret
outsl
adc
mov
sbb
mov
inc
mov
jns
shl
stc
ds
pop
mov
xor
jp
loopne
pop
mov
add
mov
sub
mov
inc
addr16
fisubl
cli
ja
mov
mov
pop
push
fnstenv
xchg
dec
out
popa
cmp
xchg
das
pop
test
sub
xchg
scas
rcl
movl
adc
cwtl
das
xor
mov
jp
ficomps
jmp
test
test
xchg
repz
pop
outsb
pop
stc
fimull
mov
enter
cltd
push
push
mov
mov
hlt
leave
xchg
xor
sub
hlt
int
int
xor
push
call
mov
cld
repnz
mov
mov
dec
in
sbb
das
mov
movb
test
lcall
js
lret
xchg
dec
int
push
inc
icebp
mov
addb
xor
push
sbb
repz
fsubl
data16
or
cmp
mov
ret
push
inc
sub
loop
arpl
adc
shrl
xor
inc
jle
sbb
decl
into
push
ficoml
cmp
inc
pop
mov
jnp
addr16
sarl
bound
and
pop
lock
sub
jp
xor
mov
mov
pop
sbb
int3
test
outsb
push
cmp
int3
cltd
xchg
lods
imul
fisttps
les
xchg
enter
aam
lahf
push
stos
loop
adc
fidivrl
pop
jb
daa
sahf
enter
cmpsl
and
or
jmp
ds
shr
pushf
insb
adc
inc
mov
xchg
cmp
dec
rorb
xchg
inc
mov
movsb
iret
add
jbe
test
xchg
sti
xor
js
pusha
cmc
daa
int
add
adc
sbb
adc
push
xor
ror
xchg
dec
lock
leave
push
dec
xchg
push
sub
hlt
outsb
insb
and
std
mov
mov
or
xor
addr16
cmpb
mov
out
xor
inc
or
in
rorb
jbe
mov
mov
fcoms
lret
and
mov
jge
pop
push
mov
sub
outsb
inc
adc
xor
dec
pop
inc
jp
mov
mov
lock
aam
dec
xor
test
inc
mov
pop
lods
imul
outsb
roll
adc
nop
mov
cmp
xchg
and
xchg
mov
sarb
mov
addl
mov
repz
push
loope
cmc
jno
mov
fsubl
sbb
daa
ret
xchg
out
lods
xchg
jecxz
addl
out
movsl
jne
inc
dec
test
fidivrs
xor
jns
incl
insl
and
imul
xchg
or
mov
add
inc
add
xchg
dec
andl
popa
jl
mov
cmp
data16
lods
push
mov
push
mov
into
mov
push
jp
add
mov
insb
iret
and
mov
repnz
push
adc
enter
lea
push
fs
push
lcall
loopne
jns
scas
shll
adc
mov
jp
lock
push
popa
cmp
inc
adc
dec
pop
add
mov
fcmovu
scas
jae
cld
sarl
sbb
mov
adc
test
incb
cmp
hlt
ret
lock
addb
aad
dec
stc
mov
aad
outsb
aaa
mov
sbb
push
mov
aam
xchg
adc
xor
inc
ja
xor
mov
dec
sar
xchg
xchg
sbb
mov
and
loope
incb
ror
mov
mov
negb
cld
loope
cmc
xchg
add
adc
mov
ja
inc
xor
popf
pop
sub
add
int
adc
push
inc
add
mov
mov
add
stc
icebp
jno
cmpb
add
push
pusha
pop
pusha
andb
in
out
imul
orb
out
pusha
dec
xchg
push
addr16
jae
xchg
lea
fdivs
rcrb
sub
int
mov
inc
out
dec
rorb
test
mov
mov
adc
sbb
jg
rcrb
shrl
test
adc
dec
pop
push
adc
leave
fsubrs
xor
cmp
nop
dec
adc
rcll
repz
sarl
icebp
sub
mov
addr16
mov
xchg
lcall
cmp
add
mov
sbb
mov
sbb
dec
sarl
dec
ret
xor
fildl
mov
lret
fmulp
notb
lahf
xor
iret
add
adc
push
xor
icebp
leave
cmp
sub
stc
jg
in
pop
dec
mov
js
sub
out
add
loope
push
sahf
push
pop
imul
xor
jns
repz
mov
test
jns
xchg
stos
mov
stos
or
pushl
adc
mov
in
and
xchg
iret
cmp
cli
scas
and
packsswb
inc
pushf
stos
xor
add
and
xchg
xchg
jne
dec
pop
sub
cld
test
mov
rcrb
sarw
out
adc
mov
push
sub
daa
lret
pop
cmpsb
addl
icebp
int3
dec
push
lret
sub
stos
mov
mov
pop
inc
lcall
popf
mov
fbld
or
mov
fs
roll
aaa
or
ljmp
adc
jno
mov
subb
push
aam
sbb
mov
mov
pusha
jg
pop
adc
mov
stos
pop
and
int
push
dec
popa
shll
ss
mov
add
lock
dec
ret
mov
lods
mov
cmp
jle
mov
ret
and
jle
enter
pushf
pop
ds
push
repnz
int
add
sbb
test
push
xchg
loope
iret
mov
push
or
push
xor
pop
inc
xorb
addr16
movaps
andl
dec
inc
push
sbb
jo
push
notb
rep
dec
int3
in
mov
stos
pusha
loop
shll
and
xor
xor
dec
into
aam
lahf
popa
adc
mov
cmp
jae
jo
xchg
inc
xor
xchg
jnp
add
mov
roll
cmp
push
out
repz
jg
aad
icebp
lcall
inc
add
out
ljmp
mov
xchg
jecxz
rolb
and
sti
and
bound
pop
dec
mov
mov
jg
jbe
xor
jns
inc
into
pop
out
repnz
xchg
pop
jns
inc
in
xchg
cs
mov
mov
into
pop
mov
push
notl
xor
mov
js
sbb
into
ss
lea
ror
ja
adc
mov
pusha
adc
js
add
pop
or
adc
pop
xor
mov
ss
movsl
rorl
add
and
icebp
stc
shrl
cmpsl
xor
aaa
dec
testb
bound
loopne
popf
push
sbb
xor
bound
jl
jae
ret
mov
add
int
mov
loopne
jae
ret
iret
adc
ror
pusha
je
adc
xor
addl
cmp
insl
rorl
inc
adc
push
dec
jbe
ror
insl
ror
outsl
add
sub
ja
enter
outsb
int
hlt
jno
lea
inc
pop
dec
sbb
dec
jg
popf
dec
add
xchg
mov
dec
cmpsl
xchg
mov
aaa
into
or
jl
xor
stos
and
pop
sbb
and
aaa
test
xchg
popf
adc
xchg
or
jbe
xor
fwait
xor
js
lcall
dec
pushl
jo
test
in
mov
lahf
sub
nop
ja
xor
push
jne
out
fisttpl
xchg
nop
cmp
sub
popa
ret
in
push
shlb
dec
addl
nop
in
jecxz
xorl
fnsave
xchg
push
pop
mov
push
out
nop
fbld
lods
bound
or
es
jp
jmp
sbb
cmpsl
jp
rclw
sahf
push
shl
pop
pop
in
lcall
testb
mov
addl
add
ret
xchg
jae
roll
rorl
fnstsw
dec
pop
leave
arpl
stc
sub
in
movsl
pop
fwait
xchg
fnstsw
test
lret
mov
mov
pop
insb
xchg
pushf
into
std
outsb
mov
dec
mov
and
xchg
sub
stos
pushl
shl
jbe
push
adc
sub
xor
nop
ret
mov
mov
pop
inc
xor
push
inc
sbb
xor
mov
xchg
test
sbb
mov
mov
test
adc
fnstcw
fucomip
mov
test
xchg
stc
mov
repz
mov
push
dec
pop
shlb
icebp
rcrl
inc
xchg
ret
insb
sbb
bound
aad
xchg
mov
push
inc
mov
fisttpll
cmc
nop
shrl
call
add
mov
sbb
mulb
pop
nop
std
push
int
adc
xchg
adc
mov
testb
andb
mov
movsb
jmp
cmc
inc
push
push
inc
push
mov
push
dec
xchg
addr16
das
mov
add
mov
adc
xor
push
mov
lcall
mov
xor
jae
push
in
mov
aaa
cmp
nop
lods
int
adc
into
cltd
arpl
movsb
sti
mov
test
and
push
inc
dec
add
xchg
xchg
lds
mov
jmp
fldenv
xor
loop
lea
clc
pop
enter
and
jne
mov
stos
mov
sub
adc
fsubp
lcall
lret
jb
jg
fcoms
mov
jbe
mov
stc
ror
aaa
addr16
inc
cmp
push
out
jo
shlb
push
ss
push
popl
iret
cmp
cmp
dec
push
imul
ss
dec
or
pusha
xchg
movsl
adcb
scas
das
jne
dec
adc
scas
pop
js
cmpsl
lds
jae
cmp
sub
int
jmp
cld
jle
sub
cwtl
ja
add
rorb
add
xor
shlb
xor
inc
pop
aas
xor
ret
mov
mov
sbb
out
iret
sub
cmp
dec
pop
or
sbb
inc
aam
jp
sti
jecxz
or
pop
fsubrs
mov
leave
or
xor
inc
push
clc
in
arpl
sahf
cmp
int3
dec
popa
lret
out
sbb
mov
mov
xor
push
jo
lahf
mov
sub
push
cmpl
xchg
popf
cmpsl
or
dec
dec
jb
out
and
bound
mov
xor
xchg
rcrb
mov
mov
adc
sahf
and
xchg
mov
mov
enter
outsl
icebp
adcb
xchg
dec
inc
add
jle
inc
sbb
fcompl
xchg
sub
mov
mov
shll
fistps
sahf
or
and
push
js
push
lods
dec
ror
lcall
or
mov
into
shlb
dec
incb
xor
mov
jno
int3
icebp
xchg
dec
mov
mov
push
pop
pop
sbb
xor
cmpsb
push
sbb
iret
in
inc
add
xor
daa
into
jo
cld
add
xchg
push
addb
xchg
cmp
jl
mov
stos
and
stc
ret
lea
inc
and
cld
or
adc
lea
push
dec
pop
cmp
popf
std
xlat
mov
inc
push
ret
inc
adc
and
faddl
bound
pop
and
loope
xlat
std
jp
sub
popf
add
loope
inc
ret
nop
cmp
mov
inc
cmp
rcll
adc
cmpsb
loope
orl
push
inc
mov
and
xor
cmp
mov
sarl
fstpl
shll
adc
inc
ss
dec
nop
mov
stos
in
or
hlt
push
into
or
mov
mov
addr16
shrl
and
xor
mov
out
outsb
repz
add
lahf
int
mov
sub
int3
xchg
inc
push
cmpsl
mov
cld
mov
out
mov
mov
icebp
in
and
mov
add
jecxz
pop
sbb
mov
pop
cmp
push
and
add
inc
les
xor
adc
sbb
hlt
stos
lcall
jg
lods
loope
icebp
rorl
subl
sub
divb
pusha
orl
nop
xchg
jno
les
adc
loope
ljmp
fnstenv
dec
or
test
mov
pop
hlt
mov
lock
mov
lds
shll
repnz
ss
jp
push
add
sbb
inc
cmp
jno
aaa
sbb
jge
and
cmp
aam
pusha
xor
loopew
adc
cli
imul
jmp
mov
movsl
rcll
int
arpl
adc
fildl
in
or
fldt
mov
or
xchg
repz
jl
sbb
insb
dec
andb
adc
xchg
pop
sarl
jbe
sub
scas
jo
push
insl
mov
mov
sahf
orb
inc
jg
insl
mov
adc
dec
push
rcl
mov
int
fisttpl
mov
sarl
test
das
xchg
scas
movsb
popf
cmp
shlb
fcmovne
add
mov
mov
imul
repnz
or
ret
out
int3
mov
inc
lret
shlb
lcall
pop
cmp
mov
insl
lods
mov
pop
push
out
insl
mov
aam
adc
push
pusha
xor
inc
test
fs
add
push
ret
and
xchg
dec
push
pop
frstor
jb
xor
mov
add
and
dec
mov
std
inc
out
outsb
mov
adc
xor
adc
xor
inc
add
das
cmp
stos
stos
or
cmp
mov
push
push
mov
xlat
xchg
sbb
mov
mov
jo
out
shrl
mov
mov
rcrl
jecxz
int
push
adc
push
or
rcr
pushl
cmp
pop
into
out
ret
jge
sub
into
push
es
lock
adc
push
ret
icebp
push
inc
adc
lret
setnp
mov
dec
dec
rcll
jp
mov
sar
insb
mov
fs
xchg
push
stos
sub
or
leave
mov
inc
dec
and
inc
pop
mov
xchg
cmpb
roll
mov
lods
lret
dec
jbe
xchg
daa
pop
fldcw
xchg
out
lods
and
adc
inc
sub
rclb
hlt
jg
sbb
inc
in
push
lock
inc
mov
sbb
lock
shrl
jns
lea
ja
lret
jnp
mov
out
sub
lcall
inc
loope
mov
xchg
cmp
xor
push
adc
mov
stc
int
loope
sub
arpl
adc
cs
idivl
pop
mov
popf
mov
ja
pop
into
dec
andl
mov
pop
dec
rorb
sub
fcompl
inc
les
es
je
lds
or
rcr
imul
mov
mov
mov
push
mov
sahf
sbb
xchg
push
adc
push
sbb
rol
sub
sbb
imul
inc
rcr
out
leave
ret
mov
dec
jg
and
mov
ret
sti
arpl
jl
dec
sbb
fmul
test
or
rol
cmp
inc
adc
js
and
rorl
push
xchg
xor
rol
fucomi
rol
sar
pop
aam
insl
hlt
add
or
mov
jp
das
cld
out
nop
xor
daa
add
lahf
jne
andl
shlb
negl
and
mov
jbe
push
sbb
in
sbbb
loop
in
and
lret
int
jle
cmp
mov
shl
mov
stos
outsl
mov
aas
xor
add
or
into
mov
icebp
into
ret
adc
leave
and
std
xor
test
xor
jns
popf
sarl
xor
dec
loopne
andb
lea
push
rcrb
mov
xchg
mov
sub
rcll
push
mov
loop
adc
mov
dec
clc
or
mov
shrl
add
scas
jp
sbb
xorl
std
test
loopne
inc
mov
scas
mov
push
addb
mov
mov
ds
and
cltd
jnp
push
shll
outsb
test
cltd
jecxz
mov
nop
in
jno
std
in
inc
mov
mov
push
popa
test
inc
xor
push
pop
mull
or
push
lcall
xchg
cmp
test
add
mov
push
fcmovu
mov
pop
push
ret
outsb
mov
inc
push
loope
das
add
mov
sbb
out
ja
push
mov
fs
adc
mov
dec
shrb
inc
inc
add
test
cmp
push
aas
mov
nop
aad
fwait
mov
icebp
inc
loopne
dec
pop
clc
gs
sti
daa
jl
and
rcr
xchg
push
fcmovb
sub
dec
pop
sbb
rcll
jae
clc
test
push
xlat
loope
popa
inc
push
divb
movsb
mov
stc
ljmp
and
bndldx
ss
adc
repz
mov
mov
fmulp
clc
xor
aaa
test
ror
cmp
mov
xchg
mov
jg
push
sub
mov
adc
popa
lods
inc
sbb
pushf
sbb
mov
es
cmpsb
mov
dec
xor
mov
mov
fcmovnb
and
stos
icebp
mov
into
xor
add
fs
xor
add
inc
in
in
and
sub
pop
and
adc
xor
arpl
ljmp
cmp
ss
inc
shrl
orb
add
outsb
ja
xchg
testl
inc
add
cmp
adc
pop
adcl
vandps
orb
jecxz
or
and
lds
xchg
sbb
loop
dec
lret
in
rcrl
clc
jmp
sub
mov
int
out
push
mov
xor
xor
movsl
shr
bound
and
ret
jl
mov
into
mov
fbstp
fiaddl
into
sarl
fwait
ret
mov
lcall
rcrb
in
nop
sub
add
xor
insb
mov
in
mov
push
add
pop
cmp
outsb
ljmp
shlb
sub
incl
xchg
mov
xchg
sahf
mov
mov
test
and
sarb
jg
lcall
inc
or
jo
xchg
mov
adc
push
and
sbb
mov
adc
into
mov
shl
pop
cmp
fpatan
pop
cmp
inc
nop
xor
mulb
pop
mov
cmp
dec
mov
mov
std
mov
fisubs
dec
and
rcrl
into
gs
pop
and
xor
dec
push
push
jle
add
xor
mov
push
mov
aam
in
ds
cmp
dec
and
jle
in
sub
xor
mov
mov
repnz
mov
mov
jno
stc
jne
loop
mov
js
sarl
dec
add
cwtl
cs
fsubrl
mov
fstpl
xlat
ret
pop
aad
rcrb
jb
xchg
and
mov
pop
jno
mov
test
push
in
inc
ss
push
inc
mov
mov
push
mov
xchg
xor
out
rcll
int
adc
scas
aam
fs
push
and
pop
and
test
lret
inc
pop
pop
xor
push
aam
gs
ret
lcall
roll
jle
lret
ffree
jle
dec
icebp
inc
int
inc
ss
scas
inc
jns
stos
fstl
leave
mov
outsb
adc
inc
cs
mov
push
push
pop
cld
into
aam
mov
push
enter
mov
sbb
pop
mov
scas
pop
adc
xor
jge
jp
ret
mov
mov
dec
pushf
or
stc
ljmp
mov
add
insl
push
call
inc
push
sub
cli
jmp
orb
outsb
jecxz
lret
lods
push
mov
jecxz
add
sub
jmp
jb
out
and
add
mov
xchg
push
mov
pop
inc
xor
inc
out
mov
into
movsl
sarb
cwtl
lea
stc
sbb
cs
sti
lds
fdivrs
call
int
stos
loopne
pop
test
fadds
fstps
push
push
lods
mov
sbb
xchg
push
lds
cmp
cltd
loopne
sbb
xchg
push
shll
jle
pop
iret
jg
test
push
les
loop
iret
imul
mov
push
push
jp
setne
and
xor
push
push
sbb
jb
stc
pushl
aaa
pop
lea
xchg
sbb
mov
pop
mov
push
add
and
pop
dec
inc
into
adc
cmpsb
adc
adc
inc
rolb
stos
shl
jmp
push
ret
jb
rorl
icebp
xor
inc
jp
mov
loope
stos
cmp
cmc
add
mov
pop
jno
xchg
fs
xchg
inc
push
repnz
lcall
or
push
push
jnp
stos
shl
inc
data16
es
pushf
pop
out
xor
inc
dec
inc
les
gs
in
jg
ljmp
iret
mov
push
and
cmpl
pop
mov
push
push
dec
lock
pop
push
jge
xchg
xor
lret
popa
dec
jbe
adcl
orb
gs
outsb
ret
adc
rorb
into
xchg
xor
xchg
fistl
shrb
enter
mov
mov
mov
negb
sub
sahf
movsl
jno
test
and
popa
imul
mov
push
roll
iret
dec
fistpl
sbb
or
push
xor
dec
movsl
std
inc
add
cmpsb
lods
push
ds
cs
mov
jnp
dec
and
mov
sbb
fbstp
rolb
dec
jno
daa
add
mov
int3
adc
inc
push
je
fdivs
push
push
mov
popf
cmp
jmp
cmp
xchg
jo
mov
out
cltd
mov
push
repz
push
mov
jle
jno
scas
push
inc
push
rorl
cmp
lods
xor
pop
and
mov
ret
cld
aas
test
xchg
jl
cmp
xor
repz
add
fs
pop
push
and
es
cmp
rcl
add
clc
shll
ss
xchg
adc
inc
imul
ret
bound
or
pop
test
push
mov
pop
adc
lret
andl
sub
mov
aad
cmp
xchg
data16
mov
xor
ficoml
cmpsb
xchg
sub
xchg
xchg
cmpsb
jmp
aas
pop
pop
cmp
sub
stos
outsl
mov
insb
dec
jns
ret
lods
xor
sub
inc
cli
out
mov
jbe
test
in
stos
jp
cmp
lahf
inc
pusha
push
xchg
lods
and
cmp
mov
test
and
fisubrs
cltd
mov
mov
ret
inc
xor
push
rcrl
xor
jo
test
mov
mov
test
ja
sahf
mov
mov
mov
popa
loope
aaa
mov
mov
cmp
movsl
nop
mov
sti
hlt
mov
push
cld
aam
xchg
daa
pushf
mov
adc
xchg
and
dec
stos
or
pop
inc
andb
jb
test
lahf
sub
and
stc
xchg
andb
mov
xor
jp
shr
xor
movsl
sub
jnp
fwait
pusha
push
adc
jecxz
jne
notb
shrl
xchg
in
push
call
dec
nop
out
jns
adc
dec
mov
scas
stos
incl
sub
add
js
out
mov
dec
pop
cld
imull
mov
xor
cmp
pusha
cmp
gs
push
das
mov
aas
xor
and
jp
lret
test
push
test
sti
outsb
mov
add
lret
fists
jg
xchg
mov
ret
xchg
inc
mov
mov
or
mov
xor
ss
and
sti
movl
iret
cmpsb
jg
pop
pop
xor
movsb
dec
hlt
pop
ljmp
inc
mov
mov
fnstsw
and
jo
jns
mov
xor
insb
xchg
inc
jmp
xchg
mov
imul
out
push
arpl
les
xor
in
mov
and
dec
xor
dec
test
pop
xchg
incl
es
cmp
and
push
inc
xchg
push
iret
and
cmp
dec
sbbb
cmp
or
push
sbb
insb
filds
out
mov
popf
add
gs
xchg
ljmp
data16
fimull
mov
and
inc
sbb
fstl
xchg
jbe
int3
inc
in
dec
cmp
sbb
stc
ds
sbb
xchg
xor
add
dec
cld
push
jecxz
cwtl
cwtl
fmuls
addr16
mov
inc
push
cwtl
nop
inc
mov
add
cmp
inc
cmpsb
dec
cmp
fmulp
pmovmskb
pusha
notb
push
adc
jg
and
mov
lock
popf
adc
cld
js
and
mov
xchg
es
jg
leave
xchg
dec
lcall
cld
inc
fisubs
cs
inc
or
jecxz
adc
imul
scas
inc
aas
push
and
icebp
das
mov
or
xchg
icebp
push
popa
sbb
arpl
push
icebp
fcomps
ficomps
and
addb
jae
ret
dec
leave
fisubs
mov
scas
movsb
out
sbb
dec
mov
adc
and
fstpl
push
cwtl
xchg
xchg
inc
repz
shr
lods
sub
rorb
add
nop
mov
pop
dec
ret
inc
bound
adcb
orb
inc
push
push
lahf
mov
push
inc
jl,pt
icebp
and
mov
dec
add
lcall
cmp
cmc
subb
cmp
jp
int
add
fisttps
inc
in
hlt
adc
repz
pop
pop
inc
jae
aaa
outsb
jecxz
or
jno
xor
mov
sti
data16
ja
pop
pminub
mov
or
inc
stos
push
jl
xor
rolb
je
sbb
imul
jb
xor
add
jo
mov
inc
adc
xor
pop
dec
das
mov
outsl
fsub
dec
push
stc
pop
push
push
outsb
push
fcomps
hlt
xor
movsl
inc
icebp
inc
push
pop
insl
rcrl
xchg
daa
cmpsb
leave
inc
cmpsl
xchg
mov
inc
shll
fcmovne
icebp
dec
mov
xor
inc
add
call
nop
cld
jnp
loope
sahf
neg
xchg
push
push
sbb
in
mov
fdivrs
pop
js
jns
inc
pop
pop
enter
cwtl
mov
mov
shll
mov
add
in
dec
lods
xor
cwtl
mov
rcr
jae
xor
xor
mov
pop
imul
sub
mov
push
pop
daa
mov
push
addr16
push
out
sbb
rolb
fidivs
add
lcall
dec
jecxz
pop
nop
sub
push
push
fwait
pusha
push
push
jge
sbb
leave
cmp
dec
xor
pop
popa
cmpsb
pop
sahf
test
sbb
mov
incb
jae
or
cmp
lret
arpl
jb
fldcw
ret
sarb
ror
xchg
loope
mov
xor
cmpsl
sub
mov
rorl
pop
jno
push
pop
shll
or
pop
xchg
mov
adc
ret
and
lds
cs
mov
jno
inc
divl
aaa
cmp
fsubrl
gs
pop
sahf
xchg
and
hlt
xchg
in
test
xchg
xlat
push
xchg
inc
sbb
loope
int3
lahf
adc
and
inc
mov
imul
mov
mov
roll
inc
dec
and
pushf
test
cwtl
pop
cmp
pop
clc
sub
xchg
test
mov
xor
enter
shll
sub
scas
cmpb
inc
push
xor
sub
cmp
das
jns
sahf
clc
and
xchg
in
jp
cmp
js
cli
xor
sbb
test
jo
xor
in
or
jp
add
inc
pop
adc
mov
jno
pop
adc
pop
xchg
inc
into
push
mov
fstl
xor
add
and
xor
dec
pop
inc
jge
pop
pop
mov
or
sbb
xchg
mov
hlt
jg
pop
js
add
cmpsb
mov
jae
in
stc
cld
or
scas
bound
push
cmpsb
xor
cltd
dec
test
mov
jle
das
shrl
xchg
rclb
adc
add
enter
mov
mov
mov
push
sbb
jns
add
stc
hlt
fmull
popf
xchg
mov
pop
push
imul
cwtl
movsb
mov
int3
mov
mov
popa
or
add
adc
xor
andb
addr16
loopne
enter
or
dec
scas
xchg
popf
push
call
or
add
xor
lea
adc
adcl
nop
mov
mulb
pop
dec
and
dec
jp
cltd
cmp
and
movsb
jmp
mov
xor
adc
dec
fmul
mov
mov
cmpsb
jecxz
mov
imulb
xlat
mov
and
xor
or
sub
or
and
pop
mov
xchg
data16
int
push
sub
pavgb
jo
out
mov
lds
inc
xor
or
push
outsb
aad
je
pop
popf
cmp
sahf
and
adc
fldcw
jae
mov
rorb
outsl
and
inc
incl
lcall
popf
insb
push
orb
adc
xor
cltd
fsubrs
shl
test
ljmp
inc
adc
cmpxchg
push
into
push
shl
aad
gs
nop
cmpsl
mov
mov
or
insl
sub
bnd
dec
and
inc
inc
mov
dec
inc
pshufw
mov
into
stos
or
ret
outsb
push
pusha
xchg
pusha
xchg
mov
stos
mov
push
xor
mov
ret
mov
clc
mov
daa
and
or
xor
and
and
lock
xorb
dec
sbbl
and
xchg
or
add
or
push
cmpsl
into
adc
xchg
in
shl
or
add
add
xchg
add
in
dec
cltd
ds
mov
sub
les
in
out
test
mov
cmp
out
stos
sti
and
cld
mov
in
fildl
ja
xor
push
roll
add
mov
or
sbb
mov
mov
inc
std
sub
push
lcall
adc
fsubrs
adc
pop
sarb
in
in
aaa
xchg
scas
pop
testb
repz
pop
nop
adc
mov
outsb
jo
or
sti
fldl
daa
sahf
bound
popa
addl
or
arpl
arpl
inc
add
mov
jp
push
xchg
ret
jns
add
in
mov
stos
jl
jl
icebp
or
and
cs
push
aaa
push
sarb
xchg
push
rcll
pop
add
push
xchg
sbb
inc
lahf
xchg
add
sub
xchg
addl
aas
mov
addr16
shll
div
pusha
rorl
ss
mov
inc
ror
pop
repnz
out
lods
adc
push
repnz
mov
mov
test
popf
or
popa
add
cmpsb
push
inc
inc
sbb
ja
fnstcw
add
xchg
les
leave
push
mov
xchg
dec
xchg
mov
pop
mov
lret
mov
xor
jo
mov
sub
pop
subb
mov
sbbl
shrd
fdivs
dec
mov
adc
loop
mov
repnz
std
cli
dec
sbb
pop
popf
inc
ffreep
xchg
push
sbb
cmpsl
jnp
cs
pop
inc
mov
shlb
xor
sub
cmp
dec
into
mov
into
xor
mov
sub
cmp
mov
jge
rcrl
push
pop
jle
push
jp
push
mov
cmp
jne
das
sbb
mov
rcll
mov
adc
fs
add
mov
mov
inc
lock
push
hlt
push
push
gs
push
imul
fisubs
in
inc
loop
sbb
mov
cli
push
insb
jl
xchg
insb
sub
mov
mov
test
push
and
lock
lahf
push
mov
add
lock
sub
sarl
dec
movsl
jg
pusha
add
push
insl
mov
cltd
jmp
sub
lods
mov
loopne
pusha
inc
les
mov
jne
mov
test
insl
adc
inc
inc
cmp
adc
xchg
aam
sbb
cmpsb
cmp
inc
popf
xchg
rorl
subl
add
addr16
mov
repnz
and
push
jg
xor
pop
fiaddl
xchg
stos
adc
inc
mov
dec
cli
das
lock
xor
xor
inc
mov
mov
or
inc
mov
inc
xor
sti
outsl
jns
icebp
inc
inc
lds
pop
push
outsl
mov
cmp
hlt
mov
dec
add
dec
adc
add
aaa
into
std
and
out
push
inc
les
jo
cmp
dec
sbb
or
push
xchg
test
stos
insl
imul
in
cmp
xchg
mov
xchg
mov
enter
inc
push
je
mov
inc
or
aam
and
ss
dec
add
mov
xchg
and
and
sti
pushf
mov
lcall
mov
loopne
sahf
inc
sub
xchg
fdivl
push
loope
adc
jmp
push
shl
pop
lcall
and
das
es
xchg
mov
xor
arpl
flds
clc
fwait
and
xor
enter
adc
adc
roll
aam
test
das
call
test
lcall
dec
mov
jno
xor
push
scas
cmp
xchg
push
jns
adc
dec
cmp
lret
dec
lods
data16
lock
in
gs
adc
jne
dec
loopne
scas
mov
dec
cmp
push
mov
push
xchg
push
fildl
daa
push
jge
xor
loop
jmp
pop
xchg
xchg
out
leave
cmp
push
xchg
mov
stos
xor
mov
inc
cld
adc
dec
pop
popf
pop
pop
mov
sub
loopne
mov
xor
jmp
shlb
test
hlt
roll
cmp
sbb
outsl
xor
inc
push
sub
imul
jo
jae
loopne
repz
push
call
nop
pop
sahf
dec
inc
or
ss
mov
mov
ret
inc
daa
jecxz
cmpsb
into
jg
cld
inc
xchg
push
roll
xchg
cmpsb
and
fisttpl
cld
mov
pop
add
test
repz
add
cwtl
les
adc
inc
adc
aam
movsb
lea
loope
push
iret
push
mov
jno
testb
inc
xorb
mov
stos
sbb
in
pop
inc
sub
fldl
repnz
loop
jge
mov
pop
scas
mov
inc
cmc
cmp
cmc
fisubrl
ret
xor
dec
sti
es
gs
inc
out
dec
clc
add
jne
je
mov
lock
rcll
jg
nop
fidivl
mov
mov
mov
push
addr16
sub
pop
stc
ljmp
aas
or
loope
jb
shrl
xor
ret
add
je
xchg
das
and
shlb
faddl
jae
nop
dec
pop
lret
mov
lret
icebp
jecxz
dec
ja
fwait
pop
jo
jle
shlb
shrl
stos
push
pop
test
xor
scas
arpl
jl
ljmp
push
lea
jecxz
xchg
xor
sarl
xchg
into
xor
pop
or
repnz
jp
adc
dec
jns
dec
nop
push
push
stc
dec
push
mov
repnz
lods
mov
jo
movsb
les
rorb
mov
xchg
cmpsl
aaa
shl
jns
mov
lcall
jecxz
lcall
shrb
cmp
xor
mov
sbb
ss
loopne
sbbl
cmc
dec
scas
cmpsb
lea
push
mov
daa
add
pushf
jmp
pop
ja
scas
rol
dec
out
les
clc
lret
loop
mov
inc
scas
in
push
push
mov
dec
fildll
sbb
or
sub
xor
push
push
adc
flds
aam
inc
loope
popf
cmp
add
outsb
push
push
or
into
scas
cmc
dec
adc
pop
gs
push
adc
push
scas
jecxz
or
ss
into
lret
test
push
into
xchg
push
push
xchg
test
and
cmp
sbb
pop
jecxz
or
pusha
mov
jle
adc
fidivs
adc
xchg
mov
call
add
mov
movsb
lret
xorb
xchg
mov
mov
mov
xchg
mov
inc
sbb
das
sbb
mov
jecxz
cmp
pop
ds
subl
sub
or
jecxz
xor
xor
rcll
leave
loopne
shll
xor
lahf
adc
mov
pop
into
xor
rolb
int3
in
test
pop
insl
add
or
call
pop
movsb
jns
push
adc
xor
jno
shr
or
mov
mov
and
push
insl
movsb
xlat
sbb
pop
pop
sti
or
sbb
aaa
cmpsl
and
sarl
pusha
fdivrs
pop
mov
popl
std
inc
xor
pushf
mov
mov
jg
push
dec
loop
add
cmp
sar
mov
rol
fisttps
jecxz
jb
int
lret
cwtl
negb
pop
shrb
arpl
mov
and
jg
roll
leave
mov
test
xor
ss
in
rorb
cmp
xchg
mov
cmpsb
ret
lret
mov
leave
lods
adc
sar
push
mov
sub
adc
insb
out
scas
pop
cs
inc
ljmp
pop
dec
or
repnz
mov
pop
mov
xchg
stos
ds
loopne
jb
movsb
das
push
jo
loope
add
je
fisubrs
jno
sbb
negl
jmp
inc
mov
pop
je
mov
pop
adc
inc
push
neg
mov
jb
rol
addr16
and
hlt
sub
cld
mov
pop
shlb
or
mov
mov
iret
jp
testb
jne
add
in
push
mov
fs
add
ret
adc
inc
pop
mov
sub
cld
push
mov
dec
scas
sub
cmpsb
out
mov
inc
ds
add
xor
adc
xor
mov
or
dec
bound
aam
outsb
dec
fwait
lea
lahf
adc
jg
inc
sbb
pop
pop
repz
push
int
sahf
cmp
test
jmp
xchg
and
mov
fidivs
xlat
clc
inc
lret
adc
sahf
jae
push
mov
push
or
imul
arpl
sbb
out
adc
adc
xchg
icebp
cmc
mov
xchg
test
push
dec
jbe
call
popf
add
push
xchg
int3
sub
ljmp
cmp
inc
adc
and
sbb
dec
rclb
repnz
dec
loope
fsub
push
cmpb
das
adc
add
into
gs
xor
call
mov
aas
sar
xchg
inc
out
or
mov
rclb
jbe
mov
mov
sarl
xchg
inc
xchg
xchg
push
pop
lods
and
cmp
paddusb
sub
mov
cli
dec
popa
stc
fidivrl
push
dec
sbbb
iret
mov
push
shlb
sahf
gs
mov
pop
mov
xchg
xor
or
add
jo
dec
jne
mov
push
out
fdivs
mov
xchg
jb
sub
pop
loope
fistl
jnp
sahf
xor
add
and
mov
and
int3
jbe
dec
fs
ret
test
jmp
mov
mov
mull
pop
cmp
ret
xor
jae
jl
lret
xlat
lcall
test
push
pusha
lds
jne,pn
mov
xchg
sub
cld
push
sbb
cmp
lahf
xchg
adc
arpl
push
push
sub
sub
mov
gs
cmpsb
or
mov
mov
cmp
and
movsb
ret
sbb
sti
into
mov
or
cpuid
sbb
jg
inc
lcall
std
jg
mov
sub
push
test
iret
push
out
test
mov
push
mov
mov
adc
sbb
mov
jg
push
into
push
aad
fcomps
jno
mov
jmp
hlt
fcoms
adc
gs
adc
dec
nop
pop
and
bound
popa
xchg
xor
and
cmp
mov
cmp
and
jns
mov
sub
das
push
out
clc
fdivr
mov
stos
xor
or
pop
lret
adc
add
inc
ds
scas
sbb
xchg
scas
outsl
or
sub
xacquire
or
sbb
pushf
movsb
push
push
sbb
sbbb
dec
fcoml
call
jb
pop
cmp
xchg
or
insb
dec
ja
xchg
xchg
movsb
into
nop
mov
push
sbb
stos
sbbb
cmp
inc
in
addr16
mov
inc
adcb
lcall
sahf
sbb
dec
jecxz
jp
fbld
fwait
push
or
addr16
nop
lret
mov
in
sbb
insb
insl
rcrl
les
push
fisttps
test
cmpsb
dec
call
aad
orb
movsb
in
fisubs
fnstsw
jp
out
xor
loope
and
imul
push
into
in
xchg
dec
xor
jno
roll
sub
les
xchg
shll
push
sub
lret
dec
jl
int
loope
pusha
inc
gs
scas
arpl
push
fsubl
mov
pop
daa
mov
out
lods
adc
iret
pop
jg
movsl
xor
xchg
pop
fbld
pop
xchg
jno
xchg
ret
pop
mov
cmp
xchg
pop
mov
push
out
int
out
insl
jno
rcll
push
jb
cmp
fucomip
jg
mov
insb
and
lret
es
dec
fdivs
ret
pop
not
push
cli
add
js
enter
loop
cmp
xor
xor
inc
pop
adc
mov
xchg
cmp
out
mov
and
mov
dec
sub
pop
cmp
cmp
push
insl
data16
gs
cmpsb
in
sub
cmpsb
loopne
rcrl
pop
pop
shl
xchg
dec
inc
pop
in
je
mov
ffree
fwait
lock
dec
inc
insb
push
les
push
jb
jg
lock
sarb
test
add
sarl
and
rcl
push
dec
push
jae
inc
outsb
ds
xor
mov
mov
dec
adc
test
xchg
fld
les
jmp
scas
lods
lcall
xchg
mov
pop
mov
sahf
add
jg
gs
int3
loope
outsl
and
popf
mov
inc
in
inc
or
inc
xchg
shll
xor
and
mov
rol
sahf
xchg
addl
mov
inc
into
movsl
or
fldt
test
push
xor
nop
xchg
add
pushf
aas
lods
cld
lock
jge
fidivl
mov
inc
mov
xor
addr16
inc
rorl
xor
stc
xor
adc
out
push
shrl
mov
push
xchg
mov
repz
test
jle
lcallw
adc
cltd
dec
mov
jl
cld
push
nop
lods
sub
adc
and
dec
imul
push
fadd
mov
orb
out
test
cmc
inc
mov
pop
sbb
and
in
cltd
xor
cmp
and
aam
cwtl
cmp
xchg
xor
sub
fidivl
xchg
icebp
out
or
orl
dec
xchg
mov
jmp
arpl
sub
push
cld
push
movl
push
test
out
lds
enter
cmp
add
adc
push
pop
ror
pop
lock
cmpl
pop
mov
xchg
popf
lds
inc
cltd
push
orb
and
in
push
adc
popf
and
push
ss
xchg
add
ss
into
xlat
int
add
mov
adc
inc
das
scas
mov
iret
notl
cmp
stc
ss
aaa
aaa
adcl
pop
dec
dec
inc
xchg
clc
mov
lret
mov
inc
mov
clc
fidivrs
adc
or
pop
mov
cltd
push
scas
pop
nop
clc
xor
dec
lea
lret
jmp
inc
mov
jb
pushf
ss
test
pop
pop
sub
sub
push
cmp
jb
push
outsl
add
ficoml
in
shlb
mov
and
lcall
mov
xchg
loopne
mov
push
or
sub
xor
daa
incb
outsl
xchg
push
outsb
xor
decb
into
dec
inc
data16
mov
lock
mov
aas
imul
sbb
or
mov
xchg
repz
lods
inc
pop
push
sbb
rorl
adc
je
xchg
sub
das
jp
out
adc
jle
enter
les
xor
adc
rorb
xor
sub
jmp
pop
mov
ss
xor
outsb
mov
adc
add
cmp
mov
cmp
test
pop
jle
adc
push
hlt
xor
shll
mov
mov
inc
cwtl
cs
xchg
lret
sti
sarl
mov
pop
repz
sbb
and
rcrb
js
enter
sbb
mov
pop
adc
xor
inc
xchg
pop
rcrb
jo
add
dec
stos
xor
inc
stos
fnsave
lods
adc
xchg
jg
dec
or
inc
aaa
out
cmp
and
adc
push
rcrb
dec
xor
push
pop
shl
sahf
mov
push
pop
popf
das
fdivrs
adc
inc
stos
fistps
insb
jp
insl
lret
pop
cmpsl
in
cmp
xlat
xor
cmp
add
and
xor
fsubl
dec
sub
add
mov
in
cs
mov
cmpsl
cli
addr16
push
xor
mov
repnz
sbb
test
mov
popf
xchg
adc
rolb
loop
insb
jg
test
push
loope
xchg
mov
xchg
sub
nop
adc
and
fdivrl
and
ffree
mov
xchg
jo
push
jno
or
mov
out
mov
addr16
inc
mov
roll
push
enter
int
mov
scas
out
dec
insb
cmp
scas
cli
mov
mov
lock
iret
sub
stc
push
mov
xchg
shll
push
mov
push
inc
sub
ret
push
shll
in
iret
roll
xor
mov
mov
jl
mov
inc
add
hlt
dec
pop
in
inc
inc
popa
popf
leave
int
xchg
inc
jle
inc
push
add
pop
jns
fxch
ret
int3
rcll
rcll
cmp
pop
rclb
mov
mov
mov
cwtl
jno
rclb
sbb
dec
sub
aam
int
test
clc
insl
push
xchg
jp
sub
sbb
call
or
rcrb
leave
repz
bound
cmp
adc
mov
lcall
ja
lret
into
in
mov
sub
jl
movsb
xor
fdivl
jle
outsb
mov
mov
cld
stos
push
out
xor
insl
arpl
leave
add
std
push
mov
pop
in
outsb
push
xor
inc
add
add
enter
jb
xchg
mov
pop
sub
jl
inc
cltd
les
xchg
mov
mov
push
jne
lods
test
dec
sub
repz
pushf
mov
insl
rolb
mov
mov
loop
push
sti
adc
push
xchg
shl
push
mov
xchg
xorb
outsb
stc
loopne
lret
rcl
scas
mov
leave
fdivrl
out
push
pop
adc
mov
and
lea
in
xchg
jno
pop
mov
sub
xchg
pop
inc
inc
inc
mov
int3
jns
inc
mov
test
cmpsl
out
jne
fistl
push
ret
icebp
mov
rorl
xchg
jno
adc
mov
inc
shrl
mov
add
leave
data16
adc
push
mov
insb
xor
xchg
in
mov
xchg
ror
jae
mov
lds
push
pop
adc
add
mov
cmp
jg
out
push
lea
cs
test
int
mov
adc
mov
dec
cltd
dec
rcll
add
xchg
xchg
dec
mov
xchg
sub
loop
and
cwtl
pop
inc
xchg
dec
cli
rcl
and
add
cs
mov
inc
cmpb
les
sar
fcmovu
pushf
ret
popf
ret
jl
push
xor
mov
push
ljmp
lock
mov
mov
aaa
or
sub
xor
cli
cld
popf
test
movsb
ds
jns
inc
lret
mov
xor
in
jl
cmp
sub
pop
repnz
into
add
jmp
cmp
push
out
push
sub
fistpll
and
lock
gs
mov
js
fdivrl
int
dec
sbb
jo
push
cmp
rol
loop
and
fisttpll
jb
cmp
xor
sbb
pusha
shll
test
fldenv
cmp
into
inc
push
and
testb
push
lret
stos
jae
rorl
fisttps
dec
icebp
std
mov
stos
jno
inc
je
inc
xor
cmp
push
mov
sarl
adc
rcrl
arpl
push
es
jle
adc
les
cmp
andb
add
sub
cmp
sbb
mov
sti
mov
xchg
bound
dec
iret
shll
fiadds
push
iret
cmpsl
sub
enter
rorl
pop
dec
lret
inc
jp
test
inc
push
pop
or
scas
bound
inc
js
cld
jb
inc
int
push
aam
xor
cmpsb
pop
out
into
pop
fisttps
notb
dec
xor
scas
mov
mov
cmpsl
fs
adc
mov
dec
push
adc
cmp
mov
xor
inc
stos
stc
mov
xorb
pop
adcl
icebp
mov
roll
inc
sbb
adc
mov
jl
push
rcrb
xor
lock
pushf
sbb
insl
add
es
or
dec
cltd
sbb
sti
push
sbb
mov
loop,pt
jno
lods
cmp
std
outsb
hlt
jp
jae
mov
adc
mov
imul
adc
push
out
orb
xchg
sub
xchg
test
shll
jmp
xchg
adc
data16
xor
outsb
imul
shrl
mov
mov
imul
mov
jge
push
adc
push
mov
xchg
icebp
fcompl
sub
movsl
and
adc
int3
in
push
mov
in
mov
adc
movsb
cwtl
mov
dec
push
or
and
mov
daa
pop
cmpsb
cwtl
test
push
adc
imul
jle
xchg
mov
mov
mov
int3
repz
sbb
mov
fucomip
fwait
mov
push
test
out
test
stc
loope
mov
addb
sbb
lods
shlb
mov
dec
rolb
in
pusha
mov
ret
pop
inc
xchg
pop
test
mov
jae
outsl
stos
roll
data16
dec
jle
inc
and
call
negl
xchg
jg,pt
xchg
mov
dec
jne
std
dec
sti
repz
ret
push
pop
mov
mov
cmp
xor
jbe
lcall
daa
cmpsl
pop
adc
test
out
sbb
xor
pop
adc
aas
jmp
adc
loopne
hlt
in
sti
cltd
push
jno
mov
ret
or
lcall
or
adc
out
mov
and
ficoms
int
faddl
pop
popf
sbb
ljmp
call
adcb
inc
dec
or
mull
ret
mov
mov
mov
dec
out
xlat
fnstcw
or
adc
or
shrb
xor
jo
pop
ljmp
cmpsb
pop
push
mov
fwait
xor
mov
repz
or
sbb
mov
push
lret
and
or
jns
cli
inc
xlat
sub
lods
pop
js
mov
ja
push
pop
imul
stos
mov
mov
adc
pop
lock
sub
push
mov
push
shrl
xor
lret
outsb
enter
fcomps
cmp
leave
adc
cmp
mov
mov
mov
mov
aaa
xchg
cmp
orl
popa
lcall
stos
js
stc
bound
pop
mov
jmp
cmp
adc
xor
dec
ret
mov
cli
inc
pop
or
push
push
call
push
xor
out
xor
mov
sub
xchg
adcb
xor
dec
jnp
stos
xor
mov
fidivs
je
mov
inc
aaa
mov
movsl
arpl
add
xchg
cmp
cmp
iret
xor
fistps
test
nop
jbe
and
mov
xor
roll
idivb
mov
inc
xor
lock
inc
iret
lret
mov
and
mov
outsl
fstpt
inc
dec
push
or
mov
push
popf
cmp
mov
jp
push
in
pusha
jae
jo
pcmpgtb
push
cmc
movsb
leave
and
cltd
push
and
fwait
mov
jne
loopne
pop
or
sbb
or
adc
mov
or
call
idivb
and
insl
dec
push
lock
movsb
mov
inc
inc
rdmsr
iret
cwtl
cmp
lods
xchg
call
ret
stc
mov
ljmp
xchg
aas
jge
xchg
movsb
xor
out
xchg
add
mov
jo
push
sub
push
insl
mov
addr16
push
into
out
mov
jae
or
inc
or
sub
ret
call
nop
loopne
push
jg
pop
and
dec
repz
mov
xchg
cld
mov
loope
add
or
cmpl
add
xor
shll
mov
mov
in
cmc
push
adcl
mov
sti
push
xor
sub
xor
mov
mov
in
push
ljmp
cmp
in
movsb
lods
mov
pop
enter
filds
sbb
fcomip
iret
arpl
mov
xchg
sbb
sahf
inc
add
inc
popf
add
pop
or
jle
ljmp
sbbl
mull
jp
mov
sbb
xor
loop
fadd
pop
pushf
dec
push
aad
cmpsb
lret
xchg
mov
sbb
std
sub
push
lods
rcrl
mov
adcl
mov
mov
adc
repz
outsb
jb
stc
push
loope
fsubr
into
mov
xchg
mov
xor
and
repz
fsubrl
cld
std
repnz
fidivl
lret
or
popw
xor
or
inc
ja
stc
sar
adc
dec
mov
push
clc
stos
test
imul
mov
pop
jg
stc
lods
les
out
nop
subl
fildll
mov
bound
xchg
xor
sti
pop
iret
cmp
adc
or
sub
or
mov
dec
imul
pop
cltd
movsb
enter
or
in
repz
push
lret
dec
mov
fdivrl
int
xor
adc
inc
retw
lea
leave
jo
push
xchg
cmp
sbb
mov
lea
adc
jge
xor
sub
jo
jmp
movsb
outsb
stos
inc
test
or
mov
inc
nop
jb
iret
iret
mov
push
lds
xchg
shll
inc
lods
xchg
outsl
testb
push
mov
pop
xor
das
jle
call
pop
pop
sbb
mov
xor
dec
fidivs
aas
mov
pop
lcall
cmp
cmp
dec
roll
jle
sub
mov
add
mov
ljmp
aaa
mov
mov
loope
loop
xchg
jb
les
mov
lret
repz
push
les
and
add
jo
pop
cmp
dec
jecxz
add
scas
dec
cmp
popa
add
lcall
leave
sub
int
fwait
pusha
test
push
push
sub
vmovmskpd
xor
add
dec
imul
jns
shll
mov
mov
push
mov
xchg
xchg
lcall
mov
sub
jb
popf
adc
loop
pop
scas
push
cld
xchg
icebp
jbe
xchg
push
inc
xor
push
mov
popa
or
adc
add
mov
and
push
cmp
rcrl
add
mov
into
shrl
rorb
bound
dec
jns
xchg
push
jg
xchg
in
adc
mov
rclb
jbe
push
mov
xchg
mov
push
pusha
lahf
mov
scas
stos
xor
outsb
movsb
fs
addb
popf
hlt
loope
or
ror
sbb
cmpsb
push
jns
arpl
cmp
fildl
and
les
enter
xchg
cmc
fisubl
add
lcall
test
hlt
dec
sbb
inc
scas
and
jle
stos
inc
pop
mov
sub
lods
xor
jge,pn
into
and
stos
jg
stos
push
lock
pusha
mov
adc
or
dec
mov
push
aam
xchg
sbb
hlt
push
gs
nop
lods
jno
mov
xchg
dec
cltd
lods
push
jo
ror
fadd
lret
mov
push
gs
cwtl
rcrl
std
dec
cmpsl
leave
orl
cmp
movsb
jb
xor
repz
ljmp
test
push
ret
mov
pop
enter
xor
mov
fsts
xor
pop
inc
inc
cmp
cmpsl
or
pop
adc
test
push
jno
or
imul
pop
push
lret
mov
in
mov
push
in
iret
dec
cmp
pop
push
pop
pushf
test
sbb
adc
std
fcomip
dec
mov
mov
mov
loop
xchg
mov
andl
mov
ja
adc
push
sbb
test
mov
or
inc
test
or
sbb
sub
mov
scas
insl
jb
adc
sbb
dec
push
pop
iret
cltd
ret
rcrl
mov
mov
mov
ret
cwtl
mov
xor
iret
dec
cmp
mov
push
vdivpd
mov
cmc
push
subl
push
lods
push
cld
mov
adc
mov
sub
adc
add
lret
xor
gs
xor
sub
mov
jl
and
mov
xchg
pop
jmp
sbbb
daa
mov
dec
pop
dec
sbb
inc
int
std
lods
xchg
leave
sbb
scas
jecxz
inc
xchg
xchg
xchg
cmp
mov
xor
dec
lahf
jbe
jmp
mov
and
push
std
and
push
nop
aaa
loopne
and
jmp
inc
lcall
push
cmp
or
xor
ja
or
xor
pop
sub
scas
out
mov
mov
idivb
scas
nop
sbb
xchg
mov
gs
cli
jmp
cltd
lods
cmp
pop
into
xlat
dec
fdivs
std
test
aad
or
repnz
or
cmp
mov
xchg
xchg
out
out
push
sub
iret
in
pop
lcall
mov
sbbb
adc
mov
pop
jns
xchg
mov
shr
xor
push
push
cwtl
inc
frstor
mov
popf
mov
icebp
scas
push
icebp
pop
inc
in
movsl
dec
dec
mov
call
push
mov
push
or
das
jecxz
jmp
xchg
mov
fdivr
shr
insl
cmp
inc
decl
fdivl
scas
push
inc
adc
xchg
dec
test
jne
xor
fcoml
lret
popa
sub
sbb
jecxz
dec
shrl
sahf
dec
jno
mov
out
or
adc
inc
sbb
mov
xor
imul
xor
and
dec
pop
rolb
addr16
shlb
jg
jb
inc
stos
jns
nop
test
shlb
lock
xchg
ficoms
out
jb
arpl
sahf
lea
push
jbe
nop
push
sub
loop
mov
cmp
cmp
xchg
pop
jns
add
enter
add
rcll
rol
push
pop
mov
inc
mov
push
cs
rcrl
mov
push
xchg
ret
lret
pop
cld
mov
dec
in
shlb
xor
mov
arpl
out
adc
or
jge
add
les
cmp
insl
xchg
xor
and
lds
pop
and
mov
and
rorl
test
jg
xor
fcoml
cmp
mov
pop
test
ds
jnp
sub
and
or
cmp
jecxz
lods
mov
ret
pop
sub
and
jmp
pop
mov
mov
pop
stc
enter
adc
adc
faddl
ret
adc
outsl
cli
mov
movsb
shll
sub
addb
test
mov
sbb
sbb
cli
dec
adcl
mov
xchg
mov
cmp
and
mov
outsb
shl
jnp
push
xchg
sub
icebp
pop
cmpsb
jnp
xchg
mov
sbb
mov
movsb
sub
push
jmp
fidivs
dec
dec
jmp
inc
out
into
js
jns
jmp
or
int
mov
dec
and
jg
repz
mov
mov
std
stc
pop
sbb
mov
in
scas
dec
rcrl
stos
inc
mov
rcll
xchg
and
mov
pop
pop
lods
fimuls
jecxz
dec
loopne
incb
outsb
push
cli
jb
fcompl
xchg
mov
mov
cld
xchg
test
and
call
jb
div
and
push
movsl
ja
mov
sub
aaa
inc
pop
mov
test
scas
inc
mov
mov
sti
xchg
xchg
pop
int3
dec
lods
push
in
xor
cwtl
and
inc
outsl
jo,pt
mov
ljmp
arpl
dec
scas
mov
outsb
xor
jp
dec
inc
idiv
jnp
popa
scas
shlb
jo
loope
popa
shlb
out
lds
gs
and
rorl
xchg
pop
into
mov
mov
mov
mov
mov
push
cwtl
dec
stc
adc
nop
dec
pop
xor
pop
sbb
mov
bound
shlb
movsl
adcl
push
les
mov
mov
xor
pop
mov
mov
jb
test
push
test
pop
dec
pop
and
xchg
pop
or
jle
out
mov
mov
shlb
sahf
mov
mov
add
out
ds
cmpsl
outsb
mov
add
iret
ljmpw
push
cmpsb
outsb
push
push
cmp
xchg
test
dec
mov
mov
cmc
ret
adc
insb
in
addl
pop
xor
inc
sbb
xchg
dec
test
xor
jnp
mov
mov
inc
mov
jle
xchg
mov
mov
loopne
dec
add
movsl
pop
pusha
out
aad
xor
popf
loop
aam
mov
ret
push
xor
jge
xchg
cmp
popa
aaa
sub
push
push
loope,pn
jb
push
jo
jns
leave
mov
and
jmp
xlat
dec
xor
call
add
loopne
mov
adc
push
xor
icebp
jecxz
adc
mov
mov
shr
lock
jecxz
jno
push
mov
inc
push
fimull
popf
dec
js
mov
int
sar
jns
scas
fmull
rcrb
test
decl
xor
inc
jne
gs
mov
mov
add
popf
adc
and
add
fbstp
xor
rorl
inc
fisubs
insl
sub
and
add
js
cmp
jno
jmp
mov
xchg
mov
jecxz
ljmp
pop
add
adcb
outsb
sbb
adc
xchg
test
stos
jle
or
clc
aaa
outsb
mov
dec
mov
mov
jb
in
or
add
rclb
and
sbb
or
sahf
push
scas
jmp
pop
xchg
clc
or
xchg
rcrb
out
daa
scas
fcoms
or
imul
pop
xchg
mov
mov
cmc
cmp
dec
int
xor
lret
jle
push
mov
add
push
mov
inc
call
ja
nop
mov
sub
pop
inc
cmp
push
mov
inc
fcoml
or
call
xorl
popa
lret
movl
cltd
pop
sbb
test
outsl
out
jnp
js
imulb
add
mov
addb
jp
mov
lea
add
add
xor
and
xor
xchg
adc
lcall
dec
sahf
cmp
cvtpi2ps
repz
sub
int
stc
stos
repnz
outsl
bound
push
int
mov
movsb
xchg
dec
xor
pop
xchg
sarl
sub
movb
pop
push
loop
pop
or
fistpll
push
rcll
and
popa
pop
cmp
mov
add
dec
inc
iret
out
inc
pop
adc
in
adc
lods
nop
shl
cmp
mov
pushf
mov
enter
gs
sub
jmp
std
add
sarb
mov
sub
nop
rcrl
lods
add
mov
sub
fld
stc
mov
lock
xor
adc
jmp
test
out
lahf
xchg
push
into
push
fildl
into
cs
add
push
les
xor
jo
dec
lret
aas
int3
jle
xchg
mov
pushf
cld
cmp
adc
jl
jo
cmpsl
and
xor
jmp
mov
add
in
pop
push
lods
sub
push
xchg
or
ljmp
mov
rol
add
in
xchg
out
mov
mov
addr16
jnp
jge
mov
out
ljmp
jb
mov
clc
mov
test
mov
adc
adc
add
push
xchg
sub
or
loop
dec
imul
stc
out
outsb
push
xor
add
test
push
adc
stc
ffree
inc
lds
xor
dec
and
setnp
xor
push
repnz
pop
mov
das
and
stc
dec
add
xchg
jns
rorl
jge
scas
nop
jp
sub
hlt
push
cmpsb
mov
inc
test
xchg
sbb
jo
outsl
ret
inc
andl
popa
sbb
jg
gs
cmp
popa
mov
jmp
cmovnp
in
lcall
cmpb
int
scas
cld
loopne
inc
cmp
lret
test
push
xorl
add
decb
mov
push
lods
jecxz
out
and
nop
out
clc
xor
aad
loope
jb
mov
shrb
addb
outsl
faddl
mov
mov
les
inc
repnz
xor
sti
jmp
mov
stos
xchg
push
cmpsl
push
inc
mov
adc
sbb
addr16
jg
sub
cmpsb
jmp
jge
xor
cmp
pop
cmc
xchg
push
mov
nop
loopne
dec
leave
sbb
hlt
add
dec
rorb
xor
xchg
inc
iret
cmp
pop
insb
repz
jns
out
jle
mov
adcb
stos
xor
mov
orb
loopne
gs
les
aad
mov
pop
inc
mov
push
pop
int
out
notl
dec
je
loopne
call
mov
mov
xchg
inc
inc
and
gs
adc
adc
jg
lahf
jo
outsb
or
fsub
pop
sbb
iret
cmp
and
sub
mov
push
and
xor
mov
lcall
scas
test
stos
xchg
imul
inc
cmc
xorb
movsb
sahf
adc
and
and
xchg
sbb
stos
movsb
das
jg
out
jno
fbld
mov
cld
mov
popa
dec
cmp
add
mov
imul
out
adc
xchg
cmpsl
add
xchg
mov
negl
adc
shl
frstor
dec
fcmovne
lahf
sbb
and
aam
dec
xchg
imul
and
sub
fdivr
xchg
in
inc
inc
mov
leave
hlt
jns
and
jg
mov
dec
xchg
ljmp
gs
jmp
mov
xchg
lcall
outsb
les
stos
movsb
mov
sti
pop
enter
sbb
pop
stos
sub
loope
or
push
push
out
mov
shll
mov
add
sub
mov
inc
inc
ret
mov
mov
pusha
js
cmpsl
jl
adc
dec
mov
push
ret
loopne
jb
and
mov
cmp
nop
sub
push
lcall
nop
fnstsw
addb
cmpsb
sub
lret
mov
test
in
scas
addr16
add
addb
repz
jno
cmc
xchg
daa
push
in
popf
fcmovnu
jl
inc
xchg
xor
pusha
rcll
out
mov
sub
das
frstor
scas
jnp
rcrb
rolb
lods
es
into
ds
stc
pop
clc
shl
mov
testb
shl
pop
inc
lcall
inc
cs
pop
data16
gs
pop
movsl
pop
jno
adc
cmp
fdiv
daa
test
mov
stos
cmp
or
mov
jl
into
ds
int
lahf
test
push
fistpll
outsl
pop
lret
stc
jg
js
mov
mov
addl
push
ds
or
dec
test
jno
adc
xor
orb
or
in
dec
test
push
mov
pop
xchg
clc
sub
test
add
sub
inc
imul
andb
push
rep
jecxz
pop
shll
or
stc
dec
and
mov
mov
test
or
test
push
sti
jno
inc
cwtl
mov
clc
out
mov
push
or
xchg
je
xchg
cs
and
adc
ficomps
mov
adc
push
adc
jp
std
icebp
pop
mov
popf
adc
mov
inc
into
mov
or
sbb
jl
add
add
addr16
jmp
sbb
xor
xchg
pop
push
mov
and
push
cmp
and
shrb
cmp
mov
aas
or
cs
push
data16
lret
leave
jo
pop
ret
mov
xor
aad
mov
sbb
fnstsw
pop
push
mov
rcrb
push
inc
dec
lods
dec
cmpsb
in
sub
cmp
lock
insl
push
or
lods
or
mov
push
ret
pop
mov
andb
popl
in
int3
lds
daa
ret
addr16
jne
and
lods
push
inc
cvtdq2ps
test
mulb
xor
lock
mov
imul
lods
out
cs
in
sbb
xor
jbe
and
addr16
gs
sub
jns
pop
pop
idivl
int
fldl
rcrb
adc
pop
add
inc
jl
outsb
pop
mov
xchg
pop
int
push
shll
sub
std
hlt
mov
mov
adc
adc
mov
cwtl
loop
call
test
lret
dec
xchg
sbb
add
into
add
mov
stos
sahf
mov
lcall
clc
iret
js
rclb
mov
or
jno
loope
dec
push
fs
mov
fstl
iret
push
imull
mov
mov
loop
shll
add
mov
movhlps
aad
stos
mov
sub
pop
and
cmp
dec
lcall
lds
in
mov
dec
sahf
popf
ljmp
ret
aas
sub
sti
inc
insb
push
xchg
push
dec
lods
mov
pop
mov
mov
add
test
and
mov
sub
mov
inc
lods
xchg
icebp
je
add
xchg
adc
fmull
mov
jmp
aaa
nop
lret
loope
lds
sub
push
inc
int3
sahf
jmp
mov
inc
cs
jno
mov
mov
inc
mov
rcrb
out
lea
ret
mov
pop
loopne
lea
test
cld
into
mov
lcall
clc
repz
xchg
ret
mov
bound
and
jle
popa
rcrl
cmp
aas
pop
das
mov
fiadds
mov
mov
xor
xorb
lret
xorb
inc
add
push
push
adc
pop
insb
and
mov
sub
push
jge
add
mov
inc
mov
dec
sbb
and
mov
movsl
mov
mov
add
pusha
scas
ds
inc
sbb
lcall
insb
popf
out
xchg
and
inc
fdivrs
imul
mov
int
push
adc
pop
adc
mov
fidivs
bound
cmp
mov
jmp
dec
rcll
pusha
jl
loop
ds
xor
iret
lock
rol
dec
push
lret
clc
divb
inc
repnz
cltd
jno
sbb
fimuls
cmp
pop
int
mov
ret
decb
cs
jbe
ficompl
dec
or
lret
in
sbb
sub
fcoms
mov
xchg
std
push
mov
xor
sbb
push
adc
lahf
inc
pop
popa
inc
lcall
cli
insb
aaa
clc
lods
scas
jnp
in
inc
xchg
insl
sar
popa
and
mov
aad
mov
mov
inc
or
mov
bound
imul
mov
enter
xchg
ret
jmp
lds
add
scas
outsl
push
lret
sub
or
sub
clc
sub
rorb
dec
lods
lods
mov
jmp
xchg
mov
pop
inc
xor
icebp
mov
int
rcll
xor
mov
push
dec
mov
jp
ds
outsl
nop
inc
jnp
das
daa
call
lret
imul
gs
mov
jo
mov
inc
sub
test
fdivrl
xor
inc
adc
mov
out
sbb
loope
and
sbb
loope
xchg
dec
aam
test
data16
mov
icebp
leave
scas
ss
push
mov
repnz
sbbb
sub
in
cmp
and
mov
dec
mov
test
stos
cs
inc
mov
xchg
enter
mov
in
popa
xor
mov
int3
fsubrs
or
neg
enter
inc
ja
jmp
mov
andl
lds
insl
jns
xorb
mov
push
push
push
clc
add
pusha
jge
and
xor
push
sub
mov
sub
das
cs
shlb
das
and
mov
cmp
shlw
outsb
xlat
inc
push
dec
xor
stc
out
sbb
xchg
adc
xchg
cs
out
xor
pop
mov
xor
sarl
dec
xchg
adc
mov
fdivrs
xchg
and
lret
ror
mov
inc
and
push
push
xchg
adc
adc
mov
sbb
lcall
jo
or
xor
sbb
fs
arpl
lcall
sub
in
ret
les
test
mov
mov
or
lock
mov
popa
push
aaa
in
enter
ds
inc
mov
adc
mov
inc
fldenv
xor
hlt
push
filds
lea
repz
pop
cmp
jmp
scas
or
iret
push
sub
decb
dec
setge
and
bound
inc
inc
ds
ret
mov
dec
dec
outsb
sbb
cmp
shlb
repnz
mov
fst
xchg
mov
jno
or
js
cmpsb
mov
push
test
xor
movb
cs
sbb
pop
dec
scas
mov
lcall
ficoms
dec
cmpsl
lea
adc
imul
cltd
mov
cmp
out
adc
inc
pop
lea
int3
test
sbb
inc
not
inc
fcoml
js
pop
cs
xchg
pop
and
lcall
add
push
sub
adcb
xchg
popa
xchg
mov
into
pop
xchg
inc
xchg
jecxz
test
mov
aas
xor
xor
push
in
adc
lahf
push
jo
mov
scas
or
in
lcall
jg
loope
daa
inc
aad
fmull
insl
push
lods
iret
movsl
add
mov
into
mov
pop
nop
mov
mov
xchg
rolb
cmp
sub
xor
inc
lock
rclb
push
xorl
cmp
inc
pop
outsb
pop
dec
mov
and
add
dec
adc
addb
jle
xchg
fdivrl
sub
cmc
js
inc
sub
dec
sbbl
xchg
or
push
xchg
ja
and
scas
push
cld
xor
adc
fnop
sbbl
loope
orb
sub
lcall
inc
insl
or
shr
rorl
push
mov
inc
lods
lahf
inc
xchg
jge
int
mov
dec
mov
and
jp
addr16
lcall
pop
test
dec
xchg
add
stc
adc
into
cmpsl
pop
dec
call
shlb
and
inc
pop
sar
adc
mov
pop
aad
es
dec
sub
cmpsb
xchg
clc
int3
cmp
adc
jo
movsb
ret
data16
daa
test
arpl
mov
cmc
rcll
enter
les
into
cmp
stos
pusha
nop
inc
test
stc
in
out
pushf
mov
dec
iret
and
int
jno
orb
inc
fidivl
sub
in
push
mov
inc
or
daa
test
cli
lea
ret
jne
pop
mov
lahf
xchg
dec
push
aaa
xchg
push
jecxz
cld
push
data16
push
inc
gs
nop
push
adc
cwtl
mov
insl
stc
mov
decb
jle
cmp
sub
cwtl
lcall
pop
lea
lock
mov
cmp
mov
cmpsb
sysenter
jl
dec
cwtl
pop
mov
cltd
pop
xchg
sub
dec
push
shrl
adc
add
lcall
pop
lret
mov
or
and
in
or
adc
cmp
mov
pop
in
mov
insb
movsb
ret
add
adc
xchg
in
pop
jno
loopne
in
mov
cmp
mov
mov
and
inc
sbb
push
mov
inc
mov
shrb
frstor
jnp
lock
mov
out
xchg
repnz
fld
out
adc
dec
jp
stc
add
adc
je
and
imul
lds
push
pop
into
std
sub
jns
xor
sbb
les
cmp
xor
test
lods
pop
mov
jae
pop
and
test
ret
lcall
and
jno
inc
cmc
push
nop
clc
inc
stc
ret
int
inc
data16
lea
in
jle
fldt
inc
fld
cmpb
inc
sbb
mov
mov
and
push
pop
mov
out
negl
jg
cmpsb
pop
jge
add
cmp
inc
icebp
bnd
mov
mov
xor
mov
jp
dec
push
inc
jo
xchg
mov
and
jb
into
out
inc
in
test
scas
lcall
mov
rol
ret
outsb
inc
into
lahf
mov
xor
int
jp
adc
xchg
adc
repnz
inc
xchg
insl
in
mov
adc
fisubrl
sub
lret
ds
sahf
rolb
popf
stos
faddl
dec
sti
sahf
ds
adc
rcrb
add
outsl
and
mov
inc
mov
popl
inc
rclb
push
pop
repnz
lahf
pop
push
lea
dec
cmp
mov
shlb
sbb
and
and
and
xchg
inc
mov
add
je
jb
mov
lea
dec
dec
xor
or
xor
pop
push
inc
add
push
rorl
push
das
or
sarl
jecxz
stc
xorl
sub
mov
pop
xchg
sub
daa
and
adc
mov
pop
adc
lds
push
sub
movsl
adc
or
shrb
vsqrtsd
jp
nop
mov
lods
jo
dec
jnp
xor
mov
loope
cmpsb
mov
adc
je
push
std
xor
shll
test
sub
dec
and
jg
jbe
xchg
xchg
jge
xchg
subl
xor
lock
inc
sub
or
mov
jb
mov
cmp
test
jle
cmp
adc
xor
js
jecxz
mov
sarb
inc
repnz
pop
lods
xchg
jge
xor
loop
xor
roll
cmp
lea
or
mov
sar
mov
int
sbb
rep
jle
mov
daa
push
addr16
pusha
mov
lea
dec
lods
pop
push
inc
int
out
xchg
inc
shrl
jno
jbe
flds
inc
test
xchg
jns
mov
mov
xchg
push
mov
xchg
je
dec
and
adc
cmp
xchg
lcall
repz
jb
adc
lds
jne
pop
movsl
nop
sbb
pop
xor
in
out
shrb
mov
enter
subb
mov
inc
mov
popa
ret
ret
out
and
dec
xchg
jnp
dec
jecxz
sbb
xor
cmp
ds
mov
inc
fistps
push
pop
and
fistpl
cmpsb
pop
iret
dec
adc
mov
push
cmp
adc
call
ds
mov
nop
xor
jmp
lock
movsl
fmuls
mov
test
cmpsl
movsb
push
xchg
nop
mov
or
lahf
mov
shll
inc
jl
mov
mov
mov
fsubrl
jne
and
sbbb
push
enter
fs
adc
xchg
xor
cmp
xor
pusha
xor
and
add
ror
xchg
mov
cld
dec
sbb
ret
cmp
daa
repnz
adc
mov
push
test
cmp
cmp
xchg
ss
in
dec
jg
sbb
adc
xor
sub
jge
lods
cwtl
lods
iret
out
into
out
stos
add
mov
aad
js
sub
jbe
out
nop
xchg
iret
jo
cmp
xor
in
mov
fildll
mov
push
cmp
outsl
mov
dec
mov
xor
jo
and
sub
loopne
mov
inc
int3
fs
loope
data16
mov
lcall
rclb
movsb
addl
stc
cmp
jne
aad
cmp
sahf
out
or
sbb
rcrl
cmp
repnz
pusha
jno
int
shlb
int3
xor
mov
mov
jno
testl
xchg
dec
mov
inc
adc
js
jne
jo
xor
push
lret
cmp
adc
ja
add
lds
loope
push
adc
loope
cmc
fmulp
les
adc
jmp
add
add
push
rol
dec
popf
mov
loop,pt
cmp
cmc
xchg
adc
jle
and
pop
dec
adc
lret
sar
jecxz
stos
addr16
pusha
push
pop
sub
jge
or
movsl
inc
aaa
sub
mov
or
int3
xchg
out
arpl
add
rol
adc
push
push
jno
sbb
xchg
sbb
sti
xor
adc
movsl
imul
lods
ret
dec
mov
and
imul
and
and
in
xor
inc
add
int
ret
xor
pop
inc
cmpsl
pop
repz
fdivs
pop
pop
ljmp
xchg
mov
xor
dec
add
adc
orl
mov
mov
dec
nop
sbb
pop
pop
or
push
sbb
ljmp
repz
xchg
icebp
inc
xor
push
jg
and
and
sbb
cmp
subl
in
loop
inc
xchg
int
inc
out
aas
ds
faddl
int
xchg
dec
ret
inc
jnp
sarl
test
std
and
adc
decb
dec
xchg
test
jecxz
mov
xchg
int
je
xchg
jo
jg
pop
push
push
rorl
mov
sbb
xchg
cmp
xor
mov
xor
loopne
pop
jecxz
aad
xchg
dec
arpl
and
subb
and
gs
add
inc
push
jle
xor
imul
bound
iret
mov
inc
repz
rcrl
sbb
jmp
das
cwtl
pop
in
dec
or
pop
xchg
iret
jno
call
es
push
adc
xchg
push
dec
ret
test
add
fdivs
and
jno
cmpsb
push
add
jmp
pop
mov
popl
lret
cmp
insl
repnz
push
xchg
cmp
or
aam
in
insb
add
pop
lcall
mov
xor
roll
adc
lret
fimull
jb
jg
xor
mov
inc
fnstenv
leave
xor
leave
jbe
push
inc
xchg
inc
mov
imulb
sarl
rcll
dec
xor
xchg
cmp
cmp
jnp
ret
shl
nop
pop
mov
sub
mov
adc
out
mov
or
add
sarl
lret
out
pusha
fidivl
jno
ljmp
das
xor
stos
cld
mov
outsl
jno
movsb
dec
xchg
rcrl
mov
rclb
sub
push
push
pop
das
and
inc
jmp
mov
mov
scas
sub
or
fcmovnb
push
mov
test
mov
add
inc
cmp
or
cmp
mov
jp
insl
or
test
cld
mov
aam
or
and
mov
inc
loopne
push
xor
flds
insl
adc
pop
xchg
fisttpl
jecxz
mov
and
push
mov
mov
popa
testl
and
cmpsb
ss
fsubl
enter
sbb
inc
test
pop
xor
jb
mov
push
mov
rcrl
fcmovnbe
push
ja
jno
mov
imul
pop
out
jmp
jle
jecxz
adcb
cmpsb
or
aas
cmpsb
in
ret
imul
cmp
add
push
stos
addr16
stos
adc
into
cltd
sub
outsl
xor
stc
js
mov
push
jne
ficomps
push
xlat
jns
nop
inc
lcall
pushw
icebp
in
mov
popf
bound
jge
and
adc
lret
dec
push
push
and
dec
scas
lods
push
popa
addr16
mov
insl
pusha
mov
bound
cltd
push
imul
lret
or
in
out
enter
aas
inc
add
fidivrs
sub
pusha
popf
outsb
cli
or
jmp
popf
add
lret
mov
cmpsb
adc
pusha
clc
inc
mov
push
repnz
iret
sbb
fidivl
filds
inc
lret
mov
xor
mov
fistps
mov
mov
repnz
ret
xchg
pop
ret
dec
ljmp
gs
xor
push
sbb
jp
out
pop
int
mov
jp
rcll
dec
cmp
int3
and
dec
dec
pop
pop
mov
mov
pop
push
mov
add
push
sarl
push
outsb
jb
dec
bound
or
dec
sbb
into
mov
cmc
jge
jbe
pop
clc
je
add
addb
inc
sbbl
setnp
adc
xchg
lret
int
mov
inc
gs
lods
xor
jl
call
fdivr
adc
insb
and
dec
xlat
fs
mov
mov
cli
movl
xchg
aaa
stc
test
inc
push
adc
pop
dec
dec
imul
into
dec
stos
cld
xchg
and
sub
pop
sti
xor
xchg
sbb
sub
repz
mov
subl
xchg
inc
cld
xchg
loopne
jmp
sbb
add
scas
addr16
cmpsb
push
test
adcl
dec
je
and
sbb
lret
repnz
add
pop
outsl
mov
insl
inc
fdivs
and
mov
push
mov
dec
cmp
push
icebp
pop
into
scas
xor
adcl
es
out
test
daa
pop
adc
ficoms
je
pop
jb
xor
jmp
gs
mov
xchg
fisttps
sub
lret
jns
xchg
in
or
out
dec
cmpsb
in
dec
loopne
push
sbb
dec
int
xchg
dec
lea
push
pop
shll
jmp
rcll
and
xor
xchg
xchg
xlat
lret
test
sbb
rcll
pop
cmc
and
inc
loope
sub
jne
stos
mov
xchg
xchg
shrb
mulb
mov
or
lret
popf
gs
loopne
pop
pushf
lret
jp
cmp
cs
push
testl
push
or
jno
mov
lret
push
les
loop
xor
cmp
popf
dec
cs
mov
push
inc
ret
insl
or
stos
push
roll
test
pop
inc
shr
aas
cmpsb
rorb
cmp
cwtl
inc
std
jb
cs
cmp
test
jb
pop
mov
test
and
pop
jnp
dec
cwtl
fidivrl
cltd
adc
addl
je
jecxz
outsb
movsb
inc
and
popf
lds
cmp
pushf
clc
xchg
lret
nop
and
js
shlb
push
push
mov
sub
negb
mov
in
sbb
stos
stc
sahf
pop
pop
scas
lcall
sbb
scas
cmc
or
jo
inc
test
stc
mov
cmp
inc
lock
xchg
cmpb
xor
mov
jo
push
nop
pusha
inc
jg
inc
mov
and
xor
inc
in
je
or
sub
sub
outsb
and
sbb
in
and
inc
aas
mov
and
into
mov
xchg
dec
cmp
shll
pushf
nop
pop
into
push
jecxz
mov
adc
or
fwait
mov
mov
mov
insb
adc
sbb
and
lock
lret
sarb
push
dec
dec
push
and
inc
pop
movsb
mov
popl
xlat
outsb
mov
rorb
xchg
xor
test
jns
sub
mov
fwait
shrl
cs
push
jg
inc
cmpb
dec
lret
in
mov
test
popa
mov
xor
mov
dec
mov
sbb
pop
inc
call
lret
cmp
mov
mov
jmp
repz
mov
and
lcall
sti
push
lock
nop
inc
fcoms
jb
stc
das
sarb
or
ds
cwtl
cmp
or
push
aam
or
mov
jns
ljmp
sbb
leave
movsl
mov
ja
push
mov
push
lahf
stc
sahf
ret
popf
arpl
adc
push
dec
xchg
mov
push
push
jb
adcb
adc
lret
sub
cmpsl
sbb
loop
sbb
push
xchg
gs
adc
mov
faddp
ficoms
inc
mov
adc
sbb
pop
adc
scas
lret
sbb
out
rorb
loope
mov
push
sti
add
push
sahf
je
in
push
push
loope
bound
and
cld
cmp
adc
add
test
pop
push
lcall
adc
std
adc
xor
repz
int3
mov
or
in
pop
sbbl
xor
adc
sbb
shll
loope
out
or
and
push
scas
xor
nop
pop
mov
and
aas
jae
jmp
lcall
lret
jno
ret
mov
nop
push
dec
std
push
push
push
inc
jge
mov
mov
and
cmp
inc
lret
sub
sbbl
mov
sahf
fcomps
sbbb
and
test
repz
dec
add
sbb
pop
lcall
adc
xchg
aas
out
lods
or
pusha
pop
add
loopne
shrb
icebp
loope
cmp
lods
pop
pop
push
fimull
xchg
mov
jno
inc
clc
jp
fists
or
mov
std
add
adc
pop
out
dec
dec
xor
mov
and
xlat
int
push
stos
stc
lock
add
xlat
or
jno
or
fs
movsl
sahf
les
xchg
lds
inc
dec
xchg
or
mov
outsb
gs
mov
movsl
xor
sarb
adc
fsubl
jbe
adc
mov
in
test
test
sbb
test
ja
fs
cmp
inc
iret
int
mov
jl
mov
jmp
into
cmp
cltd
xor
lods
mov
sub
dec
sbb
lea
adc
outsb
and
and
and
push
xchg
mov
imul
lock
mov
fidivl
xlat
sbb
mov
movsl
ds
cmp
cmp
call
adc
nop
fcomp
inc
sahf
cmpsb
or
scas
mov
ret
or
jp
mov
xchg
ficoml
add
xor
dec
push
mov
out
jg
pop
push
xor
push
aas
pop
xor
cld
jecxz
sarl
and
inc
insb
nop
inc
xchg
ss
push
xchg
add
daa
cmp
cmp
iret
mov
stos
and
test
cli
mov
jecxz
rcl
lret
push
xchg
pusha
xchg
je
nop
push
cld
add
jae
fimuls
add
mov
push
xlat
mov
xchg
repnz
mov
rcll
dec
in
cmp
add
pop
add
cld
xor
mov
ret
cmc
into
jecxz
iret
mov
add
dec
mov
mov
rcll
mov
and
addr16
lret
mov
cmp
daa
adc
xor
lcall
xor
fldcw
mov
adc
mov
push
dec
ljmp
push
mov
iret
lock
cpuid
jnp
mov
scas
adc
xchg
lea
pop
mov
adc
popf
fadd
sti
inc
mov
sbb
push
or
mov
xor
or
sbb
scas
inc
int3
push
jp
push
leave
lcall
lret
sbb
popa
or
cmp
lcall
jge
in
jae
les
add
gs
jo
mov
rclb
mov
push
inc
jg
sbbb
mov
pop
mov
mov
xor
inc
xchg
mov
jge
test
inc
std
test
in
mov
jp
jae
push
dec
mov
test
mov
lret
jecxz
mov
xor
and
inc
stc
insl
sub
pop
cmp
je
inc
icebp
mov
lods
mov
adc
popf
cmp
pushf
xor
fnstsw
jecxz
ret
cmpsl
mov
lods
adc
mov
addr16
and
push
xor
and
je
inc
fistl
sub
cmp
cld
orb
push
xchg
shlb
fisttpl
scas
lcall
out
std
data16
adc
pusha
push
xor
dec
lret
out
cltd
mov
jmp
scas
dec
and
popf
sbb
pop
mov
clc
aaa
hlt
fucomi
mov
xor
lahf
ror
jnp
test
push
jmp
mov
sahf
roll
lods
cs
int3
push
and
mov
and
xor
sub
stos
inc
jb
rcl
adc
sub
xor
loope
cmp
pop
jno
sub
push
dec
xor
xor
add
cmp
mov
and
xor
in
pop
xor
adc
push
or
in
bound
add
nop
popl
sbb
inc
lea
out
dec
push
add
dec
mov
jg
dec
fiadds
stos
xor
mov
scas
or
mov
dec
adc
int3
ja
sub
por
or
pusha
ja
dec
pop
lods
push
mov
dec
mov
lods
jge
in
pop
pusha
inc
in
mov
fdivl
and
pop
ds
test
sub
jp
mov
cmp
xchg
cmp
aam
pusha
jge
pop
mov
dec
sahf
in
nop
arpl
mov
mov
xor
stc
stos
mov
test
mov
adc
or
and
lods
mov
pop
push
movsl
inc
dec
test
xor
fcmovne
xchg
out
xor
imul
mov
lret
xor
iret
out
xchg
xorl
push
dec
mov
and
mov
add
sub
js
xchg
imul
cmp
ret
sub
mov
jno
scas
sub
xchg
arpl
rdmsr
jae
out
xchg
mov
pop
jle
in
aas
jno
or
sub
dec
mulb
out
cltd
mov
orl
ret
mov
mov
insl
jmp
mov
ds
push
dec
ret
cmpsb
into
ret
aad
enter
lret
fidivrl
fdivp
xchg
push
in
sbb
sbb
sti
jns
inc
xchg
jb
jg
js
jo
add
xor
addb
pop
inc
inc
cs
jns
ss
pop
cwtl
cwtl
scas
mov
jge
stos
popa
mov
push
xchg
mov
add
mov
shrl
and
cli
je
int3
movsb
fdiv
stos
push
test
xchg
cmp
jne
cmpsb
sub
imul
sbb
repz
lods
push
add
fisttps
pusha
out
js
loop
mov
xor
ljmp
pop
cli
lcall
rorl
popa
or
sbb
pop
jle
mov
scas
mov
fs
mov
add
jmp
xchg
sub
iret
xchg
xor
rol
xchg
mov
rolb
cmp
test
and
mov
push
inc
cmp
popa
mov
clts
ja
dec
xchg
mov
jp
stc
sub
xor
sahf
test
lods
outsb
sahf
jle
std
orb
out
pusha
movsb
jno
fnsave
shl
sub
fdivs
inc
rorb
mov
cmp
subl
in
mov
cmp
jg
incl
sub
cmovg
popf
dec
mov
lock
or
test
icebp
push
dec
jno
loopne
gs
dec
aas
fidivs
mov
inc
mov
idivb
out
adc
es
dec
dec
bound
repnz
rol
jb
add
lods
jo
loop
pop
std
xchg
mov
mov
out
jecxz
add
mov
add
adc
mov
jae
in
pop
out
mulb
mov
xchg
repnz
or
insb
mov
in
testl
pop
rcrb
js
negb
push
cmpsb
scas
les
lods
cmpb
rcrb
clc
pop
leave
jp
scas
pop
sub
aam
fnstenv
inc
jno
rol
inc
push
ret
je
jae
add
or
stos
cmp
stc
icebp
dec
push
rcr
shll
push
xor
pop
fldz
push
pop
mov
cmp
aaa
and
jp
mov
sbb
lret
sub
cmp
mov
xor
lret
mov
and
ds
rorl
dec
mov
stc
mov
mov
int3
inc
test
int
rcll
mov
mov
mov
jg
out
mov
int
and
mov
inc
das
movsl
nop
xchg
lcall
insb
jo
arpl
xor
mov
add
push
inc
adc
xor
push
das
adc
aaa
filds
ss
mov
into
test
mov
xor
pop
fists
push
adc
jle
and
in
push
cltd
or
jecxz
rclb
xchg
aad
sub
rclb
add
mov
dec
rcll
cmp
into
loope
cwtl
adc
dec
jg
or
dec
sub
and
popa
xchg
xor
iret
scas
mov
roll
popa
and
sahf
dec
sti
push
add
xor
or
int
data16
cwtl
pop
xchg
pop
or
adc
jecxz
cmpsb
loope
xor
and
movsl
inc
or
add
and
dec
outsb
loopne
pusha
out
push
fwait
lea
pop
movsb
and
sbb
repz
xchg
jg
pop
movsl
leave
mov
push
mov
pop
mov
mov
jo
cmp
bound
adcb
mov
shll
into
pop
les
xorl
test
mov
movsl
lods
adc
jb
jmp
jnp
adc
lahf
adc
cmp
iret
js
lods
adc
cld
test
les
test
rcll
data16
lods
inc
push
xchg
add
mov
xor
mov
shll
xchg
andl
cmpb
mov
xchg
mov
sub
or
fcmovu
inc
xlat
inc
out
sub
xor
sub
loope
xchg
pop
in
mov
xor
push
xorl
cmp
leave
stos
aaa
test
dec
out
inc
mov
sub
mov
xor
dec
mov
inc
fcompl
sub
inc
cmpsb
cld
push
xor
xlat
jl
xchg
std
sbb
cwtl
sub
fmull
xor
mov
and
stos
es
js
aam
test
xor
adc
lods
and
into
adc
repz
xchg
adc
scas
cmpsb
xor
xor
and
cmpsb
repz
pop
enter
ss
inc
sbb
mov
loope
mov
mov
or
imul
jl
xchg
inc
xchg
icebp
adc
cltd
cwtl
jecxz
mov
ret
inc
test
test
ficompl
and
mov
mov
int
mov
push
scas
xor
in
push
add
fs
jae
mov
adc
inc
xchg
test
stc
push
subl
jne
int
in
sbb
leave
icebp
movsl
jp
sbb
push
cmp
ret
mov
in
iret
mov
test
or
jp
mov
lock
xchg
mov
out
shrl
insb
fadd
mov
stos
std
sahf
push
push
test
bound
ret
popa
push
bound
mov
stos
aam
scas
add
stos
xchg
sbb
push
jge
out
test
push
shll
and
sti
aam
cmp
dec
cmp
mov
sbbl
pusha
mov
mov
lock
and
push
stc
cmpsb
mov
ret
popf
mov
aas
movsl
std
cltd
rolb
adc
push
xorl
pop
fimuls
rcl
pop
mov
test
or
xor
push
jo
bound
cmp
pop
cld
pop
mov
mov
in
mov
dec
inc
xchg
lods
cmp
fwait
cmp
inc
das
adcb
bound
and
lret
add
iret
push
cs
mov
or
sbb
lea
add
std
je
push
loope
insb
and
or
dec
dec
mov
loope
mov
ficomps
or
inc
adc
or
jns
or
std
adc
enter
popf
mov
lea
insb
mov
xlat
inc
adc
fstps
sahf
lods
lods
mov
and
aaa
out
mov
pop
cli
fisttpl
gs
shrb
push
inc
mov
hlt
cmp
xrelease
adc
rcrl
pop
sarb
dec
and
jb
iret
sbb
and
inc
into
xor
frstor
rcll
cmp
sarl
lods
rep
mov
and
jnp
shl
outsb
push
and
lds
jl
lcall
cmp
push
push
push
addr16
inc
pop
inc
test
jge
xchg
pop
mov
jns
xchg
lret
push
dec
add
push
jb
movsb
andb
jno
push
aas
add
sub
fmul
inc
mov
mov
rorb
out
sarb
iret
ljmp
popaw
pop
and
and
and
mov
rolb
lock
xchg
mov
dec
out
push
add
fidivrl
sahf
loope
mov
lret
mov
lods
add
and
aas
mov
leave
mov
les
lret
out
push
orb
sbb
inc
stc
movsl
lret
imul
rcr
stc
push
dec
adc
lcall
mov
in
mov
mov
jmp
scas
adc
add
mov
dec
and
push
cld
pop
inc
cltd
xchg
cmp
mov
mov
shlb
jle
mov
inc
or
in
sub
inc
jnp
dec
inc
and
push
and
cmpsb
loope
cltd
pushf
sub
ss
daa
and
out
and
aad
cmc
adc
inc
and
js
mov
cmpsb
cmpsb
insl
insb
dec
outsl
add
insl
lock
nop
lret
dec
mov
xchg
mov
hlt
lds
mov
fld
sbb
je
outsb
loope
test
xchg
xchg
fsubr
lahf
mov
xor
xor
and
mov
test
push
and
jns
dec
xchg
inc
sub
cmc
scas
xor
cmp
dec
pop
jge
testl
rcl
shlb
inc
aam
or
fidivs
ja
jge
cmc
adc
fsubr
loope
rcrl
mov
pop
jmp
pop
sbb
movsb
and
cli
and
cld
add
sbb
xor
addr16
cli
aaa
mov
jno
mov
ficoml
cmpsb
cs
ror
ds
mov
adc
xlat
scas
lcall
bound
int
push
mov
add
mov
sbb
jb
insb
mov
in
aaa
xchg
cmpb
mov
pop
rcll
and
adc
or
enter
mov
aam
inc
push
mov
fadd
pop
xor
mov
mov
and
and
mov
mov
ds
mov
jo
xlat
cmp
mov
lods
inc
sub
roll
pop
fsubrp
fldenv
jns
jb
stc
push
mov
cmp
sbb
lock
leave
sahf
repnz
or
inc
adc
inc
mov
sub
jns
jg
ret
mov
mov
stc
icebp
movsb
push
cmpsb
cmpsb
mov
movsb
cltd
push
std
es
stc
and
jmp
addl
adc
pop
push
dec
cmpsb
or
xor
cmpsb
jle
jp
leave
xchg
jle
jns
sbb
mov
adc
sub
mov
or
mov
aas
push
dec
jne
lock
aad
mov
push
mov
mov
in
ret
pop
daa
xchg
testl
leave
sub
xchg
jecxz
push
outsb
jp
jle
or
mov
mov
adc
outsb
sbb
movl
adc
pop
loope
mov
nop
mov
xor
sub
jns
xlat
inc
sub
aam
cmp
ret
push
lock
inc
inc
push
cmpsb
add
mov
inc
xchg
jae
push
lock
inc
popa
sahf
inc
movl
clc
in
inc
sub
call
jg
rorl
mov
dec
sub
jmp
int
scas
lret
scas
jno
inc
add
js
sub
popa
pop
lods
icebp
and
mov
hlt
shrl
add
pop
in
or
jb
mov
fs
pop
and
les
push
sbb
icebp
push
mov
iret
mov
mov
dec
xchg
dec
popf
pop
enter
xchg
jecxz
je
mov
out
loop
or
stc
aas
and
push
loope
ss
inc
inc
dec
rcll
xchg
cltd
inc
mov
add
ret
std
sarl
mov
fcmovnb
ss
ljmp
mov
jb
mov
cltd
rclb
test
and
adc
lds
inc
movsl
mov
roll
in
adc
testb
repnz
and
rclb
sbb
and
cmpsb
inc
iret
aam
sub
push
xchg
jns
lds
cmp
clc
outsl
lahf
or
xchg
std
lods
or
sub
inc
ds
ret
and
xor
fcoml
mov
inc
mov
pop
test
xor
xchg
pusha
repz
adc
ja
mov
jecxz
adc
insl
mov
add
xlat
mov
stc
shl
lods
sbb
cmp
in
xor
call
sbb
roll
sbb
shr
mov
xor
shrl
mov
dec
inc
jge
pop
mov
rorl
lock
add
add
dec
inc
data16
push
fwait
rcll
aas
cmp
xor
stc
mov
inc
sar
push
subl
xchg
ficompl
hlt
push
cmp
insl
xchg
and
ret
leave
mov
nop
popf
push
cmp
inc
leave
jb
ficomps
pop
scas
mov
sbb
mov
mov
dec
xchg
cmp
mov
jl
mov
jecxz
mov
inc
inc
aaa
jo
aam
adc
add
flds
cmc
ds
pop
jl
fimuls
je
cmp
lods
fwait
scas
pop
and
sbb
add
jl
push
sub
sarb
repz
pop
test
dec
sub
cmp
jns
adc
cmp
popa
sub
ja
push
ret
push
aad
roll
mov
mov
mov
aaa
cmpsl
rorb
dec
add
push
adc
adcb
xchg
mov
rol
iret
inc
sub
dec
xchg
jp
or
test
push
dec
mov
dec
push
imul
into
repz
imul
inc
mov
jno
dec
sub
cmp
sub
and
and
push
arpl
mov
aad
or
xlat
sub
xchg
xchg
cmpsl
jbe
pop
xor
lods
mov
mov
outsb
xchg
xor
pop
fildl
inc
add
in
cmp
pop
mov
std
inc
push
jl
call
daa
cmp
jo
xor
test
imul
and
jns
mov
neg
or
out
loopne
fidivl
sti
xchg
cs
pop
jb
mov
loope
scas
jmp
dec
push
and
cmc
mov
push
mov
popa
jbe
mov
mov
sbb
push
test
jne
inc
mov
mov
jp
push
ljmp
adc
ss
push
ds
inc
jno
pusha
xchg
shll
lret
mov
mov
pop
aad
xor
sub
mov
shr
dec
cmp
xor
mov
out
xchg
sub
inc
xchg
mov
std
fwait
outsb
adc
js
fisubs
xchg
and
xchg
and
fsubs
bswap
mov
lods
xchg
adc
cmc
push
or
daa
mov
dec
xchg
or
xchg
mov
mov
test
cmpsb
call
test
jo
dec
inc
test
jnp
ret
mov
mov
movsl
call
pop
cmpsl
jmp
cmp
les
or
repnz
xor
int
inc
loope
or
mov
shl
repz
xchg
mov
shlb
inc
lcall
mov
sbb
ljmp
or
mov
push
jg
jp
seta
mov
or
cmc
cmpsb
rorb
ljmp
in
xchg
pop
xchg
inc
mov
lods
lret
mov
mov
sahf
icebp
cmpsl
pusha
shrl
cmp
fiaddl
mov
lahf
adc
xor
pop
pop
push
leave
push
inc
mov
or
jecxz
cltd
rolb
nop
nop
xor
or
rorl
addr16
repz
inc
lods
pop
pop
mov
and
cmp
xchg
cltd
xchg
xchg
xchg
incb
add
lret
push
lret
dec
jns
lea
push
sbb
cmpsl
fucomp
dec
nop
ret
mov
sbb
sub
call
jg
daa
dec
rcrl
xchg
xchg
xchg
mov
mov
lret
lods
xchg
sub
cmp
mov
mov
inc
imul
sub
sbb
jmp
inc
push
in
aad
in
testb
mov
jne
repz
lret
adc
push
je
xor
dec
fwait
arpl
or
mov
out
add
cmpsl
ljmp
in
xchg
cmpsb
inc
dec
fs
xor
in
xchg
adc
lcall
and
and
mov
jge
mov
push
jae
jle
aas
pop
push
cld
mov
out
comiss
sbb
xorl
jb
xchg
popa
push
xor
std
pop
mov
mov
xchg
push
mov
xchg
daa
call
je
xchg
fwait
sub
sti
out
out
stc
fiaddl
mov
xchg
sahf
pop
adc
ret
enter
xchg
outsb
xchg
in
fistpl
movsb
or
flds
mov
loop
outsl
sbb
cmpsl
fildl
inc
jne
jnp
xchg
push
inc
push
xor
and
xchg
shrl
pop
int
mov
insl
push
inc
mov
xchg
sub
add
push
mov
cmp
movsl
push
jno
mov
push
test
test
aas
mov
cmpsb
pushf
sbbb
jno
jmp
or
mov
cbtw
mov
sub
and
out
jb
inc
les
lds
call
into
xor
jmp
scas
popa
push
and
xor
arpl
xor
adc
test
mov
lahf
push
mov
jg
aad
mov
xchg
xor
cmp
lcall
push
seto
pop
adc
pop
dec
add
addb
xor
add
ret
jnp
repnz
lock
or
fmull
adc
pop
pop
xchg
in
cmc
pop
movsl
xchg
xchg
cltd
loop
or
aas
lret
scas
out
inc
test
pop
inc
icebp
les
jg
gs
in
insb
xor
mov
mov
cmp
fs
mov
mov
fcmovne
jp
push
loope
sub
xor
adc
nop
or
add
das
gs
sar
dec
rcr
fwait
mov
xor
in
jle
mov
push
inc
shrl
dec
and
in
mov
cs
pop
jp
add
mov
rclb
inc
inc
cmp
push
popa
movl
aad
bound
or
cli
cmpsb
inc
mov
insb
adc
mov
movd
xorb
inc
sub
mov
cmpsb
mov
das
push
xor
aaa
imul
sub
iret
sub
out
imul
jp
lret
jnp
sarb
mov
out
stos
mov
ret
mov
push
icebp
inc
sub
add
shll
stos
xor
sbb
out
xor
rolb
mov
mov
cwtl
push
pop
mov
je
shll
xchg
mov
or
xorb
sbb
xchg
orb
push
xchg
pop
xor
repz
int
cmp
add
cmpl
mov
adc
sbb
movsb
dec
jle
test
xchg
add
std
xchg
ss
mov
inc
std
fucomip
shll
mov
addl
orb
outsb
xchg
shll
aad
add
cmpsb
cmp
cld
pushf
test
and
movsl
pop
mov
xchg
xchg
add
inc
ljmp
sbb
out
pop
cld
jo
add
test
roll
push
cmp
and
sahf
vpsubusw
movsb
in
sub
push
mov
enter
xchg
into
insl
xor
enter
dec
mov
popa
pop
sub
inc
fdivrs
gs
pusha
inc
lret
pop
ret
shlb
inc
ja
mov
out
xchg
jp
bound
push
pop
pop
clc
iret
and
mov
or
fcmovb
shrl
ds
mov
cmpsb
cltd
mov
stc
cmp
lcall
mov
inc
jae
push
jb
pop
xlat
pusha
fdivrl
pop
test
and
insl
dec
mov
std
ret
mov
pop
mov
mov
pop
test
add
hlt
and
push
clc
notb
xchg
inc
pop
sbb
mov
push
test
popl
pop
xchg
inc
fcoms
fwait
mov
xchg
sbb
fmull
mov
ds
imul
adc
out
mov
mov
xlat
mov
xor
inc
pop
sub
fstp
cmp
hlt
flds
out
addl
not
jp
cltd
fucomi
pusha
mov
scas
or
xchg
xchg
nop
popf
pop
xor
cmp
fwait
mov
jb
aaa
incb
or
and
add
rcll
add
xorb
push
jecxz
in
xchg
push
dec
mov
lcall
aam
insl
or
add
mov
push
push
imul
adcb
xchg
daa
ret
sbb
imul
sub
mov
jo
mov
hlt
inc
clc
adc
push
sbb
mov
out
addb
lods
fiaddl
sub
movsb
rol
sub
mov
cmp
and
push
mov
inc
lcall
sahf
adc
cmc
mov
rcrb
out
mov
jl
mov
in
lcall
xor
not
lods
lret
addr16
xchg
mov
call
or
and
bound
lods
inc
shl
jle
or
or
addb
sbb
outsb
enter
push
lret
fnsave
pop
mov
mov
xchg
rolb
lods
xor
xor
adc
xchg
je
lea
in
movsl
push
loopne
fisubl
lret
xor
fimuls
inc
push
dec
mov
sub
or
aas
cmp
pop
pusha
jno
or
ret
jns
mov
xor
aam
dec
lods
jo
mov
repz
mov
data16
adc
pop
stos
mov
pusha
test
cmc
lea
ror
adc
insb
mov
jg
imul
icebp
adc
daa
inc
adc
divl
stos
jae
addr16
pop
jle
icebp
add
testl
inc
jb
int
or
repz
jb
jmp
lahf
cmp
jo
lock
and
jg
popa
insb
xor
xor
jecxz
add
jbe
sbb
popa
sahf
cmp
clc
mov
int
dec
jb
testb
inc
cld
adc
cltd
and
and
aam
mov
mov
jno
outsb
adcl
add
je
mov
mov
lods
mov
jno
jo
push
jb
mov
movsl
stc
decb
clc
fdivl
sbb
lods
nop
fsubrl
add
mov
add
fucomi
enter
push
loopne
dec
xor
lock
cmp
xchg
repz
push
xchg
fiaddl
std
inc
sbb
or
push
and
sbb
cmp
fsubr
jno
mov
dec
jmp
out
mov
jg
push
ljmp
jecxz
aam
sub
imul
and
dec
sub
push
push
inc
repz
rorb
mov
adc
loop
mov
push
xchg
fwait
out
aad
outsl
or
insb
imul
ror
xchg
pop
pop
sbb
mov
sbb
incb
or
adc
pop
scas
mov
rcll
imul
sbb
cmp
repnz
mov
xor
push
add
sahf
and
movsl
cmpsb
xchg
lcall
pop
mov
addr16
or
mov
mov
icebp
mov
jno
inc
or
and
adc
jbe
dec
mov
mov
or
push
or
add
sbb
dec
jns
movsb
push
adc
enter
lcall
push
mov
jp
jno
cli
xlat
push
movsl
jnp
cld
pop
imul
mov
es
inc
stos
imul
cwtl
and
cmp
subl
or
mov
push
das
jb
dec
rol
out
jecxz
push
stos
xchg
mov
mov
stc
adc
cltd
ja
andb
jg
sub
mov
dec
dec
sub
xchg
sub
sub
cmp
and
in
pop
sbb
addl
out
add
rorl
xor
mov
adc
or
cli
ret
mov
push
idivb
pop
push
std
jo
out
push
and
xor
jb
shll
lock
in
pusha
push
cmpsb
push
enter
inc
lcall
mov
pusha
int3
jae
or
add
push
cmp
push
xchg
rcrl
push
shrl
mov
jne
mov
jge
stos
mov
faddp
sahf
xchg
adc
lahf
mov
sub
xlat
movsl
inc
rorl
mov
in
sub
push
js
movsb
push
adc
rcll
sub
imul
adc
fistl
cmc
loopne
mov
aad
cltd
imul
push
xchg
and
loope
dec
in
mov
push
dec
or
ret
lret
xor
leave
add
loopne
mov
push
test
mov
xor
and
cs
sarl
add
push
cld
int
fs
xchg
lcall
add
scas
loop
fists
xchg
or
inc
push
std
pusha
rcll
sbb
xlat
rdtsc
adc
mov
xor
or
push
movsb
test
loop
cs
pop
inc
push
outsl
mov
ret
cld
and
ror
mov
rorb
lea
mov
jbe
fdivl
stc
pop
jne
in
jo
orb
cmp
test
je
xor
in
cmc
jno
movsl
pop
pop
mov
jno
loope
pop
in
scas
arpl
xor
out
loope
imul
cld
inc
setno
inc
incb
mov
or
pop
lcall
rcll
jne
dec
mov
je
dec
dec
dec
mov
mov
inc
and
mov
add
mov
inc
sti
push
testl
leave
gs
xor
jle
and
and
clc
push
cli
adc
lret
xorb
fisttpl
push
cwtl
mov
in
mov
cmp
or
in
or
int
pushw
jle
movups
push
scas
out
sub
dec
inc
popf
fstpt
xorb
mov
xlat
popf
inc
xlat
sub
cmp
adc
add
js
in
les
pop
clc
xor
adc
push
or
cmc
or
dec
dec
flds
popa
fadd
stos
xor
push
cmpsb
xor
int
inc
mov
xchg
xchg
cltd
jb
mov
and
jns
stos
aam
push
clc
int3
jg
out
data16
loop
adc
push
shlb
jno
test
and
ret
into
fsubl
pop
fstl
push
mov
cmp
mov
rclb
cwtl
adc
aam
pop
daa
and
stos
orb
insl
or
ret
jb
rorb
cmpl
jns
xchg
sbb
movsb
lea
shll
sbb
aam
mov
cltd
inc
inc
icebp
mov
sub
push
cld
xor
int3
out
pop
inc
pop
leave
cmp
hlt
and
and
mov
sub
add
mov
movsb
loopne
xor
adc
cmpsl
mov
std
lret
or
push
jl
push
mov
adc
in
and
add
jmp
mov
push
xchg
and
int3
mov
mov
inc
cmpxchg
jno
xor
scas
jg
jb
test
adc
sbb
ljmp
xor
jno
andb
cld
shll
push
out
loopne
or
test
fisubs
mov
mov
push
and
pushf
add
xchg
adc
inc
loopne,pn
cmp
mov
adc
xchg
mov
sbb
add
sbb
pop
fld
and
incl
popa
lock
orl
imul
addr16
jne
mov
adc
cli
test
test
rolb
es
sub
mov
ss
jo
xchg
outsb
stc
dec
aad
call
icebp
adc
mov
lret
stc
outsl
dec
adc
sbb
shll
inc
mov
xchg
lcall
push
xchg
sub
sbb
lret
sub
insb
dec
je
pop
imul
cmp
pop
loop
test
cmp
cld
aaa
push
js
inc
sbb
adc
les
xchg
addr16
mov
sub
jmp
mov
push
sbb
adc
imul
mov
sbb
adc
imul
pusha
jno,pt
popf
movsb
mov
loope
ret
popa
cmp
dec
fcmovnu
xchg
add
add
popa
rcrl
js
jle
shrl
mov
iret
out
push
lret
test
sub
andb
add
lcall
sbb
inc
jnp
sbb
xor
inc
sbb
stos
cmp
cmp
mov
rorl
jmp
pop
ss
sarl
sar
test
xchg
dec
add
mov
xor
xchg
add
lcall
xchg
cmp
and
push
iret
out
dec
cmp
push
mov
popf
nop
dec
lret
add
gs
icebp
add
nop
aad
pop
jge
pop
push
shlb
lods
lods
dec
inc
int
push
sahf
mov
mov
adc
pop
mov
jne
subl
sbb
ds
fmul
cmp
movsl
div
mov
in
addr16
xchg
inc
add
xchg
push
fsubrl
into
inc
and
repnz
dec
pop
add
sbb
xchg
rcrl
cmpsb
movsb
or
or
inc
loopne
mov
cmp
shlb
aad
scas
adc
push
rorb
jne
sbb
shll
shr
int
data16
dec
ss
mov
enter
mov
aaa
adc
xor
mov
xchg
mov
sbb
mov
dec
dec
arpl
inc
repnz
insl
dec
and
popf
inc
sbb
fwait
sbb
insl
cli
fs
add
outsl
orl
dec
push
ret
cmp
popa
aad
and
inc
pushf
insl
push
dec
repz
add
mov
add
sahf
inc
loope
cwtl
adc
jae
inc
fstpl
movsb
dec
insb
addr16
adc
out
dec
and
enter
out
orb
jecxz
sub
bound
or
fwait
mov
lea
or
rclb
push
call
shll
ficoms
pop
mov
std
inc
das
or
cmpsb
sbb
xchg
movsl
xchg
sbb
sbb
divl
negl
pop
loope
pop
pop
xchg
outsl
jne
fsub
mov
xchg
or
pop
pop
test
dec
call
es
int3
or
cmp
pop
xchg
push
xor
adc
mov
sub
loope
lods
ljmp
xor
test
inc
addr16
inc
cs
cmp
mov
inc
pop
dec
ficompl
jle
cmc
rorl
mov
mov
mov
gs
push
mov
push
lds
push
inc
fcoml
ret
push
vunpcklps
lret
or
push
dec
rcrb
fstp
leave
mov
sbb
cmpsb
jmp
lret
sub
daa
mov
pop
sbb
pop
sub
and
setne
jecxz
jp
sar
aam
cs
notb
cmp
les
gs
nop
in
mov
stc
xchg
test
or
inc
cmp
jne
xor
mov
cmp
adc
daa
test
icebp
pop
mov
js
data16
addr16
add
xchg
test
dec
inc
push
lcall
xor
dec
je
jb
cs
cmp
cmc
pop
mov
inc
in
aaa
ficoml
out
negb
lds
jle
xchg
jb
pop
sbb
inc
enter
and
cmpsb
xor
insl
je
addb
in
enter
adc
nopl
push
lods
jg
or
test
inc
add
jb
mov
das
adc
push
jl
or
sbb
test
or
aaa
out
dec
cld
test
sahf
sahf
jnp
cmp
ja
mov
roll
int3
or
sbb
mov
xchg
pop
and
sbb
jge
cltd
sahf
lcall
shrl
scas
xchg
inc
ss
incl
jnp
call
dec
sarb
add
cld
mov
dec
aad
dec
add
lret
clc
adc
jnp
sbb
lcall
scas
std
addr16
jg
or
cmp
xchg
mov
iret
dec
mov
xchg
ds
pop
rorb
mov
adc
add
lret
sub
lret
cs
mov
pusha
lret
jae
mov
sbbb
aaa
lea
or
andl
adc
ds
cmp
je
fs
imul
fisttpll
stc
and
adc
or
cli
pop
cmpsl
ds
das
popf
mov
pop
sub
push
scas
mov
inc
std
and
iret
test
adc
dec
repnz
sub
jg
lcall
add
mov
pop
addb
out
push
into
dec
adc
mov
and
xor
push
mov
imul
or
mov
fsubl
sub
or
fcmovbe
adc
dec
push
in
rolb
sub
hlt
xor
jge
cmpsl
jno
jmp
mov
mov
push
dec
fisubrs
not
cmp
inc
test
sbb
mov
dec
test
lock
jmp
fstpt
roll
roll
mull
inc
cmp
rclb
fildll
nop
xor
cmp
movsl
ljmp
xchg
jbe
lea
xchg
push
leave
jno
cmp
int
xor
mov
inc
push
pop
mov
ficompl
push
cwtl
mov
push
ss
pop
pop
out
sub
bound
or
push
push
sbb
mov
mov
movsb
jle
mov
xchg
adcb
inc
or
call
pop
bound
cli
push
mov
push
and
aaa
cmp
popf
sahf
fstl
and
pushf
dec
outsl
fidivrl
add
jmp
out
lock
push
or
sahf
fcmovnu
jge
out
xor
ds
or
pop
pushf
sub
cmp
ljmp
and
rol
jns
adc
mov
into
rcrl
inc
iret
inc
rcr
mov
mov
push
sarb
push
jae
xchg
sarl
cmp
dec
fnstcw
pop
lock
pop
cltd
mov
loop
insb
es
mov
movsb
aaa
xchg
loopne
enter
push
pop
push
loopne
cmp
loope
mov
cli
sbb
sahf
fnstcw
pop
outsb
pop
push
lret
fsts
mov
loope
rorl
repz
mov
enter
ret
adc
dec
mov
iret
or
vpsubsw
enter
inc
ds
int3
cmpsl
sub
ds
into
cmpsl
and
rcrl
inc
out
js
shll
sbb
adc
push
xor
out
fisttpl
stc
pop
cmp
rcr
cltd
shlb
shrl
shrl
ficoms
fxch
push
xchg
int
jnp
icebp
aad
sbb
in
gs
ret
dec
adcb
stos
ret
fmuls
xchg
push
dec
ljmp
push
cmp
shr
lods
stos
in
pusha
or
dec
push
add
enter
inc
jmp
inc
cmp
inc
shll
scas
fucom
in
inc
fdiv
jno,pt
mov
popa
xor
inc
gs
rorb
or
out
inc
ret
rorl
dec
push
loopne
pusha
xchg
push
push
xor
mov
or
rclb
jp
push
xor
mov
sbb
mov
push
aas
inc
mov
adc
cli
loope
lcall
sarl
xor
adc
dec
dec
ret
mov
mov
dec
dec
notb
int3
jbe
mov
mov
jge
fdivrl
mov
mov
xor
sub
shll
inc
add
and
rcrl
inc
shlb
inc
lods
int3
mov
mov
arpl
nop
int
das
ror
aaa
sarl
or
push
jno
cmp
loope
inc
roll
enter
data16
xchg
shll
les
push
inc
insb
mov
cmp
cld
or
fildll
dec
xchg
adc
and
movsb
fists
out
std
jl
dec
jg
or
mov
cmp
scas
cmp
popl
in
das
fwait
adc
lahf
jp
sarb
in
mov
jno
xor
cmpsl
lods
pop
push
scas
mov
xchg
inc
fdivrl
nop
bound
pushf
insb
xorl
push
scas
mov
push
dec
inc
rorl
push
mov
in
rol
mov
mov
mov
mov
mov
xchg
aaa
popa
into
stc
push
mov
cmpsb
mov
or
mov
popa
push
fxch
lret
sahf
adc
ret
mov
stos
shrb
shlb
dec
push
mul
jp
mov
bswap
stos
addb
pop
cmpsb
mov
std
rorb
scas
sub
mov
mov
mov
stos
jg
mov
pop
clc
push
jge
mov
push
jge
add
push
adc
leave
dec
sub
leave
pushf
inc
mov
fcom
dec
xchg
test
inc
inc
push
mov
push
fisttpl
inc
jg
std
sahf
jg
sbb
jns
cmpsb
bound
mov
push
nop
push
mov
mov
dec
int
or
or
iret
dec
aad
fistl
xchg
aaa
fwait
sub
shrl
or
lret
pop
ljmp
sub
mov
xchg
loope
mov
popf
inc
lret
inc
adc
inc
in
push
scas
les
ret
lds
jo
lds
inc
inc
sahf
push
mov
push
jae
ljmp
shll
test
lret
movsb
push
inc
nop
sahf
mov
xorb
test
or
mov
pop
sbb
lods
out
div
loopne
bound
mov
inc
or
rcrl
mov
je
fldl
adc
pop
sti
shrl
inc
rorb
ja
rcrb
roll
repnz
mov
inc
out
dec
dec
xor
cld
and
lea
push
add
dec
not
ror
pop
out
movsb
cld
xchg
jno
rcrl
ret
lret
daa
push
pop
in
shrl
push
lods
ljmp
add
ror
mov
stos
clc
xchg
rcrl
lods
sub
add
jb
aad
test
mov
popf
rorl
pop
into
push
nop
mov
jae
xorb
mov
roll
ret
and
int3
jp
imul
mov
add
or
pop
fnstcw
pop
push
adc
rorb
inc
jecxz
xchg
imul
int3
xor
sbb
mov
sbb
inc
shl
inc
pusha
fcmovne
jns
shrl
inc
xchg
inc
enter
test
iret
lret
test
or
nop
sbb
and
lret
rcrb
enter
lret
ds
aam
sbb
xchg
shr
imul
inc
outsl
test
jg
loope
mov
sbb
xchg
mov
into
out
cmc
inc
inc
push
mov
mov
inc
mov
into
incl
into
or
xchg
add
xchg
sub
push
lret
sub
pop
cmp
mov
sub
jo
stos
inc
pop
nop
mov
dec
in
lahf
adc
mov
dec
rorw
push
mov
push
dec
in
loope
inc
inc
inc
mov
pop
mov
jg
cltd
into
decb
inc
jbe
inc
inc
mov
das
mov
jmp
xchg
cmp
push
mov
cmp
cs
cmpsl
or
ret
inc
pop
lret
mov
mov
ret
popf
dec
jle
xchg
ret
stc
leave
les
cmp
pop
lahf
dec
xor
mov
jg
xor
dec
mov
nop
pushf
pop
mov
xchg
orb
inc
pop
push
mov
stos
ret
xchg
inc
in
add
and
loope
jg
jb
cmp
jl
test
add
xor
push
fstpl
loope
test
in
pop
lock
std
dec
mov
jae
shll
cmpsb
dec
mov
fbstp
es
in
das
adc
iret
ds
mov
arpl
out
fisttps
rdmsr
jg
pop
dec
mov
insb
aaa
or
pop
cmp
sbb
adc
push
in
mov
stc
test
push
dec
outsl
cmp
stc
mov
dec
push
imul
mov
int3
pop
fsub
insl
cmp
stos
bound
int3
ret
inc
fildl
and
add
mov
arpl
cmp
add
cmp
mov
arpl
ud0
sahf
mov
pop
sbb
jns
cmp
andl
dec
adc
cmp
iret
stos
fstpl
scas
fisubrs
arpl
rcll
inc
int
jge
scas
sti
insl
push
inc
mov
adc
fists
in
ret
int3
cs
cmpsb
sub
out
pop
lcall
andb
lret
repz
ja
mov
push
sahf
and
std
lods
mov
jnp
loope
insl
xor
sahf
popa
nop
jle
outsb
rclb
jne
xor
repz
adc
shlb
and
in
inc
push
mov
mov
fstpt
dec
xchg
sarl
add
aas
std
mov
repnz
scas
mov
cmp
lret
cs
stos
test
jmp
dec
cwtl
inc
adcb
mov
inc
stos
mov
mov
push
or
push
mov
roll
sub
cld
jnp
lret
outsl
lods
fmull
in
mov
jl
rcrl
jl
mov
xor
sbb
rorb
sahf
xchg
xor
stos
jno
add
fiaddl
popf
or
stc
sahf
fdivrs
jb
int
jecxz
or
arpl
and
push
lahf
enter
mov
pop
int3
adc
loop
rol
pop
int
mov
sarl
adc
mov
out
stos
sbb
add
std
push
fwait
pushf
push
lcall
jle
pushf
sub
or
push
sti
sahf
rolb
mov
dec
dec
sbb
data16
xchg
push
roll
sub
or
xchg
nop
scas
push
inc
ficoms
mov
out
xchg
ficompl
pop
frstor
ds
in
shrl
cld
dec
push
into
push
orb
jmp
jecxz
arpl
xchg
fcmovne
cltd
dec
xchg
jp
dec
pop
loopne
add
mov
repz
rorl
inc
gs
shrl
dec
mov
add
jle
arpl
ret
mov
and
es
cmp
mov
mov
sub
aad
sbb
ret
mov
jmp
nop
mov
leave
cwtl
ret
lods
xchg
and
clc
push
lret
dec
mov
mov
push
and
rorl
movsb
mov
adc
rcr
mov
mov
cli
rcl
dec
ret
cmp
dec
fs
int3
std
xchg
jge
addb
and
ja
adc
sbb
leave
xchg
cs
fdiv
rcrb
mov
leave
int
rcl
mov
std
call
repz
shll
dec
ss
sarb
popf
xchg
cld
push
insl
ljmp
add
pop
or
mov
aas
adc
or
lret
rcll
push
popa
and
orb
ror
inc
int
mov
repz
inc
xor
pop
test
stc
insb
mov
add
sbb
gs
jge
fdivrl
inc
cld
sub
pop
inc
ljmp
cmp
sbb
mov
iret
push
das
xchg
pop
iret
inc
adc
sub
xor
sbb
dec
cmpsb
ret
loop
adc
lcall
mov
call
jg
sub
fidivrl
inc
hlt
lods
jl
popl
xchg
jo
rcl
xchg
push
sbb
fnsave
faddl
aas
mov
int
sub
cmp
sbb
call
sbb
rolb
cmp
out
xchg
enter
faddl
push
nop
stos
rorl
test
iret
pop
shr
pusha
dec
xchg
sbb
or
in
ficoms
pop
pop
pusha
leave
test
mov
shll
cmpsb
adc
xchg
vpaddd
sbb
call
dec
pop
xchg
sbb
in
cmp
fidivs
cmp
cs
jno
lahf
int3
cs
fcoml
test
inc
mov
lds
into
imul
sub
push
les
sub
inc
mov
stos
cld
loope
sbb
mov
mov
nop
xchg
into
insb
push
inc
and
in
es
jp
xchg
mov
mov
stos
mov
shrl
dec
aad
push
sbb
scas
aaa
insl
dec
nop
gs
xchg
xchg
ja
enter
sbb
mov
sub
xor
mov
adc
cmpsb
out
loop
dec
pop
inc
adc
cli
xchg
mov
add
fidivrs
aam
cmp
mov
bound
mov
pop
aaa
inc
adc
mov
push
adc
and
or
ret
jge
lods
dec
into
repz
jge
cmp
fs
jmp
adc
cltd
jmp
cld
fistps
push
dec
pop
inc
popfw
push
lea
lock
outsl
in
flds
push
push
data16
movlps
inc
push
stos
enter
dec
addb
jmp
lods
adc
pop
mov
nop
and
sbb
imul
hlt
inc
pop
inc
in
fnstsw
int3
sbb
idivb
sub
adc
shlb
jns
inc
cli
xchg
inc
lods
push
out
test
xchg
jo
faddl
mov
out
jl
aas
repz
mov
mov
and
out
mov
rcrl
xor
inc
ljmp
mov
jb
in
in
bound
aad
insb
in
sbb
outsb
scas
sbb
push
push
test
xchg
xchg
mov
lahf
bswap
pop
sub
mov
mov
out
xor
mov
push
fidivrl
mov
jge
nop
jb
stc
outsb
xchg
fs
add
sub
and
mov
dec
lods
jb
adc
or
mov
jg
fstl
pop
push
ss
adc
nop
rclb
jb
sub
ds
adc
andl
push
rorl
mov
jnp
xor
pop
mov
movsb
push
xor
out
stc
out
lret
inc
push
mov
push
cltd
insl
cmp
popf
mov
repnz
add
jg
adc
aad
mov
lret
xchg
xchg
cmp
mov
ret
fmul
jle
inc
and
mov
cwtl
adc
pop
jne
shll
pop
cld
mov
daa
shlb
push
iret
inc
gs
mov
icebp
fsubr
in
push
rorb
pop
fadds
sbb
movhps
lcall
js
stc
dec
ret
cmp
rol
xchg
jl
jb
sub
test
jne
aas
clc
scas
cltd
mov
xor
pop
cmp
fisubrs
imul
andb
inc
cltd
lea
mov
mov
stos
mov
in
adc
ret
xchg
dec
inc
imul
push
scas
leave
dec
movsl
sub
sbb
mov
sahf
xor
out
mov
mov
lods
movsl
ss
aad
inc
test
scas
stc
push
out
js
inc
ret
dec
scas
insw
mov
scas
xchg
sub
mov
sub
adc
pop
xorl
and
inc
insl
mov
dec
sbb
mov
sub
mov
mov
dec
out
test
jl
adc
pop
cmp
outsb
cltd
pop
movsl
xor
sbb
pop
jg
xor
mov
nop
pop
movsl
cmp
sbb
lea
or
js
inc
loopne
mov
inc
cmp
xchg
sahf
or
adc
jg
xlat
pop
mov
push
mov
lods
jne
lods
push
mov
jbe
pop
lock
xchg
daa
xor
mov
in
pop
cmp
xchg
adc
ret
inc
movsb
notb
inc
and
push
jb
adc
mov
dec
and
sub
push
cmp
jecxz
loope
mov
test
in
pop
add
adc
dec
cmpsb
jg
mov
push
and
push
adc
lret
pop
sub
cmp
aaa
adc
jl
add
mov
cmpsb
loop
cmp
push
into
xchg
inc
sub
iret
ret
subl
outsb
repnz
loop
movsl
add
das
cmpsl
mov
dec
lahf
es
mov
hlt
mov
adc
lret
aaa
sahf
nop
mov
adc
xor
and
stos
testl
sbb
lcall
cmpsb
push
shl
mov
push
hlt
cmpsb
dec
xor
inc
dec
cmp
dec
mov
xchg
stos
adc
and
add
inc
cmp
jl
jl
and
cmp
inc
xchg
push
mov
inc
dec
stc
pop
or
add
in
mov
outsl
mov
xchg
mov
test
mov
adc
mov
lods
in
adc
icebp
cld
popf
xor
insl
test
cmpsl
nop
pop
xchg
push
pop
lods
push
mov
push
ss
loopne
push
aas
ret
into
push
mov
and
addl
mov
jl
movsb
adc
and
jle
mov
sbb
jl
add
hlt
cld
dec
fmul
shlb
push
out
add
inc
jecxz
sarl
pop
pop
sub
mov
inc
mov
or
sbb
inc
addb
push
and
addb
cmp
inc
das
ss
insl
scas
mov
test
xrelease
mov
aaa
out
aad
mov
icebp
dec
int
mov
inc
repnz
add
dec
xchg
jl
int3
mov
adc
outsb
test
mov
jge,pt
mov
bound
cmp
es
int3
out
fnsave
adc
pop
in
lods
xchg
fiadds
pop
inc
xlat
sti
cmpsb
in
mov
push
xchg
push
int
xchg
mov
shr
xchg
jmp
rorb
cmova
aaa
fcoml
mov
dec
add
xchg
test
mov
mov
outsb
push
push
inc
jmp
dec
stos
js
rcrl
ljmp
fcoml
xor
lods
shl
scas
inc
out
mov
movl
xchg
mov
xchg
mov
adc
inc
aas
mov
adc
xchg
stc
mov
adc
xorl
push
roll
cs
movsl
and
dec
xchg
and
push
pusha
aas
mov
sbb
cltd
jle
push
scas
jno
clc
mov
dec
mov
mov
xor
push
push
mov
leave
mov
cmp
push
mov
jmp
ljmp
and
mov
out
sub
mov
imul
pop
rol
pop
imul
fcoml
or
pop
mov
and
out
jb
cmp
push
outsb
mov
jbe
cld
or
mov
jmp
lods
mov
dec
sbb
cltd
nop
idivb
xor
test
push
xor
nop
insb
inc
shl
sbb
out
popa
mov
loope
ret
push
or
outsl
sub
cmpsb
iret
xor
inc
inc
fwait
stos
mov
mov
inc
loop
rcrl
xchg
sub
outsl
jp
sahf
jbe
adc
adc
icebp
sbb
mov
clc
adc
jl
lods
popf
rorl
mov
ss
pushf
dec
inc
mov
ds
test
push
pop
pop
xchg
jns
or
mov
ss
cmp
mov
insl
pop
pushf
rorb
inc
lahf
std
xlat
lods
adc
mov
push
stos
dec
sti
xchg
xchg
sub
scas
scas
sti
cmpsb
in
pop
add
xchg
pusha
inc
enter
push
fs
shll
fistpl
in
nop
pop
popf
inc
leave
jle
push
dec
and
gs
inc
mov
xor
push
adc
cltd
icebp
nop
repz
leave
cmp
push
push
shrb
xchg
mov
lods
into
adc
add
mov
adc
jle
movsl
dec
xchg
mov
mov
lds
push
sbbl
ret
dec
ret
adcb
dec
sub
jns
adc
shrb
cltd
cmc
dec
stos
push
in
xorb
cli
orl
nop/reserved
mov
test
pusha
pop
fistpl
cmpsb
and
sub
outsl
push
push
out
jecxz
out
xor
sub
push
jno
mov
xor
push
xchg
push
leave
xchg
push
sub
pop
xor
mov
pop
jp
sahf
rorl
mov
xadd
push
xchg
roll
data16
shll
aad
cs
xor
xchg
inc
dec
fwait
lods
mov
sbb
pop
fucom
into
push
sbbb
mov
dec
xchg
jo
push
ds
je
inc
mov
or
adc
sahf
push
xchg
popf
jg
xor
repz
fdivl
fs
scas
sti
jb
std
cmp
xchg
daa
xor
in
test
movsl
cmp
jg
push
sbb
fisttpll
xchg
sub
sbb
pusha
xchg
and
mov
hlt
daa
add
loope
and
mov
js
lods
xor
mov
rcll
jnp
sti
mov
dec
mov
dec
lea
mov
pop
xchg
pop
mov
pop
xor
xchg
rolb
rclb
inc
fst
loopne
pushf
adc
mov
and
icebp
pop
mov
scas
inc
xor
push
dec
out
lock
lods
js
lahf
js
outsl
mov
bound
shrl
mov
push
insb
fs
mov
mov
into
sub
popf
aad
lea
adc
gs
xchg
cmp
dec
dec
jge
mov
pop
add
mov
or
add
iret
cltd
jb
outsl
xchg
pop
icebp
bound
aas
shr
pop
stc
push
push
ds
mov
jp
in
mov
icebp
xor
mov
dec
jns
sahf
ds
inc
or
dec
pop
leave
lcall
sbb
daa
push
sbb
jae
sbb
sub
sbb
jle
scas
xor
inc
adc
add
fs
shr
mov
test
sbb
rcll
cmp
stc
mov
mov
movsl
lods
dec
sub
mov
jp
stos
push
adc
or
movb
shr
xchg
rcl
mov
xor
mov
adc
js
push
pop
mov
daa
inc
in
stc
std
xchg
sub
pop
or
cs
mov
test
and
mov
out
mov
loope
shr
dec
sbb
sbb
insl
push
in
dec
push
jnp
cmpsb
in
cld
pop
push
sahf
mov
mov
jecxz
xor
mov
mov
icebp
dec
dec
cmp
xchg
sub
cltd
sub
ja
lea
stos
adc
movsl
push
bound
inc
jge
ds
cmpsl
incl
and
mov
lahf
xor
inc
nop
xor
leave
das
clc
sbb
xchg
pop
xor
push
jo
inc
mov
push
into
std
push
pop
add
hlt
hlt
inc
sahf
bound
inc
mov
decb
popf
and
inc
loope
ljmp
inc
cwtl
inc
cmc
lods
or
sti
imul
jge
inc
sub
sbb
cmpl
les
inc
xchg
mov
sti
scas
adc
loope
stos
xchg
sbb
clc
cld
pop
or
push
cmpsl
roll
xchg
fst
mov
ss
hlt
add
hlt
outsb
mov
lds
inc
inc
mov
push
sti
test
pop
aas
pop
mov
inc
dec
push
scas
addr16
pop
subl
mov
movsb
shl
cmp
ret
push
inc
inc
push
cld
add
inc
movsl
add
les
not
push
mov
aad
jb
mov
xor
cmp
mov
jb
xchg
mov
and
mov
and
test
sub
dec
xor
mov
fdivs
or
inc
mov
mov
sbb
decb
in
mov
in
insb
pop
nop
cmp
inc
andl
and
nop
xor
and
mov
xor
lret
iret
fwait
cmc
inc
adc
outsl
jns,pn
das
jp
mov
cmp
fdecstp
inc
ljmp
aaa
into
loopne
insl
add
add
jg
sbb
add
jg
lods
dec
sbb
subb
xchg
scas
inc
lds
mov
mov
sub
xchg
sbb
pop
sub
rol
xchg
scas
dec
shll
dec
cmp
or
les
mov
out
inc
cmp
sub
push
loope
into
cmp
adc
cmp
sub
mov
pop
xor
dec
jp
xlat
push
inc
jle
sti
jp
cld
testb
mov
addr16
enter
pop
daa
insb
pop
inc
and
test
das
aad
insl
mov
mov
and
push
lds
xor
or
lcall
aam
outsb
adc
dec
xor
cmp
push
mov
lods
popa
adc
popf
sbb
jo
hlt
mov
jbe
scas
dec
arpl
dec
shl
sbb
push
jp
add
dec
mov
xorb
roll
push
xchg
out
adc
jo
xor
mov
pop
jo
xor
ror
mov
out
inc
lret
mov
int
jg
dec
ret
and
adc
push
adc
loop
mov
push
dec
lahf
in
push
or
adc
loop
jp
fs
cmp
xor
mov
jnp
shll
rcrl
bound
inc
push
jae,pt
jb
aad
xor
push
push
mov
lret
sbb
mov
cltd
es
cwtl
mov
addl
int3
push
pop
mov
jmp
or
dec
push
xor
jge
jle
loop
jmp
pusha
sbb
dec
inc
lods
loope
pop
imul
xchg
inc
xor
cmp
js
mov
xchg
cmp
scas
dec
imul
mov
js
sub
lret
frstor
inc
outsl
int
push
lds
push
aaa
stos
dec
cmp
inc
dec
adc
inc
inc
fbld
out
dec
scas
jmp
rcll
mov
insl
out
lret
fistpll
inc
cmp
fldcw
add
sbb
push
jmp
mov
cwtl
mov
cmp
add
xchg
mov
out
mov
add
cmp
rolb
test
jp
cs
jae
lods
cli
imul
fadds
out
jb
xchg
or
ljmp
dec
ss
sarl
mov
dec
mov
int
ja
clc
addr16
shrb
mov
lods
add
cmp
xorb
mov
inc
outsb
push
int
leave
lret
mov
int
mov
jae
in
in
add
mov
inc
insl
les
andb
jge
push
add
inc
jle
ret
shl
cmpsl
push
sahf
xchg
cs
adc
sub
gs
push
mov
and
test
xchg
xor
dec
ds
adc
xor
incl
pop
push
xor
setae
daa
inc
into
inc
clc
push
sbb
xchg
popa
add
mov
xor
push
cmp
sub
push
subb
int3
lds
negb
adc
add
gs
enter
into
test
mov
inc
lds
call
sub
stos
add
es
scas
jno
sub
popf
fadds
dec
in
mov
adc
mov
dec
pusha
mov
adc
mov
roll
mov
xchg
pop
loop
add
loopne
aaa
cmpsb
in
lock
xchg
inc
inc
push
push
bound
es
mov
mov
mov
mov
cmp
mov
call
cmpsb
pop
das
cmp
aas
and
inc
inc
jp
rcrb
lods
lcall
cmp
scas
stc
push
jb
mov
jecxz
jmp
insb
cmp
lods
mov
popf
adc
ret
lcall
icebp
jb
cld
xlat
stos
inc
inc
cltd
jg
outsl
inc
mov
xor
dec
mov
dec
outsb
je
inc
inc
and
dec
jmp
lds
cmpsb
loopne
cmp
lret
mov
or
incb
xor
add
dec
test
repz
push
out
lods
xlat
dec
mov
jle
cs
mov
jp
jmp
int3
in
movsb
bound
cmpsb
arpl
xchg
pop
outsl
scas
cwtl
inc
xor
push
addb
scas
adc
and
gs
mov
stc
ljmp
repz
cld
push
mov
xor
add
sub
pop
mov
test
add
sahf
shl
out
push
scas
pop
pusha
xchg
xchg
adc
mov
push
in
lock
lods
sub
jg
cmp
js
or
dec
insl
int
fnstcw
mov
sub
pop
movsl
jno
icebp
jecxz
fs
dec
popf
dec
fs
xchg
cmp
push
cmp
cmp
in
decb
jg
outsl
shl
inc
xlat
mov
mov
xchg
cmp
lcall
adc
insl
lods
adc
and
xchg
adc
xchg
repz
jmp
imul
fisubs
out
cli
sbb
cvtdq2ps
lods
sti
mov
jecxz
out
add
add
popf
xlat
xorl
mov
lcall
lahf
mov
stos
xchg
jg
sub
sub
mov
mov
add
inc
out
ds
inc
xchg
scas
loopne
popf
mov
push
xor
rcr
jo
lea
or
hlt
test
mov
roll
mov
sub
jg
pop
roll
jl
and
faddl
pop
pop
fs
inc
pop
int
or
mull
js
push
or
inc
inc
pushf
mov
jp
add
fisttpl
mov
testb
js
cwtl
xor
aas
flds
mov
inc
into
mov
fs
nop
xchg
pop
lea
mov
dec
push
test
dec
pop
cltd
push
test
sub
lea
or
in
sbb
cmpsl
pop
xchg
enter
sub
lods
jns
cltd
push
mov
psllw
leave
xor
dec
and
out
loopne
imul
stos
int
push
jb
add
push
sub
add
pop
pop
rcrl
test
std
push
adc
mov
sbb
and
cmp
pop
adc
shll
dec
jae
add
sub
dec
dec
jnp
sbb
adc
xlat
jp
push
pusha
ss
out
mov
or
adc
push
xorb
leave
cwtl
inc
shlb
mov
enter
xor
mov
cltd
sbb
les
push
mov
inc
lods
cmp
or
pop
dec
xor
xor
xchg
mov
iret
jno
out
sub
mov
daa
nop
fldt
add
lods
lods
popa
leave
icebp
adc
icebp
leave
into
cli
xchg
repz
mov
loopne
icebp
je
and
mov
rol
outsb
in
shll
fisttps
mov
shrl
in
lods
popf
sti
push
adc
sub
inc
mov
rorl
test
lods
mov
cmpsb
push
insb
inc
sub
mov
int
push
cmp
movsb
data16
in
xor
lods
adc
dec
dec
in
std
pop
mov
outsl
mov
nop
mov
out
fucomp
scas
xchg
cmp
xchg
xlat
mov
cmp
mov
out
sub
push
pop
je
ss
rclb
lods
sbb
xchg
popf
cmp
push
cmp
mov
addr16
lds
addr16
jp
cmpb
repz
jno
push
cmp
push
test
jp
outsl
inc
push
mov
jae
xchg
cmpsl
push
and
jb
pop
jnp
scas
lds
mov
push
mov
mov
shrb
mov
mov
fwait
jns
out
mov
xchg
cs
mov
sahf
add
mov
fwait
lea
scas
lods
imul
loop
aad
sarl
ds
fistpll
pop
orb
inc
mov
and
add
xor
inc
int3
ljmp
ja
jo
fldcw
rolb
adc
pop
jbe
mov
push
xchg
pop
gs
pop
lds
push
mov
jecxz
ret
shll
mov
loope
sbb
sub
mov
push
fdivl
jecxz
mov
ret
or
ljmp
lcall
fs
popa
andb
inc
lret
jno
sarl
movsb
fisttpll
imul
xchg
mov
mov
jo
mov
inc
push
fwait
or
out
addr16
or
mov
sbb
dec
stc
lea
mov
repz
cltd
or
pop
in
cmp
xor
inc
lea
add
loop
and
nop
jp
stos
cmp
insl
mov
loop
xchg
push
jb
dec
fistpl
loop
or
sub
dec
inc
ss
inc
pop
iret
loope
lods
xchg
add
repz
mov
jg
sub
dec
ret
stc
shrb
enter
push
cmp
lds
int
pushf
test
pushf
jb
mov
sahf
mov
gs
rcll
roll
repnz
inc
ja
mov
xchg
jmp
jb
push
inc
lret
int
stos
into
or
rcll
icebp
arpl
dec
lahf
stos
cwtl
popa
jl
mov
dec
shlb
addr16
fisttpll
cmp
xchg
in
ljmp
pop
mov
out
xchg
or
inc
mov
mov
pop
cld
adc
jge
pop
mov
xchg
mov
int
inc
pop
adc
cmp
mov
mov
push
shr
add
cs
mov
lea
adcb
xchg
hlt
fs
into
daa
jmp
mov
sbb
stos
xlat
popf
jle
test
add
mov
ret
sub
pop
mov
xor
fwait
rorl
dec
mov
jb
iret
or
mov
dec
mov
shl
pop
sbb
mov
add
jbe
je
or
int
jle
pop
shl
mov
xor
out
add
imul
push
fsts
sbb
and
pop
jno
cmc
jge
mov
stos
adc
xor
lea
sub
push
cmp
sbb
rol
sub
add
mov
enter
sbb
test
sbb
mov
jmp
subl
out
into
cmp
mov
xchg
sbb
mov
dec
fdivrp
popf
cmp
pop
addr16
std
daa
shlb
repnz
mov
sahf
loope
pop
xor
into
sub
int
pop
jmp
push
adc
ja
mov
cmp
mov
ss
dec
rorb
movsl
sub
dec
adc
push
sub
mov
xor
inc
adc
mov
xchg
loop
and
push
ret
mov
ficoms
cld
cmpsb
add
mov
xor
mov
jnp
cmp
adc
out
cmp
sbb
cmp
add
das
mov
in
xor
es
out
adc
lds
inc
cmovp
push
cli
mov
push
mov
stc
jmp
mov
mov
lods
and
lahf
mov
cmpsb
mov
int3
adc
stc
outsb
push
aas
movsl
mov
cmp
mov
mov
pusha
or
jl
ss
xchg
jmp
out
mov
dec
pop
mov
sti
pop
fstl
and
push
leave
jl
into
sub
shll
push
inc
xor
notb
cmpsl
bound
xchg
popf
ret
mov
nop
aad
jns
mov
ret
xchg
dec
in
jge
xlat
nop
pop
daa
or
mov
jo
cmpb
cmp
dec
rcrl
push
adc
adc
jne
lahf
mov
jmp
call
inc
adc
mov
inc
push
mov
dec
or
pop
mov
mov
xor
mov
fnsave
int
mov
push
push
fcmovb
lds
in
pop
xchg
decb
pushf
jb
inc
mov
stos
dec
cmpsl
mov
or
arpl
cmp
adc
mov
xchg
in
xor
jg
cmpsb
xchg
pop
adc
data16
iret
inc
nop
xchg
inc
test
mov
repz
outsl
sub
lret
enter
data16
fsubs
loope
xchg
sub
jp
xor
inc
jg
add
adc
push
pop
xchg
mov
dec
and
push
cmp
insb
pusha
jne
scas
int
call
and
outsb
ret
rcll
jg
js
bound
mov
xchg
call
lods
out
ret
icebp
xor
pop
in
adc
es
dec
aam
dec
sbb
test
fcoms
cmp
or
pop
mov
and
mov
rorl
adc
aaa
cmp
sbb
mov
jns
xchg
or
adc
cwtl
ret
inc
ds
inc
cmpsb
adc
std
nop
inc
into
psubusw
lock
in
shl
in
scas
xchg
imul
xchg
jge
and
mov
fistpl
imul
inc
aas
xor
inc
dec
ret
movsb
cli
call
pop
push
push
clc
mov
push
jns
jb
dec
dec
pop
mov
rorb
test
and
leave
or
clc
out
popf
sbb
xchg
cld
adc
ds
add
or
push
jge
sti
aas
bound
stos
push
cmp
push
inc
sub
imul
pop
test
inc
fwait
rorb
cltd
fxch
fwait
gs
cmp
push
mov
and
xor
fwait
rolb
rol
es
fwait
dec
and
inc
fnsave
inc
jmp
push
bound
repnz
outsl
dec
insb
mov
adc
ljmp
repz
lds
andb
cmpsb
mov
and
outsb
add
imul
dec
mov
popa
lea
dec
cmp
adc
lcall
xor
enter
add
inc
shlb
inc
inc
adc
or
push
movsl
jb
dec
and
mov
rolb
clc
test
popl
mov
and
jne
pop
faddl
mov
incb
inc
mov
mov
test
jbe
fnstsw
cmpb
or
pushf
inc
insb
jg
mov
pop
stc
lcall
fidivl
xchg
cmp
sub
lahf
leave
sbb
mov
xchg
lods
xor
sub
rolb
mov
adc
jmp
fdivrs
sbb
and
lcall
in
aam
mov
sub
pop
mov
cs
loope
xchg
lret
cmp
imul
insl
movsl
pop
adc
pushf
lds
gs
into
cmpsl
ret
outsb
out
mov
cmp
mov
push
dec
jecxz
out
add
aas
pop
push
stc
sub
shrl
sahf
stos
fdivr
sub
sahf
mov
fs
or
sbb
stos
mov
cltd
cmp
pop
cli
jp
jecxz
inc
jns
push
sahf
enter
dec
or
dec
xchg
repz
in
xchg
push
mov
push
pop
mov
or
test
cmp
outsb
mov
cmpsl
in
lock
xchg
rcll
dec
xlat
mov
je
addl
xchg
add
and
cwtl
les
das
adc
add
mov
dec
in
xchg
cmpsb
inc
push
loope
icebp
jo
mov
scas
sub
cli
mov
xor
aaa
aam
or
push
inc
out
add
sarl
dec
aad
dec
int3
cmp
call
xchg
xor
xchg
call
shll
test
inc
dec
xor
push
lock
xchg
jmp
xchg
jmp
sub
test
inc
or
stc
rcrl
jmp
popf
xchg
dec
sahf
aaa
mov
add
loopne
cmp
stc
dec
adc
dec
push
out
pop
sub
and
movsl
sub
cs
inc
add
lret
xchg
push
mov
in
and
outsb
mov
in
fmuls
pop
stc
inc
dec
push
lret
push
mov
and
stos
mov
cli
mov
incb
sbb
add
sub
adc
insb
push
iret
subb
cmp
outsl
push
fwait
cmp
dec
popa
test
jge
adc
add
pop
sub
arpl
iret
arpl
fwait
jb
in
or
gs
outsl
popf
in
xor
add
inc
arpl
and
lods
jb
sbb
pop
sbb
dec
and
insl
and
addr16
adc
mov
jns
adc
bound
inc
push
loop
xor
and
inc
lcall
dec
fwait
dec
sub
mov
out
mov
mov
imul
cmpb
out
push
aaa
hlt
pusha
adc
mov
mov
in
push
mov
bound
lea
pushf
sbb
movsl
add
jne
sahf
push
cmp
das
mov
mov
cmpsb
mov
xor
xchg
mov
inc
int
push
mov
mov
les
and
xchg
nop
sarb
dec
inc
inc
js
shll
or
xchg
test
xchg
push
lahf
mov
stos
pop
sub
inc
push
ret
mov
jp
pop
fucomi
add
add
mov
lret
notb
jmp
mov
xor
mov
shlb
xor
call
pop
addr16
xchg
aaa
arpl
cltd
lret
push
fsubl
cmp
pop
loopne
mov
mov
and
adc
sbb
sbb
mov
dec
xchg
faddl
sbb
out
inc
fadds
mov
fnstsw
insl
andl
mov
xchg
daa
xchg
inc
and
or
repz
mov
out
lret
push
jno
gs
test
and
inc
arpl
insl
jle
cmpsl
cmp
xchg
lcall
int3
insb
insb
add
ret
jge
adc
cmpb
or
mov
xorl
pop
jne
jb
xor
sysret
pop
das
roll
add
scas
sub
push
jle
and
mov
dec
adc
sahf
imul
fsubrs
dec
ds
lret
xchg
into
cmc
adc
or
dec
outsb
test
pop
imul
mov
xchg
insb
out
rcrb
jg
cmp
fdivl
rolb
sarl
fsubp
mov
dec
cltd
loope
fisubrl
jmp
int3
sub
stc
mov
add
inc
das
push
arpl
jl
js
mov
adc
scas
in
xchg
adc
sbb
jp
pop
adcl
int3
cmp
test
into
push
mov
xchg
popa
mov
lret
sbb
fcoml
out
aaa
adc
les
aaa
pop
sub
dec
enter
mov
and
sub
and
adcl
nop
aad
into
mov
xchg
and
lcall
repnz
mov
xchg
dec
push
fimull
nop
popa
and
adc
call
push
jg
mov
stos
imul
test
mov
pop
jp
shll
das
pop
jae
decb
cs
jg
repnz
mov
xchg
dec
dec
ds
imul
push
das
or
mov
dec
jno
out
incl
fsts
jle
int3
adc
jae
jns
pop
mov
in
cwtl
pop
xchg
xchg
adc
dec
scas
mov
cli
push
xchg
iret
jp
lret
ljmp
xchg
cmpsl
iret
adc
cmp
mov
fwait
dec
jecxz
int
jnp
inc
nop
sbb
mov
mov
xor
lea
sahf
mov
cli
sarb
pop
push
xor
bound
jg
pop
xor
pop
push
jbe
inc
bound
or
adc
cmp
das
mov
dec
ja
sub
sbb
xchg
pusha
std
sti
ret
outsl
repz
inc
push
xchg
pop
mov
sti
ss
cmp
ror
push
adc
dec
mov
call
pushl
jg
or
sbb
int
xchg
roll
adc
jl
aaa
pop
mov
dec
jecxz
bound
pop
cmp
push
add
push
cmp
xor
mov
cmpsl
add
add
inc
mov
push
roll
imul
repz
ljmp
imul
dec
mov
mov
inc
fisttpl
pop
jb
int
lahf
jp
cmpsl
mov
in
xor
test
push
call
and
dec
mov
lahf
into
movsl
dec
jno
cs
lods
push
mov
ljmp
push
leave
lods
pop
inc
cmp
sub
add
les
or
cmp
fxam
pop
in
repnz
cmpsb
mov
pop
lock
shl
iret
mov
add
mov
mov
pop
cmpsl
mov
rorl
add
dec
cmp
push
adc
roll
nop
adc
roll
jg
mov
push
xchg
mov
dec
nop
xchg
mov
adc
pop
push
push
push
adc
xchg
lods
ds
jl
jmp
jnp
jne
mov
notl
lds
pushf
inc
insb
mov
cwtl
mov
xchg
inc
mov
decb
test
cli
rorb
insl
das
scas
test
mov
mov
inc
and
inc
imul
inc
out
mov
push
adc
outsl
cmp
fcoms
or
loop
dec
lret
jns
inc
pop
aas
ljmp
cmp
cs
out
pop
outsb
inc
dec
jecxz
mov
inc
lock
push
lods
mull
pop
xor
cmp
push
jns
inc
mov
push
xchg
or
pusha
xor
mov
fisubl
jp
loope
mov
sbb
or
popf
inc
rol
int
xor
or
jle
and
lock
cs
jns
inc
xchg
lods
jno
xchg
or
pop
jl
inc
adc
xchg
xor
add
push
sbb
dec
mov
inc
or
inc
and
imul
xchg
arpl
adc
inc
sbb
clc
js
jno
mov
sub
xlat
jecxz
sbb
std
stos
or
iret
sarl
xchg
sub
addr16
pop
call
sti
dec
push
fisttps
push
je
scas
xor
adc
sahf
mov
sbb
dec
dec
or
in
fildll
jo
mov
shlb
sbbl
inc
popf
adc
dec
scas
mov
mov
push
je
jle
daa
mov
adc
pop
and
mov
stc
out
inc
cmp
pop
push
outsl
mov
sbb
jg
push
mov
jno
or
test
mov
cmp
mov
lcall
pushf
xor
jmp
int3
xchg
nop
xlat
and
cmp
rorl
pop
or
arpl
ret
cmc
mov
xorl
inc
popf
cmpsl
or
mov
mov
adc
adc
mov
dec
and
ljmp
dec
rcrb
cmc
mov
in
lock
outsb
ss
inc
out
cmp
mov
cs
lds
xlat
imul
pop
clc
repnz
inc
fdivrl
xchg
aas
pop
cs
xor
bnd
popl
inc
cmc
imulb
ds
das
mov
fadd
pop
dec
addl
aaa
dec
popa
dec
sub
loope
mov
xor
outsb
mov
cld
or
mov
adc
pop
mov
push
mov
test
stos
and
sbb
adc
mov
jbe
cmpsb
inc
sbb
je
mov
fmul
cmp
ret
add
test
popf
out
mov
rclb
inc
inc
add
daa
push
in
sbb
js
jo
xchg
inc
jecxz
daa
ror
test
adc
dec
cs
push
inc
setge
pop
sarb
mov
mov
imulb
lcall
add
pop
dec
lods
fdivl
dec
jbe
mov
jnp
mov
cmpsb
cmp
aad
inc
mov
and
mov
jno
mov
mov
mov
je
nop
mov
adcl
idivl
lea
and
mov
jae
push
fbstp
js
dec
push
rcrl
jg
or
xor
sbb
int3
inc
mov
mov
ja
cmpsb
loop
and
sbbb
sahf
lcall
pushf
lcall
push
ret
adc
insl
dec
hlt
push
aam
cmpsl
decl
rcrl
lahf
mov
inc
pop
cmp
pusha
aas
add
cld
xchg
add
jmp
ljmp
jle
xor
xor
xchg
insb
andb
imul
int3
movsl
rolb
inc
lcall
imul
daa
jnp
push
dec
and
in
ss
cmp
andb
std
fldcw
mov
mov
cltd
mov
loop
mov
andb
test
inc
xor
mov
dec
mov
push
jl
push
sub
popf
ret
sub
ret
mov
and
daa
movsb
pop
mov
push
and
or
pop
cmp
add
xchg
and
stos
stc
jo
dec
dec
mov
vpinsrw
out
cmp
pop
sbb
and
inc
shl
dec
add
xor
and
xor
pop
mov
mov
dec
mov
add
scas
sub
jmp
inc
dec
cmp
dec
jp
sub
xor
and
adc
push
push
mov
sbb
add
insb
dec
sbbb
xor
add
ss
cmpsl
in
lret
push
xchg
jmp
and
xchg
mov
sahf
insb
es
add
mov
sub
add
push
sub
dec
cmp
bound
mov
outsb
and
inc
clc
push
sbb
pop
jo
adc
rcll
out
pusha
lock
in
or
adc
into
dec
xchg
mov
mov
jge
scas
out
adc
ret
inc
mov
jl
mov
or
test
xor
mov
pslld
xchg
into
mov
jecxz
inc
pop
mov
pop
pop
loop
cs
std
iret
shr
pop
stc
outsb
mov
inc
and
andb
xlat
in
add
je
inc
jno
mov
sbb
or
les
push
or
sarl
daa
aaa
cmc
or
or
test
stc
aaa
test
scas
or
test
cmpsw
sub
cwtl
adc
inc
mov
dec
inc
jo
imul
mov
leave
scas
sub
daa
pop
in
rcll
mov
out
push
lea
cmp
dec
js
pushf
or
je
scas
xor
push
xor
and
fisttpll
xlat
arpl
les
pushf
mov
icebp
sub
outsl
je
mov
mov
pop
arpl
inc
and
mov
dec
mov
mov
int
lods
mov
mov
inc
dec
pop
js
notl
pop
int
loope
push
inc
lea
and
bound
cmpsb
add
adc
int3
ror
daa
adc
in
jb
push
jno
adc
bound
lret
lods
nop
leave
shll
dec
add
cmpsb
addb
inc
loop
pop
aaa
pop
rorl
cmp
dec
cs
div
sbb
xchg
inc
pop
xlat
ret
cs
idiv
jecxz
adc
xchg
inc
adc
adc
dec
mov
loopne
mov
scas
andl
sahf
add
out
pop
or
repnz
xlat
inc
leave
movsl
enter
or
pop
inc
mov
fisubrl
jbe
cwtl
lcall
or
fcoms
push
cmp
or
lcall
sarl
iret
enter
adc
push
aaa
sub
mov
sti
sub
jno
in
mov
jg
jg
jnp
push
xchg
loop
mov
lret
imul
xor
cmpsl
and
or
insb
cld
fwait
lea
fstl
pusha
dec
repz
xlat
push
push
daa
push
cli
movsb
inc
or
push
pop
mov
clc
xchg
push
jmp
push
and
repnz
call
das
adc
dec
pop
popf
leave
xor
jle
std
xchg
lcall
ss
enter
dec
add
push
or
xchg
ljmp
fstpl
jae
or
sbb
lods
clc
add
jnp
dec
dec
sti
and
or
cmp
jle
jp
arpl
jl
adcl
push
inc
insb
jns
mov
insb
clc
sbb
mov
sub
mov
push
cld
sbbb
sub
addr16
mov
sub
ret
and
ret
or
clc
adc
xor
sub
lret
shlb
pop
jg
mov
lret
daa
mov
inc
loopne
ds
out
ret
and
pop
rorl
loope
std
mov
adc
and
mov
add
mov
inc
mov
inc
lds
push
pop
leave
dec
loope
in
test
mov
push
sahf
test
popa
dec
clc
jb
jns
pop
sub
ffreep
xchg
jb
ss
mov
fmull
or
xor
iret
sbb
mov
scas
jno
jmp
mov
in
jne
fimuls
cli
outsb
dec
rol
xchg
xchg
pop
pop
repz
movsl
lock
push
or
and
and
aam
jo
lahf
iret
mov
in
ds
into
cmpsb
cmp
or
or
jl
shll
jg
nop
xchg
ret
mov
outsb
loop
aas
inc
into
jg
incb
sub
inc
xchg
mov
and
xchg
pop
out
mov
setp
sahf
mov
into
lea
lods
sbb
push
push
inc
testl
dec
sbb
dec
pop
adc
fs
inc
into
xchg
fbstp
ljmp
adc
out
movsb
add
aad
inc
jge
lods
pop
sarb
cmp
mov
sbb
add
loop
subl
add
paddsw
ror
iret
cmc
aaa
mov
imul
push
ss
rorl
out
xchg
lcall
lock
rclb
shr
rorb
adc
test
stos
lret
rorb
adc
out
stos
push
stos
shl
pop
subb
dec
nop
imul
jnp
popf
inc
mov
and
push
jb
mov
lret
dec
push
in
in
insl
scas
or
add
inc
pop
cmpb
lret
lcall
push
xor
fsubr
inc
pusha
into
mov
xor
mov
es
sub
inc
jecxz
xor
mov
jae
xchg
pop
push
aaa
test
sub
icebp
adc
outsb
pop
cmp
or
inc
ljmp
in
sbb
nop
inc
push
adc
enter
dec
mov
jae
sub
mov
pushl
inc
and
cmp
pushf
add
sbb
mov
test
test
enter
jmp
popa
push
adc
sub
push
in
pop
lds
jp
mov
scas
in
mov
call
dec
dec
je
xchg
int
mov
pop
dec
inc
cmpsb
ja
jae
jb
and
addb
nop
shll
addr16
aad
and
sub
nop
adc
fcomp
push
jmp
pop
or
pusha
dec
push
push
fcomps
xorl
clc
xchg
dec
push
incl
jp
roll
add
sub
mov
dec
cmp
std
loopne
inc
pop
inc
xchg
cmp
fsubrl
mov
push
clc
jg
and
push
xchg
popf
mov
std
sbb
and
outsl
xor
push
out
iret
jno
aas
add
int
outsl
jg
xor
adc
js
sub
xchg
or
lcall
bound
rcr
dec
sub
rcll
mov
push
aam
loopne
pop
negl
out
mov
ret
xor
sub
fwait
insl
push
and
aad
dec
jns
pop
and
pop
stos
inc
jno
mov
in
xor
mov
dec
add
jle
mov
and
adc
jge
rclb
adc
mov
sub
sbb
mov
xor
jge
rclb
cli
rorb
std
or
shrl
aaa
loope
or
mov
jge
in
imulb
xor
xchg
call
xchg
lea
daa
mov
inc
fistps
dec
mov
xor
lods
fisubrs
pop
dec
sbb
jns
iret
dec
icebp
fmul
lea
add
adc
fwait
sahf
sbb
sub
in
mov
mov
xchg
jno
mov
roll
and
add
inc
pop
lea
or
jb
loop
jno
inc
sub
adc
inc
and
ss
out
cmp
sub
imull
jmp
sub
idivb
inc
je
jecxz
loope
ja
mov
mov
and
jbe
jae
mov
int3
orl
mov
adc
mov
cmp
xor
lret
loope
sub
insl
psubd
sbb
aas
aaa
int
jno
adc
jb
loop
stos
push
in
xchg
cmp
mov
div
dec
add
and
xchg
test
iret
mov
outsb
xchg
out
lock
in
adc
dec
aad
sub
pusha
mov
lods
adc
adc
ret
cmp
icebp
fisubs
mov
test
lret
scas
bound
adc
pop
jecxz
xchg
pop
dec
jecxz
cmp
sbb
adcl
cmpsb
fistps
mov
in
insb
jbe
ret
adc
rcl
adc
or
out
cmp
daa
outsl
mov
xor
cmp
inc
cmp
push
loope
mov
xchg
mov
adc
mov
adc
push
mov
fwait
xor
out
in
push
xchg
inc
outsl
rolb
dec
mov
movsl
inc
jno
sub
xor
cmp
xchg
sub
mov
push
xchg
jp
in
stos
outsl
xor
into
jp
dec
xor
adc
jmp
xor
jp
adc
dec
dec
xchg
push
push
mov
adc
sti
jle
xor
add
cmc
and
add
scas
lret
mov
push
lock
mov
dec
cmp
aas
push
in
add
push
test
cs
push
push
cmp
dec
mov
popa
add
mov
sbb
movmskps
xor
sbb
les
cmp
ret
aaa
or
inc
sub
jmp
cltd
pop
add
shl
xchg
push
push
test
pop
xchg
mov
cs
sub
jp
mov
push
sbb
adc
in
outsb
cmp
leave
icebp
and
jno
or
insl
xchg
mov
pop
out
iret
in
int
loope
mov
push
fdivrl
nop
jns
loop
adc
adc
push
movsb
pop
sub
imulb
jbe
jge
insl
lods
jne
gs
dec
sub
ja
pop
leave
inc
add
jp
xor
mov
pop
popf
in
pop
je
roll
inc
inc
or
push
push
fdivrs
push
inc
push
mov
push
jecxz
and
xchg
aas
outsl
int
lret
pop
inc
leave
loop
pop
in
and
int3
sahf
cmp
mov
int3
jmp
aam
iret
and
xchg
jg
sbb
ficoml
add
pushf
roll
lock
push
nop
ficoms
inc
inc
jle
nop
push
jnp
xchg
into
and
and
lds
pop
clc
ret
les
fwait
loopne
inc
outsl
loop
mov
jg
jg
inc
adc
inc
ljmp
or
iret
and
xchg
push
inc
xor
out
sub
add
jecxz
xor
clc
push
movsl
cmp
mov
and
xor
or
test
mov
orl
mov
xor
inc
push
sbb
mov
sbb
fwait
stos
adc
dec
fs
jno
rcrl
insl
popf
insl
inc
sub
mov
mov
push
into
insl
jnp
xchg
repz
pusha
lahf
ret
sarb
outsb
inc
rorl
int
jg
add
popa
inc
push
jae
mov
iret
mov
and
xchg
das
lds
pop
frstor
repnz
mov
push
add
inc
push
lods
and
ds
roll
popa
mov
push
mov
dec
leave
les
cmc
arpl
dec
jnp
sbb
dec
inc
dec
pop
jae
add
test
mov
stos
push
pop
or
ds
mov
or
js
push
pop
xchg
rclb
xor
roll
rcrb
sub
jp
inc
pop
insl
xchg
inc
ss
clc
and
scas
cmp
scas
data16
sub
cmp
dec
push
lods
inc
pushf
xor
lahf
add
sbb
rclb
push
adc
ret
sbb
scas
fistpll
loope
std
xlat
nop
insl
jae
int
lds
pop
pop
push
and
adc
ljmp
aad
jno
sbb
sahf
xor
ds
setne
xchg
push
cmp
inc
inc
push
xchg
dec
dec
or
add
cmp
push
repz
movsb
in
pop
test
dec
mov
cwtl
xor
rcr
pop
lods
out
fsubrp
cmp
pop
nop
cmp
jl
inc
fwait
adc
fisttps
inc
add
xor
movsl
stc
daa
sbb
insl
jo
add
jns
adc
hlt
push
push
insb
cmp
and
jle
adc
sub
aaa
scas
lea
cmp
push
jnp
mov
lcall
fcoml
fcmovbe
sub
scas
fnsave
ds
stc
imul
imul
popf
or
js
jecxz
test
and
sub
sub
jnp
push
repz
xor
inc
xchg
outsl
jle
pop
cs
arpl
sahf
mov
inc
bound
inc
jl
test
and
adc
adc
push
mov
stos
and
std
jg
pop
aad
xchg
daa
in
adc
and
or
adc
pusha
pop
and
sub
xor
iret
pusha
sub
ret
inc
inc
js
jl
adc
mov
sub
jnp
rep
xorl
push
inc
jle
movsl
sub
push
outsl
mov
inc
loop
ret
adc
addr16
pop
insb
jp
movsl
and
loope
inc
mov
sbb
mov
outsb
sahf
insb
and
jg
or
push
sub
loop
dec
pop
mov
and
push
add
mov
in
loopne
insl
push
sbb
mov
xchg
addr16
pop
push
insb
nop
pop
dec
mov
ret
scas
mov
pusha
test
push
or
push
xchg
sbb
jp
aaa
andl
rolb
stc
mov
pop
pop
sub
jnp
mov
adc
test
sbb
mov
add
xchg
fists
push
sbb
loope
stc
loopne
push
xor
pop
popl
lock
cmp
jmp
mov
or
imul
add
mov
adc
sahf
out
lea
leave
stos
dec
sub
push
fdivl
es
mov
sub
loop
shrb
xchg
shll
mov
push
and
mov
inc
cmp
js
fmuls
xor
xor
fnsave
push
rcrl
mov
and
outsl
outsl
xlat
ja
inc
lock
push
ljmp
pop
mov
jge
dec
ds
xor
fbstp
mov
orl
pminub
outsb
jge
add
mov
or
push
add
pop
and
jmp
sti
adc
pop
shrb
xor
jmp
imulb
in
shll
cwtl
add
sarb
cmc
lahf
adc
adc
mov
pop
push
mov
aas
jp
mov
cmp
mov
sbbl
jge
rolb
jmp
scas
loopne
arpl
xchg
fnsave
aad
dec
jle
push
scas
jp
loope
mov
mov
scas
loope
inc
leave
or
xchg
or
scas
lret
mov
mov
dec
pop
icebp
rorl
add
fmull
cmp
push
stos
fdivl
xchg
xor
sub
das
bound
mov
lods
xchg
mov
fidivl
xor
dec
adc
xchg
iret
inc
push
out
push
mov
push
shll
fmull
pop
test
sti
fisubs
inc
repnz
jbe
add
out
into
xchg
outsb
and
movsl
pop
in
pop
fists
adc
push
xchg
and
add
dec
add
sti
sarl
lret
lds
mov
into
jecxz
repz
outsl
xor
push
xor
or
movsb
mov
xchg
cmp
ds
gs
lock
or
cmp
shrl
cmp
push
lock
clc
loop
xor
and
ret
mov
vpmacsswd
pop
dec
scas
loop
inc
dec
jp
add
jbe
jp
hlt
movsl
sbb
push
repnz
dec
dec
popa
dec
mov
jb
adc
push
inc
dec
in
subl
dec
dec
pop
and
imul
mov
or
pop
je
and
jge
ret
repz
shl
xchg
pop
adc
cmp
mov
nop
or
scas
shll
mov
jb
out
adc
test
je
mov
out
fbstp
ljmp
adc
into
xchg
fisttpl
and
jnp
icebp
cmpsl
pop
push
test
inc
and
jecxz
lahf
jmp
push
aas
pop
fcmovu
das
sbb
pop
mov
cmc
hlt
out
xchg
shll
add
mov
sbb
out
lcall
sub
mov
mov
popa
inc
mov
rorb
insl
test
push
sbb
gs
subb
aas
mov
clc
addr16
sub
mov
scas
sbb
dec
pop
adc
std
mov
adc
push
leave
or
orb
je
mov
mov
imulb
push
pushf
and
xor
mov
or
jp
sbb
or
jmp
scas
push
inc
pushf
js
test
pusha
mov
adc
outsb
mov
scas
or
xor
shll
lret
push
mov
shrl
xchg
pop
pop
push
mov
aas
lret
mov
jecxz
test
pop
adc
shll
and
mov
outsb
loopne
movsb
cs
or
adc
shr
inc
dec
fdivl
daa
in
xor
rorb
jmp
xor
mov
inc
or
pop
push
pop
imul
inc
xchg
push
rcll
lods
stos
add
rorb
out
jg
hlt
or
mov
stc
mov
mov
mov
inc
mov
cs
jo
mov
xor
loope
or
jnp
mov
outsl
ret
aaa
out
sub
push
sbb
orl
cwtl
scas
push
fnstcw
int
fnstcw
xor
inc
lock
mov
popf
xor
orb
xor
and
mov
ss
push
mov
xchg
mov
mov
adc
xor
jmp
lret
add
dec
sarl
push
xchg
pop
std
rorb
lods
test
xchg
pop
jo
lret
shll
or
call
aam
iret
inc
arpl
dec
jae
cmc
addr16
dec
call
test
or
pop
mov
push
fisubrs
cmp
in
jp
and
lea
push
rclb
das
mov
mov
xlat
pushf
stos
into
lock
clc
ss
push
test
xchg
js
jecxz
mov
in
pusha
lods
push
dec
pop
xchg
xchg
loopne
das
outsb
cmpl
inc
sbb
cs
mov
sbb
ljmp
mov
ja
xchg
sbb
push
and
daa
mov
loopne
pop
push
jg
and
sbb
int
dec
push
jb
stos
pop
fwait
lods
adc
cmc
dec
or
lcall
ss
cli
xchg
cmp
cmp
cmp
hlt
push
pop
jg
ljmp
lods
int
stc
mov
or
inc
cli
mov
xchg
test
arpl
sbbl
mov
sbb
cmpsl
pop
shlb
int
in
push
push
lret
xchg
out
insl
test
xchg
add
inc
sub
push
fxam
pushf
cmp
div
adc
test
shrb
lock
sbb
stc
mov
sub
daa
cmp
lea
dec
imul
dec
mov
scas
mov
ljmp
fldcw
int
enter
jmp
scas
dec
inc
int3
adc
mov
scas
xor
push
mov
test
add
xor
push
mov
movsb
out
xchg
repz
cli
mov
xchg
xor
data16
in
jno
popf
xchg
add
mov
adc
pop
push
rorb
fisubrl
ror
dec
xchg
dec
sbb
fcomi
out
jb
pop
rolb
sti
pop
ficoml
inc
loop
push
add
mov
les
cmp
aaa
adc
mov
imul
cltd
push
push
inc
xor
ds
in
outsb
push
shl
aaa
aas
jmp
sbb
xchg
cmp
loopne
ss
adc
add
push
or
orb
mov
aad
in
cltd
fildl
mov
xchg
cmp
das
xchg
push
shrb
sub
inc
lcall
mov
ja
jg
push
and
rorl
repnz
leave
pop
sbb
jnp
pop
add
jmp
ljmp
sub
mov
dec
ja
sarl
sbb
test
cltd
or
test
jle
xor
mov
pop
mov
inc
xorps
call
fists
pop
xchg
xchg
imul
adc
ljmp
ffreep
imul
pop
movups
push
jmp
inc
stc
fwait
xchg
or
in
xchg
cli
mov
inc
sarb
dec
xchg
ss
mov
pop
xchg
bound
and
fwait
mov
push
pop
jo
scas
and
std
jg
leave
fmull
pop
dec
lret
inc
jg
sbb
jmp
cltd
push
bound
mov
pop
sar
sub
add
imul
adc
mov
imul
xor
pop
inc
mov
sti
jge
out
sub
xlat
repz
ficomps
aas
mov
inc
mov
lea
ds
arpl
jecxz
sub
add
outsb
cld
mov
in
int
dec
inc
or
popa
mov
js
adc
inc
and
mov
pop
fisubs
leave
nop
jns
sbb
push
in
fwait
mov
gs
dec
in
inc
inc
nop
push
mov
jge
pop
or
add
daa
in
inc
cmp
arpl
js
inc
or
mov
bound
dec
lock
stos
cmp
mov
fiaddl
inc
aaa
lea
sub
rolb
push
popf
int
adc
jecxz
pop
insl
out
cmp
popf
cmp
xor
push
cmp
push
outsb
mov
sub
mov
jne
inc
movsl
loopne
pushf
addb
popf
adc
mov
and
cmp
movsl
sub
sub
std
lret
mov
movq
xchg
inc
js
mov
lret
cmpsb
mov
clc
cmpsl
stos
bswap
jno
pop
aad
sbb
pusha
outsb
jae
cmp
enter
xor
push
cmp
jge
push
sbb
inc
dec
push
mov
pop
xchg
pop
lods
sub
pop
cmp
mov
push
decb
je
xchg
mov
nop
out
mov
mov
sub
pop
mov
int
sub
out
cli
je
fs
ret
mov
jns
sbb
popf
add
stos
les
or
and
push
or
pop
mov
div
ss
add
mov
or
mov
ds
loopne
or
push
jl
sub
mov
dec
ds
in
cmp
push
cmp
mov
mov
js
cmp
cld
call
popf
imul
test
xchg
mov
mov
movsl
and
mov
add
sbb
or
mov
fdivl
ret
and
aas
add
jbe
mov
icebp
mov
notb
or
inc
inc
pop
mov
mov
mov
push
mov
jge
mov
or
pusha
sub
cmpsl
mov
mov
stos
cmpsb
fidivs
cmp
sbbl
mov
jge
ja
mov
and
mov
lret
enter
sbb
jbe
inc
sub
pop
mov
cmp
adc
int
stc
ds
rolb
repz
mov
lahf
pop
daa
mov
in
sbb
enter
mov
pop
bound
inc
pushf
sub
inc
ds
inc
in
add
dec
xlat
jo
dec
jg
mov
es
inc
inc
shll
add
jp
mov
pop
cmp
in
add
dec
adc
ficoml
into
faddl
lods
ret
push
inc
sub
lods
push
je
cmp
je
and
popf
push
shrb
cltd
mov
out
fmul
hlt
ljmp
inc
jmp
stos
std
out
int3
jbe
dec
xchg
ljmp
jle
dec
rcrl
jle
adc
mov
rcll
nop
xchg
xchg
sti
and
and
add
mov
cld
jbe
movsb
cmpb
pop
fisubrl
rcrl
push
lret
adc
arpl
xor
add
adc
iret
daa
pop
push
fsubr
mov
xchg
movl
stc
sahf
pop
sub
loopne
push
js
mov
mov
sub
dec
loope
jge
pop
sti
cmpsl
jne
jae
and
sbb
inc
sbb
ret
mov
std
adc
outsb
mov
xor
in
dec
mov
rorl
popa
inc
push
bound
outsb
add
xchg
enter
sbb
push
jns
lret
dec
test
pop
inc
mov
jecxz
push
and
shr
mov
jb
and
jo
xchg
adc
mov
mov
addl
dec
and
add
xorb
popf
mov
sarl
sbb
insl
fildl
daa
pop
mov
jecxz
repz
and
addr16
shl
inc
imul
mov
cmp
les
or
cli
mov
stos
movsl
add
lods
dec
jg
outsb
sub
mov
out
dec
mov
je
dec
int
xchg
int3
outsl
xchg
int
mov
jle
dec
mov
mov
ret
mov
sarl
jno
sbbl
xchg
push
nop
push
push
pop
dec
jns
js
xor
popa
sti
dec
ljmp
imul
jno
outsb
sub
inc
or
jge
mov
xchg
pop
cmp
jb
mov
cld
dec
dec
les
mov
std
stos
mov
sbb
pop
ja
mov
xchg
sub
lahf
mov
movsb
inc
mov
mov
ror
lods
push
in
sub
dec
andb
cmp
lds
mov
mov
sar
pushf
jns
lock
enter
mov
pusha
dec
cmp
jb
imul
inc
sarl
pop
mov
jno
sbb
and
mov
cmp
adc
into
add
rol
xchg
pop
push
cmpb
and
inc
pop
xorl
hlt
adc
jp
int
mov
add
dec
cmpsb
movsb
cmp
cmp
sarl
adc
inc
and
out
jle
xchg
rclb
sti
adc
out
aas
dec
ds
push
sbb
in
loope
xor
fdivs
data16
and
movsb
addb
jl
dec
ljmp
xor
pop
sbb
stc
push
cmp
mov
sub
lret
adc
cmp
js
mov
addr16
movsl
mov
push
arpl
das
ret
add
popa
add
neg
lods
or
jg
shrl
push
stos
imul
leave
mov
lods
fsubrp
and
iret
orb
loope
jae
mov
xchg
pop
shll
push
push
and
sub
ss
sti
flds
cmc
xchg
inc
and
dec
mov
int
pop
sar
adc
push
mov
lds
pop
or
mov
std
add
mov
mov
adc
push
and
jle
lods
adc
movsl
lea
or
insl
inc
testl
pop
cltd
arpl
cwtl
ss
mov
in
mov
rcll
inc
push
mov
cmp
mov
iret
mov
cmp
adc
scas
popf
xor
and
sbb
shrl
sti
xchg
into
mov
popa
stos
movsb
pop
xor
addr16
imul
sub
ds
push
aam
in
aas
dec
and
out
scas
xchg
stos
repnz
in
sbb
pop
push
sbb
xor
mov
loop
pop
push
jns
stos
lcall
xchg
fs
xchg
sbb
lahf
push
xchg
insb
mov
repz
inc
and
dec
loopne
xchg
jp
popf
cmpsl
ficoml
and
daa
nopl
lahf
xor
adc
outsb
imul
movsb
add
push
push
jb
addl
mov
or
add
sbb
add
repz
movsl
xor
adc
out
movsl
adc
filds
shll
out
mov
adc
adcl
mov
xor
testb
ret
mov
push
jg
dec
mov
roll
or
cmp
add
leave
gs
outsb
inc
cmp
or
cmp
decl
mulb
or
ljmp
inc
cmp
test
inc
sub
inc
loope
std
adc
aam
mov
bnd
sub
daa
add
mov
fcmovne
repnz
pop
cld
lods
jmp
mov
stos
cltd
push
int
lods
popf
sbb
jecxz
xchg
into
add
sbb
xchg
jb
addl
jp
mov
sbb
lods
gs
aam
sbb
xor
sbbl
jnp
sti
push
xchg
mov
aaa
inc
mov
cli
or
xor
decl
cmp
mov
mov
inc
or
cmp
sub
xchg
push
aaa
pop
cmp
jp
cmp
in
shl
push
mov
loop
jg
loope
int
adc
jle
cld
jns
out
xor
adc
jnp
test
sar
mov
xor
push
idivl
dec
loop
mov
stos
test
out
loope
jb
mov
int
add
jbe
jno
cs
popf
push
enter
and
data16
lahf
jl
test
sbb
jle
xchg
pusha
mov
insl
pop
js
push
pop
and
push
sub
ljmp
popa
fstpt
and
insl
sub
pop
jbe
popa
xchg
cmp
dec
call
leave
out
push
leave
fldln2
cmp
ret
mov
stc
test
out
xchg
dec
iret
inc
popl
push
movsb
into
dec
adc
sub
push
mov
dec
or
imul
inc
and
insl
xchg
cmp
ret
notl
push
rclw
lea
xor
fs
sbb
out
cmp
dec
or
jb
inc
push
ds
shll
pop
test
sub
mov
mov
push
jb
sar
cld
test
les
stos
pop
test
push
ret
mov
push
push
sub
lret
loope
mov
mov
je
cmp
mov
jmp
cmpsl
js
lcall
test
pushf
data16
push
mov
jnp
sbb
inc
das
addr16
add
mov
cmp
pushf
dec
jno
push
es
scas
mov
popf
xchg
jnp
lcall
outsb
mov
pop
add
hlt
cmp
inc
add
notl
push
xlat
xchg
dec
repz
insb
dec
call
jno
sarl
inc
mov
lods
adc
mov
sub
mov
xor
mov
dec
xlat
sub
inc
mov
insl
divl
dec
sub
pop
mov
lods
dec
ret
pusha
and
adc
out
xor
mov
mov
leave
gs
scas
ret
push
and
sbb
enter
dec
add
jmp
shrl
dec
mov
or
scas
dec
or
mov
adc
in
push
rcr
and
dec
push
push
shll
lods
cmp
mov
mov
mov
shll
inc
rcrb
mov
rcrl
lods
lods
dec
lds
jle
mov
sbb
mov
fnsave
mov
or
scas
mov
jbe
push
pushf
pop
jb
loope
in
std
dec
outsb
lock
int
push
shrl
pusha
test
clc
pop
mov
push
lods
inc
jp
adc
pop
and
or
lea
int
js
stc
jns
inc
inc
dec
or
add
stc
leave
dec
sub
mov
xor
xchg
flds
push
icebp
and
jae
insb
push
add
sub
outsb
dec
push
test
lret
jge
sub
inc
rorl
or
inc
cmpsb
inc
pop
outsb
out
rolb
mov
sub
adc
int
mov
xchg
mov
dec
popl
in
flds
or
jp
dec
push
dec
mov
lea
fidivrs
ret
popf
insl
inc
xchg
fstpt
sub
adc
add
fisubl
add
in
xchg
sbb
inc
clc
mov
xchg
out
add
xchg
ret
ret
push
xor
std
les
orl
xchg
and
subb
ret
std
std
add
mov
mov
roll
pop
rolb
mov
push
inc
adc
xchg
rolb
scas
mov
xor
dec
xchg
rcrl
sarb
xchg
and
mov
lock
movsl
sub
aaa
ret
fisttpll
and
inc
test
dec
rorb
sti
or
dec
push
xor
stos
sbb
mov
orb
jg
fimull
outsb
orb
movsl
sub
sar
cmpsb
ficomps
aaa
dec
leave
sbb
adc
push
sahf
out
push
int3
adc
sub
ret
flds
shll
out
and
imul
ss
pop
mov
sub
adc
push
in
mov
sub
dec
mov
rdmsr
mov
out
mov
loop
shlb
xor
mov
xor
xchg
sahf
pop
int3
xor
dec
sub
mov
repz
mov
or
js
mov
jecxz
rclb
loop
inc
lods
jns
nop
mov
xchg
lods
test
sahf
inc
nop
in
xchg
pushw
dec
add
lods
push
dec
xor
mov
and
xchg
and
mov
cmpsb
out
xor
shll
shll
inc
subl
pushf
out
std
into
push
inc
push
nop
pop
xchg
mov
mov
rcr
fndisi(8087
lret
stc
lock
and
pop
dec
pusha
sub
test
jb
cmp
out
rclb
push
jae
inc
inc
jg
mov
stc
in
dec
popf
or
jmp
xchg
mov
cwtl
or
subb
adc
jecxz
or
inc
mov
fnstsw
mov
or
fmul
push
sbb
fadds
dec
mov
add
mov
hlt
dec
mov
push
pop
lret
mov
mov
mov
inc
out
jge
cmp
jb
cli
sbb
mov
dec
les
fadd
mov
cmp
arpl
shll
enter
pop
push
jb
repz
mov
adc
dec
sbb
mov
xchg
ficoms
push
gs
out
fimuls
scas
lret
sbb
push
cmpb
lods
repz
dec
mov
jle
sti
int
cmp
mov
outsb
mov
jns
mov
int
or
jmp
mov
mov
scas
mov
lods
orl
out
popa
mov
push
div
mov
ret
xor
xor
leave
sbbb
subl
jp
lods
xchg
lods
lea
jns
sarb
pop
repz
xchg
adc
dec
dec
cs
mov
adc
mov
and
scas
mov
scas
xchg
inc
xchg
ffree
test
ret
adc
mov
test
scas
dec
mov
push
add
int
pushf
or
int3
rolb
or
mov
notb
pop
lret
push
push
inc
mov
adc
add
mov
dec
cwtl
or
xchg
into
scas
xor
jmp
cmpsl
fcompl
test
mov
je
xchg
rcll
mov
shl
insl
das
inc
sbb
or
cmc
outsb
ficomps
inc
scas
outsb
ja
ss
push
cltd
pop
cs
xchg
ljmp
jns
jmp
inc
pop
repz
repz
enter
adc
insl
rclb
adc
cmp
mov
ret
push
push
js
dec
adc
test
loope
inc
dec
xchg
lods
dec
jae
fbld
and
or
xchg
push
adc
inc
test
add
xchg
stc
push
cmc
lds
and
pop
dec
xchg
sub
dec
js
sub
dec
pop
cmpsl
inc
add
jmp
xchg
dec
or
cmp
and
test
loopne
fwait
dec
fsubrp
pop
xor
mov
xchg
xchg
push
mov
push
inc
out
jmp
dec
xchg
mov
test
rorl
jo
xchg
dec
xchg
sbb
mov
push
mov
jg
fistl
xchg
xchg
push
loope
xchg
mov
and
rcrb
mov
cmp
roll
out
imul
fisubl
dec
xor
dec
andl
xor
push
or
std
sbb
xor
sub
lods
mov
jg
pop
ljmp
int
aaa
xchg
xor
mov
fbstp
jge
add
in
jg
jle
aad
dec
adc
dec
dec
call
push
adc
pop
stos
fsubrl
lahf
out
xchg
daa
jno
jb
mov
mov
scas
push
jg
mov
pop
xchg
mov
clc
push
inc
pop
lret
xchg
fcoml
scas
dec
clc
nop
xchg
inc
bound
dec
shll
and
or
mov
sbb
test
sbb
lock
rcrb
inc
fcmovnbe
shr
inc
les
ljmp
adc
adcb
add
sub
mov
iret
adc
pop
imul
scas
imul
jecxz
jb
jns
mov
xchg
xchg
adc
ficompl
cmp
call
into
dec
xchg
push
dec
xchg
inc
clc
loopne
out
fwait
dec
push
shll
xchg
out
int
sub
testb
jne
pusha
pushf
out
sahf
pop
xchg
mov
aaa
add
mov
movsl
js
jne
sub
mov
xor
jecxz
mov
jnp
mov
mov
mov
push
xlat
and
lock
mov
adc
inc
sbb
fdivp
cmpsb
ret
shll
jo
stos
cmp
jo
dec
daa
pushf
or
roll
cmp
mov
mov
cs
mov
int
xor
leave
sub
inc
dec
mov
jge
push
fsts
paddw
ret
out
rorl
mov
rcrl
push
stos
cmc
add
or
mov
add
mov
jns
stos
push
jb
mov
dec
push
jle
dec
inc
pop
sahf
ret
mov
jmp
sub
xor
add
inc
sarb
adc
ret
dec
idivb
xchg
push
mov
mov
iret
push
push
testb
xor
addr16
sarl
cmp
daa
jmp
mov
cmpsb
inc
xchg
pop
mov
ret
leave
inc
mov
and
jne
mov
mov
lahf
add
lcall
scas
sbb
inc
pop
xchg
rcll
lods
add
xchg
mov
enter
out
jg
jmp
aad
std
jns
cs
adc
fsubrl
icebp
or
add
jecxz
nop
xchg
das
mov
roll
push
cmp
xchg
outsb
push
mov
lds
dec
adc
dec
mov
into
push
jns
aas
jnp
popf
aad
int
mov
jecxz
xor
dec
lock
bound
jno,pn
stos
fucomi
sbbb
movsb
mov
sub
push
int
clc
push
jg
dec
shlb
into
int3
dec
push
inc
lea
sbb
sub
inc
inc
sbb
push
lds
mov
mov
movsl
fsubl
xchg
mov
pop
shlb
rorb
cmp
mov
inc
pop
add
dec
add
testl
push
shrl
add
andl
iret
mov
inc
outsl
mov
stos
hlt
xchg
out
mov
sbb
or
test
jns
data16
sahf
dec
stc
pop
push
fisubrs
sub
pop
insl
mov
inc
or
ret
lret
sbb
sbb
xor
dec
or
mov
mov
dec
imul
jg
arpl
dec
mov
loop
push
jb
xchg
mov
pop
imul
sub
sbb
lahf
or
cli
sahf
insl
sub
dec
push
out
mov
dec
mov
push
mov
and
roll
iret
test
xchg
inc
adc
xor
popa
xor
and
fchs
mov
test
outsl
dec
repz
mov
dec
mov
xlat
roll
movsb
jo
mov
nopl
mov
adc
in
icebp
and
aad
push
loopne
fadd
aam
sahf
and
ja
mov
jo
mov
jge
jne
int
pop
add
dec
test
adc
jle
add
bound
je
call
mull
push
or
xchg
call
ret
sub
mov
push
pop
loopne
ds
imul
push
cmp
leave
inc
add
sub
or
push
and
xor
xchg
rcll
int3
push
jl
test
xor
cmp
pop
push
or
int3
movsl
dec
or
jg
or
xor
xor
dec
mov
rcrl
lods
mov
fmull
arpl
jg
xor
mov
xor
inc
hlt
bound
add
shll
dec
jl
xchg
aad
xchg
sbb
or
xchg
xchg
pusha
fistpl
mov
xor
shrl
sub
adc
xchg
scas
arpl
fcomps
repnz
push
add
stos
stc
jp
push
mov
cvttps2pi
sbb
inc
xchg
push
lods
pop
lock
sub
mov
int
in
inc
mov
dec
xchg
pop
rcr
ss
dec
hlt
out
push
pop
xor
call
cmp
iret
mov
pop
lods
mov
push
jp
mov
int3
and
scas
jbe
push
inc
outsl
jmp
ret
pop
sar
xchg
sub
cmp
pop
push
test
sarl
in
add
test
mov
push
fisubl
or
loope
loop
inc
jge
mov
cmpsb
dec
in
dec
daa
mov
xchg
rcll
add
mov
xchg
push
cmpsb
adc
sahf
xchg
pop
ds
jmp
mov
les
push
call
add
xor
xor
or
mov
ljmp
andb
jno
jne
mov
int
aam
dec
fsubl
movsl
mov
jmp
lds
in
xor
and
mov
mov
ret
in
inc
inc
ret
enter
popa
pop
push
scas
dec
cmc
aas
push
rol
std
aaa
pop
std
add
and
dec
cmpsb
xchg
clc
insb
push
nop
xor
pop
enter
pop
add
int
leave
fwait
push
or
pop
mov
sbb
pop
lods
icebp
or
mov
or
fnstenv
or
add
add
dec
mov
dec
aad
nop
inc
lods
icebp
add
inc
add
sahf
int
xchg
imul
or
popf
ror
xor
xchg
push
lret
mov
inc
pushl
push
addr16
or
inc
pop
and
dec
lea
add
xor
sahf
xor
inc
std
mov
jnp
or
adc
push
inc
jmp
clc
cmp
rcll
adc
sub
add
add
xor
dec
sbb
push
pop
andb
pop
je
shrb
cmp
dec
push
pop
test
pop
xor
sub
inc
dec
adc
fcomi
mov
xchg
stos
xor
adc
outsl
lock
or
int
into
inc
xchg
movsl
jp
dec
xor
out
test
fmull
in
mov
mov
xchg
movnti
ret
pushf
xchg
bound
es
mov
loopne
in
nop
cmp
cmp
mov
shl
inc
jae
mov
gs
inc
int
xchg
ljmp
sub
xchg
fucom
xchg
dec
xor
gs
hlt
out
sbb
into
int
lcall
sub
das
cli
inc
pop
push
roll
mov
lods
dec
sub
lret
daa
cmp
repnz
call
cli
xlat
lods
out
lahf
sub
mov
inc
pop
addr16
xor
pop
adc
xor
or
pop
mov
push
insb
mov
dec
inc
sub
pusha
xchg
adc
mov
push
xchg
cmp
inc
fsubl
aas
cmpsl
loopne
inc
mov
mov
mov
inc
stc
outsb
fs
adc
dec
mov
inc
ret
aam
test
adc
cwtl
icebp
push
sete
xchg
nop
lcall
icebp
jb
mov
fcom
or
xchg
insl
icebp
mov
dec
ret
es
add
int
xchg
adc
xor
outsl
mov
xor
jnp
lods
sub
xor
and
adc
ss
jge
outsl
or
pop
and
mov
fnstenv
mov
adc
mov
and
mov
mov
jle
scas
or
ret
add
andb
insl
dec
xor
pop
push
push
stos
jg
jb
xchg
movsb
adc
lods
scas
fnsave
dec
out
cltd
imul
popf
sub
mov
push
jge
lret
ret
inc
pop
jmp
jecxz
push
mov
sarl
cltd
cltd
push
nop
mov
idivb
scas
jmp
nop
fiaddl
fidivl
loop
pop
jbe
adc
jge
rcll
stc
ficoms
add
mov
cmp
dec
popa
mov
mov
sahf
rcll
and
andb
xor
mov
stos
inc
clc
into
sub
out
cmp
or
dec
out
dec
fmuls
jno
ljmp
aaa
xor
pop
mov
mov
lock
notb
fldl
mov
mov
shlb
add
mov
mov
gs
fs
sbb
xor
sbb
add
outsb
add
cli
dec
sahf
mov
xchg
or
lret
dec
ljmp
add
cmpsl
xchg
lea
jecxz
gs
fistpll
es
imul
int
sti
orb
jno
inc
push
xchg
lods
mov
push
pop
dec
pop
mov
mov
gs
fldlg2
dec
or
lds
xor
hlt
xchg
lds
cld
inc
fisubl
in
aas
pop
jo
jbe
mov
lcall
andb
adc
shl
xor
leave
inc
fdivl
push
imul
outsl
jns
and
jno
dec
ret
adc
pop
roll
inc
mov
nop
xchg
mov
mov
fmull
push
mov
jp
vpsllq
jnp
aam
nop
or
lods
jo
jno
js
mov
add
gs
adc
rorb
pusha
fcmovnb
negb
mov
xchg
add
mov
inc
int3
jbe
popa
push
xor
sbb
pop
sbb
mov
jecxz
or
cmpb
sbb
inc
add
js
push
sbb
pop
fisttpll
movb
xor
cs
push
les
push
imul
inc
dec
xchg
push
inc
pop
lea
xchg
inc
pop
push
mov
dec
inc
out
mov
ret
dec
xor
add
outsb
adc
scas
mov
dec
jno
inc
cmp
mov
dec
test
add
shl
test
inc
add
mov
jp
push
xchg
or
push
xchg
push
rcrb
pmaxsw
orl
cmp
jae
inc
es
sub
in
roll
push
mov
mov
push
je
cld
dec
pop
mov
outsb
cli
scas
repnz
mov
in
aad
shlb
mov
and
cs
clc
cmp
cmp
jb
int3
test
insb
xchg
jns
dec
xor
rorb
lret
dec
mov
rorb
sti
rol
add
add
push
mov
push
adc
mov
lds
mov
test
inc
or
outsb
add
test
inc
mov
mov
sub
adc
dec
add
push
mov
mov
test
sub
dec
jne
inc
cmc
jl
ss
jmp
mov
or
pop
rcrl
jnp
jnp
loop
push
mov
int
inc
mov
aaa
sub
inc
clc
nop
pop
add
sahf
enter
fs
sub
jecxz
adc
mov
dec
enter
mov
mov
aad
cmp
mov
les
scas
pop
jno
dec
leave
lods
out
mov
out
pop
fmuls
mov
mov
movsb
mov
shrl
inc
inc
pop
pop
inc
sub
mov
pop
mov
add
mov
or
mov
pop
lds
test
sahf
ret
mov
adc
push
mov
nop
lds
adc
inc
test
scas
fwait
dec
mov
addr16
shrb
fcompl
mov
xor
out
ret
add
test
xchg
jp
xor
fcompl
lret
cmp
pop
cmpsb
add
ret
xlat
mov
loopne
mov
addl
lods
xor
add
faddl
or
mull
shr
mov
inc
push
pop
push
out
xor
loopne
es
lods
test
xor
mov
addb
adc
enter
aas
ret
add
psubsb
rolb
movsb
daa
mov
adc
dec
inc
cmp
adcb
pop
mov
scas
or
fidivl
in
xor
cld
mov
xchg
and
cmpsl
shll
xchg
jmp
push
loope
jge
loop
out
push
cmp
sub
dec
pop
movsb
pop
push
xor
sti
arpl
mov
scas
insl
push
nop
ds
mov
daa
mov
sub
jae
cltd
cmp
push
jl
mov
add
and
push
jl
repz
mov
aad
roll
mov
mul
jp
cmp
mov
nop
cmpb
fsubl
lcall
in
xor
mov
xor
data16
inc
xor
adc
jbe
pop
push
inc
fisubs
push
aad
mov
cmovge
repnz
mov
ret
xor
out
test
sahf
xchg
dec
out
pop
adc
and
fnstcw
jne
stos
in
aas
adc
insl
inc
inc
jnp
fildll
and
xlat
xchg
hlt
xor
inc
mov
addr16
scas
out
pop
aas
call
fmull
jbe,pt
test
adc
and
jle
mov
add
das
pop
rol
inc
dec
mov
hlt
push
out
inc
shrb
jp
pop
inc
mov
pop
sbb
mov
mov
mov
and
add
mov
mov
and
cltd
imul
or
jae
mov
in
jno
pop
pop
pop
inc
push
movsb
repnz
repnz
adc
xchg
test
sbb
cmp
sbb
push
scas
test
sbb
popa
fiadds
jl
jecxz,pt
xor
xchg
in
shll
mov
add
mov
fwait
rorl
fisttpl
push
or
mov
or
push
xor
shlb
daa
and
lcall
mov
sbb
push
dec
xor
adc
inc
loop
mov
jbe
push
ror
addr16
rclb
aaa
mov
enter
loop
outsb
dec
enter
push
dec
dec
mov
jmp
xchg
inc
xchg
ss
mov
sahf
xchg
rcrl
cmp
jne
sbb
ret
inc
lahf
je
xchg
dec
repz
addl
sub
fdivl
xlat
xchg
dec
push
mov
in
movsl
mov
inc
out
inc
iret
push
xchg
ret
loopne
pushf
mov
rcrl
lea
mov
test
mov
push
inc
adc
rorl
push
jns
shrl
xchg
jbe
mov
add
adc
xchg
or
mov
lods
or
test
daa
and
pop
mov
lea
mov
fidivl
cmp
hlt
enter
xor
add
dec
test
jmp
sub
repz
mov
push
xchg
fsubrs
push
daa
cmp
xchg
jnp
mov
dec
adc
sub
dec
loope
inc
jbe
add
roll
pop
fcmovbe
test
sub
xchg
dec
inc
add
mov
iret
lods
jno
insl
sub
or
jecxz
jle,pt
jno
pop
adc
insl
call
outsb
push
rorb
sub
fistpll
dec
jecxz
xchg
mov
jp
push
sub
sub
mov
lds
inc
in
roll
lds
rolb
xor
movsb
mov
dec
jae
push
inc
inc
leave
ss
mov
add
jle
out
jns
ror
sub
pop
pop
sar
cmp
imul
iret
hlt
xor
pop
js
push
cwtl
xlat
shll
call
xchg
xlat
movsb
add
mov
xchg
add
push
in
stos
mov
mov
jo
cmpsl
dec
mov
mov
cmc
push
push
pusha
insb
or
push
fnstcw
rolb
adc
dec
or
outsb
add
xchg
mov
cmp
jnp
sbb
jns
lods
insl
dec
add
mov
mov
lods
test
mov
test
rcrb
cmp
sub
jo
pop
xor
repz
pop
mov
fdivrs
jnp
roll
mov
adc
adcb
out
push
adc
sub
mov
aas
sub
imul
cld
mov
and
and
clc
adc
mov
or
xchg
xor
cmp
lret
xor
orb
xchg
mov
sub
and
rep
mov
ja
in
and
push
stc
mov
test
lods
dec
insl
cmp
adc
call
adc
mov
push
jp
test
loopne
mov
repz
xchg
sahf
adc
mov
mov
xchg
pop
ret
fmull
cmpsb
xor
inc
push
mov
jae
cwtl
int
insb
out
pop
xchg
sar
and
mov
outsb
xchg
mov
mov
les
rorb
adc
hlt
adc
sarb
aaa
xor
repz
mov
lahf
stos
scas
and
inc
rep
es
adc
shl
xchg
cmp
ret
xchg
mov
cmp
test
inc
std
adc
push
fidivs
aaa
out
dec
scas
inc
mov
lret
popa
push
jle
ljmp
lahf
lock
sbb
and
in
mov
dec
mov
fldenv
mov
loope
mov
and
mov
dec
mov
test
pusha
xor
fs
es
cmpl
pop
adc
add
mov
inc
rclb
fisubl
or
push
inc
or
mov
xchg
repz
in
mov
sahf
cmp
lea
push
pop
out
xchg
je
cmp
cmp
pop
and
jecxz
mov
fwait
pop
cmp
test
sbb
xchg
stos
jne
push
sub
out
xor
push
divb
lret
mov
pusha
int3
mov
xorb
xor
pop
cli
dec
stos
out
imul
push
popf
test
mov
jle
or
test
xor
pop
xchg
inc
add
dec
mov
pop
lock
adc
mov
mov
pop
clc
xor
mov
inc
mov
xchg
dec
mov
sahf
mov
mov
mov
xchg
sar
int3
clc
dec
xchg
mov
dec
inc
into
lods
cs
outsb
xchg
mov
popf
inc
push
mov
inc
mov
xchg
into
popf
jp
in
dec
inc
cmpsb
mov
mov
dec
mov
jge
out
rcrl
and
push
insl
int
les
push
sbb
out
lret
mov
outsb
adcb
jp
cwtl
loope
jl
shl
insl
cmc
push
xor
mov
cmc
or
pop
and
lcall
push
mov
lahf
jp
nop
rdtsc
inc
clc
dec
sarb
cmp
and
addr16
mov
in
loope
inc
std
adc
mov
pop
add
psrlq
stos
push
cltd
cwtl
cmc
inc
jno
repnz
add
inc
pop
add
shrl
sub
add
mov
mov
fs
dec
dec
adc
xor
stos
fldt
pop
sbb
ja
ret
mov
aaa
or
scas
insl
imul
inc
add
mov
rcll
push
pushf
fmull
jo
scas
jg
jg
mov
insl
cmpb
ret
addr16
in
mov
cli
xchg
xchg
push
jno
jecxz
dec
dec
inc
cmp
sbb
adc
je
dec
lret
out
jb
rcrl
repz
stos
rolb
popf
xchg
pop
xchg
test
jno
mov
xchg
mov
push
decb
push
adc
subb
mov
dec
in
inc
pop
mov
mov
mov
and
and
xor
mov
int
or
xchg
xor
mov
xor
adc
add
add
inc
test
stc
sbb
pop
scas
pop
notb
xchg
inc
jnp
adc
mov
adc
test
popa
cmp
mov
icebp
xor
aaa
inc
enter
ljmp
xchg
and
pop
adc
and
cmpsb
cmp
sbbl
xchg
adcl
jp
out
sub
pop
sbbl
insl
sub
cwtl
in
jp
adc
or
out
scas
dec
movsl
jo
ja
and
insb
push
jp
in
test
mov
inc
mov
inc
hlt
addl
xor
add
cmpsl
dec
loopne
loope
icebp
and
cmp
imul
adc
sbb
or
mov
mov
add
es
push
outsl
and
mov
dec
gs
sbb
push
add
cwtl
mov
andl
hlt
adc
add
and
add
pusha
shll
aad
sbb
xor
xchg
sbb
ret
pop
jne
ds
sub
lret
xabort
lret
or
add
ds
sbb
cld
je
inc
fsubs
repnz
push
out
mov
out
mov
clc
adc
mov
out
icebp
sbbb
jl
cmp
cmp
xchg
inc
xor
mov
xor
sub
int
sub
stos
sbb
sarb
loop
idiv
cltd
xor
push
push
mov
lahf
mov
jb
or
std
xchg
outsb
lds
xor
data16
mov
mov
rclb
inc
sub
cmc
sti
clc
mov
sahf
movsl
pushf
inc
xchg
jb
lods
xchg
faddl
test
add
jns
sub
icebp
inc
imul
rolb
sti
mov
adc
xchg
gs
scas
sbb
out
jl
push
jne
shl
test
add
arpl
es
mov
aas
ljmp
mov
in
daa
add
dec
sbb
out
mov
cwtl
lcall
mov
ja
mov
addr16
and
lock
push
jns
xchg
leave
insl
xchg
sarb
mov
push
addr16
fcmovu
fldcw
loope
dec
mov
push
cmp
lds
movsb
cmp
push
push
xor
xchg
inc
jg
jbe
int
push
scas
mov
int
mov
out
jns
fldl
push
dec
xchg
xor
cltd
adc
add
inc
jmp
cwtl
mov
xor
mov
add
leave
arpl
sub
ret
or
nop
testb
shl
pusha
push
scas
sub
cltd
in
rorl
and
les
insl
lock
loope
outsb
mov
dec
adc
jae
out
push
jmp
leave
sub
lods
iret
cmp
xorl
mov
lret
loope
lods
inc
inc
ds
add
add
xor
pop
out
inc
xchg
mov
xor
and
jge
push
fbld
insl
adc
inc
jno
iret
add
push
sahf
adc
mov
mov
push
test
gs
loopne
insb
les
xchg
stc
fstpl
sbb
rcr
inc
das
pop
mov
in
jb
dec
mov
sbb
cld
sbb
sti
or
inc
fisubrs
imul
jp
or
sub
cmp
sub
inc
std
or
movsb
mov
xor
scas
mov
xorb
cmp
imull
sub
adc
in
cs
sbb
mov
adc
gs
and
pop
aaa
dec
into
or
shl
lcall
leave
scas
mov
and
xor
sub
sarl
push
xchg
scas
in
mov
or
popf
pop
cmp
cmc
sub
mov
dec
dec
dec
or
aas
push
push
scas
in
leave
data16
loop
mov
sub
sti
sub
and
lret
xchg
xchg
outsb
and
dec
xchg
rclb
sbb
adc
or
push
in
nop
pushf
js
pop
rorl
and
sti
mov
lcall
addr16
push
inc
movl
scas
ds
lea
adc
js
xorl
pop
test
inc
push
pop
loop
out
sbb
test
cmc
jmp
jle
xchg
mull
add
push
mov
movsl
js
test
mov
cmp
call
pop
or
outsb
jg
das
sti
add
push
int3
pop
mov
sti
nop
and
cmp
xchg
daa
push
roll
jne
out
add
scas
idivl
add
imul
mov
jg
pusha
or
or
jecxz
mov
add
nop
popa
mov
xchg
loop
outsb
dec
sahf
int
lret
dec
mov
js
out
out
lret
xor
xchg
mov
and
push
mov
jb
jg
sbb
call
and
movsl
ljmp
data16
jno
adc
pushf
pop
in
dec
xor
jle
orb
fsubrp
mov
incb
jle
xchg
out
jb
out
mov
cmp
or
jns
inc
push
jo
adc
repnz
mov
adc
lahf
dec
mov
pop
in
sub
test
jmp
mov
dec
inc
call
cwtl
scas
pop
sbbl
loop
jle
popa
inc
cmpsl
lcall
push
pop
sub
data16
push
push
adc
inc
popf
push
inc
xchg
dec
sub
into
popf
subb
cmp
xchg
mov
xorb
les
dec
cmp
shll
jp
test
jmp
outsb
sarl
pop
inc
and
jne
xor
cs
inc
cmp
xchg
loope
or
cmp
xor
cmp
repnz
pop
cs
jecxz
jb
imul
arpl
inc
test
rol
scas
movb
cmp
shrl
inc
imul
fidivrs
lret
cs
ror
loopne
in
dec
xor
fidivs
sbb
adc
lret
fsubrl
pop
cmp
xchg
out
push
jae
popa
xor
sub
and
cmp
mov
les
or
mov
mov
sbbb
loop
or
out
jecxz
mov
push
fldl
inc
mov
test
push
mov
mov
adcl
loopne
movb
inc
jp
push
out
jbe
jno
insl
int
mov
hlt
dec
inc
mov
test
mov
mov
fwait
inc
dec
inc
add
dec
adc
mov
jo
mov
or
or
and
jns
roll
or
stc
mov
sbb
cmpsl
imul
lret
lret
or
fcmovbe
and
push
out
insl
mov
rclb
inc
loope
mov
lods
loopne
call
xchg
mov
sbb
adc
dec
inc
pusha
jl
mov
xor
cltd
adc
ds
inc
xor
inc
mov
scas
add
adc
mov
ds
rcpps
adc
xlat
xorl
xor
mov
add
mov
inc
mov
or
lret
sahf
orl
sub
cmpsl
dec
push
nop
jns
dec
test
test
inc
dec
ja
xor
pop
lea
dec
mov
xor
mov
dec
rcll
or
dec
or
sub
cmp
out
add
sbb
adc
test
es
scas
ljmp
xor
lods
mov
sub
enter
pop
cmp
or
add
bound
inc
adc
pop
inc
mov
aas
adc
in
xchg
push
add
roll
jns
icebp
jg
lds
in
aam
pop
mov
inc
cmp
sub
js
repnz
add
popa
popa
shll
cmp
xor
xchg
inc
mov
mov
aaa
andb
xchg
mov
in
in
mov
addr16
push
mov
addl
jo
inc
in
fisubrl
cmpsl
sub
or
inc
repz
inc
jae
sbb
push
or
test
mov
lds
push
mov
ret
lcall
xchg
outsl
mov
fldl
mov
loope
das
ret
loopne
mov
les
push
jbe
clc
pop
pop
sbb
aad
mov
inc
pop
add
or
mov
fisttps
or
cmp
inc
ss
sub
jp
or
je
jp
jnp
push
fmull
scas
cmp
ret
xchg
das
push
sub
lods
pop
jno
or
mov
icebp
shlb
fistpl
fdivp
rorl
add
xchg
pop
xchg
jno
iret
xor
xlat
mov
sub
std
inc
inc
ret
sub
xchg
icebp
fsubp
add
loope
out
es
mov
xor
push
popa
adc
jne
dec
push
or
enter
cmp
push
out
test
jmp
and
test
enter
lret
xchg
dec
dec
fisttpl
and
icebp
xchg
je
xchg
cltd
and
movl
pushf
notb
push
ficomps
ret
and
inc
call
add
mov
mov
xor
inc
dec
inc
pop
xchg
movsl
jmp
outsl
add
push
pop
stc
mov
pusha
inc
sub
or
adc
les
push
fmuls
int3
mov
jge
fistl
mov
nop
test
mov
ficomps
push
pop
push
inc
rorb
popa
sbb
cmp
inc
xchg
sbb
imul
push
xor
mov
pop
xchg
out
cwtl
fmull
xor
sbb
popf
adc
leave
repz
das
stos
pop
mov
pop
popf
dec
mov
mov
pop
push
leave
mov
outsb
jno
int
inc
dec
sti
xor
dec
dec
adc
adcb
adc
and
mov
jns
mov
mov
push
ret
int
add
cmpb
lea
aam
into
sbb
or
and
jecxz
sub
mov
in
dec
loop
dec
adc
sbb
jge
stos
in
mov
es
pop
inc
test
out
cmovae
jmp
test
push
imulb
lahf
jle
test
cmpl
clc
imul
ljmp
xor
jecxz
mov
neg
sbb
rorl
xchg
or
jmp
das
inc
pop
sub
in
xchg
cmpsb
lods
push
add
inc
add
rorl
jmp
mov
add
ror
insl
inc
out
cs
cmpsl
push
sahf
imul
popa
int
or
xor
roll
mov
add
aad
jmp
sbbl
or
cld
stos
call
mov
xor
fisttpl
data16
push
fs
inc
ljmp
mov
adc
pop
jb
mov
popa
cwtl
and
cmpsb
jno
dec
jecxz
pusha
bswap
inc
and
mov
fistpl
mov
mov
mov
and
inc
loope
mov
sarb
inc
xor
jnp
in
push
jle
int
rol
test
sahf
lods
popf
negb
inc
mov
jns
lock
jp
inc
xchg
sub
out
sbb
addr16
aam
inc
call
mov
cmpsb
inc
jb
fcoml
dec
inc
push
ret
sub
sahf
mov
xchg
leave
mov
ret
sarl
jb
call
inc
adc
jae
sbb
cmp
add
shlb
inc
mov
pushf
sbb
ret
insl
pop
test
pop
insb
mov
repz
xchg
and
jbe
ss
leave
decb
cmp
fst
ror
js
push
cmp
rorb
into
dec
add
out
fst
loope
shll
data16
in
mov
mov
mov
int3
rcrb
sbb
jg
in
je
xchg
mov
dec
inc
roll
mov
cmp
cmp
filds
pop
nop
test
rolb
mov
ret
sbb
mov
xchg
mov
shll
xchg
push
inc
popa
mov
pop
sahf
out
inc
push
xor
cmp
add
into
add
addl
into
xor
xorb
ret
fadd
shl
mov
addr16
fcmovne
sbb
mov
mov
and
pop
repz
push
push
push
jnp
xor
aas
int3
enter
insl
xchg
push
jmp
cmp
add
dec
mov
mov
mov
pop
mov
lea
inc
mov
xchg
mov
into
inc
fwait
in
and
mov
jno
push
jge
or
jae
pop
std
sbb
in
cli
rorl
xor
mov
dec
cs
mov
fsubrs
dec
fisubl
mov
mov
dec
rcrb
rcll
ret
jne
int3
push
dec
dec
pop
push
cmpsb
dec
sub
stos
iret
jnp
cmp
or
or
jns
dec
xchg
scas
fimull
test
cmc
rcrb
stos
jp
out
xor
pop
mov
mov
xor
repz
inc
xlat
clc
adc
mov
adc
and
xchg
mov
mov
and
mov
or
push
cmp
ljmp
mov
add
pushf
fldl
cltd
dec
lret
mov
xchg
dec
decl
stc
pop
and
out
inc
int3
jle
loop
les
or
jp
lods
push
ljmp
mov
cmp
add
jae
jp
add
sub
les
jae
pop
lods
pop
fdivrs
pop
outsl
pop
scas
or
add
aad
cmp
outsl
daa
mov
das
idiv
mov
adc
pop
dec
push
or
xchg
jmp
push
ja
jecxz
shlb
pop
or
adc
mov
push
xchg
mov
adc
sahf
aaa
aaa
mov
mov
add
sahf
test
jmp
mov
xchg
fisttpl
lcall
test
fcompl
mov
pop
fcoml
imul
push
lods
sub
fsubl
mov
inc
sbb
mov
push
xchg
pop
inc
jae
cmp
dec
mov
or
push
add
popf
jg
decb
adc
mov
scas
mov
add
xchg
aam
pop
hlt
and
std
push
insl
mov
mov
inc
popa
xor
dec
jne
clc
xchg
pop
xor
xchg
insl
dec
outsl
ljmp
shlb
xchg
add
adc
and
xchg
push
mov
and
jae
mov
ficoms
mov
push
xchg
push
xor
ljmp
shlb
mov
add
push
ss
pxor
mov
cmp
xor
pop
mov
xchg
rcpps
sbb
adc
lcall
pop
xor
xchg
mov
pop
mov
xor
adc
xor
jmp
or
insl
pop
jnp
mov
cmpsb
inc
inc
jno
sub
pusha
push
mov
dec
cmc
cmp
subb
sarb
xor
iret
xchg
mov
dec
mov
xor
fcoml
jp
mov
test
xchg
mulb
fld
test
lods
test
jmp
aaa
and
iret
in
xchg
aad
mov
xchg
mov
out
mov
push
dec
or
inc
shrl
push
stc
dec
lock
outsb
dec
pop
or
xchg
push
loope
arpl
subb
cmp
test
push
call
fbld
xor
sbb
mov
jp
pop
mov
adc
lds
out
or
mov
cmp
cmp
test
or
mov
leave
in
pop
lods
shrl
sub
and
bound
rcl
daa
clc
ds
in
fcmovnb
in
pushaw
popf
pushf
cltd
popf
or
insl
add
or
movsb
imul
push
mov
in
sub
cmc
repz
test
mov
repz
jno
je
push
popf
push
add
xchg
inc
in
fmull
sub
xorb
inc
cltd
cmp
inc
inc
push
roll
mov
xchg
add
and
sbb
xchg
adc
xchg
and
xlat
lea
lods
rcll
loope
xchg
aam
dec
mov
xchg
clc
std
cmpsl
shlb
les
lock
aaa
cmp
mov
push
push
inc
push
outsl
into
into
jge
cmpsl
add
dec
add
data16
lods
dec
mov
mov
and
movsl
mov
fistl
cmp
rorl
xlat
in
add
out
push
add
xor
in
push
popa
sahf
xor
cltd
or
pushf
scas
fsubrl
and
cs
arpl
xchg
int3
pop
sub
das
cmp
jmp
mov
stc
nop
lds
jp
pop
xchg
mov
mov
cvtps2pd
cmc
das
mov
jno
pop
adc
jl
jmp
jae
loopne
push
pop
mov
cmpsb
xorl
cmp
inc
mov
aad
mov
mov
or
imul
pop
hlt
fcoml
or
jge
sbb
fldt
fildl
ds
sub
fwait
leave
adc
rolb
xor
fcoml
rcr
test
pop
adc
into
in
mov
ret
mov
inc
pop
inc
inc
lret
jge
mov
mov
lock
xchg
sbb
and
lahf
inc
cwtl
rorl
jno
jmp
mov
out
dec
xchg
pop
out
xchg
or
mov
mov
fstl
cwtl
add
int
inc
mov
in
mov
fstpl
add
insl
or
push
adc
test
add
push
jge
ret
pop
xchg
lcall
je
mov
sub
in
popl
lcall
rclb
jg
pop
ds
add
xchg
push
sbb
adc
sbb
inc
sub
cltd
pop
fnstsw
dec
insl
mov
test
cmc
pusha
jbe
adc
mov
enter
sbb
jge
popf
jle
xlat
cmpsl
mov
inc
imul
add
outsb
stos
scas
xor
out
ds
sbb
out
add
sub
test
mov
enter
stc
roll
xchg
add
stos
push
ret
pusha
mov
lock
inc
mull
pusha
jecxz
xchg
dec
push
adc
cmp
cmp
rclb
pop
loope
jae
mov
mov
mov
jne
dec
jns
jns
pusha
xchg
leave
cmp
jg
push
mov
outsl
add
pusha
mov
fsubp
jb
movsb
aam
rorl
movsl
lret
pop
inc
lret
pop
xchg
cmp
push
or
cmpsb
mov
loope
pop
dec
cltd
jmp
inc
aad
adc
cs
test
call
les
aam
mov
mov
pop
cmc
mov
add
lea
mov
mov
ret
pop
pop
fnstcw
in
inc
ret
js
stos
lds
daa
popa
roll
cli
and
stos
rolb
out
adc
and
cmpsl
jmp
test
adc
xchg
adc
popf
nop
push
xchg
inc
jg
aad
mov
pop
test
mov
mov
nop
mov
lea
out
add
mov
mov
jmp
push
in
inc
xchg
loope
dec
add
test
xor
arpl
jecxz
or
xchg
or
insl
xchg
aad
mov
lea
ljmp
mov
lods
cmpsl
jl
xchg
aam
xor
pop
insb
mov
or
mov
and
inc
adc
add
imul
movd
mov
jp
xlat
mov
adc
fmull
jle,pn
push
push
shll
jbe
mov
adc
call
jb
cmpsl
cmp
push
pop
push
fcmove
mov
mov
xchg
sub
inc
popa
pop
add
push
push
mov
lahf
add
mov
dec
lahf
dec
adc
lea
and
mov
cltd
rol
cld
insb
dec
mov
ret
mov
xchg
pop
and
jle
adc
and
out
ret
jmp
fldl
cmpsl
jecxz
pop
push
inc
in
lea
push
dec
xchg
sbb
mov
imul
imull
ficompl
mov
dec
add
jne
cmc
mov
push
push
add
movsl
dec
adc
movsl
xor
notb
jno
cltd
add
jp
add
shlb
imul
mov
mov
insl
adc
pop
les
mov
imull
cmp
pop
cmp
int
mov
or
orb
popa
add
mov
inc
jge
lods
int3
fwait
cld
jge
xor
pusha
loope
push
test
adc
pop
leave
add
xchg
cmc
mov
sbb
and
or
das
jno
xorb
pop
sub
jns
push
xor
dec
bound
enter
out
inc
mov
enter
jg
dec
and
lahf
jne
and
and
je
mov
outsb
shlb
adc
test
xchg
inc
addb
xlat
cmp
out
push
scas
ja
pop
mov
mov
adc
pop
hlt
xor
notb
mov
or
adc
hlt
enter
mov
fsubrl
pop
aam
or
adcb
leave
add
and
call
inc
xchg
icebp
xchg
aaa
sti
popa
xchg
mov
add
lods
and
jae
mov
lock
bswap
jnp
shl
pop
sbb
mov
inc
jbe
push
mov
popl
xchg
jl
mov
outsl
push
push
and
xchg
aad
sbb
adc
ljmp
jbe
test
adc
out
ja
pop
cmpsb
mov
lods
lods
sbb
hlt
jns
cmp
xlat
dec
std
in
mov
adc
dec
outsb
mov
jl
dec
popf
int
mov
xchg
sub
mov
sbb
mov
fmull
test
xor
loope
inc
pop
jae
lret
mov
inc
insl
inc
imulb
popl
arpl
popf
jle
xor
inc
push
mov
jge
mov
adc
jg
and
adc
sarb
popf
mov
add
push
pop
imul
out
lock
daa
cmp
push
out
int
mov
fidivrl
scas
lcall
inc
inc
mov
jmp
mov
pop
sbb
cld
ss
cmpsb
add
inc
shll
xor
fstpt
stos
testb
ficoml
addr16
insb
fsub
test
mov
cltd
xchg
cmp
frstor
mov
xchg
int
fdivs
pushf
push
lea
aad
cmp
std
sahf
imul
scas
sbb
ret
and
in
sub
roll
mov
inc
sbb
fisttpll
aam
cmpsl
xchg
mov
mov
lods
adc
nop
repz
fs
inc
out
sub
and
scas
pop
pop
fcmove
in
les
ds
dec
add
outsb
push
inc
xchg
adc
jmp
dec
sub
dec
insb
inc
sub
mov
int
jb
mov
and
in
cltd
jmp
hlt
xor
pop
out
std
mov
ds
xchg
dec
rcl
shll
fisubl
popf
add
dec
leave
pop
mov
dec
dec
push
push
pop
dec
sub
aas
movsl
js
xchg
sbb
dec
sbb
push
rcrl
lds
fcoms
inc
pop
in
test
mov
and
inc
roll
or
xchg
movl
dec
mov
lret
cmp
dec
fucomip
mov
mov
jg
lock
push
sbb
jge
cli
rcl
dec
movsl
adc
call
bound
pop
and
popf
aaa
dec
xchg
loope
ja
xor
xor
js
pop
xor
pushf
add
mov
cmp
pop
data16
mov
movsl
subl
icebp
movb
add
test
mov
push
push
sub
cmp
cld
cwtl
inc
in
dec
data16
repz
jb
push
int
aad
leave
lods
mov
push
inc
push
push
leave
lods
pop
int
pop
push
inc
dec
cs
pusha
jge
and
aaa
push
mov
xchg
bound
rcrl
fcmovbe
cs
push
add
mov
adc
insb
jnp
aad
inc
clc
aad
cmp
cmovb
aas
addr16
cmp
andb
sbb
nop
arpl
out
jnp
dec
lock
inc
cmp
cmp
mov
mov
adc
mov
dec
ficoms
dec
lea
dec
xorb
jno
jg
xlat
pusha
out
mov
jb
fs
jle
shlb
xchg
adc
mov
add
xor
xor
add
lods
push
insl
in
leave
push
sub
sbbw
push
cmp
adc
xchg
addr16
xor
sub
mov
mov
cmp
push
inc
into
xchg
dec
xchg
les
ret
cltd
xlat
sarl
xchg
mov
mov
sahf
movsl
add
popa
cmpb
inc
sub
jmp
outsb
ret
cltd
mov
movsl
adc
xchg
xchg
cmpb
jmp
xchg
xchg
xchg
nop
jmp
adc
inc
gs
cmp
and
dec
mov
mov
adc
xor
fcoml
mov
jg
mov
sub
bound
sti
xchg
pop
out
sbb
xlat
mov
inc
lods
stc
mov
pusha
push
and
mov
rclb
or
sbb
ret
test
dec
icebp
xchg
xor
adc
mov
mov
sub
cld
cmp
xorb
scas
mov
dec
lods
push
cmp
loopne
arpl
mov
xlat
jno
popf
test
xchg
mov
call
pop
hlt
clc
mov
xor
pop
cmp
adc
or
sbb
pusha
mov
aad
cld
mov
jg
push
lods
lods
mov
jb
and
dec
int
push
arpl
xor
or
lds
les
sbb
movb
icebp
mov
xchg
and
lods
sbb
or
and
push
daa
inc
test
dec
xchg
fdivl
and
fidivs
popf
popf
popf
jbe
sbb
rcrb
xor
popa
xor
fbstp
jge
and
mov
ss
sbb
mov
rcll
xchg
clc
xchg
daa
ljmp
negl
les
mov
mov
inc
pop
xchg
int
popf
ljmp
inc
cmpl
clc
jne
in
stos
je
xchg
outsl
jecxz
mov
cmc
cltd
in
fisttpl
nop
dec
pop
movups
mov
and
mov
mov
mov
mov
test
sbb
dec
sbb
dec
in
sbb
dec
cmp
stc
jp
adc
xor
fwait
gs
out
mov
bound
dec
or
dec
or
lea
insl
and
popf
push
mov
xchg
int
roll
fisubs
pusha
popf
aam
pop
pop
mov
xor
lcall
loope
cs
sub
movsl
add
clc
sub
jno
cwtl
lcall
inc
inc
fidivs
mov
stc
sbb
pop
and
xchg
test
cmovge
repz
pusha
sub
imul
std
push
popf
outsl
aam
pop
cmp
sub
dec
shrb
mov
push
nop
nop
lods
out
mov
cltd
adc
mov
push
faddp
mov
loopne
adc
cwtl
push
cmp
lahf
mov
lret
and
jl
or
ficoml
jnp
jbe
movsb
inc
cmp
call
inc
rcl
les
push
dec
or
pop
mov
rcrb
fcompl
fcoml
mov
in
inc
lahf
add
push
push
jmp
cmpsl
or
pop
loopne
dec
sbb
pop
sbb
jns
mov
adc
push
dec
adcl
dec
sub
jle
cld
inc
or
and
jmp
out
cltd
mov
add
xor
mov
xchg
cmp
ret
jbe
repnz
pop
and
mov
rorl
test
test
mov
ja
pop
js
adc
jns
push
into
mov
pop
mov
pop
push
xor
fldl
test
lods
add
mov
vcvtsi2sdl
adc
push
sbb
cmpsl
loopne
fbstp
sbb
sub
insl
jg
xchg
add
mov
inc
or
add
stc
int
sbbl
xchg
cmpsl
jmp
ret
push
lret
into
orl
cld
seta
scas
and
push
mov
dec
lcall
inc
mov
js
dec
sub
cmp
pop
sbb
clc
pop
aas
rcrb
dec
mov
dec
dec
sub
andb
mov
xchg
dec
adc
and
inc
jnp
jecxz
decl
mov
mov
leave
mov
mov
xor
repnz
mov
dec
jp
clc
inc
add
inc
shrl
dec
jge
pop
into
sbb
pop
lock
in
cmp
int3
xor
mov
and
mov
addb
and
or
add
dec
loope
mov
aam
leave
popf
sbb
out
cld
mov
xchg
test
fidivl
sub
ljmp
out
les
shr
int
icebp
cmp
popa
adc
sar
inc
shlb
call
les
pop
push
xchg
lods
or
adc
push
ret
lret
sbb
jno
xchg
cmp
out
push
or
mov
loope
sbb
and
dec
xchg
ror
push
lock
loopne
push
psrld
ror
outsb
adc
push
and
ret
or
dec
int
addr16
adc
lret
or
dec
add
adc
loopne
mov
movsb
lea
pop
popf
stc
inc
add
scas
mov
rorl
inc
xor
sbb
add
dec
jg
lea
cmp
scas
xor
mov
std
or
fwait
fs
sub
hlt
xchg
popf
fsubs
push
inc
push
imul
les
cmc
fwait
rcll
push
aas
jnp
mov
add
inc
sub
and
add
and
aaa
sbb
ret
movsl
mov
daa
cmp
inc
xor
mov
in
inc
or
adcb
adc
lret
adc
mov
out
lods
and
rorb
rorb
xor
push
out
push
cmpsl
ret
pop
cmpsl
movsl
xor
jecxz
pop
dec
test
push
mov
mov
dec
mov
pop
mov
jbe
loope
or
xchg
int
in
xor
jmp
cld
ja
int
pop
out
mov
popf
sbb
icebp
xor
into
add
test
dec
inc
pop
inc
mov
ss
in
lods
rcrl
xchg
xor
and
pop
sub
lock
mov
int
cmpsl
or
movsl
out
pop
and
sub
sahf
or
push
mov
xchg
xchg
jmp
pop
mov
add
dec
stos
sahf
imul
outsb
push
call
shr
mov
pop
xchg
imul
jns
mov
dec
popf
and
or
nop
or
mov
mov
xchg
sbb
ljmp
pop
adc
adc
mov
out
dec
repz
jl
les
arpl
lods
sub
sub
cmp
mov
pusha
ret
adc
sbb
popf
mov
fisubs
xor
jo
mov
fs
fldl
mov
dec
or
sub
mov
test
pop
imul
xlat
shlb
jo
nop
jno
popl
out
and
mov
adc
stos
in
ljmp
mov
or
movsl
mov
ror
sahf
std
insl
push
orl
xchg
int
fdiv
xor
jb
roll
push
aaa
dec
sar
lea
mov
hlt
push
andb
pop
sbb
push
mov
sub
mov
push
ss
dec
adcl
adc
mov
dec
push
aad
pushl
lods
adcb
mov
in
lcall
aam
and
mov
mov
fwait
mulb
cmp
in
sub
loop
into
lods
sbb
push
popl
jg
rclb
loop
nop
jb
rclb
jns
mov
rcrb
int
jae
sahf
ret
int
enter
mov
out
jl
jb
and
fidivl
lret
aad
adc
inc
int
mov
cmpsb
and
lds
sti
mov
jo
and
sarl
xchg
mov
and
je
daa
fnstcw
ja
lock
divb
pop
xor
jnp
adc
wrmsr
or
pop
xor
sub
inc
inc
add
rcll
jnp
les
shll
inc
cld
jle
das
cs
fnstsw
jg
test
cld
push
push
movsl
jle
sbb
pushf
jns
in
push
lret
adc
or
add
push
jge
cmp
cmp
jno
cld
cmp
mov
mov
push
data16
xchg
popf
sbb
jo
adc
imul
mov
out
or
mov
inc
out
outsl
push
js
cld
mov
push
pop
dec
or
loop
int
flds
cli
sub
or
loope
push
shr
int
jnp
sbb
inc
adc
scas
outsb
xor
push
rcrl
in
mov
rcl
popf
xchg
lods
mov
sbb
jecxz
ljmp
inc
cmp
dec
insb
add
jp
je
dec
and
cmp
inc
jmp
mov
jp
dec
pop
fwait
push
jp
aad
jle
repnz
adc
mov
mov
sub
cli
js
in
fnstsw
mov
test
mov
mov
out
jecxz
fildl
fcompl
sti
gs
pop
sarb
mov
daa
push
and
add
dec
add
jmp
xchg
push
ljmp
mov
xlat
push
push
cmpsl
pop
fdivl
mov
jg
push
fdivrs
int
push
add
js
push
daa
add
or
fisubl
pop
in
insb
cli
jno
lea
add
dec
gs
cmp
popf
sub
mov
clc
xchg
repnz
mov
ja
lock
pop
hlt
clc
repz
cli
sbb
jg
or
adc
xchg
inc
or
dec
inc
lcall
or
sub
jg
ljmp
jle
and
xchg
inc
push
sub
add
into
mov
lret
daa
inc
mov
mov
rcrl
and
mov
inc
inc
pop
imul
xchg
inc
fistpl
xchg
or
jo
in
addr16
xchg
jle
xchg
stos
sub
xchg
mov
andb
mov
xor
out
xchg
into
xorb
push
bound
mov
jecxz
dec
scas
push
dec
jno
je
xor
rorl
xlat
jbe
dec
aaa
add
pop
or
inc
adc
cmp
fildl
mov
lcall
push
inc
aas
mov
fwait
push
or
clc
xor
sbb
add
psubb
sbb
aam
cmp
les
cld
ljmp
test
jecxz
or
adc
lret
mov
jp
fucomi
icebp
cmpb
mov
push
and
jge
rorl
mov
fidivrs
ficomps
xchg
in
adcl
imull
xchg
xor
out
cltd
ror
fwait
ret
and
xor
sbb
leave
or
push
push
stc
mov
adc
shll
fstpt
bound
or
out
shll
pop
mov
inc
pop
jp
or
aas
scas
sbb
cli
adc
push
filds
icebp
fmuls
inc
test
pop
dec
fs
out
popw
mov
bound
mov
rclb
outsb
rolb
jns
xchg
xorb
mov
inc
leave
pusha
dec
cs
outsl
jle
push
mov
fldt
movd
xor
js
cli
jge
pop
outsb
mov
nop
mov
out
pop
pop
xor
les
dec
pusha
inc
dec
push
mov
out
es
dec
lock
mov
lods
adc
cwtl
cltd
xchg
sub
es
clc
mov
jbe
and
push
jg
sbb
or
mov
sbb
insb
mov
mov
js
adc
leave
outsb
test
jge
sbb
cmp
into
mov
lds
jg
out
dec
sub
out
leave
push
das
sbb
sub
or
xor
mov
push
pop
sarb
popa
ja
and
or
iret
repnz
mov
mov
jns
dec
inc
mov
out
adc
mov
out
mov
in
xor
cmpsl
adc
fcmove
mov
inc
mov
int
lret
rol
xchg
rol
jp
mov
xor
pushf
mov
mov
and
inc
or
lret
jecxz
addr16
mov
out
mov
test
or
cmp
popa
cmp
sbb
in
dec
pop
mov
nop
das
fwait
mov
popf
adc
adc
fidivrs
xchg
adc
je
adc
or
aas
dec
push
xchg
repz
xchg
data16
mov
xor
mov
or
dec
mov
nop
mov
mov
icebp
repnz
mov
add
push
jmp
jno
cmp
andb
add
clc
adc
and
add
aaa
addb
sbb
lock
cli
push
bound
inc
push
aam
leave
dec
dec
jno
loop
adc
jle
xchg
push
jb
push
js
dec
or
sahf
fs
push
cmp
xchg
xchg
mov
mul
cs
xchg
sbb
cli
xor
lret
aam
orl
decl
sub
repz
dec
or
cmpsb
mov
test
jb
add
dec
repz
add
pop
adc
imul
pop
cltd
or
lahf
lock
cs
inc
jns
cmpb
or
lea
pop
shlb
cmpsl
push
inc
imul
xchg
aad
mov
pushf
xchg
sub
ljmp
loopne
xchg
sarl
rol
xchg
loopne
adc
shrb
arpl
xor
push
lds
lea
sbb
inc
adc
xor
pop
mov
shl
mov
leave
aam
jg
stc
scas
push
ljmp
incb
mov
inc
incb
jge
mov
pop
scas
fiadds
outsl
sub
int
scas
ljmp
mov
adc
jecxz
fs
xor
or
cmp
and
cs
push
addl
xchg
add
dec
mov
loope,pt
cmp
outsb
xor
gs
movswl
push
cs
adc
mov
imul
iret
cmp
repz
nopl
popl
insb
ja
call
xor
push
pop
enter
dec
das
js
dec
testb
mov
shlb
jns
mov
das
pop
shll
xchg
pop
mov
cmpsb
dec
incb
cld
adc
dec
jp
jmp
mov
mov
adc
mov
or
cwtl
pop
test
xor
mov
xor
push
mov
aaa
jge
add
cmp
leave
and
jle
pop
dec
shlb
xor
xor
roll
jg
inc
dec
loope
clc
gs
add
inc
roll
jp
div
or
sarb
xor
push
xchg
jmp
inc
orb
shrb
popa
mulb
fwait
mov
test
rcl
lock
vpsraw
sbb
insb
lods
inc
cmpb
pop
mov
icebp
shr
or
xchg
mov
or
popa
jle
int3
mov
mov
repnz
or
insb
cmpsl
mov
or
jno
jns
xor
popf
dec
and
xor
fnstsw
xchg
mov
inc
pop
mov
or
lock
and
int
adc
xor
push
daa
mov
pop
inc
mov
cmpsl
pop
mov
xchg
inc
sub
jno
mov
cmp
ljmp
subb
fldt
fucomi
ss
jecxz
je
sahf
fcmovne
insl
rcrb
leave
jbe
add
inc
sbb
cmpsb
push
arpl
aaa
inc
mov
push
xor
or
cmp
das
popf
mov
xchg
pop
jbe
xchg
and
and
jg
pop
sbb
fwait
in
sar
pop
add
jle
mov
popa
pop
out
mov
shll
leave
loopne
repz
mov
sbb
mov
cmp
and
dec
add
scas
push
inc
xchg
rcr
insb
jmp
lds
mov
ret
push
dec
add
test
or
frstor
sub
dec
enter
inc
adc
sub
mov
jecxz
lret
push
add
push
or
add
in
popf
dec
out
mov
popl
add
xchg
cltd
mov
cwtl
ja
push
push
cmp
mov
adc
stos
dec
jno
lea
adc
xchg
stc
shrl
dec
cmp
fsubs
xchg
add
push
cmc
in
jmp
cmp
lea
dec
aaa
data16
test
add
test
and
pop
popf
scas
push
push
pavgw
repnz
add
dec
add
test
pop
dec
mov
xor
les
rcr
jo
loopne
daa
add
mov
ficomps
movsl
sub
and
mov
loope
inc
repz
bound
shl
mov
mov
adcl
pop
add
push
test
mov
repnz
ficoms
add
xchg
out
sub
stos
mov
in
icebp
push
mov
in
sti
test
cmp
pop
out
xor
xor
inc
cmpsb
push
lods
adc
lahf
jp
pop
imul
imul
ret
mov
negb
addr16
jecxz
sbb
xchg
scas
xchg
push
inc
cmp
pop
mov
inc
cltd
jle
repnz
adc
jns
dec
adc
cmp
cmp
mov
add
out
mov
mov
mov
aad
pop
mov
jb
int3
clc
xor
rep
out
dec
mov
call
lea
mov
mov
bound
pusha
aad
xchg
wrmsr
dec
pop
xor
pop
insl
mov
xor
arpl
ds
or
dec
insb
jo
int
mov
rcll
and
aas
icebp
cmpl
push
sub
sti
hlt
repnz
cmp
xor
icebp
push
roll
push
jmp
add
dec
jge
push
mov
out
stc
popf
cs
dec
inc
movsl
jle
stos
in
pushf
loop
out
cmc
fidivrl
xchg
scas
jo
push
add
enter
test
insl
pop
push
mov
in
sbb
mov
hlt
cmpsb
jmp
inc
pusha
cmp
mov
je
shrl
mov
inc
imul
or
repz
xchg
fcmove
xor
out
rorb
push
inc
mov
imul
add
xchg
loop
pushl
inc
jmp
cwtl
dec
adc
inc
repnz
mov
xchg
fcompl
sarb
sub
mov
and
mov
call
jle
in
or
pusha
push
pushf
push
mov
dec
add
ret
fstpl
xchg
loopne
push
xorb
pop
repz
lret
lds
add
clc
mov
and
ja
jle
mov
lods
sbb
and
out
ss
je
and
dec
cmpsb
dec
xlat
push
imul
insl
int
bound
jecxz
imull
mov
or
inc
lock
imul
push
and
or
add
test
mov
out
mov
nop
pop
or
cltd
jg
loop
xchg
push
out
or
or
push
aam
or
enter
xchg
mov
add
mov
popa
mov
adc
cltd
push
lret
jp
lods
in
jmp
pop
cli
ficompl
dec
scas
stos
data16
mov
js
in
inc
xor
sbb
mov
ds
mov
adc
movsl
insl
insb
jae
fidivrl
sub
aaa
dec
xchg
or
xor
sbb
shll
mov
int
stc
mov
push
mov
pusha
xlat
mov
jne
xchg
cmc
js
mov
call
rolb
and
dec
xchg
jns
iret
or
nop
inc
cmpb
sub
dec
popa
xchg
shll
inc
jb
lahf
mov
je
testl
jl
dec
mov
add
dec
xor
repz
loop
loop
out
mov
push
dec
inc
in
jo
cmp
xchg
adc
jnp
subb
and
pop
add
pop
push
test
xchg
add
mov
and
cs
mov
orb
js
daa
rolb
loop
adc
mov
pop
js
push
mov
jae
xor
xor
push
inc
dec
xchg
push
and
xchg
scas
inc
mov
dec
inc
lods
xchg
dec
sahf
push
xor
cmp
push
lret
aam
lods
fiadds
outsl
leave
aas
add
std
add
push
outsb
decl
idiv
cmp
sbb
mov
and
pop
sbb
mov
pop
data16
cmp
mov
dec
xchg
inc
lret
leave
jecxz
xchg
xor
xchg
sti
rclb
xchg
mov
add
sbb
jge
and
cltd
jmp
xlat
out
divb
aas
xchg
ja
loop
pmuludq
pusha
mov
cmp
movsb
pop
jl
cmp
push
ja
shlb
xor
mov
jge
outsl
movsb
lds
rcrl
jns
xchg
mov
dec
mov
test
in
movsb
push
cld
pop
hlt
stos
or
xor
add
fidivl
inc
adc
inc
cli
addr16
movsb
pop
dec
dec
sbb
push
mov
aaa
inc
jno
mov
insl
pop
push
add
loop
arpl
ret
mov
pop
mov
adc
inc
sbbl
nop
cs
fdivs
fildll
inc
dec
and
mov
or
stc
dec
mov
cmp
dec
sahf
mov
in
inc
jb
rclb
inc
in
and
xor
jecxz
popf
cltd
xchg
xchg
insb
inc
nop
xchg
cmp
repz
daa
adc
cltd
cli
add
dec
inc
xacquire
out
add
mov
xchg
ss
mov
and
pop
or
pop
xor
movsl
es
dec
outsl
mov
outsb
push
shlb
pop
hlt
mov
into
movsb
out
inc
add
outsl
and
jb
inc
cmpsl
sub
push
lds
jge
jmp
sub
mov
repnz
sub
inc
mov
out
mov
fs
xchg
cmpsl
gs
xor
fnstcw
adc
mov
push
lahf
push
lods
ret
cmp
xchg
mov
scas
mov
inc
adc
inc
and
push
or
mov
mov
cmpsb
inc
inc
cltd
sbb
es
outsb
mov
mov
pop
mov
mov
xor
repnz
mov
pop
mov
inc
push
subb
inc
push
or
rorb
imul
pop
sbb
aam
lods
pop
sbb
inc
push
cmp
mov
cld
jl
sbb
int
rorl
mov
adc
daa
xor
fs
mov
rcrb
push
adc
fsubl
xchg
pop
lods
ficoml
mov
inc
pusha
js
dec
in
pop
movsb
notb
mov
mov
addb
test
lods
cmpl
mov
mov
or
sahf
pop
sbb
pop
sub
nop
dec
cmc
lahf
in
push
test
outsl
stos
div
and
hlt
and
and
ljmp
mov
leave
pusha
lea
leave
insb
inc
or
xchg
imul
fs
fistl
inc
clc
xchg
inc
pop
lods
or
iret
mov
jg
mov
or
cmc
negl
jge
xchg
sub
mov
scas
pop
scas
loope
mov
sub
xor
leave
mov
movsl
mov
mov
lret
cwtl
insl
pop
sub
das
xchg
inc
lods
push
mov
sarl
jg
ret
and
andl
mov
cld
data16
popf
into
mov
pop
jp
rcll
test
mov
fistl
ljmp
xchg
es
jmp
cmpl
ret
hlt
into
aam
aam
dec
cmp
loop
call
jle
cmpl
std
mov
out
jecxz
addr16
sub
pop
jl
sub
mov
lahf
in
dec
in
aam
inc
cmp
xchg
push
pushl
mov
arpl
cmp
push
adc
pop
push
mov
adc
imul
stos
fsub
mov
xor
mov
xchg
inc
cmp
or
mov
pushf
test
addl
jecxz
mov
jae
dec
pop
movsl
jbe
sti
dec
mov
call
cld
pop
mov
sbbb
js
mov
inc
addr16
js
push
pop
loope
nop
lods
or
imul
inc
adc
inc
stc
pop
test
lock
cs
int
adc
pushf
xor
sbb
iret
shl
adc
mov
adc
adc
add
xor
jb
cwtl
in
cs
negb
xchg
enter
xor
jp
out
add
mull
pop
push
and
enter
into
inc
int
sub
and
movsb
shlb
adc
dec
pop
xor
push
push
or
hlt
jns
pop
push
das
hlt
and
mov
xor
dec
cmp
sbb
cmpsl
mov
loope
sbb
hlt
dec
aaa
roll
or
cmpsb
xchg
inc
lods
jo
xchg
mov
inc
cld
lcall
dec
in
sub
dec
mov
mov
dec
imul
mov
sub
push
cmp
jg
push
test
push
lret
mov
mov
add
or
cmp
fidivs
fistps
pop
push
mov
lahf
aam
xsave
pop
data16
mov
xor
imul
out
and
cmc
xor
mov
and
and
and
sbb
pop
subb
inc
lods
fisubrs
scas
sahf
scas
mov
dec
andb
mov
daa
cltd
mov
push
imul
leave
pop
xchg
mov
inc
mov
sub
push
pop
mov
popf
xor
push
movsl
fistpl
loopne
in
adc
jmp
sbb
test
test
in
stos
cmpsl
sbbl
outsb
cmp
mov
xchg
in
or
inc
jp
int
pop
cltd
mov
movsb
flds
int3
inc
pop
xchg
fnstcw
inc
sbb
or
adc
inc
movsl
lock
repz
jnp
and
lret
push
ret
mov
pop
adc
inc
jnp
test
xchg
jne
cmpsb
pop
cmp
inc
sub
lods
mov
loopne
pusha
std
push
mov
xchg
bound
mov
fstl
arpl
fcom
and
test
dec
sub
and
bound
sub
ljmp
nop
sub
fisttpl
stc
fiadds
and
or
mov
je
push
xor
cs
stos
pop
mov
pop
jl
pop
jg
ds
test
insl
pusha
inc
xchg
imul
and
or
jp
stos
ss
cmp
pop
mov
lock
jb
es
pop
mov
cltd
movsl
inc
adc
insl
out
mov
pop
cld
add
mov
push
add
sub
mov
iret
inc
inc
dec
mov
push
data16
pop
cmpsb
or
cmp
mov
lret
call
xor
dec
sbb
jae
sbb
sub
repz
fs
push
bound
insl
fistps
mov
dec
popf
inc
push
pop
int
inc
xchg
mov
fsub
cmp
xor
inc
fadds
call
daa
jnp
loopne
gs
adc
sub
hlt
push
sahf
and
adc
jnp
fiaddl
or
test
jg
ds
xor
into
mov
jg
pop
arpl
push
or
mov
lea
fnstenv
popf
xrelease
add
out
out
mov
aaa
adc
sbb
add
pusha
adc
push
adc
inc
sub
and
adc
pop
inc
pop
cli
outsb
daa
cwtl
push
aas
cwtl
pop
aaa
stos
lcall
pop
addl
out
xadd
and
int
mov
inc
inc
jg
daa
cld
lahf
and
xchg
aam
push
es
repnz
loope
dec
sbb
add
mov
mov
roll
mov
xchg
dec
mov
rorl
pushf
movsl
arpl
lahf
xor
dec
enter
jecxz
dec
jno
mov
and
pop
cmc
shll
fisttps
add
adc
pop
mov
sbb
push
mov
rorb
pushf
mov
test
xor
js
jno
dec
loopne
and
xchg
push
inc
into
nop
and
jns
call
in
or
mov
mov
xchg
adc
rcrl
insb
into
xlat
lds
ret
mov
arpl
xchg
pop
sbb
enter
xchg
or
xchg
sub
loop
mov
jl
or
sub
sahf
fadds
rorl
or
leave
sub
push
inc
mov
xchg
lock
cmp
mov
dec
or
mov
fnsave
mov
cltd
and
mov
nop
out
pop
inc
adc
pop
xor
imul
out
sub
xchg
std
loope
fmul
fists
call
andl
aam
mov
inc
lret
lods
mov
les
dec
rolb
sbb
or
adc
sub
mov
push
nop
inc
out
mov
in
cmp
cmp
popa
std
js
cld
or
mov
adc
fsts
inc
and
aam
xchg
xor
jg
test
pop
sahf
pop
out
fdivrs
mov
dec
dec
stc
cwtl
jp
inc
push
add
xorl
scas
in
jne
cmc
es
cmpsb
pop
pop
xchg
mov
mov
in
xor
or
int
ret
and
mov
jo
in
iret
rolb
daa
and
mov
loope
dec
xchg
rolb
mov
push
jl
and
loop
loope
dec
mov
ds
jge
add
nop
inc
aam
jbe
leave
ror
xchg
xor
cli
xor
cmpsb
pop
int
adcl
dec
shll
fcompl
fcmovne
loope
dec
mov
jl
or
ret
sbb
and
dec
mov
dec
and
xchg
aam
and
rcl
push
xor
lahf
stos
test
mov
or
add
push
xor
nop
mov
dec
adc
mov
idivl
push
scas
dec
push
mov
xchg
inc
nop
ljmp
popf
es
lret
inc
xchg
aam
insb
inc
cld
rcpps
jmp
ficoms
mov
cmpsb
sub
int3
add
pop
test
pop
jae
lret
in
jle
inc
lcall
jge
sub
mov
fcomip
subl
ret
leave
inc
inc
mov
pop
int
adc
test
aas
js
or
mov
jae
pop
cltd
push
cmp
cmp
arpl
sub
lods
sbb
pop
sarl
pusha
pop
aad
jnp
inc
rcrb
orb
add
dec
fwait
cmovle
loopne
cmpsb
mov
and
and
mov
ret
out
mov
add
adc
inc
push
mov
jno
ret
scas
daa
js
mov
aam
mov
jno
shld
mov
push
rol
xchg
mov
enter
mul
jnp
adc
nop
pusha
cmp
adc
sub
mov
or
jecxz
clc
dec
push
fnstsw
inc
in
and
loopne
imul
lods
jl
mov
inc
cmpb
and
adc
push
mov
mov
jg
sub
mov
stc
testl
push
and
inc
cs
cltd
mov
xchg
into
ret
in
rcrl
and
sub
mov
inc
inc
iret
lods
jg
int
mov
lret
inc
sbbl
sub
lcall
fcoml
adc
jae
rolb
popf
add
mov
push
cmp
mov
andl
lods
frstor
inc
mov
lods
mov
iret
sub
sub
mov
mov
push
mov
mov
or
cltd
les
in
cmp
mov
inc
ss
dec
push
inc
or
test
sahf
scas
and
inc
faddl
imul
mulw
or
push
jno
pop
sbb
inc
ja
test
test
out
cmp
in
scas
pop
and
mov
addb
mov
out
sbb
fimull
adc
daa
in
enter
mov
or
hlt
inc
fidivl
leave
inc
sbb
gs
mov
rorb
notb
dec
enter
subb
cmp
nop
jne
jg
and
inc
mov
mov
jo
adc
int
ja
mov
mov
enter
shl
cmc
mov
push
out
repnz
out
mov
mov
test
shr
insb
jns
xor
sub
lods
jecxz
out
push
dec
loop
sarl
loope
mov
mov
ss
dec
jae
mov
mov
jno
pop
sub
jl
pop
fisubrs
aaa
pusha
cmp
pop
dec
dec
jecxz
dec
mov
push
inc
mov
inc
test
push
ds
push
inc
shll
data16
push
jns
popa
dec
xchg
aas
push
sub
jnp
cli
jo
xchg
std
stc
mov
jno
xchg
jbe
xchg
es
sbb
sub
mov
in
inc
inc
shrl
dec
ja
mov
push
jle
xor
mov
ds
inc
and
or
nop
jne
push
sub
leave
mov
mov
and
daa
mov
jle
rcll
add
and
pop
sub
push
pop
ljmp
js
test
sti
sbb
rcrl
inc
pop
mov
xchg
lahf
add
shlb
data16
mov
ja
pop
dec
jbe
int
icebp
cs
pop
imul
ret
inc
repz
adc
inc
inc
add
push
idiv
or
dec
jge
inc
scas
les
cmp
outsl
cmp
xchg
fwait
movsb
subb
cmpsl
inc
outsb
xor
cmp
sbb
xchg
lods
push
push
mov
xchg
xor
jno
gs
inc
sti
or
roll
lret
int3
jp
adcb
in
xchg
cld
mov
insl
loop
mov
lret
mov
sbb
sarb
inc
fsubrl
pop
xor
jp
fnsave
add
lret
mov
enter
pop
into
arpl
addr16
test
and
stc
nop
out
cmpsl
lret
push
bnd
and
jg
faddl
nop
mov
test
mov
push
fs
rcl
or
add
sbb
int
xchg
test
gs
aad
insl
repnz
pop
cmp
lret
inc
scas
adc
push
in
inc
lret
push
xchg
push
push
leave
std
notb
lods
scas
add
popa
enter
jmp
mov
jnp
push
dec
subb
jae
or
dec
scas
les
jae
adc
mov
push
or
cwtl
mov
adc
cmpl
cld
repz
ds
xchg
repz
dec
jp
nop
jecxz
rorl
movsb
orl
mov
int
mov
mov
xor
inc
insb
pop
dec
lea
xor
and
dec
xchg
inc
mov
or
in
test
sub
mov
cli
insb
clc
dec
jae
cmp
xchg
jnp
sub
in
jne
movsl
and
das
sub
es
jge
dec
mov
pop
mov
subb
push
xchg
faddl
push
shr
sarb
xor
popf
xchg
xlat
mov
shlb
dec
xchg
sbbb
push
jmp
dec
xor
pop
inc
cmp
mov
setb
call
in
push
in
mov
xchg
pop
data16
push
or
cmp
jg
jg
jge
int3
test
xchg
ss
xchg
pop
jo
mov
arpl
jg
jo
mov
mov
stc
arpl
out
push
push
fistl
mov
jmp
dec
xchg
xchg
mov
cli
xchg
iret
nop
in
jg
ljmp
cmc
sub
mov
sub
dec
rorl
addr16
inc
adc
mov
and
inc
into
xchg
rorl
and
push
push
mov
sbb
jns
add
pop
jle
sub
xchg
cmp
pop
pop
imul
cmpsl
ds
dec
push
mov
in
mov
dec
cmp
push
pop
bound
mov
lcall
pop
das
add
dec
out
test
inc
insl
xchg
jmp
int3
push
push
mov
cltd
mov
push
aaa
adc
nop
cmp
push
inc
movsl
push
sbb
ret
and
and
and
or
lock
dec
mov
adcl
mov
mov
adcb
inc
fiadds
inc
add
scas
aaa
js
inc
nop
mov
mov
cmpb
iret
mov
add
mov
inc
xchg
add
test
add
push
add
mov
out
fucompp
xchg
pop
out
push
jne
sti
dec
das
pusha
and
test
cld
or
add
xchg
push
cmp
inc
sbb
pushf
sbb
shrl
push
adc
cmp
fbld
push
shlb
push
adc
sarl
inc
fsubs
and
pop
adcb
xor
roll
jno
das
mov
cmp
fcompl
mov
push
dec
sarb
dec
cmp
rclb
rclb
pop
stc
out
lods
jl
jecxz
ret
iret
idivb
dec
mov
aas
xchg
inc
lods
inc
pop
and
mov
mov
xor
mov
xchg
mov
into
ja
ret
jp
push
push
jbe
lret
aam
pop
cli
mov
jmp
orl
jecxz
add
push
xchg
and
push
mov
pop
cmp
ds
shrl
iret
scas
sub
into
subb
aaa
stos
inc
fmull
call
sarl
or
int
xchg
lds
mov
or
xchg
or
mov
or
dec
xor
adc
xchg
mov
daa
mov
movsb
stos
jbe
ja
test
cmp
mov
fsubrl
pusha
inc
popf
mov
jmp
mov
stos
sbb
adc
fisubs
inc
push
or
mov
jg
leave
jmp
sub
inc
inc
xchg
dec
dec
iret
sbb
nop
xchg
loopne
xor
mov
cmpsl
lock
nop
xor
mov
mov
xor
xor
add
xor
out
cmp
inc
hlt
dec
test
nop
pop
adc
seto
pusha
out
mov
mov
popa
and
scas
out
shll
inc
and
ds
mov
inc
inc
add
cmpb
out
ucomiss
push
inc
fisttpll
inc
mov
lock
sbb
pop
push
jns
test
mov
popa
aam
rcll
fsub
aas
mov
rclb
roll
mov
cmp
clc
ja
rorb
hlt
adc
or
stos
rcll
mov
aas
xchg
mov
mov
xlat
lods
insb
ja
popf
mov
lret
sahf
push
movsl
add
je
or
cwtl
sahf
or
pop
es
cs
xor
or
or
push
test
and
mov
mov
out
repnz
mov
pusha
push
cld
inc
bound
push
or
xor
cwtl
dec
jne
call
mov
ss
xchg
sub
mov
js
std
outsl
xor
les
jne
ljmp
andb
loopne
jle
adc
fimuls
pop
mov
inc
inc
adc
sub
aad
dec
xchg
in
push
xchg
call
scas
lds
int
loop
daa
loope
lods
dec
inc
sub
outsl
inc
sub
inc
ss
cmp
jmp
int
pop
xchg
cmp
int3
mov
jbe
add
in
rorl
pusha
cmp
out
xor
repnz
into
stc
outsb
and
jno
les
dec
jg
jns
lcall
xchg
push
sbb
add
push
jno
dec
xlat
ss
mov
ljmp
jecxz
jge
sub
std
dec
iret
mov
sub
add
mov
xchg
xchg
scas
and
or
adc
pop
pop
cmp
jp
dec
cmp
sbb
dec
lea
add
mov
xor
mov
or
push
xchg
mov
ja
dec
xor
jp
out
add
jb
test
cmp
test
jmp
scas
sub
push
adc
mov
or
call
into
jno
dec
pop
xchg
mov
scas
push
jno
roll
adc
dec
lods
daa
rclb
into
and
xor
sarb
mov
shlb
ljmp
push
mov
test
adc
dec
push
mov
xor
stos
mov
lods
fisubl
pop
xchg
cld
sbb
sub
mov
cmc
mov
jno
dec
aad
mov
out
push
ss
hlt
mov
sahf
pop
stc
cmpsl
xchg
stc
out
les
mov
cld
mov
sub
pop
sbb
mov
into
add
mov
xchg
lea
loope
jg
mov
inc
icebp
repnz
insb
inc
inc
aas
cs
or
lret
mov
sbb
xchg
push
xchg
jecxz
shlb
scas
and
shlb
ret
clc
test
sub
adc
sbb
jns
mov
ljmp
sub
ljmp
xchg
js
sbb
rcrl
js
sbb
push
pushf
add
ljmp
test
and
mov
leave
jl
lods
add
popf
jne
mov
lea
sarl
ret
dec
push
int3
ss
inc
xchg
lea
addb
pop
push
std
ss
lahf
mov
push
movsb
inc
testb
adc
int
rolb
dec
xchg
jns
xchg
mov
jmp
imul
and
in
testb
jmp
jb
insl
lcall
test
orl
jae
jb
mov
int
in
sbb
arpl
iret
scas
shr
inc
shrb
popa
push
shll
js
cld
out
jb
adc
lcall
adc
mov
or
dec
iret
sbb
ljmp
in
outsl
in
pop
movsb
dec
add
shlb
pop
adc
outsb
iret
mov
jno
xor
int3
add
movsl
arpl
mov
daa
mov
in
in
test
push
pop
mov
jo
and
addr16
or
mov
sbb
push
mov
in
xchg
fsubl
roll
and
out
mov
mov
mov
int
mov
cmp
shr
rorl
ss
stc
fwait
adc
in
addr16
jge
cmp
pop
dec
mov
in
loopne
xor
lock
fiadds
data16
xlat
ja
push
jge
dec
les
movsl
movsl
fcmovne
fucomi
cmp
adc
adc
cmp
fdivrs
xchg
lock
mov
xor
mov
push
les
xor
jae
lea
out
rcll
mov
sub
cmp
ret
inc
scas
out
loopne
loopne
loope
sbb
jbe
adc
ficompl
test
xchg
cld
sub
inc
inc
or
fdivr
ljmp
int3
mov
xorb
push
out
loopne
cmp
test
adc
or
push
pop
bswap
outsb
inc
cs
aaa
dec
pop
rolb
shll
lods
adc
xlat
aas
xor
clc
adc
mov
fists
push
sub
adc
xor
int
push
jg
and
pop
stos
cmp
icebp
pop
loope
fiaddl
inc
cmpsb
addr16
xchg
mov
jge
adc
dec
push
adc
aad
push
lods
popf
pop
dec
lret
and
das
add
or
lret
mov
add
inc
mov
les
inc
jle
mov
vpcmpgtb
adc
push
xor
dec
popf
jmp
cli
dec
inc
shll
inc
inc
jp
cmp
push
sub
and
xor
pusha
nop
adc
and
orl
mov
popl
daa
jns
mov
cmpsb
dec
dec
stc
sub
xor
fisttpll
mov
int
jno
adc
xchg
leave
es
push
ds
and
add
sub
loopne
cmp
cltd
cmp
lock
xorb
jmp
mov
repnz
sti
movb
inc
sarb
pop
cmp
pop
lods
pop
jbe
mov
inc
faddp
xchg
in
js
pop
cmpsl
push
xor
mov
vmread
jp
imul
cmp
inc
mov
dec
cli
mov
loope
daa
mov
inc
fstpt
data16
out
sub
xchg
push
xor
push
fnstcw
out
shrl
dec
cmp
inc
nop
pop
mov
scas
orl
mov
clc
inc
xchg
sub
jge
sbb
mov
sar
in
adcl
xchg
xor
xor
rcrb
or
mov
xor
jb
mov
push
xor
pop
jg
or
test
pusha
push
scas
and
mov
adc
sub
xchg
mov
and
imul
insb
push
mov
push
faddl
mov
inc
adc
sbb
xchg
add
nop
out
lods
dec
mov
push
mov
dec
inc
or
adc
lock
xchg
mov
dec
xchg
xor
xchg
mov
cmp
or
push
int
mov
sbb
rol
lods
sar
jp
movsl
mov
pop
fnstenv
inc
stc
pop
into
rolb
pop
subb
xor
sahf
out
subb
insl
pop
and
inc
add
leave
in
shlb
sahf
push
mov
sbb
aam
lds
push
ss
pop
inc
pop
jg
inc
clc
ds
icebp
inc
xchg
sbb
gs
std
sti
in
inc
call
loope
jecxz
pop
and
dec
test
or
imul
mov
inc
mov
push
dec
scas
lahf
lret
pusha
mov
mov
jle
fnstsw
outsb
ss
hlt
cmp
mov
sub
stos
sub
jns
in
and
pop
push
and
jno
mov
cmpsb
cmp
pop
adc
sbb
hlt
add
imulb
nop
pop
cmp
sbb
sarl
and
fs
add
lea
scas
in
xchg
aaa
addr16
fisubrl
jp
aam
cltd
cs
iret
cmp
or
call
mov
push
int
rcl
pop
push
push
push
jb
mov
out
imul
mov
cmp
pop
xchg
xchg
xchg
inc
pop
out
cmp
ficoms
dec
xchg
arpl
roll
arpl
sarl
push
cmpsl
rol
jg
daa
pop
lret
xchg
daa
adc
push
inc
ss
or
enter
lea
test
fisttpll
call
cmp
fidivs
test
stc
out
add
into
aaa
andl
mov
ljmp
out
add
repz
outsl
les
mov
jo
sti
test
pop
xor
inc
push
or
aaa
pop
in
test
mov
nop
xchg
jl
push
push
js
cmp
int
popf
push
jae
push
adcb
sarl
stc
push
inc
inc
jo
jb
enter
mov
out
cmpsl
xchg
sbb
dec
inc
push
std
test
mov
jecxz
push
in
in
arpl
adc
push
ror
iret
rolb
inc
jne
jb
out
inc
iret
push
adc
jecxz
xchg
xchg
ds
inc
in
push
pop
jae
sarl
sub
loopne
sbb
add
add
push
leave
inc
stc
dec
fdivl
adc
out
mov
mov
sbb
push
or
jle
or
sbb
test
sbb
and
push
popf
insb
push
jb
lods
fcoml
dec
outsl
std
aad
inc
dec
or
adc
xor
cmp
lock
push
mov
mov
int
sub
jns
lret
xlat
inc
jp
pop
xchg
or
pop
in
jb
dec
adc
cmp
push
sahf
aad
scas
je
inc
mov
jmp
sbb
inc
jle
mov
sub
sti
and
inc
iret
cli
outsb
push
xor
pop
sbb
lods
int
aad
dec
dec
lahf
and
test
jno
insl
stc
out
and
aad
add
fdivl
cs
cmp
mov
sbb
cld
int
mov
mov
mov
addr16
stos
push
nop
divb
push
adc
aas
jb
test
fbstp
fcomi
fnstsw
cld
adc
in
inc
jne
xchg
mov
add
scas
xchg
mov
adc
dec
dec
imul
stos
out
mov
push
xor
stc
jp
push
clc
in
push
into
jmp
inc
mov
outsl
sub
mov
clc
mov
cmp
sti
inc
call
cli
push
dec
roll
inc
mov
sarb
push
mov
xlat
sub
inc
push
enter
stc
sub
rcl
flds
xor
pop
clc
mov
jecxz
call
mov
sbb
and
or
mov
xor
rorb
push
inc
vcvttps2dq
test
leave
xor
nop
mov
movsb
mov
iret
mov
lock
in
mov
xor
mov
add
mov
push
cmp
dec
leave
pusha
dec
pop
mov
mov
lods
les
lcall
gs
sbbl
bound
xchg
popa
adc
gs
outsl
cmp
gs
dec
and
jb
xor
mov
sbb
sub
sub
ja
movsb
sub
int
sbb
inc
sbb
lcall
sbb
adc
out
icebp
or
push
mov
pusha
mov
aas
dec
cs
cmp
mov
jg
movsb
jns
ret
das
mov
jp
inc
aam
fcompl
out
sub
push
xlat
xchg
scas
sarl
iret
icebp
or
inc
jmp
jl
push
popf
icebp
pop
addr16
jle
adc
and
mov
jge
mov
add
ss
xor
adc
adc
outsl
jecxz,pn
notb
andb
jne
push
mov
mov
add
adc
scas
cmc
dec
pop
lahf
mov
imulb
push
dec
jb
fidivrl
pop
jg
ds
int3
xorb
test
enter
pop
jnp
cmp
add
push
rorl
fdiv
add
push
dec
pop
cmp
je
xor
daa
ret
sub
filds
ss
int3
mov
pop
adc
rcll
scas
outsb
sarb
daa
cld
mov
jle
jbe
jp
or
popf
shll
int3
dec
in
cmc
mov
popa
pop
inc
or
aad
mov
inc
int3
into
inc
or
xchg
addb
and
xchg
test
add
int
dec
cmp
rcll
orb
stc
ret
mov
outsb
push
xor
or
std
mov
mov
mov
andl
pusha
nop
and
pop
and
adc
xchg
nop
iret
xchg
iret
adc
movsl
cmp
mov
jb
je
nop
xor
std
aad
lock
cmpb
aas
dec
adc
test
repnz
les
imul
inc
mov
and
fcoml
nop
test
push
data16
in
mov
mov
mov
idivl
xchg
imul
mov
xchg
dec
test
xchg
cli
push
lods
or
push
push
pop
cmp
push
mov
aam
xor
mov
mov
lret
jg
sub
mov
lcall
cltd
jle
nop
repz
xchg
xor
sub
xchg
rclb
cli
pop
xor
adc
dec
inc
xor
daa
add
sbb
inc
and
repnz
inc
stc
lahf
xchg
pop
loop
jb
int
nop
unpckhps
mov
stc
pop
push
pusha
adc
cmp
lcall
mov
adc
xchg
adc
adc
push
mov
push
xchg
dec
push
fstl
or
push
xchg
int
pop
add
loopne
cmpb
or
xchg
dec
inc
fs
mov
sub
xchg
lea
and
jg
mov
mov
xor
xorl
and
adc
push
test
jmp
aas
cmpb
aas
in
cltd
push
jmp
movsb
movsl
xchg
push
ja
rorl
jno
loope
icebp
shlb
outsl
cmpb
lock
mov
stc
mov
repz
xor
in
push
adc
mov
sbb
jno
jbe
and
ss
xor
dec
mov
and
cs
lock
xor
xlat
enter
inc
pushf
lcall
pop
or
sahf
test
jno
enter
xor
das
push
in
inc
cmp
in
xchg
rcl
into
push
xchg
in
mov
pop
and
and
adc
stc
outsb
add
cmp
push
mov
adc
inc
rcrl
pop
insl
jle
mov
data16
add
push
inc
add
jg
mov
subb
sub
icebp
mov
inc
fisubrl
adc
or
std
jno
aas
or
loope
cmp
mov
xchg
pop
aaa
xchg
inc
pop
leave
dec
iret
psraw
fisubs
mov
pop
xchg
sbb
dec
int3
in
int
loop
inc
mov
cmp
add
cs
jle
psrlq
add
add
jp
std
out
inc
mov
dec
adc
gs
clc
movsb
loope
in
sub
pop
jecxz
cmp
dec
les
mov
and
rorb
scas
aaa
mov
fadds
mov
xor
sbb
inc
dec
mov
popf
sub
mov
jne
ja
dec
mov
mov
mov
push
pusha
or
hlt
jecxz
lcall
orb
cmpsb
sahf
xchg
pop
insl
sbb
adcl
adc
add
sbbb
int3
dec
jg
subb
push
mov
dec
mov
push
jle
bound
inc
es
daa
ret
xor
or
daa
cmpsb
data16
lods
xorl
hlt
push
nop
outsb
iret
mov
lods
xor
and
lods
add
mov
xchg
scas
mov
das
jnp
mov
mov
jp
ss
add
popa
jp
sbb
sbb
icebp
sbb
gs
mov
jo
jmp
mov
xchg
xor
cmpl
inc
mov
inc
mov
stos
popf
ss
in
mov
add
lds
movsb
enter
and
inc
jp
pop
or
sbb
jg
subl
sbb
dec
aam
pop
in
leave
jl
nop
mov
pop
out
frstor
cmpsl
std
xchg
sarb
loopne
imul
int3
cmp
sbb
pop
xlat
in
lcall
adc
les
clc
cmp
fisubrs
mov
aaa
jbe
mov
mov
inc
ss
pop
sub
popa
pop
into
adc
jns
mov
or
xchg
sub
inc
es
loopne
insb
lcall
xor
lock
pop
xor
and
test
inc
test
mov
pop
cli
rorb
dec
lret
push
jecxz
mov
cmp
mov
lahf
dec
add
or
xchg
ds
pop
ds
add
xchg
repz
dec
pop
leave
sbb
push
mov
xor
lret
inc
frstor
jb
push
push
arpl
add
leave
push
adc
dec
repz
cs
xor
sbb
fsubs
dec
sbb
cs
je
lret
push
arpl
sub
inc
jp
inc
mov
sbb
push
jno
mov
adc
jg
jmp
adc
xchg
aas
and
cltd
sti
push
mov
sti
outsb
lods
adcl
adc
movq
emms
cmp
sbb
movsl
dec
adcl
in
les
mov
cmp
call
dec
jo
in
fisubl
aaa
cld
mov
xchg
jmp
jge
push
int
push
jge
hlt
into
xchg
mov
jns
cmpsb
scas
sub
sub
lret
push
add
mov
int
jb
nop
adc
lods
adc
sahf
cmp
test
loopne
jno
pusha
nop
mov
or
scas
and
in
in
push
jecxz
js
inc
sub
push
mov
ds
rorb
rcll
lcall
fcomps
mov
testb
aaa
mov
pushf
iret
xor
outsl
add
pop
adc
push
or
push
scas
je
jg
lock
in
xchg
push
es
adc
mov
adc
in
movsb
sub
mov
jns
mov
ret
call
pop
mov
jmp
pop
and
push
hlt
scas
dec
ja
mov
or
push
stos
stc
dec
mov
sub
lret
pop
frstor
xchg
sbb
pop
mov
dec
cmp
jg
test
ficomps
lods
into
decb
into
sbb
push
rol
imull
push
paddsb
rorl
dec
dec
ds
jne
jnp
pusha
pop
xor
repnz
mov
hlt
sbb
inc
dec
cmp
and
jmp
popl
dec
and
mov
les
icebp
adc
pop
jns
xchg
mov
ja
testb
xchg
jmp
mov
in
shrb
inc
push
pusha
iret
test
jmp
mov
and
xchg
cmp
xchg
sub
sub
push
inc
jbe
ljmp
leave
lcall
in
jns
pusha
xor
shrl
ljmp
les
sbb
inc
xor
inc
mov
in
lea
mov
mov
nop
lock
jl
dec
loopne
jecxz
adc
iret
loope
in
push
or
scas
adc
mov
dec
mov
dec
mov
out
inc
cmp
mov
sub
pusha
dec
rcll
stc
inc
inc
dec
fwait
mov
xchg
push
pop
inc
add
jnp
pop
test
and
mov
jp
lret
add
and
mov
xor
dec
xchg
cmp
scas
dec
dec
fmuls
movsl
enter
adc
add
inc
leave
jns
mov
pop
imul
adc
sub
sbb
cmp
iret
dec
xchg
arpl
sbb
push
orb
sub
xchg
ds
gs
rorb
add
xchg
add
daa
lds
jl
adc
xor
fimull
icebp
es
and
cs
jg
sbb
pusha
push
dec
jnp
mov
enter
jge
mov
hlt
ret
push
cmp
mov
cwtl
test
sub
scas
inc
std
mov
test
addr16
add
hlt
ret
cld
and
cmp
sub
mov
adc
ljmp
ja
fsubrs
and
dec
imul
pushf
inc
lods
jg
jmp
in
sub
xor
test
fiaddl
push
out
push
inc
leave
push
insb
mov
push
mov
lods
adc
aad
clc
inc
mov
dec
sbb
bnd
inc
frstor
adcb
cmp
lret
into
sti
lret
mov
roll
xor
test
jp
xchg
daa
inc
rorl
lods
mov
loopne
push
rcl
jle
cmpxchg
stc
and
cwtl
lret
push
add
fstl
aas
enter
mov
jnp
sahf
fs
adc
out
in
lds
popf
jbe
mov
and
sbb
call
inc
stc
dec
lcall
mov
aad
dec
cmp
fdivrl
ffreep
jne
inc
test
and
sarl
leave
sbb
test
jmp
mov
aas
add
xor
mov
mov
popa
pop
xchg
sub
mov
push
fildl
int
cmp
adc
lret
in
adc
pop
xor
mov
fildl
xchg
sub
pop
aaa
dec
xchg
aad
sbb
cltd
or
jp
mov
cmp
cmp
add
push
lcall
shll
sahf
gs
shl
mov
sub
popf
cmp
push
mov
nop
xor
sbb
es
add
js
mov
into
aaa
std
leave
leave
or
roll
stc
lods
scas
out
ret
scas
movsl
pop
xor
xchg
mov
sarl
xchg
jecxz
scas
push
mov
les
sub
cld
ljmp
xor
inc
test
xor
mov
roll
popl
jg
cmpl
in
into
lods
lea
mov
in
cs
jp
pop
mov
mov
mov
pop
mov
scas
jp
rcrb
cmpsb
shll
push
mov
sub
stc
fucom
and
mov
lods
rcrb
mov
sub
adc
inc
lock
mov
xchg
data16
and
push
mov
in
xchg
js
sbb
mov
in
lods
not
test
cmp
jecxz
pop
pop
mov
or
adc
repnz
or
scas
pop
gs
in
out
lock
out
repnz
dec
out
mov
mov
icebp
and
inc
sbb
push
ss
inc
mulb
cmp
lds
jg
push
mov
clc
jne
pop
add
mov
pop
sub
ret
test
xor
shl
mov
mov
iret
xchg
incl
jge
outsb
aaa
push
and
fs
mov
cmp
frstor
xchg
inc
insb
or
lcall
mov
popa
out
es
loopne
pop
mov
xchg
mov
in
ja
push
pop
or
pop
add
push
mov
jl
push
jno
hlt
dec
call
lret
stos
out
dec
rolb
cmpsl
mov
add
mov
inc
stc
sbb
xor
fcoml
es
inc
sbb
inc
int3
xchg
mov
call
mov
subl
pop
cltd
ss
push
mov
push
imul
jg
gs
or
and
out
aaa
test
jns
mov
lret
adc
xor
into
popa
lahf
mov
ds
inc
hlt
xchg
dec
mov
push
ret
inc
cltd
jb
stc
jb
leave
push
xorl
inc
mov
pusha
cmp
pop
xorb
inc
cmp
jb
movsl
sbb
mov
mov
fwait
out
inc
popa
test
sahf
jo
addr16
mov
loope
rcrl
mov
data16
lods
in
jp
push
movsl
in
stos
shll
loopne
dec
jmp
cmp
mov
out
movl
cmc
call
inc
rcll
add
xchg
adc
dec
repnz
mov
popf
adc
repnz
test
lods
jecxz
sbb
imul
incb
add
cmp
inc
sbb
js
cmpsb
repnz
std
sub
test
push
push
dec
pop
stc
repz
cltd
popf
xchg
aad
pop
repz
ss
pop
sbb
add
test
and
or
xchg
push
lods
mov
loope
mov
cmp
sub
inc
push
adc
xchg
lods
xchg
pop
insl
mov
and
stos
inc
pop
push
test
dec
mov
and
shl
sub
mov
push
lods
push
sti
push
pusha
xor
daa
jb
cmpsl
push
pop
cs
loope
in
jecxz
sub
xor
adc
mov
out
jg
pop
int3
jne
and
andl
incb
mov
adc
pop
call
sti
insl
test
push
out
adc
lock
mov
ljmp
add
mov
sub
mov
jecxz
aas
je
and
pop
std
ret
dec
in
adc
inc
pusha
popf
cmp
pop
outsl
notb
mov
mov
inc
jo
mov
jecxz
push
xor
xchg
adc
sbbb
inc
movsb
inc
or
mov
dec
pop
mov
dec
or
in
cmp
mov
jo
xchg
pop
leave
popl
mov
push
sbb
pusha
mov
or
int3
push
xchg
mov
pop
imul
iret
test
dec
xchg
mov
fdiv
mov
xchg
mov
push
test
jb
addr16
mov
adc
inc
pop
cmp
or
stos
pop
insl
iret
out
rorl
xchg
leave
pop
inc
or
nop
and
sahf
cmp
lret
outsl
mov
mov
mov
pop
sub
xchg
imull
icebp
notl
xchg
shlb
xchg
mov
enter
popa
dec
mov
sub
pop
pop
clc
xchg
cwtl
fwait
mov
inc
sub
jb
dec
inc
cs
xchg
mov
push
mov
mov
decb
test
xor
sbb
dec
jb
xchg
enter
xor
xchg
jno
sub
loopne
inc
jecxz
popa
or
xchg
xchg
sub
scas
adc
test
aad
inc
cmp
inc
out
adc
insb
or
cltd
test
mov
xor
dec
xchg
dec
dec
sub
or
add
cmp
es
sub
fsubl
pop
test
xchg
jo
jle
adc
cmp
test
pusha
add
mov
push
ds
xchg
xlat
shlb
into
lds
xchg
rcrl
xor
je
xchg
pushf
enter
xchg
out
cmp
dec
sbb
movsl
mov
lods
idivb
mov
imul
jnp
repnz
pop
pop
mov
sub
push
inc
cwtl
pop
push
fiadds
mov
inc
ret
cmc
mov
les
dec
add
mov
jmp
shl
cmp
adc
mov
add
int
mov
add
mov
inc
lods
sbb
or
sub
push
push
inc
push
movsl
fldl
aaa
or
xchg
sti
repnz
clc
rcrl
popa
adc
cmc
pop
in
shlb
inc
pop
or
sahf
xchg
fs
lods
push
jae
sub
subl
sub
iret
stos
into
mov
pop
mov
je
pop
xchg
inc
inc
jno
imul
push
popf
sti
repnz
repnz
jo
sub
sub
cwtl
or
cmp
dec
in
push
mov
test
xchg
adc
jne
cld
dec
pop
mov
out
daa
fldl
mov
ror
push
adc
mov
adc
mov
bound
lods
fstpl
into
fnstsw
pop
jmp
mov
xchg
out
jae
dec
mov
in
mov
std
movl
into
inc
orl
inc
cld
jl
es
cmpsl
xchg
mov
addb
mov
and
ja
cwtl
sbb
in
js
fwait
stc
jecxz
add
iret
push
pop
or
or
out
jmp
mov
cltd
jno
into
inc
iret
push
dec
jle
mov
test
xor
mov
inc
mov
loop
mov
xchg
cmp
and
xchg
fsubr
mov
xlat
test
aam
insl
test
or
adc
add
or
dec
fiadds
pop
sti
enter
xor
hlt
mov
lret
sub
rorl
test
out
mov
dec
jno
jno
test
ret
and
dec
push
aad
mov
por
cmc
xchg
icebp
and
xor
jno
jne
push
stos
aaa
nop
stc
xor
aaa
divb
dec
gs
push
add
xor
mov
push
insb
fisttps
iret
and
push
and
arpl
dec
xchg
and
cmp
cmp
sbb
xchg
fstpt
cmp
and
out
hlt
mov
mov
and
pushf
xchg
nop
cltd
mov
call
mov
mov
nop
xchg
data16
and
mov
out
fcompl
add
sub
mov
out
dec
sub
add
rcrl
sub
push
adc
ss
inc
xor
repz
add
rolb
mov
movsl
mov
aaa
imul
and
add
push
cld
cmp
sub
sbb
stos
push
mov
or
nop
xchg
rorb
icebp
xchg
adc
jnp
fiaddl
dec
cmp
les
add
call
aaa
dec
fs
repnz
popf
xor
lcall
rcl
dec
pop
std
mov
xor
outsl
add
xor
adc
xor
aam
sbb
arpl
std
divl
lods
sub
mov
push
test
sbb
inc
inc
aas
dec
daa
sbb
jns
test
pop
ja
lahf
pop
push
ljmp
rolb
outsb
or
test
sub
add
mov
outsl
int
sub
imulb
cmp
inc
push
sub
add
dec
mov
into
lcall
pop
ja
leave
cmpb
pop
pop
xor
pop
jbe
xor
mov
loop
in
mov
sbb
xchg
fdivrl
mov
push
inc
clc
aaa
mov
js
js
cmp
push
dec
loope
pop
cmpsb
mov
sbb
dec
push
sarl
movsl
push
bound
shrl
xchg
xor
xchg
xchg
sbb
cwtl
bound
scas
into
inc
cmp
push
pushf
mov
and
cmpsb
ret
sarb
push
rcll
movsl
sbb
outsb
pop
cmp
jg
stos
dec
inc
add
jge
xor
xchg
jns
jp
jne
jg
pop
mov
mov
push
push
stos
lods
dec
push
decb
shrl
mov
leave
push
sub
test
cmpsb
xor
out
push
bound
clc
mov
mov
jo
sti
jp
push
sbb
gs
scas
adc
jp
cmp
aam
les
ss
lods
int
adc
loop
push
jge
hlt
mov
mov
sub
aas
pop
jl
sub
incl
xchg
movsb
cltd
adc
out
and
pop
mov
jnp
and
mov
inc
inc
adc
ds
orb
xchg
sbb
mov
mov
mov
fimull
dec
dec
xor
jno
sub
lret
adc
or
sub
xor
cltd
add
loope
divb
lret
nop
sub
sub
xchg
pop
mov
repnz
shll
fmul
dec
aam
pop
cld
es
mov
jge
mov
add
adc
dec
jmp
lahf
pmulhuw
sub
popa
xor
sub
jle
mov
loop
mov
jle
enter
adc
add
ret
in
xor
call
lock
shll
xor
stc
sub
dec
pop
les
sbb
xchg
lret
add
sub
xor
inc
and
movsl
xchg
jnp
out
pushf
scas
cmp
push
leave
jb
or
scas
sub
inc
cmp
sub
push
and
mov
out
or
sub
mov
push
test
leave
incb
icebp
pop
sub
dec
in
fsubs
jp
or
cltd
sbb
adc
in
test
test
and
xor
jg
xor
loope
inc
fisubrl
add
int
adc
aas
andb
and
popf
inc
jge
test
addr16
pusha
push
fiadds
jo
jo
push
xchg
pop
test
pop
cmp
hlt
mov
adc
inc
lcall
loop
lcall
sbb
xchg
int
or
sbbl
insl
mov
xchg
int
addb
outsb
xchg
out
jo
xlat
add
rorb
ds
add
aad
mov
xchg
outsl
jnp
sub
fsubrl
jge
and
pop
cmp
bound
out
fistl
ss
stc
imull
ljmp
adc
lret
and
mov
cld
pop
inc
repz
cli
xchg
sbb
inc
es
loop
and
fcoml
outsb
fcoml
mov
in
rcrl
or
push
push
roll
cmc
aam
shr
push
mov
adc
or
jg
mov
and
mov
flds
pop
mov
lds
lods
shr
cmp
xor
inc
inc
push
je
add
inc
sbb
fdivrl
push
movsl
add
in
ss
ficoms
inc
int
lea
cmp
inc
lea
js
xor
inc
adc
xor
js
shlb
sub
cmpsl
rolb
test
movsl
outsb
adc
dec
jl
add
xchg
test
mov
or
push
mov
mov
cs
inc
addb
gs
outsb
inc
leave
idivl
cmp
sub
fdivl
jns
mov
orb
int3
mov
lods
test
jg
jmp
mov
push
add
aam
clc
adc
rolb
jge
cvtdq2ps
xchg
test
jg
loop
xadd
fidivs
ljmp
dec
adc
cs
sub
cwtl
cs
xchg
mov
shrb
rorl
xor
dec
jno
in
aaa
dec
mov
cmp
pop
aad
ja
pop
pop
lock
or
loope
and
jns
xlat
xchg
ljmp
push
xchg
push
dec
cmpsl
mov
fnsave
xchg
mov
push
out
ds
cmpsb
vpsubusb
hlt
lods
dec
xchg
clc
lea
sbb
xlat
xchg
xor
cmp
inc
sar
dec
sarl
mov
scas
sub
fwait
mov
icebp
addl
inc
add
mov
mov
cwtl
shrl
filds
inc
mov
cmp
dec
test
aad
cmovns
pop
or
into
aaa
in
cmp
sub
rclb
icebp
xchg
inc
lret
loopne
aam
mov
xchg
add
add
cwtl
xor
fdivs
pop
mov
add
mov
mov
dec
or
lsl
les
mov
ljmp
push
ja
sbb
mov
sub
test
cmpsl
out
pusha
mov
mov
adc
cmpsl
imul
push
scas
lods
and
pop
orb
out
test
test
test
sbb
jne
dec
add
sbb
stc
pop
stc
push
xor
sahf
cs
sbb
xchg
mov
fsubrs
movsl
pop
sub
cmc
imul
adc
call
vmovups
inc
jmp
dec
test
xchg
and
mov
popa
cmp
aam
idivb
dec
lods
outsb
push
movhps
push
fsubs
mov
mov
or
movsl
jb
int3
aam
add
pop
pop
divl
jmp
pop
outsb
push
adc
and
inc
mov
mov
mov
sbb
push
scas
insb
xorl
stc
inc
cmpb
js
push
inc
jmp
adc
enter
cld
pop
sbb
repnz
push
sub
jecxz
inc
out
insb
mov
sbb
jecxz
stc
cmpsb
jb
dec
mov
or
mov
cltd
incl
repnz
xchg
push
shrl
pushf
adc
dec
insl
cs
movsl
sbb
add
xchg
xchg
addl
push
das
push
pop
ret
or
ja
and
mov
jle
mov
add
dec
les
arpl
leave
sti
pushf
jae
mov
sub
leave
dec
das
mov
inc
jb
aad
lods
adc
daa
int
inc
jge
jae
xchg
das
mov
inc
inc
sub
pop
stos
cmpb
mov
jns
test
clc
mov
cld
cwtl
clc
out
lea
out
xchg
dec
sarb
jecxz
and
shrb
or
or
xchg
pop
adc
mov
loope
aam
cmpsb
stos
int3
call
std
jmp
cmp
mov
xor
rol
rcll
sarl
jno
adc
push
arpl
lret
cmp
cmp
stos
int
fidivrl
push
fildll
fsubl
out
aad
adc
xchg
movsb
imul
data16
mov
mov
bound
push
aad
cmp
popa
push
pop
jnp
mov
negl
arpl
mov
mov
push
rorl
push
mov
out
test
orl
ret
adc
dec
sub
jl
xor
cmp
fisttps
mov
mov
fmuls
lods
add
rcll
in
mov
add
push
loope
push
adc
in
dec
jmp
cld
sub
sbbl
xchg
xchg
jo
rorl
mov
and
int
into
dec
lcall
adc
clc
jno
xor
cmp
pop
lea
or
cmpxchg
push
or
in
data16
fwait
mov
out
sbb
ret
fidivrs
cld
test
push
in
mov
into
rcrl
mov
cltd
mov
mov
xchg
jno
orb
push
sbb
mov
mov
mov
inc
movb
out
xor
mov
push
mov
popl
les
mov
mov
and
mov
ror
push
test
cmp
adc
xchg
pop
push
add
repnz
int
inc
jb
xchg
push
inc
cltd
pop
cmp
mov
xchg
je
nop
add
and
lods
lcall
daa
frstor
ret
outsl
inc
push
cmp
roll
fsubs
test
cmp
in
clc
shlb
push
dec
cmpsb
sub
pop
arpl
into
jae
fcmovne
xchg
xchg
addr16
mov
mov
push
inc
dec
jge
inc
and
jge
inc
lods
int
daa
dec
push
mov
fldz
pop
mov
inc
mov
or
adc
movsl
jns
pop
out
in
or
cld
push
mov
pusha
cmp
xchg
jge
fsts
sub
jl
inc
push
mov
pop
sti
or
push
mov
inc
nop
outsb
push
rep
pop
sbb
ss
sahf
rcl
push
push
mov
mov
mov
mov
dec
mov
test
xchg
push
mov
repz
add
sub
nop
shll
pop
bound
inc
push
mov
adc
sti
imul
sub
ret
jnp
enter
pop
aas
loop
xchg
nop
mov
or
xchg
inc
aas
rcrl
lods
or
into
dec
mov
lret
mov
mov
inc
push
bound
jb
and
xchg
pop
and
xchg
cltd
sarl
inc
outsb
shll
sbb
fdivl
shrl
jae
inc
mov
jle
mov
mov
or
mov
aas
data16
jp
mov
das
pop
xor
scas
test
jb
sbb
loop
dec
cmp
jb
bound
mov
mov
mov
scas
jae
shr
lret
or
pop
pop
ja
push
test
sarl
sar
test
test
enter
xchg
adc
mov
ds
ret
or
inc
mov
mov
xchg
or
rol
inc
cmp
into
jmp
stos
cmpsb
ja
stos
movsl
andb
subb
icebp
imul
bound
lds
int
push
adc
iret
xchg
test
into
mov
xor
popf
in
sub
cmpsb
dec
mov
xchg
push
fs
sub
mov
push
xchg
ljmp
aaa
pop
cmp
dec
adc
mov
outsb
push
inc
lcall
lds
mov
push
xor
xor
loope
stc
dec
sub
inc
sar
pusha
mov
mov
mov
inc
sarl
cmp
jle
fwait
inc
xchg
jbe
jb
imul
mov
movsb
inc
sbb
call
jb
out
nop
dec
adc
fwait
iret
pop
inc
scas
jecxz
cmp
mov
mov
add
push
jno
stos
xorl
mov
push
jle
fdivrl
push
mov
adc
cmp
inc
inc
cmp
xchg
or
push
push
insl
scas
cmp
in
dec
add
ljmp
xor
and
ror
and
xchg
jp
enter
scas
mov
pop
or
cli
pop
bound
adc
bound
rcl
dec
into
add
aam
cmp
mov
out
lcall
xchg
getsec
xor
and
pop
xchg
pusha
vmptrld
es
push
mov
jno
push
rorb
xchg
lahf
inc
xchg
adc
sub
dec
pop
fst
cwtl
gs
inc
repnz
cli
cmp
lds
mov
test
paddsb
or
adc
stos
jg
sbb
xchg
mov
sub
stos
jp
lds
dec
outsb
cltd
popaw
in
lahf
dec
std
add
out
movl
sti
jmp
addr16
fwait
push
popa
sub
dec
sti
pop
es
adc
sahf
je
scas
push
ss
in
addl
inc
enter
jno
roll
imul
fidivrs
pop
into
mov
adc
pop
push
jp
mov
cmp
cltd
jnp
lods
cmp
add
mov
dec
dec
repnz
push
jge
pop
idivb
ret
mov
outsl
jecxz
movsl
inc
lea
add
int
inc
adcl
push
ds
add
sub
push
lods
cltd
jnp
out
lea
mov
imul
inc
sub
mov
fiadds
mov
test
ret
out
pusha
and
push
cmpsb
sbb
inc
scas
call
aaa
and
push
cmp
lret
ljmp
popa
in
sub
lahf
mov
mov
leave
mov
fnstcw
aam
xor
enter
inc
aam
xor
shlb
push
xchg
inc
mov
mov
jecxz
jp
add
scas
pusha
shll
or
pop
adcb
int
mov
inc
in
mov
test
adc
mov
sarl
and
inc
jg
xchg
fisttpll
pop
xor
sbb
lea
mov
xor
gs
inc
imul
out
mov
inc
sub
sub
roll
and
jmp
fists
fidivl
mov
mov
add
les
adc
or
lea
jne
xchg
adc
fcoms
add
das
shrb
test
adc
pop
mov
mov
xor
scas
sbb
add
in
addb
dec
pop
lcall
aam
ljmp
add
adc
in
rol
jge
fadd
mov
ret
loope
repz
ficoml
xor
cli
addr16
cmc
adc
or
cmp
mov
les
movsl
arpl
popa
jbe
jb
loope
popf
mov
lea
fidivrs
adc
dec
jle
les
xor
push
lods
repnz
adc
dec
dec
fistl
xor
dec
fwait
inc
sarl
shll
cld
shl
es
xchg
lea
jnp
jg
sub
test
lar
ss
cmp
js
mov
leave
lock
cmp
mov
loop
jg
lods
push
jg
mov
aam
jb
lcall
popf
sbb
and
or
jmp
sbb
sbb
inc
divl
adc
rorl
xchg
xor
jne
mov
icebp
loop
adcl
out
sub
addl
rcll
xor
jns
inc
std
pop
scas
dec
mov
sub
orl
into
jmp
fmulp
push
rcrl
inc
inc
shrl
jb
xor
push
popa
adc
popf
sub
cmp
ret
mov
fwait
mov
cs
add
icebp
xchg
mov
loope
jle
sarl
push
jg
push
faddp
dec
andb
sbb
bound
mov
mov
in
mov
icebp
mov
jo
xor
cltd
jb
rcrb
lcall
jo
pop
fadds
movsb
jge
icebp
add
mov
mov
jg
jno
pop
lock
inc
int
xchg
fisubl
sub
addr16
rorl
cmc
mov
push
adc
nop
es
aam
xchg
dec
rcll
in
push
pop
outsl
popa
mov
pop
repz
push
ltr
ficoms
sub
push
mov
add
dec
jne
rol
add
fdivr
jae
movsb
add
or
repnz
into
jns
inc
pop
pop
mov
das
jbe
sahf
mov
xor
and
pushf
or
stc
mov
mov
jbe
pushf
pop
movsb
fdivrs
xor
test
mov
mov
ret
xor
jl,pt
dec
mov
mov
sub
sbb
aam
push
int
xchg
xor
rcrl
mov
cmpb
pop
adc
pop
into
xchg
inc
cmpsl
idivb
cs
dec
sbb
lcall
mov
pushf
cmp
ss
in
pop
movsb
ds
mov
xchg
nop
iret
push
in
lock
inc
orl
pop
pop
sub
cmp
or
add
iret
mov
add
push
cmp
int
and
mov
inc
add
insb
xchg
inc
adc
loope
mov
jb
mov
data16
cmp
push
mov
test
xchg
mov
adc
dec
jg
fwait
xchg
cmp
mov
sarl
mov
adc
jnp
cmpsb
loop
mov
test
and
addr16
push
inc
pop
mov
push
imulb
imul
push
movsl
ss
test
or
add
fs
inc
push
jg
push
lods
jnp
fcomi
cmc
repz
jge
shl
stos
icebp
cmp
notb
dec
sbb
addr16
pop
pop
jbe
aaa
icebp
fstpt
clc
js
adc
xor
and
inc
shll
xor
push
stc
pop
mov
shr
pop
clc
mov
popf
xor
in
subl
lret
dec
stos
xor
cs
repz
lods
arpl
push
in
movsb
jecxz
out
cmp
shll
mov
inc
mov
jecxz
and
cwtl
sbb
mul
jge
repnz
jae
xor
inc
adc
in
loop
mov
xchg
adc
jb
xchg
add
dec
ret
test
jb
jo
scas
sbb
push
adc
outsb
icebp
push
cltd
adc
test
fdivrs
stos
inc
mov
int
xchg
mov
sub
xchg
and
pop
pop
fs
push
cmp
jp
lahf
sbb
rclb
xchg
jo
jecxz
inc
aas
cwtl
mov
xchg
out
and
pop
imull
fwait
jb
mov
mov
or
stos
inc
or
lcall
jns
jp
cmp
faddl
stc
movl
fwait
lcall
movb
dec
add
test
jbe
cmpl
sub
mov
ffree
xchg
inc
mov
jge
das
push
rcll
stc
test
pop
pushf
mov
xchg
ss
jge
sahf
int
sub
push
adc
xor
add
mov
inc
xchg
cwtl
ret
sbb
jno
cmpsb
inc
inc
adc
push
or
sbb
mov
push
out
mov
pop
movsl
shll
mov
or
sub
sbb
cld
sbb
rol
dec
shlb
ds
push
test
rol
cmp
xor
fiaddl
adc
shll
push
aaa
fistpll
inc
dec
mov
scas
aad
inc
xor
push
add
test
pop
ficoms
adc
mov
mov
data16
inc
inc
lods
jge
data16
inc
fwait
push
xchg
popf
int
jbe
inc
insl
cmc
cmp
adc
fs
je
pop
inc
jne
cmp
lock
inc
push
mov
inc
cmp
jno
inc
or
fcoms
add
cld
les
mov
and
mov
pop
dec
decl
jge
push
sub
in
mov
pushf
scas
shll
loope
pop
sub
jnp
dec
xor
push
inc
rcll
cmp
rorl
inc
mov
sub
inc
imul
test
ljmp
add
bound
xor
xor
lods
mov
rep
mov
inc
mov
and
ljmp
pop
mov
stc
test
sub
inc
cs
cmc
pop
jo
fldl
icebp
lea
divb
adc
inc
push
in
xor
insl
adc
and
scas
sub
pushf
cmp
jbe
xor
daa
fs
push
dec
push
sub
out
sub
inc
or
ljmp
enter
sbb
lret
push
pop
pop
xor
popa
notl
xorl
mov
pop
inc
xor
test
sub
clc
xor
push
push
cltd
mov
cmp
add
xor
std
lret
cltd
add
gs
mov
mov
sub
sarb
push
mov
mov
inc
imul
xor
push
into
xor
cmp
subl
scas
ja
repz
mov
jo
push
inc
inc
aam
jne
sbb
jmp
int3
jmp
mov
jb
mov
sub
mov
stc
xchg
mov
call
mov
mov
aad
fstpl
aaa
mov
aam
mov
sub
and
inc
stc
outsb
jnp
aam
adc
inc
inc
lock
pusha
cli
leave
push
jo
scas
lds
fsubs
cs
push
mov
jle
repnz
aam
pushf
test
icebp
cmp
xor
dec
stc
add
ret
inc
movsl
sahf
data16
into
adc
psubw
xchg
aam
push
mov
inc
xor
cmpsb
lock
cmc
adc
scas
jg
dec
mov
clc
mov
mov
jge
rorl
sub
stc
cltd
push
and
cmc
pop
or
cli
mov
scas
scas
xor
ja
pop
sub
and
xor
insl
fistpll
cmpsl
pop
cld
jmp
dec
mov
shr
inc
stos
lock
cmp
jno
and
loope
inc
test
jnp
stc
mov
adc
mov
aam
inc
xor
jb
fistpl
pop
sbbb
rclb
xchg
mov
dec
push
fcomps
xchg
fcompl
sbb
jns
cmp
inc
out
out
in
inc
mov
dec
enter
mov
inc
dec
test
cld
cs
xchg
into
inc
pop
mov
cmpsl
mov
repz
pusha
out
loopne
call
mov
mov
es
xchg
roll
repnz
stos
jo
icebp
int
std
lret
sbb
add
adc
in
cmp
push
aas
movsl
add
add
xchg
push
xor
cmp
add
dec
push
push
add
inc
shl
xor
sbb
in
lock
xor
pop
jnp
mov
xchg
pop
mov
inc
jg
cld
mov
lret
lds
insb
iret
out
fimull
or
add
scas
or
loope
pop
int3
or
add
xor
or
nop
fldt
fiaddl
jge
sub
inc
dec
sbb
lcall
bound
subl
add
push
imul
pop
jb
mov
cmp
mov
jg
es
sahf
push
loope
into
mov
mov
sub
xor
nop
stos
sub
pop
mov
jae
js
inc
xchg
cmp
sbb
jne
and
inc
mov
add
jbe
insb
stos
fistl
jle
insb
in
push
rorb
xlat
sahf
and
jecxz
daa
outsb
xor
xor
adc
jle
andl
push
pop
push
loop
test
fisubl
rcr
xor
add
nop
adc
cli
pusha
mov
pop
mov
andl
add
xchg
xchg
into
mov
mov
pop
push
push
jns
mov
fs
popf
idivb
or
jo
inc
popa
ja
xor
adc
movsl
and
and
test
and
adc
nop
aad
mov
inc
adc
mov
cmp
popa
dec
add
pop
mov
sub
in
aaa
aaa
mov
hlt
mov
into
jbe
push
fmuls
cmp
loope
add
aaa
jg
or
inc
stc
iret
andb
cmp
xchg
dec
pop
mov
out
pop
iret
std
mov
adc
push
imul
push
data16
in
nop
mov
xchg
push
movb
mov
loope
mov
fwait
push
ss
adc
and
adc
dec
outsb
add
rclb
roll
and
add
adc
cld
inc
outsb
iret
fstpt
push
jp
mov
es
outsl
cmp
push
adc
outsb
in
pop
mov
nop
rcll
in
out
sub
push
stos
mov
rol
adcl
xchg
and
xor
lret
out
lods
cmp
add
jecxz
or
fcoml
xor
sub
cld
es
push
std
xchg
shlb
mov
out
into
mov
adc
xchg
lods
push
jo
lock
and
adc
push
sahf
lea
cmp
adc
inc
dec
push
inc
jno
push
cmpsb
xor
mov
js
push
and
adc
and
inc
xor
test
mov
repz
fidivs
std
arpl
xchg
sub
test
fnstsw
add
scas
fisubrl
in
dec
cmpsb
lea
cld
dec
push
mov
mov
fistpl
cli
dec
insl
sub
jo
jno
inc
adc
jne
cmp
outsb
movsl
push
xchg
rorl
mov
aam
cmp
test
push
in
adc
jnp
dec
outsl
sub
mov
pop
mov
les
cmp
xchg
inc
enter
pop
mov
dec
cltd
addr16
in
mov
cmp
or
adc
mov
jns
notl
jmp
bound
mov
adcb
jbe
call
aaa
jmp
jne
mov
test
fstpl
xchg
rorb
adcb
add
pushl
push
dec
mov
sub
jecxz
test
popl
ss
stos
mov
stos
pusha
xor
mov
pop
xchg
sysexit
lods
popl
mov
dec
mov
pop
adcl
pusha
push
shl
fidivs
test
mov
int
push
lcall
pop
cs
cmpsb
ljmp
pop
test
push
or
push
dec
push
fdivl
lods
add
out
xchg
lea
out
dec
ds
push
adc
push
iret
in
rorb
sbb
add
test
push
inc
mov
jle
in
mov
lods
push
jle
mov
scas
jbe
or
mov
mov
pop
ja
aam
pop
jg
clc
adc
scas
dec
pop
inc
shll
rorl
adc
les
inc
jg
cli
mov
jl
lock
xchg
icebp
adc
in
mov
jecxz
jl
ljmp
sbb
jnp
cmp
loop
outsb
sbbb
lcall
xor
pop
test
mov
orb
rol
fildll
out
jmp
xor
arpl
dec
loop
aaa
out
aam
in
adc
sbb
loopne
adc
imul
dec
cmp
sbb
xor
out
push
jecxz
cmp
mov
orb
dec
mov
clc
mov
in
mov
addr16
push
xchg
sbb
sbb
insb
jecxz
js
pusha
jg
mov
mov
lods
lock
push
mov
mov
andb
repz
dec
cmp
sahf
dec
add
mov
inc
pop
and
ds
bound
pop
jno
out
xorb
popf
fnstenv
xor
negb
lds
ljmp
into
fucomp
mov
loopne
mov
mov
jecxz
xchg
mov
int3
test
inc
or
mov
sbb
adc
cmp
in
xchg
movsb
imul
mov
pop
adc
ror
xor
out
shll
adc
pop
insl
out
push
mov
jns
scas
sub
add
rolb
xor
inc
pop
das
mov
mov
inc
mov
jae
cmp
xor
sub
and
jno
lea
stos
insl
inc
shll
mov
ljmp
sub
roll
mov
jns
aam
insl
jp
dec
adc
pusha
cmp
inc
cmp
inc
or
xchg
test
push
dec
mov
dec
fidivrl
xchg
hlt
out
jnp
clc
aam
cmp
sahf
push
movl
cmp
pop
leave
sahf
mov
sbb
cmp
rorb
clc
cmp
imul
mov
jnp
aaa
jnp
mov
stc
cmp
inc
dec
inc
stc
mov
scas
fwait
jle
xchg
arpl
addr16
xor
rol
into
frstor
lods
cmp
adc
xsaves
xor
sti
dec
cltd
mov
cmc
sub
sub
outsb
inc
daa
sub
cmc
cli
dec
jge
scas
sbb
mov
mov
ficompl
cmp
insb
jmp
lcall
and
pop
jno
test
fwait
dec
jmp
outsb
out
int
add
cmpsb
lahf
roll
pop
cmp
ret
out
sbbl
jp
push
xor
push
into
adc
jno
sub
cvtpi2ps
test
jae
rcll
das
jno
enter
mov
pop
sub
xchg
popa
sar
mov
push
ljmp
adc
mov
mov
xor
pop
ret
hlt
xchg
aad
and
inc
jnp
jb
push
mulb
sahf
into
cmp
and
inc
std
leave
fmull
xor
or
mov
popa
pop
mov
leave
outsb
inc
xor
adcb
jle
adc
inc
or
lcall
dec
ds
push
cwtl
pop
xor
unpckhps
jp
sahf
outsl
jno
jne
cwtl
outsb
popa
cmp
jbe
sub
xor
gs
xor
jnp
cmp
andb
adc
hlt
push
dec
out
in
adc
xlat
push
mov
xchg
nop
loopne
push
cmp
mov
movsl
dec
xchg
imul
cmp
rol
cmp
xor
sbb
ljmp
jnp
or
or
mov
adc
push
push
pop
and
jl
xorl
gs
mov
cmpb
xchg
aas
jp
inc
adc
loopne
sbb
jbe
test
stos
xorb
mov
les
imul
xchg
loop
jnp
das
xor
shlb
inc
out
mov
addb
xchg
fwait
push
lcall
pop
xchg
jo
rcr
push
into
gs
push
andb
xchg
loope
xor
outsl
jmp
xchg
sub
inc
fidivrs
adc
jo
xor
push
jp
lods
jae
push
shll
sub
push
sub
xor
xchg
popf
outsl
pusha
les
popa
test
imul
ja
xor
sub
pop
cmp
and
movsb
adc
outsb
pop
pop
in
ss
jns
ffree
aad
push
mov
arpl
or
mov
xchg
xchg
sti
mov
push
mov
out
xchg
stos
roll
add
or
pop
lods
jae
cmp
loope
notl
jle
icebp
test
in
sbb
sbb
out
jl
mov
cmp
jno
dec
sbb
scas
mov
in
iret
fldcw
mov
mov
or
jmp
aaa
rol
out
pop
mov
add
mov
push
push
incb
sarb
ss
nop
pop
xor
lods
inc
mov
pop
mov
push
jge
and
cmpb
push
mov
xchg
xor
or
xchg
movsb
jo
out
lods
pop
mov
pop
iret
mov
ret
inc
push
jl
xchg
mov
and
xadd
popf
dec
add
adc
and
stos
popf
pop
pushf
pop
dec
xchg
test
divb
shlb
jnp
stos
icebp
int
sub
jecxz
jge
sti
vcvttsd2si
inc
sbb
in
gs
sub
mov
ss
lds
xor
nop
outsb
cmc
push
roll
and
xchg
mov
adc
fdivrp
call
inc
adc
or
sub
mov
mov
xchg
jle
scas
pushf
dec
stc
imul
popf
adc
ret
repnz
mov
add
insl
push
jo
loopne
cli
dec
cmp
mov
adc
movsl
ds
in
mov
pop
sub
lcall
jl
sub
in
adc
xchg
inc
sub
cltd
mov
jle
insl
push
xchg
stos
add
sub
leave
inc
mov
fcoms
jne
ficoms
push
test
das
pop
jg
push
fs
push
dec
js
xor
or
mov
jne
dec
sbb
pop
xorb
mov
aas
pop
pop
loop
push
out
xchg
ds
push
jge
shrl
stos
inc
das
mov
xor
lods
lgs
push
arpl
push
daa
movsb
iret
push
pusha
rorl
or
add
xchg
xchg
fwait
and
rorl
sub
pop
pop
in
rcr
mov
fiaddl
stc
in
xchg
cli
cmpsb
and
dec
jno
leave
jno
int
xor
bound
das
cld
and
and
andb
pop
cmp
aam
inc
inc
dec
mov
bound
xor
xchg
sahf
adc
scas
xlat
add
lods
pop
mov
and
mov
push
dec
add
shll
into
inc
idivb
dec
orb
inc
movsbl
and
pop
outsl
cmpsl
sub
cmp
je
sahf
mov
shl
daa
paddsb
add
lds
imul
sub
ret
xchg
outsl
mov
out
insl
enter
adc
and
out
test
sub
jmp
es
enter
mov
xor
inc
jmp
dec
xor
lds
js
push
sbb
movsl
dec
in
imul
inc
jl
inc
push
ds
addr16
xchg
mov
mov
in
push
cmpsb
or
in
test
jp
mov
faddl
add
cltd
pop
push
sti
sub
imull
mov
add
pop
mov
xchg
mov
leave
cli
sahf
push
fisttpll
mov
pop
adc
lahf
je
adc
mulb
scas
fs
pop
mov
cli
jge
xor
roll
and
mov
ds
jbe
push
imulb
orb
xchg
push
xor
leave
or
sbb
pop
xlat
inc
iret
cmp
and
test
xor
dec
insb
mov
outsl
jns
pushl
bound
sahf
jbe
inc
push
cmp
adc
adc
push
push
sbb
push
inc
movsb
xchg
jae
cmc
cld
sbb
xor
fisubrl
cmp
outsb
vminpd
push
sbb
pop
fnclex
push
shll
xchg
das
mov
shrl
or
and
inc
popf
stc
outsb
push
vminpd
stc
into
adc
dec
mov
out
sub
pop
sbb
mov
mov
es
xchg
and
xchg
ljmp
or
jg
loop
push
push
aaa
xor
data16
test
inc
sbb
shrl
jl
ret
pop
push
inc
call
pop
pop
cmp
mov
dec
jecxz
pop
in
iret
rcll
dec
push
bound
xor
xchg
aaa
fsubl
fsubl
mov
add
lods
pop
mov
fiaddl
sbb
add
sub
in
gs
push
adcl
or
xchg
add
and
sub
push
xchg
sahf
push
jns
out
inc
cwtl
push
mov
and
adc
inc
call
or
add
xor
sahf
ret
inc
call
jns
insl
ljmp
push
leave
mov
mov
push
add
add
lock
cld
shll
cmpb
push
pushf
add
mov
xlat
pop
pop
fwait
outsl
mov
cmpsl
jle
hlt
scas
xchg
in
jge
stos
or
test
movsl
mov
lds
dec
xlat
inc
xchg
push
mov
or
push
jb
dec
lcall
or
cmp
lret
imul
mov
adc
cltd
dec
jb
jno
mov
test
push
jb
push
push
test
in
pop
xchg
mov
scas
pop
shl
mov
push
movsl
stos
push
jo
mov
lods
popf
nop
adc
mov
stc
mov
cld
sub
stc
jg
fisubs
cmp
fsubs
jno
les
dec
testb
add
cmp
imull
mov
pop
fwait
in
jp
mov
and
push
loope
push
int
lret
cmp
mov
test
sub
lahf
cmp
inc
cmp
mov
mov
outsb
call
xor
rorl
mov
cld
dec
cmp
outsl
inc
jmp
lahf
jge
lds
loope
inc
ret
cs
dec
adc
outsb
inc
dec
scas
push
fldenv
cmp
mov
jnp
stc
xchg
jae
icebp
mov
mov
icebp
outsb
jne
dec
outsb
xchg
insl
pop
scas
sbb
es
xchg
in
xlat
pop
int
ret
jns
scas
mov
test
xor
mov
rclb
popf
jge
ss
fidivs
push
cmpl
filds
pop
pop
and
loop
push
inc
or
and
sbb
lret
cmp
test
pushf
mov
xor
mov
cmp
sbb
imul
jmp
mov
mov
mov
loop
and
stos
and
pop
je
rcrb
nop
cmp
ss
inc
cld
sbb
sbbb
sub
xlat
jns
mov
jmp
stc
xchg
cmp
in
or
bound
mov
jmp
cmp
scas
lock
ret
pop
pusha
jns
test
ss
fldt
int
mov
sbb
mov
and
mov
jl
xchg
sbb
ret
sbb
cltd
popf
xor
shrl
lea
pop
xchg
xor
in
leave
les
aad
or
data16
push
xor
add
mov
mov
adc
into
in
jne
jo
lods
adc
jae
add
popa
sbb
ljmp
pop
mov
ds
fildl
mov
mov
jp
lea
push
js
ljmp
sub
out
mov
jp
int
mov
stc
inc
xchg
loope
push
pop
jmp
ret
sub
sbb
int
dec
movsl
loopne
popf
aaa
fcmovu
lret
ja
mov
mov
repz
cmp
iret
lret
cmpl
shlb
and
mov
cmpsb
xchg
es
and
pop
mov
jg
and
xor
or
xchg
ret
lods
dec
mov
push
fstps
jg
and
sub
lret
lahf
and
mov
add
add
xor
int3
outsb
icebp
incb
loope
jp
push
cmpsb
out
or
push
cld
fiaddl
jnp
inc
dec
jg
jg
sub
jge
ror
sbb
xchg
sub
test
cmp
pop
xchg
xchg
lcall
xor
xor
mov
mov
sub
lret
sbbb
mov
int3
rcl
jb
int3
bound
dec
xchg
mov
inc
xchg
xor
push
xor
loop
mov
mov
cmp
into
or
addr16
cmpl
inc
adc
adc
pusha
imul
bound
xor
xchg
xor
rcll
cs
fdivl
push
inc
dec
push
mov
jmp
jnp
cmpsl
push
cmp
pop
les
adc
xchg
adc
inc
pop
movsb
push
dec
test
inc
xchg
mov
insb
mov
jb
movl
add
mov
xor
mov
test
cmpsl
xor
lea
nop
pop
cmp
jb
int
aaa
sbb
sbb
in
sub
adc
cmpsb
xchg
lret
add
lcall
adc
lcall
sub
pop
pusha
sbb
mov
mov
push
filds
repz
xchg
fbstp
leave
sti
jne
stos
mov
pop
ss
cmp
lcall
into
loope
dec
cmpsl
cmp
inc
sub
in
mov
mov
add
adc
mov
pop
cli
xor
lahf
and
inc
imul
sub
adc
jg,pt
aas
and
cwtl
mov
mov
mov
scas
movsb
ds
adc
stc
add
mov
addr16
inc
js
mov
gs
jmp
dec
in
fwait
sub
call
shlb
fistpll
int3
mov
push
call
add
je
mov
icebp
push
mov
mov
clc
push
jnp
adc
mov
movsl
js
and
fisubs
fs
out
pop
lcall
andb
cmpsb
int3
iret
adc
and
and
sbb
fwait
cmp
fwait
aad
setge
adc
dec
ret
repz
fadd
lea
flds
inc
lds
xchg
jge
pushf
push
jb
xchg
stos
sbb
xchg
sbb
inc
out
mov
mov
fcmovnbe
sbb
sbb
sbb
call
mov
or
outsl
leave
inc
fldcw
loopne
insl
jge
sbb
or
in
jp
jb
mov
cmpsl
sub
xchg
add
xor
jmp
iret
mov
jno
je
je
push
arpl
adc
cs
and
add
lea
adc
mov
or
out
cld
mov
and
add
fdivrs
xchg
cmpsb
jne
or
add
enter
sub
lea
inc
cwtl
lods
push
cmp
mov
lret
gs
pop
nop
mov
mov
shll
fstps
jb
faddp
push
ret
mov
mov
push
notb
jo
lcall
mov
stos
mov
cmp
or
inc
enter
mov
arpl
mov
rcll
mov
rorl
stos
inc
sahf
stc
fisttpll
cmpsl
pop
jecxz
lods
sbb
mov
inc
sub
or
sbb
dec
shrl
sub
dec
push
jb
mov
mov
adc
mov
pause
xchg
or
cs
mov
rclb
adc
xchg
sbb
xchg
fsubl
cwtl
add
mov
xchg
arpl
pop
mov
shl
orb
inc
adc
mov
js
mov
mov
dec
inc
jne
daa
mov
inc
and
inc
mov
loopne
scas
mov
adc
adc
mov
push
in
add
add
mov
mov
aaa
or
fistpll
stc
inc
nop
mov
sub
jecxz
xchg
stos
jg
cmp
loop
stc
or
mov
cmp
push
clc
movsb
or
adc
mov
inc
adc
add
leave
mov
sbb
dec
bound
dec
or
push
xor
mov
ljmp
sub
ret
jg
pop
into
adc
aaa
stc
fidivl
mov
fstpl
lea
dec
rcl
ret
mov
sub
lcall
add
daa
inc
jae
adc
or
movsl
shlb
ror
in
inc
adc
sbb
jne
pop
dec
adcl
dec
jg
out
mov
dec
aas
jns
xchg
cld
popa
stc
push
mov
add
mov
ds
dec
cmpsl
add
inc
fisubl
add
and
pop
jno
add
mov
inc
subb
andl
xor
mov
rcrl
js
dec
sbb
outsb
das
icebp
pop
int
inc
orl
sub
mov
add
adc
mov
into
cmp
mov
icebp
inc
adc
xchg
pop
inc
movsl
loop
cmp
push
adcb
adc
roll
adc
lcall
shr
stc
cvtdq2ps
sbb
repnz
es
mov
icebp
ja
jg
scas
add
mov
xchg
imul
cmp
sub
add
inc
adc
ljmp
repnz
mov
int3
mov
jecxz
xchg
adc
add
stc
rolb
inc
xor
outsl
into
dec
mov
fdivrl
cmpxchg8b
int
inc
inc
lods
inc
xchg
popf
and
xor
fldcw
hlt
xchg
adc
cmp
jmp
dec
gs
inc
or
jecxz
fisubl
xchg
popf
dec
or
call
cwtl
inc
and
jl
loope
rcll
ss
jno
push
cmp
roll
push
testb
push
nop
popf
xchg
cwtl
mov
cltd
shlb
pop
loop
push
mov
test
popfw
push
jmp
sbb
lret
jb
dec
bound
mov
adc
mov
out
jl,pt
adcb
add
enter
loope
xchg
lds
xchg
push
mov
cs
icebp
scas
jg
mov
push
sbb
push
insl
cmp
test
cs
sub
out
out
dec
popa
loop
lds
push
lock
lods
jno
xor
icebp
in
movsl
jmp
and
mov
sub
push
mov
jge
xor
dec
fbstp
xor
bound
jg
push
fcoms
in
movsb
rclb
adc
add
mov
mov
mov
adc
xor
xor
aad
outsb
adc
ljmp
pusha
dec
or
pop
cmp
push
push
fiaddl
add
cli
lret
cs
gs
push
mov
mov
rcrl
lods
mov
or
decb
mov
shrl
sub
xor
or
cmpsb
pop
mov
push
cwtl
shll
and
cmp
mov
scas
loop
push
lcall
xchg
mov
fs
push
inc
ret
xchg
ret
out
xor
inc
lahf
jo
mov
xchg
stc
int
imul
push
jmp
inc
leave
inc
inc
sub
aam
rcrl
loope
and
out
in
sub
add
andb
add
mov
fwait
cld
stos
call
arpl
jle
mov
bound
sub
leave
nop
adc
mov
lea
fildl
inc
jecxz
fildll
outsb
cmp
js
repnz
cmp
sub
and
faddl
push
mov
ret
nop
adc
jge
mov
sub
das
roll
sarb
and
dec
sbb
push
nop
sarl
mov
dec
adc
mov
aaa
ds
jae
adc
enter
xchg
shl
out
mov
and
cltd
bound
popa
lret
lea
nop
jl
ret
push
mov
stos
sbb
loope
push
sar
nop
push
inc
aad
and
and
lahf
lret
pop
lret
xor
mov
outsb
into
in
in
dec
push
test
push
and
mov
daa
sub
adc
adc
push
jg
and
cmp
mov
ds
add
xor
pop
adc
lret
mov
rorl
adc
jbe
xchg
mov
arpl
sarl
or
cmp
jg
inc
adc
xor
jle
mov
das
std
sahf
clc
mov
rorl
lret
xor
cmp
cmpsl
jecxz
out
scas
inc
mov
loopne
mov
shll
cmp
sbb
addr16
scas
push
mov
and
mov
dec
pushf
shll
popa
and
mov
cltd
pop
xchg
out
shlb
test
push
mov
mov
jmp
cmpsl
mov
ret
mov
fsubrl
xor
bnd
popf
lea
shrd
fisttpll
inc
jg
jmp
rcrb
sbb
adc
mov
data16
ljmp
ret
push
lret
adc
ja
leave
sub
lahf
adcb
shlb
mov
cld
adcb
push
cmpsl
jae
fdivl
jb
xchg
in
mov
inc
jecxz
popf
ret
pop
lahf
insb
lods
rorl
lock
out
sub
add
inc
orl
arpl
inc
xchg
or
inc
bound
shll
xchg
mov
add
repz
out
mov
sub
imul
and
jle
scas
sub
push
sub
mov
mov
cmp
sbb
mov
out
mov
into
or
and
mov
adc
aas
mov
push
fisubrl
rorl
adc
adc
imul
ljmp
push
add
mov
jmp
mov
jb
call
outsl
cmpsb
fs
int
cmp
dec
insl
std
push
sub
into
mov
mov
xor
enter
cmpl
mov
xorb
add
and
sbb
ja
aam
imul
mov
mov
sbb
mov
dec
sbb
test
clc
lea
es
inc
jne
jns
ficompl
lcall
cltd
mov
push
inc
psrad
sub
push
push
and
mov
mov
mov
popa
mov
xor
inc
in
rcrb
jb
xchg
popl
imul
imul
and
jg
ret
adc
push
sub
jno
jo
mov
addr16
mov
inc
jge
and
pop
mov
cmovb
and
add
sarl
inc
lods
pop
lea
dec
pushf
or
cs
je
cltd
dec
inc
jb
out
and
ja
fldl
test
add
insl
xchg
roll
ss
add
cmp
mov
jp
bound
inc
push
or
loopne
sub
push
add
inc
sub
mov
pop
test
aam
lret
fistl
inc
and
jne
mov
es
cmp
adc
lcall
insl
int
cs
test
into
mov
jb
insl
cmp
mov
mov
je
in
cmp
mov
or
jo
in
xor
pop
xchg
push
popa
dec
leave
andl
xor
cltd
xlat
jge
inc
test
xchg
addr16
ret
icebp
loope
push
xlat
ljmp
lods
lods
add
add
sbb
push
int3
jmp
xlat
rcrl
jno
xchg
out
sarb
jbe
dec
shll
andl
rolb
adc
out
ds
mov
add
jg
inc
orl
inc
xor
fst
cmpl
fldl
cs
inc
push
cmp
test
mov
cwtl
sub
enter
in
jb
or
ret
dec
iret
pop
sub
inc
sbb
data16
mov
mul
jecxz
mov
loope
pop
xlat
push
subl
cli
add
push
adc
jno
mov
popf
bnd
scas
xchg
addl
mov
cmp
inc
jp
mov
mov
push
outsl
cmp
xchg
xchg
mov
ret
mov
insb
sarl
mov
fistpll
lahf
andb
mov
mov
push
push
lret
jno
iret
push
inc
inc
jno
hlt
out
push
shll
sbb
mov
loopne
add
mov
dec
add
mov
inc
cmp
out
outsb
cwtl
mov
adc
test
xor
sub
push
repz
xchg
mov
imul
pop
sub
push
push
xor
jb
jbe
out
and
mov
shll
roll
inc
shlb
lcall
xor
inc
xor
mov
mov
xor
sbb
jge
dec
adc
xor
inc
lock
xchg
out
mov
push
cmp
add
ret
push
leave
pop
jecxz
bound
lret
in
cmp
movsl
adc
mov
add
mov
mov
les
aam
out
movsl
loope
das
xchg
aaa
int
push
test
test
pop
and
jmp
xor
sbb
jle
dec
daa
gs
shll
dec
jmp
in
adc
add
inc
jno
sbb
sahf
xchg
bound
repz
lahf
push
imul
or
jge,pt
rcll
push
or
mov
leave
cmp
pop
mov
in
lret
shrl
inc
sub
xchg
negl
push
outsl
jp
xchg
cmp
mov
and
add
out
rclb
mov
int
into
lods
shl
call
test
sub
nop
rorb
int
mov
cmp
xor
dec
push
shlb
rorl
sbb
pop
mov
fdiv
sbb
fstl
nop
adc
add
mov
jnp
int3
dec
push
pop
stc
mov
jecxz
pop
mov
test
push
cmp
adc
xor
insb
xor
pop
jb
mov
pusha
adc
mov
xor
push
into
repz
fs
out
dec
xchg
xchg
nop
or
pop
dec
test
aad
xor
push
shlb
and
jo
dec
mov
push
mov
lds
ss
xchg
and
mov
pop
pop
adc
xchg
mov
andb
lock
es
push
mov
adc
idivl
inc
repnz
push
ljmp
mov
adc
adc
pop
push
mov
fnstsw
and
xchg
not
stc
push
clc
pop
nop
scas
adc
sbb
xor
sub
and
into
rclb
and
xor
lcall
mov
jge
in
inc
sbb
aam
mov
mov
xchg
lock
nop
lcall
fsts
and
loop
push
add
adc
mov
push
xor
push
adc
dec
sub
movsl
and
rcll
sarb
cs
xor
adc
lods
pushf
mov
lahf
inc
cmp
arpl
and
rcll
adc
inc
das
dec
test
out
inc
jb
and
hlt
js
push
fstpt
fimull
inc
or
mov
std
bound
inc
movsl
dec
push
sahf
push
inc
jle
xor
add
lahf
xchg
jge
cs
dec
stos
jne
shr
push
ja
mov
mov
push
mov
xchg
out
test
xchg
xchg
pop
dec
gs
xor
lods
scas
insb
mov
adc
xchg
or
addl
outsl
pop
sar
out
fimuls
rorb
daa
pop
shll
and
jb
xor
lret
js
aaa
jbe
nop
pop
inc
pop
cmovg
push
cmp
or
insb
icebp
daa
push
sarl
das
out
sar
lods
lret
adc
jnp
dec
dec
pop
cltd
push
push
inc
mov
ficoml
inc
mov
jge
jbe
mov
mov
sbb
pop
ret
push
push
xchg
test
jge
jno
popf
out
adc
ds
jl
adc
cmp
rcll
mov
insl
popa
movsl
mov
ss
push
into
pop
pop
movsl
test
lods
popf
stos
ror
mov
mov
adc
imul
in
pop
and
nop
jb
xor
enter
push
stc
int
add
nop
outsl
lods
cmpl
fistpl
into
adc
jl
sub
adc
pop
sbb
mov
call
add
inc
and
inc
jno
push
les
xor
fisttpll
mov
mov
cwtl
rorl
ret
xchg
outsl
xor
int
add
inc
arpl
cmpl
add
add
int
loopne
jle
and
mov
mov
repnz
inc
jl
mov
mov
inc
pop
popa
cmp
idivl
mov
jae
jl
add
popa
mov
or
std
xorl
sub
xchg
enter
arpl
adc
stc
nop
incb
data16
std
inc
cmpsl
fimull
rol
js
call
data16
mov
push
cmpsb
imul
in
inc
cli
push
fmuls
adc
dec
push
ds
xor
cmp
pop
push
xor
xor
pusha
mov
jne
fstpt
dec
mov
rclb
mov
add
add
and
addr16
lods
je
and
insl
aad
arpl
jo
into
pop
mov
popf
push
cld
test
scas
push
dec
cld
insb
pop
lret
call
outsb
jnp
mov
xchg
cmp
lock
pop
xor
scas
ret
mov
test
fisttps
xchg
mov
repnz
pushf
xor
mov
fiadds
frstor
pusha
mov
rcll
addb
xchg
daa
dec
or
xchg
js
cmpb
xchg
movsb
aaa
sahf
iret
sahf
mov
or
dec
addr16
adc
mov
pop
insl
mov
pop
out
movsl
ss
ljmp
jns
and
scas
shlb
ret
int3
push
xchg
loope
cmpsb
cmp
inc
lret
ret
xchg
nop
rcll
shrl
pop
mov
inc
push
ja
xchg
and
inc
fnstcw
popl
js
sbb
xor
mov
adc
jo
inc
loope
js
pop
mov
sbb
hlt
xor
sbb
mov
push
sarb
into
out
lret
mov
pusha
jg
es
mov
insl
fmull
pop
add
push
jg
push
cld
pop
or
push
cli
push
sub
adc
xchg
arpl
clc
sub
and
jg
cmpsl
xchg
jp
stos
inc
or
mov
stos
mov
push
cli
lods
mov
insl
xchg
cltd
clc
nop
and
inc
mov
enter
std
sub
insl
pushf
pop
cltd
test
push
pop
dec
mov
push
repz
lahf
sbb
leave
popf
insl
mov
and
inc
fisttpll
stos
jle
test
inc
movsl
mov
test
sbb
aaa
push
mov
data16
jae
leave
sbb
sub
cwtl
imul
in
in
movsb
clc
mov
mov
push
repnz
lds
mov
rcrb
aam
mov
add
pushf
xor
icebp
and
in
mov
inc
pop
cmp
test
jns
cli
jo
lea
repz
cmp
push
es
mov
push
pop
movsl
inc
inc
push
scas
dec
jno
mov
push
data16
arpl
push
addr16
lds
stos
idivb
push
sbb
addl
ja
popa
insl
jmp
adc
pushf
jns
into
rcrb
pop
dec
mov
push
pop
fstl
fisubl
outsb
dec
mov
dec
mov
adc
xchg
or
lods
lcall
outsb
mov
pushl
iret
and
mov
jp
stos
mov
or
in
adc
pop
xchg
push
cmp
mul
repnz
sar
fidivs
pusha
popl
das
arpl
mov
cmp
jg
int3
cmp
cmpsb
nop
rcl
push
sbb
les
mov
inc
outsb
fwait
dec
push
mov
xor
pop
jnp
cwtl
lea
inc
test
push
pop
scas
pusha
xchg
out
push
xchg
ficoms
and
in
data16
inc
je
pop
dec
data16
cmpsb
cltd
cmovo
mov
pop
sbb
push
or
arpl
test
push
mov
jecxz
addb
clc
mov
pop
scas
adc
rcl
ret
ret
mov
adcb
sbb
xor
add
ds
mov
lret
mov
xchg
sub
cld
mov
nop
push
mov
pop
shrl
clc
aam
mov
or
jp
and
mov
and
sbb
out
jecxz
adc
mov
push
nop
ret
loope
jg
and
bound
ficomps
sbb
adc
jnp
or
and
mov
add
rclb
mov
lods
fiaddl
pop
push
and
test
add
stos
and
mov
and
nop
ljmp
mov
repz
lcall
daa
xchg
cld
jno
jnp
es
sbb
invd
cmp
stos
leave
call
gs
mov
mov
add
cmpsb
movsl
mov
lret
dec
push
mov
mov
mov
pop
mov
int
daa
mov
mov
mov
js
ret
rolb
mov
data16
and
mov
mov
sub
int3
mov
fcoms
sub
repnz
test
addr16
jl
pop
xchg
or
int
adc
les
cmpsl
push
out
pop
xor
mov
insb
pushl
or
repnz
repnz
mov
aaa
das
or
jns
push
test
aas
inc
fimull
mov
ror
daa
mov
jp
loope
dec
mov
cmpsb
fstl
mov
int
out
sbb
jge
adc
cmpb
mov
dec
test
inc
push
aam
add
add
in
sbb
and
pop
push
mov
lret
xchg
cmp
jae
sar
and
pop
lods
jl
xlat
sub
cmpsl
mov
lock
dec
loopne
mov
movsl
fcmovb
jg
lock
sbb
shl
outsb
sub
adc
pusha
jmp
scas
mov
cmp
pop
inc
mov
push
stos
jg
nop
jge
fldcw
nop
jg
addr16
insl
test
shlb
adc
ja
sahf
pop
inc
mov
jg
cmp
xor
ret
mov
pop
sbb
in
cld
push
xchg
add
ror
movb
sarb
int
sub
jle
sti
cmp
cmp
adc
ds
shll
jb
push
mov
cmpsl
adc
enter
or
sub
std
ds
cmp
das
ret
inc
lret
xchg
cmp
and
in
mov
aad
adc
pop
nop
jb
inc
adc
leave
test
xchg
lods
adcb
pushf
jl
popf
repz
xchg
pop
dec
pusha
fiadds
jne
lea
mov
inc
int
cs
mov
pop
xchg
mov
dec
adc
inc
xchg
cld
xor
jecxz
mov
stc
andl
subl
and
sub
mov
mov
rcr
xchg
ja
xor
ret
and
cmpl
iret
in
repz
xchg
mov
push
iret
inc
mov
mov
fmul
jg
leave
push
mov
xchg
cmp
pusha
outsl
mov
ss
jnp
or
and
in
mov
jb
push
out
and
ss
sbb
int
push
lock
out
scas
inc
sub
movsb
pop
mov
cmc
inc
xchg
shrl
loopne
data16
or
adc
push
outsb
rcl
mov
in
loope
test
rdmsr
push
jne
mov
sub
jns
push
out
mov
jg
pop
xchg
ret
inc
mov
dec
das
xchg
inc
test
lea
xchg
ret
mov
mov
out
inc
or
nop
int
mov
out
xor
nop
mov
lcall
xorl
push
cmp
sti
outsl
shlb
scas
aam
scas
leave
movsb
enter
push
shrl
fcmovne
push
xchg
popl
scas
mov
testb
xchg
xlat
test
jbe
lods
push
scas
adcl
shll
inc
mov
xlat
shl
icebp
mov
jl
adc
push
mov
push
iret
mov
jmp
sub
mov
sub
or
mov
in
cmp
rol
addr16
jg
lcall
sub
test
dec
int
jp
or
sub
scas
ss
lahf
addr16
call
nop
inc
gs
mov
jbe
mov
aaa
inc
mov
xorb
lahf
pop
and
sub
adc
jecxz
pop
mov
sbb
pop
popf
ror
fisubl
adc
movl
push
inc
sub
out
jecxz
push
dec
fiaddl
loopne
inc
pop
loop
sbb
add
lret
int3
sub
out
cmpsb
push
nop
idiv
stos
icebp
pop
cmp
test
out
xorb
xchg
jg
cmp
pop
adc
out
cmp
sub
call
jae
mov
push
arpl
pop
add
test
add
imul
nop
mov
rorl
pop
leave
int3
stc
push
pop
push
or
aaa
or
pop
push
int
mov
imul
add
dec
sbb
dec
push
sahf
int
clc
dec
jae
scas
inc
mov
in
repz
xorb
jmp
jmp
rcrl
mov
xchg
xchg
mov
lcall
fstpt
mov
outsl
xor
aaa
or
push
or
mov
dec
ret
jno
mov
fldl
adc
enter
add
pop
test
push
dec
dec
jnp
rolb
jbe
sub
jne
sbb
pop
andb
leave
mov
mov
pand
rclb
cld
push
lds
call
scas
aad
jo
dec
adc
or
adcb
movl
test
out
bound
add
icebp
mov
imul
push
cs
cmpb
dec
adc
loop
or
cmp
add
loope
push
into
push
and
mov
repz
add
movsb
sbb
add
pop
inc
pusha
and
lock
mov
adc
mov
rorl
mov
inc
hlt
or
jnp
and
xchg
and
loope
popf
loop
gs
jns
jno
add
inc
xor
jg
outsb
nop
das
inc
test
xchg
or
or
mov
clc
or
push
scas
das
ds
push
jo
cmp
scas
sub
xor
dec
adc
enter
lods
xchg
add
sub
subl
mov
ficoml
pop
xchg
hlt
outsb
pushf
jp
roll
lret
ljmp
lcall
adc
jge
xchg
mov
aaa
push
sub
push
jl
push
adc
mul
rolb
push
inc
lds
lcall
mov
jnp
movhlps
mov
xchg
add
jp
popf
add
pusha
or
push
jl
shrb
aam
push
sub
add
jb
xchg
rorl
ds
in
int
xchg
adc
sbb
add
clc
adc
cmp
pop
mov
mov
dec
xor
out
ret
notb
jne
push
sub
rcrl
adc
xchg
fdivr
push
mov
inc
push
mov
adc
insl
pop
jp
mov
in
inc
cmpsb
adc
sbb
push
add
mov
inc
ret
xchg
incb
ds
xor
inc
xchg
xchg
add
mov
sbb
in
daa
pop
outsl
mov
jno
mov
and
mov
push
mov
leave
lods
ss
pop
pop
ds
pop
dec
inc
cmp
out
jno
shll
test
mov
lods
andb
mov
ret
scas
dec
mov
mov
lcall
or
mov
movsb
pop
and
ffree
fwait
pop
stos
cmp
mov
dec
jmp
push
push
add
inc
mov
lahf
push
and
nop
ret
cli
jecxz
in
ljmp
or
or
and
es
xor
dec
adc
mov
lods
std
sbb
mov
inc
mov
lahf
adc
subb
test
or
popl
mov
jo
inc
std
sub
inc
nop
inc
mov
cmc
jl
pop
out
dec
js
orl
xor
aas
subb
mov
mov
data16
fbld
fsubrp
push
dec
scas
and
rcrl
inc
rclb
inc
mov
dec
jo
and
inc
and
mov
dec
inc
sub
mov
out
loopne
and
and
push
jl
repz
ljmp
push
jae
mov
xor
fistl
es
jmp
xor
mov
lea
mov
rcrl
ds
inc
js
cmp
nop
movsl
dec
jno
cwtl
aaa
in
inc
stos
and
pushf
sbb
pop
lret
addr16
js
lahf
mov
push
push
test
xchg
xchg
adc
outsb
adc
mov
ja
mov
pop
xlat
inc
xor
sbb
addr16
in
xchg
sub
out
jb
ljmp
in
out
jp
inc
ds
fcomps
cmp
insb
call
ror
mov
mov
sbb
nop
int
fstl
gs
add
movsb
ss
dec
adc
dec
dec
fcompl
mov
popf
adc
xchg
movsb
ret
es
cli
mov
jae
pop
xchg
pusha
mov
cld
in
ljmp
mov
aaa
fucomip
xchg
mov
fstl
mov
repnz
enter
add
leave
rcrb
nop
xchg
jg
loopne
shrb
dec
lock
fcmovb
pop
int
test
out
mov
add
cmpb
add
xchg
lret
mov
out
xchg
push
ljmp
mov
cmp
fs
mov
xchg
aam
sbb
mov
pop
setae
mov
sub
int3
inc
scas
repz
popa
mov
push
lods
clc
pop
sub
and
es
fs
mov
push
xchg
lods
inc
adc
jl
mov
test
movsb
xchg
pop
in
popf
mov
jl
push
ror
je
mov
inc
sbb
dec
lret
xchg
mov
xchg
cmpsl
add
dec
dec
dec
adc
sub
xchg
sub
inc
pop
inc
cmp
push
push
popa
ret
inc
scas
enter
mov
xlat
test
sahf
pop
pop
call
fdivl
cmpsb
push
sbb
fs
stos
pop
mov
addr16
and
popf
pop
jmp
xor
push
adc
shr
push
loope
std
push
inc
mov
adc
push
cmpb
stc
xchg
mov
fstpt
imul
call
mov
mov
sahf
xchg
sbb
xchg
jno
popl
das
fisubl
push
xlat
fistpll
lods
sbb
xor
pop
addr16
and
or
dec
loopne
outsl
jl
xchg
push
aad
xchg
sbb
rclb
adc
and
mov
mov
fldt
and
sbbb
push
add
mov
inc
xchg
lahf
ljmp
jns
in
pushf
push
shrl
push
pop
inc
in
mov
out
adc
vbroadcastf32x8
lea
inc
cmp
mov
fsubr
mov
push
xor
cmp
outsl
pushf
lcall
lods
mov
sub
dec
mov
push
and
out
push
mov
ret
pushf
and
mov
sbb
sub
out
bound
mov
ds
lea
lret
inc
push
adcb
inc
repz
push
lcall
cmpsb
andl
or
mov
fsubs
cld
movsl
nop
ds
leave
fnstenv
mov
xchg
mov
push
mov
paddd
xor
loop
push
cmpsl
jo
jnp
inc
cmp
pop
outsb
lret
inc
ret
jg
adcb
adc
leave
sbbl
test
stos
lret
divb
fldenv
data16
sahf
inc
dec
shlb
dec
data16
aaa
mov
imulb
lea
xchg
popf
lret
adc
inc
rorb
mov
dec
push
xchg
mov
rorb
mov
sbb
fistl
popf
add
jmp
fcmovnb
pop
hlt
jl
xor
jge
push
repz
sub
dec
cld
add
faddl
dec
pop
pop
inc
mov
lock
ficomps
jle
jle
and
jle
xor
inc
aaa
dec
nop
out
mov
sub
cmp
xchg
mov
loop
loope
rcrl
push
sbb
jle
shl
and
xchg
mov
jp
fnstcw
stos
gs
mov
adc
test
cmpsl
or
fsts
dec
adc
subb
jl
cmp
mov
and
shlb
mov
or
test
sub
dec
into
test
pop
jg
outsb
dec
inc
pop
arpl
insl
sbb
bound
lahf
sarb
jnp
jb
mov
shll
js
pop
dec
stos
mov
pop
idivb
xchg
fs
addb
dec
stos
pop
into
mov
mov
inc
dec
stos
icebp
pop
push
dec
pop
pop
sub
cmp
mov
push
inc
testb
insl
and
pop
stos
notb
dec
imul
ret
ds
lock
mov
mov
dec
out
mov
ds
cmp
jo
xchg
mov
stos
add
push
and
xor
in
mov
jp
data16
jle
jb
dec
ret
ljmp
xchg
je
sbbb
push
out
popf
mov
push
rorl
jns
xchg
sbb
inc
int
mov
xchg
fstpt
xchg
stc
lcall
jne
popa
or
cwtl
and
insl
inc
mov
adc
dec
pop
xor
js
xor
scas
mov
outsb
bound
cmp
dec
repz
dec
lods
test
sbb
stc
adc
iret
ror
cmp
scas
adc
xor
mov
sbb
outsl
adc
repnz
pop
xor
mov
repnz
dec
mov
mov
pop
mov
push
pop
mov
add
dec
scas
push
mov
mov
mov
js
mov
lods
fwait
and
cmp
into
and
jne
inc
cld
pop
test
or
xchg
cltd
rclb
movsl
push
jb
lods
push
add
outsb
pop
stc
shr
sarb
xchg
mov
roll
add
push
nop
fucom
in
jmp
add
jmp
cmp
cld
sbb
test
cld
mov
addr16
inc
xor
out
pop
xchg
sbb
dec
jg
add
addr16
mov
mov
inc
ret
mov
lret
jo
push
add
push
in
or
cmp
fdivrl
insb
cmpb
fs
dec
pop
inc
subl
dec
gs
cltd
sbb
inc
int3
adc
bound
xor
out
int
mov
out
les
inc
cltd
add
xchg
adc
pop
dec
lods
jae
mov
cmc
sub
and
leave
insl
test
xchg
jle
shl
mov
pop
test
dec
jle
mov
push
mov
shll
cld
xchg
popl
jg
mov
pop
ret
mov
xchg
rcrl
les
inc
sbbb
add
push
sti
mov
lret
popf
dec
ret
int
pop
dec
jae
add
inc
sahf
or
les
and
dec
mov
mov
icebp
xchg
jnp
dec
fadds
das
push
mov
lret
in
xor
insb
popa
xor
add
inc
sub
adc
push
mov
ret
dec
ret
and
in
push
lds
in
aam
sbb
in
mov
scas
pop
mov
mov
gs
stos
popf
sub
add
pop
clc
inc
lods
pop
es
jle
mov
mov
mov
dec
mov
xchg
mov
lods
adcb
jns
fdiv
mov
fimuls
ret
into
push
mov
clc
mov
into
and
dec
jno
in
inc
leave
mov
jno
xchg
or
cmpsl
dec
test
outsl
dec
push
aam
cmp
div
rcrb
adc
std
inc
jg
sub
cmpsl
jmp
outsl
xchg
test
or
cmc
sbb
adc
jb
sub
jno
lcall
sub
mov
sbb
lret
inc
rolb
out
push
sbb
xchg
arpl
loope
xchg
and
add
dec
cltd
lcall
insl
xor
shrl
sub
into
push
scas
push
pusha
inc
cmp
es
mov
sbb
mov
jp
cli
adc
int
rcrb
push
push
jae
in
sub
push
cmp
jns
test
lret
popl
in
inc
cmpsb
push
sub
add
jo
xor
adc
push
lret
test
inc
cmp
inc
xor
push
dec
and
jae
out
jbe
shll
inc
mov
sti
loopne
js
andb
sub
mov
fisttpll
xchg
mov
daa
fsubl
adcb
or
jg
lea
cmp
fcompl
adc
dec
movsl
lods
mov
and
test
xchg
scas
jg
stos
imul
mov
xor
nop
sub
sub
inc
rcll
nop
roll
sub
sahf
leave
insl
add
xor
cs
cmp
mov
outsl
xchg
mov
outsb
xchg
arpl
mov
insb
cmpsl
push
sub
inc
sub
pop
cmp
mov
mov
xor
out
or
sub
stos
and
mov
mov
cmp
insl
fisubrs
lcall
push
in
fcoml
pop
int3
jno
outsl
sub
int
call
push
shl
rorb
mov
rolb
out
push
and
loope
icebp
mov
push
fnsave
mov
sti
rolb
nop
mov
pop
pop
sbbb
outsb
xchg
xchg
jmp
sbb
test
sbb
jge
pop
mov
cmp
jecxz
sub
movsl
mov
lret
push
mov
into
gs
cmpsl
sbb
inc
jnp
and
dec
dec
cmpl
sbb
fstl
xchg
ss
out
mov
cmc
xor
lds
adc
jmp
loope
pop
clc
repz
bound
test
xchg
mov
arpl
mov
lahf
nop
imul
pop
ficoms
mov
inc
dec
mov
je
test
mov
ret
loop
rcrl
xor
pmaxsw
inc
ret
int
mov
lret
cs
enter
mov
mov
sub
xorb
ss
mov
dec
mov
stos
push
aaa
xchg
pcmpeqb
nop
push
cmpsb
jecxz
push
mov
mov
fldenv
sbb
cmp
and
orl
jo
lret
jg
test
mov
shl
push
pop
cwtl
fimull
fstpt
movsl
adc
fisubl
xchg
cmpsb
jge
mov
cld
mov
mov
out
xchg
stos
sbb
nop
daa
mov
pop
das
pop
fcmovb
mov
leave
pop
notb
stos
or
pop
or
lret
arpl
inc
incl
adc
add
inc
add
cmp
shll
lds
lret
add
lret
push
push
mov
sarb
jne
mov
mov
xor
mov
repz
dec
les
sub
jo
push
xchg
jle
push
popf
xor
pop
mov
jnp
push
lret
stc
in
push
inc
pop
mov
sarb
xchg
and
dec
imul
pop
xor
daa
dec
int
dec
mov
sbb
jge
sub
mov
ror
push
fadd
lods
lea
ret
in
push
xor
daa
pop
xor
dec
rolb
xchg
xchg
add
inc
dec
icebp
outsb
mov
aaa
daa
test
fmuls
pop
jb
pop
push
stc
fimull
xor
mov
mov
push
pushf
jp
cwtl
jp
ss
cmpsl
test
pop
aaa
mov
movsb
adc
scas
cmp
mov
inc
popf
inc
lods
das
and
jp
add
xorb
mov
push
xor
insb
pop
jne
mov
fwait
int
insb
inc
es
gs
mov
test
sbb
daa
add
push
mov
mov
push
mov
enter
fnstcw
dec
shlb
stos
sub
and
es
ljmp
in
pop
fisubrl
hlt
mov
andb
arpl
mov
popf
push
pop
lods
mov
inc
xchg
int3
jp,pn
pop
fs
and
jge
and
mov
xor
mov
adc
rcl
scas
mov
inc
pop
fsubrl
dec
test
pop
xor
rorl
popf
ds
lret
pop
dec
inc
add
jg
stos
lret
inc
mov
aas
jnp
inc
pop
scas
fsubs
jmp
stos
jb
int
mov
roll
out
in
rorb
adc
jno
sub
sbb
mov
in
lods
sub
mov
int
cmc
test
cmc
inc
mov
xchg
dec
mov
inc
xchg
outsl
pop
lds
orl
adc
fidivrs
xor
sub
repz
push
jp
xor
push
lods
stos
ss
lods
push
scas
scas
aam
push
cmc
aad
dec
cmc
cmpsb
push
scas
xor
mov
adc
data16
dec
adc
insb
xor
adcl
push
mov
sub
test
nop
mov
rorb
shll
insl
dec
jge
test
insl
aam
adc
pop
inc
xor
sub
aaa
das
add
mov
jecxz
nop
push
jno
mov
dec
insl
popa
mov
insb
jg
shrl
stos
adc
xchg
jb
xchg
adc
adc
xchg
push
jg
dec
mov
mov
mov
scas
mov
dec
test
push
add
icebp
int3
aaa
es
xor
xchg
jmp
popf
pusha
pop
push
dec
pop
mov
xchg
lea
and
inc
dec
loop
xor
pop
or
and
xchg
icebp
popa
xor
stc
pop
sbb
int
xor
pop
std
js
pop
inc
jle
push
mov
xchg
dec
adc
sub
pop
aaa
aad
xchg
and
pop
jae
inc
stos
mov
jb
mov
mov
jo
stc
enter
mov
xchg
or
int
add
push
dec
push
es
inc
push
mov
dec
jne
xchg
sahf
mov
cmp
push
cmpsl
mov
lahf
add
outsl
inc
mov
out
sahf
cld
inc
inc
xchg
in
inc
push
shll
int3
add
cs
lcall
jb
out
inc
inc
fists
insl
hlt
sub
stc
inc
add
fistl
fsubs
data16
sub
add
xchg
push
pop
lret
pop
add
jbe
mov
repz
adcb
popf
adc
jle
dec
lcall
in
inc
fldt
inc
clc
adcl
stc
inc
sarb
popf
mov
jmp
repz
scas
jmp
push
test
ljmp
stos
gs
jmp
dec
jnp
enter
cs
xchg
push
leave
les
adcl
mov
test
ss
inc
into
dec
int
aas
jle
cld
sarl
and
xchg
cmp
add
sti
adc
xor
cli
repnz
inc
push
mov
shrb
pop
rclb
push
mov
fldenv
cmpsb
push
in
adc
mov
addr16
dec
dec
lret
or
mov
outsb
shrl
lcall
test
xchg
stc
into
loope
sub
addb
xchg
and
mov
or
cld
in
push
or
cmp
xchg
pop
inc
mov
xor
das
inc
out
test
and
add
pop
les
mov
inc
xor
lds
sbb
shlb
mov
inc
dec
gs
pop
idiv
cmp
adc
add
mov
pop
mov
js
or
push
adc
mov
lea
inc
test
in
and
xchg
pop
mul
or
stc
in
sub
xor
roll
test
mov
int3
sbb
xchg
lret
sbb
repz
inc
jo
cs
pop
push
movsb
push
aas
les
push
lcall
imul
add
jecxz
lea
push
mov
push
scas
cld
arpl
xor
pop
xchg
cld
mov
add
or
ret
mov
mov
ror
jns
dec
outsl
cs
jecxz
or
lods
adc
push
jecxz
out
add
ljmp
push
mov
cli
add
xchg
shll
jnp
sub
xchg
ret
jg,pn
sub
leave
xchg
xchg
xchg
mov
and
sahf
mov
jge
lcall
mov
mov
push
ljmp
insb
pop
push
pop
push
push
popa
notb
cmp
cmpsl
fwait
data16
inc
data16
xchg
pusha
int
or
nop
repnz
shl
push
push
popa
pop
or
xor
pop
test
clc
js
inc
fstpt
inc
push
outsb
xchg
lret
sbb
mov
add
jecxz
jp
xchg
sub
mov
lcall
jnp
fwait
insb
adc
filds
xchg
and
sbb
push
popl
inc
xchg
push
mov
inc
dec
popa
pop
iret
lcall
andb
add
pop
dec
sub
mov
ret
mov
stc
pop
mov
mov
mov
movsb
gs
stos
sub
inc
jg
mov
mov
subb
and
outsb
adc
aam
das
arpl
mov
imul
int
stos
jno
and
sahf
add
cmp
aas
cli
xchg
lcall
add
jecxz
mov
jb
dec
shlb
repnz
je
push
and
push
ret
js
mov
adc
fiadds
cmp
dec
xor
vmwrite
inc
pop
xchg
mov
mov
inc
rclb
loop
dec
stos
sub
imul
in
icebp
mov
movsb
imul
jae
jmp
scas
ret
and
fiadds
cmp
push
sbb
or
inc
fndisi(8087
jmp
pop
adc
cmc
lret
dec
cwtl
fdivl
sbb
adcl
rclb
adc
pop
xor
adc
mov
add
cmpsb
leave
loope
sbb
daa
into
pop
cmp
and
mov
dec
pop
nop
dec
jae
push
mov
lea
nop
jnp
dec
ds
sub
loope
fbld
inc
xchg
lock
mov
sbb
insl
outsb
xchg
int
cmc
sbb
daa
and
and
adc
push
stc
cmp
les
in
daa
cld
dec
and
aas
dec
rorl
icebp
pusha
lods
insl
mov
mov
jmp
and
nop
add
pusha
push
mov
sbbb
mov
sub
outsb
test
or
out
in
loope
pop
sub
dec
scas
and
mov
orb
pop
mov
lock
jecxz
and
movsb
ret
pop
mov
js
mov
insb
xor
hlt
and
inc
adc
and
xchg
mov
or
cwtl
inc
rcrb
fadd
lods
int
mov
dec
adc
xor
inc
xor
xchg
jge
xchg
jg
jl
or
addb
enter
adc
cwtl
adcl
xor
cmp
shrl
adc
lock
loopne
jg
sub
mov
cmp
repnz
adcl
pop
loope
mov
xchg
pop
sub
mov
inc
pfcmpgt
popf
test
cltd
xchg
gs
pop
sub
and
sub
dec
stos
repz
jns
pop
orb
ror
rolb
lods
cmp
dec
mov
xor
mov
mov
rorb
cmp
pop
cmp
xor
push
pop
sbb
jb
xor
mov
leave
mov
dec
cmp
mov
mov
rorb
jle
push
inc
fs
movsl
push
push
mov
add
inc
out
mov
leave
mov
push
xchg
ret
dec
je
addr16
movsl
xchg
loope
lods
mov
or
xchg
clc
pop
aas
push
dec
mov
mov
outsb
adc
mov
cmovp
sbbl
repz
hlt
stos
dec
stos
imul
push
sub
dec
mov
mov
adc
in
pop
dec
icebp
leave
xlat
roll
bound
ret
jne
jno
cmp
outsb
lods
pop
push
xchg
mov
popf
inc
dec
jl
mov
or
adc
cmpl
movsb
push
jmp
and
xchg
jb
jecxz
push
mov
inc
xchg
out
shufps
sbb
sbb
xchg
push
pop
js
lods
scas
inc
push
dec
inc
ret
bound
cmp
ret
xchg
xor
outsb
mov
xchg
lods
inc
inc
insl
ret
orl
xor
lods
stos
adc
ss
andb
mov
add
and
jnp
and
push
int3
int3
jo
cs
or
cltd
dec
mov
xchg
test
mov
mov
inc
mov
cmp
pop
andl
jb
or
xor
fwait
sarb
push
notb
scas
cmp
mov
lret
jns
or
inc
nop
popf
and
xchg
xchg
add
lcall
or
xchg
jo
stos
xor
out
jp
scas
leave
out
pop
jge
jg
mov
and
rcl
push
icebp
arpl
xor
cmp
pop
mov
pop
mov
push
popa
out
xor
xchg
add
lds
out
cmp
icebp
and
xor
or
push
push
fsubrs
loop
push
xchg
mov
push
xor
push
push
jns
push
mov
add
aas
and
shl
xor
dec
lds
pop
jle
mov
sbb
dec
mov
mov
insl
cmp
add
and
cmpsl
inc
in
xchg
addl
xor
jno
mov
mov
xchg
cmp
ud1
nop
lea
cmp
popf
mov
fs
mov
movsl
aaa
sbb
inc
arpl
lcall
mov
lds
jp
out
or
or
cltd
xor
sbb
rcrl
jecxz
cmp
fld
sbb
or
dec
jns
lods
test
rorl
push
xchg
and
shll
jp
sbb
xchg
mov
std
inc
lods
xor
mov
mov
lea
fisubrl
cmpl
pusha
std
mov
inc
jp
mov
sbb
jns
sbb
jge
clc
mov
pop
loop
xor
cld
sbb
xorb
mov
inc
cmp
adc
jno
loopne
inc
mov
adcb
mov
rorl
inc
dec
add
pop
daa
mov
lods
jle
adc
sbb
pop
sub
xchg
mov
pop
dec
xchg
scas
test
xor
inc
test
inc
fisubrl
lahf
and
mov
xchg
push
mov
mov
push
ret
xchg
push
xor
jecxz
adc
mov
mov
push
xchg
and
pop
shrl
loope
inc
xchg
arpl
and
mov
cld
jg
in
or
testb
lods
mov
inc
daa
mov
adc
aam
ljmp
inc
popf
hlt
xchg
mov
dec
mov
in
xor
push
xchg
inc
add
rorb
inc
lock
inc
mov
inc
push
lds
shrl
xchg
mov
leave
ret
bound
stos
push
lods
push
dec
jo
and
rcl
lcall
sub
push
addb
and
inc
shll
inc
or
pop
adc
xor
push
mov
pop
lock
xchg
rolb
std
inc
cltd
push
mov
jbe
nop
ljmp
cmpsl
inc
dec
jge
movsl
pop
sub
inc
pop
lds
rcll
xchg
ljmp
jnp
mov
sbbb
push
and
or
cmp
sbb
cltd
jns
and
aaa
mov
inc
rorb
xor
ja
add
fiadds
movsl
loopne
and
push
mov
xchg
mov
nop
loope
xor
push
fs
and
sarb
fwait
cld
pop
mov
lahf
addr16
mov
xchg
shlb
testl
in
ljmp
inc
js
jbe
xor
test
sbb
xor
mov
nop
xchg
dec
stos
push
sarl
jge
idivb
cmp
movsl
jp
daa
ret
inc
push
xchg
mov
pop
push
xor
pop
inc
daa
cmp
and
mov
xchg
nop
inc
push
push
leave
rcl
xor
lock
mov
add
adc
pop
xchg
sbb
inc
outsl
lret
sahf
rcl
sbb
pop
daa
lods
dec
mov
push
push
dec
sbb
sti
mov
mov
add
push
push
test
sbb
loop
addl
clc
and
sbb
mov
adc
or
pusha
xor
sbb
clc
addr16
std
adc
fidivl
iret
ret
mov
js
xor
jmp
test
push
push
mov
lcall
cmpsb
leave
inc
dec
sub
stc
push
rol
xorb
sub
or
movsl
decb
cmp
mov
rcr
xorl
mov
jle
mov
add
mov
mov
pop
mov
lods
rclb
dec
push
cmp
mov
jno,pt
ret
sub
leave
js
fisttpl
mov
popf
inc
repz
jle
add
cmpsl
mov
fidivs
lds
clc
test
jbe
ss
mov
mov
and
popa
jb
pop
mov
test
and
lods
pop
mov
mov
mov
mov
mov
daa
loopne
test
push
and
mov
xchg
shrl
mov
shr
pop
pusha
data16
pusha
popf
insl
add
push
inc
test
cmp
into
lods
in
mov
dec
outsl
clc
enter
inc
in
mov
push
push
scas
dec
dec
sbb
adc
imul
push
sub
push
xchg
in
xchg
imul
loope
scas
in
lods
inc
aas
pusha
adc
mov
pop
gs
mov
js
pop
test
addr16
xor
xchg
mov
jp
gs
into
mov
call
push
andl
int
in
jno
mov
inc
gs
cs
mov
mov
mov
or
sub
mov
nop
pop
js
push
shrb
int
mov
xor
xchg
mov
push
test
xor
repnz
xchg
dec
jge
cmp
mov
test
fisttpl
insl
testb
orl
add
inc
push
leave
sbb
ss
out
push
movsl
mov
push
adc
bound
and
jge
out
sbb
add
pop
jmp
xchg
adc
xchg
and
pop
mov
roll
push
or
mov
lcall
mov
test
pusha
in
nop
mov
sub
xchg
mov
fbld
jge
cmp
push
lret
pop
ret
das
mov
stc
mov
jae
mov
mov
jb
enter
mov
movsb
xlat
out
inc
arpl
push
cmpsb
nop
in
xchg
push
dec
push
jb
mov
cltd
xchg
or
mov
pop
or
in
test
lea
cmp
iret
lods
adc
bound
scas
cvtpi2ps
push
mov
gs
jle
xchg
xchg
add
lret
sbb
cmp
add
adc
hlt
nop
xor
push
inc
and
js
addr16
mov
pushf
or
movsb
or
push
adc
fs
jp
adc
push
mov
xchg
pop
and
scas
inc
repnz
cmp
rcpps
inc
inc
loope
js
add
aas
sbb
in
jl
mov
jg
sbb
rcrl
icebp
cmpsl
aad
mov
cmp
mov
idivb
adc
mov
push
lods
pop
dec
adc
push
jg,pn
aam
mov
add
pop
cmpb
xchg
jb
ror
jo
sbb
mov
rolb
and
mov
mov
jmp
xchg
mov
je
lods
inc
inc
inc
mov
pusha
cltd
mov
lock
xchg
rolb
xchg
or
pop
jnp
sub
cmp
jl
xor
stos
push
repnz
sub
and
jo
sahf
out
dec
dec
adc
mov
ret
pusha
dec
cmp
outsl
mov
stos
adc
cmp
adc
ret
cltd
add
in
lret
out
push
push
fsubp
or
pushw
dec
ret
dec
fistl
cmp
call
mov
stc
dec
pop
test
addr16
pop
push
push
out
jecxz
bound
shrl
lock
into
sar
test
in
mov
aad
in
sub
ret
cmpsb
fwait
dec
fs
rorb
pushf
pop
mov
clc
mov
js
or
popf
insl
cmp
scas
sarl
in
sub
pop
out
js
inc
stc
fwait
mov
lea
dec
mov
mov
stos
jp
mov
in
sbb
push
mov
mov
mov
jge
std
inc
dec
fidivl
add
mov
stos
dec
xchg
pop
cltd
add
loope
inc
mov
mov
leave
push
push
daa
mov
cwtl
inc
dec
jno
add
adc
adc
sbb
data16
dec
test
jbe
mov
and
jo
dec
mov
cmp
outsl
int
pop
xor
aas
jae
dec
add
mov
jb
fisubs
inc
adc
xor
test
insb
daa
xchg
addl
vmwrite
push
mov
xchg
inc
add
cmc
and
push
jne
xorl
or
ss
jg
int3
mov
mov
movsb
jp
out
add
inc
dec
sbb
add
inc
add
add
ror
jae
xor
push
pop
ss
into
and
mov
jae
mov
add
fs
das
mov
fstl
jecxz
push
imul
adc
shl
lock
aaa
test
xor
andb
fwait
int
testl
fstl
stc
call
xchg
nop
cmc
xchg
xor
lcall
jg
push
mov
adc
faddl
fistpl
lods
movsb
adc
data16
or
jl
jnp
jecxz
xchg
stos
sbb
nop
popf
mov
in
ret
nop
aaa
inc
cs
lcall
adc
fwait
pushf
xchg
jno
cmp
sbb
into
xor
jb
push
push
inc
out
test
sbb
pop
mov
pop
lods
stc
insl
pop
daa
sarl
inc
lahf
stos
mov
loope
test
out
sahf
jo
push
mov
push
sub
dec
inc
insb
lret
adcl
scas
lret
imul
cmpb
insl
clc
mov
mov
inc
orb
adc
movsl
xchg
dec
fucomip
or
pop
int
fwait
xchg
mov
jle
fadd
dec
push
dec
dec
jl
xchg
and
repz
fcomip
push
dec
mov
sbb
test
icebp
sbb
and
jmp
or
cwtl
mov
sbb
bndstx
adc
stos
nop
add
mov
mov
insl
mov
or
xchg
das
aad
add
and
shlb
std
xchg
mov
fisubrs
push
push
inc
adc
outsb
shll
icebp
imul
mov
std
lcall
cmpsb
sbb
test
pop
das
dec
stos
push
push
dec
leave
push
movsb
les
push
xchg
sarl
dec
jno
dec
roll
jno
jnp
cs
adc
dec
add
sti
loop
adc
fstl
orb
mov
push
in
dec
les
iret
fmuls
leave
push
nop
sub
cmp
mov
adc
shrl
mov
stos
int
lcall
add
mov
mov
mov
jno
pop
jmp
cmpb
imulb
inc
jp
adc
or
pop
or
push
loope
lea
dec
sbb
fisttpll
clc
sbb
pushf
push
mov
dec
mov
inc
xor
stos
jae
sbb
or
xchg
jns
lea
and
mov
jb
inc
and
arpl
lods
pop
cmp
jle
sub
mov
mov
in
push
jns
xor
xchg
push
insl
push
push
enter
fdivs
cmc
fnstsw
aam
inc
dec
mov
movsb
xchg
mov
int
addb
mov
ds
pop
test
mov
data16
aas
dec
add
test
in
sbb
xor
mov
adc
jno
adc
push
hlt
pop
insl
aaa
cltd
test
addb
adc
dec
and
inc
jno
ror
dec
jno
push
rorb
and
xchg
sbb
cmp
xchg
jnp
mov
orl
sub
inc
jo
mov
mov
ljmp
nop
add
dec
fmulp
lcall
sbb
push
loope
mov
dec
mov
jb
lods
push
jno
mov
jo
and
jp
int
out
xchg
add
add
dec
or
mov
sub
cmc
cmp
mov
mov
jg
xor
xor
mov
inc
sbbl
adc
jbe
xor
or
ret
sbb
lahf
cmp
lds
pop
pop
mov
testb
sub
xchg
xor
inc
and
mov
inc
xchg
std
out
cmp
ret
les
push
fisttps
mov
out
push
xor
xorl
gs
hlt
push
mov
sbbb
scas
mov
push
adc
addr16
xor
dec
repnz
mov
inc
push
xchg
outsb
push
mov
orl
imul
xor
imul
inc
sbb
mov
jg
daa
scas
jbe
push
mov
mov
jecxz
gs
mov
xlat
movsl
cmp
in
push
jno
idivb
xchg
movsb
cmpsb
adcl
sbb
ja
mulb
xor
test
pop
and
adc
test
xchg
dec
push
fisubrl
add
dec
lods
into
mov
dec
xchg
ror
adc
or
int
into
in
rcll
scas
xor
das
mov
fimull
imul
aaa
mov
fmul
outsb
fcoml
leave
jbe
cmp
mov
rorl
dec
adc
scas
push
adc
adc
fsubrl
xor
nop
mov
out
dec
popa
jl
xchg
into
clc
cmp
mov
jb
jecxz
rcl
int3
pop
sub
arpl
popa
add
and
sbb
cmpsl
fcmovnbe
outsl
adc
rorl
and
cs
dec
cltd
mov
rclb
and
pop
cmp
aas
xchg
bound
xchg
or
xor
dec
mov
dec
or
mov
mov
xchg
insb
mov
out
xchg
adc
cltd
cmp
dec
sbb
or
jl
gs
inc
das
mov
cmp
mov
xchg
fmul
imul
jle,pn
popa
loopne
jge
push
sbb
mov
out
js
xor
ljmp
xchg
out
mov
mov
aaa
orl
inc
pop
pop
mov
ljmp
test
mov
xor
outsl
pop
add
xor
jno
push
sub
test
stos
push
inc
or
les
xchg
mov
movzwl
sub
loope
js
jb
add
mov
dec
push
add
jae
js
imul
sbb
jns
xchg
ret
xchg
loop
mov
js
cmp
mov
xchg
ljmp
xchg
pusha
inc
ret
daa
and
push
mov
xchg
pop
dec
or
push
sbbl
pop
std
shrl
test
enter
mov
sub
popa
into
shrb
iret
inc
dec
jb
mov
lret
popa
leave
inc
stos
xchg
out
add
dec
push
or
add
adc
cmp
jge
cmpl
bound
jbe
adc
adc
pop
pop
movsl
xchg
jmp
lods
leave
loope
push
pop
pop
cmp
and
arpl
icebp
popa
xchg
xor
pusha
aaa
pushf
inc
imul
push
fs
mov
mov
scas
mov
repz
jle
jo
adc
stos
mov
adc
mov
inc
std
bound
pop
mov
sub
cmp
outsl
test
push
das
bound
add
out
xlat
jae
jo
mov
mov
mov
leave
je
fidivrs
test
mov
jb
int3
pushf
sub
xor
sbb
lea
push
jb
aad
int3
aaa
scas
andl
jne
mov
in
inc
dec
mov
ret
add
xchg
lret
mov
rcrl
jl
pop
sub
cmp
jge
jmp
repnz
jnp
lea
lods
inc
insl
aaa
cmp
mov
nop
dec
in
mov
rol
push
ret
or
data16
sub
nop
push
das
int
dec
lds
mov
ret
das
mov
addl
mov
jg
add
icebp
ret
mov
call
rcll
insb
mov
lcall
jle
rorw
sub
lods
and
lds
push
cmp
cli
pop
pop
lcall
dec
xchg
fs
roll
jle
xchg
cmc
mov
jns
stos
cltd
lret
rcrb
lods
nop
mov
sbb
cmp
dec
rcrb
roll
mov
sbb
popa
cmp
mov
push
movsl
push
stos
pusha
les
sarl
add
xlat
sbb
xchg
or
out
adc
mov
inc
xchg
roll
popf
lock
test
mov
into
imul
loopne
or
push
lret
pop
mov
mov
test
cmp
fcoms
enter
mov
das
lcall
xchg
dec
sahf
mov
mov
enter
sub
cmp
cmc
jno
sti
sub
mov
or
sbb
push
xchg
jbe
mov
sahf
xchg
aaa
sub
push
int
adc
dec
push
mov
shrb
mov
das
test
ret
and
or
fs
addb
dec
lods
xchg
and
pop
mov
xchg
scas
mov
add
int
push
xchg
and
cmp
mov
sbb
sbb
cmp
lock
mov
dec
fsubr
pop
lods
adc
mov
into
je
in
retw
pop
sub
cmp
fnstcw
test
call
loopne
cli
inc
movsb
popa
daa
push
fs
shlb
cmp
xor
jmp
push
sub
add
test
subb
stos
pusha
jb
insb
adc
out
inc
stc
fnstenv
in
jb
mov
inc
fadds
xchg
fdivrp
fidivs
mov
je
fs
push
adc
pop
mov
fbstp
sub
adc
dec
sub
js
movsl
ljmp
es
inc
sti
inc
rsqrtps
cmp
cwtl
rcll
shlb
fdivrs
loop
inc
adc
add
inc
xor
stos
mov
inc
xor
insl
aam
xor
jl
xor
mov
adc
mov
pop
movsl
jl
adcb
aas
add
cmp
dec
sub
sub
adc
add
rcl
mov
mov
iret
push
ret
sbb
jle
push
mulb
aad
mov
xchg
jb
push
mov
int
jns
insb
mov
nop
shll
mov
pusha
insb
popf
daa
test
inc
mov
jmp
sbb
aaa
push
ja
jp
mov
or
push
add
outsb
cmp
pop
movl
lcall
mov
das
jb
xchg
pop
pop
mov
and
cmp
mov
xchg
and
mov
test
cmpsl
inc
mov
imulb
xchg
push
xor
cmp
pop
mov
push
sub
mov
js
ret
nop
dec
pop
push
inc
add
imul
addl
xor
fsubrl
rcl
pop
and
mov
jb
pop
addr16
in
inc
mov
xchg
xor
leave
sbb
sbbb
scas
fistpl
iret
or
add
cmp
push
idivb
jl
fsubrl
int
push
ljmp
popf
inc
sar
ljmp
scas
test
fidivs
shr
mov
mov
out
pusha
push
and
nop
jno
push
popf
cmp
js
pusha
inc
and
movaps
out
popa
daa
sub
call
popf
insb
push
sbb
adc
mov
or
enter
xchg
repz
loopne
dec
fbld
dec
mov
mov
testb
jbe
mov
adc
inc
push
std
cmpsl
mov
pop
inc
addb
pop
imul
inc
sbb
mov
jle
sbb
cld
jnp
dec
mov
or
adc
xchg
sub
in
movsl
mov
cld
xlat
aad
test
xor
mov
popa
sbb
jne
xchg
insl
sbb
mov
adc
and
inc
pop
mov
bound
stc
mov
ret
mov
ret
shrb
jg
mov
inc
fidivrl
test
dec
jno
test
dec
jo
adc
roll
jnp
sub
xchg
rcll
rcl
pop
sbb
nop
and
push
pop
or
inc
repnz
shrl
or
mov
mov
lds
cmp
push
and
jge
and
adc
inc
xchg
inc
jbe
add
mov
push
and
sbb
adc
add
cmp
mov
les
mov
mov
add
xor
aam
pop
sub
xchg
fldenv
loop
dec
movsl
dec
sub
ret
pop
push
pop
mov
loopne
pop
ds
mov
cmp
and
fcomps
mov
stc
lcall
popf
xchg
cmpsb
sub
or
mov
mov
cs
xchg
add
xlat
popa
push
xchg
xchg
sbb
mov
xchg
xchg
xor
jns
shl
insl
jg
pop
out
cmp
outsl
int3
push
cld
test
cmp
cltd
roll
lret
dec
in
dec
ret
dec
lret
add
aam
mov
jno
xchg
mov
ds
sbb
inc
push
mov
mov
jg
aas
lds
mov
jns
jae
jno
popf
inc
lret
mov
push
fwait
dec
fucomi
ja
dec
inc
mov
pusha
xchg
stos
fs
lods
cmp
mov
xchg
leave
rcrb
push
test
mov
inc
mov
inc
mov
sahf
outsb
dec
cs
or
inc
mov
cltd
mov
xchg
aad
mov
and
cmc
cmp
adc
and
cmp
and
cmp
insl
sbb
movsl
xor
cmp
xchg
stos
or
cmp
push
div
repnz
mov
loopne
push
pop
mov
jle
push
nop
sub
cmc
jno
pop
cmpsb
jge
mov
test
jne
jmp
jge
inc
sub
ret
xor
clc
sub
cmp
push
mov
insl
inc
jge
outsb
jnp
scas
mov
outsb
js
fsubs
repz
mov
data16
lods
xchg
into
jb
cmpsl
pop
and
stc
and
pop
mov
sub
dec
movsb
mov
mov
ja
mov
adc
lahf
jge
addr16
xadd
out
fisubrs
sahf
mov
adc
or
js
sbbb
and
popf
mov
push
std
cltd
lar
aas
lods
cltd
ds
rcrb
push
adc
adcb
cmp
add
xchg
xor
cmpsl
inc
fcomps
jg
adc
xchg
jo
add
decb
js
inc
movsb
cmp
xor
shll
jp
outsl
fs
ret
in
lea
ds
mov
loopne
mov
and
es
xor
cmp
nop
dec
in
aad
inc
in
mov
outsl
mov
mov
xchg
jae
jno
mov
ret
repz
adc
mov
fs
dec
sub
inc
es
icebp
mov
jo
xchg
sbb
jns
arpl
mov
emms
mov
mov
cmpsb
gs
shll
sbbb
shll
rcrb
cmpsl
adc
cmpsb
out
cmp
adc
xchg
xchg
add
insl
imul
fwait
cmp
push
sbb
pushl
lret
dec
cmp
mov
js
les
cld
cmpb
insl
xor
mov
sbb
inc
out
mov
hlt
cmp
out
adc
lods
test
shll
dec
jno
dec
xchg
cmp
cmc
and
out
lea
rcll
xor
shll
int
in
jg
xchg
pop
pop
jecxz
int
adc
or
outsl
xchg
sub
jmp
mov
imul
add
in
in
pop
repnz
or
in
lock
pop
adc
xor
ds
pop
mov
jmp
stos
loopne
scas
rorl
lret
aam
fwait
or
adc
mov
inc
jl
loopne
nop
lcall
iret
jno
xchg
dec
xchg
sahf
cmpsb
or
fsubrs
int
jecxz
roll
pop
pop
dec
xchg
jnp
xor
cmpsb
sub
mov
jnp
add
pop
stos
rclb
and
lcall
mov
inc
stc
sbb
cli
insl
int
mov
subl
jg
sbb
pop
xchg
dec
inc
jno
rol
sub
inc
ss
jbe
mov
movsb
ret
sub
and
ss
stos
lret
mov
sbb
dec
dec
shl
xor
das
pop
or
fmuls
test
inc
out
jmp
sbb
sbb
mov
cmp
fildll
rorl
loope
fwait
jl
add
arpl
push
pop
sub
pop
aas
outsb
mov
xchg
mov
cwtl
loop
out
or
inc
aaa
xor
mov
sbb
dec
cmpsl
adc
or
pop
mov
fiaddl
add
es
mov
cmp
adc
in
jae
movsl
mov
mov
cltd
hlt
xor
mov
or
sbb
push
sub
and
xor
ret
mov
into
pop
xor
jge
lods
call
xchg
repnz
xchg
xchg
dec
or
fdivl
mov
clc
sub
sub
fcoms
or
test
mov
lods
push
decb
roll
xchg
lods
cli
in
cs
inc
sbb
pop
pop
cmp
pop
pop
cmp
sub
mov
adc
adc
and
ds
and
movsb
push
inc
popa
les
andb
out
jns
jo
imul
sahf
sub
punpckldq
jbe
jnp
test
movsbl
outsb
mov
cmp
dec
inc
mov
js
movl
xchg
mov
stc
iret
xchg
mov
dec
mov
int
in
jle
xchg
mov
push
pushf
pop
or
iret
loop
cmpsl
fsubl
mov
xchg
adc
sub
mov
movsl
pop
pop
lret
mull
rclb
xchg
sub
enter
imul
aas
adc
mov
pop
inc
sub
movsl
sahf
popf
cld
fisubl
in
lahf
mov
call
xor
mov
stc
mov
xlat
push
js
or
fwait
xchg
lea
mov
adc
lds
mov
sub
mov
popf
mov
icebp
mov
nop
and
add
addr16
xchg
mov
icebp
xchg
xchg
roll
call
hlt
nop
lods
popa
sub
jno
inc
mov
xchg
add
in
mov
mov
mov
cmp
test
jl
adc
cmp
sub
popw
mov
dec
aaa
cmp
outsb
adc
daa
movsb
mov
pop
outsb
es
or
cmpsl
ss
jl
adc
push
insl
fldcw
push
call
test
and
orb
fnstsw
bound
iret
jp
pop
pop
sbb
dec
lcall
mov
lods
pop
push
mov
inc
sub
or
imul
out
mov
mov
inc
sahf
push
lret
jl
mov
xlat
jmp
mov
or
dec
cmp
fdivrs
pop
movsb
jg
sbb
ljmp
cli
inc
call
adc
clc
inc
es
rorb
ljmp
inc
rolb
and
jno
mov
ret
push
dec
cmp
adc
jne
stos
xor
pusha
adc
dec
mov
rcl
clc
int3
or
inc
outsl
mov
stos
jb
test
test
mov
rorl
cli
cli
arpl
loop
in
pop
and
stos
lods
mov
and
flds
pusha
popl
popf
mov
add
jb
out
xor
dec
xchg
shlb
push
xor
sti
jmp
cmpsl
sub
sub
jns
mov
int
adc
adc
inc
inc
dec
addr16
leave
sub
add
inc
pop
xchg
adc
pushf
mov
sub
lret
dec
mov
mov
xchg
sub
out
nop
scas
inc
aam
lods
js
xchg
jmp
pusha
repnz
test
sub
push
jae
es
test
jo
or
jle
adc
xor
out
pop
addr16
pop
pusha
loop
cltd
daa
mov
inc
xchg
adc
jge
xchg
cmp
jb
xchg
xchg
inc
push
xor
xor
stc
pop
les
sbb
lods
dec
inc
aad
iret
mov
cld
dec
popf
ja
ficomps
es
out
cmpsl
mov
data16
mov
sub
sub
enter
rolb
ja
repnz
lods
test
sbbb
xchg
or
mov
push
push
imul
lds
push
mov
inc
mov
test
ret
movsb
lahf
cmp
pop
add
insl
jb
add
xchg
adc
cmp
xor
jg
add
mov
pop
push
fildl
test
cmpsb
shrl
inc
and
imul
adc
adc
subl
out
and
xchg
pushf
rol
pop
cmp
push
xchg
push
mov
fisubs
add
or
pop
push
mov
daa
add
xor
sub
mov
mov
jp
cmpsl
addb
rclb
lahf
shll
into
mov
movsl
sub
sbb
movups
mov
icebp
fiadds
ja
cmp
stos
dec
push
fldcw
mov
lret
imul
mov
stc
call
int
and
cmpsb
mov
push
rolb
jo
pop
fidivl
push
lea
loope
dec
jnp
and
enter
push
mov
sbb
push
add
pop
repz
jecxz
insl
mulb
push
fs
test
or
sub
sbb
sti
add
loope
sub
push
imul
lcall
push
fisubrs
movsl
cmp
repnz
and
mov
dec
dec
sub
mov
mov
daa
cld
inc
aad
add
daa
addb
push
icebp
push
js
cmc
std
dec
mov
cmpsl
add
sar
lcall
mov
xchg
push
pop
inc
jno
jnp
pop
or
lods
mov
jbe
dec
in
loop
and
mov
add
fldl
dec
js
lret
fwait
mov
shl
std
pop
jb
jp
mov
fisubs
ljmp
jno
out
fwait
add
fldenv
adc
sub
xlat
push
adc
faddl
sahf
shll
mov
test
movsl
add
aaa
inc
xchg
push
into
repz
int
fcoml
rcll
and
enter
xchg
jg
add
mov
decb
jns
pop
das
cmp
push
lods
push
leave
ds
roll
int
out
scas
iret
mov
sti
insb
mov
xchg
in
aaa
xor
mov
out
fucomip
jno
int
adc
fisttpl
xchg
mov
sub
js
inc
popa
sbb
scas
and
lret
xor
loope
jb
lcall
sub
inc
shl
mov
shlb
mov
in
cmp
stc
push
ret
bound
xor
or
sbb
mov
lret
into
sbb
dec
rcrl
push
lret
int3
pushf
dec
ror
pop
enter
test
or
jg
cmp
sub
jns
mov
sub
cmp
daa
aas
mov
adc
std
ret
stc
int
cmp
inc
insl
xchg
add
ja
cmpsl
icebp
adc
nop
mov
roll
sti
inc
dec
mov
lock
mov
cwtl
push
repnz
into
xor
sub
xor
dec
cwtl
pop
mov
nop
mov
dec
adc
iret
jb
dec
mov
mov
imul
sbbl
shll
rclb
mov
rclb
and
xor
dec
mov
dec
cli
and
xchg
imull
data16
and
loope
lahf
jg
xchg
dec
cmp
dec
mov
jmp
sbb
and
repnz
pusha
pop
test
jle
sbb
pop
mov
dec
cmpb
adc
pusha
leave
mov
lods
adc
mov
cld
mov
xor
and
and
stos
xchg
outsb
adc
std
mov
pop
and
inc
rcl
out
xchg
mov
into
cmpsb
sbbb
fwait
das
mov
pusha
adc
cmp
dec
leave
and
in
jno
push
add
cwtl
push
mov
dec
daa
adc
adc
inc
insl
push
mov
rcrb
sbb
rol
sbb
push
imul
mov
rol
sub
dec
xlat
mov
push
sbb
ds
mov
sub
pop
bound
sub
xor
cmp
sarb
jmp
jb
outsb
xchg
sahf
and
aam
mov
sub
sbb
inc
sahf
sbb
adc
and
mov
jns
dec
jg
rorl
or
daa
aam
mov
or
shr
pop
ss
mov
ja
sbb
sbb
inc
fcompl
xor
mov
ss
or
es
lret
pop
and
out
mov
mov
push
sbb
adc
sub
mov
popf
int
cmp
sbb
and
sahf
adc
adc
jae
fsubrl
ret
and
push
xor
out
inc
xor
ss
xchg
je
hlt
clc
cmp
rcll
jg
sbb
jae
adc
lods
lahf
aas
jns
mov
xchg
test
in
int3
int
cmp
ljmp
xchg
jmp
pop
aas
mov
data16
adc
mov
mov
ret
xsaveopt
jle
ret
push
cli
in
insl
mov
aaa
mov
mov
fbld
inc
mov
adc
pop
jp
int
or
jb
popf
dec
scas
inc
popa
rcrl
mov
stos
mov
xchg
ja
sub
fcomps
jnp
jge
jle
mov
adc
icebp
mov
push
movb
xchg
pusha
ror
inc
fucomi
jge
sahf
and
loope
inc
inc
cltd
pop
ficompl
mov
imul
mov
and
mov
popf
mov
inc
in
or
mov
xchg
mov
mov
jmp
out
notl
fsubrs
sub
inc
push
pusha
xor
xchg
xchg
xchg
pop
mov
inc
mulb
lds
out
sub
cmp
and
adc
cmp
and
or
mov
pop
xor
jo
nop
mov
inc
jle
fistl
mov
leave
scas
in
dec
mov
ret
shlb
inc
lock
in
jg
filds
push
xchg
xor
out
arpl
lock
lea
push
cmp
push
xchg
insb
inc
insb
add
dec
cmpsl
xchg
insl
cmp
adc
cmpb
roll
and
mov
popl
sub
jg
outsb
xor
dec
lahf
mov
icebp
sbb
fstl
inc
scas
sbb
sbb
insb
mov
out
dec
mov
mov
push
push
jne
adc
xchg
psraw
fnstcw
mov
mov
pop
dec
jns
dec
jno
mov
sub
adc
std
xchg
cmp
jp
out
mov
das
iret
in
push
push
dec
xchg
repnz
shlb
loope
push
inc
ret
sbb
inc
lahf
jecxz
push
dec
inc
stc
ljmp
insb
outsl
mov
and
xor
stos
xchg
xor
inc
rolb
dec
or
add
mov
daa
stc
aaa
mov
movsb
xor
inc
push
lods
dec
in
sbbl
mov
mov
push
jecxz
rol
cmp
cmp
add
lcall
inc
dec
and
inc
movsl
inc
ret
push
shrb
stc
pop
pop
mov
cmp
xor
pause
addr16
orl
movsl
xor
mov
cmpb
loope
lret
pop
mov
dec
call
dec
je
and
adc
cmp
cltd
push
xchg
push
jp
gs
leave
jns
cmpsl
pop
adc
popf
cmp
inc
orb
xchg
adc
into
std
adc
lcall
sbb
nop
shrb
shll
mov
push
sbb
push
xchg
jg
aaa
aad
sub
mov
popa
nop
loope
pop
test
lods
mov
inc
push
mov
dec
sahf
mov
mov
rol
cld
inc
inc
jg
inc
xchg
gs
icebp
inc
inc
and
insb
arpl
jns
jae
adc
push
xlat
iret
fisttpll
fwait
mov
sub
arpl
mov
sysenter
jnp
scas
jg
out
jo
ss
addb
push
xchg
testb
xchg
repnz
icebp
or
test
adc
lds
xchg
push
fcomi
sub
dec
mov
inc
and
sbb
inc
pop
inc
sbb
test
out
pusha
jo
add
adc
jb
push
jb
call
xor
push
lahf
popf
popa
lret
cmc
fsubs
pop
scas
repz
lret
dec
aaa
stc
inc
jle
adc
insb
mov
mov
lods
push
add
add
gs
scas
sbb
add
inc
int
mov
ds
adc
inc
mov
jg
mov
adc
das
jnp
out
lea
ljmp
movsl
iret
xor
loope
inc
or
mov
imul
cmp
daa
fwait
lret
adc
mov
and
pusha
ljmp
mov
dec
int
dec
in
jle
testb
iret
mov
inc
fisttps
gs
lcall
sbb
mov
adc
ljmp
loop
sub
lds
out
push
pop
push
lcall
fstpl
rolb
inc
loop
dec
out
jmp
cs
mov
or
inc
mov
je
out
lret
add
ret
pusha
fistl
mov
cmp
inc
jg
sub
repnz
add
or
movsl
push
mov
mov
fmull
ds
shl
dec
xor
xchg
out
cmpsb
and
and
in
mov
pop
pop
aaa
popa
ret
inc
sahf
inc
jecxz
pop
xchg
fcoml
in
mov
popf
xchg
jg
repz
dec
push
mov
adc
cmp
mov
adc
mov
adc
cmpsl
stos
aam
dec
jge
movsl
lret
out
inc
addl
iret
mov
ret
jge
fldcw
inc
ss
push
call
movlhps
lahf
ds
les
push
lcall
push
fdivrs
scas
xchg
dec
insl
pop
aas
fsubl
adc
push
shr
jae
daa
pop
stc
pop
xchg
inc
mov
jecxz
test
adc
add
orl
sbb
daa
push
mov
and
shr
adc
adc
mov
pop
mov
mov
jecxz
dec
ljmp
mov
or
sub
or
out
add
insl
mov
and
addl
aaa
mov
pop
mov
dec
add
aas
sti
in
stos
jge
inc
mull
paddsb
push
lds
and
bound
pop
bound
xor
data16
pusha
pushf
mov
xchg
jns
adc
xor
jp
in
or
sub
xchg
xchg
pop
pop
sub
jne
dec
pop
and
mov
lock
cmpsb
stc
sahf
push
mov
push
cmpsb
cs
cltd
cltd
xor
mov
lods
imul
cli
int3
or
cld
and
inc
call
jp
mov
iret
inc
into
dec
cmp
mov
int3
adc
out
addr16
mov
jno
xlat
nop
sub
filds
fs
cld
popa
addr16
les
fisubrs
cmp
bound
mov
and
dec
jg
lock
pop
add
push
rolb
gs
mov
lods
sarl
testb
in
shlb
jb
and
leave
lret
adc
mov
mov
loope
pusha
fcomps
out
mov
push
in
cmp
mov
stos
dec
scas
push
mov
pusha
adc
stos
and
popf
push
out
mov
push
sbb
insb
mov
jmp
in
ret
je
insl
lret
and
cli
jb
pop
lds
xlat
mov
push
cmpsb
ret
mov
dec
addl
jg
imul
and
xcrypt-ctr
cmpsl
pop
lods
mov
or
xchg
test
sbb
adc
lret
cltd
fistl
sub
fwait
movsb
jl
imul
cwtl
sub
fidivrl
mov
or
mov
stos
cltd
sbb
mov
lcall
mov
jge
lock
ret
inc
mov
mov
rcl
rcl
adc
xchg
fnstenv
push
push
nop
push
insb
mov
testb
sbb
or
test
cs
jbe
mov
or
and
adc
mov
mov
stos
xor
cmpsb
lds
adc
dec
push
lods
mov
mov
jp
pop
jne
test
decb
insb
lock
jge
mov
add
jns
test
mov
push
xor
popf
pop
and
in
mov
adc
dec
scas
jmp
push
xor
xor
fistl
pop
inc
add
and
in
fs
inc
into
cmp
mov
mov
movsb
lret
aad
inc
mov
clc
popa
mov
loopne
out
mov
mov
mov
inc
xorl
add
in
test
fldcw
cltd
sbb
dec
outsb
lcall
out
adc
or
and
test
sub
fldenv
stos
dec
and
cmp
push
mov
or
add
in
test
inc
xchg
rclb
pop
inc
in
mov
adc
push
out
popf
sti
pop
js
cwtl
imul
xchg
mov
xor
adc
jb
mov
adcb
mov
test
cld
adc
psubq
xor
ljmp
stos
mov
hlt
xchg
int
inc
fdivrs
add
out
je
shll
sahf
dec
sahf
xchg
xor
cmp
push
xlat
jp
mov
push
out
jne
dec
push
inc
rcll
jbe
add
ss
jo
mov
nop
sbb
stos
test
insb
jle
das
jno
mov
and
sub
dec
jno
out
push
jle
cmp
add
inc
push
test
popa
xchg
xchg
loop
or
lods
dec
scas
lcall
mov
xchg
mov
icebp
int3
rcr
fildl
sbb
xacquire
popf
fnstenv
imul
pop
xor
shll
jg
hlt
and
jl
fwait
mov
jle
loop
rorb
dec
mov
cmpsb
faddl
xchg
mov
and
cmp
ds
into
jb
out
aaa
dec
cmp
push
js
hlt
xchg
inc
xor
mov
lods
inc
sti
addr16
mov
dec
aaa
pop
or
cli
jp
inc
mov
ja
or
xor
inc
dec
inc
mov
lock
cld
nop
pop
pop
mov
in
mov
pop
outsb
lods
jns
in
rcr
lcall
andb
jg
in
enter
in
add
gs
cmc
adc
mov
std
pop
sbb
nop
mov
dec
sbb
xlat
insb
pop
mov
and
mov
cmp
and
cmp
mov
out
jecxz
mov
icebp
pop
sbb
pop
xchg
iret
xlat
push
iret
push
push
push
adc
xchg
adc
sarl
rcll
sub
push
mov
inc
jg
sub
stos
outsb
jnp
jle
in
nop
mov
scas
shlb
pop
pushf
pusha
loopne
mov
cmpsb
jg
xchg
mov
or
out
lret
rorb
dec
sahf
in
adcb
enter
divl
cmp
dec
lock
lret
lret
pop
movsl
sub
dec
mov
int3
es
stos
mov
sub
inc
inc
shll
shlb
mov
mov
mov
push
shr
in
adc
mov
mov
push
out
push
xor
mov
add
jle
shrl
mov
rcr
cmpsb
cmp
ds
enter
mov
mov
mov
dec
adcb
mov
mov
dec
push
out
scas
mov
adc
mov
xor
pop
adc
and
xchg
and
inc
jae
adc
sti
push
lea
sub
ret
push
out
push
adc
pop
ror
sarb
gs
sbb
jecxz
jge
repz
mov
out
jecxz
mov
lea
xor
imul
fidivl
aaa
out
mov
lahf
push
pop
ss
fisttps
push
mov
rcll
int
xor
nop
sbb
xor
mov
inc
mov
xor
xchg
mov
fcmovnu
sub
cmpsl
add
sahf
mov
sub
xor
lock
cmc
mov
ds
shl
jae
dec
nop
into
arpl
lods
push
mov
dec
dec
lret
mov
sbb
mov
in
dec
or
jecxz
dec
iret
test
aas
cmp
dec
into
add
jecxz
ss
pop
sbb
mov
cmp
or
and
mov
jns
inc
xor
scas
lock
adc
in
and
in
lds
adc
jmp
jmp
mov
dec
push
movsb
and
dec
mov
add
pusha
fisttpl
cmp
push
fcmovnbe
cmp
push
addr16
cmp
out
or
mov
aas
ds
mov
icebp
adc
add
xor
push
or
mov
in
arpl
or
pop
inc
bnd
dec
icebp
sub
mov
int
shrl
imul
loope
fs
inc
inc
mov
inc
inc
js
ds
and
call
popf
push
push
nop
add
shl
or
jg
aas
sbb
pop
inc
cmp
int
cmc
mov
pop
jne
adc
push
sbb
pop
arpl
clc
pusha
insl
pop
test
lea
sbb
dec
xor
std
mov
pop
mov
mov
mov
lret
dec
push
pop
test
dec
sbb
fimuls
jne
loopne
mov
shrw
cltd
faddl
cmpsb
sub
fst
popf
movsb
lcall
aaa
in
xchg
push
cmp
xor
or
lock
cmp
stc
fwait
jnp
daa
cld
pop
pop
cmp
cli
out
cmp
test
sub
pop
call
jnp
xchg
adc
test
mov
cmpsb
popl
dec
ret
and
mov
fisubrl
dec
cld
cwtl
push
loope
dec
cmp
mov
ljmp
std
pusha
mov
xchg
sub
mov
int
sbb
or
mov
std
movsl
xchg
and
push
notl
mov
xorl
cmpsl
xchg
dec
gs
push
rolb
inc
shlb
or
cld
add
jp
nop
mov
cmpsl
test
int
xor
mov
add
mov
lcall
mov
push
xchg
sbbb
xchg
mov
dec
adc
sub
nop
lret
std
adc
jle
push
pusha
inc
cmp
mov
call
jg
push
xor
mov
inc
dec
inc
out
add
add
mov
movl
and
xchg
data16
test
xchg
out
xchg
stc
pop
add
xchg
dec
jp
ds
or
jl
test
movsl
and
xchg
sub
dec
adc
sbb
inc
add
inc
js
mov
mov
xorl
shl
test
rol
jb
inc
fistpl
mov
xchg
xchg
daa
jle
jp
add
in
adc
inc
std
or
outsl
movsb
cmpsb
xor
movaps
aas
in
and
stos
leave
arpl
lret
push
cmpl
mov
jl
adc
insb
xchg
arpl
jecxz
sub
fs
cmp
dec
and
clc
fistpl
ss
fwait
ret
jo
popa
push
jle
cmp
sbb
fwait
lds
mov
sub
rolb
ret
movsb
shlb
pop
cmpsl
mov
cmp
add
ss
lret
cld
movsl
das
divl
jl
inc
dec
push
addr16
nop
jmp
nop
inc
lahf
ficoms
push
daa
pusha
jg
inc
mov
mov
aaa
jb
lcall
nop
mov
or
mov
inc
pop
jbe
xor
int
ja
out
aad
lcall
dec
mov
popl
dec
jbe
dec
movl
leave
push
or
outsl
mov
dec
inc
add
inc
add
in
loop
arpl
cmp
add
inc
cltd
xorl
jp
adc
divl
popa
bound
movsb
or
cmp
or
outsb
pop
icebp
scas
into
fwait
sub
popf
cmpl
dec
mov
cli
loop
dec
cmp
and
daa
cmp
scas
mov
insb
cmp
data16
aaa
cmp
inc
insl
adc
out
and
sahf
mov
bound
inc
inc
jg
scas
test
gs
push
lds
dec
mov
fwait
test
sahf
roll
sar
je
mov
insl
dec
loope
movsb
into
add
xor
pop
outsb
enter
mov
pop
mov
les
sbb
fnstcw
cmp
mov
sub
cmp
add
mov
mov
sbb
data16
or
inc
add
adc
rcl
clc
mov
shlb
mov
mov
test
shll
push
shll
lds
dec
sbb
ret
mov
mov
lahf
pop
mov
and
push
loopne
add
mov
push
repnz
dec
lods
mov
ds
sti
jb
jmp
out
dec
jnp
clc
test
fs
cltd
mov
lods
xor
xchg
out
xor
out
jg
or
loope
rcrl
ret
out
stc
jbe
mov
mov
fwait
lods
dec
je
es
mov
dec
fisttps
sbb
inc
cmp
mov
lret
cmp
mov
data16
mov
xor
movb
pop
lret
xchg
and
jnp
push
inc
jg
xchg
scas
fldl
cmpsb
adc
xor
mov
dec
out
mov
insl
lret
imul
jp
push
mov
inc
push
lcall
xor
xor
cmp
into
sub
lods
pop
mov
frstor
fisubs
sbb
and
lea
popf
icebp
fldl
or
iret
mov
sub
imul
mov
sbb
push
xchg
pop
out
xchg
sbb
add
dec
and
xchg
sbb
inc
adc
lahf
ror
jg
and
dec
jnp
jmp
pop
push
js
jno
xor
add
adc
test
popf
das
dec
jp
cmc
mov
jno
dec
jnp
xchg
xchg
aam
xchg
inc
xor
fcmovne
test
aad
dec
fdivs
mov
test
push
mov
mov
aas
push
aas
sub
aam
sub
mov
ds
xchg
or
js
mov
cmp
ss
je
pop
sub
into
leave
test
mov
ja
je
pop
mov
icebp
mov
mov
fsubl
dec
loopne
rorb
add
mov
fwait
jp
pop
loopne
aad
cmp
loopne
and
mov
addr16
dec
ja
in
and
aad
cmp
xchg
cmp
xor
mov
jb
sahf
push
push
pop
mov
cltd
add
inc
aaa
scas
leave
xorb
lahf
push
xor
sbbb
mov
xchg
into
push
xor
xchg
dec
push
int
mov
push
mov
cmp
shrl
jno
inc
add
fcoml
pop
jg
repnz
push
push
inc
or
jg
out
lret
xor
scas
stos
jge
push
js
jae
lcall
mov
sub
dec
jecxz
jmp
stos
add
cs
pop
nop
mov
addr16
mov
sbb
jo
sarb
lods
lret
bound
xor
arpl
rorl
stos
nop
jg
cli
mov
adc
mov
int
out
std
pushf
clc
add
fistps
mov
jbe
ret
nop
xchg
test
push
inc
lcall
ljmp
leave
movsl
popf
in
mov
lret
inc
sarb
stc
and
push
sub
or
insl
and
div
jbe
xlat
push
test
hlt
fwait
ret
inc
stos
xchg
in
adc
ja
pop
cmp
xor
inc
cmpsb
mov
dec
stc
add
mov
insl
adc
xchg
sub
dec
push
inc
shr
je
in
fcompl
orl
sub
mov
push
sbb
in
cmp
jb
and
stos
pop
push
stos
pusha
mov
xchg
repz
jl
dec
daa
imul
adc
xor
fs
adc
addb
xor
pop
jo
out
nop
repnz
jmp
mov
sarb
and
fs
out
adc
sub
mov
mov
push
mov
decl
mov
mov
cmp
pop
ror
push
rcrb
hlt
mov
push
adc
fcmovnbe
aam
or
aas
pop
adc
jno
jmp
cs
mov
sbbb
cmc
subb
insl
lret
lret
adc
loope
xor
add
add
mov
jp
and
jno
mov
add
bsf
and
jle
mov
xor
out
push
jg
enter
push
rorb
fmull
push
jb
bound
mov
jo
xor
inc
insl
enter
xor
ja
fcmovnb
and
push
int
cmc
xor
mov
mov
mov
ljmp
dec
repz
mov
fisubrl
pop
pop
outsl
loop
aam
arpl
cmp
cmpsl
ror
jns
fwait
sub
adc
int
into
push
adc
lods
xchg
out
mov
cmp
lahf
inc
cli
jo
sbb
pop
out
dec
push
punpcklwd
mov
mov
movsl
fcoml
and
outsl
lret
icebp
or
mov
inc
dec
and
xchg
adc
inc
arpl
dec
sub
fildll
daa
roll
movsb
in
ret
outsb
nop
es
roll
insl
adc
popa
in
aaa
stos
stos
or
mov
cs
lods
jl
mov
lds
setne
adc
pop
orl
push
xchg
inc
xor
push
mov
adc
sub
jp
les
sarb
xor
clc
xor
shr
fidivs
ds
das
mov
shld
leave
aad
mov
fbld
push
clc
mov
add
cli
mov
push
pop
aam
mov
sub
shlb
mov
cmc
scas
rcll
sbbb
lahf
add
cmc
xchg
push
jb
adc
jecxz
shrb
repnz
push
xchg
rcll
mov
into
jbe
lret
dec
dec
loope
xchg
adc
adc
ds
fsubp
xor
repz
lods
or
add
fwait
aaa
mov
pop
adc
cld
shll
xor
into
push
notb
jns
into
cmpsb
pop
dec
mov
daa
aas
jg
lock
inc
ja
jl
push
jb
pop
lret
xchg
aad
int
mov
insb
push
cmpsl
inc
aaa
adc
cltd
cwtl
inc
inc
adc
pop
data16
aam
in
mov
ror
or
adc
movsl
pop
lds
cmp
push
mov
xor
push
inc
xor
call
or
inc
inc
nop
pop
out
fs
mov
stc
cmp
in
pop
cld
pop
adc
ja
jg
jg
or
aas
fistpll
bound
mov
jl
or
adc
and
jge
lcall
or
inc
xor
shl
pusha
outsl
test
dec
rorl
adc
xor
nop
shlb
xchg
adc
jne
mov
xor
push
push
fucomp
push
or
xor
jns
les
ljmp
je
sti
cmp
jl
lcall
inc
push
cmp
pop
push
push
sar
pop
add
add
movsl
out
testl
mov
sbb
ss
rep
push
xor
stc
jp
out
movsb
lret
push
mov
xchg
stos
rolb
add
push
sub
xor
or
inc
push
das
lret
scas
dec
ja
pusha
icebp
dec
leave
in
add
push
xchg
hlt
mov
iret
adc
shll
into
jecxz
pop
pop
in
sbb
in
orb
xchg
sbb
add
aaa
cmp
lea
and
loope
inc
push
adc
pop
in
xor
adc
into
inc
dec
adc
mov
loopne
push
rcll
xchg
pop
movsb
mov
fsubrl
push
ja
popl
fisubs
sbb
call
je
cld
add
out
orb
sub
sub
xchg
cltd
sub
test
add
imul
and
cmp
mov
xchg
stos
push
mov
into
mull
xchg
ficomps
cli
and
movsl
mov
testl
fadds
leave
xchg
mov
repnz
jl
add
mov
mov
mov
lahf
rorl
loopne
sub
in
les
shrl
addl
xchg
add
rorl
adc
xor
je
jno
xlat
dec
adc
ljmp
sub
shl
into
xchg
mov
shll
lds
lods
ljmp
push
sbb
dec
cmp
lods
xchg
adc
mov
stc
out
push
xchg
jno
insb
push
ficomps
outsl
sub
shll
imulb
test
mov
and
stos
adc
jge
les
mov
jge
jb
leave
jmp
adc
roll
jno
out
in
adc
roll
inc
mov
stos
in
dec
rcrb
into
pop
xchg
cpuid
stc
mov
jg
mov
mov
mov
pop
das
and
in
push
mov
int3
xchg
jb
sbb
lea
cmp
scas
sub
pop
insl
dec
cmp
cli
pop
andl
leave
jbe
adc
rolb
mov
fcmovnu
fnstenv
and
enter
sarl
jge
addb
inc
jb
push
xor
addr16
aad
xor
mov
xchg
xchg
add
pop
lods
repz
adc
ss
xchg
test
sbb
icebp
into
sub
stos
sub
lods
adc
inc
divl
jmp
movsl
mov
and
jae
add
sub
push
jae
mov
lods
cs
adc
xchg
cmp
lahf
fisubrs
test
popf
jg
out
jno
ss
dec
jle
negl
mov
int
ds
mov
sbb
mov
aad
and
inc
inc
inc
jb
int
push
aam
add
jns
lds
std
jno
clc
std
cmp
shlb
or
sbb
push
push
rcl
mov
sbb
lods
inc
inc
sub
pop
or
mov
push
mov
loope
test
pop
mov
mov
cmpsb
and
sbb
xchg
or
mul
mov
pop
mov
sbb
mov
sbb
notb
mov
int3
or
mov
and
cmp
mov
repz
out
das
sub
jg
jae
popf
xor
sub
insl
mov
loope
mov
insb
pop
nop
in
push
push
push
lret
cmpsl
sub
pop
sub
mov
rcl
push
pop
or
dec
test
lret
push
xor
jg
fidivrl
push
sub
or
sbb
cmp
mov
mov
outsb
out
cs
loopne
nop
adc
xchg
orb
lret
test
xchg
and
arpl
fldenv
and
dec
push
aaa
push
fcmovu
lock
cltd
mov
cli
and
in
insb
xor
outsb
or
int
adc
cmc
and
pop
and
cmp
aaa
andb
inc
adc
dec
int3
in
popa
jle
jnp
xor
and
sub
pushf
or
jg
xchg
arpl
scas
xchg
xor
pop
cmp
leave
inc
jb
les
shrb
pop
lret
or
mov
jg
xchg
test
out
subb
cmp
fcoml
inc
popf
insl
outsb
or
xor
mov
lods
and
inc
add
std
rcrl
inc
stc
sub
gs
add
dec
cmp
imul
cltd
icebp
and
sbbb
cmp
mov
push
pop
out
mov
adcl
push
shll
mov
cli
iret
jp
subl
scas
mov
imulb
pop
jno
inc
fcompl
ret
clc
lock
or
push
push
xchg
or
jnp
jle
xor
add
adc
inc
jb
outsl
and
in
stc
sbb
mov
in
lds
xor
push
testl
aas
into
aas
cmp
sub
sub
mov
jnp
loop
cwtl
push
sub
xchg
in
in
inc
sbb
sub
ljmp
stc
adcl
push
lods
pop
out
arpl
ss
xchg
sub
stc
sub
or
pop
inc
mov
into
pusha
and
sub
js
xorl
stos
jecxz
cltd
fs
adc
mov
rcrb
dec
mov
loope
lods
roll
fsubrs
xchg
addr16
aaa
and
mov
and
add
movlps
ret
push
cld
roll
adc
lret
xchg
inc
push
sbb
sub
cltd
push
cmpsb
mov
lods
inc
xorb
sub
pop
mov
lea
inc
or
cmp
scas
repz
in
rorl
add
rcll
jb
daa
test
pusha
in
jo
pop
sarl
movsbl
jae
cmp
out
in
movsl
push
and
adc
popf
lret
fldl
ss
subps
nop
leave
cmp
add
into
sub
xchg
xchg
decl
mov
push
pop
addr16
pop
in
insl
int3
pop
sbb
mov
jg
cmp
jle
cld
xor
scas
xor
testl
and
stos
jb
sub
dec
pop
insl
inc
stos
adc
dec
jge
mov
loope
adc
loope
fsts
out
and
nop
add
cltd
sub
sar
mov
nop
and
rcll
xor
outsb
pop
xchg
pop
loopne
pop
out
pop
fisttps
jge
mov
cmp
add
jbe
and
mov
jmp
adc
out
mov
xchg
into
mov
xchg
jns
xor
and
outsb
loop
inc
pop
mov
jmp
sub
sbb
fwait
nop
xchg
add
push
rcll
cs
dec
aaa
pop
mov
push
pop
mov
out
dec
add
loope
and
into
out
shrl
pop
cmpsb
cmpl
out
and
idivb
cmc
ja
sub
inc
xor
std
cwtl
mov
cmpsb
pop
adc
cmp
aaa
jne
sbb
outsb
adc
scas
out
bound
and
adc
repnz
xorb
adcb
jp
stc
jo
inc
daa
mov
leave
cmp
loop
ret
stos
cmp
or
testb
cmpb
dec
adc
push
add
ffreep
xchg
cmp
bound
rclb
inc
pusha
data16
dec
dec
mov
pushf
pop
stc
mov
dec
sub
push
dec
add
mov
ds
mov
adc
jle
insb
sbb
and
sar
push
sub
popa
dec
mov
xor
outsl
push
cmpsb
xor
adc
lea
repz
or
dec
cld
mov
xchg
js
pop
inc
leave
inc
xchg
insl
xor
out
into
cmp
inc
add
xor
mov
push
sbb
jnp
adc
adc
les
add
mov
out
mov
rcrl
aaa
repnz
mov
jecxz
outsl
sbb
out
add
cli
pusha
imul
push
lret
add
icebp
pop
and
loop
je
xchg
andb
adc
rcl
mov
aaa
test
in
adc
xor
xchg
ret
popf
mov
xchg
jnp
shl
jno
test
out
fld
inc
mov
jecxz
xor
push
movl
shrl
mov
and
imul
mov
dec
aas
pop
jl
shrb
push
outsb
push
push
or
pop
adc
pop
or
mov
mov
xor
data16
ja
mov
ret
dec
sbb
inc
jmp
mov
and
in
gs
fisubrs
lahf
jg
xchg
rorb
or
cmp
pop
xchg
inc
cwtl
cmp
incl
out
rcrl
and
orb
xchg
daa
leave
push
stc
or
or
out
cld
inc
in
jecxz
add
mov
jl
loopne
push
mov
dec
mov
loope
addr16
cs
lods
and
mov
lds
inc
and
sbb
rolb
stc
adc
jmp
outsb
adc
in
cld
stos
fcoml
xor
leave
mov
add
mov
shrl
cmp
mov
jb
add
cmp
movsb
test
adc
fidivs
mov
push
in
add
xchg
loopne
loopne
pusha
lods
mov
adc
rol
adc
adc
cmp
gs
jge
ret
test
jecxz
sar
mov
dec
sar
in
inc
lock
out
ss
adc
aas
outsl
lahf
stos
pop
fidivl
pop
daa
pop
cmp
mov
clc
mov
testb
out
lcall
inc
pop
push
mov
in
mov
scas
adc
andb
roll
mov
mov
fidivl
pop
xchg
mov
inc
dec
fnstsw
push
fstl
add
repnz
out
aam
lods
or
mov
not
daa
cmc
pop
add
cwtl
sbb
and
leave
and
cld
pop
imul
outsb
xchg
shlb
cmp
shlb
andl
orl
and
mov
mov
gs
fstpt
jbe
adc
cmp
inc
mov
lock
les
lods
sub
or
filds
mov
add
push
xchg
jecxz
leave
sbb
dec
stos
push
cmp
lods
stc
cs
fdivl
lret
push
push
int
push
sbb
push
stos
inc
sbb
aaa
and
add
pushf
pusha
ljmp
jle
pop
dec
xchg
push
roll
cmpsb
xchg
sbb
aaa
mov
or
xchg
ret
push
repnz
mov
jp
lds
jge
outsb
ret
mov
pop
in
stos
iret
aas
pop
mov
idiv
fstl
cwtl
add
and
scas
sub
cmpsb
push
jp
aam
sub
add
add
movsb
mov
xor
add
add
addb
push
xor
mov
in
lcall
icebp
cmpsb
ret
das
mov
jge
dec
inc
aas
shll
and
jb
add
hlt
lods
inc
in
mov
pushf
adc
jb
mov
inc
mov
incl
lcall
addb
dec
cmpb
int
addb
pushw
or
cmp
xor
stos
rcl
xchg
mov
test
inc
ja
scas
movsb
imul
pop
push
les
dec
jle
jno
aam
push
cmpsb
pop
push
xchg
xor
fsubrs
cmp
lcall
rorl
out
lock
sbb
mov
mov
int
sub
out
rcr
mov
aaa
cmp
movsl
and
fadd
gs
xchg
pop
mov
sar
mov
mov
inc
pop
scas
jo
push
and
sub
les
lret
xor
jg
cmp
andb
lcall
jp
into
sub
mov
push
xchg
bnd
fwait
lahf
or
adc
xor
test
mov
aaa
repz
int3
enter
xlat
and
xor
xor
lds
cmc
pop
out
push
ret
aaa
xor
pusha
fsubrl
movsw
add
int
iret
adc
jns
loopne
push
fs
psllw
mov
cmp
int
mov
inc
aad
adc
xor
adc
fisttpl
adc
add
adc
and
adc
jo
jmp
js
sbb
pcmpeqb
rcl
push
ds
popa
push
outsl
insl
shll
into
sbb
and
ja
adc
vpsrlq
in
lock
bound
jnp
fisttpl
mov
leave
or
div
add
clc
push
xchg
pop
out
xchg
cmp
sbb
cmpsl
jg
cs
int
dec
inc
mov
rorl
out
cltd
fcompl
cmpsl
mov
into
stos
out
dec
movsl
shlb
lods
outsb
rcr
nop
lcall
adc
imul
shrb
lods
mov
sbb
test
or
int
cmp
sahf
fdivr
addr16
xor
popl
aaa
push
push
and
je
xlat
cli
sbb
add
lcall
jg
jecxz
test
sub
outsb
mov
dec
arpl
fwait
insl
and
outsl
xlat
mov
test
fsubs
jae
std
cli
inc
and
movsl
int3
leave
enter
or
adc
xor
mov
jns
ds
in
out
stos
xchg
sbb
pusha
jl
xchg
push
stc
lds
pop
and
pusha
in
xor
outsl
sbb
push
cmp
sbb
push
mov
mov
cmpsb
xchg
dec
dec
clc
add
cmp
sub
xor
mov
jmp
xor
rcpps
jnp
fildl
xor
xchg
and
movsb
push
sub
push
je
fwait
xor
ja
mov
and
gs
fildl
out
out
sbb
push
dec
insb
push
push
push
iret
adcb
push
ljmp
out
sbbl
pusha
movsl
mov
jg
add
mov
inc
int3
xchg
pop
movsb
stc
cltd
xor
mov
pop
jbe
data16
sub
sub
adcb
test
cmp
inc
in
in
daa
stc
sbb
lret
xchg
pop
sbb
insl
jg
sub
inc
and
daa
fimull
arpl
adc
test
test
adc
sbbl
mov
xchg
sbb
xchg
aad
inc
push
das
aam
aam
push
sbb
pop
stc
fisttpll
add
mov
movsb
daa
cmpl
jmp
cmpsl
js
mov
mov
movsb
pop
mov
pop
xchg
ss
scas
stos
mov
add
cmp
fstpt
adc
or
mov
sti
int
mov
mov
sbb
outsb
mov
mov
mov
jb
sub
pop
push
test
xchg
jne
xchg
inc
jmp
mov
cltd
push
mov
cmp
adc
sub
xchg
cld
xlat
rorb
xchg
in
dec
subl
dec
mov
and
leave
sar
inc
push
sub
cld
dec
mov
mov
mov
xchg
xorb
in
aas
in
enter
inc
in
mov
or
mov
fucom
inc
ds
outsl
adc
mov
aas
sub
inc
cmp
ljmp
push
fisubrl
fidivs
jno
adc
movsl
pop
lret
or
aad
add
inc
push
int
inc
std
cmpsb
sar
sbb
adc
and
xchg
mov
inc
stc
insb
mov
mov
push
icebp
add
xchg
xor
and
rcll
lret
mov
rclb
lret
jbe
orb
add
popa
inc
dec
inc
repnz
push
sbb
repz
in
imul
lcall
sub
or
inc
or
xor
cmp
ficomps
xchg
in
imul
inc
mov
push
inc
cli
ja
xchg
scas
rcrb
xchg
sbb
add
arpl
cmp
sbb
cmp
add
jbe
push
lcall
cs
push
adc
in
popa
sub
lods
subl
sbb
into
in
jo
and
jo
pop
dec
and
and
int3
mov
inc
int
cmp
and
mov
push
sub
test
addb
enter
testl
fmull
pop
push
cltd
out
mov
nop
cmp
fisubs
cmp
js
xchg
push
dec
test
mov
jo
inc
in
les
and
cltd
inc
dec
add
adc
cmp
leave
inc
rol
scas
inc
xor
ds
aaa
push
mov
inc
scas
mov
rolb
push
sub
pop
push
inc
jl
add
xchg
xor
or
rol
mov
ja
mov
fdivl
xchg
insl
or
cmpsl
lods
sbb
pop
mov
add
xchg
mov
and
pop
jne
mov
scas
pop
je
adc
push
ret
adc
xchg
jnp
clc
pop
int3
pop
out
and
ss
pop
or
sub
imul
repnz
aas
int3
inc
push
sbb
push
clc
add
and
mov
adc
ds
mov
movsl
call
add
dec
test
adc
pop
mov
js
jb
sti
pop
lret
nop
mov
cmp
test
pushf
inc
arpl
into
rorb
lcall
jnp
mov
mov
mov
cs
mov
cmp
daa
push
out
push
pop
jns
sbb
inc
inc
std
in
mov
in
push
pop
dec
push
in
add
push
xchg
outsb
out
mov
xchg
push
testl
xor
in
xlat
shr
shll
xor
sbb
push
mov
pop
lret
push
ficoms
cmp
int
imul
push
and
inc
mov
jno
cmp
sbb
aaa
movsl
faddl
xchg
insb
mov
mov
iret
adc
xor
shrl
push
out
data16
insl
cmp
aaa
stos
adc
out
xor
bound
mov
popa
push
xchg
ret
shlb
adc
mov
in
sub
fucom
mov
adc
lcall
mov
push
add
js
inc
nop
xlat
xor
mov
clc
insl
jb
icebp
push
inc
sbb
lds
cmp
rorb
ret
je
movsl
adc
sub
xchg
scas
ja
mov
insl
das
sub
pop
sbb
test
cmp
add
rcr
inc
push
pop
lods
imul
adc
jg
dec
data16
arpl
sub
fldt
loope
cmp
arpl
add
mov
sbb
pop
bound
mov
mov
adc
and
mov
icebp
pop
mov
daa
sahf
int
ljmp
xor
adc
repz
ret
push
xlat
jp
add
test
inc
jo
jns
jmp
daa
pop
nopl
cmp
mov
add
mov
dec
dec
pop
in
es
and
out
in
pusha
daa
pop
mov
push
int
js
leave
cmpsb
add
mov
jg
sub
mov
ds
mov
mov
inc
ret
in
and
cmp
nop
adc
and
pop
and
mov
shl
loope
xchg
les
adc
cmp
mov
stos
mov
outsb
into
in
decb
mov
inc
jnp
stos
loopne
push
lret
cs
lcall
or
mov
adc
mov
ljmp
mov
cmp
fwait
xlat
ficompl
or
push
xchg
mov
cmp
notl
xchg
sti
mov
mov
and
stos
shl
test
adc
mov
lahf
xor
fdivs
andb
mov
out
xchg
jle
push
loop
mov
adcb
int
roll
xchg
stc
xchg
push
jnp
lods
pop
mov
adc
gs
mov
push
jbe
pop
stos
daa
push
mov
inc
loopne
mov
xchg
and
push
daa
inc
cmc
int3
jnp
sub
adc
aam
dec
std
inc
jb
jg
pop
mov
mov
cwtl
leave
dec
daa
add
popl
and
dec
cmp
flds
popf
stc
out
mov
ja
mov
rcrb
stos
pop
addb
mov
adc
cmp
and
jge
int3
lods
cmpsb
push
push
xchg
cmpsb
cmp
mov
inc
mov
jns
pop
lcall
pop
push
scas
jns
jg
into
mov
jecxz
or
mov
in
fiaddl
xchg
orb
xor
mov
out
cld
pop
add
inc
jmp
mov
call
xchg
lds
adc
and
and
pusha
mov
stos
mov
dec
hlt
xchg
mov
push
pmaxsw
fiaddl
cltd
dec
hlt
lret
xchg
movsl
jnp
iret
cmp
jae
fisubs
jge
data16
xlat
out
dec
outsb
cmpsb
inc
jns
insl
push
adc
ret
dec
pop
punpcklbw
mov
shlb
loop
inc
and
outsl
push
lea
lret
inc
movsl
mov
ljmp
or
push
sub
lahf
sbb
imul
adc
and
xchg
test
adc
movsb
push
cmpsl
xchg
lahf
and
or
cld
push
movsb
inc
mov
jl
or
dec
xlat
xchg
mov
gs
mov
mov
int
mov
pop
dec
cmpsl
adc
lds
dec
jns
enter
cmc
fimuls
push
mov
test
inc
mov
mov
push
jno
inc
or
inc
sbb
insb
inc
in
push
mov
dec
push
sbb
sub
jle
mov
adc
stc
inc
push
je
mov
inc
push
dec
inc
insb
data16
popa
xchg
int3
xor
xchg
je
mov
stc
and
xchg
xor
in
cmp
cs
bound
mov
jns
mov
or
pop
test
adc
test
xor
daa
jp
out
int
cmp
mov
ds
sbb
mov
idivb
das
cmpsl
loopne
test
hlt
mov
add
add
dec
movsb
jnp
inc
ret
inc
leave
inc
xchg
mov
adc
mov
xorl
cld
lods
rcrb
pusha
adc
aaa
fisubs
stos
mov
iret
inc
outsl
popl
dec
mov
cmp
cwtl
icebp
dec
xor
pusha
add
push
mov
cmc
stos
jp
mov
aam
daa
adc
xchg
fidivrl
imul
mov
add
jge
call
stc
sti
jecxz
mov
shll
mov
inc
add
add
insl
rcrl
repnz
popa
push
imul
mov
fwait
out
jbe
cld
xchg
mov
push
fucom
enter
add
and
dec
sbb
dec
popf
fidivrs
test
insb
int
mov
jb
jp
jo
jmp
mov
mov
out
icebp
nop
lcall
aas
adc
jno
mov
in
xchg
cmp
dec
adc
insb
fistpll
in
push
sti
repnz
dec
fdivrs
in
in
je
inc
out
or
stos
xchg
insl
jg
daa
or
push
push
pop
jle
repnz
push
inc
mov
push
and
rclb
jo
mov
mov
hlt
je
jmp
pusha
sub
loope
add
lods
sti
dec
ds
int3
pop
xlat
adc
push
ljmp
mov
sahf
mov
adc
mov
push
in
mov
pusha
lods
aaa
push
and
jno
insl
dec
push
sub
push
lea
mov
fildl
lea
xor
and
cltd
jp
out
mov
adc
mov
es
and
inc
jp
xchg
inc
shr
jae
push
fiadds
push
popf
jp
mov
sti
mov
jg
dec
jae
ljmp
imul
xor
out
push
insl
xchg
pop
jl
xchg
cmp
xchg
and
mov
inc
cs
in
sbb
lahf
inc
les
ss
pop
cld
cmp
test
pop
xchg
popa
enter
inc
lcall
xor
pushf
int3
mov
jge
adc
sub
and
mov
pop
xchg
dec
inc
push
dec
loop
je
mov
enter
xor
ds
test
push
xor
adc
jg
xchg
stc
into
insl
mov
test
and
stc
pop
xor
dec
mov
mov
mov
aaa
mov
inc
lods
negl
inc
add
jmp
xchg
sbb
mov
and
fwait
sbb
adc
stos
cld
mov
fsub
js
push
mov
int
stos
loope
stos
lods
push
push
fsts
fimuls
push
and
jb
and
loope
ficompl
movsl
cmp
lea
xchg
stc
fadd
and
mov
ret
pop
mov
xchg
mov
sub
jno
out
into
xchg
dec
cmpsl
pop
mov
mov
stc
stos
fs
adc
mov
stos
and
lahf
into
add
dec
ret
test
pop
out
xchg
inc
int
in
xchg
push
daa
lds
add
jbe
out
jne
movsl
mov
rcr
ds
fnsave
addb
popf
mulb
add
push
xchg
mov
mov
jbe
push
lea
testl
das
rorb
repnz
inc
lea
mov
int
jg
xchg
inc
scas
sub
insl
out
ret
mov
sub
push
addr16
popf
push
add
shrl
add
and
xor
out
int
xor
sahf
ljmp
fiaddl
fnstenv
cs
pushf
pop
mov
push
ret
jbe
push
jg
jp
inc
lods
mov
outsl
cwtl
push
jmp
jne
lock
repnz
xchg
lret
js
lods
push
popa
lods
mov
popf
sti
lcall
shrd
loopne
mov
xor
jecxz
in
pop
mov
xchg
mov
fldl
push
adc
inc
dec
adc
fisubrl
mov
mov
das
xchg
out
out
fimull
sub
jb
addr16
ret
jb
shr
sarl
adc
mov
iret
std
and
or
outsb
sub
jge
jbe
sbb
xchg
mov
out
sbb
ja
mov
push
loopne
push
dec
ljmp
adc
ror
lret
and
icebp
mov
cld
sub
mov
sub
dec
fsubrs
mov
jno
lods
bound
sbb
sub
inc
je
add
repnz
insl
mov
jg
push
xchg
mov
stos
push
and
cs
daa
pop
in
dec
cmpsb
pusha
adc
add
mov
repnz
das
lret
pop
mov
push
push
nop
push
add
jo
hlt
out
orb
shrl
mov
lcall
add
mov
xchg
cwtl
sub
push
out
inc
stc
pop
ret
lods
in
mov
inc
sbb
and
rcl
imul
ss
mov
mov
mov
mov
sbb
mov
fmul
and
jg
mov
mov
sub
call
mov
jg
out
and
xchg
inc
cli
lock
mov
rcl
add
xor
movsb
mov
xor
push
call
cmp
inc
xchg
add
inc
addr16
jno
xchg
dec
push
orps
push
inc
sbb
mov
xchg
clc
push
mov
inc
mov
orb
mov
jns
lcall
mov
aaa
inc
rcrl
adc
cmp
jl
or
push
test
inc
popf
jnp
dec
popa
adc
add
push
xor
addl
mov
insl
mov
dec
and
repnz
stc
mov
ficoml
and
fimuls
or
cs
stos
out
adc
jmp
add
daa
inc
repnz
cs
lods
cmpsl
adc
out
inc
inc
scas
lret
cs
xchg
mov
subb
inc
add
dec
inc
addb
data16
lods
das
jg
xor
fcmove
mov
out
cmp
mul
je
sbb
inc
jmp
inc
in
lods
mulb
xchg
rorl
lea
add
icebp
sbb
pop
xor
push
and
xchg
mov
into
pop
rclb
pop
mov
mov
adc
sbb
fnstsw
pop
roll
xchg
addb
leave
arpl
orb
out
outsl
scas
addb
addr16
aaa
cmp
out
push
imul
mov
scas
mov
stos
push
push
pop
pop
adc
adc
lea
xchg
test
into
lea
popa
enter
rcrb
mov
add
xor
sti
stos
pop
insl
lods
jl
cmc
jo
cli
or
stos
or
test
inc
jnp
stos
jmp
push
push
mov
cmpsl
fimuls
sub
jg
mov
dec
nop
push
loope
lret
insb
inc
sarl
in
cmpsb
adc
clc
add
push
jmp
mov
jmp
dec
sahf
loop
and
pop
insb
fmull
adc
bound
and
pop
xor
in
push
xchg
ljmp
dec
int
das
jge
fs
sbb
ret
sub
stc
scas
das
xchg
mov
mov
jp
shlb
cs
filds
sub
push
sbb
adc
and
cmpsb
lss
sub
xchg
in
std
mov
shlb
xor
insb
clc
mov
shr
jecxz
adc
xchg
incb
push
fiadds
xchg
mov
mov
or
xor
or
inc
imul
sahf
and
xor
inc
dec
outsb
test
test
pop
test
cli
inc
add
or
pop
dec
mov
outsb
fst
push
xchg
jae
mov
mov
pusha
inc
out
sub
hlt
cmp
ficoms
add
scas
lahf
lods
fisubrl
test
pop
ss
scas
jbe
lea
push
daa
mov
popl
in
lock
popf
sbb
test
mov
inc
clc
shrl
or
bound
and
mov
clc
cmpsb
mov
pop
sub
mov
push
bound
mov
sub
mov
mov
popa
daa
xchg
add
nop
xchg
out
lcall
data16
pop
add
mov
cmpsl
into
jecxz
sbbb
leave
lods
push
imul
cmpsl
mov
add
add
rclb
inc
in
into
clc
xor
cmp
mov
test
mov
mov
adc
push
lods
fdivrs
mov
jp
adc
ss
aam
lahf
cmp
mov
push
arpl
adc
mov
sub
add
dec
in
leave
jo
shlb
rcrb
scas
pop
mov
jns
sbb
repz
xlat
dec
adc
dec
imul
mov
cs
inc
mov
dec
mov
in
mov
cli
les
sbbb
adc
mov
into
sbb
out
jnp
pop
add
pop
dec
mov
sbb
add
push
xor
inc
lea
dec
pop
in
cmc
arpl
clc
es
mov
scas
adc
mov
mov
inc
sub
mov
pop
clc
xchg
lcall
lods
jge
stos
push
cmpsb
testl
lcall
clc
mov
iret
mov
loope
xchg
ret
jg
es
xchg
inc
push
xor
dec
cmp
xchg
push
cld
test
inc
ja
xchg
mov
dec
cmc
int
mov
pop
mov
scas
loope
jmp
lcall
sub
xchg
pop
xchg
push
xchg
stos
inc
lods
ja
mov
enter
pop
inc
jecxz
and
adc
cmpb
mov
movsb
pop
das
adc
popa
jg
pop
and
xchg
stos
sub
pop
sbbb
jmp
adc
popf
add
cmpsl
in
inc
push
mov
stos
mov
loope
pop
mov
inc
sbb
and
daa
idivl
and
mov
adc
mov
mov
out
sub
pop
test
and
mov
dec
aad
pop
das
cmp
addr16
mov
fnsave
movsl
jno
or
test
lret
fstl
and
mov
cltd
rorl
jecxz
jo
inc
inc
or
cmpsb
mov
notb
in
fcoml
or
lods
inc
xchg
mov
xlat
cmpsl
mov
test
insb
stos
mov
mov
loopne
xchg
and
iret
std
cmp
pop
subb
or
inc
loope
icebp
ud1
dec
stos
jnp
sub
cmp
sarb
outsb
mov
enter
jmp
mov
push
pop
xchg
rolb
out
inc
sub
ret
test
jbe
mov
jmp
les
mov
iret
push
sbb
mov
pop
daa
and
int
sahf
stos
jl
nop
cwtl
or
data16
mov
loope
xor
inc
lret
iret
movsl
inc
stos
gs
sbb
les
aas
popl
push
adc
xchg
mov
pop
adc
add
jl
mov
push
cmpsl
testb
jle
xor
jecxz
inc
jno
inc
std
adc
mov
test
dec
mov
mov
popf
jns
or
ss
outsb
add
fisttpll
les
nop
out
sbb
test
je
js
mov
adc
pop
stos
jns
das
inc
ss
inc
aas
faddl
pushl
pop
mov
fcoms
cmpsb
mov
xor
stos
push
mov
mov
jmp
inc
outsb
mov
pop
inc
inc
popf
adc
inc
add
xchg
in
push
inc
xor
ret
nop
push
cltd
and
cltd
mov
jo
mov
in
iret
mov
sbb
cmp
pop
inc
cs
adc
inc
mov
ljmp
mov
ss
sarb
repz
add
sbbb
jmp
jo
inc
xchg
out
int3
pushf
sbb
lods
sahf
lcall
movsl
sub
popf
pop
lahf
push
iret
inc
jbe
mov
cs
nop
movsl
sub
addr16
xchg
fisubs
sbb
add
xchg
fdivrs
test
daa
data16
jns
jae
das
bound
insl
daa
cmc
pop
int3
nop
out
xchg
ds
xor
inc
and
push
jne
daa
and
jno
lcall
sbbb
stc
gs
sbb
fdivrs
dec
insb
mov
rorl
test
scas
add
data16
adc
mov
sbb
pop
push
int3
mov
xchg
lock
and
jg
popf
cmp
pop
ljmp
push
mov
add
jo
mov
aaa
les
fiaddl
push
mov
sub
repnz
sbb
mov
loope
sub
cmp
xchg
dec
mov
dec
cld
lcall
inc
js
aas
inc
sub
popa
repz
test
es
enter
ret
pop
push
push
stos
jb
pop
rclb
jle
cmp
mov
orb
popa
push
xchg
xlat
mov
or
xchg
or
mov
add
sub
insl
fisttpl
inc
outsl
xor
inc
fwait
sub
jne
jb
sbb
cmp
outsb
movsl
xchg
out
inc
xor
fdiv
imul
xor
push
mov
roll
push
xchg
sbb
pop
xor
xchg
push
test
jle
sbb
or
leave
clc
rcll
lds
pop
inc
not
ret
mov
adcb
out
lea
ljmp
pop
lret
inc
push
stc
push
fadd
and
mov
push
xor
aaa
cmp
das
stc
imul
xor
dec
sbb
lret
adc
dec
push
orb
and
addr16
inc
in
inc
dec
cmp
insb
rol
lcall
hlt
fstl
pusha
pop
pop
push
pop
jg
jns
stc
sub
pop
inc
xor
sub
cs
xor
insl
jge
pusha
dec
mov
and
push
aad
test
bound
add
xchg
mov
push
sbb
mov
repz
xchg
xchg
int3
scas
pop
fstl
gs
dec
pop
mov
inc
jbe
mov
adc
clc
jge
ljmp
pop
sbb
mov
mov
mov
mov
mov
adc
stos
and
push
mov
and
imul
pop
sarl
and
out
push
pop
push
addr16
dec
mov
sbb
xchg
and
dec
sqrtps
aaa
adc
or
jmp
pop
dec
xchg
add
inc
inc
call
mov
rcrl
jl
out
roll
les
repz
cs
dec
pop
cmp
sub
jge
push
das
call
ds
js
jg
add
pop
cmp
or
mov
popa
pop
mov
pop
adc
dec
sub
ret
dec
andb
push
mov
add
pop
add
mov
shl
pusha
js
pop
fs
ficoml
cmp
inc
and
cld
mov
dec
popf
dec
popf
in
ljmp
push
inc
cmp
sub
call
or
add
dec
jmp
jb
dec
jl
stos
sub
fs
dec
cmp
jp
sub
mov
and
lods
or
mov
push
imul
inc
adc
jno
xchg
xor
lcall
fmuls
fdivrl
fstpt
sti
dec
sbbb
xor
loope
imul
dec
lods
sbb
cs
jae
pop
dec
and
add
jg
in
dec
push
dec
fiadds
arpl
insb
outsb
test
out
or
popf
push
arpl
cmpsb
dec
jnp
cmc
push
cmpsl
pop
int3
dec
sbb
inc
pop
xchg
lcall
sarb
shlb
lcall
mov
call
cmp
xchg
xchg
in
fdivl
mov
into
fildll
adc
int3
dec
iret
arpl
lret
or
in
push
test
out
xorl
loope
ss
testb
add
roll
sub
mov
push
add
jmp
popa
lods
mov
movsb
jge
push
xorb
jns
xchg
cli
shll
bound
or
lcall
fisubl
and
and
out
out
xchg
or
mov
fmull
flds
ja
lock
mov
add
push
data16
in
aaa
mov
cmp
xchg
ret
mov
lret
nop
loop
roll
jb
push
and
lock
popf
jns
adcb
shlb
jmp
out
pop
je
mov
mov
lea
jge
mov
jb
push
sub
mov
fmull
leave
std
xor
les
inc
or
pushf
mov
add
sbb
sub
sbb
xchg
mov
and
dec
xchg
scas
test
xor
or
pop
cmpsb
dec
add
mov
or
add
push
jg
jp
popf
adc
inc
push
inc
adc
mov
lds
and
stc
nop
xchg
arpl
jecxz
xor
push
mov
cs
andps
stos
and
loop
dec
or
es
inc
mov
cmp
scas
mov
and
lds
pop
mov
fmul
push
pusha
in
dec
pop
clc
xchg
adc
xor
ffree
xor
or
xchg
adc
push
loopne
aad
mov
imul
sahf
pop
fwait
ss
xchg
int
add
cmpsb
mov
fwait
inc
mov
inc
inc
sub
into
loope
in
inc
or
hlt
mov
dec
inc
inc
add
mov
pop
movsl
or
inc
das
push
repnz
jge
mov
stos
push
and
pop
rcll
or
std
mov
mov
gs
inc
push
or
cmp
js
push
push
sbb
inc
adc
inc
insl
and
jb
add
fildl
in
add
into
das
clc
cmpsb
adc
cs
pop
mov
or
test
push
mov
xor
clc
cltd
and
sbb
jmp
push
mov
bnd
out
or
aas
out
push
mov
adc
imul
int
push
inc
repz
add
mov
and
loope
mov
fwait
test
mov
dec
leave
pop
shr
repnz
adc
iret
addb
fbstp
adc
sbb
push
filds
int
test
mov
pop
std
add
cmp
arpl
push
dec
out
dec
cmc
jo
mov
pop
loope
in
jb
iret
jg
push
dec
add
or
xchg
pop
push
fidivl
into
xor
out
mov
push
fcom
stc
push
int
jne
mov
pop
lcall
dec
jg
dec
dec
sub
mov
fdivrs
push
lods
mov
roll
xor
xchg
cmp
xor
out
in
xchg
rep
cmp
ret
xor
rclb
loopne
or
dec
call
xchg
and
sub
ss
enter
fmul
jg
pop
insb
push
jb
sbb
mov
outsb
xor
pop
or
pop
pop
pusha
jg
inc
je
jne
dec
ss
fnstsw
in
dec
fcomi
fs
rorb
cmc
mov
into
sbb
pop
cmpsl
ja
mov
fsubl
mov
daa
jnp
push
mov
mov
jg
popl
movsb
cs
data16
cmp
nopl
inc
push
dec
subb
mov
and
mov
ss
mov
xlat
scas
scas
mov
xlat
inc
fiaddl
aaa
mov
adc
inc
xor
or
insb
mov
sarb
xor
fstpl
mov
inc
inc
push
out
into
lea
mov
push
shl
xor
push
in
dec
mov
adc
push
adc
mov
sbb
rorl
iret
cmp
add
and
mov
cmp
sahf
iret
popf
movsb
lahf
jno
inc
add
inc
cmp
adc
jo
push
and
pop
sarl
adc
daa
xchg
cmp
das
mov
dec
nop
pop
pop
mov
xchg
in
mov
cmpsl
popa
inc
adc
imul
out
cmp
xchg
fadd
movsb
fadd
dec
inc
sub
adc
aaa
jl
div
imul
popa
ffree
jo
dec
sub
dec
push
pop
mov
add
xor
dec
adc
jg
addr16
add
rcrl
dec
push
pusha
add
mov
mov
ljmp
lods
adcl
dec
loope
std
sahf
pop
shll
push
rcll
xchg
in
cmp
sti
in
clc
dec
sarl
jns
les
sub
push
add
mov
movsl
lcall
hlt
pop
scas
add
jmp
jecxz
loop
daa
fsts
aaa
pop
jb
dec
into
lahf
dec
cld
in
jne
push
sub
lods
and
pop
in
adc
pushf
pop
xchg
addb
or
popa
dec
pusha
popa
mov
mov
leave
pop
ret
inc
arpl
fimull
pushf
pop
sbb
or
or
mov
xor
mov
and
aaa
mov
and
xor
xchg
gs
js
or
pusha
lea
popa
int3
cmp
fisubs
aaa
xor
and
lods
scas
pop
adc
adc
lods
or
data16
mov
jmp
mulb
mov
push
dec
adc
sbb
jp
stos
les
fcompl
fldcw
adc
icebp
xor
lods
xchg
and
in
fsubl
jns
shr
or
jo
stos
sub
out
jge
ss
lods
fidivl
enter
mov
test
cltd
mov
mov
call
mov
scas
jl
addl
pushf
sub
push
lods
ret
adc
add
add
inc
xchg
lcall
jge
pop
sarb
or
cltd
movsl
incl
jle
or
jmp
sarb
mov
cmp
loope
xor
ret
aad
sbb
mov
inc
add
mov
inc
mov
push
dec
lods
out
int
mov
les
cmp
shlb
addb
push
pusha
mov
and
dec
push
push
xor
xor
addr16
cmp
inc
movsl
add
inc
push
mov
xor
mov
sub
jae
push
into
sbb
xor
js
xchg
push
bnd
mov
lods
mov
lret
mov
jno
mov
sub
enter
pop
and
adc
dec
int
inc
ret
jns
mov
nop
pop
ja
cmpsl
stos
fcoml
lds
rcrl
pop
xchg
add
fcoml
int
inc
shrb
jecxz
push
mov
andb
sub
or
imul
je
psubw
leave
push
fisubs
adc
pop
and
inc
inc
aas
dec
xchg
imul
stos
stos
and
jge
jbe
out
mov
dec
mov
mov
fyl2x
fstpl
aam
xchg
adc
pop
in
ljmp
adc
stos
lcall
int
jle
movl
into
mov
out
push
fldcw
and
adc
ljmp
mov
sub
cmpsb
repz
sbb
decb
out
and
ret
aaa
sub
fimuls
dec
mov
das
test
sub
mov
push
stc
dec
fnstsw
jg
aaa
jne
inc
daa
and
clc
movsb
xchg
mov
imul
rol
sarl
test
jle
cmpsb
mov
scas
addb
xor
adc
mov
mov
outsl
inc
repz
sub
rcrl
nop
in
jp
daa
addr16
mov
inc
push
mov
stos
inc
mov
jmp
cmp
cmpsb
mov
neg
xor
push
inc
mov
shl
iret
stos
jo
call
subb
xchg
cs
nop
jno
pusha
ss
addr16
lret
pop
dec
or
in
or
push
xchg
fisubrs
outsb
dec
popf
lcall
push
mov
sbb
dec
add
aaa
mov
dec
js
out
sub
push
push
mov
sbb
das
xor
rcrl
mov
jg
inc
adc
test
cmpsl
ss
ret
adc
mov
lea
les
mov
mov
les
lret
fists
or
cmp
scas
dec
aaa
push
sbb
push
scas
or
pop
outsl
push
push
ficoml
lods
out
xor
sub
push
icebp
jg
pop
cmp
inc
rol
add
mov
rorb
stc
movsb
test
aas
jns
adc
int3
and
sub
call
mov
mov
pop
fdivrp
ds
xchg
stc
push
push
push
jae
repz
and
xchg
jo
nop
int
cmpsb
push
mov
xchg
jle
dec
adc
sub
dec
xchg
push
mov
divb
shlb
fwait
pop
sbb
rcll
nop
imulb
mov
mov
xchg
xor
bound
xor
mov
inc
pusha
mov
movsb
xorb
test
adc
add
sub
push
push
cmpsb
in
sub
inc
mov
cmpb
fisubrs
jg
shr
mov
sub
push
iret
sub
mov
mov
jl
xchg
shrl
fidivrs
fnsave
nop
bound
pop
in
jno
cwtl
mov
mov
shr
cld
jmp
dec
mov
popa
lcall
mov
pop
cli
mov
orb
pusha
jp
sub
repz
xor
xor
inc
dec
mov
aam
push
popa
sub
add
dec
popf
mov
mov
fbstp
push
ja
mov
rcll
dec
mov
inc
push
pop
sbb
xchg
push
cmp
jp
add
mov
lret
rolb
sahf
scas
or
aad
xchg
sub
push
jns
adc
push
sarb
mov
fisttps
das
xor
mov
das
lds
adc
cmp
xor
rclb
cli
mov
out
popf
sub
arpl
fs
enter
imul
out
mov
pop
lods
push
push
in
daa
and
popa
mov
pop
push
loope
xchg
push
push
data16
das
out
add
jae
lods
mov
dec
loope
and
xlat
add
xor
bound
push
jae
jle
xor
jnp
dec
mov
test
and
ja
clc
mov
popa
dec
negb
xchg
out
dec
mov
cmpsb
mov
cli
cmc
fistl
inc
push
jae
pop
sar
push
push
je
mov
out
gs
ret
outsb
push
test
xor
addb
test
xchg
jp
adc
xchg
push
adc
inc
pop
mov
orb
testb
mov
fldt
cld
xchg
or
ficompl
adc
and
shr
addr16
ror
loopne
popl
cs
divl
jo
roll
pop
ss
pop
pusha
inc
adc
pop
pop
in
or
push
loope
dec
roll
inc
sub
clc
daa
push
push
xchg
cmp
dec
sub
and
xchg
pop
add
add
mov
sub
mov
or
sub
cmp
fdivl
cmp
dec
jns
fstpl
xchg
mov
fwait
jg
dec
inc
mov
push
or
jle
es
test
xlat
mov
sub
cmp
xchg
or
jo
lods
loopne
xor
mov
les
and
xor
popf
cs
leave
out
dec
paddsb
fwait
addr16
xchg
scas
outsl
dec
mov
fwait
lods
add
addb
jae
push
or
ret
out
rclb
adc
hlt
lods
or
push
push
inc
adc
mov
mov
mov
xchg
addr16
cs
out
push
or
lock
stos
sahf
inc
ficomps
sti
repnz
pop
xor
cld
sahf
push
outsb
adc
test
inc
lret
sbb
and
es
mov
inc
ss
push
xchg
adc
cmpsl
jb
adc
shll
dec
test
adc
lds
insl
pop
in
cltd
les
sub
mov
test
mov
js
pop
push
pop
and
pop
rcrl
xchg
inc
inc
insl
and
stos
jno
xchg
js
mov
sbb
nop
leave
shrl
xlat
push
insl
push
scas
mov
roll
dec
rclb
push
jecxz
rorb
mov
aaa
add
out
xchg
enter
je
jecxz
and
sub
leave
mov
pop
dec
add
push
stos
mov
sbb
sub
cltd
push
pusha
mov
xchg
js
shrb
sub
mov
jae
cmp
out
pop
in
addl
in
test
mov
fists
aad
and
aam
in
mov
sub
rorl
add
add
jmp
sti
sub
dec
movsb
adc
int3
ja
and
or
mov
insl
dec
sbb
in
add
lock
aaa
stos
gs
out
or
lds
jp
pop
pop
idivl
leave
dec
ss
xchg
xor
inc
stc
mov
and
jl
push
stos
add
cmpsl
je
test
and
jge
sub
adc
cmovbe
test
aaa
fildl
cmc
rorl
les
inc
and
add
mov
jl
mov
mov
iret
mov
inc
mov
add
dec
fmuls
sahf
data16
cmp
mov
cs
mov
cmp
std
push
mov
shl
aad
das
lret
jle
aaa
mov
ss
test
jecxz
cld
sub
mov
mov
push
dec
test
loopne
out
fsubrp
shlb
dec
fdivrs
fwait
xor
out
lret
mov
js
add
mov
add
sub
add
mov
mov
mov
out
push
shlb
popa
mov
pop
jne
sub
jg
or
pop
mov
fstpl
lds
fistl
mov
outsb
jb
sub
mov
jnp
xchg
repz
jmp
fisttps
and
hlt
lods
push
sub
mov
mov
dec
push
dec
cvtpi2ps
cmp
inc
es
and
dec
mov
xchg
sbb
fstl
adc
setp
dec
jle
stc
fdivr
mov
lret
aaa
sub
pop
fbld
int3
pop
jb
rcl
cmp
dec
repnz
push
jge
push
jg
jmp
fs
in
push
sub
repnz
jmp
scas
pop
mov
xchg
push
add
jae
insb
sbbl
push
push
mov
sub
inc
sbb
adc
roll
mov
imul
jno
sti
in
mov
adc
pop
fisttpl
mov
out
mov
mov
rcrl
adc
mov
mov
push
gs
add
xchg
and
stc
cmp
in
stc
js
mov
pop
mov
jecxz
dec
push
ljmp
pop
enter
iret
mov
push
jns
push
cmp
iret
daa
pop
mov
and
sti
lret
popa
mov
jns
loope
je
cmc
in
bound
loope
fs
xor
lods
aad
inc
int3
call
cltd
dec
push
test
stos
inc
sbb
jbe
in
mov
rol
hlt
jb
mov
fwait
jmp
cld
int
sahf
xor
lds
idivb
adc
idivl
rolb
imul
daa
lret
fnstcw
xchg
mov
xchg
mov
add
in
ljmp
mov
push
xchg
mov
js
dec
stos
flds
inc
movl
inc
adc
loope
insl
shrl
fdivl
out
or
lret
addr16
dec
cld
add
ror
loopne
imul
dec
ror
jmp
stos
jb
jbe
pop
insl
fidivrl
arpl
pop
shl
inc
mov
inc
xchg
loop
lock
inc
je
push
repnz
cmp
jno
adc
sub
hlt
roll
repnz
push
lar
jp
out
popa
cmpsl
adc
bound
xor
mov
aaa
push
ljmp
jmp
test
int3
jo
jg
dec
mov
xor
and
jns
stos
jnp
mov
sub
xor
mov
lock
fisubl
adcl
cmp
mov
add
mov
xchg
mov
inc
and
mov
and
gs
add
or
mov
mov
xlat
and
mov
daa
add
push
enter
push
ss
out
mov
in
cltd
sahf
mov
ret
cld
xor
sub
or
adc
and
push
inc
add
pop
mov
and
jo
insl
xor
repz
mov
cmp
out
faddl
or
mov
xor
inc
push
test
daa
test
jg
xchg
mov
popf
out
xchg
xchg
out
pop
push
mov
push
adc
sub
push
mov
shr
cli
push
or
push
inc
add
loopne
mov
lret
adc
dec
adc
mov
je
mov
mov
adc
ja
pop
gs
cmp
inc
pusha
adc
mov
xchg
imul
add
push
test
jo
mov
xchg
and
or
jl
dec
outsl
lods
add
pop
rcrb
sbb
adc
insl
cmp
adc
inc
mov
lods
in
push
out
and
dec
xor
icebp
mov
push
lcall
cmc
push
jmp
call
stc
popa
and
sub
pop
jecxz
aad
jns
lahf
mov
dec
xor
icebp
jp
sbb
inc
xchg
dec
xor
adc
loop
fs
pop
xor
es
mov
dec
rolb
jae
pop
rorb
out
or
test
ds
dec
or
cs
lea
inc
xchg
out
xor
sbb
mov
sub
push
mov
adc
stos
add
test
test
xor
mov
jl
shlb
jmp
int
cmp
loope
jno
push
sahf
leave
rclb
int3
jge
lcall
sahf
bound
imul
xchg
lahf
mov
dec
mov
cmp
jo
xchg
inc
pop
dec
imul
push
ret
mov
and
mov
imul
push
sarl
clc
sub
fldt
or
sub
sub
pop
bound
icebp
out
mov
das
lcall
push
fbstp
sbb
mov
jno
or
lahf
mov
cmpsb
inc
pop
test
mov
xchg
cwtl
push
pop
dec
mov
pop
cmp
lods
popf
bound
push
push
cmp
in
add
mov
pop
das
lds
cmp
inc
stos
hlt
pop
xchg
faddl
std
out
cld
std
fistpl
adc
shlb
or
mov
mov
fisubrl
cmpsb
mov
jecxz
dec
js
loopne
shll
js
adc
ficompl
shrb
dec
adc
push
aam
push
scas
les
mov
xorl
ss
add
or
xchg
in
cmp
cmp
jmp
sar
cmp
mov
addr16
ljmp
push
and
sbb
mov
cwtl
mov
fiadds
in
data16
outsb
inc
add
ds
and
aam
lds
mov
test
adc
pop
outsb
sbb
mov
mov
mov
push
mov
iret
shr
cmp
iret
dec
and
pop
inc
mov
xor
xchg
mov
mov
mov
push
shll
in
inc
lahf
sbb
int
mov
push
jns
orb
or
xchg
das
dec
dec
sub
into
add
inc
mov
ljmp
loop
loope
sub
add
sub
jno
sub
dec
ss
and
filds
adcb
sub
mov
inc
jg
clc
aas
mov
clc
mov
inc
es
mov
xor
push
loope
mov
dec
int
xor
ljmp
push
cmp
in
sbb
xchg
and
cld
or
cmp
inc
mov
jl
jmp
xchg
insb
jb
rcrb
loop
pop
dec
cmp
out
mov
or
sbb
mov
ljmp
dec
inc
sbb
popl
into
popa
sbb
jns
lret
cmp
xchg
filds
subb
xchg
jecxz
pushf
dec
ja
das
sbb
out
enter
in
xor
aam
mov
lds
fdivr
mov
mov
xor
test
je
test
mov
imul
inc
mov
aas
cs
mov
test
mov
push
inc
sub
push
mov
adc
push
rorl
mov
test
cmp
test
addb
jo
push
mov
dec
and
movsl
ret
add
pop
and
test
les
in
leave
test
test
jge
and
cli
call
cmpsb
sub
cmpsl
test
jo
cli
adc
jecxz
mov
pop
and
pop
and
sarl
ds
or
pop
jle
and
jns
jmp
stos
fidivrl
sti
sub
pop
xchg
push
scas
push
cs
xlat
loope
popf
outsb
cli
roll
jb
mov
gs
jbe
push
test
mov
cld
mov
jae
fildl
popf
xlat
ljmp
sub
mov
mov
addr16
cmp
mov
shll
test
test
adc
fmull
fs
jmp
jmp
pop
es
add
mov
or
pop
lea
mov
jb
push
jno
jp
adcb
int
push
xchg
mov
daa
mov
and
adc
popf
push
insb
imul
scas
pop
imul
sub
mov
mov
and
push
fiadds
xchg
cmp
add
mov
testb
sbb
into
js
mov
add
ret
outsb
mov
pop
fsub
adc
mov
jg
mov
out
push
push
rcll
pop
mov
mov
ret
push
jecxz
push
int3
dec
lods
mov
test
dec
lret
lods
das
sub
mov
push
jle
rcrb
shrl
pop
jl
dec
adcb
mov
bndldx
mov
hlt
cmp
ret
push
adc
sbb
cmp
mov
out
test
inc
loopne
mov
xchg
lods
adc
outsb
jb
mov
aaa
dec
outsl
test
ret
in
sbb
nop
push
addl
insl
dec
outsb
es
cmp
inc
sbbb
adc
push
mov
xchg
and
mov
xor
mov
fs
add
ret
outsb
into
and
ja
mov
dec
test
push
mov
pop
push
sbb
inc
aaa
add
iret
mov
stc
sub
sbb
and
int
fadds
cmpsl
dec
pop
or
into
ljmp
mov
cltd
repnz
rcrb
push
jecxz
pushf
lods
push
repnz
std
cmp
lods
dec
jge
mov
mov
push
insb
shll
iret
lods
lea
adc
inc
pop
rcrb
icebp
sbb
mov
nop
jge
jbe
dec
notl
daa
push
cld
adc
xchg
xor
cmp
int3
and
push
cmp
ret
lcall
push
arpl
add
std
mov
inc
jecxz
scas
shll
leave
test
stos
jge
cltd
xor
popf
xor
lea
aaa
xchg
fmull
js
cmpsb
inc
jmp
and
dec
in
mov
data16
out
out
jne,pt
pop
mov
sub
aam
inc
dec
mov
in
dec
xor
stc
mov
cmp
bound
insb
mov
cmpsb
push
and
mov
div
movsl
pop
in
mov
xchg
xchg
jo
lahf
inc
stc
outsb
ret
movsl
dec
lret
daa
mov
ret
fdivrl
insl
ja
mov
lcall
fs
xor
push
jp
mov
adc
popa
mov
shrb
stos
mov
sub
inc
ljmp
push
inc
fiaddl
sbb
pop
xlat
cmp
and
outsl
mov
push
lock
mov
push
shl
into
xor
mov
mov
inc
dec
outsl
push
pop
xor
inc
dec
add
fimuls
jp
push
mov
or
mov
mov
jne
or
ret
js
adc
mov
mov
ret
loope
cmpl
xchg
sbb
xor
xor
pop
daa
fbld
call
bound
mov
rcrl
sbb
in
pusha
shl
fdivrl
adc
or
insl
stc
pusha
iret
rcll
sub
xchg
add
push
ljmp
fs
push
xchg
sbb
repnz
dec
add
stc
xchg
dec
adc
test
setg
test
xor
mov
adc
loopne
push
out
or
xchg
mov
xchg
inc
cs
dec
rolb
pop
and
cmpsb
enter
push
call
sub
sub
ljmp
ja
sbb
xorb
in
push
mov
inc
xchg
lret
cmp
cs
adc
roll
aam
popf
popa
add
sub
and
in
jo
cmpsb
cld
inc
rcr
rcrl
mov
mov
push
in
adc
ja
inc
fisttpll
gs
xchg
int
jo
and
mov
push
adc
les
jae
mov
jle
inc
or
mov
stc
jmp
and
sqrtps
mulb
incl
jmp
inc
rcl
hlt
andb
int
aaa
jecxz
dec
test
leave
mov
and
add
inc
cmp
add
add
inc
ret
xor
fmulp
les
fdivrl
notb
mov
push
shll
mov
sub
and
sbb
adc
pop
xor
arpl
out
vmread
data16
shl
lahf
inc
loope
ds
pop
push
subl
daa
sub
adcl
pop
and
mov
lock
and
mov
addr16
ret
clc
and
stos
jge
divb
push
xchg
inc
push
or
dec
add
subb
sahf
or
imul
inc
mov
insl
repnz
pop
inc
inc
jns
inc
out
xor
fistpll
xchg
sahf
cltd
mov
int3
cmp
sub
fs
mov
fdivl
fwait
cmpb
test
fiaddl
push
cmpsl
dec
ret
xchg
in
and
inc
andl
sbb
fsubrl
cmc
lret
and
fidivrs
mov
bound
loop
jne
inc
test
ret
ss
xchg
leave
fldt
int
ds
mov
test
insl
sub
push
lea
lods
mov
aad
sbb
outsb
mov
jp
cmpsb
lods
sub
adc
xchg
das
int
leave
lcall
xor
push
inc
cmc
jp
xchg
xchg
mov
rcrl
add
dec
fcmovnu
push
das
negb
sub
mov
test
sub
aaa
mov
jb
test
inc
mov
aam
aam
xbegin
mov
inc
shl
sbbl
jp
dec
iret
in
xchg
or
push
inc
and
insl
sbbb
test
scas
pushf
dec
rcll
addb
cs
dec
xor
adc
xor
mov
inc
xchg
insl
cmp
data16
in
pop
jle
and
daa
rcl
mov
xlat
icebp
cmc
xchg
es
sub
dec
daa
pop
mov
push
mov
loope
inc
mov
mov
mov
decl
jns
mov
inc
pop
lods
push
movsb
adc
pop
test
jb
jmp
sbb
imul
cmpsl
jnp
not
movsl
repz
stos
imul
jl
adc
xor
push
scas
or
aam
test
sbb
test
es
les
psubq
jle
push
dec
insl
pop
addb
inc
jl
out
faddp
or
mov
mov
lods
cmp
cmp
pusha
cmp
push
sbb
lods
jge
daa
pop
mov
jne
sarl
test
or
int3
test
clc
inc
cmc
pop
daa
push
in
or
or
jb
adc
cld
add
jge
push
inc
scas
and
ja
loope
push
mov
mov
mov
in
mov
pop
or
adc
dec
out
or
xchg
push
mov
xchg
or
ljmp
lret
js
mov
mov
sub
lods
fidivl
mov
push
inc
xchg
mov
inc
push
jg
jl
xchg
rorb
adc
dec
aam
in
in
fstpl
sbb
mov
dec
lret
push
xor
mov
fnstsw
dec
test
pop
add
pop
inc
and
sub
mov
fcompl
mov
in
fcomp
xor
or
loope
xchg
adc
pop
inc
insl
std
cld
js
sbb
stc
adcl
dec
push
dec
lahf
clc
out
jl
out
ja
adc
dec
dec
mov
jne
push
mov
test
inc
xor
repz
or
sub
xorb
jecxz
shl
outsl
push
insl
das
js
xchg
data16
cmpsb
mov
xchg
sbb
mov
push
hlt
mov
xlat
xor
sbb
sub
and
push
cmovnp
shll
outsb
into
or
jmp
insb
inc
sub
push
mov
in
gs
xchg
cmp
lock
ret
aam
je
rorb
movsl
mov
xchg
rorb
dec
jg
int3
inc
movsb
mov
mov
mov
idivl
xor
xchg
daa
lods
test
inc
jg
ss
fwait
aad
js
loope
and
subb
push
adc
push
mov
jmp
pop
sub
cmp
pushf
mov
pop
gs
sbbb
pop
push
and
jge
or
mov
push
and
or
lds
insl
imul
mov
mov
jmp
mov
iret
inc
inc
or
icebp
sbb
mov
inc
into
adc
mov
clc
das
test
mov
into
xlat
rcll
mov
repz
into
lods
inc
or
loope
fstpl
mov
and
pop
das
mov
mov
outsb
mov
js
mov
fs
push
mov
es
lock
test
adc
mov
fnstcw
push
sub
jmp
icebp
stc
bswap
pop
pop
adc
mov
jns
xchg
push
xchg
jle
outsb
orb
in
add
enter
adc
lret
mov
rcr
fs
jo
ret
mov
test
fisubrs
cmp
out
fsubrs
jge
dec
dec
inc
jecxz
jb
loope
insb
mov
ss
xchg
pop
sbb
add
push
ret
pop
mov
dec
dec
stc
leave
fcom
adc
popa
and
ss
testl
xchg
pop
setbe
inc
push
fdivrs
inc
jno
xchg
stos
je
xchg
popf
and
dec
push
adcl
pop
adc
pop
mov
test
add
mov
cmc
mov
dec
mov
mov
dec
push
pop
xor
dec
mov
jb
jg
and
ror
adc
pop
xchg
xor
lods
xchg
or
adc
jo
scas
push
aaa
add
push
and
inc
leave
mov
fmulp
sbb
adc
add
pop
lret
push
jp
movsl
outsl
subl
shll
into
add
cld
out
in
xlat
adc
andb
sub
mov
sarl
fs
sbb
pop
or
and
xor
popf
cmp
mov
xor
rorb
adc
jg
jns
idivb
stos
cmp
aas
pop
cltd
dec
fistl
or
fwait
imul
addr16
test
push
xchg
cld
xchg
sbb
aas
mov
ficoms
enter
cmp
mov
lcall
std
popf
test
push
xchg
inc
or
sbb
push
and
cwtl
pop
cmp
repz
dec
pop
push
cmpsb
mov
mov
adc
mov
dec
subb
nop
add
lods
push
inc
sub
xor
push
xchg
mov
in
xchg
scas
sub
dec
dec
jae
adc
lahf
out
adc
movb
mov
mov
push
bound
mov
mov
int
and
insl
adc
pop
sub
psrad
jl
test
mov
data16
push
add
inc
int
call
inc
xor
push
inc
insl
cmp
adc
aad
orb
mov
pop
sbb
lds
sbb
cli
mov
outsl
push
and
addr16
mov
rclb
push
jne
adc
xchg
fisttpl
cmpsl
test
cmp
or
cltd
mov
mov
push
sbb
mov
faddl
inc
jo
pop
xchg
mov
call
movsb
subb
cmpsl
inc
dec
rorb
cmp
js
add
addr16
mov
scas
inc
mov
xor
adc
mov
ds
js
xchg
inc
in
push
xchg
xor
in
sti
xor
aam
push
add
inc
mov
adc
dec
adc
jge
dec
mov
repnz
inc
lahf
mov
adc
sbb
push
jp
dec
or
enter
add
push
mov
outsb
or
jge
inc
mov
fmul
out
popa
and
stos
dec
outsb
aam
fwait
lahf
movsb
shrl
mov
mov
pushf
pop
pop
jp
fldt
lods
push
insl
push
mov
cmp
lcall
push
mov
add
mov
jb
sub
mov
inc
mov
call
mov
sbb
add
dec
fadds
jb
lahf
dec
cmp
testl
out
loopne
cmp
xor
fistpl
push
and
lds
and
dec
movsb
adc
push
cmp
cs
add
int3
cmpsb
inc
scas
xor
sub
shll
outsl
popa
inc
dec
ret
dec
mov
sbb
leave
enter
leave
sbb
add
fimull
pop
jg
mov
jecxz
lods
adc
inc
jno
add
inc
mov
cmpsb
dec
cmp
jns
into
sub
lcall
push
dec
adc
jbe
jb
icebp
or
mov
outsl
dec
mov
xor
xchg
pop
and
imul
push
inc
push
adc
and
xchg
cwtl
cmpl
sub
loop
mov
rol
xchg
int3
bound
sbb
lret
xlat
push
inc
out
jno
dec
jbe
and
in
imul
scas
in
lds
in
arpl
xchg
pop
and
in
cmpsl
inc
cmpsb
add
dec
sbb
cltd
imul
out
inc
sahf
adc
mov
ljmp
xor
je
xchg
test
adc
cltd
test
aas
mov
mov
jp
aad
test
xchg
addl
cmp
or
ret
mov
push
inc
xchg
pop
inc
jns
mov
jno
cmpsb
cmc
adc
lahf
leave
adc
mov
insl
xlat
outsb
stc
xchg
inc
adc
ret
xchg
int3
std
int
pop
int
xchg
add
nop
dec
inc
xor
stos
jno
adc
and
divb
cmp
inc
xor
test
jbe
popa
arpl
or
xchg
xchg
jne
jo
imul
push
inc
insl
cmp
in
jno
xchg
jecxz
adc
sub
add
shll
popa
add
test
and
in
test
sub
push
inc
sbb
pop
fstpt
cmp
popf
and
inc
leave
cli
mov
pop
sub
push
xorb
push
xor
dec
jp
inc
addr16
das
xchg
cld
mov
dec
mov
jbe
test
insb
adc
in
mull
cmc
pop
jle
mov
jg
inc
or
mov
hlt
sbb
jne
dec
xchg
movsl
adc
testl
lods
and
mov
es
fcmovb
nop
push
lock
data16
cli
sbb
adc
fisubs
movsl
aam
aaa
push
test
jne,pt
cld
daa
jo
cmp
sub
cs
mov
mov
jo
lods
sbb
adc
clc
mov
push
movsb
sub
xor
or
pop
call
xchg
leave
fstpt
and
lds
dec
adc
mov
outsl
xor
stos
jbe
or
scas
adc
cmpsb
fcoml
inc
jg
push
into
lcall
fdivl
jo
mov
mov
sub
out
mov
cld
stos
xchg
testb
pop
xor
out
and
mov
icebp
push
loope
mov
xor
sbb
mov
mov
inc
out
push
add
xor
stc
sbb
push
mov
inc
push
and
cmp
rcr
int
cmp
dec
into
jbe
push
or
stc
leave
jge
or
ja
add
stos
xchg
aaa
cwtl
sub
in
sbb
sbb
xchg
adc
xchg
cmp
mov
js
shrb
daa
jno
xchg
loope
fwait
xchg
fiaddl
adc
push
mov
or
ret
fimuls
dec
sbb
fsubrs
mov
cmc
mov
xor
out
adc
xchg
sbb
mov
outsb
push
das
frstor
sub
ror
icebp
mov
lret
movsb
clc
and
mov
mov
adc
and
stos
pminub
xchg
xchg
pop
loope
aad
push
xchg
mov
mov
out
dec
pusha
cmpsb
jns
and
and
push
lods
ret
inc
mov
mov
fwait
dec
sub
cmp
adc
clc
pop
push
test
lods
int
ret
sub
inc
sbb
jg
pop
ret
pusha
cmpsb
stos
jge
add
or
ja
sub
inc
add
cwtl
daa
inc
lds
add
push
fiadds
fmul
jge
stos
imul
cmp
fimuls
rcll
sbb
sub
insl
and
mov
daa
loop
sahf
push
xchg
fwait
or
pop
mov
ja
xchg
mov
js
or
mov
fisttpl
dec
inc
dec
and
mov
inc
cs
push
dec
ljmp
lock
sbb
cmp
and
outsb
call
or
and
ficompl
outsl
mov
push
push
orb
xchg
add
jns
dec
and
cmp
xchg
fidivs
dec
mov
cs
mov
imul
mov
mov
mov
test
mov
mov
daa
mov
xor
out
or
loopne
cltd
das
dec
ds
or
push
sahf
adc
or
sub
popa
jo
lret
xchg
je
cltd
stc
dec
pop
mov
jl
xor
xchg
adc
inc
test
mov
xor
or
jge
idiv
and
adc
cmpsl
leave
pop
mov
mov
xor
mov
inc
subb
mov
adc
inc
out
dec
mov
outsl
mov
pop
jnp
scas
insb
lret
addr16
cwtl
xchg
call
mov
add
mov
ja,pt
leave
ja
enter
jg
mov
jecxz
ret
lahf
aas
xchg
push
mov
jo
lcall
xchg
lret
loopne
push
mov
daa
mov
push
and
data16
test
or
mov
nop
jle
fildl
aas
jno
push
inc
out
jge
into
or
and
pop
push
inc
adc
shll
mov
data16
int
add
cmp
loopne
or
adc
jno
subb
pushf
test
mov
movnti
inc
sbb
addb
adcb
popa
xor
cmpsl
loop
nop
gs
loop
insl
out
inc
nop
test
dec
adc
dec
cld
cwtl
pop
cltd
push
jg
fcomps
push
inc
cmpsl
pusha
das
jl
dec
iret
cs
xchg
and
sub
mov
xchg
out
adc
jo
iret
das
mov
int3
push
xchg
jge
xchg
jno,pn
clc
mov
ficoms
sar
xchg
ja
rcrb
dec
andb
int
orps
fsubrs
cmp
pop
sbb
das
xchg
ljmp
popa
fcoml
test
mov
int
cmpsb
lret
jecxz
push
shll
movb
inc
xchg
rclb
jp
cli
sub
inc
enter
push
mov
mov
xchg
sbb
push
idiv
sbb
loop
aas
adc
jle
clc
push
cmpsl
cltd
cmpsb
dec
mov
dec
mov
loope
and
ret
fidivl
sar
xor
inc
cmp
mov
xchg
cs
mov
mov
out
push
and
add
cmp
ljmp
test
test
outsb
idivb
mov
push
jl
adc
ss
mov
mov
orl
push
add
fstl
mov
and
inc
mov
cs
pusha
in
sub
sbb
mov
rorb
push
stc
outsb
iret
stos
pushf
hlt
fimuls
data16
cli
stos
jns
push
xchg
push
lcall
les
mov
xor
lea
sbb
mov
push
pop
or
sbb
cld
push
repz
lret
push
jge
adc
pop
adc
fcoms
lret
jno
popa
stc
dec
adc
icebp
cmpsb
popl
xor
iret
leave
xchg
xchg
mov
xor
mov
loope
in
xlat
lods
or
jge
jno
push
scas
out
popa
mov
mov
mov
pop
popa
mov
je
jge
cld
in
data16
imul
or
leave
ret
in
mov
lock
mov
test
popl
movsl
jb
pop
add
into
xchg
mov
sti
or
addb
test
testb
mov
mov
shlb
test
jge
lea
les
or
xor
iret
and
enter
jg
jge
xor
push
ds
cli
scas
cmpsl
inc
or
aad
pop
je
rorl
jns
cmp
push
xor
adc
mov
stc
out
push
adc
jnp
sub
mov
loope
mov
jecxz
pop
shl
pop
inc
and
or
lds
jg
icebp
hlt
mov
shrl
and
daa
lds
push
daa
inc
lret
adc
xor
sub
or
es
inc
xchg
orb
es
jp
pop
xchg
call
arpl
sbb
dec
lds
pop
popf
add
xchg
cwtl
dec
icebp
mov
xor
push
or
mov
outsb
or
adc
jbe
mov
jno
movsl
sub
jmp
adc
test
andl
out
inc
cmp
xor
fistpl
xchg
pop
aam
enter
test
push
fidivrl
int
inc
pop
pop
cs
dec
and
enter
lret
mov
lds
js
pusha
adc
imul
ds
cltd
inc
outsb
xchg
or
mov
mov
push
push
rolb
in
ret
fimull
das
sti
jns
nop
push
rorb
into
ss
or
adc
push
adc
dec
mov
or
mov
jbe
push
and
rcll
nop
dec
lcall
xlat
fisubs
mov
mov
addr16
pop
into
lea
mov
inc
fldl
dec
lds
mov
cmpsl
mov
lcall
jae
loopne
lahf
xor
jge
lods
mov
ljmp
mov
in
pop
push
push
int
mov
shrb
cmp
andl
xor
jnp
add
xchg
in
sbb
andb
nop
pop
push
sub
movsl
fldl
lret
push
mov
xchg
fstp
movsl
mov
ficompl
leave
sub
movsl
sbb
pusha
mov
pop
std
sbb
stc
mov
roll
loopne
add
xor
insl
repz
mov
push
sbb
es
cmp
inc
sbb
sbb
pop
addr16
cmpsb
mov
inc
mov
in
cmp
mov
xchg
xchg
int
test
mov
lcall
push
xor
ljmp
push
ss
xor
inc
outsb
gs
inc
adc
in
roll
cmp
inc
cmpsl
ljmp
aam
mov
lcall
cmp
lret
fidivrl
inc
insb
sbb
andl
cmpsl
add
jae
push
int3
mov
mov
ficomps
movsl
push
popf
mov
mov
sub
mov
xchg
mov
cmp
or
in
inc
cmp
rcll
add
pop
outsb
imul
push
or
bound
push
lret
sti
outsb
pusha
outsl
mov
xor
sarb
pop
jl
sbb
shr
dec
lcall
in
mov
jge
push
adc
jno
lea
adc
dec
push
insl
inc
rolb
fistps
rep
outsl
adc
jge
cmp
mov
in
push
push
lock
or
sbb
and
cltd
dec
inc
mov
mov
jno
jno
push
xor
mov
into
push
pop
sarb
mov
cmp
xchg
mov
pop
test
mov
rorb
lret
and
jp
leave
mov
lea
pop
sub
jl
je
ret
ljmp
nop
sahf
dec
nop
push
aaa
xchg
push
push
mov
jne
movsl
adc
icebp
insl
call
xchg
jmp
sub
enter
mov
inc
scas
adcb
or
addr16
cmp
pop
inc
xor
cmp
adc
pusha
inc
iret
mov
test
test
cmp
dec
mov
xchg
pop
mov
repz
dec
imulb
inc
mov
test
dec
xchg
hlt
mov
sub
loope
push
aad
dec
outsl
xor
push
push
sub
imulb
fbld
jle
rcrl
xor
sbb
daa
insl
clc
mov
cmp
and
inc
rcrb
pop
or
in
cmp
testb
or
pop
fdivrl
rol
dec
add
das
test
xor
je
call
add
xchg
fcom
test
inc
and
sbb
test
imul
test
jnp
sub
insb
sbbb
cmp
adc
mov
es
cli
loop
aad
cwtl
pop
push
lahf
or
push
into
mov
sbb
std
call
jo
jo
jl
ja
mov
mov
xor
mov
mov
aam
pop
mov
push
cmp
xor
movsb
shlb
xchg
icebp
mov
xor
icebp
push
loop
es
adc
xor
out
push
pop
lods
xchg
mov
adc
mov
stc
int
adc
lea
fs
pop
jb
mov
pop
lods
cwtl
fdivl
rorl
mov
pop
adc
mov
xor
lcall
push
cmp
test
xor
mov
push
push
sub
push
inc
lahf
adc
pop
sub
mov
fdivl
push
mov
jle
into
and
or
push
push
lret
scas
push
and
outsl
xor
fsubl
push
jns
inc
inc
jg
mov
das
inc
lahf
push
repz
fistps
nop
mov
adc
adc
push
cmp
int
jl
stos
cwtl
mov
mov
pop
mov
cmp
push
inc
jmp
mov
sbb
adc
out
popf
cld
pop
fldl
ja
inc
aam
jb
mov
add
outsl
or
mov
push
inc
and
xor
ret
in
lods
push
and
sbb
test
addr16
outsb
xchg
jp
popf
push
ljmp
jge
jo
mov
into
mov
adc
pop
int
mov
pop
mov
popf
sbb
push
into
out
leave
and
loope
mov
and
shll
sbbl
scas
les
fdivrs
das
ja
or
pop
jmp
enter
mov
repnz
xorb
xchg
sarl
aad
leave
mov
inc
lods
jg
and
inc
sub
orb
mov
pop
stc
push
jecxz
test
out
mov
xchg
or
mov
roll
mov
fstpt
mov
adc
jmp
xor
fwait
scas
mov
scas
or
mov
and
lcall
mov
xchg
inc
les
adc
xchg
in
mov
cmp
push
js
jo
in
add
jp
lods
adc
mov
cs
push
lods
adc
jp
rol
out
pop
push
xchg
orb
in
subb
push
cmp
xchg
and
mov
rol
add
in
or
xchg
push
mov
mov
mov
push
incl
mov
in
std
jecxz
mov
test
inc
test
push
hlt
test
add
mov
inc
shlb
push
arpl
int3
rcll
shll
hlt
lret
outsl
adc
imul
push
popf
es
pop
mov
lahf
jo
dec
fsubs
fisubrs
adc
shll
adc
stos
stc
ret
scas
adc
xchg
imul
mov
repnz
xchg
sub
jg
mov
jg
adc
es
faddl
mov
mov
jg
iret
lcall
dec
sahf
ud0
cli
or
int
inc
shlb
cmpsb
cmp
jl
rcrl
sbb
jge
jl
xor
loope
sub
jl
adcl
lds
lods
pop
in
and
shll
mov
rcrl
sub
jno
pop
pusha
jnp
iret
sub
mov
or
js
lahf
lods
cmp
sbb
stos
in
inc
nop
jmp
imull
cs
xchg
xchg
int
lods
popf
repnz
sti
xchg
add
lea
std
push
shll
rorl
aad
xchg
sbb
and
mov
inc
aam
sbb
into
inc
inc
shlb
stos
into
loopne
inc
xor
or
mov
sbb
xchg
mov
push
dec
jo
and
mov
insl
icebp
mov
adc
dec
iret
test
loope
inc
cmc
mov
push
xchg
sbb
push
cbtw
in
rcll
xor
fwait
out
nop
test
cmp
jg
fwait
in
adc
add
xchg
ljmp
rol
xchg
jg
mov
adcb
adc
xor
sbbb
ret
jmp
adc
inc
bound
xor
ds
outsb
and
insl
lods
jbe
hlt
dec
mov
xor
xchg
mov
in
lahf
mov
mov
test
insl
jp
in
dec
pop
insl
mov
jle
test
adcb
pop
fstl
ds
jmp
mov
mov
xchg
leave
and
jne
lret
add
mov
xchg
and
shll
fcomip
push
bnd
test
cmp
lahf
clc
add
jno
pusha
and
xchg
mov
data16
jecxz
pop
pop
adc
inc
pusha
in
mov
add
pop
sub
mov
popl
jecxz
mul
test
mov
stos
rolb
call
frstor
das
xor
push
fcompl
cltd
mov
jb
fsubrl
xorb
jg
dec
in
les
fsubrl
mov
jo
and
push
mov
xor
fsub
pop
sub
adc
jg
shll
jg
add
loop
mov
popf
sub
fisubrs
leave
push
test
or
popf
inc
mov
ret
mov
xchg
inc
sub
sbb
iret
enter
adc
ret
call
pop
xchg
jne
rclb
and
sub
pop
jo
inc
sbb
inc
and
xchg
enter
jnp
fnsave
and
jmp
lock
pop
movsb
insb
xchg
in
inc
fiadds
fisubrl
push
faddl
loope
repnz
mov
stos
inc
cmp
popf
sarb
jmp
dec
clc
outsb
push
jecxz
shlb
push
push
cmpsb
icebp
cld
jmp
pop
push
fwait
cs
adc
lret
ret
dec
mov
mov
pmuludq
popf
cld
stc
jno
inc
ret
mov
mov
adc
sti
in
pop
add
add
roll
push
xchg
xor
pop
shlb
lds
mov
inc
clc
js
lock
aam
sbb
xchg
sub
dec
ret
cwtl
inc
test
xor
inc
fistps
cmc
jle
jbe
xchg
jl
dec
loope
addr16
pop
inc
sub
fsubl
ds
sub
faddl
inc
and
xchg
add
mov
mov
std
std
ljmp
out
imul
ja
je
mov
xor
xor
add
data16
inc
and
sahf
mov
pop
adc
sbb
mov
add
lret
movsb
clc
movsl
inc
mov
xchg
enter
ss
adc
push
xchg
lret
push
dec
jg
popf
cs
jge
sbb
out
jbe
add
sub
cli
mov
jbe
and
movsl
adc
out
xchg
ficomps
cli
mov
hlt
jno
addr16
rclb
fisttpll
nop
push
lock
in
jns
jg
les
jp,pt
adc
shl
sub
cmpsb
lahf
cld
mov
adc
jl
loopne
enter
fdivr
insb
cmpb
adc
lods
test
and
jg
pop
cmp
adc
loopne
repz
pop
sub
fisubs
sbb
nop
xchg
stc
jg
inc
adc
mov
data16
rcl
int
push
stos
adc
cmp
xlat
jp
cli
jg
jecxz
and
jne
sbb
or
gs
fsub
or
imul
adcb
pop
mov
pop
adc
in
stos
pop
stc
sahf
jg
push
or
ja
repz
stos
fidivrs
sbb
jg
loope
xorb
push
mov
popf
imul
xor
sub
shlb
jo
pop
pop
and
xor
ja
dec
filds
aam
mov
sbb
push
xor
sahf
push
aam
adc
push
pop
sub
adcb
std
and
adc
ret
lahf
lods
ja
inc
ror
lods
pop
xor
shrl
ficoms
push
and
aam
push
mov
lret
aam
add
lods
addr16
inc
ror
in
push
mov
in
fldcw
push
insl
adc
push
stos
push
jae
scas
in
fnsave
lods
inc
push
out
mov
lret
aam
in
js
xchg
push
into
fistpl
dec
fimuls
mov
cmp
test
outsl
nop
insl
loop
adc
inc
xchg
loop
push
pusha
inc
shll
mov
cltd
xor
insl
pop
ss
pop
add
mov
dec
mov
and
cli
inc
mov
loop
xor
cmc
scas
fiadds
push
ficomps
inc
orl
xor
mov
sbb
or
lretw
divb
lods
mov
add
stc
rol
push
xor
je
inc
loope
repz
test
adc
dec
scas
movsb
jp
adc
push
push
add
mov
fs
clc
sub
jp
popf
dec
xor
xor
adcl
pusha
shl
in
shrl
fsubl
mov
fs
push
sbb
popf
pop
add
mov
xor
test
cmp
andl
and
jmp
pop
xor
fistl
adc
ficomps
repnz
adc
cmpsb
pop
inc
lret
add
ret
das
psllw
and
xchg
xchg
adc
rclb
stc
fisubs
leave
jg
arpl
and
push
cmp
xchg
lret
add
in
in
and
in
movsl
dec
pusha
shrb
insb
popa
xchg
adc
jmp
leave
scas
rclb
popf
sub
sbb
stos
xor
jno
lret
inc
int
rolb
fcmove
inc
push
outsl
jb
out
es
aaa
lds
mov
cmp
in
inc
int
inc
or
or
dec
pop
jl
pop
sub
into
es
xchg
or
repz
shrb
xor
mov
xchg
outsb
xchg
lods
xor
push
fdivr
sub
aaa
mov
push
inc
pop
clc
adc
sub
mov
je
decb
mov
push
popf
lea
mov
and
xchg
cmpsl
xchg
pop
mov
pushf
mov
xchg
cli
add
xchg
add
and
push
in
xchg
js
stos
movb
or
movsl
outsb
aaa
insl
mov
mov
mov
cmp
pop
fwait
mov
dec
and
fnstsw
or
xor
std
add
jbe
jo
movsb
xor
pop
gs
ss
fs
pop
mov
test
test
je
orb
jp
fs
mov
inc
insb
bound
in
dec
dec
sti
add
and
push
jo
sub
in
ds
mov
outsl
xor
mov
dec
shll
popf
cmpl
jbe
int3
fstpl
xchg
imul
or
outsl
jns
jns
int
and
or
push
inc
mov
in
push
xor
inc
add
ret
sub
pop
clc
inc
push
test
lods
loope
sub
jnp
les
sub
sub
cmp
test
roll
nop
push
sub
mov
int
mov
arpl
inc
daa
ds
or
mov
inc
mov
xchg
cs
or
ret
push
in
cmp
add
push
jno
jno
enter
sahf
push
or
mov
or
mov
xor
add
dec
jecxz
test
pop
out
cltd
sbb
test
or
in
sub
dec
dec
jp
dec
cmovge
jb
mov
adc
int
loop
and
enter
xchg
movsl
enter
adc
lods
sub
mov
cmp
in
lods
xchg
and
hlt
and
scas
test
cmp
pop
sti
iret
clc
jns
sbb
jae
inc
mov
xchg
adc
xor
icebp
in
push
rclb
popa
mov
in
xchg
add
clc
arpl
dec
xchg
or
jne
ss
jno
cs
fimull
std
push
stos
xchg
sarl
in
adc
dec
mov
test
cs
outsl
loopne
dec
jns
mov
jno
mov
repz
cmc
xchg
dec
sub
into
jp
jno
push
push
adc
pusha
mov
inc
cmpsb
mov
jnp
stos
aam
faddl
adcb
and
clc
test
insl
scas
push
push
mov
mov
mov
lret
dec
cmpl
push
icebp
jbe
fsubp
rorb
push
out
mov
inc
int
rcll
add
dec
inc
mov
mov
and
pusha
inc
fldt
sbb
mov
xchg
adc
loope
test
dec
rol
add
sub
add
aam
negb
xchg
int
pop
outsl
xchg
repnz
icebp
cmpl
sub
pop
jmp
outsb
nop
out
das
mov
dec
fldenv
xchg
mov
shlb
xchg
mov
cs
jl
adc
nop
popf
add
sub
xor
pop
pop
addr16
inc
adc
push
xor
loope
call
movsb
mov
mov
xchg
xor
mov
push
and
dec
mov
cmp
int
imul
fadd
push
adc
divb
push
enter
sbb
pop
mov
stos
stos
push
call
loopne
cltd
rcrl
push
in
insl
out
mov
fisubrl
mov
or
aad
jns
cmp
cs
lcall
mov
xchg
inc
inc
push
inc
scas
jg
insl
pop
mov
popa
icebp
jge
call
stos
fists
pop
adc
js
mov
mov
clc
shrb
cmc
dec
dec
add
push
add
mov
push
and
les
xchg
idivb
aas
cld
xor
pop
popf
jns
pop
jbe
out
scas
mull
and
dec
lcall
sub
mov
and
add
stos
popf
hlt
mov
and
movsl
in
jns
out
jle
popa
inc
dec
jle
cwtl
add
in
jo
xlat
sbb
inc
jnp
inc
adc
scas
jecxz
sarl
popf
push
inc
push
fldt
test
out
sub
aaa
and
incl
mov
dec
mov
jae
jns
test
jle
dec
xchg
push
xchg
lcall
mov
dec
sbb
mov
jb
xor
leave
jle
dec
mov
and
ret
add
xor
out
dec
jp
jne
divl
lret
les
pop
cmp
in
jne
cmp
out
xor
lcall
gs
aaa
loope
lret
sub
mov
fisttps
pop
pop
test
add
jle
popl
mov
orb
and
mov
inc
adc
mov
popa
mov
ds
leave
mov
pop
mov
xchg
mov
inc
mov
pop
cs
mov
in
push
push
inc
lret
pop
popf
stos
inc
mov
sub
push
pop
jnp
lds
insl
lret
fiadds
jecxz
inc
or
push
push
inc
int3
cmpsl
xchg
mov
in
inc
ret
or
fidivrl
mov
xlat
pop
xchg
sahf
sbb
fsubrl
xor
sarl
and
xchg
scas
pusha
add
mov
adc
mov
mov
sbb
ss
add
dec
lcall
cmp
repnz
lock
addr16
dec
sbb
push
lcall
jge
jg
sub
mov
mov
pop
mov
shlb
repnz
gs
adc
push
int3
sub
push
daa
jne
idivb
inc
adc
jns
insl
fisubrs
mov
out
subb
add
aaa
push
inc
leave
cld
inc
ljmp
mov
jns
xor
or
pop
movsl
aaa
ficoml
mov
adc
push
test
push
outsb
push
inc
jle
dec
lcall
sub
jo
lds
add
aaa
jne
cmp
out
punpcklbw
xchg
enter
inc
fstpt
lods
sbb
inc
or
sbb
sahf
int
int
or
mov
cs
js
in
scas
psrlw
pop
push
std
stc
popa
stos
imul
lea
js
dec
pop
sbb
push
mov
xchg
fwait
popf
xchg
addr16
cltd
stos
jecxz
jle
pushf
or
mov
xor
daa
sbb
push
push
mov
icebp
push
pop
fbld
ss
pusha
mov
leave
cltd
or
pop
shlb
dec
pop
idivl
stc
ss
push
xor
cmpsb
or
loop
push
inc
cmpsb
rorl
push
ret
sub
add
mov
sub
popf
dec
jno
ret
push
push
jb
icebp
or
lods
int
test
adc
popf
mov
add
dec
cld
stos
mov
test
and
mov
mov
sbb
push
add
in
andl
out
mov
push
xor
out
push
loopne
mov
mov
nop
add
popa
jg
out
mov
movsb
imul
mov
std
mov
loop
lcall
mov
jle
dec
jno
push
jns
inc
dec
mov
lea
cmp
dec
push
jle
cwtl
movsb
and
adc
aaa
inc
mov
lret
icebp
mov
cmp
daa
out
pushf
mov
arpl
in
fstps
test
push
int
adc
xor
ret
mov
or
stos
push
mov
adc
insl
xchg
jne
imul
out
xchg
pusha
dec
adc
pop
out
mov
or
xchg
out
int
mov
jo
xchg
inc
xor
loope
dec
sub
and
pop
loop
push
inc
mov
push
add
das
inc
sub
push
adc
mov
test
sbb
rcll
scas
pop
roll
mov
in
and
cmp
xchg
mov
aam
mov
sbb
inc
adc
mov
pop
cmp
scas
ret
aas
int
test
cmp
fildl
cmpsl
test
rorb
test
dec
mov
inc
xchg
pusha
adcb
loope
and
imul
mov
dec
push
sub
and
outsl
push
cmp
pop
mov
xlat
xor
jb
mov
cmp
fiadds
shll
push
mov
call
std
add
minps
adc
test
aaa
aas
lea
nop
addr16
int
cs
mov
lret
push
in
mov
mov
xor
inc
mov
pop
xor
rol
sbb
mov
push
iret
scas
pop
or
jns
sbb
rcr
orl
and
rorb
pop
mov
fxch
mov
les
xor
cmpsl
and
push
xor
inc
addr16
popf
sbb
add
mov
dec
cmp
jne
test
bound
push
ret
mov
sbb
scas
popf
add
jg
addr16
mov
xchg
mov
push
or
cmp
push
in
xor
stc
cmpsb
xor
sbb
cmp
incb
jg
repz
xchg
aad
sub
std
lret
sbb
cld
push
mov
mov
push
das
mov
out
or
inc
jne
jl
ljmp
mov
ret
jle
imul
sbb
out
fcoms
je
sub
mov
mov
inc
insl
int
inc
adc
or
and
cltd
shll
outsl
adc
sbbl
mov
mov
aaa
out
jecxz
scas
jmp
xchg
stc
punpcklwd
xor
push
lcall
stos
scas
adc
in
jns
cmp
in
and
sbb
faddl
loope
jle
push
lcall
pop
jle
push
inc
mov
fwait
inc
mov
rcrb
into
adc
xchg
push
addb
push
mov
aaa
fiaddl
cs
cmp
and
out
lcall
xor
jg
es
mov
loope
lds
mov
adc
movsl
fdivrl
jg
jge
int3
incb
jge
mov
jb,pn
jno
cmp
lahf
aas
mov
fcmovnb
sub
int
xor
cs
cld
or
xchg
mov
adc
xlat
or
stc
lret
pop
testb
dec
int
adc
popl
push
xchg
jne
movsb
sub
sbb
andl
pop
mov
int
int
inc
push
in
sub
xchg
xchg
push
add
push
adc
xor
add
sub
sbb
dec
lcall
jae
xchg
xor
shrl
loop
xchg
and
push
outsb
int3
and
aaa
sahf
test
scas
inc
inc
stc
push
lret
or
pop
cmpsl
cli
mov
push
hlt
call
aam
lock
pop
jle
xor
and
enter
into
xchg
stc
xchg
jp
push
inc
jg
or
inc
push
xchg
mov
mov
scas
add
sbb
mov
test
xchg
popl
lods
rcrb
int
mov
pop
mov
mov
adc
xchg
lahf
in
mov
adcb
jo
nop
push
push
imul
mov
xchg
sbb
xor
or
nop
loope
subl
inc
xor
mov
mov
adc
jns
mov
fwait
adc
pop
push
dec
mov
hlt
jl
sub
hlt
shlb
xchg
shlb
sub
lcall
xchg
dec
aad
enter
test
mov
repnz
cli
pop
dec
arpl
xlat
inc
insb
lea
pop
push
sub
sbb
mov
fisttps
jmp
lea
pop
es
sub
mov
je
mov
mov
sbbb
inc
xor
dec
repnz
scas
lcall
inc
nop
stc
test
sub
aam
pop
es
push
mov
cmp
mov
popf
sub
mov
and
jp
out
ret
stc
nop
adc
loop
xor
push
push
or
std
xchg
in
mov
lret
pusha
inc
pop
clc
bound
out
shld
cmp
mov
add
test
and
jg
gs
out
ret
or
ja
ds
xlat
das
cmpsl
and
outsb
cltd
sub
dec
push
push
ds
call
push
les
inc
inc
cmpsb
xor
scas
sarl
xchg
lcall
sbb
push
or
dec
mov
inc
cmp
jle
ret
fmuls
aas
mov
adc
test
test
les
test
lret
pop
sub
mov
xchg
nop
and
mov
inc
mov
jecxz
jmp
sbbb
adc
pop
cli
xor
and
dec
repnz
les
xor
lock
aad
pop
sub
mov
inc
adc
push
jnp
gs
cmp
cld
jno
mov
dec
insb
cli
mov
sbb
mov
inc
test
and
bswap
dec
dec
stc
cmp
add
test
into
sub
popf
or
ljmp
push
aam
bound
add
ret
sbb
sbb
incb
clc
push
push
inc
jg
inc
dec
lea
mulb
mov
xchg
xchg
xchg
sub
sub
ds
jns
out
loopne
cmp
stos
pxor
fimuls
scas
jmp
scas
lcall
loop
shrl
jecxz
mov
inc
push
ds
push
sbb
push
and
repz
mov
and
adc
rol
ret
inc
fisubs
nop
cmp
cld
inc
cmp
bound
mov
xlat
xchg
mov
cltd
push
cmp
mov
push
scas
or
into
mov
fdivp
in
jle
lcall
outsl
dec
cmp
adc
adc
outsl
xchg
xor
adc
inc
pop
cmp
xchg
push
das
mov
xchg
popa
inc
jmp
repz
shll
aam
xor
mov
popa
gs
nop
out
je
inc
popa
cmpsl
addr16
cs
jmp
cmp
dec
clc
inc
mov
or
sahf
inc
out
popa
int3
push
and
mov
js
out
xor
mov
adcl
hlt
mov
mov
inc
scas
incb
pop
xor
stc
inc
test
push
mov
and
shll
fisttpll
test
jge
fnstcw
sub
call
jg
in
and
outsl
lea
jmp
call
mov
es
lahf
clc
dec
jecxz
mov
or
arpl
popf
mov
adc
adc
cmp
js
leave
jb
loope
clc
int
push
jbe
jg
sbb
adc
mov
insl
negb
test
in
pop
cmp
add
push
inc
pop
push
add
push
pop
jae
imul
inc
jae
dec
imul
aas
push
lea
and
test
mov
test
xor
loope
push
push
sub
js
mov
cmp
mov
dec
call
out
dec
jmp
setns
inc
jmp
jno
lods
mov
out
dec
xchg
out
jo
mov
roll
test
loope
stos
shrb
mov
jo
mov
adc
fdivp
enter
jns
sbb
inc
sub
inc
out
mov
sub
fsub
adc
inc
cmp
dec
sbb
test
xchg
imull
std
xchg
mov
pusha
inc
and
cmp
outsb
mov
lds
mov
inc
mov
addr16
or
dec
movsb
and
or
cmp
xor
nop
push
scas
loopne
sub
and
mov
imulb
mov
inc
mov
pop
jmp
mov
fisubrs
std
xchg
test
in
int
fstpt
adc
shrl
lcall
mov
mov
loop
into
int3
out
mov
nop
mov
inc
int
and
or
pop
daa
xor
jno
adc
pop
mov
gs
fldt
mov
insl
xchg
and
in
mov
dec
adc
out
inc
inc
nop
lahf
mov
sub
fs
clc
mov
push
or
jnp
nop
cmp
dec
repz
cmc
mov
stc
fstl
lahf
iret
and
mov
repnz
dec
pusha
pop
in
inc
popf
jge
cmp
mov
inc
daa
cmp
imulb
lcall
push
dec
cmp
inc
scas
jb
push
iret
sbb
cltd
push
mov
mov
sub
ret
or
add
mov
and
lahf
scas
jns
in
subl
cmpsl
mov
arpl
inc
xor
adc
cmp
or
add
push
sbb
enter
nop
add
and
fdivr
insl
xchg
mov
push
outsl
and
mov
stos
xchg
sub
dec
push
push
or
cmp
xor
mov
jg
sti
jno
push
adc
mov
ljmp
popf
inc
lcall
mov
aaa
and
jne
jne
jmp
add
lcall
lahf
into
jmp
mov
ficomps
mov
pop
aad
and
cmp
addb
cmc
out
out
mov
push
jno
ss
adc
push
push
and
adc
pop
jns
testb
cmp
dec
mov
dec
scas
add
add
cmpsb
bound
ret
rep
sub
jne
cmp
cmpsb
xlat
add
movsb
mov
xorl
subl
mov
dec
mov
or
rcrl
mov
xchg
add
scas
add
mov
stos
imul
mov
adc
push
sub
jge
dec
xchg
mov
fsubrl
lods
clc
mov
inc
sbb
shl
mov
mov
mov
lds
adc
int
cld
and
dec
lahf
dec
pop
mov
mov
add
in
sar
cs
orl
mov
sub
cmp
dec
cmpsl
sbb
cmpb
iret
inc
adc
jg
into
clc
outsl
push
mov
mov
ret
dec
xor
dec
dec
addb
arpl
out
mov
push
insb
lcall
mov
loop
push
pop
repz
ja
sub
adc
mov
jecxz
popf
inc
adc
scas
dec
push
nop
sti
scas
mov
mov
cmp
mov
cwtl
adc
call
sub
sarb
popa
push
mov
shll
test
popf
xor
and
std
pop
iret
jbe
push
loopne
ds
or
bound
dec
lock
ljmp
xsha1
cmpsb
or
ljmp
xor
push
mov
sahf
mul
hlt
dec
je
jno
sbb
push
push
and
xor
push
frstor
xchg
ret
rolb
test
lods
mov
mov
sub
jne
fldt
int3
jno
sub
add
jo
mov
sbbb
push
jmp
lahf
adc
pop
out
jo
cmc
std
faddp
push
mov
inc
add
repnz
lds
xchg
sub
xlat
cmp
jb
dec
stos
rcrl
pop
movsb
mov
sbb
xchg
pop
ljmp
jmp
rol
repz
sub
aas
out
stos
push
inc
lea
rol
xchg
mov
mov
fimuls
xchg
and
inc
test
push
xchg
xchg
adc
cmc
cli
int3
mov
push
in
or
ljmp
stc
mov
ret
shlb
ror
fidivrl
fs
jno
scas
es
mov
scas
adc
mov
pcmpgtd
cmc
dec
or
stc
rcl
repz
mov
icebp
mov
add
fwait
jp
ljmp
ds
scas
add
rcll
or
sbb
iret
mov
into
and
or
mov
xchg
add
test
xor
add
dec
ret
sbbl
popf
aas
pushf
mov
dec
xchg
push
out
testl
sub
lds
cltd
push
std
lret
pop
or
or
cs
jmp
pop
xlat
or
mov
jecxz
xchg
das
popl
add
sub
sub
and
push
loop
outsb
fnstcw
stos
sub
add
dec
dec
and
xchg
mov
push
call
mov
mov
shrl
ss
aam
push
jmp
mov
and
pop
cs
inc
js
je
and
pop
xchg
jno,pt
jle
mov
shr
out
aas
inc
jns
sub
scas
add
jnp
and
test
int
mov
xor
nop
out
addb
int
mov
fisubs
sub
in
and
mov
xor
jmp
cmp
jge
scas
mov
movsb
cli
dec
add
mov
inc
movsb
jbe
mov
xor
add
iret
in
in
imul
mov
rclb
adc
cmp
nop
dec
scas
inc
loopne
dec
jnp
lcall
lods
pusha
dec
mov
lcall
jmp
dec
in
push
cli
mov
jle
cli
xor
sbb
sahf
jns
stc
jmp
jg
adc
stos
adc
shll
sbb
pop
popa
xor
add
xchg
rcrl
ds
lahf
dec
mov
inc
mov
aaa
xchg
ret
jmp
push
add
xor
xor
sub
mov
inc
push
xchg
movsl
fisubrl
mov
stos
push
imul
imul
dec
xchg
jno
inc
inc
lds
jne
xchg
mov
insl
mov
mov
dec
xchg
sub
pop
and
push
pop
xchg
mov
cmp
roll
in
cmpsb
insb
push
jg
gs
pop
stc
test
xchg
out
pusha
push
add
in
in
mov
stos
stc
ljmp
ljmp
imul
fsubrl
jae
jge
jle
mov
sub
scas
push
inc
cmpsb
push
lahf
push
inc
fisttpl
add
inc
inc
xchg
xchg
cld
push
scas
push
jno
inc
xor
fadds
jecxz
sub
inc
cwtl
xchg
adc
cld
popf
pushf
fcmove
roll
in
out
ds
decl
sbb
popl
jl
mov
ss
mov
jecxz
and
cmpsl
inc
inc
xchg
and
push
mov
mov
iret
adc
gs
sbb
and
leave
jecxz
pop
sbb
sahf
lock
leave
or
pop
dec
sub
pop
push
aas
mov
flds
cmpsb
or
push
jg
insb
cmpsl
andb
aas
cld
nop
ljmp
lret
outsb
mov
pop
push
mov
dec
pop
mov
ss
cmp
idivb
repz
ret
ja
popa
mov
jg
stos
insb
dec
popf
adc
mov
sbb
daa
inc
mov
and
sbb
sub
mov
sub
dec
xor
popf
cmp
icebp
ret
cltd
add
add
inc
mov
sub
jle
sub
inc
push
sub
dec
fimuls
dec
pop
xor
enter
inc
adc
jecxz
cmpsb
out
pop
es
mov
cmpsb
jg
jbe
sub
bound
ss
mov
fcoms
js
pop
xchg
mov
push
dec
movsb
fldcw
jno
mov
in
jmp
lret
push
push
dec
sahf
sbb
cmc
mov
cmp
cmp
andb
mov
lods
test
daa
dec
test
imulb
pop
jp
xorb
fstp
sub
dec
imul
test
cwtl
popa
lods
mov
inc
andb
inc
and
fwait
inc
xchg
cli
adc
jne
and
std
mov
adc
ja
jno
cmp
mov
inc
std
push
pop
mov
bnd
fcomi
sarb
shll
fcoml
adc
jb
in
dec
xor
inc
sbb
mov
cmp
xchg
dec
sbb
pusha
and
sub
and
or
or
inc
std
inc
cmp
imul
gs
sub
sub
pop
fs
test
xor
movsl
pop
mov
and
sahf
bound
insl
out
push
jno
mov
mov
lret
into
lcall
mov
mov
subb
daa
rorb
cmp
xchg
push
mov
lods
or
lods
sahf
lret
cwtl
mov
lock
mov
mov
movsb
test
mov
xchg
xchg
pop
sub
inc
jle
test
inc
mov
cmp
sub
fsubr
jbe
sub
stos
insl
pop
sub
jge
pop
xchg
add
imulb
jmp
jnp
repz
cmp
shrl
into
test
imul
xlat
fsubs
xchg
sub
pop
xchg
xchg
lock
ljmp
fadd
popf
int
aas
imul
dec
mov
nop
cs
and
lods
mov
mov
add
shld
out
cs
mov
pop
dec
and
jecxz
push
mov
xchg
inc
pop
in
cmp
cs
jno
sub
std
and
inc
orb
push
sti
ss
decb
mov
int
flds
xor
enter
push
test
pop
out
mov
mov
add
jmp
cltd
sub
adc
xchg
mov
mov
cmp
fimuls
sub
icebp
push
sub
cmp
fdiv
nop
rcrl
pop
test
std
stos
repz
clc
gs
or
push
jb
xor
ja
cmp
adc
jge
inc
jns
sbb
sarl
mov
jae
jno
push
cmp
fimuls
jb
mov
and
ficoml
sub
mov
cld
shrb
jge
jmp
in
jb
cmpsl
xchg
cli
push
icebp
mov
int
mov
roll
loope
adc
xchg
sbb
mov
iret
data16
negb
cmp
out
lcall
pop
inc
sub
pop
cmp
xor
dec
jb
sbb
pop
or
pop
and
xor
adc
outsb
clc
push
jae
lods
jb
xchg
in
jg
dec
dec
in
int
and
test
imul
jge
xchg
jle
adc
push
cwtl
dec
repz
outsb
cmp
pop
pop
mov
ja
shr
in
rcl
sbbl
cmpb
imul
pusha
pop
popf
test
popf
xchg
in
mov
test
or
jns
popf
outsb
movsl
pop
push
cmpsb
aad
nop
mov
xor
in
outsb
push
imul
ds
mov
pop
xor
subb
mul
mov
mov
adc
or
or
lahf
jnp
cmp
xorb
xchg
hlt
push
fisubs
dec
xchg
lods
cmpsb
inc
xor
cmpsl
mov
push
out
adcb
cmc
xor
push
inc
fists
repnz
outsl
pop
push
adc
adc
cltd
ss
pop
and
inc
jp
inc
xchg
xchg
icebp
ljmp
test
cmp
dec
cmpsb
jge
mov
mov
inc
and
repnz
and
je
cmc
outsb
sahf
lods
jns
lock
mov
push
inc
pop
xchg
adc
pop
daa
pop
pop
xor
jl
adc
and
inc
mov
out
push
inc
add
jae
in
mov
adc
inc
sbb
loope
movsl
mov
mov
scas
lds
mov
jecxz
sub
into
sbb
addb
inc
mov
addb
shl
xchg
mov
pop
xchg
rcll
push
inc
pop
dec
jle
int3
jb
inc
stos
lds
imul
push
sahf
fcomi
outsl
cmpsl
xchg
mov
adc
inc
inc
scas
outsl
jo
fmull
jae
cwtl
pushf
int3
ds
inc
cmp
sbb
int
jg
mov
jmp
adc
lds
cmp
push
jo
addl
mov
xchg
mov
sub
out
xchg
mov
push
out
or
addl
rcl
push
sbb
aaa
adc
dec
jl
icebp
push
js
xorb
addr16
dec
sub
cmp
cmp
movsl
out
sub
scas
cmp
rcrl
aaa
cmp
dec
lea
dec
fstps
and
dec
lods
loope
mov
push
mov
jp
ret
xlat
imul
push
mov
cmpsl
lea
cmp
and
pop
test
imul
cwtl
pop
out
jns
lds
mov
sub
outsl
pop
ljmp
or
add
mov
dec
dec
push
repz
adc
xchg
push
xor
inc
xchg
mov
bound
jg
das
lds
cwtl
scas
fucomip
ds
ja
movsb
mov
lea
xchg
ljmp
loope
ds
jb
mov
pop
aas
cmpb
jg
popf
stos
arpl
and
push
rsm
pop
jno
jle
andl
mov
add
cld
fistpll
ret
and
insl
cmp
push
or
stc
loope
xchg
test
fsubs
mov
div
fs
subb
jbe
jbe
insl
or
in
xor
cmpsl
lds
or
push
sub
pop
jmp
daa
pop
repnz
int3
clc
mov
sub
sub
addr16
ss
ret
mov
xor
mov
push
mov
jb
out
xor
in
cmpsb
xchg
adc
int3
jae
addb
imul
in
xor
adc
pop
repz
imul
leave
or
aas
fs
jb
loope
pop
fsub
ret
cld
mov
je
out
dec
mov
push
mov
sub
ret
cmp
push
fisubrl
and
jmp
mov
enter
lds
shrl
mov
lea
xchg
mov
iret
frstor
sahf
rolb
add
andb
roll
test
ljmp
cmc
fidivs
cmpsb
popa
std
lea
xor
adc
subb
insl
pop
gs
outsl
jno
jnp
movsb
jae
jg
dec
jp
lahf
adc
loop
xchg
adc
inc
xor
enter
int
loop
cmpsl
jno
push
xor
fdivrl
fimull
inc
jne
mov
mov
stc
or
xchg
xchg
decb
cmc
or
cli
inc
aaa
clc
sahf
adc
add
push
adc
pop
pop
cmp
xchg
pop
shll
rcr
in
dec
cmp
mov
inc
push
adc
in
arpl
dec
sub
sub
pop
adc
orl
push
pop
ljmp
add
add
divl
sbb
dec
rcr
in
jmp
roll
ret
jne
pusha
aaa
lahf
jbe
xchg
ret
jge
pop
leave
mov
insb
ljmp
aam
push
icebp
inc
ds
mov
push
in
fwait
pop
test
aaa
mov
cmp
adc
inc
jb
sub
insb
insl
in
xor
in
or
push
or
stos
int
dec
push
jecxz
or
adc
inc
xor
test
add
int
cmp
mov
fadds
xchg
dec
orb
xlat
test
cmp
sti
add
or
js
ret
ret
lcall
push
repz
les
sbb
rcrb
mov
popf
push
ljmp
enter
fcomps
and
xchg
push
rol
outsb
dec
into
cltd
jle
dec
mov
xor
std
push
int
ret
into
cwtl
mov
paddsw
jp
add
daa
add
test
inc
lahf
repnz
sbb
call
push
fmull
hlt
push
mov
add
adc
aam
les
adc
add
out
rcr
jno
aam
pop
notl
xchg
jnp
adc
xor
add
pop
pop
mov
fiaddl
aad
pop
fsubrl
fbstp
cs
jnp
fnstenv
adc
hlt
inc
in
push
mov
imul
push
xchg
sub
sbb
repz
cmpsb
jns
nop
jne
into
mov
jns
lcall
inc
xlat
repz
jno
mov
out
pusha
adc
push
stos
mov
jne
aaa
inc
neg
xchg
inc
mov
sti
test
aam
push
in
push
jns
sbb
mov
inc
loop
and
adc
cmp
andb
adc
fistl
test
or
scas
cld
pop
push
xor
les
dec
pop
and
imul
jle
and
nop
push
fdivrs
mov
mov
rorb
test
inc
xor
push
aam
push
outsl
shll
mov
loop
adc
xchg
ds
mov
sub
push
pop
and
aaa
sbb
mov
jl
jno
sbb
xchg
pop
xor
xchg
mov
cmp
enter
clc
out
mov
shll
pop
leave
jno
inc
lods
pop
roll
scas
shrl
fiaddl
sub
inc
jl
dec
fldl
mov
outsb
and
repz
cmp
and
sahf
adc
pop
ret
stc
out
jecxz
sub
cli
jo
inc
dec
aas
adc
jne
dec
inc
push
and
inc
push
negl
dec
aad
neg
je
int
inc
mov
ss
aam
mov
adc
popf
clc
jbe
mov
jnp
aad
pop
dec
mov
mov
notb
int
push
int
fdivl
sub
ret
cmp
inc
mov
mov
pop
xor
nop
mov
push
jp
mov
mov
bound
and
sbb
aam
in
mov
ja
fildl
loope
rolb
in
aam
jo
adc
or
cmp
sbb
loop
sub
ljmp
rcll
icebp
adc
dec
sub
fmull
sub
xchg
fwait
jecxz
shrl
cli
xchg
sarb
sub
sbb
xor
pop
xchg
das
fwait
pop
jl
and
andl
lods
out
pop
push
outsl
lcall
mov
arpl
aad
out
xor
leave
out
jb
mov
icebp
and
out
dec
mov
inc
aam
pop
push
push
sahf
mov
and
out
in
sub
adc
push
inc
and
repz
add
jno
mov
xchg
lea
stos
stc
ret
sbb
aaa
mov
out
movsl
aad
lahf
fs
std
add
pop
xor
aaa
mov
sbb
jb
ror
mov
sub
dec
sbb
test
mov
or
sti
adc
add
push
insl
nop
shl
jb
and
sbbb
xchg
int
pop
mov
outsl
bound
sahf
xor
cs
lods
push
stos
outsl
addb
jmp
jns
mov
out
inc
loopne
sub
jle
movsl
mov
mov
lea
jb,pn
dec
xchg
push
scas
mov
nop
xor
inc
push
adc
into
xchg
inc
adc
cs
pushf
xor
jae
push
dec
and
pop
pop
rcll
out
outsl
xor
dec
mov
daa
gs
add
orb
pop
icebp
push
ljmp
add
add
outsl
or
add
out
xchg
mov
fcoml
and
dec
jmp
mov
mov
xor
mov
dec
xor
cli
fdivrs
cmp
mov
sbb
shrb
mov
push
mov
add
jl
push
xchg
dec
inc
jb
pop
push
out
pushf
movsl
mov
cwtl
add
mov
rcr
mov
int
ja
out
mov
xchg
jp
adc
movsb
sub
addr16
dec
lock
mov
repnz
inc
emms
push
cmc
ret
and
cld
xor
lcall
inc
out
fwait
out
in
and
lods
test
rorb
aad
dec
dec
stc
mov
jae
cmp
sbb
xchg
mov
shlb
or
mov
stc
mov
adc
mov
xchg
dec
bound
dec
mov
push
mov
xchg
mov
pusha
lods
shr
push
out
nop
lods
and
xchg
das
scas
loop
xor
sbb
popf
movsl
xchg
data16
cmpsl
inc
jno
inc
fidivl
fidivrs
ret
push
bound
ljmp
cmp
lock
into
les
movsb
sbb
imul
inc
and
hlt
test
mov
mov
cli
mov
push
or
sahf
adc
sub
and
fsts
in
inc
insl
sbb
lcall
mov
push
out
jb
mov
push
or
inc
repnz
push
jb
xchg
fwait
daa
mov
aam
or
pop
push
mov
adc
imul
dec
dec
cmp
inc
ret
push
jo
cmp
mov
ret
sbb
dec
push
popa
pop
xchg
jmp
add
adc
daa
roll
xchg
scas
inc
xchg
mov
dec
aaa
shll
mov
insb
nop
xor
sti
or
loope
jno
loope
mov
inc
and
insb
outsb
leave
inc
cmp
push
or
lret
les
add
jle
mov
fcoml
pop
out
pop
xor
nop
sub
adc
faddl
fst
xchg
or
fwait
inc
outsl
in
pop
outsb
lahf
and
cmp
aad
call
mov
leave
sub
jg
push
int
sbb
out
push
cmpsl
gs
fnstsw
rcrb
jne
dec
inc
adc
inc
pop
in
sbb
les
ss
imul
pusha
lret
dec
dec
inc
lods
inc
jno
leave
out
sub
adc
pop
and
sbb
outsl
into
cmp
js
inc
repnz
xor
sub
adc
dec
mov
sbb
xchg
ljmp
call
icebp
les
bound
test
jge
iret
push
int3
inc
int3
nop
repnz
out
out
jo
ret
shrl
sahf
push
or
lret
cld
or
popf
add
pop
inc
icebp
mov
mov
sub
and
or
push
mov
into
jae
push
lock
test
rclb
cmp
pop
insl
mov
das
popa
rcll
xchg
test
xor
sub
dec
nop
xlat
lods
ss
fstl
mov
or
adc
push
sbb
fimull
inc
sub
xchg
mov
adc
in
pop
dec
ss
cs
mov
lods
xor
inc
and
stc
dec
sbb
ficompl
mov
push
test
out
push
jb
outsb
xchg
and
movsb
fisubs
out
imul
pop
fnstsw
jb
mov
iret
and
mov
mov
inc
push
push
repz
dec
sub
inc
in
stos
mov
dec
test
repz
sbb
lcall
add
aad
inc
ret
and
pop
aam
mov
push
mov
xchg
into
adc
mov
push
cmpl
push
jge
jo
dec
xor
repz
push
add
mov
ret
fstpt
or
ds
lea
rcrl
negb
cmp
dec
xchg
sarb
mov
inc
pop
leave
adc
int
fcomip
outsb
push
lahf
in
fsts
ds
fxch
add
xchg
ljmp
js
xchg
and
cmp
popa
sbb
sarl
mov
inc
loopne
dec
push
mov
ret
push
pop
adc
roll
aas
repz
xor
pop
dec
jecxz
mov
incb
nop
subb
or
mov
adc
mov
mov
push
mov
inc
ljmp
into
and
scas
iret
mov
jne
idivb
xor
ret
repnz
or
push
pushf
andb
sub
das
fsubrl
sarl
popf
stc
pop
xchg
in
insl
cmp
int3
xor
in
scas
or
and
cli
sub
rcll
jle
rorb
mov
dec
mov
dec
in
imul
insl
dec
push
loope
rorl
mov
iret
mov
rolb
in
push
test
lcall
and
jb
push
and
aaa
mov
scas
xor
push
mov
pop
xchg
aaa
and
leave
fmull
int
repnz
cmpsl
ret
dec
jg
out
in
scas
lcall
jmp
fdivp
adc
fistpl
lcall
inc
call
stc
add
sbbb
mov
fstl
jnp
xor
jg
inc
pop
rorl
daa
inc
int
js
mov
cmp
or
xchg
enter
sub
push
push
outsb
xor
mov
push
dec
arpl
push
push
lret
movsl
scas
add
lcall
and
push
movsb
addr16
je
mov
mov
mov
jmp
data16
push
stc
lea
cmp
dec
lds
adc
jg
lcall
adc
jb
rcrb
adc
loope
in
shll
inc
mov
mov
jo
mov
jg
std
mov
adc
dec
lcall
hlt
aam
inc
jg
jno
sbb
int3
push
out
rolb
pop
fisubs
mov
pop
adc
sbb
mov
xchg
and
mov
int
inc
sbb
gs
pushf
pop
add
out
xor
adc
lret
inc
out
adc
push
sub
jb
inc
insl
xchg
pop
lods
dec
and
int
out
test
movsl
aas
and
xchg
pop
ds
ret
into
lods
cli
fstpt
inc
adc
sub
insl
and
orb
jns
cmp
or
xchg
pop
inc
push
fcmovnu
cmp
jp
mov
out
pop
mov
nop
and
dec
push
and
scas
jne
fs
sub
movb
dec
test
xchg
jp
outsl
ja
in
cltd
dec
pop
enter
mov
ja
and
lcall
xor
push
pop
pop
xchg
daa
pop
orb
adc
filds
adc
push
pop
pop
pop
subb
cs
push
push
mov
push
enter
mov
outsl
cmc
mov
rclb
js
rcll
dec
ds
dec
scas
sub
or
rcll
loope
pop
addr16
out
movsl
daa
xchg
and
cltd
mov
ret
mov
adc
adc
jecxz
inc
jl
adc
cli
xor
pop
xor
pop
sbb
jbe
and
adc
shl
pusha
lods
xchg
orb
xchg
rorl
sahf
rcr
shll
out
stos
lods
mov
notb
add
insl
pop
mov
push
push
data16
push
pop
out
mov
pop
inc
inc
subl
andb
jg
mov
pusha
std
inc
jg
or
push
paddusw
push
insb
dec
lea
sbb
in
out
pop
cmpsb
or
jge
movsb
adc
sub
push
movsb
sub
push
imul
jbe
add
mov
xchg
dec
mov
mov
and
pop
sbb
sbb
das
push
out
jp
dec
push
jmp
adc
pop
jno
enter
jmp
dec
xchg
inc
cmp
cmpsb
dec
sub
add
or
out
dec
outsb
and
sub
hlt
fldl
addb
add
mov
test
cmc
sub
aaa
mov
in
fistl
imul
stos
leave
stos
hlt
adc
jg
adc
sub
jns
jbe
int
jg
and
pop
test
cli
mov
dec
dec
adc
aam
sbb
mov
pop
mov
xchg
inc
mov
nop
add
inc
xchg
das
bound
adc
mov
nop
pop
cmpsl
add
push
dec
push
aas
scas
mov
test
xor
fdivl
sbb
jne
and
cld
mov
push
insl
inc
leave
dec
add
mov
xchg
and
push
stc
sbb
shrb
lcall
ror
and
popf
jge
mov
push
add
ss
push
and
popl
movsl
or
xchg
imul
lahf
mov
jne
xchg
insb
aam
jne
pop
push
notl
or
jae
lret
push
jne
push
dec
jbe
and
jo
shlb
ret
add
adc
shl
testl
inc
mov
in
mov
data16
lock
ret
mov
jle
adc
or
lock
in
or
mov
xchg
pop
not
dec
jecxz
pusha
add
enter
enter
adc
jno
cwtl
mov
push
addb
sub
icebp
fsubr
fldcw
jne
leave
pop
xchg
mov
test
inc
rcrl
mov
sub
stos
dec
jbe
mov
aam
loopne
fldl
sbb
dec
into
xchg
adc
inc
jge
mov
hlt
sahf
jle
jmp
iret
rolb
sub
cmpsb
adc
fsubrs
jb
adcb
leave
repz
cs
int3
loope
mov
push
sub
and
in
stos
jns
xchg
mov
test
iret
pop
stc
and
fildl
xchg
adc
stos
push
in
mov
add
lds
aas
xchg
daa
clc
data16
repz
in
mov
or
push
add
outsl
das
jno
popf
and
fs
inc
es
push
mov
and
repz
scas
pop
addr16
paddq
pusha
xor
lods
in
inc
inc
divl
outsb
inc
lods
fldcw
cld
mov
lods
inc
and
push
pushf
dec
mov
sub
sub
out
test
add
xchg
push
cs
push
mov
inc
insb
xchg
mov
xor
push
stos
repz
dec
jno
loopne
fsts
lahf
mov
insl
insb
cmp
mov
stos
push
cmovnp
jno
push
sbb
test
inc
daa
fs
xlat
ja
sub
cli
xor
sbb
mov
lea
movsb
sub
inc
icebp
in
xor
dec
insb
outsl
pop
outsb
xchg
xchg
dec
outsb
jecxz
dec
sub
sub
lods
cwtl
int
icebp
sbb
jno
mov
jb
and
add
pop
int3
push
jno
or
xchg
cltd
or
sub
ret
cmp
cmp
addb
xchg
mov
xchg
jno
enter
or
clc
hlt
stos
push
inc
jle
cmpsl
mov
jnp
dec
jae
jb
ds
adc
leave
inc
rcll
jg
shrb
push
sub
daa
mov
popf
cmpsl
push
xchg
or
repz
push
pop
adc
scas
and
dec
addb
cmpsl
jae
gs
and
push
cmp
pushf
mov
sbb
xor
push
xor
fmul
lods
sbbb
jb
ss
mov
dec
clc
cld
sbb
repnz
int
lret
je
xor
push
jg
iret
mov
fwait
xchg
lods
aam
int
sarb
mov
in
test
xchg
pop
mov
xchg
loop
outsb
add
lods
and
mov
or
pop
push
push
sub
cmp
mov
nop
push
daa
stc
add
inc
notb
inc
adc
xor
rcrl
dec
idiv
jg
imul
movsl
mov
orl
dec
adc
and
mov
mov
dec
push
jbe
popa
addr16
popa
insl
sbb
cmp
or
addl
jne
cwtl
mov
nop
sbb
lret
iret
js
and
jle
mov
sub
mov
call
xchg
pop
xor
icebp
lock
xchg
xor
pop
mov
aaa
aaa
xor
add
or
orl
mov
cmp
fsubp
push
lahf
cmpsb
or
add
idiv
out
push
mov
sub
push
int
test
push
mov
mov
iret
loope
stos
jmp
out
push
dec
idivb
or
cmp
gs
jp
and
mov
adc
ret
cli
xchg
pusha
mov
sbb
gs
fcomip
sub
int
add
lahf
jg
test
inc
mov
mov
nop
or
es
aaa
jl
cmpl
pusha
sahf
movsl
aaa
push
xchg
ds
stos
cmp
dec
jmp
les
call
test
push
leave
push
in
mov
mov
faddl
in
add
sahf
jge
leave
bound
push
mov
mov
jle
out
out
not
fsub
or
xor
and
xchg
pusha
lret
insb
push
cmp
pop
cmp
sbb
inc
inc
cmp
aaa
jg
push
xchg
mov
icebp
pop
rorl
outsb
adc
inc
rcll
fsubl
xchg
sbb
jo
jp
xchg
mov
pop
int
pop
scas
addr16
inc
xchg
bound
outsb
popa
cli
and
xchg
rolb
adc
ficoms
cltd
and
sahf
mov
into
jl
jle
and
ret
mov
cmp
mov
ss
cmp
jb
loop
xchg
mov
into
and
or
stos
jb
cmpb
popl
add
inc
jg
adc
inc
add
mov
inc
xor
xchg
jbe
or
into
movsb
jae
ljmp
out
adc
sbb
in
dec
ss
lods
seta
gs
nop
inc
inc
divb
inc
mov
and
push
dec
clc
mov
inc
inc
stc
mov
bound
add
int
inc
jns
xchg
dec
jmp
out
mov
fsubs
dec
and
sub
int
push
cmc
push
out
cli
mov
cld
jno
adc
jge
addr16
ret
sbb
jmp
jo
mov
mov
outsl
push
cmp
aad
out
repz
not
cmp
lods
cld
in
adc
inc
sub
and
adc
xor
mov
insl
and
in
cmp
adc
mov
or
fldt
ficoms
ret
es
pop
inc
mov
xor
jp
and
mov
inc
out
sbb
cmpsb
imul
jb
xchg
push
push
xlat
inc
stos
sbb
mov
and
cmpsl
int
adc
orb
lods
cmp
daa
faddl
fldl
daa
mov
daa
fstpl
pop
ret
in
jb
loope
xor
push
scas
addl
push
cwtl
xor
les
shrb
shrl
xor
rcrl
js
es
stos
sub
jo
jne
in
cld
inc
test
in
xchg
iret
cmpsb
adc
add
lds
movsl
xor
icebp
aaa
inc
adc
pop
mov
mov
inc
rcr
ds
dec
xchg
mov
out
mov
push
push
shrl
adc
dec
iret
or
js
in
inc
pop
dec
xchg
jmp
loope
out
mov
ret
mov
dec
lret
sub
lock
push
xor
mov
dec
and
push
xchg
dec
xor
icebp
push
popa
jne
ret
mov
daa
fsubl
xchg
pop
cld
pushw
inc
aam
in
pushf
dec
shr
imul
pusha
lcall
jle
jmp
mov
aam
lods
imul
jg
mov
jb
or
fsub
idivb
stc
inc
repnz
inc
add
and
cmp
popf
dec
and
pop
test
jg
mov
out
xchg
dec
sbb
fsubrl
sub
xor
sub
adc
sarl
pop
dec
loope
sbbb
test
shr
iret
or
mov
cmp
divl
jecxz
mov
or
jmp
and
pop
jmp
push
sahf
ret
dec
cmp
sbb
cwtl
add
sub
addb
dec
xlat
rorl
test
stos
mov
mov
sbb
popa
push
mov
add
shlb
mov
rclb
hlt
lcall
pusha
inc
mov
jp
orb
fisubl
dec
inc
in
or
and
inc
xchg
mov
dec
hlt
cmp
loope
sub
jno
cs
mov
push
fcom
fisubl
ret
mov
out
fisttps
adc
mov
mov
insl
xchg
cwtl
cmp
ljmp
insb
push
jle
andb
xchg
sub
mov
pop
push
movl
sub
ficoms
lods
in
in
lods
fdivrp
sbb
adc
es
es
add
push
push
test
int3
add
inc
sarb
jp
push
lahf
and
pop
dec
lods
mov
sub
pop
or
mov
int3
iret
sub
shlb
imul
out
adc
ret
adc
sti
push
cli
insl
cld
outsb
sbb
fidivl
dec
push
inc
adc
addr16
jae
test
outsb
adc
push
or
cmpsl
lret
cmp
fucomp
mov
dec
loope
inc
or
scas
insb
imul
push
je
out
sub
outsl
into
and
lea
pop
xchg
xor
stc
lods
jge
push
das
add
sub
incl
andb
daa
inc
in
inc
mov
pop
inc
or
ficoml
adc
sbb
daa
mov
add
adc
xor
inc
leave
shrl
mov
jp
ror
ja
xor
jbe
addl
push
inc
ss
mov
mov
mov
cmp
mov
nop
xor
lea
fadds
jg
imul
sbb
xlat
adc
mov
ljmp
and
sbb
sub
jns
es
pop
shrb
mulb
mov
and
mov
jecxz
and
push
add
jno
out
jb
repnz
inc
inc
adc
aas
push
mov
dec
shrl
sbb
mov
push
cld
add
jg
lock
out
jb
mov
inc
xchg
adc
fbld
inc
ds
pop
popa
adc
sbb
mov
loop
mov
mov
dec
lahf
jb
in
add
adc
pop
insb
pop
fidivrl
sbb
or
push
push
stos
mov
add
jnp
sub
popa
fidivs
pop
fdivl
push
dec
insl
int
mov
xor
sbb
insl
sbb
leave
daa
xor
jns
mov
test
in
jne
fcmovnbe
fwait
stc
dec
add
pop
pop
sbb
jbe
mov
adc
jnp
sbbb
pop
out
enter
dec
push
dec
dec
rsqrtps
and
jp
dec
jecxz
sbbb
jmp
jnp
in
xchg
insb
dec
push
mov
mov
xchg
test
es
and
push
inc
xor
pavgw
mov
mov
mov
push
xor
test
test
loop
fists
xchg
stos
cmp
leave
or
addb
dec
testb
lea
sbb
mov
cli
inc
mov
pop
inc
nop
jmp
mov
push
inc
test
mov
cmpsl
out
jo
popl
add
mov
leave
mov
sarl
or
lret
scas
dec
pop
lcall
sbb
inc
aad
ss
shrb
lds
jg
and
xchg
or
mov
push
mov
jg
lods
or
mov
test
fidivrs
mov
fwait
call
pop
pop
mov
sbb
jb
scas
jmp
ret
push
dec
sarl
jle
daa
sub
lock
or
icebp
or
lock
dec
inc
aas
inc
adc
aam
inc
push
add
int
push
popf
fadds
xor
xchg
aam
loop
push
ror
stos
xor
jp
jbe
dec
les
stos
test
sar
mov
adc
outsb
pushf
inc
push
mov
jp
dec
sbb
cmpsb
sbb
in
and
popa
pop
inc
rcll
adc
dec
dec
jne
xchg
add
xchg
cwtl
push
jge
sub
jae
mov
pop
sub
sub
sub
cmpsb
aam
inc
jne
push
pop
mov
negl
ficoml
fiadds
add
das
ret
pop
dec
kmovd
sub
daa
sub
push
adcb
cmp
or
inc
jae
mov
fisubrl
xchg
rorl
es
mov
sub
shll
out
rcl
into
sub
cltd
in
das
sub
ret
xchg
sbb
cmp
push
clc
test
lods
movl
out
in
add
fsubl
jns
pop
sub
pusha
xchg
xchg
or
mov
movb
jo
nop
push
add
mov
mov
jnp
test
rclb
jbe
inc
add
cwtl
add
filds
dec
das
push
shll
stc
mov
test
rolb
repz
xchg
sbb
outsl
imul
test
ret
out
arpl
ja
shr
push
sub
popf
clc
in
push
jb
lods
xchg
inc
inc
ss
int3
xorl
clc
fs
insl
loopne
push
or
clc
aam
hlt
dec
notl
cmc
jo
push
test
sbb
add
faddl
mov
push
inc
push
jp
pusha
bound
sub
cs
aas
out
inc
sbb
out
cld
sub
xchg
xchg
mov
sub
mov
sbb
pop
adc
adc
leave
pop
and
inc
mov
out
push
xor
adc
mov
fildl
xor
mov
push
aam
mov
or
out
je
pop
daa
test
in
push
test
in
push
add
xor
out
insb
mov
dec
adc
dec
aad
sbb
sub
out
int
push
push
sub
inc
and
into
push
and
fiadds
lcall
jle
or
dec
add
movb
insl
ljmp
mov
into
icebp
les
mov
jo
popa
mov
loope
sub
int
pop
popf
pop
sub
xchg
pushf
nop
and
push
xchg
in
xchg
icebp
dec
sbb
fadd
jb
and
addb
in
lret
repnz
pusha
mov
or
aas
ret
push
ret
xchg
jo
mov
andb
adc
in
nop
stos
sbb
sub
outsb
dec
icebp
outsb
repnz
mov
fcomi
test
add
pusha
cmp
xchg
sub
cs
arpl
inc
sahf
mov
fiaddl
jb
mov
repz
insl
mov
pop
aas
test
xchg
and
lea
jns
pop
jl
cmpsb
push
or
sub
stc
jno
sub
popa
stc
mov
xchg
int
xchg
mov
or
adc
inc
xor
cmp
push
xchg
push
fmulp
dec
incb
inc
js
mov
cmp
adc
pop
add
and
cmp
lahf
lcall
pop
movsl
xchg
movsl
xor
ss
adc
xor
les
cmp
dec
cld
roll
repnz
cmpsl
push
adc
incl
pop
xor
inc
jge
mov
mov
test
subl
loopne
and
lods
mov
jle
les
or
push
adc
and
shll
sbb
mov
pop
shrb
mov
insl
jle
mov
fstpt
mov
sbb
jbe
inc
clc
hlt
ljmp
outsb
leave
push
mov
mov
push
loopne
xchg
mov
xor
mov
adc
stos
mov
cmpsb
cltd
pushf
add
mov
jns
aad
fsubrs
nop
js
or
cmp
adc
xor
stc
pop
mov
insb
dec
ret
xchg
push
stos
nop
sbb
pop
adc
push
xchg
rcl
and
pop
xor
aaa
mov
mov
jbe
sahf
lcall
dec
inc
mov
adc
cmpb
mov
sbb
mov
stc
adc
mov
pop
js
rorl
mov
inc
and
jge
pop
xchg
pop
jp
mov
or
xchg
lods
mov
or
ror
pushf
add
cs
or
push
cmp
mov
test
iret
int
addr16
mov
sub
inc
push
cmp
fisubl
rclb
fninit
jne
in
arpl
nop
jp
mulb
push
js
pop
shll
out
jg
popf
fnstsw
repz
or
js
leave
popf
push
dec
mov
or
mov
leave
fildll
inc
lret
push
mov
cmpsb
call
fsubrs
out
fidivrl
fisttpl
pop
xor
pusha
jg
movsb
in
std
or
test
mov
inc
lods
cli
mov
xchg
xor
adc
xor
mov
mov
out
ret
sbb
jl
add
lock
iret
push
push
fmul
adc
cmp
and
arpl
xchg
scas
fdivp
cmp
mov
imulb
pop
cld
mov
or
nop
push
jnp
push
test
add
jp
dec
cmp
fsubp
sbb
or
cmp
loope
sub
adcb
jl
hlt
push
add
push
push
lret
ljmp
scas
cld
inc
jg
or
stos
ljmp
cmp
mov
lods
inc
ja
cmpl
mov
mov
std
and
lret
cmp
add
pop
outsb
pushf
jmp
sub
lods
pop
jne
dec
xchg
mov
dec
mov
test
or
jge
leave
mov
inc
jge
cmp
inc
and
das
not
pop
in
pop
cmp
sbb
push
jl
push
mov
and
push
ret
jbe
les
lods
jecxz
ja
mov
inc
push
sbb
jae
mov
adc
xchg
and
fisttpl
lret
aad
jo
and
inc
loopne
test
sbb
xorb
lcall
in
in
push
xchg
adc
push
jl
sub
in
daa
popf
sbb
pop
loope
mov
fwait
lds
add
fwait
lock
out
mov
bound
fmull
mov
jnp
bound
ret
aam
mov
sti
push
mov
inc
lahf
sahf
dec
out
hlt
decb
push
add
orb
imul
pop
mov
stos
and
mov
int
mov
into
jb
cmpsb
mov
ficoms
push
and
mov
sbb
jle
sbb
mov
or
dec
xor
fadd
movsl
dec
mov
in
lret
add
inc
ficomps
adc
subl
cmc
fiadds
sub
cmp
dec
iret
inc
or
cmc
dec
mov
dec
rorl
ja
inc
xor
inc
and
scas
push
repz
in
ret
or
sahf
js
jne
andb
cmp
sahf
pop
mov
std
fstpt
nop
adc
mov
sahf
clc
mov
xor
push
mov
jmp
dec
mov
les
int3
push
bound
stos
cld
inc
dec
lret
jmp
insb
lret
movsl
in
mov
test
xor
push
outsl
out
cmp
je
adc
loop
lea
and
out
lods
dec
call
aam
lock
jge
cmp
add
jb
xor
stos
cmpl
les
push
je
jle
cmp
push
jecxz
outsl
pop
sub
cmp
push
sbbl
xor
pop
sub
into
sub
jmp
ja
mov
dec
lcall
mov
inc
cmpsb
fwait
ljmp
push
jle
mov
lahf
mov
sub
inc
xlat
xor
rorl
cmpsb
mov
insl
adc
inc
movsl
leave
in
inc
xchg
mov
mov
jae
and
xchg
ror
into
jo
xchg
imul
mov
sbb
fimull
in
adc
loope
adc
fimull
rorb
push
sti
push
mov
mov
out
loope
jle
sbb
lret
fisubs
out
out
je
sub
jbe
ret
rorb
dec
out
sub
addb
sbbl
cmp
insb
int
outsl
dec
push
sbb
mov
ja
cmpsb
cltd
in
xchg
mov
cmp
xorb
cltd
mov
int3
sbb
inc
mov
jg
popf
mov
inc
out
movl
cmpsl
add
int3
shrb
and
in
mov
xchg
fnstcw
inc
adc
addb
bswap
pop
out
or
test
sub
ds
mov
ss
push
cmc
shl
adc
cwtl
into
xchg
fdivl
mov
or
js
out
pop
loop
and
lods
and
mov
popf
xor
loope
sahf
fiadds
mov
dec
and
or
sbb
iret
and
jne
xchg
lret
aad
push
sbb
mov
test
jl
cli
adc
adc
fstps
mov
cmp
repz
int3
orl
stos
aaa
add
lret
jb
inc
repz
and
test
jae
mov
or
xchg
sbb
repz
enter
ss
cmp
add
sub
int
movhps
xchg
mov
sbb
sub
rolb
mov
adc
fsubrs
pop
in
je
lea
loope
mov
or
xchg
cmp
mov
mov
xorb
inc
enter
sahf
call
stos
inc
imul
mov
jns
cmp
rorl
fdivrl
jmp
jae
stos
lahf
mov
or
sub
ljmp
jae
inc
fiaddl
pusha
adc
add
jl
fstp
movsb
dec
jp
push
and
xchg
xchg
and
add
cmp
push
pop
add
mov
cmpsb
mov
test
push
pop
inc
sbb
enter
xchg
shl
call
sbb
xchg
mov
cs
cli
stc
xor
aaa
pop
inc
test
jl
cs
out
movntps
inc
inc
cld
test
int
stc
adc
xor
jne
enter
leave
inc
insb
lds
inc
adc
sbb
push
loopne
js
loope
scas
icebp
lods
sbb
ds
inc
addb
es
mov
data16
rol
xor
out
push
in
sarl
aad
lret
mov
inc
xchg
lea
jp
imul
mov
dec
sti
dec
data16
mov
or
adc
jo
sub
mov
push
stos
xor
fstpt
or
mov
push
xchg
jno
push
cmp
stos
sbb
add
or
loop
sahf
repz
or
or
dec
pop
stos
lcall
and
mov
mov
jmp
jmp
fmuls
shl
enter
and
mov
mov
outsb
inc
fiaddl
pop
test
push
and
outsb
sbb
push
movsb
xchg
jge
ss
push
mov
mov
daa
and
dec
sbb
daa
imul
dec
mov
xchg
jecxz
mov
out
jb
pop
shrl
les
jnp
cmpsl
sti
shrb
outsl
adc
ja
jne
lcall
jne
adc
jno
scas
cld
rcrb
mov
aaa
js
cmp
gs
dec
push
mov
mov
mov
popa
cmp
xor
xorl
adc
sbb
sub
cld
cmp
mov
mov
imul
scas
push
inc
cmp
mov
cld
sbb
and
jmp
ret
sub
and
push
sbb
pop
pop
divb
mov
lret
cs
sub
push
lock
jge
icebp
popf
mov
mov
std
aad
jge
push
jmp
dec
loopne
sbb
or
call
inc
xchg
lods
cmp
mov
add
jns
mov
cmp
mov
xor
inc
and
or
ds
roll
dec
pushf
stos
mov
in
jno
and
push
mov
cld
ret
ficomps
cmp
icebp
ja
mov
dec
dec
lret
fadd
or
adc
loope
jg
in
lea
dec
popa
mov
mov
inc
mov
and
adc
inc
movnti
inc
sub
inc
out
pop
fisubrl
aas
fisttps
out
jmp
in
adc
loop
popf
into
daa
inc
xchg
aad
and
mov
out
nop
mov
cmpsb
or
aam
popa
inc
mov
pop
xchg
out
rorb
shlb
push
jg
clc
mov
ja
jecxz
iret
fwait
adc
sbb
xor
add
inc
jb
icebp
and
add
lret
and
sahf
adc
mov
loope
or
test
xchg
int
shl
fwait
cmpsb
adc
or
shll
insl
xchg
inc
in
js
push
pop
xchg
pop
aaa
pop
pop
iret
adc
mov
jle
and
xchg
jp
arpl
mov
mov
out
out
mov
roll
cld
xchg
mov
test
ja
in
xchg
inc
prefetch
push
fisttpll
lods
jo
aaa
jno
adc
addr16
mov
addr16
xchg
push
dec
pop
jns
cltd
dec
mov
inc
cmp
mov
ficoml
rol
out
mov
fcmove
xor
cmpsb
aaa
mov
daa
inc
adc
movsl
cmp
mov
xchg
mov
pop
jg
xchg
mov
stc
mov
xor
mov
std
mov
inc
adc
xchg
into
mov
and
mov
push
push
xchg
lahf
jno
inc
adc
mov
gs
shrl
cmc
data16
inc
int
push
cmp
shlb
xor
popl
mov
notl
jns
ds
mov
sub
int3
in
push
rolb
mov
cmp
mov
jg
in
stc
mov
es
xor
out
incb
adc
inc
jbe
add
dec
jo
adc
inc
adc
arpl
mov
pushf
test
int
mov
inc
mov
or
or
ret
bound
or
popa
cmpsb
sbb
push
inc
jno
and
fcmovb
add
cmpsl
xor
push
cmpl
mov
push
rorl
push
ja
sahf
insl
xor
inc
push
pop
in
xchg
mov
or
or
add
outsb
or
mov
sub
or
imul
mov
cld
mov
and
loop
nop
es
lods
rcrl
ss
mov
sahf
es
pop
add
ds
and
out
adc
fsubp
mov
dec
and
adc
test
and
cmp
xorb
hlt
mov
jecxz
test
int
mov
cmp
insl
adc
jge
pop
insb
jno
shl
int3
and
and
mov
mov
out
aad
imul
cs
mov
unpcklps
push
fwait
sbb
in
cmp
inc
mov
cli
lret
popf
inc
das
lea
das
cltd
mov
sahf
xchg
pop
sub
js
mov
pop
pushf
mov
nop
mov
add
sub
sbb
xor
fistpl
dec
ja
nop
cmp
nop
fucom
lret
push
dec
xchg
cmpsb
int3
aad
xchg
mov
push
stos
ss
pop
push
ret
xchg
out
rcrl
and
jne
nop
push
push
add
imul
push
inc
dec
js
add
mov
xchg
aad
fwait
loopne
adc
jb
in
sbb
cwtl
fidivl
test
sub
ret
nop
adc
loop
dec
arpl
sarl
mov
pop
sub
or
fwait
andl
pop
andl
or
faddl
sub
xor
or
mov
jl
in
ficompl
or
cmp
lea
xchg
pop
mov
roll
mov
jecxz
movsl
or
mov
xchg
fmuls
pusha
xchg
sbb
pop
xor
fildl
loope
test
movl
push
or
add
out
pop
and
iret
inc
jg
cmpsl
mov
jno
out
outsb
or
testl
fs
clc
xor
inc
xchg
sub
out
mov
mov
mov
rorl
xchg
and
fmulp
jo
pop
loope
movsl
or
rorb
clc
xchg
jb
leave
scas
jle
nop
test
cmpsb
sub
jge
adc
fnstenv
ss
cmp
lcall
cmp
jbe
outsb
cmp
stos
and
nop
mov
cmp
push
xor
scas
push
int
test
mov
xorl
xor
ds
mov
adc
movsb
dec
push
ds
int
xor
addr16
inc
adc
divb
js
mov
stos
sbb
jle
cs
push
dec
xlat
outsl
sbb
mov
xchg
cmpsl
out
dec
lock
stos
mov
adc
inc
push
in
dec
xor
jns
add
add
or
loop
jae
mov
jle
dec
cltd
into
adc
sbb
cs
cmp
ds
dec
mov
or
or
mov
sbb
xor
inc
fcmovnu
aaa
add
add
cmp
inc
iret
bound
and
and
xchg
psllw
and
ret
std
inc
dec
mov
xchg
dec
fmuls
lcall
xchg
mov
or
xor
push
mov
inc
mov
dec
sub
push
and
stc
popa
rcll
mov
jno
cmc
cmpsb
imul
mov
daa
popf
cmp
aas
xchg
out
push
xchg
cs
jns
and
stc
and
or
lds
pop
int
inc
inc
mov
addr16
into
add
shll
cmpsb
lcall
push
subl
push
popf
cmp
dec
xor
jmp
jge
jb
xor
sub
movsl
xor
sbb
pop
lods
xchg
mov
xor
xor
jge
xor
test
jns
lods
pop
and
pop
xor
les
int
imul
and
push
jnp
pop
inc
test
push
test
xchg
lcall
cmpb
outsl
das
ljmp
mov
arpl
dec
lock
mov
aaa
rolb
jp
cmpsl
pop
dec
testl
xchg
mov
das
test
int
adc
dec
dec
sub
inc
cld
mov
inc
scas
sbb
rcrb
push
sbb
sbb
xchg
or
movsl
enter
mov
test
lock
xor
xchg
and
clc
or
or
jmp
nop
les
sti
test
xchg
psubw
dec
xchg
pusha
shr
mov
adcb
xchg
fdivrs
sbb
xchg
out
shl
xchg
bound
dec
dec
loope
jp
popf
sbb
push
or
leave
icebp
mov
jb
test
icebp
jle
ror
cmovae
dec
adc
push
xchg
lret
jp
ss
leave
xchg
mov
inc
push
inc
xlat
mov
int
sub
dec
lcall
jno
bound
cmp
frstor
jle
dec
movb
push
std
shrl
push
dec
sarb
mov
xchg
cmp
mov
test
rol
dec
mov
mov
out
jle
dec
inc
or
xchg
add
add
cmp
shl
insl
in
fdivrs
out
out
icebp
lret
mov
xor
mov
out
mov
add
mov
lods
pop
test
daa
dec
dec
mov
test
mov
ret
mov
adc
jb
xor
mov
mov
aam
mov
sub
push
scas
push
test
add
sarl
mov
add
aad
stos
clc
test
push
mov
int3
xor
add
mov
pop
sar
mov
int
in
leave
or
push
xor
clc
xor
pop
jmp
adc
or
add
mov
lret
mov
bound
dec
push
hlt
fwait
imul
xor
lods
bound
xchg
insb
cltd
dec
call
xchg
insb
mov
fs
sub
sbbl
mov
lods
push
mov
fimuls
rcrl
repz
cltd
pop
test
mov
push
mov
sub
mov
or
and
jle
push
ds
das
jb
cld
scas
xor
adc
roll
ds
lret
ja
adc
sub
in
aaa
sbb
cld
ret
dec
out
pop
fsts
outsb
roll
js
mov
pop
aas
add
xchg
dec
jle
int
xchg
pushl
ja
jae
adc
and
fld1
jp
test
mov
fsts
divb
xchg
pop
dec
popf
adc
mov
cmp
sub
sub
enter
xchg
xchg
xchg
jnp
aaa
into
sub
mov
repnz
fs
or
pop
push
subb
push
mov
pop
leave
adc
mov
mov
inc
popf
xchg
inc
rcl
popa
cmp
shll
jns
mov
int
bound
into
and
push
sbb
xchg
fistl
sbb
inc
or
repnz
xor
decb
xchg
mov
outsl
outsb
add
cmc
rcr
add
inc
or
push
test
js
jle
adc
jp
or
and
inc
xchg
xor
stos
lds
cmc
ds
int3
push
adc
xor
inc
or
out
cmp
pop
lds
movsb
jp
xchg
mov
or
aas
repnz
push
mov
test
cmpsb
push
mov
in
or
cmp
outsb
cwtl
mov
dec
enter
in
fcomps
ds
push
push
jg
mov
xchg
jb
mov
lds
and
add
adc
add
and
loope
mov
sbb
pop
fcoms
sub
lret
popf
or
cld
jbe
add
xchg
movsl
sbb
nop
inc
mov
mov
test
mov
add
pop
pop
mov
mov
cmp
mov
fs
movsl
push
ja
jp
js
mov
mov
pop
xchg
and
and
lods
ficomps
cs
js
jecxz
cli
xchg
push
loope
popf
sti
and
test
cmp
mov
loope
mov
adc
orl
xchg
dec
push
push
insl
push
and
out
gs
jmpw
clc
dec
dec
inc
mov
mov
lock
and
inc
cmpsb
insl
pop
mov
pop
mov
leave
sub
mov
add
sahf
xchg
and
and
es
mov
sti
push
fldcw
lahf
adc
pop
mov
jo
add
add
ret
xor
mov
jecxz
jle
push
xchg
mov
adc
sysret
cmp
mov
xor
jle
dec
xchg
sbb
dec
push
js
or
test
mov
sahf
ffree
pop
fidivrs
rorb
xchg
jg
and
and
pop
sbb
cs
arpl
xor
leave
dec
lret
bound
sbb
adc
pop
fs
push
xor
out
xchg
mov
aaa
xor
or
adc
jnp
push
ret
loopne
loopne
jl
lods
xchg
push
xor
popf
dec
sbbl
repz
dec
jae
js
outsl
xlat
je
sbb
arpl
jge
mov
mov
in
mov
mov
das
pop
pop
adc
and
jmp
pop
mov
dec
adc
sub
enter
sarl
lcall
insl
jno
jbe
mov
or
mov
test
inc
mov
and
pop
mov
mov
cmpsl
pop
movsl
push
adc
lock
and
push
adc
jns
fcmovnbe
add
pop
push
loope
jg
push
mov
dec
outsb
inc
xchg
fdivs
cmp
inc
adc
and
jb
xchg
int
dec
cmp
in
fcomi
out
push
jmp
dec
dec
adc
sbb
xchg
xor
and
pop
jb
icebp
andb
inc
test
sbbb
fidivrs
xchg
add
stc
dec
or
stc
and
into
push
outsl
xor
rolb
mov
lods
push
jnp
rcrb
cld
mov
cmp
outsb
or
sub
lret
sbbb
out
dec
roll
mov
adc
outsb
or
add
fisubl
push
cld
mov
mov
or
jo
push
push
mov
into
movsb
inc
iret
adc
or
inc
leave
cltd
repz
adc
inc
pop
push
add
pop
pop
mov
push
mov
ljmp
lods
sbb
jae
xchg
mov
lcall
mov
lds
fidivl
xchg
mov
and
inc
repnz
popf
mov
fdivrs
dec
addb
and
stc
pop
mov
test
sti
xchg
xchg
pop
cmp
cltd
mov
movsb
lods
adcb
or
test
push
cltd
out
popl
in
dec
cmp
loope
jb
pop
push
jbe
cmp
xchg
xchg
dec
add
or
das
cli
cmpsl
jo
mov
fnstenv
push
adc
out
or
add
xchg
sarl
fimuls
push
mov
stos
idivb
cmc
cmp
cmc
iret
shl
mov
aas
pop
std
leave
cmpsb
and
rolb
xchg
sbb
cmpsb
inc
call
dec
sahf
sub
inc
sub
imul
or
push
jns
dec
loope
xchg
push
and
sbb
pop
adc
adc
push
popa
xor
push
or
je
les
fsubrl
adc
loope
gs
hlt
mov
sub
fmull
aaa
or
mov
mov
pop
dec
rorl
andb
fstpl
movl
roll
shl
in
fs
shlb
jmp
and
mov
mov
out
adc
dec
push
adc
mov
jle
and
pop
fsubrl
jns
rolb
cmpsl
lret
add
fmuls
mov
fidivs
cs
lods
ds
mov
dec
nop
mov
and
rcrb
and
push
dec
in
mov
loopne
out
mov
and
push
xchg
int
jmp
lcall
stos
mov
mov
int
inc
inc
sub
stos
push
xor
jnp
jecxz
mov
sub
popa
fistl
adc
shrd
sbb
xchg
addr16
add
inc
popf
cmp
outsb
xor
inc
xchg
xorb
pop
rclb
mov
mov
and
sbbb
xor
push
dec
inc
pop
aad
xchg
jl
fimull
adc
cmp
dec
repz
movsl
jle
stos
dec
sbb
fcomip
xchg
in
adc
je
fidivl
fldl
add
mov
stos
mov
inc
incb
dec
aaa
maxps
adc
out
icebp
dec
mov
push
loope
popf
clc
xchg
xchg
movsl
xchg
pop
shll
lods
push
sbb
int
mov
jecxz
xchg
in
mov
xchg
cmp
dec
xchg
inc
lods
js
xchg
add
or
ja
xor
out
adcb
fcmovne
in
adcb
mov
pop
mov
dec
ds
pop
and
movl
and
jb
xchg
stos
dec
sbb
adcb
addb
js
inc
pop
mov
std
xchg
cmp
fstpt
pop
dec
inc
outsl
push
cmpps
push
mov
dec
mov
jmp
cmp
pusha
stc
sbb
jns
out
add
insl
sarl
shll
mov
rcll
pop
xchg
push
flds
mov
jge
outsb
negb
in
daa
out
adc
and
decb
sbb
insl
push
push
xor
add
cltd
xchg
sub
fldcw
push
dec
push
imul
addr16
arpl
sbb
ret
jecxz
pop
ret
faddl
mov
xor
rorb
addr16
push
mov
scas
gs
push
jb
xor
xchg
dec
dec
sarb
push
adc
lcall
mov
push
insb
daa
test
xor
stos
repnz
adc
xchg
stc
xchg
xchg
ret
lock
fldln2
push
mov
dec
inc
add
stc
ljmp
pop
push
js
inc
mov
push
les
jns
leave
mov
fmul
ljmp
pop
push
int
into
test
push
cmp
mov
jmp
adc
jb
inc
mov
fisttps
inc
popf
push
cmp
outsl
pop
in
test
push
negb
lcall
dec
dec
and
sbb
push
pop
jecxz
daa
shrb
adc
sbbb
mov
imul
pop
lods
repnz
xchg
xorb
or
xor
fistpl
add
mov
popf
inc
aam
popf
jo
xchg
ds
lret
sti
clc
dec
cli
rorl
dec
scas
jle
jg
cli
pop
dec
subl
imul
dec
gs
xlat
test
lcall
mov
jmp
mov
lret
adcl
roll
and
rcr
rorl
adc
push
and
out
addr16
scas
lock
adc
inc
pop
mov
mov
jl
adc
dec
stos
insb
push
call
imul
test
push
pop
jo
movsl
out
hlt
lcall
rorb
cli
add
mov
push
xchg
lea
jge
pusha
movsl
jg
insl
pop
xchg
cli
dec
push
adc
cld
les
inc
popf
sub
push
out
sbb
loop
andl
lods
sbb
xor
and
and
in
bound
push
adc
fisubl
das
xchg
scas
mov
push
das
shll
mov
xor
and
das
flds
inc
xor
inc
loope
sbb
push
fnstcw
inc
add
js
mov
xor
pop
jmp
and
mov
xchg
call
inc
mov
adc
pop
lret
fwait
pop
push
adc
adc
sub
push
adc
inc
hlt
and
cmp
test
mov
sbb
adc
scas
xor
push
xor
jl
xchg
ss
dec
cmpb
arpl
pop
xchg
push
push
xchg
and
xchg
adc
ljmp
imulb
pop
in
jle
fiaddl
test
jb
push
call
imul
pop
dec
cs
ret
sbb
mov
cmp
pop
mov
cltd
je
xchg
and
jne
lret
movsb
lods
neg
aas
jp
sub
xchg
jl
int
pusha
popf
mov
popf
cld
dec
xchg
faddl
movsl
stos
and
repz
sti
mov
push
lcall
xchg
loopne
jb
mov
les
popf
xlat
inc
scas
sbb
pop
or
and
insb
mov
xchg
adc
cmpsl
inc
jg
xor
out
push
mov
push
insl
push
push
xor
adc
fidivs
inc
push
cmp
lahf
iret
inc
mov
pop
mov
sbb
pop
sub
mov
xor
inc
call
cli
add
mov
out
por
das
scas
xchg
xchg
outsb
mov
push
push
decb
lahf
dec
push
fmull
mov
sbb
xchg
scas
sbb
data16
dec
aam
jmp
mov
shr
out
cld
out
and
push
cld
nop
dec
cmp
push
mov
mov
shlb
adc
mov
sbb
mov
jle
cmp
adc
adc
das
jp
jle
sbb
push
push
xlat
sbb
dec
pop
push
mov
inc
pmaxsw
leave
cmp
push
cmpsb
sbb
cmpb
imul
stc
sbb
cld
gs
dec
movsl
xor
imul
ljmp
in
rep
xchg
mov
cmp
pop
pop
xchg
lret
mov
loope
idivb
ja
test
cmpsb
inc
sbb
and
push
lods
sbb
int
push
in
sahf
push
add
in
mov
out
dec
or
test
aam
pop
fistl
fcoml
ffree
pop
mov
jo
mov
cmpsl
sub
std
push
mov
ret
roll
sahf
xor
gs
mov
add
mov
mov
outsl
mov
xor
bound
inc
xchg
adc
fiadds
inc
fisttps
repnz
mov
dec
jecxz
inc
push
xchg
int
push
xor
imulb
xchg
std
inc
sub
mov
ret
inc
mov
jmp
scas
stos
inc
shll
mov
cld
mov
outsb
fadds
or
cmp
inc
dec
xchg
out
add
out
cmp
loopne
call
cmp
es
insl
cwtl
inc
cmp
push
xor
movl
xor
adc
push
test
xchg
pop
movsb
add
inc
fwait
xor
mov
mov
shll
les
in
add
xchg
jmp
pop
gs
sbb
icebp
jg
xchg
xor
dec
xchg
icebp
ret
jg
and
jmp
ds
enter
add
xor
fcmovbe
aam
pop
jl
add
jmp
xchg
inc
std
xor
xchg
shlb
lahf
pusha
or
and
push
clc
mov
fs
pop
cs
push
stc
or
rorb
jno
ret
sbb
xchg
cmp
insb
rcll
mov
push
push
pop
ror
rclb
or
cmp
lea
jo
jae
mov
nop
or
mov
push
add
mov
test
mov
aam
ret
scas
jg
arpl
jg
inc
xchg
fwait
pop
gs
ds
push
mov
stos
pop
lods
lods
jecxz
lds
into
and
add
and
and
or
popa
cli
cmp
and
and
js
mov
cli
rorl
inc
add
call
sub
push
pop
mov
imul
push
xchg
cld
cmpsb
popl
jne
pop
movsb
aaa
cmp
push
inc
clc
aad
pop
daa
dec
aas
xchg
dec
jl
adc
enter
inc
push
stos
adc
das
xchg
imul
call
cmp
pop
xchg
sbb
in
pop
sbb
push
or
jecxz
inc
xor
movsb
int3
lods
push
adc
icebp
xor
push
fdivrl
mov
orb
test
pop
test
jge
stos
mov
mov
sbb
scas
xor
rolb
ret
lds
xor
jno
xchg
inc
int3
and
adc
jp
fcomps
dec
aas
mov
push
mov
shl
push
mov
cmp
jge
jp
repnz
pop
movsl
pop
into
mov
outsl
mov
sbbl
xor
lcall
aas
int3
leave
notb
xor
loopne
stos
jg
or
lods
mov
mov
xchg
push
lret
cmp
fsub
xchg
adc
pusha
adc
mov
ds
mov
lods
shlb
cmpsl
out
call
mov
dec
push
pop
cmc
scas
int3
mov
or
insl
repnz
popf
lods
insb
loope
loopne
insl
adc
jns
mov
jecxz
mov
les
mov
push
mov
mov
jnp
ret
push
cmpsb
loop
and
jp
pop
or
jnp
dec
lods
xchg
mov
adc
loope
sub
cmp
js
push
pop
les
add
xchg
mov
popl
inc
js
pop
xor
jge
xlat
mov
cmp
sbb
loope
mull
mov
js
nop
out
pop
mov
addr16
pop
cmpsb
xor
cmp
rol
clc
mov
fcmovnu
scas
mov
out
test
add
mov
lds
push
lds
shlb
cmp
pop
mov
xchg
pusha
sbb
xor
inc
insb
ss
mov
fcompl
adc
ds
mov
fdivl
xchg
adc
cmpsb
repnz
adc
xchg
mov
mov
xorl
mov
repnz
or
dec
cmp
jecxz
test
mov
mov
pop
push
pop
xor
or
push
push
inc
cs
cmp
xor
loop
test
sbb
orl
in
mov
pop
jo
and
scas
fmull
mov
push
test
cs
dec
fwait
jg
xorl
ljmp
fbld
fadds
pushf
into
sub
add
sub
and
in
shll
pop
push
in
adc
cmp
lcall
hlt
jmp
jnp
add
mov
jp
jbe
aad
inc
push
push
lcall
stc
fwait
stos
mov
jo
out
jns
mov
vminpd
pop
or
inc
push
mov
adc
leave
or
ljmp
in
xorl
stos
movsb
jg
fsubrs
repz
ficoml
xchg
fcoml
cmp
out
and
sub
rcll
pop
inc
jg
xor
xchg
dec
jmp
addl
mov
mov
inc
push
jo
adc
add
leave
cltd
lock
mov
and
ljmp
rcrl
lds
sbbb
pop
lods
mov
adcl
sub
jbe
orl
cmc
pop
dec
nop
inc
shr
and
and
out
mov
add
pop
cmp
mov
mov
inc
popf
in
fcomps
ljmp
pop
out
and
lods
pop
xor
std
push
shll
or
mov
pop
pop
or
inc
push
and
pop
dec
sbb
leave
dec
loopne
outsb
popf
int
cmc
lods
jno
ss
sub
sti
ljmp
sub
test
in
inc
insb
push
ja
sbb
mov
lds
dec
mov
add
lods
outsb
mov
cs
inc
les
jge
jecxz
xchg
push
stc
mov
lcall
lea
jecxz
pop
lea
cld
pop
movsl
cmp
call
adc
fcoml
push
test
sub
mov
dec
outsl
leave
push
mov
fcoml
push
push
imul
jle
ret
inc
jns
xchg
js
mov
pop
xchg
repz
push
orb
jo,pt
ret
adc
xchg
xorb
sub
ret
cmp
shr
ss
int
adc
dec
ljmp
xlat
or
stos
pop
dec
add
cmp
sbb
xchg
cmp
and
aas
fcoml
shlb
sbb
ljmp
or
mov
mov
jge
xor
xor
lods
xor
shll
mov
mov
push
dec
fmul
mov
jno
mov
outsl
sub
add
xor
sti
fnstsw
sub
mov
jbe
insl
into
dec
iret
push
inc
out
push
add
jg
das
insb
ret
mov
shll
loope
jg
sbb
inc
sub
lock
sbb
adc
jo
mov
xor
lret
xchg
addr16
lods
jne
adc
xorb
sbb
and
outsl
popa
lods
push
ss
incb
and
ljmp
fldt
or
rorl
shlb
imul
dec
in
mov
sub
nop
jne
scas
out
mov
fisubrl
popl
in
test
xchg
js
inc
add
add
ret
inc
jecxz
xchg
mov
out
sahf
dec
jle
sbb
rcll
inc
lds
dec
adc
pop
add
ja
push
sbb
adc
inc
in
pop
stos
iret
lods
cmp
fstl
pop
sbb
rolb
mov
adc
push
scas
cltd
cmp
and
shr
dec
mov
cmp
mov
lods
inc
jno
test
and
inc
sbb
push
and
int3
cmp
ffree
xor
xor
inc
fs
xlat
test
jl
inc
push
inc
inc
std
test
add
ret
stos
mov
mov
xchg
cwtl
mov
std
mov
lea
shlb
nop
mov
jecxz
push
push
jbe
pushf
and
sahf
out
out
mov
ljmp
popf
xchg
cmp
movsl
adc
fcoml
in
daa
mov
adc
xor
sbb
xor
or
cmp
cli
xor
enter
xchg
sbb
mov
js
sbb
xor
rcrb
xchg
jp
aaa
jnp
and
lds
or
dec
jno
out
dec
adc
xchg
mov
dec
repnz
xor
jmp
hlt
insb
jo
call
push
addr16
mov
dec
idivb
js
leave
push
jp
jmp
divl
xor
push
and
addr16
int3
or
cld
push
shlb
xor
pop
jp
inc
popf
push
pop
stos
lods
iret
jae
mov
andb
push
mov
shrl
mov
fcompl
xchg
movsl
loope
push
lea
jp
insl
in
cmp
adc
push
jle
add
inc
inc
fisubs
mov
adc
xor
outsl
arpl
sub
xchg
xor
push
cmc
xchg
mov
rcr
push
inc
jno
test
cli
mov
push
sub
fisttpll
push
xor
movsl
add
aas
mov
jbe,pn
cmc
adc
fidivs
je
inc
mov
cmp
add
movsb
iret
ds
shlb
dec
cmpsl
movsl
lods
hlt
dec
in
jb
dec
add
cmp
roll
jno
cmp
mov
xchg
fnsave
inc
dec
pop
test
mov
out
push
cmp
mov
push
fsubl
cltd
pop
rorl
sbb
mov
cmpsl
pop
lldt
es
xor
stc
imulb
or
daa
xchg
sti
int
sbb
xor
cld
jns
mov
xchg
in
inc
xchg
out
hlt
ret
push
xchg
jo
loop
dec
pop
xchg
notb
pop
lahf
sti
in
pop
nop
aas
popf
ds
das
adc
je
sbb
mov
cwtl
repnz
dec
xchg
pusha
clc
push
mov
popa
xchg
mov
sbb
jno
mov
inc
mov
lcall
int
test
in
add
xor
or
pop
sub
fwait
mov
push
dec
leave
imul
and
pop
xor
mov
sbb
cmp
push
xchg
notb
inc
mov
add
adc
jne
icebp
add
sahf
jp
inc
add
andb
and
movsl
mov
sub
lock
push
xor
and
sbb
subb
pop
dec
sbb
pop
dec
les
pop
sub
xchg
std
push
scas
jmp
xor
mov
and
fidivl
and
pop
addr16
aaa
pop
jl
inc
mov
ss
out
stc
in
adc
aad
or
pop
lods
jb
or
sub
in
ss
out
movsb
cmpsb
mov
fwait
ret
jb
and
movsb
movsb
push
jp
cs
dec
test
mov
or
cmp
popf
jno
mov
out
jno
cmp
pop
xor
pop
enter
jbe
dec
sub
mov
loope
push
sarl
scas
iret
inc
les
push
sbb
inc
pop
and
pop
xor
lds
push
and
fdivl
adc
lea
xchg
lds
fcomi
pop
ds
icebp
and
fcomip
add
enter
adc
loope
movsb
sub
mov
dec
mov
pop
mov
sarl
push
adcb
pop
cmc
or
clc
cmp
push
dec
jmp
add
lea
clc
int
adc
fcmovu
outsl
js
nop
push
cmc
cmp
adc
pop
pusha
dec
scas
adc
jno
cmp
pop
sbb
xacquire
fdivrp
sub
inc
xor
outsl
jg
and
inc
dec
inc
and
jge
rcr
in
int3
inc
and
dec
jnp
xchg
subb
loopne
stc
xchg
jb
ss
adc
cwtl
popa
push
sub
mov
test
js
pop
daa
pop
dec
ret
cs
int
mov
and
mov
dec
jge
xlat
sub
add
pop
fidivrs
xchg
hlt
mov
sqrtps
xchg
pop
out
fistpll
push
pop
aas
scas
stos
inc
cwtl
dec
fnstsw
sub
xchg
imul
xchg
cmc
lret
dec
push
cld
adc
mov
xchg
stos
adc
sub
mov
fsubr
mov
xchg
add
push
in
inc
sbbb
cmp
sub
pop
xor
xor
cmp
dec
shr
jb
mov
fnstcw
mov
pop
icebp
rolb
inc
adc
ret
int
call
push
sahf
adc
dec
into
cmp
lea
jb
jb
adc
into
outsl
adc
xchg
adc
mov
jle
icebp
rclb
inc
jo
imul
push
inc
add
and
enter
mov
ror
rcl
mov
dec
adc
lock
pop
rol
leave
xchg
add
int3
xchg
repz
jle
in
rorl
mov
or
adc
outsb
lock
fistpll
jl
pop
mov
ds
push
fisttpll
out
jle
jge
icebp
jb
shrl
icebp
sbbl
dec
or
test
mov
les
stos
shl
mov
nop
xchg
dec
outsb
mov
cs
xor
roll
mov
nop
and
mov
mov
jmp
nop
in
dec
xchg
mov
xchg
inc
into
sub
mov
nop
imul
dec
mov
mov
push
nop
repnz
mov
shlb
cmp
mov
or
mov
nop
dec
dec
dec
mov
xchg
inc
into
dec
cmp
dec
enter
das
mov
in
cmp
mov
nop
repz
sarb
mov
inc
movsl
mov
cmp
dec
ret
rcll
dec
imul
dec
mov
push
push
rcl
inc
dec
mov
sub
ret
cmp
push
sub
in
sub
test
sarl
lock
nop
xor
mov
dec
push
imul
xchg
xchg
push
mov
mov
adc
inc
call
push
into
ret
lea
mov
mov
int3
cmp
mov
nop
sub
dec
pop
mov
mov
mov
test
imul
jae
cmpsb
mov
cmp
mov
nop
sub
mov
int3
lods
cmp
mov
push
out
mov
add
mov
mov
insl
cmp
jae
jo
push
dec
icebp
xchg
rol
push
mov
inc
test
jmp
ret
in
mov
nop
scas
dec
xchg
mov
inc
push
mov
nop
outsl
cs
or
dec
inc
outsb
mov
nop
jo
mov
xchg
shll
inc
push
cmp
mov
nop
test
mov
mov
nop
adc
dec
inc
fcmovb
inc
mov
mov
nop
test
test
mov
in
mov
nop
xchg
dec
push
mov
addr16
lret
nop
test
leave
mov
in
lods
cmp
dec
lock
addr16
mov
nop
mov
mov
insb
into
xchg
out
cmp
xchg
xchg
ret
imul
nop
mov
daa
inc
push
inc
mov
ret
ret
scas
es
roll
mov
jo
inc
mov
and
mov
mov
lret
inc
cmp
mov
nop
xchg
dec
mov
mov
into
ret
pop
cmp
inc
cwtl
mov
nop
ss
test
mov
imul
mov
mov
adc
cwtl
shll
bound
mov
cmp
xchg
stos
loop
es
adc
inc
or
jo
rorl
test
cmp
sub
test
mov
dec
cmp
mov
nop
movsl
dec
test
mov
mov
cmp
insl
nop
mov
mov
lret
cmp
mov
nop
xchg
leave
push
mov
mov
adc
push
mov
nop
mov
mov
dec
stos
cmp
mov
nop
and
rcll
adc
cs
nop
sub
ud1
inc
cmp
adc
push
nop
mov
enter
ret
cmp
mov
jl
sahf
scas
sbbl
dec
lea
call
lcall
lods
pop
mov
ret
cmpsb
iret
stc
mov
mov
mov
mov
jg
xor
shlb
ss
pop
jns
dec
repz
repnz
fcompl
out
pop
scas
push
cmpsb
push
ret
jmp
mov
nop
out
ljmp
mov
jp
incl
mov
or
jbe
push
mov
lods
lret
dec
iret
aas
out
iret
mov
les
dec
sub
loop
pop
insw
sbb
pop
jle
ret
jmp
fs
jae
cmp
addb
dec
pop
inc
sub
subl
adc
std
inc
mov
cmpsb
lahf
sti
gs
lods
xor
imul
enter
mov
outsb
fildll
sub
loope
cmp
mov
ja
std
push
scas
enter
rorb
aad
xor
es
and
pop
xor
scas
icebp
ret
fisttps
push
in
mov
nop
mov
in
mov
out
mov
pop
lahf
mov
scas
push
pop
scas
lds
pop
test
pop
outsl
aas
bound
insb
or
jmp
test
xchg
dec
mov
pop
mov
in
mov
in
mov
push
lods
jg
jl
js
mov
cli
and
xchg
xchg
sbb
lods
push
stos
lock
xor
jmp
out
jno
stos
out
iret
dec
mov
dec
pop
mov
mov
mov
out
cmpsb
imul
push
lods
lds
std
push
inc
mov
out
das
rorl
push
ds
xchg
dec
inc
pushf
adc
adc
jo
xor
adc
jo
jl
jns
pop
aad
movsl
sub
nop
jo
lods
mov
imul
mov
mov
insb
push
sbbl
popf
pushf
fwait
out
push
and
icebp
cltd
fcoml
adc
das
lock
int3
stos
jp,pn
pop
lods
xchg
and
lock
inc
or
mov
xor
pusha
add
lods
xlat
xchg
push
nop
lock
jbe
mov
int
add
clc
adc
mov
push
xchg
fnstsw
adc
imul
xchg
bound
cwtl
cmp
clc
xor
mov
or
int3
or
addr16
bound
xor
or
mov
in
mov
cmp
stos
lahf
pop
xchg
pop
insl
sub
iret
insl
sbb
jmp
dec
mov
data16
nop
push
inc
nop
and
mov
sahf
push
nop
popf
xchg
add
test
ds
imul
cmp
xchg
pop
sub
lods
int3
sub
enter
xor
lods
sub
mov
push
cmp
cmp
outsl
mov
cs
xchg
xchg
jle
jae
cmp
sbb
mov
movsb
insb
cmp
aad
push
mov
adc
in
push
jmp
xor
mov
inc
xchg
sub
test
nop
push
jecxz
sarl
aaa
xchg
int
pop
insb
cs
ds
faddp
sbb
mov
pop
mov
popf
mov
fstl
lods
adc
lcall
adc
mov
sub
jns
sbb
mov
shrb
aas
incl
fs
ss
ds
jl
ret
leave
pop
aad
cmp
imul
ljmp
dec
lock
mov
mov
push
jle
js
dec
adc
nop
jno
push
icebp
mov
aas
jl
sbbb
mov
dec
pop
es
sbb
push
imul
insb
addr16
mov
dec
adc
mov
enter
mov
cmc
lcall
or
or
inc
int3
mov
shrl
sbb
dec
lcall
adc
push
shlb
and
int3
push
adc
or
nop
popa
scas
jmp
mov
decb
or
cmpsb
xchg
dec
inc
add
rorl
in
add
sahf
dec
mov
lods
jb
pushf
jg
cmp
scas
and
js
dec
mov
cmc
mov
mov
cmp
push
out
adc
push
or
push
mov
or
mov
in
orl
dec
jnp
inc
pop
mov
push
insb
insb
push
leave
add
in
pushf
dec
cmp
mov
mov
fmul
out
mov
dec
orl
inc
nop
outsb
stos
push
push
out
rcl
movsl
inc
in
loop
aas
jo
inc
sbb
adc
jge
mov
push
mov
iret
sub
ljmp
stc
fsubrs
test
iret
jae
or
or
mov
jle
leave
push
dec
lds
rol
jnp
xor
xchg
or
xor
mov
mov
and
test
mov
scas
mov
ret
sahf
es
decl
rdmsr
testb
push
in
out
or
dec
jmp
es
rcll
mov
stos
rorb
mov
mov
addb
mov
xchg
popa
and
inc
push
mov
xor
jno
dec
and
xor
mov
mov
pop
test
cmpsl
mov
sub
add
in
mov
popa
incb
loop
nop
ror
jmp
push
xchg
mov
cmp
insb
jg,pt
mov
sar
cmp
inc
sub
mov
sub
xchg
imul
adc
sbb
shrb
mov
leave
sub
cmpsl
ret
dec
lods
cmp
inc
loop
test
mov
cmp
dec
xchg
std
xor
in
mov
lods
sub
cmc
insl
shll
mov
dec
imul
push
cltd
mov
fidivrs
push
and
jl
mov
int
lods
adc
sub
mov
mov
jp
pop
push
mov
rorb
add
shlb
dec
int3
jge
mov
stos
dec
jbe
mov
pop
ss
sub
mov
add
lret
inc
shlb
mov
and
jge
in
inc
jge
dec
dec
arpl
mov
pop
mov
sbb
xor
sub
mov
pop
cld
stos
in
push
cmp
dec
push
xor
jno
adc
push
ficoms
loope
and
ds
push
sbb
mov
cmp
xchg
adc
mov
push
mov
arpl
cmp
xor
xor
popf
adc
mov
cs
iret
es
xor
fimull
pusha
nop
iret
int
dec
xchg
jo
push
call
push
push
in
push
movsl
jg
ds
dec
pop
in
mov
into
mov
mov
push
rol
int3
mov
cwtl
nop
nop
jo
scas
cld
out
push
frstor
stos
nop
cmpl
cmpsb
mov
cmc
repz
jo
xor
movsl
je
int3
jnp
nop
pop
mov
cltd
xchg
hlt
sub
rclb
inc
movsl
inc
loope
adc
mov
sbb
inc
mov
xor
dec
cs
jae
sub
cmpb
stc
ret
adc
cltd
mov
nop
inc
push
cs
enter
xchg
xchg
mov
nop
mov
in
pop
es
lods
nop
mov
cmp
mov
mov
stos
jge
adc
stos
mov
cmpsl
push
and
lahf
pop
sahf
add
or
jns
icebp
mov
mov
leave
fisubrs
popa
mov
sub
daa
mov
stos
test
fnsave
subl
pop
cmpsb
add
lods
les
mov
or
imul
repz
xchg
xor
cmp
in
xor
imul
sbb
mov
decl
les
rcr
in
mov
pushf
cmp
or
push
adc
cmp
into
jae
pop
push
sub
jg
mov
scas
add
dec
mov
sbb
inc
aam
inc
mov
pushf
jo
inc
lret
push
testb
mov
aas
dec
cmp
fisttpll
cmp
dec
dec
in
cmp
inc
mov
popf
popl
pusha
jb
jle
mov
mov
push
fucomp
dec
cmc
ret
cmpsb
mov
movsl
cmp
pop
or
iret
lds
xchg
sub
jmp
jmp
inc
adc
jg
stos
xor
jle
shlb
mov
push
mov
mov
cs
sarb
leave
scas
test
mov
xchg
shl
mov
lods
aad
rol
jae
mov
insl
insl
adcl
mov
inc
ss
xchg
icebp
or
orb
les
sub
dec
or
roll
filds
ds
pushf
out
lods
or
ret
sahf
mov
pop
jo
mov
out
mov
mov
mov
fists
sub
mov
js
rcrb
movsb
jl
xchg
enter
std
mov
stos
movsl
mov
inc
scas
or
call
mov
ljmp
xchg
aas
jno
shll
jmp
mov
sbb
sti
movsb
jae
adc
mov
mov
push
ret
scas
aaa
out
inc
repz
xor
cmpsb
xlat
dec
pop
scas
adc
add
xor
ja
das
orb
lret
ret
or
lcall
push
mov
ss
mov
shll
mov
xor
sarl
sbb
cmp
inc
xchg
lock
icebp
lods
movl
push
int
or
cld
test
sbb
in
push
aaa
scas
clc
and
mov
lret
ljmp
jge,pt
or
ds
mov
sarl
push
andl
xchg
lds
xor
subb
mov
lock
sub
mov
and
nop
nop
xor
mov
out
sbb
mov
test
cmp
xchg
jg
or
insl
movsb
outsb
ljmp
xchg
push
jbe
pop
xor
mov
dec
in
dec
fidivs
xor
mov
or
sub
dec
out
lods
addl
jle
mov
mov
mov
push
push
stos
dec
pop
insb
test
xor
bound
dec
scas
pushf
inc
or
mov
cld
fbld
mov
test
mov
insl
fwait
mov
mov
or
lock
and
and
dec
mov
iret
out
push
sbb
aas
jae
push
lods
push
mov
pop
es
or
ret
add
pop
mov
dec
lock
push
nop
insl
insl
push
stos
dec
loopne
dec
ret
lret
or
inc
ret
repnz
push
push
dec
cmp
inc
push
mov
jp
repz
mov
xchg
push
pop
lds
roll
mov
je
and
dec
ret
adc
jmp
mov
mov
leave
ret
xor
lds
inc
ret
dec
lock
jp
push
mov
cltd
push
mov
inc
in
push
cmpsl
inc
arpl
test
nop
inc
or
dec
mov
shll
inc
fbstp
int3
lds
lret
aaa
dec
sbb
out
lds
push
push
dec
ret
mov
mov
inc
cmp
repz
dec
xor
push
add
mov
test
fbld
inc
push
cmp
in
and
in
xchg
push
inc
dec
pop
dec
push
mov
jo
loopne
mov
dec
sarb
mov
inc
inc
pop
movsb
or
add
push
loopne
push
ret
dec
jns
iret
lds
jl
mov
mov
mov
dec
rclb
inc
nop
dec
lea
mov
adc
inc
mov
adc
jns
or
sarl
push
pop
lea
dec
mov
rorl
push
repnz
mov
jo
int3
in
or
push
arpl
mov
push
xchg
repnz
mov
dec
sbb
push
test
bound
dec
in
rclb
popf
rorb
mov
bound
xchg
push
leave
aaa
jae,pt
out
mov
push
inc
out
mov
lock
sahf
rorb
ret
adcb
jecxz
mov
pushf
push
xchg
fidivs
dec
dec
mov
ret
xchg
push
mov
pop
fdivs
push
xor
sbb
push
or
lock
lods
push
inc
dec
leave
int3
mov
fistl
les
lock
pop
ljmp
aaa
sahf
inc
dec
leave
adc
xchg
ret
push
push
inc
cmp
loope
inc
ljmp
int
dec
roll
ret
xchg
push
lock
scas
js
mov
cmp
ret
mov
nop
xchg
mov
inc
cmp
loope
ja
lcall
inc
mov
lock
bound
int
push
adc
jo
add
adc
mov
mov
das
pop
enter
push
xchg
lods
sbb
int3
test
lds
push
dec
mov
rol
push
inc
lds
inc
push
mov
lret
jne
mov
push
inc
iret
test
push
rorl
int
jl
ret
dec
shlb
inc
push
push
jle
mov
les
rclb
into
outsb
push
xchg
rolb
inc
push
inc
push
mov
dec
cmp
mov
inc
dec
dec
test
scas
inc
push
shlb
iret
mov
inc
mov
jmp
mov
push
adc
push
and
mov
xor
inc
mov
rolb
shll
mov
rorb
xchg
pop
cltd
leave
inc
inc
dec
rorl
std
adc
into
push
nop
inc
push
jae
mov
into
subl
adc
adc
mov
mov
cmp
nop
ret
mov
sub
rcr
sub
lea
loop
outsl
scas
jno
dec
mov
jle
or
or
mov
insb
cmp
add
out
sti
int3
in
xchg
shll
into
mov
jmp
adc
jl
xor
sub
int3
or
rorl
lods
rcrl
push
or
lret
mov
dec
lods
iret
shl
pop
mov
mov
mov
or
mov
xchg
rcl
xchg
jge
enter
dec
shr
std
mov
lahf
push
cmc
push
mov
add
mov
xchg
sbb
jne
jmp
push
push
dec
sarl
aaa
nop
rclb
iret
dec
sahf
in
or
push
pop
outsl
sbb
xchg
sti
inc
les
jl
jge
cmp
mov
xchg
je
jl
ret
xchg
cmpps
mov
xchg
ret
test
ret
mov
scas
ret
lret
and
std
paddusb
jns
xor
mov
jbe
movsb
xchg
push
xchg
shlb
adc
ret
cwtl
or
adc
movl
rolb
repnz
ret
movsb
lods
aam
add
cmp
inc
jge
sbb
outsl
jl
or
popf
call
xchg
movsl
dec
sbb
jp
push
std
pop
jg
lods
sub
cwtl
scas
jge
adc
push
xorb
push
jmp
mov
fabs
ror
mov
cltd
xchg
stos
aas
rorb
push
mov
les
push
into
shr
dec
dec
mov
clc
pop
fsubl
adc
shll
aad
scas
test
xor
dec
inc
outsb
sbb
xor
mov
in
in
sub
mov
xchg
xchg
inc
in
aaa
jb
out
sbb
in
add
hlt
push
and
and
pushf
pusha
push
jmp
sarl
pusha
scas
pop
insl
ret
xor
push
popa
ret
mov
out
lahf
push
rol
or
pushf
pusha
pop
push
outsb
cmp
jae
cmp
fidivrs
orl
mov
rcr
lcall
jl
out
add
xchg
sarb
scas
sbbb
ret
push
mov
push
je
std
push
mov
cmp
popf
jp
ljmp
xorb
scas
inc
fisttps
jns
mov
lahf
jo
cmpl
loope
xor
mov
dec
outsb
mov
jno
mov
fnsave
lods
pop
mov
dec
pop
push
stos
nop
iret
imul
inc
or
jle
lea
sub
jg
stos
rorb
jmp
fwait
rcrb
inc
mov
pop
xor
dec
cmp
orl
sbb
int
jge
mov
pop
out
jns
pop
movsl
adc
repz
jle
mov
outsb
fidivrl
outsb
add
repnz
lods
cmp
inc
lahf
popl
xchg
jl
add
test
ret
into
stos
mov
mov
mov
xor
dec
or
cmp
lods
lods
iret
out
mov
and
rorl
inc
push
cmp
mov
iret
lea
jo
jae
iret
add
mov
cmpb
dec
fs
mov
mov
repnz
pop
inc
mov
ja
mov
sti
push
mov
dec
push
pop
push
inc
xchg
dec
lahf
sub
cmpsb
mov
jns
rorl
jmp
nop
mov
insl
dec
rorb
or
cmp
dec
leave
std
movsl
lods
dec
dec
mov
jge
mov
dec
vmovddup
mov
dec
pop
pop
xchg
sub
ret
xor
ret
lahf
gs
inc
dec
loope
xor
xor
sub
std
fcompl
pop
xchg
int
lods
mov
cmp
mov
dec
push
ret
and
les
in
in
or
aas
push
mov
mov
adc
shl
out
sub
je
xchg
push
mov
shrl
push
dec
mov
adc
jno
mov
mov
inc
lods
ds
orb
xchg
xor
std
lahf
mov
stc
sti
test
shlb
ffreep
scas
movb
sub
mov
lret
aaa
cmpsl
adc
push
mov
mov
les
in
cmp
lock
dec
rcl
or
mov
rcll
mov
iret
inc
sahf
mov
and
in
sbb
mov
jg
push
pop
sbb
inc
mov
js
xchg
fs
inc
cs
iret
push
lcall
fisttps
in
adc
cmp
dec
add
jg
adc
xchg
cmp
xor
inc
jmp
cmp
adc
ds
arpl
jo
and
cmp
jno
mov
stos
push
xchg
sahf
in
cmp
adc
outsb
xor
jb
das
ss
xor
lock
inc
or
jl
cmpsb
movsb
push
cmpb
rolb
shr
jle
mov
test
ret
sarb
mov
popa
mov
dec
push
orb
lock
push
aad
outsb
ret
xchg
mov
dec
or
jo
imul
jp
mov
in
and
pop
fnstsw
push
dec
jg
lcall
dec
stos
mov
jle
pusha
imul
fldl
xor
scas
jo
mov
lret
les
shrb
and
or
mov
pusha
pop
mov
test
pop
dec
test
cs
mov
mov
jmp
or
push
push
shrb
test
sahf
push
or
scas
pop
xor
mov
cmp
push
filds
daa
dec
fmulp
sbb
popf
fildll
pop
inc
add
or
and
shlb
mov
iret
or
mov
cmc
sbb
sbb
test
dec
in
mulb
rorb
es
popf
push
xor
scas
stos
std
outsb
adc
loopne
dec
ror
loopne
lret
push
ret
xchg
popa
sarb
dec
ret
push
and
inc
mov
push
mov
mov
ret
xchg
and
imul
loopne
lret
movl
loopne
enter
dec
mov
shlb
lret
inc
xorb
cmc
mov
test
fists
dec
cmp
push
mov
popf
cmp
push
sbb
mov
sarl
or
dec
int
sub
jp
mov
in
jle
lods
dec
leave
push
ja
dec
jb
int
xor
enter
add
inc
dec
fwait
dec
inc
mov
push
cmp
inc
add
push
rcrb
leave
and
mov
lret
pop
lret
test
sahf
ret
iret
mov
imul
mov
fnop
pusha
repnz
jle
fistps
movsl
jl
int3
js
lret
jl
add
mov
test
ror
pop
test
out
dec
adc
int3
or
cmp
inc
lahf
shlb
outsb
xchg
in
pop
mov
dec
mov
fsts
jno
pop
lods
push
push
mov
scas
cmp
push
and
cmp
dec
mov
mov
jg
jl
aas
fadd
fdivl
cmp
lods
dec
mov
inc
dec
lds
repz
sub
push
in
pop
push
cmpb
cs
xchg
dec
leave
xor
push
dec
nop
jecxz
jmp
or
dec
or
inc
ret
adc
mov
jp
int3
cs
dec
in
mov
fs
adc
fs
push
mov
ret
adc
push
or
add
xchg
jmp
fidivs
dec
xchg
decb
inc
push
popf
ds
xchg
jns
inc
rcrb
cli
iret
jno
out
iret
daa
loope
popf
cli
sub
mov
fists
ret
pop
or
mov
dec
repz
push
test
lret
scas
call
repz
test
mov
leave
fstps
cli
and
movsb
out
pop
pusha
push
mov
mov
dec
je
jne
pop
mov
pop
into
add
xchg
xor
fists
std
cmp
and
mov
ret
dec
ret
lcall
bound
lods
jno
and
rcl
inc
mov
test
inc
push
push
or
nop
mov
adc
int3
dec
mov
push
int
adc
cmp
mov
sahf
lock
pop
fistpll
fisubrl
jmp
insl
jle
scas
fstpl
in
cmp
out
fs
push
in
stos
test
rclb
pop
mov
sub
cmpsb
stos
ja
das
jmp
movb
ds
int
push
mov
std
or
not
popf
push
bnd
lret
jl
imul
mov
lahf
js
jl
xchg
pusha
insb
push
shll
xor
das
arpl
xor
pop
lahf
adc
data16
lods
sub
push
hlt
in
cmp
dec
mov
incl
inc
repnz
pop
aas
inc
std
jle
test
inc
cmp
incl
pop
jnp
push
jns
scas
sarl
xlat
test
jae
rcr
mov
dec
adc
pop
pop
out
sti
push
fbstp
xchg
aad
insl
or
add
jnp
les
rcrl
aam
sbb
fistps
xchg
jb
adc
int3
mov
jle
jp
clc
pop
xor
push
pop
mov
adc
out
cwtl
test
es
jle
mov
cmp
add
pushf
cli
adc
aad
icebp
mov
inc
cwtl
mov
fdivrs
ljmp
cli
leave
dec
mov
inc
dec
lea
fcomps
stc
push
or
push
push
repz
sbb
ds
or
mov
mov
xchg
xchg
rorl
lea
push
jmp
cmc
dec
adcb
dec
mov
or
add
sahf
push
decb
or
scas
mov
xchg
sbbb
adcb
jb
scas
insl
push
push
push
jo
sbb
mov
inc
dec
dec
push
sbb
push
jge
rcl
jge
mov
shll
push
scas
sahf
das
movl
xchg
fsubr
lods
cmp
fcmovb
pop
out
cwtl
icebp
fcmovb
ds
jle
mull
andl
ret
std
nop
imul
mov
xchg
popf
pushf
dec
int
adc
repz
sbb
push
addb
add
dec
lods
push
mov
mov
mov
or
les
orl
lret
adc
hlt
dec
adc
jns
dec
in
dec
and
lock
inc
inc
add
push
mov
mov
pop
mov
ds
leave
lods
cwtl
leave
cmpsl
popf
nop
lods
lret
push
xchg
nop
jmp
cs
in
xchg
or
add
or
nop
aad
jp
rclb
bswap
cs
dec
leave
ret
loop
movsl
xchg
inc
mov
loopne
leave
dec
cmp
ret
dec
dec
pusha
jnp
cli
inc
pop
push
or
inc
cmp
mov
mov
rcll
inc
shll
iret
sub
into
push
inc
mov
roll
leave
inc
xchg
in
dec
outsb
xchg
aad
dec
rcr
rcrl
inc
roll
mov
push
add
push
ret
lock
ror
dec
dec
scas
xchg
leave
or
jecxz
mov
sahf
ror
push
push
rclb
dec
xor
mov
adc
dec
push
dec
mov
shrl
dec
cmp
repz
mov
iret
sub
test
xor
mov
jns
sbb
int
bound
mov
aas
pop
test
aad
add
movsb
add
into
popa
mov
xchg
pop
mov
mov
push
test
adc
fsub
adc
add
mov
and
jne
push
mov
xchg
sbb
shrl
rclb
push
inc
mov
cld
inc
movsl
imul
jns
or
movsb
icebp
or
push
ret
cmp
in
lret
or
scas
mov
roll
nop
test
sub
mov
cs
cmpsb
mov
push
je
add
fmull
add
ljmp
xor
cmp
mov
nop
mov
sarb
mov
jle
mov
xor
mov
addb
or
lods
add
aas
cmp
dec
pop
mov
dec
ret
push
mov
lods
push
orb
xchg
xchg
bound
inc
adc
xchg
jbe
xchg
cmp
adc
clc
mov
dec
into
xchg
sarl
std
xchg
mov
rolb
sarl
int
mov
jl
mov
cmp
push
lcall
adc
inc
jb
jns
mov
mov
rcrb
mov
cmp
mov
iret
pop
pop
and
mov
rolb
test
adcl
xchg
fdivrl
aas
std
out
xchg
lahf
imul
xchg
mov
mov
and
sub
push
jnp
or
roll
nop
ljmp
mov
adc
movsb
push
mov
test
iret
shrb
lret
fnstsw
ror
shll
into
ret
mov
shll
xchg
icebp
dec
dec
mov
sub
push
sub
cmpsl
push
inc
push
xchg
loope
int
or
sbb
mov
shll
dec
inc
jns
int
roll
add
bound
mov
into
inc
shll
dec
mov
mov
sarl
dec
mov
nop
enter
dec
mov
mov
mov
fildl
rcrl
dec
rorl
bound
adc
dec
mov
shll
dec
dec
adc
inc
icebp
cmp
mov
jecxz
inc
dec
push
rorb
push
rorl
dec
nop
xchg
fsubrl
xchg
ret
jl
lret
shrl
decb
ljmp
xor
mov
into
mov
mov
into
ret
shll
enter
dec
mov
inc
nop
addl
rcll
nop
rorl
mov
int3
cltd
cmp
adc
leave
nop
add
mov
loopne
cmp
mov
nop
rorb
shlb
cmp
orl
dec
adc
into
dec
movsb
ret
lret
mov
mov
cmp
mov
nop
and
mov
into
loopne
dec
mov
nop
iret
dec
loop
dec
mov
mov
scas
into
mov
cmp
dec
inc
mov
das
cmp
outsb
mov
dec
dec
sub
dec
nop
cs
leave
mov
push
cmp
mov
nop
in
dec
mov
mov
mov
mov
nop
int
popf
mov
mov
nop
dec
dec
insl
mov
inc
dec
cmp
mov
nop
inc
dec
sub
sbb
into
nop
cld
dec
dec
mov
fmull
int3
mov
nop
mov
mov
mov
rcll
push
mov
mov
sbb
dec
mov
nop
int3
dec
mov
leave
iret
cmp
mov
mov
mov
outsl
dec
push
mov
dec
dec
cmp
popa
inc
mov
pop
lret
cmp
mov
nop
decb
mov
xchg
xchg
rcl
mov
push
mov
push
mov
nop
fwait
dec
iret
mov
jo
enter
dec
sub
dec
stos
das
dec
int
adc
mov
jle
mov
mov
nop
push
dec
sub
shll
cmp
mov
nop
dec
insl
xor
imul
mov
nop
inc
dec
adc
rclb
mov
sarb
in
push
nop
movsb
dec
int
xchg
mov
ror
ret
bound
mov
push
or
xchg
aaa
adcl
inc
out
rclb
push
loope
push
out
sahf
push
cmpsl
dec
loopne
dec
pop
dec
pop
test
rorb
loope
dec
out
sahf
dec
push
inc
out
sahf
inc
cmpsl
inc
loopne
inc
pop
push
sahf
popa
movsb
push
loopne
push
pop
push
pop
test
rorb
loope
dec
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
xlat
lds
inc
pop
test
inc
inc
push
push
pop
xchg
rclb
loope
dec
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
test
rorb
loope
mov
inc
out
sahf
inc
mov
inc
loope
push
out
sahf
push
cmpsl
push
loopne
dec
pop
dec
pop
test
dec
aaa
dec
loope
dec
out
sahf
dec
cmpsl
dec
loopne
sahf
cmpsl
inc
loopne
inc
pop
inc
pop
movsb
push
xor
rcll
push
pop
test
rorb
loope
dec
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
test
out
pop
test
rolb
xchg
repnz
loope
push
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
test
rorb
loope
dec
out
mul
inc
inc
out
sahf
inc
cmpsl
inc
loopne
push
adc
sahf
push
cmpsl
push
loopne
push
pop
dec
pop
test
rorb
inc
dec
out
sahf
dec
cmpsl
dec
loopne
dec
mulb
loopne
inc
pop
inc
pop
test
rcll
inc
push
pop
test
rclb
loope
dec
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
test
rorb
loop
inc
aaa
inc
loope
inc
out
rclb
push
loope
push
out
sahf
push
cmpsl
dec
loopne
dec
pop
dec
pop
test
rorb
loope
dec
out
sahf
dec
push
inc
out
sahf
inc
cmpsl
inc
loopne
inc
pop
push
sahf
loopne
push
loopne
push
pop
push
pop
test
rorb
loope
dec
out
sahf
dec
cmpsl
dec
loopne
dec
pop
dec
pop
xlat
lds
inc
pop
test
inc
inc
push
rcrb
push
loop
push
mov
in
and
out
addr16
lret
rclb
sub
rcll
or
dec
sti
fsts
jmp
push
lret
fsts
mov
icebp
dec
cmp
iret
les
dec
sbb
lds
fsts
or
inc
pop
fsts
dec
mov
sbb
mov
fwait
ret
icebp
rol
sub
inc
xor
icebp
roll
mov
xchg
ret
icebp
rcll
jp
mov
mov
xchg
push
rorl
stos
rcrl
mov
mov
fsts
cmpxchg8b
cwtl
push
inc
sbb
xchg
mov
insl
jp
pop
dec
rcl
jl
shrb
movb
or
xor
orb
push
dec
jl
lret
int
xchg
leave
into
gs
add
mov
aas
loop
int
int
inc
mov
lods
xchg
sub
int
popa
mov
std
int3
inc
nop
shrb
enter
shrb
into
cltd
sarb
or
lods
stc
cmpl
dec
jb
lret
icebp
shll
std
rol
mov
out
mov
sub
lret
inc
leave
int3
cmpsb
mov
outsb
dec
rclb
ret
dec
mov
adc
shrl
rorl
ds
push
xchg
outsl
into
mov
cld
xlat
mov
out
mov
psrlw
or
loope
int
mov
int3
iret
ror
test
dec
imul
inc
pop
fmulp
mov
or
xchg
lret
fmul
repnz
or
mov
mov
jp
scas
add
gs
rclb
sahf
mov
dec
xor
sarb
lock
lret
dec
shrb
fdivrl
enter
push
mov
xor
jmp
rcll
inc
push
xchg
dec
fadds
in
shrl
movsb
sbb
or
xchg
xchg
jne
scas
rorl
xchg
lret
pop
push
dec
adc
repnz
mov
lock
push
lods
adc
xchg
xchg
movsl
mov
push
int3
pushf
push
inc
xor
outsb
sahf
mov
mov
inc
iret
dec
dec
xor
adc
mov
dec
nop
rol
movb
stos
int
mov
rolb
add
xor
mov
test
or
adc
dec
or
sarb
outsb
enter
int3
xchg
push
leave
into
jg
cltd
enter
sub
dec
mov
mov
movl
adc
xchg
stos
jns
dec
xor
mov
cmp
adc
rclb
leave
popf
jb
data16
rorb
iret
mov
rorb
shrb
xchg
add
shrb
dec
dec
pop
lret
pop
push
int
xchg
sub
mov
imul
call
inc
in
xchg
lret
int3
outsb
movsb
dec
cwtl
inc
mov
mov
test
sub
mov
mov
enter
xchg
shrl
shrb
mov
mov
sarl
loope
dec
dec
mov
mov
and
dec
pop
sbb
push
mov
or
fsts
fcmovnb
mov
movl
or
fsts
mov
push
mov
iret
push
dec
pop
fsts
sbb
or
outsb
icebp
xchg
dec
lods
and
mov
adc
int
iret
scas
jl
add
jmp
lods
and
inc
jno
out
push
lods
jecxz
cmp
mov
xchg
jl
sbb
nop
in
outsl
or
rolb
cmp
sbb
rclb
outsl
sbb
out
icebp
mov
out
cmpl
mov
sbb
lods
add
aas
lret
cmp
repnz
cmp
rorl
dec
lock
and
inc
xor
fisubl
sarb
inc
mov
stos
movnti
stc
mov
xchg
out
test
fs
fdivrl
cmpl
lods
rclb
iret
leave
mov
loope
add
das
xchg
jae
or
mov
stos
stos
pushf
sub
cld
mov
jmp
sbb
fnsave
jg
es
insb
out
sbb
push
scas
in
xor
sub
cmpsb
mov
or
xchg
or
jns
lods
push
lods
inc
movsl
push
orb
insb
jo
loopne
out
lea
fs
mov
xchg
mov
mov
stos
sbb
int
addl
xor
test
mov
stos
mov
inc
mov
stos
push
pop
dec
mov
out
cmc
in
nop
sub
push
jnp
pushf
es
scas
adc
mov
mov
addr16
jo
dec
je
add
popa
push
inc
gs
cmp
out
in
adc
icebp
ds
jg
imul
xchg
pop
syscall
mov
and
pop
mov
mov
cmp
enter
into
setg
imul
dec
mov
cmp
adc
lret
je
scas
lods
outsb
mov
lret
mov
jmp
pop
mov
popf
mov
dec
pushf
jl
int
and
nop
sub
sub
gs
std
and
popa
repnz
xor
ds
movsl
mov
lods
sahf
or
mov
mov
sub
inc
inc
or
and
scas
push
cmpsb
and
ljmp
fnstsw
xchg
dec
sub
xor
jae
fnstsw
mov
mov
movsb
or
lods
in
ret
stos
jae
dec
inc
repz
or
jecxz
push
ret
adc
shll
add
rcll
inc
into
cmp
or
popf
mov
movsb
lret
push
movsb
test
and
xor
mov
dec
mov
mov
dec
ret
pop
es
rcll
test
adc
ja
ljmp
sbb
loope
fstl
stos
push
mov
ret
jno
xchg
lods
cmpsl
xchg
cltd
mov
hlt
or
inc
mov
xor
add
stos
add
push
pusha
sub
mov
stos
or
sahf
sbb
add
ror
push
repz
shll
rcll
int
notb
aas
inc
loope
int
les
les
iret
cmp
test
sub
adc
pop
inc
and
adc
add
mov
repz
mov
add
mov
repz
xchg
sbb
loopne
dec
dec
out
inc
inc
test
shlb
push
test
or
movsb
mov
int3
cmc
rcr
movsl
cltd
push
js
push
lods
inc
loopne
xlat
aam
fldlg2
mov
rorb
movsb
xor
xor
cmc
dec
aam
or
or
jb
xchg
sub
scas
or
ret
mov
pop
inc
insb
gs
mov
mov
icebp
lcall
mov
xchg
outsb
ret
pop
out
lds
jp
aad
push
pop
xor
adc
mov
leave
and
jl
popf
imul
lods
cmp
pushf
or
mov
rorl
mov
pop
mov
xchg
je
mov
mov
inc
jo
jnp
mov
jl
xadd
popa
inc
es
lods
jge
jl
lock
rclb
int
sub
push
in
std
pop
and
jge
int
sbb
cltd
mov
sbb
pop
xchg
xchg
subb
mov
sbb
repz
xorl
mov
jl
lcall
mov
add
repnz
push
adc
adc
mov
jo
es
lret
movsb
imul
mov
or
test
ret
dec
das
std
iret
ds
add
cmp
jb
das
inc
cli
and
into
push
sub
adc
movl
vpor
or
sbb
daa
scas
ret
mov
pop
mov
dec
inc
jl
in
in
fwait
int3
mov
je
in
aaa
and
lret
add
stc
mov
loop
insl
or
adc
cmpsl
pop
fcmovbe
pop
pop
push
rcl
jno
jp
adc
iret
pop
rorl
xchg
mov
and
xchg
ret
adc
pop
mov
loop
int
xchg
or
js
push
popf
xchg
cmp
into
pop
mov
xor
xlat
mov
jnp
daa
mov
cld
test
aas
clc
sbb
adc
iret
pop
movsb
sub
shll
or
pop
sti
lods
lahf
mov
or
sub
test
add
fbld
dec
inc
gs
ss
push
or
imull
jb
rcrl
mov
movsl
push
pop
xchg
int
fimuls
shll
cmp
int
loopne
rcll
fisubs
shll
mov
and
lret
mov
xchg
xchg
sbb
test
cmpsl
jp
movsl
adc
cld
jecxz
dec
cmpsl
mov
popf
push
mov
loopne
xchg
mov
dec
lret
ret
mov
dec
loope
jp
les
cld
aaa
mov
test
push
pop
stc
push
mov
ror
or
mov
xchg
cmp
fbld
inc
gs
call
shll
adcl
shl
popl
int3
in
movb
clc
and
jbe
xor
stos
pop
dec
scas
xchg
in
or
mov
shrl
or
rol
mov
cmp
fldenv
out
push
sahf
push
in
pop
dec
daa
ret
les
push
xchg
jmp
jbe
pop
pop
nop
rcrl
lock
je
insb
push
adc
ror
pop
add
cltd
scas
stc
sub
sub
dec
cmc
lret
shl
and
inc
loope
mov
xlat
dec
popf
iret
push
lahf
mov
mov
and
or
bound
mov
into
rcrl
xchg
shrl
mov
stos
push
dec
pop
icebp
rcr
aad
fiadds
fnstenv
pushf
mov
mov
rclb
rcrb
rol
mov
lret
sti
mov
ret
sub
rcr
stos
inc
pop
push
cmp
outsl
dec
dec
jnp
in
shll
daa
shl
jae
aad
out
leave
cmpsl
lret
sub
ret
jnp
out
lret
jmp
mov
stos
ror
push
movzwl
inc
pop
mov
inc
and
mov
aas
shl
adc
shl
and
dec
pop
ljmp
push
mov
cli
int3
xchg
xchg
sbb
popf
mov
in
out
adc
std
sarl
sbbl
push
mov
in
inc
and
cmpsb
sbbb
orb
lock
ret
push
das
imulb
divb
inc
sar
push
adc
and
xlat
dec
fmul
adc
xchg
bound
popa
aas
insl
mov
jg
shll
aaa
rorl
or
insl
rcrb
xor
sub
aad
mov
sub
insb
sub
mov
repz
div
ret
scas
mov
stos
sarl
jne
ja
xchg
xchg
pop
iret
shrl
cmp
mov
loop
gs
into
cwtl
int3
lea
dec
pop
push
sti
shrb
mov
sub
push
es
sub
xchg
out
ret
adc
dec
out
push
loope
adc
xchg
pusha
stc
dec
dec
icebp
cmp
shlb
enter
into
push
ret
lea
pop
jae
sarl
mov
mov
hlt
shll
mov
push
arpl
push
adc
dec
adc
and
nop
inc
mov
ret
inc
lcall
loope
push
outsb
stc
ret
shrl
clc
pop
and
popa
adc
fsubrl
xchg
cmp
cmp
jp
xchg
jb
outsb
dec
or
xadd
lret
out
mov
dec
push
inc
int3
pop
or
xor
pop
push
xchg
les
push
out
xor
loop
ds
mov
shll
roll
or
mov
bound
loop
fisubs
dec
shlb
in
jns
cmpsl
iret
popa
and
sti
dec
add
xchg
push
inc
jo
inc
addb
ss
lea
adc
shrl
out
js
scas
fs
mov
push
das
rorb
xchg
add
push
inc
adc
xchg
mov
xchg
js
sub
lret
sti
xchg
push
xor
xor
in
add
rcrb
pop
shrl
dec
cli
dec
cmpsb
pop
loope
xchg
push
test
xchg
dec
xchg
push
nop
adc
xchg
lods
dec
movsb
cmp
out
lock
cmpsb
mov
and
jmp
mov
fsubl
push
push
mov
xchg
dec
jo
rorb
mov
adc
ds
cmp
into
dec
xchg
xchg
scas
push
push
leave
xchg
adc
mulb
or
loop
mov
pop
dec
xchg
bound
shl
pop
loopne
inc
popa
mov
dec
pop
pop
lret
cmp
ljmp
movsb
inc
ret
iret
or
mov
xchg
mov
sub
bound
popa
inc
mov
push
into
inc
bound
or
ret
jl
int
into
inc
push
jl
inc
mov
push
inc
pop
test
inc
rcr
mov
inc
fldenv
fstpl
sub
dec
push
jno
fcoms
mov
rcll
mov
sub
mov
sub
test
push
insl
xchg
mov
xchg
sti
mov
push
lret
mov
mov
pushf
mov
xchg
xor
mov
dec
mov
mov
fadds
push
mov
jae
dec
cmc
jge
push
xor
cltd
shll
mov
mov
hlt
adc
addr16
push
xchg
int3
into
loopne
and
dec
push
mov
arpl
cmc
cmp
or
shr
pushf
ja
sbb
mul
shll
dec
mov
pop
jp
shl
jne
inc
jo
loope
mov
aam
pop
or
insb
mov
adc
shrl
bt
or
mov
xor
in
lcall
xor
adc
xor
stos
sbb
pop
lock
pushf
ja
inc
and
movsl
scas
lahf
lret
stos
push
push
iret
lods
jl,pt
dec
pop
mulb
dec
lds
roll
dec
bound
mov
cs
icebp
sahf
rcrb
jle
adc
mov
lods
adc
lea
mov
lds
jae
jb
sbb
dec
push
outsl
xor
inc
scas
add
push
adc
mov
iret
mov
mov
mov
pop
pop
pop
jecxz
mov
ror
out
mov
shrb
jmp
sub
add
mov
and
jne
sarb
adc
jle
inc
std
lock
xor
shlb
push
shrl
repnz
sbb
inc
mov
push
fldenv
inc
xor
mov
pop
pushf
dec
dec
jbe
adc
icebp
xchg
faddl
out
push
lret
imul
fwait
lock
xor
mov
or
lret
mov
icebp
lock
jb
push
lcall
stc
jle
in
jno
adc
test
push
mov
data16
cltd
adc
icebp
xorl
push
pop
sub
aas
mov
cmp
out
push
sub
fimuls
outsl
shll
mov
xor
stos
rcrl
arpl
gs
repz
lret
cmpsl
rcrl
jge
dec
and
pop
sub
dec
lock
mov
mov
and
idiv
mov
sub
mov
leave
jmp
push
xor
fsubs
shrl
adc
jmp
push
aaa
mov
into
arpl
cmp
iret
jo
or
mov
xchg
cmc
dec
out
and
lret
mov
or
jmp
jae
pop
sub
cmp
call
cli
push
mov
push
dec
popf
add
mov
adc
xor
les
mov
xor
jb
addr16
pop
repnz
mov
mov
insb
imul
adc
pusha
xchg
cmp
outsb
rcll
sbb
stc
lods
push
mov
dec
arpl
mov
xor
movsb
fldcw
out
aam
sbb
nop
sbb
lods
out
dec
aam
mov
jne
or
std
in
int3
je
xor
sbb
aam
and
icebp
pop
dec
iret
iret
cmpsl
pop
in
or
dec
into
shll
movsb
dec
insb
or
test
push
int3
outsl
xchg
outsl
push
dec
push
jge
leave
decb
insl
or
test
out
mov
leave
mov
into
xchg
push
xchg
push
or
push
cmp
push
jmp
xchg
int3
sti
cmpsb
popa
xlat
pop
pop
cmp
add
mov
jb
ret
fadds
stc
icebp
mov
mov
and
loopne
mov
inc
mov
rcl
outsl
mov
inc
adc
js
cmp
fstl
push
aad
and
xchg
mov
or
bound
mov
lock
or
aaa
stos
inc
mov
repz
sbb
dec
ja
jb
mov
lods
cwtl
xchg
adcl
jno
iret
and
bound
jl
rcll
scas
push
sub
lds
outsl
xchg
movsl
add
jb
das
xchg
iret
mov
add
pusha
push
xchg
push
fwait
xchg
int3
inc
bound
rclb
dec
fst
or
scas
adc
push
mov
movl
mov
xchg
iret
in
lret
ror
insb
out
mov
cmp
xchg
lahf
xchg
push
jb
data16
mov
mov
cltd
xchg
test
xor
push
mov
inc
adc
sbb
adc
push
dec
addb
bound
icebp
mov
ds
sbb
stc
jns
shlw
scas
subb
out
pop
xor
shlb
call
cmp
mov
inc
xor
shr
sub
por
mov
lcall
or
jno
test
and
fcmovu
rcrb
test
repz
imul
mov
popl
fistpll
inc
jp
add
ljmp
test
pop
mov
inc
push
sbb
mov
imul
mov
inc
and
and
and
mov
les
inc
es
or
nop
inc
test
mov
popa
ss
mov
lret
xchg
xchg
call
jmp
inc
xor
mov
stc
into
push
pop
ss
sahf
jb
inc
dec
rorb
mov
inc
mov
lret
rorl
or
stos
jne
jmp
adc
mov
int
jmp
gs
pop
loopne
nop
xor
cmp
shrl
enter
mov
out
mov
pop
sbb
sbb
and
jp
ret
dec
jb
ljmp
or
sbb
test
pop
mov
rorl
push
out
adc
cmp
push
shlb
push
int3
inc
mov
outsb
jle
loopne
test
out
pusha
push
shlb
inc
test
sub
mov
mov
push
xor
icebp
dec
push
mov
adc
jno
lcall
test
sub
pop
call
inc
fsubp
adc
dec
jmp
or
xchg
push
enter
std
rcr
cmp
popa
mov
shlb
int3
popf
mov
ss
lcall
scas
xchg
into
xor
push
dec
dec
dec
inc
call
rol
sbb
int
sub
jns
pop
add
loopne
dec
test
or
into
insb
or
push
cmp
push
cmc
out
cs
insl
xchg
mov
scas
icebp
jb
and
jmp
loop
mov
cmp
cmpsb
mov
enter
push
dec
push
sbb
je
movsl
nop
scas
xor
daa
inc
enter
dec
xchg
nop
push
mov
into
or
sbb
inc
fst
mov
outsl
jno
jb,pn
inc
xchg
pop
mov
ljmp
gs
mov
push
ret
test
jno
push
pushf
pushf
push
mov
xchg
dec
xchg
imul
test
xor
mov
push
sti
cs
call
test
mov
sub
test
repz
loop
dec
dec
push
pusha
sub
jge
mov
push
dec
mov
dec
dec
mov
inc
mov
std
mov
sub
and
lcall
or
leave
sub
mov
inc
leave
popa
stos
enter
mov
push
out
xor
dec
dec
sub
dec
mov
xor
mov
icebp
stc
je
sbb
das
and
and
push
pop
cmp
push
int3
add
int3
test
lret
iret
cmpsb
pop
xor
movl
icebp
ja
jns
xchg
lods
dec
test
fs
test
insb
adc
cmpl
cmp
pop
jb
add
lods
movsl
mov
icebp
adc
jno
push
dec
es
xchg
clc
fwait
push
mov
shll
imul
mov
push
dec
push
push
mov
add
sub
hlt
int
cmp
pop
loope
cmp
out
pop
or
push
pop
movsb
mov
jno
dec
es
mov
adc
and
mov
push
push
popl
rcr
pop
mov
sub
add
fnsave
call
xchg
ds
cli
adc
adc
push
icebp
dec
push
dec
ljmp
and
test
mov
mov
jb
mov
mov
hlt
out
xor
sti
pushf
test
jo
stos
movsl
dec
or
push
adc
jae
cmp
lret
dec
mov
jb
fisubrl
jb
jg
fs
test
sti
jl
sbb
stos
scas
lock
stos
adcl
dec
mov
xor
push
pop
rcll
mov
dec
test
leave
sbb
cmc
fidivrs
sub
cmpsb
sub
jns
mov
mov
xchg
xchg
fimuls
inc
jne
jmp
out
mov
out
notl
push
xchg
ljmp
mov
popa
movsb
pop
stos
in
sub
jge
push
das
fs
mov
push
jno
es
mov
or
lods
clc
mov
inc
pop
jg
std
outsl
cmpsb
sub
fildll
inc
cs
push
sub
mov
lret
popf
rorl
rcll
and
pusha
sub
stos
leave
faddp
shl
dec
sar
cmp
les
cmp
push
out
inc
call
fiaddl
popa
or
nop
gs
stos
inc
fildll
dec
test
sub
insb
lock
into
jb
jne
int
xor
push
fsubl
mov
and
in
mov
jl
int
mov
daa
xchg
int3
rorb
mov
jb
in
adc
arpl
sub
fisubl
hlt
push
xchg
frstor
jb
cmp
jb
mov
lret
mov
icebp
in
pop
es
lods
adc
push
popf
mov
stc
jle
dec
lret
push
imul
and
dec
lods
xchg
imul
outsb
scas
bound
repnz
adc
dec
push
pop
adc
out
mov
dec
xor
push
xor
iret
movsb
and
jg
inc
push
sub
inc
imul
jl
jb
or
fs
xchg
jb
lods
clc
or
rcl
icebp
into
nop
xor
lret
aaa
inc
test
push
int
jl
jae
cmc
push
pop
inc
das
jb
loop
push
jno
in
xor
pandn
je
pop
shll
stos
dec
or
sbb
pusha
mov
adc
push
push
or
lcall
popa
rcrl
jb
nop
nop
iret
xchg
xchg
xchg
sub
xor
loope
insl
fimull
outsl
loop
cltd
mov
xchg
test
or
push
lahf
mov
pop
js
stc
mov
dec
push
mov
pop
js
pop
mov
adcb
dec
lea
or
mov
inc
jb
leave
and
lods
dec
sub
js
sbb
loope
lds
cltd
mov
icebp
dec
or
push
es
in
pop
mov
andb
inc
loope
xchg
enter
ss
call
sti
or
lock
js
inc
ljmp
lods
pop
loope
ss
imul
test
xchg
repz
mov
rolb
test
sub
bound
sahf
stos
fistpll
xchg
add
iret
cs
mov
stos
adc
rcr
sub
fidivl
dec
dec
iret
cli
std
mov
xor
jb
xchg
lret
dec
fucom
stos
push
jo
popa
into
imul
xor
cmp
outsb
jg
pop
mov
cmpsl
xchg
out
mov
js
cmpsl
push
popa
mov
push
pop
pop
pop
jle
mov
loope
pop
out
lret
cmp
icebp
sub
adc
push
stc
xchg
mov
aas
mov
pop
test
dec
push
jo
jo
jmp
mov
fsubp
push
test
outsl
movsl
ja
cmpsb
aas
and
imul
fbld
rclb
xchg
scas
mov
mov
mov
pop
jno
cmpsl
push
mov
sbb
mov
xchg
insl
aam
popa
sarl
sbb
pop
ds
mov
es
test
jno
lret
mov
fidivrl
int
xchg
andb
iret
mov
cmp
mov
in
cmp
inc
dec
fs
pop
add
gs
bound
inc
mov
pop
push
pop
xchg
lds
movsb
xchg
cltd
inc
ss
inc
out
and
movsl
jp
aad
das
loope
mov
push
cltd
xchg
xor
gs
imul
enter
mov
lds
xchg
std
inc
xor
dec
dec
int
xor
push
test
inc
mov
shll
xchg
rorb
mov
cs
jmp
jo
rorl
xchg
fnstenv
jns,pn
mov
icebp
push
inc
icebp
push
push
xchg
js
inc
pop
icebp
cs
cs
sub
scas
cmpsb
std
out
icebp
mov
dec
pusha
in
stos
push
iret
sub
mov
cmp
addr16
jmp
inc
stos
int
nop
add
popa
icebp
movsb
outsb
loop
sub
icebp
inc
int3
xchg
jns
nop
sub
rorl
sbb
and
pop
inc
nop
dec
in
into
inc
iret
ja
jp
push
add
call
int3
outsb
xor
cli
push
fimull
push
jle
xchg
jbe
lods
out
and
mov
cmovs
mov
pop
int3
lea
dec
push
jmp
adc
mov
into
xchg
pop
mov
addr16
sbb
lds
push
imul
hlt
outsb
add
xchg
pop
rcrl
xor
xchg
sti
adcb
movsl
outsb
dec
js
into
in
call
movsb
std
nop
cwtl
pop
call
mov
fisubrl
jb
jle,pn
test
mov
dec
mov
insl
test
inc
inc
call
inc
xor
out
xchg
outsl
mov
rcll
notl
and
mov
xor
stos
mov
xchg
out
pop
sarl
shl
jno
and
sbb
sbb
mov
notb
dec
cmpb
mov
cltd
sahf
fdivrs
mov
nop
mov
sbb
push
mov
jb
add
int
lods
insb
mov
mov
jae
sarl
mov
push
push
lods
xor
mov
rorl
push
mov
cld
mov
xor
mov
adc
xor
call
aas
lods
es
jnp
out
outsl
movsb
or
add
mov
outsb
scas
jae
jns
push
stos
inc
inc
push
push
sub
xchg
outsb
jle
mov
push
mov
mov
mov
jb
lret
pop
pop
out
sarb
push
inc
cli
cmp
push
jge
xor
out
pop
imull
sbb
insl
adc
mov
mov
fbld
adc
lods
addr16
das
lret
push
ret
jle
adc
mov
sub
mov
hlt
rorb
cmp
pop
mov
shll
xchg
es
xchg
lea
enter
insl
les
jle
lods
cmpl
dec
shl
outsb
push
pushf
push
xchg
cli
xchg
xlat
out
xchg
or
imul
sbb
sub
pop
ret
js
mov
push
cmpl
outsl
pop
push
add
jl
inc
inc
std
push
jle
or
sahf
fstpt
lds
aas
jmp
aaa
inc
cli
pop
add
lock
cmpsl
dec
adc
xor
push
stos
push
mov
push
pop
mov
add
add
inc
jl
and
daa
cmp
lds
pop
lret
addl
add
stc
pusha
inc
mov
inc
ss
ds
in
or
mov
inc
in
ffree
jns
lea
in
ljmp
dec
xor
cmpsb
ja
in
adc
arpl
xor
cmpsb
icebp
ret
iret
jnp
outsl
fiaddl
enter
push
sbb
iret
or
jmp
cmp
inc
mov
pop
xchg
xor
sbb
in
daa
push
out
pop
pop
scas
xchg
push
push
push
and
ret
add
xchg
or
inc
loop
or
repz
pop
sub
mov
int
inc
push
push
xorb
xchg
mov
mov
mov
push
loope
mov
jg
mov
sub
jge
dec
nop
jno
gs
test
fidivrs
push
int
nop
lods
xchg
add
ds
insl
xor
nop
jnp
push
cltd
jae
out
jg
pusha
int
inc
xchg
test
std
popf
outsb
fisttpll
insb
pop
loop
xbegin
add
mov
test
dec
sarb
inc
mov
cmpl
adc
mov
mov
inc
shlb
push
gs
jne
mov
dec
into
jb
mov
push
bound
pop
mov
nop
pop
mov
inc
push
xchg
xor
or
mov
into
adc
cmp
mov
icebp
xchg
dec
inc
dec
adc
ror
xchg
shll
into
rorl
mov
mov
mov
dec
int
rorl
mov
mov
jno
dec
adc
iret
mov
mov
push
xchg
or
mov
into
xor
cmp
or
dec
inc
dec
push
add
lret
rcll
add
dec
push
sarb
xchg
rclb
mov
xchg
push
mov
into
nop
dec
dec
adc
mov
jo
or
mov
mov
rclb
dec
shll
mov
or
nop
adc
dec
xchg
mov
xchg
mov
lss
test
into
xor
sarl
imul
rcrb
rorb
cltd
sbb
lret
pop
repnz
adc
test
xchg
dec
push
inc
pop
clc
dec
push
rorl
ret
pop
cwtl
rolb
pop
ds
dec
ret
dec
cmp
mov
fimull
in
scas
mov
mov
push
rclb
adc
into
sub
xchg
xorb
rorl
int
xchg
fmuls
inc
inc
xchg
mov
cmp
fldl
jb
dec
adc
stc
mov
outsb
inc
fadd
int3
inc
or
pop
shll
mov
data16
inc
dec
xor
roll
outsb
iret
inc
xchg
nopl
orb
into
jbe
add
push
mov
jp
leave
scas
dec
inc
dec
sarl
int
inc
lods
push
inc
aaa
push
or
les
and
pop
mov
inc
or
add
leave
outsb
mov
mov
push
rol
push
dec
cmpsb
inc
pop
arpl
inc
push
adc
fadd
inc
inc
roll
xor
jp
xor
mov
pop
mov
imul
mov
es
mov
std
das
mov
fimull
ret
mov
mov
fwait
decb
add
ss
enter
sub
popf
push
or
arpl
mov
iret
icebp
xor
jecxz
xor
ret
jle
mov
jo
mov
fmull
incb
mov
mov
add
push
mov
clc
xor
mov
leave
inc
lret
push
mov
adc
mov
jbe
sub
js
mov
adc
jmp
mov
ss
int3
jno
leave
movsb
lret
inc
push
push
mov
dec
jg
lcall
or
rolb
dec
cmc
shrl
movsl
cli
mov
int3
push
pop
pop
es
mov
les
ffree
mov
dec
dec
cltd
xchg
lcall
push
dec
nop
mov
xorl
dec
icebp
in
mov
into
rorl
popf
push
inc
lret
xorb
or
mov
cmp
loop
ficomps
xchg
sub
mov
inc
xor
cmp
xchg
popf
test
jle
cltd
mov
xchg
sub
xchg
jecxz
ljmp
inc
les
sbb
into
js
jl
nop
mov
dec
bound
and
dec
dec
mov
or
mov
mov
lret
lea
jmp
int
push
shlb
and
jb
popf
dec
mov
sub
adc
jno
jecxz
sub
mov
mov
aad
cs
push
add
mov
jmp
rcr
arpl
push
inc
pop
mov
add
xor
in
xchg
or
dec
icebp
icebp
shlb
enter
nop
inc
push
sub
fwait
inc
jp
push
cltd
xchg
imul
sahf
orb
cmp
shll
sbbb
mov
cmp
aaa
rcrb
jno
lods
push
or
mov
ss
push
int
xor
mov
mov
cwtl
movsl
mov
je
cmp
js
mov
push
add
mov
shll
lret
lods
nop
mov
xchg
inc
dec
xor
and
int3
dec
adc
sub
or
dec
je
loop
iret
push
leave
inc
stos
jo
mov
leave
mov
mov
push
xor
cmp
sar
jecxz
dec
dec
je
loop
iret
push
enter
outsb
ss
ror
xchg
movsb
shll
movb
shll
sub
fadds
inc
push
or
fadd
inc
es
mov
jbe
cmpsl
push
add
xor
les
lret
int
enter
push
shlb
xor
jbe
xchg
xor
and
mov
push
inc
jle
aad
inc
adc
lock
add
inc
push
mov
cmp
lahf
dec
push
popa
lret
adc
push
dec
fcoml
xchg
jbe
loop
dec
lret
test
subl
mov
pusha
adc
clc
adcl
jl
mov
js
mov
or
out
les
sub
ss
punpckhdq
mov
test
les
push
xchg
jle
movsl
sbbl
test
scas
int
and
shrb
adc
inc
push
mov
jmp
mov
dec
dec
scas
push
or
pop
shll
lret
mov
jbe
cltd
mov
dec
repz
jecxz
dec
inc
je
loop
iret
push
rorb
jae
mov
inc
bound
add
shrl
mov
jp
xor
repz
push
out
push
arpl
mov
ret
rcll
sbb
xchg
mov
dec
lret
jae
jp
push
loop
mov
dec
dec
aaa
lret
orb
shll
inc
dec
push
mov
syscall
inc
push
ss
push
mov
les
stos
dec
xor
or
push
sub
mov
adc
scas
or
dec
inc
dec
cmp
ljmp
xchg
shl
mov
mov
adc
add
mov
adc
sub
lcall
xchg
jp
dec
add
mov
push
sbb
aad
cmp
jb
clc
add
and
xchg
jp
lds
mov
mov
int
or
loop
xchg
mov
inc
add
rol
dec
into
mov
mov
push
jb
pop
or
mov
push
push
sub
push
lret
or
or
mov
inc
or
inc
jns
or
inc
nop
push
mov
cmp
cmp
sahf
dec
jnp
lret
inc
mov
mulb
fwait
mov
int3
cmp
xor
adc
push
jle
lea
or
dec
jb
adc
pop
dec
jge
outsb
roll
sbb
mov
arpl
clc
rorb
jle
cmpsl
jl
mov
sbb
lcall
pop
mov
sbb
push
js
mov
test
add
push
roll
cs
add
scas
nop
cmp
sbb
rorl
sub
rcll
push
test
dec
test
les
dec
sbb
ljmp
insb
adc
out
imul
repnz
or
inc
mov
sub
inc
push
dec
dec
push
xchg
xchg
out
mov
jno
push
loope
in
xchg
leave
test
movsb
mov
jbe
mov
mov
rorb
mov
ljmp
inc
movsl
cmpsl
inc
pop
xor
int
roll
pop
mov
xor
or
adc
mov
and
mov
shll
lret
lods
lods
mov
xchg
inc
dec
and
inc
jecxz
lret
dec
roll
dec
dec
sub
popf
popf
inc
xor
divps
push
mov
mov
lea
aas
les
shll
pop
inc
test
pusha
add
lret
inc
popf
dec
mov
jl
and
insl
mov
push
pop
ror
popa
or
insl
push
inc
mov
aam
and
dec
aaa
pop
rol
cmpsl
js
push
push
or
jl
and
dec
cmp
pop
shlb
and
mov
dec
inc
mov
jl
mov
jp
dec
push
or
jle
movsl
outsl
mov
cs
es
dec
sbb
or
sahf
dec
xchg
sbb
movsb
dec
inc
xchg
mov
int3
stc
or
or
push
adc
or
lcall
adc
out
mov
std
dec
or
adc
pop
fstp
mov
xchg
push
jecxz
lds
decb
shr
adc
pop
xchg
ss
jl
jecxz
inc
inc
or
popf
int3
inc
xchg
rol
int3
sti
ss
adc
pop
dec
arpl
in
jge
mov
lret
jbe
loop
iret
push
cmpsb
inc
dec
lods
mov
and
inc
leave
mov
dec
loopne
pushf
xchg
sbbb
movsb
dec
inc
dec
fisttpll
adc
shrb
inc
int3
mov
jb
shrl
xchg
popa
jl
mov
xor
push
mov
lea
mov
jecxz
dec
leave
inc
cmpsb
xchg
and
inc
dec
ss
xor
push
add
pop
into
mov
dec
xchg
or
dec
inc
fwait
mov
sarl
or
jecxz
dec
mov
daa
or
xor
call
leave
and
inc
inc
adc
lea
rorl
and
dec
mov
xchg
sub
dec
inc
inc
movl
add
lret
aaa
into
cs
es
jle,pt
iret
push
xor
inc
pop
mov
xor
mov
push
or
lret
ljmp
out
mov
int
inc
jl
mov
jb
pop
mov
push
or
xchg
adc
movsl
pop
or
out
xor
int
push
mov
mov
int3
cmp
cmp
shrl
popa
dec
xor
ss
repz
push
mov
sarl
lret
push
adc
insb
or
mov
xor
inc
adc
mov
jecxz
adc
adc
lret
mov
leave
cmc
rcr
pop
inc
xchg
nop
ds
inc
adc
push
lret
xor
loop
push
inc
test
repnz
lret
mov
mov
sbb
mov
push
int
mov
shrl
fadds
mov
aaa
adc
mov
jb
push
push
push
bswap
or
insb
leave
inc
mov
shl
loopne
or
int3
pop
mov
lods
ret
movsl
xchg
mov
shrl
popa
sub
jbe
lret
mov
mov
mov
rcll
call
aas
jp
push
sarl
jae
leave
push
mov
cmpsb
repnz
mov
mov
mov
int3
sarb
jecxz
lods
leave
and
inc
pop
ret
cmpsl
mov
push
xchg
xchg
push
leave
mov
inc
dec
lods
daa
pop
nop
cmp
pushf
loopne
dec
xlat
mov
ljmp
jl
lock
into
jb
mov
bound
int3
jns
mov
lds
xchg
push
fwait
enter
stos
dec
nop
push
dec
pop
inc
pop
push
mov
dec
jbe
inc
mov
cmp
pop
xchg
inc
insb
js
mov
sti
push
sub
movsb
movsb
lea
ret
xchg
loopne
dec
mov
push
je
mov
test
push
add
gs
jns
push
mov
nop
and
adc
inc
push
adc
popa
test
idiv
push
mov
out
push
rclb
outsl
pop
shr
test
push
mov
into
cmp
leave
and
mov
mov
popf
inc
shll
mov
jmp
mov
dec
repnz
int3
cmp
mov
cmp
loopne
int
mov
pop
sbb
mov
addb
pop
cmp
rcrb
mov
mov
inc
dec
lret
leave
mov
jno
insl
add
mov
dec
dec
stos
inc
adc
int
fwait
repnz
dec
cmp
sarb
dec
push
push
xor
dec
into
mov
inc
fists
enter
xor
and
scas
xor
stc
pop
mov
mov
dec
sti
sarl
cmp
push
cmp
xor
into
mov
cli
sbb
inc
sbb
cmpsl
dec
insl
mov
enter
dec
and
stos
or
rclb
mov
jle
add
and
mov
iret
pop
sti
push
dec
push
add
lds
aaa
into
and
push
lods
xchg
lock
push
dec
sub
stos
add
inc
into
loopne
lods
mov
push
inc
mov
push
shlb
and
inc
or
inc
mov
clc
ds
pushaw
les
rorb
mov
ret
leave
mov
pop
mov
fstps
int3
mov
shrb
push
inc
xchg
push
insl
jge
add
iret
insl
imul
rol
mov
mov
cs
rclb
out
xchg
jl
or
dec
cmp
mov
insb
pop
insl
nop
push
inc
lret
pop
fnstcw
jo
dec
jo
iret
es
push
xor
int
stc
imulb
xchg
or
mov
dec
mov
in
dec
jns
push
fwait
adc
push
xor
ret
inc
cltd
loope
xchg
inc
cwtl
dec
and
push
mov
xchg
int3
push
push
sub
pop
jns
push
mov
dec
lods
imul
or
xor
mov
dec
mov
adc
leave
nop
jl
mov
or
es
push
xor
rcll
loopne
pop
push
inc
mov
push
mov
int3
inc
pusha
mov
loope
xor
sbb
lds
rcll
sbb
push
stos
jge
addr16
push
inc
mov
cmp
mov
xchg
mov
inc
imul
lds
and
das
lret
shlb
push
dec
roll
adc
push
iret
jbe
lret
into
dec
pop
add
sti
rorl
loope
push
rcrl
lds
ror
inc
rcr
int
push
sbbl
sti
into
push
test
shrl
mov
stos
inc
cwtl
shrl
mov
mov
rclb
insl
dec
rorb
mov
push
mov
stc
mov
ror
mov
jo
roll
movsb
shrl
lods
lds
jbe
or
mov
mov
and
xchg
add
les
js
jb
adc
mov
cwtl
adc
inc
ds
xchg
mov
lods
adcb
mov
cmp
push
inc
inc
nop
jl
adc
and
adc
es
aas
rcrl
adc
nop
jl
adc
mov
xor
aas
push
loope
inc
je
adc
js
leave
adc
lock
inc
into
leave
loopne
shl
sahf
shlb
dec
cmp
nop
nop
jl
adc
jo
leave
pusha
cmpsl
push
lock
inc
inc
xor
and
rclb
add
repz
mov
leave
cmpsl
shrl
sahf
ret
es
cmp
xchg
movsb
inc
xor
sbb
mov
or
mov
repz
lods
pop
mov
scas
cmp
subl
xchg
rcl
inc
rolb
pushf
xchg
dec
arpl
enter
dec
and
adc
dec
adc
mov
jae
mov
adc
cmp
ror
cmp
ret
mov
bound
inc
push
cmp
push
sbb
or
rclb
rolb
adc
cmp
cmp
dec
mov
push
inc
mov
rorb
mov
inc
aaa
scas
xchg
adc
rolb
add
aas
mov
mov
or
ds
mov
cmp
inc
or
mov
repz
dec
xor
aaa
rorl
mov
and
cmp
or
push
inc
mov
cmp
out
add
lret
mov
mov
ret
inc
enter
mov
push
int
inc
push
mov
mov
rorb
mov
es
inc
leave
repnz
mov
push
add
test
cmp
cmp
dec
inc
leave
and
cmp
and
rolb
mov
into
inc
dec
mov
jae
enter
std
popf
sahf
fisttps
cmp
xor
iret
iret
add
ret
insl
scas
mov
nop
xchg
pop
in
xor
push
sub
xchg
mov
test
outsb
cmp
xor
loope
mov
in
lret
push
mov
mov
dec
aas
mov
jecxz
jecxz
pop
out
dec
and
cs
incb
dec
pop
in
mov
push
aaa
fdivs
dec
mov
scas
mov
mov
stos
jno
outsl
bnd
xchg
repz
mov
sub
in
js
mov
notl
scas
cmp
enter
cwtl
repnz
inc
rol
rcll
dec
fnsave
push
jle
xchg
repnz
or
shrb
cmp
push
mov
and
outsl
add
dec
pusha
orl
test
rclb
push
data16
pop
add
cmp
mov
jb
into
inc
out
lea
stos
mov
jb
fxch
ds
inc
adc
mov
imul
mov
xchg
dec
ret
xchg
jnp
into
cmpl
inc
push
xor
mov
push
inc
add
mov
xor
pop
adcl
adc
rcl
or
xchg
sub
lds
xchg
xor
das
nop
mov
mov
pop
repnz
rolb
movsb
push
pop
or
daa
fmull
int
inc
xchg
adc
pop
je
jle
and
in
add
aad
nop
xchg
ljmp
push
into
les
sub
adc
cmpsb
movsb
subl
push
mov
mov
pop
and
andl
dec
dec
bound
je
mov
mov
push
pop
and
or
int3
jb
and
repnz
xchg
adc
popf
gs
xchg
std
pop
mov
adc
dec
push
and
mov
push
inc
xchg
mov
mov
dec
call
popa
dec
aaa
mov
push
push
jecxz
and
push
jp
mov
pop
cmpsl
cmp
scas
push
xchg
aas
nop
xor
or
inc
loope
push
xor
xor
or
push
xchg
xchg
push
cmpsb
clc
dec
adc
inc
or
mov
popa
loop
dec
jne
std
sub
cltd
jnp
filds
mov
pop
je
loope
popa
dec
mov
pop
nop
scas
push
pop
enter
outsl
push
fidivl
into
imul
inc
int
jmp
adcl
mov
inc
sbb
jns
jb
loope
int
add
pop
inc
jl
xchg
inc
jno
imul
andl
loopne
pop
mov
push
sahf
call
inc
jle
cmp
add
into
inc
fucomi
lea
push
cmp
dec
dec
dec
adc
mov
insb
bound
repnz
push
xchg
xchg
dec
jns
subl
dec
cmp
popa
scas
push
mov
lds
ret
movsl
push
add
push
pop
xor
inc
stos
xchg
xchg
sbb
push
jo
mov
in
fisttps
das
int
push
inc
icebp
fsubl
push
int3
or
push
dec
inc
adc
push
mov
scas
adc
leave
rcl
and
mov
ss
mov
sub
or
lods
xchg
push
mov
pop
pusha
sub
test
add
lock
jge
cmpb
mov
jp
addr16
adc
and
dec
outsb
pop
rcrl
cld
inc
mov
in
inc
jecxz
cmc
aam
ja
dec
popf
inc
rcrb
push
cmpsl
movsb
sub
out
js
ss
xor
push
push
lds
outsb
push
daa
fdivrs
pop
stc
mov
sub
mov
in
push
xchg
dec
fistps
xchg
lock
stos
xchg
ljmp
dec
pop
and
pop
mov
or
loop
xor
popa
into
loopne
adc
jge
dec
jb
cmp
or
add
push
rorb
dec
and
xlat
shrl
dec
jbe
outsb
sbb
popa
cmp
or
dec
jl
adc
int3
into
push
popa
mov
and
and
adcb
add
inc
pop
xchg
iret
cmp
and
and
lods
js
xchg
xchg
mov
push
mov
in
and
mov
in
xchg
in
test
test
fsubs
add
bound
imul
sahf
push
dec
cmpsl
ds
shl
roll
cmpsb
ja
sub
jns
inc
dec
rol
push
dec
inc
decl
mov
pop
lds
repz
mov
lea
cmpsb
push
out
xor
mov
dec
dec
jo
mov
mov
cmpl
les
push
mov
mov
adc
mov
sbb
mov
add
cmp
push
push
xchg
dec
clc
ds
jbe
nop
sub
shr
jnp
sahf
lret
xchg
xchg
sub
fcoms
xchg
cmpsl
mov
into
push
mov
adcb
ds
xchg
inc
into
adc
mov
popa
movsl
inc
jl
adc
in
cmp
jg
shll
test
inc
mov
xor
lods
rorl
inc
xor
imul
rorb
iret
mov
adc
xor
lea
jecxz
ds
nop
or
clc
mov
rolb
dec
adc
arpl
into
push
mov
lds
jp
shl
push
jp
jecxz
js
pop
jno
testb
xchg
or
push
xchg
dec
lret
adc
mov
iret
jge
pusha
xchg
adc
in
nop
inc
jb
pop
aas
push
xchg
ds
mov
iret
lods
popa
loope,pt
in
out
sub
lods
push
and
push
dec
int
cmpb
outsl
test
scas
dec
aas
int
push
addl
in
mov
pop
xchg
mov
pop
test
in
cmp
aad
das
mov
aaa
or
movsb
add
pop
add
outsl
scas
jnp
mov
xchg
push
les
push
shrl
sahf
shll
or
dec
andb
xchg
push
adc
icebp
mov
mov
nop
xchg
outsl
sub
mov
rcrb
mov
push
inc
mulb
add
out
enter
pushf
lods
fildll
mov
or
mov
out
jg
mov
or
jge
sbb
or
ret
mov
adc
out
popf
in
xor
jl
push
outsl
or
sbb
popf
lea
xchg
sbb
nop
ret
rcrl
xchg
fistl
sub
push
push
test
add
ror
cmpsl
fistps
xchg
and
cmpsb
adc
push
roll
mov
call
mov
in
lret
js
dec
inc
or
xorb
out
mov
xchg
in
jle
sub
push
enter
pop
stos
push
push
or
pop
mov
scas
mov
xchg
push
dec
test
cmp
ret
sbb
stos
dec
scas
mov
lods
dec
gs
xchg
ljmp
rcl
cmp
rolb
ret
mov
push
shl
roll
leave
repz
cltd
dec
push
test
outsb
dec
leave
mov
inc
leave
add
mov
or
pop
xchg
xchg
xchg
ljmp
sarl
xchg
rcll
mov
nop
test
shrb
loope
nop
jnp
cmp
dec
sub
mov
inc
or
int
mov
stos
rclb
leave
iret
mov
rcrb
fisubl
cmp
rorb
rorl
mov
cmpsl
pop
push
das
mov
cmp
mov
adc
cmc
icebp
pushf
jle
mov
dec
adc
push
jle
and
adc
adc
inc
stos
mov
leave
cmc
sub
and
pushf
dec
jns
dec
add
mov
dec
jp
fiaddl
clc
mov
lret
jle
adc
sub
mov
dec
inc
xchg
jle
fmull
rorl
jo
cltd
adc
xchg
dec
rorl
and
enter
int3
shll
outsb
lods
or
xchg
cli
movsl
xchg
sbb
adcl
rcl
out
jp
jl
insb
push
xchg
mov
jbe
scas
and
inc
mov
dec
sbb
cmpsl
test
inc
push
adc
jle
push
adc
rcll
inc
xor
adc
lods
mov
jmp
aas
push
inc
mov
rol
inc
cmp
mov
rcl
nop
bound
es
rorb
adc
fdivrl
jnp
dec
cs
in
add
and
push
dec
xorb
cmp
test
outsl
mov
pop
jno
lcall
inc
shl
movl
divl
scas
aas
push
inc
icebp
roll
jmp
pop
int3
es
cmp
lahf
adc
lods
dec
adc
shlb
rolb
insl
pop
ss
lods
rcll
ja
nop
mov
push
cmpsl
insl
stc
lret
mov
leave
nop
sbb
sarl
sbb
adc
lods
mov
cmp
push
sbb
in
adc
inc
add
ror
sti
repnz
int
cmp
scas
mov
stos
into
jge
xchg
pop
sbb
push
xchg
fwait
movsb
or
into
adc
mov
adc
jge
mov
mov
cmp
push
scas
lods
push
mov
icebp
mov
nop
push
jmp
shr
mov
xchg
jno
popf
mov
dec
iret
inc
cmp
out
iret
sub
int
enter
push
jb
lods
adc
lahf
cmp
push
fisttpll
rorl
outsl
mov
or
and
mov
adc
push
dec
mov
stc
lea
rorl
leave
or
sarl
ljmp
rdpmc
jmp
push
ret
test
mov
push
mov
adc
aas
dec
imul
xor
sbb
xor
cmp
lock
mov
push
mov
mov
dec
lea
cmp
sub
mov
inc
sarl
fmulp
clc
or
sbb
aad
fnstcw
push
adc
into
ja
test
movsl
scas
push
lahf
pop
sub
mov
leave
test
std
out
into
scas
mov
insb
fwait
scas
out
push
push
rol
dec
rorl
mov
add
imul
ror
mov
or
in
lret
mov
std
push
scas
jl
xchg
mov
sub
dec
mov
cmp
lret
or
ds
dec
cmpsl
lahf
or
inc
nop
dec
or
mov
rcrl
sar
jge
fstl
mov
inc
adc
rcr
add
int
mov
xchg
insl
sti
mov
imul
std
mov
scas
mov
dec
int
dec
or
jne
rolb
mov
mov
and
add
xor
xchg
pop
pusha
je
nop
xchg
inc
and
cwtl
xchg
imul
lcall
inc
pop
and
outsb
pop
outsb
and
cmpl
inc
inc
cmp
xchg
iret
mov
cltd
inc
outsl
pop
inc
push
sub
mov
test
dec
cmp
adc
test
mov
stos
dec
and
inc
aaa
pop
jle
xchg
jle
shll
or
xchg
in
adc
push
fistps
xchg
adc
inc
ror
rcr
popf
jae
mov
leave
adc
cmc
js
adc
insl
pop
cwtl
or
fsts
movsb
mov
lret
arpl
adc
pop
mov
in
xor
jl
mov
xchg
cmpsl
or
repz
sti
push
xchg
or
sbb
dec
stos
jno
adc
ret
dec
and
jecxz
push
cmp
int
mov
mov
push
push
dec
sarl
cmp
iret
mov
mov
push
mov
cmp
mov
dec
xchg
xor
jb
mov
cmp
fistps
push
dec
and
lret
test
mov
rorl
jbe
jns
cs
dec
push
lret
inc
jae
and
lods
lahf
jno
push
dec
mov
pop
lea
adc
mov
push
rorb
lods
mov
rcll
xchg
leave
push
rcl
push
mov
mov
lea
leave
xchg
mov
nop
xor
ficomps
iret
insb
xor
xor
les
lock
mov
xchg
lods
mov
test
stos
push
cmp
mov
mov
push
mov
int3
xor
stc
adc
inc
test
dec
test
xor
mov
dec
xor
fsubrp
xchg
fld
scas
inc
dec
test
adc
or
nop
in
inc
xorb
push
iret
xchg
mov
nop
sub
insb
lods
xchg
or
xchg
les
test
and
push
test
mov
lea
mov
lods
mov
jmp
lods
shll
adc
sbb
jno
or
adc
inc
jp
xor
lahf
enter
xchg
sub
es
mov
dec
icebp
xor
orl
add
adc
cmp
popa
xchg
cli
mov
or
pusha
cmp
incl
les
lea
lods
or
test
test
iret
inc
xchg
mov
out
xchg
mov
adc
icebp
xor
mov
cmp
push
mov
inc
loop
iret
jo
lcall
add
sahf
jnp
jecxz
iret
cmpsb
dec
jge
popa
rclb
push
pop
mov
jnp
ret
popa
nop
imul
jmp
lea
push
bound
or
and
dec
ss
roll
mov
xor
mov
inc
movsb
test
mov
sarb
rsm
in
dec
leave
xchg
xchg
xor
pop
jmp
mov
mov
out
or
inc
jno
push
testl
xor
repnz
sbb
adc
xchg
dec
adc
scas
inc
jno
xchg
mov
cmp
stos
push
dec
rcrl
jge
adc
inc
loope
or
mov
ja
test
xor
rorl
dec
or
popf
aas
push
push
add
shrl
gs
push
push
lods
popa
mov
push
xchg
test
inc
scas
dec
cwtl
out
js
addr16
int
jle
jbe
testb
into
nop
xchg
xchg
hlt
pop
test
enter
mov
or
or
mov
loope
push
pop
lds
xorl
je
push
cmp
into
outsb
push
jbe
lods
mov
rclb
int
push
in
push
mov
outsl
xor
nop
fnstenv
xchg
jecxz
cmp
xchg
lods
inc
add
mov
cld
lret
add
psrlq
in
iret
mov
adc
dec
popa
push
jp
insl
clc
dec
psadbw
dec
aaa
jb
lea
mov
mov
mov
or
add
mov
lret
decb
into
or
mov
xor
rcl
pusha
fcmovne
push
jne
rorl
enter
or
lcall
sahf
xchg
mov
adc
cwtl
test
mov
add
mov
xor
cmp
xchg
jno
xor
cmc
cmp
xor
or
or
imul
or
mov
cmp
pushf
ret
rorl
outsl
xchg
xchg
push
jb
mov
adc
sub
jb
push
push
dec
loopne
pusha
mov
or
cmp
mov
scas
jno
push
push
lods
dec
pop
dec
dec
and
sbb
add
into
mov
push
repz
lods
lods
loop
and
push
or
mov
xchg
add
add
leave
lret
or
lret
push
inc
insb
jno
or
sbb
aas
push
push
iret
push
adc
push
dec
adc
xor
sbb
dec
pop
addb
je
inc
int3
push
push
test
push
dec
imul
xchg
or
dec
xchg
and
mov
adc
xchg
and
xchg
mov
mov
push
pop
dec
js
push
nop
clc
mov
mov
xlat
inc
dec
cs
xor
jmp
sarl
addr16
lods
dec
scas
xchg
mov
dec
push
sbb
add
rcrb
mov
pop
addr16
xchg
iret
shrl
nop
jmp
inc
scas
mov
push
xchg
inc
ret
adc
cs
dec
scas
sub
rclb
rcrl
mov
mov
mov
jge
iret
mov
enter
shlb
or
jno
fwait
dec
xchg
or
adc
push
dec
sarb
or
jo
ret
outsl
inc
outsb
dec
inc
jecxz
mov
lods
or
enter
aaa
rcl
ficomps
add
sarl
dec
mov
mov
cld
imul
out
xor
dec
dec
lds
rclb
das
ret
xchg
test
mov
shrl
shrl
leave
adc
mov
dec
adc
movsb
pusha
mov
in
jb
mov
cmp
cwtl
or
push
jo
and
adc
cmp
xchg
dec
mov
jp
pop
xor
xchg
adc
push
lret
cmpsb
outsb
in
lods
imul
leave
push
or
ds
xor
jns
cmp
rorl
mov
mov
xor
xor
xorb
jl
sub
mov
dec
xor
xchg
jp
xor
jg
leave
popf
or
enter
or
mov
iret
insl
or
leave
push
xor
inc
dec
jp
bound
rcl
or
rolb
fldl
fildl
dec
lret
popf
fdivrs
shr
and
cmp
ds
in
pop
mov
std
mov
inc
push
shlb
or
dec
into
les
fsubrl
sahf
test
rorb
loope
cltd
popa
mov
pusha
addr16
das
mov
shl
andb
mov
lret
mov
mov
loopne
scas
and
mov
jns
mov
scas
xchg
push
add
ret
int3
and
jno
call
lcall
xor
inc
lret
mov
mov
push
inc
aas
mov
adc
popa
ret
les
push
jp
aad
inc
adcb
xor
pfmin
adcb
mov
mov
scas
xor
rcll
inc
jl
rol
jge
xchg
jg
sub
jb
adc
mov
mov
adc
mov
cmp
lods
shll
lret
mov
mov
jo
rcll
dec
and
into
xor
inc
lcall
pushf
scas
cmp
adc
xor
icebp
dec
jp
js
mov
or
daa
std
test
dec
cs
dec
jb
sbb
insb
fmuls
pop
pop
push
les
lods
rolb
add
negl
lea
inc
sub
push
push
scas
leave
cmp
inc
rcl
dec
push
mov
cmp
push
xchg
push
xor
dec
inc
jno
mov
pusha
dec
mov
mov
pop
pop
les
in
lahf
lods
add
ret
push
lret
mov
popf
mov
dec
mov
dec
mov
jo
cltd
push
dec
push
add
scas
add
adc
add
into
dec
into
mov
popf
mov
test
cmp
lahf
rcl
inc
or
xor
push
stc
sarb
mov
int3
xchg
dec
push
xchg
iret
xchg
xchg
orb
pop
jecxz
add
mov
jbe
push
into
shl
xchg
in
push
cmp
xor
xor
inc
mov
xor
aam
inc
mov
mov
push
popf
sarb
add
push
rorl
inc
sahf
jl
xor
adcb
mov
xchg
dec
xor
test
inc
nop
mov
rcrl
jb
movsl
aaa
enter
adc
stos
dec
mov
popf
iret
out
or
inc
mov
scas
mov
out
js
inc
push
mov
rorb
pop
xchg
pop
push
enter
rorb
push
jl
xchg
push
int
or
lods
mov
dec
add
push
push
inc
rcrl
imull
rcrl
xor
in
or
mov
ret
leave
xchg
jp
adcb
int3
or
xchg
mov
jns
dec
xchg
dec
xchg
push
scas
pop
xor
lods
mov
js
cmp
sarb
mov
dec
jbe
ds
dec
mov
or
xor
roll
mov
loopne
sbb
or
mov
push
scas
jecxz
and
dec
in
jb
and
mov
mov
or
dec
adc
push
jns
in
inc
dec
dec
jmp
or
jl
or
cmp
mov
mov
stos
aam
fwait
enter
rolb
dec
in
and
std
mov
add
cmp
popf
dec
orl
add
in
dec
rorl
mov
iret
inc
cwtl
xchg
rcll
dec
inc
ret
js
jmp
pusha
in
mov
cs
cmp
cmp
rolb
in
sub
mov
orb
inc
mov
out
fldl
push
lea
fcompl
insb
mov
int3
int
dec
fwait
sahf
aaa
scas
add
xchg
adc
adc
cmpsl
pop
in
ret
int3
mov
dec
test
in
push
xchg
xchg
inc
add
push
push
mov
adc
outsl
pop
out
lods
jb
les
rol
aaa
insb
cltd
or
jbe
jo
sarl
es
push
push
leave
xor
sub
popf
push
in
mov
mov
mov
jp
mov
sar
jle
cld
std
lahf
adc
shl
mov
lahf
push
clc
mov
inc
push
mov
stos
jae
adc
and
leave
or
adc
sbb
shr
push
adc
push
int
inc
shrl
sub
mov
test
leave
dec
mov
lret
inc
aad
push
das
jno
lods
iret
cmp
xchg
or
xor
xchg
push
cmp
or
incb
jl
jo
xchg
xchg
dec
adc
inc
lock
jl
jmp
sarl
rorb
push
dec
mov
into
sahf
dec
cmp
mov
inc
mov
call
jmp
cltd
test
or
mov
rol
add
sbb
nop
sub
push
dec
into
xor
les
mov
xchg
push
mov
inc
or
loop
ds
mov
dec
cmpsb
int
xor
push
call
sahf
dec
xchg
adc
push
popa
mov
rcll
mov
or
sub
sub
rcr
mov
rorl
or
and
sub
sahf
xchg
mov
repnz
add
ror
pop
pop
xchg
addr16
mov
mov
mov
push
dec
mov
pop
xor
push
je
stos
or
lahf
xor
dec
xor
movsb
push
push
adc
leave
pop
shr
cmpsb
lahf
lahf
lret
xchg
mov
repnz
stos
mov
jl
mov
xchg
xchg
or
xchg
sarl
cmpb
ret
repz
or
mov
lods
fisttps
lahf
push
bswap
ret
dec
fnstsw
into
ror
pop
rorl
aam
outsb
jg
add
mov
iret
inc
cltd
enter
dec
lock
push
mov
pop
mov
fsubrp
jg
or
cmp
sbb
ret
and
mov
icebp
fsubl
decb
mov
lea
xor
push
mov
ret
fdiv
xchg
movb
adc
into
cmp
mov
mov
inc
pop
clc
inc
cmp
and
test
lahf
xchg
rclb
and
daa
imul
jns
jno
sub
push
xor
jo
and
xchg
enter
shll
rclb
notl
dec
pusha
push
sahf
mov
cltd
outsl
dec
into
mov
imul
mov
mov
jno
insl
movsb
insl
test
add
in
jne
or
or
test
shrl
mov
jnp
xchg
mov
xchg
mov
scas
lea
cmp
test
popa
mov
mov
leave
adc
adc
rorb
xchg
inc
inc
jno
iret
xchg
jae
iret
add
push
xchg
into
aaa
addb
push
mov
and
imul
shlb
xchg
scas
or
dec
mov
cmp
jo
pusha
inc
adc
lret
inc
adc
enter
rcr
iret
adc
push
push
push
mov
mov
inc
cld
pushf
push
jo
xchg
xor
xchg
mov
xor
push
adc
dec
ja
push
dec
nop
pop
std
nop
xchg
inc
jg
push
pusha
add
dec
lcall
adc
adcb
ror
rclb
jb
cltd
leave
cmp
ror
or
je
iret
ja
cs
or
loope
out
lret
mov
inc
adc
jne
mov
jge
jbe
sub
scas
push
test
cs
push
jle
cs
out
adc
int
jecxz
jae
lock
lea
test
inc
sbb
push
rclb
mov
or
rcll
lcall
xchg
dec
movsl
cmpb
mov
xchg
clc
lret
mov
mov
inc
jno
adc
int
push
mov
jl
lds
mov
jnp
lret
pop
lcall
je
sarb
lahf
cs
cmp
ret
xchg
push
rcr
push
inc
mov
sarl
ret
dec
in
repz
or
rclb
fisttpll
pop
sbb
dec
lret
shr
shrb
sub
push
cmp
mov
lods
les
adcl
add
xchg
jecxz
push
pop
repz
nop
push
add
lds
push
and
outsl
adc
int3
cmp
cmc
das
adc
dec
jecxz
push
or
fisttpl
std
xchg
mov
and
nop
mov
push
adc
into
push
int
mov
js
inc
xchg
or
rcl
xchg
add
lahf
pushf
or
dec
lods
mov
rcll
sbb
mov
cs
into
xchg
mov
mov
mov
push
roll
or
xchg
addb
push
jge
subb
or
jae
mov
mov
rol
adc
scas
dec
rcrl
shlb
loope
adc
jp
jo
push
add
mov
iret
test
dec
lret
dec
aad
mov
push
or
test
adc
mov
mov
cmp
rcll
inc
inc
pop
jnp
inc
jl
xchg
test
into
rcrl
mov
cmp
std
add
or
pop
push
nop
mov
xchg
push
inc
iret
addl
xchg
cmp
out
cmp
por
push
cmp
adc
inc
xchg
dec
mov
dec
adc
iret
mov
xchg
popa
iret
insb
mov
leave
mov
jp
rorb
adc
xor
test
mov
mov
xchg
and
or
rcll
inc
mov
jl
inc
int
xor
mov
out
loopne
inc
add
mov
inc
fldl
or
rorb
sbb
arpl
lods
mov
mov
stos
mov
cmpl
inc
mov
mov
sti
out
inc
inc
xchg
lds
addr16
dec
push
repnz
mov
outsl
shrl
inc
mov
subl
int
dec
xchg
nop
inc
nop
xchg
jecxz
dec
sub
int
lret
add
scas
in
pusha
inc
mov
iret
jp
out
or
dec
xchg
mov
push
xchg
arpl
mov
lea
pop
lods
sarb
push
rol
jae
mov
repz
mov
gs
xor
in
pop
dec
inc
scas
jo
insb
insb
inc
push
mov
lods
or
dec
movsl
mov
xorl
std
jo
jl
fdivrl
rorb
push
xchg
dec
push
lods
mov
dec
pop
cmp
rcrl
add
das
mov
in
mov
scas
mov
xchg
mov
xchg
fdivs
cmp
ret
xor
jle
cmp
mov
into
and
fildl
enter
or
xor
xor
arpl
shrl
lds
mov
test
sbb
cmp
and
fnstenv
inc
xchg
stos
adc
aam
or
adc
inc
mov
xchg
or
dec
dec
shlb
add
dec
test
and
mov
inc
into
and
jbe
ret
rolb
in
inc
push
push
push
xchg
jno
cmp
push
icebp
rcll
imul
jo
mov
scas
mov
rorl
stos
push
aaa
loope
push
mov
mov
inc
xchg
push
enter
inc
pop
iret
jne
fiaddl
int
lret
out
iret
xchg
mov
adc
xchg
xchg
xchg
movsb
lds
pop
lcall
or
dec
sub
add
aaa
xchg
cmp
in
es
rdmsr
dec
adc
enter
ror
sub
jge
xor
mov
and
adc
popf
xchg
dec
sbb
leave
add
sub
jge
adc
roll
stos
mov
lret
scas
outsl
imul
mov
dec
or
push
nop
test
xor
scas
aad
or
lcall
xchg
xchg
cli
or
push
inc
in
dec
dec
test
enter
dec
push
clc
imul
xorl
jno
ret
and
push
xor
push
test
or
pusha
cwtl
into
int3
xchg
sbb
push
test
sub
ret
xchg
inc
pushf
andl
inc
inc
mov
shll
inc
cmp
sub
push
xchg
clc
mov
pop
ret
mov
lret
push
call
inc
fiadds
ret
add
xor
ret
mov
pushf
xor
and
out
lods
xchg
mov
xchg
xchg
sub
scas
push
rcrb
loop
dec
xchg
stc
inc
iret
lahf
xor
out
dec
lods
adc
cmp
and
add
test
dec
xchg
xor
or
std
mov
add
mov
pushf
inc
or
adc
xor
and
add
push
inc
xlat
loop
pop
xor
xchg
xchg
mov
or
add
dec
mov
dec
jae
mov
dec
int3
or
xchg
cltd
repz
inc
stos
mov
add
leave
cmp
sub
stc
leave
sub
repnz
inc
scas
iret
jg
or
insb
add
mov
dec
dec
and
mov
mov
repnz
inc
and
test
in
sub
push
and
gs
enter
shlb
lea
mov
std
or
cltd
add
push
inc
push
adc
inc
dec
fs
fdivs
cmp
popl
xor
adc
dec
mov
adc
xchg
xor
ja
inc
mov
dec
push
roll
rcrl
stos
mov
dec
test
xchg
adc
test
adc
inc
jmp
sub
ret
lret
push
mov
ficoml
mov
jl
clc
pop
push
dec
xchg
loop
dec
les
xchg
fdivl
test
pop
dec
mov
pushf
iret
inc
fsubs
sbb
out
jno
sub
cli
add
xor
lods
xchg
jbe
xchg
rclb
adc
pop
test
mov
jp
sub
in
rorb
lods
sti
push
jle
pop
cmovbe
xor
dec
pop
dec
rorb
mov
or
mov
xor
les
cmpl
jo
jl
dec
adc
dec
arpl
adc
push
out
xchg
push
push
pop
sbb
push
orb
call
rcll
push
das
in
and
int3
mov
iret
imul
jp
add
popa
outsb
sbb
mov
out
faddl
mov
popa
cwtl
inc
lock
push
xor
inc
xchg
and
inc
test
jge
push
fists
and
dec
sbb
mov
jg
jae
into
or
scas
dec
jge
popa
inc
shrl
lret
dec
sbb
lock
mov
jle
movsb
xchg
pusha
fcoms
outsb
lret
scas
add
leave
cmp
and
adc
lahf
pop
mov
test
mov
cmp
sub
dec
push
popf
push
mov
mov
fdivrl
loopne
xchg
int
test
xchg
imul
rclb
sub
pop
sahf
repz
rcl
mov
jl
inc
sub
inc
shl
mov
iret
enter
leave
and
add
scas
mov
lahf
movb
add
loope
insl
cmp
into
xor
gs
or
scas
jno
jo
mov
push
std
pop
test
jle
cltd
fcmovne
adc
jmp
mov
mov
dec
into
xchg
dec
dec
scas
lret
mov
insb
imul
rorl
js
jle
rorl
cs
lahf
jge
shl
arpl
lock
push
pop
inc
aas
loopne
repz
popf
int
inc
cmp
int3
pop
sahf
fucomp
pushf
lea
repz
jp
inc
rcrl
push
repz
dec
or
adc
rcrb
mov
inc
adc
jecxz
repz
popa
push
pusha
adc
pop
jae
rcr
push
mov
sahf
lods
add
out
ljmp
mov
add
xchg
sbb
mov
lods
jg
out
ja
mov
loopne
fcomps
repz
or
loop
jp
sahf
inc
xchg
cmc
mov
gs
in
push
outsb
aad
mov
pop
inc
pushf
sbb
cltd
and
inc
pop
xchg
arpl
scas
dec
leave
rorb
mov
in
dec
pushf
adc
pop
fsubrl
in
jp
or
addb
cmpsb
jne
int
cmp
mov
scas
leave
fdivrs
inc
je
loope
rclb
and
aad
testb
push
test
mov
movsb
push
pushf
pop
jbe
or
add
jg
vpcmpeqw
sahf
std
fildll
or
inc
icebp
pop
mov
popf
fistps
mov
enter
lahf
mov
movsb
mov
xor
or
adc
push
sub
pop
int
loopne
xchg
fidivl
test
push
nop
dec
add
xor
scas
inc
test
sub
xchg
adc
rorb
dec
repz
xchg
pop
mov
jecxz
fwait
insb
test
jo
push
adc
xchg
xchg
jns
rorl
jns
sbb
push
orl
jo
or
mov
and
js
js
cmpsl
mov
mov
xor
xor
adcl
inc
sub
xchg
loope
cmp
frstpm(287
dec
scas
fs
test
xor
test
jl
lea
ss
jo
cmp
dec
scas
popa
cmpsl
or
icebp
in
rcr
fcompl
pop
outsl
jo
std
xor
icebp
in
xor
dec
cmp
ja
mov
cltd
lock
jno
in
sub
hlt
fstl
es
or
push
and
jl
nop
iret
inc
iret
mov
mov
pop
cmp
cmpsl
xor
mov
stos
aas
imul
pop
sub
mov
mov
push
in
nop
sti
xchg
mov
int
push
push
push
adc
frstpm(287
imul
stos
in
jns
or
mov
mov
mov
stc
push
and
sbb
jnp
mov
outsl
test
repz
mov
push
orl
cmp
xchg
test
jae
mov
fucomp
mov
std
mov
xor
add
out
test
dec
cmpb
cmp
sub
sub
test
mov
sbb
sub
push
dec
sub
js
push
repz
dec
cmp
mov
in
push
negl
cltd
or
xchg
sub
lods
das
inc
dec
cmp
dec
mov
in
dec
dec
mov
rolb
cmp
aas
mov
mov
jno
nop
inc
popa
push
ds
iret
nop
test
mov
and
ds
sahf
mov
xchg
lahf
out
imul
hlt
sub
mov
mov
xchg
repz
mov
dec
into
push
std
lds
dec
xchg
fmuls
push
das
jl
jg
xor
lahf
cmp
xor
xchg
push
push
cmpsb
clc
jbe
push
jno
push
jp
and
xor
push
cmp
scas
xchg
mov
cmc
mov
fstpt
movsb
mov
jmp
dec
cmp
int3
les
cmp
in
dec
mov
mov
lds
xchg
shlb
fstps
das
sub
faddl
pusha
aas
sub
and
test
pop
mov
popa
pushf
adc
pop
ret
call
movsb
add
repz
xchg
or
lods
test
clc
jge
nop
lahf
add
jle
js
rcrb
inc
sbb
dec
jns
fs
xor
jo
rolb
lds
sub
pop
jns
jns
addb
jnp
dec
loop
movsl
lahf
nop
arpl
pushf
mov
add
push
fs
xlat
push
sahf
ss
adc
xlat
repnz
out
movsl
adc
fwait
inc
scas
imul
mov
lahf
cmp
jg
fwait
in
inc
arpl
mov
and
cmpsl
scas
lahf
jg
lcall
pop
sub
jle
xchg
adc
mov
xchg
mov
jns
pop
push
ljmp
mov
ret
repz
cld
iret
xchg
in
or
loop
neg
stos
xchg
movsb
xor
or
jno
test
orl
mov
mov
aas
or
stc
push
cmp
jg
xchg
mov
push
aaa
adc
lahf
sti
or
add
cld
mov
sar
push
in
iret
in
dec
lods
es
sqrtps
cmp
pop
inc
stc
mov
adcl
sbb
mov
pop
xchg
mov
xor
pop
mov
jae
mov
mov
loopne
jae
xor
sarl
inc
mov
cld
jbe
rolb
xchg
push
dec
xor
cltd
nop
push
lods
adcb
mov
pop
lret
ds
jno
insl
mov
mov
hlt
divl
test
pop
inc
js
add
push
test
jns
dec
aam
xchg
shlb
push
aas
shll
cmp
xor
push
addb
repnz
or
adc
cmp
dec
sub
mov
dec
decl
xchg
sub
sbb
aad
int
movsl
jge
adc
jl,pt
test
in
adc
mov
dec
nop
leave
lret
jl
mov
loopne
cmp
mov
xchg
inc
jmp
mov
test
push
das
mov
smsw
adc
sub
push
mov
sub
mov
mov
aaa
pushf
xchg
lahf
into
out
iret
call
jae
inc
fdivr
shl
repz
jnp
or
scas
stc
sub
adc
sbb
sbb
pop
call
test
xor
outsl
pop
and
add
push
xor
iret
icebp
cli
mov
dec
dec
repz
out
dec
es
std
daa
jno
xor
add
push
aaa
sbb
inc
add
outsb
outsl
pop
out
imul
in
jo
pop
sub
mov
lret
cvttps2pi
sahf
int
sarl
lahf
sbb
rcll
or
imul
iret
aas
mov
repz
mov
mov
cmp
or
test
je
enter
mov
adc
repz
rcrb
dec
lods
cmp
movsl
rcl
sub
inc
iret
repz
pop
add
push
mov
sbb
mov
xchg
sbb
cwtl
xchg
sbb
int
rcll
out
add
lods
cwtl
shll
pop
repz
fstl
adc
xchg
rclb
pusha
scas
and
xchg
lea
xchg
inc
jno
je
lock
lea
mov
xchg
imul
mov
add
aam
lahf
sub
adc
push
inc
lods
cmp
movsl
jae
xchg
stos
lcall
cwtl
arpl
aad
pop
push
push
stc
lahf
xchg
je
orb
sub
cld
out
mov
gs
jecxz
rorl
dec
sub
xchg
and
pop
stos
push
scas
fsubr
shrl
sbb
scas
pop
stc
scas
inc
sub
pushf
jnp
inc
shlb
jg
lahf
loopne
div
cmc
rep
sahf
dec
pop
movsl
jg
stos
mov
and
sub
inc
test
xchg
or
rcrb
sbbb
and
popf
shlb
in
ljmp
cwtl
cmc
xor
sbb
add
pop
push
orb
cli
int
js
mov
repz
mov
lods
ljmp
xor
popa
xor
iret
std
mov
fisttpl
stos
pop
lea
push
ss
mov
mov
push
test
push
adc
xchg
jo
inc
mov
dec
mov
inc
loopne
cmp
ds
sti
aas
pop
xchg
or
pop
sbb
push
into
cli
cmp
cmp
xor
nop
inc
aaa
xor
xor
fcoml
mov
and
push
in
xor
in
mov
dec
push
lds
aas
movsb
sti
cmpsb
into
pop
lret
push
movsb
bound
cmp
adc
cmp
mov
sbb
sbb
jo
mov
push
outsl
pop
inc
sub
xchg
mov
pop
mov
sbb
js
andb
push
lret
push
shrl
dec
jle
jo
or
adc
or
jle
cmp
jecxz
or
scas
add
mov
dec
cwtl
xchg
insb
pop
mov
push
push
adc
mov
orb
xchg
push
push
bound
or
cmp
pop
cmp
jb
pop
sbb
cs
xchg
push
cmp
insl
movsl
jl
test
call
iret
fidivrs
iret
jecxz
xchg
lahf
push
insl
movsl
sub
or
dec
shll
testl
dec
pop
sub
and
pop
mov
dec
clc
test
imul
push
cmp
pop
imul
pushf
imul
xchg
imul
sbb
imul
js
sbb
or
test
repz
or
adc
jge
clc
mov
insb
inc
aas
pop
clc
xor
xor
dec
add
adc
mov
jecxz
faddl
js
inc
add
push
js
jbe
popa
mov
fmull
xor
leave
gs
loop
mov
rcl
decl
movsb
sbb
test
mov
inc
mov
into
jnp
mov
call
lret
jae
loope
and
nop
std
push
or
stos
fdivr
insb
loop
pop
dec
fldcw
outsl
inc
clc
sub
or
int
mov
or
cmpsb
sbb
xchg
inc
mov
ja
repz
mov
clc
push
xchg
mov
inc
popf
or
xchg
mov
icebp
aad
mov
jne
xor
mov
lods
pop
pushf
jnp
xor
outsb
test
and
mov
sub
pop
sbb
mov
or
jb
loope
sbb
inc
rorb
jge
out
mov
cmc
movsl
adc
in
add
xor
mov
sbb
xor
jg
lahf
pop
insb
repz
add
in
gs
sbb
pop
rcrl
sahf
lea
push
or
pop
repz
lahf
pushf
add
and
xchg
push
jns
push
jle
stos
xchg
out
add
jae
push
lods
pop
xchg
and
push
mov
mov
and
cmpsb
stos
xchg
dec
jns
enter
cmc
dec
repz
loopne
leave
int
orl
cld
loop
fistps
cltd
mov
stos
stos
jo
inc
cmp
adc
sarb
ficoml
push
imull
out
push
xor
mov
int3
rcr
pop
or
in
push
dec
cs
cmpb
mov
push
test
shrl
mov
pusha
xchg
sub
push
and
mov
dec
lods
jae
cmp
fxch
scas
mov
cltd
mov
scas
decb
fisttpl
std
mov
push
addl
lods
std
or
loope
xchg
pop
stos
pop
aas
jnp
xor
imul
je
pop
xor
pusha
lahf
push
xchg
sar
mov
pushf
dec
stos
aad
jbe
lahf
xchg
sub
pushf
movsl
mulps
nop
incl
lahf
imul
fbld
outsb
xchg
test
xor
xorl
cmp
xchg
dec
push
aaa
sub
xor
scas
xchg
clc
adcb
mov
outsl
and
in
pop
pop
xchg
enter
in
mov
fsubr
or
stos
fnsetpm(287
xor
mov
test
leave
out
jnp
shlb
rorl
gs
int
pop
sarb
and
cs
fdiv
ret
add
push
test
mov
in
xchg
pusha
jle
lods
iret
add
sahf
fnstsw
loope
sub
mov
push
scas
cmp
neg
cwtl
out
subb
push
push
mov
loop
popf
repz
mov
cli
sub
xor
jecxz
dec
ds
xchg
sti
mov
dec
xchg
mov
xor
lret
shlb
and
push
es
mov
nop
loop
loop
subb
imul
pop
push
lea
mov
popl
loope
pop
jnp
je
lds
mov
scas
mov
aaa
dec
mov
outsb
out
fstl
cmp
mov
mov
lcall
fwait
pushf
movsl
sub
sbb
mov
nop
jbe
js
xor
cmp
cwtl
xchg
popf
jg
test
cvttps2pi
jne
bound
push
pop
jno
movsl
push
cmp
xor
js
out
lods
insl
rcll
cmp
cmp
ss
in
lret
scas
cmp
push
cmp
in
popa
pop
jp
mov
mov
daa
cmp
mov
mov
mov
cmp
adc
cmp
add
ss
dec
sub
testb
es
dec
mov
dec
xlat
sbb
sahf
nop
cmp
mov
das
cmp
out
test
inc
cmp
and
mov
movsb
mov
pushf
jle
xchg
dec
mull
cmc
pusha
clc
fisttpl
addb
xor
push
stos
jae
mov
mov
fisubrs
pop
mov
dec
add
fistl
int
imul
mov
repnz
cmp
dec
dec
repnz
mov
dec
jle,pt
pop
mov
inc
pop
out
mov
std
popa
mov
sub
lret
in
cmpsl
jecxz
inc
imul
and
pop
orb
push
jmp
in
sub
push
xchg
leave
xor
jecxz
aad
pop
jne
out
add
xchg
pop
cmp
cmp
cmp
ret
jg
hlt
idiv
in
fstpl
in
addl
hlt
push
enter
push
lahf
insb
out
mov
adc
shl
push
test
mov
push
lods
std
adc
insb
push
call
inc
loop
sub
sbb
fdivs
xchg
lods
mov
jne
or
cmp
xor
jbe
xor
adc
push
orb
mov
iret
fwait
xchg
testl
cmp
data16
stos
xchg
xlat
jae
int3
outsb
add
or
fistps
jae
movsl
scas
xor
mov
jo
int
inc
bound
shlb
pop
mov
or
push
sbb
stc
push
bsf
xlat
movsl
test
leave
xor
sub
push
loope
mull
and
test
cltd
cmp
cmp
adc
or
jg
sub
ret
mov
arpl
out
mov
adc
xchg
jne
fs
mov
mov
jnp
inc
mov
jp
cmp
push
pop
leave
xchg
add
test
outsl
clc
and
xor
push
or
fisttpll
popa
dec
js
push
and
jle
ss
imul
jecxz
xchg
xchg
xor
call
add
lock
imul
out
test
dec
cwtl
popa
das
fimull
xchg
pop
xchg
xchg
cmp
clc
mov
lret
ljmp
mov
sbb
and
daa
cmp
fbstp
mov
pop
lahf
dec
hlt
mov
or
xor
dec
sahf
test
aas
je
adc
popf
sub
ja
sub
push
iret
mov
and
pop
jl
daa
xchg
je,pt
imul
jne
pop
inc
or
mov
lods
test
cmp
notl
mov
xor
popa
fists
in
fsubs
mov
pop
fstps
jbe
sub
stc
jns
mov
loopne
pop
insl
pop
mov
cld
stos
xor
jnp
nop
lret
icebp
push
dec
shlb
xchg
sti
mov
cmp
jb
mov
push
aad
mov
movsb
ficompl
dec
out
sbb
outsl
fstps
mov
int
shl
ss
out
mov
in
jg
jecxz
push
fisubrs
xchg
rcrl
sahf
sar
test
pop
outsl
and
jo
or
imul
mov
jae
fs
clc
cltd
js
or
inc
int
dec
test
nop
mov
std
aas
sub
cld
out
gs
mov
aas
push
in
movsl
cmp
pop
pop
cltd
xchg
ret
insb
push
cltd
jae
xchg
lcall
pop
test
or
sbbl
jle
lea
jne
dec
cs
push
movsb
and
push
test
in
dec
sbb
cmp
inc
sarl
out
repz
insl
jle
dec
xchg
and
push
jge
loopne
xorb
mov
int3
test
adc
outsb
or
test
mov
mov
outsl
mov
cli
xor
sub
repz
cmp
shll
jmp
fistpll
push
mov
pop
adc
pop
insb
addr16
sti
das
hlt
rcrb
bound
mov
nop
jnp
outsl
mov
scas
repz
dec
lods
pop
mov
pop
out
idivl
inc
fdivl
outsl
pop
sbb
adc
insb
scas
clc
rcll
add
aam
xchg
and
add
pop
inc
xchg
cmpsb
mov
jecxz
mov
jb
fsubl
inc
cmpsl
sar
lahf
mov
inc
pop
test
iret
sarl
xchg
or
fucom
dec
lahf
leave
popa
pop
adcb
push
mov
mov
and
fwait
adc
js
shlb
jp
jle
xor
scas
push
ja
nop
xlat
pusha
push
out
fldt
loope
push
shr
dec
das
inc
pop
push
xor
xchg
xchg
iret
cmp
adc
sub
in
jge
xor
jmp
jl
nop
aam
xor
je
pushf
jo
jmp
insl
stos
push
sbb
ficoml
jge
pusha
jno
pop
aad
sbb
fldt
in
movsb
les
stos
iret
fsqrt
sbb
pusha
mov
aad
aad
adc
sub
inc
lds
fcoml
xor
insb
xor
push
mov
push
or
fistps
mov
mov
or
mov
popa
xchg
sbb
pop
xchg
mov
gs
mov
xchg
push
cmp
add
jnp
cmp
cld
adc
pop
iret
lea
dec
jecxz
popa
sbb
scas
sub
jmp
adc
iret
dec
xor
xchg
outsl
push
aam
pop
imul
fstpt
add
in
out
mov
leave
xchg
mov
stc
test
mov
push
imul
push
dec
movsl
cld
inc
lea
dec
sub
loope
cmp
jbe
jae
jnp
inc
inc
inc
jns
mov
insb
sub
mull
mov
lahf
fidivl
inc
fstpt
dec
stos
cltd
adc
pop
fbstp
dec
movsl
jmp
sub
pop
cmp
hlt
loop
cmp
dec
push
mov
or
or
addr16
cltd
scas
dec
jae
sub
shld
xchg
pop
fiaddl
movsb
pusha
lahf
sub
push
lock
mov
and
out
fwait
enter
lcall
mov
js
ss
aas
mov
lods
jg
or
xchg
enter
xor
push
jl
adc
push
mov
daa
pop
movq
mov
cmp
adc
push
iret
cltd
sbb
pop
das
and
adc
mov
mov
push
int3
sbb
movsl
ljmp
add
mov
cli
outsl
ss
insl
stos
mov
ss
jl
cmp
adc
push
scas
test
pop
test
sub
adc
fwait
je
or
mov
xor
ja
scas
je
in
pop
jecxz
adc
jbe
mov
iret
mov
js
call
dec
repz
ss
push
adc
pop
jle
cli
sub
jmp
mov
mov
xor
fidivrl
mov
pusha
je
vmwrite
lret
jb
stos
enter
das
jne
fisubrl
sub
cs
repnz
xchg
dec
pop
mov
xor
xchg
out
xor
mov
repz
pop
roll
gs
xor
bnd
add
sub
pushf
orb
test
sbb
stos
orb
repz
nop
pop
insb
cmp
sub
jecxz
ja
push
sub
dec
into
jp
mov
mov
push
ja
lret
inc
mov
pop
pop
inc
cltd
jmp
jge
mov
cmp
sub
or
jno
xchg
inc
out
inc
jmp
pop
jg
inc
mov
repnz
iret
bt
lea
in
jno
arpl
sbb
mov
cmpsl
jl
and
sarl
fisttpl
sti
sub
cmp
lods
mov
cmpsl
int3
test
aad
and
add
orl
cmovbe
fisttpl
lock
aas
outsb
into
xchg
sbb
cwtl
mov
sbb
pop
pop
pop
jecxz
fmull
cmp
popf
jbe
xor
bswap
dec
xchg
out
sub
sbb
enter
or
cmp
adc
lahf
dec
mov
and
cmpb
shrl
std
dec
lods
int3
jge
or
pop
pop
dec
mov
push
adc
mov
into
jno
clc
mov
nop
cs
data16
jecxz
mov
icebp
repz
jno
inc
pushf
fidivs
sub
pop
push
xchg
fisttpll
mov
mov
or
ficoml
fisttpll
xchg
js
push
in
pop
dec
in
jno
pusha
cltd
sti
push
loop
pop
sub
iret
js
dec
sbb
in
imul
movsb
pop
fdivrp
mov
mov
cli
mov
add
mov
leave
sub
das
inc
bound
xchg
mov
fbstp
jp
js
dec
leave
lods
cmp
pop
iret
push
cmp
test
inc
pop
out
lods
insb
aam
repz
mov
je
ss
int3
test
test
adc
or
jns
test
cmp
xchg
das
jmp
xchg
call
xor
pop
mov
movsl
call
cltd
cmp
sub
inc
test
movsl
mov
gs
insl
test
push
add
inc
dec
cmp
pop
in
jns
stos
insl
std
adc
jecxz
mov
cmp
mov
dec
push
mov
ret
add
repz
lret
push
sub
scas
dec
stos
mov
fisubl
rcrb
sti
loop
cmpsl
inc
push
stos
add
xor
push
push
sahf
pop
aas
nop
inc
push
scas
and
insb
mov
pop
sub
insb
pushf
xor
sbb
cmp
cmp
cltd
lods
fildll
jl
mov
lret
addr16
jg
cmp
sbb
ror
xchg
push
and
movsb
fdivrl
cmp
insb
test
jnp
add
mov
in
nop
repz
out
enter
jnp
add
add
lahf
pop
sbb
add
sub
in
cmpb
or
repz
add
lea
ljmp
xchg
cmp
push
jns
xor
jge
pop
pop
jl
ss
and
ds
add
mov
dec
inc
pop
frstor
out
call
jo
js
lds
decl
pop
lock
mov
jnp
popa
jp
and
sub
and
shll
pusha
scas
in
rcr
mov
js
jg
in
pop
aaa
inc
mov
mov
pop
data16
jle,pn
inc
mov
cwtl
adc
push
out
sbbb
pop
mov
daa
jg
adc
xor
xchg
pop
jne,pn
add
subl
clc
out
adc
imul
aaa
xor
rorb
imul
xor
popf
movl
mov
sbb
outsl
adc
lahf
sti
pop
pop
pop
addb
or
push
iret
sub
outsl
xchg
lds
push
jns
pusha
cld
decl
sahf
or
push
cmpl
movsb
push
cltd
movsb
and
insb
push
inc
mov
ret
fsub
nop
cld
sub
cmc
jbe
sub
cmp
clc
jnp
sub
sbb
cs
mov
pop
loop
dec
jge
push
mov
sbb
add
cmpsb
pop
and
hlt
inc
push
test
or
test
sub
popa
lret
inc
xchg
mov
repz
xchg
test
repz
xchg
in
ja
iret
out
int
mov
fwait
jecxz
cmp
scas
xchg
mov
fdivl
aaa
add
mov
out
lahf
lods
cld
mov
js
sarb
faddl
xchg
xor
mov
fsubrs
aas
pop
js
adc
mov
aas
mov
aas
or
jno
call
or
pop
in
iret
in
in
xor
wrmsr
xchg
cmpsl
loop
in
cmp
movsb
ds
jg
and
or
xor
xchg
dec
and
mov
sbb
popa
xor
test
push
dec
xchg
push
jecxz
ret
notb
jnp
addr16
insb
into
int
adc
mov
pop
push
xor
andl
fstpt
push
push
dec
test
inc
lds
lods
xlat
int
sbb
ss
sub
push
sbb
cmp
cmpsb
test
cli
and
mov
push
mov
adc
test
cmp
adc
and
jp,pt
cld
lock
outsb
pushf
adcb
aaa
cmc
cmp
mov
cmp
xor
gs
xor
push
cmpsb
test
xchg
js
gs
pushf
subb
daa
adc
std
dec
pop
or
mov
or
xchg
pop
nop
add
fistps
adc
fldenv
repz
xchg
sti
fmuls
icebp
subb
inc
dec
imul
roll
fwait
insl
xor
test
es
cmp
xchg
into
adc
add
push
vmwrite
orl
mov
jge
rcrb
imul
mov
push
pusha
fwait
push
mov
xchg
jge
inc
and
mov
gs
clc
jnp
lahf
dec
es
lods
inc
cmp
adc
fiaddl
out
dec
mov
clc
mov
lods
fcoml
in
jno
add
int
sbb
imul
imul
add
pop
stos
loop
inc
push
out
fnstenv
in
mov
fidivl
insb
mov
jle
add
xchg
mov
movsb
in
mov
sahf
repz
jle
scas
inc
nop
js
out
xchg
add
or
dec
scas
pusha
out
jecxz
in
xor
jl
xor
imul
add
cld
lds
std
lods
mov
out
fwait
mov
movsl
or
cmp
dec
std
xor
mul
add
or
sbb
orb
sub
or
out
cs
adc
fsubr
or
inc
adc
jno
xchg
lahf
fsub
outsl
or
sbb
add
mov
pop
int3
das
xchg
insl
adc
cmp
decb
or
add
mov
in
movsl
fwait
dec
ja
adc
or
gs
xchg
test
xor
popa
push
xchg
sbb
fcom
add
sub
mov
mov
dec
out
cmp
out
imul
or
or
cld
or
fs
jne
cltd
sub
cmp
pushf
mov
lahf
int3
daa
fcoml
cld
jl
cltd
cmp
mov
jecxz
pop
mov
jmp
ja
and
add
sbb
movsb
movsb
push
movsb
cmp
test
cmp
les
sbbb
pusha
into
dec
add
jns
test
add
cmp
dec
popa
inc
test
psubw
mov
pushl
ds
pop
ja
inc
outsb
mov
orl
and
pop
dec
inc
enter
xchg
sbb
in
pop
pop
inc
cmp
sub
add
adc
mov
sar
push
pusha
jecxz
inc
or
sub
insb
call
and
mov
push
jnp
or
mov
popf
addr16
jmp
push
cld
jns
pusha
je
mov
scas
adc
mov
jns
push
mov
sbb
jecxz,pt
cmp
jg
xchg
xchg
test
jmp
adc
aad
and
pop
push
pop
add
fiadds
aaa
and
push
into
je
push
mov
call
push
rorl
push
xchg
scas
dec
push
push
xchg
add
es
push
jl
mov
inc
inc
iret
push
roll
ret
mov
push
es
push
mov
scas
dec
cmp
adc
lret
jb
rcll
push
mov
cmp
dec
test
mov
rcll
push
inc
push
inc
je
push
xchg
push
rol
push
push
sub
scas
push
xchg
ret
push
push
rcll
bound
dec
or
jge
dec
popf
mov
mov
iret
movsb
dec
mov
lret
dec
ds
inc
ret
lods
xchg
inc
ret
dec
adc
jmp
mov
inc
rorl
leave
movsb
ret
inc
push
rorl
mov
dec
test
iret
inc
icebp
into
xchg
push
roll
and
icebp
rorl
mov
int
rol
sub
rorl
inc
adc
jmp
enter
je
ret
into
dec
rcll
jmp
movb
mov
les
push
clc
adc
push
outsb
mov
dec
cmp
push
mov
popf
push
rol
mov
scas
dec
cmp
add
xor
mov
rclb
nop
mov
dec
mov
dec
in
rorl
dec
mov
xor
add
pop
dec
mov
inc
mov
inc
mov
les
adc
push
push
inc
xchg
dec
adc
inc
rcl
shll
sarl
xchg
rol
push
xchg
rorl
dec
push
inc
dec
push
mov
push
inc
shlb
add
add
push
popf
dec
int3
rcll
sub
pop
inc
dec
jbe
ret
push
inc
ret
jmp
jle
roll
out
adcb
xchg
mov
sbb
cmp
push
orb
pop
push
dec
push
xchg
dec
push
inc
int3
je
mov
iret
inc
dec
adc
outsb
loopne
dec
mov
dec
xchg
and
pop
lret
mov
jbe
mov
stc
inc
inc
push
dec
shrb
inc
inc
sarl
mov
mov
dec
or
mov
push
inc
cli
adc
pop
ss
dec
jb
inc
scas
inc
dec
cmp
leave
addr16
dec
push
roll
outsb
rolb
dec
or
xchg
jne
int
push
dec
lret
jmp
push
inc
inc
movsb
dec
rol
adc
push
rol
push
mov
shlb
pop
push
mov
xchg
scas
push
push
dec
jo
mov
int
popf
not
mov
aaa
push
jl
ret
roll
push
sahf
leave
into
lret
shrl
inc
enter
inc
lret
je
arpl
je
mov
inc
inc
inc
push
dec
roll
dec
inc
out
push
xchg
rcrb
push
roll
test
mov
push
dec
push
cmp
dec
test
cmp
mov
lret
or
rclb
push
fcmovbe
in
xchg
mov
jb
popa
filds
test
cld
push
cltd
jae
xchg
iret
adc
lock
rcrl
rorb
dec
sbb
jns
xchg
mov
adc
hlt
out
mov
mov
rclb
xchg
add
hlt
xor
rorl
push
push
rorb
imul
xchg
test
dec
mov
add
les
shll
xchg
or
pop
cmp
decl
xchg
mov
sub
or
orb
xorb
mov
dec
les
add
dec
leave
inc
cmp
or
or
dec
lret
jle
cmp
jb
adcb
push
jns
dec
adc
jl
mov
cmp
sti
dec
mov
leave
add
leave
lods
dec
mov
push
movaps
xchg
mov
mov
test
sbb
rclb
mov
mov
sbb
dec
orl
or
rcrl
dec
adcb
into
dec
jo
mov
push
ret
push
inc
push
icebp
cmpsb
aam
inc
cmp
mov
cmp
mov
mov
roll
cmp
mov
or
lcall
mov
lcall
rorl
adc
int
stc
fimull
mov
inc
test
pop
or
dec
inc
mov
dec
mov
mov
pop
popf
cmp
loope
popf
push
outsb
mov
test
lea
leave
hlt
mov
sahf
int3
inc
jge
xchg
jmp
nop
insl
dec
dec
aas
insl
adc
sbb
adc
outsb
jb
test
dec
enter
inc
bound
or
out
cmp
sub
mov
sahf
movl
nop
or
or
test
cld
rcrb
cld
inc
adc
adc
out
cmp
mov
lock
fsubl
int3
sahf
dec
inc
int3
mov
jmp
nop
mov
adc
stc
mov
dec
lods
call
mov
xchg
mov
push
nop
inc
dec
xor
add
cmp
mov
jo
and
mov
inc
les
xchg
inc
push
nop
int
mov
mov
int3
mov
jns
xchg
inc
and
js
dec
shr
lret
cmp
les
inc
dec
mov
insb
cmp
inc
adc
jle
mov
icebp
nop
pop
sarb
inc
lods
mov
scas
into
pop
into
jp
add
xchg
shl
iret
pop
dec
dec
arpl
pop
inc
data16
lods
adc
cmp
or
hlt
addb
or
xchg
adcl
xchg
sbbl
ret
lods
adc
sbbb
in
rorb
sahf
dec
xchg
repnz
ret
sub
lods
or
nop
mov
inc
pop
leave
inc
cmpsl
pop
loopne
psrlw
mov
test
pop
leave
dec
pop
out
cmp
or
fidivs
jmp
or
xchg
rorb
adc
sarl
call
scas
scas
enter
stos
leave
add
stos
pop
enter
lcall
pop
test
mov
stos
mov
mov
ret
rcll
jp
xchg
mov
ret
push
push
stos
push
adcb
pop
es
or
jb
push
lea
movups
push
bound
mov
mov
imul
dec
jo
or
cmp
mov
nop
test
add
and
cmp
fmuls
or
rclb
or
mov
lods
push
push
ss
loopne
push
mov
lods
leave
push
fldenv
or
outsb
rolb
mov
push
test
xchg
imul
lods
xchg
bound
leave
repnz
jno
dec
add
sbb
pop
leave
sbb
ret
inc
lods
mov
sarb
out
mov
sahf
out
mov
mov
lret
mov
lcall
adc
mov
loope
sub
mov
mov
jae
cmp
push
and
sub
popa
icebp
shl
adc
lods
les
xchg
shlb
stc
mov
cmpsl
mov
test
mov
lock
test
loope
cwtl
cld
mov
test
mov
or
sbb
mov
roll
xchg
mov
mov
add
or
sbb
adc
dec
xchg
inc
pop
shll
cld
mov
nop
inc
orl
mov
jae
lock
nop
adc
push
push
inc
popa
sub
inc
inc
xor
mov
sbb
adc
stc
mov
loope
xchg
mov
mov
and
and
sbb
adc
stc
mov
loope
loopne
outsb
inc
shrb
inc
pop
leave
rolb
xchg
mov
adc
xchg
mov
jae
mov
mov
dec
lret
sbb
push
lret
push
sbb
test
mov
inc
xchg
nop
orl
mov
cmp
mov
nop
add
mov
shlb
inc
xchg
mov
int
iret
mov
push
xlat
or
cmp
cmpl
leave
test
mov
adc
nop
inc
inc
push
mov
or
jno
movb
inc
dec
jns
inc
lret
inc
mov
dec
cmpsl
dec
push
mov
xchg
test
ds
cld
aaa
les
int3
inc
dec
inc
ror
inc
or
jnp
push
int
call
jns
push
or
iret
jns
pop
imul
push
imul
dec
imul
shll
dec
rorb
xor
mov
sahf
leave
inc
cmp
mov
dec
pop
leave
sub
into
arpl
mov
mov
nop
mov
enter
mov
outsl
mov
or
sahf
pop
scas
enter
xchg
js
push
dec
insb
aas
ret
lods
push
push
and
enter
mov
add
aas
dec
cmp
pop
fadds
je
add
xchg
movsl
inc
adc
push
mov
xchg
cltd
mov
xchg
ror
pusha
push
push
pushf
mov
mov
mov
mov
adc
push
or
and
xchg
mov
inc
dec
cmp
cld
adc
xchg
mov
adc
xchg
arpl
clc
out
mov
xchg
mov
inc
enter
or
ja
adc
dec
xor
inc
xchg
leave
bound
jns
adc
inc
jmp
pop
bound
inc
push
jns
adc
lret
test
cmp
xor
fdivrs
mov
mov
xchg
inc
adc
into
mov
mov
dec
cmpsl
xor
mov
es
adc
outsb
movb
dec
mov
enter
enter
scas
inc
sub
adc
adc
adc
adc
int
sahf
icebp
mov
mov
jecxz
orb
sahf
lea
add
aas
inc
sbb
dec
mov
inc
test
dec
imul
xchg
inc
jns
cmovg
cmp
adc
pop
leave
shrl
cmp
loopne
xchg
out
dec
xchg
and
mov
sbb
xor
dec
dec
leave
xchg
inc
mov
lock
inc
xchg
cmp
inc
or
lea
mov
xchg
pop
jns
adc
iret
dec
leave
jno
js
lea
jp
jno
popl
sbb
popa
jno
dec
rclb
mov
dec
jno
push
inc
popa
fists
outsb
dec
dec
inc
sbb
pop
mov
repnz
pop
rorb
shrl
adc
cmp
imul
push
dec
adc
leave
xchg
into
add
jmp
pop
adc
xor
dec
insl
and
cmpsl
inc
decl
add
es
dec
leave
loopne
cmp
mov
push
jmp
scas
lock
mov
adc
loopne
sub
mov
lock
adc
mov
shrb
adc
pop
out
and
jns
adc
arpl
dec
mov
mov
mov
fisttpl
shr
dec
scas
mov
fists
cld
mov
or
subb
lret
imul
xchg
sarb
int3
dec
adcb
lret
stos
lea
jo
dec
push
ret
jle
scas
adc
adc
xchg
mov
test
push
test
into
xchg
shll
and
adc
mov
or
mov
roll
lea
mov
sti
add
jb
int3
scas
xor
mov
mov
rorl
sub
test
mov
and
int3
xchg
push
movl
leave
decl
push
adc
add
inc
adc
cli
pusha
adc
repz
dec
jecxz
out
dec
inc
aaa
out
adc
leave
jecxz
inc
inc
repz
sarl
jns
dec
rol
faddp
dec
rolb
dec
pop
ret
adc
les
rcll
cmpsl
push
decl
test
nop
dec
bswap
jmp
scas
enter
inc
adc
mov
and
add
addl
mov
test
orl
sbb
shlb
mov
inc
stos
jns
leave
adc
addl
inc
adc
adc
dec
rclb
mov
inc
lcall
sbb
not
lcall
inc
sub
lret
xchg
dec
ret
scas
bound
adc
pop
xor
mov
add
icebp
jmp
mov
and
scas
inc
fmull
shrl
mov
mov
test
inc
mov
mov
leave
jmp
movsb
adc
push
adc
jmp
dec
mov
mov
roll
lock
cmpxchg
mov
shrb
mov
dec
test
push
add
sub
insl
dec
mov
xchg
les
adc
inc
in
mov
adc
ret
lds
nop
push
ds
xchg
xchg
add
push
mov
inc
push
jb
lea
les
fimuls
xchg
mov
cmp
mov
push
push
iret
mov
nop
inc
mov
or
push
mov
adcb
push
push
or
clc
shld
mov
roll
dec
cs
inc
xchg
xchg
jns
cmp
adc
les
shll
mov
or
shll
mov
in
ds
jno
idiv
dec
mov
or
and
lret
scas
dec
xor
push
adc
mov
repnz
mov
jno
sarl
data16
dec
sub
xchg
cs
sbb
adc
lea
inc
inc
int3
test
xorb
hlt
leave
jb
dec
mov
mov
aas
adc
mov
or
jnp
dec
cmp
lock
mov
or
push
xchg
jae
leave
cmpb
xchg
dec
fstpl
lahf
push
mov
jno
mov
mov
cltd
sub
adc
mov
popf
push
leave
shlb
mov
or
adc
les
jp
adc
jns
lds
movsl
ljmp
roll
xchg
jns
inc
adc
lret
add
mov
adc
outsb
add
inc
inc
nop
push
mov
push
dec
addb
mov
adc
or
leave
test
ss
mov
js
mov
jno
icebp
imul
mov
insb
xchg
mov
or
mov
inc
sub
int
mov
mov
jnp
xchg
push
push
dec
js
movb
or
xchg
imul
mov
mov
jno
pop
rcrl
cmp
inc
iret
loopne
pop
inc
pop
repz
adc
cmovge
iret
nop
iret
or
cmp
xchg
in
enter
test
lret
push
inc
adc
push
flds
dec
xchg
lret
roll
into
or
pop
dec
add
cmpb
dec
mov
leave
mov
lahf
mov
inc
xchg
jb
mov
leave
sti
dec
mov
bound
add
dec
bound
sub
mov
xchg
or
push
cwtl
mov
jmp
sarl
or
cltd
int
inc
adc
insl
shr
nop
inc
inc
jno
xor
inc
mov
cld
xchg
rcl
popa
pop
addr16
das
cmp
pop
dec
fdivrs
or
adc
mov
les
push
lret
adc
lods
mov
sbb
enter
xchg
push
mov
xchg
or
lret
dec
mov
mov
mov
int
push
cmp
adc
adc
pop
mov
or
ljmp
push
movsb
dec
rolb
adc
adc
adc
sub
or
movsb
enter
xchg
mov
loope
test
or
mov
movb
and
dec
adc
fisttpl
dec
stos
and
rcll
lock
or
xor
adc
stc
dec
add
dec
sahf
add
cmpsb
pop
rsqrtps
shrb
adc
adc
sbb
loope
mov
inc
dec
sub
dec
icebp
fists
outsb
dec
imul
repnz
xchg
or
cmp
rcll
cli
xor
aad
into
dec
mov
pop
inc
dec
jbe
leave
adc
mov
in
dec
rcll
adc
or
pusha
data16
pop
dec
dec
rolb
adc
or
jno
popl
adc
add
les
xor
dec
scas
into
dec
jno
adc
push
scas
push
inc
pandn
xchg
dec
mov
ret
or
push
mov
push
adc
fld
shll
stos
mov
jle
in
mov
movsl
or
mov
or
test
xchg
mov
mov
lea
mov
xchg
jmp
mov
test
or
inc
pop
icebp
rcrl
jle
out
movsl
mov
push
mov
inc
push
xchg
rorl
dec
xchg
cmpb
ds
or
pop
add
push
ud1
mov
ret
mov
sbb
cmc
orb
add
push
cmp
mov
sbb
mov
roll
mov
nop
dec
fisttpll
and
push
lds
mov
stos
lds
test
rorb
cmp
fidivrs
das
movl
lods
test
mov
xchg
cmpsl
push
push
or
pop
push
mov
popa
add
xor
test
cmpsl
jb
dec
and
int3
mov
cmpsl
jge
leave
xchg
adc
and
test
dec
and
test
and
sti
loopne
cmpb
mov
dec
adc
add
mov
mov
fmull
push
into
dec
jb
mov
fxch
xchg
lods
dec
and
adc
mov
push
inc
add
push
mov
add
lds
insl
bound
ja
adc
mov
dec
cmpb
mov
sbb
adc
mov
mov
inc
adc
jno
sub
and
les
cld
call
pop
dec
mov
in
cmp
mov
mov
inc
and
xor
or
lea
lea
xchg
adc
adc
cs
stos
dec
js
adc
or
adc
adc
adc
pop
imul
lds
mov
jns
mov
pop
jns
adc
mov
adc
rcll
adc
cmpsl
xchg
jns
mov
shll
jmp
fsub
mov
adc
adc
and
mov
lds
xor
scas
pop
dec
mov
in
je
aas
ja
inc
imul
ja
rorb
mov
adc
movsl
pop
ljmp
rcl
movsb
or
cld
add
adcb
mov
dec
inc
xchg
sub
hlt
lds
mov
dec
loopne
in
imul
inc
enter
and
dec
mov
mov
add
mov
adc
nop
insb
inc
inc
pop
inc
test
xchg
push
lea
adc
lret
rorl
inc
nop
repz
mov
and
lret
adcb
iret
add
jo
leave
mov
mov
dec
dec
aaa
daa
and
mov
pusha
pop
xchg
movsb
push
jno
or
and
mov
ret
test
mov
ljmp
xorb
xor
jmp
xor
roll
jno
fs
sahf
repz
mov
scas
mov
scas
add
adc
in
inc
lea
adc
mov
roll
mov
shll
xor
addl
or
mov
rol
jp
les
insb
dec
mov
xchg
mov
aas
dec
cmp
and
test
adc
push
js
pop
inc
mov
adc
pop
lret
mov
push
cmpb
dec
xchg
cs
movsl
cmp
adc
jns
int3
shll
test
dec
jmp
iret
and
dec
sub
mov
push
inc
mov
nop
rorl
pop
xor
adc
adc
lods
cmp
enter
lock
add
cmpb
mov
mov
dec
mov
mov
push
lret
fisttpl
push
ret
int3
rcr
rclb
test
test
xor
pop
mov
pop
ds
mov
negb
leave
rclb
dec
dec
pop
mov
dec
xchg
stc
and
dec
xchg
cmpsl
pop
pop
nop
lahf
mov
mov
sbb
xchg
pop
mov
ret
push
ret
cmp
mov
dec
pop
xchg
xchg
add
jp
rolb
aam
inc
stos
nop
inc
inc
and
shlb
scas
and
mov
das
cmpsl
adc
shrl
rorl
mov
mov
aas
ret
mov
setb
es
adc
mov
bnd
insb
push
test
pop
or
cmp
inc
or
dec
dec
jo
adc
xchg
and
rol
mov
dec
ss
xchg
rorl
pop
push
push
lods
push
mov
mov
mov
cli
adc
jp
xchg
jecxz
adc
and
adc
xchg
adc
adc
in
pop
test
adc
jmp
adc
in
insl
jne
movsl
dec
adc
gs
xchg
mov
cmp
test
pop
mov
push
addl
imul
adc
dec
push
inc
pop
push
adc
xchg
xchg
mov
push
out
rcll
pusha
sbb
in
scas
xor
cmp
nop
push
and
adc
jns
dec
aas
adc
adc
dec
outsl
pop
adc
jbe
mov
cmp
push
dec
dec
adc
stos
in
jns
dec
mov
cmp
in
lea
dec
dec
adc
jns
dec
aas
in
push
mov
in
lea
dec
dec
adc
movsl
mov
dec
sub
xchg
or
into
sub
adc
jmp
dec
cmp
in
pop
or
js
adc
loope
test
mov
pop
mov
test
adc
movsb
aas
pop
mov
test
adc
mov
orl
adcb
mov
movsb
dec
dec
test
mov
xchg
dec
mov
dec
pusha
jns
dec
dec
adc
fsubs
dec
dec
shll
inc
je
xchg
popa
inc
add
xor
adc
popf
iret
dec
gs
adc
dec
rolb
rcll
lods
mov
gs
adc
dec
and
adc
ffreep
add
fstpt
repz
push
xor
lds
sahf
adc
test
jns
test
pusha
lods
ja
lds
ja
mov
fstl
enter
mov
lds
movsb
lds
and
les
push
movsl
inc
enter
cli
repz
divb
xor
sahf
xchg
sbb
inc
cli
xor
xchg
adc
test
cld
dec
pusha
pop
iret
push
nop
mov
enter
push
xchg
adcb
pop
int3
inc
or
inc
rcll
stc
inc
inc
rclb
jns
push
push
jns
or
pop
adc
push
push
aaa
dec
roll
movsb
enter
arpl
inc
loop
fsub
push
scas
dec
dec
enter
cmpsb
pop
arpl
pop
arpl
push
dec
arpl
int3
test
lea
xchg
cltd
into
cmp
inc
lds
pop
fcoml
push
rcll
rcl
inc
xchg
dec
leave
mov
or
test
push
aam
sahf
adc
subb
arpl
rclb
rol
adc
subl
sub
arpl
test
push
rorl
sub
mov
and
call
adc
dec
push
sub
pop
mov
or
mov
arpl
inc
and
aaa
shll
int3
je
mov
mov
or
adc
xchg
arpl
xchg
arpl
loopne
nop
lds
nop
repnz
int
call
lds
mov
es
ds
lds
pop
mov
sub
frstor
int3
inc
adc
lds
push
pusha
adc
int3
scas
daa
test
outsl
dec
push
popf
mov
cmc
add
movsl
fldl
jp
clc
mov
mov
fidivrl
xchg
fmull
int3
pushf
movl
out
mov
jecxz
dec
inc
push
mov
in
leave
adc
out
jnp
lods
dec
xlat
in
subl
push
mov
pusha
int
pop
aas
lds
mov
inc
mov
pop
fcmovb
mov
cld
je
lods
loopne
adc
ds
clc
lds
jae
xchg
dec
pop
push
popf
push
xor
clc
lds
lds
sarl
mov
adc
inc
mov
xchg
aaa
arpl
test
stos
xchg
repz
lds
xlat
loop
inc
cmpsl
mov
pop
dec
cmpsl
cmp
js
lds
adc
dec
pop
mov
mov
push
into
xchg
rclb
les
nop
dec
andl
sbb
call
fadds
push
or
mul
adc
outsl
shlb
mov
sti
mov
rorl
push
mov
inc
out
lret
aam
loopne
frstor
rcr
popl
adc
mov
mov
adcb
add
and
xchg
cs
lret
dec
divb
xchg
test
mov
sarb
jae
xchg
adc
xor
push
in
mov
adc
push
push
adc
mov
push
fldcw
and
mov
add
cs
adc
add
adc
dec
daa
hlt
leave
subb
sub
repnz
pop
jp
pop
xor
leave
dec
jns
mov
ds
dec
xor
or
add
dec
dec
mov
cld
popa
dec
adc
cmovp
orl
aaa
loope
test
dec
addb
add
and
mov
mov
pop
mov
push
dec
cld
js
lret
inc
xor
imul
inc
jae
shrb
inc
dec
or
mov
ret
mov
sbb
cmp
mov
jb
dec
push
int
push
xor
pop
sahf
push
shll
dec
js
xchg
pop
repnz
clc
pop
or
addr16
xor
xor
or
int
lret
adc
aas
addps
dec
inc
and
movsb
add
cs
add
jb
js
imul
inc
mov
dec
mov
sbb
jbe
jae
adc
aaa
inc
mov
lock
inc
cmpsl
xor
fcmovne
mov
xor
scas
inc
adc
ljmp
add
icebp
dec
adc
icebp
loopne
push
dec
jl
inc
mov
enter
movsb
shl
int
rcr
enter
adc
mov
cmp
sbb
addr16
outsl
jl
ret
lea
push
fcmovnbe
xor
ret
or
aaa
xchg
xor
push
imul
aaa
xchg
xor
push
stos
sbb
jl
scas
jo
leave
inc
mov
les
push
shrl
incb
bound
mov
inc
popa
push
aas
dec
mov
xchg
and
shl
loope
pop
out
lea
xchg
inc
and
push
dec
aas
int3
and
mov
outsl
sarb
xor
rclb
and
addr16
adc
push
cmp
and
dec
call
incb
aaa
and
mov
mov
adc
mov
and
addr16
adc
cmpsb
cs
jge
add
gs
push
dec
gs
mov
adc
and
lods
xor
jnp
mul
adc
loopne
or
adc
and
pop
rcrb
rol
lea
insl
les
lds
push
and
and
adc
lret
xchg
ljmp
and
push
sbb
push
jecxz
rol
adc
fidivs
sub
inc
shrb
push
push
movsl
inc
shl
loope
test
mov
gs
push
movsl
inc
shl
loope
test
shlb
sti
pop
push
sbb
outsl
pop
adc
movsl
faddl
sarb
nop
mov
push
xchg
push
xor
shrb
adc
inc
lret
psrld
cmpb
gs
daa
faddl
sarb
faddl
sbb
xor
rclb
dec
sbb
push
out
pop
push
xor
xchg
xor
lea
adc
or
mov
xchg
push
jmp
dec
movsl
not
aam
and
aaa
mov
enter
idivb
xor
and
or
outsb
movsl
rorb
xchg
adc
xchg
push
xor
and
clc
add
add
adc
mov
movsb
lea
jbe
nop
adc
push
in
lds
aaa
js
mov
inc
dec
dec
jns
lret
and
adc
cli
cli
mov
inc
xchg
xchg
repz
lods
push
iret
adc
lea
adc
inc
push
out
sbb
ffree
enter
or
xor
dec
testl
xchg
adc
sbb
xchg
cmp
repz
fisubl
xchg
in
sbb
add
add
pop
cmp
fs
popa
or
push
mov
jbe
mov
adc
jns
enter
xchg
mov
enter
leave
jno
or
dec
push
inc
adc
aaa
leave
xor
adc
xchg
dec
orl
sub
push
adc
in
aad
fucom
xchg
sar
arpl
dec
adc
xchg
fstl
inc
dec
fdivs
out
sub
jb
push
aas
inc
add
jbe
adc
mov
cmp
test
inc
js
dec
xor
xor
jge
or
xchg
daa
pop
xchg
pop
out
movl
push
movsb
adc
xchg
movsl
sub
jge
xchg
frstpm(287
xchg
inc
add
add
idivb
cmovnp
xchg
shll
int3
mov
popl
mov
out
push
pop
xchg
dec
inc
dec
loop
leave
cmp
sbb
fiaddl
or
mov
mov
and
ret
cmp
dec
out
mov
add
out
andnps
movq
lock
mov
in
push
stos
maskmovq
adc
push
cli
cvtps2pi
mov
push
add
sub
ja
ja
iret
negb
decb
mov
int3
shlb
lds
fs
les
aas
inc
xor
push
or
into
addl
mov
and
mov
and
add
inc
cmpsl
add
mov
movsb
repz
mov
lods
rorl
mov
adc
rorb
mov
es
rcll
mov
sbb
mov
push
sahf
mov
stos
ret
dec
imul
push
add
js
ficoml
jae
or
leave
jae
stos
mov
push
call
sbb
mov
inc
inc
cmp
rcll
jl
lods
pop
roll
inc
mov
inc
adc
pop
test
mov
push
and
adc
push
push
cmp
add
mov
xchg
or
lds
out
adcb
cmp
lea
repnz
pop
loop
repnz
jecxz
add
dec
mov
adc
xchg
pusha
popl
iret
xchg
push
dec
or
xchg
jns
push
cs
pop
lahf
dec
loop
mov
cmp
pop
pop
adc
mov
dec
pop
xchg
or
push
or
cmp
lea
xchg
push
xchg
and
das
cld
test
adcb
sbb
mov
dec
mov
jecxz
or
adc
xor
movsb
or
es
xchg
int
mov
jecxz
or
adc
jg
inc
add
mov
xchg
int3
jno
xchg
push
or
xchg
pusha
outsl
inc
jge
mov
jp
loopne
pusha
popl
scas
lea
jle
xchg
or
lret
pop
pop
or
push
mov
adc
notl
push
hlt
mov
adc
or
lea
decb
lret
testl
pop
dec
xchg
inc
or
cmpsb
jae
pop
push
insl
mov
inc
faddl
sbb
inc
or
iret
xlat
lea
cmpl
cmp
push
jp
paddq
adc
testl
mov
ds
ds
mov
or
push
sbb
mov
lret
xchg
cli
call
mov
lret
pop
loop
mov
inc
xchg
push
lds
dec
rcrl
or
push
push
popa
aaa
or
repz
or
and
or
and
push
andl
mov
or
adc
movsb
push
push
je
add
jbe
call
pop
push
xchg
sub
les
adc
in
inc
pop
or
xchg
mov
sahf
pusha
add
aas
adc
dec
pusha
cmp
adc
lds
pop
xor
in
jnp
push
inc
xchg
push
inc
xchg
add
les
push
adc
std
inc
dec
stos
xor
xchg
inc
adc
mov
push
push
mov
mov
jnp
dec
jbe
jmp
xchg
adc
sti
cmp
add
mov
mov
stos
mov
int
iret
scas
sub
iret
inc
add
jno
popf
inc
adc
into
stos
repz
test
pause
mov
mov
xchg
insl
push
clc
add
in
adc
jecxz
lods
cmpl
add
rcrl
mov
ret
dec
or
adc
clc
adc
mov
mov
mov
roll
sahf
xchg
sarl
and
mov
inc
xchg
and
add
mov
dec
cmpl
push
loope
movsb
push
iret
and
jae
xchg
dec
mov
inc
push
push
mov
pop
enter
adcl
orb
adc
dec
inc
sbb
push
dec
push
pop
jle
dec
movsb
enter
xor
pop
adc
push
push
adc
cmp
adc
and
das
adc
sbb
inc
cs
cli
and
xchg
jmp
push
es
pop
loope
divl
orb
inc
fs
in
pop
dec
ficoml
into
push
int3
xor
dec
jecxz
or
in
inc
shll
push
adc
cmpsb
dec
and
outsb
shrl
pop
push
repnz
lods
xchg
sub
shufps
clc
testb
mov
nop
lods
ret
xchg
mov
push
or
mov
cli
aaa
mov
inc
daa
call
adc
jmp
mov
inc
mov
inc
dec
or
fisubrl
mov
push
shrl
and
sti
push
push
pop
mov
lret
jge
mov
loopne
mov
mov
dec
in
pop
lret
add
es
dec
and
dec
push
bound
pop
cmpsl
push
xor
pop
dec
pop
jp
mov
push
adc
xcrypt-ecb
cmpsl
dec
bnd
pop
scas
or
or
adc
sub
jl
sbb
sub
andl
xchg
pop
xchg
pop
sahf
lahf
cmp
or
leave
pop
loop
cld
cmp
jnp
adc
in
das
push
adc
hlt
sti
mov
test
adc
mov
dec
fstpt
xlat
aad
inc
push
cltd
mov
dec
push
scas
arpl
inc
adc
cli
pop
push
xchg
adc
push
loope
sarl
into
inc
rcl
leave
shrl
mov
sahf
dec
mov
stos
push
inc
mov
repz
mov
push
sub
ja
int3
test
ficompl
adc
mov
xchg
inc
dec
dec
or
lds
lret
dec
out
add
rolb
push
sbb
mov
test
dec
sub
imul
lods
popa
leave
lods
cwtl
loopne
pop
sahf
adc
or
dec
in
pop
or
in
clc
lock
test
outsb
pushf
scas
pop
pop
sbb
cmp
xor
adc
mov
mov
dec
add
scas
xorl
push
shrl
inc
jnp
fistpl
and
mov
test
dec
insb
scas
xorl
fldenv
or
add
mov
pop
pop
nop
fxrstor
dec
repnz
dec
dec
or
pop
push
and
jne
sbb
es
pop
dec
rcl
mov
sahf
adc
cmpl
adc
dec
adc
fdivrs
mov
sbb
sbb
mov
adc
dec
add
lea
adc
les
mov
jno
pop
adc
add
jmp
ljmp
adc
lcall
or
test
adc
xor
subl
ds
dec
inc
sub
adc
dec
sti
xor
and
insl
movsl
push
out
test
in
lds
aaa
add
stos
nop
dec
iret
push
addl
sti
sti
push
xchg
or
clc
nop
mov
ja
nop
rorl
adc
adc
adc
orb
adc
dec
sbb
jbe
inc
scas
mov
scas
dec
leave
dec
jnp
adc
fists
outsb
dec
dec
push
cmp
lahf
mov
repnz
lahf
imul
pop
adc
lea
mov
dec
sbb
xchg
xor
xor
adc
ja
nop
rorl
push
dec
adc
dec
scas
dec
gs
dec
jns
adc
or
jns
jbe
inc
mov
fistl
xchg
xchg
pop
adc
cmp
ja
nop
outsb
pop
mov
pop
dec
push
or
adc
xchg
dec
fdivp
adc
dec
je
push
mov
and
popa
xchg
jle
rcll
inc
notl
fmuls
jmp
lock
in
jmp
xchg
mov
pop
lret
popa
inc
xchg
pop
dec
mov
adc
leave
dec
rolb
rorl
fs
pop
xlat
xchg
pop
dec
leave
mov
pop
cwtl
dec
in
and
rol
xadd
push
test
inc
cmp
mov
es
or
aas
dec
cmpsb
mov
cmp
inc
adc
ror
push
fdivrp
dec
mov
cmp
fists
shll
adc
cmp
mov
inc
das
add
repz
mov
adc
sbb
rorl
jns
adc
and
sbb
rcrl
das
add
repz
test
addb
les
dec
xchg
stos
ror
adc
in
dec
in
sbb
mov
dec
ret
dec
fdivl
arpl
mov
cmp
pop
xor
inc
test
push
mov
adc
jmp
sbb
mov
push
push
or
mov
mov
lahf
inc
pop
outsl
or
pushf
add
ds
mov
inc
xor
pop
mov
mov
inc
dec
dec
xchg
sub
shrb
or
cmp
fildll
fsubp
or
arpl
shr
sarl
adc
pop
adc
lea
mov
sbb
leave
ror
addl
cmpl
stos
mov
stos
inc
mov
stos
pop
dec
dec
adc
and
pop
or
push
jns
inc
out
lea
lret
pop
test
data16
les
push
ret
rcr
js
mov
inc
inc
mov
push
stos
inc
xor
jns
cmp
ret
iret
push
push
shlb
aaa
adc
push
stos
es
inc
cmp
inc
inc
enter
inc
ds
roll
mov
into
rorl
jp
and
into
adc
mov
dec
pop
mov
les
dec
inc
add
or
cmp
loope
enter
inc
lock
sub
sbb
mov
or
pop
push
cmp
dec
stc
sub
sub
cmp
inc
mov
cltd
sub
adc
int3
aaa
test
mov
push
stos
leave
fadds
push
movsb
mov
or
in
pop
enter
cmp
jl
loop
mov
rclb
xchg
push
push
es
aaa
xchg
sbb
enter
mov
js
mov
pop
dec
cmp
inc
dec
dec
insb
lea
push
cmpl
xchg
int
rclb
mov
lea
fsub
mov
or
jb
dec
aas
pusha
dec
push
push
or
int3
andb
adc
jnp
or
push
lret
push
fmuls
or
jb
adc
dec
andb
inc
and
vcvtss2si
add
fcmovnb
pop
or
pop
scas
push
cltd
xchg
or
adc
rcrl
adc
lock
add
dec
jge,pt
push
cmp
mov
call
inc
mov
xor
int
add
adc
vmwrite
mov
adc
lea
mov
imul
xchg
dec
or
inc
fmuls
or
adc
jnp
mov
or
repz
into
xchg
dec
xchg
int
testb
loope
test
or
dec
shrl
mov
cli
or
add
mov
movb
outsl
pop
rcrb
adc
lret
dec
dec
and
add
mov
dec
iret
inc
jns
add
in
roll
cmp
fistl
add
lods
cmp
clc
add
mov
add
lea
popf
adc
or
adc
rorb
add
cli
mov
dec
xchg
mov
rol
sti
adc
mov
xor
inc
push
push
cld
or
insl
rclb
xchg
lret
inc
mov
adc
pop
aaa
xchg
mov
sub
pop
les
dec
pop
pop
xchg
es
das
lods
rol
sub
dec
stos
mov
rcrb
or
dec
sahf
jo
cmp
lds
sub
lea
movsl
mov
pop
sub
dec
lea
xchg
xchg
cli
mov
fsubl
mov
dec
fisttpl
xor
dec
scas
jge
xchg
xchg
or
add
jl
sti
aas
dec
outsl
fdiv
or
sarl
sub
xchg
dec
ss
xchg
rol
aaa
sbb
dec
xchg
push
fisttpl
jbe
loope
pop
pop
xchg
sbbb
imul
pop
or
push
dec
xor
sub
xchg
shrb
test
or
inc
sub
mov
adc
sub
mov
cmp
leave
xchg
rcll
xor
jnp
mov
ds
sbbl
mov
lret
mov
cmpsl
lret
in
les
mul
adc
movsb
inc
cmp
aas
mov
mov
xor
mov
or
mov
fbstp
push
rclb
pop
dec
stos
es
das
mov
push
in
sbb
lret
or
mov
xchg
jnp
sti
cmpsb
xchg
lret
fwait
sub
fwait
xor
int
or
ret
aas
add
xchg
dec
mov
xor
into
push
lret
xchg
ret
xchg
repnz
inc
movsb
jnp
loop
xor
sahf
loop
cwtl
lret
movsb
lret
ror
imul
imul
shll
mov
dec
test
rorb
mov
cli
xchg
jp
push
ret
fists
std
mov
jle
mov
inc
into
cmp
sub
xchg
jp
xchg
inc
pop
mov
mov
insl
dec
cmp
scas
popl
cmp
adc
dec
and
push
ds
push
loopne
sub
leave
stos
jno,pt
into
and
das
xchg
dec
scas
cs
mov
nop
scas
xchg
cmp
adc
push
and
push
std
mov
pop
push
inc
or
int
push
adc
stc
dec
shr
stos
lea
adc
cmp
loopne
cli
dec
xchg
adc
jns
adc
xor
int
or
inc
mov
pop
lock
xchg
into
mov
inc
mov
insl
int
cmpsl
int
lea
aas
mov
int3
stos
popf
jno
dec
adc
mov
cs
adc
inc
divb
scas
lea
pop
adc
jno
iret
shrb
mov
test
ret
adc
aas
dec
stos
pop
jno
dec
mov
adc
dec
es
repz
jb
dec
imul
dec
adc
dec
mov
push
out
in
call
adc
adc
jle
fildl
mov
inc
inc
stos
mov
shll
in
int
fcmove
mov
xchg
inc
adc
lock
sarb
inc
in
cwtl
mov
push
adcb
cs
roll
cmp
jbe
inc
nop
xchg
fldt
mov
cwtl
mov
inc
inc
xchg
ficomps
xchg
xchg
xor
cli
pop
lret
adc
inc
fstpt
adc
or
jl
inc
or
or
in
test
or
inc
aad
mov
or
aad
mov
shrl
rorb
or
mov
pusha
fisubs
jbe
cltd
add
test
mov
lds
test
push
int3
inc
dec
jnp
shrb
rclb
rorl
rcll
mov
nop
mov
dec
adc
mov
pop
dec
push
mov
roll
imul
cmp
or
pop
or
aaa
dec
and
push
mov
dec
xchg
subl
adc
or
sub
mov
dec
xchg
push
enter
js
rcll
jg
popa
sbb
dec
sbb
sbb
dec
outsl
in
or
jb
dec
mov
cli
popa
leave
cli
or
leave
adc
mov
jecxz
ljmp
out
shl
fidivrl
dec
rorl
stc
xor
jns
push
jecxz
mov
das
in
push
cmpsb
add
dec
pop
sub
rorb
xchg
add
mov
fists
mov
das
sub
adc
pop
aas
shll
ror
rcll
sarl
in
adc
push
lcall
xchg
dec
mov
cmp
das
aam
in
pop
adc
loop
frstor
or
mov
fistl
push
cli
pop
nop
test
dec
test
aam
push
inc
xor
dec
clc
adc
leave
leave
cmp
shrb
or
nop
adc
mov
push
aam
test
insl
vcvtss2sd
cmc
subb
nop
dec
mov
pop
call
xchg
dec
leave
mov
repnz
in
jbe
leave
out
adc
pop
xchg
add
or
pop
testl
mov
ja
inc
shll
inc
lret
cmpsl
or
push
gs
xchg
imul
in
mov
repz
nop
inc
into
and
aam
dec
push
test
or
cli
pop
mov
mov
lds
add
sub
add
mov
dec
and
sbb
dec
cwtl
cmpl
cli
pop
dec
dec
adc
pop
and
push
cs
dec
enter
dec
icebp
into
add
dec
xor
adc
dec
test
orb
mov
sbb
fisttpll
adc
cli
scas
dec
jg
sarl
sbb
dec
mov
jp
in
shrl
adc
sub
or
pop
je
cmc
push
out
cmpsl
or
loope
pop
dec
dec
aad
les
in
cwtl
dec
mov
adc
lds
lds
adc
dec
mov
xchg
adc
clc
pop
mov
pop
pop
or
jbe
jbe
sbb
inc
sbb
adc
mov
pop
or
sbbl
lea
test
inc
lret
push
or
jns
or
jne
jg
int
jne
dec
mov
mov
rorb
sub
ss
mov
sub
mov
or
test
cmp
push
lea
hlt
testl
dec
scas
mov
dec
jb
jge
roll
imul
inc
adc
clc
in
pop
lods
xchg
aas
loopne
push
dec
mov
outsl
movsb
jne
orb
cmpsl
mov
insl
scas
push
lds
aaa
das
pop
nopl
xchg
push
and
cmp
push
repnz
xchg
sahf
adc
mov
repz
div
jmp
pop
xchg
dec
js
xchg
and
cmpsl
cld
add
sbb
dec
scas
shll
adc
push
and
imul
loope
nop
test
test
outsl
test
add
repnz
xchg
rcll
ljmp
xchg
add
and
push
adc
mov
dec
enter
inc
xchg
add
lret
hlt
sbb
and
rorl
mov
nop
dec
dec
mov
dec
sub
dec
dec
js
xchg
scas
and
fadd
adc
inc
jb
mov
xchg
unpckhps
sbb
rcll
shlb
loop
rolb
jns
shrl
stc
sbb
lds
mov
inc
dec
int3
pop
mov
or
pushl
pop
cmp
push
inc
test
pop
sbbb
repnz
xchg
inc
je
xchg
xor
int3
cmpsl
fs
leave
ficompl
inc
xchg
push
inc
jb
leave
repnz
adc
add
test
movsb
mov
iret
lea
int3
mov
sub
test
lea
sbb
out
lea
xchg
mov
xor
cs
or
cs
test
mov
or
inc
cmp
and
sahf
adc
cmp
dec
mov
sbb
je
inc
sbbb
adc
jns
inc
in
fcoml
jecxz
jns
sbbb
adc
sub
push
cmp
and
dec
xchg
or
js
fisttpll
fisttpl
cmc
mov
test
imul
mov
push
cltd
adc
repnz
jne
iret
dec
adc
test
call
daa
xchg
push
ljmp
push
fimull
dec
repnz
add
xchg
hlt
dec
pop
push
imul
gs
in
cmp
xchg
inc
adc
call
aaa
sub
inc
or
push
imul
std
nop
icebp
dec
fucom
push
rcrl
arpl
outsb
arpl
dec
inc
gs
arpl
sbb
mov
cli
mov
adc
lds
aaa
push
dec
adc
jmp
push
fldl
mov
jnp
xchg
mov
pop
leave
mov
sti
push
jl
and
push
das
or
dec
js
or
jecxz
dec
sti
sti
push
repnz
dec
outsl
pop
adc
sbbb
cmp
push
cmp
xchg
movl
movsl
arpl
ss
xlat
adc
dec
mov
ffree
inc
adc
ret
lods
in
push
xor
dec
jnp
iret
in
dec
daa
or
sub
xchg
ds
xchg
js
lods
dec
xchg
movsl
push
dec
cli
xor
adc
mov
sahf
test
out
pop
pop
or
jnp
or
iret
leave
js
pop
iret
out
leave
shlb
push
inc
mov
jns
adc
cmp
setno
loop
or
mov
sub
cwtl
scas
and
mov
push
jno
shrl
adc
mov
shrl
ret
lahf
mov
mov
mov
dec
pop
loop
pop
adc
jle
dec
dec
jae
dec
sbb
rcrl
test
adc
mov
aam
es
adc
add
cli
loope
dec
sarb
rol
xchg
xchg
jg
mov
jg
or
orb
leave
adc
sub
pop
or
or
pop
rorl
cmp
push
sarb
test
fmull
orb
test
es
adc
inc
bound
sbb
loope
dec
add
inc
test
jecxz
push
repz
ljmp
fdivs
lret
mov
mov
adc
into
rorl
cmc
dec
push
jecxz
or
mov
clc
add
aas
xchg
jp
loopne
adcb
and
sub
test
int3
pusha
or
shr
cmp
mov
pop
adc
adc
fdivs
popa
push
pop
xchg
add
int3
mov
mov
ss
mov
pop
xor
fdivs
xchg
lahf
push
push
fcomi
mov
add
lret
pop
mov
dec
adc
je
mov
daa
push
int
repnz
or
fsubr
xchg
insl
gs
fmuls
push
and
sahf
adc
stos
xor
and
or
mov
sarl
and
mov
iret
jmp
xchg
lret
std
or
or
push
or
lcall
leave
and
adc
pop
dec
xor
iret
cltd
lea
les
and
or
repz
mov
mov
gs
daa
adc
iret
sub
mov
xchg
in
mov
pop
into
fsub
into
sbb
int3
movsb
bound
bound
adc
push
push
push
pop
xor
adc
push
inc
pop
into
inc
xor
xchg
push
push
xorb
into
or
inc
inc
dec
fmuls
jecxz
int3
or
mov
imul
push
sbb
mov
xor
add
loopne
mov
and
and
jp
scas
aam
leave
adc
sti
mov
or
mov
adc
push
add
mov
test
add
add
dec
dec
jno
or
adc
mov
in
mov
adc
sub
dec
mov
add
and
sahf
adc
jns
outsb
loope
insl
adc
lds
leave
scas
pop
push
mov
adc
rorl
and
mov
fidivrl
mul
adc
xchg
or
sub
mov
pusha
dec
rol
aas
push
and
inc
mov
ret
dec
rcrb
adc
jbe
popf
mov
rcll
and
jb
xbegin
rcpps
bound
sbb
lret
mov
xchg
mov
outsl
pop
adc
andb
test
push
addl
in
xchg
test
add
add
test
fdivl
inc
xchg
push
bound
or
adc
jecxz
or
and
popa
pop
mov
int
repnz
sub
int
jno
fcmovu
or
fcoml
inc
dec
lock
jnp
or
pop
mov
push
aaa
or
inc
fdivrl
rcl
jnp
xchg
or
adc
lea
xor
cmp
jg
test
daa
xor
in
xchg
or
rorl
dec
sbb
xchg
or
cmpsl
nop
inc
sbbb
mov
stos
dec
rolb
mov
stos
mov
adc
dec
dec
mov
rcll
ss
fmull
mov
shrl
push
leave
push
inc
lock
jl
mov
pop
xchg
rol
pop
and
adc
xor
sub
push
fmul
dec
scas
arpl
pop
mov
scas
mov
lods
notb
adc
ljmp
lahf
mov
xchg
rol
bound
bswap
adc
and
xor
popa
fdivp
enter
test
decb
inc
jns
push
sti
decb
dec
mov
mov
pop
add
inc
inc
lods
mov
mov
or
scas
fsubs
push
scas
dec
push
iret
orb
cmp
inc
ss
andnps
mov
xor
inc
sahf
ds
pop
mov
or
jl
inc
leave
xlat
xchg
mov
push
xor
orl
loopne
iret
rolb
andl
sbb
mov
or
shlb
add
daa
andl
cmpl
addl
mov
shrl
xchg
xchg
shrl
and
ret
inc
push
call
pop
inc
loopne
fistl
dec
insl
scas
xor
mov
filds
cmp
aaa
adc
rcl
sahf
or
jp
xchg
inc
add
icebp
adc
in
icebp
out
dec
cli
jge
xlat
imul
or
push
adc
out
dec
adc
add
cli
cmpsb
inc
cmp
int3
insb
lock
jns
mov
jns
xchg
inc
pop
shll
lcall
and
mov
sub
enter
push
mov
mov
xchg
ljmp
incb
or
add
mov
pusha
jle
mov
pop
adc
mov
je
sub
and
pop
xchg
lds
aaa
xor
push
aam
xor
cmpsl
into
mul
adc
repnz
push
fcmovbe
dec
in
jmp
xor
mov
insl
lds
ss
dec
pop
pop
push
dec
adc
test
rcl
push
into
mov
sub
pop
into
dec
adc
fdiv
into
cmp
inc
sub
pop
inc
outsb
mov
ss
xor
nop
adc
xchg
pop
mov
daa
xchg
push
mov
xchg
inc
cmpl
push
lds
rorl
push
shll
jbe
mov
xchg
dec
shl
sbb
xlat
cs
sar
adc
aad
xor
inc
mov
les
mov
mov
mov
sahf
out
lea
mov
mov
sbb
les
jne
xchg
sbb
mov
xchg
push
dec
ja
push
mov
inc
jb
or
push
cltd
mov
out
inc
lds
mov
ud1
sub
jle
inc
jle
cmp
inc
adc
xchg
cs
imul
inc
ret
adc
lahf
add
or
sbb
out
mov
inc
mov
cmp
sbb
jp
xchg
int3
ss
dec
scas
hlt
pop
pop
je
xchg
aas
sub
or
push
aam
mov
mov
lods
sub
sbb
or
lea
test
push
rcrb
add
jle
or
dec
xchg
call
insl
pop
ret
add
xchg
adc
cli
mov
lods
pop
lret
inc
adc
clc
test
imul
push
and
dec
push
xchg
loope
test
rol
push
cmp
arpl
or
push
adcb
shll
mov
push
sbb
xor
outsb
into
gs
leave
inc
std
enter
test
push
jle
push
jg
leave
mov
push
jbe
pop
xchg
push
xor
adc
mov
add
inc
add
mov
rol
icebp
cmp
arpl
jbe
mov
daa
sub
cltd
fldt
add
or
es
into
and
adc
jecxz
insb
int
pop
dec
push
int
xchg
xor
add
xchg
into
fs
mov
dec
xchg
push
dec
push
icebp
xchg
jle
and
into
es
in
int
jbe
cmp
or
mov
sbb
test
add
mov
dec
lods
cld
aaa
dec
scas
lods
arpl
insl
lret
push
fidivl
sbb
test
fwait
xchg
movsb
push
pop
pop
adc
dec
test
inc
popf
mov
xchg
xchg
add
jp
sub
dec
leave
adc
mov
xor
sbb
rcll
dec
jnp
push
sarl
xchg
lea
into
sbb
out
lea
inc
mov
and
add
add
out
mov
adc
cli
dec
test
xchg
fidivl
and
adc
push
xor
les
mov
das
loopne
xchg
sbbb
inc
add
jp
insl
mov
push
lahf
lds
adc
aad
sahf
adc
xor
jae
pop
mov
call
adc
add
xchg
adc
add
or
cmp
mov
enter
jo
sub
dec
adc
push
dec
push
push
and
or
dec
mov
sbb
cmp
cmp
sbb
push
les
or
push
dec
test
sbb
inc
cmp
ror
add
or
lea
or
sub
repz
cld
mov
inc
aam
mov
push
xchg
je
dec
rorb
jg
add
imul
or
mov
das
pop
adc
arpl
pop
adc
ficoms
pop
pop
int3
out
popf
xchg
xchg
mov
lock
or
add
or
loop
xchg
movsl
out
int3
jp
and
xchg
adc
pop
jecxz
fldl
cmp
xchg
fdivr
dec
out
mov
xchg
push
outsb
inc
repnz
outsb
fmull
jmp
xchg
cmp
neg
xchg
mov
sbb
rolb
std
xchg
cmpsl
push
sbb
push
or
or
ficomps
ror
arpl
or
fs
cli
gs
out
jl
inc
test
pushf
push
gs
pop
mov
adc
mov
arpl
dec
push
mov
xchg
mov
and
loop
dec
stc
jl
out
movups
jl
aaa
push
test
inc
ret
arpl
and
shrl
and
lret
xor
sub
push
fwait
leave
push
mov
out
xchg
cli
addl
shll
pop
leave
push
push
cwtl
inc
sti
pop
adc
inc
sub
add
sti
sbb
fnstsw
into
push
cwtl
add
jle
add
lds
cltd
leave
cwtl
inc
sbb
adc
iret
mov
mov
adcb
and
ror
xchg
cmpsb
dec
icebp
ret
cmpsb
cmpl
mov
les
lret
ret
lret
loopne
mov
iret
inc
les
adc
into
icebp
cmp
cmp
mov
shrl
orl
or
mov
fiadds
loopne
mov
jp
push
jb
out
into
icebp
bswap
lock
into
repnz
pop
ret
mov
mov
xchg
aas
mov
scas
ret
mov
ret
into
mov
xchg
ds
mov
push
push
fs
jle
lret
lret
xlat
movsb
test
and
pop
mov
sub
mov
loope
test
ret
loope
mov
andl
rcrl
jbe
dec
into
ret
pop
dec
push
fldenv
inc
roll
jg
cmp
into
xor
jno
xor
rcrb
cs
bound
mov
xor
les
insb
pop
cmp
cmp
add
or
jo
jle
xor
jno
mov
push
out
shlb
cwtl
lock
pop
lock
loope
mov
aaa
lock
pop
pop
add
cmp
or
dec
int
add
icebp
in
push
adc
scas
mov
int
mov
les
jle
mov
std
add
ror
push
ss
popa
js
jp
in
push
pop
adc
repz
adc
jns
test
mov
fistl
or
rcll
sub
cmp
mov
mov
lods
push
mov
lret
or
adc
xchg
adc
push
and
xor
pusha
jp
pop
cmpsl
stos
popf
or
arpl
cmp
das
fwait
dec
dec
stos
xor
sahf
and
xorb
pop
xor
lcall
mov
test
in
in
xor
adc
jp
lds
int
lea
lods
sbb
mov
aas
int3
dec
push
aaa
xchg
mov
lods
mov
leave
addb
pop
scas
mov
dec
push
ds
push
lea
nop
cmp
add
iret
inc
orl
lahf
mov
cmp
inc
jge
add
dec
mov
es
xor
pop
jle
xor
insl
lods
dec
ds
xchg
mov
inc
int3
mov
addr16
loope
jb
int
sub
sub
lret
adc
inc
lds
cmp
nop
pop
clc
push
ret
xchg
popf
in
pushl
iret
dec
sub
scas
jl
ds
adc
scas
fs
push
sbb
test
cmp
lds
or
push
adc
cmp
mov
mov
sbb
lock
sub
xor
mov
inc
add
cmp
xchg
add
xchg
repz
inc
mov
xor
add
mov
jl
dec
sbb
push
mov
aad
xor
nop
push
iret
sbb
xchg
or
mov
mov
push
cmc
scas
test
dec
cmpb
inc
movsb
movb
cs
inc
scas
mov
xor
int
insl
inc
cmpsl
mov
int
int3
mov
jl
mov
cmc
cmpsb
cmpsl
jle
je
or
mov
xchg
sub
pop
daa
pusha
nop
adc
xor
pop
mov
add
out
inc
popa
in
iret
js
pusha
inc
xchg
jp,pt
movsb
int
adc
add
add
jp
enter
mov
inc
movsl
xchg
push
xor
cltd
outsb
jnp
mov
inc
movsb
loope
xchg
loop
leave
mov
imul
mov
jb
pop
fbld
jo
push
sbb
mov
xchg
mov
jg
outsl
or
test
sbb
dec
gs
pop
mov
mov
xchg
cmp
imul
stos
lcall
or
pop
xchg
or
mov
fldcw
nop
inc
stos
pushf
insb
xchg
sub
push
lea
dec
dec
push
dec
jle
lods
push
sbb
insb
mov
adc
pop
stc
aas
xor
out
xor
adc
std
xchg
shlb
lea
adc
mov
jno
fcoml
mov
ds
sub
mov
loope
mov
cmp
xor
rcll
xor
imul
sub
cltd
test
push
sub
sbb
cmp
sub
scas
int
jo
xor
mov
mov
aas
fcmovne
or
xor
sahf
test
imul
mov
into
sbbl
or
test
jg
jl
cmp
dec
or
or
cmpsl
das
nop
xchg
push
jg
push
jle
lods
leave
cmp
lods
dec
and
and
cmp
pop
lahf
and
jmp
and
push
repz
or
inc
xor
insb
subb
mov
fisttpl
inc
xor
lods
push
mov
or
jl
push
dec
push
mov
nop
bound
repz
push
lret
cmp
scas
jns
lods
and
ret
faddl
cmpsb
rcl
xchg
dec
test
lea
ss
jo
repnz
rcrl
in
dec
outsb
mov
nopl
mov
push
or
jo
jle
mov
adc
test
insl
inc
xchg
cmp
ljmp
xchg
outsl
mov
jno
add
test
mov
std
pop
icebp
shll
pop
roll
jno
sahf
rolb
jle
or
mov
gs
add
nop
push
imul
mov
pop
into
add
iret
scas
adc
frstor
aas
push
leave
xor
cmp
jno
fmull
xorb
push
scas
mov
xchg
mov
mov
push
stos
data16
lea
xchg
arpl
push
sarl
repnz
lds
cmp
aad
decb
mov
pushf
xor
subb
mov
mov
jge,pt
mov
or
subb
jg
xchg
stos
ret
pop
mov
ret
dec
mov
mov
jge
dec
in
jl
inc
scas
add
cmp
int
mov
mov
inc
sbb
add
in
inc
adc
mov
cmp
loop
push
cmp
sub
mov
aam
lds
movsl
clc
adc
mov
or
test
adc
repz
push
aaa
jl
cmp
mov
dec
lods
push
popf
lea
aad
sub
mov
inc
mov
test
inc
pop
shll
xchg
add
dec
js
xor
fimuls
pusha
ret
mov
ret
sub
test
xor
jo
in
stc
into
shrl
cmp
add
jo
outsl
fxch
rol
jmp
add
es
add
inc
test
cmc
call
push
mov
or
lret
cmp
movsl
jl
inc
or
xor
mov
jp
cltd
push
decl
dec
inc
call
xchg
fisttpll
mov
or
xor
cmpsb
cmp
ret
push
xor
mov
movups
xchg
mov
adc
push
and
sahf
movsl
cmp
mov
jo
ss
ds
leave
mov
movsl
call
mov
adc
push
test
out
shlb
mov
sahf
popa
andb
in
or
xchg
xchg
sbb
sbb
pushf
out
jp
or
xor
ret
or
mov
or
std
test
xchg
outsl
sahf
adc
xor
xchg
test
jo
xchg
call
mov
test
jmp
scas
repz
cltd
cmp
vpcomub
jae
adc
dec
test
insl
dec
xchg
hlt
stos
adc
iret
jb
ret
add
int
push
iret
in
pop
repz
sbb
dec
xor
or
inc
push
xchg
lods
xchg
push
scas
rclb
aad
add
js
enter
into
mov
jl
mov
mov
sahf
xchg
movsl
mov
mov
leave
lret
in
mov
xchg
mov
push
inc
mov
sub
adc
xlat
or
cmp
call
push
push
jmp
adc
pop
mov
loopne
dec
dec
jo
mov
sti
icebp
lret
xor
mov
jo
stc
lret
inc
lock
add
insl
cld
xchg
inc
adc
cmp
pushf
add
dec
iret
xor
jo
out
enter
jp
test
aad
imul
xor
pop
dec
outsb
xchg
cmp
mov
cmp
pop
or
pop
dec
mov
adc
shll
movsb
dec
inc
jo
in
push
jae
jl
inc
or
mov
or
shll
stos
dec
pop
outsl
inc
in
dec
ret
pop
cmp
pushl
test
push
add
xchg
enter
cltd
aad
cld
adc
mov
insb
inc
and
stos
push
lcall
dec
imul
cltd
mov
es
inc
xor
jo
daa
sbb
inc
rorb
dec
xchg
xor
or
jg
xor
xor
lea
pusha
dec
or
es
cld
rorb
pop
and
xchg
jp
ret
fwait
sets
xor
ret
cmp
adc
add
movl
xchg
cmpsl
lods
push
and
into
mov
mov
fidivrl
stos
dec
cwtl
xor
iret
fldl
push
add
arpl
jno
rep
inc
sbb
outsb
imul
icebp
xchg
es
push
push
insb
xor
lret
lods
push
leave
ret
jl
inc
sub
iret
outsb
int3
jl
mov
rorl
rolb
or
inc
insl
adc
shlb
xor
dec
es
popf
pop
test
sub
jb
iret
mov
stos
scas
jbe
stos
cmp
orl
mov
shll
in
das
pushf
mov
into
inc
test
iret
mov
mov
add
mov
mov
sbb
iret
loopne
orb
add
dec
iret
cmp
mov
mov
xchg
and
sub
leave
icebp
add
rcrl
adc
jmp
xor
cmp
cmp
lds
sbb
leave
test
cmp
jge
or
mov
enter
cmpsl
faddl
push
repz
fcompl
inc
sub
lahf
push
jecxz
lahf
jnp
pop
dec
test
add
add
or
mov
subb
js
int
mov
sbb
test
adc
lea
jo
ret
shrb
mov
cwtl
mov
inc
ret
cs
in
jno
xor
int
mov
xchg
stos
fnstsw
dec
shlb
in
nop
and
roll
jmp
mov
lahf
lods
sbb
fldcw
mov
lea
pusha
cltd
xchg
int3
lcall
cs
push
push
mov
std
jmp
das
push
inc
xor
jno
pop
sub
cmp
lods
fs
in
jg
push
push
adc
adc
mov
sbb
dec
nop
je
das
out
pop
adc
inc
ficompl
sub
inc
xor
inc
pop
mov
arpl
push
outsl
iret
xor
xchg
popf
xor
je
mov
or
jecxz
shlb
jge
lods
test
int
pop
push
or
stos
test
xor
sub
dec
rcr
cmp
xor
aad
test
insl
jbe
jecxz
rorb
shlb
dec
repz
jo
push
mov
ljmp
pop
xorb
push
aaa
jo
mov
imul
shlb
icebp
mov
insl
dec
pop
mov
sbb
les
ljmp
mov
lods
xor
popa
rcrb
mov
leave
out
inc
xchg
mov
test
cmc
repz
xchg
das
push
mov
push
xchg
push
sahf
jae
pop
out
mov
xor
jecxz
in
fnstenv
scas
rorl
mov
adc
dec
js
inc
and
loop
int
sbb
pop
int3
scas
xchg
push
outsb
xor
add
fimull
mov
add
mov
jno
fisttpl
push
jb
testl
mov
xor
push
push
jge
adc
es
js
cmpb
xchg
push
ucomiss
iret
dec
sahf
jge
cmp
lret
fxch
rorl
add
ds
pushf
cmp
dec
cmp
arpl
push
push
or
iret
dec
push
les
jl
ds
dec
sbb
ror
or
clc
push
dec
adc
xchg
stos
loopne
sub
xor
adc
in
sub
vmwrite
mov
adc
xchg
and
fisttpll
sub
cmp
inc
dec
shlb
sar
out
mov
mov
jbe
flds
lods
adc
jl
sub
xorb
jge
lods
out
ss
adc
outsb
les
daa
pop
test
mov
fildll
or
xor
add
jae
arpl
int3
pop
lea
lods
rol
jle
xchg
xor
dec
mov
sub
bswap
loope
jno
ret
shll
add
pop
push
scas
lds
push
xchg
or
aaa
pop
cmp
xchg
jbe
popf
int
xchg
xchg
mov
sub
leave
popa
add
pop
js
xor
mov
les
push
jp
js
rcr
jns
push
ds
xor
dec
jo
dec
fs
xor
out
inc
lahf
or
outsb
or
faddl
iret
mov
push
movsb
iret
popf
dec
iret
test
ret
imul
jecxz
cmp
adc
mov
cmpsl
add
and
or
repz
sub
jle
lods
outsl
mov
mov
dec
jp
jno
cmp
enter
insl
dec
cld
scas
aaa
iret
outsl
outsb
push
cmpsl
xor
xor
sarb
adc
mov
or
jnp
adc
popf
int
in
std
lret
sbb
test
sti
inc
mov
jae
dec
sub
xchg
pop
xor
xchg
jecxz
pop
jb
jns
pop
cmp
sub
lods
aaa
in
sub
in
aaa
cmp
inc
xchg
leave
lock
dec
push
stos
push
jno
stos
jo
sub
imul
dec
inc
aaa
dec
int
loop
dec
push
insl
mov
push
aad
shrb
addr16
mov
sbb
mov
cmpsl
dec
arpl
sub
mov
in
mov
fdivrs
push
dec
dec
push
imul
fnstenv
mov
mov
mov
inc
and
js
pop
mov
fs
xchg
dec
ret
mov
pop
mov
sub
addl
mov
ret
test
sub
ret
movsb
sarl
fs
inc
mov
mov
pop
dec
loope
mov
cs
shl
notb
aaa
das
fidivrl
bound
sarb
aad
shll
int
lret
mov
inc
loope
aam
int3
fisubrs
roll
int3
lret
in
jp
dec
lret
xchg
pop
loop
int
lds
test
shll
mov
leave
add
sti
mov
xlat
rol
insl
mov
inc
mov
mov
dec
or
lahf
test
mov
lds
stos
shrb
cmp
jae
jl
or
add
mov
sbb
jecxz
clc
cmpsb
orb
fstpt
jns
mov
ss
mov
push
jns
pushf
mov
xchg
sbb
inc
mov
icebp
mov
pop
shll
push
popf
iret
push
xor
es
push
cltd
xchg
stos
test
and
xor
and
sti
mov
dec
push
pop
or
jno
inc
pop
sti
mov
jno
mov
pop
sarb
pop
loopne
stc
jge
mov
popa
les
adc
xchg
pop
test
mov
mov
mov
mov
mov
iret
daa
scas
ret
jl
cmp
pushw
aas
out
xchg
in
jbe
dec
out
aas
fbld
push
mov
pushf
sub
cmpsb
or
es
insl
lahf
mov
sub
mov
dec
outsl
cmpsl
sub
movsb
movsb
insb
aam
outsb
rcr
cmpl
in
fdivr
nop
dec
sbb
mov
stos
outsl
ja
repz
insl
loop
out
mov
stos
or
sbb
into
lea
jge
pop
cmpsb
faddl
daa
lock
xchg
dec
divl
repz
and
push
mov
cmpsb
je
scas
outsb
pmullw
mov
cmp
andb
jo
das
jp
dec
cwtl
daa
stos
push
jg
lods
mov
js
pop
mov
mov
mov
ss
mov
adc
ja
or
in
js
inc
lret
pop
push
jge
push
pushf
jno
mov
cmp
jo
outsb
rep
add
xchg
daa
stc
xor
inc
jmp
lods
sub
xor
insl
sub
or
xor
mov
cmp
fs
mov
xor
xchg
mov
test
cmpsl
xchg
jge
mov
mov
push
mov
adc
add
fdivrl
sub
lahf
sbb
jns
jb
mov
test
mov
or
es
in
stos
pop
scas
outsb
outsb
push
jmp
lea
loop
mov
lods
jno
jle
xchg
mov
pop
fs
prefetch
insl
push
sub
pop
mov
mov
inc
jno
cmp
movb
sahf
xchg
sbb
in
int3
or
outsb
jmp
pop
pop
out
ljmp
mov
dec
decl
cmp
out
xor
je
arpl
cmp
xchg
inc
dec
add
stos
inc
inc
push
cmpsb
push
fcomps
popa
shrb
jo
enter
sub
pusha
and
test
ds
push
jns
or
sub
rclb
inc
inc
lahf
test
out
sub
imul
cmpsb
adc
sbb
imul
push
xchg
leave
lds
push
pop
or
test
mov
pop
jno
mov
cltd
sub
nop
dec
mov
js
adc
mov
mov
push
data16
mov
call
xchg
jae
push
imul
dec
xchg
orl
cld
lods
jnp
daa
aam
mov
ds
jo
test
sbb
test
sub
adc
les
outsb
sbb
or
cmp
cmp
inc
add
stos
add
pop
push
fisttps
out
dec
mov
imull
out
movsl
jl
aad
in
rcll
cs
scas
mov
and
jae
dec
fcmove
scas
mov
lods
sub
lret
push
inc
popf
icebp
pop
mov
cmc
jp
insb
rcll
in
sub
pusha
orl
repz
pop
cmp
ljmp
xor
leave
es
lods
mov
test
nop
scas
cmp
outsl
dec
in
add
dec
daa
lret
mov
dec
push
and
jns
sbb
test
jns
leave
repnz
jnp
mov
mov
push
in
mov
mov
jo
test
outsl
push
xchg
ret
and
cmp
cmp
push
sbb
insl
fwait
dec
stos
sahf
jns
jp
cmpb
xor
les
push
xorb
inc
repnz
mov
lds
inc
out
push
jl
dec
inc
lods
jecxz
test
or
les
push
xor
into
inc
xchg
mov
xor
scas
fwait
pop
pushf
sbb
sub
pop
sbb
adc
pusha
xor
lods
adc
adc
fbld
sub
mov
and
nop
repz
lea
sbb
call
in
test
sub
fldcw
sub
hlt
nop
setg
scas
sbb
jl
adc
pop
js
sarl
mov
jl
mov
in
inc
lods
pushf
mov
jp
vsubpd
cmp
mov
dec
pop
fisttpll
push
lock
or
or
movsl
push
inc
dec
and
stos
cwtl
sub
jmp
sub
ss
mov
insb
mov
sub
mov
icebp
or
popf
adc
scas
jmp
scas
imul
imul
aaa
sbb
sub
xchg
adc
insb
aaa
xor
mov
outsl
insb
stos
roll
cmp
test
es
or
fcoml
lea
or
jo
adc
lock
pusha
dec
jle
mov
lock
test
xor
jecxz
adc
mov
lret
iret
enter
xor
mov
repz
in
sub
outsb
dec
and
subl
je
rcrl
in
sbb
pop
adc
fwait
outsl
xor
int3
jecxz
scas
jl
pop
stc
rorl
inc
mov
xchg
mov
lahf
mov
pushf
add
add
pop
shr
mov
repz
xchg
scas
stos
jmp
mov
sub
push
jg
inc
enter
pop
call
faddl
xor
call
cmp
out
xor
dec
in
inc
or
and
add
sub
es
sbb
orl
ja
test
xchg
push
mov
pushf
mov
std
add
test
add
pop
sub
push
movsl
divl
pop
dec
lods
imul
add
push
and
pop
call
mov
fstpl
jns
and
mov
das
lahf
pop
insb
jmp
add
fstpl
or
push
cwtl
mov
sub
notb
sub
mov
mov
movsb
enter
cmp
push
lods
push
test
inc
sub
fidivrl
mov
int
int3
ds
rolb
xor
out
movsb
lahf
test
movsl
adc
pop
outsl
rcrb
lahf
es
add
out
je
cmpsl
adc
imul
lock
lret
dec
flds
push
mov
jge
imul
dec
xor
sub
sbb
pop
ljmp
lret
pop
aas
pushf
lahf
test
sub
or
addl
push
push
mov
aaa
mov
adc
loope
jle
scas
in
stos
test
xor
and
sub
push
xchg
insl
mov
ret
or
push
dec
or
xor
dec
test
adc
xor
jno
dec
cltd
cmp
fs
jns
cmpsb
dec
add
mov
dec
cs
test
cs
and
outsb
imul
and
add
jnp
adc
outsl
inc
leave
mov
shrl
out
iret
add
popf
xor
push
cmovnp
or
scas
rol
mov
movsl
test
lds
cs
lahf
rclb
insl
or
cmp
dec
insl
push
mov
dec
dec
xchg
insb
fadds
mov
sti
or
imul
les
jmp
stos
ds
sub
mov
es
sbb
sub
xor
xor
dec
ss
int3
ss
mov
and
cmp
fldln2
jecxz
jle
nop
sub
jl
ljmp
mov
ds
jno
je
dec
dec
rcrb
pop
decl
adc
and
cmpsl
mov
cmp
mov
jae
adc
in
in
and
lahf
cmpsb
mov
xchg
sbb
repz
cmp
xor
pop
inc
nop
int3
flds
adc
xchg
adc
xlat
xchg
sub
cmpb
andb
fs
repz
pop
inc
in
xor
and
mov
pop
fcmove
stos
dec
mov
jl
sbb
and
inc
jnp
and
add
dec
jecxz
gs
mov
xchg
sub
add
sub
inc
and
lret
out
jns
scas
mov
stos
imul
push
mov
sub
insl
xor
out
movsb
inc
clc
mov
scas
int3
or
call
and
out
js
mov
pop
js
jg
in
push
jnp
das
imul
xchg
lods
sbb
sbb
es
lea
mov
pop
cmc
test
fwait
or
jl
jno
xor
adc
jecxz
movsl
or
jmp
xor
xchg
mov
pop
jle
xor
xchg
shll
repnz
in
adc
jne
sbb
adc
clc
xlat
cmpsl
or
inc
sub
repnz
dec
mov
dec
cltd
cmp
xor
imul
mov
stos
scas
xor
or
ljmp
movsl
sub
inc
ud1
push
es
insb
pop
push
inc
test
rclb
add
inc
sub
fmull
dec
popf
dec
imul
jb
xor
dec
popf
lods
frstor
sub
xchg
femms
sti
xor
insl
leave
cmp
push
fildll
pop
xor
sbb
rclb
xor
shll
push
dec
xchg
pushf
repnz
add
xchg
dec
clc
test
xor
xchg
dec
adc
mov
mov
jo
xor
test
sti
insb
mov
cltd
sub
mov
and
jg
lret
add
cmp
cmp
sbb
pop
pop
jecxz
cs
mov
sarl
xchg
push
add
or
movsb
push
icebp
and
push
mov
inc
mov
shrl
jo
jns
in
nop
or
sti
sahf
jb
xchg
cli
or
or
or
loope
imul
scas
mov
adc
stos
add
push
gs
xor
es
repz
dec
ja
cmpsb
repz
cmp
int
int
std
cmp
mov
iret
jmp
ja
or
outsb
ss
scas
cmpb
popf
incb
inc
xor
mov
subl
or
push
xchg
sti
fildll
cmpsb
ficompl
mov
add
shl
ss
enter
xor
xor
test
int
cmpsl
es
insl
sub
dec
lea
mov
jb
mov
mov
xchg
mov
lods
mov
pop
jmp
lea
add
outsb
sti
xor
in
fdiv
stos
mov
xchg
sub
inc
test
dec
mov
pop
pop
xchg
rol
mov
repz
popf
push
jge
call
jae
cmpsb
and
xor
inc
dec
jnp
ss
xor
push
push
jg
push
pusha
mov
cs
xor
jle
rclb
sbbb
dec
inc
mov
popf
xchg
push
jl
jmp
es
push
add
fcmove
dec
test
mov
outsb
xchg
pop
out
lods
leave
dec
jno
popf
outsb
iret
cld
dec
ja
ljmp
insl
mov
pop
jecxz
push
cmc
xor
pop
adc
clc
in
and
xorl
push
ljmp
pusha
inc
adc
xchg
push
lahf
test
test
in
cmp
push
sub
adc
popf
cmpsb
mov
pop
jecxz
sbb
jbe
pop
push
jae
fwait
in
xchg
out
in
call
jle
add
add
xchg
cmp
mov
fs
pop
lahf
fimuls
add
addr16
xchg
nop
fldl
hlt
jnp
lahf
jbe
xchg
mov
add
sbb
or
nop
dec
rolb
inc
sbb
push
fildl
jno
mov
imul
jmp
lahf
pop
aas
scas
das
sbb
in
aaa
es
inc
mov
sahf
push
test
push
xchg
jmp
or
stos
idiv
fsubp
lret
in
clc
push
fsubp
imul
addr16
fldenv
pop
imul
mov
sub
cmpsl
mov
mov
repnz
or
xor
cs
lds
dec
popa
push
ss
cs
cmp
icebp
jbe
cmp
mov
or
out
fldcw
add
mov
in
jne
push
cwtl
repnz
fnsave
inc
inc
out
add
movsl
jge
xchg
out
or
lods
jg
loop
lock
std
ljmp
cs
sbb
das
and
cmp
xor
stos
or
daa
mov
sti
mov
test
cmpl
sub
stos
fcompl
jns
or
movsl
cli
xor
add
je
scas
xchg
or
add
movsl
sbb
jecxz
lea
pushf
insl
test
leave
mov
inc
sub
cmp
aas
jo
xor
xor
flds
aaa
lahf
loop
adc
js
int
adc
mov
push
shrb
lea
cmpsl
scas
push
xor
xor
sbb
pop
sarb
xor
aam
or
in
mov
dec
mov
ss
test
cmp
jge
out
stos
fsubl
or
cmp
repz
push
push
in
jno
test
js
add
xchg
gs
jecxz
popa
cmpsb
lods
xor
mov
mov
jge
scas
jge
dec
sbb
out
adc
add
mov
push
aaa
pop
movsl
push
dec
in
add
mov
cmp
xchg
adc
mov
pushf
fmuls
fidivrl
mov
in
filds
test
movsl
mov
jg
fcomip
xor
jns
imul
jne
or
imul
ss
imul
mov
std
daa
test
test
out
stos
xor
xor
xlat
jno
inc
test
adc
jns
shl
fsubl
sti
scas
scas
popf
pop
xchg
in
sbb
cltd
xor
imul
push
cwtl
adc
inc
mov
scas
in
xchg
into
sbb
lods
in
in
inc
ds
aam
insb
frstpm(287
addr16
imul
test
cli
repz
push
jecxz
lods
out
loop
test
mov
add
lret
jecxz
ss
xchg
daa
and
jg
outsl
mov
jmp
lods
outsb
jecxz
xchg
mov
xor
enter
fisubrs
negl
jmp
es
jbe
addb
or
cmp
push
push
pushf
push
imul
fidivrl
jecxz
pop
xor
arpl
and
mov
adc
stos
loopne
test
add
xor
popa
imul
pop
sbbb
cmp
jno
pop
adc
pushf
das
jmp
pop
mov
add
adcb
xlat
inc
or
mov
roll
jge
leave
adc
addr16
and
decl
insb
sbb
movsb
mov
cmp
js
gs
or
sub
dec
sbbb
cltd
or
sub
sub
fisubrl
pusha
lahf
or
loopne
nop
mov
fistps
mov
outsb
insl
test
repz
movsb
loope
pusha
iret
add
fstl
or
aaa
sbb
xchg
popf
mov
xor
shlb
mov
icebp
cmp
cmp
pop
xchg
mov
repnz
push
xchg
cld
daa
fsubp
mov
pop
nop
cmp
sub
cli
scas
push
out
iret
in
jp
lods
cmp
test
cmpsb
test
xor
out
outsb
mov
sub
fcmovnb
sbb
push
dec
adc
push
in
lds
imul
mov
xor
jmp
sti
std
push
enter
pop
jle
jl
and
dec
es
mov
and
inc
xchg
xor
rclb
adc
ljmp
and
push
cs
xor
clc
outsl
int
push
and
fsubl
dec
sub
cmp
jb
movsl
cmp
xchg
andnps
lods
pusha
out
push
pusha
imul
and
jl
jns
jmp
mov
jns
bnd
jo
xlat
cmp
push
xchg
sbb
sbb
ficompl
inc
dec
mov
int
pop
movsb
ja
push
jmp
fsubs
clc
mov
push
sbb
aas
iret
and
cmpsb
test
inc
mov
jnp
mov
scas
fsubrl
subl
jns
push
ljmp
nop
ds
mov
jb
and
jecxz
mov
cmpsl
xchg
in
fidivrl
sub
xchg
dec
daa
aaa
push
jg
push
stos
sub
and
fs
insb
out
mov
movsl
icebp
test
insb
adc
push
leave
and
movsl
sbb
sbb
or
outsl
jle
jecxz
repz
mov
sahf
push
xchg
lock
mov
rorl
mov
out
test
mov
daa
push
push
test
std
icebp
dec
div
xor
sbb
addr16
sub
push
out
fsts
outsl
push
pop
mov
rorb
cmp
movsl
sub
clc
or
xchg
into
jmp
push
xchg
push
lods
fmull
in
in
and
and
ss
hlt
subl
sbb
pop
fs
outsb
ja
out
dec
cmp
xchg
das
cmpsl
mov
leave
and
jle
add
pop
mov
insb
add
mov
and
pop
test
jb
out
add
lods
dec
push
inc
mov
mov
add
mov
movsl
cmp
repnz
clc
movsb
addr16
fs
xchg
xchg
scas
jge
lret
cld
std
int
pop
ds
and
out
mov
lock
and
adc
repnz
pop
mov
outsl
or
pop
cmp
std
in
das
push
pop
shl
mov
scas
jmp
adc
cmpsl
xor
lea
pop
subb
xchg
dec
xor
push
sub
push
xchg
or
mov
add
lea
movsb
fs
mov
xor
xor
lock
cs
sub
jge
xchg
pop
jns
push
dec
sti
sbb
gs
xchg
scas
sbb
insl
icebp
scas
hlt
call
xor
push
xchg
push
cmpsl
xlat
push
jno
fwait
mov
and
sub
or
jle
adc
or
test
scas
fdivs
js
rorl
stos
inc
mov
fists
icebp
call
jns
dec
or
test
fldenv
scas
mov
clc
lahf
dec
inc
ret
repz
aas
or
mov
fbstp
std
xor
fmuls
push
popa
mov
mov
mov
pop
es
ljmp
aam
pop
in
dec
sub
hlt
rorb
and
xor
fisttpll
lds
sahf
jp
pop
loopne
aaa
sub
adc
xor
dec
mov
ljmp
xchg
jecxz
mov
in
cltd
push
add
push
jle
or
sub
cltd
mov
stos
mov
mov
insb
mov
jg
aad
adc
imul
push
icebp
xor
inc
dec
sahf
mov
inc
addr16
repz
ljmp
jg
daa
imul
call
imul
inc
lret
out
ljmp
mov
mov
sbb
lods
es
aas
cs
arpl
dec
mov
cmpsl
aam
repnz
aas
mov
sub
jo
pop
aas
lea
cmp
cmp
stos
iret
out
cmp
sub
mov
or
dec
sti
dec
jecxz
test
shlb
sti
xchg
adc
lea
sahf
les
movsb
out
incl
sti
or
xor
insb
pop
cmp
es
gs
je
popl
adc
cs
jecxz
cmpsl
mov
popa
int
adc
jo
jecxz
in
push
xor
cltd
sbb
scas
xchg
push
in
fidivrs
lds
orb
dec
cmpsl
int
clc
pop
daa
ds
pop
in
push
ss
jno
sub
jno
fmuls
fmuls
outsb
mov
adc
les
push
jle
bnd
pop
or
in
cs
loop
scas
sub
sub
lds
cmpsl
mov
and
lods
pop
fnsave
cmp
jle
das
ror
jmp
and
pop
sbb
fs
inc
rcrb
out
orb
aas
mov
out
addr16
mov
lods
and
sbb
dec
in
lea
push
bnd
xor
test
dec
pop
call
adc
sub
imul
mov
cmp
and
and
and
in
cmpsl
sbb
std
sub
sti
jbe
pop
adc
fcom
sub
push
sbbb
shrl
xor
mov
dec
gs
repnz
es
cs
push
dec
or
push
gs
incb
fildll
jae
pusha
or
mov
fisubrs
mov
repnz
jg,pt
adc
pop
je
ds
je
mov
dec
movsb
notl
ljmp
sub
mov
add
fdivrl
xor
clc
inc
cmp
push
cwtl
dec
movsl
notl
hlt
xchg
and
inc
test
fidivs
stos
jns
xchg
or
mov
jb
std
rorb
cmp
or
push
inc
fdivl
outsb
dec
xchg
mov
fcmovne
adc
scas
test
rcr
or
shlb
fmull
sub
inc
jp
mov
and
loopne
es
cmp
dec
jo
jp
in
pop
xchg
lock
mulb
gs
clc
repnz
jmp
repz
lods
in
fidivrl
and
add
xchg
and
movl
xor
int
mov
dec
mov
add
test
faddl
addr16
movsl
jmp
int
movsb
in
ja
and
cs
sbb
xchg
lahf
sub
mov
orl
lods
lods
in
mov
daa
in
mull
movsl
sti
adc
or
sub
jge
and
mov
add
ficoms
fdivrl
fidivrs
lret
mov
test
jmp
sub
xor
in
jbe
js
jae
fbstp
shr
in
jp
jmp
roll
dec
mov
repnz
push
loop
in
cmp
sub
pop
sti
xor
mov
test
in
jge
jns
mov
insl
fs
sbb
ljmp
int
mov
aas
repnz
or
mov
pop
fsubr
adc
inc
or
cmp
dec
lahf
jns
push
das
bound
orb
adc
pop
dec
out
and
inc
or
sub
aaa
out
cmpsl
xor
gs
pop
jno
push
dec
dec
mov
call
jmp
dec
test
xchg
adc
adc
test
ficompl
dec
push
out
test
sti
adc
in
pop
xlat
add
adc
add
pop
add
ss
gs
cltd
int3
push
mov
pop
stos
nop
iret
lret
or
ljmp
out
mov
and
xor
mov
adc
jmp
push
aad
mov
fisttpll
insl
sub
inc
out
cmp
out
or
push
jge
shll
sbb
test
and
cmpsl
dec
jae
out
fstpt
pop
addr16
pushf
xchg
mov
fisttpll
out
jmp
adc
das
and
and
movsl
pop
add
xchg
outsb
dec
outsl
cmp
out
rorl
loop
movsl
ljmp
daa
xchg
mov
loop
ds
cmpsb
insl
jns
push
cmp
ljmp
js
mov
jno
jno
xchg
inc
cltd
fsts
jge
sbb
or
xchg
push
scas
and
lock
js
ljmp
or
jae
or
call
gs
dec
test
in
push
vmwrite
cltd
rcl
push
shlb
sub
jo
jo
adc
test
and
xchg
out
pop
test
push
mov
gs
push
jle
mulb
push
pop
inc
stos
mov
cmp
push
push
fsubl
out
daa
inc
scas
mov
test
mov
xchg
sbb
aaa
mov
dec
jle
addr16
iret
xor
imul
sbb
mov
mov
stos
addr16
add
adc
inc
mov
out
sub
call
add
stos
ja
in
rcr
mov
sbb
je
and
outsb
aaa
xor
fidivrs
daa
std
test
call
movsl
jge
add
or
cmp
xor
mov
in
les
xor
sub
cltd
mov
mov
xchg
js
jmp
insb
leave
xor
or
sub
mov
xor
clc
in
push
inc
jo
out
mov
stos
fbstp
dec
sub
xchg
dec
jecxz
cld
call
jecxz
sub
dec
push
jmp
push
add
xchg
mov
aas
dec
lock
sub
fidivs
lds
icebp
cmp
movsb
jle
mov
inc
aam
repnz
xchg
xchg
lods
fdivs
test
inc
sbb
mov
mov
xor
or
outsb
adc
pop
sbb
and
cmp
ss
fmull
jae
mov
ljmp
jns
out
jo
push
or
int
push
inc
fisubrl
pop
mov
repnz
lods
es
testl
mov
pusha
shrl
prefetch
shrb
mov
in
mov
mov
pop
repnz
inc
adc
repz
xchg
sti
adc
cmpsl
sub
out
add
and
in
sbb
sub
lods
sbb
cmp
or
lods
ljmp
mov
into
cmp
push
lds
jle
sti
pop
add
addb
xchg
mulb
test
sub
or
pop
add
or
movsl
pop
xlat
dec
mov
cld
adc
ja
enter
sub
fimuls
out
dec
sub
xchg
adc
push
scas
xchg
in
push
dec
jnp
adc
or
adc
outsb
daa
mov
or
push
in
sub
mov
dec
cli
out
push
scas
mov
pop
test
xchg
call
lods
push
jmp
mov
test
xchg
in
cmp
es
push
sti
jno
sub
jnp
gs
xchg
jg
incb
dec
jne
dec
inc
adc
pop
jecxz
stos
loop
scas
lods
push
jle
xlat
insl
and
lret
or
or
inc
push
loope
imul
mov
xor
push
mov
dec
and
daa
jo
cltd
iret
and
pop
dec
das
loopne
jns
dec
divl
test
ret
xchg
cld
push
sbb
or
jb
mov
ja
scas
out
dec
ja
push
sub
sub
cmp
mov
and
out
cmpsl
jg
or
pop
das
pop
frstor
inc
push
mov
cwtl
adc
jecxz
iret
lods
jne
xor
inc
movsl
xchg
xchg
in
adc
mov
in
cs
dec
mov
sahf
in
aad
push
enter
out
lret
cmpsl
jle
cli
test
rorb
jbe
scas
pop
jns
jne
jg
repz
nop
push
mov
pushl
sub
lock
jg
sub
cli
pop
rcr
adc
popa
push
sahf
pop
push
mov
divb
and
cs
sub
or
pusha
rcrb
jge
addr16
in
pop
sub
subl
cli
cmpsl
in
aad
rcrb
out
mov
add
scas
jnp
repz
testl
hlt
add
fiadds
leave
fistpll
xor
or
jb
add
jns
push
pop
jnp
out
call
sbb
jb
sahf
imul
call
std
out
insb
lea
xor
xchg
or
adc
es
mov
adc
ljmp
inc
inc
mov
out
add
divl
cmp
popf
call
cmp
es
mov
jo
ss
jl
mov
fildll
addl
insb
xor
movsl
cli
in
stos
pushf
jnp
out
pop
pop
icebp
push
js
int3
pop
or
xor
cmpb
dec
add
call
push
sub
mov
cltd
aas
es
pop
jecxz
gs
dec
nop
mov
ljmp
dec
scas
mov
out
lods
js
dec
cmp
jbe
jno
add
push
cmp
movsb
and
divb
sub
adc
adc
int
or
das
shll
lods
mov
addb
pop
cmp
inc
jo
push
inc
push
fsubrl
push
inc
test
pop
testb
adc
or
stc
push
inc
sbb
or
orl
adcb
fcompl
addr16
outsb
int
pop
outsl
pop
and
repz
pusha
xchg
sahf
outsl
mov
push
cmp
xchg
ja
movsl
or
repz
push
xor
repz
out
dec
and
mov
js
or
dec
dec
js
push
add
jmp
or
xor
sbb
divl
ds
sub
jbe
mov
je
rolb
out
cwtl
les
out
jnp
or
or
fcomps
mov
imull
xchg
movsb
adc
movl
test
mov
cs
mov
sbb
rep
dec
gs
mov
cmp
sub
jl
sbb
lock
pop
sub
mov
sbb
mov
pop
stc
insb
mov
mov
mov
push
sub
or
add
outsl
push
fimuls
mov
das
pop
or
pop
xor
test
xor
jecxz
dec
cwtl
in
mov
sub
into
sbb
divb
adc
sti
icebp
ret
rcll
loopne
xor
pop
jae
insl
and
xchg
aaa
mov
fiaddl
das
pop
sti
fildll
das
ds
nop
std
inc
test
jnp
and
adc
or
es
sbb
or
inc
cmp
xchg
add
add
das
clc
sub
inc
inc
loop
dec
mov
sub
and
mov
dec
sub
sub
movsb
jb
xlat
imul
lods
pop
cmovle
scas
faddl
jl
scas
pop
aas
push
jnp
shlb
jge
enter
dec
hlt
nop
pmaxsw
or
movsb
jmp
push
jl
std
mov
loopne
jo
xchg
fnstsw
mov
jmp
jae
fidivrl
ror
iret
jge
in
sbb
sbb
jecxz
shll
xchg
jmp
xchg
pop
imul
sub
lret
sbb
xlat
hlt
lret
adc
in
cwtl
add
shll
lret
mov
cld
adc
dec
aam
mov
ds
dec
fstpl
test
pop
mov
lea
repnz
divb
and
push
out
mov
push
sti
and
xchg
jecxz
xor
push
push
dec
xor
sub
or
addr16
ss
cld
lahf
dec
in
je
xor
jbe
mov
out
jae
out
dec
and
push
sub
imul
mov
scas
inc
cli
fiadds
psubsb
and
xor
test
in
sbb
cmpb
adc
pop
cmp
in
cmc
push
pop
imul
pushf
inc
jo
add
imul
cmp
add
mov
movsl
sub
inc
sarb
sbb
dec
in
out
sub
lea
outsb
scas
fidivrs
aas
xchg
inc
out
sbbb
mov
sbb
cld
xlat
loop
xchg
mov
jnp
jmp
rcll
sbb
xchg
add
cs
lea
das
push
les
daa
frstor
mov
cld
fsubs
mov
adc
mov
test
jmp
lods
sub
jmp
in
pop
mov
adc
aad
pop
daa
scas
js
std
movsb
mov
mov
loop
pusha
fidivs
leave
adc
stos
sbb
or
cld
mov
pop
les
rolb
ljmp
js
inc
in
cmp
shlb
mov
lods
test
pop
add
dec
push
pop
jmp
ss
pop
mov
movsl
cmpsl
in
dec
in
mull
inc
test
jp
sbb
dec
mov
jb
add
cmp
xchg
xor
dec
mov
call
mov
or
xchg
sub
xchg
mov
mov
fbld
push
testb
rcrl
xor
mov
test
loop
ss
jbe
ss
dec
inc
pop
push
rcrb
das
sub
cmpsl
enter
dec
mov
test
popa
adc
aaa
cld
outsl
stos
fistpl
daa
ficomps
and
push
pop
enter
daa
jge
lods
out
shrb
cmp
push
sbb
push
sbb
cli
xchg
inc
dec
js
addr16
push
jnp
dec
movsl
cmp
aas
mov
lea
xchg
test
xchg
movsb
push
lds
pop
pop
push
es
clc
mov
xchg
inc
adc
test
dec
sub
adc
rol
psubb
mov
dec
in
xor
mov
xor
mov
or
mov
fwait
inc
mov
push
out
pop
or
test
or
insb
imul
mov
dec
leave
jg
pop
jmp
movsb
test
aam
icebp
pop
test
cmpsl
jb
and
inc
test
out
mov
adc
inc
mov
xor
lds
xchg
adc
movsl
aaa
jae
js
cmpsl
enter
gs
and
adc
sub
stos
sti
repz
cmpsl
loop
scas
fsubl
and
jp
das
cmp
fwait
inc
cmp
ds
lahf
pop
mov
fs
cs
movsl
ja
out
sti
jle
sti
jbe
adc
incl
aam
call
xchg
cmp
xchg
xor
xor
xchg
push
adc
fistps
cs
inc
jmp
sub
sbb
xlat
test
pop
push
fsub
sub
jns
push
cld
fstpt
testl
fsub
aas
pavgw
push
out
sbb
mov
lock
or
repnz
dec
and
inc
scas
hlt
lahf
stos
adc
sub
sub
add
push
es
int
aam
sti
and
fs
hlt
popa
das
push
hlt
fldl
loope
mov
pop
out
and
int
loop
push
imul
insl
cli
mov
adc
push
pop
lret
int3
jecxz
clc
imul
xor
cmp
dec
loop
out
dec
in
xor
ja
adc
jns
cmp
pop
xorb
outsb
les
subb
outsb
lods
dec
sub
lret
sbb
scas
out
dec
les
lds
ja
imul
cli
icebp
lods
cmp
notl
in
pop
xchg
stos
sub
repz
dec
outsb
stos
cmp
test
push
adc
sub
xchg
sub
mov
sub
xor
sbb
add
test
addb
dec
test
stos
xor
testb
or
pop
xor
scas
aas
shlb
popl
js
call
aam
rolb
imul
push
sbb
pushf
in
lahf
orb
es
scas
dec
insb
fimull
and
push
repz
pop
jns
sti
popa
xor
ret
sub
jb
dec
inc
sub
dec
ja
adc
repnz
cli
pop
sub
or
ret
or
jl
imul
adc
mov
jb
push
fcoml
inc
push
js
push
pop
mov
xor
pop
fs
jae
aam
sub
nop
rol
icebp
and
filds
xchg
lock
call
jmp
xor
ljmp
or
and
add
icebp
xlat
out
xor
jbe
mov
dec
sarl
push
insl
stc
lods
xchg
jno
sti
xor
cmp
push
jle
cwtl
push
mov
rol
subl
daa
ds
clc
push
mov
or
ljmp
pop
inc
stos
xor
addl
and
cltd
xor
or
mov
xchg
mov
xchg
in
aam
scas
ret
test
dec
shll
xchg
or
lock
pusha
mov
incb
outsb
push
adc
movsb
je
insl
adc
xor
sub
rcll
or
leave
adc
sub
test
cs
push
sub
cmpsl
jmp
or
imul
rcrl
sti
outsb
mov
jp
mov
icebp
test
fcmovnbe
dec
xchg
testl
sub
outsb
adc
shrl
adc
adc
cld
pop
jae
repnz
cs
aam
es
insl
cltd
das
movsl
fisttpll
fildll
adc
les
adc
bnd
test
insb
outsb
icebp
leave
ret
pop
xor
jge
mov
jns
mov
mov
jecxz
mov
xor
push
push
ljmp
ds
imul
sbb
sbbb
mov
in
imul
ret
rorl
loope
jae
mov
push
mov
inc
add
scas
pop
lahf
outsl
pop
dec
pop
das
fimuls
lcall
out
cltd
out
pop
out
sbb
fsubr
cwtl
out
pop
out
sbb
fucomi
fwait
out
pop
out
sbb
xchg
out
push
out
push
out
aad
xchg
out
push
out
adc
sub
lret
xchg
add
xor
icebp
repz
in
pushf
jmp
daa
leave
jecxz
pop
test
pop
pop
dec
and
cwtl
daa
lret
loope
nop
test
xchg
into
xchg
mov
xchg
lea
cmp
inc
repnz
push
inc
jecxz
xchg
movl
mov
pop
lret
pop
mov
dec
pop
or
movb
pop
popa
inc
loop
out
xor
fwait
test
pushf
iret
fmull
pop
dec
mov
xor
add
jmp
ljmp
push
enter
test
inc
xor
add
shlb
adc
add
ret
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
nop
mov
in
in
push
adc
cltd
push
test
pop
test
pop
test
add
pop
sub
pop
ficompl
and
xchg
push
int
imul
push
test
dec
xchg
aas
in
jmp
add
leave
xor
mov
aaa
xchg
inc
arpl
adc
repnz
add
xchg
stos
movsl
mov
inc
push
inc
scas
jo
pop
outsl
dec
dec
or
iret
jg
out
lret
out
inc
jecxz
pop
test
dec
pop
adc
frstor
pop
dec
pop
enter
pop
inc
and
scas
jle
dec
imul
sub
mov
adc
fldl
dec
xchg
inc
mov
mov
cmove
add
inc
mov
fwait
adc
xor
add
repnz
inc
xor
adc
ss
lds
movsl
addb
test
pop
xor
nop
sub
inc
xchg
ss
movsl
mov
int
sub
ja
and
adc
add
iret
cwtl
fwait
dec
xchg
dec
xchg
fld
ret
test
add
test
out
sbb
cmpsb
out
ss
vandnps
in
je
add
loop
icebp
ret
in
loope
jno
shl
xor
xchg
jns
ret
int3
jb
mov
push
push
shl
pusha
jo
bound
and
push
ds
int
pop
push
in
push
jl
out
push
andps
push
fcoms
sti
push
mov
cmpsb
push
ss
lds
in
xor
jg
outsl
fmuls
adc
mov
sub
cmpsb
call
repnz
leave
call
pmaxsw
out
lret
out
dec
out
or
out
xchg
inc
out
push
out
out
inc
out
add
out
add
out
xchg
inc
out
pop
les
outsl
adc
das
xchg
sqrtps
adc
shr
nop
out
push
mov
mov
adc
into
pop
mov
dec
pop
push
pop
int
lea
dec
pop
or
not
inc
or
iret
pop
popl
dec
pop
sysret
lret
pop
dec
pop
or
leave
pop
dec
pop
or
shrb
or
lret
pop
mov
dec
pop
or
movb
pop
inc
pop
push
test
add
inc
xchg
pop
push
mov
cwtl
adc
push
xchg
adc
push
xchg
rcll
adc
dec
xchg
int
lea
int3
xchg
mov
iret
xchg
xchg
dec
xchg
seta
xchg
mov
leave
xchg
mov
enter
dec
xchg
or
dec
xchg
or
ja
ss
arpl
push
fsubrp
clc
jmp
inc
sahf
mov
cwtl
sub
mov
xchg
cmc
xchg
and
xchg
out
mov
stos
lock
mov
les
push
dec
out
std
icebp
mov
jmp
jo
add
xchg
xor
aaa
insl
aaa
or
aaa
pop
idivb
aaa
aam
xor
int3
lock
ret
xor
ljmp
mov
xchg
out
leave
out
mov
dec
std
or
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
iret
inc
add
adc
add
repz
rcll
dec
sti
pop
or
cmpsl
pop
pop
sub
outsl
std
dec
sub
out
gs
pop
mov
or
aad
loope
fstpl
fcmovbe
test
mull
cmp
test
ficoms
test
outsl
sub
int3
loop
loop
loop
loop
icebp
ret
in
sub
inc
ss
scas
pop
dec
pop
in
pop
lea
sub
out
pop
out
jbe
in
adc
push
mov
clc
test
lret
call
cmc
fisttpll
mov
daa
xchg
mov
cwtl
add
jae
loop
dec
xchg
mov
xchg
or
scas
xchg
pop
ja
xor
cmp
mov
push
xchg
outsl
aaa
movsl
dec
in
lods
mov
inc
sub
nop
fs
jae
xor
and
icebp
shlb
cmc
jmp
mov
xor
cs
mov
mov
arpl
outsb
cltd
jl
fmul
out
repnz
fildll
or
push
cmpsb
adc
and
or
pop
xchg
dec
movsb
dec
pop
call
xor
push
push
push
out
inc
mov
lock
repz
ror
test
lods
out
or
enter
pop
lahf
inc
xchg
das
dec
inc
pop
add
mov
cmp
xchg
pop
and
out
xchg
adc
xorl
xlat
lock
bound
jae
pusha
pushf
pop
lret
arpl
sub
mov
shlb
adc
jg
fdivs
dec
fmuls
fmul
pop
frstor
aad
aad
aad
aad
aad
aad
ss
mov
aaa
dec
aaa
or
leave
aaa
mov
dec
aaa
or
enter
dec
aaa
or
lret
aaa
mov
dec
aaa
or
aaa
xchg
inc
aaa
push
aaa
lds
test
inc
aaa
add
xchg
or
movl
xchg
pop
push
push
adc
nop
push
push
push
adc
xchg
push
push
push
adc
mov
push
xchg
dec
lea
int3
xchg
mov
mov
or
mov
outsl
daa
adc
add
adc
clc
mov
in
call
shlb
add
pop
sbb
leave
xchg
sub
xchg
push
out
movsl
out
xor
out
out
ja
pop
adc
sar
xor
nop
test
leave
jmp
pop
inc
bound
icebp
and
leave
push
or
xor
mov
ret
xor
pop
cmp
inc
mov
pop
mov
mov
xor
push
mov
aaa
nop
aaa
push
aaa
adc
shll
xchg
daa
mov
aaa
mov
dec
aaa
push
aaa
int
lea
dec
aaa
or
aaa
dec
nop
iret
pop
popl
dec
pop
sysret
lret
test
leave
push
mov
jb
aad
aad
aad
or
or
aaa
push
aaa
lds
test
inc
xchg
lock
test
ljmp
inc
loop
iret
inc
mov
mov
lock
fcoms
adc
pop
rcl
push
xchg
push
push
push
adc
mov
xchg
lea
aaa
mov
dec
andl
mov
lcall
xchg
jmp
cli
xchg
jbe
movsl
cmpsl
and
adc
adc
lret
int3
movsb
add
sub
orl
lods
nop
cmp
aam
andb
test
adc
out
adc
das
xor
pushf
aaa
cmp
outsl
adc
loop
loop
loop
loop
loop
loop
inc
xor
int3
or
loop
ss
xchg
lcall
call
lret
inc
dec
add
leave
xchg
fmul
fmuls
lret
dec
outsb
out
dec
out
or
cmp
xor
and
nop
xor
clc
mov
lock
ds
xor
and
sbbb
lret
pop
sbb
imul
jge
jmp
lret
icebp
cmpl
dec
lock
lock
test
cmp
or
and
mov
inc
adc
adc
add
nop
fsubrs
fistpl
arpl
mov
jo
xchg
dec
out
or
enter
dec
out
or
lret
out
mov
dec
out
or
out
in
out
xor
cwtl
in
fsubl
aaa
and
inc
add
lahf
or
bound
repnz
lret
mov
test
pop
mov
jae
cltd
out
cwtl
aas
adc
cmpsb
clc
movsl
bound
leave
push
xor
and
negb
push
cwtl
jecxz
pushf
xchg
iret
xchg
fcoms
in
test
and
adc
xchg
clc
push
jno
fnsave
shlb
push
push
adc
xor
out
adc
into
out
mov
dec
out
int
out
dec
sub
aad
cmpsb
js
out
nop
into
push
loope
shll
loopne
mov
lret
ret
arpl
ss
out
inc
scas
and
xchg
mov
dec
jb
dec
ds
mov
out
cmp
mov
stos
adc
mov
mov
dec
mov
out
imul
movsl
out
aam
jo
dec
clc
jge
cld
les
lcall
arpl
in
scas
jmp
cmp
dec
ftst
cmpsb
xchg
push
and
mov
mov
dec
pop
jmp
mov
mov
inc
addl
test
adc
in
in
and
mov
pop
fisttpl
inc
mov
xchg
pop
pop
push
mov
dec
or
add
fldl
aad
push
lods
mov
aaa
mov
lret
xchg
inc
xchg
mov
cmp
and
adcl
push
pusha
nop
out
push
dec
push
out
push
dec
je
les
pop
mov
add
int
outsb
outsl
jge
das
das
pop
les
adc
in
dec
iret
sbb
adc
ret
scas
daa
adc
mov
pop
and
xor
loope
push
cld
pop
xor
test
push
cmp
pop
sarb
push
fcoms
cli
test
lds
jecxz
cld
push
pop
pusha
lds
je
cltd
in
xchg
aam
je
or
adc
clc
addb
cltd
mov
pop
dec
test
in
and
iret
shl
arpl
ss
mov
xor
into
mov
aaa
fdivl
sbb
sub
fsubrs
loopne
fcoms
fadds
dec
adc
clc
popa
add
fdivrs
sub
dec
das
ds
mov
jno
mov
test
pop
push
fwait
push
cli
push
data16
cltd
push
xchg
xchg
movl
icebp
xor
outsl
push
xor
stc
in
aas
call
lret
bnd
test
mov
js
dec
es
lds
iret
into
mov
ret
ror
ret
sub
or
shr
icebp
scas
dec
push
mov
mov
push
xchg
or
in
push
inc
dec
test
aaa
test
inc
aaa
add
aaa
xchg
adc
iret
pop
pop
das
pop
pop
push
pop
push
xchg
mov
arpl
push
int3
and
adc
loop
pusha
adc
aad
xchg
lods
call
mov
xor
dec
cmpsb
flds
and
pop
cmpsb
enter
dec
out
or
push
loope
aad
aad
aad
aad
aad
aad
push
add
add
aaa
xchg
inc
pop
mov
xchg
or
mov
enter
or
or
adc
outsl
gs
dec
xor
loopne
fldt
mov
or
mov
mov
dec
fmuls
fmul
cltd
mov
mov
in
mov
pop
ljmp
jo
mov
scas
xor
leave
mov
lods
jle
push
movsl
push
hlt
push
xchg
push
divb
scas
inc
and
push
scas
loope
cmp
test
loop
push
add
enter
dec
aad
aad
push
mov
or
nop
jecxz
fdivs
test
push
pop
sbb
pop
nop
in
or
mov
nop
add
movsl
pop
sub
jae
dec
and
das
xchg
sqrtps
adc
shl
les
adc
shll
xchg
fldcw
mov
aaa
lea
dec
aaa
int3
aaa
mov
dec
aaa
or
iret
xchg
inc
dec
pop
packssdw
fmuls
fmul
fmuls
fmul
fmuls
fmul
fmuls
fadd
fadds
fadd
fadds
les
out
inc
push
add
movl
push
inc
shrl
int
push
rorb
cld
shrb
push
repz
adc
fisttpll
nop
int
lea
or
out
iret
je
xchg
out
xcrypt-ecb
cmpsl
lret
dec
aaa
or
stos
outsb
out
enter
add
aaa
dec
aaa
or
aaa
inc
aaa
push
aaa
lds
pop
les
inc
pop
add
sub
inc
cld
pop
sub
repz
call
sti
jns
imul
add
sub
sbb
mov
lods
clc
and
mov
and
ss
mov
push
pop
pop
inc
je
add
cmpsl
out
adc
pop
sarl
pop
in
adc
nop
les
mov
push
addr16
into
loope
dec
ss
lds
out
or
out
dec
in
or
movsb
dec
ss
mov
gs
pop
out
inc
add
in
dec
sbb
push
xchg
shl
rcrl
jo
loop
ret
pushl
mov
mov
jmp
pusha
test
cltd
adc
imul
mov
imul
ljmp
xchg
inc
aaa
push
adc
loop
jecxz
pop
push
test
or
dec
adc
xchg
clc
push
add
call
adc
rcr
nop
fcoms
adc
shrl
pop
cmp
int
lea
or
push
dec
push
or
iret
push
push
dec
push
andps
push
mov
or
xorl
pop
xchg
popl
das
pusha
cmp
and
fidivs
dec
mov
jns
adc
push
je
icebp
inc
pop
add
enter
or
inc
pop
pop
cmp
or
aad
dec
shrb
xor
xor
mov
iret
aaa
adc
loop
loop
pusha
mov
or
mov
loop
loop
add
test
inc
out
pusha
test
test
inc
repnz
mov
dec
sub
inc
pop
jno
loop
cvtpi2ps
adc
shl
xchg
cltd
push
jmp
adc
rcr
bound
mov
push
test
inc
jae
dec
loop
loop
adc
fmuls
fmuls
fmul
fmuls
fmul
cltd
mov
insl
or
lret
jnp
stos
dec
push
or
dec
loop
pusha
push
bound
je
enter
inc
pop
add
movl
push
rcl
push
xchg
mov
push
inc
adc
mov
xchg
xor
xchg
push
xchg
adc
push
xchg
jbe
lcall
dec
fisttpll
xchg
push
lea
enter
dec
xchg
movsl
xchg
dec
cmpsl
jge
cltd
push
nop
test
inc
pop
add
pop
inc
ljmp
inc
fadds
dec
adc
xchg
clc
push
mov
ja
dec
adc
rolb
nop
pop
push
pop
adc
and
fcoms
loop
pusha
mov
aaa
dec
aaa
or
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
out
or
xchg
or
dec
loopne
fadds
fadd
fadds
fadd
fadds
movsb
test
aaa
pop
repz
repnz
mov
sub
sbb
pop
push
loop
jecxz
xchg
iret
push
inc
out
icebp
xchg
andl
shr
aad
loope
ds
outsb
and
sub
push
aam
jns
test
inc
inc
out
imul
cmp
dec
addb
dec
subb
dec
mov
cmpsl
inc
insb
and
xchg
into
jo
jp
cmpsb
mov
rorb
call
cmp
mov
fmull
mov
cli
mov
shll
aam
dec
fidivrl
fadds
cltd
mov
in
or
out
leave
in
xchg
movsl
repnz
jmp
enter
in
jmp
gs
push
xchg
push
daa
mov
dec
pop
out
push
adc
jns
sub
dec
aad
cmp
cld
mov
dec
jo
fsubp
push
clc
dec
mov
cltd
out
stos
sbb
fistl
les
jo
fcompl
fsub
out
popa
out
das
leave
fimull
mov
mov
mov
sub
mov
loope
sub
int
out
repnz
loop
subb
fidivl
xchg
aaa
mov
jmp
cld
cltd
pop
cwtl
cmpsb
fwait
aad
adc
pop
outsl
mov
lcall
iret
out
xchg
out
xchg
in
xor
push
pslld
loop
pusha
and
dec
xor
test
cmp
pop
push
ljmp
jmp
daa
cmp
xor
mov
mov
pop
int3
pop
je
inc
out
loop
or
movsb
insl
xor
inc
in
xor
inc
repz
sahf
sbb
outsl
adc
cltd
in
pop
xchg
stos
cmpsl
cmp
dec
sub
cmpsb
xor
adc
cmpsl
mov
rcll
bound
xor
mov
pop
ds
popf
clc
mov
repnz
cmpl
mov
call
mov
push
mov
stc
xchg
dec
sub
or
jnp
push
arpl
test
scas
test
inc
lcall
xor
mov
inc
push
add
sub
loopne
fsubrs
lcall
lds
pop
enter
bound
loope
notl
sahf
cwtl
dec
stos
fsubl
pop
popl
aad
cmpsb
ret
lea
jecxz
ljmp
fdivr
loope
sbb
iret
aaa
pop
aaa
out
dec
cmpsl
jecxz
mov
dec
sub
out
xchg
out
and
mov
enter
xor
int
mov
into
popf
mov
orl
enter
xor
das
jp
stos
lret
sub
clc
fstl
aad
push
cmp
push
push
in
jne
aam
xor
xchg
push
divb
xor
pusha
and
jl
xchg
int
movsb
insl
xchg
jle
inc
sub
adc
ljmp
lret
insb
and
pop
ljmp
jbe
jne
in
je
dec
xchg
pop
daa
pop
ret
mov
or
jge
cmp
jp
inc
xor
dec
push
cmp
andl
addb
lret
lahf
push
lret
adc
lcall
cmpsb
push
pop
int
test
xor
xor
pinsrw
dec
push
or
lea
cltd
stos
pop
cmpsl
js
mov
fidivl
data16
in
and
int
adc
icebp
xchg
jae
jecxz,pt
jae
adc
jg
into
or
and
hlt
pop
xchg
pop
xlat
pop
ja
dec
bound
mov
cmpsb
and
aas
aaa
mov
mov
pop
xchg
pop
adc
out
jb
push
jno
clc
lods
cltd
out
mov
shrl
stos
inc
xor
inc
fsub
loope
mov
mov
jge
pop
cmp
addb
mov
cmpsb
cmc
jmp
fsub
xchg
in
cmpsl
cmpsb
sbb
push
outsb
repnz
cltd
fistpl
pop
imul
cmpsl
rol
dec
rcl
sbb
mov
xchg
inc
and
scas
jnp
mov
and
les
inc
mov
ficoms
loopne
imul
adc
gs
je
mov
push
xchg
int
fcoml
push
popf
sbbl
sbb
ljmp
xor
push
xor
mov
jmp
add
repnz
cmpsb
jbe
enter
imul
jp
xchg
ljmp
mov
inc
add
jmp
mov
repnz
fwait
ss
or
lods
inc
dec
scas
pop
dec
stos
push
out
scas
dec
imul
icebp
and
leave
stos
lret
push
push
sub
cmc
fsubp
data16
adc
popf
test
psraw
inc
sbb
xchg
sub
xchg
lods
mov
orl
in
adc
les
pop
mov
ds
push
out
inc
jmp
pop
ss
mov
mov
dec
rcll
push
imul
loop
xor
cmp
jb
cli
test
push
inc
and
adc
pop
je
movsl
adc
xchg
out
fsubl
out
stos
jecxz
jp
enter
mov
popa
xor
adc
push
enter
roll
cltd
and
sbb
call
mov
pusha
mov
or
cltd
mov
xchg
lds
subl
popf
mov
sahf
or
pusha
cmp
dec
mov
push
sub
mov
push
repnz
adcl
imul
sub
add
mov
ljmp
sub
inc
sub
pop
inc
movsl
out
jg
pop
imul
cld
sti
lock
sbb
pop
es
and
jecxz
cmpsb
push
or
xor
pop
mov
jbe
setne
dec
loopne
fdivs
pop
mov
sub
mov
mov
fmulp
lret
stos
dec
lret
out
sbb
cmpsb
cmpsb
out
aad
out
and
test
movl
xor
push
outsb
pop
xchg
xchg
pop
adc
and
fadd
nop
shlb
mov
adc
sub
test
test
inc
push
fldcw
adc
mov
cmp
outsl
xchg
adc
scas
dec
xchg
xchg
xchg
xchg
xor
in
test
cld
mov
sub
ret
push
lea
outsb
call
lret
lcall
ss
in
mov
loope
xor
inc
test
pusha
and
cs
loope
fucom
cmp
dec
cs
push
icebp
jae
lea
cwtl
movsl
sbb
int
loop
push
pusha
mov
pmaxsw
push
insb
xchg
rcll
ss
xchg
push
pop
sbb
pop
in
imul
ficoml
loopne
cmp
add
test
jmp
cmc
mov
pop
addr16
pusha
mov
inc
mov
inc
mov
repz
pusha
mov
aaa
in
aaa
dec
aaa
scas
repz
outsl
loopne
fsubrs
cli
push
pop
lea
or
sub
movl
cmp
mov
es
cltd
sti
xchg
movsb
mov
into
lcall
mov
stos
and
pushf
out
mov
and
mov
xchg
sbb
rcrb
gs
mov
inc
out
dec
add
stos
push
leave
out
sbb
adc
jae
clc
pop
add
icebp
int3
data16
scas
cmp
xor
repz
movsb
mov
xor
subb
push
dec
or
lcall
fbstp
fsubp
cmpsb
adc
jo
mov
xor
push
fisubrl
icebp
jb
pop
xchg
dec
xchg
scas
mov
stos
test
test
pop
mov
xchg
lock
lret
pop
ljmp
icebp
dec
push
mov
in
or
gs
movsb
test
xor
jmp
dec
xchg
fwait
sub
jmp
pop
cmp
fcoms
jno
loop
mov
in
movsb
test
xchg
test
dec
test
pop
jmp
or
jmp
sub
add
jmp
jecxz
push
sbb
xor
movsl
inc
mov
push
sub
mov
or
dec
jge
inc
xchg
or
lret
cmpsb
dec
into
inc
and
iret
inc
push
enter
cwtl
push
xchg
push
cmpsl
and
mov
mov
dec
cmc
pop
mov
and
shlb
cmpsl
fcoml
movsb
orb
mov
ret
jns
mov
fldl
jg
inc
out
lcall
push
loopne
mov
xor
out
and
jecxz
bound
push
pop
push
in
test
loop
loop
cmpb
das
and
sub
outsb
in
ljmp
sub
icebp
lret
cs
inc
into
and
stos
test
int
mov
add
lods
dec
mov
in
mov
int3
dec
adc
jbe
pop
das
jno
push
adc
shlb
pusha
add
cld
loopne
cltd
mov
xorl
outsl
je
and
imul
shrl
testb
cmp
xor
repz
adc
dec
cmp
add
jge
fcompl
icebp
movb
repnz
sbb
mov
addr16
jne
mov
and
pop
jno
jl
ds
pop
or
mov
gs
adcl
or
jns
xor
xor
ja
ljmp
adc
and
lods
jmp
adc
jne
add
out
add
movsb
mov
dec
hlt
bound
and
jl
enter
cmp
loope
dec
push
clc
les
pop
jnp
mov
ss
repz
loop
loop
icebp
rcll
add
jo
mov
dec
lea
mov
sub
or
xchg
cmc
cmpsl
push
in
out
je
rclb
sub
cs
in
daa
loope
inc
aad
aad
aad
ss
cmpsb
daa
sub
adc
les
or
add
add
cltd
sbb
pop
roll
pusha
test
cmp
xchg
sbb
rclb
rol
iret
add
push
nop
mov
add
and
inc
xor
mov
xchg
xchg
xor
aaa
adc
dec
test
lret
mov
lods
push
inc
jbe
loop
test
sub
mov
ret
insl
test
push
mov
mov
rorl
je
cwtl
jp
mov
ss
pop
inc
jb
scas
add
mov
and
pop
lret
xchg
leave
dec
icebp
inc
inc
xor
in
cmpsb
jmp
stc
ficomps
sti
pop
push
pop
addr16
mov
mov
clc
mov
repnz
dec
sub
mov
xor
mov
sub
push
xor
adc
xor
dec
sti
jbe
aam
push
jge
pop
dec
sbb
jno
jmp
cld
mov
enter
and
into
mov
iret
cmpsl
enter
lds
out
mov
enter
mov
dec
out
adc
jl
out
ljmp
pusha
sbb
gs
mov
add
pop
ljmp
movsb
popa
xor
dec
push
xor
orb
add
fsub
loopne
fadds
fcomps
mov
filds
aas
pop
orb
test
inc
loop
loop
loop
addb
jl
dec
cmpsl
cmp
adc
push
out
je
enter
jbe
mov
in
iret
xor
sub
fldcw
out
je
enter
xchg
in
gs
ficoms
sub
out
dec
scas
sbb
andb
mov
inc
lock
jae
imul
addr16
roll
insb
mov
sbb
jg
push
sbb
shlb
mov
in
outsl
cltd
stos
enter
sub
sbb
push
ds
nop
repz
das
popa
ss
cmp
es
dec
int
rcll
mov
addb
das
xchg
and
fcmovnu
adc
cwtl
out
stos
jg
xor
push
call
xlat
jnp
dec
div
inc
repz
icebp
mov
cmpsb
push
xor
out
frstor
jge
stos
jg
sub
xor
push
adcb
icebp
lea
add
scas
stos
push
mov
add
std
ja
test
push
cmp
call
movsb
pop
jbe
out
fsubrs
adcb
pop
jae
jnp
das
pop
jbe
xor
push
sub
imul
add
out
cmp
out
mov
mov
jp
sub
jmp
mov
out
jno
loopne
dec
xor
bound
push
imul
mov
mov
xchg
mov
pop
jl
int3
sub
jns
jo
or
xor
andl
js
add
loop
loop
adc
mov
movsl
add
and
outsb
mov
fcompl
mov
out
dec
lds
dec
jmp
xchg
xchg
int
test
pop
jmp
arpl
sar
call
add
scas
les
lret
cmpsb
daa
lds
out
inc
push
roll
into
mov
loop
xchg
dec
stos
std
shll
pusha
fldl
ds
push
adc
dec
mov
adc
out
scas
push
popa
scas
mov
add
fsts
cmp
ja
add
imul
mov
mov
testb
icebp
lcall
loopne
xor
scas
add
jecxz
mov
imul
xchg
test
hlt
xchg
out
jmp
and
push
lods
fs
mov
leave
xchg
repz
aaa
inc
mov
pusha
jmp
in
out
xchg
cs
adc
mov
dec
in
xchg
sbb
and
pop
inc
sub
pop
sub
pusha
scas
jle
pop
es
js
lds
xorb
push
in
lock
or
add
popf
fisubs
test
stos
call
add
into
inc
arpl
xchg
punpcklbw
pop
movsb
mov
xchg
scas
in
cltd
and
mov
hlt
xor
pop
xor
scas
repz
frstor
or
cli
mov
mov
cmpsb
mov
ret
mov
pop
ljmp
cmc
push
cld
arpl
mov
mov
mov
inc
scas
cltd
in
cmp
into
and
mov
stos
je
and
jg
jp
push
mov
mov
icebp
add
cmp
scas
xor
mov
and
push
test
dec
mov
js
aam
cltd
jecxz
push
inc
push
shl
les
aad
jno
mov
or
mov
cwtl
hlt
fwait
mull
pop
lcall
ss
insl
scas
pop
sbb
mov
jo
scas
cmpb
adc
inc
jne
add
pop
andb
xchg
test
das
test
adc
cmpsl
mov
in
jmp
sbb
pop
aam
sub
test
bound
sahf
enter
sbb
sub
xchg
jno
xor
outsl
add
jno
test
nop
add
in
cs
mov
and
popl
sub
popf
adc
xor
mov
into
push
loope
scas
mov
jle
cwtl
in
mov
push
aaa
iret
adc
shll
adc
mov
cltd
outsb
stos
mov
in
mov
cmpsl
cmc
dec
vunpckhps
addr16
mov
mov
inc
cmpl
mov
lods
dec
lock
dec
adc
aas
in
sarb
aam
mov
lea
add
jo
add
mov
addb
jno
fisttpll
fxtract
xchg
inc
jae
test
cmp
pop
stos
rcrb
jno
les
and
icebp
push
push
repz
add
xor
dec
push
loop
pusha
stos
mov
mov
jo
adc
sub
test
push
adcb
repz
jno
or
mov
add
dec
or
mov
nop
loopne
xchg
pusha
and
ret
mov
or
les
popf
mov
in
scas
inc
mov
rorb
adcl
dec
insb
dec
movsb
push
insb
icebp
xor
dec
sbb
xor
popa
inc
daa
pusha
das
pop
leave
test
xchg
xor
push
aas
jp,pt
out
mov
addl
scas
xchg
jns
into
sbb
jae
sub
lret
or
jecxz,pt
inc
mov
cmp
call
xor
jns
sbb
cmpsl
inc
sub
dec
push
mov
xor
cmp
and
mov
mov
imul
mov
cltd
jge
xchg
lods
mov
enter
int
push
mov
imul
icebp
arpl
sahf
outsb
push
sti
test
test
push
adc
insl
je
les
jae
sub
enter
push
mov
rcr
mov
sbb
call
adc
pop
stos
dec
pop
mull
add
insl
clc
pop
mov
or
inc
jl
fidivs
out
mov
mov
xor
test
in
jmp
fwait
out
ja
test
mov
leave
sub
and
mov
bnd
cbtw
imull
mov
cmpsb
decb
shl
inc
iret
iret
and
je
or
scas
fstpt
fisubrl
out
add
sti
push
out
adc
jns
dec
xor
cmp
and
cs
test
sti
jmp
cs
sub
out
aam
gs
mov
xchg
push
enter
frstor
add
out
cmc
pop
push
mov
aas
lret
lock
js
and
scas
xchg
cs
dec
inc
addr16
int
sub
and
mov
es
ret
jae
jbe
in
xchg
hlt
push
jno
and
int
call
dec
das
and
mov
test
sub
jecxz
nopl
sbb
xor
adc
xor
into
mov
ret
pusha
xor
aad
out
lret
xchg
pop
stos
sub
lods
push
jb
insl
jae
ds
rcrb
dec
ret
adc
lods
or
iret
mov
int
iret
push
imul
mov
mov
and
int3
mov
adc
jecxz
out
test
jno
movsb
push
and
jnp
or
movsb
mov
and
or
mov
dec
int3
mov
dec
add
jmp
and
incl
jmp
adc
icebp
lcall
cmpl
xchg
mov
stos
in
jno
stos
pop
mov
mov
popa
inc
xchg
lret
cltd
stos
jnp
or
shrl
out
lret
mov
inc
mov
and
pinsrw
fimull
shlb
dec
test
enter
test
cmp
imul
jp
ffreep
scas
in
int3
add
repz
and
push
dec
js
adc
mov
mov
sub
mov
out
out
repz
cmp
fs
dec
mov
mov
fisubl
movsb
inc
loop
adcb
cs
jo
shrb
jo
xchg
cltd
scas
ds
lods
lds
insb
push
mov
xchg
dec
dec
ds
lret
and
ds
inc
es
push
sbb
das
pop
bswap
and
pusha
iret
ret
repnz
ss
repnz
lea
mov
and
xor
inc
xor
xchg
leave
dec
nop
mov
repz
shlb
mov
test
dec
dec
xor
jb
je
daa
xchg
repz
push
stos
icebp
pop
das
jp
call
xchg
xor
aas
adc
stos
or
std
loope
pusha
mov
sbb
in
xor
lcall
fs
jno
inc
imul
call
int
push
sub
aas
or
call
dec
fisubrs
mov
movnti
ja
lcall
inc
jg
xor
xchg
inc
xorl
adc
popa
pop
sahf
test
ret
xor
outsl
ja
pop
mov
mov
sbb
sbb
loop
test
jnp
and
addr16
into
lret
dec
cmp
xor
out
push
out
loop
cmpsl
outsb
adc
or
push
call
mov
jo
jl
enter
test
arpl
sub
mov
insb
xor
cwtl
lock
mov
test
repnz
cmpsb
xor
mov
pop
mov
mov
mov
inc
fstpt
addr16
jnp
dec
in
jo
inc
add
pusha
stos
leave
jp
mov
xchg
adc
rcr
clc
jge
rol
inc
sbb
out
js
inc
mov
inc
push
push
cmp
iret
lods
mov
fstps
call
out
fwait
out
sub
mov
push
pop
call
cmpsl
das
mov
outsl
imul
imul
sbb
data16
push
js
jo
pop
imul
stos
sti
jle
jge
lahf
xor
call
sti
std
stos
sbb
lret
insl
cli
jbe
cmp
cmp
out
and
mov
inc
inc
out
jp
cmp
ss
in
pop
cmp
jp
mov
inc
leave
out
mov
jbe
and
pop
add
jbe
out
lret
orb
fisubs
fs
mov
sbb
adc
sbb
cmpsb
xchg
gs
jno
dec
mov
test
xchg
xor
and
add
dec
imul
jno
or
jo
inc
clc
xchg
add
mov
push
loopne
mov
cltd
mov
mov
and
mov
cltd
scas
cwtl
cs
decb
push
iret
test
cmp
loope
std
loope
push
cltd
inc
xor
enter
ljmp
mov
cltd
push
test
test
jno
enter
adcb
insl
add
sub
lahf
add
jb
jg
bound
sbb
sub
scas
rcrb
pop
bound
push
pop
test
mov
add
add
hlt
pop
xor
xlat
mov
icebp
sub
stos
fwait
and
mov
repnz
push
leave
mov
bound
pusha
jle
fnstsw
jnp
mov
lock
mov
sub
stos
insb
sub
mov
mov
andb
mov
movsl
jae
fimuls
popa
dec
xchg
xchg
xchg
in
dec
push
xor
sub
mov
mov
lods
loop
add
loope
fstpl
push
inc
or
or
xchg
inc
push
clc
int
mov
ret
jns
out
gs
ret
sbb
lods
scas
js
fcoms
popa
popf
cs
mov
or
je
lahf
stos
pshufw
mov
sbb
into
aam
cmpsb
cmpsb
fidivrs
out
adcb
pushf
or
mov
jmp
xchg
rcll
sbb
dec
mov
xorb
sub
sbbb
repnz
out
call
popa
insw
dec
and
testb
les
sub
mov
xor
cwtl
movsb
xor
bound
and
jae
xchg
daa
lock
jle
jns
and
faddl
xchg
mov
in
pop
rolb
dec
pop
leave
shrl
or
adc
in
sub
push
xor
sub
repz
add
cltd
fsubrs
mov
jmp
enter
test
mov
add
popa
ret
insb
dec
cmpsl
dec
jnp
cmpsl
stos
dec
scas
inc
jp
js
jl
dec
out
xor
pusha
push
mov
pop
dec
push
ds
inc
clc
add
or
xchg
inc
xchg
add
jb
imul
add
leave
orb
jno
add
loop
push
jmp
test
nop
inc
repz
mov
bound
loop
insl
test
clc
jp
pop
sbb
enter
out
jmp
cmpsb
sub
sbb
stos
dec
clc
scas
or
fiaddl
pusha
fsubrl
and
popa
pop
stos
adc
dec
int3
cmp
xor
jb
clc
pop
insb
mov
imul
cmpsb
out
mov
jmp
scas
sbb
xchg
push
push
les
push
jecxz,pn
test
jns
loopne
mov
jp
stos
stos
flds
in
add
loop
add
clc
mov
cmp
jecxz
int3
sub
ret
in
add
icebp
mov
rorl
dec
stos
dec
cmp
int
ss
or
add
ds
addr16
iret
fiaddl
dec
in
scas
adc
clc
mov
add
bnd
mov
loope
or
psrlw
fcompl
or
jle
dec
test
adc
xchg
jns
lret
pop
adc
mov
lock
push
and
cmpsb
in
mov
jmp
stos
and
pop
mov
sbb
adc
add
mov
mov
mov
arpl
leave
jb
push
popa
xchg
lret
sbb
imul
sub
repz
mov
sbb
pop
test
pop
out
push
lcall
xchg
cmp
dec
bswap
sub
call
lods
dec
mov
fildl
ror
mov
lods
loope
dec
inc
dec
xchg
in
stos
inc
daa
pop
mov
push
inc
movsb
adc
xor
out
xchg
ficoml
inc
stc
mull
enter
jae
test
inc
lret
sub
add
mov
mov
mov
loopne
fcomps
imul
mov
icebp
fistps
fwait
gs
mov
sbb
mov
xor
in
in
icebp
jmp
divl
xor
subb
out
mov
and
xor
xchg
mov
cmpsb
iret
inc
xor
dec
adc
mov
inc
scas
xchg
in
outsb
loope
stos
mov
push
inc
or
inc
lret
repnz
leave
cld
das
and
cmp
movsl
cmpsl
jns
dec
adc
and
enter
rolb
or
and
and
xor
push
lret
int
pop
scas
xchg
adc
loope
rolb
imul
and
xor
jg
ljmp
xor
push
mov
cwtl
stc
fwait
mov
loopne
jmp
out
xchg
inc
jne
outsl
lock
push
les
add
loopne
ret
ds
ss
js
xchg
leave
mov
xchg
cwtl
jecxz
cmp
ja
roll
fcmovb
xchg
add
push
mov
arpl
xchg
push
cmovb
in
mov
push
push
bnd
ja
mov
aaa
sbb
rcll
mov
ljmp
cmp
lds
repnz
xor
divl
jo
ror
push
dec
xor
in
xchg
and
sarb
jne
pop
lcall
gs
mov
loope
bound
sahf
mov
ljmp
lret
test
dec
and
mov
sub
xor
dec
sbb
in
jns
jb
out
fs
repnz
inc
cld
lds
pop
bound
stos
jl
xchg
test
je
stos
push
cmpsl
mov
mov
pusha
xchg
jl
mov
test
das
pop
mov
out
loope
es
stos
mov
fcoml
lds
nop
dec
addb
in
mov
fistps
gs
mov
fdivs
stos
dec
or
das
aad
jne
dec
popa
test
loop
sub
sub
dec
ror
xchg
inc
aas
xor
jecxz
into
inc
ret
or
in
pop
mov
push
clc
jp
cld
dec
push
adc
mov
int
les
mov
and
mov
jo
lret
call
ret
add
sbb
xsha1
cmpsb
dec
and
aaa
mov
and
sbb
popa
ss
sub
add
repnz
loop
nop
or
and
jp
imul
xchg
in
xchg
dec
adc
jg
pop
ds
dec
cmpsb
ds
andl
add
stos
jecxz
xor
lcall
aaa
daa
and
mov
and
push
or
stos
jne
xchg
inc
push
sub
mov
jne
lret
es
cmp
xor
adc
pusha
mov
out
xor
pop
loop
sub
jno,pt
mov
test
pop
insl
sub
cltd
stc
cwtl
pop
fwait
cli
xorb
inc
inc
cmp
pop
test
push
xlat
ret
test
inc
js,pn
adc
mov
dec
insb
call
lods
lret
pop
xchg
pop
adc
sahf
repz
daa
popa
inc
cmpsb
mov
or
push
test
xor
mov
or
subb
test
fdivrl
mov
aad
xchg
xchg
loop
test
inc
lock
pop
cmpsl
mov
roll
sarl
arpl
jp
sti
out
cmpsb
add
dec
mov
dec
add
andl
xor
add
scas
ljmp
add
dec
lds
fadd
inc
dec
lcall
mov
outsl
sbb
pop
adc
cli
mov
das
or
popa
test
int3
and
mov
dec
sbb
mov
adc
into
adc
jns
and
mov
iret
dec
mov
inc
jge
pushf
mov
cmp
repnz
loop
and
jno
jae
mov
bound
stos
add
fs
repnz
fcmovne
in
sbb
stos
fs
jno
enter
outsl
loop
cs
inc
push
jns
or
or
pop
push
pop
mov
and
xchg
lods
lds
dec
cwtl
cs
loope
inc
xchg
or
lock
push
jp
ljmp
mov
data16
adc
jo
add
movsl
orb
jecxz
xchg
test
ja
push
dec
lret
or
ds
lcall
out
push
in
shlb
les
xor
into
mov
sti
lea
es
jno
andb
cmp
pusha
lods
or
mov
jl
sub
push
and
add
cmp
subb
int
ds
sub
mov
loop
or
bnd
jmp
push
lcall
inc
test
add
sub
into
inc
inc
test
sbb
sbb
mov
in
rol
rcrl
dec
repnz
pusha
or
test
xchg
jecxz
xor
jo
push
call
gs
in
arpl
adc
push
and
cmp
push
mov
enter
ficoms
push
movsb
je
pop
xchg
addb
jecxz
test
das
lods
subps
lds
cmp
orb
mov
out
cmp
jbe
xchg
addr16
int
fdivrl
mov
mov
sub
enter
ret
repnz
pop
jmp
mov
test
cmp
dec
repnz
lock
add
inc
fadd
test
enter
out
insl
movd
std
inc
gs
pop
filds
aas
imul
cmpsl
test
gs
ds
ss
in
call
sub
and
fisubl
jo
icebp
out
out
push
imul
and
jmp
mov
xor
inc
addr16
xchg
int
jne
outsb
je
fisttpl
jo
sarl
adc
jmp
fmul
lea
mov
sub
loopne
push
jle
mov
addb
cmp
sbb
xchg
mov
ficoml
xor
mov
gs
mov
jae
jecxz
int
push
inc
cmpsb
dec
idivb
xor
push
movsl
dec
mov
mov
int
test
daa
mov
sbb
dec
test
lcall
call
stc
loope
call
dec
cli
nop
das
jns
repnz
pop
mov
lret
pop
sub
push
dec
inc
das
clc
sub
lret
cwtl
sarl
push
add
mov
add
jecxz
pop
test
and
loopne
test
call
dec
out
pusha
sbb
jecxz
and
subb
movsl
mov
and
xor
icebp
inc
adc
jno
xor
lock
mov
jo
test
dec
inc
fucom
insl
xor
lret
addb
mov
les
ret
mov
xorb
jle
scas
repz
mov
xchg
jbe
scas
movsb
mov
jae
mov
adc
push
ds
and
mov
mov
xchg
dec
cmpsl
xor
dec
subl
xchg
mov
xchg
and
dec
out
sub
add
nop
cmpsb
shrb
stos
xchg
add
test
mov
sub
push
cmp
dec
pusha
sub
push
mov
subb
divl
lcall
mov
lret
mov
sbb
out
lock
sarl
xorb
adc
push
jne
xchg
adc
adc
pop
push
jl
xchg
out
cmpsl
xchg
push
cmpsl
jo
push
in
movsl
adc
pusha
xchg
mov
add
mov
mov
loop
lds
push
cmp
pop
mov
xor
inc
inc
fstpl
push
sbb
pop
imul
addb
jecxz
les
inc
scas
call
lret
sbb
xchg
pop
cmpl
mov
mov
outsb
mov
xor
xchg
imul
fs
xchg
ljmp
add
sbb
les
out
int
out
sub
cmp
iret
mov
xor
es
inc
mov
imul
lret
mov
cmp
ret
outsl
stos
rorl
fnstcw
add
fmul
mov
xchg
repz
pop
orb
dec
inc
jp
and
mov
or
dec
dec
inc
lahf
add
insl
adc
xor
cmp
adc
xor
aas
adc
test
fsubl
mov
insb
iret
mov
and
sarl
icebp
addb
lds
inc
stos
ds
adc
cltd
into
adc
mov
push
notl
and
movsb
dec
dec
add
leave
fucomp
bound
push
pushl
xor
mov
aaa
push
adc
ret
test
rolb
pop
loopne
jno
inc
shl
scas
add
mov
bound
movsb
pop
fildll
lret
mov
aaa
out
or
mov
sub
fnstsw
xor
or
mov
cli
dec
xchg
add
rclb
test
mov
into
addr16
dec
imul
add
mov
mov
pop
lret
test
rorb
fnstenv
mov
sub
push
and
cld
in
sbb
stos
cmc
cmpsl
repz
fcomip
inc
jp
imul
fidivs
test
jmp
cs
and
ror
mov
int
xchg
push
xor
cld
arpl
popf
adc
pusha
mov
mov
add
es
jmp
adc
fmull
and
pop
jmp
mov
pfadd
int3
mov
test
psrlw
js
mov
xchg
mov
lods
fidivl
nop
nop
push
xchg
xchg
xchg
pop
sahf
adc
xchg
push
roll
mov
mov
pop
xchg
nop
push
or
dec
enter
subl
lds
or
jp
stc
mov
aaa
jae
xor
mov
adc
jne
xchg
arpl
push
and
add
dec
jno
les
mov
test
push
les
dec
inc
cld
hlt
cmp
out
das
stos
int3
aas
cld
bound
leave
je
movsl
sub
cmp
pop
jp
or
ss
movl
cmpsb
hlt
addb
jne
and
and
int
xor
dec
xchg
sbb
xor
pop
rcrb
jb
leave
jle
mov
movsl
icebp
xor
iret
push
mov
and
xchg
mov
mov
or
pop
roll
inc
and
aaa
mov
push
repz
sbb
mov
dec
mull
sbb
lods
ror
adc
mov
sub
aaa
pop
pushf
in
faddp
leave
jnp
ljmp
jle,pt
adc
mov
repz
enter
xchg
sub
lea
daa
sbb
jno
mull
js
mov
mov
scas
and
sbb
dec
fnsave
mov
xor
sub
nop
sbb
xor
mov
nop
bound
movsb
loop
jle
and
mov
dec
aaa
fldenv
and
push
mov
pop
mov
lret
sbb
xchg
fidivs
out
jnp
push
jno
enter
leave
sub
jmp
xchg
fstl
adc
fstl
xchg
pop
push
pop
adc
dec
fmuls
pop
int
test
mov
int3
aaa
mov
loope
or
iret
mov
lret
sub
in
leave
loope
dec
ss
jns
mov
inc
sub
mov
test
inc
xor
les
mov
cmpsl
xchg
fsubrs
lock
adc
jns
pop
je
pop
mov
outsl
clc
jbe
pop
xchg
scas
and
mov
addr16
je
cmp
xchg
adc
into
loope
push
add
in
push
les
jb
js
movsb
les
movsb
add
out
inc
in
movsb
mov
call
daa
cs
mov
push
pop
inc
mul
sbb
fstl
xlat
fildll
dec
rcl
frstor
das
es
sbb
push
divl
movsl
add
sti
out
add
sub
movsl
daa
jecxz
movsl
add
sbb
pop
mov
xor
aad
inc
lea
add
hlt
jae
in
pmulhw
pop
leave
jnp
data16
das
sub
mull
stos
mov
outsl
imul
inc
adc
test
imul
in
dec
push
insl
fcom
push
or
push
sarb
jno
fcoms
xor
dec
popa
mov
push
stos
lods
in
out
and
shlb
pop
xor
lods
add
adc
cmp
stos
test
enter
subb
in
lahf
cltd
xor
jecxz
mov
adc
xlat
mov
inc
ss
stos
movsl
mov
sub
into
stos
aad
ss
inc
jns
je,pn
adc
int
nop
mov
xor
inc
mov
repnz
enter
push
dec
push
rorl
sbb
loop
and
mov
and
jo
or
lcall
ror
clc
or
mov
pause
sbbb
mov
xor
add
mov
dec
int
popa
shl
jnp
outsl
jp
cld
xchg
sub
lret
cld
sbb
xor
sub
mov
lret
fists
jns
or
sbb
jns
adc
repnz
sahf
rcll
mov
sahf
jp
stos
icebp
push
repz
ljmp
adc
xor
cs
imul
dec
mov
icebp
inc
test
cmp
rol
mov
scas
mov
les
daa
lret
ret
jns
pop
cmpsb
mov
fbstp
movsl
loop
test
push
adc
mov
outsb
mov
data16
dec
in
xchg
push
sub
adcb
mov
outsl
fstpl
inc
rcr
pop
in
xchg
mov
outsl
pusha
es
repnz
out
icebp
addr16
adc
sbb
imul
pop
js
add
rol
inc
sub
fwait
xor
pop
sub
stos
jp
dec
inc
push
imul
std
xor
lods
pop
dec
into
add
xor
daa
jns
xchg
test
xchg
ret
stos
lods
mov
clc
inc
xor
ret
and
repnz
lret
dec
jbe
pop
stos
xchg
inc
scas
pusha
ds
repnz
loop
orb
loopne
fcom
imul
adc
sub
pop
pop
sub
das
sahf
movsl
and
jecxz
dec
jge
pop
ficompl
insb
leave
mov
push
insb
xor
js
sarl
test
cmc
dec
or
xchg
adc
fsubs
inc
jmp
nop
mov
xchg
lret
and
jmp
iret
pop
push
xchg
add
test
stos
test
dec
es
xchg
insl
xchg
add
push
dec
dec
or
xchg
or
mov
in
mov
cmp
mov
lret
inc
fstl
in
xor
test
push
or
xchg
inc
or
and
xchg
push
test
push
adc
add
imul
pusha
loop
push
in
lods
call
sub
push
loope
mov
add
pusha
jo
adc
mov
adc
jle
in
pop
mov
or
add
adc
pop
mov
xchg
push
xor
inc
mov
repnz
adcb
jg
arpl
das
sbb
and
int
or
mov
mov
xchg
repnz
sbb
dec
mov
inc
jo
xchg
mov
pop
add
add
nop
fucomp
add
test
or
jnp
ljmp
int
mov
cmc
cltd
jmp
aad
mov
xchg
loop
jmp
pushf
cmpsb
or
xor
push
mov
pop
mov
sti
int
adc
add
les
jns
dec
repz
test
sub
in
adc
xchg
stos
dec
ret
fmull
les
xchg
mov
and
or
fprem1
loope
push
jg
out
out
and
cmp
nop
cmc
jnp
sub
pop
mov
jnp
jge,pn
inc
mov
repz
les
subl
pop
mov
xor
sbb
jg
push
rolb
jg
push
fstpl
mov
out
mov
jns
enter
enter
aam
addl
cli
jmp
into
rorl
dec
and
lock
call
shll
movsl
add
mov
mov
mov
push
dec
into
test
add
xor
xor
inc
dec
pusha
das
inc
xor
movsb
fdiv
lcall
stos
pop
insl
shl
push
icebp
pusha
push
mov
jle
fstl
loope
push
pop
sub
push
fnsave
jae
cwtl
and
in
inc
mov
shr
shll
ja
test
fidivrs
les
push
fisttps
fucom
xchg
lcall
lds
std
imul
gs
mov
sub
push
imul
outsl
ds
les
push
jo
add
test
mov
cltd
jle
push
comiss
out
jp
push
cmp
pusha
mov
lds
push
mov
inc
outsl
mov
shrl
dec
test
mov
xor
dec
pop
fdivr
loope
jbe
xor
add
adc
xchg
xor
jnp
or
movsl
jg
push
stos
dec
cmpb
inc
incl
adc
add
xor
xor
iret
mov
adc
lds
push
push
mov
out
cmp
pop
jecxz
push
xor
arpl
ds
mov
fnstsw
movsl
daa
out
clc
pop
lods
movsb
cmp
and
xchg
xor
roll
dec
lock
jae
and
inc
jb
pop
cmpsl
and
or
into
frstor
shlb
jmp
or
mov
cs
mov
mov
pop
mov
es
fwait
dec
sub
mov
and
out
dec
jae
adc
xchg
mov
shll
sub
out
cmp
fistl
xor
outsl
rcrl
pop
mov
jne
mov
cmp
sub
cmp
icebp
dec
fcomps
inc
push
add
enter
xor
jmp
mov
and
insb
and
xchg
mov
enter
repz
cltd
push
mov
rorb
mov
je
xor
and
out
push
icebp
loop
icebp
ret
lods
dec
dec
or
xlat
inc
stos
jnp
push
in
cmc
lret
dec
adc
jmp
jp
add
es
jb
insl
nop
push
push
enter
xor
pop
lods
pop
lds
call
dec
movsl
je
mov
or
xor
cli
sub
add
mov
les
jns
stos
mov
fs
jno
repnz
mov
int
dec
clc
das
gs
jg
and
mov
xchg
xchg
call
and
xor
in
mov
sbb
push
test
sub
add
or
popa
mov
pop
inc
pop
ds
cmp
pop
mov
jb
mov
repz
sub
or
cvtpi2ps
sub
in
push
icebp
mov
ds
inc
xchg
cmp
out
jno
and
jbe
test
mov
mov
xor
adc
inc
iret
bound
mov
insl
mov
push
lds
aaa
mov
in
pop
test
nop
sub
fcoms
sbb
scas
nop
es
inc
sub
adc
sbb
dec
dec
outsb
mov
adcb
xor
into
mov
pop
jns
lods
lret
lret
cs
mov
rcll
xchg
lea
jno
bound
loopne
bound
dec
cmpsb
jbe
imul
fxch
cmpsb
sbb
dec
sub
fsub
test
loope
push
pop
mov
add
mov
mov
pop
addr16
jno
xchg
jae
insl
nop
lahf
in
mov
xlat
and
call
lods
push
or
mov
dec
test
in
ficompl
or
enter
shr
ss
mov
push
jo
cmp
daa
mov
and
addb
int
cmp
dec
add
into
push
dec
roll
lcall
stos
sub
cld
fsubl
loop
xorb
push
or
adc
lcall
ja
dec
add
popf
add
jae
mov
push
push
mov
movsb
in
or
popa
lods
jbe
loopne
js
enter
pop
mov
pop
pop
sub
cmp
in
arpl
cmpsl
out
in
lea
sub
inc
inc
adc
and
xor
js
xchg
lods
mov
in
dec
stos
dec
pop
outsl
mov
cs
push
pop
call
cmpsb
test
in
leave
mov
or
inc
lock
jmp
xchg
rorb
mov
adc
clc
test
mov
jno
mov
lods
adc
icebp
ficompl
pop
dec
sbb
mov
nop
xchg
dec
and
adcb
into
loop
ljmp
xchg
and
xor
cs
loope
push
xchg
inc
dec
in
push
repz
mov
int
out
lods
mov
mov
scas
pop
outsb
xchg
and
popf
mov
cltd
xchg
cmpsb
movsl
xlat
inc
or
insl
lret
lcall
out
daa
outsl
movsb
repnz
nop
cmp
insb
adc
xchg
dec
jno
pop
in
dec
inc
test
aaa
divl
push
lret
sbb
xchg
inc
xor
add
sub
dec
dec
addb
and
sub
scas
orl
leave
clts
mov
scas
imul
add
jns
out
inc
in
mull
xchg
sub
sti
int
fsubrl
cmpsb
cmpsb
test
mov
dec
lret
mov
ss
lds
addb
xchg
dec
insl
sub
xchg
fisubs
jp
adc
dec
fstp
add
popa
stos
iret
sarl
pop
mov
dec
or
mov
inc
fs
aad
inc
or
sbb
scas
inc
pop
sub
mov
movsl
imul
push
cmp
add
push
dec
and
int
jbe
pop
dec
inc
in
add
nop
les
mov
sti
mov
add
enter
test
movsl
dec
addr16
and
subl
lret
loop
mov
mov
rol
test
jnp
mov
ret
scas
mov
xor
add
pop
repnz
pop
pop
push
divl
mov
andb
adc
cmp
inc
mov
sub
add
cmpb
inc
push
jmp
inc
add
jg
inc
leave
stos
dec
out
addr16
mov
sub
mov
bound
jecxz
mov
adc
push
scas
ljmp
mov
in
jno
loopne
jo
insb
sub
inc
es
int
add
sub
cs
lret
imul
xor
fcmovb
push
cmpsb
mov
das
jno
cs
clc
bound
mov
repnz
sbb
mov
xchg
fstl
inc
mov
mov
xor
lock
push
cwtl
es
xor
pusha
sbb
mov
sub
fiaddl
push
pusha
push
adc
cmp
loope
pop
fldcw
aad
aad
push
xor
lret
jo
mov
xor
fbld
xor
aas
enter
icebp
dec
pop
cmp
iret
adc
ss
in
xor
in
jle
test
loopne
fcoms
adc
enter
pop
lods
jp
cltd
mov
and
rcrl
movl
daa
or
jnp
cs
stos
out
sbb
test
stos
stos
or
cvtps2pi
scas
mov
or
xor
out
push
std
ss
into
cltd
aaa
cmp
add
mov
xchg
or
jns
sbb
or
orb
sahf
stos
mov
add
stos
cs
and
mov
mov
js
add
icebp
and
lea
xor
or
push
cmpsl
add
pop
push
sub
mov
adc
push
out
es
jb
xchg
sub
dec
rcr
pop
les
mov
lcall
in
sbb
out
inc
push
out
dec
fsubs
push
mov
movsb
push
pop
in
test
pop
add
add
cmpsl
popa
loop
movsb
xor
mov
jle
das
pop
add
fnstcw
lcall
lret
inc
dec
push
push
cmpsb
insb
out
mov
pusha
stos
loop
cmpsb
in
cmp
aam
mov
lret
ds
icebp
fimull
cmp
hlt
dec
popa
repnz
ljmp
fs
xorb
xchg
lods
jmp
cmp
push
mov
cmpsb
rcl
adc
pop
ficoms
je
pop
iret
xor
mov
nop
jg
das
imul
add
int3
daa
xchg
mov
push
shll
ljmp
add
adcb
mov
into
push
push
inc
and
pushf
push
pusha
das
iret
movsb
lea
cmpsl
sar
xchg
push
test
mov
cmp
nop
loop
andb
stos
and
sbb
mov
dec
das
push
mov
dec
dec
inc
shl
jae
or
sub
sub
xchg
cli
scas
stos
cs
and
ror
or
rolb
mov
cmp
mov
jl
and
inc
out
out
cmpsl
faddl
or
loop
lcall
add
pusha
repz
pop
repnz
dec
pop
icebp
mov
lret
data16
and
or
movsb
iret
imul
ss
repz
lret
out
add
dec
lret
orb
jle
sbb
js
in
or
pop
inc
stos
or
jns
sub
mov
stos
es
xchg
out
scas
or
jl
scas
jno
inc
adc
mov
rcrb
mov
dec
in
imul
bound
mov
mov
jbe
icebp
adc
cmpsb
iret
in
sbb
sbb
adc
jl
xlat
dec
mov
mov
pop
pop
sarl
lock
push
loop
orb
sub
sub
cmp
js
fldl
nop
jg
test
mov
fwait
aaa
je
push
ror
push
push
iret
shl
mov
mov
ds
inc
cmp
adc
sbb
test
addb
cs
cmpsb
cmp
nop
icebp
lods
test
inc
push
sub
inc
adc
mov
repnz
xor
dec
jecxz
sub
xor
int
cs
pusha
out
mov
add
mov
rol
cmpsb
outsb
leave
out
push
mov
dec
sub
fxch
xor
pop
mov
jno
enter
test
lahf
fucom
dec
push
fisubrs
jno
enter
jp
xor
stos
jo
ss
cmp
cmp
cmp
lds
fcmovb
mov
imul
int3
int
mov
fidivl
out
test
mov
and
test
sbb
nop
sub
movsl
inc
rcr
mov
lea
ret
or
mov
and
lock
inc
mov
jno
add
jns
and
mov
and
mov
in
pop
inc
jmp
cmp
sub
jno
es
jecxz
add
jno
repnz
dec
lods
leave
sub
jecxz
les
bound
loop
jecxz
mov
inc
or
icebp
pusha
shlb
cltd
push
out
out
ret
scas
pop
out
lea
outsl
inc
jns
call
enter
and
add
sub
daa
call
push
fiadds
imul
mov
pop
mov
mov
push
dec
adcb
call
cmpl
xlat
mov
dec
mov
inc
add
jno
int3
outsl
inc
cli
mov
repnz
into
rorb
dec
inc
clc
orb
inc
push
icebp
jno
jb
or
loop
mov
pop
or
mov
jae
jp
and
pop
dec
addr16
push
cmp
xlat
icebp
repnz
in
fwait
sbb
xor
inc
frstor
push
mov
stos
sub
pop
in
enter
outsb
adc
int
addb
dec
ljmp
dec
inc
dec
xor
stos
sub
cld
imulb
inc
mov
jecxz
add
pop
add
test
dec
mov
xlat
mov
push
or
sub
pop
bound
je
mov
cs
push
add
inc
mov
mov
popa
cmpsb
xchg
xor
pop
lock
jno
jp
sub
leave
ljmp
fidivrs
iret
push
outsl
daa
fdivl
cmpsb
or
sbb
sub
gs
pusha
out
imul
mov
mov
lds
inc
enter
mov
fisttpll
in
fisubl
fmull
fdivrs
jae
fdivl
das
movsb
mov
shrl
insl
sub
inc
jno
jo
pop
xchg
sbb
inc
int3
jne
je
adcb
jae
loop
xor
sub
mov
pop
mov
inc
out
icebp
xor
cmp
inc
adc
cmpsb
push
out
jecxz
mov
push
sub
xchg
cld
push
sub
sbb
bound
cld
nop
lahf
lret
out
dec
lods
dec
sub
xchg
xchg
inc
inc
repnz
and
add
addr16
mov
mov
int3
ret
iret
gs
lret
in
and
dec
lret
int3
sbb
adc
nop
adc
mov
icebp
ljmp
push
inc
dec
dec
mov
xchg
aaa
loope
mov
adc
test
xchg
sub
inc
stos
inc
sub
and
mov
sbb
cmc
pop
jnp
adc
test
in
int3
pop
incb
int
sbb
int
cs
dec
jg
call
stos
dec
cs
push
mov
mov
filds
jp
loop
loop
loop
jo
pop
mov
push
cmpsb
stos
divb
shl
nop
xchg
inc
xchg
xchg
dec
pushf
in
iret
push
push
iret
mov
mov
scas
jno
repnz
fdivrs
inc
dec
stos
movsb
in
dec
movl
jno
dec
adc
mov
das
addb
push
pop
mov
dec
in
dec
popa
out
lods
rolb
xor
inc
ljmp
loope
inc
add
loopne
test
insb
outsl
loope
sbb
cmpsb
mov
les
jo
dec
push
adc
in
mov
repnz
mov
repnz
push
popl
movsb
cs
lret
xchg
pop
mov
mov
or
sub
out
js
mov
int3
inc
adc
inc
icebp
fstpl
enter
out
push
dec
xor
xor
leave
sub
loop
jecxz
dec
xchg
inc
mov
lcall
lds
and
xor
cmp
jo
fbld
lea
cmpsb
shll
sub
mov
pop
das
test
jmp
mov
imul
loop
icebp
out
add
ds
mov
cmp
xchg
xchg
xor
jmp
or
stos
icebp
insb
ficompl
mov
dec
inc
popf
cli
jp
mov
pop
cltd
pop
bound
je
les
mov
mov
pop
adc
packsswb
and
push
dec
in
call
scas
out
aam
loope
popa
xchg
sub
stos
inc
lea
cmpsl
jno
dec
mov
test
enter
xchg
arpl
dec
inc
out
movsb
outsl
inc
stos
or
popa
call
push
inc
fbld
adc
test
addl
outsb
add
out
aaa
imul
test
push
test
leave
jae
jno
jmp
arpl
add
jle
sub
bswap
or
clc
sub
jmp
sbb
data16
scas
lods
icebp
pop
icebp
insl
inc
aam
add
lds
add
nop
iret
add
mov
cmp
sbb
jno
cmpsb
sub
jge
ljmp
movb
inc
add
out
adc
inc
xor
fmull
jae
popa
mov
movsb
lods
cmpb
add
lret
iret
dec
mov
mov
pop
xor
mov
aaa
cli
aaa
ret
les
sahf
adc
pusha
int3
mov
sbb
test
mov
xchg
outsl
shlb
icebp
xchg
dec
jmp
xchg
and
or
mov
sub
adc
in
mov
jnp
mov
and
jmp
lds
xor
rep
or
lcall
mov
mov
pop
or
dec
jb
addr16
fldl
stc
mov
pop
xor
fwait
cmp
addb
xchg
mov
add
psllq
pop
pop
inc
mov
int
outsl
aad
cld
xor
and
fldl
repz
lock
into
jmp
push
repnz
xchg
popf
js
sbb
mov
je
imul
mov
xor
fiadds
inc
mov
inc
fs
pop
inc
cmp
mov
loope
clc
push
mov
xor
test
mov
fcmovbe
shrb
lods
sub
jno
test
add
test
jnp
int3
in
out
pop
in
xor
jo
sub
outsl
or
cmp
mov
pop
mov
into
dec
dec
xchg
mov
sub
xchg
mov
inc
mov
cs
call
ret
lret
mov
test
inc
dec
adc
jge
jb
push
movsb
adc
mov
jae
mov
or
add
and
arpl
or
test
push
pop
cmpsb
lock
imul
inc
outsl
fisttpl
in
lea
adc
in
int
das
or
adc
mov
out
fidivrs
ss
dec
dec
icebp
loope
in
popf
jmp
insl
aad
aad
push
ficomps
nop
pusha
mov
sbb
or
and
ficompl
aad
icebp
adc
sbb
mov
idivb
xor
data16
repz
gs
int
cs
cmp
mov
push
das
loope
inc
and
mov
or
pusha
movsb
jbe
mov
rcll
lds
adc
mov
add
fucomi
jbe
test
mov
or
cs
inc
daa
imul
inc
cmpsb
push
or
xchg
mov
repnz
mov
lods
dec
push
ss
lds
dec
cmp
pop
push
mov
daa
inc
mov
xchg
mov
dec
add
jl
sti
mov
and
xor
in
pop
pusha
arpl
daa
add
push
xor
mov
iret
or
mov
inc
dec
mov
pusha
dec
pop
xchg
dec
mov
inc
inc
scas
jnp
imul
mov
push
or
lods
inc
icebp
dec
lods
add
repnz
arpl
shrl
imul
cmpsb
lds
in
rolb
psrlw
or
inc
stos
loop
daa
les
shl
push
sub
mov
inc
lret
or
cmpsb
and
stos
add
mov
int3
mov
mov
popa
xor
popa
clc
sbb
in
in
mov
jle
rorb
mov
cmpsb
sub
popa
xchg
lret
or
xchg
sub
jnp
push
jp
movsl
test
cmpsl
pusha
roll
adc
das
data16
jge
mov
inc
shrl
iret
sub
out
mov
or
sub
test
test
lea
shlb
stos
inc
hlt
jl
xor
imul
xchg
in
cld
cmpsb
pop
int
out
cmp
hlt
stos
mov
in
inc
add
inc
les
and
aas
lret
xchg
in
pop
mov
xchg
mov
sahf
test
outsb
ds
icebp
push
loop
in
mov
mov
mov
and
into
inc
int
std
and
cmpsb
push
mov
dec
and
test
inc
test
test
xchg
nop
arpl
dec
dec
add
bound
sbb
add
enter
inc
cmpsb
and
outsl
call
push
out
add
or
cmp
sbb
xchg
push
scas
call
xchg
sub
ljmp
arpl
jecxz
bound
imul
cs
bswap
cmp
sub
dec
xchg
in
add
jecxz
mov
push
and
outsl
outsl
sbb
iret
test
nop
or
subb
jle
enter
call
push
rolb
imul
jno,pn
cmpsb
lods
out
iret
dec
out
cli
push
es
cmpsb
bound
in
adc
mov
mov
loopne
pop
gs
lock
dec
les
int
cli
xchg
clc
and
mov
add
push
iret
mov
or
cmp
imul
mov
xorb
adc
out
pusha
fdivrs
push
mov
outsl
and
pusha
sti
cmpsb
fsin
ss
scas
pop
lret
imul
int
sub
push
jp
mov
lock
or
mov
sub
lcall
addr16
sbb
xchg
les
pop
lds
xor
jae
dec
out
in
or
or
icebp
pop
jp
pop
or
les
imul
les
jmp
loop
lea
pop
leave
push
jle
enter
into
fisubl
int3
pop
lret
sub
jns
dec
sub
jecxz
fucomip
cmp
push
adc
dec
mov
mov
daa
es
sub
xlat
cltd
jmp
fst
xchg
test
jge
insl
sbb
push
sbb
adc
mov
shlb
js
es
fcomps
dec
pop
cli
jg
stos
inc
add
mov
jno
into
nop
dec
cwtd
fimuls
mov
sbb
into
mov
inc
inc
adcb
jne
inc
into
loopne
scas
orb
insb
nop
pushf
outsl
test
dec
pop
imul
mov
in
push
jmp
add
push
fmuls
in
xchg
enter
mov
subb
insb
enter
lods
or
aas
fisubl
movsb
fistpl
or
push
or
aaa
orb
mov
lcall
mov
in
and
stc
nop
imul
and
clc
xchg
out
movsl
mov
sub
xor
scas
fcompl
aaa
xor
ss
les
pusha
and
fsubl
push
inc
sbb
insl
lret
xchg
lahf
repnz
inc
enter
shrl
xor
fsubl
aad
jne
leave
sub
sub
jbe
cmpsl
mov
roll
outsl
movsl
lock
cltd
cmp
ljmp
mov
inc
int3
dec
cmpsl
sbb
adc
lret
sub
jnp
xchg
movsb
cs
inc
xchg
sbb
shr
test
dec
add
mov
stc
mov
or
int
scas
add
or
lahf
or
add
dec
sbb
rclb
stc
and
dec
in
sbb
mov
jecxz
adc
adcl
add
jp
call
inc
loopne
mov
enter
ret
and
add
or
adc
int
outsl
and
repnz
loop
lea
lret
into
out
and
ret
add
ljmp
fiaddl
xchg
and
stos
pop
inc
das
in
push
cmpsb
xchg
lock
mov
mov
sahf
in
popf
mov
mov
pop
mov
jmp
in
movlps
mov
iret
mov
call
xor
and
mov
scas
xor
push
or
loop
inc
iret
inc
cli
cltd
dec
test
and
pop
nop
lret
icebp
jb
jmp
ror
out
in
sbb
xor
leave
mov
bound
jbe
mov
enter
inc
lds
fidivrs
insb
lds
mov
push
mov
cmp
mov
dec
lods
mov
jb
leave
add
cmp
jo
lahf
pop
mov
inc
lea
rcll
push
cs
jb
mov
adc
mov
push
dec
out
fildll
jns
in
push
push
cmpsb
lods
call
lds
cs
lcall
test
pop
and
test
push
divl
iret
cmp
add
test
or
and
jecxz
mov
dec
and
in
outsl
in
popa
mov
pusha
ljmp
das
rorb
bound
and
imul
mov
fbld
out
xchg
lea
jecxz
out
test
jle
mov
testl
lea
lcall
popa
and
jp
and
push
daa
repnz
mov
jb
xor
data16
and
out
fdivs
repz
movsb
xor
loope
scas
outsb
dec
mov
in
fsubrl
daa
mov
je
inc
xchg
out
nop
cmp
pop
mov
xchg
xor
insb
cmp
pusha
push
mov
testl
xchg
scas
test
das
add
xor
mov
dec
rcll
adcb
inc
or
subl
cmpsl
dec
arpl
stos
insl
dec
xchg
dec
inc
dec
or
je
mov
dec
inc
xor
dec
mov
in
test
adc
cmp
xchg
in
mov
cmpsl
addb
leave
push
nop
jge
sub
pop
repz
subb
out
push
stos
cs
rolb
xchg
or
cmp
test
pop
test
sub
or
lret
cmp
data16
dec
mov
inc
lret
add
cs
stos
in
adc
push
mov
xchg
dec
pop
cmpsl
das
lea
test
repz
imul
cmpsb
insl
mov
stos
cld
repz
mov
pop
or
nop
inc
dec
pop
jbe
jno
gs
dec
add
mov
sub
mov
icebp
pop
adc
sub
or
or
mov
or
enter
sbb
test
jg
inc
dec
push
inc
daa
mov
xor
xor
imul
add
xchg
adc
stos
loop
inc
push
sbb
jnp
inc
adc
movsl
sub
dec
mov
cmpsb
jb
jno
mov
adc
mov
clc
mov
loopne
pop
push
lret
xor
xchg
pop
or
loop
dec
mov
inc
shl
pushf
adc
sub
enter
inc
in
ret
arpl
lods
or
cmp
cmc
xor
mov
mov
je
xchg
sub
lea
cmp
inc
or
bound
lock
sub
xor
out
xor
mov
ror
mov
jmp
fdivrl
lods
std
into
test
add
mov
ja
scas
divb
ret
in
inc
jmp
aas
ds
out
imul
lds
inc
imul
sbb
push
nop
jae
imul
subb
push
pop
or
add
cmpsb
sub
jecxz
mov
or
imul
mov
popa
sub
add
dec
movsl
imul
xchg
xor
mov
add
iret
scas
scas
loope
adc
sbb
lock
mov
pop
xchg
mov
bound
or
test
mov
sbb
lret
les
push
fdivs
xchg
and
or
ja
pop
cmpsl
dec
nop
orb
iret
cmp
mov
cmpsb
clc
lds
and
jecxz,pt
dec
lahf
jp
lret
dec
xor
iret
outsl
add
cs
out
iret
sarb
xchg
dec
icebp
adc
subb
and
loop
xchg
add
jns
leave
sbb
or
ret
push
mov
cmpsl
mov
sbb
in
push
out
ret
arpl
and
in
xchg
push
jle
out
lret
in
push
mov
xchg
inc
jnp
mov
lcall
pop
into
shll
loope
shr
adc
xor
test
add
cs
sbb
int
push
mov
movsb
jo
add
add
test
dec
test
movsb
enter
cmp
addl
jns
xchg
in
mov
inc
lods
jg
pop
mov
mov
add
call
sbb
outsl
jecxz
dec
gs
out
sub
mov
stc
dec
repnz
mov
jg
mov
dec
test
imul
add
jns
inc
inc
fistpll
inc
inc
ret
xchg
fstpl
and
fs
enter
jp
dec
dec
or
xchg
xchg
repnz
mov
or
push
push
in
fnstsw
xchg
loopne
dec
adc
sbb
rcrb
scas
test
jecxz
jo
test
sbbb
lds
aad
orb
popa
cld
lcall
andb
inc
pop
fiaddl
test
jo
mov
inc
lods
xor
add
xchg
and
in
xor
and
out
push
les
in
loope
and
mov
jecxz
inc
and
sbb
add
inc
out
neg
ficomps
stos
lds
popa
test
jns
insl
call
xor
sub
fcmovnbe
sub
mov
mov
ljmp
shll
sbb
cmpsb
dec
push
ret
adc
dec
xchg
push
jnp
xor
test
fsubs
lahf
jno
cmp
ss
sub
inc
enter
mov
add
cmp
lret
or
icebp
mov
push
rcr
add
push
push
insl
sub
sbb
lret
sub
mov
cmp
repz
mov
cs
push
nop
insl
jae
dec
ds
pop
mov
and
adc
test
push
adc
into
fidivrl
add
mov
and
lds
movsl
dec
rcr
push
inc
push
shll
leave
jecxz
test
xchg
push
popf
data16
cmp
sbb
test
orb
nop
dec
mov
lods
add
xchg
push
sar
pop
loopne
test
leave
inc
imul
cs
sub
pop
scas
les
roll
pop
mov
test
sub
test
pop
push
lock
inc
sub
rorb
dec
sub
ficomps
dec
je
sub
xchg
out
add
test
inc
scas
dec
fs
xchg
xchg
rorb
or
or
test
or
mov
mov
jmp
pop
xchg
add
repz
pop
dec
adc
jnp
icebp
adc
and
mov
add
jecxz
inc
mov
jp
mov
rorl
or
mov
push
test
jmp
out
stc
inc
repz
jns
mov
mov
repnz
imul
sbb
js
loop
outsb
out
cmp
out
jp
sub
sub
inc
adc
jae
inc
mov
cmp
rorb
ljmp
add
and
rclb
inc
xchg
iret
push
mov
enter
add
dec
lods
fildll
dec
rol
xchg
mov
mov
jmp
push
xchg
mov
mov
add
jecxz
in
movsb
xchg
movsl
dec
test
ds
dec
mov
inc
subl
mov
or
dec
imul
and
push
pop
clc
imul
lock
pop
xchg
push
dec
stos
iret
lea
movsb
lds
or
cmp
push
adc
mov
adc
or
insl
imul
or
cmp
cmp
jb
sub
shrb
out
test
nop
xchg
and
xchg
lea
xchg
les
out
out
or
jo
pop
test
nop
dec
xchg
mov
mov
pop
ret
ret
shll
dec
or
fst
or
mov
mov
xor
and
into
push
jb
xor
test
add
bound
pusha
inc
fcomp
ffree
icebp
mov
jb
cltd
xor
sub
out
pop
inc
xor
or
xchg
stc
stos
arpl
inc
enter
pop
inc
mov
andb
lock
lret
adc
mov
jg
stos
int
mov
insl
rcrb
xchg
rcrl
not
jo
out
xor
mov
xchg
aaa
pop
pop
mov
xchg
or
xchg
outsl
andb
or
cmp
lahf
faddl
add
fisttpl
lcall
jb
jge
xor
cmp
test
rorb
pop
in
out
pop
sbb
popa
ror
add
mov
pushf
repz
ret
inc
shll
inc
xchg
mov
ljmp
aam
add
rep
pushf
push
mov
pop
xchg
shrl
in
fst
push
ds
lea
jle
jmp
in
pushf
mov
add
lock
add
repnz
popf
ret
lock
ljmp
je
clc
mov
nop
mov
mov
mov
mov
xchg
lret
shlb
dec
movups
faddp
adc
and
add
popf
inc
bound
mov
inc
sbb
leave
out
adc
adc
cmc
push
addr16
mov
adcb
rcrl
mov
addr16
out
sbb
in
imul
mov
jecxz
push
xchg
orb
mov
cs
and
out
rorb
push
rcrb
sub
push
inc
add
push
popl
mov
sarb
repnz
push
test
shr
mov
test
mov
test
dec
call
shlb
lock
cmp
xchg
cmp
inc
fwait
mov
pop
outsb
add
xchg
and
iret
shrb
jmp
je
pushf
fidivrl
cmp
lahf
repz
sarb
sub
sub
movsl
sar
cmc
xor
roll
in
fistl
xchg
inc
mov
test
scas
dec
push
fidivrl
cltd
mov
loop
idiv
fisttpll
push
rcrl
mov
xor
das
decl
sub
xchg
sahf
mov
push
clc
mov
mov
scas
jae
enter
xor
shll
inc
mov
rcr
insb
push
enter
mov
iret
pop
xor
jno
mov
rep
pop
inc
or
iret
mov
pop
pusha
rorl
lahf
and
jmp
push
jo
mov
ret
xor
das
mov
ret
and
xor
rcrb
add
sbb
add
shlb
mov
dec
inc
shlb
dec
mov
pop
rol
fucomi
mov
inc
push
mov
pop
enter
xchg
shr
movl
pushf
mov
lds
iret
lret
int
not
imul
inc
scas
sarb
addr16
jb
sbb
cmp
ret
xchg
mov
or
fldcw
add
xchg
xchg
lock
gs
dec
cmpsb
mov
test
dec
fnsave
ror
cmp
stos
pop
cmpsb
rcrb
or
mov
into
rorb
outsb
xor
aaa
loop
cmc
rorb
sbb
pop
out
test
lret
or
add
lret
push
xchg
jns
rcr
in
xor
xchg
adc
cmpsl
xlat
sbb
add
mov
sub
leave
sbb
ret
fdivs
shl
stos
sbb
rorb
fchs
int
jns
ret
jb
popl
mov
ret
push
cmpsb
cwtl
mov
push
into
jb
push
icebp
xor
fdiv
ret
or
nop
push
jns
mov
push
inc
mov
inc
inc
mov
inc
nop
jns
cmp
mov
out
inc
nop
and
lret
inc
jle
in
pop
aad
or
adc
xchg
mov
adc
mov
and
or
rolb
xchg
fstpl
ja
loope
fwait
adc
or
cmpsb
mov
aad
xor
ljmp
push
dec
sbb
test
cltd
dec
and
fisubl
out
repnz
xchg
mov
je
pop
cmp
shrl
and
shlb
mov
into
jge
xchg
js
clc
inc
jae
inc
adc
into
mov
rclb
adc
jle
xchg
inc
shlb
jmp
pop
rclb
movsb
and
imul
nop
or
mov
sbb
rorb
mov
and
into
jns
iret
ret
and
dec
inc
mov
sahf
fists
mov
pusha
fs
ret
inc
ss
fistps
xor
sarl
cmp
mov
rcl
fwait
inc
xchg
push
sarb
mov
adc
cmpsl
dec
aad
cmp
aas
or
dec
mov
mov
adc
xchg
xor
cwtl
test
add
lret
iret
and
fcomps
in
rcl
and
cmp
sbb
out
jns
cwtl
pop
mov
jne
add
sbb
scas
mov
out
shrb
lea
rclb
mov
sbb
das
lods
mov
loope
ret
imul
cmp
xor
inc
adc
cmpsl
mov
outsb
push
xor
push
imul
ds
sub
sarb
xor
mov
mov
sub
rclb
nop
xchg
fadds
push
mov
int3
dec
loop
jl
add
pop
push
pop
xlat
rorb
fidivrl
add
add
in
jmp
pop
add
decl
imul
leave
int3
cmp
sbb
mov
bound
insl
sbb
xor
movsl
mov
and
in
jno
pop
xchg
and
sarb
lret
cmc
fisubs
xor
scas
or
push
cwtl
leave
mov
fwait
jb
ss
js
dec
js
jb
test
sub
jno
lret
sarb
call
stos
std
jmp
add
mov
mov
inc
and
stc
xchg
pop
push
loopne
testl
and
call
cmpb
shlb
jnp
pop
inc
lods
xlat
pop
push
push
push
and
sub
out
loopne
loop
into
sub
orb
ret
sar
add
ror
sub
out
mov
push
cmp
pop
lds
ror
and
pop
fldt
rolb
and
add
jl
mov
pushf
cwtl
push
lea
shlb
shlb
adcl
stos
popa
inc
shlb
add
lods
push
xchg
push
xchg
pop
lret
dec
add
jns
roll
jne
mov
mov
les
mov
mov
lea
mov
leave
shrb
out
dec
pop
jbe
sbb
test
rorb
xchg
outsl
iret
enter
loop
movsl
jae
dec
sbb
jmp
mov
clc
push
jle
inc
sub
inc
add
lods
pop
xor
loopne
outsb
cmc
into
jge
iret
adc
cltd
jg
pop
movsl
enter
lret
or
ffree
lret
rol
inc
into
sub
fs
popa
jmp
repz
or
push
gs
mov
mov
dec
out
loop
andb
mov
lds
push
and
pop
add
xor
lahf
in
dec
adc
shl
icebp
bound
ljmp
mov
sub
test
push
push
sub
adcl
xor
xor
mov
mov
push
int
mov
in
call
test
sbbl
xor
cmpsb
xchg
jecxz
icebp
jmp
std
les
test
mov
loopne
push
enter
add
out
rorb
dec
jno
loope
inc
push
mov
stos
mov
xor
jnp
in
out
lea
push
pop
cmc
lret
or
jmp
inc
mov
jnp
inc
fldcw
loopne
cmpsl
clc
xor
repnz
aad
push
jecxz
cmc
lret
mov
loope
pop
push
xor
rcrb
mov
imul
clc
fisttpll
loope
push
xor
mov
or
dec
ss
inc
loopne
rol
jnp
lret
xor
cli
cs
sbb
or
aaa
andb
push
xor
sti
dec
adc
xchg
sarb
push
or
mov
xor
loop
leave
dec
push
push
add
rclb
fs
or
das
sbb
icebp
lods
ret
outsl
out
ret
dec
bound
xchg
mov
outsb
je
mov
icebp
and
lret
lret
rclb
test
int3
mov
shll
adc
and
pop
xchg
rolb
cmp
imul
out
sbb
cmp
repz
xchg
xchg
xlat
and
sub
xor
jp
sahf
fnstsw
aam
xchg
xchg
pop
push
sti
loope
cmc
enter
shrb
mov
dec
pop
movsb
jmp
or
mov
lahf
cli
sarb
fdivl
cmp
or
std
call
push
sub
mov
xor
es
fcmovb
xor
jp
adc
mov
xchg
test
decl
orl
adc
adc
rcrb
test
xor
jns
xchg
shrb
mov
rorl
out
aas
test
sarb
fdivrl
daa
in
mov
shlb
loopne
sti
jg
aam
icebp
push
rcll
adc
dec
xchg
scas
ret
enter
sbb
fmuls
addr16
shrb
rcrl
mov
or
fxch
push
lea
imul
popa
pop
push
loope
pop
adc
fwait
xor
mov
fcmovbe
lahf
dec
add
pop
pushf
inc
out
pop
sbb
rol
ja
xor
das
sub
or
cs
rcr
stc
lea
lahf
cmp
cmc
mov
ret
add
jp
jmp
cmp
adc
stos
adc
xchg
push
cmp
shll
shlb
pop
mov
popf
or
fnsave
pop
lret
cli
inc
dec
rclb
xchg
add
push
loop
maxps
shl
jnp
or
cmpsb
loope
push
cltd
rol
enter
shr
in
aas
inc
mov
ds
xor
jge
push
icebp
repnz
inc
xlat
cmpsl
into
fcoml
or
in
dec
inc
pusha
mov
lds
inc
mov
and
inc
je
sbb
add
mov
not
lret
jo
rcrb
es
test
leave
stos
movsb
rcrb
into
lods
mov
iret
sub
xor
addr16
adc
in
jge
inc
and
in
jb
sub
push
cmpsl
rcl
push
inc
xor
movsl
add
sbb
aas
mov
sbb
lret
insl
shlb
push
icebp
inc
loope
push
test
imul
mov
xor
int
pop
xchg
dec
cmp
rcrb
add
lret
aas
out
adc
ss
xchg
xchg
mov
dec
adc
sbb
rolb
mov
into
lock
inc
movsb
jle
aad
cwtl
pop
int
into
test
xchg
mov
ds
and
rcrb
mov
mov
jecxz
enter
in
jo
stos
dec
pop
lods
inc
cmpsb
jno
stos
shlb
jno
lret
inc
mov
in
or
loopne
sahf
mov
pusha
scas
and
lea
repz
leave
das
iret
sbb
outsb
jno
push
push
mov
lahf
idivl
jecxz
repz
xor
or
mulb
add
das
loope
pop
fwait
in
shlb
inc
sub
loope
pop
popf
adc
sbb
or
adc
pop
adc
cli
xchg
push
ret
into
inc
push
jno
int3
ds
sahf
scas
mov
and
lret
xchg
shlb
add
test
rcrb
and
sarl
dec
sarb
xlat
iret
into
pop
adc
mov
add
push
sahf
xchg
das
dec
sar
dec
jb
test
jbe
inc
sub
and
rcl
or
xor
pop
in
mov
fwait
test
decb
ret
xchg
push
stos
cmp
notb
dec
mov
cmpsl
sarl
int3
cmp
push
lret
mov
and
jno
insl
xlat
jl
mov
xchg
stos
sbb
rolb
fisubrs
cld
push
adc
push
pop
in
xor
or
out
lock
sbb
call
jmp
pop
pusha
mov
dec
daa
push
rolb
sbb
stos
xchg
aaa
mov
jno
and
sti
outsl
cli
cltd
addr16
lret
rolw
inc
fbstp
xor
push
dec
icebp
cmp
lock
andl
shll
sub
shl
cli
push
and
or
repnz
sti
shrl
jecxz
rol
or
lret
fsubl
cmp
iret
sub
lahf
inc
mov
push
pop
mov
leave
sbb
mov
add
xchg
fdivr
jns
fs
leave
loope
cmpb
les
ror
imul
shl
adc
mov
mov
movb
out
mov
addr16
jo
inc
in
je
in
movl
rorb
sbb
mov
jbe
daa
inc
fiaddl
push
rorb
add
mov
and
lcall
inc
mov
pop
stos
adc
sub
rclb
inc
jge
inc
mov
adc
lret
push
int
mov
mov
jg
adc
aad
xchg
dec
adc
rcrb
xchg
mov
std
sahf
jae
int3
ja
pop
imul
aas
mov
cmp
sahf
pop
leave
rcl
xchg
lods
add
inc
adc
cmp
into
add
inc
out
push
cltd
add
inc
movsl
cmp
icebp
adc
sbb
hlt
cmpsl
ja
jnp
adc
cld
adc
dec
clc
mov
lods
rolb
mov
cmpsb
cwtl
dec
pop
push
inc
jo
add
fwait
pop
or
pop
in
cmp
stos
cmp
andl
xchg
adc
enter
or
sbb
xchg
daa
sub
adc
jecxz
ror
fdivl
cs
int
add
and
cmp
xchg
pop
dec
adc
xlat
mov
sub
cld
xchg
stos
push
jb
mov
ret
lea
inc
outsb
mov
js
popa
movb
sbb
shlb
inc
jne
dec
inc
cmp
in
mov
pop
mov
mov
jbe
dec
or
mov
cmc
shlb
cli
dec
hlt
mov
mov
imul
xchg
jno
shrb
pusha
inc
dec
inc
and
fisttpll
xlat
fmull
lds
and
push
imul
xchg
cmp
arpl
in
mov
pop
cltd
dec
inc
pop
in
inc
clc
rcrb
ret
or
divl
rolb
cli
pop
dec
enter
rcrb
leave
jns
cmp
xchg
push
and
addr16
rcll
out
iret
sbb
push
dec
ret
xchg
add
repz
sub
and
movsl
rorb
cmp
shr
pop
xchg
mov
mov
mov
dec
adc
fdivs
dec
ljmp
dec
popf
ret
lret
lea
jne
jmp
xor
movl
test
push
movb
repnz
pusha
lea
jne
rcr
clc
rol
mov
bt
cmc
movzbw
shr
sub
rol
dec
clc
mov
call
inc
cmc
bt
movb
cmc
rol
stc
jmp
movw
call
push
xchg
push
movw
dec
clc
shl
pushl
push
call
pop
cmp
or
and
outsb
xchg
sbb
or
jmp
ja
jg
repz
divl
int3
rol
scas
dec
and
push
jecxz
mov
jmp
sbb
add
mov
test
out
mov
mov
xor
ret
push
call
ss
and
int
imul
pcmpgtd
imul
sub
mov
and
icebp
in
or
jecxz
pushf
xor
ss
xchg
push
in
std
push
mov
ljmp
cmp
add
push
and
jne
sub
mov
int
cs
push
mov
icebp
mov
addl
push
dec
jnp
shrl
mov
sbb
in
out
mov
sarl
fisubrl
mov
outsb
xchg
stos
adc
push
push
es
gs
adc
mov
cmp
iret
add
jg
lcall
inc
and
iret
jp
das
mov
pushl
pushl
lea
jmp
inc
stc
mov
aad
fbld
lret
hlt
jmp
add
cmp
xlat
mov
and
popf
jno
je
inc
out
aaa
test
insb
subb
sub
sarl
pusha
push
repz
jnp
shlb
ret
push
dec
xor
jmp
test
out
dec
xor
or
inc
xchg
cltd
pop
sti
hlt
cmpsl
shrb
std
xchg
mov
xchg
insb
test
std
push
dec
mov
adc
inc
je
ja
popf
rdtsc
nop
pushf
call
lea
jae
pushf
not
jmp
mov
pushf
pushf
push
pusha
pushl
ret
xor
call
repz
pop
add
call
dec
shlb
stos
mov
stos
mov
rcrl
add
aaa
imul
fiaddl
cmp
adcb
push
push
jp
cmpsl
mov
inc
add
pop
fsub
outsb
mov
adc
pop
aam
lds
mov
xorb
lcall
mov
inc
jbe
mov
fst
sbb
xor
and
xlat
mov
imul
mov
ss
popf
inc
sub
mov
add
jns
add
xchg
bound
scas
adc
dec
and
cmp
cs
jno
fimull
sbb
xor
adc
scas
lods
jge
sar
insl
ss
adc
std
enter
mov
aaa
in
loope
mov
pop
pop
cmp
xchg
nop
mov
loopne
pop
add
into
hlt
mov
sarl
iret
adc
imul
stos
xor
pop
aas
pop
es
xchg
sub
xor
fidivl
clc
adc
lods
mov
inc
jae
push
scas
mov
test
mov
push
imul
dec
adc
push
push
push
out
scas
dec
push
add
movb
jns
fistpl
mov
adc
or
mov
cmp
push
sub
xor
jmp
mov
mov
mov
push
jno
pusha
jb
and
lret
xchg
iret
movsb
ficoml
inc
push
int3
into
add
fwait
pop
pcmpeqb
movzbw
lea
mov
movl
call
call
inc
repz
aad
xchg
pushf
les
loopne
popf
push
hlt
lahf
push
mov
xor
das
insb
pusha
push
int
clc
mov
fmulp
mov
xor
mov
xor
and
int
push
dec
aas
ret
mov
je
fs
pop
mov
jns
popa
fldenv
outsl
mov
mov
out
xchg
aam
cs
lret
pop
shll
fcmovnb
mov
cmpsl
outsl
add
popf
repz
or
pop
out
sti
mov
jle
mov
stos
cmovp
pop
push
dec
andps
sbb
sub
neg
jecxz
rcrb
test
add
repz
clc
mov
xor
jbe
popa
not
movsl
add
fcoml
jne
and
insl
arpl
mov
mov
popf
sbb
pop
pushf
pusha
pushf
inc
mov
rol
cmp
xor
test
clc
cmp
bswap
lea
pop
jmp
push
pusha
call
jmp
mov
aad
in
push
fildl
mov
add
les
pop
mov
dec
movsb
fisttpll
xorb
in
jb
push
mov
and
scas
popa
sub
les
add
jne
sbb
add
call
add
outsl
mov
cmpsb
cs
mov
mov
int
pop
adc
pop
aad
pop
pop
mov
jnp
push
mov
sub
repz
aas
mov
pop
neg
outsl
mov
pusha
ljmp
mov
bound
and
int3
mov
lcall
mov
inc
ficompl
cld
mov
je
adc
sbb
arpl
sbb
in
pop
xchg
cmp
jge
testb
stc
xchg
stos
mov
pop
push
sub
sbb
mov
xlat
scas
out
mov
and
xchg
mov
out
out
mov
addr16
addl
mov
daa
aaa
notl
out
xlat
push
hlt
xor
inc
aaa
lods
pop
lock
lock
push
sahf
shlb
mov
pop
test
or
pop
ret
fs
adc
pop
sahf
sti
pop
nop
cmc
clc
mov
rol
pusha
shr
jmp
push
pushf
movl
adc
push
push
push
lea
jbe
call
pushf
lea
jb
pushf
pusha
push
pushl
ret
cmp
push
cmp
sub
stc
cmp
stc
pushl
popl
push
pusha
cmp
jmp
lret
dec
mov
lahf
insl
xchg
sbb
dec
rcrl
lods
clts
sbb
dec
mov
test
shll
mov
pop
loop
es
xchg
insl
xor
aad
pop
fcmovnbe
jns
movsl
sub
add
inc
jle
mov
in
xor
mov
je
mov
gs
movsl
inc
insb
xor
xor
ret
movsb
cmp
imul
mov
sar
ret
dec
mov
cmc
ret
jmp
pop
aas
or
jmp
ret
out
nop
cli
xor
shlb
mov
xchg
shl
jnp
cmpsb
xor
adc
in
ljmp
lahf
jbe
inc
xchg
scas
and
mov
popf
pop
ljmp
and
clc
inc
push
pushf
pushf
call
imul
add
push
mov
pop
cld
outsb
jl
mov
and
jge
sub
rorb
lcall
les
mov
mov
sub
sti
mov
repz
xor
sub
add
sub
jge
imul
in
fwait
cmpsl
fistpl
ror
imul
add
mov
popf
push
jmp
fldcw
test
lock
aad
xchg
fs
negb
aas
push
mov
add
jmp
jo
and
mov
outsl
imul
pop
andb
int3
loop
out
and
rorb
mov
mov
fdivs
mov
pop
repnz
mov
and
pusha
scas
aad
mov
jl
and
fs
sub
test
mov
xlat
pop
les
out
push
aam
shll
add
mov
adc
in
xchg
mov
sub
push
cs
cmc
fnstsw
ljmp
pusha
int
mov
jmp
lea
ds
inc
xchg
sub
cmova
inc
pushf
clc
rol
call
pushl
call
add
push
pusha
movzwl
stc
movzbl
mov
cmp
cmc
pusha
add
call
movb
lea
call
pusha
call
movl
pusha
mov
mov
mov
movw
pushl
ret
jnp
push
dec
mov
cmp
pushf
loop
out
adc
aad
jecxz
xchg
lds
leave
clc
xor
adc
jl
mov
cmp
mov
pop
or
and
out
test
inc
jl
enter
mov
ffree
and
dec
test
jno
pop
hlt
sub
dec
pcmpgtw
je
das
in
inc
or
cmp
cmc
mov
aad
push
lods
sub
call
sbb
int
dec
or
pop
out
lea
shlb
pop
jmp
sbb
and
cmp
sbb
adcl
stc
mov
dec
stos
add
xchg
adc
mov
test
out
add
sahf
pusha
mov
jle
jnp
lret
xchg
out
jne
mov
int3
adc
push
addr16
mov
mov
and
rsm
fcompl
daa
pushf
cmpsb
or
dec
adc
cmp
xor
arpl
orl
daa
jg
and
test
out
movsb
jl
dec
fists
ficompl
mov
dec
add
push
adc
add
add
add
adc
add
sbb
add
push
adc
add
add
add
jae
add
sbb
add
push
adc
add
add
add
adc
add
movl
mov
pusha
lea
jmp
push
lea
jne
pushf
movw
pushf
mov
pusha
mov
jmp
jmp
lea
pushf
not
mov
mov
jmp
lea
ja
push
pushl
mov
lea
jb
test
cmpb
push
call
dec
add
negb
sub
ss
sti
add
xchg
push
lods
jl
adc
arpl
repz
jg
ljmp
rclb
hlt
pop
push
push
mov
stc
sbb
adc
leave
pop
jae
loop
xlat
fwait
mov
adc
or
mov
ja
pushf
adc
icebp
jns
cmpsl
or
rcl
sbb
lods
cs
ljmp
out
push
and
test
aas
push
shll
out
cmc
rol
movb
push
test
pushw
popfw
mov
mov
mov
inc
call
pushl
push
movb
mov
pushl
push
movl
pushl
ret
lahf
shl
dec
mov
imul
sahf
sub
jl
mov
push
mov
insl
mov
or
lret
dec
cmc
pop
and
jno
and
cmp
loope
jp
hlt
xor
pushf
and
dec
inc
push
outsb
cli
int
push
repz
jbe
xor
outsb
aas
nop
test
mov
jbe
sub
loopne
add
lods
lret
pop
jae
adc
sti
das
pop
bound
and
pop
or
or
push
out
bound
mull
sbb
mov
mov
js
push
add
fwait
es
mov
outsb
and
lods
in
xor
or
enter
dec
dec
mov
rolb
popa
daa
lea
rolb
insl
lcall
push
and
lea
jecxz
mov
sbb
mov
xor
or
insb
loope
cmp
jnp
fcomps
neg
dec
rol
or
mov
fcmovbe
insl
and
repz
adc
movups
pop
cmpsb
dec
mov
fdivl
popf
add
jno
roll
jae
fsubp
inc
int
fwait
jl
lock
or
loop
jmp
add
mov
xchg
or
sbb
push
in
jo
ds
add
call
repnz
xchg
pop
fisubs
addr16
int
mov
lds
inc
outsl
dec
xchg
sbb
xchg
mov
into
cltd
adcl
lcall
jns
sbb
mov
and
enter
roll
push
xchg
rcrb
add
repz
and
lret
out
gs
out
in
push
pop
repnz
in
lcall
dec
pusha
add
mov
clc
call
mov
bt
cmp
xor
clc
jmp
push
lock
std
std
mov
xchg
scas
mov
ret
jg
lcall
insl
xchg
pushf
mov
pop
es
fdivrp
mov
in
dec
dec
dec
out
dec
aam
push
ret
add
jecxz
sub
test
fstpl
add
andps
leave
and
xchg
push
push
scas
xor
insl
inc
xor
mov
push
enter
fisttps
pushf
call
inc
mov
inc
mov
dec
xchg
sbb
fildl
jmp
xor
stos
repz
std
mov
sub
and
lret
mov
in
dec
ds
mov
mov
adc
lea
mov
push
data16
idivb
enter
fsubrs
mov
mov
inc
and
repnz
pop
push
xchg
shlb
mov
push
sbb
mov
sbb
cmpsb
sub
ljmp
test
scas
outsl
es
xor
hlt
stos
add
jmp
addr16
movsl
xor
xadd
mov
sub
sbb
add
mov
cmp
shl
bts
mov
not
ror
rol
add
rol
call
stc
scas
inc
inc
mov
jb
imul
fildl
dec
xchg
push
or
int3
stos
shrb
scas
pop
gs
mov
jl
movsl
stos
adc
lret
lods
gs
imul
add
xor
ss
lret
or
mov
call
add
xchg
dec
clc
push
pusha
mov
sub
shl
add
add
cmp
mov
cmc
push
dec
test
mov
test
repnz
pusha
lea
jmp
movw
pusha
lea
jne
sar
sub
btc
sub
das
setns
mov
pushf
cmc
sar
add
bt
rol
mov
bt
movl
test
call
call
sbbb
jmp
push
cmp
sub
fsubl
jmp
pop
ljmp
outsb
xchg
lahf
lock
inc
out
xchg
cmp
aam
mov
mov
mov
repz
cvtpi2ps
cmp
pop
and
mov
into
push
add
out
add
aam
call
xor
adc
repnz
xor
sub
push
loop
lret
push
sahf
cld
adc
loopne
ret
icebp
xchg
lods
out
sbb
xchg
sbb
mov
fsubrl
int3
jae
and
push
mov
ret
mov
and
gs
jb
pop
and
jne
xchg
xchg
push
test
push
inc
hlt
cmp
pop
pop
rcr
pop
mov
aad
in
mov
sbb
ljmp
add
cmp
sub
jne
subb
daa
push
push
inc
pusha
inc
pop
cmp
insl
jb
sbb
adcb
dec
dec
adc
rolb
call
push
lds
push
xchg
inc
fwait
clc
dec
mov
add
sbb
cmp
ds
stos
inc
lock
and
cltd
mov
or
xchg
push
je
xchg
enter
pusha
addr16
and
addr16
or
aas
inc
add
icebp
sub
outsb
push
and
mov
je
iret
xor
stos
cmp
pop
data16
into
sti
scas
in
out
pop
pop
cmp
sub
dec
add
sub
pop
dec
in
pop
movsl
inc
out
pop
sub
mov
inc
mov
cmpb
cs
fiaddl
aaa
sahf
and
rcr
test
sbb
aam
cmpsl
pop
mov
jno
inc
pop
xchg
sbb
stos
inc
mov
popa
push
lods
gs
xor
stos
and
into
inc
mov
push
jb
or
and
test
sub
shr
cmc
sar
btc
mov
pusha
or
call
ret
pop
inc
mov
mov
into
adc
andb
xor
adc
add
inc
popl
mov
push
mov
jle
cmp
sub
je,pt
stos
lods
add
or
lods
fnsave
mov
popa
xchg
push
fs
jge
push
sbb
in
push
lods
inc
inc
mov
outsl
loop
mov
add
pusha
jb
mov
lods
inc
pop
fisubl
pop
fs
nop
push
cmp
lret
fisubs
sarb
lea
divb
inc
mov
mov
pop
daa
add
sti
cltd
push
push
test
pop
push
sub
ret
mov
arpl
aam
pop
fistpl
jmp
ja
jge
mov
out
ss
imul
xchg
sub
mov
stos
ret
cmp
push
mov
cltd
and
scas
mull
arpl
jae
hlt
pusha
movb
pushl
pusha
lea
jmp
movsl
push
addr16
mov
xchg
insl
mov
mov
rolb
mov
jmp
xchg
pop
lea
sbb
mov
dec
into
fldcw
jle
xlat
mov
jb
xor
jg
jns
jmp
pusha
push
jp
push
cmpsl
and
add
mov
decl
aam
xchg
adc
clc
cs
pop
xor
cmovns
xchg
bt
cmp
pushl
pushl
call
fs
mov
aad
outsb
push
sbb
movl
lods
xlat
pusha
pop
and
nop
mov
arpl
push
pop
in
rclb
push
add
outsb
dec
pusha
mov
inc
mov
add
jae
jg
adc
and
jbe
scas
adc
pusha
pop
mov
cmp
add
xor
pop
pop
pop
jge
leave
cmpsb
and
jo
mov
cmpsb
add
jbe
sbb
fdivrl
pusha
pop
hlt
dec
push
les
call
add
adc
inc
lea
sbb
inc
adc
dec
jno
sbbb
sbb
in
pop
adc
ss
fwait
jle
lret
adc
dec
push
mov
push
mov
pop
or
cltd
rcl
jae
inc
or
jecxz
xchg
or
mov
cmpsl
hlt
cmp
shrb
dec
call
push
pusha
movl
call
pushf
jmp
clc
mov
stc
test
call
xchg
push
jle
pop
les
test
mov
or
jle,pt
fxch
xor
sub
rcrl
adc
aaa
gs
hlt
xor
cmp
pop
inc
pop
lock
out
push
fs
lret
rolb
fcmovne
push
pop
pop
pop
cmp
dec
loope
mov
imul
jg
lcall
push
push
pop
test
pop
add
lret
pusha
adc
shlb
clc
popf
or
mov
stc
or
or
lds
mov
pop
mov
cmp
xchg
mov
int
pushf
imul
test
ljmp
cli
cmp
mov
repnz
and
xchg
and
lret
movsl
sbb
dec
cs
addr16
mov
push
lret
ret
mov
mov
or
pushf
jmp
movzbw
bt
add
xchg
mov
sar
ror
mov
pusha
push
test
clc
xor
stc
jmp
call
pusha
jmp
jmp
push
pushf
movl
push
lea
jmp
mov
pushf
test
pusha
pushl
call
mov
mov
mov
pushl
ret
loop
or
add
push
jp
or
pop
mov
push
hlt
add
push
mov
jp
leave
das
cmc
fsub
inc
lea
test
mov
pop
push
cmp
dec
inc
mov
int3
popa
cmp
jle
add
popa
insb
inc
jb
add
cld
aas
clc
lcall
idiv
movl
push
movl
pushf
pushl
push
push
lea
jmp
adc
aad
mov
push
repz
add
and
aaa
xor
adc
xlat
mov
dec
jne
fs
shll
cld
pop
out
orl
lock
inc
dec
adcb
add
mov
xor
dec
bound
mov
pop
iret
mov
inc
jge
test
inc
inc
sarb
mov
icebp
mov
daa
pop
mov
sbb
pop
pop
testb
aad
or
out
mov
loope
xor
shr
inc
in
rcll
aam
xor
dec
push
stc
inc
sub
xchg
aad
ret
sti
pop
je
pop
je
cmpb
mov
aad
and
shrb
mov
pop
push
mov
pop
into
ret
clc
icebp
in
scas
scas
xchg
mov
xchg
sbb
xlat
insb
xor
addb
push
xlat
jno
xchg
pop
stos
inc
sub
mov
jge
or
push
or
pop
push
dec
int
and
je
add
sbb
lea
ja
and
jmp
lea
movzbw
mov
lea
bswap
mov
pushf
mov
lea
jae
call
pusha
lea
jne
lea
mov
not
not
mov
pushf
pushl
lea
jmp
cmp
pushf
lea
jb
pushf
movb
lea
jmp
xchg
call
movzbw
bsr
mov
rcl
mov
test
cmp
test
repnz
push
call
pop
mov
xor
test
jl
pushf
lods
push
and
popf
jnp
pop
lock
mov
mov
jo
pop
arpl
inc
popf
repnz
stc
dec
fsubrs
test
inc
movsb
jo
scas
add
outsb
mov
pop
sub
cs
ds
int
mov
sbb
stos
mov
mov
cmpsb
insl
mov
hlt
addr16
fwait
jo
popf
mov
inc
movsl
mov
sub
cmc
push
pop
or
pop
add
fdivrl
stos
jge
pop
cmpsb
negl
jnp
mov
stos
ljmp
or
int
dec
push
cmp
pop
scas
jp
mov
push
jecxz
push
jl
xchg
push
cmp
in
sbb
stc
sbb
xchg
lods
cmp
pop
mov
push
insl
inc
stc
adc
inc
mov
imul
pop
sbbb
fdivs
testl
shr
sbb
cmc
decl
test
stc
shr
mov
pusha
sub
movsbl
pushf
ror
lea
test
sub
pusha
call
not
mov
stc
cmpb
jmp
call
lahf
mov
dec
adc
add
xor
iret
cmp
add
xor
or
xor
add
add
adc
aas
lret
and
sub
rcrb
push
loop
or
movsb
mov
jmp
pusha
jmp
jne
gs
xor
fs
insb
add
idivb
mov
and
ds
xchg
clc
incb
jnp
pop
je
push
pop
push
xchg
mov
mov
ss
and
shlb
std
inc
imul
adc
ds
inc
mov
dec
xorb
in
jo
movhps
scas
and
xor
enter
jecxz
xchg
mov
mov
xchg
xor
push
xor
cmp
jbe
rcll
adc
xor
loopne
mov
xchg
xchg
imul
xchg
movb
or
mov
ret
imul
bt
pusha
push
bt
add
push
lea
jmp
movw
pusha
lea
jne
pushf
pushl
pushl
stos
pusha
lea
jmp
cmp
jmp
jmp
call
pusha
pushf
pushf
pushl
lea
jae
call
test
xchg
cmp
inc
das
xor
test
pop
push
add
pop
xor
popf
cmp
movhps
jb
push
mov
aam
fcoml
dec
sbb
pop
push
jecxz
mov
mov
dec
ss
sbb
lods
out
xchg
mov
dec
push
scas
in
push
mov
mov
ss
add
jp
inc
aas
mov
shrb
mov
leave
sbb
ljmp
push
cmp
mov
sbbb
dec
mov
mov
fsubl
mov
add
lcall
mov
rolb
call
jmp
js
xchg
sub
out
ss
or
outsl
mov
bound
pushl
ret
rol
mov
clc
cmp
pushf
call
cmp
aad
mov
pop
add
xor
mov
ret
ffreep
fwait
xor
sbb
push
orl
xchg
push
stos
pop
mov
pop
jb
aas
push
test
sahf
mov
lahf
lods
test
nop
mov
fcomip
insb
add
pop
pusha
pushl
lea
jmp
lea
jne
call
pushf
movl
call
pusha
pushf
pusha
lea
jne
neg
sar
inc
mov
cmp
cmp
push
jmp
fdivp
mov
mov
mov
and
add
xor
xchg
fildll
xor
lock
add
call
out
call
bound
pop
adc
movsb
decl
movsl
ja
cmp
in
add
stos
pop
mov
jl
dec
outsb
mov
int3
add
sub
shl
popl
sub
jo
cmp
fists
xorl
jne
sub
inc
mov
pop
not
call
cmp
or
call
movl
jmp
movsbw
push
call
or
aad
test
mov
mov
jp
pop
stc
pop
sbb
popa
mov
je
mov
out
adc
ja
inc
shll
push
movsb
mov
pop
addr16
test
rclb
xor
ficompl
pop
nop
inc
pop
mov
inc
push
in
and
mov
mov
jmp
out
mov
mov
adc
out
xchg
pop
and
aaa
int3
pusha
jbe
push
test
push
cltd
xor
icebp
shl
rol
stos
scas
je
popa
daa
sub
sub
aaa
dec
xchg
insb
mov
repz
and
scas
lret
out
lock
push
xchg
repz
xchg
add
js
add
xchg
cmp
dec
push
aas
cmc
ljmp
sub
jno
mov
gs
xor
cmp
out
xor
je
sbb
pusha
stc
repnz
pushf
lea
jne
adc
shrd
mov
lea
mov
bts
sub
movsbw
btc
pushf
lea
jmp
test
scas
aaa
mov
cmp
lods
xor
and
sbb
stos
xorb
scas
xchg
and
push
out
ljmp
inc
in
xor
imul
xor
mov
shl
and
pop
xchg
lods
sub
pop
out
ja
sub
ss
jns
and
push
test
mov
gs
add
repz
data16
sbb
test
iret
orb
xlat
push
lret
aaa
popl
mov
cmp
pushf
lea
ja
cmc
shl
sub
setns
add
shl
movsbl
mov
setne
clc
mov
test
clc
cmc
repnz
pushf
pushl
pushf
lea
jmp
cmp
setle
mov
bswap
lea
movsbw
lahf
bswap
mov
call
or
xchg
ss
adc
js
out
jb
mov
sub
outsb
scas
popa
or
ss
pop
loope
dec
cmp
enter
mov
and
mov
xchg
fucomi
in
andl
cmp
add
adc
std
mov
jp
test
inc
inc
push
and
addr16
mov
push
arpl
mov
xor
mov
sarl
lret
stos
stos
push
cmp
sbb
lods
mov
bound
lret
pusha
test
aas
xchg
sub
js
ret
sbb
out
neg
stos
cmp
imulb
or
test
movsl
idiv
xor
xadd
xchg
mov
call
call
push
push
lea
je
adc
test
shrd
stc
add
shl
lea
mov
cmc
pushf
pushf
clc
add
pusha
mov
btc
btr
mov
clc
movb
cmp
movb
lea
jbe
jmp
pushf
push
push
movl
movb
call
or
sysexit
mov
cltd
push
int3
mov
andb
push
insb
int3
or
or
inc
cmp
pushf
int3
dec
cmp
adc
pop
or
fwait
dec
stos
hlt
push
leave
push
inc
out
loop
mov
mov
jge
xchg
push
insl
push
push
test
imul
inc
test
sbb
int
cmp
shrl
cld
pop
jns
loopne
adc
aaa
sbb
outsl
lea
or
std
add
pop
pop
lret
gs
push
rcrb
popa
jno
sbb
cs
int3
outsl
xchg
clc
adc
inc
pushf
stos
daa
or
add
mov
inc
ja
out
lcall
push
sub
sbb
mov
cltd
mov
out
adc
cmp
loop
leave
and
iret
sbb
es
aad
xchg
lods
and
pop
iret
and
cmp
jge
cmp
int
sahf
mov
sbb
lahf
xchg
inc
mov
stos
sbb
mov
jno
or
out
jp
ret
movsb
in
cmp
jmp
push
push
inc
cld
jle
fimuls
inc
xor
mov
sbb
push
cmp
and
jl
mov
cltd
scas
mov
aam
jb
push
mov
lds
cmc
add
repz
cltd
testb
pop
mov
call
dec
and
xor
lahf
insl
das
es
inc
sbbl
pop
xchg
mov
rcr
mov
movw
lea
ja
push
lea
jb
cmp
cmpb
pushf
pusha
movw
lea
jne
shr
shrd
mov
clc
pusha
clc
pusha
add
push
call
popf
push
jmp
lcall
add
test
outsl
scas
ds
jb
lods
xlat
sub
idivl
pop
mov
fcoml
fwait
mov
jnp
in
ret
dec
and
test
xchg
lret
arpl
xor
jge
dec
cmc
cmp
imul
out
xor
int
das
inc
stos
daa
dec
lahf
jp
push
hlt
lcall
sahf
mov
clc
loopne
insl
aam
loopne
into
jno
je
jno
pop
lea
cmpsb
popa
sub
xor
jge
adc
pop
jg
push
lods
ret
cli
rorl
lahf
xchg
dec
inc
xchg
mov
ror
mov
call
pushl
mov
lea
jne
jmp
test
call
in
sub
pop
movsl
stos
xor
aas
addr16
int3
or
les
pushf
or
jns
pushf
into
jle
mov
int3
xchg
jnp
or
out
and
push
xor
popf
repnz
fs
inc
push
pushf
push
push
sub
cmpsl
cld
nop
pop
push
fdivr
push
adc
sub
and
jecxz
mov
cmpsb
inc
ret
cmp
icebp
out
sti
call
dec
sub
imul
or
fnsave
sbb
hlt
push
outsb
pop
mov
dec
push
ficoms
sbb
pop
mov
fdivl
rclb
inc
jmp
mov
mov
pop
lea
jne
jmp
movb
jmp
scas
and
xor
fdivrs
sub
sbb
int
or
and
and
iret
push
lsl
movhps
cmp
sub
and
dec
dec
xor
out
je
outsb
or
fnstsw
push
jae
mov
jno
cld
adc
notb
xor
js
or
jmp
out
into
xor
lcall
cmp
in
and
arpl
negl
subl
cld
xchg
push
imul
cmp
sub
jo
push
dec
add
xchg
sub
aas
lret
dec
cli
mov
fucom
iret
mov
test
push
insl
cld
inc
je
lock
pushf
push
cli
or
test
mov
repz
jo
test
int3
int3
negl
aas
push
out
mov
and
dec
cmp
ja
mov
adc
mov
negb
lahf
ret
in
loopne
movsb
lret
test
cmp
xchg
pop
or
pop
lcall
mov
jl
push
sbb
pop
es
icebp
pop
pop
push
loopne
dec
pop
out
clc
or
repnz
xlat
leave
jecxz
popf
scas
xchg
pop
cmp
dec
scas
arpl
fdivs
jl
cwtl
mov
xor
xchg
insb
div
int3
mov
scas
loop
int3
pushf
ss
ljmp
fwait
and
lods
sub
jns
test
je
jecxz
adc
jmp
push
mov
mov
mov
dec
loopne
sub
aaa
pop
ret
mov
daa
pop
xchg
dec
idivl
shl
cltd
je
jl
ficomps
lock
fisubs
xchg
adc
jo
cli
inc
jo
mov
cmpsl
ja
outsb
jecxz
pop
out
dec
inc
dec
xorb
fidivs
fsubl
cwtl
fcmovnbe
scas
xor
sub
out
cmp
subl
pop
push
mov
add
ljmp
mov
or
aas
push
test
xchg
cmp
lods
mov
add
mov
imul
sbb
nop
popa
aas
inc
je
pop
stc
mov
dec
vmovhps
xor
fwait
rolb
xor
int
inc
pop
sub
mov
sbbb
dec
loope
fwait
pop
aam
jp
pop
sbb
lods
out
jne
stos
aaa
fists
mov
and
ret
sbb
movsl
sbb
push
adc
mov
jno
inc
mov
inc
stos
ret
or
lods
sub
cmp
and
clc
pop
and
mov
pmaddwd
inc
loope
enter
in
rclb
sbb
das
mov
std
fwait
icebp
data16
lcall
rol
jno
into
mov
mov
push
arpl
dec
jnp
pop
pop
movsb
and
pop
nop
nop
es
inc
fsubr
sbb
mov
iret
and
mov
stc
mov
cmp
in
and
sub
insl
test
scas
cs
cmp
mov
sbb
out
and
mov
push
mov
fxch
jno
sbb
push
or
loope
outsb
sbbb
test
cmp
test
pop
jg
jge
xchg
pop
push
mov
push
dec
xchg
in
jp
cmp
xchg
js
inc
mov
movsl
sub
dec
or
les
in
popa
data16
sahf
iret
sbb
sarb
pop
cmc
mov
mov
filds
pop
push
mov
cwtl
dec
jo
cmp
sarb
mov
xor
sub
repnz
mov
sub
mov
and
dec
dec
into
and
mov
adc
mov
push
sbb
rcl
cmc
mov
and
iret
hlt
cmpsl
push
and
xor
jl
out
jne
lret
insl
add
jno
jl
xchg
lds
jnp
lods
setb
pop
mov
call
lea
je
bt
pusha
cmp
add
test
pushf
cmp
cmp
push
pushf
movl
movl
lea
jb
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
dec
clc
stc
call
push
cmp
pushf
movb
lea
ja
setb
inc
not
mov
jmp
call
lea
jne
call
pushl
popl
bt
bt
stc
jmp
call
aaa
inc
shrl
out
inc
mov
mov
mov
arpl
outsb
push
fisubrs
adc
in
or
test
sub
mov
fcmovu
dec
fldcw
stos
lret
in
mov
cmp
js
imul
xchg
jne
das
or
mov
in
add
pushf
mov
call
mov
push
pushf
lea
jmp
pop
push
stos
sub
aad
xchg
mov
outsb
loope
cmp
in
push
imul
sbb
pop
rolb
xlat
push
les
leave
mov
mov
enter
testb
loopew
jbe
pop
push
in
xchg
mov
ret
cmc
add
leave
sarb
lcall
daa
sub
adc
sahf
push
sub
xor
popa
in
xor
int
and
lods
adc
xchg
in
mov
popa
pop
dec
lods
in
inc
cli
iret
sbb
cli
out
or
pop
rcl
push
shl
fists
cld
inc
lock
pop
add
mov
arpl
or
ja
test
sti
pushf
pop
push
and
mov
mov
lahf
adc
cmpsl
scas
jbe
inc
bound
lock
scas
leave
sub
icebp
sidtl
imul
push
in
jecxz
scas
cmp
call
in
jl
inc
dec
das
gs
mov
inc
pop
xchg
push
and
dec
pop
andl
pop
mov
pop
add
popa
fwait
mov
cld
jbe
enter
inc
xchg
or
div
cltd
imul
adc
jnp
ljmp
cmpsl
jne
dec
cmp
test
mov
loopne
mov
lea
bt
cmc
add
push
lea
call
cmpb
pushl
pushf
lea
jne
not
mov
jmp
pushl
popl
pushl
push
pushf
movb
pushl
ret
movzbw
lea
pusha
pushf
movl
pushf
call
mov
pushl
lea
jmp
fimull
sub
rol
or
fcmovu
ds
inc
or
outsb
test
lcall
jne
inc
lahf
mov
ss
pusha
ljmp
testl
dec
repz
mov
mov
ret
sbb
add
imul
data16
inc
ret
cmp
and
stos
sti
fs
inc
insl
scas
xchg
pop
cmp
xchg
cmpsl
sbb
dec
sbb
jbe
pusha
cmpsl
fwait
mov
and
bound
ds
lret
mov
mov
xchg
cli
lret
js
lea
jne
inc
aad
call
jmp
clc
bt
clc
repnz
call
xor
rcr
call
lea
jb
call
jmp
jmp
sub
lahf
sub
ja
and
lahf
jg
test
in
sarl
mov
mov
mov
lods
xor
pop
push
ljmp
les
in
cmp
cltd
fistl
stc
movsb
rcll
ja
fbstp
sub
cmp
xchg
and
pop
dec
mov
adc
sub
inc
lods
xor
rorl
push
imull
loope
data16
mov
adc
stos
add
in
lock
jle
test
mov
lock
jbe
bound
sbbl
inc
cmp
and
xchg
in
fwait
add
call
cmc
jo
cmc
test
jmp
mov
movb
jmp
mov
sub
sysexit
fwait
fwait
jo
test
inc
clc
loop
push
sbb
sbbl
sub
jge
jmp
mov
pop
cmp
dec
or
imul
imulb
xchg
lret
pusha
pop
lret
pop
xchg
stc
fdivl
fadd
lods
repnz
xchg
push
cmpsl
test
stos
inc
cli
out
scas
pushf
inc
lods
orl
ljmp
add
shld
xchg
inc
sbb
int3
push
mov
out
push
mov
movsbw
clc
movzbw
test
mov
pushf
pushf
cmp
cmp
sub
mov
push
push
rep
not
bswap
lea
call
pushl
lea
jbe
inc
sub
movzbw
sbb
rcl
btc
mov
sub
shrd
mov
test
mov
lea
add
xadd
bsf
shr
sar
mov
push
and
add
add
not
push
mov
pusha
movl
push
mov
not
pushf
not
mov
lods
cmc
stc
bt
xor
jmp
pusha
jmp
stc
cmp
cmpb
call
sete
bsf
push
shld
adc
movzbw
mov
rcr
push
shrd
inc
shr
push
mov
push
shrd
mov
btr
movzbw
sar
push
bt
test
shr
push
lea
or
neg
mov
btr
shr
pushf
mov
stc
sub
mov
pushf
pushf
pushl
cmc
or
pushf
pushf
mov
movb
lea
je
bt
or
jmp
inc
bt
pushl
clc
push
rol
jmp
stc
xor
pushf
lea
call
push
jmp
setne
inc
pusha
xchg
lea
daa
mov
and
ror
mov
test
jmp
mov
aad
sub
mov
js
nop
mov
mov
jg
stos
push
jge
or
mov
and
or
adc
ror
sbbl
and
push
or
daa
cmp
add
jl
or
inc
mov
dec
rcll
mov
and
lods
sarl
movsl
lret
xor
movb
xchg
or
inc
jne
adc
dec
add
sub
mov
jle
add
mov
push
jge
cmp
or
aaa
in
jp
fstl
mov
ja
in
roll
mov
cmp
jmp
pushl
pushl
movb
lea
ja
call
test
call
jmp
adc
aad
lock
fadd
inc
hlt
adcb
adc
hlt
imulb
push
xchg
imul
stos
mov
fnclex
imul
rcrl
pop
lret
jp
mov
inc
fnstsw
jns
dec
inc
adc
push
addl
outsb
push
hlt
loope
and
sbb
push
sub
stos
jnp
call
mov
cmp
sub
mov
shll
sbb
lahf
adc
addr16
jb
into
sub
lahf
xchg
popl
movb
call
lea
je
test
bt
cmc
push
sub
movb
clc
clc
push
cmp
pushf
pusha
jmp
xor
jmp
pushf
push
and
call
pushl
call
imul
and
aad
xchg
push
mov
mov
notb
mov
icebp
std
insb
fildll
and
cmc
inc
ret
xor
xor
lock
lds
lea
int3
insl
incb
sarl
pushf
shll
jns
jb
sbb
pop
inc
sub
xchg
daa
or
mov
dec
adc
adc
xchg
stos
and
and
ja
pop
sbb
add
fs
je
pusha
pushf
pushf
lea
lea
xchg
xchg
jmp
lea
ja
stc
pushf
cmc
imul
jmp
pusha
movb
movl
mov
pushf
jmp
cmc
inc
dec
and
jae
andl
fildl
loope
dec
xlat
ljmp
outsb
xchg
xor
aam
mov
sarl
fs
inc
cmpsl
jg
loop
push
mov
inc
jne
pop
je
jmp
push
std
xchg
lret
out
jmp
stc
or
ret
imul
mov
sarl
adc
popa
dec
std
ja
xchg
movsb
add
sbb
mov
pop
add
dec
shl
mov
out
loop
fisttpl
scas
stos
push
rcrl
ret
mov
push
ret
dec
or
lods
add
xor
xchg
iret
mov
inc
cwtl
pop
lret
pusha
cmc
and
loop
das
aad
mov
push
xchg
adcb
shrb
push
testl
js
and
fcoml
cld
rclb
aam
mov
fstl
ret
pop
pop
adc
push
and
xchg
lahf
pushl
popl
call
adc
and
inc
int3
xchg
fiaddl
scas
ss
xchg
adc
pop
xor
jp
dec
dec
data16
popa
or
daa
xchg
stos
mov
stos
add
lods
gs
sub
nop
xchg
jae
jae
cmp
pushw
xchg
sub
and
or
lods
and
in
andb
aad
jecxz
repz
sbb
jns
mov
mov
inc
movl
xor
mov
lahf
push
or
push
sbb
mov
cmp
push
add
lods
sarl
aad
dec
push
aam
shll
or
pop
xchg
jecxz
push
out
hlt
push
adc
xchg
xchg
fdivl
xlat
xor
pop
ss
or
pop
jno
fs
insb
repnz
xchg
rcr
pop
xor
insb
leave
mov
outsb
dec
xchg
mov
sub
test
mov
mov
xor
pop
cmovns
test
mov
cmp
inc
sub
pop
subb
or
insb
push
sub
jg
data16
inc
and
nop
test
fs
ja
out
push
out
cmp
jne
adc
orl
adc
mov
mov
and
jmp
lea
ja
pushf
pushf
clc
clc
imul
pushf
add
mov
pusha
lea
jmp
dec
cmp
xor
jmp
lea
ja
call
call
inc
pop
out
pop
mov
jo
jb
loopne
push
ss
inc
or
mov
ljmp
outsb
xchg
adcl
push
ss
stos
xor
aaa
sub
adc
add
add
sub
adcb
add
cmc
test
push
fs
xchg
inc
leave
cmc
fdivr
mov
test
fcmovu
mov
xchg
enter
loop
testb
in
xchg
jmp
dec
cs
xorl
leave
xchg
and
test
movsb
shlb
or
add
or
cltd
add
pop
mov
orl
jge
mov
ljmp
nop
cwtl
jecxz
je
lds
outsb
addb
test
int
lret
pop
call
cld
mov
cmp
xor
popf
insl
mov
arpl
adc
xchg
xor
jg
daa
sub
bnd
ljmp
push
pop
push
mov
mov
pushf
in
jecxz
mov
jo
insl
std
das
lcall
mov
xor
jmp
adcl
adc
pop
movsl
or
sbb
scas
push
into
pop
test
out
loope
sbb
lds
jmp
scas
cwtl
add
mov
mov
mov
aas
xor
dec
popa
int3
pop
xlat
add
xor
inc
and
inc
cmp
mov
addb
mov
dec
fbstp
and
inc
push
adc
jnp
dec
and
and
pushl
pushl
popl
mov
pushf
push
push
lea
jmp
mov
rol
bswap
setb
inc
inc
rol
xor
clc
test
movzbw
inc
mov
clc
stc
bt
jmp
pushl
mov
jmp
add
stc
ror
sub
jnp
cmp
push
mov
add
mov
jmp
push
push
mov
pushf
movl
mov
mov
lea
jmp
shr
push
mov
pushl
pushf
popl
movw
pushf
pushl
popl
pushf
pushl
pushf
lea
jmp
mov
call
movzbw
jle
bts
shrd
mov
stc
test
pushf
sub
pusha
jmp
setns
movzbw
mov
pusha
mov
pusha
push
movb
lea
cpuid
bt
sub
stc
clc
test
test
cmpl
pushf
jmp
add
pusha
call
movb
pushf
popl
pusha
pusha
push
push
pushl
popl
movl
movb
mov
mov
lea
jmp
push
sub
bt
call
push
lea
jl
push
mov
mov
movsbl
repz
xadd
stc
clc
push
bt
shrd
not
ror
push
xadd
add
push
adc
cmp
pushl
call
jmp
jmp
jmp
pushf
popl
pushl
mov
pushl
popl
mov
lea
jmp
pushf
push
pusha
mov
pushf
pushf
mov
pushl
lea
jmp
jmp
push
jmp
push
mov
jmp
call
test
sub
movb
movb
pusha
mov
pusha
movl
mov
pushf
lea
jmp
jmp
push
cmp
cmp
add
mov
push
movl
dec
mov
push
pushl
pushf
not
pusha
jmp
mov
pushl
push
jmp
mov
movzbw
not
movw
call
pusha
movb
pushl
popl
push
lea
jmp
jmp
rep
cmc
shld
bsr
shl
pop
xor
cmp
bt
shrd
pop
clc
pushf
pushl
popf
mov
push
push
mov
lea
jmp
pushl
movsbl
pop
mov
movw
pushf
pushl
ret
movzbl
dec
clc
inc
neg
xor
rol
ror
setb
mov
rol
mov
stc
cmp
xor
shr
add
jmp
pusha
pusha
jmp
shl
movzbl
mov
pushf
add
call
stc
and
call
mov
cmc
clc
stc
push
xor
push
push
clc
mov
add
pusha
rol
call
xchg
pushf
repz
popl
or
and
mov
pushf
movw
adc
bts
mov
rcl
lea
mov
pushl
not
rcl
push
pushl
popl
sbb
movl
bsr
not
pop
mov
push
pop
xor
pusha
not
dec
pop
inc
movzbw
bsr
lea
neg
mov
movw
lea
movw
lea
jmp
pushl
xchg
movzbw
call
neg
movzbw
movl
lea
mov
mov
push
lea
jmp
call
bt
cmp
mov
lea
ja
inc
bsf
ror
mov
and
lea
xadd
cmp
movzbw
sub
adc
btr
bsr
lea
call
call
cmp
or
mov
jbe
bt
push
test
add
push
push
pushl
pusha
lea
jmp
add
pusha
push
pushf
lea
jmp
shld
add
movzbw
add
ror
bts
rol
not
rcr
rcr
ror
mov
rol
shrd
rol
sar
rcr
and
shrd
mov
pusha
stc
push
stc
sub
call
call
mov
pushl
push
movb
pusha
pushl
ret
lea
mov
movzbw
pushl
pusha
movzbl
repz
popl
bts
rcr
and
mov
bsr
cmc
bsr
mov
push
mov
mov
shr
adc
lea
pushl
popl
neg
movl
stc
mov
adc
ror
sub
ja
rol
xor
not
lea
pusha
inc
rcl
shld
rcl
neg
cmc
lea
add
sbb
xchg
add
jmp
add
add
call
bswap
movsbw
call
sar
not
lea
pushf
call
mov
mov
call
mov
pusha
jmp
call
pushl
test
add
jmp
bsf
shrd
sbb
mov
cmp
pushf
stc
pushl
add
pushf
lea
jmp
sbb
pusha
xchg
pusha
mov
shl
rcl
add
mov
pushf
cmp
movb
sub
clc
push
cmc
shr
mov
pushf
pushf
mov
call
mov
pushl
jmp
push
pushl
mov
lea
jl
pusha
mov
pushf
popl
pushl
movl
call
sbb
sbb
cmp
mov
sub
pop
xadd
aam
aas
rdtsc
pop
aaa
pop
not
cmp
pop
rcl
adc
jmp
pushf
mov
pushf
lea
jmp
lea
jae
pusha
pushf
popl
pushf
pushl
popl
pushl
pushf
lea
jmp
pushl
mov
pushl
pushl
mov
pushf
lea
jmp
cld
call
lea
mov
cmp
clc
push
add
pushl
call
ror
bsf
mov
cmc
bt
add
pusha
mov
jmp
cltd
mov
pushf
lahf
mov
jmp
rcr
jmp
pushf
popl
call
bt
add
cmc
clc
cbtw
bt
sub
jae
stc
pusha
cwtl
bt
stc
sub
push
mov
pushf
pushf
pushf
pushf
lea
jmp
pushf
pushf
movl
mov
call
jmp
call
mov
mov
push
pusha
lea
jmp
mov
not
lea
pushf
pushf
xchg
movzbl
mov
jmp
pusha
mov
call
jmp
clc
xadd
sar
mov
btr
shld
or
mov
test
add
call
mov
movw
pushf
lea
jmp
push
push
call
mov
pusha
mov
movb
pushl
pushf
lea
jmp
jmp
jmp
pushf
cmc
clc
add
pushf
clc
clc
shld
call
das
rcl
test
mov
clc
bt
sub
jmp
shrd
add
mov
pushf
pop
not
bts
movzbw
not
rol
btc
btr
pushf
shl
and
movsbw
btr
mov
pusha
test
add
call
bt
mov
pushf
stc
call
cmc
call
mov
pusha
pushf
movb
lea
jmp
shl
pushl
pushf
push
mov
jmp
pusha
mov
pushf
movb
pushf
pushf
lea
jmp
mov
pusha
mov
mov
lea
jo
push
pushf
pushf
popl
pusha
jmp
pusha
call
decl
call
add
push
call
push
inc
ror
pop
rol
rcl
neg
bswap
pop
lea
pusha
pushl
push
mov
lea
jmp
bt
add
clc
jmp
bt
lahf
mov
add
mov
jmp
test
add
call
mov
pushf
movb
lea
jmp
mov
mov
movb
push
pusha
lea
jmp
lea
mov
mov
pushf
lea
jmp
repz
popl
movzbw
dec
lea
sbb
mov
shr
mov
bsf
mov
btc
bsr
sbb
bts
pushl
popl
movzbw
xadd
movl
shl
rol
mov
add
test
bt
xor
lea
inc
ror
call
push
or
pusha
jmp
pusha
pusha
pushl
pushf
mov
jmp
rol
cmp
or
shl
xor
btr
bts
sbb
mov
mov
stc
add
pushf
call
mov
pushf
pusha
lea
jmp
mov
pusha
push
pushl
ret
mov
pushl
popl
movb
movw
lea
jmp
sub
push
div
jmp
pushf
popl
pushf
push
pushl
pusha
pushl
popl
movb
lea
jmp
jmp
mov
pushl
push
push
pushl
ret
lea
mov
movb
lea
jmp
call
stc
sar
ror
mov
bts
stc
rol
mov
call
pushl
popf
pusha
push
lea
jmp
movzbw
pushl
popl
clc
btr
bt
movl
cmc
cmc
push
mov
shld
xor
jmp
mov
bt
shl
clc
pushf
shr
cmc
pushf
or
mov
bt
xor
mov
call
pusha
neg
neg
mov
sub
mov
cmc
pusha
push
sub
cmc
shl
pushl
jmp
movzbw
cmp
rol
mov
clc
bt
jmp
pusha
pushl
pusha
mov
jmp
cmp
ror
mov
shl
clc
mov
push
bt
push
add
pushf
movb
mov
pusha
lea
jmp
pushf
push
lea
jne
neg
shl
mov
push
test
cmp
mov
and
test
test
stc
cmp
push
jmp
call
setnp
mov
jmp
jmp
movb
jmp
jmp
stc
sub
jmp
call
clc
stc
xor
clc
rol
jmp
sbb
and
shld
shld
mov
clc
call
pusha
pushf
pushf
popl
push
mov
pushl
popl
pushf
push
push
lea
jmp
shl
pushf
jmp
sub
btr
clc
mov
pushf
pusha
sar
mov
pushl
add
lea
rol
lea
btc
mov
mov
xor
add
sar
rcl
xor
mov
rol
bsf
not
adc
add
cmp
push
stc
movzbl
movzbl
btr
and
mov
mov
cmc
jmp
mov
stc
call
add
call
mov
call
push
not
cmc
sub
pushf
cmc
xor
jmp
mov
cmp
shl
mov
jmp
mov
pusha
bt
pushf
sub
push
lea
jne
clc
push
bt
sub
pushf
xchg
jmp
jmp
mov
pusha
push
pushf
jmp
mov
push
mov
pushf
lea
jmp
call
jmp
pushf
dec
mov
cmc
pushf
call
cmp
sub
jmp
daa
mov
aaa
call
pushf
mov
mov
jmp
mov
call
movw
call
pushf
pushf
popl
call
mov
call
add
mov
pushf
jmp
jmp
add
push
pushf
pusha
lea
jmp
mov
pushf
mov
lea
jmp
pushl
popl
mov
movb
mov
lea
jmp
stc
mov
sub
cmp
mov
stc
cmc
cmc
push
sub
test
cmp
push
call
add
jmp
jmp
xchg
pop
push
mov
bswap
repz
popl
stc
push
mov
xadd
adc
adc
pop
mov
xadd
mov
clc
call
btc
shld
xor
pusha
mov
rcl
lea
add
pop
push
pop
sar
sub
lea
not
bsr
bt
bsr
mov
clc
call
cmc
lea
rol
mov
mov
lea
cmc
add
sbb
ror
stc
bsr
movzbl
jmp
bswap
push
sete
pop
mov
pusha
lea
pushf
call
lea
pusha
mov
pusha
lea
jmp
mov
bswap
aam
mov
not
sar
jl
mov
pushf
cmp
add
pushf
jmp
pusha
call
mov
pusha
pushl
ret
lea
je
lahf
mov
call
or
ror
rol
mov
pusha
push
add
pushf
lea
jmp
call
and
test
bsf
sar
and
sub
bswap
mov
pushf
mov
jmp
mov
shrd
mov
shr
sub
ror
mov
cmp
add
pusha
pusha
mov
pushf
pushf
mov
push
lea
jmp
lea
pusha
pusha
pushf
pushf
lea
jmp
shld
movl
shl
add
dec
rcr
mov
push
xor
call
add
call
push
cmp
xchg
test
mov
test
sub
pusha
lea
jne
cmp
call
mov
call
jmp
pushl
popl
mov
pushf
mov
movb
lea
jmp
push
jmp
inc
test
add
bt
cmp
sub
mov
movb
mov
push
pushf
pushf
lea
jmp
pushf
call
xor
call
mov
pushf
lea
jb
mov
pusha
pusha
pushf
lea
jmp
stc
push
ror
pusha
inc
call
mov
call
call
pusha
divl
jmp
pushf
movl
mov
pushf
movsbl
movzbw
jmp
mov
pushf
pushf
mov
mov
lea
jmp
mov
push
pusha
mov
pushf
lea
jmp
movb
clc
rol
jmp
rep
neg
inc
sar
mov
pop
movzbw
or
sar
mov
std
movb
jmp
movsbw
pop
repz
popl
cmp
jmp
cmp
stc
sub
call
rol
call
pushf
pushl
popf
pushl
pushl
lea
jmp
mov
push
push
mov
jmp
mov
movb
pushf
call
push
pusha
push
not
movb
movb
inc
cmc
xor
bt
bt
stc
rol
movb
jmp
push
pushf
popl
call
mov
call
jmp
xor
mov
clc
bt
cmp
jnp
add
push
lea
jmp
mov
push
movw
lea
jne
pushf
pusha
jmp
and
mov
cmc
jmp
jmp
mov
jmp
pushf
movb
mov
push
mov
pusha
pushf
pushf
movb
xchg
movzbw
movsbw
jmp
jmp
mov
jmp
add
call
call
mov
movsbw
mov
pushf
jmp
dec
btc
movzww
cmp
cmp
pushf
bt
add
jmp
bswap
mov
mov
call
shr
jmp
bt
mov
setnp
shr
rcl
inc
add
call
movw
lea
jne
bswap
cmp
bsf
inc
xorb
push
pop
pop
pushf
mov
lea
jmp
test
bt
add
pusha
pusha
lea
jmp
jmp
pusha
test
bt
aad
mov
call
pushl
popl
push
lea
jmp
pusha
movl
pushf
popl
movw
pusha
pushl
popl
pushf
pushf
push
pushf
lea
jmp
mov
pop
pop
pop
mov
movsbl
movw
movzbw
movsbw
mov
movsbl
repz
popl
cmc
call
movl
push
movb
xchg
bswap
mov
call
mov
pushf
pushf
movw
mov
push
push
jmp
call
mov
pushf
mov
call
bsr
neg
mov
call
call
shl
rcr
rcr
daa
mov
inc
shrd
push
shld
mov
cmc
mov
pusha
bt
mov
add
jmp
dec
btc
mov
pushf
stc
cmp
bt
add
push
lea
jmp
mov
pushf
lea
jmp
mov
movb
pushf
lea
jmp
xor
pushf
movb
xchg
call
pushf
movl
pusha
pushf
popl
pusha
jmp
pushl
popl
movw
mov
push
lea
jmp
aam
aad
sbb
mov
stc
test
stc
cmc
sub
push
add
pushf
push
lea
jp
pushf
jae
pusha
pushl
popl
pusha
lea
jmp
call
std
movb
std
xchg
pop
lea
cld
movzbw
mov
lea
jns
cld
cld
jmp
bt
mov
pusha
clc
mov
call
lret
ror
das
add
int3
das
and
das
add
das
xor
das
add
add
fisubrl
adcb
das
cmpb
andb
orb
xor
das
add
fisubrl
or
das
andb
cmpb
das
add
das
addb
add
das
subb
and
shrb
add
das
cmpb
das
xorb
add
fldcw
add
shrb
cmpb
das
and
das
add
das
xorb
add
lret
test
add
lret
test
and
das
add
fildll
add
shrb
add
das
add
int3
das
add
das
subb
cmpb
add
shrb
adcb
das
or
das
orb
add
int3
das
add
int3
das
add
int3
das
add
lret
and
shrb
add
das
add
fldcw
cmpb
add
das
add
shrl
add
shrb
orb
adcb
das
xor
das
add
das
add
fildll
cmpb
and
das
andb
das
xorb
add
das
add
iret
das
add
int3
das
add
int3
das
add
sbb
das
add
into
das
add
das
subb
das
adcb
das
add
shrb
add
das
add
fisubrl
or
das
add
lret
das
xor
das
or
das
cmpb
das
cmpb
das
add
lret
test
add
lret
neg
das
adcb
das
xorb
add
das
subb
and
das
xor
das
subb
adcb
das
or
das
adc
das
add
int3
das
add
int3
das
add
int3
das
add
fildll
add
das
adc
das
cmpb
das
sbb
das
xorb
add
das
addb
add
fildll
xorb
add
aad
adc
das
add
enter
iret
das
add
das
sbb
das
xorb
das
xorb
and
das
add
aad
add
iret
das
add
fildll
add
into
das
add
int3
das
add
fildll
add
das
addb
add
das
add
fildll
add
das
xorb
das
add
lret
test
add
lret
test
add
int3
das
and
das
and
das
add
das
add
das
cmpb
das
subb
mov
into
das
add
das
add
das
add
das
add
int3
das
add
int3
das
add
int3
das
add
int3
das
add
das
sbbb
adcb
das
add
das
and
das
adcb
das
sbb
das
add
aad
adc
das
add
xlat
das
add
das
xorb
add
das
andb
andb
sbb
das
adcb
das
add
das
add
fildll
add
das
add
das
add
das
add
shrl
subb
andb
das
add
int3
das
and
das
andb
das
add
das
cmpb
xorb
sbbb
add
lret
test
add
lret
test
add
fldcw
add
das
add
das
cmpb
add
fisubrs
adc
das
adcb
das
add
fisubrl
add
shrb
addb
add
int3
das
add
int3
das
add
int3
das
add
xlat
das
add
das
subb
das
add
not
mov
xchg
mov
lea
pop
mov
pushf
movzbw
jmp
bsr
mov
shl
shr
call
pusha
jmp
call
mov
mov
pushf
lea
jmp
call
bswap
clc
lahf
notl
add
inc
neg
lahf
mov
jmp
movzbw
jmp
not
mov
inc
clc
movl
rol
neg
movzbl
not
lea
pushf
pushf
pushf
lea
jmp
mov
mov
pushl
ret
or
movzbl
shl
sbb
xor
stc
jbe
rcl
btc
ror
dec
push
inc
call
stc
ror
mov
pushf
pushf
bt
call
jmp
je
pusha
not
pusha
jmp
sub
push
pusha
pusha
call
call
mov
cmp
add
jmp
push
call
mov
pusha
mov
mov
mov
mov
pushl
pushf
lea
jmp
cmp
mov
add
jmp
jmp
xchg
pop
xchg
movsbw
xchg
not
mov
movzbw
push
not
repz
popl
shr
rol
mov
rol
shl
mov
rcl
xor
not
mov
shr
sar
test
pushl
popl
shrd
movl
rol
mov
not
mov
lea
inc
neg
xor
bswap
jmp
mov
xor
cmp
cmp
cmc
call
push
push
mov
pusha
lea
jmp
mov
shrd
pusha
mov
pushf
mov
call
pushl
popl
push
pushl
push
push
lea
jmp
bsr
stc
mov
bt
bt
add
pusha
mov
call
movzbw
mov
mov
push
movzbw
bswap
movsbw
mov
pop
repz
popl
adc
shrd
pop
rcr
mov
shld
mov
bt
mov
shl
pushl
popl
xadd
shld
clc
movl
clc
pop
mov
cmp
and
xor
movzbl
mov
movzbl
inc
bt
movsbw
movzbw
movsbl
neg
pushl
movsbw
movsbw
pop
lea
push
lea
jmp
pusha
pushl
mov
call
bswap
inc
dec
inc
bsr
neg
lea
pushl
push
pop
lea
mov
lea
jmp
shl
dec
movzbl
clc
stc
stc
add
call
mov
pusha
sub
clc
jmp
pusha
mov
pushf
mov
pushf
lea
jp
mov
call
jmp
mul
push
push
mov
pusha
call
lea
push
mov
mov
lea
jmp
mov
lea
jnp
lea
xchg
push
bswap
pusha
repz
popl
bts
bt
pop
mov
rcl
bt
bts
mov
neg
mov
shrd
sub
pushl
popl
test
neg
adc
movl
jmp
movzbw
inc
rol
stc
rol
inc
inc
movzbw
movw
inc
rcr
mov
xor
not
stc
setg
mov
movb
stc
cmc
clc
add
pushf
pushf
jmp
call
shrd
xor
pusha
inc
sub
ror
movzbw
neg
rol
ror
xchg
lea
bsf
sub
setb
shr
xadd
mov
pusha
pusha
rcl
mov
xor
push
add
rol
shld
dec
xadd
mov
bswap
add
sar
rcl
neg
bt
xor
clc
cmc
ror
setno
rol
bsr
rol
not
bsr
add
add
bts
not
shld
movzbl
shld
mov
bt
cmp
jmp
pushf
popl
jmp
mov
sbb
bt
mov
shr
mov
shld
adc
adc
pushl
pusha
movl
bts
not
test
mov
bsf
xor
jmp
pusha
lea
pushf
popl
movsbw
call
pushl
popl
movb
lea
jmp
cmp
stc
cwtl
call
bswap
not
not
movzbw
push
pushf
mov
not
repz
popl
and
sar
sub
ror
push
clc
push
btr
push
movsbl
rcr
xor
shrd
pushl
bt
bts
push
not
bt
mov
test
lea
shrd
xor
lea
bswap
lea
movsbw
inc
xor
neg
lea
lea
mov
call
mov
mov
movw
mov
pusha
pushf
popl
push
push
jmp
mov
jmp
setno
lea
push
pushl
mov
mov
jmp
mov
lea
bswap
std
movsbw
mov
jmp
pushl
push
mov
call
pushf
not
stc
call
bts
das
clc
xchg
mov
rcr
pusha
sets
mov
pusha
clc
sub
pushf
call
pusha
mov
pusha
mov
jmp
movsbw
call
neg
not
mov
shr
movw
or
add
mov
sar
inc
mov
and
add
pushl
popl
bts
shld
add
movl
mov
push
mov
sbb
lea
xor
pusha
inc
rcr
bsr
neg
pushf
pushf
lea
pushl
movb
pushl
lea
jmp
jmp
pushf
add
mov
pushf
mov
pushf
mov
push
mov
lea
jmp
cmc
pushf
pushl
popl
test
add
test
cmp
clc
call
pushf
mov
push
jmp
jmp
pop
movsbw
lea
pushl
movb
movb
lea
jmp
pushf
jmp
pusha
pushf
mov
movb
lea
jmp
cmc
neg
bt
movzbl
stc
rcr
shr
add
sbb
shl
not
bsr
pusha
xor
mov
lea
lea
jp
rol
or
add
test
pusha
lea
add
jle
not
add
stc
movzbl
pushf
stc
push
mov
mov
cmc
pushf
stc
or
pushf
lea
je
pusha
clc
mov
stc
sub
jmp
call
xor
call
lea
je
pusha
test
bt
xor
clc
pushf
cmp
bt
xchg
test
pushf
movb
jmp
mov
jmp
movzww
stc
pusha
pushf
cmc
add
jmp
rcr
sar
xadd
mov
bsf
mov
clc
jmp
push
pushf
popl
jmp
jmp
mov
pushf
pushl
movb
lea
jmp
inc
movzbw
shl
mov
add
call
push
pusha
pusha
mov
pushf
pushf
call
not
mov
not
not
movzbw
push
mov
pushf
pusha
call
pushf
movzbw
lea
inc
mov
push
neg
not
lea
pushl
push
lea
jmp
add
push
pushf
mov
jmp
cmc
xchg
cmp
clc
test
mov
stc
movb
pushf
sub
push
lea
jne
stc
pushf
jmp
pushf
call
push
mov
push
mov
push
mov
pusha
mov
mov
lea
pushf
pop
movzbl
xchg
movsbw
xchg
call
pushl
popl
mov
pushf
pushf
lea
jmp
jmp
jmp
cmp
jmp
jmp
add
pusha
movb
lea
jmp
pusha
mov
jmp
bswap
call
pushf
mov
mov
pushf
movb
pushf
popl
pushf
jmp
call
add
pusha
pusha
lea
jmp
jmp
jmp
mov
sub
pusha
pusha
xchg
lea
jne
push
pushf
jmp
pusha
pushf
pusha
call
mov
mov
movb
lea
jmp
mov
or
sub
mov
call
lea
je
pusha
bt
pushf
push
sub
jmp
clc
pushl
popl
shl
movl
shld
movsbw
xchg
mov
pushf
rol
rcl
dec
xor
pusha
pop
inc
inc
shl
neg
jmp
jmp
call
pushf
popl
jmp
xchg
call
pushf
mov
pushf
popl
jle
pushf
pusha
pushl
popl
push
movb
push
movb
lea
jmp
das
mov
aam
cmp
mov
bt
shl
and
mov
stc
pusha
bt
clc
sub
pushl
cmc
lea
jo
mul
call
jmp
cmc
neg
movzbw
inc
add
sub
movzbl
pushf
cmc
jmp
push
pushf
pushl
popl
pushf
pushl
movb
lea
jmp
jmp
mov
test
sub
pusha
pushf
pushf
mov
push
mov
mov
lea
jmp
pop
mov
call
pushl
popl
push
movb
lea
jmp
pushf
popl
movw
jmp
push
call
pushf
mov
jmp
pushf
movzbw
sar
movb
mov
bsf
and
stc
rcr
mov
bt
stc
not
clc
pushf
pushf
clc
not
bt
test
cmc
sub
stc
pusha
stc
and
push
pushl
call
mov
push
push
lea
jmp
ror
rol
and
rol
mov
test
pusha
test
stc
add
pushf
pushl
movb
lea
jmp
cmc
pushf
mov
rcl
bswap
cmc
xor
xor
not
inc
bt
sbb
neg
call
jmp
jmp
call
mov
bt
stc
clc
sub
movl
pushf
pushf
inc
push
mov
pushf
mov
mov
mov
lea
jmp
jmp
push
jmp
call
mov
mov
pusha
push
pushf
lea
jmp
pusha
or
pushf
call
rcr
pusha
push
bt
mov
push
bt
sub
test
add
push
movw
pushf
popl
jmp
pusha
ror
bswap
pushf
call
call
xchg
xchg
not
mov
xchg
pusha
pushf
repz
popl
cmp
shrd
and
mov
inc
mov
lea
mov
push
pushl
popl
bt
ror
rcr
shl
movl
lea
mov
btr
rcl
xor
not
inc
ror
ror
ror
or
neg
lea
bswap
lea
push
lea
jmp
push
pushl
popl
pushl
mov
mov
pushf
lea
jmp
xchg
btc
shrd
mov
xor
rcl
rol
pushl
popl
xchg
shl
lea
rcr
movl
ror
xor
mov
bts
sar
xor
xor
call
pushf
mov
call
rdtsc
rdtsc
rcr
rdtsc
mov
bsr
sar
mov
call
pushl
popl
pushf
mov
lea
jmp
add
jmp
mov
push
mov
pushf
movb
pushf
pusha
lea
jmp
movb
dec
jmp
mov
call
xor
pushl
call
stc
test
neg
clc
bt
rol
stc
test
cmc
not
cmc
test
cmc
bt
add
cmp
test
sub
movl
pusha
push
pushf
mov
mov
lea
jmp
call
mov
movsbw
movzbl
mov
pushf
not
repz
popl
shr
mov
shl
shr
mov
bts
rcr
or
mov
jmp
inc
rcr
neg
movw
bswap
movsbw
lea
push
pusha
lea
jmp
push
jmp
repz
popl
pushl
mov
shl
shl
call
mov
jmp
pushl
lea
jne
mov
push
lea
jmp
mov
mov
pushf
pushf
pushl
lea
jmp
push
setbe
mov
mov
call
mov
pushf
pusha
mov
mov
mov
movw
pushf
bswap
jmp
movzbl
btc
add
movsbw
mov
cmc
clc
pushf
clc
add
pusha
pusha
mov
lea
jmp
pusha
xchg
mov
mov
mov
pop
repz
popl
and
jmp
pusha
pushl
popl
pushf
mov
mov
lea
jmp
bt
add
pushf
movb
pushf
pusha
lea
jmp
bswap
movzbw
movsbw
lea
jmp
mov
pushf
lea
jmp
movw
setge
setle
mov
jmp
jmp
call
jmp
stc
rcr
mov
btc
dec
mov
bt
rcr
test
mov
jmp
pusha
cmc
mov
call
push
movl
pushf
push
jmp
mov
pushl
push
pushf
jmp
pusha
pushf
mov
movb
pushl
ret
push
jmp
push
jmp
mov
shld
xor
dec
bswap
inc
push
bt
shrd
neg
pusha
call
test
sub
mov
mov
mov
mov
lea
jmp
pushl
popl
movl
lea
jmp
inc
movl
push
jmp
lea
call
push
mov
pushf
pushf
lea
jmp
push
call
inc
pusha
call
push
jmp
mov
pushl
pushf
push
pushl
ret
push
mov
mov
call
pushf
inc
test
add
pushf
pushl
clc
test
cwtl
mov
test
sub
push
mov
mov
movb
push
lea
jmp
push
pushf
pushf
pushf
popl
jmp
pop
mov
shl
xchg
popf
not
lea
push
mov
jmp
rol
mov
xor
call
mov
push
jmp
mov
cmp
jmp
lahf
shld
mov
aaa
mov
push
mov
jmp
cmp
shrd
mov
test
mov
bsr
movsbl
mov
bts
pushl
popl
shr
pushf
shl
movl
call
mov
jmp
push
test
lea
call
sbb
jmp
movl
call
das
xor
and
inc
rdtsc
test
cmp
push
movb
sub
call
lea
jp
not
push
inc
stc
push
bt
xor
push
push
cmc
rol
stc
lea
jle
pushf
add
stc
sub
jmp
bt
ror
stc
add
push
jmp
movsbw
pushf
mov
stc
dec
mov
bt
cmc
test
cmp
not
bt
not
cmp
test
stc
cmp
and
pusha
movb
mov
pushf
call
test
sub
push
pushf
pusha
mov
pushf
lea
jmp
bsf
shl
shl
btr
mov
call
