push
call
ret
ret
fidivl
cmp
xlat
adc
rorl
aam
fstps
jge
fs
pop
sub
xor
pushl
inc
cmpsb
lods
in
sbb
mov
outsb
test
es
lret
xlat
jle
and
push
jbe
sbb
pop
hlt
xor
dec
and
cwtl
movsb
lahf
aam
sbb
insb
ficomps
jmp
enter
lsl
data16
loop
add
daa
mov
jp
movsb
push
movsb
sbb
xchg
rcrl
dec
jne
arpl
jmp
xchg
adc
jl
xor
and
fnstsw
imul
mov
push
scas
fnstsw
push
pop
mov
jp
pop
test
xchg
dec
or
mov
div
cmpl
leave
jp
leave
pop
xchg
mov
xchg
xlat
sbb
aad
inc
sub
mov
pushf
mov
pop
scas
sbb
pop
add
jo
lock
add
dec
nop
xchg
or
pcmpeqw
dec
stc
leave
xor
jge
mov
jae
in
dec
mov
mov
movsl
and
aaa
push
jno
add
cwtl
xor
loop
mov
cmpsl
leave
shr
pop
outsl
cs
lcall
icebp
rdmsr
xchg
imul
stos
outsw
sbb
push
das
iret
lret
and
repz
pop
cltd
pop
fcmovnu
jp
cmp
stc
faddp
sbb
insb
pop
das
cli
lds
dec
fldz
dec
xchg
aas
pop
hlt
das
jle
lahf
sub
dec
cmp
mov
or
fsubr
imul
mov
and
sahf
mov
fstpt
into
lods
cmp
cmp
jle
arpl
ss
mov
repz
in
pop
push
popa
push
pop
popf
js
push
nop
insb
pop
xchg
or
fdivl
xchg
rcll
xchg
pop
or
sbb
outsb
sahf
imul
lcall
or
gs
loopne
rolb
outsl
aad
fwait
and
mov
push
addr16
inc
in
dec
jne
mov
pop
sub
gs
mov
sub
cmp
jmp
jno
pop
push
das
and
cld
sarb
sarl
insl
sbb
fldcw
int3
ffree
pop
leave
andl
sahf
sub
cpuid
lods
adc
je
and
nop
scas
add
mov
lret
aas
scas
sub
lds
add
sbb
xor
add
enter
or
xor
aam
aad
xor
push
insl
pushf
jge
mov
imul
nop
jmp
pop
ret
xchg
push
sub
xlat
pusha
popf
repnz
outsl
out
mov
or
aas
add
popa
or
or
cmpsb
rclb
fidivrl
popf
lods
loope
push
inc
scas
fadd
xchg
xor
pop
mov
mov
outsl
aas
inc
outsb
and
adc
and
add
data16
sbb
out
mov
leave
call
mov
pop
jle
mov
stos
packsswb
cmpb
das
imul
aam
ljmp
and
dec
loopne
dec
mov
movsb
adc
push
fnsave
dec
imul
lds
sbb
inc
clc
insl
dec
jg
shrb
pop
sub
dec
mov
mov
jns
aad
cli
movsb
ds
push
insl
lea
lods
gs
dec
inc
call
pop
pop
adc
or
add
jns
mov
jle
insl
and
push
cmp
negb
mov
outsb
pop
adc
adc
testb
stc
filds
inc
pop
dec
mov
js
lock
mov
addr16
jb
nop
mov
fistl
mov
int3
push
lret
ds
fildl
pop
xchg
int
imul
adc
mov
xor
adc
xor
add
pop
push
stos
loopne
lods
jle
jl
xchg
dec
mov
popl
scas
lcall
mov
sti
fadd
jg
dec
fnstenv
rcl
sub
inc
or
mov
adc
adc
mov
stc
cmp
in
jno
add
in
icebp
in
sbb
jle
dec
in
imul
push
stos
xor
scas
push
xchg
pop
lods
iret
xchg
mov
out
lea
mov
or
mov
push
stos
loope
inc
xchg
xor
fcoms
pop
jne
repz
xor
lret
lcall
dec
lock
jbe
cs
pop
stc
daa
jns
call
leave
insb
lahf
xchg
jns
nop
in
mov
push
mov
mov
mov
cld
gs
icebp
loopne
or
adc
std
or
jl
jge
pxor
jecxz
inc
int
cmp
inc
iret
out
arpl
fucomp
dec
push
xchg
inc
adc
lea
and
ret
mov
gs
imul
adc
iret
dec
xchg
xchg
dec
mov
invd
and
lock
ss
aas
pop
push
mov
loop
mov
popf
inc
pop
repz
jnp,pt
push
in
push
jo
cld
imul
inc
fnstsw
pop
jno
decl
lods
adc
jmp
jo
sbb
xchg
xchg
popa
mov
fcoml
pusha
popa
das
cltd
fldcw
mov
adc
xor
mov
data16
stc
clc
sbb
jne
inc
jbe
or
popf
sbb
add
push
in
out
out
popf
sahf
xor
in
inc
roll
ds
sub
adc
jl
int3
push
or
or
inc
cs
mov
add
push
test
adc
lahf
sbb
cmp
stos
push
les
add
add
adc
clc
icebp
cwtl
inc
sub
lahf
outsb
cmp
std
scas
xor
dec
mov
jecxz
popl
popa
fisubs
mov
and
push
jb
xchg
pop
sub
mov
cmp
testl
push
and
mov
lret
jbe
mov
lock
jmp
fprem1
mov
cmp
test
outsl
dec
dec
mov
xlat
mov
push
mov
lea
imul
sub
push
sarl
inc
mov
cld
mov
shll
pop
push
addr16
push
push
mov
sub
pop
aas
or
sub
fistps
arpl
sbb
lcall
mov
pop
mov
outsb
adcl
sub
dec
insb
sub
mov
adc
inc
hlt
mov
sbb
ret
test
pop
add
pop
mov
into
popf
std
lods
test
ret
aaa
dec
lcall
or
inc
fnstcw
jnp
orl
testb
sub
sub
jmp
mov
pop
mov
aas
and
dec
xchg
push
lcall
sbb
jle
stos
xchg
popf
mov
pop
xchg
xchg
fcompl
sub
sti
pop
inc
lds
and
push
aaa
push
lock
sbbb
inc
add
jl
jecxz
roll
adc
add
bound
outsb
call
pop
jp
cmp
mov
mov
mov
lds
mov
pop
repnz
push
cs
es
jmp
into
or
dec
cs
test
insb
notb
mov
sub
xchg
ds
cmc
daa
negb
pop
fwait
lcall
lcall
lcall
adc
test
push
or
in
js
mov
mov
fmull
xchg
or
cmp
popl
out
xchg
gs
cmp
enter
and
mov
mov
ds
out
mov
and
mov
outsb
imul
fs
leave
cmp
inc
inc
cmp
sub
and
jge
dec
xchg
push
add
mov
fiaddl
cmpsl
int3
dec
pop
jge
mov
mov
mov
cmc
dec
out
mov
fsts
jge
or
pusha
ret
fstpt
dec
mov
loopne
popf
push
lods
lods
mov
scas
push
stos
mov
subb
popf
andb
push
push
ret
cltd
and
idivl
test
lahf
cs
fisubl
push
jb
mov
pop
xchg
dec
bound
jmp
cli
pop
jmp
mov
clc
or
mov
cli
xor
loopne
iret
in
add
and
sub
les
shrl
adc
pop
and
or
ljmp
testb
and
cmp
sti
mov
mov
jmp
out
adc
and
out
addr16
add
jnp
cltd
inc
or
xchg
xor
jae
test
fwait
jno
jge
inc
push
clc
into
mov
out
xchg
fldenv
pushf
je
or
and
xor
lcall
and
loopne
stc
push
dec
loopne
nop
dec
xor
out
das
nop
and
inc
mov
lcall
mov
aam
je
inc
inc
pop
fisttpl
mov
and
inc
jnp
mov
fiadds
sub
push
cmp
fmuls
int
je
out
fs
je
repnz
es
nop
out
loopne,pn
push
mov
dec
sbb
xchg
ret
jno
stos
out
dec
push
mov
not
mov
jnp
daa
xlat
scas
mov
or
loopne
adc
cmp
dec
or
notb
ss
jmp
xor
mov
sub
inc
ljmp
add
sbb
frstor
push
ret
loop
add
jmp
adc
jl
pop
xchg
data16
in
jmp
mov
mov
dec
dec
dec
push
inc
test
cs
mov
scas
mov
lahf
fadds
mov
push
dec
lahf
jne
shl
mov
arpl
xor
pop
int
and
pusha
or
movsl
push
cld
out
aaa
les
jb
out
pop
sbb
xorb
mov
xor
sub
mov
xchg
mov
adc
jg
xchg
outsb
fimull
addr16
lock
fs
fsubrp
pop
mov
and
xor
mov
loop
jl
insb
cmp
fmul
test
hlt
dec
xor
fcompl
inc
fs
sbb
pop
sti
sti
fstpt
sbb
ja
jge
cmpsb
or
popf
imul
imul
std
push
cmp
and
stos
or
inc
and
sub
dec
push
jl
dec
inc
popf
fiadds
loop
dec
push
xchg
nop
xchg
es
mov
push
or
rorb
jbe
and
xchg
dec
xorb
hlt
pop
mov
sub
mov
in
fisttpll
add
mov
jne
aas
inc
inc
cmpb
xor
sbb
test
cmpsb
incb
push
xor
dec
insl
loop
aad
lods
pop
fisubrl
sahf
xor
pop
out
out
rolb
filds
xor
or
fidivrl
push
shll
mov
mov
in
movb
fucomp
pushl
pusha
shrl
and
jnp
inc
push
sbb
movsl
jns
dec
fdivp
push
cmp
or
jle
pop
ret
inc
fidivl
fcmovbe
jns
cmp
jl
cmc
mov
adc
insl
mov
pop
stos
imul
and
jecxz
jecxz
mov
mov
out
pop
iret
push
add
aaa
or
cmp
nop
sub
sbb
movsl
xor
push
repnz
dec
cwtl
inc
dec
int
xor
std
or
xchg
mov
pop
adc
mov
mov
sbbb
inc
sub
cwtl
add
xchg
ds
mov
es
ja
clc
adc
adc
add
ljmp
inc
into
mov
ljmp
test
cld
sahf
aaa
mov
adc
push
fisubrl
loop
cmpsb
pushf
pop
cmp
stc
cwtl
jp
ftst
xor
mov
pop
adc
sbb
ss
sub
stos
fwait
movsl
loopne
stos
scas
pop
cmp
or
popf
dec
imul
jno
sbb
int3
leave
fsts
mov
push
cld
pushf
jmp
cmpl
enter
xchg
fisubl
pop
dec
js
shrl
pop
mov
js
jb
add
mov
out
mov
data16
pop
fwait
push
stos
data16
jbe
mov
pop
aam
test
cmp
fnstcw
mov
jl
mov
cltd
mov
lret
pop
inc
pushf
imul
jl
cmp
mov
push
pop
or
and
fwait
mov
stos
jb
push
cmpsl
add
cmp
lea
js
inc
mov
pop
jge
repz
jo
lods
aam
fsts
ja
addr16
out
dec
xchg
xchg
xor
out
or
fiaddl
inc
mov
mov
inc
cmp
scas
test
inc
fistps
aad
cltd
push
insl
cld
inc
sub
xorb
test
stos
roll
shll
pop
int3
add
jmp
in
int3
and
adc
in
insb
in
mov
jmp
cmp
imul
sbb
jg
pop
pop
xchg
addb
jg
sub
andb
repz
mov
cmc
or
mov
pop
addr16
or
adc
pushf
test
jecxz
jp
sbb
cwtl
adc
scas
cmp
fdivl
je
or
addb
adc
mov
call
lahf
repz
pop
inc
jl
sub
cmp
or
jae
shll
jl
aam
fs
arpl
dec
jbe
jno
push
cmp
popf
sub
fcompl
in
shrl
jmp
or
scas
rorl
mov
ljmp
adc
jl
out
cmp
add
loope
cmp
cmp
enter
test
inc
cmc
fwait
lcall
enter
pop
incw
jmp
das
sbb
push
outsl
cmp
push
cld
mov
ss
dec
pop
ret
repnz
sbb
test
jne
orl
xor
push
shll
and
ljmp
pop
cmp
and
aad
cmp
daa
jge
cmp
jb
inc
inc
add
and
or
sbb
xor
fdivp
xor
in
cmp
movsl
mov
insb
ljmp
cmpsl
dec
xor
sub
loopne
into
scas
repnz
and
dec
pop
sub
int3
xchg
dec
imul
insl
hlt
push
nop
mov
fdivrl
sub
mov
lods
mov
and
inc
cltd
lcall
cwtl
into
adc
sbb
sub
or
inc
iret
jno
jae
push
imul
adc
add
in
outsb
jb
cltd
subl
movsb
cld
mov
pop
dec
or
inc
in
cmpsb
cmp
inc
mov
sbb
cmp
fmuls
notl
out
jbe
int
call
mov
or
jne
popa
popf
push
push
cmpsl
lcall
test
push
inc
repnz
add
cmpsl
xchg
in
fcmovb
jmp
jbe
fists
fldt
aaa
out
repz
mov
adc
ljmp
mov
pushf
fsubrl
arpl
fisubrs
loop
int
push
sarb
test
flds
xor
iret
push
push
gs
xchg
mov
sbb
cmp
pop
imul
jo
jmp
mov
mov
notl
add
dec
push
dec
inc
gs
das
lret
sub
clc
cmp
sub
fcmovbe
aad
test
or
xor
xor
mov
lods
repnz
clc
in
mov
ds
outsb
shrl
xchg
and
rol
push
lds
imul
mov
xor
jp
and
loope
pop
lret
fnstcw
xchg
hlt
sbb
in
jbe
mov
sub
adc
adc
insb
lea
pop
or
mov
push
cmpsb
les
lock
daa
mov
sub
insb
cmc
gs
xchg
inc
out
mov
xor
mov
inc
push
adc
movsb
fucom
dec
insb
or
mov
push
lret
shll
enter
sahf
sub
aaa
outsb
lret
mov
adc
xor
loopne
insb
and
push
outsl
jns
push
xchg
insl
cmp
lds
iret
xor
push
std
movsl
jbe
ficompl
shlb
ds
fwait
jo
inc
pushl
das
sbb
xchg
lea
icebp
sub
pop
jb
mov
and
sbb
cltd
pushf
xchg
sbb
popa
in
pop
push
dec
out
fcmovbe
jp
and
popf
in
jmp
aam
sbb
loopne
pop
pusha
push
mov
movsl
xchg
lock
push
stc
out
mov
out
les
jno
jg
ja
push
mov
jp
mov
ret
aas
test
mov
jecxz
daa
lock
cmpsb
out
mov
lgs
scas
andb
add
sbb
test
movsl
sub
adc
aad
ss
pop
inc
into
mov
stos
scas
inc
and
push
and
sub
or
add
scas
dec
enter
shll
mov
popa
rol
insb
test
gs
mov
flds
cmp
jbe
or
aas
test
insl
push
es
aam
jno
mov
and
jne
sbb
popf
loop
pop
xor
test
pop
insb
in
push
dec
jno
aaa
icebp
lods
fldcw
dec
jnp
lcall
gs
in
add
in
outsb
stos
xor
push
xor
addr16
xor
sbb
cmp
ja
jle
hlt
cmc
int
cs
pop
jle
jge
add
pop
in
scas
in
pop
cmp
test
adc
lds
imul
addr16
mov
je
lds
ret
les
stos
push
sub
pop
es
lods
adc
cmp
push
jo
adcb
mov
sbb
and
push
les
iret
arpl
pop
jbe
inc
push
dec
xor
or
popa
pop
fildl
daa
stos
loopne
dec
push
or
nop
mov
out
adc
push
dec
shrb
outsl
and
ds
push
scas
aas
sbb
shl
and
push
xchg
sub
in
mov
ret
lds
test
add
xchg
push
mov
arpl
roll
add
ss
pop
test
jge
popa
cli
jne
jbe
ret
add
jo
testl
in
pop
mov
inc
mov
pop
js
push
jns
addb
cmp
mov
xchg
xor
cmp
mov
cmp
in
jge
mov
mov
push
or
shrl
sbb
adc
add
movsb
mov
mov
sbb
xor
icebp
test
mov
push
lock
cmp
ret
and
inc
mov
push
pop
ret
adc
dec
push
adc
std
sub
dec
cmp
xchg
mov
pop
hlt
push
outsl
and
std
in
push
lret
stos
sub
pushf
push
inc
adc
inc
pop
inc
pop
test
inc
ret
sbbb
xchg
mov
and
dec
jp
mov
pop
mov
mov
mul
inc
or
js
or
xor
sti
adc
vphaddwq
sbb
hlt
sbb
outsb
mov
cmp
or
push
loop
jne
bound
hlt
xor
out
sbb
cmp
loopne
loopne
orb
rcrb
imul
push
popf
icebp
sub
xor
out
shll
xor
adc
out
data16
xchg
inc
loope
inc
jg
mov
mov
push
icebp
ret
loope
aam
dec
add
inc
cmpsl
push
sbb
jns
aas
insl
repz
dec
adc
jno
jp
mov
rcll
lock
lret
mov
rcl
add
cmp
fimull
or
int3
push
mov
cmpsl
pop
in
movsl
imul
cli
rcrl
cmp
xor
mov
lds
jg
add
shll
js
push
adc
cmp
movsb
lret
mov
lds
cmp
mov
push
out
shrb
out
push
movsb
mov
jg
addr16
add
cmp
fidivrl
xor
add
ljmp
xor
xor
nop
cmp
add
popf
jo
mov
lds
sub
mov
int3
and
jp
popa
inc
dec
cmp
mov
xor
test
das
mov
mov
and
mov
or
or
loope
inc
popf
mov
mov
ret
and
int3
adc
shlb
sub
incb
jo
mov
out
pop
push
lret
jmp
icebp
in
mov
sti
icebp
nop
pop
rcll
sbb
js
aaa
mov
adc
mov
jmp
adc
insl
push
cmpsl
ljmp
or
jae
cmp
fmull
and
pop
inc
pop
mov
or
sub
mov
scas
sub
or
push
mov
push
hlt
popa
pop
jle
test
pop
cli
jmp
add
push
loopne
les
adc
mov
mov
cld
adc
push
pop
out
icebp
test
hlt
mov
and
es
movsb
pop
jns
push
ljmp
jl
pop
rolb
stos
in
xchg
scas
adcb
incl
test
mov
mov
or
fsts
stos
inc
imul
ds
sbb
jle
in
icebp
in
cmc
jmp
andb
or
in
mov
ja
mov
aas
int
add
sahf
ret
and
inc
push
dec
jmp
ja
pop
dec
push
or
push
out
scas
outsb
push
iret
jo
and
add
in
dec
jg
push
repz
dec
push
add
ds
addr16
mov
and
shr
cs
mov
loope
xor
jmp
xchg
cwtl
mov
dec
or
std
inc
sbb
jecxz
inc
shrl
cmpsl
in
dec
adc
mov
outsl
mov
lret
inc
gs
arpl
mov
mov
jnp
shlb
inc
push
test
sub
pop
xor
jno
mov
ret
sti
dec
add
notl
data16
jg
in
lea
push
imul
fwait
lret
sub
notb
sub
jge
jecxz
jle
ret
fsts
shl
mov
sbb
add
push
lock
sub
lea
adc
push
mov
aad
loop
xchg
push
mov
roll
sub
mov
mov
jl
mov
add
aad
sub
jg
or
in
int3
out
cli
or
and
les
out
mov
mov
data16
jp
enter
inc
add
mulb
jecxz
sub
inc
jns
add
push
mov
lret
fwait
loop
out
int
stos
adc
cmpsb
xchg
stos
mov
inc
lds
imul
add
pop
adc
xchg
dec
jnp
mov
jb
push
xlat
daa
dec
cmc
insb
nop
mov
mov
cltd
xlat
inc
sbb
cmpl
jno
inc
sub
out
xchg
cmc
xchg
out
repnz
call
pusha
pop
mov
ret
mov
or
mov
imul
adc
jmp
sub
mov
sbb
popf
je
sub
into
ljmp
jb
lods
add
cmc
pop
fucomip
dec
jne
xor
int
cmc
aam
or
push
fistl
int
mov
adc
insb
aam
ljmp
int
push
clc
adc
mov
sub
xor
mov
stos
lods
mov
sbb
mov
pop
clc
lahf
or
sbb
inc
pop
ficoml
push
add
mov
lret
xchg
push
pop
decb
iret
outsl
mov
mov
std
and
sub
fwait
std
inc
xchg
fwait
xchg
jl
jl
cmp
push
mov
test
jle
sub
jne
jbe
imul
add
inc
hlt
xor
dec
arpl
fadds
or
test
shrb
mov
push
cmc
roll
out
out
cmpl
mov
test
cmp
push
or
push
aas
push
and
lods
lret
push
aad
pop
add
mov
mov
jnp
jne
js
loopne
mov
jg,pn
push
push
mov
mov
fcompl
mov
lret
imul
das
movsl
je
movsl
dec
jbe
adc
in
add
shrb
cmc
xor
insb
out
inc
out
mov
mov
out
pusha
push
add
jno
xor
xchg
mull
stos
rcr
sti
push
lret
add
int3
mov
enter
fimull
dec
fnstcw
shlb
xchg
or
fdivrs
rcll
bound
fs
pop
push
lods
lret
cwtl
rorb
rcrl
inc
lahf
xor
sub
xor
dec
mov
lret
and
stos
inc
mov
and
dec
inc
loope
stc
js
mov
insl
dec
aas
and
mov
mov
jbe
xchg
sbb
movsb
sahf
pop
dec
mov
inc
popa
xlat
inc
xlat
jg
mov
sti
jo
cmp
mov
add
mov
repz
sbb
sbb
inc
xchg
sbb
sub
cld
repnz
int
test
adc
add
jl
les
hlt
outsb
ds
push
mov
xchg
sbb
jl
shr
cli
jb
push
pop
sbbb
stos
dec
stos
js
lret
xchg
fwait
or
xchg
mov
mov
fstpl
sbb
xchg
ret
sbb
stos
test
and
add
rcll
xchg
sbb
push
pusha
add
rorb
mov
sub
outsl
je
leave
add
decb
push
pop
mov
icebp
add
fcmovnbe
pop
lea
hlt
xor
mov
gs
or
pop
lods
bound
mov
sbb
rcll
fpatan
jno
movsl
cmpsb
cmp
xchg
fwait
cmp
mov
lock
cmpsb
add
dec
cmp
stc
and
dec
sahf
in
xlat
in
iret
data16
lret
das
sub
push
cmp
mov
sub
stos
jp
outsl
dec
xlat
nop
cmpsb
test
add
cltd
movsb
sbb
js
add
aaa
and
test
daa
add
je
ljmp
cmc
jle
pop
lods
pop
cli
push
inc
push
in
jg
cmp
and
lock
jns
cmp
out
and
or
outsb
inc
mov
test
mov
push
xor
ds
pop
and
outsl
sub
or
sahf
pop
aam
imul
call
aad
lret
mov
arpl
and
cmpsl
inc
xchg
insb
test
sub
int3
jl
xor
int3
in
jg
rolb
jle
test
inc
cwtl
pop
into
adc
call
add
jnp
mov
mov
test
ja
adc
cltd
sub
ficoml
subl
inc
or
pop
popa
sbb
xor
dec
jecxz
cmpb
sti
sub
loop
fmull
jo
jge
in
popa
lcall
arpl
call
loopne
inc
push
es
movsl
jne
mov
adc
sbb
pop
in
mov
out
pusha
xor
add
pusha
mov
dec
and
aas
dec
std
or
inc
sti
jle
cmc
pop
or
or
pop
push
sbb
jl
call
or
call
lahf
sbb
dec
imul
lret
xor
repz
sub
adc
inc
rorb
cmp
cli
loopne
repnz
pop
cmc
sub
loopne
aas
nop
inc
jle
sbb
stc
mov
xchg
test
inc
push
cwtl
mov
cs
pop
lods
sbb
pop
clc
clc
sub
push
daa
dec
rolb
mov
js
mov
mov
mov
inc
jo
stc
pop
dec
pop
loopne
xchg
add
mov
cltd
das
dec
inc
out
popa
out
imul
in
sbb
mov
repnz
icebp
movsb
mov
xor
arpl
out
inc
scas
pop
lods
test
jns
xchg
inc
sbb
pushw
inc
out
dec
arpl
pop
mov
jo
push
enter
call
inc
mov
int
ret
mov
push
or
das
xchg
jecxz
and
fcomps
sub
jo
xchg
pop
rcl
jg
jno
nop
mov
pop
leave
dec
pop
shr
inc
xchg
popf
mov
push
loop
sub
cmp
inc
jbe
inc
dec
es
or
jle
ret
fsubs
gs
imul
aas
in
js
in
jae
fildll
mov
xchg
cs
fsts
loop
jo
movsb
lock
aas
mov
push
inc
inc
imul
dec
popf
fsubr
daa
jl
jg
jge
jbe
fidivs
jnp
jnp
out
rcrb
cmpsb
xorl
mov
jp
cmpsl
push
cmpsl
push
cmpsb
fbstp
mov
mov
sub
das
pop
adc
mov
lcall
imul
add
xchg
cmpsb
or
cwtl
in
lret
out
mov
jge
pop
or
leave
sub
xor
xchg
dec
popa
adc
mov
sbb
pop
mov
fs
fstpl
sti
lahf
movsl
and
cmc
mov
lret
fs
sub
loop
jl
jge
inc
push
jae
cmc
pop
inc
pop
push
sub
loopne
in
aaa
lods
mov
cltd
popf
mov
cmpl
push
push
xorl
into
out
jg
inc
dec
adc
movsb
in
adc
imul
imul
orb
test
or
jno
bound
xchg
je
jbe
xor
jns
shr
mov
in
sub
pusha
and
add
out
aas
mov
inc
mov
lret
inc
leave
adc
and
push
or
call
scas
sti
mov
or
ret
inc
gs
cltd
sbb
mov
adc
mov
mov
aam
int3
mov
andl
jo
adc
aad
aam
sub
in
lret
jne
js
stos
fimull
sahf
adc
lds
cmp
das
roll
scas
jae
dec
and
lret
or
push
sahf
int
repz
pop
adc
repnz
pop
aas
imul
cmc
push
xchg
je
pop
xchg
push
xchg
inc
or
xor
scas
fdivrs
mov
mov
adc
test
repnz
sbb
cmpl
pop
xchg
xor
dec
stos
xor
jecxz
dec
push
ljmp
adc
xor
pop
lcall
mov
xor
std
push
data16
sub
mov
call
xor
aad
mov
xor
inc
inc
xlat
mov
sbbb
cmpsl
sbb
stos
outsb
fnsave
mov
mov
jmp
xor
jne
sub
clc
neg
call
loope
sti
adc
xchg
divb
in
dec
dec
popa
mov
arpl
jmp
roll
mov
inc
mov
dec
sysret
out
xor
mov
fs
lcall
stc
sbb
loopne
jae
add
and
loope
ds
and
lea
lcall
mov
je
sub
mov
ret
out
and
lcall
push
in
call
xor
xor
ret
lret
addl
cs
call
loope
bound
repnz
testb
sub
dec
dec
sbb
or
neg
pop
das
es
or
xchg
pop
mov
add
mov
sub
es
repz
mov
mov
bound
push
xor
mov
jbe
in
test
pop
enter
out
push
outsl
prefetcht1
jae
and
scas
scas
dec
mov
and
sbb
add
sbb
nop
sbb
fcomi
cmpb
iret
lds
mov
ficoml
insb
jb
mov
scas
sub
mov
in
mov
inc
lods
pop
lds
mov
sbb
int
sub
add
in
das
hlt
mov
outsl
mov
mov
cld
sti
xorb
jl
out
mov
js
cmp
sub
and
mov
es
scas
xor
sub
xchg
dec
lea
divl
pushf
and
daa
inc
fiaddl
outsl
and
and
aaa
fwait
ret
cmp
mov
pop
xchg
cltd
xor
ljmp
lods
add
or
and
sub
fnstcw
jle
shlb
mov
inc
pop
inc
xor
add
add
push
xchg
mov
mov
fsts
cmp
fs
scas
lds
pop
adc
mov
xchg
add
cmp
lods
inc
xlat
into
mov
jge
fistpl
int
stos
pop
outsb
mov
push
pushf
imul
jne
dec
jl
or
movsb
mov
js
mov
sub
sbb
je
imul
xchg
stos
cmp
je
out
repnz
or
xor
xchg
rcl
mov
pop
dec
jns
adc
imul
pusha
pop
pop
in
bound
sub
in
mov
addb
mov
cmp
cwtl
sbb
je
scas
mov
test
sbb
lret
cwtl
jle
stc
lret
or
ror
pusha
or
sahf
inc
jmp
xchg
sti
or
mov
mov
mov
ss
mov
sub
fistpll
inc
add
cmc
repz
lea
cld
in
rcll
push
dec
lea
xor
mov
mov
test
rcrl
idivl
jg
fisubrl
in
outsb
push
gs
mov
or
icebp
dec
xchg
sbb
sub
popa
mov
add
shlb
pop
lea
and
icebp
mov
data16
or
data16
outsl
test
and
out
mov
test
adc
push
lods
mov
imul
into
adc
jge
pop
bound
xchg
mov
mov
pop
mov
push
addb
std
rcrb
or
push
jo
iret
pop
inc
mov
cmpsb
fst
adc
fstpt
int3
inc
ljmp
mov
js
lret
lds
push
and
test
pop
es
fsubrs
insb
push
sub
mov
shrb
push
aad
shrl
out
arpl
out
dec
cmpsb
aas
push
mov
xchg
pop
fs
ljmp
dec
or
push
pop
js
sbb
cmp
jp
mov
ret
and
cwtl
imul
sbb
jno
mov
lcall
jmp
pop
movsl
xchg
mov
das
adc
mov
addr16
fimull
es
pop
repnz
jle
or
out
pushf
pushf
les
sahf
xchg
cld
push
mov
pop
aam
sub
pop
xchg
jbe
mov
push
lret
pop
icebp
pop
mov
jno
movsb
and
cmp
aas
add
mov
mov
fsubrs
mov
inc
into
lcall
push
or
movsl
outsb
mov
lods
scas
outsl
jmp
ret
sti
test
and
leave
inc
mov
test
cmp
sbb
pusha
subl
iret
mov
mov
xchg
push
test
sbb
pop
fs
pop
cli
dec
decl
fcoml
imul
insb
adc
push
jl
mov
pop
mov
jb
xor
mov
push
dec
inc
fsubs
mov
rolb
jmp
inc
rcl
mov
shll
cs
mov
jmp
out
divl
int
push
dec
cmc
pop
xchg
scas
lea
roll
dec
mov
push
insb
push
or
fmul
push
dec
test
cmc
data16
mov
xchg
enter
scas
xchg
stc
stos
inc
dec
lock
dec
frstor
pop
pop
popf
mov
in
ja
xchg
sbb
and
push
xchg
std
lcall
sub
imul
ds
cmp
int
test
ret
xorl
in
or
test
inc
jbe
gs
jg
mov
sub
mov
aam
xchg
cmc
xchg
adc
decl
push
and
mov
fcompl
adc
repz
cmp
xor
stos
leave
outsb
enter
insl
sbb
sub
and
jp
lcall
dec
sbb
lea
dec
pop
imul
add
pop
in
pop
cltd
jl
sbb
jge
fcoml
ret
popa
pop
dec
ficompl
fistl
aam
leave
fcmovb
jo
xchg
fnstcw
xor
into
mov
iret
pop
fidivl
inc
shll
stos
ljmp
or
loop
hlt
add
out
mov
pop
or
xchg
or
pop
js
es
movsb
cmpb
push
jno
xor
sti
cmp
cli
dec
jge
mov
jns
dec
jbe
and
inc
sub
lret
icebp
ret
popa
pop
in
fisubs
jmp
subl
out
inc
cmp
shl
das
mov
shrl
loop
pop
shlb
mov
or
or
movsl
rcll
push
icebp
aas
out
movsl
mov
mov
fxch
push
cwtl
scas
pusha
enter
arpl
ja
dec
divb
test
lds
xor
movsl
mov
or
movsb
adc
stc
into
dec
cltd
in
xchg
xchg
sub
add
dec
mov
cmc
stos
hlt
sub
daa
test
mov
test
cmp
pop
orl
daa
jae
xor
add
add
inc
das
inc
xor
jns
inc
ja
orb
xlat
loopne
lahf
mov
or
push
jl
mov
sub
jge
outsl
clc
sarl
loopne
mov
add
push
sbb
sti
and
imul
imul
xchg
xor
roll
or
call
dec
jecxz
inc
adc
out
sbb
pop
popl
cmpb
mov
popf
mov
sahf
cmp
xchg
push
jo
in
adc
and
push
test
rorl
in
hlt
sbb
inc
ja
mov
mov
es
dec
inc
je
add
or
sahf
cld
out
lahf
addr16
lahf
fsubrl
ror
loop
fld
mov
xor
mov
ds
leave
dec
aam
int
jno
sbb
mov
aad
inc
sub
in
add
cmpsb
inc
imul
shl
sbb
push
lods
and
xor
add
pop
call
incb
mov
xor
mov
bound
mov
push
push
stos
in
xor
mov
dec
das
inc
idivb
xchg
test
mov
repz
push
add
push
icebp
std
xcrypt-ecb
cmpsl
or
lcall
add
inc
or
movsb
je
mov
pusha
les
xor
gs
or
add
loop
test
mov
mov
xor
ret
mov
mov
adc
push
faddl
shl
sbb
jmp
js
mov
sahf
jno
cmpps
add
aad
sub
arpl
scas
lea
clc
idivb
std
sti
leave
jbe
cld
xor
sbb
out
lret
addl
xchg
bound
ja
shlb
pop
xor
loopne
lahf
pusha
das
in
movsb
fbld
xchg
lds
cmp
cmp
xchg
cmp
adc
fwait
and
lea
in
nop
adc
mov
cs
mov
repz
es
inc
add
loopne
fstps
push
jae
pusha
pextrw
lea
fisttps
mov
xor
or
leave
clc
rorl
out
jl
std
pop
movsl
test
test
mov
lea
rcr
cmp
adc
cld
shr
xor
shrb
xchg
movsb
jns
lret
pop
push
cmpl
fisubrl
jnp
or
sub
push
test
adc
cmp
or
inc
lods
mov
sub
scas
fcmovne
add
pop
dec
mov
repz
fwait
sbb
f2xm1
xor
and
mov
shl
dec
sahf
mov
mov
es
adc
adcl
add
or
and
sub
cmpsl
fisubrl
mov
xchg
jae
adc
arpl
nop
mov
sub
mov
mov
rclb
out
call
outsb
xchg
movsl
add
dec
lock
shrl
add
cli
dec
es
cmp
dec
or
movzwl
pop
sub
dec
cli
negl
nop
hlt
mov
ret
ljmp
dec
arpl
rolb
jns
jle
sub
test
mov
stos
movsl
xchg
shl
test
cmp
js
mov
inc
dec
testb
add
fdivr
out
stc
or
inc
cmp
pop
or
jns
insl
iret
mov
mov
inc
xor
stos
xchg
or
adc
outsb
xchg
cmp
stos
mov
mov
rcrl
push
pop
mov
dec
popf
mov
dec
xchg
sub
mov
lcall
icebp
fdivs
xchg
pop
ret
push
enter
loop
xchg
mov
mov
and
out
mov
jmp
fdivr
adc
cmpb
decb
ja
lods
mov
orl
lock
das
daa
ja
jno
repz
gs
and
pop
lods
dec
scas
adc
push
push
mov
jb
jmp
repz
in
push
clc
out
icebp
negl
scas
cld
mov
rcr
icebp
adc
sbb
or
ret
pop
push
aaa
in
outsl
hlt
add
jg
jp
scas
jns
cmp
arpl
inc
adc
mov
clc
aam
mov
jecxz
leave
mov
dec
or
sti
fsubrp
std
ret
leave
mov
jb
pop
test
fildll
jns,pt
fisttps
fiadds
fdivrl
and
push
pop
cmpb
call
les
push
out
mov
mov
ja
push
jo
mov
in
gs
adc
xchg
cltd
xlat
xchg
aaa
xor
dec
jb
sub
jae
and
lcall
insl
dec
dec
test
mov
loop
ljmp
or
mov
shll
fstp
dec
mov
and
add
cmp
filds
cli
imul
sbb
insb
xor
inc
push
jle
and
clc
mov
add
jle
stos
loop
xor
out
mov
mov
in
lods
and
loope
sub
cwtl
jno
aaa
xchg
pop
in
xchg
lcall
sbbl
sub
jns
and
pop
and
scas
stos
shrl
js
sahf
outsb
adc
loope
outsl
stc
cli
inc
mov
repz
xor
sub
daa
pop
fwait
jle
in
stc
int3
push
hlt
fnstenv
test
test
pushf
mov
data16
mov
adc
es
sbb
add
ljmp
jno
outsb
cmp
ss
out
inc
pop
push
add
das
or
and
test
inc
mov
cmc
int
out
pop
stos
pop
pop
cpuid
test
pop
decb
mov
inc
push
xchg
or
mov
pop
push
adc
add
sarl
lahf
add
test
pop
cs
lret
imul
sti
inc
or
or
xchg
test
adc
mov
int3
xchg
aad
sar
fistpl
mov
in
push
adc
or
movsb
rcl
mov
pop
lea
dec
fidivrs
out
or
cmp
xor
leave
outsb
bound
mov
or
subl
push
xchg
jae
mov
pusha
pop
sub
add
add
xor
rolb
repz
mov
and
rorl
and
in
and
pop
sbb
inc
gs
in
jnp
popa
lret
cmp
cmpsl
test
push
fbld
and
std
ret
ret
lcall
and
push
fstps
stos
mov
mov
mov
cmc
jge
lcall
mov
push
mov
inc
incb
outsb
add
xchg
int3
shl
push
mov
loope
push
inc
xchg
jecxz
adc
pop
dec
lret
insl
jae
lea
adcb
mul
lds
jno
pusha
test
mov
call
shrl
cmp
mov
xor
mov
aad
mov
mov
loope
leave
lock
xor
dec
or
inc
fisubrs
sub
fiaddl
rcl
out
dec
lds
xlat
jecxz
jae
sbb
mov
aaa
popa
mov
xor
data16
lcall
das
int3
xchg
cwtl
mov
lcall
rorb
inc
imul
bound
leave
out
xor
aad
mov
and
loopne
aam
sarl
fdivl
xchg
push
ja
or
sarb
or
xor
and
jno,pn
enter
cmp
cmp
cmp
mov
mov
mov
outsl
ljmp
pop
mov
aad
cmc
or
push
addr16
outsb
or
jne
stos
push
jl
dec
icebp
sub
in
iret
movsb
xor
cmpsl
cmp
lds
mov
jne
out
cld
and
lret
pop
mov
mov
push
lret
call
dec
outsb
in
arpl
add
lock
cmpsb
scas
xchg
cmp
push
mov
pop
out
mov
push
adc
adc
push
sbb
cmc
cmp
xor
xor
mov
cwtl
mov
mov
mov
mov
mov
pushl
out
pop
jl
jb
jge
xor
test
clc
test
aas
je
or
jmp
xor
cmp
insb
jbe
dec
xor
mov
loop
or
inc
xor
adc
adc
mov
xorl
repnz
jns
xor
lods
sbb
mov
pop
jecxz
jne
mov
pop
xchg
dec
mov
sbb
rorl
lret
pop
sbb
and
cmpb
fimull
mov
lock
inc
int
test
shll
je
in
rcrb
mov
cmp
mov
push
movsb
int
test
lods
les
mov
aam
push
jo
mov
xor
fstps
cwtl
xor
mov
ss
aam
data16
mov
mov
cmp
loop
and
rsqrtps
push
inc
test
pop
pop
int
xor
shrb
mov
enter
in
popf
andb
push
or
popf
shr
out
or
push
lods
ficomps
cwtl
ljmp
out
pop
sub
inc
dec
jb
fucomp
pop
cwtl
xor
adc
pop
bound
roll
mov
fstps
or
mov
push
cmpsb
shrb
dec
sbb
mov
jb
inc
js
push
test
or
sub
or
push
int3
movsb
fwait
cld
push
std
cmp
sti
clc
jnp
loopne
xchg
inc
add
sub
out
test
lds
inc
dec
ficomps
bound
sbb
stos
jbe
stos
mov
jl
xchg
test
cmp
cmpsb
mov
mov
cmp
pop
mov
ror
addr16
int
xchg
movb
movsb
dec
scas
inc
fcmovnb
out
cmp
dec
cmp
push
mov
mov
insb
sbb
icebp
rcl
add
es
push
scas
inc
mov
inc
out
call
in
clc
lods
xor
outsb
xchg
les
sahf
pop
sbb
arpl
mov
imul
dec
daa
mov
std
lea
inc
mov
dec
fwait
mov
lret
dec
sub
ds
fbstp
push
dec
cltd
jg
arpl
mov
inc
bound
xor
jp
test
lds
out
ljmp
jge
add
mov
jp
imul
aaa
sbb
mov
pop
in
adc
push
add
loop
jo
jp,pn
lahf
sbb
mov
enter
mov
xor
push
ret
sbb
fdivr
mov
or
inc
or
outsl
sub
fstpt
jl
sbb
xchg
or
dec
mov
xor
adc
sub
jg
cmp
add
stos
pop
inc
push
outsl
and
jl
mov
stos
dec
inc
push
aad
adc
inc
les
imul
fsubs
out
lds
rcll
scas
hlt
pop
sbb
jp
mov
pop
lret
outsb
adc
cs
out
push
in
aam
lret
jmp
jo
mov
lahf
mov
ljmp
add
and
insb
add
lret
sbb
xor
mov
jmp
aad
push
mov
sub
testb
push
setae
cwtl
fsubrp
rcrl
cs
add
repnz
jo
enter
cmp
into
cmpsb
pop
stos
or
jne
mov
lods
outsl
pop
jl
icebp
out
ss
shrb
lahf
and
mov
jae
cld
hlt
mov
test
hlt
imul
jno
mov
mov
jp
pavgw
add
add
or
sub
xchg
xchg
inc
daa
mov
aaa
pop
jl
shl
popl
iret
and
stos
mov
push
jmp
dec
mov
push
insb
fildll
adc
mov
std
shll
pop
lods
ljmp
inc
imul
mov
dec
mov
add
pop
lock
xchg
sarb
scas
aad
roll
xchg
in
idiv
enter
or
mov
add
rolb
lret
ficompl
pop
push
fldcw
in
leave
leave
nop
iret
xor
jl
sub
mov
lret
jmp
movsl
in
es
andb
adc
repnz
movsb
inc
fbstp
jb
push
sarl
loop
pop
loopne
rorb
xchg
or
aad
loop
sbb
cmp
or
insb
arpl
push
or
movsl
lret
jle
inc
data16
cmpsb
sbb
cmpl
mov
or
pop
inc
test
dec
xchg
push
cli
sbb
nop
xor
jmp
sbb
aad
pop
mov
xorl
fucomp
mov
rol
mov
imul
sahf
cld
popa
mov
xchg
pop
jae
stc
test
cmp
jge
lock
lock
push
daa
sbb
mov
inc
test
mov
pop
shr
lock
rcrl
dec
adc
mov
xlat
xchg
call
xor
ja
jmp
push
clc
cli
xchg
add
shl
fcomps
bound
mov
stos
sti
inc
adc
xchg
gs
xchg
sbb
aad
or
fdivrs
sbbl
mov
nop
lods
mov
outsb
inc
je
push
cmp
ss
das
in
cmp
mov
pop
xchg
cmp
jb
sbb
and
mov
push
lret
sahf
lahf
lods
aas
fisubl
stos
lahf
jnp
inc
test
lahf
pusha
int
xlat
jle
stos
dec
js
sahf
xor
jmp
cmp
push
or
outsb
test
xchg
xchg
in
mov
shrb
les
adc
sub
inc
adc
adc
test
and
out
and
push
fcmovne
xor
pusha
push
xor
jecxz
das
repz
adc
and
mov
leave
inc
jbe
or
enter
or
mov
xor
fincstp
add
ret
push
pop
fisttps
stos
dec
sub
cmp
xor
cld
pop
ljmp
insb
mov
cli
ds
or
mov
mov
dec
ljmp
enter
das
jo
into
ljmp
push
fldl
mov
iret
scas
pop
les
iret
push
sub
sub
push
js
mov
lods
inc
and
lods
jge
cs
lret
dec
xchg
dec
xchg
cmpsb
js
imulb
cmp
jmp
movsl
out
xor
in
cmp
inc
xchg
mov
push
adc
mov
mov
adc
xlat
sbb
lea
add
stos
push
mov
inc
arpl
dec
fstpl
popa
xor
in
ljmp
jne
or
jbe
lods
imul
loope
fmul
pop
enter
dec
jns
mov
ret
insl
faddl
into
ret
int3
xchg
jg
fwait
js
pop
test
push
js
loope
int3
unpcklps
mov
push
xchg
jae
fisttpl
adc
fsts
jmp
dec
adc
int3
xor
js
mov
jb
xchg
out
nop
psllw
mov
mov
push
mov
ret
in
ror
mov
inc
enter
dec
add
xchg
inc
ret
or
cmpsl
sarb
mov
aaa
fisubs
mov
ja
add
adc
push
out
dec
xor
fisttpll
mov
cmc
repnz
movsb
rorl
cmpsl
iret
cmp
mov
scas
lret
test
imul
mov
mov
add
pop
adc
gs
xor
js
jle
outsb
in
dec
fnsave
stc
scas
sub
dec
jnp
imul
pop
leave
ffree
adc
pop
test
outsb
mov
addr16
insl
in
imul
inc
out
adc
dec
mov
add
inc
daa
sub
fsubs
and
mov
repnz
adc
lods
and
test
jae
push
xchg
inc
ja
push
ljmp
push
into
out
pop
fwait
push
mov
ljmp
xor
jnp
mov
fadd
add
add
xchg
fwait
jno
fcmovbe
mov
pop
jle
nop
xchg
inc
adc
lret
xor
cmpsb
lcall
rolb
mov
fwait
and
mov
adc
pop
cwtl
cmpsb
iret
in
cmp
mov
ds
pop
add
mov
pop
push
cltd
adc
mov
lock
xlat
stos
clc
adc
scas
jne
gs
xchg
sbb
pop
add
and
mov
sub
dec
mov
adc
loopne
daa
push
xchg
std
popf
jecxz
xlat
das
rorl
pop
mov
addr16
nop
mov
mov
push
jbe
lret
hlt
daa
mov
adc
jecxz
arpl
adc
add
and
lret
cmp
mov
mov
inc
mov
xchg
scas
add
jl
push
bound
inc
sbb
sub
jns
jl
mov
and
test
insb
pop
push
pop
xchg
out
dec
lea
xor
sti
mov
fisubrs
insb
mov
mov
mov
pop
xor
fldl2e
xchg
jecxz
adc
je
or
mov
filds
dec
ret
dec
mov
call
jp
jno
xor
xor
mov
push
sub
adc
gs
lahf
and
jle
mov
pop
mov
pushf
repz
inc
mov
stc
push
ret
fwait
adc
cli
sub
sbb
and
xchg
or
repnz
xchg
sti
pushf
cmp
fidivrl
push
xor
daa
xor
outsb
add
or
adc
jle
mov
cwtl
js
pushf
in
jne
shlb
fcomps
sahf
sti
pushf
mov
xchg
push
xchg
sub
push
jb
add
je
jmp
scas
outsl
cltd
cmpb
jecxz
jno
mov
pop
sbb
repnz
popf
fsubs
sub
in
test
je
sbbl
lods
cwtl
inc
xor
adc
dec
repnz
into
add
add
dec
push
into
sub
enter
test
data16
xor
xor
pop
inc
adc
imul
popf
aam
push
or
pop
cmp
fwait
das
pop
mov
mov
adc
leave
lret
push
mov
repz
adc
jle
dec
inc
mov
jne
out
inc
std
mov
cltd
call
loope
pop
in
cmpsb
mov
adc
mov
jb
popl
fistpl
adc
xor
xchg
fimull
mov
imul
cmp
pop
fstl
inc
pop
inc
aam
and
pop
or
add
dec
mov
stc
push
mov
or
pop
cmc
add
rcrl
shrb
pop
inc
std
icebp
dec
xchg
xchg
aas
call
add
jns
nop
cmpsl
neg
pop
xor
xchg
outsb
pop
sbb
lods
push
and
pop
clc
push
out
or
inc
push
push
ljmp
or
test
arpl
xchg
jo
pop
daa
call
jle
icebp
arpl
pushf
popf
lock
cmp
les
outsl
imul
mov
jle
adc
xchg
inc
je
or
stos
sbb
pop
xor
push
mov
jmp
inc
movsb
call
add
dec
push
ret
mov
push
ljmp
imul
les
bound
adc
iret
testb
push
movsb
xlat
out
into
fiaddl
sbb
dec
xchg
mov
fsub
out
xchg
sub
adc
xor
inc
push
add
into
repnz
mov
in
push
mov
pop
add
test
sahf
inc
cwtl
dec
fs
xchg
lret
push
lea
sbb
cmp
imul
and
push
adc
push
clc
mov
movb
scas
or
mov
jb
loopne
push
in
sbb
aad
dec
fstl
add
jb
aaa
dec
dec
adc
mov
in
int3
cmpsl
stos
rcrl
rorb
test
in
movb
addr16
outsl
fucom
vprotq
cmp
jp
daa
mov
cmp
std
mov
insb
sub
lods
movsl
testl
cmp
loope
and
stos
add
cmp
xor
xchg
and
roll
dec
adc
cmp
rcrl
outsl
fcomp
add
movsb
iret
cld
js
or
jg
pop
pop
cld
das
jecxz
add
sbb
int3
and
and
sbb
and
out
std
inc
pop
xchg
mov
les
bound
test
pusha
pop
xchg
fnstenv
push
mov
pop
ret
pop
ss
inc
shl
mov
addr16
loop
push
pusha
shrb
or
push
lahf
mov
repnz
xchg
push
push
into
pusha
stc
push
mov
cwtl
iret
pushf
imul
clc
loopne
mov
xchg
mov
loopne
fs
cmp
and
xchg
repz
sbbl
cmpsb
push
sbb
dec
fcoms
cmpsl
popa
inc
xchg
icebp
dec
or
ret
and
inc
inc
and
lahf
int3
add
pop
pusha
and
ret
repz
roll
js
test
and
add
aas
daa
pand
add
or
pop
insb
stos
je
test
jmp
sbb
fbstp
push
loop
sbb
cmp
shll
loop
ffree
aas
mull
lret
and
mov
cld
adc
add
mov
push
cmp
xor
popa
cmp
or
andl
dec
fildl
pop
pop
push
push
pop
lret
adc
aas
jnp
stc
repnz
push
cwtl
jle
lret
push
aad
xor
dec
stc
icebp
add
sbb
data16
cmc
imul
adc
inc
div
lods
push
jecxz
stc
push
loope
sbb
inc
add
mov
push
mov
movsl
mov
add
jo
add
xchg
stos
mov
stos
and
mov
xchg
xchg
lock
add
xchg
movsl
pop
sbb
mov
cwtl
das
stc
mov
mov
pop
jecxz
pop
jno
test
into
in
fs
mov
iret
push
int
sub
or
notl
hlt
push
bound
and
jle
mov
sub
or
inc
pop
mov
test
dec
xchg
add
mov
push
xchg
jne
rcl
in
adc
bound
std
adc
jecxz
inc
pop
or
sbb
jmp
push
jae
stc
test
into
fcompl
lret
icebp
test
add
decl
fnstsw
jecxz
lods
sti
repnz
pop
iret
sti
fstpt
in
push
mov
and
fs
nop
lret
loop
pop
jnp
xchg
cmp
pop
inc
cmp
push
ss
adc
sub
cmp
push
pop
or
mov
mov
mov
loop
mov
scas
arpl
add
jo
stos
test
stos
leave
push
cmp
loop
sub
mov
mov
dec
stos
shr
and
sub
mov
mov
inc
clc
and
jno
cmp
outsl
jo
pop
daa
in
cmp
push
adc
dec
xchg
decl
lds
test
mov
cmp
inc
out
dec
gs
in
cmc
inc
sbb
push
ljmp
test
je
cmpsl
mov
gs
loop
xchg
inc
in
mov
pop
fnsave
gs
sbb
cs
or
jmp
cmpsl
fistl
loope
jae
push
das
aad
shrb
push
dec
xchg
les
aas
hlt
ljmp
js
sbb
or
push
inc
lret
clc
add
lods
add
rcrb
push
push
clc
mov
out
daa
xchg
sbb
decb
sub
xchg
lea
fcom
inc
into
iret
mov
roll
dec
mov
cmp
pushl
mov
sub
add
in
rol
add
shl
shlb
outsb
fcmovnbe
fstpl
lret
add
out
arpl
stos
adc
sahf
inc
cli
outsl
adc
inc
movsb
mov
jecxz
in
jge,pt
fsubrs
icebp
mov
jmp
loope
int3
inc
xlat
mov
imul
stos
test
pop
push
out
rcll
js
mov
cmpsl
jecxz
jp
sub
je
add
xor
sahf
test
repz
xchg
sbb
mov
in
int
and
fwait
mov
pop
push
js
xchg
mov
es
ficomps
lds
xchg
xchg
add
clc
cwtl
sub
mov
pop
lock
jl
xchg
sti
pop
dec
fistpl
das
aad
mov
rclb
insb
mov
addr16
idiv
fistl
lea
loope
flds
pop
and
mov
cmc
adc
jmp
out
arpl
jb
add
sbb
aam
pop
inc
fnstcw
dec
sarb
repz
fldl
repz
xlat
test
loop
mov
imul
stos
xor
mov
cmp
popa
adc
imull
adc
cmp
aam
or
mov
xor
and
add
inc
pop
xchg
pop
dec
in
testb
stos
mov
jmp
int
dec
clc
mov
dec
or
lods
and
test
pusha
and
mov
add
pop
lods
jae
sbb
xchg
mov
xlat
add
andl
xchg
insl
cwtl
xor
stos
mov
loope
aas
xchg
ss
aaa
iret
mov
mov
jle
adc
dec
push
cmp
inc
push
push
mov
mov
mov
jmp
inc
andb
add
dec
loope
test
mov
movsl
aaa
xchg
mov
and
adc
dec
jns
inc
add
inc
pop
xor
push
or
movsl
cmpsb
add
leave
sbb
push
pop
add
pusha
ljmp
icebp
ret
out
push
add
ret
repnz
adc
das
sbb
mov
xchg
sbb
jg
jle
xor
dec
inc
or
shl
iret
pop
leave
jle
xor
xchg
sbb
fldenv
mov
ret
test
ret
mov
sahf
mov
jbe
jo
ja
leave
dec
sbb
xchg
and
mov
jo
out
fcoml
xchg
stos
cli
movsb
push
xchg
gs
cmp
ret
test
dec
cli
js
xor
jns
cli
or
dec
insb
aam
movl
adc
mov
repz
push
mov
scas
fidivs
test
xor
dec
jns
ficompl
aas
fbld
test
push
xlat
sub
cltd
repnz
sbbb
movsb
repnz
cld
enter
cmp
jmpw
and
cwtl
out
repnz
mov
cmp
push
es
cmp
push
push
daa
jmp
inc
push
xchg
adc
pop
xchg
push
fisttpll
test
push
je
leave
mov
xlat
das
sti
push
bound
inc
shlb
rolb
loop
ss
pop
adc
sti
xchg
stc
sbb
ljmp
aam
xor
leave
lods
pop
sub
rcll
lret
not
push
mov
jge
mov
lods
ja
mov
jb
dec
pop
pusha
mov
or
fnsave
add
and
out
pusha
jmp
xor
clc
addr16
jle
xchg
xchg
bound
mov
jg
outsb
xor
sahf
mov
insl
aas
add
pop
dec
or
test
daa
and
xchg
ret
out
imul
stc
pop
xor
shlb
gs
sbb
ret
xorl
pop
dec
inc
mov
decl
dec
jne
jl
mov
dec
inc
mov
imul
sarl
sbb
dec
mov
icebp
std
xor
push
jbe
pop
jb
pop
cmc
insb
stos
mov
cmp
and
rol
xchg
sbb
movsl
sahf
cli
in
int
cmp
add
sarl
adc
push
fnstsw
cmpsb
and
mov
cld
sub
test
jno
popa
push
shlb
ret
jo
pop
ret
out
rorl
fwait
inc
je
sbb
mov
ret
je
jb
sbb
pop
daa
push
fsubrs
dec
mov
sbb
aas
inc
jno
fldenv
scas
xchg
mov
dec
in
jg
or
push
popa
fidivrs
xor
ja
pop
lea
cmpsb
lods
enter
out
es
std
push
push
insb
cli
push
add
xchg
loop
adc
imul
and
xor
fdivrl
mov
dec
outsl
loope
loop
ljmp
rcl
inc
or
pop
jecxz
lret
sar
fistpl
xchg
repnz
mov
cmp
dec
xchg
mov
dec
push
cmpsb
inc
fimuls
ret
or
mov
imul
outsb
add
pop
push
push
scas
cmpsw
mov
adc
out
push
ljmp
cwtl
je
push
sbb
into
ss
sbb
out
jmp
sarl
cld
sbb
add
pop
jmp
dec
out
mov
push
inc
out
or
incl
jbe
mov
movsb
xchg
stos
outsl
cld
or
dec
fstpt
pop
sub
mov
or
jg
mov
ret
into
sahf
aam
xchg
std
and
push
push
out
add
xchg
jle
in
sub
test
insl
mov
jle
add
sub
push
ret
lds
dec
popf
pop
xor
testb
imul
sub
add
std
bound
ret
loopne
fcom
xor
and
jp
je
sub
sub
inc
ret
dec
test
iret
dec
jno
lods
subb
popa
pusha
jne
pop
movsl
mov
mov
vrsqrtps
cmpsb
and
jmp
push
aad
sbb
mov
jge
call
imul
js
mov
std
movsl
adc
xchg
xor
in
into
adc
xlat
sub
mov
push
cmp
add
lret
das
imul
pusha
arpl
sbb
lahf
push
dec
sub
cmpsl
adc
xor
inc
sub
adc
push
aad
inc
jl
xor
cmpb
addl
outsl
daa
push
lock
call
lret
sbb
shll
mov
cmp
cmp
and
leave
cmpsb
js
pop
mov
adc
mov
negl
mov
ss
mov
stc
sub
cmc
mov
sbb
in
jg
mov
mov
mov
dec
scas
ds
cmp
imul
adc
pop
fdiv
xchg
push
jns
lret
mov
mov
adc
arpl
jno
inc
ret
inc
loopne
test
and
pusha
int3
mov
cmp
cmc
test
loop
jno
sub
xchg
mov
out
adc
stos
mov
sub
repz
orl
add
mov
popf
mov
sbb
sbb
sub
mov
adc
push
sti
mov
adc
xchg
sub
jne
cmc
gs
fiadds
jae
shr
aas
or
sbb
xchg
mov
mov
cmpsb
negb
cwtl
sbb
sbb
sub
mov
scas
stc
push
movsb
or
xor
scas
jecxz
fnstenv
mov
enter
mov
les
leave
jle
daa
popa
in
fdivr
ja
ss
jg
into
adc
fdivp
rorl
and
cmp
pop
cmp
dec
lea
inc
mov
decb
xchg
psrad
jnp
push
int
test
push
nop
incb
cmc
sbb
repz
fsubrl
in
add
iret
push
and
loope
mov
into
pop
sub
sahf
je
pop
inc
inc
push
or
pop
sbb
js
orl
inc
dec
daa
sub
clc
mov
sahf
xor
jle
fwait
mov
jge
mov
inc
in
das
or
sub
mov
jnp
loop
cmp
sub
lods
adc
cmp
ret
lahf
add
mov
pop
lret
sub
ret
popa
ficoms
dec
loope
cmc
aad
jmp
dec
pop
add
xor
and
popa
movsl
out
addr16
movsb
aam
test
cmpsb
add
sbb
lahf
rcll
cmp
adc
das
lods
leave
jmp
push
xchg
cmc
jno
lret
mov
fsubl
xor
es
addr16
loope
pop
fimull
xchg
adc
mov
shll
outsb
and
mov
lret
iret
sti
mov
dec
dec
pop
test
jp
.byte
cmpsb
.byte
pop
outsl
push
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
inc
pop
fnstcw
std
insb
push
mov
scas
mov
fbstp
ds
mov
jbe
mov
push
mov
jmp
push
icebp
fdivs
sarl
pop
xlat
hlt
jno
daa
xchg
adc
xor
jmp
jp
pop
outsl
scas
roll
mov
xlat
cltd
push
and
sbb
sbb
jle
xor
push
test
sbb
pop
cmpsb
cmpsl
add
push
xor
mov
mov
in
sbb
push
pop
es
xchg
sub
fs
.byte
add
add
ds
sub
add
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
ds
sub
add
add
add
add
mov
add
addb
add
ds
sub
add
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
ds
sub
add
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
ds
sub
add
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
ds
sub
add
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
ds
sub
add
add
add
add
mov
add
addb
add
ds
sub
add
add
add
add
add
add
rolb
add
add
ds
sub
add
add
add
add
add
add
rolb
add
add
add
in
sub
add
add
add
add
add
add
loopne
add
add
add
ds
sub
add
add
add
add
add
add
lock
add
add
add
in
sub
add
add
add
add
add
add
add
add
ds
sub
add
add
add
add
add
add
adc
add
ds
sub
add
add
add
add
add
add
and
add
ds
sub
add
add
add
add
add
add
xor
add
ds
sub
add
add
add
add
add
add
inc
add
add
ds
sub
add
add
add
add
add
add
push
add
add
ds
sub
add
add
add
add
add
add
pusha
add
add
ds
sub
add
add
add
add
add
add
jo
add
add
add
ds
sub
add
add
add
add
add
add
addb
add
in
sub
add
add
add
add
add
add
nop
add
add
ds
sub
add
add
add
add
add
add
mov
add
add
in
sub
add
add
add
add
add
add
mov
add
add
add
ds
sub
add
add
add
add
add
add
rolb
add
in
sub
add
add
add
add
add
add
rolb
add
ds
sub
add
add
add
add
or
add
add
add
ds
sub
add
add
add
add
or
add
add
add
ds
sub
add
add
add
add
or
add
push
add
add
add
ds
sub
add
add
add
add
or
add
push
add
add
add
ds
sub
add
add
add
add
or
add
push
add
add
add
ds
sub
add
add
add
add
or
add
push
add
add
add
ds
sub
add
add
add
add
or
add
add
add
add
ds
sub
add
add
add
add
or
add
add
add
add
ds
sub
add
add
add
add
or
add
add
add
add
ds
sub
add
add
add
add
or
add
add
add
add
ds
sub
add
add
add
add
or
add
add
add
in
sub
add
add
add
add
or
add
add
add
in
sub
add
add
add
add
or
add
add
add
in
sub
add
add
add
add
or
add
add
add
in
sub
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
add
add
push
add
in
add
add
add
test
push
add
add
in
add
add
add
inc
pop
push
add
add
in
add
add
add
int3
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
mov
add
add
add
add
aas
push
add
add
in
add
add
add
lock
push
add
add
in
add
add
add
adc
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
sub
add
add
add
add
add
add
add
inc
push
add
add
in
add
add
add
xor
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
inc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
xor
xchg
xchg
arpl
mov
sbb
pusha
cmp
mov
addb
hlt
push
jb
inc
sub
ret
and
dec
inc
in
cmpsb
xchg
std
je
jns
push
lea
dec
lret
sub
aas
lea
js
dec
jecxz
and
cwtl
and
into
outsl
pop
sub
inc
lea
xor
imul
add
test
loope
shlb
lahf
fistpl
push
jbe
jne
pusha
je
testb
xchg
outsl
ljmp
data16
data16
and
dec
imul
and
jl
and
cmpsb
fwait
ljmp
into
lods
push
push
dec
jp
mov
cli
icebp
or
ret
sub
fildll
call
add
iret
cmp
leave
or
scas
daa
lcall
gs
inc
jno
cmp
cltd
add
int
or
outsl
imul
xchg
adc
clc
add
mov
and
xorb
sarl
dec
ret
lods
pop
in
loope
repnz
dec
rclb
pop
lea
add
pop
jecxz,pt
adc
and
xchg
mov
cli
push
adc
sub
mov
jns
jmp
mov
mov
push
cmp
inc
xchg
rclb
popf
mov
ds
dec
cmp
push
aam
daa
outsl
cmp
js
pop
xorb
stos
test
dec
pop
jg
jl
jne
sbb
test
cld
inc
sub
jae
cmpl
test
pop
out
jl
cwtl
dec
ret
cmp
xchg
pop
into
sub
leave
jl,pt
shlb
mov
adc
stos
mov
and
faddl
test
xlat
xchg
jge
test
test
data16
push
aas
pop
pop
in
push
orb
jecxz
cmp
push
lret
mov
loope
fsub
xor
loope
mov
mov
jno
and
and
push
mov
or
daa
and
sbb
fdivl
xchg
cltd
data16
jbe
dec
aad
rcll
aaa
cmpsl
cmp
xlat
push
insb
or
mov
and
sbb
sbbb
or
and
fiadds
movsl
jge
push
bound
xchg
shr
mov
fistpl
pushf
bound
out
xchg
xchg
sarb
push
cmpb
js
sub
ljmp
mov
pop
call
mov
inc
cmp
xchg
lahf
mov
mov
je
and
lahf
pop
pop
cltd
rcll
ljmp
jnp
pusha
inc
dec
mov
test
test
cmpsl
pop
push
inc
mov
leave
out
add
cltd
cltd
scas
jg
aam
jmp
cld
pop
sbbb
adc
cmpsl
push
fxam
or
or
pop
and
mov
adc
mov
sbb
jecxz
pop
mov
add
pop
sub
cltd
xlat
add
data16
mov
pop
stos
add
sbb
dec
mov
or
pop
fnsave
inc
and
sub
and
xor
and
inc
scas
mov
cmpsl
fcmovnb
cld
xchg
pop
push
lret
add
outsb
push
mov
es
pop
mov
xchg
sub
shrl
jno
in
xor
call
jp
pop
xchg
xchg
xchg
mov
xchg
sti
fmull
xchg
inc
fsubs
out
adc
movsb
je
cmp
inc
cmp
pop
imul
in
pop
xchg
jne
xor
scas
and
adc
out
mov
mov
mov
mov
popf
aad
sbb
pop
sbb
fidivl
push
mov
loope
js
roll
add
mov
xchg
sti
movsb
xchg
mov
movsl
imul
dec
mov
or
ficomps
push
arpl
das
xchg
pop
xor
pop
js
cmp
pop
test
leave
pop
cld
sbb
loopnew
dec
push
lahf
or
jae
das
pop
in
adc
rcrl
aaa
add
ret
mov
cmpl
xchg
call
adc
pop
and
inc
and
dec
pop
fadd
fisubl
daa
je
cmp
jo
xchg
mov
arpl
mov
mov
jmp
or
dec
mov
cmp
add
sub
or
lret
jne
mov
mov
mov
jle
aad
pusha
jno
mov
aaa
aaa
pop
in
sub
loopne
xlat
cmpsl
out
std
sub
mov
outsl
rcrl
jle,pn
mov
mov
jle
and
push
cmp
test
scas
or
inc
dec
daa
or
pop
jns
scas
push
jbe
pop
sbb
js
fisttpl
out
cmp
pop
jo
das
test
push
mov
pop
push
in
pushf
xor
jge
xor
popf
mov
stos
leave
das
pop
xchg
mov
dec
notl
les
or
sub
inc
orl
push
xor
fsubl
lods
cli
lcall
shll
or
xchg
lret
adc
xlat
or
pop
cmp
jb
mov
dec
dec
mov
cmp
sub
jle
int3
addr16
and
xchg
cmp
inc
sarl
adcb
or
and
enter
mov
lret
sbb
jmp
jp
pop
jmp
pop
ret
cmp
ret
arpl
test
outsb
notb
rcr
pop
xchg
in
mov
in
ficomps
imul
cmp
lret
jb
pop
cmc
and
adc
loop
fcmovb
repz
bound
jbe
lock
inc
je
je
lock
insb
cmp
cld
cmp
sbb
cmp
sub
inc
dec
cmp
cmp
lahf
xchg
and
or
aaa
pop
daa
ret
jl
xorb
jge
push
sahf
and
or
ret
pop
sub
push
repnz
cli
mov
adcb
dec
insb
pushl
mov
or
leave
adc
lock
or
adc
push
sub
jp
fwait
ret
scas
xlat
mov
mov
mov
xor
push
push
add
sub
cmp
loope
dec
in
and
pop
dec
negb
shr
sbbb
jge
jecxz
fwait
sbb
fstl
adc
icebp
pop
sbb
mov
pop
fildl
mov
dec
in
cmp
jo
loopne
int
es
pop
mov
dec
mov
aas
jne
fiaddl
mov
in
aas
mov
lcall
add
jb
imul
repnz
pop
and
mov
push
sbb
mov
testl
pop
in
fldcw
adc
sub
xchg
fwait
test
mov
scas
dec
lret
jle
into
popa
jecxz
rclb
out
mov
jno
fbstp
jle
jno
dec
scas
aad
rcll
xor
cmp
xorb
sahf
data16
xchg
jnp
inc
notl
lods
cmp
jbe
inc
rorb
adc
dec
rcrb
sub
push
mov
nop
mov
rorb
rorl
sti
pop
push
movsb
or
rcl
popf
mov
scas
iret
faddl
push
fildl
movsl
cmc
xor
je
popa
push
inc
das
cmpsb
mov
mov
lods
push
rclb
cmp
dec
mov
je
pop
inc
ljmp
inc
imul
adc
ja
in
mov
js
enter
and
inc
or
mov
faddp
xchg
leave
adcb
inc
and
call
sub
cmp
and
icebp
lds
imul
push
xor
pop
cmp
rcr
shl
cli
sbb
jbe
popa
dec
xor
fldl
xchg
mov
jo
test
push
jge
jno
mov
sarb
xor
cs
add
loopne
pop
mov
inc
and
cld
pop
jnp
dec
shlb
repz
sub
inc
jmp
dec
icebp
in
pop
fstps
push
mov
cmp
mov
sub
jge
icebp
ljmp
pushf
sbb
andl
push
jae
or
je
js
jg
pop
adc
mov
jnp
add
dec
mov
cwtl
mov
push
scas
jp
mov
or
sbb
shlb
loopne
dec
rclb
sub
lahf
cmc
test
mov
orl
in
xchg
xor
xchg
pushf
adc
pop
clc
add
push
scas
lds
sub
movsl
aam
push
lods
push
dec
inc
dec
out
cmp
mov
lods
adc
jns
cmpsl
cld
mov
mov
push
dec
cmp
std
xor
jmp
lret
lods
mov
sbb
add
cwtl
inc
aaa
fwait
jb
shll
into
sub
sub
mov
xchg
add
or
cmp
pushf
xlat
mov
out
push
add
add
movsb
sub
dec
fstps
cmc
testb
xchg
lcall
lock
int3
bound
or
mov
mov
push
add
into
push
sbb
jge
sub
push
mov
sbb
ret
mov
dec
xor
fldenv
dec
mov
imul
lods
imul
repz
pop
in
std
dec
mov
cmp
jno
jg
jb
mov
mov
movsl
mov
cmp
mov
mov
mov
mov
out
imul
sub
arpl
lods
cmp
cmp
jnp
stos
stc
sahf
sbb
pop
mov
cmpsl
sub
in
mov
mov
inc
rorb
pop
inc
cmp
and
jbe
out
mov
cwtl
jo
cli
lds
push
mov
mov
xchg
push
leave
decl
xchg
xor
cmp
ds
int3
popf
test
pusha
ret
sbb
imul
insb
pop
push
sub
xor
popf
mov
dec
rcll
movsb
std
fiaddl
and
cmp
xor
scas
cmp
dec
jge
dec
pop
lret
cltd
jns
adc
cmc
loopne
movsl
cltd
adc
mov
repnz
add
sub
test
outsb
cmp
dec
movsb
sti
cmp
lcall
je
cld
ja
inc
xchg
jae
addl
mov
out
das
pop
sub
dec
inc
lahf
pop
add
outsl
std
loope
outsl
shll
push
or
arpl
out
lcall
jle
stos
sbb
pop
imul
fldcw
pop
jl
sub
test
mov
cmpsl
add
cmp
test
icebp
mov
arpl
cmp
hlt
clc
jne
or
jecxz
mov
sahf
lret
ds
rcrl
cmp
pushw
or
into
iret
xlat
jle
jge
cs
sub
mov
jae
inc
addr16
mov
xor
sub
rep
aas
pop
push
test
scas
push
push
mov
addr16
add
out
mov
pushf
push
sub
scas
fiadds
lock
inc
add
ret
stos
mov
inc
icebp
test
mov
mov
sbb
jns
mov
std
xchg
or
jb
js
fcompl
in
loope
sahf
stc
call
or
int
add
mov
leave
xor
scas
sub
mov
or
xchg
mov
mov
xchg
xchg
add
sub
jae
or
add
ljmp
dec
mov
cli
cmc
pusha
or
and
scas
or
dec
cmc
lret
out
leave
and
pop
adc
vmulps
xchg
test
cmp
iret
sti
call
pop
jmp
adc
imul
or
mov
stos
imul
rclb
cmp
xchg
rorb
shl
jo
dec
popf
int
pop
push
aad
pop
mov
push
int3
dec
add
or
repnz
adc
xchg
loop
int3
mov
mov
ljmp
push
mov
cltd
mov
mov
lods
popf
xchg
loopne
cs
cmc
mov
adc
mov
cmp
mov
mov
inc
sahf
jb
add
pop
pop
mov
stc
in
inc
add
insb
dec
inc
js
into
pop
lret
mov
imul
cmp
and
cld
test
cmp
or
xor
or
add
cmp
xchg
push
jb
icebp
test
fwait
lods
inc
xor
insl
fcmovb
lret
ret
xor
cmc
fstpl
sub
mov
add
aaa
push
sub
xchg
sbb
fcoml
pop
loope
mov
movsb
mov
test
mov
cwtl
pop
lds
mov
sbb
xchg
mov
sbb
call
mov
fisubs
cltd
js
mov
xor
adc
arpl
and
fucomip
aaa
movsl
stos
push
adc
in
xorl
xorb
add
aad
push
xor
test
mov
xor
ja
fwait
and
in
mov
sahf
dec
adc
loope
mov
dec
push
call
push
lds
lods
bound
inc
xchg
pop
cmpsb
xchg
testl
inc
in
repz
test
mov
call
xorb
inc
lcall
ret
pushf
xlat
lock
ja
daa
jecxz
mov
xor
sbb
sti
cld
test
jb
xlat
fnsave
add
mov
push
sbb
enter
or
jle
push
mov
arpl
add
cmp
js
inc
mov
pop
cwtl
push
adc
icebp
mov
jns
jle
mov
sub
pop
add
push
in
sub
pusha
jnp
pop
repz
sahf
gs
cmp
sahf
lock
mull
add
jbe
add
insl
mov
std
data16
lahf
inc
cmp
scas
icebp
mov
xorl
mov
iret
adc
pmullw
repnz
in
cld
jge
aaa
lret
addr16
cmp
xchg
loopne
arpl
push
imul
hlt
sub
lret
loopne
add
cld
fstpt
test
cmp
mov
sahf
xlat
mov
fistps
cmp
pop
ja
pushf
or
cmp
mov
sub
cmp
jns
cmc
fldl
ljmp
stc
outsb
pop
andl
sbb
lock
jno
test
mov
and
xorb
data16
ret
and
pop
mov
sub
in
cli
cltd
iret
jno
repz
mov
xor
add
xchg
shrb
aaa
into
jl
mov
jb
xor
sub
or
adcl
adc
mov
enter
testl
imul
push
loopne
leave
outsb
cmp
mov
jecxz
sahf
mov
sahf
pop
mov
mov
imul
into
xchg
adc
sahf
xchg
scas
adc
out
pusha
test
sub
pop
jp
inc
mov
jmp
jo
adc
sti
daa
out
imul
xor
lahf
insb
pusha
pushf
xchg
sub
loope
mov
push
adc
ds
ja
rorb
pop
lcall
popf
push
lcall
mov
cmpsb
mov
lret
clc
mov
cmp
call
lds
test
loopne
repz
in
out
pop
and
inc
mov
test
fldl
repnz
add
pop
in
lcall
jmp
dec
adcl
aad
imul
inc
cmp
fnstcw
jg
stc
std
sub
mov
je
lcall
testl
xlat
bound
cmp
mov
aaa
pop
mov
into
mov
ljmp
xchg
push
mov
ret
dec
fdivp
mov
aam
jbe
rcrb
adc
jg
mov
or
std
jb
or
jb
lahf
mov
lds
dec
lret
jnp
adc
rclb
jo
xor
push
mov
pop
lcall
mov
mov
dec
dec
gs
push
inc
push
test
je
xchg
notl
fstpl
leave
loope
sarl
pushf
mov
aam
sub
lret
mov
shrl
aaa
or
popa
cmp
jae
adc
pop
xor
cmp
dec
js
cld
insl
test
dec
and
sub
push
sbb
xlat
cmpsl
pop
fsub
bound
dec
xorb
sbb
nop
je
xor
insl
ljmp
xchg
gs
add
add
push
ret
dec
icebp
sub
xchg
xchg
je
xor
xchg
aas
cmp
repz
pop
jl
fimuls
mov
divb
sbb
mov
mov
sub
or
jp
lods
test
scas
xor
mov
movsb
jg
jmp
loope
push
lods
out
mov
sti
stos
std
aas
lahf
lods
jle
mov
sub
iret
push
xchg
xor
dec
mov
inc
inc
popf
adc
adc
lods
cmp
fcoms
xor
pop
xchg
mov
popa
ljmp
xor
std
sub
and
pop
aas
gs
pop
hlt
mov
xchg
sub
fdivrl
pusha
inc
pop
lret
mov
jb
cmc
jns
pop
sub
xchg
pop
pop
lahf
pop
data16
gs
pop
test
js
pop
shrb
pop
dec
lods
mov
int
push
nop
lock
popaw
fcoml
xor
lds
xchg
popw
push
aad
shrl
int
mov
test
jl
pop
jle
sti
arpl
adc
in
insb
xor
add
cmp
push
aam
shlb
lods
xor
les
pop
insb
sub
push
cmpsl
cltd
adc
adc
clc
pop
sub
lret
in
test
out
and
fildl
mov
jmp
dec
pop
sub
push
or
into
push
in
scas
lcall
inc
and
push
sti
push
push
adc
in
pusha
push
cmp
int
in
out
cs
addr16
lret
xorl
jge
jmp
add
push
jno
dec
test
je
mov
cli
sarb
push
orl
cmp
jne
and
ret
mov
cmp
enter
enter
pop
cmp
push
mov
es
clc
sub
cmpsb
outsl
stos
clc
push
mov
lahf
in
pop
outsb
jo
sbb
ja
mov
out
aam
arpl
pop
pop
leave
pop
push
sarl
jae
out
test
push
push
jle
and
jo
ret
xchg
jmp
and
mov
sub
ret
int3
int3
scas
add
sbb
and
and
xchg
test
xor
inc
push
mov
pop
sub
rol
mov
fcmovb
jns
inc
mov
imul
lret
sub
out
rcrb
fwait
sbb
movsl
push
rorl
or
js
jl
aad
xor
cld
add
aas
xchg
sbb
jge
stc
push
mov
jns
lea
iret
inc
adc
iret
nop
xchg
aam
push
pop
adcb
ret
jbe
outsl
adc
sub
pop
sub
inc
push
shll
aam
add
inc
roll
xlat
les
mov
xor
test
jl
in
cmp
mov
adc
dec
call
into
stc
stos
push
leave
in
into
push
in
mov
push
lods
leave
jge
add
xchg
addr16
faddl
and
mov
hlt
cwtl
dec
sub
pusha
sbb
pop
jmp
arpl
bound
xchg
mov
pushl
gs
and
lods
fcmovbe
enter
add
cli
sub
sub
int3
cmp
push
jb
std
jp
mov
dec
sbb
repz
stos
xchg
repz
sub
cmp
jecxz
rol
popa
jnp
pop
pop
xor
cmp
mov
std
call
hlt
dec
scas
imul
adc
fsubr
sarl
mov
adc
inc
mov
sbb
insl
jne
stc
pusha
xor
jg
push
sbb
dec
push
and
out
inc
test
xor
negb
sahf
jge
in
mov
jg
jg
int
inc
movsl
inc
adc
loopne
mov
cmp
and
mov
mov
aaa
repnz
inc
sbb
out
mov
mov
push
aas
add
lea
sub
pop
jmp
mov
push
jge
ret
inc
stos
mov
add
insb
push
pop
fwait
leave
ret
jne
pusha
les
fsubp
xor
jl
fstps
jnp
pop
add
inc
mov
insl
cmp
lcall
scas
xchg
pop
test
nop
out
inc
sahf
in
push
popf
jmp
sbb
mov
mull
xchg
cltd
dec
pushf
adc
cmp
into
out
sbb
sub
lret
sub
out
xor
mov
in
call
jns
in
rcrl
push
jecxz
adc
mov
jb
xor
test
ljmp
adc
imul
mov
andl
sub
or
dec
xchg
pop
lods
aas
jnp
ret
imul
inc
inc
lahf
arpl
ljmp
inc
pop
push
icebp
inc
sbb
je
cmpsl
sbb
cli
push
fnstcw
sub
dec
cmc
push
into
jle
add
inc
insb
popa
mov
fninit
xor
lock
adc
insb
mov
aad
sbb
ss
mov
adc
adc
push
sbbb
inc
test
sbb
aas
pop
push
jmp
scas
test
cmp
jle
jmp
fcmovbe
push
and
xchg
mov
loope
jo
addr16
mov
push
xlat
inc
push
mov
rorl
stos
fisttpll
xchg
and
jp
push
hlt
cwtl
lret
jbe
push
pop
sub
sub
data16
lret
sbb
mov
sbb
lret
std
data16
sbb
jbe
xchg
pop
loop
aas
add
push
fsubrs
gs
data16
xchg
dec
shrl
clc
jl
xchg
cmp
ss
test
sub
mov
mov
pop
lds
pop
xchg
cli
orl
mov
fcomps
out
cmp
insl
inc
fsubrl
cs
mov
push
test
lods
not
daa
fidivl
xor
push
xor
cmpsb
dec
imul
fcomps
out
or
and
fwait
and
cmp
std
or
sbb
and
add
dec
fsubrl
cmp
pop
push
mov
jnp,pn
fdivrs
sarl
jne
mov
lea
adc
inc
arpl
icebp
adc
jle
xchg
pop
lods
or
loop
lret
outsl
sub
or
push
mov
xor
mov
sarb
xor
roll
cli
adc
scas
cld
xor
xor
enter
ror
xchg
inc
subl
pop
out
jbe
or
dec
jle
pop
aam
inc
cmc
andl
sbb
js
jl
daa
pop
xchg
pop
testb
inc
xor
movsb
test
push
mov
sti
xor
mov
or
xchg
addl
sbb
das
jecxz
push
dec
mov
mov
in
xor
iret
or
sbb
add
cli
scas
jo
push
sub
sbb
shll
mov
leave
mov
mov
sub
pop
nop
ljmp
mov
insl
loope
fldt
mov
cmc
leave
cmp
xor
cmc
iret
bound
and
or
inc
movl
ds
mov
xchg
imull
jp
aam
adc
pop
xchg
cs
add
or
bound
adc
movsl
scas
sub
cmp
shll
out
cli
sbb
add
sub
add
testb
pop
cli
and
jle
cld
xchg
je
test
pop
dec
lret
cs
and
inc
insb
cmp
out
adc
daa
pop
lcall
loop
repnz
push
or
push
ljmp
pop
or
fldt
shlb
jg
inc
jle
mov
adc
rclb
sarl
adc
cmpsl
loop
mov
stc
push
xchg
mov
jbe
dec
ljmp
cmpsb
imul
js
lods
fwait
mov
pop
xor
xchg
dec
inc
popf
inc
scas
outsb
inc
fs
stos
pop
out
and
in
mov
or
lret
insl
aad
psrlw
js
cli
cmp
test
jno
mov
pop
lock
out
mov
test
lea
mov
gs
fcompl
addr16
or
inc
clc
repnz
or
jo
dec
mov
jne
inc
or
inc
iret
pop
pop
ficomps
clc
outsb
xchg
add
pop
aam
inc
out
inc
jne
mov
xchg
loop
mov
mov
hlt
mov
cwtl
rorl
shrb
push
ss
mov
test
sbb
sbbl
dec
dec
push
pop
sbb
or
adc
xor
insb
mov
ret
adc
add
pop
notl
popf
mov
sub
repnz
and
dec
jo
sub
out
jle
cmp
nop
ficompl
dec
sub
inc
daa
adc
scas
pop
in
sbb
add
sbbb
ss
fstpl
sub
sbb
sbb
rolb
mov
sub
movsl
mov
jae
sti
push
push
fidivl
pop
xchg
mov
mov
ja
outsb
scas
mov
xor
xchg
inc
mov
jmp
pop
mov
popa
lret
ds
xchg
and
xchg
shrl
push
add
out
jmp
jecxz
adc
jno
push
jae
imul
outsb
dec
mov
into
std
mov
sub
cltd
ret
test
add
and
adc
or
adc
mov
cmpsb
add
pop
leave
jle
push
pop
jbe
fnstenv
mov
jne
out
psrld
out
inc
mov
jl
inc
sub
cmp
jns
loopne
sub
push
xchg
int
and
fstp
xlat
jmp
sbb
dec
cmp
iret
mov
minps
repnz
mov
mov
add
scas
mov
int
and
call
jae
jp
mov
test
es
push
pop
push
or
stc
sub
sub
leave
bnd
shrl
xlat
ret
push
test
cmp
stc
mov
lods
lods
icebp
repz
out
daa
jl
jae
movsl
mov
mov
iret
push
sub
xor
outsb
fimull
pop
out
or
jmp
push
sarb
mov
sub
add
fs
push
clc
pop
icebp
movsb
leave
mov
js
cmpsb
sbb
test
int
push
jb
arpl
icebp
pop
je
and
xchg
jae
aas
popf
scas
xchg
xor
out
cmc
add
arpl
sub
lret
pop
bound
cmp
push
pusha
ss
lcall
mov
xor
addr16
add
jnp
cs
mov
xlat
pop
cli
xchg
int
inc
add
inc
out
arpl
nop
into
xchg
push
pop
aad
mov
notb
fisttpll
inc
jns
sahf
rol
xor
cld
lret
cwtl
out
cmc
test
or
add
out
xor
cmpsb
push
push
mov
js
push
add
mov
ffree
out
daa
xchg
cmpsb
xor
in
sahf
test
stos
mov
xchg
imul
fdivrs
pop
shlb
pop
in
divb
sub
leave
mov
add
push
cli
jb
js
les
mov
scas
leave
adc
cwtl
fs
stos
pusha
push
sti
sub
out
push
pushf
jb
xchg
jle
push
int3
imul
arpl
add
push
xchg
cmp
call
push
mov
mov
cmp
add
or
jle
mov
xlat
lds
cmp
js
push
mov
dec
or
or
inc
jmp
and
sub
int
push
push
push
cmp
bound
icebp
jnp
test
and
xor
clc
or
es
stc
push
fnstsw
in
xchg
mov
lods
sub
or
popf
adc
stc
xchg
lret
mov
in
mov
mov
sbb
fs
jnp
cld
faddl
mov
xchg
in
push
es
cld
jnp
or
mov
testb
push
push
or
xor
pop
bound
mov
iret
stos
inc
jne
mov
pop
dec
lret
inc
jno
shrl
adc
in
test
stc
xor
fistps
je
mov
fwait
xchg
jne
sub
sub
sbb
test
xchg
daa
pop
jae
inc
dec
push
movsb
add
mov
stc
or
std
cmp
xchg
out
aad
mov
push
sbb
test
mov
xor
lahf
pmaxub
dec
lods
movl
push
jge
or
mov
inc
or
pop
mov
les
mov
mov
sarl
popf
out
roll
and
lods
add
sbb
cs
mov
movsb
dec
nop
and
adc
sub
clc
cwtl
aas
roll
xchg
shlb
add
in
fbld
pop
dec
sbb
dec
jo
mov
sub
sbb
in
adc
dec
adc
into
mov
mov
jl
jecxz
dec
push
stc
call
testb
mov
xor
or
sub
cwtl
dec
mov
mov
mov
sub
rcll
jle
dec
insl
jmp
add
mov
lret
cld
sarb
cli
push
jle
std
jle
push
lahf
enter
add
rcrb
inc
dec
xor
pop
lahf
in
mov
out
cwtl
sbb
mov
xor
inc
and
dec
ret
mov
and
rcrb
add
bound
aad
ljmp
sbb
xor
xchg
jg
shlb
idiv
jg
cltd
push
in
leave
add
jp
out
and
and
adc
fiaddl
mov
stos
dec
repnz
jecxz
xor
adc
mov
iret
lea
push
push
xor
clc
imul
inc
or
mov
pushf
pop
mov
jo
imul
cltd
xor
adc
jge
fadds
shll
shl
repz
subl
data16
imul
add
and
insl
femms
das
cmp
push
push
mov
imul
mov
push
test
bnd
ja
out
testl
mov
imul
and
outsl
sub
fs
repz
or
lret
push
cli
std
sbb
mov
xchg
popf
lods
sub
push
xor
mov
pop
dec
add
int
aaa
pop
adc
adc
nop
sbb
add
pop
adc
dec
loop
and
std
icebp
mov
sarl
dec
inc
mov
stc
addb
inc
test
stos
in
adc
lret
into
xor
mov
popa
ret
lahf
pop
push
cmp
lcall
and
mov
push
inc
lds
leave
mov
and
mov
hlt
arpl
repz
add
not
outsl
pop
add
mov
mov
lds
push
sahf
jg
sahf
pop
cli
mov
not
ljmp
dec
sarl
xchg
xor
pop
into
jae
jg,pt
les
out
inc
dec
or
xchg
jns
push
cmp
int
jle
test
fcomps
cmp
sti
pop
add
and
into
dec
dec
sbb
push
ret
lret
ja
jl
sbb
mov
pop
int3
pop
pop
sub
add
pop
movsb
shlb
sub
mov
test
aad
push
out
mov
pop
lock
mov
scas
cli
adc
ret
cs
adc
xchg
test
je
pop
inc
adc
push
iret
andb
inc
sbb
jle
divl
cmp
pusha
pop
mov
and
popf
add
mov
sahf
mov
sbb
jno
idivb
or
ja
adc
shll
scas
loope
sbb
xchg
outsb
mov
cld
bound
xchg
pop
sub
mov
popa
lods
les
ss
pop
inc
ds
cltd
movsl
into
xor
xchg
test
mov
push
mov
mov
mov
xchg
cwtl
lds
or
clc
js
aad
pusha
lds
push
cmpsl
jnp
mov
les
call
outsb
sub
cmpsl
lret
sbb
lret
les
leave
testb
jg
and
stc
lock
push
test
xchg
test
dec
pop
cvttps2pi
popf
shlb
dec
xlat
adc
mov
lock
int3
sub
pop
cs
jp
mov
fcmove
jb
dec
or
iret
je
fs
and
into
inc
xor
popa
xor
in
jno
repnz
rcrl
or
pop
push
fdivrs
mov
inc
adc
out
repz
cmpsl
push
movsl
iret
data16
aad
dec
adc
lret
mov
out
and
outsb
pop
stos
paddsb
fnstsw
push
icebp
adc
xchg
in
sbb
call
pop
sahf
mov
push
fsubl
lea
and
or
pushf
mov
xchg
push
mov
fnstsw
insl
mov
jp
fcompl
xchg
out
adc
dec
mov
call
push
sahf
daa
adc
repz
push
and
add
andl
jle
mov
insb
push
push
inc
and
enter
mov
inc
std
inc
mov
jne
inc
mov
mov
inc
roll
sub
loop
dec
mov
xor
jb
fadds
movsb
out
std
call
popa
pop
adc
lcall
jo
inc
pop
arpl
aam
pop
and
pop
lret
xchg
cli
pop
cmp
cmp
int3
adc
fidivrs
inc
je
inc
mov
mov
sub
sub
sbb
insb
jb
arpl
in
xor
xor
lods
cld
push
cwtl
dec
inc
mov
push
cmpb
pop
push
mov
repnz
mov
outsl
imul
mov
mov
in
mov
mov
mov
loopne
sub
xor
fisubs
andl
adc
es
dec
sub
mov
jae
inc
or
add
and
push
aas
popf
aam
or
enter
cli
and
int
mov
shr
lds
outsb
je
sbb
or
lcall
push
jg
lock
arpl
std
cld
ds
inc
push
imul
add
lods
pop
xor
andb
stos
cwtl
je
and
xor
mov
pop
dec
mov
jb
lret
jb
mov
and
push
movsl
or
data16
push
lock
aam
dec
pop
lahf
sub
les
or
dec
cmp
mov
popf
mov
sar
bound
cmp
sti
sbb
ret
sbb
shlb
or
imul
lock
js
xor
aas
lods
jecxz
mov
flds
cmpsb
push
pop
add
jnp
cmpsl
pop
aas
lock
pushf
xchg
inc
insb
dec
jo
jae
add
xor
pop
fimuls
mov
xchg
and
andl
add
sbb
mov
xchg
mov
sbb
jmp
or
sbb
xchg
cmpl
repz
out
hlt
test
stos
jle
xchg
rcll
push
roll
repnz
pop
sub
xchg
mov
out
sbb
xor
push
fidivl
and
stc
orb
mov
xor
pop
icebp
or
pop
ds
cmpps
nop
outsb
mov
pop
in
stos
cmpl
out
mov
add
inc
lret
hlt
subl
xor
dec
mov
add
popa
lret
inc
addr16
out
imul
jne
jno
ss
xor
and
pop
addb
adc
add
out
in
and
mov
gs
lret
in
fcoms
repnz
dec
inc
jo
xchg
mov
pop
loopne
pop
xchg
inc
push
xchg
fdiv
fbld
jbe
xor
xor
xor
movsl
xor
jbe
les
pop
jo
ud2
dec
adc
lods
in
and
mov
mov
lahf
xchg
mov
into
push
sbb
push
call
mov
inc
gs
popa
jmp
add
sbb
xor
divb
out
fs
and
jb
aad
lods
xor
jecxz
mov
dec
mov
fcoms
fcmovnb
push
scas
add
sub
add
popf
pop
fildll
dec
inc
mov
cmc
dec
xchg
pop
std
xor
sbb
stos
xchg
loope
ucomiss
out
mov
mov
shlb
lock
pop
fidivl
sti
out
or
jecxz
and
sti
mov
inc
or
dec
rcl
jne
pop
fiadds
jo
cmovge
cmp
enter
xchg
jmp
xor
sbb
fdivrs
or
or
and
cmp
push
lods
mov
mov
shufps
dec
push
push
push
pop
lods
faddl
sbb
cmp
mov
sbb
sub
xchg
add
and
sub
in
push
scas
cmpsl
mov
lods
ljmp
inc
in
stc
outsb
test
cld
in
push
sahf
mov
cmpsb
jmp
adc
and
mov
std
popa
orl
dec
xchg
inc
loop
insb
mov
mov
cmpsl
xchg
inc
xchg
xchg
xchg
pop
hlt
mov
mov
rcl
fwait
push
pusha
or
mov
xchg
xchg
sub
out
push
mov
sub
or
and
jae
xchg
stos
out
mov
xchg
dec
pop
loope
xchg
xor
add
arpl
jge
imul
ror
scas
dec
icebp
jbe
lds
xchg
add
dec
push
xor
adc
sbb
and
inc
mov
mov
les
insl
xor
sbb
mov
insb
push
sub
jne
lods
mov
cmc
or
jbe
adc
out
xlat
mov
frstpm(287
sub
dec
rcll
cmp
cmpsl
int3
sub
sahf
jge
lret
jbe
ja
arpl
je
pop
xchg
mov
cmp
and
call
xchg
add
adc
mov
sbb
push
dec
or
mov
lcall
loopne
dec
std
loop
jecxz
push
mov
insl
cmp
lahf
insb
jne
sub
les
jmp
push
jmp
push
cwtl
sbb
and
out
shr
cmpsl
ljmp
dec
mov
mov
test
xor
xchg
add
lea
addr16
mov
ss
out
data16
outsl
jp
shlb
dec
popf
iret
jl
or
add
jle
xchg
mov
jae
aam
push
outsb
cmp
sahf
testl
lods
add
dec
xor
xchg
std
push
xor
pop
pop
xchg
scas
out
call
rorb
leave
sbb
sub
mov
push
bound
and
mov
xor
jns
and
pusha
int
push
lods
orb
push
mov
pop
sub
jp
xchg
push
xchg
sahf
das
inc
mov
imul
mov
shll
addr16
adc
push
and
mov
imul
insl
shlb
loope
mov
enter
inc
add
xorb
mov
cwtl
sbb
xchg
dec
mov
loope
cli
nop
xchg
cmp
add
movsb
xor
pop
xlat
or
clc
inc
mov
adc
mov
jmp
push
mov
lret
pop
ret
xchg
repz
loope
lret
cwtl
jns
sbbb
in
iret
jo
push
ja
out
mov
pop
and
mov
repnz
jmp
xor
data16
rcrl
jmp
xor
push
loope
leave
inc
stos
sbb
iret
push
jne
hlt
mov
ret
cmp
xchg
and
lods
repnz
out
dec
cmp
mov
sub
or
xor
mov
or
jae
dec
fistpl
ret
sub
lock
lods
and
daa
or
and
pop
mov
ror
jmp
push
mov
pop
jne
aaa
xchg
int3
hlt
mov
pop
clc
mov
mov
or
push
sbb
inc
scas
dec
or
outsb
mov
daa
stc
fidivl
int3
fadd
js
xor
mov
test
pusha
sub
adc
pop
rcr
add
add
jnp
jecxz
mov
push
mov
sti
ja
cmp
add
dec
cmp
fadds
addr16
jl
cmp
pop
bound
je
adc
adc
and
mov
inc
dec
jg
int3
clc
ja
jl
test
mov
fmuls
sub
mov
mov
pop
jo
mov
js
add
bound
mov
push
push
sub
and
movsl
adc
lret
fnsaves
mov
sbbl
add
fldenv
sbb
sarb
clc
je
mov
loop
xchg
loope
fwait
adc
in
sbb
gs
or
add
inc
add
add
les
dec
adc
jno
mov
sub
cld
jns
aad
into
int
mov
sub
lods
dec
loopw
push
add
aad
push
xchg
cmc
inc
mov
out
aas
ret
push
inc
cmp
or
add
fcomps
push
mov
or
inc
inc
andb
cltd
imul
adc
mov
jns
hlt
push
jge
test
mov
imul
aad
orl
cmp
fidivrs
xchg
jg
dec
pop
call
lahf
bound
xchg
push
inc
jl
mov
fists
shlb
pusha
mov
mov
jle
pop
mov
movb
xchg
cwtl
jle
lret
jo
mov
mov
pop
fstl
add
and
sub
arpl
imul
aad
ret
xchg
int
and
or
pop
into
add
cs
or
jl
cmp
scas
fbstp
jle
sbb
add
out
fneni(8087
aam
xchg
sbb
sub
xchg
out
jnp
insb
bound
cmpsb
jmp
jmp
insl
rorl
popa
push
cmpsb
or
clc
leave
movsl
or
int3
cwtl
subb
jae,pt
xchg
in
push
je
cmp
addr16
mov
cmp
push
mov
aaa
push
test
xor
inc
xorl
or
lcall
and
push
pop
imul
jo
sbb
jns
std
mov
filds
test
ret
xor
fstpt
cmc
insl
push
inc
lods
in
push
sub
add
gs
out
es
cmpsb
aaa
clc
adc
paddq
fnstsw
ja
mov
xor
cmpsl
rorb
jmp
xor
pop
and
sbb
lods
negl
imul
xor
mov
pop
xlat
js
jl
cmpsb
xchg
daa
dec
sbb
hlt
sub
pop
cmpsl
movsl
sub
add
std
ret
push
popa
pushf
cltd
repz
push
into
mov
pushf
xor
rolb
jno
lds
stos
sub
inc
scas
push
clc
inc
cmp
bswap
fadds
insl
sbbb
aam
push
xor
jl
arpl
cmpsb
out
jo
pop
aas
daa
push
cmp
sti
and
sbb
loope
adc
mov
enter
imulb
fs
in
cld
dec
pop
sbb
xor
dec
dec
imul
mov
cmp
xchg
dec
sbbl
insb
inc
sti
mov
xchg
int3
adc
lahf
sub
mov
imul
cmp
xchg
cld
or
add
lcall
sbb
dec
xchg
adc
sbb
mov
fdivrs
jnp
jle
pushf
fidivrl
push
sahf
mov
sahf
out
mov
mov
mov
mov
mov
push
aaa
adc
add
mov
popf
scas
xchg
aaa
popf
push
xlat
sub
xor
jl
ret
mov
ljmp
cwtl
outsl
in
sbb
fidivs
pop
gs
cmp
lods
adc
cmp
rolb
add
loopne
cmpsb
mov
xchg
leave
rolb
lods
rol
dec
push
pop
call
mov
jmp
xchg
test
mov
sub
rorl
cli
pusha
jno
xor
lods
fldl
test
sub
sbbb
push
out
bound
ret
sarl
out
ficomps
out
nop
pslld
mov
js
leave
cmp
dec
subl
or
aaa
mov
aam
mov
cltd
ja
ljmp
repz
cwtl
mov
imul
cwtl
popf
sub
sub
sub
loopne
inc
inc
jne
sbb
adc
push
dec
xchg
out
cs
jae
fcmovnbe
sub
enter
jb
aas
stos
xor
leave
in
imul
lock
sbb
inc
push
data16
push
mov
pop
mov
mov
or
into
sub
rcrl
cmp
cmp
mov
bound
add
cli
cli
imul
nop
dec
lods
mov
or
jae
enter
shr
mov
xchg
jae
popf
push
xchg
divl
dec
jne
sbb
mov
ds
ss
jecxz
or
mov
xor
mov
int
sbb
rorl
test
fcomps
cmp
and
ret
ss
shlb
push
repz
orl
ds
subl
xor
ja
divb
add
sub
insl
leave
fstpl
xor
lds
sub
mov
push
ficoms
push
pop
lods
xchg
icebp
loopne
add
pop
jmp
cmp
mov
sbb
dec
jg
inc
ret
sub
xor
and
dec
out
in
les
jecxz
call
jae
inc
push
sahf
mov
push
and
fwait
push
adc
inc
pop
push
push
out
or
sub
sbb
test
inc
mov
jl
cmp
xor
sbb
xor
pop
cli
pop
or
cmpsl
jmp
dec
in
inc
test
outsl
in
adc
or
pop
lods
dec
sbb
in
and
dec
adc
daa
dec
jno
and
inc
jno
test
pusha
mov
test
hlt
adcb
pop
jnp
dec
xor
aad
adcl
cmp
sbb
repz
push
pop
push
mov
sbb
xorl
lret
mov
jg
mov
push
xchg
jno
adc
out
cmp
mov
sbb
cli
sub
orb
jge
pop
push
pop
xor
movsb
rclb
repz
orl
and
icebp
inc
sahf
pop
sahf
mov
mov
ljmp
cltd
in
inc
fists
insl
adc
clc
or
or
ret
stos
adcl
sub
cmp
lock
inc
hlt
divl
ljmp
adc
inc
pop
mov
scas
pop
jmp
mov
xchg
mov
pop
mov
mov
pop
mov
fs
int
movsb
sar
cltd
add
test
arpl
pop
lcall
xchg
jecxz
in
sbb
sub
stos
imulb
call
push
and
cmc
ljmp
lods
pop
ss
scas
or
idivb
and
test
xor
inc
fisubrs
inc
mov
inc
icebp
lcall
rorb
cwtl
adc
dec
outsl
dec
je
test
adcb
ljmp
xchg
or
push
cmp
push
xchg
repz
push
sbb
in
outsb
lods
jl
mov
fstpl
repz
gs
push
out
outsl
mov
cmpl
adc
xor
std
jmp
mov
pop
mov
pop
mov
sbb
ja
idiv
push
repnz
jbe
push
jl
ds
fnsave
push
mov
inc
sbb
pop
outsb
imul
cld
icebp
fisubl
cmpsl
xchg
or
jb
decl
movsl
into
bnd
or
cld
pop
and
sub
cli
mov
mov
test
adc
inc
pop
push
call
in
out
add
jge
shrl
sub
insb
ja
arpl
and
testb
inc
pop
sub
pop
mov
xor
mov
jb
adc
mov
sti
xor
pop
inc
sbb
mov
inc
xchg
cld
adc
cmp
fst
xor
sbb
xchg
fiaddl
jecxz
pusha
mov
dec
aaa
scas
outsb
rcrl
jmp
icebp
fstp
pop
pop
mov
jp
loope
cmp
sahf
scas
lahf
enter
movb
mov
xor
testl
outsl
leave
and
call
std
adc
call
and
mov
mov
ret
mov
ret
mov
sub
cmp
mov
leave
bound
pop
dec
sub
or
sub
jg
jle
popf
in
jnp
scas
and
and
jnp
je
ret
aad
nop
movsl
mov
or
iret
mov
add
std
pop
sarl
and
sbb
movaps
add
dec
pusha
cwtl
pushf
test
or
mov
dec
pop
adc
jo
notl
jno
cmp
sbb
xor
rcll
jae
xor
and
sahf
std
shr
mov
je
repnz
xor
mov
cmp
push
mov
sahf
aam
imul
outsl
das
xor
es
jmp
cmp
mov
xor
aad
and
inc
jecxz
jno
imul
cmc
in
sub
es
enter
imul
aam
xchg
outsb
pushf
mov
mov
dec
ret
notb
fiaddl
mov
pop
cmp
sarl
test
mov
mov
push
or
xor
sub
jmp
adcl
jb
adc
add
lds
pop
and
aam
addb
cmp
jge
push
jle
sub
sub
fisttpl
pop
ror
push
lock
scas
mov
push
imul
jmp
lods
int3
roll
dec
popa
hlt
enter
jae
add
call
jmp
enter
int3
cmp
rolb
cmp
fadd
call
movaps
rcrb
add
push
adc
insl
mov
aas
or
jge
mov
push
or
rclb
repnz
aam
adc
xchg
cmpsl
adc
dec
shl
xor
add
repnz
cmc
int3
sub
cmp
mov
loope
pop
fwait
ret
pop
jle
or
mov
imul
mov
jno
pusha
mov
add
dec
subb
cmp
sbb
pop
stc
pop
mov
push
das
movsb
call
cltd
fldenv
das
repnz
jmp
cmp
es
sub
inc
testl
add
ljmp
jg
fstpt
sub
sub
and
aad
mov
mov
shlb
pop
mov
and
push
ja
adc
pushf
ret
es
push
lods
stc
mov
pusha
test
out
ficompl
gs
dec
arpl
mov
jmp
negb
lds
lahf
cld
out
scas
push
mov
mov
jb
jmp
xchg
lahf
repz
nop
push
xor
test
cmp
or
daa
pop
aas
clc
fdiv
and
rolb
sbb
or
add
cmp
shr
les
pop
pop
mov
mov
addr16
adc
aam
bound
call
inc
popa
lds
cmc
mov
cmp
in
push
ficoms
in
icebp
adc
pop
in
lahf
fnsave
jmp
xchg
fisubl
mov
lea
nop
cmp
out
fdivrl
xor
icebp
test
xchg
xchg
test
and
dec
outsb
or
ds
mov
inc
ds
adc
dec
xor
insl
hlt
jne
cmp
dec
xor
xor
mov
jge
mov
rcr
lcall
sbb
repz
aaa
mov
mov
aas
sub
pop
push
pop
and
call
and
mov
inc
jb
xor
dec
xor
lods
sti
xor
test
adc
add
xchg
orl
mov
out
and
out
cmp
pop
mov
push
lock
mov
lods
std
dec
pusha
testb
lods
add
and
and
mov
xchg
adcl
incl
xor
rcl
adc
ss
pushw
jl
shll
add
add
loop
aam
les
mov
mov
in
lea
push
arpl
adc
xor
jnp
mov
jle
xor
fxam
dec
push
daa
rol
lcall
mov
push
sbb
or
push
orb
lods
out
inc
add
add
and
mov
stos
or
imul
xchg
sbb
add
mov
mov
mov
addr16
in
fbld
cmc
pop
mov
mov
or
loop
loopne
je
push
aam
scas
orl
call
push
popa
in
mov
addb
aad
mov
push
cwtl
inc
xor
mov
push
stos
jo
rorl
sbb
sub
cmpsb
lea
sbb
pop
insl
jl
xchg
fs
xor
in
mov
mov
or
mov
imul
addr16
mov
sbb
or
xor
in
into
les
jp
or
cli
add
mov
push
repnz
push
xor
popa
jno
mov
cld
rcll
xchg
sbb
arpl
push
and
sub
xchg
jl
punpcklbw
imul
fcoml
leave
js
adc
inc
jp
dec
testl
cli
xorb
insl
cmp
leave
clc
lods
jl
es
dec
jge
adc
rclb
outsl
shrb
cmp
fldenv
rorb
ljmp
inc
push
les
push
jle
mov
mov
cmp
adc
gs
mov
lods
repz
mov
les
mov
rolb
jo
lods
fistpll
test
sbb
xor
lret
pop
cmp
mov
pushf
leave
fisubl
sbb
dec
loop
addb
or
xchg
jmp
fsubrl
cwtl
push
xchg
lods
xor
stos
jnp
push
pop
mov
data16
mov
add
mov
pop
filds
dec
or
jbe
add
cmpsl
je
out
mov
pusha
add
cli
mov
lret
mov
addb
fidivrl
call
cli
xorb
xor
adc
sub
jge
jne
adc
hlt
les
repz
stc
mov
inc
mov
std
fcmove
dec
pop
cli
add
dec
aas
ror
or
pop
dec
push
mov
scas
jo
pop
aad
pop
push
mov
jmp
rcr
jmp
sar
push
sbb
xchg
lock
shll
cmp
jnp
sub
mov
stc
cld
jp
lcall
shrl
push
pop
movsb
jb
dec
das
addr16
sbb
mov
in
or
addr16
push
aad
adcl
sbb
adc
lds
push
pushf
and
hlt
addr16
fdivs
push
aaa
xor
pop
cli
dec
push
data16
in
testl
cmp
clc
fistps
xlat
xchg
ss
adc
sub
xor
clc
jg
and
push
xchg
or
jbe
pop
adc
dec
dec
push
and
ljmp
mov
cs
jbe
jo
in
and
daa
stc
ljmp
pop
pusha
daa
jnp
in
mov
push
push
cmpsl
imul
adc
sub
xor
sahf
mov
cmp
push
bound
lock
sub
ror
dec
xor
movsl
jmp
sti
gs
dec
adc
cmp
aam
push
stos
pop
enter
ret
sti
mov
nop
enter
add
lret
cmp
push
mov
inc
stos
ret
and
ds
adc
sub
sbbb
jp
mov
les
push
jo
or
jecxz
jmp
sub
out
in
pop
xchg
mov
loop
cli
cmc
shlb
cli
mov
test
adc
outsl
sub
imul
sti
fs
mov
lods
mov
outsb
sub
dec
loop
jno
imul
inc
and
dec
cmp
pop
fidivl
icebp
popf
pop
xchg
lds
or
movb
sahf
movb
inc
sub
inc
lret
out
xor
and
dec
cmp
je
jp
push
ljmp
insl
fistpl
xor
pop
cltd
mov
out
movsb
or
cmp
fsubl
jns
les
fcoms
loopne
aad
jge
mov
test
cmp
mov
push
repnz
enter
xorl
lock
dec
jbe
mov
andl
mov
fsubrs
addr16
or
xchg
cmp
and
das
or
lret
aad
ds
movsb
aaa
sub
fcompl
mov
pop
mov
aaa
mov
std
cmpsl
or
mov
rorl
andb
fsubs
mov
mov
cli
ja
mov
add
xor
or
jmp
loopne
pop
movsb
into
das
cmp
dec
ds
cmp
fadd
mov
inc
dec
aas
add
cmc
ret
add
shl
lret
pop
inc
mov
mov
inc
pusha
xchg
lret
mov
cltd
cmp
mov
ja
insb
inc
sub
es
inc
inc
clc
aas
pop
cmpsb
insb
insl
mov
push
fists
mov
aaa
fildll
mov
add
inc
jmp
out
cmpsb
xchg
jae
and
divl
push
adc
or
jge
lods
fmulp
fwait
cs
adcl
cmp
es
mov
xor
lcall
popa
xor
test
ljmp
or
inc
fcmovnbe
in
out
push
sbb
jbe
push
clts
push
clc
je
dec
mov
les
jle
lcall
fwait
mov
imul
out
jl
faddl
xchg
inc
and
push
addr16
add
das
jno
outsl
out
insb
mov
and
scas
test
cltd
xchg
pop
xor
mov
dec
ds
cli
or
push
cmp
xchg
mov
mov
je
sahf
adc
divb
cmc
cmp
sbb
incb
cmpl
sub
fs
add
xchg
loope
pop
cmpsl
pop
aaa
push
xor
add
shl
sbb
add
lahf
outsl
sub
dec
jmp
and
ss
xor
int3
in
and
outsb
addr16
lea
mov
lea
xchg
adc
or
shlb
testb
pop
mov
inc
lods
adc
in
adc
adc
mov
notl
dec
cli
jecxz
js
mov
dec
push
int
dec
mov
and
xor
loope
cvtps2pi
movsl
ret
dec
popf
cmp
xor
insl
xor
outsl
push
lcall
xlat
popf
sub
dec
ret
xchg
shr
pushf
in
out
xchg
jle
jl
daa
lcall
sbb
inc
test
push
push
xchg
notb
jbe
cltd
and
outsb
push
sub
leave
test
mov
cmc
mov
lret
xchg
and
mov
pop
pop
lds
repnz
mov
cmp
mov
or
xor
lds
push
ret
pop
adc
dec
add
inc
cmp
movsb
fiaddl
add
shlb
inc
inc
or
testl
mov
mov
aas
sarl
les
inc
insl
push
xor
cmpsb
mov
outsl
nop
sub
jl
push
outsb
hlt
movsb
pop
int
push
lcall
and
pop
sbb
xor
add
jecxz
jo
lahf
add
icebp
mov
mov
pushf
es
xchg
push
xchg
test
aas
dec
roll
xchg
sbb
out
fucom
push
push
imul
popl
inc
nop
es
outsb
inc
inc
scas
mov
mov
test
cmpsb
push
int3
int
add
out
push
pop
dec
push
dec
mov
repz
mov
cli
xchg
jo
adc
push
push
shlb
sahf
fmull
loope
add
cmpsl
loope
push
adc
mov
es
cmc
mov
pop
pop
outsb
ror
xor
aas
lret
imul
pop
lahf
inc
lcall
mov
adc
or
lahf
les
lods
stos
inc
pop
mov
pop
pop
xchg
mov
and
cs
push
pop
or
mov
fxch
insb
add
mov
lds
mov
xchg
mov
inc
add
call
push
lcall
or
lds
jnp
push
add
ljmp
arpl
jp
pop
loope
mov
xchg
cmp
dec
xchg
jns
pop
mov
push
cmp
or
outsb
nop
shlb
stos
test
cli
insb
fimull
roll
outsb
pop
loope
out
mov
ds
dec
lods
in
mov
dec
mov
sbb
add
sub
xchg
xchg
gs
stos
pop
lahf
add
dec
es
cmp
jp
adc
mov
jne
sti
sbb
aad
push
fdivl
iret
leave
adc
popf
adc
sarb
push
je
mov
jmp
ja
pop
or
out
push
dec
and
jmp
adc
movsb
xchg
scas
sub
mov
jo
cmovp
mov
xchg
cmp
jns
clc
lahf
fidivrl
cli
push
fstps
fildll
testl
inc
cli
xchg
mov
dec
fisttpll
ficoml
mov
outsl
data16
cltd
ret
fsubl
std
add
js
out
jb
xchg
jne
push
lret
or
mov
pop
fcomps
test
cmp
or
adc
push
test
jnp
push
aaa
mov
jp
outsb
mov
jnp
xor
inc
loop
ret
aam
bound
mov
daa
into
jle
inc
xchg
pop
add
aad
mov
or
inc
push
mov
out
xor
or
rclb
dec
jp
pop
jecxz
or
outsl
dec
gs
adc
in
xchg
push
push
push
cmpl
pop
leave
outsb
jecxz
addr16
out
adc
and
nop
mov
pop
add
dec
push
xchg
pop
dec
pop
jbe
fs
mov
xchg
sbb
xor
or
mov
loop
pop
idivb
ljmp
enter
jmp
out
push
in
push
dec
sub
push
or
jp
test
int
call
mov
lret
or
sub
sub
jae
sub
pop
or
subl
imul
mov
pushf
jo
repz
adc
incb
mov
and
adc
rdpmc
repz
jnp
mov
jae
cmpsb
jmp
mov
fiaddl
fisttps
or
mov
scas
pop
sbb
cmp
jne
xor
pop
dec
std
fsubrl
push
jmp
xor
push
lods
sub
jbe
fwait
lea
xor
imul
mov
jg
xchg
inc
pop
sbb
jge
add
sbb
dec
in
add
hlt
xorb
cmpsl
adc
cmpsb
mov
mov
push
in
or
cmc
mov
xchg
push
jmp
add
outsb
dec
fiadds
jecxz
sub
aas
and
insb
jbe
or
repnz
fisubrl
es
push
and
enter
adc
pop
out
sub
imul
lcall
mov
nop
mov
test
jp
stc
jns
lcall
dec
lret
mov
stc
and
adc
cmc
loopne
jno
jp
rcrb
daa
repz
cld
mov
rolb
pop
jle
ljmp
sub
xchg
inc
push
inc
sbb
xchg
roll
dec
cmp
aas
nop
mov
jb
addr16
outsl
bound
scas
inc
cmp
xchg
add
aas
mov
into
rcr
pop
fsubrp
mov
in
lret
cmp
out
sub
inc
faddp
pop
fists
cmc
pop
pop
cmpsb
add
sbb
xor
push
sub
mov
mov
inc
and
int
movsl
lods
pop
test
adc
test
xchg
xchg
fsubl
and
outsb
pop
xchg
inc
jo
iret
dec
mov
stos
icebp
repz
data16
lock
clc
outsb
adc
mov
fisttpl
loope
in
mov
out
inc
aad
cmp
pop
push
jb
cmp
test
sbb
jge
cmp
dec
movsl
cmpl
arpl
lods
pop
mov
cmp
stc
test
pop
mov
fs
adc
or
js
inc
lea
daa
mov
push
in
fistl
cmpsb
pusha
add
pop
cmp
mov
lea
dec
xor
mov
mov
cld
leave
xchg
cmp
fldcw
jnp
push
inc
jle
dec
shll
and
repnz
xchg
scas
sub
push
push
insb
xchg
inc
lcall
fcoml
inc
lods
scas
push
push
mov
imul
je
pop
add
and
cmpsl
jmp
addb
pop
jecxz
jmp
xor
mov
or
scas
fwait
xchg
dec
stos
int3
rcrl
pop
sar
in
outsb
jns
or
adcl
jb
xlat
lock
icebp
fdiv
push
jl
cmp
outsb
inc
leave
mov
je
testb
test
aaa
outsb
sbb
inc
iret
js
aaa
pop
test
pop
push
daa
aaa
inc
adc
cmpl
dec
std
int
or
int3
jmp
mov
xor
in
cmp
xchg
xor
dec
pop
jecxz
xchg
pop
dec
jae
pop
cs
sbb
lds
mov
fimull
jmp
or
push
cmp
push
inc
add
sub
lods
mov
xchg
repz
incb
cmp
xchg
popa
cmpsl
arpl
adc
insb
push
cld
out
add
dec
xchg
inc
sbb
js
jne
loop
inc
out
sub
leave
mov
mov
push
stos
push
mov
xchg
sbb
ss
ljmp
inc
dec
inc
inc
in
mov
mov
dec
sbb
arpl
pop
test
aad
mov
rcrb
rclb
push
jae
insb
mov
aam
shlb
test
push
and
mov
cmp
mov
sbbb
dec
mov
sti
dec
shrl
push
cmc
cs
mov
in
sti
pop
int
lret
jmp
imul
add
add
adcb
fnstsw
in
shll
fdivl
adcb
test
mov
mov
xchg
mov
or
nop
and
aam
sbb
shll
bound
mov
or
or
sbb
in
mov
rcrb
test
ja
sti
out
aam
test
mov
adc
cmp
adc
test
fdivl
cmp
imull
adc
lock
subl
push
dec
or
adc
and
out
int
jge
mov
imul
insl
xor
and
inc
push
jae
dec
xchg
xchg
shl
outsb
add
fdivl
in
scas
outsl
je
pop
addr16
sbb
nop
or
loop
mov
ja
push
lock
negl
out
jle
pop
sti
lahf
jns
mov
xchg
jae
mov
fstps
ret
add
or
std
jge
loope
out
push
hlt
nop
pop
mov
cmp
nop
mov
pop
xchg
into
rcr
sti
mov
lcall
mov
mov
sarl
ret
imul
call
jge
lcall
dec
icebp
sbb
mov
movsl
popa
popl
mov
movsl
fs
xor
pop
cli
cmp
stos
sbbl
cmp
pop
cld
outsl
ret
mov
jbe
dec
popa
cmp
loop,pn
and
add
fstps
loopne
mov
adc
xchg
lock
xchg
push
cmpb
jecxz
es
adc
jle
nop
and
fildll
in
mov
aas
push
jne
mov
dec
jbe
inc
push
xor
in
jg
or
push
cmp
cmp
sub
sbb
nop
cli
cs
int
sbb
push
mov
xor
cmp
shlb
mov
add
sbb
cmp
aas
mov
adc
stos
adc
enter
popf
sbb
or
mov
inc
dec
mov
mov
inc
iret
jae
push
sbb
mov
xchg
mov
rcl
ljmp
int
xorb
hlt
mov
xchg
adc
mov
lret
xor
fcoms
andl
or
mov
jnp
xchg
enter
cmp
mov
fadd
aam
icebp
hlt
or
mov
cmp
lret
orb
push
mov
xchg
dec
jl
push
xor
xchg
pop
in
scas
or
aas
das
dec
and
mov
rcl
xor
pop
mov
mov
jns
add
shr
pop
cmpsl
sub
pop
outsl
roll
adc
test
clc
mov
jno
aad
dec
imul
pushf
imul
adc
imul
dec
cmp
lcall
or
jne
or
mov
cmp
and
rclb
cmc
inc
add
jp
lret
pop
cmp
and
mov
lock
jo
sbb
cli
push
out
jne
sub
adc
mov
inc
inc
mov
daa
adc
ret
test
xor
and
hlt
pop
mov
popf
pop
mov
and
jbe
outsb
mov
pop
and
push
fcomp
ljmp
js
inc
xchg
sbb
mov
xchg
testb
dec
mov
hlt
out
inc
inc
inc
xchg
enter
clc
fildl
cmpsl
mov
jnp
push
pop
pop
push
cmp
lahf
or
fdivrl
mov
inc
lret
ja
lret
sbb
pushf
pop
mov
xchg
js
add
jecxz
mov
cli
loope
mov
repnz
or
xchg
lret
dec
es
movsb
pusha
or
xor
sub
cmp
cmc
lret
enter
pop
faddp
sbb
clc
cmc
add
or
push
pushf
mov
xor
and
or
std
ds
push
pusha
sub
and
sbb
mov
test
fdivrl
xchg
adc
lods
fcmovnb
loopne
mov
repz
sbb
mov
les
dec
push
ds
adc
movl
lods
int3
shll
jp
add
mov
cmpsb
out
cmp
in
adc
sub
rol
mov
lahf
cmc
mov
scas
idivl
outsl
or
mov
jg
repz
or
lret
rcll
mov
push
push
imul
push
cmp
out
add
or
xor
js
fidivs
rclb
push
jmp
out
addr16
cwtl
std
shrb
adc
add
nop
sti
pushf
mov
dec
mov
cli
lock
jbe
das
enter
pop
push
mov
dec
xchg
pop
inc
js
inc
and
jnp
pop
sbbb
jecxz
ja
ss
pop
xchg
imul
mov
xorl
mov
sbb
mov
cwtl
and
xor
sti
clc
and
outsl
xor
daa
dec
and
xor
out
push
insl
mov
into
call
icebp
ret
inc
and
xchg
adc
xorb
ljmp
xor
dec
scas
push
lods
fldenv
jo
movsl
sar
incl
hlt
or
sar
jns
dec
mov
mov
mov
cs
or
jae
sbb
jbe
and
pop
cwtl
in
mov
stc
adc
mov
inc
push
or
xor
in
into
es
idivl
out
stos
dec
jno
sub
stos
orl
lahf
sub
cmp
mov
mov
mov
lods
mov
inc
lock
add
pop
in
jecxz
sub
movsb
mov
lcall
lahf
jnp
shr
lret
stc
test
stc
add
cmp
fdiv
cmp
enter
jmp
jo
cmp
ss
insb
aaa
xor
jmp
mov
out
scas
test
inc
mov
in
jb
lods
clc
mov
insl
push
mov
data16
jae
pop
inc
pop
pushf
or
bound
int3
push
outsb
mov
lret
xchg
loop
sub
repnz
jg
loop
push
icebp
ret
fs
mull
jle
divb
sbb
imul
xor
enter
xchg
fs
call
add
inc
std
arpl
jl
cs
jnp
add
cli
daa
in
push
aaa
jns
push
std
pop
inc
ss
into
sub
xor
xorl
dec
dec
cmp
cltd
inc
mov
add
or
ja
jp
sbb
push
jno
sbb
push
sbb
mov
push
inc
je
jl
arpl
adc
in
push
aad
in
out
mov
in
insb
fisubrl
add
jp
cld
hlt
sbbb
cmpsb
mov
jo
sbb
jge
pop
xlat
in
mov
lds
stc
fisubl
xor
jg
or
or
stos
repz
cmp
popa
cmp
pop
test
rcl
jmp
enter
arpl
push
stos
dec
xor
movsb
orb
xchg
pop
cmp
fmull
mov
aaa
cmp
xor
mov
ds
adc
in
loope
jl
imul
jp
out
repz
cld
inc
lock
shll
rolb
jae
lea
scas
idivl
lods
orb
jg
add
or
pop
adc
jge
into
mov
sarb
call
movl
jge
cmpsb
ror
adc
lea
xor
rolb
adc
mov
lcall
leave
xchg
sub
push
and
rcrb
in
ficomps
xor
push
lret
sub
sbb
repz
cmp
dec
scas
adc
sbb
sbb
jo
test
or
push
in
adc
sub
sbb
les
sbb
dec
mov
or
nop
jns
sbb
sarb
pop
shlb
fwait
loopne
dec
mov
xor
in
mov
push
aaa
movl
out
in
jge
jg
or
push
std
jp
pusha
mov
dec
jge
daa
xchg
adc
cmp
jns
sbb
mov
lds
sub
push
cltd
jns
fildl
cmc
sub
cmp
pusha
xor
add
divb
sbb
ss
mov
hlt
inc
xchg
sub
or
xchg
ror
cmp
lea
push
fmuls
push
sub
not
ljmp
xchg
inc
cli
int
and
dec
insb
icebp
sbbb
jp
push
bound
mov
movsb
inc
fmuls
les
leave
adc
mov
mov
daa
call
add
xchg
adcl
jo
pop
or
ljmp
mov
mov
push
out
subb
out
xchg
test
xchg
xor
xor
daa
lcall
add
push
rcl
jg
push
dec
stos
dec
push
mov
shlb
cmp
movsl
in
ret
jno
test
ds
or
test
icebp
sbb
jnp
mov
inc
data16
and
rcrb
dec
lods
mov
xchg
in
cmpsb
dec
dec
cmp
mov
pop
push
pusha
and
add
sbb
push
jmp
add
test
mov
out
iret
and
mov
ret
add
testl
and
ficompl
popa
inc
mov
adc
mov
js
je
push
pop
mov
fbld
push
push
sub
outsb
or
mov
sub
insb
out
push
loopne
lahf
fsubrs
push
dec
call
add
sbb
or
lods
push
xchg
sahf
popf
outsl
sbb
addr16
inc
ret
loopne
fcompl
lds
aas
inc
mov
lock
ror
fs
rorl
loope
fwait
xchg
cs
aas
mov
mov
arpl
mov
or
repz
cmp
jns
aad
add
lock
pop
pop
adc
mov
mov
test
sbb
or
xchg
dec
cmp
ss
test
ljmp
lds
sbbl
jno
cwtl
xchg
inc
nop
or
test
sahf
sahf
cmp
mov
sbb
push
mov
sub
imul
xchg
rep
or
adc
cmp
adc
popa
sti
outsb
imul
or
mov
pop
or
adc
mov
out
sahf
fsubl
adc
sar
sbb
mov
dec
pop
cli
enter
sbb
out
int3
pop
inc
mov
jmp
inc
xchg
fcmovb
add
cmpb
pop
cmpsl
add
or
xchg
out
fisttpl
icebp
lock
or
xchg
adc
pop
xchg
mov
xor
mov
jge
pop
rclb
sub
mov
inc
enter
iret
cld
fadd
push
fwait
cli
cmpsb
xchg
int
mov
mov
push
popf
xor
mov
pushf
mov
bnd
cmpsl
mov
pop
out
cmp
sub
lods
out
cmp
xchg
or
je
cli
je
pop
cld
sahf
cmpl
dec
cmpsb
push
mov
mov
subb
cmp
push
sarb
xchg
add
bound
loopne
bound
mov
jns
icebp
cwtl
mov
ret
ret
sbbb
xor
fwait
inc
mov
mov
pop
xor
mov
int
adc
shrb
outsl
and
cmp
jo
jne
xor
pop
loope
sbb
pcmpeqw
push
sub
out
notl
pop
xor
addr16
lds
inc
mov
jp
aad
push
dec
in
gs
push
mov
push
sbb
int
xor
mov
mov
repz
jmp
loop
jae
imul
dec
mov
adc
dec
out
andb
leave
insb
mov
add
scas
sahf
sbbl
data16
mov
addr16
or
add
pop
jmp
lods
add
sbb
mov
mov
pop
jge
mov
xchg
inc
icebp
aaa
and
cmc
push
ret
and
and
and
fdivr
inc
mov
mov
test
and
cmp
push
mov
loope
lret
fldl
cmp
pop
arpl
and
mov
idiv
sub
and
lock
leave
lret
push
inc
dec
inc
mov
aas
pop
cmp
nop
inc
mov
ja
ja
pop
aas
addr16
push
cli
xor
lret
rcrl
inc
pusha
adcl
inc
adc
or
std
stc
jb
xchg
or
jb
pop
out
pop
add
mov
cwtl
sbb
mov
pop
cmp
or
pop
add
fdivs
pop
push
push
and
cmc
jno
insl
in
xlat
adc
mov
mov
mov
clc
cmp
or
push
packssdw
sub
data16
insl
out
pop
xor
xchg
sub
inc
jmp
outsb
sarl
mov
ret
shlb
xor
int3
add
jns
pop
daa
mov
xchg
and
dec
fistpl
cltd
les
sbb
cmp
jno
ljmp
mov
push
push
mov
adcb
popf
mov
push
fs
inc
push
testb
repnz
adc
lahf
or
call
push
fisttpl
dec
inc
shl
sub
dec
in
mov
inc
adc
scas
fwait
sbb
shrl
mov
subl
lcall
cmpsb
and
push
ljmp
dec
sti
rcrb
pusha
sub
test
jle
jne
aas
mov
into
in
adc
sbb
mov
mov
mov
pop
pop
cmp
jo
pop
in
mov
cmp
xchg
pop
gs
fdiv
test
outsl
xorl
mov
push
xlat
in
mov
and
jle
fisubl
js
add
sub
and
jl
sub
push
stc
loop
stos
sbb
pop
inc
cmc
sbb
push
sub
pop
cmp
arpl
sti
add
fistl
in
pop
push
inc
and
cs
addr16
pushf
push
in
fbstp
push
out
dec
rcr
das
mov
gs
adc
hlt
es
sub
mov
pop
jle
ret
movsl
xor
sub
lods
jb
pusha
xchg
cmpsb
jl
sub
inc
das
loope
pop
push
mov
cmc
and
lahf
adc
sbb
cld
xchg
pop
cmp
add
add
pop
xorb
or
ss
mov
push
xor
cli
cld
mov
inc
push
data16
inc
mov
aaa
loop
push
add
mov
or
sbb
lods
popa
out
adc
ss
data16
aad
iret
je
sub
lods
enter
jo
xchg
mov
sub
or
push
pop
or
je
shll
ss
cmp
pop
push
or
mov
dec
pop
cmpsl
std
idivl
jno
in
push
xchg
jmp
fdivrl
movsb
mov
fdivrs
push
and
adc
nop
pop
imul
sub
pushf
inc
ret
xchg
push
or
jo
popa
or
int
cwtl
cmp
cmp
pop
mov
das
mov
lcall
adc
movsl
cwtl
stos
sbb
repnz
pop
cmpb
arpl
repz
stos
xchg
sub
sub
dec
or
rcl
imul
sarb
out
cmp
dec
mov
psrlw
push
xchg
push
jns
int3
dec
gs
shrl
fcomp
and
mov
push
psrlq
daa
cmc
mov
fnstcw
pop
sahf
adc
xchg
fwait
pop
xlat
sub
ret
imul
jmp
and
stos
int3
testl
mov
dec
clc
cmpsl
jle
in
mov
inc
popf
icebp
lret
push
pop
xchg
lcall
out
inc
push
mov
fwait
jg
cmp
stos
cltd
xor
push
cmc
xchg
out
cmp
mov
scas
lahf
jmp
fisubl
lods
push
data16
jo
fdivrp
clc
xor
mov
cli
cmpsb
dec
adc
mulb
orb
push
jecxz
fwait
adc
dec
mov
pop
inc
xchg
lcall
pop
lea
push
divw
psrld
fistl
std
mov
in
add
push
addb
adc
repz
pop
push
push
es
dec
ret
fdiv
pop
fs
adc
jg
mov
inc
fiadds
and
mov
pop
sbb
hlt
xchg
inc
ret
ljmp
xlat
pop
lds
fidivl
ljmp
jo
out
sub
pop
fsts
mov
sub
jl
mov
mov
scas
xchg
inc
insb
push
loopne
aaa
lahf
shl
aaa
es
add
pop
or
leave
push
rcl
xor
sbb
lds
test
hlt
push
mov
pusha
xchg
test
es
dec
nop
push
std
fmulp
jmp
push
xlat
sub
pushf
fbld
cwtl
rclb
dec
jmp
cmc
cmpsb
pop
pop
push
cmp
inc
and
mov
add
push
rcl
xchg
mov
fisubrl
lods
stos
xchg
lods
mov
push
adc
dec
dec
mov
push
pop
sahf
add
pop
jl
jb
push
xchg
mov
mov
lods
jecxz
jecxz
xchg
mov
ss
shl
push
test
cmp
mov
adc
sbbb
les
loope
outsl
daa
dec
imull
inc
scas
das
jns
xor
int
mov
push
inc
dec
mulb
mov
sahf
xor
jle
jb
fldl2t
xchg
add
xor
mov
adc
sti
in
out
negl
jge
jnp
shl
sbb
xchg
adc
mov
push
and
or
mov
test
sub
cs
shl
xchg
clc
stos
mov
pop
clc
ds
mov
repnz
jl
or
pusha
call
clc
push
aaa
rcll
sti
lods
mov
in
arpl
nop
pop
mov
add
jno
jge
loopne
cli
mov
xchg
hlt
repz
xor
aas
insb
pop
cmpsl
adc
xchg
mov
pusha
stc
mov
out
gs
xor
mov
dec
popf
sub
or
dec
cmp
push
inc
push
imul
insl
cmc
nop
adc
xorl
cmp
cmpsl
cmpb
icebp
jl
ficoms
mov
stc
call
cmp
xor
pop
jb
add
sbb
stc
mov
add
call
aaa
inc
push
sbb
lret
and
push
jbe
mov
in
and
int
jmp
ret
in
fnsave
inc
nop
fdivs
inc
pushf
lret
and
xor
in
addb
mov
adc
or
loope
inc
cs
jmp
fcmovnu
xor
ret
mov
ss
lret
inc
xchg
xchg
fisubs
and
adc
dec
mov
cwtl
addb
fwait
cmc
add
ja
js
mov
in
int
mul
sbb
test
mov
push
outsl
sbb
movsl
imul
dec
in
stos
pop
add
ss
ljmp
sub
or
addl
xchg
jp
lcall
fsts
call
pop
fdivrs
pop
roll
test
sahf
out
push
fldl2e
xchg
push
scas
sub
addr16
ficompl
mov
pop
inc
push
push
inc
adc
and
jbe
in
inc
add
dec
sub
das
hlt
insb
loopne
push
or
lret
enter
mov
fstl
cwtl
sub
xchg
xor
imul
xor
dec
dec
pop
or
stos
xor
mov
insb
out
adc
adc
or
frstor
sbb
push
lahf
adc
sbb
popa
and
sbb
test
mov
and
push
xlat
shrb
jne
add
add
sub
cwtl
xchg
rol
dec
or
popa
add
test
dec
daa
add
and
call
pop
into
sub
push
xchg
mov
pop
pop
and
lcall
adc
iret
fcoms
xor
xchg
jg
sahf
fistpll
inc
inc
daa
dec
push
jp
inc
jo
push
loope
and
and
pop
push
push
inc
and
dec
mov
enter
arpl
jbe
jno
dec
pop
lds
mov
fldcw
and
xor
pop
add
int3
movsl
daa
mov
call
inc
xor
push
scas
xor
call
pop
aad
arpl
lahf
push
call
lahf
cmp
shlb
int3
jne
jae
jbe
mov
lods
call
jl
adc
jo
loopne
xchg
in
or
adc
cli
jmp
int3
sbb
sub
push
orb
mov
std
add
pop
ss
jo
movsb
sbb
dec
fistpll
adc
push
out
fisubl
xchg
xor
lds
inc
pop
sahf
gs
mov
clc
scas
mov
mov
pusha
jge
int3
addr16
in
xchg
cmpl
lea
dec
testb
mov
notb
movsb
and
repz
in
loopne
into
jae
cmp
test
mov
lret
add
jl
popf
fstpl
int3
enter
outsl
fildll
stos
xchg
in
xor
scas
out
scas
mov
loope
add
push
dec
push
aaa
or
shll
mov
and
ficoml
push
sub
sub
test
nop
idiv
fwait
push
mov
xchg
sbb
mov
xchg
les
lods
push
enter
and
in
xor
push
js
pop
sbb
sub
push
mov
mov
test
jecxz
pop
ret
call
xchg
scas
aaa
and
test
and
inc
test
adc
pop
ret
repnz
sbb
jge
lea
into
scas
fcoml
pushf
mov
push
inc
adc
mov
xor
daa
or
lock
mov
sahf
push
outsb
cmp
dec
pop
push
fsubrs
or
push
or
in
fmull
int
aaa
adc
insl
out
pop
xor
inc
xor
inc
scas
sub
stc
jmp
ret
xor
sub
cmp
fbstp
and
add
xor
and
cld
daa
js
fsubs
stos
sbb
pop
jae,pn
mov
mov
das
repnz
pop
mov
fistl
lret
cmpsb
outsb
sti
mov
dec
push
mov
mov
push
xor
stos
inc
fisttps
mov
and
jl
cmp
js
mov
xor
lret
aam
add
loopne
sbb
push
or
popf
inc
fadds
fidivl
pop
jne
mov
arpl
test
loope
test
add
xor
mov
jb
ljmp
cmp
arpl
in
add
test
mov
loop
dec
mov
addl
fidivrl
cmp
pop
fidivl
sti
and
xchg
inc
pop
lea
into
stos
dec
js
jns
xchg
insl
arpl
xor
fstps
mov
in
xor
jp
xor
hlt
ds
inc
sbb
into
orb
inc
mov
sub
push
cmpsb
pop
sub
pop
adc
sub
fs
fidivl
jae
rcll
jle
cld
ja
lock
lods
cwtl
mov
fidivrl
mov
xor
je
call
hlt
out
movsb
mov
daa
es
cmp
movsb
add
cmp
fs
dec
jl
ljmp
sbb
mov
xchg
adc
imul
adc
pushf
jge
xor
cmp
enter
jns
pop
loop
mov
mov
sbb
hlt
pop
push
shlb
inc
adc
icebp
fbld
cld
sahf
test
mov
dec
jno
mov
stc
xchg
or
out
xor
jno
mov
imul
shr
leave
sbb
inc
and
iret
sbb
add
cmpsb
popa
int3
push
dec
outsl
or
popa
roll
pusha
ja
add
outsb
enter
jns
cmp
nop
adc
mov
adc
lcall
xchg
outsl
sbb
mov
fistps
push
cmp
xchg
push
adc
cwtl
push
sub
and
sub
push
push
shr
cs
negl
fidivl
push
jmp
mov
add
push
sbb
dec
leave
lds
add
movlps
fcoms
xchg
aas
push
push
push
mov
cld
sub
mov
loop
cmc
scas
adc
jle
xor
sub
clc
stos
xor
stos
cli
nop
inc
jns
inc
inc
xchg
testl
xchg
andb
xchg
or
mov
inc
xor
loop
mov
lret
cmp
test
mov
notb
fldt
fst
insb
stos
cs
es
push
mov
stos
pusha
leave
dec
jg
sub
cmp
pushf
sbb
or
push
xlat
in
mov
xor
ds
inc
dec
dec
push
mov
cld
add
pusha
mov
mov
repnz
and
xchg
aam
jl
xchg
xchg
adc
mov
loop
mov
push
or
xchg
pop
xchg
iret
and
xchg
ss
xor
or
sbb
xchg
pusha
adcb
outsb
pop
mov
mov
icebp
ss
pop
push
cmp
es
cmc
jae
js
add
xchg
ficomps
das
and
pop
sbb
add
cmp
sbb
adc
pop
mov
mov
adc
cmpsl
ja
outsl
and
cmp
or
pop
ret
sbb
into
adc
incl
lcall
es
jmp
push
mov
and
or
cltd
imul
or
push
popf
pop
pop
fistps
xchg
push
outsb
and
das
std
sbbb
jb
cs
dec
rolb
mov
sarl
push
daa
xchg
lea
test
sbbl
ja
pop
mov
imul
jg
outsb
mov
mov
bound
pusha
inc
lea
ljmp
push
jge
push
push
mov
es
sbb
pop
cmp
add
jo
testl
or
pop
lock
pushf
jle
int3
loop
data16
xor
sub
xor
dec
jbe
call
ds
les
inc
hlt
sub
sarb
jle
bound
push
mov
cmc
orb
mov
fwait
pushf
int
insb
and
rorl
add
push
mov
test
xchg
clc
jp
stc
cmpsb
cltd
dec
push
insb
xchg
fmuls
cmpsb
std
mov
push
popl
clc
jl
push
push
fcompl
xor
enter
outsb
add
icebp
decl
addr16
jg
xchg
fstps
stos
jge
add
push
jne
push
test
push
mov
fs
sbb
imul
ret
ss
outsb
push
pop
xlat
dec
mov
dec
mov
cmpsb
pop
mov
xorb
xor
ret
insb
sbb
dec
std
push
daa
fwait
sub
dec
lcall
outsl
mov
je
lds
pop
inc
xor
pop
outsb
sub
mov
jecxz
push
jecxz
cmc
hlt
adc
jo
pop
fldl
cmp
scas
jmp
inc
mov
andb
mov
xchg
push
sub
int
cmp
scas
push
test
clc
pop
pop
pop
cwtl
fildll
mov
inc
mov
jmp
int
cmp
cmpb
fildl
dec
pushf
stos
jnp
mov
jge
adc
adc
daa
mov
xchg
mov
mov
js
sub
dec
sbb
fucomp
loopne
mov
sbb
adc
xor
xor
xchg
cs
fwait
in
adc
sarb
repz
arpl
and
adc
nop
sbb
push
outsl
inc
daa
add
dec
pop
out
mov
pop
mov
add
ret
dec
cmpl
lock
pop
dec
aam
push
stos
stc
imul
mov
in
mov
cmp
push
cmp
ret
aam
xchg
std
mov
push
dec
mov
push
pop
lcall
push
or
out
shrl
insl
paddsw
push
and
cmpsl
in
out
and
test
add
xor
jne
pop
lock
mov
push
cld
and
mov
push
in
push
mov
ret
outsl
jo
mov
addb
pop
dec
xchg
loopne
mov
add
jne
gs
mov
sub
fwait
mov
cs
sub
popa
cmp
dec
js
out
cmp
jb
mov
ret
dec
out
lret
aam
jge
les
sti
mov
sti
enter
dec
xchg
and
cmp
shll
repnz
pop
iret
rorb
movsl
dec
aas
and
fistpll
xchg
push
out
dec
das
aaa
pop
xchg
scas
std
nop
lods
stos
ficoms
rolb
mov
insb
out
pop
lea
jmp
int
mov
mov
fdivrl
jecxz
mov
mov
pop
cwtl
fucom
or
jns
add
sub
push
jns
mov
lcall
mov
dec
sti
int3
mov
lea
insb
inc
sub
aaa
xor
clc
xlat
aam
mov
or
icebp
adc
or
push
mov
inc
jo
mov
js
jmp
rcll
arpl
xchg
add
cmp
jl
out
sbb
ds
rolb
push
mov
xchg
inc
data16
jge
rorl
cmp
push
mov
jecxz
ja
adc
pop
sub
popa
mov
inc
xchg
or
fidivl
cmp
int3
rcll
sbb
mov
imul
inc
das
shl
lcall
rol
test
xor
and
adc
cli
cmp
lock
cmpsb
movl
cmp
decl
lret
cwtl
push
jl
add
fstps
into
or
movsl
mov
pop
xchg
repz
fisubrl
sub
into
jne
push
xchg
sub
xchg
pop
xchg
xchg
jmp
pushf
adc
add
pushf
xchg
scas
mov
push
loopne
daa
fs
and
addr16
in
cwtl
dec
mov
out
insl
bound
jl
shlb
aam
sub
rolb
inc
movsb
pop
mov
ret
ret
cli
nop
add
or
inc
movsl
fcmovb
pop
xchg
push
inc
loopne
cmp
push
push
mov
out
push
and
pop
bswap
ret
jg
jns
subb
xchg
mov
lahf
sub
mov
dec
pusha
mov
in
sbb
sbb
lods
roll
out
and
inc
je
pop
push
or
xchg
lds
push
mov
xor
mov
cli
mov
das
movsb
shlb
dec
xchg
ficoms
mov
rorl
outsl
cli
pop
push
mov
bound
mov
leave
xor
sub
fisttps
test
pop
scas
ror
lret
and
sub
int
and
imul
arpl
xchg
cmpsl
int3
cmp
dec
mov
add
cmpl
mov
jl
in
cmp
push
mov
inc
jl
rcr
lock
lea
add
mov
repnz
aam
push
xchg
popf
cmp
sub
imul
jns
test
data16
xor
sbb
lahf
push
xlat
leave
add
aaa
stos
jge
or
data16
sbb
out
lock
popa
adc
ds
pushf
mov
pop
mov
pop
fstps
push
and
mov
jo
in
xchg
add
jb
les
push
add
push
fdivp
addl
insl
icebp
iret
pusha
dec
mov
dec
test
mov
jno
mov
je,pn
xchg
mov
arpl
pop
test
inc
add
push
test
add
mov
data16
add
push
fs
iret
sbb
icebp
mov
inc
push
daa
sbb
adc
hlt
iret
mov
mulb
xchg
into
mov
mov
add
mov
push
in
dec
jmp
xchg
test
sbb
aam
mov
stc
stc
sahf
fiadds
icebp
rol
subl
aad
push
mov
xor
pop
rcll
cli
pop
xchg
int
lahf
hlt
into
fnsave
add
inc
push
imul
xchg
push
sub
nop
mov
addr16
scas
stos
lods
sub
repnz
jle
jae
les
sub
xor
or
mov
int3
insl
cltd
cltd
outsl
xor
clc
push
jmp
shrb
negb
ja
and
icebp
mov
mov
or
mov
inc
scas
mov
xchg
mov
jmp
addr16
repnz
shrl
inc
add
add
or
jl
scas
push
jle
cwtl
aas
mov
test
xchg
xchg
repnz
xchg
xchg
xor
stos
push
fwait
push
movsbl
sub
sbb
jne
ficoml
ds
gs
add
mov
cmp
mov
xchg
inc
xchg
jge
xchg
xchg
xchg
fcompl
jo
mov
push
divb
shl
data16
mov
dec
in
mov
inc
stos
ja
cmp
and
fimull
jge
pop
sbb
out
insb
cmp
add
or
test
mov
repnz
adc
sub
push
ss
clc
lret
adc
loop
pop
dec
xlat
and
cmp
mov
adc
push
jmp
dec
ret
jle
jb
cwtl
cmp
mov
shll
mov
or
lahf
lret
in
push
pop
stc
cmp
dec
mov
add
subb
mov
cs
scas
das
add
mov
idivb
daa
mov
dec
repnz
cmp
fldl2e
aam
mov
push
imul
mov
adc
enter
cmp
loop
mov
je
cmp
ror
mov
sub
pop
addl
sarl
pop
mov
sbb
ss
pop
in
in
in
push
je
divb
adc
pavgb
add
xchg
jno
mov
mov
or
lods
mov
jb
test
lret
pop
rorb
js
mov
cmp
push
pop
xchg
cmp
pusha
cs
lods
push
pop
or
push
xor
cltd
push
jge
lcall
jne
lods
push
add
xlat
insl
dec
pop
sarb
mov
mov
jmp
inc
js
insl
cmpsb
call
sarb
mov
call
or
dec
pop
pushf
xor
push
jp
test
arpl
flds
rolb
das
aam
test
or
sub
jno
adc
add
ja
cmpsl
shll
inc
xor
negl
sub
add
popa
cltd
loopne
dec
mov
test
xchg
xchg
and
addr16
cld
push
mov
jb
inc
adc
mov
xor
scas
adc
push
orl
aad
inc
lret
fsubrl
loop
jle
ret
arpl
hlt
xchg
es
insb
xlat
push
jae
pushf
shl
dec
cmp
out
and
loope
lcall
adc
into
arpl
subl
testl
hlt
xchg
jge
sahf
data16
adc
int3
and
fstpl
fs
andb
in
mov
sbb
inc
test
inc
outsb
pop
test
test
ss
dec
push
xchg
hlt
mov
and
sub
sub
ficoml
push
inc
add
fnstcw
mov
mov
mov
push
test
sbb
nop
inc
jne
adc
clc
cmp
pushf
call
push
xor
sahf
cmc
in
mov
xchg
jae
pop
cmc
inc
pop
outsb
enter
clc
push
lock
and
dec
repnz
sub
test
popa
ds
adc
adc
rorl
dec
add
popa
into
push
in
add
aad
sti
mov
cmp
test
jno
mov
bound
sbb
add
sarl
iret
cwtl
mov
test
xchg
mov
es
bound
inc
fimull
xchg
shll
cmp
dec
icebp
push
pop
xorb
mov
fcom
mov
mov
jns,pt
lret
xchg
sbb
push
std
push
jmp
ss
mov
jb
aam
add
xchg
inc
loopne
add
aad
cmp
dec
xor
bound
enter
adc
pusha
in
insb
lcall
ret
dec
out
loope
sbb
dec
mov
lods
fdivs
sub
mov
data16
or
mov
nop
shrb
lret
xor
push
jb
or
inc
inc
leave
lods
lret
scas
outsb
mov
xchg
and
sub
jns
sbb
int
xchg
pusha
xlat
lods
mov
add
push
xchg
sbb
lods
out
pop
ja
sbb
jg
clc
int3
mov
jno
pop
xchg
mov
xor
lock
jle
and
js
push
sub
xchg
mov
hlt
cmp
in
lret
and
cmpsl
xor
jmp
xchg
push
shrl
jmp
push
ds
bound
in
lock
stos
dec
jne
loopne
push
mov
jge
lds
cmp
shrb
adc
fwait
call
out
jmp
ja
jo
ja
xchg
mov
mov
xchg
rclb
xchg
cmp
xchg
loop,pt
mov
xchg
mov
lret
sub
add
adc
mov
lahf
cwtl
in
fdivrl
cmpl
xchg
into
out
mov
inc
in
cmpsb
inc
push
xor
scas
mov
xlat
push
imul
push
dec
pop
sub
add
and
or
aaa
stos
lock
or
xor
mov
sub
clc
jbe
pop
inc
adc
dec
lods
sub
dec
push
rclb
cmp
jecxz
mov
pop
gs
mov
or
ss
inc
add
push
push
out
pop
or
loop
xor
shrb
inc
xchg
stc
xchg
test
push
push
arpl
jno
jnp
dec
adc
adc
pop
sbb
xlat
mov
aas
push
stos
xor
mov
sarl
pop
pop
sahf
pop
scas
lods
adc
ljmp
lods
jmp
or
inc
push
and
pop
outsl
dec
test
mov
mov
mov
mov
adc
ja
sub
adc
add
jae
push
repnz
jne
push
popf
iret
inc
push
cmc
outsb
push
dec
cmp
mov
push
iret
adc
sbb
adc
pop
sarb
inc
aaa
mov
lods
pop
out
outsb
dec
out
jecxz
adc
andl
int
sbb
fimull
loopne
mov
out
push
imul
xor
shrl
dec
aas
pop
nop
mov
insl
pushf
pusha
decl
jb
xchg
loop
lds
cmp
dec
jmp
sahf
pop
popf
sahf
adc
test
movsl
clc
cld
sbb
jo
xchg
xor
jg
add
in
outsl
cmpsl
nop
and
test
mov
add
jmp
adc
sahf
dec
jecxz
jno
call
stos
mov
xchg
jbe
dec
call
loope
out
out
pcmpgtw
dec
popf
stos
js
mov
imul
in
dec
out
inc
out
xchg
pop
sub
or
sti
and
pop
movsb
mov
mov
and
fnstsw
sub
inc
dec
push
push
sub
addr16
mov
test
mov
daa
dec
aas
push
cpuid
ja
ljmp
ss
add
mov
loopne
pop
jne
jbe
cmp
sahf
insl
add
jo
push
xchg
mov
loop
ret
xchg
jo
loope
push
outsl
mov
xor
pop
fldl
xor
push
imul
sbb
cwtl
roll
or
mov
jp
inc
arpl
cmpsb
fucomi
rorb
pop
push
lods
push
lahf
adc
repz
orl
or
sub
js
fcmovnu
test
or
arpl
cld
xor
test
loope
mov
out
xor
adc
pop
jnp
pop
push
jle
jg
jns
xchg
mov
jo
arpl
mov
cltd
pop
fcompl
or
pop
das
std
sub
test
enter
aaa
pop
and
pop
shll
xchg
sbb
sub
sub
and
cltd
xorb
sahf
mov
push
lahf
aam
lea
inc
arpl
xchg
imul
pop
std
or
mov
cs
xor
iret
loopne
push
in
mov
sbb
dec
mov
loop
or
cs
push
sbb
notb
cmp
subl
das
pop
jne
test
test
rcr
jo
aam
sub
inc
jle
daa
out
cmc
stc
jecxz
sbb
ffreep
xchg
cmpsl
scas
inc
adc
cmc
lahf
push
pop
notb
push
push
pop
xchg
dec
xor
insb
mov
push
inc
ret
xor
loopne
push
in
lahf
and
cmp
sbb
mov
arpl
pop
cmp
jle
xchg
xchg
lcall
and
int
dec
mov
xchg
push
popf
mov
pop
lock
jge
fstl
test
xor
sbb
ds
sub
cmp
test
jmp
add
dec
sub
jmp
cmpsl
cmp
pop
std
movsb
or
mov
imul
inc
pop
gs
push
call
out
jno
lret
inc
sub
inc
xchg
and
cmp
imul
daa
cmp
dec
dec
add
sub
adc
insb
rcrb
sub
lcall
inc
daa
or
fwait
xchg
popf
mov
js
jae
jge
sti
fmuls
dec
lock
or
xchg
out
loopne
lock
inc
mov
sub
out
mov
xchg
mov
xchg
add
call
xlat
push
mov
movsl
sarb
mov
sbb
dec
mov
shll
push
rcl
adc
mov
popa
pop
in
sbb
xchg
mov
mov
jae
fwait
lahf
push
fildll
mov
mov
out
or
sbb
lret
aam
scas
push
xchg
jne
mov
mov
cmp
push
js
xor
add
outsb
lahf
pop
push
or
nop
push
sahf
jae
insb
minps
outsb
push
adc
je
xor
sub
add
pop
xchg
cmp
jbe
imulb
aad
dec
push
cmp
ljmp
add
pushf
sti
sbb
int3
sub
mov
push
mov
fs
aad
dec
aam
inc
adc
movsb
mov
push
icebp
or
cltd
fsin
int
daa
icebp
or
inc
sub
movd
shll
mov
enter
mov
imul
sbb
jmp
fdivr
cli
call
inc
cmp
lods
test
sbb
push
js
adc
xchg
push
inc
inc
jg
xor
arpl
aaa
ljmp
aad
inc
ss
mov
inc
cmpsl
ds
xor
mov
add
jno
xor
imul
jmp
jae
push
jne
jmp
xchg
pop
cwtl
adc
dec
dec
sbb
jmp
out
aam
movsl
cmp
sbbb
push
mov
jecxz
cmp
cmp
imul
lcall
jae
aaa
bound
aam
xor
clc
cmp
call
fdivl
loopne
sub
jge
dec
and
shll
adc
fists
je
jecxz
xchg
xor
pop
and
stos
xlat
jno
std
sub
push
sbb
push
lret
aas
shl
enter
xorl
dec
cmp
pop
cwtl
std
in
es
xor
mov
test
adc
and
xor
push
aas
xchg
lahf
add
xor
mov
ficomps
aad
jmp
mov
push
and
inc
outsl
mov
push
mov
movsb
push
shll
rcr
inc
lret
notb
out
in
lods
push
icebp
add
add
cmp
adc
pop
jne
adc
mov
sub
sub
repnz
test
xor
fdiv
xchg
js
sub
in
cld
cmp
adc
jb
push
shl
adc
add
jo
mov
andl
cmp
mov
add
push
inc
sub
repnz
push
psrlq
sub
jbe
cwtl
xchg
mov
leave
mov
int
cmp
mov
jae
pop
dec
push
xchg
test
out
lea
in
lods
mov
pop
out
sbb
ret
and
mov
jnp
lret
adc
scas
xor
cmc
iret
mov
cmp
mov
fidivrl
push
ret
or
cmpsb
shlb
fidivrl
ljmp
adc
and
xchg
mov
sarl
push
hlt
pop
iret
inc
sub
aas
stc
fmulp
cmc
das
lahf
ljmp
aam
into
add
stos
jno
xor
jns
push
leave
sbb
xor
dec
sub
stos
and
fsubl
outsl
addl
lret
dec
scas
sbb
std
mov
jo
and
cwtl
call
push
outsl
stos
or
mov
test
adc
or
xor
sbb
sbb
add
sub
jo
xchg
fs
lods
cmp
sub
jo
xchg
inc
loope
dec
xor
inc
push
mov
fs
jle
aam
movsb
scas
lock
insb
movaps
ret
pushl
sub
sarl
dec
fiadds
sbb
adcl
daa
mov
or
gs
and
inc
outsl
pop
repz
mov
mov
push
sub
jb
inc
xchg
loope
xor
dec
aad
imul
mov
icebp
dec
stc
fxch
xchg
xchg
xor
mov
out
push
sub
adc
xor
add
or
repz
insl
imul
out
cmp
movsb
out
cmp
mov
mov
jns
mov
lods
cld
sbb
and
jno
aam
dec
andb
and
loope
jmp
scas
add
les
cmp
pop
fldenv
mov
data16
or
jne
mov
out
add
push
outsb
out
sbb
inc
shl
outsb
jmp
or
add
pushf
adc
mov
gs
fst
xchg
orb
push
xor
push
ds
movsb
xor
sbbb
ds
cmp
sbb
mov
push
iret
push
pushl
cmpsb
jp
inc
ss
imul
cmpsl
jecxz
jo
cltd
ljmp
sub
and
pop
lods
sub
test
sbb
sahf
loope
and
lahf
enter
jne
mov
pop
js
mov
movsl
sub
in
push
in
loope
add
cmpsb
mov
mov
faddp
and
cld
pop
ljmp
jno
into
xchg
sbb
fcmovnu
inc
jg
fs
icebp
pop
icebp
hlt
xchg
pop
jb
in
out
test
and
sub
jmp
mov
push
ljmp
into
les
aas
lcall
xchg
fcmovne
cmpsb
mov
pop
push
cmp
test
pop
pop
xchg
push
mov
or
dec
jns
cmpsb
push
es
insb
push
mov
fcom
fadd
pop
jmp
mov
outsb
out
cmp
neg
and
sub
fdivs
pop
sub
push
inc
pop
ret
adc
lods
neg
sub
bnd
sbb
fisubrl
push
fmul
pop
ret
cmp
lcall
and
shr
dec
xchg
mov
and
and
repnz
icebp
arpl
push
mov
dec
pusha
sub
loope
loop
mov
xchg
daa
inc
lcall
hlt
mov
mov
lods
and
sub
sbb
adc
imul
or
push
dec
jne
mov
mov
xchg
or
js
lahf
iret
nop
loope
scas
mov
cmpsl
cmp
movsl
xchg
fs
jns
daa
adc
fimuls
fadds
mov
xor
movsb
lock
movb
mov
daa
pop
mov
arpl
add
iret
pop
xor
jbe
je
fs
cmp
in
mov
pusha
daa
jle
cli
ja
lock
out
nop
stos
jnp
xchg
stos
rolb
mov
scas
fucomi
repz
sbb
bound
lret
cs
fcmove
loop
xchg
xchg
and
lret
push
cmp
dec
mov
jo
cmpsl
ficomps
xchg
add
dec
push
out
jmp
in
insb
jmp
fdivrp
insl
bound
cli
pop
mov
xchg
cmpsb
add
sub
push
daa
jb
jl
ss
sbb
dec
popa
cli
in
les
cmc
sahf
dec
pop
sbb
or
jnp
dec
and
cwtl
loope
nop
out
cmp
jno
movsl
add
ret
ja
sub
sbb
loop
mov
mov
jmp
push
mull
fs
mov
mov
dec
pop
fisttpll
sbb
jb
loop
mov
jnp
dec
xchg
or
aaa
cltd
lds
jecxz
push
mov
stos
or
js
mov
das
push
push
dec
sub
cmp
xchg
fisubl
fisubs
or
cld
add
xlat
es
fs
sbb
cs
std
outsb
dec
lods
dec
ss
pop
popa
fisttpll
pop
pusha
jne
jae
add
or
adc
xchg
cwtl
push
rorb
or
jb
xor
hlt
mov
dec
stos
xchg
pop
sub
mov
or
jne
daa
pusha
cmp
lcall
lahf
jo
daa
push
addr16
das
jae
out
adc
mov
xlat
dec
xchg
in
dec
ret
loope
xlat
or
stos
pop
clc
fistl
add
cmpsl
stos
sbbb
dec
mov
mov
sar
push
lcall
ja
push
and
jns
xor
mov
test
repz
fsub
push
and
lret
xchg
fwait
dec
adc
out
addr16
sbbl
jno
cld
mov
xor
dec
lret
outsl
xchg
sub
stos
rclb
cli
out
ret
pop
popa
mov
xchg
scas
stos
pop
cwtl
data16
dec
xchg
aam
lret
lods
dec
inc
jg
jmp
mov
push
mov
push
loope
jnp
mov
aad
sub
push
sub
movsl
add
pop
stos
out
push
mov
adc
mov
cmpsl
scas
add
xor
data16
cmp
adc
cmp
insl
xchg
jecxz
sar
mov
je
or
repnz
das
mov
fsubr
inc
idivb
ret
pop
stos
jnp
iret
out
jle
adc
mov
xchg
cmp
mov
mov
repnz
in
ficoml
and
imul
pop
nop
hlt
xlat
pop
inc
xchg
dec
xor
mov
sbb
or
mov
andb
push
xchg
hlt
idivb
push
mov
fidivrl
push
cmp
sahf
cmp
dec
imull
jbe
xchg
and
divl
cwtl
add
cmpsb
mov
pushf
jg
frstor
add
fnstenv
cmp
pop
mov
rcrb
popa
test
mov
add
mov
bound
std
outsl
test
and
rcr
jmp
push
dec
popf
mov
jl
mov
add
mov
sbb
addr16
jp
pop
arpl
sarb
lds
push
repz
out
stc
test
adc
insb
out
test
out
mov
lret
adc
pop
in
pop
sarl
das
cmpb
xor
rorl
adc
xchg
test
icebp
cmp
shll
pop
test
jge
xor
xor
pop
inc
andb
repz
pop
adc
jo
mov
mov
add
mov
sbb
les
movsb
in
fwait
cmp
adc
jge
dec
sarl
add
or
es
xor
addr16
cmp
jmp
xrelease
xor
push
arpl
dec
and
out
mov
sbbl
in
es
scas
stos
loop
inc
testb
cmpsb
push
xor
sub
pop
fsub
sub
aaa
out
pop
pop
fdivrs
jl
addr16
das
dec
jle
push
out
mov
loop
push
inc
stc
orl
fnop
sbb
pop
mov
shrb
adc
xchg
pop
fcomps
gs
push
ljmp
dec
aam
inc
jp
shrb
dec
popa
ret
and
pop
xchg
shlb
cmp
push
stc
add
scas
push
xor
jecxz
jp
inc
inc
shll
push
mov
adc
push
mov
inc
add
cmp
inc
cmc
lock
add
rorb
js
scas
lret
pushf
and
das
jle
cmpsl
inc
xor
sti
out
shrl
mov
pop
mov
sub
cltd
xchg
imul
jnp
dec
test
jge
mov
cmp
adc
mov
jp
aas
cli
xor
mov
cmpb
in
out
fbld
lret
or
call
and
shrl
adc
xchg
hlt
inc
fsubrl
mov
ja
push
and
pop
faddl
daa
mov
imul
and
jg
sub
sub
testl
jmp
sbb
lock
in
out
repnz
scas
fisubs
push
jnp
dec
movsb
inc
sub
lods
lcall
cmp
shlb
notl
test
pop
inc
cmp
fsubs
stos
mov
mov
int3
sub
fsts
popa
jno
outsb
pop
xor
sub
mov
mov
dec
mov
test
stc
insb
sub
lcall
adc
mov
mov
adc
cmp
mov
sbb
jl
and
inc
outsb
stos
testb
out
adc
lret
xor
inc
shlb
divb
jb
push
xor
jb,pn
mov
sub
dec
push
in
call
popf
aaa
inc
dec
inc
in
icebp
fsubl
dec
add
rclb
stos
pushf
arpl
xor
nop
popf
inc
test
xchg
mov
inc
call
jb
imul
xchg
cmc
cmc
inc
mov
lret
movl
mov
xor
in
mov
mov
idiv
adc
scas
xor
clc
pop
mov
push
cmp
mov
add
ljmp
adc
or
mov
adc
sub
sub
repnz
int
sahf
push
out
in
fcoms
test
xchg
mov
sub
adc
lret
jl
push
int
adc
je
loope
mov
sar
fdiv
fs
sbb
shlb
xchg
xchg
mov
sub
mov
int
and
and
jmp
stos
xchg
adc
test
add
dec
inc
xchg
add
into
outsl
addr16
add
lods
fidivs
leave
adc
push
or
daa
inc
xor
out
jmp
rorb
negl
dec
adcb
jno
and
mov
sbb
cli
mov
pop
sbb
lcall
add
dec
xorl
repnz
je
clc
sub
jle
ljmp
jns
out
bound
lret
cwtl
in
jne
add
adcb
sub
add
fisttpl
xor
repz
sbb
outsb
insl
dec
test
scas
les
sub
xor
cmp
adc
dec
xchg
jns
mov
cmpsl
in
sbb
add
fstpl
sarb
inc
stos
out
stos
sub
repz
pop
or
inc
cmp
or
addr16
add
cltd
ret
dec
loopne
push
xchg
xchg
or
clc
arpl
ficoms
fs
jle
jbe
xor
lret
imul
mov
and
icebp
imul
or
jl
rcl
js
sbb
aam
test
lret
inc
xor
and
xchg
cmpsl
add
icebp
push
stc
sti
ss
ljmp
mov
test
lcall
not
xchg
mov
arpl
data16
int
sbb
add
inc
dec
cmp
test
lods
cmp
data16
sub
shrl
cmp
xchg
cli
cmpsl
dec
std
loope,pt
mov
xor
repz
and
dec
aad
inc
adc
test
inc
push
lret
or
sub
push
cwtl
adc
leave
aad
push
cmp
popa
push
es
or
lds
arpl
xor
fs
repz
or
push
xchg
sbb
xchg
and
push
repz
dec
jp
in
sub
in
dec
and
outsl
mov
adc
adc
mov
xor
iret
mov
pop
xchg
mov
xchg
mov
les
jo
mov
xor
in
ljmp
fcomp
jle
enter
xchg
mov
mov
call
xchg
andl
movsb
add
outsl
out
enter
add
stos
pop
mov
cmp
aas
mov
mov
cs
movsb
sbb
xlat
push
lods
out
or
mov
sbb
mov
jecxz
mov
sub
insl
and
add
fstpl
ja
jmp
or
sub
mov
subb
and
lock
xchg
adc
cltd
mov
fadd
cwtl
inc
movsl
push
sub
jmp
sbb
out
ds
out
sahf
push
add
sbb
or
insl
inc
cltd
into
cmp
dec
out
fmull
cmp
icebp
push
lds
js
fdivs
add
mov
mov
xor
es
es
or
ss
add
dec
callw
push
push
ljmp
xchg
dec
movsl
adc
or
jnp
sbb
dec
or
lods
ret
int
pop
rcrl
insb
aas
and
or
adc
inc
and
nop
hlt
scas
out
test
repz
dec
pop
add
test
jbe
dec
jmp
xchg
adc
push
test
xchg
in
sbb
cmp
dec
stos
xor
test
mov
sub
outsb
addr16
push
sub
or
mov
mov
push
sbb
inc
pop
jp
cld
push
dec
xchg
inc
jp
scas
int
ss
shlb
jl
xchg
sub
mov
das
fbstp
mov
outsb
std
mov
dec
je
mov
inc
div
push
call
mov
add
mov
fwait
ljmp
pop
std
icebp
pop
imul
lcall
pop
sahf
stc
sbb
jo
shlb
adc
mov
gs
mov
iret
or
adc
outsb
xor
push
movl
sahf
dec
dec
mov
dec
mov
pop
xchg
lds
dec
les
jle
dec
iret
js
mov
jbe
rorb
movsb
mov
insb
rorb
mov
mov
sub
imul
loopne
xor
int
add
lods
jo
mov
bound
fwait
cmc
lea
sbb
pop
into
push
push
xor
outsl
es
fnstsw
out
in
pop
cld
jmp
mov
fidivs
movsl
inc
je
lret
jge
daa
movsl
outsl
pop
aas
mov
inc
stos
or
pop
mov
inc
and
adc
movsl
inc
ret
inc
fstl
sbb
xor
jmp
ja
or
rorb
adc
pop
rcrl
pop
test
lods
push
test
andl
inc
xor
jp
scas
add
dec
out
pushf
cli
push
fs
jns
scas
lret
push
imul
cmp
into
xchg
scas
ret
sbb
je
pop
mov
rcr
icebp
stos
popf
into
jae
push
sbb
sbb
xor
mov
push
fs
add
xchg
lock
mov
and
xlat
stos
dec
ret
in
xor
lahf
mov
push
mov
and
pusha
push
inc
xchg
hlt
xchg
add
dec
xor
les
scas
sub
lret
push
ljmp
pusha
dec
jle
js
adc
add
or
and
rorb
ja
pop
xchg
and
out
nop
inc
and
and
ss
icebp
mov
add
push
pushf
inc
rorb
jnp
dec
stos
loop
in
xchg
ret
sub
fld
fisubrs
dec
pop
in
pop
xor
xchg
data16
xor
mov
jmp
push
xadd
jo
inc
js
mov
mov
inc
jne
jg
sti
jge
insl
cmpl
sub
ror
lret
jno
push
in
push
sbb
cmp
andb
add
fnstcw
mov
lahf
mov
jl
xchg
sbb
dec
mov
dec
cmp
push
das
imul
xor
in
pop
mov
adc
jmp
in
loop
mov
loop
stos
fisubrs
imul
insb
xorb
lods
push
jae
fsubrs
sarb
leave
test
scas
in
xor
push
div
jno
dec
push
gs
es
push
stos
sbb
pop
push
push
gs
out
push
out
mov
ret
push
imul
xchg
jge,pt
mov
lcall
jp
sub
sahf
fisttps
push
std
mov
push
jp
xchg
cld
sbb
rcrb
cltd
or
fcmovbe
mov
or
dec
inc
jmp
push
insb
jb
xchg
mov
jle
enter
push
into
out
and
cwtl
pop
rol
dec
add
mov
addr16
jge
rclb
dec
and
outsl
push
xor
es
lds
mov
andb
mov
pop
xchg
popa
mov
jnp
add
popa
cmp
xchg
out
push
ret
dec
add
stos
mov
mov
lods
in
loop
cmp
sbb
decb
test
and
cli
fidivrs
dec
mov
xchg
es
daa
or
repz
cmp
fsubs
or
or
fiaddl
fadds
mov
xchg
inc
scas
cmp
adc
add
ret
dec
pop
and
loopne
movb
xchg
pop
jecxz
inc
push
push
lret
mov
mov
aad
inc
inc
jecxz
pop
add
and
out
push
mov
je
inc
loopne
in
xchg
int3
sub
call
addr16
mov
ljmp
jns
xchg
insb
fs
jnp
cmp
sbb
fs
mov
mov
idiv
fdivrs
lret
mov
xor
aam
and
mov
or
aaa
push
int3
dec
mov
sahf
pusha
xchg
and
mov
loope
add
jb
sub
sbb
xor
and
mov
mov
pinsrw
in
xor
out
stos
lods
aaa
mov
cmp
fisubrs
inc
in
xchg
mov
cmp
mov
xor
xsaves
mov
dec
pop
dec
add
add
pusha
jl
inc
push
scas
dec
stos
scas
dec
fcomip
pop
stos
sbb
and
inc
ljmp
mov
adc
dec
iret
call
loop
mov
mov
xor
aam
xchg
stos
dec
loop
fstps
jb
in
fnop
ficomps
into
fstl
imul
or
and
repnz
addr16
cltd
inc
mov
andl
mov
loopne
dec
xchg
popa
add
mov
in
cmp
fucomip
call
pop
insw
stos
ja
push
add
xchg
outsl
stc
imul
pop
les
cmp
cmp
arpl
leave
imull
data16
test
or
sbb
lods
test
push
add
jle
loopne
in
jg
enter
sbb
nop
in
outsl
and
out
mov
ds
divb
mov
dec
arpl
adc
leave
mov
mov
lret
lret
loope
push
jp
xlat
pusha
ja
out
imul
hlt
and
popa
inc
jl
mov
add
xchg
mulb
popf
lods
movsl
outsb
cmpsb
test
inc
xchg
mov
add
sbb
adc
fsub
out
loope
mov
mov
sbb
mov
lcall
mov
add
in
cmp
mov
adc
push
pop
enter
fs
in
daa
pop
adc
insl
ljmp
push
ss
ljmp
out
rolb
push
mov
add
ja
jle
and
xchg
mov
insb
call
sub
inc
mov
cs
sbbl
or
mov
fdivrp
and
addr16
mov
push
dec
pop
movsl
pop
dec
scas
gs
lods
pop
lret
nop
jno
hlt
je
mov
mov
jecxz
out
shll
adc
sub
mov
fisubs
nop
lds
cmp
dec
xor
fbld
or
jecxz
xchg
imul
aaa
enter
or
cmpsb
mov
ss
je
nop
mov
fwait
int3
fmull
aaa
inc
roll
dec
cmpsl
or
leave
int
into
insl
subl
xchg
inc
test
icebp
out
pop
fimull
mov
sub
jmp
mov
jno
fstpl
addr16
cmp
arpl
and
mov
sti
addr16
lds
aas
clc
into
jbe
jmp
add
testl
addl
sbb
xchg
sti
mull
xchg
mov
cmpsl
hlt
dec
pop
ds
test
aas
cmp
xchg
std
jmp
movb
lcall
push
push
mov
lds
xchg
dec
xlat
xchg
push
lret
and
push
incb
cmp
xor
mov
pop
fsubrp
jbe
xor
loop
jmp
test
popf
ds
pop
lret
mov
pop
cmpsb
mov
js
lock
add
jbe
add
push
push
inc
sbb
int3
aad
push
ss
fucomip
mov
repz
fsub
jp
cmp
sbbb
lcall
outsl
test
test
loopne
jmp
push
scas
gs
movsb
daa
cmp
idivl
lahf
mov
push
out
in
gs
cmc
cs
sub
or
mov
xor
addl
repnz
pop
rcl
fwait
push
xchg
cmc
cli
sbb
mov
lcall
mov
xchg
push
xchg
mov
imul
repz
cmpsb
outsb
push
pop
lret
js
cwtl
add
sbb
ret
xor
xor
daa
mov
add
movsb
mov
inc
mov
out
xor
xor
or
inc
into
ret
xchg
dec
lahf
movups
jnp
or
stos
dec
xchg
cld
lods
test
outsb
fildll
push
js
cmp
cltd
cwtl
loop
sbb
or
aaa
add
and
mov
mov
mov
mov
daa
int
jmp
adc
push
jmp
adc
sbb
cmp
xor
je
xrelease
iret
loope
out
lret
lods
xor
outsb
add
cmpsl
loope
jne
shl
xchg
adc
and
in
popa
xchg
loop
popa
rorb
lcall
pop
in
fcmovu
jnp
iret
cmp
popa
int3
aad
pushf
or
mov
or
jno
dec
fucompp
mov
aas
dec
jbe
cmpsb
lret
push
shlb
mov
mov
mov
mov
inc
dec
sub
arpl
rorb
insb
jg
fcoms
sub
in
ret
mov
movb
stc
adc
addr16
popf
sbb
or
test
xor
jmp
pop
dec
xchg
jae
push
jecxz
rol
aad
push
or
or
int3
aad
clc
in
pop
xor
frstor
jle
add
jecxz
inc
or
adc
and
push
mov
aam
cmp
sbb
loopne
lcall
cmpsb
sbbb
mov
jecxz
xor
inc
outsb
addr16
xorb
cwtl
lret
xor
adc
push
icebp
lea
adc
add
pop
dec
add
and
add
push
imulb
cli
mov
das
loopne
int
dec
mov
pop
enter
sub
jno
sarb
ficoms
xchg
movsb
ret
mov
insb
hlt
cltd
mov
jmp
inc
mov
pop
not
jmp
test
repnz
lods
xor
mov
push
mov
test
xchg
js
jle
inc
xchg
das
jl
fnsave
imulb
call
mov
add
rcl
nop
nop
push
sbbb
adc
aas
arpl
es
fildll
repz
mov
adc
mov
inc
test
cmp
mov
mov
lret
cmc
cli
fisubl
adc
sbb
testl
xchg
and
mov
mov
mov
je
mov
mov
dec
cmp
and
or
mov
rolb
and
and
imul
push
mov
push
scas
xchg
xor
cmp
js
mov
jns
mov
dec
andl
cs
out
gs
in
push
and
loope
and
mov
shlb
push
daa
enter
call
add
mov
sub
arpl
push
jbe
cli
insb
cmpsl
mov
xchg
leave
outsb
mov
push
ret
dec
fadd
add
inc
sbb
or
pop
jae
loopne
and
ds
or
stos
dec
nop
in
adc
loopne
mov
xor
cli
jge
ljmp
out
aaa
xor
shrl
orb
adc
cmp
inc
pop
in
mov
daa
fiaddl
xor
lods
insl
loopne
jo
sub
iret
and
add
sbb
aad
fisttps
mov
cmp
mov
lods
adc
add
adc
cmpsb
jns
das
xchg
mov
dec
mov
or
lods
fistpl
ja
mov
cmpl
add
cmp
bound
pop
negl
addb
imul
in
mov
out
faddl
mov
mov
jmp
out
popa
dec
iret
xor
sbb
pop
in
cmp
dec
pushf
cmp
mov
jge
sub
sahf
mov
pop
jecxz
push
inc
mov
mov
cld
gs
loopne
loope
cltd
loop
lock
xor
xor
loop
jg
call
add
sbb
in
fmul
bound
icebp
roll
cwtl
sbb
jne
mov
jae
pop
dec
jecxz
outsl
adc
daa
outsl
mov
rolb
sbb
imul
adc
add
xor
adc
fs
lea
jb
add
in
je
or
mov
fwait
xchg
lock
aad
arpl
shlb
inc
cli
adc
mov
cld
xchg
mov
rorb
lcall
push
xchg
das
lds
mov
cmp
xor
imul
cmpsb
cltd
sbb
vcvtps2dq
fistpl
jns
pop
mov
mov
jnp
jle
cwtl
iret
out
popf
mov
inc
scas
xchg
rol
leave
and
sub
ret
mov
mov
jbe
lcall
xchg
xor
jmp
fs
xchg
jmp
xchg
add
ret
xchg
frstor
dec
sub
cmpb
in
or
cmp
aam
sbb
and
mov
inc
les
xlat
cmp
or
cmp
and
out
out
sbb
in
testl
fs
rclb
mov
sarb
and
xchg
out
rolb
fisttpl
xor
add
hlt
pop
push
popa
mov
fadds
out
repz
pop
xlat
and
cmpsl
test
pop
imul
jbe
sbb
lret
stc
add
subb
lahf
push
out
cwtl
sub
int
test
sbb
aas
in
ret
xchg
mov
subb
sub
push
pop
dec
dec
fldl
or
add
jl
pushw
shr
add
xor
and
adc
sbbl
cmpsb
mov
add
dec
pop
mov
enter
sbb
lds
lea
mov
test
cmp
shll
lret
aam
xchg
sahf
push
into
pop
call
and
push
adc
pop
xor
leave
leave
das
adc
mov
gs
add
adc
or
sub
cmp
pop
ret
add
sub
xchg
das
pop
pop
icebp
jle
cmp
daa
mov
imul
push
dec
aam
jg
pop
add
mov
sbb
and
jae
stos
pop
arpl
sahf
pop
aam
jmp
mov
lock
sahf
mull
test
dec
jmp
jmp
call
in
jmp
adc
loopne
repz
or
mov
jns
in
jbe
xchg
adc
jecxz
sti
mov
out
es
xchg
dec
popa
and
scas
dec
decb
mov
xchg
jo
leave
or
xchg
cs
mov
arpl
sbbb
faddl
sahf
mov
mov
xor
fs
adc
xlat
fbld
pop
orl
and
xor
inc
mov
scas
das
xor
out
out
int
pop
insl
jne
xchg
les
fwait
jne
xchg
rcll
xchg
cmp
mov
test
ljmp
add
lods
outsl
push
pop
mov
mov
cmp
jmp
jge
jecxz
adc
jb
cmp
lea
lock
nop
stc
cmp
jbe
hlt
push
repnz
loop
test
adc
sarb
cli
cmp
aaa
xor
mov
ficomps
leave
lods
inc
xchg
pop
sbb
test
ret
adc
out
or
je
scas
sahf
mov
ret
in
loopne
loop
or
xor
mov
sub
loop
ret
dec
fsub
incl
mov
shlb
int
cmp
or
cmp
cltd
std
sbb
fwait
xor
jp
loope
arpl
sbb
xchg
xchg
aad
lds
jl
jp
jl
fildl
rorb
cmp
enter
dec
inc
shlb
jnp
iret
in
fsubr
adc
ljmp
and
and
fwait
dec
inc
mov
sbb
out
idivb
aaa
or
movsb
push
push
push
in
pushf
fmuls
push
enter
or
mov
inc
js
push
jae
mov
dec
jbe
or
xlat
pop
xchg
or
cmp
mov
das
arpl
and
cld
ja
mov
mov
fs
aam
cmp
xchg
cmpsl
pop
ljmp
sub
sub
mov
xor
into
jp
push
mov
mov
mov
adc
pop
inc
mov
push
xor
sti
cmp
pop
jbe
push
cmpsl
pop
pop
dec
pop
lcall
clc
adc
fsubrl
jecxz
or
sub
imul
pop
xchg
iret
jmp
repz
into
add
adc
xor
mov
adc
lahf
cmp
mov
or
pop
sbb
arpl
sti
je
mov
fwait
cmc
add
cmp
and
imul
mov
test
pusha
lods
mov
push
push
ret
inc
dec
pop
dec
in
sti
xchg
add
les
mov
int3
push
lahf
out
and
and
xor
and
push
sbb
in
push
cltd
mov
or
cmp
arpl
and
jnp
shll
loope
mov
fsub
stos
or
js
xor
sub
sarl
xchg
sbb
add
jno
add
cmp
sbb
pop
and
or
sbb
add
test
inc
add
and
lret
push
jno
scas
clc
push
cmp
imul
sbb
mov
add
jg
push
xchg
pushf
inc
and
cli
xchg
push
icebp
push
ret
loop
loope
aaa
mov
add
out
push
in
out
fisubrl
jne
jae
out
cmpsb
mov
add
dec
out
lret
cmp
das
or
mov
sub
jne
mov
sbb
mov
xchg
dec
sub
aad
xor
sub
stos
jl
shll
in
ret
adc
dec
inc
fnsave
pop
mov
push
aam
pop
insb
push
mov
push
imull
jp
xor
rorb
inc
mov
daa
pop
cbtw
mov
cmp
push
lahf
sbb
xlat
jge
push
sbb
int3
out
jns
sub
push
mov
js
shl
sbb
enter
mov
fistps
pop
add
mov
cmp
popa
push
enter
jae
push
shll
and
movsl
call
mov
or
gs
popf
pop
pop
and
je
xchg
push
stos
arpl
loope
fs
xchg
mov
aas
pop
pop
mov
jl
and
arpl
cmpsl
push
aad
jbe
mov
test
ljmp
daa
or
aam
das
and
mulb
xchg
jle
hlt
dec
pop
imul
stc
ficompl
aad
mov
cwtl
pop
dec
fimuls
mov
int3
mov
mov
jns
jns
repnz
mov
sub
or
adc
scas
adc
jge
mov
mov
xchg
mov
mov
ds
or
sbb
or
adc
jge
xor
je
mov
arpl
dec
jp
rorl
inc
jns
stc
out
dec
adc
repz
mov
cmp
dec
cmc
or
inc
sub
lea
insl
and
sbb
leave
pop
xchg
mov
lret
add
jg
mov
adc
stos
or
mov
sbb
outsl
insl
mov
ss
xor
cwtl
mov
aad
cmc
lods
ljmp
lret
cmpsl
gs
xor
sub
aaa
lret
das
clc
loope
mov
sbb
pop
test
mov
inc
test
inc
xor
fbld
pop
outsb
xor
pop
or
bound
jns
in
cmpsl
lods
xchg
push
repnz
mov
pop
and
lds
push
stos
pop
and
fadds
outsl
mov
cmp
lods
mov
sub
enter
pusha
jl
mov
cmc
call
xlat
jae
mov
mov
das
inc
testl
jg
movsb
enter
in
enter
sub
mov
lods
cmpsl
pop
adc
and
and
mov
jo
sahf
or
testb
cmp
jmp
push
int
daa
scas
jecxz
jne
in
pop
repnz
lock
fwait
cmpsb
xchg
sub
mov
inc
xor
inc
jecxz
jge
loopne
notb
into
aas
out
popa
jg
std
dec
add
sbb
sbb
or
mov
jb
shrl
popf
sbb
orb
adc
aad
add
push
shlb
insl
fwait
mov
mov
mov
cmp
hlt
pop
xchg
sub
sahf
loope
or
and
in
scas
push
fisttpll
push
xchg
mov
xchg
adc
imul
lock
or
pop
mov
inc
or
add
aaa
add
mov
neg
push
cmc
test
and
and
call
mov
std
notl
shlb
pop
aam
fldenv
inc
jecxz
ja
xchg
dec
xor
push
jno
stos
test
scas
push
mov
and
imul
fwait
lcall
nop
test
inc
negl
insl
pop
icebp
es
scas
lods
cmpsb
add
xor
hlt
mov
adc
aaa
pop
cmp
ds
mov
jmp
add
pop
cli
ljmp
jecxz
xchg
jnp
adc
loope
and
inc
inc
cli
mov
ja
inc
jge
add
xor
pop
stos
shrb
inc
sub
sub
movsl
movsl
rcll
lock
sbb
inc
jnp
push
mov
sahf
mov
mov
fisubl
adc
mov
popf
into
mov
cmpsb
cmp
mov
mov
inc
out
pop
mov
sahf
and
mov
mov
imul
inc
and
nop
js
sub
and
stc
in
cmp
xchg
in
xchg
les
test
out
pop
mov
bound
pop
loope
js
push
stos
enter
cmp
cmp
test
mov
aad
xor
adc
jge
in
xchg
xchg
addr16
cmp
xchg
in
subl
call
xchg
addr16
sub
push
and
push
xor
into
fcomps
jbe
mov
pop
xchg
mov
test
xchg
sbb
cwtl
mov
mov
je
iret
dec
pop
push
test
test
dec
fadd
adc
fs
sbb
out
out
cvtps2pi
pop
sub
pusha
roll
repz
mov
pushf
mov
sti
push
adc
popf
sub
adc
int
push
push
in
sahf
mov
cltd
jge
gs
lds
inc
inc
jle
imul
mov
testl
cmc
mov
pop
jnp
add
cmp
frstor
ja
bnd
mov
cld
test
pop
add
leave
mov
outsb
and
mov
fbstp
mov
push
lea
inc
inc
loop
inc
int3
push
mov
sub
adc
cmp
and
negb
stos
pop
lods
in
sbb
ljmp
adc
or
jae
iret
mov
mov
push
or
in
xchg
imul
aad
jne
repnz
push
jo
jge
cmp
mov
push
shlb
xchg
mov
mov
push
mov
lahf
sub
push
out
and
movsb
call
jbe
rorl
outsl
fwait
or
jne
and
xchg
lret
push
enter
clc
fwait
mov
inc
cmp
cli
sub
int
loop
push
sub
pop
xchg
decl
subb
movsl
lods
sbb
mov
cmpsb
les
pushf
les
jmp
adc
and
adc
inc
xchg
icebp
jge
adc
push
jp
xor
mov
fldl
xlat
sub
mov
push
movsb
push
mov
fisubrs
loope
jle
aaa
xchg
push
adc
push
fimull
popa
push
into
lea
fstl
in
loope
rcrl
mov
cmp
mov
sbb
sub
pop
bsr
loopne
mov
inc
push
pop
mov
popa
sub
mov
xchg
cmp
les
jb
jge
jo
xchg
inc
out
inc
sub
inc
addb
fcoml
icebp
pop
sub
nop
insl
sbb
or
loopne
das
push
call
arpl
pop
outsb
lahf
jnp
outsb
je
adc
in
jae
outsb
mov
mov
mov
mov
mov
add
scas
jne
mov
nop
push
push
xor
mov
sub
dec
mov
jb
cmp
or
in
jl
bnd
mov
jp
in
int3
int3
push
sbb
scas
rcrl
orb
or
stos
pop
xchg
pop
mov
and
scas
fcompl
movsl
ja
adc
sub
push
nop
xchg
add
push
lret
or
jnp
sub
out
push
push
jb
shrb
xchg
pop
roll
jmp
stos
testl
xchg
push
mov
add
js
mov
xchg
mov
lea
xor
inc
lods
call
mov
mov
cli
push
xlat
xchg
imul
cmp
orb
dec
mov
lcall
add
xor
mov
pop
push
aad
test
dec
xor
call
fwait
xor
popf
ljmp
movsl
jecxz,pt
movhps
mov
mov
lods
mov
dec
movsb
rorl
imul
inc
movl
fldl
shrb
xor
sysexit
popf
push
inc
sahf
lock
sub
test
jnp
mov
cmp
and
call
jl
js
mov
insl
sbb
cmp
adc
mov
adc
jecxz
add
dec
sar
jp
sub
pop
xchg
in
out
mov
cmpsb
data16
mov
ljmp
int3
add
imul
pusha
ds
leave
scas
xchg
sub
push
fdivrl
out
mov
adc
rolb
mov
aaa
sbb
shr
xorl
mov
jae
mov
in
xchg
ffree
fldenv
adc
lods
outsb
jae
xchg
orl
cmp
jb
mov
ljmp
pop
sbb
cmpsl
dec
test
out
sbbl
inc
jb
fisubs
cmp
in
pop
aad
mov
ljmp
jo
push
scas
jp
mov
pop
push
bound
inc
dec
pop
mov
jmp
mov
call
jbe
adc
and
mov
lea
push
icebp
test
rcl
and
repz
sbb
lret
jne
ja
push
jbe
pop
movsb
lock
mov
sbb
lods
mov
dec
cmp
negb
or
jbe
and
movsb
xor
mov
imul
sub
scas
in
cmp
push
fwait
xor
jecxz
sbb
sbb
orl
lock
sbbb
push
cli
ljmp
jmp
xchg
mov
cld
imul
movsl
enter
clc
push
cmpsb
rorb
gs
jmp
cmc
adc
jmp
jl
xor
push
call
pushf
mov
mov
cmp
test
test
sub
js
mov
notb
sub
adc
jl
mov
mov
call
inc
shll
flds
inc
push
js
repnz
push
and
jmp
and
push
xchg
push
adc
test
jmp
das
pop
xchg
repnz
mov
pop
call
mov
ficoms
loop
fildl
mov
out
xchg
sti
xchg
and
mov
ljmp
ret
stc
mov
fs
sub
xchg
mov
insb
cmp
mov
imul
es
cmp
xorl
jns
negl
in
nop
es
or
cmpsb
jbe
jmp
ret
test
aad
inc
pop
test
popf
scas
ret
or
add
dec
mov
jge
lret
push
jno
sbbl
push
push
inc
and
and
mov
cwtl
jecxz
adc
jp
fcoms
jg
outsb
insb
hlt
mov
adc
dec
movsb
outsl
test
les
jne
idiv
popf
jge
popa
cmc
mov
cmp
cmp
insb
push
ja
push
std
cmpsb
cltd
imul
stc
and
pop
sbb
push
jmp
mov
sbb
inc
fisttpll
add
jmp
xor
incl
jmp
mov
adc
out
cltd
dec
xor
scas
std
xor
mov
lock
sti
mov
add
loope
arpl
jp
add
mov
sbb
inc
mov
lods
jmp
repz
xlat
xchg
stos
fisubs
aas
fwait
mov
pushf
xchg
pop
ret
rclb
adc
inc
pushf
mov
dec
xor
mov
ljmp
sti
cwtl
xchg
out
xchg
fcoms
dec
out
or
xchg
test
jae
sti
jno
sbb
sti
and
push
fcmovnbe
ss
sub
cmp
dec
in
shlb
push
dec
ljmp
lock
cmp
cmpsl
jno
pusha
inc
cli
pusha
mov
jnp
and
fidivs
push
rorb
fnstsw
jb
dec
jl
orb
pop
sub
inc
sbb
xchg
xchg
outsb
xchg
pusha
adc
add
mov
mov
idivb
jmp
and
ret
jns
cmp
jnp
daa
xor
sub
adc
mov
hlt
ljmp
mov
add
push
mov
push
pop
ret
inc
xchg
cmc
mov
ljmp
enter
lret
mov
inc
aas
and
lods
mov
dec
out
adc
mov
mov
arpl
push
lret
xchg
mov
int
dec
ja
addb
int
test
addr16
imull
mov
xor
jmp
sbb
rclb
out
pop
daa
sbb
mov
lods
mov
mov
test
addl
es
hlt
cli
ret
fnstenv
xchg
sbbb
scas
mov
aam
xchg
cmpl
lahf
adc
pop
stc
jb
or
nop
out
in
pop
fisubl
mov
sbb
imull
ret
push
arpl
dec
pop
outsl
add
cmp
push
push
mov
mov
pop
imul
fdiv
dec
sbb
ja
and
ljmp
xchg
popf
daa
fsubr
jns
repz
push
fiadds
sti
adc
nop
fcomps
in
sub
mov
movsl
lods
lcall
sbb
mov
movsb
insb
mov
sbb
mov
pusha
push
cltd
jge
test
sbb
jb
nop
xlat
xor
test
xchg
mov
pop
dec
sbb
push
adc
dec
xchg
hlt
push
xchg
subb
sub
les
fst
shlb
ja
dec
mov
push
mov
push
sbb
pusha
jge
and
xor
subl
out
jl
dec
daa
test
inc
test
ds
js
jp
bound
mov
sbb
out
or
in
shr
imul
mov
test
data16
scas
fcomps
sbb
push
sub
arpl
pop
outsl
in
aam
push
movb
rcrl
mov
push
dec
xor
fimull
dec
ljmp
jp
push
hlt
aas
popa
inc
sub
mov
in
data16
sbb
movsb
lods
adc
mov
push
inc
dec
pop
hlt
jecxz
int
jno
add
out
sub
add
ret
aas
aas
frstor
daa
adc
xor
cmc
imul
je
pop
xchg
lods
sbb
cmp
lea
pop
aaa
ss
xlat
adc
xchg
cltd
adc
call
xchg
test
inc
sbb
neg
repnz
jbe
daa
and
insb
call
xor
data16
dec
lods
js
lods
cltd
cmc
repnz
jmp
or
sub
inc
lret
inc
outsl
fs
mov
scas
cmpsb
out
fcompl
dec
mov
mov
imul
imul
pop
idivl
shll
dec
mov
out
aad
sub
ret
jg
and
dec
out
sbb
mov
cs
or
mov
and
stc
pop
mov
mov
cmp
aad
adc
es
xor
inc
mov
pop
cmp
addr16
clc
sbb
cmpsb
loope
xchg
jl
jae
cmp
push
jnp
xor
and
loop
cwtl
pop
sub
mov
in
test
push
or
or
pop
or
mov
in
lret
push
push
mov
pop
or
mov
dec
or
addl
sbb
test
test
fimull
test
cwtl
pusha
inc
rcrb
mov
dec
pop
lock
mov
ret
jg
hlt
adc
xlat
mov
les
test
jne
or
out
or
add
mov
out
insl
push
dec
mov
or
push
cli
shll
push
mov
in
out
and
mov
fsubs
pusha
into
cmp
lods
adc
cmpsb
std
insb
mov
cmp
and
out
lea
adc
adc
aam
add
jg
out
hlt
pushf
into
push
stc
xchg
mov
gs
ret
idivb
adc
out
cli
adc
inc
je
popf
in
push
push
lret
xchg
pushl
xor
dec
test
das
hlt
xor
rorb
test
adc
ss
mov
enter
cmpsl
fsubrs
jmp
out
mov
daa
push
outsl
iret
out
push
mov
shrb
adc
cmp
lcall
fisubl
push
xlat
repz
loopne
push
std
inc
lcall
aaa
sbb
cmp
dec
xchg
push
xchg
lcall
adc
inc
mov
shrb
pop
or
cmp
mov
jmp
stos
sub
in
xor
pop
push
dec
iret
ja
ret
pop
jg
or
mov
movsb
leave
mov
inc
push
out
sub
rolb
xor
sbb
cld
int
dec
cmp
pop
in
mov
dec
cmpsb
fimuls
dec
xorl
push
pop
ljmp
and
fstps
int
es
hlt
adc
popa
inc
push
push
mov
push
sbb
incb
out
adc
cld
popa
fnstsw
sbb
rcrl
adc
test
or
inc
xchg
test
addr16
xor
nop
rorl
into
ja
fstpl
mov
rcl
dec
mov
push
mov
and
repnz
scas
fmull
addb
add
add
jge
xorl
inc
ljmp
cltd
movsbl
leave
jl
ja
and
in
mov
out
and
cmpl
jnp
mov
ss
ljmp
scas
xchg
scas
or
fiaddl
loop
aas
dec
subb
dec
lock
aam
jg
pop
enter
mov
test
lea
pusha
aas
xor
cltd
lcall
fwait
popf
jl
pop
lods
cmpsl
cwtl
push
push
out
lcall
inc
push
subb
pop
push
or
clc
inc
sub
fwait
shlb
adc
inc
fwait
inc
insl
out
push
fs
cmpsb
and
xabort
pop
xor
sti
stos
adc
mov
mov
data16
lret
sti
arpl
movsl
mov
xchg
mov
loopne
push
pop
pop
mov
or
fwait
jb
pusha
jae
xchg
push
subl
xchg
test
lret
or
addb
jle
lods
shl
jne
mov
cmpb
sub
dec
push
push
fwait
inc
add
mov
aas
scas
daa
mov
inc
push
pop
lods
add
lcall
jae
inc
xchg
mov
sbb
fdivrs
jge
pop
ljmp
push
outsb
out
dec
adc
push
xor
xor
popf
sub
popa
push
mov
in
pop
fldcw
packssdw
xor
cmp
andl
out
or
daa
les
shlb
push
push
lods
roll
cli
jmp
inc
and
mov
adc
mov
sbb
cmp
adc
test
stos
mov
dec
pop
loop
xor
mov
cmp
ret
je
adc
xor
arpl
popf
jle
std
cmp
out
repz
test
mov
adc
cltd
emms
daa
mov
sub
mov
mov
mov
repz
xchg
add
cli
cwtl
imul
test
int3
in
mov
outsb
pop
xor
xchg
data16
and
mov
dec
push
inc
dec
fnstcw
mov
add
adc
and
movsb
dec
test
test
sub
mov
jns
and
xchg
cmp
ret
push
test
jnp,pt
fistl
sbb
adc
cmc
movsl
pop
nop
lods
mov
fistpl
js
push
insb
add
xchg
jo
lret
lret
dec
push
insl
int
mov
fdivl
pusha
cld
fwait
insl
repnz
call
pop
mov
inc
sub
scas
popf
popa
pop
or
fcomps
jge
leave
jmp
filds
push
cmpsl
call
dec
push
std
mov
adc
mov
imul
out
pop
loop
cwtl
xchg
sub
push
pop
adc
rol
pop
ret
lock
push
fildl
ljmp
ret
mov
lcall
jge
xchg
dec
imul
xchg
xchg
push
fsubr
into
flds
test
and
jno
lcall
mov
sbb
stos
popa
ret
mov
fnsave
lret
sbb
in
mov
or
mov
xchg
sub
loop
lcall
stc
push
adc
jge
sub
push
jmp
int3
dec
cmp
loop
addr16
sub
jmp
push
jecxz
fildl
add
mov
daa
les
sub
sbb
lea
or
xchg
jnp
mov
fwait
xchg
test
lods
mov
jmp
sbb
and
push
out
test
push
jns
cmp
repnz
sub
xor
dec
ja
test
sub
fwait
lds
add
mov
je
ss
jae
cld
repz
xor
mov
lds
lret
inc
xor
lcall
jl
into
mov
loop
cs
das
push
sbb
clc
dec
int3
pop
push
popa
movsl
push
popf
adc
fxch
aas
xorl
fwait
sub
fidivrs
add
push
pop
and
mov
ret
mov
orl
push
xor
cs
mov
popa
cmpsb
mov
ljmp
mov
int3
mov
dec
jbe
test
push
pop
xlat
popl
test
sub
leave
jo
adc
loop
aaa
bound
add
les
out
jo
pop
sub
roll
and
int3
xlat
shlb
in
inc
sbb
sbb
add
fldenv
insl
push
aaa
inc
adc
sbb
and
cmp
pop
rcl
mov
xchg
jno
pop
cmp
sbbl
mov
mov
sti
in
add
add
push
leave
lcall
jge
pop
ret
mov
fmul
enter
cmp
and
jl
cs
cmpsl
fcompl
push
lret
push
enter
pop
xor
pusha
call
lahf
dec
xchg
movsl
jo
jbe
popa
pop
mov
fcmovu
cmpsl
pop
xor
and
ds
call
sub
aad
add
movb
lea
xor
pop
dec
sbb
pusha
adc
movsb
sbb
or
push
xor
ds
mov
sub
lahf
in
lret
push
xor
or
or
mov
out
popf
lret
mov
mov
pop
sarb
fs
pop
rep
sub
jne
cmp
sub
iret
jnp
je
or
mov
xchg
lds
sub
out
pusha
inc
cltd
dec
leave
bound
cmp
popa
jnp
sbb
jmp
cltd
xchg
mov
scas
stc
push
mov
leave
lcall
add
out
xlat
mov
push
lock
loope
lahf
loop
ja
mov
add
test
or
cmp
movb
sbb
jmp
aad
push
lret
je
push
mov
icebp
pop
imul
jb
scas
scas
test
insb
and
sahf
out
pop
mov
cli
jbe
pusha
jnp
mov
mov
fsub
test
xchg
int3
int
xchg
subb
cmp
data16
xorl
push
mov
mov
or
cmp
popf
jo
add
and
lods
pop
cmp
cmp
lds
lret
stc
es
add
push
inc
mov
subb
push
fs
int3
fbstp
aaa
jle
xor
pop
mov
mov
dec
jns
xor
dec
stos
addr16
aad
clc
adc
mov
sbb
jp
mov
jecxz
cmp
jl
inc
mov
int3
decl
adc
in
and
daa
cmp
xor
sbb
jnp
mov
out
add
insl
out
sbb
xchg
jl
int
arpl
mov
adc
out
sub
nop
jge
addr16
mov
pusha
in
nop
push
sbb
adc
rcrl
bound
in
push
inc
aad
in
xchg
add
mov
push
imul
arpl
cmp
pop
repz
imul
sti
ja
aas
and
jns
scas
int3
xorb
imul
or
mov
mov
pop
incb
push
cmpsl
out
fsin
mov
sbb
cmp
xchg
in
xchg
fwait
mov
lret
cli
sbb
dec
adc
cmpsb
mov
out
mov
js
lret
push
adc
mov
sub
shrl
or
mov
xor
xchg
and
js
jecxz
xor
jae
adc
jnp
mov
leave
push
adc
imul
add
loope
xlat
mov
mov
dec
adc
and
pop
sub
jmp
jge
ret
lea
aam
xchg
frstor
fistl
adc
or
pushf
repnz
leave
iret
mov
or
les
mov
fstpt
and
ficoml
idivl
mov
push
cwtl
mov
dec
test
lea
mov
jne
adc
pushf
mov
nop
inc
add
xchg
mov
pop
or
dec
pop
dec
out
and
pop
cmp
lret
lret
cltd
push
data16
mov
pop
xchg
je
scas
mov
ljmp
sub
les
lds
and
aaa
cmp
xchg
pop
call
imul
jl
inc
ret
mov
std
mov
mov
xchg
sahf
in
cmpb
pop
or
push
pop
scas
mov
and
ja
sbb
push
xchg
in
mov
iret
or
or
jo
or
dec
sbb
add
add
mov
out
mov
addr16
mov
stos
mov
xchg
cmp
cmpsb
cmpsb
push
ja
aam
pop
dec
mov
inc
je
enter
sbb
movsl
pushf
stc
push
jmp
inc
iretw
mov
sub
pop
shll
loope
mov
cmp
cld
mov
dec
sti
jnp
addr16
xchg
mov
jmp
and
xor
inc
push
rcl
pop
push
push
fs
std
bound
fbld
mov
dec
inc
out
test
call
mov
jne
rolb
cmp
shll
adc
int
inc
jnp
cmp
cmp
adc
sbb
push
mov
jnp
or
addb
xor
mov
push
sbb
scas
leave
daa
das
sbb
aas
inc
mov
fidivs
adc
sub
jg
xchg
jl
mov
movsb
loop
ja
and
mov
in
out
xchg
xlat
mov
pop
push
test
xchg
dec
xor
negl
xchg
leave
jge
mov
dec
fisttps
push
jno
popf
dec
lret
std
mov
into
aaa
fwait
and
sbb
mov
rcrl
divb
lds
xor
xor
sarb
ret
xchg
mov
jno
inc
mov
scas
ljmp
pushf
std
adc
mov
lods
mov
and
shlb
mov
mov
pop
shlb
nop
jns
jb
pop
xor
adc
pop
int
mov
sub
jae
sub
and
adc
xor
dec
dec
pop
shlb
xor
jp
and
loope
pop
pop
cmpsl
cmp
add
fnstcw
sbb
jno
cltd
xchg
mov
inc
cmpsl
inc
jl
dec
xchg
stc
dec
cmc
pop
push
mov
das
sti
fs
xor
dec
jge
dec
insl
lods
fisttpl
mov
repnz
fistps
sub
push
loope
int
and
mov
inc
inc
lret
dec
mov
rclb
xlat
lcall
cs
loop
dec
adc
lret
mov
test
and
adc
in
and
mov
pop
les
fidivs
mov
arpl
mov
push
fbld
test
mov
ret
scas
iret
inc
stos
pop
jo
cmpsl
xchg
stc
loop
mov
fidivrs
jb
jmp
ljmp
or
imulb
in
inc
dec
mov
in
mov
jns
xchg
push
xor
cltd
loop
jle
jmp
lahf
mov
mov
sub
and
sub
xchg
mov
sub
test
mov
idivl
jno
mov
out
and
mov
test
mov
mov
jb
arpl
fwait
jmp
lahf
xchg
sub
mov
xlat
pop
cltd
mov
fdivp
cmpsb
out
cmc
or
cs
mov
fs
pushf
aad
pop
add
shrb
add
xchg
cmc
stos
mov
sbb
fisubs
adc
repnz
jmp
inc
jb
jo
push
push
lahf
imul
fidivrs
adc
cli
pop
out
mov
scas
add
push
dec
xchg
mov
jne
jecxz
xchg
in
pop
push
loope
lahf
and
mov
add
lds
subl
pusha
es
sub
dec
lds
jmp
push
xor
flds
push
rorb
insb
mov
jge
pop
mov
mov
or
push
imul
out
sbb
lahf
sbb
imul
inc
sbb
mov
push
and
or
xchg
movsl
jb
fs
mov
cmp
mov
xor
adc
mov
mov
sahf
ljmp
sub
jno
pusha
sarl
jns
push
fs
xor
ss
cli
call
enter
jbe
ss
movsl
sub
jae
jecxz
scas
sbb
cmpsl
cmpsl
stos
fs
mov
cs
in
test
adc
mov
int
dec
jnp
mov
scas
sbb
xchg
mov
outsl
and
dec
cli
frstor
les
lock
pop
jl
je
push
add
mov
fs
or
jae
test
pushf
test
xor
cltd
push
cmc
lcall
and
pop
cmpsl
fsubl
adc
mov
mov
data16
lods
test
mov
shlb
mov
jo
out
paddb
stos
out
insb
pushf
clc
adc
out
lret
fldcw
cmc
push
cmp
inc
mov
push
rcrl
jge
mov
inc
fs
scas
cwtl
jnp
xor
xchg
dec
sbbl
xchg
out
jo
filds
popa
add
ljmp
lcall
lods
mov
sbbl
push
fidivrs
mov
aad
pop
push
test
inc
xchg
pop
movsb
and
xor
push
jp
adc
xor
push
fcoms
out
xor
push
lret
sbb
jl
inc
in
std
int
andl
sbb
cmpsl
mov
xlat
cltd
out
das
sbb
xchg
push
rcll
cmp
scas
ds
test
xlat
jmp
test
lods
mov
xchg
es
sbb
hlt
xor
mov
sub
add
je
xchg
shrl
inc
loope
cli
sub
jge
ds
xchg
xchg
scas
cmp
rcll
xor
add
sbb
je
aas
popf
mov
mov
jo
inc
cld
movntq
and
test
inc
jo
pop
push
and
arpl
test
jecxz
out
xchg
xchg
or
ja
dec
add
orl
inc
cmp
mov
fsubr
mov
scas
mov
js
rcrb
loopne
or
xchg
and
xchg
xchg
scas
or
cs
in
bound
pop
jl
or
and
mov
xchg
inc
mov
dec
mov
add
subb
jne
out
test
and
adc
mov
mov
inc
sub
lock
push
dec
mov
push
xor
xor
pop
add
pop
into
mov
sub
ja
pop
push
xchg
adc
inc
sbb
adcb
les
sbb
test
out
mov
bound
addr16
jne
add
xchg
test
ljmp
loope
cmpsb
in
cld
or
lret
pop
je
iret
or
loop
jmp
popa
sbb
rep
adcl
mov
sbb
add
roll
fwait
add
aam
gs
adc
out
call
dec
xor
pop
xchg
outsb
sahf
push
shlb
loop
jle
mov
and
dec
sbb
js
and
lret
movsb
insb
push
inc
dec
js
leave
fildll
int3
jae
mov
dec
ret
bound
push
add
out
add
fadds
xor
push
mov
out
insl
imul
das
inc
or
adc
fiadds
pop
dec
mov
sub
mulb
adc
mov
ss
inc
jl
add
psubusw
mov
push
cwtl
dec
negb
push
inc
shll
jl
mov
call
mov
adc
mov
jne
ja
sub
data16
test
cmpsb
cmc
hlt
mov
lret
jbe
fidivl
cmp
pop
int3
add
xchg
or
xchg
adc
xor
push
fisubl
jl
mov
lods
std
lret
cltd
nop
in
push
fmuls
pop
icebp
out
cltd
cmp
mov
int
test
test
mov
aam
add
cmc
xorl
mov
adc
pushl
add
das
mov
push
add
add
int
aas
icebp
sub
negb
dec
dec
jg
pop
ja
test
ret
call
jle
rcrl
rol
pop
mov
lcall
mov
cld
sub
das
outsl
jne
stos
dec
or
pop
mov
cmpsb
negb
mov
divl
addr16
jge
xor
xchg
ret
xorb
add
dec
mov
std
jmp
fwait
gs
push
mov
cmp
sbb
push
cld
sarl
test
adc
aas
enter
sbbl
int
insl
sub
lret
pop
or
ficoml
xor
inc
les
sarl
out
mov
int
dec
bnd
imul
pusha
mov
cld
lahf
clc
cmp
dec
pop
dec
fcmovnb
inc
cmp
jae
jl
ja
out
push
into
xchg
gs
dec
mov
les
dec
rcrl
xor
xchg
ja
fwait
xchg
out
xor
rclb
pop
pop
jbe
mov
cmp
mov
jb
movsb
push
dec
pop
add
cwtl
adc
pushf
lret
inc
dec
movsb
mov
mov
out
mov
mov
cmp
movsb
xor
fs
xchg
repnz
mov
insb
push
pop
cli
fcmovbe
push
in
fimuls
addr16
movsb
sbb
fidivrs
in
add
or
jmp
mov
cmp
pusha
in
mov
sbb
mov
jle
mov
xor
cmp
add
jmp
jmp
jo
add
imul
xchg
mov
call
push
in
fwait
push
xchg
sub
xchg
iret
mov
mov
push
orb
sahf
add
xlat
imul
xchg
ret
popa
aas
jne
xchg
jb
jo
xchg
mov
adc
lods
push
jnp
pop
pop
test
enter
xchg
jl
fcompl
dec
xchg
sbb
sub
fdivr
xchg
int3
pusha
icebp
pop
xlat
cmp
and
pusha
es
repnz
or
or
mov
loope
inc
enter
mov
loopne
lods
cmp
pop
xchg
jecxz
or
imul
push
add
test
xorl
inc
mov
lds
insl
push
mov
or
add
insl
lods
and
lods
jno
loope
inc
jns
stc
xorb
cwtl
xor
push
in
sti
in
sahf
fadds
in
pop
adc
xchg
cmp
test
lods
dec
cmp
xchg
fldl
add
imul
jb
lahf
mov
inc
mov
push
ja
insb
lret
xchg
scas
in
push
mov
pop
aaa
cmp
out
cmc
mov
lahf
in
or
das
sbb
negb
loopne
jl
lods
xchg
sti
sub
scas
ja
icebp
ljmp
out
mov
fndisi(8087
pop
xchg
imulb
fld
sbb
rcll
ljmp
fcom
add
stc
jle
dec
or
enter
push
popa
mov
pop
loope
or
cmp
push
push
inc
dec
xchg
cld
xor
pop
inc
dec
xchg
arpl
jmp
fs
lret
in
incl
inc
dec
mov
jbe
mov
fs
pop
hlt
and
fs
fists
rol
xchg
add
std
jge
pop
inc
ja
sbb
fdivrp
inc
movsb
into
bound
movsl
jecxz
jecxz
push
lods
fs
push
xor
insb
xchg
pushf
pushf
mov
adc
gs
insb
popa
testl
rcl
clc
inc
jge
dec
daa
test
ljmp
dec
test
fs
hlt
xor
add
push
mov
out
adc
lds
push
inc
jno
mov
mov
mov
loope
aas
or
in
adc
push
sbb
sub
jbe
sub
pop
ss
and
pop
in
addr16
mov
cli
mov
adc
bound
daa
xchg
shrl
adc
negl
push
mov
mov
jne
ret
xor
in
daa
pop
cmp
and
movb
bound
sbb
pop
ja
jb
out
mov
mov
cmpsb
in
fsts
out
xchg
push
repnz
les
sbb
xor
stos
pop
fcoms
cld
je
jns
imul
or
lods
mov
pop
sbb
lea
mov
das
andl
mov
jnp
jle
adc
fs
gs
xchg
std
out
sbb
mov
into
filds
add
sub
jae
sbb
lods
xor
ja
ja
xchg
popf
adc
jbe
pop
imulb
inc
mov
cmp
inc
xchg
xchg
mov
sarl
out
outsb
repnz
dec
jle
je
fstpt
adc
xchg
js
movsl
push
mov
js
inc
sbb
fs
add
fwait
pop
mov
jmp
sbb
les
jb
stc
mov
mov
sbb
hlt
and
mov
das
push
dec
push
out
cwtl
imul
enter
lods
leave
fwait
mov
insl
scas
pop
jmp
mov
enter
lahf
in
fstl
fldenv
jae
mov
mov
shld
sbb
in
adc
enter
fs
add
pop
pop
mov
push
in
and
and
push
lods
jmp
cmpsb
in
push
sbb
pushf
movsb
sti
push
push
sbb
addb
andl
mov
jle
or
cmp
cwtl
arpl
or
or
scas
outsb
pop
popf
xor
push
xchg
std
xchg
movsl
jns
lcall
and
pop
mov
and
in
pop
in
fcoms
nop
in
mov
fnstenv
and
ja
inc
arpl
add
push
jmp
out
ret
adc
push
pop
flds
push
or
decb
mov
mov
jbe
adc
lock
xchg
testb
or
rol
decl
adc
cmpb
ret
pop
lods
or
mov
or
mov
mov
adc
pop
adc
stos
dec
ds
icebp
rorb
lret
fbstp
mov
loopne
fidivrs
mov
dec
leave
dec
adc
orl
or
rcr
mov
lea
xor
xlat
xchg
xorl
add
xchg
adc
mov
cmpsb
add
lar
pop
ss
stos
int3
cmp
mov
int3
mov
mov
imul
sbb
sub
sbb
fbld
adcb
push
jmp
or
or
cmpsb
mov
xchg
dec
add
cmpsb
jae
xchg
push
iret
and
cld
ds
test
loop
push
ss
les
jp
mov
jmp
mov
frstor
sbb
sbb
fwait
mov
cmp
mov
out
ja
imul
in
loop
xchg
test
or
pop
ss
cltd
or
cmpsb
inc
sbb
pushf
inc
pop
js
insl
es
jmp
pop
sbb
repnz
imul
out
and
std
mov
pop
cmp
or
fwait
mov
fwait
pop
sub
and
sbb
mov
xor
or
add
loope
stc
call
cltd
and
frstor
and
dec
pusha
stc
jmp
das
shl
ss
sbb
cmp
push
dec
lods
imul
lcallw
lahf
test
clc
int3
or
inc
add
call
popl
enter
mov
inc
push
lock
sarl
popa
mov
nop
lret
lea
outsb
lods
aam
push
ds
dec
lahf
cmp
iret
xchg
fcompl
fisttpll
mov
inc
in
mov
ljmp
out
dec
call
test
add
out
or
xchg
arpl
dec
xor
ss
test
fs
ret
inc
mov
xchg
test
dec
mov
mov
push
sti
subb
xchg
daa
jmp
ret
movsb
inc
fmulp
cmpsb
push
cmp
xchg
arpl
pop
xor
in
sbb
aaa
jo
cmp
andb
cmp
shrb
or
outsl
cltd
cmc
enter
movsl
sub
test
xchg
cmpsl
jmp
sub
mov
cld
cmp
and
cli
ja
cmp
test
movsl
test
ret
pop
leave
jmp
pop
inc
push
push
in
pop
loope
jle
mov
les
fisttpll
mov
mov
js
or
mov
mov
xchg
pop
cmp
jl
mov
js
loope
dec
push
mov
cltd
push
inc
mov
xlat
jbe
adc
push
call
jg
mov
pop
sbb
sbb
cld
mov
xor
xor
lahf
jns
mov
fidivrl
mov
xor
cld
and
sub
paddb
xor
xchg
mov
sub
and
movsl
sbb
jae
push
rorl
add
mov
jbe
adc
pushf
push
int3
push
mov
aaa
loope
fwait
add
cli
jnp
cs
movsl
aaa
inc
inc
fs
and
jmp
mov
icebp
mov
dec
ljmp
or
mov
lcall
adc
jno
mov
jmp
stos
jl
lret
inc
mov
jecxz
fnstenv
std
dec
jb
or
add
inc
pop
movsb
jmp
mov
pop
jmp
fsubrs
inc
inc
xor
jle
or
divb
movsl
push
jp
fnstenv
shrl
jno
jne
mov
insl
dec
jns
cmp
lcall
xchg
xor
sub
jne
jp
arpl
mov
pop
jo
pop
add
jmp
call
movsb
push
fldcw
in
mov
cmp
push
out
int
pop
popa
adc
clc
mov
andl
cmpsl
ffree
mov
dec
inc
incb
sti
sar
pop
aad
aam
aas
repnz
bound
and
inc
fldcw
jp
out
je
fidivs
pop
adc
pop
loopne
xor
js
inc
inc
mov
or
and
dec
xchg
fsubs
and
pop
mov
in
mov
adc
in
fimull
shrb
inc
pop
or
test
xor
jnp
and
int
cld
dec
mov
out
loop
stos
scas
jae
outsl
cli
fs
jnp
fistpll
popa
xchg
cmp
test
pop
xchg
jno
pop
xchg
jmp
fdivr
mov
xorl
mov
icebp
and
mov
push
aas
lods
xor
push
outsl
inc
mov
out
repnz
popa
insl
loopne
add
loope
cli
stc
pushf
movsl
loop
or
pop
push
jmp
mov
shll
shlb
add
lahf
sub
cmp
fbld
pop
sbb
lock
jo
xchg
xchg
rolb
gs
mov
jo
cmp
iret
in
and
test
sbb
es
jle
daa
push
stos
daa
lahf
out
loopne
xchg
adc
test
jle
cmp
je
sbb
test
stos
in
add
mov
subl
shll
imul
inc
negl
jbe
mov
push
add
sahf
inc
push
sahf
inc
sbb
pop
addr16
jbe
ds
hlt
fidivrl
push
cmpsl
mov
add
xchg
or
dec
lea
out
pop
in
sub
out
dec
mov
xor
lock
xchg
pusha
sub
pop
jb
lds
imul
movsl
mov
jo
daa
dec
ljmp
xchg
and
scas
and
pop
rolb
ret
mov
imull
cmp
jg
cmpsb
idivl
pop
rcl
stos
cmp
jge
movd
scas
cld
cmp
lods
xor
int3
xchg
enter
mov
push
lret
adc
pop
enter
jp
push
sbb
jmp
mov
loope
out
jb
xchg
pop
scas
scas
cmp
popa
push
bound
sbb
inc
mov
mov
lret
nop
fsub
sub
cmp
popf
inc
jne
jnp
sub
lcall
push
outsb
add
pop
and
movb
dec
cwtl
sahf
cli
stc
addr16
pop
dec
incl
pusha
inc
jg
daa
stos
pop
pop
dec
faddl
mov
push
sub
jecxz
dec
and
ljmp
xchg
addl
add
aas
mov
ficoml
mulps
imul
and
inc
mov
in
aam
scas
jno
nop
mov
insb
jecxz
xchg
shrl
roll
mov
stos
lahf
xchg
int
inc
dec
add
test
ret
xchg
js
pop
push
iret
out
dec
lea
dec
push
orb
outsb
pop
xorb
pop
jne
fwait
jp
push
loope
lret
mov
xchg
jecxz
je
fiadds
test
loope
outsl
js
cmp
in
lret
dec
xor
adc
aas
test
mov
lahf
call
xor
out
and
ds
inc
push
sahf
orl
xor
lock
ret
and
pop
jle
ds
scas
ret
or
std
xchg
inc
out
sbb
dec
aas
sub
sub
pop
mov
stos
inc
mov
and
repz
das
adc
and
rcrl
inc
pop
shl
mov
aad
rol
dec
sub
jl
cli
inc
pop
aam
xchg
fcompl
add
orl
jecxz
dec
lahf
add
cmp
pop
mov
test
fimuls
enter
les
mov
or
outsl
inc
outsl
jp
inc
adc
icebp
push
push
push
push
and
sbb
ret
inc
ret
push
popf
add
jge
mov
xchg
cmova
into
xchg
cmp
scas
adc
sbb
orl
pushf
mov
mov
jle
xlat
jp
mov
sbb
pushf
cmp
jne
mov
cmpsl
ds
test
pop
and
inc
out
xchg
or
jecxz
shrb
test
jg
ja
pushf
mov
outsl
pusha
mov
stos
sar
cmp
mov
test
les
nop
inc
push
mov
lods
rcl
xchg
dec
xor
cmp
and
push
dec
mov
pop
ja
cmc
add
add
xchg
leave
jl
shrl
movsl
sbb
ficoml
jns
mov
scas
fnstenv
add
addr16
std
cmp
scas
sub
pop
pop
mul
cmp
out
ret
inc
test
nop
ret
sub
xchg
mov
mov
cmp
mov
push
xchg
fdivrs
xlat
mov
scas
or
cltd
jl
clc
cwtl
cmpsb
mov
call
loope
mov
pop
and
imul
sbb
out
pusha
loop
cld
es
test
push
cmp
xor
bound
fwait
sub
rcrb
inc
les
pop
popa
bound
pop
inc
ret
movsb
sarl
fwait
inc
mov
std
shlb
mov
jg
ret
xchg
mov
addb
popl
sbb
repz
cmp
lret
out
mov
xchg
sbb
jno
scas
enter
call
xchg
ficompl
in
xchg
adc
inc
mov
aad
sbb
push
mov
mov
and
pop
bound
lea
sbb
mov
cltd
pop
push
mov
movb
jnp
sub
mov
ret
and
inc
jne
stc
adc
and
dec
loopne
xchg
outsl
push
dec
rorl
or
push
cmp
mov
data16
pushf
pop
dec
xchg
xchg
mov
mov
or
insb
dec
and
push
sbb
sub
cmp
push
icebp
shll
fneni(8087
lock
mov
shll
lahf
xor
cmp
lds
and
pop
mov
and
aam
cwtl
and
pop
sub
mov
or
cwtl
shl
push
cmp
lea
inc
popa
enter
hlt
jge
stos
jo
adc
sub
pusha
mov
les
test
aam
push
ds
mov
dec
and
jge
pop
dec
push
or
add
pop
add
cmp
loope
into
cld
cwtl
sbb
in
ror
mov
and
push
icebp
mov
mov
push
outsb
sub
mov
fstpl
inc
rcrl
mov
ficoml
xchg
pop
ljmp
add
into
dec
cmp
aaa
xchg
lea
repz
xchg
fnsave
imul
ficoms
fiadds
add
add
jne
leave
mov
pop
lahf
out
cs
add
push
sub
loop
lds
xchg
out
sahf
dec
sbb
add
cltd
in
fcmovb
pushf
cmpsl
push
xor
ficoml
enter
sbb
cmp
or
cmp
imulb
sbb
rep
push
lods
mov
pop
add
imul
push
pavgw
lock
add
push
dec
loop
sub
and
cmpsb
add
fiadds
push
out
addr16
and
adc
adc
popf
pop
repz
mov
push
and
dec
push
fwait
lds
mov
and
insl
imul
lret
add
mov
push
loopne
iret
mov
pop
adc
sub
scas
add
sbb
ficomps
mov
ja
inc
insl
lahf
mov
xor
out
test
dec
mov
mov
and
pop
insl
int3
rorb
add
pop
xlat
dec
or
mov
push
repnz
int3
imul
jbe
and
lea
push
mov
adc
sbb
and
mov
push
mov
addr16
lock
pop
and
lret
sub
pushf
xchg
cmp
call
push
fucom
sbb
mov
aas
xor
mov
or
cmpsb
adc
sti
data16
ficoms
shrl
ljmp
mov
sahf
js
cmp
mov
ret
lock
std
gs
loope
cmc
mov
cs
add
vsqrtpd
int3
and
push
cmpsb
mov
or
mov
iret
pop
fiadds
mov
neg
mov
inc
pop
jge
hlt
xchg
add
sbb
mov
popa
sbb
push
adc
xor
pop
and
sti
arpl
lahf
stos
shl
dec
mov
mov
jno
jecxz
repnz
dec
pop
nop
fucomp
lret
lods
rolb
stos
push
cmp
add
clc
cmp
mov
and
pusha
dec
and
insl
adc
setg
in
xor
mov
inc
xor
pushf
pop
push
fldl
cmp
pop
repz
clc
imul
push
enter
push
je
test
xchg
into
ficompl
flds
cmpl
int
pop
fs
pop
add
icebp
je
jnp
pop
mov
jl
mov
test
push
lret
and
lcall
sbb
js
rolb
inc
sbb
sbb
inc
popf
jecxz
in
dec
in
outsl
fnstcw
cmp
dec
scas
rorl
std
inc
lds
push
stos
or
je
pop
cmp
xor
cmpsl
lahf
psubq
push
cwtl
mov
lahf
mov
xchg
lret
out
or
jg
dec
lret
dec
fbld
add
pop
push
and
mov
mov
xchg
jno
jp
clc
fldl2t
adc
ds
jne
mov
dec
xchg
jp
arpl
pop
out
mov
mov
fisubrl
les
mov
pop
dec
sbb
mov
cltd
xor
rcll
push
stos
dec
push
xorb
adc
dec
lret
jp
addr16
ja
pop
jl
inc
dec
mov
fisttpl
xchg
arpl
sub
loopne
xor
mov
sahf
mov
jbe
inc
pop
xor
insb
mov
inc
jno
xlat
and
jnp
ljmp
sbb
int3
dec
mov
xor
sti
sti
fsubrs
sbb
shl
out
fcomp
cs
ljmp
sbb
jg
xor
sbb
movsb
sub
dec
mov
incl
push
repnz
lea
inc
and
movsl
mov
add
fidivrl
addr16
pop
xchg
mov
add
movsb
push
adc
pop
test
push
repz
jae
mov
jecxz
jle
test
test
fwait
push
mov
and
jl
into
mov
aas
sub
pop
insl
and
mov
or
icebp
mov
mov
cs
jecxz
divl
ss
cltd
push
dec
arpl
or
out
or
gs
xchg
inc
out
ljmp
in
stos
sahf
repnz
push
add
sbb
jecxz
or
aas
pop
adc
inc
jb
lahf
adc
stc
sub
popf
xchg
xchg
dec
sub
clc
leave
cmpsl
adc
lcall
pusha
pop
push
xchg
mov
cwtl
pop
add
xchg
loopne
shrl
rorb
jns
fldcw
dec
cmp
pushf
and
pushl
xor
fsts
notb
add
mov
sti
mov
sbb
icebp
lods
jmp
outsb
and
push
daa
fistpl
rorb
push
movsb
push
lret
mov
out
mov
mov
jmp
sub
jns
popa
xchg
jge
sub
xchg
cmp
movsb
sub
mov
out
pop
mov
mov
leave
push
push
mov
sub
xchg
into
add
add
xorl
dec
inc
jmp
inc
and
sub
mov
stc
lret
inc
fimuls
push
aam
aad
lcall
mov
popf
daa
loop
aam
push
cmp
test
call
imul
dec
aas
sbb
inc
cmp
add
cld
xchg
dec
enter
out
hlt
lcall
adc
xlat
inc
addr16
xor
adc
pop
jo
pusha
mov
loope
loope
mov
imul
lcall
rcl
sub
icebp
mov
mov
insb
mov
imulb
jno
test
inc
jg
xchg
xchg
loopne
test
xchg
push
repnz
jecxz
push
sbb
dec
add
jnp
hlt
icebp
enter
pop
jb
push
mov
pop
mov
inc
pop
cmpl
cli
imul
push
rol
es
aad
lock
adc
insl
rorl
or
neg
mov
jle
mov
xchg
inc
or
rorl
xor
mov
mov
popf
dec
xchg
mov
pop
stos
mov
mov
test
pop
test
xorl
psraw
out
and
add
push
xlat
adc
movsl
pmulhuw
les
mov
mov
push
jecxz
mov
sbb
je
push
or
push
repz
jns
mov
mov
dec
lret
fcomps
or
stos
push
stos
jmp
das
mov
iretw
repz
shr
mov
jge
cli
adc
cmpsb
mov
aaa
sarl
idivl
test
mov
repnz
mov
loope
daa
pop
adc
dec
sub
mov
shrl
mov
mov
sub
aam
cwtl
pop
xor
mov
pop
mov
fisubrs
add
push
imulb
aaa
into
fmuls
addb
insl
movzwl
jo
add
jecxz
cmp
jae
call
push
mov
testb
imul
loop
mov
lcall
push
add
imul
push
adc
or
ss
test
insb
or
out
jae
gs
loope
dec
xchg
adc
addr16
bound
sbb
mov
shlb
orb
nop
sbb
addb
jo
or
outsb
cli
pop
xchg
push
mov
sarl
jbe
jmp
imul
mov
rolb
jge
pop
das
aas
dec
pop
xchg
pop
dec
pushf
sbb
into
fistl
test
cmc
lret
pop
adc
aas
fs
mov
aaa
cmp
cmp
mov
xchg
hlt
iret
inc
ret
data16
mov
filds
shrb
xor
jne
xchg
push
sti
add
cmpsb
sub
ljmp
adc
mov
push
or
push
jnp
xchg
aad
mov
sub
jo
mov
mov
mov
in
pop
or
push
xchg
sub
loopne
fistpl
clc
imul
das
sbb
and
push
xchg
sub
ss
push
out
arpl
lea
or
push
push
je
or
sub
ljmp
ss
dec
out
lahf
cltd
jmp
jg
shll
sbb
xchg
sbb
xor
out
cmp
xchg
loope
xchg
xchg
rcr
out
ret
ja
repnz
in
movsl
jb
push
mov
shll
icebp
dec
aam
xor
out
hlt
push
mov
mov
andl
shrb
into
push
test
jb
dec
dec
add
pop
fnsave
and
jbe
xchg
pusha
sbb
inc
xor
test
push
fildl
dec
stc
cmp
pop
push
dec
imul
dec
cmp
inc
lret
pop
insb
push
leave
cmp
and
push
push
mov
pop
fistps
int3
movl
or
mov
or
mov
insb
xchg
aaa
cmc
cmpsl
mov
into
addb
test
jmp
sbb
jno
xchg
xor
xchg
pop
fstpl
or
mov
push
les
dec
mov
mov
dec
push
dec
mov
mov
adc
cmp
dec
cmpsb
sub
mov
insl
mov
imul
pop
rorb
outsb
stos
dec
iret
mov
outsl
loope
loop
out
add
sub
enter
mov
dec
and
aaa
cmp
loopne
sbb
addr16
fstpt
sbb
xlat
pop
add
hlt
ljmp
and
mov
lahf
jg
and
mov
and
jb
adc
imul
pop
mov
sub
push
pop
mov
or
mov
lret
lds
movsb
add
orl
fsubs
adc
jecxz
pop
and
sub
cmc
jle
std
mov
popf
mov
adc
dec
pushf
aaa
pop
leave
xchg
add
fs
lock
dec
std
inc
cmp
lea
inc
imul
outsl
adc
sub
push
cmp
fistpll
push
pop
nop
dec
sub
push
inc
sbb
pop
ret
imul
mov
xchg
mov
fnsave
outsl
sub
mov
hlt
fsubrl
mov
dec
dec
xchg
pop
and
out
dec
fcomip
cmpsb
in
imul
xchg
bound
dec
push
outsl
popl
xor
loop
adc
dec
push
push
popa
inc
xor
lret
repz
ret
popf
call
jge
outsb
daa
fwait
enter
push
push
mov
call
subb
rclb
and
xchg
test
sti
lahf
ja
jne
test
aam
rorl
sub
sub
mov
dec
dec
mov
sub
pop
dec
into
stc
push
adcb
mov
inc
cmp
dec
jmp
das
bound
xchg
or
pop
outsb
jmp
inc
enter
mov
dec
dec
sahf
mov
xor
cmpsl
cltd
insl
outsb
or
gs
pop
inc
dec
test
mov
pop
sbb
js
movsb
rorb
pop
add
push
fildll
jle
push
jle
into
and
push
add
test
add
out
fisubrs
pop
add
sbb
xchg
shrb
outsl
push
sub
add
pop
divl
push
add
cmpsl
data16
gs
stos
lret
rcl
iret
jg
jae
sbb
insl
in
xchg
pop
aas
call
ret
sbb
inc
xchg
pop
out
fsts
mov
enter
cli
movl
mov
jge
in
cmp
ljmp
or
xor
push
bound
push
lea
daa
mov
lods
or
movsl
rcll
nop
in
loopne
cmp
aas
sahf
fisttpl
push
pop
mov
mov
jle
jmp
xchg
add
dec
or
or
aam
rolb
push
movsl
mov
mov
aas
dec
dec
xchg
dec
mov
mov
bound
mov
dec
inc
dec
hlt
push
mov
push
mov
daa
push
mov
mov
and
aad
xchg
enter
dec
push
mov
dec
into
mov
push
inc
cmp
das
cmp
jno
mov
shll
pop
pop
aas
sarl
mov
pop
subb
cli
aaa
test
xchg
fsubl
ljmp
add
sub
cmp
arpl
push
xorl
adc
push
fidivl
std
dec
cwtl
int3
and
daa
dec
mov
xchg
push
cmpsb
sahf
loope
imul
jno
sbb
js
loop
and
pop
leave
arpl
leave
popf
push
je
jecxz
or
and
pop
adc
in
loope
sbb
add
cmp
outsl
shl
inc
adc
mov
sub
loopne
adc
xor
test
repz
int3
add
mov
sbb
and
lcall
xchg
or
mov
into
lahf
stc
mov
aas
lret
inc
out
adc
add
jg
shr
ds
pextrw
pop
inc
cli
or
rolb
mov
push
xchg
or
and
movsb
xor
cli
xor
ljmp
sbb
mov
inc
mov
orl
adc
jmp
pop
push
xchg
loope
pop
stos
rcrb
sub
add
cmp
and
cwtl
loop
mov
pop
mov
repnz
es
mov
clc
mov
add
lcall
pop
adc
and
mov
cmp
sahf
nop
adc
or
ljmp
and
dec
fisubl
jge
scas
js
das
imul
out
add
push
mov
xchg
fdivl
fidivl
repz
pusha
inc
rcl
mov
and
jae
popf
fldt
push
cld
push
or
aad
mov
jno
enter
fsts
mov
inc
lcall
xchg
out
mov
ret
in
lret
lds
adc
cmpl
scas
jae
jmp
test
cmp
iret
aaa
inc
iret
nop
es
int
xor
imulb
inc
dec
push
xchg
cli
lods
sub
mov
ret
mov
inc
outsl
test
test
mov
mov
les
adc
xchg
sti
ret
ds
icebp
add
pusha
cmp
xor
shrb
or
mov
clc
testl
pop
or
scas
daa
cs
mov
gs
loop
in
sbb
and
and
lds
mov
adc
or
pop
fcompl
les
adc
aad
testb
fcmove
mov
adc
push
pop
movsb
test
mov
std
adc
jp
sti
adc
push
sub
inc
pop
stos
outsb
lock
add
push
lods
popf
leave
sub
jge
movsl
mov
dec
fisubrl
or
push
fdivrs
mov
pushl
hlt
int
js
movsl
scas
jne
cmp
sbb
mov
dec
xor
push
push
jge
mov
lcall
iret
sbb
pop
bound
sbb
jmp
shll
jno
jae
mov
dec
shl
jecxz
xlat
sbb
sti
add
push
xor
data16
jecxz
lret
sbb
xor
pop
dec
in
sarl
lahf
cmp
test
cmp
push
or
add
adc
mov
test
in
adc
stc
inc
mov
aam
pop
mov
fdivrl
int
jae
mov
sub
addb
dec
fisubrl
mov
cmp
inc
aas
rcr
ret
jnp
jp
ljmp
dec
in
lds
imul
xchg
js
out
sti
pop
lret
mov
pop
leave
inc
aad
and
sahf
pop
jle
int
jnp
inc
sbb
cmp
jns
mov
inc
sarb
adc
addl
cld
aam
movsl
lds
and
insl
xchg
xor
repz
push
sbb
inc
gs
dec
xor
sub
lods
sub
and
xor
hlt
jg
in
rep
fs
out
arpl
inc
or
push
jp
lret
loop
nop
cli
jbe
add
ljmp
inc
mov
rorl
dec
lret
dec
dec
in
orb
fcmovnb
inc
insb
fwait
mov
repz
cmp
mov
adc
fists
lea
push
jl
mov
cwtl
lock
xor
pop
pop
icebp
into
mov
jns
push
repz
mov
loop
pop
int3
pop
iret
inc
sub
pop
inc
pop
and
dec
popf
dec
xor
imull
call
lahf
and
in
mov
xor
daa
push
repz
mov
fistl
mov
cmp
outsl
xor
je
mov
cmp
and
jg
lods
frstor
pop
nop
mov
stc
pop
loope
test
sub
das
add
push
in
in
mov
mov
inc
xlat
aaa
js
jno
mov
dec
cmp
cmp
push
mov
xchg
js
int
sbb
adc
xchg
pop
addr16
out
pop
es
or
jbe
jo
xchg
ss
and
outsl
and
or
xchg
pop
ja
aaa
bnd
mov
xchg
adc
popf
jnp
cmp
jno
cmpsl
cmp
arpl
imul
lret
mov
pop
inc
or
aad
lods
pop
cmpl
std
sub
cs
inc
insb
ret
int
scas
mov
pop
fcomps
add
pop
mov
mov
lcall
lds
sub
inc
lods
test
push
je
stos
clc
aas
sahf
pop
insb
add
push
outsb
jae
inc
dec
xchg
adc
push
cltd
je
and
xchg
jb
cmp
fdivs
push
jnp
mov
sbb
lret
nop
out
fwait
div
jae
pop
xor
pop
shll
test
cmc
inc
fnstenv
fsts
inc
adc
fisubs
inc
iret
mov
addr16
fiadds
lds
dec
dec
jno
cs
and
test
inc
jmp
jae
inc
xchg
adc
mov
sub
jmp
and
and
add
cmp
das
es
add
sub
jmp
fistpl
dec
int
cld
xor
lods
sbb
pop
sahf
jb
push
dec
sub
adc
sbb
xchg
popw
aas
inc
pop
aas
das
aad
lock
add
lret
jns
dec
jmp
ja
shll
cmpsb
aaa
repz
dec
adc
mov
or
sbb
cmp
sub
jge
or
out
xor
ds
out
mov
lret
sub
loop
popf
sbb
pop
or
pop
cli
in
add
inc
jno
dec
dec
sti
add
mov
or
cmp
sub
mov
xchg
mov
ja
ret
in
mov
mov
dec
lods
dec
pop
aas
pop
js
inc
lahf
pop
push
cmp
test
fidivrl
stos
leave
xlat
push
sub
daa
sub
scas
sub
adc
sbb
loopne
jp
jne
outsb
lock
js
jo
cmp
sbb
int3
popa
jo
push
sbb
mov
out
add
daa
add
push
or
add
stc
push
and
shl
push
dec
mov
subb
xchg
and
jecxz
clc
les
frstor
mov
aaa
in
sbb
jecxz
sti
das
push
imul
push
fcoms
mov
pop
std
int3
push
dec
lods
mov
xchg
movsl
lret
inc
pop
out
push
loopne
sub
lcall
xor
ficompl
pop
push
push
aam
mov
mov
fcomps
pop
add
adc
in
sbb
daa
xor
xchg
and
cmp
and
cmpsl
jb
nop
inc
sbb
jnp
outsl
fidivl
call
repz
jge
pop
lret
sbb
and
mov
stos
fs
roll
pusha
and
mov
xor
js
dec
jp
dec
fdivp
dec
ficomps
ret
jecxz
jno
mov
cmp
xor
adc
mov
iret
out
push
and
insb
sar
loope
imul
test
pop
jmp
jmp
and
jnp
lock
les
mov
add
mov
mov
cmp
popa
xchg
push
scas
cmp
mov
nop
push
mov
adc
cmp
mov
fs
loopne
repz
xchg
cmova
push
fistpll
cld
xor
xchg
rorl
and
push
cli
mov
imul
arpl
sbb
xor
repnz
out
push
push
rcrl
gs
xor
mov
xor
xlat
jae
dec
ljmp
xor
and
popl
movd
or
into
aam
mov
mov
mov
sub
jp
shll
sbb
stos
mov
add
test
xor
mov
lods
testb
test
dec
test
adc
lahf
mov
in
add
movsl
mov
repnz
dec
mov
xor
xlat
inc
loopne
jnp
enter
add
mov
jecxz
inc
jecxz
pop
push
leave
dec
pushf
cmpl
dec
out
into
mov
lret
adc
mov
orl
mov
insl
movsl
xchg
mov
dec
push
sub
cli
pop
mulb
cmpsl
xlat
popf
jge
out
addr16
lret
mov
rorl
movsl
ficoms
inc
or
xchg
test
push
lret
mov
lcall
and
xchg
movsb
imul
mov
aam
dec
push
or
cmp
push
mov
pop
sub
inc
cmp
mov
pop
lock
mov
subl
mov
insl
adc
mov
ficompl
and
and
pop
inc
f2xm1
add
shll
loope
push
das
test
ss
enter
jb
mov
popf
push
test
pop
adc
mov
push
scas
dec
mov
out
push
push
sub
xchg
mov
lcall
mov
push
outsb
inc
xlat
xchg
int3
es
jbe
movsl
xor
lds
jge
or
jmp
in
push
fstps
push
pusha
pusha
movhps
popa
ds
loop
pushf
in
lea
jecxz
pop
out
sahf
shrb
jbe
sahf
mov
cmp
test
sbb
push
dec
test
jnp
sbb
addw
mov
push
rorl
movsb
scas
mov
xor
push
pop
cmc
mov
xchg
pop
add
push
or
xchg
dec
adc
scas
mov
mov
mov
xchg
mov
out
sub
pop
shrl
orl
or
mov
test
dec
cs
out
sahf
cld
ljmp
aas
in
xor
pop
ret
popa
pop
sti
fwait
dec
rclb
mov
aaa
xor
pop
repz
hlt
cmp
lcall
jae
sbb
popf
adcb
sub
cmp
arpl
mov
movsb
nop
pop
inc
scas
clc
and
scas
leave
jno
mov
mov
popf
sub
repnz
adcb
mov
adc
subl
adc
insl
sbb
dec
and
add
sahf
ljmp
mov
mov
outsl
pop
insl
daa
push
imul
btc
sub
push
std
ljmp
xor
or
inc
dec
pop
cld
adc
cld
cmp
orb
lcall
sbb
push
dec
in
jns
xchg
stos
dec
icebp
sub
aas
clc
push
dec
pop
pop
scas
pop
cld
mov
daa
icebp
icebp
outsl
popf
icebp
insl
add
mov
insb
sbb
or
and
adc
rdmsr
sbb
movsl
dec
xchg
jb
cmc
lods
into
or
inc
jbe
cmpsb
pop
ds
sub
out
ds
mov
stos
mov
pop
arpl
mov
mov
dec
xor
inc
cli
adc
ret
jae
pop
mov
cmp
mov
insb
roll
push
push
xchg
pop
jg
dec
rcrb
xchg
loope
mov
jle
leave
arpl
ret
bnd
test
dec
mov
pop
das
inc
cmc
std
roll
sbb
popa
dec
lods
or
icebp
fiadds
mov
jp
cld
rclb
fcoms
push
shlb
ds
sub
cli
cltd
xor
or
nop
nop
dec
push
mov
cmp
gs
push
sub
mov
cmp
adc
jecxz
jmp
mov
imul
inc
push
lock
jg
add
jbe
and
stos
pop
movsb
and
outsl
test
ljmp
sub
add
orb
gs
daa
popl
fsts
in
push
push
aas
movsl
jo
push
jne
loop
lods
inc
lods
sub
lods
inc
mov
fcmove
adc
mov
ljmp
mov
xchg
adc
or
mov
outsl
fs
jle
and
dec
mov
mov
sbb
push
inc
in
adc
lods
pop
loope
jg
mov
test
or
stc
jle
jae
add
sbb
pusha
ret
xor
add
xor
add
mov
in
es
add
pop
or
loope
dec
lds
clc
add
cmpsb
gs
mov
popf
jnp
sbb
sbb
mov
ja
pop
and
or
pop
bound
sub
fwait
mov
and
push
popa
push
lds
outsl
aaa
mov
sahf
mov
mov
push
inc
incl
or
jne
in
pop
dec
cmp
mov
imul
xorl
popf
and
adc
xor
mov
ds
mov
popa
mov
push
xor
imul
adc
jns
dec
cmpl
scas
mov
out
push
in
adc
je
or
pop
cvtpi2ps
insl
or
int
ss
xor
stc
fwait
dec
sub
and
stc
sub
dec
adc
mov
xor
in
lahf
mov
mov
arpl
and
lock
push
pop
movsb
or
pop
cmpsl
insb
or
inc
lods
add
sti
orb
push
mov
jg
movsl
pop
pop
loopne
dec
outsl
in
movsb
or
dec
lret
add
push
testb
mov
fwait
sbbl
cmp
dec
sub
mov
lds
mov
stos
enter
jmp
push
sbb
or
cmpsl
mov
xchg
and
mov
in
jno,pt
pop
mov
xor
cmp
repnz
ret
and
sub
enter
xchg
cmp
cmp
push
iret
and
sbb
hlt
inc
push
sbbb
fwait
shr
mov
jg
pop
jge
adc
mov
ret
test
int3
xor
mov
xchg
mov
scas
mov
dec
or
mov
sbb
loop
xor
xor
lods
je
nop
or
inc
fcmovb
inc
test
dec
mov
std
mov
lcall
sub
stos
rol
push
sub
mov
sub
outsl
mov
and
sbb
stos
xchg
mov
jle
mov
push
adc
sub
xchg
lcall
arpl
adc
adc
scas
sub
jecxz
in
fldenv
pushf
push
les
scas
addr16
dec
lea
ljmp
gs
scas
push
popw
mov
pushf
jnp
sub
mov
cmp
fidivs
scas
inc
mov
mov
mov
mov
pop
fisubrl
gs
and
imul
mov
pop
mov
xor
orb
mov
imul
insl
xlat
cmpsb
mov
push
mov
cmp
xor
xchg
cltd
cli
cmpsl
popf
jl
out
es
sbb
xchg
insl
popa
cmp
nop
jnp
js
faddp
add
outsl
add
outsb
fsubrs
dec
out
mov
sahf
inc
inc
cmp
hlt
or
cli
dec
mov
xor
insl
aad
sub
pop
sub
add
popf
aad
ds
mov
gs
fcmovbe
arpl
and
jge
dec
push
xlat
mov
insb
cmpsb
rolb
mov
or
add
out
xchg
add
mov
scas
in
test
mov
ss
xchg
xor
inc
mov
fisttpl
xchg
xor
xor
adc
sub
popf
sub
rsqrtps
imul
in
imul
rclb
xor
mov
loope
movsl
data16
scas
inc
cs
push
xchg
addr16
sub
les
xchg
mov
mov
cli
lea
cmp
ja
insl
mov
dec
or
into
and
cmpsb
fsubr
and
sub
jp
das
fisttpll
shll
incb
sub
ss
std
out
movsl
jb
sub
sub
mov
or
daa
lcall
ds
aam
aas
cmp
xchg
push
sbb
mov
xchg
sub
stos
stos
xor
pop
stc
loopne
test
popl
std
sbb
adc
or
pop
xor
loope
popf
cmp
adc
sar
dec
pop
and
stos
cmpsl
dec
xor
scas
adc
cmp
jae
and
es
jl
lods
lods
dec
cwtl
enter
pop
fsubrs
shl
shll
dec
mov
mov
nop
lcall
xchg
inc
call
loopne
pusha
cli
push
lret
scas
out
out
push
ret
mov
mov
or
jb
out
xor
dec
jne
xor
sarb
and
mov
xor
enter
popf
jg
inc
pop
xor
sbbl
add
ljmp
jns
lea
fiaddl
inc
xchg
pop
dec
data16
adc
mov
sti
in
mov
xchg
aas
push
sbb
dec
sub
xchg
jle
test
push
rcl
mov
cmp
sbb
pop
mov
push
mov
scas
adc
sbb
insl
dec
mov
push
or
pop
push
test
sub
push
jl
pop
das
cmpw
cs
jb
adc
mov
and
stos
fwait
xchg
fimuls
repnz
pushf
movsb
cmpsb
loopne
test
cmpsb
scas
pop
and
push
in
ss
enter
sbb
aas
push
mov
push
xchg
pop
mov
outsb
jae
fidivrs
enter
or
rcrl
push
and
dec
adc
aad
xor
sbb
movsb
fs
les
push
dec
inc
test
in
out
imul
cmp
xlat
dec
adc
clc
repz
or
out
outsb
cmp
or
clc
pop
pushf
push
or
mov
out
ret
push
adc
sub
clc
jg
repnz
pop
cmpsl
xchg
push
mov
data16
inc
divb
leavew
sub
mov
mov
pop
mov
xor
sub
addr16
mov
mov
jg
fdivrs
cmp
daa
repnz
xor
cmc
mov
adc
dec
lahf
bound
cmp
push
stos
cmp
pop
lock
rcr
pop
cltd
inc
push
shl
por
out
test
push
push
cmp
ret
pushf
pop
mov
jp
push
ljmp
push
lahf
inc
aam
into
fistps
mov
cltd
xchg
xor
push
pop
dec
add
sbb
ror
xchg
jno
shl
sub
cmp
cmc
xor
pop
cmp
int3
sarb
and
sub
xchg
roll
movsl
xchg
push
add
mov
lds
dec
ret
jne
in
sub
cmp
sti
stc
xorb
lods
orb
scas
sahf
sub
rcrb
dec
sub
fdivp
aas
mov
aas
xor
ljmp
push
fucomi
cmp
mov
xor
or
xchg
jb
adc
les
loope
jp
test
das
es
mov
xchg
cld
scas
cmpl
inc
ds
jmp
lods
fwait
shlb
lahf
clc
adc
jo
jp
inc
out
std
stc
jmp
rcrl
push
sbb
idiv
ljmp
sbb
stos
cmp
insl
push
leave
or
outsb
ret
sbb
push
cmp
push
ret
pop
xchg
push
cld
or
push
cmpsl
dec
loop
fisubrl
or
mov
into
fsubl
inc
cltd
mov
mov
mov
fwait
xchg
and
xor
stc
call
mov
xchg
mov
in
popa
hlt
jae
fidivs
xchg
jmp
andb
cmp
fdivrl
repnz
or
shll
repz
rolb
cmp
rorb
pop
pop
mov
push
mov
ds
sti
scas
mov
jle
fisubrs
sahf
mov
sbb
mov
xor
sub
aam
xor
popa
cmp
adc
movsb
aas
add
cwtl
shll
xor
mov
mov
xchg
aad
dec
mov
jmp
jp
add
cmpsb
enter
fisubs
les
cs
xor
mov
lahf
mov
mov
dec
insl
pop
adc
arpl
mov
dec
lods
pop
loope
adc
sub
dec
mov
or
and
jb
repnz
push
stos
pop
xor
loop
mov
cld
adc
pop
add
ret
pushf
das
pop
icebp
sbb
addl
and
cltd
mov
subb
xor
cmpsb
mov
dec
xchg
sub
cli
movsb
add
cmp
sbb
lods
mov
stos
inc
repz
push
cmp
xor
fmull
mov
jmp
adc
movsl
cmp
cmp
xchg
js
aad
push
test
test
pusha
lahf
fwait
dec
test
aas
mull
or
adc
or
jbe
sbb
push
test
lods
fisttps
push
movsl
out
add
cli
mov
aam
lds
imul
int
ret
iret
mov
mov
ljmp
std
sbb
in
insb
stc
rolb
mov
fbld
sub
mov
adc
jno
mov
leave
push
pushf
mov
jno
or
adc
pop
inc
cmp
adc
stos
mov
pop
inc
cmp
cmp
mov
data16
mov
add
dec
or
stc
outsb
cmp
popf
or
popf
movsb
adc
dec
sub
pop
pop
jb
and
jne
sbb
adc
add
cltd
into
test
cs
subl
inc
inc
scas
ss
xor
xchg
push
inc
imul
stc
repnz
push
push
jmp
xchg
xchg
pusha
dec
dec
pop
insb
cmp
ljmp
mov
or
ret
sbb
pop
ljmp
push
pop
jmp
mov
push
jb
mov
loop
pop
inc
push
pop
xor
pop
jne
add
xchg
into
or
or
shrb
mov
out
add
lret
and
cmp
push
es
ret
test
repz
je
insb
outsl
jo
jb
out
or
cmp
add
iret
pop
repnz
clc
add
call
cmp
fwait
out
pop
jge
sbb
pusha
add
sub
das
ret
jp
movsl
sbb
and
ss
mov
loopne
xor
or
imull
sti
aas
sub
add
movsl
pop
in
sbb
clc
jns
cs
mov
fimuls
jge
push
fdivs
xchg
mov
jl
mov
pop
aas
xor
hlt
lods
and
inc
push
std
aas
repnz
and
pop
sbb
dec
int3
fldt
sub
push
cmpsl
ret
jmp
clc
stos
test
rcll
dec
add
fldcw
cmpsb
sarb
jno
sbb
leave
or
push
lcall
scas
push
sub
dec
sbb
inc
fisttpll
test
mov
fbstp
push
lcall
iret
sti
test
jbe
sub
shlb
sahf
or
push
stc
test
int
jl
rclb
sti
cmpsb
outsb
lea
xchg
pop
ret
mov
jns
ficompl
and
mov
adc
push
sbb
adc
imul
orl
mov
out
int
pop
xchg
sub
mov
cmpsb
push
fwait
cmpb
sarb
jb
mov
push
cltd
call
mov
push
test
in
mov
or
mov
pusha
jmp
das
cmp
fdivrs
jp
test
jbe
aaa
push
das
aad
ja
int
je
ss
das
lret
sub
aaa
push
mov
jmp
sub
daa
xor
pusha
cmp
sbb
xor
mov
cmpsb
mov
cmpsl
pop
sub
xor
or
in
rol
hlt
mov
fsubl
daa
inc
popa
jmp
xchg
dec
in
jns
inc
xor
push
push
cmp
jle
in
or
lock
daa
aad
push
addr16
leave
hlt
shlb
into
mov
inc
pop
pushf
mov
inc
cld
jp
pop
aad
ret
ret
xor
mov
sub
mov
hlt
push
push
jg
repz
jle
xchg
out
xchg
push
daa
pusha
dec
lea
xchg
rclb
jmp
ror
popl
popa
add
jae
aam
cmp
subb
dec
cmp
pop
inc
lret
fisttpl
daa
shlb
lret
cwtl
int
enter
mov
es
push
push
jbe
jb
jle
lahf
sub
insb
pshufw
cmp
inc
mov
fsubs
fbstp
jp
push
and
movb
ss
mov
scas
inc
sbb
mov
sub
mov
adc
xlat
dec
push
loop
dec
xchg
stos
pop
dec
inc
es
enter
stc
or
loop
and
cmpsb
jbe
pop
insl
xlat
insb
mov
inc
mov
jbe
sub
dec
lret
das
add
sarb
orb
mov
add
mov
in
mov
adc
dec
sbb
mov
push
sti
out
dec
maskmovq
testl
je
mov
jno
push
or
sub
mov
lret
add
les
das
pop
notb
out
ja
pop
call
cmp
fwait
sub
sbb
adc
into
sub
ds
or
mov
jo
mov
stos
rol
fnsave
inc
jge
ljmp
into
mov
sbb
es
test
mov
cld
in
sbb
push
ss
dec
imul
loopne
subl
push
rcr
inc
mov
or
add
pop
pushf
or
dec
sbb
outsl
imul
insl
pop
loope
pop
mov
pop
fsubrl
mov
repz
imul
popf
xchg
mov
inc
cmp
pop
xchg
sbb
xor
sbb
dec
testl
inc
dec
insb
test
dec
cmc
cmp
mov
gs
stos
aad
loopne
and
xor
add
sub
and
fs
add
setbe
mov
pop
sub
subb
inc
pop
outsl
adc
jle
cmc
adc
lds
dec
ficomps
int3
call
lret
push
loopne
sbb
imul
jge
mov
fdiv
sbb
imull
dec
clc
inc
pop
add
pop
cmc
pop
mov
nop
call
aam
pop
in
sub
mov
sbb
mov
sub
mov
cs
enter
mov
push
jp
mov
xor
pop
jp
in
dec
ljmp
dec
sub
stc
xchg
xchg
pop
jg
and
adc
mov
rclb
jb
mov
xchg
fndisi(8087
pop
push
mov
mov
movsl
pop
outsb
sub
imul
mov
sbb
lret
fdivrp
and
enter
jp
sbb
inc
aaa
lds
push
xchg
rcr
add
cmpb
xor
dec
cmpsl
and
daa
out
nop
add
push
inc
int3
cmp
xchg
into
mov
test
mov
aaa
ljmp
test
nop
cli
cli
inc
mov
push
cld
dec
or
xor
inc
lods
int
stos
aad
pop
rorb
sub
int
loope
mov
scas
leave
arpl
add
out
loopne
mov
inc
ss
and
dec
popf
pop
mov
adc
ret
shrl
jg
ret
push
test
pushf
and
mov
push
outsl
inc
mov
repz
mull
fs
lods
xor
push
push
ret
mov
ljmp
push
mov
or
movsl
cmc
jge
sub
adc
negl
scas
dec
jae
dec
sti
cwtl
pop
in
cs
jb
sbb
cmc
lods
add
fwait
es
orl
pop
outsl
aam
inc
add
jg
jne
andl
sar
lcall
jbe
fwait
dec
popa
push
xchg
xlat
adc
into
outsb
jmp
adc
mov
mov
daa
out
lock
das
arpl
dec
jl
cmp
iret
mov
pop
int3
xchg
test
cltd
xor
leave
cmp
mov
mov
arpl
loopne
shlb
inc
les
insl
and
sahf
inc
cmp
jae
stos
je
gs
inc
xor
pop
mov
test
loop
cld
cmp
std
rclb
repz
nop
cltd
mov
cmpl
mov
push
or
xor
or
inc
inc
mov
stc
out
fiaddl
pop
das
jbe
jo
cwtl
fldl
sbb
aas
mov
dec
aas
sub
inc
pop
imul
movsb
mov
or
dec
inc
or
sbb
sub
les
pop
fiadds
xchg
das
into
loope
es
mov
sbb
sub
les
add
adc
and
je
lea
movsb
add
jbe
push
sbbb
push
pmullw
and
cltd
mov
and
pop
sbb
adc
mov
loope
mov
pop
ret
movsl
jne
mov
sbb
or
mov
xchg
mov
rorb
push
mov
pop
out
xchg
es
adc
jne
out
cli
jmp
aaa
sbb
out
popf
push
dec
out
inc
and
push
xchg
jmp
pushf
or
lea
mov
pop
fidivs
scas
andl
mov
sahf
out
adc
jb
daa
adc
pop
mov
lods
sub
xchg
pop
in
push
mov
and
ret
mov
stos
call
xchg
les
xor
dec
inc
mov
leave
push
adc
push
cmp
nop
sub
sbb
sub
add
pop
jge
add
cld
es
push
add
jecxz
lods
push
jg
outsb
sub
xchg
xchg
jg
lret
xor
ljmp
imul
dec
adc
push
jge
inc
cmpl
jbe
adc
faddl
pop
rclb
dec
pop
and
pop
jae
inc
rclb
clc
in
inc
mov
clc
pop
rorb
inc
lcall
dec
cmp
or
mov
jbe
push
xchg
mov
inc
jmp
push
les
mov
jp
xor
imul
insb
adc
mov
jmp
rcrb
xlat
push
and
test
ret
cs
scas
dec
mov
jecxz
and
fldenv
outsl
dec
out
jae
imul
and
sub
imul
xchg
mov
pop
mov
or
adc
pop
fiadds
adc
xor
jp
flds
mov
lds
or
adc
xchg
and
mov
ret
sbb
sub
push
push
jne
push
hlt
loope
sarl
jo
push
cmp
sahf
sbb
int
push
call
mov
ss
bound
push
mov
pusha
ds
mov
enter
pop
adc
sub
push
inc
jp
les
jb
fst
gs
jnp
lret
xchg
test
aaa
sti
adc
in
scas
jl
xor
aaa
adc
and
mov
add
mov
shrl
xchg
icebp
into
jle
sbb
into
sarl
xchg
daa
dec
sbb
data16
pop
xchg
arpl
mov
add
shlb
add
out
mov
push
mov
sub
push
sbb
lds
mov
sbb
and
rolb
dec
mov
aas
push
xor
or
xchg
sarl
push
sbb
add
mov
sub
sub
mov
das
add
mov
fistpl
scas
inc
shlb
and
add
push
jl
js
sti
ret
add
fidivs
mov
leave
dec
xor
mov
adc
inc
and
movntq
mov
xor
push
stc
and
adc
jl
and
outsb
outsl
mov
int3
sub
adc
mov
sbb
loope
aad
cmpsb
js
test
cmc
add
jl
cmpl
imul
push
add
fwait
xchg
inc
iret
or
adc
scas
clc
nop
push
insl
cmc
popf
push
sbb
adc
fsubrl
jl
roll
fdivs
dec
into
mov
inc
push
sub
jmp
dec
mov
push
mov
xor
mov
es
sti
addb
notb
sub
shr
sub
mov
addl
xor
xor
aam
push
mov
seto
add
sbb
scas
sub
sub
xor
sub
icebp
jo
mov
xor
cmp
cmpsb
into
add
xchg
jle
nop
jl
and
cmp
call
pop
jl
aad
int3
mov
mov
stos
dec
fidivrs
scas
sarl
mov
add
mov
hlt
lea
jnp
lock
xchg
data16
pop
sbb
and
mov
jbe
addr16
xor
pop
sbb
loop
sbb
mov
dec
push
and
cmpsb
int
sub
mov
xchg
shlb
jg
xchg
daa
scas
sahf
cld
or
dec
mov
mov
rcrb
adc
das
add
or
scas
pushl
rol
adc
mov
xchg
push
clc
mov
push
sbb
inc
dec
mov
mov
dec
xchg
mov
int3
cwtl
jns
and
xchg
mov
in
fnstenv
out
pop
gs
push
xor
sub
mov
repz
mov
or
int
and
sbb
push
fcmovb
mov
push
cwtl
addr16
push
cmp
push
dec
fstl
cmp
xor
mov
lea
mov
nop
jge
xchg
xchg
dec
mov
ret
ret
std
mov
or
loopne
pop
jle
mov
xor
jecxz
sub
or
jae
into
in
in
jbe
inc
adc
idivb
je
add
adc
push
fidivs
and
pop
les
jno
mov
cli
adc
cltd
mov
pop
add
clc
cmp
jbe
mov
sbb
ja
call
push
push
and
mov
push
in
mov
out
sub
or
cmp
int
pop
repnz
xor
jge
xchg
sarb
repz
lret
aad
xchg
push
pop
push
jp
push
pop
mov
insl
test
dec
insb
jecxz
mov
inc
orb
xor
pushf
and
das
adc
lret
popa
add
push
outsb
dec
int3
dec
fmuls
inc
testl
or
pop
adc
push
shr
fdivr
mov
pop
jnp
insl
popf
adc
sub
dec
test
mov
rcl
push
mov
fwait
repz
cld
test
jl
cmpsb
pushf
add
pop
int3
mov
popf
orl
or
cmp
push
testl
or
jg
test
push
setl
es
cwtl
shlb
fwait
or
adc
mov
inc
sbb
jno
mov
fidivs
sub
mov
lods
mov
ja
mov
dec
rolb
ds
cld
cld
sar
and
mov
sbbb
cwtl
ja
and
ds
sahf
insl
mov
xchg
jne
add
add
into
into
cmpsb
daa
cltd
cli
pop
mov
cltd
in
jp
iret
mov
in
cmp
mov
push
lret
fists
icebp
jmp
sub
push
mov
ret
test
enter
xchg
shll
jae
lret
dec
xor
movsb
push
adc
mov
ds
add
mov
add
push
cmp
iret
jb
or
sbb
sbb
xchg
inc
scas
movsl
shrl
xchg
lcall
inc
cli
into
mov
imul
adc
icebp
jecxz
addr16
adc
dec
inc
roll
mov
mov
push
shl
jns
jnp
pop
stc
icebp
ficoml
aam
sbb
aas
push
daa
ds
mov
ja
jmp
hlt
jl
pop
in
repnz
out
stc
push
xor
fstl
mov
push
std
inc
lret
das
aam
cmp
sub
enter
jecxz
in
jp
mov
pop
add
faddp
les
xor
sub
imul
out
sub
iret
push
push
adc
leave
lahf
cmp
testb
mov
divl
sbb
pushf
mov
out
pop
mov
stos
mov
add
lods
into
jns
add
mov
in
ret
in
sahf
ret
push
int3
test
arpl
aam
mov
push
rolb
vmovdqu
pop
jae
addr16
pop
jb
bound
cmp
scas
aas
cmp
mov
cltd
inc
inc
sub
pop
mov
and
mov
lods
cmp
fsubr
shlb
lahf
popf
cmp
jb
add
fmuls
pushf
lahf
scas
add
cwtl
xchg
xchg
ret
xchg
jbe
mov
dec
adc
in
jl
mov
jecxz
jbe
mov
mov
bound
clc
add
mov
fmuls
shll
pop
jge
scas
stos
add
int3
dec
dec
icebp
jp
mov
add
sarl
mov
dec
push
shll
mov
fwait
xchg
in
sbb
leave
cmp
or
xchg
fs
and
lret
and
inc
lahf
mov
fwait
stc
xchg
xor
call
in
xchg
fwait
test
add
aam
inc
xor
mov
xor
je
dec
repz
sbb
push
mov
inc
jecxz
stos
sub
lret
ljmp
pop
gs
inc
insl
jg
stos
outsb
mov
dec
mov
stc
jnp
dec
push
push
gs
test
bound
jnp
or
add
ret
sbb
adc
xchg
lods
lods
mov
sarl
sub
cli
inc
and
cmp
sub
sbb
mov
cs
fstl
sbb
addr16
shll
mov
pop
add
cltd
and
jge
das
jle
xor
xchg
sbb
pop
dec
sub
int
cmpsb
xchg
push
arpl
addb
pop
dec
in
stc
jnp
fwait
and
daa
adc
dec
pop
mov
loopne
sub
push
rcr
mov
ja
lock
xor
sub
xchg
shll
and
leave
mov
adc
int3
mov
sub
jae
sub
test
cs
mov
loopne
loop
sub
out
inc
push
jge
out
pop
addl
lods
xchg
dec
cmp
repz
cld
mov
aaa
cmp
jmp
int3
jbe
cld
mov
stc
sub
xchg
es
pop
mov
notb
popa
and
popa
ja
dec
push
imul
dec
jb
xor
jecxz
inc
lds
pop
xchg
popf
jnp
jg
jl
movsl
lock
add
fwait
popa
jae
jb
mov
xlat
outsb
xor
jae
jne
xor
push
jecxz
mov
lods
hlt
hlt
hlt
pop
andb
insl
in
cld
pop
ljmp
mov
push
arpl
lds
int
stos
outsb
sbb
mov
add
dec
leave
xor
inc
or
adc
addr16
jle
emms
mov
in
add
jg
test
loop
cld
push
out
xchg
icebp
fidivl
decb
out
imul
inc
inc
cmc
aaa
in
arpl
adc
jmp
and
mov
mov
inc
stos
lret
test
push
repz
je
dec
rcl
jle
xchg
test
lret
cmpsb
cld
jns
and
mov
jecxz
js
sbbb
fs
jno
xchg
loope
out
dec
aad
arpl
sub
jb
mov
inc
pop
mov
rcrb
scas
cli
cmp
pop
xchg
inc
pusha
les
push
iret
fdivl
aam
xchg
out
mov
and
inc
loopew
xor
add
dec
int
sbb
xor
fstl
mov
mov
fcmovne
aad
cmp
xchg
arpl
ret
push
cli
xor
loop,pn
pop
mov
xor
daa
or
sbb
fcomps
sbb
sbb
mov
rcr
xor
mov
or
push
push
stos
and
lahf
test
push
dec
jp
push
fimuls
popf
push
pop
mov
pop
add
les
pop
out
inc
int3
in
nop
jl
jbe
pop
loopne
cmp
jl
iret
clc
dec
enter
sbb
fwait
mov
sbb
mov
ja
cmp
repz
sbb
mov
mov
adcl
pusha
pop
mov
into
jno
mov
adc
stc
int3
repnz
rclb
sub
add
or
ds
mov
int3
pop
jns
and
mov
outsl
push
mov
jno
std
pop
xchg
cmp
dec
mov
pop
mov
push
adc
stos
insb
fildll
pop
and
incb
repz
mov
cld
mov
xchg
add
add
cmp
xor
outsl
or
stc
bts
xchg
dec
or
mov
aad
popa
dec
lods
sbb
enter
adc
hlt
push
inc
fnstenv
add
xchg
xor
push
popa
push
fisttpll
mov
mov
popf
jo
cmp
sti
xor
jne
roll
int3
jo
stos
das
sub
shll
neg
or
sahf
sub
dec
cmp
inc
and
xchg
scas
lea
push
push
push
negl
ljmp
mov
add
mov
je
mov
stos
mov
fidivs
ret
negb
repz
add
xchg
lods
inc
sbb
xchg
xchg
sub
mov
mov
aam
jge
shl
shlb
adc
fistps
jg
cmpsl
stc
mov
dec
cmp
fs
fs
loope
or
pushf
fsubrs
add
lahf
push
call
mov
push
pop
jno
in
pushf
xchg
dec
cmpsl
mov
rcr
inc
stos
pop
xor
dec
les
jmp
cmpsb
jmp
dec
xlat
push
fwait
shll
lods
test
xlat
mov
mov
push
fldcw
imul
out
add
or
mov
add
sbb
inc
jge
mov
ja
mov
imul
popf
jl
int
addl
mov
mov
xchg
mov
imulb
enter
mov
clc
ljmp
xchg
iret
sahf
inc
mov
sbb
sbb
push
or
es
das
es
adc
inc
scas
sbb
pop
dec
dec
ss
enter
ror
xchg
ja
nop
pusha
lcall
daa
push
and
add
push
subb
lahf
push
les
je
movsb
xor
sub
sub
xchg
loop
inc
sbb
lahf
mov
cld
enter
fnstenv
xor
mov
fld
lock
test
iret
repnz
lea
cmpb
or
mov
jnp
aam
lea
xchg
lods
lret
cmp
or
and
push
movsl
or
xchg
pop
jb
aad
mov
sti
fstl
or
sub
dec
fcoms
daa
add
lret
jb
js
add
ficoms
sbb
pop
adc
mov
cmp
daa
call
insb
imul
nop
xchg
mov
cmp
pop
jecxz
mov
jbe
sarl
adc
inc
cltd
xchg
jle
repnz
xor
scas
movsb
ljmp
repnz
sti
clc
mov
and
fs
fistpll
and
inc
xchg
fcmovb
popf
jo
aaa
scas
dec
enter
dec
dec
adc
mov
ficoml
cmp
call
mov
sbb
aam
push
sbb
lods
xchg
in
int3
jmp
cltd
shrb
stos
mov
cmp
fsub
push
and
inc
pcmpeqb
mov
arpl
sahf
test
jae
cs
mov
xchg
mov
ja
outsb
mov
xor
xor
push
jbe
jae
xchg
pop
jge
xor
and
push
stos
xchg
jecxz
add
inc
test
pop
cs
stc
mov
int
shll
mov
repnz
xchg
mov
int3
or
push
rcll
mov
cmp
nop
leave
mov
gs
movhps
scas
pop
inc
mov
aas
test
pop
mov
ljmp
ret
nop
and
out
insb
mov
push
cmpsl
or
adc
pop
push
clc
loope
insl
add
or
push
or
mov
sbb
repz
pop
jnp
pop
jbe
pop
xor
and
clc
or
jle
imul
mov
test
test
stos
bound
loop
mov
jg
adc
sub
lret
inc
dec
and
mov
jg
push
mov
in
cld
push
mov
fistpll
adc
cld
stc
out
cmp
mov
adc
mov
push
sbb
dec
xchg
and
mov
xchg
sbb
in
xchg
repnz
pop
repnz
test
xor
fistpll
cmp
pop
cmp
pop
out
lds
mov
and
test
int3
or
scas
out
xchg
dec
ret
cmp
imul
mov
or
fdivs
adc
pop
mov
shrb
jge
inc
scas
xchg
pop
dec
jnp
je
lcall
or
ret
lret
mov
gs
test
fisubs
inc
add
insb
or
stos
cwtl
or
dec
das
fidivrs
out
mov
scas
ds
mov
xor
ret
pop
mov
mov
cmpsl
enter
mov
lea
clc
jo
dec
sub
cs
mov
xor
and
jb
inc
imul
fwait
add
inc
pop
push
std
imul
mov
xchg
xchg
je
and
int
sti
inc
call
lea
outsb
mov
subb
in
cmp
cs
fisttpl
in
idivb
mov
cmp
jmp
mov
out
cmpsl
mov
and
or
xchg
inc
insl
dec
jnp
ss
mov
out
jb
jnp
jae
xchg
out
mov
js
out
clc
pop
jge
pusha
andb
notb
xchg
cmp
pushf
iret
das
jecxz
push
inc
pushf
push
jle
cmp
iret
ret
pop
divb
lcall
movsb
cmp
aam
outsb
jns
scas
movsl
add
xor
bound
add
lret
mov
jecxz
je
and
stc
pop
mov
xor
jbe
mov
xorl
iret
jge
test
fmull
in
jmp
or
and
mov
fstpl
mov
pop
cmp
test
jb
or
loopne
lret
mov
cmc
mul
adc
inc
stos
xchg
nop
dec
rorb
xor
ds
cmp
push
out
mov
inc
mov
jno,pt
cld
xorl
push
stos
pop
pop
and
repz
fnstenv
popa
stc
lods
sbb
pop
inc
leave
pop
adc
push
mov
lcall
push
and
aaa
xchg
inc
xchg
push
hlt
les
inc
mov
jecxz
adc
repz
add
stos
repnz
cltd
pop
mov
shlb
fmull
push
inc
cmp
test
cmp
and
inc
jne
into
lret
jl
clc
sbb
into
adc
pusha
sub
in
mov
lock
sbb
stos
xchg
aam
and
mov
xchg
or
mov
repz
jb
cli
fistpl
and
aam
or
push
cmp
shl
or
push
cmp
cmpsb
in
std
sahf
outsl
cmp
test
xchg
stos
jns
dec
xor
pop
sbb
or
lahf
cmpl
xchg
add
movb
mov
mov
sbb
add
repz
mov
pop
dec
mov
stos
push
pop
lds
cld
repz
ja
das
shl
fildl
cmp
imulb
into
ret
cvttps2pi
cmpsb
or
or
cmp
dec
push
sub
movsl
jae
cltd
cltd
ss
lcall
mov
arpl
xchg
dec
int3
jne
or
pop
or
test
pop
nop
inc
cld
out
lcall
push
addr16
cmpsl
push
loopne
and
call
mov
adc
lods
pop
and
loopne
pop
lcall
imul
push
and
jns
vmovupd
or
xchg
popf
sub
inc
in
lret
lods
shll
inc
test
cmpsl
dec
jne
mov
adc
dec
cwtl
mov
inc
adc
repnz
lods
lods
les
fyl2xp1
or
insl
insl
pop
push
call
xlat
shlb
or
mov
lds
or
and
ja
cmp
cmp
loopne
push
pop
adc
push
mov
fstpl
xorb
testl
pop
int3
adc
out
mov
mov
imul
shlb
int3
inc
repnz
mov
cmpsl
lret
insb
mov
in
int
adc
in
notl
rclb
and
call
ds
and
out
in
lcall
test
xchg
adc
mov
jno
mov
cld
clc
out
sbb
pusha
xlat
out
lahf
frstor
jmp
pop
push
cmp
add
mov
leave
pop
sbb
inc
cmp
jge
mov
lahf
rcll
mov
ficoml
mov
insb
mov
jb
addr16
inc
clc
lret
adc
test
mov
add
shr
ret
xor
pop
cmpsl
push
rolb
fimull
lcall
shll
jns
sarl
loopne
xchg
lods
mov
shll
nop
sahf
adc
and
xor
xlat
hlt
rorb
mov
pop
andl
mov
in
popa
inc
out
or
sbb
mov
xchg
jmp
ds
roll
push
les
fdivrs
int
sbb
scas
rcr
movsl
cmp
shlb
mov
aad
rclb
shll
and
cmc
pop
test
pushf
lcall
mov
cwtl
or
mov
push
sbb
pop
fs
cmp
sbb
sub
in
loop
mov
xchg
test
sub
push
or
push
inc
pop
inc
jne
mov
push
push
pusha
or
push
and
stos
lcall
ret
xchg
push
pop
push
aaa
xchg
in
xchg
jg
or
xchg
dec
lahf
mov
adc
pop
sti
cld
sbb
mov
fstl
adc
mov
xor
mov
popa
dec
or
or
lea
cwtl
je
jge
cmp
or
or
mov
add
xchg
testb
stc
pop
sbb
pop
cli
mov
cmp
and
pop
lds
push
inc
ss
lahf
dec
imul
push
inc
fld
inc
arpl
dec
push
jbe
cmc
lret
xor
push
call
bound
dec
test
cmp
call
negb
call
push
lret
fnstsw
pop
mov
movsl
sub
loope
daa
and
loop
lcall
test
sbb
out
int
repz
xchg
daa
into
jns
addr16
cmpsb
or
inc
adc
in
stos
dec
addb
push
lret
jae
push
xlat
inc
ret
aad
addr16
cmp
lods
bound
ljmp
jmp
mov
lret
pop
adc
xchg
outsb
cmp
cwtl
aaa
pop
jmp
lcall
lea
fs
dec
ljmp
sub
ss
mov
popf
sub
dec
mov
leave
mov
pop
imul
ljmp
xor
jo
rorl
mov
outsb
jecxz
ret
pop
int3
into
add
jg
ss
mov
stos
and
push
idiv
loop
and
es
lock
rol
xor
xor
js
dec
iret
fistpl
mov
je
inc
jecxz
pusha
inc
xchg
loop
in
xchg
adc
in
pop
push
cs
gs
ret
inc
icebp
in
mov
cmp
lods
jmp
aas
pop
or
in
mov
dec
ds
hlt
cmpl
sub
in
mov
sbb
insl
xor
mov
lea
push
fistl
xchg
inc
mov
ret
dec
bound
xlat
outsb
pop
movsb
xchg
cmp
cmp
push
pop
rcll
push
enter
mov
xor
pop
push
faddp
pop
repz
inc
push
iret
jp
dec
shll
stos
mov
mov
sub
jmp
idiv
pop
test
mov
and
sbb
sub
mov
cmc
test
sbb
cmc
cmp
push
mov
out
icebp
stc
lret
mov
clc
daa
ficomps
xchg
inc
sbb
insl
cmpsb
add
fcompl
fwait
push
push
inc
daa
xchg
scas
ret
adc
lock
pop
outsb
pop
mov
mov
data16
xlat
add
adc
rol
push
lret
ja
aas
cmc
fst
xor
xor
test
add
pop
push
push
sbb
fists
adc
ficompl
dec
jmp
mov
adc
movsb
add
push
jg
sub
cld
mov
sub
push
adc
ja
mov
lahf
push
mov
fstpl
testl
lods
jp
jb
pushf
sub
mov
daa
sub
rolb
dec
call
pusha
ret
lods
push
fcmovnu
inc
psubsb
pop
enter
dec
xchg
les
cmp
mulps
sbb
ficoml
ds
and
dec
xchg
pushf
mov
or
insl
stos
daa
stc
aaa
pushf
xchg
or
imul
fistpll
sbb
test
adc
add
cmpl
popa
pop
outsb
xchg
xchg
lods
cmpsl
push
inc
lret
inc
mov
nop
in
dec
xor
jp
rorl
inc
jae
popf
lods
hlt
inc
dec
jl
pop
jmp
stc
push
and
pop
jle
mov
sub
fcmovbe
jecxz
or
out
outsb
addr16
jne
pop
notb
out
jnp
adc
les
ds
xor
jbe,pn
inc
mov
sarl
adc
enter
or
pop
push
hlt
push
push
dec
jecxz
mov
add
pop
roll
sub
sub
out
or
mov
mov
cwtl
shl
ret
jp
xor
pop
mov
popa
sahf
in
xchg
shll
adc
fadds
dec
out
fs
out
pusha
divl
orb
push
das
fsubrp
aam
push
shrl
loope
imul
mov
mov
inc
mov
mov
push
ficoms
sahf
lock
in
xor
insb
sti
add
sub
gs
and
xor
lods
aad
lcall
pop
push
sbb
insl
lods
outsl
testl
xlat
in
cmp
dec
insl
add
scas
and
and
sahf
xor
pop
outsb
sti
stos
inc
xchg
lds
in
in
cld
mov
dec
push
add
push
cmp
xor
mov
dec
add
pop
mov
gs
pop
jo
insl
add
aad
xor
cld
out
and
cld
repnz
adc
sub
push
jge
hlt
cmp
enter
ret
shlb
mull
test
xlat
mov
mov
cwtl
test
es
jns
xchg
out
dec
push
mov
outsb
mov
inc
xchg
scas
mov
in
mov
sbb
cmc
sti
and
movsb
add
cmp
dec
fs
push
test
cmpsb
fistpl
mov
jo
loopne
shll
xchg
ljmp
lret
adc
xor
mov
pop
les
mov
aaa
bound
jae
sub
dec
mov
add
imul
shr
push
jmp
cs
jg
xor
lcall
mov
sub
cmp
mull
mov
shl
and
or
jo
inc
lods
f2xm1
sbb
mov
ss
add
mov
shrl
add
sub
fidivl
push
mov
inc
jns
xchg
and
ret
push
xor
dec
jge
sahf
aaa
xchg
loop
addr16
mov
dec
scas
in
pop
push
lahf
andl
xchg
push
inc
push
inc
int
ja
test
or
lea
ds
daa
fisttpll
insb
push
insl
mov
sub
and
fmul
stos
cmp
psubusw
aas
stos
test
fisttps
cmc
repz
sbb
adcl
outsl
mov
hlt
mov
and
adc
repnz
pop
push
push
fwait
add
cwtl
xor
xor
movsb
mov
push
lret
mov
mov
mov
frstors
das
dec
push
sti
gs
pusha
mov
xchg
popf
mov
push
xorl
mov
fcomps
dec
fs
jle
aaa
pop
push
cmp
and
arpl
or
pusha
xlat
ficoml
adc
scas
jp
lods
sub
jg
add
adc
dec
out
xchg
sub
pop
shl
jp
in
int3
iret
dec
aad
inc
repz
iret
mov
fucompp
sbb
adc
shr
cwtl
aas
jle
mov
out
faddl
or
cmpl
mov
jmp
jge
orb
notb
scas
inc
mov
and
lds
mov
lods
mov
divl
test
clc
test
adc
out
and
andl
shll
mov
fwait
ds
xchg
xchg
dec
subl
or
mov
add
xchg
jb
and
dec
or
cmp
or
outsl
fsubrl
dec
int
rcrb
push
xchg
inc
cmpsl
adc
jae
sub
mov
dec
int3
ret
test
je
jge
cmp
add
mov
pop
pop
imul
fsubl
sbb
xchg
repnz
mov
loopne
and
cmpsb
adc
push
testb
in
adc
and
and
cwtl
orl
shrb
shll
xchg
and
jnp
sarl
ss
mov
call
loopne
add
push
fmull
add
lret
jge
dec
xchg
xchg
adc
mull
out
inc
fld
sbb
push
xorl
dec
or
and
push
test
lock
rcr
sbb
mov
fldcw
shlb
scas
inc
xor
pop
xor
xchg
cltd
mov
imul
adc
fstps
mov
dec
movsl
cmpsb
jecxz
shll
out
aad
or
movsb
pop
js
gs
mov
ljmp
in
sahf
es
mov
addr16
cmp
xchg
hlt
pop
sub
xchg
cmpsl
inc
mov
lahf
xchg
clc
xor
rcrl
fdivl
cwtl
push
test
jne
call
sti
in
inc
and
jne
push
repz
add
mov
outsl
sbb
sahf
xlat
pop
inc
ret
inc
cmpsl
lea
sarl
sbb
subb
push
mov
cwtl
imul
movl
pop
cmpb
les
mov
sbb
repz
mov
push
jl
imull
jg
es
push
and
sahf
add
js
daa
nop
push
xor
orl
popf
enter
shr
int
sbb
sbb
mov
lea
dec
pop
or
ljmp
gs
scas
mov
sbb
mov
arpl
lret
shr
call
and
dec
sub
mov
shlb
sub
movsb
push
mov
imul
jmp
mov
mov
inc
out
xchg
sbb
negb
push
scas
cld
mov
xchg
and
ret
jle
adc
lcall
xchg
jns
jg
mov
popa
js
std
ret
pop
test
insl
jg
lret
stos
push
movl
mov
stc
or
fistps
jg
jbe
arpl
call
fwait
jne
cwtl
add
iret
repnz
xorl
shlb
fs
sbb
mov
jp
dec
shlb
cmp
xchg
nop
loopne
data16
ret
imul
adc
xor
lret
imul
adc
testl
jp
mov
pusha
andb
icebp
ljmp
mov
adc
leave
sub
cmpsl
cs
in
cmp
sub
xchg
in
je
sub
xchg
add
push
hlt
adc
lock
lahf
jo
adc
hlt
sub
lcall
stos
aas
test
mov
lahf
push
sahf
sti
add
dec
xchg
rol
out
int
sbb
cmp
or
shl
push
mov
out
dec
pop
aam
scas
popf
addr16
lds
adc
ljmp
sti
mov
movsl
fs
fdivr
popa
mov
mov
sub
es
push
cs
lahf
cmp
repnz
sub
adc
leave
out
repnz
das
inc
inc
push
xor
xchg
or
mov
test
cmpb
cmp
jp
mov
mov
xchg
lcall
or
rorb
fwait
cmp
dec
gs
dec
adc
xchg
mov
cmpsl
in
ds
push
xchg
xor
adc
jle
in
adc
pop
push
test
jg
loope
fcompl
xlat
scas
test
fldt
sahf
add
xor
mov
sbb
ret
mov
scas
or
sbb
outsb
fldl
and
mov
dec
xchg
mov
lods
mov
dec
inc
sbb
enter
inc
xor
hlt
mov
ss
loope
inc
sbb
test
xchg
cmp
lret
cld
cmp
ss
aad
iret
xchg
jecxz
stos
inc
mov
mov
aas
lret
push
div
int
push
test
sub
lds
dec
add
aam
fs
mov
mov
mov
jmp
loop
inc
push
jg
or
iret
shrl
xchg
scas
mov
mov
inc
out
adc
cmp
mov
jo
adc
pop
js
rcrl
xor
rorb
test
add
mov
or
nop
lods
insl
cmc
adc
cwtl
loope
rolb
or
jecxz
dec
movsl
aam
and
fisubl
arpl
jb
adc
inc
dec
push
jne
sarb
lahf
jae
scas
pop
addr16
adc
jmp
xchg
mov
push
xchg
fs
or
sub
loopne
dec
or
add
test
cmc
jne
jle
push
bound
add
call
inc
cmp
and
lea
mov
addr16
daa
sbbb
ret
shlb
xor
jg
lret
loopne
push
cmpsb
sbb
push
xchg
add
xchg
cwtl
loopne
mov
push
mov
add
movsl
repz
aaa
mov
lods
xor
push
decb
and
fisubrs
fsts
je
jge
sub
jne
mov
cs
adc
sbb
mov
aaa
sub
push
push
repnz
jns
cmp
iret
jg
ds
xchg
jb
mov
aas
mov
popf
addr16
lahf
adc
sbb
jecxz
sbb
repnz
sbbl
push
mov
addr16
mov
insb
xor
push
dec
cmp
aad
lret
subl
dec
icebp
fs
sahf
jno
lock
cmp
std
jo
and
mov
cld
cmp
sub
cwtl
sti
pop
adcl
xor
into
sbb
loop
pop
fcmovne
jmp
gs
int3
push
lods
xchg
xor
sbb
lahf
loope
mov
xchg
or
decb
sub
push
and
aaa
cmp
leave
loope
ficoml
pop
push
insl
or
inc
mov
and
mov
insl
test
cmp
adc
and
mov
push
inc
xor
cmp
aad
fdiv
les
jecxz
outsl
sbb
or
cmp
dec
mov
or
pop
pop
arpl
aas
pop
test
dec
lock
jl
hlt
orb
push
imul
es
and
data16
or
dec
lods
addb
mov
cmpb
dec
movsl
jecxz
xor
or
push
arpl
out
pop
xchg
pushf
subl
pushf
lret
cmp
sbb
inc
mov
jno
mov
dec
or
mov
stc
repnz
and
push
aas
rcr
out
inc
cmp
add
aaa
dec
pop
pushf
scas
out
shlb
mov
shl
imul
loopne
test
jb
daa
xchg
cwtl
xchg
push
loope
rclb
adc
jmp
popf
jge
sahf
lret
jp
or
xchg
xchg
fs
or
cmc
popa
xor
sahf
mov
neg
lock
jmp
and
ret
ret
fcoms
sub
adc
sub
addl
jns
jg
cmp
pop
dec
stos
xchg
out
jg
push
inc
lods
or
jns
pop
and
and
cmp
adc
or
out
rcr
adc
xchg
aas
jb
cwtl
cwtl
inc
andb
aam
push
fiaddl
sbb
loopne
jb
mov
bound
adc
mov
cmp
dec
nop
pop
fsubr
mov
lods
push
ss
add
insl
sahf
push
adc
data16
test
mov
leave
mov
ljmp
xchg
inc
mov
dec
data16
daa
pop
xor
movsl
add
pushf
jge
jmp
gs
inc
rcl
js
inc
jno
xchg
int
testl
shll
jnp
mov
jge
jmp
inc
jle
add
mov
lods
mov
mov
xchg
pop
mov
cmc
push
inc
push
xchg
xor
pop
adc
hlt
jo
push
push
scas
fstl
mov
xchg
jns
out
rorb
dec
pop
fstps
jns
or
lret
dec
dec
jnp
mov
xchg
divb
lret
ret
out
subl
pop
cmp
push
imul
fisubl
add
addr16
imul
ljmp
shlb
jb
jmp
add
in
loop
push
pop
sbb
sub
sub
imul
sub
xchg
push
xchg
std
adc
cmp
out
add
pop
dec
bound
adc
je
fsubrl
subl
js
mov
xlat
push
mov
fwait
jmp
int
xchg
and
fsub
test
and
xchg
imul
ds
fldl
mov
bound
insl
pop
lock
and
cmpsl
rorb
mov
push
ljmp
xchg
xor
out
data16
fs
scas
icebp
test
xor
and
loop
scas
test
lods
int3
xor
pop
xchg
pop
jne
push
rclb
sub
data16
test
jns
iret
cmp
fst
in
add
add
mov
lahf
xor
mov
popf
xchg
mov
dec
stos
sbbb
sbb
and
jae
in
jle
adc
mov
cmp
inc
sbb
and
aad
push
lahf
and
addr16
sbb
mov
fcom
pop
mov
jg
fdivrs
push
add
cld
dec
adc
dec
pop
inc
adc
push
fs
dec
cmpsl
dec
sahf
push
sub
push
push
dec
pop
or
lock
out
fstl
dec
popa
or
cmp
shl
dec
mov
inc
repnz
fstpl
int3
add
mov
and
cmpsl
fiaddl
es
loope
push
jbe
fisubl
xchg
in
inc
or
mov
subl
pop
dec
pop
fidivl
leave
cmp
pop
shl
enter
inc
int
lods
ret
mov
sbb
popf
stos
inc
sub
fs
adc
ljmp
add
pop
mov
popf
stos
int
and
xor
int3
aas
aaa
scas
xor
sbb
dec
mov
pmaddwd
and
or
and
inc
inc
mov
push
into
loope
rol
jne
imul
test
lret
lret
mov
ret
addr16
add
jmp
push
je
and
adcb
loope
lret
jecxz
fwait
fs
mov
sarl
jne
push
cmp
inc
stc
sahf
leave
inc
inc
pop
xor
mov
sbb
sahf
sbb
test
sahf
and
std
push
gs
lret
dec
testb
xchg
dec
out
xorl
mov
iret
loop
jae
sbb
or
rcrb
jns
icebp
and
mov
fwait
adc
jno
test
sub
ss
add
mov
add
mov
stos
mov
inc
ret
xchg
jecxz
pop
shrl
pop
mov
test
sbb
push
cwtl
sti
or
xlat
repz
out
ret
in
dec
into
mov
iret
sbb
sub
mov
adc
jnp
les
ds
xchg
mov
xlat
cmc
ffree
mov
mov
repz
enter
popf
out
jno
mov
std
lods
out
popa
inc
dec
out
mov
sbb
mov
mov
and
in
gs
sbb
pusha
dec
pop
add
mov
je
inc
pop
mov
jg
xchg
mov
dec
cmp
les
shl
push
lahf
cs
out
shlb
std
out
adc
stos
or
in
cmp
test
push
outsb
sub
cmp
rcrb
xlat
stc
mov
cwtl
ficompl
push
fnstcw
mov
aas
jge
sub
push
in
shrl
xor
mov
xchg
jnp
mov
shlb
cmp
test
mov
xchg
cmp
pop
push
mov
iret
mov
cmpsb
lods
mov
stos
or
mov
sahf
cmp
inc
cmpsb
jl
pop
pop
sbbl
roll
ja
sub
add
fwait
ljmp
dec
sub
dec
xor
enter
fstpl
cld
add
push
pop
inc
pop
push
jne
mov
xor
pop
ret
push
cli
push
add
mov
inc
cltd
stos
test
sti
jns
or
and
and
adc
pop
adc
xchg
scas
jle
sbb
dec
dec
imul
rcll
push
adc
rcrb
mov
jg
dec
scas
cmp
test
mov
mov
outsl
or
inc
sub
imul
test
outsl
scas
mov
rcll
pusha
insl
mov
mov
mov
insl
stos
daa
jno
jns
dec
sub
or
sbb
push
mov
cltd
mov
test
inc
xchg
dec
idivl
cld
nop
out
movsl
test
pop
test
test
jb
mov
dec
fsubr
or
mov
adc
js
dec
or
or
sbb
mov
roll
int
lret
jmp
or
rcr
pop
test
add
xchg
push
or
shlb
inc
push
fs
or
push
fstl
xchg
pop
sub
not
mov
mov
jmp
xchg
sub
mov
mov
add
mov
cli
jno
cmp
xchg
mov
lret
cmp
xchg
sub
addb
imul
inc
inc
int
push
les
hlt
mov
cmpsb
add
mov
fmull
ror
movsb
gs
rcll
out
int
add
aam
scas
test
and
lods
jp
scas
sahf
dec
icebp
fstl
add
jno
call
std
imull
push
push
xchg
hlt
cmpsl
aas
mov
mov
enter
jmp
mov
lock
dec
ficompl
leave
jbe
jnp
mov
inc
fidivrs
push
test
pop
push
xlat
lds
imul
rcr
mov
stc
push
adc
add
pop
sub
add
jp
idivl
out
xor
pop
mov
call
xlat
test
pop
lods
mov
xchg
jecxz
mov
sti
add
inc
into
cmp
cmp
mov
xchg
test
adc
mov
js
in
test
mov
adc
mov
push
jg
aam
or
aaa
mov
jl
sahf
cltd
loop
ja
dec
push
mov
inc
out
add
push
cld
xor
andb
sub
sbb
test
or
out
xchg
sahf
fnstenv
xlat
push
cld
jp
adc
outsb
pop
shl
inc
or
in
movsl
mov
in
loope
inc
push
mov
push
and
popf
aas
ret
loop
mov
mov
mov
inc
arpl
cltd
scas
lea
lods
repnz
sbb
in
aad
cmpsl
fwait
fwait
lcall
xchg
mov
hlt
adc
loopne
inc
push
scas
mov
or
xchg
test
xchg
push
mul
or
sbb
cltd
mov
xor
cmc
pop
loop
pop
pop
mov
ja
adc
arpl
fdivl
in
sahf
jb
pop
rcrl
jbe
test
or
xchg
je
test
pop
divb
cmp
fcoms
std
not
inc
out
push
std
add
pop
push
push
leave
outsb
cld
cmp
inc
push
sub
dec
or
aam
ja
insb
jne,pn
lods
push
push
pop
sub
sbb
out
cmp
sbb
push
push
scas
aaa
xchg
xor
gs
xchg
outsb
push
push
stc
push
outsl
sar
lea
decl
lods
sub
push
inc
mov
jb
jge
rolb
dec
jbe
les
enter
data16
push
xor
and
lods
sbb
or
mov
and
std
jge
xchg
sbb
es
or
in
mov
add
sbb
repnz
xchg
pusha
xlat
or
xlat
mov
jns
mov
mov
out
fistps
add
daa
es
in
stos
aas
aad
scas
into
xchg
jge
xor
mov
jl
sbb
aaa
mov
imul
stos
xor
push
or
insb
in
fnsave
cmp
push
sub
mov
leave
pushf
and
aad
leave
add
xor
sbb
cmp
cmpsl
cld
ret
mov
dec
jle
jns
or
inc
jne
sbb
sbb
dec
and
repz
push
adc
inc
data16
cld
or
mov
inc
dec
test
jmp
sub
push
or
cmp
icebp
jns
iret
icebp
push
jge
out
mov
or
pop
adc
hlt
and
loope
xchg
mov
cmp
pop
subb
inc
enter
std
pop
fidivrl
leave
daa
mov
pop
lods
cmpsb
cmp
bound
hlt
cmp
mov
xor
inc
enter
xchg
mov
mov
call
or
push
cmc
xor
fildll
push
enter
mov
es
lods
shlb
push
and
xchg
inc
xchg
mov
add
xchg
push
shlb
add
or
imulb
repnz
sub
sahf
aaa
and
fcoms
dec
inc
insb
sbb
jo
ret
sbb
in
mov
out
fsubl
sahf
or
fadds
xor
mov
movsb
xchg
lcall
or
sub
aaa
pcmpgtd
jecxz
adc
aas
stc
fsubs
enter
mov
lods
mov
add
enter
outsb
lock
out
sub
push
hlt
mov
test
sub
in
lea
out
sbb
jle
clc
test
pusha
xor
jno
insb
xchg
adc
fwait
mov
xchg
lcall
adc
xchg
repz
push
pop
out
lds
push
fcoms
inc
sbb
mov
push
lret
add
scas
nop
fidivl
dec
jg
mov
mov
mov
mov
jge
pop
cmp
mov
and
xorb
dec
xchg
add
out
icebp
es
pop
loop
or
inc
fisttpll
fldt
jnp
call
mov
ficompl
lret
mov
dec
jg
bound
rcrb
xor
sbb
mov
mov
push
lahf
mov
and
or
jge
xchg
inc
sbb
vpsllw
sbbl
test
or
add
sbb
daa
stos
rol
cmc
jnp
cmpsb
pop
mov
lock
xor
dec
and
loopne
jb
cmpsl
clc
out
cmpsl
mov
cmp
pushf
notl
mov
jbe
cld
adc
test
aam
imul
or
cmp
enter
imull
lds
xor
mov
es
and
jle
lahf
mov
mov
cmp
inc
fs
cmp
dec
pop
pop
mov
adc
xchg
stos
stos
and
out
gs
jle
das
dec
les
fidivrs
outsl
push
fwait
jge
mov
xor
sbb
xchg
jge
aaa
out
cmp
mov
push
nop
push
test
sbb
imul
jo
add
mov
ljmp
mov
pop
in
jl
andl
mov
int
sub
mov
pop
push
ficoms
mov
dec
xor
dec
cli
jb
fmull
in
lcall
pop
subl
jle
iret
inc
inc
shll
pop
push
mov
out
std
das
in
xchg
push
das
popf
mov
dec
sahf
sahf
pop
push
cmp
xor
sbb
pop
ret
fwait
mov
test
ljmp
jno
or
flds
out
cmpsl
neg
imul
mov
ds
repz
push
scas
cmp
jg
inc
push
mov
pop
rolb
jae
ret
adc
add
jmp
and
and
jmp
fwait
inc
and
jne
inc
rolb
pop
mov
ret
pop
fsubl
push
in
insb
js
shlb
cmpsb
addr16
sbb
into
xchg
push
rcrl
and
push
xchg
dec
add
adc
in
fldcw
bound
sarb
jno
fsubrl
test
sub
and
outsl
pop
jae
mov
push
inc
ret
sbb
sahf
sub
fwait
mov
arpl
mov
jo
push
iret
call
ljmp
daa
and
addb
xor
scas
test
ds
out
js
in
arpl
loope
aas
or
pusha
sarb
mov
cmpsb
cmpl
adc
jle
xor
out
and
dec
pop
dec
inc
jns
jmp
sub
pushf
fbld
or
in
pushf
sub
xchg
inc
dec
cs
cmc
pop
negb
inc
cmp
pop
mov
xchg
add
loopne
iret
mov
jo
mov
adc
idivb
scas
xor
jmp
aad
xchg
imul
pushf
push
xchg
into
sub
insl
mov
loop
pop
scas
popa
out
mulb
sti
xchg
popf
lea
fldcw
lods
in
jmp
adc
inc
xchg
repz
jns
inc
and
sbb
push
cmp
sub
cmp
xlat
shlb
xchg
mov
jbe
jno
icebp
sti
jno
mov
mov
loope
inc
mov
dec
adc
add
jb
xor
push
dec
jg
cli
lret
fldl
or
sbb
fwait
adc
adc
cmpl
fidivrs
xchg
xor
lret
negl
cli
testb
pushf
lcall
push
nop
inc
push
inc
sbb
aam
mov
cs
sbb
inc
sub
addl
xchg
lret
repnz
orb
scas
mov
dec
icebp
dec
js
popa
xchg
adc
ss
cmp
or
push
lods
dec
repnz
pop
adc
jge
ljmp
clc
push
clc
and
xor
out
iret
push
rorb
lods
adc
jl
jns
jo
cmp
pop
sti
fnstsw
sub
out
das
or
sbb
cmpsb
jns
out
int
test
outsb
inc
cmc
fwait
pop
test
rcr
jne
push
push
dec
out
int3
jbe
pop
sub
xchg
mov
sub
mov
movsb
pushf
out
icebp
imul
je
aas
push
push
mov
pop
pop
lock
pop
out
pop
ret
das
aaa
nop
jb
push
scas
ds
ret
push
and
xchg
pop
adc
sub
mov
sub
loopne
daa
dec
mov
jecxz
cmp
sahf
hlt
sub
cmp
imul
int3
adc
push
daa
int3
add
mov
aam
pusha
add
pop
mov
imul
push
jecxz
pusha
or
sub
mov
xchg
les
mov
or
std
add
loop
push
cli
inc
xchg
xor
mov
inc
lods
icebp
fucomip
inc
cmp
hlt
xchg
jno
lahf
mov
fsubrp
xchg
push
sub
ja
mov
out
fdivs
add
test
in
adc
mov
test
mov
xor
push
mov
test
gs
shlb
mov
repz
push
jae
sub
xor
mov
nop
cmc
or
bound
and
jle
in
movsl
mov
sarl
push
aas
jl
jge
jns
outsb
fistpll
loop
adc
mov
cmpsl
out
sbb
xor
ret
push
push
jns
imul
add
sbb
cmpsl
pop
popf
scas
cmp
jg
out
stos
out
jle
ret
out
or
daa
pop
out
pop
xlat
orps
and
push
pop
test
andl
daa
push
jo
adc
jecxz
cmp
lahf
jp
inc
lret
arpl
data16
les
sub
pop
and
outsb
inc
dec
ret
push
cli
fstps
sbb
cld
pop
cmp
mov
fiadds
mov
cmc
inc
cmc
movsl
clc
mov
cld
fmull
fsubs
cmp
push
xchg
sbb
mov
sub
in
fwait
in
and
arpl
loopne
imul
mov
mov
jp
push
cmp
push
pop
test
cmp
out
inc
add
enter
jg
and
scas
add
add
pop
xchg
sbb
mov
xor
sti
pop
insl
adc
mov
sbb
aad
imul
js
ds
xor
ja
imul
jbe
ja
dec
into
int
xor
movsl
roll
leave
push
testl
js
xchg
pushf
sub
test
std
cmp
xchg
call
or
iret
pop
adc
pop
add
inc
sub
mov
outsb
pusha
jmp
pop
mov
call
rolb
out
lea
mov
in
add
sahf
test
sub
mov
and
lock
ucomiss
popa
mov
notb
inc
clc
cmpsl
out
lcall
jle
fldcw
add
pop
pop
sub
push
data16
xorb
jae
xchg
aaa
aas
inc
lcall
aad
xor
repz
adc
cmp
mov
lea
jo
in
je
jnp
sbb
push
test
mov
gs
loope
jmp
fcompl
adc
jne
jl
inc
cmp
mov
js
aaa
dec
pop
cwtl
sub
sbb
fsubrs
xchg
jmp
xchg
outsb
fmul
xchg
push
cmpsb
mov
les
stos
mov
adc
sar
addl
outsb
and
mov
pop
xchg
cs
mov
mov
aas
lock
sbb
pop
xlat
xchg
xchg
pop
ficoml
repnz
movsb
imul
movsb
inc
mov
add
stos
or
or
add
mov
xchg
cmp
jbe
stc
dec
fdivrs
or
or
cmp
add
movsb
imul
ficoml
and
dec
into
shll
dec
test
je
das
int
cmp
divl
insb
adc
xchg
push
rcrl
stc
pop
fs
mov
fimull
and
cmp
and
sbb
pop
loope
jle
pop
and
mov
test
imul
into
jecxz
lods
popa
out
mov
cmp
repz
inc
cli
scas
adc
pop
dec
ljmp
dec
cmpsb
das
insl
aam
arpl
xchg
loop
xlat
sub
daa
inc
pop
push
lahf
ss
inc
lods
push
cwtl
mov
mov
orb
mov
sbb
mov
fstp
mov
flds
inc
leave
sbb
pop
call
mov
cmpsb
out
test
int
mov
ja
mov
mov
mov
add
shll
cmc
and
sbb
add
mov
es
push
pop
fucomi
push
negb
pop
jnp
mov
mov
ficomps
les
or
pop
jecxz
add
stc
or
cmp
pop
sbb
dec
les
jo
mov
call
inc
out
inc
out
cmpsb
fmul
dec
sub
inc
movsl
mov
xor
cmp
adc
frstor
ror
jge
pop
and
pop
mov
fs
outsl
cmp
repz
inc
iret
andl
sub
cmpsl
push
mov
mov
jns
or
rorb
and
xchg
adc
insl
jne
cmc
add
add
jbe
stos
mov
mov
shl
jb
add
cmp
faddl
lea
shll
pop
jge
lods
cmp
push
lods
xchg
loope
ds
mov
and
fsub
fildl
repnz
fwait
inc
adc
call
mov
push
in
stos
sbb
fwait
sbb
sub
sti
rorb
cli
movsl
stc
push
add
jno
cmpsb
pushw
xchg
jg
mov
sub
iret
jae
sarl
leave
push
nop
cmpsl
xchg
or
cmpb
sub
mov
push
rcll
add
push
test
mov
mov
push
addr16
adc
cmpsl
push
scas
loopne
aaa
das
mov
cmp
push
int
and
rolb
pop
dec
test
sbb
aaa
int3
mov
enter
push
dec
xchg
dec
xor
insl
and
inc
mov
rcl
lods
je
rdpmc
fistpll
cmp
push
movsl
sbb
cwtl
xchg
jno
mov
movsl
jbe
pop
add
push
or
xlat
xchg
jne
fwait
js
sub
fldl
nop
dec
or
and
xor
mov
arpl
jl
pop
ljmp
pop
xchg
mov
inc
mov
sub
jb
xor
add
pop
or
mov
xchg
lea
test
ja
push
cs
addr16
and
dec
sub
and
mov
in
cmp
push
rcrb
call
insb
pop
scas
lret
mov
push
or
jge
adc
sub
jnp
xor
add
repnz
and
loop
rorb
jle
aas
fisubs
jb
cmc
test
mov
in
repnz
pop
filds
add
sahf
mov
xchg
add
xchg
or
popa
mov
das
lahf
daa
fs
icebp
xor
jecxz
sub
ljmp
shll
inc
pop
cmp
xor
add
sbb
sarb
xchg
xchg
insl
outsl
mov
xchg
xor
mov
pop
cwtl
push
insl
and
jae
push
inc
ret
jp
shr
push
xor
subl
jl
dec
xor
leave
mov
inc
mov
bound
lods
in
in
fs
pop
cmc
or
imul
mov
test
frstor
mov
add
in
xor
pop
xor
sub
xor
insb
push
loop
mov
fadds
imul
cmp
loope
adc
mov
sub
test
adcl
pushf
movsl
pop
jnp
cmp
clc
inc
xchg
rcrl
stc
cmpsb
cltd
lret
faddl
xchg
inc
mov
mov
data16
cmc
and
add
shl
stos
aaa
add
pop
minps
sub
and
movsl
dec
inc
lcall
in
rorb
fstps
and
push
push
clc
scas
sbb
cli
lock
test
push
mov
arpl
dec
xlat
or
inc
fists
adc
std
inc
inc
push
pop
adcb
js
and
mov
push
and
and
xor
nop
pop
xor
nop
fldcw
int3
test
rcll
and
fcomip
mov
imul
cmp
sbb
test
fmul
xchg
or
outsb
push
pop
cmpsl
mov
adc
popf
repnz
xlat
cmpsb
aaa
test
fidivs
inc
sbb
pusha
fwait
inc
sbb
les
sbb
xor
lock
xor
hlt
cmp
ret
xchg
push
movsl
cmp
pop
das
dec
jle
fwait
stc
mov
cmp
in
aad
sbb
xchg
xor
push
orb
dec
sbb
push
rcr
lods
popf
mov
mov
mov
test
movsb
cld
cltd
cmp
jno
aad
or
push
pop
push
mov
add
ds
lea
out
xor
mov
movsl
arpl
pop
push
mov
mov
outsl
mov
or
adc
sbb
sbbb
mov
fnstenv
mov
mov
xor
sbb
push
mov
mov
scas
divb
mov
lods
test
cmp
lods
xor
xorb
dec
repnz
repz
test
sub
fisubrs
sbb
xchg
ds
or
pop
lods
cmp
imul
or
inc
cmpl
rorb
lock
dec
push
stos
test
xlat
out
mov
push
negl
adc
inc
xor
cwtl
xchg
jg
push
xor
je
jns
mov
sbb
ret
scas
insb
adc
cs
ljmp
test
jne
ss
insb
lret
mov
sbb
mov
or
out
push
and
repnz
xchg
ret
push
shl
push
out
xchg
cwtl
add
inc
sbb
mov
mov
inc
jg
ljmp
mov
orl
jle
mov
in
sahf
repnz
add
and
jmp
repnz
jnp
popf
jmp
pushf
fimuls
arpl
mov
inc
lea
jge
mov
out
mov
gs
in
sub
leave
adc
scas
mov
lods
push
sahf
scas
cs
inc
int
lret
jg
cmp
stos
lock
fwait
mov
xchg
mov
aam
lds
loop
mov
lea
mov
fwait
xchg
inc
les
stc
mov
fsubrs
add
fs
xor
sub
mov
test
cmpsb
cmp
lock
or
in
dec
and
sub
pop
adc
loope
repnz
incb
addl
fcomi
bound
push
dec
insb
imul
jg
loope
test
enter
mov
loopne
inc
jno
cmp
lods
xchg
not
loopne
jg
dec
imul
cs
or
add
dec
fmull
inc
cli
sub
cmp
add
lahf
mov
sbbl
arpl
imul
jno
fists
dec
jle
push
fwait
mov
data16
into
incb
lcall
stos
in
xchg
fwait
test
jmp
pop
jle
sub
movsb
add
adc
mov
scas
aam
out
sub
pop
lret
push
lret
dec
loope
sbb
push
stos
sahf
mov
mov
je
jl
in
imul
fadd
fs
and
frstor
imull
inc
sub
imul
inc
push
add
shl
aaa
or
sbb
sbb
cmc
push
stos
mov
fdivrl
inc
and
hlt
fimull
mov
push
imul
out
jge
xor
jbe
cmp
inc
mov
popf
pop
int
jb
xchg
lea
add
movsl
popa
jnp
sar
das
sub
sbb
cmpb
adc
push
sbb
leave
outsl
fbstp
dec
mov
or
dec
add
cmc
fistpll
arpl
inc
clc
arpl
pop
andb
jne
adc
inc
les
or
add
push
xor
add
and
push
call
lods
or
ret
or
xchg
aad
or
xchg
or
std
sub
mov
push
mov
or
lea
cmpb
inc
incl
jae
imul
mov
push
jmp
dec
mov
test
loopne
dec
and
les
and
fmuls
fldt
xor
dec
into
pop
cmpb
call
and
jg
xchg
pop
mov
movsb
movsl
mov
cmpsl
fwait
xor
pop
inc
xchg
shll
cwtl
sbbl
fwait
jle
outsb
push
fstl
xchg
aam
push
push
and
les
push
test
into
addr16
push
nop
dec
lock
sub
repz
shl
std
hlt
stos
xchg
arpl
inc
inc
sbb
bound
mov
inc
add
push
cmp
lcall
test
push
xor
or
mov
lods
xor
cmp
mov
dec
xchg
imul
dec
adc
lret
into
outsb
mov
cmp
xchg
mov
inc
adc
fmul
shrb
xor
push
mov
stos
call
and
in
call
xor
jo
popf
jl
add
sbb
inc
sbb
xor
mov
stos
test
fs
enter
sub
push
jle
sub
rcl
xchg
cmpsl
pop
loope
cli
adc
cmp
mov
dec
popf
out
sbb
or
jbe
sbb
xchg
or
int3
dec
inc
ja
lahf
push
lret
pop
test
mov
lods
imul
arpl
into
inc
or
ja
ret
stos
and
ds
jne
mov
sbb
mov
subb
lock
pusha
sbb
push
pusha
mov
loop
and
imul
jbe
test
sbb
fcomp
push
pop
xchg
dec
ljmp
lahf
out
imul
xchg
scas
mov
lahf
and
aaa
imul
orb
or
subl
gs
add
mov
mov
and
es
push
loop
cmp
cmp
dec
lret
sub
sub
xlat
mov
mov
nop
fiadds
cwtl
jne
popf
stos
xchg
push
xchg
test
rcrb
pop
aad
sahf
push
xchg
and
pop
lret
lods
mov
cmp
gs
xchg
xchg
and
and
push
je
lods
stos
out
xor
in
in
dec
mov
sti
xchg
fwait
je
cmp
cmp
pop
jg
pop
outsb
or
arpl
rorb
push
mov
adc
adc
and
fists
or
xor
test
movb
cmpsl
cmp
xchg
incl
or
push
ficompl
out
cmc
jmp
mov
push
sbb
test
sbb
xchg
repnz
loop
xlat
mov
sub
repnz
ds
mull
lcall
push
out
imul
xchg
rol
jl
push
push
pop
mov
dec
fwait
lahf
push
cmp
pop
push
stos
dec
push
sub
lods
scas
inc
xchg
or
xchg
jecxz
pusha
arpl
nop
loope
adc
inc
outsl
mov
inc
rclb
cmpsb
sbb
mov
imull
xor
out
das
xlat
jle
push
push
and
jns
popf
pop
fldcw
jnp,pt
jno
mov
sbb
xchg
xor
leave
ja
mov
lahf
jp
cmpsb
jo
or
jp
xor
lahf
jns
ja
daa
sub
and
adc
gs
sub
xor
out
xchg
cmpsb
mov
jne
movsl
mov
mov
rorb
cmp
pop
dec
inc
rcr
cmp
aas
and
cmp
add
pop
or
inc
int
fwait
inc
aas
xchg
lods
adc
or
int3
dec
stc
frstor
outsl
in
or
sub
mov
cmpsl
push
scas
cmp
jmp
jnp
jo
fists
sarb
lods
cmc
jbe
fisttpl
out
inc
jmp
out
mov
mov
comiss
lods
nop
inc
cmp
mov
xor
stc
jl
mov
and
insl
cmpsb
cwtl
hlt
push
in
out
pop
or
dec
cmp
mov
mov
push
xchg
test
in
fnstenv
mov
les
aad
and
push
mov
roll
repz
add
adc
mov
mov
xchg
and
jge
sub
inc
ret
sbb
push
mov
fidivrs
sub
adc
pop
out
inc
cmp
in
and
imul
inc
scas
int
or
lret
adc
loop
dec
lock
cmp
fwait
push
cmc
lcall
out
pop
xorl
fcomip
mov
mov
outsb
jge
pop
push
subl
xchg
out
jne
adc
jbe
pop
pop
mov
mov
cmp
pop
je
pushf
jmp
sub
adc
xchg
sbb
imul
jl
jle
out
sbb
mov
dec
add
test
sahf
xchg
push
mov
aas
mov
xchg
adc
add
and
add
jne
pop
jne
sub
xor
adc
sub
push
and
xchg
sub
mov
popf
jmp
imul
adc
out
je
cmp
sbb
loop
mov
mov
dec
addr16
sti
mov
cmpsb
adc
push
jae,pt
mov
sub
fsubp
jecxz
add
or
mov
dec
mov
inc
into
jo
cmp
das
jo
xor
jne
push
inc
add
or
aad
aad
pop
dec
arpl
inc
int
cmpsb
cli
xlat
mov
loopne
xor
push
dec
cmp
dec
popf
movsl
xor
fadds
dec
js
mov
hlt
xrelease
or
mov
sub
xchg
xchg
imul
adc
stos
jmp
out
addr16
add
jl
add
mov
cmp
and
adc
dec
pushf
jge
test
pusha
shlb
out
xchg
add
or
div
xchg
in
ds
es
fisttps
ss
pop
fcoms
jmp
jp
dec
jle
adc
lods
aas
mov
jae
out
xchg
pop
push
aas
das
jne
sub
mov
xor
lcall
mov
dec
xchg
mov
jge
mov
sbb
pop
cmp
jnp
pop
lock
nop
jecxz
cmp
cli
lods
adc
adc
out
ficoms
jo
mov
push
pop
jnp
test
add
pop
andb
scas
mov
inc
sahf
add
xchg
call
fisubrl
std
or
test
xor
or
dec
aam
add
cmpsl
and
push
pop
mov
pop
pop
sub
sub
jne
mov
add
mov
pusha
adc
cmp
mov
xchg
jmp
and
shlb
stos
mov
lock
fwait
lret
pop
sti
ja
jo
sub
jge
sub
cltd
push
and
add
rorl
sbb
fwait
movsl
cs
mov
push
sbb
shr
repz
inc
cmc
scas
je
enter
not
scas
mov
je
mov
ds
cmpl
cs
loopne
icebp
das
jp
aam
mov
pop
mov
xor
jo
fsubs
mov
insb
addr16
jnp
out
cli
fs
orl
mov
xchg
sti
hlt
dec
stos
add
lea
aas
rcr
dec
pusha
mov
xor
push
andl
mov
subl
jo
inc
mov
pop
inc
push
pop
sbb
repz
cli
push
adc
lahf
fadd
mov
stos
scas
mov
les
lods
cld
aas
dec
out
sbb
dec
stos
in
ss
pop
pop
lahf
mov
inc
rorb
jmp
in
fmul
test
arpl
push
loop
fs
shll
pop
inc
push
inc
cwtl
stc
sbb
movsl
js
xchg
in
imul
ds
mov
sbb
std
adc
sub
push
add
cli
pop
jg
adc
rcll
pop
fsubs
aas
andb
and
mov
pop
jno
xchg
mov
pop
iret
stos
lods
mov
inc
sbb
imul
sub
int3
or
aam
adc
stc
and
ja
clc
dec
stos
jno
cmpl
adc
dec
adcb
pushf
imul
in
movsl
stc
and
idivb
adc
jle
call
mov
popl
push
dec
xor
xor
out
ret
adc
test
jl
leave
pushf
pop
popf
add
decb
arpl
cwtl
jbe
fs
jecxz
push
dec
mov
cmp
aad
mov
enter
imul
sub
or
shlb
shl
xor
and
mov
jg
xchg
xor
fadds
das
sbb
mov
xor
ret
sahf
adc
xor
jl
ret
daa
dec
es
shlb
push
dec
fldl
stc
xor
mov
stc
enter
mov
dec
fistl
xchg
hlt
adc
sbb
xchg
xlat
mov
xchg
adc
icebp
and
push
xor
divb
jle
jbe
sub
aas
das
adc
inc
or
sbb
pop
ja
pop
lcall
imulb
stos
jns
mov
mov
fimull
or
call
lods
imull
push
ljmp
js
call
pslld
push
add
ds
sub
xchg
jp
rcrl
pop
int
sbb
ficoml
mov
push
aas
inc
inc
add
stc
mov
cld
into
xor
xchg
xor
mov
repz
rclb
adc
sub
faddl
cltd
icebp
ret
pushf
data16
mov
push
xor
ja
mov
imul
lret
inc
popf
sahf
mov
cmpsb
jno
fbld
inc
hlt
pop
jl
or
inc
insl
lcall
shll
test
inc
les
aam
inc
insb
adc
stos
cmc
mov
inc
movsb
rcr
push
enter
cmp
movsl
test
inc
scas
mov
into
insb
inc
fcomip
stc
xorb
out
ljmp
cmp
mov
sti
jecxz
in
pop
decb
sub
sub
add
orl
clc
lock
mov
scas
dec
movsb
push
or
pop
in
in
xorl
jno
aas
cmp
sub
jecxz
mov
movsb
fstps
push
out
add
cli
fxch
mov
lea
ja
mov
inc
sbb
adc
test
movsw
cli
adc
pop
mov
and
inc
adcb
cmp
add
mov
add
pusha
pop
xor
in
inc
add
mov
sbb
cmp
outsb
fmull
ret
jle
mov
xor
mov
rcll
sbb
aad
mov
ljmp
adcb
sahf
add
imul
inc
xchg
cmp
aas
xchg
gs
cmp
sti
lret
adc
sbb
and
in
adc
adcl
cmc
imul
inc
shl
cmp
movsl
imul
jg
pop
sbb
testb
sub
mov
or
adc
pop
adc
aas
lock
jge
push
inc
mov
dec
lock
jbe
out
inc
mov
push
popf
push
jge
dec
and
lock
and
stc
aad
sahf
or
cmpsb
and
into
xor
das
addr16
shr
aad
sahf
lcall
movsb
std
mov
and
leave
cltd
lea
jp
and
xchg
movsl
pushf
xor
jbe
inc
dec
call
ficomps
mov
mov
add
xor
push
pushf
xchg
lds
mov
push
adc
sub
rcrb
fsts
or
in
mov
je,pt
loope
jae
imul
xchg
int3
cmp
mov
ret
pop
push
lret
push
call
mov
mov
push
cmpsb
int
dec
sub
cs
stos
adc
push
mov
sbb
in
jp
sbb
or
ja
pop
push
lret
mov
and
cmp
cmpsb
lods
jb
mov
inc
push
pushf
fidivl
dec
mov
movsl
xor
aas
push
lret
mov
iret
sub
test
inc
jecxz
xor
mov
cmpsb
jle
mov
pop
add
mov
mov
and
lods
in
out
mov
ljmp
pop
gs
ds
xchg
repz
arpl
pusha
jnp
jmp
mov
je
jae
jl
outsb
mov
lret
xchg
xchg
pusha
adc
jge
jle
xor
jle
cld
pushf
loope
add
xor
out
xor
cmc
push
and
add
fcom
xchg
or
in
fisubrs
into
pop
imul
mov
add
cmp
fwait
ss
mov
outsb
push
lea
cld
outsb
push
lret
int
pusha
adc
xor
jmp
pusha
and
sub
outsl
adc
mov
mov
outsb
enter
mov
bswap
sbb
rcrl
add
sub
rorb
lret
es
inc
jb
les
test
adcb
mov
call
jp
arpl
mov
push
aad
sbb
lods
jle
push
hlt
adc
mov
rcr
push
mov
inc
loopne
pop
nop
dec
aam
or
push
sbb
shlb
arpl
es
add
lcall
lret
inc
int
lcall
xchg
imul
sub
mov
pop
mov
or
jl
sub
sbb
flds
pop
frstor
sbb
idivb
enter
jle
jno
nop
scas
aad
mov
jne
xor
inc
adc
mov
rcrl
push
ljmp
xor
mov
aad
cmp
xchg
ljmp
lahf
ror
addb
test
cmp
movsb
or
orl
adc
xor
out
imul
in
and
pop
arpl
mov
shlb
cs
fidivrl
scas
fnstcw
rolb
lds
cmpl
cmp
add
mov
and
repz
enter
push
cmpsl
mov
flds
inc
mov
lret
xor
daa
frstor
jb
sbb
xchg
xor
int
pop
or
enter
xchg
xorl
and
pop
out
ror
movl
inc
pop
sbb
pop
mov
inc
adc
fimuls
add
push
andl
cmp
pop
adc
enter
xchg
cmp
sahf
mov
dec
clc
insl
cmp
popa
enter
hlt
ret
jb
inc
dec
fbld
pop
adc
aas
pop
and
dec
hlt
sbb
cmp
in
les
xor
lds
pop
dec
jge
movsb
adc
mov
dec
and
sbb
push
std
jo
sti
and
cmp
pop
in
jg
add
mov
xchg
xchg
in
daa
mov
dec
repnz
popf
pop
lds
mov
and
jne
int3
adc
mov
stc
jmp
and
push
mov
lret
mov
icebp
addr16
les
arpl
fcmovnu
out
adc
jno
je
sub
ljmp
mov
aad
jnp
or
and
xor
lret
jp
jb
push
adc
fisttpl
or
mov
or
repz
dec
lahf
mov
mov
mov
pop
rcl
jnp
mov
insb
mov
sbb
pusha
loopne
in
pop
ds
inc
cmpl
enter
fsubrl
dec
xlat
mov
ja
mov
xchg
jp
daa
push
push
icebp
rorb
cli
xchg
mov
pop
mov
lret
loop
cltd
dec
gs
xchg
push
jge
mov
add
mov
movsb
lret
aaa
mov
ss
pop
pusha
push
sahf
aad
mov
inc
pop
daa
arpl
and
ljmp
sub
push
cmp
dec
daa
enter
dec
stos
jbe
pextrw
cmp
rorl
das
mov
and
mov
iret
pop
lock
mov
std
std
jne
sahf
or
jae
jb
inc
sub
scas
pop
call
bound
roll
aad
mov
add
in
lret
xor
pop
in
push
cmc
cs
jg
adc
test
and
jns
mov
insl
inc
jnp
inc
mov
movsl
jae
jo
add
js
dec
inc
aad
shlb
cwtl
xchg
jecxz
iret
add
imul
push
dec
jne
or
bound
mov
cmpsb
addl
lahf
jne
out
mov
int3
hlt
cmp
push
movsl
mov
jae
ja
imul
aaa
inc
sbb
lea
inc
mov
xlat
or
stc
std
push
sbb
popa
push
xchg
xor
push
push
lahf
jle
push
loopne
pop
ss
icebp
imul
jbe
repz
pop
ss
pop
jl
inc
mov
xor
loop
push
jle
mov
sbb
xor
stos
mov
shll
sub
addr16
xor
outsb
push
mov
inc
add
repz
mov
rorb
lods
in
repz
mov
mov
mov
icebp
cmpsb
add
std
sub
fwait
test
add
ja
push
dec
xor
and
cli
ret
pop
ds
sub
test
addr16
loopne
jmp
scas
sar
hlt
bound
cld
gs
push
jns
decb
push
add
data16
and
mov
scas
dec
in
lds
mov
mov
jle
andl
push
aam
and
pushf
enter
fs
and
jb
pop
pop
icebp
in
jl
jne
add
ss
or
mov
adc
push
lds
dec
lcall
push
cmp
jmp
push
and
pop
fucom
jl
sbb
inc
xor
jmp
fcmovu
push
mov
mov
in
icebp
sub
gs
or
shrb
ret
push
inc
adc
enter
fstpl
inc
fldcw
or
decb
push
pop
repz
mov
xchg
btr
push
jmp
ss
inc
pop
lret
inc
frstpm(287
outsl
std
sbb
or
scas
bound
nop
cmpsb
inc
loope
imul
jae
sbb
dec
pextrw
inc
idivl
jno
sti
stos
mov
in
mov
jmp
dec
adc
es
out
pop
mov
xchg
loop
adc
lret
fwait
orl
les
aam
and
mov
cmpb
inc
sub
mov
aam
rcrb
mov
pushf
push
sbb
out
das
pop
or
and
dec
push
jns
and
lret
cmp
dec
push
data16
les
mov
xor
movl
lret
ss
sub
int3
in
push
ja
xchg
xor
popf
ret
movsb
lds
insb
test
in
or
push
xor
pop
pop
out
jmp
or
adc
sbb
mov
clc
mov
push
sub
sbbb
xchg
cltd
jno
daa
mov
inc
outsb
mov
rcr
ds
das
xchg
pop
xor
jle
sbb
pop
or
lcall
pop
loop
out
nop
mov
mov
sub
out
stos
cld
and
into
movsl
push
pop
pop
jge
ja
mov
in
add
enter
push
inc
pop
fistpll
fwait
dec
xlat
jecxz
adc
mov
jae
xchg
mov
in
repz
adc
std
pop
test
fdivr
sbb
jbe
fmull
popa
repz
xchg
out
adcl
add
je
leave
xchg
xchg
or
je
aam
jae
cltd
pop
mov
or
call
push
mov
daa
mov
lods
pop
pop
adc
mov
in
mov
xchg
add
and
mov
xor
adc
mov
daa
imul
sahf
cmp
dec
outsb
scas
dec
scas
leave
or
adc
arpl
ss
pop
inc
mov
insl
mov
inc
enter
sahf
insl
adc
jmp
cmpsl
aam
push
mov
insl
dec
mov
mov
pop
lock
push
xchg
cmp
repz
xor
loopne
mov
add
addw
mov
outsb
mov
adc
pushf
imul
ret
and
pop
sarb
or
xchg
dec
ljmp
mov
rorb
rcrl
push
adc
nop
ret
int
sub
dec
lret
in
ret
std
inc
sbb
mov
jmp
inc
mov
das
loopne
mov
imul
mov
pop
ds
inc
xor
lret
pextrw
or
add
das
xchg
negb
andl
inc
mov
jp
mov
inc
fldenv
lock
fwait
push
xor
sbb
adc
gs
mov
aad
lahf
js
push
fwait
sbb
pop
xchg
imul
adc
das
mov
aad
ss
mov
xchg
cli
push
mov
gs
adc
fsubl
xor
out
sbb
jbe
push
rep
in
mov
ljmp
scas
out
jns
out
out
cmc
test
lcall
dec
data16
inc
adc
mov
lea
jecxz
ficompl
repz
dec
and
and
scas
xchg
cmc
ja
lret
lods
push
test
int3
popf
loope
mov
pusha
xor
mov
xchg
add
ret
and
stos
adc
add
mov
loop
xchg
adc
xor
cmp
jmp
gs
mov
xor
push
inc
sbb
mov
xchg
inc
sahf
cmpsb
dec
pop
in
test
idivl
mov
or
pop
push
rcrl
xor
cwtl
and
ret
fidivrs
and
shrl
out
in
call
inc
aas
cmp
cmovo
enter
xor
fldl
pop
fmul
pop
push
sbb
stc
shrb
push
xchg
cwtl
jg
insb
scas
push
test
ss
ret
fwait
jl
pop
pop
dec
aad
sub
outsb
adc
push
sbb
pop
ja
cmp
xor
xlat
sbb
mov
out
mov
movb
jp
enter
and
pop
ret
mov
sbb
bound
out
xor
stos
adc
mov
iret
pop
push
inc
push
arpl
xor
sub
inc
ss
sbb
lods
das
mov
push
xchg
or
dec
dec
pop
pop
push
or
xor
or
push
lahf
orl
adc
cld
lret
or
inc
mov
je
je
cli
lcall
movsl
jne
sti
jp
bound
push
push
mov
mov
mov
push
sub
stc
mov
cs
jge
mov
jbe
inc
loope
in
mov
call
mov
mov
lea
fiadds
movsl
pop
sahf
jg
gs
loope
out
sbbl
aas
jae
jp
sahf
adc
clc
arpl
dec
jge
inc
cmpsb
sbb
inc
out
int
lret
cmp
std
lock
or
adc
cmp
push
mov
in
fucomp
lcall
pop
addr16
stc
add
inc
pop
mov
andl
pop
testl
aaa
xchg
in
ja
sub
sti
xchg
add
or
push
adc
in
stos
fiadds
push
ret
cmpl
insb
xchg
xchg
cmpsl
mov
decb
sub
mov
cld
jae
int3
je
push
mov
push
sbb
mov
fiaddl
jle
mov
adc
stos
lock
dec
aad
fisubrl
mov
push
xorb
fisubrs
leave
mov
rclb
push
mov
jp
add
les
loop
lods
cli
push
roll
jge
mov
dec
xchg
ds
xor
je
push
cltd
push
cmp
mov
add
mov
dec
leave
cmovns
inc
out
fsub
icebp
cmpsl
ds
rcll
scas
sbb
jecxz
cmp
je
lds
in
clc
sbb
cs
add
pushf
push
sub
dec
xchg
addr16
sbb
pop
fcmovnu
mov
dec
aam
dec
inc
movsl
mov
xchg
pop
sbb
repnz
xchg
jle
xchg
inc
sti
cli
sarl
dec
data16
push
enter
ljmp
sbb
cmp
cmp
cmp
mov
pusha
add
push
popa
das
sub
cmpsl
dec
enter
repz
sub
cmpsl
push
xchg
cmp
imul
xchg
or
lds
add
les
leave
push
mov
xchg
ljmp
push
out
out
or
insb
psrad
mov
mov
clc
out
mov
in
mov
adc
scas
sbb
cmp
gs
adcl
loop
push
insb
or
movsl
push
es
call
jp
outsb
xor
mov
in
mov
adc
std
aaa
push
sbb
and
movsb
cmpsl
test
int3
add
mov
mov
mov
push
sub
dec
sti
sub
vpcomub
pop
mov
sub
pop
jge
mov
hlt
inc
mov
lahf
jmpw
fwait
call
loope
fldcw
dec
add
sahf
add
stos
in
mov
stos
lods
fistpll
test
outsl
in
dec
test
pushf
subl
cld
in
mov
cmpsb
insb
mov
mov
pop
mov
dec
and
aas
bound
or
loop
or
pop
inc
stos
repz
lahf
adc
mov
rorb
jge
or
xchg
ja
sahf
mov
dec
nop
jnp
xchg
adc
ds
and
push
sub
xor
jmp
rorb
insl
dec
mov
xor
rcl
cltd
iret
inc
int
loop
add
push
mov
or
loop
int3
ss
jb
jecxz
or
std
mov
xor
outsl
lods
dec
ret
adc
adc
movsb
std
xor
mov
xor
inc
mov
test
rcrl
sbb
jl
popf
stc
orb
jne
push
ss
push
insl
fsubl
loopne
test
ja
add
mov
sbb
fs
pushf
push
and
bound
ja
fcomi
shl
pop
inc
std
or
xchg
stos
rolb
pop
mov
jmp
sub
add
pusha
and
call
ja
iret
push
or
cmp
push
mov
push
das
stos
mov
and
stos
pop
ja
call
outsb
cwtl
mov
jmp
adc
loop
out
lock
mov
sub
pop
inc
push
jns
loopne
xchg
mov
or
jns
ljmp
xor
addr16
xchg
nop
inc
sub
shrb
inc
inc
dec
and
and
push
mov
xchg
ja
jae
pop
sub
call
dec
cmpsl
sbbl
mov
stc
mov
jge
cltd
aaa
xchg
cwtl
mulb
push
loope
mov
mov
aaa
add
or
outsb
inc
adc
adc
stos
and
xchg
mov
ja
push
cmp
mov
shl
xor
mov
lahf
ja
idivb
les
sbb
adc
sbb
xor
push
popf
push
movsl
test
xorl
in
sub
adc
xor
fwait
pushf
sub
test
icebp
cmp
inc
xor
gs
rolb
add
jg
mov
es
pop
sub
push
nop
je
nop
rcrl
mov
cmp
decl
daa
jle
movsb
pusha
out
cltd
lea
mov
mov
jg
cld
add
dec
mov
and
cmc
aas
les
dec
push
pop
leave
out
push
pop
es
int3
pushaw
pusha
pop
test
aad
push
in
mov
dec
sarb
mov
cltd
add
sub
outsl
cmp
mov
int3
sub
and
adc
jbe
lea
fmuls
inc
cmc
xchg
cld
fisubrl
das
or
inc
imul
cmpsl
sub
test
inc
ret
mov
lcall
loopne
movsb
push
mov
clc
clc
jns
xlat
mov
repz
ret
dec
pop
fwait
in
mov
repz
mov
mov
pusha
jae
dec
dec
mov
movsl
imul
jns
sub
xchg
jp
test
pop
mov
adc
lods
mov
rclb
icebp
popa
xor
pop
inc
or
and
or
lods
adc
mov
adc
js
out
arpl
cmc
push
bound
es
mov
mov
sub
or
sahf
addb
sbb
mov
pop
das
mov
sub
mov
fcompl
mov
push
add
sbb
pushf
dec
cmpb
push
add
xchg
cmpsb
sub
or
repz
repz
push
xor
mov
pop
aad
fmull
sahf
inc
adcb
movsl
stos
mov
jecxz
and
push
jne
leave
test
push
ja
gs
loop
popf
xchg
xchg
add
sub
cltd
jecxz
aam
pop
or
icebp
adc
inc
adc
mov
aaa
push
das
je
or
cmp
cs
jns
adc
je
push
aaa
in
stc
shlb
fisubrl
test
insl
and
scas
xor
scas
lea
lds
xchg
fstps
jl
mov
xor
ud0
and
jp
movb
pop
pop
adc
mov
or
arpl
lret
or
data16
adc
rcl
adc
in
jae
sti
leave
xchg
mov
add
hlt
insl
xchg
lods
and
add
lds
adc
rclb
cwtl
in
fs
dec
stos
fmull
push
js
pop
mov
or
jmp
xchg
jno
jl
xchg
mov
pop
xlat
fadd
mov
sti
out
daa
adc
out
mov
mov
andl
inc
test
mov
repz
sahf
pusha
xor
mov
dec
test
mov
mov
pop
mov
push
adc
ret
pop
mov
pop
mov
fcomps
fisubl
push
sub
add
cltd
pop
pop
ss
mov
rol
xchg
or
inc
ljmp
pop
popa
shlb
sarl
das
data16
sub
in
push
in
or
jb
cmp
cmpsl
pop
or
aas
imul
pop
push
cmc
sbb
xor
addr16
cli
sub
adcb
adc
jno
xchg
jmp
mov
std
fwait
or
push
mov
mov
loopne
hlt
dec
rorb
mov
out
push
dec
int3
and
jnp
jecxz
adc
shlb
pop
test
cmp
movups
gs
fcmovb
gs
sbb
adc
dec
lret
and
int3
or
stc
out
pop
rorl
jnp
jnp
cmp
jg
push
outsl
push
les
push
jo
stc
sbb
mov
jmp
je
sub
inc
jmp
add
out
pop
and
inc
in
mov
mov
call
aam
dec
enter
movsl
push
rorb
mov
xchg
fstpt
sbb
mul
xor
gs
adc
jl
xchg
mov
xchg
pop
pusha
push
inc
pop
mov
test
test
repz
incl
sbbl
add
scas
aad
iret
pop
xchg
cmp
jle
insl
in
add
fimull
inc
or
scas
out
mov
xor
out
sub
test
notb
mov
xchg
loopne
testb
int3
mov
and
inc
das
sbb
adc
pop
iret
mov
out
int
mov
push
mov
and
mov
jns
push
mov
jns
movsb
loopne
sbb
stc
jecxz
jp
or
sub
enter
sub
sbb
inc
push
xor
jp
push
push
mov
push
mov
inc
xor
test
and
nop
lods
pop
or
shrl
add
jnp
dec
mov
jecxz
xlat
add
nop
push
leave
or
push
mov
mov
xor
adc
decl
out
inc
xor
fistps
cmp
adc
in
int
cmpl
xchg
or
mov
sub
mov
loope
jmp
out
gs
xchg
sti
pop
add
orb
xlat
cwtl
push
inc
stc
clc
pop
jnp
loopne
xor
loopne
int
and
inc
mov
ja
xchg
mov
nop
sub
sub
fldt
jl
mov
push
add
mov
movsb
mov
jnp
loope
pop
adcl
mov
pusha
mov
sub
xlat
pop
shlb
xchg
dec
mov
outsb
and
fnstsw
sub
add
fadd
and
adc
sbb
jns
lds
dec
jg
cli
stc
push
cmc
cmc
mov
flds
adc
fwait
sub
ljmp
sbb
and
mov
mov
clc
aam
and
dec
adc
lods
jp
sub
lcall
or
lea
xor
lds
scas
fistpll
lcall
outsb
aad
into
jge
out
sub
movl
out
adc
xchg
es
xchg
xchg
cmp
icebp
pop
pop
ja
xchg
mov
xor
cmp
and
fsubr
cs
adc
cli
jle
pop
popa
fwait
loop
cmp
inc
imul
frstor
fisubrl
lods
dec
inc
in
sbb
neg
mov
adc
mov
int3
rcrl
in
push
mov
xchg
or
inc
out
inc
je
mov
popf
pop
xchg
sub
in
adc
push
xchg
xchg
adc
sbb
jnp
adc
xchg
jno
out
cmpsl
add
sbb
rcr
rcpps
test
leave
add
dec
js
sbb
push
cmp
cmp
cmpsl
loopne
jecxz
lret
out
lock
or
adc
mov
push
jne
imull
inc
je
sub
cmpsl
cmp
xchg
or
jno
cmp
sbb
xor
cmp
int
in
je
mov
outsb
pop
aam
out
and
scas
cmpsb
pop
outsl
push
fcmovnu
lods
pop
xchg
das
dec
cmp
enter
enter
sub
in
sbb
f2xm1
mov
mov
daa
cmc
or
inc
inc
jne
or
ljmp
cs
mov
clc
mov
and
test
cwtl
xor
sub
out
in
mov
dec
lret
das
push
jge
jno
jle
loop
scas
in
repz
iret
jg
and
das
out
loope
sbb
or
sbb
test
testb
mov
int
mov
daa
adc
ror
loopne
mov
insl
or
popf
mov
mov
or
test
cmc
push
insb
mov
hlt
loopne
pop
fimull
das
popf
dec
test
adc
in
insb
scas
in
test
pushf
repnz
sub
pop
mov
in
xchg
enter
xchg
adc
pop
fcoms
mov
adc
hlt
and
clc
inc
adcb
cltd
cmp
xlat
xor
dec
mov
pop
decb
dec
je
push
cmp
ret
pusha
mov
push
loop
dec
sarb
ret
repnz
dec
adc
mov
push
mov
in
and
sub
rolb
push
push
jg
fsubs
fsubs
push
lds
in
stos
je
xor
jp
sub
mov
dec
movsl
shr
cmp
insb
push
rolb
xor
adc
out
dec
aas
mov
lods
mov
push
or
mov
data16
cwtl
jmp
mov
stos
cmpsb
xlat
movsb
lret
jge
mov
insb
inc
jo
std
jmp
jb
test
int
and
lds
int
subb
add
fildl
sub
cltd
jg
cmc
fistl
dec
mov
adc
cmp
xor
loope
clc
iret
add
sub
std
fcoms
fimuls
sub
pop
cmp
sbb
inc
orl
and
jno
and
aam
sbb
dec
xchg
dec
adc
inc
push
scas
inc
pusha
jge
ja
nop
xchg
jnp
into
lods
pop
and
fidivl
sbb
xchg
xchg
inc
push
pushf
mov
jmp
xchg
mov
cld
fldcw
lahf
fiadds
cld
push
lods
mov
add
mov
pop
ljmp
push
mov
stos
or
stos
negl
mov
xchg
ret
data16
push
imul
loopne
add
mulb
xchg
js
inc
or
jne
xchg
mov
aaa
push
xor
jmp
mov
lds
pop
add
sbb
adc
inc
xchg
inc
cmp
xchg
adc
insl
scas
sbb
push
add
push
pop
in
dec
popa
cltd
adc
outsb
out
push
xorl
add
insb
sub
fmull
gs
aad
xchg
cltd
ja
push
mov
inc
test
add
fs
in
ljmp
aad
or
or
loopne
dec
jmp
fmull
pop
int3
jnp
aam
mov
mov
fsubs
sbb
mov
sbb
fidivrs
lock
fdivp
mov
fwait
call
push
push
aas
ja
cli
cmp
xor
test
inc
cmp
mov
cltd
je
fisubrl
xor
or
das
cmc
pop
ficompl
pop
and
dec
jl
add
adc
mov
inc
daa
pushf
pop
aad
sbb
arpl
sarl
sub
repnz
faddl
cmpl
and
mov
mov
fucom
mov
rcrb
sahf
nop
add
rcrl
mov
sbb
inc
sbb
sbb
adc
outsb
adc
test
outsb
mov
xchg
and
leave
scas
push
xor
iret
shl
mov
int3
and
sbb
cmp
push
cltd
sarl
add
dec
out
fdivrp
pop
adc
add
fmuls
pop
repnz
xor
out
push
sub
jmp
cmc
add
cwtl
cli
mov
push
push
sbb
hlt
push
leave
jmp
aas
in
jns
sub
xchg
xor
jle
mov
es
mov
push
xor
les
mov
mov
dec
ja
aaa
clc
xor
int3
or
fisttps
cmp
and
xchg
mov
pop
push
lock
mov
jne
insb
xor
or
xchg
jmp
fnstcw
adc
adc
loope
xchg
dec
or
mov
ljmp
insl
pop
addl
xor
mov
filds
sub
xor
imul
and
addr16
out
adc
out
xor
pop
daa
and
jae
je
aad
sub
testb
fcomp
pop
pop
inc
xor
xchg
sbb
cmp
mov
jmp
xor
lods
pusha
dec
push
push
lahf
jae
sbb
mov
sbb
mov
loopne
ret
jno
lahf
push
out
out
aas
jge
pop
mov
sahf
cwtl
ljmp
insb
imul
fwait
pop
lret
push
repz
std
test
inc
xchg
mov
cmp
sub
adc
fisubl
stos
scas
jl
ljmp
enter
and
pop
pop
jp
loopne
cltd
shlb
add
out
test
adc
aam
add
adc
push
xor
mov
mov
clc
int
xor
iret
xor
jecxz
das
push
or
cmp
or
adc
push
arpl
mov
xor
cli
mov
mov
repnz
sahf
scas
jl
sbb
xchg
rorb
adc
in
ds
sahf
jnp
das
stos
daa
adc
dec
push
push
bound
loop
mov
lcall
scas
test
into
mov
xor
fs
testl
das
aad
ja
sub
iret
adcl
fstl
or
xlat
and
idivb
sbb
loope
popa
and
or
fldlg2
into
mov
adc
movsl
lret
xor
out
cld
in
mov
mov
and
aam
mov
pusha
ja
mov
int
or
outsb
dec
dec
outsb
test
jge
into
jns
outsb
rorb
xchg
stc
into
inc
loope
mov
jne
popf
adc
mov
jnp
mov
pop
mov
and
sbb
or
add
aas
pop
push
pop
arpl
in
sbb
cmpsl
xor
jmp
sti
in
push
imull
xchg
xor
in
outsb
ret
sub
shll
movsl
imul
loope
sahf
jae
loop
in
sahf
cmp
push
popf
push
shrb
sbb
pop
mov
lea
pop
sahf
sbb
mov
push
bound
mov
lods
lock
inc
mov
jno
and
outsl
push
jecxz
ret
mov
mov
push
mov
mov
or
or
xchg
jo
jmp
shrl
xchg
fs
sub
dec
dec
je
push
mov
cmp
jno
xchg
inc
mov
sbb
loop
sarb
in
dec
push
cld
add
popf
ja
ds
mov
lds
cmp
jne
jbe
dec
test
jno
in
cltd
arpl
mov
fistl
insb
sub
cmp
icebp
xor
inc
and
test
fsubs
mov
outsl
mov
xchg
push
adc
enter
adc
inc
lret
roll
mov
enter
cmc
leave
jcxz,pt
mov
jns
das
dec
cmp
jnp
cmp
cmc
dec
int3
in
jg
fisubs
cmpl
fs
leave
xchg
adc
arpl
jnp
test
adc
les
cltd
and
movsl
in
mov
push
jecxz
scas
adcl
mov
push
sbb
pop
icebp
fmuls
pusha
and
dec
xchg
sub
pop
sub
lret
jge
sub
pop
mov
imul
insb
add
xor
outsl
and
pop
pop
imul
and
fdivs
jg
adc
mov
ret
adc
aas
mov
jmp
push
push
sub
and
insl
adc
rorb
iret
pop
loopne
push
div
call
pusha
movsl
push
fs
inc
sti
add
xchg
lahf
push
xchg
inc
aad
or
push
push
inc
cmpsl
add
call
and
js
test
lods
popa
inc
xchg
fcomps
shl
aas
decl
out
sarl
add
lea
inc
xor
mov
mov
popa
xchg
adc
adc
bound
fistl
xchg
xchg
pop
add
stc
mov
mov
enter
cmp
sub
and
call
cli
js
adc
xchg
and
and
xor
xor
cmp
in
jg
sub
push
push
cmp
das
pop
rolb
sbb
in
decl
repz
iret
jge
adc
jle
mov
out
adc
and
inc
adcl
xor
pop
mov
adc
lret
movsb
sbbl
dec
add
jl
push
dec
pop
cwtl
sbb
mov
push
xor
lret
jge
jae
mov
push
push
decb
and
inc
push
pop
cmc
rorb
stos
sbb
in
sub
cmp
ret
clc
add
filds
sbb
ja
pop
jb
into
in
mov
scas
movsl
jecxz
aas
jb
xchg
push
and
je
imul
sub
dec
cltd
pop
xchg
pop
pop
aas
mov
out
cmp
sub
popf
sub
xor
pop
cmp
lret
aad
or
jbe
add
fistpll
std
scas
ss
xchg
popa
cwtl
mov
push
repz
mov
mov
add
pop
mov
mov
lods
cmpsb
int3
sub
push
and
jne
pop
inc
xchg
imul
cmp
sahf
repnz
fdivl
in
lods
imul
or
loope
and
cmp
mov
sbb
jne
xor
enter
dec
mov
andl
shll
jecxz
shrd
ds
pusha
push
pop
int
and
inc
fsubl
icebp
out
cmp
mov
negb
cmp
add
dec
sub
testl
loop
inc
mov
inc
pop
repz
repnz
mov
popa
out
shlb
push
inc
jno
pusha
inc
mov
adc
xchg
inc
out
dec
jnp
pop
mov
fadds
rcl
mov
jae
push
imul
fadd
cs
in
and
in
xor
scas
rcl
cwtl
icebp
push
out
sti
xchg
ljmp
sub
inc
adc
push
pop
sub
in
pop
xchg
and
pop
into
push
xchg
push
arpl
test
sub
cmp
enter
or
ljmp
pop
inc
movl
jbe
push
ljmp
push
adc
jle
pop
or
jns
inc
push
rclb
mov
adc
data16
shll
adc
iret
ret
ds
int
insl
nop
in
and
lds
rcr
sbb
cwtl
mov
je
adc
gs
jge
fidivl
xlat
cmp
pop
inc
xchg
cmp
mov
mov
dec
mov
test
add
aam
repz
cmp
sbb
test
cmpsl
or
out
jae
loope
lock
mov
adc
test
mov
or
lds
adc
dec
loop
arpl
inc
cmp
aaa
shrb
ja
rolb
xlat
mov
sub
ja
fisttpll
aaa
call
in
cmp
testb
mov
shlb
in
dec
mov
xlat
lock
rolb
jae
fcompl
sbb
dec
sarb
mov
enter
add
rorl
pusha
pop
sti
dec
test
jo
movsl
fisubrl
add
adc
out
adc
loope
icebp
sbb
test
out
ja
loopne
stos
hlt
xchg
mov
and
xchg
mov
inc
sbb
push
and
sub
out
dec
jecxz
inc
xlat
pop
mov
outsb
das
fwait
adc
aam
push
mov
jb
cmp
xchg
repz
sub
sub
lahf
pop
fbstp
ja
sub
add
adc
pop
sbb
cmc
pop
outsb
jle
cmp
push
inc
mov
ja
xor
mov
lahf
xchg
cmpsl
inc
jp
xchg
arpl
cmpsl
xchg
add
mov
push
push
push
or
push
push
fld
mov
scas
jb
jno
mov
jne
sbb
loope
leave
aam
fidivl
scas
inc
or
mov
lret
xchg
enter
into
push
jg
mov
pusha
xchg
mov
andl
out
xor
lods
int
lret
in
or
xchg
addr16
jbe
push
adc
push
shll
mov
insb
dec
mov
pop
fidivrl
les
push
mov
test
loope
lret
cs
sahf
adc
push
pop
lods
push
inc
fsts
aam
mov
sbb
rep
inc
jno
shl
pop
adc
pop
adc
xor
mov
dec
xlat
pushl
enter
xchg
imul
xor
mov
cld
push
filds
pop
cmp
movsl
and
sub
xlat
xor
lds
xor
inc
pop
shl
xchg
int3
scas
cmp
mov
sub
pushw
dec
imul
mov
lahf
bnd
fisubl
and
pop
aas
lret
clc
add
scas
push
hlt
ja
push
xchg
adc
and
pop
cli
or
dec
jns
test
divl
add
js
mov
xchg
dec
dec
mov
aam
jle
arpl
nop
or
mov
dec
push
inc
in
addb
pop
mov
mov
xchg
lret
xor
xchg
adc
pop
inc
adc
mov
std
daa
jae
mov
inc
jb
push
jmp
test
xor
xor
lods
xor
and
sub
pop
movsl
popf
in
dec
sbb
inc
filds
sub
adc
xchg
jb
add
es
imul
cwtl
in
or
sub
ss
cltd
stc
in
scas
stos
mov
jnp
std
ffreep
xor
mov
lock
adc
add
insl
pop
mov
lahf
adc
jo
outsb
mov
push
in
sub
repnz
or
adc
ret
ja
subl
sub
cltd
jge
imul
sti
fldcw
push
and
fiadds
stc
lock
pop
mov
push
cs
pop
jmp
je
sub
mov
js
cmp
mov
rcll
fcoml
jle,pn
dec
mov
push
xor
add
mov
stos
mov
cmp
mov
adc
jg
fs
push
sbb
rcrb
pushf
sahf
add
data16
xchg
aas
rolb
xchg
fimuls
sti
dec
imull
dec
fidivrl
cs
fwait
sbb
cmp
roll
insl
or
mov
in
xor
mov
lea
inc
pop
or
push
scas
lds
test
push
adc
jmp
xor
lahf
xchg
inc
test
and
or
fstps
jecxz
in
or
movsl
jo
jae
mov
cli
push
test
sub
push
or
sbb
cmp
rcll
adc
rcll
and
mov
push
insb
daa
cmp
les
xor
inc
mov
sbb
mov
clc
dec
das
rorb
mov
pop
icebp
mov
aas
call
push
clc
sti
push
mov
jp
fsts
sbb
jmp
scas
pushf
xchg
add
sub
ljmp
adc
inc
jne
adc
and
xor
xchg
jle
mov
mov
rsm
lahf
mov
sub
mov
gs
jmp
xor
add
mov
pop
mov
fs
icebp
add
movsb
sub
cld
call
cmpsb
mov
mov
ljmp
repnz
xor
add
popa
or
rorb
or
cmpsl
cmp
negb
movsb
mov
cmpsb
sub
xchg
pop
das
pop
scas
dec
js
int
popf
das
mov
dec
sub
jle
cmp
ficoms
jo
enter
arpl
or
cmpl
test
mov
movsl
pop
cmp
jg
push
mov
ret
fs
xchg
mov
xlat
mov
adc
xor
leave
test
inc
pop
sbb
mov
xchg
stc
mov
outsb
pop
mov
gs
adc
roll
fldl
jmp
movsb
mov
aaa
mov
push
dec
test
mov
dec
arpl
push
or
xor
in
lds
mov
hlt
std
inc
push
das
pop
mov
and
or
push
inc
mov
in
fnstenv
dec
mov
movsl
add
xor
jb
roll
add
xchg
rorb
out
and
es
movsl
nop
mov
ljmp
push
repnz
jl
cmpsb
icebp
cmp
inc
push
push
es
jbe
fsubs
rolb
bound
mov
adc
jae
stc
jb
arpl
test
popa
adc
imull
mov
sub
push
add
lret
inc
dec
and
enter
xor
push
lcall
test
in
jg
inc
scas
mov
adc
sbb
cmp
xorl
pop
cmp
jns
aas
popl
push
push
dec
test
sub
in
es
cmp
and
xchg
pop
add
inc
loop
mul
mov
ret
mov
fsubl
cld
hlt
mov
addr16
in
outsl
ror
test
sub
pop
out
mov
mov
or
pop
pop
push
test
fnstcw
loop
ja
mov
jl
orl
insb
filds
mov
mov
jmp
jne
icebp
mov
push
mov
popf
cvttps2pi
inc
push
xchg
cmc
jno
testl
mov
adc
pusha
daa
push
pop
movsb
int
add
xchg
repz
xor
out
push
dec
movsb
cmp
imul
lock
test
movaps
dec
xor
adcl
movsb
sbb
mov
pop
les
fidivl
adc
mov
cwtl
jno
mov
lret
iret
jo
mov
jle
xor
add
test
mov
rcl
dec
jbe
mov
shrb
mov
add
xchg
pop
imul
jg
cli
jne
dec
ret
xchg
leave
or
cwtl
daa
popf
test
mov
sahf
cmp
adc
aas
sub
sub
cmpl
sbb
adc
ljmp
fildll
adc
xlat
inc
pop
ficomps
cmp
mov
dec
out
pop
jmp
adc
into
jecxz
mov
call
pushf
mov
enter
pop
sahf
lret
and
xor
pushl
loopne
movsl
rolb
es
sarb
and
imul
mov
or
dec
xor
outsl
and
stc
pop
repz
inc
mov
popf
stos
pop
sahf
mov
popa
cmp
sbb
incb
std
cli
aad
xor
rolb
pop
addl
pop
test
sarl
xor
ds
dec
insb
push
loope
pop
pop
mov
in
sbbl
lea
push
int
jp
mov
jnp
cmp
loopne
shl
stos
test
mov
dec
imul
jle
adc
outsl
xlat
cld
cmpsb
in
dec
faddl
leave
cmp
sub
outsb
outsl
ss
and
pop
daa
sbb
push
fildl
sub
push
outsl
frstor
pop
inc
cmpsl
push
xor
lahf
mov
pop
les
aas
dec
pop
ljmp
or
notl
stc
pop
sbb
mov
cli
outsb
inc
sub
popa
inc
push
mov
insl
lret
sbb
adc
push
add
jp
mov
mov
or
mov
pop
clc
dec
adc
dec
xchg
bound
mov
mov
jmp
xchg
sbb
push
dec
push
xchg
dec
or
xor
sub
cmc
je
mov
adc
popa
jg
xchg
pop
popf
ret
cli
mov
shll
push
cmpsb
es
call
fdiv
into
sub
mov
jns
cmp
hlt
mov
mov
aad
test
mov
xchg
scas
mov
rorl
mov
sbb
shlb
xchg
push
jp
outsl
pop
nop
sarb
addr16
dec
aas
xchg
inc
add
mov
pop
mov
or
loop
das
mov
xchg
loop
mov
mov
paddb
test
repnz
or
mov
bound
mov
stc
jg
xchg
outsl
adc
sub
stos
lds
sarl
xor
addb
stos
nop
push
insl
xchg
cwtl
cli
scas
push
loopne
adc
mov
fbstp
subb
int
fimull
sbb
or
inc
cli
lock
pop
push
xchg
pop
data16
and
scas
roll
fnstenv
adc
loope
jne
fs
adc
push
fnstenv
xor
loopne
adc
mov
fdivrl
push
push
xchg
fucomi
aam
cld
mul
dec
pusha
ja
fcompl
int
call
insl
or
dec
inc
dec
mov
cmp
push
sub
push
stos
fimull
insb
cwtl
fldcw
xchg
arpl
sub
test
cmp
cmp
sbb
out
ret
push
push
cli
cmp
stc
xor
pop
icebp
or
nop
sti
adc
cmp
addr16
fs
test
dec
add
cmpsb
push
cmp
jg
push
shll
sub
dec
mov
mov
leave
mov
sti
cwtl
adc
nop
lea
inc
pop
and
fwait
mov
jns
adc
in
into
and
or
adc
loopne
jb
dec
cld
sub
aas
or
dec
xchg
inc
cmp
into
inc
jbe
fidivs
loopne
jmp
pop
movl
add
inc
dec
and
cltd
or
lods
rorl
aaa
in
call
mov
dec
sbb
mov
out
mov
cmp
movsb
in
jns
push
dec
ret
out
sarl
cli
aas
add
addr16
popa
xorb
enter
jne
sub
nop
pop
pushf
pushf
fildl
ds
scas
mov
shr
xchg
mov
mov
push
adc
imul
andb
cltd
stos
xchg
cld
inc
cmpsb
xor
lcall
cmp
and
rcrb
fists
lods
stc
or
dec
int3
ret
mov
adc
adc
in
arpl
xchg
cmp
outsl
int
cmp
nop
sbb
mov
sub
test
push
stos
cmc
lods
xchg
inc
push
and
jae
mov
addr16
repnz
inc
pop
cli
jmp
out
sbb
sahf
test
lea
aad
ret
sub
bound
inc
push
cmc
and
push
push
mov
lret
xchg
and
repnz
sbb
lock
pop
ret
fsubl
aaa
dec
jmp
pop
call
jp
lea
imul
stos
imul
insl
add
fcomp
shld
add
adc
scas
jnp
call
xchg
and
jmp
in
in
add
add
insb
fnstsw
and
lahf
lea
xor
sbb
or
repnz
stos
xchg
xlat
inc
add
cmp
addr16
or
mov
inc
std
mov
and
pop
test
icebp
mov
out
cmp
mov
mov
and
push
lcall
sub
sub
out
int
sub
mov
sbb
jl
inc
insb
je
sbb
xchg
xorps
push
push
mov
daa
pop
dec
lcall
shll
aas
fbstp
out
scas
xorb
adc
sub
mov
punpcklwd
mul
mov
adc
sahf
push
jg
pop
push
xchg
adcb
pop
sub
xchg
inc
lock
mov
int3
fisttpl
mov
add
in
pop
jl
icebp
insl
mov
js
lret
pop
icebp
sub
push
aam
add
out
pop
aas
sub
mov
imul
test
aad
outsb
stos
ret
mov
lds
fwait
leave
add
idiv
out
xchg
xchg
daa
mov
cmp
ret
mov
push
mov
xor
cmp
sti
xor
push
scas
push
mov
xchg
jl
ret
xchg
mov
out
add
out
insb
filds
mov
pusha
add
cmp
repz
pop
or
fdivs
cmp
dec
push
leave
jp
in
push
ret
addl
imul
mov
icebp
xor
xorl
dec
sub
cmpsl
sbb
out
fwait
add
call
loopne
pop
data16
mov
adc
das
sbb
cs
cmp
int3
or
dec
and
cltd
leave
sub
jmp
lahf
sub
or
sub
adc
sbb
xchg
negb
xchg
ret
and
in
push
mov
cmc
and
adc
das
sbb
js
mov
or
xor
mov
mov
adc
pop
dec
out
ds
stos
sub
push
pop
adc
in
mov
dec
aam
inc
cs
ds
lret
push
in
mov
mov
int3
push
outsl
lock
test
rclb
push
push
fndisi(8087
aad
loop
inc
cwtl
sub
movsl
cmp
iret
bound
and
cmc
inc
in
add
lcall
mov
icebp
dec
in
inc
sub
fcompp
xor
xchg
out
mov
jge
jg
popf
jmp
jp
sub
pop
subb
cld
mov
shr
and
add
sub
arpl
lock
dec
stc
int
es
mov
inc
aas
push
fnstenv
inc
ds
adc
mov
mov
add
inc
cli
sub
fs
fcmovb
inc
daa
push
scas
int3
jno
fs
sbb
fmul
jle
mov
lret
and
movsl
cwtl
pop
pop
int3
xor
or
nop
aas
faddl
filds
out
mov
xchg
stc
lret
sbb
mov
mov
aaa
xor
test
sbb
mov
mov
sub
xchg
stc
push
jecxz
jno
push
enter
or
jb
cltd
xor
pop
leave
addb
fstpt
lods
push
out
add
adc
jg
xchg
cmp
ja
jmp
mov
sub
mov
mov
test
imul
call
jns
jnp
jmp
xchg
in
mov
mov
xor
imul
movsb
inc
pop
fwait
jns
rolb
mov
stos
test
push
clc
xchg
int
sbb
xchg
adc
hlt
aam
test
inc
inc
and
data16
pop
hlt
orl
sub
mov
mov
mov
pop
jo
sbb
dec
mov
jnp
and
stos
bound
shlb
dec
mov
iret
mov
pop
into
je
xchg
dec
sub
push
popa
inc
inc
insl
jge
push
inc
jo
adc
outsb
push
push
ljmp
popf
push
test
lock
sahf
dec
xor
gs
cmp
bound
popa
xlat
out
mov
fs
push
mov
adc
fdivs
push
int3
and
pop
jmp
sub
mov
cld
inc
enter
enter
lret
in
nop
xlat
mov
pop
mov
lret
repz
out
jle
fs
into
mov
out
ss
fisttpll
or
jae
jnp
cmp
push
dec
push
adc
ljmp
fcoml
push
sbbb
xchg
xlat
cmpsb
stos
fs
rorl
pusha
mov
sbb
jno
daa
mov
scas
push
sub
outsl
add
inc
insb
icebp
add
ret
test
pop
xorl
cmp
test
xlat
cmp
sub
outsl
int3
lret
inc
into
es
and
iret
outsl
roll
jg
icebp
mov
jg
sbbb
sbb
scas
cmp
iret
pop
or
sti
nop
pusha
orb
pop
sub
out
data16
xchg
push
pop
xchg
adc
xor
xchg
add
jecxz
movsl
daa
xchg
incb
mov
xchg
lcall
pop
mov
dec
popf
ljmp
fmull
pop
add
js
pop
inc
jmp
push
xchg
leave
cld
out
aam
pop
rcll
inc
sbb
dec
shr
stc
lret
inc
pop
pop
and
cmpsb
xlat
in
insl
xchg
aaa
daa
mov
fstpt
fimuls
lea
cltd
adc
lahf
fistl
repnz
shlb
int
in
sub
inc
mov
pop
sub
push
or
cwtl
ds
mov
daa
mov
cwtl
imul
movsb
or
bound
mov
dec
adc
adc
cmp
inc
mov
imulb
mov
bound
lahf
hlt
fs
pop
jnp
clc
out
data16
mov
mov
out
jmp
lds
add
and
shr
lahf
dec
dec
push
in
mov
mov
cli
inc
pushf
testl
add
ret
fdivl
cmpsl
stos
dec
jge
out
fdivs
inc
jmp
out
ret
shl
lcall
cwtl
divl
jbe
and
inc
je
mov
test
jo
sub
sub
idivl
mov
sub
stc
jle
adc
inc
mov
addr16
ds
xchg
icebp
fsubrs
sti
mov
outsb
int3
movsb
mov
ret
or
dec
icebp
fnsave
mov
xchg
enter
and
add
and
out
cmp
xchg
push
pushf
inc
out
lods
insb
lods
lret
mov
jecxz
je
sbb
in
mov
pop
mov
fs
adc
lea
test
sub
int3
push
outsl
out
lret
xor
cmp
std
in
add
mov
jmp
test
call
or
icebp
clc
mov
mov
xchg
sbb
adc
mov
inc
sahf
cmp
add
cs
mov
lods
cltd
cld
call
sub
icebp
aas
push
xchg
ss
movsl
bound
popa
add
cmp
int3
push
jbe
xchg
jae
fsubrs
jle
testl
es
daa
pop
imul
ret
jnp
cmp
push
add
mov
sub
inc
mov
lea
mov
loop
jle
aam
sbb
ficomps
jl
xchg
pop
fcompl
inc
xchg
lcall
push
xor
dec
out
rcl
fiaddl
pop
jle
or
xchg
in
sbb
js
adc
lea
and
sahf
xor
pushf
add
lcall
call
xor
jg
test
mov
addb
sbb
dec
fsubp
push
hlt
or
adcl
jb
jle
rcll
pop
push
data16
into
xchg
mov
gs
lret
adc
sbb
pop
aad
repnz
scas
jb
aam
pop
mov
add
xchg
cmpsb
push
outsb
or
push
inc
jns
cmpsl
mov
cmp
fxch
push
js
in
loope
mov
sbb
popl
int3
rcrb
shlb
dec
stos
jne
aam
ret
loope
ss
iret
dec
mov
lcall
inc
sbbl
mov
push
cmp
and
dec
adc
cwtl
adc
dec
call
ja
je
or
cmp
dec
pop
sub
dec
sahf
ss
lcall
cld
pop
fs
daa
in
xor
inc
nop
pop
push
add
xchg
into
cs
je
sub
inc
mov
sbb
fcmovnu
pop
or
cmp
aad
into
push
jno
mov
lods
popf
cmp
inc
subl
into
mov
inc
inc
lock
cmp
scas
jg
inc
pop
sub
call
and
pop
loopne
mov
inc
push
cmp
sbb
lds
out
dec
inc
jae
sub
sbb
mov
or
les
push
arpl
ret
push
icebp
ljmp
and
xor
ret
push
mov
xchg
sahf
mov
arpl
sub
ffreep
imul
stos
sbb
das
cltd
rorl
adc
rolb
jno
js
pop
lret
pop
enter
out
xchg
sbb
subl
xchg
mov
scas
mov
jmp
add
lahf
fwait
pop
cmp
sbb
int3
notl
push
lods
js
ficoms
jbe
xor
mov
mov
mov
lahf
in
andl
jnp
pop
and
mov
outsb
xchg
xor
add
fildll
pop
jbe
dec
jnp
xchg
xchg
ret
lret
scas
cmp
xchg
cmp
mov
pop
xchg
add
pusha
push
push
pop
push
inc
adc
sbb
rcrl
xor
aaa
jb
push
or
loopne
jne
sbb
imulb
push
push
adc
fstl
ss
sub
mov
mov
inc
sbb
mov
in
adc
cld
stos
insb
jle
and
push
repz
inc
out
jae
xchg
loope
imul
mov
cld
repz
iret
mov
cmc
cltd
mov
std
pop
cli
xor
push
xor
xor
pop
jb
pop
std
inc
movsb
xchg
mov
bound
mov
sub
push
xor
std
xchg
mov
pop
fadd
rcrb
je
dec
xchg
pop
jmp
cmp
js
dec
mov
xorb
test
scas
inc
mov
or
insl
xchg
push
push
lret
es
xorb
cmp
dec
pop
xor
lahf
cmp
adc
pop
jl
mov
popa
stos
xor
stc
and
mul
or
jne
jmp
and
sbbl
inc
cmpsl
in
jns
cmp
inc
fisubs
inc
jnp
lea
aad
divl
gs
add
mov
scas
inc
stos
add
lcall
sub
movsb
push
in
negl
call
pop
xchg
mov
add
cmpsl
cwtl
test
inc
fwait
mov
call
int
out
fidivl
lret
cmc
or
and
sub
add
pop
jmp
iret
mov
insl
jl
test
popa
dec
jp
imul
inc
xor
pop
test
and
inc
sbb
movsl
jo
mov
push
enter
inc
adc
cmp
mov
xchg
sbb
mov
mov
mov
adc
lods
or
fmull
mov
aaa
push
inc
lret
adc
jne
enter
cmp
idivl
mov
sub
bound
ljmp
mov
mov
shlb
movlps
inc
rcr
xchg
aam
bound
std
inc
ss
and
jnp
lods
decl
pop
out
repnz
loop
and
or
sbb
jno
aas
push
mov
or
lret
test
pop
push
ds
rcrl
push
mov
sbb
sub
fs
sub
pushf
stc
data16
cmpsb
sti
jb
ds
rcrb
sbb
sub
in
rcl
cmp
jo
loop
dec
call
inc
mov
ljmp
jae
xor
push
adc
ljmp
aad
push
unpckhps
inc
addr16
dec
cld
mov
push
dec
push
mov
cmpsl
subl
adc
pop
in
sub
xchg
pop
sbb
mov
fwait
lcall
adcl
cli
lock
push
jb
insb
add
push
mov
insb
cmc
std
bound
or
cld
jmp
lcall
fnstenv
cli
daa
imul
ljmp
pop
rcr
scas
aam
mov
push
stos
mov
out
jb
jmp
mov
or
das
xchg
push
cmp
adc
jg
js
jge
jae
ret
mov
pop
xor
cmpsl
jp
dec
loopne
inc
iret
test
adc
aas
sahf
ret
dec
xchg
xchg
jns,pn
dec
fs
inc
sbb
mov
sub
cmpsb
lock
or
xchg
mov
and
pop
fnstsw
mov
mov
cld
mov
cmp
lret
mov
int
mov
lds
jno
cmc
sub
or
flds
or
enter
mov
sbb
xchg
daa
scas
adc
int3
xor
mov
iret
cmp
and
push
addr16
stc
divb
mov
test
pop
loopne
lret
sbb
cltd
dec
mov
and
pop
enter
fmuls
sub
iret
fldenv
es
mov
jle
cmp
sbb
insb
sub
mov
dec
push
scas
sarb
lds
jbe
jae
cmp
jne
jge
or
jl
jnp
mov
mov
or
add
inc
xacquire
shrb
pushf
or
stos
ret
pop
stos
scas
jge
xchg
dec
dec
xor
icebp
in
xlat
or
out
mov
testb
jns
mov
ss
push
xor
mov
xchg
outsb
imul
adc
mov
lret
push
jnp
mov
bound
mov
dec
xor
or
and
dec
hlt
mov
mov
jns
fdivrl
mov
ja
sti
and
sbb
fsubr
push
and
stos
inc
lods
aas
xor
xchg
or
cmp
xchg
aaa
ljmp
icebp
xchg
jge
dec
push
ja
sahf
mov
or
les
lods
daa
js
mov
pop
sub
aam
sbb
loop
add
daa
mov
lods
int3
push
ja
imul
lret
xor
ffreep
lahf
fdivr
mov
addr16
jle
pushf
outsl
cld
dec
aam
add
cmp
mov
or
shl
cld
mov
sbb
add
gs
rclb
in
or
loop
push
ljmp
fisubrs
pop
cmpsb
xor
jmp
sti
fsts
cltd
ret
insl
mov
inc
test
in
cmc
aad
add
dec
leave
and
xor
adc
push
and
or
unpckhps
cs
ljmp
dec
jmp
std
lea
lahf
dec
dec
add
pop
loope
mov
mov
and
out
aas
outsl
je
clc
and
fbstp
imul
and
pop
xlat
adc
lds
mov
lret
imul
sbb
hlt
sub
push
repnz
stos
ja
pop
push
push
subb
mov
inc
lret
push
push
adc
repnz
adc
loopne
enter
or
add
fs
cld
mov
imul
test
arpl
inc
ds
cld
xlat
mov
jmp
rcrl
cmp
daa
and
and
push
mov
clc
nop
inc
in
repz
dec
pushf
aam
call
cmc
test
fisubrs
push
repnz
and
mov
rolb
jmp
mov
mov
jl
cmp
push
jp
xchg
mov
and
xlat
cwtl
mov
dec
pop
xchg
jl
push
popa
lock
add
insb
shll
stc
das
xorl
sbb
int
dec
dec
stos
test
test
outsb
popa
cmp
js
cmp
jge
loopne
call
pop
jmp
rcrb
push
outsb
push
cmp
std
pop
xchg
std
call
outsl
mov
sub
lock
adc
jg
sbb
mov
sbb
inc
jno
rcl
stc
xchg
sbb
js
xchg
bound
rcrb
jnp
test
xor
add
imul
insl
jnp
sub
sub
mulb
mov
pusha
push
add
icebp
scas
inc
mov
mov
inc
sti
jmp
or
or
rcrb
imul
jb
dec
inc
sbb
insl
adc
insl
ret
rcll
insb
in
bound
xchg
test
or
in
icebp
fadd
ja
mov
pop
push
mov
fbld
push
cmc
adc
cmp
xchg
sub
insb
push
mov
pop
and
and
ljmp
inc
insb
insl
arpl
and
jb
fcompl
decb
mov
sub
jns
dec
mov
mov
daa
ss
outsb
scas
shr
jne
loop
sbb
push
mov
xor
pop
jns
dec
jmp
leave
insb
popa
pushf
jg
vhsubps
xchg
ffreep
adc
jle
push
xorb
dec
rorl
nop
das
pop
mov
dec
xchg
fwait
loopne
ret
in
call
jbe
call
scas
dec
cld
mov
aas
mov
hlt
sub
push
add
cmpl
out
xorb
adc
test
adc
jno
addr16
rorl
push
daa
sub
mov
add
sub
aad
popa
std
dec
add
push
movsl
call
sbb
cwtl
cmp
push
mov
ja
push
in
iret
xchg
sbb
mov
xor
stos
sbb
bnd
test
pop
or
push
or
movsl
lret
cld
lds
fistpll
fucomip
pop
inc
xor
pop
add
insb
or
test
fisttps
dec
sub
pop
outsl
jle
pop
or
jo
cmp
inc
mov
outsb
lods
lahf
pop
fimull
stos
and
xor
jbe
inc
adc
hlt
cmp
test
pop
fadd
push
mov
sub
dec
shl
cs
cmpsb
mov
mov
xlat
jg
mov
push
mov
nop
pusha
jbe
dec
loopne
xor
popa
pop
pop
mov
cmp
repnz
sbbb
shll
out
pop
mov
xor
ja
mov
cld
dec
call
sbb
xchg
lahf
int3
mov
jg
jle
mov
jecxz
mov
adcb
mov
into
cmc
into
pop
test
lcall
mov
sub
imul
out
inc
xor
lahf
jno
pop
or
adc
mov
push
xchg
cli
jp
cwtl
cmpsl
cmpsb
inc
mov
and
mov
or
mov
nop
ret
scas
ljmp
adc
popf
repnz
sbb
xor
or
out
sub
lds
pusha
sbbl
and
movsb
jecxz
inc
xor
jle
xchg
mov
cmc
mov
fucomp
push
or
xor
xchg
inc
je
xor
dec
roll
lahf
int
fnsave
lcall
xchg
ds
loop
aas
sub
ss
mov
nop
ret
lret
add
nop
adc
mov
and
sub
jmp
mov
testl
dec
pop
shrb
pop
shlb
imul
dec
out
inc
outsb
clc
je
int3
and
loop
rorl
sub
xchg
and
xor
or
push
and
mov
aad
xchg
mov
and
lret
push
adc
cmp
call
dec
mov
inc
insb
xorl
push
dec
stos
mov
inc
sbb
pop
adc
enter
or
sub
repnz
loope
sub
mov
lahf
fwait
insl
subl
xchg
rcl
mov
pop
in
popa
mov
std
inc
aad
sti
in
fildl
enter
jns
or
leave
fisubl
lods
lret
outsl
sbb
mov
push
in
mov
add
inc
subb
cld
xchg
or
fiaddl
sarl
jns
rorl
nop
test
in
jle
mov
imul
test
xchg
pushf
iret
in
cmp
fdivl
pop
js
inc
rcrb
dec
call
jnp
ja
imul
repnz
test
mov
imul
xchg
inc
outsb
loopne
dec
icebp
fsubrs
mov
cmpsb
mov
dec
jg
sub
aam
jmp
sbb
mov
pop
jbe
mov
xor
mov
mov
scas
jmp
arpl
test
lret
or
mov
fdivs
xor
stos
mov
enter
rcrb
pop
test
jbe
inc
cmp
mov
jmp
loop
insl
int
mov
pop
mov
and
xlat
jno
inc
vpminsw
cli
pushf
je
shll
mov
inc
push
cmp
fimull
sbb
pop
mull
mov
outsb
mov
xchg
repz
stc
mov
adc
cs
arpl
mov
scas
inc
dec
lea
sbb
ror
cmp
out
adc
push
scas
lahf
jae
shll
aad
loope
mov
push
andb
movsl
push
sbb
xchg
add
sub
xor
sbb
test
sbb
mov
test
je
divb
mov
dec
pop
cmp
int
mov
pop
jnp
jg
sti
aam
movsb
sub
xchg
xchg
pusha
shll
xchg
pop
lods
pop
cmpsb
xchg
sub
lods
in
popf
pusha
stos
xor
int
mov
xchg
cli
add
sahf
pop
iret
jnp
sbb
imul
int3
iret
ljmp
in
test
dec
addr16
int3
fdivp
push
and
mov
inc
mov
mov
data16
cmpsl
je
daa
in
sub
popf
movsl
inc
fildl
push
fdivrs
pop
cmpsb
divl
lock
xor
sub
cs
mov
mov
xor
rcl
xchg
xchg
cltd
sbb
push
push
ficoml
icebp
hlt
repz
mov
inc
cltd
cmp
in
sub
andl
mov
lahf
jae
inc
and
push
in
xchg
inc
sarl
and
inc
add
fistl
pop
jae
test
jle
pop
pop
aam
aam
fdivs
jae
and
pop
movsl
xchg
fs
add
cmpsb
mov
dec
pop
shrl
insl
pusha
stos
lds
dec
loope
aas
fsqrt
sbb
lea
jnp
icebp
sub
adc
mov
cmp
sbb
cltd
adc
jmp
mov
and
pop
sahf
xchg
cltd
scas
sbb
push
negl
pop
mov
sbb
xor
sbb
mov
xor
mov
into
outsb
loopne
out
mov
sbb
sbb
in
jnp
cwtl
cmp
push
imul
or
jno
pop
mov
add
jo
aad
loope
cmp
loop
xchg
push
xchg
sbb
loope
inc
scas
inc
movsb
xchg
push
enter
jns
lahf
ja
pop
pop
popf
enter
cmp
fbstp
rorb
xchg
inc
dec
pop
dec
data16
cmp
fists
pop
jne
arpl
mov
in
inc
rcr
pop
mov
inc
mov
sbbb
cld
xchg
sbb
in
out
xchg
lods
sbb
lret
and
xchg
xor
mov
lcall
jae
rclb
push
inc
aad
pop
pushf
mov
movsb
push
sbb
xorl
mov
add
fs
cmpsl
lods
add
mov
add
mov
cmpb
sbb
loop
xchg
sbb
push
sahf
xor
jnp
shlb
dec
les
mov
mov
jnp
inc
bound
xor
das
jb
lret
popa
stos
jo
ss
mov
in
mov
je
je
sub
lret
cltd
mov
cmp
aas
xchg
push
adc
ret
cmc
dec
push
cmp
insl
icebp
and
nop
sahf
aas
int3
in
gs
jno
cwtl
fwait
daa
mov
into
or
lods
stc
sub
shlb
add
cmp
adc
addr16
jo
mov
pop
pop
add
push
mov
into
and
inc
jl
adc
cmc
std
dec
cmp
xchg
outsl
test
add
xlat
jmp
loopne
push
pop
rol
shlb
xchg
add
imul
cmp
inc
sar
jo
mov
fs
pop
inc
cmpb
add
pop
lods
dec
out
jl
sti
mov
jg
out
add
pop
mov
jg
fwait
cmp
jge
inc
inc
mov
jge
outsl
mov
mov
fwait
aas
lds
jg
test
pop
and
or
idivb
inc
pop
jb
das
dec
loope
rcrl
sub
cs
mov
je
jbe
sbb
mov
sbb
jle
sbb
fstpt
subb
push
sahf
ss
jbe
fimull
mov
adc
xor
xor
sub
and
in
orl
std
insl
sbb
ret
xor
sti
xchg
leave
pop
lret
jbe
jge
cmp
ljmp
pop
mov
cmpsb
jne
stc
push
lods
pop
xchg
mov
xchg
push
movsb
sub
lock
jbe
pop
fsubp
fwait
xchg
push
mov
push
xchg
dec
add
incl
cmp
lcall
movl
mov
jl
inc
mov
sub
pop
aam
ja
xchg
jl
or
push
and
sti
sbb
adc
nop
pop
es
insl
test
and
lahf
push
push
cmp
into
push
lret
notrack
push
mov
pop
pop
sbb
repz
mov
and
xchg
aaa
std
shlb
pop
orb
push
cmc
pop
add
dec
adc
jb
bound
lds
jle
mov
aaa
fwait
xlat
mov
insl
cmpsl
dec
sub
stos
cmpsl
mov
mov
in
inc
adc
popa
js
sub
inc
ljmp
jecxz
out
push
je
sbb
jno
test
mov
ret
mov
inc
mov
xor
inc
scas
std
xor
adc
or
incb
xchg
sti
jp
lds
jnp
dec
sbb
int
lock
aam
scas
sti
mov
rol
je
or
orb
push
jl
sbb
popa
outsl
or
scas
xor
hlt
repnz
xlat
and
popf
test
push
or
mov
sub
jge
lcall
adc
cmpsl
pop
cmp
sub
sbb
call
dec
jo
jne
sbb
movsl
dec
mov
push
ret
in
fs
xor
test
js
jecxz
mulb
shl
add
mov
inc
filds
arpl
scas
adc
ja
inc
adc
call
test
cmp
mov
push
cltd
mov
pushf
fs
bound
das
sarl
loopne
push
cmp
sbb
hlt
push
xchg
sub
shll
xchg
inc
mov
mov
data16
pop
sbb
sub
enter
add
into
lds
hlt
dec
or
cmpsb
lds
cmp
lahf
les
mov
pusha
inc
out
in
sbb
hlt
lea
mov
sbb
push
rorl
mov
jne
rcll
fiaddl
dec
je
pop
mov
les
cmp
fdivr
mov
mov
aam
jbe
mov
cmp
mov
in
cld
insb
xchg
inc
nop
movsb
in
pop
mov
lret
jnp
cwtl
jge
inc
mov
insl
into
jmp
test
sbb
mov
arpl
fsubrs
or
out
lret
push
push
insb
subb
je
aas
inc
mov
inc
push
cltd
cmp
cmp
adc
sub
aas
and
loop
aad
notl
sahf
jmp
cmp
xor
testl
sbb
inc
test
mov
and
mov
cmp
ja
out
pop
shrl
or
ljmp
adc
sub
insb
leave
cmp
jecxz
and
sub
inc
mov
push
jmp
dec
pop
test
push
fildll
ja
iret
sbb
pop
sub
mov
adc
pop
mov
incb
sbb
jge
lret
sub
popf
lds
mov
dec
fmulp
lods
mov
lods
mov
popa
mov
fisttpl
outsb
stc
rclb
push
sub
sbb
mov
cmpsl
pushf
xchg
aad
popa
xor
in
sub
xchg
xor
imul
shll
fldl
jg
push
push
loopne
sbb
ja
pusha
repz
adc
arpl
lcall
gs
xchg
or
adc
aad
je
pusha
insb
popf
xchg
lods
jbe
sub
jns
dec
jecxz
sbb
pop
jg
call
out
mov
add
lea
push
fnstsw
xchg
bound
scas
adc
in
jo
notb
mov
shlb
scas
push
push
push
cltd
sub
fsubp
cmp
bound
xadd
lock
arpl
clc
dec
sbb
es
pop
ja
and
andl
aas
xor
mov
mov
das
stos
cmpl
inc
loop
xchg
loop
pop
cmp
add
shl
adc
aaa
sbb
shlb
jo
shl
imul
mov
and
negb
inc
dec
aas
mov
js
test
and
fstpt
out
enter
cmp
sub
bound
xchg
pop
data16
cmp
ljmp
pop
or
ret
int
fisubrl
pop
daa
sahf
mov
mov
adc
sub
in
fldt
adc
sub
xchg
xchg
push
int3
lds
mov
ret
adc
out
adc
dec
mov
cmp
cmpsb
shrl
xchg
add
clc
mov
push
mov
jmp
mov
push
repz
es
clc
adc
mov
pminub
mov
aad
or
push
shl
sbb
mov
mov
ffree
rol
xlat
pop
aad
sub
insl
mov
cmp
pop
ret
fistpl
cmp
shl
int3
in
xchg
mov
divl
push
sbb
dec
sub
jbe
mov
and
les
das
out
sahf
xchg
arpl
hlt
lock
lret
pop
mul
loopne
lock
jo
dec
sbb
addr16
sub
sbb
popf
mov
jg
and
pop
or
xor
cli
xchg
scas
xor
or
xor
loopne
shl
add
adc
jns
nop
pop
mov
lret
adc
lcall
and
aad
or
gs
inc
jle
xor
mov
clc
cmpsb
aaa
or
xchg
lods
pop
and
xor
xchg
jp
xchg
repz
inc
stos
dec
cwtl
dec
hlt
add
arpl
mov
ss
pop
jg
popf
mov
outsb
mov
and
in
inc
faddl
inc
xchg
ja
mov
dec
jae
insl
out
jo
daa
xlat
fwait
inc
insb
push
sbb
lods
int3
jl
pop
push
dec
cmp
push
int
sub
push
mov
or
popa
roll
push
add
adc
inc
inc
pop
loope
push
rcll
stos
leave
xorb
lret
push
cs
out
pop
mov
jb
sbb
les
test
bound
mov
sub
add
les
ds
out
jmp
addb
dec
xchg
stc
and
out
jo
loopne
sub
dec
inc
push
push
outsl
mov
scas
fbld
imul
mov
and
fistl
mov
addr16
repz
ret
jl
add
ret
mov
adcl
loope
iret
pushf
xchg
adc
mov
xchg
aam
mov
repz
cld
stc
scas
mov
imul
dec
xchg
jbe
out
mov
sub
or
jecxz
xchg
repz
push
sub
add
mov
mov
loope
adc
mov
mov
inc
xchg
mov
lock
adc
pop
lcall
push
lahf
loop
ljmp
cmp
adc
js
pop
push
fdivrl
das
ret
nop
mov
int
xchg
int
and
in
mov
testb
loop
into
pop
call
lcall
or
mov
mov
and
adc
jae
test
scas
rol
push
stos
aas
in
mov
cwtl
mov
lret
insb
lods
stos
dec
mov
jp
or
mov
aas
sub
cmpsb
xchg
mov
xchg
mov
popf
cmpsb
push
js
clc
sbb
cmp
rcl
sbb
mov
frstor
push
fldcw
sub
jg
mov
push
movsb
push
push
loope
shll
mov
test
fstpt
pop
inc
cmp
cld
mov
pop
sbbb
loop
cmc
das
sahf
addb
sti
cmc
sar
out
jl
int
insl
add
pop
ds
cmpsb
aad
lods
xchg
mov
leave
pop
jo
movb
and
fsubs
pusha
jge
xchg
bound
cmpl
pop
lock
mov
xor
add
sub
test
out
mov
fwait
movsb
dec
cli
sbb
push
xor
ret
dec
mov
jae
cmp
je
div
popa
int
push
push
or
mov
xchg
int3
rcr
rcrl
sub
or
inc
cmc
cmpl
aam
adcl
in
push
dec
pusha
ja
mov
lods
adc
rorl
pop
ret
push
mov
arpl
pop
xor
imul
sub
shl
ret
movsl
adc
movb
bound
mov
add
inc
call
cmpsb
cmp
dec
fdivp
and
scas
lret
jb
xor
mov
or
cmp
aaa
fstpl
adc
add
or
xor
jl
nop
sar
nop
test
jae
push
or
ror
iret
orb
mov
xor
aaa
push
into
test
sub
gs
jno
aad
insb
dec
mov
jmp
or
mov
or
out
xchg
in
aas
cld
push
sub
jne
int3
dec
mov
lret
das
orl
adc
push
pop
dec
int
clc
mov
mov
je
in
or
dec
push
and
xor
jnp
clc
popa
mov
inc
inc
pusha
and
xor
inc
mov
xchg
jle
mov
nop
cmp
mov
cmp
sub
mov
shrb
dec
aad
cltd
cli
fs
pop
call
mov
or
add
loope
xchg
lret
xchg
push
stos
addl
xor
adc
daa
dec
mov
scas
repz
add
push
mov
mov
or
mov
inc
mov
adc
inc
cmp
repnz
insl
rclb
pop
jbe
cmpsw
pop
shrb
test
cmp
jge
sbb
daa
in
and
insl
lcall
lcall
loope
stos
jmp
pop
cmpsl
mov
cli
ljmp
mov
fbstp
push
push
enter
int3
push
pop
jmp
adc
pop
insb
ss
jge
push
jmp
xor
das
mov
push
sub
adc
rorb
jb
sbb
jb
mov
xor
stos
pop
xor
int3
adc
or
cwtl
xor
pop
jae
lock
in
nop
sbb
or
ficoms
mov
cwtl
fwait
outsb
dec
cmp
sti
fldt
sbb
mov
inc
pushf
cmp
adc
loop
fadds
jecxz
or
sub
dec
mov
scas
repz
pop
jp
lock
inc
pop
inc
lods
inc
enter
push
lcall
push
ss
xchg
cmp
cmp
movsl
cli
testl
jmp
scas
bound
cs
enter
or
decb
mov
enter
sti
mov
push
and
sub
loope
popa
aad
aaa
es
sub
aad
sub
lret
pop
and
dec
jns
shll
or
cli
rcll
and
lcall
mov
pop
ret
jbe
mov
int
push
fsub
in
arpl
jb
leave
push
mov
dec
xlat
les
fldenv
out
lret
adc
sbb
pop
push
jmp
adc
out
cwtl
jecxz
aas
scas
xchg
std
aad
daa
rolb
jge
push
out
inc
mov
jbe
clc
fs
sbb
aas
cs
ret
jg
psrad
jb
mov
or
dec
xchg
and
jb
in
shll
insb
xor
dec
es
and
fwait
mov
sub
cmp
xor
rorl
lahf
push
or
sbb
mov
cmpsb
sub
call
jo
sbb
mov
or
fldcw
mov
popa
inc
insb
or
xchg
test
or
shll
loopne
loop
dec
sub
xchg
adc
adc
push
mov
clc
repz
subb
dec
loope
xor
xor
pushf
out
lea
jnp
scas
mov
mov
mov
repnz
ss
shrb
mov
rcll
rolb
mov
mov
sub
inc
mov
inc
in
cmpsl
int
out
sbb
decb
inc
mov
lock
fistl
leave
cmpsb
sub
fidivrl
jecxz
mov
imul
std
or
fiadds
jmp
movsb
shrl
in
dec
push
inc
mov
add
jno
out
dec
int
movsb
or
repnz
aas
jne
divl
and
pop
mov
xchg
sub
sub
add
cmpsl
addl
cmp
fwait
xorb
jecxz
mov
je
or
inc
dec
outsl
ss
jp
std
outsb
xchg
add
ror
push
xor
sub
ret
lds
and
in
mov
gs
inc
pop
mov
inc
xor
loope
or
and
push
pop
ja
aas
pop
in
movsl
mov
sub
adc
stc
fadd
jns
bound
cmpsb
push
sub
xor
ja
cmc
clc
cmpsb
pop
jbe
jne
mov
mov
adc
pop
mov
push
mov
ds
stos
xchg
and
cmp
rclb
mov
mov
dec
inc
stos
imul
rolb
push
fmul
xor
nop
ffreep
faddl
mov
test
sbb
cli
subl
inc
pop
cmp
lahf
mov
fstl
mov
sti
inc
xchg
gs
test
into
mov
out
inc
xchg
cli
mov
jmp
xchg
adc
std
out
ror
popa
inc
gs
sub
push
movsl
mov
inc
or
push
data16
movsl
icebp
mov
insl
arpl
add
cmp
divl
mov
push
jmp
jb
and
pop
loop
lret
stc
or
jg
add
adc
cli
mov
in
jmp
mov
push
xor
add
das
mov
sub
xchg
jo
daa
inc
pop
imul
int3
jmp
das
shl
cltd
adc
cli
add
mov
pusha
add
inc
sbb
dec
lahf
imul
fsubrs
je
adc
les
add
xchg
pop
and
fxch
aad
and
pop
inc
and
scas
mov
cmpsl
dec
dec
sub
xor
imul
fildl
data16
mov
int3
mov
out
inc
sbb
lret
xchg
mov
mov
add
aam
and
jo
push
mov
vaddpd
je
jnp
mov
add
popf
mov
mov
jnp
leave
idivl
icebp
add
push
or
sbb
imul
data16
or
negl
data16
cmc
add
repz
clc
bound
pusha
dec
and
daa
or
or
les
mov
jmp
inc
or
pop
sahf
or
dec
jp
mov
repz
sti
jl
jno
aam
jne
mov
cltd
test
test
rclb
scas
cmp
popa
outsl
jg
stos
or
push
xor
cli
jge
loop
outsb
pop
das
jnp
pusha
xchg
das
dec
and
addr16
mov
test
dec
push
jnp
add
negl
push
sbb
push
test
mov
cmp
jp
xchg
mov
mov
add
es
lret
pushf
push
cmpsb
mov
loopne
cwtl
ds
lods
mov
repnz
mov
push
inc
xlat
lea
test
push
outsl
mov
lcall
in
mov
push
adc
fisubs
mov
and
mov
sub
dec
mov
sti
arpl
jmp
inc
sub
xchg
decl
inc
fsubl
out
addl
and
js
add
jl
jmp
sub
push
rorl
and
and
in
sbb
in
fwait
roll
sub
icebp
dec
lea
ljmp
fistpll
sub
sbb
and
and
sbb
addb
push
add
jg
pop
push
sub
jns
jg
sub
pusha
push
sub
aad
dec
ficoml
repz
and
push
fsub
mov
xor
cmp
jnp
imul
icebp
stc
cmp
sbb
dec
repnz
cmp
lods
lea
aam
addr16
loopne
sbb
pop
test
mov
bound
inc
je
xor
push
sbb
loope
jne
ret
adc
decl
outsb
xor
int
xchg
aam
xchg
loope
jmp
xor
iret
add
popf
jge
sti
dec
negl
sbb
sbb
outsb
push
mov
pusha
inc
std
and
sub
daa
xor
aad
cmp
daa
nop
pop
loop
inc
push
jl
es
push
rcrb
mov
jge
sbb
mov
pop
sub
push
in
adc
adc
mov
orb
inc
xchg
icebp
push
call
dec
dec
leave
call
arpl
mov
comiss
push
mov
repnz
lds
dec
decl
push
mov
jb
add
inc
add
push
into
jns
mulb
pop
out
movsb
pop
repnz
inc
ret
flds
jge
push
cmp
sub
fwait
mov
pusha
sbb
es
je
ja
shll
or
push
jnp
gs
add
lcall
push
jge
jmp
dec
gs
fdivl
les
mov
lahf
das
test
out
outsl
jnp
cltd
out
pop
bound
stos
mov
pusha
pop
mov
stos
mov
ret
test
bound
sar
cwtl
clc
es
push
nop
jns
test
cmc
insb
xchg
push
rorl
and
jbe
push
aas
ss
cmpsb
dec
lock
and
inc
das
mov
aaa
add
cmp
fs
ds
push
sub
sbb
sub
leave
pop
or
outsb
sub
xchg
fcoml
in
test
mov
shlb
pushf
lea
jbe
jno
int
sbb
out
inc
xchg
es
and
ret
mov
les
cmp
ljmp
mov
inc
sbb
add
push
pop
and
cmp
mov
mov
sti
rolb
add
and
pop
test
jl
jnp
jnp
jo
inc
add
mov
test
pop
out
jp
add
add
sti
and
dec
test
sub
dec
mov
cmp
push
or
popa
test
add
pusha
xor
loope
pop
aas
cs
pop
push
mov
push
rcrb
fadds
shl
jb
ret
fstpl
mov
lods
data16
push
ficoml
sub
push
pop
adc
mov
aas
inc
lret
dec
out
movsb
test
icebp
cltd
in
inc
dec
fisubs
mov
and
push
mov
ds
push
inc
cmpsl
push
ljmp
enter
and
pop
in
movsb
dec
testl
push
mov
push
lret
dec
and
fwait
and
or
xchg
dec
mov
adc
push
jnp
movsl
pop
not
call
cld
push
sub
sbb
jg
sub
lcall
jns
mov
jle
pop
fdivs
test
add
jo
rorl
xor
mov
adc
pushf
cmp
cld
adcb
inc
in
test
dec
pop
call
or
xchg
orb
popf
mov
and
push
cld
mov
push
or
cwtl
mov
dec
ds
mov
sub
cmp
xchg
jle
addr16
xchg
sub
nop
inc
arpl
and
jb
cmp
mov
andl
insl
repz
adc
and
jg
decb
out
out
dec
scas
cmp
inc
cmp
inc
dec
sub
sbb
sub
repz
or
mov
dec
ficoms
cmp
sahf
sbb
cmpsl
in
or
mov
sbb
fs
xor
pop
call
xor
popf
jecxz
lds
sbb
into
mov
out
int
ret
jmp
fldl
add
xor
sub
fdivs
mov
shr
dec
rcl
cmp
icebp
push
mov
lods
imul
mov
xchg
push
mov
push
dec
xor
call
lret
popa
lods
ret
ljmp
or
sbb
and
mov
gs
push
dec
test
jecxz
fwait
lcall
gs
mov
and
xchg
cmpsb
and
rclb
xchg
sbbb
out
stos
scas
push
mov
loop
xor
rol
and
and
imul
push
sbb
inc
mov
rolb
outsb
adc
xor
insb
cmpsl
push
push
mov
adc
in
mov
ja
xchg
push
lea
or
jo
enter
push
and
repnz
pop
push
jp
int
mov
repnz
jae
xchg
or
cmpsb
aam
aaa
mov
mov
sbb
cmc
ja
stos
pop
add
outsb
testl
fldl
sarl
setbe
sub
add
mov
jbe
dec
adc
pop
in
mov
rcll
cmpsl
lock
aas
mov
lcall
divl
pop
cmp
xchg
and
or
aad
ja
mov
mov
loopw
push
mov
jo
sbb
icebp
xchg
mov
push
sbb
xchg
lea
rol
cmp
dec
fst
hlt
xor
mov
mov
gs
add
jbe
mov
jbe
pop
sar
sbb
mov
push
sbb
int3
je
fldcw
cvtdq2ps
out
xor
inc
ljmp
sti
jb
xchg
orb
mov
jle
pop
jp
inc
bnd
mov
mov
fidivl
mov
pop
cli
ja
leave
outsl
popa
das
xor
inc
lcall
inc
movsl
add
pop
jg
mov
mov
loop
mov
scas
xchg
out
cmp
mov
bound
xor
pushf
in
mov
mov
pop
inc
sub
test
pop
adc
stos
test
loop
or
jbe
mov
xor
adc
clc
sbb
das
push
cmp
push
ja
lds
jbe
enter
inc
fsub
push
push
mov
cmp
test
insl
test
aas
mov
out
mov
jns
mov
pop
jecxz
mov
add
and
jae
xchg
add
sbb
fwait
jns
out
dec
pop
std
push
movsl
sti
ret
shrl
ret
in
and
adc
popa
loope
push
je
xchg
jmp
adc
sub
loop
gs
nop
shll
inc
pop
cld
mov
inc
test
and
mov
iret
push
rcl
movsb
mov
cmp
scas
pop
fcmovnb
dec
nop
jmp
loope
jns
or
jb
out
jo
cli
push
add
pop
jg
lock
push
or
inc
push
stc
add
fcomps
push
aam
fsubrl
jl
xchg
cs
pop
je
pusha
jmp
iret
xchg
push
in
mov
and
lcall
and
or
jo
push
and
and
adc
negb
push
rolb
mov
scas
mov
outsl
arpl
cld
fs
push
and
outsb
push
mov
inc
or
lahf
pop
push
mov
xlat
push
mov
push
gs
mov
add
shr
daa
faddp
rolb
cld
inc
xor
daa
jo
pop
in
test
adc
sbb
inc
loope
pop
in
addr16
stos
xchg
add
inc
mov
dec
cmpb
push
or
call
xchg
or
in
mov
icebp
repz
fsubrl
in
and
cmp
es
pushf
push
jbe
cltd
pop
iret
sub
fisttpll
jp
inc
cmp
rorl
and
jo
push
push
sub
mov
mov
adc
pusha
xor
xchg
sub
aaa
int3
mov
pop
push
ret
fldln2
outsl
dec
movsb
jne
dec
ja
mov
es
out
mov
adc
imul
pusha
orl
addb
fidivrs
imul
mov
lcall
out
add
out
fdivl
out
je
dec
das
add
das
movsl
lret
mov
lret
mov
jmp
lock
mov
hlt
rorb
push
iret
mov
jb
adc
out
pushf
ficoms
jns
int
jae
insb
inc
fnsave
add
cmp
push
shlb
inc
out
and
cmp
cmp
ret
jl
call
fdiv
sub
mov
mov
mov
pop
les
jo
push
jnp
push
movsb
push
xchg
xlat
mov
mov
rcll
and
xchg
jno
jno
imul
scas
dec
lret
xchg
add
imul
movsb
mov
out
sub
fcomps
icebp
lret
in
cmpl
pusha
test
mov
adc
cmpsl
movsb
mov
add
dec
mov
mov
in
orb
dec
xchg
scas
ds
mov
push
insb
dec
sbb
pop
call
mov
movsb
or
insl
adc
nop
add
ljmp
mulb
test
shrb
in
imul
pop
das
ret
mov
or
cld
push
jae
jmp
les
mov
jnp
push
and
cmp
mov
sub
mov
cmp
or
mov
mov
push
mov
and
xor
mov
dec
add
mov
movsb
ja
inc
sbb
mov
xchg
cli
xor
mov
nop
adc
aaa
jg
xor
loope
cmc
mov
ficompl
into
outsb
pop
popa
stc
sbbb
stc
inc
mov
imul
fistl
adc
xchg
cmp
sub
xchg
rolb
add
pop
adc
sub
rcrl
outsl
jno
xor
fwait
sub
or
scas
cmpsb
fstpl
test
gs
cwtl
ja
int3
rcll
push
adc
test
cpuid
pop
dec
sub
pop
mov
scas
jle
js
inc
mov
dec
xchg
sarl
and
idiv
push
adc
push
xchg
jl
pop
or
testl
or
cmp
pop
push
xor
xchg
mov
mov
filds
fucompp
inc
ds
arpl
movsl
sub
mov
popf
test
les
gs
loop
rcll
popf
push
fcoml
inc
loopne
add
mov
out
enter
aam
jns
pusha
sbb
inc
aam
addr16
fsubs
push
mov
aas
out
aaa
mov
dec
fbstp
scas
adc
cmp
stc
jae
push
jg
pusha
xchg
sub
outsb
jns
inc
aas
std
mov
ffree
lret
in
adcl
hlt
aaa
jb
adc
jo
pop
movsb
pop
mov
fucomip
xchg
push
dec
shlb
push
jmp
test
mov
mov
mov
and
loopne
int
pop
and
insb
or
cmp
ljmp
jp
fisubrl
inc
pop
sbb
jge
arpl
sti
push
mov
push
push
in
push
push
hlt
pop
pop
out
push
mov
add
stc
adc
cmp
fiadds
or
fsts
lods
into
mov
or
sub
into
or
mov
xor
leave
outsl
sub
jp
cmp
add
clc
repnz
ds
and
fldt
mov
jbe
mov
loop
mov
jl
div
imul
inc
xor
cmpsl
sub
sub
jle
push
mov
xchg
xchg
aad
pop
cmp
leave
xchg
icebp
jmp
or
icebp
jmp
ret
jnp
insl
adc
push
cltd
enter
push
scas
jae
inc
fs
inc
pop
lcall
lahf
cmc
lods
cld
mov
movsb
xor
inc
pop
xor
mov
push
aaa
mov
ss
xor
fdivrl
lock
sbb
pusha
rclb
in
mov
pusha
adcl
xchg
fisttps
pushf
cmp
stos
mov
sbb
or
lcall
pop
mov
sub
mov
sub
cmpsl
into
iret
mov
jge
dec
sbb
mov
scas
pop
push
mov
add
loope
lcall
cmp
icebp
mov
fdivs
push
scas
sub
lcall
std
add
mov
call
push
iret
push
fmuls
and
sahf
lahf
xchg
push
js
sarl
test
aas
test
xchg
or
sbb
push
faddl
cmpsb
sbb
push
sub
flds
push
lret
insl
daa
add
xor
pop
mov
inc
aaa
lret
mov
ds
aas
outsb
xor
fildll
bound
ret
xor
lds
lea
dec
adc
in
adc
divb
xchg
sbb
repz
jg
push
xchg
leave
std
jns
aaa
dec
xor
push
ss
jnp
mov
pop
xor
loopne
mov
aam
add
aad
iret
mov
inc
mov
lahf
xchg
imul
mov
pop
push
xchg
movsb
leave
jo
xor
fucom
out
cmp
das
movsl
jecxz
mov
jmp
cmpsl
push
fidivrl
push
push
scas
sbb
jbe
cmp
sub
cmpsb
outsb
es
pop
aam
and
inc
xchg
fwait
jb
les
inc
pop
ret
jne
push
aaa
call
in
push
cmc
test
pusha
mov
mov
lds
jno
loope,pn
xchg
jns
mov
in
lcall
xor
je
push
add
push
loopne
pcmpeqw
push
push
ljmp
adc
or
jo
push
jg
fmull
insb
xchg
dec
gs
test
or
jle
pop
loopne
insl
sbb
lods
jg
cmpsb
jg
jo
test
dec
sub
push
stos
fisttps
jmp
je
scas
add
bound
mov
push
imul
adc
mov
in
imul
sub
mov
sbb
popf
xchg
jns
aaa
daa
lds
leave
dec
mov
dec
lcall
cld
mov
jne
jl
hlt
pop
int3
insb
ja
mov
cmpsb
cli
xlat
pop
and
dec
loop
push
stc
clc
movsb
mov
jmp
repz
fistpl
push
les
inc
jg
ds
or
inc
push
sahf
leave
int
jns
or
mov
mov
cmp
sbb
lret
cmc
xor
jno
and
pop
fcoms
test
push
jo
scas
inc
popf
int
jg
xchg
ja
fwait
sbb
clc
mov
mov
and
pop
fcoms
xor
pusha
push
data16
sbb
push
nop
push
daa
mov
jnp
mov
ret
cmp
add
repnz
enter
adc
xchg
or
out
movsl
add
jmp
fsubrl
mov
in
jae
push
cmp
loopne
and
adc
cli
mov
jl
sbb
and
inc
fs
clc
mov
push
xor
lret
jne
enter
scas
into
add
mov
loope
dec
insl
jns
pop
cli
or
clc
loopne
in
push
in
cld
mov
ss
das
cld
call
jo
mov
outsl
shlb
fwait
je
jb
push
stos
xlat
mov
pop
out
pushf
dec
xchg
in
mov
rcrl
call
cmc
sbb
pusha
jne
fs
lahf
jo
sarl
dec
cmp
lcall
xor
and
imul
push
aaa
enter
pushf
test
dec
lret
cmp
iret
hlt
add
pop
cs
ret
jnp
push
pop
inc
mov
setns
lret
add
movsl
xlat
lcall
lahf
dec
adc
mov
cmp
ds
jns
mov
xlat
pop
js
int
pop
mov
stos
push
mov
mov
ss
mov
mov
std
inc
mov
mov
mov
in
inc
cmp
loopne
es
mov
inc
push
dec
cltd
fucomp
pop
in
movsb
and
icebp
orl
adc
push
mov
int3
hlt
aad
jecxz
in
xor
test
fnsave
push
inc
jns
cmpsl
or
andl
nop
xchg
add
sbb
mov
push
sub
jne
cwtl
push
xor
mov
pop
pop
inc
faddl
lods
mov
shll
lahf
dec
xchg
mov
jno
aaa
push
mov
loop
sbb
mov
rclb
and
adc
adcb
mov
dec
adc
dec
inc
pusha
out
sbb
int3
sahf
ja
xchg
jmp
das
xchg
cmp
jmp
incl
std
and
mov
xor
or
ffree
ret
in
enter
sbb
pop
outsb
scas
add
mul
mov
sti
in
cmp
xchg
xchg
lods
paddw
push
push
pop
rorb
stos
xchg
out
or
jb
out
inc
dec
mov
xchg
inc
push
jmp
pop
nop
jne
sub
xor
push
es
mov
and
or
cmp
dec
xor
xchg
fs
mov
cmp
loope
test
push
sbbb
test
and
xchg
out
repz
cli
std
dec
inc
push
cli
mov
push
sbb
lods
xchg
fnstenv
pop
bnd
adc
lret
sbbl
ret
test
jecxz
and
pop
fadds
inc
mov
pop
stc
fisubrs
test
shll
adc
mov
or
aad
dec
inc
cli
call
gs
call
flds
clc
lahf
add
lods
jnp
inc
push
or
in
les
clc
sub
cmc
mov
ljmp
test
and
jecxz
out
out
jmp
jno
pop
push
add
xchg
add
mov
mul
insb
lds
ror
ja
mov
inc
xchg
jnp
psraw
call
shll
stos
loope
test
add
sbb
mov
and
paddw
std
cwtl
push
addr16
lock
mov
call
stos
lods
test
sbb
nop
jl
sbb
xor
or
pop
insl
lcall
lcall
sub
jae
mov
xchg
mov
cli
decb
dec
bound
addb
jl
mov
jp
jge
xlat
add
pop
ja
xchg
xchg
jl
ljmp
shrb
mov
push
int3
sub
imul
sub
xchg
pushf
rol
and
xchg
jg
bound
hlt
cmpsb
adc
sbb
push
or
push
add
insb
or
pushl
loope
pop
fst
std
or
addl
or
fcmovbe
jecxz
xchg
mov
insb
inc
mov
and
mov
shl
add
mov
push
xlat
mov
orb
sarb
inc
push
leave
cmpb
sbb
jmp
mov
mov
into
test
mov
outsl
sub
inc
lahf
xlat
push
adc
sti
xor
lds
pop
dec
mov
inc
add
sub
sahf
sbb
out
pop
mov
pop
mov
jne
cmp
ret
dec
lret
cwtl
push
adc
cli
out
ja
out
fnsave
jecxz
std
mov
out
lret
adc
std
pop
push
repnz
negb
sub
loopne
leave
xor
xlat
dec
mov
pop
xor
mov
lret
punpcklbw
xor
jae
adcb
mov
mov
ret
das
inc
dec
pop
dec
sub
lea
outsb
pop
mov
mov
pusha
push
xlat
fisttpl
popa
mov
cmpsb
pop
daa
jns
adc
aas
pop
sahf
jno
jle
or
pop
mov
cmc
cld
fisttpll
lar
loopne
inc
inc
add
xor
jle
jl
mull
or
and
fstl
inc
jo
sbb
lret
mov
adc
jae
sbb
mov
ljmp
mov
imul
jbe
ret
mov
sub
roll
fmull
ret
ss
push
dec
js
dec
dec
fdivl
fwait
aam
into
cmp
xchg
jg
and
lds
jne
dec
pop
cli
mov
and
mov
adc
push
jl
pop
pop
mov
out
push
sbb
cmp
cmp
scas
push
fcmovnbe
std
fldcw
jae
aad
adc
dec
inc
sbb
mov
and
ret
jge
fistpll
xchg
push
das
repz
mov
data16
adc
in
push
mov
sub
ficoml
dec
leave
das
push
mov
or
jo
or
cltd
jmp
dec
inc
fldl
pop
inc
cld
jae
lock
jmp
pop
hlt
lods
stc
loopne
repnz
adc
out
stos
loope
jns
test
nop
into
lods
sub
push
jge
mov
and
sub
mov
xor
mov
clc
dec
push
ss
cmp
nop
add
mov
enter
xchg
movsb
enter
lock
jnp
sub
cmp
imul
pop
je
aad
dec
xchg
mov
fwait
lods
add
out
test
lods
inc
mov
loope
adcl
push
mov
adcw
sbb
add
adc
cmpsl
fcmovb
xchg
fisubrs
inc
cmpsl
sbb
xrelease
or
into
jno
push
pop
inc
jp
sti
push
jge
leave
mov
adc
rorb
loop
sti
and
mov
push
cli
orl
movsl
dec
jb
cmp
sbb
out
mov
jmp
jo
jmp
clc
lock
xchg
mov
inc
jmp
clc
xor
and
inc
jbe
sub
adc
lahf
ds
in
aaa
sub
jecxz
inc
flds
sbb
test
and
inc
negl
imul
lcall
xchg
jecxz
je
and
adc
dec
mov
jge
test
adc
sarl
or
jno
data16
inc
push
jae
push
xchg
push
or
insl
nop
sbb
sbb
mov
enter
fisttps
or
mov
out
test
push
fisubrs
movsl
xchg
loope
lea
stos
and
int3
cmp
xchg
cmp
aam
nop
mov
push
push
pop
cmp
leave
sub
inc
xor
imul
xor
and
and
test
sbb
icebp
mov
xchg
cmp
or
lahf
sbb
mov
das
sub
loopne
push
jne
in
cltd
lret
push
and
incl
loope
inc
loope
xchg
mov
xor
and
jne
iret
data16
mov
lods
sbb
xor
push
mov
sub
lods
iret
jbe
add
or
pop
mov
pop
lds
jb
xor
insl
aad
dec
or
push
sbb
bound
mov
stos
and
imul
movsb
sbb
mov
je
into
ss
es
lret
int
mov
or
cld
nop
dec
mov
sbb
mov
in
mulb
aaa
mov
add
jne
or
and
jp
je
sub
aad
mov
fcompl
push
test
fidivrs
xchg
xchg
rorl
cli
xor
das
pop
or
movsl
es
out
dec
sar
bound
push
test
fimull
inc
push
add
call
ret
push
adcl
iret
sub
mov
xorl
out
jno
jg
push
add
dec
out
xchg
dec
sbb
in
and
enter
and
addr16
mov
repz
sub
dec
imul
sti
clc
add
mov
and
inc
pop
pusha
mov
lock
xchg
pop
sub
jae
insb
push
lret
mov
pop
push
mov
pop
subb
insb
lds
inc
jp
xchg
pop
nop
repnz
jecxz
or
cs
xor
xor
xlat
fiaddl
inc
pop
sarb
cwtl
jo
jb
test
jbe
dec
bound
call
int
in
and
insl
loopne
lods
sub
sbb
mov
mov
dec
aad
cmpsb
sub
out
xchg
movsl
pop
mov
aaa
hlt
sbb
test
and
ljmp
push
das
scas
cmc
and
cli
or
cltd
loop
mov
xor
ljmp
es
xchg
inc
dec
dec
mov
lahf
adc
data16
and
or
pop
pop
mov
or
mov
or
mov
xor
stos
sbb
loopne
jae
push
jae
xchg
pop
sbb
adc
adc
xlat
mov
lcall
popf
inc
sahf
cld
sbbb
jno
es
mov
out
repz
dec
lock
mov
dec
xor
push
mov
jge
or
loope
adc
push
inc
out
leave
sub
icebp
inc
lret
shrb
js
mov
mov
imul
adc
neg
faddp
repz
lock
ljmp
xchg
mov
lods
cld
cwtl
cs
or
aas
imul
jne
lea
lock
mov
rcll
mov
add
dec
out
call
mov
aam
adc
cltd
or
cld
movsb
jno
lods
cmpsb
lret
pop
cld
inc
mov
repz
pop
jno
out
call
stos
pop
xor
or
aas
push
test
in
pop
idiv
cltd
push
loope
add
cmp
sbb
xlat
or
imul
jmp
fadd
and
sub
push
and
sub
jg
daa
sahf
call
in
jno
inc
outsb
ret
ret
inc
clc
cmp
push
and
mov
insb
xorl
jge
cmpsb
call
insb
pushl
stos
icebp
loop
push
lret
push
sub
mov
pop
stos
jo
sub
clc
faddl
frstor
test
out
jns
dec
call
dec
cmpsb
ficomps
pop
or
dec
icebp
shl
rol
push
clc
add
inc
cs
aam
loope
or
xchg
dec
cmp
push
and
dec
mov
or
inc
dec
dec
and
insl
lock
nop
aas
sbb
das
or
mov
je
movnti
jne
jp
lahf
dec
movl
cld
jmp
out
mov
cwtl
scas
jno
pop
dec
and
loop
jae
xor
leave
insl
in
ja
mov
push
dec
pop
dec
ret
enter
scas
mov
dec
xor
mov
push
aaa
sub
outsb
pop
jmp
dec
cmp
pop
lock
dec
insb
push
in
daa
adc
movsb
imul
dec
rcl
sub
out
cmpsb
push
jnp
test
mov
ffree
call
xchg
iret
add
aad
mov
iret
movsb
jecxz
mov
xor
mov
sub
repz
movsb
out
mov
mov
repnz
imull
mov
mov
or
inc
scas
fwait
bound
daa
pop
adc
inc
add
mov
and
repz
cmp
xchg
inc
loope
sub
int
test
inc
icebp
push
xor
outsl
shll
int
mov
stos
out
pop
jo
push
test
sub
jg
dec
sbb
jae
inc
jmp
add
mov
mov
xor
add
mov
add
push
jb
stc
div
rorl
ljmp
pop
xor
adc
cltd
adc
xor
cwtl
movb
in
out
fldt
pusha
not
and
mov
dec
push
adc
adc
outsb
cmp
mov
fsubs
mov
nop
cwtl
lds
loope
jns
je
lods
pushf
pop
xchg
test
mov
xchg
aaa
mov
mov
pusha
xchg
mov
imul
cmp
popw
sbb
xlat
dec
outsb
iret
pop
shrl
jns
adc
lods
pop
std
pusha
mov
lret
mov
adc
test
mov
adc
int
pop
xchg
mov
in
inc
add
xchg
addr16
into
sub
adc
add
jge
xor
xchg
push
mov
inc
or
arpl
sbb
inc
dec
fcompl
int
mov
test
xchg
loopne
out
fwait
xor
pop
pop
repz
sbb
popa
addl
jne
jle
rclb
cmp
push
sub
stc
insb
jmp
mov
cli
and
xor
dec
sub
inc
repnz
pop
arpl
mov
pop
jns
scas
lods
jne
jb
pop
sub
push
jge
arpl
inc
mov
mov
push
insb
sbb
xor
jnp
sbb
cmp
out
inc
ds
push
push
adc
push
lock
jno
or
pop
cltd
add
xchg
lahf
fwait
int
jg
pushf
jmp
and
and
fldenv
jg
ret
push
add
ficoms
clc
imul
arpl
xor
cs
arpl
call
push
adc
cmp
arpl
mov
xchg
push
out
lret
jp
mul
sbb
sbb
leave
ja
jecxz
lds
push
dec
in
sub
or
pop
roll
stc
lods
data16
push
inc
sbb
in
outsb
inc
pushl
jb
ret
inc
mov
lods
int
outsb
mov
push
shl
lea
inc
js
sbb
iret
and
mov
cwtl
cmp
pop
into
or
cwtl
loopne
cli
mov
insb
jmp
in
lea
rolb
shl
and
sbb
xchg
jge
jo
leave
ja
pop
loop
stc
shr
dec
inc
bound
inc
repz
mov
cmp
push
cmp
jle
inc
mov
jl
leave
pop
push
scas
lcall
xor
xchg
and
inc
inc
push
push
and
popa
fldt
clc
int3
cmc
pop
mov
fs
imul
sub
pop
adcb
aad
push
in
clc
mov
mov
dec
or
inc
sbb
pop
jle
into
inc
jo
xchg
add
jb
xchg
xchg
add
jnp
or
mov
xchg
cmc
sbb
testb
cltd
adc
icebp
dec
sbb
mov
imul
addb
push
mov
dec
pop
mov
neg
pop
and
fwait
mov
movsb
adc
add
nop
mov
jne
into
out
arpl
dec
in
fistpl
les
add
inc
icebp
pop
aaa
popa
addb
adc
xor
sbb
xchg
imul
or
fnstsw
ja
test
notl
and
cli
sbb
mov
inc
ret
inc
jmp
adcb
xchg
sub
push
movsb
or
ret
aad
and
and
sbb
sahf
cmpsl
and
jns
inc
cmc
jbe
insb
fdivrp
ds
sub
int3
fs
xor
xchg
testb
negl
dec
inc
out
jns
cwtl
out
xchg
les
cmp
out
adc
loop
mov
mov
pushf
fidivrs
ja
lret
mov
stc
push
ds
cltd
fmuls
test
cmp
sbb
sbb
sub
loop
pop
mov
filds
jo
mov
pop
cmp
lahf
call
push
dec
push
jnp
sbb
les
outsb
mov
leave
fmull
adc
daa
cmpsb
sahf
mov
pop
faddl
mov
les
shr
icebp
test
adc
jg
imul
fwait
loope
pushw
loope
push
nop
jns
negl
or
jb
sub
jb
sub
jge
pop
inc
mov
clc
adc
movsl
fsubl
pop
push
pop
mov
rolb
or
jl
mov
jle
dec
out
mov
xchg
repnz
mov
inc
dec
cmpl
or
cli
add
comiss
dec
shll
xor
outsb
sarb
jmp
mov
sub
or
ret
dec
and
and
add
mov
dec
out
jae,pn
or
je
aaa
sbb
cmc
in
in
gs
dec
ret
idivl
lret
xchg
add
jg
mov
add
adc
ret
icebp
inc
and
loopne
push
pushf
aas
push
xchg
out
scas
pusha
imul
lea
jmp
xchg
pop
loope
jecxz
dec
arpl
nop
sub
mov
mov
mov
pop
ja
pushf
decl
add
fs
dec
sahf
sub
pop
push
je
sub
std
xchg
dec
imul
mov
into
jmp
mov
or
call
lods
enter
rcll
jecxz
imul
js
jns
jbe
js
or
dec
call
xchg
mov
push
jmp
xchg
or
push
scas
leave
and
negb
pop
xor
add
mov
scas
push
pop
int3
add
inc
lea
pop
push
sbb
cmp
cmp
sbb
pop
insb
mov
mov
xor
jo
pop
jmp
cmpsb
incl
std
cmp
push
aaa
push
pushf
pop
push
rcrb
sub
xchg
or
enter
mov
ss
adc
xor
inc
mov
jns
clc
loop
leave
add
gs
lret
movsb
aad
mov
mov
mov
pop
rcl
hlt
fldl
aaa
mov
lahf
movsb
mov
aam
lock
js
ret
mov
sub
adc
and
int3
xor
mov
cmp
push
das
sbb
shll
inc
out
imul
dec
adc
dec
fidivl
xor
and
insb
jnp
pop
xchg
adc
xor
lock
add
in
nop
dec
sub
test
fnsave
loopne
adc
std
subl
jbe
mov
gs
ja
popa
ret
stc
inc
push
inc
mov
movsb
push
into
call
push
outsb
inc
outsl
sbb
lock
test
push
mov
in
stos
lea
lcall
test
cmpsl
in
fsubrl
dec
add
int3
push
mov
adc
sahf
loope
sub
cs
push
lods
lret
xor
lahf
loopne
jp
push
sbb
and
and
mov
add
push
or
mov
out
mov
int3
repnz
or
or
mov
cmp
test
popf
inc
fistl
mov
std
icebp
ror
pop
jge
dec
aaa
and
sti
stc
popl
jge
enter
cmp
mov
mov
mull
dec
rclb
aaa
adc
xlat
daa
jno
je
movsl
lock
push
ds
adc
push
mov
mov
sbb
xchg
icebp
dec
repz
scas
movd
mov
and
cltd
mov
out
mov
mov
mov
cmpsb
mov
cmpsl
js
push
outsb
pop
or
push
xor
test
test
out
stc
sti
imull
lret
inc
or
lea
insl
outsb
push
push
lret
push
xchg
jecxz
inc
xorb
pop
in
int3
in
mov
mov
fiadds
mov
dec
pop
add
lods
push
jns
sbb
push
js
xchg
aas
and
and
stos
ret
jl
cmc
mov
jl
fcomps
dec
push
push
loope
push
cmpsb
inc
mov
sub
or
dec
push
fwait
pusha
pop
aad
aam
cli
sbb
popf
xchg
or
dec
add
jo
pop
or
sub
dec
out
pop
xchg
fstpt
ljmp
jno
lret
popf
pop
fucomp
lret
test
aas
cmpsb
dec
xchg
subb
xchg
std
add
fiaddl
test
xchg
add
sti
roll
dec
jne
pushf
and
or
dec
xor
dec
fbstp
pop
cld
pushf
adc
inc
loopne
jle
lods
pop
push
inc
pop
cltd
lds
scas
arpl
jp
loop
dec
or
jo
pop
xchg
jle
out
jge
sbb
mov
inc
inc
out
mov
dec
mov
mov
sub
xchg
dec
pop
mov
in
or
out
dec
testl
sbb
jge
mov
insl
loopne
or
hlt
push
lods
xor
xor
xlat
test
loop
sbb
test
cmp
sub
lea
xorl
incb
cmpsl
mov
add
movsl
pop
push
or
cmp
and
test
pop
cwtl
push
lock
jp
mov
and
cmpb
inc
cmp
mov
fnsave
cmp
ja
loopne
xchg
mov
lods
add
shll
sub
cmp
push
js
dec
adc
popf
cltd
test
mov
pop
addb
push
test
sub
mov
adc
jae
cli
dec
jle
jns
ret
leave
pushf
aas
cmp
adc
into
js
inc
flds
push
popf
cmp
mov
pusha
pop
pop
inc
push
push
mov
lret
loopne
shll
dec
push
mov
mov
cld
pop
inc
inc
or
push
fcoms
mov
daa
push
mov
cmpsb
aaa
or
dec
icebp
cmp
int
push
cmpsl
xchg
into
or
pop
andl
popa
adc
fs
or
push
or
sarb
pop
adc
adc
jle
out
stc
or
jge
ret
incb
jle
and
test
jp
lcall
leave
add
sarb
testl
pop
outsb
mov
arpl
cmpb
dec
or
arpl
inc
inc
xchg
inc
dec
and
xchg
mov
jecxz
call
mov
mov
in
decl
dec
je
pop
and
test
jbe
fdivl
pop
orb
inc
int3
scas
cmc
xor
clc
in
popa
insb
lods
out
cld
mov
mov
clc
repnz
fidivrl
int3
xchg
pop
loopne
inc
daa
add
test
fwait
xlat
ljmp
dec
repnz
cltd
insb
sub
mov
call
imul
jp
pop
adc
or
daa
ja
lea
xor
cmpb
mov
push
in
and
cmp
xchg
es
lret
mov
pusha
jae
gs
loope
mov
push
insl
and
sub
aaa
in
ret
leave
xchg
loope
aas
xchg
scas
daa
sub
js
loopne
cmp
mov
lds
fnstcw
std
aad
iret
in
pop
ret
cmpsb
adc
or
adc
push
mov
mov
inc
and
fs
outsb
or
out
imul
lahf
cmc
leave
orb
dec
adc
adc
dec
adc
pop
dec
mov
data16
sub
cmp
pop
jg
in
orb
sbb
fnstsw
es
lea
sub
cmp
mov
ja
mov
test
subb
inc
mov
repnz
andl
jbe
aam
and
mov
sbb
add
ror
cmp
jp
out
xor
adc
ja
sbb
mov
mov
or
mov
push
sar
push
popf
inc
add
popa
ss
inc
xchg
jg
cmpps
mov
mov
jmp
xchg
orb
xor
xlat
outsb
xor
sub
push
mov
sub
xchg
and
adc
adc
lods
sbb
imul
jnp
jnp
or
xchg
shll
jge
repz
xor
or
pop
test
sub
int
pusha
aad
jle
ret
mov
shrb
mov
jae
push
pop
and
mov
sarb
push
gs
loope
lock
dec
dec
jno
scas
lret
sbb
push
jo
hlt
aam
jbe
jmp
negb
movaps
push
fsub
je
loopne
psubsw
add
mov
jl
test
ljmp
xchg
add
sbb
sbb
push
jne
cmc
nop
xchg
call
loope
jge
adc
xlat
lods
sub
push
mov
negl
stos
incb
or
adc
ljmp
iret
and
mov
ret
and
add
sbb
stc
xlat
sbbb
es
cmp
xchg
push
clc
dec
fs
sub
je
mov
lock
divl
shl
push
sarl
lods
xor
ja
pop
push
jne
and
data16
je
pop
out
or
or
cmpsb
mov
xor
and
sahf
call
xchg
popa
jbe
jl
sbb
push
push
jno
cmpxchg
mov
add
or
pop
mov
add
add
aad
pop
xchg
das
inc
rol
sub
jno
push
movsl
fwait
int3
and
cwtl
fwait
xchg
ljmp
test
nop
ret
pop
xchg
pushf
ss
out
xor
sbb
sbb
xor
jbe
punpcklwd
dec
sub
test
and
jge
pop
push
ffreep
xchg
and
inc
fstpt
call
sub
push
xchg
ret
add
repnz
repz
andl
inc
rcrl
fdiv
movsb
or
mov
add
mov
mov
push
jae
mov
cmp
jmp
xchg
and
add
pushf
pop
cltd
push
xchg
imulb
lods
incb
ficompl
into
test
rcrb
adc
cltd
jmp
jno
loope
test
iret
inc
fs
fistps
xchg
fistl
mov
xchg
ret
mov
mov
adc
popa
int
mov
inc
dec
pop
cmp
add
push
pusha
cmp
pop
divl
pusha
out
xor
rcrl
in
and
jnp
ret
dec
fwait
lods
and
gs
jo
fdivs
out
stos
sar
xor
pop
fnstcw
das
push
pop
sbb
cmp
or
scas
cmp
leave
daa
pop
test
movsl
sahf
mov
js
xlat
mov
mov
cmpl
mov
cmp
enter
loope
cmp
pop
sub
cmp
out
icebp
fwait
add
jle
mov
jns
xchg
idiv
mov
pop
mov
sbb
andl
out
dec
data16
pop
lgs
push
sbb
aad
cmp
in
push
hlt
cmp
incb
lods
int
fdiv
mov
xor
pop
mov
enter
mov
adc
push
mov
dec
xor
xchg
mov
and
push
and
inc
inc
jb
les
pop
add
mov
adc
jg
outsl
arpl
add
je
stc
loop
stos
enter
push
mov
andl
sbb
push
nop
cmove
arpl
shrl
out
mov
mov
addr16
push
pop
mov
add
xor
data16
and
mov
sub
dec
incb
sub
mov
and
sbb
inc
or
shl
dec
mov
adc
lret
push
loop
add
pushf
das
inc
lahf
or
push
pop
adc
add
dec
jp
mov
test
clc
adc
inc
mov
inc
int
sbbb
pop
into
into
mov
mov
sbb
cmp
add
sub
adcl
inc
ds
mov
sub
aaa
mov
cmp
lods
shlb
inc
repz
sarl
adc
daa
adc
push
sbb
lcall
add
mov
jmp
dec
ror
es
and
stos
cwtl
push
pop
sti
push
test
outsb
rolb
cltd
ficoml
enter
add
pusha
pusha
stc
jb
cwtl
dec
sub
filds
in
or
jne
popf
call
icebp
inc
jns
adc
hlt
jmp
fadds
xchg
mov
jne
dec
loopne
pop
std
adc
jo
mov
cmp
jbe
push
fldl
push
imul
mov
cmpsl
stc
pop
xor
call
sub
fs
xlat
cmp
jne
ret
bound
movsb
insb
out
shr
hlt
or
or
popa
jbe
sbb
xor
mov
lock
std
and
sub
test
xchg
popa
xchg
nopl
mov
push
mov
add
sbb
fcmovne
sub
insb
imul
fs
fisubs
cwtl
pop
fcomps
rcrb
pop
adc
lods
arpl
jne
ljmp
push
outsl
jp
mov
add
std
pop
mov
cmp
fisttpl
add
sub
sub
xor
adc
inc
pop
js
je
loop
push
rorb
gs
mov
inc
push
pop
outsb
fstps
ja
mov
rcrb
jno
jne
clc
jecxz
inc
ljmp
jnp
dec
xchg
inc
mov
cltd
out
xor
xchg
lds
jle
lahf
testl
fiadds
adc
arpl
ret
add
mov
nop
add
pop
sti
imul
dec
mov
sahf
pop
add
pusha
test
nop
and
jg
mov
or
dec
out
stc
xlat
sbb
out
jmp
test
in
loopne
in
jle
jnp
xor
lock
dec
pop
idiv
push
cltd
xchg
cmp
daa
into
pop
xchg
repnz
pop
inc
push
mov
test
mov
dec
addr16
push
push
sbb
sbb
jb
ffreep
mov
mov
lea
add
cmp
fsts
mov
lock
cltd
cld
test
in
mov
mov
or
ljmp
aaa
insl
fidivl
test
cld
jge
push
pop
ss
stc
mov
cli
sarb
lods
xchg
mov
test
pop
jno
cmpsl
fiaddl
pushl
or
jp
cltd
and
mov
xchg
cli
int
mov
scas
xor
or
jg
jo
movsl
mov
fistpll
shl
pop
dec
js
inc
sti
dec
mov
or
add
ds
mov
mov
mov
and
mov
test
data16
test
fisubl
push
inc
xor
add
lcall
lahf
gs
pop
insb
jb
mov
and
sbb
cwtl
sub
jmp
in
insb
and
adc
inc
jecxz
sub
xchg
rorl
xor
test
rclb
push
adc
push
ljmp
icebp
ss
pop
loop
les
cwtl
movsb
mov
and
push
cs
es
ja
test
push
lock
shll
sub
inc
scas
xchg
adc
lods
mov
mov
inc
dec
ss
inc
aam
push
call
fwait
ror
mov
sbb
lods
xchg
add
xchg
dec
divb
mov
movsb
inc
cmp
adc
in
push
loopne
leave
xor
xor
xchg
mov
hlt
daa
jns
mov
mov
mov
xor
inc
and
pop
sbb
inc
out
in
lods
jmp
adc
outsl
addr16
cmp
leave
cmp
mov
bswap
xor
aad
push
adc
and
fnstsw
loope
lret
xchg
popa
loop
sahf
push
jne
enter
sbb
cmp
and
daa
push
jle
push
jl
mov
divl
outsb
gs
push
mov
sbb
jae
jne
sub
push
mov
leave
pop
stc
push
lods
pusha
or
and
sub
imul
mov
fsubl
daa
dec
inc
push
push
loope
ret
mov
xchg
push
and
jl
xor
fdivrs
add
and
int
cltd
lock
jb
mov
mov
sar
mov
popf
jmp
icebp
and
sub
scas
and
cmp
pop
xchg
jmp
dec
pusha
mov
add
mov
mov
fwait
adc
pop
push
iret
pop
addr16
push
push
dec
fs
pushf
xchg
es
mov
lods
repnz
out
fiadds
add
fs
int
sbb
xchg
test
data16
je
js
cltd
add
or
jae
test
js
mov
jnp
jo
xor
leave
out
ds
stos
daa
mov
inc
imul
xchg
int3
sub
pop
pop
jg
xchg
push
fsubrl
js
cltd
fcomps
push
jg
sarl
scas
push
sub
pop
pop
push
rep
cwtl
cmpsb
pusha
and
mov
pop
pop
pop
lock
or
cmp
outsb
add
push
out
lods
adc
aad
mov
sbb
cld
push
sbb
push
jge
imul
test
xlat
stos
pop
lods
ja
call
or
les
mov
ret
sbb
jae
negl
dec
loop
aas
xchg
push
arpl
mov
sbb
mov
pushf
add
imul
cmpsl
mov
lret
in
jp
daa
repnz
cmc
lret
inc
pop
dec
lret
mov
mov
movsl
pop
mov
stos
xor
adc
sbb
mov
scas
shlb
stc
ret
cmpsb
aas
ss
mov
repnz
sti
sub
in
sti
idivl
subl
cmpsl
insb
out
mov
jo
push
test
jp
and
inc
dec
mov
lods
lock
int
dec
jp
inc
sub
dec
add
cmp
pxor
xchg
in
cmp
xchg
aad
pop
rorb
popf
sahf
inc
mov
sarl
aas
xlat
cmp
ret
movl
jb
xchg
loope
out
pop
mov
jg
jmp
pop
les
data16
sbbb
lret
or
pusha
jmp
repz
xor
jns
jmp
or
scas
jp
test
arpl
mov
div
or
sbb
jb
nop
lods
cmpsb
js
out
pusha
jno
movnti
adc
frstor
sub
inc
and
sbb
in
push
ja
lret
popa
or
lods
stos
negl
lret
mov
inc
dec
iret
jo
aaa
sbb
ret
ret
or
push
neg
xchg
and
or
jbe
xchg
or
push
ss
lods
ret
jno
dec
xchg
cmpsb
pop
mov
mov
popf
cltd
dec
mov
cmp
xor
nop
daa
or
adc
jbe
and
pop
std
pushf
imul
stc
xor
jmp
dec
sbb
fldl
mov
mov
push
cmp
fldenv
and
fwait
std
mov
fstpt
out
inc
or
mov
jb
mov
bound
test
mov
sahf
leave
sub
movsl
jg
xor
pop
rcrb
dec
iret
add
dec
cmpsb
insb
cwtl
mov
js
pusha
popa
loope
sub
inc
xchg
bound
ss
nop
or
sbb
leave
adc
inc
sbb
sbb
ror
pop
imul
out
push
lgdtl
adc
and
pushf
int3
sbb
push
int
cmp
sbb
roll
push
rcrb
lret
pop
int
pop
push
inc
pop
bound
push
bound
pop
mov
cmpsl
push
mov
shll
dec
repz
sub
shlb
shrl
xor
xchg
cmp
jg
rclb
rcll
arpl
and
and
adc
cmp
cmp
mov
cmp
push
sarb
stos
push
aam
fstpt
add
loopne
sahf
sub
in
sbb
jns
mov
mov
pushf
dec
ljmp
ret
out
aaa
nop
inc
fidivs
xchg
xchg
push
into
push
jo
mov
sbb
mov
iret
jbe
jp
imul
sbb
dec
call
lock
fld
mov
xchg
ljmp
sbb
pop
or
xchg
cmpsl
mov
fists
mov
jge
sub
adc
jl
pop
adc
mov
pop
inc
xor
sub
enter
imul
and
jns
es
icebp
or
and
repnz
addr16
lcall
pusha
mov
jmp
dec
lret
cmp
jo
cmpsb
mov
fcoms
faddp
pop
pop
in
xchg
sub
inc
ja
add
aam
xchg
dec
bound
pop
pop
arpl
pop
lds
cmp
std
adc
in
adc
jo
mov
out
fisubrs
mov
mov
mov
inc
shll
or
mov
daa
xor
outsb
mov
outsb
inc
hlt
pop
or
adc
pop
push
mov
mov
repnz
add
int3
xchg
popa
leave
add
jmp
inc
movsl
mov
incb
xchg
and
inc
mov
sbb
ja
lcall
xchg
sbb
add
sub
and
cmpsl
sbb
cmp
jno
dec
pop
xchg
inc
insb
mov
add
neg
sub
jns
xchg
fucomip
fisttpll
std
dec
dec
leave
add
les
sub
enter
in
arpl
mov
lahf
fstpt
fistpll
adc
jne
js
jbe
lret
jne
jmp
int
and
mov
pop
div
daa
cmpsl
and
pop
je
int
in
inc
into
mov
mov
sarl
push
mov
cli
jmp
sbb
inc
fs
jge
inc
cltd
js
mov
hlt
es
lods
push
dec
inc
sub
jmp
js
mov
pop
xchg
in
clc
mov
mov
jbe
push
pop
push
mov
leave
and
rcrb
repnz
cmpsb
pop
or
ret
cmc
jnp
push
stc
incl
lock
pop
aas
frstor
sti
fcom
das
push
out
push
adcb
adc
or
lea
popf
sbb
inc
ret
ja
sub
mov
inc
push
int
lret
sti
ret
lods
pop
sbb
sub
hlt
and
add
xor
xchg
xor
ficoml
fidivrl
xchg
adc
inc
decl
dec
xchg
scas
push
mov
or
add
lcall
testb
sub
jge
mov
inc
push
fdivrs
xor
push
and
dec
aad
mov
stc
mov
out
test
ss
sbb
loop
repz
lret
sbb
int3
fsubr
insb
push
xchg
xchg
ljmp
lcall
lsl
and
in
xchg
loop
sbb
cmpsl
fwait
lcall
or
lcall
adc
in
pop
scas
outsl
xchg
ret
xchg
scas
mov
dec
push
and
and
int3
ret
mulb
fwait
sub
dec
fwait
push
jo
xchg
out
push
test
lahf
dec
cmpsl
mov
rcl
xlat
sbb
push
js
mov
inc
push
cwtl
out
adc
fmul
pop
cltd
fnsave
add
pop
insb
movsb
inc
insl
lcall
ret
sbb
inc
xor
push
jbe
aas
mov
insl
test
or
fidivrl
out
fisubl
ret
cvtps2pd
or
sbb
pushl
jge
add
fiaddl
push
jo
std
cmpsb
xchg
std
jnp
aad
xchg
jl
imul
sub
cmpsb
pop
fcompl
outsl
and
dec
adc
push
les
int3
sbb
jne
in
mov
sub
push
dec
addr16
mov
pop
add
shrl
jno
insl
dec
out
and
out
fwait
jmp
jmp
jmp
jne
testl
xchg
dec
imul
div
clc
jge
popf
lods
rclb
or
je
sub
icebp
addr16
or
testb
test
adc
xor
inc
mov
sbb
lahf
aas
add
and
or
enter
adc
jl
adc
inc
test
faddl
fs
push
sbb
or
xchg
xchg
sbb
pop
jge
nop
adc
adc
and
mov
mov
push
test
xchg
jmp
sub
ds
push
adc
pop
inc
cltd
jp
lods
imul
sbb
sbb
in
test
mov
xor
mov
push
sub
out
outsb
xchg
cmp
or
push
xor
fstp
or
jnp
add
pop
pcmpgtb
mov
into
repz
sub
jmp
hlt
jo
pushf
pop
dec
inc
and
lds
pop
mov
mov
clc
hlt
imul
mov
cmp
push
lret
je
bound
loope
jae
add
notb
out
subb
leave
and
push
and
push
mov
fists
dec
fisubl
test
out
adc
rorb
push
push
cmp
jp
outsb
or
pushl
or
or
mov
movsb
adc
ds
jmp
mov
and
push
xchg
fisubs
test
inc
fnstsw
lods
repnz
bound
and
jns
cmc
xchg
and
xor
jle
xor
js
lcall
sbb
xchg
dec
cmpsb
gs
arpl
or
sub
sbb
mov
sub
bt
add
gs
sbb
jle
flds
sbbb
aaa
repz
pusha
rorl
enter
lret
arpl
mov
dec
rolb
enter
div
cmp
scas
inc
popf
push
or
add
mov
out
pusha
mov
pop
mov
or
aaa
sub
lods
and
xchg
lock
inc
dec
mov
or
mov
imul
jns
leave
scas
neg
lock
cmpb
arpl
mov
xor
cwtl
dec
mov
loope
lock
fldl
lret
push
stos
and
rep
call
mov
mov
stos
shrl
add
sbb
fdivp
inc
mov
sub
out
or
sub
sub
push
add
and
ret
cmp
fcompl
add
xor
les
or
mov
movsl
jmp
adc
in
mov
push
inc
inc
mov
jbe
out
inc
add
or
aas
outsb
mov
xor
sbb
add
mov
cmp
cmp
dec
outsb
push
xor
pop
pop
scas
out
jno
das
out
pushf
outsb
mov
mov
addb
inc
adc
ffreep
push
les
std
xchg
sub
xor
dec
ss
and
cmpsb
inc
scas
sub
inc
pusha
hlt
enter
mov
leave
jge
scas
call
mov
nop
pop
cmp
jno
and
pop
jnp
je
cwtl
loopne
push
sub
xchg
mov
and
add
jbe,pn
or
jae
or
stc
dec
sub
addr16
push
push
xchg
mov
scas
pop
popf
ljmp
sub
sub
inc
test
xor
inc
mov
cmp
mov
adc
jo
movsl
jp
push
pop
jae
loop
sbb
push
mov
and
lret
pop
pop
cmp
xchg
push
and
es
or
jle
in
mov
loope
shld
fisubrs
add
mov
mov
cmp
subl
cli
aad
or
cli
std
xchg
xor
mov
testb
loop
jno
icebp
jae
push
out
das
fldl
test
push
mov
add
prefetch
or
pop
stc
sub
push
call
add
mov
iret
dec
clc
adc
jne
movsb
fsubp
mov
fst
push
jle
jmp
sbb
sub
mov
add
mov
mov
or
sub
mov
in
adc
cmp
cmpsl
dec
mov
jmp
xor
jns
push
jae
fbld
xchg
push
add
test
ljmp
aas
xor
jl
and
sbb
xor
ret
mov
jno
aas
pop
add
addr16
in
iret
pushl
inc
sub
popf
mov
lea
insl
jnp
jb
sbb
scas
adc
movsb
lock
cmp
mov
rclb
orb
scas
inc
sbb
mov
mov
insb
lods
xchg
mov
mov
stc
mov
sub
dec
fwait
dec
sub
mov
mov
inc
push
clc
push
fdivr
ds
xor
pop
pop
push
dec
push
out
inc
pop
clc
ljmp
jns
lods
fs
das
inc
loopne
lock
cwtl
jbe
psrlq
lcall
jmp
test
dec
cmc
cmp
jg
pusha
popa
push
xchg
adc
inc
je
jno
ficoml
pop
fdivr
dec
pop
or
icebp
dec
jmp
neg
sub
insl
fiaddl
cs
pop
push
xor
mov
dec
cmpsl
and
mov
mov
sub
add
dec
mov
pop
jno
lret
adc
cmpsl
jne
sbb
ret
cmp
outsl
mov
aam
xor
and
mov
aad
lods
cmc
sahf
int3
fisttps
push
fstpl
out
xor
add
ljmp
loopne
sbb
mov
fadd
fimuls
jnp
pop
shrb
aam
dec
cmp
add
sub
push
add
scas
jne
inc
pop
cli
dec
mov
dec
push
scas
mov
test
add
or
xor
mov
imull
cld
push
andl
insb
rcrl
jecxz
stos
ret
mov
dec
add
test
cmp
ljmp
cmp
sub
out
sbb
out
roll
and
repz
mov
jmp
sahf
xchg
lock
mov
add
orl
leave
push
cli
jne
sub
xchg
dec
xchg
mov
and
cltd
scas
mov
cmp
jl
orl
andl
xrstors
hlt
test
mov
adc
pop
nop
shll
mov
fs
pop
pop
or
adcl
push
aam
jno
cmpsb
jae
push
mov
pop
outsl
shl
out
sub
icebp
fldl
adc
daa
sahf
or
push
adc
sbb
add
ret
rcrl
mov
daa
sub
add
insl
xlat
lods
dec
dec
cmp
test
or
push
out
inc
and
shrl
inc
lret
dec
adc
popf
insb
mov
push
je
push
push
out
mov
in
jl
mov
cwtl
nop
jb
xchg
lcall
in
push
xor
add
push
lahf
mov
xchg
outsl
and
iret
repnz
xor
pop
cld
xor
cmp
push
icebp
pop
sbb
dec
leave
popa
outsb
pop
test
sahf
aam
fxch
std
addr16
adc
sub
push
inc
test
aaa
mov
mov
lahf
mov
imul
inc
into
in
scas
ror
push
push
inc
test
stos
imulb
pop
mov
scas
sti
cmp
out
out
jl
int3
mov
and
pop
fcomp
out
adc
lea
outsb
push
jae
jge
mov
rcll
mov
rol
xor
mov
mov
push
push
add
pushf
and
cwtl
inc
inc
adc
pop
adc
inc
dec
xchg
fisubrs
dec
cmp
xchg
repz
sbb
ljmp
mov
lods
fcoms
pop
and
push
insl
cwtl
adc
shrl
fisttps
shl
push
pusha
mov
jmp
jbe
pusha
pop
std
fcmovu
sub
push
push
jecxz
jge
mov
inc
push
inc
lahf
xchg
cmc
push
mov
clc
insl
xchg
shlb
aad
xchg
outsb
fldcw
lret
dec
es
push
cmp
repnz
sbb
daa
insb
push
push
mov
rol
inc
pop
dec
test
and
lret
stc
mov
xchg
bound
fmul
test
push
add
push
xor
hlt
pop
ds
mov
stos
jnp
cmp
loopne
xor
sub
in
lods
xchg
mov
or
ljmp
cmp
popf
mov
pushf
scas
or
ds
in
sbb
xchg
cmpsl
je
in
add
or
pop
sbbb
outsl
test
fsts
ss
pop
push
add
cmpsl
sti
lods
loopne
movsl
lea
bound
dec
lea
insl
sbb
loopne
push
orb
and
mov
fdivs
orb
or
sub
pop
jmp
cmpsl
mov
xchg
inc
push
jne
iret
sbb
cmp
imul
mov
sub
inc
repnz
or
ss
scas
pop
repz
adc
fcomip
and
sub
cs
jge
jbe
imul
pop
mov
and
jg
adcb
addr16
add
xchg
insb
push
push
cmpsl
and
lcall
fnstcw
pusha
in
loopne
add
inc
mov
lods
adc
outsl
sahf
add
or
dec
or
jp
fisubrl
mov
cmp
or
out
mov
push
xor
repz
pusha
sti
testl
std
mov
out
out
aad
sbb
mov
movsb
sub
lock
cmp
lret
loop
dec
jle
les
stos
or
pop
mov
shrl
sub
fldcw
and
xor
lods
pop
adc
mov
shrb
bound
jg
mov
cmpl
xchg
push
xor
shrd
adcb
adc
out
mov
lret
adcl
pusha
mov
add
jle
test
cli
outsl
lods
inc
test
ljmp
push
add
xor
jecxz
leave
bnd
popf
xchg
call
call
mov
or
sbb
dec
dec
subb
sbb
cmp
cmp
xor
push
ss
sbb
rclb
xor
jbe
ja
mov
and
pop
adc
addr16
enter
lock
add
push
pushf
adc
in
xlat
inc
add
inc
mov
xor
pop
repnz
aad
or
setge
adc
xchg
lret
ja
repnz
sbb
cmp
ret
lahf
or
sbb
rcl
pop
inc
sbb
repz
push
cmp
inc
repnz
js
in
sbb
fsubp
ret
fcmovnbe
mov
iret
push
loop
jae
mov
jecxz
xchg
jb
pop
mov
or
inc
mov
pusha
mov
pop
adc
adc
inc
fsubl
inc
sbb
lods
jb
in
icebp
jae
sub
mov
cmpsb
int3
jae
mov
cmpsl
mov
out
push
adc
and
dec
es
fnstenv
push
and
pop
push
aaa
loop
lds
outsl
mov
pop
mov
mov
out
lods
push
sub
inc
inc
fdiv
ja
inc
and
and
sbb
xor
adc
dec
adc
clc
mov
jae
adc
add
xor
int3
test
cmpsl
and
lahf
jo
nop
shrb
bound
sarl
pop
add
divb
adc
por
push
mov
ds
mov
sub
aam
cmp
inc
jp
lret
stc
sub
aad
and
xchg
std
sub
in
repnz
jmp
pusha
fidivrl
xor
int
es
sbbb
cltd
mov
nop
adc
adc
mov
sbb
mov
stos
mov
outsb
fists
fs
mov
mov
sbb
add
xchg
dec
xchg
xchg
loopne
mov
pop
mov
aad
test
push
push
jbe
jge
mov
mov
inc
inc
jbe
pop
mov
inc
loope
cmpb
fwait
pop
and
sub
push
data16
das
call
pop
das
insb
jo
lcall
lahf
jno
xor
daa
sub
fwait
adc
dec
inc
dec
lss
repz
cwtl
pop
cmp
xchg
gs
push
js
jp
cs
pusha
nop
mov
enter
dec
or
mov
lea
add
roll
jg
push
pop
bound
sbbl
das
adc
dec
js
push
adc
pushf
add
mov
mov
jne
sahf
cld
stos
mov
lret
xchg
pop
lcall
scas
cmp
jg
mov
mov
sti
cltd
add
in
lods
mov
pop
xor
loope
add
ds
xorl
pop
adc
hlt
inc
or
pop
cs
inc
insb
scas
xchg
loop
shll
mov
rcr
add
push
jbe
fnsave
push
mov
out
xor
mov
sbb
xchg
filds
sbb
jl
xchg
cmpsl
pop
out
ja
jmp
and
cmc
add
fwait
inc
hlt
lret
lcall
inc
mov
sub
or
out
mov
call
ljmp
aam
out
out
jle
gs
sub
iret
sbb
push
lock
fistps
mov
in
insl
icebp
jge
sub
pop
or
repnz
mov
xor
jae
mov
test
jecxz
data16
int3
mov
pop
lcall
mov
sub
and
xor
jne
xchg
sbb
xor
jg
and
jnp
repz
cli
inc
jns
cmpsl
gs
xor
jno
cmp
xchg
mov
push
cmp
jg
jge
test
jno
jle
or
mov
pop
xchg
je
repnz
cld
and
inc
jnp
xor
dec
sub
xchg
push
outsb
ja
cld
std
iret
out
inc
jnp
jns
fnstenv
add
lods
push
hlt
cmpsb
pop
test
jecxz
push
divb
loope
jge
push
and
jae
jae
std
mov
loop
mov
adc
xchg
jp
add
out
clc
add
and
sub
imul
sbb
out
sbb
imul
cmp
push
das
outsl
push
jl
aaa
push
mov
cmpsl
sbb
idivb
test
jle
mulb
xchg
ds
dec
ja
pop
inc
add
inc
cwtl
push
adc
sub
les
pop
scas
shlb
mov
repnz
in
push
out
popa
aaa
lret
inc
push
stos
mov
daa
mov
xlat
or
add
lcall
incb
out
sub
pop
cmp
fcmovnb
push
mov
adc
pop
and
xor
xchg
insl
jg
add
cmp
and
out
ss
adc
sbb
or
in
add
sbb
jb
push
movsb
adc
test
std
mov
out
pop
jp
add
jbe
jno
sbb
movb
andb
sbb
es
pop
rcl
push
or
hlt
jle
or
xlat
mov
sbb
mov
dec
sbb
clc
push
dec
mov
imul
gs
shll
dec
xor
mov
aam
and
xchg
jb
rolb
cmpsb
xorl
pop
push
cli
imul
pop
cmp
xchg
hlt
jle
int3
xchg
mov
adc
sbb
jne
pop
lds
sbb
testb
xchg
xor
mov
push
jmp
and
lret
dec
mov
mov
inc
mov
mov
hlt
in
mov
test
mov
mov
jo
shl
loope
mov
mov
sahf
out
xor
subl
je
dec
xchg
pusha
popa
sub
repnz
push
inc
adc
xchg
mov
mov
xor
mov
call
adc
fisttpll
adc
or
push
xor
jmp
mov
pop
xchg
adc
sti
bound
js
loope
adc
stc
add
cli
je
lock
cmpsl
or
loope
in
insb
xlat
cmp
shrl
push
test
sbb
andb
leave
lea
lods
adc
enter
je
and
push
xchg
mov
lahf
mov
mov
ret
xchg
pop
pop
xchg
push
mov
lahf
add
int3
aad
adc
or
sub
push
cld
xchg
mov
push
cwtl
in
scas
push
mov
lods
mov
mov
imulb
es
loop
mov
xor
aaa
and
and
es
loope
cmpl
dec
add
pop
sti
add
adc
popa
popf
cld
or
jmp
sub
mov
xchg
sarl
sbb
jge
es
pushf
out
clc
and
mov
lahf
lahf
push
inc
testl
je
cli
ss
xchg
call
xor
adc
cld
lods
mov
fdivs
mov
in
or
adc
or
jge
mov
pushf
in
icebp
dec
shrb
mov
rorl
fadds
jb
addr16
and
sbb
aas
stc
jecxz
cmp
jge
int
dec
sarl
or
sbb
sub
pop
dec
inc
movsl
shr
cwtl
mov
xchg
gs
push
push
push
shll
jge
or
or
jo
pop
cmp
je
mov
mov
or
jecxz
xor
jle
fsubrp
in
mov
mov
xchg
fdivr
mov
test
cld
mov
add
test
and
stc
xchg
or
jne
inc
lods
std
gs
lock
xchg
call
gs
orl
int3
add
mov
shlb
std
xor
test
sbb
std
lahf
jne
das
les
in
mov
add
cs
mov
cltd
stos
sub
and
lcall
dec
shll
jb
pop
sbb
lret
scas
jne
int3
jns
mov
xchg
fprem1
pop
ret
aam
sbb
mov
jle
mov
clc
push
psrad
inc
cmp
aaa
in
into
cmpsl
pushf
aaa
lods
and
shrl
or
call
test
push
jb
pusha
ds
sbb
mov
enter
push
out
jmp
mov
repz
add
cmp
jle
subl
jge
xchg
adc
popa
movsb
int
and
mov
std
mov
repnz
xchg
stos
pop
or
or
in
jp
mov
inc
jb
out
xor
push
sbb
pop
leave
ljmp
rorb
imul
push
lret
sub
movsb
xor
repz
pusha
roll
push
inc
cmpsl
fwait
and
xchg
inc
cmpsb
xor
add
mov
andl
dec
and
mov
arpl
xlat
out
andl
fwait
and
sti
aam
xorb
mov
sbb
out
xchg
sub
orl
xchg
dec
jnp
test
mov
cmp
dec
cmp
test
mov
pop
jl
lock
mov
lock
mov
add
and
mov
or
jns
sarl
jle
and
scas
andb
adc
jle
xchg
mov
rclb
mov
cltd
nop
push
inc
jbe
xor
pop
aas
into
and
data16
cmp
insl
cltd
gs
call
mov
out
aam
mov
pusha
xlat
lock
loop
pop
adc
pusha
lcall
popf
add
sbb
xor
xchg
mov
out
xchg
jg
ret
add
add
inc
fsts
or
arpl
jmp
inc
pop
imul
std
addr16
xchg
sub
imul
out
or
cmp
aas
inc
lret
sbb
push
int
sti
sub
leave
push
daa
ret
pop
push
cmp
cli
mov
loopne
shrl
aas
mov
fistps
popf
mov
pop
dec
jl
pop
addb
test
scas
jne
stc
mov
lock
scas
scas
add
jnp
imul
movsl
rorl
mov
fxch
pop
icebp
les
pop
clc
dec
xchg
pop
pushw
add
inc
mov
decb
fdivrs
jmp
xlat
adc
pop
and
push
adc
inc
sysenter
insb
or
fsubr
mov
xor
addr16
bound
sbb
xorl
sahf
arpl
pop
xor
adcl
pop
mov
addb
mov
icebp
cmp
jbe
mov
int3
adc
int3
jle
dec
inc
gs
jmp
add
stc
inc
or
mov
mov
popf
aad
stos
mov
pusha
mov
lods
ja
mov
mov
pop
sti
jl
jb
pop
hlt
cld
mov
or
dec
je
inc
lods
fcmovu
rorb
fstps
mov
or
mov
inc
cs
dec
dec
mov
daa
pop
jmp
push
aam
mov
push
fldenv
push
addr16
mov
ss
sbbb
and
jg
dec
and
dec
sbb
fidivrs
icebp
ljmp
pop
repnz
call
rcr
xor
pop
jmp
add
sub
mov
and
pop
mov
jb
orl
pop
xor
test
addr16
adc
pop
jg
scas
and
les
jo
mov
fstps
cld
adc
enter
push
dec
cs
faddl
jge
test
test
sbb
and
jmp
loop
pop
jns
cmp
jmp
dec
mov
inc
inc
mov
xlat
and
or
cmp
subb
push
pop
pop
lcall
pop
packssdw
ljmp
xor
fninit
xchg
inc
das
outsb
aad
mov
and
xchg
push
out
stos
and
xchg
scas
add
repz
xor
sub
jns
outsl
jnp
mov
add
push
mov
call
lock
mov
div
sub
jecxz
xlat
mov
push
jnp
jecxz
test
out
stc
sti
fcomps
rcl
andl
fbld
cmc
xchg
aam
push
loop
cmp
jne
jnp
fists
mov
xchg
dec
daa
iret
mov
cmp
and
sbb
dec
mov
jo
js
in
push
in
push
xlat
dec
jns
or
aaa
xchg
lods
jmp
adc
xor
and
out
nop
fisubl
mov
js
mov
cli
mov
cmpsb
mov
xor
dec
mov
mov
jo
rcrb
push
ret
aad
xchg
icebp
sub
jg
push
jns
aad
dec
je
cmp
sbb
cltd
jmp
rolb
scas
loope
in
hlt
aad
scas
cmc
fcmovb
inc
mov
popa
test
push
ficomps
mov
cmp
pushf
sbb
mov
jge
test
pop
lret
mov
icebp
sbb
insb
aas
stos
or
dec
mov
fsubr
fsubr
lahf
inc
rcll
mov
sarb
xchg
and
imul
pop
repnz
movsl
cs
mov
sbb
idivl
sbb
add
sbb
fcmovnbe
loop
pop
xlat
mov
cmc
in
pop
test
push
jle
mov
dec
arpl
addl
daa
aaa
in
int
lds
shlb
imul
inc
jae
sbbb
xchg
pop
cmp
popa
ficompl
push
stos
jmp
dec
scas
ja
cmc
bound
mov
cmp
and
push
outsl
mov
lret
jl
icebp
and
cmp
pop
clc
jb
cmpl
sub
lret
lcall
jmp
ja
bound
adc
fldcw
or
ljmp
mov
cmp
shrb
or
in
fsin
jb
fimuls
add
dec
in
mov
daa
cwtl
mull
or
and
ret
sbb
xchg
jge
adc
xchg
js
repz
mov
push
xor
in
cmpsb
inc
sub
pop
and
add
out
push
jecxz
sub
sahf
push
cmp
popf
push
pop
jmp
inc
sbb
lods
mov
cmp
stos
jno
scas
dec
mov
mov
lea
call
mull
cmpsb
aaa
xlat
inc
and
sahf
loope
nop
mov
mov
shrb
add
mov
push
jno
push
inc
xlat
sti
inc
incb
repnz
std
sbb
push
cmp
inc
ffreep
pushf
sbb
fimuls
xlat
rcll
push
int3
aam
mov
cmp
imulb
adc
fistpll
or
push
insb
mov
push
xor
push
jmp
shlb
fisttpll
add
outsl
pushf
call
idiv
fadds
mov
sbb
int
pop
fidivrs
fdivrp
xor
inc
lret
ja
mov
push
in
xchg
inc
cs
shrl
or
cmp
cwtl
icebp
mov
or
mov
mov
cmp
push
pop
sub
mov
jmp
lea
addr16
sahf
xlat
pushf
mul
adc
pop
lods
mov
dec
mov
xor
out
in
test
xchg
fidivl
pop
or
dec
arpl
xor
mov
and
sub
enter
test
fisubrs
mov
mov
push
add
xchg
and
rcr
mov
xchg
imul
mov
xchg
pushf
fisttpll
out
mov
ss
rolb
sti
and
ja
lods
or
dec
push
or
aad
mov
sti
push
mov
sub
ret
shll
mov
shr
xor
and
and
add
lret
push
in
in
cmp
cmp
jbe
loopne
pop
rcl
or
loopne
sbb
jnp
push
mov
jae
outsb
mov
iret
jle
icebp
jecxz
pop
push
js
iret
cmc
dec
jg
sub
mov
rorl
cmpb
lock
lds
mov
xchg
cld
out
cmp
outsl
dec
outsb
push
push
popf
jge
xchg
divb
lea
sbb
pop
mov
mov
cmp
xor
adc
outsl
lods
sarl
mov
xlat
jb
push
inc
aas
bound
add
lahf
addb
cmpsl
fmuls
shrb
push
popa
arpl
xchg
sub
jmp
push
dec
out
jg
add
mov
jl
mov
cltd
sub
pop
jecxz
pop
out
adc
mov
mov
and
dec
xor
push
mov
sbb
mov
jmp
aam
inc
hlt
mov
aas
sub
test
xor
xchg
sub
ficomps
mov
sbb
jp
pop
sbb
xor
cmpsl
fisttpll
add
sbbl
pop
jo
jp
push
out
add
adc
mov
cltd
pop
dec
aam
scas
xorl
jno
test
stos
stc
jo
es
pop
stc
inc
mov
cmp
pop
sub
std
incb
push
inc
dec
int3
add
mov
xor
ds
cmp
pop
lcall
shlb
outsl
shrl
and
mov
inc
inc
rcrb
testl
insb
cmpb
rcrl
je
jb
push
pop
xchg
xor
jecxz
push
shlb
sbb
pushf
inc
out
xchg
inc
push
enter
mov
push
mov
adc
addb
daa
cmp
or
ljmp
adc
pop
add
fistl
enter
xchg
pop
adc
mov
pop
xchg
push
and
jg
cmp
dec
mov
inc
lods
add
mov
push
and
stos
or
popa
dec
stos
add
dec
mov
push
jle
loopne
jae
mov
and
scas
and
cmp
push
movsb
sub
cmovbe
hlt
in
lahf
push
pop
lea
cmp
xchg
aam
gs
mov
stos
xchg
fcomi
jnp
fdivl
xor
mov
dec
out
cs
xchg
inc
pop
dec
pushf
pop
pusha
lock
clc
mov
lea
fsubrp
cmpsb
sbb
fimull
sub
mov
jne
shlb
pop
add
sbb
out
faddl
dec
adc
jns
add
inc
pusha
loop
mov
cmp
and
jp
testb
scas
xchg
scas
subl
lret
test
sub
mov
fcmovbe
xor
push
xor
add
out
in
mov
sub
loop
dec
fstpl
pop
add
cmp
movsb
jno
loopne
xchg
lahf
ret
inc
or
dec
sub
rorl
jno
lea
pop
dec
lods
and
mov
out
arpl
loop
pop
in
outsb
sti
daa
imul
jbe
scas
lcall
xchg
cwtl
add
mov
js
mov
inc
xor
cmp
xor
push
jno
or
scas
hlt
add
xor
divl
and
insb
inc
mov
clc
pop
jnp
sbb
test
sarl
imul
xor
inc
add
sbb
fldenv
movsb
pop
sbb
fisubrs
andb
push
movsl
or
xor
ret
fcoml
xchg
inc
sahf
mov
aam
add
mov
cmp
ret
jbe
xchg
dec
cmc
mov
adc
scas
out
xchg
or
cwtl
stos
leave
ja
push
push
fisubrl
add
push
mov
adc
xchg
cmp
sarl
inc
mov
pushf
sbb
insb
mov
dec
cmpsl
jno
mov
ja
clc
xchg
mov
pop
hlt
leave
jle
push
dec
cmp
or
sub
mov
data16
push
mov
data16
push
xor
mov
cmp
sub
xchg
shrl
mov
outsl
or
mov
sub
out
stc
nop
mov
add
scas
setle
out
xor
movsl
xor
enter
jae
lahf
mov
or
cmpsb
xorl
lods
in
push
push
repnz
pushl
outsl
mov
sub
shll
mov
xor
xor
xchg
mov
adc
negl
leave
dec
nop
mov
mov
or
jmp
data16
add
std
add
int
popf
nop
xchg
push
or
pop
adc
sub
outsb
int
pop
jmp
jae
push
xchg
xor
mov
lahf
jne
int
insb
mov
add
jp
cli
mov
add
xor
lea
es
mov
lret
into
in
add
lds
out
aam
ljmp
and
test
scas
inc
xchg
insl
pop
jne
addr16
iret
or
jne
lcall
cltd
imul
loop
jno
cltd
inc
sbb
les
adc
inc
or
mov
imul
scas
sbb
cmp
add
push
pop
lods
aad
daa
cmp
xchg
in
data16
es
mov
rcrb
sub
movsl
lret
dec
stos
shll
leave
sub
leave
add
xchg
dec
stos
dec
or
mov
aam
mov
push
icebp
add
inc
push
adc
pop
jb
push
pop
or
mov
jo
sbb
cmp
int3
mov
xor
and
in
sbb
stos
sbb
or
or
add
jno
hlt
push
adc
mov
jle
das
flds
inc
adc
into
fstps
mov
sub
dec
dec
mov
addb
or
sbb
bound
mov
fldl
xchg
xchg
lea
movsl
dec
xor
inc
aam
test
push
push
cs
stc
mov
cli
adc
lea
fdivrs
fdivr
dec
pusha
ja
stos
mov
repz
shrb
data16
xor
scas
jne
xor
push
jl
fnstsw
mov
enter
fsubl
in
adc
nop
in
mov
push
cmpsb
xchg
adc
les
or
and
in
inc
push
outsb
sub
push
daa
stc
jae
nop
adc
xchg
lcall
and
inc
in
or
fabs
sub
jnp
push
sbb
int
outsb
je
push
jg
cmp
lcall
ret
mov
pop
in
out
das
fadds
lret
stc
fidivrs
fbld
inc
mov
jp
mov
scas
jecxz
push
das
test
pop
adc
test
sub
push
jno
xchg
movd
pop
ja
cmc
push
push
xchg
out
adc
fs
xchg
cmp
and
sub
xchg
rcrb
pop
out
mov
fadds
push
je
jne
xor
in
fwait
cmp
ja
pop
mov
cmp
shll
aas
mov
xor
xor
lods
fdivrs
cmp
punpckhwd
push
in
mov
xchg
mov
xor
insb
out
sbbb
inc
pop
mov
nop
cli
lods
inc
subl
pop
mov
jecxz
mov
mov
push
adc
jnp
xchg
add
mov
xor
xlat
mov
aad
cmp
fld
lahf
xor
mov
xlat
pop
lret
dec
sub
fsts
adc
cmpsl
mov
sub
stc
rolb
fsubr
jno
cltd
ficompl
jle
ljmp
cmp
or
jle
pop
xchg
and
or
cld
xchg
dec
jmpw
or
jp
punpckhwd
inc
jns
xchg
aas
xchg
xor
sti
loop
repz
dec
pushw
sub
out
lret
stos
mov
mov
cltd
push
icebp
jle
dec
push
nop
cli
xchg
mov
jl
movsl
rolb
call
outsb
int3
xchg
std
outsl
mov
and
pop
xor
neg
cmp
mov
in
mov
mov
mov
jns
mov
lods
adc
or
js
inc
repnz
mov
lretw
inc
loope
pop
pop
imul
dec
outsl
push
add
pop
push
nop
test
out
clc
scas
or
sub
xchg
das
cld
jp
bound
ret
lock
fwait
jbe
in
fsubp
or
xor
pop
add
pop
lcall
out
iret
mov
repnz
inc
enter
jns
cltd
pop
ret
outsl
or
dec
mov
arpl
mov
sbb
push
out
mov
dec
lea
out
adc
mov
inc
inc
dec
mov
push
lock
mov
leave
dec
jae
cmc
sti
lods
xor
mov
jmp
enter
pusha
out
inc
mov
aad
mov
in
mov
pop
out
adc
cltd
and
jb
ret
jp
iret
xchg
jo
add
iret
shll
ret
mov
or
movsl
jp
ret
cmp
dec
cmp
imul
sbb
xchg
jp
ljmp
ss
cmpsb
adc
jmp
outsb
shll
je
xchg
stos
fld
sub
xchg
test
test
mov
hlt
scas
addb
jge
addl
dec
mov
mov
ds
or
pop
aaa
mov
pop
jecxz
or
pop
and
and
jle
mov
stos
xchg
xorl
mov
mov
in
in
and
mov
aaa
adc
mov
jecxz
test
jmp
mov
nop
stos
fsubs
sub
es
pop
repz
xchg
rorl
mov
pusha
in
lret
push
cmpsb
je
push
inc
mov
movsl
jo
mov
fisttps
mov
movsl
loopne
jbe
sub
pop
insb
xchg
push
stc
ljmp
inc
andl
jge
pop
out
inc
mov
fnstsw
cmp
jbe
test
fnstenv
jae
cmc
aaa
mov
cmp
out
sub
and
lods
mov
in
addr16
sub
jp
xor
gs
sahf
pop
inc
sbb
aad
je
and
xor
xchg
jno
and
inc
int
mull
mov
hlt
or
jle
stos
lods
sarl
cmp
or
idivb
cld
arpl
outsl
int3
push
stos
out
js
adc
pop
movsl
inc
push
fucomi
mov
jg
push
xchg
cmp
jns
jle
movsl
aam
lea
fisttpl
sub
mov
fistpl
adc
pop
das
clc
int3
inc
leave
addb
mov
loop
aad
push
stc
pop
loopne
std
sub
xchg
dec
imul
fldt
or
orb
je
mov
xchg
mov
data16
scas
lods
xchg
cmp
push
adc
or
xchg
mov
jb
bound
xor
jo
sahf
inc
outsb
bound
mov
in
loopne
xchg
insl
inc
jg
push
mov
xor
dec
scas
mov
in
shrl
add
mov
roll
mov
leave
sbb
inc
jecxz
loope
mov
loope
data16
cmc
sbb
xchg
mov
cmp
ljmp
inc
lcall
xlat
out
aam
xor
or
dec
movsl
mov
inc
push
pop
jg
loop
and
aaa
xchg
std
xor
jae
push
inc
mov
and
mov
xor
loop
xchg
outsl
in
jae
rcrl
pop
out
add
int
add
loopne
and
xchg
addr16
test
in
mov
lods
aas
int
or
out
hlt
pop
or
and
mov
add
aaa
mov
es
dec
arpl
mov
lods
mov
xchg
push
out
lds
call
pop
mov
cmpsl
pop
sub
pop
fwait
dec
mov
fwait
jbe
fdivrl
flds
mov
pop
roll
ss
add
imul
lds
loope
push
jne
sbb
aaa
jo
push
add
rcrl
ljmp
daa
call
scas
mov
call
in
cs
aad
pop
add
or
js
cwtl
and
push
jl
mov
dec
movsl
sub
jo
lock
jnp
aam
jne
add
sbb
lret
push
out
cmp
xchg
push
daa
stc
sub
aad
mov
mov
insb
jno
mov
sbb
in
sbb
mov
lods
ret
fimuls
and
scas
cmp
xor
sub
jnp
xchg
add
insl
out
cltd
cmc
push
lahf
int3
xchg
sbb
aas
insl
js
test
shlb
dec
inc
mov
test
sbb
mov
stc
iret
or
das
add
mov
push
mov
jl
flds
inc
mov
add
inc
push
xchg
out
xorl
push
inc
cltd
jmp
rcrb
aaa
fsubrl
aam
mov
test
xchg
lds
mov
inc
aas
lds
xor
and
cmpsb
int3
jb
push
and
bound
es
lods
sar
adc
adc
std
das
mov
movsb
xor
mov
jno
dec
push
sub
lods
rcr
jge
fs
lahf
shl
mov
mov
pop
sahf
xor
sti
pop
fmuls
or
not
cld
push
inc
ret
imull
out
and
loop
sub
mov
or
insl
push
inc
and
lahf
enter
pop
pop
ret
cld
cmp
push
roll
lods
push
and
mov
js
inc
ds
adc
adc
add
pop
and
dec
add
nop
inc
movsb
push
adc
xchg
popf
push
cld
push
sub
sahf
fiaddl
xor
jmp
pop
cltd
xchg
dec
enter
mov
mov
and
popa
cmp
cmp
xchg
clc
mov
pop
sbb
mov
cmpsb
fdivs
pop
dec
sbb
repnz
mov
scas
rorl
popa
jle
lods
mov
cmp
push
pop
pop
jns
orb
or
ljmp
mov
je
std
cmp
pop
pop
mov
pop
mov
pop
push
ljmp
sbb
pusha
shlb
imul
ret
jl
adc
adc
mov
pop
sarb
xchg
inc
loopne
rcrb
roll
adc
movsl
fwait
push
js
rclb
data16
cmp
mov
ror
arpl
mov
add
fdiv
xchg
sub
inc
hlt
fcmovnu
add
aad
ja
movsb
and
xchg
mov
add
xchg
and
inc
sbb
add
pusha
xor
nop
sahf
popa
lds
jns
jmp
lods
and
out
sarl
push
push
or
outsl
dec
lcall
repnz
iret
jno
popa
dec
jb
xor
test
push
stos
pop
sbb
aam
fstps
insb
lahf
test
je
xor
call
and
push
mov
fistpll
jae
xchg
inc
push
fs
stos
pop
pop
insl
cmp
aaa
loope
loopne
in
jnp
jbe
mov
je
out
sti
loop
jb
xor
fcmovnu
mul
popf
add
xor
insb
repnz
or
mov
ret
call
adc
push
mov
js
push
xor
addr16
mov
jg
mov
cwtl
cmp
add
fwait
fs
pop
push
mov
cli
push
ss
mov
ficomps
mov
jle
sahf
push
xor
repnz
sub
mov
adc
jle
pop
mov
pusha
mov
mov
std
fldln2
lods
scas
mov
jne
pop
push
and
addr16
andb
mov
mov
loopne
pop
hlt
lods
sbbb
outsl
and
mov
test
cli
test
pop
mov
adc
ret
and
and
xlat
dec
sbb
push
mov
adc
adc
or
pushw
int3
pop
xor
lods
xor
adc
sub
xor
mov
retw
adc
mov
mov
out
repz
dec
cmp
sahf
cmc
push
xchg
das
cmp
daa
lds
iret
insl
or
add
rolb
mov
mov
in
ljmp
mov
mov
fistps
cltd
xchg
cmc
xchg
pop
add
das
mov
push
ficomps
sub
or
jb
lret
rclb
inc
fcompl
jns
aas
movsl
pop
mov
add
dec
clc
xchg
mov
out
adc
push
stos
fisubl
and
in
adc
mov
adc
xor
pop
and
imul
xor
loop
inc
xor
stc
and
xchg
shlb
data16
loop
or
aam
movsb
add
sub
mov
subl
test
pop
push
cmpsl
add
mov
in
cmpsl
stc
loope
mov
and
in
rcll
scas
jle
add
push
stos
pop
xchg
addb
cmp
sbb
xchg
js
mov
and
mov
lods
mov
pop
fwait
or
pop
jne
push
lods
out
insl
pushf
xor
pop
pusha
jo
xor
xor
cmpsb
cmp
pop
jp
ds
mov
dec
jae
fnstcw
xchg
jno
jo
mov
into
or
jo
mov
or
ret
fldl
sbb
inc
fnstenv
xchg
jp
pop
loopne
imul
repnz
jne
mov
mov
xor
lock
adc
xlat
ficoml
cli
jg
sub
dec
push
jnp
jno
jne
sub
sahf
add
adc
loope
setno
sub
sub
xor
push
loopne
lds
and
in
adc
push
sahf
shrl
decl
lock
and
lret
xor
push
ret
inc
push
adc
cmp
repnz
add
mov
inc
call
jge
mov
mov
out
dec
and
ret
mov
sbbb
mov
pusha
enter
ret
xchg
jecxz
fmull
lret
jnp
xor
cmp
sub
push
in
test
jle
lret
push
cmpsl
jle
out
pop
sub
sub
xchg
addl
xchg
lret
stos
mov
dec
in
push
aas
fcoml
mov
mov
lret
mov
or
fdivrp
mov
aas
in
out
mov
pop
pushf
sub
das
je
mull
mov
or
clc
lods
pop
loop
icebp
sbb
stos
cmp
push
xchg
push
push
and
rol
dec
jb
pop
and
mov
mov
sbb
addb
addl
ss
pop
sbb
cmp
push
aas
xchg
cs
pop
xor
jmp
dec
flds
inc
dec
and
push
jno
jo
or
push
inc
movsl
stos
lock
or
lods
adc
inc
loop
outsl
ficoml
pop
pop
cmp
pop
ss
cmp
cmp
xchg
fisubl
lea
movsl
cmp
push
stc
push
outsl
mov
lods
pop
lret
jb
mov
cmp
add
xchg
and
bound
iret
sbb
out
mov
jns
test
mov
aad
jo
lock
out
ja
jne
test
sar
lret
lret
xor
mov
dec
add
and
fisubl
or
pop
jne
adc
xchg
stc
push
or
sub
test
aad
xchg
add
dec
dec
rcrb
int
dec
sarl
push
cmpsl
mov
leave
jmp
xchg
outsl
mov
hlt
ret
imul
decb
fs
iretw
xor
sbb
sbb
add
jle
in
mov
jne
dec
cmc
push
stc
js
out
xor
aaa
push
cli
or
imul
popa
aam
pop
cmp
cmp
sbb
push
fs
imulb
inc
mov
or
mov
in
adc
xchg
hlt
pop
div
mov
adc
add
mov
gs
jne
lret
xchg
notl
cli
aad
stc
cmp
push
gs
xchg
pop
in
lahf
dec
sub
cmc
xlat
in
int
cltd
cmc
fimuls
ret
xor
mov
out
sub
insb
jo
xchg
adc
add
pop
rcrb
mov
les
sar
cmp
add
aam
in
in
daa
cmp
mov
aam
rcrl
and
jne
stc
pop
pmulhw
dec
test
cwtl
mov
cmp
push
push
lcall
data16
xchg
fisubrl
pop
les
leave
bound
scas
jl
and
ret
adc
lret
call
xor
xor
jp
les
stos
mov
icebp
ret
sbb
cli
push
jo
dec
jl
inc
cmp
sbb
leave
cmp
jne
push
cltd
dec
iret
xor
in
xchg
dec
jge
insb
in
aaa
mov
dec
out
into
movsl
adc
mov
call
pop
mov
and
sbb
add
mov
mul
push
mov
sbb
jae
das
add
hlt
lret
sub
int
cmp
cmp
out
inc
push
xchg
fcmovne
jmp
fisubs
add
mov
outsl
adc
shl
and
addl
push
rcrb
push
pop
xlat
out
xchg
mov
mov
add
or
add
adc
sbb
adc
pop
xchg
punpckhbw
jb
adc
pop
push
add
inc
inc
inc
out
jb
or
pop
adc
shll
fildl
stos
fildl
icebp
cmp
enter
js
in
xor
jbe
jl
insl
inc
push
sub
inc
pop
ja
pop
movl
les
dec
and
shlb
xchg
popa
mov
xchg
xchg
movsl
xor
push
mov
cmp
xchg
pushf
xor
ljmp
mov
cmp
lds
xchg
fildl
clc
or
jno
es
das
enter
push
push
xchg
aaa
mov
movq
mov
cmp
mov
movl
mov
adc
xlat
jmp
loope
jl
lret
movsl
test
scas
shl
aas
xchg
stos
push
push
out
mov
add
push
mov
in
sar
push
adc
ljmp
inc
adc
loop
lock
mov
inc
dec
xor
sti
xor
bound
inc
add
xchg
cvtps2pd
jecxz
pmaddwd
sub
test
add
dec
pop
out
imull
insb
icebp
fdiv
or
push
stos
mov
fimuls
lcall
lock
shlb
sub
outsl
mov
lcall
jge
cld
pusha
xchg
pop
dec
imul
lods
punpcklbw
add
mov
les
clc
imul
mov
hlt
rclb
cmp
mov
pop
sub
lret
or
adc
sbbb
add
dec
jge
lahf
jne
jl
cmpsb
inc
dec
or
mov
or
aaa
pop
mov
pop
xor
arpl
jmp
cmp
movsl
sti
dec
jb
adcb
fsubp
mov
xchg
dec
pop
xchg
sbb
jns
imul
lods
mov
daa
mov
ret
lcall
mov
push
mov
push
and
scas
jl
mov
pop
xor
sbb
lahf
imul
or
aad
out
inc
mov
out
dec
xchg
test
cmc
jge
inc
sarb
sbb
adc
pop
cltd
not
jp
push
lods
adc
sub
rclb
insb
in
pop
xchg
mov
cltd
xchg
cmc
pop
aas
mov
xchg
cmp
sbb
lods
iret
shrb
xchg
pop
pop
es
fidivrl
and
in
test
loop
ret
lret
dec
jge
ficoms
jb
in
mov
jbe
push
pop
and
mov
outsl
sub
test
in
pop
inc
popf
sub
hlt
push
xchg
sbb
and
cli
push
cmpb
fimull
sbb
sbb
jmp
cmp
pop
sarl
xor
push
out
popl
jb
jbe
roll
call
push
mov
imul
inc
bound
jmp
xchg
jle
xchg
add
cmp
lret
pop
dec
enter
loopne
mov
shl
inc
mov
aam
imull
lret
mov
push
jmp
enter
lahf
xchg
mov
mov
add
sub
sbb
xchg
movsb
mov
push
pop
loopne
call
push
xchg
hlt
jbe
pop
xor
cmpsl
icebp
inc
lock
inc
outsb
pop
ljmp
arpl
and
mov
dec
mov
xor
push
xor
cmpsb
mov
pop
inc
dec
lds
jecxz
jmp
fnstcw
negl
rcl
jle
dec
mov
out
mov
jmp
ret
fsubrp
fs
cmp
lods
mov
push
mov
inc
sahf
mov
arpl
mov
rcrb
pop
add
cmp
fcomp
std
lock
xchg
sbb
scas
and
test
cmp
pop
push
shll
ffreep
call
rorl
add
xchg
jo
pop
nop
mov
mov
dec
mov
cs
lahf
xor
cmpsl
and
mov
lock
loop
int3
gs
dec
imul
rorl
imul
xlat
pop
leave
cs
pop
js
dec
adc
push
lock
cmpb
pop
cmp
xchg
mov
jnp
or
fwait
xchg
or
jae
pop
call
xchg
fiaddl
inc
push
int
and
xchg
mov
test
inc
push
push
and
xor
sub
fcmovu
sbb
jb
pop
out
roll
dec
or
clc
push
fwait
andb
pusha
shll
iret
dec
mov
scas
das
push
pop
out
inc
fnsave
ret
sar
imul
and
xchg
inc
sbb
fdivrs
nop
je
jg,pt
sub
jno
xchg
rorb
jp
push
es
mov
sub
popf
push
cmp
mov
mov
xchg
sbb
adc
gs
cmp
outsl
test
loopne
testb
inc
scas
cmp
jno
and
push
or
mov
jno
push
in
lret
dec
mov
bound
push
mov
aaa
orl
loope
repz
negb
iret
inc
xchg
inc
or
pop
out
in
lret
roll
jns
dec
popa
sub
dec
mov
cltd
mov
mov
ljmp
imull
sbb
cmc
jne
jp
movl
dec
clc
fsts
push
jge
push
cmp
nop
pop
adc
sub
orb
stos
mov
fdivl
mov
mov
stc
jns
out
pop
and
inc
jno
sub
out
cmp
add
xchg
outsb
pusha
or
in
jb
into
mov
pop
in
rorl
mov
dec
movsb
fucomi
shl
sub
je
inc
imul
push
out
cmp
mov
jg
ds
jge
xchg
pop
dec
push
hlt
xchg
push
push
testl
mov
cmpl
mov
or
enter
push
addr16
xchg
lea
outsb
mov
shlb
test
adc
lea
jae
je
jne
lret
pop
pop
pop
rcll
test
shrb
or
ror
adc
in
mov
lods
push
pop
xchg
mov
adc
pusha
xor
mov
shll
imul
aad
ljmp
pop
mov
mov
dec
sbb
data16
and
sar
lahf
cmp
popa
andb
sbb
push
push
xchg
inc
in
lahf
adc
inc
or
ds
dec
sbb
mov
shl
adc
push
mov
fadd
ret
mov
fsubs
cld
jmp
mov
mov
mov
fcompl
xchg
sbb
xchg
pop
arpl
addr16
testl
mov
push
dec
divl
inc
jmp
into
mov
cltd
popf
in
ljmp
imul
mov
dec
jecxz
imul
fcompl
or
mov
add
mov
mov
and
mov
jbe
orb
movsb
decb
insb
lahf
scas
push
loop
push
mov
xchg
mov
icebp
and
pop
add
push
nop
fstps
sbb
cwtl
inc
and
enter
bsr
sbb
push
adc
repz
mov
gs
loope
xor
mov
ss
jp
cmpsl
mov
inc
pop
fsubl
or
stos
adc
rcll
shll
inc
fiadds
xlat
and
daa
and
jecxz
scas
and
icebp
pop
sbb
inc
mov
rorl
fisttps
xor
test
adc
push
addr16
mov
icebp
movsb
cld
push
in
ret
and
fmull
xor
fldenv
loop
sub
mov
inc
jmp
mov
out
mov
xchg
pop
cmc
stos
subl
push
cmpsb
xor
add
ja
mov
outsl
bound
pop
pop
mov
cmp
repnz
adc
lret
insl
push
popa
lods
aas
pop
adc
xchg
pop
cmp
pop
and
jp
repnz
cmc
and
mov
jo
sbb
out
or
test
out
sub
or
pop
fadds
mov
sahf
cmpsb
inc
movsb
cmp
inc
mov
mov
mov
je
and
mov
test
mov
fisttps
push
mov
push
jo
pusha
aas
imul
inc
and
sub
int3
gs
lret
or
pop
pop
jg
jne
mov
xchg
into
mov
loopne
movl
lahf
push
push
mov
outsl
test
into
loop
push
sub
and
push
fucomp
decl
sub
ss
mov
push
outsb
movsl
idiv
mov
pop
arpl
testb
repnz
jbe
or
insb
loopne
iret
push
mov
adc
sbb
rclb
pop
ret
ds
jo
test
dec
cld
clc
test
mov
jmp
sub
inc
sub
pop
lds
int
add
pop
jmp
push
rolb
inc
mov
pushf
outsb
pop
dec
arpl
sbb
jno
ja
push
cmpsl
inc
ret
lods
sub
dec
addr16
xchg
loopne
pop
pop
push
repz
pop
mov
mov
mov
jp
push
lahf
add
ficompl
pop
in
cmc
adc
cmp
mov
sbb
adc
inc
sbb
xchg
or
mov
mov
repz
xor
mov
outsb
and
sbb
push
pop
dec
test
pop
jbe
mov
dec
sub
loopne
jge
mov
mov
jg
push
test
aad
push
mov
sbb
test
sbb
jge
dec
or
lcall
inc
out
test
sbb
push
and
adc
scas
adc
push
je
mov
loope
lret
gs
push
mov
hlt
mov
xlat
pop
pop
cmp
adc
jns
add
test
pop
sub
or
les
aaa
add
mov
cmp
aaa
xor
adc
adcb
aaa
rcrb
insl
out
add
ds
jo
out
fsubrl
mov
shlb
add
or
lcall
pusha
mov
pop
add
fs
mov
loope
sub
dec
mov
es
in
and
sbb
out
sti
sbb
mov
mov
jbe
mov
mov
clc
in
movsl
inc
pop
xchg
aaa
xchg
fildl
flds
es
cli
and
jb
scas
xlat
pop
mov
or
mov
mov
inc
push
inc
cs
setp
mov
pusha
mov
int
cmp
sub
sbb
mov
rorl
jg
insb
sbb
add
push
jmp
stos
repnz
ss
push
scas
jb
int3
stc
lea
test
mov
std
sub
jmp
jmp
aam
lds
add
mov
leave
enter
inc
movsb
xchg
cmp
sbb
cs
dec
inc
sbb
ret
cmp
push
inc
stc
fstpt
dec
cltd
inc
shll
mulb
fcomps
mov
push
mov
js
push
test
mov
loope
dec
or
lret
test
mov
inc
sbb
je
push
je
xchg
add
notl
xor
fcoml
add
sub
and
inc
jle
stc
inc
pop
adc
inc
popf
sub
out
xchg
push
in
add
xchg
xor
add
gs
add
push
test
cmp
xor
sbb
pop
ret
imul
sub
push
mov
enter
out
in
cmpsl
or
mov
and
dec
and
out
mov
pop
into
jbe
adc
push
xchg
xchg
mov
add
in
into
hlt
push
std
dec
mov
inc
aad
fs
jne
test
xchg
jbe
and
scas
adcl
cmp
pusha
pop
pop
mov
xor
mov
push
xor
mov
loopne
out
outsb
stos
mov
push
fimuls
ds
push
xchg
push
outsb
stc
mov
fiaddl
push
push
and
pop
pop
dec
into
fsubrs
cmpsb
mov
mov
dec
cwtl
aad
mov
ret
lret
andl
cmp
in
pop
add
push
xchg
cmp
jno
sbb
xor
test
or
xlat
mov
xchg
in
cmp
ret
lea
ret
lcall
jecxz
nop
negb
cmp
cltd
push
cmpsb
pop
jnp
lret
clc
push
dec
and
adc
jl
jne
rcrb
sbb
sub
jmp
dec
fmull
cwtl
cmp
xorl
and
decb
sahf
adc
cmp
xor
push
sub
jg
and
es
sbb
and
xchg
push
lret
xchg
inc
dec
pop
mov
inc
insl
test
imul
sub
xor
and
push
xchg
and
adc
or
push
xor
sub
or
lahf
bound
das
ret
push
paddusb
loopne
mov
dec
push
rorb
rcrb
mov
movsb
push
dec
mov
sbb
nopl
lods
insb
jg
je
sbb
dec
jbe
jnp
pushf
popa
jns
or
push
test
fwait
cmp
add
hlt
jns
in
or
cli
std
mov
dec
fcmovnbe
sahf
adc
iret
cmp
mov
cs
outsl
faddp
sti
fistpl
ret
out
jg
clc
xchg
mov
sbb
cmpsl
inc
stos
js
cwtl
fcom
fisubl
mov
lea
test
test
jmp
or
sbb
push
mov
pop
mov
lock
push
rolb
dec
test
imul
gs
mov
aad
sbb
ss
lods
call
inc
js
jg
movntq
pop
test
ret
or
adcl
mov
imul
rclb
scas
mov
rcr
loop
xor
sub
flds
jg
lret
jecxz
sbb
pop
xchg
sti
insb
dec
les
addb
and
push
aaa
inc
shll
sub
xor
inc
std
sbb
rorb
popa
shll
fwait
lods
cmp
cmp
jae
inc
scas
daa
outsb
movd
jbe
mov
jno
and
out
push
out
inc
cmp
or
jae
inc
mov
iret
sub
filds
xchg
xor
jecxz
dec
pop
ret
rorb
popf
test
bound
test
jne
lock
xchg
pop
sahf
test
ret
xlat
fdivr
in
xchg
dec
lock
stos
fisubs
in
pop
adc
les
gs
mov
lds
xchg
iret
sbb
imul
leave
add
inc
dec
pop
in
outsl
lea
inc
rol
xlat
std
movsl
mov
cli
sbbl
int
mov
mov
mov
popf
xchg
push
sub
mov
rcl
dec
sbb
mov
imul
out
cmp
mov
jl
cwtl
and
adc
mov
out
mov
push
jecxz
push
mov
int
popf
lret
leave
add
mov
and
stc
xchg
faddl
pop
pop
dec
xor
mov
shrl
inc
gs
mov
popf
std
sub
int
xchg
push
dec
dec
mov
xor
cmp
cmp
gs
push
pop
into
mov
cli
leave
and
cmp
cmovae
icebp
out
inc
int3
shlb
lds
push
scas
add
inc
test
imul
lea
mov
sbb
jge
pusha
addr16
aam
fstp
mov
mov
addb
out
pop
mov
mov
xchg
je
popf
or
mov
ds
xchg
sbb
jl
xchg
xchg
stc
mov
call
pop
int
add
mov
scas
cmp
pop
insl
sbb
int
loope
hlt
xchg
sub
add
jo
sbb
mov
xchg
sbb
imul
xlat
nop
add
cmp
jg
idivb
xor
cmc
dec
enter
aaa
data16
mov
jecxz
add
fisttps
adc
jecxz
and
cmp
sti
sti
mov
loop
pop
xchg
adc
insb
sbbb
add
lahf
out
ljmp
mov
cmp
jle
mov
insl
in
push
cmp
add
cmpsl
movswl
xor
xor
daa
mov
pop
sub
mov
stc
call
push
add
add
stos
cmpsl
test
mov
out
cmp
or
mov
pop
fistpl
aam
stc
lock
aaa
and
cltd
aas
cmp
sub
aad
jge
push
les
mov
out
adc
jnp
inc
inc
and
push
in
mov
xor
mov
orb
push
pop
sub
in
fsts
cltd
pop
jns
jo
stc
hlt
ljmp
je
into
insl
mov
in
mov
mov
jb
ficoms
stos
add
dec
inc
push
xor
mov
fbld
imul
push
scas
inc
add
pop
into
push
or
test
sbb
sahf
divps
cmpsb
dec
xlat
ds
lret
mov
mov
xchg
js
dec
inc
mov
mov
push
or
mov
add
and
sub
jne
dec
cld
ds
jbe
pop
xor
je
xchg
bts
pusha
pop
mov
pop
push
mov
and
push
outsb
adc
xor
push
lods
xor
jmp
test
sbb
dec
imul
test
mov
mov
das
push
das
imul
dec
jb
or
sub
movsl
loop
stos
adc
cmp
and
mov
sbb
adc
testl
incl
push
cmp
lds
adc
repnz
inc
sub
movsl
jns
ret
pop
mov
mov
lret
xchg
rcr
cs
imul
inc
daa
push
mov
das
dec
imul
inc
sti
stc
loopne
popa
pop
out
pop
test
pusha
sub
jmp
jle
inc
testl
sub
daa
ret
mov
subb
jmp
int
and
sti
enter
dec
cmp
cmp
add
or
unpckhps
int3
push
test
in
jno
mov
adc
sbb
or
jecxz
push
push
or
push
in
pop
and
nop
push
pop
jae
pop
outsl
xchg
stos
out
mov
pop
add
and
std
cmp
add
rclb
addr16
int3
repz
dec
ret
adc
les
leave
xchg
shr
stos
roll
mov
push
sbb
movsb
jb
jbe
jbe
test
sbb
ficoms
cmp
mov
sbb
inc
xchg
pop
push
call
gs
es
repz
test
outsb
jbe
test
out
push
andl
ljmp
jg
fidivs
adc
fsubl
dec
cmp
mov
sub
stc
xor
popa
repnz
sbb
lcall
mov
cmpsl
push
jg
sub
jecxz
mov
hlt
xchg
cmp
in
inc
dec
mov
sub
rorl
inc
popf
push
ret
lret
or
and
mov
rcr
ret
inc
mov
and
imull
inc
or
and
pop
mov
pop
out
out
fnstsw
cmp
or
mov
push
pop
test
addr16
imul
lret
xorb
sti
insb
xor
push
jno
jb
cmp
push
mov
in
outsb
movsb
insl
sub
gs
dec
out
int
fwait
and
pop
fwait
pop
mov
mov
xor
shrb
xchg
popa
xchg
mov
or
lcall
clc
outsl
movsl
roll
fwait
pop
mov
pop
in
call
rolb
negl
sbb
leave
arpl
int3
push
lret
jecxz
bound
outsl
into
lret
dec
add
push
pusha
sub
add
xor
imul
xchg
int
and
mov
int3
out
mov
xchg
aas
mov
enter
jb
test
aaa
mov
sti
popf
ja
iret
gs
mov
adc
xorb
fisttpll
xor
cmpsb
cmp
fisttpl
sub
pop
or
insl
or
dec
sahf
xchg
ljmp
mov
push
cld
mov
enter
cmc
xchg
jno
sub
mov
cmc
in
faddl
mov
icebp
adc
sbb
cmp
es
cmp
sub
pushf
mov
pop
pop
adc
jne
icebp
or
jo
fldl
xor
lahf
adc
xor
sbb
adc
inc
add
jns
sbb
fcomip
inc
push
and
sub
cmp
jg
shrb
arpl
inc
mov
rolb
dec
xchg
hlt
adc
lds
mov
push
xchg
sub
xchg
ret
push
cwtl
ret
add
lds
pusha
dec
insb
mov
or
sahf
gs
lods
pop
mov
fcomps
inc
dec
outsb
pop
push
std
leave
adcl
pusha
stc
je
cs
pop
xor
mov
push
out
sbb
iret
fwait
loopne
imul
imul
adc
js
and
jns
jnp
jmp
pop
inc
mov
lret
xchg
sbb
or
pop
insb
ss
fnstsw
je
into
les
out
jne
cmp
test
jmp
imul
adcb
push
adc
add
inc
mov
popa
push
scas
mov
sub
sub
addb
rcrl
mov
pop
mov
repnz
fs
ds
sbb
loopne
out
jge
mov
add
cmp
sub
mov
aad
xchg
mov
cmp
mov
shll
mov
or
ret
mov
fdivs
out
popa
or
mov
into
fcmovu
test
mov
in
rclb
pop
popf
adc
cwtl
mov
pushf
fldcw
into
jp
leave
daa
mov
cld
jbe
sub
pop
mov
out
mov
fdecstp
dec
xchg
lods
loopne
add
pop
pop
cmp
jmp
lods
scas
cmp
mul
pop
push
insb
and
sub
ret
cmp
xlat
xor
das
add
jmp
test
or
inc
test
lods
push
imul
pop
sub
xchg
cmp
or
rorb
add
mov
popf
std
mov
iret
inc
hlt
fcmove
ret
and
test
dec
dec
mov
jmp
sbb
repnz
js,pt
insl
add
inc
shl
stc
rclb
inc
out
and
jecxz
cs
cmpsb
or
mov
repz
mov
add
shr
lret
add
xchg
or
insb
pop
divb
hlt
out
jne
fwait
insl
and
xor
xchg
data16
jne
or
pop
divl
cmp
cmpb
call
push
jno
aas
mov
or
shll
cmp
popa
popf
jne
icebp
xchg
movsl
jp
sub
push
stos
mov
ret
test
aad
cmp
xchg
loopne
mov
mov
add
sbb
inc
int3
ret
mov
cmp
xor
sub
pusha
leave
xor
adc
and
jae
shlb
fisttpl
dec
popf
xor
add
xchg
pop
cld
cmpsl
pop
ror
xor
lods
xlat
repz
aas
movsb
leave
mov
push
mov
xor
iret
pushw
out
inc
sub
outsb
std
inc
ljmp
int3
push
mov
mov
int3
sbb
push
xlat
jg
shl
cmpsl
subl
stos
xlat
mov
rcr
dec
inc
sahf
clc
movsl
out
pop
sub
ja
pushf
pop
arpl
mov
xor
sbb
jle,pn
push
mov
stos
mov
addr16
mov
movsb
lret
sub
mov
out
aaa
les
jb
pop
inc
pop
sbb
bound
test
ljmp
cmp
sbb
mov
arpl
sub
add
leave
adc
je
add
jle
jno
clc
jns
xchg
int
repnz
movsb
mov
shll
in
sarb
addr16
mov
cmp
add
sarb
cmpsb
xchg
pop
incl
fdivrs
mov
or
arpl
mov
and
test
fwait
push
inc
cmp
and
mov
mov
rclb
mov
enter
jns
pop
test
in
push
and
jae
mov
mov
loopne
inc
mov
aad
inc
inc
mov
inc
insb
ss
lret
fsubl
push
lcall
gs
xor
mov
mov
mov
inc
cmpb
inc
adc
cmpsl
imul
sbb
inc
and
test
mov
testl
cli
mov
jno
xchg
loopne
test
jg
aaa
mov
in
jae
ret
and
mov
aad
mull
jo
mov
in
cmp
lret
xchg
mov
jg
test
outsl
mov
mov
lock
and
mov
adc
js
lods
sti
mov
jge
stos
cmp
call
popa
clc
lods
adc
ja
dec
and
jecxz
mov
push
ficoml
mov
sub
test
inc
or
push
sbb
decb
pop
test
idivb
sub
jb
mov
loop
sub
fldenv
fadd
pop
es
loopne
jg
je
stc
or
test
bound
dec
stos
in
add
aas
arpl
in
adc
and
or
mov
gs
and
adc
cmp
xlat
mov
and
or
daa
idivl
mov
icebp
xlat
in
insb
push
out
gs
enter
ds
push
push
dec
ds
dec
sahf
andl
jo
xor
xchg
jmp
fs
jb
testb
sbb
xchg
cmp
std
mov
dec
mov
mov
pop
or
scas
sub
fnstcw
fisttpl
bound
xor
shld
pushf
ret
and
mov
sub
pop
dec
sub
call
jnp
shl
jno
lods
lret
ljmp
scas
scas
sti
xchg
in
out
mov
mov
add
test
adc
mov
sbb
jo
and
mov
inc
fnstcw
mov
enter
data16
xor
iret
or
sbb
xor
add
imul
fwait
test
sub
jb
pop
xchg
dec
add
pop
ja
mov
and
xorl
and
aas
imul
mov
gs
fisubrl
xchg
fscale
fsubs
dec
and
mov
imul
push
push
adc
mov
sbb
out
lret
xchg
inc
pusha
out
mov
mov
leave
push
popf
sub
xchg
pop
in
or
mov
push
inc
adc
data16
push
popf
bound
cmc
fstps
xchg
into
lds
dec
lds
cmp
cwtl
lds
icebp
push
jmp
mov
mov
test
jno
mov
pop
sbb
cld
lds
pop
lcall
test
test
out
mov
jmp
insl
mov
cli
nop
cs
fmull
sub
das
xor
add
js
mov
cld
cltd
into
punpcklbw
dec
aad
adc
subl
push
in
mov
fstl
popa
outsl
dec
mov
repz
push
dec
fld
fs
xchg
icebp
push
pop
hlt
mov
mov
cmp
call
notb
movsl
inc
insb
push
mov
or
mov
hlt
leave
enter
sti
out
mov
roll
into
and
pop
xor
ljmp
adc
cmp
xchg
jge
stc
arpl
add
movsl
push
cs
or
sbb
jbe
imulb
or
lret
inc
subps
inc
out
dec
neg
pop
das
xchg
jl
or
fidivs
ficoms
jmp
mov
negb
mov
add
xor
rolb
push
mov
add
mov
shld
sbb
or
aam
popf
xor
xor
pop
repz
sbb
in
lock
insl
pop
add
into
shrb
jl
mov
mov
inc
and
adc
mov
mov
out
inc
icebp
fdivrl
daa
insb
dec
movl
not
push
fwait
into
outsb
or
mov
adc
xor
rcrb
xor
call
int
sbb
out
pop
in
mov
mov
pushf
lods
and
stos
stc
jmp
mov
pop
out
scas
incl
nop
ljmp
push
inc
jecxz
cs
icebp
sti
mov
push
sub
ljmp
dec
popf
lahf
fwait
push
xchg
xor
aaa
add
or
push
addr16
call
dec
add
imul
xchg
pushf
mov
loop
movsb
dec
cwtl
inc
ret
add
hlt
jmp
mov
mov
dec
outsb
add
adc
std
cmpsb
inc
lahf
stos
inc
xor
adcl
inc
jae
cmp
xchg
outsb
arpl
out
popa
popl
sbb
loopne
lahf
push
jns
jmp
inc
sbb
aaa
mov
mov
jno
js
scas
xchg
arpl
and
and
cmp
jnp
movsb
pop
loope
cltd
xor
cmpl
sbb
je
pop
xchg
push
ret
jle
popa
sbb
xor
jp
sbb
sub
cmpsb
mov
test
stos
adc
pop
and
pop
repnz
and
dec
lcall
inc
mov
mov
cmpsl
int3
cltd
in
imul
rcr
add
out
sub
aaa
mov
add
addr16
in
in
mov
pop
dec
xor
jmp
cmpsb
sub
cmp
mov
cmpsb
outsl
test
enter
xor
xchg
lods
xchg
stos
sub
sub
dec
fwait
cmpsl
sbb
xchg
sub
cltd
fisttps
lret
and
jns
cmp
push
or
testl
aaa
cmp
jno
mov
xor
xor
adc
icebp
cmp
and
test
and
adc
add
jns
test
or
ss
das
sub
jne
ret
push
insb
std
mov
ret
dec
pop
add
sub
inc
lahf
rcll
add
clc
cltd
sub
fwait
jb
fucomp
inc
outsb
sub
mov
scas
cmp
loopne
outsl
adc
aad
pop
dec
jbe
pop
ficoml
jb
pusha
imul
jb
rol
jo
pop
ds
ss
aas
insb
add
mov
pop
dec
int3
int3
lea
bound
cltd
mov
cmc
repz
sbb
sbb
push
dec
fwait
and
or
test
add
sub
in
int3
mov
inc
mov
movl
pop
dec
aam
loope
push
inc
or
mov
pop
inc
aam
mov
jl
or
push
xchg
stc
subb
and
or
addr16
outsb
js,pt
imul
fisttpl
out
xor
adc
fisttpll
inc
or
lahf
stc
popa
call
lcall
push
xchg
and
insl
lock
int
sahf
pop
fwait
cmpsb
push
out
and
inc
jp
jge
scas
inc
pop
int3
pop
pop
cmp
repnz
dec
repz
xchg
mov
inc
push
push
xchg
mov
out
cs
pushf
push
adc
inc
js
lods
rcll
les
jge
pop
pushf
pusha
xchg
imul
je
cmp
mov
or
fiaddl
sahf
xor
cmp
popf
insl
mov
push
jmp
or
jmp
imul
mov
pop
mov
mov
repz
sbb
sbb
in
or
jne
addl
mov
sbb
pop
jo
push
lret
aas
push
jnp
jmp
sbb
in
clc
dec
lock
in
mov
mov
xor
cli
push
icebp
mov
rclb
loope
dec
mov
inc
xchg
arpl
pushf
and
add
dec
jnp
cmp
pop
sahf
hlt
jno
cmp
in
popf
xor
int3
inc
test
xlat
sahf
add
jbe
in
hlt
in
or
pop
movsl
int3
xchg
or
or
hlt
jle
jnp
out
imul
dec
sub
cwtl
push
mov
push
std
flds
or
dec
pop
mov
jecxz
daa
rcrl
push
movsb
loope
adc
das
popa
mov
je
out
mov
sbb
test
xchg
pop
sub
outsb
and
jg
mov
mov
mov
push
imul
repz
or
push
das
mov
fcmove
dec
shll
test
add
xchg
pop
push
xchg
pushl
je
pop
jae
into
adc
jae
les
mov
xor
or
rclb
jmp
xor
adc
out
pushf
xor
inc
mov
push
push
fdivrl
cmp
sub
pop
push
sub
xor
sbb
movsl
jns
mov
jo
cmp
es
jne
mov
or
mov
and
adc
fisttpll
sub
or
sub
jb
or
xor
adc
push
lds
imul
xchg
mov
sarb
cltd
xchg
repz
inc
movsl
test
int3
pop
insl
insl
cmp
add
out
pop
jmp
xlat
sbb
sub
jbe
stos
pop
popf
ret
fiaddl
fidivrs
into
test
stc
jb
jmp
addr16
push
and
iret
push
push
insb
daa
or
shr
aad
mov
das
sbb
adc
xlat
aam
insb
sub
mov
dec
xlat
scas
cmp
mov
jnp
adc
push
repz
push
push
mov
mov
fs
leave
test
mov
xchg
mov
insb
iret
inc
aas
cmpsb
bound
dec
js
or
xor
incb
arpl
enter
xbegin
add
lret
jae
sub
shl
fldenv
enter
sub
push
aam
add
dec
dec
sbb
cmova
cmp
ljmp
or
sbb
add
inc
inc
mov
outsb
jb
inc
add
lahf
mov
xchg
sub
inc
push
adc
pop
fsubr
xchg
dec
pusha
addb
pop
and
rcrb
and
mov
test
out
cmp
mov
jb
in
fnstenv
mov
and
add
mov
xchg
pop
xchg
pop
cwtl
adc
adc
xor
sub
pop
mov
adc
stos
xchg
pop
mov
in
fs
out
dec
mov
imul
push
cli
sahf
mov
in
xchg
mov
or
cld
in
inc
pop
sbb
rclb
lods
lret
mov
push
stos
jnp
sbb
ret
xor
mov
jp
or
adc
arpl
xchg
stos
mov
jg
addb
inc
rorb
inc
sbb
inc
inc
inc
dec
popa
fcmove
neg
scas
inc
push
sbb
cmp
xchg
dec
pop
aaa
mov
xchg
lock
pop
or
jl
arpl
fsts
popf
cwtl
addr16
jne
fldcw
xor
clc
jb
std
inc
jns
mov
mov
loop
repz
in
mov
jbe
jae
push
add
lret
nop
mov
jne
out
stos
cltd
push
xchg
ja,pn
cmp
xor
andl
pop
out
ss
in
xchg
cwtl
fnsave
divb
pusha
mov
pop
fwait
outsl
add
arpl
add
jnp
js
fnstcw
movsl
ficoml
xorl
dec
pop
adc
or
ret
xchg
cmpsl
pusha
clc
inc
aam
ds
xchg
outsl
movsl
mov
imul
cmc
mov
orb
leave
out
pop
lea
decl
fs
lret
push
out
lds
daa
pop
mov
adc
repnz
mov
fwait
out
mov
loop
aam
xchg
leave
ret
push
mov
push
lds
mov
or
aam
outsb
fiadds
mov
inc
sbbl
mov
enter
cmp
push
pop
stc
imul
rcll
adc
gs
bound
adc
loopne
push
mov
pop
mov
jp
jb
mov
xchg
mov
push
mov
insl
jno
jns
aam
pop
into
mov
mov
jo
jmp
les
lods
sbb
fildl
lret
movsb
rolb
or
aad
or
fstps
mov
aas
lea
or
mov
mov
pop
insl
imul
dec
push
add
cld
fnsave
sbb
ljmp
push
cltd
test
icebp
les
inc
adc
push
aas
scas
jno
ror
push
jmp
js
inc
mov
push
mov
loope
lcall
imull
les
pop
stc
aam
stos
dec
pop
sub
push
jle
subl
mov
decb
jo
xor
dec
adc
pop
mov
fstl
push
icebp
or
bound
je
cmp
fisubrl
cmp
inc
jbe
mov
xor
ljmp
inc
imul
dec
xor
jae
pop
scas
mov
jmp
cmp
cmc
lret
inc
cwtl
stos
sbb
scas
testb
sbb
rolb
jg
or
iret
jmp
mov
jmp
fistpl
cmp
push
stc
and
imul
adcl
je
dec
cmpsl
inc
mov
add
stc
rcpps
mov
fisubs
cmpsl
jmp
mov
add
arpl
mov
call
cmp
cmp
xchg
ljmp
pop
sbb
pop
lea
jecxz
mov
mov
jno
int
jnp
loope
roll
pusha
pop
pop
and
popa
jmp
sub
addl
in
sbb
jmp
popf
mov
hlt
pushf
lret
popf
inc
pop
push
fneni(8087
cmpsl
and
cmpsl
daa
fnstcw
std
lock
push
cli
sub
fldcw
push
xchg
mov
sub
xor
adc
adc
imul
test
fwait
cwtl
add
into
aam
pop
cbtw
fcom
cmp
push
aas
test
dec
gs
ror
xchg
sub
push
sbb
push
pop
pop
fsub
int3
adc
pop
mov
imulb
mov
jbe
in
nop
data16
mov
push
xor
sti
bound
test
xor
inc
cmp
cmpsb
mov
test
arpl
add
inc
pop
pop
push
int
repz
jae
or
faddl
adc
inc
cmpsl
test
push
daa
cmp
jbe
push
add
lcall
fwait
sub
insb
xlat
push
xor
mov
jno
pushf
xor
sbb
std
in
out
dec
mov
mov
cli
xchg
pop
xor
jns
cmp
cmp
push
lcall
and
cmp
mov
rorb
cld
out
mov
in
sahf
sbb
pop
or
das
lods
lds
lods
sahf
xchg
mov
addr16
loope
into
les
fiadds
fmulp
cmp
xor
mov
outsl
je
and
mov
fcompl
stc
cmp
test
push
inc
and
ds
sbb
add
mov
mov
mov
scas
jns
and
int
sub
dec
mov
xor
adc
jno
cmpsl
out
loope
addr16
push
cmp
arpl
xor
cmp
add
arpl
jg
cld
andb
and
or
jno
mov
push
mov
xor
and
mov
lea
je
fldcw
scas
repz
cmp
ja
inc
adc
movsb
test
xchg
sbb
cmpsl
add
cmpsb
out
mov
xchg
add
push
jno
call
xchg
dec
pop
stos
in
filds
out
adc
ss
pop
xchg
loop
sbb
mov
mov
or
stc
mov
fsub
jmp
ja
subps
pop
pushf
mov
add
icebp
inc
lea
or
push
pop
leave
adc
bound
inc
std
iret
and
ret
cmp
cmpsl
adc
sbb
repz
inc
and
or
add
jecxz
push
sub
repz
sahf
nop
popa
adc
test
inc
dec
js
lock
cmp
sub
pop
aas
add
aam
add
pop
les
insl
cmp
cmpsl
mov
pop
add
rcl
cli
jl
inc
es
inc
jmp
and
push
test
enter
pop
dec
in
scas
jp
mov
jecxz
sbb
insb
ss
ret
shrl
sbb
sbb
in
jmp
mov
push
xchg
sub
inc
rcr
cs
jmp
xor
jb
cmpsl
or
shrb
in
testl
lods
xor
loopne
mov
and
ljmp
fdivrl
jbe
movl
push
icebp
add
clc
in
mov
jnp
incl
xor
test
or
xchg
or
lock
push
inc
in
insb
sub
push
adc
test
sarl
mov
mov
rcl
fisubl
jbe
in
xor
xor
mov
nop
push
lea
cwtl
cmp
loopne
mov
push
xchg
andl
daa
adc
xor
imul
test
pop
lret
incb
dec
sub
jns
push
scas
jno
movsl
js
bound
sub
push
loop
arpl
xchg
stos
inc
std
adc
push
out
ss
xchg
add
lcall
adc
dec
mov
fstpl
mov
lods
dec
mov
ds
dec
mov
pop
xor
mov
or
enter
fsubr
or
shll
neg
cmpsb
fimuls
stc
pop
xchg
fiadds
sbb
jecxz
inc
mov
push
xchg
cmp
cmpsl
inc
and
in
and
outsl
stos
ret
shlb
pop
dec
xor
movsb
push
fsub
adc
jbe
aaa
xor
ror
push
jb
in
test
dec
dec
mov
fidivs
mov
fimull
cs
jg
addr16
pop
inc
movzwl
lea
lret
mov
mov
jb
push
vcomiss
xlat
mov
test
lret
fsubrl
pop
rorb
movsb
push
mov
inc
pushf
cmpsl
lds
lret
insl
fadds
std
jb
bound
mov
push
jne
into
mov
mov
push
mov
or
pop
mov
iret
xchg
test
shl
fisubrl
fimull
mov
ret
push
sbb
stos
or
dec
inc
mov
and
mov
es
rorl
inc
xchg
sbb
cld
add
pusha
jg
cmp
aad
shrl
sub
test
daa
sarb
lods
pop
stos
cltd
push
insl
out
mov
stos
int3
push
loopne
and
or
and
fdivrl
dec
xorb
and
int3
pop
lret
loope
rsqrtps
inc
loopne
xchg
inc
push
les
sbb
mov
stos
or
mov
outsb
jnp
jl
add
popf
stos
es
adc
adc
push
ss
adc
pop
imul
xchg
push
test
cwtl
sub
bound
mov
mov
sti
inc
jno
sub
and
fisubs
ret
pop
mov
xchg
mov
mov
push
insl
xchg
and
jl
daa
cmp
movsl
icebp
out
cmp
fcmovne
nop
dec
test
mov
aam
rcl
dec
pop
mov
jbe
push
mov
ja
dec
js
mov
addb
ds
fnstcw
mov
sbb
xchg
adc
xchg
jae
adc
js
push
sbb
sahf
icebp
aad
outsb
fs
cld
das
popl
icebp
adc
sbb
and
add
adc
aas
sub
add
daa
inc
sub
aam
xchg
lds
pop
pop
mov
fistpl
in
cld
fidivrs
popa
shlb
loope
into
xor
mov
or
out
jge
aaa
movsl
ret
mov
call
clc
xchg
sub
pop
ss
adc
xchg
cmpsb
push
pop
jle
mov
pop
push
push
add
gs
xchg
inc
cmc
pusha
push
mov
mov
test
lret
in
in
lds
fldenv
lahf
xor
add
jmp
aaa
pop
loope
push
stos
clc
or
negl
mov
fildll
gs
fistpl
aas
add
dec
push
mov
mov
out
jle
jecxz
mov
lret
fiadds
cmpsl
mov
mov
push
xor
push
xor
cmc
dec
call
adc
xchg
push
sub
sub
push
nop
icebp
mov
xorb
sub
das
push
jle
icebp
leave
xchg
xor
xor
adc
repz
adc
adc
sbb
inc
push
jbe
loope
pushf
cmp
xchg
push
mov
mov
or
xor
cmpsl
sbb
addb
in
mov
pop
test
cltd
mov
add
popf
mov
ss
sbb
addr16
pop
adc
jnp
add
sbb
xlat
dec
mov
stc
loope
mov
adcb
addr16
sti
mov
dec
sahf
out
sti
mov
sbb
mov
mov
cmp
xchg
mov
mov
je
dec
xchg
cmp
jle
cwtl
dec
lods
xchg
mov
cmpsb
test
nopl
push
or
cmp
push
cli
mov
or
and
dec
push
popw
pop
stc
xchg
inc
xchg
in
mov
mov
jnp
mov
out
inc
cwtl
out
bound
sbb
push
mov
jge
cmpsb
sbb
sbb
fdivrl
in
fwait
mov
push
mov
popa
mov
repnz
ljmp
and
arpl
pop
dec
sbb
subl
pop
mov
mov
outsb
dec
jle
adc
shrb
pusha
shr
repz
jle
stos
pop
sbb
cli
xor
and
lret
insl
aaa
adc
jnp
xor
dec
push
fisttpll
ja
jecxz
stos
enter
jp
or
daa
stos
fdivs
stos
hlt
xchg
sub
mov
ret
mov
fimull
out
push
cmp
xor
xchg
push
adc
imul
xchg
dec
stos
icebp
pop
test
out
rol
push
adc
and
and
mov
aas
sarb
popf
and
add
and
arpl
bound
inc
mov
js
fidivl
and
jbe
movsl
test
packsswb
mov
or
shr
outsb
xchg
pop
addl
loopne
add
cmp
js
mov
inc
pushf
in
cli
sub
push
test
loope
lret
bound
insb
jmp
xlat
mov
popa
test
dec
aas
repnz
repnz
add
in
dec
scas
or
out
cmp
dec
loop
icebp
xorl
xchg
call
cltd
insl
lds
stos
cwtl
cmp
shll
jecxz
fwait
les
addl
mov
jno
cld
pop
push
cmc
insb
or
inc
push
pop
sbb
dec
scas
mov
and
outsb
jo
adc
jecxz
add
jge
test
jmp
int3
mov
mov
mov
inc
jg
lret
sub
inc
enter
daa
jle
andb
jae
pop
jmp
fmuls
xor
shrl
adcl
cmp
xor
orl
lds
sub
cmc
xchg
mov
mov
fstpl
rorl
lds
repnz
fisubs
and
cmpsb
jo
add
add
adc
jecxz
test
dec
clc
lea
adc
cltd
pop
imul
or
in
aam
dec
in
sub
pop
cmp
jmp
mov
inc
iret
roll
insl
sar
inc
pop
in
sbb
cli
shlb
out
mov
popa
dec
insl
dec
mov
and
mov
push
outsl
sbb
cmpsb
in
add
add
imul
cmpsl
roll
sar
nop
jae
xchg
xor
push
lcall
dec
pop
xor
xor
cmp
pop
push
decb
add
fidivrl
outsl
mov
xor
loopne
movsl
movsl
mov
xchg
mov
arpl
bound
jg
imul
std
test
in
adc
xor
cs
pop
sahf
mov
push
clc
in
addb
adc
cmp
dec
jae
les
adc
mov
dec
nop
jmp
stc
xor
mov
sbb
movsl
sub
imul
pop
inc
repz
imul
loopne
xchg
je
es
les
dec
aaa
loopne
cltd
insl
iret
andl
cmp
inc
cmp
jp
pop
and
jb
push
in
dec
pop
mov
pop
mov
xchg
or
enter
sti
jae
or
jecxz
imul
mov
and
adc
rclb
mov
scas
loop
inc
push
movsb
add
adc
ret
sub
aam
lret
xchg
sbbl
xchg
jecxz
fadd
xchg
idivl
mov
adc
popf
sub
cwtl
rorl
push
test
cs
adc
push
sbbb
push
push
je
jo
in
pusha
scas
fsubrl
cld
xchg
scas
sbbl
scas
push
jbe
imul
test
pop
xor
rorb
sbb
mov
mov
outsl
sub
add
jo
jno
ret
adc
mov
outsb
jle
pop
jg
sub
jmp
mov
mov
in
push
adc
push
pop
pop
push
adc
das
adc
push
jno
test
fdivs
test
adc
xor
cltd
adc
fimuls
out
dec
hlt
pop
lret
icebp
push
add
pop
xchg
push
jns
popf
xor
pop
sti
xchg
cmpsl
dec
dec
jp
mov
scas
cmpsb
pop
mov
roll
adc
jne
push
add
aas
xchg
push
sbb
scas
ss
and
ret
test
pop
mov
push
ljmp
xchg
outsl
adcl
add
fstps
iret
push
adcl
and
mov
lcall
rcrl
or
push
loop
ljmp
orl
and
in
mov
xor
ljmp
xchg
loopne
mov
add
sbb
aam
loopne
fcomip
jg
xchg
orb
pop
mov
and
mov
mov
out
or
mov
mov
mov
in
add
xchg
sbb
push
cli
repz
in
xchg
and
cmp
data16
mov
adc
add
or
pushf
sbb
mov
bound
pushf
add
jnp
mov
pop
out
push
push
fidivrs
sbb
push
jne
sbb
aas
int3
sti
test
jecxz
aas
jge
aaa
loope
clc
pop
cld
pop
add
dec
mov
jl
or
xlat
and
sarb
jecxz
jge
mov
adc
jge
sti
pushf
fidivs
vpsubusw
movsw
pop
and
int
shrb
sbb
mov
jl
bound
add
divl
jno
je
cs
std
je
push
xchg
dec
push
add
adc
mov
or
dec
push
mov
mov
jg
hlt
andb
push
insl
cmpsb
mov
lods
mov
data16
mov
je
mov
lock
std
test
test
lea
lcall
mov
das
out
popf
jge
fwait
xchg
add
ds
xchg
sbb
xchg
and
ret
push
xlat
repz
mov
int
xor
rolb
outsb
orb
inc
fistpl
mov
addr16
iret
mov
or
cmpsb
insl
scas
inc
js
les
push
orl
ljmp
mov
into
push
icebp
xor
push
push
stos
or
aaa
mov
pushf
jle
in
lods
and
dec
xor
jns
repnz
out
inc
pop
pop
aas
sub
push
add
lods
pop
or
and
out
lcall
cwtl
or
bound
add
cwtl
sbb
cmp
in
dec
xchg
mov
jle
jbe
jle
xchg
cwtl
mov
inc
aad
jg
inc
pop
aas
shrb
cs
pop
fimuls
cmpsb
fldl
pop
cmc
and
js
add
xchg
out
lret
inc
dec
sbb
fisubrl
pop
sub
fstpl
cmp
stos
daa
into
inc
fdivrl
pusha
ljmp
fcmovb
addb
add
mov
sub
das
or
inc
cmpsb
or
adc
xchg
imul
inc
call
xor
lods
xchg
in
mov
jnp
out
adc
sub
icebp
cli
scas
and
jge
cld
stos
rcll
xchg
rcrb
shrb
stc
inc
mov
loop
lds
out
or
or
push
cmp
jo
aas
ficoms
out
scas
ficoms
popa
push
push
sub
mov
sub
xchg
mov
pop
fnstcw
adc
imul
loopne
stos
icebp
gs
call
fistps
pop
and
mull
sub
add
inc
hlt
mov
mov
jmp
repz
fnstenv
push
stc
cmp
pusha
sbb
rorb
pop
sbb
rcrb
mov
mov
or
insb
xor
dec
xor
cmpsl
cmp
push
mov
pushf
dec
inc
inc
mov
scas
jle
cmp
pop
cmp
rcll
addr16
mov
pop
inc
xor
lea
sbb
stc
pop
jge
sti
lret
addr16
inc
sbb
xchg
jne
and
mov
nop
fsubrp
hlt
ret
pushf
call
ja
cmp
outsl
iret
ljmp
test
nop
dec
mov
sbb
and
iret
lret
xchg
cmpsl
jmp
ss
out
inc
aaa
sub
mov
xor
repnz
cld
outsb
sub
popa
lods
cli
mov
jmp
cmp
xchg
out
mov
sarb
stos
iret
fs
sub
cwtl
pushf
pop
cmp
jg
mov
cmp
cmp
push
test
jecxz
fistl
or
mov
ret
aam
lods
xchg
mov
mov
xor
icebp
out
mov
int
cmp
decl
les
and
push
sub
divb
leave
pop
jl
call
popa
test
int
sarb
loopne
xchg
jo
pop
add
or
add
bound
sbb
and
xlat
xchg
jbe
and
into
add
cs
push
add
pop
jp
test
xor
jmp
test
adcl
outsb
shll
adc
jb
imul
add
pop
negl
adc
jecxz
xchg
icebp
mov
out
int3
out
sbb
ja
mov
fldt
and
pop
xchg
sbbl
add
test
ja
inc
xorb
jnp
xchg
add
ss
mov
mov
inc
shr
sub
ljmp
fisubl
sbb
cmpsl
xchg
cmp
aam
cmpsb
push
push
std
and
cmp
add
mov
adc
push
idiv
inc
movb
push
or
ucomiss
sar
cmp
jnp
sbb
arpl
push
fimuls
movsb
out
pop
pop
jb
cmp
push
xchg
repnz
iret
sbb
mov
sbb
mov
xchg
loopne
push
test
mov
aad
inc
addr16
sub
cmp
sub
or
subl
cld
pop
orl
sbb
push
test
sbb
aas
jbe
sbbb
xchg
xlat
imul
or
or
adc
enter
and
scas
test
in
or
in
pop
rcrl
cmp
xchg
shlb
stos
mov
int3
xor
repnz
mov
jle
iret
imul
inc
adc
ret
mov
mov
lods
aam
mov
and
bound
xchg
jnp
jg
out
xchg
xchg
jle
std
scas
mov
roll
jbe
push
mov
in
lock
and
int3
push
mov
cmpsl
xchg
shrb
stos
js
mov
sub
xchg
cwtl
mov
mov
inc
mov
into
addl
ss
test
inc
push
pusha
shl
shrb
cmc
orl
and
mov
aam
fldcw
shr
scas
push
or
sub
adc
stc
cmc
adc
test
mov
dec
movsl
sbb
bound
in
lahf
out
jl
shl
cmpb
mov
outsl
sarl
icebp
stos
js
dec
mov
enter
sub
sub
pop
xlat
sbb
mov
sbb
lahf
inc
ljmp
aam
sbb
in
aam
xchg
in
les
movsb
je
leave
das
out
adc
movnti
jbe
mov
fimuls
sub
cmp
sub
push
test
imul
repnz
xor
or
inc
lcall
mov
pop
pop
jns
int
and
jmp
pushl
stos
loope
inc
push
xchg
pop
mov
pop
or
mov
test
loopne
push
sti
xor
test
out
push
fucomi
orb
insb
out
mov
arpl
pop
sahf
add
mov
cmc
push
or
pop
adc
insb
loopne
sti
enter
leave
je
pushf
aad
jp
xchg
sub
fdivs
pop
movsb
and
subb
rol
cmpsl
jns
cmpsl
or
sbb
xchg
scas
js
test
add
add
pop
jbe
jbe
fisttps
dec
mov
stos
mov
mov
mov
mov
xchg
idivl
inc
mov
cmp
pop
mov
or
mov
mov
xchg
les
or
adc
jmp
movsl
shlb
js
jns
cli
icebp
insl
in
cmp
insb
cmp
out
xor
push
outsl
int3
mov
lea
clc
jo
iret
mov
out
sub
lret
popf
xor
addl
mov
outsl
or
sbb
bound
cmp
sbb
inc
pop
insb
out
xor
push
jp
mov
andl
mov
repz
mov
mov
xlat
add
aam
popf
or
mov
lahf
push
xor
mov
loop
aaa
les
dec
stos
add
and
ret
mov
jg,pt
sbb
sahf
add
jmp
iret
adc
ljmp
outsb
mov
stos
push
cmpsb
aaa
dec
scas
or
xchg
pop
mov
adc
aam
lahf
test
rol
push
rcl
sub
add
imul
cmp
das
je
scas
cmp
sub
aad
inc
cmc
jge
fdiv
sbb
lea
dec
and
mov
fnsave
dec
cmp
inc
sub
data16
adc
inc
fisubl
aaa
fsubrl
cmp
and
push
xor
inc
mov
jecxz
jae
subb
aad
adc
gs
lds
push
leave
sbb
cmp
fists
in
and
and
sub
lcall
cmp
mov
insb
arpl
mov
dec
shrb
fwait
pop
and
mov
fsubrp
sbb
arpl
fwait
mov
movsl
mov
leave
fidivl
mov
or
pop
movsb
shr
and
cmpsb
hlt
cmp
icebp
hlt
xor
loopne
fistpll
jecxz
loope
inc
cmc
rcll
inc
xchg
or
sahf
stos
mov
mov
lods
test
add
sbb
rol
cltd
pop
xchg
frstor
mov
sub
lcall
adc
stos
repz
push
lahf
test
mov
dec
push
clc
ljmp
outsl
sub
mov
pop
lods
adc
sub
xchg
sbb
punpckhbw
fsubr
out
push
push
scas
iret
mov
xor
cmpsb
xor
pop
jp
xchg
scas
inc
dec
mov
mov
fmull
pop
int
jge
dec
mov
adcb
pop
shrl
sar
fs
ficoml
lret
or
xor
sub
dec
test
adcl
xchg
nop
out
test
addr16
jl
fs
lods
cwtl
sub
js
repz
fldt
mov
jnp,pt
fcmovu
movsl
jne
xchg
mov
sub
and
cmp
push
mov
sbb
sahf
inc
lret
pop
gs
dec
call
js
sbb
jg
aam
repnz
mov
or
mov
push
or
jmp
stos
aas
fcomps
dec
cmpsb
jmp
bswap
jge
mov
jmp
ret
pushf
lahf
sub
outsl
mull
or
cmp
mov
imul
xchg
repnz
lock
push
mov
jnp
rolb
adc
lods
xchg
mov
leave
aad
inc
pop
mov
test
pop
iret
enter
push
cld
cmpsb
pop
std
xor
sub
cltd
mov
xchg
inc
mov
fisubs
aas
das
dec
push
adc
add
xor
mov
pusha
test
data16
pop
mov
movsl
cmp
mov
out
lahf
ss
dec
imul
xor
sbb
add
pusha
jne
pop
fisttpl
adc
pop
cmpsl
mov
fdivs
push
cli
xor
iret
push
das
mov
je
aas
aam
pop
je
or
and
sbb
xor
pusha
xchg
mov
pop
inc
lds
adc
mov
sahf
aaa
idivl
js
ljmp
mov
jle
add
sbb
adc
xchg
shrl
dec
push
js
fidivrl
inc
in
loopne
mull
insb
push
jl
inc
dec
les
and
and
es
push
js
je
add
dec
adc
cli
lret
in
int
lcall
test
sti
or
inc
loop
sbbl
mov
mov
shrb
leave
adc
sbb
xchg
imulb
aaa
or
jns,pn
call
jno
mov
or
mov
sub
mulb
jg
lds
into
out
test
adc
pop
sub
je
jecxz
out
sbb
mov
jb
mov
pop
out
aas
nop
out
mov
jg
shr
xchg
loop
mov
popf
mov
push
dec
jne
mov
test
adc
movsb
push
adc
dec
fsubrp
sbb
xlat
loope
jp
pop
dec
mov
ret
sub
clc
mov
lods
sbb
xor
pop
int
rclb
xor
pop
scas
js
pop
and
lcall
js
add
and
push
nop
fidivrl
arpl
psubusw
push
daa
hlt
mov
jb
and
cld
inc
xor
lahf
shr
xchg
lret
sub
or
arpl
push
neg
mov
out
cmpb
lock
pop
lret
push
loop
xlat
out
cmp
jb
pop
das
hlt
mov
mov
pop
push
xchg
and
jp
push
inc
cmp
pop
jg
and
nop
xorb
mov
mov
mov
aaa
in
in
cwtl
adc
addb
andb
popl
xor
cmpsb
aas
pop
movsb
mov
ja
mov
pop
inc
push
cwtl
pop
xchg
cli
jmp
and
pop
int
or
test
jle
sbb
sub
or
mov
sub
popf
das
push
mov
loop
pop
cli
cmp
hlt
ljmp
add
mov
push
xor
mov
pop
leave
and
mov
mov
std
invd
cmp
adc
push
sbb
sbb
inc
and
push
push
das
and
fisttpl
loope
outsl
call
popa
inc
call
xor
pop
jmp
das
dec
cli
sub
fnstcw
call
aad
pushf
sahf
fstps
movsl
mov
push
or
and
and
mov
push
add
mov
mov
in
pop
inc
inc
std
setae
loop
pop
hlt
es
dec
sbb
and
out
add
negl
mov
fisttps
rol
pop
lods
mov
pop
sub
cmc
mov
lods
push
insb
mov
cmpsl
jae
push
mov
fnstsw
fstpt
sub
and
xchg
adc
enter
inc
pop
lret
jb
pop
rcr
push
in
lea
mov
mov
jbe
add
out
sub
mov
push
loop
push
rcll
xchg
jns
pop
call
mov
testl
adc
add
adcb
mov
jns
xlat
aaa
xor
inc
or
adc
jne
push
rorb
cmpb
pop
repnz
in
and
push
jg
sbb
loope
rep
arpl
sub
xchg
clc
cmc
lret
and
and
insb
add
sti
rcl
and
dec
aaa
clc
sub
test
or
fnstenv
call
adc
xchg
jnp
mov
mov
or
xchg
lock
mov
xadd
or
mov
jmp
pop
enter
add
cmc
xor
std
test
ret
adc
js
data16
sbb
gs
fisttps
push
pop
jecxz
popf
dec
lock
mov
or
xchg
inc
fnstcw
neg
cmc
lahf
aaa
adc
insl
icebp
add
mov
shlb
mov
cmc
nop
aas
xchg
push
dec
dec
jb
push
inc
lock
push
jo
mov
add
movsl
lret
pop
sbb
pusha
cld
out
hlt
ds
xchg
and
add
mov
mov
fmuls
arpl
popf
int
leave
je
inc
ljmp
cmp
sub
dec
pop
fisubrl
movsb
push
jne
out
mov
enter
insl
mov
aad
ficoml
cmpsl
xchg
sub
daa
mov
jecxz
push
mov
cld
sub
cmp
xor
or
movl
filds
mov
icebp
xor
sti
push
das
cwtl
cmp
mov
test
nop
bound
and
scas
push
sub
fs
aaa
mov
ss
mov
sbb
lret
stc
stos
xchg
jno
test
fildl
popf
imul
mov
lock
jae
lds
jns
fwait
nop
sahf
nop
test
stc
sub
xor
cwtl
jmp
and
inc
push
fmul
push
cltd
in
mov
xor
push
inc
add
into
mov
pushf
adc
int
sbb
mov
cmp
and
aad
std
push
or
inc
xchg
stos
mov
cmp
and
dec
stc
fs
in
mov
xor
and
fisubrs
mov
pop
xchg
and
fldcw
jbe
fs
sub
into
icebp
aam
mov
pop
dec
jecxz
mov
mov
and
jmp
in
rorb
ds
cmp
cmp
mov
gs
mov
and
hlt
arpl
js
cli
dec
ficoml
cmp
data16
and
iret
pop
stos
fbld
cmp
lock
inc
cmpsl
push
cmpsl
add
fsubp
int3
adc
int3
dec
je
in
push
mov
sbb
mov
inc
sub
mov
push
outsb
mov
call
stc
xchg
cmpsb
or
sub
enter
mov
rorb
sbb
in
adcb
xor
mov
jnp
push
cmp
jmp
jg
push
pop
out
lret
adc
enter
sbb
jmp
add
xchg
cltd
cmp
vpsraw
pop
testl
cmc
es
mov
sbb
subb
shrb
rcl
out
es
pop
push
data16
adc
sbb
movsl
xor
or
cmp
xorb
scas
in
adc
imul
lahf
mov
leave
jge
mov
out
xor
sbb
or
hlt
gs
fcmovnu
sbb
aaa
add
test
ja
in
xor
mov
dec
sub
repnz
cmp
popf
mov
mov
mov
loopne
or
xlat
pop
jnp
inc
sbb
aad
repnz
shrb
lcall
loop
push
in
push
imul
mov
lahf
fiadds
mov
test
jne
mov
mov
decb
jae
adc
insl
mov
data16
mov
add
pop
das
adc
gs
sub
pop
jle
dec
or
inc
adc
mov
sahf
frstor
mov
stos
in
es
cmpsb
sub
cli
cmp
sarl
jb
adc
adc
pop
xchg
stos
cmp
mov
sti
in
mov
cmc
aaa
scas
jl
pop
dec
fistl
aam
test
jecxz
cmc
sbb
sbb
add
jo
jmp
dec
sbb
mov
cli
mov
adc
insb
das
sub
cld
testb
insl
xchg
adc
or
add
adc
div
sbb
jg
jle
cmp
frstor
dec
jo
std
mov
xchg
es
push
sub
lods
iret
sub
pop
ja
popf
loope
insb
jbe
outsl
std
cmp
and
sbb
loop
mov
push
mulb
imul
pop
ficompl
push
push
mov
mov
inc
xchg
add
inc
out
outsb
aas
push
ds
jb
std
and
xor
push
mov
ja
push
ret
or
insl
jnp
cmp
and
mov
mov
sbb
pop
dec
xor
and
adc
fwait
movsl
outsl
mov
jb
sarl
mov
mov
push
or
sar
rcrb
jnp
int
sub
xchg
ljmp
das
outsl
and
xchg
or
fcmovu
mov
scas
outsl
mov
sahf
xchg
fimull
jbe
into
xorb
dec
daa
inc
jne
adc
mov
in
loopne
and
sbb
xlat
xchg
ficomps
xlat
push
mov
xchg
mov
iret
imul
cmp
mov
lahf
test
ret
add
sbb
insb
jb
loop
lret
push
scas
pop
int
jbe
arpl
out
jmp
orb
pop
cmp
jnp
xor
in
push
in
lret
mov
dec
repnz
pushf
movzwl
fimull
jbe
jmp
xchg
inc
mov
scas
sub
adc
inc
das
push
and
dec
test
mov
jge
fidivs
inc
xor
mov
sahf
repnz
push
mov
ja
jae
xchg
adcb
pop
into
sub
sub
scas
xor
andl
adc
fld1
adc
lock
fsqrt
or
add
stc
cld
leave
push
mov
push
cmc
xchg
pop
jl
pusha
lahf
xchg
dec
pop
jns
add
movsb
push
stos
lock
add
fwait
add
lcall
sub
outsl
push
dec
ret
add
xchg
fiadds
xor
loop
sbb
bnd
jae
stos
mov
bnd
jne
jmp
loopne
jmp
sub
mov
out
outsl
in
and
ljmp
ret
and
and
push
aad
mov
leave
mov
pop
ljmp
insl
lahf
add
xlat
mov
ror
pop
jmp
push
pop
or
gs
das
mov
or
les
cli
stos
xchg
pop
adc
popa
lea
call
ja
movsb
mov
js
jb
mov
dec
jns
test
add
aas
xchg
stc
pop
inc
adc
aad
mov
out
cs
mov
adcl
pop
mov
push
mov
push
mov
add
mov
hlt
lahf
jo
push
ljmp
in
mov
mov
data16
pusha
mov
pop
or
push
mov
or
mov
adc
int3
xchg
pop
dec
sbb
pop
stos
xor
jne
or
xor
jne
ds
and
stc
dec
dec
jp
lods
adc
inc
call
aad
xchg
bound
das
inc
mov
int
loope
xor
lret
outsb
leave
sbb
out
jnp
cmp
push
xchg
pop
aam
ja
out
jns
adc
outsb
dec
daa
jp
je
xor
or
jns
mov
lea
sub
xor
inc
mov
mov
loope
out
mov
in
jno
sbb
cmpsl
daa
lock
cmp
fs
mov
outsb
aad
sub
incl
jbe
ret
jbe
mov
sub
cltd
popa
pop
mov
mov
push
jnp
fucomp
jmp
sar
fnstcw
aas
dec
fsub
mov
addr16
adc
mov
and
pop
or
adc
dec
iret
push
xchg
jg
fsts
data16
pop
or
in
jb
xchg
nop
lahf
sbb
mov
adcl
repnz
insb
fimull
popa
flds
movsl
lcall
aam
mov
add
fs
ds
sbb
jb
adc
inc
lods
or
mov
stos
into
sub
aam
cmp
lret
jne
mov
inc
and
shr
xor
mov
lock
nop
jno
je
testl
sbb
jle
shrl
mov
and
scas
adc
push
sarb
jp
sub
xlat
hlt
jae
incl
xchg
lcall
pop
and
inc
and
jo
inc
fildl
pop
fs
ret
xchg
cli
scas
pop
push
ret
scas
testb
adc
xchg
jae
mov
xor
js
or
jno
inc
push
pop
sub
inc
rorb
jo
fsub
pop
adc
ret
mov
je
lods
ljmp
or
loopne
std
loop
pop
push
push
xchg
hlt
pop
ficompl
mov
mov
jae
scas
int
xchg
clc
mov
ss
fimull
test
push
mov
xor
add
data16
int3
pusha
int
sbb
mov
fimuls
aaa
orl
ljmp
xor
mov
cs
xor
dec
and
mov
cmp
sahf
cmpsl
or
ss
cmpl
mov
ja
sbb
test
sbb
test
cmpsl
xlat
loop
mov
jmp
push
call
add
std
jo
lods
cmp
adc
push
mov
jae
scas
mov
mov
loopne
mov
repz
movsb
jb
xor
pop
xchg
inc
jae
bound
add
mov
push
lea
sbb
in
call
cmp
mov
xor
push
iret
pop
cmp
xor
and
loope
fisttps
loop
xchg
and
push
outsb
rcrl
mov
fisttps
push
mov
nop
fdivrl
dec
mov
daa
or
or
xor
pop
into
call
aad
push
pop
xchg
sarb
fwait
sub
test
aas
testl
les
xchg
cltd
dec
jl
aas
lret
or
aas
push
mov
ss
daa
mov
bndldx
lock
add
mov
pop
mov
dec
push
add
mov
mov
loope
and
mov
lods
pusha
jecxz
push
nop
ja
xor
mov
sar
jp
adc
push
add
outsb
into
adc
insl
test
cmp
stos
in
fsts
and
or
pop
add
xor
sbb
or
cli
cld
and
rol
xor
adc
xor
cmp
not
sahf
xor
test
push
std
orl
jge
xor
dec
mov
adc
scas
mov
add
cmp
sbb
inc
fwait
popf
aad
add
dec
adc
les
jnp
cltd
sbb
test
out
mov
mov
lds
in
adc
data16
mov
inc
jb
cmp
out
test
pop
in
in
pop
inc
dec
movsl
sub
xor
test
pop
mov
and
jecxz
leave
fmuls
dec
dec
and
nop
xchg
xor
fstpt
xchg
sub
xor
sbb
and
xor
popf
pop
sbb
loopne
add
dec
and
div
push
ret
and
mov
adc
clc
hlt
xchg
lahf
pushf
jo
lock
push
cltd
call
or
shlb
leave
outsl
jp,pt
fdivs
inc
popf
sub
lock
lcall
pop
xchg
pop
add
lock
int3
and
xlat
arpl
pop
cld
push
popf
add
xchg
out
pop
adc
adc
in
outsb
push
mov
and
mov
sub
sbb
or
jae
pushf
pop
cmp
mov
into
shl
loope
jo
ret
mov
test
hlt
push
test
and
shl
rorl
xor
loope
xor
int3
stos
fnstenv
lods
sbb
pop
popf
pop
adc
loopne
mov
sbb
scas
lods
rcll
mov
aad
loopne
fs
and
dec
or
inc
pop
jl
push
movl
fiadds
in
or
xor
push
aas
sti
mov
movsb
in
sbb
jns
test
je
popa
push
pop
scas
pushf
les
xor
je
dec
mov
dec
sti
push
inc
or
jo
aas
call
sbb
dec
pushf
std
popf
les
mov
pop
xchg
mov
das
dec
das
in
in
dec
dec
push
push
repz
ret
mov
cmc
jnp
fsubrl
cmp
push
and
nop
fisubrl
fwait
push
outsl
mov
push
out
les
lcall
cmp
shrl
jecxz
xchg
xchg
xorb
sti
movsl
lcall
inc
xor
cmc
inc
jle
cld
imul
inc
bound
sbb
sbb
add
sbb
cmp
mov
mov
sbb
xchg
inc
outsb
xor
cli
in
das
ss
lods
mov
lret
int
xor
add
push
jnp
mov
dec
test
fldl
cmp
mov
sbb
push
or
xor
xchg
cmpsb
outsb
mov
adc
es
shll
cmp
mov
inc
icebp
push
xchg
push
inc
push
nop
jl
pop
jne
push
inc
mov
inc
addr16
iret
pushl
add
inc
add
mov
inc
jae
inc
in
mov
pop
in
cmp
les
jne
ficomps
and
fisubl
and
inc
sbb
mov
lock
mov
dec
movq
fs
popa
int3
lods
shlb
fsubp
or
dec
add
push
add
test
fldcw
mov
lcall
fstl
and
mov
push
outsb
enter
cmp
imul
push
das
jno
pop
popa
xchg
mov
mov
icebp
dec
imul
int
sbbb
jge
outsl
add
or
fbld
scas
or
test
cmp
mov
aad
jecxz
jbe
mov
pop
inc
push
mov
lret
inc
fsubl
add
gs
orl
fcmovnu
mov
fcmove
loop
jns
add
sub
rcrb
fdiv
movsl
fsub
out
sub
jg
movsl
repnz
into
pushw
fdivrl
cli
orl
insb
in
das
fwait
or
lcall
add
push
sub
ret
cmp
sub
icebp
inc
imull
lret
sbb
or
push
push
ss
add
shrl
dec
sti
adc
cs
in
rcll
cld
arpl
pop
lret
in
or
xchg
mov
rorl
xor
push
leave
sbb
mov
xchg
iret
in
fwait
jae
cmp
xchg
sarl
hlt
out
icebp
mov
cmpsb
lock
shrb
sub
push
push
xchg
bnd
mov
pop
fnstcw
xor
mov
pop
mov
mov
ret
inc
pop
out
iret
adc
push
sti
jecxz
sub
fistpll
outsl
and
jno
movsl
dec
pop
add
pop
adc
sub
mov
lock
mov
popf
insb
dec
rolb
leave
push
jmp
mov
enter
mov
sub
out
arpl
push
xchg
stos
and
out
add
mov
push
pop
jecxz
pop
adc
lea
sub
mov
xchg
and
test
std
mov
pop
ljmp
cld
and
out
mov
data16
loop
push
pop
out
adcl
ja
mov
mov
mov
pop
xlat
mov
std
or
fsubr
push
jmp
loop
loop
in
push
popf
aas
dec
jecxz
mov
inc
and
popf
inc
jp
ret
aad
ss
adc
test
movsl
and
or
or
lahf
jg
inc
pop
dec
cmpl
adcl
mov
stc
inc
popf
jg
loop
pop
fldt
fisubl
out
fnstcw
insb
outsb
xchg
and
inc
sarb
mov
sarl
and
mul
inc
ja
add
sbb
loop
je
pop
sub
jp
lock
push
outsl
shll
cmp
xchg
shl
jnp
mov
push
pop
mov
inc
sub
xlat
push
or
adc
adc
jae
icebp
mov
xor
mov
loope
cmpsl
jns
jnp
lahf
popa
bound
rolb
and
pop
xchg
in
sbb
insb
push
inc
cmp
sbb
mov
or
inc
in
popf
jl
shlb
cli
push
dec
mov
mov
jp
dec
pop
movsb
das
lcall
cld
repz
lea
push
cvtpi2ps
lret
jne
adc
mov
into
push
jg
loop
mov
cwtl
add
lret
jmp
sbb
jl
xchg
mov
hlt
pop
fsubrs
pop
imul
mov
iret
pusha
xor
sub
mov
adc
cli
sbb
add
jb
add
in
adc
xor
dec
add
shll
int
lret
cmp
lret
fsubp
setnp
inc
mov
push
and
jns
cwtl
pushf
ss
lret
sbb
into
mov
mov
cmpsb
cli
dec
outsl
cmp
notl
push
dec
lret
adc
push
and
sub
cmpsl
loopne
fwait
ret
das
adc
inc
aad
and
push
cld
sbb
mov
or
nop
dec
and
stos
and
dec
dec
fidivs
insb
cmp
sbb
push
pop
xchg
inc
jp
pop
rorl
mov
repnz
das
mov
dec
shl
clc
out
mov
sbb
out
adc
shll
mov
push
jb
pop
inc
mov
mov
fwait
test
sbb
in
fiaddl
or
jnp
lock
add
in
mov
sahf
adc
sub
pop
cld
es
fdivp
xchg
fsubrl
mov
push
adc
push
stc
cmpsl
sbb
pop
pop
mov
aas
lret
mov
daa
int
xchg
xchg
dec
mov
jne
test
mov
add
loopne
sub
ss
ret
pushf
movb
dec
inc
arpl
ja
std
out
add
leavew
pop
scas
or
push
push
pop
decb
mov
out
enter
jl
push
insb
out
int
mov
movsl
scas
ja
loop
and
hlt
je
mov
pmulhw
lahf
rclb
mov
into
lock
inc
mov
cmp
out
addb
cmp
fwait
lret
jge
or
push
dec
ret
popf
sbb
pop
insb
cmp
out
outsb
cmc
lock
mov
sti
sbb
add
or
xchg
bound
jg
mov
mov
fidivl
arpl
and
jg
arpl
loope
pop
sbb
push
popa
sub
xchg
push
and
jnp
inc
sbb
loope
sub
lcall
ss
js
jp
dec
fstl
add
dec
js
ret
cmpb
xor
into
mov
ljmp
popa
and
shrd
jecxz
jns
mov
sub
inc
add
or
jp
enter
loop
shll
sbb
shlb
xor
rcrl
sbb
mov
fsubl
arpl
mov
das
jecxz
pop
test
push
or
pop
mov
cmp
mov
mov
sub
xor
in
roll
lret
insb
jae
ss
pop
insb
sub
cli
push
jne
mov
fisttpl
mov
pop
dec
loop
loopne
outsl
ja
cld
jne
flds
adc
lods
divl
in
ljmp
scas
dec
addb
cmpb
pop
idivb
fcomps
ljmp
mov
int
das
and
cmp
inc
dec
movsb
push
pop
popa
lods
shl
test
cmpsl
dec
dec
shl
cmp
cld
fmulp
aam
ds
push
out
movsl
mov
loopne
add
mov
mov
ds
sbbb
ljmp
lods
or
icebp
enter
sub
out
lds
push
neg
mov
xchg
ljmp
cmc
and
js
call
sub
xchg
daa
das
xchg
into
jb
jbe
xor
ja
pop
mov
add
jns
ja
cmpsb
test
pop
lret
cld
data16
pusha
push
repnz
xor
jl
aam
mov
sbb
sub
cwtl
js
lahf
lret
cmc
daa
dec
popa
insl
fwait
imul
imul
jecxz
in
xchg
pop
mov
cmp
pop
js
addl
out
movsl
or
or
movsl
cmpsb
cmp
inc
aad
jmp
test
sahf
cmpsb
pop
and
cmpsl
xchg
cmp
jo
jle
js
mov
leave
mov
mov
js
cmpsl
loopne
lret
sbb
push
jb
fwait
or
dec
dec
mov
mov
pop
aad
cmpsb
mov
orl
xchg
jns
insb
out
std
mov
fdivr
ds
or
jae
orl
jns
adc
loopne
jl
xor
loop
enter
xchg
sub
xchg
mov
movsb
dec
cmc
jno
xchg
pop
push
out
shll
cmp
sar
lahf
pop
sub
jbe
ret
sub
insl
inc
jne
cli
fisttps
outsl
xor
add
popf
push
jns
and
cmpsl
mov
push
mov
das
mov
jbe
pop
scas
cmp
cmp
xchg
mov
test
mov
sbb
xchg
add
jmp
xchg
add
sbb
fcom
in
fidivl
adc
test
scas
or
mov
mov
pop
aas
cmp
cmp
iret
cmpsb
pusha
lret
jno
and
adc
xchg
push
cmp
cmp
lea
pop
adc
test
and
cwtl
mov
mov
std
adc
lock
int
leave
cmpsb
sbb
out
mov
lods
and
push
test
fisttps
ss
ror
dec
dec
fisttpll
gs
loopne
imul
cmpsb
xchg
cwtl
jle
scas
orb
andb
stos
into
ficoml
sub
lea
das
jg
fcoms
sub
sub
mov
add
push
ss
mov
adc
inc
or
hlt
xor
and
dec
or
ret
mov
mov
sub
xor
lods
jno
gs
pop
push
jae
leave
das
out
sub
enter
inc
jb
xor
sub
cltd
mov
in
lret
in
sti
imul
aas
push
jge
insl
inc
xchg
mov
sbb
jmp
sbb
push
test
jns
jnp
or
pop
lcall
xchg
inc
sbb
push
je
lock
adc
out
adc
adc
inc
leave
sbbb
jmp
outsl
cwtl
fcmovbe
clc
sub
lahf
test
out
sub
test
jmp
mov
ret
sbbb
addr16
mov
push
mov
pop
pop
xchg
cmp
daa
jp
and
aad
mov
repnz
aaa
xchg
fstl
add
sub
adcl
cmp
cpuid
das
nop
popf
mov
das
outsb
subb
dec
xor
or
cmp
fmull
dec
fildll
add
mov
cmp
adc
sbb
adc
divb
lahf
fisubrs
iret
lret
pop
test
ljmp
lret
push
adc
roll
mov
pop
out
inc
icebp
ja
subb
out
call
inc
pop
les
mov
daa
outsb
into
jbe
and
jl
push
push
sub
mov
in
jmp
jb
fdivs
sbb
pushf
imul
popf
pop
clc
daa
sub
xchg
nop
emms
out
pushf
dec
sbb
mov
xor
add
xor
cmpl
roll
dec
lods
std
dec
mov
xchg
mov
pop
or
sub
mov
add
pop
shr
fdiv
nop
repz
pop
inc
and
rcll
out
outsb
sub
test
xchg
xchg
out
mov
daa
dec
jo
cmp
mov
xchg
loope
add
sbb
sub
cmp
xor
jb
hlt
stos
bswap
adc
xchg
out
fcmovu
jmp
loope
cmp
mov
jmp
outsl
sbb
xchg
ja
jo
push
in
cwtl
into
pop
imul
jg
push
jge
mov
adc
sub
cmp
idivb
aaa
xor
adc
in
mov
loope
scas
sub
jbe
mov
fistl
loop
lret
push
and
stos
sub
cmp
lods
iret
test
ss
arpl
cltd
push
mov
push
test
adc
popf
mov
in
jb
xor
leave
or
xchg
jp,pn
sub
adc
xor
dec
pusha
lock
in
mov
popa
inc
mov
dec
mov
and
jns
sub
cmpsb
addr16
mov
fldt
in
ret
fwait
into
inc
gs
xor
fisubrs
cmp
sbb
add
ljmp
aaa
lock
cmp
fwait
mov
mov
xchg
dec
hlt
inc
leave
push
in
or
mov
mov
ljmp
setnp
outsb
and
cmc
or
push
inc
or
jae
ds
push
sub
mov
loope
cmp
outsl
adc
sub
mov
jae
aad
xor
add
push
jb
fidivrs
stos
gs
pop
inc
xor
push
add
in
mov
or
or
in
jnp
xor
mov
shl
adc
fwait
dec
js
call
xchg
rcrl
or
push
pop
sti
jmp
lds
rcl
pop
stos
shl
cwtl
sahf
adc
xor
loopne
push
dec
insl
adc
fistl
inc
int
add
push
add
rclb
bound
push
xchg
push
mov
cmc
adc
or
xor
mov
add
dec
shlb
cmp
test
mov
lock
xor
push
cmp
pop
pop
pop
lds
or
mov
arpl
dec
pop
xor
les
mov
cmp
xchg
inc
cmp
sti
fldcw
jp
xchg
dec
pop
iret
lods
test
cmc
aam
lds
popf
cmp
and
sub
fdivr
fcompp
loop
jmp
add
addb
mov
add
cld
push
call
clc
dec
sbb
jns
cmp
outsl
enter
mov
mov
mov
idivb
jg
stos
stos
test
stos
sub
mov
cld
push
fidivl
int3
out
ret
mov
xchg
xor
jge
ja
cmpsb
dec
popa
fistps
mov
dec
lods
mov
mov
loop
jb
sar
jp
mov
mov
pop
fnsave
push
xor
jno
rcll
in
fcmovnu
push
ljmp
push
mov
lods
pop
data16
cmpsl
xor
push
mov
notb
test
pusha
enter
xor
xchg
scas
lret
fistpll
xchg
arpl
push
jae
movsb
add
ss
out
inc
pop
or
xchg
filds
push
stc
fistps
xchg
sbb
or
rorl
test
fnstcw
cmp
cmp
or
js
iret
test
push
cmc
and
icebp
adc
jg
shl
add
mov
out
sub
orl
ss
sahf
mov
xchg
repz
mov
inc
fnsave
insl
mov
pop
jo
jno
adc
lret
scas
in
mov
add
fdivl
mov
pop
ret
adc
repnz
mov
aad
fwait
xor
stos
ror
jmp
cmp
adc
or
aaa
nop
bound
mov
push
push
pushf
push
pop
adc
lret
aas
out
mov
in
aas
nop
or
xor
cmc
pop
mov
int
dec
dec
xchg
movsl
pop
xchg
les
pop
mov
out
mov
push
lret
ret
sub
pop
movsb
jmp
aaa
dec
xchg
dec
es
scas
pop
add
jl
push
dec
outsl
inc
out
fs
xor
shlb
push
or
add
repnz
pop
cmp
in
push
das
mov
sub
cmc
ret
dec
mov
dec
lds
mov
fildl
test
xchg
xlat
mov
mov
sbb
sbb
or
scas
out
fucom
in
fildll
fiaddl
jmp
mov
mov
fiadds
fwait
call
clc
inc
test
fidivrs
test
pop
in
inc
clc
pop
push
pop
ljmp
inc
push
add
dec
outsb
mov
pop
dec
sti
ljmp
scas
push
repz
adc
cmp
sbb
xor
mov
test
adc
sbb
sbb
inc
dec
pop
dec
lods
push
mov
rcl
stc
jmp
pop
cltd
test
jae
repz
test
jb
xchg
ficomps
mov
notl
mov
pusha
pop
sub
bt
fsub
and
push
test
loope
das
cmp
cltd
cs
sub
test
cli
xchg
xchg
mov
jo
mov
inc
cmp
push
mov
adc
stc
dec
mov
xchg
or
ds
xchg
inc
iret
sbb
cmc
fisttps
stos
mov
and
lock
push
xor
daa
xorl
loopne
push
mov
mov
mov
je
jg
sbb
mov
rol
mov
xor
sub
adc
sbb
adc
cltd
movsb
cli
mov
inc
mov
jecxz
jle
je
fdivrs
repnz
into
leave
cmpsl
cmc
sub
dec
arpl
imul
ljmp
addr16
xor
mov
push
sbbb
out
mov
out
dec
sahf
push
pop
dec
push
mov
pop
das
sti
aas
mov
cltd
sahf
out
cmpsl
push
into
int
mov
mov
jecxz
movsb
add
mov
lahf
pop
das
and
xor
xchg
push
cmp
in
mov
pop
hlt
push
je
cmpl
jnp
movsl
inc
push
loope
test
in
push
jmp
fdivs
pop
insb
push
push
cmpsb
fcoml
cld
lods
test
js
lods
adc
rol
xchg
test
je
test
dec
pusha
test
aaa
testb
loopne
sub
jecxz
and
mov
push
push
xor
mov
std
dec
js
inc
pusha
fsts
bound
rcrl
or
fwait
mov
mov
adc
pop
cltd
xor
jne
xor
ret
negb
pusha
sbb
push
and
loop
add
daa
add
adc
jecxz
lods
das
stos
xchg
fwait
push
pusha
add
xor
push
ficoms
faddl
jp
push
loop
lock
jnp
loope
jmp
out
loopne
les
sub
add
sub
rorb
cs
filds
mov
mov
lahf
cltd
push
fiaddl
sbbl
push
xor
dec
inc
inc
mov
adc
xorl
es
mov
push
or
lahf
jge
in
in
pop
imul
push
sub
loopne
mov
rolb
push
js
mov
xor
mov
mov
pop
ja
cmp
out
mov
imul
daa
sbb
stos
lret
pushf
jmp
mov
fimull
inc
push
jbe
xchg
xor
fldenv
pop
stos
adc
sbb
shl
mov
inc
fimuls
fs
rcr
pop
sbb
das
lret
sti
cmpsl
test
bound
sahf
out
popa
jo
lods
loope
push
jb
add
ret
lcall
add
cmpsl
xchg
leave
outsb
push
dec
div
imul
pop
loope
inc
sbb
xor
sti
mov
sbb
je
aaa
xor
movsl
cmp
imul
rcll
lods
cli
add
int
popa
es
es
push
in
adc
fsubrs
mov
dec
jo
popf
pop
vhaddpd
out
and
push
pop
cmp
add
sbb
mov
pop
xchg
adc
push
mov
mov
inc
mov
lsl
dec
ret
lea
es
ljmp
inc
xchg
add
fbld
jg
xchg
int3
xchg
jge
mov
cmp
xchg
jb
mov
fiadds
lock
sbb
cmpsl
ljmp
jbe
dec
int3
sbb
lds
out
cwtl
sbb
push
lods
addr16
shlb
jne
je
sub
out
test
push
or
in
popf
je
loopne
sbb
cmp
mov
adcb
imul
pop
inc
stos
cmp
rcrb
jg
inc
cmp
push
mov
push
sti
xor
fs
ja
mov
mov
adc
add
sub
mov
push
pop
lock
stc
or
jl
in
mov
test
lea
fadds
jbe
pop
fwait
loop
sbb
std
popa
popa
jl
cmpl
dec
movsl
mov
aam
inc
xlat
sbb
outsl
popa
jecxz
ja
cmp
imul
add
out
bound
mov
pop
fdivl
mov
push
fidivrl
mov
push
mov
pop
dec
stos
push
mov
sub
xchg
xor
fistpl
mov
mov
xlat
incb
mov
dec
pop
andb
sarl
aas
popf
test
pop
add
sub
sahf
cwtl
sub
adc
cwtl
and
pushf
cmpsb
jno
mov
lea
in
pop
cmp
movsb
xchg
cmp
sub
xchg
nop
inc
test
sbb
cmp
imul
clc
dec
jb
pop
jmp
js
fcompl
dec
adc
leave
push
jge
loop
and
js
push
mov
outsl
mov
hlt
leave
adc
stc
js
iret
test
mov
xchg
and
sub
sbb
shrl
mov
push
mov
and
cmpsb
and
pop
jns
or
add
ds
lea
or
out
fisttps
mov
out
imul
push
and
outsb
sti
adcb
xlat
scas
pop
add
lods
lahf
imul
pop
and
popf
push
lcall
scas
out
out
scas
xor
add
test
xchg
push
lock
cmp
sub
mov
dec
jo
push
jno
xor
gs
ja
les
or
xor
adc
xor
jge
pop
pusha
shlb
inc
cltd
leave
cmp
xor
mov
int3
rol
xchg
cmp
fistps
xchg
pop
decl
test
or
adc
mov
mov
lods
inc
sarl
repz
sbb
add
popa
in
cmpsb
idiv
xor
arpl
movsl
movsl
and
daa
fistpll
fs
subb
addr16
mov
inc
xchg
pop
mov
mov
les
push
mov
addr16
push
xor
jp
xor
pop
cmc
call
les
sbb
xor
or
sub
mov
jb
inc
jmp
jae
stc
out
mov
sub
and
or
xor
pushw
jecxz
cmp
loop
dec
arpl
push
sarl
or
mov
aam
or
out
cli
xchg
mov
mov
or
xor
mov
or
inc
xchg
lds
sbb
cwtl
sub
cwtl
mov
lret
pop
xchg
or
mov
iret
fdivrs
and
fs
push
movsb
xor
sub
loope
jo
inc
mov
and
es
cmp
adc
and
mov
fmul
movsb
out
lock
cmp
mov
cmp
mov
adc
jp
push
jg
mov
test
mov
or
push
gs
cmp
jnp
jge
ja
or
shll
movsb
sub
lret
and
sahf
or
push
orl
stos
jmp
or
daa
dec
mov
mov
pushl
mov
sahf
imul
lock
jecxz
sbb
in
ljmp
sub
fbstp
cltd
cltd
es
repnz
cmpl
mov
leave
test
dec
loope
rol
jge
cld
and
hlt
inc
mov
and
dec
jg
xchg
test
push
push
sbb
mov
into
and
adc
mov
dec
inc
jmp
mov
loope
add
loop
js
and
adc
inc
or
cli
mov
push
mov
jb
pop
mov
fdivl
dec
out
sbb
mov
inc
jl
stos
cmp
cmp
cli
mov
data16
cwtl
and
xor
mov
fcoml
js
or
bound
pop
in
adc
leave
imul
add
les
std
sub
es
arpl
rcrb
and
jmp
test
cmpsl
or
std
or
sub
test
adc
lahf
jl
dec
xor
fwait
xchg
xchg
mov
inc
in
stc
cmp
data16
mov
mov
mov
call
cmpl
in
pop
inc
negl
negb
and
gs
adc
pop
std
sub
or
scas
and
mov
pop
push
std
mov
jmp
add
addr16
fadd
stos
std
ret
adc
jae
mov
and
ss
out
int
push
in
add
mov
dec
fs
pop
popf
fldt
sbb
and
mov
sub
pusha
lods
inc
popf
cs
mov
ja
xchg
mov
inc
rorl
outsb
loopne
sub
pop
sbb
int3
add
push
imul
rorl
sahf
sub
adc
xor
cmp
xchg
lret
lcall
add
cmc
xor
jecxz
aam
clc
push
imul
aam
xor
fdivp
in
es
push
dec
add
in
inc
sahf
mulb
mov
and
iret
out
faddl
icebp
iret
imul
inc
adc
pop
fnstenv
popa
out
lret
outsb
mov
xor
hlt
decb
fidivl
pop
xor
test
and
adc
xchg
pop
stc
jle
jecxz
xlat
xlat
mov
mov
mov
arpl
movsb
push
sbb
xor
cli
fwait
xchg
xchg
cmp
or
cmp
fs
aaa
clc
rcrl
jmp
inc
mov
dec
push
pop
bound
dec
and
fisubs
xor
cmp
mov
push
jle
push
sahf
jbe
push
test
jl
fldcw
mov
cltd
xor
aam
mov
or
push
push
adc
cwtl
test
pop
jge
add
mov
test
outsb
cmovbe
jo
jbe
and
cwtl
xchg
dec
mov
shlb
loope
fwait
push
dec
jl
cmp
push
pop
mov
imul
pop
adc
arpl
add
les
in
xchg
jo
mov
mov
iret
in
push
sbb
movsb
push
cmp
jbe
lret
inc
fucom
outsb
into
ljmp
notb
mov
inc
inc
and
in
sub
jne
sarl
aam
mov
inc
adc
imul
cmp
addl
rcrb
pop
sbb
inc
cmpsb
or
and
push
sub
iret
loopne
mov
in
mov
pop
pop
jbe
jno
mov
imul
dec
jbe
scas
sub
add
cmp
out
adc
call
aad
out
cmpsb
movsl
rclb
dec
push
dec
cmp
shll
icebp
aas
and
test
and
sub
loopne
daa
jbe
add
cmp
aaa
cmp
lods
iret
lret
notl
cmp
cmp
or
daa
dec
pop
mov
mov
fdiv
sar
mov
pop
int
fwait
inc
outsl
xchg
je
or
shll
mov
aad
pusha
lods
xor
mov
adc
sarl
mov
cmp
stos
mov
mov
shr
jle
add
mov
push
out
es
fdivs
cmp
stc
les
xchg
or
fwait
js
lret
das
ret
jl
test
sarb
mov
jle
leave
inc
mov
mov
inc
testb
sbb
enter
cmpl
xor
in
jae
mov
rolb
in
pushf
fbld
mov
subps
push
mov
xchg
pop
xor
jnp
repnz
lea
jecxz
cmp
pop
and
loopne
fisttpll
pushf
xor
and
xchg
xor
arpl
xchg
inc
dec
out
rcll
xor
push
cmp
xor
sbb
push
inc
iret
push
cs
mov
add
jle
bound
jbe
in
sub
test
mov
pop
sbb
arpl
roll
and
push
pop
fdivp
cmc
cmp
jbe
movb
popf
xchg
mov
lods
add
pop
call
push
lods
imul
dec
cmp
adc
outsb
cltd
sbb
cmpsb
stc
out
addr16
add
loope
sub
mov
sbb
xchg
in
jmp
add
push
cli
mov
adc
add
lcall
mov
daa
inc
push
cmp
lock
dec
loope
sub
cli
jb
pop
jecxz
pop
pusha
adc
mov
idivl
pushf
lret
or
aam
les
sub
shll
pop
cmpsb
imul
xchg
neg
cmp
mov
inc
mov
push
mov
movb
clc
loopne
add
lods
popf
bound
imull
add
call
popf
mov
pop
addl
add
aaa
xlat
ret
ljmp
mov
push
inc
cmc
push
rorl
hlt
pushl
inc
sub
loope
insl
cmp
sub
cmp
shlb
jp
mov
jmp
popa
jae
or
movsl
adc
call
incl
ret
push
data16
popf
aaa
cmp
pop
jns
mov
shlb
popa
cmp
inc
sbb
sub
orl
sbb
pop
lcall
inc
dec
mov
sub
mov
pusha
fisttpl
addr16
jecxz
pop
or
xchg
jae
sbb
cmp
push
fists
add
stc
xchg
and
dec
cmp
cmpsl
hlt
ret
fcoms
jl
repnz
or
add
mov
pusha
out
pushf
fstps
pop
and
dec
dec
push
in
push
dec
mov
int
imul
add
sbb
pop
repz
arpl
cld
adc
lcall
scas
sbb
insb
mov
jl
cmp
je
sbb
out
mov
mov
mov
sub
mov
fldcw
mov
or
jmp
or
imul
in
adc
mov
shlb
and
movsl
repnz
push
mov
lds
jl
add
sbb
repnz
mov
mov
hlt
test
out
cmp
mov
mov
xchg
sub
aaa
flds
lods
pushf
cmp
ss
inc
loopne
sbb
jae
repnz
in
mov
adc
push
scas
xlat
loope
rcll
sbb
int
shll
cmp
mov
push
cmp
pop
lods
adc
pop
jb
lods
stos
dec
or
pop
pop
fs
stos
mov
xor
imul
add
sar
je
ljmp
adc
aas
aam
and
nop
add
mov
sbb
data16
jbe
movsl
imul
cmpsb
inc
ljmp
outsl
sbb
div
mov
push
mov
or
xchg
dec
mov
mov
andl
adc
cltd
inc
and
insb
jg
pop
mov
jb
lock
jae
push
pop
js
sub
jo
setl
cltd
push
int
test
dec
sub
cmp
das
cs
insb
andb
inc
fnsave
mov
daa
dec
cmp
orb
sbb
addl
movsb
stos
cmp
test
push
dec
sbb
push
and
inc
sub
mov
xor
insb
xor
cmp
mov
or
pusha
ds
cmp
dec
loopne
pop
in
out
ljmp
cmp
push
or
push
pop
or
xor
scas
add
xchg
cli
mov
mov
sbb
out
dec
xchg
sub
cmp
inc
xchg
mov
mull
arpl
xchg
sub
sbb
mov
in
xor
idivb
mov
and
lds
sbb
or
jns
mov
jmp
adc
add
fcompl
adc
sarb
outsl
lea
mov
mov
push
sbb
pop
das
push
jns
fcmovnu
or
pop
add
pushf
movsl
into
sbbl
mov
fstpl
pop
nop
out
mov
cmp
sti
add
stos
testb
pop
adc
je
dec
fxch
mov
mov
jl
ljmp
xor
pop
repnz
fdiv
cs
push
into
repz
pop
jae
mov
inc
push
push
cmp
cmp
mov
and
rorl
inc
pmaxsw
add
sar
rolb
pop
cwtl
cmpsl
cmp
xchg
ss
hlt
and
xor
sbb
test
fcompl
pushf
icebp
loopne
test
movsl
in
mov
push
inc
insb
test
jg
daa
and
stos
daa
out
ljmp
adc
jne
add
loopne
dec
fisttpl
inc
xor
outsl
iret
mov
in
mov
adc
jecxz
test
xor
ja
push
mov
xchg
test
popa
jae
pop
cmp
mov
clc
idiv
pop
inc
icebp
cmc
push
aaa
mov
inc
or
fisttpl
mov
adc
pop
loope
mov
push
andl
xchg
pop
test
push
cwtl
sub
mov
pusha
dec
mov
xor
sbb
cmpsl
aas
jae
sarl
and
mov
mov
test
mov
sbb
push
mov
mov
testb
orl
mov
hlt
jbe
aam
insl
cmpsl
orl
int3
mov
cmp
loop
aad
mov
jmp
pop
adc
sub
scas
mov
mov
les
sub
push
inc
mov
insb
adc
pop
inc
imul
cmp
test
or
inc
adcl
and
fcom
nop
rcr
cwtl
outsl
fnstenv
int3
mov
in
iret
js
mov
sbb
cld
cmpsl
je
in
dec
or
push
repz
int
add
mov
xchg
dec
push
mov
add
pop
and
mov
mov
fnsave
js
sbb
xrelease
mov
jp
sarb
icebp
mov
cmp
incl
adc
mov
test
mov
or
and
jnp
andl
in
out
pop
popa
popf
lret
add
mov
insb
mov
jb
dec
jne
jnp
fsubrl
insb
into
sub
sbb
cld
xlat
mov
pusha
hlt
clc
cmc
xor
xor
icebp
adc
fs
push
mov
adc
gs
xor
sti
loope
jno
mov
cld
lahf
rcrb
pop
jmp
jo
sub
jb
dec
fsubl
sahf
js
test
mov
adc
lret
xor
test
dec
mov
push
aaa
push
lock
outsb
nop
xor
pop
mov
and
push
ja
cmp
cmp
mov
and
sahf
or
mov
lods
xchg
pop
movsl
adc
cld
andb
xchg
shrl
lods
and
test
dec
in
cli
aad
setnp
mov
ss
xchg
lock
bound
jbe
stc
aas
das
rorl
rorb
adc
jno
xchg
or
xor
fldcw
mov
jle
movsl
bound
sbbl
dec
lods
fdivl
or
insb
pop
test
adc
repnz
out
push
test
sub
pop
dec
mov
movsb
jno
lret
add
jbe
jne
jae
int3
jns
hlt
fstps
sub
xor
and
jno
add
inc
aas
jns
sub
repz
jl
outsb
aam
jge
push
xchg
jbe
mov
jp
xor
dec
jbe
jp
pop
mov
mov
mov
push
cs
aad
dec
or
xorb
push
xor
mov
dec
dec
sub
xchg
mov
xor
mov
es
in
ss
fistpl
roll
leave
dec
xchg
xor
add
in
cltd
pop
ficoms
fisubl
cmc
mov
pop
xchg
daa
mov
push
mov
loop
and
stos
push
adc
ret
pop
rcr
adcb
data16
arpl
int
scas
push
mov
xchg
inc
jp
shrl
xor
shr
dec
scas
push
fcoms
dec
cmp
jo
push
add
adc
addr16
rolb
or
xchg
out
lods
xchg
fs
push
add
adc
lods
lret
xchg
bound
loopne
sub
ud2
dec
movhps
push
xchg
loope
cs
add
push
add
stos
xchg
lods
test
lcall
loope
cs
lea
addr16
cltd
shr
imulb
dec
xor
jns
sub
test
insl
cmp
inc
mov
loope
mov
sbb
cmpsb
mov
xchg
add
lret
fdiv
scas
jnp
inc
cmp
movsb
iret
add
lret
jl
insb
je
push
jbe
mov
cmp
dec
popa
in
repnz
cmpsl
pushf
jno
jl
rorl
movsb
mov
popf
xlat
das
cmp
inc
cmpsl
jmp
rcll
out
testl
cmp
and
ss
insb
and
out
loop
cmp
repz
test
rclb
int3
je
sarb
mov
dec
and
lock
js
dec
xchg
and
xlat
in
lea
sub
arpl
lret
lahf
fldl
ret
mov
mov
pop
jo
loope
movsl
inc
jns
dec
sub
dec
and
hlt
cmpsb
push
mov
test
cmpsl
adc
or
mov
inc
push
int
daa
lret
xchg
add
or
jmp
stc
stos
adc
jle
xchg
xchg
mov
push
mov
and
test
cli
fs
add
pusha
pop
and
mov
popa
mov
lods
inc
in
adc
mull
fimuls
ficomps
jnp
jb
leave
aaa
mov
out
and
inc
in
inc
pop
and
je
in
repz
pop
outsb
stos
cmp
movsb
sbb
push
scas
inc
arpl
mov
sub
inc
test
test
out
fsubrl
fildl
pusha
jg
sbb
add
mov
fistpll
inc
add
jg
fisubl
xchg
lea
andb
stos
pop
push
pushl
pop
pop
nop
dec
movsb
cld
int
and
into
inc
pop
fdivrs
mov
pop
add
cmpsl
pop
dec
xchg
icebp
xchg
xchg
sub
sbb
jl
dec
int3
xor
fcmovnb
aad
push
fnstenv
jae
stc
cmp
lds
aaa
xor
lock
pushf
fdivrl
iret
hlt
inc
fadds
inc
jne
das
fs
and
jmp
fwait
and
cmp
pop
sub
pop
jnp
mov
test
mov
stos
outsl
xrelease
clc
into
lods
or
lret
push
pop
jnp
scas
mov
mov
sti
adc
mov
jl
jb
push
add
adc
adc
cmpsb
or
mov
jge
lea
outsl
lcall
and
push
rorl
clc
jg
jg
mov
aam
pop
sbb
sbb
or
mov
fiadds
je
mov
jbe
jne
cwtl
fisttpll
aad
push
das
nop
cmp
fld
jmp
push
or
cs
jge
cmp
das
iret
fwait
outsl
loop
mov
adc
in
add
stc
sub
loopne
jmp
test
ljmp
adc
imul
push
and
cltd
sbb
inc
mov
out
mov
dec
mov
or
out
aaa
jg
loope
and
aad
mov
and
pop
or
add
jge
mov
or
cltd
mov
cli
lea
mov
push
scas
mov
sub
cmp
push
repz
scas
popf
out
cmp
pop
sub
enter
jo
add
add
jb
out
cmp
mov
shll
movsl
adc
fbld
dec
sti
fcoml
in
adc
jne
jnp
xchg
iret
fstpt
hlt
sbb
push
fsts
adc
sub
jns
sub
push
adc
scas
cmovle
xor
enter
shrb
aad
insb
jnp
jg
push
nop
push
push
jnp
bound
decl
in
sbb
ret
int3
pop
subl
lret
sarl
scas
sub
jae
cmpsl
in
cmp
or
push
inc
xor
js
xchg
loope
lock
xor
push
iret
xlat
pusha
and
xor
aad
mov
jmp
pop
movsl
mov
ds
mov
adc
mov
fsubl
jp
jecxz
inc
dec
decl
ja
xchg
sub
add
enter
psllw
test
push
scas
jg
push
mov
cltd
cmpsb
mov
xor
out
xor
lea
push
mov
rclb
dec
xchg
mov
xor
or
xor
fnsave
and
mov
xor
mov
mov
or
add
mov
push
push
pop
push
out
scas
cltd
outsb
mov
addr16
add
adc
push
cmpsb
hlt
lret
lea
mov
fcompl
sbb
adc
popf
xchg
and
lret
ret
mov
jo
xlat
lods
jnp
jle
xor
jp
stc
out
mov
inc
mov
fisttpll
jbe
jle
xor
xchg
movsl
jp
cmp
add
pop
inc
cmp
cmp
jl
mov
movsl
fwait
add
add
and
inc
fwait
cwtl
xchg
sub
sbb
add
push
pop
lds
mov
ret
push
adc
sub
out
orl
jg
fidivl
mov
sub
rorb
inc
dec
inc
pop
jae
jns
out
out
mov
inc
lahf
and
nop
fiadds
rcll
push
scas
imul
pop
hlt
lret
and
test
in
xor
les
ret
mov
mov
ljmp
clc
fdivrl
nop
addr16
jle
mov
jbe
pop
mov
pop
and
andl
adc
xor
push
aas
cs
jae
or
pop
fidivl
mov
lods
inc
popf
cs
jns
lea
push
pop
in
sbb
inc
jle
or
sub
stos
fldcw
sbb
mov
sub
xchg
mov
sub
adc
push
jp
dec
dec
and
sub
sub
aaa
loop
dec
cltd
xchg
sbb
and
pop
mov
or
fwait
loope
mov
fwait
cld
jmp
fsubs
js
lret
subb
out
mov
fldcw
inc
mov
add
rorl
jbe
xchg
lods
cmp
mov
adc
addr16
out
mov
inc
fxch
lock
loopne
lahf
and
outsb
insl
push
lahf
sbb
xlat
dec
push
push
xchg
les
xor
add
rol
or
lea
dec
add
aaa
jge
stos
mov
and
pop
jo
inc
ficompl
movswl
sub
loope
xchg
sbbl
sub
test
pop
arpl
push
lock
imul
xchg
sbb
xor
adc
dec
push
and
cmp
cmpsl
push
shll
xorb
pop
stc
or
lahf
lock
xchg
lea
popf
dec
adc
loope
roll
adc
jb
cs
loopne
mov
mov
adc
test
or
movsl
lods
ret
aas
lods
cmp
or
mov
test
jo
mov
data16
jnp
in
jg
adc
lock
movb
jmp
sbb
mov
mov
stos
push
cwtl
sbb
xor
cld
sti
movsl
cld
push
cmpsb
adc
mov
enter
xor
adc
cmp
fdivrl
rcl
fisubrs
ja
cmpsb
gs
cli
stc
cmp
stos
fmull
mov
sub
add
or
mov
jmp
dec
fiadds
jl
cmp
in
jne
jnp
fwait
sti
ss
sub
inc
inc
sub
mov
outsb
xor
and
mov
adc
mov
pop
lcall
stos
lock
roll
lahf
pop
cli
sub
xchg
add
or
fnstsw
jo
sarl
push
aad
xchg
sbb
pop
imul
jge
push
or
sub
in
pop
or
cmp
cmc
fwait
sbb
mov
xchg
std
mov
xchg
scas
aaa
ret
jbe
lock
push
insb
mov
je
xchg
ljmp
movsb
pushl
and
jae
test
and
je
pop
mov
inc
xchg
cmp
adc
aad
xchg
scas
or
push
shll
and
add
jo
pop
or
sub
roll
fildl
lahf
inc
out
cmp
and
push
jge
sbb
sbb
mov
cmpsl
clc
imul
je
cmp
mov
std
add
fucom
ja
outsb
lea
jecxz
out
inc
adc
mov
test
xchg
cltd
in
sahf
adc
push
leave
mov
cli
dec
clc
sub
notl
scas
mov
loopne
popf
or
iret
pop
cmc
sti
add
push
out
clc
inc
div
imul
sub
fdivr
add
loope
push
cmp
sbb
popa
pop
movsl
cmp
sbb
dec
sbb
bound
in
dec
inc
std
lret
push
cmp
aad
cmpsl
jnp
rclb
in
cmc
mov
jnp
mov
aas
icebp
fstpl
outsb
or
filds
or
or
jmp
outsb
inc
aam
ja
out
mov
or
stos
pop
fldenv
mov
iret
mov
add
call
imul
inc
nop
jbe
lcall
pop
mov
xlat
aad
jb
sub
sbb
aad
inc
pop
pop
adcl
mov
dec
ja
cmpsl
ret
add
cld
popf
fiadds
jne
push
dec
lret
lahf
adc
xchg
loope
sbb
adc
jnp
push
jp
xchg
cltd
jne
outsl
xchg
inc
dec
dec
pop
pop
cmpsb
jae
std
sub
push
lds
aas
cmpsl
xchg
fsubr
dec
mov
lock
iret
inc
inc
xchg
mov
inc
outsb
mov
jge
jns
fisttpl
dec
inc
stos
inc
in
jno
xchg
push
shlb
sarb
int3
mov
notl
mov
test
push
test
rcr
pop
add
sbb
jle
cmp
xor
push
in
nop
test
cmpsl
adcb
fwait
les
xor
xchg
icebp
ret
stc
xor
add
das
pop
divb
push
testl
fsubp
jmp
in
adc
notb
mov
bound
ss
stc
xchg
xor
lret
int3
fwait
xor
push
push
cmp
sahf
adc
and
mov
jnp
enter
jnp
ljmp
mov
testb
enter
pop
or
dec
repnz
adc
dec
pushf
into
inc
dec
insb
out
ret
ds
pop
lcall
cli
mov
push
fcom
ret
jbe
aam
addr16
lods
cmp
and
mov
mov
imul
ljmp
xchg
aad
loope
subl
jge
jl
mov
jo
lahf
add
divb
int3
lret
mov
mov
jmp
mov
xchg
dec
cli
ds
out
mov
inc
adc
push
in
push
fildl
pop
pushf
mov
add
sub
mov
jae
mov
lea
fbstp
loop
das
push
mov
cmp
loope
sub
stos
mov
adc
stos
int3
lods
mov
clc
xchg
fidivrl
inc
dec
dec
add
dec
jmp
sbbl
adc
adc
gs
jge
aad
dec
movsb
pop
lods
andl
outsl
mov
mov
lods
adc
movsl
dec
test
mov
es
adc
pop
jnp
enter
adc
mov
xor
and
xchg
dec
cs
loopne
xchg
jbe
mov
test
adc
or
jb
lea
or
imul
push
xchg
scas
cmpb
clc
ret
push
movsl
sub
scas
leave
test
ffree
xchg
jmp
inc
xchg
add
jbe
inc
or
call
mov
push
xlat
mov
jl
mov
pusha
pop
daa
pop
es
std
das
cmpsl
inc
push
mov
xor
mov
adc
les
enter
pop
lret
testb
ja
jae
cwtl
add
mov
jp
enter
jp
hlt
movl
movsb
lds
add
xor
xor
xor
cmp
adc
shlb
inc
nop/reserved
cmc
xor
repnz
inc
stos
data16
jns
or
dec
inc
icebp
out
lods
sbb
mov
test
cmp
sahf
arpl
loope
pop
push
lahf
frndint
stc
shrl
xor
pushf
cmp
lret
mov
and
icebp
call
xchg
scas
lret
dec
mov
sarb
mov
arpl
mov
push
hlt
pop
sahf
mov
stos
sbb
imul
dec
in
fisubs
xchg
add
sarb
push
in
loopne
aad
jb
mov
inc
dec
je
cmpsl
xorl
pop
mov
jne
cmpsl
shl
jge
sbb
fnstenv
mov
pop
stos
arpl
pop
mov
and
hlt
fidivs
shll
mov
and
jmp
cmpsl
jne
xlat
rcll
and
scas
push
scas
pushf
aam
mov
mov
jne
ret
dec
xor
xchg
push
dec
lret
push
scas
jecxz
sub
in
xlat
fimuls
sbb
fistpl
sahf
rcr
fisttpll
push
inc
iret
push
out
sub
jnp
xchg
cmc
imul
dec
add
mov
xor
stc
xlat
rorb
sti
push
insb
fdivp
jne
out
sbbb
movb
popa
push
jle
cmp
out
xchg
stos
inc
sarb
les
cmpsl
inc
pop
pop
xlat
sub
push
les
gs
adc
sub
push
pop
cmpsb
push
or
xor
or
adc
lods
loope
orl
push
sbb
stc
adc
mov
adc
cmc
push
inc
xchg
in
sarl
rclb
loop
push
inc
push
sub
or
pop
mov
lds
inc
sbb
and
bound
nop
mov
jnp
mov
lret
xchg
lds
push
or
xchg
add
pop
into
out
incb
sbb
int
mov
int
mov
cmpsl
cmc
xor
lods
jb
and
mov
addl
shlb
fstps
ret
sub
add
pop
and
add
lock
out
repnz
in
addl
pop
pop
xchg
jp
cmp
push
add
loopne
mov
add
sbb
sub
adc
icebp
cmp
popf
lret
jg
mov
add
lcall
mov
xor
fsubrp
xchg
outsl
test
ds
xchg
in
sahf
jmp
or
pop
and
inc
cmc
add
pop
mov
jns
sbb
lods
sbbl
fcmovu
out
sub
xor
pop
enter
dec
pop
jno
add
stos
mov
outsl
lcall
cwtl
mov
sbb
mov
ficompl
ret
into
daa
adc
add
frstor
in
lods
or
test
mov
sub
add
xor
xor
pop
inc
jle
into
adc
mov
mov
outsb
or
js
and
add
mov
movsb
inc
adc
cmc
leave
xchg
sbb
mov
rolb
xchg
xor
inc
out
lcall
ret
in
lret
mov
mov
mov
mov
loop
mov
xchg
dec
sub
insb
pusha
cmc
mov
bound
xor
lea
lret
movsl
loopne
aad
bound
les
popa
adc
in
dec
lock
pop
add
mov
push
js
mov
mov
sahf
push
jecxz
push
xor
or
pop
add
test
adc
cmpsb
mov
movsb
ficompl
in
inc
or
jnp
in
mov
iret
push
push
stc
mov
mov
cmp
out
ds
xchg
and
test
dec
iret
jne
fldcw
scas
cmp
xor
sti
stos
hlt
cld
jl
movsl
lea
iret
jno
cmp
xor
mov
sub
sbb
jae
mov
and
lea
dec
jp
mov
xacquire
sbb
dec
adc
or
mov
mov
pop
mov
dec
adc
mov
fdivrs
xor
lret
adc
lcall
movsb
out
mov
add
icebp
neg
xchg
push
ljmp
xchg
call
dec
nop
lea
add
jb
mov
adc
fwait
orl
lahf
xor
add
inc
xcrypt-cfb
cmpsl
popa
or
push
fnstcw
sub
jmp
fdivrp
iret
enter
negb
push
bound
cs
lcall
fistl
mov
shl
mov
aad
mov
outsb
push
push
xor
leave
and
ds
icebp
cmpsb
divl
scas
adc
ret
dec
icebp
and
repz
shr
adc
cmpb
inc
hlt
std
rcll
inc
dec
subb
cmpsb
test
inc
sub
test
pushf
inc
push
rcrb
ss
sbb
clc
and
sarb
inc
mov
and
in
cmp
pusha
out
xchg
mov
jb
jmp
xor
jmp
cmc
fnstcw
pop
mov
lods
clc
cwtl
cwtl
xchg
shlb
inc
lcall
aad
cmp
fdivrp
stos
mov
in
push
cmpsl
fldt
cmpsb
mov
push
jno
or
push
sti
pop
neg
mov
and
inc
in
paddsb
adc
xchg
jge
sti
hlt
das
jnp
lahf
sub
mov
lea
icebp
mov
scas
xchg
ficoms
jo
jp
pop
xor
xor
stc
nop
in
jno
in
cwtl
das
dec
test
leave
cmp
jbe
jmp
or
mov
sbb
pusha
in
popf
lret
popf
cmp
dec
std
int
mov
adc
or
lret
xchg
lret
ret
xchg
xchg
xchg
jb
fs
inc
lods
push
xchg
mov
test
xchg
inc
imul
cmc
mov
movsl
lret
add
int3
mov
test
push
mov
ljmp
sti
add
xor
je
cmp
dec
testb
shl
inc
push
fisttpll
and
inc
jl
lcall
jnp
scas
xchg
add
add
stos
cmc
cmp
cmc
fadds
dec
paddusw
sub
push
sub
fadds
hlt
xchg
xchg
dec
inc
jns
sub
push
testb
jae
inc
sub
push
scas
fdivs
addl
jb
xchg
aaa
cwtl
xorl
xor
add
sub
je
jecxz
mov
mov
ja
cld
or
leave
and
enter
sub
xlat
mov
mov
jnp
fwait
pop
arpl
add
les
cwtl
push
sahf
out
lcall
ljmp
or
icebp
xchg
das
jmp
sub
adc
adcl
pop
aad
fdivrp
fiaddl
jbe
fldt
rcl
push
adc
clc
pop
std
jb
aas
xchg
sti
push
sbbb
stos
add
scas
insb
xor
and
inc
jg
xor
add
cli
imul
lods
and
in
mov
pushf
dec
mov
pop
cmp
xchg
cmp
int
mov
jbe
pop
mov
adc
mov
sbb
rorb
ja
cmpl
adc
push
mov
pop
cli
inc
cltd
out
xchg
xor
mov
stos
test
stos
mov
xlat
dec
test
add
push
fstpt
push
and
aaa
mov
mov
jp
hlt
mov
jl
aad
test
fisttpll
push
js
mov
mov
or
jno
fisttpll
sub
dec
insl
mov
inc
sbb
add
dec
xchg
psllw
jle
or
rcrl
xchg
in
cmpsl
je
out
pop
cmp
xor
sub
pop
mov
dec
or
push
movsb
xchg
adcb
mov
mov
sub
push
outsb
insl
shr
pop
test
sbb
jg
dec
jl
mov
dec
adc
addl
mov
push
int3
mov
arpl
insl
sub
ss
data16
mov
push
out
jmp
sub
fistpll
adc
sbb
dec
aad
arpl
pop
and
sahf
pop
sti
add
pop
aam
cld
dec
lret
bound
popa
test
ret
loop
inc
in
pop
or
sub
ret
lock
outsb
fldl
xchg
movl
pop
das
imul
xchg
repnz
out
xor
add
pop
and
fildl
bound
pop
aad
jno
test
adc
dec
jl
cld
sub
cmpsl
jmp
push
and
push
mov
leave
dec
push
push
divl
adc
pop
dec
mov
jg
sub
test
jecxz
dec
or
mov
or
sbb
aam
add
push
call
sbb
xor
test
jle
sarl
out
ds
mov
movsl
adc
fstps
lret
jmp
fnstsw
mov
fists
popl
cwtl
call
or
outsl
mov
push
cld
aaa
xor
sbb
mov
mov
cmp
mov
push
dec
int3
cld
sub
and
sbb
push
push
js
push
pop
outsl
adc
sbb
jnp
inc
jae
adc
add
or
lock
aad
mov
or
sbb
sub
stos
cmp
fbld
dec
push
jb
add
cmp
sbb
lods
jge
repz
enter
jno
pop
mov
movsl
pop
ljmp
movsb
mov
pop
jle
loopne
loopne
jne
cmp
rclb
sbb
sarl
mov
scas
dec
cltd
or
push
mov
mov
mov
stc
push
push
and
sbb
xor
pushf
ds
test
lock
sbb
cmp
jb
shl
mov
jl
stos
movsb
push
xlat
movsb
jle
fwait
cmp
shl
push
push
fadd
outsb
mov
shlb
call
xchg
jge
and
test
scas
lcall
movsb
je
jae
jne
je
pop
jae
negb
pushf
cmp
xor
bound
xlat
mov
push
in
stc
xchg
adc
xchg
pop
test
rcrb
inc
rcr
outsl
subb
jge
mov
xor
dec
sbb
jmp
push
movb
inc
and
mov
xchg
mov
adc
adc
test
inc
out
mov
xor
insb
pop
loopne
jno
dec
hlt
pop
push
or
push
push
cs
cwtl
sub
dec
mov
mov
sub
pop
mov
push
xor
fsubrp
adc
out
dec
xchg
sahf
cmp
cmpl
pusha
in
mov
mov
jle
dec
sbb
icebp
sub
js
dec
nop
cmp
add
das
out
or
xor
lock
leave
stos
xchg
lds
add
cmp
insb
xlat
sti
je
mov
in
movsl
lret
and
pushf
cld
loope
daa
sbb
cwtl
in
mov
xor
sarl
aam
loop
sub
xor
jns
aam
lcall
scas
and
jae
mov
and
lock
lds
in
xchg
mov
repz
in
pop
inc
cmpsl
sub
leave
pop
scas
pop
sub
mov
pop
in
fidivrl
in
subl
pop
sbb
test
jmp
leave
ds
das
adc
jp
fsubr
out
mov
jmp
add
mov
cmp
inc
mov
pop
mov
popa
or
enter
or
cmp
data16
mov
lods
popf
or
and
push
cwtl
mov
or
out
mov
sub
jge
cld
xor
sub
call
adc
push
aam
push
add
push
shr
mov
pop
aaa
mov
imul
mov
mov
pop
iret
and
xchg
into
jge
out
shll
rcrl
out
in
lcall
decb
test
jbe
aas
in
filds
roll
les
je
cmpsb
pop
add
mov
adc
das
and
aad
jae
stos
repnz
dec
daa
cmpsb
and
rol
daa
test
mov
add
push
in
repz
shlb
shl
push
cmpsb
lahf
fs
xor
aam
jecxz
cmp
pop
sub
adc
ljmp
shrb
rep
xor
sbb
fldl
adc
adc
jp
mov
das
leave
outsl
fidivl
and
rep
xchg
pushl
mov
popa
xor
stc
hlt
mov
sarb
push
lret
dec
add
je
push
cli
mov
sub
mov
leave
xchg
push
cmp
jg
mov
xchg
push
push
add
lods
mov
fistpll
sbb
outsl
sub
xchg
cmp
dec
push
arpl
and
add
mov
mov
out
cmp
pop
sbb
adc
rcl
sbb
and
or
cmp
pop
push
mov
xchg
dec
pushf
pop
xchg
arpl
cmpsb
idiv
mov
and
gs
push
jbe
add
xchg
adc
xlat
lds
lds
fnstcw
mov
xor
lcall
cmp
int
push
pop
ss
adc
mov
test
out
mov
shrb
pop
push
sub
or
test
mov
add
adc
fwait
mov
cmp
jecxz
pop
push
ja
loop
jmp
mov
or
jp
ds
push
xchg
pop
add
inc
push
inc
push
add
cwtl
sub
pop
mov
mov
adc
and
sub
repnz
pop
dec
int3
enter
cmp
cld
lock
mov
test
push
das
lods
lahf
aam
dec
repnz
lret
test
adc
in
mov
outsl
loop
ret
mov
gs
jle
xor
cmp
jae
mov
sti
lret
cmp
rclb
push
xor
jns
out
xor
addl
sahf
push
push
mov
jge
int3
push
nop
sbb
cld
lret
pop
cmpsl
mov
ja
insb
push
add
jp
in
int3
cmc
inc
xor
mov
pop
mov
add
fs
sbbb
fildll
add
mov
dec
inc
mov
test
add
push
lret
adc
jns
mov
or
xor
add
mov
inc
icebp
push
xchg
fnstenv
jecxz
sbb
push
hlt
mov
mov
lret
mov
push
and
call
inc
lahf
xchg
xchg
sbbl
out
xor
cmpl
out
jns
xor
hlt
push
es
ja
lret
movsl
or
push
notl
xchg
rolb
pop
sub
push
dec
sbb
pop
jle
ds
lahf
sahf
add
adc
ja
out
add
adc
sub
leave
mull
jns
cli
jbe
inc
push
jl
and
jae
shld
inc
mov
push
popa
insb
ret
dec
fiadds
sbb
pop
outsl
lret
pop
mov
jo
out
nop
inc
add
mov
int3
jl
lcall
pusha
daa
cvttps2pi
call
bound
adc
loope
mov
sbb
or
ficomps
imul
push
sub
fistl
ret
ja
inc
pop
sbb
add
inc
in
push
sbb
jle
push
cmp
mov
addr16
add
lods
xchg
pop
inc
inc
adc
lods
std
sub
test
adc
sub
jl
cmc
push
jbe
popf
or
inc
push
std
sub
inc
pop
fisubrl
xor
mov
mov
push
incb
icebp
push
fwait
mov
frstor
cli
lock
xchg
fcoms
jg
lods
das
jne
ljmp
lds
in
jne
stos
mov
mov
cmp
andb
add
add
cmp
fcmovnb
and
add
fwait
dec
lret
lods
and
dec
mov
movsl
fisubl
pop
popf
aaa
jns
mov
aad
jmp
je
dec
filds
and
rclb
jecxz
adc
mov
filds
jno
movsl
arpl
xor
fldcw
mov
into
fcomps
dec
jo
rcrl
and
movl
jae
pop
sarb
js
rcrl
out
adc
pop
jl
sti
out
mov
jecxz
sub
aad
ja
jns
xorl
sub
sbb
dec
cmp
add
mov
and
and
jp
cld
push
movsb
into
jnp
pop
and
and
add
jge
push
mov
into
call
dec
into
lahf
mov
inc
xor
adc
jle
xchg
cmpl
clc
cmpsl
in
jno
fidivrl
xor
ss
sub
popf
jge
cld
lods
daa
add
sahf
mov
add
push
fstl
adc
push
repz
cmp
sub
pop
jg
int3
xor
ror
mov
xchg
xchg
ret
pop
aaa
xor
int3
push
lahf
call
ja
outsb
pusha
xchg
push
insl
pop
mull
shufps
inc
pop
xor
andb
dec
into
lcall
jnp
ljmp
push
dec
cmp
xor
jmp
mov
pop
scas
dec
dec
outsb
xor
jle
outsl
cltd
cmp
in
dec
shl
mov
cmp
in
loopne
lds
dec
and
add
push
mov
loope
shrb
out
icebp
mov
mov
push
mov
pop
lret
mov
filds
imul
int3
mov
popl
add
lods
sbb
int3
fistps
xchg
mov
cli
jnp
dec
icebp
mov
pop
xor
in
and
daa
loope
cmpsl
or
jg
loope
fdivrl
sti
mov
and
ds
adc
ja
sub
mov
cmpsl
stos
pop
aaa
cmp
inc
pop
mov
push
mov
xchg
push
fsub
add
xor
and
sbb
lcall
xor
rcrb
out
cld
movsb
movsb
xor
mov
push
pop
cmp
cmp
ja
or
popa
int3
and
inc
cmp
je
out
rolb
daa
adc
lods
cli
call
sbb
jp
push
sbb
int
push
int
lods
xchg
jp
scas
and
pop
adc
cmp
mov
or
xor
inc
ret
or
add
adc
pop
mov
add
mov
xchg
cmp
enter
xor
pop
cmpsl
ret
leave
mov
adc
lods
fadd
xchg
daa
dec
add
sbb
mov
shll
rcl
rcrl
cmpl
popa
xor
xor
cmpsl
ret
ljmp
mov
xor
add
push
fidivl
arpl
clc
jo
cmc
filds
xchg
jl
inc
and
rolb
dec
inc
mov
rclb
mov
push
lcall
pop
int3
cs
and
sub
xchg
cmp
jp
mov
fldt
push
inc
mov
iret
data16
jae
in
or
xlat
dec
and
sbb
push
and
push
lods
aad
inc
or
pop
mov
xlat
mov
and
or
ljmp
mov
push
ja
adc
xor
dec
call
xchg
pop
xchg
sub
lds
loope
nop
insb
cmp
negl
dec
mov
pop
es
arpl
les
and
loopne
mov
xchg
dec
dec
iret
push
push
in
push
xchg
les
imul
aas
mov
jle
and
jo
push
and
jmp
push
fsts
inc
in
push
jno
xchg
mov
imul
jne
adc
inc
sarl
mov
loope
pop
lock
push
adc
mov
inc
jmp
sbb
divb
adc
sbb
iret
mov
xor
subb
pusha
fmull
cmc
jae
scas
out
and
fnstcw
mov
mov
push
test
pop
ds
lret
pop
inc
and
cmp
push
cmpsl
pop
mov
arpl
cli
jl
jne
mov
adc
dec
leave
sub
jmp
push
hlt
fcmovnb
mov
xor
sub
dec
mov
xchg
out
dec
push
mov
test
push
repnz
xor
pop
insb
rorl
jnp
jg
loope
cmp
push
jns
es
mov
aas
or
cmp
ret
jmp
das
push
cmp
imul
fimull
clc
daa
push
mov
arpl
das
loopne
cltd
pop
fstps
jge
cmp
cli
jmp
adcb
dec
imul
xchg
xchg
mov
fistpl
xchg
inc
mov
lock
xor
sbb
sub
lahf
pop
adc
ret
add
and
fsubrs
movsl
xchg
rcrl
in
hlt
popa
std
lcall
mov
inc
ret
push
das
sti
xchg
int
outsl
mov
pop
push
cwtl
pop
push
add
arpl
sub
cmp
xchg
xor
or
in
sub
or
xchg
and
shll
pop
lea
divl
sbb
or
lcall
mov
push
filds
sti
aad
mov
jbe
test
sahf
fdivrl
xorb
test
sti
push
jb
cmp
fcomps
dec
addb
adc
or
jae
and
hlt
std
mov
stc
lods
cmp
or
inc
sub
xchg
pop
and
xchg
dec
out
enter
pop
jle
lea
cmp
testb
xor
dec
setnp
fmull
rclb
sbb
mov
aas
pop
fwait
pop
icebp
das
mov
lods
mov
in
push
xorl
mov
pop
stos
mov
add
mov
out
xor
in
pop
mov
lret
jae
push
sbb
mov
pop
fnstsw
test
inc
pop
push
xorl
adc
rcl
das
inc
test
jb
call
sbb
cmc
sbb
push
mov
fidivl
out
xor
sbb
pop
fldcw
mov
or
mov
dec
in
cld
test
push
mov
mov
xor
stc
mov
call
test
push
mov
aas
push
add
loop
mov
js
bound
and
scas
push
popf
sbb
repnz
add
js
and
insl
daa
mov
add
cmp
leave
aam
jmp
fwait
scas
jle
sti
leave
cltd
int
xchg
adc
cwtl
xchg
dec
addr16
xor
cmp
in
inc
lods
mov
adc
stos
stos
sub
cmc
sbb
mov
xor
pop
subps
jmp
cwtl
cmpsb
mov
std
cli
jo
daa
enter
imul
pop
pop
cmp
loop
cmc
in
push
push
fsin
fisubrs
shr
inc
es
and
mov
push
in
add
and
insb
mov
push
outsl
out
iret
or
js
xchg
xor
sarl
scas
ret
pop
leave
lret
jge
aam
pop
add
lods
sbb
cmpsb
push
pop
inc
and
push
gs
jmp
enter
dec
enter
ja
shlb
ds
add
lea
jo
inc
push
test
fcmovne
push
imul
add
jl
divb
xchg
dec
lahf
lret
jp
pop
dec
add
popf
mov
clc
clc
adc
mov
jp
cs
push
push
mov
jecxz
push
andl
sub
jae
xor
and
in
rorl
fistl
call
sbb
ds
cld
sti
xor
jmp
pop
pop
xchg
ljmp
and
aam
sbb
clc
andl
cmp
mov
stos
xor
fcompl
ret
push
xchg
mov
add
hlt
test
push
sub
inc
scas
divl
mov
add
insl
test
or
push
lret
shrl
lret
jnp
fadds
test
mov
repz
in
ja
ret
mov
add
call
xor
xchg
xchg
imul
jle
insb
add
popf
adc
jg
xlat
mov
xchg
int3
inc
inc
xchg
adc
mov
mov
imul
and
cmp
jge
mov
aaa
jmp
daa
jp
aad
mov
and
or
call
mov
lret
sub
cmp
xchg
xor
add
xor
and
jmp
fisttps
fisubrs
push
mov
pop
mov
add
in
fildl
or
and
pop
jb,pn
dec
loopne
xor
lcall
movsb
xorl
mov
add
xor
popl
push
push
mov
add
or
ret
jle
ds
cmc
sbb
push
cmp
les
and
mov
add
mov
and
adc
and
xchg
stos
or
xor
test
xor
andb
push
mov
xchg
mov
cmp
enter
hlt
scas
mov
sub
mov
xorl
rcll
dec
lods
mov
mov
mov
xchg
fstpt
adc
cli
bound
loope
fimuls
pop
fstl
cmpsl
cli
loope
ja
fidivl
mov
nop
add
mov
outsl
cmc
addr16
mov
or
mov
aam
jae
xchg
in
adc
mov
inc
out
add
cmc
cmp
je
jge
mov
mov
outsb
jp
lahf
add
insb
addr16
fcoml
cmc
and
or
sub
mov
xor
sbb
iret
out
pushf
sbb
mov
push
movsl
dec
xchg
mov
pop
bound
leave
add
push
jmp
stos
into
lods
mov
inc
aad
sub
iret
cmc
outsl
mov
int3
push
inc
pop
mov
mov
sub
cmovbe
mov
imull
cmpsb
mov
sbb
push
out
lret
stos
push
add
popf
dec
stos
add
frstor
add
push
pop
jnp
push
ret
sahf
test
cld
out
inc
sub
daa
repz
mov
stc
mov
sub
pushf
pop
pop
sbb
push
lock
ds
inc
mov
cwtl
loopw,pn
jbe
xchg
dec
adc
dec
mov
adc
jmp
push
pop
jne
arpl
jg
mov
testb
sbbb
int3
push
clc
test
push
nop
sti
subl
fmuls
xor
or
imul
scas
mov
xchg
sub
mov
pusha
les
pop
dec
subb
jle
das
out
aaa
fwait
dec
mov
or
xchg
cmp
pop
sbbb
popl
jl
repz
pop
jg
jg
mov
aad
xchg
and
xchg
mov
mov
cmp
or
ds
daa
scas
pusha
mov
mov
jne
sub
mov
mov
pop
lahf
xlat
cmc
jg
pop
jp
fistpl
ret
jl
add
push
jmp
push
mov
mov
xchg
mov
push
cltd
in
xchg
xor
sbb
pop
cmp
arpl
pop
fstl
pop
inc
les
imul
sub
jbe
repz
test
xchg
cmp
arpl
cmpl
data16
add
pop
call
pop
mov
jb
and
jmp
loopne
jp
inc
fs
adc
scas
mov
and
fisttpl
enter
xor
hlt
jl
fstp
insl
pop
and
sti
mov
adc
pop
mov
xor
hlt
nop
dec
sbb
iret
mov
stos
aam
jecxz
gs
stos
dec
faddl
dec
pop
std
pop
dec
cmp
push
enter
or
push
outsb
movsl
sbb
jg
in
dec
adc
xchg
mov
mov
inc
xor
mov
js
rorb
call
inc
aaa
nop
sbb
lds
stos
adc
lret
mov
js
lea
xchg
inc
icebp
js
lea
notb
add
iret
and
cmpsb
pop
jl
iret
add
xchg
pop
iret
cmp
enter
xchg
addr16
popf
dec
mov
jmp
inc
mov
out
and
dec
dec
cmp
ja
shlb
fistpl
fsubs
pop
je
xorl
out
js
xlat
dec
in
sub
cltd
ja
pop
rorl
sbb
fwait
jmp
lock
test
insb
mov
mov
jbe
sub
fucom
out
roll
xor
popa
nop
sbb
je
cmp
cltd
stc
das
sbb
or
outsb
push
div
pop
fsts
into
mov
cmp
addr16
dec
mov
inc
mov
cmp
test
xchg
adc
and
sub
mov
iret
xchg
cwtl
imul
cmpsb
push
lods
sbb
xchg
cwtl
ret
adc
out
sub
aas
cmpb
jnp
mov
call
mov
in
add
test
or
loopne
mov
stc
cmp
pop
dec
adc
lret
adc
push
arpl
jnp
dec
and
or
dec
call
push
icebp
jge
mov
mov
andb
pushf
cs
jg
lds
push
add
push
sbbb
decb
jg
hlt
sti
push
pop
scas
inc
sub
cmp
xlat
out
stc
adc
push
sbb
loope
push
enter
jno
mov
stos
or
cmp
mov
fs
xchg
pop
push
dec
push
cld
sbb
dec
push
rcl
dec
shrl
push
fadds
lret
aas
les
in
inc
add
out
cli
sub
push
les
repz
outsb
push
repnz
int
inc
push
xor
adc
adc
push
mov
rcll
or
sbb
jne
jnp
push
das
xor
mov
jno
mov
pushf
leave
into
jp
xor
sub
cmp
dec
daa
xchg
mov
rclb
push
icebp
jae
dec
test
cmc
pop
ss
mov
mov
xor
jbe
frstor
adc
shlb
in
gs
mov
mov
push
jmp
push
sub
stc
xchg
jle
ret
mov
mul
or
sbb
sbb
inc
int3
loope
fildll
test
gs
imul
jo
pop
jno
adc
or
and
jecxz,pt
shlb
mov
mov
clc
movsb
aad
pop
fisttps
push
inc
out
std
jns
xor
fsubl
sbb
ret
push
inc
sbb
lcall
pop
lea
pop
pop
push
nop
pushl
and
xor
mov
cmp
xor
in
adc
loop
repz
mov
inc
aas
fnstsw
jg
fwait
iret
sub
fcoms
mov
mov
hlt
mov
addr16
and
xor
loop
lret
ja
dec
mov
dec
jle
leave
scas
test
cmc
dec
mov
cltd
mov
xchg
xchg
adc
sbb
jb
jl
out
cli
add
sub
xor
inc
push
dec
inc
inc
pop
inc
cmp
add
cmp
jmp
push
cmp
sub
mov
loope
inc
push
stos
push
lock
out
ffree
cmp
pop
xor
dec
and
jnp
push
jecxz
mov
lcall
mov
test
popf
outsl
push
mov
dec
mov
inc
enter
ds
addr16
cwtl
rorb
mov
aaa
cwtl
mov
pop
inc
push
and
sub
pop
mov
scas
jbe
js
adc
pop
cmpsb
gs
inc
outsl
pop
je
sti
stc
pop
xchg
adc
xchg
in
pop
and
stc
insl
mov
subl
int3
sbb
push
in
test
xchg
leave
int
push
pop
pop
les
push
cltd
inc
push
call
jnp
rcr
mov
mov
inc
adc
aas
jo
in
dec
ror
pop
pop
dec
push
sbb
das
daa
test
sub
push
ret
fbstp
push
cmpb
add
push
pop
sbb
inc
jmp
xor
add
xchg
push
jl
neg
fmul
test
pop
sub
jge
cmp
fcmovnu
inc
cmpb
rorb
push
nop
mov
mov
idivl
jnp
pop
cld
aad
sbb
movsb
aad
sarl
pop
loope
cld
cli
mov
push
add
mov
add
sbb
stc
lds
daa
dec
mov
les
es
arpl
push
jl
shlb
inc
into
jp
testb
loope
cli
pop
out
loopne
ret
adc
jne
or
decb
dec
bound
insl
sahf
pop
xchg
mov
jns
xchg
lret
int
xlat
int3
jge
jbe
dec
cltd
sbb
dec
bnd
cmc
sub
jb
add
fsub
sbb
mov
shll
jmp
mov
lahf
repnz
xor
mov
popa
push
faddl
cmp
xlat
and
inc
jns
jp
fsubr
and
sub
sub
inc
pop
pop
into
sbb
xchg
sub
xor
lock
mov
and
sbb
loop
cmp
inc
xor
loop
jae
enter
stc
cmp
inc
stos
aam
and
cmp
jge
sub
daa
mov
dec
ja
push
lock
loope
ret
jno
jnp
adc
cmpl
div
lret
in
inc
adc
flds
push
adc
cmc
and
cltd
lret
or
xor
test
sbb
pop
xor
fnstsw
in
test
fnsave
stc
add
outsb
sub
in
insl
rcr
jo
inc
in
sarl
fdivl
imul
lret
iret
mov
adc
push
shrl
xchg
jae
mov
rorl
ret
test
pop
mov
lret
test
push
dec
jp
stos
or
push
push
in
pop
mov
pop
mov
push
nop
sub
adc
rcrl
cmp
xchg
test
ret
repnz
add
add
mov
pop
out
inc
clc
dec
aaa
xor
mov
repz
inc
adc
add
cmp
mov
or
push
ja
or
scas
cwtl
or
sub
jae
cli
push
add
adc
ljmp
sub
xchg
push
movsl
jnp
scas
sub
push
jno
out
mov
lahf
inc
xor
in
add
shl
mov
cmpsl
xor
dec
or
mov
lahf
scas
out
push
roll
in
push
repz
xchg
sahf
loopne
loopne
xchg
jle
shr
lds
xor
dec
sahf
orl
xchg
xor
into
mov
pushf
aaa
aam
scas
sub
test
int
jae
add
in
repz
pop
int3
mov
stos
and
jne
xchg
sbb
or
out
inc
mov
xchg
loope
into
xchg
mov
inc
and
lret
lret
hlt
push
pushf
and
fisubrl
adc
pop
inc
scas
gs
mov
sbb
in
lahf
rol
jno
imul
add
pop
push
add
pusha
int
ret
sbb
ljmp
test
lret
jo
int
fidivrs
mov
mov
or
adc
nop
stos
jmp
cmovae
cmp
mov
stc
les
push
push
std
inc
add
and
sbb
aas
scas
dec
push
scas
rcr
dec
mov
xchg
aas
sbb
cmp
jg
hlt
in
cld
lods
stos
and
pop
mov
adc
scas
or
add
push
adc
out
cwtl
stos
nop
ret
lcall
push
fdivrp
es
popf
sarb
pusha
aaa
in
popa
xchg
push
inc
pop
or
adc
test
xchg
outsl
mov
mov
pop
out
cli
sbb
outsl
xor
push
ret
stos
jnp
jns
lcall
roll
lock
push
xchg
jnp
mov
and
adcl
or
and
sbb
inc
dec
adc
pop
pop
movsb
gs
jle
insb
mov
stos
and
add
mov
jl
jo
or
insb
push
andb
jns
stc
xor
jg
aas
lret
xchg
add
test
cltd
or
test
popa
add
bound
jl
xor
add
inc
sbb
fidivl
mov
mov
nop
mov
inc
roll
xchg
scas
bound
sub
xchg
shl
mov
jmp
jmpw
fldenv
sub
stc
push
mov
fidivrs
pop
push
pusha
jmp
adcb
or
rcrb
loop
mov
in
push
fldt
jno
pushf
sub
xchg
in
xor
xchg
xchg
mov
adc
xchg
call
les
add
pop
les
test
adc
fildll
retw
int
xchg
pop
mov
xchg
pushf
dec
iret
mov
pop
sub
sub
jnp
mov
cli
xor
mov
push
sub
add
dec
daa
subb
jle
int
cmp
adc
inc
imulb
popf
mov
dec
rorl
inc
xchg
clc
mov
xchg
jg
mov
mov
push
xchg
add
push
push
addr16
out
enter
jae
push
scas
adc
jo
cld
ror
pop
lods
repnz
adc
mov
dec
nop
fstp
imul
rdmsr
or
popf
push
ja
pop
sahf
adc
sbb
sub
iret
inc
fs
rclb
pop
notb
out
push
addr16
test
jns
rorb
mov
sbb
loope
xchg
push
pop
scas
jg
aad
pop
out
insb
sub
dec
mov
jmp
bound
dec
pusha
push
stc
sub
outsl
push
es
cltd
test
xor
push
fildl
scas
sub
out
bound
push
lods
std
repz
ja
xchg
mov
mov
dec
jbe
adc
pop
rorb
pop
pop
cmpsb
or
imulb
dec
push
xchg
pusha
dec
push
jecxz
inc
or
repz
aad
sbb
push
push
enter
or
fs
imul
push
sti
cmp
lods
jae
jns
push
adc
push
adcb
add
sti
adc
ret
xchg
adc
cmpsb
pop
out
ficompl
in
pop
mov
lea
nop
cld
jp
mov
rolb
cwtl
repz
or
int3
jno
das
push
dec
outsb
pushf
pop
jne
xor
xchg
cmp
pop
pusha
jns
sub
xor
stos
push
add
mov
xchg
xchg
test
fucompp
sbb
push
das
subl
mov
xor
mov
mov
fpatan
xlat
cwtl
pop
cmpl
cmc
ret
pop
repnz
jmp
cli
xor
adcl
fs
cwtl
enter
test
xor
adc
in
inc
aaa
shlb
sbb
jb
inc
in
or
jns
xchg
sub
mov
icebp
mov
or
add
scas
int3
mov
sbb
jmp
movsl
push
pop
dec
ret
mov
jns
mov
xor
mov
pop
lods
inc
test
mov
push
sub
loope
add
lret
mov
sti
push
pop
rcr
xlat
mov
lret
lcall
das
add
and
sub
repz
inc
in
xor
mov
inc
or
nop
mov
out
shlb
adc
data16
sbb
movzbl
cmpsb
xchg
orb
es
int3
sub
imul
stos
mov
add
inc
mov
jno
movsb
scas
ja
cmp
int
outsb
add
mov
hlt
pop
dec
sub
scas
ss
jae
pushl
lock
movsl
das
imull
or
adc
push
inc
aad
or
jge
sub
cmp
jo
pop
sbb
movsl
sub
outsl
inc
int3
push
hlt
lea
xchg
hlt
fadd
test
mov
js
data16
xor
insb
test
push
jbe
pop
and
push
add
mov
add
dec
insb
mov
mov
rorl
cs
xor
mov
fdiv
into
insb
push
mov
sub
pop
jp
aas
mov
cmp
mov
push
mov
loop
pop
jae
sbb
xchg
add
mov
sub
xor
xor
inc
daa
mov
add
leave
sbb
fcomps
pusha
and
sbb
rcrl
mov
adc
popf
xchg
dec
jne
mov
and
mov
loop
aaa
and
mov
pop
xorl
sarl
adc
lret
fsqrt
jne
xchg
enter
xchg
or
loopne
mov
repz
push
cltd
iret
movsl
lret
dec
mov
dec
pop
and
cmp
mov
jo
sbb
test
das
clc
adc
xchg
pop
decl
insb
sub
sub
lret
out
into
cmc
loope
cmp
pop
stos
stc
mov
push
jl
xor
adc
lock
es
js
add
pop
adc
push
popf
js
movsl
jb
aam
dec
jp
jne
daa
popa
jmp
or
ror
in
push
inc
add
rcrb
xchg
mov
aam
mov
cmc
stos
inc
lds
xor
fimull
mov
mov
and
mov
cwtl
lret
jns
xchg
mov
pop
dec
lret
mov
mov
loope
push
into
sbb
aam
out
push
xor
inc
test
jb
outsl
outsb
inc
jae
ret
bound
hlt
das
leave
jnp
cwtl
sub
mov
jae
mov
imul
xchg
sbb
cmc
gs
pandn
cmpsl
adc
and
xor
cmp
push
hlt
test
or
mov
mov
orl
test
in
shll
sbb
and
stos
and
iret
fldenv
test
jns
mov
into
jb
jg
add
jl
iret
and
fidivl
pop
das
xor
test
jecxz
stos
jne
in
mov
xlat
test
adc
xchg
cltd
pop
sbb
in
jge
push
inc
inc
cwtl
push
repz
cmp
push
out
dec
jp
xchg
xchg
or
lods
xorl
push
mov
dec
pop
imull
lcall
push
mov
jmp
hlt
lahf
setle
loop
fcompl
jo
or
push
out
scas
add
and
mov
pop
aad
sbb
inc
mov
inc
xorl
sub
aad
mov
je
roll
in
out
cmc
fidivrs
inc
mov
pop
mov
mov
fimull
mov
and
inc
call
mov
mov
dec
aas
daa
bound
pop
fcmovbe
mov
pop
mov
inc
ss
in
push
clc
sub
insl
icebp
sub
cmp
mov
jns
ds
mov
xchg
jae
add
inc
mov
dec
mov
push
mov
fdivp
push
mov
imul
inc
mov
stc
stos
mov
sub
inc
std
push
sti
push
xchg
dec
int
pop
cmp
cmp
lods
and
dec
stc
xor
lods
dec
stos
add
loopne
mov
mov
sbb
mov
lret
pushf
aad
and
loop
or
insl
out
cmp
idiv
mov
inc
sbb
cwtl
jmp
adc
lahf
inc
sub
push
mul
adc
sub
lcall
inc
lods
clc
lret
cmc
iret
mov
and
in
shll
aam
das
mov
leave
sti
cmp
sub
iret
mov
or
jmp
fcomps
xchg
shrb
mov
pop
es
out
inc
fucomip
xor
aad
mov
push
hlt
cltd
jecxz
mov
lea
sub
lea
lret
ja
stc
add
cmp
in
js
mov
scas
inc
gs
fmull
dec
adc
xchg
jae
addb
out
adc
cmpsl
cmp
rcl
xor
pop
pusha
call
mov
call
hlt
cmp
mov
leave
test
dec
add
mov
dec
lock
push
cmpb
imul
jns
aas
mov
cmp
into
fwait
jmp
mov
in
sbb
in
adc
jl
mov
fildl
popl
and
sub
or
gs
std
or
aaa
lock
cmpsb
or
es
push
or
dec
loope
xor
dec
in
xchg
lcall
mov
ljmp
pop
in
mov
mov
pop
push
mov
shrb
lods
int3
and
dec
xor
cmp
inc
xchg
xchg
sbb
outsb
gs
out
jg
test
data16
rol
pop
cmp
stc
inc
push
lods
xor
cwtl
into
insl
hlt
pop
out
mov
push
out
rcll
mov
dec
cli
and
adc
lcall
pop
mov
add
push
xlat
loope
bound
stos
lret
mov
loope
sbb
jnp
loop
je
outsl
fucomi
mov
fsts
enter
adc
into
outsl
movsl
test
pop
shrb
jle
add
loop
lret
xchg
rolb
sbb
frstor
mov
mov
inc
cmpsb
nop
push
xorl
xchg
jo
out
jne
xchg
pushf
xchg
pop
rcr
mov
add
cmp
dec
sub
aad
inc
jno
sub
rclb
enter
aaa
jle
push
cmpsb
mov
out
xor
jae
dec
out
dec
push
push
shr
in
jns
ret
mov
sub
or
push
or
push
or
icebp
outsb
rolb
mov
mov
ljmp
or
xor
add
add
aas
pop
inc
xchg
fstl
not
js
pop
imul
sub
fcos
mov
cld
jmp
in
jbe
insb
cli
mov
cltd
aam
sbb
inc
stos
addr16
iret
sti
in
lock
xchg
xchg
sbb
push
shlb
stos
lahf
rcll
call
xor
jnp
xchg
push
insl
pop
js
out
mov
jne
insb
or
cmp
mov
out
xchg
sar
movsb
arpl
fcoms
dec
ficompl
dec
ljmp
add
mov
scas
xchg
scas
imul
cld
stos
leave
imull
sub
jmp
das
fmull
mov
out
add
rcrb
jae
mov
push
ja
xor
mov
data16
ds
mov
xor
in
loop
das
jge
push
cmp
jp
and
dec
incl
nop
rorb
mov
out
sarb
popf
inc
bound
adc
or
dec
lds
pop
push
arpl
mov
xchg
subb
sbb
and
jl
push
fidivrl
xlat
adc
xchg
aas
jg
popa
mov
fists
jb
push
or
cmp
xor
inc
and
into
mov
out
pusha
mov
cs
mov
stos
nop
popf
imul
xor
test
jo
mov
jg
jmp
imul
jbe
jg
xchg
fwait
jae
push
jle
stos
pop
xchg
addb
push
push
popa
jno
aam
lcall
loop
push
cmpsb
push
or
pop
outsl
loope
cmpsl
pop
xchg
jo
ja
mov
repnz
lods
and
or
test
dec
jle
xlat
movsb
popf
repz
pushf
in
ss
push
test
jae
faddp
mov
fnsave
inc
add
fmuls
gs
or
scas
jecxz
sar
scas
fldl
clc
dec
ljmp
loop
mov
in
mov
in
mov
mov
or
sbb
cmp
movsb
addr16
mov
outsl
shll
pop
ror
and
mov
fcompl
pop
movsl
dec
pop
sub
clc
into
adc
loopne
popa
cmp
dec
lret
pushf
fwait
cli
mov
or
pop
into
fldenv
jo
sbb
fnsave
pop
xchg
imul
cmp
xchg
sti
xor
imul
pop
mov
scas
lahf
lcall
sbb
jne
mov
shl
add
push
arpl
ror
lret
xchg
test
aaa
jne
jno
imul
pushf
sbb
call
imul
aad
stc
mov
rcrl
dec
cmp
mov
in
cmp
dec
std
push
sub
outsb
mov
inc
push
aam
std
xor
out
cmpl
popf
sar
aad
xor
daa
mov
mov
pop
test
lret
and
jae
push
xor
xor
outsl
or
stos
es
push
or
jle
xor
int
mulb
dec
cs
add
rolb
inc
ljmp
mov
sub
gs
test
xor
stos
add
push
inc
jge
out
rcll
ret
push
push
hlt
inc
pushf
cmp
push
mov
jnp
inc
fidivrl
sar
test
mov
call
lret
and
data16
js
push
in
enter
xchg
std
ja
fnstsw
dec
lcall
enter
es
addr16
pop
imul
push
or
add
ljmp
imul
xchg
mov
lods
sub
fmuls
mov
loop
or
dec
push
stos
aam
sbb
dec
xor
mov
test
ret
popf
movsb
or
jp
insb
cli
xchg
mov
adc
fwait
in
or
mov
push
ds
lods
cmovp
xchg
shlb
adc
fildl
lock
pop
scas
adc
mov
out
popa
sti
xchg
adc
or
xor
jmp
cli
add
js
test
or
jge
jg
mov
cmp
add
push
lock
mov
dec
mov
adc
dec
jno
xchg
fst
stos
pop
popa
and
xlat
mov
fldl
and
fadds
out
imul
inc
jbe
loopne
into
jns
jecxz
ret
mov
dec
fstps
loope
inc
cmp
test
push
cli
shll
test
mov
and
iret
ret
pop
inc
addr16
lea
sbb
jno
sbb
rcl
inc
xchg
in
ror
pop
les
dec
ret
xor
nop
daa
inc
mov
or
lds
mov
push
jnp
pop
pop
inc
push
pop
cmp
icebp
test
cmp
lret
and
add
fbld
in
jno
push
je
shll
int3
fs
push
loop
xor
inc
subl
cmp
lods
add
mov
pop
ljmp
mov
loope
sub
mov
les
pop
xor
or
jo
mov
xor
scas
ja
mov
dec
fmulp
movsl
nop
inc
shlb
push
xchg
data16
sysret
dec
cld
push
sahf
les
sub
inc
mov
movsb
cwtl
andl
into
jnp
dec
sbb
lods
imul
push
mov
or
test
xor
int3
jne
dec
stc
popf
sub
aaa
addr16
mov
push
or
lds
repnz
test
insb
mov
sbb
sub
ljmp
inc
in
sbb
repnz
or
jb
int
pop
sbb
dec
loopne
cmp
hlt
ja
in
cmp
jp
add
xchg
ljmp
jle
or
cld
sub
leave
and
loop
ror
into
or
dec
adc
fidivrs
sub
push
popa
mov
or
mov
xor
pop
imul
adc
cvtps2pd
sub
jecxz
jmp
mov
xchg
ljmp
xchg
nop
mov
aad
dec
rcrb
fsubrs
and
sbb
xlat
lods
xor
and
jecxz
sbb
mov
dec
cltd
and
lahf
aas
jb
lret
fnsave
xor
aam
adc
push
mov
jle
mov
jmp
sbb
add
sti
push
push
data16
insb
jne
sarl
or
sti
mov
xlat
push
test
lret
lock
dec
cmpsl
lea
add
lods
push
shrb
lock
divl
push
rclb
jg
pusha
nop
jbe
imul
adc
cli
sbb
mov
and
cmpsb
ret
mov
inc
inc
cmp
sbb
mov
xlat
ja
push
sub
or
fidivs
lods
push
in
outsl
movsb
dec
sub
movsl
cli
bound
and
les
rclb
jnp
mov
inc
fdivrl
dec
jmp
mov
push
cs
xchg
xchg
stc
sarl
imul
mov
hlt
imul
jp
inc
jge
jle
mov
in
mov
cltd
and
movsl
sub
inc
adc
gs
lods
mov
lret
add
mov
sbb
push
jns
jns
pop
lcall
mov
dec
stc
mov
cmp
or
imul
out
pop
jge
mov
es
iret
xor
js
lds
rcr
xor
add
fildll
mov
inc
or
sub
out
inc
icebp
addb
enter
aaa
pop
add
pop
jbe
ret
mov
pop
movb
pop
push
jae
jnp
arpl
loop
jg
mov
leave
jmp
bound
mov
jmp
mov
es
fwait
pop
fisubrs
outsb
xor
mov
cmc
movsb
int
pop
jns
adc
aad
lcall
out
adc
push
mov
jle
mov
mov
int3
pop
xchg
push
rorb
psrlq
and
xchg
sarl
xchg
inc
aam
movsl
mov
fs
es
mov
daa
flds
les
dec
pop
aad
xchg
pop
and
cmp
ja
pusha
dec
sub
push
inc
bound
mov
loop
std
cmp
jl
jo
mov
outsl
lods
mov
push
or
cmc
xlat
cld
cmc
push
sbb
dec
lock
add
mov
or
in
lds
fwait
movsb
jp
fimull
inc
mov
push
push
mov
mov
std
sbb
add
cmc
xor
mov
mov
gs
xchg
push
lock
mov
pop
push
loop
cmp
ja
jp
fsubl
lahf
dec
stos
xor
add
aas
loop
xchg
add
mov
xchg
push
push
xlat
add
pop
fs
sub
aas
xchg
add
cs
adc
scas
into
movsb
jno
inc
adc
mov
jp
jns
sub
or
xorb
xor
mov
xchg
shlb
dec
adc
jb
push
fnstenv
jb
lea
not
das
lret
out
jbe
cmpsl
push
insb
jne
aad
or
loop
outsb
and
add
imul
cli
std
pop
jnp
jnp
sub
outsb
pop
xor
divl
xchg
adc
mov
div
lods
mov
or
sbb
enter
or
je
in
inc
xor
and
repz
fs
push
mov
mov
call
mov
mov
mov
es
adc
sbb
sti
dec
dec
insl
xchg
inc
mull
mov
jb
xor
popf
in
jno,pn
xor
test
adc
sarl
fsubrs
mov
xchg
insl
inc
xchg
mov
jne
loopne
push
outsl
fdivp
inc
pop
repz
mov
xor
jle
push
movsb
and
and
shll
addl
insb
fwait
imul
popf
jns
or
mov
xlat
push
sub
js
xor
sahf
lret
dec
and
jo
gs
push
add
cltd
push
aas
pop
xchg
adc
stos
stos
cmc
sub
mov
mov
lods
push
jecxz
mov
sub
fstpl
mov
jle
imul
icebp
dec
push
test
int
mov
or
jae
inc
outsb
cltd
fisubrs
mov
cli
ljmp
mov
mov
loopw
xchg
ds
fadds
jg
stc
mov
jge
rclb
dec
jns
inc
popf
or
dec
addr16
add
enter
movb
fwait
insl
xor
xchg
lods
lea
ret
je
adc
dec
push
pop
inc
mov
lock
cmc
sbb
ret
int
mov
cmpsb
sbb
mov
cmpsl
loopne
and
xor
jae
sbb
aaa
je
xchg
cli
dec
push
mov
ljmp
test
cs
cmpsl
in
or
inc
aaa
sub
jo
inc
inc
push
imul
jp
lcall
stos
push
popf
mov
enter
ja
ljmp
js
mov
aas
test
or
stc
mov
daa
adc
js
sbb
or
xor
rorl
pop
sub
mov
and
int
xchg
mov
test
cmpsl
sbb
pusha
dec
pop
andb
shl
inc
hlt
xchg
stc
or
shlb
ds
jo
jmp
in
cltd
pop
ss
stc
xor
add
addr16
pop
mov
cmp
adc
dec
jmp
sbb
inc
mov
out
and
jo
jbe
aad
jecxz
and
pop
sbb
into
adc
inc
xchg
mov
out
dec
xchg
js
push
xchg
push
inc
in
jae
inc
aaa
pop
fwait
repnz
dec
xor
cld
or
xor
fdivrs
sub
pushf
cwtl
add
mov
fidivs
or
iret
arpl
pusha
cs
ljmp
std
leave
stc
mov
mov
mov
and
and
inc
cmp
loopne
outsl
add
xchg
out
insb
jno
push
cmpsl
jmp
rol
jns
push
and
mov
mov
xlat
neg
jge
mov
cmp
lods
js
loop
mov
and
std
scas
orb
pop
ss
sub
repz
mov
push
data16
scas
jmp
cld
pusha
jmp
xchg
push
rcll
sti
cmpsl
jecxz
lret
and
push
dec
imul
cmp
jle
xchg
ret
lods
xchg
nop
xchg
out
fldcw
jns
mov
inc
or
fdivrp
ret
inc
dec
jae
mov
mov
jp
in
mov
mov
daa
idiv
pop
sbb
xchg
cmovno
ss
push
xor
xor
cld
pop
jl
int
jno
lcall
mov
and
jmp
mov
sahf
jmp
fnsave
push
frndint
call
addl
ret
inc
mov
fidivrl
mov
stc
jo
and
lods
mov
std
mov
ret
ret
push
dec
mov
xchg
fsubs
jecxz
cwtl
sarb
fcomps
test
sub
xorps
inc
out
insl
pop
add
sub
in
lea
loope,pn
nop
outsl
push
shll
jno
iret
in
test
and
xlat
push
lds
xor
sarl
jns
mov
imul
xlat
imul
pop
leave
loope
ljmp
es
repz
jl
stos
push
cld
test
mov
sub
iret
inc
pusha
sub
rorl
out
cmp
add
push
mov
rcr
mov
xchg
jg
cwtl
xchg
pusha
rolb
mov
std
mov
mov
lret
xlat
sub
jmp
insb
fs
sbb
cwtl
shr
aaa
cmp
sahf
pop
jb
mov
cli
pop
cmp
cmpsb
dec
push
pop
mov
mov
xor
mov
ja
sarb
dec
push
dec
mov
cmpsl
mov
and
cwtl
cmp
repnz
pop
outsl
adc
call
cwtl
cli
cli
pop
sub
lahf
fistl
pushf
into
cltd
scas
clc
in
repz
ljmp
add
pop
aas
jecxz
mov
rolb
insl
push
leave
jnp
repnz
mov
dec
jnp
push
pop
sti
cmpl
mov
lcall
pop
sbb
call
pusha
scas
mov
inc
es
xor
and
sub
stos
add
pop
dec
int
movsl
ret
arpl
sbb
repz
jp
pop
inc
dec
dec
rorl
mov
add
jl
pop
inc
and
mov
fcmovne
sub
pop
sahf
and
sbbl
pop
cmpl
mov
cmpsl
into
lods
mov
lcall
add
mov
in
es
je
mov
mov
push
adc
ja
sahf
mov
sbb
daa
pop
and
jbe
loopne
sbb
jmp
or
mov
or
sub
xor
jecxz
mov
adc
int
scas
scas
aas
jae
enter
mov
jle
in
adc
shll
xchg
pusha
ja
xor
cs
daa
clc
push
inc
pop
adc
xor
mov
pop
xchg
sub
outsb
cld
data16
adc
adcl
sbb
in
out
xor
cmp
mov
sub
xlat
js
lock
adc
xor
js
ret
loopne
fwait
test
push
gs
sub
mov
imul
xor
je
outsl
mov
jmp
adc
mov
inc
jo
shll
addr16
cmp
leave
and
mov
fcompl
jle
scas
mov
out
cmpsb
push
ret
gs
xor
test
pop
xchg
jle
es
or
xchg
cltd
cwtl
cs
add
push
out
outsl
xchg
mov
mov
aaa
xchg
and
push
and
scas
bound
fidivrl
ds
stos
shll
cmpsb
addb
inc
aas
adc
dec
mov
sbb
sbb
jge
pop
int3
cmp
pop
add
bound
stos
jge
adc
loop
fldenv
mov
aad
add
mov
pop
push
iret
xchg
ss
sub
shrb
mov
in
cmp
das
dec
sti
das
pop
push
jo
pop
cmp
adcb
mov
push
mov
sbb
add
or
out
mov
daa
lds
jg
jbe
mov
rcrb
out
das
xlat
mov
aam
fisttpll
mov
jge
xchg
movsb
add
jmp
cmpsl
bound
mov
push
std
stos
cld
sub
pop
xlat
push
out
mov
mov
les
inc
lahf
in
cmp
scas
imul
or
cwtl
mov
aad
and
pop
mov
mov
sbb
pop
xchg
repz
inc
in
jo
lods
xchg
mov
int3
cmpsl
mov
or
ds
adc
das
inc
loop
gs
rclb
sub
out
shll
cmp
or
add
arpl
jns
dec
inc
mov
sub
inc
inc
addl
scas
xchg
lods
or
js
jae
lret
sub
xchg
jmp
out
sbbl
lods
fs
pop
inc
jnp
xor
aam
scas
aam
push
jmp
inc
mov
ljmp
push
sbb
mov
jne
in
inc
out
pop
fwait
sub
xchg
ror
scas
xor
cmp
in
jne
mov
push
mov
adc
jb
fs
dec
shll
or
cmp
lret
xor
hlt
loop
xor
jg
in
test
ljmp
mov
mov
xchg
loopne
fs
stc
fcmovb
js
mov
jge
mov
jg
shrl
or
dec
mov
decl
fsubs
cmp
sub
pop
out
dec
pop
pusha
imul
inc
and
std
divb
enter
inc
js
xchg
fistps
inc
adc
popl
imul
mov
mov
mov
add
jns
or
inc
sub
cli
mov
mov
in
add
dec
xlat
sub
testb
adc
mov
xchg
test
dec
clc
jns
push
push
test
outsb
jp
xor
adcb
test
push
loopne
push
js
jl
jne
mov
cmp
pop
push
adc
fisttpl
aam
pop
xlat
cmpsl
mov
xchg
jns
mov
lods
popf
mov
iret
fidivrs
mov
xchg
mov
imul
fldl
rcll
pop
cmp
adc
pop
cwtl
into
push
aam
push
frstor
stos
cmp
rclb
orl
shl
lahf
mov
sbb
mov
sub
cmpsl
inc
hlt
jae
cmp
in
mov
out
popl
dec
pop
sub
pop
and
fdivs
cmc
dec
cmc
lods
inc
subl
inc
xor
adc
lcall
dec
call
adc
push
sbbb
mov
push
popa
pushf
dec
sub
clc
shll
loop
mov
sbb
lods
icebp
frstor
xor
rorb
xchg
jae
xor
mov
lods
pop
jae
stc
aad
adc
lahf
xchg
sbb
sbb
or
shll
js
rcrb
adc
xchg
mov
dec
xor
mov
stos
mov
pop
movsb
into
xchg
adc
jecxz
out
pushf
jns
mov
cld
mov
pop
rcrb
jge
lea
pusha
push
mov
sbb
subb
sbb
insb
cmp
cs
sti
or
xor
fidivl
xchg
clc
jne
lret
cmpsb
mov
test
sti
xor
mov
roll
sbb
sub
jns
mov
nop
cmp
int3
dec
inc
lret
sbb
add
add
mulb
out
jg
lahf
loopne
adc
or
les
inc
sub
ret
in
inc
cmpxchg
dec
push
jnp
adc
or
loop
inc
push
and
ss
popa
test
in
mov
mov
adc
mov
test
mov
cli
mov
shl
push
mov
mov
pop
mov
sub
sarl
xchg
adc
into
mov
cld
into
adc
dec
mov
scas
cmp
sub
sbb
push
mov
ja
cmpsl
into
xlat
out
incb
jnp
rclb
loope
mov
in
pop
sbb
lret
mov
dec
xor
repnz
addr16
loope
mov
sahf
adc
pop
and
lcall
mov
filds
or
mov
mov
sub
icebp
jecxz
jne
fsubs
sub
ljmp
mov
sbb
insb
pop
adcl
mov
dec
push
xchg
mov
loop
inc
jecxz
jnp
inc
call
out
movsl
push
mov
lcall
cmp
mov
inc
push
push
and
scas
imul
mov
imul
pushf
out
into
xchg
and
jb
lods
mov
push
jnp
dec
jno
xchg
loope
test
test
ja
sub
pop
fstp
dec
mov
mov
dec
mov
test
into
es
int
jl
fwait
cmp
out
push
mov
pop
stos
mov
and
inc
es
push
outsb
lcall
xchg
mov
adc
inc
mov
rcrl
sub
aad
movsl
lock
dec
int3
dec
push
xor
cmpsb
adc
mov
sbb
lcall
loop
imul
jno
es
aam
pop
jb
daa
inc
js
jg
mov
mov
js
in
push
imul
dec
iret
lods
and
jmp
add
cmc
inc
mov
out
cmp
inc
test
lea
loopne
jbe
jl
mov
enter
xchg
inc
push
adc
xchg
pop
rclb
push
jg
push
sbb
or
inc
push
ja
fisubs
or
icebp
ss
pop
hlt
push
lahf
addr16
push
sahf
in
int
insb
ljmp
push
add
cmp
and
shlb
data16
cli
sbb
loope
sub
push
or
jne
es
mov
mov
cmp
cwtl
adc
iret
ljmp
cmp
movsb
dec
dec
push
push
pop
enter
fsubl
push
dec
rclb
icebp
sbb
test
sub
push
clc
jnp
iret
jmp
ficomps
rcl
push
jae
xchg
xchg
push
jo
paddw
inc
cmp
dec
lods
jne
out
push
add
in
adc
jb
out
dec
insl
outsb
sbb
les
out
stos
mov
insb
into
jne
iret
sahf
cwtl
sub
or
xor
data16
mov
mov
outsb
adc
nop
dec
jle
push
out
js
push
adc
add
or
and
cmp
movsl
es
dec
and
pop
jae
inc
pusha
pop
icebp
add
pop
jmp
fstpl
scas
in
out
pop
cmc
jnp
dec
or
jmp
enter
cmp
inc
cmp
es
sub
inc
push
ret
add
inc
mov
push
nop
jle
fistps
push
xor
pop
add
shll
add
aad
dec
xchg
and
fldt
xlat
inc
into
jne
lahf
sub
add
inc
xchg
popa
mov
call
into
cmpsb
imul
lret
pop
dec
pop
cmp
icebp
fsubl
jnp
and
repz
and
dec
fstps
sbb
loop
cs
inc
sbb
or
pop
adc
repnz
and
into
jns
or
lods
xchg
scas
stos
dec
adc
and
aad
in
arpl
aas
sub
inc
sti
inc
mov
inc
or
and
and
push
cmp
add
mov
inc
cli
ljmp
xor
notb
stos
das
cmp
mov
stos
jb
mov
out
sbb
dec
xchg
enter
dec
sbb
xchg
sub
push
xor
ss
test
fwait
inc
sbb
mov
fucomi
imul
and
fs
jnp
xlat
or
loopne
cmpsb
fimuls
jmp
mov
dec
mov
lods
jb
and
iret
add
push
hlt
push
mov
xchg
jl
shll
sub
ds
sbb
xlat
hlt
mov
es
adc
into
adc
fidivl
aaa
add
cmp
das
adc
ds
and
pushf
lds
mov
xor
xchg
mov
xor
cmp
ret
inc
mov
shl
stc
sub
daa
imul
ss
dec
cmp
and
jb
icebp
pop
jae
loop
dec
repnz
sub
inc
popa
fistpll
adc
out
sub
mov
xchg
test
hlt
shrb
lret
inc
dec
test
push
rclb
or
mov
jno
xchg
stc
xchg
and
imul
mov
ljmp
sahf
pop
scas
xor
out
xchg
sub
adc
xchg
xor
inc
cmovp
push
lea
outsb
inc
jns
outsl
ja
clc
dec
mov
shl
aas
fcoml
fs
pusha
ficoms
fsts
or
sbb
jnp
fstl
adc
shl
sub
sbb
scas
fwait
movsb
cmp
jg
je
mov
pusha
shl
xor
pop
mov
es
sbb
mov
leave
xor
das
push
inc
sbb
mov
xchg
cmpsl
xchg
enter
std
hlt
je
cwtl
jno
hlt
mov
lahf
test
ror
subl
pusha
mov
hlt
std
int3
jmp
clc
repz
and
xchg
inc
push
fsubrl
int
loope
dec
pop
sbb
in
xor
aad
movsb
ss
in
push
cli
mov
xor
and
ss
push
das
ret
inc
std
scas
mov
sub
aad
mov
push
mov
push
lcall
pop
or
test
xchg
addr16
loop
pop
jne
mov
jl
repnz
jle
gs
add
dec
adcl
cmp
push
es
insl
mov
and
jns
and
inc
icebp
mov
and
aam
daa
fisubl
nop
mov
stos
pop
es
adc
adc
xchg
imul
popa
sub
ds
mov
out
mov
mov
fiaddl
ljmp
nop
xchg
push
mov
repz
stc
mov
cld
nop
aad
gs
repnz
movsb
cmp
jo
pop
push
dec
pop
xchg
xlat
mov
mov
fcompl
in
jmp
in
lret
xchg
mov
or
pop
lods
sahf
mov
aad
outsl
fdivp
les
push
mov
sti
pop
pop
pop
adc
div
out
lds
jmp
pushf
movsb
fstps
mov
inc
fcoml
out
imul
mov
pop
jecxz
movsl
jno
mov
push
sti
popa
out
aaa
bound
cmp
lret
inc
rolb
nop
inc
in
test
pop
test
test
fdivrp
xor
mov
mov
pop
movsb
cmpb
mov
mov
aad
mov
mov
jnp
enter
xlat
cmp
pop
jle
adc
adc
cmpsl
in
std
lahf
scas
mov
clc
or
scas
sub
ja
outsl
mov
das
jmp
sbb
les
mov
test
mov
fs
adc
enter
shrb
add
push
ss
je
or
adc
repnz
lret
jo
ja
lret
insl
push
xor
pushf
out
xchg
out
jne
xor
fndisi(8087
adc
stos
loop
sbb
je
aaa
outsb
adc
sahf
shrb
movsl
adc
sbb
xor
dec
mov
push
shrb
movb
sbb
cltd
mov
cmp
and
pop
push
fsubr
lods
sbb
pop
jl
mov
bound
xor
lcall
adc
mov
jo
fsubs
push
ret
xor
shll
and
xor
fwait
lea
push
outsb
and
jp
mov
cmp
sbb
imul
mov
sahf
jp
shll
push
adc
lcall
into
imul
xchg
push
and
mov
cmp
loope
or
or
sbb
fisubrs
mov
stos
add
scas
fstpl
xlat
fisubl
bound
jle
pushf
leave
push
add
inc
adc
xor
push
sub
add
insl
push
push
rolb
jnp
sbb
push
fwait
jo
adc
pop
outsb
and
mov
gs
add
mov
subb
adc
sub
or
xchg
mov
xor
xorb
data16
idivb
mov
push
ja
push
ret
stc
push
push
mov
inc
push
aam
movsb
test
push
push
inc
mov
sub
dec
xchg
cwtl
dec
or
add
jns
loopne
sub
adc
dec
shll
xor
shl
jo
mov
loope
jg
pop
mov
pop
orb
add
movsl
rep
mov
adc
or
repnz
ret
in
dec
push
or
inc
push
repnz
jbe
and
push
mov
mov
idivl
scas
inc
stos
insb
jne
ljmp
xor
jns
cmc
imul
and
sbb
fimull
xor
push
neg
dec
sub
jno
xor
add
xor
sbb
ljmp
and
movntq
mov
addr16
movsb
and
mov
mov
push
sbb
movsb
fistpl
jns
out
jno
ja
cli
fstps
and
fld
idivb
test
sub
mov
cmpsb
adc
jno
push
add
mov
xchg
add
loop
in
lea
or
jne
or
in
scas
mov
adc
loope
mov
stos
push
sbb
jne
sub
cli
notb
push
repz
enter
into
shl
mov
or
aaa
jne
or
lcall
pop
fsqrt
rcrl
push
jno
jmp
aaa
daa
and
sbb
clc
std
mov
icebp
push
cmpb
mov
mov
lahf
aas
int3
ljmp
es
ret
mov
ret
fists
mov
xchg
pop
jno
xor
mov
cld
mov
mov
mov
mov
imul
add
lcall
sbb
ljmp
xchg
jne
hlt
aad
jnp
mov
out
inc
or
cs
cmp
sbb
push
rcrb
loopne
dec
sbb
dec
iret
arpl
out
loopne
sti
jle
subl
mov
movsl
in
pop
aaa
xor
mov
add
popf
xor
ret
sub
ret
lret
adc
mov
xor
xor
iret
jp
push
cmp
mov
cmp
xor
pop
cmp
jmp
mov
dec
mov
inc
outsb
rorl
sub
ret
daa
out
dec
popf
sbb
loop
stc
not
jno
inc
sar
rcl
jle
and
xor
dec
fstps
cmc
mov
outsb
lods
fisubl
pop
mov
xor
aad
mov
sbb
xor
mov
jmp
or
testl
loop
dec
adc
mov
jo
inc
test
popw
nop
cmpsb
loope
xchg
push
fldl
sbb
jecxz
mov
mov
xor
xchg
dec
mov
ret
push
jle,pn
jbe
mov
shrb
aam
adc
fadd
movsb
nop
xor
lds
orb
add
fstpl
shl
shrb
stc
es
mov
lahf
push
jg
and
lahf
mov
imul
pop
aad
push
outsl
push
pop
and
sub
aas
xchg
push
out
fildl
pop
nop
mov
psllw
pop
call
popa
xchg
mov
sub
dec
test
cmp
cwtl
test
push
push
iret
jp
lea
or
subb
lock
outsl
or
dec
push
push
lea
and
jae
xor
addl
repnz
mov
mov
dec
and
jbe
jl
cld
mov
out
mov
mov
iret
pop
xorb
loop
inc
mov
out
xchg
fisttpl
adc
je
and
repnz
cmp
cmc
push
dec
sub
cmpsl
shrb
push
sbbb
popf
fsub
inc
inc
jo
subl
pop
push
mov
and
mov
push
ret
xchg
pop
push
jmp
cmp
pop
fmuls
arpl
mov
mov
in
fsubr
cmc
or
push
mov
cmpsb
adc
ret
jbe
sub
aas
mov
pop
adc
push
aam
in
push
shlb
cwtl
aas
movsb
sub
outsb
mov
fstpt
fdivp
or
adc
scas
pop
add
inc
inc
pusha
jl
imul
jb,pt
ret
fadds
outsl
jmp
mov
insl
fstps
jb
sbb
ljmp
aaa
lahf
clc
xor
in
in
dec
xlat
push
js
push
fldl2e
sbb
repz
xchg
testb
xorb
and
cmp
pop
inc
pop
xchg
lock
leave
inc
fcoms
or
out
mov
xor
leave
mov
sub
mov
mov
xor
adc
mov
fisubl
aaa
push
mov
or
jl
lret
orl
mov
mov
sbb
jge
xor
or
push
sub
jo
sti
out
push
push
mov
es
adc
xor
adc
cld
jge
ds
push
int
sahf
push
movsb
push
mov
stc
shl
testl
and
stos
cwtl
pop
mov
cmp
sbb
loopne
mov
dec
notl
enter
out
xchg
xor
stos
repz
jo
dec
jb
cmc
rcrb
iret
or
icebp
cmp
push
xchg
xchg
outsl
add
or
dec
nop
xchg
in
ljmp
mov
xor
fstpt
adc
cltd
psubw
jecxz
aas
cmpsb
dec
clc
dec
pop
test
not
cmp
test
push
in
mov
xchg
rorb
scas
bound
sahf
push
cltd
push
dec
out
ds
scas
or
sbb
fdivrl
lahf
gs
sahf
and
scas
mov
pop
loope
fwait
inc
adc
inc
negl
enter
movsl
or
mov
stc
and
dec
and
aaa
pop
int
lcall
lock
or
xorb
loope
loope
cs
sub
inc
addb
outsl
mov
xor
call
in
vunpcklpd
cmp
fwait
insb
add
testb
scas
add
jge
daa
xor
xor
adc
enter
inc
push
sbb
clc
xor
in
rcl
add
add
and
mov
xchg
inc
orb
out
test
pushf
fldcw
cli
es
outsb
stos
aam
out
jne
mov
bound
add
ss
jnp
pop
push
mov
add
pop
in
inc
pop
clc
jbe
push
repz
je
xchg
or
dec
pop
sbb
jb
lock
mov
or
repnz
hlt
sti
test
mov
pop
filds
jbe
dec
rcll
rcl
push
jge
ss
mov
mov
ret
repnz
pop
xchg
sarb
sbb
pop
dec
lcall
into
aas
bound
dec
rolb
add
movsb
sub
inc
cmp
adc
push
ficompl
pop
in
or
rcr
stos
xchg
cmpsb
sti
push
mov
lock
dec
out
imul
insl
shll
rcll
aam
andb
inc
bound
xchg
pop
xlat
pop
mov
adc
or
arpl
dec
sbb
xorb
movsl
or
jb
test
cli
jge
mov
add
test
test
test
js
stos
push
shl
pop
jbe
jns
lcall
dec
lcall
mov
lahf
mov
je
cs
arpl
popf
ljmp
sub
repz
dec
jb
add
or
mov
sub
xchg
testl
xor
ss
std
pop
pop
xor
testl
ret
repnz
mov
xor
dec
adc
and
sti
xchg
cmp
repnz
rolb
cmc
push
enter
mov
lret
xchg
dec
gs
popf
icebp
cmp
push
sub
or
pop
jbe
push
aad
push
inc
inc
and
sahf
mov
fcoms
lcall
dec
insb
hlt
mov
xchg
push
lcall
pop
or
repz
adc
stos
shrl
je
jg
dec
stc
inc
arpl
jge
lret
fnstenv
adc
xor
sti
or
push
add
adc
mov
sub
push
mov
adc
push
icebp
mov
ret
loope
jg
test
repz
xor
xchg
lock
pop
jno
push
adc
mov
test
pop
jmp
dec
jne
push
adc
and
jmp
jmp
dec
je,pn
mov
roll
in
inc
cmp
dec
fisttpl
adc
leave
test
fdivs
mov
jp
fnstcw
arpl
stc
enter
push
stc
mov
add
sub
jecxz
push
call
lcall
cmp
mov
inc
js
sub
es
and
cli
test
mov
lods
scas
add
sub
mov
jnp
out
je
out
dec
pushf
add
std
jae
mov
jb
cli
pop
fcomip
lret
call
hlt
dec
add
jl
bound
add
shll
inc
sbb
mov
xadd
es
flds
jbe
or
clc
dec
ljmp
dec
lret
xor
xor
inc
mov
mov
out
xor
push
in
aaa
dec
fdiv
xor
addr16
fiadds
iret
xchg
mov
mov
push
xchg
in
sub
loop
push
test
xchg
js
mov
dec
inc
or
sub
pop
mov
gs
jg
and
xchg
bound
int3
inc
xchg
push
imul
xchg
cmp
ficomps
pushf
mov
pop
xor
dec
lret
les
and
inc
push
sub
mulb
add
repz
jb
fldt
pop
cmp
mov
or
pop
and
das
daa
xchg
pop
xchg
mov
enter
adc
rcl
inc
lods
inc
dec
pop
subb
xor
std
cmp
mov
call
dec
jecxz
xor
test
mov
push
mov
scas
xchg
mov
add
adc
push
shll
rclb
aaa
xor
sub
mov
xchg
add
xlat
mov
adc
push
mov
and
xlat
pop
out
cmp
pushf
mov
pop
sub
fistpl
fmull
jle
sub
fs
pop
iret
pop
xchg
adc
jo
mov
adc
ret
cmp
daa
and
cmc
aad
pop
push
scas
cmp
push
loope
sar
cli
pop
cmpxchg
cmpsl
pause
ds
lods
daa
ss
jo
and
ja
pop
lahf
lea
call
pop
scas
sub
test
mov
cmpsl
mov
aas
pop
pusha
jle
add
fdivl
dec
dec
push
cmp
push
out
shlb
aas
jge
xor
inc
das
inc
ret
out
dec
int3
xchg
xchg
scas
testb
mov
nop
arpl
xor
mov
sub
rcr
xchg
ret
jp
xchg
jbe
push
and
or
pop
mov
add
popf
sub
and
xchg
enter
int3
push
jle
lahf
and
push
adc
mov
jl
sbb
subb
int3
lcall
push
pop
adc
aaa
inc
aad
iret
xchg
stc
mov
dec
mov
xor
and
pop
andl
loop
mov
mov
bound
add
jae
int3
inc
dec
mov
ret
lret
shl
pop
push
cmpsl
cmp
je
pop
cmp
outsl
dec
inc
pop
in
ret
imul
jmp
pusha
or
mov
cmpsb
and
rcrl
pop
inc
push
xlat
aaa
mov
fimuls
pop
adc
lahf
mov
jo
incb
das
push
mov
xor
iret
insb
icebp
cs
xor
mov
sub
mov
pop
addb
mov
add
test
push
push
or
mov
pop
xchg
pop
mov
xor
jp
movd
mov
fwait
jg
mov
jnp
or
movsl
in
mov
rcll
jns
lea
les
cmp
xchg
loop
sbb
dec
aad
dec
adc
into
mov
mov
mov
dec
orl
cmp
pusha
mov
cld
dec
inc
mov
nop
out
xor
mov
rolb
adc
cmp
pushl
push
idiv
int3
push
push
repz
mov
pop
fidivs
push
sti
std
jg
mov
hlt
add
into
mov
mov
call
insb
add
push
or
mov
inc
mov
mov
mov
in
nop
dec
les
or
adc
call
inc
lods
inc
xor
imul
test
cmp
aad
pushf
mov
adc
cwtl
inc
inc
push
f2xm1
popf
inc
in
pop
shrl
and
sub
ret
adc
pop
sahf
xor
push
cli
arpl
clc
fnstcw
dec
aaa
fwait
mov
lods
adc
mov
adc
cmpsb
xchg
ret
pop
leave
lock
dec
jns
mov
mov
dec
mov
cli
call
std
and
sbb
test
roll
test
inc
leave
sbb
ja
testl
or
inc
jg
and
testb
cmp
fs
jnp
push
inc
hlt
push
test
sti
push
and
mov
push
insl
push
lcall
mov
or
in
and
xlat
test
pushf
and
add
clc
cmp
pusha
into
mov
xchg
push
mov
shrb
and
movsb
and
mov
pop
jmp
mov
loop
mov
into
int
leave
mov
xor
ljmp
xor
pop
cli
int
shll
repnz
jmp
mov
es
shrl
sub
loop
inc
mov
add
xchg
out
sbbl
push
data16
sub
sub
pop
call
or
push
das
pop
iret
sti
cmp
pop
lock
mov
jmp
leave
fimuls
jmp
lea
inc
leave
nop
xlat
inc
mov
fldt
xchg
dec
jae
or
sub
dec
out
cmp
fsub
test
in
lretw
push
xchg
xchg
movsl
jbe
subb
leave
xor
xor
lahf
xchg
shrb
cwtl
fwait
inc
sbbb
adc
mov
push
mov
sbb
sub
xchg
cmpsl
inc
push
mov
and
inc
gs
xorb
mov
addb
dec
mov
jge
in
inc
call
loopne
je
fwait
in
lock
mov
xlat
inc
adc
shll
mov
sbb
push
and
imul
add
mov
and
pop
xor
jmp
dec
push
lret
sbb
movsb
cmc
cmp
sub
mov
decb
and
jo
mov
outsl
mov
push
and
push
repz
cli
push
xchg
lret
add
adc
xor
sbb
negl
xchg
push
cld
stos
js
out
lock
sub
call
pop
dec
hlt
mov
sbb
and
and
pusha
fwait
sub
inc
inc
fildll
mov
or
mov
clc
gs
pusha
ds
in
ret
inc
xchg
ljmp
mov
pop
lret
dec
mov
pop
xor
rcrb
mov
dec
inc
cs
lock
cmp
add
sub
in
jl
jmp
imul
test
pusha
sahf
lahf
ret
out
push
mov
jle
cmpsl
sub
icebp
dec
sbb
jo
jo
bound
dec
jns
or
add
iret
inc
int3
jno
mov
mov
mov
nopl
pop
mov
push
adc
xchg
mov
jl
lds
dec
pusha
cld
outsb
subb
cmp
mov
pop
shlb
jp
fidivs
mov
insb
push
adc
jge
pop
jmp
push
xor
push
pop
adc
icebp
jp
inc
jp
sbb
xor
and
inc
dec
lcall
adc
xchg
xchg
xchg
dec
inc
and
jle
shll
iret
or
test
mov
fisubrl
daa
dec
movb
jg
andl
or
dec
insb
rorl
adc
pushf
mov
sarb
dec
push
adc
frstor
sti
movsl
arpl
mov
sbb
cmp
jmp
in
xchg
rol
shrb
mov
inc
popa
scas
add
fimuls
ret
mov
cwtl
scas
or
gs
cmc
dec
pop
scas
mov
pop
mov
hlt
ljmp
enter
push
cmp
scas
push
int
decb
fdivs
roll
dec
mov
sub
pusha
lea
aad
sub
decl
lods
sbb
mov
mov
xchg
cld
xlat
data16
ficompl
call
stos
mov
add
push
out
sub
popa
mov
pop
inc
imul
imull
dec
in
dec
mov
mov
add
lahf
push
or
mov
and
dec
mov
adcb
cld
lods
push
push
push
sub
push
adc
loope
cmp
iret
pop
out
xor
mov
dec
repnz
add
mov
inc
out
sahf
add
sub
mov
sti
icebp
fdivl
sbb
mov
ds
arpl
mov
rolb
lds
movsl
push
jecxz
icebp
and
loop
pop
dec
cwtl
sti
fs
push
pusha
fcoml
push
loop
lret
xor
xchg
test
mov
push
adc
lcall
test
dec
inc
dec
mov
aad
js
dec
pop
cli
mov
jne
jge
stos
and
repz
sub
xor
loopne
mov
sti
call
int
mov
sub
inc
push
jp
nop
pop
and
mov
bound
pop
imul
xor
popa
sub
idivl
add
adc
fcmovnbe
add
pop
sbb
scas
mov
sti
out
jecxz
in
fcmovnb
mov
and
or
addr16
sbb
jno
push
sarl
out
cmp
mov
jne
mov
fdivrl
adc
outsl
mov
test
mov
sub
pushf
adc
lea
imul
cli
jo
cmp
jnp
mov
sbb
test
popf
inc
icebp
fdivrl
mov
or
inc
pop
ljmp
call
fidivl
daa
and
aam
addr16
lahf
add
push
dec
outsb
arpl
jb
inc
jns
outsl
xor
into
lcall
sbbl
loopne
imul
or
sbb
dec
int
xor
mov
cmp
xor
icebp
shl
rorl
mov
mov
icebp
idivl
pop
gs
xor
add
xor
jne
pop
jecxz
jns
push
jb
sub
scas
mov
movsl
sahf
mov
clc
cmp
pushf
repz
fldl
fwait
outsl
fcmovnbe
ret
cwtl
daa
xchg
nop
jp
flds
push
xor
mov
mov
mov
cmpsb
dec
xor
sbb
mov
mov
test
scas
pop
xor
and
and
iret
or
jp
mul
data16
fstpt
out
daa
mov
rcrb
pop
cmpsl
push
mov
adc
mov
lock
mov
cmp
imul
popa
call
jnp
mov
inc
rorb
nop
inc
ret
and
jl
nop
inc
repz
sbb
push
add
and
fmuls
outsb
dec
outsb
fiaddl
movsl
push
icebp
loope
add
insb
sbb
inc
push
out
stc
xchg
fucomip
sbb
add
cmp
neg
mov
add
idivl
das
inc
in
pop
cwtl
adc
stos
ss
std
xor
iret
arpl
ret
gs
jb
sbb
or
mov
sub
cmp
fsubrs
lea
ds
sbb
fidivs
adc
ss
xchg
iret
or
dec
mov
jns
in
cmc
out
mov
rorb
mov
imul
mov
inc
int
pop
sahf
ljmp
dec
cmp
ds
mov
mov
xchg
sub
fistps
pop
xchg
dec
sahf
arpl
adc
into
jle
and
mov
shrb
lods
pop
xchg
pop
repz
in
or
mov
mov
mov
push
adc
cltd
je
cwtl
mov
or
shll
orb
inc
gs
pop
outsl
adc
aam
mov
mov
jg
in
sub
mov
lcall
pushl
imul
dec
xchg
imul
mov
cmp
xor
les
out
and
mov
fcoms
dec
xlat
jp
lods
xchg
jmp
iret
jo
jp
xchg
popa
or
pop
or
test
xlat
xchg
dec
fadd
ja
lcall
jo
push
fadd
pop
ret
leave
push
dec
mov
das
cmp
sarb
push
mov
mov
push
pop
sbb
int
inc
out
xchg
iret
ficomps
insl
push
cltd
jne
sub
sub
stos
insl
pop
ljmp
icebp
xchg
sub
stos
sbb
and
xorb
cmpsb
xlat
ret
imul
std
fbld
pop
inc
frstor
inc
pop
sbb
and
sbb
dec
pop
xlat
rcr
adc
test
jge
jle
push
lcall
mov
je
mov
jecxz
inc
push
cli
ss
aam
pushf
add
sbb
inc
outsl
pop
fadd
xchg
pop
add
sbb
pusha
lock
sub
and
lea
lret
or
lahf
js
pop
into
and
sti
xchg
push
pushf
cmp
aam
mov
test
push
cltd
divl
inc
inc
cmp
leave
inc
sub
shll
push
dec
fldl
adc
frstor
xchg
or
jbe
and
test
cmpsl
shlb
or
add
es
bound
ja
xchg
sbb
mov
or
sub
cltd
push
adc
xchg
adc
xor
js
jecxz
fdivs
dec
dec
stos
dec
inc
cmp
jmp
push
fstpl
fidivrl
push
xor
jge
xchg
jbe
fdivrp
push
mov
loopne
jmp
mov
mov
push
test
hlt
movsl
enter
cmp
mov
mov
inc
mov
jecxz
loopne
push
jb
mov
mov
jp
xor
dec
mov
mov
mov
cmpsb
icebp
dec
mov
js
push
pop
jbe
inc
jmp
shl
push
add
pop
stos
dec
outsb
sbb
xchg
dec
fbld
dec
xchg
fnstsw
insb
mov
leave
into
pop
pop
cmp
popa
mov
push
stos
insl
push
sub
dec
std
sbb
out
inc
dec
xchg
loop
outsb
cwtl
pop
jle
xor
mov
movsl
xor
sbb
jae
enter
lods
bound
jb
shrb
iret
rolb
cltd
inc
push
xchg
xchg
jecxz
inc
pop
inc
imul
sbb
jne
push
adc
sub
out
inc
cmp
dec
xchg
hlt
scas
fisttps
jne
mov
or
aaa
adc
int
std
jae
jg
jae
movsb
ss
mov
mov
cwtl
pop
mov
fdivl
mov
shlb
jbe
cli
jns
pop
sbb
lods
push
jle
dec
dec
mov
adc
loopne
aaa
xchg
es
xor
cmp
loop
fisubl
rcr
mov
push
cmc
orl
out
sbb
xor
mov
sub
push
mov
das
mov
push
not
adc
std
shrb
sub
or
test
out
pop
outsb
mov
lods
cmp
call
push
insl
int
bound
xor
xor
xor
mov
es
movsb
adcb
pop
aad
sub
sbb
outsl
mov
cmp
insl
test
push
outsb
shlb
dec
push
cmp
out
filds
movsl
es
add
sub
lods
fiaddl
stc
mov
inc
adc
dec
mov
sti
or
js
lret
fistpll
adc
sbb
mov
rorl
cmpl
jb
outsl
add
in
outsb
cmp
hlt
mov
xchg
add
fbstp
cmp
sub
leave
inc
repz
sbb
imul
movsb
xchg
test
sub
sub
and
sub
scas
call
xchg
aam
xor
fst
jmp
fmul
cltd
cltd
xchg
negb
lahf
jne
mov
mov
push
mov
lock
insb
mov
sbb
rcrb
repz
and
lock
cmpsb
repz
out
orl
test
xor
in
in
imul
in
es
and
adc
es
out
sbb
and
push
xchg
stc
pushf
scas
cmp
mov
jbe
mov
cs
mov
test
mov
sub
out
jno
jmp
cwtl
cmp
xchg
ds
ficoms
in
pop
loope
push
jbe
adc
sbb
inc
mov
pop
sbb
or
dec
mov
mov
sbb
test
aaa
pushf
or
push
mov
ds
aam
sub
sbb
xchg
and
aam
inc
xchg
sub
stos
mov
insb
mov
loop
fildl
rorb
out
xor
loope
movsl
jp
mov
rol
dec
and
sub
aas
inc
je
lret
sbb
jge
nop
mov
test
jge
mov
jmp
adc
adc
and
out
data16
pop
pop
sub
jmp
mov
cmp
lds
shl
pushf
lock
sub
sbb
lret
pop
fs
das
loopne
cmp
gs
subl
daa
pusha
cmp
aaa
inc
daa
pop
fcomps
pop
dec
push
aaa
rcll
and
cmp
jl
outsb
scas
and
movsb
push
xor
and
pop
pop
and
push
push
test
test
jns
nop
dec
push
add
out
inc
fs
sti
jmp
mov
push
xor
add
scas
lds
scas
sahf
cli
pop
jne
push
jmp
js
test
or
xchg
xor
inc
mov
mov
scas
scas
or
sbb
fidivs
pop
pusha
sbb
jmp
hlt
cmp
cmp
cmpsl
pop
add
dec
loope
rcrl
mov
jecxz
mov
cmp
cmp
icebp
mov
adcl
mov
and
rcll
daa
cld
int
dec
loop
aam
cwtl
jae
sbb
test
mov
sub
pusha
jle
clc
inc
mov
gs
call
imulb
adc
cmp
pop
mov
mov
ret
shll
pop
aam
lock
xor
mov
sub
sbb
ljmp
gs
push
xchg
adc
rclb
rolb
jno
jnp
clc
adc
mov
xchg
jns
xlat
popf
cmpw
jne
jns
ljmp
in
push
aad
mov
inc
jecxz,pt
ss
xchg
iret
out
into
cmp
les
sub
and
and
jae
ffreep
enter
add
lea
loopne
or
jmp
pop
jmp
outsb
out
jnp
sbb
jecxz
js
fnstcw
les
cmp
sub
mov
mov
or
ficomps
stos
push
imul
inc
std
inc
lahf
sub
nop
in
jnp
sarl
popf
ljmp
mov
push
pop
push
jl
pop
sub
subl
lods
xor
jo
and
pop
add
jmp
inc
stc
or
jmp
mov
movsb
sub
inc
js
xchg
pop
and
fisubrs
fwait
push
ds
inc
fwait
aaa
movsl
dec
cltd
pop
lods
inc
add
adc
insb
sbbb
pop
outsl
cmp
ljmp
fwait
leave
out
cld
cmp
dec
inc
and
add
aad
inc
stos
dec
adc
nop
mov
mov
cld
rcl
pop
xchg
cmp
xor
xchg
mov
mov
test
lods
sub
sbb
or
cs
push
fldcw
das
mov
mov
call
out
daa
jmp
stos
push
push
loope
daa
or
scas
adc
dec
clc
mov
dec
fisubrl
push
push
inc
mov
test
dec
lret
enter
aad
xor
cmpsb
jge
xchg
test
mov
lods
rclb
aam
add
adc
adc
lret
mov
ret
out
pop
jnp
inc
sub
ja
xchg
fnsave
daa
cmc
aas
mov
fstps
cmp
cwtl
dec
rorb
fdivl
cmp
dec
or
inc
or
iret
and
pushf
loop
pop
movsl
rorb
push
sbb
data16
into
bound
fs
xchg
sbb
xchg
add
cli
push
sbb
add
imul
mov
or
je
and
mov
repz
pop
jle
popa
fwait
mov
xor
in
xor
cli
or
cmp
in
pushf
add
fiadds
xor
dec
outsl
lock
test
cmp
sti
or
jg
pushf
mov
jbe
cmp
inc
ret
cmpsb
stos
ret
imul
decl
push
mov
cmpl
addr16
mov
push
jne
push
adc
cli
mov
sahf
cs
or
xorl
data16
mov
jns
sub
lret
push
arpl
out
mov
aas
xchg
sub
dec
xchg
mov
notl
or
and
fisttpl
push
mov
sbb
or
jne
std
in
lret
nop
popa
and
outsb
mov
cmpsb
xor
jle
jno
or
adc
jns
xor
or
pop
sub
hlt
mov
push
jb
cwtl
adc
dec
dec
call
or
xchg
mov
lret
inc
lods
in
push
sbb
mov
dec
sarl
cld
leave
jno
ljmp
repnz
movsl
sbb
mov
mov
sbb
outsb
jb
iret
mov
in
je
pop
es
dec
cli
loop
je
push
sub
sbb
jne
mov
sti
xor
mov
push
pop
in
scas
or
loop
fbld
insl
mov
adc
out
inc
scas
subb
dec
addb
repnz
cwtl
clc
ret
push
cmp
andl
push
add
inc
mov
in
cs
push
xchg
repnz
imulb
add
sub
sbb
ret
fstl
mov
fdivrs
sbb
cwtl
mov
pop
mov
mov
sbb
add
mov
movsl
jae
jl
loopne
push
les
leave
mov
jb
mov
push
sbb
sub
js
outsl
sbb
cltd
pop
fsubrl
and
ret
inc
mov
bnd
dec
xor
push
leave
pop
jne
xchg
mov
fcomip
jp
push
mov
jae
and
jp
jno
sbb
xchg
inc
into
insb
and
jb
mov
lods
cs
ret
popf
data16
andl
cs
pop
pop
std
jp
mov
xchg
cld
aam
arpl
daa
js
mov
das
lahf
ret
mov
lods
dec
lret
cmpsb
rcrb
mov
adc
add
dec
or
fdivrs
rcr
mov
cs
xchg
out
add
mov
sahf
push
cmpb
stos
adc
push
sbb
and
pop
cmp
lret
dec
imul
lcall
push
xchg
sarl
mov
fiadds
test
sarb
rclw
inc
add
pop
inc
repz
shrl
movsb
and
sbb
push
into
dec
mov
xchg
cltd
mov
insb
sti
outsb
jb
pop
and
pop
bound
loop
call
imul
ljmp
jmp
pop
sarl
adc
adc
dec
in
xchg
xchg
adc
mov
mov
mov
xchg
popf
mov
push
loopne
or
out
xor
sbb
jno,pn
jne
sub
cli
movsb
into
xchg
addb
lods
fbld
data16
pop
mov
out
xor
fdivrl
push
mov
and
push
lret
cmc
outsl
fimuls
cmp
test
pushf
repnz
or
lods
dec
repz
in
push
hlt
or
addr16
mov
fsubs
mov
jg
inc
mov
insl
fdivrs
push
fsubrl
dec
sub
stos
enter
outsl
mov
jge
xlat
mov
mov
jno
lret
jmp
jecxz
sub
lock
sub
aas
dec
jns
loopne
sbb
imul
push
into
pop
insl
jbe
push
daa
mov
dec
xor
add
loop
jae
jb
test
mov
fcompl
mov
jnp
push
jae
and
aad
or
xchg
andl
push
cmp
mov
fmull
pop
nop
test
daa
push
imul
jno
pop
mov
movl
fdivl
pop
jle
cld
popf
jno
push
mov
jl
mov
or
and
pop
add
mov
movsb
sbb
pop
add
fiaddl
sbb
mov
push
jbe
xor
mov
daa
mov
mov
bound
xor
sub
lds
std
cld
push
add
les
jl
stos
decl
push
insl
adc
sbb
loopne
mov
rorl
and
fdivrl
addl
cmc
out
mov
or
jbe
sub
cmp
xor
in
xor
inc
stos
mov
mov
xchg
aad
lods
mov
push
outsl
scas
jne
fldenv
push
stc
lcall
jmp
inc
pop
sbb
cmpsl
and
jb
outsl
pop
mov
insl
test
jmp
orb
xor
dec
insl
cmp
aam
inc
or
mov
lds
mov
adc
into
xchg
xchg
or
sbb
call
scas
jmp
inc
mov
iret
jge
movsl
ss
dec
inc
sbb
mov
sbbb
mov
int3
pop
mov
cmp
or
stc
cmc
insl
test
jno
and
xor
jne
pop
cwtl
or
jns
out
mov
out
sbb
add
pop
and
fsubrs
add
mov
js
je
mov
sbb
sub
push
dec
lods
gs
dec
jnp
push
in
movsl
jp
inc
jl
or
xor
and
and
gs
inc
push
arpl
neg
inc
mov
ficomps
jl
stc
ds
aad
sahf
out
insl
cmpsb
shr
push
cs
mov
aaa
pushf
jbe
add
out
out
mov
fisttpll
xor
fucomi
ja
out
mov
ss
or
scas
adc
push
and
ja
xor
int
dec
and
aad
insb
outsb
inc
and
or
ret
jno
pop
popf
mov
filds
jl
nop
mov
in
pop
aam
sub
jb
lahf
sbb
adc
xor
shrl
sub
mov
mov
add
test
out
es
xor
sub
aad
mov
sub
adc
mov
fmull
mov
push
pop
pop
xor
lret
push
dec
pop
sub
xlat
mov
mul
xor
insb
out
mov
pop
push
cmp
fistpll
xor
nop
imul
jno
movsb
mov
lahf
push
pop
lods
xchg
cmp
and
mov
dec
rclb
insl
mov
mov
xor
cwtl
out
call
push
mov
jl
or
test
xchg
adc
xor
xchg
push
cmp
loope
mov
decl
push
xchg
adc
mov
outsl
fadd
adc
popa
loopne
adc
je
jae
add
xchg
fcoms
pusha
lea
lock
outsl
sbb
pop
or
adc
push
repnz
push
jno
xchg
mov
dec
adc
out
mov
dec
ja
mov
ja
cmp
jo
mov
fcompl
push
jecxz
cltd
cmp
dec
dec
out
in
insb
xor
mov
adc
mov
sbb
mov
inc
inc
xchg
mov
and
xor
ljmp
icebp
fisttpl
subl
adc
pop
push
ljmp
cmp
aas
lods
fs
outsb
ret
cmp
add
adc
pop
xor
xchg
mov
pusha
loopne
lahf
pop
insl
bound
mov
addl
mov
and
cs
orl
ret
jae
push
jbe
int
aam
in
bnd
fisubl
or
in
cmc
jmp
dec
repnz
or
fs
cmc
pop
xchg
out
xchg
movsb
std
dec
cltd
rorb
mov
icebp
cs
stos
jge
xchg
sub
push
mov
inc
aad
rcr
jecxz
dec
rorb
lea
xchg
inc
outsb
in
test
icebp
jb
fbld
jle
add
sbb
shll
sbb
out
mov
mov
mov
fnstsw
jbe
pop
jecxz
enter
xor
push
push
xchg
outsl
enter
popf
jge
lock
rcll
sub
push
mov
roll
pop
sub
lds
pop
add
cmp
pop
dec
add
or
push
roll
aad
shl
dec
mov
mov
int3
sti
sub
jb
pop
repnz
adc
shlb
mov
insb
inc
cmp
imul
into
push
loopne,pn
push
xchg
mov
mov
xor
ret
push
pop
mov
pop
cmpsb
push
sbb
test
sub
test
xor
adc
das
pop
int
mov
jbe
in
sbb
pop
roll
add
jge
pop
dec
pop
and
jb
push
add
mov
dec
popa
mov
inc
xor
sub
inc
sbb
inc
cmp
ja
mov
loop
cld
pop
movsb
into
test
pop
lea
addr16
mov
add
mov
popf
cltd
dec
pop
cmp
andl
aad
imul
pushf
xchg
mov
cmp
test
bound
ret
pop
lock
rol
inc
add
arpl
popa
movsb
hlt
aas
adc
ja
int
out
pop
add
ret
ljmp
out
push
or
popf
pop
adc
ret
ja
stc
loope
mov
xchg
add
inc
inc
insb
jno
je
dec
sbb
std
fwait
mov
in
pop
mov
les
dec
fisttpl
or
push
xor
enter
cmp
stos
xor
xchg
dec
repnz
adc
js
dec
dec
lods
push
push
leave
adc
sub
xchg
test
les
into
fsubs
fcomps
mov
adc
mov
adc
mov
cltd
cs
jcxz
dec
pop
and
or
std
sub
xchg
pop
test
pop
or
mov
jmp
cmp
test
add
mov
iret
dec
cli
inc
sbb
mov
cmc
fwait
add
cmp
in
out
int3
cmp
lcall
repnz
movsb
fs
sbb
shll
push
test
jmp
cli
faddp
jno
aaa
insl
lods
jp
jns
ret
jno
and
ja
and
stos
scas
inc
push
into
repnz
jnp
lods
or
pop
push
adcb
push
xor
loopne
xchg
sar
sarb
jg
stos
lret
sahf
movsl
lcall
or
ja
ja
xchg
jp
lods
sub
dec
adc
inc
and
imul
outsb
jle
mov
lock
fnsave
decw
adcb
pushaw
insl
pop
ljmp
or
movsl
cmp
pop
mov
push
fisttps
push
inc
pushf
shrl
cmpsl
test
or
int3
dec
push
rol
dec
fcmovnbe
out
scas
sbb
call
xchg
dec
paddsb
xchg
inc
testb
in
lcall
dec
or
pop
test
push
mov
rorl
sub
xchg
jg
jle
loopne
adc
mov
arpl
push
jne
bsf
jbe
ficoml
and
adc
push
inc
int
fwait
adcb
mov
inc
push
daa
and
pop
push
xchg
and
xchg
mov
dec
ds
arpl
adc
dec
mov
inc
test
dec
inc
loop
and
pop
lahf
lsl
lock
pop
pop
sub
adc
lods
pop
dec
xchg
sbb
jg
stc
test
jg
out
shl
push
into
jae
jnp
sbb
push
inc
test
inc
push
add
icebp
rcl
mov
xor
cmpsl
out
pop
fwait
jb
test
pushf
pop
or
inc
jb
adc
js
cmp
test
leave
hlt
sub
xor
cld
inc
movsl
int3
cld
jno
mov
or
xchg
ljmp
add
or
and
or
cld
pop
fwait
mov
addr16
enter
add
loope
arpl
test
pop
pushf
xchg
xchg
hlt
sti
cmpsb
jnp
pop
mov
inc
jl
incl
ss
cwtl
leave
fisubl
and
sbb
stc
loop
jg
xlat
loopne
aaa
les
xor
sub
cs
rclb
es
imul
or
ss
and
pop
push
loop
mov
mov
pushl
fs
lcall
or
daa
xchg
push
cmc
push
dec
cmpsl
sahf
xchg
pop
flds
ficomps
mov
inc
fcomps
outsl
inc
stos
pop
jbe
pop
out
in
adc
out
xchg
in
xor
push
mov
cmpsl
stc
sbb
xchg
jg
scas
nop
lea
outsb
inc
jae
inc
adc
xor
xchg
repnz
hlt
jno
cmpl
add
xchg
in
ficompl
outsb
lahf
xchg
sbb
out
lcall
xchg
and
int
inc
sbb
inc
dec
clc
jecxz
mov
jge
clc
daa
enter
das
dec
pusha
mov
dec
stos
fidivrl
pop
aas
adc
sub
scas
lcall
cltd
cs
jl
call
out
add
cwtl
xor
shr
push
add
enter
aam
pushf
sub
stos
add
and
int3
movsb
pushf
test
loope
hlt
lcall
leave
stc
enter
and
ror
pop
into
or
imul
sub
out
lock
xchg
lahf
xorl
sub
pop
adc
iret
iret
and
mov
aam
or
mov
cmc
mov
adc
sbb
ret
sar
sbb
ljmp
cltd
cmp
movsb
aad
inc
test
ficoms
xor
inc
xor
inc
int
sti
incb
ret
mov
scas
stos
mov
sbb
dec
and
push
xor
mov
and
and
sub
cltd
in
repnz
rclb
push
adcl
sub
jmp
mov
mov
xchg
xchg
jne
imul
mov
mov
add
out
xchg
mov
out
mov
test
out
or
lret
repnz
daa
pop
inc
xor
subl
lds
or
scas
or
and
jb
lret
aad
push
push
arpl
enter
dec
inc
mov
cmp
xchg
ret
cmp
lahf
sbb
cmpsl
sub
test
js
test
push
adc
sub
enter
jg
pop
fs
mov
inc
movb
push
and
sarl
fdiv
lahf
cmp
add
out
orl
cli
xor
cmp
cmp
mov
fimuls
int
fs
mov
sbb
jl
subb
xchg
lret
pop
ss
and
push
loopne
arpl
mov
cmpsb
and
sti
out
dec
cmp
xchg
sub
xor
or
mov
cmpsb
test
mov
mov
stos
push
sahf
sbb
lea
scas
or
jge
mov
pushf
inc
mov
addr16
jmp
and
lods
mov
push
inc
je
sbb
shlb
or
fxch
leave
arpl
test
imull
lds
out
cmp
leave
inc
and
or
popf
clc
mov
and
adc
xchg
inc
sarl
lret
pop
insb
in
ljmp
sub
add
test
aaa
xor
out
adc
mov
mov
cmp
or
xchg
jae
sbb
add
push
pop
xor
xchg
inc
imul
mov
test
mov
iret
test
inc
cmpb
js
shll
jo,pt
mov
pop
cs
mov
and
xchg
xlat
pop
jle
mov
push
mov
test
inc
xor
sub
pop
scas
mov
jbe
in
lcall
jl
pushf
lock
int3
push
lret
mov
es
out
repnz
movsl
xchg
mov
xchg
pop
pop
lods
sarl
fwait
add
iret
or
or
jecxz
xchg
cld
push
sbb
pushf
add
xchg
push
sbb
lcall
lods
jecxz
and
add
lods
es
sub
nop
cmpb
shrb
fstp
mov
sub
mov
push
mov
out
adc
outsb
sbb
repnz
add
les
add
and
inc
xor
in
jbe
sbb
aad
adc
in
cwtl
inc
in
pop
or
out
dec
cmp
cltd
adc
and
mov
adc
fisttpl
mov
lds
cli
cmp
mull
pushf
xchg
daa
mov
jp
sbb
mov
lcall
into
aaa
xlat
cs
sbb
jmp
test
mov
and
mov
ljmp
cmp
ljmp
sub
add
arpl
mov
add
rcrl
xchg
lret
negl
inc
mov
sub
or
mov
adc
out
add
sub
dec
and
movb
rcrb
adc
dec
jo
test
in
cmp
pop
xlat
test
pop
popf
inc
lea
out
xor
mov
std
idivl
cmp
jg
rorb
popa
sbb
inc
adcb
repnz
popf
arpl
adc
inc
sbb
inc
add
fsts
aad
pop
jl
pop
mov
dec
out
pop
and
xchg
iret
sbb
ja
bound
and
movsl
xor
push
ret
nop
lds
out
imul
lods
out
test
lods
cld
das
data16
scas
cmp
je
xchg
iret
fdiv
stos
pop
push
into
cwtl
adc
inc
xor
xchg
cmpsl
xchg
cmpsb
cmp
cwtl
nop
leave
xchg
sub
mov
dec
cli
loopne
sbbl
in
xchg
loopne
mov
xchg
mov
shrl
aas
clc
xchg
pop
fsubrs
repz
test
ret
xchg
in
xor
cmc
inc
sub
aad
adc
mov
iret
and
lds
push
dec
fs
scas
push
std
mov
xor
dec
les
pop
cmp
shr
jmp
push
pop
popa
sar
popa
hlt
lods
stos
push
jecxz
adc
std
and
xor
incl
fisttpl
mov
dec
push
imul
xchg
arpl
sbb
xor
test
cltd
ljmp
scas
leave
xchg
test
xchg
push
pop
push
dec
aad
rcll
loopne
test
push
fisttps
cli
pop
or
xor
mov
call
dec
inc
and
push
std
xchg
xor
pushf
push
iret
jmp
add
jne
shll
inc
aad
xlat
loope
mov
push
push
iret
cmpsb
mov
xchg
fisttpll
cmp
jnp
jo
call
sub
mov
cmp
cmpb
mov
jne
ds
rorb
push
mov
push
jb
pushf
bound
inc
dec
loopne
push
cmpsb
sarl
cmp
pop
or
int
push
ficompl
iret
xor
jmp
sbb
ss
repnz
ja
or
xchg
sahf
icebp
add
and
lods
inc
iret
ret
add
je
cli
pop
fsubrl
cld
rorl
int3
adc
inc
out
and
cmc
dec
mov
pop
movsl
roll
rorl
repz
mov
cld
lahf
inc
inc
bound
cmp
xchg
icebp
push
mov
add
mov
lock
addl
dec
xorb
fnstsw
mov
rolb
call
and
mov
xchg
adc
or
mov
pop
cmp
mov
jmp
jecxz
ret
lods
out
mov
push
push
add
jp
ljmp
adc
adc
mov
inc
dec
imulb
pop
jbe
popf
push
popf
inc
imul
xchg
pop
adc
or
dec
and
enter
push
jmp
fsubl
xor
call
jge
je
mov
xchg
inc
xor
daa
xor
clc
jl
pop
jg
push
outsl
fbld
dec
cld
iret
mov
add
sub
hlt
and
aas
iret
loopne
test
dec
lcall
lret
mov
lcall
fildl
push
enter
or
push
xlat
push
lds
cli
xor
adc
into
scas
add
adc
idivb
loopne
push
repz
sbb
dec
adc
sar
or
mov
mov
sarl
ret
arpl
gs
push
scas
dec
sub
pop
je
xchg
test
call
sub
jmp
sub
pop
mov
or
ja
mov
pop
fmull
aad
dec
mov
cld
insl
lcall
pop
jno
cltd
cltd
fs
pushf
mov
push
xchg
mov
call
xchg
std
push
js
mov
into
mov
xor
lock
fsub
test
pop
in
stos
jno
popf
dec
adc
mov
movsb
push
outsb
rcrl
mov
mov
and
loope
mov
adc
inc
imul
testb
push
je
xchg
gs
and
or
xchg
loopne
xchg
ret
adc
sub
ss
gs
mov
push
sbb
mov
fstl
sbb
cli
push
fstps
add
xchg
test
push
pop
mov
or
adc
aam
lcall
and
xchg
into
sti
pop
jmp
jl
sub
mov
stc
inc
xor
mov
pop
jle
je
lds
das
pop
or
adc
sbb
mov
cmpsb
fistpll
test
and
inc
hlt
add
xlat
in
adc
push
sbb
ja
lcall
cmp
mov
clc
pop
outsb
neg
lret
cwtl
out
ret
test
ljmp
js
add
test
insl
xor
das
dec
mov
mov
aaa
notl
stos
popa
nop
or
xorl
pop
ds
idiv
pop
stc
mul
jge
xor
push
pop
inc
xchg
ja
and
lds
lock
adc
xor
jle
or
mov
dec
push
sub
das
xchg
add
aad
and
cwtl
jne
xor
stos
cmp
jecxz
lret
out
fisttpl
xchg
add
inc
aam
or
aam
pusha
mov
adc
add
or
ret
pop
ficompl
cmc
cltd
add
dec
repz
xchg
js
add
imul
in
fdivp
inc
lret
adc
mov
mov
sub
fadd
push
test
xchg
xor
push
jae
mov
icebp
hlt
ret
mov
ljmp
ret
loopne
push
iret
adc
sub
rorb
sbb
rcll
pop
jns
orl
jnp
arpl
or
xchg
movsb
push
scas
sub
call
test
jge
mov
mov
push
push
loopne
iret
sbb
ja
mov
pop
fimuls
sub
or
push
rcpps
cld
lock
leave
pop
inc
popa
gs
popa
dec
test
out
in
jne
loope
aad
sbb
subl
jbe
das
pusha
push
sub
in
hlt
cltd
lods
rorl
adc
push
scas
test
xor
aam
inc
mov
stos
sub
ja
sub
cmp
rcr
push
push
xchg
dec
add
pop
loop,pt
sub
mull
imul
aad
xor
push
sub
mov
push
ds
movsl
repnz
mov
mov
mov
sbb
pop
in
dec
lahf
into
out
sbb
adc
xchg
lods
sbb
stos
add
adc
andl
lret
push
aaa
sub
jnp
inc
data16
gs
arpl
jp
daa
pop
push
and
iret
mov
xchg
cmp
lods
movsl
aas
pushf
sti
cmp
bound
je
add
push
hlt
xor
jle
jp
popa
mov
mov
push
mov
jmp
pop
and
xor
es
cs
xlat
mov
xchg
lret
add
pop
stos
dec
insw
sbb
cmp
test
sbb
add
push
mov
dec
gs
or
ss
sub
and
cli
test
push
cmp
ret
mov
xor
divb
popf
lahf
dec
test
add
pop
inc
scas
and
pop
cmp
xor
xor
out
jp
push
jle
or
fdivp
mov
mov
sbb
data16
jmp
cmp
aam
mulb
mov
fidivrs
xchg
push
dec
aaa
js
test
push
pop
ret
iret
and
pop
cld
loopne
js
jae
rorb
xchg
xchg
mov
add
ret
jnp
or
push
pop
ret
cwtl
mov
jb
xchg
xchg
loopne
add
jp
cmp
lock
es
dec
icebp
stos
xchg
jecxz
int
push
popa
or
stos
mov
frstor
jle
mov
add
xor
cli
mov
subl
js
lea
mov
jne
test
call
jg
arpl
sub
push
mov
les
cmp
nop
adc
pop
shl
mov
cmpsl
cmp
sar
or
xchg
js
xchg
or
xlat
lods
pushf
inc
adc
hlt
adc
in
test
push
sbb
sub
push
and
imul
inc
push
xor
dec
aas
je
icebp
pop
jb
push
adc
push
xor
in
fstpt
cmp
xchg
or
rol
xchg
inc
aam
mov
jl
or
dec
scas
addl
xor
mov
lock
sub
xchg
insl
daa
ret
inc
adc
mov
or
test
push
sahf
push
pop
scas
mov
xchg
xchg
jp
jne
lock
sub
or
sbb
imul
stos
inc
xor
test
stos
ss
and
xor
sub
test
jge
lds
push
mov
pop
mov
push
mov
in
push
out
pop
cmpsl
sbb
pop
je
adc
xlat
in
pushf
int3
lret
sahf
mov
push
loopne
mov
mov
loop
shrl
fdivrs
test
mov
repnz
sub
imul
in
jecxz
mov
cmpsb
xchg
cmp
std
or
ja
adc
and
outsb
lcall
outsl
push
add
adc
or
mov
outsl
xchg
cmpsb
mov
and
aam
jecxz
sbb
lock
pop
push
lds
aaa
push
rcll
sub
loop
dec
es
mov
lock
pop
jb
xor
mov
mov
jge
je
adc
mov
adc
stos
pop
sbb
loopne
xchg
sub
andb
or
adc
dec
xchg
xor
xor
dec
add
out
mov
mov
clc
insl
and
fstl
push
and
std
loop
push
call
add
roll
or
aas
mov
loopne
in
push
fiaddl
xchg
in
inc
jg
lahf
pop
jl
push
push
shll
jns
push
mov
sahf
xor
mov
fcoml
in
dec
inc
xchg
mov
popf
pop
jl
jg,pt
inc
movsb
add
test
xchg
cmp
pop
mov
add
shlb
sub
stos
jp
fisttpll
add
enter
lods
jge
mov
lahf
repnz
push
and
lock
add
arpl
sahf
test
fadds
mov
out
push
xchg
adc
xchg
dec
sbb
subb
add
scas
adc
mov
cmpsl
inc
fildll
mov
ret
les
mov
repnz
daa
or
inc
enter
xor
popa
dec
out
mov
jl
pop
nop
add
and
out
jnp
les
in
mov
icebp
std
test
adc
out
inc
cltd
mov
addr16
fmull
loopne
popa
and
aam
xchg
push
lds
xchg
data16
shr
test
test
enter
push
adc
mov
xchg
push
sbb
inc
cmpsb
xchg
cmp
xchg
adc
je
enter
dec
dec
xchg
cmpsb
xchg
dec
add
je
sbb
loop
repz
xacquire
cs
sub
mov
negb
sbb
jmp
int
jl
imul
testb
jno
adc
mov
lea
ret
mov
pushf
inc
lahf
lcallw
into
divb
sbb
push
lcall
mov
pusha
jno
lret
ficomps
xlat
dec
xchg
iret
fsubl
movsb
pop
xchg
out
push
loopne
test
add
mov
cmp
add
and
inc
and
shrb
push
jl
mov
daa
xchg
xchg
mov
pop
and
outsl
inc
xchg
adc
jne
and
mov
cmp
dec
cmp
inc
sbb
push
jecxz
stos
lret
cmpl
push
enter
xchg
shr
enter
lods
push
mov
fisttps
mov
cmp
push
int3
and
popf
test
mov
lock
mov
out
jecxz
scas
push
std
add
fdivl
xor
std
adc
ret
xchg
inc
jmp
lea
push
xchg
jno
and
sub
cli
lea
loopne
add
mov
pop
xchg
in
xlat
sub
aam
cmp
mov
loopne
push
repz
movhps
add
repz
jbe
dec
in
dec
xlat
je
js
pop
test
cli
cmc
or
stc
xchg
sar
out
aam
addr16
xor
cli
scas
xor
subb
push
pusha
xchg
mov
sub
scas
mov
mov
int3
cmp
repnz
and
and
pop
add
mov
jne
ja
adc
jecxz
imul
stos
push
aam
out
aas
and
xor
or
xor
pop
xor
xor
cltd
mov
mov
mov
mov
sbb
lret
jg
shl
rcll
popa
lret
pop
adc
clc
cwtl
add
fwait
movsl
dec
inc
jno
cmp
sub
push
jl
stc
in
mov
out
loop
jg
sahf
inc
repnz
xlat
push
add
push
xchg
and
fwait
std
in
in
jno
mov
aaa
scas
and
pop
xchg
hlt
in
outsb
lahf
jne
cli
mov
sahf
jno
push
ror
push
outsl
shlb
add
cmp
mov
and
xchg
pop
pop
mov
das
sub
in
fdivr
outsb
mov
sahf
pop
xchg
outsb
test
int
and
mov
int3
or
and
fldl
pop
fstp
and
int
cld
pushf
in
das
filds
cmpsl
and
mov
mov
sub
dec
mov
aas
call
push
enter
cmp
jbe
sub
mov
arpl
ret
or
in
rcrl
dec
int
fstl
fldl
mov
xchg
jne
adc
sbb
jle
out
jecxz
roll
pop
inc
adc
dec
or
xchg
jmp
pop
sbb
or
test
movl
fucom
clc
shl
mov
pop
es
xchg
lahf
pop
mov
out
and
push
ds
test
out
pop
fwait
pop
rolb
pop
popf
pop
inc
jns
xchg
xchg
dec
insb
pop
mov
jle
aaa
aas
test
or
push
adc
rorb
ljmp
imul
inc
mov
ret
bnd
rclb
cmpsb
mov
mov
fs
mov
dec
scas
lods
js
jl
out
jmp
push
test
cld
out
push
cli
inc
int
jecxz
ret
inc
push
jp
mov
adc
imul
scas
push
jle
mov
data16
mov
dec
mov
call
daa
jae
mov
fcomps
jo
es
aad
leave
inc
jecxz
mov
or
loop
sbb
fildll
jbe
pop
leave
subb
js
xor
mov
test
mov
xchg
cmpsb
aaa
mov
lret
push
in
add
jb
xchg
jecxz
andl
mov
mov
bound
xor
or
xor
mov
sbb
scas
sarb
in
aas
in
fwait
cs
or
and
lds
scas
jle
and
cwtl
xchg
shr
aaa
fidivl
in
and
adc
subb
lret
dec
pop
mov
xchg
jge
xor
outsl
add
int
dec
js
lds
add
push
pop
lock
imul
cli
cld
scas
inc
mov
mov
pop
aas
jns
nop
idivl
dec
leave
mov
std
ret
call
fsub
mov
push
inc
add
push
sbb
pmuludq
into
xchg
cmp
icebp
leave
inc
inc
lahf
inc
aas
in
hlt
push
lret
mov
inc
mov
int
jns
mov
push
ficomps
das
inc
arpl
roll
xchg
sbb
out
rolb
dec
stos
addr16
lods
out
mov
push
pop
pop
adc
scas
jne
aas
cmpsb
pusha
shlb
jle
xor
cltd
insl
pop
or
adc
and
inc
jo
or
xor
mov
ret
dec
push
cmp
cmpsb
ljmp
sub
inc
or
jmp
bound
cmp
loope
stos
movsb
xchg
pop
dec
in
lret
inc
insb
rcr
out
mov
xchg
cwtl
pusha
mov
lea
adc
pushf
cltd
cltd
lret
sbb
jnp
test
add
js
push
xor
aaa
xchg
push
jg
jl
fs
jns
scas
xor
fnstsw
adc
ss
jns
decl
out
jp
mov
pop
fisubrl
xor
xchg
sub
jbe
jl
xchg
sbbl
mov
push
mov
push
jmp
sub
and
push
vpcmpgtd
mov
filds
mov
aas
or
pop
hlt
and
mov
sub
test
fs
add
and
mov
jle
pop
push
mov
jno
or
sahf
mov
leave
push
dec
jb
aam
out
lock
addb
outsl
test
cs
insl
icebp
fimull
gs
mov
aas
fistl
loope
inc
aad
sub
sbb
loope
jle
pop
inc
dec
cmp
repnz
incl
orl
sbbb
mov
xchg
adcb
ret
add
or
mov
push
xor
add
dec
xchg
push
lods
push
nop
sub
movsl
xor
aaa
rcrb
sbb
or
xlat
and
in
xor
pop
cld
imul
xchg
cmc
sar
inc
insb
rorl
sbb
or
jg
sbb
gs
xchg
mov
pushf
sub
test
mov
push
jp
loopne
js
add
cltd
mov
or
addb
jns
sbb
ret
xor
aam
sti
fs
mov
gs
and
insb
inc
dec
je
dec
scas
or
jnp
lds
es
cmp
mov
inc
adc
push
add
jnp
fsubrl
fidivrl
cli
adc
cmp
lods
cmp
jp
out
loop
mov
daa
mov
out
data16
add
ss
mov
mov
pop
bound
mov
inc
and
mov
lea
es
scas
push
pusha
aad
adc
xchg
mov
mov
es
add
in
in
test
cmp
insb
xchg
in
xlat
pusha
fcomps
sbb
mov
dec
pop
imul
pop
stos
into
cmpsl
outsl
dec
inc
fmuls
cltd
je
cmp
xchg
lret
enter
cmpsb
add
lods
loopne
jecxz
into
out
inc
xchg
callw
out
push
into
fs
dec
out
jae
push
sub
mov
nop
xlat
enter
mov
push
arpl
lock
divl
sub
jg
inc
fdivs
xchg
pop
sar
pop
outsb
inc
pop
cmp
stos
jae
test
movsl
andb
lea
iret
push
cmp
stos
js
sbb
xchg
pop
loope
out
xchg
mov
pop
mov
repnz
and
cmp
sbb
sarl
lock
mov
inc
xchg
scas
sub
test
pop
mov
hlt
xchg
outsl
sub
sub
mov
inc
mov
jmp
push
scas
out
mov
cmp
stc
cwtl
mov
inc
push
inc
mov
and
or
lods
ficoml
fcmovnbe
sub
repz
adc
lods
xor
push
sbb
insb
mov
adc
pop
sahf
mov
outsl
aas
pop
dec
xchg
clc
imul
dec
fisubrs
das
shll
mov
xchg
test
and
popa
nop
insl
hlt
dec
into
jb
pop
sbb
or
popl
dec
mov
test
push
sub
inc
popa
js
fidivl
ror
imul
scas
jle
and
xor
enter
lahf
push
out
fmull
or
fstpl
xchg
jl
enter
xchg
jecxz
roll
push
inc
or
mov
shrb
mov
inc
inc
loopne
pop
sub
es
test
mov
push
dec
jae
insb
mov
push
or
pop
ret
fildl
inc
sti
sub
ja
push
cmp
imulb
ss
xchg
stc
dec
hlt
out
cli
out
andb
ss
fucomi
sub
cmp
add
cmp
das
mov
or
push
and
jbe
adc
mov
xor
pop
sbb
and
test
insb
sarb
sub
arpl
sbb
leave
cltd
lock
mov
ss
inc
mov
ret
dec
and
jg
pop
cmpl
cmp
sub
push
aad
shl
sbb
lret
pop
and
mov
rclb
pushf
cld
add
push
mov
gs
lret
gs
inc
addr16
jb
ret
push
int
cmp
mov
imul
xor
mov
fwait
mov
popa
and
fmuls
push
aaa
xor
ss
pop
dec
inc
fcomps
pushf
aaa
cmp
mov
stc
andl
aas
je
out
stc
sbb
pop
fsubl
mov
mov
inc
cwtl
mov
lds
cmpsb
sub
movl
mov
pop
mov
imul
and
mov
jns
repz
jnp
inc
fcoml
in
cmc
or
iret
add
push
adc
scas
lock
movsl
in
jmp
jl
sbb
iret
icebp
repz
movsb
out
sub
jnp
mov
rorb
loope
push
add
mov
repnz
lret
addl
arpl
fsincos
shrb
in
dec
fbstp
pop
jle
loope
jns
js
repz
test
pop
imul
mov
jp
call
sub
filds
push
sub
and
pop
inc
xor
jb
xchg
xor
pop
divb
dec
imul
pop
lods
xchg
mov
out
cmp
inc
cmp
sub
iret
lahf
test
outsl
cmp
jg
mov
dec
inc
shlb
cld
int
daa
and
mov
mov
xchg
inc
xchg
inc
sbb
pop
jle
std
repnz
ret
mov
cmp
addr16
je
pop
jp
xchg
out
fwait
and
sbb
mov
mov
ja
pushf
pushf
fcomi
pop
adc
clts
pop
icebp
cmp
ftst
jae
cmp
mov
scas
mov
cltd
imulb
test
add
cmc
sub
mov
in
vpsrlq
xchg
mov
mov
push
jp
push
cmp
add
xchg
jmp
push
andl
loope
mov
shr
lea
test
jg
dec
out
daa
imul
adc
jae
mov
mov
push
enter
pop
sbb
pusha
dec
ret
icebp
mov
add
pusha
adc
cld
jbe
out
add
push
mov
outsl
adc
push
sub
push
cmc
ds
mov
mov
jns
xchg
cmp
xor
rorb
cld
int3
sahf
bound
cld
mov
sub
inc
aas
cmp
sub
decb
mov
enter
adc
push
rorb
pop
mov
mov
inc
sub
shlb
xchg
sub
pop
in
bound
inc
inc
in
mov
xchg
push
sahf
xchg
fcoml
fdivrl
mov
sahf
sarl
jo
and
fs
cli
sub
inc
mov
movsl
test
fwait
out
pop
in
cmp
jne
mov
test
je
and
gs
dec
xchg
and
dec
push
aaa
out
adc
xor
loop
cmp
mov
pop
pop
shll
mov
mov
xor
lods
int3
faddp
mov
add
std
jge
lods
loopne
pop
mov
in
or
sub
jge
jp
insb
xorl
loop
mov
enter
iret
bswap
jnp
out
mov
adc
in
mov
movsb
or
mov
mov
popf
leave
popf
jns
notl
pop
sub
mull
pop
push
mov
roll
lock
icebp
push
ja
mov
sti
push
fbld
add
add
ljmp
iret
add
cwtl
mov
push
cmc
imul
xor
maskmovq
idivl
jmp
subb
scas
cmp
mov
inc
aas
mov
xchg
sub
mov
mov
xchg
sahf
shrl
icebp
mov
adc
mov
out
inc
cmp
loope
sub
ficompl
lods
test
xor
jo
shr
jle
pop
idivb
outsl
and
out
rcll
jbe
push
fadds
cmp
decl
or
xchg
imul
jg
or
jle
es
fistpll
add
cltd
push
and
adc
and
fwait
mov
push
cli
ss
pop
popa
cs
mov
or
in
pop
pop
jmp
pop
js
push
stos
jne
insl
xor
push
add
cmp
push
lcall
mov
inc
pop
cli
loope
pop
jge
pop
lods
les
xor
int3
mov
push
daa
sub
mov
into
mov
jbe
adc
nop
lock
not
int3
addr16
xlat
addr16
sub
sub
adc
dec
mov
pop
insl
sarl
cld
shll
shlb
sbb
mov
pop
repnz
push
cs
cmc
push
add
lea
es
mov
mov
pop
cmp
outsl
imul
jns
dec
xchg
dec
mov
cmp
dec
or
clc
fwait
pop
inc
loope
stc
shl
add
lods
les
pop
lret
clc
mov
add
bound
pop
inc
xor
cs
jnp
aaa
jmp
out
imul
fwait
or
stos
bound
and
stc
sbb
and
jl,pt
dec
enter
jnp
dec
cmp
and
in
inc
addr16
test
push
xchg
or
mov
icebp
add
into
xchg
pop
xchg
outsb
pop
pop
jp
pop
or
mov
enter
out
jb
sbb
mov
bound
loop
mov
lock
mov
mov
dec
dec
aam
mov
sti
js
mov
mov
adc
cmpsl
cld
out
pop
add
imul
sahf
mov
add
mov
push
jmp
inc
mov
fdivs
jb
cwtl
or
scas
cli
repz
aaa
sub
dec
or
addr16
mov
mov
cmp
or
push
int3
sbb
push
daa
andb
add
cmp
push
rcl
pushl
inc
jp
cs
xor
cli
xchg
or
int3
mov
cs
jle
shlb
mov
push
mov
daa
add
xchg
sbb
mov
gs
mov
cwtl
dec
and
stc
stos
lea
dec
push
dec
fs
int3
mov
pop
xchg
ret
daa
call
push
push
jae
mov
negl
ljmp
pop
lret
addl
inc
push
jg
push
test
jno
mov
imul
aam
daa
push
sub
scas
ret
into
stos
incb
inc
xchg
shl
lret
or
sahf
jmp
out
es
jmp
and
mov
loope
jbe
sbb
mov
movsl
inc
or
jns
jae
mov
testb
fwait
scas
sbb
movb
or
inc
mov
pop
push
mov
nop
lds
push
xlat
scas
mov
dec
pushf
push
popf
iret
repnz
mov
add
add
shlb
loope
std
mov
mov
mov
push
pop
mov
and
sbb
addr16
add
sbb
cmpsb
lods
mov
sahf
in
out
jne
mov
test
jno
and
xchg
nop
cmc
subb
mov
imul
std
pop
aaa
push
shll
push
inc
or
out
inc
testb
out
sbb
pop
mov
es
dec
hlt
enter
pop
pop
inc
fstl
addr16
xchg
push
xchg
and
loopne
cmp
in
xchg
aaa
push
push
cld
and
dec
mov
in
cld
or
adc
add
adc
shlb
lcall
mov
pushf
out
sahf
pop
add
ffreep
out
and
or
xorb
nop
or
pop
clc
mov
pop
push
mov
push
or
or
pop
xchg
mov
jp
pop
adc
pop
pop
sub
iret
sub
add
adc
sti
lods
xchg
dec
and
daa
nop
aaa
in
cs
adc
in
pandn
les
jne
jmp
mov
sbb
idivl
or
xor
sub
cmpsb
clc
fdivr
push
sbb
test
xor
shlb
test
or
push
stos
lea
xorb
idivb
or
es
ja
xlat
push
mov
sub
popf
call
push
jnp
lcall
frstor
sbb
popl
xchg
xor
push
mov
adc
pop
dec
pop
aaa
fs
mov
push
mov
xchg
scas
insl
enter
dec
jnp
popf
inc
test
mov
cmc
mov
adc
jne
inc
and
cmpsl
clc
insb
and
psubw
sub
inc
and
sbb
aad
sbb
xlat
imul
scas
ja
adc
cli
std
mov
out
into
sbb
adc
xchg
xchg
mov
loope
push
sub
loopne
xchg
jbe
shrl
fisttpl
add
cltd
jge
nop
pop
adc
inc
mov
les
sahf
fwait
or
dec
lahf
lret
push
out
push
mov
pop
lods
or
mov
and
out
and
mov
pop
int3
cs
out
dec
adc
and
popa
aam
repnz
mov
mov
xchg
cmpsl
or
cmp
push
push
adc
add
push
daa
jl
inc
xor
pop
fmuls
ss
push
xor
gs
mov
clc
adc
sub
int
push
sbb
das
ds
ficoml
xchg
push
jp
incb
mov
shl
sub
push
add
daa
mov
scas
push
mov
icebp
popa
divl
mov
jnp
stc
sub
aas
add
std
loopne
pop
cmp
sbb
add
lahf
ds
outsb
leave
icebp
sub
jno
jnp
sbb
idivl
out
bound
lahf
lea
mov
and
orl
xchg
pushl
bound
aad
or
add
addl
ret
movsb
or
inc
popf
xor
inc
shll
fdivs
imul
test
fiaddl
arpl
icebp
idiv
test
mov
sub
add
push
mov
cmp
adc
cmp
mov
sub
lret
pop
out
mov
pop
dec
mov
xchg
xchg
jbe
test
push
cmp
lret
push
xchg
xchg
fnstenv
loop
iret
jb
jge
jno
subl
jb
mov
or
adc
cmc
lret
jmp
sarl
lds
repnz
fsubr
sub
mov
mov
lea
scas
inc
mov
pop
mov
sub
testl
adcl
mov
mov
jne
je
pop
hlt
add
mov
pop
jecxz
cs
in
pop
pop
and
addr16
mov
dec
sub
jne
sub
inc
fstpl
aas
cld
test
hlt
push
in
in
dec
xlat
shll
clc
mov
lock
mov
jns
and
dec
je
xor
js
push
into
inc
lds
jl
scas
push
enter
and
iret
add
jmp
xchg
pop
xor
jno
mov
add
mov
pop
sub
jle
cmp
push
mov
out
mov
incl
data16
dec
cmpsl
xor
jb
xor
pop
pop
and
mov
xchg
and
aaa
pop
mov
stos
loopne
mov
pop
dec
les
popa
xchg
enter
add
mov
pop
lods
pop
push
push
into
pushf
ret
int3
call
fstps
inc
xor
xchg
jl
add
into
lock
mov
mov
lea
dec
in
sub
aam
test
push
inc
shlb
pop
xor
inc
sti
loope
mov
xor
adc
daa
call
jl
daa
sbb
sbb
jb
cmp
xchg
aad
sub
add
cmpsl
jnp
lds
pushf
mov
call
xchg
mov
lds
mov
pop
adc
mov
cmpsl
xlat
mov
shlb
inc
cli
aaa
loope
mov
jo
ficompl
pop
xchg
enter
sbb
cmp
jp
mov
or
jmp
pop
inc
ret
mov
addr16
icebp
sahf
or
adc
leave
addr16
test
es
cmc
arpl
pop
add
popf
imull
push
push
cli
fldenv
pop
mov
jecxz
add
pop
or
mov
inc
loopne
mov
jns
cmp
test
popf
sub
lods
in
std
leave
inc
sahf
into
stos
xchg
call
mov
push
xchg
or
inc
mov
xlat
push
cmp
cmc
jbe
add
cmp
cltd
cltd
ss
jg
js
inc
and
sub
mov
sub
sbb
icebp
mov
push
adc
cmp
cltd
pop
mov
repz
dec
imul
adc
xchg
inc
sub
psrad
fimuls
aad
clts
xchg
pop
push
outsl
movsb
jno
std
lds
popa
or
aad
push
faddl
popa
cmpsl
mov
mov
jno
cmp
xorl
and
pop
push
test
or
mov
xchg
mov
test
or
ljmp
mov
mov
insb
jmp
fcompl
fwait
lea
stc
insl
cltd
sbb
ja
outsb
stos
jge
jbe
or
jmp
lods
and
sti
push
xor
popa
jae
call
repz
cld
xor
mov
movsl
imul
fwait
add
mov
mov
mov
icebp
jl
xchg
pop
mov
sub
add
mov
lods
aas
or
xor
ljmp
push
xchg
std
adc
scas
cmp
lock
mov
rcrb
jns
into
fsub
dec
push
xchg
adc
cmpsl
call
dec
push
in
divb
or
aad
push
xor
cld
orb
xor
jns
sahf
xchg
adc
xor
in
sub
xchg
mov
int
and
push
fs
decl
push
loope
pop
fldl2e
icebp
sbb
inc
inc
in
insb
pop
dec
xchg
call
add
lret
adc
dec
push
fwait
jno
cmpl
and
xorb
xchg
push
mov
xor
add
lahf
imul
psrlw
in
addr16
add
stc
icebp
jp
dec
push
or
mov
sbb
sbb
mov
popa
insl
rol
testl
sub
dec
mov
out
add
iret
loop
jae
movsl
hlt
scas
sti
push
inc
mov
lea
lahf
dec
fwait
outsl
dec
addl
icebp
loope
jmp
mov
stos
fidivrs
outsb
pop
int3
popf
aam
lods
pop
pop
movsb
pushf
xchg
mov
test
enter
jge
inc
aam
test
dec
cld
in
adc
clc
add
lds
inc
test
dec
xchg
leave
test
in
insb
mov
push
dec
jo
rcrl
add
fwait
or
xchg
mov
test
xor
sub
jg
mov
cmp
push
xor
in
xchg
mov
adc
push
sbb
mov
cmp
test
push
xchg
or
mov
fs
sub
adc
aas
adc
pusha
add
test
jns
adc
out
sub
mov
sub
pop
jmp
shr
add
or
mov
push
add
add
fcmovb
mov
lcall
xchg
mov
pop
out
mov
lds
and
pop
aad
stc
pop
aam
in
add
ja
and
cwtl
loope
xor
xchg
aam
nop
lods
lods
inc
pop
rcrb
outsb
or
sub
imul
ficompl
test
cmpsb
cmp
rclb
sbb
sti
xor
cmc
das
test
push
int3
fisubl
xchg
mov
cltd
inc
sahf
xchg
xor
stc
sbb
imul
push
push
push
xchg
mov
jno
leave
fidivrl
push
imull
mov
popl
out
pop
xchg
sbb
xlat
rcrl
sar
or
pop
shll
cmp
sbb
mov
jp
std
fimuls
mov
cmp
mov
cmp
mov
bound
iret
inc
adcb
hlt
inc
popa
ud0
popf
gs
loopne
jl
xor
xchg
ljmp
fwait
shlb
push
inc
in
mov
jl
fadds
stc
stc
aas
scas
mull
sub
adc
int3
incb
movsl
mov
push
jle
push
or
fsubp
testl
adc
fwait
pop
ljmp
out
adc
rcrl
jg
lock
sbb
test
cmp
repz
fidivs
je
mov
dec
jmp
pop
xchg
mov
pop
add
lods
cld
pop
xchg
jno
xor
test
sbb
aad
add
and
jge
push
mov
sub
popa
daa
gs
pop
push
mov
dec
mov
arpl
sub
out
int
mov
adc
sbb
push
inc
xchg
dec
cmp
loop
shll
mov
dec
pop
jmp
ss
jmp
jmp
or
mov
stos
lcall
inc
pop
data16
pop
adc
push
movsl
or
lcall
jae
push
into
faddl
ret
enter
das
jne
ss
hlt
mov
outsl
idivl
push
loopne
imul
jle
mov
jl
fprem
mov
push
daa
leave
fwait
jns
inc
shrb
push
pop
fidivl
addr16
mov
insb
arpl
popa
xor
ds
xor
lret
mov
scas
or
js
test
cld
lds
lods
pop
fidivs
dec
or
addr16
into
test
sub
popf
xchg
rorl
pop
fwait
mov
mov
mov
mov
and
loope
adc
or
enter
push
adc
les
mov
scas
pop
mov
and
pusha
ret
pop
xchg
aas
insb
lea
xor
cmp
hlt
pop
arpl
xor
in
jmp
sbb
loopne
mov
pop
or
pop
jns
movsl
pop
popf
sti
mov
fidivs
add
pop
js
mov
repz
xchg
mov
jae
dec
popa
in
or
adc
mov
lcall
jb
clc
aas
scas
add
inc
sub
inc
test
sub
pop
arpl
jle
pop
pusha
sbb
ret
adc
idivb
pop
dec
xchg
dec
popa
fwait
cmp
add
add
sub
xchg
aas
sbb
stc
adc
dec
push
jecxz
jae
cmp
pop
mov
xor
in
dec
mov
enter
mov
mov
xchg
subb
idivb
xchg
jle
adc
add
movsl
pop
cmp
daa
dec
ret
cmp
pop
jae
orb
dec
lods
aam
nop
xor
arpl
jg
movsb
nop
push
jnp
ja
stc
inc
ss
icebp
or
pop
pop
pop
jg
aas
xchg
push
loope
or
scas
jp
inc
out
inc
movsl
pop
mov
mov
inc
push
cmp
pop
xlat
jno
sbb
int
sbb
ljmp
or
mov
pop
adc
jb
sbb
push
in
subb
or
mov
lods
xor
insb
mov
push
mov
rclb
loop
movsl
xchg
cli
rolb
out
loope
pop
dec
push
xchg
lock
mov
jne
dec
das
push
mov
lret
xchg
out
xchg
adc
stos
lods
rorb
dec
dec
adc
adc
into
add
fwait
pop
jmp
jle
in
scas
jl
xor
jbe
fidivs
in
or
in
xlat
mov
mov
repz
ljmp
loop
int
test
and
outsb
xchg
in
mov
lahf
dec
rorb
ds
adc
sub
dec
sahf
js
loop
stos
aam
adc
shll
outsl
mov
rcr
cs
jp
xchg
mov
jle
mov
jl
cli
jmp
mov
ds
mov
push
push
mov
push
xlat
lret
xlat
shrb
mov
shl
cmpsl
jo
pop
cmp
ret
jns
leave
add
jno
xchg
dec
xor
and
idivb
testb
pop
jl
rclb
ret
xchg
push
jae
loope
inc
cmpsb
or
jmp
or
pop
sbb
pop
pop
jno
in
pop
js
ret
jmp
pop
mov
xchg
pusha
jo
xlat
mov
push
fmuls
mov
fistl
jnp
es
cltd
lret
mov
incl
push
bound
pop
sbb
pop
add
outsb
imul
and
stos
jno
fiaddl
push
xor
arpl
ds
ljmp
cmp
add
test
xchg
push
sti
lahf
jg
dec
out
xchg
fldl2t
xor
add
lret
dec
push
adc
cmp
icebp
jns
ljmp
xchg
faddl
mov
sbb
dec
fld1
cmpsl
mov
out
xor
pop
cmpl
sub
ret
jb
ljmp
add
jbe
mov
pop
sti
dec
pusha
add
pop
sbb
es
adc
adc
cli
aam
xor
pop
sub
cli
call
sahf
mov
inc
in
mov
dec
stc
and
xchg
mov
clc
and
cmp
stos
or
xchg
xor
les
mov
fidivl
int
scas
sbb
jns
inc
xor
dec
insl
mov
jnp
out
je
lahf
jmp
ds
aad
out
out
xor
cmpsl
adc
in
jo
push
das
outsb
inc
inc
shrl
mov
mov
pop
loope
sub
movsl
out
lds
cltd
cs
xor
aad
inc
imul
mov
mov
in
sub
sahf
stos
shrb
mov
cld
cwtl
jnp
test
mov
movsl
insl
lcall
pop
sbb
or
enter
daa
rcll
push
mov
shlb
das
jne
sahf
repz
in
pop
scas
mov
inc
mov
push
mov
stos
xchg
xchg
or
fadds
mov
pop
add
fdivrs
add
cmp
pop
jecxz
mov
enter
inc
orb
push
xrelease
inc
stc
subb
cmc
pushf
je
negl
adc
lahf
bound
outsb
stos
test
mov
push
xor
test
sub
mov
leave
enter
inc
lahf
lock
xlat
jnp
gs
repnz
push
stc
sub
fisttps
dec
push
xchg
sub
leave
inc
xor
cld
arpl
daa
ss
mov
push
and
repz
arpl
arpl
dec
xchg
sahf
shlb
inc
adc
mov
cmp
imul
in
fcoml
inc
dec
cmp
clc
fmul
push
lahf
stc
adc
inc
inc
shr
jno
add
cmp
jecxz
or
mov
cmc
cmpl
arpl
inc
mov
lcall
adc
imull
pop
imul
cli
mov
aam
sub
repz
mov
cmp
ljmp
mov
sub
pushf
call
orb
lock
push
push
jb
test
mov
pop
mov
jmp
and
inc
adc
ja
rcrb
mov
jecxz
pusha
xor
pop
dec
adc
loop
dec
lret
cli
adc
xchg
jne
call
popa
adc
test
enter
mov
push
jle
push
cmp
xchg
jg
jecxz
dec
jne
repz
mov
or
outsl
lods
ljmp
aaa
mov
mov
ficompl
jb
and
inc
mov
or
orl
pushf
divl
mov
stc
fisubs
sbb
jge
lret
icebp
les
repz
xchg
jg
jp
cmpsl
outsb
dec
aad
out
jbe
sub
jg
inc
sbb
lock
mov
mov
outsl
adc
ret
call
push
popa
shl
or
hlt
mov
push
mov
inc
xlat
pusha
mov
dec
inc
std
adc
test
sbb
inc
pushf
mov
sub
mov
jo
call
aaa
sub
dec
je
or
push
inc
cmp
push
int
push
icebp
push
mov
fldcw
in
cmp
pop
es
add
das
cltd
dec
mov
mov
lock
pop
bnd
roll
ds
out
jmp
or
mov
ss
sub
test
ficoms
sub
mov
in
hlt
jae
and
sbb
rcr
imul
and
arpl
mov
inc
out
dec
xchg
inc
jle
scas
push
dec
dec
cld
popa
mov
xchg
sbb
pushf
push
jle
popf
je
mov
clc
outsl
adc
clc
sub
out
les
jp
clc
dec
mov
subb
add
fnsave
out
dec
or
mov
lods
push
mov
jne
into
js
mov
fists
push
out
push
inc
or
fdivl
xchg
jo
scas
or
xor
dec
pop
mov
in
jo
rorb
add
push
ret
aaa
or
pop
sub
adc
sahf
outsl
cs
mov
daa
adc
lcall
push
inc
jge
and
arpl
push
fistpl
dec
out
lahf
iret
aam
ljmp
imul
pushf
movsb
scas
mov
fisubrl
inc
mov
sub
mov
fld
jecxz
lcall
and
jmp
mov
iret
adc
repnz
out
and
dec
shlb
leave
divb
push
or
add
cmp
imul
mov
js
test
mov
xchg
inc
dec
addr16
popa
pop
fsubs
std
mov
lret
imul
test
cmp
popa
fidivs
rolb
pop
xor
gs
add
stc
or
mov
sbbl
xor
adc
nop
ljmp
mov
dec
loop
insl
add
imul
xchg
xchg
jge
lds
or
sbb
mov
enter
nop
sub
push
mov
test
inc
sub
push
movsb
fstpt
out
mov
xchg
push
das
jbe
and
inc
inc
lret
xor
inc
dec
sbb
aad
xchg
jecxz
test
rorb
shll
pop
insb
ret
inc
push
xchg
scas
repz
mov
sbb
popf
out
sbb
mov
cs
xchg
jecxz
push
addr16
push
cwtl
leave
ljmp
cmpl
sbb
popa
dec
cmc
or
ret
sbb
mov
xor
add
aam
clc
aad
enter
call
cmp
icebp
cmpsb
and
sub
ss
adc
mov
mov
lds
push
inc
icebp
sub
sub
inc
data16
cmc
cmp
jecxz
sbb
cmc
cmpsb
push
add
sub
jle
pop
loopne
or
aas
int
addr16
dec
fstps
subl
daa
sbb
sbb
inc
sub
mov
push
repz
adc
sub
xor
ret
sbb
pop
sbb
and
leave
out
pop
cmpl
push
push
ss
and
ss
lcall
lock
xor
stos
xor
add
jbe
push
push
in
fdivrs
je
mov
adc
cmp
imull
ss
xlat
test
push
and
mov
addb
testl
je
inc
test
insb
push
int3
add
dec
cmp
orb
arpl
cltd
mov
xor
lret
or
jecxz
mov
mov
orl
cmpb
adc
cld
push
std
jae
mov
cmp
hlt
in
imul
sbbb
scas
into
sub
std
jl
imul
icebp
dec
dec
enter
adc
test
push
sub
xor
out
push
jl
fmul
cmp
add
push
push
imul
mov
mov
ljmp
jmp
inc
icebp
mov
dec
push
sbb
cmp
rcr
dec
stos
and
xchg
xchg
or
cld
xchg
gs
in
enter
xor
imul
sbb
add
mov
sbb
push
mov
stos
in
mov
sub
jge
scas
add
stos
sbb
stos
inc
mov
movsb
mov
mov
dec
add
pop
pop
int3
xchg
mov
loope
jg
out
xchg
and
mov
sub
mov
insl
and
mov
and
ljmp
xor
push
mov
cmp
leave
jns
outsb
inc
xchg
fsub
ja
loope
into
jge
add
cmp
repz
sbb
scas
push
loope
add
mov
mov
add
aad
lds
dec
push
and
aaa
pop
int3
stos
loope
dec
inc
test
xchg
xchg
mov
stos
fsubs
iret
xchg
push
pushf
jmp
ja
and
inc
inc
xchg
push
inc
add
lock
pop
sbb
sbb
cmp
cmp
and
loop
inc
test
imul
jbe
cmpsb
gs
add
fdivrl
sub
test
and
pop
sub
movsl
stos
jp
push
mov
insl
shrl
sarl
sub
ss
inc
sarl
mov
ret
cmp
in
bound
push
loopne
mov
pop
and
and
or
mov
in
rorb
mov
xchg
pop
xlat
pop
aaa
sahf
mov
jle
push
pop
push
imul
imulb
aad
mov
dec
les
inc
std
pop
fs
mov
or
mov
jae
scas
add
jle
clc
cwtl
xor
jne
leave
in
xorl
iret
inc
jnp
and
shrl
jnp
sub
mov
xchg
jo
xchg
lahf
jge
push
jae
daa
retw
push
xor
ja
or
pop
test
mov
sbb
pop
scas
and
pop
and
push
ficoms
rcll
dec
int3
inc
mov
enter
shlb
inc
pop
adc
adc
dec
mov
xor
xor
push
mov
sbb
jae
ret
xchg
mov
ret
cmpsl
push
test
in
fmulp
out
out
adc
imulb
sarb
jmp
jb
scas
fs
pop
les
sbb
aas
out
jns
jns
sbb
out
push
rcrb
call
xor
inc
test
test
dec
test
mov
xchg
roll
push
and
test
or
or
adc
rorb
adc
or
mov
pop
insl
das
xor
push
mov
adc
jle
pop
nop
xor
es
and
sub
fsubrl
cld
cmp
lods
mov
popf
cmpsb
cs
nop
out
insb
in
call
fistps
lret
cli
xchg
xor
cli
sbb
bound
xchg
add
inc
fstpt
mov
mov
stc
xor
out
leave
cmp
push
xor
xor
dec
xor
mov
hlt
das
inc
jge
mov
push
enter
or
sub
movsb
push
adc
inc
rcr
cmp
and
jle
mov
sub
jg
int
int3
daa
enter
popf
cli
mov
cmp
shrl
sarl
cld
push
pop
adc
mov
test
push
push
xchg
and
push
mov
xchg
mulb
lret
or
xlat
adc
or
lahf
and
push
mov
xor
inc
xchg
add
loopne
pop
popf
push
faddl
mov
in
jg
scas
nop
outsb
mov
xchg
sti
xor
stc
das
inc
add
je
fsincos
incl
les
mov
dec
mov
or
mov
push
jmp
addr16
pop
push
outsl
xchg
xor
and
stos
mov
pop
mov
nop
movsl
mulb
out
mov
icebp
popa
fiadds
mov
jno
ljmp
sbb
pop
jmp
xchg
jno
arpl
addl
out
pushl
mov
dec
fcmovbe
push
mov
and
shlb
out
clc
repz
out
ret
outsl
lcall
mov
xchg
std
gs
lods
shrb
imul
andb
rep
jg
out
sbb
mov
inc
jl
es
cmpsb
mov
pop
sub
enter
pop
fs
out
inc
dec
cmpsb
iret
das
sub
pop
lcall
sbb
jge
dec
adc
inc
mov
psllw
add
sbb
das
stos
inc
push
sub
stos
sbb
inc
jge
lret
fwait
bound
lret
cwtl
xor
loopne
ds
in
cs
pusha
clc
xchg
xchg
daa
sti
adc
inc
fwait
adc
les
inc
fs
lea
mov
popa
xchg
cld
lea
and
jmp
push
aas
aaa
test
cmp
int3
jns
and
fwait
test
and
fiaddl
iret
push
push
mov
push
in
jge
or
push
mov
adc
inc
cmp
xchg
data16
cmp
mov
inc
lcall
adc
mov
scas
dec
and
out
adc
xchg
mov
out
outsl
cmpsb
daa
lds
sbb
into
test
jno
jp
xchg
dec
sahf
fwait
pop
cld
xor
scas
clc
push
int
cmp
imul
pop
xor
cmp
xor
jo
pop
out
call
arpl
hlt
cmp
enter
sub
and
cmp
inc
fcom
in
lcall
ss
fwait
sub
inc
in
dec
add
fwait
das
inc
mov
mov
cmc
fcomps
cmp
sbb
aam
addr16
xchg
mov
out
mov
dec
pusha
xchg
mov
in
or
jp
push
xchg
icebp
loope
mov
push
xchg
cmp
xchg
scas
inc
dec
nopl
cmpsl
adc
push
push
orl
fs
xchg
sbb
iret
jl
mov
push
cmp
test
pop
add
xchg
cmpsl
mov
lahf
lods
or
mov
lods
mov
pop
push
push
popa
cmpsb
mov
pop
loopne
add
jg
andb
pushf
pop
clc
xchg
test
fwait
ljmp
sbb
cmc
xchg
divl
jg
pop
mov
or
pushf
push
scas
mov
or
pop
push
jp
push
popf
hlt
mov
pusha
aam
push
xorl
adc
jo
scas
pop
jle
popf
cmp
dec
dec
ds
adc
inc
adc
test
jae
push
mov
or
fmuls
cmp
pushf
addr16
push
jmp
divl
pop
enter
rol
pop
jecxz
in
faddl
in
int
sar
pop
and
push
add
pop
xchg
imul
out
jmp
fildll
stos
mov
lcall
ds
aam
cmp
jne
mov
into
test
jbe
andl
sub
stos
sub
push
xor
jb
int3
mov
test
inc
mov
mov
jo
popf
cmp
test
mov
dec
in
push
and
mov
and
subb
or
pop
cmp
out
dec
mov
sahf
push
jg
in
rorl
add
sub
pushw
dec
das
mov
push
nop
and
xchg
sahf
imul
cwtl
cmp
mov
dec
pushf
pushf
ljmp
shlb
aaa
daa
es
aam
sti
mov
ljmp
nop
fisttpl
xor
sub
push
ficompl
test
sbb
xchg
inc
loop
jno
mov
aad
sbb
inc
xchg
jno
sub
fidivs
inc
incl
push
lods
loopne
into
das
mov
xchg
mov
dec
adc
cmp
or
je
xchg
cmp
mov
je
and
xor
ja
aad
hlt
addl
mov
sbb
mov
sbbb
cmp
lahf
dec
loope
pusha
mov
inc
sub
inc
mov
rorb
cmp
dec
cld
push
inc
add
pop
xor
rorl
sbb
xor
push
cli
sub
dec
stos
xchg
pop
dec
add
scas
fiadds
add
enter
push
in
jl
jmp
shll
jp
cli
mov
out
les
fstps
int3
in
call
inc
cmpsb
scas
sbb
mov
out
push
jl
imul
sub
and
bound
pop
rcrl
mov
mov
lods
cmpsl
je
and
or
mov
arpl
aam
or
add
lret
rcll
mov
pop
cli
outsl
in
lea
push
add
les
sbb
test
rcrb
cmpsl
mov
lahf
lds
mov
push
lods
adc
push
dec
mov
pop
inc
cmc
popa
mov
sub
popa
ret
cmc
fldl
dec
xchg
loopne
cwtl
push
cwtl
inc
div
push
sub
mov
pop
out
sbb
out
in
icebp
divl
fwait
mov
mov
mov
sbb
lods
push
fwait
addr16
push
pop
pusha
mov
dec
push
dec
sub
add
fbstp
adc
imull
ret
ds
iret
push
les
adc
cmpsb
decl
sbb
stos
outsb
and
inc
cs
adc
in
and
lret
mov
fsubs
push
stos
sbb
stos
jnp
mov
and
divl
je
sub
cli
mov
insl
je
jne
mov
repnz
test
lea
repnz
sbb
push
mov
icebp
mov
mov
jb
adc
sub
add
mov
pop
lret
or
inc
cwtl
pop
mov
jg
rol
nop
mov
or
pushf
cmc
pop
xchg
dec
jne
roll
pop
int
push
fcoms
mov
cs
push
rolb
pop
imul
loope
clc
adc
lods
cmpsb
shrb
inc
cmp
push
mov
cmpsl
in
movsl
cmp
jns
and
pop
cmc
insb
loop
inc
imul
mov
gs
sbb
hlt
test
leave
xchg
mov
push
aam
jge
lock
or
imul
mov
adc
jl
in
xor
lea
jp
or
aas
sbb
and
mov
pop
xor
rorl
xchg
xor
addb
sahf
notl
cmc
pop
call
cmp
mov
mov
sar
cmp
inc
lea
fwait
jge
scas
cmp
jb
mov
mov
xor
dec
icebp
icebp
cmpsl
push
clc
xchg
and
jge
and
add
outsl
inc
sub
push
dec
adc
mov
clc
xchg
loope
push
adc
push
mov
ja
or
les
cmpl
gs
and
imul
sbb
mov
inc
leave
bnd
pop
mov
scas
xchg
sbb
jbe
imul
sbb
mov
dec
cs
cmp
jl
mov
fimull
pop
shl
push
sub
xchg
sbbl
adc
jle
pop
pop
lret
hlt
int3
lods
dec
dec
mov
push
ret
mov
popa
push
add
lods
test
out
xchg
and
gs
jno
pop
push
test
push
sub
cmpsl
xor
daa
ror
in
xchg
mov
out
sub
ss
cmp
pusha
cmp
cmp
adc
jmp
jmp
dec
sub
mov
ror
nop
sbb
dec
lret
pop
or
fidivrs
das
xor
jbe
out
dec
mov
andl
cli
push
cli
pop
scas
xchg
adc
shll
mov
fstps
cmp
jns
xor
jno
mov
adcl
ja
jg
out
xor
adc
rcrl
adc
xchg
pop
test
mov
lcall
out
add
push
faddl
or
sarl
movb
xor
imul
jo
mov
es
test
lahf
icebp
mov
add
pop
int
and
popf
pop
mov
js
mov
enter
push
imul
mov
xchg
jp
xor
lcall
jl
cmp
mov
inc
jle
or
scas
out
inc
mov
and
outsl
sub
sub
dec
sbb
push
dec
sub
pusha
xlat
std
or
std
jbe
fistpll
push
and
movsb
xchg
sti
addb
ret
or
les
ret
mov
push
sbb
cmp
test
push
mov
mov
and
mov
lods
movsl
mov
jae
cmp
xchg
inc
inc
ljmp
mov
dec
sub
adc
int
imul
idiv
jle
xchg
mov
jns
ds
ret
and
mov
mov
imul
test
jae
inc
cs
ret
and
push
lcall
xor
push
notb
xor
mov
xchg
shrb
push
not
vbroadcasti64x4
pop
dec
movsl
jbe
movsb
cmpl
cld
adc
repz
nop
or
out
out
stos
cmp
subb
pop
sahf
sub
adc
ret
iret
cwtl
data16
adc
aad
cmpl
test
sahf
adc
int
xor
push
dec
test
insb
fimull
pop
xor
cmpsb
test
sahf
addr16
xchg
push
or
xchg
dec
sti
imul
lahf
mov
rolb
rcl
inc
sbb
xchg
jg
adc
mov
sbb
imul
jae
sub
sub
jns
cs
push
dec
fnstcw
lds
lahf
enter
mov
adc
in
repz
xchg
xor
jne
jmp
lods
mov
cmp
ret
pop
fidivl
test
sbb
mov
arpl
or
icebp
mov
dec
icebp
fdivl
stos
jmp
in
and
lods
stos
lods
icebp
xor
push
xor
lock
popl
jl
xorl
hlt
push
repnz
mov
adc
fisubrs
dec
call
pop
lahf
rcrb
in
and
push
mov
inc
fcmovbe
push
ja
pop
sbb
cmp
mov
or
adcl
rcrl
inc
pop
inc
std
in
inc
xchg
out
imul
add
jnp
mov
adc
xor
and
dec
xor
out
icebp
jmp
jecxz
mov
push
data16
inc
gs
in
rcrl
mov
shlb
mov
inc
inc
xchg
sub
jl
arpl
js
icebp
call
clc
sbb
pop
cmp
pop
push
xchg
shrl
mov
shl
int3
lret
cmp
into
or
data16
inc
pop
popf
imul
pop
lods
push
push
or
jecxz
xchg
mov
and
mov
cs
aad
cmp
push
test
mull
roll
scas
leave
popf
xchg
enter
jp
or
and
xchg
lret
mov
xchg
fmul
pop
dec
call
jbe
nop
cs
push
cs
push
shr
fcompl
xor
repz
dec
pop
pop
aad
push
xchg
mov
sbbb
push
es
mov
addr16
jo
mov
scas
xchg
shrb
dec
sbb
nop
push
cmp
push
aad
in
xor
jmp
scas
cmp
pop
movsb
je
movsl
fmull
sub
pusha
inc
push
pop
mov
iret
mov
xchg
pop
and
pop
xor
std
push
or
xor
aas
arpl
les
push
jns
xor
ds
dec
xchg
mov
add
mov
mov
cwtl
popa
xchg
sub
aam
mov
inc
mov
mov
cld
jle
imull
stos
filds
jge
scas
sbb
setge
adc
loop
jp
inc
cmpsl
mov
inc
xorb
cmp
addr16
aaa
add
gs
rorl
xorb
cmp
scas
mov
cmc
cmp
lds
out
pop
or
in
jae
mov
in
push
cmp
push
xchg
cmp
sub
pop
repz
fcmovnb
sub
and
test
add
test
movsb
out
and
add
mov
and
push
pop
push
and
cmp
scas
mov
ljmp
mov
test
push
push
push
out
inc
aad
sbb
mov
insb
mov
out
in
lock
mov
and
xor
sbb
pop
addb
es
or
imul
push
fstl
movsl
or
or
xchg
movsl
sbb
xor
movsb
add
dec
sbb
sbb
inc
stc
popa
mov
test
dec
sbb
mov
lea
cs
mov
add
addr16
or
jns
scas
mov
add
and
mov
mov
and
cmpsl
ss
cwtl
xchg
int3
gs
loop
nop
test
mov
cmc
cltd
sarb
scas
outsb
psubd
mov
adc
in
mov
outsl
and
orb
test
push
cs
aam
adc
fisttpll
insb
lahf
push
repnz
dec
mov
or
or
jns
clc
add
incl
mov
cli
in
xor
imul
adc
test
mov
sub
mov
ja
adc
mov
mov
sahf
stos
cmc
nop
add
mov
dec
jmp
movsl
aad
dec
pusha
ljmp
jnp
pop
aas
push
loop
pop
push
sub
and
sub
gs
out
mov
mov
insl
movsb
cmp
xor
adc
dec
xor
or
ds
rcrl
jbe
outsl
test
fsubp
test
mov
iret
mov
or
push
fstpl
cli
inc
mov
or
ja
je
lods
mov
adc
shlb
cmp
sub
lret
add
mov
ljmp
or
pop
dec
out
insl
sub
xchg
inc
testl
mov
mov
push
test
cld
jae
test
js
jne
cmpsl
es
outsb
jp
dec
push
mov
stos
cmp
mov
addr16
dec
cmp
cmp
sub
fistps
test
pop
pop
cmpsl
subl
fisttpl
hlt
push
jge
push
lcall
pop
xor
aad
push
lret
aam
mov
jbe
sub
or
xorb
sbb
call
jmp
xchg
add
xchg
mov
sub
xchg
std
nopl
or
les
adc
pop
out
cwtl
or
dec
jne
into
sub
mov
mov
nop
ret
les
inc
dec
scas
and
jp
cli
sub
pop
adc
mov
sarb
push
sti
aad
jo
or
sbb
push
cmp
dec
add
or
fnstcw
xor
aam
dec
scas
sbb
movsb
push
sti
jecxz
cli
imul
mov
cmpsb
sub
jae
push
and
lock
sub
xchg
nop
leave
xchg
jg
fs
icebp
outsl
aaa
std
inc
mov
int3
sub
loop
aas
std
push
sbb
lds
icebp
add
in
pop
jmp
mov
inc
lds
jg
mov
jae
jge
add
je
je
sbb
sub
icebp
add
xchg
out
lret
mov
mov
cs
adc
jb
dec
dec
mov
ds
shlb
mov
add
test
aad
out
rolb
sub
clc
imul
push
into
xor
int3
ret
push
inc
in
les
ss
push
out
cmpsb
cmc
mov
xor
or
lahf
dec
mov
dec
mov
daa
xchg
cmp
roll
dec
push
int3
ret
jle
jbe
scas
call
pop
shll
leave
jb
and
mov
out
stc
pushf
insb
subl
jb
xor
loope
xor
adcl
and
fildll
and
pop
out
dec
out
int3
ret
jno
jns
sbb
sahf
jl
jbe
add
loopne
mov
inc
movsb
jo
pushf
ja
std
mov
push
mov
pop
mov
jb
mov
dec
nop
cmpsl
add
roll
mov
and
dec
in
movsl
xor
jb
clc
test
dec
stos
sarl
inc
aas
int3
push
rolb
pushf
push
js
ret
adcb
mov
mov
lods
notl
push
and
sbb
sub
xlat
insl
and
xchg
push
cmp
push
cli
into
inc
ja
inc
jecxz
call
push
mov
jae
mov
fwait
sub
add
jae
testl
dec
idivb
in
in
xchg
shlb
pop
mov
jl
fadd
loope
rcr
jmp
dec
pop
or
cmp
fsts
mov
push
sub
insl
scas
nop
jne
jo
js
add
or
mov
inc
outsl
add
sahf
xchg
cwtl
add
mov
xchg
int3
xlat
add
xor
ret
rorb
xor
sub
mov
fidivl
cwtl
stc
mov
sarl
in
or
lret
lods
add
add
call
inc
push
jp,pn
sbb
xor
call
inc
bound
adc
pop
lahf
xor
shlb
cld
outsl
xchg
adc
loop
hlt
mov
sub
cmp
idivl
rclb
dec
xor
in
and
add
lret
mov
out
out
cmp
and
adc
testb
push
lcall
xor
pushf
cmpsl
or
pop
mov
mov
rcll
pop
mov
imul
mov
lret
mov
fwait
push
inc
sbb
call
sbb
inc
pusha
pop
lahf
mov
cli
mov
pop
int3
jae
test
out
dec
xor
je
or
stc
jbe
xchg
inc
xchg
pop
pop
push
and
push
shrl
adc
dec
sbb
outsb
adc
arpl
aam
mov
nop
int3
dec
push
gs
xor
sub
mov
push
dec
dec
sub
int
and
xchg
jl
imul
int
cmpb
shll
nop
push
pop
test
push
dec
testl
mov
add
jmp
aam
fcmovbe
fldz
xor
scas
minps
outsl
btcl
fcoml
adc
inc
or
test
dec
xor
push
jns
lret
mov
out
faddl
ljmp
adc
mov
jns
mov
add
in
js
inc
push
cmc
popf
adc
cs
mov
in
and
popa
jno
ds
fisubs
imul
push
inc
fisttpl
pop
lahf
div
js
cmp
outsl
add
nop
icebp
push
daa
sahf
test
cmc
sti
rcl
mov
or
push
movsb
fmuls
sbb
mov
divl
and
xchg
call
es
add
mov
cltd
iret
sbb
insb
or
mov
rclb
push
rcrb
sarl
js
dec
shll
sub
mov
popf
push
mul
mov
fmull
ljmp
arpl
sub
aad
test
pop
push
outsl
insl
lock
ja
mov
call
lcall
inc
int3
mov
and
mov
ja
dec
xchg
repnz
push
dec
mov
xor
sub
aad
outsb
jp
sub
inc
clc
sti
gs
sbb
pop
mov
xor
pop
and
push
arpl
add
push
jp
dec
xchg
cli
and
jmp
xor
pop
mov
cltd
bound
pop
jo
outsb
loopne
shrb
sbb
aaa
adc
stc
jno
fsubs
jno
fmuls
daa
xchg
insb
sub
cmp
dec
push
pop
cltd
jle
outsl
inc
shll
cmpb
test
push
bound
out
imul
stc
scas
jae
pop
shlb
cltd
mov
iret
lret
cmp
mov
shll
push
ret
xchg
bound
xchg
js
adc
jbe
mov
cmp
ljmp
into
loope
popa
push
stc
add
in
test
push
jle
mov
add
scas
in
lahf
jns
mov
cmovnp
cmp
cmp
cmp
or
fidivs
in
inc
pop
mov
lret
sub
cmp
adc
xor
jg
in
xchg
sub
inc
push
fistpl
pop
cmpsl
xchg
incb
mov
scas
dec
mov
scas
add
fisubs
call
iret
dec
xor
dec
add
in
xor
xchg
xchg
xlat
push
mov
lahf
xchg
push
xor
adc
in
mov
cmc
push
sub
and
lret
jne
mov
push
lds
inc
mov
dec
jno
addr16
add
fdivrp
fisubrl
fwait
mov
outsl
adc
inc
iret
xor
je
lahf
mov
rolb
sti
jl
jo
lds
mov
clc
push
pusha
mov
add
sarl
scas
xor
mov
pop
jg
add
sti
lcall
insl
enter
push
movsb
mov
xchg
mov
mov
add
xlat
mov
sbb
push
sbb
mov
stos
cmc
cli
or
loope
sbb
lcall
jge
ds
in
stc
inc
andl
hlt
adcl
add
cmc
lods
adc
cmp
in
call
jl
icebp
xor
mov
das
arpl
andb
mov
mov
ss
imul
adc
iret
nop
pushf
mov
mov
dec
inc
sub
adc
cld
add
pop
xor
mov
fisttpl
enter
mov
or
sbb
pop
xor
stos
jae
lds
lock
repz
mov
lahf
mov
pop
mov
scas
fidivrl
push
outsb
xchg
or
mov
in
jle
fst
sub
sbb
add
in
mov
cs
bound
jae
test
adc
xor
fildll
jecxz
mov
movsb
mov
adc
loopne
out
adc
repnz
mov
xor
lret
or
add
ret
sarb
loopne
inc
fs
sbb
inc
in
adc
in
aam
mov
push
mov
sub
cmp
push
lods
subl
fcmovnbe
enter
dec
cli
jl
push
mulb
dec
ss
rol
test
fistl
adc
outsb
shrl
out
les
push
sub
push
mov
cmp
dec
mov
ret
pop
xchg
mov
leave
lods
xor
inc
aad
call
and
push
dec
pusha
sbb
insb
xorb
repz
xchg
fcom
mov
shr
dec
sbb
movsb
dec
fnstsw
cmp
ja
popf
mov
pop
xor
stos
dec
mov
mov
push
int3
dec
xchg
sbb
notl
pop
sbb
jle
sub
and
and
pushf
movsb
std
pushf
out
adc
lods
jge
fwait
cmpsl
push
jns
ss
sbb
scas
js
pop
aas
jp
dec
and
mov
lea
push
pop
xor
into
jne
cs
push
arpl
sahf
fcmovb
mov
test
jo
sub
sbb
jns
dec
pop
cmpl
adc
pop
insb
fcmovb
dec
faddl
add
push
sbb
and
or
popa
sti
es
adc
push
fcomp
outsb
sbb
xor
imul
inc
mov
cs
pop
pop
roll
cmp
xchg
insb
popa
rol
fstps
push
dec
pop
xor
aas
mov
push
addr16
faddl
dec
pusha
popf
fisubrl
push
cs
xchg
push
enter
popl
mov
mov
imulb
jg
adc
in
ret
rorb
es
mov
mov
pop
xor
sbb
rcll
mov
mulb
xchg
and
lods
lock
pop
jge
aas
push
cmp
xchg
popf
jge
mov
sub
xchg
lods
fcompl
pop
mov
xlat
shr
pusha
push
mov
pop
in
shl
push
cmp
cs
or
and
mov
pop
jl
stos
out
or
call
leave
pop
mov
or
int3
and
fcmovbe
cmp
sahf
mov
bound
and
fldcw
sbb
imul
scas
push
hlt
sbb
fldcw
lcall
fs
popf
jbe
mov
nop
jl
outsl
sub
push
jae
or
jp
mov
inc
cli
insl
mov
jne
repz
and
mov
cmpsb
das
jle
divb
dec
inc
sbb
cmpl
loopne
nop
xchg
xchg
loop
sbb
sti
stos
movsl
xor
inc
adc
out
xor
push
cmc
stc
add
aaa
inc
loop
jae
cmp
in
pop
mov
mov
xor
sub
dec
pop
push
in
push
or
clc
mov
jno
clc
pop
dec
test
pop
jns
scas
mov
dec
mov
ret
stos
lahf
or
mov
xchg
es
fcmovb
test
gs
rclb
sbb
mov
pushf
mov
repz
out
inc
push
mov
int
pusha
loop
test
jne
out
jmp
inc
xor
mov
sbbl
pop
jae
into
enter
dec
add
test
mov
mov
stos
sub
push
xchg
in
inc
jae
or
add
xor
outsb
sbb
sbb
jo
push
sub
int3
stos
fsubrl
inc
mov
sbb
jae
pop
jl
jp
lods
push
mov
mov
xor
sub
rol
loopne
xor
and
or
xchg
mov
jge
and
scas
push
enter
xchg
ja
mulb
xor
xor
or
ficoml
pop
and
xchg
xchg
dec
add
lret
outsb
mov
fadds
int
xchg
adc
mov
jecxz
push
pop
pop
or
repz
sbb
cs
fdivrl
stos
flds
sbb
out
ja
mov
pop
push
xorb
push
sbb
fs
mov
int
outsb
xor
shlb
inc
jbe
ror
xchg
ljmp
jecxz
out
adc
sub
ja
mov
xor
adcb
jle
dec
jle
rorb
stos
ret
xchg
clc
ret
xchg
imul
jl
sub
out
mov
add
or
cmpsb
sbb
xchg
out
mov
pop
mov
aas
mov
xor
dec
lahf
push
xor
ret
xchg
rcr
mov
mov
mov
jecxz
pushl
adc
lea
in
lret
push
ljmp
lret
addb
push
xchg
lods
xor
int
and
pop
pop
xchg
xor
adc
lret
xchg
or
mov
out
insb
incb
inc
sbb
mov
push
pop
out
imul
jo
mov
mov
xchg
pusha
pop
into
andl
sbb
pop
mov
movsb
add
dec
dec
sti
shlb
dec
pop
adc
fsubr
push
repz
imul
subl
add
dec
jge
inc
xchg
xchg
clc
adc
mov
sub
movl
push
cli
xchg
int
cmp
mov
mov
fidivrl
pop
aam
cmp
js
push
dec
je
inc
adc
sub
sbb
ret
int
test
repnz
jp
pusha
test
xlat
call
mov
popa
fsub
fidivrl
mov
adc
ficomps
mov
dec
js
pop
aam
mov
dec
test
out
aas
aaa
pusha
jno
in
adc
mov
pop
add
jb
iret
xchg
sarb
xor
cmpsl
mov
push
cmp
cmpsl
imulb
das
orl
fwait
int
pop
out
arpl
std
push
sahf
adc
lds
or
in
es
jae
rcr
jp
js
ss
mov
jp
sub
and
arpl
xor
cli
ss
adc
fsubs
xchg
xchg
or
js
arpl
xchg
popf
or
jecxz
aad
insb
negb
inc
faddl
push
sbb
int3
js
dec
cmp
cli
mov
divl
push
dec
sbb
test
cmp
sahf
adc
mov
push
lahf
mov
inc
cmc
sub
dec
imul
lahf
test
sbb
and
sbbl
push
fcompl
aam
out
dec
les
or
subl
inc
pop
mov
or
or
fwait
repnz
mov
test
out
dec
xchg
mov
xlat
add
push
ds
pop
bound
or
adc
fldt
push
mov
mov
mov
xor
aam
cmpb
mov
ret
out
xor
imul
jne
lds
rcrb
int
mov
testb
js
repnz
lea
popa
dec
and
add
adc
jno
insl
sahf
test
add
out
pop
into
nop
xor
xchg
imul
mov
pop
aas
fsub
pop
fidivs
xchg
mov
imul
fxam
dec
enter
cmpsb
loope
dec
sbb
xchg
xchg
fwait
xor
push
jo,pn
cmp
dec
mov
shl
cmp
repnz
or
mov
or
mov
test
dec
jmp
sahf
inc
ja
mov
aam
and
test
and
stos
add
mov
sbb
lret
inc
sbb
push
test
xor
pop
jbe
iret
lock
dec
mov
loope
xchg
lahf
dec
out
xor
cwtl
jo
dec
dec
shll
xchg
rcrb
or
mov
test
add
int
ds
and
ficomps
pop
loope
mov
dec
mov
xor
sub
repnz
mov
push
out
mov
shl
mov
rolb
cltd
jg
dec
push
jns
inc
cmpsb
push
push
nop
bound
ss
or
lcall
inc
xchg
pop
xchg
outsb
jle
xor
fs
xchg
test
and
jecxz
xorb
cmp
cmpsb
aaa
mov
int3
lcall
jg
gs
jo
rcrl
in
aam
push
mov
mov
sbb
and
loopne
sarl
inc
xor
and
or
ljmp
scas
inc
popa
and
sub
stc
pop
or
pop
lock
jo
shlb
outsl
fldcw
in
jecxz
js
ror
push
cmp
adc
test
lahf
mov
sbb
push
inc
add
scas
aaa
xor
and
dec
add
xor
fmuls
pop
pusha
stc
cmp
mov
add
sbb
test
adc
cmp
movsl
and
add
icebp
hlt
out
add
sub
popf
mov
scas
fdivp
mov
add
int
testl
mov
mov
and
inc
sub
imul
or
push
fdivrs
std
dec
sub
pop
jo
adc
push
enter
push
testl
js
xor
outsl
pop
lret
out
call
and
mov
in
sub
mov
imul
jno
and
lcall
hlt
lods
xor
jo
stc
out
mov
adc
mov
lods
mov
inc
fnstcw
adc
cmp
imul
aas
mov
pop
xor
xor
jno
add
mov
push
call
lret
in
imul
adc
out
mov
scas
hlt
mov
jno
clc
push
cld
insb
sbb
jns
mov
mov
and
fcmovne
jecxz
jle
cmpsb
sbb
jb
dec
stos
xorl
mov
cli
insl
cmpsb
sub
ljmp
outsl
je
mov
fisttps
in
jo
push
stos
pushf
fisttpll
lds
aam
aam
push
fs
jle
xor
leave
pop
mov
scas
push
xchg
mov
inc
in
sbb
cmp
push
dec
fwait
mov
pop
outsl
ja
add
aaa
test
in
adc
and
mov
and
add
and
adc
into
xlat
pop
push
insl
pop
pop
xchg
mov
ds
sub
xchg
mov
push
adc
mov
fnstsw
mov
or
sarb
es
sub
jmp
jp
dec
mov
insb
cmc
and
mov
or
mov
cmpb
mov
and
mov
clc
into
mov
lea
imul
sub
rorl
out
fmul
sbb
cmp
mov
sub
push
std
or
das
popa
out
loope
outsb
mov
dec
movsb
bound
sub
dec
push
insl
jno
push
and
inc
dec
int3
icebp
mov
and
pop
sub
enter
pop
lcall
jns
fndisi(8087
pop
divb
inc
jmp
dec
xchg
lret
mov
mov
push
stos
cmpsl
mov
cmp
les
mov
repnz
push
bound
mov
lods
jnp
and
insb
outsl
call
fs
aad
imul
mov
aaa
outsb
pop
mov
fidivs
cwtl
mov
add
aas
push
jnp
and
sbb
add
clc
lock
mov
int3
or
data16
adc
pop
jg
popf
pusha
pop
sbb
jae
sub
push
ds
add
lret
xor
and
pop
cmpsb
jbe
ljmp
mov
pop
xchg
jmp
lret
add
adc
int3
xchg
sub
sub
or
or
out
js
in
stc
mov
dec
mov
mov
push
out
or
inc
xor
sub
jno
imul
and
or
je
mov
decb
fnstsw
add
xor
add
movsl
rorl
add
lret
sub
add
stos
jge
mov
outsl
cli
cmp
adc
sbb
fwait
test
dec
in
inc
mov
jge
stos
in
sub
dec
mov
loopne
adc
and
pop
push
cmp
movsb
pop
lret
mov
int3
pop
fs
lcall
mov
mov
cmc
pop
jne
imul
adc
or
add
sub
push
out
bswap
sbb
fildll
cli
mov
pop
add
lahf
jno
cmp
dec
data16
xchg
jge
sbb
fistps
lea
lods
push
mov
jecxz
pop
inc
push
push
and
pop
call
jp
cmp
push
daa
mov
push
fs
pop
out
pop
mov
adc
sbb
fmuls
call
and
or
in
xorb
jb
loope
incb
jae
jmp
xchg
loop
jg
jg
pop
push
jmp
arpl
and
enter
adc
shlb
imul
jnp
lret
cmpb
mov
or
jl
hlt
fsubrl
mov
cwtl
pop
inc
js
cmp
mov
push
pop
mov
das
mov
push
stos
jl
sub
pop
sbbb
pop
test
dec
cmp
or
ja
arpl
or
sbb
idivb
add
mov
mov
fwait
pop
mov
mov
mov
mov
push
out
mov
sub
hlt
push
loop
nop
cmp
cmp
lcall
icebp
xchg
cwtl
xor
outsl
call
mov
scas
and
xor
or
inc
in
pushf
arpl
clc
inc
mov
mov
repnz
cmpl
rcll
adc
mov
push
xchg
mov
xchg
mov
or
int
or
xchg
insb
xchg
subb
stc
inc
inc
push
rorl
ror
jnp
mov
push
es
lcall
xchg
mov
or
sbb
rcll
addb
mov
mov
add
push
add
or
push
mov
lret
xchg
push
xor
or
mov
ds
cltd
jmp
gs
fsubr
xor
mov
fucom
negb
and
repz
or
add
ret
xor
xor
mov
jecxz
mov
mov
fdiv
faddl
inc
sub
mov
adc
fistpl
mov
insl
test
inc
lods
popf
push
stc
cld
aaa
adc
popa
pop
xor
pop
xor
lcall
cld
add
adc
mov
loop
sbb
in
lods
xchg
pop
add
cmp
sub
inc
cmp
cs
hlt
push
pushf
inc
cmp
test
jne
les
js
in
or
xor
test
jae
jecxz
int3
lret
push
fistpll
into
jle
cs
inc
fdivs
pop
pop
in
add
inc
and
cmp
sub
dec
insl
mov
adc
dec
imul
into
lahf
test
stos
addr16
mov
in
and
arpl
add
cltd
dec
xchg
shl
sub
xor
hlt
xchg
mov
mov
adc
test
mov
aad
out
lahf
add
cmpsb
ret
sbb
jns
andb
arpl
mov
or
xchg
les
push
mov
es
lret
sarb
inc
mov
pop
jp
std
sub
icebp
cmp
mov
out
pusha
bound
or
inc
xchg
cmpsl
negb
xor
mov
imul
cmp
imul
in
pop
rcrb
mov
mov
and
adc
sbb
leave
xchg
mov
dec
inc
xchg
icebp
cli
sbb
xor
add
outsb
pmulhuw
jo
int3
decl
pushf
lahf
mov
jle
das
ss
mov
jns
add
xor
and
sahf
mov
xchg
mov
fwait
imul
mov
push
repz
add
mov
add
shlb
mov
cmp
lods
leave
icebp
push
loop
push
or
fbld
jns
insl
outsb
mov
andb
mov
dec
testl
push
cmp
xor
xchg
or
pusha
pcmpeqd
sub
mov
pop
pop
lods
push
pop
xor
push
pop
int3
inc
push
sbb
outsb
test
pop
xchg
ret
mov
mov
scas
out
mov
mov
xorl
movsb
mov
icebp
cwtl
inc
out
call
into
pop
cmp
cmc
incb
loop
imul
xor
adc
and
push
mov
ret
fsubrl
mov
iret
fwait
repnz
test
cmc
inc
in
dec
loopne
loopne
stos
jge
mov
dec
rcrl
mov
mov
jecxz
mov
push
jns
cwtl
mov
hlt
rcrb
fcoms
inc
rcrb
sbb
into
jae
and
int
pop
clc
jl
lret
rcll
push
pop
ret
inc
fadd
mov
mov
lods
je
adc
ret
les
movsl
pushf
test
pop
add
sti
mov
or
fidivrs
mov
add
repz
enter
adc
dec
sub
dec
add
add
pushf
ja
sbb
mov
out
cltd
lahf
adc
test
add
hlt
adc
lods
aas
cmp
cmp
push
into
call
adc
das
inc
pop
fdivs
mov
cwtl
fwait
dec
cmp
das
mov
and
mov
pop
mov
faddl
inc
ljmp
mov
out
dec
shl
and
jae
pop
lret
inc
dec
sarl
xchg
mov
and
mov
fistpl
sbb
in
adc
mov
push
insl
enter
mov
das
out
incl
sub
inc
cs
push
cmp
pusha
out
insl
pop
inc
int
dec
dec
sti
ds
xor
lods
mov
jb
fwait
int3
cmp
fldt
fisttpll
xor
repnz
push
cli
lahf
ficompl
and
inc
out
imul
xor
fwait
fwait
rcll
ret
pop
cs
mov
es
pop
int
xchg
and
out
stos
test
and
lock
fcmovnbe
adc
outsl
subb
and
push
decl
xor
xchg
push
mov
rorb
ficompl
je
xor
jne
xlat
int
mov
xchg
lods
cwtl
leave
add
inc
jl
out
jns
sbb
gs
ljmp
and
jl
fsubr
aad
mov
sbb
pop
stos
test
ds
sbb
cld
dec
lahf
jb
xlat
mov
mov
fldcw
jns
popa
sahf
inc
jae
lock
and
jge
js
lea
sub
stos
mov
ret
ss
fucomi
inc
sub
shll
div
arpl
jb
cmp
imul
repz
jg
nop
stc
push
jns
dec
arpl
nop
movsb
fistpl
addl
and
fnstsw
aas
add
cmc
ret
lods
dec
popf
int3
mov
mov
lock
outsl
jl
xchg
inc
mov
test
or
mov
xchg
nop
sub
test
jns,pn
push
lret
in
shll
push
sbbb
sbb
xor
loope
dec
xchg
shl
aaa
dec
jge
mov
stc
cmc
dec
daa
ljmp
enter
inc
add
inc
xchg
es
lret
push
fsubrs
push
movsb
push
sbb
out
int
jo
cmp
cmpb
or
xchg
js
mov
sar
push
add
pusha
fmull
lret
fmuls
lods
sbb
icebp
sub
add
cmc
in
jl
mov
pop
stos
add
xor
fisttpll
lret
ljmp
push
ror
push
lods
std
xor
push
inc
and
sub
mov
lock
mov
cmp
ss
pop
inc
add
ja
in
adc
cltd
pop
adc
fs
mov
inc
pop
mov
pop
adc
hlt
and
inc
sarl
mov
push
jg
mov
dec
xor
repz
loop
arpl
rol
fadd
je
and
ds
stos
pop
xor
cmp
add
sti
imul
mov
lods
mov
mov
popa
cmc
daa
shrb
xor
inc
xchg
sub
xchg
int
js
enter
aam
cli
into
int3
lds
push
pop
scas
sub
push
jmp
mov
mov
scas
xor
lcall
packsswb
sub
cld
lcall
mov
daa
cs
es
fadd
xchg
pop
mov
imul
mov
test
mov
mov
jne
loope
jno
mov
cwtl
cltd
jp
mov
cmpl
les
lea
push
js
xchg
fcoml
xchg
mov
sbb
sbb
aam
in
ljmp
add
mov
je
je
xor
inc
lea
and
xor
mov
mov
mov
rcr
dec
test
xor
les
pushf
xor
pop
pop
subl
sahf
pop
mov
jecxz
mov
or
pop
inc
dec
cli
xor
sbb
cmpl
cmp
or
sbb
sub
or
sub
imul
scas
das
inc
adc
outsb
dec
ficompl
mov
xchg
sub
inc
in
faddl
mov
xchg
mov
mov
push
dec
enter
notl
sub
push
lret
add
sub
in
and
cli
mov
mov
add
cli
add
add
icebp
int
int3
test
xor
ficomps
sub
adc
adc
push
scas
adc
adc
jbe
loopne
out
lods
mov
cmpsb
outsl
mov
aaa
push
jns
jl
test
insl
mov
mov
in
cli
pop
cmp
mov
lret
cmp
push
push
inc
ja
repz
xlat
mov
jb
fdiv
pop
lahf
pop
push
lock
jne
pop
cld
or
dec
insb
xlat
movsb
mov
rolb
push
xorl
mov
inc
and
lret
movsb
sub
mov
call
sbb
cmpb
lret
dec
inc
sti
pushf
xchg
sub
dec
jb
push
lods
data16
mov
dec
lds
mov
mov
adc
dec
mov
sub
jg
jns
or
ret
jb
add
test
cmpsb
icebp
xchg
and
or
pop
cmp
adc
xor
dec
mov
rorb
jg
push
mov
into
and
inc
and
sti
xor
and
ss
imul
loop
inc
add
cmp
xchg
pusha
dec
xor
jmp
addr16
nop
aas
xchg
and
mov
aas
lahf
out
insb
sub
pushf
xchg
mov
jl
sbb
pushw
xor
lods
fsubr
and
je
inc
adc
sub
mov
adc
sbb
gs
cmp
cmpl
fisttps
je
sub
sbb
sti
dec
in
push
in
negl
psllq
pusha
adc
iret
sbb
ljmp
dec
dec
push
fwait
call
lcall
adc
xor
lock
sbb
lods
inc
push
mov
pop
fnstsw
pop
or
add
push
pop
stos
xor
and
xor
paddsb
pop
jg
outsb
loop
push
xchg
pop
xor
mull
inc
and
in
add
adc
in
loope
scas
lock
sbb
push
sub
test
dec
push
jno
push
mov
mov
jmp
or
addl
movsl
scas
into
clc
dec
push
jl
mov
mov
mov
sub
ror
mov
xor
xlat
inc
fldcw
dec
jl
movsl
addr16
in
sbbb
pop
adc
test
push
and
sub
gs
or
daa
sti
push
xchg
fwait
iret
das
xchg
jae
and
push
xor
es
pop
scas
pop
mov
sub
mov
dec
fwait
hlt
pop
js
push
test
shlb
pusha
arpl
jle
ds
call
into
sarb
outsb
int3
inc
nop
fdivrl
sbb
mov
movsl
enter
testl
insb
ret
xchg
dec
repz
inc
popa
push
pop
repnz
scas
sub
adc
out
sti
test
push
stos
pop
gs
leave
push
out
push
rcrl
xchg
js
jecxz
dec
shl
pusha
mov
enter
xchg
or
sub
or
mov
jl
aaa
outsl
je
in
scas
jns
pop
repz
xor
sti
push
cmp
xchg
dec
jb
pop
mov
and
jle
std
jl
sarb
adc
sub
sbb
rcrl
jbe
pop
mov
stos
xlat
lods
in
in
popa
aad
mov
adc
ljmp
xchg
andb
push
out
and
into
jmp
mov
jno
rolb
lods
fwait
into
cld
lods
mov
pushf
adc
movsb
xchg
pop
jnp
push
shlb
pop
push
test
movsl
mov
arpl
lret
insb
mov
or
cmp
or
addr16
out
xor
test
fnstcw
xchg
loope
aas
aaa
jnp
mov
or
mov
inc
imul
xlat
sbb
jmp
lods
shll
mov
mov
movsb
lds
mov
insb
loop
jne
push
stc
mov
aam
or
push
iret
inc
mov
lahf
sti
xchg
ret
xchg
movsb
xchg
mov
cld
lock
lea
pop
or
mov
lret
sbb
ljmp
jnp
ret
pop
into
cltd
push
jecxz
xchg
out
pushf
insb
hlt
cmpsl
push
and
push
aaa
jl
jo
imull
ljmp
and
test
out
mov
mov
add
mov
pop
shrb
icebp
ret
jl
lds
sub
dec
aas
mov
cltd
mov
idivl
cmpsl
mov
fwait
mov
cmp
repnz
xchg
mov
repz
xchg
sub
inc
jnp
lds
dec
xor
das
xchg
fiadds
test
jge
sti
jbe
pop
cmpsb
add
sti
dec
out
lret
sbb
nop
outsl
xor
pop
xchg
dec
loope
pusha
insl
sub
pop
adc
mov
hlt
inc
push
xor
out
jns
push
pop
lahf
xchg
cmpsl
push
xchg
mov
mov
shl
push
testl
inc
push
ret
leave
ret
dec
jns
xchg
insb
subb
in
and
pop
clc
push
xchg
les
or
jge
sbb
fs
and
jno
test
xor
lods
xchg
int3
dec
xchg
xchg
lods
nop
fisubrs
dec
xchg
mov
dec
push
cli
xorb
imul
pop
notl
jo
mov
jo
inc
or
push
mov
mov
les
xlat
mov
mov
or
xchg
rcrb
outsl
pop
iret
dec
divl
xor
and
mov
mov
adc
ret
inc
int
fisttpl
cmp
in
dec
cli
adc
cmc
or
popf
flds
inc
out
aaa
shr
cmpxchg
add
inc
mov
pop
or
cmpsb
push
js
les
jmp
test
mov
mov
cmp
xor
jnp
push
das
lock
mov
bound
mov
shr
insl
sub
loope
jae
loop
inc
mov
xor
aad
dec
shrb
int3
aaa
das
xor
test
out
and
stos
sbb
mov
scas
insb
push
ja
rolb
xchg
mov
dec
and
sub
je
add
dec
mov
add
push
movsb
stos
aas
jp
adc
sbb
js
push
ss
cld
pop
out
insl
aas
std
jb
fnstenv
and
clc
mov
mov
icebp
sbb
cld
lods
pop
cmp
cmpsl
jae
mov
sub
mov
leave
aaa
jecxz
push
adc
fsubrl
imul
stos
xorb
mov
fwait
es
gs
add
jmp
shll
sahf
rcrb
push
andb
mov
rol
jp
and
add
jle
aaa
inc
lcall
mov
mov
inc
fldt
push
insl
gs
cmp
jns
mov
dec
push
mov
and
or
fucom
into
sahf
mov
xchg
scas
mov
cmp
lcall
and
movsb
jns
inc
cmp
push
int3
mov
adc
das
cld
outsl
clc
out
push
xchg
stc
ds
add
ja
inc
xor
and
mov
jle
aas
mov
loopne
dec
lcall
sub
arpl
outsl
push
nop
sub
push
iret
jnp
push
sub
add
push
aas
xor
fxch
add
and
adc
int
push
enter
pop
ret
xor
dec
sub
lret
sbb
jle
sbb
lods
mov
pop
push
fs
gs
fsubs
sarb
and
push
aaa
rcrl
or
and
inc
pop
pop
push
mov
insb
add
adc
pop
int
rolb
and
mov
push
test
cmpsb
test
or
mov
cmpsb
pop
push
mov
xor
scas
add
adc
sub
fstps
add
or
arpl
mov
push
sbb
sarl
shlb
mov
add
mov
lret
aam
sbb
push
and
sbb
mov
sbb
or
icebp
jecxz
add
repnz
pop
jnp
fistps
sbb
pop
ljmp
jmp
scas
sbb
fsubrs
mov
adc
and
pop
adc
and
jmp
jmp
out
mov
ret
inc
sub
fisubl
mov
mov
push
add
add
push
in
cltd
xchg
shrl
aam
jmp
add
std
movsb
and
mov
dec
in
xchg
mov
or
aad
sarb
push
stos
xor
push
mov
testl
push
outsb
pop
test
cltd
mov
xlat
pop
aaa
sbb
mov
adc
rcr
sahf
mov
jmp
sub
outsl
loope
lock
test
push
psrld
adc
add
fisttpll
into
test
add
into
mov
jmp
sub
mov
iret
sub
movsb
nop
pop
hlt
addr16
push
mov
push
es
cmp
push
imul
fmuls
daa
ss
notb
notl
add
mov
lcall
inc
pop
xor
xor
stos
fs
add
lock
in
ret
mov
mov
fdiv
fdivs
shlb
int
hlt
mov
inc
fiaddl
fadds
fwait
inc
js
push
jmp
lea
mov
mov
int
sbb
mov
jb
cmp
mov
lahf
add
sub
enter
and
out
in
xor
ret
mov
test
jnp
lcall
test
mov
adcb
leave
data16
push
pop
out
mov
jg
xchg
pop
inc
mov
mov
and
imul
and
sbb
fadds
fisubl
adc
jne
mov
insl
lds
out
adc
pushf
inc
fucom
dec
popa
loope
jo
outsb
fisubs
lret
divl
iret
push
jg
dec
fcmovbe
inc
pushf
sbb
jbe
dec
jo
add
and
sbbl
mov
push
jg
subb
in
stc
inc
push
in
cmp
or
fisubs
jmp
xor
divl
jo
mov
xor
inc
push
fisubrl
pop
or
pop
and
loopne
repnz
rorb
shll
lock
mov
xor
cwtl
into
leave
aas
ret
out
sub
pop
mov
xor
mov
icebp
pusha
inc
or
fdivl
inc
adc
in
jb
fadd
cmp
pop
adc
dec
inc
ja
lods
lods
cmp
mov
scas
jle
aaa
sti
repz
into
imul
in
ret
inc
mov
fsub
leave
mov
mov
adc
repz
dec
aaa
loope
add
xor
mov
adc
leave
fdivs
push
push
mov
ljmp
sub
mov
cmp
shl
stc
popa
jmp
loope
loopne
mov
js
aas
div
stos
ja
push
ret
jnp
fbstp
dec
add
fstps
pop
cli
push
popf
mov
xchg
pop
std
cmp
dec
xorl
jbe
bound
out
inc
mov
cltd
jo
fisubrs
ljmp
push
lock
push
icebp
add
jne
pop
lea
test
push
popa
add
sti
xchg
pop
xor
xchg
mov
ljmp
xor
ror
and
repnz
lahf
jmp
cld
push
ja
adc
xchg
test
sub
push
dec
and
orl
jp
xchg
mov
sahf
jno
in
stc
push
movsl
push
testl
add
cmc
mov
rolb
sbb
mov
xchg
xor
mov
outsl
les
iret
xchg
inc
and
lock
roll
adc
mov
roll
sbb
cmp
push
push
xor
pop
inc
jp
es
push
sbb
xor
adc
negb
cmpsb
dec
mov
mov
xorl
inc
xor
stc
or
inc
out
aaa
mov
inc
aam
les
subb
stos
jle
mov
stos
cmp
jmp
push
ret
ffree
lock
ret
jp
dec
lahf
sub
pop
or
cmp
sti
sub
jl
mov
lock
in
xor
decl
mov
lcall
movsb
mov
out
insl
call
fwait
jno
out
std
mov
push
dec
pop
mov
lds
push
outsb
dec
push
sub
ret
push
dec
jae
sub
insb
scas
sbb
push
clc
lods
dec
call
sub
psrad
je
jae
xor
popa
popf
ljmp
push
repnz
mov
cmp
pop
inc
lock
repnz
cmpsl
or
cmpsb
aad
pop
jge
push
lods
add
add
xchg
mov
inc
mov
sahf
mov
sub
mov
ficoml
sub
xchg
jae
adc
sbb
popf
testl
cmpsb
and
mov
jne
es
jmp
out
lds
add
sahf
adc
jge
jmp
divl
push
inc
jno
push
cmp
ljmp
cmpsb
push
cmpsb
pop
mov
dec
cmp
add
incl
movsl
adc
int3
mov
mov
xchg
xchg
push
mov
fs
outsl
mov
mov
cmpsl
add
jb
add
or
fwait
or
push
lea
jle
add
iret
sbb
dec
adc
imul
mov
sub
pop
mov
lock
push
mov
push
mov
arpl
popa
pop
pop
inc
adc
pop
dec
adc
xor
mov
jne
imul
scas
and
pop
xchg
sbb
daa
inc
dec
sbb
cmp
lret
xorb
and
cld
fdivrs
out
cld
movsb
dec
loope
sub
push
fisubs
dec
cmp
bound
pushf
in
xor
jg
std
inc
dec
xchg
cwtl
and
push
sbb
cs
add
jne
ja
dec
push
popa
data16
in
scas
sub
mov
iret
and
mov
sub
xor
sbb
add
outsb
inc
xchg
rorb
ss
sbbb
lea
mov
rorb
or
xor
and
pop
jo
cmp
mov
pop
jp
leave
popa
loopne
das
xchg
mov
mov
mov
sahf
iret
xor
sub
adc
incb
adc
pop
mov
xchg
notl
sti
mov
aad
sbbb
and
mov
in
scas
faddl
andl
out
xchg
js
pop
fxch
data16
mov
cmp
int
jo
fistpll
in
test
out
and
xor
dec
inc
movsl
xor
xlat
icebp
call
dec
adc
push
or
shll
mov
dec
aad
mov
inc
jmp
cmp
dec
imul
popf
cmp
mov
dec
dec
jp
mov
xor
out
sarb
fs
and
icebp
test
jo
ja
mov
decb
xlat
int3
pop
and
mov
clc
cmp
jle
cltd
scas
subl
sub
add
mov
mov
push
add
scas
jp
das
adc
sub
stos
pop
nop
sbb
lea
movb
or
or
icebp
mov
idivb
cmp
decb
mov
imul
fisubrs
cmp
test
aaa
mov
cmp
das
xchg
fdivp
add
pop
jae
notl
je
sti
shrl
es
jns
in
sub
frstor
sbb
dec
sub
fisubrs
neg
fcmovb
push
jge
jno
inc
adc
dec
xchg
lods
cmp
insl
aad
lock
mov
push
cmp
or
in
mov
lock
sbb
pop
pop
dec
scas
test
test
call
roll
das
icebp
iret
dec
and
scas
and
inc
test
add
or
andb
jecxz
push
clc
jge
hlt
mov
xchg
push
daa
adc
pop
test
and
int
pop
mov
sti
or
pop
idivb
xchg
xlat
cmp
mov
movsb
mov
decb
jno
scas
xchg
popa
fwait
scas
jmp
sub
imulb
repnz
jb
xchg
fstpt
cwtl
in
popa
bound
lahf
push
dec
xchg
push
test
mov
xor
outsb
addr16
adc
jl
andps
push
pop
lea
ret
pop
lods
jecxz
mov
test
in
loop
mov
add
test
xor
sarb
mov
int
ret
sbb
in
dec
pop
stos
mov
in
inc
mov
mov
mov
mov
ret
adc
cmpsl
std
push
stos
add
pusha
das
out
jle
subl
pushf
push
stos
aas
ds
and
lds
mov
mov
pop
add
pusha
jmp
cwtl
cmp
and
pop
stc
cs
xchg
imul
inc
adc
lds
insb
ljmp
jl
enter
add
pop
sub
ljmp
fldenv
lret
xchg
push
adc
sub
pushf
cmpsl
inc
pop
jmp
stc
adc
sahf
daa
mov
ss
push
daa
mov
loopne
fwait
cmp
cmpsl
push
xchg
mov
std
cmpb
sub
jge
imul
jns
add
push
outsb
call
xlat
xchg
pop
sub
jl
sbb
mov
mov
sub
dec
insl
sub
shrl
subb
cld
aaa
icebp
scas
push
rolb
xor
lret
test
iret
mov
jmp
sub
xor
andb
mov
loopne
sbb
sub
mov
jecxz
out
mov
push
test
fs
push
andb
inc
push
shl
cmp
rorb
jae
mov
in
fbstp
test
leave
pusha
fiaddl
leave
and
std
push
insb
mov
cmp
out
andb
cltd
loop
cmpsl
xor
clc
fldcw
pop
pop
fstpl
sub
aam
addb
js
sub
mov
int3
jo
dec
fsts
gs
adc
aas
jno
mov
inc
in
mov
xor
and
int
loop
testl
cmp
mov
ja
imul
jl
add
inc
inc
pop
adc
ficoml
imul
cmp
scas
or
mov
and
cmpsb
pop
sub
addb
adcb
cld
test
int
leave
jo
icebp
add
and
outsl
gs
mov
stc
filds
mov
jne
ljmp
dec
fs
jecxz
out
inc
adc
aaa
outsb
mov
in
pop
lcall
mov
adc
jo
loope
jae
scas
and
shlb
push
test
mov
movb
movsl
lret
jae
sbb
sbb
movsl
aas
push
mov
decl
or
push
stc
addb
jb
push
mov
mov
aaa
pop
jno
mov
mov
inc
and
repnz
hlt
mov
fistpll
cmp
lds
push
movsb
or
loop
aaa
shll
les
and
mov
sbb
inc
add
fisttpl
jg
adc
adc
test
rcrb
test
ror
pop
cmp
xor
ret
mov
pop
sbb
ja
xlat
addl
pop
dec
mov
xchg
push
movsl
jo
xchg
mov
or
outsl
xchg
dec
mov
pop
insb
push
popa
fs
inc
enter
cli
pop
in
out
jb
bound
popf
into
int
into
aad
rclb
rcrl
pop
dec
pop
jp
cwtl
and
loop
movsb
mov
pop
imul
jle
pop
addr16
hlt
rorl
ret
cli
fwait
or
inc
push
aaa
pop
decl
xchg
fisubrs
ds
xor
lea
or
loope
push
fistl
sub
addl
int
jb
jno
add
dec
sahf
mov
jge
add
int
fstp
xor
mov
sarb
dec
fsubs
idivb
push
rcr
lods
das
jno
rcrb
sbb
mulb
inc
jnp
fcoms
jae
pop
ljmp
cmp
aad
jl
mov
xchg
xlat
aas
push
fwait
and
sub
sti
out
es
or
lds
xchg
std
in
std
jns
lods
mov
dec
test
adc
dec
fwait
sbb
inc
inc
nop
push
jmp
cmp
jnp
stos
push
loopne
and
fsubrp
xchg
pop
rorl
mov
test
xor
pop
dec
adc
bound
in
mov
lods
jecxz
cmpsb
add
add
pop
and
jo
adc
decb
scas
fs
jp
sub
sbb
fidivs
xor
xor
movb
sahf
jle
xchg
fidivs
out
and
jno
inc
out
ret
aad
sahf
adc
ds
mov
hlt
inc
sub
sahf
outsl
sbb
cwtl
inc
jge
in
push
xor
sub
nop
stos
addl
int3
xchg
or
add
lret
add
inc
into
mov
loope
push
nop
cmp
cmp
adc
test
push
lods
fwait
mov
cltd
pop
movsl
add
out
cwtl
mov
mov
dec
fisttpl
push
or
pop
sub
js
adc
test
inc
test
out
pop
repnz
not
inc
jecxz
mov
push
mov
mov
dec
call
mov
xlat
rclb
jno
pop
fdivs
mov
inc
je
leave
sub
stc
int
in
inc
mov
pusha
pop
add
mov
sbb
or
jb
push
sub
mov
enter
addb
nop
jg
cwtl
mov
mov
push
jae
push
pop
loope
fmulp
mov
ss
dec
xchg
dec
std
icebp
sub
inc
xor
cmpsl
adc
out
jge
or
pop
push
mov
in
add
xorb
adc
cmp
or
clc
jp
sbb
lods
xchg
enter
cmp
popf
insb
pop
inc
repnz
iret
cmp
test
outsb
test
push
lds
gs
push
add
pop
sub
js
call
sarb
adc
jmp
pop
imul
adc
sbb
adc
push
mov
nop
aam
hlt
inc
sti
fwait
add
pop
stos
lea
xchg
push
cs
popa
dec
and
xchg
std
add
mov
mov
stc
dec
aaa
or
adcl
inc
xchg
outsb
ror
rol
xor
cmc
dec
shrl
lret
test
mov
lret
addr16
jne
inc
mov
fidivs
mov
testl
cwtl
loope
jg
aas
jmp
xor
enter
ja
push
and
ss
test
adc
movsl
les
mov
mov
sbbl
push
xor
jae
xor
leave
pusha
ja
xor
xor
ss
aaa
push
repz
je
adc
mov
pop
test
mov
in
xchg
dec
repnz
mov
xchg
xor
sbb
ficoms
mov
or
inc
sub
push
stc
jb
xchg
mov
popf
fcmove
negb
and
sub
sbbb
mov
rorb
and
xchg
add
pushf
fists
adc
iret
cmp
cmp
arpl
imul
imul
cli
fidivrs
pop
icebp
lahf
sub
mov
lods
mov
aas
jno
add
pushl
leave
mov
mov
jp
jmp
in
rorl
mov
popf
cmp
and
xor
mov
xor
iret
leave
dec
scas
shll
inc
bound
movsb
mov
fyl2xp1
fisubrs
orl
ja
jle
dec
jns
cmpl
mov
shrb
ja
mov
mov
xor
sbb
mov
arpl
scas
sbb
add
adc
pop
cmp
fisttpll
push
rolb
repz
push
mov
out
insl
or
add
xor
mov
clc
jecxz
test
pushf
popf
lret
xchg
pop
xchg
push
test
outsl
rolb
xchg
mov
dec
scas
repz
fdivr
pop
push
cltd
ljmp
movb
test
mov
xchg
xor
aas
mov
addl
sbb
and
andb
fs
into
gs
in
sub
xor
mov
std
das
lea
hlt
xor
pop
loope
inc
and
cmpsb
and
push
and
cmp
or
loopne
add
fistpl
popa
lret
push
pop
imul
sub
inc
clc
add
dec
lcall
inc
pushf
xchg
test
xchg
iret
shr
fstps
out
es
ljmp
sbb
mov
sbb
pop
pop
cmpsb
fwait
bnd
jmp
jb
pop
fcoms
push
or
push
pop
or
das
or
fisubs
ficompl
in
xchg
fsubl
mov
mov
jmp
icebp
push
add
mov
outsl
addr16
bound
and
push
clc
test
cwtl
mov
mov
call
adc
jnp
or
sub
add
pusha
xchg
sbb
call
mov
scas
repnz
enter
imul
and
int
leave
leave
lahf
adc
into
sti
cmp
lcall
xchg
faddp
lahf
out
imul
and
mov
loop
ljmp
je
call
dec
fidivrl
cmpsl
test
inc
cmp
sub
cmp
mov
repz
int
ret
scas
pusha
lret
int3
test
dec
mov
lods
mov
outsl
cs
jb
mov
sub
stos
jb
pop
pop
push
xchg
loopne
xor
data16
xlat
test
int3
icebp
andb
adc
mov
and
xchg
mov
iret
mov
cmp
jns
out
sub
and
push
xchg
push
jb
insl
push
fwait
cltd
jne
or
aad
pop
mov
sub
inc
ss
mov
xchg
imul
sbb
in
mov
dec
stos
mov
test
jmp
in
fdiv
inc
insl
clc
pusha
dec
jmp
xchg
inc
sub
outsb
sbb
cmpsl
mov
popf
pop
cltd
pop
and
addr16
cld
aaa
stos
jmp
xor
mov
data16
test
jg
test
sub
cmp
rcll
sbb
incb
icebp
popf
imul
sarb
sarl
pushf
add
daa
repnz
daa
sub
insb
sbb
dec
jmp
mov
jnp
outsb
jle
add
mov
inc
lahf
cmp
fstpt
jmp
arpl
and
clc
dec
add
xchg
cs
add
and
cmp
stos
std
dec
mov
lds
sub
int
iret
aas
popa
mov
into
jo
pop
call
cmp
icebp
rorl
inc
iret
mov
or
pause
push
test
test
inc
sahf
mov
cmpsb
and
mov
stc
test
and
mov
xchg
clc
sub
imul
cltd
testb
mov
fidivs
xchg
call
arpl
movsb
mov
fnstcw
push
int
lock
imul
ds
movsb
mov
mov
sub
aas
inc
sbb
dec
ret
std
dec
je
fsts
mov
fbld
add
in
add
pop
fwait
ja
inc
in
adc
lock
inc
adcl
xchg
dec
into
int3
or
sahf
dec
fst
cltd
or
dec
test
sbb
and
adc
pop
sub
mov
aad
loopne
xchg
inc
jmp
cmp
fs
jae
push
imul
xchg
cmpsl
inc
movsl
aad
lods
mov
int
inc
xchg
mov
add
and
cmp
fldcw
out
bound
in
sub
sbb
add
rcl
adc
mov
stos
inc
lock
outsb
add
pop
push
pop
into
rcrl
or
out
mov
sub
cwtl
push
frstor
fwait
push
adc
push
and
inc
xlat
pop
cltd
dec
dec
out
icebp
xchg
mov
sub
dec
jle
popa
jb
test
je
js
sbb
hlt
cs
shrb
mov
data16
es
stc
xor
in
aam
fs
and
mov
mov
xchg
mov
and
mov
std
mov
aad
add
push
pop
or
jmp
mov
call
xchg
cmpb
outsl
inc
push
pop
rolb
jae
mov
or
add
outsb
add
mov
lret
push
jecxz
lahf
xchg
dec
xor
icebp
mov
cmovno
clc
mov
xchg
repnz
lods
fmul
xchg
gs
cltd
add
cmpsb
int
imul
dec
lahf
popa
xor
ljmp
imul
lock
mov
dec
inc
inc
push
aad
ljmp
jb
inc
and
xor
inc
js
xor
xchg
cmp
insb
idiv
dec
sbb
inc
pusha
cmp
out
mov
in
aaa
aad
ret
pop
xlat
jbe
mov
add
cmc
das
xchg
adcl
or
lcall
lods
cmp
dec
adc
lods
daa
jo
or
imul
out
movsb
mov
out
shlb
ret
cmp
inc
push
or
add
sbb
pop
pop
mov
push
mov
mov
mov
mov
adc
stos
out
dec
mov
int3
mov
fistps
lock
cmc
adc
lcall
rcrb
div
xchg
push
lcall
pop
rorb
add
sub
scas
int
xor
mov
jl
loope
sub
or
sti
pop
dec
cmpb
cli
leave
hlt
out
dec
cmp
adc
in
xchg
fisubrs
and
nop
imul
out
jae
dec
int3
inc
pop
sub
and
lods
bound
pop
mov
and
fs
gs
push
aam
mov
push
jns
shlb
sti
mov
out
add
jne
xchg
inc
or
fmull
mov
repz
jecxz
subb
fsubl
outsl
rcrl
pop
out
mov
rol
clc
xor
cmc
and
popa
imulb
jg
pop
and
sbb
mov
sahf
in
mov
insb
ja
mov
test
add
mov
or
jmp
ss
push
mov
cwtl
jmp
mov
sub
int3
xchg
inc
dec
mov
or
adc
jnp
xor
cmc
call
adc
outsb
mov
shll
call
xor
out
dec
cltd
lret
lock
sub
aam
or
jbe
fmuls
mov
add
fcmovbe
cmp
testl
cld
jp
test
jecxz
add
imul
ja
frstor
dec
xchg
xchg
icebp
mov
jns
sti
mov
add
imul
int
rcrb
xchg
insl
stos
jmp
push
sbb
mov
jno
repnz
fsubrl
gs
mov
jecxz
in
pop
fistpl
jle
ljmp
mov
adc
test
pop
sbb
repz
int3
fisubl
xor
pop
sbb
xchg
jl
fbstp
enter
mov
and
add
bound
xchg
jb
test
test
int
jle
pop
mov
pop
inc
rcl
and
push
mov
pop
mov
push
lods
add
shrb
int
pop
or
sbb
push
xor
dec
xlat
pop
push
sbb
jp
pop
mov
insl
cmc
out
repnz
int
nop
xchg
jbe
dec
xchg
push
clc
push
sbb
and
movsb
sarb
std
sbb
sub
imul
aaa
enter
cmp
pop
sahf
hlt
jmp
stos
push
gs
fsubr
cmpsb
push
insl
xor
add
insl
add
aad
fisttps
mov
lock
jmp
clc
popf
in
pusha
or
pop
leave
dec
filds
push
mov
xchg
jne
shl
dec
mov
push
test
jge
or
fdivl
ret
jno
es
xchg
mov
mov
add
xchg
idivb
mov
xchg
mov
pop
jno
mov
popa
adc
dec
or
cmp
cmc
jne
adc
jmp
inc
sbb
repz
jmp
in
cs
mov
mov
sbb
push
cmp
sbb
inc
test
imul
xchg
aas
push
add
inc
in
mov
jno
stos
xor
sub
pop
lock
cmp
adc
enter
pop
hlt
insl
dec
rorl
roll
mov
sub
jge
aaa
add
jp
call
mov
out
adc
fs
fmuls
mov
mov
xchg
sub
or
popa
cmp
xchg
cmc
add
push
pop
pop
inc
mov
sub
cmp
ret
sub
psrlw
mov
pop
mov
pop
repz
jmp
aam
xchg
push
out
xor
adc
add
and
stc
insb
mov
outsb
and
scas
mov
rol
inc
push
test
mov
idiv
dec
mov
test
out
or
sti
cmp
add
sub
mov
bound
pop
rolb
mov
xchg
mov
hlt
lds
arpl
test
xor
sbb
push
mov
jne
jle
sbb
sbb
ror
adc
pop
test
pop
adc
loopne
int
repnz
sbb
inc
int
stos
add
or
mov
insb
scas
mov
insb
loope
sub
decb
xchg
cltd
iret
pop
xor
lock
ret
cmpsl
test
imul
sbb
mov
mov
pop
push
or
leave
mov
sbb
sbb
ds
imul
jo
stos
leave
and
jns
repnz
inc
dec
cmp
aad
or
xchg
lcall
aam
mov
mov
ljmp
pop
lret
jg
out
xor
testb
mov
dec
cmp
loope
xchg
insb
add
or
xchg
knotb
jns
jmp
pop
fwait
or
fiaddl
inc
sbb
adc
pusha
cwtl
pop
and
inc
mov
js
sub
xchg
push
cmp
lea
pop
lods
add
fldl
cmpsl
mov
xchg
sub
mov
or
icebp
sti
out
adc
mov
mov
lea
popf
sub
dec
rorl
scas
fwait
loopne
aas
jg
pop
pop
enter
mov
in
push
pop
lock
out
icebp
or
dec
sbb
sahf
test
mov
cmpsl
sub
fidivs
mov
mov
xchg
orb
pushf
mov
sti
adc
jle
inc
mov
jnp
movsl
jns
in
fldcw
mov
and
mov
loope
cs
sarb
fstp
and
je
jne
mov
data16
inc
popf
daa
rolb
xchg
mov
test
jge
mov
xchg
ret
inc
mov
xchg
fidivs
mov
push
pop
arpl
shll
scas
bound
fwait
or
fcoml
loop
punpckhbw
popa
mov
pop
imul
jae
cs
adc
xchg
or
mov
adc
cmpsb
mov
nop
cmp
inc
inc
mov
jl
out
mov
je
push
fsubs
sbb
nop
cmc
div
inc
push
mov
fbstp
pop
ja
mov
roll
lock
fdivrl
jp
mov
push
sbb
pop
fcoml
popf
lahf
lahf
jbe
shll
insb
and
andl
add
mov
pop
int3
scas
jbe
into
xchg
inc
add
dec
xchg
add
pop
adc
pop
lea
popf
mov
es
push
push
rcrl
imul
mov
loope
lahf
inc
nop
daa
cwtl
mov
sbb
cld
push
xor
sbb
lods
fldcw
in
call
mov
jns
push
adc
lcall
arpl
cmp
adc
jb
inc
pop
or
cmp
imul
ljmp
loopne
xchg
fstpt
sub
jnp
test
cmp
test
ja
rol
xchg
testl
out
mov
ljmp
mov
add
mov
adc
and
jle,pn
dec
in
xor
arpl
adc
mov
scas
or
adc
pop
jne
stc
sbb
imul
adc
mov
xchg
je
scas
dec
mov
cmp
movsb
call
in
nop
inc
in
lret
lcall
and
into
mul
mov
adc
shl
test
int
fsubl
mov
push
sti
rcr
xor
cmp
imulb
mov
scas
jne
subb
or
movsl
jno
jne
jo
pop
rcll
add
addl
shlb
addb
jg
stos
lcall
shll
popf
sub
mov
xor
pop
out
adc
clc
mov
inc
orl
stos
bound
inc
cmpsl
mov
jnp
or
fistpll
mov
push
adc
adc
icebp
hlt
adcb
xlat
stos
bound
push
mov
adc
popa
mov
or
jge
adc
scas
sbb
neg
out
dec
mov
and
xchg
mov
stos
in
sbb
repnz
pop
mov
ljmp
cmp
subl
cs
std
stc
out
xor
ret
pop
int3
push
xchg
mov
pop
stc
dec
lahf
push
xor
cwtl
pop
xor
scas
cmc
add
and
in
and
hlt
cltd
inc
or
adc
lea
out
mov
sbb
xchg
or
pop
add
jnp
les
and
sbb
jg
clc
cmp
push
mov
xchg
in
inc
lock
mov
lods
enter
or
jnp
ljmp
out
subl
cld
popa
out
add
pop
mov
jnp
out
add
sbb
test
sub
pop
xor
mov
dec
cld
in
push
std
cmp
imul
dec
xor
xchg
push
sbbl
cmp
pop
cmpsl
jp
pop
pop
push
int
mov
popf
in
pop
scas
fistl
pushf
push
arpl
popa
lcall
gs
push
fmull
push
imul
push
call
cmp
int3
pcmpeqb
sbb
jno
jae
push
loopne
std
xlat
outsb
or
daa
mov
movsb
mov
sub
inc
jp
ret
scas
mov
into
aaa
cmp
or
xor
pop
repnz
and
cmp
sbb
mov
cwtl
cwtl
enter
xchg
sub
sub
inc
mov
pop
aaa
orb
adc
fcompl
fs
scas
ret
out
js
repnz
jbe
mov
adc
xchg
xchg
sbb
mov
aad
cmp
fcmovnu
push
xorl
cmpsb
add
cmpsb
push
nop
rcl
adc
jle
sbb
jecxz
test
jo
lock
fildl
out
fs
sahf
scas
ljmp
sar
mov
icebp
sbb
jbe
xor
stos
jecxz
clc
xor
push
push
nop
or
fwait
mov
mov
xchg
ret
pop
fisttpl
or
pop
scas
bnd
jnp
and
pop
mov
shll
gs
fs
sub
popf
push
inc
push
sbb
test
cltd
fistpll
cmp
and
pop
jl
rolb
adc
loope
xchg
jl
inc
cmc
into
jae
in
aam
iret
outsb
cli
add
mov
xchg
shlb
mov
icebp
test
xchg
imul
dec
fimull
movaps
lods
shl
mov
fmul
pop
cld
imull
adc
cs
cmp
cmp
jle
mov
lods
out
mov
and
ds
test
add
lahf
xor
addr16
std
fisttpll
sbb
xor
xor
dec
sbb
enter
ljmp
test
rol
jp
push
mov
xchg
pop
aas
sar
shll
add
xor
sbb
push
in
xchg
sub
sub
sbb
or
lods
pop
cmp
inc
adc
mov
aad
xchg
out
insl
imul
dec
jecxz
movsb
sub
inc
jge
dec
test
pop
into
mov
xor
push
mov
in
jl
add
repnz
mov
js
aad
xlat
pop
mov
xlat
xchg
cmpsl
adc
dec
mov
jg
or
mov
cmpsl
xchg
insl
adc
sub
cwtl
push
imul
stc
dec
inc
jns
jp
or
cmpsb
sbb
test
scas
fstpl
mov
cmpsb
mov
jo
test
mov
and
int
mov
push
or
push
pop
sbb
mov
scas
test
shrb
sub
or
adc
or
inc
pop
out
test
dec
lcall
dec
jns
dec
pushf
outsl
rcll
xor
dec
jge
and
jmp
cltd
add
mov
into
mov
push
xor
repz
cli
hlt
push
dec
cmp
dec
mov
push
insl
in
mov
inc
jge
shlb
in
mov
mov
sahf
or
mov
imul
pop
and
lea
jge
or
dec
repnz
xchg
inc
repnz
scas
pusha
aam
rclb
dec
lahf
mov
mov
mov
lahf
out
pop
add
cwtl
popa
out
cmp
ret
fstpt
push
out
imul
pop
add
fiaddl
mov
push
inc
jl
test
idivb
and
push
out
bound
in
sub
pushf
mov
fcmove
sbb
xchg
mov
sbbl
add
dec
mov
push
iret
jo
cmp
repz
xchg
jge
into
sub
loopne
jns
push
dec
mov
sbb
out
push
cmp
dec
fucomp
jae
mov
cmp
or
or
aad
sub
das
mov
and
test
out
int3
inc
lods
pop
testl
stc
lret
and
xchg
stos
jb
xchg
aas
pop
pop
push
ret
ljmp
arpl
popf
add
jmp
ds
add
arpl
decl
movsb
xchg
aas
jg
dec
loope
cltd
int3
mov
ret
ljmp
inc
test
dec
inc
mov
vphaddwq
dec
sub
adc
ss
adc
pop
sub
jge
arpl
pop
or
dec
mov
cmpl
pop
inc
sub
xchg
xchg
mov
mov
mov
cmp
cs
cs
jg
or
inc
loop
or
sbb
mov
out
xchg
jl
mov
dec
popa
and
lcall
ja
cmp
xor
int3
addr16
lods
sub
dec
add
std
cwtl
add
adc
popf
and
shll
mov
and
inc
xchg
jecxz
movsb
fbld
minps
hlt
mov
das
in
outsl
loopne
cmp
inc
loope
fbld
push
add
popa
dec
push
testl
popa
jg
sbb
xor
hlt
or
push
sbb
mov
aaa
and
xor
arpl
jge
sub
pushf
mov
add
push
mov
jne
cltd
sub
pop
mov
pop
dec
mov
jb
cwtl
mov
xchg
sub
repz
mov
dec
bound
cmp
cmp
popa
mov
lret
sub
mov
push
cmp
ss
mov
in
xor
inc
arpl
inc
std
popa
cld
xchg
mov
or
repnz
insb
lahf
imul
test
jg
ret
pop
test
enter
and
push
push
lret
adc
cmp
inc
movntq
push
xchg
je
jg
mov
cmp
jl
xor
inc
sahf
cmp
insb
and
push
aam
movsb
xor
push
rclb
insl
cmp
fwait
testl
mov
sub
push
imul
icebp
push
mov
outsb
jne
fisubs
cmpsb
xor
xlat
bound
mov
dec
push
fnstcw
sub
pop
ja
push
push
sbb
xlat
add
sub
notl
das
pushf
jbe
cli
repz
in
push
dec
add
mov
scas
sub
test
cmc
or
pop
xchg
push
xchg
aaa
mov
sbb
fbstp
and
push
aaa
push
cmp
mov
sbb
arpl
jmp
xchg
es
jmp
jp
cli
mov
adc
inc
inc
icebp
mov
add
fs
imul
push
lahf
pop
mov
mov
jne
xlat
mov
out
out
pop
xchg
jne
lock
int
pop
mov
jnp
shlb
into
pop
cmpsl
popa
or
stos
jns
mov
insl
fneni(8087
dec
jbe
fisttpll
dec
xchg
repnz
cmpsb
or
shl
push
loope
cmp
mov
clc
cmp
outsb
shll
ljmp
shlb
stc
pop
add
mov
jb
flds
in
jmp
popa
jl
mov
imul
inc
aam
outsl
push
subl
sub
scas
add
test
xchg
inc
push
insb
xchg
jo
mov
xor
mov
xchg
or
add
das
push
add
sbb
cli
xchg
addl
xor
xor
pusha
scas
cli
popf
dec
lcall
je
js
repz
test
cli
mov
mov
imul
inc
in
movsl
popf
inc
mov
and
ds
in
add
filds
jp
push
je
in
stos
bound
add
outsl
movsl
imul
and
idivb
xor
test
out
aad
xor
adc
lods
dec
dec
movsb
or
fisubrs
aas
mov
sub
fiaddl
push
pop
xor
mov
fnstcw
mov
scas
jge
int
pop
fldt
dec
cmp
ficoml
lods
jmp
mov
sub
mov
orb
sub
enter
push
ret
sti
jge
fprem1
or
ret
jbe
inc
and
pop
dec
adc
es
sub
lret
sub
pop
xor
pop
mov
push
push
imul
sbb
pop
mov
or
pushf
jl
mov
or
pop
sti
sbb
sbb
xor
pusha
fcoms
mov
inc
mov
movsl
add
loop
push
jg
rcll
inc
in
mov
lock
fdiv
mov
xchg
or
pop
cmp
push
jg
fwait
cmp
cwtl
lret
mov
dec
mov
nop
push
jbe
sbb
mov
daa
nop
fsubl
call
push
push
pop
xchg
mov
pushf
jecxz
inc
jo
xchg
and
push
sbb
mov
in
push
push
iret
ret
out
fmull
xlat
imul
sbb
inc
mov
jno
sahf
add
mov
push
sbb
and
jecxz
movsb
lahf
mov
faddl
jl
clc
push
imul
in
push
shrl
xchg
pop
and
and
sahf
adc
fucom
lods
xchg
popa
scas
scas
cmpsl
push
jae
scas
sarl
jmp
icebp
js
jle
into
dec
pop
adc
or
outsl
or
popf
push
icebp
pmaddwd
lea
out
jns
mov
mov
pop
stc
sti
pop
nop
aad
xchg
pop
sti
pop
mov
lock
addr16
int3
js
fisttpll
xor
out
and
jp
shl
mov
pop
xor
jo
lahf
xchg
sbb
mov
rcll
mov
xor
cmp
push
lahf
pop
mov
jns
aad
mov
mov
sbb
jne
dec
gs
adc
ficoml
jl
xor
sub
jl
push
stc
xorb
inc
inc
orl
jno
sbb
inc
cli
mov
les
int3
movsl
fs
out
push
aas
pop
fldcw
jmp
cmp
and
rol
sbb
pop
adc
pop
clc
sti
jae
addr16
pop
lods
pop
jge
pop
adc
inc
pop
xor
loopne
loopne
dec
mov
mov
mov
fsubrl
test
repz
test
cmp
sbb
or
or
imul
std
xchg
pop
test
mov
xor
mov
jmp
shlb
mov
xor
fcmovbe
test
adc
inc
fcmovnu
mov
inc
mov
dec
sbb
js
jae
fcoml
jmp
stos
mov
js
je
movsb
lahf
rolb
pop
dec
inc
or
push
mov
sbb
fxch
mov
jmp
out
sti
popf
sbb
mov
sbb
xchg
add
pop
sub
adc
jl
push
js
inc
add
push
aas
xor
into
imul
mov
or
jg
cli
lds
subl
pop
stos
jmp
jmp
std
mov
xor
dec
dec
outsl
out
adc
rcrl
adc
arpl
je
add
outsb
add
in
push
out
xorl
lcall
or
dec
pop
pushf
icebp
push
xchg
ljmp
push
outsb
xor
sbb
ret
mov
pop
xchg
jae
pop
aam
pop
pop
mov
mov
fwait
jecxz
std
push
in
lods
ror
or
mov
sbb
mov
and
sbb
mov
std
call
or
pop
mov
xchg
scas
lret
pusha
sahf
mov
test
leave
sbb
sbb
cmpsl
pop
out
push
js
roll
mov
addb
pushf
inc
jmp
sahf
je
movl
std
pop
jecxz
pop
sbbl
jno
cmp
or
mov
in
fidivl
xor
xchg
shr
pop
ds
test
mov
pop
cmp
std
js
add
jp
lds
mov
mov
sti
lock
loop
pop
xor
xchg
push
lret
add
sti
inc
lods
xor
aas
jecxz
cld
jmp
das
adc
cmc
fistps
in
push
sub
pop
adc
loop
cmp
cmp
xlat
jbe
test
sub
leave
repnz
adc
sub
push
rcr
in
adc
shlb
push
movsl
dec
int3
mov
out
out
fnstcw
shlb
inc
into
inc
pop
adc
stos
daa
xor
sub
lea
inc
movsl
pop
rorb
dec
and
and
adc
jo
jecxz
fisttpl
add
movsb
inc
out
clc
push
aas
xor
shlb
sub
int
push
push
shll
pop
stc
sub
les
add
sbb
cmp
xchg
jecxz,pn
cmpsb
enter
sahf
xchg
subl
mov
jl
lahf
mov
push
out
stos
enter
cmp
sbb
scas
mov
xchg
jno
lea
sbb
test
je
mov
cmc
push
adc
in
repz
pop
arpl
lock
test
ss
mov
mov
add
pop
icebp
stos
loope
mov
jbe
mov
cwtl
test
jnp
dec
fbld
pop
or
push
ja
lcall
scas
add
loopne
jl
repnz
lods
nop
dec
sub
imul
mov
jo
fs
loop
f2xm1
inc
mov
pop
out
add
mov
es
mov
pop
incb
jl
pop
lcall
lock
sti
jno
mov
and
insb
ja
push
sahf
push
xor
push
data16
push
les
sub
push
jbe
ret
mov
push
xor
cmp
xchg
pusha
outsb
adc
sar
mov
out
sbb
rcrl
jbe
sbb
imul
test
jmp
mov
push
jp
outsl
das
fsts
pop
dec
ss
rorl
clc
in
outsb
push
sub
push
inc
lods
sbb
mov
or
addl
outsl
sub
enter
sub
test
icebp
mov
repz
into
pop
ds
push
lcall
in
mov
add
es
enter
or
or
mov
ljmp
or
cmc
xchg
sbb
mov
repz
adc
push
mov
stc
pop
xchg
xor
sbb
mov
roll
iret
int
dec
adc
cmc
sub
call
mov
push
lea
xchg
in
rcr
aam
mov
pop
jnp
push
sub
jnp
adc
adc
int
cmovle
mov
mov
adc
out
cltd
mov
loope
jmp
inc
fnstsw
inc
push
icebp
jnp
cld
data16
outsb
iret
data16
outsb
jmp
sbb
sahf
lds
push
cmpsl
ds
xor
adc
jns
jle
inc
pushf
push
cmp
out
imulb
sti
push
and
push
jb
cltd
test
dec
pusha
shll
das
in
sbb
add
adc
push
pushf
add
sahf
es
inc
in
aam
and
and
xchg
push
or
xchg
test
cli
mov
inc
stos
loop
test
push
out
adc
push
cld
push
cmp
sub
cmp
cmp
sub
jg
test
adcl
hlt
sub
stos
in
mov
and
imul
mov
scas
cmp
ss
aam
insl
dec
cld
mov
inc
icebp
pop
sbb
in
mov
mov
imul
xchg
pop
mov
push
addb
sbbb
lds
hlt
add
jle
fcmovu
mov
jnp
or
inc
jno
xchg
loopne
push
mov
dec
jle
xchg
mov
pop
std
cmp
addr16
inc
jg
ss
shrl
add
rcrl
nop
sub
dec
and
push
shll
push
lock
cld
js
in
push
popa
outsl
sbb
ss
repnz
mov
xlat
inc
push
mov
push
add
mov
mov
mov
jbe
icebp
fimull
fcoml
fdivs
adc
xorl
dec
mov
andb
std
fstl
or
pop
and
aas
in
pushf
mov
nop
push
cmp
xchg
sbb
dec
xchg
inc
mov
sub
ss
aam
loope
nop
adc
jmp
nop
adc
addr16
mov
pop
push
mov
out
rorb
cs
sbb
push
test
imul
fdivl
cmpsb
enter
pop
imul
mov
mov
aaa
sub
int
addr16
and
adc
stc
jne
mov
sbb
cmpb
push
lds
xor
mov
mov
xor
fisubrs
dec
sub
xor
lahf
lea
pop
cmc
inc
push
add
popf
aas
ljmp
inc
insb
dec
inc
sbb
lds
popa
leave
mov
arpl
je
loop
iret
inc
aaa
imul
xor
jae
fstl
ret
cmc
sub
push
mov
ret
jbe
ljmp
icebp
setno
mov
mov
mov
inc
or
dec
and
adc
bound
jmp
dec
fwait
push
arpl
adc
cmp
imul
jl
push
push
outsl
test
xchg
js
cwtl
sbb
adc
jno
xlat
loope
inc
repnz
cmp
repnz
cmp
scas
scas
sub
scas
dec
xlat
call
scas
bound
or
lcall
cmp
repnz
fdivrp
out
outsb
cmp
shll
and
ljmp
add
insl
or
scas
add
jmp
inc
mov
lock
jmp
insl
and
test
fs
popf
dec
sub
pop
fs
add
repnz
test
sbb
shlb
push
mov
lock
aaa
push
jae
lea
in
stos
sbbb
lock
and
push
pop
pop
jecxz
enter
sbb
mov
incl
lods
in
sub
imul
xor
faddl
mov
xchg
or
pop
push
es
xchg
cmp
stos
sbb
clc
sub
mov
xchg
lret
cmp
lds
clc
pop
cmp
xchg
xor
and
enter
lds
repnz
jae
jmp
insl
icebp
mov
push
sarl
sbb
stos
insb
mov
lock
sbb
jmp
mov
in
loope
inc
inc
xchg
xchg
loopne
rolb
out
jnp
das
pushf
scas
mov
movsb
xchg
cmpsl
pop
inc
add
test
push
jecxz
shr
push
sub
pop
mov
addr16
stos
std
fmuls
in
mov
inc
xor
ja
dec
in
pop
dec
inc
jecxz
sahf
cmovo
insb
aas
sbb
or
pop
repnz
pop
rdmsr
jmp
out
adc
mov
mov
lods
cmp
cld
inc
dec
inc
out
jg
mov
push
xor
pushf
popa
mov
ds
insl
shll
js
xchg
aaa
lods
das
cmp
mov
push
cmp
aas
dec
xlat
ss
adc
sbb
fst
push
das
xchg
jecxz
pop
and
push
cmpsb
mov
rcrb
dec
adc
fdivrl
xchg
mov
mov
and
xchg
int
sbb
push
mov
mov
dec
push
mov
xchg
jle
shl
mov
inc
push
sub
cmp
mov
mov
xchg
xorl
pop
cltd
pop
and
pop
xchg
out
add
xchg
jl
and
and
iret
cmp
std
cmpsb
popf
out
sarb
roll
or
insl
pop
dec
call
push
in
cmp
test
rcrb
dec
push
dec
mov
mov
lock
ljmp
mov
insl
mov
inc
sbb
repnz
mov
pop
int3
push
sub
mov
rcrl
shrl
xchg
enter
push
add
sbb
jbe
rolb
out
mov
stos
and
shr
sub
xchg
popf
and
add
fs
jb
cmp
stc
pop
mov
rcrb
addr16
jecxz
fistpl
test
ss
ficompl
iret
repz
jle
test
push
aam
mov
out
xchg
push
ss
xor
cld
test
add
stos
stc
xchg
xlat
mov
inc
add
and
adc
fdivs
ds
dec
pusha
sbbl
stos
pop
mov
jp
pusha
in
adc
xchg
pop
iret
ror
int
mov
cld
test
inc
cmp
jg
mov
mov
mov
popf
cmp
jne
lods
leave
nop
mull
adc
mov
ljmp
pop
loop
lds
repnz
cmpsl
jge,pt
sbb
cld
sbb
and
push
push
fisubrl
jmp
or
inc
jp
pushf
dec
mov
test
jle
push
cwtl
and
loop
aas
inc
lret
and
int
std
and
push
xchg
sbb
fwait
mov
int3
xchg
andl
call
jge
mov
xchg
lods
scas
mov
insl
mov
js
push
jecxz
jb
jb
ret
lahf
push
xchg
mov
loop
inc
daa
mov
mov
test
xor
dec
jb
scas
xchg
loop
test
lock
cli
dec
and
mov
outsb
addr16
sub
outsl
jl
xor
dec
cs
stc
icebp
stos
test
mov
outsb
or
sbb
popa
leave
push
lods
pop
xchg
xchg
add
push
lods
ret
jl
scas
jo
push
jecxz
sti
int
inc
enter
orl
mov
adc
xor
lahf
jecxz
adc
shr
fidivs
or
out
push
jle
push
mov
icebp
orl
rcrl
aad
dec
mov
stos
xchg
in
and
cmp
mov
pop
je
cld
repnz
les
rcpps
xor
js
jb
mov
test
lret
into
sbb
les
cld
push
push
xlat
push
aad
scas
jns
sub
mov
imul
andb
int
outsb
xchg
sub
gs
jnp
fucomi
or
popa
sbb
loope
and
ljmp
loope
jmp
mov
sbb
cmp
push
jge
leave
xor
or
pop
testb
add
orl
jge
mov
cli
fldenv
and
sbb
pop
mov
bnd
popf
or
fs
sti
and
xor
pop
std
jg
cmp
fst
inc
idivb
push
aad
insl
aad
jmp
cmp
inc
xlat
sbb
js
es
loopne
sahf
adc
jo
push
inc
scas
rcl
stos
les
lret
fidivrs
push
int3
in
sub
xrelease
sbb
test
nop
into
sbb
add
incl
push
mov
addr16
push
sbb
popf
pop
xchg
stc
dec
push
rcll
imul
push
dec
xorl
dec
call
shl
ss
mov
insb
loop
orl
xchg
aaa
loop
mov
add
push
push
inc
enter
xchg
adc
jno
lds
loope
shl
lods
mov
or
repz
xchg
or
mov
pop
lods
push
popl
insb
mov
ret
add
fmuls
dec
aam
lods
and
mov
in
add
int3
cmpsb
lods
add
or
popa
cwtl
out
lcall
xlat
out
cmp
push
mov
mov
stc
or
or
xor
jmp
xchg
mov
pop
mov
lea
add
xchg
out
jg
and
cmpsb
dec
stos
mov
stos
daa
scas
mov
sbb
and
xlat
pminub
rcr
lea
mov
out
test
inc
dec
bound
enter
mov
je
bnd
stc
dec
cmp
jo
fnstcw
push
cmp
ds
scas
sbb
push
pop
mov
pop
test
popa
jbe
mov
xor
fwait
adc
leave
dec
dec
push
push
jns
jnp
and
jno
jl
push
push
test
loop
inc
push
cmp
cli
xchg
pop
rorb
loopne
mov
push
xchg
xor
sbb
push
push
leave
lock
mov
and
clc
or
mov
pop
insl
vmovmskps
in
jno
test
dec
cmp
fisubrl
dec
leave
sub
mov
jp
adc
mov
pop
mov
iret
push
cmpsl
xchg
insb
outsl
mov
push
sbb
xchg
js
imul
and
pop
in
clc
daa
ja
gs
or
add
and
std
and
in
xor
mov
ret
jge
push
in
mov
dec
ljmp
push
inc
xor
pop
icebp
cmp
sti
xor
xor
add
mov
cmpsb
fistpll
imul
inc
mov
xchg
jns
clc
sub
jno
mov
dec
xchg
lcall
jns
mov
xchg
stos
sarl
cmp
lahf
jno
jb
pop
dec
ss
sbb
subl
test
rcll
xor
imul
push
mov
push
loopne
in
cwtl
fiaddl
stos
mov
mov
pop
jne
aad
fiadds
inc
xor
pop
lea
and
in
inc
push
test
sub
mov
jbe
xchg
aad
sub
add
mov
mov
adc
cmp
loopne
lret
scas
pop
jmp
std
lcall
jbe
or
cmc
or
mov
gs
push
xchg
movsb
test
shrl
pop
insb
iret
imul
loope
push
mov
imul
loopne
xchg
adc
fidivrl
cltd
mov
movsl
adc
lret
jnp
das
mov
movsb
dec
jo
mov
into
cmpsl
stos
push
shrl
sub
mov
in
jg
popf
mov
mov
dec
in
in
lds
pop
pop
fildl
push
je
icebp
inc
push
idivb
adc
pop
or
inc
xchg
adc
pop
cmp
adc
pusha
es
mov
inc
dec
jecxz
stc
xchg
insb
dec
jb
cmp
mov
cld
xchg
arpl
mov
js
push
sub
jg
dec
inc
dec
sub
test
xor
xchg
pop
fisubs
loopne
mov
int
mov
sbb
jle
jb
push
xlat
cwtl
movsb
xor
push
mov
lock
fs
pop
scas
daa
loope
mov
push
pop
inc
outsb
inc
adc
lret
add
pop
icebp
arpl
shlb
insb
jp
test
or
clc
jbe
and
fdivrs
mov
out
jecxz
and
popf
mov
lret
adc
xchg
aad
iret
push
lcall
cmp
in
push
mov
mov
das
int3
adc
adc
mov
cmp
ss
cmp
xor
sbb
mov
push
aas
adc
or
repz
cmp
adcb
pop
pop
adc
sub
aas
das
aaa
in
adc
addr16
int3
cmp
jo
push
adc
das
je
xchg
data16
fildl
or
outsb
pop
shll
stc
aam
in
loop
mov
stc
push
or
pusha
adc
nop
and
push
pushf
nop
dec
pop
lock
jnp
ja
xor
inc
call
add
xor
mov
nop
cmp
addr16
sbb
lret
popf
pop
dec
jnp
ret
dec
cmpsb
inc
xchg
or
lock
rcrb
fstps
aam
repz
aas
out
into
push
pop
push
xchg
sbb
into
sub
stc
movsl
pop
fucomi
je
and
sahf
repnz
jno
mov
ret
and
aaa
xchg
movsb
cmpsb
add
or
sbb
and
lds
lock
inc
ret
lcall
sahf
cwtl
add
and
mov
pop
cltd
decb
sub
mov
cltd
sti
pop
adc
mov
movb
ss
cmp
mov
lcallw
clc
push
xor
ret
cwtl
fbstp
stos
ret
xlat
mov
push
lea
push
sub
scas
push
push
js
jnp
cwtl
pop
fidivrl
mov
jnp
pop
sub
loopne
jecxz
push
test
mov
sahf
jge
test
dec
adc
aam
jge
movsl
and
setne
and
sub
iret
in
add
out
fists
out
pusha
push
test
ret
jl
pop
mov
fucomi
cmp
mov
ss
shrb
fdivrp
push
and
test
lock
mov
in
xor
sub
adc
add
repz
scas
cmp
mov
enter
in
xor
cmovno
daa
test
xchg
sbb
mov
mov
sub
dec
sbb
cmp
dec
ja
jecxz
lret
xchg
in
repnz
movsl
outsl
pop
push
popa
pop
fld
stc
rol
test
ror
xor
dec
pop
adc
push
adc
mov
ljmp
ss
add
sbb
add
mov
cvttps2pi
adc
inc
adc
loope
sub
xchg
daa
jbe
lods
fwait
adc
aaa
sbb
mov
xchg
inc
jl
std
fsts
mov
leave
and
cli
and
call
cmp
cmp
lods
cmpsb
adc
xlat
cmp
out
sbb
iret
lret
push
add
mov
repnz
loopne
pushf
rolb
and
pop
enter
xor
dec
aaa
test
sahf
dec
data16
cmp
mov
cltd
notb
cmp
data16
xor
cmp
cmp
pop
pop
mov
mov
sub
and
clc
rcll
push
or
sub
scas
test
iret
addr16
mov
fidivrs
adc
out
push
push
xchg
mov
cmovb
insb
mov
sub
test
test
stc
ficompl
pop
jg
push
sub
dec
repz
ret
and
icebp
jge
sbb
push
add
test
ret
push
in
jb
jp
lahf
mov
fsubl
jno
cli
cli
cmp
xchg
movsb
push
cmp
xchg
cltd
adc
jecxz
fnsave
inc
xchg
ret
mov
sbb
pop
mov
imul
xchg
repnz
loope
enter
inc
into
or
lahf
out
mov
and
mov
daa
data16
hlt
cs
xchg
leave
mov
jg
rcll
push
mov
jo
push
fs
outsl
and
cmpsb
movsl
incl
adc
in
test
add
push
in
jg
addr16
push
mov
push
int3
int
aas
adc
lock
jecxz
sbb
jnp
xchg
lods
jae
dec
sarl
ss
adc
xchg
inc
and
or
sub
inc
mov
sbb
dec
mov
pop
xchg
repnz
or
repnz
lahf
inc
mov
jmp
jle
push
sahf
nop
or
mov
mov
aas
das
sub
rclb
pushf
mov
sbb
push
popf
adc
stc
addr16
jp
or
push
and
or
inc
cmp
pop
xor
cmpl
hlt
sub
test
pop
std
loop
iret
mov
sbb
sbb
push
jns
xchg
shr
sti
ss
xchg
les
stos
xor
lock
call
popa
lods
xor
cmpsl
push
sub
dec
sbb
fwait
push
inc
jns
adc
pop
or
cmp
sub
push
sbb
addb
mov
addr16
or
xor
js
mov
cltd
out
cmp
push
mov
mov
mov
inc
mov
movl
mov
mov
cltd
inc
stos
jg
add
jp
or
mov
cmpb
sbb
add
scas
daa
pop
add
xchg
ficompl
ja
xchg
ljmp
das
popa
in
xchg
popa
xchg
into
icebp
imul
into
into
xchg
xchg
jne
add
push
adc
push
mulb
sub
outsl
xchg
adc
jge
pop
add
mov
mov
data16
push
mov
outsl
add
inc
fisubl
daa
popa
adc
bound
into
sub
inc
xor
xor
jle
jnp
cwtl
ret
gs
in
add
lods
fbld
fs
pop
adc
imull
shll
imul
lret
cs
scas
inc
xchg
faddp
xchg
and
fs
data16
sbb
lea
out
shlb
push
mov
sub
lret
popf
cs
push
addr16
sub
rorb
dec
mov
jg
stos
pop
mov
push
adc
mov
pop
adc
push
data16
std
jge
xchg
repz
jle
xchg
mov
jp
cld
pop
cmp
xchg
or
sti
jge
jl
push
pop
xchg
das
push
xchg
mov
movsb
push
fsubr
jle
ret
push
xchg
cmc
test
sbb
iret
xchg
data16
mov
rorl
ret
icebp
arpl
pop
push
imul
mov
cltd
and
adc
and
and
xchg
shlb
sbb
pop
mov
int
stc
les
cmpsb
inc
add
addb
xchg
jb
and
or
into
sub
and
xchg
mov
ffreep
sbb
xor
scas
mov
in
jb
rolb
and
ret
push
es
rorl
and
inc
jnp
leave
fadd
xchg
imul
cmp
fbld
aam
mov
sti
jnp
mov
mov
loopne
pop
mov
and
push
sbb
pop
into
fstpt
sbb
in
xchg
pusha
loopne
or
test
sub
cmc
xchg
mull
mov
xor
inc
pop
js
repz
or
xchg
fcmovnbe
data16
clc
addr16
les
daa
pop
xchg
push
sti
mov
in
int3
scas
push
sti
or
mov
inc
fcomi
in
push
or
out
arpl
dec
push
cwtl
pop
sub
sbb
or
andl
mov
enter
out
sub
fisttpl
neg
lea
jbe
jbe
and
pop
lcall
jp
leave
loope
xchg
orb
add
stc
popa
add
pop
daa
mov
aam
jmp
xor
in
mov
cld
fwait
mov
dec
mov
sarb
push
or
in
mov
hlt
iret
mov
fs
or
sbb
jne
fiadds
xchg
dec
mov
out
xlat
test
out
je
adc
stos
or
cmp
mov
lret
jbe
push
add
push
jbe
cs
pusha
fisttps
cld
cmp
outsl
sti
cli
or
xor
flds
stos
inc
lea
dec
dec
mov
jae
in
popa
xchg
clc
mov
in
jbe
ret
mov
and
in
and
dec
sbb
add
fwait
jae
popa
imul
cs
in
and
into
mov
bound
pop
loope
scas
leave
cmp
fsubrs
mov
fisubrs
lcall
push
adc
sub
jo
out
mov
jbe
cwtl
sbb
pop
and
sarb
inc
mov
xor
mov
mov
popf
push
jns
fstl
clc
mov
dec
fbstp
xchg
pop
jp
mov
cmp
inc
mov
aad
call
cli
repnz
push
mov
in
fwait
cld
mov
sub
xor
push
add
jns
outsb
loope
rclb
jae
xorb
fmulp
clc
jle
push
jle
fistl
cli
inc
aad
repz
add
fadd
ret
xchg
in
xchg
js
int3
std
aad
cli
jns
lret
mov
xlat
insb
movsb
cmp
shrb
cmpsl
push
jae
sub
inc
test
ficompl
push
push
inc
loopne
fldenv
jno
js
loopne
xchg
xor
or
insb
cmp
xchg
push
fs
inc
js
ljmp
arpl
mov
dec
imul
ds
ret
and
jecxz
cmpsl
jne
jae
je
mov
mov
lret
enter
cmovnp
mov
cmp
cmp
in
fdivrl
enter
test
nop
adc
xchg
sarb
lds
add
pop
movsb
dec
xchg
repz
push
insb
lods
pop
sbb
lret
shrb
xor
jg
pop
xchg
test
mov
mov
sbb
and
sbb
frstor
pop
mov
ficomps
sbb
inc
push
sub
fdivl
icebp
xchg
fwait
je
in
lods
and
pop
pop
add
pop
push
push
icebp
inc
and
jecxz
inc
aad
sti
push
inc
lret
push
jmp
js
jo
imull
movsb
dec
add
or
iret
lods
test
sbb
dec
pop
xor
test
insb
imul
xor
adc
push
and
out
add
out
and
jbe
sub
pop
gs
xchg
xchg
hlt
sbb
pusha
push
cmp
fmuls
ret
outsl
dec
repnz
mov
outsl
mov
imul
ljmp
fsubrl
lret
and
inc
lock
push
stc
ffreep
adc
sub
shrl
call
push
js
cmpl
and
add
cld
pop
mov
pushf
mov
sbb
popf
imul
loope
lahf
testb
mov
out
outsl
stc
ja
jp
lock
cmpsl
int
addr16
dec
fwait
lds
sbb
loopne
xor
push
inc
and
jne
in
pop
xchg
push
push
stos
pop
in
faddl
mov
adc
inc
mov
negl
add
push
outsl
dec
ds
sahf
loop
mov
daa
cs
clc
pop
mov
push
loope
ret
xchg
inc
cmp
sbb
and
or
movd
int3
fidivl
into
ret
sbb
imul
fnstsw
jb
fwait
sub
jae
mov
cmc
mov
pop
adc
xor
cli
jge
jg
in
add
add
inc
aas
adc
cmpsl
push
cmp
pop
mov
loop
dec
mov
ja
nopl
popf
push
cmpsb
cltd
inc
lea
mov
xchg
add
dec
jne
cmp
cmpsl
pop
lds
ja
je
xchg
bound
mov
jl
xchg
jg
pop
aas
enter
jo
xchg
gs
mov
pop
mov
pop
sub
cmpsl
lock
repnz
dec
cmp
xchg
pop
rol
jne
mov
mov
out
inc
inc
sbb
fistps
fdivl
cs
test
in
sub
mov
stos
call
inc
xchg
data16
ret
in
or
sub
sbb
cmc
stos
mov
js
aaa
adc
push
pusha
scas
sahf
mov
mov
rolb
or
push
push
dec
cmp
in
or
pop
xchg
cmpb
scas
push
or
fcompl
sub
and
cli
push
inc
andl
jbe
push
loope
cwtl
inc
mov
cmc
and
popf
je
ja
dec
push
leave
and
aas
push
scas
lret
fcmovnbe
pop
xor
test
pop
out
pop
cmp
push
js
push
sub
je
adc
test
mov
mov
push
stos
xor
outsb
pop
jp
and
lds
mov
mov
test
or
sbb
inc
cmc
leave
xchg
jne
out
cmp
in
mov
loop
mov
lcall
pop
cmp
and
add
dec
mov
movsl
add
cmp
cli
cmp
cmpb
jae
dec
icebp
mov
mul
push
fadd
ja
das
arpl
in
aam
adc
insb
js
jle
out
shll
lcall
push
sbb
pop
and
and
ret
lret
xchg
mov
data16
loopne
dec
adc
out
mov
adc
aam
cltd
sbb
insb
sbb
inc
into
leave
lods
shr
data16
jl
push
push
push
mov
test
sarl
bound
arpl
int3
ss
sarl
fadd
adc
sub
mov
movsb
js
cltd
jmp
or
rcll
adc
daa
and
repz
cwtl
leave
xor
imul
fcoml
mov
jo
or
cmp
cmp
cmp
lock
mov
push
jge
dec
mov
ja
xor
scas
xlat
or
lcall
fdivl
fisubrs
add
push
loope
xchg
loop
sbb
daa
mov
mov
pop
stos
dec
popf
or
aas
stos
divb
stos
lods
addr16
push
and
imul
jg
mov
cli
add
int
aas
out
sub
dec
inc
bound
nop
and
pop
sbb
shlb
xchg
cmpsl
out
flds
aam
and
adc
dec
mov
pop
in
add
lods
adc
stc
scas
inc
pushf
scas
jge
repnz
mov
add
adc
adc
xlat
mov
pop
xor
jp
and
jge
mov
jge
iret
inc
pop
cmc
push
sub
xchg
lcall
cld
push
mov
cmc
js
scas
fdivs
out
or
cmpsl
push
xchg
jae
negl
push
into
sbb
fwait
insl
fwait
inc
or
pop
pop
mov
sub
cmp
mov
stos
das
mov
pop
in
mov
cmp
xchg
push
inc
and
sub
mov
dec
dec
adc
inc
or
xchg
dec
pop
jmp
pop
test
pop
mov
das
mov
mov
inc
sub
mov
shrb
popf
inc
rorl
add
xor
pop
mov
pop
jmp
inc
and
add
sbb
js
repnz
scas
jnp
cmp
fcmovnu
addr16
into
xorl
incb
pop
cmpsb
in
push
xor
clc
cmp
or
pop
mov
adc
movsb
out
cmp
loope
mov
jo
test
and
sarl
xor
sub
sub
jo
xchg
lahf
xor
rcr
xlat
int
mov
or
pushf
inc
loop
pop
pop
pop
add
stos
hlt
cmpl
scas
shrl
mov
jns
push
xchg
testb
inc
popf
mov
cmpsl
mov
add
and
xor
xor
or
je
out
hlt
ja
xchg
pop
xorb
inc
push
int3
andb
pop
push
outsl
imul
fdiv
bnd
push
push
in
rorl
mov
mov
lods
jmp
cs
aaa
mov
push
pop
push
aas
sbb
leave
mov
out
aam
mov
or
stc
lock
icebp
jno
arpl
test
pop
xchg
xchg
shr
imul
daa
xor
pop
mov
adc
out
xchg
repz
and
add
in
cmp
or
push
sbb
cmp
test
xchg
push
and
mov
dec
imul
outsb
and
cltd
filds
repz
fs
pop
loope
js
out
pop
das
cld
and
cs
sbbb
ret
sbb
repnz
in
enter
xor
pop
dec
bound
cmp
cmp
cmp
js
xbegin
add
in
push
cli
mov
and
cmp
imul
jmp
dec
loop
or
cmp
xor
loop
pop
and
aaa
sbb
xchg
fwait
lock
inc
enter
xchg
sbb
cwtl
sbb
sub
cmpb
movsb
push
mov
loopne
xchg
call
shlb
test
mov
xor
cld
pushf
sub
hlt
or
iret
and
xchg
jnp
push
sub
add
int3
jo
lret
mov
fldt
sarl
rcrl
int3
loopne
push
xchg
push
inc
jmp
ja
add
idivl
jl
pusha
or
jg
jb
imul
sub
xor
aad
leave
and
loop
clc
cwtl
loopne
clc
xor
loopne
and
push
fsubl
xchg
sbb
xchg
fwait
or
ja
sbb
ret
adc
push
fwait
outsb
aad
or
push
aas
jns
inc
or
addr16
ds
mov
scas
adc
je
or
add
loope
mov
add
fnstenv
jno
insl
xchg
jbe
sub
pop
add
xchg
jge
lret
mov
add
jp
cmc
aaa
mov
arpl
xchg
and
dec
sub
push
sbb
inc
dec
mov
inc
in
out
imul
icebp
inc
jb
arpl
arpl
inc
or
adc
jmp
or
mov
lret
loopne
mov
sub
dec
js
jo
inc
pop
cmpsb
je
addr16
push
push
clc
clc
pop
cmpsl
xlat
push
or
jl
jbe
into
mov
xor
enter
add
push
pop
dec
pop
mov
mov
cmp
lea
lds
repz
sub
int3
mov
pop
fwait
inc
jae
mov
pop
dec
xchg
mov
inc
pop
pushf
les
cmpl
mov
sub
add
inc
mov
mov
mov
push
sub
cmp
push
jne
or
pop
add
ret
adc
inc
or
imul
inc
dec
scas
mov
jg
test
pusha
out
out
enter
sbb
jl
and
hlt
rcrb
cli
dec
std
push
xlat
jmp
ds
loopne
dec
fdivrs
jmp
pop
push
cwtl
or
js
imul
cli
mov
jmp
sub
fstpl
or
cmp
insl
push
mov
ror
aas
adc
fldt
data16
cmp
inc
xor
fldt
outsl
call
and
xchg
into
and
rol
rcll
push
sbb
sub
in
inc
add
into
sti
pop
mov
maskmovq
notl
punpcklwd
xchg
iret
xchg
jbe
loop
cwtl
aaa
into
mov
dec
pop
xor
push
jns
out
shlb
fucomip
pop
data16
dec
shr
sbbl
pusha
inc
popf
dec
lods
push
mov
mov
or
cmc
cmpsb
jnp
sbb
lea
mov
push
setg
cmp
and
lods
dec
enter
test
fsubrp
fisubrs
push
in
mov
jnp
xor
lods
sbb
lahf
sub
jp
mov
ficomps
hlt
xchg
aaa
fs
mov
sbb
dec
push
xor
xor
pop
daa
outsl
std
cwtl
mov
ret
pop
popa
jmp
mov
or
inc
add
xchg
push
cwtl
call
push
cltd
leave
inc
out
gs
out
add
rol
popa
je
iret
or
cmpsb
fldcw
jb
jns
iret
or
mov
jp
jbe
dec
and
cmp
shll
xor
push
lods
cmp
inc
idivb
mov
mov
into
add
lds
addb
fidivs
jns
out
adc
push
sub
ljmp
in
xor
out
and
xchg
loop
shlb
pop
mov
ljmp
js
mov
in
lahf
pop
ja
inc
pop
cli
aam
sub
jno
mov
into
xor
les
test
shlb
mov
cltd
xor
stos
movsb
jecxz
jge
imulb
sbb
or
mov
mov
test
lret
push
mov
mov
inc
xchg
aam
push
repnz
and
out
rol
cmp
mov
xchg
das
out
push
cmp
lods
xchg
es
enter
push
test
movsb
mov
cmp
mov
out
mov
out
cmpsl
int
pushf
mov
mov
jle
dec
stos
pop
xchg
outsl
xlat
inc
dec
cmp
xchg
cli
pop
rorl
and
inc
fnstenv
test
sub
dec
ret
pop
pop
adc
cmp
inc
add
cld
adc
test
jl
dec
pop
xchg
cmp
outsl
pop
cmp
xor
cmc
sub
adc
jecxz
cmp
cmp
mov
lock
sbb
cmp
repz
xchg
sbb
imul
jp
inc
pop
pop
gs
ds
jne
clc
cmpsb
cmp
cmpsb
std
pop
push
push
pop
out
or
gs
mov
fs
jge
popf
ja
pop
sub
cs
mov
mov
xchg
xchg
xor
xchg
sahf
mov
repnz
orl
hlt
enter
xor
out
subb
add
stc
sub
lds
mov
mov
mov
int3
dec
nop
dec
pop
andb
clc
jl
dec
mov
test
fwait
cli
mov
jns
iret
mov
or
or
sbb
cs
nop
ja
test
jge
dec
inc
shll
mov
das
push
into
test
mov
sbb
rcl
lahf
std
adc
push
std
daa
shlb
test
hlt
inc
inc
mov
fs
push
mov
mov
jae,pt
inc
shlb
icebp
xor
popf
popa
xchg
xchg
jl
mov
fs
sbb
ret
lahf
dec
je
rcrl
iret
les
sbb
mov
out
dec
lcall
and
jmp
clc
mov
sub
fcom
je
pop
sub
mov
cmp
jns
lea
push
fidivl
mov
xchg
push
mov
inc
arpl
xlat
lea
mov
adc
or
pushf
je
loope
pop
mov
adc
ret
lods
or
out
push
push
xchg
xor
fists
and
in
aaa
sbb
cmp
push
in
int
movsb
mov
aad
add
test
mov
rcrb
movsb
pop
rorb
adc
dec
jge
mov
repz
hlt
aaa
out
cmp
and
outsl
lret
mov
mov
nop
xor
jmp
fnstsw
jmp
std
pop
inc
adc
push
or
mov
inc
jle
sbb
mov
sbb
in
jle
dec
jle
sti
inc
arpl
cmp
mov
test
add
inc
iret
or
mov
pop
out
popf
daa
sahf
inc
jge
xor
xchg
mov
cs
call
cmp
hlt
sub
jp
das
sti
loopne
xchg
pop
aas
cmp
mov
cmpsl
repnz
pop
fidivrl
add
xor
pushl
out
in
jmp
fistps
shlb
insl
adc
cwtl
iret
loopne
push
xor
movsb
push
daa
bound
lock
xlat
shl
sbb
mov
or
insb
gs
out
ret
jge
neg
cmpsl
clc
lret
pop
push
imul
jl
jmp
push
out
pop
lret
bound
jo
add
aam
xchg
ja
rcr
ret
jbe
and
ds
int
mov
bnd
sahf
out
and
ss
push
stos
cli
cld
or
jmp
gs
cmp
rcrl
icebp
xchg
and
jbe
stos
ljmp
ljmp
hlt
add
ficoml
mov
lock
pop
adc
adc
mulb
and
test
inc
aaa
pushf
and
roll
je
or
xchg
push
enter
fstpt
inc
mov
iret
push
int
fidivrl
or
test
jnp
push
add
mov
pop
fcoml
dec
test
call
inc
pop
iret
scas
mov
dec
out
stos
test
outsb
jge
dec
cmp
mov
add
subl
adc
aad
push
pusha
fnsave
xlat
andl
sub
push
nop
sbb
xor
sub
jge
fiadds
daa
incb
pop
inc
scas
dec
ja
xor
dec
add
mov
pop
push
xorl
out
pop
ljmp
shl
sbbl
in
lds
jmp
mov
imul
std
jecxz
loop
sub
cmp
jle
test
jne,pn
xchg
sub
psrlw
or
notb
push
into
mov
and
xor
repnz
stos
sub
mov
std
stos
lret
push
inc
sbb
lods
cmp
or
mov
sbb
cli
cli
into
xchg
enter
xchg
mov
aam
ss
andl
dec
insb
add
dec
jno
enter
pop
ficoml
adc
sub
clc
and
sub
je
inc
ja
adcl
or
jb
inc
gs
ret
lahf
lods
lods
ret
push
in
mov
xchg
jecxz
xchg
test
xchg
or
imul
testb
mov
sbb
inc
mov
and
adc
cmp
shll
cltd
mov
or
jno
and
ret
or
push
fnstcw
hlt
dec
fs
jecxz
mov
in
fcomps
sub
imul
xchg
stos
ljmp
cwtl
into
add
rcrl
cs
and
stos
lret
add
je
out
jno
idivb
mov
je
aas
and
idivb
and
nop
lahf
sbb
xor
and
lret
iret
add
sub
shll
jp
cmpsl
jne
cmc
popf
mov
pop
lcall
dec
cmpsb
cld
add
pop
xchg
sbb
adc
orb
sub
pusha
lret
xchg
popa
sub
add
adc
shrb
pop
inc
and
roll
lret
xor
xchg
push
je
mov
xlat
ret
add
and
add
hlt
sbb
movsl
daa
xchg
arpl
fsubrs
test
ror
daa
sbb
jne
inc
adc
cs
fbstp
fcoml
mov
xor
lods
jbe
inc
or
jns
lret
adcl
dec
adcb
xchg
xchg
jb
icebp
sub
and
xchg
lcall
fbld
scas
loop
not
mov
or
repz
sub
je
push
push
push
movsl
mul
push
movsl
push
pop
bound
scas
jb
or
cld
lret
xchg
xchg
jl
push
ud0
imul
mov
sub
out
and
call
repz
mov
mov
fistps
cmpb
and
loopne
in
lret
inc
rol
mov
negl
enter
mov
lock
loopne
pop
cmpl
in
fucom
repz
xor
push
test
xchg
mov
clc
fs
out
sbb
mov
jl
popf
add
enter
add
mov
addr16
cmp
add
and
xchg
out
push
adc
int3
mov
leave
into
stos
rcrb
popf
in
imul
mov
dec
pop
adc
xchg
mov
fisubrl
mov
scas
dec
sbb
sbb
sub
insl
inc
or
leave
dec
jcxz
imul
xor
cwtl
sahf
or
ret
cmp
add
mov
pop
out
dec
mov
pop
dec
test
push
pop
insb
outsb
cmpsb
or
mov
adc
or
inc
mov
testl
pusha
or
ds
fstpt
lahf
mov
into
add
pop
cmpsb
std
xchg
std
mov
push
jge
scas
iret
out
push
ds
jecxz
in
jp
dec
test
ficomps
mov
mov
jle
pop
xor
popa
sub
push
testl
mov
pop
sub
push
stos
cmp
xor
fadd
mov
out
pop
inc
lods
mov
bnd
or
adcb
xor
add
adc
mov
add
sar
and
dec
push
mov
insl
add
shr
jbe
outsb
mov
mov
xor
ds
in
mov
cmp
into
add
es
cmp
xor
iret
inc
pop
add
sbb
fadds
lahf
xchg
inc
mov
sub
out
call
sarl
push
and
imul
sbb
jg
adc
jl
sub
aad
repnz
lods
outsb
push
sub
stos
push
mov
or
into
inc
mov
sbb
xchg
pop
imul
mov
test
cmp
stc
mov
push
inc
or
xchg
xchg
popa
fidivl
call
or
sub
movsb
data16
fidivrs
mov
cmp
xchg
add
aaa
in
shrl
addb
pop
push
nop
mov
cmpsl
in
sbb
pop
mov
pop
mov
mov
cmp
push
add
sbbb
mov
or
pop
orl
mov
xor
mov
icebp
mov
push
mov
clc
xchg
sub
cmc
mov
fwait
inc
or
mov
dec
cmp
lods
and
aam
out
mov
xor
inc
jmp
add
xchg
mov
clc
sbb
inc
mov
inc
lret
inc
insl
cli
mov
jb
pop
mov
push
sbb
pop
das
jmp
ja
or
leave
sbb
pop
sub
sbb
sarl
aad
pop
cs
subb
add
cmp
in
jl
rclb
mov
mov
jae
arpl
scas
jbe
les
push
fwait
sbb
das
mov
sub
jge
xor
lock
mov
and
mov
xor
bound
imul
test
mov
nop
dec
test
ja
mov
mov
pop
mov
pop
adc
mov
mov
mov
push
pop
jae
jg
adc
imul
jae
das
mov
int3
sub
mov
cmp
pop
cmp
inc
push
xchg
in
mov
and
dec
jae
xor
lock
cs
mov
push
insb
insb
pop
or
push
sub
movsl
push
mov
gs
test
mov
lock
test
push
test
sbb
pop
enter
xchg
mov
sar
lock
test
movsl
push
lods
stos
adc
mov
jae
dec
sahf
or
loopne
jbe
adc
out
inc
aam
push
gs
cmp
cltd
ret
lock
repz
mov
mov
ds
jns
daa
mov
int3
outsb
outsl
mov
loop
jecxz
and
shrb
pop
in
lahf
dec
fiadds
xor
lea
hlt
mov
jmp
bound
or
ret
pop
dec
movsb
repz
mov
testb
sbb
aad
div
shrb
rclb
shll
nop
fcomp
inc
lret
je
add
mov
test
insb
repz
inc
sahf
loop
sbb
and
test
inc
nop
mov
dec
repz
push
and
ret
mov
movsb
sub
je
cld
fsts
sbb
js
xor
loop
aam
ds
push
imul
pop
cmp
push
or
xchg
rcrb
jns
push
sub
xor
mov
push
addb
outsb
cs
mov
adc
aad
mov
ret
stos
mov
addr16
jbe
jle
add
add
mov
push
sbb
cwtl
into
and
sub
xchg
inc
jmp
xor
cmp
ss
data16
iret
dec
xchg
in
enter
dec
in
imulb
popa
sbb
enter
test
inc
add
pusha
into
out
xor
cmpsl
cmc
pop
daa
ljmp
mov
dec
or
jnp
lcall
aad
out
das
repnz
das
lahf
xchg
lods
push
fmull
sbb
sbb
cmpl
stos
adc
cltd
dec
nop
xlat
xchg
call
pop
xchg
xor
pop
lods
add
stos
mov
jmp
ss
adc
and
or
push
and
push
pop
fisttpll
mov
mov
cmp
push
cmc
mov
mov
and
es
js
popa
fwait
ja
or
mov
nop
dec
cltd
ds
insb
push
test
sbb
inc
popf
sti
lods
sub
lods
mov
xor
movsb
aaa
hlt
das
stos
aam
push
fdivrl
out
fnstcw
ret
ret
subb
jmp
enter
popf
xchg
and
pop
pushf
jne
xchg
stos
out
xlat
inc
mov
xchg
cwtl
dec
lret
test
cs
lock
test
ljmp
outsl
sti
cmpsb
sbb
out
dec
and
negb
jecxz
pop
sti
nop
mov
mov
cmpsb
jae
cmpsb
push
leave
push
xor
movsl
jle
pop
xchg
mov
xchg
and
idivl
cmp
sahf
and
dec
jge
rcr
fdivl
pushf
mov
mov
jns
cmp
and
cltd
or
movb
mov
and
jne
cwtl
push
aas
xchg
xchg
jmp
xor
mov
cmp
mov
loopne
mov
jmp
movsb
ljmp
ss
cmp
call
cmp
call
adc
js
xor
pop
push
xlat
dec
add
ret
add
cmp
dec
add
cmp
gs
fs
test
jnp
mov
xchg
adc
aad
loope
loop
inc
pop
add
or
xchg
push
clc
in
add
sub
std
push
jle
imul
sub
xchg
jle
outsl
or
insb
test
inc
cmc
sbb
fs
test
fcom
and
xchg
mov
pop
mov
test
cs
cmp
sbb
je
inc
adc
in
or
clc
in
cmpsb
or
stc
inc
cmp
iret
push
nop
int
inc
call
in
sub
cmpb
mov
and
pop
ret
lret
nop
or
jg
cmp
xor
in
std
xor
hlt
mov
leave
xor
inc
ret
pop
sub
or
mov
data16
es
ds
test
jo
mov
adc
pop
dec
or
arpl
dec
mov
add
mov
xor
gs
or
xlat
faddl
cmp
push
add
imul
mov
xchg
xor
insb
aad
enter
or
out
ret
idivb
inc
mov
arpl
jge
pop
and
sahf
nop
addr16
lcall
and
adc
andb
mov
sar
test
inc
inc
xchg
sahf
aas
sarl
push
lods
in
imul
xchg
xor
loopne
mov
jp
sub
xchg
jmp
rcrl
dec
out
and
pop
out
ds
lods
lret
pop
inc
test
icebp
fsts
xchg
gs
loopne
ds
mov
cmp
rcrb
dec
push
push
or
imul
xchg
and
das
adc
fldenv
cli
in
scas
mov
mov
add
ucomiss
loop
dec
ds
das
lahf
negb
imul
jmp
mov
jp
and
mov
pop
out
std
xchg
pop
adc
dec
aad
fs
cmp
mov
xor
jno
out
in
sahf
subb
xchg
jecxz
xchg
pop
mov
add
flds
dec
jne
push
loope
call
pushf
adc
lcall
fisubrl
push
movsb
leave
push
adcl
dec
stos
cmp
into
stos
adc
sti
xor
mov
rorb
iret
mov
sub
mov
inc
and
cwtl
movsb
push
enter
mov
cmp
enter
stos
jmp
and
xor
xchg
fcompl
xor
xor
loope
mov
mov
mov
roll
push
fisubrs
adc
push
xchg
pop
inc
add
test
mov
cltd
ret
pop
data16
test
int3
scas
jns
pop
repz
lock
popa
dec
or
test
xor
sbb
cmp
and
fs
pop
sub
jg
out
sarl
js
fisubrs
outsb
mov
dec
fcomip
dec
scas
mov
xor
adc
lea
pop
das
and
stos
xor
xor
leave
cld
add
adc
jmp
into
out
jne
pop
push
fnstenv
xlat
mov
mov
outsb
xchg
pushf
jge
dec
or
pop
fs
shll
push
aad
push
rcll
gs
pushf
and
movsl
sbb
lea
and
sarl
xchg
inc
insb
add
out
mov
inc
mov
imul
fwait
adc
insb
sub
xor
mov
xor
push
jno
and
sbb
add
push
in
fsub
dec
add
ja
cmc
ja
jne
insl
mul
push
pusha
xchg
jmp
inc
cwtl
pop
xor
add
and
in
sbb
xor
or
cmp
lds
cmpsb
out
in
arpl
lds
push
lods
orb
insl
inc
outsl
sub
cli
sbb
das
mov
outsb
scas
or
or
lret
add
repnz
mov
std
test
call
lret
movsl
filds
movsb
jo
mov
lock
add
repnz
push
in
mov
fstpl
cltd
shr
ret
jb
addr16
in
jno
ja
in
mov
jae
jns
mov
movsl
dec
xor
movsl
sti
popf
frstor
femms
xchg
insl
xor
lds
dec
aam
das
and
mov
add
sub
lret
nop
xor
inc
outsl
daa
mov
inc
xor
sbb
jge
adc
cld
pop
adc
setge
sbb
es
or
or
nop
push
inc
lods
sbb
push
cwtl
fld
jp
xchg
mov
lods
std
fmuls
subl
pop
dec
xchg
outsb
jne
rcl
pop
sub
jl
sub
fimuls
repz
mov
gs
dec
inc
sub
sub
in
add
pop
push
and
into
lcall
int
lret
xchg
cmpsb
pop
jmp
fstpl
rolb
or
cmc
dec
mov
out
add
lds
insb
inc
push
dec
das
mov
pop
mov
testb
movsb
dec
outsl
incb
repnz
adc
dec
mov
shlb
pushf
mov
push
sbbb
xchg
xchg
clc
dec
cmp
rorb
mov
mov
add
sahf
or
data16
xchg
or
fsubs
test
xor
pop
pop
stos
mov
lahf
testb
sub
addb
or
and
ljmp
mov
cltd
enter
dec
mov
sbb
lds
aad
xchg
sbb
jle
addr16
mov
jns
sahf
mov
filds
ret
sti
sbb
call
divl
push
jno
outsb
pop
mov
mov
fs
repz
push
add
jns
sarl
sub
les
cmp
mov
cmp
jns
push
push
loop
addr16
repz
jg
mov
lret
sub
fsubrl
and
adc
sbb
push
fs
fldt
std
mov
enter
push
ds
pusha
out
into
add
sbb
iret
dec
sub
mov
fistl
movsb
adc
scas
imul
xlat
cli
arpl
pop
mov
sub
xor
ds
and
shrb
jno
push
or
aad
or
in
int3
mov
push
addr16
jne
std
pop
sub
daa
and
loope
or
push
and
test
imull
or
in
inc
hlt
in
rcl
adc
out
push
out
push
xor
inc
mov
test
stc
adc
dec
dec
jge
mov
je
xchg
sub
xchg
aam
mov
ljmp
cwtl
arpl
xchg
mov
xchg
mov
mov
sub
mov
inc
xchg
js
in
loopne
ret
sbb
cmp
aaa
cmpb
add
arpl
xor
fildl
fldcw
jecxz
or
scas
inc
std
ja
cmpsl
je
outsl
xor
add
mov
repnz
jne
xchg
nop
adc
xchg
hlt
outsb
hlt
sbb
mulb
rorl
xor
fbstp
imul
sub
xchg
xchg
mov
sbb
and
mov
test
mov
lcall
push
gs
jbe
cld
outsl
cmp
cmp
push
pop
pop
popf
dec
fcomps
sub
and
ja
mov
in
and
push
push
lods
popf
mov
aas
frstor
inc
sahf
push
fdivrl
push
or
out
mov
sti
pop
or
rcrb
cmp
stos
cmp
test
sbb
insl
bound
mov
add
mov
xor
mov
test
cmp
and
mov
insl
pop
jmp
popa
jl
lods
imul
lock
sti
jbe
and
dec
mov
jl
out
push
cmp
out
push
in
or
cltd
xor
clc
out
lods
xchg
cmpsl
xchg
daa
xchg
outsl
jbe
lods
dec
push
mov
and
and
adc
add
inc
int
xchg
enter
mov
jnp
les
mov
stos
sti
jae
dec
iret
out
xlat
xchg
jbe
jne
pop
xor
xor
insl
pop
iret
insb
push
push
nop
xchg
mov
ljmp
xchg
outsb
pusha
enter
shlb
popf
imul
inc
or
xlat
xchg
cmp
push
enter
cmp
setg
jo
filds
jb
test
sbbb
scas
je
xchg
fwait
loopne
js
adc
cmc
sbb
inc
sbb
cmp
fidivl
out
jnp
fbld
add
xchg
inc
or
sbb
pop
int3
jmp
jne
mov
push
dec
pop
pop
sub
lret
xchg
js
dec
mov
pushf
xchg
inc
pop
in
mov
or
push
sbb
loop
sbb
dec
add
cmpsl
pop
push
aas
push
cmc
mov
test
cwtl
pop
int
icebp
stc
ds
cmpb
stos
int
out
jne
jl
jne
adc
jp
lcall
out
repz
dec
enter
add
icebp
jge
stos
lock
cli
lods
mov
cmp
lahf
orb
adc
cmp
pop
insl
mov
es
push
pushf
pop
pop
dec
loopne
push
cmc
push
int
out
or
xchg
imul
cli
and
mov
pop
pop
and
mov
outsl
add
enter
mov
or
jle
xchg
dec
out
ds
jge
sub
add
sti
xchg
jnp
add
fcoms
shll
sub
mov
outsl
jecxz
dec
xchg
mov
xor
jne
inc
mov
fisttpll
pushf
imul
or
in
or
andb
or
inc
iret
mov
dec
insl
fs
data16
mov
je
xchg
jnp
fs
enter
mov
sti
sti
fwait
mov
push
ret
mov
int3
je
adc
cmp
sub
sub
enter
clc
pop
fbld
loopne
aas
ljmp
or
push
fdivrp
aas
jne
adc
cmovle
xchg
mov
dec
or
cmp
xchg
std
and
bound
in
into
sbb
mov
or
add
popf
push
mov
pop
mov
es
push
nop
jnp
or
mov
into
mov
fisttpll
outsb
dec
adc
cltd
call
mov
mov
mov
sbb
adcb
in
mov
sub
or
in
in
jmp
jg
test
test
mov
xorl
or
lock
push
push
fldcw
dec
scas
sub
sti
movaps
push
pop
bnd
data16
outsb
scas
test
mov
lds
repnz
arpl
aaa
adc
mov
test
dec
mov
outsl
ss
xor
hlt
mov
loope
repz
push
adc
sbb
leave
fdivrl
insb
mov
push
subl
mov
out
pop
das
ss
xor
je
mov
js
loop
dec
adc
test
insb
sbb
pop
dec
outsl
fistl
int
pop
cmp
lcall
xor
lds
popf
and
aas
into
add
jne
jecxz
jge
shl
test
or
adc
xchg
mov
dec
sub
push
lcall
mov
mov
mov
adc
pop
push
dec
sbb
cmc
inc
add
push
ljmp
and
mov
cwtl
jae
jne
sbb
and
jnp
dec
dec
adc
insb
popl
dec
xchg
add
shll
lahf
and
lods
jno
rcr
mov
push
hlt
inc
or
push
ljmp
hlt
int3
sub
and
sub
stos
xor
sbb
jne
mov
pop
mov
lahf
cmp
mov
pop
mov
adc
outsb
movl
mov
jbe
or
shrl
lcall
mov
mov
add
dec
mov
lret
and
cmp
divb
jb
repz
andb
popf
xchg
cmp
movsl
cld
inc
jno
sub
mov
xlat
dec
imul
outsl
sti
pushf
mov
add
inc
cmpsb
out
mov
idivb
fdivr
xchg
das
loop
mov
loope
or
andl
sahf
mov
push
mov
jae
cmp
sub
cmp
mov
lods
in
je
in
leave
push
jns
popa
jns
mov
aam
inc
shr
cmp
call
mov
cli
cmc
addr16
iret
sbb
push
cmc
ljmp
sbb
mov
adc
fbld
andb
mov
scas
lea
sbb
jle
or
enter
mov
adc
inc
xor
lock
mov
mov
sub
mov
adc
cmp
loopne
repnz
jecxz
pop
imul
in
scas
sbb
jno
push
jge
outsb
or
fiaddl
int3
test
cld
dec
cli
xchg
or
and
xor
lahf
adc
push
inc
hlt
or
test
mov
lock
stc
ret
cwtl
mov
add
mov
dec
and
shl
cmp
mov
mov
nop
sbb
leave
adc
add
sub
aam
test
in
popa
push
lock
lock
add
lods
into
aad
mov
rorb
shrb
repnz
add
jbe
call
pop
push
push
add
sbb
cmp
std
js
mov
test
cmp
mov
hlt
stos
pop
aaa
enter
pop
dec
enter
clc
imul
cmp
jb
jb
scas
push
movsb
lea
and
pop
ret
inc
xor
jns
jp
xor
test
pop
push
push
inc
push
push
stos
inc
mov
aaa
mov
sub
jecxz
sti
inc
push
sahf
sbb
lret
sbb
inc
jb
aaa
and
mov
lcall
lcall
xor
div
subps
push
jb
dec
js
sub
push
pop
push
ss
xor
ds
test
xor
mov
repz
jl
into
adcb
rclb
sub
enter
cmp
jne
iret
jecxz
inc
fcmovbe
sbb
sub
mov
sub
js
dec
enter
xchg
lret
aaa
out
rol
mov
cmpsb
les
mov
sub
jmp
addr16
movsl
xchg
lods
mov
sub
or
ret
outsb
repnz
and
dec
adc
int
lret
xchg
xchg
repz
add
jno
and
sarb
in
mov
xor
ljmp
dec
pop
cld
xor
dec
cmp
sarb
cmp
adc
push
add
add
daa
push
or
fcompl
test
mov
cmp
fnstcw
orl
repz
dec
mov
pop
dec
fsubs
popl
or
add
xchg
ljmp
push
std
rclb
jmp
lret
jne
sub
push
out
jne
jo
cmpsb
les
outsb
jle
mov
stc
stc
into
cli
pop
mov
in
je
aad
jle
mov
fcmovnbe
rcrb
and
stos
mov
xchg
and
push
sbb
fsubs
or
mov
outsb
pop
stos
lods
insb
add
cmpsb
xchg
mov
movsl
incl
inc
jns
fidivl
and
adc
addr16
incl
out
popf
outsl
xchg
push
int3
jg
cld
stos
mov
int3
and
pop
cld
loop
fildll
cmp
cmp
scas
add
dec
mov
push
stos
ret
dec
mov
xchg
sbb
insl
lods
arpl
jb
xchg
cmpsl
pop
fucomp
adc
rorl
loopne
incb
jnp
jno
das
loope
adc
dec
es
sub
aaa
dec
ret
and
xor
mov
xor
bswap
sbb
lea
add
movsl
call
jp
pop
aam
pop
xchg
int
into
mov
cmpl
movsb
jg
push
mov
repz
ss
insl
fcmove
adc
mov
mov
insb
sub
mov
fisubs
lcall
mov
dec
out
out
arpl
xor
jnp
sub
inc
sbb
mov
call
jae
lds
and
sbb
in
push
pop
and
xchg
jae
icebp
pop
jge
mov
cmp
jg
mov
outsl
sbb
or
out
sub
push
daa
cmp
or
mov
and
mov
dec
push
pop
mov
daa
or
mov
outsl
jmp
sbbl
push
or
cmpb
mov
push
mov
mov
mov
jns
repz
cmp
out
ror
push
mov
xor
push
ret
mov
jae
pop
sub
mov
mov
jge
adc
fcoms
push
je
mov
xor
inc
sahf
xchg
sub
dec
xchg
clc
arpl
loopne
mov
cmp
int
mov
outsl
daa
hlt
sbb
fidivs
inc
sub
lock
stc
popf
sub
push
aam
lret
sbb
sbb
inc
sub
adc
movb
stc
push
adc
mov
test
stos
out
add
in
loope
sti
xorl
jne
aaa
call
jmp
imul
xchg
adc
jmp
xchg
cmpsb
inc
iret
cmc
jecxz
mov
call
jle
mov
push
ds
add
cld
out
push
popf
lcall
cltd
sbb
push
ss
mov
pop
sbb
daa
ja
sbb
mov
lret
mov
xchg
jns
jp
fs
sbb
jmp
jns
dec
daa
pushf
jbe
adc
jne
iret
fldl
aaa
mov
push
fldt
pop
adc
aaa
pop
push
inc
sbb
sub
adc
addr16
cltd
mov
adc
or
mov
inc
mov
enter
dec
xchg
add
jno
fsub
push
push
pop
pushf
sub
leave
fldcw
and
sub
dec
test
stos
dec
push
adc
mov
cmp
xor
xor
adc
jge
insl
data16
aaa
lret
mov
jns
fbstp
sbb
add
cld
fbld
push
lahf
js
cs
cmp
subl
jbe
pushf
jnp
or
inc
cwtl
adc
xchg
jp
gs
movsb
push
cwtl
fisubrl
lret
rcl
adc
mov
lea
adc
imul
jecxz
enter
negl
cli
fiadds
int3
sub
dec
shl
mov
icebp
push
decb
fs
or
add
mov
mov
sbb
pop
ds
xchg
jge
xchg
mov
arpl
sub
sbb
mov
xchg
lret
xchg
aaa
mov
mov
dec
add
xchg
pop
pop
jl
fcomp
or
sbb
mov
cltd
pop
test
loope
test
test
scas
jno
fsubrl
mov
je
sub
sub
xchg
xchg
and
push
or
ljmp
xor
mov
fldt
shlb
jne
adc
int
addr16
in
in
sub
mov
jns
adc
lods
dec
mov
iret
int3
loop
push
mov
test
stos
dec
rolb
aaa
xor
test
das
cmp
ds
mov
subb
dec
jle
outsb
pop
inc
cwtl
sbb
mov
out
ja
push
andl
call
dec
xchg
iret
pop
ljmp
cmpsl
xor
sbb
add
dec
hlt
insl
or
inc
mov
cmovp
movsl
out
mov
xchg
test
js
adc
cmpsl
xlat
cmpsb
out
push
nop
fsubs
inc
jb
mov
aas
jle
outsb
jge
xor
add
lcall
stos
inc
mov
mov
int3
ljmp
inc
fcmovb
int
and
pop
push
movsb
and
lret
pop
cwtl
rcll
test
xchg
jb
mov
jno
pop
fbld
fdivrl
xchg
push
fs
mov
pop
gs
es
loope
ja
jg
pop
jnp
add
popa
cwtl
js
rclb
fs
fildll
out
push
lret
inc
mov
mov
nop
lahf
lahf
ds
or
sahf
xchg
mov
pop
jbe
fcmovbe
mov
cmc
pop
jne
shlb
jns
out
pushf
mov
push
fiadds
xchg
jb
mov
ret
mov
jb
mov
pushf
enter
xor
or
scas
and
hlt
and
cmp
adc
mov
and
pushf
adc
and
out
mov
push
in
lea
adc
inc
mov
add
pop
mov
stos
mov
loope
mov
xchg
fmull
mov
cltd
jbe
fistpll
movb
fisttpl
fbstp
cmp
clc
rolb
ret
sub
jae
dec
sti
pusha
pop
sbb
cltd
stos
mov
push
test
lds
push
jmp
mov
scas
out
out
ja
jns
mov
add
push
aaa
and
sub
lret
cli
aam
hlt
add
mov
nop
subb
adc
movsl
fs
adc
test
xor
mov
push
clc
or
or
and
jno
push
pop
dec
in
or
or
test
mov
pop
fcomps
xor
xor
or
adc
cmp
stos
dec
pop
icebp
addr16
pop
mov
cmp
std
pop
loopne
xor
je
test
jp
inc
out
shlb
inc
sbb
cwtl
inc
jge
rol
movsl
ret
aad
or
dec
out
cmp
ret
out
mov
cmp
add
and
cltd
inc
fmuls
or
xchg
and
out
mov
gs
xchg
mov
enter
out
add
and
mov
clc
lock
test
and
and
leave
inc
and
mov
add
cmp
notb
sub
dec
cmp
or
mov
fsts
daa
fwait
dec
icebp
popf
repz
mov
cmpb
out
mov
mov
lcall
frstor
fwait
imul
jle
lcall
fdivrl
lret
cli
incl
nop
je
out
adc
jp
je
push
jnp
inc
push
std
sbb
and
insl
adc
inc
push
loop
xor
aam
inc
lret
popf
sbb
andb
out
dec
out
jb
imul
sbb
inc
mov
sbb
or
cmp
dec
dec
lds
sub
outsl
push
aad
test
mov
mov
out
mov
add
cmpsl
and
enter
sub
pop
pop
or
fwait
pop
mov
addl
ljmp
pop
scas
sbb
add
inc
scas
movsl
mov
sbb
add
adc
jl
mov
mov
or
addb
xor
inc
es
adc
ret
pop
mov
inc
xchg
sbbb
cmp
push
out
call
scas
or
movsl
sahf
addl
repnz
les
mov
sub
repnz
gs
inc
sub
and
push
rorb
jne
adc
in
es
mull
sbb
mov
inc
mov
ljmp
dec
fcompl
adc
orl
sahf
pop
int3
mov
decb
add
xor
ds
inc
notl
mov
jo
or
mov
sub
jmp
js
mov
jne
mov
cmp
mov
push
cmp
outsl
loope
inc
iret
sarl
xchg
pop
shrl
insl
mov
dec
xchg
mov
sub
or
dec
out
ljmp
xor
and
in
jnp
mov
or
mov
pop
repz
add
pop
cmp
and
or
dec
mov
adc
cwtl
ds
sti
es
mov
inc
xor
jnp
and
out
mov
mov
jo
test
add
ja
dec
stc
push
enter
jbe
push
sub
rcll
jmp
add
fcoml
mov
push
pop
add
xor
popf
shrb
xchg
pop
sub
cmc
push
orb
inc
imul
xchg
mov
mov
out
jge
xor
flds
adc
clc
out
shrl
and
repnz
inc
test
fimull
cmp
cmp
add
pusha
dec
lret
std
out
gs
add
std
dec
cmp
push
jp
into
addr16
push
movsb
shlb
mov
dec
inc
hlt
dec
cmc
rcrl
dec
pop
ss
mov
enter
insb
inc
icebp
sbb
mov
xchg
popf
in
inc
daa
lods
sbb
dec
pop
jl
das
lods
jbe
fidivs
add
xchg
sti
lret
jge
stc
push
push
pop
pop
rcrl
push
xchg
mov
repnz
xchg
fsubs
pop
xchg
addl
push
jecxz
pop
idiv
out
jb
dec
outsb
loop
repnz
std
pop
ret
lret
bound
int
daa
and
nop
mov
xlat
cmpsb
lods
push
adc
lods
jmp
cmp
mov
mov
dec
pop
pop
insl
xor
ljmp
ljmp
pop
je
push
inc
icebp
jmp
mov
fsubrp
jl
cmc
jae
cltd
ja
lcall
mov
lret
sub
and
jnp
repz
std
xchg
popf
sbb
in
imul
xchg
pop
lahf
shll
mov
mov
lahf
loope
hlt
jb
fldl
loope
mov
test
xchg
gs
mov
int
pop
mov
dec
adc
stos
mov
outsb
jne
dec
pop
push
inc
cmpsb
mov
in
xchg
xchg
jmp
pusha
sub
fdivrl
mov
gs
lods
cmp
arpl
outsb
xchg
and
and
icebp
sbb
mov
mov
lahf
lods
jecxz
mov
loop
mov
lahf
add
les
bswap
ss
dec
cwtl
cmp
mov
xlat
dec
add
bswap
int3
popf
imul
dec
inc
lea
sbb
pop
out
xor
or
lcall
pushf
fimuls
ficomps
sarl
pop
dec
xlat
imul
or
dec
loop
xor
stos
dec
aam
pusha
pop
inc
sbb
add
sub
clc
xchg
cmpsl
cli
fcoms
jge
outsl
xchg
mov
cmp
call
in
push
es
sbb
fmul
dec
out
pushf
jmp
fiadds
push
adc
outsb
adc
popa
test
lret
push
clc
loopne
les
push
mov
add
popf
aaa
push
lods
aaa
add
jl
call
jecxz
dec
xchg
dec
push
pop
loop
outsb
clc
pop
dec
test
test
xor
and
lret
mov
scas
out
mov
adc
cmp
popa
jo
sub
inc
jo
and
push
xchg
mov
xchg
pop
mov
dec
sbb
stc
or
faddl
sbb
ds
ja
xchg
inc
inc
mov
scas
ja
mov
hlt
mov
dec
lahf
sub
cmc
push
dec
xor
pop
andl
popf
jb
xchg
jno
jp
in
and
in
cmp
xchg
rorl
push
pop
push
jecxz
mov
adc
inc
pop
movsl
push
lods
roll
mov
inc
mov
leave
nop
xlat
faddl
rorl
xor
or
fwait
jno
sub
cmc
adc
rcrl
stc
repz
ds
mov
and
cmp
stos
iret
mulb
ja
pop
fs
cmp
into
xor
dec
test
pushf
stc
int3
cwtl
sbb
inc
shrl
mov
aad
movsl
inc
repnz
sub
fwait
cmp
in
inc
mov
or
dec
or
jbe
jns
or
xchg
lods
pushf
dec
mov
inc
push
sahf
adc
das
insl
xor
out
shr
loopne
push
sub
add
mov
add
daa
stos
out
or
sub
shll
in
lods
or
dec
mov
pop
jno
jp
mov
inc
or
subb
imul
daa
pusha
cld
pop
inc
mov
fisubs
mov
pop
jo
jae
mov
mov
dec
and
out
push
adc
vpsrlq
daa
dec
dec
scas
loop
push
or
jb
add
push
xor
sahf
cli
int3
mov
mov
addb
imul
sub
loop
add
sub
jns
push
jmp
lods
inc
gs
js
movsb
push
sbb
loope
clc
dec
mov
push
adc
mov
call
and
inc
enter
dec
cs
push
arpl
loopne
lahf
mov
jb
les
or
pop
sbb
push
jle
iret
lahf
punpcklwd
cli
clc
jmp
repz
test
test
push
outsb
add
clc
fnsave
xlat
xchg
cmp
push
mov
and
pusha
mov
jae
lock
test
pusha
cmpsb
psubb
rorb
pop
ja
sbb
movb
lods
jp
dec
push
clts
mov
imul
jle
mov
jp
mov
pop
loope
pop
and
lods
mov
faddl
mov
jecxz
push
les
pushf
mov
fs
das
mov
gs
push
loope
sbb
sub
jne
mov
jge
mov
cmpsb
and
bound
rclb
adc
push
dec
repnz
jnp
push
and
cltd
jo
jg
rep
mov
pop
shrb
repz
mov
jne
sbb
mov
ja
adc
idivl
adc
rcrb
add
xchg
xchg
mov
mov
addb
shlb
stos
pushf
pop
xchg
loope
je
add
pop
mov
sub
mov
iret
mov
dec
inc
mov
inc
outsb
push
cwtl
jne
lcall
cld
clc
ja
into
or
mov
or
call
jl
pop
mov
xchg
or
in
arpl
xchg
dec
mov
mov
mov
pop
cmpsl
xlat
sub
mov
dec
std
dec
in
lret
mov
mov
orl
jp
adc
jbe
movl
dec
push
xchg
subb
push
aas
and
in
jne
fsubrl
pop
nop
mov
out
xor
sahf
stos
add
cli
sub
xchg
sub
mov
mov
push
imul
and
xor
pusha
outsb
outsb
movsb
cltd
xor
xchg
pop
lods
mov
in
add
adc
nop
mov
xchg
jo
pop
dec
out
mov
shlb
call
dec
imul
jge
lret
cld
inc
mov
cmp
jl
cmp
in
mov
out
and
push
push
and
cmp
imul
out
pop
xor
sahf
adc
ret
and
mov
jne
in
ret
scas
repnz
sub
test
push
push
mov
jmp
in
lds
xchg
stos
pop
inc
ret
je
outsb
add
inc
shll
mov
add
ljmp
sbb
jo
mov
loop
in
scas
or
stos
xor
inc
and
dec
lods
pop
dec
fincstp
stc
mov
push
cmp
dec
xor
out
mov
sub
cli
movsl
pop
adc
mov
or
loopne
xor
xlat
cmp
sbb
xchg
stos
add
outsl
sbb
push
mov
fbld
out
popa
aam
xor
aaa
test
in
filds
lods
stc
mov
pop
xlat
sbb
sub
sarb
and
insb
or
icebp
les
sub
mov
repz
jno
lods
xchg
cmp
push
int
pop
push
out
cmpb
sbb
test
mov
pop
mov
jp
shrl
scas
gs
push
jmp
sbb
push
leave
mov
bound
push
out
lcall
lret
xor
cmpsl
bound
pushf
jp
inc
out
insb
push
outsl
mov
clc
sub
xchg
mov
mov
inc
fcoms
xchg
fld
inc
jmp
push
mov
js
sbb
mov
shll
pusha
dec
sub
pushf
jo
adc
js
xor
cmpsb
ss
rcrb
lock
cli
call
pusha
mov
xchg
xchg
ja
outsb
ret
mov
mov
iret
dec
sub
adc
fimuls
push
das
imul
sbb
and
repnz
cltd
adc
jp
lahf
jle
xchg
out
cmp
push
loop
add
sbb
bound
or
pushf
lds
pushf
push
lods
ss
xchg
mov
jno
fimuls
and
inc
push
adc
out
sub
stos
call
adc
adc
jg
jge
and
or
push
les
or
sbb
mov
loope
pop
jns
les
loop
mov
mov
cmpsb
jp
fwait
or
mov
outsb
cmp
mov
mov
mov
jmp
test
call
movsb
ljmp
mov
das
imul
dec
pop
adc
jp
or
int
bound
int3
ds
xchg
mov
inc
fcmovnbe
mov
roll
fildl
mov
xor
int3
cmp
cmp
xchg
add
xor
adc
mov
jne
cmp
cmpsb
std
xor
mov
jl
pop
xor
enter
int
pop
hlt
scas
fistpl
addl
int
and
mov
test
inc
cmc
xchg
icebp
lods
mov
aad
subl
jmp
jae
add
inc
ret
ja
movsl
outsb
test
jmp
jb
fs
test
fdivrl
cwtl
jmp
aam
popa
inc
es
ss
push
insb
cmpsb
add
test
jmp
and
xchg
int3
jge
cwtl
dec
or
push
lock
adc
sbb
sub
sub
cltd
add
inc
xor
stos
out
push
seto
pop
adc
jnp
xorl
xchg
mov
in
loop
nop
jmp
ljmp
pop
pop
xchg
movsb
jmp
call
mov
xor
lods
loopne
je
sbb
popf
notb
or
jge
mov
fsubs
inc
adc
loope
enter
lahf
adc
mov
add
cmp
cmp
mov
shlb
fwait
jl
adc
ficompl
in
jl
jp
jne
xchg
mov
push
testb
jne
pusha
aad
push
or
icebp
imul
sbbl
add
les
pop
lcall
xchg
dec
lods
cmp
jle
jb
iret
mov
jmp
and
jl
push
sbb
cmpsb
daa
or
push
adc
sbb
jb
cmpsb
imul
inc
cld
mov
fisubrl
sbb
push
and
cmp
pop
loope
fsubr
add
rcll
decb
lret
xchg
add
pop
sbb
scas
mov
dec
or
icebp
dec
dec
ror
sub
push
iret
and
push
scas
or
stos
mov
pop
les
mov
adc
ret
leave
xchg
ja
fstl
cmp
fdecstp
pushf
mov
in
mov
je
cmp
dec
in
dec
icebp
mov
dec
aas
lods
xchg
or
outsl
mov
mov
push
cmpsl
lcall
scas
mov
jecxz
xorb
leave
mov
push
scas
fidivl
pushf
xchg
add
cmp
leave
dec
and
mov
call
clc
mov
rcl
xchg
pop
paddsw
adc
cmp
xor
jno
or
or
fildl
jg
mov
cmp
pop
fwait
mov
cmp
and
nop
sub
test
pop
sub
call
aas
daa
push
pop
jns
push
ja
mov
lods
stos
sbb
and
and
jcxz
movb
mov
xor
xchg
pop
insl
push
repz
push
and
fildll
mov
jecxz
inc
mov
shl
xor
xlat
ret
sti
sbb
adc
leave
add
fisubrl
cs
push
lret
fsubrs
add
xchg
jmp
cwtl
jmp
jo
add
jno
inc
mov
dec
mov
jae
mov
mov
aaa
xorl
out
movsl
sub
imul
stos
sbb
addl
fdiv
cmpsb
push
mov
fucomp
inc
shlb
cmc
jnp
push
xrelease
lret
insl
stc
jg
dec
xor
jnp
jno
mulb
add
push
cmp
push
stc
jmp
out
shr
in
adc
adcl
pop
pop
out
dec
out
loopne
xchg
mov
jno
jg
dec
enter
daa
aas
dec
jecxz
inc
imul
mov
outsl
ja
test
ss
movsl
lods
loope
xchg
mov
fucom
fwait
jne
fwait
adc
leave
adc
cmp
jb
and
sarl
sysexit
or
stos
xchg
out
fs
pop
hlt
std
mov
push
repnz
mov
dec
aam
call
inc
stc
loop
pusha
iret
lahf
mov
and
xchg
and
out
xchg
dec
push
inc
stc
out
add
sub
out
jne
add
mov
xchg
insl
push
xchg
inc
cmp
push
pop
fsubp
xchg
rorb
or
jbe
push
into
outsb
and
sub
pop
jns
jmp
cmpsb
js
mov
mov
inc
enter
pop
adc
sbb
int
dec
adc
mov
je
lahf
out
xchg
xchg
add
cmc
iret
test
pop
inc
das
sub
mov
xchg
popa
adc
in
adc
add
pop
adc
push
push
stos
insb
lods
and
push
in
negb
pop
dec
fcompl
rclb
paddsb
aam
arpl
mov
enter
ljmp
ds
mov
pop
adc
dec
fcmovnbe
inc
mov
jb
call
test
sbb
ret
or
mov
sub
insb
ret
cli
mov
cmp
stos
in
jnp
mov
cmp
xor
sbb
push
jmp
fdivrs
add
cmp
pop
xor
pop
lahf
rorb
mov
mov
mov
call
arpl
popa
mov
lods
movsb
cltd
jb
push
or
inc
add
rolb
inc
and
pop
ret
rorb
sbb
adc
ficomps
hlt
and
inc
addb
lcall
pop
pop
cmp
add
mov
or
in
push
gs
mov
jo,pt
in
cs
lea
or
add
daa
lahf
mov
jge
test
and
stos
or
cmp
repnz
sti
adc
add
rorl
sbb
and
inc
shlb
test
push
scas
pop
mov
idivb
std
inc
xor
out
mov
js
xor
lret
or
loop
pop
es
push
inc
mov
mov
mov
dec
bound
mov
out
ds
pop
iret
repnz
repz
jmp
add
mov
popf
push
ds
xlat
jmp
stos
and
bswap
into
and
xor
arpl
mov
cld
test
clc
xchg
loope
mov
cmp
cmc
mov
adc
gs
andl
inc
jg
jo
icebp
js
pop
stos
fcmovb
jno
xlat
jns
dec
imul
jmp
jae
cmc
imul
mov
mov
lock
in
fisttpll
fdivr
pop
das
ret
add
add
push
repz
cs
pop
shll
mov
cmp
sub
dec
and
ljmp
out
imul
aas
dec
jl
clc
cmpsb
pop
insb
xor
pop
aas
nop
call
xor
dec
or
sub
mov
movsl
mov
sub
jmp
mov
cmpsb
cmp
gs
cmp
outsl
test
or
lods
jns
clc
xor
pop
in
repnz
ror
jae
xchg
sub
dec
sub
jmp
mov
cmpsb
cmpsb
in
xlat
push
mov
mov
jmp
and
mov
lret
popf
repnz
je
add
pop
repnz
cwtl
ljmp
push
jne
xor
daa
icebp
in
add
pop
dec
xor
xor
int3
daa
int
sbb
sbb
mov
cli
dec
pavgw
arpl
das
popf
cmp
and
pop
xchg
xchg
scas
mov
hlt
xchg
popa
fwait
push
shll
fs
xor
cmpsb
cmp
adc
cmpsl
or
les
subb
pop
push
jnp
dec
dec
mov
xchg
mov
orl
movsl
popf
mov
lds
bound
jge
sub
inc
outsl
mov
inc
repz
pop
ss
rcrb
mov
rcll
xor
push
je
imul
dec
dec
sbb
fsubrl
xchg
fwait
pop
jmp
enter
in
xor
dec
test
cmpl
cmpl
cmc
pop
dec
cmp
or
jns
dec
sub
js
push
movsl
lods
lods
fstp
stos
dec
sbb
xlat
rorl
ds
push
xor
cmp
stc
mov
add
dec
jo
outsl
lret
leave
xchg
fldt
cmp
movsb
mov
into
push
pushf
imul
leave
cmpsl
inc
adc
pop
xor
lods
xchg
test
xor
push
stos
popa
jp
movsl
lahf
pop
pop
stc
push
shl
push
cmpsb
enter
out
and
push
inc
daa
jb
sbb
test
cwtl
push
ror
ss
or
pop
push
sbb
cmpsl
es
shl
or
or
sub
stos
and
out
xor
push
clc
mov
inc
xor
push
nop
inc
sbb
shlb
push
mov
lret
je
and
ror
call
lea
aas
in
shlb
cmp
adc
lea
inc
je
lahf
mov
jmp
inc
popf
les
pop
out
mov
cwtl
cmpsl
ret
incl
adc
int
cli
pop
mov
inc
fwait
jecxz
jg
insl
mov
adc
sbb
test
clc
sub
sub
jp
xchg
fsubrs
mov
imul
add
hlt
push
or
ljmp
xor
push
xor
jle
sbb
aaa
inc
push
test
idivb
test
cmp
pop
xchg
mov
test
popf
rcrb
insb
aam
shrb
loope
jo
test
mov
push
clc
mov
imul
pop
jg
push
fidivs
or
in
cmp
jg
out
arpl
xor
sub
or
pop
mov
push
std
sub
aam
icebp
add
shrb
out
inc
stos
fnstsw
dec
cli
push
cmp
cs
stos
mov
pop
sbb
xor
hlt
mov
add
mov
jecxz
imul
xor
ljmp
aad
xor
push
in
dec
out
dec
mov
inc
cmc
xor
sub
aaa
sbb
ffreep
or
mov
sub
inc
jg
cmp
faddl
lret
stc
pop
movsb
dec
inc
repz
pop
fisubrs
xlat
inc
rcrl
aad
inc
pop
into
sbb
stc
dec
lret
out
out
std
lret
xchg
lahf
dec
xchg
fists
or
push
push
pushl
push
cmpb
jno
dec
in
je
jmp
mov
iret
and
enter
cmp
cmc
pop
mov
aam
cmovne
icebp
addr16
jnp
or
sti
push
push
sub
bound
int
leave
shrl
mov
sarb
jge
mov
cmp
push
sub
stc
addb
loop
mov
jb
psrld
and
jle
xchg
mov
xchg
jge
add
mov
sbb
push
repz
xchg
sbb
adc
ror
dec
ss
stos
lods
fmuls
cmp
lock
inc
insl
push
sbb
rcll
orb
loop
lds
xor
loope
push
leave
sub
push
scas
lds
inc
mov
jb
and
and
lea
lods
xor
mov
jbe
shl
leave
cmp
jo
test
jmp
push
ret
lahf
popa
adc
fmul
or
mov
pop
out
mov
add
sbb
out
outsb
and
bound
mov
pop
jp
xchg
jbe
das
xchg
fwait
xchg
sahf
scas
shrl
cmpsb
rcr
add
fstps
pop
jbe
push
mov
push
cltd
xchg
push
outsb
lret
sub
jge
mov
addb
into
inc
push
mov
xchg
arpl
sbb
arpl
dec
mov
dec
dec
leave
push
mov
lea
pop
add
aad
mov
aam
in
jbe
sub
cmpsb
mov
cmp
lcall
pop
lea
or
push
and
std
int3
scas
je
icebp
lea
xchg
rorl
pop
and
mov
mov
jbe
rcl
pop
imul
mov
lods
gs
adc
sbb
sahf
imul
jmp
push
pop
std
pop
mov
pop
dec
push
dec
cs
pusha
repz
mov
inc
adc
push
mov
xchg
bound
jo
cltd
xor
fdivr
loope
pop
adc
mov
test
addr16
pop
jne
sub
lock
fdivrl
mov
jp
and
sub
cmp
xchg
cmpb
dec
dec
xchg
insl
pop
rcrb
out
test
ljmp
mov
mov
mov
ffreep
mov
out
les
jmp
lahf
ret
adc
aam
pop
xorl
call
xor
push
cld
out
adc
fiadds
movsl
mov
fwait
mov
push
out
test
cmp
fldl
mov
inc
out
cmc
popl
adc
xor
fisttpll
aas
cwtl
or
dec
stos
sub
ret
xchg
pop
rcrb
mov
cmp
xchg
into
gs
jle
adc
aad
push
mov
imul
outsl
das
repnz
in
jae
mov
in
or
sub
popf
fstpl
xor
inc
xor
icebp
pop
and
out
mov
jg
lds
adc
and
test
scas
rol
stos
mov
imul
test
fisttpl
add
dec
stc
mov
cmp
inc
pop
and
lcall
into
mov
ret
xchg
cmc
inc
adc
jl
mov
sbb
mov
shrb
pushl
fwait
xor
and
cld
fcomps
dec
mov
cs
or
mov
mov
pop
rcrb
loop
pop
push
ret
icebp
aas
push
inc
or
fdivrl
out
ret
shrb
icebp
out
ret
adc
gs
sbb
movsb
adcl
or
aam
shr
cltd
jo
xchg
cmp
mov
pop
inc
inc
out
pusha
and
jne
js
and
mov
jb
adc
or
out
xchg
jmp
loopne
and
xchg
out
sbb
pop
sbb
pop
lahf
ret
sub
xlat
adc
andb
inc
adc
jae
lods
jae
scas
movsl
pushf
inc
cs
test
push
fwait
push
loopne
insl
add
push
sbb
and
push
xor
jne
dec
jnp
inc
add
lahf
rcrb
bound
pushl
pop
pop
push
popa
xor
out
stos
orl
xchg
popf
arpl
cltd
outsl
stos
jne
pushf
negb
std
mov
in
dec
sahf
ss
aad
sarb
jmp
sbbb
and
mov
out
adc
movsb
or
mov
ret
push
jp
icebp
xlat
test
mov
mov
add
pushf
dec
cmp
repz
inc
hlt
jbe
int3
lods
cmp
scas
test
xchg
into
pop
cltd
sti
xor
sub
dec
cltd
dec
enter
mov
call
jne
fsubrs
mov
in
frstor
int
fadd
hlt
inc
pop
adc
jle
je
inc
push
cmp
jmp
or
mov
jbe
push
jle
pop
adc
and
dec
add
flds
jle
lret
adc
dec
shld
lahf
mov
mov
fidivrs
or
mov
add
pushf
in
dec
leave
lock
fstl
cmp
push
loopne
test
das
mov
xor
lret
fwait
xchg
movsl
jns
mov
push
xor
test
and
pop
fists
dec
rcrb
jge
inc
cmp
and
adc
mov
pop
jns
in
xchg
push
cmpsb
das
mov
mov
testb
aas
or
fstpt
scas
mov
mov
daa
sbbl
mov
dec
outsb
fs
popa
mov
mov
sahf
and
mov
fildl
sbb
int
sbb
stos
int
das
cmpsl
fisubl
and
lret
fdivp
lcall
divb
jbe
xor
dec
inc
movsb
scas
hlt
andb
in
mov
mov
call
imulb
lcall
ficomps
cmp
or
push
inc
enter
in
arpl
or
adc
mov
mov
insb
cs
xor
lahf
aaa
pop
or
imul
fistl
push
repz
jle
add
test
mov
addr16
aad
cs
out
push
inc
sbb
lret
add
push
cmp
mov
jne
imul
lea
or
mov
out
int3
mov
xor
push
jp
jmp
pop
xchg
sbb
xchg
lret
stos
add
jb
add
orl
dec
into
inc
lret
sub
and
jae
shll
div
xor
icebp
jp
mov
in
xchg
jae
stc
cmp
jo
pop
mov
xor
out
or
mov
std
jmp
mov
pop
lods
leave
mov
movsl
addb
push
dec
lea
fildl
adc
xor
push
sbb
lcall
mov
loopne
icebp
popf
push
hlt
cltd
inc
mov
mov
jo
sub
adc
xchg
inc
xchg
jle
enter
jg
arpl
cs
pop
dec
imul
sbb
xor
xor
pop
or
lds
or
push
stos
or
fldl
dec
aad
sti
loopne
cmp
sar
das
fistl
dec
add
dec
lea
sbb
mov
xchg
mov
mov
cltd
push
fisubl
dec
xor
fmull
mov
xor
pop
mov
cld
jge
pop
pop
mov
dec
gs
ret
lcall
xchg
add
pop
push
aaa
adc
mov
adc
dec
test
mov
andb
pop
mov
mov
outsb
mov
idiv
push
push
sbb
int3
aad
inc
fistpl
bound
ja
fadd
adc
popa
adcb
in
push
dec
or
mov
push
shll
lret
xchg
adc
shl
gs
fwait
shll
dec
lock
jnp
rorl
dec
rcr
pop
dec
lret
add
mov
sub
mov
out
push
mov
mov
sbb
out
inc
fs
xor
mov
cmpsb
inc
cmp
in
aaa
xlat
sub
and
lods
lret
sti
push
fstl
icebp
popf
and
mov
inc
pop
nop
clc
xor
sub
adc
xchg
pop
push
sti
or
ljmp
int
je
add
lods
push
cmc
cmpsl
xor
xor
clc
lret
cwtl
adc
xchg
inc
lcall
adc
pop
mov
iret
xor
mov
insl
adc
movsl
imul
mov
enter
repz
insl
test
and
adc
lcall
es
sbb
addr16
bswap
xlat
lods
add
mov
fidivrs
arpl
cmc
dec
cmp
or
xor
jns
sub
cmp
imul
ret
adc
lock
jmp
dec
lahf
inc
gs
add
cmp
adc
fists
insl
cli
movsb
sbb
pop
xchg
sbb
inc
mov
je
sbb
and
pushf
arpl
fidivl
cs
pop
movsb
jle
lds
popa
movsl
inc
sub
fbld
imull
ficompl
adc
fldcw
jmp
add
fldcw
inc
jo
sbb
push
inc
jp
push
movb
lock
sub
sbb
lods
int
ficoml
les
sbb
push
push
adc
aam
xchg
decb
bound
fnsave
into
add
rep
loopne
popf
fucomi
push
add
sub
lods
inc
pop
ret
and
mov
pop
hlt
addr16
mov
mov
sub
dec
shr
mov
mov
push
jae
movsl
aam
lret
cltd
and
inc
mov
pop
mov
push
mov
mov
out
ja
fwait
push
adc
pushf
xor
push
sbb
addl
daa
mov
je
add
insl
aam
adc
cld
sub
pusha
orl
sub
adc
push
inc
in
jge
inc
rcll
imul
and
lea
pop
add
cld
hlt
and
adc
int
in
jno
mov
push
dec
shrb
jp
inc
xchg
enter
pop
push
imul
sti
sahf
dec
out
dec
xor
pop
cmp
enter
mov
cmpl
mov
dec
daa
dec
cmp
pop
or
pop
cmpb
stos
fistps
and
push
xchg
or
dec
dec
pusha
les
xchg
pushf
xchg
adc
adc
icebp
sbb
sub
les
nop
aas
test
clc
aad
push
jle
inc
rorb
cmp
outsb
ss
in
xchg
orps
or
aaa
cmovb
jb
cwtl
lret
cmp
in
mov
cmp
aad
lods
fsub
in
daa
jae
adc
or
inc
and
fildl
repnz
fnstcw
pop
push
aas
add
stc
aam
mov
push
push
add
add
cmc
push
push
mov
pusha
insb
add
xor
sarl
scas
sub
test
sahf
stc
sub
xchg
leave
fisttpll
lods
and
insb
push
and
add
mov
rcl
inc
push
mov
idivl
pop
lods
es
fidivrs
lret
mov
mov
dec
sbb
adc
pop
lcall
jl
adc
mov
push
and
nop
xchg
mov
fmull
insb
xchg
aam
leave
sub
insb
jns
mov
pop
mov
add
pop
call
incl
clc
mov
mov
popa
jne
or
xor
scas
int3
or
das
fdivs
movsb
ja
in
mov
loope
mov
pop
xchg
adcb
cmp
out
jle
outsb
fwait
iret
push
pop
mov
mov
cmp
mov
ret
je
mov
lds
xchg
inc
jnp
test
mov
sbb
addr16
push
sbb
hlt
mov
sub
lods
xchg
adc
test
je
aad
jnp
mov
jl
xor
jb
adc
jns
mov
cs
inc
cs
push
lret
or
movsl
xchg
add
insl
jb
xchg
jbe
cmp
pop
into
out
mov
sbb
test
mov
pxor
iret
shlb
addr16
mov
pop
fwait
add
jne
mov
dec
das
push
out
test
pop
and
push
dec
movsb
sahf
adc
out
shll
xlat
dec
shll
mov
fdivr
in
rcrb
mov
xor
sbb
ja
call
scas
or
cmc
test
cmpsb
in
fcmove
pop
sti
dec
sbb
and
jp
pop
inc
xchg
jns
add
push
xor
movsl
mov
sbb
xbegin
inc
es
ljmp
mov
and
test
in
scas
jl
mov
fimull
call
out
lds
aaa
fcomps
cli
insl
pop
repnz
test
scas
xor
inc
adc
push
mov
movsb
mov
fcom
out
and
mov
sti
mov
ljmp
jl
add
lds
sahf
mov
add
stos
pop
dec
mov
into
jmp
adc
sbb
pop
or
dec
sbb
es
sbb
pop
mov
or
fdiv
les
push
jb
lods
loope
lods
dec
fcoms
jecxz
imul
std
push
movsb
mov
mov
scas
sti
mov
and
call
mov
sbb
insl
arpl
loopne
lock
outsb
pop
out
dec
cltd
lods
into
jb
inc
jecxz
mov
inc
negl
ss
xchg
out
mov
add
out
jae
xchg
cmc
mov
jmp
shlb
outsl
insb
lahf
insb
sbb
push
mov
gs
mov
sub
pushf
sahf
inc
or
jns
inc
mov
mov
push
movsl
xor
jecxz
or
stc
enter
add
jae
mov
cmp
ret
push
fs
mov
sub
sbb
jae
out
pop
mov
fdivs
jl
lcall
jo
popa
cs
lock
inc
mov
sub
lahf
clc
leave
inc
push
xor
ja
mov
rcrb
sahf
and
mov
cmpsw
lret
mov
pop
sbb
clc
push
push
cmp
and
out
xlat
jge
imul
xlat
test
movsb
pop
lods
hlt
xchg
xor
imulb
add
pop
out
xchg
stos
loop
add
or
jnp
adc
scas
add
mov
mov
cmp
cli
dec
sub
int3
icebp
leave
push
adc
outsl
stos
insl
mov
fnsave
int3
pop
int3
data16
pushf
lock
outsb
xor
ret
add
rcll
push
inc
int3
adc
mov
aad
mov
push
mov
xor
sbb
inc
daa
xor
jmp
adc
mov
jb
xor
and
xchg
das
call
cmp
aam
mov
push
test
imul
push
inc
cmp
mov
push
fs
jle
push
sbb
andl
pop
fucomi
lret
outsl
cs
outsl
pop
out
pop
or
addr16
imul
rol
lods
cmp
not
dec
lds
xor
inc
and
xchg
xchg
out
jmp
rcrb
xchg
mov
lds
cmp
or
scas
jno
fwait
inc
fwait
movsb
mov
jg
repnz
aas
mov
xchg
pop
jnp
cmp
int3
inc
inc
lock
dec
in
xchg
xchg
add
scas
lret
pop
int
into
dec
std
jb
or
sub
inc
shr
in
jle
repz
lahf
cmp
cmp
and
mov
cmp
sti
leave
repz
sub
jne
adc
in
cmc
inc
aad
push
bound
add
stos
mov
adc
add
icebp
into
adc
push
push
fidivl
xchg
in
out
insb
iret
mov
add
call
push
and
mov
orl
movsl
lcall
aad
insb
mov
call
lret
iret
add
outsl
add
cli
pop
scas
sub
out
xor
fxch
pop
stc
call
xchg
lcall
push
cltd
mov
mov
jp
adcl
add
dec
clc
pusha
adc
icebp
jbe
outsl
rolb
mov
adc
sub
cmp
bound
in
idivl
cmp
xchg
loopne
xchg
in
push
daa
xchg
push
jbe
xchg
outsb
leave
xchg
dec
dec
sub
sbb
nop
xor
ds
xchg
or
jmp
sbb
lock
cmp
mov
out
pop
in
fcmovne
push
hlt
repz
inc
pop
xchg
cmc
test
stos
mov
jecxz
in
ljmp
push
in
adc
mov
mov
cmp
inc
inc
sbb
mov
mov
mov
es
lret
sub
cld
xlat
xor
rcrl
mov
popa
push
icebp
or
or
pop
jns
xorb
fcmovnu
push
and
and
and
dec
cmpsb
pop
fisttpll
pop
add
cmp
int
mov
sub
sub
lea
out
movb
adc
dec
push
push
dec
xchg
shll
push
mov
fsubl
or
pop
je
popa
in
bound
push
mov
enter
push
ja
xchg
add
adc
or
pop
push
insb
loope
adc
mov
jb
ljmp
add
and
ret
sbb
sub
lock
call
pop
test
arpl
outsb
adc
and
loope
sbb
stos
fdivs
jbe
push
mov
xor
pop
lods
das
adc
mov
sbb
fnstsw
aad
xor
lods
imul
addr16
lds
xor
adc
xor
imul
movsl
xchg
cmp
push
inc
pop
pop
pop
ljmp
add
out
addr16
xchg
sarb
dec
push
add
sub
loope
cmpsb
pop
sbb
or
lahf
and
add
loop
stos
int
stos
xlat
arpl
ljmp
sub
adc
leave
dec
dec
or
les
jp
inc
std
dec
cld
mov
or
mov
es
lods
test
cmpsl
pop
mov
leave
pop
xor
mov
cld
dec
and
ja
xchg
adc
ja
push
mov
sub
mov
cmp
bound
jae
imul
mov
popf
call
in
arpl
es
insl
repz
test
test
xor
aaa
icebp
jg
es
lods
dec
out
repz
faddl
push
xor
dec
jle
shrl
push
fimull
adc
dec
pop
lods
cmc
shll
and
dec
adc
inc
lcall
outsl
mov
jle
lock
xor
cmpb
lods
lds
jne
push
lret
dec
sbb
lock
sbb
outsl
adc
lret
fistps
and
cmp
push
xchg
sti
add
aaa
xorl
fimuls
dec
mov
fwait
stos
ret
das
pusha
push
jle
dec
jb
sahf
push
xchg
sbb
xchg
ja
cs
sub
or
inc
inc
insb
lods
push
ljmp
ret
test
stc
xor
push
mov
jge
aaa
sti
faddl
ret
fldenv
scas
mov
pop
out
and
mov
ljmp
popa
jbe
mov
xor
out
stos
mov
jo
dec
out
outsb
mov
mov
jle
loop
cmovl
push
imul
dec
jmp
push
popa
shlb
aaa
out
jb
popa
test
lds
mov
inc
jmp
jp
xor
mov
dec
jne
lods
lods
push
add
in
mov
jl
push
test
mov
inc
subl
pop
sbb
lahf
mov
insl
jmp
mov
cmp
std
xchg
rcl
lahf
dec
es
and
fldenv
test
dec
insb
inc
cmp
lret
push
xchg
das
sbb
and
push
xor
ret
cs
shrl
mov
cld
adc
fldcw
pop
add
inc
into
addl
scas
subl
outsb
sti
loopne
mov
push
mov
es
sbb
mov
jne
sub
outsl
jge
fnstsw
mov
inc
jmp
sti
loope
jle
mov
int
fisttpll
pop
ret
sbb
xchg
rcl
jle
or
imul
sbb
inc
jmp
lea
push
mov
add
mov
clc
lea
dec
xchg
push
sub
inc
add
jb
iret
mov
out
add
jbe
push
inc
shlb
jle
xchg
xor
jmp
out
fisubl
pop
andl
inc
add
or
lock
movsl
inc
ret
cmp
roll
popa
sbb
inc
cmp
jbe
sub
pop
pop
fcoms
icebp
and
add
cld
repnz
add
in
insb
lds
xor
leave
in
mov
pop
movl
aaa
push
mov
mov
dec
xor
sti
sub
jp
addr16
test
pop
xor
insl
aaa
push
inc
xchg
fdiv
insl
ss
mov
pop
call
dec
mov
lock
leave
mov
pop
shlb
hlt
nop
pop
xlat
aad
pop
mov
mov
scas
jge
cmpsl
jmp
shrb
cmpsb
fwait
mov
mov
idivl
jmp
mov
push
inc
jl
aaa
daa
pop
xor
push
mov
rcll
imul
cmp
xor
stos
adc
lods
enter
jmp
mov
adc
inc
jne
lock
mov
test
push
push
xchg
ljmp
loope
xchg
ret
add
mov
scas
cmp
push
xchg
mov
rorl
xchg
and
negl
push
inc
jbe
es
repnz
arpl
mov
cs
inc
je
daa
inc
int3
stos
mov
cs
inc
jle
cs
imul
cmpsl
insb
les
xchg
jl
cs
inc
sbb
inc
pop
jne
sbb
inc
cld
imul
adc
push
fwait
movsl
lahf
add
mov
jle
sub
jge
into
or
in
xor
ds
popf
aas
int
jb
xor
adc
add
aam
xchg
adcl
sbb
mov
cmp
movsb
cmp
mov
dec
in
aad
inc
mov
add
data16
orl
stos
push
mov
pop
pop
mov
cmp
shl
inc
jmp
and
out
insl
insb
ss
leave
jmp
sbb
fisttpll
xor
fdivs
je
fcmovne
push
push
js
loope
mov
insl
pop
sub
adc
cmpsb
and
rolb
das
pusha
mov
and
fcomps
push
adc
push
sti
mov
cltd
cmpsb
pop
push
mov
or
adc
add
inc
mov
cmpsb
pop
js
addr16
pop
out
dec
int3
imul
mov
inc
cld
pop
sbb
mov
fmull
push
js
das
adc
xchg
add
and
fcomps
jae
vcmppd
mov
jns
inc
and
sbbb
dec
and
sub
cmp
test
adc
fstps
call
les
xchg
cmp
mov
push
pop
dec
aas
jns
lea
loope
add
mov
pop
insb
test
dec
sbb
cmp
mov
sbb
dec
rorb
push
mov
ret
jnp
dec
push
je
sbb
in
add
sub
push
test
imul
cmpsl
jmp
and
loop
mov
dec
mov
xor
stos
mov
sbb
xor
cmp
lds
lret
pop
add
loope
mov
arpl
outsb
inc
sqrtps
sti
jp
sub
loope
inc
pop
fldl
push
ret
nop
cmp
mov
cmp
push
sbb
aaa
out
addr16
stos
mov
or
cmpsl
fisttpl
call
mov
jns
and
shll
ret
adc
sbb
popa
xchg
arpl
inc
sub
ja
popa
adc
insl
cmp
pop
xor
movb
add
xchg
pop
leave
nop
or
push
mov
push
and
dec
into
mul
popf
repnz
bound
arpl
shll
xchg
mov
stc
jle
xor
fisttpll
dec
push
cmpsl
fsts
call
mov
sahf
xor
pop
ret
lods
jbe
cmpsb
mov
out
dec
stc
fstl
mov
jge
xchg
push
lods
jl
icebp
jo
out
stos
rclb
nop
add
jb
inc
xor
js
dec
int
sbb
push
jo
cmp
inc
pop
adc
ds
es
sarl
sub
out
dec
cltd
jle
dec
mov
enter
adc
das
sbb
xor
mov
in
mov
cld
mov
outsl
cmp
jnp
in
addr16
pop
mov
std
inc
mov
push
lcall
dec
jno
mov
mov
xchg
repnz
imul
das
mov
ret
mov
imul
aad
outsl
sbb
sbb
loope
push
xor
data16
mov
test
les
sub
jmp
insb
je
rcll
xor
inc
sbb
inc
dec
push
add
das
jae
push
fdivl
pop
push
mov
or
mov
mov
inc
arpl
data16
sbb
mov
test
int3
cmc
jnp
push
ret
arpl
push
inc
cltd
cwtl
mov
add
pop
les
les
aad
inc
sbbb
lea
inc
cmp
add
pop
and
dec
xchg
or
inc
cmp
or
jle
outsl
ret
into
mov
inc
xor
mov
pop
push
inc
in
shll
jb
xor
mov
ds
mov
dec
adc
xchg
lcall
cmpsb
mov
xchg
mov
mov
xchg
adc
push
ja
xchg
mov
in
scas
push
aaa
sub
iret
mov
popa
inc
push
adc
mov
mov
mov
into
arpl
push
in
push
pop
sahf
xchg
push
cwtl
or
lods
adc
inc
sub
xchg
das
roll
mov
add
out
ret
cmp
xor
mov
cli
icebp
mov
fs
mov
xchg
loopne
push
shll
adc
jle
sub
jmp
clc
subb
imul
dec
cmpsb
int3
or
cltd
push
das
aaa
jns
mov
test
loop
outsb
xchg
pusha
in
xor
jg
stos
mov
mov
push
iret
fiadds
stos
cmpsb
adc
ret
out
pop
cmp
xor
mov
cmpb
insl
mov
out
sarb
xor
lcall
cwtl
leave
int3
cmpsl
jp
imul
clc
adc
pusha
pop
jo
cmp
jae
add
call
sub
sbb
out
sbb
test
addb
xchg
mov
shll
adc
add
sbbl
xor
add
cmpsl
jecxz
pop
lret
imul
xlat
mov
aaa
ja
lods
push
jbe
inc
outsl
mov
inc
fcompl
jl
sbb
jbe
sub
or
and
aad
int3
addr16
lea
and
lret
shll
mov
fcmovb
inc
add
ljmp
xchg
inc
pop
jmp
dec
jecxz
pop
rcrl
jne
lods
lahf
sahf
outsl
and
xor
lods
ss
push
test
and
popa
mov
push
ljmp
sbb
test
nop
shll
jecxz
jno
cmpsl
sbb
sbb
jns
in
inc
pop
adcb
dec
xchg
xor
xor
out
out
inc
mov
xchg
fists
mov
or
ss
xchg
mov
enter
sub
jno
sbb
movsb
adc
pop
mov
mov
jns
out
mov
cmp
andl
mov
rcrl
add
jno
add
mov
ljmp
arpl
xor
cmpsl
enter
and
aad
sarl
pop
xor
dec
sbb
js
xor
mov
push
std
stos
xchg
data16
pusha
fdiv
lea
repz
dec
sub
xor
test
jg
decl
std
xor
jne
pmaxub
pusha
aaa
sbbl
pop
adc
xor
pop
cmp
jge
mov
fldl
dec
mov
mov
mov
mov
sbb
dec
push
ds
xchg
jmp
mov
scas
lods
scas
mov
lret
outsl
sarl
xor
and
xor
and
sbbl
test
push
mov
fnstenv
test
lret
test
cmp
mov
popa
lahf
andl
push
fs
inc
pop
jbe
and
in
or
dec
mov
fisttpll
mov
push
sbb
subl
in
and
cli
pop
xchg
mov
rolb
jle
or
mov
or
sti
mov
pop
fnstcw
loop
stos
push
int3
mov
aas
push
push
push
xchg
bound
pop
jl
push
jge
jb
mov
cli
mov
bswap
loopne
fwait
loopne
mov
cmpsl
cmpsb
out
rclb
cli
call
mov
mulb
xchg
and
es
out
sbb
nop
je
cmp
jp
xchg
mov
rcrb
pusha
ret
xchg
mov
adc
test
ds
sbb
bound
mov
sbb
add
push
push
pop
dec
mov
dec
xchg
inc
lcall
inc
xchg
push
cmp
xor
jmp
es
pop
push
mov
int3
jg
in
push
mov
add
xor
shlb
icebp
ss
mov
movsl
adc
xor
xchg
and
jmp
lods
mov
dec
push
mov
mov
loopne
out
ja
push
cmpsl
loope
inc
stos
cmp
sub
mov
pop
adc
shll
hlt
dec
subb
cmpsl
sbb
jp
push
daa
adc
add
push
addr16
or
ja
icebp
sub
push
cmp
pop
xchg
mov
mov
or
pop
sbb
movsb
pop
add
adc
ret
adc
div
xchg
cld
out
ret
jmp
scas
fwait
xchg
lea
decb
out
scas
add
lahf
dec
sub
out
jne
jge
mov
or
dec
and
push
cltd
out
repnz
dec
dec
test
scas
sbb
mov
pop
stos
mov
ret
mov
ja
aas
cmpl
loop
push
sahf
pop
test
jne
mov
arpl
and
lahf
pop
xchg
jnp
push
push
fwait
dec
push
jle
fwait
aas
add
cmpsb
inc
xchg
mov
mov
fiadds
jnp
mov
and
fldl
lahf
xchg
movsl
dec
iret
gs
inc
outsl
test
bound
testl
mov
xor
punpcklbw
aaa
cmp
inc
ss
sarl
test
ficoml
push
outsb
test
ljmp
add
dec
adc
shld
loopne
or
jp
test
push
mov
mov
adc
mov
push
inc
mov
pop
scas
sarl
testb
test
std
cmpsl
popa
divl
lret
or
gs
lods
loop
jmp
dec
ja
leave
xchg
stos
jnp
cmpsl
push
int
pop
adc
fwait
rolb
stos
inc
push
jge
cltd
xor
xchg
sbb
sub
in
ret
push
ret
inc
fnstsw
sahf
fistps
ja
and
and
cmp
adc
push
pushf
or
test
daa
sbb
int
jbe
dec
adc
iret
xchg
mov
insb
sti
mov
mov
hlt
outsb
jae
jp
test
fwait
inc
mov
sbb
and
xchg
add
fstl
pop
and
movsb
fcompl
les
clc
dec
or
lahf
mov
test
mov
sub
inc
jecxz
add
gs
cmp
sbb
xlat
or
aam
es
mov
sbb
ljmp
shrb
test
mov
fiadds
in
add
cmpl
cmp
aas
xchg
fnsave
iret
sbb
repz
pop
shr
pop
cltd
fimull
cmpsb
sbb
jbe
sbb
adc
add
insl
xchg
mov
cltd
mov
std
cmp
mov
out
lret
je
sarb
aaa
xchg
mov
ss
jo
jns
mov
sub
pop
call
or
pop
sbb
stos
xchg
aam
xchg
mov
push
test
rcll
sbb
lahf
adc
cmp
xchg
jno
outsb
sub
das
mov
or
mov
stc
and
clc
mov
sbb
cmc
dec
lods
jbe
imul
xor
ds
loope
in
sarl
fucomi
cli
dec
in
xor
push
loop
adc
or
and
fstps
cld
mov
imul
je
jne
push
add
and
dec
jmp
fdivrl
mov
xor
vmovsd
pop
lods
jno
mov
mov
sbb
lods
ss
xor
test
sub
xchg
rclb
mov
adc
adc
stos
push
jno
stos
cltd
cmp
sub
je
dec
or
js
and
pop
pop
mov
and
pop
mov
scas
mov
cmp
insb
or
inc
lock
cld
jns
dec
sti
arpl
hlt
or
push
dec
xchg
add
call
cmc
adc
out
inc
scas
cmpsl
ficoml
mov
scas
pop
push
das
cmp
inc
das
jo
test
mov
dec
enter
and
sub
leave
sub
bound
cmp
cmp
int
mov
xchg
inc
and
fidivrs
decb
lock
xchg
adc
xchg
jmp
lahf
or
mov
or
xlat
add
cmp
jp
add
ds
cmc
out
ret
mov
sbb
bound
ljmp
fmuls
pop
adc
mov
push
iret
ret
or
or
rcr
inc
pop
adc
aaa
scas
ljmp
push
mov
push
push
cmpl
push
jae
inc
cmp
pop
lods
and
imul
fwait
adc
push
daa
lea
enter
add
sbb
push
adc
xor
mov
addr16
fisttpll
adc
and
shl
mov
pusha
rcll
out
jo
loop
jno
push
outsl
repz
cmpsl
pop
or
push
xor
or
inc
push
call
mov
divl
cmp
jecxz
cmp
sub
sub
sarb
or
adc
gs
loope
push
out
movsb
mov
xor
xchg
cmp
outsl
inc
push
push
jne
mov
push
sub
cmpsl
mov
add
xchg
sahf
int3
sub
jnp
fcoms
ffreep
dec
adc
js
xor
leave
adc
ljmp
out
orb
test
inc
scas
push
sub
rcrb
fwait
gs
inc
jge
fdivs
cmc
ret
movsl
lods
xor
dec
xor
push
dec
push
shrl
sti
pop
and
cmpsb
jp
fistps
and
out
scas
cmpsb
push
ficomps
mov
or
and
cli
and
mov
jno
and
bound
xlat
rolb
stos
je
xorl
pop
ret
pop
in
inc
in
mov
ja
or
inc
rcrb
jb
push
add
lds
jle
outsl
dec
ret
adc
xor
popa
iret
xchg
pusha
fwait
stos
or
pushf
std
rcrl
ds
filds
adc
rol
xor
add
lahf
repnz
add
cmpsb
outsb
jecxz
add
dec
sbb
fnstsw
sbb
pop
and
cmc
pop
cmp
popa
stos
xchg
xor
sub
dec
cli
inc
xchg
mov
and
cmpsl
addb
mov
icebp
mov
push
cmc
mov
int
jb
mov
pop
lret
cmp
pop
and
jns
repz
jg
dec
push
jecxz
cmc
les
dec
mov
orl
cmc
add
or
adc
orb
pop
into
mov
push
or
scas
setle
xchg
pop
iret
sbb
jae
xor
jge
pop
push
ljmp
push
outsb
dec
push
daa
sahf
jg
mov
pop
ret
das
lcall
pop
jecxz
mov
push
lahf
mov
mov
mov
fnstcw
and
push
stos
out
mov
or
inc
adc
lds
lods
mov
cmpsb
push
out
movsb
inc
mov
sbb
dec
rsqrtps
ret
popw
mov
push
xchg
inc
cmp
scas
add
fisubrl
xchg
in
cmpsb
pusha
enter
loope
adc
popa
mov
divl
and
popf
jnp
mov
sub
jge
stos
js
mov
cwtl
in
mov
xor
lret
outsl
adc
dec
mov
pop
jbe
dec
mov
and
or
movsb
and
cmpl
cli
insb
dec
jnp
outsb
dec
xchg
push
pop
jmp
or
add
enter
pusha
dec
push
xchg
or
cmc
inc
push
pop
loope
in
inc
and
dec
shrl
add
jecxz
ds
inc
dec
sbb
dec
or
enter
mov
add
lret
decb
stos
inc
jmp
decb
mov
and
hlt
mov
mov
cmc
push
in
lock
adc
ljmp
test
outsb
out
movsl
inc
or
popf
and
fcomi
cmp
lods
std
out
jbe
in
xchg
mov
pop
adc
mov
test
inc
adc
in
pushf
add
lahf
sbb
mov
outsb
sbb
dec
pop
popf
mov
stos
and
and
pop
push
xchg
xchg
sub
xor
mov
mov
inc
or
arpl
xchg
fmull
aad
rclb
ret
fistl
mov
out
in
sbbb
lea
jns
cwtl
lea
jecxz
dec
es
idivl
jmp
mov
lcall
daa
cmp
filds
xchg
jbe
inc
xchg
dec
shrb
fisttpl
cwtl
mov
mov
stos
lret
jge
daa
push
addr16
cmc
mov
inc
push
sub
shrl
sub
cmpsb
sub
sub
dec
and
push
jno
movsl
mov
lds
insb
pop
int
stos
mov
push
jp
or
sub
movsl
mov
jno
xor
lret
cltd
pop
jecxz
cwtl
jns
dec
mov
mov
cwtl
aad
cld
das
xor
and
aam
dec
imul
in
push
mov
sbb
ret
xchg
cmp
push
ds
jecxz
jge
test
jns
scas
fwait
test
test
xchg
js
inc
ds
xchg
push
push
test
or
fnstsw
jns
in
adc
dec
fists
nop
sahf
dec
mov
stc
jmp
stc
int
jae
repnz
shrb
cmp
popa
pop
jo
repz
inc
ljmp
push
idivl
negb
adc
mov
inc
mov
sahf
mov
imul
lcall
xchg
ret
lea
jbe
nop
lea
pop
mov
mov
xchg
in
mov
lds
dec
sbb
mov
cmpsl
dec
orb
movsl
cmp
push
cld
sbb
mov
add
test
mov
mov
pop
xlat
mov
shrb
push
ss
mov
call
push
lret
cli
fadds
out
popa
aas
lcall
push
lahf
popf
adc
arpl
add
mov
int
cmpsb
mov
jge
fnstenv
jo
lods
sbb
mov
jg
sub
test
and
mov
sbb
push
daa
xor
mov
push
pop
adc
lods
add
or
into
nop
pop
mull
and
jl
sub
push
and
data16
sbb
adc
push
sbb
add
push
lcall
out
jg
xchg
gs
inc
or
xchg
mov
lds
insl
sbbb
out
call
xchg
in
mov
xor
or
fcompl
xchg
cs
xchg
push
xor
jb
ja
mov
mov
ret
aaa
jecxz
xlat
daa
bound
outsb
push
and
pusha
cmp
movsl
push
adc
imul
or
mov
fucomi
cmp
cli
cli
call
dec
popf
in
sub
popa
pop
in
les
out
fstpt
jp
inc
repz
pop
mov
stos
adc
xchg
xor
stos
popf
add
push
fdivrl
push
int3
xor
push
mov
popa
jno
fisttpl
dec
jae
outsb
leave
sub
es
shrb
and
pop
loop
fcmovnb
xchg
neg
sub
testl
lds
lea
arpl
test
pusha
or
add
cld
xlat
mov
aad
dec
callw
in
lds
mov
nop
data16
mov
xchg
test
push
aaa
popa
adc
mov
dec
cltd
push
sbb
sub
mov
or
jae
stc
jp
cmpsl
inc
addr16
in
aas
ja
adc
cmpsl
fmul
push
add
adc
add
inc
add
sub
xlat
jp
xor
loopne
jne
lret
dec
repz
hlt
jo
test
repnz
mov
fmull
fmul
mov
int3
mov
jp
test
jns
mov
jno
inc
push
pop
cmpsb
out
enter
and
imul
shlb
insl
pop
cli
inc
cmpl
mov
and
js
rcrb
inc
scas
inc
fcmove
addr16
and
cmp
jne
ret
incl
fimull
pop
fiadds
jbe
sbb
scas
sahf
pop
fldl
icebp
pop
add
xchg
and
mulb
push
pop
xor
lahf
sbb
daa
xchg
jle
jmp
xchg
xor
fimuls
ljmp
jle
inc
sub
repnz
popf
cmpsb
sub
je
fbld
sbb
inc
jmp
int
dec
sbb
xchg
and
cmpsb
pusha
cmpsb
jnp
cmp
inc
ret
jecxz
dec
lret
pop
xor
idivl
lods
push
push
aam
push
fsubrl
lds
aam
mov
aaa
sub
pop
or
insl
movl
lods
inc
mov
sub
sbb
pushf
movl
icebp
ljmp
sub
hlt
pop
sub
cmp
xchg
cmpsb
out
pop
push
enter
sbb
mov
sub
mov
lea
sub
fsub
test
clc
fimuls
cmp
int3
out
scas
jge
sbb
sbb
mov
jle
clc
jl
jle
ljmp
fs
loop
pop
dec
imull
inc
mov
mov
xchg
sarl
xchg
jle
lea
movsb
adc
cld
daa
sub
fisttpll
ret
mov
sahf
stos
addr16
test
push
or
xchg
aaa
shrl
test
and
sbb
rcr
push
loopne
xchg
xor
sub
inc
push
pop
jl
je
out
les
sahf
cmp
pop
add
inc
adc
fs
mov
jge
into
scas
pusha
sub
ret
pushf
iret
or
pop
xchg
loope
mov
sbb
jbe
adc
roll
pushf
test
sub
lret
dec
mov
cli
imul
negl
lds
lret
aam
aas
mov
xor
outsb
cmp
in
fstpt
jno
sbb
mul
idivl
push
lods
sub
test
mov
cmp
xchg
jb
dec
mov
push
lods
pop
add
inc
pop
shlb
xchg
sub
lahf
mov
inc
sub
aaa
std
ljmp
pop
and
mov
mov
xor
add
or
mov
lret
lods
push
ljmp
dec
das
loope
movsl
imul
or
inc
rcrb
push
nop
cld
ja
push
pop
jbe
xor
int3
insb
repnz
subl
scas
fdivr
mov
pop
cmp
ficomps
rcrl
mov
add
xor
mov
add
fidivrs
sbb
sub
add
ja
xor
xor
push
ds
or
dec
fwait
inc
dec
mov
lds
ficompl
fsub
sbb
jae
push
aam
subb
lds
xor
out
ror
and
test
aaa
dec
les
jae
and
inc
insl
pop
in
cmp
roll
pop
js
jge
push
ljmp
push
cmp
pop
mov
mov
lods
mov
shll
sbb
pop
push
fbstp
inc
stos
mov
xchg
xchg
jo
rcrl
scas
fisttpl
insb
shrl
push
pop
stc
jo
sbb
iret
aam
xor
jns
lock
lahf
sbb
dec
out
cmp
cmp
mov
xor
xor
inc
jge
mov
xchg
or
xchg
jnp
cli
dec
xchg
jbe
xor
mov
cmc
sbb
jbe
cmp
mov
dec
lods
data16
xor
adc
push
jecxz
push
pop
add
adc
xor
inc
jnp
ss
push
xorb
test
push
sbb
in
out
decb
xor
pusha
and
jl
mov
into
fistps
and
push
and
pop
sbb
out
scas
mov
mov
and
jp
das
adc
jecxz
ds
out
loop
aam
shrb
xor
cmp
dec
push
aam
add
leave
pop
dec
jbe
out
cmp
dec
push
jmp
sbb
push
jmp
adc
daa
push
clc
xchg
jle
cmp
shlb
mov
mov
fcmovb
aam
jae
iret
sub
sbb
push
sub
mov
pushf
pop
out
mov
ds
adc
mov
aad
in
pop
fcmovnb
das
cmp
push
cld
xor
cmp
es
test
xor
sub
and
int
out
rcl
and
xor
ds
ljmp
imul
repnz
ret
and
push
clc
mov
add
jmp
lret
arpl
dec
sbb
in
dec
sbb
jmp
pop
clc
out
pop
add
insw
loope
or
mov
imul
loopne
fwait
rorb
aam
bswap
lods
sub
pop
in
shr
pop
add
lea
mov
scas
cmp
or
lahf
or
pushf
movsb
mov
xchg
shrl
loope
mov
xchg
dec
xor
mov
cmp
mov
jbe
sbb
call
hlt
dec
imul
inc
mov
jge
lods
jle
and
lret
cmp
in
cmpsl
sbb
insb
bound
cmp
pop
and
cli
nop
cmp
lret
sbb
add
xlat
jp
sti
leave
sbb
jo
xor
cmpsl
jae
push
gs
fidivs
out
push
pop
fcmovne
lock
or
xchg
ds
lret
negb
rolb
cli
or
push
pusha
sbb
xchg
cli
ds
inc
xchg
or
push
sahf
or
into
adc
or
pop
mov
push
out
sbb
cmp
xchg
out
add
incb
js
lret
outsb
push
dec
cmpsl
aam
test
mov
xor
nop
push
mov
xchg
jge
cmp
xchg
xchg
aad
test
cmpsl
cltd
and
outsb
in
mov
xchg
sbb
lret
loopne
jl
sbb
sub
add
iret
jge
xchg
and
adc
mov
mov
sbb
das
inc
nop
add
sbb
sub
jno
dec
roll
movsl
mov
or
mov
fimull
loop
xchg
xchg
and
rcl
mov
ja
mov
dec
outsl
shll
fsub
sbb
pusha
mov
aad
pop
pop
pop
pushw
sbb
sbb
adc
adc
mov
jae
mov
movl
xchg
pop
mov
sub
jmp
je
fstps
cmp
movlps
cmpsb
xor
aas
adc
mov
dec
inc
in
sub
out
scas
xor
fnstsw
rcrl
imul
pop
in
xchg
and
fdivrp
push
inc
scas
shrl
mov
jmp
sub
sbb
push
pop
lea
push
sub
xor
cld
inc
xchg
mov
mov
int
dec
daa
pop
push
ret
scas
lock
mov
pop
scas
and
push
push
outsb
loop
mov
jg
jno
xor
mov
ret
and
xchg
hlt
cli
call
fmulp
mov
cmp
icebp
fimull
adc
mov
loopne
inc
sub
mov
orb
das
xor
push
mov
lea
and
add
adc
cs
andl
insl
cld
lahf
fwait
ret
call
pop
lret
xlat
insl
shrl
add
mov
fcomps
ds
icebp
sub
cmpsl
xchg
loop
mov
fbld
int3
or
xchg
ja
mov
cmp
into
out
hlt
enter
sbb
sub
insb
xor
push
scas
sbb
lock
jge
mov
es
mov
push
mov
lods
add
or
push
cmc
add
and
loop
add
sub
cmp
mov
adc
push
mov
sub
bound
push
addr16
ret
nop
sbbb
adc
fwait
mov
push
mov
jbe
push
sub
fisubs
jnp
subb
fnstsw
xor
cmp
xchg
and
leave
push
pop
inc
mov
imul
mov
ret
jbe
arpl
movsl
mov
dec
lret
in
mov
and
outsl
mov
ja
into
xchg
xchg
jnp
and
enter
mov
mov
clc
mov
or
cmc
dec
fnstenv
rcr
addr16
add
test
das
inc
stc
scas
pop
rorl
sbb
xchg
shr
lahf
loopne
add
push
outsb
sbb
test
mov
neg
xchg
mov
addr16
xor
loope
aas
cmp
mov
dec
pop
sub
sbb
sbb
daa
mov
dec
xchg
sub
loop
push
pop
and
shlb
mov
sbb
pop
xor
loopne
cmp
mov
lret
or
add
jmp
cmp
cmp
cwtl
das
sub
cmp
mov
andb
lods
xor
pop
sbb
add
iret
insl
xchg
mov
das
clc
ljmp
and
inc
push
loop
repz
jg
in
xlat
jmp
push
test
cltd
dec
or
mov
test
iret
pop
jge
jp
xor
ds
mov
out
jl
pop
sbb
jg
mov
adcl
mov
lods
movsl
add
fistps
lods
popa
dec
xchg
mov
mov
and
ret
and
cmp
mov
hlt
fisubrs
movsb
xchg
sub
in
inc
inc
es
or
sahf
mov
push
repz
xlat
test
das
mov
mov
mov
jl
jge
mov
jo
lret
int
mov
scas
inc
addb
shlb
dec
test
push
je
imul
nop
nop
movsb
hlt
lahf
cltd
sbb
mov
push
xchg
ss
cmpsb
jge
orl
cltd
pop
repz
mov
fildl
cmpsl
or
cmp
enter
xor
pusha
leave
inc
or
inc
xchg
imul
notb
aam
pop
mov
inc
loope
pop
stos
int3
test
sbb
xchg
aas
cltd
xlat
cwtl
xchg
cmpsl
rcrb
pop
imul
pop
pushf
push
ret
loope
inc
and
xchg
pop
inc
aas
loope
cmpsb
dec
mov
lahf
cmp
sbb
mov
push
mov
testl
jnp
sub
fdivrl
xchg
xchg
ds
nop
in
dec
mov
mov
or
jae
testb
push
dec
fnsave
mov
popa
icebp
push
inc
inc
cwtl
sub
adc
xchg
pop
push
cli
dec
das
dec
inc
pusha
out
lods
or
sub
dec
jp
add
push
stos
cmp
lret
out
aam
imul
pop
das
clc
subl
sbb
enter
mov
xor
and
dec
or
adc
addr16
cmpsl
fs
std
sbb
sub
pop
jge
mov
jp
ret
dec
sbb
insb
mov
mov
add
add
ficoms
mov
or
je
jne
movsb
les
add
mov
xlat
scas
mov
int3
xor
ljmp
insb
jp
arpl
add
call
xchg
push
lret
add
and
shlb
cmp
cmpl
inc
inc
loope
cmpsl
jle
sub
adc
push
push
inc
cmc
xchg
inc
lret
repnz
xor
jle
insb
out
leave
xorl
or
daa
mov
or
addr16
cmp
adc
fucomi
ljmp
movsb
in
pop
sub
jp
mov
cld
test
shlb
jmp
xor
inc
sar
and
jae
cmp
movsb
pop
and
mov
out
xor
pop
jo
push
dec
outsl
repnz
sti
push
iret
fs
cmp
out
jg
and
addr16
push
data16
add
adc
pop
aaa
dec
push
xchg
mov
popf
jno
in
mov
mov
xor
pop
out
std
fs
into
sub
xlat
lea
lret
cmp
or
push
call
rdtsc
ds
pop
loopne
jg
dec
out
addr16
test
inc
jge
lds
not
xor
jno
sbb
sub
cltd
xor
push
or
in
pop
dec
adc
inc
test
rorl
pop
inc
cld
jg
lcall
xchg
sbb
adc
mov
sbb
rcrb
popf
lock
lret
loope
daa
mov
push
into
or
insl
pushf
jg
lock
ffree
or
jns
iret
push
add
loope
xor
lret
or
inc
out
fs
mov
repnz
lods
adc
push
cmp
test
or
aad
mov
lods
adc
push
pop
iret
pop
data16
enter
shlb
jb
imul
jb
popa
adc
repnz
bound
lds
test
movsb
fists
andl
repz
sub
out
lea
mov
add
xorb
bnd
inc
notb
and
xor
mov
add
sahf
orb
aas
mov
sbb
rorb
ss
pop
aaa
test
and
dec
inc
out
scas
and
sub
mov
sarl
jno
add
outsl
out
adc
cmpsl
aaa
movsl
and
les
sti
push
call
dec
loope
mov
adc
push
insb
clc
rclb
andl
and
mov
aaa
ljmp
cmp
pop
sarl
lds
sahf
mov
adc
loopne
ja
das
fisubrl
clc
push
cmpsl
imul
les
or
sub
cwtl
mov
pop
movsl
in
pop
inc
jae
mov
pop
pop
inc
pop
adc
inc
lock
push
cli
push
push
clc
std
sub
cld
or
dec
xchg
cmc
dec
push
mull
loop
pop
mov
fildll
cmc
inc
add
pop
pusha
sbb
inc
sub
inc
mov
or
and
inc
rcl
jae
jecxz
inc
bound
sti
shlb
ja
enter
test
mov
pop
rcrb
dec
push
mov
fcoms
bswap
mov
add
sbbb
jmp
movsb
mov
inc
pop
mov
push
cs
adcb
sbb
dec
movl
jg
sahf
mov
scas
cmc
push
xor
popf
loope
sub
lods
xchg
cmc
clc
jns
jp
arpl
sarl
mov
or
jp
iret
fildl
fwait
inc
shrl
cmpsb
mov
push
jecxz
sbb
lock
loopne
std
and
add
and
lret
dec
and
in
sub
aad
je
push
jp
fs
sbb
pop
cld
xor
ljmp
je
jecxz
xchg
leave
imull
jb
push
fiadds
cld
divb
mov
inc
ret
jbe
mov
and
loop
inc
and
pusha
repz
sbb
cmp
pop
stos
and
adc
shrl
daa
ret
xlat
add
ret
mov
repnz
or
dec
jge
jns
xchg
mulb
aam
sti
dec
adc
shll
shlb
xchg
stc
cmp
xchg
enter
lock
ljmp
adc
jl
inc
or
mov
test
addl
out
sub
dec
push
xchg
lret
push
sbb
cmc
fisttps
dec
fxch
dec
pop
inc
insl
aas
xor
cmpsl
xor
dec
repz
movsb
das
test
xchg
jbe
call
lret
je
orb
in
pop
insl
test
inc
call
clc
sahf
repnz
fadds
aaa
je
lret
or
mov
into
and
stos
mov
or
xor
and
daa
jg
jae
fwait
gs
pop
pop
mov
push
addl
aas
push
mull
xchg
pop
add
push
in
mov
fisubrl
push
nop
cld
add
jne
xchg
popa
pusha
inc
xchg
lods
ds
push
mov
mov
sbb
movsl
mov
das
mov
sub
ss
xchg
sti
fnstcw
pop
pop
sub
push
into
pop
mov
pop
test
popa
adc
std
xchg
or
ret
mov
push
fmuls
sti
sbb
in
sbb
dec
scas
ret
inc
into
scas
adc
lea
pop
data16
cmp
mov
sub
adc
add
fcoml
adc
mov
fwait
stc
and
aam
addr16
xchg
ja
add
lahf
sti
fwait
jb
sub
add
push
ljmp
int3
pop
lods
xchg
fs
xchg
add
lret
ljmp
repnz
roll
jl
sub
dec
cmc
pop
das
xchg
jo
pop
out
jmp
lar
scas
mov
jle
imul
icebp
xchg
push
jne
push
mov
movsb
sub
xor
xchg
ljmp
stos
lock
aaa
loopne
jb
pop
adc
dec
add
push
js
shll
xchg
lods
xchg
cmc
outsb
push
sahf
add
pop
mov
adc
inc
adc
les
dec
loop
sub
push
aas
jecxz
add
shl
mov
insb
cmp
and
fnstcw
jg
adc
cmp
or
pop
movsl
and
gs
jo
ret
fisttpl
xor
dec
pushl
cwtl
adc
dec
repnz
cld
insl
rorl
mov
fdivs
out
add
and
mov
insb
or
jo
cmc
shl
jp
jne
sub
pop
leave
dec
es
jno
mov
xchg
dec
or
inc
fwait
test
xor
jmp
mov
dec
mov
sbb
jmp
stos
dec
sub
scas
cli
dec
push
aas
jno
mov
sub
sub
loop
out
lea
call
and
and
daa
test
jo
or
dec
mov
int
test
add
fwait
dec
ds
decl
cmp
jmp
leave
aam
xchg
in
imul
scas
mov
fcmovbe
hlt
and
pushf
jecxz
call
in
dec
add
xchg
cmp
push
jnp
lcall
mov
imul
jae
enter
inc
fs
lret
cli
inc
cmpsl
mov
imulb
cs
pop
mov
aad
mov
sahf
jnp
icebp
sbb
loopne
push
jae
in
pop
xchg
arpl
mov
shrl
outsl
jg
pop
mov
out
mov
test
dec
cmp
mov
lret
lock
push
inc
pop
fs
cmc
test
xchg
dec
xchg
gs
loopne
xchg
mov
and
mov
insb
rclb
and
js
and
dec
mov
mov
sbb
fistpl
and
add
in
mov
cwtl
pop
ss
int3
sbb
mov
leave
leave
add
inc
pop
jmp
and
lock
xchg
shll
push
data16
es
fidivl
add
fs
inc
imul
lret
pop
xor
popf
test
push
in
dec
mov
mov
cmp
mov
repnz
lret
fnstenv
aad
neg
lock
mov
mov
lea
xchg
hlt
int
pop
out
aaa
xchg
aaa
sub
cld
outsl
shl
div
push
fildl
adc
dec
adc
cmc
aas
dec
jnp
dec
pop
jg
mov
aam
inc
jb,pn
jne
movb
add
sahf
lea
push
stc
jns
or
dec
fidivl
lret
lret
iret
fldl2t
lret
jae
aam
orb
xchg
mov
mov
stc
iret
shl
dec
pop
fsincos
sub
stc
cmpsb
inc
lods
jnp
sub
mov
lea
xor
add
mov
add
mov
pop
push
dec
sub
dec
popa
cmp
inc
cmp
aas
push
mov
dec
cmp
js
cld
cwtl
sub
sbb
ds
roll
inc
scas
xor
lcall
stc
cmp
push
hlt
int
dec
cmp
dec
sbbl
inc
lret
popf
cmp
cltd
fstp
cmp
daa
es
push
int3
push
mov
cs
and
sbb
call
or
sbb
lcall
and
lods
mov
les
mov
pusha
jno
jnp
cld
dec
cmpsl
pop
xchg
call
in
or
and
inc
sub
cmc
cmp
inc
jle
inc
xchg
mov
mov
aad
pmaddwd
sti
add
mov
inc
push
pop
dec
and
js
cmpsb
push
mul
fst
sub
mov
dec
fbld
push
mov
cmpsb
inc
rclb
and
rcrb
dec
and
xor
je
ds
jbe
mull
pop
jbe
jl
loopne
scas
int3
icebp
push
dec
inc
sbb
xchg
sub
push
sub
dec
shll
cmp
xchg
cmp
stc
aam
cmp
test
sbb
adc
aas
inc
in
mov
cmp
xor
outsl
fucomi
jns
mov
jl
aam
xchg
daa
mov
cmpb
push
mov
dec
push
scas
outsb
outsl
test
adc
imul
mov
insl
testb
shll
and
addr16
lea
pop
cmp
jbe
gs
xchg
int3
lods
cmp
adc
sarb
test
pusha
xchg
roll
mov
ljmp
test
adc
inc
fsubrl
loope
push
jg
out
stos
sbbl
lock
gs
int3
mov
or
cli
test
insl
sub
nop
aas
pushf
mov
pop
sub
mov
int
jne
lret
adc
aas
pop
testb
push
out
pop
dec
mov
outsl
jecxz
rol
outsl
jecxz
pop
ljmp
cmp
loope
xor
mov
test
add
rorl
xor
and
mov
lock
scas
fiadds
mov
out
cmp
push
or
cld
mov
pop
js
stos
jae
add
scas
xchg
mov
inc
clc
outsb
std
ja
ds
xchg
adc
mov
pop
lcall
sbb
icebp
aas
insl
pop
bound
jl
xchg
in
ret
negl
sub
sub
rclb
ss
daa
push
roll
in
shlb
cmovl
dec
test
push
insb
nop
xchg
cmp
shr
dec
pop
and
fldl
imul
inc
fwait
daa
stos
stos
add
stc
pop
sub
stos
cmp
cli
pushf
test
pop
addr16
hlt
pop
fisttps
cltd
or
xchg
out
add
out
sub
add
push
jnp
push
pop
out
movsb
leave
arpl
ret
stos
xchg
ret
fsubrp
out
xor
mov
outsb
nop
cltd
mov
scas
aad
lds
dec
arpl
jae
add
outsl
sub
mov
push
jb
test
xlat
insl
aam
jae
addl
xor
lret
leave
in
jns
push
dec
sbb
mov
mov
mov
nop
sbb
imul
sbb
aam
int
mov
movsb
fisubrs
jg
pop
mov
and
xchg
cmp
jnp
stos
jno
dec
xor
mov
and
cmp
cli
movsl
pusha
out
stc
mov
adc
into
sbb
pop
in
outsl
in
sbb
cmp
test
out
cld
xchg
pop
faddl
jmp
mov
add
mov
or
lock
mov
rcll
lock
xor
dec
cmp
or
jg
sub
ljmp
sbb
adc
repz
add
bound
scas
cld
in
in
cwtl
mov
pop
leave
inc
dec
out
jo
sbb
stos
aad
test
and
xchg
push
enter
xor
sti
dec
popf
cmp
xor
add
jnp
scas
jp
icebp
lret
lahf
lods
add
sti
int3
sub
aas
xor
call
out
jae
mov
pop
xlat
ret
sub
lcall
sub
shll
sbb
or
mov
jmp
lahf
jb
arpl
xor
jmp
ret
xchg
add
add
stos
loopne
xor
ret
outsb
loope
xor
cmp
out
mov
mov
fmulp
cmpsb
aad
test
fwait
sarl
dec
icebp
into
aam
ss
or
mov
adc
mov
shlb
in
repnz
pop
bound
inc
fstl
pusha
adc
cld
shll
inc
pop
sbb
ret
adcl
jp
daa
mov
sbb
out
mov
jae
mov
mov
loop
add
fidivs
xor
loope
icebp
jecxz
lcall
sbb
push
add
mov
scas
fsubl
subb
stc
loope
push
push
inc
xchg
leave
data16
or
subb
adc
inc
mov
jbe
test
adc
std
mov
subl
jbe
xchg
cmp
fld
xor
mov
fs
add
cmp
mov
push
lahf
push
sub
adc
adc
or
mov
or
jns
sub
incl
std
or
sbb
add
fs
mov
dec
pop
shll
insb
bound
mov
xor
pop
ljmp
stos
cmp
mov
lock
mov
sub
jl
pop
call
dec
cmp
mov
roll
pop
in
aad
and
in
sub
lock
mov
shl
mov
jp
jecxz
lds
aad
out
fwait
sub
add
xchg
imull
mov
xchg
js
adc
cmc
shlb
xor
pop
jo
inc
test
andl
xchg
imul
xor
sub
sub
inc
aam
icebp
testb
dec
cmp
or
and
jl
mov
mov
mov
push
pusha
jp
mov
pop
data16
stos
sbb
dec
adcb
jge
sub
xor
lods
bound
gs
xor
mov
lret
mov
pop
andl
pop
movsb
leave
js
fwait
arpl
insb
data16
enter
pop
push
sub
hlt
sbb
or
cwtl
xor
fcom
pop
js
or
push
into
testl
push
mov
mov
jo
lock
aaa
dec
sub
xchg
andl
int3
bound
loopne
fwait
insl
sti
cld
jmp
sub
dec
mov
es
cld
pop
lods
ds
mov
scas
xchg
in
push
add
nop
ljmp
mov
bound
and
bound
xchg
imul
cmpb
push
hlt
outsl
je
fbld
negl
negb
repnz
shl
addr16
sahf
ret
mov
cmp
mov
movsl
jb
aad
loope
dec
loope
dec
bound
call
roll
out
orb
xchg
test
ljmp
lds
fldenv
icebp
imul
sahf
mov
fstpt
repz
out
mov
or
dec
mov
arpl
lret
icebp
or
mov
dec
mov
dec
jl
mov
add
outsl
jno
idivl
frstpm(287
arpl
mov
adc
pushf
push
mov
movsl
mov
dec
fs
adc
xchg
lock
jle
cli
hlt
sbb
iret
lods
or
xchg
or
ljmp
sub
mov
push
test
fisubrl
push
dec
bound
cltd
and
inc
mov
loopne
aam
or
push
int3
es
std
loopne
add
out
loop
je
and
add
jg
dec
add
test
aas
lock
pop
mov
fcmovb
or
fdivr
xor
xchg
sbb
mov
sub
xor
xor
push
shr
aam
push
lret
pop
pop
adc
pop
rclb
push
inc
out
sti
adcb
pop
dec
fcmovu
mov
and
int
imul
aad
cmp
cltd
sti
mov
scas
pop
andl
inc
add
push
pop
xchg
repz
mov
scas
xchg
in
push
cmc
dec
leave
add
ret
ret
jb
or
popl
cmc
cli
jg
pusha
add
push
jge
pop
xor
in
arpl
loopne
andb
test
sbb
lahf
and
stc
and
out
adcl
lret
repz
fsubrl
push
in
mov
sub
test
xchg
mov
sbb
xchg
std
cmp
mov
iret
in
les
xchg
sbb
dec
push
jg
dec
push
addr16
xchg
sub
sbb
mov
in
imul
or
inc
sar
pushf
lret
add
adc
jne
iret
cli
sbb
sbb
scas
jp
fbstp
std
ret
jp
jno
push
sub
xchg
and
mov
lods
inc
mov
push
sub
inc
xor
xchg
loop
add
mov
data16
mov
and
mov
adc
jg
xchg
cmp
les
bound
shll
xchg
xchg
sbb
fsubs
mov
jg
xor
sti
sub
testb
scas
shll
push
pop
aad
int3
repnz
cmpsb
mov
push
add
mov
leave
jmp
mov
jl
js
incl
stc
xchg
inc
ljmp
pop
inc
loope
adc
mov
aaa
xor
or
push
sahf
jmp
into
repnz
js
push
and
jmp
or
cmpb
jmp
ljmp
test
popa
sbb
in
push
arpl
push
lcall
adc
lret
inc
pop
out
dec
jle
pop
ljmp
mov
jl
cmc
mov
fwait
pop
dec
mov
cmp
xchg
push
jne
dec
sbb
push
bound
pop
jle
push
cmc
pop
mov
or
inc
xchg
jae
pop
pop
jl
out
inc
testl
sbbb
sahf
adc
pop
loopne
xchg
cmpl
fisubl
xor
movsb
jo
pushf
repz
je
jmp
sub
or
movsl
dec
sbb
pop
push
aas
je
or
cmp
add
leave
int
sub
push
xchg
lods
cmp
and
test
lret
jns
daa
cltd
mov
idiv
out
mov
jle
out
imul
xchg
sbb
ds
mov
or
xlat
movsb
push
mov
daa
scas
mov
sbb
pop
add
jmp
in
ljmp
inc
pop
jle
aad
push
addr16
lds
call
cmc
jb
movl
lds
das
xor
cltd
mov
cli
push
test
loopne
cltd
repnz
or
insl
jae
test
stos
inc
jl
mov
test
pusha
dec
xor
gs
add
das
scas
data16
out
push
cmp
lret
xchg
pop
jne
inc
mov
test
jns
stc
push
sub
adc
shrb
adc
add
test
push
and
inc
mov
pop
in
or
xor
pop
test
mov
sarb
in
sub
test
push
mov
dec
mov
rorb
adcb
stos
sub
xchg
stc
sub
clc
xor
add
jnp
out
loope
fcompl
shrl
sbb
sbb
and
and
in
mov
xor
jne
xor
push
and
int3
sub
repz
cmp
jae
pusha
mov
pop
repz
inc
sbbb
mov
roll
mov
lea
fs
mov
insb
lods
inc
sbb
mov
add
jb
lock
cmpsl
xor
add
cli
lcall
jno
sbb
push
cwtl
or
hlt
js
sub
addl
syscall
xor
mov
fdivs
aas
faddl
sbb
xorb
mov
xor
pop
fidivrl
jp
pushf
jmp
mov
pop
push
add
sbb
gs
das
jns
xchg
xor
fsts
mov
dec
lret
pop
enter
test
jp
sbb
pop
mov
js
mov
cmc
sub
fsubl
mov
clc
or
xchg
add
stos
xor
in
out
shl
xchg
sub
stos
xchg
xchg
ja
xchg
pop
scas
js
push
cli
adc
out
and
lock
inc
or
xchg
pop
in
inc
add
cmp
pop
jl
imul
rorl
out
cmp
ljmp
mov
mov
xchg
mov
pop
les
cmpsl
out
stos
inc
shrl
mov
lahf
adcb
in
mov
aas
pushf
repnz
adc
scas
sbb
adc
xor
add
xor
jecxz
leave
push
adc
jge
int
push
int3
in
add
push
cltd
jns
jg
mov
jge
jbe
pop
iret
pop
sbb
push
sbb
sbb
mov
aas
jne
push
shll
stos
jb
movsb
sti
fistpll
aam
dec
xchg
xor
ret
pop
sub
insb
cmpb
or
stc
icebp
xor
xchg
adc
push
testl
mov
dec
or
idivl
sbb
jp
leave
sub
sbb
mov
shrl
stos
push
push
daa
pushf
outsl
sbb
cltd
jge
cmpsb
mov
sarl
je
xchg
orb
int3
xchg
xchg
in
callw
mov
insb
mov
pop
je
sub
cmp
xchg
out
mov
mov
mov
xchg
iret
pop
pusha
xchg
pop
int3
jns
cmc
or
lods
jmp
add
xchg
mov
iret
lea
lods
push
dec
out
test
xor
mov
enter
ficoml
sbb
cmp
sub
xor
dec
adc
out
sti
jno
bnd
sub
and
cli
xor
cmc
mov
pop
scas
mov
xor
mov
test
lea
sbb
cmp
lods
mov
push
sub
fstl
shlb
inc
mov
fcomip
sbbb
bnd
aaa
push
mov
movsb
cmpsl
je
aaa
jo
movsb
xchg
mov
lcall
movl
add
jle
mov
imull
ror
or
dec
push
movsb
inc
push
jo
jmp
cmpsb
mov
out
mov
jle
mov
gs
je
jle
push
negb
test
mov
and
outsb
dec
mov
push
dec
call
sbb
and
shl
std
stos
daa
es
dec
imul
fmul
test
call
jb
arpl
ja
add
pop
pop
add
and
add
jae
and
push
mov
push
cmc
fwait
or
out
jecxz
add
movsb
jg
daa
sbb
sub
dec
sub
add
ja
add
dec
adcl
loop
lods
inc
bound
mov
int
ja
clc
lcall
adc
cmp
mov
fwait
hlt
push
xor
aas
ds
cltd
pusha
jns
imul
sub
in
shl
jg
bsr
or
aam
inc
and
xchg
add
aas
jecxz
into
sarb
imul
pop
ljmp
cmpsb
push
sbb
mov
lock
xchg
in
ds
pushf
cmp
adc
scas
loopne
inc
out
pop
rorb
test
pop
and
mov
dec
inc
scas
nop
clc
sub
sar
dec
jp
pop
dec
pop
cltd
adc
int3
shr
ret
pcmpgtb
add
inc
lcall
pop
push
xchg
movsb
mov
xchg
leave
push
aam
jg
xchg
incl
push
jg
sbb
jnp
addl
daa
lods
enter
fcmovu
xchg
push
jmp
cmp
pop
cs
fstps
push
adc
frstor
or
adc
cmp
ficoml
js
jp
mov
subb
xchg
je
jecxz
dec
push
divb
mov
inc
cwtl
mov
mov
and
into
add
sub
leave
or
xlat
xchg
into
pop
das
lock
cmp
gs
mov
and
sub
lea
jb
test
out
fcompl
pop
or
lea
lret
fs
or
loope
pop
dec
push
jecxz
bound
mov
pop
aaa
push
push
inc
stos
xor
cmpl
mov
loope
mov
mov
incl
mov
data16
pop
pop
pusha
xor
xchg
xor
jns
inc
dec
xor
add
xchg
inc
leave
xchg
mov
dec
inc
adc
adc
jle
push
stc
fs
jecxz
or
cmp
sub
mov
push
popf
sbb
cmpsl
mov
out
add
dec
bound
mov
mov
out
xor
mov
sub
sub
repnz
aam
stos
pop
mov
cmp
call
xchg
ja
shl
push
mov
sub
fnstcw
cmpsl
inc
or
fistps
ret
mov
ds
jo
pop
popa
test
lock
pop
xchg
adc
and
sbb
pop
ret
xor
adc
stos
jae
mov
pop
shlb
scas
pushf
leave
pop
subl
dec
cli
xchg
in
subb
rolb
lahf
and
leave
push
nop
inc
sub
shlb
fcoml
jno
jno
xchg
int3
cmp
xchg
aam
jecxz
mov
push
fwait
push
push
iret
stos
aas
int3
add
sbb
lret
int3
fwait
jbe
bound
scas
and
or
cmp
jns
out
scas
sarb
push
mov
in
mov
cld
das
hlt
in
sbb
insb
jle
adc
out
mov
xor
or
sbb
dec
sbb
ret
int3
cwtl
mov
nop
sbb
lcall
sub
and
ja
push
mov
dec
enter
inc
subl
add
add
into
sub
or
outsl
add
push
mov
jbe
jno
pop
pop
nop
aam
and
mov
push
rcll
fistpl
dec
cmp
mov
jp
loopne
addr16
aaa
pusha
insl
ret
pop
ss
in
les
scas
fistpl
xlat
adc
nop
add
test
andl
sahf
xchg
push
cmp
cmp
xchg
xor
enter
pop
test
fistpll
add
mov
lret
mov
push
mov
decb
shrb
lahf
mov
jg
mov
xchg
cmp
jg
loopne
mov
fldenv
adc
scas
fucomp
push
inc
mov
pop
xchg
cmp
sub
sbb
aam
mov
push
aam
out
xor
jmp
push
adc
mov
stos
xor
dec
push
xor
jle
call
out
and
adc
sbb
bnd
out
js
jo
movsb
shlb
mov
add
jecxz
loop
mov
mov
pop
les
imull
push
adc
sbb
mov
sahf
or
jb
mov
pop
out
pusha
sbb
and
jae
push
pop
cmp
or
mov
add
xor
sub
lret
hlt
add
and
and
mov
leave
fimull
ja
xchg
fwait
sti
js
adc
cmpxchg
inc
lret
inc
faddl
mov
xor
pop
into
stos
mov
mov
jle
fs
mov
add
rcrl
fdiv
sbb
push
popf
add
sub
dec
sti
outsb
mov
add
xchg
inc
or
mov
out
cltd
or
adc
aas
push
out
dec
leave
call
push
out
mov
push
lods
ret
or
fxtract
mov
in
data16
adc
mov
xchg
mov
aaa
push
ljmp
lds
lock
imul
push
ss
pop
js
test
bound
or
lcall
outsl
sbb
test
ror
popf
movsb
inc
mov
jge
and
rorl
xor
jge
mov
ret
sbb
loop
push
pop
adc
lcall
inc
pop
jmp
and
cwtl
fistl
clc
lahf
sub
out
in
cs
dec
mov
leave
and
dec
ret
cwtl
adc
repz
in
cs
sub
push
jno
mov
add
xchg
xor
popa
std
repz
add
loop
xchg
cmp
jo
dec
lcall
mov
hlt
mov
cmp
jl
ror
sarl
cmp
imul
rolb
scas
inc
inc
push
jge
xor
int
sarb
dec
dec
xchg
es
nop
pop
mov
sbb
popl
dec
inc
jnp
cwtl
pop
and
test
sti
xchg
cmp
xor
repz
xchg
pop
mov
daa
mov
cwtl
aas
pop
mov
push
in
xchg
sbb
inc
cltd
cld
mov
inc
dec
aas
cltd
test
sbb
cltd
or
or
sub
and
xchg
pop
mov
aas
ljmp
xchg
mov
js
push
ss
jnp
scas
jmp
jge
push
cmp
or
adc
mov
cmc
nop
sub
scas
mov
cmp
repz
xor
fldl
mov
enter
mov
arpl
sahf
mov
push
aas
inc
cmp
jnp
nop
lea
lock
lret
pop
aas
push
gs
cli
sub
lods
jge
fbld
pop
outsb
rolb
ss
mov
pusha
push
fisubs
sub
inc
xor
call
jne
push
hlt
push
divl
inc
sti
roll
xchg
and
fs
out
test
ficoms
out
inc
loopne
je
arpl
jecxz
popf
xchg
scas
jecxz
scas
loop
push
cli
cmp
sbbb
mov
aad
daa
push
inc
or
aaa
lods
mov
sbb
dec
sbb
into
sarl
scas
lcall
loope
cs
mov
ja
dec
addr16
cmpsb
std
popa
jp
repz
fidivl
pop
mov
mov
xor
lahf
or
cltd
push
xchg
ljmp
mov
mov
daa
aad
add
mov
mov
aam
mov
cmc
adc
xorl
pop
in
xchg
and
call
cmc
jmp
sbb
clc
pop
iret
dec
cmp
out
mov
xor
inc
inc
cmp
daa
push
mov
mov
mov
xchg
push
cmp
pop
lods
lods
loop
mov
mov
addb
shll
addr16
xor
dec
andl
fbstp
int
xchg
push
dec
mov
lret
repnz
sbb
inc
jmp
arpl
sbb
push
dec
jae
fsts
testb
push
ds
in
repnz
mov
and
xorl
dec
cli
in
and
mov
adc
jl
fstpl
mov
sahf
mov
enter
dec
insl
push
test
cwtl
mov
xchg
in
fnstcw
push
xchg
mov
scas
stos
jp
jg
add
push
movsl
push
test
idivl
gs
xchg
lods
sbb
in
push
bound
test
inc
jmp
mov
js
mov
movsl
cli
or
ja
ret
test
je
lahf
jecxz
pop
jnp
test
enter
xchg
pusha
ss
frstor
mov
xlat
es
mov
loopne
jns
inc
loope
xchg
add
into
jne
std
and
add
sti
mov
push
pop
andb
push
inc
in
mov
rcl
repz
mov
add
adc
mov
stos
jp
ja
stc
adc
into
inc
pop
mov
mov
xchg
fimull
test
lods
loopne
outsb
add
xor
dec
fildll
testl
and
in
outsl
scas
add
int3
fwait
inc
dec
jmp
pusha
or
leave
cwtl
jge
inc
lds
idivb
pop
mov
scas
scas
js
sbb
pusha
push
mov
add
imul
stos
push
outsl
mov
and
call
int3
cltd
aad
xchg
adc
adc
sbb
test
insb
stos
mov
push
mov
imul
or
adc
sub
xor
lahf
xchg
push
push
adc
mull
sbb
outsb
jp
xor
dec
bound
lea
jo
pusha
mov
xlat
aad
ja
mov
cwtl
fisubrs
ret
ret
add
jae
adc
shlb
inc
cmp
dec
jp
nop
fsub
and
dec
and
andb
add
div
popa
or
add
mov
jg
jle
xchg
mov
jg
push
add
sbb
pusha
mov
push
mov
fwait
or
pusha
sub
xchg
dec
adc
out
pop
or
rclb
incb
cmp
mov
fucomi
xlat
mov
xor
fidivs
pop
adcl
lea
push
sar
int3
mov
rcrb
stos
dec
stc
in
outsb
addr16
inc
add
cli
jno
mov
js
call
mov
cmc
daa
shll
pop
adc
xchg
call
incl
mov
add
xor
shlb
outsb
in
cmp
fstpl
inc
jo
movsb
out
stc
jae
insb
xor
sub
jmp
popa
cmp
jb
or
jmp
pop
cmc
push
adc
cmp
pop
dec
loope
mov
test
cli
and
inc
inc
je
xchg
lcall
cld
xchg
aas
fsubrs
sahf
cmp
js
mov
rolb
dec
repz
fidivs
sub
aaa
adc
push
add
jae
addr16
jmp
cmc
fimull
js
jb
dec
cs
out
in
inc
and
rorl
xchg
psraw
ljmp
mov
xchg
mov
adc
mov
lds
in
sbb
lea
cmp
fldcw
mov
ljmp
inc
jl
jne,pn
jmp
mov
daa
js
iret
jge
jnp
test
movsl
adc
in
sub
pushf
sarb
pop
add
lret
loopne
cmpsb
xchg
jbe
addb
les
mov
fwait
jmp
cltd
xor
push
lock
xchg
in
jbe
out
sar
cmp
xorb
in
repnz
or
std
fwait
out
and
inc
pop
and
sbb
in
cmp
mov
dec
pushf
js
movsl
dec
dec
sub
add
xchg
lcall
in
push
jmp
xor
push
lods
dec
pop
les
inc
mov
mov
pushf
sbbb
push
cmp
jmp
inc
lods
jne
imul
call
leave
push
daa
sti
aam
and
call
mov
stc
addr16
mov
jp
addl
rorb
icebp
jp
fstpl
add
mov
mov
outsb
or
call
push
push
adc
sarb
add
into
add
mov
stos
push
jmp
mov
cmc
fs
or
push
scas
popa
les
mov
sub
and
pop
jmp
sub
lea
stc
cli
mov
sbb
push
sub
sub
or
adc
fstps
daa
and
sub
mov
mov
or
add
jp
sbb
pop
ds
xadd
jne
shll
mov
fdivl
fcoms
cli
mov
mov
jns
retw
ret
cmp
adc
pop
stos
and
sbb
sbb
xchg
outsl
fwait
aam
fimull
in
scas
cmp
repz
test
xchg
jmp
out
ja
mov
aad
in
push
fnstenv
les
mov
xchg
out
int
and
xor
hlt
inc
cmp
xchg
vmaskmovdqu
stc
testl
repnz
xchg
icebp
out
push
int3
cmp
aaa
call
fistl
xchg
lods
in
xchg
lock
jnp
mov
or
jecxz
mov
mov
mov
dec
xor
and
xor
loope
outsl
mov
lods
mov
jmp
add
sti
mov
test
lds
lret
in
push
pusha
sub
mov
sub
mov
testb
xor
lret
sub
xchg
adc
mov
or
mov
fwait
cs
repnz
ss
popa
dec
push
mov
cwtl
fcom
push
je
out
pop
leave
dec
push
movl
outsl
mov
fldcw
hlt
adc
adc
add
jmp
test
scas
mov
push
mov
fs
jae
jg
jl
push
mov
fsts
inc
sti
add
mov
aas
js
xchg
and
push
movsl
add
sbb
sbb
imul
push
ja
cmp
js
push
cmp
out
inc
es
mov
xor
js
std
test
andb
xchg
jns
dec
out
push
shl
incl
stos
inc
sub
dec
mov
loopne
cmp
jecxz
fnstsw
adc
test
test
ret
xchg
cmp
mov
fiadds
lods
mov
hlt
mov
imul
in
dec
sbb
sub
cmp
xor
in
mov
pop
xchg
mov
mov
scas
mov
jnp
shlb
jne
in
sbb
stos
xor
lock
stos
enter
int3
or
loop
adc
out
std
push
pop
cmp
out
push
dec
std
das
pop
mov
mov
repz
in
in
inc
cmp
mov
aaa
ficoms
pop
ret
cmp
fldcw
out
mov
lcall
test
icebp
mov
pop
mov
in
dec
and
pop
shrl
imul
mov
push
cld
jo
mov
jl
stc
fidivrl
adc
pop
aam
add
daa
jnp
xchg
adc
jns
mov
sub
cmp
out
push
push
push
loope
xor
clc
out
xchg
dec
cmp
push
jno
lret
mov
mov
mov
push
test
scas
test
fxch
lea
jle
jecxz
pop
mov
xor
push
mov
pop
push
adc
adc
sbb
aam
loopne
and
test
jae
lcall
dec
les
or
dec
pop
xor
shr
test
xchg
test
sbb
std
out
push
daa
mov
movsl
cwtl
jb
mov
inc
dec
push
lret
add
movsl
push
mov
hlt
lret
nop
cmp
xor
mov
icebp
xchg
rolb
xchg
out
add
mov
cmp
stc
push
in
js
adc
push
pop
cmp
ficompl
mov
sbb
pop
sbb
call
sub
jb
leave
int3
adc
lret
shl
mov
cmpsl
cmp
imul
xchg
jmp
shll
dec
adc
aad
jo
push
std
std
xchg
pop
cmc
std
rorl
jnp
lods
adc
push
outsb
mov
outsb
mov
popa
push
xchg
ror
mov
xor
repz
loop
das
cmpsb
das
xchg
pop
push
sub
mov
mov
dec
or
and
sbb
popa
push
outsb
inc
xchg
push
sbb
mov
cwtl
fs
and
push
mov
push
sbb
pop
cmc
sbb
inc
pusha
xchg
xchg
sahf
and
dec
mov
repz
ret
jo
lret
mov
decb
loop
dec
imul
std
and
loope
mov
sub
jmp
xchg
push
inc
test
jae
mov
out
xchg
shll
cmp
and
jb
jge
jno
daa
insl
lock
scas
mov
fildl
mov
sbb
cmc
push
lods
jns
push
pop
push
cmc
mov
mov
repz
add
push
rol
imul
mov
push
jnp
fwait
aad
sub
dec
lds
aad
xchg
lret
and
fbstp
std
xor
roll
jg
cmp
outsb
mov
push
popa
inc
add
cli
lcall
mov
dec
add
enter
insl
lods
mov
inc
dec
arpl
pop
push
shrb
icebp
ficoml
xor
jmp
adc
xchg
cmc
sub
cmp
xchg
jp
pusha
mov
lods
sub
out
daa
push
ds
shrl
jo
inc
sub
inc
pop
fdivrs
lret
fiaddl
pop
ljmp
push
rcrl
mov
mov
add
sub
cmpsb
sbb
test
mov
inc
xchg
ss
lods
mov
lret
addr16
mov
cmp
aas
mov
pop
cmp
js
mov
testl
stc
pop
arpl
jg
inc
mov
aam
push
fmull
ret
movsl
ret
out
lea
ljmp
xor
ljmp
mov
int
rorb
out
xchg
sarl
dec
push
je
add
push
push
insb
mov
test
jecxz
jp
mov
inc
jg
andb
mov
dec
jbe
addr16
in
sar
sbb
dec
mov
or
lods
test
ficoms
push
rcrb
mov
or
popf
cwtl
inc
in
inc
pop
movsl
shll
inc
jno
sub
adc
or
out
sbb
mov
out
lahf
and
lock
divb
into
fldt
jg
out
repz
push
jo
loopne
pop
add
mov
xor
pop
pusha
mov
mov
pop
push
fdivrl
push
cld
dec
inc
ljmp
cmp
and
pusha
jge
loopne
imul
adc
jmp
mov
lods
out
jno
ret
adc
xchg
jge
jle
hlt
push
mov
ljmp
adc
inc
clc
or
rep
mov
pushf
fsub
stc
mov
ss
lahf
or
or
lods
and
cmp
mov
in
out
out
inc
inc
cmp
push
cmp
push
inc
xchg
lods
xchg
jl
cmp
xlat
mov
int3
jno
cmp
fnstenv
lcall
push
ja
lret
jne
mov
out
xor
xchg
jo
lock
test
inc
sub
int
sub
mov
jne
cmp
mov
fsubp
xchg
es
sbb
addr16
mov
imul
fmulp
lock
mov
aas
jo
or
mov
mov
leave
cwtl
into
adc
mov
inc
dec
sub
mov
pop
mov
xchg
out
xchg
lcall
cmp
jne
loop
outsl
push
cmp
in
cld
cld
dec
sbb
scas
enter
lahf
or
sar
pop
iret
lret
jg
pop
pop
sub
inc
cmpsl
cli
mov
cmp
imul
jne
cs
je
test
dec
xor
aaa
ja
adc
cmp
adc
mov
shrl
fimull
test
sti
loope
cwtl
pop
push
mov
in
add
int3
inc
lahf
ret
push
lahf
fistpl
mov
mulb
adc
pushf
dec
and
fnstenv
add
or
mov
jb
test
jecxz
out
mov
lea
cmp
shlb
jno
gs
cmp
jle
mov
sub
mov
mov
insb
andb
cltd
arpl
xor
pushf
out
fisttpll
xchg
imulb
daa
mov
out
subl
pop
mov
pop
insl
xor
push
or
ljmp
into
shlb
shll
dec
lret
and
mov
nop
push
cltd
or
stos
sbbb
loopne
mov
mov
cli
pop
cmp
ret
adc
scas
add
xchg
in
int3
sbbb
jnp
addr16
mov
adc
mov
fcompl
fcmovnu
mov
es
sub
add
mov
mov
ja
or
inc
mov
std
jl
mov
lods
lret
pop
xchg
fprem
aaa
sub
aam
add
pusha
inc
fdivs
pop
ljmp
int
in
jno
sub
js
jne
jo
in
movsl
jge
stos
andl
out
cwtl
or
bound
inc
inc
sub
mov
or
jg
ss
scas
mov
addl
add
pop
mov
out
cmpsb
and
mov
pop
les
aas
addr16
jno
mov
pop
aad
into
adc
inc
les
clc
inc
adc
push
xchg
out
pop
lods
mov
int3
jp
or
ret
mov
push
or
adc
into
cld
shrl
cmp
adc
sbb
pop
loop
ret
cmp
bound
mov
cmpsb
call
xor
outsb
xchg
push
add
xlat
pop
jl
imul
pop
scas
mov
test
inc
sub
ljmp
cmp
incb
xchg
cmpsl
push
and
fldlg2
enterw
fs
movsb
aaa
movsl
out
lret
mov
push
inc
popf
icebp
cmp
out
jae
icebp
lock
jmp
xchg
rcll
cmp
mov
and
mov
cmp
test
push
push
mov
stc
adc
dec
jmp
dec
xchg
loopne
or
push
fnstsw
adc
jmp
add
push
xchg
cmp
mov
aas
jae
mov
push
push
dec
loope
arpl
adc
lea
and
sbb
cmp
jge
popf
icebp
repnz
and
push
xchg
outsb
mov
cmp
mov
std
lock
jno
aaa
push
insl
lret
shlb
fisttps
xchg
push
ja
fsubrs
cmp
out
pop
dec
popa
and
pop
pop
daa
nop
popa
push
mov
sbb
pop
jp
hlt
fadds
xor
inc
repnz
lods
and
bound
sbb
fdivrl
fcmovnb
cmp
sub
push
addr16
xor
sub
sub
icebp
stos
arpl
fdivl
mov
push
adc
sub
int3
push
inc
sbb
jnp
imul
leave
fildl
jecxz
jo
dec
jnp
movsb
pop
xor
mov
and
mov
mov
in
dec
fldcw
push
and
outsb
mov
push
call
out
mov
mov
fdivr
enter
or
out
mov
out
xor
mov
ljmp
arpl
mov
jg
in
ljmp
and
pop
xlat
push
sub
sbb
adc
iret
pop
push
pop
insl
iret
mov
fdivs
mov
xor
lret
pop
push
loope
shlb
adc
mov
std
cld
push
inc
xor
xor
in
cld
push
ljmp
loop
jg
add
xchg
lds
jle
push
dec
lcall
fcomip
cmpsl
stos
fildll
sub
pfrsqit1
fwait
xchg
and
sahf
xchg
outsl
adc
in
ss
outsl
sbb
dec
inc
cmp
clc
mov
sbb
leave
stc
leave
in
out
shl
dec
push
insl
ret
sbb
ftst
push
insl
dec
loop
pushf
ljmp
cld
mov
and
inc
adc
add
dec
push
jle
enter
rcr
cld
jne
push
jle
je
jl
sbb
pop
je
popa
shlb
inc
mov
icebp
dec
add
scas
mov
aam
repz
daa
rcl
cmp
ss
push
test
arpl
out
call
mov
dec
inc
sub
mov
cwtl
jmp
fsub
gs
ss
pop
pop
or
jns
arpl
mov
sub
and
mov
jbe
mov
lahf
mov
pop
imulb
push
dec
in
mov
lret
jns
mov
or
jl
or
enter
or
sti
sub
loope
adc
shrb
jae
inc
cmp
adc
fstpl
das
xchg
push
and
ljmp
ljmp
test
rolb
cmp
push
scas
push
fs
jg
loopne
dec
call
lods
mov
scas
xor
mov
inc
xchg
sbb
and
outsb
stos
loope
pop
std
and
stc
adc
add
aam
mov
outsb
test
lods
data16
js
add
jnp
popf
das
mov
in
clc
xor
mov
and
bound
fsubl
fdivl
pop
aad
add
adc
mov
scas
jnp
pop
add
lret
mov
push
test
outsl
and
mov
cmpsb
pop
mov
pop
fcmovnu
lcall
movsl
cmpsl
ds
mov
imul
les
test
fadds
mov
or
push
xchg
jbe
bound
and
aaa
shlb
inc
mov
imul
jl
or
fnstcw
test
stc
jno
xchg
cld
ud0
sub
pop
out
dec
mov
ja
stos
push
mov
cltd
out
or
or
pop
hlt
outsl
and
iret
push
mov
sub
shlb
add
jno
pushf
rcr
cs
xor
pushf
pop
repnz
je
inc
cs
fisttpll
cltd
dec
les
mov
ret
cli
ret
iret
xchg
or
push
dec
fwait
aam
int
mov
dec
add
jae
ja
pop
cli
add
addl
xor
aad
jle
sub
es
outsl
addr16
fsubs
jne
ss
sbb
cmp
movsl
xor
in
movsb
lock
shl
inc
or
jecxz
jle
sub
push
int
movsl
pop
jne
addr16
xlat
inc
repz
ror
adc
fwait
cmp
add
ret
addr16
push
fcmovnb
push
ret
push
repnz
jle
data16
adc
add
imul
sbb
mov
in
adc
push
div
inc
mov
jb
adc
jb
lea
mov
ja
mov
stc
rcrb
mov
adc
mov
mov
sub
fwait
popa
mov
shl
mov
xchg
lea
xchg
and
dec
or
sub
dec
repnz
pop
pop
inc
cmp
cld
inc
add
xor
sarl
xchg
imulb
mov
lods
test
outsl
mov
fwait
mov
clc
lock
sub
fstpl
sub
mov
adc
mov
xor
xchg
out
cmp
pop
xor
pop
in
add
jbe
sahf
pop
mov
sub
data16
popf
cmovb
inc
arpl
add
cmp
pop
and
enter
jg
pop
out
mov
xor
or
mov
mov
enter
iret
filds
repz
scas
xor
push
fldcw
cs
sub
mov
scas
pop
cmp
xchg
addb
in
xor
out
adc
add
outsb
mov
mov
sub
cmc
inc
data16
mov
fsubrp
cmp
lds
ja
es
pop
test
enter
mov
scas
gs
or
daa
jle
cmp
or
repz
sahf
ja
dec
push
cld
cmp
setp
pop
lods
xor
es
lret
push
lcall
or
adc
fsub
dec
dec
lods
in
daa
push
sti
xchg
lahf
or
sbb
or
imul
inc
ss
cmp
jno
arpl
xor
inc
ret
rcll
nop
leave
ja
call
ljmp
jnp
pop
pop
fwait
incb
push
loope
je
add
sti
push
hlt
sub
cs
or
ret
fists
and
jmp
daa
hlt
dec
fldenv
mov
jge
mov
fisubs
enter
adc
enter
popf
cmp
mov
cmpb
xor
aas
add
es
mov
adcb
mov
clts
rorb
or
or
sub
sub
fwait
mov
add
dec
mov
cmc
bound
mov
or
popa
pop
loopne
mov
dec
sub
add
or
dec
in
imul
inc
mov
add
pop
mov
addl
or
mov
xlat
test
imul
ja
bound
jmp
lcall
daa
dec
nop
pop
mov
sbbl
pop
add
int3
push
push
aam
mov
push
int3
jo
dec
add
push
and
aaa
mov
insl
sbb
gs
std
push
repnz
stc
data16
jge
jmp
sub
dec
mov
add
adcb
xchg
or
fwait
add
add
xchg
in
out
mov
and
scas
sbb
sub
cmpsl
inc
sbb
ret
out
daa
add
popa
clc
cmc
mov
xchg
mov
jle
in
aaa
test
mov
scas
sbb
inc
adc
xchg
sub
iret
insl
cld
add
mov
push
pop
mov
mov
cli
pusha
xchg
push
ljmp
int3
lds
dec
call
push
xchg
rcrl
sbb
jge
mov
xor
out
cli
xor
mov
cmp
dec
and
push
sub
dec
iret
cli
sbb
mov
dec
jl
scas
lret
cmp
mov
pushf
lret
loopne
mov
mov
jl
cmpsb
mov
pusha
and
lock
lea
pop
mov
jmp
mov
lret
daa
push
inc
mov
dec
pop
jmp
pop
mov
sarb
push
outsb
aas
xor
xchg
and
add
shlb
call
dec
outsb
cld
inc
rorb
jno
jecxz
xor
sub
xchg
jns
cmpsb
rolb
fdivs
xchg
jl
push
bound
push
mov
lahf
xchg
mov
pop
sub
sub
mov
lea
dec
jne
icebp
daa
movsb
inc
push
mov
push
ds
mov
aam
cld
fiadds
in
aad
dec
xor
testb
jge
jbe
or
pop
test
iret
jge
fs
lods
and
mov
rclb
inc
pinsrw
push
lock
inc
xchg
cmpsl
sbb
sub
inc
jl
mov
movsb
rcrb
mov
mov
sbb
push
adc
dec
mov
imul
inc
repz
jg
test
fistpll
cs
mov
and
and
jg
out
icebp
test
mov
pop
mov
mov
jg
mov
push
mov
cmp
push
and
gs
fnsave
add
ljmp
pop
cmp
aad
sbb
dec
adc
xlat
sub
clc
int3
ds
and
push
outsl
jecxz
dec
sti
jb
pop
push
outsl
sbb
int
dec
lahf
jo
adc
pop
xor
xchg
fstp
xlat
cmp
jp
aad
ja
cs
rclb
xchg
decb
lock
mov
pushf
idivl
fists
dec
lock
jb
fwait
nop
or
fisubs
mov
aad
add
mov
or
dec
lret
and
mov
lret
push
xchg
add
aaa
sub
cltd
rcr
adc
sbb
and
orb
int3
or
mov
add
mov
cmpsb
ss
and
xchg
mov
xlat
push
fistpl
mov
xor
popa
xchg
pop
fistl
movl
mov
mov
sub
jno
xor
mov
out
fldl
sub
pop
push
add
into
pop
fidivrs
test
ss
push
add
repz
push
mov
mov
xchg
push
outsl
arpl
xor
sub
jbe
ss
jnp
lock
imul
negb
movsb
cltd
stos
cmp
pop
dec
mov
fimuls
pop
cmpsb
add
or
sbb
pop
mov
sub
push
cmp
pop
xor
sbb
hlt
mov
sahf
mov
or
loop
xchg
xor
inc
adc
jle
movsb
inc
cmp
dec
in
sti
xchg
jg
imul
cmp
jno
dec
repz
cmpsb
push
fwait
ja
data16
lods
xlat
mov
mov
lds
mov
ja
dec
mov
lds
insb
adc
inc
inc
mov
repnz
imul
pop
shl
cmpsb
shll
fsubl
movsl
pop
jnp,pt
subb
cmp
test
fcoml
xlat
push
mov
int3
pop
and
mov
fsubs
in
mov
or
testb
lock
call
sub
cwtl
test
mov
pop
out
add
in
addl
repnz
lret
jmp
mov
into
rol
gs
lds
mov
and
loop
lods
inc
imul
cltd
mov
rolb
add
inc
incl
enter
pop
in
cltd
mov
jl
jno
mov
dec
fiadds
movsl
insb
push
imul
mov
inc
stos
push
mov
lods
lcall
insl
test
popf
and
inc
shrb
mov
push
dec
add
and
mov
movsb
jne
std
pop
sbb
adc
dec
cmp
add
leave
lret
lds
addr16
gs
notl
jg
sub
testb
adc
sahf
xor
in
popa
inc
dec
out
aad
inc
dec
insl
mov
xchg
nop
loope
out
xchg
jecxz
inc
into
clc
popf
ja
arpl
and
sbb
dec
push
mov
add
mov
int
jmp
call
jg
fnstsw
adc
jbe
pop
out
and
adc
push
mov
push
jns
pop
cmpsl
insl
mov
inc
pushf
sub
fists
and
push
mov
aaa
pop
jae
test
cmpsb
cmp
mov
mov
fnstenv
sub
sahf
mov
into
dec
mov
cmpsl
add
out
aaa
cmp
imul
push
jb
imul
lcall
adc
mov
and
lcall
arpl
and
or
pop
lret
dec
mov
sbb
push
jbe
add
pop
cwtl
loop
sbb
jmp
adc
cmp
test
pop
mov
popf
pop
ja
mov
aam
pop
jbe
scas
cli
jbe
mov
icebp
in
out
hlt
mov
sahf
ss
cmp
shll
push
iret
cmp
pop
mov
repz
sbb
filds
inc
and
jmp
or
jne
jmp
sbb
loopne
dec
or
mov
enter
mov
std
mov
jp
pop
les
in
icebp
shrb
in
mov
cwtl
and
nop
xchg
negl
pop
jbe
testb
lret
jmp
gs
lahf
add
ss
and
bswap
fwait
jecxz
call
jle
jne
sbb
mov
les
xchg
sarb
or
sahf
repnz
mov
fistl
jo
test
jecxz
jb
or
push
ret
lods
jge
ret
add
sti
inc
push
xchg
nop
lcall
push
xchg
sbb
push
lret
aaa
cmpsl
shrb
add
pusha
jmp
jo
or
popa
mov
cmpsb
ret
jecxz
out
std
loopne
sbb
out
and
mov
inc
xor
sub
out
mov
lret
pop
dec
clc
call
fdiv
mov
dec
mov
in
imul
imul
xlat
in
pop
js
lea
das
or
popa
and
int3
adc
jle
pop
push
out
scas
jecxz
pop
lahf
dec
arpl
sarl
mov
jnp
adc
adc
aas
mov
mov
add
sbb
jecxz
jne
aam
aad
inc
inc
xor
sub
pop
icebp
imul
leave
pop
cmp
push
mov
add
adc
sbb
xchg
mov
add
cmp
xchg
aad
cmpsl
inc
push
or
mov
iret
or
fadds
xor
push
cmp
xor
pop
xor
pop
mov
mov
jecxz
repz
and
mov
and
mov
cmc
insl
inc
push
mov
bound
stc
adc
mov
sbb
fisttps
stos
test
or
jae
bound
sbb
add
int3
mov
fnstsw
pusha
shrl
popa
mov
jo
scas
cli
repnz
fs
dec
jecxz
jno
fstp
add
xor
lock
xchg
jmp
xchg
sub
cmp
test
xor
and
cmp
inc
cmc
mov
sbb
inc
fs
daa
xchg
mov
dec
push
in
jmp
movsb
pop
push
jno
cld
xor
movsb
in
cmp
addb
push
imul
fdivrs
lret
mov
aad
mov
dec
pop
xor
mov
mov
mov
sbb
out
mov
les
addr16
add
push
xor
add
sbb
fcmovne
dec
mov
fbstp
shlb
popl
incl
pop
lock
fistpl
cwtl
and
xor
push
xor
cltd
cld
push
sub
pop
xchg
test
pop
lret
cltd
les
andl
adc
cmp
inc
mov
cs
aad
jg
out
movsl
data16
mov
and
sbb
fwait
cld
pop
mulb
inc
adc
js
insb
and
andb
sbb
mov
fistpl
mov
ret
in
cltd
test
fnstcw
cs
sub
dec
inc
jo
and
gs
pop
test
add
test
orl
pushf
dec
lock
fwait
lock
adc
push
lret
push
jmp
or
lods
mov
pushf
insl
push
jb
cmp
cwtl
mov
stos
sub
mov
xchg
jecxz
sub
push
add
mov
int3
or
sti
jle
call
in
add
ss
mov
scas
insl
mov
sbb
adc
cmp
stos
mov
sbb
xchg
xchg
fisubs
popa
outsl
mov
jnp
sbb
int3
sub
dec
xchg
mov
xor
setge
cmpsl
fiadds
xchg
call
sub
repz
push
xchg
cld
lcall
fistpl
dec
sub
xor
nop
lods
sub
sbb
loop
xchg
add
sti
test
divb
mov
clc
fisttpl
mov
inc
mov
pop
mov
push
xor
lahf
push
push
pop
pusha
mov
ffree
pop
pushl
pop
or
sub
mov
and
repnz
rcrb
push
xchg
push
lcall
jp
xchg
xchg
xor
jmp
push
movsb
mov
icebp
or
shll
test
push
sbb
dec
xorb
sub
call
mov
cmp
cwtl
in
imul
js
xor
mov
movsb
or
and
push
ja
mov
dec
es
jo
jle
fmull
mov
mov
sub
mov
clc
stc
stc
lar
sahf
mov
mov
les
xor
push
cmpsl
lods
mov
rep
out
pop
adc
cli
add
add
adc
cmp
cmp
jmp
and
sub
push
orl
insl
stos
daa
and
xchg
in
stc
sti
dec
fistpll
cmp
arpl
popa
push
fwait
aaa
inc
xchg
lahf
mov
sbb
jne
sub
mov
add
dec
jg
pop
pop
orl
fwait
jne
push
and
adc
aad
xchg
adc
adc
das
aas
xor
jae
or
pop
and
add
call
or
mov
cltd
mov
int3
outsl
jg
mov
cmp
sub
dec
jge
orb
pop
out
jae
fistps
les
xchg
or
iret
jb
aaa
jmp
adc
lods
fsubl
push
out
jmp
lret
mov
shl
lock
or
aas
pusha
lea
inc
or
pop
movsl
xchg
mov
add
pop
jb
fwait
gs
sub
cmpsb
xlat
test
sub
pop
ja
or
lea
pop
sbb
or
loopne
lahf
outsb
jb
sbb
loope
cmp
loope
push
insb
xor
fcomp
decb
xchg
adc
cltd
sbb
cli
jecxz
sub
fildl
in
pusha
pop
jmp
mov
adc
cmpsb
in
shlb
and
mov
idiv
dec
mov
push
xor
loopne
mov
inc
mov
in
ljmp
mov
mov
jle
pop
outsl
sub
xchg
pop
inc
sub
jnp
pusha
int
push
and
mov
ret
inc
pusha
sub
jle
repz
cwtl
test
xor
xchg
mov
cmpsb
sub
inc
xor
fcmovu
iret
testl
push
add
rol
scas
jo
out
or
or
ss
imul
sbb
aas
pop
mov
mov
cmpsl
int
pushf
cmp
cmp
dec
sahf
mov
loop
cmp
dec
mov
insb
ja
and
in
lock
es
inc
dec
je
mov
test
and
popf
sub
lea
bound
imul
adc
mov
stos
inc
std
jo
in
sub
mov
rcll
mov
fistpl
add
sti
leave
popa
sbb
cwtl
dec
mov
and
jg
faddl
mov
pop
das
fwait
inc
dec
leave
cs
push
add
push
sbb
es
fdiv
sbb
inc
sbb
sbb
jb
mov
push
mov
arpl
cli
fsubl
sbb
fidivrl
test
pop
icebp
xchg
int
and
or
add
rcrl
or
sbb
jg
mov
fdiv
in
xchg
mov
mov
sub
in
jo
push
cs
mov
push
cs
les
sti
xchg
outsb
ljmpw
outsb
je
cwtl
je
pop
popa
fldcw
ljmp
sahf
mov
ret
or
loop
stos
sahf
sub
mov
cmp
ret
stos
cmp
push
test
push
adc
out
mov
lcall
lahf
mov
xor
insl
pop
std
ja
test
pop
loopne
dec
sbb
icebp
addr16
dec
imul
add
das
outsb
fidivrs
addr16
pop
mov
shlb
out
jge
enter
stos
jecxz
cmp
mov
sub
fcmovnbe
sarl
es
pop
lret
cmp
sbb
adc
rol
mov
mov
repz
iret
lcall
pop
mov
mov
sbb
fwait
mov
mov
cld
add
sbb
mov
pop
pusha
adc
inc
rclb
inc
inc
cmp
fisttps
mov
cmp
sti
rolb
ror
mov
mov
test
add
cs
stos
flds
inc
mov
lods
aam
stos
add
hlt
scas
lods
or
dec
push
cmpl
and
icebp
or
sub
or
in
pop
cmp
cmp
pop
sti
aad
iret
dec
xor
xchg
dec
mov
jb
jo
and
lock
pop
xor
jnp
inc
dec
mov
xchg
mov
cmp
shrb
in
stc
adc
or
decb
push
out
xchg
cmc
mov
shll
push
push
cltd
fdivl
arpl
fsubrs
sarb
sub
icebp
repz
cmp
mov
mov
cwtl
pusha
xchg
ret
push
pop
sbb
in
out
inc
imul
sti
sub
cltd
iret
jno
outsl
mov
jnp
shlb
loopne
push
or
movsb
fildll
jo
lea
and
es
stos
sti
jbe
mov
rorl
jae
sti
mov
pop
jno
fcmovnb
inc
scas
sub
sbb
mov
jl
mov
fmul
in
jle
mov
loope
ss
pop
inc
push
stos
mov
into
push
adc
jne
stc
dec
or
in
pop
jmp
fs
clc
scas
mov
js
or
movsb
add
cmp
push
mov
sub
ss
cmpsl
stc
scas
cmpsl
sub
inc
push
inc
xchg
xor
mov
fs
or
scas
loope
ret
pusha
or
jge
add
or
mov
push
jbe
fld
pusha
fcomip
loope
out
mov
leave
dec
add
icebp
cmp
cmp
inc
pop
mov
mov
jno
push
lret
and
push
mov
cli
int3
in
gs
mov
jb
sbb
xchg
push
mov
fs
shrb
sub
dec
pop
lods
adc
and
adc
jl
in
loop
push
xchg
lahf
add
fsubs
hlt
lret
xchg
dec
inc
mov
and
push
sbb
pusha
pop
sti
jmp
fisttps
std
inc
or
push
call
nop
jns
or
push
xchg
xchg
testl
adcl
xlat
pop
cld
pop
push
fimuls
out
sbb
inc
sbb
xor
not
frstor
dec
lret
roll
xchg
stc
dec
mov
cwtl
cmp
mov
outsb
fildll
mov
in
cltd
pop
mov
mov
in
cmp
into
scas
enter
ja
pop
clc
sub
loopne
mov
imul
inc
mov
repnz
jo
mov
push
xchg
sub
and
dec
mov
lahf
in
arpl
outsl
out
int3
enter
mov
push
xor
mov
repz
test
scas
jge
pushf
jecxz
sub
fsts
jno
insl
pushf
in
sub
rcr
cmc
mov
and
into
popf
scas
in
in
pop
sbb
rol
push
xor
aas
and
roll
xchg
adc
fwait
sarl
xchg
insb
mov
adc
jae
pop
cmp
xchg
or
pop
roll
pushf
jb
leave
shr
jle
filds
cmpb
out
cmp
sbbb
sbb
popa
jno
in
add
bound
dec
ss
or
adcl
push
imul
ret
ds
jle
or
scas
addr16
inc
lods
pop
movsb
fcompl
push
dec
push
ja
xor
xor
fwait
mov
xchg
xchg
push
mov
mov
lods
jmp
cmpsl
frstor
pop
xlat
lret
fdivrs
ds
pop
push
jnp
ljmp
loope
les
add
push
push
jae
loopne
hlt
cmp
cmp
lret
jb
dec
mov
xor
push
loop
enter
jnp
cli
imul
cs
inc
mov
or
inc
sbb
ja
je
pop
fld
lds
mov
jmp
push
fs
xlat
mov
in
jp
mov
adc
scas
jecxz
lret
iret
pop
aam
sub
lods
fcoml
ds
test
dec
orl
cmpsl
push
ja
mov
aam
sbb
mov
mov
cmp
sbb
int
xlat
stos
mov
pushf
dec
sub
mov
add
aas
sbb
and
addr16
sub
aas
push
je
andb
adc
and
rol
sbb
dec
add
add
cmp
adc
lcall
mov
inc
lahf
push
cmp
stc
lret
fsub
out
aaa
pop
aaa
inc
and
lods
push
dec
jbe
pop
loopne
dec
out
movsl
mov
or
sbb
pushf
ss
inc
push
add
sbb
cld
cmpsb
xor
mov
xchg
imul
cmp
sbb
xlat
jmp
sub
scas
fmul
mov
cmp
popf
imul
add
jo
cs
push
xchg
adc
js
test
decl
pop
add
cmc
pop
hlt
fimull
andl
push
jl
comiss
mov
aam
pop
add
ss
mov
push
sahf
test
daa
sub
fisttps
pop
cmp
movsl
dec
sub
pop
enter
roll
rcr
or
mov
xlat
push
outsb
and
loope
movsl
inc
jbe
fisttpll
cmp
outsb
xorl
mov
inc
add
mov
movsl
js
subl
mov
fidivs
popf
sub
inc
sbb
mov
pop
outsl
sub
subl
ficompl
mov
jns
xchg
inc
ret
fwait
lods
cmp
mov
out
imul
test
es
jne
jp
stos
inc
dec
loopne
sbb
mov
pushl
push
dec
mov
mov
cmp
loopne
sub
lahf
add
sub
fistl
dec
pop
stc
cmpsb
imul
add
cmp
xchg
mov
mov
popa
mov
nop
gs
push
sbb
std
lods
dec
imul
incl
cmc
imul
in
sbb
lret
shrl
scas
dec
orb
mov
aad
das
aaa
scas
dec
rol
addb
jns
in
scas
add
mov
cld
xchg
jo
fldcw
shl
jmp
cmp
jp
fidivs
push
push
add
push
or
enter
or
sbb
ret
andb
pop
mov
or
adc
inc
cmpsb
cmp
xor
lret
sub
inc
mov
es
mov
inc
pop
add
jae
ret
idiv
cld
outsl
shlb
cmp
push
push
sub
insb
ja
adc
fdivl
jge
cmp
xchg
jge
inc
sub
xorps
mov
mov
sub
mov
popl
adc
cld
cld
mov
fbstp
jp
sub
dec
mov
shll
xor
ret
mov
mov
add
push
sbb
ret
sub
or
sar
lds
and
and
pop
mov
pop
aad
js
push
jl
pop
mov
dec
mov
xchg
and
mov
nop
mov
push
cltd
and
mov
addl
inc
mov
mov
jmp
sub
ss
add
lahf
inc
dec
cmp
xchg
jle
pusha
cmp
adc
mov
sub
shlb
loop
or
xor
mov
dec
imul
jmp
xchg
or
pushf
cs
and
xor
adc
ret
inc
lods
push
movsb
ljmp
fsts
lahf
jne
mov
call
jb
mov
mov
sbb
fucomp
daa
jle
xor
sti
push
push
pop
cs
jg
jle
in
inc
add
jb
cmpb
push
mov
mov
dec
rcl
dec
xchg
xchg
fmuls
out
fstps
aam
lahf
cwtl
sub
pop
pop
daa
iret
lcall
xor
inc
push
pusha
rolb
es
out
pop
stos
aaa
jbe
mov
mov
xor
dec
lds
push
mov
test
nop
jnp
out
mov
jmp
or
cmp
xchg
lods
popa
cmc
xchg
cltd
adc
push
mov
adc
cwtl
push
ja
pop
ljmp
xlat
pop
ds
xor
xor
sbb
enter
fstpl
aas
pop
xor
idiv
jae
pop
adc
shrl
xchg
ret
call
mov
sub
repz
aam
mov
stos
cmpsb
jge
dec
mov
cmp
int3
roll
ret
std
jae
xchg
test
adc
mov
nop
ret
jae
and
push
jo
push
lret
mov
mov
mov
popa
fdivl
stos
or
jmp
pop
loopne
testb
test
mov
adc
sti
shrl
inc
adc
add
stos
cwtl
xchg
stos
cmp
dec
jno
jl
add
dec
das
outsb
sub
aaa
xchg
xor
repz
outsb
adc
ljmp
xor
fcmovu
imul
fstpt
adc
in
xchg
mov
divl
ds
lods
or
out
sub
sahf
fsubl
dec
push
push
inc
add
jae
push
fiaddl
in
jo
cmpsb
push
adcl
mov
mov
fidivl
int
jl
jns
shll
or
mov
push
fcoms
lret
cwtl
inc
mov
pop
xor
xchg
xchg
aad
and
popf
sbb
cmp
ror
and
mov
clc
cmp
je
pop
test
nop
js
xchg
stos
loop
mov
mov
pushf
sar
cs
xchg
cmp
push
out
push
idivb
pop
lret
add
mov
mov
lds
cmp
mov
cmpsl
cmpsb
add
lods
popa
adc
xor
lods
lds
fucom
cmp
inc
fisubs
xchg
lea
sub
push
mov
xor
mov
adc
dec
loope
lds
jnp
shrl
xchg
cmp
jl
jns
dec
mov
mov
stos
repz
jge
jo
mov
mov
dec
mov
jecxz
sbb
mov
mov
sbb
roll
sub
js
inc
add
pop
jae
xchg
cmpl
sub
jne
not
outsb
out
hlt
fst
fs
mov
mov
roll
sbb
mov
xchg
add
addr16
xchg
and
xor
mov
xor
daa
mov
gs
test
dec
daa
js
mov
imull
sub
aaa
cmp
push
imul
movsl
mov
int
mov
insb
push
pushf
sbb
jbe
arpl
push
xchg
jne
enter
inc
aam
mov
movsl
loop
in
mov
cli
pop
sub
je
jl
jae
clc
insb
sub
leave
in
push
pushf
lret
lock
inc
pop
push
mov
pusha
mov
repz
dec
repnz
push
sbb
push
roll
aad
inc
add
xchg
lods
xchg
ret
sub
out
pop
fld
rcrb
jb
ljmp
pop
fistps
cmpsl
inc
add
ja
fs
daa
out
dec
sbb
pusha
out
dec
xchg
movb
sbb
jns
imul
xchg
sahf
sahf
daa
inc
adc
inc
lods
xor
mov
cltd
xchg
adc
mov
movsb
out
fldenv
aas
dec
sub
cmp
gs
add
jle
pop
sbb
and
mov
cld
in
lea
push
in
or
aas
or
cld
mov
inc
push
cmp
inc
jecxz
in
scas
or
push
push
add
sbbl
incl
and
in
int
inc
das
add
ror
in
int
loopne
add
out
xor
push
jg
js
push
xor
mov
sarl
dec
jge
ret
cltd
xchg
mov
lea
aam
pop
daa
popa
pop
mov
jl
pop
getsec
lea
xchg
rorb
cli
xchg
dec
cmpsl
jns
dec
sahf
add
test
or
jae
scas
inc
sbbl
push
cmp
jmp
mov
inc
les
push
cli
hlt
into
insb
push
xchg
cmp
clc
pop
lods
xor
rcrl
ja
dec
clc
mov
xchg
in
outsb
std
mov
out
rcrl
or
sarl
cwtl
and
inc
outsl
pop
inc
int3
cld
pop
lods
subb
adc
loopne
fldenv
pop
xchg
pop
mov
fcompl
in
outsl
xchg
ja
aaa
cmp
adc
add
xchg
jns
xchg
popa
cmp
cli
cmp
test
test
xor
add
jae
lcall
js
adc
or
imull
in
mov
es
jmp
pop
push
outsl
icebp
fs
xchg
insl
cmc
fmul
in
mov
jno
sbb
lock
sahf
xor
gs
fsts
dec
or
jno
mov
lds
out
jo
inc
sub
ljmp
cmp
stos
push
cmpsw
sub
add
mov
jl
aas
xchg
fnsave
mov
loope
mov
sbb
clc
daa
out
subb
sub
insl
pop
popa
test
repz
hlt
push
pop
and
push
das
lret
mov
jle
popa
adc
push
repz
sar
sub
pop
adc
sub
sbb
fmull
aam
je
popf
inc
test
add
sahf
pusha
push
mov
leave
jl
mov
sbb
mov
leave
popf
cmp
push
gs
dec
pop
pop
or
lods
inc
test
dec
out
lds
test
shlb
rorb
pop
addl
push
cmpsb
push
push
aam
mov
es
xchg
ret
cmpsb
add
std
rorl
xchg
mov
js
lods
ss
sub
cmp
dec
adc
cmp
rorb
imul
test
nop
popa
rcr
dec
scas
push
mov
xchg
or
shlb
inc
lds
mov
mov
push
ficoms
inc
daa
inc
or
cmp
mov
inc
cmp
daa
jg
and
pop
xchg
xchg
mov
aas
add
jne
arpl
push
in
jb
dec
gs
lods
inc
push
sbb
out
cmp
les
xchg
cmpsb
fs
lret
cmp
add
or
sbb
add
gs
orb
pop
push
jg
sbb
fcompl
and
sbb
data16
loope
dec
push
dec
fsub
sti
xchg
cltd
int
jne
inc
int
repnz
stos
andb
in
data16
add
adc
mov
cmpsb
mov
lret
dec
outsb
inc
xchg
jecxz
ljmp
test
fs
jmp
xor
xchg
sub
cmp
rcrb
sub
hlt
lret
dec
sbb
int3
inc
and
push
xchg
insl
pop
data16
int
test
adc
std
in
pop
out
test
pop
cmc
ja
ja
pop
fisubl
int3
xor
mov
insl
das
mov
sub
popf
jns
dec
xchg
xor
or
sub
outsl
addr16
fsubrl
mov
clc
and
fadd
mov
jns
imul
jecxz
xchg
mov
jg,pt
or
repnz
adc
push
arpl
cmpsb
lds
repz
or
in
pop
repnz
or
sub
fistps
inc
mov
je
push
push
leave
mov
or
cli
aas
pop
movsb
loop
mov
loopew
imul
dec
push
sub
mov
stos
sub
cli
push
adc
outsl
mov
out
test
xor
xorb
pop
push
loope
jmp
loopne
inc
stc
dec
sub
std
clc
aas
jge
sbbl
dec
xchg
add
xchg
adc
add
xchg
and
ja
scas
cmp
xchg
add
xor
into
pop
cmp
mov
fs
andb
adc
xlat
cwtl
mov
xor
mov
dec
arpl
dec
int
push
fldl
xchg
outsb
iret
pop
rorb
shl
mov
pop
pop
jae
mov
test
sti
mov
movsb
mov
inc
fwait
jae
push
into
or
andl
arpl
ret
popa
xlat
mov
bnd
loopne
sub
in
pop
jl
rolb
hlt
les
push
ljmp
pop
mov
stc
js
jae
xor
inc
mov
out
ret
cmp
push
or
or
mov
and
ja
mov
and
ja
push
add
xor
jnp
lret
sbb
or
xchg
mov
xlat
inc
mov
inc
mov
cli
and
push
or
jb
pop
out
lock
and
push
inc
push
cmpsl
repz
push
sbb
aas
fstp
jle
mov
sbb
shll
loope
mov
mov
lock
push
stc
pop
push
leave
push
fnstenv
jg
xor
add
sub
fcomp
clc
mov
jo
add
jne
dec
loop
sub
clc
out
test
pop
sub
outsb
sbbb
jns
out
clc
out
lret
jnp
adc
fidivs
mov
cmp
jmp
neg
mov
push
and
in
lock
rcrb
or
cmpsl
and
ljmp
rcrb
aaa
add
shl
shrb
pop
shlb
ljmp
xor
mov
fdivl
pop
stos
popa
inc
in
and
xor
jmp
xor
out
addr16
jp
mov
xchg
cmp
cmpsb
fsubs
dec
pop
test
cmp
mov
mov
push
fwait
mov
mov
mov
cltd
daa
int
pop
insb
push
jle
cmp
mov
nop
xorl
mov
and
jl
fdivl
negb
test
insl
mov
insl
loop
ret
xchg
pop
mov
into
int
xlat
test
sub
xor
xor
repz
sbb
pop
clc
out
aam
das
sahf
jmp
andb
xchg
push
dec
jb
and
test
xchg
out
enter
cmp
ret
mov
out
add
test
loope
push
into
push
pop
xchg
or
or
push
xchg
sub
add
jecxz
fiadds
push
mov
data16
mov
add
bnd
mov
sbbb
addr16
and
pop
and
scas
jmp
cmp
iret
push
cmpl
xchg
adc
push
jo
xor
xchg
inc
xor
mov
daa
dec
pop
pop
dec
das
jnp
cmp
lret
pop
dec
stos
push
and
ret
dec
xchg
in
cmc
mov
cmp
adc
xchg
cmp
xchg
push
pushf
adc
sbb
push
lds
mov
add
shl
rcll
inc
mov
mov
or
jecxz
jb
push
call
xor
or
jo
inc
mov
lods
hlt
out
and
je
xchg
mov
mov
lods
out
mov
xchg
test
loop
push
pop
imul
dec
push
and
repnz
inc
cmpsl
cmp
fisubs
dec
dec
call
fiaddl
mov
test
rorl
xor
push
loope
shrb
jnp
pop
sub
push
mov
setne
ror
pop
or
jp
lahf
imul
or
jo
inc
pop
push
cmc
or
jns
cltd
test
cli
mov
or
arpl
dec
sub
and
inc
mov
int3
in
aam
xor
bound
xchg
inc
fimuls
dec
int3
push
dec
mov
jne
addr16
xabort
movsl
adc
push
jne
outsb
ljmp
test
sti
mov
mov
xchg
imul
inc
add
insb
pop
movsl
sub
xor
mov
or
xor
out
pop
js
cs
jns
int
inc
aad
rcrl
jbe
fstps
xor
jbe
ret
push
mov
adc
cmp
daa
pushf
adc
inc
sti
cmp
lahf
fisubrl
addr16
in
mov
mov
cmp
pop
xchg
arpl
jno
add
cmpsl
pop
sub
stc
jle
xchg
pop
xchg
repnz
call
mov
es
xchg
enter
gs
rclb
scas
ss
mov
mov
mov
stos
cmp
dec
stc
gs
les
lea
scas
andl
ds
aas
xchg
test
cmp
mov
test
mov
inc
cmp
mov
jnp
or
popf
leave
jno
jl
fadd
mov
rorl
andl
xor
xchg
adc
mov
test
add
clc
mov
fists
pop
in
cmc
xchg
and
pop
xlat
dec
jp
push
lret
adc
bound
sbb
xchg
cmp
push
icebp
cs
jmp
rclb
sahf
movsb
testb
add
mov
pusha
mov
ljmp
push
in
xchg
sbb
in
add
jno
cmpsl
lcall
cmp
fnstcw
sub
out
push
jp
rol
cmpsl
xor
fcomi
imul
imul
adc
nop
sti
fcmovnu
add
mov
cmp
inc
mov
test
nop
push
out
or
outsb
or
in
pmaxub
outsb
jle
adc
dec
sbb
cmp
adc
lret
test
mov
adc
sti
call
test
cld
inc
imul
adc
ss
or
lods
fcomp
or
stos
mov
sbb
shrl
imul
and
dec
je
xchg
and
and
nop
push
dec
sbb
mov
cmp
rolb
daa
popa
je
mov
cmp
cltd
sub
lods
mov
cmp
clc
xor
movsl
mov
std
push
sbb
mov
lods
repz
das
test
loop
inc
inc
mov
shll
loopne
out
adc
sbb
lcall
jle
add
outsb
ret
push
dec
lret
popf
out
mov
jno
sub
add
and
inc
sbb
ja
mov
inc
cmpsl
or
fists
aad
mov
cmp
mov
adc
xor
mov
jge
dec
lods
and
dec
lds
jge
jnp
loopne
cwtl
outsl
pop
or
sti
test
xor
sub
dec
cwtl
cmpsl
push
jbe
clc
add
movb
adc
mov
mov
arpl
or
fs
inc
stos
lret
pop
jae
inc
add
repz
stc
mov
sar
icebp
mov
pop
rclb
clc
loope
mov
cmp
mov
push
lds
dec
daa
dec
nop
mov
dec
mov
pushl
mov
push
lds
fisubl
sti
scas
stos
iret
pop
dec
sub
jg
adc
cmc
flds
out
sahf
lret
test
cmc
ja
nop
dec
mov
mov
pushf
mov
repnz
lock
jle
push
or
mov
cmp
mov
movsl
xchg
test
out
shl
xor
and
andl
pop
adc
fiadds
fldl
mov
cmp
adc
aaa
popf
int3
mov
leave
enter
pop
xor
sub
xchg
out
cmp
xor
mov
or
les
mov
adc
mov
mov
and
jge
mov
bound
sub
sti
ss
jo
lcall
bound
lock
pop
mov
and
mov
cmpsl
daa
mov
je
rcl
sub
adc
cmp
and
cmp
cs
repnz
jae
sub
xlat
push
jge
mov
into
jb
scas
pop
fs
rcrl
sbb
inc
insl
cmc
push
call
rcrl
jmp
sub
add
jp
aam
pop
adc
mov
xchg
sub
add
addr16
cmp
mov
ja
sub
test
mov
push
mov
sbb
lods
lods
sbb
mov
jp
lods
lea
leave
xchg
sti
jb
fisubrs
out
mov
ss
test
scas
mov
add
cld
movl
out
push
in
shrl
icebp
and
jle
cmp
sti
insl
mov
and
dec
or
cmpl
jbe
scas
sub
jb
repnz
testb
xor
pop
jae
and
push
aam
push
andl
dec
jmp
xchg
mov
cmp
aaa
mov
out
dec
stos
mov
call
std
adc
rorb
sti
sti
addr16
or
hlt
in
or
hlt
ljmp
jae
push
adc
rorb
jp
movb
cmp
fcmovu
lret
andb
jecxz
cmp
fstps
push
lods
das
.byte
.byte
stc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
leave
into
out
cld
test
lock
add
mov
mov
pushl
mov
pop
mov
add
add
add
push
and
pop
add
call
mov
shll
std
repnz
sar
lahf
in
mov
mov
call
and
movb
fstps
cmp
jo
push
pop
pop
pop
popl
mov
jp
mov
sub
push
and
pop
cmp
jne
push
call
xchg
popf
adc
xor
pop
pop
jmp
ss
movsb
or
clc
xchg
push
jmp
sbb
inc
out
aam
jb
pop
jmp
mov
cmp
xchg
pop
add
and
cmc
inc
ljmp
jb
cmp
ljmp
pop
enter
mov
ret
cld
incb
popf
mov
add
and
movsb
rcl
dec
xor
sbb
inc
cmp
addb
loopne
sub
sahf
jne
js
sub
popf
in
xorb
or
pop
pushf
xlat
cwtl
pop
je
ds
cmc
ss
xor
push
data16
jbe
mov
inc
mov
jnp
adcb
into
enter
sbb
cmpsl
mov
sbb
popf
enter
imul
sbb
cmpsl
into
xor
cmc
inc
xchg
cmp
inc
scas
and
or
and
push
fnsave
add
inc
dec
adc
cwtl
cli
mov
sbb
movsl
mov
test
adc
fstps
or
fcomi
imul
sub
dec
xchg
out
pop
outsl
jecxz
and
test
mov
sahf
sub
jl
out
icebp
mov
sahf
push
cmpsb
push
loopne
jmp
in
out
jb
jne
stc
inc
jne
repnz
out
jb
dec
insl
mov
jle
test
push
pushf
jmp
inc
outsl
jl
out
dec
ja
mov
shl
ret
loop
mov
sbb
xor
jo
pushf
push
add
push
fstpt
add
cmp
sbb
aaa
mov
ret
cmpb
jno
fstps
push
adc
fcoml
add
add
out
or
pop
icebp
jo
addr16
out
pop
je
jne
add
inc
cli
mov
or
inc
or
mov
loope
or
and
dec
enter
sbb
cmp
xchg
sub
loopne
pop
jnp
sub
push
sub
jne
xorl
sub
ret
dec
jl
push
sbb
cltd
outsb
jecxz
aaa
rolb
xchg
aaa
sahf
mov
pusha
pop
andb
jmp
std
xor
or
repnz
jae
sbb
push
ret
cmpsl
mov
cld
test
or
inc
mov
pop
push
enter
jg
add
dec
mov
test
iret
jg
mov
in
jg
repz
std
stos
jle
mov
inc
stos
push
or
lret
shll
cmpsb
and
dec
leave
insb
dec
pop
dec
mov
add
and
cmp
cld
repnz
orl
mov
call
adc
jno
sub
insl
dec
or
test
jg
lock
jb
and
out
mov
or
adc
lock
stc
stos
or
imull
or
sub
incl
pop
cltd
jnp
mov
xchg
fcoml
gs
push
push
bound
xor
sbb
fcompl
call
push
sbbb
std
adcb
dec
xchg
xor
and
cwtl
fisubs
repz
fdivl
mov
xchg
dec
es
jecxz
call
je
fcoml
inc
lods
aaa
mov
nop
mov
lcall
pop
in
insb
fsub
mov
push
jg
mov
stos
add
aaa
insb
mov
fcoml
xor
mov
wrmsr
cmp
fdivrl
pushl
cmp
fsubl
mov
ljmp
mov
mov
faddl
mov
fcompl
or
or
jmp
daa
xchg
faddl
xchg
faddl
inc
add
aaa
or
cmpsl
mov
or
sub
pop
pop
xor
mov
loop
cmp
fdivrl
fldcw
sti
mov
fldcw
lret
push
fisubrs
in
lds
into
xchg
fwait
add
pop
adc
jmp
fsubl
mov
add
cmp
pop
xor
mov
repnz
cmp
sbb
jp
add
ja
repnz
cmp
call
faddl
popl
fdivl
test
add
push
aaa
and
mov
add
aaa
jp
fdivl
mov
fdivl
mov
sbb
jnp
cmpsl
aam
sti
lahf
mov
gs
cltd
and
inc
sub
jmp
icebp
out
int3
xchg
jmp
pusha
mov
sub
jmp
adc
add
int3
xchg
jmp
shlb
bound
aad
push
add
pushf
push
add
cs
aas
xor
jb
jmp
loop
xor
and
movsl
cmp
xorb
enter
aas
xor
jb
jmp
in
adc
cmp
xorb
enter
cmpsb
das
inc
sub
jmp
in
and
pop
addb
dec
mov
fs
aad
xchg
fdivl
xchg
mov
cmp
aad
push
add
jne
add
cs
and
fsub
mov
decl
push
xchg
cmpsl
dec
lods
pavgb
lds
cld
mov
and
sar
add
enter
sbb
fdivrl
and
fmulp
les
add
enter
sbb
fdivl
pop
sti
mov
fdivl
mov
arpl
fldenv
fdivrl
mov
call
bound
push
leave
scas
pop
xor
aaa
or
mov
xor
aaa
pminsw
push
mov
add
aaa
or
add
aaa
cli
imul
xchg
xchg
adcb
daa
or
xchg
jb
cmp
pop
das
ds
into
das
ljmpw
cmp
test
es
js
or
and
pop
ds
xor
jmp
add
xchg
test
ss
mov
cmp
std
loope
shlb
xchg
xor
movsb
pop
fistps
movsb
or
xchg
test
xor
adc
add
out
shlb
fdivl
mov
fdivl
mov
fdivl
mov
fdivl
mov
pushl
cwtl
incl
stc
xchg
fdiv
xchg
fdivl
mov
fnsave
mov
fdivl
mov
fdivl
mov
fdivl
mov
fsubrl
js
sub
sub
repz
push
clc
mov
push
adc
xchg
lods
sub
rorb
ffree
sahf
mov
inc
das
pop
add
dec
lods
in
cltd
dec
daa
repz
mov
mov
dec
jl
fnstsw
adc
int
ljmp
ljmp
add
add
jo
sbb
gs
adc
jne
repz
fdivrl
loop
sbb
ret
jg
jo
cwtl
xchg
addl
inc
mov
outsb
scas
adcl
std
andl
push
mov
cmc
scas
ljmp
or
push
ret
jmp
insl
pop
jns
inc
adc
std
ret
lahf
adc
mov
js
insb
sbb
sub
inc
int
cmp
adc
pop
fwait
dec
adc
sub
push
mov
push
mov
scas
ficoms
in
hlt
xorl
lods
pop
mov
sahf
pop
mov
mov
movl
inc
cmp
inc
xlat
movsl
inc
add
push
fwait
lcall
dec
loopne
lds
nop
fimull
test
in
test
add
xorb
ljmp
jns
imul
stos
mov
xor
popa
cs
mov
pusha
clc
add
jecxz
loop
fwait
add
xor
xor
loopne
pop
les
mov
pop
jo
sub
test
push
mov
imul
mov
dec
arpl
scas
add
mov
push
inc
inc
jp
jne
xor
in
cwtl
push
mov
mov
aaa
xchg
fdivl
sbb
fdivr
sbb
addr16
in
lock
cld
push
or
mov
xor
jae
lods
iret
fisubl
stos
xchg
fldt
rcll
sub
popf
mov
mov
mov
inc
loop
cld
je
test
mov
cltd
testb
push
cmp
frstor
popa
and
jl
into
inc
xchg
lret
xchg
fistpll
cmp
cmpb
jb
pop
xor
cltd
push
dec
adc
and
fcomi
sbb
xchg
dec
or
out
mov
ds
lock
xor
fisubl
call
or
add
inc
sti
adcl
push
xor
lods
leave
in
ficompl
xchg
or
add
insl
xchg
lret
clc
aad
lret
mov
jmp
cmpsl
cwtl
jg
scas
adc
out
dec
mov
and
add
add
add
pop
push
add
pop
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
pop
push
add
add
add
pop
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
das
mov
mov
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
inc
push
sbb
inc
arpl
xchg
outsb
mov
lds
loop
sbb
inc
into
cmp
xchg
and
add
mov
mov
in
rolb
rorb
push
add
je
addr16
aad
iret
sub
cmp
pusha
aam
mov
pop
mov
lock
lea
xor
mov
xchg
sbb
adc
xchg
dec
loopne
jnp
dec
nop
scas
jmp
fwait
sahf
xlat
jno
adc
cmp
test
mov
sahf
xor
les
push
aad
pop
cmpsl
cmc
cmp
dec
push
xchg
bnd
subb
push
es
push
fistpll
gs
mov
xchg
insb
sbbb
pop
push
movsl
jbe
cmp
add
lea
ret
leave
les
enter
mov
test
jmp
sbb
jbe
adc
push
adcb
push
inc
jbe
lock
xor
dec
loop
mov
and
xor
pop
add
aad
mov
and
js
pop
push
in
mov
push
insb
insb
xchg
mov
pop
shl
cmp
add
shlb
pop
sbbb
or
nop
inc
mov
jmp
cmp
push
mov
xchg
jne
xchg
push
mov
bound
xor
mov
xchg
dec
repz
and
xchg
inc
lock
andl
mov
mov
loop
cmp
vunpckhps
int
shll
xor
mov
pop
dec
fmulp
dec
in
mov
js
jge
rorl
adc
lcall
mov
fs
cmp
pop
insl
shll
popa
enter
push
shll
xchg
testb
sarl
fisubl
dec
ss
add
sub
sub
push
test
call
sub
push
enter
lret
test
inc
mov
sbb
out
push
jecxz
push
pushf
mov
push
repz
mov
notl
in
sbb
outsb
stc
and
push
icebp
sub
les
insl
or
mov
insl
adc
enter
jo
xorl
push
lds
or
pop
das
dec
mov
and
and
fwait
mov
cmp
int3
and
popa
scas
jmp
adc
xor
fcoml
jo
out
lods
movsb
das
cmp
xchg
test
dec
xor
mov
mov
in
leave
ljmp
ja
xlat
xor
mov
das
ret
addr16
aad
or
out
cmp
add
xor
inc
mov
mov
and
and
mov
and
movsl
lret
loope
or
fstpt
sub
loop
xor
dec
and
in
pop
inc
fnstsw
dec
mov
arpl
xchg
stos
push
jge
mov
lds
out
mov
das
or
cmp
je
ret
popa
jb
movsb
or
je
and
test
jno
je
sahf
fcmovnu
push
inc
insb
mov
outsl
pop
dec
and
xor
cmp
mov
jecxz
sahf
xchg
sbb
outsb
add
aaa
adc
nop
stos
insb
mov
movsl
adc
push
or
movsl
xor
clc
pushf
and
js
add
mov
mov
icebp
ljmp
lds
mov
mov
xor
pop
pushl
loope
sti
adc
and
aaa
out
mov
test
xchg
push
clc
pop
add
cmp
mov
fstps
enter
scas
lret
int3
mov
adc
sub
xchg
or
and
int
push
sub
insl
jecxz
push
mov
mov
mov
pop
movsb
das
inc
cmp
cmp
mull
mov
pop
out
pop
mov
jl
or
into
sarl
mov
push
je
lret
cmp
test
xchg
dec
sub
js
divl
dec
lahf
adc
and
mov
pop
sbb
leave
xor
dec
cmpsb
insl
xor
or
test
clc
cmp
orl
pop
mov
jnp
push
in
xchg
fsubr
inc
leave
subb
repz
lds
popf
sub
pop
xlat
sahf
mov
iret
jb
cmp
push
das
mov
adcb
mov
sub
pop
ljmp
stos
jmp
data16
xchg
xchg
rcrl
cmp
out
add
xchg
pop
add
cld
mov
inc
mov
jne
mov
mov
mov
xor
pop
in
movsb
outsb
lock
xor
push
pop
xchg
lahf
add
nop
pop
mov
idivb
scas
sbb
or
ret
iret
je
int3
loop
cmpl
cmp
mov
dec
cs
shrl
outsl
xor
cwtl
cmp
jecxz
cmp
inc
adc
in
push
push
jge
sarw
xor
sarl
mov
jg
data16
or
scas
mov
jnp
mov
pop
int
pop
mov
int3
and
mov
je
jge
cmp
inc
lcall
cmp
xor
mov
add
xchg
jmp
mov
pop
cmp
push
mov
rol
push
iret
lock
mov
scas
outsl
jo
adcb
push
call
xor
sar
inc
inc
test
mov
sbb
stos
clc
lods
mov
add
enter
add
in
fs
hlt
je
xor
test
cwtl
scas
in
cmp
loope
xchg
jb
adc
jecxz
xlat
push
cmp
jg
sbb
inc
int
leave
sbb
fidivrs
cmp
xchg
in
inc
rclb
adc
cmp
lea
xor
sbb
popf
add
and
and
in
jns
sub
and
loopne
dec
shll
fwait
cmp
test
xor
mov
scas
repz
or
jae
jecxz
mov
mov
mov
mov
rorb
adc
jo
popf
data16
ss
out
and
out
mov
cmp
ficoms
clc
mov
dec
aad
loope
movsb
mov
push
aam
add
call
sbb
enter
es
test
sbb
iret
adc
test
and
inc
icebp
or
mov
mov
iret
or
fldenv
add
jle
xor
adc
ss
jne
popf
mov
cmp
sbb
scas
xchg
lret
test
packuswb
mov
sub
mov
push
stos
or
lea
dec
andb
lcall
call
xor
outsb
mov
test
ret
mov
movb
cmp
jnp
mov
out
shll
mov
fsts
jle
bound
push
xor
cmpsl
lret
insl
jne
jp
out
scas
les
jl
dec
fnsave
fnsave
adc
movsb
shll
mov
cltd
sbb
or
das
adc
adc
ss
cld
pop
xchg
stos
cmp
push
push
push
jecxz
stos
inc
cmc
fidivl
out
push
mov
sbb
loope
int3
and
nop
cwtl
je
pusha
mov
les
cmp
lds
lods
addr16
clc
es
daa
in
sbbb
and
jg
jb
es
rcll
or
mov
xorb
jnp
imul
je
popl
movsb
push
mov
lret
pop
add
lds
ret
dec
and
int
and
pop
pop
fcomps
mov
or
jo
roll
scas
test
stos
sbb
std
popf
or
sbb
sub
adc
xchg
mov
or
testl
xchg
add
mov
sbb
pop
pop
add
xchg
mov
xchg
cltd
pop
lock
cmp
adc
mov
mov
lods
mov
add
ljmp
adc
jge
xchg
movsl
imul
aad
test
xlat
lods
pop
dec
icebp
test
js
jecxz
cli
xchg
repz
or
sbb
imul
jno
stos
in
push
lock
sbb
xor
fnstsw
sub
pop
and
cmp
fstpl
jp
iret
xchg
call
fsubr
jge
cmp
das
mov
call
bound
mov
jmp
imul
jo
lret
icebp
leave
lret
inc
adc
mov
scas
aaa
jne
in
xlat
inc
ja
push
jo
jg
mov
sbb
xchg
mov
or
in
std
mov
das
push
adc
add
test
mov
sub
jge
push
test
leave
sti
sbb
movl
mov
pop
add
das
test
int3
in
sbb
xor
fistpl
push
cli
mov
add
jbe
lock
jno
jnp
hlt
adc
dec
call
fsin
inc
ss
cli
scas
push
and
nop
sub
or
push
mov
dec
rcrl
jge
add
mov
pop
mov
mov
cmovo
lahf
push
stc
add
sub
pusha
dec
repnz
push
push
fs
mov
inc
xlat
mov
pop
arpl
inc
and
xchg
xchg
out
push
gs
out
lcall
inc
sbb
lods
rorb
dec
inc
xor
scas
add
mov
in
xchg
bound
sbb
loopne
dec
jae
movsb
out
inc
icebp
xor
sti
dec
ficoms
mov
les
jmp
lods
sub
jg
sub
mov
pop
xchg
adc
sub
frstor
lret
xor
sbb
mov
xor
fdivs
push
push
jbe
mov
imul
ret
xor
jecxz
xlat
and
test
push
dec
sbb
inc
in
outsl
cmp
sub
sbb
push
pushf
lret
adc
cwtl
cmpsb
fwait
int3
or
mov
icebp
mov
js
stos
mov
xor
jae
outsb
jmp
sti
sbb
lds
int
mov
cli
insb
mov
pop
imul
adc
xchg
xchg
lea
cmp
mov
xchg
pop
inc
push
push
ficoms
popa
rol
ficoms
andb
mov
mov
jo
xchg
je
addr16
out
fwait
leave
jg
fldt
mov
je
iret
scas
das
repnz
cs
shlb
lret
dec
jmp
sbb
sbb
nop
cld
aas
iret
in
xor
mov
cs
ret
or
rclb
das
dec
hlt
push
in
or
scas
test
sub
inc
ljmp
daa
sti
or
mov
mov
mov
lcall
dec
push
mov
lock
or
lret
clc
mov
cmp
adc
lods
or
out
pop
or
pop
jb
outsl
sti
xchg
inc
mov
adc
fs
je
ficoml
nop
pop
loopne
addr16
bound
repz
std
sub
fstpl
loope
call
adc
pushf
icebp
aas
dec
cmc
mov
into
daa
mov
or
lock
sub
mov
imull
leave
fwait
xor
aad
rorb
adcl
subl
sub
sub
sub
push
xchg
cltd
test
lcall
xchg
mov
sub
data16
dec
fdivrl
enter
dec
std
data16
rcr
orb
mov
adc
xchg
insl
mov
orb
sti
out
iret
xor
ja
sub
add
push
sti
dec
xor
repnz
mov
xor
dec
push
out
shrl
mov
pop
arpl
int
fcoml
mov
mov
popa
sbb
lds
mov
jle
jle
xorb
or
test
pop
xlat
mov
pop
ds
sti
inc
stos
sbb
pop
test
sub
mov
pop
add
dec
push
dec
cmp
outsl
movb
add
cmpsl
rcrl
ja
sub
pop
and
icebp
push
das
andl
in
sbb
add
insl
push
dec
push
stc
movsb
and
outsb
shll
jl
addl
push
cltd
stc
push
jle
popf
shrb
test
mov
aaa
push
cmpb
mov
lods
fildl
lret
daa
xor
and
bound
je
dec
sub
div
leave
roll
xor
jecxz
hlt
cwtl
mov
pop
roll
or
std
adc
push
xchg
out
push
mov
cmp
xchg
jp
movsl
push
dec
xchg
insl
jge
ret
or
daa
cmp
shrb
inc
mov
add
jno
sbb
or
lea
pushw
insl
and
loope
fimuls
fmul
xor
xchg
imul
fbld
inc
xor
dec
fcmovne
mov
dec
data16
mov
mov
std
cld
pop
inc
sbb
in
inc
aaa
push
jecxz
int3
mov
jae
ret
call
mov
sarb
xchg
inc
pop
pop
out
mov
sbb
fsubrs
xor
mov
and
sti
or
fisttpll
cwtl
mov
imul
mov
cltd
and
shrb
inc
jecxz
test
ret
stc
dec
sbb
ds
add
push
xor
add
outsl
fisubl
dec
xor
xorb
push
ret
pop
iret
mov
adc
fsub
or
mov
in
adc
repz
in
mov
jb,pt
inc
xchg
mov
mov
arpl
xor
mov
pushf
xor
dec
lds
lock
sbb
loope
call
push
jg
jns
aam
or
push
fistpll
ficomps
push
shl
pop
jg
mov
xor
fadds
in
jle
imul
inc
imul
xor
inc
sub
lret
mov
shr
push
xchg
push
pop
cmp
pop
pop
movsl
dec
xchg
sbb
inc
sbb
xor
ja
and
jmp
out
leave
fbld
adc
add
sub
lret
xor
addr16
outsb
sbb
or
repz
das
mov
dec
jle
sbb
pop
in
pop
fdivl
aam
inc
cmpsb
pop
mov
jnp
push
adc
lock
adc
aaa
push
ret
sub
xor
lods
jmp
xchg
inc
add
add
test
inc
loopne
fisttpl
test
movl
lret
mov
pusha
or
sub
aam
add
aaa
inc
cld
mov
popf
scas
cmp
adc
rclb
xchg
mov
inc
xor
fs
mov
sbb
jmp
push
loopne
mov
rclb
ret
xchg
mov
mov
ljmp
cmp
imul
fwait
adc
fisttpl
xor
inc
movsb
adc
pop
mov
stos
inc
jb
jno
mov
lcall
xchg
test
imul
sub
fcomp
test
cmp
mov
push
testb
pop
pusha
ljmp
fwait
jecxz
pop
xchg
ret
sbb
movsb
js
pop
inc
sub
incl
es
mov
cmp
dec
mov
or
stc
mov
jmp
xchg
inc
in
hlt
xor
push
test
pop
jp
adc
sub
aad
int
scas
out
ror
push
mov
int3
filds
lods
dec
testb
das
nop
ficoms
mov
mov
pushf
imul
ret
in
jle
mov
ljmp
inc
mov
add
call
in
adc
jns
add
daa
int3
add
in
dec
stc
cmp
push
push
sub
in
jmp
and
movsb
data16
sub
imul
cmp
push
dec
fcom
loop
xchg
or
and
iret
jge
hlt
lret
je
bound
movsb
push
lds
sahf
or
jmp
aas
push
and
sbb
cmpsl
nop
add
stos
dec
jmp
mov
jmp
xor
daa
jmp
fs
jno
pop
xchg
add
sub
ret
mov
lods
pop
xchg
in
jae
inc
xor
loop
xchg
scas
or
inc
movsb
mov
bound
mov
fcmovu
mov
mov
mov
into
sti
inc
adc
mov
add
fwait
stos
nop
lods
xor
int3
xchg
sub
fsubl
xchg
push
cmpsb
addl
and
shlb
jne
pushf
rorl
jae
mov
filds
xchg
fsubl
sub
push
add
aas
lods
sub
mov
aaa
dec
mov
les
ret
in
fwait
or
sbb
pop
cs
xor
adc
inc
cltd
ss
add
cmp
and
jg
push
jl
mov
les
test
mov
enter
adcb
xchg
xor
sbb
xchg
and
mov
cmp
arpl
push
cltd
bound
push
or
add
jns
push
in
mov
push
enter
adc
xchg
xlat
data16
jb
xor
dec
pop
mov
idivb
sub
pop
pop
push
in
std
sub
inc
testb
inc
pop
movsb
ret
fdivl
div
andb
and
js
in
ljmp
jnp
stos
pop
adc
loope
aam
lods
mov
arpl
adcl
clc
mov
push
pop
shlb
cmpb
fildl
push
and
hlt
test
push
xor
out
pop
enter
lea
add
jecxz
ret
adc
cmp
cmpsb
push
mov
xchg
arpl
gs
pop
es
and
rcr
inc
push
sub
dec
rorl
icebp
js
and
jg
popa
inc
add
mov
push
aad
and
subb
aas
aaa
gs
jne
imul
testb
xchg
adc
fdivl
and
sbb
pop
pop
jns
xchg
aam
mov
mov
jge
cmc
insb
shl
hlt
mov
fisttpll
ja
jl
mov
add
cmpsl
jo
sub
ficomps
add
mov
sub
xchg
sub
int
dec
jecxz
adc
ds
arpl
mov
xchg
mov
out
mov
ja
dec
dec
jbe
subb
lods
je
test
dec
sub
or
scas
outsb
fidivrs
mov
setge
pop
push
mov
jmp
bound
lcall
mov
mov
pop
mov
xchg
xchg
imul
add
repz
lcall
iret
and
mov
and
push
hlt
push
cld
insl
mov
xlat
xchg
xlat
and
int3
adc
fistps
xor
dec
stos
push
dec
and
push
jb
or
pop
das
negb
adc
adc
sub
add
sub
and
cmpsl
test
cltd
fwait
xor
xchg
outsl
cmp
mov
cmp
mov
jae
loopne
jne
mov
in
lds
lea
out
or
adc
negb
mov
jp
adcb
test
cmc
andl
push
inc
mov
lret
mov
lcall
jg
inc
outsl
fs
inc
pop
test
movsb
lea
inc
data16
pop
xchg
push
mov
inc
push
xchg
nop
lahf
jl
testb
cmpsl
sbb
dec
dec
mov
addr16
inc
cwtl
push
xor
gs
add
in
mov
sub
cmp
fprem
outsl
lods
in
hlt
jns
lock
and
out
cmc
clc
gs
xchg
fcompl
adc
jmp
fiaddl
xor
and
jmp
adc
mov
and
hlt
std
cmc
lret
clc
scas
or
out
jne
rcr
inc
xchg
adcl
loope
push
out
inc
fcmovne
xchg
hlt
test
cltd
xor
push
jmp
or
cli
xchg
xor
add
scas
das
outsl
dec
inc
ret
adc
sbb
test
mov
push
jbe
fiaddl
push
stos
int
test
add
and
push
scas
pop
and
sti
cmp
testb
adc
inc
xchg
cltd
pop
stos
aam
push
enter
popf
insl
xor
cmc
sti
xor
add
mov
div
sub
ja
lahf
sbb
mov
nop
mov
or
mov
or
mov
adc
outsl
mov
int3
cld
clc
inc
lcall
xor
sbb
adc
lods
jae
fwait
inc
cli
pop
cs
xor
push
or
xor
lahf
movsl
stos
das
test
jge
outsl
jmp
lea
ja
mov
cmc
or
fildl
sub
jb
mov
shlb
xchg
sub
imul
call
in
sbb
das
push
or
xchg
int
cmpsb
inc
jns
repnz
scas
arpl
roll
xlat
inc
xchg
dec
pop
xor
sti
xor
outsb
mov
pusha
mov
ret
or
jl
sbb
push
iret
push
push
clc
and
mov
xchg
hlt
pop
test
inc
jg
inc
out
inc
arpl
sarl
cmp
in
jle
mov
push
xchg
stos
cmp
sub
mov
scas
pop
lret
fcoml
adc
test
or
mov
fadds
pop
test
sub
in
test
stos
fbld
adc
jmp
shl
jo
rcll
cwtl
or
fistpl
mov
ljmp
cltd
sub
cmp
adc
xchg
roll
xlat
xor
jbe
mov
cmc
and
fsubrl
cmc
pop
insl
mov
or
int3
stos
and
aas
in
pop
xor
sbb
fldenv
arpl
xor
cmp
leave
rorl
mov
ficompl
sbb
ret
push
lret
mov
les
frstor
shrb
pop
mov
setle
fwait
mov
in
cli
inc
jl
and
add
xchg
lret
xor
or
xor
fcomi
xchg
mov
shlb
push
mov
not
call
mov
pop
sbb
fwait
lcall
decl
mov
xchg
arpl
or
adc
scas
push
cmpb
ret
nop
fcmove
dec
xor
sub
or
dec
push
jmp
sub
push
xchg
pop
add
int
fistl
imul
inc
sbb
jg
movsl
inc
sub
and
ret
mov
insb
cld
in
fimuls
outsb
insb
push
sbb
jb
into
pop
mov
nop
les
or
js
mov
mov
sbb
pop
lcall
int
aas
inc
dec
aaa
and
mov
cmc
mov
push
add
cmp
and
push
or
pop
xor
je
xor
pop
jo
mov
jl
cltd
fiadds
outsb
xchg
mov
call
pushf
in
mov
or
stc
xchg
mov
mov
mov
dec
mov
xlat
outsl
ljmp
fsubr
pusha
dec
pop
cmp
pushf
jp
stos
and
faddl
inc
stc
cmc
push
loopne
data16
movsl
scas
sub
sub
ret
lahf
ret
inc
insb
pop
in
pusha
mov
xchg
push
std
adc
test
mov
fwait
outsb
in
sub
out
adc
pop
stos
lret
movl
cli
jnp
or
outsl
pusha
ret
gs
xchg
cmpsl
jmp
test
shrb
or
in
inc
lock
cmpsl
mov
aad
sarb
je
add
addl
shll
dec
pop
inc
add
mov
adc
inc
sbb
repz
test
pop
mov
adc
add
insb
dec
sbb
mov
sub
fcompl
jno
jno
mov
push
xchg
lods
imul
or
clc
mov
xchg
inc
sub
gs
inc
insl
movsl
pop
test
xor
jp
sahf
mov
mov
dec
insb
andb
sub
xchg
add
addr16
xchg
jl
push
imul
mov
mov
mov
sarb
cld
mov
adc
mov
cmpsb
mov
popa
outsl
sub
dec
xchg
jb
fiadds
xchg
bound
movsl
fdivrl
push
insl
test
jns
adc
fsubp
xchg
sbbb
push
jae
rcll
mov
push
or
lret
out
idivb
jno
xchg
inc
mov
and
pop
shrl
test
xchg
push
sarb
inc
negb
push
std
or
mov
out
btr
push
jbe
lock
lods
push
gs
rolb
or
dec
sti
adc
test
jl
movsl
lods
pop
and
sub
inc
addr16
dec
cltd
out
dec
push
xchg
and
jl
dec
xor
add
sar
pinsrw
rcrb
insb
xchg
fs
jno
leave
push
and
cmp
add
and
mov
insb
or
push
test
jl
push
scas
pop
insl
cmpsb
jne
mov
or
mov
and
aam
push
mov
out
or
pop
cli
add
call
clc
mov
jmp
add
mov
dec
aam
loope
mov
adc
jb
xchg
movsb
sub
mov
push
icebp
movsl
adc
inc
stos
ficoms
mov
jnp
pmullw
mov
pop
mov
push
out
outsb
inc
dec
xchg
xor
js
cmpsl
fs
mov
stc
fcmove
das
adc
jns
bnd
aas
xchg
adc
dec
shlb
out
xor
loopne
jb
sbb
mov
mov
push
pop
rorb
add
das
xchg
or
mov
mov
out
sbb
bound
das
or
jns
dec
fmull
jp
in
outsl
push
in
mov
inc
enter
aas
mov
or
and
stos
shlb
das
and
leave
push
mov
dec
adc
push
cmc
fiadds
adc
sti
fsubrs
sub
or
gs
bsr
cmpl
pop
aas
lock
cmc
aam
repnz
sbb
fldl
sti
insb
jp
mov
mov
lock
lret
mul
ds
sbb
stos
cwtl
or
movntq
addr16
push
inc
lret
ud2
rorb
and
lea
sarl
lods
call
sahf
and
and
pop
cmp
lock
mov
xchg
mov
adc
dec
in
int3
sub
sub
movsl
test
xchg
leave
push
js
xlat
add
mov
inc
mov
cli
mov
xor
in
sbb
cmc
insl
nop
rolb
pop
sbb
mov
ds
sbb
lods
xor
hlt
mov
dec
aam
dec
inc
mov
negl
xchg
out
dec
pop
mov
sbb
ret
fwait
mov
test
psubusw
nop
adc
push
jns
push
in
sub
inc
jne
lahf
mov
icebp
push
sub
mov
ljmp
push
loopne
loop
dec
mov
aaa
jbe
mov
mov
pop
aad
loope
inc
xchg
sbb
xchg
test
neg
or
xor
jns
int
mov
popl
push
mov
sub
ljmp
mov
lret
int
and
pusha
sub
mov
lahf
push
xchg
inc
xchg
daa
insl
mov
push
jmp
faddl
cwtl
ficoms
pop
mov
push
inc
mov
jbe
xorb
xchg
out
scas
sti
loope
pop
repnz
or
in
xor
popa
xchg
add
pushw
sub
fs
lcall
repz
cs
fimuls
nop
push
in
lods
or
adc
lods
mul
inc
mov
das
add
test
push
xchg
pop
add
xor
mov
cwtl
inc
and
dec
push
cmp
ja
xchg
rcll
mov
jg
xchg
sub
cwtl
push
or
inc
mov
sub
push
push
popa
pop
or
pop
fisttpll
dec
jae
xchg
lods
cmpsb
lahf
cli
loopne
lret
dec
and
add
rorl
int
mov
jnp
call
sub
xor
mov
push
in
lret
dec
adc
movsb
shll
loopne
xchg
shll
jb
inc
testl
mov
jl
aaa
xor
adc
sub
push
xor
test
xchg
add
pop
inc
cltd
inc
les
and
pop
push
jb
stos
jbe
out
mov
pushf
es
pop
mov
stc
fwait
aad
push
jnp
sbb
push
sub
dec
or
adc
stos
jo
mov
sub
and
jmp
jl
push
or
push
mov
pop
mov
jmp
out
sahf
xor
cmp
popw
aam
mov
rolb
aad
jg
std
out
ficoms
pop
dec
push
lock
jns
adc
add
sub
dec
sbb
jg
jmp
fcomps
in
cli
sub
adc
or
movsl
adc
lods
jle
or
dec
popf
loop
adc
in
mov
sub
ja
cmp
jne
cmp
lods
sbb
xchg
scas
clc
popa
arpl
testl
ret
inc
fstps
lods
cmpsb
jmp
lds
xchg
mov
test
mov
arpl
jle
adc
xchg
mov
outsl
cwtl
shll
std
xor
lds
rcll
movsl
add
dec
rol
pop
out
inc
pusha
cli
aad
adcl
pushf
inc
stc
sub
test
pop
pusha
add
mov
aas
lods
iret
jg
pop
push
shll
pop
lret
test
imul
xchg
and
rorb
dec
xchg
sbb
add
or
ss
pop
fadds
jae
mov
les
pop
add
add
mov
ficompl
and
xchg
loopne
sbb
insb
movsl
and
mov
icebp
mov
cmp
sbb
mov
mov
sub
push
icebp
push
adc
pop
push
das
fsubrs
add
adc
fcomps
adc
sbb
mov
mov
xchg
pop
pop
or
mov
cwtl
pop
clc
jp
xchg
mov
stc
inc
xor
lea
iret
cs
dec
inc
imul
gs
dec
add
xchg
ljmp
sub
mov
or
xor
jl
jno
inc
icebp
sarb
in
aad
mov
in
mov
out
mov
iret
or
jo
dec
mov
popf
push
sbb
fdivrs
xchg
enter
mov
xchg
int
mov
rclb
inc
fs
mov
ds
hlt
mov
daa
sbb
sti
mov
pop
jle
pusha
cmp
add
mov
cli
push
dec
jle
pop
dec
fs
mov
popa
dec
jb
outsl
lahf
out
fdiv
stc
jnp
cmp
pop
cmc
arpl
and
ffreep
pop
xchg
stc
sbb
ficomps
cmp
push
shl
stc
xchg
or
mov
loop
cmp
scas
push
out
enter
inc
sub
fcomps
cld
in
add
or
sbb
call
loop
in
test
sub
jb
xchg
and
cmp
arpl
insb
mov
jp
movsl
push
mov
mov
dec
repnz
jg
push
sbb
bswap
mov
or
add
mov
pop
inc
mov
or
jne
enter
mov
jb
out
sbb
mov
mov
push
dec
sub
jg
jle
pop
outsl
mov
add
inc
xor
inc
dec
fnstenv
dec
sets
cmpsb
dec
cmp
sbb
jae
fiadds
in
push
aad
out
add
sahf
xor
xor
add
js
test
lock
cmc
shrb
daa
leave
ja
test
pop
push
mov
lcall
out
shlb
pop
out
cmpsl
insl
sbb
rcll
cmpsb
xorb
mov
xor
lcall
imul
mov
xchg
and
jle
outsb
shrb
or
inc
ficomps
jns
mov
icebp
test
push
loope
lds
pop
dec
mov
adc
fcmovne
cltd
es
sbb
inc
dec
sarb
fs
xor
mov
sbb
aad
push
mov
sub
subl
insb
gs
inc
cmp
shrb
pop
bound
jno
inc
mov
jecxz
mov
or
inc
dec
add
je
insb
mov
cmp
and
xchg
cld
mov
test
sub
and
cltd
mov
and
clc
mov
mov
sahf
and
or
add
jae
lea
jl
int3
mov
adcl
dec
or
jp
add
aaa
dec
lret
sbb
lahf
in
cs
sbb
jl
xchg
lret
jle
sti
adc
inc
xchg
insl
sub
sub
add
dec
arpl
stc
sub
mov
addr16
sbb
sub
fcmovnbe
lds
cmp
repnz
and
jnp
pop
mov
mov
jmp
sbb
je
stc
fidivs
push
fstps
xchg
fnstenv
insl
jl
cmpsb
mov
sarl
repnz
ljmp
add
in
xchg
es
loop
movsb
mov
shll
mov
adc
iret
lret
sub
das
mov
mov
je
inc
sub
pop
push
lock
shr
repnz
iret
inc
xchg
sub
imul
cmpb
and
enter
out
xchg
lea
out
jge
cltd
pop
mov
xchg
mov
dec
xor
es
hlt
cmp
add
rorb
js
dec
adc
in
shlb
icebp
push
popf
jnp
pop
xor
std
sete
setnp
mov
repnz
outsl
xchg
jle
inc
inc
mov
js
push
adc
loopne
add
loop
mov
lods
xchg
fildl
cli
idivl
cmp
jmp
lret
add
aaa
xor
adc
std
mov
or
ljmp
inc
rclb
loopne
pop
lock
jb
jbe
cmp
mov
stos
lahf
int
test
in
and
lods
gs
psubusw
jp
cli
pop
setbe
ret
lcall
rcl
subl
sub
lcall
mov
or
call
bound
mov
or
int3
dec
into
fistpl
inc
xor
pop
int
cmpsb
or
out
sbb
dec
push
xor
les
cld
push
dec
lds
out
dec
sbb
fcomps
mov
dec
jno
and
mov
and
inc
das
dec
push
ljmp
sub
lock
movsb
sbb
out
clc
lret
mov
rorl
dec
imul
lds
leave
hlt
xchg
cltd
cmc
cmp
out
sbb
aas
leave
cli
xor
call
cmpl
hlt
stos
rcr
loop
xchg
and
jae
repnz
std
fcomip
rclb
mov
dec
popf
mov
out
pop
or
ss
insb
mov
xchg
test
jl
jae
xor
out
inc
mov
loopne
push
sub
rcll
jne
insb
stos
addb
in
in
push
add
aaa
imul
fwait
lcall
fs
dec
pop
inc
lods
sbb
adc
lods
pop
shlb
test
push
clc
push
nop
xchg
in
xchg
dec
sbbb
dec
int
push
push
jnp
nop
mov
pushf
aaa
sub
inc
adc
popf
lods
and
push
lret
inc
aad
cmc
frstor
pushf
mov
in
fdivl
mov
arpl
push
and
bound
shl
sbb
cmp
mov
jmp
aad
xchg
adc
lock
mov
push
mov
fsubs
popf
sbb
popf
pop
pop
outsb
and
jo
roll
inc
jge
sbb
ljmp
in
adc
and
in
jno
sahf
sbb
jb
pop
cmpsb
mov
push
int
fnstenv
fs
hlt
out
add
and
pusha
push
outsl
or
std
in
add
sbb
push
sub
aad
and
pop
js
inc
in
sbb
rol
pop
addb
dec
jae
in
loopne
subl
mov
iret
push
xchg
xor
sar
sub
out
sub
xchg
sti
leave
adc
mov
sbb
jecxz
sarb
mov
jle
lret
les
cmp
xor
sub
ret
or
mov
cmc
popf
jnp
ljmp
dec
mov
mov
sub
lea
inc
inc
out
mov
push
add
adcb
ljmp
imul
addr16
push
lods
pop
mov
dec
pushf
pop
ja
les
std
std
leave
and
xor
and
pop
sbb
mov
negb
mov
push
jl
imul
jle
nop
mov
mov
fcmovbe
cmpl
xlat
inc
cmp
push
lea
pop
jo
jp
repnz
scas
xchg
xor
pusha
jl
mov
dec
mov
add
add
cmpb
insl
and
enter
xchg
out
lret
sbbl
sbb
clc
push
notb
mov
push
jae
sub
jo
addr16
int
pop
inc
outsb
cmp
cli
xor
push
or
jnp
movsl
aam
pop
cwtl
push
sub
stos
out
push
fcompl
lods
roll
iret
xchg
je
test
orb
mov
popa
mov
mov
inc
std
shrb
or
ja
or
cmp
push
xchg
mov
mov
inc
out
lret
xchg
ja
lods
mov
pop
je
pop
stos
xchg
faddl
es
jg
add
sahf
in
cmp
adc
dec
stos
jge
xchg
test
xchg
mov
jnp
sbb
push
pop
or
enter
jnp
outsl
testl
subl
int3
mov
lds
pop
add
mov
aaa
mov
add
insb
test
push
adc
xchg
dec
xor
fidivrs
mov
call
lret
repz
xor
jle
aad
stc
xor
shll
xchg
xor
syscall
insb
fwait
jge
mov
sub
cmp
dec
mov
push
shl
sbb
test
xor
insl
daa
cmpsb
in
jmp
dec
xor
push
adc
cmp
jmp
insb
push
aam
movsl
push
inc
or
les
hlt
mov
mov
or
push
stc
mov
xlat
jo
das
mov
cmp
out
add
out
and
addr16
push
js
xor
cltd
jmp
lods
leave
je
pop
sti
mov
cld
fcompl
cwtl
mov
add
sbb
outsl
outsl
add
pop
test
pop
push
or
das
pop
frstor
stc
and
adc
xor
test
aad
test
adcb
sub
pop
jnp
xchg
xor
sbb
sbb
mov
dec
lea
xor
stc
jge
daa
sbb
imul
jb
or
push
and
jecxz
push
cmp
jp
push
imul
out
xorl
cmpb
fnstcw
out
shlb
scas
dec
loopne
shlb
adc
push
jl
subl
fdivl
sub
je
fdivr
inc
sahf
sbb
int3
out
stos
test
popf
mov
sbb
arpl
out
inc
cmp
fs
jge
nop
ja
fisubl
dec
jg
and
xchg
push
lods
cmpsb
decb
and
mov
pop
xchg
dec
mov
and
jmp
lods
inc
sbb
cmp
loopne,pt
mov
shlb
or
movsb
lcall
jb
push
cwtl
repnz
jl
outsl
pop
std
insb
popa
add
sbb
sbb
loopne
mov
fwait
mov
xor
mov
int
and
and
or
mov
sbb
sub
in
push
adc
out
mov
push
jne
cmp
lret
mov
adc
negl
pop
loopne
cltd
fs
add
add
and
sbb
mov
lods
inc
in
in
mov
push
std
popf
test
jne
out
fwait
mov
ds
adc
imul
jb
cs
jecxz
push
pop
loop
sub
icebp
mov
dec
int
outsb
into
jmp
mov
push
leave
cmp
dec
daa
fldt
adc
jl
scas
cli
pop
add
mov
ret
fwait
ret
jno
scas
xchg
imul
mov
cmp
mov
aam
inc
mov
mov
mov
xor
lods
aam
or
jl
xchg
lret
adc
lahf
adcl
fstpl
test
and
jo
addr16
shl
add
mov
lcall
cmpsb
jae
sub
fnsave
out
aad
out
cld
and
in
icebp
xlat
daa
mov
cmpb
testb
sub
or
aad
scas
and
and
pusha
add
in
inc
pusha
insb
dec
add
fidivrl
stc
icebp
mov
dec
sbb
sbb
lcall
hlt
daa
test
mov
add
cwtl
push
das
push
fwait
mov
adcl
inc
in
pop
mov
mov
aad
dec
sbb
push
cmp
iret
jo
mov
adc
repnz
sub
pop
pop
xchg
das
test
sub
mov
dec
inc
fstps
adc
jno
cwtl
test
pop
cmp
mov
lret
lods
adc
jns
mov
cs
mov
jbe
mov
xchg
movb
les
sbb
js
in
in
arpl
inc
cs
dec
lock
pop
xchg
sbb
testb
adc
xor
add
mov
es
cwtl
sub
pop
dec
push
xchg
add
jge
scas
adc
sahf
cmp
scas
sub
adc
sbbb
xchg
inc
push
or
nop
int
jge
iret
sub
inc
dec
xor
jb
je
jl
pushf
push
lods
adc
shll
idivb
inc
xchg
jno
popf
xchg
cwtl
add
leave
mov
mov
pop
fisubl
stc
cmpsl
faddp
out
daa
jno
lds
add
push
dec
add
adc
dec
mov
jns
int3
andb
pop
jo
dec
decl
mov
inc
adcl
pop
stos
icebp
mov
cmp
fldcw
aam
push
in
inc
js
adc
sub
push
fsubr
repnz
mov
jecxz
out
aad
fnstcw
and
push
inc
gs
dec
mov
or
mov
jne
sub
xor
mov
iret
mov
scas
jns
imul
inc
insb
push
push
mov
lret
loop
sahf
sarl
sbb
pushf
lds
je
mov
mov
cmovb
dec
aas
les
clc
sahf
outsb
or
xor
pop
add
aad
iret
and
and
into
mov
sbb
xor
loopne
loop
or
loope
xchg
out
clc
scas
into
pop
movsl
pop
jno
fisubs
in
aaa
sahf
nop
daa
test
xor
pop
call
mov
les
mov
lock
data16
xor
in
dec
mov
jae
pop
orl
imul
lods
or
mov
mov
and
cmpsb
gs
ds
mov
cmc
movsl
push
cmp
stc
out
inc
inc
jns
mov
sahf
xor
je
fisubs
xchg
je
fs
add
test
jnp
cmp
sbb
mov
push
push
lret
icebp
cld
aam
jo
xchg
and
sbb
in
adc
xchg
inc
mov
jno
cmpsl
push
mov
jnp
sbb
dec
dec
xlat
pop
adc
add
stos
nop
xchg
and
add
mov
repnz
lahf
pop
and
xchg
mov
je
mov
or
gs
cmpl
cmp
adc
aad
adc
mov
and
fldt
fucomp
call
pop
rcll
push
adc
sub
gs
leave
test
jmp
filds
xor
aam
es
mov
adc
test
mov
mov
sub
cmpsl
sub
rcll
mov
mov
iret
test
cwtl
push
jecxz
xchg
cmp
xor
push
stos
dec
daa
cmpb
add
imul
cwtl
mov
loope
xchg
inc
jl
mov
je
and
js
adc
arpl
jb
ss
adc
scas
std
mov
das
sbb
and
sub
push
cli
xchg
or
pop
stc
inc
dec
cmp
arpl
outsl
cli
iret
and
fsubl
mov
or
shrb
jne
or
roll
xchg
jne,pt
enter
and
out
sub
pop
dec
pop
scas
mov
stc
mov
lcall
mov
outsl
fnstenv
push
push
cwtl
jge
pop
mov
adcb
imul
xchg
sub
ret
inc
push
sarb
jno
outsb
in
mov
pop
mov
pop
sub
xchg
stc
dec
xchg
faddl
ja
jns
xchg
gs
push
clc
ljmp
js
cs
imul
add
movsb
inc
mov
sti
cmp
or
mov
xchg
ror
adc
dec
sbb
sub
outsb
mov
je
fs
dec
mov
cmp
jns
cmpl
xchg
scas
cld
call
gs
jo
movsl
mov
out
test
jne
xchg
xor
stc
out
insl
jmp
mulb
mov
pop
out
fildl
jno
dec
cli
sahf
mov
adc
xchg
ja
cmpsl
or
fistps
xor
sub
mov
sbb
mov
imul
cmp
dec
js
jmp
inc
add
movsl
mulb
imul
push
inc
lcall
loopne
lcall
divb
mov
mov
jno
jg
add
sub
cmpb
fsubrl
jne
ja
mov
or
pushl
rorl
or
adc
adc
mov
inc
daa
push
std
outsb
in
enter
popa
mov
add
js
imul
int
int3
push
mov
std
iret
xorb
mov
or
jae
enter
repnz
jae
mov
lret
lcall
addr16
faddp
mov
rcrb
sub
sub
sbb
pop
xor
ret
xchg
fcmovnu
leave
cmpsl
jp,pn
or
ret
test
outsb
movsl
ret
jle
adc
pop
je
repnz
dec
push
mov
jne
in
out
mov
push
push
xor
fistpll
or
sub
imul
mov
fwait
push
call
mov
xlat
sub
pushf
adc
bound
aas
scas
mov
mov
xchg
stos
mov
in
jecxz
push
add
sahf
jecxz
pushf
int3
dec
sahf
xchg
rcr
push
mov
movsb
fcmovnb
adc
sub
push
rorb
push
cmpl
sbbb
jb
and
jbe
adc
fisubrl
jb
xchg
xchg
sub
iret
dec
xchg
push
xor
xchg
mov
mov
jne
jecxz
aam
movsl
mov
pushf
test
cli
imul
push
fdivl
dec
mov
movsl
fisubrl
jae
sub
sbb
aam
roll
sub
push
sub
mov
mov
loop
jo
and
jo
mov
ret
adc
jecxz
sub
mov
xchg
and
adc
in
ljmp
jle
movsb
mov
repnz
push
sbbl
fwait
adc
cli
divl
push
je
fsubrp
stc
adc
call
roll
push
xchg
xor
jnp
fcoms
mov
pop
inc
call
push
repnz
push
pop
and
xchg
mov
subl
pop
addr16
fldl
inc
or
xchg
xor
hlt
mov
jbe
pop
dec
mov
cmp
out
ret
cmp
addl
xor
std
daa
test
ret
push
in
mov
in
loop
push
out
fisttpll
mov
mov
int3
mov
inc
xchg
mov
aam
xor
jno
pushf
pusha
push
sbb
and
fists
ret
mov
mov
add
je
rorb
es
test
inc
xlat
xchg
mov
push
fwait
sti
fists
pop
dec
cmp
and
add
sti
ljmp
call
shrb
mov
pop
jl
stos
leave
out
jge
insl
mov
pop
or
lret
sbb
jb
insb
mov
imul
out
pop
addr16
sarb
mov
inc
shlb
sbb
out
or
mov
lret
fisubs
lret
lcall
dec
dec
xorl
inc
pop
ds
pop
xlat
xor
adc
mov
push
jne
jae
imul
das
sub
mov
cmp
mov
jnp
data16
pushf
fldt
es
sahf
int3
add
xchg
cmp
mov
sbb
std
rcll
fdivl
movsl
mov
inc
sbbb
xor
loope
loope
jmp
mov
or
mov
jnp
xchg
add
pop
sbb
es
js
pushf
ficomps
stos
xor
aas
push
cmpsb
jmp
pop
repnz
popf
dec
mov
ret
sahf
mov
dec
sub
addl
in
push
jp
movsb
mov
insl
inc
adc
imul
jle
sbb
and
dec
inc
clc
lods
rcr
mov
out
decb
stc
push
sub
orl
inc
adc
hlt
rolb
xor
loopne
fisttpll
sar
mov
jnp
jno
sbb
fs
xor
orl
add
jge
mov
mov
pop
test
ret
xchg
adc
cmpsb
cltd
fdivs
fsubrs
jl
mov
mov
popf
xor
insl
fcmovnbe
test
cmpsb
punpckldq
mov
xor
lahf
mov
cli
icebp
popl
lcall
movsl
rolb
scas
das
outsb
aam
shll
lret
pop
jne
mov
sbb
mov
out
es
ds
cmp
sbb
in
roll
fsubp
mov
xchg
fisubrl
push
ds
das
and
mov
dec
inc
sahf
add
pop
sbb
lods
fsubrs
push
insb
mov
add
arpl
sbb
pop
inc
jo
pop
out
les
lds
jmp
dec
jno
pop
or
lret
neg
jmp
int3
incb
fdivs
push
dec
push
inc
stos
jg
out
jb
ljmp
or
jg
sbb
jge
push
or
dec
das
jecxz
adc
stos
and
mov
mov
pusha
es
jle
sub
jb
rcrl
adc
pusha
fidivrl
dec
stc
out
movsb
loope
jae
jns
fldenv
jb
iret
int
cli
repz
icebp
cli
mov
stc
sbb
movsb
adc
ljmp
adc
pop
aaa
pop
push
jle
insl
das
inc
mov
cmpsb
jno
push
shll
xchg
mov
push
les
pop
pop
xor
dec
stos
add
movsb
push
or
sarl
add
mov
jb
popa
outsb
jmp
xchg
enter
pop
popa
add
lret
ss
call
jnp
inc
adc
divl
mov
stos
ljmp
ret
test
mov
lahf
sub
or
in
insl
push
jnp
xor
stos
mov
insl
roll
je
insb
pop
out
out
pop
fiadds
mov
shrb
adc
cld
or
sbb
xchg
inc
out
add
lea
dec
pop
fwait
in
add
cmp
dec
or
push
lahf
mov
adc
pop
stc
mov
mov
cmp
or
into
fistpl
mov
sub
pushf
out
mov
mov
pop
lods
out
bound
add
xchg
int3
push
fisttpll
dec
std
dec
mov
push
xchg
fidivrl
xor
aam
js
loopne
movsb
add
dec
and
jmp
push
stos
add
lret
aam
adc
and
xor
lods
inc
or
and
cld
push
sub
push
add
adc
xor
jb
lea
mov
clc
shl
shl
mov
sbb
and
stos
xor
movb
mov
pop
xchg
subb
fsubp
sub
sbb
rclb
je
pop
xor
pop
and
xlat
cmp
jecxz
mov
fmull
cld
addb
or
and
dec
jno
adc
lret
loope
into
adc
sbbb
stc
jae
sbb
mov
jecxz
dec
loope
dec
ret
xchg
pop
mov
arpl
das
or
lods
sub
ret
ja
xor
add
aas
into
loop
outsb
adc
test
adc
mov
orb
test
lret
and
enter
cmp
loope
shrb
fistpl
seta
mov
rcr
movsb
in
xchg
xor
jb
mov
enter
out
movswl
lret
enter
repz
jp
sbb
lock
jge
dec
and
mov
or
push
adc
das
and
fdivrl
mov
mov
js
push
mov
mov
in
ljmp
lods
addr16
testl
jo
cmp
xor
outsl
sarb
cmp
in
jp
cmp
xchg
mov
sub
mov
mov
mov
imul
test
arpl
mov
js
push
push
sub
mov
das
icebp
adc
aad
mov
cmpl
cmp
out
fistpl
shl
xor
scas
and
xchg
out
sbb
insb
sbbl
addr16
xchg
xor
test
incb
pop
xor
mov
add
fistps
mov
xor
ljmp
dec
imul
jle
cmpl
jns
pop
hlt
dec
mov
mov
jge
xchg
sbb
test
add
aad
loop
cmpsl
push
mov
push
mov
shrb
mov
sub
in
pop
xchg
xor
mov
insl
rorl
mov
jle
push
outsb
pop
jns
push
aaa
test
mov
pushf
push
mov
cmp
xchg
xchg
xchg
push
add
int3
jg
pop
push
aaa
cmp
scas
pop
test
inc
cmc
mov
lea
loope
xor
mov
jmp
mov
in
sub
cwtl
sbb
push
out
push
pop
xor
test
push
popf
xlat
popa
lods
inc
or
out
nop
push
inc
adc
and
.byte
