xorb
add
add
je
add
jmp
mov
jmp
pusha
call
push
jmp
lea
lea
stc
clc
sub
jmp
mov
jmp
call
push
int3
int3
int3
int3
jmp
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
movl
jmp
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
stc
sub
cmc
movl
shr
pushf
pushf
pusha
push
mov
jmp
sub
pushf
mov
pushl
mov
mov
pushf
pushf
lea
jmp
pushl
push
dec
adc
bswap
lea
sar
sub
call
mov
mov
pushf
movb
push
mov
lea
jmp
movl
mov
pusha
pushf
lea
jmp
pop
mov
int3
int3
int3
int3
int3
int3
jmp
cmc
pusha
add
jmp
ror
pushl
clc
neg
bt
cmc
bt
jmp
mov
sub
push
jmp
push
mov
pusha
jmp
pushl
mov
movb
pushf
push
jmp
shr
pushf
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
push
inc
pushf
cmc
movb
cmp
add
push
test
not
bt
pusha
movb
clc
xor
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
add
pusha
pushl
bts
sub
sbb
clc
bsr
add
neg
ror
ror
call
bswap
or
test
call
mov
rorl
and
xchg
bswap
lea
movsbl
pusha
mov
not
xchg
pusha
movsbl
mov
lea
push
mov
not
repz
jno
movsbl
stc
bswap
push
adc
shrd
push
bsr
push
setne
push
bts
pushl
jmp
mov
pushl
popl
mov
movw
movw
lea
jmp
mov
clc
add
je
stc
not
pusha
stc
not
bt
sub
pusha
bt
cmc
and
pushf
jmp
lea
jmp
call
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
repz
popl
sbb
mov
adc
inc
movzbw
or
push
movsbw
shld
push
and
inc
push
movzbl
mov
shrd
push
or
xor
rcl
pushl
shrd
push
clc
lea
mov
shl
bswap
bswap
or
bswap
bsf
inc
adc
sar
xor
movzbw
bswap
xchg
lea
dec
test
neg
neg
sbb
mov
call
pusha
sub
pushf
push
shl
call
mov
pushl
push
movb
push
pushf
popl
pushf
pushf
mov
mov
pushl
popl
pushf
lea
jmp
pusha
movl
mov
pushf
movb
movw
jmp
cmc
rol
pushf
movb
pusha
inc
push
jmp
test
add
push
push
pusha
mov
lea
jmp
pushl
popl
push
mov
lea
jmp
jl
pusha
mov
pusha
pushl
movw
pushf
lea
jmp
pusha
stc
cmp
mov
call
mov
push
movb
pushl
bt
rol
pushf
push
pushf
pushf
lea
jmp
call
pushf
mov
mov
pushf
call
push
pusha
mov
pushf
jmp
movb
jmp
daa
pusha
lahf
mov
pushf
inc
bsr
neg
mov
bt
stc
stc
add
call
movl
mov
mov
movb
mov
lea
jmp
call
cmp
clc
sub
je
push
mov
pusha
mov
movw
mov
lea
jmp
call
xchg
movzbw
bt
pushf
lea
mov
ror
mov
movzbw
cmc
ror
movsbw
pushl
popl
pop
movl
ror
mov
cmc
rol
pushf
lea
jmp
rcr
mov
call
sub
bt
test
cbtw
bt
jmp
pushf
inc
jmp
call
jmp
pushf
mov
pusha
pop
call
mov
btr
btr
clc
mov
lea
rcl
rol
pushl
popl
clc
call
pushf
popl
call
pushf
mov
pushf
pushf
lea
jmp
movw
lea
jmp
push
mov
test
stc
test
add
pushf
pushf
popl
jmp
dec
jmp
push
jmp
push
pushf
popl
lea
jle
pusha
pushf
mov
pushl
popl
movb
pushf
push
lea
jmp
rol
stc
call
push
movw
xchg
movzbw
bswap
pushl
not
xchg
lea
jns
pushf
pushl
mov
pop
call
shld
mov
inc
shl
clc
mov
call
mov
pushf
pushl
popl
pushf
push
pusha
lea
jmp
push
jmp
jmp
lea
jmp
call
pushf
mov
pushl
pusha
movb
lea
jmp
pushl
popl
call
pusha
mov
call
call
mov
pushf
lea
jmp
sub
jmp
pusha
mov
jmp
pusha
push
pushl
popl
movl
pushf
movb
lea
jmp
cmc
clc
stc
mov
btr
bswap
bswap
mov
bt
mov
pushl
pushl
popl
pushf
movl
ror
pop
bt
mov
jmp
and
pushl
shl
rol
mov
cmp
test
clc
sub
jmp
mov
pushf
cmc
clc
bt
mov
jmp
pusha
pushf
pushf
pushf
popl
pushf
pushl
popl
movb
mov
pushf
pushl
lea
jmp
pusha
pushf
pusha
mov
mov
jmp
lea
ja
cmp
mov
xor
shr
adc
lahf
lea
xor
adc
rcl
sub
sar
clc
clc
and
lea
neg
not
xor
and
jmp
test
cwtl
push
test
cmc
pushf
sub
pushf
call
rcr
mov
push
rol
mov
stc
clc
cmc
rol
pusha
pushf
movl
movb
lea
jmp
push
lea
ja
bswap
mov
bswap
sub
lahf
lea
jmp
push
pushl
pushf
popl
pusha
pushf
pushl
popl
pushf
mov
lea
jmp
call
call
rep
movzbw
cmc
xor
test
mov
sbb
mov
jmp
mov
sub
mov
bt
pusha
add
push
mov
mov
lea
jmp
pusha
jmp
jmp
mov
push
pusha
lea
jmp
cmc
pushf
sub
call
jmp
btr
bts
setl
lea
jle
push
cmp
push
pushf
mov
lea
ja
xchg
test
cmp
mov
xchg
daa
lea
lea
pushf
sub
aad
lea
push
lea
bt
and
movzbw
sub
movzbw
lea
jg
pushf
mov
pushf
movsbw
pushf
popl
lea
push
jmp
jmp
neg
pushl
sub
sub
jb
clc
bt
pusha
mov
stc
pusha
sub
push
pushf
movb
inc
jmp
lea
jae
pushf
pushf
popl
pushf
pushl
popl
movl
push
lea
jmp
pushf
neg
push
add
pushf
test
pusha
cwtl
stc
call
inc
jnp
mov
stc
mov
pusha
lea
jnp
add
jmp
push
lea
jmp
pushf
movw
pushl
popl
pusha
push
movw
lea
jmp
shl
cwtl
btc
mov
and
mov
cmc
stc
add
pusha
pusha
mov
pushf
movw
movw
lea
jmp
pusha
pushl
xchg
movzbw
mov
jmp
inc
clc
shr
xor
mov
push
mov
pushf
stc
cmc
sub
bt
cmc
bt
shl
lea
jb
mov
pushf
pushf
call
call
jmp
pushl
popl
pushf
mov
movw
pusha
lea
jmp
cld
call
lea
sub
shrd
push
mov
sub
bt
bsf
xor
not
movsbw
movzbl
setle
mov
jmp
pushf
popl
lea
jno
pushf
push
pushl
popl
movb
pushf
movb
lea
jmp
mov
add
bt
stc
push
cmc
ror
lea
jb
pusha
pusha
inc
stc
movb
test
clc
lea
test
mov
jmp
push
pushl
pushl
pusha
mov
bswap
bswap
xchg
xchg
xchg
mov
push
movzbw
repz
popl
shrd
dec
mov
clc
sar
mov
bt
stc
mov
neg
bsr
mov
bswap
mov
pushf
test
pushl
popl
btc
ror
xor
movl
rcr
shld
shr
mov
btr
call
pusha
call
mov
movb
mov
pushf
pushf
pusha
lea
jmp
mov
mov
lea
jmp
pusha
and
mov
pushf
add
pushl
movb
lea
jmp
pusha
pushf
lea
jmp
aas
mov
xchg
shl
mov
adc
rcr
mov
cmp
call
pusha
jmp
call
pusha
movb
mov
ror
bt
add
mov
pushf
pusha
rol
pushf
sub
call
call
mov
mov
rcr
sub
push
bsf
pushl
shr
neg
add
rol
push
shl
rol
neg
movsbw
mov
shrd
movzbw
pushf
and
bswap
call
bsf
bswap
neg
call
push
bswap
movzbl
lea
movb
push
push
lea
jmp
neg
pusha
clc
pusha
add
cmc
push
cwtl
bt
cmp
cmc
call
lea
mov
clc
xor
mov
seto
push
jmp
push
mov
pushf
pushf
pushf
push
lea
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
pusha
jmp
pushl
popl
movb
lea
jmp
movsbl
jmp
mov
ror
jmp
pusha
call
bt
movw
mov
bt
movw
xchg
movzbw
lea
pop
pusha
mov
not
lea
mov
rcr
pushl
pushl
popl
btr
movsbw
bts
movl
btr
btc
mov
call
stc
shr
push
pushf
mov
pushf
mov
pushf
lea
jg
pushf
pushf
pushf
popl
push
push
pushl
popl
pusha
pushf
lea
jmp
pusha
push
mov
mov
lea
jmp
bswap
mov
movsbw
bswap
bswap
lea
call
movsbw
aad
not
mov
call
dec
and
stc
sub
pushf
adc
sub
btr
mov
cmc
add
pushf
push
pushf
mov
pusha
pushf
push
movw
lea
jmp
clc
test
cmc
mov
call
pusha
pusha
pushf
popl
push
pushl
popl
pushf
push
pushl
lea
jmp
bt
sub
stc
push
clc
add
push
jmp
pushf
popl
movb
pushl
popl
pushf
mov
lea
jmp
mov
push
push
push
pushf
popl
jmp
pushl
popl
mov
movw
mov
movb
lea
jmp
mov
lea
lea
mov
clc
rcr
movzbl
not
pushl
popl
jmp
pushf
popl
jo
popl
pushf
pusha
pushf
lea
jmp
add
add
add
adc
ret
add
push
add
sbb
add
inc
add
add
incb
add
inc
add
add
test
adc
inc
pop
sbb
inc
pop
sbb
bound
sbb
ret
add
hlt
push
add
xor
add
sbb
and
adc
sti
adc
xorb
add
adc
inc
das
push
add
adc
sbb
add
sbb
orb
add
incb
add
sbb
add
sbb
and
push
add
inc
add
add
or
adc
bound
add
sbb
inc
or
add
push
add
xor
add
xor
add
cwtl
adc
add
mov
add
verr
sbb
inc
icebp
sbb
add
scas
sldt
add
add
xor
add
push
push
add
scas
verr
xor
add
xor
add
mov
add
xor
add
inc
add
add
xor
add
push
add
ficomps
add
push
push
add
xor
add
gs
add
gs
add
gs
add
gs
add
gs
add
cmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
sbbb
add
hlt
push
add
xchg
push
add
out
sbb
add
add
cmp
add
adc
add
sldt
pop
sbb
and
adc
inc
das
push
add
scas
sldt
push
add
icebp
adc
inc
pop
sbb
out
sbb
ret
add
rcll
add
push
push
add
push
add
sldt
verr
sbb
ret
add
jne
add
lahf
adc
inc
das
push
add
xchg
add
and
adc
ret
add
ficomps
add
mov
add
push
add
hlt
push
add
xor
add
lahf
adc
mov
lods
adc
loop
push
add
verr
push
push
add
sbb
and
adc
inc
mov
add
mov
add
mov
add
test
add
scas
verr
adc
inc
mov
add
jl
add
verr
sbb
ret
add
xor
add
adc
mov
ficomps
add
scas
sldt
out
sbb
add
bound
push
add
rcll
add
push
add
lahf
adc
and
adc
cmp
add
ficomps
add
scas
verr
lds
add
or
add
adc
and
adc
add
push
add
sbb
add
rcll
add
adc
sti
adc
inc
pop
sbb
inc
pop
sbb
cmp
add
push
add
jl
add
xchg
add
inc
or
add
push
add
sbb
sbb
add
adc
add
adc
add
mov
add
out
sbb
add
add
add
rcll
add
adc
inc
das
push
add
sbb
add
adc
loop
push
add
or
adc
inc
das
push
add
xor
add
push
add
lods
adc
ret
add
sti
push
add
xor
add
push
add
adc
ret
add
and
mov
adc
push
cmpsb
pushf
lea
jmp
inc
shr
rol
test
movzbl
neg
cmc
bts
rol
call
mov
mov
mov
lea
jmp
call
and
bts
mov
adc
adc
mov
pusha
cmp
call
add
movb
jmp
push
push
jmp
bt
push
clc
ror
cmp
add
lea
jns
cmc
rol
bt
pusha
call
jmp
bswap
xchg
push
mov
lea
pusha
pop
lea
pushl
std
jmp
call
mov
xchg
movzbw
pusha
mov
movzbw
mov
pusha
bswap
xchg
lea
setb
movsbw
lea
repz
call
shrd
lea
jbe
pusha
push
mov
pusha
call
push
xor
rcl
bsf
mov
neg
mov
test
pushf
cmp
sub
call
pushl
pushl
popl
pushl
lea
jmp
inc
test
mov
ror
mov
movb
pushl
jmp
lahf
stc
sub
rcr
mov
cmc
cmc
xor
pusha
cmc
cmc
push
sub
lea
jl
neg
test
clc
test
stc
lea
cmp
bswap
test
bt
xor
jmp
pusha
cmc
cmc
test
not
mov
not
cmp
and
pushf
pusha
pushf
mov
pushf
pushf
pushf
popl
pushl
call
shr
xor
add
lea
jmp
mov
movb
movl
movb
lea
jmp
add
pushl
mov
push
lea
jmp
call
jmp
mov
pushl
popl
movb
lea
jmp
mov
push
call
pushf
mov
cmc
neg
mov
call
bswap
setb
and
mov
adc
pushl
popl
stc
movl
sbb
bt
btr
mov
btr
sbb
cmp
btr
bswap
push
pushl
add
pushl
xor
neg
xadd
btr
lea
adc
setnp
sbb
xchg
sub
bts
sar
bsf
mov
sar
neg
pusha
mov
and
add
lea
and
call
jmp
mov
mov
push
mov
call
cmp
bt
mov
clc
add
bt
cmc
add
jmp
mov
mov
mov
mov
movb
lea
jmp
pusha
mov
pushl
lea
jmp
add
jmp
bswap
mov
call
movb
mov
pushl
mov
bt
cmc
pushf
xchg
bts
btr
rcl
rcr
mov
pushf
bswap
mov
pushf
bswap
pushl
popl
not
push
movl
rcl
clc
lea
mov
bt
pushl
rol
pushl
mov
pusha
pushf
lea
jmp
pushf
popl
jmp
shrd
stc
stc
sar
mov
test
stc
add
pusha
pushf
push
push
lea
jmp
movsbw
ja
lea
jno
cmp
push
call
dec
stc
clc
bt
pushf
sub
mov
push
mov
pusha
pushl
lea
jmp
inc
push
movb
call
mov
push
movl
push
movw
lea
jmp
mov
bt
pusha
mov
rol
pusha
lea
jmp
pusha
pushf
popl
movzbl
xchg
push
mov
lea
movzbl
mov
push
lea
pushf
call
call
pushf
mov
jmp
pushf
pushf
movb
mov
movb
pusha
movb
mov
call
pusha
lea
jle
pushf
mov
pushf
lea
jmp
xchg
mov
mov
std
std
pushl
cld
pusha
rep
dec
mov
not
movsbw
shl
std
mov
std
std
pushl
popf
movb
lea
jmp
mov
cmp
sub
bt
add
pushf
pushf
popl
pushf
push
push
pushl
popl
pusha
pushl
mov
lea
jmp
mov
pusha
mov
lea
jmp
mov
clc
bswap
mov
lea
movzbw
stc
btr
pushl
popl
lea
jmp
rep
not
inc
shl
mov
btc
mov
stc
pushf
add
jp
popf
pusha
pushf
pusha
lea
jmp
shrd
mov
stc
push
mov
add
pushl
push
lea
jmp
pushf
popl
pushl
pusha
lea
jbe
pusha
pushl
popl
pushf
push
pushl
push
lea
jmp
mov
shld
shld
pushl
popl
sbb
movl
ror
inc
mov
neg
xadd
bswap
btr
cmc
xor
xchg
movw
dec
xor
sar
lea
and
cmc
ror
sub
push
mov
push
lea
pusha
movb
pushf
lea
jmp
mov
mov
mov
jmp
sub
pushf
cmc
jmp
add
bt
bt
xor
stc
cmp
mov
push
pushf
bt
call
clc
add
shld
xor
jb
lea
rcl
rol
shrd
and
bsf
mov
test
clc
sub
jo
push
mov
pushf
pushf
push
pushl
lea
jmp
sub
pusha
shl
jmp
pushf
pusha
pushf
mov
push
pushf
lea
jmp
mov
bt
movb
cmc
mov
cmc
call
bt
pusha
add
pusha
pushf
pushf
lea
jmp
jmp
clc
rcl
mov
pushf
clc
bt
cmc
sub
clc
cmp
neg
cmc
sub
cmc
cmc
jmp
jmp
jmp
shr
btr
stc
pushf
mov
jmp
push
jmp
pushf
mov
push
push
push
push
lea
jmp
rol
aad
bt
add
mov
movsbw
movsbw
rcl
cmc
mov
jmp
rol
mov
push
lea
jmp
mov
push
bt
movb
call
movsbw
push
xchg
dec
mov
push
mov
call
mov
pusha
pushf
mov
pushf
pushf
pushf
lea
jmp
call
movw
call
pushl
popl
movb
pushl
pushl
lea
jmp
cmp
pusha
sub
movw
jmp
mov
jmp
jmp
mov
movzbw
pop
mov
call
mov
shl
setne
mov
bt
sub
cmp
cmc
cmp
bt
shr
pushf
call
movb
call
mov
cmc
jmp
call
shld
mov
cmp
test
cmc
add
call
mov
jmp
call
jmp
pushf
mov
call
mov
stc
clc
sub
pushl
call
pushl
pushl
mov
movw
mov
mov
movb
lea
jmp
lea
jle
popl
push
pushf
pushf
lea
jmp
pushl
popl
mov
lea
jmp
adc
lahf
daa
mov
inc
mov
call
clc
add
pushf
jmp
clc
sub
bt
mov
cmc
sub
pushf
call
test
cmp
cmc
pushf
and
movb
movl
jmp
rol
shr
add
mov
not
adc
mov
clc
sub
cmp
shr
push
movb
pushl
mov
pushf
call
mov
pushf
popl
jmp
add
push
jmp
jmp
rol
pushf
pushf
pushl
pushl
lea
jmp
lea
push
pushl
pushl
call
stc
mov
jmp
xor
mov
cmc
clc
cmc
stc
xor
cmc
cmp
cmc
neg
jmp
inc
cmc
not
call
bt
mov
not
bt
call
jmp
jmp
mov
stc
pushl
movzbl
ror
mov
movsbw
mov
pop
pushf
pushl
popl
movsbw
rol
rcr
movl
push
jmp
mov
push
mov
jmp
movsbw
shld
mov
test
pushf
pusha
clc
sub
mov
push
push
mov
push
mov
push
lea
jmp
movb
lea
jmp
clc
mov
bt
bt
cmc
sub
pushf
inc
push
mov
movb
lea
jmp
pushf
mov
pushf
mov
pushf
push
lea
jmp
stc
pushf
pushf
cmp
not
call
aaa
bt
aaa
mov
sbb
rcr
mov
push
pusha
add
mov
mov
pusha
pushl
pushl
lea
jmp
pushf
pusha
pushf
popl
jmp
jmp
pushf
mov
pushf
mov
movl
jmp
push
pusha
mov
movb
lea
jmp
sub
movsbw
push
bswap
lea
pushf
pushl
lea
jmp
jmp
bt
test
bt
shl
pusha
mov
call
pushf
add
push
jmp
push
dec
cmc
call
cmc
aad
aad
mov
jmp
call
cmp
test
stc
neg
stc
xor
call
ror
rcr
mov
jmp
not
movzbl
add
js
xor
test
sub
inc
shrd
inc
not
add
mov
bts
neg
xor
neg
pusha
lea
call
inc
xchg
mov
setg
add
not
not
not
mov
pushf
lea
ja
mov
pushf
pusha
lea
jmp
inc
pushf
mov
mov
push
pushf
pushf
lea
jmp
push
lea
bts
shr
pop
clc
and
shl
sub
mov
not
pop
bswap
mov
push
movzbw
pop
not
pushf
std
cld
jle
pushf
xchg
mov
mov
cld
lea
push
lea
push
mov
push
call
mov
stc
call
not
rcr
movzbl
stc
jmp
test
bts
pop
mov
push
clc
add
push
pushf
pusha
pushf
lea
jmp
call
mov
lea
jle
push
push
pushf
pushf
repz
popl
bt
stc
mov
pushf
pushl
bt
call
cmp
dec
mov
adc
pusha
stc
bt
add
bt
cmp
bt
rol
sub
push
rcl
bt
ror
pusha
cmp
sub
rcl
not
pushl
add
neg
bswap
sbb
cmp
test
add
btc
mov
clc
cmc
add
call
push
call
jmp
push
pusha
call
mov
pushl
push
lea
jmp
pushf
pushf
jmp
add
pusha
not
not
movb
mov
pusha
movb
push
mov
pushf
movw
lea
jmp
pushf
bts
cbtw
mov
push
bt
cmp
cmc
sub
call
movb
pushl
popl
movb
movb
lea
jmp
not
pushl
popl
rcr
movl
movl
movzbw
rcr
rcl
jmp
call
add
pusha
movb
pushf
mov
push
lea
jmp
pushf
jmp
mov
stc
movl
movsbl
pushl
popl
rol
clc
lea
movl
movl
bt
stc
bswap
pop
mov
pusha
mov
rol
movw
pushf
movb
pushl
lea
jmp
movl
cmc
sub
call
stc
stc
sub
cmp
add
pushf
jmp
pushl
pushf
repz
popl
clc
bt
clc
jmp
add
cmp
sub
call
and
add
bswap
and
movsbw
clc
mov
pushf
test
call
call
pusha
seto
dec
jmp
mov
call
mov
call
mov
pushf
xchg
rcr
bswap
mov
sar
shl
movsbw
xchg
mov
bsf
mov
or
sar
and
shl
pushl
popl
bsf
test
add
jl
push
sbb
pushf
shl
mov
shl
shr
bswap
shl
movsbl
rcl
xor
xchg
inc
movzbw
movsbw
dec
bts
lea
cmp
sub
push
lea
pushf
pusha
push
lea
jmp
pusha
movb
pusha
mov
push
pushf
pushf
pushf
lea
jmp
or
cmp
xor
movzbw
dec
pop
lea
dec
not
btc
sub
jmp
mov
pushf
pushf
mov
pushf
lea
jmp
mov
jmp
mov
pusha
movb
push
movb
lea
jmp
std
mov
lea
lea
std
mov
not
mov
jmp
mov
pushf
pushf
lea
jmp
lea
movb
lea
jmp
pushf
movb
jmp
call
pushl
movb
inc
cmp
stc
add
pushf
jmp
jmp
push
rol
pushf
pushf
pushl
mov
lea
jmp
rol
stc
mov
pusha
jmp
call
repz
popl
call
pushf
dec
jmp
mov
lahf
mov
pusha
mov
movl
jmp
mov
mov
movl
call
or
mov
adc
rcr
setge
mov
call
cmc
call
lea
jmp
and
pusha
add
mov
adc
add
add
movsb
add
je
add
add
add
sbb
inc
js
je
jb
arpl
jae
out
add
imul
jb
je
arpl
jmp
je
popa
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
push
aaa
add
add
add
or
add
or
add
clc
add
sbb
add
inc
aaa
add
and
add
pusha
adc
add
add
loopne
add
pusha
adc
add
add
pusha
adc
add
add
jo
add
pop
aaa
add
imul
add
jge
add
xchg
add
xchg
aaa
add
fwait
aaa
add
movsl
aaa
add
scas
aaa
add
add
add
add
add
add
add
add
add
outsb
outsl
xor
aaa
xor
fs
insb
add
dec
dec
inc
inc
inc
inc
xor
push
inc
dec
dec
inc
inc
inc
inc
xor
push
inc
dec
dec
inc
inc
inc
inc
xor
push
inc
dec
dec
inc
inc
inc
inc
xor
push
inc
dec
dec
inc
inc
inc
inc
xor
dec
inc
inc
inc
inc
add
dec
dec
inc
inc
inc
inc
aaa
add
dec
dec
inc
inc
inc
inc
cmp
pop
push
inc
dec
dec
inc
inc
inc
inc
cmp
xor
mov
mov
lea
jmp
shr
shld
bsr
mov
mov
jmp
and
pushf
mov
call
call
call
cmp
xchg
aad
int
xor
insl
push
cmp
mov
std
xchg
sub
insl
inc
imull
sbb
and
pop
fildll
sbb
lahf
dec
adcl
movsl
push
add
adc
cmp
imul
loop
std
aaa
cmp
pop
add
iret
shll
cmp
jnp
not
shl
ret
scas
mov
inc
std
cmpsb
or
sbb
push
inc
pop
icebp
stos
xorl
pushf
aad
mulb
push
loope
jnp
xchg
adc
je
mov
ja
add
push
sbb
jl
sbb
jg
jl
sbb
xor
out
ja
pop
jns
adc
mov
clc
inc
xor
popl
cmpsl
jle
outsl
or
add
arpl
bound
pushf
stc
movsb
add
mov
jge
jp
inc
adc
jecxz
insb
xor
rclb
fwait
pushf
mov
push
pushf
jmp
das
push
mov
btr
sub
rcr
rol
mov
mov
movl
not
test
not
mov
stc
jmp
stc
add
call
push
pushf
add
pushf
call
call
pusha
mov
movw
lea
jmp
movw
lea
movw
movb
lea
jmp
pushf
call
rol
clc
btc
or
mov
bt
cmc
stc
add
pusha
pushf
push
pushf
lea
jmp
add
call
pushf
sub
cmc
clc
pushl
ror
stc
jmp
clc
jmp
jmp
mov
mov
movw
pushf
movb
lea
jmp
mov
bswap
call
pushl
clc
mov
pushf
push
cmc
movb
mov
mov
pop
mov
bswap
mov
rcl
push
jmp
push
pushf
pushf
pushf
popl
call
pushf
mov
mov
movb
mov
lea
jmp
mov
bt
jmp
call
pushf
mov
jmp
pusha
pushf
popl
pushf
movb
call
repz
popl
cmc
push
jmp
pushf
sub
push
shr
movl
mov
push
pushf
popl
pushf
pushl
popl
pusha
mov
lea
jmp
pushl
popl
mov
mov
mov
movw
lea
jmp
jmp
pushl
popl
pushf
push
lea
jmp
pushf
jmp
cmc
ror
pushf
push
pushl
push
inc
jmp
stc
ror
bt
call
mov
pushf
push
pusha
pushl
lea
jmp
add
pushl
lea
pushf
test
bt
bt
neg
call
call
pushf
jmp
call
shrd
btc
btr
neg
mov
cmc
pushf
add
pushf
pusha
push
lea
jmp
mov
mov
pushf
pushl
repz
popl
clc
call
inc
mov
jmp
pushf
popl
pushf
movb
pushl
popl
movb
push
pushl
mov
lea
jmp
pushf
popl
call
lea
mov
pushf
bswap
lea
pushf
popl
std
push
push
mov
pushf
not
lea
pusha
movb
pushl
xchg
pushl
call
pushf
call
aad
mov
test
bts
pop
add
xor
pop
aas
bsf
btc
btc
pop
aas
cwtl
not
shrd
pop
cld
aad
push
rol
mov
sar
rol
mov
or
ror
push
pushl
popf
not
not
mov
lea
mov
call
test
call
call
cbtw
notl
aas
btc
or
mov
stc
sub
jmp
movsbl
inc
das
mov
ror
sbb
mov
mov
pusha
shl
mov
mov
add
cmp
pushl
cmc
shld
pusha
pushf
mov
pushl
mov
pushf
movb
jmp
std
pushf
pushl
popf
movb
movb
lea
jmp
rol
neg
mov
cmc
add
push
pushf
pusha
pushf
lea
jmp
pushf
sub
pushl
stc
pushf
clc
add
call
jmp
pushl
popl
mov
mov
lea
jmp
bts
ror
cwtl
adc
mov
cmp
push
call
mov
call
xor
jmp
pushf
mov
pushf
mov
movb
push
lea
jmp
pusha
lea
lea
repz
popl
xor
movw
pop
call
cmp
rcl
add
shr
mov
push
jmp
shl
mov
shrd
movsbw
sbb
mov
xor
pusha
mov
pusha
dec
bts
not
not
ror
rcr
pushf
stc
add
shr
xor
ror
btc
mov
clc
test
test
add
mov
jmp
mov
pushf
push
pushf
pushf
lea
jmp
push
jmp
mov
call
shr
bsr
jmp
call
push
push
call
sub
movzbw
mov
pusha
pushf
mov
movb
lea
jmp
jmp
mov
stc
jmp
movw
call
pusha
pusha
jmp
mov
jmp
add
inc
mov
test
add
push
cmp
call
lea
lea
std
cld
pushl
std
xchg
pusha
mov
push
cld
push
jmp
cmp
cmp
jmp
call
push
pushf
popl
pushl
pushl
popl
pushf
pushl
movb
push
lea
jmp
xchg
ror
mov
shr
or
mov
jmp
jmp
bsr
test
sub
call
movw
mov
mov
mov
push
movl
lea
jmp
bt
cmp
sub
call
stc
btc
mov
xor
call
movzbw
shr
rcr
add
mov
push
bt
mov
sub
jae
add
pusha
push
lea
jmp
pusha
call
jmp
clc
movsbw
not
rol
rol
rol
bswap
movzbl
inc
mov
lea
add
dec
sub
sub
dec
call
mov
mov
push
mov
push
pushf
repz
popl
mov
push
mov
clc
push
stc
call
call
pusha
call
pushf
mov
push
push
mov
pushf
push
push
lea
jmp
pusha
pushf
cmc
add
pushf
lea
jmp
setle
pushf
rol
dec
movzbl
cmc
xor
btc
sub
shl
btr
sub
dec
or
shr
bts
neg
movb
push
sets
inc
not
call
pushf
mov
btr
movzbw
seta
xor
mov
inc
dec
mov
bt
pusha
call
jmp
movb
add
cmc
test
stc
pusha
sub
call
bt
add
call
jmp
call
jmp
std
pop
lahf
lea
pop
bsf
jmp
cmp
add
pushf
test
cmp
push
cwtl
cmc
stc
sub
pushl
pushf
call
cmc
test
cbtw
bt
clc
cwtl
test
jmp
bsf
shr
sub
call
pusha
mov
pusha
pushf
lea
jmp
push
call
call
call
push
jmp
cmp
sub
pushf
pusha
jmp
pushf
mov
push
lea
jmp
bt
cmp
cmc
sub
push
lea
jno
pushf
movw
mov
pushl
lea
jmp
pushf
call
pushf
mov
pusha
push
pushf
movb
lea
jmp
mov
lea
jae
pusha
push
movw
mov
push
lea
jmp
stc
cbtw
jmp
mov
pushl
pushl
lea
jmp
pusha
jmp
call
jmp
cmc
mov
mov
call
bt
bt
pushf
rol
test
cmc
pushf
test
sub
cmc
movb
cmc
push
sub
mov
mov
pushl
pusha
movb
inc
pushf
pushl
lea
jmp
pushf
stc
call
cmp
sub
test
cmc
cmc
shr
mov
pushf
mov
pusha
call
bt
pushf
mov
pushf
mov
pushf
mov
pushl
pushf
xchg
pushl
mov
stc
clc
not
mov
bt
btc
pushl
popl
pushf
pop
movl
movsbw
pusha
mov
cmc
clc
rol
pushf
pushf
lea
jmp
adc
setle
dec
mov
pusha
pushf
add
bt
pusha
call
pushf
popl
lea
jae
pusha
pushf
pushl
pushl
popl
push
lea
jmp
test
shrd
pusha
mov
lea
jge
mov
jmp
pushf
push
pushf
popl
pushl
call
shl
mov
pushf
pushl
mov
call
push
jmp
aaa
movzbw
shld
movzww
call
push
add
pusha
jmp
jmp
and
and
mov
add
call
push
push
mov
mov
movb
pushf
popl
push
call
pusha
mov
call
pushf
jmp
mov
pusha
mov
stc
bt
push
mov
call
mov
pushf
pusha
movb
mov
lea
jmp
pusha
sub
pushf
cmp
pusha
call
pushl
popl
pusha
movb
pushf
pushf
lea
jmp
or
movzbl
stc
pusha
xor
stc
pushf
call
push
mov
jmp
push
pushl
popl
mov
pusha
pushf
lea
jmp
mov
pusha
lea
jmp
clc
clc
cmp
cmc
cmp
call
clc
mov
pushf
mov
stc
jmp
push
mov
mov
push
call
shr
sub
add
add
rcr
not
movzbl
pop
mov
push
mov
bt
stc
jmp
mov
pushf
pushf
lea
jmp
mov
mov
mov
mov
mov
pushl
ret
lea
jne
push
pushf
popl
jmp
mov
mov
lea
jmp
call
bt
bt
stc
add
pushf
pushf
popl
pushf
call
sub
mov
lea
js
pusha
pusha
inc
pushf
push
lea
jb
mov
pusha
lea
jmp
dec
call
neg
add
jo
cmc
clc
cmc
lea
stc
push
call
clc
stc
cld
popf
pusha
pushf
lea
jmp
pusha
mov
sub
mov
jmp
pushf
pushf
jmp
sub
call
cmc
pusha
stc
rol
cmc
bt
cmc
add
mov
pushf
mov
mov
pushf
pushl
ret
cmp
pushf
add
bt
cmp
clc
clc
shrd
call
mov
bswap
mov
pushl
pushf
pushl
ret
neg
mov
clc
add
push
jmp
clc
pushf
clc
sub
test
shl
mov
jmp
mov
clc
mov
pusha
call
push
jmp
push
xchg
not
mov
pushf
repz
popl
and
mov
shld
pushl
xchg
neg
mov
pusha
xadd
btc
ror
mov
not
stc
cmc
inc
mov
stc
jmp
mov
pusha
pusha
xchg
xchg
bswap
mov
bswap
movsbw
movsbl
push
repz
popl
shrd
call
repz
popl
bt
mov
pushf
call
mov
pusha
pushf
mov
mov
pushf
repz
popl
clc
call
not
mov
stc
bt
bt
add
pusha
pusha
jmp
pusha
mov
pushf
mov
call
call
pushl
mov
call
call
ja
not
mov
cmp
pusha
pusha
add
movb
push
pushf
mov
lea
jmp
movzbw
call
lea
jge
pusha
sub
call
mov
pushf
add
call
cwtl
movzbw
not
mov
pushf
mov
pushf
pushl
mov
pusha
lea
jmp
mov
pusha
pushf
mov
lea
jmp
stc
cmpsb
adc
xlat
unpcklps
fwait
adc
les
adc
enter
adcb
xor
adc
fwait
adc
xor
adc
dec
adc
cmpsb
adc
push
adc
enter
fimuls
adc
and
unpcklps
arpl
adc
dec
adc
push
adc
push
adc
enter
inc
adc
movsb
adc
movsb
adc
xlat
unpcklps
pusha
adc
dec
adc
push
adc
xor
adc
dec
adc
push
adc
jno
adc
adc
push
adc
arpl
adc
inc
adc
dec
adc
and
adc
pop
adc
push
adc
fwait
adc
pusha
adc
in
adc
jno
adc
adc
pop
adc
pop
adc
movsb
adc
movsb
adc
push
adc
push
adc
pusha
adc
pusha
adc
xor
adc
jno
adc
push
adc
xor
adc
pusha
adc
dec
adc
cmpsb
adc
push
adc
push
adc
les
adc
fwait
adc
dec
adc
pusha
adc
enter
les
adc
xlat
unpcklps
xor
adc
push
adc
aam
adc
movsb
adc
movsb
adc
xor
adc
pop
adc
pusha
adc
pusha
adc
and
unpcklps
adc
pusha
adc
pop
adc
xlat
unpcklps
push
adc
pop
adc
les
adc
adc
push
adc
push
adc
adc
dec
adc
xor
adc
jno
adc
ret
unpcklps
push
adc
push
adc
xlat
unpcklps
movsb
adc
movsb
adc
and
adc
pusha
adc
pusha
adc
jno
adc
xor
adc
aam
adc
push
adc
pop
adc
les
adc
in
adc
inc
adc
adc
aaa
adc
adcl
adc
adcl
adc
xor
adc
fwait
adc
pop
adc
fwait
adc
xor
adc
dec
adc
movsb
adc
movsb
adc
adc
arpl
adc
pusha
adc
pusha
adc
dec
adc
xor
adc
les
adc
adcl
adc
push
adc
xor
adc
adc
xor
adc
dec
adc
adcb
or
inc
adc
les
adc
and
adc
xor
adc
adc
adc
adc
in
adc
push
adc
movsb
adc
movsb
adc
les
adc
pop
adc
pusha
adc
pusha
adc
push
adc
inc
adc
dec
adc
dec
adc
and
adc
enter
and
adc
arpl
adc
push
adc
and
adc
xor
adc
pop
adc
aam
adc
push
adc
aaa
adc
adcb
stc
cmpsb
adc
push
adc
adcl
adc
adcl
adc
movsb
adc
nop
adc
jno
adc
pusha
adc
pusha
adc
les
adc
adc
pusha
adc
pusha
adc
les
adc
xor
adc
push
adc
aaa
adc
push
adc
les
adc
pusha
adc
push
adc
xor
adc
les
adc
pusha
adc
push
adc
ret
unpcklps
push
adc
dec
adc
xor
adc
dec
adc
jno
adc
movsb
adc
movsb
adc
fwait
adc
xor
adc
pusha
adc
push
adc
push
adc
mov
movb
push
lea
jmp
test
test
stc
add
cmp
cwtl
pushf
clc
bt
sub
push
mov
jmp
pushf
popl
pushl
call
cmc
cmc
call
jns
setnp
mov
push
pusha
pusha
movb
mov
call
rcr
mov
jmp
mov
push
pushf
mov
jmp
rcl
mov
mov
mov
test
pushf
add
jmp
add
movb
mov
lea
jno
pusha
movb
pusha
mov
push
lea
jmp
pusha
lea
jmp
pushf
pushl
popl
movb
pusha
movb
push
lea
jmp
cmc
call
jmp
push
cmp
test
sub
bt
push
jmp
cmc
stc
add
jmp
stc
stc
std
pushl
popf
push
movw
movb
movw
lea
jmp
pushf
mov
pusha
mov
pushf
call
pushf
mov
movb
lea
jmp
pushl
popl
pushf
mov
push
pushf
lea
jmp
pushf
lea
jae
pusha
movb
mov
pushf
mov
pushf
pushf
call
jmp
mov
call
pushl
popl
pusha
pushf
movw
lea
jmp
cmc
xor
cmc
cmc
bt
add
jmp
jmp
mov
pushf
pushf
mov
lea
jmp
jmp
mov
mov
lea
jmp
shld
mov
cmc
pushf
add
pushf
pusha
lea
jmp
mov
pushf
pushl
lea
jmp
movl
mov
mov
pushf
mov
lea
jmp
pushf
popl
pusha
pusha
pushf
pushl
popl
pushf
lea
jmp
call
shl
bts
mov
pushf
pusha
test
add
push
pushl
movb
pushf
lea
jmp
jmp
pushf
push
mov
mov
repz
popl
bt
bt
mov
jnp
push
pushf
mov
bt
push
cmc
movzbw
push
rol
bts
btr
not
push
pushf
pushl
lea
jo
pushl
mov
clc
rcl
push
lea
clc
jmp
pusha
jmp
add
shl
cmp
xchg
movzbl
movzbw
bts
inc
and
xor
inc
movzbw
push
mov
dec
not
dec
push
neg
bswap
ror
ror
and
xor
jmp
movsbw
dec
btr
push
mov
mov
add
pushf
lea
jmp
push
pushf
pusha
pushl
popl
movw
push
lea
jmp
call
push
mov
mov
push
pushf
xchg
jmp
pushf
mov
pushf
mov
pushf
lea
jmp
push
call
or
movzbl
call
xor
dec
mov
push
add
pushf
lea
jmp
clc
test
shrd
mov
pusha
mov
push
jmp
call
call
push
jmp
push
call
test
add
jmp
mov
push
sub
push
and
jmp
pushf
popl
jmp
seto
dec
clc
rol
push
lea
shl
not
neg
and
sbb
and
rcr
pushf
mov
cmc
jmp
pusha
pushl
popl
mov
pushl
pushf
lea
jmp
mov
pushf
call
call
call
sub
jmp
inc
pushf
pushl
push
mov
push
lea
jmp
rol
cmp
test
stc
xor
clc
pushf
cmp
sub
call
pushf
movsbl
push
mov
bswap
not
pushf
std
call
call
pushl
xchg
push
jmp
ror
mov
movsbw
rcl
mov
push
mov
movb
add
pusha
mov
push
movb
pushf
mov
lea
jmp
pusha
pusha
jmp
jmp
dec
sub
js
stc
not
call
jmp
movw
pushf
mov
btc
stc
bts
cmc
mov
rcl
pushl
popl
pop
stc
movl
stc
mov
stc
call
push
xchg
bswap
pushf
not
call
mov
call
pusha
pushf
dec
movb
test
not
cmp
add
cmc
cmc
test
mov
xor
test
test
mov
movb
pusha
test
push
sub
movb
movb
lea
jns
pushf
inc
mov
pusha
mov
pushf
mov
mov
pushf
lea
jmp
xchg
pushf
mov
btc
btc
call
push
lea
test
btc
shl
sub
jmp
shl
pop
ror
btr
rcr
xadd
pop
bts
shl
cld
popf
movsbw
pushf
pusha
lea
mov
pushf
push
not
call
call
add
pusha
stc
add
pushf
test
neg
push
jmp
bsr
mov
stc
cmc
add
pushf
pushf
push
mov
lea
jmp
movl
push
bts
mov
push
cmc
push
jmp
call
call
bsf
movsbw
bswap
movsbl
mov
adc
add
pusha
setbe
mov
pusha
pushf
push
pushf
mov
pushf
mov
lea
jmp
call
pushf
pushf
lea
jmp
xchg
shl
test
btc
btc
mov
rcl
btc
mov
movsbl
mov
shl
mov
btc
pushl
popl
bt
clc
btc
btc
movl
test
cmp
mov
shl
movzbw
cmp
lea
bswap
shl
adc
inc
mov
xor
pushl
pushl
mov
movw
dec
movsbw
test
lea
movzbw
shl
add
shl
sub
bswap
pusha
lea
pushl
lea
jmp
call
shr
jmp
shrd
add
btr
bt
rol
bt
mov
xor
lea
jle
pusha
bswap
dec
inc
clc
btr
neg
bts
movsbw
stc
add
bts
xor
xor
mov
test
clc
movb
add
pusha
movb
mov
pushl
push
lea
jmp
pushf
popl
pushl
pushl
popl
pushf
movb
push
pushl
lea
jmp
movb
mov
movw
pushf
lea
jmp
mov
push
movb
repz
popl
push
bt
push
pushf
mov
bt
mov
jmp
push
push
mov
movzbw
mov
bswap
pusha
mov
not
xchg
repz
popl
movsbw
rol
movw
mov
shld
pop
xchg
btc
mov
movzbw
mov
xor
mov
and
mov
add
pushl
pushf
movl
inc
mov
pusha
rcl
bswap
stc
rcr
sar
stc
xor
bswap
movzbl
dec
adc
lea
or
test
rcl
stc
sub
pushf
lea
pusha
lea
jmp
clc
not
mov
mov
adc
inc
mov
push
pushf
pusha
not
bt
call
shrd
mov
clc
ror
clc
mov
call
mov
push
lea
jmp
pushf
clc
cmc
jmp
pusha
repz
popl
not
test
stc
mov
test
call
pushl
clc
xor
bt
bt
cmc
cmc
sub
pushf
call
push
pusha
lea
jmp
pusha
jmp
mov
pusha
pushf
lea
jmp
repz
popl
clc
bts
rol
xchg
bswap
push
xchg
pop
push
bswap
bts
push
bswap
rol
rol
push
bsr
xchg
push
bsr
pushl
movsbw
movsbw
push
ror
bt
cmc
mov
cmp
btr
bswap
btc
rol
xor
mov
dec
lea
pusha
rcr
shl
lea
pushf
jmp
stc
xor
pushl
dec
adc
bswap
lea
cmp
shld
sub
movsbw
mov
push
pusha
lea
jmp
aas
aad
mov
call
rol
stc
xor
call
mov
call
movzbw
lea
mov
movsbl
repz
popl
and
rcl
xchg
call
lahf
dec
mov
pusha
cmp
cmc
add
push
pushf
popl
call
shl
cmp
not
movzbw
bswap
add
and
not
sar
push
shl
and
and
shrd
add
not
adc
mov
clc
add
movw
pusha
call
lea
jg
mov
push
pushf
lea
jmp
shl
mov
call
mov
jmp
bsr
movsbw
mov
push
pushf
cmc
test
add
pusha
mov
lea
jmp
sub
bt
jmp
pushl
popl
pushl
lea
jmp
jmp
btc
xadd
stc
mov
clc
btr
sub
dec
inc
pusha
cmc
rcl
rol
pusha
and
rol
xor
sub
not
sub
stc
shl
jmp
or
movzbl
call
sub
pusha
lea
pushf
lea
jmp
sub
cmc
stc
test
and
jmp
cmc
pushf
sub
cmp
clc
test
movw
sub
call
cld
pushf
pushl
popf
movl
pushl
push
pushf
lea
jmp
ror
sar
mov
shl
mov
test
pushf
sub
cmc
shr
movw
movb
mov
pusha
jmp
mov
pushf
lea
jmp
call
pushf
lea
jge
pushf
pushl
popl
pushf
push
pushf
pusha
lea
jmp
not
movl
cmc
ror
mov
bt
bt
rol
mov
lea
jmp
pusha
clc
push
mov
movw
sub
jmp
cmp
pushf
sub
pushf
jmp
mov
lea
std
mov
mov
mov
pusha
cld
push
pushl
cld
lea
jo
push
pushf
rep
call
test
cmc
add
stc
cmc
movb
stc
ror
jmp
lea
mov
sub
call
jmp
cmp
pushf
mov
clc
cmp
pusha
jmp
aas
mov
test
call
add
jmp
push
call
call
shrd
sub
call
push
add
pushf
push
mov
movb
mov
push
movl
pushl
movb
lea
jmp
mov
pushf
pushf
pushf
pusha
lea
jmp
push
jmp
mov
pushf
popl
pushl
pushl
popl
movb
mov
lea
jmp
jmp
test
cbtw
cmp
test
cwtl
pushf
mov
stc
sub
pushf
mov
call
mov
cmc
pusha
xchg
cmc
rcl
mov
lea
btc
mov
bts
movsbw
call
dec
jmp
mov
jmp
clc
jmp
add
movb
pushf
jmp
aam
pushf
clc
mov
call
push
pushf
mov
movsbw
movw
pushf
mov
repz
popl
dec
sar
rcr
mov
movw
stc
pop
test
mov
bsr
push
mov
bsf
mov
ror
ror
call
mov
push
push
call
rol
movl
movl
lea
jmp
push
push
mov
movl
pushf
mov
mov
pushl
ret
stc
sub
cmp
pushf
bt
mov
pushl
bt
bt
movb
sub
mov
lea
jmp
mov
call
call
jmp
pushl
stc
sub
pushl
clc
push
stc
shr
mov
jmp
bt
not
cmp
pusha
mov
not
cmc
test
cmp
and
pushl
call
not
cmc
mov
clc
and
rol
add
push
jmp
mov
pusha
mov
pushf
jmp
call
not
mov
jmp
jmp
sub
call
rcl
sar
movl
setne
shr
dec
sbb
mov
shl
bswap
jmp
sub
call
push
call
inc
push
clc
pushf
jmp
and
mov
pushf
cmc
clc
add
pushf
pushf
mov
mov
push
pusha
lea
jmp
pushl
mov
call
mov
pushf
pusha
push
pushf
pushl
ret
movzbw
bts
mov
not
add
pusha
pusha
setne
mov
lea
ja
mov
pushf
lea
jmp
mov
call
sub
stc
and
movb
pushf
pushl
jmp
call
add
push
call
pushf
movw
mov
mov
pushl
pushf
push
lea
jmp
sub
not
push
lea
movb
lea
jmp
sete
lea
rol
ror
neg
and
neg
lea
mov
cmc
push
mov
sub
movb
call
cmc
bt
movb
add
push
call
pushf
inc
jmp
inc
clc
movw
jmp
pusha
mov
lea
ja
push
pushl
pusha
mov
push
pushl
push
lea
jmp
sub
bt
stc
mov
call
lea
mov
push
movzbw
repz
popl
shl
pusha
shld
mov
pop
mov
add
lea
xchg
movzbw
xchg
mov
shr
shr
btr
mov
bts
add
pushf
cmp
pushl
popl
xor
xchg
movl
not
mov
rcr
lea
movw
bsf
bswap
rol
or
or
xor
movzbw
movsbw
call
shld
not
mov
bt
setle
neg
mov
cmp
add
jmp
pushf
call
jmp
add
pusha
movb
lea
jmp
movb
dec
stc
jmp
call
push
sub
mov
call
clc
mov
shl
sbb
rcr
jmp
add
setnp
setb
jmp
call
push
mov
pushf
movb
mov
push
repz
popl
push
mov
pusha
pushl
jmp
movw
jmp
cmc
neg
pushf
pushl
ror
movb
bt
push
xor
mov
cmc
call
bt
clc
mov
pop
ror
mov
not
xchg
btr
bts
not
btr
xchg
xchg
bswap
lea
clc
mov
pushl
pop
mov
bts
pushf
pushl
popl
bts
pushf
not
bts
movl
btr
rol
jmp
add
test
test
add
jmp
pushf
pushf
pusha
mov
mov
pushl
lea
jmp
mov
pushf
pushf
repz
popl
pushf
stc
call
mov
pusha
mov
movsbw
not
call
sub
call
lea
jns
cmc
push
and
pusha
push
push
pushf
popl
jmp
push
mov
call
lea
pushf
lea
jmp
pusha
rol
push
inc
movb
pusha
jmp
mov
mov
mov
pushf
lea
jmp
rep
bsr
btc
mov
clc
shl
rcl
add
mov
push
pushl
popf
pushl
movb
mov
lea
jmp
call
sbb
notl
call
mov
lea
movzbl
repz
btr
lea
neg
push
push
adc
mov
bt
adc
rcl
not
push
movzbw
add
push
bsr
mov
push
sar
sar
call
shl
shl
mov
cmp
test
bt
add
jmp
pushf
stc
call
mov
clc
call
ror
pusha
test
cmc
pusha
add
bt
not
jmp
movb
lea
mov
movw
movb
movb
lea
jmp
bt
mov
clc
mov
cmc
mov
jmp
pushl
jmp
pushf
mov
pushf
lea
jmp
bswap
cmc
cmc
xor
mov
sub
pushf
mov
pushl
pushf
lea
jmp
lea
jmp
pushf
movb
mov
mov
call
mov
pushf
lea
jmp
mov
bt
call
call
pushl
popf
pushf
pushf
mov
lea
jmp
pushf
pusha
mov
push
call
xchg
mov
mov
sbb
test
sar
mov
test
sub
stc
pushf
shr
movl
jmp
jmp
jmp
pushf
not
push
shl
sar
add
rcr
not
adc
test
and
call
mov
movb
pushf
popl
pushf
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
shl
mov
seto
movsbw
test
setbe
add
ror
stc
shl
lea
mov
lea
shl
xor
inc
not
inc
jmp
push
mov
pushl
push
movb
mov
lea
jmp
pushf
pusha
pushf
mov
seta
mov
lea
push
pop
bswap
mov
pushf
pushf
pushl
ret
mov
mov
lea
mov
mov
mov
movb
lea
jmp
mov
pushf
pushl
lea
jmp
mov
mov
pushl
lea
jmp
pusha
mov
mov
lea
jmp
pusha
mov
push
push
pushf
movb
lea
jmp
add
pusha
dec
call
push
mov
pusha
pushf
call
jmp
stc
movb
clc
sub
call
inc
pusha
movb
call
push
pushf
mov
pushf
lea
jp
pusha
pushf
popl
movb
mov
pushf
call
rol
mov
mov
btc
pushf
mov
bts
pop
ror
pushl
popl
btr
movl
clc
bts
mov
pusha
rol
push
pushf
lea
jmp
rol
push
lea
jmp
push
pusha
mov
mov
pushf
movb
lea
jmp
bt
sub
mov
clc
btr
jge
ror
sub
ror
rcr
sar
neg
rcl
sub
sub
and
neg
movzbw
sub
dec
rcl
shld
mov
clc
add
jp
push
pushf
mov
inc
jmp
dec
mov
mov
pusha
rol
pusha
sub
mov
cmp
add
pushf
call
lahf
not
cbtw
cmc
mov
bt
push
cmp
sub
call
pushl
mov
push
pusha
pushf
pushf
lea
jmp
mov
call
lea
jge
pushf
jmp
movb
mov
pushf
mov
push
pushf
lea
jmp
push
pushf
popl
pushf
pushl
popl
pushl
mov
lea
jmp
jmp
btc
shr
mov
clc
jmp
bt
bt
mov
bt
pushf
pusha
pushl
sub
pushf
mov
inc
pushf
jmp
aas
sar
cwtl
lea
test
cmc
jmp
jmp
pusha
mov
pushl
popl
pushf
lea
jmp
lea
ja
shl
bt
cmp
and
mov
das
movzbw
movsbw
neg
lea
test
sub
bswap
xor
shr
shld
lea
cmc
or
bsr
and
cmp
sub
push
pop
not
mov
lea
pushf
cld
movzbw
push
bswap
mov
not
std
lea
std
pusha
pushf
xchg
movsbw
mov
movl
call
mov
pushf
push
pushf
lea
jmp
jmp
pushf
stc
call
mov
jmp
rol
push
call
pushf
jmp
bswap
shr
shl
mov
or
bsf
xchg
mov
add
inc
mov
inc
mov
stc
stc
push
test
add
cmc
pushf
shrd
call
stc
stc
not
test
bt
test
stc
not
pusha
cmc
mov
bt
sub
stc
mov
and
mov
lea
ja
pushf
mov
pushf
pushf
popl
jmp
call
mov
call
lea
mov
dec
add
pop
neg
or
lea
not
sub
call
btc
bswap
rcl
xadd
pushf
xor
push
call
rcl
mov
pushf
btc
mov
cmc
neg
not
sub
mov
push
jmp
pushf
popl
push
pushf
pushl
popl
pushl
lea
jmp
call
cltd
bsr
jmp
das
neg
push
mov
btr
pop
movzbw
aad
and
aaa
pop
adc
test
aad
pop
or
pop
shrd
neg
cld
pop
cld
cmp
bt
or
popf
not
setl
movzbw
not
pop
jmp
mov
mov
push
lea
jmp
pusha
stc
stc
rol
pusha
test
jmp
movl
pushf
add
test
cmc
not
pushl
jmp
and
movzbl
test
jmp
rep
sbb
btc
bts
mov
btc
and
rol
mov
bt
pushl
popf
mov
mov
mov
lea
jmp
test
add
pushf
jmp
call
xchg
xadd
not
and
mov
shr
clc
mov
call
bt
jmp
rol
mov
stc
add
pushf
lea
jmp
pushf
call
jmp
xchg
pusha
call
jmp
movl
movsbw
bt
stc
stc
mov
call
bswap
cmp
and
and
push
rcl
push
call
xor
call
jmp
stc
sub
movw
pusha
jmp
setae
not
movzbw
cwtl
mov
pushf
movl
mov
jmp
bt
lahf
notl
inc
sub
neg
mov
clc
stc
jns
sub
call
pushf
mov
call
push
pushl
mov
mov
movb
pushf
push
movw
lea
jmp
push
mov
movb
pushf
lea
jmp
lahf
aam
mov
btc
stc
mov
stc
add
jmp
shrd
btc
sub
add
shl
bts
and
xor
lea
not
rol
bt
bts
shld
and
clc
sub
mov
cmp
pusha
jmp
mov
pushf
pushl
mov
pushf
lea
jmp
call
pushl
popl
pushf
push
lea
jmp
jae
push
xchg
pushf
pushf
bswap
mov
jmp
bt
mov
pusha
push
call
xor
xor
bsr
mov
clc
pusha
pushl
sub
pusha
stc
jmp
ror
test
cmc
cmp
jmp
mov
push
mov
movl
movb
lea
jmp
bt
shrd
mov
bsr
btr
btc
mov
lea
ror
pushl
popl
bsf
movl
neg
add
mov
shl
bswap
rcl
xor
pop
dec
neg
lea
jmp
clc
pushf
pusha
cmp
push
call
push
pusha
lea
jmp
pushf
mov
and
rcr
sbb
mov
pushf
movb
add
pusha
pushf
mov
jmp
pushl
mov
pushl
xchg
pusha
movsbw
mov
movsbw
pushf
repz
popl
inc
cmc
mov
rcr
shr
pop
rol
mov
xadd
shrd
call
bt
cmc
add
call
pushf
jmp
dec
aam
not
notl
movsbw
shl
call
push
mov
pushf
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
bt
xchg
jmp
pushf
ror
bt
pushf
bt
add
cmc
jmp
xchg
pushf
pop
xchg
lea
push
pushf
mov
mov
xchg
movsbl
repz
popl
shr
movzbw
mov
test
mov
movzbl
xor
push
mov
add
test
sub
mov
bsf
call
and
jmp
pushf
pusha
clc
rol
pushf
push
mov
mov
lea
jmp
jmp
jmp
pushf
mov
pusha
lea
jmp
sar
mov
shl
call
clc
mov
shl
rol
add
jmp
add
call
sub
bt
shr
pushf
pusha
movw
mov
pushl
call
push
mov
pusha
pushf
jmp
jmp
push
mov
and
and
mov
jmp
pusha
mov
jmp
movzbw
pop
jmp
jmp
sub
sbb
rol
clc
mov
bswap
jmp
pusha
jmp
cmp
shr
lea
bt
cmc
jl
cmp
pusha
lea
ja
btc
aaa
xchg
bswap
mov
bt
daa
daa
lea
aas
shr
movzbw
sub
or
bt
bt
btr
lea
mov
adc
pushf
and
adc
btc
bt
sub
movzbl
mov
call
inc
btr
mov
push
cmp
pushf
not
movw
call
call
call
jmp
add
movw
pushl
jmp
daa
das
bsf
mov
xor
jmp
shrd
inc
sub
lea
mov
pushf
bswap
stc
pushl
call
ror
or
ror
mov
cmc
stc
test
sub
stc
pushf
cmc
add
call
pushl
stc
cmc
cmc
push
jno
not
mov
bt
rol
pusha
pusha
pushl
lea
jmp
pushf
lea
pushf
popl
not
movzbl
xchg
jmp
call
mov
pushf
pushl
popl
pusha
push
lea
jmp
lea
pusha
xor
call
mov
pushf
movw
pusha
movb
lea
jmp
jmp
rol
inc
bsr
mov
inc
inc
mov
pusha
shl
mov
cmp
pusha
bt
add
add
jo
bt
pushf
bt
shrd
jmp
clc
mov
cmc
cmc
jmp
bt
xchg
pushf
cmp
pushf
push
xor
pushf
neg
call
mov
shl
btr
shr
mov
bt
cmp
stc
pushf
not
lea
jbe
pusha
not
cmp
bt
pushf
and
movb
jmp
pusha
pushl
popl
pusha
lea
jmp
add
pusha
pusha
mov
pushl
mov
push
push
lea
jmp
mov
jmp
pushf
popl
pusha
call
movsbl
dec
cmc
lea
shld
call
xor
cmp
jmp
not
mov
jmp
shl
movsbw
rcl
clc
mov
pushf
mov
jmp
pushf
pushf
jmp
not
jmp
push
jmp
pusha
mov
movw
pusha
push
pushl
lea
jmp
movl
pushl
popl
pushf
movl
pushl
lea
jmp
movl
bswap
jmp
call
bt
clc
pushl
popf
push
lea
jmp
call
pushf
shrd
mov
cmc
cmc
pusha
add
pushl
push
lea
jmp
and
lea
jbe
pushf
mov
pusha
pushf
popl
mov
movw
pushl
popl
push
mov
lea
jmp
call
movw
mov
mov
push
lea
jmp
push
test
ror
rcl
mov
bsr
mov
jmp
seto
jmp
bswap
test
clc
xor
call
mov
mov
movl
pushf
popl
movb
lea
jle
popl
pusha
lea
jmp
pushl
popl
btr
bsf
xchg
push
bsf
dec
lea
ror
mov
rcr
mov
movsbl
bswap
bswap
rcr
shld
movsbl
add
xor
lea
lea
pushf
dec
stc
clc
push
lea
cmp
sub
bsf
mov
shld
btc
mov
rcr
cmp
pushf
add
sub
call
xchg
mov
btc
stc
rol
add
add
xor
and
push
add
not
pusha
cmp
shl
lea
test
sar
stc
sub
test
mov
add
mov
mov
sar
add
xor
mov
jmp
repz
popl
cmc
push
btr
ror
mov
and
mov
pusha
rcr
mov
sbb
sar
mov
shr
cmc
lea
mov
rcr
dec
inc
pushl
popl
xor
bswap
pushf
rol
movl
neg
mov
shr
bswap
add
xor
xchg
dec
and
pop
lea
test
sub
lea
push
not
lea
pusha
pushl
movb
push
lea
jmp
pusha
jmp
pusha
mov
call
repz
popl
bt
clc
push
pusha
mov
cmc
mov
call
mov
pushl
movb
lea
jmp
sub
push
jmp
pusha
xchg
pushf
mov
bswap
mov
pop
mov
bswap
movsbw
not
repz
popl
sar
shl
mov
movzbw
lea
mov
add
rcl
test
bts
mov
bt
mov
cmp
bts
mov
bts
pushl
sar
push
bt
and
mov
and
ror
bswap
mov
xadd
xor
mov
dec
sub
not
movsbw
mov
lea
sbb
bt
not
sub
pusha
not
lea
mov
pushf
movb
lea
jmp
mov
pusha
pushl
jmp
movb
mov
mov
lea
jmp
call
bswap
clc
movsbw
mov
cmc
bt
push
sub
pusha
movb
mov
movb
pusha
lea
jmp
pushf
pushl
popf
pushf
movl
push
lea
jmp
and
mov
jmp
jmp
movzbl
clc
xor
call
mov
push
std
call
mov
pushl
mov
pushf
popl
call
bts
mov
call
mov
mov
mov
call
mov
mov
call
add
call
pusha
pusha
call
mov
test
cmp
pusha
mov
sub
jmp
pushf
popl
push
lea
jg
push
pushl
popl
pushf
pushl
lea
jmp
mov
bt
stc
pushf
cmc
mov
pushl
pusha
bt
clc
xchg
btc
pushf
movsbw
mov
movsbl
btr
bt
movzbw
mov
lea
push
rcr
pushl
popl
not
movl
movzbw
mov
pushf
bt
mov
clc
cmc
clc
rol
push
push
lea
jmp
pusha
jmp
push
stc
not
movb
cmc
pushf
pushf
add
pusha
jmp
mov
or
add
clc
add
lea
lea
test
stc
xor
cmc
rcr
jmp
jmp
not
bt
pushf
not
stc
bt
jmp
mov
call
push
jmp
mov
mov
cmc
bt
mov
pushl
push
mov
xchg
clc
ror
bswap
mov
ror
call
call
mov
pushl
lea
ja
pushf
sub
lea
cmc
sar
movsbw
lea
shl
neg
sub
pusha
lea
lea
sub
shld
sbb
bsf
and
bswap
pop
bswap
or
sub
call
mov
pushf
jmp
call
pushf
jmp
lea
mov
jmp
dec
bt
jmp
jmp
mov
mov
call
rcr
mov
push
stc
cmc
add
pushl
lea
jmp
pushf
pusha
pusha
jmp
mov
movzbw
rcr
pushl
popl
lea
bswap
pushf
rcl
movl
btr
pushl
mov
pushf
rol
movw
push
push
pushf
lea
jmp
push
pusha
pushl
popl
movw
lea
jmp
bt
mov
rcr
shl
mov
cmp
add
push
push
mov
pushf
lea
jmp
rol
cmp
call
test
shl
pushf
mov
pushf
push
pushf
popl
jmp
call
push
pushf
dec
stc
cmp
call
pusha
btc
mov
stc
cmp
add
bt
test
pushl
bt
xor
call
pushf
mov
movb
push
lea
jmp
inc
bsr
bsr
mov
pusha
add
jmp
push
mov
rcl
bt
shl
sub
add
pushf
pushf
not
lea
jl
mov
pusha
mov
pushf
lea
jmp
pushf
popl
call
mov
call
sbb
rcr
sub
rcl
rcr
cmc
xor
push
jmp
mov
shr
pushl
call
push
bswap
movzbw
mov
push
call
jmp
cmp
pusha
sub
movl
pushl
mov
pushl
pushf
push
push
lea
jmp
bswap
mov
call
rep
pop
push
ror
rcl
mov
clc
btc
bt
sub
mov
push
pushl
popf
push
mov
movb
lea
jmp
push
movb
push
mov
jmp
jmp
lea
sub
btr
mov
call
jmp
pushf
mov
mov
pusha
lea
jmp
or
shl
mov
cmp
add
pusha
pusha
mov
pushl
lea
jmp
shld
jmp
setae
bt
mov
rol
mov
pusha
sub
call
test
not
rcr
pusha
add
not
rcr
ror
bts
bt
and
and
mov
bt
clc
push
sub
pushl
push
jmp
neg
aad
pushf
setnp
mov
cmc
cmp
clc
mov
add
pusha
pushf
pushf
mov
push
mov
pushf
push
pushf
lea
jmp
push
mov
pusha
pushf
movb
lea
jmp
add
call
stc
add
mov
push
push
mov
jmp
mov
mov
bt
add
pushf
lea
jmp
push
pusha
movw
mov
mov
pushf
jmp
lea
jmp
call
neg
cmc
clc
cmc
ror
bt
jmp
jmp
cbtw
jmp
pushf
mov
pushf
call
call
pushl
rol
push
lea
jmp
mov
cld
call
push
pushl
popl
movb
movb
lea
jmp
mov
pushl
popl
mov
mov
lea
jmp
btr
rcl
cwtl
shl
mov
test
call
mov
test
cld
rcr
xchg
pushl
popf
mov
setge
movsbw
pushf
mov
pushl
lea
call
xchg
push
push
pushf
pop
xchg
jmp
pusha
mov
call
pushf
mov
pusha
movb
mov
mov
push
jmp
mov
cmc
xadd
mov
test
movsbl
sbb
mov
add
xchg
pushf
bt
pushl
popl
clc
shl
movl
sub
push
add
mov
not
inc
bswap
rcl
xadd
not
xor
call
pusha
mov
pusha
jmp
aad
mov
and
sbb
and
ror
mov
pusha
add
pushf
jmp
pusha
mov
mov
jmp
movzbw
mov
pusha
push
call
jmp
call
push
mov
pushf
mov
pushf
mov
pushl
push
repz
popl
cmc
mov
stc
jmp
cld
cld
call
pushf
popl
bswap
bswap
std
pusha
xchg
pop
jmp
lea
xchg
jmp
pushf
popl
jmp
pusha
mov
movw
push
pushf
mov
pushf
lea
jmp
mov
call
call
aad
and
bt
mov
stc
pusha
xchg
bt
jmp
pushf
pushl
popl
pushl
movw
pushf
movb
lea
jmp
jmp
sub
pushf
mov
bswap
pushf
mov
push
pushf
std
xchg
std
mov
cld
lea
not
lea
call
mov
pushf
push
pusha
lea
jmp
jmp
bswap
bsf
neg
and
neg
neg
shl
sub
xor
shl
cmp
rcr
btc
neg
mov
xor
stc
jmp
std
shld
ror
inc
mov
lahf
cmc
aad
pop
ror
pop
rcl
pusha
dec
mov
rcl
dec
btc
mov
sar
sub
mov
mov
mov
lea
movzbw
rol
xor
mov
call
pushf
popl
call
push
pushl
popl
pushf
movb
mov
lea
jmp
pushl
jmp
mov
pushf
lea
jmp
pushf
mov
pushf
pushf
lea
jmp
mov
mov
lea
jmp
mov
pushl
cmp
pushf
call
pushf
jmp
sub
pushf
cmp
sub
call
dec
mov
cmp
xor
pusha
not
pushf
push
dec
call
call
sar
aaa
cwtl
jno
mov
rol
dec
mov
jmp
jmp
call
mov
movb
lea
jmp
movsbw
cmp
mov
inc
mov
bt
sub
cmp
pushf
jmp
jmp
call
pushf
add
push
call
mov
mov
call
mov
xchg
jmp
xor
push
lea
jns
dec
jmp
repz
sar
sar
push
rcr
shl
push
and
not
lea
neg
push
and
or
push
sar
clc
neg
push
dec
dec
pushl
shl
stc
push
ror
shl
ror
add
mov
push
bswap
rcr
sar
bswap
clc
xor
call
pushl
popl
cmc
add
cmc
pusha
pushl
popf
push
movb
lea
jmp
movw
cwtl
movl
call
push
jmp
pushl
popl
pushl
lea
jmp
movzbl
cmp
rol
mov
xor
bsf
btr
setle
mov
sbb
call
stc
clc
clc
push
call
cmp
cmp
cmp
sub
pusha
mov
pusha
lea
jmp
cmc
pusha
cmp
not
pushf
pusha
not
cmp
bt
jmp
pusha
call
call
sub
movl
shl
pusha
jmp
cwtl
bsf
rcl
mov
ror
test
mov
cmc
test
pushf
sub
pushf
cmp
push
movb
shr
push
mov
pusha
pushf
popl
movw
jmp
jmp
ror
movl
inc
movl
bt
xor
cmp
mov
bt
stc
add
pushf
add
jo
push
bt
lea
sub
jp
sub
push
pushl
call
shld
pusha
mov
pushf
jmp
xor
pusha
dec
call
rcl
or
not
mov
cmp
bt
sub
call
pusha
mov
movb
mov
pusha
push
push
lea
jmp
clc
test
bswap
cmc
test
xor
stc
push
add
call
pushf
jmp
add
bts
lea
aad
stc
bsf
sub
bsr
ror
lea
btr
cmc
jb
and
pusha
sub
lea
jmp
pushl
popl
movb
lea
jmp
dec
xor
btr
inc
sub
pusha
movsbw
cmc
mov
jmp
pushl
call
pushf
stc
pushl
popl
cmc
add
cmc
stc
popf
pusha
lea
jmp
mov
call
pushf
mov
pusha
jmp
pushf
pushf
pushl
popl
pushl
mov
push
pushf
lea
jmp
push
call
mov
call
pushl
popl
pushf
mov
push
lea
jmp
mov
pusha
jmp
pushf
mov
mov
push
pushf
pushl
ret
mov
movb
jmp
btr
mov
pusha
movzbw
mov
stc
pushl
popl
not
btc
clc
mov
movl
jmp
mov
movw
lea
jmp
movl
pushf
popl
pushf
mov
jmp
sub
call
movb
sub
pushf
mov
call
not
not
setne
jmp
pushf
popl
mov
call
movzbw
pushf
mov
cmp
test
bt
add
movb
call
push
pusha
pushf
pusha
pushf
lea
jmp
mov
movb
push
mov
movb
pushf
popl
pushf
call
bt
mov
test
bt
cmc
cmp
sub
call
cmp
test
test
xor
movb
neg
mov
stc
bt
add
mov
pushl
pushf
jmp
pushl
popl
stc
call
pusha
pushl
mov
pushl
pushf
pushf
mov
call
bswap
inc
and
test
shl
bswap
neg
inc
add
pusha
mov
jmp
pushf
cwtl
lea
jo
test
sub
cmc
sub
pusha
mov
mov
pushf
lea
jmp
pushl
popl
mov
push
pushf
movb
lea
jmp
sub
stc
jmp
pushf
jmp
add
test
add
pushf
call
call
push
movl
push
pushf
popl
movl
pushl
movb
pushl
popl
push
movw
push
mov
lea
jmp
and
pushf
sub
call
pushl
popl
movw
pushf
movb
push
lea
jmp
pushf
not
pusha
stc
push
and
pushf
jmp
cmp
adc
pushl
popl
test
rcl
rcr
movl
xor
mov
pusha
bswap
bts
xor
pop
mov
dec
movzbl
add
add
lea
bswap
sub
not
lea
push
call
movb
ror
call
xor
mov
pusha
pushf
jmp
lea
repz
popl
cmp
call
mov
pushf
mov
lea
jmp
call
push
pushl
popl
pushf
lea
jmp
pusha
jmp
rcr
rcl
mov
xor
mov
stc
add
pusha
push
jmp
mov
mov
pusha
push
movb
lea
jmp
mov
mov
pushl
lea
jmp
bt
mov
cmp
clc
cmp
add
stc
jmp
call
shrd
sar
stc
mov
xor
add
push
not
setne
mov
pushf
lea
jnp
pushf
mov
movb
pushl
pushf
pushl
lea
jmp
jmp
bsr
sbb
adc
cmc
mov
sete
pop
cmp
xchg
pop
movsbw
pop
sar
movsbw
setp
cmp
pop
xor
movzbw
rcl
rcr
pop
btr
pop
test
bsr
movzbw
dec
pop
cld
popf
movzbw
pop
movsbw
lea
pop
not
not
pushf
mov
pushl
mov
push
movl
pushl
ret
pusha
mov
pusha
pushf
jmp
cmc
push
shl
bswap
notl
call
mov
rcr
mov
cmp
cmc
jmp
pushf
mov
mov
pop
movw
mov
pop
repz
popl
btr
xchg
btc
movsbw
mov
ror
sub
sub
mov
mov
test
sbb
mov
neg
xadd
mov
shld
pushl
popl
pop
push
adc
movzbw
movl
lea
shr
pushf
mov
sub
stc
shrd
bswap
pusha
bts
shld
xor
bswap
xchg
dec
lea
dec
shld
shl
sbb
test
lea
shld
ror
lea
sub
pushf
movsbw
lea
pushf
pushf
lea
jmp
call
movl
pusha
mov
push
push
pushf
pushf
lea
jmp
cmp
call
not
pushf
test
and
movb
pusha
jmp
pushl
ror
push
lea
call
test
shld
movzww
push
add
pusha
pushl
clc
cmc
neg
jmp
pushf
cmc
sub
jmp
pusha
neg
cmc
add
movb
sub
lea
ja
pushf
mov
mov
lea
call
push
mov
xor
bswap
movzbw
mov
jmp
movb
add
pushf
movb
movw
pushf
popl
pusha
movw
call
mov
inc
call
clc
xchg
push
jmp
adc
inc
dec
cmp
mov
bt
stc
mov
jmp
push
pushf
mov
jmp
mov
mov
mov
lea
jmp
add
jmp
repz
popl
pushf
call
btc
clc
movl
btc
mov
movb
rol
movb
push
mov
lea
jmp
push
pusha
lea
jmp
jmp
add
call
add
pusha
pushf
mov
mov
lea
jmp
call
jmp
clc
pusha
mov
jmp
not
sub
bts
lea
call
pushf
popl
pusha
movw
call
and
shl
sub
pushf
bswap
mov
jmp
mov
not
jmp
lea
jno
pusha
pushl
mov
pushf
pushf
mov
lea
jmp
push
pusha
pushf
mov
pusha
lea
jmp
call
movb
pushf
mov
call
pushf
push
mov
mov
movl
lea
jmp
pop
pusha
lea
pushf
pushf
lea
jmp
push
lahf
mov
jmp
inc
mov
add
jmp
ror
sub
mov
test
call
xchg
mov
ror
mov
clc
stc
call
add
push
pushl
pushf
pushf
pushf
popl
pushf
pushl
popl
pushl
lea
jmp
sar
mov
shrd
mov
xor
or
sub
push
ror
ror
movzbw
not
inc
sar
neg
bsr
xor
sar
mov
cmp
pushf
add
pushf
call
clc
mov
not
dec
setae
clc
mov
jmp
mov
pushf
mov
test
add
cmp
shld
push
push
pushf
mov
pushl
movb
jmp
jmp
jmp
bt
cmc
mov
lea
cmc
mov
movsbw
mov
btc
jmp
mov
bt
test
sub
bt
and
jmp
mov
pushf
mov
ror
mov
cmc
rcl
mov
btr
jmp
jmp
test
lea
cmp
test
sub
movb
mov
pushf
mov
movl
lea
jmp
clc
test
cmp
not
pushl
add
cmp
movl
clc
add
bt
bt
sub
push
pushf
pushf
mov
push
lea
jmp
mov
mov
xchg
bswap
push
pusha
xchg
mov
jmp
cld
pusha
pushf
jmp
mov
pushl
popl
movw
lea
jmp
bsr
lahf
lea
daa
test
or
lea
setno
daa
aam
sub
xor
stc
call
call
movb
mov
mov
pushf
pushl
ret
pushl
movb
pushl
popl
push
mov
mov
pushf
lea
jmp
pusha
push
inc
pusha
mov
push
mov
lea
jmp
jmp
push
pushl
pushl
popl
mov
push
lea
jmp
push
pusha
repz
popl
push
cmc
stc
cmc
mov
bt
bt
mov
stc
call
je
call
les
call
les
out
cmp
and
call
les
push
call
les
lret
enter
xor
mov
les
enter
cltd
xor
les
inc
call
les
mov
les
xor
les
arpl
les
les
call
les
out
je
call
mov
les
xor
les
call
les
and
call
les
call
les
aaa
call
fimull
les
les
test
les
psubsb
cmpsb
out
bound
les
mov
les
call
aad
call
les
les
test
aad
call
les
les
out
lret
enter
leave
out
adc
les
adc
les
out
and
out
es
call
les
pop
call
les
dec
call
fimull
les
mov
les
push
call
les
psubsb
ss
aam
call
in
je
les
les
les
out
je
call
fimull
les
psubsb
iret
gs
les
call
lret
enter
out
cmp
call
les
les
iret
gs
les
les
out
cmpsb
out
mov
arpl
les
xor
arpl
les
xor
les
and
call
les
les
test
les
psubsb
mov
les
les
call
les
xor
les
call
les
aas
call
in
je
les
inc
call
les
les
inc
call
les
call
mov
aad
call
les
mov
les
out
add
out
push
mov
les
psubsb
fs
call
les
push
call
les
call
les
xor
les
test
mov
in
scas
out
jle
out
adc
arpl
les
pop
call
les
adc
les
mov
les
les
out
ss
jle
out
push
mov
les
call
les
enter
je
les
push
call
les
les
inc
call
les
fimull
les
psubsb
add
iret
gs
les
callw
xor
in
je
les
xor
les
aaa
call
aad
call
fld
out
je
call
fld
out
mov
mov
iret
gs
les
call
les
addr16
les
les
mov
les
xchg
mov
les
call
les
call
les
aaa
call
fimull
les
inc
call
les
pop
call
lret
enter
je
les
les
xor
les
psubsb
in
scas
out
aas
aas
call
les
out
mov
push
call
les
les
enter
in
scas
out
pushf
mov
jmp
push
pusha
pushf
rep
neg
xadd
movl
adc
mov
cmp
bsr
rcl
mov
mov
call
shl
mov
clc
pushf
pushl
pusha
sub
mov
bt
clc
add
pushf
pushf
popl
call
mov
pushf
pushf
mov
movb
lea
jmp
mov
call
stc
lea
call
lea
jmp
pushf
pushf
mov
movsbw
pop
jmp
movsbw
mov
movzbl
xchg
repz
popl
not
test
shl
push
xchg
neg
movzbl
mov
push
btr
mov
bsf
push
push
mov
clc
shr
sar
push
stc
dec
xchg
pushl
shld
xadd
bts
neg
push
shl
dec
shl
cmc
mov
lea
xchg
bswap
shl
xor
shld
inc
xor
call
bt
shl
pusha
pushf
push
pushf
mov
jmp
push
pusha
pushf
mov
pushl
pushf
movw
lea
jmp
add
pusha
mov
pusha
movl
pushl
mov
lea
jmp
rol
pushf
movzbl
cmp
pusha
clc
sub
test
pushf
jmp
pusha
rcr
movzbl
setbe
mov
stc
push
pushf
mov
rol
test
test
add
pushl
lea
jl
push
push
pusha
pushl
ret
pusha
movb
pusha
jmp
add
pusha
mov
pusha
pushf
push
lea
jmp
daa
cmp
mov
pusha
setne
neg
mov
mov
cmp
clc
sub
pushf
test
cmp
shl
push
jmp
push
mov
cmp
call
push
mov
call
repz
popl
pushf
movb
mov
pushf
pusha
mov
call
pusha
jmp
pushl
mov
pushf
jmp
seta
bts
das
mov
inc
bt
cmp
shl
mov
pusha
call
mov
cld
movsbl
movzbw
mov
call
shl
daa
inc
mov
xor
sub
bsf
mov
jg
bt
stc
not
pusha
bt
not
stc
stc
stc
and
call
mov
push
mov
movl
mov
lea
jmp
jmp
pushf
mov
pushf
pushf
mov
lea
jmp
jmp
test
jmp
pushl
popl
movb
movb
pushf
lea
jmp
stc
ror
bt
lea
bt
add
test
clc
movb
clc
sub
call
pusha
repz
popl
call
jmp
jmp
rcr
or
cmp
mov
cmc
sub
call
movw
pushf
popl
pushl
jmp
and
mov
cmc
xchg
neg
mov
sbb
or
bt
mov
cmp
test
add
pushf
shld
pushf
mov
mov
jmp
pushf
mov
push
pushf
lea
jmp
push
mov
mov
pushf
lea
jmp
pushf
mov
call
call
cwtl
mov
dec
shl
sar
mov
pusha
test
add
jmp
lea
je
push
pushf
movb
movw
lea
jmp
pushf
call
ror
push
sub
sar
sub
rol
add
shrd
neg
pusha
bswap
lea
bswap
not
pusha
dec
btc
sub
pushl
mov
call
push
mov
pushf
mov
jmp
pushf
movb
mov
pushf
lea
jmp
pushf
jmp
add
jmp
rcr
sar
movzbl
stc
add
pushf
lea
jge
ror
stc
add
jmp
pushf
mov
pusha
mov
pusha
push
mov
lea
jbe
pushf
pushf
mov
mov
mov
pushf
movb
mov
lea
jmp
std
cld
jmp
test
xor
cmc
jp
stc
not
call
mov
push
movb
call
stc
add
push
mov
pushf
call
push
mov
pusha
pushl
popl
bswap
movsbw
movl
rcl
rcl
mov
pushf
movw
rol
push
pusha
lea
jmp
lea
xchg
movsbw
push
bswap
jmp
push
jmp
call
call
call
call
ror
mov
sar
mov
bts
bsf
sar
btr
mov
push
bt
cmc
push
add
mov
mov
pusha
pushf
mov
lea
jmp
clc
cmc
jmp
rol
push
bts
and
clc
cmc
call
daa
mov
add
rcl
rcr
mov
push
test
pusha
sub
cmp
stc
pusha
mov
shr
movb
pushf
push
mov
pushf
call
call
repz
popl
pushf
mov
bswap
mov
push
mov
stc
btc
mov
inc
mov
add
pushl
popl
inc
movl
shr
movl
clc
xadd
shld
bsr
mov
test
sub
ror
bswap
xchg
xor
xchg
dec
not
stc
lea
movl
not
call
pushl
popl
pushf
lea
jmp
call
movsbw
mov
cmc
sub
pushf
dec
call
ror
clc
xor
stc
stc
call
mov
jmp
pushf
mov
mov
pushf
popl
movw
jmp
call
movw
mov
call
pushf
mov
call
call
mov
movl
movb
lea
jmp
mov
jge
pushf
movb
pushf
mov
pusha
push
lea
jmp
pushf
inc
pushf
mov
pusha
pushf
lea
jmp
lea
ja
cmp
mov
jmp
mov
mov
ror
neg
mov
cmc
pushf
pushf
sub
test
shl
pushl
push
push
mov
mov
call
push
movb
push
pushl
popl
movw
pusha
push
lea
jmp
pusha
movb
mov
push
push
lea
jmp
call
pushf
popl
pushf
push
jmp
push
pushl
popl
pushf
lea
jmp
rol
pushf
push
mov
pushf
lea
jmp
inc
pushf
mov
mov
push
push
pushf
lea
jmp
jmp
movzbl
ror
stc
pushl
pushl
mov
bt
push
stc
rol
pusha
cmc
bt
stc
add
pushf
mov
mov
pushl
ret
cld
jmp
mov
movb
push
movb
movb
lea
jmp
neg
btr
mov
dec
not
mov
movsbw
and
bsf
mov
cmc
stc
dec
neg
mov
ror
pushl
popl
call
neg
mov
movsbw
bt
mov
stc
jmp
pushf
mov
movl
call
mov
pushf
pushl
movl
lea
jmp
lea
push
lea
jmp
push
mov
pushl
popl
test
push
add
clc
stc
cmc
pushl
popf
movw
mov
lea
jmp
pusha
call
shl
neg
sub
mov
jno
sbb
sets
mov
push
test
pushf
sub
pushf
pushf
pushl
push
shl
mov
jmp
pushf
pushf
popl
pusha
call
pusha
pushf
add
cmc
clc
rol
mov
movb
jmp
jmp
pushf
mov
pusha
pushl
popl
push
mov
lea
jmp
pushf
jmp
bswap
call
jmp
pushf
cmp
cwtl
clc
bt
cmp
test
sub
jmp
clc
xadd
mov
sub
cmc
cmp
mov
test
push
sub
cmp
shl
pushf
jmp
mov
jmp
xor
mov
jmp
pushf
lea
ja
call
jmp
push
lea
jae
push
pushf
movw
pusha
mov
mov
pusha
lea
jmp
btr
mov
jmp
pushf
popl
pushf
pushl
popl
pushl
mov
lea
jmp
add
add
mov
pusha
lea
jmp
mov
mov
push
pushf
lea
jmp
push
mov
jmp
xor
test
push
mov
sub
jmp
lea
ja
rol
pusha
pushf
pusha
lea
jmp
movb
movb
pushl
popl
mov
lea
jmp
sub
jmp
push
lea
jmp
rep
call
jmp
not
pusha
call
sar
mov
xchg
dec
cmc
stc
mov
test
xchg
shl
rcl
mov
cmc
call
pushf
mov
call
das
aam
call
cld
call
push
sub
pushl
stc
pushf
call
mov
pop
mov
lea
not
mov
mov
push
pushl
ret
aad
aad
cmc
movzww
test
push
stc
xor
jmp
neg
lea
shl
mov
lahf
pop
movzbw
shl
pop
aas
pop
jmp
pushl
popl
mov
mov
movb
pushf
lea
jmp
and
push
call
jmp
pushl
mov
push
mov
pushf
pushl
movb
lea
jmp
bt
jmp
sub
stc
pushl
test
sub
pushf
push
pushf
mov
movw
inc
movb
lea
jmp
call
shrd
push
btc
sub
bswap
sub
lea
call
lea
mov
neg
xadd
shrd
mov
lea
jmp
inc
pushf
mov
pushl
push
pushf
movw
lea
jmp
and
ror
mov
cmc
pushf
test
add
jmp
pusha
mov
movw
bswap
call
pushf
popl
jmp
pushl
mov
mov
pusha
pushf
popl
movl
call
btr
mov
dec
mov
call
pushf
mov
jmp
call
mov
mov
pusha
lea
jmp
shl
mov
test
rcl
or
xchg
bswap
shl
ror
xadd
neg
sub
xchg
bts
rol
bts
xadd
rol
sar
mov
adc
sub
lea
mov
bsf
mov
and
mov
add
movzbw
xchg
stc
mov
bts
adc
xor
lea
inc
rcr
sar
xor
bts
btr
seto
sub
ror
call
not
pushf
xchg
pop
push
pop
cld
mov
cld
lea
push
cld
mov
jmp
clc
sub
pushf
jmp
pusha
lea
jmp
pusha
mov
call
mov
bt
mov
mov
call
call
call
call
bsf
lea
sub
jmp
bt
test
sub
push
shl
push
pushl
mov
mov
pushf
pushf
popl
push
call
call
stc
sub
jmp
mov
mov
pusha
jmp
stc
rol
pushf
push
lea
jmp
pusha
mov
call
pushf
movb
pushf
pushf
mov
movb
push
lea
jmp
movb
movw
rep
lea
mov
btr
mov
mov
pushl
popf
mov
lea
jmp
sub
pushf
btr
test
lea
btc
movzbw
bsr
clc
and
cmc
add
shld
sub
bswap
mov
bswap
mov
call
push
inc
clc
push
pushf
jmp
mov
jmp
pushf
popl
pushl
pushl
popl
mov
mov
lea
jmp
mov
clc
bt
push
pusha
sub
pusha
jmp
not
mov
movsbw
inc
dec
bswap
push
pushf
movzbw
movsbl
movzbl
mov
bswap
movzbw
not
push
not
movzbw
push
seto
seta
mov
pushl
movsbw
push
mov
mov
push
mov
not
bswap
not
movzbw
movzbw
setns
inc
rcr
pushl
cmc
setns
bswap
inc
not
cmc
lea
bsf
sub
lea
dec
mov
clc
sbb
lea
ror
mov
shr
sub
add
movsbl
adc
sub
mov
xor
add
rol
bswap
add
mov
movsbw
ror
setge
inc
call
pushl
popl
btc
jmp
add
bt
clc
pushf
neg
lea
jae
bt
bt
ror
cmc
jmp
shl
bsr
mov
not
shrd
pushl
pop
pushl
popl
shrd
btr
movl
sub
ror
shld
shr
mov
mov
neg
inc
btc
bswap
call
movzbw
sbb
mov
stc
jl
bt
test
sub
pusha
pushl
pusha
lea
jp
mov
pushf
movw
lea
jmp
mov
pushf
pusha
pushf
lea
jmp
mov
sub
mov
mov
setns
cmc
mov
stc
pushf
add
shrd
neg
shl
shl
mov
mov
sar
pop
add
not
push
add
inc
lea
sar
dec
or
rcr
xor
btr
movzbw
pushf
rol
btr
cmp
add
movsbw
not
bt
call
pusha
pusha
mov
mov
jmp
pusha
jmp
mov
mov
push
pushl
lea
jnp
pushf
mov
jmp
push
add
add
or
add
or
add
or
add
add
xor
add
shll
add
or
xchg
mov
or
add
pop
or
push
jmp
icebp
or
inc
sub
add
pop
add
mov
add
mov
or
and
add
flds
add
add
icebp
pop
pop
add
hlt
push
add
add
and
or
rorl
xor
add
and
push
add
rorb
add
push
add
rolb
add
mov
add
add
xor
or
adc
add
icebp
pop
pop
add
hlt
pop
add
mov
add
arpl
add
ret
or
add
pop
add
add
xor
or
xor
pop
add
ret
or
add
or
inc
bound
add
test
inc
sub
add
or
adc
or
mov
arpl
inc
sub
add
add
mov
add
or
add
int3
or
inc
push
pop
add
or
and
add
arpl
add
or
mov
clc
pop
add
or
inc
push
or
mov
pop
add
shll
add
and
pop
add
arpl
add
push
push
add
add
add
test
add
push
pop
add
add
shrl
add
or
inc
push
or
mov
ret
pop
add
or
inc
push
or
adc
pop
add
or
adc
or
inc
push
or
and
add
or
add
or
inc
push
pop
add
arpl
add
or
inc
push
or
mov
arpl
add
or
add
push
add
shll
add
push
add
add
add
test
add
or
inc
push
add
adc
add
shrl
add
add
inc
or
add
push
add
and
or
adc
add
and
or
and
add
test
add
inc
icebp
or
add
or
add
dec
add
popa
jae
add
or
xchg
mov
or
inc
push
or
mov
mov
add
shll
add
std
pop
add
or
rorl
inc
pop
push
add
icebp
or
add
test
add
and
or
ror
add
pop
add
ret
pop
add
or
inc
sub
add
dec
add
shrl
add
push
or
loope
add
shrl
add
aas
add
add
add
test
add
inc
or
inc
bound
add
inc
add
xor
or
loope
or
xchg
clc
or
adc
icebp
or
add
or
xchg
mov
add
inc
or
add
pop
add
hlt
or
add
or
xchg
clc
push
add
add
add
loope
add
popa
jae
add
mov
push
jmp
add
icebp
pop
pop
add
or
push
jmp
or
mov
or
rorl
push
jmp
add
xor
pop
add
or
adc
pop
add
push
add
push
add
add
push
jmp
push
add
rorb
add
jmp
or
ror
add
jmp
add
shll
add
ret
or
push
jmp
pop
add
ret
or
inc
sub
push
jmp
push
add
add
rorl
push
jmp
add
icebp
pop
pop
add
ret
or
push
jmp
or
xor
add
jmp
or
loope
add
add
add
add
mov
add
adc
or
push
jmp
or
xchg
clc
or
mov
jmp
pop
add
ret
add
add
add
push
add
add
add
or
pusha
movb
mov
push
mov
jmp
jmp
add
mov
movb
pushf
pushf
popl
jmp
pushl
pusha
mov
movl
lea
jmp
pushf
shr
shr
movzww
cmc
clc
xchg
jmp
mov
push
pusha
lea
jmp
call
mov
pushl
pushl
ret
cwtl
jmp
call
mov
mov
mov
movl
repz
popl
call
sub
ror
mov
push
clc
movzbw
mov
rcr
not
or
rol
mov
cmc
bt
pusha
add
pusha
bt
call
sbb
and
mov
jmp
mov
push
push
cmc
pushl
popl
rcl
rol
lea
movl
mov
btc
btc
mov
bt
bt
jmp
btc
clc
and
mov
neg
shrd
shrd
push
mov
cmc
jmp
mov
call
push
pushf
jmp
stc
jg
push
sub
pusha
movl
movw
cmc
shl
pusha
jmp
shl
setbe
xchg
movzbw
test
bswap
push
bswap
bsr
bts
bswap
pushl
bt
sub
push
jne
and
clc
movsbw
mov
bsr
test
shl
bswap
test
dec
movsbl
rcr
sub
rcl
mov
rol
btc
btr
sub
shl
mov
dec
sub
xor
pushf
neg
pop
mov
rcr
call
jmp
jmp
mov
clc
movb
mov
pusha
cmc
mov
call
pusha
jmp
lea
mov
mov
push
lea
jmp
ror
pusha
jmp
mov
mov
pusha
jmp
rol
cmc
add
call
shld
inc
bt
mov
jmp
pushl
pushf
popl
pushf
call
mov
pushf
mov
pushl
ret
movb
stc
pushf
shl
mov
mov
call
test
sub
stc
movl
clc
cmp
mov
cmc
clc
clc
sub
pushf
mov
pushf
mov
push
lea
jmp
movb
add
movl
lea
jmp
call
mov
pusha
push
lea
jmp
mov
call
mov
call
call
mov
call
pushl
popl
movb
pusha
pushf
pushl
lea
jmp
mov
mov
pushf
lea
jmp
call
call
add
mov
shld
call
mov
pushl
popl
pusha
lea
jmp
mov
jmp
mov
pushf
pushf
lea
jmp
pushf
popl
call
pushf
popl
mov
call
pushf
popl
jmp
call
cbtw
test
pushl
clc
cwtl
stc
sub
jmp
mov
jmp
setns
stc
jmp
call
push
movw
repz
popl
cmc
push
pushf
pushf
mov
pushl
bt
mov
jmp
jmp
push
jmp
mov
push
pushf
mov
pushf
pusha
push
lea
jmp
jmp
sub
jmp
push
pushl
pushf
mov
pushl
push
lea
jmp
pushf
dec
not
setnp
pusha
shl
sub
sar
bsr
bswap
clc
movzbl
bswap
cmc
shrd
rcl
mov
mov
mov
jmp
push
rep
bswap
bswap
ror
dec
mov
movsbl
shl
shld
mov
mov
jmp
rcr
bsf
rol
mov
sbb
dec
shl
xor
mov
pushf
pusha
clc
sub
stc
jmp
mov
pushf
pushf
lea
jbe
pushf
pushf
pushl
popl
pusha
pushf
push
lea
jmp
pop
add
pop
push
add
jbe
add
jge
add
cmpl
or
or
add
test
add
fnstcw
or
or
or
add
lret
pop
add
testb
lods
dec
add
jge
add
arpl
mov
pop
add
pop
inc
add
cmpl
add
jbe
add
fnstenv
or
popa
add
jmp
dec
add
lret
jnp
mov
add
sub
or
pop
add
fsts
or
add
pop
pop
add
notb
or
pop
add
test
or
mov
add
pop
or
add
dec
jno
or
pop
add
fstps
or
jno
mov
dec
add
jne
add
push
jno
mov
dec
add
dec
jno
or
dec
add
or
mov
ja
mov
pop
add
testb
mov
add
ss
add
dec
cmp
add
jbe
add
jno
add
dec
dec
add
cwtl
dec
add
jne
add
jne
add
imul
or
dec
add
xlat
cmp
add
orl
or
push
add
dec
cmp
or
add
fstps
mov
add
mov
popa
add
mov
add
ss
mov
add
jmp
jnp
or
or
add
ss
add
daa
cmp
or
add
ss
add
dec
pop
add
std
dec
add
dec
dec
add
daa
inc
add
jge
add
jbe
add
jbe
add
jge
add
lret
pop
add
jmp
cmp
add
loope
add
repnz
add
push
inc
add
jge
add
testb
or
add
push
pop
add
jmp
pop
add
stc
cmp
mov
inc
add
mov
add
fnstenv
mov
add
jmp
pop
add
fnstcw
add
fldcw
or
add
fsts
or
add
cmpl
or
add
lret
push
add
jge
add
loope
add
nop
popa
add
sbb
add
jne
add
jge
add
stc
data16
pop
pop
add
jne
add
repnz
add
lods
pop
add
add
add
dec
inc
add
sub
or
pop
add
negb
or
push
add
jge
add
pop
cmp
or
inc
add
std
jnp
or
or
inc
add
fstps
add
mov
mov
popa
add
jne
add
ret
dec
add
lods
inc
add
lret
push
add
jbe
add
dec
inc
add
lret
jnp
mov
add
or
add
push
inc
add
cli
jno
mov
inc
add
addl
or
add
pop
inc
add
jne
add
cmp
inc
add
jge
add
test
or
add
std
push
add
repnz
add
mov
or
add
lods
inc
add
mov
or
inc
add
stc
push
add
test
mov
dec
add
sub
rolb
bsr
pusha
pop
add
cmc
btc
bts
pushf
movzbl
bt
clc
mov
pushf
rol
mov
pusha
cmp
clc
add
pushf
jmp
push
pusha
mov
push
pushf
popl
pushf
movb
pushl
popl
pushf
lea
jmp
pop
dec
bts
jmp
call
mov
stc
pusha
add
pushf
pushf
lea
jmp
ror
bt
jmp
mov
pushf
lea
jmp
push
mov
push
pusha
mov
pusha
mov
pushl
pushl
pushl
lea
jmp
movb
pushl
cld
pushf
rep
pusha
mov
std
not
shr
mov
pushf
pushl
pushl
popf
pushf
movb
push
pushf
lea
jmp
push
push
lea
mov
shrd
mov
bt
movb
add
movw
jmp
sub
jmp
call
push
pushl
popl
push
pusha
bt
cmc
add
jmp
shl
sar
mov
cmp
test
pushf
add
lea
jl
pusha
pusha
mov
movb
push
lea
jmp
bswap
daa
mov
bsf
mov
cmc
pusha
pusha
call
add
push
pushf
mov
pusha
pushf
lea
jmp
pushf
dec
movsbw
setl
cmc
rol
rol
rcr
mov
not
setle
sbb
shr
clc
and
shr
bt
mov
jmp
stc
pushf
neg
cmp
add
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
call
movb
push
pushl
popl
pushl
lea
jmp
pushf
pushf
mov
stc
cmc
call
pushf
mov
lea
bt
mov
rol
mov
pusha
not
movzbw
push
pushl
popl
call
or
mov
dec
pusha
mov
movb
jmp
movsbl
mov
pushf
pushf
popl
lea
push
cld
lea
movsbw
mov
not
pushf
lea
push
cld
call
bt
stc
add
stc
push
sub
jg
popf
push
pusha
pushl
lea
jmp
sub
pusha
push
jmp
lea
push
lea
jmp
pushf
push
add
lea
jg
pusha
mov
mov
movw
push
lea
jmp
cmc
sub
pusha
call
call
cmp
clc
xor
lea
jl
cmp
sub
stc
pusha
mov
jmp
jmp
pusha
call
movb
pushl
popl
pushl
lea
jmp
pushf
mov
lea
jno
inc
pusha
pushf
pusha
push
lea
jmp
ror
call
bts
lea
sbb
shl
sub
xchg
mov
push
btr
mov
shr
add
sub
bt
xchg
mov
bsf
xor
movsbw
movsbw
call
pushf
popl
pushl
pushl
popl
mov
pushf
pushf
lea
jmp
mov
push
push
lea
jmp
push
pushf
pusha
xchg
jmp
cmp
pusha
pusha
cmc
mov
jmp
push
pushf
popl
push
pushl
popl
pushf
movw
pushf
lea
jmp
shl
rol
rcl
sub
movzww
jmp
mov
pop
bswap
jmp
bswap
push
jmp
mov
pusha
movsbw
mov
push
pushl
cld
push
jmp
mov
mov
mov
lea
jmp
jmp
pusha
not
mov
pusha
inc
jmp
movb
mov
pushf
lea
jmp
neg
call
push
call
sub
mov
jmp
pusha
lea
jne
popl
pushf
mov
push
pushf
lea
jmp
pusha
movl
sbb
mov
mov
cmp
shld
bsr
bswap
cmc
mov
pushf
lea
xor
inc
dec
jmp
adc
btc
pusha
sub
not
bts
neg
sbb
push
sar
sub
add
stc
pushl
neg
sar
movzbw
sub
setg
bsf
sub
mov
cmp
movb
call
pushf
mov
movb
lea
jmp
add
cmc
neg
pushl
pushf
ror
movb
add
pushl
test
pushf
mov
test
stc
pushf
sub
jmp
pusha
mov
movb
mov
movl
mov
movb
lea
jmp
movw
neg
clc
call
cmp
push
push
sub
pushf
jmp
ror
movb
clc
cmc
xor
bt
cwtl
stc
add
add
js
clc
push
sub
jmp
pushf
mov
call
movb
call
bswap
push
movzbw
pop
push
cld
jmp
movl
lea
movl
mov
movb
movb
pushf
lea
jmp
pushf
test
sub
call
cld
mov
mov
bswap
mov
push
std
cld
cld
call
pusha
mov
movl
movb
call
movzbw
movzbw
mov
call
call
push
jmp
mov
mov
movb
mov
lea
jmp
push
pushf
rol
mov
xor
jmp
pushl
popl
push
lea
jmp
das
stc
rcl
lea
mov
bt
add
jmp
setb
pushf
mov
pushf
pusha
call
mov
movsbw
mov
movw
cmp
pushl
popf
movb
push
pushf
lea
jmp
movzbw
bswap
bswap
mov
push
push
pushf
push
mov
pusha
mov
push
push
mov
push
movb
movb
lea
jmp
repz
popl
call
pushl
jmp
call
shl
jmp
shl
neg
shld
adc
mov
clc
shr
sbb
mov
jns
stc
stc
pushf
sub
jmp
mov
jmp
repz
popl
stc
clc
stc
cmc
mov
call
call
call
setp
pusha
xor
ror
sub
clc
sub
shrd
push
lea
xor
movsbw
pop
movzbl
btc
pop
pushf
rol
mov
jmp
movl
pop
mov
jmp
mov
pusha
lea
jmp
setns
sar
shr
mov
add
mov
push
movb
not
pusha
bt
not
pushf
bt
call
pushf
mov
jmp
lea
pop
xchg
not
movzbw
pop
xchg
not
call
rol
mov
pusha
pushf
lea
jmp
clc
call
add
mov
mov
pushf
push
lea
jmp
push
pushl
call
clc
and
call
pushf
popl
jmp
shr
dec
not
jmp
stc
bswap
mov
pushf
push
call
movsbw
sbb
mov
clc
stc
pusha
bt
bswap
jmp
call
neg
xor
and
cmp
xor
and
stc
sar
neg
movsbl
and
shl
shld
bt
shl
mov
cmc
sub
pushf
pushf
mov
pushl
pushf
pushf
movb
lea
jmp
add
stc
clc
bt
sub
call
pushf
pushl
popl
mov
lea
jmp
xchg
mov
movsbw
xchg
call
cmc
mov
stc
mov
pusha
mov
call
pushf
popl
call
push
pusha
mov
mov
pusha
push
lea
jmp
push
movzbw
bts
shld
movl
rol
add
mov
stc
movzbl
and
neg
bswap
or
push
xchg
rol
xor
movzbw
dec
shld
lea
btc
shl
sub
not
mov
pushf
pusha
push
lea
jmp
jmp
call
cmp
cmp
cbtw
pushl
cmp
bt
cwtl
pushl
test
pusha
sub
pushf
call
test
sub
stc
stc
test
shr
pushf
movb
push
mov
pushf
pusha
mov
push
pushf
popl
pushf
pushl
popl
mov
movb
lea
jmp
clc
cmp
pushf
lea
ja
bswap
bswap
lahf
mov
aas
sub
or
lea
call
pushl
popl
pushf
pushl
lea
jmp
jmp
mov
mov
mov
lea
jmp
pushf
add
cmp
bt
bt
mov
cmp
sub
jmp
jmp
mov
pushf
push
pusha
pushf
popl
push
jmp
lea
jp
cmc
bt
ror
pushf
add
jmp
bt
sub
pushf
stc
pushf
test
neg
call
jmp
pusha
mov
pushf
pushf
movl
pushf
lea
jmp
cmp
stc
xor
push
ror
movl
call
jmp
call
jmp
call
movw
mov
pushl
pusha
pushf
popl
pushf
jmp
pusha
mov
movb
call
add
bt
clc
sub
lea
js
push
pushf
mov
mov
pushf
mov
pushl
lea
jmp
lea
pushf
movb
pusha
lea
jmp
pusha
mov
jmp
mov
pushf
movsbw
pushf
popl
not
not
push
xchg
movzbw
mov
pushf
bswap
movzbw
push
lea
push
push
mov
push
mov
jmp
call
jmp
push
call
pushl
movb
mov
mov
push
mov
lea
jmp
ror
shld
neg
not
ror
add
pushf
not
rol
mov
ror
rcl
and
bt
mov
call
pusha
pusha
mov
pushf
call
call
pushl
popl
pushf
pushf
lea
jmp
jmp
call
push
mov
jmp
call
movb
push
mov
pusha
pushf
mov
pushf
lea
jmp
bsf
call
push
mov
pusha
pushf
pushf
lea
jmp
mov
movb
mov
jmp
pushf
pusha
mov
movb
mov
jmp
push
call
pushf
mov
pushl
pusha
pushf
pushf
mov
pushf
movw
lea
jno
repz
push
call
mov
lea
jb
push
pushl
popl
pusha
lea
jmp
pushl
call
pushf
pushf
popl
push
movb
push
pushl
popl
pushf
pushf
pushl
movb
lea
jmp
mov
movw
lea
jmp
sub
push
pusha
pusha
pushf
ror
cmc
test
mov
pushf
not
call
movzbl
pop
mov
std
cld
movw
push
rep
sub
not
stc
shl
mov
stc
mov
cld
bt
stc
clc
pushl
popf
pushl
lea
jmp
shl
push
inc
movzbl
cmc
jmp
dec
rol
lea
jmp
sar
sbb
rcr
movzbl
bt
sub
call
pushf
mov
movw
pushl
pusha
lea
jmp
pushf
pusha
mov
movb
mov
push
lea
jmp
movzbl
neg
xadd
mov
dec
xor
dec
add
add
jmp
movb
mov
jmp
pushf
popl
call
setae
mov
pushf
push
jmp
mov
pushf
pushf
mov
mov
lea
jmp
pushf
popl
call
pushl
popl
push
pushl
mov
lea
jmp
push
pusha
movb
call
jmp
push
shld
add
not
mov
clc
stc
test
xor
mov
mov
add
push
push
mov
pusha
lea
jmp
mov
mov
jmp
mov
jmp
movzbl
inc
adc
shrd
shl
bts
xor
cmc
rol
call
sbb
shl
mov
test
jmp
pusha
xchg
movsbw
call
call
mov
call
call
push
xchg
bswap
movzbw
mov
pushf
jmp
add
sar
not
shl
mov
clc
cmc
pusha
jmp
movl
pushl
movb
pushl
mov
lea
jmp
pusha
movl
pusha
jmp
fcomp
mov
in
lahf
loopne
aam
movsl
mov
cs
push
mov
das
mov
lahf
ljmp
imul
lea
jmp
insl
ds
cmc
push
xchg
cmpsl
jle
mov
lcall
mov
outsb
rorb
jge
sub
jne
ret
jge
repz
test
lods
inc
aaa
sahf
fldcw
sbbl
das
inc
cmp
and
dec
push
movb
movl
push
pushf
movb
lea
jmp
movl
push
mov
pushf
lea
jmp
movl
movb
lea
jmp
movl
call
pop
cmp
ret
lret
movq
inc
or
shrl
push
xchg
push
mov
sbb
or
push
ja
aam
push
jo
fdivr
call
pushf
call
mov
and
pusha
movl
call
push
mov
in
dec
movsb
xchg
jns
in
mov
cmp
outsl
in
iret
push
daa
fwait
cmc
jmp
outsb
and
add
or
mov
dec
mov
mov
inc
or
scas
inc
jg
mov
imul
test
fldl
jg
mov
push
ja
push
aaa
pop
mov
clc
mov
xorb
stos
mov
inc
and
ret
je
add
lea
jmp
and
xchg
inc
shrl
ds
xchg
test
and
fdiv
dec
push
outsb
xchg
inc
xchg
rcrl
lahf
mov
bound
push
adc
add
sbb
mov
or
adc
pop
jns
xor
jecxz
pop
add
add
bound
mov
jecxz
push
rclb
lret
hlt
scas
xor
fwait
shrl
push
int3
jnp
out
int3
fldcw
cmp
insl
cmpsl
xor
js
ja
nop
cmpsl
popl
fildl
inc
mov
and
jo
cltd
insb
jns
js
pop
jp
pusha
nop
test
int
sbb
push
popf
pushl
call
cs
into
scas
leave
in
inc
aaa
lods
dec
insl
lds
xor
div
in
addb
es
or
sub
pop
cmp
aad
les
lea
inc
movsb
xor
jbe
push
add
scas
shrl
jae
mov
xchg
pop
jns
cmpsl
mov
inc
and
push
ja
lahf
pushl
movl
pusha
pushf
lea
jmp
movl
jmp
push
xchg
inc
test
iret
mov
dec
sub
mov
ljmp
jnp
mov
jno
fdivr
sarb
rclb
jbe
mov
dec
sub
mov
cmp
outsw
pop
outsb
inc
js
and
push
cmp
sub
ljmp
cwtl
pop
int
ja
sahf
dec
aad
out
add
xchg
ja
add
fistl
shrb
stos
pop
jb
jnp
xchg
push
sti
aas
adc
cpuid
call
call
movl
pusha
call
movb
push
movl
pusha
pushf
lea
jmp
mov
sarb
mov
mov
xchg
push
rcr
out
inc
mov
xchg
push
adc
fsubrl
xrelease
shlb
and
xchg
pusha
jb
mov
clc
xchg
out
das
test
mov
sbb
lret
bound
inc
xorb
cmpl
test
mov
xlat
mov
and
inc
stc
shll
pop
jns
out
jb
cpuid
pusha
pusha
call
movl
pusha
mov
push
pushl
lea
jmp
les
arpl
adc
out
push
sti
ret
push
in
lock
jo
adc
sub
bound
add
mov
add
pop
test
mov
loope
imul
setg
xor
add
inc
inc
popa
xchg
ficomps
push
call
jae
andl
sbb
jmp
lock
cmp
nop
adc
stos
loopne
or
cmp
fists
lods
call
push
mov
orb
testl
stc
mov
sub
shlb
icebp
iret
enter
or
jg
jnp
xchg
mov
icebp
mov
das
push
and
cmpsl
push
jne
gs
out
add
xchg
mov
call
jl
dec
xchg
or
ficomps
out
ss
cltd
adcl
jp
jno
add
lahf
push
xchg
js
mov
fstpt
pop
scas
rolb
cmp
dec
mov
ret
adc
push
repz
imul
jns
pusha
test
shlb
add
mov
sahf
hlt
in
stc
push
cmpsl
xor
xchg
les
fcoms
dec
roll
sub
xchg
add
subb
je
nop
cli
add
mov
xchg
test
mov
into
mov
inc
repz
mov
xchg
lods
xchg
and
setg
gs
push
cmc
daa
jne
inc
aaa
lret
cmpsl
push
jne
jo
mov
or
gs
cmp
mov
xchg
push
movw
jmp
jmp
das
loopne
dec
inc
shrb
ds
sbb
stos
roll
pushw
mov
or
frstor
and
cmp
subb
adc
mov
rol
enter
scas
xchg
cmp
lock
and
ja
fsubrl
and
ja
pop
pop
js
mov
add
and
jbe
push
cld
push
pushf
push
pushf
lea
jmp
push
lock
sbbb
sub
stos
and
rclb
in
or
jg
mov
jp
movsb
and
lods
mov
pop
jb
shrl
pop
pushf
fisttpll
lock
jge
xor
cmp
inc
cmp
jg
mov
out
xlat
sbb
dec
bound
or
pop
cs
push
pushf
cld
mov
push
push
sbb
pop
sub
fldl
xor
dec
nop
xor
jle
lods
sbb
lea
adc
hlt
dec
fidivrs
addr16
scas
jp
cli
sarb
aaa
mov
popf
xchg
sbb
jbe
loope
mov
or
mov
jg
repz
push
roll
fwait
stos
enter
cmpsl
mov
in
xchg
in
mov
mov
sbb
movsl
inc
jb
pop
adc
jmp
sbb
in
pop
and
lds
pop
addr16
xor
aam
jmp
and
pushf
jns
test
mov
insl
arpl
test
movsb
in
test
aad
pop
int3
pop
popf
call
push
aam
insl
aaa
xchg
push
inc
test
mov
out
cmp
jno
outsb
lret
fcom
packuswb
inc
add
sbb
ret
lods
sbb
dec
sbb
jb
mov
jns
scas
lods
mov
push
fsubs
mov
shll
adc
in
ret
sbb
imul
in
mov
lret
pop
cmp
xchg
cmp
out
movsb
jne
add
test
mov
stc
cwtl
out
ds
repnz
in
add
xchg
xchg
xchg
adc
mov
dec
sbb
hlt
sbb
sarb
inc
mov
fildll
xchg
mov
xor
adc
and
sub
mov
jg
icebp
int
out
mov
pop
sbb
inc
subb
cltd
jbe
fildl
sbb
addr16
cld
addr16
inc
mov
stos
gs
insb
xor
sti
push
and
loop
mov
and
mov
dec
jns
fmuls
repnz
mov
push
and
mov
pop
mov
imul
and
je
mov
sbb
jecxz
test
cld
push
jne
sbb
xchg
dec
push
inc
repnz
int3
adc
jge
fnstenv
jle
addr16
and
fstpl
xchg
lcall
leave
out
xchg
push
inc
jo
dec
scas
lods
sbb
cmp
adc
mov
stos
sub
out
sbb
mov
int3
cmp
pop
out
add
mov
xchg
addr16
xchg
jge
add
push
cmp
sbb
xor
lcall
mov
in
sbbl
push
mov
push
mov
xchg
sahf
fcmovnb
push
std
fbstp
inc
xor
enter
pop
jno
mov
xchg
mov
inc
and
popf
cmpsb
daa
sub
inc
jns
iret
daa
fucomp
fsubs
aas
mov
pop
mov
jb
xor
mov
mov
sub
push
push
sbb
jae
mov
nopl
push
add
xor
and
insl
fsubs
mov
dec
popa
mov
lods
pop
inc
aam
pop
pop
mov
push
test
stc
push
js
adc
js
push
inc
cmp
out
nop
sbb
ljmp
sbb
outsl
xlat
sbb
ds
loopne
scas
push
add
cmp
and
inc
daa
out
push
aas
outsb
std
cld
push
stos
fucom
adc
mov
ja
js
sbb
xlat
mov
and
cli
xor
sbb
enter
sbb
insl
les
and
jl
xor
fsubr
xchg
mov
sub
call
fdiv
sbb
stc
mull
rcrl
fcompl
cmp
adc
decb
jecxz
dec
xchg
push
xor
cli
inc
jno
sahf
jecxz
outsl
jle
lods
cmp
ds
pop
mov
pop
pop
aam
pop
dec
arpl
push
jb
inc
add
sbb
inc
cmp
jmp
mov
test
jmp
mov
dec
sbb
pop
scas
push
sub
popa
jo
roll
xchg
nop
xor
sub
mov
popf
fists
sbb
cmp
icebp
push
fistps
vpsrad
lds
test
cltd
xchg
lds
mov
mov
mov
xor
fildll
cltd
cmc
sub
adc
fcom
ja
clc
cmp
lret
adc
mov
stos
in
sub
loope
inc
mov
outsl
lea
sbb
bound
mov
sbb
cmc
movsb
jmp
js
add
cmp
jle
push
je
ds
mov
jo
or
imul
and
sbb
iret
add
sbb
jns
xchg
ja
stc
nop
add
adc
aaa
arpl
std
insb
ss
dec
dec
mov
cli
imul
int3
xorb
adc
inc
cltd
dec
pop
cmp
inc
mov
sub
mov
inc
jb
movsb
dec
int3
fwait
notb
sarb
pop
fbstp
mov
lea
jb
jo
ljmp
hlt
dec
add
les
pop
sbb
and
mov
mov
sub
mov
xor
sub
pushf
dec
dec
adc
adcb
mov
lds
das
adc
outsl
sbb
and
cmpsl
adc
mov
in
jl
scas
jno
add
es
out
pop
test
fadds
sbb
sbb
cli
ficomps
cmp
add
lock
dec
pushf
sub
lret
ret
sbb
pop
mov
sbb
imul
xor
dec
pop
in
cs
inc
popf
shll
sbb
test
push
in
clc
xchg
fsubrp
mov
shrl
sbb
and
insb
push
insl
es
scas
mull
and
push
add
inc
das
jne
add
xchg
ret
inc
jnp
aad
jo
xor
cli
push
mov
xchg
mov
dec
repnz
cli
ret
ficomps
cmc
shlb
mov
or
popa
ljmp
add
xchg
jecxz
roll
mov
out
clc
adc
inc
inc
cmpsb
in
stos
xor
outsb
cmp
mov
adc
push
int
rcrb
cmpsl
test
mov
sbb
inc
outsb
dec
pop
push
loopne
int3
ret
sbb
clc
flds
adc
xor
and
in
imul
sub
hlt
push
push
xrelease
mov
aam
and
pop
into
in
xchg
ja
sarl
psllw
adc
or
lfs
ja
sbb
movsl
daa
and
inc
inc
dec
mov
or
sub
push
mov
xchg
and
lahf
jg
adc
in
mov
pushf
loope
lret
adc
cmp
fiadds
lret
cmp
ret
add
scas
inc
push
cmpb
cmp
aad
jb
or
divl
xlat
pop
pop
int3
popf
in
jnp
add
mov
push
stos
test
adc
ljmp
adc
js
sahf
push
sub
mov
jg
dec
push
cmp
lret
push
das
repnz
mov
sbb
fadds
jmp
and
popf
and
sbb
push
or
int3
xchg
sbb
pop
sahf
mov
adc
sbb
cli
mov
nop
jno
sub
gs
push
dec
sbb
aas
inc
dec
xor
cmp
inc
cmc
xchg
xchg
and
repz
cli
or
ljmp
push
call
inc
clc
pop
outsl
sahf
pop
jl
lahf
lods
mov
in
imul
shrl
mov
bnd
es
cmp
cmp
int
sbb
je
cmp
pop
or
cmp
adc
rclb
fsubs
jo
cs
shrl
dec
inc
sbb
out
adc
lods
mov
inc
inc
jl
data16
mov
sbb
mov
ret
pop
fdivrp
mov
mov
insb
cmp
mov
ficomps
mov
adc
sub
dec
mov
push
movsl
xor
imulb
aas
mov
push
jno
nop
lahf
jl
movsb
xorb
fsubrs
ret
jle
pop
sbb
push
hlt
jge
in
in
xor
or
idiv
mov
test
sbb
test
in
lock
in
dec
jmp
mov
mov
or
inc
es
push
nop
inc
sbb
inc
fwait
cltd
dec
mov
aam
rolb
mov
jle
fucomp
pop
sbb
and
cmp
and
push
enter
rcrl
in
jg
inc
sub
inc
mov
je
pop
lcall
sbb
leave
pusha
pop
test
sbb
sub
ljmp
sbb
aas
sbb
pusha
jnp
xor
ljmp
or
mov
pushf
mov
or
and
sub
cmc
mov
and
xor
movsl
mov
das
inc
negl
xchg
jbe
add
test
iret
sbb
repz
in
rcll
cmp
push
push
in
fimuls
jmp
aas
xchg
lds
in
les
xchg
cltd
jbe
inc
mov
insb
jno
sbb
jecxz,pt
push
sbb
imul
xor
sti
add
rcrl
sbb
shrl
pop
jbe
sbbb
filds
pop
sbb
cmc
stc
stos
jmp
sbb
or
iret
aaa
add
int
sub
pop
pop
or
das
insb
mov
mov
or
addl
xor
pop
dec
cmp
dec
mov
dec
and
or
sbb
jno
movsb
and
sbb
int
jp
mov
movsb
cld
dec
sbb
leave
sbb
testb
add
imul
mov
pop
les
mov
and
insb
mov
dec
rorb
mov
pop
push
jae
push
addr16
jmp
jbe
xor
mov
dec
inc
inc
test
test
jl
inc
imul
or
cmpsl
sbb
mov
cmp
xchg
or
mov
loopne
insb
adc
lds
loopne
or
jo
pushf
pop
lock
js
imul
cmp
push
sbb
loopne
pop
cmpsb
inc
sbb
adc
inc
mov
and
pop
es
jmp
mov
jno
aas
test
jne
mov
pop
out
ret
sarb
pop
jns
inc
pop
in
xor
xor
sbb
sbb
xor
mov
sub
pop
push
es
jmp
fdivs
popa
jo
lock
sbb
mov
inc
cmp
mov
push
nop
fisttps
sbb
xchg
ror
add
lock
pop
dec
out
mov
pop
aam
aam
cs
pop
pop
roll
shr
mov
sub
push
pop
aas
xchg
mov
in
dec
push
pop
outsb
mov
frstor
fstpl
jg
in
sbb
std
mov
pushf
sbb
push
and
or
mov
dec
pop
xor
loopne
cmp
icebp
sbb
out
sbb
mov
and
inc
pop
lret
es
jb
mov
out
inc
mov
push
ss
loop
jnp
jno
mov
vmovapd
push
in
sbb
mov
or
ss
adc
jmp
mov
mov
add
nop
repnz
fdiv
es
xchg
icebp
mov
mov
adc
repnz
sub
aaa
adc
outsb
das
scas
movsl
jbe
xchg
xor
jmp
movsl
sub
push
jp
push
movsl
sub
cmc
mov
push
mov
cs
pop
insl
lods
insb
jne
inc
sbb
pop
popf
hlt
push
movsb
and
push
scas
gs
out
cmc
sbb
push
ficoml
hlt
data16
aad
aas
imul
test
daa
push
push
adcb
cmpsl
cmp
sub
ficompl
adc
lahf
mov
xor
adc
ror
fs
cmc
inc
jecxz
xchg
test
test
lds
loop,pn
nop
lahf
outsb
push
adc
dec
in
cmp
jo
sbb
adc
sbb
rcr
fsubrl
mov
popa
pusha
cmp
mov
push
insb
mov
sbb
hlt
out
push
lds
out
ret
sarb
add
cmpsb
ret
jo
imul
sbb
jl
jmp
ja
movsb
nop
flds
push
aaa
idivl
jne
and
rcrl
aad
and
sub
xor
ja
scas
inc
mov
jnp
jecxz
inc
sti
in
xlat
inc
outsl
pop
cmc
inc
lods
inc
jbe
xchg
and
test
fmul
popf
stos
enter
dec
dec
jnp
sbb
or
nop
add
fdiv
add
cmp
xchg
in
mov
rorl
mov
add
arpl
outsb
stos
dec
sbb
pop
pop
test
sbb
jle
arpl
dec
sbb
fsubrs
pop
mov
sub
dec
pop
mov
jb
push
daa
xor
imul
sub
jb
std
pushf
addr16
sarl
enter
inc
jge
sbb
dec
lret
sbb
jle
adc
adc
pop
mov
pushf
rcll
and
push
idivb
dec
sub
sarb
xor
bound
mov
cmc
mov
push
sub
cmp
int
sbb
lahf
popf
imul
cltd
add
mov
lods
jg
scas
add
jmp
jge
lret
dec
add
or
xor
or
inc
and
ss
mov
xor
iret
ror
aaa
ss
jo
sub
movsb
cmp
pop
inc
fwait
cltd
dec
add
jnp
or
inc
push
mov
dec
in
prefetch
or
dec
sub
les
out
sbb
and
mov
cmp
cmp
inc
leave
push
cld
mov
mov
mov
mov
mul
ss
dec
mov
mov
hlt
jmp
sbb
add
sbb
xchg
xor
pop
jae,pn
gs
inc
out
sbb
jge
jae
cmp
icebp
repnz
xor
loop
xlat
out
in
shl
enter
sub
bound
scas
ret
xor
or
addl
and
push
mov
pop
lcall
mov
out
test
sbb
jg
das
jo
adc
test
sbb
or
insl
dec
sbb
push
das
jmp
xchg
stos
cmp
jp
inc
and
jg
sbb
mov
xor
loope
xchg
dec
ret
xchg
adc
test
addr16
mov
or
xchg
lock
mov
xchg
pcmpgtb
into
aaa
push
mov
push
mov
fcomi
test
cmp
mov
inc
std
cltd
inc
sub
test
inc
xor
icebp
push
std
jle
sbb
ret
xor
or
cmp
imul
lods
mov
sbb
push
add
arpl
cwtl
inc
fisttpl
dec
int3
and
push
and
fsubrl
jmp
dec
imul
sbb
push
sbb
pop
outsb
inc
mov
cmc
in
sbb
sub
je
or
pop
push
and
xor
pop
movsb
and
rcrl
cld
mov
add
ss
fdivrl
testb
dec
pop
ljmp
ret
repnz
enter
and
es
fdivl
ficoms
lcall
push
push
ret
adc
lds
jno
stos
pop
out
mov
sub
push
test
inc
sahf
dec
imul
sbb
sbb
or
aas
test
in
and
fiadds
fs
adc
sahf
add
loopne
ds
adc
sub
xchg
mov
push
out
scas
outsb
faddl
outsb
fcomps
push
and
es
mov
stc
sub
cld
movsl
aas
sbb
inc
adcl
jb
push
jge
hlt
mov
lcall
jge
clc
aad
mov
cmpl
fisubl
jg
pop
jns
test
pop
popa
mov
inc
add
pop
pushf
push
sbb
adc
shll
dec
xchg
pop
int
mov
jge
xchg
call
sbb
out
xchg
jno
mov
js
inc
jae
jae
jmp
data16
out
les
pusha
xor
dec
dec
bound
lods
jnp
ret
movsb
cmp
test
xchg
lds
mov
movsb
insl
pop
in
rcl
rorl
or
mov
fs
int3
aaa
mov
arpl
pusha
sbb
mov
xchg
fisubrs
or
mov
int3
sbb
mov
std
scas
add
sbb
lret
add
mov
adc
push
out
xor
mov
xor
stc
push
push
cli
test
fsubrs
movsl
adc
repz
xor
mov
cwtl
cmpsl
xchg
decb
stos
adc
sbb
int
in
pop
fs
push
push
add
xor
xchg
in
pop
mov
pop
fcompl
repz
cmc
sub
sbb
add
push
sbb
insb
xchg
jne
xchg
lock
popf
jne
out
js
repz
ss
std
sbb
les
inc
test
frstor
enter
sbb
dec
mov
dec
in
aaa
xor
jg
pop
sbb
test
hlt
pop
aas
xchg
xor
jmp
xchg
sbb
loopne
rcl
sti
dec
mov
adc
push
xor
enter
icebp
cmpsl
xlat
out
push
std
push
test
andl
add
sahf
and
xorl
sbb
mov
pop
jae
push
adc
pop
mov
inc
mov
mov
daa
add
cmp
insb
sbb
push
push
lea
dec
sbb
stos
das
xchg
xor
pop
jns
scas
dec
data16
addr16
cmp
or
push
imul
cltd
and
int
mov
and
mov
mov
mul
cmp
add
xchg
icebp
loop
cs
in
jmp
fistpll
add
je
aad
fwait
dec
mov
sbb
cmc
out
mov
push
push
rcrb
jle
sbb
mov
jbe
aas
sahf
xor
sbb
sub
pop
sbb
ret
xor
nop
mov
cmp
inc
repz
adc
dec
mov
mov
cmpl
adc
daa
stos
scas
jl
push
decb
scas
inc
mov
push
mov
outsl
mov
std
push
jmp
sbb
adc
jb
sbb
popf
jle
lret
xchg
adc
jae
xchg
cld
xchg
add
inc
testb
test
into
int
inc
mov
add
insb
dec
xor
xor
ja
fimull
dec
sub
lods
add
test
imul
jo
push
shlb
adc
sahf
mov
cmpb
inc
lcall
xchg
test
mov
mov
jmp
repz
into
and
mov
mov
lret
stos
test
test
sbb
pop
stos
out
inc
jbe
out
jge
push
xchg
in
cmp
xlat
pop
push
jge
cmp
mulb
dec
out
mov
sbb
test
xchg
rcrb
xchg
aaa
push
push
jle
pop
sbb
sub
ffreep
adc
xor
std
push
sbb
mov
xchg
vucomiss
jnp
inc
sub
fmull
outsl
pop
mov
or
mov
enter
popa
fisubs
cmp
cwtl
xchg
outsb
sahf
pop
mov
mov
sbbl
jg
sbb
sahf
dec
xlat
cmp
sbb
insb
cmp
jp
pop
call
add
adc
fwait
orl
mov
push
pop
xor
pop
push
loop
cmp
pop
mov
lock
cmp
inc
and
sbb
int3
xor
lock
popf
pushf
jns
push
lods
inc
sbb
or
cltd
sbb
sbb
dec
and
sbb
and
sub
fdivs
sti
lret
mov
jmp
ret
mov
je
loopne
divb
pushf
push
ret
pop
xor
pop
movb
ss
pop
mov
mov
imul
hlt
push
out
xchg
pop
xchg
add
ds
test
adc
aas
xor
mov
jge
lret
pushf
gs
push
fidivl
adc
push
pop
push
loopne
js
icebp
mov
dec
xchg
lods
push
push
leave
xchg
lret
cmp
repz
popw
fstpt
xchg
mov
int
cmpsb
add
mov
ljmp
sbb
scas
mov
sbb
dec
cmp
mov
jbe
inc
imul
push
dec
push
xchg
fnstenv
add
test
icebp
out
mov
xor
mov
loop
mov
dec
add
xor
outsl
xlat
and
out
sbb
inc
mov
dec
sbb
pop
sub
sbb
sub
and
push
lds
mov
mov
push
roll
mov
jle
sub
sbb
clc
popa
bound
jbe
mov
pop
lret
add
pop
pop
pop
lcall
pop
push
pop
jo
lods
and
cmp
push
sub
mov
push
push
mov
sub
out
mov
and
daa
ss
dec
adc
xchg
cmc
cmp
mov
pop
aaa
add
inc
loope
jne
lds
cvtps2pd
stc
jp
out
std
int3
fwait
jnp
bswap
pop
stos
cmpsl
jg
push
xor
lret
and
outsb
sub
push
and
stc
clc
cmp
mov
in
mov
roll
xor
sbb
std
push
push
repz
lock
sbb
cmp
pushf
movsb
sbb
jae
add
mov
in
fisttps
out
stos
adc
mov
stos
jp
movsb
mov
mov
loop
mov
es
jge
lcall
popf
ds
sbb
jmp
jge
sbb
loop
imul
rcrl
add
repnz
mov
xor
repz
pop
cmp
xchg
sbb
dec
out
lock
cmp
mov
pop
sbb
mov
xor
test
ja
data16
ret
cmp
sub
test
and
jo
int
pop
jnp
sbb
and
pushf
jmp
sub
out
or
lcall
push
push
or
mov
fstl
mov
xchg
int
push
sub
mov
sbb
xor
jp
sbb
mov
and
xor
rclb
xchg
repz
out
push
jge
stos
cmp
mov
lahf
add
punpckldq
lret
jo
mov
inc
mov
inc
cltd
data16
lcall
gs
push
rorl
stos
rcl
fistpl
sub
in
xor
cwtl
sbb
push
cmp
push
test
mov
and
sbb
cmp
out
adc
jo
jno
ljmp
fstl
mov
int3
movsb
das
jle
lods
cli
push
and
dec
push
xor
in
sub
inc
test
into
lcall
lods
out
jecxz
xchg
adc
or
fbstp
mov
out
dec
jns
add
cmp
fdecstp
cmpsl
cmpsb
sbb
mov
jno
lods
sbb
data16
pop
test
pop
imul
mov
sub
mov
push
mov
xchg
cmpsb
pop
sbb
imul
pop
lds
adc
mov
xchg
imul
lock
xchg
pop
ljmp
into
cld
jns
sbb
xor
pushf
sarl
ja
stos
jns
pop
cmpsl
pop
sub
mull
sub
mov
jecxz
sbb
jp
mov
push
push
fidivrl
push
or
sbb
xchg
pop
negb
jl
mov
lcall
mov
push
lret
inc
and
insl
mov
pop
sarb
adc
xchg
sub
mov
push
add
xor
gs
inc
add
sarb
lods
cmc
mov
rorb
push
outsb
std
cmpsb
mov
out
cmp
sbb
sbb
cmpsl
scas
das
inc
xchg
sbb
lahf
push
pop
outsl
push
mov
inc
mov
and
inc
gs
push
and
dec
fstl
pop
sbb
push
push
sbb
jns
push
jns
or
dec
lods
jg
mov
lock
lea
mov
jne
movsb
mov
add
cmp
popl
add
add
sbb
std
push
mov
pop
mov
ss
arpl
into
ret
xchg
ja
dec
aas
sub
push
aas
sbb
imul
adc
mov
and
jp
lcall
sbb
xor
adc
aas
mov
sub
sbb
sbb
push
fstp
out
out
pop
jp
mov
mov
inc
pop
push
add
cmp
frstor
add
or
in
push
lret
xchg
jge
push
sbb
add
pop
fmuls
out
and
adc
cltd
ds
adc
sbb
cltd
fidivs
mov
dec
rolb
adc
sbb
shl
fbstp
fsubr
sub
shlb
sbb
add
mov
int
clc
aad
les
jno
jge
jno
sbb
sbb
fucomip
dec
push
xchg
mov
xorl
stos
push
out
sub
push
pop
mov
mov
jmp
and
aam
dec
std
push
scas
inc
icebp
nopl
mov
mov
mov
sbb
sbb
js
mov
pop
cmc
and
out
mov
adc
mov
xor
pop
or
fldl
lfs
push
mov
and
mov
test
mov
xchg
sbb
fnstsw
mov
stos
sti
inc
inc
push
lea
xor
xor
imul
sbb
inc
mov
dec
pop
pop
jb
or
pop
mov
adc
lahf
cwtl
daa
shrb
scas
push
ss
imul
mov
jle
loope
cmp
adc
fdivrs
scas
cmp
jns
je
stos
scas
or
ja
add
mov
mov
mov
scas
mov
add
sbb
push
xor
repz
mov
mov
xorl
lds
cmp
sbb
mov
insb
xchg
int
mov
pop
xchg
add
jbe
dec
inc
je
sbbb
mov
mov
and
inc
sub
lcall
adc
sub
sub
data16
dec
inc
push
sbb
inc
scas
stos
inc
push
cmp
cwtl
daa
fs
inc
mov
shll
mov
sbb
in
pop
push
cld
mov
cltd
das
pop
enter
jbe
mov
or
leave
mov
cmpl
adc
inc
ja
sbb
add
jne
ror
sub
jmp
mov
pop
nop
lahf
in
or
jle
shrl
addr16
rorb
pusha
fmull
dec
fcomip
nop
mov
dec
sahf
mov
add
addr16
sbb
mov
ljmp
repnz
cmp
mov
sbb
mov
enter
pop
lret
shl
jno
and
adc
xchg
mov
cmp
mov
sbb
mov
sbb
cmpsl
and
mov
xchg
add
mov
in
inc
sbb
test
fistpl
mov
push
cmp
inc
jo
jae
push
pushf
repz
sqrtps
and
sub
mov
add
jb
cld
push
sbb
adc
lds
inc
mov
sub
pop
inc
mulb
iret
in
dec
scas
pop
stc
inc
ret
jns
push
mov
inc
sbb
pop
sbb
xchg
enter
cmpsl
adc
xchg
push
and
call
mov
or
push
cltd
iret
ljmp
inc
mov
xchg
adc
lea
fs
sub
pop
sahf
pop
pop
in
mov
dec
movsl
jbe
nop
rcrl
pop
mov
sbb
popf
push
stos
jmp
mov
pop
cld
mov
arpl
pop
into
in
pop
and
add
dec
lods
jl
mov
lret
in
popa
sub
sbb
imul
hlt
arpl
push
cld
fnstcw
shlb
into
add
pop
cmpsl
in
push
push
test
data16
adc
xchg
and
mov
sub
jecxz
shlb
and
mov
mov
fsub
mov
insb
jne
aaa
or
pusha
sbb
mov
pop
scas
sbb
and
clc
xor
andb
les
int3
iret
sbb
addb
std
pop
push
mov
mov
inc
test
movsb
pop
imul
int
mov
mov
sub
xor
mov
iret
push
add
ret
int3
clc
xor
jnp
pop
cli
into
std
mov
rclb
xchg
push
sti
fstpl
pop
mov
xchg
xlat
decl
vhsubpd
repz
jp
sbb
shl
movsl
push
sbb
popf
negb
push
ret
jmp
aam
add
movsb
push
xchg
ret
push
cmc
ret
mov
outsl
std
stc
cmp
inc
and
and
xchg
sbb
loope
inc
dec
sbb
sbb
aam
add
lahf
sbb
cmp
xchg
xor
push
xor
ja
pop
insb
sub
hlt
push
push
mov
cmp
test
jmp
stos
cmp
jno
enter
fimuls
outsb
gs
adc
dec
adc
jne
pushw
cmp
cld
cwtl
cmpsl
ss
cmc
imul
push
pop
add
xchg
dec
ljmp
sar
aas
push
and
stos
in
in
push
inc
fucom
fists
mov
sub
and
sbb
xchg
mov
fs
and
in
jne
nop
lea
jge
loop
call
xor
jbe,pn
pop
mov
adc
shlb
sbb
enter
js
mov
fidivs
sbb
push
shlb
in
push
push
jae
and
ljmp
call
icebp
into
cmc
dec
sbb
aad
call
cmpsl
ss
push
aad
mov
sbb
stc
mov
jmp
rcrl
lcall
call
xchg
repz
sub
clc
out
imul
rorb
aaa
push
fs
jb
movsb
addr16
loop
sbb
jne
mov
mov
jnp
pop
push
sbb
cld
adc
ret
adc
lds
xchg
sbb
les
xchg
adc
sub
outsb
dec
test
mov
inc
mov
adc
int3
xor
in
mov
jnp
sbb
pop
mov
dec
cld
loope
mov
push
cmc
or
ret
ds
sbb
sbb
stc
pop
into
pop
mov
test
adcb
mov
lret
addr16
inc
cwtl
mov
insb
jge
sbb
aaa
mov
pop
lods
sti
movsb
hlt
pop
sbb
in
mov
jae
aaa
jl
lds
push
push
dec
sbb
or
jp
stc
outsb
xchg
push
popa
add
movsb
cltd
dec
icebp
dec
jecxz
mov
pop
push
je
js
ret
xor
and
arpl
fsts
push
jp
es
jmp
pop
or
mov
adc
lock
mov
sti
fs
int
and
movsb
shll
sub
mov
roll
dec
sbb
js
out
or
popf
mov
movsl
ret
insb
lock
xchg
das
ds
out
cmp
enter
outsl
or
mov
xchg
jno
or
add
popf
pop
nop
pop
push
popf
lcall
shlb
pop
mov
addl
sar
lahf
rol
cwtl
mov
adc
sub
sbb
sbb
gs
lods
cwtl
mov
sub
adc
ret
or
call
pushf
jns
scas
mov
jno
pop
mov
sub
test
add
inc
adc
push
rorl
sahf
insl
push
adc
ljmp
ret
fidivrs
out
and
das
jne
or
inc
and
imul
ret
out
int3
cs
lret
sti
fs
mov
pop
mov
push
sbb
lock
jecxz
in
inc
stos
call
push
test
mov
cmpsl
addr16
mov
in
aaa
clc
adc
mov
shlb
ljmp
insb
mov
loopne
outsl
xor
sbb
cwtl
repz
cli
mov
repz
pop
popa
inc
pop
into
fldl
adc
outsb
lds
js
dec
pop
in
jmp
and
push
fs
lahf
sbb
rcl
add
sbb
hlt
arpl
pop
jbe
inc
call
in
cmc
dec
add
dec
jg
mov
hlt
xchg
jmp
pop
jns
inc
cli
outsl
ja
mov
mov
jge
mov
mov
dec
pop
cmp
in
dec
mov
inc
int3
mov
loop
stos
push
scas
aas
mov
sub
gs
lret
ds
jne
fs
std
or
out
fs
jl
push
scas
aas
cmp
push
daa
inc
pushf
jge
lcall
inc
xor
lods
sbb
dec
lock
push
iret
xor
insb
bound
cld
or
aaa
test
int
jno
cli
pop
sub
pusha
push
stos
mov
mov
jno
sbb
mov
adc
inc
shll
or
jmp
mov
push
sub
add
sbb
jnp
in
push
data16
jecxz
sahf
or
cmp
and
cmp
sub
and
cmp
adc
push
push
mov
add
mov
sub
cmp
and
imul
xor
mov
jl
mov
and
adc
sti
cmp
sbb
movsl
dec
pop
pushf
adc
xor
adc
pop
in
les
push
push
push
addr16
xchg
mov
data16
and
imull
and
mov
jecxz
jge
and
sub
repz
outsb
cmp
sbb
dec
bound
jbe
sahf
mov
adc
sbb
scas
lret
cmp
xor
xchg
ds
and
call
fmuls
jge
scas
ret
scas
pop
cli
lds
ss
push
mov
fsub
out
cltd
pop
mov
fwait
clc
adc
mov
sti
dec
inc
adc
pop
daa
inc
mov
rcll
sbb
lea
call
int3
inc
dec
adc
neg
aad
or
pop
insl
ret
xchg
popf
sbb
push
out
in
shlb
or
sbb
lcall
mov
testl
arpl
add
add
sahf
or
stos
mov
mov
cmpsb
mov
xchg
mov
outsb
pushf
mov
leave
cmp
fstps
mov
loopne
mov
fdivl
sbb
mov
cltd
mov
push
shrl
add
pop
jp
ja
add
cs
in
jmp
jg
pop
arpl
js
cltd
sbb
popa
dec
mov
pop
mov
or
cmp
pop
sahf
sbb
out
pop
and
movsb
mov
loopne
test
fadd
mov
add
rclb
js
andb
mov
jns
rcr
xor
jecxz
add
loopne
cmpsb
pop
and
xchg
mov
cmp
je
test
daa
insb
ret
repz
pop
push
cwtl
sbb
int3
daa
adc
sbb
jp
xchg
inc
pmulhw
jmp
stos
out
inc
cmp
push
and
hlt
cmp
pusha
mov
add
push
inc
in
jecxz
aas
xchg
loopne
mov
out
into
sbb
adc
mov
sub
pushf
mov
xor
mov
mov
sti
xor
or
ss
mov
je
and
fbstp
sub
loope
lea
outsl
inc
mov
xor
pop
xor
mov
jne
pop
mov
or
push
xor
push
xchg
lock
sbb
idivl
adc
orb
jecxz
xchg
out
push
push
insl
pop
imul
cwtl
or
bound
je
test
das
dec
scas
outsb
dec
cmp
je
les
jae
sbb
mov
add
push
ror
mov
scas
sub
in
aas
or
mov
call
pop
pop
cld
sub
leave
xchg
sub
aas
adc
cmpsb
rcrl
cmp
insl
cs
inc
adc
pop
add
mov
pop
sahf
cmp
pop
testb
out
or
aaa
xchg
jle
in
cli
int3
sub
inc
jae
in
jnp
xor
in
xor
sbb
fwait
popw
fadds
out
and
xchg
dec
int
rclb
adcl
fdivrp
or
cmpsl
mov
sbb
out
outsb
xlat
subb
popf
adc
outsl
pop
sub
lahf
sahf
jnp
fsts
leave
sub
dec
lds
addl
or
dec
sub
push
lds
and
rolb
bound
imul
cmp
leave
aaa
popa
mov
inc
sub
andb
out
stos
mov
jmp
pop
lods
sti
pop
cs
push
orl
dec
mov
cmp
aaa
mulb
daa
adc
jp
cwtl
pop
dec
mov
adc
dec
add
sbb
pop
dec
pop
ds
jne
cmp
sar
rorb
cmp
loopne
lret
fwait
sbb
xchg
dec
dec
jp
push
test
cli
insb
push
test
and
loope
leave
hlt
adc
loope
mov
xchg
lods
ret
in
pop
cmp
shlb
pop
outsb
dec
popf
sub
adc
dec
fstp
mov
pop
inc
add
mov
sbb
mov
pushf
addr16
mov
pop
int
inc
jae
mov
jge
push
xor
testl
sbb
sub
inc
mov
data16
sub
mov
push
stc
lds
and
outsl
fcmovb
loope
aad
incb
and
mov
xchg
sti
pushf
cmp
ds
ret
repz
mov
out
int3
lcall
lret
lret
lods
push
dec
mov
cmp
andb
jmp
mov
cltd
cmp
jb
jg
enter
push
shl
sbb
sub
cli
inc
sbb
sub
repnz
push
and
xchg
add
pop
push
cmpsb
ror
xor
stos
xchg
dec
pop
in
mov
lret
mov
xchg
cmp
mov
pop
mov
inc
lcall
out
or
sti
clc
add
pop
pop
cmp
je
xor
cli
lea
enter
mov
xor
jge
mov
inc
outsl
outsb
scas
inc
push
pusha
stos
jl
and
mov
push
stc
out
or
cwtl
inc
fwait
sub
in
inc
adc
rorl
pop
inc
pop
test
int
and
adcb
aam
scas
add
sbb
pop
and
mov
dec
push
lods
sub
dec
fcompl
cmpsb
adc
mov
lcall
inc
cli
clc
out
jl
popa
jbe
jno
cmpl
mov
std
mov
loopne
fldenv
mov
leave
push
sbb
sarb
push
xor
and
movsb
imul
and
lods
sbb
ss
fwait
ljmp
movsl
sbb
add
cmp
sub
fstpl
push
cld
and
adc
pop
xor
cmp
sbb
ljmp
sbb
ds
stos
add
ds
in
bound
jns
cmp
push
shlb
addl
sbb
lods
outsb
ljmp
idivl
sbb
xchg
fildll
inc
pop
dec
inc
adc
dec
sbb
in
cmc
pop
scas
cmpsb
xchg
lret
cmp
ret
scas
mov
nop
xor
bound
or
mov
sbb
and
and
fisttps
sub
add
ds
ja
fsub
shlb
sbb
inc
inc
jp
xor
dec
sbb
das
shlb
nop
icebp
mov
xlat
insl
jl
test
fistpll
imul
pop
sbb
sbb
test
add
or
pop
fucomp
sbb
dec
adc
sub
and
sub
xchg
jno
cmp
mov
xor
test
stos
enter
cmp
xchg
xchg
jg
fldcw
sbb
push
sbb
pop
rcrb
sarb
imul
repz
xor
leave
pushf
cmp
not
mov
test
push
ret
dec
jp
test
in
imul
fwait
lret
xor
shlb
or
ds
push
into
xchg
insl
sbb
pop
sub
or
pusha
fcompl
test
leave
jg
pop
mov
sbb
std
mov
sbb
stos
leave
pop
jbe
sbb
lods
mov
add
sbb
mov
sbb
add
cmpsl
dec
adc
adc
outsb
insl
and
popf
pop
jbe
movsb
repnz
cmp
xchg
push
adc
loope
mov
and
cwtl
popa
sbb
cmpsl
bound
inc
cmp
xor
dec
sbb
push
cli
jmp
sbb
cmp
and
loope
fwait
cltd
jecxz
push
lds
xor
lds
js
xor
cld
inc
xor
push
int
shrl
sbb
lret
test
sbb
addr16
rclb
jbe
lret
loop
push
pop
mov
sbb
fists
movsl
call
xchg
imulb
out
xchg
jae
xor
mov
sbb
and
mov
xchg
scas
xorb
adc
daa
enter
divl
fs
pusha
rcrb
push
test
adcl
mov
xor
arpl
or
xor
fwait
lret
test
xchg
mov
sbb
fs
push
in
sbb
xchg
cs
out
inc
adc
aam
xchg
stos
dec
sub
push
dec
imul
and
ret
jmp
roll
mov
std
aaa
cltd
mov
jae
fimull
in
pushf
adcb
jnp
pop
mov
push
mov
adc
lods
jne
inc
dec
outsl
inc
or
into
jmp
pop
add
mov
lock
sub
xchg
mov
addr16
test
ss
insb
pop
daa
test
call
in
cmp
dec
dec
sbb
fisubrs
dec
cmp
popf
pop
sub
mov
aad
pop
push
test
ljmp
ja
mov
addl
or
loope
test
std
addr16
xchg
xchg
inc
xchg
pop
out
pop
dec
mov
push
inc
mov
mov
xor
das
push
push
shll
jno
mov
ret
sub
adc
cmp
out
sti
cli
pop
xor
cwtl
std
sbb
xchg
adc
and
sahf
or
in
lea
push
push
cmp
gs
mov
cld
popf
push
mov
mov
mov
adc
jns
arpl
or
sahf
pop
enter
cmp
or
mov
and
rclb
push
jae
jg
mov
mov
movsb
mov
data16
sbb
or
jecxz
dec
mov
sarl
push
inc
inc
adcb
in
fcompl
xchg
sbb
xor
es
ja
xor
pop
sub
mov
lods
stos
xchg
dec
pop
shl
into
xchg
insl
jg
sbb
sti
cmp
in
jmp
dec
sti
dec
fnstcw
aas
daa
push
xlat
xchg
sub
push
xchg
jp
and
pop
in
jmp
ds
pusha
inc
pop
inc
stos
sub
sti
cmp
sbb
mov
sbb
adc
scas
sbb
sbb
add
inc
mov
ficomps
pop
movsb
and
and
test
and
test
sbb
jmp
mov
mov
lock
dec
push
loopne
mov
jle
leave
sbb
mov
jmp
xorl
or
scas
shll
icebp
jecxz
popf
sub
andb
mov
xchg
add
dec
enter
fbstp
lea
sbb
pop
clc
int
cmp
sbb
mov
sbb
cli
pop
cmpsl
in
imul
mov
iret
adc
out
ror
call
cltd
outsl
popa
push
mov
xlat
cmpsb
gs
mov
adc
hlt
stos
sbb
dec
cmpsl
jge
mov
cli
lret
cmp
add
insb
mov
movd
fistl
dec
push
lods
ljmp
sbb
popf
fwait
imul
call
xchg
cmpsb
sbb
adc
push
lahf
pop
mov
add
push
test
xor
xor
cmpsl
mov
inc
inc
xorl
lcall
insb
mov
sbb
pop
sub
cmc
push
test
jnp
mov
lods
cmp
icebp
jb
jl
inc
jns
push
nop
inc
sbb
cwtl
sbb
dec
push
test
pushf
adc
movsl
push
xor
jne
outsb
mov
mov
movsb
cli
fistpl
sbb
mov
popa
push
repz
sbb
push
sbb
sbb
or
pusha
sub
mov
inc
pmuludq
lock
mov
xchg
mov
or
pop
sbb
ss
test
xor
ljmp
mov
sti
icebp
ret
push
add
test
into
int
inc
mov
and
je
jge
jno
mov
lods
inc
inc
repnz
mov
add
sbb
lahf
aam
test
sub
push
test
rcrb
clc
pop
int
mov
or
cltd
inc
push
adc
xchg
xchg
sbb
sub
add
loop
int3
push
pop
sub
jae
xor
jbe
push
sbb
fwait
adc
inc
gs
bound
aas
scas
sub
imul
dec
jo
in
popa
sarb
roll
inc
les
inc
es
clc
mov
cmp
lods
sbb
sbb
adc
mull
inc
dec
mov
or
orb
cmp
testb
stc
lock
cmp
mulb
pop
sbb
fisubrl
or
test
mov
cmpl
lret
adcl
pop
mov
adc
in
push
pop
jmp
jno
pop
les
fisubrs
scas
out
enter
mov
sbb
mov
daa
mov
pop
fwait
aas
in
sbb
jb
lahf
scas
repz
in
adc
or
movsl
loop
dec
mov
lahf
push
push
rolb
outsl
loopne
cwtl
lahf
cld
or
xchg
ror
lcall
in
fwait
push
sbb
cld
push
bswap
fstps
fwait
mov
and
loope,pt
inc
in
sub
pop
test
mov
sbb
test
dec
sti
movsb
adc
sub
leave
fsubs
or
dec
fucom
jmp
sbb
addl
sub
mov
iret
mov
cmp
mov
in
inc
sbb
ljmp
or
add
les
pop
pop
flds
sahf
mov
stos
insb
sbb
lea
fsub
xor
pop
dec
ret
sbb
addb
push
mov
cmp
jo
insl
int3
imul
jmp
sbb
mov
ret
mov
xor
mov
test
decb
or
pop
outsb
cmp
sbb
fldt
push
mov
test
mov
cmp
inc
xchg
bts
sarl
in
inc
cmp
dec
movsl
xchg
xchg
xchg
negb
mov
rcrl
popa
dec
dec
mov
cmp
out
mov
mov
int
cmpsl
push
aam
addr16
xchg
lret
je
push
xchg
add
daa
xchg
popf
std
enter
mov
jg
mov
loop
mov
cltd
xor
dec
das
sbb
push
adc
popa
lods
aas
daa
in
mov
cli
mov
bound
mov
push
stc
lcall
sbb
sbb
cld
jmp
jmp
and
insl
aam
aad
mov
pop
rcll
fidivs
in
push
aaa
mov
lret
sub
sbb
xor
in
into
cltd
sbb
addl
sbb
imul
pop
push
rcll
inc
and
xor
sbb
adc
xchg
adc
xchg
nop
cwtl
jmp
shl
int
lock
test
fidivl
cmpsl
push
jnp
push
ret
dec
movntps
mov
push
cltd
out
sbb
sbb
pop
sbb
push
into
popl
pop
sub
mov
xchg
push
mov
in
xchg
push
xor
stos
ret
add
movsl
sbb
int3
xchg
adc
rclb
test
sub
aaa
outsb
ret
cmc
dec
shrl
lret
jnp
mov
add
mov
mov
sbb
pushf
jge
mov
aam
movsl
sbb
sbb
pop
sbb
dec
mov
cmpsb
jne
mov
jge
addr16
and
mov
adc
xchg
xlat
shlb
jo
popf
test
sub
mov
insl
pushf
ljmp
cmp
adc
jl
pop
clc
mov
or
ds
pop
ja
push
stos
pop
imul
pop
pop
adc
insb
imul
mov
lea
ss
sbb
cmpsl
scas
in
inc
cld
js
inc
lods
mov
pop
jl
sub
dec
frstor
mov
pop
sbb
pop
and
sbbl
sub
js
psllq
imull
in
loope
cmpb
push
lahf
sbb
in
test
fists
sub
dec
fs
xlat
out
sbb
mov
test
movsl
push
add
xor
in
stos
lahf
aad
mov
pop
push
xor
and
lds
ss
aam
mov
sub
std
xchg
pop
sbb
sub
popa
hlt
fdivrl
jge
dec
adc
jge
cltd
in
rcrb
add
mov
clc
mov
hlt
ret
inc
mov
pop
enter
dec
sub
mov
cmc
out
xchg
pop
mov
cli
sbb
xchg
pusha
repnz
rorb
adc
aas
aad
sub
test
loopne
cmp
mov
cmp
in
pmaddwd
movsb
sti
jno
dec
jne
sahf
aas
aad
sub
dec
and
mov
insl
popf
or
cmp
js
sbb
stos
xchg
sbb
test
in
into
cltd
sbb
hlt
push
lret
shll
subl
inc
mov
mov
sbb
daa
sub
jle
lods
sbb
cmp
add
sahf
pop
jp
cwtl
cmpsl
jo
aad
inc
adc
fs
mov
test
dec
mov
daa
movsb
lret
shll
mov
xchg
and
adc
inc
inc
mov
pop
into
cmp
xor
cmc
sahf
and
sbb
in
ffree
repnz
arpl
mov
fst
push
lods
sbb
xor
inc
pop
movsb
jecxz
ret
cld
or
mov
enter
push
int
insb
jnp
mov
jne
scas
jg
mov
addb
dec
mov
out
scas
gs
mov
scas
push
movsl
jnp
fadd
fisttps
mov
xor
dec
fstpl
cmp
ss
loopne
test
inc
push
std
push
call
ret
push
sbb
lods
mov
sti
sbb
mov
pop
pusha
sbb
cmpsb
lahf
lock
mov
push
shll
loopne
inc
iret
je
push
sbb
ds
mov
pop
jg
fucomi
imul
jl
push
xor
out
and
fs
sub
mov
inc
fisubl
xor
mov
sbb
xchg
xor
cmc
push
outsl
xchg
mov
xchg
je
pushf
push
cmp
jge
std
dec
aaa
adc
insl
xchg
mov
xchg
pop
inc
and
repz
push
sahf
jnp
sub
xlat
push
out
sti
cli
cmp
sbb
or
sbb
add
cmp
cld
insl
fsubs
mov
mov
pusha
dec
jne
movsb
mov
ficomps
out
repz
jmp
sbb
lahf
sbb
repz
dec
jns
adc
out
pusha
dec
adc
insb
out
rcll
ret
test
pop
cmp
pop
aas
mov
das
and
fwait
insb
imul
mov
cltd
sbb
rol
mov
lea
jno
std
jge
dec
js
and
xchg
sbb
mov
cmp
xchg
xchg
in
inc
cmp
xchg
mov
inc
mov
mov
bound
or
push
sahf
stc
or
jb
jo
in
xchg
mov
push
sbb
fsubrp
pop
mov
cli
stos
sbb
push
aam
mov
sbb
sti
ljmp
adc
xchg
pop
mov
dec
mov
sti
push
je
xor
inc
mov
push
pushf
repz
mov
mov
outsl
jle
scas
xchg
dec
sbb
xchg
addb
std
mov
negb
push
mov
cli
adc
ret
push
hlt
gs
mov
push
adcb
add
je
mov
or
sub
sbb
sbb
test
pop
sbb
fwait
mov
es
daa
lcall
xchg
inc
scas
mov
scas
sbb
mov
dec
std
clc
movsb
jae
push
out
xchg
scas
jo
clc
les
mov
stos
adc
lcall
sti
test
fucomp
lret
es
mov
jle
xor
xlat
mov
sbb
notb
aam
mov
dec
push
mov
lcall
ljmp
int3
mov
not
data16
or
push
add
lock
rcrl
into
std
inc
push
outsb
or
mov
add
arpl
inc
into
mov
popa
sub
or
xchg
cmp
test
xchg
out
mov
test
adc
js
cmpb
repnz
sti
fidivl
pop
ja
add
pusha
dec
jge
lea
int3
cmp
leave
jg
mov
test
cmp
mov
pushf
in
and
pusha
pop
mov
sbb
and
adc
stos
mov
ja
xchg
cli
push
sahf
mov
fcompl
imul
xchg
jl
dec
sub
addr16
jmp
popa
sbb
scas
or
push
repnz
adc
adc
inc
lahf
cld
pop
fwait
imul
test
dec
mov
xchg
lcall
sub
xor
dec
dec
addr16
repz
pop
pop
popf
fisubrl
inc
add
out
xor
cltd
mov
mov
sbb
sub
sbb
mov
or
clc
sbb
jle
fcmovnbe
inc
adc
inc
mov
push
push
push
stos
sub
ljmp
ret
clc
leave
xor
inc
dec
movsl
adc
jo
xor
add
dec
dec
loop
sbb
in
mov
xor
ja
ret
ret
insb
cmp
jb
ret
push
sbb
inc
dec
push
scas
push
sbb
lcall
cltd
or
sub
push
push
loope
mov
jge
ds
outsb
sbb
imul
lds
inc
mov
jb
lret
clc
mov
jbe
push
xor
cmp
push
test
sub
pop
sub
push
dec
stos
inc
mov
push
sbb
mov
mov
dec
add
fs
loopne
stos
lock
ret
arpl
out
sbb
pop
inc
add
mov
sub
decl
or
jg
jmp
fadds
movsl
adc
mov
jge
cpuid
add
mov
jbe
in
dec
mov
sbb
and
imulb
cmp
ljmp
fcmovbe
push
push
stos
mov
sti
loope
int3
mov
mov
hlt
scas
pop
call
sti
jno
cmp
sbb
jns
out
shr
xchg
scas
jno
lcall
lret
mov
scas
inc
mov
outsl
add
add
lahf
jno
gs
sbb
mov
adc
cmpsl
int
lods
out
mov
repnz
sbb
call
in
sub
and
mov
inc
mov
dec
jge
cmpsb
mov
scas
gs
add
mov
push
xor
mov
mov
scas
push
xor
mov
jl
sub
lods
add
mov
inc
and
fwait
hlt
rol
sub
rcll
nop
lahf
scas
stos
fiaddl
mov
xor
ret
das
es
and
movsl
dec
or
inc
imul
orb
daa
push
push
add
icebp
pusha
pop
es
cmc
xchg
push
andb
stc
mov
mov
stc
je
fstpl
sbb
out
dec
daa
pop
lock
or
in
add
ret
aad
aas
or
dec
sbb
inc
push
and
push
push
insl
mov
lea
lock
pop
xchg
fisttps
sbb
inc
dec
and
sbb
outsl
and
mov
cmp
pop
pop
cmpl
mov
and
decb
adc
lods
and
aam
jmp
or
out
dec
inc
push
xor
sbb
mov
and
dec
cmpsb
movsb
jb
jle
out
xchg
add
cmp
sbb
loope
xorl
sbb
jne
cmp
pusha
mov
into
xor
pop
lcall
dec
jl
xor
mov
daa
mov
mov
jne
push
inc
icebp
lock
int3
sbb
das
sbb
dec
xlat
xor
jl
mov
pop
mov
adc
dec
aas
dec
nop
test
shl
dec
lahf
xchg
sbb
sbb
push
jo
daa
lock
xor
and
xchg
cld
loope
ljmp
adc
mov
lods
mov
push
sub
mov
and
gs
cwtl
hlt
adc
push
pusha
outsl
rcll
xchg
andl
or
or
xor
cld
mov
xchg
fucomp
movsl
push
lea
sub
add
mov
adc
mov
mov
push
or
aaa
arpl
bnd
fwait
push
pop
add
fimull
adc
push
outsl
std
jecxz
mov
fwait
jge
mov
mov
js
xchg
jns
mov
jg
aad
jo
mov
inc
mov
cld
sti
inc
mov
jge
mov
pop
sub
mov
es
xchg
mov
insl
cmpsl
fbstp
hlt
imull
xor
in
scas
mov
lea
into
adc
lds
neg
lcall
loopne
cmp
jo
lcall
clc
sbbl
inc
mov
cmpl
jmp
aas
lret
jle
sbb
sub
sbb
jo
push
insl
sbb
out
dec
dec
push
aaa
add
fcomps
xor
leave
rcl
jb
repnz
mov
pop
cmp
adc
mov
mov
add
mov
daa
repz
xor
inc
cmp
jp
cmpsl
push
stos
cmp
iret
mov
lret
sub
xchg
sbb
pop
push
sbb
pop
lret
add
xchg
jb
js
inc
cs
sbb
xchg
ret
ror
dec
and
push
test
cmp
jo
outsl
push
lret
je
mov
fstpl
mov
jae
cmpsl
jecxz
jmp
cmpsl
test
xor
loopne
sbb
pushf
nop
popa
dec
int3
lds
inc
push
mov
jp
xchg
push
mull
push
addr16
in
pop
inc
sub
and
divb
fmull
pop
add
mov
addb
adc
cltd
add
repz
jge
jmp
mov
aam
pusha
outsl
cs
sbb
in
mov
mov
push
mov
cmp
bound
sub
mov
mov
mov
movsl
call
imul
sbb
pop
push
arpl
adc
mov
or
sarl
je
mov
jp
movsl
test
lds
vucomisd
lds
in
ds
or
sub
ljmp
sbb
add
push
mov
push
fst
adc
fisubs
cmp
push
ja
testl
lret
outsb
test
adc
pop
cmp
push
xor
push
in
ror
fisubrl
push
pushf
repz
push
mov
int3
je
mov
inc
push
adc
punpckhdq
and
xor
or
pop
sbb
icebp
xchg
xchg
inc
stc
push
dec
mov
mov
sub
or
in
scas
leave
lods
mov
push
shrb
pop
inc
call
add
enter
mov
inc
pop
sub
inc
ror
lods
jge
enter
sub
shl
outsl
push
mov
lea
pop
ds
dec
pop
test
sbb
or
dec
nop
fldt
push
and
dec
xchg
scas
cld
sub
pop
popa
mov
rolb
mov
aas
in
aad
sbb
jge
das
mov
mov
fs
popa
dec
mov
pop
imul
sub
ja
push
push
clc
les
cmpsl
cmp
dec
hlt
mov
xor
out
xor
lret
test
aad
add
sbb
mov
test
movsl
pop
pop
mov
aaa
lret
cmpsl
add
nop
cmovl
and
mov
add
movsl
adc
shlb
dec
xor
jnp
es
in
mov
and
pop
cmpw
fadd
adc
mov
ret
jle
dec
inc
mov
adc
push
push
pop
and
insb
mov
orl
xlat
dec
imul
sbb
pop
jnp
adc
mov
mov
ja
add
sbb
cmp
sub
xchg
pusha
ss
push
test
mov
inc
and
pusha
mov
and
push
dec
gs
fisttps
popf
push
jmp
cmp
into
sbb
dec
dec
pop
cmp
jge
in
lock
daa
sbb
dec
mov
xor
or
js
xchg
cmp
push
daa
lock
mov
testl
shrb
xor
repnz
es
and
int
sub
inc
or
or
fiadds
jbe
dec
das
xchg
imul
mov
xor
mov
lea
pushf
pop
pop
out
ss
mov
push
pop
ret
xchg
cmp
popa
or
aam
mov
out
xchg
cmp
sarb
lods
movsl
jp
in
jns
test
in
mov
add
xchg
push
xor
je
decl
sub
lret
bound
or
mov
and
mov
xlat
movsb
xchg
dec
ret
repnz
mov
push
sub
fldenv
imul
push
lret
and
jne
inc
adc
inc
daa
jg
mov
xor
jp,pn
push
sbb
aam
ljmp
repz
dec
cld
jge
xor
inc
bswap
jmp
and
roll
fmull
cmc
xchg
jne
mov
lods
lahf
loope
xor
mov
inc
sbb
push
add
pop
mov
cs
sti
clc
push
insb
or
dec
mov
cmp
andl
push
jecxz
mov
push
xor
rol
mov
jbe
and
sbb
fstpl
inc
adc
pop
jb
xor
shll
mov
lea
dec
std
jecxz
mov
stos
dec
add
xor
jno
dec
add
cs
push
inc
adc
mov
dec
inc
sti
hlt
bound
jp
xor
stos
test
xchg
pop
sbb
cmp
xchg
pop
xor
inc
pusha
shll
aas
or
popf
xchg
mov
xor
sti
pusha
daa
adc
sbb
pushw
cmp
ja
rcr
test
mov
leave
enter
mov
call
das
repz
inc
inc
out
add
xor
cs
nop
notl
sbb
movsl
jbe
push
cmp
xchg
ljmp
push
jno
loop
jmp
mov
push
arpl
dec
loope
sub
mov
ds
les
jb
dec
popf
mov
shll
jns
mov
int3
or
lods
out
mov
push
subb
pop
rcrb
push
mov
mov
sbb
idivl
leave
sbb
test
stc
adc
movsl
xchg
cmp
mov
inc
pop
push
sbb
adc
pop
iret
or
jae
and
cmpsl
std
jae
inc
fistpll
cmc
fidivrs
pop
in
in
leave
pop
mov
jnp
pop
lds
sbb
xchg
push
dec
pop
mov
cmpb
mov
jnp
inc
cpuid
push
push
andl
dec
movsl
out
sbb
call
dec
incl
addb
sbb
cli
insb
push
addl
cli
dec
cmpsl
cmp
outsl
std
push
aaa
jb
rclb
pushl
cmp
sbb
dec
xchg
cmp
sub
add
je
adc
ja
inc
lahf
cmc
adc
andl
pop
sar
enter
mov
push
fnstcw
cmp
ja
mov
clc
push
out
subb
xchg
fxch
ljmp
inc
push
fwait
bnd
sub
leave
cmp
out
lcall
ds
repz
lds
jae
aam
lcall
mov
pop
call
dec
xchg
out
aas
xor
mov
dec
pop
mov
add
ds
jp
ret
jmp
push
enter
dec
mov
xchg
int3
cld
mov
gs
adc
mov
inc
ds
test
stos
dec
mov
pop
mov
xchg
std
pop
and
cmp
imul
push
iret
fstl
dec
push
xor
mov
xchg
arpl
inc
cmpsb
pop
mov
sbb
xor
sub
pop
js
mov
inc
xlat
loopne
scas
sbb
ret
fidivs
nop
out
pop
cmp
out
lods
dec
sbb
xorl
dec
dec
lock
fcomps
pop
stc
push
sbb
push
jbe
popa
sbb
idiv
mov
xchg
fsts
sbb
mov
sbb
lret
mov
inc
scas
mov
std
sbb
es
jnp
mov
sahf
add
xor
mov
sbb
adc
fstp
adc
movsb
push
loope
or
hlt
lds
jp
mov
push
add
nop
cmp
sbb
sarl
xchg
lock
int
add
mov
out
nop
adc
in
push
pop
pop
push
in
adc
xor
add
stc
sbb
mov
ficoms
cmp
xchg
push
jno
mov
arpl
scas
add
mull
fsubs
xchg
out
and
push
aad
add
lahf
scas
fnstsw
out
dec
push
gs
shrb
adc
lock
insb
cmp
int
mov
inc
psllw
inc
mov
pop
xchg
sbb
or
pop
jnp
shll
inc
roll
push
or
adc
sahf
jno
sbb
fsubrs
cmp
movsl
andb
decb
fcmovnbe
sbb
mov
shl
mov
mov
adc
push
ud2
inc
pop
jg
pop
or
xor
loope
sub
xchg
outsb
and
aaa
mov
rolb
scas
mov
adcl
stc
pusha
mov
or
dec
cmp
arpl
pop
jo
sbb
cmp
repz
iret
jle
and
lods
push
xchg
mov
sbb
jp
inc
xor
xor
rol
adc
dec
cmpsb
js
or
jo
inc
into
jge
lods
xchg
dec
jp
xchg
xchg
testl
addr16
push
mov
sbb
fistpll
cmp
popf
sbb
xor
lods
sbb
inc
es
cmp
and
sub
adc
mov
ds
fmuls
add
data16
enter
adc
cli
stc
cmc
ss
add
cmp
jmp
xchg
loopne
idivb
jns
pop
cmc
sbb
push
push
out
mov
mov
enter
cmpb
jne
je
fisubs
and
cwtl
iret
sub
cmp
test
mov
addr16
sub
mov
jl
xor
sub
data16
mov
addb
cltd
dec
xlat
out
xchg
adc
imul
inc
shrb
mov
rcll
insl
add
push
add
xor
mov
sub
and
dec
out
sbb
xor
popf
aam
out
pusha
cmp
cmpsl
pop
push
sbb
jbe
or
outsl
sbb
dec
aad
aas
cmp
testb
mov
sub
push
das
repnz
cmp
xor
imul
int3
sbb
lds
xor
ds
in
cld
mov
lds
movsl
dec
mov
rclb
mov
pop
mov
adc
ret
test
iret
pop
mov
les
lret
fs
loopne
in
inc
gs
sub
pop
adc
xchg
scas
sbb
mov
push
iret
push
sti
inc
pop
cltd
jg
dec
push
andb
mov
inc
iret
sub
jecxz
dec
xchg
daa
xor
aad
add
mov
lret
jne
fbld
insb
jnp
sbb
es
lret
lods
mov
fwait
jb
xor
inc
sti
or
negb
imul
sbb
stos
xchg
insb
and
mov
inc
sub
jne
add
push
mov
jb
push
dec
sub
daa
movsb
cltd
jne
in
xchg
sbb
test
pop
pop
jle
inc
mov
in
push
and
xor
xorl
mov
lea
sub
out
lret
repnz
and
push
mov
mov
fidivs
ss
in
sti
mov
dec
out
dec
sbb
xchg
jo
iret
sbb
ficompl
aam
xchg
mov
inc
xchg
mov
push
mov
pop
popa
mov
add
push
push
xchg
cmp
mov
inc
push
in
add
inc
inc
icebp
test
sbb
sbb
scas
shlw
int3
push
sbb
pop
addr16
shll
sub
cwtl
push
lahf
insl
mov
and
pusha
outsl
push
push
jb
dec
xchg
jg
mov
dec
out
inc
add
int
push
fidivrs
and
mov
std
jb
shll
or
dec
mov
hlt
ret
insb
cwtl
xchg
je
scas
push
jae
das
xor
xor
and
idivl
inc
sub
sbb
mov
sbb
cmp
sbb
push
inc
sbb
xor
sahf
pop
fbstp
pop
lods
mov
xchg
pop
cmp
jno
sbb
push
adc
test
mov
mov
insb
daa
shlb
xchg
xchg
in
mov
imul
and
push
in
jl
gs
sub
sub
sbb
lcall
mov
adc
mov
test
mov
push
in
rcll
jge
pop
adc
std
mov
fistpl
inc
push
xor
push
repnz
jmp
in
nop
aaa
shrb
or
mov
jecxz
jecxz
pop
pop
sub
iret
adc
jns
or
xchg
les
sbb
pop
inc
xchg
add
lahf
pop
jnp
sbb
iret
ds
inc
cmp
push
dec
test
pushf
repnz
xchg
sub
lea
icebp
adc
imul
insl
out
dec
sbb
push
clc
test
aaa
bound
inc
mov
mov
pop
sbb
lock
inc
lcall
iret
jmp
mov
aas
outsl
jecxz,pn
sbb
inc
fwait
cmp
out
adc
adc
std
cmpsb
sub
mov
popf
cmp
repnz
loop
xchg
in
arpl
rclb
in
pop
pop
and
push
mov
aad
jecxz
hlt
jmp
cs
mov
outsl
push
mov
pushf
gs
mov
pushf
dec
dec
add
arpl
xor
cld
repz
xchg
jp
mov
in
inc
sbb
out
xor
pop
in
jbe
mov
sbb
mov
mov
ss
add
xorb
mov
cltd
test
cmc
mov
std
insb
lods
leave
ret
arpl
cs
inc
bound
jmp
into
fcmovnu
mov
cwtl
fnstcw
ficomps
push
cmp
sbb
or
imull
inc
inc
stos
mov
and
pop
or
adc
mov
mov
fwait
sub
popf
sbb
push
iret
and
imul
lcall
jecxz
sbb
popf
or
out
or
ja
fs
push
and
or
xor
adc
rorb
cmpl
js
movsl
mov
jae
push
sub
fistpl
pushf
add
mov
mov
loop
push
jo
popf
fimull
stos
pop
cs
pop
mov
jb
pop
cmp
mov
sbb
addr16
sbb
dec
sbb
loop
adc
push
fsubs
ret
mov
push
xor
fcmovbe
and
jo
int3
leave
push
psubd
xchg
push
mov
icebp
dec
mov
xor
xchg
rcrb
jecxz
lcall
mov
out
xor
mov
sbb
test
ljmp
add
inc
loope
aam
jp
mov
or
pusha
out
scas
arpl
sbb
aam
mov
ljmp
mov
insb
vpmaxub
jno
jmp
lret
xchg
sahf
lahf
or
addb
dec
sbb
cmp
ret
insl
popa
pop
dec
sbb
daa
push
out
pop
leave
out
xchg
mov
and
iret
cltd
hlt
inc
mov
dec
inc
ljmp
sub
pop
sti
mov
pop
lea
rcr
xor
pusha
and
aad
mov
xchg
lds
clc
cmp
add
in
push
sahf
lods
cltd
fdivp
push
lret
dec
inc
cld
sbb
sub
jnp
mov
nop
mov
cmp
jbe
inc
jno
jno
push
push
das
cmp
jl
pusha
movsl
cld
int
je
or
sbb
fbld
push
sbb
dec
lret
sbb
iret
cmp
push
repnz
xor
push
mov
or
lock
inc
adc
xor
or
das
ja
and
add
xor
xchg
dec
dec
push
aaa
push
add
mov
jb
mov
adc
inc
inc
pop
icebp
dec
adc
push
or
dec
sbb
push
mov
movb
cmp
nop
sbb
sti
popf
cmp
mov
mov
inc
scas
jle
adc
loopne
fistps
push
cmc
mov
mov
and
mov
jb
stos
ds
enter
sub
adc
or
test
repnz
push
scas
or
ljmp
mov
jo
outsb
insl
add
testl
je
ret
imul
xchg
jg
repz
frstor
cli
mov
add
cs
cmp
mov
mov
lods
inc
dec
aaa
xchg
in
mov
ljmp
pop
mov
sub
mov
in
dec
fimuls
dec
push
test
and
sbb
fwait
lahf
push
xchg
adc
jne
push
aad
push
iret
inc
nop
stc
pop
or
je
xor
and
cmp
out
sbb
inc
lahf
cld
inc
lahf
jne
out
mov
cmp
loopne
pop
fs
push
out
pushf
mov
dec
dec
ja
sbb
sbb
iret
inc
pop
popa
sbb
inc
in
push
sbb
or
inc
ljmp
outsb
cmp
jl
add
mov
mov
int3
test
add
dec
cmp
fwait
sbb
fiaddl
mov
sbb
test
pop
fcom
and
pop
out
popf
add
fdivs
out
cltd
pushf
out
jecxz
xchg
xchg
sti
cli
push
and
mov
lock
inc
cmp
lea
enter
sbb
int
sub
pop
cli
int
push
scas
sub
test
dec
nopl
jns
ret
inc
mov
xchg
mov
jecxz
rcrl
xor
and
out
jo
nop
lock
pop
fstl
std
int
lret
lret
inc
jecxz
shlb
sub
out
cmp
cmp
lcall
repnz
mov
stos
adc
adc
xchg
fsubrs
pop
enter
push
mov
jmp
cs
ds
mov
adc
sub
mov
jbe
fildl
cmp
pop
push
mov
adc
in
cmpsl
mov
arpl
push
adc
pop
mov
add
push
push
jg
insl
adc
pop
outsl
inc
mov
fstps
pop
push
in
sbb
xor
pop
pop
adc
out
xchg
xchg
mov
daa
or
mov
cltd
pop
push
ljmp
je
pop
mov
push
ss
sbb
arpl
jb
xlat
hlt
push
push
push
test
mov
pop
scas
and
sahf
push
dec
sbb
sub
popf
pop
lret
and
sub
fcmovbe
inc
push
inc
inc
loope
divl
sbb
mov
je
es
jg
cmpsl
mov
dec
inc
scas
bound
mov
mulb
pusha
lret
xchg
int
mov
sti
push
xor
cmc
hlt
shll
inc
addl
in
pop
xchg
push
push
mov
mov
out
dec
push
gs
jg
sbb
sbb
bound
pop
push
dec
movsl
push
jecxz
inc
call
pop
mov
addr16
sbb
sbb
jne
pusha
sub
ret
push
js
jns
mov
or
sbb
mov
ss
xchg
sbb
sub
jg
int3
push
out
push
jns
pop
or
sub
arpl
xchg
xlat
mov
jge
or
addb
scas
test
jno
push
out
push
movsl
adc
mov
jmp
cmp
pop
sub
nop
adc
cmp
inc
lea
into
lcall
inc
xor
enter
pop
mov
xlat
stos
mov
dec
test
div
rcll
fstpt
jp
cmc
movsb
or
xor
xor
xchg
imul
aam
scas
mov
pushl
dec
pop
ds
jecxz
sbb
cmp
adc
sbb
push
mov
out
mov
jmp
rcrb
movb
mov
fldl2e
xchg
sbb
xchg
push
ret
dec
dec
lods
insl
add
add
imul
lcall
inc
xchg
fwait
icebp
sbb
pusha
rorl
sbb
test
test
xchg
sbb
push
xor
andb
mov
fadds
rcl
adc
lock
test
adc
mov
into
cltd
xor
enter
mov
pop
pop
adc
ret
xor
xchg
mov
mov
pop
jnp
loop
pop
xor
pop
not
pop
mov
lret
xor
xor
sbb
sub
adc
and
lea
mov
lods
cmc
jb
cmp
or
out
mov
fistpl
xchg
call
pop
ds
xchg
add
mov
or
pop
mov
sbb
mov
inc
pop
cmpsl
pop
fstps
data16
pushf
xchg
mov
ja
out
dec
sbb
sbb
in
out
sbb
xchg
xchg
inc
std
push
fwait
data16
jecxz
and
das
xorl
shlb
fildl
jmp
sub
inc
jns
icebp
push
and
rcll
inc
jg
mov
int
jns
pop
repnz
dec
mov
sbb
rcrb
or
dec
test
adc
pop
xchg
out
mov
fsts
sti
add
stos
mov
push
ljmp
mov
std
mov
jbe
outsl
add
sbb
lret
sti
or
mov
repz
pusha
sbb
popa
mov
add
sub
enter
ds
add
lahf
sbb
ljmp
jmp
incb
adc
fs
push
mov
adc
mov
pcmpgtw
gs
orl
mov
out
xchg
cltd
adc
js
pop
data16
mov
jns
sbb
mov
push
addl
mov
daa
rorl
jecxz
test
pusha
cmp
lret
xor
shrl
imul
xchg
xchg
ljmp
pop
sbb
sbb
les
jns
xchg
ja
outsl
gs
cmpsl
movsb
shll
mov
and
cs
and
clc
push
xchg
add
es
sub
jge
stos
in
xchg
push
enter
adc
or
mov
cltd
add
and
mov
pop
into
cmp
and
push
aam
ja
into
mov
stc
andl
lock
test
push
xlat
push
mov
push
aaa
imul
push
pop
hlt
aad
loopne
rcl
sahf
mov
icebp
int
stos
mov
loop
movsb
jne
shl
mov
ja
repnz
rcrl
roll
mov
inc
out
shll
add
jnp
mov
push
xchg
adc
add
jbe
lds
sti
lock
pusha
imul
das
cs
add
in
mov
sbb
and
cmpsb
xor
jbe
xor
mov
pop
mov
lcall
shl
add
leave
ljmp
cmp
sbb
call
mov
push
cld
sub
cmpsb
jnp
add
shll
repz
xor
dec
fcmovnb
mov
cmp
add
push
cltd
lock
sahf
addb
xchg
cmp
roll
scas
mov
and
cmp
movsb
cltd
mov
int3
rolb
sub
inc
sbb
jno
test
inc
mov
sub
int3
adc
add
cmpsl
sub
mov
leave
sub
and
mov
mov
ljmp
sub
imul
push
and
xor
negb
mov
pop
inc
es
insb
and
sbb
sbb
insb
jo
xchg
xchg
ret
mov
push
push
or
cmpsl
adc
cmpxchg
cld
popf
push
mov
cwtl
shlb
sbb
or
jl
cmc
or
vpminub
or
inc
icebp
nopl
mov
jmp
loopne
or
fisttps
sbb
cmp
push
sbb
ja
call
and
xor
aam
mov
shld
cmpsb
lea
mov
es
mov
add
dec
repz
mov
icebp
cmpb
dec
lods
adc
in
push
insb
insb
test
les
xchg
add
inc
pop
loope
or
sbb
and
sbb
dec
mov
xchg
push
mov
add
sbb
adc
or
xor
mov
nop
decl
xchg
mov
sub
popf
add
pop
pop
popa
adc
cmp
pop
stos
or
lcall
xchg
sbb
jbe
sbb
sbb
lods
xchg
fmuls
gs
inc
pop
jge
addb
mov
xchg
push
aas
cltd
sbb
xor
push
scas
jecxz
pop
rcrb
and
rorb
sbb
mov
xchg
inc
aam
inc
mov
jnp
pop
mov
adc
popa
mov
aam
call
mov
je
cltd
cwtl
inc
mov
mov
cmp
adc
dec
ret
in
test
cli
mov
cmp
jno
cmp
fimull
mov
sub
gs
sbb
adc
insl
cmp
push
sbb
js
inc
sub
jb
add
push
stos
and
lods
test
push
push
pop
hlt
and
cmp
je
sbb
insl
dec
icebp
mov
jo
sub
pop
sahf
sub
push
test
cmp
mov
cmp
inc
popa
xlat
mov
adc
xchg
sbb
and
rcrb
jnp
push
shll
jo
jb
inc
dec
pop
cmp
pop
push
out
jne
fistps
dec
sub
or
jnp
push
loope
pop
sbb
cmpsl
cwtl
fidivl
jmp
xlat
xchg
and
mov
iret
adc
pop
enter
dec
sub
enter
das
movsl
and
pop
mov
mov
std
daa
call
xchg
push
jb
push
xor
fistps
add
adc
scas
inc
dec
adc
add
sbb
add
or
dec
ret
mov
js
inc
and
sahf
insl
push
dec
sbb
jp
dec
pop
or
mov
cmpsl
stos
jns
sbb
aam
xchg
or
inc
adc
inc
dec
loop
and
add
test
inc
fstl
xchg
inc
cmp
lods
int
push
test
or
andb
and
pop
lea
inc
sbb
or
dec
pop
xchg
pusha
les
imul
cli
fiadds
add
mov
cmp
addr16
outsl
jle
xchg
push
pop
xchg
gs
jge
loope
add
dec
fdivrl
and
mov
or
xchg
cmp
or
outsb
sub
inc
int3
arpl
add
sub
add
adc
shll
in
scas
push
ss
shll
andl
add
jge
xchg
pop
dec
outsb
or
pop
cs
sbb
jp
sbb
stc
fbstp
sti
mov
pop
jbe
mov
sub
les
push
shrl
add
sbb
movsl
inc
mov
adc
fwait
stos
push
mov
lock
xor
fcomps
mov
mov
pop
sbb
push
inc
out
jle
inc
push
sub
lock
mov
outsl
in
cmp
ffreep
xchg
sahf
and
mov
mov
mov
nop
inc
add
xor
loop
dec
pop
fstpt
xchg
pop
into
daa
jne
jmp
add
int
ficoms
inc
insl
mov
sub
rorl
ret
jo
push
or
sbb
pop
popa
mov
inc
subl
sbb
mov
add
lret
xor
fidivl
push
jl
xchg
mov
xchg
and
imul
sub
int3
and
mov
int3
inc
rclb
inc
stos
adc
jne
lods
icebp
sbb
xlat
outsb
mov
sar
insl
stc
sbb
icebp
popa
jo
push
mov
fucom
adc
xchg
ret
sub
ljmp
incb
sbb
scas
jnp
cmp
inc
test
adc
shl
outsl
lods
xchg
imul
or
dec
popa
sbbb
pop
mov
int
lret
mov
mov
and
sbb
insb
lods
sbb
mov
sbb
mov
sub
int
xlat
bound
ficompl
js
lret
jbe
insl
ret
enter
mov
shll
outsl
dec
dec
mov
imul
pop
das
aaa
insl
fisubs
xor
inc
ljmp
adc
lds
sbb
pop
ficomps
inc
inc
popf
fwait
enter
mov
mov
dec
mov
test
pop
jnp
sub
int
or
aas
into
or
xor
cvttps2pi
mov
jge
sbb
or
sbb
xchg
cld
cmp
into
sbb
mov
in
enter
imul
sarb
cli
mov
mov
out
adc
arpl
inc
and
mov
mov
mov
lahf
sti
xor
and
mov
out
xchg
mov
dec
jle
sti
pop
push
push
scas
movsl
aad
cs
imul
popf
pop
insb
pop
push
xor
leave
call
dec
adc
inc
pop
sub
pop
addl
mov
or
mov
add
xorb
scas
push
jbe
test
addb
mov
sti
mov
sbb
addb
int3
jg
dec
movsl
sbb
enter
pop
aad
inc
mov
inc
and
xor
aam
jb
mov
call
jge
sahf
xchg
imul
mov
pop
imul
mov
push
push
xchg
cmp
out
nop
popf
lahf
or
sbb
inc
sbb
outsb
dec
cmpsl
lock
int
fwait
push
out
or
mov
outsb
imul
sti
out
ret
fisttpll
ror
fwait
icebp
and
adc
or
out
sub
cld
insb
jbe
bound
dec
imul
shlb
dec
mov
scas
fldcw
or
fdivl
add
lahf
in
dec
cmp
repz
ja
mov
add
push
xor
dec
enter
shl
sti
sahf
insb
pushf
pop
push
or
test
adc
xor
std
and
icebp
stc
mov
lcall
jbe
pusha
popf
in
pop
add
adc
shrl
nop
push
sbb
pushf
leave
out
fs
add
pop
mov
push
scas
pop
insb
sti
cli
xlat
leave
jb
xchg
jb
pop
in
mov
xchg
mov
xor
mov
lods
sahf
fwait
pop
mov
mov
rcrb
imul
orb
outsb
or
rcr
scas
scas
add
ljmp
int
call
fsubrs
hlt
pop
loopne
pop
jmp
lahf
cmp
in
push
pop
xor
lock
std
cld
adc
out
push
in
sbb
sbb
in
fimuls
mov
dec
mov
cli
stc
test
jne
jno
mov
movsb
pop
cltd
lock
out
dec
xor
xchg
jecxz
jno
inc
xchg
fnstenv
ret
and
pop
mov
loopne
mov
sbb
mov
cmc
adc
fldenv
cmpsl
mov
xchg
out
mov
ror
and
inc
xchg
mov
sub
cmp
adcl
adc
icebp
jb
xor
sbb
iret
int3
scas
jge
jge
pop
fisubs
inc
jl
mov
subb
mov
add
sbb
cltd
pop
adc
sbb
dec
pop
cltd
movsb
xorl
sub
sub
sbb
xchg
push
lds
loope
hlt
ret
or
xor
clc
mov
xchg
in
fimuls
daa
lret
xor
sar
inc
gs
xor
icebp
dec
sti
mov
cmp
or
dec
cld
pop
popa
rorb
fwait
cli
scas
xor
mov
jne
inc
jl
fcompl
int
jo
sub
insl
ljmp
sti
push
inc
cmpsw
sbb
sbb
ss
adc
add
lret
sub
test
scas
mov
cs
sub
mov
xchg
arpl
mov
shrl
pop
pop
fimull
jns
adc
sbb
enter
xchg
push
test
divb
lds
xchg
loopne
jge
push
dec
pop
mov
outsl
mov
sbb
and
loop
mov
cmpb
inc
xor
pusha
xchg
pop
push
aas
inc
sbb
or
xor
and
sbb
pusha
in
dec
pop
adc
xor
enter
and
adc
pop
out
jmp
xchg
cmpsb
push
mov
cs
push
jl
lahf
lahf
mov
mov
jnp
jae
sbb
fbstp
add
sub
or
push
pop
insl
jecxz
sbb
in
and
gs
xchg
lcall
sub
inc
aad
stos
loop
sbb
inc
sbb
jl
jge
mov
cld
loopne
add
or
imul
inc
push
mov
xchg
std
pop
or
adc
divb
push
insl
dec
cmp
xlat
into
lds
inc
and
js
call
imul
push
inc
lea
les
cmp
rcrl
les
jle
cltd
test
icebp
sti
or
into
js
pushf
mov
inc
cmp
sar
pop
loop
loope
mov
sbb
cmp
or
add
mov
mov
rorl
daa
or
jo
cmp
stc
inc
and
std
sub
fcoms
addl
repz
roll
xchg
pusha
and
imul
xlat
mov
scas
lods
dec
mov
or
mov
sbb
shrb
mov
movl
pushl
mov
movb
lea
jmp
jmp
push
dec
mov
into
sahf
mov
into
out
mov
mov
sbb
lods
lcall
adc
push
inc
orl
call
and
push
clc
daa
cwtl
ffree
jmp
out
xchg
insb
repnz
pusha
mov
mov
mov
dec
jl
adc
jmp
insl
add
adc
sub
sub
js
jo
or
movsb
shl
ds
pop
xrstor
push
je
out
jg
xchg
mov
popa
cltd
push
cmp
xchg
pop
mov
punpcklwd
mov
daa
pop
add
aaa
pop
sbb
subb
stos
imul
or
mov
loopne
loop
dec
sub
ja
inc
pop
mov
pushf
pop
xchg
xor
imul
test
jb
mov
pop
icebp
insl
dec
jo
sub
cmp
push
test
test
cmpsb
lcall
mov
push
sub
loop
pop
js
dec
sub
test
mov
icebp
les
cmpsb
pop
jmp
jl
pop
loop
jmp
movb
fmuls
lds
pop
push
dec
sub
xor
ljmp
call
out
push
jnp
cmp
inc
xchg
mov
bnd
lds
adc
xchg
sbb
mov
mov
and
pop
cmp
out
xor
imul
lahf
sub
mov
inc
cmp
pop
into
xchg
fldenv
mov
ja
push
push
mov
mul
cmp
out
sbb
mov
popf
notb
mulb
and
cmpsl
push
into
lock
xchg
out
and
scas
sub
gs
movsl
pop
js
xchg
adc
out
pop
push
xor
addr16
push
movsl
lds
dec
mov
stos
cli
cli
sub
add
lret
and
sub
notl
into
dec
inc
data16
pop
js
int
movsb
pusha
mov
movl
jmp
int3
push
inc
xor
inc
mov
push
xchg
mov
repz
aad
cmp
sbb
stos
inc
pop
sarb
push
adc
pop
mov
mov
adc
aas
mov
nop
mov
rorl
xchg
xchg
push
mov
inc
mov
jl
pop
adc
add
cmp
mov
je
popa
xor
xor
movl
pusha
movl
mov
pusha
pushf
lea
jmp
movsb
cmp
in
lock
test
inc
jae
pop
in
ss
fwait
adc
jl
bound
clc
or
jl
fisttpll
jle
fldt
inc
mov
mov
lea
cmp
insb
xchg
jne
mov
mov
jae
test
mov
pop
xor
mov
cmp
les
nop
push
mov
sbb
mov
pusha
call
cmpsb
inc
mov
stc
daa
jnp
les
pop
jl
cmp
iret
mov
stos
inc
imul
and
call
ret
adc
addb
lcall
mov
enter
push
shrl
mov
sbbl
mov
pop
and
aad
adc
push
fsts
test
sbb
mov
cmpb
adc
inc
and
push
jns
pop
push
jmp
test
jmp
ja
cmp
stos
cltd
lds
mov
add
inc
inc
pop
lahf
shlb
adc
gs
fisubl
popa
push
rolb
mov
clc
mov
cwtl
cli
arpl
mov
pusha
jg
xchg
in
incb
xchg
and
jl
cmp
adc
repnz
leave
mov
dec
movsl
mov
ret
les
testb
sbb
test
ljmp
or
mov
dec
repnz
xchg
push
stc
lahf
imul
sti
cmpsb
xlat
out
cmp
ds
xchg
cmp
sub
sub
xlat
cmp
outsb
sub
andb
ret
fs
mov
mov
call
inc
xchg
cld
mov
xor
jns
push
cmp
lahf
inc
add
mov
movsl
decl
xchg
add
xor
push
movl
jmp
mov
and
mov
and
mov
xor
fwait
add
jno
dec
mov
cmp
mov
nop
jle
pop
add
push
lods
lcall
dec
and
mov
fbld
push
fucomp
sar
adc
nop
test
jge
mov
push
out
aas
push
sub
imul
mov
js
imulb
rcr
sbb
xchg
inc
cmpsb
lret
loopne
cmp
dec
subl
dec
xchg
loopne
adc
aam
add
mov
insl
mov
xor
loope
sbb
and
xchg
sub
sub
dec
test
adc
jns
mov
loopne
push
pop
fs
mov
sbb
jo
imul
andl
dec
rcrb
das
fisttps
dec
stos
xor
lret
jae
push
adc
xor
jo
mov
and
test
movsb
push
lea
out
xor
testl
icebp
into
jb
fidivrl
xor
ret
jecxz
inc
das
mov
js
scas
stos
jae
dec
mov
adc
cli
or
adc
or
repnz
and
xchg
addb
cwtl
adc
gs
jmp
push
adc
movl
jmp
movl
pusha
pushf
pushf
lea
jmp
movl
pushf
call
movl
pushf
lea
jmp
fdivr
mov
subb
lahf
inc
pop
fcoml
fwait
dec
aad
fildl
mov
test
ds
mov
xchg
insb
add
int
test
mov
js
xchg
loop
push
push
movl
call
add
es
jp
loop
push
mov
mov
push
andl
mov
adc
clc
push
stos
mov
shr
push
fcoms
cwtl
inc
mov
xorl
pusha
rorb
mov
mov
inc
int3
sbb
xor
aas
sahf
imul
xchg
lea
nop
inc
inc
mov
lcall
add
ja
ds
movl
pusha
pushl
lea
jmp
xor
dec
movsb
daa
movsb
inc
lds
ja
shlb
dec
push
fs
ja
mov
or
xor
jg
dec
fs
inc
xchg
or
fimuls
int
jb
mov
add
jnp
add
xchg
adc
aaa
sub
scas
sub
inc
mov
xchg
cli
das
jns
xchg
repz
cmp
repz
cmp
sub
in
push
imul
xchg
mov
lahf
jnp
aam
popa
test
clc
ja
jmp
mov
rolb
aas
push
adc
cmp
aam
pop
sub
jp
repz
cltd
aaa
test
adc
xchg
push
mov
or
ret
adc
cmp
xchg
cmp
aam
and
jmp
and
test
mov
xchg
incb
or
test
inc
mov
inc
fcmovnbe
nop
xorb
mov
sub
jecxz
add
push
shrl
or
adc
scas
and
xlat
mov
and
movl
push
call
movl
lea
jge
push
mov
pusha
movl
pusha
lea
jmp
jp
sti
icebp
sbb
sub
push
das
loope
mov
mov
xchg
sub
mov
inc
mov
and
xchg
testb
fyl2x
inc
sti
fisubl
adc
pop
dec
out
addr16
ret
lret
out
mov
scas
dec
movsb
inc
jecxz
cmpsl
inc
jmp
xchg
jo
std
movsl
mov
xchg
insb
addr16
outsl
push
xor
add
jge,pn
fisttps
mov
jecxz
in
std
aad
stos
cmp
lret
subb
mov
imul
incl
push
out
arpl
ret
dec
into
push
out
inc
or
jp
sub
outsl
aam
ja
lret
and
into
outsl
add
pop
cltd
mov
cmp
pop
or
mov
mov
xchg
jecxz
cwtl
mov
imulb
cmpsb
enter
inc
rcrl
inc
push
outsl
xor
add
xor
out
arpl
enter
push
lds
sti
mov
cmc
jle
test
scas
cmp
imul
andb
sub
jb
mov
call
cmp
jns
xchg
in
insl
add
pop
cmp
ret
pop
iret
xlat
ss
sbb
shrb
mov
mov
test
stos
xor
mov
sarl
imul
pop
pop
jne
mov
mov
pushf
pushf
pushf
movl
pushf
lea
jmp
call
pusha
movl
pushf
mov
pusha
jmp
sub
popa
pop
imul
leave
pop
cmp
or
test
mov
adc
ret
jle
mov
adc
push
shl
roll
stos
pop
dec
inc
aad
out
das
inc
pop
jne
leave
cmp
dec
jecxz
and
and
shll
mov
xchg
into
and
js
imulb
jmp
pusha
movw
movl
mov
push
movb
call
jmp
cpuid
pushf
movl
push
movl
push
pushf
lea
jmp
mov
jg
pop
pop
in
scas
and
icebp
jmp
mov
fnstsw
or
fsubrl
push
push
mov
push
jge
xchg
pop
add
mov
xchg
xor
test
push
scas
push
dec
add
jp
mov
movsb
fs
dec
int
cmp
pop
add
mov
adc
adc
in
jmp
pushf
pushf
pusha
jmp
pushl
movl
pushf
pushl
mov
pusha
movl
mov
movb
lea
jmp
mov
sub
popa
leave
add
aad
sub
and
xor
jbe
out
cmp
cmova
jnp
pop
jmp
dec
daa
push
aam
xor
adc
jno
mov
sub
repz
out
ret
daa
jnp
xor
ret
leave
dec
icebp
into
lods
push
mov
rclb
pop
xor
cmp
push
sub
imul
dec
adc
shrb
lods
and
cld
outsb
mov
sahf
mov
lods
xchg
mov
aam
loopne
xor
push
cmp
jmp
and
orb
mov
sahf
ficoml
pop
jle
sub
pop
push
mov
cmpsl
mov
mov
mov
repz
mov
cmpsl
jmp
jecxz
or
mov
jbe
push
fdivp
and
add
js
push
lds
sbb
notb
xchg
or
xor
pusha
mov
dec
add
hlt
xor
int3
nop
in
dec
xorl
or
mov
movsb
push
sub
das
shl
hlt
ds
cmpsb
fidivl
and
or
cmpsl
xor
lahf
incb
movsb
rol
add
xor
xchg
xchg
stc
pop
arpl
fsubrs
jno
xchg
jmp
push
add
pop
cmc
fsubr
and
pop
lahf
stos
xor
repnz
ljmp
cmp
arpl
sub
lds
cwtl
loope
or
push
sub
hlt
push
push
or
sarb
mov
inc
push
xchg
fpatan
jns
sub
pop
enter
out
adc
fdiv
adc
ficomps
scas
sarb
adc
popf
in
and
ret
xchg
out
inc
cmp
cmp
adcb
and
je
cwtl
insb
xor
rcll
jnp
push
lods
enter
pop
int3
jl
dec
pop
xchg
bound
inc
not
xchg
repz
xchg
ljmp
sbb
and
xchg
lret
call
lds
dec
cmpsb
jmp
out
and
add
xor
bound
rolb
jp
dec
push
out
lock
sbbl
push
jge
xor
cld
mov
jge
addr16
pop
adc
add
je
xor
scas
mov
or
loop
sub
arpl
jp
fadd
stc
push
and
clc
addr16
mov
mov
out
mov
insb
call
scas
out
push
cmp
push
cmp
mov
ret
jnp
mov
pop
mov
push
aam
push
jmp
movw
jmp
jecxz
jp
shrb
repnz
into
push
dec
addb
cs
enter
lcall
sbb
pop
outsl
push
and
in
sbb
ljmp
push
nop
fucomip
cmpsb
and
push
ss
dec
sub
pop
outsb
inc
ss
or
negb
add
cmp
ja
pop
inc
sbb
inc
pop
dec
outsl
add
js
and
sti
pusha
pushf
movl
pusha
call
pushf
movl
mov
mov
pushf
movw
movl
pushf
mov
lea
jmp
movl
mov
pusha
pushl
lea
jmp
push
cmpsl
jl
arpl
out
pop
lods
pop
decb
pushl
inc
sub
jno
aas
dec
ret
push
mov
inc
and
mov
stos
xchg
xchg
push
xchg
sbb
cmp
xchg
mov
outsl
pop
xor
jle
mov
xchg
add
adc
cmc
mov
sbb
mov
aaa
call
sbb
es
mov
rorb
jge
cli
mov
xchg
je
sti
pop
mov
inc
push
cld
inc
jl
mov
loopne
psubsw
jns
fidivrs
insb
orl
in
xchg
push
je
outsb
adc
stos
jbe
pop
pop
fsubrl
loope
insb
lds
mov
fildll
lahf
xchg
test
xor
xor
xchg
jl
ss
mov
scas
lret
scas
mov
ds
enter
imul
or
rol
inc
and
lret
push
cmp
je
or
out
std
call
xchg
arpl
add
inc
pushf
push
xlat
cmp
std
movsb
es
jae
add
aas
sub
lods
inc
xor
inc
dec
jmp
test
sbb
insl
call
add
out
push
movl
pushf
mov
lea
jmp
jl
sbb
into
mov
ret
dec
popf
out
leave
mov
xor
mov
insl
fdivrl
popl
fstpl
imul
mov
outsb
jp
int
inc
and
push
or
movsb
jg
add
add
test
xchg
popa
mov
cmc
ret
jp
mov
lods
and
mov
pop
and
xor
cmc
ljmp
inc
call
dec
aam
push
les
in
fldenv
adc
test
dec
std
cwtl
popa
mov
and
and
and
xchg
push
out
xor
push
add
inc
enter
flds
add
std
xchg
cmp
xchg
xorb
ret
iret
insl
es
mov
pop
xor
xor
xor
jmp
inc
fldenv
add
in
shlb
adc
test
push
or
jb
push
stos
add
neg
jae
xchg
push
lods
inc
add
mov
call
enter
xlat
dec
add
add
std
test
xchg
gs
jb
out
xor
inc
cld
lret
leave
iret
mov
mov
pop
sbb
xlat
nop
sbb
sub
jge
mov
add
inc
pop
and
aam
pop
lds
in
sub
test
add
mov
inc
mov
xor
xchg
push
push
scas
aam
fs
mov
lret
cmp
inc
enter
in
adc
dec
add
add
std
mov
xchg
insl
jnp
xor
adc
jb
jp
ret
ret
daa
rcrw
pop
pop
ss
test
jo
in
cmp
cwtl
and
aam
pop
enter
aad
adc
test
jmp
into
jg
mov
mov
inc
stos
inc
aad
cmc
mov
pop
pop
pop
bound
enter
fisttps
lock
int3
pop
xor
ja
cmc
out
test
add
out
daa
jle
jmp
xchg
inc
es
cltd
mov
push
cld
jo
jb
bswap
mov
push
mov
pop
push
dec
pushf
jl
adc
jo
xchg
mov
sbb
xor
test
loopne
jecxz
int
xor
pop
pop
insl
test
xchg
cwtl
xor
daa
aam
sbb
das
stos
xchg
pop
adc
hlt
dec
scas
fwait
push
in
jns
gs
les
aad
test
mov
addl
sbbl
in
movsl
out
or
cltd
aas
pusha
adc
pop
and
jb
dec
insb
sbbb
cwtl
pop
inc
call
loope
sub
mov
inc
cmc
mov
vprotb
push
insl
movsb
out
mov
arpl
mov
and
pop
rcrl
or
sbbb
dec
std
cmpsl
and
test
sub
pop
arpl
pop
ljmp
xchg
ret
jb
outsb
sbb
lret
and
add
adc
pop
and
xor
xchg
dec
insb
or
mov
and
aam
push
lds
loop
and
testl
pop
lret
test
cmp
scas
add
mov
lret
push
enter
dec
add
add
std
adcl
loope
outsl
ret
jle
stc
dec
lds
das
outsb
rcrl
divl
xor
scas
das
in
insl
jge
or
popa
dec
dec
dec
adc
aam
push
ret
add
loopne
sub
test
lods
xchg
inc
add
repnz
jecxz
inc
xchg
and
xchg
push
mov
je
sbb
xorb
clc
adc
enter
fiadds
add
add
mov
xchg
imul
inc
imul
outsl
sbbl
lret
push
mov
pop
popf
jge
dec
in
cmp
movsb
and
aam
push
iret
add
jmp
lcall
lahf
mov
cs
sbb
jecxz
xchg
push
mov
add
lret
inc
inc
cmp
stos
and
jmp
adc
dec
add
add
std
mov
or
out
jo
cli
jns
int3
aas
pop
sub
pushf
mov
pop
xor
xor
clc
iret
pop
jge
jbe
in
push
inc
aam
pop
into
add
jmp
fwait
push
cmpsl
test
jno
out
add
test
arpl
xchg
push
mulb
mov
bound
sbb
enter
fldl
add
add
xchg
xchg
sbb
dec
je
int
or
mov
pop
in
xor
sub
ja
in
or
mov
pop
pop
les
in
daa
adc
test
dec
nop
loope
into
adc
adc
pop
repz
xchg
push
mov
aam
sub
lods
lret
test
push
enter
fiaddl
lock
pop
jns,pn
sub
gs
mov
add
fsub
push
lds
mov
pushf
mov
into
cmpsb
sbb
lea
aaa
into
push
mov
insb
pop
sbb
fsub
xchg
add
cmp
mov
pop
loop
fsubl
mov
lods
test
fldt
roll
mov
ret
mov
jg
out
adc
testl
xor
lcall
cmc
outsb
inc
inc
bound
adc
aad
jmp
incb
mov
push
mov
call
out
xor
xchg
mov
cmp
aad
out
orb
xchg
int
inc
out
push
xor
mov
aas
sbb
dec
push
repz
xchg
inc
pop
xchg
cs
insl
inc
out
mov
jecxz
mov
sub
pop
les
sub
jnp
mov
push
dec
mov
fildll
jmp
ficoms
fsub
lods
lock
adc
xlat
and
inc
fdivs
push
shl
xchg
aad
stc
ucomiss
mov
or
repz
jecxz
pop
push
xchg
pop
fistpll
insb
add
mov
jecxz
add
sub
add
in
gs
cmp
sub
sub
push
push
in
stos
cltd
xchg
mov
rorb
mov
leave
mov
aas
mov
mov
test
cmp
lret
dec
inc
aad
sbb
inc
inc
adc
jnp
mov
ljmp
pop
push
cmp
pusha
mov
fists
push
cmp
shll
lahf
testl
push
dec
in
push
xor
stc
in
mov
xor
hlt
js
mov
nop
cmpsl
dec
enter
int
mov
mov
inc
xor
sub
push
sahf
adc
inc
sbb
xchg
aam
push
mov
pop
dec
in
out
fs
pop
and
push
arpl
int3
ficoms
js
lods
lock
mov
hlt
add
inc
gs
cmp
inc
fcoms
and
push
out
ret
mov
xchg
cltd
cmp
inc
loopne
jb
add
mov
adc
insl
pusha
popa
push
sahf
push
cmp
insb
add
lods
jb
xchg
mov
jecxz
add
cmp
addl
jae
or
and
pop
xchg
sub
inc
or
mov
pop
or
pop
adc
sti
dec
mov
cmp
dec
dec
aad
test
arpl
jle
sbb
test
fyl2xp1
in
std
imul
ljmp
xor
test
pop
sub
inc
out
cmpb
loope
sub
pop
xor
cmpb
adc
repz
mov
nop
cmpsl
inc
sub
cmpxchg
mov
pop
xchg
adc
mov
mov
ret
dec
cmp
pop
and
push
arpl
fsub
lods
lock
and
mov
loope
aas
add
fidivs
aad
xchg
jmp
data16
jb
add
int
jno
xchg
push
out
jl
dec
insb
or
xchg
mov
mov
popa
add
movsb
jbe
out
jae
shrl
test
lahf
sahf
call
shlb
das
mov
mov
lods
nop
cs
sub
gs
rorb
pop
mov
ja
fiadds
stc
call
pop
inc
push
sub
loope
mov
xor
fsubr
orb
sub
shl
out
fs
mov
call
in
push
cmp
mov
mov
dec
adc
cmc
sub
addl
and
mov
jecxz
jecxz
mov
sub
pop
iret
xchg
adc
inc
repz
or
pusha
fwait
test
out
testb
and
sub
ficoms
mov
lods
fwait
inc
jns
cmp
xchg
and
ss
mov
aad
xchg
sbb
das
insl
pop
jo
jb
add
mov
push
dec
int
add
jle
lds
movsl
je
xchg
mov
jecxz
add
sub
addl
mov
int3
sub
mov
sbb
rcll
mov
decl
mov
mov
xor
ret
dec
dec
aad
xor
test
fiadds
stc
in
into
clc
jae
jp
push
cmp
in
xor
mov
pusha
mov
iret
lock
cmp
aam
out
imul
js
lds
xor
xchg
cmp
jb
jecxz
lcall
nop
ja
sbb
out
mov
pushf
push
xor
das
or
xchg
adc
xchg
mov
xchg
adc
push
cmc
sbb
and
das
es
ficoms
enter
add
std
mov
js
call
jno
ret
sub
mov
pop
cs
jge
or
jge
sub
and
dec
inc
shll
aam
push
les
jmp
sub
test
xchg
loope
push
stc
add
pop
mov
mov
xchg
ror
and
enter
rorl
lock
and
loope
mov
test
add
add
fsubs
push
iret
mov
jns
das
jne
adc
sbb
add
mov
push
leave
popf
push
inc
es
dec
cmpsb
jbe
add
scas
jle
xchg
mov
fcoms
mov
pop
test
mov
loopne
ret
jns
sub
test
sahf
fwait
or
sub
mov
mov
outsl
or
pop
adc
lock
movsl
jae
in
stc
cmp
inc
dec
aad
sub
bound
andb
fimuls
stc
loop
mulb
mov
jne
inc
loope
pusha
mov
jmp
sarl
sub
out
addb
rcrb
xchg
into
dec
jmp
push
cmp
or
inc
mov
icebp
fdivr
xchg
nop
out
fcomps
scas
mov
mov
xchg
mov
or
enter
ret
dec
add
and
sbb
sbb
scas
sub
pop
arpl
ficoms
clc
out
lock
mov
jb
cmc
in
ds
fcoms
and
cmpsb
and
sub
push
mov
into
movsl
sbb
lods
arpl
ja
push
mov
add
add
movsb
jl
xchg
mov
mov
insl
xchg
nop
xchg
shr
mov
xor
pop
sbb
scas
cltd
cltd
dec
rcr
and
mov
or
mov
dec
stos
pop
sbb
decl
dec
in
imul
inc
aad
jo
pusha
inc
pusha
sbb
fimuls
stc
call
sub
call
pop
mov
pusha
mov
mov
cmp
shlb
hlt
push
mov
push
dec
in
mov
xor
or
xor
loop
and
stc
clc
jle
dec
fists
and
mov
popf
fistl
sub
pop
iret
xchg
adc
jae
dec
add
sub
fimull
sub
das
sub
push
arpl
leave
ficoms
sub
lods
lock
adc
ja
loop
cmp
loop
push
push
ret
mov
movsl
rclb
mov
nop
jns
mov
insl
sbb
imul
add
adc
jne
inc
insb
packssdw
jecxz
add
outsl
roll
xchg
shll
leave
lds
fs
lods
dec
cmpsb
cltd
xchg
enter
fldl
or
mov
das
jmp
sbb
testb
in
imul
dec
aad
les
xor
jmp
stc
out
div
scas
mov
sbbl
out
adc
xor
pusha
mov
outsl
pusha
sbb
pop
and
dec
arpl
fistpll
loop
push
cmp
xor
lock
dec
fists
daa
push
lods
push
pop
mov
add
out
daa
add
lret
sahf
adc
jae
mov
sbb
xchg
loope
std
push
sub
jmp
ficoms
push
lods
push
push
sahf
repz
in
add
add
fcom
push
into
add
test
and
or
push
into
mov
jae
dec
outsl
icebp
ja
push
imul
rclb
xor
add
push
cmpsb
nop
in
lods
ret
dec
iret
sub
cmp
scas
nop
cltd
cwtl
jg
frstor
stos
decl
xlat
adc
testb
push
in
leave
xor
inc
aad
mov
cmpsb
pop
mov
mov
out
mov
enter
pop
sub
out
jne
lahf
pop
not
xor
mov
and
pop
and
dec
orb
xchg
lret
stc
dec
loop
push
xor
adc
fwait
adc
decb
nop
out
dec
fwait
daa
push
lods
dec
mov
add
aad
and
push
into
xchg
adc
ret
aad
or
add
push
push
dec
sbb
das
sub
push
arpl
ficoms
.byte
out
