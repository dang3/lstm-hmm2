out
lcall
add
cmp
cmp
imul
mov
mov
ja
add
cmp
add
cmp
sub
mov
add
adc
add
imul
jns
mulb
mov
cld
add
pop
cmp
sub
add
sub
mov
jae
and
sub
adc
imul
roll
sbb
enter
adc
pushl
rorb
mov
mov
add
add
mov
sub
add
lret
mov
movb
mov
xor
adc
adc
sbb
jge
insl
add
mov
ret
clc
sahf
add
fcmovnu
faddl
add
cmp
cmp
pop
jle
outsl
pop
shrb
testb
add
rcll
scas
insl
sti
in
mov
add
push
sub
cmp
sub
repnz
in
jbe
rorb
sbb
push
ja
in
pop
mov
mov
or
icebp
mov
add
xor
pop
adc
cmp
jbe
sub
jl
adc
enter
addl
shrb
into
mov
lret
cmp
push
mov
mov
lea
pop
aas
push
add
insl
push
and
mov
add
sub
das
sbb
lret
insl
sub
adc
adc
jmp
jge
sub
adc
mov
sbb
adc
adc
ja
or
mov
imul
pop
add
stc
or
mov
mov
mov
rolb
icebp
adc
jmp
es
pop
lcall
sbb
je
mov
adc
mov
outsb
mov
or
call
sarb
sarb
cmp
push
sti
and
imul
push
mov
pop
ljmp
scas
sbb
test
out
sub
leave
add
jle
xchg
push
sbb
bnd
fistl
outsb
sbb
or
jno
sti
rorb
push
pop
lods
out
xor
mov
push
and
pop
push
scas
sbb
pop
pop
rorb
mov
mov
lret
push
gs
int
mov
leave
add
mov
dec
jmp
mov
rclb
insl
xor
add
sbb
idiv
insl
pop
enter
or
or
mov
adc
pop
add
adc
cmp
or
addr16
rcrb
shr
icebp
mov
pushw
cmpsb
notb
inc
fistps
push
push
rclb
or
xor
sbb
fcmovne
sahf
jmp
add
push
and
scas
aaa
add
ret
insl
and
and
push
inc
imul
lds
fsubrs
jbe
ss
pop
dec
mov
mulb
and
mov
or
mov
inc
cmpsl
adc
sbb
mov
shll
add
mov
or
or
jne
xlat
push
push
adc
movsl
inc
ja
aaa
add
add
mov
mov
mov
jno
fbstp
mov
pop
js
repnz
out
pop
push
sarl
in
cltd
mov
test
sbb
je
push
push
xor
mov
imul
nop
icebp
xor
adc
inc
clc
add
and
push
sub
insl
outsl
sti
ds
fwait
xor
cmp
mov
inc
shll
icebp
ds
mov
jl
lock
pop
outsb
mov
add
add
cld
inc
adc
sahf
in
inc
shll
cli
or
movsl
ja
mov
mov
in
inc
movsb
or
inc
ljmp
add
call
or
adc
add
adc
pop
insb
call
push
or
adc
pop
into
mov
add
dec
fists
fadd
mov
mov
les
jmp
fstp
sbb
mov
mov
sbb
ret
mov
cmp
insl
mov
leave
rcrl
mov
call
sbb
addr16
cmp
scas
add
fisubrs
loop
pop
mov
aas
jg
push
add
cmp
lret
mov
adc
dec
inc
cmp
jmp
push
mov
sub
call
ljmp
xchg
sub
adc
cmp
mov
mov
xchg
push
or
sarb
sbb
movsl
das
andl
sbb
push
fisttpl
or
jl
pop
lods
ja
test
sub
out
adc
sbb
pop
or
mov
pop
mov
fiaddl
add
popf
cmp
dec
push
mov
movb
push
enter
jle
lcall
sub
add
sbb
push
mov
fstpt
add
push
sub
out
xchg
stos
sbb
je
shlb
mov
push
repnz
dec
pop
fstl
shll
cmp
or
notb
mov
dec
rsqrtps
mov
mov
sub
sub
sub
cmp
mov
mov
cli
or
sbb
and
pop
inc
dec
mov
xchg
pop
repnz
adc
jmp
sub
mov
lock
and
sarb
add
push
inc
ret
rorb
lret
inc
sub
dec
push
das
adc
adc
bound
pop
cs
clc
adc
mov
push
fwait
arpl
imul
js
lret
inc
mov
fstpt
add
inc
and
jo
adc
repz
sbb
popa
push
lret
sub
mov
into
aad
push
out
add
test
ret
pop
repnz
rcl
push
add
leave
insl
outsb
imul
or
inc
ret
sbb
loop
jl
lods
out
inc
sbb
jmp
or
inc
imul
sbb
insl
imul
cwtl
mov
sbb
lock
or
insb
je
push
inc
or
subb
jnp
fmul
data16
lret
pop
or
bound
cmp
push
push
adc
sbb
or
pop
hlt
sub
push
cmp
sub
pop
ds
jl
push
and
sahf
pop
cs
rorl
sub
mov
out
cmc
pop
pop
loopne
icebp
cmp
es
mov
adc
xor
mov
inc
pop
dec
mov
xor
lcall
sbb
lods
mov
aam
int
cmovns
es
fucomi
pop
or
xchg
or
shrb
inc
icebp
xor
pop
add
popa
outsb
sbb
into
pop
fwait
js
xchg
cmp
push
imul
data16
adc
mov
test
push
fwait
jo
enter
test
xchg
fimuls
mov
dec
insb
sbb
jbe
call
xor
pop
mov
xchg
test
or
loopne
arpl
imul
jo
pusha
sti
shl
mov
ret
xchg
and
es
jge
insl
test
pop
cmp
jb
jle
sbb
jae
push
fxch
dec
add
ljmp
add
or
loopne
sbb
inc
insl
cmp
mov
xchg
fistpll
mov
xchg
jmp
stos
shl
jmp
jge
add
adc
push
jb
xor
mov
rclb
das
faddl
add
sti
lcall
xchg
jle
cwtl
add
lret
xor
or
mov
push
add
fmul
fcoms
xchg
or
dec
dec
jle
cwtl
sub
push
or
dec
add
lods
add
in
dec
lods
lahf
mov
pop
clc
es
jb
movzwl
mov
xchg
pop
jae
or
pop
adc
jns
rolb
ss
pop
lods
in
scas
cmp
mov
push
and
sub
stos
in
sarl
push
pop
sbb
add
mov
dec
rorb
adc
shlb
fsubrs
pop
sarl
adc
pop
xchg
adc
and
stos
push
cmp
movsb
mov
sbb
mov
rorb
jmp
aam
pop
adc
ret
leave
inc
jecxz
popf
jae
and
shrb
sbb
or
rorl
mov
or
sbb
loopne
mov
cmpsl
push
shl
adc
push
mov
dec
mov
push
xor
add
movb
rcrb
pop
jbe
jp
mov
in
lods
or
fdivrs
outsb
or
dec
cs
movsl
and
lods
rolb
shrl
inc
push
out
inc
shufps
inc
imul
xchg
sub
int3
sub
es
mov
lcall
test
jbe
out
loop
mov
mov
into
push
pop
mov
stc
sarl
stos
adc
lret
push
jo
inc
jnp
xchg
negb
popf
or
bnd
pop
fildl
adc
ss
test
xlat
push
lock
push
mull
or
cmp
add
inc
leave
sbb
and
cmc
push
and
xchg
aam
mov
inc
aaa
dec
rcll
mov
push
push
push
inc
jae
sub
mov
sbb
adc
or
add
mov
lock
leave
fstpl
push
push
push
pop
sub
stc
ficompl
outsl
fnsave
mov
pop
mov
pop
pop
sub
ficoml
arpl
xchg
adc
pop
arpl
outsl
idivb
mov
inc
push
ret
clc
or
movl
add
push
loop
test
fsubrs
mov
mov
pop
sub
and
cmpsl
cmp
pop
jne
call
push
movsl
sti
inc
out
cmc
call
cli
ljmp
add
icebp
rcrb
inc
stos
in
into
movsl
movsb
sbb
push
scas
jecxz
loop
adc
fcom
dec
ja
or
lock
mov
xlat
add
cmp
in
rcr
push
ds
adc
xor
pop
push
call
or
into
out
xchg
repnz
inc
dec
mov
in
or
pushf
negb
lcall
cmp
leave
push
pop
test
jno
fwait
ret
popa
mov
ss
aad
aaa
enter
notb
test
clc
adc
mov
repnz
and
inc
ret
popa
push
add
ret
push
pushf
jb
roll
or
mov
push
sub
stc
sbb
dec
xchg
je
cltd
adc
push
outsb
ss
lcall
mov
add
mov
jp
in
add
mov
cltd
push
pop
xchg
loopne
add
leave
mov
and
push
add
arpl
mov
mov
jae
sbb
xchg
push
adc
adc
jbe
adc
sub
je
jecxz
push
lock
add
mov
pop
scas
leave
push
or
jno
test
mov
dec
push
leave
sub
adc
loope
push
jmp
mov
or
cli
lret
nop
adc
icebp
add
or
sub
push
shrl
dec
add
push
pop
loopne
in
loopne
sbb
sub
mov
add
pop
scas
adc
jl
sbb
outsb
outsb
add
push
push
scas
rcl
fs
jae
call
notl
adc
push
call
dec
clc
push
in
scas
aad
shrb
inc
sarb
sbb
je
clc
pop
mov
xor
leave
mov
mov
xor
sub
icebp
xchg
das
ret
mov
or
test
inc
punpckhbw
test
add
aad
arpl
xor
inc
insb
sub
adc
inc
clc
cmp
scas
out
mov
stc
sbb
lods
xchg
mov
stos
out
adc
sbb
cwtl
mov
test
adc
push
and
in
test
mov
adc
or
add
mov
into
sub
loope
push
sbb
sub
leave
push
mov
sbb
cmp
lret
into
mov
mov
enter
mov
xor
xchg
leave
mov
negb
mov
loopne
lock
popf
adcl
rclb
pop
mov
adc
mov
xor
popf
inc
add
dec
xor
arpl
adc
pop
addl
pop
push
and
push
and
adc
or
dec
sbb
or
cmp
nop
jmp
call
sub
pop
push
bound
scas
sbb
mov
lahf
addr16
mov
jno
inc
mov
adc
mov
mov
aam
aam
inc
and
pushf
mov
cmova
xor
sbb
adc
xlat
lret
inc
push
mov
pusha
mov
mov
push
call
out
test
int
ja
addr16
movsb
popa
div
mov
xchg
sub
xchg
xlat
mov
jae
pop
lret
or
pushl
push
out
xchg
lahf
mov
jbe
adc
lods
pop
jp
in
leave
test
cmp
jae
and
je
out
xchg
lds
cmp
sbb
js
xor
outsb
jb
pop
sub
sub
adc
into
push
outsb
sub
push
push
test
icebp
sub
xchg
imulb
cmp
shrb
aam
dec
pop
loope
mov
jmp
mov
jne
jo
sahf
daa
xor
pop
or
dec
mov
sbb
pop
pop
jbe
adcb
pusha
push
iret
mov
fwait
mov
adc
loopne
sarb
xor
or
sbb
push
pop
or
pop
lods
push
cli
ret
nop
xchg
mov
lods
sub
imul
mov
or
imul
inc
mov
test
rolb
sar
push
sbb
xchg
lods
mov
add
adc
ljmp
jae
pop
or
adc
nop
cmp
sbb
pop
lcall
pop
mov
scas
mov
or
sbb
push
add
or
pop
mov
out
mov
pop
cmpsb
bound
ds
add
rol
mov
add
push
test
rcl
arpl
xor
iret
out
insl
js,pn
pop
and
xchg
sbb
inc
mov
push
sbb
aam
popa
cld
push
subb
ret
cmpsb
clc
push
leave
push
xchg
mov
inc
mov
adc
inc
insb
rcll
stos
fnstsw
pop
addr16
mov
sbb
je
sbb
inc
sub
orl
lret
push
mov
cltd
mov
imul
scas
pop
jae
and
xorl
adc
aas
push
test
inc
inc
stos
lret
xchg
rolb
shrl
incb
push
dec
xchg
sbb
bound
push
jmp
xlat
sbb
xorb
dec
scas
xor
mov
sti
adc
sbb
sbb
cmp
or
cltd
pop
sub
lea
xchg
aam
push
loopne
push
out
shl
mov
leave
ja
xor
aam
mov
push
pop
test
mov
xor
mov
or
jae
mov
sub
push
scas
out
adc
cltd
adc
popa
sub
movsl
ljmp
hlt
rcrb
push
sbb
push
xchg
fsub
jns
push
ds
out
mov
adc
and
mov
sbb
mov
sahf
bndstx
push
sub
je
test
enter
loopne
pop
inc
lock
jge
sbb
mov
pop
or
jle
xor
mov
pop
xlat
mov
adc
ljmp
sbb
push
sarb
xlat
or
sub
pop
jo
push
push
in
jo
or
ljmp
negl
push
xchg
pop
cmc
enter
cmp
cmp
push
cwtl
stos
mov
push
negb
inc
mov
adc
out
push
rcll
loope
jecxz
mov
lock
movsb
and
lcall
adc
or
aas
insl
push
js
sbb
add
pop
adc
xchg
imul
mov
sub
not
push
cmp
test
jge
jo
dec
ret
sbb
and
fisubrl
stc
add
pop
adc
xor
cmpsl
push
inc
mov
mov
fs
imul
hlt
dec
adc
shr
shl
es
sbb
xchg
xchg
push
lcall
lret
sbb
or
mov
inc
or
ret
or
and
cmc
sub
jo
into
mov
test
std
or
addb
loopne
and
lea
jb
clc
mov
sbb
push
push
add
and
lods
push
adc
je
jo
inc
lds
call
lahf
addr16
or
mov
add
push
mov
add
pusha
xor
push
pop
andb
shll
dec
jae
xchg
jo
jnp
sbb
or
jmp
idivb
scas
inc
lock
in
mov
mov
sub
mov
sbb
sub
xor
push
mov
jno
push
in
push
lret
xchg
push
dec
push
and
int
or
cltd
sbb
sbb
mov
gs
xchg
je
and
je
psllq
push
das
adc
xchg
mov
stc
repz
add
jg
adc
in
in
add
pop
mov
jne
rorb
jae
sub
mov
mov
mov
pusha
jnp
fnstcw
call
std
ljmp
adc
push
xor
lods
inc
mov
subl
sbb
mov
sbb
jecxz
push
mov
cmp
repnz
lcall
inc
push
fwait
lods
mov
into
mov
cmpb
les
icebp
sub
push
cs
gs
minps
f2xm1
add
pop
jb
push
testl
popa
insb
cmp
lret
shl
rorl
loope
add
dec
mov
test
orb
xor
pusha
mov
das
pop
pop
push
rcll
mov
repz
fs
jmp
push
addr16
je
stos
push
push
add
xor
mov
cmpb
sbb
incb
cmp
jne
sub
cmp
jae
push
mov
loop
dec
clc
inc
dec
mov
cmp
loope
push
add
ja
push
sub
push
stos
rcrl
jo
arpl
sbb
lods
imul
shl
mov
mov
xor
rolb
mov
call
cmpsb
std
pop
cmp
shll
sbb
sbb
jmp
dec
aaa
cmpsb
adc
outsb
adc
push
clc
mov
xorl
sub
pop
push
push
adc
inc
scas
xor
mov
add
rorb
mov
add
push
pop
adc
adc
mov
and
pop
add
stos
test
or
add
xor
xchg
adc
fmuls
pop
in
mov
push
mov
daa
std
or
lret
xchg
jbe
mov
loopne
push
adc
jb
out
out
dec
clc
push
mov
sbb
push
test
pop
xor
cltd
xor
push
mov
cmp
mov
xor
push
mov
jp
lcall
and
sbb
push
lods
pop
lods
fiaddl
sbb
adc
adc
cmpsl
or
repnz
movb
push
into
add
jne
das
es
sar
test
fcmovb
inc
enter
pop
or
data16
out
push
test
cmp
in
pop
ret
mov
mov
lret
sub
test
xchg
cmp
xchg
leave
inc
enter
test
sub
mov
ret
popf
push
push
or
fimuls
mov
add
lock
sbb
loopne
push
sbb
sub
inc
cmpsl
scas
mov
mov
into
mov
repnz
ret
icebp
dec
inc
movsb
sbbb
jle
call
sub
loopne
test
jo
sbb
dec
pop
add
mov
and
sub
fnstenv
inc
pop
jne
leave
ret
pop
or
fistl
dec
leave
push
test
movsl
js
stc
jge
subl
jmp
subb
mov
fwait
lock
lods
push
dec
xchg
mov
cmpl
mov
icebp
push
sub
and
push
ret
into
jecxz
fldl
push
hlt
shr
push
xor
ret
lods
xor
test
adc
pusha
bound
dec
mov
stos
or
loopne
inc
push
faddl
je
clc
adcl
cmp
jbe
inc
mov
rcl
xchg
and
shl
inc
stc
adc
dec
ret
or
addb
shl
mov
pop
sbb
out
mov
dec
add
sar
shlb
or
xor
nop
xchg
add
jle
add
jmp
jno
mov
xor
push
mov
test
inc
push
xor
dec
arpl
mov
rcll
insb
pop
lock
xchg
loope
cmp
add
mov
adc
or
jno
cmp
movb
mov
orb
add
pop
sub
push
out
push
jo
push
mov
adc
push
cwtl
adc
sub
adc
pop
cmp
sub
orl
aaa
jmp
push
int3
push
xor
mov
mov
add
adc
lea
push
push
jl
sub
sbb
mov
fs
cmpsb
add
push
movb
pop
fldt
imul
push
cltd
insb
sbb
or
sbb
adc
jnp
mov
ja
dec
cmp
xchg
jb
aad
out
dec
repnz
arpl
jo
cltd
clc
push
pop
push
mov
js
xor
sahf
mov
and
or
pop
call
dec
adc
xchg
shrb
sbb
sbb
push
dec
ljmp
push
sbb
or
adc
call
cmp
lods
sbb
jp
xchg
inc
pop
pop
mov
leave
popf
sub
sub
fadd
mov
lods
push
add
fs
pop
ffree
aas
adc
mov
ret
push
scas
or
xor
cmpsb
inc
inc
dec
ret
jmp
mov
inc
push
pop
add
mov
pop
push
ret
fwait
adc
pop
mov
inc
mov
fs
push
dec
push
jo
inc
xor
ret
dec
hlt
jmp
sarb
icebp
mov
adc
lcall
mov
sbbb
ss
mov
sbb
xchg
pop
push
or
inc
mov
shrb
adc
add
rolb
cltd
pop
mov
add
fs
push
jbe
mov
arpl
adc
scas
ret
dec
rorb
pop
sbb
enter
jb
fadd
sbb
ret
lret
inc
add
pop
test
mov
mov
push
dec
test
cmpsl
or
test
pop
adc
mov
shrl
pop
test
mov
sbb
sbb
shl
adc
mov
xchg
push
add
lock
gs
movsl
sub
push
stos
mov
adc
mov
icebp
sbb
fs
sbbb
adc
daa
ja
fcomps
cmp
push
add
cmp
rcrb
push
jecxz
add
xor
and
jecxz
popf
and
ret
pop
icebp
pop
lods
sbb
sbb
rclb
nop
leave
popa
cwtl
sub
lret
lcall
leave
aas
movsb
push
scas
sbb
sbb
mov
xchg
or
cmp
cmpsb
add
xor
dec
adc
mov
shlb
adc
sbb
fisttpl
xchg
add
sbb
jmp
add
cs
clc
ss
ret
notb
cmp
push
cwtl
add
jmp
mov
mov
add
nop
stc
cs
or
pop
loope
mov
ror
jne
push
lea
fstl
xor
and
outsb
and
cmpsl
pop
scas
jo
sub
insb
jg
mov
xchg
out
or
xchg
xor
mov
ror
inc
int
jo
adc
pop
pop
and
and
add
es
xor
or
mov
rol
ds
add
fisubrl
jb
es
push
push
scas
sbb
aad
leave
sub
mov
xchg
xor
pop
lfs
sbb
adc
mov
adc
nop
movsl
inc
lahf
xor
push
push
or
nop
mov
push
adc
add
sub
arpl
pop
jl
or
bnd
adc
adc
insl
cmp
pop
fwait
sub
pop
stos
lret
push
roll
pop
pusha
mov
movb
add
loope
jae
insb
or
cmp
sbb
ret
push
arpl
and
fdiv
rclb
sub
xor
pop
pop
and
push
jge
sbb
pop
leave
rolb
ja
mov
lock
dec
fcomi
jge
mov
jbe
pusha
sub
sub
lcall
jbe
popf
push
rorb
enter
cmp
jb
insb
rcll
pop
add
push
cltd
mov
sub
adc
xor
mov
into
inc
push
adc
movb
xchg
adc
leave
pop
dec
lret
negb
nop
lret
insb
je
inc
xor
sbb
xchg
mov
push
add
out
dec
pop
pushf
or
int
sbb
add
or
loop
lcall
dec
xor
inc
imul
cmpsb
mov
in
jb
psubsw
or
jmp
pop
jne
pushf
notl
add
vmovlpd
or
hlt
adc
lods
or
mov
mov
lock
stos
into
rorl
push
inc
cld
or
rcrl
pop
call
inc
sbb
lods
pop
pusha
jp
lret
push
mov
orb
add
sub
and
std
mov
add
push
xadd
lret
insl
add
inc
jp
out
ljmp
call
cwtl
xchg
stos
add
xor
mov
jecxz
add
inc
subb
clc
mov
popa
rolb
sbb
inc
xorl
bound
mov
adc
xchg
clc
mov
cmpb
jecxz
sbb
shlb
imul
ret
leave
or
lock
and
inc
stc
add
push
loopne
test
add
jae
inc
xor
popa
cli
repnz
fisubs
mov
or
stos
jb
es
lcall
pop
and
or
rolb
lcall
jl
xchg
mov
nop
and
adc
icebp
mov
adc
icebp
or
add
xchg
sub
jo
js
aad
pop
or
xchg
inc
jo
les
and
das
sbb
cmpsb
stos
cmp
jp
ret
sub
sub
gs
xchg
sub
pop
call
pop
jmp
pop
ret
rcll
jmp
push
imul
mov
cmp
dec
sti
dec
push
xchg
or
out
adc
sbb
add
orl
test
sub
lretw
lea
or
inc
pop
dec
and
push
sbb
add
push
pop
in
jbe
std
jmp
or
negl
inc
lods
testb
or
repz
mov
btr
outsl
or
les
inc
hlt
jb
lds
jno
push
push
push
insl
sbb
add
xor
xchg
adc
xor
sarb
mov
hlt
mov
push
data16
pushf
clc
or
icebp
popa
xor
push
dec
lea
pop
mov
pushf
fldt
cwtl
push
popf
or
sbb
sbb
sbb
je
movsl
push
dec
roll
inc
iret
loope
repz
xchg
push
js
add
int
or
mov
push
add
sub
mov
mov
mov
adc
mov
xor
ret
cltd
push
mov
sahf
mov
or
and
test
xchg
addr16
std
cmp
ror
test
sbb
stos
test
test
test
or
push
cmp
cmp
dec
push
cmp
out
pop
mov
sbb
and
aaa
fcmove
into
cmp
jl
lock
pop
fnstenv
adc
or
cld
push
stos
push
sahf
sub
cmp
mov
or
push
or
push
push
and
xlat
nopl
jp
and
dec
mov
aas
repnz
les
xchg
mov
bound
cld
in
inc
and
cmp
sub
arpl
dec
loopne
pop
and
or
and
add
jne
add
push
adc
insb
push
ljmp
jo
and
ret
popf
and
inc
mov
xor
xor
sti
sbb
test
mov
xchg
mov
nop
sbb
add
fwait
or
cs
sbb
or
outsl
pop
imul
hlt
rclb
in
push
jmp
adc
mov
pop
adc
adc
sub
push
rclb
sahf
shr
pop
and
pop
pop
add
mov
xor
aad
and
jo
sub
fcoml
add
lret
mov
add
int
jmp
or
les
dec
xor
inc
jb
dec
sub
xor
out
push
dec
in
push
xlat
aas
pop
mov
shll
xchg
inc
out
mov
and
dec
hlt
pop
aad
orb
mov
cmp
push
in
popa
test
add
xchg
scas
call
sbb
sub
out
or
mov
pop
push
imul
fcmovu
jne
test
das
jl
push
mov
xchg
mov
pop
test
mov
sub
lahf
lods
pop
or
pusha
mov
or
add
xchg
push
test
pop
outsl
sbb
sbb
sbb
rcll
dec
xor
xor
pop
stos
or
adc
loope
mov
iret
imul
loope
popa
or
xor
pop
push
mov
and
add
mov
mov
das
test
inc
es
test
push
es
push
mov
fs
pop
add
rcl
into
out
push
cltd
sets
inc
ja
add
loop
jns
test
sbb
in
or
jb
shlb
outsb
out
push
push
sbb
enter
movsb
inc
loope
add
push
orb
ljmp
add
loop
into
loopne
dec
movsb
ret
push
xchg
mov
sbb
ret
loopne
sbb
push
push
or
stos
jno
stos
dec
orl
pop
rcrb
repz
das
mov
faddl
daa
mov
pop
sub
sub
loop
adcl
icebp
or
mov
mov
lods
add
adc
or
movsb
push
leave
push
fildl
dec
add
sahf
mov
mov
jo
aam
ret
scas
paddusw
adc
add
sbb
inc
cmc
and
mov
cwtl
dec
rcrw
sub
sbb
orb
push
xchg
aad
sbb
jmp
shlb
jb
push
adc
add
loope
adc
loope
lods
push
test
outsl
mov
xor
aas
mov
sbb
push
popf
sbb
sbb
push
jo
shl
fidivrs
push
mov
add
pop
xor
dec
sbb
sbb
cmpsb
sbb
jno
mov
dec
push
adc
stc
push
mov
or
sub
mov
leave
bound
fdivrl
cmp
dec
iret
adc
add
mov
jne
ljmp
into
popa
and
sub
adc
push
pop
push
jne
notb
sub
das
fimull
add
cld
or
in
jnp
sarl
shlb
cwtl
push
mov
mov
test
pop
mov
mov
rolb
add
push
adc
test
lock
jo
les
rcll
decl
or
in
pushf
or
rorl
mov
aam
shll
cmp
or
push
xor
push
sub
ja
shll
lret
jmp
mov
inc
or
or
mov
rclb
mov
add
addr16
adc
add
add
push
pop
cmp
add
shrl
pop
pop
jnp
push
data16
and
loopne
call
lock
andb
loopne
or
lcall
sbb
lds
int3
add
or
gs
sub
mov
xchg
pop
ficoms
adc
xor
pop
inc
loope
bound
fldt
and
cltd
or
push
mov
or
divb
push
push
mov
inc
push
and
inc
dec
adc
dec
mov
xor
or
push
xchg
pop
adc
pop
test
jg
out
xor
mov
ss
mov
ret
sub
std
insb
push
push
xor
stos
push
pop
jae
into
lcall
clc
add
pop
cmp
ficoml
ljmp
fbld
inc
jno
push
mov
call
inc
sbb
inc
mov
imul
sti
int3
aas
outsb
and
pop
xchg
mov
xchg
bound
in
js
or
xor
rcrb
cwtl
add
pushf
test
jp
add
and
mov
adc
shll
jo
push
or
popa
and
dec
outsb
cmp
test
sbb
jno
push
and
add
ljmp
test
faddl
xor
fisttpll
cmp
stos
push
lods
test
mov
inc
jecxz
xlat
jbe
in
cmp
cmpsl
add
mov
cmp
add
pop
sbbb
jge
sub
cmp
add
adc
leave
insl
push
subl
shrb
fcmovnbe
adc
jo
inc
pop
or
cmp
inc
cmp
ja
test
xor
aaa
add
cmp
mov
lahf
mov
gs
sbb
and
jae
je
mov
mov
inc
sbb
push
scas
inc
and
mov
scas
or
mov
roll
inc
lret
inc
adc
adc
and
lahf
adc
push
cmp
mov
sub
inc
push
xorb
es
negb
xchg
call
pop
pop
sbb
lods
icebp
dec
sub
push
add
adc
xor
sbb
rcr
out
enter
jge
jno
rcrl
xchg
ds
pop
push
mov
incl
sarb
sbb
mov
adc
mov
xchg
mov
or
rolb
add
push
sbb
call
mov
dec
test
push
popl
sbb
sbb
call
mov
lret
mov
movsb
sbb
xor
div
loopne
roll
inc
push
push
out
lret
sbb
es
dec
adc
inc
sub
add
leave
leave
jns
outsb
movsb
push
push
or
or
and
insl
push
sarl
mov
or
fidivl
or
push
stos
int3
adc
push
add
xchg
push
adc
push
mov
push
push
pop
sub
sub
jnp
jb
mov
cwtl
shlb
pop
add
orw
movlps
add
adc
sbb
addr16
and
sub
dec
hlt
add
push
mov
cmpsl
pop
stc
pop
push
or
into
lock
lret
sub
and
dec
sar
and
xchg
mov
push
sub
orb
or
lods
sub
arpl
inc
insl
push
idivl
iret
or
jno
push
sub
lcall
in
push
cs
inc
push
dec
xor
inc
daa
cwtl
fs
lea
mov
je
addb
xchg
ret
cmp
js
or
dec
loopne
pop
scas
gs
in
push
xchg
xchg
push
pop
pop
jo
jae
jge
repnz
or
push
daa
push
jbe
dec
dec
cli
test
ret
push
cmp
add
pop
jo
mov
add
push
loop
adc
rclb
push
and
sahf
sbb
push
adc
addb
dec
movsl
adc
cmp
inc
packssdw
push
or
pop
or
lds
or
sbb
dec
adc
ror
push
xor
subb
sub
les
loopne
xchg
add
push
add
dec
or
push
mov
and
adc
adc
inc
or
xor
call
adc
lret
ljmp
in
and
outsl
adc
xchg
ret
in
mov
lret
cmpsl
dec
popf
roll
and
ret
adc
or
clc
mov
mov
push
loope
cwtl
jno
adc
sub
pop
test
and
inc
add
sbb
mov
dec
in
call
rcrb
dec
push
sbb
adc
sbb
cmp
sub
add
addr16
mov
mov
mov
sbb
jmp
add
cmp
push
lahf
rcr
or
adc
fnstenv
inc
shl
push
add
neg
xchg
leave
add
pop
lods
cltd
jne
pop
sbb
adc
adc
inc
loop
xchg
bound
mov
dec
setb
cltd
sub
test
mov
pop
and
ret
aam
enter
sub
test
xor
jbe
test
or
aad
lret
cld
mov
jl
shl
xchg
sub
data16
daa
mov
mov
jbe,pn
sbb
rcl
gs
push
dec
out
inc
add
loope
sti
lods
xchg
jge
and
loope
pop
mov
leave
dec
or
enter
pop
rol
push
xchg
jp
imul
sub
jl
or
add
dec
js
adc
sub
jmp
inc
xchg
repz
cmp
push
inc
xor
pop
push
ret
test
or
add
mov
add
pusha
jl
pop
popa
cmp
add
pop
call
push
pop
lret
out
aam
aam
shlb
mov
pop
xchg
arpl
ds
pusha
andl
dec
fcmovnbe
ds
out
jb
test
iret
das
popf
ret
add
xchg
add
jo
fsubrl
dec
xor
mov
xor
std
out
rclb
add
add
pop
outsl
cmp
dec
xchg
sbb
shl
nop
add
repz
sub
or
mov
push
into
sub
and
insl
lahf
enter
or
cltd
push
movsb
pop
xchg
add
test
inc
add
pop
pop
clc
call
jmp
sbb
pusha
cmp
push
sub
sub
push
xor
pop
push
sarb
mov
jp
push
adc
cmc
shll
out
mov
aad
out
adc
add
and
pop
shr
adc
sub
sbb
mov
xor
adc
negb
xor
push
sub
xchg
loopne
enter
cmp
stos
testb
adc
je
sub
ficompl
mov
pop
xchg
out
lock
cmp
pop
and
sbb
or
cs
lock
or
rclb
push
adc
enter
cmp
mov
cltd
cmp
mov
insb
ret
lea
lret
add
sbb
imul
je
test
adc
jae
mov
xchg
add
data16
lods
ljmp
or
dec
add
int
cmp
dec
dec
or
push
daa
push
add
cmp
js
mov
scas
cmc
and
cmp
and
cmpsb
sahf
leave
push
push
push
jl
bound
push
rolb
mov
jb
or
inc
push
fstps
add
test
adc
or
mov
lcall
dec
push
xor
dec
sbb
adc
sbb
inc
fiaddl
push
fsubrs
sbb
xchg
pop
orb
pop
xor
inc
lret
mov
mov
jo
mov
ror
jo
mov
into
pushf
add
sarb
push
mov
add
int3
shrb
push
js
mov
sbb
sub
test
mov
dec
or
or
loop
loopne
pusha
dec
loop
enter
cs
jmp
push
or
mov
test
sbb
in
pop
cli
push
std
mov
mov
std
leave
lret
inc
mov
cmp
pop
xchg
adc
arpl
cwtl
cmp
xor
adc
shll
and
cs
sub
out
push
jae
push
lcall
test
aam
mov
xchg
mov
ljmp
sbb
pop
lret
enter
je
sub
std
rol
scas
stos
sub
xchg
orl
push
dec
shlb
loope
idivb
xor
call
xor
loopne
shrl
sub
dec
push
or
orl
sub
push
and
mov
jo
fs
mov
push
adcb
inc
xchg
sahf
sbb
inc
mov
daa
add
scas
pop
sbbb
mov
push
push
imul
push
aad
pop
roll
fwait
or
xor
call
inc
pop
sbb
push
mov
clc
jmp
shlb
loopne
cmp
cmp
or
mov
pop
xchg
inc
add
es
dec
mov
or
inc
jl
roll
fwait
mov
pushf
jno
sbb
fimull
or
xorb
ret
or
stos
lcall
lods
pusha
js
adc
mov
push
mov
dec
lret
inc
jo
addb
mov
push
mov
lods
inc
or
call
push
ja
and
or
sub
shlb
dec
call
adc
xor
incb
push
scas
scas
lret
sbb
dec
xchg
lds
flds
sbb
mov
dec
addr16
les
push
xchg
xor
lds
mov
dec
jno
adc
push
add
pop
adc
pushf
stos
popf
ja
fiadds
insl
mov
xor
or
mov
sti
fistl
mov
or
inc
mov
enter
cmp
xchg
int3
xchg
mov
hlt
enter
push
pop
into
mov
sub
int3
icebp
in
push
out
add
data16
loopne
rorb
sub
inc
mov
mov
or
ss
test
sarb
sub
aaa
cmp
das
cmp
insl
aad
jae
in
push
pop
pop
jecxz
rolb
lret
not
icebp
hlt
jae
shlb
lret
lods
bound
push
sub
mov
ds
inc
in
xor
sahf
insl
push
int
in
cmp
loope
int
cmp
dec
rclb
inc
add
lret
cli
add
call
shlb
xor
sbb
push
or
xor
popf
mov
adc
or
add
mov
jb
daa
mov
dec
shlb
pop
out
dec
jo
lea
sbb
test
in
ret
xchg
ret
xchg
loope
sarb
mov
fwait
enter
test
imul
jmp
aad
test
andb
hlt
movsl
add
or
sub
ret
mov
cmp
pop
or
les
movsb
mov
or
sub
mov
xchg
test
add
cmp
and
pop
int3
jns
test
xor
rcll
push
jmp
push
cs
push
or
fsubrs
outsl
xchg
mov
push
xadd
add
mov
das
inc
scas
add
xor
mov
add
sbb
jae
jno
or
mov
push
or
inc
cwtl
xchg
mov
xlat
mov
test
rcrb
add
lretw
sub
inc
addr16
rolb
adc
sbb
sub
push
xchg
sub
outsl
cmp
pop
into
js
cmp
aas
adc
dec
or
adc
movl
rorl
loopne
inc
test
rcl
push
xor
call
add
dec
fcoms
stos
or
popa
jge
cwtl
pop
mov
pop
inc
ljmp
daa
cmp
xchg
sbb
mov
or
lea
mov
gs
in
xor
cli
or
or
and
jl
sti
lds
lock
dec
pop
or
push
push
ffreep
add
or
or
sub
inc
ljmp
aad
sarl
incb
push
push
push
adc
movsb
xor
out
cltd
test
roll
aad
jnp
add
aaa
push
mov
lea
stos
push
cmpsl
mov
lock
loope
inc
or
push
out
bts
push
push
jp
xorl
jg
pop
bound
cmpsl
inc
sbb
xchg
scas
orb
cmp
shr
inc
mov
das
mov
and
xchg
and
loope
aad
fs
out
push
xor
lds
pop
mov
sbb
lods
pop
xchg
xor
dec
xchg
mov
mov
sbbl
sbb
loop
dec
push
mov
mov
push
adc
test
inc
sti
xlat
xor
sub
pusha
xor
pop
inc
ja
shlb
int
pop
push
pop
loopne
mov
pop
aam
inc
sub
xor
pop
jp
xchg
lds
dec
push
rcll
dec
aam
fwait
push
and
dec
sahf
cld
nop
add
roll
xchg
mov
sub
push
popa
mov
shl
sar
ljmp
pop
push
loop
pop
add
leave
scas
es
push
push
inc
pop
lock
sbb
jne
and
jae
push
xor
lret
in
imul
xor
jp
sub
jno,pn
sub
mov
mov
sarl
adc
ljmp
fildl
or
icebp
adc
int
xor
sbb
pop
sbb
lea
push
sub
and
add
cmp
fcoml
lock
inc
js
and
dec
lods
sbb
cwtl
xchg
mov
mov
xchg
mov
mov
or
ljmp
iret
in
shll
fwait
out
test
das
mov
inc
mov
js
push
inc
push
or
mov
mov
push
test
pslld
mov
push
jbe
sbb
add
cltd
rol
xor
lea
rorb
and
pushf
pop
repnz
mov
add
adc
addr16
mov
mov
sbb
cltd
jns
outsl
push
xlat
or
punpckhdq
call
inc
movsb
adc
loopne
ds
movb
test
cs
scas
pop
pop
pop
es
push
push
loop
push
and
rorb
lahf
popf
sub
push
mov
jecxz
push
stos
xor
cmp
call
call
movsl
push
inc
les
xchg
sbb
push
ret
mov
add
inc
push
js
jmp
loopne
in
ret
jne
xchg
call
cmpsb
pop
ljmp
ret
fiaddl
mov
mov
stos
adc
jecxz
xchg
pop
movsl
sub
sbb
lds
jbe
dec
rclb
push
push
call
loopne
cld
test
jae
adc
sub
cmpsb
cmpsb
adc
sbb
fwait
ret
lods
test
pop
or
xor
shl
mov
or
ljmp
cmp
icebp
adc
dec
orl
insb
or
mov
mov
in
jo
xlat
jmp
xor
xchg
or
xor
push
shlb
jbe
pop
aad
push
and
mov
add
pop
sbb
and
adc
cwtl
or
jl
mov
les
push
fwait
mov
mov
mov
mov
into
popf
push
push
lods
inc
shrb
out
dec
mov
push
dec
adc
pusha
adc
xchg
arpl
and
nop
leave
pop
ret
mov
add
cs
mov
subl
icebp
add
sti
jl
jmp
jnp
test
inc
mov
sbb
jg
sub
inc
pop
pop
jo
jne
icebp
mov
bound
cmp
call
and
sub
sahf
ljmp
cmp
push
into
inc
test
sbb
add
ds
leave
jo
clc
lods
es
cwtl
cmpl
and
or
fstpl
push
arpl
adc
or
push
xchg
add
inc
sbb
or
cmp
mov
xchg
call
lds
stos
mov
ret
adc
inc
and
jg
mov
sbb
int
and
push
xchg
sbb
sub
or
fstl
pop
cmc
mov
dec
inc
xchg
stos
lods
add
adc
or
adc
ss
or
or
mov
and
shl
imul
sub
push
rorl
lods
adc
sbbb
ds
icebp
lahf
lea
call
and
or
scas
adc
fmuls
mov
js
adc
cmp
test
enter
sbb
sbb
push
lds
into
push
add
and
bound
mov
mov
xchg
add
cmpsl
inc
cmp
add
outsl
aad
cwtl
rcl
push
and
add
int3
sub
or
lods
mov
sbb
in
dec
and
sbb
or
pusha
mov
sub
adc
pop
sbb
mov
push
imul
inc
and
clc
add
mov
cmp
ret
sbb
aam
xchg
aad
sbb
or
enter
push
lret
xor
sbb
cwtl
or
enter
ljmp
push
ret
mov
push
inc
adc
inc
sub
jle
cs
sbb
fsubp
sbb
mov
repnz
repz
je
adc
int
inc
xlat
popf
subb
imul
xor
mov
cmp
push
xor
scas
pop
sub
add
movsl
call
mov
xchg
add
cmp
mov
and
dec
add
push
and
stos
sub
adc
xor
adc
out
mov
test
jbe
xor
dec
or
or
scas
andb
nop
and
fiaddl
orl
rorb
mov
ljmp
jne
adcl
add
sbb
mov
aam
sbb
or
call
push
inc
push
scas
or
mov
in
mov
mov
mov
nopl
and
push
mov
mov
inc
push
sub
sbb
inc
jmp
cmp
sbb
shlb
or
addb
jnp
lea
and
or
adc
or
das
xchg
clc
push
add
bound
rolb
cmp
out
or
mov
sbb
ljmp
sub
mov
add
add
sub
dec
sbb
je
pop
popf
add
dec
add
pusha
xor
jb
into
add
lds
icebp
je
imul
ret
mov
jo
push
cmp
mov
dec
mov
and
jb
inc
arpl
mov
sbb
les
xor
add
jo
pusha
and
add
repz
adc
loope
xorb
addr16
lret
std
inc
cwtl
push
push
hlt
jl
shl
js
loope
das
push
decl
inc
sbb
push
push
add
xchg
mov
icebp
sbb
rclb
rorl
loope
or
add
repz
cld
mulb
pop
fs
cld
add
sbb
sbb
daa
rorb
inc
jmp
push
mov
sarl
das
sub
hlt
sbb
imul
add
sbbw
out
adc
mov
test
aam
ror
cmp
js
add
inc
and
not
push
test
insb
mov
push
orb
xor
or
stos
sbb
sbb
or
dec
or
cltd
or
test
gs
xchg
or
xchg
test
push
cs
psrad
clc
loop
out
sbb
adcb
subl
dec
rcll
and
or
cmpsb
mov
pushf
mov
sbb
movsw
mov
adc
in
xchg
xor
inc
mov
add
dec
or
popa
imul
nop
mov
push
insb
sub
push
xchg
jnp
inc
mov
sub
or
rcl
jo
pop
je
sbb
cmc
lock
mov
mov
pavgb
ret
or
mov
add
jo
and
pop
inc
rorl
push
jg
adc
push
push
mov
and
data16
adc
mov
push
into
or
mov
pop
dec
adc
pop
push
movsb
inc
mov
push
orb
push
test
adc
sub
stc
mov
push
mov
shlb
ret
push
xor
inc
adc
mov
pop
fstpl
pop
cmc
push
scas
shll
or
add
stos
out
inc
shlb
sbb
repnz
mov
aas
lret
dec
pop
inc
add
push
jmp
or
lds
shll
or
dec
mov
sbb
add
pop
inc
lret
cmp
push
inc
push
rol
push
xchg
mov
mov
and
cwtl
xor
mov
sbb
cltd
cli
push
rclb
sub
lret
adc
cmp
out
or
sbb
jg
add
mov
rcrl
pop
cmpsb
and
out
add
lods
jo
push
ja
adc
mov
mov
push
ss
jnp
xor
xor
sahf
add
push
sysexit
adc
lods
addb
jbe
lds
inc
mov
cmpsb
push
push
andl
mov
mov
out
dec
add
and
push
pusha
xchg
fmull
sub
pop
push
shrb
sbb
xchg
aam
sbb
push
or
lret
bound
inc
aas
or
and
push
mov
sbb
movsl
adc
xchg
mov
jmp
push
xchg
subb
sbb
and
rcrb
mov
loope
push
dec
mov
in
sbb
ljmp
stc
or
push
cmp
mov
mov
push
cmp
shll
sbb
ficoml
shll
loope
popf
das
bound
rolb
rorl
push
stos
sbb
mov
add
sub
enter
xor
js
sub
and
sbb
scas
xchg
sub
push
loop
out
mov
or
data16
dec
test
xorb
shrl
jp
adc
lahf
inc
stos
xor
jae
mov
sub
movsb
mov
out
add
test
ljmp
inc
inc
sar
faddp
and
push
mov
inc
icebp
mov
not
pop
jno
xor
xor
or
jno
adc
adc
xchg
subl
mov
loopne
add
ret
sbb
pop
movsl
ja
mov
sub
cmp
xlat
push
pop
sbb
lahf
cmp
add
ret
hlt
pop
aaa
int
adc
fldenv
mov
adc
test
lcall
test
ret
or
cmp
cmpsb
pusha
aad
loop
push
add
or
push
xor
sbb
xlat
xor
cmpsl
sbb
test
add
adc
mov
ret
push
mov
inc
aad
rol
call
inc
js
jp
lods
mov
push
in
in
sub
or
icebp
xchg
push
adc
cld
adc
inc
or
les
add
or
ret
mov
inc
shll
push
lds
subb
stos
rolb
inc
pusha
jbe
and
push
jbe
lret
out
test
dec
scas
mov
mov
cwtl
sahf
or
dec
xor
lret
mov
pop
out
jae
xor
test
popf
cmp
scas
and
loope
jo
loopne
dec
dec
xchg
test
or
out
hlt
add
pushf
pop
pop
sub
dec
dec
mov
add
pop
push
dec
je
xor
in
popa
xchg
mov
ljmp
jmp
pop
mov
xchg
push
adc
adc
sbb
lea
adcb
cmp
shll
testb
push
push
roll
push
dec
daa
adc
push
pop
add
adc
push
push
lock
pop
addl
pushf
loopne
sbb
mov
je
sub
cmp
add
dec
shlb
fstpl
fucomi
lret
cmp
mov
cmpsl
popa
repz
and
out
push
mov
mov
xor
mov
aad
pop
sbb
add
sbb
andl
mov
add
lret
pop
cs
pop
lock
leave
nop
imul
add
mov
mov
pushf
cmp
pop
leave
or
test
xlat
or
mov
adc
dec
pusha
insl
sahf
xor
ret
test
test
or
mov
add
out
push
push
call
ret
cmc
aam
lcall
data16
jl
xchg
aad
add
jo
ret
das
mov
jge
lods
mov
sbb
lock
xchg
in
pop
in
shl
jmp
lock
lods
and
or
pop
int3
sub
jl
fisubl
subl
cmp
dec
xor
jbe
or
mov
add
or
shll
mov
mov
sbb
ljmp
or
in
ret
iret
mov
and
jl
add
sbb
das
testb
inc
sub
jns
not
add
sub
icebp
daa
sub
mov
sub
outsb
add
sub
xor
adc
je
cmp
and
adc
pop
xor
cltd
loop
xchg
mov
fwait
inc
shlb
add
jmp
ret
sub
adcb
lret
mov
pop
xchg
rcll
popa
js
cmpsb
sbb
into
mov
out
pop
xor
sbb
adc
push
inc
ret
dec
push
mov
shlb
es
sbb
nop
inc
popf
jbe
push
sbbl
push
add
mov
inc
test
or
or
filds
ret
pop
push
or
into
adc
sub
mov
push
or
aad
je
dec
popf
pop
push
jae
inc
icebp
clc
push
shlb
lock
push
xlat
test
clc
or
inc
push
cmpsl
jl
mov
sbb
jb
mov
add
sbb
mov
std
push
or
and
pushf
or
and
sbb
xchg
lret
stc
push
sub
pop
inc
mov
xlat
xchg
sub
fbstp
xchg
mov
dec
or
push
sbb
mov
pop
loop
mov
xchg
add
push
or
sub
or
lret
push
mov
mov
mov
or
stos
push
jmp
and
push
jbe
rorl
imul
adc
sbb
cmp
repz
addl
mov
and
rcl
aad
sbb
fs
push
icebp
mov
icebp
adc
pop
or
cmpl
lds
jge
sbbb
add
rcll
xchg
jb
pop
lds
pop
repnz
dec
les
and
bound
sbb
jne
cltd
test
jbe
dec
sbb
adc
push
push
mov
int3
cmp
and
loop
lcall
sub
mov
sbb
sbb
add
incb
test
jge
icebp
mov
call
imull
or
inc
orb
cmp
es
addb
fwait
mov
popf
and
inc
push
leave
shll
cmp
popa
rcrb
mov
and
inc
cmp
or
and
inc
jmp
loopne
imul
cmpps
hlt
sbb
adc
fdivl
ret
add
push
jae
xor
loop
jp
insb
and
daa
pop
aad
adc
ret
add
icebp
mov
cmp
mov
es
loope
add
push
inc
stos
pop
pop
mov
jno
adc
inc
push
enter
rolb
lret
arpl
fdivr
mov
push
cld
adc
cltd
or
jmp
adc
or
push
fwait
rcrb
shl
push
enter
jmp
xor
push
pop
rcll
mov
cmpsb
xchg
clc
push
or
sub
and
sbbb
stos
daa
add
rorl
imul
das
sbb
sbb
jmp
in
push
cmpsb
push
shll
rolb
push
or
pop
mov
dec
push
mov
add
lret
pop
xchg
adcb
push
push
push
cltd
lea
mov
add
or
add
mov
add
fnstsw
js
and
mov
stos
push
xchg
hlt
rcrl
data16
adc
aam
xor
jp
cmpsb
cmp
sub
xchg
push
push
hlt
inc
popa
inc
test
fwait
enter
pop
call
dec
lods
adc
pop
shll
cmp
into
sbb
inc
sbb
push
movsl
mov
adc
pop
and
mov
repz
pop
adc
mov
adc
leave
xor
jl
cmpsb
sbb
lret
hlt
scas
outsb
test
add
adc
lcall
mov
adc
sbb
adc
jo
or
sbb
mov
daa
pop
jo
sub
scas
rorl
inc
lret
inc
inc
js
sub
loop
pop
lods
or
cmpsl
pop
add
push
xchg
xchg
aam
add
test
ret
sbb
sar
loopne
or
xor
pop
lock
sbb
shrb
jno
or
jo
sbb
sbb
mov
scas
push
cltd
ds
mov
rsm
or
cmc
imul
fldt
mov
and
sub
arpl
xchg
pop
or
adc
mov
jmp
push
mov
inc
rolb
mov
pop
insb
and
test
mov
iret
jl
add
add
pop
in
sub
inc
loope
dec
sub
jmp
rcl
aam
dec
adc
orl
jle
leave
int3
test
cmpsl
dec
adc
dec
lea
adc
adc
add
or
sbb
and
jmp
mov
lret
orb
pop
sub
mov
stos
and
pop
ss
rolb
sub
lods
mov
pop
mov
shlb
aas
mov
push
sub
push
arpl
and
xor
ja
loopne
gs
and
mov
xchg
inc
xor
xchg
or
rcrb
push
push
leave
loope
xchg
mov
bound
lea
int3
mov
pop
inc
insb
scas
xchg
movb
jge
add
push
adc
sbbb
rclb
insb
les
shlb
cmp
adc
fisubrl
loopw
sbb
xchg
leave
popf
orb
sarb
push
call
orb
inc
jl
sbbb
and
mov
icebp
adcl
xor
shll
test
xor
popa
lahf
sbb
loope
push
hlt
mov
es
jno
pop
inc
sub
fisttpll
xor
addb
arpl
jp
inc
push
adc
adc
shlb
shll
fnstenv
push
pop
popa
push
mov
add
cmp
jae
call
mov
push
sbb
cmp
mov
xor
lods
stc
or
ror
sbb
pop
push
std
lret
add
js
enter
or
rolb
mov
sub
sbb
int3
out
mov
je
rclb
and
adc
xor
out
add
add
or
inc
popa
lcall
cmc
inc
das
push
adcb
xorl
add
add
xchg
push
dec
stos
sub
and
push
sbb
mov
in
ret
xchg
adc
test
inc
adc
outsb
aam
push
pop
xchg
add
je
jo
daa
inc
mov
xchg
pusha
cli
pop
les
inc
rclb
scas
xor
mov
aad
adc
addb
and
or
push
add
dec
cltd
dec
ljmp
dec
adc
call
int
push
or
push
hlt
add
int
push
in
mov
inc
int
dec
bnd
int3
lcall
pop
adc
sub
sbb
enter
adc
xchg
jo
jecxz
push
subb
clc
dec
lds
add
sub
test
adc
mov
jmp
add
jge
sbb
jne
mov
jo
sbb
fsubrs
or
inc
pop
cmp
dec
adc
pop
sub
repnz
xacquire
push
jb
mov
leave
adc
call
push
out
addb
mov
pop
jg
enter
addr16
or
mov
push
adc
lock
pop
fs
addb
adc
and
repnz
mov
rolb
mov
ds
andb
push
xor
xor
adc
jp
push
adc
adc
sub
adc
sub
adc
add
pop
mov
or
lods
push
inc
in
inc
std
lret
inc
sbb
or
cmpsb
xchg
xchg
test
loopne
or
mov
loopne
fnstsw
cmp
mov
pop
xor
adc
cmp
adc
cs
mov
mov
loop
pop
pop
push
sub
push
lock
inc
add
xchg
rcll
hlt
or
sub
cs
out
lret
or
mov
ret
lea
pop
sahf
pop
xor
push
rorl
jge
cmp
cmpsl
fidivl
lock
lods
dec
lock
inc
xchg
enter
pop
pop
or
inc
das
rolb
fwait
and
add
rcll
jle
add
lds
jg
push
test
add
and
cmp
rolb
hlt
inc
test
sbb
cmp
paddq
add
inc
fdiv
mov
pushf
sub
ret
icebp
das
jo
push
mov
mov
mov
or
mov
mov
push
nop
push
or
xlat
push
sub
inc
daa
mov
test
push
push
je
sbb
xchg
imul
cmp
fisubrs
sub
xor
push
adc
ret
push
mov
and
int
or
push
cmp
jb
orb
inc
mov
pop
sub
arpl
iret
inc
mov
loop
cmp
addr16
lods
adcl
dec
leave
add
adc
movb
rclb
adc
mov
hlt
push
and
cli
and
xchg
int
xchg
jo
lods
xor
push
push
adc
mov
inc
pop
adc
xor
adcb
es
push
in
dec
adc
add
or
cmp
add
cs
lea
pop
mov
daa
adc
repz
loopne
fimuls
mov
or
ret
mov
cmp
add
sbb
add
inc
and
xchg
mov
add
push
push
cltd
push
daa
push
xchg
xchg
addb
pop
and
stos
lea
es
test
aam
sbb
or
jb
ret
push
into
xor
hlt
fiadds
or
dec
mov
movsl
lea
pop
inc
add
es
rcll
dec
lock
das
pop
xor
mov
mov
shrb
push
shrb
push
lahf
push
ffreep
sbb
xchg
cmc
fiadds
sub
pop
repnz
or
sub
ffreep
adc
sub
add
mov
push
pop
out
in
and
mov
mov
leave
adc
cmp
xor
xchg
adc
add
enter
add
mov
sub
xchg
rol
adc
popf
stos
sub
mov
pop
shrl
sahf
jne,pn
add
stos
scas
adc
adc
mov
fisubl
jmp
dec
dec
jnp
add
data16
sbb
cmpb
adc
rclb
and
in
in
jmp
int
mov
sti
lret
xchg
dec
inc
push
scas
mov
add
nopl
push
cmpsb
pop
push
and
or
add
xor
sub
cmp
sbb
icebp
mov
js
ficompl
cmp
and
mov
rclb
sbb
xchg
push
sbb
stos
jb
or
push
addr16
inc
cmp
xchg
push
out
mov
push
imul
sbb
loopne
and
addr16
jb
and
mov
mov
push
cmp
fbld
out
out
dec
jbe
sbb
icebp
lock
scas
inc
fs
or
push
popa
pop
lock
mov
rcll
add
mov
adc
dec
push
arpl
adc
bound
push
mov
mov
scas
jb
push
jns
pushf
push
je
es
enter
inc
jae
adc
into
sbbl
mov
aas
lret
push
js
ljmp
or
idivl
xchg
add
arpl
pusha
imul
xchg
mov
movb
int3
push
or
push
push
push
push
pop
mov
push
insl
outsl
adc
cld
fcomps
pop
or
mov
push
adc
add
mov
xchg
arpl
push
xchg
scas
lock
adc
lcall
xchg
cmp
push
or
inc
pop
lret
xchg
ret
es
or
xor
mov
pop
push
ljmp
push
bound
or
and
or
lsl
push
add
addr16
dec
and
fcoml
scas
push
orl
push
jo
ss
add
mov
lahf
inc
pop
stos
xchg
test
mov
orb
shll
or
aam
xchg
add
push
nop
jae
loopne
mov
out
jmp
jp,pt
daa
clc
adc
pop
insl
loope
int3
into
cmp
dec
pop
pop
shrl
iret
mov
xor
cmpl
push
or
push
test
inc
test
rcrb
and
repz
into
adc
stc
add
call
clc
pop
adc
cmpb
in
push
hlt
mov
repnz
adc
push
in
mov
cmp
stos
pop
cmp
ret
cmp
lahf
bound
sbb
inc
out
imul
shll
cmp
outsl
mov
add
call
xor
mov
or
pop
and
and
push
scas
loop
ret
inc
mov
outsb
mov
jecxz
test
rolb
call
enter
push
and
aad
aad
adcb
outsb
inc
adc
push
sbb
sub
ja
popa
ljmp
push
and
jbe
mov
xor
sbb
xchg
scas
sbb
or
loope
movsb
loope
mov
mov
pop
cld
push
pop
cmc
mov
and
sti
sbb
subl
mov
inc
sbb
push
rclb
cmp
pop
sbb
sbb
push
daa
and
inc
sti
mov
sbbb
lds
push
mov
arpl
adc
aaa
and
and
and
pop
push
cmp
pusha
sub
sub
lods
pop
mov
rol
ret
adc
pop
ja
aad
adc
sbb
cmp
es
sub
int
dec
nop
mov
cwtl
xor
loopne
ljmp
push
mov
pop
mov
sbb
aam
cmpsb
xor
mov
mov
mov
sub
mulx
pop
sbb
add
lods
or
and
add
shld
xchg
loop
jne
adc
inc
or
rclb
adc
mov
jb
sahf
push
imul
push
lret
es
jnp
dec
xor
adc
push
mov
xor
dec
xadd
adc
xlat
push
mov
pextrw
sub
push
cmpsb
pushf
stos
or
imulb
pop
or
pop
movsb
setnp
mov
lock
sbb
push
pop
or
or
push
mov
popa
orl
inc
xor
addb
cltd
jnp
push
mov
adc
adc
dec
in
loop
pop
stc
jge
dec
dec
push
addb
bound
cwtl
sub
or
sbb
roll
sbb
sbb
sub
inc
push
add
xor
sbb
adc
and
cmpsb
mov
dec
ret
xor
push
scas
and
jb
and
push
and
or
lret
call
out
push
test
push
ret
mov
out
add
fwait
and
adcb
jl
adc
adc
scas
inc
and
aad
mov
jmp
mov
nop
mov
rorb
push
adc
jecxz
inc
sub
add
iret
push
sbbb
ss
inc
cmc
push
cmc
add
jne
pop
adc
leave
sbbb
enter
add
inc
gs
aad
rcrb
and
xor
mov
pop
fildl
push
popa
sub
shrb
adcb
cmp
push
lods
pop
movsb
sti
icebp
aam
cli
or
adc
std
push
jno
add
adc
stos
pop
push
or
dec
lock
add
and
cmp
sbb
and
jp
rcr
sbb
inc
inc
roll
adc
lds
xlat
cmpsl
add
push
push
dec
icebp
lock
push
repnz
mov
or
inc
or
jo
imul
add
imul
dec
dec
out
push
lea
push
inc
sbb
sahf
inc
mov
mov
xchg
xchg
std
rolb
orl
daa
adc
aad
sahf
add
and
sbb
sub
rol
inc
adc
add
pop
sbb
enter
test
loope
insl
movb
xorl
sti
adc
xor
add
xchg
cmp
dec
adc
call
sub
aam
jnp
push
stos
sbb
ret
inc
mov
or
mov
xor
lret
mov
mov
das
outsb
xchg
scas
ss
test
test
cmp
repz
xchg
adc
je
mov
test
std
adc
lret
adc
or
lret
leave
mov
pop
add
jg
sahf
pop
push
rcll
or
or
jnp
and
mov
pop
add
sub
pop
sar
shll
mov
sarl
push
cmp
jo
pusha
adc
jo
lods
sbb
adc
imulb
ret
ret
jbe
loop
or
sbb
adc
das
add
adc
cmp
or
dec
cli
dec
pop
sbb
pop
adc
in
add
ret
mov
dec
adc
jp
mov
xchg
pusha
or
add
inc
ror
cmpsl
mov
repnz
xlat
pop
scas
inc
ja
outsb
lods
adc
sub
hlt
pusha
mov
mov
push
adc
or
push
or
repz
inc
sub
jne
sbb
insb
or
and
pop
xor
push
daa
bound
cmp
xchg
scas
mov
dec
rol
addr16
xadd
add
pop
fistpll
cwtl
inc
filds
lds
rcr
mov
xchg
rcll
inc
lods
pop
ss
pop
adc
call
xor
mov
sub
rol
push
xchg
or
mov
and
shl
or
cmp
mov
push
push
xchg
dec
inc
pop
sub
mov
out
lcall
sbb
sbbb
stos
push
xchg
xor
adc
pop
mov
inc
jb
mov
push
cmp
sbb
add
push
adc
cltd
sbb
sbb
adc
jne
adc
daa
inc
add
dec
fadd
out
inc
sbb
xchg
inc
arpl
adc
lods
push
rolb
push
jp
sbb
das
xchg
push
cmp
inc
mov
sbb
sahf
orb
cltd
into
add
js
add
test
pop
cmp
xor
xor
loop
dec
or
inc
cmp
sbb
pop
rcrl
pmaxub
fisubrl
push
jecxz
rol
cwtl
nop
aad
stos
inc
cltd
sub
push
add
push
dec
add
adc
sbb
push
add
inc
imulb
jb
adc
lcall
xor
orb
lcall
jo
bound
xchg
test
add
and
sbb
stos
pop
adc
inc
xchg
sbb
add
addr16
int
arpl
fdecstp
or
mov
aad
subl
cmp
sbb
pushf
pop
or
xchg
aam
and
imul
push
addr16
nop
mov
je
push
insb
mov
and
in
stos
xchg
orl
sub
es
imul
ljmp
dec
scas
or
mov
mov
mov
roll
and
cld
cmp
or
add
push
xor
hlt
sbb
inc
andb
popa
in
adc
dec
jbe
pop
sub
mov
dec
inc
subb
orb
andb
sbb
dec
test
arpl
add
jecxz
movsl
jb
into
mov
in
xlat
add
ficompl
cli
sbb
and
pop
push
sub
insb
add
add
loope
or
rcrb
inc
adc
int
loope
mov
push
push
not
mov
or
push
sbb
xchg
sahf
aam
pop
test
orb
cs
popa
cld
enter
jb
mull
jo
icebp
adc
ljmp
dec
pop
imul
dec
adc
mov
mov
stos
enter
xchg
lret
push
adc
pop
ss
mov
jmp
roll
or
out
add
dec
test
push
rorb
jge
pop
jb
fsts
cmp
pop
xor
xor
inc
push
xchg
and
ds
loope
pusha
hlt
aam
adcl
and
xlat
push
gs
adc
mulb
dec
sbb
add
push
sub
sbbb
dec
rcrl
out
in
incl
dec
adc
in
popa
cmp
sti
mov
mov
mov
sbb
mov
add
aad
shl
push
push
out
gs
mov
andl
stos
pop
aam
push
adc
rcll
rcll
mov
in
xchg
out
sub
add
hlt
lds
push
or
push
jp
sbb
mov
mov
mov
or
sahf
into
cwtl
push
xor
adc
imul
inc
aam
stos
popa
xchg
add
or
cli
push
add
mov
push
mov
mov
enter
cmpsb
dec
sbb
mov
test
mov
mov
push
mov
dec
repnz
inc
xchg
enter
enter
rclb
mov
and
pop
sbb
pop
rclb
rcll
mov
adc
jne
pop
sub
lret
xor
pop
add
sub
sbb
mov
inc
movsb
adc
pop
jnp
movsb
out
cs
call
sbb
call
rcrb
outsl
mov
pusha
adc
stos
adc
pop
or
sti
test
leave
push
imul
xchg
out
or
mov
push
sub
xor
loop
cmp
add
cwtl
jno
leave
adc
sbb
mov
add
orl
lret
sub
sbb
adc
and
cmp
stos
pop
xor
mov
push
mov
push
into
fadd
push
nop
or
push
sub
out
pop
sub
inc
xor
test
adc
rcll
les
push
divl
sti
push
loope
cmp
stc
or
mov
xor
fisttpl
enter
push
nop
push
mov
or
roll
jno
std
and
add
push
les
push
and
test
mov
leave
adc
mov
push
push
outsb
sbbl
stos
mov
int
inc
cmp
sahf
sbb
out
pop
xchg
inc
mov
loopne
les
xor
or
push
ret
inc
or
cmp
and
sub
and
mov
inc
pushf
cmpsl
aam
ljmp
adc
arpl
test
fildl
loopne
cmpl
test
icebp
inc
sbb
popa
mov
inc
mov
or
inc
pop
pop
pushf
aam
jge
jno
sbb
cmp
mov
and
push
popa
popa
shrl
push
mov
and
shl
orb
adc
pusha
loopne
xor
xchg
pop
addb
xchg
adc
in
push
mov
jp
sbb
cmp
xor
sbb
mov
pmuludq
sbb
dec
xchg
bts
add
mov
sub
or
data16
fsubrs
roll
aam
and
rol
fsubrs
sub
mov
movsl
orb
bnd
rcll
bound
pusha
jbe
push
inc
lods
cmp
pop
subb
stc
hlt
stos
sbb
adc
pop
test
test
insl
sub
sbb
mov
lods
dec
push
mov
inc
add
fcompl
addr16
mov
rcrb
dec
decb
scas
push
cltd
push
push
push
lds
push
loope
adc
sub
add
and
push
mov
add
cmp
inc
fidivs
dec
xor
dec
add
or
les
xor
lds
pushf
sub
stos
adc
sbb
pop
xchg
rclb
mov
adc
and
call
pop
rol
jnp
lea
lret
sbb
push
sbb
jns
xchg
lret
mov
sbb
inc
dec
mov
mov
jne
lods
push
icebp
lock
fcmovnb
and
sti
dec
adc
sbb
jo
loop
xor
push
or
adc
sbb
push
sarb
sub
add
xchg
in
jp
cli
shlb
adc
xor
rclb
bound
in
sub
add
adc
dec
lahf
sub
add
js
push
loope
push
sbb
xor
fistl
test
lock
or
inc
or
xchg
add
jb
push
imul
sbb
xchg
push
xor
movsl
mov
push
cs
pop
movsl
or
sahf
es
dec
outsl
add
dec
adc
add
pop
or
push
and
popa
xchg
sub
lea
iret
add
pop
jns
push
add
shrl
stos
sbb
xor
push
scas
jp
xor
jae
std
popa
rolb
and
addl
sbb
dec
inc
scas
sub
and
ds
jecxz
mov
and
inc
icebp
call
xchg
sub
add
inc
mov
and
das
sub
rorb
and
cmp
pop
inc
pop
mov
xchg
or
arpl
roll
cmpsb
and
mov
adc
loop
jmp
add
mov
fwait
loopne
push
sbbb
lock
lcall
lret
pop
rcrl
ret
add
mov
pop
hlt
ret
sbb
cs
sbb
and
lahf
ljmp
fcompl
add
rolb
xor
and
xor
lock
push
loop
dec
pop
mov
cmp
incl
lret
mov
adc
shl
push
jae
stos
and
and
pop
mov
cwtl
into
push
adc
pop
sbb
dec
xchg
out
rorl
fstps
movhps
mov
xchg
jge
add
push
inc
mov
push
add
xchg
stos
pop
icebp
inc
outsb
adc
flds
push
adc
aaa
ret
sbbl
mov
rolb
roll
xor
pushf
push
mov
aad
lds
push
mov
adc
rcrl
and
pop
mov
adc
xor
mov
mov
lods
sub
push
dec
xor
xchg
mov
std
add
pop
sbb
clc
or
jno
mov
or
pop
rolb
sbb
addb
lods
scas
adc
mov
aad
mov
loopne
adc
xchg
push
pop
dec
stos
pop
std
leave
leave
jo
imul
ljmp
xor
ds
sub
in
insl
adc
stos
xchg
or
xor
cltd
ja
jle
mov
push
adc
clc
daa
and
or
dec
dec
mov
cltd
sbbb
or
push
pushf
inc
into
adc
sahf
movb
inc
cmpsb
cli
int3
push
or
mov
cmp
dec
and
lds
xor
imul
jno
add
mov
ds
and
inc
sub
xor
adc
jp
adc
mov
mov
jo
mov
push
mov
stos
fstps
test
mov
shrl
dec
rol
inc
xchg
dec
iret
out
loopne
mov
inc
scas
into
and
dec
gs
call
fcomps
pop
in
mov
mov
adc
loope
mov
mov
mov
cmp
add
rorb
and
adc
rolb
xor
xor
sub
pop
aam
dec
out
cmp
sub
inc
sbb
sbb
xor
mov
sbb
jmp
sub
mov
pop
iret
adc
sbb
repz
test
shrl
add
psadbw
inc
adc
and
add
adc
dec
dec
add
orb
repnz
das
or
arpl
cmpsl
test
lret
push
lock
inc
in
mov
push
sub
and
sub
mov
aad
loope
jae
and
mov
inc
xor
stc
mov
pop
mov
xor
bound
inc
inc
aad
shlb
rclb
inc
mov
add
cmovno
mov
lea
push
mov
shlb
bound
push
je
dec
ja
fwait
push
aaa
mov
and
scas
mov
scas
add
lret
adc
and
in
fucomip
pop
inc
mov
stc
sbb
rcrl
mov
pop
adc
push
push
mov
mov
jge
and
je
icebp
addb
inc
mov
mov
icebp
div
mov
or
add
mov
outsl
dec
or
out
notb
xor
fiadds
leave
push
sbb
mov
sub
mov
shll
inc
orb
push
jl
std
ret
or
popa
shll
pop
xchg
and
push
push
cmp
or
jo
int
xor
mov
pop
adc
lahf
adc
adc
inc
lcall
icebp
adc
and
or
clc
roll
push
loop
xor
adc
leave
add
int3
call
cli
mov
and
loope
lcall
test
jnp
jecxz
gs
sarb
sti
orb
jl
pop
adcb
dec
ret
popf
inc
mov
lcall
test
push
dec
or
rcl
inc
or
mov
rcll
add
and
jb
push
xchg
inc
repnz
and
pop
push
adcb
jno
jg
add
push
outsb
hlt
push
add
addb
xor
cmp
mov
mov
in
jns
add
and
sbb
sbb
dec
test
es
push
xchg
mov
shll
std
lcall
addl
mov
push
adc
call
push
cmpsl
stc
int
les
cli
jg
es
adc
pop
push
adc
clc
jge
in
ljmp
jecxz
jmp
and
adc
je
or
sbb
xchg
mov
push
push
push
inc
shrl
fiaddl
aam
into
mov
testl
mov
add
add
and
push
xor
cmp
cmpb
xchg
xchg
repz
arpl
mov
add
lods
sub
rcll
and
adc
push
aam
xlat
mov
int3
sub
scas
lods
rorl
imul
cmp
cmp
or
cmp
push
aad
xor
sub
lods
adc
das
js
mov
sbb
add
rcrl
icebp
pop
pop
mov
push
pop
iret
roll
dec
cs
and
jo
mov
pop
adc
push
xor
mov
push
push
push
loop
mov
dec
lret
pop
or
cltd
and
fildll
orb
xchg
lret
inc
ljmp
js
ficoml
negb
int3
dec
sbb
int
push
lock
leave
stos
aaa
or
push
add
scas
dec
cvttps2pi
xchg
repnz
or
ja
inc
imul
mov
adc
cltd
or
in
mov
dec
push
stos
pop
dec
mov
push
cmp
pop
test
testl
jmp
mov
cmpsb
scas
jo
insl
and
shlb
loopne
pop
dec
mov
pop
lea
cmpsb
push
iret
inc
loope
xor
xchg
jo,pt
and
es
les
push
out
fstpl
rcll
pop
test
push
add
int3
jns
mov
cmovbe
push
sub
and
adc
cli
out
pushf
adcl
pushf
decb
fidivrl
adc
aas
push
sbb
sbb
push
jl
dec
in
mov
inc
ljmp
cwtl
in
lds
or
add
roll
mov
mov
cli
jmp
mov
push
jo
add
cwtl
push
lock
xor
cmp
pushf
stos
scas
data16
pop
nop
andl
push
and
adc
enter
cs
jle
clc
js
inc
and
xlat
sbb
mov
or
cmp
and
adc
adcb
addr16
push
mov
and
xor
lcall
push
lods
ljmp
or
stos
add
add
sbb
cmpsb
sbb
cmp
call
and
popf
add
mov
mov
and
pop
or
or
add
cmp
and
mov
jp
xor
xor
xchg
and
push
push
out
sbbb
clc
addl
and
inc
cmp
xchg
ret
jecxz
inc
adc
mov
mov
adc
pop
pop
dec
sar
or
jno
xchg
adc
xchg
test
js
push
push
adc
or
cld
pushl
stos
aaa
insb
imul
xor
and
xor
sbb
stos
mov
incb
or
adc
mov
add
insb
push
into
out
sbb
sub
add
sbb
mov
or
cwtl
add
mov
ret
cmp
xor
inc
or
shl
push
push
ss
popa
dec
lret
sbb
lds
out
or
rcrl
rclb
and
and
add
add
call
arpl
or
scas
sub
mov
into
addb
xchg
inc
mov
push
scas
and
in
mov
stos
movups
mov
shlb
mov
push
movsl
jnp
cmp
dec
lret
aad
mov
outsb
sub
cmp
and
or
adc
popa
or
arpl
in
mov
push
sbb
bound
jne
mov
stos
cwtl
sbb
rcll
add
rcrb
pop
xor
shlb
cmp
push
push
adc
add
call
mov
push
call
mov
cmpsl
test
inc
hlt
shll
xor
jno
out
sbb
gs
pop
and
addb
icebp
icebp
hlt
repnz
out
imul
and
aam
loop
bound
test
pushl
pop
push
adc
mov
xor
xchg
lcall
adc
cwtl
addl
and
dec
daa
jle
cli
or
push
lods
enter
sub
sbb
popf
es
or
inc
push
jae
sub
les
or
mov
pop
cs
and
or
sub
aas
jmp
les
adc
jne
adc
mov
cmp
xlat
mov
dec
push
aam
ss
nop
and
shll
mov
test
jge
adc
sbb
jl
in
addl
rcrl
pop
lea
sbb
pushf
add
loope
mov
adc
ljmp
loope
mov
mov
ret
test
clc
sbb
xchg
push
sbb
sbbb
rolb
je
hlt
sbb
mov
shll
push
stos
imul
adc
add
inc
mov
jae
imul
xor
sbb
or
jnp
in
sbb
and
add
in
jge
push
sub
cmpsb
and
popa
mov
inc
mov
mov
lcall
pop
sub
pop
jmp
lds
jmp
inc
xchg
inc
stos
leave
push
je
mov
or
inc
scas
pop
xchg
sbb
xchg
jo
and
dec
push
lret
je
int3
jb
movsl
test
adc
test
and
and
in
jmp
movl
aas
fists
lods
sti
pop
dec
fwait
and
jp
mov
push
shll
popf
in
adc
jg
cld
dec
xlat
or
cmp
repz
lahf
bound
icebp
xchg
les
cld
stc
cld
push
outsl
jl
sub
push
andb
lahf
aas
xchg
sbbb
daa
push
stc
negl
movsl
jecxz
xor
adc
and
aas
jg
pop
in
xchg
lcall
pop
cld
stc
repz
jnp
loopne
pop
sahf
in
dec
push
in
ss
inc
lahf
aas
jg
stmxcsr
jg
lcall
test
and
xor
lret
xchg
outsl
xor
lahf
inc
cld
flds
sub
fcomip
sub
xchg
repz
shrb
test
pusha
or
xchg
inc
jle
cld
data16
cmp
loopne
aam
aas
call
sub
fistps
cld
loope
cmp
mov
aad
bound
pop
enter
mov
xor
idiv
fildl
out
test
push
outsl
aam
sbb
nop
xlat
mov
jg
cld
stc
cltd
fmull
stos
inc
sbb
push
mov
out
lahf
aas
test
xor
fs
sbb
and
cld
stc
repz
xlat
or
fisttpll
fsubr
pop
ds
iret
lahf
aas
jg
mov
mov
adc
stc
repz
daa
ss
jl
sahf
pop
jno
pop
lahf
aas
jg
int
fbld
mov
out
repz
cmp
inc
xor
or
scas
sbb
mov
jg
cld
mov
clc
cmpb
cmp
in
ds
lahf
and
test
jecxz
jle
cld
stc
xor
lods
js
inc
test
jl
mov
inc
adc
inc
add
sbb
jns
dec
adc
adc
stos
xchg
push
scas
or
xor
fsubr
adc
scas
test
aas
jg
jg
add
cld
mov
cli
add
xchg
mov
clc
add
xchg
add
inc
jle
fucom
and
mov
iret
lahf
aas
lcall
popf
les
ret
lea
cmp
repz
adc
ret
cmpsl
loop
mov
lret
lahf
aas
jg
scas
repnz
sbb
popa
fsubl
or
repz
sbb
jbe
shlb
jle
jns
jg
cld
dec
xchg
lahf
sub
push
xchg
push
xchg
pop
test
adcb
sti
mov
mov
cld
stc
adcb
jb
pop
fisttps
ror
mov
iret
lahf
aas
cmpsl
mov
push
push
sub
sub
repz
rcr
into
stc
sub
ret
rol
xor
iret
lahf
aas
jg
inc
test
loopne
jl
mov
dec
mov
xor
mov
insl
fldl
or
ret
lahf
aas
jg
lds
or
roll
stc
repz
mov
aam
jmp
adc
repnz
bound
cld
xchg
mov
xchg
inc
sub
imul
lahf
cmp
inc
push
push
pop
addr16
ljmp
stc
sbb
subb
repz
into
out
lahf
aas
pop
mov
jp
adc
stc
repz
andl
inc
dec
in
iret
lahf
aas
jg
inc
sbb
in
inc
int
cmp
repz
cmpl
push
test
gs
inc
data16
aas
jg
mov
xor
xor
sbb
mov
mov
or
movb
jg
cld
inc
xor
lea
adc
sub
iret
lahf
mov
sahf
sbb
inc
data16
inc
paddusb
repnz
repz
cmpsb
cld
stc
repz
call
mov
stc
stos
jae
popa
push
sbb
icebp
clc
dec
sub
dec
lods
pop
pop
pop
inc
stc
repz
fnstenv
sbb
pusha
aas
in
inc
inc
push
jg
cld
fwait
dec
mov
inc
stc
adc
scas
in
mov
repz
lahf
insl
mov
mov
sbb
es
cld
stc
mov
mov
or
xchg
jne
add
nop
out
lahf
aas
pushf
push
insb
inc
lahf
pop
mov
fildll
ds
stc
repz
or
push
cmc
cmpb
dec
sbb
jno,pt
xor
pop
jle
loope
aam
mov
and
paddd
stc
repz
add
les
mov
iret
lahf
aas
jg
and
xor
inc
or
jns
outsl
out
sub
xor
pop
fldcw
iret
lahf
aas
jg
enter
cmpsl
outsl
imul
sahf
out
clc
cld
stc
repz
mov
out
mov
sub
jg
pusha
mov
fdivrs
iret
cmp
repz
enter
data16
mov
icebp
aas
jg
cld
push
stc
sub
pop
dec
lahf
and
iret
lahf
push
xchg
inc
mov
scas
sbb
cld
stc
xchg
mov
movsb
jo
push
lahf
and
pop
out
lahf
aas
stc
outsb
sub
cmp
lret
pushf
jno
iret
pop
clc
leave
dec
sub
push
scas
adc
mov
cld
stc
repz
out
mov
mov
or
lods
add
lods
fs
ret
in
adc
ficoml
xchg
mov
jg
cld
stc
jmp
push
es
push
mov
push
shrb
mov
mov
adc
cs
lcall
xor
xlat
mov
xchg
mov
scas
dec
jle
pop
popf
jecxz
neg
push
and
cld
stc
push
xchg
push
adcl
cmp
lahf
add
pushf
inc
inc
push
dec
pop
js
xor
stc
imul
jne
lcall
xchg
fsts
push
jno
jecxz
push
test
inc
inc
push
mov
stc
repz
aas
gs
cmpsb
fcomps
loope
and
loope
push
scas
lahf
aas
jg
inc
pop
clc
arpl
bound
dec
faddl
or
xchg
addb
xchg
cld
sub
mov
sub
iret
lahf
es
out
inc
add
pop
mov
repnz
push
std
add
ja
lcall
lcall
repz
fdivr
stc
repz
outsl
mov
rclb
xchg
lods
jge
aas
jg
cmp
xor
xor
xchg
jl
jp
repz
or
sub
lds
mov
xchg
arpl
pop
jb
stc
repz
aaa
fsubl
gs
sahf
adc
pop
aas
jg
cld
sti
sbb
into
inc
or
scas
mov
lahf
xlat
rcl
xchg
adc
aam
lahf
aas
cmp
mov
rclb
repnz
lcall
dec
test
je
cld
stc
rep
stos
lahf
dec
loope
or
in
imul
inc
or
sbb
lock
iret
xchg
cld
stc
repz
or
jmp
dec
rolb
std
jg
stos
mov
aas
jo
cld
xor
mov
stos
mov
or
xchg
je
shr
call
cmpb
stc
test
xchg
push
daa
je
fs
out
lahf
aas
data16
addr16
sarl
xor
cld
stc
repz
mulb
loop
jb
xor
outsl
outsb
iret
lahf
aas
jg
jmp
xchg
mov
mov
repz
mov
push
mov
mov
and
pop
xor
or
iret
addr16
stc
repz
or
pop
and
clc
out
call
mov
aas
jg
adcl
jmp
mov
xor
out
fiadds
dec
addr16
inc
push
sbb
cwtl
xor
loope
adc
jmp
mov
repz
xchg
nop
mov
lahf
nop
pop
jle
ficomps
lret
cld
fimuls
call
lahf
push
and
repz
lahf
or
dec
adc
rclb
push
fcomip
cld
stc
add
jne
aas
test
cmc
out
jg
cld
stc
repz
dec
dec
sbb
sub
xor
cld
mov
pop
jo
ud2
inc
in
das
repz
xchg
std
xchg
and
stc
repz
rolb
stos
ss
dec
ficompl
decb
movsl
jne
ret
in
sub
out
ror
js
adc
mov
repz
jg
cld
inc
imul
inc
inc
add
fs
stc
repz
adc
xchg
ljmp
cld
push
cmp
sub
cmpsb
mov
lahf
jno
cmp
outsl
imull
pop
jg
cld
stc
fisttpll
push
aad
jmp
iret
lahf
aas
lret
push
pop
out
ret
xchg
xchg
sbb
fwait
cld
stc
repz
clc
sub
paddw
scas
cmp
sbb
loop
sarb
lret
sbb
and
stc
repz
push
aas
cmp
jecxz
jb
jmp
aas
ljmp
leave
ds
adc
sbb
subb
ficomps
ljmp
les
cld
stc
aad
mov
dec
sbb
fldenv
inc
sub
iret
lahf
aas
dec
int3
dec
aad
sub
jle
inc
jmp
enter
push
jns
loopne
fwait
repz
inc
add
and
cmpb
stc
or
mov
xor
std
out
lahf
aas
mov
dec
jns
and
pop
cld
stc
repz
jg
xchg
mov
cltd
aaa
cwtl
lcall
cmp
fstl
xlat
pop
mov
pushl
pushf
xchg
sub
mov
xchg
aam
lahf
aas
jg
add
fmul
cmp
repz
loop
cltd
cmp
xchg
test
mov
cld
adc
pop
xchg
sub
mov
clc
enter
jbe
adc
cmpsl
negl
test
andl
xchg
lds
or
and
mov
aas
jg
ret
sahf
fcmovnu
inc
imul
push
xchg
out
outsl
adc
or
dec
cld
stc
repz
add
fwait
adc
fs
aas
jg
or
jl
rorl
ror
jecxz
cld
stc
repz
pop
dec
or
data16
mov
in
sbb
imul
xchg
xor
xchg
push
ss
repz
test
outsb
enter
mov
sbb
jg
cld
sub
adc
pop
push
push
mov
es
sahf
add
out
sbb
lods
outsl
fidivrs
xchg
and
xchg
jecxz
mov
fwait
aaa
or
pop
out
push
mov
fidivrs
pop
js
pusha
or
sbb
sbb
pop
sbb
int
aaa
outsl
mov
mov
and
cmp
int
jns
out
hlt
imul
rcrl
pop
push
lret
fwait
aaa
outsl
fisubs
jae
sub
std
fs
les
repz
pop
ror
lret
pop
jb
cs
mov
dec
pop
gs
dec
sbb
fwait
inc
xchg
data16
push
inc
add
mov
sbb
mov
push
jle
out
fwait
aaa
out
sti
out
pushf
fnstcw
jg
mov
loope
adc
mov
cmpsl
lret
les
xlat
and
outsl
inc
jp
and
mov
lahf
aas
std
in
cltd
pop
jno
cmp
sbb
repz
cmpsl
jp
pop
mov
adc
cld
pop
inc
bound
mov
xchg
mov
cmpb
movsl
repz
lahf
cmp
pop
push
or
inc
mov
jmp
cld
stc
idivl
lahf
fs
std
sbb
lds
out
lahf
aas
push
lods
fidivrl
ljmp
cld
stc
repz
enter
xchg
jl
or
lahf
aas
jg
out
or
cld
call
daa
cmp
or
inc
fisttpl
push
leave
je
mov
lods
sbb
scas
jge
mov
aaa
outsl
fiaddl
int3
cmp
cld
data16
xor
sub
jae
dec
stos
js
xor
aaa
outsl
fidivrs
and
mov
out
sub
popf
dec
mov
adcl
fidivrs
or
pop
lods
pop
scas
mov
mov
lahf
sub
mov
and
fidivrs
scas
loop
fnstcw
xchg
or
sub
aaa
outsl
inc
inc
xchg
rcr
mov
outsb
repz
js
jns
out
insb
sub
fcomp
push
pop
jge
dec
fwait
aaa
outsl
fsubp
lods
sbb
push
out
int
decb
ljmp
int
dec
lret
pop
pop
popf
dec
cltd
paddusw
aam
sub
fdivrl
sbb
aas
xor
lahf
jg
mov
jecxz
jno
push
dec
sahf
cld
cld
stc
repz
cld
sub
rorl
inc
inc
dec
xlat
lahf
aas
jg
clc
dec
xor
arpl
mov
jnp
stc
repz
jnp
jnp
push
test
aad
or
mov
push
and
repz
and
xlat
sub
mov
lret
stos
aas
jg
cld
jecxz
daa
and
and
cmp
call
repz
lahf
or
or
sub
adcb
inc
xlat
inc
pop
mov
fmull
lock
and
lahf
aas
jg
xchg
push
loope
or
testl
iret
outsb
add
fcmovne
fimull
xlat
ret
fwait
mov
jg
cld
out
jne
arpl
inc
pop
mov
xor
inc
and
stc
add
xlat
out
push
sbb
mov
fidivrs
int3
xor
jb
cmp
cmp
jb
test
xor
lret
cmpsl
fstp
cmp
rcrl
jge
sbb
mov
repnz
sbb
and
jmp
out
sub
ret
lret
push
cmp
dec
aad
aaa
outsl
fidivrs
adc
cmpxchg
int
jbe
or
mov
adc
push
pop
mov
adc
or
xchg
out
fwait
aaa
inc
or
stc
cli
fisttps
jns
mov
in
imul
dec
mov
aaa
outsl
rol
or
cmc
fisubl
or
mov
pop
shrl
xchg
and
in
fwait
cmp
aaa
outsl
fidivrs
pop
loop
aas
mov
in
ljmp
dec
mov
in
push
push
and
xchg
mov
mov
sbb
mov
inc
aaa
outsl
fidivrs
sbbl
scas
mov
lahf
or
xchg
repz
fwait
arpl
xor
ret
mov
jl
enter
jns
int3
cmp
cli
inc
stos
pop
pop
push
push
adc
aaa
sub
dec
mov
add
xor
and
add
jl
lahf
std
fistpl
and
outsl
fidivrs
cmp
pop
mov
and
rorl
addl
xor
mov
lahf
mov
jp
add
aam
mov
es
negl
aaa
outsl
fimuls
dec
imul
or
fdiv
mov
fidivrs
sub
iret
lahf
aas
jg
fistps
mov
inc
xchg
sbbl
int
mov
stc
repz
pushf
or
xlat
cs
test
jecxz
and
jo
aas
ljmp
mov
xchg
pop
rcrl
enter
ljmp
int
ja
stos
mov
enter
push
sub
or
call
fidivl
outsb
mov
insb
mov
test
scas
and
loopne
xor
repz
mov
fists
clc
ficoms
bswap
sbb
divl
stos
dec
mov
out
fwait
popf
or
xchg
xchg
mov
push
push
push
dec
or
mov
dec
cmp
repz
test
inc
inc
dec
pop
movl
xlat
jo
jg
cld
scas
cmp
jecxz
dec
mov
std
lahf
jg
and
cmp
fimuls
stc
repz
ret
add
xchg
aad
lret
mov
cld
outsb
fldcw
mov
daa
inc
lcall
xchg
outsl
fidivrs
daa
loopne
sahf
testb
cmp
int
aaa
mov
dec
testl
mov
scas
es
imul
ret
fwait
aaa
outsl
cmp
push
push
insl
mov
repz
add
inc
cmp
inc
je
lock
fwait
aaa
outsl
faddp
mov
imul
gs
mov
out
pop
mov
push
xchg
or
mov
clc
or
and
cs
adc
and
xchg
inc
pushf
push
stc
repz
cmpsb
pop
push
in
adc
xchg
xchg
sbb
rorl
cld
cld
push
ror
sub
icebp
dec
call
out
push
in
mov
cmp
clc
pop
mov
repnz
cvttps2pi
xchg
xor
jg
stos
jns
out
addr16
js
pop
and
ds
dec
xor
fidivrs
sub
aaa
hlt
cmpb
jl
xchg
repz
fwait
out
mov
mov
mov
outsl
fidivrs
call
adc
adc
int
aaa
outsb
out
loopne
sbb
mov
push
mov
fidivrs
inc
and
loopne
mov
inc
outsl
dec
in
sahf
push
stos
cmp
jle
or
jae
in
lcall
fcompl
pusha
in
and
pop
movsb
jae
push
lret
out
lahf
jbe
in
rcll
fsubs
sbbb
cld
stc
sbb
loope
sbb
call
jne
jne,pn
iret
lahf
aas
repz
testl
orb
pop
mov
inc
push
iret
lahf
aas
jg
pop
jne
xlat
lret
lea
mov
in
repz
outsl
and
pop
lods
imul
imul
mov
dec
cmc
outsl
ljmp
jns
out
mov
cltd
cwtl
jae
nop
or
daa
aaa
outsl
fidivrs
stos
mov
inc
mov
int
mov
push
sbb
jnp
rorb
jo
outsl
fidivrs
xor
jns
jne
cmc
loope
out
fwait
aaa
push
adc
pop
adc
fidivrs
push
test
fsubrs
outsb
cmp
jle
lods
fnsave
adc
call
xchg
insb
stos
mov
jns
push
iret
mov
cmp
rolb
shrb
xor
lahf
xlat
test
xor
aaa
lea
std
xchg
fidivrs
lods
xchg
or
sub
std
lcall
aaa
outsl
add
mov
repz
pop
mov
mov
outsl
fiadds
jl
mov
pop
std
push
fisttpll
xlat
inc
out
fwait
aaa
xchg
mov
pop
repnz
aaa
mov
pop
fidivrs
lcall
popa
pop
push
cld
jecxz
fwait
aaa
outsl
adc
insl
jb
test
mov
shrb
jmp
jns
out
lea
nop
ja
popa
leave
push
movsb
jae
aaa
outsl
fisubs
pop
dec
out
xor
out
sarl
out
cmp
mov
inc
xchg
add
outsl
or
outsl
fidivrs
loopne
icebp
pop
adc
jle
jl
and
adc
nopl
fisubrl
repz
pushw
pop
jae
repz
jg
cld
stc
es
loopne
sbb
push
mov
xorl
xchg
mov
jb
imul
push
imul
scas
cmp
sub
iret
lahf
aas
decb
icebp
pop
pop
jb
ret
scas
cld
stc
repz
repz
lret
push
and
mov
jb
fs
dec
push
mov
xor
jg
cld
mov
test
cmc
arpl
sti
scas
fwait
out
lahf
aas
pusha
into
aas
std
adc
je
xchg
sarb
adc
inc
loopne
and
inc
ss
cmp
test
popa
jns
insl
iret
cld
stc
repz
pop
mov
and
fstpt
aas
jg
jl
sub
in
insl
fnsave
cmc
data16
stc
repz
mov
sbb
out
mov
in
inc
jle
cld
movsb
pop
push
inc
mov
inc
sbb
mov
adc
pop
mov
or
je
xchg
xor
aaa
outsl
fdivrp
scas
adc
inc
sub
mov
insb
jns
out
stos
xchg
and
mov
xorb
fidivrs
and
clc
sub
sti
call
jne
dec
pop
jmp
lods
out
repz
fs
mov
repnz
aaa
outsl
fidivrs
jnp
rorl
lcall
inc
fs
mov
dec
ljmp
xchg
aas
aaa
xor
loope
fwait
jge
insl
dec
xor
cld
stc
mov
cmp
and
add
out
lahf
aas
jno
dec
add
cmp
cld
stc
repz
aad
jo
push
push
jle
loop
inc
and
sub
lds
aaa
jns
aaa
cmpb
and
sub
push
lock
and
sbb
flds
push
sbb
aaa
outsl
lods
mov
pop
mov
push
out
mov
mov
filds
adc
dec
in
fisttps
aaa
outsl
fidivs
add
adc
jns
out
and
xchg
inc
adc
aaa
outsl
fidivrs
stos
pop
ljmp
push
icebp
enter
inc
pop
xor
jae
sahf
add
mov
lock
repz
inc
dec
aas
jle
mov
and
popa
mov
scas
outsl
fidivrs
xchg
inc
or
push
cmpsl
loope
aam
int
aaa
mov
out
popa
loopne
repz
stc
icebp
test
notl
decl
loop
adc
inc
in
aaa
and
loop
pop
jo
xchg
xchg
dec
mov
mov
aas
jg
mov
sub
jl
jbe
aad
or
mov
jns
outsb
pop
out
aas
ljmp
xchg
aas
test
sbb
pop
dec
stos
mov
mov
fidivrl
inc
jg
out
fwait
aaa
pop
mov
push
insb
lret
outsl
mov
enter
mov
hlt
sbb
or
stc
repz
test
push
cmp
mov
jne
jno
setae
mov
icebp
imul
mov
inc
stc
repz
add
inc
push
popf
mov
divl
cld
icebp
mov
je
sub
arpl
repz
lahf
cmpsl
or
mov
xchg
or
ja
pop
popa
pop
xchg
adc
out
aaa
outsl
fidivrs
sbb
xorl
ljmp
aam
jge
push
iret
fsubl
mov
out
lahf
aas
cli
mulb
push
repz
and
inc
fwait
lods
pop
cld
stc
repz
pusha
ror
xor
dec
fsubrl
jb
push
or
inc
clc
iret
lahf
aas
jg
mov
loope
dec
loopne
xchg
adc
cld
stc
enter
fidivl
into
mov
adc
sbb
aas
jg
dec
pop
jno
leave
enter
jbe
daa
cld
stc
repz
iret
sbb
loopne
test
sbb
lahf
aas
jg
push
adc
cmp
inc
pusha
and
add
dec
lahf
pushf
mov
mov
dec
insb
fstl
pop
dec
or
aaa
outsl
fidivs
in
stos
stos
bound
and
out
mov
sbb
mov
repz
cmp
pusha
insb
xchg
in
pop
in
scas
fnstsw
aas
jg
jb
add
lret
into
dec
mov
stc
repz
es
cmp
jne
test
jg
call
ds
xchg
out
inc
xchg
mov
imull
outsl
fidivrs
or
sbb
push
inc
mov
out
fwait
aaa
adc
aam
insl
inc
sbb
inc
negb
jns
dec
push
sarb
fs
jae
inc
movsl
jbe
cmp
inc
outsl
out
push
addl
xchg
xchg
xchg
jb
leave
dec
pop
mov
outsl
fidivrs
int3
lock
ljmp
out
fwait
push
outsl
pop
arpl
jp
aam
lock
cld
sti
mov
lret
rep
jmp
and
daa
or
repz
cmp
lods
sub
out
movsl
loop
loop
xchg
dec
outsl
fidivrs
push
push
clc
cmpsb
popa
movsl
cmp
jno
int
int
aaa
or
push
aas
jg
cmc
cmp
mov
mov
lahf
sbbl
cli
in
loope
gs
dec
cld
stc
cvtpi2ps
or
sub
sbb
das
pop
push
jle
dec
scas
adc
jne
andb
je
jns
out
push
add
inc
mov
push
xchg
sbb
aaa
outsl
fidivrs
dec
fdivrl
cwtl
inc
les
jo
dec
out
fwait
lahf
pushf
xor
arpl
dec
lret
push
jns
mov
push
inc
push
dec
pop
add
int
aaa
outsl
int
pop
mov
pop
cmp
repz
sti
cwtl
ja
push
es
call
fwait
aaa
outsl
fisubrs
aad
aaa
stc
cmp
sbb
jns
out
shr
xchg
ret
inc
popf
jmp
pop
fnstcw
das
jb
pop
adc
pop
cld
stc
repz
lock
aaa
addb
hlt
popa
mov
bound
ss
pop
fnstcw
push
pushf
adc
add
cld
stc
inc
stc
aam
and
dec
cmp
aas
jg
adc
cmp
fdivrl
stc
repz
mov
adc
or
aas
jg
push
xchg
test
out
mov
adc
shlb
jle
pushf
push
push
mov
add
mov
out
jmp
adcl
fidivrs
or
fcoml
cmp
daa
jp
out
iret
sbb
jg
mov
in
and
repz
subl
stc
adc
ret
shrb
mov
mov
dec
sbb
lock
pop
test
out
scas
pop
rol
mov
sti
jne
mov
fmull
or
and
xor
cltd
sbb
aam
mov
aaa
outsl
fidivrs
aaa
aaa
out
les
ja
pop
dec
and
out
fwait
shrl
popa
inc
fwait
or
sub
inc
jmp
fidivrs
mov
sub
int
out
fwait
aaa
pop
dec
out
cltd
clc
push
ret
push
ds
repz
or
add
in
push
mov
inc
outsl
and
add
or
sahf
pop
push
dec
xchg
xlat
push
jl
repz
xchg
sbb
pop
fnstenv
mov
adc
popf
and
out
fwait
out
adc
adc
push
jle
dec
outsl
fidivrs
ret
mov
mov
rcrl
and
flds
sahf
jg
xchg
fidivrs
mov
das
push
pop
or
stc
mov
sub
fwait
aaa
outsl
xor
cmp
mov
mov
das
sub
out
mov
dec
mov
cmp
pop
daa
lds
pop
jb
xchg
iret
mov
push
mov
aas
jg
icebp
cld
sub
lea
les
and
repz
lahf
inc
xor
inc
test
std
xchg
cld
stc
mov
cmp
lea
jne
inc
inc
adc
iret
lahf
aas
aas
mov
lds
out
lock
pop
cmp
in
in
test
out
xor
mov
jl
sub
pop
stos
push
sbb
xchg
xchg
test
add
imul
jns
jge
in
push
lret
sti
mov
and
dec
xor
push
idiv
or
push
mov
sbb
repz
bound
mov
mov
jl
sub
outsl
fdivp
mov
outsb
add
int
aaa
rorl
aas
lcall
fistps
repz
sub
sub
mov
push
call
rorb
xorb
es
mov
mov
fwait
aaa
outsl
mov
out
inc
add
out
icebp
enter
mov
xchg
mov
jns
jl
jae
or
lods
lcall
aaa
outsl
and
cmc
bound
or
jp
pushf
mov
call
xchg
or
fwait
aaa
outsl
fimuls
xchg
daa
mov
decb
jns
out
xchg
outsb
fwait
mov
mov
adc
fidivrs
jp
adc
repnz
out
fwait
jns
adc
insb
push
ret
aas
cli
lcall
ljmp
xor
pop
fcmovne
pop
xchg
cld
daa
push
stc
repz
mov
xchg
arpl
xor
lahf
aas
jg
and
jo
mov
add
andl
lea
aas
jg
and
push
adc
hlt
in
dec
out
sub
lret
outsl
fidivrs
mov
lcall
mov
daa
pop
cld
mov
dec
arpl
bound
repz
jo
mov
mov
cmp
jbe
xor
fidivrs
cmpsl
out
out
and
outsl
shl
in
repnz
fwait
xchg
sub
mov
stc
clc
jns
mov
fisubrs
pop
mov
fidivrs
mov
shl
stos
dec
xor
fstpt
popa
aaa
dec
test
add
outsl
fidivrs
xor
or
xorl
fwait
aaa
sbb
ficoml
mov
xor
xchg
scas
imul
jmp
test
outsl
fdivrp
lret
mov
jle
xor
in
mov
out
fwait
lcall
push
sbb
cwtl
fldt
mov
mov
imul
dec
out
fwait
aaa
cmp
pop
fisttps
jp
mov
subb
xchg
cmc
adc
mov
outsl
scas
fimull
sub
adc
daa
imulb
iret
jecxz
arpl
out
fwait
and
loopne
inc
scas
or
mov
jg
sub
sbb
lcall
inc
pop
lahf
adc
jb
ljmp
lret
lret
pop
sarl
cmp
push
int
aaa
outsl
xor
daa
jmp
nop
sub
mov
repnz
lods
pushl
jle
fidivrs
dec
pop
mov
fs
std
sub
fwait
aaa
outsl
jg
jge
sub
test
mov
adc
xor
movsb
aas
fsubr
dec
fwait
aaa
outsl
fimuls
sahf
mov
das
cltd
std
mov
and
out
mov
and
add
popf
sub
cmp
aaa
outsl
fidivrs
out
scas
addr16
inc
mov
sub
out
rclb
hlt
xchg
stos
aas
clc
enter
or
xchg
pop
dec
lea
push
scas
in
iret
lahf
xchg
mov
sarb
jae
cld
jmp
mov
fucomp
ds
dec
jg,pt
xchg
add
out
fwait
aaa
out
into
dec
jo
and
lock
fnstcw
movsb
pop
or
shll
xor
rclb
fwait
cld
int
pop
jne
int
push
push
or
gs
dec
ud1
out
sbb
pop
pop
inc
sbb
popa
inc
sarb
cmp
cld
xor
cwtl
and
mov
inc
fidivrs
stc
mov
leave
xchg
int
aaa
outsl
sub
pop
popa
movsb
js
mov
cmpl
call
push
mov
jae
pop
adc
sub
xchg
sub
xchg
out
sub
jg
cld
mov
inc
ss
out
sub
mov
out
lahf
sti
fmull
xchg
xchg
ret
jle
pop
addr16
cld
stc
test
popa
fbstp
cmc
pop
mov
fidivrs
jle
iret
lahf
aas
and
test
sbbb
sbb
movl
mov
addl
nop
or
movsb
ffreep
jo
aaa
ja
jg
cld
arpl
cwtl
mov
insb
mov
out
lahf
mov
jl
cmp
jg
std
in
jmp
test
mov
xchg
mov
xchg
inc
lahf
jae
ljmp
xchg
dec
shrb
pop
idivl
cld
stc
imull
mov
ds
cld
mov
fcomip
dec
in
sub
sbb
lahf
aas
jg
fdivp
out
push
fmul
push
jg
mov
repz
pop
gs
and
push
or
sbb
dec
mov
aas
stc
cld
leave
fwait
arpl
mov
ss
insl
push
idivl
cld
stc
cmp
pop
pushf
xchg
lods
out
hlt
in
stc
pop
or
aas
sbbb
jg
cld
or
add
dec
cmp
cmp
in
lahf
sahf
adc
jecxz
aad
adc
pop
fmul
or
mov
sub
cld
stc
repz
push
daa
dec
xor
adc
test
loop
aas
jg
rcrb
call
xchg
mov
out
fdivr
mov
insl
cwtl
test
cmp
mov
into
cld
mov
repnz
std
stc
ret
and
scas
jo
sti
ret
adc
fs
jg
cld
je
lock
xor
jle
dec
data16
add
xchg
lahf
ljmp
mov
cmp
imul
push
ljmp
aam
dec
jmp
std
in
mov
scas
les
mov
bndldx
mov
pop
pop
sar
repz
pop
test
or
jg
cld
in
add
inc
jmp
ret
gs
mov
jmp
push
mov
repz
enter
dec
push
mov
iret
lahf
jg
inc
and
ret
dec
cmp
repz
je
cmp
xlat
sahf
sub
add
imul
iret
insb
fdivrp
mov
dec
popf
cmp
push
out
enter
movsb
dec
imul
cld
stc
out
leave
lcall
aas
les
mov
iret
lahf
aas
mov
sub
xchg
cld
stc
repz
imul
push
push
jae
mov
cmp
sbb
in
mov
sbb
inc
nop
aas
and
scas
adc
fmuls
outsl
add
aaa
jecxz
and
mov
out
and
repz
cmp
push
shll
xor
jmp
lea
fdivrl
jo
dec
mov
fwait
aaa
outsl
fidivs
int
notb
mov
fidivs
sahf
mov
add
adc
repnz
dec
mov
outsl
fidivrs
mov
sbb
pop
jecxz
xchg
lcall
push
aaa
jmp
int3
pop
test
sub
outsl
fidivrs
jo
pop
arpl
ds
dec
adc
push
out
fwait
aaa
lock
pop
stos
out
in
mov
je
stos
aas
pop
clc
push
cmp
fsubs
fwait
aaa
outsl
shl
outsl
jnp
inc
xor
sbb
lock
sbb
in
imul
adcb
out
jb
into
outsl
fidivrs
sub
insl
mov
stc
pop
pop
sbb
mov
pop
dec
mov
ss
movb
inc
xchg
outsl
stc
xor
aaa
outsl
fisubs
push
notb
fwait
push
xor
test
and
mov
in
inc
leave
inc
fisubrs
gs
cmp
hlt
sub
mov
cmp
outsl
ficomps
pop
cmpl
adc
andl
jns
or
test
and
lods
sbb
shl
int
aaa
jle
aam
sbb
xchg
pusha
jg
mov
jp
dec
push
notl
ds
add
jecxz
sarb
fwait
aaa
outsl
mov
jle
test
push
mov
push
xor
ljmp
add
mov
pop
fisubl
pop
mov
and
or
ret
sahf
inc
add
fwait
in
push
rol
mov
dec
pop
into
push
outsl
fidivrs
pusha
dec
or
int
mov
loopne
xchg
out
aad
aaa
push
push
jg
sbb
push
lock
inc
push
xchg
push
and
sub
mov
outsl
fidivrs
dec
in
or
in
int
test
cwtl
pop
ja
orb
mov
arpl
data16
aaa
add
into
test
pop
lahf
loopne
push
sbb
xchg
mov
and
pushf
xor
aad
bswap
lahf
aas
jg
pusha
shlb
addr16
gs
in
stos
sahf
lret
repnz
pop
jne
mov
dec
rclb
mov
int
fisubs
nop
test
movsl
or
cs
lret
iret
cwtl
inc
rcrl
mov
jg
cld
adc
nopl
jl
inc
loope
aam
mov
mov
lahf
sbb
shl
testb
cld
in
fistpll
icebp
jae
aad
mov
xchg
mov
out
cmpsb
sarl
lahf
fisubrl
pop
cmp
movsb
out
fwait
aaa
sbb
pop
movsb
lea
dec
fidivrs
inc
in
jnp
testl
fwait
aaa
outsl
add
fisttpll
movsb
pop
lock
push
dec
sbb
out
add
cs
push
sbb
dec
sbbb
repz
pop
lds
fdivrs
push
test
out
fdivrs
loop
cmp
movsl
mov
jp
into
aaa
outsl
fidivrs
fsubr
sbb
mov
repz
fwait
mov
rorl
push
mov
xor
jns
test
sub
loop
ja
loopnew
fwait
aaa
xchg
enter
in
movsb
jo
es
pop
fsubp
xor
fidivrs
lahf
sahf
jae
or
loop
sbb
fwait
aaa
outsl
sti
cmp
or
jp
out
daa
and
repz
dec
mov
iret
lahf
aas
insl
lret
hlt
lcall
mov
sbb
cmp
setnp
outsl
fidivs
lret
pop
cmpl
fistpll
mov
dec
push
lock
mov
sahf
imul
pop
xchg
mov
int
aaa
decl
sub
aam
lock
repnz
push
mov
xchg
testl
pop
cmp
add
loope
cmp
ljmp
loope
pop
mov
shll
std
das
jge
iret
and
cmp
cld
sub
lret
lahf
mov
jo
repz
shl
enter
cld
sahf
push
and
and
mov
fwait
sub
ret
inc
sub
xchg
dec
das
fldenv
pop
out
fwait
aaa
lahf
xor
ds
dec
outsl
test
cld
fidivrs
mov
dec
out
popf
and
lock
cmp
int
aaa
outsl
or
data16
adc
mov
jmp
stos
shlb
mov
aaa
outsl
fiadds
dec
js
js
push
mov
out
outsb
dec
lods
les
push
push
outsl
fidivrs
push
pop
pop
sbb
out
fwait
aaa
shlb
jecxz
shrb
cmp
jns
jo
orl
cmp
push
daa
pop
inc
adc
ret
subl
scas
jecxz
pop
maskmovq
enter
out
enter
mov
aas
adc
outsl
fiadds
jae
mov
mov
or
mov
fwait
outsl
scas
cmp
nop
enter
mov
cwtl
cmp
insb
jb
jns
movsl
dec
mov
int
aaa
lcall
push
movsb
mov
mov
mov
mov
aas
add
sub
int
aaa
outsl
jecxz
cmp
lea
push
jbe
jb
out
and
ja
pop
lss
mov
hlt
rolb
std
jmp
aaa
outsl
dec
sbb
pop
jg
fimuls
jecxz
or
jne
ljmp
cs
push
xor
daa
jg
or
aas
jp
jg
cld
stc
jns
inc
add
sbb
lret
lahf
aas
jns
aad
sti
jg
dec
push
bnd
decl
roll
push
push
lahf
aaa
pop
enter
jmp
ret
jg
cmp
dec
add
aam
cmpsb
dec
in
or
out
lahf
gs
in
cmpsl
pushf
dec
data16
dec
jg
cld
stc
mov
lret
movsl
lods
nop
cmp
daa
out
lahf
aas
sub
outsl
xor
es
sbb
cld
stc
repz
sub
rolb
push
mov
cmpsl
xchg
mov
pushf
mov
jge
repz
loope
cmpl
bound
hlt
repz
lahf
inc
test
sub
jg
cld
stc
int3
xorl
sbb
mov
notl
xchg
lahf
aas
cmp
cmp
repz
xlat
lcall
test
clc
adc
pop
jbe
cld
stc
repnz
cmovbe
pusha
sub
xor
mov
or
sahf
jns
jbe,pt
out
repz
out
sub
fwait
mov
aas
and
jbe
aas
jg
enter
sbb
push
cmp
sub
cmpl
dec
pop
push
into
popw
fimull
lea
pop
inc
inc
inc
lcall
jne
lock
dec
or
sbb
in
outsb
jmp
inc
pop
inc
pop
pop
add
ret
xor
rclb
jne
lock
mov
ficompl
mov
xchg
fwait
aaa
outsl
fidivrs
adc
stos
dec
repz
xchg
xor
or
sub
leave
jne
jb
aaa
outsl
fidivrs
jle
cmp
add
out
fwait
aad
mov
jne
mov
in
cld
jnp
cmpsb
repz
bound
popa
out
pop
mov
and
daa
neg
pop
sub
xorb
pop
jno
xor
testl
sbb
adc
rcl
inc
push
jge
jns
mov
mov
iret
mov
test
aaa
outsl
fidivrs
inc
test
adcl
fwait
mov
repz
insb
and
fidivrs
fmuls
jne
cmpsb
inc
leave
pop
cld
mov
aaa
aas
ja
das
repz
jno
dec
jns
scas
call
pop
fdiv
or
ljmp
mov
mov
dec
cmp
rcrb
sub
mov
or
pop
aas
sub
mov
loop
lods
out
incl
out
int
aaa
outsl
lcall
xor
mov
push
add
ret
add
mov
xor
outsl
aas
pop
jb
mov
jge
fdivrl
out
mov
sbb
daa
insl
sbb
rolb
outsl
fidivrs
out
push
out
int
in
jbe
mov
fwait
pop
push
mov
pop
jb
mov
outsb
fidivrs
mul
inc
pop
add
outsb
push
hlt
and
out
mov
pop
sub
xchg
sar
popa
aad
or
scas
lahf
aas
jg
jnp
xor
mov
lock
repz
loopne,pn
iret
popa
sahf
dec
rcl
sbb
aas
jg
cld
clc
aaa
icebp
pop
jge
jbe
fcomip
mov
push
in
lahf
insb
daa
out
loopne
mov
or
negl
loope
test
fwait
aaa
outsl
leave
sub
daa
mov
test
out
mov
xor
ja
pop
mov
aaa
mov
mov
insl
mov
test
xor
jge
cltd
int
aaa
outsl
clc
push
in
cmpsl
in
mov
in
cmpsb
sub
add
ds
aaa
outsl
fisubrs
repz
cmp
jae
add
jl
repz
jmp
inc
lds
sub
jae
pusha
xor
sub
outsl
fidivrs
inc
arpl
sti
xchg
in
int
sbb
add
xor
sub
cld
jnp
stc
out
xlat
loop
jecxz
into
movsb
or
iret
lahf
aas
xor
rolb
mov
stc
repz
adc
adc
pop
fstpl
mov
rclb
mov
loopne
in
out
ret
iret
insb
push
add
jns
mov
lods
loopne
adc
dec
sub
insb
sbb
into
inc
loop
mov
mov
cmp
cmpsb
xor
pop
mov
pop
aaa
outsl
fidivrs
sbb
pop
pop
adc
push
pop
dec
repz
enter
sbb
or
popf
dec
into
dec
xchg
xchg
stc
stc
out
xchg
dec
and
adc
in
jmp
lahf
aas
ljmp
jne
imul
in
in
mov
xchg
jno
cmp
cmpsl
mov
outsb
jnp
lahf
aas
jg
mov
loope
lcall
mov
stos
cmp
out
in
pop
scas
aad
repnz
imul
jg
mov
arpl
movb
repz
cmp
push
mov
daa
mov
xchg
dec
or
pusha
inc
sahf
jne
and
jne
fdivrs
movsb
clc
mov
idivl
push
dec
nop
or
add
push
sbbb
cmc
rclb
push
xlat
sahf
data16
out
sub
push
movsl
xor
xchg
mov
add
mov
adc
pop
or
xlat
out
fwait
ja
mov
fs
popf
mov
movsb
mov
fnstcw
mov
cmc
or
jne
out
pop
push
push
pop
inc
push
stc
and
cld
stc
sub
xchg
ja
adc
or
lahf
aas
push
and
push
out
dec
mov
xor
adc
int3
fwait
cmp
mov
nop
fstl
mov
fists
int
aaa
xor
cmp
mov
cwtl
jae
fidivrs
xchg
xor
leave
xchg
subb
dec
and
inc
aad
cmp
mov
cld
jecxz
ljmp
jecxz
mov
test
out
andb
lahf
out
or
sbb
repz
fwait
leave
out
es
and
pop
mov
fidivrs
mov
mov
lods
xchg
rclb
cld
inc
add
pop
push
cld
stos
daa
jg
add
add
clc
not
pop
mov
jg
setbe
and
out
les
lahf
jg
inc
inc
cmp
and
aas
mov
jle
stc
repz
dec
and
and
repz
aas
daa
ss
pop
jnp
mov
pop
mov
pop
inc
sub
ds
xlat
xchg
sti
inc
ret
fwait
aaa
outsl
btc
adc
xchg
fs
mov
inc
call
dec
repnz
loopne
sbb
mov
jp
enter
lock
aaa
cmp
out
lods
stos
lea
push
ljmp
movsl
repnz
outsl
fidivrs
std
rcrl
push
mov
in
push
mov
fwait
pop
dec
cmp
cmp
ficoms
cmp
fwait
or
ja
mov
fwait
aaa
outsl
jle
mov
aas
pop
sbb
int
das
sub
mov
mov
aas
jg
dec
out
mov
mov
sub
cmp
out
xchg
sub
jo
inc
cld
in
in
push
scas
addr16
mov
repz
out
fcompl
xor
subl
mov
add
sub
mov
pop
mov
cltd
fs
sub
push
fsubs
int3
fstl
fs
push
test
adc
sarb
imul
ret
pop
andb
pop
cs
in
iret
or
inc
push
bound
scas
lret
xor
lock
or
aam
ficoms
cld
stc
jno
ret
ficomps
sub
stc
repnz
iret
lahf
aas
pusha
xchg
aaa
lcall
mov
push
pop
dec
pop
rcrb
fidivrs
push
and
lahf
push
mov
mov
cli
xchg
js,pn
xor
mov
lds
push
cmc
and
push
push
xchg
int
aaa
add
aad
sub
mov
lea
mov
repz
int3
push
sub
aaa
out
sub
add
push
xor
jne
int
addr16
pop
mov
aam
pop
sbb
stc
notl
jmp
jge
xor
setg
jg
rorb
leave
or
lret
push
test
sub
xchg
das
cmc
arpl
repz
lahf
sbb
xor
xchg
mov
jge
jnp
cld
stc
pusha
fimull
xchg
inc
pop
popf
xor
pop
jne
iret
lahf
aas
pop
push
clc
fcomi
sarb
data16
mov
cld
stc
repz
test
push
repz
adc
xor
and
jg
daa
bound
test
iret
sahf
cltd
int
ja
cmpsl
inc
fiaddl
data16
ljmp
xor
loope
add
add
je
aaa
outsl
fiadds
aaa
adc
inc
out
lea
xchg
int
cmpsl
adcl
jns
inc
xchg
cmpsl
hlt
into
cmp
mov
in
cs
call
aaa
test
xor
push
jne
loope
mov
cld
popa
xchg
out
stc
bound
iret
mov
addr16
cli
cs
fwait
pop
jg
cld
stc
jns
fsubr
scas
sbb
mov
mov
and
mov
insl
in
aas
out
mov
xor
or
pop
cld
stc
repz
es
sbb
adc
pop
imul
and
es
fisttpl
add
out
mov
mov
push
dec
das
or
sti
out
gs
repz
iret
enter
stos
mov
aas
xchg
rorb
stc
stc
repz
pop
dec
je
test
shlb
mov
cwtl
stc
pop
popa
mov
stos
fwait
aaa
outsl
fisubs
loopne
in
not
in
push
cld
fnstcw
out
iret
loopne
jle
out
dec
sbb
aaa
outsl
fidivrs
push
push
push
nop
test
ss
insb
cld
jmp
lcall
jecxz
and
lahf
aas
jg
aam
fsubrs
mov
xchg
adc
enter
xchg
mov
mov
mov
mov
dec
jg
lods
out
outsl
fidivrs
addl
out
fwait
aaa
and
inc
push
mov
out
je
lcall
mov
aas
outsb
fisttpll
daa
roll
or
dec
int
aaa
outsl
mov
xchg
inc
xchg
fs
insl
cmp
out
imulb
sbb
pop
dec
std
stc
repz
push
and
roll
jg
cld
ficomps
dec
cmpsb
movsl
cmp
cwtl
outsb
inc
repnz
lahf
inc
mov
mov
cmp
fildll
fidivrs
cld
decb
test
outsl
and
stos
loope
xchg
inc
lret
cmp
mov
and
cmp
aam
aaa
outsl
fisubrs
xchg
movsb
je
dec
push
jg
pslld
int
lahf
mov
push
pinsrw
int
out
cmp
addr16
iret
das
fisttpl
mov
xlat
ja
xchg
mov
int
aaa
outsl
sub
push
jge
xor
into
aas
jae
jns
out
sub
fcomps
repnz
dec
mov
sub
cmpsl
xchg
aaa
outsl
fisubrs
mov
xchg
xchg
xor
pusha
stc
repz
bound
pop
shrl
fmull
push
es
cltd
mov
cld
leave
push
insb
pop
in
fisubs
mov
outsl
mov
loopne
add
stos
xor
repz
fwait
inc
subb
je
push
add
inc
sbb
inc
fidivrs
jns
rcl
and
psubw
out
aaa
test
xor
stos
shll
inc
cld
sbb
rcl
and
out
data16
dec
int
cmc
sub
into
lahf
aas
jne
push
or
cmp
pop
stc
repz
frstor
cltd
pop
lahf
xor
jecxz
fisubrl
mov
mov
mov
daa
add
push
stc
xrelease
aam
insb
cmpsl
push
movsb
jnp
jl
xchg
or
push
cmp
popa
stos
cmp
out
fwait
aaa
lods
fildl
lods
pop
push
or
repz
movsl
push
mov
sbb
shld
mov
mov
mov
lcall
nop
fs
hlt
xchg
and
cmp
sbb
gs
imul
pop
pop
fmull
gs
mov
lods
pop
cmpsl
pop
mov
shlb
outsl
fiadds
inc
pop
jg
lcall
sbb
push
addb
lahf
aas
mov
sbb
scas
insl
fcmovb
jns
mov
inc
add
pusha
imul
sbb
and
push
rcl
repnz
into
enter
cmp
aaa
outsl
ficoms
mov
cmp
ljmp
ljmp
or
mov
repz
sub
adc
jae
xor
int
and
nop
rorl
mov
sbb
adc
xchg
aam
inc
lods
xlat
xchg
addr16
outsl
mov
push
xchg
push
sbbl
push
lret
ljmp
cli
cli
in
iret
nop
sub
arpl
pop
lds
fdivrl
rclb
adcb
xor
jg
cld
stc
push
lods
mov
mov
jb
mov
aas
sahf
cmp
pushf
fidivl
mov
cs
mov
jge
repnz
aaa
outsl
fisubs
icebp
mov
enter
std
pusha
popf
mov
fstl
orl
inc
lock
inc
or
mov
orl
jno
push
dec
sahf
cld
add
add
xchg
inc
and
icebp
mov
inc
dec
xlat
clc
dec
xor
or
xor
pop
or
and
xlat
add
xor
dec
and
enter
or
jnp
mov
shrl
test
xor
or
push
rorl
stos
sbb
mov
or
enter
lret
and
adcb
adc
cmp
jg
or
jne
scas
mov
aas
sbb
popl
lahf
sbb
xchg
mov
ja
ja
or
or
mov
ror
cmpsb
adc
sbb
adc
adc
test
or
nop
aas
jmp
mov
out
mov
hlt
mov
shl
int
push
or
fdivrl
outsl
dec
push
xchg
js
imul
pop
clc
adc
or
push
adc
lods
xchg
test
mov
fisttpl
scas
dec
rclb
imul
int
aaa
mov
scas
ficoml
shll
fidivrs
icebp
sbb
test
mov
adc
fwait
aaa
outsl
xchg
push
xorl
out
xchg
add
repz
lret
jl
cmp
xor
push
xor
fiadds
push
mov
cmp
push
dec
add
xchg
int
outsl
dec
or
lahf
aas
jg
jle
into
lods
mov
bnd
stc
repz
xchg
add
adc
mov
cmpsl
jg,pt
cld
fs
jno
jae
es
xor
inc
jg
aad
repnz
insl
cmp
shll
leave
lahf
aas
mov
and
pop
xor
mov
mov
lret
jge
xchg
repz
fwait
aaa
fidivs
fs
shll
jns
rcll
js
cmp
add
cs
fwait
aaa
outsl
add
add
mov
xor
fs
mov
xor
aad
inc
jge
aam
push
pushf
sub
fidivrs
pop
push
adc
lods
ljmp
and
std
mov
mov
ficompl
stc
stc
add
test
fidivrs
out
pop
pop
scas
adc
inc
out
mov
lret
rorl
pusha
pop
cmp
fwait
aaa
out
mov
repnz
cmp
adc
push
int3
or
push
xorb
shlb
mov
mov
add
outsl
ficoms
fcomps
xchg
or
enter
sbb
mov
sbb
outsl
ficoms
push
mov
sub
cmp
out
fwait
aaa
stos
cmp
pop
adc
xchg
fidivrs
jmp
inc
inc
pop
daa
inc
or
int
aaa
outsl
loop
jbe
mov
mov
push
into
cmp
repz
sbb
ret
adc
movsl
mov
push
in
lahf
jg
push
or
xchg
mov
sti
andl
xlat
int3
iret
jne
lahf
aas
or
jecxz
jecxz
inc
pop
mov
push
adc
scas
xor
or
push
je
fimuls
pusha
fbstp
dec
scas
sar
out
mov
mov
mov
outsl
subb
stc
js
and
mov
xchg
int3
add
mov
or
mov
xor
int3
adcl
sbb
dec
xchg
lcall
mov
pop
adc
das
nop
cld
bound
faddl
or
or
push
dec
test
lcall
sbb
push
push
add
add
adc
sbb
push
pop
push
clc
adc
rcll
push
add
lret
inc
aad
lret
cmpb
call
pop
add
add
xchg
push
pop
inc
add
outsl
add
mov
inc
add
stos
mov
in
sbb
add
stos
es
push
adc
dec
add
daa
sub
psraw
mov
pop
cmp
test
adc
outsb
out
push
or
mov
call
insb
xor
add
dec
mov
jb
mov
lret
add
addr16
arpl
push
cmpb
test
and
mov
mov
call
sbb
out
test
add
ss
test
mov
lret
ret
push
adc
add
sbb
adc
or
or
fistpl
inc
mov
lcall
xchg
bswap
push
or
fadds
cmpsb
sub
int
push
and
ficoml
dec
add
inc
add
shl
inc
adc
mov
fdivs
push
or
mov
rclb
aad
es
jmp
adc
sbb
push
and
sbb
rcrb
push
cmp
pop
jp
jne
pop
or
and
xchg
lock
mov
clc
adc
ljmp
add
xor
cmc
pop
sub
mov
mov
jp
jb
inc
mov
and
rolb
add
add
pop
cmp
xlat
sbb
jge
cmp
or
mov
adc
lea
lcall
fmuls
test
adc
sub
mov
push
ret
mov
push
lock
sub
and
into
push
xchg
pop
imul
or
addr16
push
shr
hlt
push
push
mov
inc
hlt
stos
stos
cli
dec
xor
xor
cwtl
sahf
xor
imulb
cmp
adc
pop
add
or
and
jmp
xor
pop
push
xchg
rcll
sbb
push
or
push
jge
add
jne
rcll
push
jo
mov
jo
pop
or
rclb
rcl
mov
pop
mov
adc
into
lcall
or
inc
push
inc
mov
sub
sbb
adc
add
test
enter
jp
push
stos
ror
add
or
cmp
sbb
jl
pop
inc
add
adc
mov
not
shll
pop
pop
inc
movsb
mov
mov
add
add
inc
xchg
push
dec
sbb
and
inc
inc
ljmp
pop
push
mov
pop
xlat
es
ret
inc
sarb
adc
mov
dec
aam
or
push
imul
adc
lret
mov
outsb
enter
mov
pop
cmp
sbb
pop
add
jge
pop
outsb
or
fcmovb
push
mov
xor
and
pusha
mov
fiadds
push
cmpsb
lods
test
or
arpl
pop
stos
icebp
add
fimuls
lock
push
in
add
test
push
or
add
xchg
sbb
roll
call
mov
adc
mov
xor
xchg
sbbb
mov
adc
rolb
and
pop
in
mov
lret
mov
dec
or
subb
sub
test
std
push
daa
test
xor
repnz
lds
int
sub
pop
add
adc
js
cmp
or
jne
adc
mov
xor
sbb
xchg
xchg
js
pop
pop
mov
add
inc
frstpm(287
push
out
add
pop
inc
and
push
stos
pmulhw
push
inc
ljmp
popf
arpl
mov
or
into
lret
adc
out
addl
cmp
movsb
mov
pop
adc
add
test
and
mov
or
adc
mov
iret
shl
mov
xchg
or
fstpl
xor
loop
shlb
ret
add
jno
arpl
xchg
rcll
mov
test
adc
sti
add
sub
jnp
mov
xor
jb
add
add
xor
pushf
add
push
inc
call
and
adc
push
mov
dec
or
imul
pop
loop
les
lret
cmpsb
inc
or
cmp
call
dec
sbb
movsl
adc
mov
stos
roll
hlt
sbb
sbb
test
mov
inc
insl
and
loopne
mov
sarb
pushf
sarl
or
mov
ret
push
fisttps
cmpsb
sbb
jns
cli
add
dec
push
cmp
adc
loopw
popa
inc
fdivs
jg
lret
xor
shrl
sbb
cli
and
mov
xor
in
cmc
lock
movsb
lahf
rorl
adc
lcall
ret
add
lds
add
pop
and
inc
mov
clc
and
rol
pop
sbb
mov
jbe
popl
and
push
adc
add
push
inc
jnp
insl
and
int
mov
loope
jmp
lock
add
inc
xor
add
test
enter
add
mov
dec
jp
inc
ja
add
in
lock
mov
xchg
aam
push
in
lods
add
xor
popa
pusha
stos
icebp
ljmp
cld
sbb
xor
push
adc
cwtl
adc
js
testb
and
cmc
mov
push
xor
jb
nop
je
stos
lods
test
sti
inc
lock
sub
incb
das
or
pop
je
cmp
pop
xchg
lcall
push
mov
enter
sub
in
jb
js
or
or
mov
mov
xchg
cmc
mov
or
cmp
push
sahf
and
sbb
out
test
or
or
shrb
aaa
sub
mov
inc
xchg
push
xchg
scas
inc
jns
sbb
jbe
jnp
dec
arpl
dec
aam
and
or
inc
push
xorb
jo
jnp
ret
sbb
rorl
adc
shl
andl
sub
mov
xor
repnz
pop
add
ds
std
or
stos
inc
mov
inc
stos
cwtl
add
ljmp
lea
leave
dec
inc
inc
and
clc
test
sub
neg
or
xor
xor
sub
xor
mov
adc
adc
sti
add
dec
dec
add
sbb
cli
fisubl
mov
dec
in
shll
test
sub
hlt
xor
cwtl
js
out
jecxz
imull
xchg
pop
push
sub
or
inc
lods
ret
lock
out
or
mov
test
and
ret
xor
xor
inc
xchg
sbb
fisubrs
cli
pop
adc
data16
mov
lods
lcall
inc
dec
sarb
popf
or
push
sbb
xor
test
push
shrl
push
fs
mov
or
add
jg
cltd
mov
or
dec
in
sub
cmp
add
cmp
add
lcall
or
clc
xor
cmp
rcll
push
dec
dec
add
push
cmp
movsl
test
lret
push
sub
push
sub
xlat
add
mov
mov
mov
push
cwtl
push
andl
lret
cmpsl
aam
add
mov
mov
adc
push
xor
sbb
rolb
int
jnp
push
sahf
arpl
sub
add
adcl
scas
ljmp
test
pushf
cmp
add
fcmovb
push
pop
push
xor
and
add
lret
mov
jnp
or
cwtl
rcrb
sub
movsl
dec
mov
adc
ss
xchg
pop
insl
test
leave
mov
nop
stos
add
or
adc
test
jg
mov
mov
inc
ss
adcl
push
xchg
popa
rcrl
pop
mov
push
ljmp
fadds
in
sub
adc
or
orl
push
fsubs
or
add
mov
rol
mov
cmp
shll
lea
push
popa
add
js
push
push
xchg
imul
pusha
into
mov
ljmp
lcall
add
fsubs
mov
and
lret
faddl
pop
and
push
jnp
pop
pop
test
and
push
mov
sub
inc
je
mov
cmp
in
push
sarb
push
xor
stos
shll
ret
scas
and
or
sahf
sbbl
lods
mov
cmp
ss
call
xlat
jecxz
pop
repnz
add
addl
repnz
or
data16
dec
sbb
add
cmpsl
pop
pop
mov
pop
pop
ljmp
fisttps
add
adc
xor
mov
jne
add
mov
inc
xchg
cmp
sarb
cld
bound
or
mov
jo
jo
les
cmp
dec
icebp
sub
cmpl
shlb
mov
shll
lea
sbb
cmpsb
push
addr16
sbb
inc
shrl
aaa
add
push
repnz
xor
mov
push
js
insl
rorl
and
mov
addr16
repz
inc
mov
nop
dec
cmp
push
jne
sbbb
pop
scas
mov
adc
push
rolb
adc
mov
or
sub
mov
loope
and
or
and
enter
test
adc
bound
jne
fists
xor
add
and
sbb
inc
or
jbe
mov
sub
loopne
inc
inc
movsb
in
inc
and
and
mov
dec
roll
int
jbe
sub
out
or
mov
push
add
sbb
sub
or
push
cmp
ret
mov
cmp
cld
repnz
movl
inc
adc
push
cmp
sbb
sbb
and
adc
inc
scas
push
ficoml
aaa
call
or
orl
adc
lods
xchg
sub
subb
sub
rolb
and
test
sbb
push
sarl
into
jmp
sbbl
notb
dec
sub
dec
xor
shrl
stos
rcl
test
adc
sbb
adc
inc
adc
cmp
push
test
sub
clc
push
sbb
lcall
rcrb
shrl
cmpsb
adc
sbb
jnp
add
leave
out
loop
sub
adc
inc
mov
mov
or
ss
je
dec
mov
mov
lods
sub
ljmp
inc
pop
imul
and
pop
inc
adc
adcl
xorb
or
xchg
add
fcoml
test
je
sub
or
das
stos
loopne
rolb
adc
mov
mov
out
pop
shl
xorl
jecxz
test
mov
or
push
mov
insb
mov
push
mov
mov
adc
add
xchg
add
and
jo
adc
cmp
cmp
push
cs
dec
lahf
sbb
mov
dec
ss
pop
jo
xor
add
jmp
pop
add
add
loopne
cmpsb
adc
lret
cmc
inc
sbb
enter
ret
sub
adc
scas
out
mov
sbb
inc
adc
xlat
xchg
insl
xchg
dec
sbb
xchg
xchg
jp
stos
stos
push
nop
push
imul
jo
test
ret
rcl
orl
or
out
sub
adc
pushf
xlat
cmpsb
dec
xor
nop
outsl
js
call
and
mov
mov
or
rclb
cmpsb
repz
loopne
pushf
rcrb
adc
rcl
sub
xlat
or
add
push
add
xor
or
sub
pop
shrl
int
xor
test
xchg
pop
div
xorb
pop
adc
fldl
insb
rclb
nop
fdiv
nop
push
insb
fwait
daa
add
sbb
add
and
add
pop
jmp
cmp
sub
pusha
or
push
pop
mov
aad
push
es
movsb
pushf
nop
iret
pop
aas
daa
and
xor
xchg
arpl
enter
push
add
push
dec
add
jo
test
addr16
into
ret
xor
test
in
push
pop
push
mov
push
dec
lock
call
mov
xor
mov
or
mov
jb
mov
inc
shrb
loope
mov
jge
mov
sbb
inc
rcrl
add
or
mov
adc
mov
mov
sub
cmp
outsb
aaa
test
mov
out
mov
push
push
movsb
dec
xchg
sbb
out
test
repnz
scas
push
aam
inc
lods
pop
add
jmp
inc
scas
mov
mov
xchg
fildl
sbb
fstl
sbb
addb
or
xor
or
leave
and
adc
out
dec
stos
xchg
leave
sub
lods
int3
out
stos
xchg
pop
mov
adc
push
and
subb
jo
push
cltd
sbb
lods
in
xor
xlat
add
jae
jge
and
or
xor
mov
lds
pop
stos
and
or
ret
bound
cwtl
xor
popf
test
mov
push
in
int3
repnz
mov
inc
cmp
and
out
push
aad
mov
in
xlat
call
incl
sti
pop
scas
mov
pop
mov
or
inc
mov
dec
dec
and
cltd
js
aam
push
ret
rclb
dec
jae
pop
insl
adc
jnp
std
add
mov
cmp
add
push
push
sbb
push
addb
sbb
rorl
lock
pop
nop
mov
jae
pop
pop
stc
add
add
pop
and
rolb
jge
push
aaa
scas
push
or
xor
roll
xor
es
lret
loope
loope
mov
mov
stos
fmull
or
adc
int3
data16
add
stos
fsubrl
cmp
adc
jo
inc
orb
call
sarb
test
pushf
and
sub
mov
out
cmc
lods
leave
cmp
sub
loopne
sub
adc
fucomip
scas
and
ret
adc
mov
push
mov
cli
rorl
pop
add
das
js
out
adc
inc
adc
psubd
xchg
xor
es
mov
imul
leave
xor
add
inc
movl
sub
inc
insl
pushw
call
push
push
sbb
insl
rorb
test
pop
xor
add
mov
and
sub
push
xor
inc
test
imul
or
push
inc
stc
ffreep
inc
sub
stos
sub
push
lret
cmc
leave
mov
xlat
add
cmp
or
push
add
adc
insb
leave
push
int
lock
add
lock
dec
cmp
ljmp
scas
push
push
fsubrl
roll
jo
push
subb
sbb
inc
add
movsb
aaa
xorb
insl
fdivl
ror
adc
and
aad
cmp
cmp
fsubs
mov
push
sbb
aaa
pop
sbb
cs
leave
in
shlb
pushf
push
mov
pop
adc
dec
dec
enter
push
pusha
lcall
dec
push
cwtl
and
icebp
pop
xchg
fs
rcrb
dec
inc
enter
enter
pop
sarb
adc
push
insw
punpckhbw
xor
push
add
testl
push
jg
push
add
add
enter
mov
mov
adc
or
lock
rclb
push
subl
mov
outsb
std
call
xor
cmp
add
pop
adc
add
add
sbb
inc
stos
mov
adc
out
mov
das
and
bound
mov
lret
mov
inc
das
and
mov
adc
push
jl
add
lea
dec
add
hlt
add
inc
je
addl
push
andl
adc
jne
ljmp
or
mov
push
adc
xor
sub
inc
sbb
rclb
dec
dec
pop
add
shll
mov
mov
pop
faddl
cwtl
cmp
cmp
xor
sub
sbb
sbb
out
or
inc
adc
sbb
mov
mov
adc
aam
es
adc
rolb
lea
add
and
jo
fimull
xchg
popl
push
or
les
addb
shlb
push
ret
xor
insl
or
push
cmpsb
and
push
addb
push
pop
rclb
push
bnd
pop
cli
lds
lcall
fsubp
add
pop
mov
adc
push
cltd
mov
xor
lret
aad
cs
jge
mov
mov
add
hlt
push
lcall
lods
add
repnz
fistps
adc
push
adc
mov
nop
jge
int3
push
mov
sbb
mov
adc
push
pop
lock
push
loopne
bound
sub
xor
pcmpgtw
mov
xchg
inc
rolb
sbb
pop
out
cmc
cltd
inc
test
pop
dec
mov
add
add
cmp
out
enter
dec
cmp
xchg
aam
popa
shrb
fs
inc
inc
pushf
andb
sbb
xchg
push
cli
sbb
xor
mov
add
push
jne
pop
mov
call
push
and
adc
xor
ret
push
sub
nop
mov
push
adc
rcll
adc
call
jne
mov
jmp
push
sqrtps
pop
repnz
xor
aam
dec
push
int3
push
adc
push
pop
sahf
jo
fists
mov
sub
xchg
adc
mov
cmp
pop
xor
aaa
cmovle
or
push
mov
push
dec
sub
shl
pusha
push
jmp
lret
stc
rol
inc
pop
and
loopne
jns
mov
sub
push
mov
test
shrb
mov
or
fstp
push
or
rcll
jbe,pn
or
test
mov
xchg
jg
lea
loope
imul
js
add
push
int3
lret
sbb
loop
cmp
add
mov
push
inc
icebp
imul
sbb
loope
add
lods
addl
mov
xchg
mov
pop
mov
add
lcall
inc
push
lods
in
mov
out
sub
sub
jp
cmp
sub
inc
cmp
add
jo
mov
add
psubusb
mov
push
bound
notb
addr16
loope
ret
mov
push
push
sub
push
inc
and
rorb
and
stos
repnz
mov
cmp
cmpsl
bound
push
cmpsl
lahf
push
add
push
lds
fdivrl
jnp
inc
mov
or
jns
dec
xchg
sbb
ret
fmuls
mov
xchg
push
push
pop
sbb
xchg
fsubrs
push
cmp
jo
inc
xor
out
test
adc
dec
push
jne
or
push
xchg
shlb
lcall
jno
insb
loop
sbb
imul
xor
add
pop
lock
sbb
cmpsb
into
or
fstpl
pop
sbb
push
mov
inc
jo
in
inc
mov
sbb
adc
pop
add
es
mov
mov
sub
sbb
scas
add
inc
pop
ret
fsubrl
je
div
cltd
pop
ret
add
rolb
and
movsb
push
insl
dec
fdivrs
je
mov
cmp
cmp
pop
xchg
dec
xchg
and
sub
in
les
push
or
mov
cmpsb
in
cmp
mov
or
stos
xchg
lcall
stos
sbb
xchg
xchg
leave
pop
xchg
das
push
dec
lret
add
push
jp
sub
push
add
lcall
js
clc
and
repz
or
sub
add
fimuls
jnp
push
pop
jmp
lds
adc
dec
clc
push
inc
imul
mov
jae
xchg
leave
adc
aaa
jg
and
sub
fcoml
mov
dec
push
pop
jae
xor
fldl
cwtl
dec
and
fldt
pop
pop
xchg
mov
mov
test
out
stos
mov
test
and
inc
mov
movsb
push
push
push
adc
ret
mov
adc
shll
mov
cmpsb
sbb
rcl
inc
imul
pop
jno
inc
xchg
sbb
daa
adc
pop
mov
test
pop
pop
xor
ja
xchg
push
pop
mov
add
icebp
pop
call
fiaddl
xchg
loopne
add
push
test
mov
or
pop
sub
mov
jg
lret
pusha
shrl
das
adc
je
setae
mov
fists
adc
add
push
add
ret
insb
mov
sbb
mov
adc
adc
je
into
lock
lcall
mov
cmp
cwtl
aad
mov
psraw
or
leave
das
push
je
or
push
clc
or
mov
xlat
daa
loope
ljmp
int3
or
dec
lea
lret
dec
imul
adc
xchg
add
jecxz
xchg
sti
and
mov
adc
push
addr16
int3
andb
es
jo
lods
jb
push
fxch
push
js
xor
mov
rorb
inc
mov
scas
aas
mov
sbb
cmpsb
orb
int
mov
push
add
and
addb
fstl
lock
or
push
cmc
sbb
sbb
mov
adc
sbb
not
notb
adc
push
xor
xor
fdivrs
push
movb
out
add
in
test
fisubrl
adc
mov
pop
dec
xor
das
pop
add
mov
test
lock
and
jb
sbb
lds
scas
and
iret
push
sbb
adc
jnp
fisubl
aad
inc
sub
sub
stc
sbb
enter
and
shlb
mov
jne
or
sub
ljmp
adc
movl
pop
sub
and
sbb
or
push
aas
aam
loopne
push
lcall
stos
adc
pop
or
mov
pop
call
inc
cmpsb
xor
sbb
jns
rcl
stos
mov
pop
push
popf
mov
sbb
or
lret
xchg
xor
divb
sbb
cmpb
test
and
and
push
cmpsl
dec
push
sahf
sub
sarb
jge
js
stos
push
rcrl
adc
pushf
push
add
cld
xchg
out
mov
call
add
pushf
adc
loopne
mov
push
adc
lahf
dec
in
cmp
adc
inc
pop
pop
adc
xor
pop
or
mov
or
fistpl
xor
push
inc
mov
add
sub
dec
push
cmp
and
mov
mov
sub
push
and
shll
pop
loope
enter
push
xor
xor
stc
mov
mull
and
or
ret
dec
adc
fs
jns
out
dec
xor
mov
push
adc
pop
lret
add
popa
sub
adc
mov
push
mov
sub
rol
pop
mov
pop
sbb
imul
jge
addr16
cwtl
mov
inc
push
ret
xchg
pop
cmp
xor
xor
lret
mov
inc
push
out
cmp
mov
fdivrs
movsl
sub
aad
push
mov
movsb
adc
mov
add
adc
enter
inc
inc
xor
push
nop
and
adc
add
sub
add
push
insl
cmp
add
pop
add
fbld
stos
rol
push
lret
popa
cmp
jecxz
adc
sub
fldpi
sub
push
test
das
or
pop
mov
or
inc
cmp
sbb
jnp
add
pop
push
inc
js
dec
inc
dec
into
leave
push
adc
push
and
fiadds
scas
adcb
sub
sbb
sbb
sbb
outsb
mov
scas
cmp
scas
or
notl
idivb
push
loopne
loop
push
add
in
xlat
adc
arpl
push
stos
pop
sarl
add
pop
push
sbb
mov
xor
mov
add
cmpsl
mov
fs
xchg
nop
xor
xchg
mov
repnz
repz
push
sbb
jecxz
adc
leave
or
arpl
and
jb
and
cli
and
pop
adc
pop
shll
inc
and
popa
mov
inc
sbb
sbb
movsl
push
add
mov
inc
push
inc
das
ss
mov
test
or
out
sbb
adc
into
fwait
ljmp
pop
push
sbb
ficompl
lock
popa
out
and
add
dec
into
push
push
insl
fs
push
gs
pop
outsl
sbb
push
into
jno
pop
cltd
inc
push
mov
rolb
test
xchg
mov
push
xchg
sti
sti
pop
fnstsw
push
mov
jmp
pusha
add
icebp
rolb
cmp
sub
or
sahf
insb
dec
je
ds
push
rolb
clc
sub
xchg
push
xor
rcll
or
and
xchg
jecxz
les
cmp
lods
sbb
imul
push
or
or
sbbb
sbb
daa
push
sbb
sbb
cmp
inc
or
lcall
insb
rol
in
dec
sbb
jg
ret
mov
sub
sub
dec
ficoml
stos
sbb
and
or
ss
sub
jmp
push
cmc
sarl
or
loope
lods
aas
pop
xor
dec
insb
push
ljmp
cmpsl
movsl
jo
cmp
xor
cmp
adc
sbb
xor
sub
inc
dec
push
je
add
sbb
adc
je
pop
mov
in
jge
or
inc
daa
test
push
xor
aad
lret
or
mov
or
cmp
cwtl
stos
pop
mov
adc
jno
and
ljmp
ret
xchg
fstps
push
add
int3
js
movsl
lcall
xor
or
push
mov
cs
mov
or
adc
add
in
nop
rcrl
adc
test
push
mov
insl
roll
cmp
lret
lds
jp
in
daa
jno
and
outsl
pop
sbb
adc
jmp
shrl
test
cwtl
sub
xor
mov
adc
xor
pop
push
rorb
xor
shrb
xor
pop
mov
mov
sbbb
lock
enter
adc
adc
into
push
adc
jo
idivb
mov
ret
aam
inc
pop
mov
jmp
test
out
or
push
js
adc
icebp
das
cld
outsb
mov
out
adc
inc
or
cmpsb
and
dec
xchg
pop
push
sub
cltd
add
sub
sub
pushf
shr
cld
adcb
stc
add
notb
jp
stos
mov
lcall
inc
adc
push
hlt
out
inc
adc
int
dec
sub
sbb
or
mov
pop
mov
or
xor
rcrb
push
xor
and
and
mov
fadd
nop
mov
jp
dec
add
push
outsb
shll
ret
nop
lret
inc
mov
cltd
in
popf
mov
aas
rcll
rcl
sub
mov
jmp
sub
testb
ret
dec
cmp
loope
pop
xor
sub
sub
and
enter
js
insl
mov
ljmp
icebp
dec
inc
or
or
nop
mov
pop
or
add
xchg
pop
and
mov
inc
xor
sbb
addr16
xor
inc
cli
test
mov
cs
pop
push
jb
lods
sbb
inc
int
enter
lock
loop
lret
push
xchg
mov
mov
xchg
jbe
xor
aas
and
sbb
push
int3
xlat
divb
push
xor
sbb
inc
inc
rorl
scas
rorl
xorl
push
ret
push
jp
ret
jo
adc
push
xchg
mov
adc
dec
popf
xlat
sbb
mov
lret
sbb
js
scas
or
mov
mul
xor
imul
add
imul
inc
shrb
cmpsl
roll
adc
dec
inc
pop
sbb
sbb
adc
push
bound
in
adc
xchg
mov
push
subb
adc
bound
fmul
jns
sbb
and
icebp
add
inc
shrl
xchg
shrb
sub
inc
pusha
mov
push
rorl
xlat
xor
rorl
sbb
in
pushf
in
jo
ljmp
movb
adc
adc
enter
jecxz
sub
push
and
inc
cmpsb
sbb
js
sub
jg
sar
int3
mov
add
jo
push
inc
test
mov
xor
push
adc
add
repnz
rcrl
sbbl
ds
call
pop
cmp
jno
aaa
lret
cmp
scas
and
pop
das
push
push
push
mov
xor
lret
test
rcll
test
lea
pop
roll
jbe
fwait
sbb
push
lods
popa
adc
push
mov
dec
cltd
adc
jo
test
pop
sub
jge
push
mov
stc
test
mov
mov
ret
mov
mov
add
inc
out
mov
dec
or
sbb
addb
pop
mov
and
rorl
push
cmpl
pop
rcll
xor
inc
adc
rol
sub
mov
mov
mov
dec
cltd
push
pop
int
lods
adc
inc
pop
stos
mov
inc
push
stos
js
pop
or
test
mov
xchg
je
pop
push
pop
inc
adc
sbb
rorl
sbb
pop
xor
mov
rolb
push
imul
or
or
hlt
mov
add
or
or
xor
mov
mov
into
mov
inc
cmp
push
jb
xor
xchg
stos
enter
adc
into
jae
mov
repz
mov
aam
dec
jne
addl
add
adc
icebp
xchg
inc
das
inc
ret
sti
cltd
push
inc
rol
das
or
add
bound
jl
or
add
inc
xchg
inc
ds
loop
iret
add
sub
scas
or
jnp
push
test
lret
push
sbb
lock
cltd
mov
loope
jne
inc
xor
or
and
inc
adc
rcrb
sub
cmpsb
stos
pop
push
dec
adc
cmp
aad
push
sub
mov
aad
sbb
sbb
mov
sbb
sub
adc
mov
add
push
push
lods
sbb
mov
push
pop
sub
push
sbb
loop
and
dec
rorb
cmp
scas
shrl
and
push
inc
dec
in
adc
jle
sbb
fcoml
lret
mov
pop
rolb
jns
stc
cmp
sahf
loopne
sub
mov
adc
cmpl
sub
popa
test
lods
out
iret
or
fs
sub
lods
test
fimuls
xlat
pop
jbe
in
or
inc
lret
ret
add
popa
ljmp
pushf
lock
mov
add
xchg
mov
test
int3
sub
sub
cli
mov
mov
inc
inc
add
add
sub
sbb
dec
movsb
movsb
xchg
js
mov
jb
sub
xchg
lods
adc
dec
cmp
or
and
popf
hlt
dec
addr16
inc
jnp
mov
adc
sbb
movsl
or
mov
call
xchg
adc
inc
insb
dec
mov
mov
sub
add
int
in
mov
nop
or
mov
outsl
fnstenv
sbb
sub
cwtl
xor
shrl
adc
push
test
lea
outsl
sbb
test
inc
or
or
add
pushf
idivb
out
adc
inc
popl
mov
shrb
into
xorl
and
xor
push
add
clc
ror
leave
enter
push
ljmp
jnp
stos
xor
les
pop
nop
lahf
ljmp
dec
mov
mov
test
or
ret
loopne
std
pop
add
fists
test
mov
clc
pop
push
cltd
and
lret
scas
and
lds
jne
or
mov
rclb
jns
mov
inc
mov
into
mov
xchg
fs
sbb
or
and
stos
inc
loopne
lock
sub
mov
rorl
pop
hlt
add
sbbl
sub
jne
andl
loopne
lret
lret
mov
mov
andb
in
enter
add
or
push
repnz
cwtl
outsb
add
pop
sub
js
pushf
jmp
sub
jne
rclb
inc
pop
negb
cmp
adc
call
orl
testb
cli
pop
adc
push
shr
rcll
push
stos
ss
into
push
push
sahf
rolb
adc
adcb
pusha
xor
xor
xor
pop
cli
adc
mov
mov
push
ljmp
sbbl
push
sbb
inc
mov
or
add
movsb
push
add
sbbl
or
stc
fwait
sub
test
inc
test
add
sbbl
push
push
add
inc
addr16
pusha
sbb
or
lds
adc
mov
adc
sti
dec
test
xor
lock
or
jne
ret
cmpsb
pop
prefetcht1
adc
icebp
mov
or
insb
mov
mov
push
xchg
cmc
xchg
mov
sahf
call
sarb
add
ret
pop
lret
dec
cmc
ljmp
xchg
or
mov
sbb
movsb
enter
cltd
cmp
sub
ljmp
sbbl
loopne
or
dec
fwait
push
sbb
mov
lock
add
ljmp
push
test
mov
or
sbb
adc
cmp
sbb
adc
outsb
loop
mov
rolb
cltd
xlat
adc
mov
or
out
stos
hlt
stos
sbb
add
insb
shlb
int
int
mov
lea
cmp
lods
loopne
mov
rclb
ret
mov
inc
jne
adc
cmpl
push
lea
pop
dec
das
push
sbb
sbb
test
int
jns
jb
cmp
clc
inc
jl
jge
xchg
jp
or
mov
adc
push
jb
data16
add
rorl
leave
bound
sub
hlt
dec
shl
push
cltd
mov
pop
jmp
pop
or
jmp
push
add
pop
adc
lcall
ret
ret
rolb
inc
push
and
sbb
xchg
repnz
imul
mov
andb
sbb
sarb
xchg
and
nop
rolb
jb
inc
sahf
pop
outsb
aam
mov
and
pushl
pop
or
or
lock
add
adc
xchg
xor
ret
adc
ja
or
je
mov
shlb
push
inc
sub
lods
jno
jnp
clc
inc
xor
mov
or
mov
inc
sbb
loopne
sub
jmp
pop
jecxz
add
adc
xchg
daa
inc
mov
aam
inc
ret
and
add
dec
push
adc
mov
call
jo
fs
or
je
sub
mov
add
bound
sbb
call
xor
shr
orl
jge
pop
adc
mov
and
cld
pop
je
stos
addr16
pop
pop
in
add
adc
xchg
ljmp
scas
mov
and
dec
mov
mov
xor
add
mov
inc
int
shll
rorb
daa
push
add
pop
movsl
jo
push
xchg
cmp
das
add
pusha
sbb
inc
movsb
shrl
stc
faddl
mov
mov
xor
add
out
mov
add
push
inc
stos
or
loopne
push
jge
mov
adc
add
xor
insl
out
loope
ret
adc
loopne
inc
sub
fisubl
call
dec
inc
mov
jle
or
jb
notl
mov
dec
mov
rcr
mov
or
data16
cmp
add
gs
add
add
inc
es
pop
push
cli
jns
sbb
jno
pop
andl
int
in
add
sub
call
jo
mov
mov
test
sbb
leave
rcll
push
add
push
mov
scas
or
sub
pop
push
sbb
sbb
mov
xchg
lret
xor
mov
imul
or
fcompl
test
sub
js
jb
mov
stos
mov
cwtl
outsl
adc
sbb
adc
sbb
mov
in
dec
mov
or
testb
xor
inc
arpl
inc
mov
or
mov
addr16
push
adc
or
add
or
cmp
ljmp
sub
or
or
sti
fsubrl
pop
mov
leave
data16
mov
xor
das
xchg
jae
inc
incl
outsl
andb
in
pop
push
push
push
outsl
mov
call
and
rorb
mov
lea
or
sti
or
adc
pop
pop
test
jne
fsubr
xor
cmp
sbb
std
leave
adc
testb
pop
sbb
jge
outsl
mov
sbb
fs
inc
mov
inc
decl
sub
lea
push
sub
pushf
test
std
incl
add
mov
aam
add
pop
sbb
and
lods
ljmp
outsl
and
push
shlb
inc
in
mov
jg
or
adc
pop
pop
ret
mov
jne
push
xchg
cmpl
test
jne
push
pushl
or
sbb
fsubr
in
mov
and
nop
and
mov
add
rolb
adc
jo
push
add
divb
lock
ret
mov
movsb
adc
aaa
and
or
push
sub
pop
adc
mov
jne
sbb
out
in
sub
mov
mov
call
jne
or
adc
mov
jno
inc
sbb
jb
mov
pushf
xor
stc
pop
in
cltd
sbb
adc
mov
test
pop
je
or
ret
sbbl
repnz
xchg
sub
mov
insb
sub
and
enter
hlt
jmp
movsl
popl
ret
jo
push
or
ret
pushl
or
pusha
mov
je
pop
xor
outsb
mov
or
xchg
mov
pusha
or
pop
jmp
jae
adc
daa
loop
dec
push
int
mov
dec
or
or
mov
shl
mov
daa
outsb
sar
jge
lea
movsb
mov
jge
lahf
xchg
in
fs
and
cmp
jl
mov
mov
jle
cmp
push
cmc
or
inc
pop
int3
jmp
cmp
lahf
inc
jle
cmp
xchg
stc
cmp
out
cs
mov
push
cmp
jge
pop
clc
jbe
push
rcrl
js
pop
jmp
call
ret
push
lods
cld
mov
or
jmp
sbb
insb
jl
pop
pop
leave
mov
push
fdivrs
inc
popa
cmp
push
mov
cmp
add
lods
jae
cmp
jne
out
adc
push
loopne
mov
or
sbb
stos
or
jo
cmp
lcall
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
insl
sti
sbb
das
insb
aas
mov
jmp
cmpb
or
std
or
jbe
inc
or
ja
xor
add
jmp
gs
push
xor
cmp
hlt
sbbb
xor
daa
cmp
je
cmp
jg
jmp
out
jb
lea
add
fists
add
pop
cmp
mov
int3
mov
pop
sbb
or
cmp
push
push
jo
test
mov
pop
inc
cmpb
and
cmp
cmp
mov
push
cs
pushl
js
pop
bound
fstpt
jne
pop
incl
clc
mov
add
jmp
mov
mov
push
jle
imul
cmp
fbstp
clc
mov
push
add
push
push
push
lahf
bound
mov
xchg
fmuls
sub
or
outsb
xchg
mov
and
push
push
xor
into
lock
pop
les
mov
insl
dec
sbb
es
jne
push
test
or
add
stos
mov
adc
ret
cmpb
inc
mov
inc
cmp
sub
mov
sub
add
mov
mov
mov
inc
inc
or
jmp
or
addb
out
add
sbb
inc
push
add
add
inc
sbbl
mov
inc
icebp
repnz
fsubl
je
or
or
jne
dec
imul
jmp
imul
lcall
data16
mov
pop
icebp
pop
enter
mov
add
rcl
test
mov
inc
inc
jmp
xchg
sub
ret
add
ret
insl
or
jecxz
jmp
jecxz
or
mov
sbb
xchg
ret
shr
mov
dec
test
jnp
rclb
jne
andb
aas
lock
fidivl
add
sbb
inc
cmp
push
pop
sbb
inc
adc
outsb
add
xorl
test
fimull
push
push
movl
pop
sti
pop
ret
dec
and
cmpsb
hlt
push
mov
shll
shrb
sub
dec
jnp
hlt
jmp
xor
aaa
pop
inc
inc
cmp
pop
ljmp
pop
sub
insb
mov
mov
addl
jbe
frstor
push
jae
inc
inc
or
jne
push
clc
push
sub
das
nop
inc
sar
aam
inc
fisttpl
mov
mov
jge
lcall
adc
je
pop
add
shll
lea
or
daa
pop
or
add
mov
jmp
test
pop
cmp
je
pusha
mov
je
insl
mov
fildl
jnp
add
movl
and
or
cmc
int3
lds
push
push
fiaddl
mov
in
pop
fwait
sub
or
or
sbb
stos
sbb
and
pop
mov
add
andl
inc
add
mov
add
mov
lock
jg
ss
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
adc
xor
pusha
inc
mov
pop
arpl
jecxz
add
jl
sbb
or
xor
push
andb
cmp
pop
inc
lcall
push
or
ret
shll
pop
or
shll
pop
mov
or
sbb
add
inc
cmp
jl
pusha
pop
and
cmpl
lea
jne
ss
das
push
sbb
enter
jmp
ret
dec
neg
sbb
adc
jp
push
jo
aas
mov
or
ret
ds
orb
fnstsw
or
jmp
add
adcl
pop
fcmovnu
xchg
test
imul
rorb
mov
je
jbe
lods
mov
sub
sbb
sbb
testb
xchg
pop
pop
pushl
push
pop
inc
ss
adc
mov
popf
mov
ficompl
adc
data16
dec
insb
inc
mov
enter
insb
es
push
pop
adc
push
into
pop
outsl
pop
jge
add
xor
sahf
push
cli
fisubrl
test
lds
repnz
popa
test
cmp
loope
nop
ret
int3
mov
enter
sbb
push
pop
sub
mov
inc
add
testl
psubsb
adc
testl
push
push
inc
push
inc
lret
sbb
jnp
jo
mov
sub
outsl
sub
jbe
mov
dec
xchg
jl
jbe
lea
sub
sar
in
sbb
push
or
ret
popl
mov
or
push
mov
add
push
test
sbb
sbb
jns
pop
pusha
add
imul
ret
cli
mov
inc
xor
pop
inc
xor
mov
cmp
testl
dec
cmp
cmovne
pusha
clc
mov
mov
and
or
popa
xchg
pop
sti
xchg
insl
jbe
je
push
push
lea
test
pop
scas
mov
or
push
cmp
jmp
inc
mov
sbb
fstpt
outsb
fimuls
or
fsubr
ja
or
sbb
mov
insb
mov
out
jmp
pop
fdivrs
pop
push
jle
sbb
mov
inc
sbb
pushf
ljmp
loope
loope
or
icebp
sub
inc
aam
mov
ljmp
loopne
cmp
mov
adc
test
xor
pusha
ret
leave
mov
push
or
mov
icebp
shl
cmp
sub
xchg
call
jo
adc
test
jne
or
test
xchg
pop
ja
and
mov
adc
into
dec
call
push
add
adc
or
aas
inc
pop
gs
dec
call
sbb
clc
or
or
clc
inc
call
mov
leave
int
pusha
dec
adc
in
mov
push
or
sbb
shll
mov
and
adc
and
iret
mov
jecxz
adc
lds
mov
push
daa
int
int
or
cmpsb
jle
push
jmp
dec
nop
test
sbb
xor
fcom
pop
in
mov
jb
stos
push
subl
xor
jne
push
push
pop
jp
cmp
call
pop
pop
lods
mov
pop
in
outsb
test
mov
add
push
arpl
stos
ret
pop
xchg
sbb
mov
call
mov
sub
mov
pop
mov
ret
mov
mov
sbb
negb
lcall
adc
jo
stc
add
fs
inc
sbb
xchg
fcoml
lahf
cmp
cs
inc
xchg
cmpsl
mov
add
sub
adc
pop
fst
insb
cs
js
sbb
inc
mov
mov
nop
pop
pop
cmp
mov
aaa
sbb
push
andl
jg
jbe
xchg
loopne
jne
rep
stos
mov
xchg
dec
dec
sub
jge
arpl
dec
rcll
or
fiadds
or
mov
xchg
and
cmp
out
call
and
push
add
lea
std
lea
dec
je
mov
lea
add
mov
ja
adc
mov
inc
push
push
jbe
inc
inc
cmpb
enter
xor
fdivs
fs
jmp
lods
push
mov
fisttpll
jo
shlb
jmp
inc
push
rcl
jns
jno
gs
mov
or
xchg
jb
push
cmp
outsl
cmp
pop
dec
push
jmp
or
add
dec
stos
add
push
jo
pusha
xchg
push
test
add
insb
insb
xchg
sbb
pop
hlt
mov
fiadds
fucomi
sbb
cmp
nop
cwtl
adc
mov
xor
adc
jo
pop
mov
dec
sub
inc
mov
jae
inc
mov
dec
push
mov
mov
inc
add
sub
jns
push
jno
rclb
and
add
in
pop
mov
push
pop
xchg
push
mov
cli
push
aas
aas
sarb
lcall
out
mov
mov
movb
addb
mov
push
insl
ljmp
inc
sti
out
inc
mov
shr
test
and
rep
inc
inc
xor
inc
pushl
lock
cli
mov
lea
push
mov
into
fcoms
std
sbb
int
push
xor
subb
cmpsb
pop
sub
daa
lock
jb
lret
jb
mov
test
out
addr16
push
add
mov
popf
xchg
mov
adc
add
push
xlat
mov
fisttpl
jmp
adc
add
std
ret
sbb
and
pushf
mov
adc
push
and
and
ljmp
mov
imul
std
inc
sbbl
jmp
rorb
mov
imul
jbe
adc
or
sbb
xor
sub
or
fdivs
mov
int3
add
ja
pop
inc
imul
lea
pushl
test
mov
xlat
cmp
jne
mov
mov
clc
mov
pop
pop
lock
ret
push
add
out
xchg
or
and
mov
push
loop
jmp
lea
or
jmp
xchg
or
jmp
cld
pusha
or
sbb
fcomps
mov
inc
out
jmp
mov
rcrl
out
outsb
imul
imul
xor
add
fdiv
ret
pop
push
cmp
cmp
cmp
leave
data16
inc
cmc
or
or
sbb
dec
icebp
andb
loope
pushf
jl
lock
icebp
loopne
and
add
push
jne
cmp
sti
adc
xor
inc
mov
test
in
orb
lea
movl
add
loope
mov
lock
pop
mov
push
loope
outsb
adc
out
and
jae
push
loope
xchg
and
inc
lds
rol
dec
std
cld
xchg
push
aad
mov
push
addb
dec
in
clc
mov
mov
jb
mov
adc
and
sub
rep
incl
push
fisubl
mov
dec
loopne
mov
test
push
lea
pop
neg
sub
add
add
shll
sbb
mov
mov
cmp
push
or
mov
int3
lea
add
and
andl
inc
scas
jmp
repnz
mov
cld
add
in
in
aam
inc
add
loop
in
call
call
shll
clc
cld
andl
sbb
or
lock
outsl
imul
pop
pop
rcll
pusha
or
adc
or
xor
or
jl
cld
jg
or
fninit
cld
ja
mov
fldenv
pusha
xchg
xchg
inc
jo
stc
sub
mov
and
call
mov
outsl
add
dec
push
mov
add
add
aaa
stos
sub
add
mov
daa
and
sub
add
lcall
insb
je
sbb
xchg
cmpsl
xchg
sbb
lcall
adc
imul
imul
add
in
mov
xchg
loopne
mov
xchg
and
and
xor
imul
std
loopne
fidivs
ljmp
sub
cmp
pop
pop
nop
push
jne
push
or
pop
je
sbb
and
lods
mov
aad
push
jle
jmp
push
inc
adc
sub
jmp
push
xchg
imul
add
je
fcmovu
lods
add
mov
mov
std
insl
mov
lea
pop
push
mov
pop
in
pop
push
or
and
data16
inc
add
imul
fiadds
inc
adc
fildl
jno
pop
in
dec
cld
push
cld
cld
push
shr
xchg
imul
mov
mov
mov
pop
mov
movsl
inc
dec
dec
or
test
or
jne
rcrl
aas
dec
pop
or
iret
jbe
rorb
mov
add
hlt
push
mov
shr
lea
mov
and
decb
sub
cmp
and
cwtl
or
and
into
adc
jns
push
adc
adc
mulb
or
add
or
pop
mov
add
aas
jnp
pop
das
mov
loope
in
loop
sub
aas
out
outsb
adc
pop
cmp
cmpsb
jbe
mov
inc
sbb
inc
stos
fnsave
ds
jbe
cli
mov
sbb
mov
push
mov
pusha
xchg
dec
push
shlb
push
adc
imul
mov
shlb
xchg
dec
push
sub
fistl
mov
add
outsl
xor
in
les
cmp
mov
lock
int
outsl
enter
mov
push
lods
xchg
lods
insb
add
pop
mov
sub
mov
inc
mov
jae
mov
push
mov
jmp
or
or
lea
sbb
sub
lea
sbb
add
sub
pop
add
popf
test
or
mov
sbb
push
stos
in
cli
dec
lods
pop
shll
or
pop
mov
shl
add
push
xorb
push
push
jnp
bound
or
push
int
movhps
inc
adc
xchg
popf
fisttpll
decb
or
jns
adc
pusha
add
adc
test
or
adc
adc
hlt
out
repnz
adcb
jmp
in
push
lea
push
push
push
xor
mov
add
divl
adc
mov
into
mov
xchg
sub
subb
jecxz
sbb
jbe
pop
push
out
push
dec
xor
push
aaa
shr
sub
mov
pop
lret
hlt
jmp
es
xor
shr
push
or
pop
and
test
fdivrs
jae
jbe
sbb
sub
decb
iret
jne
out
jbe
lods
pop
cmp
jne
mov
insl
xor
fistpll
fsubs
adc
xlat
roll
jne
and
push
jnp
or
jnp
cmp
aaa
jmp
es
nop
cmp
jge
jnp
outsl
jmp
pop
test
fcompl
sbb
add
cmp
je
rcr
addr16
es
adc
fimuls
add
dec
sub
ret
cs
mov
mov
jo
sub
jo
push
fstl
push
or
push
inc
or
mov
jne
xchg
out
ret
sbb
sbb
mov
and
adc
or
je
mov
outsb
jecxz
pop
dec
jbe
push
into
jne
data16
fistps
test
jl
shl
inc
jmp
mov
push
stc
inc
add
sub
jnp
incb
cwtl
jae
push
sarl
jle
pop
aam
or
and
popa
and
adc
cmp
mov
aad
mov
decb
jne
jmp
and
jmp
mov
sbb
sub
pop
xor
sbb
ss
sub
cmp
test
or
jp
jae
jp
clc
add
test
divb
inc
and
jl
inc
or
lret
xor
push
mov
jge
les
and
mov
cmp
movsl
add
jmp
sub
dec
mov
jnp
mov
lods
push
jle
cmc
dec
mov
cmp
or
add
mov
jne
aad
cld
mov
add
xor
lahf
mov
and
jne
lods
test
dec
cmp
or
mov
inc
add
rcll
xchg
add
mov
fnstsw
mov
arpl
xorb
mov
jle
or
pushf
sarb
lcall
mov
loopne
arpl
adc
push
iret
pop
pop
scas
and
push
sbb
mov
js
fsubrs
and
mov
incl
mov
xchg
aam
add
jno
mov
or
fcmovnb
dec
loopne
ret
aaa
mov
sbbl
jbe
insl
inc
or
add
dec
mov
mov
shl
jns
mov
es
xor
addb
sar
sub
rorb
cli
ja
lea
out
push
orl
in
data16
push
movl
jmp
dec
add
sub
adc
push
sub
loopne
push
aaa
xchg
jbe
adc
add
mov
lods
lea
or
inc
fs
inc
inc
mov
aad
icebp
inc
mov
or
adc
jecxz
cmpsb
or
mov
push
fsubrs
shll
push
push
xor
test
push
mov
push
sub
popa
fs
divl
pop
adc
pop
add
adc
or
mov
std
push
insb
mov
sarb
je
adc
adc
mov
mov
jg
roll
add
or
cs
mov
push
push
mov
jne
idivl
push
stos
sub
adc
jne
subb
aam
and
inc
inc
dec
je
std
scas
cmp
jne
sub
add
xchg
stos
fwait
and
daa
mov
pop
vmulsd
jmp
push
adc
out
or
fwait
cmp
cli
sub
xor
inc
xchg
arpl
nop
push
push
add
sub
fistl
cmp
sbb
jmp
add
rclb
adc
push
icebp
push
push
mov
pop
push
xor
clc
mov
test
push
xchg
dec
sbb
clc
pop
lock
nop
jne
push
push
or
cmp
xchg
or
push
sbb
inc
lods
cli
les
mov
and
dec
xor
jae
nop
pop
adc
adc
cmp
jl
pop
pop
call
int3
nop
icebp
sbb
pop
ret
add
dec
sti
mov
fdivl
sub
inc
sbb
sbb
cmp
jae
mov
and
loopne
inc
push
je
and
in
test
sbb
test
loopne
addl
loope
int3
fimuls
les
adc
cld
mov
adc
insb
sti
fdivl
dec
fsubl
push
loop
iret
jne
dec
in
sbb
push
je
testb
je
fisttpll
mov
sbb
mov
aad
push
imul
fidivl
dec
rorb
xor
or
xor
add
das
sub
loopne
pop
sub
adc
jge
je
cmp
mov
fs
je
mov
xor
data16
add
push
mov
push
jl
push
inc
mov
push
inc
test
sbb
mov
jp
rclb
dec
.byte
out
lcall
add
cmp
cmp
imul
mov
mov
ja
add
cmp
add
cmp
sub
mov
add
adc
add
imul
jns
mulb
mov
cld
add
pop
cmp
sub
add
sub
mov
jae
and
sub
adc
imul
roll
sbb
enter
adc
pushl
rorb
mov
mov
add
add
mov
sub
add
lret
mov
movb
mov
xor
adc
adc
sbb
jge
insl
add
mov
ret
clc
sahf
add
fcmovnu
faddl
add
cmp
cmp
pop
jle
outsl
pop
shrb
testb
add
rcll
scas
insl
sti
in
mov
add
push
sub
cmp
sub
repnz
in
jbe
rorb
sbb
push
ja
in
pop
mov
mov
or
icebp
mov
add
xor
pop
adc
cmp
jbe
sub
jl
adc
enter
addl
shrb
into
mov
lret
cmp
push
mov
mov
lea
pop
aas
push
add
insl
push
and
mov
add
sub
das
sbb
lret
insl
sub
adc
adc
jmp
jge
sub
adc
mov
sbb
adc
adc
ja
or
mov
imul
pop
add
stc
or
mov
mov
mov
rolb
icebp
adc
jmp
es
pop
lcall
sbb
je
mov
adc
mov
outsb
mov
or
call
sarb
sarb
cmp
push
sti
and
imul
push
mov
pop
ljmp
scas
sbb
test
out
sub
leave
add
jle
xchg
push
sbb
bnd
fistl
outsb
sbb
or
jno
sti
rorb
push
pop
lods
out
xor
mov
push
and
pop
push
scas
sbb
pop
pop
rorb
mov
mov
lret
push
gs
int
mov
leave
add
mov
dec
jmp
mov
rclb
insl
xor
add
sbb
idiv
insl
pop
enter
or
or
mov
adc
pop
add
adc
cmp
or
addr16
rcrb
shr
icebp
mov
pushw
cmpsb
notb
inc
fistps
push
push
rclb
or
xor
sbb
fcmovne
sahf
jmp
add
push
and
scas
aaa
add
ret
insl
and
and
push
inc
imul
lds
fsubrs
jbe
ss
pop
dec
mov
mulb
and
mov
or
mov
inc
cmpsl
adc
sbb
mov
shll
add
mov
or
or
jne
xlat
push
push
adc
movsl
inc
ja
aaa
add
add
mov
mov
mov
jno
fbstp
mov
pop
js
repnz
out
pop
push
sarl
in
cltd
mov
test
sbb
je
push
push
xor
mov
imul
nop
icebp
xor
adc
inc
clc
add
and
push
sub
insl
outsl
sti
ds
fwait
xor
cmp
mov
inc
shll
icebp
ds
mov
jl
lock
pop
outsb
mov
add
add
cld
inc
adc
sahf
in
inc
shll
cli
or
movsl
ja
mov
mov
in
inc
movsb
or
inc
ljmp
add
call
or
adc
add
adc
pop
insb
call
push
or
adc
pop
into
mov
add
dec
fists
fadd
mov
mov
les
jmp
fstp
sbb
mov
mov
sbb
ret
mov
cmp
insl
mov
leave
rcrl
mov
call
sbb
addr16
cmp
scas
add
fisubrs
loop
pop
mov
aas
jg
push
add
cmp
lret
mov
adc
dec
inc
cmp
jmp
push
mov
sub
call
ljmp
xchg
sub
adc
cmp
mov
mov
xchg
push
or
sarb
sbb
movsl
das
andl
sbb
push
fisttpl
or
jl
pop
lods
ja
test
sub
out
adc
sbb
pop
or
mov
pop
mov
fiaddl
add
popf
cmp
dec
push
mov
movb
push
enter
jle
lcall
sub
add
sbb
push
mov
fstpt
add
push
sub
out
xchg
stos
sbb
je
shlb
mov
push
repnz
dec
pop
fstl
shll
cmp
or
notb
mov
dec
rsqrtps
mov
mov
sub
sub
sub
cmp
mov
mov
cli
or
sbb
and
pop
inc
dec
mov
xchg
pop
repnz
adc
jmp
sub
mov
lock
and
sarb
add
push
inc
ret
rorb
lret
inc
sub
dec
push
das
adc
adc
bound
pop
cs
clc
adc
mov
push
fwait
arpl
imul
js
lret
inc
mov
fstpt
add
inc
and
jo
adc
repz
sbb
popa
push
lret
sub
mov
into
aad
push
out
add
test
ret
pop
repnz
rcl
push
add
leave
insl
outsb
imul
or
inc
ret
sbb
loop
jl
lods
out
inc
sbb
jmp
or
inc
imul
sbb
insl
imul
cwtl
mov
sbb
lock
or
insb
je
push
inc
or
subb
jnp
fmul
data16
lret
pop
or
bound
cmp
push
push
adc
sbb
or
pop
hlt
sub
push
cmp
sub
pop
ds
jl
push
and
sahf
pop
cs
rorl
sub
mov
out
cmc
pop
pop
loopne
icebp
cmp
es
mov
adc
xor
mov
inc
pop
dec
mov
xor
lcall
sbb
lods
mov
aam
int
cmovns
es
fucomi
pop
or
xchg
or
shrb
inc
icebp
xor
pop
add
popa
outsb
sbb
into
pop
fwait
js
xchg
cmp
push
imul
data16
adc
mov
test
push
fwait
jo
enter
test
xchg
fimuls
mov
dec
insb
sbb
jbe
call
xor
pop
mov
xchg
test
or
loopne
arpl
imul
jo
pusha
sti
shl
mov
ret
xchg
and
es
jge
insl
test
pop
cmp
jb
jle
sbb
jae
push
fxch
dec
add
ljmp
add
or
loopne
sbb
inc
insl
cmp
mov
xchg
fistpll
mov
xchg
jmp
stos
shl
jmp
jge
add
adc
push
jb
xor
mov
rclb
das
faddl
add
sti
lcall
xchg
jle
cwtl
add
lret
xor
or
mov
push
add
fmul
fcoms
xchg
or
dec
dec
jle
cwtl
sub
push
or
dec
add
lods
add
in
dec
lods
lahf
mov
pop
clc
es
jb
movzwl
mov
xchg
pop
jae
or
pop
adc
jns
rolb
ss
pop
lods
in
scas
cmp
mov
push
and
sub
stos
in
sarl
push
pop
sbb
add
mov
dec
rorb
adc
shlb
fsubrs
pop
sarl
adc
pop
xchg
adc
and
stos
push
cmp
movsb
mov
sbb
mov
rorb
jmp
aam
pop
adc
ret
leave
inc
jecxz
popf
jae
and
shrb
sbb
or
rorl
mov
or
sbb
loopne
mov
cmpsl
push
shl
adc
push
mov
dec
mov
push
xor
add
movb
rcrb
pop
jbe
jp
mov
in
lods
or
fdivrs
outsb
or
dec
cs
movsl
and
lods
rolb
shrl
inc
push
out
inc
shufps
inc
imul
xchg
sub
int3
sub
es
mov
lcall
test
jbe
out
loop
mov
mov
into
push
pop
mov
stc
sarl
stos
adc
lret
push
jo
inc
jnp
xchg
negb
popf
or
bnd
pop
fildl
adc
ss
test
xlat
push
lock
push
mull
or
cmp
add
inc
leave
sbb
and
cmc
push
and
xchg
aam
mov
inc
aaa
dec
rcll
mov
push
push
push
inc
jae
sub
mov
sbb
adc
or
add
mov
lock
leave
fstpl
push
push
push
pop
sub
stc
ficompl
outsl
fnsave
mov
pop
mov
pop
pop
sub
ficoml
arpl
xchg
adc
pop
arpl
outsl
idivb
mov
inc
push
ret
clc
or
movl
add
push
loop
test
fsubrs
mov
mov
pop
sub
and
cmpsl
cmp
pop
jne
call
push
movsl
sti
inc
out
cmc
call
cli
ljmp
add
icebp
rcrb
inc
stos
in
into
movsl
movsb
sbb
push
scas
jecxz
loop
adc
fcom
dec
ja
or
lock
mov
xlat
add
cmp
in
rcr
push
ds
adc
xor
pop
push
call
or
into
out
xchg
repnz
inc
dec
mov
in
or
pushf
negb
lcall
cmp
leave
push
pop
test
jno
fwait
ret
popa
mov
ss
aad
aaa
enter
notb
test
clc
adc
mov
repnz
and
inc
ret
popa
push
add
ret
push
pushf
jb
roll
or
mov
push
sub
stc
sbb
dec
xchg
je
cltd
adc
push
outsb
ss
lcall
mov
add
mov
jp
in
add
mov
cltd
push
pop
xchg
loopne
add
leave
mov
and
push
add
arpl
mov
mov
jae
sbb
xchg
push
adc
adc
jbe
adc
sub
je
jecxz
push
lock
add
mov
pop
scas
leave
push
or
jno
test
mov
dec
push
leave
sub
adc
loope
push
jmp
mov
or
cli
lret
nop
adc
icebp
add
or
sub
push
shrl
dec
add
push
pop
loopne
in
loopne
sbb
sub
mov
add
pop
scas
adc
jl
sbb
outsb
outsb
add
push
push
scas
rcl
fs
jae
call
notl
adc
push
call
dec
clc
push
in
scas
aad
shrb
inc
sarb
sbb
je
clc
pop
mov
xor
leave
mov
mov
xor
sub
icebp
xchg
das
ret
mov
or
test
inc
punpckhbw
test
add
aad
arpl
xor
inc
insb
sub
adc
inc
clc
cmp
scas
out
mov
stc
sbb
lods
xchg
mov
stos
out
adc
sbb
cwtl
mov
test
adc
push
and
in
test
mov
adc
or
add
mov
into
sub
loope
push
sbb
sub
leave
push
mov
sbb
cmp
lret
into
mov
mov
enter
mov
xor
xchg
leave
mov
negb
mov
loopne
lock
popf
adcl
rclb
pop
mov
adc
mov
xor
popf
inc
add
dec
xor
arpl
adc
pop
addl
pop
push
and
push
and
adc
or
dec
sbb
or
cmp
nop
jmp
call
sub
pop
push
bound
scas
sbb
mov
lahf
addr16
mov
jno
inc
mov
adc
mov
mov
aam
aam
inc
and
pushf
mov
cmova
xor
sbb
adc
xlat
lret
inc
push
mov
pusha
mov
mov
push
call
out
test
int
ja
addr16
movsb
popa
div
mov
xchg
sub
xchg
xlat
mov
jae
pop
lret
or
pushl
push
out
xchg
lahf
mov
jbe
adc
lods
pop
jp
in
leave
test
cmp
jae
and
je
out
xchg
lds
cmp
sbb
js
xor
outsb
jb
pop
sub
sub
adc
into
push
outsb
sub
push
push
test
icebp
sub
xchg
imulb
cmp
shrb
aam
dec
pop
loope
mov
jmp
mov
jne
jo
sahf
daa
xor
pop
or
dec
mov
sbb
pop
pop
jbe
adcb
pusha
push
iret
mov
fwait
mov
adc
loopne
sarb
xor
or
sbb
push
pop
or
pop
lods
push
cli
ret
nop
xchg
mov
lods
sub
imul
mov
or
imul
inc
mov
test
rolb
sar
push
sbb
xchg
lods
mov
add
adc
ljmp
jae
pop
or
adc
nop
cmp
sbb
pop
lcall
pop
mov
scas
mov
or
sbb
push
add
or
pop
mov
out
mov
pop
cmpsb
bound
ds
add
rol
mov
add
push
test
rcl
arpl
xor
iret
out
insl
js,pn
pop
and
xchg
sbb
inc
mov
push
sbb
aam
popa
cld
push
subb
ret
cmpsb
clc
push
leave
push
xchg
mov
inc
mov
adc
inc
insb
rcll
stos
fnstsw
pop
addr16
mov
sbb
je
sbb
inc
sub
orl
lret
push
mov
cltd
mov
imul
scas
pop
jae
and
xorl
adc
aas
push
test
inc
inc
stos
lret
xchg
rolb
shrl
incb
push
dec
xchg
sbb
bound
push
jmp
xlat
sbb
xorb
dec
scas
xor
mov
sti
adc
sbb
sbb
cmp
or
cltd
pop
sub
lea
xchg
aam
push
loopne
push
out
shl
mov
leave
ja
xor
aam
mov
push
pop
test
mov
xor
mov
or
jae
mov
sub
push
scas
out
adc
cltd
adc
popa
sub
movsl
ljmp
hlt
rcrb
push
sbb
push
xchg
fsub
jns
push
ds
out
mov
adc
and
mov
sbb
mov
sahf
bndstx
push
sub
je
test
enter
loopne
pop
inc
lock
jge
sbb
mov
pop
or
jle
xor
mov
pop
xlat
mov
adc
ljmp
sbb
push
sarb
xlat
or
sub
pop
jo
push
push
in
jo
or
ljmp
negl
push
xchg
pop
cmc
enter
cmp
cmp
push
cwtl
stos
mov
push
negb
inc
mov
adc
out
push
rcll
loope
jecxz
mov
lock
movsb
and
lcall
adc
or
aas
insl
push
js
sbb
add
pop
adc
xchg
imul
mov
sub
not
push
cmp
test
jge
jo
dec
ret
sbb
and
fisubrl
stc
add
pop
adc
xor
cmpsl
push
inc
mov
mov
fs
imul
hlt
dec
adc
shr
shl
es
sbb
xchg
xchg
push
lcall
lret
sbb
or
mov
inc
or
ret
or
and
cmc
sub
jo
into
mov
test
std
or
addb
loopne
and
lea
jb
clc
mov
sbb
push
push
add
and
lods
push
adc
je
jo
inc
lds
call
lahf
addr16
or
mov
add
push
mov
add
pusha
xor
push
pop
andb
shll
dec
jae
xchg
jo
jnp
sbb
or
jmp
idivb
scas
inc
lock
in
mov
mov
sub
mov
sbb
sub
xor
push
mov
jno
push
in
push
lret
xchg
push
dec
push
and
int
or
cltd
sbb
sbb
mov
gs
xchg
je
and
je
psllq
push
das
adc
xchg
mov
stc
repz
add
jg
adc
in
in
add
pop
mov
jne
rorb
jae
sub
mov
mov
mov
pusha
jnp
fnstcw
call
std
ljmp
adc
push
xor
lods
inc
mov
subl
sbb
mov
sbb
jecxz
push
mov
cmp
repnz
lcall
inc
push
fwait
lods
mov
into
mov
cmpb
les
icebp
sub
push
cs
gs
minps
f2xm1
add
pop
jb
push
testl
popa
insb
cmp
lret
shl
rorl
loope
add
dec
mov
test
orb
xor
pusha
mov
das
pop
pop
push
rcll
mov
repz
fs
jmp
push
addr16
je
stos
push
push
add
xor
mov
cmpb
sbb
incb
cmp
jne
sub
cmp
jae
push
mov
loop
dec
clc
inc
dec
mov
cmp
loope
push
add
ja
push
sub
push
stos
rcrl
jo
arpl
sbb
lods
imul
shl
mov
mov
xor
rolb
mov
call
cmpsb
std
pop
cmp
shll
sbb
sbb
jmp
dec
aaa
cmpsb
adc
outsb
adc
push
clc
mov
xorl
sub
pop
push
push
adc
inc
scas
xor
mov
add
rorb
mov
add
push
pop
adc
adc
mov
and
pop
add
stos
test
or
add
xor
xchg
adc
fmuls
pop
in
mov
push
mov
daa
std
or
lret
xchg
jbe
mov
loopne
push
adc
jb
out
out
dec
clc
push
mov
sbb
push
test
pop
xor
cltd
xor
push
mov
cmp
mov
xor
push
mov
jp
lcall
and
sbb
push
lods
pop
lods
fiaddl
sbb
adc
adc
cmpsl
or
repnz
movb
push
into
add
jne
das
es
sar
test
fcmovb
inc
enter
pop
or
data16
out
push
test
cmp
in
pop
ret
mov
mov
lret
sub
test
xchg
cmp
xchg
leave
inc
enter
test
sub
mov
ret
popf
push
push
or
fimuls
mov
add
lock
sbb
loopne
push
sbb
sub
inc
cmpsl
scas
mov
mov
into
mov
repnz
ret
icebp
dec
inc
movsb
sbbb
jle
call
sub
loopne
test
jo
sbb
dec
pop
add
mov
and
sub
fnstenv
inc
pop
jne
leave
ret
pop
or
fistl
dec
leave
push
test
movsl
js
stc
jge
subl
jmp
subb
mov
fwait
lock
lods
push
dec
xchg
mov
cmpl
mov
icebp
push
sub
and
push
ret
into
jecxz
fldl
push
hlt
shr
push
xor
ret
lods
xor
test
adc
pusha
bound
dec
mov
stos
or
loopne
inc
push
faddl
je
clc
adcl
cmp
jbe
inc
mov
rcl
xchg
and
shl
inc
stc
adc
dec
ret
or
addb
shl
mov
pop
sbb
out
mov
dec
add
sar
shlb
or
xor
nop
xchg
add
jle
add
jmp
jno
mov
xor
push
mov
test
inc
push
xor
dec
arpl
mov
rcll
insb
pop
lock
xchg
loope
cmp
add
mov
adc
or
jno
cmp
movb
mov
orb
add
pop
sub
push
out
push
jo
push
mov
adc
push
cwtl
adc
sub
adc
pop
cmp
sub
orl
aaa
jmp
push
int3
push
xor
mov
mov
add
adc
lea
push
push
jl
sub
sbb
mov
fs
cmpsb
add
push
movb
pop
fldt
imul
push
cltd
insb
sbb
or
sbb
adc
jnp
mov
ja
dec
cmp
xchg
jb
aad
out
dec
repnz
arpl
jo
cltd
clc
push
pop
push
mov
js
xor
sahf
mov
and
or
pop
call
dec
adc
xchg
shrb
sbb
sbb
push
dec
ljmp
push
sbb
or
adc
call
cmp
lods
sbb
jp
xchg
inc
pop
pop
mov
leave
popf
sub
sub
fadd
mov
lods
push
add
fs
pop
ffree
aas
adc
mov
ret
push
scas
or
xor
cmpsb
inc
inc
dec
ret
jmp
mov
inc
push
pop
add
mov
pop
push
ret
fwait
adc
pop
mov
inc
mov
fs
push
dec
push
jo
inc
xor
ret
dec
hlt
jmp
sarb
icebp
mov
adc
lcall
mov
sbbb
ss
mov
sbb
xchg
pop
push
or
inc
mov
shrb
adc
add
rolb
cltd
pop
mov
add
fs
push
jbe
mov
arpl
adc
scas
ret
dec
rorb
pop
sbb
enter
jb
fadd
sbb
ret
lret
inc
add
pop
test
mov
mov
push
dec
test
cmpsl
or
test
pop
adc
mov
shrl
pop
test
mov
sbb
sbb
shl
adc
mov
xchg
push
add
lock
gs
movsl
sub
push
stos
mov
adc
mov
icebp
sbb
fs
sbbb
adc
daa
ja
fcomps
cmp
push
add
cmp
rcrb
push
jecxz
add
xor
and
jecxz
popf
and
ret
pop
icebp
pop
lods
sbb
sbb
rclb
nop
leave
popa
cwtl
sub
lret
lcall
leave
aas
movsb
push
scas
sbb
sbb
mov
xchg
or
cmp
cmpsb
add
xor
dec
adc
mov
shlb
adc
sbb
fisttpl
xchg
add
sbb
jmp
add
cs
clc
ss
ret
notb
cmp
push
cwtl
add
jmp
mov
mov
add
nop
stc
cs
or
pop
loope
mov
ror
jne
push
lea
fstl
xor
and
outsb
and
cmpsl
pop
scas
jo
sub
insb
jg
mov
xchg
out
or
xchg
xor
mov
ror
inc
int
jo
adc
pop
pop
and
and
add
es
xor
or
mov
rol
ds
add
fisubrl
jb
es
push
push
scas
sbb
aad
leave
sub
mov
xchg
xor
pop
lfs
sbb
adc
mov
adc
nop
movsl
inc
lahf
xor
push
push
or
nop
mov
push
adc
add
sub
arpl
pop
jl
or
bnd
adc
adc
insl
cmp
pop
fwait
sub
pop
stos
lret
push
roll
pop
pusha
mov
movb
add
loope
jae
insb
or
cmp
sbb
ret
push
arpl
and
fdiv
rclb
sub
xor
pop
pop
and
push
jge
sbb
pop
leave
rolb
ja
mov
lock
dec
fcomi
jge
mov
jbe
pusha
sub
sub
lcall
jbe
popf
push
rorb
enter
cmp
jb
insb
rcll
pop
add
push
cltd
mov
sub
adc
xor
mov
into
inc
push
adc
movb
xchg
adc
leave
pop
dec
lret
negb
nop
lret
insb
je
inc
xor
sbb
xchg
mov
push
add
out
dec
pop
pushf
or
int
sbb
add
or
loop
lcall
dec
xor
inc
imul
cmpsb
mov
in
jb
psubsw
or
jmp
pop
jne
pushf
notl
add
vmovlpd
or
hlt
adc
lods
or
mov
mov
lock
stos
into
rorl
push
inc
cld
or
rcrl
pop
call
inc
sbb
lods
pop
pusha
jp
lret
push
mov
orb
add
sub
and
std
mov
add
push
xadd
lret
insl
add
inc
jp
out
ljmp
call
cwtl
xchg
stos
add
xor
mov
jecxz
add
inc
subb
clc
mov
popa
rolb
sbb
inc
xorl
bound
mov
adc
xchg
clc
mov
cmpb
jecxz
sbb
shlb
imul
ret
leave
or
lock
and
inc
stc
add
push
loopne
test
add
jae
inc
xor
popa
cli
repnz
fisubs
mov
or
stos
jb
es
lcall
pop
and
or
rolb
lcall
jl
xchg
mov
nop
and
adc
icebp
mov
adc
icebp
or
add
xchg
sub
jo
js
aad
pop
or
xchg
inc
jo
les
and
das
sbb
cmpsb
stos
cmp
jp
ret
sub
sub
gs
xchg
sub
pop
call
pop
jmp
pop
ret
rcll
jmp
push
imul
mov
cmp
dec
sti
dec
push
xchg
or
out
adc
sbb
add
orl
test
sub
lretw
lea
or
inc
pop
dec
and
push
sbb
add
push
pop
in
jbe
std
jmp
or
negl
inc
lods
testb
or
repz
mov
btr
outsl
or
les
inc
hlt
jb
lds
jno
push
push
push
insl
sbb
add
xor
xchg
adc
xor
sarb
mov
hlt
mov
push
data16
pushf
clc
or
icebp
popa
xor
push
dec
lea
pop
mov
pushf
fldt
cwtl
push
popf
or
sbb
sbb
sbb
je
movsl
push
dec
roll
inc
iret
loope
repz
xchg
push
js
add
int
or
mov
push
add
sub
mov
mov
mov
adc
mov
xor
ret
cltd
push
mov
sahf
mov
or
and
test
xchg
addr16
std
cmp
ror
test
sbb
stos
test
test
test
or
push
cmp
cmp
dec
push
cmp
out
pop
mov
sbb
and
aaa
fcmove
into
cmp
jl
lock
pop
fnstenv
adc
or
cld
push
stos
push
sahf
sub
cmp
mov
or
push
or
push
push
and
xlat
nopl
jp
and
dec
mov
aas
repnz
les
xchg
mov
bound
cld
in
inc
and
cmp
sub
arpl
dec
loopne
pop
and
or
and
add
jne
add
push
adc
insb
push
ljmp
jo
and
ret
popf
and
inc
mov
xor
xor
sti
sbb
test
mov
xchg
mov
nop
sbb
add
fwait
or
cs
sbb
or
outsl
pop
imul
hlt
rclb
in
push
jmp
adc
mov
pop
adc
adc
sub
push
rclb
sahf
shr
pop
and
pop
pop
add
mov
xor
aad
and
jo
sub
fcoml
add
lret
mov
add
int
jmp
or
les
dec
xor
inc
jb
dec
sub
xor
out
push
dec
in
push
xlat
aas
pop
mov
shll
xchg
inc
out
mov
and
dec
hlt
pop
aad
orb
mov
cmp
push
in
popa
test
add
xchg
scas
call
sbb
sub
out
or
mov
pop
push
imul
fcmovu
jne
test
das
jl
push
mov
xchg
mov
pop
test
mov
sub
lahf
lods
pop
or
pusha
mov
or
add
xchg
push
test
pop
outsl
sbb
sbb
sbb
rcll
dec
xor
xor
pop
stos
or
adc
loope
mov
iret
imul
loope
popa
or
xor
pop
push
mov
and
add
mov
mov
das
test
inc
es
test
push
es
push
mov
fs
pop
add
rcl
into
out
push
cltd
sets
inc
ja
add
loop
jns
test
sbb
in
or
jb
shlb
outsb
out
push
push
sbb
enter
movsb
inc
loope
add
push
orb
ljmp
add
loop
into
loopne
dec
movsb
ret
push
xchg
mov
sbb
ret
loopne
sbb
push
push
or
stos
jno
stos
dec
orl
pop
rcrb
repz
das
mov
faddl
daa
mov
pop
sub
sub
loop
adcl
icebp
or
mov
mov
lods
add
adc
or
movsb
push
leave
push
fildl
dec
add
sahf
mov
mov
jo
aam
ret
scas
paddusw
adc
add
sbb
inc
cmc
and
mov
cwtl
dec
rcrw
sub
sbb
orb
push
xchg
aad
sbb
jmp
shlb
jb
push
adc
add
loope
adc
loope
lods
push
test
outsl
mov
xor
aas
mov
sbb
push
popf
sbb
sbb
push
jo
shl
fidivrs
push
mov
add
pop
xor
dec
sbb
sbb
cmpsb
sbb
jno
mov
dec
push
adc
stc
push
mov
or
sub
mov
leave
bound
fdivrl
cmp
dec
iret
adc
add
mov
jne
ljmp
into
popa
and
sub
adc
push
pop
push
jne
notb
sub
das
fimull
add
cld
or
in
jnp
sarl
shlb
cwtl
push
mov
mov
test
pop
mov
mov
rolb
add
push
adc
test
lock
jo
les
rcll
decl
or
in
pushf
or
rorl
mov
aam
shll
cmp
or
push
xor
push
sub
ja
shll
lret
jmp
mov
inc
or
or
mov
rclb
mov
add
addr16
adc
add
add
push
pop
cmp
add
shrl
pop
pop
jnp
push
data16
and
loopne
call
lock
andb
loopne
or
lcall
sbb
lds
int3
add
or
gs
sub
mov
xchg
pop
ficoms
adc
xor
pop
inc
loope
bound
fldt
and
cltd
or
push
mov
or
divb
push
push
mov
inc
push
and
inc
dec
adc
dec
mov
xor
or
push
xchg
pop
adc
pop
test
jg
out
xor
mov
ss
mov
ret
sub
std
insb
push
push
xor
stos
push
pop
jae
into
lcall
clc
add
pop
cmp
ficoml
ljmp
fbld
inc
jno
push
mov
call
inc
sbb
inc
mov
imul
sti
int3
aas
outsb
and
pop
xchg
mov
xchg
bound
in
js
or
xor
rcrb
cwtl
add
pushf
test
jp
add
and
mov
adc
shll
jo
push
or
popa
and
dec
outsb
cmp
test
sbb
jno
push
and
add
ljmp
test
faddl
xor
fisttpll
cmp
stos
push
lods
test
mov
inc
jecxz
xlat
jbe
in
cmp
cmpsl
add
mov
cmp
add
pop
sbbb
jge
sub
cmp
add
adc
leave
insl
push
subl
shrb
fcmovnbe
adc
jo
inc
pop
or
cmp
inc
cmp
ja
test
xor
aaa
add
cmp
mov
lahf
mov
gs
sbb
and
jae
je
mov
mov
inc
sbb
push
scas
inc
and
mov
scas
or
mov
roll
inc
lret
inc
adc
adc
and
lahf
adc
push
cmp
mov
sub
inc
push
xorb
es
negb
xchg
call
pop
pop
sbb
lods
icebp
dec
sub
push
add
adc
xor
sbb
rcr
out
enter
jge
jno
rcrl
xchg
ds
pop
push
mov
incl
sarb
sbb
mov
adc
mov
xchg
mov
or
rolb
add
push
sbb
call
mov
dec
test
push
popl
sbb
sbb
call
mov
lret
mov
movsb
sbb
xor
div
loopne
roll
inc
push
push
out
lret
sbb
es
dec
adc
inc
sub
add
leave
leave
jns
outsb
movsb
push
push
or
or
and
insl
push
sarl
mov
or
fidivl
or
push
stos
int3
adc
push
add
xchg
push
adc
push
mov
push
push
pop
sub
sub
jnp
jb
mov
cwtl
shlb
pop
add
orw
movlps
add
adc
sbb
addr16
and
sub
dec
hlt
add
push
mov
cmpsl
pop
stc
pop
push
or
into
lock
lret
sub
and
dec
sar
and
xchg
mov
push
sub
orb
or
lods
sub
arpl
inc
insl
push
idivl
iret
or
jno
push
sub
lcall
in
push
cs
inc
push
dec
xor
inc
daa
cwtl
fs
lea
mov
je
addb
xchg
ret
cmp
js
or
dec
loopne
pop
scas
gs
in
push
xchg
xchg
push
pop
pop
jo
jae
jge
repnz
or
push
daa
push
jbe
dec
dec
cli
test
ret
push
cmp
add
pop
jo
mov
add
push
loop
adc
rclb
push
and
sahf
sbb
push
adc
addb
dec
movsl
adc
cmp
inc
packssdw
push
or
pop
or
lds
or
sbb
dec
adc
ror
push
xor
subb
sub
les
loopne
xchg
add
push
add
dec
or
push
mov
and
adc
adc
inc
or
xor
call
adc
lret
ljmp
in
and
outsl
adc
xchg
ret
in
mov
lret
cmpsl
dec
popf
roll
and
ret
adc
or
clc
mov
mov
push
loope
cwtl
jno
adc
sub
pop
test
and
inc
add
sbb
mov
dec
in
call
rcrb
dec
push
sbb
adc
sbb
cmp
sub
add
addr16
mov
mov
mov
sbb
jmp
add
cmp
push
lahf
rcr
or
adc
fnstenv
inc
shl
push
add
neg
xchg
leave
add
pop
lods
cltd
jne
pop
sbb
adc
adc
inc
loop
xchg
bound
mov
dec
setb
cltd
sub
test
mov
pop
and
ret
aam
enter
sub
test
xor
jbe
test
or
aad
lret
cld
mov
jl
shl
xchg
sub
data16
daa
mov
mov
jbe,pn
sbb
rcl
gs
push
dec
out
inc
add
loope
sti
lods
xchg
jge
and
loope
pop
mov
leave
dec
or
enter
pop
rol
push
xchg
jp
imul
sub
jl
or
add
dec
js
adc
sub
jmp
inc
xchg
repz
cmp
push
inc
xor
pop
push
ret
test
or
add
mov
add
pusha
jl
pop
popa
cmp
add
pop
call
push
pop
lret
out
aam
aam
shlb
mov
pop
xchg
arpl
ds
pusha
andl
dec
fcmovnbe
ds
out
jb
test
iret
das
popf
ret
add
xchg
add
jo
fsubrl
dec
xor
mov
xor
std
out
rclb
add
add
pop
outsl
cmp
dec
xchg
sbb
shl
nop
add
repz
sub
or
mov
push
into
sub
and
insl
lahf
enter
or
cltd
push
movsb
pop
xchg
add
test
inc
add
pop
pop
clc
call
jmp
sbb
pusha
cmp
push
sub
sub
push
xor
pop
push
sarb
mov
jp
push
adc
cmc
shll
out
mov
aad
out
adc
add
and
pop
shr
adc
sub
sbb
mov
xor
adc
negb
xor
push
sub
xchg
loopne
enter
cmp
stos
testb
adc
je
sub
ficompl
mov
pop
xchg
out
lock
cmp
pop
and
sbb
or
cs
lock
or
rclb
push
adc
enter
cmp
mov
cltd
cmp
mov
insb
ret
lea
lret
add
sbb
imul
je
test
adc
jae
mov
xchg
add
data16
lods
ljmp
or
dec
add
int
cmp
dec
dec
or
push
daa
push
add
cmp
js
mov
scas
cmc
and
cmp
and
cmpsb
sahf
leave
push
push
push
jl
bound
push
rolb
mov
jb
or
inc
push
fstps
add
test
adc
or
mov
lcall
dec
push
xor
dec
sbb
adc
sbb
inc
fiaddl
push
fsubrs
sbb
xchg
pop
orb
pop
xor
inc
lret
mov
mov
jo
mov
ror
jo
mov
into
pushf
add
sarb
push
mov
add
int3
shrb
push
js
mov
sbb
sub
test
mov
dec
or
or
loop
loopne
pusha
dec
loop
enter
cs
jmp
push
or
mov
test
sbb
in
pop
cli
push
std
mov
mov
std
leave
lret
inc
mov
cmp
pop
xchg
adc
arpl
cwtl
cmp
xor
adc
shll
and
cs
sub
out
push
jae
push
lcall
test
aam
mov
xchg
mov
ljmp
sbb
pop
lret
enter
je
sub
std
rol
scas
stos
sub
xchg
orl
push
dec
shlb
loope
idivb
xor
call
xor
loopne
shrl
sub
dec
push
or
orl
sub
push
and
mov
jo
fs
mov
push
adcb
inc
xchg
sahf
sbb
inc
mov
daa
add
scas
pop
sbbb
mov
push
push
imul
push
aad
pop
roll
fwait
or
xor
call
inc
pop
sbb
push
mov
clc
jmp
shlb
loopne
cmp
cmp
or
mov
pop
xchg
inc
add
es
dec
mov
or
inc
jl
roll
fwait
mov
pushf
jno
sbb
fimull
or
xorb
ret
or
stos
lcall
lods
pusha
js
adc
mov
push
mov
dec
lret
inc
jo
addb
mov
push
mov
lods
inc
or
call
push
ja
and
or
sub
shlb
dec
call
adc
xor
incb
push
scas
scas
lret
sbb
dec
xchg
lds
flds
sbb
mov
dec
addr16
les
push
xchg
xor
lds
mov
dec
jno
adc
push
add
pop
adc
pushf
stos
popf
ja
fiadds
insl
mov
xor
or
mov
sti
fistl
mov
or
inc
mov
enter
cmp
xchg
int3
xchg
mov
hlt
enter
push
pop
into
mov
sub
int3
icebp
in
push
out
add
data16
loopne
rorb
sub
inc
mov
mov
or
ss
test
sarb
sub
aaa
cmp
das
cmp
insl
aad
jae
in
push
pop
pop
jecxz
rolb
lret
not
icebp
hlt
jae
shlb
lret
lods
bound
push
sub
mov
ds
inc
in
xor
sahf
insl
push
int
in
cmp
loope
int
cmp
dec
rclb
inc
add
lret
cli
add
call
shlb
xor
sbb
push
or
xor
popf
mov
adc
or
add
mov
jb
daa
mov
dec
shlb
pop
out
dec
jo
lea
sbb
test
in
ret
xchg
ret
xchg
loope
sarb
mov
fwait
enter
test
imul
jmp
aad
test
andb
hlt
movsl
add
or
sub
ret
mov
cmp
pop
or
les
movsb
mov
or
sub
mov
xchg
test
add
cmp
and
pop
int3
jns
test
xor
rcll
push
jmp
push
cs
push
or
fsubrs
outsl
xchg
mov
push
xadd
add
mov
das
inc
scas
add
xor
mov
add
sbb
jae
jno
or
mov
push
or
inc
cwtl
xchg
mov
xlat
mov
test
rcrb
add
lretw
sub
inc
addr16
rolb
adc
sbb
sub
push
xchg
sub
outsl
cmp
pop
into
js
cmp
aas
adc
dec
or
adc
movl
rorl
loopne
inc
test
rcl
push
xor
call
add
dec
fcoms
stos
or
popa
jge
cwtl
pop
mov
pop
inc
ljmp
daa
cmp
xchg
sbb
mov
or
lea
mov
gs
in
xor
cli
or
or
and
jl
sti
lds
lock
dec
pop
or
push
push
ffreep
add
or
or
sub
inc
ljmp
aad
sarl
incb
push
push
push
adc
movsb
xor
out
cltd
test
roll
aad
jnp
add
aaa
push
mov
lea
stos
push
cmpsl
mov
lock
loope
inc
or
push
out
bts
push
push
jp
xorl
jg
pop
bound
cmpsl
inc
sbb
xchg
scas
orb
cmp
shr
inc
mov
das
mov
and
xchg
and
loope
aad
fs
out
push
xor
lds
pop
mov
sbb
lods
pop
xchg
xor
dec
xchg
mov
mov
sbbl
sbb
loop
dec
push
mov
mov
push
adc
test
inc
sti
xlat
xor
sub
pusha
xor
pop
inc
ja
shlb
int
pop
push
pop
loopne
mov
pop
aam
inc
sub
xor
pop
jp
xchg
lds
dec
push
rcll
dec
aam
fwait
push
and
dec
sahf
cld
nop
add
roll
xchg
mov
sub
push
popa
mov
shl
sar
ljmp
pop
push
loop
pop
add
leave
scas
es
push
push
inc
pop
lock
sbb
jne
and
jae
push
xor
lret
in
imul
xor
jp
sub
jno,pn
sub
mov
mov
sarl
adc
ljmp
fildl
or
icebp
adc
int
xor
sbb
pop
sbb
lea
push
sub
and
add
cmp
fcoml
lock
inc
js
and
dec
lods
sbb
cwtl
xchg
mov
mov
xchg
mov
mov
or
ljmp
iret
in
shll
fwait
out
test
das
mov
inc
mov
js
push
inc
push
or
mov
mov
push
test
pslld
mov
push
jbe
sbb
add
cltd
rol
xor
lea
rorb
and
pushf
pop
repnz
mov
add
adc
addr16
mov
mov
sbb
cltd
jns
outsl
push
xlat
or
punpckhdq
call
inc
movsb
adc
loopne
ds
movb
test
cs
scas
pop
pop
pop
es
push
push
loop
push
and
rorb
lahf
popf
sub
push
mov
jecxz
push
stos
xor
cmp
call
call
movsl
push
inc
les
xchg
sbb
push
ret
mov
add
inc
push
js
jmp
loopne
in
ret
jne
xchg
call
cmpsb
pop
ljmp
ret
fiaddl
mov
mov
stos
adc
jecxz
xchg
pop
movsl
sub
sbb
lds
jbe
dec
rclb
push
push
call
loopne
cld
test
jae
adc
sub
cmpsb
cmpsb
adc
sbb
fwait
ret
lods
test
pop
or
xor
shl
mov
or
ljmp
cmp
icebp
adc
dec
orl
insb
or
mov
mov
in
jo
xlat
jmp
xor
xchg
or
xor
push
shlb
jbe
pop
aad
push
and
mov
add
pop
sbb
and
adc
cwtl
or
jl
mov
les
push
fwait
mov
mov
mov
mov
into
popf
push
push
lods
inc
shrb
out
dec
mov
push
dec
adc
pusha
adc
xchg
arpl
and
nop
leave
pop
ret
mov
add
cs
mov
subl
icebp
add
sti
jl
jmp
jnp
test
inc
mov
sbb
jg
sub
inc
pop
pop
jo
jne
icebp
mov
bound
cmp
call
and
sub
sahf
ljmp
cmp
push
into
inc
test
sbb
add
ds
leave
jo
clc
lods
es
cwtl
cmpl
and
or
fstpl
push
arpl
adc
or
push
xchg
add
inc
sbb
or
cmp
mov
xchg
call
lds
stos
mov
ret
adc
inc
and
jg
mov
sbb
int
and
push
xchg
sbb
sub
or
fstl
pop
cmc
mov
dec
inc
xchg
stos
lods
add
adc
or
adc
ss
or
or
mov
and
shl
imul
sub
push
rorl
lods
adc
sbbb
ds
icebp
lahf
lea
call
and
or
scas
adc
fmuls
mov
js
adc
cmp
test
enter
sbb
sbb
push
lds
into
push
add
and
bound
mov
mov
xchg
add
cmpsl
inc
cmp
add
outsl
aad
cwtl
rcl
push
and
add
int3
sub
or
lods
mov
sbb
in
dec
and
sbb
or
pusha
mov
sub
adc
pop
sbb
mov
push
imul
inc
and
clc
add
mov
cmp
ret
sbb
aam
xchg
aad
sbb
or
enter
push
lret
xor
sbb
cwtl
or
enter
ljmp
push
ret
mov
push
inc
adc
inc
sub
jle
cs
sbb
fsubp
sbb
mov
repnz
repz
je
adc
int
inc
xlat
popf
subb
imul
xor
mov
cmp
push
xor
scas
pop
sub
add
movsl
call
mov
xchg
add
cmp
mov
and
dec
add
push
and
stos
sub
adc
xor
adc
out
mov
test
jbe
xor
dec
or
or
scas
andb
nop
and
fiaddl
orl
rorb
mov
ljmp
jne
adcl
add
sbb
mov
aam
sbb
or
call
push
inc
push
scas
or
mov
in
mov
mov
mov
nopl
and
push
mov
mov
inc
push
sub
sbb
inc
jmp
cmp
sbb
shlb
or
addb
jnp
lea
and
or
adc
or
das
xchg
clc
push
add
bound
rolb
cmp
out
or
mov
sbb
ljmp
sub
mov
add
add
sub
dec
sbb
je
pop
popf
add
dec
add
pusha
xor
jb
into
add
lds
icebp
je
imul
ret
mov
jo
push
cmp
mov
dec
mov
and
jb
inc
arpl
mov
sbb
les
xor
add
jo
pusha
and
add
repz
adc
loope
xorb
addr16
lret
std
inc
cwtl
push
push
hlt
jl
shl
js
loope
das
push
decl
inc
sbb
push
push
add
xchg
mov
icebp
sbb
rclb
rorl
loope
or
add
repz
cld
mulb
pop
fs
cld
add
sbb
sbb
daa
rorb
inc
jmp
push
mov
sarl
das
sub
hlt
sbb
imul
add
sbbw
out
adc
mov
test
aam
ror
cmp
js
add
inc
and
not
push
test
insb
mov
push
orb
xor
or
stos
sbb
sbb
or
dec
or
cltd
or
test
gs
xchg
or
xchg
test
push
cs
psrad
clc
loop
out
sbb
adcb
subl
dec
rcll
and
or
cmpsb
mov
pushf
mov
sbb
movsw
mov
adc
in
xchg
xor
inc
mov
add
dec
or
popa
imul
nop
mov
push
insb
sub
push
xchg
jnp
inc
mov
sub
or
rcl
jo
pop
je
sbb
cmc
lock
mov
mov
pavgb
ret
or
mov
add
jo
and
pop
inc
rorl
push
jg
adc
push
push
mov
and
data16
adc
mov
push
into
or
mov
pop
dec
adc
pop
push
movsb
inc
mov
push
orb
push
test
adc
sub
stc
mov
push
mov
shlb
ret
push
xor
inc
adc
mov
pop
fstpl
pop
cmc
push
scas
shll
or
add
stos
out
inc
shlb
sbb
repnz
mov
aas
lret
dec
pop
inc
add
push
jmp
or
lds
shll
or
dec
mov
sbb
add
pop
inc
lret
cmp
push
inc
push
rol
push
xchg
mov
mov
and
cwtl
xor
mov
sbb
cltd
cli
push
rclb
sub
lret
adc
cmp
out
or
sbb
jg
add
mov
rcrl
pop
cmpsb
and
out
add
lods
jo
push
ja
adc
mov
mov
push
ss
jnp
xor
xor
sahf
add
push
sysexit
adc
lods
addb
jbe
lds
inc
mov
cmpsb
push
push
andl
mov
mov
out
dec
add
and
push
pusha
xchg
fmull
sub
pop
push
shrb
sbb
xchg
aam
sbb
push
or
lret
bound
inc
aas
or
and
push
mov
sbb
movsl
adc
xchg
mov
jmp
push
xchg
subb
sbb
and
rcrb
mov
loope
push
dec
mov
in
sbb
ljmp
stc
or
push
cmp
mov
mov
push
cmp
shll
sbb
ficoml
shll
loope
popf
das
bound
rolb
rorl
push
stos
sbb
mov
add
sub
enter
xor
js
sub
and
sbb
scas
xchg
sub
push
loop
out
mov
or
data16
dec
test
xorb
shrl
jp
adc
lahf
inc
stos
xor
jae
mov
sub
movsb
mov
out
add
test
ljmp
inc
inc
sar
faddp
and
push
mov
inc
icebp
mov
not
pop
jno
xor
xor
or
jno
adc
adc
xchg
subl
mov
loopne
add
ret
sbb
pop
movsl
ja
mov
sub
cmp
xlat
push
pop
sbb
lahf
cmp
add
ret
hlt
pop
aaa
int
adc
fldenv
mov
adc
test
lcall
test
ret
or
cmp
cmpsb
pusha
aad
loop
push
add
or
push
xor
sbb
xlat
xor
cmpsl
sbb
test
add
adc
mov
ret
push
mov
inc
aad
rol
call
inc
js
jp
lods
mov
push
in
in
sub
or
icebp
xchg
push
adc
cld
adc
inc
or
les
add
or
ret
mov
inc
shll
push
lds
subb
stos
rolb
inc
pusha
jbe
and
push
jbe
lret
out
test
dec
scas
mov
mov
cwtl
sahf
or
dec
xor
lret
mov
pop
out
jae
xor
test
popf
cmp
scas
and
loope
jo
loopne
dec
dec
xchg
test
or
out
hlt
add
pushf
pop
pop
sub
dec
dec
mov
add
pop
push
dec
je
xor
in
popa
xchg
mov
ljmp
jmp
pop
mov
xchg
push
adc
adc
sbb
lea
adcb
cmp
shll
testb
push
push
roll
push
dec
daa
adc
push
pop
add
adc
push
push
lock
pop
addl
pushf
loopne
sbb
mov
je
sub
cmp
add
dec
shlb
fstpl
fucomi
lret
cmp
mov
cmpsl
popa
repz
and
out
push
mov
mov
xor
mov
aad
pop
sbb
add
sbb
andl
mov
add
lret
pop
cs
pop
lock
leave
nop
imul
add
mov
mov
pushf
cmp
pop
leave
or
test
xlat
or
mov
adc
dec
pusha
insl
sahf
xor
ret
test
test
or
mov
add
out
push
push
call
ret
cmc
aam
lcall
data16
jl
xchg
aad
add
jo
ret
das
mov
jge
lods
mov
sbb
lock
xchg
in
pop
in
shl
jmp
lock
lods
and
or
pop
int3
sub
jl
fisubl
subl
cmp
dec
xor
jbe
or
mov
add
or
shll
mov
mov
sbb
ljmp
or
in
ret
iret
mov
and
jl
add
sbb
das
testb
inc
sub
jns
not
add
sub
icebp
daa
sub
mov
sub
outsb
add
sub
xor
adc
je
cmp
and
adc
pop
xor
cltd
loop
xchg
mov
fwait
inc
shlb
add
jmp
ret
sub
adcb
lret
mov
pop
xchg
rcll
popa
js
cmpsb
sbb
into
mov
out
pop
xor
sbb
adc
push
inc
ret
dec
push
mov
shlb
es
sbb
nop
inc
popf
jbe
push
sbbl
push
add
mov
inc
test
or
or
filds
ret
pop
push
or
into
adc
sub
mov
push
or
aad
je
dec
popf
pop
push
jae
inc
icebp
clc
push
shlb
lock
push
xlat
test
clc
or
inc
push
cmpsl
jl
mov
sbb
jb
mov
add
sbb
mov
std
push
or
and
pushf
or
and
sbb
xchg
lret
stc
push
sub
pop
inc
mov
xlat
xchg
sub
fbstp
xchg
mov
dec
or
push
sbb
mov
pop
loop
mov
xchg
add
push
or
sub
or
lret
push
mov
mov
mov
or
stos
push
jmp
and
push
jbe
rorl
imul
adc
sbb
cmp
repz
addl
mov
and
rcl
aad
sbb
fs
push
icebp
mov
icebp
adc
pop
or
cmpl
lds
jge
sbbb
add
rcll
xchg
jb
pop
lds
pop
repnz
dec
les
and
bound
sbb
jne
cltd
test
jbe
dec
sbb
adc
push
push
mov
int3
cmp
and
loop
lcall
sub
mov
sbb
sbb
add
incb
test
jge
icebp
mov
call
imull
or
inc
orb
cmp
es
addb
fwait
mov
popf
and
inc
push
leave
shll
cmp
popa
rcrb
mov
and
inc
cmp
or
and
inc
jmp
loopne
imul
cmpps
hlt
sbb
adc
fdivl
ret
add
push
jae
xor
loop
jp
insb
and
daa
pop
aad
adc
ret
add
icebp
mov
cmp
mov
es
loope
add
push
inc
stos
pop
pop
mov
jno
adc
inc
push
enter
rolb
lret
arpl
fdivr
mov
push
cld
adc
cltd
or
jmp
adc
or
push
fwait
rcrb
shl
push
enter
jmp
xor
push
pop
rcll
mov
cmpsb
xchg
clc
push
or
sub
and
sbbb
stos
daa
add
rorl
imul
das
sbb
sbb
jmp
in
push
cmpsb
push
shll
rolb
push
or
pop
mov
dec
push
mov
add
lret
pop
xchg
adcb
push
push
push
cltd
lea
mov
add
or
add
mov
add
fnstsw
js
and
mov
stos
push
xchg
hlt
rcrl
data16
adc
aam
xor
jp
cmpsb
cmp
sub
xchg
push
push
hlt
inc
popa
inc
test
fwait
enter
pop
call
dec
lods
adc
pop
shll
cmp
into
sbb
inc
sbb
push
movsl
mov
adc
pop
and
mov
repz
pop
adc
mov
adc
leave
xor
jl
cmpsb
sbb
lret
hlt
scas
outsb
test
add
adc
lcall
mov
adc
sbb
adc
jo
or
sbb
mov
daa
pop
jo
sub
scas
rorl
inc
lret
inc
inc
js
sub
loop
pop
lods
or
cmpsl
pop
add
push
xchg
xchg
aam
add
test
ret
sbb
sar
loopne
or
xor
pop
lock
sbb
shrb
jno
or
jo
sbb
sbb
mov
scas
push
cltd
ds
mov
rsm
or
cmc
imul
fldt
mov
and
sub
arpl
xchg
pop
or
adc
mov
jmp
push
mov
inc
rolb
mov
pop
insb
and
test
mov
iret
jl
add
add
pop
in
sub
inc
loope
dec
sub
jmp
rcl
aam
dec
adc
orl
jle
leave
int3
test
cmpsl
dec
adc
dec
lea
adc
adc
add
or
sbb
and
jmp
mov
lret
orb
pop
sub
mov
stos
and
pop
ss
rolb
sub
lods
mov
pop
mov
shlb
aas
mov
push
sub
push
arpl
and
xor
ja
loopne
gs
and
mov
xchg
inc
xor
xchg
or
rcrb
push
push
leave
loope
xchg
mov
bound
lea
int3
mov
pop
inc
insb
scas
xchg
movb
jge
add
push
adc
sbbb
rclb
insb
les
shlb
cmp
adc
fisubrl
loopw
sbb
xchg
leave
popf
orb
sarb
push
call
orb
inc
jl
sbbb
and
mov
icebp
adcl
xor
shll
test
xor
popa
lahf
sbb
loope
push
hlt
mov
es
jno
pop
inc
sub
fisttpll
xor
addb
arpl
jp
inc
push
adc
adc
shlb
shll
fnstenv
push
pop
popa
push
mov
add
cmp
jae
call
mov
push
sbb
cmp
mov
xor
lods
stc
or
ror
sbb
pop
push
std
lret
add
js
enter
or
rolb
mov
sub
sbb
int3
out
mov
je
rclb
and
adc
xor
out
add
add
or
inc
popa
lcall
cmc
inc
das
push
adcb
xorl
add
add
xchg
push
dec
stos
sub
and
push
sbb
mov
in
ret
xchg
adc
test
inc
adc
outsb
aam
push
pop
xchg
add
je
jo
daa
inc
mov
xchg
pusha
cli
pop
les
inc
rclb
scas
xor
mov
aad
adc
addb
and
or
push
add
dec
cltd
dec
ljmp
dec
adc
call
int
push
or
push
hlt
add
int
push
in
mov
inc
int
dec
bnd
int3
lcall
pop
adc
sub
sbb
enter
adc
xchg
jo
jecxz
push
subb
clc
dec
lds
add
sub
test
adc
mov
jmp
add
jge
sbb
jne
mov
jo
sbb
fsubrs
or
inc
pop
cmp
dec
adc
pop
sub
repnz
xacquire
push
jb
mov
leave
adc
call
push
out
addb
mov
pop
jg
enter
addr16
or
mov
push
adc
lock
pop
fs
addb
adc
and
repnz
mov
rolb
mov
ds
andb
push
xor
xor
adc
jp
push
adc
adc
sub
adc
sub
adc
add
pop
mov
or
lods
push
inc
in
inc
std
lret
inc
sbb
or
cmpsb
xchg
xchg
test
loopne
or
mov
loopne
fnstsw
cmp
mov
pop
xor
adc
cmp
adc
cs
mov
mov
loop
pop
pop
push
sub
push
lock
inc
add
xchg
rcll
hlt
or
sub
cs
out
lret
or
mov
ret
lea
pop
sahf
pop
xor
push
rorl
jge
cmp
cmpsl
fidivl
lock
lods
dec
lock
inc
xchg
enter
pop
pop
or
inc
das
rolb
fwait
and
add
rcll
jle
add
lds
jg
push
test
add
and
cmp
rolb
hlt
inc
test
sbb
cmp
paddq
add
inc
fdiv
mov
pushf
sub
ret
icebp
das
jo
push
mov
mov
mov
or
mov
mov
push
nop
push
or
xlat
push
sub
inc
daa
mov
test
push
push
je
sbb
xchg
imul
cmp
fisubrs
sub
xor
push
adc
ret
push
mov
and
int
or
push
cmp
jb
orb
inc
mov
pop
sub
arpl
iret
inc
mov
loop
cmp
addr16
lods
adcl
dec
leave
add
adc
movb
rclb
adc
mov
hlt
push
and
cli
and
xchg
int
xchg
jo
lods
xor
push
push
adc
mov
inc
pop
adc
xor
adcb
es
push
in
dec
adc
add
or
cmp
add
cs
lea
pop
mov
daa
adc
repz
loopne
fimuls
mov
or
ret
mov
cmp
add
sbb
add
inc
and
xchg
mov
add
push
push
cltd
push
daa
push
xchg
xchg
addb
pop
and
stos
lea
es
test
aam
sbb
or
jb
ret
push
into
xor
hlt
fiadds
or
dec
mov
movsl
lea
pop
inc
add
es
rcll
dec
lock
das
pop
xor
mov
mov
shrb
push
shrb
push
lahf
push
ffreep
sbb
xchg
cmc
fiadds
sub
pop
repnz
or
sub
ffreep
adc
sub
add
mov
push
pop
out
in
and
mov
mov
leave
adc
cmp
xor
xchg
adc
add
enter
add
mov
sub
xchg
rol
adc
popf
stos
sub
mov
pop
shrl
sahf
jne,pn
add
stos
scas
adc
adc
mov
fisubl
jmp
dec
dec
jnp
add
data16
sbb
cmpb
adc
rclb
and
in
in
jmp
int
mov
sti
lret
xchg
dec
inc
push
scas
mov
add
nopl
push
cmpsb
pop
push
and
or
add
xor
sub
cmp
sbb
icebp
mov
js
ficompl
cmp
and
mov
rclb
sbb
xchg
push
sbb
stos
jb
or
push
addr16
inc
cmp
xchg
push
out
mov
push
imul
sbb
loopne
and
addr16
jb
and
mov
mov
push
cmp
fbld
out
out
dec
jbe
sbb
icebp
lock
scas
inc
fs
or
push
popa
pop
lock
mov
rcll
add
mov
adc
dec
push
arpl
adc
bound
push
mov
mov
scas
jb
push
jns
pushf
push
je
es
enter
inc
jae
adc
into
sbbl
mov
aas
lret
push
js
ljmp
or
idivl
xchg
add
arpl
pusha
imul
xchg
mov
movb
int3
push
or
push
push
push
push
pop
mov
push
insl
outsl
adc
cld
fcomps
pop
or
mov
push
adc
add
mov
xchg
arpl
push
xchg
scas
lock
adc
lcall
xchg
cmp
push
or
inc
pop
lret
xchg
ret
es
or
xor
mov
pop
push
ljmp
push
bound
or
and
or
lsl
push
add
addr16
dec
and
fcoml
scas
push
orl
push
jo
ss
add
mov
lahf
inc
pop
stos
xchg
test
mov
orb
shll
or
aam
xchg
add
push
nop
jae
loopne
mov
out
jmp
jp,pt
daa
clc
adc
pop
insl
loope
int3
into
cmp
dec
pop
pop
shrl
iret
mov
xor
cmpl
push
or
push
test
inc
test
rcrb
and
repz
into
adc
stc
add
call
clc
pop
adc
cmpb
in
push
hlt
mov
repnz
adc
push
in
mov
cmp
stos
pop
cmp
ret
cmp
lahf
bound
sbb
inc
out
imul
shll
cmp
outsl
mov
add
call
xor
mov
or
pop
and
and
push
scas
loop
ret
inc
mov
outsb
mov
jecxz
test
rolb
call
enter
push
and
aad
aad
adcb
outsb
inc
adc
push
sbb
sub
ja
popa
ljmp
push
and
jbe
mov
xor
sbb
xchg
scas
sbb
or
loope
movsb
loope
mov
mov
pop
cld
push
pop
cmc
mov
and
sti
sbb
subl
mov
inc
sbb
push
rclb
cmp
pop
sbb
sbb
push
daa
and
inc
sti
mov
sbbb
lds
push
mov
arpl
adc
aaa
and
and
and
pop
push
cmp
pusha
sub
sub
lods
pop
mov
rol
ret
adc
pop
ja
aad
adc
sbb
cmp
es
sub
int
dec
nop
mov
cwtl
xor
loopne
ljmp
push
mov
pop
mov
sbb
aam
cmpsb
xor
mov
mov
mov
sub
mulx
pop
sbb
add
lods
or
and
add
shld
xchg
loop
jne
adc
inc
or
rclb
adc
mov
jb
sahf
push
imul
push
lret
es
jnp
dec
xor
adc
push
mov
xor
dec
xadd
adc
xlat
push
mov
pextrw
sub
push
cmpsb
pushf
stos
or
imulb
pop
or
pop
movsb
setnp
mov
lock
sbb
push
pop
or
or
push
mov
popa
orl
inc
xor
addb
cltd
jnp
push
mov
adc
adc
dec
in
loop
pop
stc
jge
dec
dec
push
addb
bound
cwtl
sub
or
sbb
roll
sbb
sbb
sub
inc
push
add
xor
sbb
adc
and
cmpsb
mov
dec
ret
xor
push
scas
and
jb
and
push
and
or
lret
call
out
push
test
push
ret
mov
out
add
fwait
and
adcb
jl
adc
adc
scas
inc
and
aad
mov
jmp
mov
nop
mov
rorb
push
adc
jecxz
inc
sub
add
iret
push
sbbb
ss
inc
cmc
push
cmc
add
jne
pop
adc
leave
sbbb
enter
add
inc
gs
aad
rcrb
and
xor
mov
pop
fildl
push
popa
sub
shrb
adcb
cmp
push
lods
pop
movsb
sti
icebp
aam
cli
or
adc
std
push
jno
add
adc
stos
pop
push
or
dec
lock
add
and
cmp
sbb
and
jp
rcr
sbb
inc
inc
roll
adc
lds
xlat
cmpsl
add
push
push
dec
icebp
lock
push
repnz
mov
or
inc
or
jo
imul
add
imul
dec
dec
out
push
lea
push
inc
sbb
sahf
inc
mov
mov
xchg
xchg
std
rolb
orl
daa
adc
aad
sahf
add
and
sbb
sub
rol
inc
adc
add
pop
sbb
enter
test
loope
insl
movb
xorl
sti
adc
xor
add
xchg
cmp
dec
adc
call
sub
aam
jnp
push
stos
sbb
ret
inc
mov
or
mov
xor
lret
mov
mov
das
outsb
xchg
scas
ss
test
test
cmp
repz
xchg
adc
je
mov
test
std
adc
lret
adc
or
lret
leave
mov
pop
add
jg
sahf
pop
push
rcll
or
or
jnp
and
mov
pop
add
sub
pop
sar
shll
mov
sarl
push
cmp
jo
pusha
adc
jo
lods
sbb
adc
imulb
ret
ret
jbe
loop
or
sbb
adc
das
add
adc
cmp
or
dec
cli
dec
pop
sbb
pop
adc
in
add
ret
mov
dec
adc
jp
mov
xchg
pusha
or
add
inc
ror
cmpsl
mov
repnz
xlat
pop
scas
inc
ja
outsb
lods
adc
sub
hlt
pusha
mov
mov
push
adc
or
push
or
repz
inc
sub
jne
sbb
insb
or
and
pop
xor
push
daa
bound
cmp
xchg
scas
mov
dec
rol
addr16
xadd
add
pop
fistpll
cwtl
inc
filds
lds
rcr
mov
xchg
rcll
inc
lods
pop
ss
pop
adc
call
xor
mov
sub
rol
push
xchg
or
mov
and
shl
or
cmp
mov
push
push
xchg
dec
inc
pop
sub
mov
out
lcall
sbb
sbbb
stos
push
xchg
xor
adc
pop
mov
inc
jb
mov
push
cmp
sbb
add
push
adc
cltd
sbb
sbb
adc
jne
adc
daa
inc
add
dec
fadd
out
inc
sbb
xchg
inc
arpl
adc
lods
push
rolb
push
jp
sbb
das
xchg
push
cmp
inc
mov
sbb
sahf
orb
cltd
into
add
js
add
test
pop
cmp
xor
xor
loop
dec
or
inc
cmp
sbb
pop
rcrl
pmaxub
fisubrl
push
jecxz
rol
cwtl
nop
aad
stos
inc
cltd
sub
push
add
push
dec
add
adc
sbb
push
add
inc
imulb
jb
adc
lcall
xor
orb
lcall
jo
bound
xchg
test
add
and
sbb
stos
pop
adc
inc
xchg
sbb
add
addr16
int
arpl
fdecstp
or
mov
aad
subl
cmp
sbb
pushf
pop
or
xchg
aam
and
imul
push
addr16
nop
mov
je
push
insb
mov
and
in
stos
xchg
orl
sub
es
imul
ljmp
dec
scas
or
mov
mov
mov
roll
and
cld
cmp
or
add
push
xor
hlt
sbb
inc
andb
popa
in
adc
dec
jbe
pop
sub
mov
dec
inc
subb
orb
andb
sbb
dec
test
arpl
add
jecxz
movsl
jb
into
mov
in
xlat
add
ficompl
cli
sbb
and
pop
push
sub
insb
add
add
loope
or
rcrb
inc
adc
int
loope
mov
push
push
not
mov
or
push
sbb
xchg
sahf
aam
pop
test
orb
cs
popa
cld
enter
jb
mull
jo
icebp
adc
ljmp
dec
pop
imul
dec
adc
mov
mov
stos
enter
xchg
lret
push
adc
pop
ss
mov
jmp
roll
or
out
add
dec
test
push
rorb
jge
pop
jb
fsts
cmp
pop
xor
xor
inc
push
xchg
and
ds
loope
pusha
hlt
aam
adcl
and
xlat
push
gs
adc
mulb
dec
sbb
add
push
sub
sbbb
dec
rcrl
out
in
incl
dec
adc
in
popa
cmp
sti
mov
mov
mov
sbb
mov
add
aad
shl
push
push
out
gs
mov
andl
stos
pop
aam
push
adc
rcll
rcll
mov
in
xchg
out
sub
add
hlt
lds
push
or
push
jp
sbb
mov
mov
mov
or
sahf
into
cwtl
push
xor
adc
imul
inc
aam
stos
popa
xchg
add
or
cli
push
add
mov
push
mov
mov
enter
cmpsb
dec
sbb
mov
test
mov
mov
push
mov
dec
repnz
inc
xchg
enter
enter
rclb
mov
and
pop
sbb
pop
rclb
rcll
mov
adc
jne
pop
sub
lret
xor
pop
add
sub
sbb
mov
inc
movsb
adc
pop
jnp
movsb
out
cs
call
sbb
call
rcrb
outsl
mov
pusha
adc
stos
adc
pop
or
sti
test
leave
push
imul
xchg
out
or
mov
push
sub
xor
loop
cmp
add
cwtl
jno
leave
adc
sbb
mov
add
orl
lret
sub
sbb
adc
and
cmp
stos
pop
xor
mov
push
mov
push
into
fadd
push
nop
or
push
sub
out
pop
sub
inc
xor
test
adc
rcll
les
push
divl
sti
push
loope
cmp
stc
or
mov
xor
fisttpl
enter
push
nop
push
mov
or
roll
jno
std
and
add
push
les
push
and
test
mov
leave
adc
mov
push
push
outsb
sbbl
stos
mov
int
inc
cmp
sahf
sbb
out
pop
xchg
inc
mov
loopne
les
xor
or
push
ret
inc
or
cmp
and
sub
and
mov
inc
pushf
cmpsl
aam
ljmp
adc
arpl
test
fildl
loopne
cmpl
test
icebp
inc
sbb
popa
mov
inc
mov
or
inc
pop
pop
pushf
aam
jge
jno
sbb
cmp
mov
and
push
popa
popa
shrl
push
mov
and
shl
orb
adc
pusha
loopne
xor
xchg
pop
addb
xchg
adc
in
push
mov
jp
sbb
cmp
xor
sbb
mov
pmuludq
sbb
dec
xchg
bts
add
mov
sub
or
data16
fsubrs
roll
aam
and
rol
fsubrs
sub
mov
movsl
orb
bnd
rcll
bound
pusha
jbe
push
inc
lods
cmp
pop
subb
stc
hlt
stos
sbb
adc
pop
test
test
insl
sub
sbb
mov
lods
dec
push
mov
inc
add
fcompl
addr16
mov
rcrb
dec
decb
scas
push
cltd
push
push
push
lds
push
loope
adc
sub
add
and
push
mov
add
cmp
inc
fidivs
dec
xor
dec
add
or
les
xor
lds
pushf
sub
stos
adc
sbb
pop
xchg
rclb
mov
adc
and
call
pop
rol
jnp
lea
lret
sbb
push
sbb
jns
xchg
lret
mov
sbb
inc
dec
mov
mov
jne
lods
push
icebp
lock
fcmovnb
and
sti
dec
adc
sbb
jo
loop
xor
push
or
adc
sbb
push
sarb
sub
add
xchg
in
jp
cli
shlb
adc
xor
rclb
bound
in
sub
add
adc
dec
lahf
sub
add
js
push
loope
push
sbb
xor
fistl
test
lock
or
inc
or
xchg
add
jb
push
imul
sbb
xchg
push
xor
movsl
mov
push
cs
pop
movsl
or
sahf
es
dec
outsl
add
dec
adc
add
pop
or
push
and
popa
xchg
sub
lea
iret
add
pop
jns
push
add
shrl
stos
sbb
xor
push
scas
jp
xor
jae
std
popa
rolb
and
addl
sbb
dec
inc
scas
sub
and
ds
jecxz
mov
and
inc
icebp
call
xchg
sub
add
inc
mov
and
das
sub
rorb
and
cmp
pop
inc
pop
mov
xchg
or
arpl
roll
cmpsb
and
mov
adc
loop
jmp
add
mov
fwait
loopne
push
sbbb
lock
lcall
lret
pop
rcrl
ret
add
mov
pop
hlt
ret
sbb
cs
sbb
and
lahf
ljmp
fcompl
add
rolb
xor
and
xor
lock
push
loop
dec
pop
mov
cmp
incl
lret
mov
adc
shl
push
jae
stos
and
and
pop
mov
cwtl
into
push
adc
pop
sbb
dec
xchg
out
rorl
fstps
movhps
mov
xchg
jge
add
push
inc
mov
push
add
xchg
stos
pop
icebp
inc
outsb
adc
flds
push
adc
aaa
ret
sbbl
mov
rolb
roll
xor
pushf
push
mov
aad
lds
push
mov
adc
rcrl
and
pop
mov
adc
xor
mov
mov
lods
sub
push
dec
xor
xchg
mov
std
add
pop
sbb
clc
or
jno
mov
or
pop
rolb
sbb
addb
lods
scas
adc
mov
aad
mov
loopne
adc
xchg
push
pop
dec
stos
pop
std
leave
leave
jo
imul
ljmp
xor
ds
sub
in
insl
adc
stos
xchg
or
xor
cltd
ja
jle
mov
push
adc
clc
daa
and
or
dec
dec
mov
cltd
sbbb
or
push
pushf
inc
into
adc
sahf
movb
inc
cmpsb
cli
int3
push
or
mov
cmp
dec
and
lds
xor
imul
jno
add
mov
ds
and
inc
sub
xor
adc
jp
adc
mov
mov
jo
mov
push
mov
stos
fstps
test
mov
shrl
dec
rol
inc
xchg
dec
iret
out
loopne
mov
inc
scas
into
and
dec
gs
call
fcomps
pop
in
mov
mov
adc
loope
mov
mov
mov
cmp
add
rorb
and
adc
rolb
xor
xor
sub
pop
aam
dec
out
cmp
sub
inc
sbb
sbb
xor
mov
sbb
jmp
sub
mov
pop
iret
adc
sbb
repz
test
shrl
add
psadbw
inc
adc
and
add
adc
dec
dec
add
orb
repnz
das
or
arpl
cmpsl
test
lret
push
lock
inc
in
mov
push
sub
and
sub
mov
aad
loope
jae
and
mov
inc
xor
stc
mov
pop
mov
xor
bound
inc
inc
aad
shlb
rclb
inc
mov
add
cmovno
mov
lea
push
mov
shlb
bound
push
je
dec
ja
fwait
push
aaa
mov
and
scas
mov
scas
add
lret
adc
and
in
fucomip
pop
inc
mov
stc
sbb
rcrl
mov
pop
adc
push
push
mov
mov
jge
and
je
icebp
addb
inc
mov
mov
icebp
div
mov
or
add
mov
outsl
dec
or
out
notb
xor
fiadds
leave
push
sbb
mov
sub
mov
shll
inc
orb
push
jl
std
ret
or
popa
shll
pop
xchg
and
push
push
cmp
or
jo
int
xor
mov
pop
adc
lahf
adc
adc
inc
lcall
icebp
adc
and
or
clc
roll
push
loop
xor
adc
leave
add
int3
call
cli
mov
and
loope
lcall
test
jnp
jecxz
gs
sarb
sti
orb
jl
pop
adcb
dec
ret
popf
inc
mov
lcall
test
push
dec
or
rcl
inc
or
mov
rcll
add
and
jb
push
xchg
inc
repnz
and
pop
push
adcb
jno
jg
add
push
outsb
hlt
push
add
addb
xor
cmp
mov
mov
in
jns
add
and
sbb
sbb
dec
test
es
push
xchg
mov
shll
std
lcall
addl
mov
push
adc
call
push
cmpsl
stc
int
les
cli
jg
es
adc
pop
push
adc
clc
jge
in
ljmp
jecxz
jmp
and
adc
je
or
sbb
xchg
mov
push
push
push
inc
shrl
fiaddl
aam
into
mov
testl
mov
add
add
and
push
xor
cmp
cmpb
xchg
xchg
repz
arpl
mov
add
lods
sub
rcll
and
adc
push
aam
xlat
mov
int3
sub
scas
lods
rorl
imul
cmp
cmp
or
cmp
push
aad
xor
sub
lods
adc
das
js
mov
sbb
add
rcrl
icebp
pop
pop
mov
push
pop
iret
roll
dec
cs
and
jo
mov
pop
adc
push
xor
mov
push
push
push
loop
mov
dec
lret
pop
or
cltd
and
fildll
orb
xchg
lret
inc
ljmp
js
ficoml
negb
int3
dec
sbb
int
push
lock
leave
stos
aaa
or
push
add
scas
dec
cvttps2pi
xchg
repnz
or
ja
inc
imul
mov
adc
cltd
or
in
mov
dec
push
stos
pop
dec
mov
push
cmp
pop
test
testl
jmp
mov
cmpsb
scas
jo
insl
and
shlb
loopne
pop
dec
mov
pop
lea
cmpsb
push
iret
inc
loope
xor
xchg
jo,pt
and
es
les
push
out
fstpl
rcll
pop
test
push
add
int3
jns
mov
cmovbe
push
sub
and
adc
cli
out
pushf
adcl
pushf
decb
fidivrl
adc
aas
push
sbb
sbb
push
jl
dec
in
mov
inc
ljmp
cwtl
in
lds
or
add
roll
mov
mov
cli
jmp
mov
push
jo
add
cwtl
push
lock
xor
cmp
pushf
stos
scas
data16
pop
nop
andl
push
and
adc
enter
cs
jle
clc
js
inc
and
xlat
sbb
mov
or
cmp
and
adc
adcb
addr16
push
mov
and
xor
lcall
push
lods
ljmp
or
stos
add
add
sbb
cmpsb
sbb
cmp
call
and
popf
add
mov
mov
and
pop
or
or
add
cmp
and
mov
jp
xor
xor
xchg
and
push
push
out
sbbb
clc
addl
and
inc
cmp
xchg
ret
jecxz
inc
adc
mov
mov
adc
pop
pop
dec
sar
or
jno
xchg
adc
xchg
test
js
push
push
adc
or
cld
pushl
stos
aaa
insb
imul
xor
and
xor
sbb
stos
mov
incb
or
adc
mov
add
insb
push
into
out
sbb
sub
add
sbb
mov
or
cwtl
add
mov
ret
cmp
xor
inc
or
shl
push
push
ss
popa
dec
lret
sbb
lds
out
or
rcrl
rclb
and
and
add
add
call
arpl
or
scas
sub
mov
into
addb
xchg
inc
mov
push
scas
and
in
mov
stos
movups
mov
shlb
mov
push
movsl
jnp
cmp
dec
lret
aad
mov
outsb
sub
cmp
and
or
adc
popa
or
arpl
in
mov
push
sbb
bound
jne
mov
stos
cwtl
sbb
rcll
add
rcrb
pop
xor
shlb
cmp
push
push
adc
add
call
mov
push
call
mov
cmpsl
test
inc
hlt
shll
xor
jno
out
sbb
gs
pop
and
addb
icebp
icebp
hlt
repnz
out
imul
and
aam
loop
bound
test
pushl
pop
push
adc
mov
xor
xchg
lcall
adc
cwtl
addl
and
dec
daa
jle
cli
or
push
lods
enter
sub
sbb
popf
es
or
inc
push
jae
sub
les
or
mov
pop
cs
and
or
sub
aas
jmp
les
adc
jne
adc
mov
cmp
xlat
mov
dec
push
aam
ss
nop
and
shll
mov
test
jge
adc
sbb
jl
in
addl
rcrl
pop
lea
sbb
pushf
add
loope
mov
adc
ljmp
loope
mov
mov
ret
test
clc
sbb
xchg
push
sbb
sbbb
rolb
je
hlt
sbb
mov
shll
push
stos
imul
adc
add
inc
mov
jae
imul
xor
sbb
or
jnp
in
sbb
and
add
in
jge
push
sub
cmpsb
and
popa
mov
inc
mov
mov
lcall
pop
sub
pop
jmp
lds
jmp
inc
xchg
inc
stos
leave
push
je
mov
or
inc
scas
pop
xchg
sbb
xchg
jo
and
dec
push
lret
je
int3
jb
movsl
test
adc
test
and
and
in
jmp
movl
aas
fists
lods
sti
pop
dec
fwait
and
jp
mov
push
shll
popf
in
adc
jg
cld
dec
xlat
or
cmp
repz
lahf
bound
icebp
xchg
les
cld
stc
cld
push
outsl
jl
sub
push
andb
lahf
aas
xchg
sbbb
daa
push
stc
negl
movsl
jecxz
xor
adc
and
aas
jg
pop
in
xchg
lcall
pop
cld
stc
repz
jnp
loopne
pop
sahf
in
dec
push
in
ss
inc
lahf
aas
jg
stmxcsr
jg
lcall
test
and
xor
lret
xchg
outsl
xor
lahf
inc
cld
flds
sub
fcomip
sub
xchg
repz
shrb
test
pusha
or
xchg
inc
jle
cld
data16
cmp
loopne
aam
aas
call
sub
fistps
cld
loope
cmp
mov
aad
bound
pop
enter
mov
xor
idiv
fildl
out
test
push
outsl
aam
sbb
nop
xlat
mov
jg
cld
stc
cltd
fmull
stos
inc
sbb
push
mov
out
lahf
aas
test
xor
fs
sbb
and
cld
stc
repz
xlat
or
fisttpll
fsubr
pop
ds
iret
lahf
aas
jg
mov
mov
adc
stc
repz
daa
ss
jl
sahf
pop
jno
pop
lahf
aas
jg
int
fbld
mov
out
repz
cmp
inc
xor
or
scas
sbb
mov
jg
cld
mov
clc
cmpb
cmp
in
ds
lahf
and
test
jecxz
jle
cld
stc
xor
lods
js
inc
test
jl
mov
inc
adc
inc
add
sbb
jns
dec
adc
adc
stos
xchg
push
scas
or
xor
fsubr
adc
scas
test
aas
jg
jg
add
cld
mov
cli
add
xchg
mov
clc
add
xchg
add
inc
jle
fucom
and
mov
iret
lahf
aas
lcall
popf
les
ret
lea
cmp
repz
adc
ret
cmpsl
loop
mov
lret
lahf
aas
jg
scas
repnz
sbb
popa
fsubl
or
repz
sbb
jbe
shlb
jle
jns
jg
cld
dec
xchg
lahf
sub
push
xchg
push
xchg
pop
test
adcb
sti
mov
mov
cld
stc
adcb
jb
pop
fisttps
ror
mov
iret
lahf
aas
cmpsl
mov
push
push
sub
sub
repz
rcr
into
stc
sub
ret
rol
xor
iret
lahf
aas
jg
inc
test
loopne
jl
mov
dec
mov
xor
mov
insl
fldl
or
ret
lahf
aas
jg
lds
or
roll
stc
repz
mov
aam
jmp
adc
repnz
bound
cld
xchg
mov
xchg
inc
sub
imul
lahf
cmp
inc
push
push
pop
addr16
ljmp
stc
sbb
subb
repz
into
out
lahf
aas
pop
mov
jp
adc
stc
repz
andl
inc
dec
in
iret
lahf
aas
jg
inc
sbb
in
inc
int
cmp
repz
cmpl
push
test
gs
inc
data16
aas
jg
mov
xor
xor
sbb
mov
mov
or
movb
jg
cld
inc
xor
lea
adc
sub
iret
lahf
mov
sahf
sbb
inc
data16
inc
paddusb
repnz
repz
cmpsb
cld
stc
repz
call
mov
stc
stos
jae
popa
push
sbb
icebp
clc
dec
sub
dec
lods
pop
pop
pop
inc
stc
repz
fnstenv
sbb
pusha
aas
in
inc
inc
push
jg
cld
fwait
dec
mov
inc
stc
adc
scas
in
mov
repz
lahf
insl
mov
mov
sbb
es
cld
stc
mov
mov
or
xchg
jne
add
nop
out
lahf
aas
pushf
push
insb
inc
lahf
pop
mov
fildll
ds
stc
repz
or
push
cmc
cmpb
dec
sbb
jno,pt
xor
pop
jle
loope
aam
mov
and
paddd
stc
repz
add
les
mov
iret
lahf
aas
jg
and
xor
inc
or
jns
outsl
out
sub
xor
pop
fldcw
iret
lahf
aas
jg
enter
cmpsl
outsl
imul
sahf
out
clc
cld
stc
repz
mov
out
mov
sub
jg
pusha
mov
fdivrs
iret
cmp
repz
enter
data16
mov
icebp
aas
jg
cld
push
stc
sub
pop
dec
lahf
and
iret
lahf
push
xchg
inc
mov
scas
sbb
cld
stc
xchg
mov
movsb
jo
push
lahf
and
pop
out
lahf
aas
stc
outsb
sub
cmp
lret
pushf
jno
iret
pop
clc
leave
dec
sub
push
scas
adc
mov
cld
stc
repz
out
mov
mov
or
lods
add
lods
fs
ret
in
adc
ficoml
xchg
mov
jg
cld
stc
jmp
push
es
push
mov
push
shrb
mov
mov
adc
cs
lcall
xor
xlat
mov
xchg
mov
scas
dec
jle
pop
popf
jecxz
neg
push
and
cld
stc
push
xchg
push
adcl
cmp
lahf
add
pushf
inc
inc
push
dec
pop
js
xor
stc
imul
jne
lcall
xchg
fsts
push
jno
jecxz
push
test
inc
inc
push
mov
stc
repz
aas
gs
cmpsb
fcomps
loope
and
loope
push
scas
lahf
aas
jg
inc
pop
clc
arpl
bound
dec
faddl
or
xchg
addb
xchg
cld
sub
mov
sub
iret
lahf
es
out
inc
add
pop
mov
repnz
push
std
add
ja
lcall
lcall
repz
fdivr
stc
repz
outsl
mov
rclb
xchg
lods
jge
aas
jg
cmp
xor
xor
xchg
jl
jp
repz
or
sub
lds
mov
xchg
arpl
pop
jb
stc
repz
aaa
fsubl
gs
sahf
adc
pop
aas
jg
cld
sti
sbb
into
inc
or
scas
mov
lahf
xlat
rcl
xchg
adc
aam
lahf
aas
cmp
mov
rclb
repnz
lcall
dec
test
je
cld
stc
rep
stos
lahf
dec
loope
or
in
imul
inc
or
sbb
lock
iret
xchg
cld
stc
repz
or
jmp
dec
rolb
std
jg
stos
mov
aas
jo
cld
xor
mov
stos
mov
or
xchg
je
shr
call
cmpb
stc
test
xchg
push
daa
je
fs
out
lahf
aas
data16
addr16
sarl
xor
cld
stc
repz
mulb
loop
jb
xor
outsl
outsb
iret
lahf
aas
jg
jmp
xchg
mov
mov
repz
mov
push
mov
mov
and
pop
xor
or
iret
addr16
stc
repz
or
pop
and
clc
out
call
mov
aas
jg
adcl
jmp
mov
xor
out
fiadds
dec
addr16
inc
push
sbb
cwtl
xor
loope
adc
jmp
mov
repz
xchg
nop
mov
lahf
nop
pop
jle
ficomps
lret
cld
fimuls
call
lahf
push
and
repz
lahf
or
dec
adc
rclb
push
fcomip
cld
stc
add
jne
aas
test
cmc
out
jg
cld
stc
repz
dec
dec
sbb
sub
xor
cld
mov
pop
jo
ud2
inc
in
das
repz
xchg
std
xchg
and
stc
repz
rolb
stos
ss
dec
ficompl
decb
movsl
jne
ret
in
sub
out
ror
js
adc
mov
repz
jg
cld
inc
imul
inc
inc
add
fs
stc
repz
adc
xchg
ljmp
cld
push
cmp
sub
cmpsb
mov
lahf
jno
cmp
outsl
imull
pop
jg
cld
stc
fisttpll
push
aad
jmp
iret
lahf
aas
lret
push
pop
out
ret
xchg
xchg
sbb
fwait
cld
stc
repz
clc
sub
paddw
scas
cmp
sbb
loop
sarb
lret
sbb
and
stc
repz
push
aas
cmp
jecxz
jb
jmp
aas
ljmp
leave
ds
adc
sbb
subb
ficomps
ljmp
les
cld
stc
aad
mov
dec
sbb
fldenv
inc
sub
iret
lahf
aas
dec
int3
dec
aad
sub
jle
inc
jmp
enter
push
jns
loopne
fwait
repz
inc
add
and
cmpb
stc
or
mov
xor
std
out
lahf
aas
mov
dec
jns
and
pop
cld
stc
repz
jg
xchg
mov
cltd
aaa
cwtl
lcall
cmp
fstl
xlat
pop
mov
pushl
pushf
xchg
sub
mov
xchg
aam
lahf
aas
jg
add
fmul
cmp
repz
loop
cltd
cmp
xchg
test
mov
cld
adc
pop
xchg
sub
mov
clc
enter
jbe
adc
cmpsl
negl
test
andl
xchg
lds
or
and
mov
aas
jg
ret
sahf
fcmovnu
inc
imul
push
xchg
out
outsl
adc
or
dec
cld
stc
repz
add
fwait
adc
fs
aas
jg
or
jl
rorl
ror
jecxz
cld
stc
repz
pop
dec
or
data16
mov
in
sbb
imul
xchg
xor
xchg
push
ss
repz
test
outsb
enter
mov
sbb
jg
cld
sub
adc
pop
push
push
mov
es
sahf
add
out
sbb
lods
outsl
fidivrs
xchg
and
xchg
jecxz
mov
fwait
aaa
or
pop
out
push
mov
fidivrs
pop
js
pusha
or
sbb
sbb
pop
sbb
int
aaa
outsl
mov
mov
and
cmp
int
jns
out
hlt
imul
rcrl
pop
push
lret
fwait
aaa
outsl
fisubs
jae
sub
std
fs
les
repz
pop
ror
lret
pop
jb
cs
mov
dec
pop
gs
dec
sbb
fwait
inc
xchg
data16
push
inc
add
mov
sbb
mov
push
jle
out
fwait
aaa
out
sti
out
pushf
fnstcw
jg
mov
loope
adc
mov
cmpsl
lret
les
xlat
and
outsl
inc
jp
and
mov
lahf
aas
std
in
cltd
pop
jno
cmp
sbb
repz
cmpsl
jp
pop
mov
adc
cld
pop
inc
bound
mov
xchg
mov
cmpb
movsl
repz
lahf
cmp
pop
push
or
inc
mov
jmp
cld
stc
idivl
lahf
fs
std
sbb
lds
out
lahf
aas
push
lods
fidivrl
ljmp
cld
stc
repz
enter
xchg
jl
or
lahf
aas
jg
out
or
cld
call
daa
cmp
or
inc
fisttpl
push
leave
je
mov
lods
sbb
scas
jge
mov
aaa
outsl
fiaddl
int3
cmp
cld
data16
xor
sub
jae
dec
stos
js
xor
aaa
outsl
fidivrs
and
mov
out
sub
popf
dec
mov
adcl
fidivrs
or
pop
lods
pop
scas
mov
mov
lahf
sub
mov
and
fidivrs
scas
loop
fnstcw
xchg
or
sub
aaa
outsl
inc
inc
xchg
rcr
mov
outsb
repz
js
jns
out
insb
sub
fcomp
push
pop
jge
dec
fwait
aaa
outsl
fsubp
lods
sbb
push
out
int
decb
ljmp
int
dec
lret
pop
pop
popf
dec
cltd
paddusw
aam
sub
fdivrl
sbb
aas
xor
lahf
jg
mov
jecxz
jno
push
dec
sahf
cld
cld
stc
repz
cld
sub
rorl
inc
inc
dec
xlat
lahf
aas
jg
clc
dec
xor
arpl
mov
jnp
stc
repz
jnp
jnp
push
test
aad
or
mov
push
and
repz
and
xlat
sub
mov
lret
stos
aas
jg
cld
jecxz
daa
and
and
cmp
call
repz
lahf
or
or
sub
adcb
inc
xlat
inc
pop
mov
fmull
lock
and
lahf
aas
jg
xchg
push
loope
or
testl
iret
outsb
add
fcmovne
fimull
xlat
ret
fwait
mov
jg
cld
out
jne
arpl
inc
pop
mov
xor
inc
and
stc
add
xlat
out
push
sbb
mov
fidivrs
int3
xor
jb
cmp
cmp
jb
test
xor
lret
cmpsl
fstp
cmp
rcrl
jge
sbb
mov
repnz
sbb
and
jmp
out
sub
ret
lret
push
cmp
dec
aad
aaa
outsl
fidivrs
adc
cmpxchg
int
jbe
or
mov
adc
push
pop
mov
adc
or
xchg
out
fwait
aaa
inc
or
stc
cli
fisttps
jns
mov
in
imul
dec
mov
aaa
outsl
rol
or
cmc
fisubl
or
mov
pop
shrl
xchg
and
in
fwait
cmp
aaa
outsl
fidivrs
pop
loop
aas
mov
in
ljmp
dec
mov
in
push
push
and
xchg
mov
mov
sbb
mov
inc
aaa
outsl
fidivrs
sbbl
scas
mov
lahf
or
xchg
repz
fwait
arpl
xor
ret
mov
jl
enter
jns
int3
cmp
cli
inc
stos
pop
pop
push
push
adc
aaa
sub
dec
mov
add
xor
and
add
jl
lahf
std
fistpl
and
outsl
fidivrs
cmp
pop
mov
and
rorl
addl
xor
mov
lahf
mov
jp
add
aam
mov
es
negl
aaa
outsl
fimuls
dec
imul
or
fdiv
mov
fidivrs
sub
iret
lahf
aas
jg
fistps
mov
inc
xchg
sbbl
int
mov
stc
repz
pushf
or
xlat
cs
test
jecxz
and
jo
aas
ljmp
mov
xchg
pop
rcrl
enter
ljmp
int
ja
stos
mov
enter
push
sub
or
call
fidivl
outsb
mov
insb
mov
test
scas
and
loopne
xor
repz
mov
fists
clc
ficoms
bswap
sbb
divl
stos
dec
mov
out
fwait
popf
or
xchg
xchg
mov
push
push
push
dec
or
mov
dec
cmp
repz
test
inc
inc
dec
pop
movl
xlat
jo
jg
cld
scas
cmp
jecxz
dec
mov
std
lahf
jg
and
cmp
fimuls
stc
repz
ret
add
xchg
aad
lret
mov
cld
outsb
fldcw
mov
daa
inc
lcall
xchg
outsl
fidivrs
daa
loopne
sahf
testb
cmp
int
aaa
mov
dec
testl
mov
scas
es
imul
ret
fwait
aaa
outsl
cmp
push
push
insl
mov
repz
add
inc
cmp
inc
je
lock
fwait
aaa
outsl
faddp
mov
imul
gs
mov
out
pop
mov
push
xchg
or
mov
clc
or
and
cs
adc
and
xchg
inc
pushf
push
stc
repz
cmpsb
pop
push
in
adc
xchg
xchg
sbb
rorl
cld
cld
push
ror
sub
icebp
dec
call
out
push
in
mov
cmp
clc
pop
mov
repnz
cvttps2pi
xchg
xor
jg
stos
jns
out
addr16
js
pop
and
ds
dec
xor
fidivrs
sub
aaa
hlt
cmpb
jl
xchg
repz
fwait
out
mov
mov
mov
outsl
fidivrs
call
adc
adc
int
aaa
outsb
out
loopne
sbb
mov
push
mov
fidivrs
inc
and
loopne
mov
inc
outsl
dec
in
sahf
push
stos
cmp
jle
or
jae
in
lcall
fcompl
pusha
in
and
pop
movsb
jae
push
lret
out
lahf
jbe
in
rcll
fsubs
sbbb
cld
stc
sbb
loope
sbb
call
jne
jne,pn
iret
lahf
aas
repz
testl
orb
pop
mov
inc
push
iret
lahf
aas
jg
pop
jne
xlat
lret
lea
mov
in
repz
outsl
and
pop
lods
imul
imul
mov
dec
cmc
outsl
ljmp
jns
out
mov
cltd
cwtl
jae
nop
or
daa
aaa
outsl
fidivrs
stos
mov
inc
mov
int
mov
push
sbb
jnp
rorb
jo
outsl
fidivrs
xor
jns
jne
cmc
loope
out
fwait
aaa
push
adc
pop
adc
fidivrs
push
test
fsubrs
outsb
cmp
jle
lods
fnsave
adc
call
xchg
insb
stos
mov
jns
push
iret
mov
cmp
rolb
shrb
xor
lahf
xlat
test
xor
aaa
lea
std
xchg
fidivrs
lods
xchg
or
sub
std
lcall
aaa
outsl
add
mov
repz
pop
mov
mov
outsl
fiadds
jl
mov
pop
std
push
fisttpll
xlat
inc
out
fwait
aaa
xchg
mov
pop
repnz
aaa
mov
pop
fidivrs
lcall
popa
pop
push
cld
jecxz
fwait
aaa
outsl
adc
insl
jb
test
mov
shrb
jmp
jns
out
lea
nop
ja
popa
leave
push
movsb
jae
aaa
outsl
fisubs
pop
dec
out
xor
out
sarl
out
cmp
mov
inc
xchg
add
outsl
or
outsl
fidivrs
loopne
icebp
pop
adc
jle
jl
and
adc
nopl
fisubrl
repz
pushw
pop
jae
repz
jg
cld
stc
es
loopne
sbb
push
mov
xorl
xchg
mov
jb
imul
push
imul
scas
cmp
sub
iret
lahf
aas
decb
icebp
pop
pop
jb
ret
scas
cld
stc
repz
repz
lret
push
and
mov
jb
fs
dec
push
mov
xor
jg
cld
mov
test
cmc
arpl
sti
scas
fwait
out
lahf
aas
pusha
into
aas
std
adc
je
xchg
sarb
adc
inc
loopne
and
inc
ss
cmp
test
popa
jns
insl
iret
cld
stc
repz
pop
mov
and
fstpt
aas
jg
jl
sub
in
insl
fnsave
cmc
data16
stc
repz
mov
sbb
out
mov
in
inc
jle
cld
movsb
pop
push
inc
mov
inc
sbb
mov
adc
pop
mov
or
je
xchg
xor
aaa
outsl
fdivrp
scas
adc
inc
sub
mov
insb
jns
out
stos
xchg
and
mov
xorb
fidivrs
and
clc
sub
sti
call
jne
dec
pop
jmp
lods
out
repz
fs
mov
repnz
aaa
outsl
fidivrs
jnp
rorl
lcall
inc
fs
mov
dec
ljmp
xchg
aas
aaa
xor
loope
fwait
jge
insl
dec
xor
cld
stc
mov
cmp
and
add
out
lahf
aas
jno
dec
add
cmp
cld
stc
repz
aad
jo
push
push
jle
loop
inc
and
sub
lds
aaa
jns
aaa
cmpb
and
sub
push
lock
and
sbb
flds
push
sbb
aaa
outsl
lods
mov
pop
mov
push
out
mov
mov
filds
adc
dec
in
fisttps
aaa
outsl
fidivs
add
adc
jns
out
and
xchg
inc
adc
aaa
outsl
fidivrs
stos
pop
ljmp
push
icebp
enter
inc
pop
xor
jae
sahf
add
mov
lock
repz
inc
dec
aas
jle
mov
and
popa
mov
scas
outsl
fidivrs
xchg
inc
or
push
cmpsl
loope
aam
int
aaa
mov
out
popa
loopne
repz
stc
icebp
test
notl
decl
loop
adc
inc
in
aaa
and
loop
pop
jo
xchg
xchg
dec
mov
mov
aas
jg
mov
sub
jl
jbe
aad
or
mov
jns
outsb
pop
out
aas
ljmp
xchg
aas
test
sbb
pop
dec
stos
mov
mov
fidivrl
inc
jg
out
fwait
aaa
pop
mov
push
insb
lret
outsl
mov
enter
mov
hlt
sbb
or
stc
repz
test
push
cmp
mov
jne
jno
setae
mov
icebp
imul
mov
inc
stc
repz
add
inc
push
popf
mov
divl
cld
icebp
mov
je
sub
arpl
repz
lahf
cmpsl
or
mov
xchg
or
ja
pop
popa
pop
xchg
adc
out
aaa
outsl
fidivrs
sbb
xorl
ljmp
aam
jge
push
iret
fsubl
mov
out
lahf
aas
cli
mulb
push
repz
and
inc
fwait
lods
pop
cld
stc
repz
pusha
ror
xor
dec
fsubrl
jb
push
or
inc
clc
iret
lahf
aas
jg
mov
loope
dec
loopne
xchg
adc
cld
stc
enter
fidivl
into
mov
adc
sbb
aas
jg
dec
pop
jno
leave
enter
jbe
daa
cld
stc
repz
iret
sbb
loopne
test
sbb
lahf
aas
jg
push
adc
cmp
inc
pusha
and
add
dec
lahf
pushf
mov
mov
dec
insb
fstl
pop
dec
or
aaa
outsl
fidivs
in
stos
stos
bound
and
out
mov
sbb
mov
repz
cmp
pusha
insb
xchg
in
pop
in
scas
fnstsw
aas
jg
jb
add
lret
into
dec
mov
stc
repz
es
cmp
jne
test
jg
call
ds
xchg
out
inc
xchg
mov
imull
outsl
fidivrs
or
sbb
push
inc
mov
out
fwait
aaa
adc
aam
insl
inc
sbb
inc
negb
jns
dec
push
sarb
fs
jae
inc
movsl
jbe
cmp
inc
outsl
out
push
addl
xchg
xchg
xchg
jb
leave
dec
pop
mov
outsl
fidivrs
int3
lock
ljmp
out
fwait
push
outsl
pop
arpl
jp
aam
lock
cld
sti
mov
lret
rep
jmp
and
daa
or
repz
cmp
lods
sub
out
movsl
loop
loop
xchg
dec
outsl
fidivrs
push
push
clc
cmpsb
popa
movsl
cmp
jno
int
int
aaa
or
push
aas
jg
cmc
cmp
mov
mov
lahf
sbbl
cli
in
loope
gs
dec
cld
stc
cvtpi2ps
or
sub
sbb
das
pop
push
jle
dec
scas
adc
jne
andb
je
jns
out
push
add
inc
mov
push
xchg
sbb
aaa
outsl
fidivrs
dec
fdivrl
cwtl
inc
les
jo
dec
out
fwait
lahf
pushf
xor
arpl
dec
lret
push
jns
mov
push
inc
push
dec
pop
add
int
aaa
outsl
int
pop
mov
pop
cmp
repz
sti
cwtl
ja
push
es
call
fwait
aaa
outsl
fisubrs
aad
aaa
stc
cmp
sbb
jns
out
shr
xchg
ret
inc
popf
jmp
pop
fnstcw
das
jb
pop
adc
pop
cld
stc
repz
lock
aaa
addb
hlt
popa
mov
bound
ss
pop
fnstcw
push
pushf
adc
add
cld
stc
inc
stc
aam
and
dec
cmp
aas
jg
adc
cmp
fdivrl
stc
repz
mov
adc
or
aas
jg
push
xchg
test
out
mov
adc
shlb
jle
pushf
push
push
mov
add
mov
out
jmp
adcl
fidivrs
or
fcoml
cmp
daa
jp
out
iret
sbb
jg
mov
in
and
repz
subl
stc
adc
ret
shrb
mov
mov
dec
sbb
lock
pop
test
out
scas
pop
rol
mov
sti
jne
mov
fmull
or
and
xor
cltd
sbb
aam
mov
aaa
outsl
fidivrs
aaa
aaa
out
les
ja
pop
dec
and
out
fwait
shrl
popa
inc
fwait
or
sub
inc
jmp
fidivrs
mov
sub
int
out
fwait
aaa
pop
dec
out
cltd
clc
push
ret
push
ds
repz
or
add
in
push
mov
inc
outsl
and
add
or
sahf
pop
push
dec
xchg
xlat
push
jl
repz
xchg
sbb
pop
fnstenv
mov
adc
popf
and
out
fwait
out
adc
adc
push
jle
dec
outsl
fidivrs
ret
mov
mov
rcrl
and
flds
sahf
jg
xchg
fidivrs
mov
das
push
pop
or
stc
mov
sub
fwait
aaa
outsl
xor
cmp
mov
mov
das
sub
out
mov
dec
mov
cmp
pop
daa
lds
pop
jb
xchg
iret
mov
push
mov
aas
jg
icebp
cld
sub
lea
les
and
repz
lahf
inc
xor
inc
test
std
xchg
cld
stc
mov
cmp
lea
jne
inc
inc
adc
iret
lahf
aas
aas
mov
lds
out
lock
pop
cmp
in
in
test
out
xor
mov
jl
sub
pop
stos
push
sbb
xchg
xchg
test
add
imul
jns
jge
in
push
lret
sti
mov
and
dec
xor
push
idiv
or
push
mov
sbb
repz
bound
mov
mov
jl
sub
outsl
fdivp
mov
outsb
add
int
aaa
rorl
aas
lcall
fistps
repz
sub
sub
mov
push
call
rorb
xorb
es
mov
mov
fwait
aaa
outsl
mov
out
inc
add
out
icebp
enter
mov
xchg
mov
jns
jl
jae
or
lods
lcall
aaa
outsl
and
cmc
bound
or
jp
pushf
mov
call
xchg
or
fwait
aaa
outsl
fimuls
xchg
daa
mov
decb
jns
out
xchg
outsb
fwait
mov
mov
adc
fidivrs
jp
adc
repnz
out
fwait
jns
adc
insb
push
ret
aas
cli
lcall
ljmp
xor
pop
fcmovne
pop
xchg
cld
daa
push
stc
repz
mov
xchg
arpl
xor
lahf
aas
jg
and
jo
mov
add
andl
lea
aas
jg
and
push
adc
hlt
in
dec
out
sub
lret
outsl
fidivrs
mov
lcall
mov
daa
pop
cld
mov
dec
arpl
bound
repz
jo
mov
mov
cmp
jbe
xor
fidivrs
cmpsl
out
out
and
outsl
shl
in
repnz
fwait
xchg
sub
mov
stc
clc
jns
mov
fisubrs
pop
mov
fidivrs
mov
shl
stos
dec
xor
fstpt
popa
aaa
dec
test
add
outsl
fidivrs
xor
or
xorl
fwait
aaa
sbb
ficoml
mov
xor
xchg
scas
imul
jmp
test
outsl
fdivrp
lret
mov
jle
xor
in
mov
out
fwait
lcall
push
sbb
cwtl
fldt
mov
mov
imul
dec
out
fwait
aaa
cmp
pop
fisttps
jp
mov
subb
xchg
cmc
adc
mov
outsl
scas
fimull
sub
adc
daa
imulb
iret
jecxz
arpl
out
fwait
and
loopne
inc
scas
or
mov
jg
sub
sbb
lcall
inc
pop
lahf
adc
jb
ljmp
lret
lret
pop
sarl
cmp
push
int
aaa
outsl
xor
daa
jmp
nop
sub
mov
repnz
lods
pushl
jle
fidivrs
dec
pop
mov
fs
std
sub
fwait
aaa
outsl
jg
jge
sub
test
mov
adc
xor
movsb
aas
fsubr
dec
fwait
aaa
outsl
fimuls
sahf
mov
das
cltd
std
mov
and
out
mov
and
add
popf
sub
cmp
aaa
outsl
fidivrs
out
scas
addr16
inc
mov
sub
out
rclb
hlt
xchg
stos
aas
clc
enter
or
xchg
pop
dec
lea
push
scas
in
iret
lahf
xchg
mov
sarb
jae
cld
jmp
mov
fucomp
ds
dec
jg,pt
xchg
add
out
fwait
aaa
out
into
dec
jo
and
lock
fnstcw
movsb
pop
or
shll
xor
rclb
fwait
cld
int
pop
jne
int
push
push
or
gs
dec
ud1
out
sbb
pop
pop
inc
sbb
popa
inc
sarb
cmp
cld
xor
cwtl
and
mov
inc
fidivrs
stc
mov
leave
xchg
int
aaa
outsl
sub
pop
popa
movsb
js
mov
cmpl
call
push
mov
jae
pop
adc
sub
xchg
sub
xchg
out
sub
jg
cld
mov
inc
ss
out
sub
mov
out
lahf
sti
fmull
xchg
xchg
ret
jle
pop
addr16
cld
stc
test
popa
fbstp
cmc
pop
mov
fidivrs
jle
iret
lahf
aas
and
test
sbbb
sbb
movl
mov
addl
nop
or
movsb
ffreep
jo
aaa
ja
jg
cld
arpl
cwtl
mov
insb
mov
out
lahf
mov
jl
cmp
jg
std
in
jmp
test
mov
xchg
mov
xchg
inc
lahf
jae
ljmp
xchg
dec
shrb
pop
idivl
cld
stc
imull
mov
ds
cld
mov
fcomip
dec
in
sub
sbb
lahf
aas
jg
fdivp
out
push
fmul
push
jg
mov
repz
pop
gs
and
push
or
sbb
dec
mov
aas
stc
cld
leave
fwait
arpl
mov
ss
insl
push
idivl
cld
stc
cmp
pop
pushf
xchg
lods
out
hlt
in
stc
pop
or
aas
sbbb
jg
cld
or
add
dec
cmp
cmp
in
lahf
sahf
adc
jecxz
aad
adc
pop
fmul
or
mov
sub
cld
stc
repz
push
daa
dec
xor
adc
test
loop
aas
jg
rcrb
call
xchg
mov
out
fdivr
mov
insl
cwtl
test
cmp
mov
into
cld
mov
repnz
std
stc
ret
and
scas
jo
sti
ret
adc
fs
jg
cld
je
lock
xor
jle
dec
data16
add
xchg
lahf
ljmp
mov
cmp
imul
push
ljmp
aam
dec
jmp
std
in
mov
scas
les
mov
bndldx
mov
pop
pop
sar
repz
pop
test
or
jg
cld
in
add
inc
jmp
ret
gs
mov
jmp
push
mov
repz
enter
dec
push
mov
iret
lahf
jg
inc
and
ret
dec
cmp
repz
je
cmp
xlat
sahf
sub
add
imul
iret
insb
fdivrp
mov
dec
popf
cmp
push
out
enter
movsb
dec
imul
cld
stc
out
leave
lcall
aas
les
mov
iret
lahf
aas
mov
sub
xchg
cld
stc
repz
imul
push
push
jae
mov
cmp
sbb
in
mov
sbb
inc
nop
aas
and
scas
adc
fmuls
outsl
add
aaa
jecxz
and
mov
out
and
repz
cmp
push
shll
xor
jmp
lea
fdivrl
jo
dec
mov
fwait
aaa
outsl
fidivs
int
notb
mov
fidivs
sahf
mov
add
adc
repnz
dec
mov
outsl
fidivrs
mov
sbb
pop
jecxz
xchg
lcall
push
aaa
jmp
int3
pop
test
sub
outsl
fidivrs
jo
pop
arpl
ds
dec
adc
push
out
fwait
aaa
lock
pop
stos
out
in
mov
je
stos
aas
pop
clc
push
cmp
fsubs
fwait
aaa
outsl
shl
outsl
jnp
inc
xor
sbb
lock
sbb
in
imul
adcb
out
jb
into
outsl
fidivrs
sub
insl
mov
stc
pop
pop
sbb
mov
pop
dec
mov
ss
movb
inc
xchg
outsl
stc
xor
aaa
outsl
fisubs
push
notb
fwait
push
xor
test
and
mov
in
inc
leave
inc
fisubrs
gs
cmp
hlt
sub
mov
cmp
outsl
ficomps
pop
cmpl
adc
andl
jns
or
test
and
lods
sbb
shl
int
aaa
jle
aam
sbb
xchg
pusha
jg
mov
jp
dec
push
notl
ds
add
jecxz
sarb
fwait
aaa
outsl
mov
jle
test
push
mov
push
xor
ljmp
add
mov
pop
fisubl
pop
mov
and
or
ret
sahf
inc
add
fwait
in
push
rol
mov
dec
pop
into
push
outsl
fidivrs
pusha
dec
or
int
mov
loopne
xchg
out
aad
aaa
push
push
jg
sbb
push
lock
inc
push
xchg
push
and
sub
mov
outsl
fidivrs
dec
in
or
in
int
test
cwtl
pop
ja
orb
mov
arpl
data16
aaa
add
into
test
pop
lahf
loopne
push
sbb
xchg
mov
and
pushf
xor
aad
bswap
lahf
aas
jg
pusha
shlb
addr16
gs
in
stos
sahf
lret
repnz
pop
jne
mov
dec
rclb
mov
int
fisubs
nop
test
movsl
or
cs
lret
iret
cwtl
inc
rcrl
mov
jg
cld
adc
nopl
jl
inc
loope
aam
mov
mov
lahf
sbb
shl
testb
cld
in
fistpll
icebp
jae
aad
mov
xchg
mov
out
cmpsb
sarl
lahf
fisubrl
pop
cmp
movsb
out
fwait
aaa
sbb
pop
movsb
lea
dec
fidivrs
inc
in
jnp
testl
fwait
aaa
outsl
add
fisttpll
movsb
pop
lock
push
dec
sbb
out
add
cs
push
sbb
dec
sbbb
repz
pop
lds
fdivrs
push
test
out
fdivrs
loop
cmp
movsl
mov
jp
into
aaa
outsl
fidivrs
fsubr
sbb
mov
repz
fwait
mov
rorl
push
mov
xor
jns
test
sub
loop
ja
loopnew
fwait
aaa
xchg
enter
in
movsb
jo
es
pop
fsubp
xor
fidivrs
lahf
sahf
jae
or
loop
sbb
fwait
aaa
outsl
sti
cmp
or
jp
out
daa
and
repz
dec
mov
iret
lahf
aas
insl
lret
hlt
lcall
mov
sbb
cmp
setnp
outsl
fidivs
lret
pop
cmpl
fistpll
mov
dec
push
lock
mov
sahf
imul
pop
xchg
mov
int
aaa
decl
sub
aam
lock
repnz
push
mov
xchg
testl
pop
cmp
add
loope
cmp
ljmp
loope
pop
mov
shll
std
das
jge
iret
and
cmp
cld
sub
lret
lahf
mov
jo
repz
shl
enter
cld
sahf
push
and
and
mov
fwait
sub
ret
inc
sub
xchg
dec
das
fldenv
pop
out
fwait
aaa
lahf
xor
ds
dec
outsl
test
cld
fidivrs
mov
dec
out
popf
and
lock
cmp
int
aaa
outsl
or
data16
adc
mov
jmp
stos
shlb
mov
aaa
outsl
fiadds
dec
js
js
push
mov
out
outsb
dec
lods
les
push
push
outsl
fidivrs
push
pop
pop
sbb
out
fwait
aaa
shlb
jecxz
shrb
cmp
jns
jo
orl
cmp
push
daa
pop
inc
adc
ret
subl
scas
jecxz
pop
maskmovq
enter
out
enter
mov
aas
adc
outsl
fiadds
jae
mov
mov
or
mov
fwait
outsl
scas
cmp
nop
enter
mov
cwtl
cmp
insb
jb
jns
movsl
dec
mov
int
aaa
lcall
push
movsb
mov
mov
mov
mov
aas
add
sub
int
aaa
outsl
jecxz
cmp
lea
push
jbe
jb
out
and
ja
pop
lss
mov
hlt
rolb
std
jmp
aaa
outsl
dec
sbb
pop
jg
fimuls
jecxz
or
jne
ljmp
cs
push
xor
daa
jg
or
aas
jp
jg
cld
stc
jns
inc
add
sbb
lret
lahf
aas
jns
aad
sti
jg
dec
push
bnd
decl
roll
push
push
lahf
aaa
pop
enter
jmp
ret
jg
cmp
dec
add
aam
cmpsb
dec
in
or
out
lahf
gs
in
cmpsl
pushf
dec
data16
dec
jg
cld
stc
mov
lret
movsl
lods
nop
cmp
daa
out
lahf
aas
sub
outsl
xor
es
sbb
cld
stc
repz
sub
rolb
push
mov
cmpsl
xchg
mov
pushf
mov
jge
repz
loope
cmpl
bound
hlt
repz
lahf
inc
test
sub
jg
cld
stc
int3
xorl
sbb
mov
notl
xchg
lahf
aas
cmp
cmp
repz
xlat
lcall
test
clc
adc
pop
jbe
cld
stc
repnz
cmovbe
pusha
sub
xor
mov
or
sahf
jns
jbe,pt
out
repz
out
sub
fwait
mov
aas
and
jbe
aas
jg
enter
sbb
push
cmp
sub
cmpl
dec
pop
push
into
popw
fimull
lea
pop
inc
inc
inc
lcall
jne
lock
dec
or
sbb
in
outsb
jmp
inc
pop
inc
pop
pop
add
ret
xor
rclb
jne
lock
mov
ficompl
mov
xchg
fwait
aaa
outsl
fidivrs
adc
stos
dec
repz
xchg
xor
or
sub
leave
jne
jb
aaa
outsl
fidivrs
jle
cmp
add
out
fwait
aad
mov
jne
mov
in
cld
jnp
cmpsb
repz
bound
popa
out
pop
mov
and
daa
neg
pop
sub
xorb
pop
jno
xor
testl
sbb
adc
rcl
inc
push
jge
jns
mov
mov
iret
mov
test
aaa
outsl
fidivrs
inc
test
adcl
fwait
mov
repz
insb
and
fidivrs
fmuls
jne
cmpsb
inc
leave
pop
cld
mov
aaa
aas
ja
das
repz
jno
dec
jns
scas
call
pop
fdiv
or
ljmp
mov
mov
dec
cmp
rcrb
sub
mov
or
pop
aas
sub
mov
loop
lods
out
incl
out
int
aaa
outsl
lcall
xor
mov
push
add
ret
add
mov
xor
outsl
aas
pop
jb
mov
jge
fdivrl
out
mov
sbb
daa
insl
sbb
rolb
outsl
fidivrs
out
push
out
int
in
jbe
mov
fwait
pop
push
mov
pop
jb
mov
outsb
fidivrs
mul
inc
pop
add
outsb
push
hlt
and
out
mov
pop
sub
xchg
sar
popa
aad
or
scas
lahf
aas
jg
jnp
xor
mov
lock
repz
loopne,pn
iret
popa
sahf
dec
rcl
sbb
aas
jg
cld
clc
aaa
icebp
pop
jge
jbe
fcomip
mov
push
in
lahf
insb
daa
out
loopne
mov
or
negl
loope
test
fwait
aaa
outsl
leave
sub
daa
mov
test
out
mov
xor
ja
pop
mov
aaa
mov
mov
insl
mov
test
xor
jge
cltd
int
aaa
outsl
clc
push
in
cmpsl
in
mov
in
cmpsb
sub
add
ds
aaa
outsl
fisubrs
repz
cmp
jae
add
jl
repz
jmp
inc
lds
sub
jae
pusha
xor
sub
outsl
fidivrs
inc
arpl
sti
xchg
in
int
sbb
add
xor
sub
cld
jnp
stc
out
xlat
loop
jecxz
into
movsb
or
iret
lahf
aas
xor
rolb
mov
stc
repz
adc
adc
pop
fstpl
mov
rclb
mov
loopne
in
out
ret
iret
insb
push
add
jns
mov
lods
loopne
adc
dec
sub
insb
sbb
into
inc
loop
mov
mov
cmp
cmpsb
xor
pop
mov
pop
aaa
outsl
fidivrs
sbb
pop
pop
adc
push
pop
dec
repz
enter
sbb
or
popf
dec
into
dec
xchg
xchg
stc
stc
out
xchg
dec
and
adc
in
jmp
lahf
aas
ljmp
jne
imul
in
in
mov
xchg
jno
cmp
cmpsl
mov
outsb
jnp
lahf
aas
jg
mov
loope
lcall
mov
stos
cmp
out
in
pop
scas
aad
repnz
imul
jg
mov
arpl
movb
repz
cmp
push
mov
daa
mov
xchg
dec
or
pusha
inc
sahf
jne
and
jne
fdivrs
movsb
clc
mov
idivl
push
dec
nop
or
add
push
sbbb
cmc
rclb
push
xlat
sahf
data16
out
sub
push
movsl
xor
xchg
mov
add
mov
adc
pop
or
xlat
out
fwait
ja
mov
fs
popf
mov
movsb
mov
fnstcw
mov
cmc
or
jne
out
pop
push
push
pop
inc
push
stc
and
cld
stc
sub
xchg
ja
adc
or
lahf
aas
push
and
push
out
dec
mov
xor
adc
int3
fwait
cmp
mov
nop
fstl
mov
fists
int
aaa
xor
cmp
mov
cwtl
jae
fidivrs
xchg
xor
leave
xchg
subb
dec
and
inc
aad
cmp
mov
cld
jecxz
ljmp
jecxz
mov
test
out
andb
lahf
out
or
sbb
repz
fwait
leave
out
es
and
pop
mov
fidivrs
mov
mov
lods
xchg
rclb
cld
inc
add
pop
push
cld
stos
daa
jg
add
add
clc
not
pop
mov
jg
setbe
and
out
les
lahf
jg
inc
inc
cmp
and
aas
mov
jle
stc
repz
dec
and
and
repz
aas
daa
ss
pop
jnp
mov
pop
mov
pop
inc
sub
ds
xlat
xchg
sti
inc
ret
fwait
aaa
outsl
btc
adc
xchg
fs
mov
inc
call
dec
repnz
loopne
sbb
mov
jp
enter
lock
aaa
cmp
out
lods
stos
lea
push
ljmp
movsl
repnz
outsl
fidivrs
std
rcrl
push
mov
in
push
mov
fwait
pop
dec
cmp
cmp
ficoms
cmp
fwait
or
ja
mov
fwait
aaa
outsl
jle
mov
aas
pop
sbb
int
das
sub
mov
mov
aas
jg
dec
out
mov
mov
sub
cmp
out
xchg
sub
jo
inc
cld
in
in
push
scas
addr16
mov
repz
out
fcompl
xor
subl
mov
add
sub
mov
pop
mov
cltd
fs
sub
push
fsubs
int3
fstl
fs
push
test
adc
sarb
imul
ret
pop
andb
pop
cs
in
iret
or
inc
push
bound
scas
lret
xor
lock
or
aam
ficoms
cld
stc
jno
ret
ficomps
sub
stc
repnz
iret
lahf
aas
pusha
xchg
aaa
lcall
mov
push
pop
dec
pop
rcrb
fidivrs
push
and
lahf
push
mov
mov
cli
xchg
js,pn
xor
mov
lds
push
cmc
and
push
push
xchg
int
aaa
add
aad
sub
mov
lea
mov
repz
int3
push
sub
aaa
out
sub
add
push
xor
jne
int
addr16
pop
mov
aam
pop
sbb
stc
notl
jmp
jge
xor
setg
jg
rorb
leave
or
lret
push
test
sub
xchg
das
cmc
arpl
repz
lahf
sbb
xor
xchg
mov
jge
jnp
cld
stc
pusha
fimull
xchg
inc
pop
popf
xor
pop
jne
iret
lahf
aas
pop
push
clc
fcomi
sarb
data16
mov
cld
stc
repz
test
push
repz
adc
xor
and
jg
daa
bound
test
iret
sahf
cltd
int
ja
cmpsl
inc
fiaddl
data16
ljmp
xor
loope
add
add
je
aaa
outsl
fiadds
aaa
adc
inc
out
lea
xchg
int
cmpsl
adcl
jns
inc
xchg
cmpsl
hlt
into
cmp
mov
in
cs
call
aaa
test
xor
push
jne
loope
mov
cld
popa
xchg
out
stc
bound
iret
mov
addr16
cli
cs
fwait
pop
jg
cld
stc
jns
fsubr
scas
sbb
mov
mov
and
mov
insl
in
aas
out
mov
xor
or
pop
cld
stc
repz
es
sbb
adc
pop
imul
and
es
fisttpl
add
out
mov
mov
push
dec
das
or
sti
out
gs
repz
iret
enter
stos
mov
aas
xchg
rorb
stc
stc
repz
pop
dec
je
test
shlb
mov
cwtl
stc
pop
popa
mov
stos
fwait
aaa
outsl
fisubs
loopne
in
not
in
push
cld
fnstcw
out
iret
loopne
jle
out
dec
sbb
aaa
outsl
fidivrs
push
push
push
nop
test
ss
insb
cld
jmp
lcall
jecxz
and
lahf
aas
jg
aam
fsubrs
mov
xchg
adc
enter
xchg
mov
mov
mov
mov
dec
jg
lods
out
outsl
fidivrs
addl
out
fwait
aaa
and
inc
push
mov
out
je
lcall
mov
aas
outsb
fisttpll
daa
roll
or
dec
int
aaa
outsl
mov
xchg
inc
xchg
fs
insl
cmp
out
imulb
sbb
pop
dec
std
stc
repz
push
and
roll
jg
cld
ficomps
dec
cmpsb
movsl
cmp
cwtl
outsb
inc
repnz
lahf
inc
mov
mov
cmp
fildll
fidivrs
cld
decb
test
outsl
and
stos
loope
xchg
inc
lret
cmp
mov
and
cmp
aam
aaa
outsl
fisubrs
xchg
movsb
je
dec
push
jg
pslld
int
lahf
mov
push
pinsrw
int
out
cmp
addr16
iret
das
fisttpl
mov
xlat
ja
xchg
mov
int
aaa
outsl
sub
push
jge
xor
into
aas
jae
jns
out
sub
fcomps
repnz
dec
mov
sub
cmpsl
xchg
aaa
outsl
fisubrs
mov
xchg
xchg
xor
pusha
stc
repz
bound
pop
shrl
fmull
push
es
cltd
mov
cld
leave
push
insb
pop
in
fisubs
mov
outsl
mov
loopne
add
stos
xor
repz
fwait
inc
subb
je
push
add
inc
sbb
inc
fidivrs
jns
rcl
and
psubw
out
aaa
test
xor
stos
shll
inc
cld
sbb
rcl
and
out
data16
dec
int
cmc
sub
into
lahf
aas
jne
push
or
cmp
pop
stc
repz
frstor
cltd
pop
lahf
xor
jecxz
fisubrl
mov
mov
mov
daa
add
push
stc
xrelease
aam
insb
cmpsl
push
movsb
jnp
jl
xchg
or
push
cmp
popa
stos
cmp
out
fwait
aaa
lods
fildl
lods
pop
push
or
repz
movsl
push
mov
sbb
shld
mov
mov
mov
lcall
nop
fs
hlt
xchg
and
cmp
sbb
gs
imul
pop
pop
fmull
gs
mov
lods
pop
cmpsl
pop
mov
shlb
outsl
fiadds
inc
pop
jg
lcall
sbb
push
addb
lahf
aas
mov
sbb
scas
insl
fcmovb
jns
mov
inc
add
pusha
imul
sbb
and
push
rcl
repnz
into
enter
cmp
aaa
outsl
ficoms
mov
cmp
ljmp
ljmp
or
mov
repz
sub
adc
jae
xor
int
and
nop
rorl
mov
sbb
adc
xchg
aam
inc
lods
xlat
xchg
addr16
outsl
mov
push
xchg
push
sbbl
push
lret
ljmp
cli
cli
in
iret
nop
sub
arpl
pop
lds
fdivrl
rclb
adcb
xor
jg
cld
stc
push
lods
mov
mov
jb
mov
aas
sahf
cmp
pushf
fidivl
mov
cs
mov
jge
repnz
aaa
outsl
fisubs
icebp
mov
enter
std
pusha
popf
mov
fstl
orl
inc
lock
inc
or
mov
orl
jno
push
dec
sahf
cld
add
add
xchg
inc
and
icebp
mov
inc
dec
xlat
clc
dec
xor
or
xor
pop
or
and
xlat
add
xor
dec
and
enter
or
jnp
mov
shrl
test
xor
or
push
rorl
stos
sbb
mov
or
enter
lret
and
adcb
adc
cmp
jg
or
jne
scas
mov
aas
sbb
popl
lahf
sbb
xchg
mov
ja
ja
or
or
mov
ror
cmpsb
adc
sbb
adc
adc
test
or
nop
aas
jmp
mov
out
mov
hlt
mov
shl
int
push
or
fdivrl
outsl
dec
push
xchg
js
imul
pop
clc
adc
or
push
adc
lods
xchg
test
mov
fisttpl
scas
dec
rclb
imul
int
aaa
mov
scas
ficoml
shll
fidivrs
icebp
sbb
test
mov
adc
fwait
aaa
outsl
xchg
push
xorl
out
xchg
add
repz
lret
jl
cmp
xor
push
xor
fiadds
push
mov
cmp
push
dec
add
xchg
int
outsl
dec
or
lahf
aas
jg
jle
into
lods
mov
bnd
stc
repz
xchg
add
adc
mov
cmpsl
jg,pt
cld
fs
jno
jae
es
xor
inc
jg
aad
repnz
insl
cmp
shll
leave
lahf
aas
mov
and
pop
xor
mov
mov
lret
jge
xchg
repz
fwait
aaa
fidivs
fs
shll
jns
rcll
js
cmp
add
cs
fwait
aaa
outsl
add
add
mov
xor
fs
mov
xor
aad
inc
jge
aam
push
pushf
sub
fidivrs
pop
push
adc
lods
ljmp
and
std
mov
mov
ficompl
stc
stc
add
test
fidivrs
out
pop
pop
scas
adc
inc
out
mov
lret
rorl
pusha
pop
cmp
fwait
aaa
out
mov
repnz
cmp
adc
push
int3
or
push
xorb
shlb
mov
mov
add
outsl
ficoms
fcomps
xchg
or
enter
sbb
mov
sbb
outsl
ficoms
push
mov
sub
cmp
out
fwait
aaa
stos
cmp
pop
adc
xchg
fidivrs
jmp
inc
inc
pop
daa
inc
or
int
aaa
outsl
loop
jbe
mov
mov
push
into
cmp
repz
sbb
ret
adc
movsl
mov
push
in
lahf
jg
push
or
xchg
mov
sti
andl
xlat
int3
iret
jne
lahf
aas
or
jecxz
jecxz
inc
pop
mov
push
adc
scas
xor
or
push
je
fimuls
pusha
fbstp
dec
scas
sar
out
mov
mov
mov
outsl
subb
stc
js
and
mov
xchg
int3
add
mov
or
mov
xor
int3
adcl
sbb
dec
xchg
lcall
mov
pop
adc
das
nop
cld
bound
faddl
or
or
push
dec
test
lcall
sbb
push
push
add
add
adc
sbb
push
pop
push
clc
adc
rcll
push
add
lret
inc
aad
lret
cmpb
call
pop
add
add
xchg
push
pop
inc
add
outsl
add
mov
inc
add
stos
mov
in
sbb
add
stos
es
push
adc
dec
add
daa
sub
psraw
mov
pop
cmp
test
adc
outsb
out
push
or
mov
call
insb
xor
add
dec
mov
jb
mov
lret
add
addr16
arpl
push
cmpb
test
and
mov
mov
call
sbb
out
test
add
ss
test
mov
lret
ret
push
adc
add
sbb
adc
or
or
fistpl
inc
mov
lcall
xchg
bswap
push
or
fadds
cmpsb
sub
int
push
and
ficoml
dec
add
inc
add
shl
inc
adc
mov
fdivs
push
or
mov
rclb
aad
es
jmp
adc
sbb
push
and
sbb
rcrb
push
cmp
pop
jp
jne
pop
or
and
xchg
lock
mov
clc
adc
ljmp
add
xor
cmc
pop
sub
mov
mov
jp
jb
inc
mov
and
rolb
add
add
pop
cmp
xlat
sbb
jge
cmp
or
mov
adc
lea
lcall
fmuls
test
adc
sub
mov
push
ret
mov
push
lock
sub
and
into
push
xchg
pop
imul
or
addr16
push
shr
hlt
push
push
mov
inc
hlt
stos
stos
cli
dec
xor
xor
cwtl
sahf
xor
imulb
cmp
adc
pop
add
or
and
jmp
xor
pop
push
xchg
rcll
sbb
push
or
push
jge
add
jne
rcll
push
jo
mov
jo
pop
or
rclb
rcl
mov
pop
mov
adc
into
lcall
or
inc
push
inc
mov
sub
sbb
adc
add
test
enter
jp
push
stos
ror
add
or
cmp
sbb
jl
pop
inc
add
adc
mov
not
shll
pop
pop
inc
movsb
mov
mov
add
add
inc
xchg
push
dec
sbb
and
inc
inc
ljmp
pop
push
mov
pop
xlat
es
ret
inc
sarb
adc
mov
dec
aam
or
push
imul
adc
lret
mov
outsb
enter
mov
pop
cmp
sbb
pop
add
jge
pop
outsb
or
fcmovb
push
mov
xor
and
pusha
mov
fiadds
push
cmpsb
lods
test
or
arpl
pop
stos
icebp
add
fimuls
lock
push
in
add
test
push
or
add
xchg
sbb
roll
call
mov
adc
mov
xor
xchg
sbbb
mov
adc
rolb
and
pop
in
mov
lret
mov
dec
or
subb
sub
test
std
push
daa
test
xor
repnz
lds
int
sub
pop
add
adc
js
cmp
or
jne
adc
mov
xor
sbb
xchg
xchg
js
pop
pop
mov
add
inc
frstpm(287
push
out
add
pop
inc
and
push
stos
pmulhw
push
inc
ljmp
popf
arpl
mov
or
into
lret
adc
out
addl
cmp
movsb
mov
pop
adc
add
test
and
mov
or
adc
mov
iret
shl
mov
xchg
or
fstpl
xor
loop
shlb
ret
add
jno
arpl
xchg
rcll
mov
test
adc
sti
add
sub
jnp
mov
xor
jb
add
add
xor
pushf
add
push
inc
call
and
adc
push
mov
dec
or
imul
pop
loop
les
lret
cmpsb
inc
or
cmp
call
dec
sbb
movsl
adc
mov
stos
roll
hlt
sbb
sbb
test
mov
inc
insl
and
loopne
mov
sarb
pushf
sarl
or
mov
ret
push
fisttps
cmpsb
sbb
jns
cli
add
dec
push
cmp
adc
loopw
popa
inc
fdivs
jg
lret
xor
shrl
sbb
cli
and
mov
xor
in
cmc
lock
movsb
lahf
rorl
adc
lcall
ret
add
lds
add
pop
and
inc
mov
clc
and
rol
pop
sbb
mov
jbe
popl
and
push
adc
add
push
inc
jnp
insl
and
int
mov
loope
jmp
lock
add
inc
xor
add
test
enter
add
mov
dec
jp
inc
ja
add
in
lock
mov
xchg
aam
push
in
lods
add
xor
popa
pusha
stos
icebp
ljmp
cld
sbb
xor
push
adc
cwtl
adc
js
testb
and
cmc
mov
push
xor
jb
nop
je
stos
lods
test
sti
inc
lock
sub
incb
das
or
pop
je
cmp
pop
xchg
lcall
push
mov
enter
sub
in
jb
js
or
or
mov
mov
xchg
cmc
mov
or
cmp
push
sahf
and
sbb
out
test
or
or
shrb
aaa
sub
mov
inc
xchg
push
xchg
scas
inc
jns
sbb
jbe
jnp
dec
arpl
dec
aam
and
or
inc
push
xorb
jo
jnp
ret
sbb
rorl
adc
shl
andl
sub
mov
xor
repnz
pop
add
ds
std
or
stos
inc
mov
inc
stos
cwtl
add
ljmp
lea
leave
dec
inc
inc
and
clc
test
sub
neg
or
xor
xor
sub
xor
mov
adc
adc
sti
add
dec
dec
add
sbb
cli
fisubl
mov
dec
in
shll
test
sub
hlt
xor
cwtl
js
out
jecxz
imull
xchg
pop
push
sub
or
inc
lods
ret
lock
out
or
mov
test
and
ret
xor
xor
inc
xchg
sbb
fisubrs
cli
pop
adc
data16
mov
lods
lcall
inc
dec
sarb
popf
or
push
sbb
xor
test
push
shrl
push
fs
mov
or
add
jg
cltd
mov
or
dec
in
sub
cmp
add
cmp
add
lcall
or
clc
xor
cmp
rcll
push
dec
dec
add
push
cmp
movsl
test
lret
push
sub
push
sub
xlat
add
mov
mov
mov
push
cwtl
push
andl
lret
cmpsl
aam
add
mov
mov
adc
push
xor
sbb
rolb
int
jnp
push
sahf
arpl
sub
add
adcl
scas
ljmp
test
pushf
cmp
add
fcmovb
push
pop
push
xor
and
add
lret
mov
jnp
or
cwtl
rcrb
sub
movsl
dec
mov
adc
ss
xchg
pop
insl
test
leave
mov
nop
stos
add
or
adc
test
jg
mov
mov
inc
ss
adcl
push
xchg
popa
rcrl
pop
mov
push
ljmp
fadds
in
sub
adc
or
orl
push
fsubs
or
add
mov
rol
mov
cmp
shll
lea
push
popa
add
js
push
push
xchg
imul
pusha
into
mov
ljmp
lcall
add
fsubs
mov
and
lret
faddl
pop
and
push
jnp
pop
pop
test
and
push
mov
sub
inc
je
mov
cmp
in
push
sarb
push
xor
stos
shll
ret
scas
and
or
sahf
sbbl
lods
mov
cmp
ss
call
xlat
jecxz
pop
repnz
add
addl
repnz
or
data16
dec
sbb
add
cmpsl
pop
pop
mov
pop
pop
ljmp
fisttps
add
adc
xor
mov
jne
add
mov
inc
xchg
cmp
sarb
cld
bound
or
mov
jo
jo
les
cmp
dec
icebp
sub
cmpl
shlb
mov
shll
lea
sbb
cmpsb
push
addr16
sbb
inc
shrl
aaa
add
push
repnz
xor
mov
push
js
insl
rorl
and
mov
addr16
repz
inc
mov
nop
dec
cmp
push
jne
sbbb
pop
scas
mov
adc
push
rolb
adc
mov
or
sub
mov
loope
and
or
and
enter
test
adc
bound
jne
fists
xor
add
and
sbb
inc
or
jbe
mov
sub
loopne
inc
inc
movsb
in
inc
and
and
mov
dec
roll
int
jbe
sub
out
or
mov
push
add
sbb
sub
or
push
cmp
ret
mov
cmp
cld
repnz
movl
inc
adc
push
cmp
sbb
sbb
and
adc
inc
scas
push
ficoml
aaa
call
or
orl
adc
lods
xchg
sub
subb
sub
rolb
and
test
sbb
push
sarl
into
jmp
sbbl
notb
dec
sub
dec
xor
shrl
stos
rcl
test
adc
sbb
adc
inc
adc
cmp
push
test
sub
clc
push
sbb
lcall
rcrb
shrl
cmpsb
adc
sbb
jnp
add
leave
out
loop
sub
adc
inc
mov
mov
or
ss
je
dec
mov
mov
lods
sub
ljmp
inc
pop
imul
and
pop
inc
adc
adcl
xorb
or
xchg
add
fcoml
test
je
sub
or
das
stos
loopne
rolb
adc
mov
mov
out
pop
shl
xorl
jecxz
test
mov
or
push
mov
insb
mov
push
mov
mov
adc
add
xchg
add
and
jo
adc
cmp
cmp
push
cs
dec
lahf
sbb
mov
dec
ss
pop
jo
xor
add
jmp
pop
add
add
loopne
cmpsb
adc
lret
cmc
inc
sbb
enter
ret
sub
adc
scas
out
mov
sbb
inc
adc
xlat
xchg
insl
xchg
dec
sbb
xchg
xchg
jp
stos
stos
push
nop
push
imul
jo
test
ret
rcl
orl
or
out
sub
adc
pushf
xlat
cmpsb
dec
xor
nop
outsl
js
call
and
mov
mov
or
rclb
cmpsb
repz
loopne
pushf
rcrb
adc
rcl
sub
xlat
or
add
push
add
xor
or
sub
pop
shrl
int
xor
test
xchg
pop
div
xorb
pop
adc
fldl
insb
rclb
nop
fdiv
nop
push
insb
fwait
daa
add
sbb
add
and
add
pop
jmp
cmp
sub
pusha
or
push
pop
mov
aad
push
es
movsb
pushf
nop
iret
pop
aas
daa
and
xor
xchg
arpl
enter
push
add
push
dec
add
jo
test
addr16
into
ret
xor
test
in
push
pop
push
mov
push
dec
lock
call
mov
xor
mov
or
mov
jb
mov
inc
shrb
loope
mov
jge
mov
sbb
inc
rcrl
add
or
mov
adc
mov
mov
sub
cmp
outsb
aaa
test
mov
out
mov
push
push
movsb
dec
xchg
sbb
out
test
repnz
scas
push
aam
inc
lods
pop
add
jmp
inc
scas
mov
mov
xchg
fildl
sbb
fstl
sbb
addb
or
xor
or
leave
and
adc
out
dec
stos
xchg
leave
sub
lods
int3
out
stos
xchg
pop
mov
adc
push
and
subb
jo
push
cltd
sbb
lods
in
xor
xlat
add
jae
jge
and
or
xor
mov
lds
pop
stos
and
or
ret
bound
cwtl
xor
popf
test
mov
push
in
int3
repnz
mov
inc
cmp
and
out
push
aad
mov
in
xlat
call
incl
sti
pop
scas
mov
pop
mov
or
inc
mov
dec
dec
and
cltd
js
aam
push
ret
rclb
dec
jae
pop
insl
adc
jnp
std
add
mov
cmp
add
push
push
sbb
push
addb
sbb
rorl
lock
pop
nop
mov
jae
pop
pop
stc
add
add
pop
and
rolb
jge
push
aaa
scas
push
or
xor
roll
xor
es
lret
loope
loope
mov
mov
stos
fmull
or
adc
int3
data16
add
stos
fsubrl
cmp
adc
jo
inc
orb
call
sarb
test
pushf
and
sub
mov
out
cmc
lods
leave
cmp
sub
loopne
sub
adc
fucomip
scas
and
ret
adc
mov
push
mov
cli
rorl
pop
add
das
js
out
adc
inc
adc
psubd
xchg
xor
es
mov
imul
leave
xor
add
inc
movl
sub
inc
insl
pushw
call
push
push
sbb
insl
rorb
test
pop
xor
add
mov
and
sub
push
xor
inc
test
imul
or
push
inc
stc
ffreep
inc
sub
stos
sub
push
lret
cmc
leave
mov
xlat
add
cmp
or
push
add
adc
insb
leave
push
int
lock
add
lock
dec
cmp
ljmp
scas
push
push
fsubrl
roll
jo
push
subb
sbb
inc
add
movsb
aaa
xorb
insl
fdivl
ror
adc
and
aad
cmp
cmp
fsubs
mov
push
sbb
aaa
pop
sbb
cs
leave
in
shlb
pushf
push
mov
pop
adc
dec
dec
enter
push
pusha
lcall
dec
push
cwtl
and
icebp
pop
xchg
fs
rcrb
dec
inc
enter
enter
pop
sarb
adc
push
insw
punpckhbw
xor
push
add
testl
push
jg
push
add
add
enter
mov
mov
adc
or
lock
rclb
push
subl
mov
outsb
std
call
xor
cmp
add
pop
adc
add
add
sbb
inc
stos
mov
adc
out
mov
das
and
bound
mov
lret
mov
inc
das
and
mov
adc
push
jl
add
lea
dec
add
hlt
add
inc
je
addl
push
andl
adc
jne
ljmp
or
mov
push
adc
xor
sub
inc
sbb
rclb
dec
dec
pop
add
shll
mov
mov
pop
faddl
cwtl
cmp
cmp
xor
sub
sbb
sbb
out
or
inc
adc
sbb
mov
mov
adc
aam
es
adc
rolb
lea
add
and
jo
fimull
xchg
popl
push
or
les
addb
shlb
push
ret
xor
insl
or
push
cmpsb
and
push
addb
push
pop
rclb
push
bnd
pop
cli
lds
lcall
fsubp
add
pop
mov
adc
push
cltd
mov
xor
lret
aad
cs
jge
mov
mov
add
hlt
push
lcall
lods
add
repnz
fistps
adc
push
adc
mov
nop
jge
int3
push
mov
sbb
mov
adc
push
pop
lock
push
loopne
bound
sub
xor
pcmpgtw
mov
xchg
inc
rolb
sbb
pop
out
cmc
cltd
inc
test
pop
dec
mov
add
add
cmp
out
enter
dec
cmp
xchg
aam
popa
shrb
fs
inc
inc
pushf
andb
sbb
xchg
push
cli
sbb
xor
mov
add
push
jne
pop
mov
call
push
and
adc
xor
ret
push
sub
nop
mov
push
adc
rcll
adc
call
jne
mov
jmp
push
sqrtps
pop
repnz
xor
aam
dec
push
int3
push
adc
push
pop
sahf
jo
fists
mov
sub
xchg
adc
mov
cmp
pop
xor
aaa
cmovle
or
push
mov
push
dec
sub
shl
pusha
push
jmp
lret
stc
rol
inc
pop
and
loopne
jns
mov
sub
push
mov
test
shrb
mov
or
fstp
push
or
rcll
jbe,pn
or
test
mov
xchg
jg
lea
loope
imul
js
add
push
int3
lret
sbb
loop
cmp
add
mov
push
inc
icebp
imul
sbb
loope
add
lods
addl
mov
xchg
mov
pop
mov
add
lcall
inc
push
lods
in
mov
out
sub
sub
jp
cmp
sub
inc
cmp
add
jo
mov
add
psubusb
mov
push
bound
notb
addr16
loope
ret
mov
push
push
sub
push
inc
and
rorb
and
stos
repnz
mov
cmp
cmpsl
bound
push
cmpsl
lahf
push
add
push
lds
fdivrl
jnp
inc
mov
or
jns
dec
xchg
sbb
ret
fmuls
mov
xchg
push
push
pop
sbb
xchg
fsubrs
push
cmp
jo
inc
xor
out
test
adc
dec
push
jne
or
push
xchg
shlb
lcall
jno
insb
loop
sbb
imul
xor
add
pop
lock
sbb
cmpsb
into
or
fstpl
pop
sbb
push
mov
inc
jo
in
inc
mov
sbb
adc
pop
add
es
mov
mov
sub
sbb
scas
add
inc
pop
ret
fsubrl
je
div
cltd
pop
ret
add
rolb
and
movsb
push
insl
dec
fdivrs
je
mov
cmp
cmp
pop
xchg
dec
xchg
and
sub
in
les
push
or
mov
cmpsb
in
cmp
mov
or
stos
xchg
lcall
stos
sbb
xchg
xchg
leave
pop
xchg
das
push
dec
lret
add
push
jp
sub
push
add
lcall
js
clc
and
repz
or
sub
add
fimuls
jnp
push
pop
jmp
lds
adc
dec
clc
push
inc
imul
mov
jae
xchg
leave
adc
aaa
jg
and
sub
fcoml
mov
dec
push
pop
jae
xor
fldl
cwtl
dec
and
fldt
pop
pop
xchg
mov
mov
test
out
stos
mov
test
and
inc
mov
movsb
push
push
push
adc
ret
mov
adc
shll
mov
cmpsb
sbb
rcl
inc
imul
pop
jno
inc
xchg
sbb
daa
adc
pop
mov
test
pop
pop
xor
ja
xchg
push
pop
mov
add
icebp
pop
call
fiaddl
xchg
loopne
add
push
test
mov
or
pop
sub
mov
jg
lret
pusha
shrl
das
adc
je
setae
mov
fists
adc
add
push
add
ret
insb
mov
sbb
mov
adc
adc
je
into
lock
lcall
mov
cmp
cwtl
aad
mov
psraw
or
leave
das
push
je
or
push
clc
or
mov
xlat
daa
loope
ljmp
int3
or
dec
lea
lret
dec
imul
adc
xchg
add
jecxz
xchg
sti
and
mov
adc
push
addr16
int3
andb
es
jo
lods
jb
push
fxch
push
js
xor
mov
rorb
inc
mov
scas
aas
mov
sbb
cmpsb
orb
int
mov
push
add
and
addb
fstl
lock
or
push
cmc
sbb
sbb
mov
adc
sbb
not
notb
adc
push
xor
xor
fdivrs
push
movb
out
add
in
test
fisubrl
adc
mov
pop
dec
xor
das
pop
add
mov
test
lock
and
jb
sbb
lds
scas
and
iret
push
sbb
adc
jnp
fisubl
aad
inc
sub
sub
stc
sbb
enter
and
shlb
mov
jne
or
sub
ljmp
adc
movl
pop
sub
and
sbb
or
push
aas
aam
loopne
push
lcall
stos
adc
pop
or
mov
pop
call
inc
cmpsb
xor
sbb
jns
rcl
stos
mov
pop
push
popf
mov
sbb
or
lret
xchg
xor
divb
sbb
cmpb
test
and
and
push
cmpsl
dec
push
sahf
sub
sarb
jge
js
stos
push
rcrl
adc
pushf
push
add
cld
xchg
out
mov
call
add
pushf
adc
loopne
mov
push
adc
lahf
dec
in
cmp
adc
inc
pop
pop
adc
xor
pop
or
mov
or
fistpl
xor
push
inc
mov
add
sub
dec
push
cmp
and
mov
mov
sub
push
and
shll
pop
loope
enter
push
xor
xor
stc
mov
mull
and
or
ret
dec
adc
fs
jns
out
dec
xor
mov
push
adc
pop
lret
add
popa
sub
adc
mov
push
mov
sub
rol
pop
mov
pop
sbb
imul
jge
addr16
cwtl
mov
inc
push
ret
xchg
pop
cmp
xor
xor
lret
mov
inc
push
out
cmp
mov
fdivrs
movsl
sub
aad
push
mov
movsb
adc
mov
add
adc
enter
inc
inc
xor
push
nop
and
adc
add
sub
add
push
insl
cmp
add
pop
add
fbld
stos
rol
push
lret
popa
cmp
jecxz
adc
sub
fldpi
sub
push
test
das
or
pop
mov
or
inc
cmp
sbb
jnp
add
pop
push
inc
js
dec
inc
dec
into
leave
push
adc
push
and
fiadds
scas
adcb
sub
sbb
sbb
sbb
outsb
mov
scas
cmp
scas
or
notl
idivb
push
loopne
loop
push
add
in
xlat
adc
arpl
push
stos
pop
sarl
add
pop
push
sbb
mov
xor
mov
add
cmpsl
mov
fs
xchg
nop
xor
xchg
mov
repnz
repz
push
sbb
jecxz
adc
leave
or
arpl
and
jb
and
cli
and
pop
adc
pop
shll
inc
and
popa
mov
inc
sbb
sbb
movsl
push
add
mov
inc
push
inc
das
ss
mov
test
or
out
sbb
adc
into
fwait
ljmp
pop
push
sbb
ficompl
lock
popa
out
and
add
dec
into
push
push
insl
fs
push
gs
pop
outsl
sbb
push
into
jno
pop
cltd
inc
push
mov
rolb
test
xchg
mov
push
xchg
sti
sti
pop
fnstsw
push
mov
jmp
pusha
add
icebp
rolb
cmp
sub
or
sahf
insb
dec
je
ds
push
rolb
clc
sub
xchg
push
xor
rcll
or
and
xchg
jecxz
les
cmp
lods
sbb
imul
push
or
or
sbbb
sbb
daa
push
sbb
sbb
cmp
inc
or
lcall
insb
rol
in
dec
sbb
jg
ret
mov
sub
sub
dec
ficoml
stos
sbb
and
or
ss
sub
jmp
push
cmc
sarl
or
loope
lods
aas
pop
xor
dec
insb
push
ljmp
cmpsl
movsl
jo
cmp
xor
cmp
adc
sbb
xor
sub
inc
dec
push
je
add
sbb
adc
je
pop
mov
in
jge
or
inc
daa
test
push
xor
aad
lret
or
mov
or
cmp
cwtl
stos
pop
mov
adc
jno
and
ljmp
ret
xchg
fstps
push
add
int3
js
movsl
lcall
xor
or
push
mov
cs
mov
or
adc
add
in
nop
rcrl
adc
test
push
mov
insl
roll
cmp
lret
lds
jp
in
daa
jno
and
outsl
pop
sbb
adc
jmp
shrl
test
cwtl
sub
xor
mov
adc
xor
pop
push
rorb
xor
shrb
xor
pop
mov
mov
sbbb
lock
enter
adc
adc
into
push
adc
jo
idivb
mov
ret
aam
inc
pop
mov
jmp
test
out
or
push
js
adc
icebp
das
cld
outsb
mov
out
adc
inc
or
cmpsb
and
dec
xchg
pop
push
sub
cltd
add
sub
sub
pushf
shr
cld
adcb
stc
add
notb
jp
stos
mov
lcall
inc
adc
push
hlt
out
inc
adc
int
dec
sub
sbb
or
mov
pop
mov
or
xor
rcrb
push
xor
and
and
mov
fadd
nop
mov
jp
dec
add
push
outsb
shll
ret
nop
lret
inc
mov
cltd
in
popf
mov
aas
rcll
rcl
sub
mov
jmp
sub
testb
ret
dec
cmp
loope
pop
xor
sub
sub
and
enter
js
insl
mov
ljmp
icebp
dec
inc
or
or
nop
mov
pop
or
add
xchg
pop
and
mov
inc
xor
sbb
addr16
xor
inc
cli
test
mov
cs
pop
push
jb
lods
sbb
inc
int
enter
lock
loop
lret
push
xchg
mov
mov
xchg
jbe
xor
aas
and
sbb
push
int3
xlat
divb
push
xor
sbb
inc
inc
rorl
scas
rorl
xorl
push
ret
push
jp
ret
jo
adc
push
xchg
mov
adc
dec
popf
xlat
sbb
mov
lret
sbb
js
scas
or
mov
mul
xor
imul
add
imul
inc
shrb
cmpsl
roll
adc
dec
inc
pop
sbb
sbb
adc
push
bound
in
adc
xchg
mov
push
subb
adc
bound
fmul
jns
sbb
and
icebp
add
inc
shrl
xchg
shrb
sub
inc
pusha
mov
push
rorl
xlat
xor
rorl
sbb
in
pushf
in
jo
ljmp
movb
adc
adc
enter
jecxz
sub
push
and
inc
cmpsb
sbb
js
sub
jg
sar
int3
mov
add
jo
push
inc
test
mov
xor
push
adc
add
repnz
rcrl
sbbl
ds
call
pop
cmp
jno
aaa
lret
cmp
scas
and
pop
das
push
push
push
mov
xor
lret
test
rcll
test
lea
pop
roll
jbe
fwait
sbb
push
lods
popa
adc
push
mov
dec
cltd
adc
jo
test
pop
sub
jge
push
mov
stc
test
mov
mov
ret
mov
mov
add
inc
out
mov
dec
or
sbb
addb
pop
mov
and
rorl
push
cmpl
pop
rcll
xor
inc
adc
rol
sub
mov
mov
mov
dec
cltd
push
pop
int
lods
adc
inc
pop
stos
mov
inc
push
stos
js
pop
or
test
mov
xchg
je
pop
push
pop
inc
adc
sbb
rorl
sbb
pop
xor
mov
rolb
push
imul
or
or
hlt
mov
add
or
or
xor
mov
mov
into
mov
inc
cmp
push
jb
xor
xchg
stos
enter
adc
into
jae
mov
repz
mov
aam
dec
jne
addl
add
adc
icebp
xchg
inc
das
inc
ret
sti
cltd
push
inc
rol
das
or
add
bound
jl
or
add
inc
xchg
inc
ds
loop
iret
add
sub
scas
or
jnp
push
test
lret
push
sbb
lock
cltd
mov
loope
jne
inc
xor
or
and
inc
adc
rcrb
sub
cmpsb
stos
pop
push
dec
adc
cmp
aad
push
sub
mov
aad
sbb
sbb
mov
sbb
sub
adc
mov
add
push
push
lods
sbb
mov
push
pop
sub
push
sbb
loop
and
dec
rorb
cmp
scas
shrl
and
push
inc
dec
in
adc
jle
sbb
fcoml
lret
mov
pop
rolb
jns
stc
cmp
sahf
loopne
sub
mov
adc
cmpl
sub
popa
test
lods
out
iret
or
fs
sub
lods
test
fimuls
xlat
pop
jbe
in
or
inc
lret
ret
add
popa
ljmp
pushf
lock
mov
add
xchg
mov
test
int3
sub
sub
cli
mov
mov
inc
inc
add
add
sub
sbb
dec
movsb
movsb
xchg
js
mov
jb
sub
xchg
lods
adc
dec
cmp
or
and
popf
hlt
dec
addr16
inc
jnp
mov
adc
sbb
movsl
or
mov
call
xchg
adc
inc
insb
dec
mov
mov
sub
add
int
in
mov
nop
or
mov
outsl
fnstenv
sbb
sub
cwtl
xor
shrl
adc
push
test
lea
outsl
sbb
test
inc
or
or
add
pushf
idivb
out
adc
inc
popl
mov
shrb
into
xorl
and
xor
push
add
clc
ror
leave
enter
push
ljmp
jnp
stos
xor
les
pop
nop
lahf
ljmp
dec
mov
mov
test
or
ret
loopne
std
pop
add
fists
test
mov
clc
pop
push
cltd
and
lret
scas
and
lds
jne
or
mov
rclb
jns
mov
inc
mov
into
mov
xchg
fs
sbb
or
and
stos
inc
loopne
lock
sub
mov
rorl
pop
hlt
add
sbbl
sub
jne
andl
loopne
lret
lret
mov
mov
andb
in
enter
add
or
push
repnz
cwtl
outsb
add
pop
sub
js
pushf
jmp
sub
jne
rclb
inc
pop
negb
cmp
adc
call
orl
testb
cli
pop
adc
push
shr
rcll
push
stos
ss
into
push
push
sahf
rolb
adc
adcb
pusha
xor
xor
xor
pop
cli
adc
mov
mov
push
ljmp
sbbl
push
sbb
inc
mov
or
add
movsb
push
add
sbbl
or
stc
fwait
sub
test
inc
test
add
sbbl
push
push
add
inc
addr16
pusha
sbb
or
lds
adc
mov
adc
sti
dec
test
xor
lock
or
jne
ret
cmpsb
pop
prefetcht1
adc
icebp
mov
or
insb
mov
mov
push
xchg
cmc
xchg
mov
sahf
call
sarb
add
ret
pop
lret
dec
cmc
ljmp
xchg
or
mov
sbb
movsb
enter
cltd
cmp
sub
ljmp
sbbl
loopne
or
dec
fwait
push
sbb
mov
lock
add
ljmp
push
test
mov
or
sbb
adc
cmp
sbb
adc
outsb
loop
mov
rolb
cltd
xlat
adc
mov
or
out
stos
hlt
stos
sbb
add
insb
shlb
int
int
mov
lea
cmp
lods
loopne
mov
rclb
ret
mov
inc
jne
adc
cmpl
push
lea
pop
dec
das
push
sbb
sbb
test
int
jns
jb
cmp
clc
inc
jl
jge
xchg
jp
or
mov
adc
push
jb
data16
add
rorl
leave
bound
sub
hlt
dec
shl
push
cltd
mov
pop
jmp
pop
or
jmp
push
add
pop
adc
lcall
ret
ret
rolb
inc
push
and
sbb
xchg
repnz
imul
mov
andb
sbb
sarb
xchg
and
nop
rolb
jb
inc
sahf
pop
outsb
aam
mov
and
pushl
pop
or
or
lock
add
adc
xchg
xor
ret
adc
ja
or
je
mov
shlb
push
inc
sub
lods
jno
jnp
clc
inc
xor
mov
or
mov
inc
sbb
loopne
sub
jmp
pop
jecxz
add
adc
xchg
daa
inc
mov
aam
inc
ret
and
add
dec
push
adc
mov
call
jo
fs
or
je
sub
mov
add
bound
sbb
call
xor
shr
orl
jge
pop
adc
mov
and
cld
pop
je
stos
addr16
pop
pop
in
add
adc
xchg
ljmp
scas
mov
and
dec
mov
mov
xor
add
mov
inc
int
shll
rorb
daa
push
add
pop
movsl
jo
push
xchg
cmp
das
add
pusha
sbb
inc
movsb
shrl
stc
faddl
mov
mov
xor
add
out
mov
add
push
inc
stos
or
loopne
push
jge
mov
adc
add
xor
insl
out
loope
ret
adc
loopne
inc
sub
fisubl
call
dec
inc
mov
jle
or
jb
notl
mov
dec
mov
rcr
mov
or
data16
cmp
add
gs
add
add
inc
es
pop
push
cli
jns
sbb
jno
pop
andl
int
in
add
sub
call
jo
mov
mov
test
sbb
leave
rcll
push
add
push
mov
scas
or
sub
pop
push
sbb
sbb
mov
xchg
lret
xor
mov
imul
or
fcompl
test
sub
js
jb
mov
stos
mov
cwtl
outsl
adc
sbb
adc
sbb
mov
in
dec
mov
or
testb
xor
inc
arpl
inc
mov
or
mov
addr16
push
adc
or
add
or
cmp
ljmp
sub
or
or
sti
fsubrl
pop
mov
leave
data16
mov
xor
das
xchg
jae
inc
incl
outsl
andb
in
pop
push
push
push
outsl
mov
call
and
rorb
mov
lea
or
sti
or
adc
pop
pop
test
jne
fsubr
xor
cmp
sbb
std
leave
adc
testb
pop
sbb
jge
outsl
mov
sbb
fs
inc
mov
inc
decl
sub
lea
push
sub
pushf
test
std
incl
add
mov
aam
add
pop
sbb
and
lods
ljmp
outsl
and
push
shlb
inc
in
mov
jg
or
adc
pop
pop
ret
mov
jne
push
xchg
cmpl
test
jne
push
pushl
or
sbb
fsubr
in
mov
and
nop
and
mov
add
rolb
adc
jo
push
add
divb
lock
ret
mov
movsb
adc
aaa
and
or
push
sub
pop
adc
mov
jne
sbb
out
in
sub
mov
mov
call
jne
or
adc
mov
jno
inc
sbb
jb
mov
pushf
xor
stc
pop
in
cltd
sbb
adc
mov
test
pop
je
or
ret
sbbl
repnz
xchg
sub
mov
insb
sub
and
enter
hlt
jmp
movsl
popl
ret
jo
push
or
ret
pushl
or
pusha
mov
je
pop
xor
outsb
mov
or
xchg
mov
pusha
or
pop
jmp
jae
adc
daa
loop
dec
push
int
mov
dec
or
or
mov
shl
mov
daa
outsb
sar
jge
lea
movsb
mov
jge
lahf
xchg
in
fs
and
cmp
jl
mov
mov
jle
cmp
push
cmc
or
inc
pop
int3
jmp
cmp
lahf
inc
jle
cmp
xchg
stc
cmp
out
cs
mov
push
cmp
jge
pop
clc
jbe
push
rcrl
js
pop
jmp
call
ret
push
lods
cld
mov
or
jmp
sbb
insb
jl
pop
pop
leave
mov
push
fdivrs
inc
popa
cmp
push
mov
cmp
add
lods
jae
cmp
jne
out
adc
push
loopne
mov
or
sbb
stos
or
jo
cmp
lcall
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
insl
sti
sbb
das
insb
aas
mov
jmp
cmpb
or
std
or
jbe
inc
or
ja
xor
add
jmp
gs
push
xor
cmp
hlt
sbbb
xor
daa
cmp
je
cmp
jg
jmp
out
jb
lea
add
fists
add
pop
cmp
mov
int3
mov
pop
sbb
or
cmp
push
push
jo
test
mov
pop
inc
cmpb
and
cmp
cmp
mov
push
cs
pushl
js
pop
bound
fstpt
jne
pop
incl
clc
mov
add
jmp
mov
mov
push
jle
imul
cmp
fbstp
clc
mov
push
add
push
push
push
lahf
bound
mov
xchg
fmuls
sub
or
outsb
xchg
mov
and
push
push
xor
into
lock
pop
les
mov
insl
dec
sbb
es
jne
push
test
or
add
stos
mov
adc
ret
cmpb
inc
mov
inc
cmp
sub
mov
sub
add
mov
mov
mov
inc
inc
or
jmp
or
addb
out
add
sbb
inc
push
add
add
inc
sbbl
mov
inc
icebp
repnz
fsubl
je
or
or
jne
dec
imul
jmp
imul
lcall
data16
mov
pop
icebp
pop
enter
mov
add
rcl
test
mov
inc
inc
jmp
xchg
sub
ret
add
ret
insl
or
jecxz
jmp
jecxz
or
mov
sbb
xchg
ret
shr
mov
dec
test
jnp
rclb
jne
andb
aas
lock
fidivl
add
sbb
inc
cmp
push
pop
sbb
inc
adc
outsb
add
xorl
test
fimull
push
push
movl
pop
sti
pop
ret
dec
and
cmpsb
hlt
push
mov
shll
shrb
sub
dec
jnp
hlt
jmp
xor
aaa
pop
inc
inc
cmp
pop
ljmp
pop
sub
insb
mov
mov
addl
jbe
frstor
push
jae
inc
inc
or
jne
push
clc
push
sub
das
nop
inc
sar
aam
inc
fisttpl
mov
mov
jge
lcall
adc
je
pop
add
shll
lea
or
daa
pop
or
add
mov
jmp
test
pop
cmp
je
pusha
mov
je
insl
mov
fildl
jnp
add
movl
and
or
cmc
int3
lds
push
push
fiaddl
mov
in
pop
fwait
sub
or
or
sbb
stos
sbb
and
pop
mov
add
andl
inc
add
mov
add
mov
lock
jg
ss
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
adc
xor
pusha
inc
mov
pop
arpl
jecxz
add
jl
sbb
or
xor
push
andb
cmp
pop
inc
lcall
push
or
ret
shll
pop
or
shll
pop
mov
or
sbb
add
inc
cmp
jl
pusha
pop
and
cmpl
lea
jne
ss
das
push
sbb
enter
jmp
ret
dec
neg
sbb
adc
jp
push
jo
aas
mov
or
ret
ds
orb
fnstsw
or
jmp
add
adcl
pop
fcmovnu
xchg
test
imul
rorb
mov
je
jbe
lods
mov
sub
sbb
sbb
testb
xchg
pop
pop
pushl
push
pop
inc
ss
adc
mov
popf
mov
ficompl
adc
data16
dec
insb
inc
mov
enter
insb
es
push
pop
adc
push
into
pop
outsl
pop
jge
add
xor
sahf
push
cli
fisubrl
test
lds
repnz
popa
test
cmp
loope
nop
ret
int3
mov
enter
sbb
push
pop
sub
mov
inc
add
testl
psubsb
adc
testl
push
push
inc
push
inc
lret
sbb
jnp
jo
mov
sub
outsl
sub
jbe
mov
dec
xchg
jl
jbe
lea
sub
sar
in
sbb
push
or
ret
popl
mov
or
push
mov
add
push
test
sbb
sbb
jns
pop
pusha
add
imul
ret
cli
mov
inc
xor
pop
inc
xor
mov
cmp
testl
dec
cmp
cmovne
pusha
clc
mov
mov
and
or
popa
xchg
pop
sti
xchg
insl
jbe
je
push
push
lea
test
pop
scas
mov
or
push
cmp
jmp
inc
mov
sbb
fstpt
outsb
fimuls
or
fsubr
ja
or
sbb
mov
insb
mov
out
jmp
pop
fdivrs
pop
push
jle
sbb
mov
inc
sbb
pushf
ljmp
loope
loope
or
icebp
sub
inc
aam
mov
ljmp
loopne
cmp
mov
adc
test
xor
pusha
ret
leave
mov
push
or
mov
icebp
shl
cmp
sub
xchg
call
jo
adc
test
jne
or
test
xchg
pop
ja
and
mov
adc
into
dec
call
push
add
adc
or
aas
inc
pop
gs
dec
call
sbb
clc
or
or
clc
inc
call
mov
leave
int
pusha
dec
adc
in
mov
push
or
sbb
shll
mov
and
adc
and
iret
mov
jecxz
adc
lds
mov
push
daa
int
int
or
cmpsb
jle
push
jmp
dec
nop
test
sbb
xor
fcom
pop
in
mov
jb
stos
push
subl
xor
jne
push
push
pop
jp
cmp
call
pop
pop
lods
mov
pop
in
outsb
test
mov
add
push
arpl
stos
ret
pop
xchg
sbb
mov
call
mov
sub
mov
pop
mov
ret
mov
mov
sbb
negb
lcall
adc
jo
stc
add
fs
inc
sbb
xchg
fcoml
lahf
cmp
cs
inc
xchg
cmpsl
mov
add
sub
adc
pop
fst
insb
cs
js
sbb
inc
mov
mov
nop
pop
pop
cmp
mov
aaa
sbb
push
andl
jg
jbe
xchg
loopne
jne
rep
stos
mov
xchg
dec
dec
sub
jge
arpl
dec
rcll
or
fiadds
or
mov
xchg
and
cmp
out
call
and
push
add
lea
std
lea
dec
je
mov
lea
add
mov
ja
adc
mov
inc
push
push
jbe
inc
inc
cmpb
enter
xor
fdivs
fs
jmp
lods
push
mov
fisttpll
jo
shlb
jmp
inc
push
rcl
jns
jno
gs
mov
or
xchg
jb
push
cmp
outsl
cmp
pop
dec
push
jmp
or
add
dec
stos
add
push
jo
pusha
xchg
push
test
add
insb
insb
xchg
sbb
pop
hlt
mov
fiadds
fucomi
sbb
cmp
nop
cwtl
adc
mov
xor
adc
jo
pop
mov
dec
sub
inc
mov
jae
inc
mov
dec
push
mov
mov
inc
add
sub
jns
push
jno
rclb
and
add
in
pop
mov
push
pop
xchg
push
mov
cli
push
aas
aas
sarb
lcall
out
mov
mov
movb
addb
mov
push
insl
ljmp
inc
sti
out
inc
mov
shr
test
and
rep
inc
inc
xor
inc
pushl
lock
cli
mov
lea
push
mov
into
fcoms
std
sbb
int
push
xor
subb
cmpsb
pop
sub
daa
lock
jb
lret
jb
mov
test
out
addr16
push
add
mov
popf
xchg
mov
adc
add
push
xlat
mov
fisttpl
jmp
adc
add
std
ret
sbb
and
pushf
mov
adc
push
and
and
ljmp
mov
imul
std
inc
sbbl
jmp
rorb
mov
imul
jbe
adc
or
sbb
xor
sub
or
fdivs
mov
int3
add
ja
pop
inc
imul
lea
pushl
test
mov
xlat
cmp
jne
mov
mov
clc
mov
pop
pop
lock
ret
push
add
out
xchg
or
and
mov
push
loop
jmp
lea
or
jmp
xchg
or
jmp
cld
pusha
or
sbb
fcomps
mov
inc
out
jmp
mov
rcrl
out
outsb
imul
imul
xor
add
fdiv
ret
pop
push
cmp
cmp
cmp
leave
data16
inc
cmc
or
or
sbb
dec
icebp
andb
loope
pushf
jl
lock
icebp
loopne
and
add
push
jne
cmp
sti
adc
xor
inc
mov
test
in
orb
lea
movl
add
loope
mov
lock
pop
mov
push
loope
outsb
adc
out
and
jae
push
loope
xchg
and
inc
lds
rol
dec
std
cld
xchg
push
aad
mov
push
addb
dec
in
clc
mov
mov
jb
mov
adc
and
sub
rep
incl
push
fisubl
mov
dec
loopne
mov
test
push
lea
pop
neg
sub
add
add
shll
sbb
mov
mov
cmp
push
or
mov
int3
lea
add
and
andl
inc
scas
jmp
repnz
mov
cld
add
in
in
aam
inc
add
loop
in
call
call
shll
clc
cld
andl
sbb
or
lock
outsl
imul
pop
pop
rcll
pusha
or
adc
or
xor
or
jl
cld
jg
or
fninit
cld
ja
mov
fldenv
pusha
xchg
xchg
inc
jo
stc
sub
mov
and
call
mov
outsl
add
dec
push
mov
add
add
aaa
stos
sub
add
mov
daa
and
sub
add
lcall
insb
je
sbb
xchg
cmpsl
xchg
sbb
lcall
adc
imul
imul
add
in
mov
xchg
loopne
mov
xchg
and
and
xor
imul
std
loopne
fidivs
ljmp
sub
cmp
pop
pop
nop
push
jne
push
or
pop
je
sbb
and
lods
mov
aad
push
jle
jmp
push
inc
adc
sub
jmp
push
xchg
imul
add
je
fcmovu
lods
add
mov
mov
std
insl
mov
lea
pop
push
mov
pop
in
pop
push
or
and
data16
inc
add
imul
fiadds
inc
adc
fildl
jno
pop
in
dec
cld
push
cld
cld
push
shr
xchg
imul
mov
mov
mov
pop
mov
movsl
inc
dec
dec
or
test
or
jne
rcrl
aas
dec
pop
or
iret
jbe
rorb
mov
add
hlt
push
mov
shr
lea
mov
and
decb
sub
cmp
and
cwtl
or
and
into
adc
jns
push
adc
adc
mulb
or
add
or
pop
mov
add
aas
jnp
pop
das
mov
loope
in
loop
sub
aas
out
outsb
adc
pop
cmp
cmpsb
jbe
mov
inc
sbb
inc
stos
fnsave
ds
jbe
cli
mov
sbb
mov
push
mov
pusha
xchg
dec
push
shlb
push
adc
imul
mov
shlb
xchg
dec
push
sub
fistl
mov
add
outsl
xor
in
les
cmp
mov
lock
int
outsl
enter
mov
push
lods
xchg
lods
insb
add
pop
mov
sub
mov
inc
mov
jae
mov
push
mov
jmp
or
or
lea
sbb
sub
lea
sbb
add
sub
pop
add
popf
test
or
mov
sbb
push
stos
in
cli
dec
lods
pop
shll
or
pop
mov
shl
add
push
xorb
push
push
jnp
bound
or
push
int
movhps
inc
adc
xchg
popf
fisttpll
decb
or
jns
adc
pusha
add
adc
test
or
adc
adc
hlt
out
repnz
adcb
jmp
in
push
lea
push
push
push
xor
mov
add
divl
adc
mov
into
mov
xchg
sub
subb
jecxz
sbb
jbe
pop
push
out
push
dec
xor
push
aaa
shr
sub
mov
pop
lret
hlt
jmp
es
xor
shr
push
or
pop
and
test
fdivrs
jae
jbe
sbb
sub
decb
iret
jne
out
jbe
lods
pop
cmp
jne
mov
insl
xor
fistpll
fsubs
adc
xlat
roll
jne
and
push
jnp
or
jnp
cmp
aaa
jmp
es
nop
cmp
jge
jnp
outsl
jmp
pop
test
fcompl
sbb
add
cmp
je
rcr
addr16
es
adc
fimuls
add
dec
sub
ret
cs
mov
mov
jo
sub
jo
push
fstl
push
or
push
inc
or
mov
jne
xchg
out
ret
sbb
sbb
mov
and
adc
or
je
mov
outsb
jecxz
pop
dec
jbe
push
into
jne
data16
fistps
test
jl
shl
inc
jmp
mov
push
stc
inc
add
sub
jnp
incb
cwtl
jae
push
sarl
jle
pop
aam
or
and
popa
and
adc
cmp
mov
aad
mov
decb
jne
jmp
and
jmp
mov
sbb
sub
pop
xor
sbb
ss
sub
cmp
test
or
jp
jae
jp
clc
add
test
divb
inc
and
jl
inc
or
lret
xor
push
mov
jge
les
and
mov
cmp
movsl
add
jmp
sub
dec
mov
jnp
mov
lods
push
jle
cmc
dec
mov
cmp
or
add
mov
jne
aad
cld
mov
add
xor
lahf
mov
and
jne
lods
test
dec
cmp
or
mov
inc
add
rcll
xchg
add
mov
fnstsw
mov
arpl
xorb
mov
jle
or
pushf
sarb
lcall
mov
loopne
arpl
adc
push
iret
pop
pop
scas
and
push
sbb
mov
js
fsubrs
and
mov
incl
mov
xchg
aam
add
jno
mov
or
fcmovnb
dec
loopne
ret
aaa
mov
sbbl
jbe
insl
inc
or
add
dec
mov
mov
shl
jns
mov
es
xor
addb
sar
sub
rorb
cli
ja
lea
out
push
orl
in
data16
push
movl
jmp
dec
add
sub
adc
push
sub
loopne
push
aaa
xchg
jbe
adc
add
mov
lods
lea
or
inc
fs
inc
inc
mov
aad
icebp
inc
mov
or
adc
jecxz
cmpsb
or
mov
push
fsubrs
shll
push
push
xor
test
push
mov
push
sub
popa
fs
divl
pop
adc
pop
add
adc
or
mov
std
push
insb
mov
sarb
je
adc
adc
mov
mov
jg
roll
add
or
cs
mov
push
push
mov
jne
idivl
push
stos
sub
adc
jne
subb
aam
and
inc
inc
dec
je
std
scas
cmp
jne
sub
add
xchg
stos
fwait
and
daa
mov
pop
vmulsd
jmp
push
adc
out
or
fwait
cmp
cli
sub
xor
inc
xchg
arpl
nop
push
push
add
sub
fistl
cmp
sbb
jmp
add
rclb
adc
push
icebp
push
push
mov
pop
push
xor
clc
mov
test
push
xchg
dec
sbb
clc
pop
lock
nop
jne
push
push
or
cmp
xchg
or
push
sbb
inc
lods
cli
les
mov
and
dec
xor
jae
nop
pop
adc
adc
cmp
jl
pop
pop
call
int3
nop
icebp
sbb
pop
ret
add
dec
sti
mov
fdivl
sub
inc
sbb
sbb
cmp
jae
mov
and
loopne
inc
push
je
and
in
test
sbb
test
loopne
addl
loope
int3
fimuls
les
adc
cld
mov
adc
insb
sti
fdivl
dec
fsubl
push
loop
iret
jne
dec
in
sbb
push
je
testb
je
fisttpll
mov
sbb
mov
aad
push
imul
fidivl
dec
rorb
xor
or
xor
add
das
sub
loopne
pop
sub
adc
jge
je
cmp
mov
fs
je
mov
xor
data16
add
push
mov
push
jl
push
inc
mov
push
inc
test
sbb
mov
jp
rclb
dec
or
test
es
dec
xchg
repz
xchg
mov
and
ret
jnp
dec
and
mov
lods
mov
lea
push
push
pop
push
or
test
mov
push
mov
daa
xchg
pop
mov
sbb
xor
js
push
xor
xor
pop
sbb
pop
lea
xor
adc
loopne
je
gs
cmp
jl
rclb
or
pop
push
int3
sub
out
cmp
or
ss
loopne
pop
sbb
pop
cmp
xchg
mov
xchg
cmc
int3
mov
jb
mov
lahf
add
and
jnp
sub
xlat
test
loopne
je
sbb
push
pop
stc
iret
jb
neg
sub
or
test
inc
repz
add
add
push
adc
shll
sub
test
stos
cmp
and
mov
mov
jns
test
test
decl
cmp
pop
insb
nop
add
add
inc
pop
adcb
test
fisttps
and
test
aas
jae
xor
shll
mov
movsb
pushf
adc
inc
rcll
xchg
push
add
cld
xchg
add
adc
or
and
or
and
sarb
xchg
jo
mov
and
sub
mov
inc
dec
push
addr16
pop
add
jmp
mov
lahf
push
cmp
inc
xlat
jb
sub
add
jae
test
mov
aad
push
add
push
cmp
into
push
sahf
add
inc
inc
inc
adc
inc
inc
inc
inc
hlt
in
call
add
add
adc
inc
fcomp
add
mov
xor
fwait
pop
icebp
mov
lcall
jb
outsb
je
insl
and
jb
jb
or
xor
push
push
adc
add
dec
inc
pop
jle
add
inc
adc
push
ss
xchg
mov
xor
or
insb
je
and
imul
insb
imul
aaa
daa
aaa
outsb
sti
outsl
in
outsb
outsl
je
add
addr16
arpl
data16
outsb
add
insb
outsl
ja
cmp
outsl
outsb
aaa
push
xchg
cmpsl
nop
ss
fs
jo
jb
jbe
jb
jne
xor
arpl
and
insb
sub
scas
insl
mov
pop
sub
pop
das
pop
push
or
fldcw
loop
xor
divl
jo
pop
xor
pcmpgtb
arpl
mov
add
inc
and
gs
and
fbstp
insb
lods
je
mov
arpl
or
pop
xor
fdivl
fs
add
mov
or
jb
insl
and
push
fmuls
mov
dec
xor
inc
sub
xor
cmpsl
nop
iret
sub
popa
jb
jne
jae
in
jns
pop
xor
shrw
imul
subb
cmp
fs
mov
push
cmp
pusha
cmp
push
imul
stos
inc
sub
and
dec
imul
jb
daa
or
lret
cmp
adc
cmp
add
add
out
mov
in
and
fdivl
sbb
je
popa
xor
jbe
push
mov
lds
scas
jne
adc
push
xchg
fs
pushl
popa
addr16
outsl
js
add
and
mov
aas
cmpl
iret
or
xorl
nop
and
pop
lcall
lods
jle
xor
add
push
fs
jno
arpl
pop
aas
pop
xchg
add
rorb
sbb
xor
lea
mov
xor
add
xor
xchg
xchg
dec
push
dec
aaa
add
pop
js
or
mov
and
sbb
add
ja
add
add
leave
xchg
inc
sahf
and
xchg
cld
adc
adc
repnz
adc
sbb
sbb
xchg
daa
xchg
lock
jns
in
js
jns
jp
cld
leave
adc
and
adc
add
cmpsl
xor
dec
cld
sahf
mov
add
das
movsb
add
in
mov
and
cmp
jle
lahf
loopne
inc
jle
cld
test
mov
into
push
popa
push
cmp
and
pop
out
in
iret
mov
in
call
push
repnz
push
add
pop
pop
fisubrl
xor
jns
out
fcomp
loopne
cmp
jle
clc
add
add
cmp
xor
sub
dec
add
enter
test
adc
orb
add
mov
addb
shll
and
adcl
clc
add
mov
inc
mov
nop
leave
add
pusha
dec
js
insb
das
push
lods
dec
or
dec
outsl
fs
gs
popa
outsb
fs
add
fildl
popa
sub
sbb
in
outsb
outsw
adc
insl
insl
pop
dec
imul
loopne
jb
aaa
or
fisubrl
xor
or
pop
or
push
adc
jne
jb
outsb
and
outsb
push
mov
cmp
jo
inc
inc
imul
add
insl
imul
inc
jbe
xchg
add
jb
addr16
clc
test
push
push
imul
dec
pop
lods
in
add
inc
jns
pop
sub
pop
or
inc
push
pop
sbb
pop
adc
imulb
ss
gs
fldl
fs
insb
jae
push
add
and
popa
insb
jne
or
push
adc
add
jnp
test
and
sbb
pop
or
or
push
mov
in
addr16
or
insb
dec
ja
add
popa
jae
mov
xor
pop
jbe
or
jae
int3
jo
arpl
arpl
fistl
sub
push
std
or
or
dec
inc
dec
or
rcll
rorb
out
fs
dec
faddl
or
mov
mov
or
and
inc
bound
jbe
js
or
cmp
nopl
pop
sub
repz
inc
je
or
inc
js
adc
inc
jo
insl
dec
push
dec
addl
jae
xchg
es
add
mov
sbb
js
insb
jb
fcoml
fcmovb
xor
xor
jb
dec
bound
aaa
lret
mov
out
fwait
aam
test
incl
shll
outsb
insb
imul
xor
push
je
dec
jae
adc
jae
push
lahf
arpl
xchg
xor
push
outsl
outsl
je
dec
add
jecxz
jns
xchg
test
add
arpl
jns
xchg
in
cltd
mov
mov
add
jle
mov
lock
add
sub
lock
add
add
cmp
jo
xor
in
add
insb
mov
pushw
or
pop
f2xm1
clc
add
or
add
or
add
xor
das
add
lock
cmpb
add
test
adc
jl
pusha
add
outsl
decl
inc
cmp
ja
lock
jp
add
jg
add
in
push
lock
or
add
add
decb
out
lock
jno
test
inc
push
pop
add
test
mov
popl
mov
add
add
cmpsb
inc
add
in
out
fcoml
xor
int
add
sti
mov
mov
insl
cmp
cs
add
dec
lock
or
mov
mov
inc
adc
mov
cmp
jge
idivb
cltd
jle
mov
adc
xchg
pop
mov
add
sbb
mov
jae
mov
lock
add
dec
add
sarb
dec
lock
inc
les
pop
pop
scas
lea
insl
sti
fldt
outsb
lret
add
mov
ss
outsl
in
xlat
xchg
lock
add
or
dec
pop
xor
out
out
inc
add
lock
dec
jae
or
incb
cmp
lock
push
push
add
xor
inc
cmp
psubb
add
add
mov
push
add
add
ret
push
add
add
repnz
xor
pushl
add
sbb
sbb
or
adc
pop
or
or
outsl
push
push
xchg
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
pushl
aas
push
adc
xor
pop
adc
and
push
xor
adc
jecxz
insl
fildl
sbb
cmp
pop
sbb
adc
sbb
sbb
xor
mov
or
inc
adc
or
adc
ljmp
add
or
xor
xor
mov
and
mov
pop
adc
or
sub
clc
fistpll
outsl
mov
adc
or
push
movups
imulb
push
leave
cmp
push
ret
sbb
scas
add
sub
sbb
add
test
mov
or
pop
push
sbb
mov
jb
push
or
jecxz
xor
or
dec
add
push
sbb
mov
adc
adc
or
fimuls
inc
cmpsb
mul
lock
add
adc
test
sbb
mov
bound
pop
adc
sbb
call
push
test
mov
sbb
xor
fdivs
adc
adc
rcrl
push
add
or
mov
add
pop
movsb
or
or
sub
icebp
jg
adc
lock
add
push
inc
pushf
dec
add
aam
dec
loopne
add
or
or
sub
or
adc
dec
lret
or
orb
sub
mov
add
jns
lret
fdivrp
push
inc
subl
push
lret
mov
insb
movsb
js
rolb
rolb
ret
adc
int3
add
or
lea
je
pop
in
xor
add
and
pop
sub
jb,pn
xor
or
or
pop
lods
mov
cs
sbb
movsb
imul
fimuls
jb
pop
rorb
std
mov
xlat
add
aaa
and
daa
or
inc
call
rcrl
add
add
add
and
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
