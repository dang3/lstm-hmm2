mov
in
add
cmp
add
cmp
cmp
add
imul
mov
out
or
sub
imul
sub
and
cmp
add
sub
sub
mov
cld
insl
add
mov
add
push
lock
sub
push
mov
sti
sub
rorb
ret
add
sub
rolb
mov
outsb
mov
cmp
cwtl
push
sub
mov
add
sarb
shll
adc
sti
outsl
lods
mov
pop
shl
and
add
sub
imul
mov
ds
xlat
fidivrs
pop
clc
mov
ret
icebp
pop
add
xor
leave
sbb
add
or
sub
clc
add
ret
or
jbe
mov
sbb
xor
mov
das
js
cmpl
cli
sbb
and
ret
out
add
mov
int
mov
movzbl
mov
xor
mov
mov
mov
mov
pop
lret
and
adc
pop
add
mov
cwtl
adc
fstl
lock
mov
fimuls
adcb
or
test
je
pop
iret
lock
movsl
rolb
mov
push
jp
cmp
fisubl
leave
mov
xchg
adc
sub
jb
in
mov
je
adc
mov
mov
push
jb
push
mov
nop
xor
mov
sbb
icebp
bound
sbb
mov
cmp
outsb
repnz
add
adc
cmp
mov
ja
cld
sbb
dec
popa
xchg
adc
lock
roll
push
add
fldt
fldt
rcrb
adc
mov
push
or
sti
mov
sbb
jo
sub
pusha
pusha
insl
mov
data16
adc
aaa
insb
ss
lods
cmp
jmp
pop
or
sbb
push
repnz
jge
cs
push
sbb
cmp
stos
bndstx
adc
lret
or
sbb
sbb
adc
femms
lds
icebp
push
js
repnz
cmp
mov
sbb
pop
sbb
cwtl
cmpsb
push
cld
sub
mov
push
xchg
movsb
sbb
lock
movsb
push
in
pop
rcrb
and
sarb
imul
push
ror
mov
cmp
sbb
mov
add
xchg
into
add
mov
not
or
sbb
je
add
rcrl
mov
inc
es
lret
je
testb
xor
sbb
adc
testb
shll
fadd
pop
sbb
cli
rolb
icebp
imul
sarl
fstpt
or
fistpl
mov
pop
inc
or
negb
bound
leave
jno
jo
cwtl
xor
jbe
xor
mov
sbb
sub
push
ret
stos
out
fdivl
jo
loop
adc
mov
cmpsb
jo
lret
lea
pusha
pop
mov
aas
push
fldenv
pushf
into
addr16
ret
dec
and
ret
mov
lock
mov
add
push
imul
xorl
pop
test
pop
fisubs
xor
imulb
adc
mov
pop
jnp
insb
pushf
sbb
pop
cmp
xchg
into
sub
sbb
in
jle
push
je
cmp
mov
clc
and
jp
addl
mov
or
sub
rcll
adc
rorl
cmpsb
int
sbb
xorb
popf
or
adc
push
mov
sti
mov
xor
pop
into
addb
or
sub
adc
icebp
je
loop
icebp
mov
inc
push
fimull
ret
mov
inc
bnd
in
cli
add
sbb
adc
mov
xchg
sbb
sbbb
enter
mov
adc
cmp
xchg
mov
leave
ret
call
pop
sub
lock
bound
jl
cmp
or
stos
inc
sbb
add
or
push
div
or
stos
add
mov
or
jo
ds
pop
xor
into
out
adc
idiv
test
roll
xor
rcrb
xchg
stc
push
call
xchg
push
sbb
or
adc
jp
xchg
cmp
or
nop
shrb
loope
cmp
icebp
and
movl
cli
enter
sbb
ljmp
ss
hlt
adc
pop
add
shr
add
dec
cmpps
mov
xchg
jb
cmp
add
shl
adc
lock
cmp
sbb
clc
rolb
cld
add
or
and
sahf
push
xor
sbb
pop
adc
add
ljmp
lret
sub
mov
rorb
push
aam
dec
pop
divb
mov
adc
sbb
test
jmp
rcrb
pusha
adc
jl
shrl
mov
out
aam
scas
mov
jnp
rolb
or
sub
dec
enter
mov
out
jle
push
leave
dec
sbbl
fcmovbe
repnz
stos
or
and
icebp
jl
sti
sub
mov
sub
lock
pop
push
lods
mov
or
rol
or
test
push
dec
cmp
push
add
mov
mov
cwtl
add
addb
push
sahf
jo
rorl
jnp
xlat
sti
cmp
mov
orb
cmp
push
stos
in
mul
add
add
add
adcl
adc
push
jo
or
add
pop
sbb
pop
xchg
push
push
add
iret
mov
fdivrs
fiaddl
cmp
push
mov
push
rorl
or
mov
lods
pop
adc
adc
shlb
call
mov
push
rclb
inc
inc
mov
and
xchg
stc
addb
loope
sub
into
scas
and
dec
andl
rorl
jbe
mov
scas
andl
add
test
mov
testb
popf
pop
and
or
clc
inc
jae
mov
xor
je
out
mov
xadd
dec
test
sahf
sbb
insb
xor
push
and
add
push
mov
jae
sbb
insb
sarl
fwait
inc
int
sub
or
fwait
rolb
loopne
nop
push
pusha
lods
xor
orb
adc
pop
add
push
push
and
push
lock
into
mov
jg
cmp
insb
mov
cmp
sub
adc
adc
or
es
push
repnz
pop
imulb
add
push
lock
or
cmp
mov
out
jmp
std
clc
push
call
add
bnd
lcall
jle
loopne
add
pop
add
mov
inc
push
sbb
test
stos
test
pop
or
imul
inc
sbb
js
lcall
push
or
andb
hlt
or
adc
add
inc
cli
adc
cmp
sbb
movsb
mov
cmp
mov
ret
add
je
shll
out
dec
push
je
pop
pop
pushf
or
push
ret
ficompl
sbb
test
mov
adc
push
adc
push
inc
hlt
add
popa
xor
jl
or
mov
pusha
lret
cmp
dec
test
mov
daa
add
jo
out
sub
insb
push
test
loopne
int3
shlb
lds
enter
xor
cmp
cmpsl
adc
or
push
pop
mov
jmp
pop
mov
pop
sbb
rolb
push
pop
jg
push
sub
stc
push
xchg
leave
jo
or
push
lock
mov
lcall
lock
sbb
dec
sbb
ss
dec
or
sbb
push
data16
out
sub
push
inc
xchg
shl
mov
shlb
loop
das
cmp
xlat
and
int
fistpll
ror
adc
or
gs
xor
adc
and
cmp
jo
ljmp
sbb
mov
mov
sahf
test
lock
inc
sbb
leave
jp
inc
insb
xor
lea
cmp
push
or
sbb
ret
push
mov
mov
shrl
push
rorb
jb
ror
mov
add
js
and
push
jbe
mov
dec
call
mov
xchg
sbb
pop
mov
sbb
ret
aaa
rolb
lea
inc
test
and
rcll
repnz
in
cmc
sahf
adc
dec
pop
movsb
jp
jb
or
shll
push
push
cmpsb
adc
push
dec
push
inc
mov
pop
sti
mov
into
mov
fildl
push
add
jo
lahf
push
cmp
aam
int
insb
mov
ret
pop
enter
push
push
das
roll
xor
inc
loopne
sbb
ret
stos
dec
jb
enter
subl
in
sub
sbb
in
push
or
xor
clc
dec
cmp
rol
lcall
lret
rorb
push
or
sbb
mov
jb
mov
sbb
sarb
loopne
enter
mov
cld
loop
xchg
sahf
add
mov
cmp
movhps
xchg
enter
add
sarb
mov
ds
inc
out
adc
or
in
mov
cmp
cmp
dec
add
push
jmp
sbb
clc
shl
into
xchg
ljmp
inc
mov
jge
adc
icebp
ljmp
xchg
inc
mov
mov
outsb
gs
jl
call
addr16
mov
add
and
jmp
sbb
int3
sahf
dec
das
pop
repnz
xor
mov
jg
rorb
push
push
add
and
jo
movl
push
dec
xor
ljmp
push
out
or
adc
pop
push
call
out
movb
mov
xchg
jmp
rcrb
es
sub
flds
adc
insb
leave
loope
jns
add
imul
stos
in
psubb
push
mov
push
adc
imul
repnz
sub
enter
sbb
fs
and
outsb
daa
pusha
push
jge
xchg
add
mov
push
pop
clc
jl
mov
push
sahf
mov
cmpsb
rcll
adc
sbb
mov
add
sbb
or
xor
dec
pushf
pop
fs
out
cmpsb
push
push
gs
mov
push
mov
ret
out
or
adc
outsb
adc
sahf
fs
mov
or
subb
ret
mov
stc
pop
sahf
adc
or
pop
movsb
clc
adc
xchg
testb
js
fidivrl
jmp
roll
sub
or
or
lret
dec
xchg
in
xor
mov
leave
dec
cmp
xor
bt
lods
jb
clc
icebp
roll
mov
xchg
fstp
xchg
mov
xor
xor
or
mov
push
loop
mov
mov
pop
xor
inc
or
stc
rolb
sbb
mov
out
loop
addl
mov
cmpsb
sbb
inc
je
cmpsb
movntps
add
lret
mov
movsl
test
mov
push
and
push
ret
or
xchg
rorl
jb
stc
dec
xchg
ja
or
dec
imul
into
adc
adc
push
mov
cmp
ret
je
cs
push
pop
ret
or
lret
addl
mov
and
dec
mov
divb
sbb
mov
dec
sub
xor
xchg
into
bound
adc
shlb
inc
jge
loope
mulb
inc
pop
mov
sbb
ret
sbb
xor
push
cmc
inc
and
push
mov
hlt
lods
repnz
sub
call
in
shlb
sarb
je
lock
or
mov
ss
sar
sbb
hlt
cmpsl
rolb
fsubrp
imul
push
push
push
clc
sbbl
lret
push
push
jmp
rolb
sbb
fsubs
fs
or
ds
ficompl
enter
xchg
push
xchg
scas
stc
pop
lret
sbb
movb
jbe
mov
xor
fisubrs
rol
xor
sbb
sub
inc
gs
jae
pop
rclb
adc
loopne
push
sbb
mov
dec
out
cltd
in
inc
sub
nop
into
cmp
shlb
mov
repz
fimull
ret
inc
jbe
push
out
sbb
inc
or
xchg
sub
dec
mov
cli
push
cld
arpl
into
rclb
or
cmp
into
mov
mov
jmp
sbb
push
pusha
sbb
call
loopne
imull
adc
mov
rclb
pushf
cld
xchg
sahf
clc
data16
jne
cmpsb
or
sbb
das
gs
push
pop
push
pop
push
es
and
jo
out
pushf
add
sahf
push
dec
rcr
clc
adc
popa
mov
andb
mov
loopne
jp
ljmp
jl
add
mov
test
push
xchg
leave
sbb
adc
aam
ret
xchg
pop
or
xchg
insb
and
dec
out
adc
sbb
out
jno
xor
popa
push
into
adc
idivb
popf
push
lea
sub
add
pop
ret
or
and
mov
inc
rcll
dec
xor
push
adc
aad
daa
mov
adc
out
stos
test
ret
xchg
xor
enter
aas
test
inc
and
data16
sub
mov
and
or
mov
adc
add
add
data16
fdivrl
push
pop
shrb
cmp
xchg
adc
mov
adc
push
mov
or
dec
dec
mov
and
cmp
popa
mov
into
adc
pop
push
or
lock
imul
pop
pop
adc
cmp
push
fwait
jmp
dec
sub
adc
push
pop
or
cwtl
mov
or
flds
aam
cli
adc
push
push
push
push
inc
add
shrl
bound
dec
push
or
cmp
push
ds
or
ljmp
xor
adc
fs
cmpsl
sbb
mov
mov
rcl
inc
dec
xor
cmpsb
shlb
test
push
sbb
int
fwait
mov
sbb
dec
lods
or
and
xchg
xor
pop
repnz
or
mov
sbb
cmp
mov
and
inc
adc
repnz
iret
icebp
add
jmp
outsl
or
add
hlt
mov
clc
pop
lret
mov
xchg
or
cmp
sub
or
insw
adcb
or
cmp
cmp
pusha
out
jle
nop
push
dec
add
mov
sbb
xor
cmp
jo
loope
xor
enter
push
jmp
es
or
push
push
push
add
or
and
push
inc
or
mov
xchg
cmp
movsl
or
das
cmpl
add
sbb
enter
into
inc
xchg
push
jae
sbb
sbb
add
jns
mov
enter
mov
push
push
orl
adcb
adc
jl
js
xor
enter
mov
or
es
in
out
scas
or
sbb
andb
aas
push
mov
mov
loop
sbb
sub
sub
cmc
aaa
addl
rcl
push
xor
push
sbb
sbbb
test
jbe
rcrb
or
xor
and
add
mov
ret
popa
add
add
push
jo
and
stos
adc
lea
jl
adc
add
cli
or
jno
and
js
xor
out
ljmp
rolb
add
rcll
pop
fwait
repnz
push
pop
cmp
shl
inc
pusha
mov
not
dec
insb
fsubrs
adc
jmp
add
xor
cmp
cmpsl
dec
clc
out
push
loop
ljmp
mov
jge
arpl
cmp
mov
or
add
js
push
push
add
dec
push
and
xor
inc
xchg
xor
xorb
mov
push
arpl
xchg
in
push
into
xchg
push
mov
sbb
popa
push
xlat
shll
sbb
sub
fsubr
or
mov
xor
push
jae
pop
insb
or
add
cmp
rolb
punpckhdq
in
adc
loope
nop
mov
push
sub
or
add
add
loope
and
pop
into
pop
dec
pop
jl
mov
inc
fs
cwtl
fidivrs
lock
pop
sbb
lods
sbb
sub
outsl
jae
add
push
jnp
daa
sub
adc
cld
jmp
add
xchg
push
sbb
xchg
pop
iret
inc
pop
adc
mov
ljmp
jg
sbbb
cmpsb
ret
cmc
test
daa
adc
inc
xchg
sbb
out
cli
enter
imul
pop
in
and
push
sbb
lock
setp
mov
into
xor
jbe
jge,pn
lods
cmp
loopne
pusha
mov
push
call
in
xor
adc
mov
ret
push
movsl
and
push
inc
add
xchg
sbb
add
push
mov
adc
shll
xchg
nop
add
data16
out
mov
pop
and
sbb
xor
pop
mov
pusha
rorl
or
jo
icebp
jmp
es
mov
mov
popf
divb
adc
add
ret
or
shl
ficoms
cmp
jno
cwtl
shrl
lock
and
add
iret
jl
push
sbb
mov
sbbl
loop
add
stc
jb
movsb
pop
jo
dec
add
mov
add
in
mov
cs
fwait
call
pop
test
orl
inc
shll
push
jg
les
jmp
cmp
xor
pop
mov
push
and
pop
sub
stos
inc
imul
jle
adc
nop
and
shr
mov
pusha
mov
add
test
jmp
adc
push
pusha
test
jo
negl
lods
pop
and
or
inc
popl
es
mov
fsubrp
dec
mov
fiadds
mov
adc
rclb
inc
addl
or
into
pop
adc
mov
mov
jo
lods
push
or
ljmp
ror
mov
sbb
dec
lret
xor
sub
and
ljmp
jo
in
jnp
aas
dec
dec
sbb
push
inc
push
out
or
sbb
add
clc
and
jo
adc
pop
jl
pop
aad
inc
xchg
cmp
ss
lret
loopne
add
call
cmpb
cmpsb
mov
push
inc
push
jg
inc
iret
cwtl
enter
hlt
sbb
mov
fcoml
add
call
pusha
or
arpl
push
mov
je
sub
dec
data16
dec
or
icebp
cmc
add
xchg
push
lods
idivb
subl
mov
ss
cld
loopne,pn
bound
ljmp
add
shl
rclb
xor
mov
roll
add
pushf
dec
or
stos
jb
and
sbb
and
add
xor
or
push
ret
adc
std
ljmp
mov
stos
inc
pop
jo
sub
test
mov
outsb
in
sbb
or
inc
xor
in
push
xor
in
lock
popa
rcll
cmp
aas
pop
adc
mov
call
andl
or
rorl
adc
pop
sub
je
mov
and
sbb
add
mov
dec
pusha
sub
pop
shr
add
mov
retw
enter
pop
jl
add
adc
cli
mov
xor
je
pop
test
sbb
ret
push
xchg
inc
filds
jecxz
pop
scas
sub
int3
inc
push
mov
and
jp
jmp
add
rorb
clc
cmp
add
stos
into
subb
xorl
bound
shrl
sarb
cs
int3
cmp
push
pop
enter
test
inc
stos
adc
sbb
and
mov
cmp
int
das
popa
movsb
pop
cmc
inc
ficomps
arpl
fidivl
or
dec
rclb
mov
inc
sar
or
push
adc
xchg
adc
xor
and
xor
sbb
dec
pop
and
add
and
add
sub
out
in
xor
inc
mov
enter
sbb
push
pop
pop
inc
loopne
lods
or
push
inc
mov
sbbb
jge
push
into
addr16
bound
roll
pop
push
inc
and
adc
dec
sbb
fld
popa
xor
inc
adc
loop
cmp
mov
out
push
push
sbb
lock
in
or
dec
sbb
not
or
adc
jo
cmp
shlb
mov
sub
adc
inc
shl
mov
daa
push
les
sbb
jne
bound
pusha
sub
loop
xchg
mov
sarl
imul
into
out
pushf
fs
sbb
add
sbb
fdivr
cli
dec
dec
pop
pop
xchg
sbb
mov
push
gs
sbb
inc
decb
add
adc
icebp
xor
lret
or
mov
loopne
jb
outsb
push
adc
xor
ret
jl
or
test
enter
into
mov
shrl
sbb
pushf
mov
pop
jbe
ret
repz
test
cwtl
push
in
lods
jmp
rolb
push
shrb
add
cltd
mov
xchg
add
outsb
out
cmp
and
loope
push
movsl
pop
xor
push
mov
jo
and
xor
or
les
adc
push
mov
inc
push
jo
addb
mov
or
add
push
xlat
and
es
test
sbb
dec
jne
jnp
scas
sbb
divb
mov
sub
cmp
adc
adc
add
imul
mov
jo
fsubs
adc
inc
pop
mov
movsl
les
cmpsb
sub
push
adc
loope
pop
or
es
test
push
mov
loope
addr16
or
push
or
mov
mov
mov
cmp
adc
ret
push
mov
or
outsb
or
sbb
adc
mov
inc
aam
outsb
cmp
sbb
pop
push
adc
inc
rclb
pop
mov
popa
sbb
sbb
mov
push
leave
ret
lods
push
sbb
rorl
mov
adc
push
stos
sbb
sbb
add
leave
sbbl
adc
sbb
jp
jb
inc
inc
jo
rcll
test
adc
push
cmpb
scas
scas
push
or
add
addr16
stos
notl
xchg
sbb
adc
or
sub
push
cmpsb
or
shrb
movsl
pop
add
xor
and
test
les
pop
sbb
push
incb
mov
or
lods
add
call
adc
lret
dec
xor
sbb
int3
push
pop
sbb
adcb
sbb
ficompl
xchg
rorl
adc
les
out
fsubl
adc
jo
leave
sub
out
adc
xor
xor
loope
test
movsb
mov
and
adc
xchg
jl
mov
ret
ret
nop
pop
lock
int3
add
mov
dec
mov
test
push
in
sub
stos
add
aam
xchg
loope
mov
or
or
jb
adc
aaa
sbb
push
jp
shlb
mov
push
lock
adc
jmp
jo
mov
pushf
lcall
out
add
push
jno
shrl
mov
xchg
pop
stos
push
add
xor
add
rorl
enter
pop
mov
mov
shr
pop
or
mov
jae
scas
xlat
jae
mov
push
fs
xchg
adc
into
jg
mov
addl
shl
sub
push
and
inc
sbb
mov
lods
ds
enter
sbb
and
xchg
jbe
mov
sarl
inc
push
lret
mov
js
sub
xlat
xchg
ret
mov
push
inc
cwtl
add
sbb
add
sbb
in
inc
push
push
repnz
test
pop
cmpsb
adc
cmc
clc
sbbb
loopne
pop
lods
sub
cmp
add
loopne
ret
push
arpl
loop
shr
js
les
dec
inc
sub
loope
decb
push
mov
pop
cmpl
pusha
les
lea
mov
add
mov
into
movsl
xor
outsb
int3
push
xor
jno
ror
faddl
cmp
jbe
rcr
inc
push
or
jmp
mov
push
sahf
mov
sbb
adc
lock
xchg
test
or
dec
testb
push
in
jo
or
inc
sub
js,pn
adcb
mov
add
mov
mov
or
cmp
dec
loopne
sbbb
push
fmull
inc
mov
fs
dec
mov
cmp
mov
fiadds
jmp
test
mov
push
data16
test
mov
rcrl
jnp
sub
sub
shll
sbb
xor
sub
enter
loopne
ret
sbb
or
ljmp
nop
sbb
bsf
enter
lock
enter
outsl
cmp
add
mov
js
add
nop
loop
inc
add
insb
push
stos
push
jbe
sar
xchg
push
or
pop
lret
cmc
movsb
push
movsb
sahf
sub
sub
push
divl
mov
adc
cmpl
push
fmuls
fadd
pop
pop
pushf
push
negb
scas
es
push
pop
sub
shll
and
or
or
sbbb
pop
cmp
xor
and
or
jmp
imul
add
or
fdivr
or
test
test
pop
ret
push
inc
ja
sbb
xchg
xchg
mov
jbe
ret
roll
std
adc
popa
es
or
adc
ret
push
xchg
or
pop
fiadds
pop
xlat
add
enter
push
jo
push
mov
dec
push
jb
adc
push
lea
jle
sub
inc
and
jno
ret
xchg
adc
push
out
push
or
sub
xor
rclb
lret
cmp
das
hlt
ret
or
out
enter
test
adc
add
xchg
and
add
enter
mov
ds
inc
movsb
jl
call
mov
adc
into
push
pop
aad
ret
or
adc
pop
mov
or
push
or
push
xchg
pushf
stc
mov
sub
dec
push
sub
dec
mov
movlhps
dec
cs
rcr
adc
daa
dec
sub
push
es
push
push
ret
mov
sub
add
sbb
xor
dec
mov
adc
movsl
loopne
stc
shr
xor
test
inc
cmp
cli
mov
inc
movsb
xchg
cmpsb
dec
add
mov
popa
andl
push
arpl
add
sbb
cmc
je
add
daa
xchg
cmpb
add
sbb
adc
aas
ljmp
sub
dec
cmp
inc
lock
pop
jl
or
jae
out
lea
ret
xchg
shlb
adc
shlb
scas
push
fstl
mov
shl
enter
sub
add
inc
addb
sub
inc
pop
or
push
ljmp
inc
adc
sbb
test
push
xchg
mov
lret
stc
inc
sbb
push
cmpsb
or
sbb
das
or
sbb
imul
fsts
imul
push
inc
fcomip
ret
adc
add
repnz
data16
ljmp
stos
xor
sbb
mov
cs
es
cmp
rolb
loopne
pop
fidivrs
mov
and
jecxz
sbbl
mov
int
pop
mov
jb
add
xor
clc
xchg
iret
mulb
xor
or
nop
popf
add
or
xor
mov
dec
inc
cmp
pop
js
cmpsb
adc
add
and
inc
popf
dec
jg
imulb
rcl
mov
mov
scas
add
in
sbb
pop
inc
clc
lret
xchg
pop
dec
sub
lock
andl
pop
nop
lock
test
daa
or
scas
adc
or
pop
iret
xchg
cli
add
sub
call
mov
mov
or
dec
aas
or
stos
and
mov
sub
mov
sbb
and
hlt
adc
pop
dec
sbb
shlb
ret
pop
insb
pop
clc
imul
inc
mov
shr
mov
or
movsb
lret
push
ffreep
sbbb
xor
jo
cmpsl
pushf
cli
add
mov
test
cmp
mov
xor
xchg
mov
mov
out
adc
cmpl
shl
ds
sbb
mov
sbb
xor
push
loop
mov
cmp
pop
pop
sub
jg
lock
imul
sub
lods
push
jge
push
mov
adc
cmp
mov
adc
gs
jmp
xchg
add
push
push
pop
rorb
mov
stos
push
in
push
pop
dec
cwtl
jnp
loope
gs
mov
xlat
sub
divl
dec
add
cmp
cmpsb
clc
sbb
push
out
sub
mov
orl
sbb
pushf
mov
push
push
inc
jl
sbb
loopne
or
cltd
shl
ljmp
inc
cli
add
or
sub
mov
cmp
shlb
jbe
psubd
aad
lahf
push
add
ror
and
sbb
add
mov
test
mov
mov
push
sub
pop
sbb
and
bound
pushf
icebp
shlb
lock
notb
fwait
shlb
mov
or
adc
pushaw
insb
xor
pushf
add
test
test
rcrb
adc
or
sbb
inc
popa
pop
lds
push
mov
les
jmp
mov
js
xchg
orb
shrl
mov
gs
stos
push
hlt
negb
adc
add
or
pushf
mov
add
mov
ffreep
jno
daa
popf
jmp
js
ljmp
es
sbb
push
mov
adcl
mov
jp
sub
in
rcll
push
sub
fldenv
dec
pushf
testb
ret
das
add
add
push
xor
push
sbb
in
stc
test
fsubrl
add
sbb
loopne
xchg
repnz
mov
je
minps
dec
sbb
or
jno
mov
cltd
call
lock
imul
adc
and
jb
roll
or
push
push
sbb
push
or
push
dec
mov
repnz
push
les
imul
jl
cs
cli
pop
lods
or
pusha
dec
cmp
mov
jbe
xor
add
inc
fadds
mov
and
outsb
cmp
sbb
sbb
shlb
adc
or
adc
pop
sarl
add
push
lods
popf
cli
adc
pop
or
inc
pop
inc
cltd
hlt
loop
inc
movsb
repnz
test
mov
mov
sbb
add
pop
movb
sbb
ss
or
push
clc
inc
lcall
cmp
add
addr16
clc
pop
mov
mov
imul
cmp
xchg
sbb
xchg
add
cmp
test
pushf
jbe
or
or
xchg
push
test
enter
jp
add
adc
add
call
sub
add
or
push
shlb
sahf
subb
gs
nop
mov
faddl
xchg
addl
subb
les
shll
icebp
movb
in
mov
fs
rol
loopne
mov
scas
jmp
leave
jp
mov
xorb
push
jmp
inc
js
cmc
mov
inc
sub
sahf
ljmp
fcmovbe
lret
push
xchg
loopne
xor
sbb
mov
sti
imul
adc
loopne
xor
repz
mov
mov
fsubrl
add
cs
xchg
sar
sbb
and
add
shll
mov
out
sar
push
loop
add
jp
lock
movb
push
iret
rclb
gs
ret
cmp
in
add
or
ja
sbb
mov
xor
ljmp
aam
dec
addr16
mov
sbb
cmpps
xchg
mov
outsl
and
or
pop
add
or
push
rolb
sbb
xchg
xchg
adc
mov
adcl
adc
or
fdivrl
xor
jge
and
pop
in
adc
aad
sbb
mov
or
int3
in
xchg
subl
dec
adc
in
push
lds
push
xor
or
movsl
xchg
jl
mov
bound
xchg
mov
xchg
insb
add
and
stc
push
lock
sbbl
mov
ljmp
iret
mov
mov
add
cli
mov
or
sbb
mov
mov
mov
pushf
mov
fidivs
sub
sub
pop
adc
adc
decb
sarl
clc
test
and
js
lret
mov
rcrb
lock
jne
ja
mov
insl
test
shlb
stos
dec
das
fdivl
loop
and
mov
cmp
lcall
je
adc
or
adc
mov
jecxz
and
push
sub
xor
fcomp
call
pop
cmp
mov
movsb
sahf
popf
add
sub
xchg
leave
push
push
add
adc
lock
dec
mov
ret
jo
cs
mov
mov
push
push
mov
mov
test
add
addr16
jmp
pop
pop
movsl
popa
dec
add
jmp
clc
add
sbb
or
and
mov
sbb
ret
sbb
mov
push
test
std
mov
es
call
push
add
in
and
fiadds
bound
loopne
neg
or
adc
xor
notb
inc
or
add
push
int
mov
out
mov
outsl
or
out
pop
dec
mov
or
pop
fmuls
push
mov
fwait
mov
stos
lods
push
mov
inc
inc
or
xchg
mov
cwtl
sbb
ds
ret
inc
adc
subl
inc
subb
gs
rcl
andb
in
movsb
mov
dec
jmp
add
jl
icebp
mov
mov
add
mov
add
xchg
and
inc
test
test
jle
cs
push
sbb
xor
popa
inc
xor
add
or
adc
test
mov
testb
cmp
test
das
add
cmp
ret
dec
adc
xchg
mov
or
mov
mov
out
or
popa
or
cmp
dec
lds
add
int
adc
sbb
jns
ffreep
inc
call
test
mov
add
mov
pop
pop
adc
fdivrp
push
leave
jp
push
sbb
mov
push
jmp
leave
push
mov
add
aad
mov
or
adc
jp
cli
bswap
jne
je
je
sbb
xchg
mov
xchg
in
sahf
loopne
enter
sti
ret
mov
in
pusha
insb
icebp
add
and
dec
daa
leave
pop
nop
dec
pop
push
out
fisubs
into
xchg
cmp
rolb
scas
push
vmread
xor
adc
rcrb
aam
sub
orb
xorl
adc
ljmp
out
leave
sbb
cmpsb
xchg
sarl
add
daa
push
push
and
in
and
mov
push
push
adcl
cmp
xor
loopne
sbb
in
dec
or
inc
jno
leave
add
and
jo
fmuls
xor
sbb
fstl
sahf
xchg
or
popa
into
imul
mov
enter
flds
add
mov
sbbb
ror
jnp
sbb
lods
xchg
pop
mov
je
pop
sbb
and
orb
push
mov
lods
ss
or
mov
sub
outsb
sub
fsubrs
sbb
enter
xor
mov
add
adcl
hlt
mov
popa
jo
mov
sbb
enter
loopne
stos
loopne
fisubs
sub
cmpb
adc
sub
push
push
push
ffree
add
sbbb
mov
push
testb
dec
aad
fsubs
and
or
int3
test
jl
pop
and
imul
jecxz
push
pop
sbb
or
mov
or
adc
inc
push
sbb
sub
or
dec
add
add
shll
pop
inc
rcrb
sbb
cmpsb
add
inc
pop
sbb
incl
sbb
cld
les
push
or
or
mov
aam
sbb
neg
test
pop
adc
sub
push
or
mov
sbb
loopne
sbb
push
scas
add
sbb
ljmp
add
pusha
mov
and
repnz
mov
xchg
stc
shrl
pop
lds
or
test
lods
out
pushf
cmpsb
adc
jno
push
or
mov
mov
adc
inc
rclb
inc
lods
pop
test
in
shrb
icebp
cmp
ljmp
stos
or
repnz
mov
out
inc
out
shrb
sub
jbe
dec
mov
push
inc
mov
in
jo
cmp
stc
cmp
enter
outsb
clc
mov
add
add
mov
ja
add
add
stc
add
xchg
idivb
or
dec
pop
pop
adc
mov
add
lock
lahf
shlb
inc
rclb
mov
aam
xchg
sub
pop
imul
sbb
add
pop
fcoms
add
shl
int3
push
add
test
add
bound
adcb
ret
jo
xchg
dec
repnz
jb
addl
mov
adc
pop
dec
test
lds
dec
cmp
and
imul
adc
or
lds
inc
mov
or
ret
cmp
or
sub
test
loopne
mov
push
pop
push
adc
loop
hlt
xor
or
pop
pusha
or
inc
jb
push
aad
add
insl
or
dec
cs
add
mov
push
jecxz
cmp
fmull
in
xor
inc
push
fdivl
test
push
mov
or
xchg
cld
dec
loop
mov
pop
add
adc
or
into
pop
sub
stc
int3
xor
xchg
jle
inc
mov
dec
imul
das
sub
pusha
test
or
add
test
sbb
jp
cmpsb
les
push
es
sub
xchg
mov
mov
mull
enter
cmp
fs
in
dec
inc
les
sbb
cmp
movsl
xor
fsubl
pop
js
or
mov
adc
andps
fs
testb
mov
cwtl
add
add
pop
cmp
sbb
push
sbb
inc
push
xchg
popa
ret
je
inc
stc
sbb
incb
gs
lret
inc
and
aad
lahf
call
push
aas
push
jno
dec
mov
xchg
pop
sbb
jmp
pusha
dec
mov
push
mov
xor
add
and
mov
sub
inc
sbb
das
inc
or
adc
fimuls
test
rclb
push
push
mov
lods
sub
mov
fadd
jo
push
add
loope
cs
or
inc
sub
mov
call
and
leave
mov
xchg
test
add
mov
mov
adc
aaa
xor
push
clc
adc
push
dec
or
in
and
xchg
jb
mov
in
sarb
or
sub
icebp
mov
pop
into
and
je
mov
fdivl
adc
cwtl
rcrl
sub
rcl
adc
push
int3
test
push
pop
shlb
nopl
adc
cs
movsb
addr16
mov
adc
add
xchg
in
inc
orb
nop
data16
mov
and
mov
rol
test
dec
jp
call
add
movb
adc
outsl
loop
sahf
fcoms
call
cld
sbb
jge
mov
adc
xchg
jo
aaa
out
sbb
dec
stos
cmp
icebp
test
test
stos
or
call
adc
aam
sarb
adc
and
xlat
mov
add
subb
lock
pop
bound
and
add
pop
jb
cmp
mov
adc
ret
pop
cwtl
pop
or
push
movsb
ffreep
dec
sysenter
pushf
mov
pop
sub
ficoml
subb
in
xor
mov
lods
xor
jae
pusha
nop
inc
xlat
enter
or
insl
and
xor
pop
push
or
lods
sub
je
and
movsb
adc
insl
xor
push
push
ljmp
repnz
aaa
push
push
in
mov
push
and
popa
mov
adc
imul
mov
imul
mov
or
cmp
add
inc
stos
repnz
xor
pop
cmp
out
push
pop
test
ljmp
ret
xchg
sbb
out
fsubrs
and
jo
add
inc
test
push
adc
rcl
lock
pop
sbb
pop
filds
sbb
shlb
insb
or
add
shrl
cmc
aad
add
or
out
ret
pavgb
add
inc
decb
sbb
inc
test
push
and
stc
bnd
push
cmpsl
test
aam
adc
test
call
unpckhps
jp
shlb
adc
lcall
test
mov
subl
pop
push
sbb
sbb
xor
mov
sbb
adcl
cmp
notl
dec
addb
pusha
cmp
add
xchg
inc
pop
loope
inc
inc
sbb
je
rol
adc
push
or
idivb
adc
mov
lea
xchg
adc
dec
cmp
pop
lods
mov
clc
aas
ret
in
mov
les
mov
test
nop
inc
sar
mov
cmp
mov
leave
xchg
push
push
xor
mov
jae
out
pop
add
lret
in
xor
jmp
sbb
loopne
push
rcll
mov
pop
push
mov
push
mov
cld
xchg
cmp
data16
leave
gs
and
push
inc
sub
mov
adc
addl
xchg
fsub
test
adcb
nop
xchg
push
push
mov
xchg
pop
fadds
jl
push
mul
adc
jne
jb
pop
loope
pop
or
dec
sub
lcall
or
mov
cmc
subb
add
into
jle
jecxz
sbb
fs
push
repz
adc
mov
xchg
xchg
sub
rolb
cmp
addl
sub
dec
add
push
xchg
mov
shr
add
addl
xchg
test
sbb
int3
xor
push
mov
mov
dec
xor
sbb
wbinvd
das
lret
dec
sbb
mov
scas
shrl
mov
mov
push
cmp
fdivl
clc
jl
or
sbb
pop
outsb
mov
add
clc
lea
pop
shl
arpl
sbb
movsl
pushf
je
outsb
lret
inc
dec
les
lret
cli
mov
push
enter
lds
cmp
push
sbb
inc
xchg
ret
dec
dec
mov
in
sbb
dec
inc
adc
test
dec
js
lret
les
inc
lods
rclb
pop
lcall
xchg
push
sbb
mov
or
or
cmpsl
mov
addr16
and
orb
xor
lods
leave
into
hlt
adcb
add
add
cmp
mov
in
ret
pop
adc
or
out
push
mov
fwait
cmp
push
mov
mov
push
nop
test
mov
clc
mov
jecxz
jmp
sub
shll
mov
push
inc
mov
xor
pop
notb
aaa
and
mov
repz
ficomps
testb
sbb
xchg
lret
push
dec
jne
js
icebp
push
dec
in
or
adc
sub
adc
xchg
fidivl
movsb
cmpsl
sarb
sub
xchg
add
xchg
sbb
adc
inc
add
test
sbb
or
and
mov
jb
lret
add
into
mov
add
sub
arpl
loope
inc
pop
subb
subb
xchg
inc
jp
icebp
call
clc
rcll
jl
enter
decb
sub
into
les
shlb
adc
lods
sbb
cli
test
push
dec
scas
in
into
xchg
sbb
leave
xor
sbb
mov
adc
jle
xor
xorb
aas
or
inc
test
loope
frstor
cli
adc
test
mov
test
inc
je
cld
jmp
mov
mov
fidivs
inc
push
hlt
adc
fdivr
ljmp
sbbl
pop
leave
sbb
jb
or
sbbl
and
loop
push
test
jno
test
adc
add
inc
pop
xor
pop
add
push
mov
xchg
dec
aas
cmp
mov
mov
in
inc
sbb
xchg
cld
int3
push
push
inc
call
cld
and
jo
loop
sub
sbb
sub
lods
fmulp
jns
jp
scas
mov
sbb
test
pop
adc
push
xlat
add
adc
mov
xchg
andl
jmp
xchg
pop
push
and
test
mov
cmp
icebp
mov
and
sahf
mov
dec
jne
jl
rclb
push
push
stos
add
sbb
dec
fmul
push
lods
xor
out
push
push
cli
pop
icebp
loopne
lods
leave
mov
ret
or
push
cmp
lock
sbb
pop
push
movsl
xchg
lock
lods
lret
xchg
jg
insb
jle
pop
stos
xor
and
fldl2e
mov
add
repz
leave
and
scas
mov
sbb
mov
outsb
add
ret
mov
mov
jmp
adc
loope
xor
jmp
call
jne
or
adc
jp
mov
jecxz
insb
and
clc
push
push
cmc
test
push
insb
pop
mov
mov
loopne
sbb
test
xchg
or
lock
mov
adc
outsb
ljmp
xchg
and
pop
or
loope
addr16
test
mov
stos
pop
mov
or
add
xor
and
sub
test
bound
cld
adc
adc
popl
orb
jno
xchg
xchg
and
imul
cli
push
xor
in
add
add
les
loopne
dec
movsl
sbb
mov
or
xchg
insb
and
pop
cltd
adc
xchg
pop
sbb
inc
imul
pop
lods
mov
lock
or
js
outsb
sub
or
add
test
rclb
sbb
sbb
and
inc
cmp
in
sahf
add
jp
sub
add
idivb
or
je
or
pop
ret
subb
ljmp
and
add
inc
inc
lods
sub
fnstcw
int3
inc
aas
pusha
add
adc
adc
leave
and
mov
add
lea
push
mov
sub
icebp
test
pusha
push
cmc
mov
dec
fbstp
mov
pop
shll
cli
nop
xor
mov
xchg
mov
sbb
xchg
mov
test
add
and
or
cli
xor
sbb
or
mov
inc
push
stos
popf
mov
into
mov
cmpsl
outsb
fimuls
aaa
js
xor
ret
les
or
jmp
jno
lods
sub
ret
js
inc
cwtl
sbb
pop
movsl
rorb
pushf
sub
fcmovne
or
cwtl
jecxz
call
test
sbb
shrb
add
mov
cs
inc
cmp
outsb
cli
dec
leave
dec
push
call
inc
insb
sub
mov
ret
int3
rorb
lret
xchg
xchg
mov
test
inc
daa
mov
sbb
jo
or
test
pop
lods
in
enter
adc
inc
adc
and
push
aam
push
popf
addr16
jge
and
ss
adc
or
test
xchg
loopne
inc
xchg
mov
mov
adc
push
push
dec
cmp
xchg
test
push
roll
ret
xchg
fcoml
inc
pushf
into
jb
mov
push
and
repnz
sub
mov
xchg
push
clc
les
adc
lods
sub
push
or
mov
or
and
call
addr16
stc
push
ljmp
jnp
das
xor
out
adc
lock
aad
pop
pop
js
mov
nop
cli
aas
js
sbb
or
push
push
adc
enter
xor
push
bound
into
repnz
mov
push
add
or
mov
test
aaa
jo
je
add
mov
mov
ret
pusha
pop
or
pop
jo
mov
clc
push
pop
dec
inc
aam
xchg
pop
sbb
adc
ljmp
setb
pop
ret
or
daa
jmp
iret
shrb
push
dec
jmp
mov
sbb
ror
xchg
mov
push
xor
pop
test
inc
pop
push
int3
push
mov
outsb
stc
pop
inc
pushf
orl
or
idivl
dec
adc
cmpsb
mov
mov
sub
repnz
push
inc
negl
or
movsb
pusha
dec
pushf
or
sub
nop
mov
jmp
add
xchg
and
inc
rclb
sbb
int3
inc
cmp
ret
dec
pop
add
testb
movb
pop
pop
adc
les
or
cmp
popa
dec
mov
call
push
add
stc
mov
ret
add
cld
adc
cli
and
aam
or
add
pop
cmp
and
mov
insl
jae
lahf
andb
cltd
jo
jle
dec
js
add
jbe
sub
or
inc
xor
js
mov
sub
aam
xor
xor
sub
adc
fsubr
jo
andb
or
aam
imul
pop
xchg
and
fs
dec
add
sbb
adc
add
loopne
and
mov
sbb
add
sbb
add
xor
test
sbb
jo
jo
push
or
mov
subb
js
aaa
and
cmp
and
rorl
in
add
add
jb
xchg
ss
adcl
loope
aad
push
imul
rol
inc
xchg
test
push
add
or
mov
mulb
pusha
popl
jecxz
lock
cmp
push
shlb
add
rcl
push
nop
jle
adc
test
jl
sbb
or
adc
sbb
lods
out
and
pop
iret
nop
adcb
mov
je
inc
dec
test
xchg
sbb
shrb
dec
das
or
mov
push
stos
rcrb
sub
movsb
push
mov
loop
aam
mov
mov
mov
cmp
rcrl
mov
sbb
mov
jle
xor
insl
jo
sbb
push
adcb
cmp
xor
addb
add
inc
in
add
les
inc
or
xchg
push
or
add
mov
or
cltd
inc
out
js
call
andl
cmp
sbb
cmpsb
sbb
sahf
push
fst
into
mov
adc
lods
sbb
add
adc
inc
sbbb
xchg
inc
fbld
ljmp
add
or
or
pop
sub
mov
pop
mov
sub
push
movsb
sub
fs
sbb
loopne
mov
jp
dec
push
mov
add
add
pop
lcall
sbb
xchg
cmp
or
mov
mov
es
mov
pusha
mov
cld
mov
sub
outsb
push
push
movsl
push
js
sbb
clc
cmp
imull
fcompl
dec
test
xchg
and
hlt
scas
js
fs
mov
cmp
sub
xchg
in
add
pop
xor
inc
sbb
or
mov
or
mov
cmp
test
xchg
in
mov
push
negb
mov
adc
jnp
cmpsb
add
xor
pusha
dec
cmp
sub
xor
je
cltd
mov
int3
jp
sbb
sub
sub
andl
adc
jb
neg
lods
punpckhbw
notl
call
or
adc
negl
ljmp
out
pop
js
xchg
mov
push
inc
push
push
pushf
test
cmpsb
call
fmuls
xor
xor
pusha
push
push
add
jae
jns
sbb
and
sbb
or
je
sub
add
adc
cmp
xchg
push
mov
mov
dec
push
and
xchg
cs
add
or
mov
mov
adcl
je
pop
aas
rcll
inc
mov
sahf
push
repz
add
aam
dec
or
xlat
mov
adc
dec
pop
mov
pop
stos
lret
lcall
out
pushf
loope
or
mov
push
loop
dec
jb
stos
loop
xor
inc
loope
push
xchg
mov
sbb
sbb
daa
or
pop
adc
push
rcrb
push
enter
stos
rcrl
or
adc
cmc
pop
in
test
cmp
add
sbb
lock
jl
push
xchg
adc
xchg
rol
push
ror
dec
or
cmpsb
and
mov
pop
loope
icebp
stos
jns
cmp
mov
in
punpckhdq
push
inc
push
mov
mov
shll
int3
cld
je
and
sbb
sbb
pusha
inc
mov
sub
xchg
push
bound
adc
aam
fiadds
mov
cmpsl
sub
or
mov
lahf
cmc
decb
push
movsb
pop
inc
add
inc
movsl
push
pop
stos
ret
or
mov
rcl
les
mov
push
xor
pop
in
sub
add
imul
std
insl
push
movsl
dec
or
divb
icebp
pop
mov
inc
inc
sub
sub
lock
push
mov
lods
push
or
daa
sbb
and
sarl
pop
ja
sbb
xor
jl
daa
sbb
mov
push
arpl
cs
or
mov
cltd
pop
mov
scas
push
push
test
clc
sub
dec
push
push
dec
imul
add
xor
push
ret
or
sti
cmp
je
sarb
push
sbb
pop
sbb
adc
lock
in
ror
cmp
jp
or
clc
shrb
jnp
pop
sbb
rcl
jb
and
sbb
xchg
sub
stos
add
hlt
nop
or
rcl
xchg
in
mov
mov
mov
mov
movsb
lock
and
sbb
lods
or
push
add
adc
push
push
jns
in
sbb
popa
adc
cmp
out
or
jl
nop
sarb
adc
jp
ret
sbbb
xchg
shl
imul
add
xchg
jo
add
push
jg
sub
pop
mov
sbb
hlt
xchg
stos
sbb
subl
bound
out
daa
mov
pop
sarb
jbe
aas
pusha
or
xchg
push
push
sbb
add
lcall
xchg
orb
fwait
dec
stc
push
mov
std
adc
dec
jmp
push
rol
push
fistl
orl
hlt
adc
ret
jno
in
sbb
les
pop
or
push
gs
sub
dec
and
and
push
mov
cmp
adc
or
push
scas
mov
out
je
icebp
icebp
xor
out
ljmp
rcl
adc
push
nop
adc
ror
imul
inc
and
fs
cmp
or
fisttpl
sub
sbbl
sbb
cmp
sbb
jge
push
mov
jl
push
adc
xor
sarb
mov
imul
inc
inc
in
or
les
jmp
lods
and
out
push
cli
jp
mov
pop
jl
push
loop
jge
sbb
and
pop
inc
mov
pop
inc
push
mov
loopne
cmp
sbb
mov
loopne
sbb
hlt
ret
push
mov
imull
cmp
push
daa
pop
or
xor
movsl
or
push
xchg
rclb
repnz
sbb
sti
cs
or
ljmp
cmc
ret
add
shrl
push
jb
add
add
and
into
pop
test
and
in
jp
and
out
or
mov
sub
shl
mov
ss
xchg
scas
adc
inc
movb
movsl
xchg
sbb
add
cmp
push
adc
data16
xor
jmp
das
sbb
icebp
jb
icebp
jno
push
xlat
nop
sub
rcrb
inc
or
imul
adc
cmovnp
stc
mov
call
pusha
jno
dec
ret
repz
loopne
in
outsb
into
mov
cmp
imul
pushf
mov
add
mov
or
push
movsb
rclb
gs
xor
loopne
lcall
leave
xchg
or
jge
push
ljmp
or
mov
aam
cli
enter
and
movsl
and
les
arpl
mul
xchg
push
dec
dec
push
jl
inc
fidivrs
pop
popa
sub
push
mov
pop
aaa
jne
addb
arpl
sub
pop
rcrl
les
mov
rorl
call
adc
daa
xchg
mov
nop
movb
pop
sbb
in
push
dec
pop
or
xchg
mov
cltd
lods
cmp
xor
cwtl
andb
cmp
pop
or
jmp
inc
xor
push
loop
or
shr
add
roll
fadd
push
pop
jmp
mov
sbb
dec
js
testb
in
jne
cmp
pop
push
popf
movsb
aam
iret
mov
xchg
shll
leave
push
or
repz
js
shl
int
jne
xchg
sub
jb
sub
push
leave
mov
mov
xchg
mov
pop
and
pop
mov
ficoms
invd
mov
push
jno
jp
subb
into
xchg
inc
addb
js
aam
popa
int3
test
int3
adc
sahf
sub
xor
add
sbb
lods
test
and
mov
dec
lahf
pop
sbb
mov
mov
mov
cwtl
cmp
push
add
add
lock
movsl
cmpsl
xor
dec
loopne
dec
adc
lret
inc
dec
xlat
fsubrs
inc
inc
adc
icebp
push
jecxz
js
push
xchg
add
sub
push
add
jle
jp
test
dec
add
rclb
push
push
jns
lcall
xor
cmp
sbb
mov
ret
mov
test
or
or
scas
add
add
jb
jmp
pop
call
mov
mov
pusha
push
push
scas
sub
repnz
cmp
lret
les
or
dec
fcomps
inc
pop
pop
inc
or
rolb
je
mov
fs
sub
pop
popf
mov
mov
mov
xchg
ds
pop
or
add
or
add
mov
add
mov
jecxz
add
dec
je
cs
sbb
loope
xchg
popa
imul
cmp
and
inc
xorl
loopne
and
add
push
cmp
imul
mov
sbb
movsl
jo
int3
mov
sub
movsl
xchg
push
add
or
pop
add
sub
add
dec
sbb
pop
sub
inc
jmp
mov
push
aad
fisttpll
pop
popa
insb
dec
stc
mov
xchg
push
mov
icebp
les
enter
jne
push
xor
lock
rcrb
mov
cmpl
mov
call
add
push
inc
movsb
mov
adc
shr
les
cmp
jmp
sbb
sbb
jle
xlat
and
pop
imul
push
inc
jmp
out
call
jge
ljmp
add
add
adc
xchg
xchg
mov
ret
push
les
cmp
je
notb
xchg
ret
arpl
add
and
pop
push
repnz
adc
push
pop
rcrb
add
add
mov
lock
jne
fwait
dec
mov
insb
movsl
pop
nop
mov
adc
lcall
js
pusha
rclb
push
ds
inc
adc
aam
test
xchg
push
cmp
sbb
dec
pop
js
dec
stos
adc
popa
test
aad
and
imul
cmpsl
aaa
xchg
xchg
and
ret
rolb
bound
in
or
push
inc
scas
push
cmpsl
pop
es
in
xchg
subb
add
fsubrl
mov
cmp
inc
inc
ret
dec
lea
xchg
adc
mov
xor
loopne
lret
mov
push
cmp
or
xor
xchg
cmp
jl
das
lods
xchg
shlb
lock
push
ret
js
cltd
and
sbb
adc
arpl
add
popa
pop
jo
push
scas
adc
sub
inc
cmc
dec
test
jo
mov
push
cmp
xor
xor
adc
push
movb
sbb
aad
jl
sub
mov
xor
cmpsb
xor
hlt
aad
addr16
outsl
cld
push
rcr
add
jmp
cmp
sub
mov
sbb
insl
push
rorl
and
push
inc
cmp
rclb
es
xor
rclb
lea
inc
push
out
xor
or
sbb
push
mov
mov
or
pusha
mov
or
xor
js
iret
loopne
jbe
sub
adc
mov
iret
add
xchg
adc
lret
sti
js
adc
sub
inc
or
xor
insl
and
or
jne
mov
push
sbb
jbe
fdivs
mov
cli
call
dec
fs
femms
mov
ljmp
mov
add
jp
xor
xchg
lcall
clc
mov
dec
inc
ljmp
dec
subb
test
push
xchg
enter
mov
pop
xchg
mov
jmp
pop
add
xchg
push
stos
push
add
or
add
add
or
js
xchg
inc
fiadds
mov
shll
aaa
lock
es
mov
aam
pusha
and
push
out
je
jnp
sub
daa
dec
test
adc
sbb
ret
lods
pop
pop
mov
and
inc
jo
clc
sub
sbb
lock
repz
adc
movb
clc
movsb
call
les
mov
pop
sbb
mov
stc
adc
cmp
insl
or
lret
push
punpcklwd
jmp
inc
and
cli
mov
loopne
mov
or
adc
sub
gs
aaa
mov
push
loope
xor
push
jp
stos
hlt
test
jne
xchg
xchg
leave
and
sbb
loope
arpl
roll
push
sub
shlb
jg
movsl
jp
adc
imul
stos
inc
pushf
cmp
js
stc
adc
push
and
mov
rolb
mov
dec
inc
repnz
and
pop
adc
or
or
pushf
dec
pop
lods
and
push
sbb
fmuls
mov
out
mov
mov
push
outsb
pop
scas
clc
dec
mov
dec
cmp
scas
insb
insb
test
add
push
or
cltd
ljmp
or
xchg
fiaddl
and
add
xor
xchg
mov
js
hlt
dec
pop
mov
shll
or
aam
add
lret
adcb
xchg
jne
loopne
loopne
pop
cli
or
mov
or
repnz
pop
add
dec
or
aam
and
add
loope
xor
pusha
cmp
sub
pushf
push
mov
ljmp
mov
sbb
arpl
imul
mov
or
test
dec
mov
lret
and
scas
fcoms
cmpsl
aam
adc
addb
jl
adc
sbb
sbb
in
dec
aas
inc
add
out
sbb
mov
lret
mov
push
push
and
movsb
xchg
icebp
in
inc
shr
out
mov
jp
push
or
jle
sarb
pop
add
popa
mul
mov
push
push
and
rcrl
mov
add
cld
dec
sbb
into
insb
ret
shl
push
dec
or
push
pusha
or
cmp
lds
push
fiaddl
loope
sbb
ret
fadds
cli
or
fisttpll
sbb
lret
sahf
lods
or
lods
movb
lahf
decb
loopne
xchg
push
pop
scas
push
xor
or
je
add
bnd
js
insb
or
xor
mov
push
adc
push
push
inc
or
addb
scas
and
cwtl
aam
xchg
sub
insb
shlb
into
add
adc
add
jne
push
push
gs
pushf
or
push
jb
cld
pop
aaa
fisubs
test
cld
or
dec
stos
in
mov
add
add
or
shrb
mov
mov
add
dec
and
cwtl
cmp
cmp
xchg
jl
or
and
shlb
dec
cmp
push
pop
cmp
or
adcb
sub
xchg
jbe
xlat
orb
into
or
call
sarl
sbb
push
fs
into
imul
sub
fsub
lea
add
jno
es
and
mov
xchg
fdiv
mov
imul
pusha
or
fists
inc
inc
adc
adc
ret
dec
sbb
push
xchg
sub
jmp
clc
movsb
daa
add
or
pop
lock
or
clc
std
into
pop
push
daa
cmp
mov
add
sub
push
xchg
xchg
xchg
push
xchg
imul
xor
push
or
loopne
adc
scas
ret
adc
xchg
push
test
enter
or
sbb
jge
mov
je
loop
daa
lock
adcl
int3
or
les
mov
sarb
test
mov
dec
and
xor
pop
mov
stc
or
mov
push
mov
testb
lods
adc
xor
push
mov
mov
dec
int
xor
loope
shrl
jp
shll
add
mov
sbb
bound
dec
mov
adc
mov
sub
bound
scas
cs
dec
repnz
leave
mov
sti
add
xlat
sarb
jle
xchg
js
sbb
mov
cli
hlt
cmp
out
sub
fld1
mov
andl
sub
add
dec
adc
mov
sarl
loopne
adc
rcrl
ja
xchg
dec
jnp
cli
add
les
add
inc
pop
push
cmpsb
ficoml
and
push
jnp
bound
and
insb
pusha
sub
loop
aaa
inc
mov
addr16
xchg
mov
adc
adc
rorb
adc
sbb
and
dec
sbb
inc
adc
movsb
test
xchg
inc
push
mov
mov
inc
test
pop
roll
icebp
mov
in
fisttpl
int3
xor
shl
add
add
cmp
addb
mov
leave
or
sbb
sub
push
mov
adc
adc
xor
stos
push
repnz
pop
ss
movsb
add
jo
aaa
inc
aam
cmc
nop
push
shl
in
adc
xlat
ljmp
daa
xorb
inc
xchg
adc
add
rolb
sbb
xchg
lcall
pushf
jp
aaa
add
mov
xchg
hlt
add
ljmp
dec
jns
or
add
bound
sbb
addb
lsl
mov
sub
fldcw
mov
call
gs
fmul
push
cmp
fisttpl
sbb
jmp
leave
ljmp
push
cwtl
mov
or
loopne
or
dec
or
sub
pop
mov
mov
pop
mov
dec
adc
xor
adc
adcb
mov
or
scas
add
mov
fstl
push
into
pop
es
mov
adc
pop
push
mov
add
sar
push
sbb
scas
pop
mov
or
jp
mov
cmpl
inc
nop
popf
fwait
test
mov
imul
ret
jb
xchg
and
out
push
sub
and
jbe
test
xchg
ds
or
dec
push
xor
es
data16
call
adc
pusha
icebp
jmp
xor
mov
sbb
add
pusha
mov
sbb
xor
add
dec
js
sbb
push
inc
in
sbb
ret
inc
push
addb
and
push
and
push
into
mov
add
cmpl
arpl
sub
xchg
cs
add
lret
or
dec
xor
ret
mov
push
xor
lcall
repz
sbb
dec
sbb
adc
xor
adc
dec
popa
inc
data16
ds
inc
dec
xor
and
dec
sbb
das
adc
je
and
mov
sbb
hlt
add
push
cmp
fwait
sub
or
stos
dec
dec
test
bound
xchg
xor
inc
loop
mov
push
pop
add
pop
and
mov
sub
mov
loop
adc
or
jo
sbb
push
lock
lock
inc
xor
jns
mov
outsb
enter
nop
ret
push
push
mov
or
push
repnz
mov
adc
sub
adc
inc
mov
dec
insb
sbb
je
js
enter
mov
add
dec
xchg
js
test
cmc
fmuls
fiaddl
xor
push
lods
add
data16
subb
addb
or
pop
add
mov
sbb
into
and
adc
in
inc
or
loop
pop
into
cs
test
push
xor
loopne
cs
mov
hlt
loopne
push
adc
shr
push
add
mov
cwtl
in
int3
inc
pusha
dec
mov
add
rorl
add
daa
mov
adc
add
mov
cwtl
stos
sbb
mov
dec
sahf
mov
mov
sub
into
test
and
aam
test
pop
dec
sub
mov
mov
rorl
or
inc
nop
or
dec
stos
out
push
pop
mov
rcrb
test
rolb
adc
fsubs
rcrb
cmp
pop
and
je
adc
inc
push
jecxz
mov
mov
push
test
test
punpcklbw
fimull
subb
lret
lcall
inc
xchg
rorl
or
push
dec
adc
sub
push
adc
cltd
insb
mov
inc
mov
and
push
mov
test
fs
xor
es
or
or
loope
or
aam
sahf
sbb
div
inc
mov
push
shll
or
add
lret
loope
mov
mov
jecxz
pop
outsb
mov
lcall
xor
dec
mov
pop
mov
xchg
sbb
je
fisubrs
mov
inc
sbb
inc
sub
cld
addr16
inc
test
jo
sbb
test
xchg
dec
sbb
rolb
orl
xchg
sub
add
dec
inc
dec
mov
hlt
and
cmp
rolb
sbb
sub
andb
push
ja
mov
or
inc
sbb
mov
adc
push
inc
cli
sub
shlb
add
adc
push
or
xor
call
mov
pop
adc
test
leave
test
cltd
pop
add
enter
or
or
xchg
xor
adc
cmp
test
push
cmp
pop
ficomps
loopne
enter
xchg
test
xchg
push
dec
sahf
stos
in
shl
inc
xchg
ljmp
sarl
and
push
adc
and
xor
mov
sbb
imul
test
add
loope
adc
inc
push
sarl
arpl
fiaddl
or
sbb
xor
and
inc
cmpl
xchg
cli
jp
push
xchg
pusha
lcall
adc
jo
cli
sub
add
test
xor
mov
leave
icebp
inc
jl
xchg
ljmp
aam
ficompl
add
inc
movsl
mov
rolb
ret
cmp
mov
adc
add
test
repnz
pop
push
dec
stos
push
add
test
jmp
dec
mov
or
xor
and
adc
push
push
nop
mov
sub
hlt
movsl
mov
lods
test
push
or
faddl
and
hlt
lods
jmp
push
inc
or
mov
push
and
dec
ret
inc
xlat
and
dec
jne
clc
out
mov
andb
rcrb
push
push
pop
jecxz
pop
cli
sbb
ret
pusha
roll
sbb
xchg
dec
sbb
pop
pop
or
icebp
xor
shll
test
pop
mov
jg
rcl
clc
sbb
sbb
inc
aad
incb
sbbl
movsl
addr16
pop
adc
rorb
xor
ss
movsb
push
xchg
shll
add
dec
pop
or
mov
jp
adc
sbbb
add
and
mov
jns
in
add
jp
adc
call
cmp
mov
lock
dec
fidivrs
push
xchg
cli
mov
cmp
shrb
xor
ret
test
insb
addl
jl
enter
test
add
or
add
sbb
xchg
sub
nop
aam
cmp
push
lea
pop
jo
sub
ret
mov
push
mov
pop
mov
repz
and
repz
mov
push
into
push
call
ret
lock
bound
or
je
xor
lea
xchg
bound
addr16
mov
mov
cmp
jp
fdivl
fistl
sub
cmp
adc
and
add
add
xchg
push
push
js
jo
xchg
xchg
icebp
or
inc
push
aas
push
aaa
sbb
inc
adc
out
sbb
verr
cmpsb
push
pusha
or
jb
adc
adc
test
mov
mov
sub
push
or
testb
xor
jo
enter
pusha
mov
fisttpll
or
insb
or
sbb
imul
add
inc
jo
pop
inc
mov
sbbb
adc
sbb
push
xchg
scas
mov
aam
loope
cmc
jmp
adcl
cwtl
or
xchg
test
add
ret
rcrb
mov
cmp
dec
jl
or
pop
nop
addb
outsb
inc
jmp
lds
mov
adc
jb
bound
jns
push
in
test
dec
clc
or
ror
adcb
clc
mov
push
jge
test
dec
mov
dec
cmp
add
add
push
and
shlb
or
xor
xor
cmpb
lods
mov
push
lock
das
pop
sub
jmp
add
jbe
xchg
sbb
or
add
xchg
cmp
cmp
fists
test
add
into
das
jne
sbb
imull
call
icebp
sub
xchg
adc
mov
imul
jb
push
sub
mov
into
xchg
shrb
movsb
jp
push
pop
push
jg
jp
fs
pop
adc
adc
mov
popa
pop
pop
and
jl
xchg
lcall
add
out
jo
dec
mov
and
test
loop
adc
cs
sbb
xchg
add
mov
xor
out
imul
aam
addb
sbb
rcrl
push
dec
cmp
pop
rcrb
and
sbb
addl
jae
pop
dec
out
mov
adc
adc
jo
mov
mov
push
sbb
call
mov
das
pop
aam
add
push
iret
les
ret
push
mov
loopne
test
push
push
fcompl
adc
rol
sahf
inc
cmp
and
mov
int
inc
mov
fwait
push
loopne
rcl
sbb
mov
icebp
cmp
lahf
jg
xchg
adc
xchg
dec
mov
ret
jg
les
ficomps
and
enter
sbb
adc
fnstsw
inc
sbb
ss
adc
push
mov
sbb
aaa
push
adc
shll
add
fnstcw
sub
popl
leave
rol
outsb
rol
inc
leave
enter
ss
mov
stos
mov
adc
adc
or
enter
mov
add
popa
jne
add
add
js
hlt
movb
lret
or
push
int3
xor
push
add
fidivrl
adc
add
or
xor
mov
or
loopne
dec
adc
daa
sbb
add
pop
xor
sbb
imul
inc
mov
jne
add
or
repnz
add
add
movb
or
out
aam
cmc
shl
fsubrs
out
cmpsb
dec
lods
xorl
sub
pop
stos
cmp
pop
mov
and
dec
sbb
push
cmp
jbe
inc
movsb
xor
adc
xchg
jb
inc
adc
sub
inc
rcr
fdivp
push
shrb
push
fstl
popl
test
sub
arpl
jbe
push
jo
gs
push
nop
hlt
movsb
shll
inc
jno
adc
popf
sub
loope
push
enter
shll
ret
scas
push
outsl
jmp
mov
pcmpeqb
and
fcmovbe
orl
push
push
inc
in
pop
sub
js
ret
and
ror
jo
ret
inc
adc
movsl
inc
ret
push
dec
lods
pop
cmc
inc
push
sbb
clc
xchg
sbb
leave
divps
cli
xchg
sbbb
add
loopne
push
std
andb
or
xlat
testb
pop
cmp
mov
aas
sbb
cmp
xor
icebp
mov
mov
add
jo
pop
jge
outsl
out
dec
sub
xchg
inc
cmp
dec
adc
or
stos
pop
pushf
add
repnz
pop
test
or
and
test
aad
jne
arpl
lahf
ret
imul
in
popa
pushf
inc
xchg
add
or
mov
loop
jp
in
sbb
js
icebp
inc
xchg
sbb
nop
pop
ret
loop
mov
pop
aaa
sbb
push
push
add
jge
mov
out
pop
jbe
orl
rclb
js
stos
push
and
sbb
add
bound
pop
movsl
dec
xor
cmp
or
loopne
int
or
or
data16
push
or
into
ljmp
push
rolb
jo
jo
add
cmp
cld
xlat
mov
not
jmp
push
js
push
jb
dec
mov
and
inc
lods
shlb
inc
enter
movsl
or
scas
orb
je
add
loopnew
jp
adc
in
loope
mov
mov
addl
fisubrl
add
inc
push
adcl
push
ja
ret
test
icebp
pop
sbb
push
sbb
cmp
add
adc
jno
and
lds
xchg
sbb
push
add
or
sbb
adc
mov
push
mov
scas
test
pop
dec
cwtl
push
fildl
mov
outsb
push
add
mov
out
jae
or
adc
pop
inc
sub
lret
push
fs
call
loope
jbe
xor
inc
popa
je
mov
daa
jno
aas
xor
les
inc
or
pop
or
ret
inc
lods
cmc
mov
sar
cs
test
test
sti
mov
add
sbb
inc
sbb
fdivr
push
cmpsl
imul
test
mov
xchg
mov
or
sub
sbb
inc
test
jo
outsl
jge
out
or
lock
xor
add
gs
mov
fmuls
and
prefetch
divb
imul
imul
push
mov
and
xor
adc
mov
push
push
mov
or
mov
xor
adc
mov
call
pop
call
clc
stc
daa
shl
mov
cwtl
je
in
push
pop
xor
mov
jb
outsl
jecxz
and
aad
mov
stos
adc
mov
add
jecxz
enter
cmp
sbb
je
repz
and
je
ljmp
add
ret
adc
rcrb
test
mov
movsb
enter
andb
icebp
adc
or
call
in
leave
adc
pushf
shlb
pop
add
or
jp
mov
js
mov
inc
xchg
outsb
stos
outsb
ret
and
mov
pushf
adc
ljmp
pop
and
xchg
aaa
in
sub
adc
dec
inc
or
imul
mov
popf
jge
sbb
ret
cmp
ffree
adc
mov
adc
int3
add
mov
cli
cwtl
or
or
sub
jae
cs
bound
cs
cmp
pushf
sub
jbe
pop
xor
jp
xchg
inc
inc
mov
gs
fadd
pop
mov
roll
mov
jp
inc
punpcklbw
add
and
inc
das
dec
je
jb
paddusb
inc
test
push
scas
push
in
cli
ss
mov
lock
lret
push
testb
popa
repnz
roll
add
jg
in
push
xchg
shrb
jle
add
lock
jmp
cmp
ret
cmc
int
sbb
fs
or
xchg
std
into
mov
push
ret
inc
sbb
adc
movsl
add
xor
test
lcall
lret
xorl
or
lock
xchg
mov
dec
pop
stos
rorl
xor
jmp
jbe
mov
test
das
or
shrb
jo
jo
inc
adc
clc
lahf
inc
jo
pop
adc
mov
leave
fcomi
push
inc
inc
js
jne
enter
popa
iret
test
pop
pop
mov
adc
into
push
aam
push
rcr
sarb
std
out
xchg
mov
adc
int3
and
jb
xchg
lret
stc
sub
data16
stos
or
test
faddl
mov
xor
and
shl
popa
std
add
icebp
ret
pop
dec
xchg
push
or
adc
pop
push
test
sbb
call
pop
push
rcrl
xchg
cmp
dec
xchg
sub
mov
xor
das
mov
push
mov
inc
xor
pop
inc
loop
pop
cwtl
stos
adc
bswap
subl
adc
mov
leave
adc
xchg
xchg
pop
es
mov
fs
jl
lcall
loop
mov
repnz
push
adc
jae
adc
insb
dec
rorb
dec
movsl
addb
lea
pop
loope
cmp
xchg
cmp
int3
add
and
dec
loop
dec
mov
push
ljmp
inc
stc
push
xchg
xchg
jp
or
mov
data16
push
xor
mov
sub
test
mov
and
mov
shl
test
enter
add
ret
pop
push
data16
addl
xchg
xor
adc
data16
sub
sarb
and
xor
add
outsb
icebp
fsts
ds
sbbb
and
rorb
loopne
ret
mov
bnd
lret
or
xchg
add
lret
mov
or
and
or
mov
mov
rcrb
into
les
mov
sub
sbb
loopne
xchg
es
sub
mov
daa
mov
mov
loopne
adc
xchg
ljmp
lock
les
sar
rolb
loope
dec
mov
mov
inc
imul
lock
les
lret
or
inc
pop
jno
push
in
jmp
inc
repnz
popl
fcoms
xchg
xor
imul
sahf
jo
pop
fildll
xchg
enter
ljmp
add
push
xchg
pop
scas
rclb
jns
pop
fiadds
pop
stos
sub
lds
sub
pop
scas
inc
ret
sub
sub
sti
cmp
sbb
push
fdivl
pusha
ret
and
push
pusha
or
ret
mov
mov
sub
in
stc
or
xchg
sub
adc
inc
in
std
xchg
adc
pop
adc
clc
movsl
repnz
daa
shlb
cmp
add
add
add
ret
mov
ret
cmp
or
lock
sbb
inc
stos
push
leave
add
add
push
jg
inc
mov
sub
push
dec
inc
or
dec
adcl
cmpsb
divb
xor
mov
lods
aad
xor
cmp
adcb
sbb
aam
add
adc
mov
cmp
xchg
daa
or
movsb
jbe
shl
mov
sub
pop
icebp
pop
enter
sub
dec
jno
dec
jecxz
pop
xchg
or
pop
xchg
xor
adc
movsl
sub
leave
loope
jno
inc
push
in
rorb
in
jnp
dec
mov
aam
push
push
mov
push
call
cmpsb
push
notb
cmpxchg
inc
dec
sbb
ljmp
or
pop
push
adc
enter
std
pop
push
aas
or
lock
pop
pop
add
test
mov
mov
dec
adc
es
push
in
dec
loop
or
out
and
pop
orb
in
lea
mov
add
insl
stc
jle
mov
pop
pop
lahf
in
jge
popa
cs
pop
call
push
jp
cmp
testl
inc
add
cmp
xor
xchg
loope
sbb
sub
daa
or
pop
lea
push
push
and
jp
mov
adc
js
repnz
push
xor
dec
mov
pop
lock
add
shlb
ret
mov
jo
gs
fsubrl
subl
and
jl
inc
movsl
ret
fwait
mov
insb
popf
test
push
je
cwtl
adc
push
xchg
mov
xor
sarb
popa
or
stos
push
pop
cmp
push
shrb
add
xor
add
cmpsl
das
mov
nop
dec
call
cld
sbb
pop
pop
mov
sbb
loopne
push
pop
inc
fisttpll
lret
js
or
sahf
ficoms
icebp
out
adc
mov
push
pop
mov
bound
xor
sub
dec
ror
sub
push
push
pop
test
lret
aad
sbb
xchg
xor
pop
cmp
xchg
add
imul
rorb
mov
std
push
xor
xor
sub
pop
mov
or
and
popf
jbe
xor
inc
or
add
xor
stos
mov
push
pop
iret
pop
test
xchg
daa
or
push
int3
adc
inc
out
sbb
xor
scas
iret
jno
push
sar
push
and
push
mov
jo
aad
xor
jno
add
divl
lock
or
sahf
inc
sbb
add
adc
dec
xor
fsubrs
pushf
nop
out
mov
inc
imul
pop
aam
dec
xor
sbb
ret
xor
rcrb
shl
add
jnp
adc
add
dec
ljmp
pop
inc
mov
je
repnz
lret
pop
mov
sbbb
mov
mov
or
or
mov
les
pop
and
push
lret
adc
xor
push
dec
ret
inc
cmp
push
adc
mov
pop
shl
rcrl
xchg
dec
dec
ds
test
pop
push
mov
sbb
loop
add
sbb
mov
dec
inc
inc
sub
mov
push
cwtl
outsl
dec
cmp
icebp
sub
outsb
dec
mov
or
rorl
insb
fwait
sub
addps
mov
aad
sub
clc
addb
add
call
adc
and
loopne
jmp
inc
mov
lret
mov
mov
add
mov
pop
pop
sub
pop
xchg
cmc
and
and
sub
shlb
jp
inc
inc
loopne
das
lret
and
push
push
push
push
pop
push
iret
clc
sbb
xor
adc
out
pop
out
xchg
fwait
inc
mov
mov
mov
and
loope
sub
inc
push
push
repnz
inc
and
jle
sbb
ljmp
inc
and
and
adc
or
mov
or
inc
push
jne
cld
sub
fwait
adc
cmp
fiadds
xor
xor
mov
pop
mov
je
dec
xor
mov
jg
lea
ret
aam
inc
push
addb
dec
ljmp
mulb
and
push
rclb
mov
or
loop
and
test
shlb
push
inc
inc
ret
lock
or
cmp
and
push
mov
sbb
out
shlb
xor
dec
push
fmul
mov
loopne
pop
xor
dec
or
inc
test
mov
rorl
or
push
ret
adc
and
subb
ret
dec
cltd
jmp
mov
add
dec
sub
cs
mov
adc
js
sbb
les
push
lret
mov
imul
sbb
cmp
add
push
fldcw
int
mov
cmp
call
push
fucomi
leave
test
mov
ja
dec
pop
adc
or
rorb
or
dec
sahf
inc
call
sahf
or
aam
xchg
popa
hlt
repnz
sti
mov
mov
push
ret
dec
jmp
sbb
push
pop
scas
ret
call
mov
or
pop
mov
test
cwtl
adc
mov
lcall
ret
push
inc
lahf
or
leave
pusha
mov
jns
mov
xor
jno
dec
lds
pop
and
add
rcrb
push
sub
add
leave
sub
test
mov
pop
xchg
sbb
mov
loopne
push
mov
lods
cmp
es
xchg
lock
cmpsl
xchg
push
in
add
repnz
mov
xchg
ss
mov
test
add
mov
push
dec
pop
xchg
and
or
xorb
add
inc
push
add
in
push
mov
sub
xchg
cmp
movsb
negb
das
cs
xor
add
ss
popa
mov
and
test
push
adc
xchg
adc
adc
push
xchg
pop
imul
add
mov
mov
movb
push
test
mov
test
sbb
into
lock
push
push
mov
mov
add
rclb
cwtl
rolb
notb
ret
push
mov
sub
and
rclb
movsb
sarl
jno
hlt
mov
cltd
ja
in
mov
xchg
sub
ret
adc
iret
popa
addb
aam
push
adc
test
mov
imul
mov
inc
fwait
rol
sub
xlat
mov
call
repnz
add
addb
push
cld
push
ds
push
jp
mov
into
xor
mov
pop
pop
mov
aam
and
clc
push
add
adc
in
jb
mov
ret
adc
out
les
xor
dec
xor
push
syscall
push
nop
div
popa
mov
into
scas
add
loope
pop
add
cltd
aad
ret
add
push
bound
in
pop
test
xchg
add
ja
or
add
adc
pop
das
call
lea
cmp
es
sahf
les
mov
pop
mov
xor
inc
jp
ret
ljmp
cmp
roll
shrl
test
adc
scas
mov
mov
pop
lock
mov
adc
cld
dec
mov
sbb
scas
adc
cmpsl
imul
jmp
mov
sbb
out
or
mov
add
dec
jo
les
jo
or
pinsrw
sub
sbb
push
or
loopne
test
aaa
mov
xchg
cmp
out
adc
or
add
push
push
cmpl
lahf
and
dec
dec
cli
clc
or
leave
xor
and
mov
add
lcall
scas
jp
add
push
nop
mov
hlt
adc
mov
pusha
adc
mov
cmp
push
and
cmpsb
aam
mov
push
call
add
int3
xor
stc
sbb
pop
lret
sub
mov
mov
pop
push
or
jle
push
dec
lods
dec
std
jp
mov
jmp
orb
mov
xchg
mov
inc
cmp
ffreep
adc
adc
dec
or
ret
test
sub
or
int
add
shlb
jg
fmuls
fld
push
sub
or
scas
test
shlb
add
push
mov
lds
js
stos
into
rorl
mov
dec
stos
imul
ror
pop
xchg
sbb
ja
mov
cltd
movsb
loopne
xchg
cmp
mov
jecxz
dec
bound
mov
ror
sub
dec
adc
cltd
mov
pop
xor
loopne
jmp
test
mov
divb
test
sbb
inc
stc
or
mov
or
xor
sbb
adc
rorb
fwait
les
sub
loope
fwait
xchg
fcoms
lods
je
or
or
mov
push
or
xchg
mov
test
mov
mov
xor
sahf
xchg
sbb
add
push
sub
mov
sbb
ret
xchg
mov
adc
sub
jo
inc
nop
lret
inc
and
aas
jecxz
adc
sub
insb
inc
mov
sbb
cmp
push
inc
xlat
inc
jo
dec
cli
mov
sbb
push
add
jle
sbb
jo
adc
outsl
mov
arpl
and
js
loopne
push
mov
and
adcb
test
mov
jp
es
cmp
js
shlb
jecxz
loopne
mov
jp
push
pop
pop
out
ret
lock
cmpb
inc
sbb
add
adc
or
xchg
mov
pusha
dec
mov
das
hlt
popa
ret
ja
stc
or
lret
mov
inc
daa
lock
adc
inc
or
shrb
cwtl
lock
imul
call
lds
mov
loop
stc
pop
ljmp
jne
push
js
ret
or
pop
enter
rorl
pop
test
inc
cmc
xchg
or
into
dec
xor
enter
cmp
xchg
dec
enter
pop
call
in
push
add
loop
adc
movsb
enter
push
xchg
or
or
ds
push
and
pop
inc
inc
adc
std
lret
xor
addr16
mov
shr
mov
hlt
cmp
movsb
inc
jo
sbb
cmp
notl
push
cmp
mov
mov
mov
scas
push
mov
dec
cmp
mov
les
lahf
adc
outsl
scas
sub
cwtl
pop
stos
add
pop
or
test
sbb
and
cltd
sub
cltd
clc
and
mov
ror
and
xchg
and
xor
mov
lret
ror
jp
xchg
imul
ljmp
dec
ds
cmp
add
inc
sub
pop
sbb
imul
mov
lock
lock
int
sbb
cld
mov
shl
push
sahf
fwait
clc
xchg
lock
insl
sbb
pop
popa
pop
fisubrl
push
sahf
mov
je
add
jp
dec
loope
xchg
lods
or
mov
cmp
pop
push
jmp
repnz
and
add
test
or
adc
or
xor
testb
loopne
repz
add
add
sbb
arpl
or
in
and
xor
popa
cwtl
mov
or
jne
test
test
add
push
push
adc
xlat
and
add
data16
hlt
fdivrs
cmpb
dec
or
adc
add
mov
setbe
pop
push
sbb
adcl
xor
cmp
in
sbb
rclb
pop
out
daa
sbb
aaa
cmp
jl
add
sbb
dec
mov
adc
inc
test
and
xor
ret
push
sbb
jmp
popa
popa
ret
push
js
lods
and
sub
or
push
popf
cli
mov
dec
outsl
or
daa
sbb
sbb
enter
cmp
add
or
jl
push
push
lret
or
movsb
rolb
push
test
mov
jl
loopne
mov
push
xor
sbb
mov
add
sbb
mov
in
inc
add
push
out
jmp
add
dec
fildll
fs
testb
push
sbb
sahf
lret
je
ret
movsl
sbb
insb
add
cmc
in
addb
jns
push
movsl
fiadds
shlb
and
mov
or
mov
pop
into
pop
push
add
mov
inc
fwait
fs
adc
push
sbb
xor
test
call
inc
std
adc
or
call
addr16
addb
les
xchg
or
xlat
rol
call
leave
dec
pop
pusha
shrb
mov
and
push
or
or
mov
adc
rclb
push
mov
into
add
cwtl
movb
lret
or
loope
adc
add
push
mov
in
jo
fwait
call
lock
jmp
pop
sarb
sbb
mov
pusha
jb
add
loopne
jmp
pop
sbb
jmp
loope
mov
add
push
cs
add
jge
sbb
sub
or
lret
sbb
ret
jnp
push
or
lea
adc
xchg
or
pusha
loop
or
orl
mov
push
inc
bound
mov
outsl
icebp
ficompl
xchg
pop
data16
adc
ljmp
imulb
cmp
enter
sbbb
push
lods
stos
sbb
xchg
fstps
test
push
jmp
shlb
into
sbb
xchg
stos
mov
xchg
pop
pop
xchg
and
xor
loope
inc
clc
pop
inc
cmp
js
inc
xchg
js
or
mov
mov
adc
testl
mov
pop
inc
into
and
and
xor
dec
rolb
dec
pop
icebp
cmp
add
push
xor
mov
jae
ret
dec
pop
and
or
jecxz
xchg
pop
adc
xor
in
and
push
add
sbb
loopne
leave
mov
push
enter
mov
or
movsb
test
cmp
ljmp
or
push
add
dec
add
inc
hlt
nop
mov
hlt
inc
hlt
push
sbb
dec
sub
or
popa
cmc
jp
add
adc
mov
mov
xchg
lock
sub
jne
push
loope
pop
arpl
shlb
jle
jecxz
enter
subb
xchg
rol
insb
adc
adcb
ss
nop
adc
or
xchg
add
cmp
ljmp
popf
sbb
rcrb
fstpt
jo
mov
or
daa
add
push
loope
icebp
notb
scas
or
dec
mov
dec
push
or
je
andb
lret
sbb
and
insb
ss
leave
insl
mov
pop
mov
ret
fwait
les
clc
int3
push
jno
mov
or
xor
adc
js
hlt
inc
clc
add
lods
sub
mov
repnz
roll
ret
cmp
into
mov
mov
push
test
push
js
mov
rolb
or
aaa
je
lock
push
test
add
push
leave
lcall
xchg
hlt
lret
aam
js
or
xchg
int
bound
inc
iret
xchg
dec
mov
pop
inc
xchg
pop
ss
sar
xchg
ret
jbe
ja
mov
xor
xlat
add
jb
and
aaa
inc
lret
push
mov
xor
fnstenv
mov
inc
pop
xorl
and
push
ret
loopne
lahf
add
jnp
mov
or
popa
or
addr16
cld
ret
sub
fs
cmpsl
mov
jle
js
and
jo
clc
mov
jmp
pushf
gs
xor
rol
add
out
adc
push
push
test
mov
cmp
xchg
divb
add
jmp
jg
lods
addl
mov
xor
mov
and
clc
sbb
adc
mov
inc
pop
data16
push
push
and
pop
cmp
sbb
push
xchg
mov
xor
ljmp
sbb
add
inc
jno
js
cmp
or
test
dec
inc
test
mov
leave
sarl
loopne
add
adc
xor
push
mov
pop
aaa
hlt
leave
sahf
lock
sar
lock
ss
mov
inc
mov
repnz
inc
rcrb
pop
jp
cmpl
ljmp
sbb
out
rclb
jo
xor
push
mov
sbb
mov
inc
mov
mov
inc
add
rcll
ret
push
in
rcrb
aaa
mov
jecxz
xchg
bound
or
pushf
gs
jb
lcall
sub
shlb
cmp
sbb
repnz
add
mov
mov
aaa
sbb
xor
je
inc
adc
lret
xor
lock
jp
and
xchg
test
sub
clc
loope
mov
mov
outsl
js
xor
and
inc
or
ss
or
cmpsl
add
ljmp
sbb
imul
adc
adc
sub
dec
adcl
pop
pop
sbb
pop
test
push
inc
sbb
scas
jl
mov
rolb
pop
add
sbb
bound
adc
lret
test
xor
pusha
mov
dec
add
add
loopne
movsb
mov
adc
mov
cmp
mov
rcll
test
and
dec
jo
insb
add
cmp
test
adc
jns
mov
jns
pop
or
jnp
popl
jbe
cwtl
fptan
jns
rolb
sbb
and
sbb
cltd
mov
push
jo
mov
mov
xchg
dec
pop
mov
pop
xchg
xorb
xchg
sti
xor
sarw
shll
popa
cmp
mov
dec
test
je
orl
adc
push
add
pop
les
push
push
sbb
loope
adc
jmp
xchg
or
lock
mov
mov
sbb
sbb
cmp
pop
xchg
cmpb
cmp
clc
or
pop
imul
daa
shld
in
test
pop
adc
adc
mov
pop
insb
mov
jo
xor
inc
mov
pop
out
inc
inc
mov
or
aam
and
or
or
inc
pop
lret
cmp
divb
inc
xchg
dec
leave
daa
and
jno
sub
cmp
push
sti
js
sbb
leave
adcb
testl
test
jno,pn
test
ror
mov
add
xor
mov
jp
and
aaa
pop
xchg
adc
add
loopne
ds
ljmp
imul
inc
call
gs
mov
pop
and
test
mov
and
loop
lods
pop
popf
and
cli
scas
add
loope
jae
add
fld
mov
out
dec
dec
es
pushf
mov
scas
stos
rcrl
jle
fistpll
lods
fimuls
xor
dec
in
lock
cltd
sub
add
testb
hlt
js
xor
inc
cmpsb
shlb
push
and
cmp
push
inc
and
add
shlb
daa
loopne
or
cmp
iret
cld
adc
pop
les
mov
mov
outsb
lea
shlb
pop
dec
push
push
inc
push
dec
ficoml
mov
dec
mov
xor
ds
ljmp
adc
fildl
psrld
rcl
roll
mov
and
cmp
sub
sti
push
dec
mov
sub
add
rclb
adc
rorb
mov
xchg
xor
movsl
das
add
and
cmpsl
push
mov
or
xor
sbb
and
mov
xchg
loope
daa
lods
inc
lods
rol
sub
rorl
and
in
xor
dec
mov
push
dec
push
inc
enter
inc
mov
adc
fcmovnb
addb
or
or
jg
test
popa
jns
addr16
js
mov
adc
add
push
push
adc
fadds
mov
jbe
push
push
mov
js
jbe
mov
aam
lea
mov
xor
add
mov
mov
icebp
push
addr16
in
jne
push
jnp
xchg
test
daa
icebp
ret
jbe
shlb
es
and
dec
ret
icebp
pop
mov
fwait
lahf
pop
pop
add
cli
and
call
jb
adc
mov
sbb
or
call
popw
mov
and
test
test
ret
xorl
pusha
sub
clc
cmc
gs
dec
pop
ror
sub
add
dec
sbb
jmp
xor
add
rcrb
jp
inc
or
test
rclb
enter
push
shr
les
sbb
jb
dec
sarb
adc
je
rcrl
inc
add
das
add
sbb
push
or
or
jne
pusha
enter
or
cwtl
stos
rclb
push
xchg
es
mov
int
rolb
push
push
rcrb
ret
aam
add
roll
call
int3
xor
adc
push
adc
xchg
sbb
rcrb
mov
rol
in
in
loope
jle
out
or
jo
andb
inc
cmpsl
ror
loope
xor
or
dec
cmp
xor
mov
add
or
xchg
test
mov
sbb
mov
rcrl
test
jecxz
call
push
mov
nop
arpl
xor
mov
ret
in
inc
jnp
or
adc
cs
push
xchg
mov
scas
jne
push
sbb
xor
imul
shlb
int
in
pop
addr16
mov
xor
sbb
push
add
push
scas
mulb
dec
sbb
lods
ret
add
xor
shl
add
mov
rclb
push
repnz
adc
cmp
sbb
aam
popa
ret
mov
or
lods
icebp
xor
push
test
lret
xor
sbb
or
sub
lds
dec
mov
fs
gs
adc
scas
les
push
sub
mov
xor
dec
push
lock
ret
aaa
adc
inc
mov
mov
push
stos
push
dec
mov
out
stos
es
xchg
mov
stc
add
mov
mov
ja
call
addl
push
std
loopne
mov
lock
aam
test
aas
inc
xor
inc
dec
sub
mov
mov
cmpl
xor
std
div
pop
add
sbb
daa
sbb
adc
add
sub
in
enter
xor
and
out
aad
add
rcrl
add
ror
cmp
mov
rclb
cld
add
xorl
jp
fidivrl
andb
pop
and
xchg
shr
sub
pop
loop
jo
pop
addr16
ss
add
mov
into
pop
jecxz
xor
rorl
imul
sbb
addb
scas
dec
xor
jl
sub
icebp
imul
mov
adc
push
imul
push
pop
lods
cmp
or
faddp
mov
and
ret
lock
fs
xchg
inc
out
pop
stc
dec
sub
dec
mov
adc
sbb
jmp
call
cmc
add
rorb
and
cmp
mov
mov
test
int3
dec
mov
or
test
adcb
daa
sti
cmp
bsf
xchg
mov
pop
dec
aas
into
enter
pushf
sub
stc
cmp
sbb
fiadds
xor
cltd
arpl
andb
es
leave
pop
mov
mov
add
xchg
mov
mov
push
cmp
push
arpl
pop
pop
test
loop
shr
sbb
mov
pop
rcrl
data16
mov
jmp
mov
movsb
xchg
dec
push
add
and
add
dec
enter
xor
mov
push
inc
xor
ret
xorb
fimuls
ljmp
push
jp
rcl
insb
sbb
cmp
and
or
movsb
movsl
push
dec
sbb
call
add
dec
push
dec
lret
pusha
push
pop
mov
mov
adc
sub
mov
adc
sub
fadds
sbb
dec
inc
leave
xlat
or
sbb
or
popf
push
xchg
stos
xor
adc
sbb
cmpsb
js
and
adc
push
pop
rol
aad
xchg
adc
dec
dec
xor
and
ret
aad
sub
lea
push
mov
outsl
int3
pop
lcall
cmc
add
shrl
pusha
add
lods
lock
xchg
xchg
xor
dec
lea
subb
xor
clc
mov
push
or
stc
adc
icebp
test
push
jp
jle
pop
femms
das
inc
test
mov
xchg
xor
sub
out
dec
orb
sbb
pop
pusha
mov
xchg
push
aam
lcall
test
or
adc
xor
xor
test
xor
xchg
xchg
jp
mov
push
repnz
ret
fidivs
adc
cmp
mov
cmp
outsl
dec
fcoml
pop
pop
test
dec
sbb
inc
mov
enter
ret
push
add
sub
out
shr
add
mov
push
movsl
leave
hlt
pop
inc
pop
das
push
push
or
lock
or
in
lock
pop
mov
dec
imul
arpl
jmp
and
lock
dec
mov
pusha
shrb
rolb
and
gs
jo
and
xor
arpl
pop
adc
lret
push
add
bound
leave
in
notb
sbb
and
xlat
loopne
test
cmpb
add
sub
outsl
sbb
test
push
orb
movsb
mov
dec
adc
call
xchg
inc
adc
ret
ret
jae
out
and
mov
movsl
ljmp
rolb
mov
pop
enter
mov
add
cmove
mov
pusha
or
mov
aad
mov
icebp
imul
enter
jmp
push
jl
lock
pop
dec
or
push
or
xchg
lret
mov
les
mov
fs
inc
mov
push
sbb
js
int3
rcrb
and
fs
sbb
dec
loop
xchg
rol
mov
roll
sub
testl
ljmp
adc
test
push
ss
shlb
pop
jp
push
sarb
adc
xchg
xchg
inc
lret
call
xor
mov
icebp
js
ret
and
addb
xor
cmovp
inc
push
pop
test
dec
movsl
xchg
or
xchg
mov
movsb
and
enter
dec
js
add
adc
push
or
sbb
sub
std
push
leave
push
push
mov
push
sub
das
xor
inc
cmp
push
leave
int
pop
adc
rcll
adc
montmul
cmpsb
inc
roll
xor
or
push
fsubrl
cmp
in
pushf
sbb
sbb
xchg
clc
sbb
xchg
aam
xor
ret
add
pop
mov
xor
and
mov
outsb
sbb
adc
xchg
or
fisubrs
shlb
lods
mov
cmc
paddq
jno
lret
push
push
jge
rcl
loop
daa
int3
js
es
or
pop
cmp
punpckhdq
leave
leave
hlt
les
xchg
mov
pop
inc
js
shlb
je
ljmp
and
ret
icebp
lcall
xor
orb
shl
pusha
je
jb
push
add
and
add
test
add
je
clc
rol
xchg
or
mov
or
int
push
test
xor
imul
leave
push
mov
ds
call
pop
rcrb
js
test
enter
or
mov
push
jge
add
popa
bound
fcoml
xor
inc
clc
add
adc
xor
cmp
push
mov
leave
sub
sub
ja
popa
nop
xlat
repz
sbb
leave
cli
test
icebp
push
adc
fldenv
push
cmp
jmp
push
push
push
or
pop
xchg
sbb
xor
fs
ljmp
or
and
inc
xchg
add
push
bound
adc
xchg
sub
dec
aam
mov
rcrb
sbb
ss
rcl
inc
shrb
lret
mov
sahf
loop
lods
sarl
add
les
arpl
inc
pop
jo
pop
cmc
sub
dec
scas
push
pop
outsl
add
inc
loopne
outsl
inc
filds
cmp
lret
cmp
decl
insb
push
les
into
les
and
pusha
or
dec
cmp
rol
sub
ficoml
and
mov
push
or
mov
pop
pop
inc
adc
xor
ffree
fadds
fs
dec
and
aam
add
sbb
out
xor
aad
inc
enter
sbb
push
add
bound
das
sbb
rorb
fadds
pop
daa
shr
mov
add
sub
jmp
push
icebp
mov
les
rclb
pop
aam
icebp
or
inc
std
xchg
and
inc
call
xor
mov
scas
sbb
pop
pushf
pop
scas
inc
and
lret
ss
or
rolb
push
loopnew
stos
push
jo
test
mov
inc
jp
mov
push
or
iret
cmpsl
dec
por
push
pop
inc
test
cmp
add
adc
or
clc
cmp
push
sbb
dec
or
cs
ljmp
loopne
pop
push
popl
push
dec
mov
das
sub
jne
leave
mov
mov
mov
xor
insl
jne
insb
pcmpgtb
sbb
inc
add
leave
enter
jmp
cmp
or
push
outsl
or
sub
dec
sbb
ficomps
scas
out
mov
scas
adc
ret
jl
repz
pop
int3
mov
add
imul
ljmp
push
and
or
les
inc
mov
pop
aam
roll
ljmp
cmp
es
inc
push
scas
dec
lret
subb
push
xlat
and
fmuls
imul
xchg
lret
loope
jp
call
sub
mov
shll
sbb
shll
popa
add
xchg
dec
inc
iret
adc
inc
mov
sub
jmp
sub
ror
shlb
cmp
xor
pop
adc
and
cmp
and
dec
or
push
out
mov
cmp
sub
push
and
ds
loopne
cmp
cld
adc
inc
jmp
es
push
rolb
imul
or
movsl
rol
js
js
jl
and
lea
xor
jb
inc
dec
bound
xor
loop
in
mov
ds
sub
inc
loope
mov
loope
mov
outsb
inc
sub
and
ret
dec
mov
mov
insl
mov
loopne
pop
add
sub
ds
cmp
or
xor
mov
leave
push
lea
imul
mov
lods
je
mov
add
adc
lods
call
insl
or
sbb
data16
repz
pop
mov
adc
std
xchg
shlb
add
aam
xor
getsec
pop
andb
test
subb
add
mov
cmp
jecxz
add
push
jne
repz
pop
and
adc
cmp
in
subb
idivb
xchg
repnz
mov
adc
adc
xor
adc
dec
cmp
xor
adc
adc
scas
mov
decl
fstpl
lock
inc
lock
sahf
scas
sbb
rorb
adc
sub
das
and
add
or
clc
ss
pop
adc
enter
cld
ret
mov
mov
mov
and
jbe
add
push
or
orb
dec
push
jne
dec
mov
dec
xchg
cmp
loopne
testb
and
repnz
imul
or
ret
pop
inc
rcl
pop
pop
mov
ret
test
insb
sub
pushf
add
leave
adc
subl
and
add
inc
mov
add
andb
out
xchg
stos
mov
push
pop
loopne
jno
inc
push
mov
xchg
cli
pop
push
jecxz
jbe
push
inc
push
lods
mov
cmp
xchg
sbbl
insb
ret
push
shlb
and
movsb
push
test
icebp
and
push
test
ret
add
jmp
sub
loop
movsb
sbb
sub
les
push
fcomps
mov
adc
inc
lock
mov
add
cmp
or
roll
and
dec
xchg
inc
mov
int
sbb
dec
lea
lret
js
jmp
daa
sub
in
pop
sbbb
push
xor
push
pop
adc
push
jmp
add
popf
div
sub
inc
add
test
jo
adc
push
lret
les
cmpsb
mov
inc
outsb
sbb
xor
add
xchg
add
call
dec
xor
jne
out
rclb
and
push
mov
std
es
sbb
push
fucomi
xchg
push
pushf
or
pop
inc
in
rclb
cltd
or
dec
dec
push
pop
mov
xchg
shl
add
cwtl
cld
jecxz
loopne
pop
jmp
pop
out
pop
je
pop
and
pusha
imul
ret
or
sbb
pushf
mov
repnz
pop
and
daa
and
sub
inc
bound
and
les
into
cmp
adc
sbb
push
cwtl
shl
inc
sbb
or
pop
jmp
xchg
cmp
mov
jmp
jbe
pop
add
mov
hlt
pop
fcoms
jle
hlt
push
mov
jns
je
mov
je
lods
dec
mov
add
sub
enter
cwtl
push
mov
sbb
ret
pop
cmp
jmp
ljmp
loopne
and
and
or
push
mov
fs
rolb
lock
addb
sub
xchg
add
sub
mov
enter
test
cmp
mov
sbb
mov
rorl
sti
sub
sub
pop
and
adc
and
nop
adc
sbb
ror
jl
inc
ror
les
add
sbb
add
adc
push
adc
leave
pushf
test
inc
mov
push
pop
cli
mov
adc
and
rolb
push
xor
addr16
mov
call
cli
cmp
or
loop
les
clc
push
movsl
mov
nop
sbb
fistpll
push
shrl
mov
add
push
xchg
mov
shrb
leave
mov
js
jns
xor
jmp
fucomi
es
into
lock
std
dec
push
or
fcoml
popa
mov
push
push
js
in
ss
mov
lods
ja
or
xchg
xor
jp
sbbb
jae
orb
mov
dec
or
cltd
or
rol
xchg
les
lods
dec
xchg
sub
dec
mov
or
fcom
jo
xor
outsb
lret
sub
icebp
clc
js
jae
xor
xchg
out
sarl
xchg
or
cmpsb
sbb
pop
pop
inc
mov
jb
pop
les
pop
js
scas
jge
mov
inc
sbb
cwtl
or
cs
aad
rolb
and
js
mov
repz
pop
shlb
and
leave
enter
rcll
jge
push
cmp
xchg
mov
call
stos
add
lock
adc
jp
mov
or
hlt
and
mov
cmp
mov
adc
rclb
sub
push
out
dec
and
lcall
pop
scas
mov
add
cmp
inc
nop
xlat
or
push
arpl
inc
mov
sub
sahf
cwtl
pop
mov
sbb
mov
push
lock
vprotw
adc
or
sbb
mov
adc
add
sbb
push
inc
xchg
jmp
lret
cmp
adc
stc
icebp
inc
ret
or
pop
xchg
cmp
in
mov
dec
stos
notb
nop
add
sahf
test
push
add
test
inc
add
movb
cmp
jno
sti
rorb
or
inc
call
cmpsl
pop
cmp
sub
pop
das
arpl
icebp
outsb
adcb
imulb
call
aad
xor
shrb
fisttpl
aaa
jo
loop
movsb
or
cmc
mov
or
loopne
push
push
out
adc
push
pop
push
sub
cmc
xchg
push
cs
push
jns
sbb
dec
or
movsl
mov
cmpsl
dec
ljmp
mov
jbe
pop
push
push
mov
dec
adc
add
stos
sbb
add
ret
mov
fmull
dec
pop
cmpsb
pop
ror
inc
loop
add
or
test
sub
sahf
leave
leave
sbb
pusha
mov
in
into
rclb
test
fnstsw
cmp
mov
fst
sbb
push
loope
xchg
fadds
lret
mov
sub
cltd
shr
bound
enter
bsf
inc
sbb
or
mov
inc
lcall
mov
add
sbb
lret
nop
inc
pop
das
outsb
add
jg
sub
mov
inc
outsl
stos
into
xchg
or
inc
into
sbb
pop
ret
pop
sbb
pusha
and
sub
xor
add
mov
push
adc
add
mov
lods
roll
bound
js
push
inc
jle
aam
rorb
push
js
dec
pushf
and
fadds
pushf
test
in
adcl
mov
les
lods
add
loope
shl
xor
cmp
add
push
lahf
es
sbb
jne
jecxz
mov
mov
xor
dec
cwtl
push
jb
outsl
jmp
jae
sub
xchg
imul
xchg
push
sbb
in
rolb
ret
adc
lock
testl
test
adc
inc
addb
sub
cltd
ret
rolb
cmp
jno
jg
inc
loopne
sbb
xchg
lock
dec
pop
mov
enter
in
call
xchg
mov
and
mov
fwait
in
jno
cmpsb
push
or
adc
shlb
mov
or
out
cltd
mov
adc
pusha
xor
push
stos
or
jl
adc
push
mov
mov
xchg
mov
adc
or
and
enter
sbb
and
movsb
popl
insl
push
hlt
xor
and
ret
xchg
add
mov
loope
mov
jno
pop
xor
pushf
setbe
rclb
gs
clc
dec
sub
adc
add
cwtl
rcrl
mov
mov
jle
add
or
enter
inc
and
pop
add
pop
xor
xchg
daa
imull
cmp
add
xor
cmp
sbb
push
and
push
xorl
inc
or
and
fwait
push
mull
jae
lock
pop
movsb
or
sub
add
outsl
cmpsb
addb
arpl
xchg
push
mov
insb
sbb
into
in
pop
lock
rcll
push
in
push
xor
adc
xchg
or
aad
int3
push
rol
sub
adc
adc
mov
jnp
push
cmp
dec
or
push
xor
adc
rolb
xchg
add
cmp
push
and
sub
xorb
inc
cmp
push
insl
and
cmp
dec
cmpl
jb
cmp
or
sbb
sbb
dec
pop
add
push
inc
sub
dec
adc
bound
adc
adc
add
inc
xor
cli
add
push
or
mov
ljmp
pop
and
xchg
cmp
pop
test
or
mov
addl
push
ret
sbb
fcmovnbe
push
sbb
push
inc
sub
sbb
int3
mov
add
inc
loop
mov
fidivl
add
andb
sbb
mov
pop
xchg
pushf
inc
add
andl
mov
xchg
inc
push
and
mov
mov
inc
mov
data16
adc
adc
bnd
xor
adc
or
add
sbb
jp
jo
xor
scas
test
xchg
add
aam
int
or
mov
xor
add
icebp
add
daa
mov
shll
xchg
sbb
into
xchg
add
call
cltd
xchg
aam
adc
lds
rcrb
cltd
adcb
lea
adc
xchg
bound
sbb
push
inc
mov
inc
in
push
add
inc
xor
loop
call
enter
dec
sub
mov
sbb
mov
sbb
cmp
pushf
test
add
orb
andb
arpl
test
cmp
movsb
dec
bound
imul
imul
or
adc
cwtl
hlt
or
orl
or
sbb
out
subb
dec
mov
jmp
jo
push
sbb
adc
ret
or
or
in
lods
je
jb
adc
xor
stc
fmuls
cmp
call
push
arpl
xchg
mov
add
push
jl
rcrl
or
scas
inc
mov
push
xor
hlt
xchg
pop
add
adc
sub
sbb
jae
jl
js
inc
add
or
loope
xchg
push
add
andb
int3
push
cmp
scas
stos
xchg
push
scas
leave
popa
add
and
dec
clc
or
push
or
cmp
mov
push
jle
addl
push
add
pop
inc
adc
or
mov
int
mov
addr16
push
inc
arpl
cmp
add
addb
xor
movsb
push
adcb
cmp
paddq
mov
sbb
push
jno
mov
orb
pop
mov
jno
pop
mov
mov
push
dec
shlb
in
mov
loop
add
inc
mov
ret
adc
add
xchg
jne
push
rcll
cmpb
or
add
shrb
or
jo
adc
outsl
sbb
in
mov
loop
adc
sub
aad
into
into
inc
or
hlt
mov
adc
add
gs
lods
mov
shl
sub
and
ret
shrb
roll
xor
push
mov
sbb
push
jl
cmp
test
cmp
push
jne
jl
andl
push
mov
add
adc
add
pop
scas
notb
test
in
ret
icebp
xor
pushf
lock
pop
or
lock
push
adc
and
sbb
or
popa
adc
adc
lahf
cmpsb
adc
pop
adc
xor
xor
or
pop
mov
add
xor
xchg
loopne
sbb
ss
dec
inc
subl
cmp
and
ret
sbb
mov
pop
or
cltd
add
je
mov
or
cmp
call
add
mov
insb
cwtl
sub
xchg
or
xchg
mov
jg
mov
xchg
pop
push
cmp
xor
cmpsb
icebp
jno
xchg
mov
jb
pop
dec
into
mov
popa
xchg
push
sbb
and
mov
fcoms
enter
mov
stc
mov
cmp
and
push
pushf
mov
xor
mov
xor
adcl
xchg
sub
xor
daa
mov
shll
sbb
or
je
sub
mov
cld
or
sub
push
arpl
or
dec
es
mov
rolb
xor
cmc
jb
cmp
mov
out
mov
mov
mov
push
push
push
push
pop
adcb
cli
shlb
mov
inc
mov
inc
insb
or
es
push
mov
jo
data16
push
loopne
push
imul
and
rclb
shr
push
sbb
and
push
fisttpll
ficompl
sbb
pushf
sbbb
xchg
adc
xor
ret
fldcw
loope
jo
gs
fists
push
lcall
sbb
faddl
pop
sub
les
mov
sbb
mov
mov
fstpt
mov
sub
daa
loopne
pushf
inc
xchg
test
daa
dec
jecxz
les
in
xor
addl
xchg
popa
ret
lahf
mov
jge
rclb
js
movsl
enter
push
inc
mov
sarb
hlt
into
hlt
pop
sbb
sub
push
add
add
test
mov
cwtl
push
adc
dec
adc
call
add
mov
inc
sub
inc
jge
fisubrl
lods
push
mov
sbb
cmp
test
push
cmp
pop
xor
mov
mov
add
sbb
out
add
xchg
fcom
cmp
daa
xor
mov
mov
sbb
ror
nop
pop
in
and
test
mov
mov
mov
or
test
loop
mov
imulb
or
rorb
mov
push
jg
add
std
pusha
sbb
inc
lcall
in
into
push
out
loopne
sbb
notb
xchg
pop
adcb
das
dec
cmovs
ret
inc
push
enter
add
or
push
in
push
or
jp
sub
arpl
aas
ds
and
add
insb
pop
cmp
push
adc
push
outsb
or
rolb
dec
outsb
popf
fisubs
jmp
cs
xchg
push
or
xor
sbb
sub
or
icebp
mov
add
repnz
and
imul
jl
adc
push
mov
inc
xchg
or
aaa
inc
loope
mov
stc
or
and
popa
shlb
xchg
xorb
or
popa
add
test
hlt
inc
cmp
add
adcl
and
lods
jmp
xchg
fiadds
jno
xorl
es
stc
insb
jo
push
es
push
subl
sub
cmp
mov
and
mov
sub
or
add
push
or
pop
je
inc
and
push
ret
aam
sbb
fcompl
xor
push
and
push
sbb
fstpt
cmp
loope
js
insl
adc
or
xor
les
out
push
mov
pushf
add
mov
enter
or
lods
and
enter
es
or
fsubrs
push
dec
xchg
sbb
js
adc
je
test
or
cmp
loop
clc
pop
jns
dec
push
fldl
inc
repnz
daa
adc
or
test
xor
loopne
movb
mov
adc
icebp
nop
add
sbb
push
mov
jl
rcrb
lcall
mov
mov
les
aas
loope
xchg
xorb
cmpl
mov
inc
loopne
aaa
scas
subb
mov
rcrb
cmc
add
pop
cmp
cmpl
push
xchg
add
mov
and
sbb
arpl
or
adc
test
push
pop
mov
sub
or
adc
es
mov
cs
icebp
and
pop
hlt
loope
xor
aas
pop
and
or
xor
and
jae
lds
push
lock
cwtl
out
xorb
cmp
ljmp
ljmp
ret
outsl
lahf
add
lock
lret
cli
xorl
mov
lock
push
int3
dec
jp
fwait
loopne
xorl
inc
push
sub
mov
sbb
in
add
mov
sbb
push
sub
push
lock
and
add
stc
sbb
xor
cwtl
cmp
js
add
dec
fdiv
or
or
sbb
test
pop
lret
dec
pop
adc
call
rorb
loope
sbb
popa
popa
dec
add
insl
pushf
test
mov
mov
push
scas
mov
sub
bound
jl
enter
inc
pop
dec
shl
push
jae
pop
fisttpll
adc
push
mov
gs
or
daa
pusha
and
dec
xchg
cmp
and
ret
test
jmp
cmc
sbb
add
hlt
add
jmp
sbb
sub
rcrb
popa
xor
jno
push
push
rcll
sub
push
aam
dec
inc
jp
xchg
lea
sbb
cmp
lcall
std
xchg
fs
xor
sbb
daa
jne
pop
xor
stc
call
test
aam
and
stos
daa
sti
mov
adc
test
imul
push
cld
lea
imul
es
sbb
jecxz
cmp
mov
sub
push
dec
test
std
insb
cmp
pop
sbb
inc
sub
js
mov
lds
or
pop
sbb
dec
xchg
ret
inc
or
mov
sbb
bswap
xchg
cmpsb
xchg
mov
mov
push
dec
adc
mov
test
shll
or
es
dec
loope
add
sbbb
js
dec
adc
popa
sbb
jns
js
adc
into
jbe
stos
xor
mov
aam
fnstenv
and
pop
push
inc
fiaddl
jecxz
mov
ss
adc
call
mov
popa
pop
call
push
xchg
ret
test
adc
bound
adc
xchg
push
lret
xor
jo
and
inc
push
sub
dec
pusha
sbb
aaa
and
jmp
js
sbb
rclb
dec
xor
add
imul
mov
lock
rcrl
arpl
in
icebp
add
xchg
jle
rclb
xor
call
ss
test
push
sbb
test
movsl
xchg
push
cmpsb
mov
jecxz
push
cmp
mov
lods
lea
lret
and
roll
sbb
sbb
ret
into
xor
xor
test
andl
loope
fadds
fwait
call
gs
inc
clc
sub
sub
js
cmp
xchg
sbb
or
in
inc
aaa
pop
mov
or
inc
or
rcrb
add
int3
jle
add
sahf
add
xchg
mov
push
and
inc
ja
movsb
sbb
loop
sbb
push
shlb
nop
je
jecxz
pop
adc
inc
xchg
cs
popa
out
sbb
sarl
mov
push
loopne
loope
fs
sbb
inc
sbb
addb
xchg
mov
pop
dec
or
xchg
loopne
out
sbb
out
push
sub
inc
shll
out
sub
fs
inc
mov
adc
add
adcl
and
mov
sbb
push
movb
test
lock
rolb
bound
test
adc
inc
fdivl
push
rolb
outsb
in
adc
sbb
movl
adc
inc
or
or
sub
loop
jg
subl
call
jp
pop
mov
fadds
xor
in
or
icebp
xorb
xchg
sbb
or
pop
nop
and
xchg
mov
mov
adc
rorb
add
pushw
imul
xchg
push
or
adc
sbb
push
xchg
mov
cmpsl
sbb
test
and
adc
in
out
mov
insb
popf
sbb
cltd
sbb
loope
pusha
pusha
imull
and
xchg
and
xchg
sbb
or
push
mov
adc
pop
icebp
lock
add
xor
hlt
mov
pusha
sbb
add
lea
mov
loopne
cmpsb
pop
fidivl
sbb
cmp
pop
fstpl
pusha
mov
pop
rcrb
or
mov
call
jmp
xor
and
inc
push
jne
icebp
fs
inc
daa
sbb
add
fcompl
dec
xchg
push
mov
dec
xchg
popa
pop
mov
dec
sbb
mov
ja
jno
cs
mov
add
das
add
sub
les
xchg
fsincos
pop
outsl
mov
fcmovne
sub
icebp
cli
push
push
nop
mov
sbb
and
pop
xor
mov
cmpsl
jmp
and
ret
movsl
add
insb
sbb
test
rol
xor
push
mov
cmp
dec
push
leave
adcb
and
pop
adc
das
adc
and
test
mov
mov
mov
rcrb
out
popa
popa
rcrl
and
and
dec
sbbb
xor
icebp
fwait
rcll
sub
call
mov
sub
jo
jb
push
or
push
jmp
mov
rcll
rcrb
mov
and
pop
leave
or
clc
add
pusha
mov
fs
sbb
or
jo
stc
jbe
test
cmp
push
sbb
push
call
cmp
arpl
inc
punpckldq
xor
push
sub
sub
rolb
clc
or
movsb
mov
in
jae
push
xchg
xchg
adc
add
sar
add
push
es
clc
stos
xchg
mov
mov
je
js
add
add
and
mov
add
adc
lods
pusha
sbb
push
pop
sbb
mov
adc
ljmp
mov
jmp
xor
add
rcrb
jle
outsl
imul
and
ja
mov
roll
js
sbb
ret
add
xchg
mov
xchg
jle
enter
push
xchg
add
sub
aam
loopne
add
pusha
sub
arpl
pop
inc
clc
lds
shl
popa
push
mov
push
test
in
and
cmp
aas
ljmp
pop
xchg
sub
sub
fisubs
jmp
xchg
xor
enter
xchg
sbb
dec
in
jmp
cmp
adc
inc
js
push
mov
push
lea
xchg
xchg
test
mov
jmp
add
mov
or
mov
mov
push
push
or
pusha
jmp
sbb
pop
inc
leave
out
mov
aas
xchg
sahf
scas
lock
rclb
xor
or
xor
fs
cmp
imul
std
xor
and
imul
add
pop
mov
push
push
and
xor
jecxz
push
incl
in
inc
dec
adc
or
dec
push
orb
mov
cmpsb
lret
add
fisttpll
pusha
xchg
jno
mov
pop
inc
add
mov
test
sub
loop
cmp
mov
mov
xchg
adc
mov
sahf
test
test
ret
sarb
into
adcb
int
mov
addb
sbb
test
push
mov
adc
cmp
xor
jmp
ljmp
mov
rorb
pop
roll
mov
shll
sbbl
and
pop
inc
outsb
lcall
nop
pop
xorb
push
jp
sti
ss
pushf
lods
jne
sbb
mov
es
xor
lret
lea
lods
imul
clc
or
icebp
cmp
mov
add
mov
imul
sbb
and
jno
js
inc
add
movsb
orb
and
cmp
loopne
jl
mulb
loope
cmpsb
and
jo
lock
lods
das
ljmp
push
lods
sbb
nop
test
je
pop
or
outsb
cmpsl
xor
lods
je
mov
cwtl
or
shrl
inc
mov
adc
loopne
pop
push
aam
cmp
pop
xchg
dec
dec
or
movsb
jno
test
loopne
fs
shr
xchg
jp
aas
jo
mov
jmp
push
mov
jb
jae
ffreep
fwait
cmp
push
clc
dec
call
cmp
popa
cmp
inc
test
add
mov
mov
ds
out
filds
xchg
mov
inc
loope
out
pop
dec
loope
push
xchg
rorb
sub
jl
sbb
add
out
ljmp
fisubrl
ret
sbb
mov
sub
pusha
outsl
jmp
test
mov
sbb
dec
add
pusha
add
mov
jg
mov
movsb
sahf
lods
mov
jns
js
js
adc
dec
push
dec
lea
outsl
cmp
and
loope
call
xor
add
mov
pusha
xchg
push
ljmp
cwtl
cmp
pop
push
adc
add
pop
push
xchg
mov
or
add
es
xchg
xchg
lea
xchg
loopne
ret
insl
cltd
dec
pop
mov
ljmp
or
xor
cmp
js
repz
adc
fisubs
pop
cmp
lcall
nop
je
inc
sbb
loope
push
add
scas
mov
push
bound
mov
fdivrp
push
or
adc
sub
push
imul
nop
jp
push
jb
push
and
cmc
jmp
into
xor
das
inc
arpl
cmp
ret
or
sub
jno
push
push
daa
repnz
out
xor
mov
sub
sbb
ret
aaa
and
jle
add
sub
jle
mulb
mov
jno
fldenv
cmp
sbb
test
jns
mov
xor
mov
movb
jmp
and
jb
xchg
push
mov
jl
lcall
je
inc
add
lock
enter
xor
adc
clc
mov
fadd
xor
mov
xor
lock
sti
jmp
push
enter
push
stos
insl
push
mov
cmp
add
push
lea
rolb
sbb
into
pop
inc
inc
dec
test
dec
dec
inc
and
push
andb
ds
push
enter
or
jecxz
cmp
cmp
sbb
push
push
lock
pusha
imul
or
add
inc
addr16
xchg
jmp
gs
inc
or
mov
push
pop
leave
cmp
sbb
xor
sbb
insb
rorl
adc
scas
xor
add
inc
pop
je
into
xlat
ret
xchg
rolb
cld
lods
mov
xchg
adc
push
test
loop
js
adc
and
add
mov
ffree
enter
sub
sbb
into
cli
adc
xchg
xor
inc
pop
fistpll
out
mov
add
mov
enter
inc
mov
sbb
push
insb
in
push
add
sbb
push
jno
push
nop
push
and
nop
or
test
popf
add
dec
push
inc
cmpsl
mov
and
cli
lahf
cmp
sub
or
mov
lods
mov
test
mov
xchg
inc
sbbl
mov
mov
das
adc
cli
mov
and
mov
das
sbb
xor
sub
inc
push
or
add
add
ljmp
pushf
sub
movb
adc
stos
or
rcl
mov
and
dec
insb
ret
cmp
ds
jo
out
adc
adc
jbe
push
fadd
adc
addl
mov
testb
shl
inc
or
adc
movsb
out
insb
and
mov
adc
clc
loop
push
and
dec
jbe
dec
pop
mov
test
test
movl
sbb
jge
mov
adc
daa
dec
pusha
sub
xchg
ret
add
lock
lods
pop
and
das
jb
rorl
popl
push
lea
adc
add
sbb
xor
andb
push
icebp
inc
popa
shll
test
add
pop
jp
jmp
add
js
popa
and
shrb
pop
daa
sbb
mov
add
les
fnstenv
mov
cmc
dec
pop
mov
cmp
mov
inc
fidivl
into
cwtl
ret
enter
test
or
test
ds
push
add
out
mov
rcrl
pushf
xchg
sahf
pushf
ror
add
bound
iret
mov
cld
test
psrlq
adc
cs
inc
loopne
mov
sub
or
push
fcmovb
jo
sahf
xchg
mov
pop
pop
xor
pop
cmp
outsl
ret
insb
sbb
jmp
mov
bound
call
adc
notb
xor
push
fs
push
loopne
or
sbb
decb
ret
aad
lock
and
xor
sbb
in
mov
pop
mov
addr16
jno
inc
mov
mov
or
or
dec
xchg
loopne
mov
rcrb
pop
sub
or
ret
xor
stos
and
addr16
push
push
inc
add
xor
xchg
rolb
pop
shll
js
push
stos
xor
movsl
mov
xor
loop,pn
pop
add
inc
lahf
addb
jne
jecxz
push
pop
cmp
add
sbb
ds
sub
cs
vphaddbw
rorl
adc
lea
je
je
sbb
adc
add
mov
jmp
fcmovb
mov
aam
das
adc
adc
into
sbb
rclb
idivl
sbb
enter
ljmp
jb
mov
lock
ja
push
push
sub
fcmovb
es
push
xchg
sbb
or
or
pop
das
mov
adc
sbb
loop
push
cmp
dec
jo
jge
outsb
sbb
outsl
inc
sbbl
testb
ss
out
dec
sbb
adc
lods
sbb
lods
stc
or
out
dec
inc
loope
cwtl
fsubrs
inc
pop
sub
icebp
es
enter
lods
sub
popl
rorl
sahf
and
add
pusha
or
or
pop
push
fcmove
and
or
mov
and
add
sub
loopne
cmpb
xchg
clc
and
sbb
or
jmp
dec
and
lock
mov
out
or
out
rorl
sahf
adc
js
imul
push
icebp
pop
movsl
or
push
sub
inc
add
rcrl
xchg
adc
add
fadds
xchg
push
insb
dec
movsl
and
mov
push
mov
mov
xchg
scas
adc
or
add
push
add
cmpsl
mov
mov
push
cli
daa
or
add
and
js
arpl
cmc
ret
jb
add
lds
js
sbb
adc
cld
mov
in
inc
mov
call
add
popf
mov
sbb
scas
jle
pusha
cwtl
andb
les
add
sbb
add
ret
push
pop
es
pop
repnz
fcmovne
sub
push
push
sub
push
inc
outsb
cmp
mov
jo
sub
jbe
fmul
add
and
iret
cmpb
cs
jo
mov
movb
rclb
and
je
xchg
cmpb
jae
aaa
mov
rcr
andb
movsl
sub
mov
lds
je
add
cmp
mov
cmp
and
inc
ret
xor
cmp
add
jmp
test
and
scas
sub
orb
add
fidivrl
mov
fsubrl
pop
jp
lret
dec
dec
loope
mov
push
nop
pop
outsb
adc
jnp
cwtl
pop
sub
sbb
sar
jo
call
jge
lds
xor
mov
inc
mov
sbb
imul
mov
rorb
test
in
and
aam
gs
jmp
add
and
fcompl
outsl
or
add
adcb
push
setp
repz
fisubl
push
loop
sbb
dec
cli
rolb
mov
daa
sbb
and
movsb
fadds
outsl
ljmp
es
dec
push
push
and
repnz
repnz
jge
in
repnz
mov
shll
or
jbe
dec
clc
mov
dec
lcall
test
data16
dec
or
pop
es
gs
lds
or
add
sub
fs
pop
inc
shlb
shrb
dec
mov
mov
mov
add
pop
push
xchg
in
fcmovnbe
adc
push
loopne
rorb
pop
or
add
mov
sti
pop
outsl
stos
pop
ds
push
xor
or
into
aam
push
je
loop
mov
sbb
popf
lods
aas
cmpsb
sbb
lock
lahf
movsb
loopne
cmp
inc
sub
and
mov
jge
pusha
inc
add
add
nop
mov
outsb
mov
adc
fdivp
cmp
mov
inc
call
adcb
and
sbbl
sbb
popa
gs
xchg
sub
pop
push
sub
adc
inc
dec
or
cli
dec
jp
pop
adc
and
pushf
add
mov
ss
mov
xor
test
test
cmp
xor
in
rorb
dec
and
fwait
rolb
in
ret
mov
mov
nop
or
inc
jnp
sub
dec
test
or
push
jecxz
test
or
sbb
push
dec
mov
js
mov
xor
mov
std
push
push
inc
jp
xor
dec
ret
xchg
dec
out
push
or
jns
add
stos
sarb
imul
loop
movsl
sub
or
outsl
cmp
pop
mov
mov
cmp
fists
js
inc
push
rol
xchg
push
mov
bound
rcr
cmp
push
cli
dec
popa
es
jp
dec
xchg
cli
mov
pop
pop
pop
pop
rol
sbb
hlt
pushf
push
adc
insl
in
mov
pop
sub
popf
sbbb
not
jmp
outsl
pushf
insl
push
pop
mov
popa
xchg
push
pushf
out
ss
rclb
add
xor
scas
mov
mov
xchg
mov
pop
rclb
bound
or
loop
andb
push
cli
pop
loopne
rorb
data16
arpl
test
sarb
stos
dec
dec
call
adc
or
or
rorl
sub
pop
sub
shll
mov
sub
pop
sbb
push
lods
clc
push
push
decl
add
dec
pusha
es
adc
jne
add
sbb
or
sbb
loop
clc
das
ret
add
js
push
push
leave
loop
xor
adc
xchg
pop
adc
inc
inc
dec
jo
push
icebp
int3
xor
mov
fsubrl
rclb
icebp
push
das
sbb
movsl
mov
mov
mov
movsb
popa
add
stos
cmp
sub
xor
push
jbe
stos
xor
or
arpl
mov
or
dec
mov
dec
dec
and
mov
sbb
pop
xchg
clc
adc
dec
rcll
ret
dec
and
sub
mov
push
fcompl
jmp
adc
sub
push
repz
mov
or
add
mov
rcll
jnp
dec
fsubl
iret
sub
rclb
sbb
add
sbb
lahf
nop
popa
mov
ret
and
xchg
adc
xchg
mov
xorb
js
aam
add
repnz
and
adc
or
lret
or
out
dec
fwait
inc
mov
push
out
add
sub
or
loope
dec
pop
les
push
mov
adc
lods
and
jne
add
pop
sub
jmp
push
shr
icebp
inc
jmp
movsl
test
shl
notb
xor
scas
cs
loope
enter
or
cmp
inc
push
pusha
adc
push
xchg
sbb
sbb
xchg
cli
nop
xor
dec
xor
add
movsb
aam
mov
pop
pop
enter
or
pop
xor
lret
lea
add
pop
or
nop
sub
jo
dec
arpl
add
mov
fucomip
or
push
add
loopne
call
push
pop
mov
enter
dec
xor
mov
mov
nop
xchg
mov
pusha
lret
addb
add
aad
ret
gs
sbb
orb
int3
movb
imul
mov
sti
adc
test
push
loope
push
push
sbb
xorb
inc
xor
mov
jle,pt
decb
scas
jno
pusha
pop
push
jl
loope
mov
leave
mov
add
pop
movsb
xchg
dec
ret
dec
inc
inc
sub
mov
loop
mov
adc
jle
push
jns
scas
pop
adc
xlat
fst
andb
or
stos
add
inc
insb
sub
mov
add
nop
push
xor
into
stos
push
lods
cmp
jp
js
jle
imul
dec
ss
adc
or
in
xor
ret
int3
loopne
jp
push
adc
sbb
add
stos
cmc
push
fiadds
into
adc
fisubs
fsubrl
ror
xor
or
stos
mov
ret
sbb
pop
pop
inc
in
sub
mov
cmp
xchg
lock
lods
lock
pusha
xchg
es
icebp
dec
push
adcb
push
into
add
ljmp
jle
mov
stc
ljmp
jb
mov
sbb
repnz
ja
adc
loope
js
sbb
mov
and
rolb
xor
call
or
aam
arpl
imul
xchg
leave
sar
cmp
jp
arpl
push
in
hlt
add
sbb
stc
push
mov
clc
push
xchg
inc
xchg
sbb
add
fs
inc
or
sahf
lret
sub
adc
and
jbe
dec
inc
loopne
xchg
inc
or
mov
and
xchg
inc
push
xor
adc
push
xorl
push
dec
sbb
lods
sbb
add
sbb
mov
xor
xchg
jnp
or
push
cwtl
cmp
pop
rcrb
sbb
xchg
hlt
dec
mov
jno
pop
jl
icebp
lea
adc
or
pop
jmp
push
mov
das
adc
add
inc
xchg
xchg
rclb
xor
push
stos
addb
jmp
loopne
mov
cli
or
pushf
and
or
or
and
jo
xchg
mov
lods
adc
adc
cmp
dec
aaa
xor
add
enter
jb
sahf
or
jmp
pushf
movb
inc
jmp
mov
or
das
push
xor
dec
ljmp
sub
int
je
xchg
clc
lds
push
xor
pop
sbb
cmpsb
jle
sbb
call
arpl
adcl
or
mov
sbb
pushf
int
les
adc
adc
popa
aam
cmp
mov
mov
sbb
lds
icebp
pop
sbb
dec
or
leave
nop
les
seta
andb
inc
sub
out
lock
inc
iret
xchg
push
fisubl
xchg
dec
loop
rclb
popa
sbb
push
sbb
or
sbb
cwtl
adc
xor
call
sbb
popa
insl
pop
cmp
inc
inc
bound
roll
push
or
out
fidivrs
and
movsb
andl
and
imul
shrb
inc
daa
xor
xor
add
xchg
cwtl
mov
lods
dec
lods
lods
cmp
push
push
js
rcl
push
subl
push
ror
xchg
xchg
xor
inc
jl
sbb
lods
adc
jp
jmp
and
mov
pop
mov
das
into
sti
scas
sub
and
jo
jecxz
ret
rorb
lods
je
sbb
sub
and
rolb
pop
ss
adc
sbb
mov
add
inc
xchg
and
mov
loopne
cmpsl
or
iret
and
ret
sbb
add
or
shld
in
ss
add
into
add
and
add
movsb
adc
sbb
sub
mov
testb
fisttps
aas
dec
xorl
or
ret
or
mov
adc
out
ror
rcl
xchg
inc
push
jecxz
ret
cmp
ds
sahf
xchg
pushf
adc
xchg
push
and
sbb
movsb
ret
add
xchg
shr
clc
cmp
ss
nop
mov
test
std
mov
movsb
pop
inc
xor
xchg
mov
dec
push
xchg
and
ljmp
xchg
push
mov
xchg
or
cli
enter
dec
or
fsub
enter
add
jl
inc
inc
jae
enter
je
and
mov
add
push
les
mov
cld
subb
sbb
pop
jmp
xor
hlt
push
adc
push
aam
enter
push
daa
adc
pop
je
pop
sub
pop
lcall
sbb
sarl
mov
xchg
inc
leave
adc
xor
pop
into
arpl
daa
sbb
les
sbb
push
mov
lea
faddp
or
mov
icebp
xor
sub
push
and
stos
sub
adc
dec
js
std
inc
mov
pop
and
pop
stc
negb
les
rol
cwtl
add
add
dec
mov
loopne
xchg
jo
cs
push
popf
add
repz
adc
adc
jbe
xchg
shlb
push
fstpl
je
sbb
push
fisttpll
nop
lock
les
inc
or
inc
jp
into
and
push
js
xor
jle
push
pop
sbb
jg
jp
loopne
cmp
pop
mov
sub
xor
andl
int
dec
ret
dec
repnz
adcl
mov
ret
pop
push
outsb
xor
adc
lods
adc
xchg
xor
es
scas
adc
pushf
or
arpl
xchg
add
inc
ret
push
int
add
cld
xchg
sbb
mov
loopne
adc
out
inc
das
outsb
adc
nop
lods
and
popl
jg
push
dec
insl
out
or
call
xchg
adc
cwtl
jb
adc
sbb
inc
sbb
addl
sti
pop
and
sbb
sbb
fs
xchg
cmp
push
add
call
push
push
movsb
mov
pop
pop
jecxz
ss
mov
imul
mov
ja
push
or
pop
jmp
mov
test
movsb
adc
dec
jmp
sub
sub
jne
sbb
dec
mov
aaa
sub
xchg
mov
push
mov
xchg
cmpsb
push
pop
or
inc
push
or
ret
cli
mov
pop
dec
inc
mov
cmp
push
cmp
mov
loope
cmp
out
ret
scas
add
xor
pop
loopne
add
xor
sbb
je
push
xchg
movsb
jp
lock
sub
lock
into
mulps
or
mov
add
lret
rcr
inc
push
popa
inc
orb
into
xchg
into
cmp
jbe
gs
mov
loope
hlt
cmpsl
pop
je
mov
and
or
cmp
jo
in
add
je
cli
mov
xchg
push
and
and
jo
mov
pushf
add
insl
pop
leave
lods
inc
cmp
out
sbbl
sub
movsl
orb
subl
dec
and
mov
inc
bswap
or
cmc
sbb
mov
inc
pop
mov
pushf
test
lods
adc
adc
or
and
lock
call
cmp
and
jne
movsb
rol
adc
lock
jmp
and
and
rcll
adc
fwait
leave
pushf
or
test
es
mov
mov
clc
sub
inc
arpl
jno
xor
xchg
add
mov
pop
cmp
xchg
add
push
sbb
cmp
mov
mov
lods
inc
jge
push
or
inc
mov
and
push
push
test
sbbl
fsubrl
pop
ret
inc
jp
stc
adc
sbbb
outsb
cmp
pop
mov
add
add
lock
jno
adc
xor
mov
sbb
fwait
lock
mov
ds
xchg
pop
ret
sbb
lret
push
cmpsl
and
cs
loope
xchg
ja
xchg
ljmp
jge
pop
fidivrs
mov
push
sbb
push
adc
scas
int
iret
adc
jo
xchg
jle
mov
or
pop
iret
cmpsb
push
add
test
sbb
mov
cmc
cld
push
or
fldenv
sub
ret
mov
xchg
loop
mov
subb
mov
mov
pop
pop
out
in
lods
mov
test
or
xchg
and
cmp
add
paddusb
call
pop
xchg
dec
add
pop
mov
bound
lret
pop
shrl
push
mov
dec
hlt
ret
negb
pop
loope
sub
push
sarb
dec
lods
dec
push
dec
or
mov
push
mov
add
push
movb
mov
push
in
and
cmp
mov
cmp
add
mov
jne
sarb
std
aaa
or
or
int
ret
mov
fsub
bound
xchg
mov
and
cld
sub
mov
adc
jo
enter
jmp
je
mov
popa
add
cwtl
stos
and
aad
jno
rol
sub
test
xor
cmp
push
rcr
mov
xchg
fnstcw
jp
insb
cmp
inc
loope
stos
jnp
add
adc
je
add
call
popf
sub
insb
adc
jno
and
je
das
jmp
add
add
lods
movlps
push
pop
jmp
pop
dec
cmp
dec
scas
mov
adc
inc
mov
xchg
pop
fld
adc
stos
rorb
pop
jno
call
xchg
fsts
leave
pop
mov
sahf
cmp
testb
add
mov
rcl
pop
daa
movsl
inc
sub
mov
mov
sti
cmpsb
xchg
fs
aam
fsts
fists
rol
ds
mov
or
andb
xchg
sbb
icebp
call
inc
pop
push
dec
xchg
cmc
je
rolb
jl
inc
xchg
pop
mov
add
or
or
cmp
ljmp
dec
pusha
aas
adc
ret
push
cmp
movsb
rcrl
fwait
adc
popf
ds
cmp
or
lcall
in
jno
and
daa
push
ljmp
popa
jb
cmc
add
jne
adc
push
data16
js
jo
mov
call
add
js
shrl
and
dec
push
sbb
xchg
pop
xor
jne
adc
push
cmpsl
stc
add
nop
inc
cmp
push
mov
dec
push
sub
pushf
adc
xor
xchg
xor
repnz
outsb
fld
sub
dec
movb
or
aam
add
xchg
lock
ret
add
scas
in
ds
sub
rcrb
add
ret
jo
inc
or
sub
adc
or
imul
rolb
xor
sub
sbb
xlat
inc
cmp
sub
push
sbb
push
and
or
sub
pop
sub
adcb
pop
dec
call
cltd
insb
test
push
dec
sbb
aam
pop
sub
inc
or
mov
sub
loop
sbb
cmp
adc
iret
and
inc
inc
or
ret
lock
shlb
jge
das
sbb
dec
sub
pop
rcrl
ljmp
xchg
pop
inc
pusha
dec
popf
mov
xor
loopne
scas
ds
push
inc
mov
mov
leave
mov
xchg
push
pop
xor
ret
mov
and
adc
mov
mov
mov
or
loop
aam
test
sbb
nop
pop
int3
push
lcall
sarb
loop
adc
sbb
pushf
dec
mov
aas
push
call
test
sub
inc
pop
std
cmpsb
pop
jecxz
mov
push
ds
lret
cli
jo
jle
ror
mov
and
adc
mov
loope
loope
push
nop
js
push
mov
in
mov
into
push
and
ss
sbb
ret
jp
or
pop
pop
mov
ja
lea
je
scas
rcrl
lret
lahf
mov
ret
dec
loope
std
mov
sti
and
mov
and
mov
pop
addl
xorl
mov
add
hlt
inc
ret
push
sbb
shrb
int
sbb
lds
sbb
jge
push
inc
jmp
adc
xor
out
xor
test
scas
es
lds
or
jg
fidivl
popf
add
les
and
xchg
mov
jno
lock
add
mov
sbb
cli
movsl
mov
mov
sbb
and
push
je
ret
clc
mov
xor
es
and
cli
inc
mov
pop
sub
xor
or
cli
nop
scas
jno
sub
and
lret
pop
inc
rolb
cmp
movsl
cmp
inc
leave
pop
jo
or
jns
outsb
mov
mov
test
add
clc
cli
and
clc
ret
sbb
mov
arpl
xchg
mov
scas
test
push
aam
pop
push
pop
pop
adc
sub
xor
cmp
or
out
cmpsb
xor
dec
test
jl
mov
aam
xor
jl
push
decb
sarb
mov
mov
in
pushf
pop
push
das
sbb
call
sbb
pop
or
lods
into
test
sbb
movl
aad
push
xchg
lock
rolb
push
fsubl
jp
gs
es
jno
sub
lock
inc
push
outsl
push
adc
loopne
addr16
icebp
repnz
cld
pop
add
cmp
push
mov
xchg
mov
js
and
adc
pusha
inc
dec
add
jb
loope
gs
imul
add
mov
insb
into
enter
jne
sbb
aad
xchg
daa
cmpsb
into
sbb
pop
loope
dec
mov
push
xor
sbb
in
jmp
push
mov
mov
daa
sub
ret
rcrl
rcrb
mov
xor
fstpl
dec
je
test
js
divb
mov
pop
sbb
ret
adc
fcomi
sbb
dec
cmp
pop
roll
mov
xchg
gs
add
lea
mov
enter
imul
xor
and
or
jnp
lahf
push
test
mov
push
icebp
inc
dec
call
jge
dec
call
rclb
cmpsb
xor
adc
xchg
pop
or
mov
sbb
fwait
rol
aam
rcll
mov
gs
addb
je
pop
leave
and
or
inc
iret
ror
shll
loopne
jp
mov
pop
add
jne
rclb
add
iret
test
xchg
rcrb
rol
test
in
jecxz
push
push
daa
movsb
mov
call
insb
add
sub
adc
add
jmp
adc
fwait
mov
and
andb
jb
jl
loope
in
adc
inc
call
in
pop
mov
or
push
dec
mov
mov
sbb
ss
push
xor
ljmp
mov
sub
mov
mov
ret
or
scas
push
rcr
sbb
add
dec
nop
cmpsb
ret
cmp
pop
test
ret
push
ljmp
add
into
shlb
pop
xorb
add
imull
bound
add
js
mov
gs
push
stos
bound
dec
rclb
mov
adc
xor
and
adc
test
repnz
xlat
cmp
sbb
xor
adc
adc
mov
cmc
or
adc
mov
push
push
xchg
mov
shlb
push
not
cli
adc
test
pop
cmp
add
out
cmpsb
dec
roll
mov
inc
or
shrl
xor
mov
je
stc
push
or
js
repnz
dec
pop
adc
rclb
jmp
or
mov
sub
ret
sbb
outsb
outsl
dec
xchg
xchg
adc
add
arpl
jne
test
push
lods
not
lret
es
adc
mov
clc
loopne
pop
adc
adc
pop
js
inc
dec
mov
pop
dec
cld
rorl
clc
sbb
sub
mulb
or
push
loope
or
ds
push
movsb
lods
adc
push
into
push
hlt
xor
mov
jecxz
push
loop
jno
test
push
movsb
mov
mov
pop
rcl
pusha
stos
fadd
dec
shrb
xlat
xchg
pop
in
and
sub
cmp
test
mov
push
xchg
std
inc
lock
jne
mov
mov
mov
test
dec
mov
jb
shll
mov
rcll
aad
xor
pop
call
xorb
fs
cmp
adc
fsubs
jl
sbb
out
xor
xor
jns
adc
dec
cmp
test
sbb
lock
push
cmp
sbb
inc
retw
pop
sbb
sub
inc
fiadds
pop
pop
test
pusha
pushf
cwtl
adc
wbinvd
fdivr
push
sbb
xchg
jmp
dec
sub
addr16
test
sbb
add
adc
mov
jmp
mov
sub
imul
cwtl
add
mov
outsb
fwait
xchg
cli
inc
enter
xor
xchg
daa
push
mov
ret
jp
lock
xchg
xchg
and
push
xor
test
pusha
mov
ret
or
push
dec
xor
sub
lods
daa
ljmp
insb
test
inc
and
add
push
xchg
add
xchg
stc
cld
add
sbb
cmp
mov
or
or
adc
push
movsb
xchg
xor
hlt
testb
xchg
lock
inc
lret
cltd
and
imul
loopne
mov
shlb
adc
and
movsb
push
dec
add
add
or
inc
or
lahf
test
push
adc
pop
addr16
xlat
pop
adc
out
xor
mov
cltd
test
imul
mov
mov
add
push
aad
shlb
mov
and
add
mov
xchg
push
sub
lcall
xor
cmp
shrb
loope
test
mov
ret
pop
insb
pop
or
mov
imul
add
inc
cmpsl
cmp
jb
and
inc
sub
push
push
aam
xchg
ds
in
dec
ret
sbb
add
sbb
or
rol
and
push
ret
frstor
popa
inc
mov
xchg
lea
sbb
or
add
add
ret
push
and
add
popf
cmpsb
dec
add
inc
shlb
adc
add
lds
mov
imul
pop
or
jmp
pop
lcall
leave
mov
loop
cmp
aas
imul
push
inc
stos
jno
xor
cli
mov
rcrb
pop
cwtl
push
xor
add
ds
lcall
leave
or
and
dec
adc
dec
xchg
pop
insl
inc
test
movb
sub
nop
mov
pop
clc
int
mov
xor
pop
push
insb
and
hlt
lcall
sbb
sub
test
rcrl
xchg
mov
rcrb
lea
mov
or
les
pop
add
adc
pop
sbb
adc
iret
jge
sub
call
and
jecxz
scas
adc
jmp
jo
inc
sub
mov
xchg
xchg
xchg
xchg
mov
ljmp
rcl
sub
cmp
notb
push
jp
xor
or
sbb
jl
nop
or
andl
xchg
les
jle
xorb
outsl
scas
or
xchg
pop
mov
adc
loopne
pop
fdivs
jge
cwtl
and
inc
ljmp
or
enter
insl
or
jmp
pop
add
into
loope
or
imul
out
dec
sub
add
push
add
popa
mov
ljmp
rolb
xchg
dec
adc
loopne
cmpsl
sub
mov
nop
pusha
fs
pop
ret
jbe
push
sub
xor
test
add
pop
pop
mov
inc
xchg
sbb
arpl
nopl
mov
mov
std
xchg
push
clc
or
jne
cli
cli
push
mov
inc
or
outsb
nop
aam
in
or
or
mov
adc
xchg
loopne
scas
mov
dec
inc
push
enter
and
and
xor
inc
subb
mull
xor
sbb
jo
push
jle
xchg
scas
fwait
xchg
nop
inc
and
adc
test
dec
sbb
aaa
add
dec
inc
push
pop
jo
les
or
fs
ja
cli
add
in
sub
and
and
adc
sbb
sub
test
adc
and
add
stos
and
stc
movsl
push
dec
inc
lods
rcrb
and
mov
cmpb
sbb
add
mov
mov
pop
int
jmp
jp
and
add
cltd
push
shrb
ret
adcb
adc
or
or
adc
jl
pop
dec
mov
hlt
insb
sub
shll
push
add
jne
mov
add
mov
addr16
clc
ret
adc
jge
adc
ficoms
push
jge
dec
cmpsb
pushf
adc
xchg
mov
xor
or
fadds
cmpsb
adc
clc
mov
ret
fs
jb
lods
imul
rclb
sub
xchg
lcall
hlt
stc
inc
fistpll
into
xchg
push
pushf
inc
cmp
pop
out
cmp
xchg
mov
scas
xor
sub
pop
and
pop
inc
xor
jno
cmp
je
add
mov
and
xchg
cmp
dec
adc
or
sub
mov
or
mov
rol
faddl
insb
lods
push
cmp
mov
rclb
ljmp
push
adc
popa
add
test
push
push
pop
sub
inc
xorb
and
outsl
arpl
pop
sbb
adcb
mov
mov
pop
xchg
mov
pop
cmp
dec
inc
and
mov
icebp
pop
adc
lock
push
and
insb
xbegin
jo
or
or
js
or
push
test
movsb
cmpsl
mov
mov
dec
sub
inc
inc
add
xlat
or
push
pop
fs
leave
xchg
fsts
nop
ds
add
add
mov
add
shrb
lea
repnz
adc
push
jbe
jle
and
or
push
push
dec
pop
adc
aaa
into
imul
and
mov
test
mov
mov
mov
pop
loop
lcall
ret
xchg
dec
cld
push
xor
or
push
addr16
mov
or
pop
or
stos
fnstcw
push
fistl
lcall
int3
add
ret
and
sub
in
nop
adc
adc
xchg
dec
and
sub
or
shlb
xchg
jne
test
cwtl
xchg
xchg
xchg
ljmp
cmp
mov
sahf
mov
shlb
imul
push
mov
add
ljmp
xchg
loopne
adc
imul
sbb
push
ret
pop
lret
scas
add
pop
enter
pop
fwait
leave
jmp
test
sub
cmp
or
or
loop
pop
mov
cmp
adc
sbb
xchg
out
shll
xor
xchg
sbb
push
in
jle
aad
sbb
sbb
push
push
adc
sub
push
psubsb
into
push
xchg
jmp
xor
sub
neg
add
ret
or
push
sahf
enter
addb
rol
xchg
clc
push
mov
gs
rclb
push
fbld
dec
inc
test
cmpsb
mov
push
push
cltd
add
pusha
pop
nopl
xor
push
test
adc
add
mov
lock
data16
and
cmp
jp
or
lret
push
sbb
icebp
adc
adc
sub
adc
jle
jp
push
or
dec
ret
xor
mov
sahf
fs
cwtl
into
push
test
fildll
adc
rorl
adc
add
xchg
pop
sub
test
adc
cmp
sbb
fdiv
and
jge
xor
fs
jle
ljmp
pop
cmp
movsl
and
call
pop
xchg
xor
mov
mov
jecxz
or
dec
mov
xor
pop
lock
fs
inc
in
shlb
sbb
push
lock
push
pop
pop
mov
or
adc
push
push
adc
cmp
or
ljmp
nop
and
icebp
push
test
pop
xchg
out
and
jp
adc
aam
cmpsl
mov
add
test
pop
dec
aam
cmp
jecxz
sbb
outsl
xchg
xchg
or
ss
dec
cmp
and
push
pusha
adc
movsb
push
add
lods
mov
ret
in
ds
lods
fistl
out
dec
stos
sub
out
andb
bound
mov
pop
and
or
adc
push
cmp
dec
enter
stos
mov
cmp
or
mov
or
sbb
loop
ss
push
rolb
push
ss
cmp
bound
icebp
test
fists
pop
mov
dec
lcall
out
cltd
pusha
sbb
lds
push
movsl
pop
sbb
pop
pop
push
inc
cmp
mov
adc
call
pusha
rclb
xchg
xchg
pop
xor
mov
push
icebp
jmp
cmp
pop
push
jmp
bound
jns
mov
mov
inc
popf
or
or
mov
hlt
imul
push
sbb
cmp
mov
je
imul
cwtl
or
xor
adc
mov
sbb
mov
icebp
call
dec
or
loope
xchg
mov
add
in
and
sarb
sbb
ret
push
pop
insb
xchg
cmp
pop
test
dec
outsb
cmpsb
pop
lock
adc
inc
pop
or
jg
call
adc
js
sub
add
sbb
lcall
imul
jns
andb
sbb
mov
sahf
pop
pop
lock
call
add
sbb
adc
sbb
push
stos
aaa
int3
dec
test
add
cli
rcrb
test
sbb
out
fsubrl
push
cmc
lods
test
jmp
inc
aam
or
and
loop
dec
nop
mov
imul
pop
xchg
stc
je
in
incb
sahf
hlt
push
inc
sbb
add
pop
stos
rcll
or
movsb
or
push
and
std
cli
lret
sub
sbb
push
xchg
pop
pop
adc
cmp
xor
stos
inc
inc
pop
or
mov
repnz
rcrb
gs
mov
jb
aas
add
pop
xor
inc
xor
outsb
add
inc
mov
andl
or
cmp
xor
dec
mov
adc
mov
mov
je
imul
out
sarb
scas
pop
out
jge
xchg
ret
inc
ret
es
ret
add
jmp
mov
and
enter
add
imul
or
sbb
sub
pop
dec
fs
xchg
xor
add
sbb
out
push
inc
dec
fwait
dec
xchg
addl
es
ljmp
sub
push
adc
bound
sub
cmp
add
je
xlat
nop
adc
adcb
inc
sbb
or
sub
sub
pop
pop
mov
mov
ftst
push
data16
ret
dec
push
or
jp
push
inc
outsb
shlb
insb
lock
jp
test
add
and
mov
xor
add
add
add
stos
pop
loopne
add
or
dec
adc
lds
int3
inc
inc
add
loope
pop
mov
loope
int3
sbb
xchg
sbb
or
sub
add
stos
mov
or
xor
jp
mov
movsb
hlt
sbb
xchg
add
cmp
or
fbstp
enter
mov
add
xchg
adc
mov
call
notl
or
rorb
xor
mov
ljmp
push
aad
or
je
daa
pop
das
scas
dec
sbb
insl
enter
and
add
pop
ds
cmp
cmp
imul
mov
add
or
xchg
sbb
xor
fcoml
add
rorb
fs
sbb
rcl
push
cmp
inc
daa
push
cmp
loope
sbbb
inc
es
loop
ror
push
adc
pop
xchg
jno
aaa
shrb
pop
imul
adc
xorl
dec
loopne
cmp
pushf
mov
mov
xchg
subb
rorl
shrl
sbb
add
sbb
mov
adc
movsl
leave
or
mov
pop
adc
sub
jl
pop
add
mov
sub
add
iret
xor
leave
add
les
push
sbb
push
iret
les
sbb
add
add
inc
rolb
pushf
inc
bound
pop
aad
sarl
out
leave
ljmp
das
sub
or
insb
mov
filds
or
inc
cwtl
cs
or
stos
push
push
sbb
loope
psubusb
or
dec
push
or
jmp
rcll
bound
shlb
sub
xor
jb
and
mov
sar
addb
xchg
cmp
int
loop
add
clc
add
add
inc
push
inc
js
mov
pop
sbb
dec
sbb
push
fucomp
cli
push
cli
xor
ror
adcb
inc
xchg
les
nop
or
push
shll
add
sub
pop
fdivrs
xchg
js
sbb
pop
addb
cmpb
pop
sbb
adc
lea
adc
dec
inc
flds
pop
push
addl
cs
lods
lea
dec
dec
and
push
jns
cmp
inc
jle
add
mov
stos
dec
test
cmp
jo
mov
rclb
shlb
inc
sub
icebp
inc
mov
adc
cmp
and
xor
fisttpl
mov
xor
jno
pop
jl
enter
jbe
push
pop
les
lods
pop
pushf
mov
add
add
pop
push
aad
and
inc
sbb
xchg
outsb
sub
loop
ljmp
paddsb
mov
loop
fs
mov
push
sbb
inc
cwtl
push
cmp
outsl
or
xor
sub
adc
xor
or
dec
adc
jmp
movsb
lock
mov
jns
addr16
inc
inc
inc
xor
arpl
cmpsb
dec
cmc
sub
adc
sbb
inc
rcrl
or
in
push
es
jmp
movsb
add
xor
es
test
add
push
bound
push
nop
fmuls
js
cmp
pusha
in
fwait
pop
hlt
dec
fdivrs
adcb
scas
and
icebp
jne
pop
jl
in
rclb
popa
mov
loop
push
rcrb
jbe
je
or
fisubrl
sbb
pusha
mov
loope
add
loopne
js
add
inc
jl
in
pop
cmc
movsl
jle
out
adc
mov
and
sahf
dec
popf
xchg
and
shr
push
rcrl
mov
aaa
out
or
mov
or
xorb
mov
inc
jbe
ficoms
dec
and
cmp
mov
xchg
push
hlt
fcmovbe
aaa
push
adc
xor
addr16
xor
add
sub
add
rolb
js
lret
xor
jl
cmp
sub
push
and
mov
push
insl
fistpl
js
lock
les
and
sbb
adc
adcb
push
mov
int3
fadds
mov
adc
pop
xchg
lds
cmpsl
aaa
xor
mov
add
mov
xor
xchg
inc
inc
popa
test
bnd
dec
ljmp
inc
inc
or
scas
and
add
pushf
bound
or
push
mov
mov
cmp
cmp
pusha
and
adc
icebp
xor
dec
test
hlt
xchg
sbb
add
les
das
call
add
mov
lock
pop
sbb
popa
out
dec
sub
sar
mov
mov
mov
and
mov
adc
into
mov
gs
mov
adc
and
xchg
les
out
clc
test
and
sbb
add
popa
adc
push
out
mov
xchg
push
push
adc
jne
sti
or
push
push
mov
je
add
ret
cmp
mov
mov
testb
js
fsubrl
push
pop
push
push
and
and
add
insl
mov
adc
stc
push
loop
mov
ret
lods
in
adc
ret
push
mov
rclb
push
inc
mov
pop
pop
pop
xchg
insl
fcomps
dec
arpl
xchg
jl
add
pop
inc
mov
dec
inc
aad
or
lods
and
inc
jl
ficoml
jb
dec
add
scas
mov
lcall
mov
dec
dec
pusha
inc
jne
sbb
ljmp
and
je
pop
push
inc
sbb
leave
cli
xor
test
out
les
ljmp
push
add
loop
js
lea
stc
add
data16
pop
add
pop
out
aam
xlat
paddsb
jbe
dec
outsl
sbb
ds
xor
pop
xor
mulps
cmpsb
mov
repnz
icebp
call
leave
dec
pop
clc
test
mov
xchg
xor
lock
test
push
or
shll
lahf
inc
or
ss
cmp
fcomi
test
js
push
sub
jne
orl
ljmp
sbb
popa
stc
xor
sub
adc
cs
pop
add
mov
scas
pusha
inc
and
xchg
out
adc
push
data16
or
push
and
es
lea
movsb
lcall
xchg
push
popf
gs
ret
je
pushf
pusha
jmp
test
adc
xlat
shlb
add
movsl
and
mov
and
js
and
lret
xchg
cmc
dec
lret
mov
test
add
or
pop
adc
dec
mov
adc
adcb
push
or
cmp
popf
test
dec
ret
pop
icebp
xor
xchg
dec
mov
push
cmpsl
jns
or
inc
sbb
test
data16
jne
mov
and
add
inc
and
arpl
sub
enter
or
sbb
or
mov
js
aam
pop
sbb
mov
mov
mov
adc
lods
dec
or
sub
sbb
push
push
std
rcll
leave
sub
scas
adc
daa
push
nop
adc
mov
scas
in
imulb
lods
sbb
sbb
push
xor
push
adc
test
push
inc
cmpsl
movsb
sar
cmpsb
jns
lcall
cltd
cli
and
repz
dec
xor
out
lea
sbb
outsl
sbb
scas
add
ljmp
ror
inc
add
and
xchg
pusha
xchg
jle
lea
pop
rcrl
pop
inc
sub
or
gs
lret
add
imul
or
and
je
push
mov
loopne
in
add
xchg
mov
jb
roll
icebp
lods
add
mov
ret
dec
popa
inc
inc
loope
xchg
pop
xorb
daa
call
insl
jne
pushf
or
pop
movsl
andl
pop
test
ret
inc
pop
outsl
rcrl
call
ret
xorl
roll
lea
push
pop
add
lock
rcll
add
xor
pop
add
dec
mov
push
insb
add
add
inc
adc
ljmp
mov
test
ja
test
add
pusha
jecxz
inc
mov
adc
cmpl
cmc
rcrl
in
sub
lea
js
and
mov
ret
mov
or
mov
js
push
fchs
pushf
sbb
or
push
adc
fiaddl
mov
rolb
mov
inc
movsb
aad
in
sahf
sbb
xor
dec
cmc
stos
ret
mov
dec
add
inc
call
enter
mov
pop
shlb
sbb
movsl
icebp
or
mov
enter
pop
push
or
rcrl
dec
cmc
add
or
and
jle
dec
mov
xor
and
es
jmp
push
aam
pop
pop
cli
adc
xchg
pushf
xor
add
add
lret
adc
insl
dec
lods
es
push
cmp
lahf
fcomps
out
and
push
or
jmp
sub
aaa
mov
cmc
pop
push
sub
mov
jg
jmp
adc
dec
call
pop
call
les
add
or
fcomps
scas
and
add
stos
push
or
mov
adc
fs
rcrl
jne
mov
inc
popa
ss
adcb
cmp
xchg
aam
push
xorb
insb
sbb
push
xchg
pop
sub
sbb
clc
jle
ljmp
push
mov
sbb
cmp
lea
xor
jo
rcll
jmp
pusha
shrb
pop
js
cmpsl
je
pop
repnz
pop
adc
jle
xor
dec
popf
dec
es
pop
mov
cmp
ret
adc
loop
mov
xchg
xchg
pop
flds
xor
fisubrs
xchg
jne
push
clts
or
test
sbb
xchg
cmp
pop
jae
xlat
push
and
outsb
mov
push
cmp
push
lar
inc
stos
add
sub
test
and
bound
mov
dec
or
orl
lods
jle
shlb
cmp
hlt
je
sbb
das
adc
push
ljmp
roll
push
cmp
push
and
xchg
cmp
test
repnz
jbe
pusha
ja
sbb
movsl
or
daa
sbb
out
jg
add
icebp
sub
bound
pop
and
iret
adc
punpckhdq
lret
pop
pop
cli
and
pop
filds
cs
mov
lods
mov
add
push
and
xor
xchg
in
or
popf
xorl
adc
xchg
aas
sub
lcall
pushf
inc
fnstenv
data16
mov
inc
mov
mov
popl
pop
pop
xchg
aad
movsb
daa
rcrb
dec
or
xchg
add
pusha
push
push
mov
lret
repnz
es
add
stos
inc
sub
ret
testb
subl
into
les
rsqrtps
ret
add
out
dec
pop
aam
sbb
dec
sbb
mov
ror
and
jbe
cmp
dec
or
push
mov
mov
or
jle
mov
arpl
inc
sahf
hlt
sub
push
arpl
repnz
mov
or
jp
sub
jmp
adc
ljmp
mov
push
leave
scas
pop
adc
sbb
mov
enter
or
pop
pop
ljmp
pop
test
add
or
and
adc
pop
in
sub
or
lock
dec
cmp
mov
cwtl
push
jo
jmp
fsubs
rorl
sar
xor
daa
andb
shlb
or
push
repnz
and
inc
nop
arpl
and
jl
inc
adc
mov
mov
dec
rclb
xchg
fistpll
inc
sbb
hlt
or
sarb
ljmp
rorl
add
mov
inc
sub
mov
popa
lods
xchg
insb
in
rclb
repnz
push
pop
loopne
data16
xor
cli
rcrl
fsubl
add
add
xor
xor
adc
xor
add
cmp
test
nop
mov
hlt
icebp
leave
test
leave
jge
ljmp
rclb
or
dec
mov
push
clc
adc
xor
ror
pop
mov
test
or
addb
cli
xor
cmpsl
push
out
sbb
cwtl
enter
jl
sbb
insb
shrb
pusha
and
sbb
xchg
and
xor
jne
sbb
sbb
xor
push
loop
sub
in
shlb
pop
daa
push
imul
push
rcrb
or
xchg
sbb
add
mov
sbb
and
add
les
das
or
dec
cmp
mov
test
lea
nop
and
test
pop
mov
adc
imul
lock
xchg
subl
jbe
mov
push
or
pop
jno
pop
call
add
jb
lock
outsl
lret
push
add
les
add
rorb
xchg
test
push
outsl
js
scas
and
lock
push
mov
repz
mov
fsubl
or
adc
sub
scas
inc
dec
ror
aaa
sbb
xor
repnz
mov
gs
leave
push
mov
stos
add
ljmp
dec
jb
mov
std
jg
or
data16
movsb
jne
pop
aaa
add
dec
push
sbb
inc
dec
mov
test
sbb
cmp
push
push
adc
cmc
arpl
sub
ret
dec
inc
push
pop
jns
mov
pop
push
push
into
mov
and
rcl
insb
mov
test
ror
sbb
leave
mov
mov
xor
xor
dec
loope
jp
xchg
and
inc
cmp
imul
pop
adc
sub
ror
dec
sub
cwtl
sbb
lahf
push
lahf
cmp
add
xchg
adc
sub
pop
sbb
dec
inc
or
inc
call
xchg
sbb
push
lcall
lods
mov
or
mov
nop
pushf
test
xor
je
dec
fs
push
sub
add
xchg
js
inc
xchg
jmp
adc
sub
fisubs
imul
out
add
dec
pop
cmp
cmpsb
push
adc
push
and
jge
out
adc
popa
or
aam
push
push
data16
or
mov
lret
cmpsl
out
and
dec
fistl
cmpsb
notb
sub
pusha
and
nop
dec
cmpsl
int3
and
sti
sbb
xorb
movsb
add
mov
cmp
xchg
xor
arpl
pop
adc
jne
add
jecxz
enter
or
or
or
mov
mov
call
mov
inc
push
je
add
je
sbb
jo
jb
call
mov
imul
sub
mov
pop
es
int3
out
ret
into
mov
adc
in
ss
cli
and
test
push
and
call
repnz
push
cltd
lods
adc
sarb
dec
push
daa
pushf
inc
xchg
aam
dec
insb
adc
lea
adc
jle
add
es
or
not
jae
adc
les
pusha
inc
adc
cmp
sbb
ret
mov
sub
enter
jo
push
mov
sub
pop
adc
pop
push
cltd
movsl
push
pusha
insb
cmpsl
cwtl
and
add
xor
mov
or
cmp
push
mov
or
add
and
mov
test
pop
mov
lcall
mov
jmp
add
or
cmp
xchg
and
dec
lds
cmp
inc
sub
repz
cmp
lahf
push
cmp
add
sti
jo
xchg
xor
xor
add
into
sbb
adc
xor
pop
push
adc
bound
push
sub
push
lahf
cmp
xor
insb
push
inc
cltd
cs
jecxz
imul
popa
mov
add
mov
pop
pop
arpl
sub
add
ret
and
xchg
scas
pop
clc
add
push
addb
adc
and
iret
push
or
inc
jnp
add
mov
scas
mov
xchg
sub
xchg
dec
adc
add
push
add
jmp
loopne
lahf
sbb
add
add
add
sub
test
ret
or
lock
rcll
test
stc
mov
fistl
mov
int3
rcl
adc
cmp
dec
pushf
daa
mov
nop
outsb
sbb
rorb
js
outsl
add
pop
add
fmul
jo
stos
push
mov
cs
pop
adc
lret
scas
test
cmp
push
sub
sbb
mov
ficoms
je
inc
shlb
sar
ss
mov
xchg
push
ljmp
or
push
pop
cld
pop
dec
jl
xor
mov
jns
rcr
sbb
call
inc
js
cld
gs
jne
add
adc
into
push
push
pop
mov
cs
dec
xor
fbstp
push
sub
sub
in
les
sbb
pop
and
xor
or
lods
ret
add
movhps
jp
or
jno
inc
orl
pop
mov
push
push
push
adc
jl
cs
movsb
adc
push
repz
dec
add
add
inc
inc
pop
mov
mov
or
out
push
mov
pusha
jge
mov
mov
and
setno
je
andb
ja
or
pop
mov
cmc
inc
jmp
enter
adc
xchg
inc
nop
aam
js
pop
or
or
jp
enter
or
adc
mov
into
add
sub
mov
xchg
nop
mov
push
push
or
mov
inc
stos
sub
rol
jle
pop
sbb
enter
pop
push
add
inc
sub
addb
sbb
xchg
hlt
hlt
rorb
mov
cmp
loopne
rolb
mov
push
cmp
pop
sbb
ds
stc
addr16
cmpsl
mov
pop
push
xor
inc
dec
lret
adc
js
call
enter
insb
or
mov
inc
repnz
stos
jo
inc
add
mov
addb
aam
pop
inc
fiadds
loope
mov
or
cmpb
cmp
pand
loop
xchg
aas
sahf
add
mov
dec
push
xchg
mov
ret
sub
adc
jb
daa
dec
scas
and
leave
ljmp
mov
lds
adc
and
stos
xchg
mov
pop
pop
adcb
dec
or
iret
faddl
push
sub
or
pop
das
ror
test
add
adc
out
and
ret
mov
xchg
cs
and
iret
mov
sbb
rorb
pop
pusha
sub
cmc
sbb
push
mov
lods
lock
sbb
mov
cmpsb
xchg
push
testl
mov
inc
into
test
add
mov
cltd
je
xchg
jle
or
loope
push
add
mov
loop
push
outsl
leave
sub
xorl
outsb
jp
push
jne
inc
cmc
xchg
movsl
cli
cmpsb
daa
mov
popf
sbb
rolb
inc
daa
sbb
mov
js
mov
enter
sbb
jp
push
push
pop
fidivrl
sub
push
cmc
push
rorb
lea
dec
sbb
shr
sub
mov
sbb
mov
dec
lock
imul
in
adc
shlb
mov
mov
mov
add
jle
daa
js
pop
mov
lods
roll
jno
cmp
mov
mov
js
fcmovu
scas
out
loop
js
mov
fiadds
add
lea
add
push
and
or
shlb
dec
xchg
xchg
xchg
push
pop
pop
mov
push
fbstp
bound
sbb
sbb
or
dec
push
adc
push
sbb
pop
add
js
sub
pop
xchg
fisttpl
push
pop
sbb
mov
jp
pop
movsb
out
js
pop
pop
fs
push
and
wbinvd
mov
pop
and
mov
add
dec
fsubr
popa
sbb
jns
add
pop
or
xchg
dec
jge
aam
call
loope
sar
ds
dec
push
mov
lcall
stos
test
inc
push
leave
fwait
call
les
inc
dec
clc
ret
push
sub
sti
dec
jle
xchg
push
sub
push
add
rcrb
les
inc
cmp
mov
rclb
or
sbb
inc
or
clc
push
pushf
push
bound
mov
rolb
nop
jp
andb
loope
enter
mov
mov
sub
mov
mov
addl
cwtl
clc
mov
addl
and
add
push
es
and
pop
adc
dec
sbb
jns
add
por
xchg
enter
adc
nop
enter
call
or
inc
mov
pushf
pop
mov
or
enter
add
dec
mov
or
and
inc
inc
cmp
imulb
and
adc
dec
or
enter
jno
push
bound
or
jo
dec
add
push
push
push
dec
enter
sbb
or
sbbl
sarl
xchg
dec
aam
loop
add
or
pop
arpl
bound
pop
cli
movsb
pusha
jmp
mov
push
mov
or
scas
mov
and
shll
clc
adc
jbe,pn
mov
push
lret
daa
sub
lret
rclb
mov
inc
push
testl
adc
je
shld
sbb
jmp
sub
test
je
test
lret
pop
xor
sbb
fdiv
push
and
popa
and
xchg
or
les
push
pop
sbb
xor
adc
cmp
es
lods
cmpsl
mov
or
insb
insb
dec
je
pushf
xchg
in
aad
or
in
and
sbb
lret
fs
mov
sbb
jp
cmovle
xorb
sub
xchg
add
push
lods
cmp
dec
mov
or
pop
adcb
sbb
addr16
dec
inc
pop
inc
lahf
adc
sub
push
sbb
xchg
das
add
xor
sbb
adc
sarl
das
mov
inc
lea
or
cmpsl
or
scas
adc
inc
js
add
jle
cmp
push
and
or
into
add
and
or
mov
cmp
sbb
popf
lahf
or
mov
dec
data16
dec
mov
fcmovu
insb
lods
xchg
add
aam
aam
scas
jle
mov
lcall
adc
sub
fwait
push
stos
mov
imul
movsb
dec
adcb
sbb
sbb
jl
mov
outsb
roll
or
jno
and
add
rol
or
adc
adc
jb
pop
dec
inc
add
mov
nop
faddl
or
sub
hlt
and
fidivrs
pop
stos
lret
js
jecxz
mov
into
dec
push
push
jmp
testl
addr16
adc
movsl
add
or
neg
movsl
sbb
jno
xor
shll
add
dec
inc
ficompl
push
mov
adcl
cmp
push
mov
and
xchg
test
shlb
inc
je
or
mov
mov
jno
mov
and
pop
dec
sbb
sbb
jmp
inc
sbb
xor
mov
cmp
push
add
mov
outsb
add
dec
sbb
xor
pop
ret
inc
cwtl
cmc
sbb
push
aad
jg
xchg
addb
and
jo
pop
in
imul
sub
daa
cs
push
je
clc
mov
scas
ret
or
adc
mov
pop
sbb
mov
adc
cmp
push
mov
out
mov
push
inc
loop
pop
pop
push
cli
xchg
enter
push
inc
es
push
mov
mov
fucomip
adc
or
or
out
das
mov
push
adc
inc
inc
enter
imul
loop
push
pop
mov
shll
dec
sbb
push
adc
and
cmp
scas
push
and
pop
insb
inc
inc
test
call
mov
push
andb
loopne
inc
popf
lods
and
ds
orb
or
mov
jl
push
cmovb
icebp
sub
push
cld
aam
jp
inc
outsl
lret
sbb
jp
cld
mov
imul
add
pusha
mov
and
aam
add
pop
addb
push
jecxz
arpl
dec
addr16
addr16
lret
enter
add
lret
cmp
dec
xor
mov
cwtl
and
aaa
xor
subb
push
cli
mov
or
or
dec
add
push
les
and
pop
mov
sbb
movsb
or
out
pop
call
xchg
fldt
cli
sub
fxch
mov
adc
in
sbbb
call
sub
cmovle
pop
mov
shlb
mov
pop
push
adc
cwtl
sbb
ljmp
sub
dec
jae
dec
xor
ret
push
add
mov
lahf
lcall
mov
xchg
xor
or
call
clc
adc
addb
xlat
fists
mov
and
inc
pop
xor
mov
pop
inc
nop
icebp
ret
push
rcll
mov
cmc
adc
inc
aaa
test
and
ret
adc
rcr
adc
and
xor
mov
scas
bound
pusha
rorb
int3
mov
fdivs
or
sarl
or
faddl
rorb
and
pusha
bound
and
movsb
shll
fwait
or
icebp
loopne
daa
adc
aaa
or
jmp
pop
xchg
movb
outsb
test
js
inc
rclb
or
jmp
stc
xor
popf
mov
xor
subb
or
cltd
adc
rclb
leave
xchg
adc
ret
aaa
enter
pop
gs
mov
xchg
andl
in
push
xchg
jecxz
sbb
cmpsb
loop
push
push
mov
int3
sub
rorb
or
popa
xor
or
mov
rcr
jne
lock
mov
sbb
jnp
mov
mov
mov
push
aaa
and
or
ret
clc
mov
mov
mov
movsb
xor
nop
popl
or
sbb
adc
adc
jb
lahf
push
es
add
clc
xchg
add
push
das
dec
or
test
orb
add
in
mov
mov
cmp
mov
rolb
jg
sub
pop
mov
and
adc
ret
add
sbb
jno
mov
lods
cmp
addr16
push
pop
imulb
ret
dec
imul
aaa
push
push
dec
pop
push
sbb
dec
sbb
pop
mov
inc
out
add
mov
in
push
cmp
inc
loopne
mov
lcall
inc
sbb
inc
loopne
shlb
lea
sub
push
sbb
adc
sub
sbb
and
clc
push
xor
push
pop
adc
add
rclb
or
lock
push
mov
push
or
dec
out
lret
adc
adc
lods
mov
and
dec
repnz
out
push
add
insl
inc
iret
fadd
lock
andnps
nop
mov
adc
xchg
jge
sahf
adc
imul
sarl
sub
rclb
lods
mov
sahf
pop
cmpsb
out
jge
push
rcrb
push
cmc
jo
push
cwtl
repnz
dec
iret
lcall
repnz
xchg
xchg
popf
ret
int
inc
pop
cmpb
or
inc
pop
ja
add
nop
and
lea
sarb
or
xchg
add
loopne
push
rolb
inc
push
arpl
inc
and
sbb
sbb
insb
dec
pop
push
add
daa
fiaddl
xchg
and
loope
aaa
inc
loop
das
lods
cmp
call
bound
lea
push
pop
push
fs
and
inc
push
into
cli
movsl
es
sub
or
push
inc
mov
imul
sub
or
pusha
cmp
xchg
ss
and
or
cmpsb
dec
or
mov
pusha
sbb
rol
into
xchg
add
pop
cmc
adc
sub
add
adc
add
aaa
sbb
sarl
dec
jle
loopne
sbbb
jecxz
mov
dec
push
pop
stos
sbb
mov
adc
add
pop
repz
out
dec
int3
dec
test
sbb
or
cmp
inc
mov
scas
push
adc
adc
scas
fbstp
loopne
into
addb
lods
pop
imul
ja
xchg
or
test
scas
adc
loopw
rcrb
je
adc
testb
je
cld
jns
adc
mov
or
mov
inc
push
or
xor
cmp
hlt
shr
fs
pop
sub
push
lahf
xor
pop
sbb
ds
sbb
std
rolb
and
enter
ljmp
fnstenv
push
icebp
out
mov
cltd
clc
and
mov
lret
xchg
xchg
dec
lds
fstps
es
and
aas
add
jmp
stos
xchg
dec
cmovle
notb
mov
fsubr
call
mov
adc
xrelease
mov
mov
xor
pop
and
fcompl
dec
cmp
xor
jle
fistpl
stos
dec
sahf
punpckhdq
dec
pop
in
arpl
push
sbb
add
pop
push
ror
out
and
adc
push
lock
lods
test
push
jmp
cmpl
test
or
mov
je
inc
outsb
insl
add
int
or
mov
push
in
or
pop
jecxz
pop
add
add
adc
and
je
rolb
aam
lock
je
loope
mov
adc
pop
xor
mov
cvttps2pi
pusha
nop
adc
adc
negb
loope
add
lods
inc
clc
xor
mov
adc
jno
movsl
xchg
sarl
mov
aas
push
inc
shlb
rol
cmpsl
dec
adc
stos
or
test
sub
push
push
popf
add
inc
mov
test
pop
arpl
ret
sub
adc
inc
add
pusha
js
and
pop
push
inc
outsl
adc
stos
pop
fdivs
cmp
testb
les
addb
xchg
inc
cmp
out
notb
cmpsl
xor
outsb
or
push
fadds
dec
cmp
add
or
lods
cltd
test
or
nop
and
xchg
xor
jl
sbb
add
sbb
add
or
add
das
jnp
xchg
inc
rcrb
sbb
popa
ret
aam
lret
xor
mov
test
xchg
sbb
or
loopne
mov
add
mov
popf
les
adc
sbb
pusha
aam
aad
add
pop
mov
cld
enter
ds
rorb
int3
fcmovnbe
dec
cmp
or
xchg
es
lret
lock
inc
or
and
and
out
fdivl
sub
lret
cmp
int3
mov
insl
mov
and
and
push
es
adc
push
mov
in
mov
mov
rcl
mov
sub
add
mov
pusha
das
mov
and
aaa
test
out
rcl
mov
scas
movsb
adc
jmp
dec
lret
jl
mov
push
jb
std
and
cmp
ss
dec
mov
fcomps
add
dec
push
push
dec
sub
cmp
adcb
aas
test
stc
rclb
mov
sbb
push
xchg
mov
mov
or
sbb
jo
js
leave
shll
cmp
lods
test
in
inc
nop
mov
pusha
lret
sub
xor
loopne
rol
addr16
lahf
dec
js
shl
pop
inc
dec
sbb
xchg
sarb
rclb
flds
js
or
or
jnp
cwtl
xor
pop
or
test
popa
lea
mov
imul
mov
cli
lods
sub
cmp
or
test
gs
xor
adcl
sarl
inc
adc
ret
mov
mov
xchg
xchg
and
lea
mov
insl
test
mov
or
rorl
insb
xchg
or
add
sub
lret
test
jno
loopne
ret
imul
nop
sub
test
xchg
orl
mov
add
mov
push
dec
dec
pop
pop
sbb
fs
mov
cmc
adc
ja
jp
clc
insl
inc
sbb
sub
shrb
js
insb
push
sbb
inc
xchg
and
mov
dec
arpl
mov
xchg
outsl
sbb
ret
or
xor
inc
mov
movsb
xchg
movsl
movsb
mov
cwtl
push
loope
or
loope
or
es
dec
pop
jnp
or
outsl
cmp
or
mov
stos
je
jl
xchg
inc
and
or
sub
adc
adc
dec
adc
sub
push
arpl
cmp
adc
clc
mov
and
leave
mov
push
cmp
jb
pop
add
or
jae
adc
adc
pop
lods
mov
push
repnz
add
inc
rcrl
arpl
lret
cmpl
notl
imul
ror
ret
sbb
jno
imul
sub
addb
dec
add
or
test
xchg
xchg
cwtl
push
mov
mov
push
adc
jo
adc
rcrl
push
pop
sub
sahf
shrb
sub
clc
add
sbbl
bound
testl
imul
ljmp
xor
es
sbb
les
sbb
rolb
test
and
or
jecxz
shll
add
sbb
and
sbb
xor
push
dec
jb
addr16
es
and
lcall
inc
adc
lret
sub
pop
or
xor
cmp
sub
xor
ljmp
or
push
cmp
rolb
mov
and
stos
fmuls
inc
sub
or
push
adc
dec
pushf
into
adc
inc
xorl
shlb
xchg
mov
aam
sbb
add
add
sbb
ror
inc
or
push
add
xchg
pop
icebp
mov
and
call
ljmp
ret
add
dec
cmc
mov
je
jp
sbb
adc
lret
dec
add
aam
fcmovnb
push
pusha
push
jmp
pop
lods
add
nop
into
bound
sbb
and
mov
inc
loope
jecxz
sbb
and
or
xchg
je
icebp
xor
fldl
bound
mov
add
add
mov
leave
sub
jp
jo
fdivl
insb
js
pop
test
fs
shrb
mov
fimuls
imul
daa
xor
and
adc
fcmovbe
roll
test
daa
add
aaa
add
sbbb
pop
add
fimull
arpl
rcl
cmc
jo
out
xchg
cmp
jp
imul
sbb
pop
xorb
push
rcrb
and
push
or
or
add
enter
in
pop
sbb
adc
add
xchg
pop
das
subl
or
icebp
inc
sub
cmp
dec
or
and
pop
mov
mov
call
test
add
iret
or
stc
popa
xchg
cs
mov
pusha
mov
shr
jo
sahf
in
call
ja
inc
or
inc
enter
daa
leave
pusha
dec
mov
js
adc
test
push
insl
jmp
xor
sbb
pushf
pusha
adc
sbb
test
mov
loop
in
fwait
mov
mov
je
lea
xchg
mov
xor
xor
out
loopne
or
inc
mulb
jmp
pop
dec
and
add
fsts
mov
push
mov
test
aam
rcr
nop
aam
rolb
inc
roll
pop
outsl
call
icebp
push
inc
ja
add
pop
mov
xchg
push
ds
mov
adc
push
lea
ret
mov
add
or
jmp
xor
sbb
aam
and
add
mov
add
stos
xchg
and
mov
mov
cmpsl
add
mov
mov
dec
loopne
add
test
fdivs
bound
fistpll
pop
outsl
jb
mov
and
add
jnp
sub
push
xchg
mov
jmp
push
mov
lods
cmc
or
sbb
push
sbb
or
mov
cmpb
dec
mov
inc
js
call
push
test
jno
fs
lods
dec
lods
arpl
pop
add
loop
mov
enter
sub
and
lods
or
push
xor
pop
scas
nop
and
ja
scas
fisttps
popa
ret
dec
push
push
out
in
adc
jb
aad
lea
sub
loope
adcl
sub
inc
cmp
lea
rorb
in
loopne
mov
adc
add
roll
cmpsl
insb
inc
orb
add
scas
push
sbb
mov
pop
nop
fiaddl
sti
inc
inc
dec
pop
xor
pusha
mov
pop
aas
hlt
sbb
insl
mov
jo
add
push
daa
call
adc
or
push
mov
xlat
rolb
cwtl
push
daa
adc
rolb
jo
data16
dec
sub
mov
pop
fisubs
inc
adc
adc
lods
xchg
xchg
jp
adc
rorl
clc
add
dec
mov
add
push
cmp
out
imul
adc
pop
xor
loope
mov
mov
movsb
add
jg
adc
ret
mov
pop
mov
jbe
cmp
xor
inc
pop
or
lock
std
inc
mov
push
mov
and
fildl
imul
movsb
out
repnz
adc
shlb
sbb
xor
out
pushf
jne
loopne
in
mov
mov
ss
fdiv
or
add
dec
or
xchg
jo
add
dec
and
push
and
ret
in
lret
nop
mov
inc
sbb
mov
mov
rorl
inc
imul
outsl
adc
adc
test
enter
mov
mov
hlt
push
data16
adc
jg
jns
cli
lods
shl
xchg
xor
or
dec
jo
pop
mov
in
pop
or
pop
xbegin
sub
mov
test
ret
dec
loope
pusha
xorb
adc
inc
dec
and
xchg
js
rclb
mov
add
insb
add
ret
or
stos
dec
or
lods
insl
mov
inc
ds
addb
cld
mov
add
or
pop
gs
nop
clc
imul
add
add
add
adc
ficoms
mov
mov
cs
pusha
sbb
cltd
sbb
je
add
sub
loope
test
add
mov
add
adc
rcrb
imul
mov
lret
or
or
addb
or
pop
mov
xlat
xchg
cmp
rcrb
cmp
fcmovb
pop
jp
xlat
leave
inc
popa
inc
rolb
push
sub
pop
push
insl
jecxz
lods
and
jp
jnp
ds
xchg
mov
lahf
xchg
daa
adc
add
add
or
ror
inc
pop
dec
jmp
mov
fsubrs
lahf
push
addl
dec
jecxz
pushf
xchg
test
or
adc
xchg
jne
mov
push
clc
mov
push
or
cmpsb
popa
ds
push
mov
add
cmp
mov
xchg
xor
or
cwtl
add
add
add
outsb
sahf
push
aam
push
push
inc
jb
movsb
xor
fs
or
adc
add
int3
out
xor
loope
ss
loop
imul
stc
or
andb
fimull
adcb
mov
popl
dec
lahf
rclb
repnz
cmp
jge
jg
subl
cmp
mov
js
xchg
lret
repz
inc
pusha
push
mov
mov
roll
push
push
cli
mov
xchg
mov
mov
sub
xor
test
cmp
pop
pop
add
push
pop
andl
gs
mov
lods
xchg
xchg
mov
add
cld
cltd
lock
push
pop
add
adc
in
sub
cmpsb
xchg
and
cmpsb
addl
xor
adc
dec
es
lret
or
into
cmp
jl
test
sub
add
fs
or
push
or
cmc
sub
add
mov
add
mov
pop
imul
inc
xchg
addl
xchg
xor
mov
xor
lcall
or
test
pop
push
pop
xchg
mov
dec
or
test
and
or
hlt
cwtl
mov
inc
pushf
repnz
add
enter
push
out
add
ret
jl
mov
arpl
or
and
in
fsubl
mov
test
or
adc
sbb
pop
or
sbb
in
xchg
add
push
mov
and
mov
pusha
or
test
cmpsb
xchg
adc
push
or
or
xchg
xor
mov
pop
nop
outsl
sbb
jno
sahf
xchg
aaa
movsl
jmp
xchg
cmp
ds
inc
dec
outsl
xchg
pop
inc
push
shlb
ss
push
and
pusha
dec
lods
cmpsl
xchg
and
test
movb
cmp
sbb
jo
sahf
scas
sbb
sbb
sub
or
add
pop
sub
dec
cmc
xor
or
dec
stc
xlat
add
out
inc
pop
rol
cmpsb
jo
test
xchg
jmp
pop
or
int3
pop
adc
and
pop
loopne
popa
push
pushf
jle
add
enter
inc
mov
test
or
jne
add
xchg
rorb
sub
cmp
adc
jmp
or
xchg
cmp
inc
cltd
add
pop
mov
sti
xchg
cmc
or
dec
int3
or
add
mov
or
adc
push
pop
ljmp
ret
fcmovnb
outsb
inc
and
dec
loope
sbb
lret
std
cmpsb
lds
push
ljmp
fisttpl
std
inc
xor
daa
loopne
sub
popa
push
daa
ljmp
aam
inc
sbb
mov
or
dec
andb
add
push
xchg
test
insl
adc
popa
add
mov
mov
sbb
cmpb
push
push
dec
push
ss
dec
in
jns
addb
mov
adc
and
jl
mov
bndstx
add
outsb
xor
hlt
lea
push
mov
ljmp
adc
sbb
mov
or
pusha
mov
lret
dec
mov
ret
movsl
jno
sub
add
pop
mov
adc
mov
jne
sbb
adc
dec
inc
mov
add
subl
or
pushf
or
pop
pusha
movsl
outsb
mov
stos
sarl
shll
dec
fsubs
ss
and
dec
test
adcl
pop
shrb
pop
push
cmp
mov
pusha
and
mov
sub
push
and
or
or
jmp
shrb
and
xchg
sbb
push
leave
roll
sbb
adc
add
push
sbb
sub
add
pushf
cmp
ret
sub
mov
sarb
dec
pop
and
fdivr
ret
adc
das
mov
xchg
lock
hlt
popa
cmpsb
mov
sbb
ret
dec
add
push
inc
fmuls
push
cld
stos
add
aaa
push
sub
lds
and
dec
mov
ja
jle
add
sub
mov
bound
jl
rorb
push
inc
aad
loope
adcl
push
out
jno
dec
add
dec
adc
cmp
jnp
inc
push
pusha
and
bnd
add
sbb
and
clc
lock
push
inc
test
and
mull
scas
lods
mov
adc
sbb
xchg
sub
pop
mov
lds
sub
shlb
inc
adc
lret
loope
sub
rolb
cmpsb
or
mov
inc
or
adc
ror
imul
lods
inc
andl
or
call
adc
dec
xor
leave
cs
add
sub
ret
sub
js
or
mov
and
add
sub
mov
pop
rcrl
lret
gs
in
cltd
imul
pop
push
mov
lret
push
add
and
movl
sub
ret
push
pushf
mov
pop
addl
xchg
es
xchg
xor
mov
cs
cld
hlt
leave
adc
inc
or
inc
mov
jbe
and
and
cmp
sbb
add
rorl
in
pop
scas
push
xchg
xchg
inc
js
inc
sbb
cmpsl
adc
leave
inc
dec
int
mov
ds
xchg
and
das
ret
dec
ss
stos
xchg
xchg
inc
xchg
push
push
inc
bound
sahf
push
lret
adcl
xchg
pop
dec
outsb
iret
and
gs
imul
imul
add
loop
orps
lock
add
shrl
and
mov
or
pop
pop
sbb
rclb
mov
testb
movb
arpl
inc
xchg
mov
jg
ret
arpl
ret
sbb
rcrb
daa
jmp
sub
js
inc
mov
lock
mov
sub
int3
clc
arpl
xor
or
addb
sahf
sub
sbb
dec
cmp
jp
add
and
mov
push
adc
mov
adc
add
fs
push
adc
call
and
dec
and
or
dec
loope
sbb
and
movsl
fmuls
adc
xor
aam
add
mov
mov
or
xchg
xchg
and
or
or
pop
stc
daa
sbb
sub
rorb
cmc
mov
sub
jp
insb
int3
cmp
push
xchg
mov
mov
cmpsb
add
adc
out
push
lock
pop
pop
inc
pop
pop
sub
push
cmpsb
xor
pushf
xor
mov
mov
das
sbb
or
sbb
test
cmpsb
push
pop
cmp
into
ja
inc
ret
imul
lock
xor
sub
add
sbb
cmp
cmp
mov
stos
ds
push
popa
lods
pop
inc
leave
or
xchg
outsb
sbb
cmpb
lods
xchg
stos
orb
push
mov
push
mov
jno
adc
mov
nop
mov
mov
sub
in
inc
rsqrtps
add
inc
adc
rorb
pop
pop
cmp
sub
adc
movsl
ret
push
movsl
enter
hlt
sub
and
sbb
int3
jle
pop
mov
dec
popa
ret
popf
test
faddp
lret
addb
add
bound
mov
js
dec
sub
popa
dec
mov
stos
call
xor
sbb
or
andb
push
fimuls
gs
sbb
inc
add
jge
or
or
pusha
gs
mov
pop
fldt
mov
push
in
sbb
iret
dec
push
ljmp
fnstcw
cld
call
in
jle
enter
adc
cmpps
or
shll
fcoms
push
lret
out
pop
leave
xchg
repz
insb
stos
add
and
in
push
mov
addb
push
mov
sbb
inc
xor
sub
rcrb
jb
lcall
es
mov
xorb
cmpsb
ret
test
push
jo
inc
pop
lret
lock
adc
cmp
fs
loope
ret
js
popf
scas
scas
rol
jp
les
nopl
test
pop
nop
xchg
sbb
rclb
dec
and
imul
pop
jmp
sbb
lahf
adc
sub
dec
xchg
add
mov
test
or
jg
jno
int3
pop
insb
sbb
xchg
add
xor
stos
call
add
sub
ret
sbb
or
adcl
adc
test
mov
inc
bound
dec
lret
pop
xor
sub
and
movsb
test
xor
cmp
inc
rolb
add
jmp
cmp
test
or
add
fwait
jno
sbb
imul
and
add
push
sbbb
push
push
lea
mov
jl
dec
cs
pop
test
or
call
push
cmpsl
int3
movsb
insb
mov
ds
orl
sub
jmp
xchg
adc
lods
orb
add
in
dec
or
rcl
dec
mov
mov
mov
mov
repnz
ja
gs
test
dec
nop
inc
adc
sarl
xor
push
cs
pop
addb
out
ret
push
mov
mov
dec
rol
call
test
or
or
sbb
push
loope
push
shlb
lock
push
jge
lret
mov
popf
mov
lods
xchg
mov
sbb
dec
loopne
fstps
sarl
ss
adc
mov
pop
push
mov
pusha
subb
cmp
jmp
dec
pusha
lods
lods
scas
or
pop
addr16
enter
dec
pop
fwait
orb
mov
loope,pn
cmp
mov
xor
xor
fwait
push
push
pop
imul
mov
and
ss
jo
jp
lret
cmpsl
adc
xchg
lock
repnz
or
les
cmp
clc
in
js
add
push
dec
add
icebp
or
mov
push
cmp
cli
call
mov
or
xchg
addl
test
add
rolb
pop
inc
sbb
or
jbe
ret
sahf
ss
sub
icebp
or
xchg
mov
or
add
xchg
xchg
push
mov
xchg
jbe
shl
dec
dec
cmp
or
cmc
mov
lret
adc
bound
or
pop
xor
sbb
push
fcompl
cmpsl
jo
loop
jl
pop
push
mov
inc
add
add
cwtl
jb
mov
inc
aam
in
adc
ror
les
push
stos
xor
out
ds
sub
test
xor
push
adc
push
or
jne
pusha
shr
inc
sbb
idiv
push
movsb
mov
sbb
push
sbb
pop
mov
mov
shlb
cltd
xchg
dec
push
inc
xchg
inc
enter
push
and
mov
sbb
xor
addps
cli
xchg
loopne
rcll
xor
out
adc
xor
add
cmp
sarb
loope
loop
cmp
test
bound
lahf
inc
shrl
push
imul
jo
sbb
add
add
int3
arpl
jmp
jbe
or
mov
and
das
dec
inc
xor
pop
fisubrl
dec
inc
lock
or
jp
xchg
add
push
bound
fcompl
fildll
mov
cmp
test
push
rcrb
test
and
ljmp
ljmp
xchg
sbb
aam
jo
pop
xlat
loope
sbb
mov
loopne
mov
test
aad
add
dec
lahf
cwtl
and
push
push
rcrb
pop
les
push
inc
cmp
mov
stc
pop
dec
push
and
add
sbb
mov
cmp
movsl
imul
fbld
xchg
push
les
inc
lods
push
jle
out
add
add
cmc
ss
add
scas
push
xlat
enter
pop
or
xchg
cs
adc
xchg
xchg
dec
pop
jmp
ret
or
sbb
sub
xchg
test
jb
and
cmp
inc
dec
jo
andl
or
xchg
dec
dec
adcl
push
es
movsb
pushf
fwait
movsb
push
aad
stos
call
push
ja
stc
into
and
dec
popa
sub
in
push
fcom
rcll
cmc
mov
outsb
cld
add
push
repnz
clc
add
sbb
xor
jecxz
add
lcall
mov
mov
ds
dec
add
xor
addl
cltd
dec
ds
add
sub
pop
cmpsb
sbb
test
jmp
pop
pop
es
add
dec
popa
popf
gs
pop
dec
test
cli
adc
pushf
push
or
sub
inc
adc
enter
mov
iret
sub
xor
jl
test
hlt
add
mov
jle
add
pop
add
add
push
sub
adc
lods
mov
unpckhps
xor
push
rcrb
cmp
cmpsb
dec
and
adc
mov
inc
and
and
or
push
mov
das
or
daa
add
add
inc
pop
inc
or
rclb
sbb
cmp
pop
sbb
cltd
xchg
inc
imul
dec
mov
add
loopne
cmpsl
mov
pop
push
sub
pop
xchg
cs
jae
or
iret
push
and
mov
outsb
mov
add
test
or
loope
cld
sbb
movsl
inc
cmp
ss
movsb
sbb
loop
sub
mov
sti
push
push
cs
and
shlb
cmp
pop
adc
jmp
adc
or
mov
cmpsl
push
insb
mov
ljmp
js
sub
iret
scas
dec
adc
push
pop
mov
push
sbb
or
imull
push
loope
div
in
nop
cwtl
pop
ljmp
mov
jmp
sbb
push
mov
or
adc
sar
pop
inc
pop
mov
mov
mov
mov
data16
cmc
add
into
mov
ret
cmp
iret
aas
scas
add
jg
lock
push
jp
mov
pushf
idivb
mov
pushf
jecxz
add
shlb
scas
push
into
orb
add
or
sub
dec
push
jo
decb
mov
inc
addb
mov
notb
or
or
pop
add
push
enter
or
add
mov
out
sbb
pop
push
test
lar
jecxz
inc
inc
inc
rcrl
mov
jb
cmp
insb
in
jmp
ljmp
xor
loop
xor
sbb
dec
mov
into
clc
sbb
adc
or
fmul
dec
dec
xchg
add
push
fadds
and
inc
or
pop
inc
mov
cmp
icebp
popf
sub
xor
out
jbe
pusha
sub
les
xor
adc
daa
leave
dec
dec
pop
and
je
stos
or
stos
cld
jmp
sbb
adcb
fbstp
or
pop
popl
aam
sbb
inc
popf
push
stos
aam
xchg
mov
aad
sbbl
orl
xor
pushf
add
js
xor
mov
and
sbb
roll
sbb
sbb
cs
inc
lods
push
test
jmp
je
sub
mov
popf
aas
popa
push
adc
ljmp
dec
jge
dec
sti
mov
icebp
arpl
inc
and
popa
xor
cmp
mov
movsb
lret
lods
add
dec
dec
mov
xchg
jno
push
pop
dec
or
cmp
rolb
je
ror
pop
xchg
or
dec
push
mov
sbb
add
push
rcl
mov
daa
jne
or
std
jg
cwtl
or
mov
push
gs
push
ret
in
push
clc
xor
test
testb
mov
ds
jb
mov
and
xchg
test
mov
mov
add
push
sub
ja
xor
pusha
xchg
sub
add
lret
pusha
icebp
adcb
or
dec
xor
in
fcompl
mov
sahf
dec
jecxz
jle
add
sbb
xchg
push
jecxz
mov
add
mov
and
lea
add
mov
bound
push
and
xor
sbb
into
push
adc
push
xor
stos
jnp
pushf
stos
adc
mov
inc
add
jns
mov
jne
loopne
add
lods
ret
or
cwtl
fcmovu
lea
and
mov
call
call
dec
rclb
push
lock
imul
sbbl
sub
lods
shrb
inc
enter
or
or
fcmove
movsl
xor
inc
cmp
mov
hlt
test
adc
add
cli
ret
add
leave
xor
test
and
dec
push
cwtl
push
mov
xor
inc
mov
divl
mov
scas
int3
mov
movsb
push
and
int3
leave
test
movsl
add
in
mov
push
add
subl
roll
orl
lods
jmp
sbb
aam
data16
test
dec
adc
jno
fcom
mov
adc
int3
add
add
xor
loope
aaa
xor
in
mov
sti
pusha
scas
test
es
dec
push
subb
movsb
cltd
dec
adcb
arpl
mov
shrl
sbb
xor
sbb
or
mov
inc
jp
xor
inc
call
adc
xchg
roll
dec
out
loopne
add
in
mov
cmpsl
or
add
lea
xchg
sbb
mov
push
add
jno
lods
pop
stos
aaa
loopne
hlt
or
or
sub
je
or
in
fidivl
add
or
sbb
and
pushf
enter
push
scas
lods
push
ss
test
add
jecxz
adc
adc
arpl
add
mov
call
and
add
mov
pop
ljmp
negb
rcrb
pusha
mov
call
push
pop
xor
in
call
sub
aaa
mov
xor
adc
or
jbe
pop
xor
fdivrs
push
inc
push
mov
and
push
sbb
xor
sahf
inc
sarl
push
and
lock
aaa
mov
gs
add
icebp
sbb
ret
jp
pop
add
nop
jp
lock
jp
nop
lret
repz
lret
sub
mov
push
xchg
dec
adc
popa
cmp
outsl
and
mov
sub
sbb
or
loope
sbb
repnz
ss
xor
push
cmp
cltd
sarb
loope
addb
in
ss
xchg
or
scas
fsubrl
push
xchg
xor
test
enter
jo
xchg
popf
pop
pushf
mov
jge
jbe
enter
es
cmpsb
add
mov
adc
shl
sbb
loopne
rorb
lock
pop
dec
clc
or
jmp
testb
xchg
push
aas
adc
call
mov
pop
es
bound
jge
mov
jo
adc
jae
ds
adc
iret
lock
fstpt
inc
xor
push
xor
push
popf
inc
aam
push
jmp
dec
rcl
mov
dec
test
dec
arpl
daa
addl
push
and
nop
jb
test
insl
loopne
in
lock
xor
and
fs
and
outsb
subb
add
or
add
dec
cli
or
adc
add
test
icebp
push
sbb
enter
mov
sub
and
xchg
push
loopne
add
cmpsb
or
xchg
adc
xchg
lock
ret
pop
div
fildl
or
inc
xchg
mov
cmp
xchg
sbb
rorl
push
push
lahf
and
and
sbb
or
fs
nop
stos
shlb
popa
das
mov
aaa
lods
pop
dec
xor
xor
or
pop
push
dec
jmp
inc
fiadds
nop
push
mov
cli
jnp
shr
inc
sbb
add
add
int
pop
add
add
xorb
sub
or
and
pop
sub
mov
mov
es
sub
cli
jecxz
xor
lahf
cs
test
cmp
sbb
xor
sbb
pop
pop
xchg
das
sub
jbe
mov
fistl
and
and
adc
mov
or
mov
cmp
or
insb
add
dec
adc
add
aaa
jo
xor
test
push
sahf
dec
sbb
inc
add
pushf
mov
mov
sub
jmp
adc
mov
mov
or
fildl
arpl
test
sbbl
enter
sbb
sub
dec
xor
push
xorb
addr16
ja
lock
roll
flds
push
mov
iret
adc
cmpsl
sbb
mov
add
fldt
and
sbb
jecxz
inc
lods
adc
enter
xor
clc
adc
icebp
lcall
les
jmp
icebp
jo
add
pop
pop
and
mov
add
inc
jo
add
adcl
out
je
push
or
ljmp
push
mov
negb
dec
jl
lock
inc
test
inc
sbb
cmp
dec
sbb
adc
ror
xchg
and
ljmp
xchg
out
add
sahf
mov
jae
lds
mov
xor
addl
push
push
leave
ljmp
inc
or
and
mov
mov
sbb
mov
add
sub
adc
nop
add
loopne
xchg
pop
nop
push
add
imul
sbb
push
cmp
ret
or
dec
xchg
arpl
adcb
mov
xchg
inc
xorb
pop
out
es
and
fwait
subb
jo
or
ja
adc
adc
rclb
pop
insl
mov
out
leave
aam
setb
mov
push
les
addl
sub
jo
push
loopne
das
and
push
push
and
popa
and
fisubs
je
pusha
movsb
int3
sbb
dec
add
sbb
andl
dec
push
add
adc
or
mov
hlt
inc
or
push
jnp
js
ret
adc
cmp
dec
pusha
loope
lret
fcom
rcrb
sub
or
pusha
xor
rolb
adc
push
pop
std
ret
fcoml
loopne
repnz
push
cmc
repnz
in
dec
ret
xchg
lods
ret
addl
add
xlat
jae
xor
mov
int
adc
inc
xchg
and
push
aam
out
movsl
mov
icebp
sub
popa
stos
enter
pop
ficompl
repnz
adc
push
mov
xchg
xchg
loopne
es
xchg
shl
dec
roll
mov
dec
test
mov
iret
rclb
adc
testl
jg
cmp
sub
add
cmp
jecxz
xchg
cmpl
push
push
xchg
or
out
gs
mov
ss
repnz
pop
or
aas
push
clc
test
lods
aam
cvttps2pi
adc
ret
pop
cltd
lret
sub
jo
pushf
inc
nop
movsl
mov
ror
push
pop
iret
ret
test
push
arpl
cmp
jb
adc
sbb
add
bound
pop
inc
add
lret
fcmovnb
movb
cmc
push
dec
xabort
lret
pop
popf
jo
mov
mov
mov
lcall
and
sbb
fdivl
dec
xchg
addb
rclb
adc
in
movsb
add
add
pop
arpl
sub
sbb
adc
ss
mov
jge
dec
outsl
sar
mov
pop
inc
cmp
in
mov
cmp
or
js
push
jp
lahf
push
je
movsl
push
and
add
je
jo
mov
cltd
sti
stos
pop
sbb
adc
sbb
fmuls
pop
dec
dec
inc
enter
and
les
cli
fs
cmp
xchg
rcrb
sbbb
xor
lret
inc
xchg
subl
sahf
lock
cmp
sbb
push
daa
inc
mov
out
xchg
adc
dec
jns
es
mov
mov
mov
adcl
inc
sbb
xor
ret
add
int
jge
in
push
es
enter
inc
shll
les
rclb
pop
sbb
je
inc
jns
pop
rcrb
scas
icebp
test
pop
rol
rclb
loopne
outsl
xor
icebp
sub
push
pop
adc
xchg
rorl
rolb
mov
enter
or
cmp
pop
mov
ds
pop
cmpsb
push
pop
inc
lret
loop
rclb
mov
pop
in
xchg
clc
cmp
inc
push
and
mov
into
jle
ret
pop
pop
cmp
les
movsl
add
push
pop
mov
mov
dec
add
sub
mov
push
mov
mov
sub
lock
jmp
jns
inc
js
inc
mov
insb
test
into
lock
xchg
ds
xchg
push
or
fisubs
js
js
push
ret
pop
push
nop
jge
sarl
popa
inc
leave
es
and
pop
add
in
add
adc
adc
mov
ret
scas
fcoms
jno
loope
jno
or
adc
testb
hlt
test
mov
lods
add
movb
dec
dec
cld
push
enter
pop
push
xor
js
fbstp
sbb
xchg
cmp
adc
or
lock
insb
ret
jno
add
sub
adc
clc
popf
in
add
inc
cmp
in
add
jo
sub
jo
xor
lods
movsl
insb
sbb
xor
inc
lcall
test
jno,pn
cmp
mov
cmp
dec
pushf
xchg
jp
mulb
nop
jae
out
mov
adc
imul
ljmp
push
add
leave
arpl
dec
push
jecxz
mov
aaa
aam
clc
dec
mov
jmp
jo
les
dec
jno
sbb
mov
ds
test
cltd
dec
mov
mov
xor
ret
les
xchg
dec
mov
cmpsb
mov
xor
lret
test
mov
inc
rcrb
adc
mov
push
and
add
scas
pushf
in
or
cwtl
or
imul
dec
out
and
mov
js
push
xor
pop
push
jle
and
fwait
jg
fnstsw
xor
pop
and
or
dec
mov
popa
sbb
add
nop
jb
test
push
sub
or
push
lret
xor
inc
and
dec
cmp
scas
xchg
mov
add
sbb
cwtl
push
adc
mov
popa
imul
and
or
pusha
pusha
cmp
mov
cmp
ss
aam
shl
add
mov
sbb
or
shrb
loop
inc
rclb
ret
adc
int3
xchg
dec
sbb
test
sbb
data16
push
cs
fstl
movsb
rorb
mov
lock
aam
andl
es
pop
clc
jno
rorl
scas
add
inc
flds
cmp
lea
rcl
call
hlt
lock
es
pusha
lods
xor
adc
add
mov
aad
rcrl
sbb
sahf
out
push
mov
xchg
js
add
pop
imulb
fsubs
lods
add
pop
loopne
push
mov
test
xchg
mov
js
sub
add
dec
leave
insl
lods
bound
xchg
loope
add
add
jbe
hlt
adc
sbb
adc
push
lret
ret
dec
enter
or
push
pop
and
mov
setp
cli
mov
test
inc
inc
and
lret
aam
sub
and
sbb
cwtl
push
ret
out
insb
add
ret
mov
outsb
fucomip
roll
jb
imul
mov
inc
testb
stos
int3
inc
aam
nop
loope
jp
lock
fidivrs
add
xor
inc
clc
cld
mov
adc
dec
gs
mov
jp
cmp
xor
subb
dec
adc
jno
cmc
xor
inc
shll
xchg
jo
cmpsb
inc
rolb
pop
dec
lea
cmp
sbb
rorb
outsb
mov
or
push
push
sbb
movsb
mov
push
sbb
lret
or
je
cmp
adc
shl
stc
inc
or
enter
or
or
xchg
popa
add
pop
cwtl
test
shrb
daa
aam
add
call
in
sbb
test
sub
fsubrp
mov
dec
nop
fs
sbb
and
aaa
cs
lods
sub
pusha
mov
xor
fldcw
rolb
xor
cmp
and
push
mov
movsb
add
inc
mov
out
lcall
bound
repnz
test
stos
pop
mov
cmp
pop
imul
sub
es
mov
je
imul
cmp
xchg
pop
pusha
and
add
lock
add
mov
addb
lock
xchg
clc
push
push
xor
das
or
xor
sbb
add
inc
push
cmp
pop
cli
test
je
clc
movaps
inc
test
cmp
pop
xor
or
enter
fmul
mov
loope
les
aad
dec
pusha
jno
aas
lret
mov
push
mov
adc
fiaddl
or
sbb
sbb
iret
cmp
pushf
or
mov
cmc
int3
lcall
sub
xchg
mov
dec
inc
mov
add
adc
inc
frstor
pop
rolb
pop
pop
sbb
xor
xlat
leave
dec
sbb
push
mov
leave
sub
inc
or
out
or
ja
ljmp
loopne
movb
rol
jno
das
or
or
push
cltd
test
and
adc
mov
mov
mov
jecxz
ret
sbb
adc
adcb
pop
sbb
inc
add
movsl
shrl
pop
jo
pop
lods
and
xor
loope
jne
loop
jo
jo
or
sub
sbb
dec
shlb
add
xor
push
repnz
rcr
cs
mov
pusha
pushf
in
notb
adc
jle
mov
sbb
leave
fs
rol
jp
mov
pop
inc
cmpsl
or
add
addr16
cmp
pop
ret
pushf
xor
jo
adc
add
nop
and
sbb
sbb
add
add
push
adc
xchg
mov
mov
dec
sbb
test
mov
mov
pusha
cld
xor
mov
shr
and
push
push
and
mov
push
adc
cmpsl
mov
push
dec
push
push
into
cli
xor
dec
adc
push
stos
mov
icebp
dec
enter
xchg
add
mov
rorb
push
push
mov
shlb
or
cmpsb
push
rcll
rolb
jb
and
xor
xor
xor
pop
push
lods
inc
cmp
pop
rorb
cmpsl
std
xchg
jo
les
leave
xchg
adc
inc
mov
push
mov
je
or
aas
cmpxchg
gs
mov
adc
jne
imul
aam
sub
pop
pop
add
pop
ret
jo
flds
or
les
test
or
push
clc
and
mov
add
cld
rol
daa
notb
loope
or
xlat
sub
push
inc
lea
mov
rol
lock
and
rolb
adc
in
fucomip
add
inc
sbb
rclb
movsl
insl
out
and
sahf
or
loop
push
or
mov
mov
fidivrl
xchg
add
test
pop
add
mov
mov
insl
dec
add
into
cmpsb
sbbl
push
je
sbb
mov
lods
loop
xor
adc
mulb
cmp
pop
cltd
cmp
cmp
mov
xor
xchg
addr16
add
xchg
mov
push
add
inc
mov
inc
push
dec
xor
dec
jmp
pop
jmp
jp
stc
shl
or
popf
das
inc
outsl
or
fs
dec
push
pop
xchg
into
add
addl
xor
imul
mov
js
cld
repnz
or
dec
push
inc
push
imul
aam
push
outsl
sar
cmp
inc
mov
cmp
xor
jo
pop
mov
adc
and
add
cmp
test
sbb
lock
test
call
xchg
imul
mov
mov
mov
jmp
inc
add
push
jge
or
mov
push
mov
popa
mov
dec
popa
call
pop
dec
add
out
pop
xchg
movsb
rolb
push
je
jb
or
shrb
imul
mov
popa
or
add
ss
sar
adc
fs
xor
movb
add
sbbb
or
clc
or
rorb
mov
les
shl
cli
sbb
xchg
add
pop
inc
popl
add
into
xor
jno
pop
inc
pop
pop
rolb
inc
ss
sub
adc
adc
dec
scas
jmp
cmp
sbb
xor
jmp
jo
lock
cmp
xor
cmp
push
inc
inc
cmp
pop
shrb
add
xor
xor
or
mov
or
inc
jmp
mov
rcrl
loope
add
outsl
mov
inc
mov
data16
icebp
jne
sbbl
ret
mov
rclb
pop
jne
pop
and
jp
push
xlat
adc
cmp
sbb
dec
cmp
int
push
ret
ss
adc
aad
arpl
cwtl
push
adc
daa
sbb
pushf
mov
movsb
sub
idivl
push
mov
push
pusha
inc
add
dec
xchg
inc
add
and
stc
push
dec
xor
jmp
mov
cmp
in
inc
xor
dec
pop
adc
jo
sbb
loope
lahf
rcrl
mov
paddusw
ret
adc
les
popa
inc
xor
add
adc
mov
pusha
mov
in
push
out
adcl
stos
imul
xchg
movsl
add
scas
out
mov
ret
leave
repnz
mov
sbb
movsl
push
setb
jno
push
jae
adc
dec
sbb
mov
push
ljmp
push
mov
push
inc
stos
adcl
mov
insl
sub
loopne
cmp
ja
imul
push
xor
movsl
sbb
das
or
pop
movsl
add
push
mov
dec
enter
push
sub
call
or
sbb
test
psubsb
into
mov
or
mov
adcb
jp
xor
inc
movsb
insl
xchg
inc
hlt
dec
cmp
xchg
dec
mov
test
push
int
mov
sub
loopne
cmp
inc
and
or
mov
pop
mov
add
adc
sahf
test
aad
je
add
pop
pusha
push
nop
mov
jb
movswl
pop
inc
add
jle
adc
out
and
jne
xor
test
xor
push
rol
or
dec
rclb
mov
mov
sarl
jmp
or
cmp
and
movsb
mov
aaa
or
cmc
add
mov
es
sbb
pusha
es
mov
fdivl
xor
xchg
inc
add
pop
dec
mov
and
pop
add
mov
adc
xchg
pop
es
xchg
adc
aaa
sub
test
mov
push
jb
mov
popf
sub
mov
ficomps
bound
adc
fadd
jmp
js
jno
cs
pushf
cmpsl
loopne
or
test
imul
and
xor
sub
ret
push
adc
add
leavew
push
xor
mov
loopne
rolb
mov
inc
mov
pop
xchg
sarl
dec
mov
and
into
ret
pop
mov
xchg
shl
xchg
loope
in
pop
data16
ret
movsl
jl
adc
push
shlb
push
dec
popf
cmc
mov
data16
or
loopne
test
adc
mov
mov
andb
frstor
sahf
fisubrs
in
shlb
and
jp
add
adc
dec
sub
pop
sbb
xchg
leave
adc
sbbb
lods
add
pusha
outsb
add
jmp
pushl
enter
popa
mov
adc
sub
pop
outsl
lret
pop
adc
and
sbb
pop
aam
inc
rcl
ds
call
pop
imul
loop
or
test
and
inc
push
sub
jnp
rol
dec
push
cmp
and
pop
and
pop
xor
lret
and
rolb
mov
das
dec
mov
icebp
dec
pop
inc
sbb
mov
jl
lock
ret
sub
xorl
aam
mov
outsb
data16
inc
inc
and
inc
andb
xchg
add
mov
mov
mov
add
and
push
cmp
xchg
test
xor
hlt
cmc
inc
inc
cmpsl
jb
adc
cmovg
mov
xchg
push
rclb
adc
jl
dec
cmp
push
fsubs
in
add
lahf
or
mov
push
loope
insb
jne
dec
adc
add
xor
imul
fs
mov
mov
jge
pop
inc
push
call
arpl
dec
inc
xlat
and
xor
arpl
daa
push
inc
sub
and
test
or
addb
popa
add
in
add
outsl
xchg
xchg
leave
lcall
xor
cmp
fsubl
js
leave
roll
inc
js
repnz
pushf
sbb
push
push
or
push
inc
arpl
shlb
push
out
test
mov
jp
cmp
arpl
aam
sbb
inc
push
or
inc
nop
or
inc
nop
sbb
orl
gs
inc
cwtl
das
inc
pop
sub
or
pop
lcall
pushf
xor
or
addl
mov
loopne
sbb
js
decl
mov
lods
sarb
in
pushf
adc
rcrb
mov
xor
movsb
sbb
jge
mov
xor
and
jno
sub
sub
clc
out
sahf
xchg
sbb
jne
test
lret
sbb
push
loopne
leave
mov
nop
mov
lock
pop
iret
xor
sub
test
loopne
lahf
nop
adc
pop
or
add
ja
lock
xchg
psubsw
addr16
pop
mov
addl
dec
add
mov
jae
push
add
inc
xchg
dec
dec
lods
add
xor
push
jle
mov
sbb
adc
xor
push
mov
lret
xchg
pop
cmp
dec
inc
push
loope
adc
cmpsb
jno
insb
insl
call
jmp
or
movsb
add
jb
rcll
and
pusha
movsl
sub
add
dec
out
fdivr
jo
fisubrl
mov
push
sub
pop
add
mov
icebp
sbb
cwtl
andb
outsl
adc
cmp
arpl
cmp
mov
add
push
and
dec
mov
pop
movsb
test
sbb
push
test
pop
lcall
mov
daa
xchg
jecxz
roll
jp
xchg
test
out
cmp
add
nop
subl
call
test
pop
mov
ret
push
adc
jecxz
push
push
or
adc
es
push
pop
sarb
and
mov
sub
mov
cmp
shl
xchg
icebp
add
and
mov
repz
sbb
sbb
xchg
fwait
mov
mov
sahf
mov
push
cmp
shlb
lods
push
mov
xor
loope
xchg
cld
push
jp
xor
ljmp
rolb
mov
push
xchg
nop
push
and
stos
xlat
push
and
add
test
in
movsl
js,pn
mov
jae
xchg
popa
mov
mov
mov
jmp
movl
add
push
ja
mov
ret
cmpsl
out
pop
add
das
icebp
mov
jns
xchg
sub
fucomi
dec
fisubs
xchg
xor
in
push
sub
mov
jns
adc
or
xchg
push
pop
imul
xor
xchg
push
pop
jns
fldln2
jp
fwait
cld
adc
adc
push
pop
jns
nop
push
test
arpl
mov
and
in
out
push
or
cmp
mov
jns
xchg
push
scas
sbb
shrb
or
xor
add
xchg
push
pop
add
dec
bound
dec
push
mov
aaa
add
jnp
rclb
in
and
arpl
add
sti
aad
adc
jns
xchg
fisubrl
dec
jp
mov
stos
aaa
xchg
pop
jns
xchg
push
push
jno,pt
mov
mov
add
xchg
push
pop
mov
cmpsb
dec
inc
xchg
or
enter
push
pop
jns
inc
and
ror
les
sub
icebp
pop
jns
xchg
ds
cli
add
aaa
cmp
xchg
orl
push
jl
jbe
sahf
xchg
push
fdivrp
mov
and
inc
insb
insl
xchg
in
dec
add
jle
push
sbb
xchg
shrb
push
cmp
pop
pop
fnstcw
xchg
push
inc
mov
popa
jns
sub
pop
out
mov
cli
push
cmp
sub
cmp
les
aad
lret
jp
repz
push
pop
jns
lods
push
xor
loopne
and
adc
in
fstp
scas
push
psllw
dec
pop
push
mov
push
in
jecxz
and
repnz
inc
in
xchg
push
pop
dec
xor
bound
sub
jne
je
das
push
pop
jns
aas
mov
lret
xchg
fimuls
xchg
in
pop
jns
incl
cmpsb
test
xor
clc
push
subl
xchg
push
push
dec
add
mov
push
fdivrp
and
rep
iret
sbb
push
les
or
jns
fldl
or
mov
cli
push
jns
xchg
push
cmp
sub
sbb
xchg
push
pop
or
es
mov
or
push
pop
jns
or
adc
xchg
push
sub
push
pop
jns
out
cld
in
mov
popf
out
insl
addr16
in
add
jae
add
dec
xor
push
lock
sbb
pop
ljmp
lcall
les
in
cmp
mov
ss
aad
jmp
out
jle
jnp
clc
mov
movsb
xchg
loop
pop
sbb
jmp
inc
stos
mov
lahf
data16
int3
mov
ss
xchg
push
jecxz
addb
dec
adc
in
push
pop
in
rorl
pop
insl
cmp
push
pop
jns
aam
dec
loopne
outsb
addb
xor
push
pop
jns
cmpsb
es
mov
test
push
xor
jns
xchg
push
pushf
les
mov
sbb
jns
xchg
push
push
out
loop
mov
xor
dec
xchg
inc
in
push
pop
inc
stos
loop
fdiv
push
icebp
jne
movsl
xchg
push
pop
jns
and
and
cmpsb
in
push
push
pop
jns
sbb
xorb
pop
cld
push
into
dec
pop
jns
xchg
adc
push
dec
mov
sbb
jns
xchg
push
cmp
add
pop
or
xchg
push
pop
dec
sbb
outsl
cwtl
adc
sarl
shlb
jne
dec
shlb
out
lahf
in
xor
movsl
xchg
mov
stc
sarb
add
and
mov
cmpsl
jge
lahf
aas
adc
in
mov
jns
scas
cmp
jns
rcr
rolb
fldenv
inc
aas
scas
mov
mov
pop
add
shr
mov
sbb
lods
sub
and
jb
popf
and
out
pop
sbb
cmp
xchg
push
fsubrp
imul
jmp
push
stos
cld
mov
push
pop
jns
adc
in
cmpb
dec
xor
jns
in
pop
dec
pop
adc
pop
in
ja
mov
daa
add
pop
pop
repnz
jge
div
ljmpw
scas
fists
mov
add
fimuls
xchg
and
inc
xchg
push
pop
jns
int3
mov
push
xor
cmp
push
pop
jns
idiv
xlat
subl
inc
jl
in
push
add
nop
inc
sti
aaa
push
pop
jns
scas
bound
fwait
or
fmuls
iret
mov
adc
sub
in
push
dec
xchg
adc
xchg
or
and
enter
pop
push
mov
sub
sbb
ja
pop
jns
jns
addr16
sidtl
add
in
jle
gs
mov
jge
cmp
sbbl
mov
xchg
shl
loopne
cmpsb
in
push
pop
adc
xor
sub
lds
pop
jns
mov
fisubl
mov
pop
jns
xchg
aas
popf
hlt
das
cmc
sbb
push
cltd
in
das
push
cmp
pcmpgtb
or
and
in
movl
inc
std
std
jb
mov
mov
stos
cmp
pop
mov
in
push
fdivrp
ret
push
xchg
shrl
mov
ret
mov
outsb
arpl
les
shlb
inc
repnz
in
in
ja
jecxz
inc
and
sbb
lods
mov
and
pop
clc
les
cltd
push
inc
push
pop
jns
fstpt
pop
mov
push
cmp
and
and
in
xchg
inc
pop
add
sub
xchg
push
pop
int3
cmp
pop
in
mov
subl
pop
jns
scas
mov
pop
rcll
xor
pop
pop
jns
call
pop
in
test
dec
ret
hlt
scas
jns
xchg
ja
fwait
ja
xor
push
dec
loope
imul
xchg
push
pop
pop
ret
jmp
int3
jne
jl
xchg
push
pop
jns
add
mov
pop
add
mul
mov
jne
mov
lret
inc
bnd
xchg
push
pop
sub
push
in
push
jbe
test
pop
inc
push
imul
jmp
cmpsb
or
in
lret
mov
jmp
mov
pop
xchg
cltd
mov
test
dec
pop
call
testb
aad
lcall
or
inc
xchg
xchg
xchg
outsb
adc
lret
lret
dec
pop
adc
or
nop
jp
scas
lret
mov
out
out
mov
mov
out
clc
in
mov
insl
or
jbe
sbb
in
sbb
jmp
inc
mov
aad
scas
mov
cmp
pop
inc
aas
sahf
cmp
jle
inc
test
loop
in
sub
test
scas
loop
ds
dec
out
mov
jbe
scas
add
out
mov
add
sub
inc
loop
cmp
cmc
mov
xor
pop
pop
xchg
mov
mov
in
push
addr16
lret
mov
fwait
stos
mov
mov
inc
out
scas
mov
mov
fstpl
gs
insl
inc
clc
mov
repnz
shlb
pop
fdivrp
jb
mov
lods
sbb
outsl
jne
adc
jns
xchg
push
movsb
cmpsl
loopne
push
pop
dec
out
shrl
push
pop
mov
stos
popf
das
test
inc
scas
mov
push
imull
xchg
push
pop
addr16
scas
mov
xchg
ret
jmp
mov
xchg
cmp
popa
or
leave
add
mov
mov
in
dec
jg
xchg
int
cld
sub
es
mov
scas
mov
inc
enter
dec
dec
ret
aad
mov
ror
sub
cli
movsb
and
stc
sub
mov
stos
inc
std
jg
dec
xor
inc
adc
outsl
xchg
add
aad
jg
clc
aam
repnz
fcomps
jl
out
pushf
out
lret
mov
push
mov
add
sub
pop
push
jmp
int
mov
lret
jae
push
xor
cmpsb
add
sbb
lret
sub
mov
repnz
xchg
push
inc
dec
jnp
add
and
add
dec
push
and
jbe
lods
mov
lea
in
sbb
scas
mov
cs
imul
jg
mov
cmp
ss
push
xchg
dec
int3
inc
adc
stc
repz
cmp
or
subl
lahf
aas
jg
jmp
xor
stos
sti
hlt
xchg
push
sub
iret
mov
loope
test
stos
or
sahf
jecxz
in
xor
jg
cld
addr16
or
pop
mov
sub
lahf
dec
subl
or
andl
lcall
imul
mov
outsl
ret
xor
dec
sbb
in
push
pop
push
adcb
in
insb
xchg
cwtl
shrw
cmp
and
fadds
call
jns
adc
vpsllq
xor
test
in
cmp
xchg
cmpsb
push
dec
popa
and
xchg
lret
xchg
push
jle
lcall
inc
push
in
sub
jg
fcoms
insb
out
mov
jns
popf
loopne
jge
adc
push
pop
sub
movsl
adc
inc
iret
lahf
aas
mov
mov
jmp
jns
in
inc
jmp
mov
add
outsb
fistpll
adc
fstl
adc
insb
daa
mov
js
out
mov
inc
test
inc
int
lret
repnz
in
push
imul
iret
dec
inc
mov
push
or
add
lahf
aas
decl
jnp
sbb
dec
mov
repnz
xchg
push
sub
cwtl
cmp
cmp
mov
in
sub
mov
xor
ja
pop
stc
lea
jo
cli
push
mov
pop
jne
insb
pop
jns
xchg
xchg
mov
lret
push
xchg
std
aas
add
push
pop
aaa
jne
dec
cli
iret
jb,pn
xor
test
lock
dec
ljmp
aaa
sbb
test
jmp
leave
pop
xor
rclb
int
in
push
mov
fildl
das
daa
aad
xchg
push
fdivrp
insb
cmp
add
mov
sbb
push
pop
jns
add
rorl
in
pop
xchg
mov
jns
xchg
xchg
in
out
popa
mov
mov
xchg
push
or
xor
mov
cmc
out
js
repz
cld
mov
mov
popf
push
cs
mov
push
inc
push
jb
pop
mov
iret
psrld
int
loop
or
and
mov
sub
or
pop
sub
adc
ffree
inc
loope
repnz
jge
cmc
outsl
pop
jns
fstp
roll
sbb
and
pop
jle
xchg
push
pop
in
call
cwtl
shll
push
pop
jns
pop
les
fdiv
cli
out
cltd
mov
insl
or
addl
inc
jb
in
mov
frstor
rorb
jecxz
adc
in
std
jb
js
pop
inc
iret
cwtl
dec
xchg
push
xchg
push
fidivrs
sbb
xor
in
mov
cmp
pop
jns
sub
add
and
cmp
xchg
scas
mov
mov
dec
and
sti
jno
repnz
add
pop
repnz
mov
scas
mov
shrl
cltd
shll
lcall
cld
rorl
fsub
roll
fmul
insl
xor
mov
sub
out
jnp
scas
sar
repnz
in
out
jns
inc
dec
mov
scas
or
in
sub
cwtl
push
inc
in
inc
sub
mov
cmp
push
cmp
es
lock
scas
mov
cmp
clc
sub
jg
cmpsb
test
jecxz
repnz
lcall
and
sub
jns
repnz
into
cs
sub
push
xchg
pop
mov
adc
repnz
outsb
mov
push
inc
scas
cmp
or
pusha
sub
pop
loopne
out
dec
repnz
mov
cmpsl
dec
pushf
stos
fsubr
lahf
and
mov
add
fimuls
stc
repz
mov
xchg
add
inc
cli
sub
sub
jle
cld
jecxz
push
daa
in
add
repnz
nop
cmpsb
xor
jmp
xor
xchg
aas
sub
push
sbb
xor
mov
xor
repnz
cmp
mov
outsb
arpl
cmpl
push
pop
jae
jns
push
gs
std
jge
lods
cmpb
or
jmp
icebp
pop
jns
fstl
lahf
adc
add
in
push
pop
mov
in
mov
imul
es
xchg
push
pop
jns
nop
sub
lods
lock
pop
jns
sub
xchg
ss
xchg
xor
jmp
scas
mov
mov
outsl
add
mov
mov
enter
aad
je
popf
jae
lret
sub
mov
sub
or
jo
loopne
scas
mov
xor
ffreep
pushf
inc
enter
pop
les
and
repz
imul
in
add
dec
add
fsubr
in
aaa
cmp
in
push
fimuls
inc
into
inc
cltd
ljmp
jns
fwait
jne
mov
push
in
push
aam
in
pop
jns
sarl
jno
or
xchg
lret
sbb
cmpb
xchg
je
out
out
inc
scas
test
adc
add
ficoms
dec
mov
sbb
repnz
jns
jns
or
xchg
fwait
ret
iret
sub
jmp
mov
cmp
mov
lret
popf
in
push
in
loop
push
lahf
pop
lret
sub
fldl
mov
mov
or
aad
lret
lret
repnz
sti
cli
sti
into
cmp
sarb
or
cmovns
ja,pn
scas
mov
cli
sub
push
pop
pop
pushf
mov
xchg
xchg
mov
sub
scas
mov
and
xchg
imul
jne
stc
sub
arpl
pop
hlt
lret
test
xor
jmp
call
add
lret
out
dec
mov
adcb
sahf
aas
inc
scas
mov
mov
jns
xchg
ja
xor
daa
or
roll
xchg
repnz
int3
cli
or
jbe
jbe
xchg
push
pop
jns
inc
xor
xor
pop
jns
cmp
cmp
addb
ret
into
dec
icebp
mov
in
xchg
les
lahf
jb
test
lods
in
push
pop
and
and
cmp
jns
scas
inc
dec
pop
mov
lret
pop
pop
or
data16
movsl
in
ja
dec
sub
and
int3
mov
pop
xchg
push
pop
jns
cmp
fistpll
add
pop
lds
mul
lahf
sahf
lahf
stos
pop
xlat
pop
add
jo
xchg
xchg
push
leave
pop
aas
adc
mov
cltd
inc
dec
mov
jge
ss
scas
jge
insl
or
push
movsl
jnp
jb
loop
jle
pop
sub
or
mov
jo
jne
sbb
psubq
adcl
cmpsb
repnz
dec
nop
aaa
imul
mov
repnz
aas
adc
mov
mov
adc
repnz
rcrb
cmp
test
scas
mov
mov
into
or
pop
jo
sub
xor
jecxz
dec
jge
push
scas
mov
je
sbb
cmc
jns
in
add
repnz
xchg
sub
aad
mov
data16
aaa
icebp
inc
mov
cs
insl
jg
stos
stos
ja
sub
outsl
and
and
in
inc
dec
xchg
xor
inc
push
and
mov
mov
in
push
cltd
or
sahf
or
fsubl
mov
sbb
xchg
push
pop
pop
filds
lahf
or
fcmovbe
das
push
pop
jns
jmp
cmpsb
shl
dec
dec
pop
jns
fnstsw
mov
sbb
addb
fstl
ret
std
das
movsb
push
jl
fimuls
clc
jb
dec
inc
dec
inc
inc
cmpsb
cli
inc
mov
lahf
aas
jg
mov
mov
jle
cld
stc
repz
xlat
push
cmpsl
sub
push
call
loop
lahf
aas
jg
lret
popa
aaa
mov
dec
mov
stc
repz
arpl
call
cltd
xchg
repz
xchg
mov
cld
adc
imul
or
test
subb
iret
lahf
xor
sbb
mov
data16
stc
repz
jecxz
dec
jle
js
mov
mov
push
aam
aam
jg
scas
mov
sbb
cmpsl
incb
fcmovnbe
jecxz
sti
in
sub
adc
pop
cmc
aaa
in
ja
xlat
aas
mov
dec
adc
in
insl
daa
xchg
xchg
lret
mov
mov
in
in
stos
pushf
inc
aad
paddusw
pop
pop
loop
sub
loop
outsb
mov
outsb
xchg
xchg
cwtl
jae
aas
es
xor
lods
jle
mov
notl
mov
sub
or
hlt
daa
es
inc
std
mov
pop
lds
inc
dec
xchg
adc
and
stc
jge
mov
dec
dec
xchg
gs
xchg
dec
cmp
and
push
pop
outsb
xor
fldt
xchg
cmc
ljmp
mov
sti
mov
sahf
inc
rcrb
pop
jns
mov
or
sbb
push
pop
jns
sub
mov
mov
mov
das
mov
xchg
sbb
mov
push
push
lock
push
lcall
in
xchg
dec
lcall
xchg
pop
sub
out
ret
cmpsb
and
ret
cld
stc
repz
ljmp
sahf
outsl
outsb
and
lahf
aas
jg
imul
fldl
adc
and
das
fiadds
fisubl
repnz
cs
pop
add
insl
pop
push
sub
out
jno
nop
mov
push
xchg
scas
mov
or
insl
lret
mov
xor
cli
mov
and
xor
pop
sub
jle
imul
mov
mov
sbb
incl
nop
xchg
outsl
push
dec
fists
cmp
mov
jg
mov
cltd
je
les
es
jmp
enter
mov
filds
scas
leave
pop
lret
mov
pop
pop
push
sbb
push
pop
mov
aam
ffree
adc
push
outsl
int3
out
stc
and
jle
test
les
pop
je
in
rclb
cld
in
sbb
lock
je
test
xchg
ja
sbbb
repz
in
cmpsb
dec
jle
cld
jb
sbb
add
call
lahf
aas
jg
mov
push
pop
sbb
ficomps
in
jne
bswap
je
je
outsl
rclb
cmc
lret
xchg
push
mov
and
hlt
cmc
pop
repnz
dec
add
test
repz
outsl
fdivrp
sti
jb
xchg
mov
ror
sub
fisttpl
jns
xchg
push
mov
loope
jo
jo
insb
in
push
pop
pop
enter
loopne
xchg
pushf
daa
movsb
pop
pop
pop
jns
imul
sub
or
punpckhbw
lea
loopne
imul
xchg
cli
cwtl
xchg
jnp
insb
in
jg
push
pop
jns
aam
enter
sar
outsb
outsl
clc
adc
jns
pop
popl
rcrb
cmpb
xchg
mov
push
mov
sub
mov
xchg
push
fimuls
push
loopne
mov
bound
xchg
lock
push
jle
xchg
xchg
inc
orl
cmpsb
je
pop
in
pop
stos
jo
shr
scas
mov
xor
jg
loopne
mov
sub
xchg
sub
xchg
je,pt
cld
stc
repz
cwtl
or
push
pop
gs
dec
iret
lahf
aas
jg
das
dec
mov
push
sub
icebp
jns
repnz
xor
stos
sbb
shld
hlt
xchg
ja
pop
mov
add
pop
test
loop
xorps
in
pop
add
sbb
pop
mov
test
mov
mov
in
push
pop
inc
outsb
pusha
mov
data16
movsl
mov
push
pop
jns
mov
sbb
mov
jns
in
add
outsl
cmp
shlb
mov
mov
xchg
push
pop
pusha
cmp
mov
sbb
jge
jl
xchg
lret
lods
xchg
jg
sub
xchg
inc
mov
pop
push
push
cmp
lret
std
cmpsl
jl
sbb
sub
add
fisttpll
xchg
fstps
dec
and
pop
adc
int
int
xchg
push
pop
jns
mov
mov
into
imul
or
jg
dec
dec
push
dec
lahf
aas
jg
outsb
sub
les
fmuls
aas
xor
leave
xchg
sahf
stc
repz
xchg
dec
mov
or
mov
aas
jg
cld
popa
das
jae
mov
addr16
inc
ret
test
push
in
push
push
in
dec
jg
jecxz
jecxz
ja
fbstp
ficomps
xchg
adc
enter
xchg
jecxz
push
jmp
iret
and
in
push
pop
jge
sbb
pusha
mov
cmpb
sbb
push
shll
sahf
xor
lahf
stc
xchg
jle
and
sbb
xchg
add
push
fidivrs
in
pusha
frstor
jge
jl
cmp
pop
lret
mov
push
xor
scas
cmp
xor
ja
mov
sbb
popa
fdivl
jns
in
xchg
sub
lods
adc
mov
xchg
fldt
jae
das
push
pop
loop
cmp
pop
into
mov
das
sbb
in
cmc
add
sub
sbb
push
lcall
in
push
cltd
and
push
jnp
or
imul
repz
cmpsl
and
and
out
lahf
aas
xor
cld
inc
add
call
std
jmp
push
jns
outsl
pop
cli
jo
mov
inc
lret
out
lahf
or
gs
or
mov
daa
mov
push
adc
xor
dec
stos
push
pop
jns
inc
lods
inc
cltd
push
test
jge
xor
pop
les
sub
sarl
sahf
pop
int
fwait
cld
stc
repz
xchg
inc
lods
cmc
shrb
fs
jg
and
push
imul
cld
stc
repz
push
cli
add
fisttps
lods
jg
ja
jl
leave
and
adc
cmpsl
push
arpl
mov
jns
xchg
pop
cmpsb
cmpsl
std
repz
cmp
jns
xchg
push
push
mov
imul
sub
push
pop
mov
xlat
mov
jb
jb
jae
pop
jns
add
lcall
and
xchg
ja
or
dec
inc
out
sub
adc
xchg
push
pop
mov
imul
pop
jns
jo
repnz
and
mov
mov
in
fsubrl
push
mov
jnp
ljmp
scas
test
movsb
clc
adc
test
or
mov
sbb
jns
cli
and
ror
sti
ja
and
test
lock
pop
sub
dec
sbb
sbb
aas
jg
cld
out
xor
in
mov
cmp
sub
add
iret
lahf
or
cmp
xchg
hlt
test
jg
cld
stc
mov
repz
push
mov
aas
xor
jmp
out
push
sbb
mov
dec
inc
xchg
xor
gs
sbb
lahf
aas
jg
pusha
mov
or
inc
stos
or
jbe
ret
repz
cli
inc
test
pop
push
lret
jg
test
and
shlb
xchg
insl
in
out
sub
mov
cmpsl
pop
mov
jns
outsl
ljmp
in
stc
hlt
lret
xchg
ja
clc
cmc
es
inc
xchg
mov
cmp
out
mov
cli
rorl
xor
stc
iret
test
sbb
in
icebp
ret
das
lahf
aas
xor
or
dec
in
aas
scas
jg
sub
push
sbb
hlt
push
push
test
dec
in
ja
adc
scas
mov
bound
xchg
push
pop
jns
fsubs
lcall
jmp
in
mov
adc
lahf
jg
scas
mov
cli
adc
gs
js
in
push
jp
fildl
mov
mov
clc
sub
scas
adc
mov
xchg
inc
jne
scas
jl
test
mov
scas
adc
pop
popf
dec
mov
cmpsl
jmp
pop
scas
inc
xor
push
mov
out
pop
lods
stc
repnz
xchg
inc
icebp
jl
das
adc
adc
in
push
pop
cltd
and
xchg
out
leave
std
sti
std
jb
adc
sub
pop
and
sbb
xchg
push
fidivrs
dec
lahf
inc
dec
mov
pop
xchg
push
pop
jns
test
out
fsubrs
and
sub
scas
push
pop
jns
adc
sbb
mov
cmp
in
repz
inc
and
xchg
ja
fsubrl
xor
mov
inc
sbb
jns
xchg
pusha
daa
lret
jae
jae
mov
mov
pop
jns
xchg
mov
rolb
push
mov
push
dec
enter
mov
outsl
jecxz
push
lods
in
push
pop
ljmp
scas
push
mov
jns
fisttpll
mov
fwait
xchg
sub
mov
imul
lret
xchg
push
mov
cmc
iret
mov
xchg
push
pop
jns
pop
add
mov
sbb
lock
adc
lock
outsl
or
ljmp
sahf
xchg
jno
jge
aad
cld
stc
repz
aam
push
adc
fnstcw
aaa
outsb
test
aam
faddl
stc
pop
dec
neg
test
mov
add
xchg
push
pop
jns
rcrl
dec
movsl
jmp
sbb
pop
pop
jns
inc
stos
loopne
in
pop
cmpl
jg
cld
push
out
xchg
inc
rcrl
cld
inc
dec
jp
push
dec
out
lahf
aas
pusha
adc
adc
cld
stc
repz
push
icebp
xchg
sbb
sub
ficoms
add
fmulp
lahf
aas
jg
ljmp
imul
div
out
jg
adc
jae
mov
repnz
push
pop
stos
das
std
inc
inc
jb
jno
xchg
fwait
incb
jb
std
or
xchg
sarl
lret
and
lahf
aas
jg
pusha
insl
mov
jo
pop
push
out
jnp
out
xor
shr
mull
mov
gs
adc
js
dec
inc
sbb
lahf
aas
sub
mov
and
xor
outsb
cmp
cmp
inc
or
sbb
loope
sub
pop
scas
cwtl
dec
inc
or
cmp
insb
or
repz
into
fisttpl
sub
add
lahf
aas
jg
int
enter
or
loop
stc
repz
push
push
mov
pop
fnstsw
mov
jg
cld
sub
push
lock
flds
mov
lahf
inc
in
iret
lahf
cli
mov
lahf
mov
cltd
insl
cld
xlat
and
mov
repnz
js
jmp
pop
xchg
push
fidivrs
push
kmovb
jp
inc
sbb
sbb
in
das
pop
je
pop
fists
add
dec
int3
pop
loopne
rep
jge
addl
xchg
faddl
cld
mov
cmp
mov
adcb
mov
dec
movsl
xlat
inc
test
xchg
push
shr
xchg
sub
mov
cmpsb
loope
sub
lss
cmp
jp
cltd
scas
repz
lods
push
xor
xor
jg
mov
inc
loopne
pushf
cmp
mov
out
lret
sub
cmp
push
mov
cmpsb
test
sub
mov
jns
pop
stos
pop
add
ljmp
push
push
insl
jns
xchg
rclb
push
push
xchg
xorb
add
inc
inc
scas
aas
test
push
hlt
cmc
cld
stc
repz
xchg
leave
adc
scas
pop
scas
jo
push
adc
das
int
stos
stos
push
xorb
push
adc
xor
ret
sbb
lock
sysexit
les
int3
ja
xor
repnz
pop
fwait
jmp
jg
scas
mov
cmp
mov
out
cmp
cmp
repnz
lea
push
mov
lret
pop
sbb
test
sub
leave
lret
mov
or
stos
movsl
cmp
mov
rorl
gs
push
sub
jne
aad
in
ljmp
mov
pop
scas
enter
pop
xor
lret
scas
mov
dec
add
repnz
xor
mov
lret
jae
cltd
adc
cli
and
cld
stc
or
sbb
pop
lea
out
lahf
aas
adc
adc
into
jne
inc
inc
popf
xlat
mov
ja
movsb
dec
lahf
pop
cli
insl
inc
std
lret
adc
outsb
pop
push
xchg
and
jno
mov
adc
adc
lods
pop
subb
mov
nop
push
scas
negb
sub
pushf
or
insl
loope
mov
inc
inc
sbb
clc
repnz
aas
in
mov
xlat
jo
in
ja
pop
lret
and
add
in
push
pop
jno
bound
adc
imul
mov
pop
dec
pop
jns
pop
loopne
inc
and
je
incb
push
sub
mov
das
cmp
push
loope
lret
outsl
adc
and
out
sbb
clc
imull
pop
inc
out
mov
or
cld
fsub
push
scas
mov
lcall
adc
in
pop
movsb
out
cwtl
xchg
ret
mov
xchg
loop
stc
es
cltd
mov
lret
pop
cmpsl
jnp
std
sub
cs
jle
mov
sub
dec
push
mov
imul
imul
mov
cmpb
push
scas
jbe
cltd
addr16
in
les
aas
loope
cli
cmp
insl
insb
pop
or
jle
insl
jg
loopne
push
sbb
test
fists
decl
cmpsb
popa
jmp
decb
das
jl
cs
in
ja
out
mov
add
xchg
push
pop
and
lods
fmulp
test
push
jb
out
lret
out
push
jne
out
xor
shll
cmp
cld
or
xchg
clc
mov
daa
dec
ret
shrb
pop
jns
lods
jg
stos
out
xchg
mov
insl
xchg
in
ja
dec
pop
bound
and
jg
popf
lea
and
push
sarl
jne
jl
mul
pop
mov
xor
adc
into
fmuls
aas
jg
add
sbbl
das
mov
iret
lahf
nop
popa
pushf
addr16
mov
mov
mov
jmp
pop
jecxz
sarl
repz
loope
and
cmp
jecxz
sub
inc
jg
in
test
xchg
push
fsubrp
sub
es
aam
push
stos
fdivr
mov
xor
pop
cmc
fcoms
xor
sbb
scas
or
lea
outsl
and
or
std
or
mov
clc
repnz
fs
sub
cmp
jns
xchg
inc
mov
add
dec
outsl
cli
adc
scas
mov
pop
xchg
popf
and
aas
loope
sub
xchg
sub
cmp
push
fptan
lret
movsb
mov
imul
stc
lret
pop
xor
push
mov
fwait
xchg
push
fst
dec
mov
ja
or
setb
jns
leave
cmp
xchg
addr16
lea
jno
in
mov
dec
fnstcw
repnz
lock
test
inc
adc
sub
mov
scas
and
mov
mov
lret
pop
insl
imul
jge
fstl
sub
das
xchg
cmpsb
clc
dec
lcall
mov
mov
icebp
inc
mov
mov
push
and
pop
push
arpl
pop
mov
out
aas
mov
movd
and
xchg
das
movsb
rorb
loopne
jp
fcomip
or
test
lock
jns
sub
mov
pop
adc
sub
pop
mov
out
std
pop
fldt
xor
mov
jb
push
mov
mov
stos
imul
push
int3
or
lret
inc
in
push
xchg
rcrl
dec
icebp
out
lret
cmp
mov
lahf
pop
movsl
add
scas
mov
mov
sbb
cmpsb
out
das
test
scas
dec
add
insb
aas
sub
jecxz
pusha
imul
outsl
out
lahf
aas
or
push
fisubrs
stc
xor
out
mov
outsb
out
adc
sbb
cwtl
scas
cld
mov
jae
vmwrite
ljmp
dec
jge
mov
aad
and
sub
sub
jp
sub
mov
pop
and
sahf
stos
imul
sti
repnz
imul
das
mov
push
lret
or
mov
out
aad
in
sub
jo
xor
repnz
dec
call
enter
movsb
adc
push
clc
paddw
repnz
scas
push
cmp
fcoml
scas
mov
pop
inc
inc
and
mov
sub
leave
jmp
mov
push
repz
xchg
cs
sub
xchg
aaa
cli
repnz
inc
mov
fbld
mov
repnz
movsl
fstpl
jle
scas
sub
leave
mov
rcrl
loopne
push
pop
pop
inc
jbe
ret
scas
mov
scas
fstpl
cmp
movsb
pusha
shll
repnz
mov
aad
or
sbb
repnz
std
xchg
icebp
iret
ss
out
cmp
push
sub
lahf
lds
in
mov
mov
jns
and
scas
cld
stc
repz
mov
push
push
lock
push
jle
push
sub
popf
js
sbbl
pop
push
sti
int
shr
cld
ret
out
sub
cmp
push
cmc
shll
lret
lahf
aas
and
out
lea
sbb
pop
lret
mov
loopne
loop
fadds
loopne
sub
cmp
sub
scas
adcb
push
cld
scas
sbb
adc
leave
pop
jns
lret
lahf
mov
sbb
xchg
mov
sahf
fcmovb
lahf
pop
inc
mov
out
jp
pop
in
xchg
lock
out
mov
aad
aad
lahf
pop
mov
fsubrp
cld
stc
add
outsb
out
cmp
jmp
fistps
inc
pop
mov
push
lret
push
jmp
daa
scas
mov
lret
in
lods
sub
inc
and
iret
aas
test
fisubrl
sbb
push
repz
loope
popf
mov
jmp
and
out
clc
in
lea
in
out
inc
mov
in
cld
icebp
push
jne
add
cld
sahf
adc
inc
add
dec
cs
pop
outsl
mov
add
mov
cmp
ret
jp
inc
cld
stc
xchg
dec
arpl
lahf
aas
jg
out
inc
or
lods
jbe
push
das
addr16
repz
push
push
adc
ret
jns
fmuls
mov
push
fdivrp
repnz
shr
stc
lret
inc
iret
leave
push
xor
ffreep
das
mov
sbbl
movsb
mov
cs
bound
jg
or
in
rorb
in
jg
sub
decl
loopne
out
and
xchg
sub
hlt
cmpsl
pop
shl
lret
nop
das
push
inc
loop
or
test
or
xor
ror
out
dec
cmp
mov
mov
pop
adc
push
int
inc
daa
stos
adc
lret
iret
lahf
aas
and
repz
sbb
out
add
cwtl
outsl
popf
dec
movsb
sahf
inc
inc
cmp
jb
xchg
ja
ret
xchg
adc
push
adc
negb
mov
push
mov
in
cmpsl
ret
repnz
aas
push
xchg
push
xchg
out
xor
out
movsb
imul
sub
or
dec
into
and
bound
sub
int3
rcll
out
popa
jns
sub
adc
mov
sar
stc
jp
mov
inc
dec
xchg
push
leave
repz
jge
movsb
jae
imul
iret
setle
mov
sbb
adc
out
push
punpcklbw
fdivrp
repnz
jmp
push
nop
inc
push
bound
pop
add
lahf
jne
mov
sahf
mov
xor
hlt
das
mov
arpl
out
mov
sbb
and
in
outsb
fistps
pop
sbb
jmp
jns
xchg
stc
xchg
xor
loop
jb
inc
dec
mov
js
jae
dec
ret
dec
idiv
stc
and
adc
add
aam
sub
adc
nop
out
cmc
inc
mov
jg
inc
mov
xor
xor
idiv
in
jae
fists
xchg
mov
xor
pop
cld
sti
sub
push
das
dec
mov
imul
dec
push
mov
xor
aaa
incb
ficoms
ja
mov
jl
stc
repz
loop
jbe
fwait
pushf
in
mov
jl
ret
jmp
cmp
sub
outsl
loopne
mov
das
or
inc
mov
sar
repnz
adc
dec
jnp
sbb
cld
out
mov
mov
fcmovnu
and
sub
mov
push
or
mov
mov
scas
mov
out
out
push
sub
imul
mov
mov
cli
insb
dec
fstp
and
scas
push
jb
out
mov
pop
jle
jns
in
dec
das
sti
dec
js
mov
mov
sub
imul
dec
or
daa
into
jg
lcall
xlat
outsl
jecxz
lahf
aas
jg
push
cs
aam
push
xchg
ffreep
movsb
aas
jne,pt
mov
jecxz
repnz
mov
outsl
dec
sbb
push
and
bound
scas
push
decl
mulb
push
jns
lret
mov
mov
pop
leave
data16
mov
repnz
or
inc
ret
cmp
out
jne
test
xchg
push
adcb
dec
jecxz
lcall
jno
sbb
push
jne
scas
mov
sub
or
inc
mov
jg
inc
in
and
popf
xchg
push
pop
jns
pop
or
sub
lret
mov
sbb
pop
scas
rcl
adc
repnz
shrb
and
mov
jg
mov
ss
testl
mov
cld
pop
out
fcoml
aas
lock
ds
cli
mov
jns
mov
stc
mov
in
sahf
dec
lret
mov
test
iret
lahf
aas
mov
pop
lea
add
cmp
loopne
or
sub
push
xchg
cld
push
cltd
xchg
adc
cmpsb
inc
push
inc
iret
lahf
aas
jle
std
inc
inc
icebp
imul
repz
jne
dec
lock
push
arpl
mov
pop
mov
inc
dec
or
cmp
fstpl
stos
std
dec
stos
icebp
mov
in
add
jecxz
dec
inc
sub
aas
sbb
sbb
xchg
sbb
cmc
repnz
in
inc
testb
ja
xchg
iret
adc
xchg
scas
mov
and
pop
flds
cs
lret
mov
cmp
mov
adc
lret
or
jb
or
imull
sahf
push
aam
stc
adc
fnstsw
sbb
lea
dec
lcall
aas
test
push
mov
mov
jg
cld
inc
dec
push
or
jno
mov
mov
sub
aas
jmp
daa
add
mov
addr16
movsb
repnz
aas
mov
and
add
jle
mov
adc
add
divps
outsl
pop
or
pop
rcrb
inc
push
pushf
test
iret
scas
mov
push
xchg
lods
jle
lods
neg
pop
cld
stc
repz
mov
fnsave
adc
pop
jle
je
adc
mov
jg
add
dec
lahf
xchg
cli
push
add
mov
repnz
andl
cld
dec
test
stc
lret
mov
int3
stos
aas
das
std
push
pop
jns
pop
pop
dec
outsl
icebp
out
cmpsb
mov
lods
push
or
pop
jns
xchg
jnp
pop
scas
sbb
pop
mov
xchg
push
lret
mov
mov
incb
push
mov
inc
adc
inc
pushf
adc
iret
lahf
aas
jg
or
dec
fwait
out
mov
out
es
aad
dec
xchg
je
aas
pop
xchg
jge
push
pop
fs
les
test
rcll
jns
dec
xchg
movsb
xor
out
xchg
ss
cld
jb
xchg
jmp
adc
pop
inc
lret
cmpl
loope
sub
xchg
mov
aam
stc
repz
fdivrp
cmp
mov
fidivs
and
das
jg
xchg
lock
pusha
sbb
cmp
lret
popf
and
out
ffreep
xchg
and
loope
nop
xchg
sub
xchg
in
cmpsl
dec
lcall
sbb
jmp
call
inc
push
idivl
fbld
mov
lods
cmp
jg
push
cmp
shrl
push
fsubrp
xchg
cmp
nop
jb
and
test
aaa
fs
xor
flds
jne
pop
cld
shr
push
sbb
cmc
jns
add
push
xchg
mov
shlb
mov
push
jns
mov
das
daa
inc
sbb
daa
scas
jl
add
or
jg
cld
or
mov
in
adc
nop
jge
js
out
xchg
mov
repz
ret
in
xor
fstps
dec
lret
movsl
cli
loopne
pop
jle
mov
push
fistpl
cmovl
xchg
jno
xchg
movsl
push
inc
stos
insl
scas
inc
cli
in
push
jle
jbe
sub
push
stos
and
mov
jns
inc
sbb
fs
dec
rorb
jge
ffreep
xchg
mov
ds
pop
cld
dec
ljmp
push
xor
aas
mov
iret
lahf
pop
mov
xor
daa
out
stc
repz
jecxz
in
outsb
ds
lret
inc
push
mov
out
mov
xor
in
or
and
adc
in
sub
xchg
mov
mov
test
xlat
adc
fsub
and
mov
xlat
and
cld
push
icebp
stos
stc
test
mov
fcompl
in
ja
and
pusha
pop
test
movsl
das
push
add
lret
pop
mov
cmc
cmp
sub
ret
pop
scas
mov
shl
mov
clc
aas
int
inc
dec
sbbl
mov
mov
jo
jge
sarl
jo
adc
cld
or
jecxz
mov
inc
cli
jns
sbb
movsl
mov
xchg
jg
jp
ljmp
repnz
xchg
add
loope
lods
mov
push
imul
lods
pop
icebp
mull
inc
jle
ss
out
jle
lock
movsb
and
push
push
decl
cmp
pop
mov
pop
jns
in
aas
or
sub
repz
push
sarb
jb
push
stc
rorb
scas
pop
aaa
fldcw
in
call
in
rorb
push
cmp
iret
lahf
aas
jg
push
xor
clc
or
and
loop
jmp
repnz
in
push
push
mov
aas
add
jbe
stos
sbb
call
mov
in
mov
lcall
sub
mov
cmpsl
out
xchg
sub
aas
jg
add
subb
jle
ja
mov
les
je
fsubrl
sarl
cld
jge
ret
mov
lock
out
or
push
ja
nop
inc
adcl
in
mov
xchg
lret
push
add
fimuls
inc
daa
mul
iret
lahf
aas
push
mov
jle
add
test
aas
sbb
cld
stc
repz
jne
scas
xchg
sbb
repnz
xor
xchg
mov
sti
push
fists
push
ret
lret
xchg
testl
je
mov
or
sub
int
imul
sub
mov
sbb
jae
cli
in
daa
push
xlat
iret
adc
jp
jae
add
stc
or
cmc
and
popf
jle
dec
je
into
lahf
add
stos
or
push
flds
sub
out
xchg
aad
jbe
cld
dec
clc
in
xor
sub
dec
cwtl
pop
stc
adc
lods
shll
and
enter
push
cmc
ret
icebp
movsl
loopne
test
es
lahf
rolb
dec
in
mov
push
cmc
daa
shll
ret
arpl
pop
adc
cwtl
pop
dec
aas
or
push
pop
jns
inc
and
xchg
xor
pop
jns
mov
xchg
jle
xchg
jns
push
adcl
pop
add
lea
sub
lcall
fmuls
jge
cmp
scas
mov
mov
adc
lock
pop
dec
cmp
pop
sahf
sub
imul
cld
stc
jge
not
mov
aam
outsl
jge,pn
stc
rep
in
mov
push
cwtl
scas
and
jg
add
adc
inc
xchg
int3
mov
lahf
push
mov
or
jp
loopne
repz
sahf
loope
push
sbb
lahf
cli
cmpsl
push
pop
popa
adc
iret
out
xor
aaa
or
stc
pop
cmc
lret
leave
jl
sahf
xor
push
jb
or
push
jg
xchg
ja
xchg
lcall
ja
aaa
xchg
push
pop
jns
xor
pop
daa
rcrb
cmp
cmp
jns
addr16
ds
or
mov
hlt
filds
insb
mov
sti
repz
pop
fidivs
adc
mov
cld
stc
and
js
dec
lahf
aas
jg
scas
lcall
mov
popf
ret
push
mov
test
sub
roll
jg
push
pop
jns
xlat
popl
mov
out
mov
mov
push
daa
xorl
fistps
xlat
mov
not
das
lahf
aas
dec
pop
lahf
dec
sbb
jo
insl
xor
lahf
aas
mov
outsb
push
cmp
and
xchg
in
inc
stc
stc
repz
pop
test
dec
les
lea
mov
pop
xchg
iret
fs
aas
add
mov
sbb
or
push
fs
das
sbb
push
mov
in
lods
jnp
push
xor
stc
or
cld
sar
jmp
ds
jg
pop
xchg
jle
hlt
stc
out
dec
or
pushf
hlt
push
jmp
outsb
data16
adc
repnz
repz
sbb
in
int3
adc
mov
inc
adcb
push
incl
mov
cltd
sbb
scas
mov
jl
push
push
mov
mov
xchg
xchg
xchg
lret
jle
aas
lods
pop
pop
jle
cmp
cmp
outsb
outsb
imul
out
jne
pushf
lret
jl
push
xchg
popf
sub
inc
test
jg
cld
inc
enter
out
icebp
sbb
fs
pop
cmc
jns
xchg
ja
adc
mov
mov
sbb
pop
popf
outsb
fbstp
hlt
test
pop
incb
mov
leave
sti
sahf
mov
stc
repz
mov
mov
dec
mov
xor
push
stc
mov
mov
enter
adc
push
jg
cld
ficoms
cmp
xor
pop
ss
jl
das
pop
push
in
mov
in
adc
lea
adc
popa
iret
das
push
pop
jns
outsb
inc
outsb
mov
pop
rorb
imul
adc
pop
pop
add
and
outsb
shll
outsl
sub
movsb
stos
loopne
aas
out
mov
mov
ret
leave
ss
sub
push
sahf
jecxz
cmp
cld
dec
clc
div
mov
rep
dec
mov
sbb
jg
inc
jmp
in
mov
cmp
mov
cmp
xchg
popf
inc
jle
or
out
pop
push
pop
rcr
cmpsl
mov
les
mov
jnp,pn
loopew
bound
cmp
sub
sahf
dec
push
dec
mov
dec
out
push
mov
pop
mov
test
pop
out
das
or
pop
scas
mov
jns
cmpsb
adc
xchg
out
lahf
mov
sbb
popf
in
and
test
outsb
mov
jmp
and
outsb
jns
xchg
push
sbb
cmp
xor
push
test
and
push
pop
sbb
das
and
enter
pop
pop
xchg
push
pop
jns
shr
or
shl
dec
xor
daa
hlt
jb
xlat
fmuls
mov
std
cmp
mov
jno
out
mov
mov
repz
enter
dec
lret
into
fsubl
cld
stc
shll
imul
pop
daa
xchg
lret
cmp
sub
jno
pop
push
push
subl
adc
jns
xor
jge
push
mull
iret
cld
test
dec
mov
jnp
sbb
call
sub
push
sub
aad
sbb
aam
sbb
clc
in
and
mulb
outsb
pop
dec
cmpsl
fmul
lahf
mov
shlb
scas
mov
or
scas
cmc
jb
push
cld
imul
incb
xchg
xchg
setg
jns
mov
sub
mov
outsb
pop
jns
xchg
xchg
cmp
mov
repnz
cld
pop
pop
into
mov
leave
test
fcmovnbe
iret
lahf
aas
jg
jl
or
push
movsl
xor
mov
jecxz
lea
imul
lahf
mov
jle
cld
stc
mov
mov
fistpll
or
xor
adc
sarl
jg
cld
scas
mov
cs
leave
mov
addr16
fidivs
push
jle
lret
mov
pop
scas
icebp
mov
dec
adc
adc
sub
add
shlb
repnz
lret
xchg
jg
inc
in
popf
sbb
outsl
lret
sub
ds
or
das
nop
adcl
xor
outsl
jmp
push
int3
jbe
cld
stc
xchg
mov
add
ljmp
int
lahf
aas
jg
aam
neg
clc
sub
xor
jo
out
and
add
daa
icebp
repnz
xchg
loop
in
mov
add
call
inc
outsb
mov
aas
mov
dec
cmc
je
shrl
stc
repz
jb
mov
cmp
test
xchg
inc
aas
jg
cld
sbb
xorb
js
mov
filds
jb
ret
push
sub
cld
pushf
push
idivl
jns
fstpl
dec
fwait
out
and
and
mov
dec
in
xchg
xor
jns
fnstsw
aas
roll
pop
iret
imul
cmc
jg
mov
sahf
cmp
jge
iret
jl
jle
adc
nop
cld
stc
repz
inc
rorl
xlat
dec
cmp
adc
mov
sahf
xchg
mov
call
jbe
out
cmp
dec
jl
mov
inc
pop
mov
fidivrl
clc
or
aas
jg
cld
pop
daa
jo
lods
sub
add
iret
lahf
mov
cmp
fdivrs
cmp
pop
stc
mov
out
sub
pop
out
test
push
push
cwtl
je
cs
mov
cld
movsl
aas
pusha
add
xor
lahf
inc
outsl
outsb
das
scas
sbbb
push
lock
add
std
jb
push
repz
aad
cwtl
sbb
pop
incb
cs
inc
jae
lcall
das
movsb
das
fldt
ds
test
pop
cld
stc
repz
or
mov
mov
es
fidivrs
lods
stos
cwtl
je
call
jns
call
xorb
sahf
pop
cltd
jnp
pop
jns
xchg
mov
mov
sub
push
cltd
push
enter
push
xor
ret
out
into
dec
icebp
popl
pop
pop
jns
jae
pop
push
out
adc
out
lahf
pop
ds
ss
aam
jecxz
ja
xchg
std
repnz
repz
push
sbbb
fcomp
lret
andl
out
pop
or
repnz
xchg
sbb
cs
jbe
in
stc
repz
or
fidivrl
inc
lods
lds
je
jg
cld
push
sbb
leave
in
je
jbe
inc
sbb
out
lahf
jmp
adc
mov
sub
loopne
jle
add
mov
inc
fadds
faddl
jo
arpl
dec
repnz
fwait
cmp
nop
sub
cmp
sub
inc
jnp
loop
xchg
cld
dec
cli
repnz
adc
pusha
fldenv
add
mov
ss
or
test
mov
jle
leave
or
add
es
iret
lahf
pop
ds
hlt
outsl
outsl
xor
xor
test
cmp
or
xor
flds
jno
mov
pop
out
cwtl
dec
mov
je
ja
inc
in
out
cmp
jp
mov
loope
pop
push
mov
test
mov
sub
repnz
mov
xor
pop
dec
nop
inc
repnz
push
mov
adc
lock
in
loop
sub
cmp
pop
out
shrb
scas
mov
lods
sbb
adc
into
add
aas
testl
or
fidivrl
jg
push
mov
inc
ja
icebp
push
inc
pop
lret
das
int3
cmpsl
mov
cmp
scas
mov
aam
dec
pusha
mov
mov
pop
jecxz
in
push
mov
push
xchg
add
jecxz
repz
add
imul
jg
out
fimull
cwtl
das
jg
cld
push
sti
iret
pop
add
insb
mov
sub
das
pop
add
in
aam
jecxz
iret
mov
lret
in
loope
mov
ds
xchg
addr16
mov
add
mov
lret
mov
repnz
inc
sub
jle
repnz
scas
xchg
addr16
lcall
outsb
cmp
call
repnz
out
les
fwait
ds
sub
idiv
sbb
jp
sbb
iret
cmp
pop
lahf
aas
jg
jmp
lods
xchg
fisttpl
aad
sub
pop
les
outsl
daa
xor
lret
iret
fiadds
movsb
cmc
pop
shrl
repz
imul
sub
push
lahf
ficomps
lahf
aas
jg
notb
sub
adc
out
fists
ljmp
adc
addr16
sbb
out
cmc
lret
pop
in
xlat
push
ret
test
pop
dec
fs
adc
add
push
shld
out
lahf
outsb
mov
mov
cmc
ficomps
stc
xchg
ja
stc
jnp
scas
ljmp
adc
in
mov
daa
xor
dec
or
xchg
jge
push
jg
adc
imul
scas
fucomp
pop
push
sti
xchg
push
iret
dec
lret
pop
adc
testb
mov
or
jg
and
sub
mov
jg
daa
outsl
aad
dec
cmp
notb
lret
inc
lahf
ret
repz
aaa
sbb
repnz
mov
xor
in
inc
imul
adc
repnz
into
pop
and
adc
sbb
iret
lahf
aas
aas
push
cmp
xchg
sub
sub
fsubrs
ret
into
lds
mov
cltd
leave
or
lret
xchg
notl
sbb
mov
iret
scas
outsb
inc
jl
and
push
lock
in
sahf
or
dec
fisubrs
fildll
mov
xchg
xchg
leave
in
out
lahf
aas
mov
push
xchg
insl
flds
sub
bnd
rolb
xchg
gs
rclb
int
jne
movsb
add
out
xchg
lahf
into
mov
scas
pop
lahf
or
lret
mov
fisubl
int
out
mov
js
leave
xchg
or
aam
jg
jge
iret
aas
test
mov
dec
cmp
pop
pop
fidivs
stc
repz
jbe
push
mov
xchg
adc
orl
sahf
or
out
iret
add
sbb
inc
jg,pt
mov
test
sbb
in
movsb
inc
and
add
loop
sub
jmp
sbb
fcomps
fs
rol
xor
xor
jb
xchg
inc
outsl
lea
scas
mov
stc
pop
loope
in
pop
repz
nop
mov
fildll
cld
cld
stc
cld
in
jg
enter
inc
out
push
mov
mov
sub
iret
lahf
jg
xchg
xchg
in
pslld
sub
hlt
test
xchg
out
push
outsl
mov
stc
xchg
fisubs
int
mov
repz
lods
insl
iret
lahf
aas
jg
fwait
jle
xchg
lds
fistl
sar
stc
repz
sub
mov
add
dec
inc
lods
stos
jmp
arpl
ret
inc
xchg
stc
repz
scas
not
jne
jp
xchg
and
add
mov
mov
stc
cld
cld
inc
pop
outsl
adc
fisubrs
cmpsl
mov
fwait
add
scas
sbb
jns
push
mov
cmp
cld
jb
xchg
mov
jle
pop
mov
pop
jle
out
jmp
popf
jo
das
pop
or
dec
int
inc
movsl
mov
xchg
pop
lea
pop
inc
stc
ret
push
repnz
jg,pt
rcl
pusha
dec
and
jge
jno
shrb
jnp
jmp
stc
add
sub
or
sbb
outsl
push
insl
mov
mov
repnz
dec
fwait
lods
lahf
and
push
xor
out
sbb
outsl
fldl2e
or
repnz
fimull
sar
xchg
in
das
fisttpll
scas
icebp
mov
pop
pop
mov
push
add
in
push
sbb
and
lret
lahf
mov
add
push
pop
js
add
repnz
aaa
fs
pop
loop
loope
push
mov
sar
sub
pop
cwtl
popf
mov
lcall
jg
cld
stc
sbb
xchg
or
adc
mov
xlat
jmp
add
das
adc
sahf
push
or
sti
mov
icebp
jb
sub
pop
add
lahf
mov
cmc
loopne
sub
jle
add
scas
cli
ret
mov
xor
push
daa
or
nop
pop
in
sub
dec
bound
clc
pop
push
cmpsb
inc
into
adc
cld
cmp
xchg
ja
jle
dec
test
inc
mov
xchg
jmp
add
cmp
js
adc
mul
dec
outsb
and
imulb
jl
mov
cld
stc
mov
pop
jmp
fwait
push
arpl
jg
filds
repz
scas
cmp
aas
mov
pop
cmpsl
jecxz
lret
in
adc
pop
cwtl
jl
subb
adc
in
push
pop
push
jne
cmp
xchg
pop
stos
das
push
pop
jns
jle
push
inc
in
icebp
loopne
repnz
pop
add
add
decl
clc
std
movsl
in
shlb
mov
sub
mov
inc
icebp
sbb
aas
jmp
lret
aaa
into
sarb
mov
fsubrp
xor
pop
inc
pop
pop
mov
data16
mov
or
nop
mov
pop
das
mov
lea
enter
lahf
cltd
xchg
mov
jns
call
insl
clc
xchg
fs
jns
sub
add
bound
add
xchg
ljmp
repnz
and
push
push
loopne
sub
repnz
test
cmp
out
push
xor
dec
lret
mov
popa
clc
sub
sub
xor
lahf
data16
fdivs
xchg
mov
cld
mov
mov
stc
repz
rorb
jg
add
mov
and
mov
jge
cmp
cmp
dec
test
jl
mov
divl
lods
stos
and
aaa
pop
jns
xchg
mov
jl
movsb
cmp
mov
test
mov
mov
and
iret
pop
cmp
scas
push
mov
mov
repz
mov
aas
sbb
aas
xor
pop
imul
mov
jae
jno
fmull
xor
or
mov
shl
adcl
or
or
into
xor
sbb
adc
dec
in
je
or
std
xchg
aas
xchg
iret
lahf
hlt
xchg
xor
outsl
lods
mov
mov
test
int
jns
inc
push
cmp
aas
jg
imul
or
mov
dec
mov
stc
repz
enter
or
faddl
sbb
bnd
adc
dec
popf
xchg
xor
lahf
aas
jg
adcb
rclb
cmp
adc
in
or
shrl
cli
and
rorl
std
jnp
sbb
imul
mov
cmc
inc
add
push
enter
pop
jns
and
pop
stc
and
jmp
jmp
repz
out
cmp
es
dec
cmpl
ret
fwait
rorl
stc
cld
stc
adc
mov
cli
das
add
jle
sbb
push
das
cmp
outsl
adc
ficomps
mov
pop
push
add
xchg
addps
frstor
cmp
pushf
repz
lahf
out
fsubrp
push
sbb
adc
inc
fcoml
jl
cld
stc
fwait
push
jle
ret
mov
mov
inc
mov
lcall
sbb
sub
adc
out
lret
call
pop
jmp
jns
or
movsl
dec
fistps
nop
popf
inc
call
es
and
repnz
lock
dec
lds
shll
mov
bound
pop
imul
lahf
outsb
mov
cmp
adc
xor
iret
cwtl
icebp
insl
arpl
adc
lret
neg
lahf
test
cld
push
adc
cld
and
xchg
inc
add
cmp
ss
mov
in
dec
jae
xchg
aas
xchg
cwtl
test
sub
or
test
andb
repnz
or
aas
lret
mov
mov
mov
nop
fs
cltd
fcomp
pop
lret
scas
push
lcall
xor
scas
mov
add
push
mov
inc
mov
iret
das
test
push
cmpl
div
inc
pop
testl
inc
or
daa
xchg
push
repnz
pushl
sbb
loopne
test
add
out
imul
push
mov
xchg
push
pop
bound
lcall
add
into
sbb
mov
or
cmp
push
jg
in
ja
dec
pop
jg
stos
sub
sbb
pop
jns
sub
mov
div
jge
mov
mov
idivl
mov
jg
cld
dec
scas
push
adc
adcl
pop
popf
adc
lahf
aas
les
insl
adc
imul
mov
es
decb
fs
lahf
aas
push
out
popf
nop
and
push
or
js
cld
stc
repz
xor
testb
cmpsb
push
push
pop
adc
mov
pop
and
int3
push
or
iret
lahf
pop
push
js
push
movsb
cltd
stos
out
popa
jp
or
cld
stc
repz
mov
je
dec
xor
shll
cli
lods
xchg
aas
jg
andb
xor
repz
pop
push
cmp
jb
test
stc
stc
dec
pop
and
pop
dec
or
repz
pop
jns
xchg
push
mov
notb
jne,pn
pop
jle
push
pop
pop
aam
test
mov
pop
mov
aas
aas
dec
mov
lock
aas
jg
loopne
sahf
rcll
and
in
and
js
aas
jp
dec
fs
push
pop
jns
mov
rclb
jg
xchg
mov
scas
cmc
in
cmp
pop
fmul
and
mov
sub
cmp
fisubrl
scas
loopne
in
das
clc
push
ja
stc
repz
ret
ljmp
cmp
andb
xchg
push
push
push
in
mov
push
out
lahf
push
xor
out
mov
pop
out
mov
push
ljmp
add
scas
xor
jle
out
mov
andl
pushf
mov
scas
mov
add
inc
adc
pop
jle
jg
je
ret
xor
cmp
jg
aas
sbb
mov
nop
iret
andb
inc
mov
mov
iret
in
out
jle
cld
jns
xchg
pushf
fcoml
stc
outsl
movsl
mov
pop
movsb
xor
daa
into
andl
rclb
out
bound
xor
in
or
sub
sbb
outsl
hlt
lret
xchg
js
gs
push
movsb
pusha
adc
into
and
mov
outsl
sarl
xchg
jo
aam
leave
repnz
sarl
xchg
mov
dec
push
dec
pop
scas
mov
and
repnz
sub
jns
sub
out
mov
dec
jns
add
jmp
lret
pop
cltd
cmp
clc
in
push
enter
fimuls
lods
aas
jg
cld
fsubp
adc
sub
dec
gs
repz
lahf
gs
dec
lcall
push
xchg
std
repnz
push
mov
dec
pop
add
or
jg
mov
jle
adc
ror
orl
cmc
inc
repz
lahf
lret
dec
add
incb
inc
jle
cld
stc
sub
cmpsb
mov
insl
sbb
sbb
mov
rep
and
dec
push
xchg
xor
mov
inc
ja
daa
xor
mov
jle
sti
movsb
leave
outsl
leave
in
scas
mov
add
test
movsb
xor
and
lahf
aas
jg
clc
cmp
enter
in
xor
cld
cld
adc
mov
js
sti
and
mov
movsl
repnz
jle
push
pop
repnz
mov
call
enter
pop
scas
mov
xchg
push
loopne
xor
iret
das
mov
popf
test
jg
cld
stc
cmp
xor
jb
icebp
ljmp
mov
mov
repz
sbb
lds
add
mov
cld
cld
repz
sbb
jl
out
ljmp
repnz
pop
cmp
stos
mov
sub
int3
pop
fisttps
mov
cs
testl
lods
iret
xchg
add
xor
stc
add
cwtl
clc
iret
cld
lods
mov
lret
mov
jl
xchg
pop
jno
and
repnz
mov
popa
nop
ss
add
push
das
and
dec
xor
xchg
sub
pop
cmp
push
add
push
fsubp
out
stos
mov
mov
adc
sub
in
xor
add
in
jmp
adc
jne
add
scas
lcall
loop
fsubrp
and
repnz
mov
sub
pop
or
jle
and
shll
push
test
sarb
and
mov
pop
mov
sub
jns
pop
daa
or
and
sbb
sub
je
xchg
notl
lahf
pushw
and
repnz
mov
push
xchg
mov
cmpsb
out
sbb
aas
mov
adc
repz
lods
fcomps
sti
sbb
push
dec
xchg
sbb
cmc
out
das
jge
imul
lahf
adc
lahf
pop
scas
mov
push
icebp
sbb
jp
pusha
lock
lret
mov
aam
adc
pop
fst
pop
dec
xchg
push
pop
jns
jecxz
mov
inc
imul
in
pop
in
jb
and
shlb
mov
or
aaa
outsl
les
jl
xchg
call
jle
idivl
push
cwtl
aaa
add
adc
addr16
in
das
lahf
xchg
cmp
int
icebp
lahf
mov
push
pop
jns
arpl
mov
sbb
cs
in
xchg
sbb
dec
dec
xchg
repz
dec
pop
lds
icebp
sarb
push
xor
fnstsw
cld
add
jle
or
aas
and
sbb
xor
sahf
shl
xor
stc
daa
sub
and
repnz
lret
push
sbbl
hlt
bound
scas
mov
xor
imul
repnz
xchg
xchg
adc
inc
jns
in
into
test
sti
lock
mov
xlat
jb
push
adc
aas
scas
push
out
popf
xchg
lret
mov
lahf
pop
dec
mov
std
clc
xor
sbb
cmp
repz
flds
out
ss
push
xchg
mov
loopne
aam
aaa
fisubrl
or
fs
dec
fnstsw
lret
or
outsl
mov
jp
mov
in
mov
xchg
add
insl
mov
or
sub
jle
xchg
cmp
or
push
sub
sub
iret
xlat
outsb
xor
les
xor
sbb
pop
dec
pop
call
das
ficomps
cmp
cmp
es
jo
mov
repnz
push
lods
ljmp
into
jne
lret
mov
add
mov
out
cli
repnz
lcall
jb
insl
ret
stc
repz
mov
shrb
add
lods
out
lret
sub
das
dec
inc
popa
and
ret
repz
and
jg
fildll
jmp
outsl
mov
jnp
push
jns
in
dec
dec
je
ja
jo
mov
push
fidivrs
movsb
cltd
scas
aad
push
dec
arpl
ror
jge
in
jle
xlat
mov
roll
lahf
cmpb
add
dec
push
add
icebp
stos
or
repz
into
lods
pusha
xlat
sarl
out
call
cld
orb
stos
or
fiaddl
inc
loopne
out
lahf
add
decb
sub
je
push
push
cld
stc
mov
pop
mov
vmwrite
decb
fsubrl
inc
lods
push
pop
push
das
pop
loopne
iret
cmp
leave
jne
add
cs
pop
jns
repnz
pop
stos
cmc
jg
lret
cmpsb
rcrl
ja
aaa
jmp
or
cmp
movsb
xchg
push
pop
jns
test
pop
push
mov
jb
stos
jnp
sbb
push
aas
pop
sub
jge
div
shl
test
iret
push
inc
daa
aad
xor
or
pop
xchg
test
lahf
scas
ret
loope
repz
lahf
std
pop
push
jns
add
jle
test
stc
loop
sbb
sbb
ss
mov
add
cld
inc
mov
jle
mov
jg
sub
jg
xchg
add
pop
push
or
add
and
push
add
repnz
cld
add
pop
fwait
jb
push
dec
das
jg
cld
push
push
jbe
jo
sub
js
repnz
pop
shl
scas
pop
mov
and
pop
jns
jl
stos
movsl
mov
xchg
rcl
jns
xchg
ja
and
in
dec
xchg
addr16
in
push
pop
xor
add
out
xchg
push
pop
jns
adc
pop
push
test
pusha
sub
pop
jns
imul
stc
push
std
jb
xchg
push
xchg
in
and
scas
inc
fiadds
aas
roll
adc
pop
xchg
bound
jns
aam
cmp
sub
xchg
rolb
mov
fldl
lahf
push
out
dec
push
aas
jp
ja
sbb
jns
sbb
ret
lcall
push
pop
std
jb
ja
fstpl
repnz
outsl
push
scas
rclb
xchg
dec
jmp
xchg
addb
sbb
xchg
sub
aad
ja
scas
push
out
or
in
jl
and
insb
les
sub
xor
iret
mov
push
stos
or
scas
push
push
cli
in
mov
xor
outsb
movsb
mov
mov
cmp
sub
das
out
out
push
pop
cmp
jge
mov
mov
testl
mov
sub
ds
or
aam
xchg
lods
das
in
push
pop
shrb
sub
cmp
notl
mov
mov
mov
in
push
pop
cwtl
std
scas
mov
add
decb
int3
xchg
lcall
in
push
das
sub
jge
jb
sar
rcr
mov
cwtl
fisubl
pop
rcl
xor
pop
jns
dec
loop
pop
pushf
add
lret
aas
data16
insb
dec
xchg
daa
jo
clc
jl
lret
push
enter
idivb
mov
sahf
fwait
out
mov
mov
sbb
repnz
mov
gs
xor
je
std
ficompl
cld
adc
or
add
fcoml
xchg
mov
enter
iret
pop
test
cs
push
and
jg
std
xchg
jb
lcall
in
sbb
imul
jl
ds
stos
div
mov
sbb
mov
jmp
push
shrl
das
mov
mov
sbb
dec
mov
xor
xchg
lahf
pop
mov
push
js
dec
mov
cld
pop
mov
cmc
ja
cwtl
pop
jno
cs
aas
aas
xor
test
imul
lods
push
mov
xor
lret
jle
mov
push
aas
jge
mov
dec
push
cs
mov
lods
mov
dec
mov
jecxz
pop
cld
mov
clc
fcmovbe
mov
mov
mov
add
bnd
fidivs
aas
aas
push
pusha
adc
call
iret
lahf
sti
jg
movl
repnz
repz
sbbl
scas
sbb
repz
push
sbb
les
jle
sbb
push
lods
mov
mov
add
pusha
movsl
jmp
js
out
leave
jp
add
out
inc
fwait
inc
and
adc
jge
dec
enter
out
lahf
aas
shr
add
jle
push
pusha
test
push
pop
cli
in
mov
pop
push
hlt
outsl
outsl
repz
shlb
mov
add
rorb
jg
cld
stc
movsl
les
xchg
xchg
roll
cld
loopne
mov
adc
les
add
scas
mov
shlb
scas
das
mov
jle
repnz
or
pop
sub
aas
lahf
aas
mov
jae
pop
lcall
lret
adc
fwait
loope
repz
jle
xor
int3
mov
ss
mov
mov
aas
cli
lret
push
fbstp
push
or
repz
lahf
fstps
loope
in
out
mov
sub
cld
stc
jecxz
pusha
dec
ret
adc
push
sbb
test
out
lahf
aas
sbb
std
in
inc
das
mov
das
mov
mov
aas
repnz
das
mov
movsb
cs
lods
lahf
adc
add
je
repz
fimuls
cld
cmp
fwait
adc
repnz
dec
mov
add
mov
xchg
sub
cmpsl
or
push
scas
inc
test
repz
jmp
jge
fstpl
lret
daa
aas
in
fnstsw
jg
cld
test
mov
arpl
outsl
in
lahf
in
outsl
popf
xchg
out
fldlg2
cltd
jg
pop
jns
lret
adc
nop
rorl
test
out
push
inc
outsl
out
adc
inc
mov
daa
or
mov
pop
out
les
scas
mov
xorb
xchg
mov
mov
sub
jecxz
sub
jo
jle
cld
adc
jge
dec
cld
iret
rcrl
rolb
sub
lahf
xchg
outsl
xchg
pushf
fsts
lret
mov
mov
ja
sub
shlb
repnz
push
jb
mov
mov
ljmp
daa
mov
cli
in
sub
aas
push
xchg
push
imul
out
mov
and
xor
idivl
pop
jns
cmp
mov
add
daa
hlt
in
and
nop
cmpsb
jp
adc
sbb
push
dec
adc
ja
push
cli
decl
adc
mov
lahf
aas
mov
push
xchg
movsb
or
repz
aam
and
stc
repz
mov
adc
sbb
sbb
jp
and
rcr
pop
hlt
cli
push
jae
clc
jl
jo
repz
add
mov
aam
rcrb
mov
mov
mov
xor
cmpl
pop
lret
lock
aas
jg
push
data16
pusha
lds
xor
and
stc
mov
jge
and
mov
movl
aas
sbb
or
das
out
jo
outsb
jg
ret
xor
or
lret
mov
mov
cmp
mov
aam
scas
mov
shl
mov
fcoml
pop
aas
ret
addr16
jmp
dec
sbb
xor
lret
pop
scas
cmp
dec
mov
das
jmp
les
and
cld
cld
inc
clc
stos
jecxz
call
push
jae
imul
lret
nop
addb
pop
scas
mov
loopne
out
jnp
lahf
ljmp
pop
insl
popa
cmp
xchg
mov
imulb
gs
jp
shrl
aad
add
das
imul
push
pop
sbb
repz
mov
ljmp
lcall
xchg
cmpl
inc
inc
scas
out
push
fistps
addr16
add
in
out
lahf
mov
scas
testb
cld
stc
xor
hlt
bound
out
clc
xchg
and
ja
jl
adc
call
decb
pop
xor
das
test
lcall
push
xchg
lods
mov
fcmovbe
mov
jle
lahf
aas
jg
jnp
push
popa
andl
in
aaa
mov
bswap
pop
inc
lcall
pusha
jle
dec
inc
push
mov
cld
stc
or
push
hlt
scas
arpl
add
adc
aas
push
inc
mov
fnstcw
dec
insb
outsl
enter
call
lret
jno
mov
negb
mov
int
xor
stos
add
xchg
scas
mov
fsubrp
insl
mov
repz
sahf
xor
push
sbb
repnz
orb
add
push
jle
rcr
lahf
aas
jg
jg
dec
inc
jae
mov
in
popl
pop
scas
movsb
jb
pop
cmp
jnp
leave
sbb
sbb
pop
das
jne
and
scas
mov
cmc
xor
mov
aaa
imul
gs
movl
mov
or
xorb
jge
stc
aas
inc
hlt
imul
iret
push
fcoms
push
push
or
mov
xor
mov
pop
mov
jl
mov
stc
pop
cmc
in
xor
push
sbb
jle
out
stos
push
mov
sbb
out
fmul
sbb
stc
add
outsl
pop
adc
push
fbld
in
push
pop
out
dec
fidivrl
xor
xchg
lods
jg
sub
das
xchg
sub
or
scas
mov
cmp
call
dec
scas
mov
dec
push
mov
mov
std
enter
mov
xlat
loopne
adc
lret
xchg
push
jle
fidivl
lret
lods
pop
outsb
cmc
clc
push
push
cmp
pop
jle
inc
push
fsub
jnp
daa
xor
sbb
lretw
xchg
ja
fbld
mov
add
out
and
fbld
lcall
pop
and
jg
pusha
fimuls
sub
dec
sub
stos
lret
pop
adc
add
dec
pop
test
outsb
pushf
cs
in
lock
mov
xchg
in
jp
ret
pop
rcr
popl
sub
fs
loopne
loop
jno
in
sub
lea
mov
clc
and
add
faddl
xchg
jge
dec
sub
negl
jnp
push
repnz
cld
mov
pushf
jb
xchg
push
push
out
sbb
adc
or
pop
push
dec
push
adc
stc
repz
aas
adc
and
jl
cld
mov
loopne
mov
outsl
xor
push
mov
jg
pop
push
sahf
jmp
adc
cmp
iret
cmp
lgdtl
add
stc
hlt
arpl
lret
sub
mov
addr16
push
or
repz
mov
mov
pop
pop
loopne
inc
sbb
sbb
repnz
pusha
dec
add
dec
sbb
scas
mov
in
sub
cmpsb
and
mov
stc
stc
mov
daa
mov
sbb
add
mov
mov
icebp
repnz
add
fildl
mov
out
sti
pop
pop
jecxz
scas
mov
outsb
jge
mov
cmp
call
lret
loope
scas
out
sub
dec
jge
jns
xchg
push
push
sub
movsl
jp
jno
hlt
lock
in
push
pop
pop
sbb
push
adc
std
mov
push
pop
shlb
dec
push
imul
add
subb
push
mul
stc
repz
mov
addb
stc
sbb
scas
mov
add
aas
bound
sub
mov
bound
or
mov
lods
jg
sub
lahf
mov
mov
mov
jae
pop
outsb
hlt
mov
mov
pop
pusha
jb
jne
pop
or
xorb
xchg
mov
out
fcom
mov
jg
test
cmpsb
push
inc
or
adc
add
popf
jns
xchg
push
cmp
sub
cmp
repz
jne
dec
add
dec
xor
mov
daa
cmp
sub
pop
scas
in
push
add
pop
loopne
lahf
aas
lcall
lods
jle
mov
inc
jno
jb
clc
repnz
pop
xchg
pop
pop
xorb
or
cld
inc
cs
jns
rolb
mov
xchg
lahf
aas
cmp
sbb
repz
push
mov
daa
shlb
adc
add
jg
cld
sub
sub
loope
sbb
add
xchg
lahf
ja
iret
nop
push
dec
fnstsw
jg
cld
out
lock
and
cmpsl
mov
add
lahf
adc
push
outsl
cltd
lods
test
push
pop
jns
push
nop
mov
dec
adc
xchg
fcmovnb
mov
nop
xchg
push
stos
sbb
xor
push
add
lret
iret
push
lret
test
push
daa
out
lahf
cld
stc
jae
arpl
pushf
push
xor
test
int3
ja
je
scas
dec
mov
mov
das
cmovle
in
mov
jns
in
scas
out
aaa
pop
push
push
push
dec
cmpl
loop
bound
inc
fadd
insb
mov
jns
out
adc
ret
and
enter
xor
das
mov
or
lods
mov
push
add
lahf
aas
or
and
sbb
jmp
jnp
repz
sub
sahf
mov
andl
mov
addr16
test
adc
scas
mov
mov
pop
push
cltd
popa
and
xor
xchg
test
out
ds
xor
mov
lock
or
movl
movsb
push
outsb
jecxz
pop
adc
iret
scas
lods
jg
pop
scas
push
mov
ja,pt
cld
stc
repz
aas
adc
inc
jb
xchg
test
pop
jg,pt
xchg
or
cmpsb
pusha
gs
aas
jg
movsl
dec
jle
push
jnp
scas
insl
rcrl
lahf
outsb
mov
mov
lret
out
pop
cmc
pop
test
or
sar
mov
jae
fbld
jp
mov
in
sub
fldenv
xchg
sub
push
test
push
sbb
out
ljmp
repnz
inc
fmuls
and
popf
pushf
mov
dec
mov
jo
add
out
jle
mov
loop
das
mov
repnz
fsubrp
lret
inc
inc
jae
pop
scas
fs
dec
pop
jns
xchg
divl
push
std
lock
xchg
sbb
call
xchg
push
mov
pop
adc
mov
xchg
rcr
mov
lcall
xchg
fmull
mov
mov
pop
stc
in
in
mov
jns
sub
adc
jns
xchg
push
aaa
or
xchg
pop
mov
cmp
pop
or
popf
push
pop
loope
jecxz
das
adc
cs
out
loope
stos
hlt
in
test
cld
lods
add
sub
cli
hlt
xor
or
jg
iret
das
orb
out
inc
add
sbb
sbb
mov
fcomi
out
ret
push
arpl
cwtl
inc
fdivrl
movsl
sub
mov
mov
in
into
sbb
out
stc
stc
xchg
lock
in
add
test
mov
iret
das
sub
jb
fwait
xor
js
mov
xchg
cmp
dec
push
lret
pop
inc
and
mov
in
push
iret
cmc
xchg
add
test
add
inc
mov
inc
push
in
mov
lret
add
pop
lret
xadd
cmp
xor
test
pop
cld
mov
jge
dec
add
dec
adc
ficoms
push
mov
aas
into
mov
dec
jno
cld
stc
out
mov
adcb
mov
pop
test
dec
int3
cmp
sub
pmaddwd
and
repnz
movsb
dec
jnp
cmp
push
inc
mov
outsl
shll
adc
pop
stc
add
xor
mov
cld
xor
mov
mov
fcoms
iret
lahf
aas
aas
push
jb
sub
fwait
orb
dec
adc
in
mov
out
sbb
cmp
lret
inc
fsub
imul
push
mov
lret
sub
xchg
iret
and
stc
repz
cmp
stos
ffreep
dec
std
outsl
out
mov
imul
jg
xchg
mov
mov
lret
es
adc
pop
ds
inc
mov
orb
aad
shrd
rorl
mov
ds
jns
lds
int
incl
push
and
push
pop
ltr
dec
lods
jo
adc
push
pop
jns
sbb
push
mov
push
add
pop
pop
jns
popf
cli
pop
stos
push
and
int
les
aas
pop
das
adc
popa
dec
imul
imul
insb
sbb
sub
mov
fsubs
repnz
jle
pop
clc
out
outsl
fists
movsl
or
scas
mov
dec
adc
rcrb
sub
sbb
jge
cltd
into
movsl
jle
repnz
lret
sub
cmpsb
sbb
xor
ficomps
xchg
cld
mov
sub
mov
test
leave
push
andl
scas
mov
and
push
testl
dec
pop
jmp
cmp
jle
cld
stc
repz
mov
sub
fs
inc
inc
inc
movsb
das
aas
jg
xlat
clc
test
jno
fidivrl
repz
setle
add
inc
mov
lahf
adc
jno
stc
inc
or
fcmovbe
adc
jno
jle
cld
sti
sbb
std
lret
fsubp
aas
cmc
xchg
lahf
aas
jg
stc
ss
cwtl
adc
leave
cmpsb
stc
fimuls
add
sub
add
aam
out
jle
sbb
incb
push
test
incb
in
jle
das
jecxz
adc
out
xchg
mov
insb
add
das
scas
mov
ficompl
push
sbb
pop
mov
dec
mov
xor
cld
stc
repz
jl
ja
inc
movsl
sub
cmp
jno
int3
sbb
lahf
aas
jg
pop
cmc
in
lret
dec
fstpt
cmp
out
ret
dec
lret
decb
cld
stc
repz
mov
dec
mov
dec
add
jle
shll
pop
dec
test
sbb
sahf
pop
jle
repnz
push
adc
inc
test
mov
lret
lahf
jb
aad
push
push
call
lret
out
clc
clc
lods
mov
lret
into
fdivr
std
jb
lcall
dec
daa
std
jne
jg,pt
inc
out
mov
mov
aaa
aad
aas
cmpsb
pop
sbb
pavgb
repz
lahf
out
xchg
iret
enter
adc
xor
xor
stos
push
aad
push
add
and
cld
stc
add
movsl
lock
pop
pop
das
addl
iret
lahf
pop
sbb
xchg
inc
inc
xor
stc
repz
mov
test
clc
add
jg
add
jl
shlb
ret
mov
cmp
and
std
punpckldq
dec
pop
daa
xchg
iret
lahf
aas
and
adc
out
stc
repz
push
jecxz
ds
lcall
jg
cld
dec
or
xchg
lock
movsb
int3
push
shll
lahf
xorb
push
push
push
out
mov
push
repnz
dec
fisubrl
aas
dec
repnz
imul
mov
scas
mov
xor
pop
aas
scas
mov
fcomps
mov
popf
ja
mov
popf
sahf
mov
rorl
aas
xchg
mov
mov
pop
movsl
fildll
sbb
mov
jl
lahf
aas
lcall
cs
int3
inc
rorb
sbb
or
movsb
pop
fscale
insb
jo
sbb
in
push
in
enter
push
mov
lahf
or
cmp
daa
mov
es
stc
repz
jmp
push
lret
fldl
in
jg
cld
pusha
cmpb
hlt
ret
cli
sub
test
out
lahf
sbb
xchg
cmpsl
arpl
and
push
aad
cmp
pop
mov
scas
mov
leave
gs
mov
xor
ljmp
sub
call
cs
sub
fldl
jns
fstpl
pmaxub
lods
and
orl
fbld
mov
mov
dec
pushf
inc
das
push
pop
jns
or
sbb
scas
cltd
cmp
das
xor
adc
aas
daa
hlt
stos
into
mov
cld
stc
xchg
inc
inc
addl
notb
in
popf
fists
mov
sbbb
pushf
sub
out
xchg
or
aas
adc
push
mov
shrb
jecxz
out
push
iret
mov
mov
pop
lret
xchg
push
mov
sub
rcrl
ret
dec
mov
stos
mov
fsubrp
outsl
jno
xor
scas
add
pop
xchg
aas
jg
fidivs
mov
insb
std
bound
inc
mov
add
mov
pop
sub
iret
lahf
pop
dec
push
movsl
mov
adc
cmp
jns
mov
iret
lahf
aas
aas
out
shrb
mov
add
sbb
dec
jmp
out
popf
jge
test
pop
jle
repnz
repz
daa
lods
loopne
outsb
mov
xchg
push
fidivrs
movhps
xchg
push
pop
jns
ss
mov
inc
subb
shlb
icebp
lcall
jno
jg
cld
xchg
sahf
int
js
push
pushf
out
xchg
inc
mov
adc
daa
inc
push
jge
lods
ja
inc
jl
lcall
sahf
or
jns
mov
jp
mov
ja
cld
xchg
mov
xor
pop
out
xor
mov
in
rcll
pop
xchg
dec
push
pusha
xor
xlat
adc
in
push
mov
dec
add
cmp
mov
xchg
out
popf
inc
mov
outsl
movsl
xchg
out
out
mov
cwtl
or
pop
mov
ljmp
jle
roll
lret
jns
popf
ds
shll
bound
sub
xlat
aam
je
rorl
mov
mov
imul
aam
lahf
cld
subl
xchg
insb
ljmp
jecxz
icebp
out
xchg
dec
pop
loop
inc
or
cld
push
push
fcomps
or
mov
sbb
lret
mov
insb
test
call
jno
repnz
or
jns
movsb
xchg
pop
mov
dec
subl
sub
jle
dec
lret
aaa
outsl
xchg
and
mov
adc
out
scas
mov
mov
test
fwait
adc
iret
lahf
movsb
xor
or
jbe
stc
cld
stc
rep
sub
cmp
jmp
jle
rorl
adc
pop
divb
das
push
pop
jns
lods
push
imul
jnp
xchg
addr16
xor
xchg
mov
outsl
aad
push
mov
hlt
adc
jl
stc
repz
movsl
push
xchg
leave
push
lds
jg
sub
jno
push
fs
xchg
push
pop
jns
lock
fisttps
and
adc
mov
jo
int
fadds
repnz
mov
sbb
mov
pushf
iret
pop
mov
pop
push
xor
in
stc
repz
xchg
call
aaa
int
loop
cmp
enter
or
push
popa
mov
lahf
aas
mov
shll
testl
out
cmc
nop
or
jb
lods
sbb
icebp
mov
scas
push
fidivrs
loopne
mov
cmpsl
cmp
rcrl
sub
jns
fstl
lahf
or
loope
push
mov
in
push
pop
movsb
dec
sti
sbbl
arpl
jg
pop
jns
fdivrp
inc
push
enter
mov
dec
jo
sub
out
jp
js
pop
repz
stc
repz
push
pop
in
add
std
pop
andb
call
rorb
mov
xchg
movsb
mov
xchg
jg
into
jmp
lock
popa
data16
call
add
dec
outsb
sarb
dec
fadds
fbstp
aas
jg
cld
cs
xor
cs
or
push
sub
push
cmp
repz
lahf
mov
clc
popf
sub
and
stc
pop
push
stos
ret
bound
mov
mov
aas
shlb
and
dec
push
pop
jns
mov
mov
ret
jns
mov
or
pmulhuw
xchg
ja
out
sbb
sbb
out
jnp
lret
hlt
push
mov
mov
popa
sub
nop
push
mov
push
pop
scas
mov
popa
xor
mov
and
jp
aas
test
in
ja
mov
aam
aam
jo
xchg
push
pop
jns
xor
aad
pop
icebp
mov
das
das
cmc
lret
insb
popa
and
fstps
daa
leave
inc
xchg
loop
sbb
iret
aam
pop
iret
cld
stc
repz
fldt
in
movsb
loop
xchg
fs
jl
pop
pusha
xchg
xor
mov
inc
leave
jmp
pop
xchg
and
leave
out
stc
sbb
stc
repz
inc
cmpl
lea
xchg
lahf
aas
jg
mov
dec
je
ljmp
jns
fldl
and
and
in
push
and
jb
hlt
test
sub
lcall
jg
sub
pusha
add
aad
cwtl
aas
jle
repnz
sub
into
mov
jo
repnz
aas
xor
lret
shll
lret
mov
cmp
out
pop
adc
repnz
int3
xchg
lea
call
out
cli
sti
inc
stos
fstps
pop
call
cld
stc
repz
add
sub
xor
jl
sarl
stos
inc
pop
pop
inc
stc
xchg
cmpsl
dec
fdivs
cld
xor
push
pop
movsb
sti
imul
mov
leave
lret
fidivrs
lahf
aad
and
les
test
cmp
ds
dec
push
outsl
pop
jno
ljmp
cld
mov
adc
sbb
hlt
cmpsb
dec
jnp
leave
aas
lcall
repnz
lahf
pusha
popa
mov
push
hlt
push
mov
mov
out
outsl
ficomps
into
push
adc
rep
test
fbld
mov
push
clc
in
icebp
and
mov
mov
fbld
pop
test
or
push
pop
je
sub
inc
pop
and
adc
pop
jns
icebp
dec
xchg
adc
xor
xor
xchg
xchg
imul
push
xchg
push
fsubp
inc
fs
cmp
or
adc
jns
imul
ret
jp
mov
fdivs
add
sub
aam
cmp
jns
xchg
push
call
scas
push
dec
pop
ja
xchg
push
pop
mov
xchg
rcl
jnp
mov
mov
xchg
push
pop
jns
jae
lcall
sub
mov
mov
call
int
icebp
out
jle
repnz
lods
xor
mov
mov
cli
in
sub
mov
call
mov
in
sub
push
mov
xor
mov
xor
inc
pop
cs
ret
ret
repnz
cmp
pop
ljmp
pop
jb
mov
adc
in
cld
in
xorb
mov
push
cltd
cwtl
popa
iret
aas
mov
mov
jae
aas
mov
and
sub
aaa
mov
jle
jl
mov
mov
movsb
mov
jb
popf
outsl
cmpsb
mov
push
dec
sbb
stc
repz
pusha
insb
insl
push
add
pop
mov
in
pushf
testb
loop
mov
out
lahf
imull
shlb
adc
jl
cld
stc
adc
in
leave
pushf
mov
stc
push
mov
xchg
ja
jecxz
mov
cwtl
dec
inc
xchg
out
push
std
pop
add
mov
pop
cmp
push
pop
cs
mov
cmp
adc
push
pop
jns
insl
ljmp
enter
aaa
cli
adc
fsubrl
dec
mov
cmp
das
jno
add
mov
push
inc
in
aaa
shlb
pop
jno
loop
ss
leave
jle
pop
jns
push
call
jno
or
fcoml
in
inc
jb
fcoms
add
test
out
aaa
sub
or
repnz
mov
sub
bswap
xchg
jg
insb
in
inc
adc
jle
mov
mov
pop
mov
xchg
mov
outsw
cmpsb
cmpsl
cld
stc
repz
stos
scas
dec
push
jo
push
mov
mov
jb
xchg
lahf
aas
jg
nop
xchg
stos
xchg
dec
andb
pop
repnz
push
stos
pop
sbb
hlt
mov
push
fs
pop
scas
mov
sbb
dec
cmpsb
sahf
loopne
push
test
ss
enter
scas
jl
jns
stos
cltd
daa
xor
nop
adc
das
push
pop
jns
out
lods
addl
pop
and
inc
push
scas
jne
dec
aas
xor
call
xchg
bound
imul
push
pop
jns
adc
jo
or
mov
add
scas
mov
xchg
cmp
and
movsb
fwait
inc
push
mov
cld
imul
out
dec
jl
dec
imul
sub
inc
cmpsl
fldt
testl
xchg
jle
iret
mov
in
shrb
mov
imul
mov
mov
adc
mov
cmpsl
or
pop
pop
jns
mov
sub
jp
fsubr
lahf
das
in
jg
mov
bound
pop
es
out
and
scas
ret
sahf
sub
dec
stc
mov
enter
in
hlt
jle
xchg
enter
cld
cld
inc
imul
inc
xor
lahf
add
cs
add
shr
mov
sub
cli
shrb
mov
scas
push
xchg
mov
insb
mov
repnz
pop
bound
add
mov
mov
test
cmp
jg
and
cmc
xchg
jne
scas
mov
aad
fidivs
jno
mov
push
xchg
iret
mov
xorl
adc
stc
repz
inc
push
cmp
paddd
push
andl
sbbl
cmp
cs
inc
out
sar
cld
xchg
js
and
das
push
ja
call
das
aas
jg
outsb
outsl
mov
imul
xchg
push
pop
jns
outsb
movsb
loopne
fdivrp
sub
repz
sbb
in
test
lea
pop
cs
into
mov
outsb
mov
iret
adc
iretw
push
jne
pusha
adc
hlt
rcrl
pushf
pop
adc
fisttps
nop
out
dec
jge
fidivs
jno
jnp
sub
scas
mov
stc
push
mov
cmp
mov
xchg
xchg
out
sub
sbb
jns
mov
orl
stc
repz
mov
fnstcw
jge
mov
mov
mov
repnz
scas
pop
or
iret
aas
orb
mov
jmp
in
or
push
jge
popa
insl
ja
jg
cld
ds
iret
and
pushf
iret
pop
movsl
pop
jno
and
pop
inc
jo
lock
out
and
lods
pop
insb
pushf
mov
bound
or
fiadds
std
outsl
loope
scas
mov
xor
or
std
shrb
lret
sub
testb
pop
inc
vdivss
in
cs
add
leave
aam
in
sbbb
ds
repz
lods
jnp
push
repnz
es
scas
lock
xor
mov
loop
pop
addl
pop
incb
fbstp
in
sub
pop
adc
sub
out
js
adc
sub
inc
cld
sbb
lahf
sub
fcoms
lret
outsl
stos
popf
ds
dec
sub
and
scas
lahf
or
cmpsl
stc
repz
sahf
incb
push
add
rclb
stc
cld
cmp
fnstcw
push
add
jg
sub
mov
jmp
fs
scas
mov
dec
dec
aaa
cwtl
inc
xor
rcrl
iret
scas
addb
or
add
fimuls
repnz
loope
cmp
xor
pop
push
jle
jb
jns
mov
jno
rcl
lret
lahf
aas
decl
mov
jb
or
xchg
int3
sarl
cmp
stc
jl
cld
stc
insl
aas
mov
xchg
mov
int3
inc
lahf
pop
sbb
scas
insb
das
shlb
out
sahf
icebp
or
std
scas
cwtl
adc
mov
cld
aam
sub
mov
scas
xchg
push
fcomps
inc
jg
jmp
popl
mov
psraw
fbstp
into
ds
adc
mov
testl
aas
and
outsl
loopne
sahf
pop
sarb
dec
sahf
addl
stc
cmp
lds
ds
repz
sahf
insb
cmp
or
xchg
sti
cld
dec
jge
cli
loop
les
je
stc
pop
mov
scas
sarl
push
repnz
mov
icebp
push
call
pop
jns
jg
in
popa
pop
xor
scas
lds
loope
pushf
lcall
sub
jge
call
jp
lret
xchg
push
mulb
addr16
aas
movsb
bound
outsb
es
cmc
mov
pop
fistps
or
mov
out
inc
push
pop
aaa
add
xchg
mov
lret
mov
xor
adc
scas
mov
inc
call
push
pusha
lahf
cmpsl
cmc
cltd
push
sbb
out
xchg
sub
mov
lret
mov
adc
mov
or
stc
repnz
push
movsl
ljmp
push
mov
clts
jne
lock
popa
sbb
mov
and
jle
and
cmp
push
jnp
call
pop
xor
in
ja
repnz
and
ljmpw
into
inc
popl
jb
stc
push
neg
add
rcrl
in
enter
jg
mov
inc
fbld
and
xchg
push
pop
mov
mov
sub
xlat
push
popa
pop
iret
and
jo
jp
or
mov
imul
jnp
jns
cmp
push
cs
dec
mov
fstpl
cmc
jle
jbe
cs
lcall
addr16
bound
xchg
sbb
mov
repz
mov
insl
sub
fsubl
pushl
push
arpl
push
rclb
mov
test
loope
jmp
push
imul
stc
repz
jb
inc
sar
popf
int3
mov
jne
aas
jg
cld
push
fsubp
push
or
xlat
sbb
je
es
add
ret
je
cmp
cli
mov
or
jg
cld
sahf
data16
std
shrb
ror
aad
shrb
mov
xchg
lahf
adc
sbb
xchg
cli
xchg
cmp
les
xchg
push
fsubp
push
fs
out
enter
arpl
and
jb
sti
mov
ss
pusha
faddp
mov
ret
js
lret
stos
fsubrl
gs
ljmp
stc
sahf
xchg
rclb
push
adc
xlat
insb
lock
lret
sub
and
subl
pop
jns
add
mov
fcom
rcrb
test
repnz
inc
cmp
xor
jp
lahf
mov
repnz
aam
inc
jno
xlat
loopne
xchg
xor
std
cmc
dec
sub
mov
cld
stc
repz
mov
jns
mov
daa
aam
pop
add
addr16
call
and
outsl
stos
push
call
sub
stc
pop
shlb
outsl
push
pop
lock
repnz
inc
sahf
jnp
dec
and
jle
cld
stc
popa
outsl
pop
mov
cmpsb
adc
jb
dec
lahf
aas
aas
adc
mov
shlb
aaa
xchg
mov
pop
test
leave
cltd
arpl
lahf
sub
outsl
add
into
sub
sbb
xchg
push
daa
dec
mov
mov
pop
fsub
jno
lret
or
cwtl
mov
dec
xchg
push
dec
ja
testl
outsl
cmp
push
jl
cld
sbbb
stos
jo
and
mov
lret
ljmp
mov
sbb
ret
repnz
rcrl
inc
scas
push
mov
fcomi
lret
lret
or
cmp
xor
mov
pop
adc
scas
cmp
cmp
iret
lahf
aas
xor
repnz
loopne
xchg
and
cld
stc
repz
and
movsb
jbe
fcmove
xlat
out
push
jle
movsl
jle
jle
movsl
jmp
repz
clc
inc
in
daa
and
fisttps
bound
jmp
aas
jg
xlat
xor
jb
iret
jp
out
lcall
pop
cmp
stc
sar
je
dec
sbb
jae
pop
sbb
insl
scas
push
jecxz
es
ja
imul
jnp
dec
in
cld
jb
outsl
rol
ljmp
out
add
scas
lock
add
out
mov
lret
jecxz
aas
sbbb
cmpsb
hlt
mov
jecxz
sub
ja
sbb
cld
stc
repz
iret
and
mov
push
dec
in
xchg
lahf
aas
jg
mov
jmp
sub
add
jl
sub
jmp
jle
test
cmp
pop
mov
stc
repz
jle
mov
xchg
mov
test
popa
and
scas
mov
dec
adc
mov
push
push
hlt
out
xchg
sub
das
sub
adc
mov
inc
push
stc
repz
and
or
std
mov
insl
sub
mov
cmc
pmulhw
into
mov
mov
scas
mov
and
in
sbb
inc
fcompl
repnz
or
fsubrl
mov
xchg
jle
cld
jnp
das
pop
adc
or
xchg
ja
stos
xchg
aas
and
mov
inc
out
rol
es
pusha
pop
xchg
loope
xor
inc
xor
dec
add
add
mov
into
mov
das
decl
imul
lahf
or
add
xchg
push
pop
jns
cmp
cli
dec
frstor
xchg
xchg
loope
sti
fists
add
mov
fisubrl
mov
iret
lahf
test
pop
ficoms
jg
cld
stc
jnp
push
inc
xor
test
jne
out
lahf
aas
loopne
int
pop
leave
gs
sub
loopne
cld
stc
repz
insl
pushf
fistl
mov
cs
jo
inc
out
inc
mov
and
mov
push
fwait
scas
mov
add
sbb
aas
mov
push
push
sub
insb
and
stc
cld
scas
arpl
daa
sub
imul
imul
negl
lcall
pushf
mov
mov
cltd
push
adc
pop
jmp
out
pop
popa
mov
sub
mov
jns
mov
cmp
inc
outsb
out
xor
push
in
push
pop
imul
add
push
and
push
mov
and
subb
xor
stc
cld
into
test
jg
test
lahf
aas
mov
hlt
adc
in
je
inc
repnz
ret
out
ret
addr16
bnd
jns
pop
shrb
or
cmc
xlat
push
pop
lret
sbb
jecxz
pop
or
mov
pop
pop
jns
mov
leave
cmpsl
test
repz
outsb
xchg
out
fmull
clc
sub
lret
ret
jg
xchg
sub
scas
icebp
test
xchg
fmull
mov
scas
mov
xchg
test
sarb
sbb
push
pop
scas
mov
cli
pop
std
push
popa
jle
in
popf
lahf
sub
call
cmp
adc
cmpsl
repnz
in
imull
shlb
lret
sub
out
shrb
fstl
call
popa
pop
jno
enter
aas
dec
test
mov
out
xorps
inc
jae
mov
test
dec
sbb
sbb
mov
xor
hlt
dec
movsl
fs
jle
popf
inc
jg
pop
mov
fdivr
pop
scas
mov
add
fucom
xchg
outsl
push
mov
xor
pxor
adc
push
jl
jg
mov
jg
negb
imul
std
adc
lret
cmovnp
lahf
jne
outsb
mov
cld
stc
test
stos
lcall
negb
aas
jg
ss
mov
dec
out
sub
lds
dec
xchg
inc
stc
repz
push
jne
mov
dec
adc
loope
aas
jg
cld
loopne
js
cmp
push
imul
or
out
lahf
add
popa
sbb
pop
xor
gs
insl
cli
cs
jmp
in
push
xchg
int
mov
pop
adc
cmpl
mov
cltd
ret
mov
push
pop
jns
scas
inc
int3
jnp
pop
cwtl
push
push
lods
orb
js
pop
int
and
bound
das
adc
decl
stc
repz
jl
xor
shl
fists
adc
cmp
mov
in
arpl
lock
enter
ds
cmp
repnz
lret
pop
mov
adc
imul
jmp
and
lea
in
lahf
jg
pop
les
inc
bound
jl
mov
ljmp
fcompl
in
ret
fdivl
adc
pushf
lahf
mov
sbb
gs
insl
mov
cld
sar
ret
fistps
pop
lahf
pop
mov
mov
mov
cmc
jno
stos
bound
mov
scas
xchg
sub
rorb
sbb
data16
mul
xchg
dec
xor
cmc
jne
pop
inc
add
stc
cld
stc
mov
lret
repz
push
xchg
xlat
popf
ja
sub
jle
lods
stos
sbb
out
outsl
add
test
push
scas
or
xorb
fidivrs
or
xor
les
sbb
repnz
ja
insb
leave
inc
ror
shlb
in
pop
cmc
and
outsb
call
aam
nop
iret
lahf
aas
loope
mov
push
bound
cld
stc
repz
mov
adc
sbb
sahf
stc
mov
pop
jle
scas
cmp
mov
stc
repz
ret
pop
sbb
jg
js
sub
sarb
iret
xchg
inc
sub
jle
sti
cs
xor
xor
lret
insl
dec
jge
pushf
lea
stos
jp
clc
mov
cltd
stos
or
push
push
pop
jns
imul
push
out
fstpt
les
xor
xor
cwtl
lret
mov
push
repz
lahf
gs
push
out
xor
sbb
ret
inc
add
cmc
and
mov
jns
or
cmp
pop
adc
lea
xor
pop
jns
imul
push
dec
scas
ds
dec
push
mov
mov
xor
cwtl
push
pop
notrack
fisubrs
mov
sbb
ljmp
pop
mov
in
fwait
testb
loopne
fidivrs
lret
out
lahf
ror
jne
mov
dec
aad
inc
std
mov
pop
es
stos
hlt
lods
jbe
jg
insb
dec
dec
imul
add
out
sub
imul
mov
push
mov
jg
cld
stc
gs
insb
cmp
adc
mov
das
lahf
aas
mov
push
lret
pop
mov
sti
aas
xchg
sub
jns
xchg
movsb
imulb
push
pop
jns
pop
add
push
lret
xor
push
rclb
dec
and
dec
dec
and
cld
pop
push
sbb
mov
or
out
in
or
aas
jg
outsb
push
xor
lods
inc
sbb
lahf
lret
pop
adc
xor
mov
sar
dec
jno
call
pop
fidivrs
sbb
insb
popf
or
inc
out
pop
insb
lret
adc
xchg
push
adc
pop
jl
iret
sbb
sub
cli
pop
pop
pop
pop
cmp
aam
sub
mov
or
jecxz
iret
lahf
shrl
push
add
mov
pop
dec
out
lahf
pop
sahf
adc
dec
mov
in
arpl
in
out
jnp
push
ret
into
add
xor
xchg
push
lahf
push
aam
scas
xchg
cmpsb
in
push
pop
das
jle
cmp
data16
idivb
lcall
sbb
jl
aam
push
xchg
push
loope
sbb
data16
in
mov
je
notl
and
jmp
mov
pop
out
outsl
mul
fsubrs
imul
loope
inc
pop
jns
push
pop
inc
out
adc
cmpsl
sub
inc
xchg
cmpl
jb,pt
lahf
jmp
stc
insb
std
lcall
lahf
lret
lret
sub
das
dec
cmp
std
add
data16
dec
lret
mov
mov
mov
jecxz
and
sub
test
movsb
inc
in
add
sti
repnz
jnp
adc
sub
dec
pop
aaa
pushf
jno
movsb
das
scas
lods
or
outsb
pop
repz
push
mov
cltd
push
inc
jns
cli
pop
xor
xchg
sub
mov
inc
jno
fstpt
repnz
mov
push
mov
pop
in
mov
mov
ljmp
stos
push
repnz
or
pop
cmpsl
ss
xchg
dec
lret
mov
test
add
sub
pop
adc
roll
scas
ljmp
dec
fisubs
lahf
cld
cld
inc
jg
rolb
add
xor
cmp
mov
jle
jecxz
mov
xchg
ja
iret
mov
cld
mov
pop
into
cmpsb
pop
fisttpll
fistl
jno
and
dec
subl
cmpsb
dec
sbb
cmpsl
inc
jmp
repz
lahf
mov
mov
popa
mov
mov
jne
lret
pop
cmp
pop
mov
mov
pop
mov
jb
in
ja
int3
rorl
cmc
mov
cmp
rcll
pop
pop
jns
int3
fcmovnb
sub
mov
rcll
jno
test
popf
outsl
cmpsb
repz
cs
cmp
iret
dec
pop
pusha
mov
fstpt
jg
cld
stc
xchg
cltd
jg
adc
movsl
mov
lret
lahf
aas
mov
lcall
dec
mov
or
ds
push
lds
lods
outsb
je
push
adc
es
sub
push
push
sub
test
pop
push
nop
subb
mov
mov
outsl
mov
add
jge
pop
adc
jnp
mov
fisubl
aas
adc
cld
jge
cld
incb
adc
pop
icebp
inc
mov
repnz
das
out
aam
mov
int3
rcrl
lret
mov
cmp
inc
mov
mov
bnd
fimull
daa
jo
and
mov
push
push
scas
mov
mov
inc
mov
push
stc
xchg
mov
das
jbe
cs
push
call
das
test
and
repnz
les
xchg
fnstcw
xor
fistpll
and
scas
mov
inc
aas
pop
sbb
lret
das
jmp
movsl
scas
sbbl
icebp
inc
in
insb
ds
fwait
jbe
push
mov
xlat
cmp
mov
rcll
cmpsl
pushf
add
lahf
aas
mov
mov
cmp
sbb
repz
push
inc
pusha
lahf
rorl
mov
push
jg
jb
mov
xchg
out
rolb
dec
movsl
imul
lret
mov
sub
jecxz
arpl
es
adc
mov
xor
in
insb
out
sub
into
arpl
repnz
xchg
dec
icebp
inc
mov
call
and
mov
adc
ja
sbb
out
mov
repz
mov
mov
or
fbld
idivl
repnz
inc
lds
es
insb
pop
push
int3
dec
ret
scas
call
mov
pop
gs
inc
iret
inc
or
popl
out
lahf
aas
outsb
ss
sbb
jg
incl
icebp
lret
xchg
fiadds
xor
into
out
pop
mov
aas
imul
sub
cli
jb
and
xor
loop,pn
pop
clc
std
xor
jnp
fnstsw
dec
pop
jg
fs
imul
pop
jns
jmp
jno
aam
xchg
js
mov
pop
jns
xchg
pusha
fcom
mov
mov
popl
sbb
xchg
push
stos
out
pop
orl
add
xchg
push
pop
nop
loope
fwait
mov
jecxz
jns
frstor
adcb
mov
idivb
xor
push
iret
lahf
aas
or
mov
inc
shlb
cmpsl
rcrl
insl
loop
jae
sarb
ds
repnz
shl
inc
jle
or
or
outsl
addl
mov
xor
popf
mov
stc
sub
push
movsl
jg
insb
outsb
movb
mov
push
mov
das
pop
incb
lret
test
adc
imul
and
loope
shll
pop
hlt
decl
lcall
sbb
jo
sub
mov
icebp
or
in
push
pop
and
and
in
xchg
cli
pop
dec
fwait
add
sub
mov
or
pop
push
sub
xchg
xor
loopne
es
lret
out
mov
lahf
outsl
repnz
mov
stos
cltd
fsubp
push
mov
test
mov
pop
xor
jecxz
loop
and
jns
and
jg
pop
iret
xchg
push
xor
shlb
mov
lea
mov
mov
push
lahf
fsts
ljmp
mov
and
cmpb
repz
and
lret
mov
add
test
mov
inc
es
cmpl
lods
cwtl
jb
in
das
cld
mov
ret
js
fbld
data16
fistpl
mov
add
repnz
lcall
lahf
mov
aam
jmp
scas
sbb
pushf
or
xchg
fildll
pop
mov
data16
lret
loop
mov
subb
mov
rolb
lret
sub
cld
xor
mov
loopne
aad
and
repz
pop
xchg
mov
imul
push
fidivrs
cmp
xchg
cmpsl
rcl
sbb
out
in
aas
rcll
outsl
mov
push
or
jns
sub
lods
inc
insb
and
lahf
aas
jg
xchg
aam
movsl
inc
cwtl
sbb
mov
repnz
sub
in
imul
sub
jle
fcomip
pop
mov
sub
scas
mov
out
jg
cmp
lds
ljmp
pop
jmp
in
push
sub
sbb
dec
cmp
or
pop
insl
jle
das
scas
mov
adc
ret
loop
add
add
dec
scas
divb
dec
and
mov
xor
or
pop
push
push
lret
sub
pop
lahf
enter
dec
lret
movsb
js
rorb
rclb
cld
stc
orl
ljmp
cmp
aas
or
dec
cld
adc
xor
into
jecxz
cld
stc
adc
loopne
sub
sarl
push
incb
push
out
xor
mov
inc
fcomps
lock
fwait
lea
pushf
pop
xchg
xor
sub
mov
jb
mov
inc
sbb
mov
push
push
and
cld
insb
rcrb
aas
mov
and
scas
mov
popa
scas
jae
xchg
aaa
cli
inc
outsl
adc
jns
lcall
push
pop
jns
mov
in
daa
pushf
repnz
jns
jne
jb
xchg
dec
dec
in
fmuls
adc
outsb
xchg
jmp
adc
mov
or
aam
push
sbb
inc
js
pop
or
jg
sub
mov
dec
lcall
clc
cli
repnz
sbb
clc
ror
dec
add
iret
lahf
aas
mov
push
jno
cmp
stc
repz
pushf
sbb
cwtl
outsl
inc
jns
xchg
ja
ss
cmpb
addr16
iret
out
xor
in
push
pop
rcl
xchg
dec
mov
or
xchg
notl
push
pop
jns
inc
testb
or
enter
pop
faddl
xor
xchg
into
std
and
mov
cmc
mov
mov
and
addr16
das
lods
sub
xchg
movsb
ja
pop
in
and
cmp
mov
fucomi
jmp
mov
push
popa
movsl
leave
in
sub
std
dec
cmp
repz
inc
fwait
ds
les
iret
adc
inc
jg
cld
stc
in
lods
mov
cmp
or
repz
pop
mov
iret
lahf
aas
xlat
dec
popa
jo
jnp
xor
mov
aas
mov
insb
ja
fwait
les
mov
cmp
mov
gs
test
test
mov
mov
repnz
mov
scas
mov
roll
jg
cs
insl
push
ss
mov
xchg
push
pop
xchg
fisttpl
lret
lods
stc
add
fidivs
andb
mov
je
gs
sub
repnz
sbb
xchg
xchg
inc
in
insb
in
mov
pop
ret
scas
inc
rcpps
outsl
mov
add
adc
andl
in
sbb
inc
mov
pop
fimull
aas
jg
cld
scas
mov
scas
scas
and
sub
mov
mov
fnstsw
mov
jecxz
das
cmpsb
push
icebp
lahf
aam
test
lret
xor
cltd
jle
adc
cli
data16
mov
aaa
in
jns
cmp
pop
mov
mov
push
pop
xor
loopne
pop
xchg
push
inc
and
inc
add
pop
jns
add
jno
repz
or
inc
into
imul
movsb
decl
ret
push
pop
jns
insb
pop
xchg
das
hlt
lods
outsl
ds
add
pop
push
xchg
daa
imul
inc
mov
jnp
and
rcrl
or
jb
jne
add
scas
mov
outsl
xor
jmp
inc
aas
scas
hlt
in
sub
cwtl
cmp
adc
xchg
clc
pop
mov
push
xchg
insl
repz
lahf
nop
imul
dec
add
cld
jg
cld
stc
mov
xchg
xchg
and
add
add
xchg
xchg
out
lahf
aas
push
pop
stos
shlb
stc
rep
lret
xchg
sti
mov
add
push
push
or
das
out
mov
push
mov
jmp
rcll
lret
das
sub
mov
adc
pop
scas
idivb
jg
pushf
ds
aas
ja
imul
push
imul
or
stos
mov
fadd
mov
testb
shrl
xor
sub
lea
fstl
lret
sub
sbb
xchg
or
sub
push
loopne
xor
cmp
jle
sbb
sahf
lret
dec
arpl
scas
jl
scas
push
punpckhdq
clc
ds
test
mov
addr16
in
adc
stc
mov
imul
scas
sub
mov
cld
push
mov
pop
hlt
sbb
icebp
mov
lahf
mov
mov
cmp
fs
fdiv
jg
cld
stc
fildll
cld
push
lock
adc
dec
pop
ds
and
outsl
mov
and
xchg
mov
xchg
call
aas
jg
out
popa
das
lock
add
insl
push
jne
aad
stc
repz
aad
mov
test
jbe
sbb
bound
cmp
repz
mov
push
sbb
in
lahf
mov
and
aaa
lea
sub
xchg
push
ret
aad
mov
jmp
jge
stc
sbb
maxps
jle
adc
sub
push
icebp
mov
mov
iret
sbb
int3
cmp
mov
push
in
sub
repz
ja
in
mov
cld
dec
clc
sti
cmpsl
push
lahf
das
pop
fistl
jae
and
and
aaa
shll
mov
aam
cwtl
scas
pop
jb
mov
sbb
inc
dec
sahf
add
xchg
xchg
pop
jmp
outsl
adc
jmp
insb
adc
dec
xor
and
lret
stc
add
lret
ss
outsl
sub
into
test
cltd
pop
decb
in
dec
scas
repz
lahf
scas
mov
aad
and
ss
repnz
xor
icebp
xor
ret
jecxz
cld
stc
repz
lods
movsl
inc
cmpsb
and
enter
jg
sarl
lcall
imul
aas
cmpxchg
in
dec
xlat
sbb
push
fidivrs
jae
dec
lahf
jbe
xor
pop
jb
pop
jns
fisttpll
pop
stc
push
iret
aad
stos
sub
divb
xchg
push
into
movsb
ret
xor
push
xorb
fdivrp
sti
inc
shlb
das
sub
adc
add
jb
adc
ret
pop
sub
shll
add
fs
cmpsb
mov
stos
arpl
xchg
sub
jg
mov
ss
pop
fistps
xor
jecxz
dec
mov
pop
cld
cmpsb
dec
inc
xor
xchg
repnz
das
ja
addr16
lahf
aas
mov
addr16
pop
js
cmp
repnz
xchg
and
aaa
inc
sarl
dec
push
push
roll
das
scas
les
iret
pop
inc
mov
pop
jmp
jmp
mov
pop
hlt
cmc
mov
push
mov
into
mov
es
clc
mov
mov
rclb
pop
scas
mov
aas
pop
and
pushf
push
popa
xor
repnz
lret
mov
mov
push
outsb
mov
jle
rcr
ljmp
decb
ficomps
lret
mov
sub
or
xchg
sub
ljmp
jns
inc
mov
add
outsb
jnp
or
jns
out
into
stos
imul
and
mov
jns
xchg
push
nop
clc
xchg
or
jns
xchg
push
add
arpl
fwait
into
cmp
sti
sub
leave
mov
outsl
bnd
out
incl
mov
out
push
mov
mov
shlb
add
fmul
add
ljmp
repnz
in
xchg
fsubrs
loope
ret
mov
sub
jae
dec
dec
dec
andb
repnz
popf
push
add
or
mov
repnz
shlb
fwait
mov
inc
or
lret
sub
dec
fldenv
push
repnz
mov
or
sbb
or
sub
out
pop
out
xor
mov
idivb
fcmovnb
cld
lods
in
rcrb
jl
mov
and
xor
jecxz
sti
enter
loope
pop
inc
pop
xchg
imul
dec
lret
mov
dec
push
call
xor
scas
mov
fsubl
clc
add
iret
add
outsb
mov
into
inc
stos
mov
insl
xor
int
aas
enter
in
mov
lret
inc
out
lahf
aas
out
mov
jo
arpl
repz
add
jb
dec
cmp
cmp
iret
lahf
aas
mov
ljmp
jae
icebp
enter
scas
aaa
dec
xchg
jno
pop
mov
ds
adc
mov
pusha
mov
popa
lahf
test
mov
push
lods
and
lret
out
cmpsb
idivl
cmp
inc
pop
repz
loopne
cmp
jg
or
jle
adc
xor
cli
enter
in
ja
adc
jg
cld
cltd
ds
push
push
arpl
and
sbb
mov
sub
sub
out
push
stc
repz
sbb
jl
mov
mov
or
mov
je
repz
outsb
lods
jge
aas
outsl
pop
mov
dec
or
pop
jns
mov
int
pop
dec
xor
jns
lret
xchg
cmp
in
adc
outsb
xchg
fiaddl
pop
test
insl
mov
fidivrs
push
jb
xchg
out
dec
cmp
sbb
sti
pop
jns
xchg
or
ljmp
push
cs
xor
or
imul
ja
aas
stos
pop
out
aas
int3
push
scas
pusha
xor
js
push
pop
mov
push
mov
inc
xchg
sub
fisttps
arpl
xchg
push
fsubrp
mov
or
enter
jns
xchg
sub
sub
ljmp
dec
out
int3
adc
stos
add
pop
loopne
sub
jp
ds
add
lahf
roll
inc
push
xor
jmp
dec
lea
xchg
dec
add
lahf
and
in
push
sbb
movsb
gs
mov
sub
fstps
repnz
mov
dec
movsl
sbb
out
or
std
shlb
popf
jg
insb
sbb
sahf
pop
inc
cld
stc
repz
mov
adc
call
jg
repz
fists
cmp
punpckldq
iret
je
int
stos
push
jns
out
in
gs
test
push
dec
loop
xchg
push
pop
lea
int3
imull
aaa
jne
mov
push
pop
jns
ja
add
cmp
pop
jns
sub
sbb
hlt
scas
fwait
mov
faddl
jmp
orb
or
test
xor
repz
jbe
cmc
loope
ds
cmp
les
jg
cld
addr16
nop
pop
incl
enter
push
je
cmpb
iret
lahf
sbb
daa
clc
sti
sbb
cmpsl
mov
out
xchg
jge
lods
mov
fstpl
in
lahf
out
nop
jp
sub
test
aad
or
jns
xchg
push
mov
clc
stos
int3
dec
sahf
xorps
sar
in
push
pop
out
and
aam
repz
add
xchg
imul
cld
in
ja
insb
aas
test
inc
stos
mov
push
pop
jns
and
sbb
sub
mov
push
pop
jns
push
jns
adc
js
imul
in
xchg
and
cwtl
push
enter
mov
aaa
lods
jns
xchg
push
jno
push
mov
mov
xchg
ja
pop
loop
aad
pop
sar
dec
inc
and
popf
push
pop
jns
arpl
jg
call
imul
dec
pop
jns
xchg
arpl
sahf
or
ss
jns
xchg
push
test
ret
leave
inc
scas
push
push
nop
insl
in
push
pop
jo
stos
ret
cmp
sub
js
daa
scas
arpl
imul
mov
cmc
cmp
add
inc
ds
cmp
mov
js
and
jge
in
mov
fdivrp
jb
mull
jecxz
pushf
sti
rcrl
inc
xchg
mov
fdivr
repnz
das
movsb
inc
cwtl
dec
push
jl
popf
mov
repnz
clc
adc
adc
pop
inc
pop
add
lods
sbb
sahf
cmp
repz
jo
push
mov
or
scas
mov
flds
test
xchg
out
lret
mov
xchg
pushf
and
cltd
out
sub
push
dec
xor
mov
jle
scas
mov
cmp
pop
pop
outsl
push
add
imull
pop
arpl
pushf
sub
add
xchg
push
mov
ds
js
scas
xchg
jg
pop
jns
pop
fwait
roll
punpcklwd
out
cs
jns
xchg
ja
dec
sarl
pushf
mov
push
pop
test
mov
hlt
sbb
aas
pop
iret
or
sahf
loopne
push
neg
push
mov
pop
push
jle
or
cld
stc
xor
xchg
sahf
xchg
ja
cmp
and
aas
jg
cltd
sbb
push
or
clc
shr
mov
adc
fdivp
inc
xchg
stos
and
sahf
mov
add
lcall
or
inc
ljmp
into
xchg
mov
sti
repnz
pop
sbb
cmpsb
dec
adc
xchg
pushf
repnz
out
push
movsl
fcompp
faddl
aam
sub
ja
adc
jne
mov
repnz
rcrb
mov
mov
iret
das
movsb
sbb
cmp
enter
pop
loop
into
mov
mov
aaa
jp
adc
lock
jl
js
mov
push
sbb
xlat
pop
fidivl
push
fsubp
xchg
shr
loope
pop
test
test
sub
push
rclb
xor
and
xchg
popf
out
pop
arpl
cwtl
dec
jg
cld
stc
popa
jp
pop
adc
push
insl
jnp
test
and
xchg
scas
push
ds
imul
in
stos
mov
andl
sub
inc
dec
pop
out
jle
repz
insl
sahf
gs
fistps
ljmp
jg
aad
dec
xchg
rolb
xchg
scas
sbb
lahf
aaa
es
and
mov
repz
loope
test
push
or
push
lret
out
stos
mov
mov
repnz
jp
xchg
out
push
loope
mov
stc
inc
loope
mov
mov
mov
addr16
push
fidivrs
in
mov
popa
push
and
jb
xchg
stc
clc
ja
mov
insb
sarl
inc
pop
iret
cmovs
repnz
add
ficoms
jl
inc
loope
jo
out
and
aam
cld
leave
cli
in
into
mov
mov
ficomps
aas
jg
lcall
adc
dec
adc
repnz
out
add
ss
push
ret
mov
sub
fcomi
stc
repz
dec
enter
into
mov
sub
sub
out
mov
mov
and
mov
inc
sbb
in
sti
sub
pop
cmp
jb
push
out
pop
ja,pn
mul
in
fnstsw
push
pop
push
mov
and
test
negl
in
sbb
jmp
mov
jns
xchg
push
jl
mov
sbb
add
lret
xchg
jno
cmpsl
mov
jp
loope
stos
mov
push
pop
jns
movsl
rcr
pop
fiadds
mov
stc
xor
lret
ds
adc
outsb
mov
jg
cld
sbb
test
arpl
loope
push
sbb
lret
out
lahf
mov
je
ret
xchg
xlat
in
mov
dec
and
stos
out
jg
inc
jl
in
push
mov
adc
lret
mov
lcall
mov
jmp
xchg
cs
or
rclb
leave
dec
cld
stc
repz
pop
movsb
pop
pop
ffreep
jecxz
push
test
stc
repz
mov
repnz
stos
fs
bnd
arpl
fsubrl
ret
mov
jmp
jg
mov
je
jnp
iret
lahf
pop
sahf
mov
fisubrl
jns
imul
pop
stc
repz
insb
push
sub
out
mov
cwtl
out
iret
lahf
aas
jg
in
adc
xlat
mov
cmc
cld
stc
repz
inc
into
mov
mov
jbe
incb
jmp
fcomip
add
out
jge
enter
sbb
add
out
mov
xchg
cltd
aaa
nop
xchg
ja
jg
in
mov
imul
out
in
jge
mov
ljmp
out
cmc
divl
push
inc
pop
push
or
jl
xor
mov
dec
mov
repnz
add
imull
dec
ret
lret
mov
mov
xchg
mov
sub
ja
call
inc
mov
in
xor
rcll
sub
iret
lahf
jg
sahf
mov
int
idiv
stc
repz
cli
ret
mov
dec
sub
lahf
aas
jg
insl
leave
mov
mov
and
push
dec
stc
repz
xchg
push
nop
mov
outsl
lds
pop
cld
inc
popf
sahf
ljmp
cld
stc
xchg
dec
or
dec
sbb
loop
and
xor
xor
or
dec
popa
or
out
daa
mov
push
iret
mov
and
mov
decl
dec
addr16
test
aam
xchg
sub
push
and
sbb
push
sti
push
pushf
rol
mov
mov
jle
ds
mov
and
lret
out
lahf
sbb
push
inc
sub
popa
neg
mov
stc
mov
pop
push
adc
mov
outsl
mov
sbb
dec
inc
inc
insb
dec
xlat
dec
test
jbe
lahf
cli
in
sub
pop
hlt
inc
push
test
jle
cld
stc
repz
stos
sbb
xchg
adc
stc
mov
xorl
mov
add
xchg
ja
xor
pop
ljmp
lret
lock
scas
inc
movq
out
lret
xchg
repnz
xor
scas
repz
mov
cmp
cmpsl
and
xchg
ja
dec
fidivl
test
jnp
pop
aas
mov
in
cld
sub
and
mulb
outsb
mov
into
incb
ret
mov
mov
lahf
jg
imulb
adc
fisttpl
stc
repz
loope
adc
push
push
or
adc
aas
stos
js
pop
pop
add
lret
lds
jle
outsl
cmpsb
int3
mov
pop
out
jle
sbb
pushf
dec
cmovge
out
movl
jnp
xchg
popf
xchg
xor
sub
lret
stos
lods
cltd
cs
mov
pop
call
loopne
iret
repnz
insl
cltd
fdivs
cmp
jg
mov
jl
movsb
pop
push
adc
jmp
pop
je
stc
repz
stc
leave
xor
clc
fsubrl
int
test
jg
cld
cld
adcb
push
push
push
push
std
scas
mov
iret
lahf
mov
lock
jmp
cmp
sub
sub
repnz
dec
dec
mov
jb
lahf
aas
jg
scas
fistpl
push
push
mov
and
dec
dec
mov
stc
repz
mov
sbb
and
inc
or
clc
mov
xchg
mov
cmp
push
mov
or
jg
outsb
repnz
mov
shll
cli
repnz
lahf
xchg
movsl
and
or
jmp
inc
movsb
rcll
loopne
sar
movsb
and
jnp
in
testb
test
jecxz,pn
je
mov
fisubrs
fs
xor
inc
push
jo
pop
pop
jns
js
addr16
lahf
adc
adc
push
imul
jns
push
and
repnz
ds
mov
iret
cmpsb
mov
ja
dec
xchg
xchg
out
scas
xor
xchg
xchg
adc
xchg
push
fwait
pop
push
mov
xchg
pushf
mov
mov
std
in
adcl
mov
test
jl
in
jp
jo
and
adc
outsl
adc
pop
jns
pop
jecxz
les
iret
lahf
pop
push
andb
jecxz
stos
jp
push
stc
repz
pop
cmp
sahf
ljmp
pop
mov
loope
out
shll
repnz
xor
ja
inc
xor
scas
adc
lret
mov
jae
xlat
and
test
mul
ret
mov
scas
adc
scas
mov
pop
inc
into
sub
mov
loop
jp
adc
adc
lock
lods
adc
pop
cmp
sti
jl
cld
stc
or
pushl
inc
shl
imul
sub
push
cmc
mov
loopne
jl
cld
stc
jno
in
testb
lret
das
aas
push
sbb
xor
xor
xor
loopne
mov
data16
test
test
fcmovnb
inc
cld
stc
repz
lods
xlat
push
or
arpl
int3
push
in
mov
or
sub
rorl
jns
add
imul
push
pop
jns
fstpl
dec
xchg
sbb
das
sbbl
lret
jmp
jmp
sbbb
cld
add
into
inc
in
sub
out
pop
out
ret
int3
adc
inc
inc
in
je
mov
push
mov
jg
cld
stc
repz
ljmp
jg
push
fldenv
jle
cltd
mov
inc
out
repz
lahf
sbb
icebp
and
cmp
lods
ss
cld
stc
or
push
cltd
leave
push
leave
fnstcw
jno
out
lahf
aas
stos
les
jle
mov
cli
pop
jns
lret
xor
dec
mov
mov
sub
inc
lods
jg
pop
dec
fidivrs
out
mov
aas
jg
fimuls
mov
mov
cli
mov
push
lret
ror
mov
or
pop
pop
jle
lret
stos
push
outsb
xorb
add
rcrl
sbb
test
fcoms
jl
sbb
xchg
xorb
mov
out
ss
pop
shrl
repz
lahf
ljmp
xchg
sub
push
call
mov
push
mov
cmp
lret
popf
cmp
lret
fildll
xchg
stos
xor
lods
sbb
enter
sbb
test
sbb
mov
add
cld
stc
cmp
xor
or
jae
pop
rclb
aas
out
div
imul
cmpsb
aas
aaa
cmp
aaa
jecxz
outsl
test
daa
into
repz
lahf
dec
ljmp
jo
pop
jge
jp
cld
stc
lods
push
shll
std
enter
mov
fnstsw
sarb
pop
jns
sub
mov
sbb
xor
fnstsw
filds
sub
hlt
negb
mov
inc
mov
icebp
xor
repnz
repz
loopne
add
movsb
ljmp
jo
out
push
cmp
loopne
jns
fucomp
sbb
add
ret
loop
lock
sahf
cmpsb
xor
jg
jle
stos
jae
pop
sub
arpl
mov
fsubrp
pop
mov
and
xchg
lahf
aas
cmp
das
and
sti
dec
out
xchg
out
scas
pop
and
mov
mull
cld
mov
aas
loopne
push
pop
adc
pop
jns
xchg
xchg
jmp
lock
xchg
ja
jp
xor
cmp
iret
cld
cmpsb
jp
repnz
mov
xchg
leave
mov
cld
stc
adc
mov
mov
adc
and
orb
fisttpll
rcll
outsl
mov
stc
repz
icebp
sub
ljmp
pop
inc
inc
cmpsb
mov
cltd
pop
mov
cmp
xchg
aas
aaa
xchg
lea
loope
out
mov
sbbl
scas
in
fstpl
mov
mov
mov
jg,pn
push
in
xchg
lahf
out
lea
scas
jmp
push
pop
jns
mov
or
call
push
jecxz
push
pop
jns
negb
xchg
ljmp
dec
insl
dec
push
inc
mov
outsl
movsb
inc
sbb
dec
push
decb
daa
out
inc
sub
push
jo
mov
cld
cwtl
cli
repnz
pop
outsb
fldl
stc
addb
scas
sbb
outsb
incl
pusha
fists
out
out
pop
lret
aas
push
jmp
xchg
mov
or
push
jle
repnz
xchg
add
add
jb
fstl
dec
in
mov
out
mov
pop
add
sub
cwtl
jns
xchg
aas
push
add
cmpsb
fisubrs
mov
movb
mov
pop
dec
jle
xchg
push
out
imul
int
or
cld
push
cs
fucomip
aad
in
sbb
lahf
jg
mov
roll
stc
repz
repnz
cmp
dec
xchg
push
scas
movsb
pop
sbb
test
mov
inc
pop
outsl
pushf
lahf
or
rol
in
in
cld
adc
lcall
ss
repz
xchg
leave
cli
imul
sub
iret
xchg
inc
xchg
aas
jg
cld
dec
jnp
inc
stc
inc
enter
fdivs
and
lahf
rcll
push
sbbl
lods
loopne
out
rorl
out
xlat
fs
or
push
stc
add
pop
movsb
lret
dec
loope
out
mov
jp,pt
mov
ljmp
scas
mov
jno
ss
mov
pop
jmp
repnz
dec
rcrl
fistpl
mov
lret
mov
mov
lret
dec
dec
add
mov
lods
sti
mov
xchg
lahf
and
adc
les
outsb
std
ret
pushf
xor
mov
out
dec
adcl
stos
test
loop
cmp
jg
cld
cmp
mov
rorl
mov
mull
std
es
or
pop
cld
xchg
shrb
inc
push
popa
aaa
iret
mov
dec
jle
hlt
out
stc
repz
sub
insb
push
inc
lcall
mov
jno
lock
out
adc
les
les
sbb
push
lods
es
fs
lret
mov
lret
jp
in
mov
idiv
sbb
mov
sbbl
xor
jb
enter
xchg
movsbl
fistpl
out
xlat
pop
mov
lret
aam
lock
das
add
cltd
setne
jns
loopne
sbb
scas
rcll
jns
xor
or
sub
cmpl
rclb
stc
and
push
jno
lahf
jg
cmp
mov
fadds
iret
subb
xchg
xchg
dec
dec
daa
jle
incb
or
jge
mov
mov
jnp
cmp
mov
loopne
imul
mov
sub
test
xchg
das
push
fidivrs
cmp
adc
fstps
repnz
aam
add
mov
push
sub
std
jb
stc
or
jbe
xchg
pop
jl
dec
ja
in
push
jo
fsts
insb
jmp
add
and
cmp
js
mov
xor
mov
pop
add
scas
mov
arpl
test
in
xor
adcl
xchg
pop
add
aam
repnz
push
xchg
nop
filds
pop
adc
sub
sbb
fists
int
sub
pop
xchg
ffree
out
and
cmc
add
repnz
loope
dec
mov
jo
xchg
add
or
in
js
lods
jns
xchg
push
push
loop
mov
loopew
in
push
pop
mov
lcall
pop
cmpl
add
xchg
out
pop
or
in
jecxz
or
mov
imul
rclb
sbb
push
mov
xor
adc
outsl
test
jb
xchg
ljmp
mov
jmp
add
pusha
sbb
repnz
leave
add
in
sub
aam
repz
imul
aas
das
xchg
shr
lret
dec
cli
addr16
jle
push
push
mov
repnz
scas
mov
iret
ret
jp
int3
sbb
cmc
cltd
pushf
pushl
xlat
rcrb
lret
neg
call
cmp
scas
mov
outsl
outsl
sahf
rcll
cmpsl
je
std
cltd
pop
or
lret
divb
popf
ret
jg
push
int3
faddp
or
aas
inc
fistpll
aaa
or
in
iret
lahf
mov
mov
cmc
scas
das
jo
ret
hlt
jnp
fwait
dec
rcr
test
fists
inc
das
jg
mov
lock
fstps
icebp
ljmp
xor
mov
dec
pushf
loop
test
cld
stc
repz
out
push
sub
fs
cmp
mov
das
lahf
aas
jg
mov
xor
cmp
mov
jg
mov
mov
aam
jo
sar
cmp
out
out
pop
aad
xchg
clc
scas
inc
test
pusha
std
jnp
into
jl
mov
xchg
fists
jg,pt
cs
push
ret
negb
jecxz
xlat
lret
daa
test
nop
jle
out
cld
jnp
notl
jle
pop
mov
out
pop
dec
xor
cmpsb
repnz
adc
sub
mov
pop
or
cmp
lret
or
xor
stc
movsb
das
scas
mov
add
add
sbb
iret
aas
into
idiv
jg
xchg
push
cs
jle
data16
sub
mul
iret
mov
cmpsl
test
adc
stc
repz
and
xchg
xchg
xchg
cmpsb
je
push
lret
lahf
aas
jg
bound
xor
pop
cmp
hlt
lret
fstp
xor
push
sarl
fcmovnu
or
sub
jle
in
fstps
fidivrs
jecxz
fisubs
js
sub
cld
rol
das
xor
lods
fdivrl
xlat
mov
lahf
aas
jg
jmp
shlb
mov
xchg
mov
arpl
mov
cld
stc
repz
xor
push
jno
ljmp
mov
push
jge
out
push
and
jg
mov
out
or
sarl
imul
lahf
aas
add
ret
ds
mov
and
or
adc
add
push
pop
inc
jnp
jne
int3
jp
lret
push
mov
xorl
test
xor
int
dec
push
or
stc
cld
sub
jne
iret
jne
lret
lahf
aas
lds
lock
ror
in
fcmovnu
dec
xor
jns
jg
sub
sbb
or
aas
icebp
mov
xchg
mov
dec
mov
fsubrs
int3
adc
xor
mov
jae
sub
jnp
dec
in
std
sub
pop
lods
scas
adc
in
push
fisubrs
xlat
push
lret
jbe
out
jb
push
sub
xchg
push
pop
jns
mov
pop
jne
mov
xchg
mov
dec
mov
sub
xorb
xchg
aas
std
jns
aas
mov
xchg
xchg
icebp
in
sub
xchg
mov
scas
mov
or
xchg
data16
daa
jmp
scas
adc
pop
fnstcw
cmp
mov
pop
sub
add
xor
jns
ret
lds
out
or
adc
leave
sbb
push
jae
jno
dec
call
xor
pop
cld
xchg
into
xchg
sar
mov
stos
xchg
push
pop
jns
mov
ds
xchg
jg
jg
jge
aad
pop
jns
sub
dec
ja
subl
int3
push
mov
fmulp
lock
jle
cld
stc
repz
pop
hlt
sbb
xchg
inc
xchg
int
pop
das
aas
jg
mov
push
fmull
cmp
fst
pop
mov
add
repz
pop
ds
fidivrs
lcall
mov
sahf
les
iret
lahf
pop
adc
mov
mov
icebp
adc
dec
call
imul
lahf
cmp
lret
sub
xorb
jns
cld
neg
lods
cmp
push
xor
fs
clc
pop
jns
sbb
inc
dec
pop
out
mov
pop
adc
or
cmp
sar
sbb
iret
push
xchg
aaa
ret
pop
jns
push
mov
cmpsl
and
stc
sbb
add
push
out
imul
ja
push
pop
mov
sub
sub
lcall
jle
mov
fdivr
lret
aaa
mov
pop
pop
mov
cs
in
test
pop
cmpb
ret
aaa
cmc
push
ret
shl
sub
jg
lods
addb
cwtl
xchg
add
lret
push
outsl
and
dec
cli
lea
mov
sbb
cli
in
sub
xchg
and
add
roll
mov
aas
jg
cld
incb
je
jno
out
ljmp
xchg
loope
iret
lahf
je
xlat
test
pop
testb
repz
sahf
aaa
cmpsb
stos
outsl
lcall
xchg
jle
insl
mov
pop
jns
pop
jg
pop
cmc
push
jne
xchg
xor
in
out
fs
xchg
inc
subl
test
sbb
add
loope
dec
and
xchg
out
lahf
aas
out
ret
fwait
push
fldt
inc
sbb
mov
or
hlt
add
call
out
aas
or
sbb
test
fcomps
jp
les
jg
pusha
scas
stos
add
pushf
es
adc
outsl
repnz
scas
adc
and
test
mov
bound
xor
push
or
cs
int
sbb
mov
shrl
or
stc
add
lods
xchg
sub
mov
and
dec
ds
repnz
jg
sub
sbb
xor
out
pop
jp
mov
out
out
iret
clc
pop
cmp
decl
movsl
ds
sub
js
mov
mov
mov
imul
jo
sbb
mov
sar
std
repnz
push
mov
adcb
jge
repnz
ja
cmp
shlb
call
sub
int
cmp
push
or
mov
insl
xor
in
inc
out
lahf
add
jne
or
xchg
cld
stc
repz
decl
sub
scas
mov
push
jg
jg
sbb
sti
pushf
test
jmp
subl
sub
add
js
stos
push
jle
mov
adc
pop
test
hlt
lret
imul
xor
mov
out
inc
loope
outsl
call
test
out
out
arpl
xor
stc
push
subb
sub
jecxz
loope
cmc
add
stos
mov
mov
ja
aas
jg
out
xor
stc
pusha
movl
mov
cmp
jne
or
sub
lret
mov
lret
pop
mov
int
movsb
push
xor
inc
sub
sub
mov
xchg
xorb
mov
add
scas
mov
sti
test
dec
jbe
lahf
arpl
data16
lea
scas
xorl
div
in
iret
aad
movsl
jp
jg
jp
ficompl
xchg
push
pop
jns
sahf
mov
inc
jb
lcall
sbb
outsb
mov
xchg
aaa
js
lahf
outsl
cmpsb
xchg
int3
adc
xchg
cltd
xchg
push
pop
jns
cs
aas
cmp
data16
addb
jns
cli
rorl
ret
repnz
mov
mov
insb
je
test
aas
and
subb
inc
cld
stc
repz
sbb
xchg
stc
xchg
insl
aaa
imul
roll
aas
mov
lahf
ret
inc
scas
adc
repz
cmp
cmc
dec
arpl
jg
cld
stc
jg
sub
addr16
mov
or
lahf
aas
sbb
mov
ret
call
cld
stc
rep
in
int3
jns
mov
inc
outsl
or
repz
push
pop
jle
ret
and
jecxz
scas
cmp
out
lret
iret
lahf
mov
aad
sub
inc
sub
xchg
lret
sysexit
mov
adc
pop
aam
pop
movsl
sub
hlt
sbb
repz
out
cld
aaa
fmul
and
pop
movsb
adc
and
adc
add
mov
add
push
push
shl
pop
daa
std
in
iret
lahf
xor
and
std
lods
mov
loopne
jecxz
jo
outsl
out
and
rclb
ret
ret
lods
jge
cmp
jns
sbb
adc
jle
int3
in
sub
dec
fiaddl
gs
sub
push
fsubrp
lret
jp
js
cli
jmp
addr16
sub
sub
pop
mov
sub
cli
adc
mov
lret
in
sti
inc
loope
movsb
jns
jle
or
sub
lds
daa
dec
enter
sub
mov
test
loopne
mov
lret
aam
in
jg
sub
add
enter
lret
iret
push
jnp
and
inc
out
pop
out
mov
xor
sbb
mov
push
pop
stc
movsl
mov
jmp
ds
cld
lods
ret
aas
jg
cld
cmp
push
lea
xchg
sub
cltd
sbb
repz
les
push
xor
fld
jbe
mov
cld
stc
cmp
jb
or
xchg
sbb
out
sub
fisubrs
adc
test
add
fsubs
das
rcr
fwait
lock
push
pop
inc
jmp
in
sub
xchg
push
pop
jns
sar
ss
sub
jmp
adc
jmp
in
inc
sub
sbb
and
sub
sti
decl
cli
outsl
pop
dec
or
scas
inc
cld
inc
stc
stc
pop
icebp
test
pop
mov
aas
mov
dec
add
scas
xor
cmp
scas
mov
rol
jge
fiadds
repnz
mov
lret
xchg
ja
lret
test
xor
setle
pop
jns
mov
pop
mov
loopne
pop
mov
xor
inc
jl
lahf
iret
shr
adc
iret
ss
mov
fdiv
lret
out
shll
lret
dec
int3
jno
iret
xchg
push
pop
jns
daa
jbe
push
xor
in
imulb
js
mov
cmc
int3
arpl
jns
scas
cmp
lahf
sub
lret
sub
dec
sub
stc
jmp
repz
int3
int
mov
test
lret
mov
xor
pop
aas
sub
adc
sbb
cltd
clc
repnz
cmpb
incb
repnz
in
xor
jle
jg
jbe
ss
pushw
vpcomb
jle
cld
or
pop
jmp
pop
push
lods
dec
mov
test
cld
stc
repz
dec
div
aas
mov
sub
inc
xchg
es
int3
cmp
mov
sbb
lret
out
lret
sbb
rclb
gs
adc
jge
mov
cmp
in
fsubs
out
sub
sbb
xchg
jns
mov
xchg
mov
push
in
push
pop
imul
js
jg
sti
decb
xchg
push
pop
jns
and
sbb
jp
and
mov
jmp
jmp
sub
xchg
push
fmulp
test
loope
dec
cwtl
inc
pop
stos
xchg
dec
cmc
jb
aad
cmp
sub
inc
cli
repnz
jnp
push
pop
sbb
lahf
aas
out
scas
add
sti
sbb
fsts
mov
scas
fiadds
pop
arpl
repnz
jg
pop
push
cmc
mov
and
scas
mov
mov
pop
inc
push
sub
fldcw
xchg
arpl
and
sbb
dec
lret
dec
adc
lahf
pop
into
push
push
int
stc
bound
aas
xlat
inc
lret
frstor
pop
mov
inc
das
scas
mov
sti
repnz
ja
mov
mov
lret
mov
sub
std
stos
inc
sub
bound
adcb
jo
xchg
jl
scas
mov
int3
leave
push
out
movsb
ret
cmp
inc
loope
in
sub
rcll
inc
dec
movsb
mov
lcall
pop
hlt
loope
mov
sub
jg
rcrl
popa
insb
inc
sbbb
outsb
or
xchg
push
xchg
mov
aas
mov
pop
jle
mov
shlb
popf
fiaddl
imul
push
fidivrs
test
sbb
push
pop
jns
std
sti
cmc
sub
fdivl
mov
sbb
and
and
pop
aad
mov
addl
fildl
push
aas
cmp
pop
adcl
jg,pt
inc
nop
int
mov
jl
std
pop
jle
mov
gs
xor
pop
movsl
or
cmpsl
pop
out
in
iret
pop
sub
jb
repnz
insl
aaa
test
xchg
hlt
jo
push
push
out
sahf
lock
data16
insb
mov
jns
sub
dec
out
das
dec
mov
ljmp
push
pop
fisttpll
pop
jae
pop
aaa
jp
inc
dec
imul
adc
fnsave
jecxz
arpl
xchg
sub
push
and
lcall
inc
lea
push
mov
into
xchg
ja
jg
pusha
fiaddl
out
out
lahf
idivb
cmpsl
incb
jge
in
pop
xchg
in
sbb
popa
lahf
aas
jg
dec
push
mov
rcl
sti
pop
stc
mov
mov
out
xchg
iret
fcoms
dec
jb
push
or
out
pushf
call
scas
mov
rolb
adc
mul
sbb
jg
adc
inc
lods
scas
jns
xchg
push
ss
ljmp
lcall
mov
xchg
aas
aaa
shlb
mov
je
pop
and
jns
mov
jmp
add
scas
mov
adc
stos
movsb
std
ret
mov
dec
mov
pop
scas
js
in
fistpl
fidivl
mov
cmp
out
ret
in
inc
push
mov
cld
stc
repz
xor
add
push
rorb
nop
pop
pop
jl
or
cld
stc
xrelease
sahf
jp
cmpsl
jns
pop
lea
push
pop
xchg
mov
stos
divl
jg
cmc
lret
mov
hlt
lods
les
cmpsb
push
xchg
cmc
in
ja
and
cmpsb
lahf
data16
jbe
mov
mov
ret
push
addr16
xor
jg
sub
pushf
nop
lea
mov
inc
iret
shll
mov
out
insb
arpl
sub
fucomip
fbld
mov
es
ja
scas
mov
sub
out
dec
addr16
scas
test
loop
movsb
cld
jecxz
mov
dec
popa
test
mov
xchg
mov
lret
jge
test
cmpsb
js
bound
gs
das
out
dec
fmuls
xlat
add
sub
in
push
pop
sarb
fnstsw
adc
pop
into
sub
pop
jns
sbb
sti
mov
mov
jb
outsb
mov
lea
and
xor
lahf
nop
fisubrl
pop
test
jns
pushf
leavew
jl
and
cs
pop
clc
sti
in
ljmp
jg
les
stc
repz
out
enter
cmp
mov
fdivrs
or
iret
les
sbb
jp
xchg
lahf
pop
or
add
mov
or
mov
arpl
lahf
jnp
jbe
cli
mov
iret
jl
rorl
mov
cld
cld
into
jmp
jmp
scas
test
mov
pop
pusha
mov
add
push
shll
add
fnstsw
dec
jg
fs
cmp
jge
stc
mov
pop
orb
sahf
aas
jg
or
mov
aaa
and
pop
shrb
lahf
mov
mov
jnp
repz
dec
stos
push
xchg
int
cltd
push
push
fsubl
mov
mov
rcrb
iret
lahf
aas
aas
pop
mov
rcrl
test
out
xor
sbb
gs
iret
inc
jbe
adc
sbb
cld
imulb
pop
jns
fisttpll
iret
out
and
outsb
mov
jns
in
push
mov
pop
xor
cs
iret
dec
lret
xchg
push
pop
xchg
in
adc
scas
lock
push
xchg
xchg
mov
xor
push
push
push
cmp
push
add
in
cld
inc
mov
fs
shl
sbb
mov
inc
add
sahf
pop
cld
stc
repz
or
cmc
pop
cmp
ss
in
aas
jg
out
xchg
sbb
stc
repz
nop
iret
pop
mov
xchg
outsl
sub
push
jg
mov
jl
cld
pop
xor
push
pusha
add
mov
bound
mov
jae
and
push
fistpll
repnz
xchg
pusha
lods
ljmp
and
push
or
or
arpl
jo
out
inc
xor
ret
test
outsb
cld
mov
jns
ret
nop
mov
sbb
and
and
xchg
jle
ficomps
add
sub
cmp
lahf
pop
or
vdivsd
mov
xchg
fwait
jle
dec
shll
cld
stc
rep
mov
jmp
popf
mov
shrl
mov
xchg
nop
ret
pop
add
jmp
jge
repnz
popa
aad
movsl
mov
xlat
xchg
jle
lahf
data16
insb
clc
enter
dec
inc
icebp
jl
add
pop
inc
and
std
std
repnz
jg
punpckhwd
jmp
out
aas
push
inc
push
mov
jae
prefetch
cmp
xchg
test
cld
dec
das
enter
iret
jecxz
push
lock
or
adc
mov
mov
mov
repnz
mov
std
cmpb
dec
in
push
les
in
push
fidivrs
movsb
sahf
mov
das
cltd
pop
pop
fstpl
pop
jns
xchg
lret
hlt
ja
popa
or
jne
push
cmpsl
jns
xchg
push
repnz
cmpsl
arpl
push
hlt
lret
xchg
push
pop
ss
pop
sbb
push
add
repnz
lret
icebp
add
xchg
mov
add
sub
cwtl
add
mov
xor
scas
mov
adc
aaa
sub
mov
mov
mov
adc
jbe
adc
lret
and
pop
mov
data16
movsl
fmulp
adc
pop
cmpsl
mov
leave
cli
jmp
jae
dec
dec
push
jl
fbstp
xor
in
sub
xchg
jp
push
adc
mov
jp
jns
xchg
push
mov
dec
mov
in
push
pop
insb
shrb
shlb
push
insb
ficompl
lods
or
loopne
cld
push
ret
lahf
cmp
std
jb
hlt
outsb
decl
stc
xor
shlb
pop
jle
iret
loop
add
cltd
repnz
repz
sub
and
scas
in
mov
iret
jns
dec
mov
mov
mov
inc
push
cmp
xor
dec
mov
lret
xchg
jae
sbb
out
hlt
jle
das
scas
sub
aad
mov
lahf
aas
jg
mov
and
popa
adc
lret
out
cmp
jne
dec
out
jg
cld
stc
js
xor
push
les
jno
lret
lahf
aas
and
pop
fnstenv
jmp
cld
adc
cmpsb
push
mov
pop
sub
out
iret
lahf
aas
cld
in
sbb
adc
in
mov
aaa
xor
stos
inc
cld
cltd
clc
and
mov
and
jg
enter
mov
push
fs
stc
repz
fwait
pop
push
fcoml
lahf
aas
jg
iret
jle
mov
mov
xor
add
push
xchg
aaa
ror
inc
bound
mov
jno
sub
enter
or
jnp
cs
aas
jg
push
fsubr
je
rcrl
inc
pop
out
pop
xchg
lock
sahf
das
pop
roll
mov
outsb
jmp
into
loop
in
in
ja
popl
jno
jg
loop
push
cld
jnp
sub
out
or
jl
into
mov
add
orl
cmpsb
hlt
lret
xchg
adc
std
enter
sti
or
aas
sbb
xchg
repz
jg
and
pop
fidivrs
stc
outsb
dec
xor
scas
dec
lods
addl
mov
imul
aas
aas
and
cmc
dec
push
jbe
inc
jnp
test
and
lahf
cld
cmp
and
outsb
lock
repz
jb
ret
jmp
mov
cwtl
popa
sub
cld
stc
icebp
test
mov
jae
push
sarb
hlt
inc
out
lahf
aas
mov
pop
imul
push
clc
sti
repnz
cmp
sbbl
scas
cmp
iret
lahf
pop
leave
ds
fdivrl
xchg
cld
stc
repz
mov
cld
jl
inc
lds
dec
add
jecxz
cmp
out
stos
and
push
mov
push
fstl
scas
mov
xchg
inc
ja
push
pop
dec
xor
add
lock
jle
ljmp
add
outsb
jp
and
mov
fistps
cmpsl
mov
mov
pop
mov
lret
fstl
in
in
mov
mov
sub
inc
cwtl
sbb
cmp
sar
sar
repnz
outsb
mov
jmp
popf
or
shlb
jne
lock
mov
loop
mov
ret
cmp
hlt
out
inc
inc
and
repnz
dec
loope
pusha
jmp
jg
cld
adc
mov
lods
lahf
pop
test
aas
mov
sahf
sub
mul
out
cs
pop
pop
add
ret
cmc
dec
dec
sub
xchg
push
pop
jns
sbb
cmp
dec
sbb
pop
add
insb
xchg
cmp
jg
cld
stc
push
xchg
pop
cli
loopne
jecxz,pn
nop
adc
push
das
out
lahf
aas
fistps
fisttps
jnp
divl
pushf
xor
aad
cmp
inc
loopne
mov
mov
scas
inc
jae
movsl
das
test
addr16
aaa
push
jb
cld
stc
repz
stos
fbld
pop
push
xchg
sbb
xlat
add
lahf
aas
jg
and
repz
into
and
pop
cmpb
jo
cmc
xchg
adc
and
xor
std
cmp
cmpsb
mov
sahf
pop
stc
stc
repz
insb
cmp
neg
aas
jnp
xchg
imul
out
ror
lret
mov
iret
arpl
cmp
mov
sub
out
dec
mov
xchg
inc
mov
in
cmpsb
dec
sbb
jno
xchg
push
into
pop
incb
push
pushf
add
repz
adc
ljmp
or
repnz
or
ficoml
das
jg
lea
push
adc
dec
lock
in
push
xlat
cmpsl
in
lret
jle
cli
in
cs
iret
stc
in
popa
cmpsl
adc
fcompp
out
push
insl
or
es
jle
int
fldenv
inc
mov
cld
leave
enter
lret
jg
pop
mov
adcl
mov
out
push
xchg
movsl
loopne
pop
xchg
xchg
cld
stc
adc
inc
dec
outsb
push
cmp
dec
ret
lahf
aas
jg
jne
xor
loopne
int3
dec
jp
jo
repnz
scas
cltd
cwtl
add
pop
ret
icebp
and
scas
xchg
push
pop
jns
cltd
dec
dec
out
scas
scas
test
pop
jns
pop
dec
sti
cmp
scas
fdiv
stos
je
mov
clc
or
push
pop
ss
xchg
aaa
clc
testl
in
aas
scas
push
xchg
les
sarl
push
into
aad
repz
lahf
or
or
xor
out
jns
pop
aaa
jg
cld
stc
andb
insb
cs
faddl
jg
out
lahf
aas
mov
cmp
ss
lds
mov
in
das
pop
push
pop
or
cli
imul
repz
jnp
sub
out
and
push
xchg
sahf
scas
mov
sub
cmp
in
jo
daa
jae
cmp
dec
xchg
and
icebp
in
leave
mov
rolb
inc
adc
fists
or
add
aas
pushl
arpl
pop
jns
and
cmp
cmp
push
shrl
lds
inc
adc
cld
stc
repz
mov
ja
cmp
inc
xchg
ljmp
fisttpl
lds
jle
dec
mov
inc
mov
cmp
in
gs
shl
xchg
lods
xchg
je
mov
mov
fst
scas
cmpsl
leave
pop
mov
add
mov
fisubrl
scas
hlt
sti
repnz
test
jnp
inc
pop
scas
adc
pop
sbb
jno
cmpb
xchg
cmpsb
sar
sahf
decb
dec
bound
cmp
lock
lods
mov
cmp
aas
mov
inc
cld
stc
xor
mov
sub
ja
jl
mov
cmc
mov
sbb
pop
jns
xchg
xchg
or
jl
mov
test
xchg
ja
test
dec
pop
repnz
neg
mov
cltd
dec
std
xor
xor
lret
shrb
add
popf
mov
out
aam
test
scas
test
jb
int3
shr
mov
pop
pop
push
xchg
push
fdivrp
pop
lea
aas
lds
sub
iret
aas
cmc
lret
xor
jno
ljmp
fstpt
ret
andb
aas
jg
cmc
into
cs
xor
rcll
stc
repz
or
and
push
adc
das
idivl
das
das
cltd
adc
lahf
xchg
shl
dec
test
pop
scas
mov
adc
shld
lea
xchg
push
fidivrs
dec
dec
leave
adc
jno
pop
jns
fstp
scas
pop
jge
divl
jp
testb
lds
dec
inc
fbld
mov
mov
cli
and
adc
push
icebp
fs
mov
adc
cs
jg
jle
lds
icebp
fistps
lret
repz
lahf
lret
lcall
push
loop
xchg
in
imul
cld
stc
xor
mov
iret
mov
mov
lds
bswap
sub
dec
sbb
arpl
dec
push
mov
mov
f2xm1
inc
add
mov
lret
xchg
das
xchg
mov
pop
testb
insb
pushf
out
xchg
cmc
std
jb
jbe
pop
pop
nop
jmp
repz
std
je
mov
mov
mov
in
xchg
xrelease
cmp
mov
xlat
addr16
and
inc
pop
inc
jno
cld
stc
repz
mov
push
adc
ds
mov
lahf
aas
jg
rol
fldl
mov
jo
movsl
xchg
repnz
push
pushf
jnp
aad
pushf
imul
cld
mov
push
or
push
daa
or
cmpb
stc
stos
das
aas
jg
push
repz
pop
mov
std
sub
loopne
bound
sahf
jne
dec
lahf
iret
mov
rolb
lret
sbb
xchg
push
fisubrs
fistl
push
lret
out
ds
jge
pop
xchg
xor
cmpl
and
iret
popf
test
aas
mov
fdiv
add
hlt
outsl
jmp
lcall
leave
inc
repnz
pushl
mov
pop
clc
shlb
mov
push
cli
js
push
ds
imul
mov
arpl
js,pn
loopne
xor
aad
pop
pop
cli
daa
inc
test
and
mov
decl
iret
lahf
andl
adc
in
cld
stc
repz
das
sbb
out
push
loop
sarl
add
xor
jle
xchg
aad
mov
lcall
push
cld
or
sahf
jge
inc
sub
arpl
push
aas
jg
in
push
int
push
insb
mov
lahf
sbb
fcmovnu
leave
sarb
and
lret
rcrl
mov
out
mov
push
lret
mov
insb
pop
sub
sub
or
mov
je
lret
mov
dec
negl
dec
rcrb
addl
push
loop
cmpps
lods
out
jns
stc
repz
mov
or
add
test
dec
adc
jle
repz
test
inc
add
sahf
jecxz
xchg
fcmovu
in
pushf
push
mov
cld
stc
mov
xor
push
pusha
mov
add
mov
aas
lret
int3
jle
mov
dec
stos
push
cld
adc
in
mov
cmp
mov
aas
jg
fimull
cmpsl
sub
or
push
out
rclb
pop
mov
clc
bnd
pushf
push
js
jnp
cld
cs
mov
lea
out
pusha
push
popf
dec
mov
mov
sbb
mov
das
scas
lret
sbb
shrb
xchg
lea
out
push
push
jle
in
inc
jl
xchg
rcrb
dec
pop
shr
into
scas
xor
xor
mov
add
inc
into
scas
xchg
ret
sbb
roll
cld
stc
repz
mov
or
jne
ret
jle
incl
xchg
lret
push
dec
mov
lahf
aas
repnz
mov
jns
sbb
ficompl
add
adc
and
push
pop
fwait
lcall
cld
stc
mov
mov
inc
cmp
into
aam
dec
lret
iret
lahf
aas
xor
adc
adc
push
mov
out
lret
psrad
outsl
push
out
cld
stc
xor
cs
out
push
idiv
int
outsl
fimull
lahf
aas
jg
dec
sti
ror
outsb
sub
fmull
xchg
addr16
repz
dec
cmpsb
lret
xchg
cwtl
jbe
stos
test
xchg
std
mov
mov
and
stc
repz
cs
scas
add
aaa
out
popf
adc
jg
mov
stc
pop
les
in
ja
call
sbbl
adc
stos
cli
push
xchg
push
pop
jns
subb
mov
std
dec
stc
aaa
lock
inc
xchg
std
subl
cmpsl
add
jmp
mov
fimuls
cmpsl
hlt
add
pushf
sahf
inc
lock
mov
stos
jnp
aas
jg
lret
push
jecxz
out
sub
mov
stc
repz
shrb
les
pop
movsb
add
das
jle
cld
sub
fisttps
mov
leave
data16
aas
call
je
enter
iret
adc
mov
pop
sbbl
add
cld
sub
xor
push
das
add
out
lahf
push
repz
cmpsl
sahf
outsb
cmpsl
mov
repnz
cmp
mov
pop
stc
add
jle
pop
popf
lahf
pusha
push
cmc
rorl
shrl
inc
jg
imul
add
lods
fs
adc
icebp
push
mov
pop
jns
xchg
fsub
rorb
cmp
loope
imul
push
sub
jg
in
test
lahf
jge
in
test
out
lcall
and
mov
dec
dec
jae
jnp
xchg
push
push
adc
inc
gs
sbb
imul
jns
ljmp
push
xchg
cmp
repz
shl
mov
xor
mov
scas
mov
iret
xchg
shll
xor
out
lret
sub
cwtl
push
aas
test
sub
les
addr16
xchg
sub
mov
fsubr
test
ja
iret
inc
sti
movsl
adc
jl
inc
sahf
repz
repnz
mov
jge
rcrb
sub
nop
scas
sbb
stos
xchg
push
fsubrp
jns
adc
pop
pop
mov
adc
fildll
fidivrl
jo
lcall
out
cmp
pop
popf
sbb
pop
or
out
jne
das
imul
cs
loopne
loop
in
and
xor
in
sub
push
je
out
push
add
ja
and
sar
repnz
dec
xor
fnstsw
add
ds
mov
and
divl
mov
pop
ljmp
orl
cld
cmpsb
mov
movsb
mov
jmp
mov
push
inc
mov
repz
mov
sar
icebp
pop
outsb
aad
stos
cli
ret
loop
enter
cmp
lahf
jg
dec
cmp
in
pop
sub
jecxz
out
in
or
dec
sahf
cld
xor
in
popf
cmp
cmp
out
les
pop
pop
mov
adc
in
out
sub
inc
test
mov
ret
test
out
shll
stos
jmp
aas
xor
fwait
dec
mov
arpl
cmp
pusha
out
pop
std
repnz
sub
jge
cmpsb
ljmpw
cld
stc
repz
cmp
ds
push
es
ficomps
aas
jg
movsb
bound
arpl
sbb
lcall
mov
js
inc
pop
xor
iret
lahf
push
xor
or
push
out
add
cld
or
dec
loopne
hlt
clc
mov
jg
lods
in
xchg
mov
sahf
cmp
pop
jg
pusha
jb
pop
or
jne
iret
imul
mov
xchg
adc
push
or
pushf
cld
stc
add
inc
adc
aas
jg
add
inc
pop
jae
je
sbb
cmp
jge
mov
pop
pop
xchg
jecxz
add
repnz
int
xchg
xchg
pop
pop
sub
pop
add
das
scas
mov
add
stos
iret
inc
xchg
scas
mov
cwtl
dec
mov
dec
fcomp
sahf
mov
xchg
mov
pop
push
cmp
loop
or
aam
add
pop
dec
jns
fstl
jecxz
mov
mov
pop
pushf
inc
call
dec
push
pop
or
jae
cmovle
loopne
call
ds
dec
push
les
cld
inc
inc
jl
sub
jbe,pn
je
das
jg
fiadds
jp
rcrl
pop
out
mov
and
mov
push
adcb
sub
lret
scas
jb
fisubrs
ret
push
cmp
lret
mov
stos
inc
xchg
in
lahf
mov
repnz
enter
ljmp
pop
jns
in
int3
push
rclb
mov
inc
movsb
xchg
stc
xchg
repnz
lock
jbe
mov
jle
imul
mov
or
pop
dec
mov
push
ljmp
outsb
xor
popa
add
push
mull
xchg
sub
scas
xchg
sbb
out
int
jmp
push
jl
inc
stos
push
mov
add
pop
jns
mov
jae
xchg
inc
ret
mov
jle
movlps
pop
mov
xchg
push
pop
jns
dec
shll
inc
mov
in
repz
addl
pop
jns
xchg
and
adc
stc
sub
rcll
lods
ds
gs
sub
loop
pop
imul
js
lahf
outsb
fwait
sbb
add
lock
cs
ja
pop
loopew
cmpsl
sbb
mov
pop
pop
imul
pop
jns
in
mov
add
cld
cmp
mov
mov
or
stos
push
stc
dec
fidivl
stc
and
ffreep
xchg
jmp
dec
sbb
arpl
mov
in
xchg
popa
and
scas
scas
sbb
pop
cld
shr
lcall
sub
out
mov
popf
mov
iret
pop
fs
jp
scas
mov
or
rolb
ss
pop
xchg
and
pop
decb
rcrb
popf
pushf
dec
sub
mov
adc
bound
push
cmpsb
pop
out
jmp
cld
ja
aas
dec
hlt
ret
stc
repz
pop
daa
cmp
pop
dec
in
sbb
fdivr
or
xchg
mov
cwtl
hlt
cli
push
sub
in
pusha
xchg
jae
aam
in
in
shrb
push
outsb
push
shll
pop
aam
aas
jg
cld
out
insb
xor
out
adc
jecxz
movsb
insl
in
xchg
lahf
jl
or
xchg
mov
xchg
push
pop
jns
js
push
into
insb
sub
mov
ja
leave
pop
jns
fisttpll
cmp
adc
fdivl
bound
in
push
gs
sahf
fucomi
sub
cmove
xchg
lahf
lock
sbb
in
sub
pop
or
mov
sub
mov
push
test
stos
jge
add
add
mov
repnz
mov
ret
xor
inc
lret
mov
outsb
lock
lahf
xchg
shr
repnz
sub
mov
pop
pop
jns
das
dec
jge
das
fs
xchg
in
sbb
jns
xchg
push
mov
mov
int3
arpl
adc
mov
sar
fdivr
push
shrb
cmpsb
inc
rcl
push
cmpsl
xchg
and
xchg
aas
jg
push
pop
push
nop
mov
call
pop
fsubp
xchg
mov
push
sti
push
daa
leave
pop
xchg
adc
gs
adc
dec
xor
jmp
mov
ds
lahf
xor
jle
dec
jecxz
pop
movsl
mov
das
ja
inc
mov
xlat
outsb
pop
mov
jg
pop
sbb
mov
pop
push
ret
ror
scas
adcl
addr16
adc
test
lds
lods
jle
pop
push
aas
scas
xor
mov
imul
stc
repz
mov
test
mov
popf
sbb
shl
or
push
nop
push
pop
lea
xchg
stc
repz
ja
mov
push
push
xor
push
rcl
xchg
out
aas
jg
cld
leave
mov
or
fcmovnb
stc
repz
lahf
xor
xchg
cwtl
sbb
jae
cld
push
clc
in
test
and
mov
aas
jg
jnp
and
in
adcl
push
stos
pop
jno
stc
repz
dec
and
sub
bound
sbbb
jg
cld
mov
imul
cmp
xchg
jmp
iret
lahf
jg
dec
neg
mov
data16
jns
jmp
movaps
cli
mov
or
ficompl
in
push
lret
pop
push
jnp
pop
xchg
jb
xchg
push
sub
xchg
and
jl
and
sti
jp
into
pop
fistl
and
sti
iret
lahf
aas
jg
and
push
mov
add
cmp
stc
repz
lcall
fidivl
loop
aam
add
aas
jg
pop
outsb
pop
mov
repnz
dec
imul
out
cld
xchg
push
fmuls
out
adc
adc
adc
dec
popa
in
scas
xorb
mov
test
in
ja
sbb
ret
add
lret
push
pop
stos
fwait
add
imull
icebp
hlt
popa
inc
push
popa
and
pop
cmp
adc
add
mov
iret
inc
popl
aas
sbb
rcll
stc
repz
push
cld
xor
mov
decb
cli
mov
out
iret
xchg
fbld
mov
fmull
cld
sarb
out
and
leave
notb
cld
mov
inc
pop
pop
in
das
ja
push
ret
outsb
shrb
stos
inc
test
in
adc
xchg
sub
jbe
push
into
repz
mov
mov
sub
add
jnp
lret
mov
lods
cld
xchg
adc
lret
sub
leave
jle
push
in
sbb
test
stc
sub
sahf
dec
loopne
and
in
push
iret
lahf
aas
mov
hlt
push
mov
add
mov
pop
jp
repnz
push
mul
sub
rcr
cmpsl
imul
adc
test
lahf
jg
pop
inc
lods
inc
outsb
cmp
ret
dec
popf
xchg
stc
repz
and
sbb
lcall
pop
scas
mov
ret
add
cs
mov
iret
mov
je
mov
cld
stc
repz
rclb
fstpt
roll
mov
das
lahf
aas
jg
jnp
or
aam
inc
out
std
jb
fstp
lock
daa
xchg
mov
loopne
dec
jl
jg
dec
push
xchg
push
push
xor
repz
lahf
fsts
repnz
outsl
cltd
mov
sbb
cld
stc
xchg
xchg
and
sti
push
mov
nop
mov
xchg
insb
in
push
or
xchg
loope
lahf
aas
jg
mov
hlt
sub
cmc
dec
lret
pop
jns
fnstsw
fsubrl
mov
in
push
fstps
imul
hlt
sbb
jg
dec
jge
and
sti
cmp
cmp
push
stos
icebp
add
ds
pushf
xchg
mov
cli
in
ret
fistpl
add
mov
inc
fsubrp
data16
repz
divb
xchg
leave
shll
iret
hlt
jle
mov
pop
jg,pt
cld
ficoms
xchg
insl
addr16
out
lock
xchg
cmp
popa
cld
cltd
pop
adc
lahf
or
xor
enter
adc
jmp
aaa
lods
mov
mov
push
dec
jns
imul
lods
ret
jns
ss
inc
in
test
rolb
jg
jg
hlt
mov
inc
lds
lahf
hlt
jg
mov
lret
xchg
lds
lahf
xchg
fimuls
cld
stc
cs
sub
jg
ja
out
shld
xor
pop
iret
dec
out
pop
clc
repnz
jo
stc
mov
mov
repz
mov
push
nop
jo
popa
ljmp
lahf
aas
jg
inc
fists
lret
pushf
sbb
dec
cmp
test
pop
lods
dec
int3
iret
lahf
jg
jle
add
mov
bound
dec
aam
aam
scas
hlt
xor
out
cli
repnz
dec
fisubrs
sbb
stc
repz
loopne
ds
and
inc
sti
xchg
rolb
jp
cwtl
ds
sbbb
cld
push
or
mov
out
sbb
or
lahf
pop
push
scas
scas
psubsb
mov
xchg
sti
cmp
pop
push
iret
in
lret
out
mov
jmp
xor
icebp
push
das
repnz
or
leave
stc
repz
loope
int3
xchg
push
push
or
pop
mov
jle
cld
aas
jnp
rolb
stos
outsb
je
rcrb
pop
pusha
and
lahf
pop
sahf
xchg
lock
mov
scas
mov
mov
pop
jle
mov
or
repnz
cmp
shlb
xchg
sub
enter
mov
mov
sub
jecxz
js
adc
jo
nop
scas
mov
sbb
cwtl
mov
or
insb
sub
stos
push
sub
lret
sub
nop
inc
mov
imul
std
jb
lret
push
pop
add
inc
incl
std
outsl
call
pop
fdivrp
scas
shll
test
cmpb
lret
xchg
cmp
daa
stos
mov
mov
mov
inc
scas
mov
fnstenv
stos
in
mov
repz
xchg
sub
sub
iret
in
das
mov
stos
pop
stos
outsb
in
push
dec
lea
push
pop
cli
scas
xlat
sbb
inc
aam
inc
mov
mov
adc
mov
in
xchg
ja
inc
pop
lods
sbb
cmpsb
in
call
mov
mov
sti
push
pop
push
xlat
dec
movsl
adc
jl
in
dec
pusha
or
push
sbb
push
lahf
aas
jg
sahf
or
stos
xchg
dec
or
test
das
mov
push
jg
lret
jb
mov
aam
mov
push
daa
xor
mov
sti
jmp
mov
push
fcmovbe
leave
mov
sti
repnz
add
fnstsw
loopne
lret
mov
or
xor
clc
testl
pop
or
movsb
aas
xchg
push
fidivrs
aam
jg
inc
xor
cmc
or
pop
jns
test
push
fwait
xorb
setne
in
iret
sub
scas
cli
ret
xor
cltd
in
xchg
push
sub
bound
jb
in
or
decb
mov
add
stos
mov
jne
xchg
lea
mov
out
mov
pop
jns
adc
mulb
jle
push
push
insb
bound
lea
push
shlb
adc
addr16
pushl
test
xchg
ja
pop
sbb
mov
lds
aas
jge
vmovq
mov
lahf
iret
dec
xchg
aas
jg
jle
sbb
and
add
out
mov
arpl
fistps
cld
stc
repz
mov
sarb
sbb
inc
inc
mov
or
in
sub
and
inc
push
mov
icebp
mov
mov
cld
stc
xchg
hlt
les
jge
in
jecxz
popa
xchg
decb
xchg
push
mov
fistps
mov
push
and
lods
das
movsl
in
scas
cld
pop
int
aaa
outsb
sbb
mov
in
pop
xchg
inc
mov
je
dec
add
out
push
add
pushf
sbb
mov
into
inc
loopne
ret
sahf
movq
or
mov
rcrl
push
cmpb
xchg
and
sbb
mov
imul
fs
iret
cltd
outsl
stos
pop
aas
popa
or
mov
fucom
xchg
ja
pusha
cmp
adc
sub
push
pop
jns
ret
in
jae
iret
cmp
mov
inc
mov
push
pop
jns
in
mov
or
mov
pop
pop
jge
ds
in
and
ja
jns
push
jae
sbb
xor
push
inc
sbb
in
repz
cmp
mov
das
push
jnp
scas
push
mov
push
sub
stc
repz
adc
push
icebp
sub
lahf
aas
jg
mov
out
fiadds
int
cmp
cmp
iret
icebp
ss
jmp
subl
pop
mov
test
xchg
adc
lret
insl
jmp
filds
sub
jg,pt
pusha
repnz
call
xor
out
xorl
rcrb
dec
dec
leave
add
pop
adcl
fmuls
push
mov
scas
cld
stc
repz
cmp
ret
aam
outsl
pop
bound
sarb
push
pop
jle
push
loopne
push
dec
repz
lahf
lea
negb
mov
stos
in
pop
cld
stc
sub
out
jp
inc
adc
dec
into
or
adc
ja
mov
fidivs
mov
mov
mov
lret
fwait
push
mov
adc
test
pop
jg
jg
push
data16
pop
and
das
jg
cld
pop
jb
add
aas
cmc
cmp
pusha
iret
pop
push
jg
jg
add
inc
shrb
lahf
pop
push
adcb
outsl
icebp
in
adc
sbb
sbb
xor
dec
ljmp
push
add
pop
xchg
movsl
movsb
mov
push
pop
scas
mov
mov
or
xchg
cmp
comiss
loop
iret
sahf
mov
stc
repz
jmp
aad
jbe
sahf
lds
xchg
jle
cld
fsubl
mov
mov
mov
lahf
aas
mov
xchg
in
roll
rcrl
add
bound
adc
call
test
decb
mov
cmp
arpl
adcl
lret
fs
jb
ret
add
aaa
fs
cmpsb
pop
inc
adc
in
push
lods
jp
inc
jno
mov
aas
jg
cld
pop
das
into
sub
mov
mov
repz
lahf
adc
ret
adc
pop
cld
stc
and
ss
xlat
lret
pop
xchg
loope
push
and
shl
dec
clc
repnz
fcom
adc
or
mul
mov
shufps
out
pop
das
push
jo
xor
inc
cld
stc
repz
ss
mov
call
rcrb
jg
mov
mov
jge
jle
xchg
jecxz
pop
loope
iret
bound
inc
test
mul
outsb
outsl
xchg
fcomip
out
lahf
push
mov
push
add
enter
jle
cld
stc
xchg
mov
push
jnp
clc
cltd
js
ret
test
in
sub
seta
aam
fnstenv
mov
xor
xacquire
cmp
sub
jle
cmp
xor
dec
out
lcall
scas
nop
daa
mov
lret
mov
loope
mov
movsl
xchg
pop
scas
gs
sbb
and
adc
call
outsl
ds
out
jle
pop
imul
aam
imul
cmp
aad
stc
repz
or
sub
adc
cmp
stos
dec
xor
jg
cld
add
cli
fs
fmull
jle
push
jmp
outsl
mov
xor
jle
jge
inc
cs
cli
cmp
lahf
aas
jg
mov
sub
fstpt
es
lock
ffree
outsl
push
stos
lds
cmp
mov
jb
inc
ljmp
or
add
outsl
js
stc
repz
into
mov
loopne
mov
or
hlt
lahf
aas
jg
scas
pop
lea
fnstcw
subl
stc
repz
xchg
scas
inc
sub
and
add
lret
stc
jo
dec
hlt
fmull
mov
mov
mov
out
call
repnz
or
outsb
fisubs
inc
outsl
xor
push
xor
pop
jp
ja
pop
lret
xor
out
xor
pop
xor
jecxz
pop
adc
and
in
push
add
mov
fldl
mov
aas
jg
push
sbb
or
adc
pop
enter
dec
pop
das
into
inc
mov
out
test
push
xlat
cld
rcrb
or
mov
jp
mov
aam
push
ret
jg
or
stc
xchg
sub
adc
pop
mov
inc
addr16
xor
scas
mov
jp
mov
testb
cmpsb
xor
and
lret
cmp
xchg
js
mov
mov
scas
stc
push
sbb
outsl
pop
jns
adc
pop
inc
pop
cmp
or
in
sbbl
clc
xchg
push
pop
jns
cmp
imull
insl
shrb
pop
lahf
imul
pop
jns
xchg
daa
mov
adc
fadd
pop
jns
xchg
outsb
sti
scas
fwait
into
sub
js
sub
lock
rclb
xor
mov
stc
repz
jmp
je
cltd
sbb
jle
cld
test
mov
nop
jecxz
iret
lahf
aas
repz
fbstp
bound
jge
stc
repz
cltd
pop
fs
jg
out
pop
sbbl
xchg
jb
scas
mov
decb
pop
xchg
ds
jmp
push
lcall
les
pop
sti
arpl
pause
dec
adc
fstps
outsl
fnsave
out
mov
jmp
sar
inc
jle
repnz
fidivrl
repnz
hlt
ret
adc
jg
sahf
xor
cmp
lret
imul
sub
scas
push
out
ret
or
std
inc
movsb
mov
inc
cmp
inc
insb
iret
lahf
aas
dec
push
arpl
test
jns
in
loopne
xchg
scas
in
mov
test
push
pop
pop
dec
pop
dec
fildll
ss
fdivrp
jb
pop
fmulp
xchg
shll
loopne
mov
mul
xchg
push
movsl
push
fldcw
flds
mov
jl
inc
jmp
cld
stc
repz
bound
sti
rclb
or
jns
pop
loope
out
dec
push
test
es
minps
xlat
cwtl
and
jnp
in
dec
dec
stos
lahf
xchg
sbb
jnp
repnz
sahf
aaa
hlt
cld
mov
xor
int3
jp
repnz
sub
fldt
fidivrs
cmpsl
mov
inc
popf
xlat
pop
push
dec
clc
dec
adc
pop
dec
pop
and
pop
sub
ljmp
iret
xor
in
lods
cwtl
jb
ds
and
cld
in
mov
adc
mov
iret
lahf
dec
dec
push
push
js
leave
pop
call
iret
std
aam
pop
jmp
daa
mov
scas
and
fildll
and
cld
stc
pop
inc
sbb
ds
pop
sbb
mov
iret
lahf
aas
jle
loopne
jbe
mov
mov
stc
repz
lret
aas
cmp
xchg
mov
xlat
clc
test
fcmovb
iret
icebp
in
enter
xor
das
popa
cli
in
out
jbe
xchg
flds
ljmp
inc
jle
scas
lods
mov
ret
mov
or
repz
divb
jg
es
addr16
dec
lahf
aas
jg
fs
test
push
adc
jmp
iret
nop
adc
out
fwait
pop
loopne
adc
jl
adc
inc
xor
dec
cmp
js,pt
nop
jle
mov
aas
push
mov
sub
mov
sti
cmp
repnz
lret
in
sub
push
repnz
inc
mov
jnp
aas
flds
stos
mov
mov
sbb
stc
repz
mov
mov
mov
add
jg
cld
adc
shr
mov
xchg
ja
pop
pop
sbb
clc
outsl
sbb
sti
enter
mov
int
lret
mov
inc
xor
pop
sub
jae
daa
or
in
cs
lock
ss
scas
mov
push
cltd
mov
jb
inc
aad
mov
lret
out
shll
div
xor
cld
fwait
pop
fucomip
sub
adc
clc
mov
test
lcall
pop
fimuls
xchg
repnz
and
divps
lods
push
mov
adc
push
mov
xchg
push
out
bound
pop
das
stc
sub
mov
jns
ljmp
jg
jle
xor
sub
jmp
push
scas
pop
and
xchg
jnp
jge
xchg
add
mov
mov
scas
pop
lcall
cmpl
loop
rcll
ljmp
popf
cmp
xchg
sub
mov
ret
xor
cmc
push
jg
lea
lahf
fdivr
fwait
jge
pop
outsl
inc
in
xchg
paddd
sti
and
mov
push
xor
jl
and
pop
sbb
dec
cltd
pop
sar
addr16
pop
push
sbb
cmp
mov
into
cld
fimull
push
stos
pusha
sbbb
pop
cmc
jmp
das
ja
aaa
fimuls
pushf
push
mov
aaa
aas
jg
inc
jle
jnp
xlat
add
inc
mov
out
lahf
in
mov
ret
imul
sub
jg
cld
stc
fcoms
stos
fiadds
pop
or
adc
into
das
lahf
aas
js
bound
cltd
std
or
sub
ds
mov
test
cli
repnz
popa
jae
pop
loop
movsl
mov
in
mov
sub
push
cwtl
add
lahf
mov
add
cmp
nop
add
mov
in
insl
mov
mov
and
fmul
jne
stos
mov
sti
add
mov
outsl
jecxz
stos
xchg
sub
sub
cmp
les
xor
adc
adc
scas
mov
outsb
push
mov
out
jle
repnz
sub
xchg
lcall
mov
aam
repnz
pop
jg,pt
jle
rclb
scas
add
push
ja
xchg
aas
mov
inc
pop
cltd
dec
xchg
js
scas
mov
fldt
cmp
loop
sbb
repz
bound
outsb
adc
das
pop
lea
mov
push
jae
push
jg
pop
imul
sahf
add
lahf
pop
adc
push
jmp
negb
mov
out
lret
or
dec
out
out
shl
scas
call
movsl
pop
scas
mov
mov
loop
mov
xor
adc
in
repz
aas
cmp
sub
pop
into
add
xor
out
lahf
sub
and
ja
adc
pop
aam
dec
out
cld
add
repnz
in
loopne
xchg
or
dec
sub
jle
push
xchg
mov
pop
jmp
outsb
mov
repnz
mov
xor
add
sti
sti
pop
test
pop
out
std
lcall
out
mov
insl
fcmovne
fs
fsts
fcompl
inc
out
and
inc
punpckldq
add
das
and
inc
ds
mov
pop
sbb
lods
dec
popf
fbld
lret
ret
lods
push
jg
mov
out
mov
lds
scas
lret
pop
mov
jns
xchg
push
adc
xchg
or
data16
lret
adc
in
outsl
jnp
out
aas
lock
jne
into
jne
lock
sub
cld
stc
repz
xor
in
out
ret
push
or
xor
ja
lahf
imul
imul
test
xor
les
mov
cmp
xor
out
loope
lods
mov
xchg
repnz
cwtl
mov
stos
ja
jo
xchg
jns
xchg
push
jnp
push
rcrb
xchg
xor
jmp
incb
sbb
int3
xlat
ficompl
mov
add
iret
lahf
aas
ljmp
imul
cld
stc
repz
mov
fs
inc
dec
lahf
xor
fcomip
out
lret
jg
in
inc
add
pop
out
mov
in
inc
mov
jno
repnz
sub
jns
das
sbb
mov
or
sahf
sub
lret
xchg
push
and
xor
psubsb
add
jecxz
lds
cld
stc
rep
stos
sbb
in
sbb
mov
sub
mov
ja
hlt
and
ficoml
dec
push
fidivrs
inc
mov
scas
cmp
mov
call
inc
in
mov
mov
pop
jns
push
add
pop
add
sbb
fdivrp
repnz
sahf
jg
mov
adcb
mov
pop
stos
lods
arpl
mov
data16
outsl
pop
push
frstor
test
adc
out
dec
lods
xchg
push
pop
jns
ret
das
or
or
imul
push
pop
jns
mov
xorb
js
pusha
mov
mov
jns
xchg
lds
hlt
clc
dec
lahf
imul
push
std
mov
sbb
mov
inc
pop
and
push
or
das
lahf
xchg
add
sahf
jecxz
pusha
rorb
ret
in
int
and
lret
fs
push
pop
jns
dec
mov
frstor
mov
inc
pop
jns
cwtl
xor
add
or
lret
xchg
ja
mov
lahf
out
add
pop
jns
popa
in
fidivs
push
sbb
pop
into
jae
jns
in
into
sar
aas
xor
sbb
adc
jns
xchg
push
push
and
mov
shll
into
mov
in
push
pop
jo
jnp
lock
add
mov
movsbl
lock
lods
or
subl
jg
xchg
add
pop
mov
repz
jo
in
enter
or
xchg
lret
jle
mov
adc
daa
ds
ja
lret
jg
lea
or
add
repz
outsb
nop
pop
dec
xchg
shr
jecxz
lahf
aas
jg
into
dec
imul
cs
out
test
sahf
mov
push
lret
dec
rcrw
cld
das
mov
xchg
icebp
nop
fwait
push
xor
iret
lahf
pop
pop
mov
dec
sbb
fidivrl
jecxz
sub
out
scas
inc
xchg
mov
jno
pop
mov
push
push
hlt
fsubs
sub
lahf
pop
push
jmp
movsb
push
xchg
sub
loopne
loop
shrb
ja
jl
mov
jb
xchg
push
pop
or
bound
aam
cmc
sub
nop
mov
movsb
mov
sub
push
cmp
mov
scas
mov
call
add
ret
incb
call
lods
jns
rcll
enter
gs
inc
xlat
outsl
dec
int
ds
push
pop
jns
ja
jg
sahf
ja
loopne
lahf
cmp
cld
mov
and
mov
xorl
lret
jno
add
outsb
pop
fsubrs
scas
mov
cmp
test
das
ja
lret
or
faddl
btrl
add
xchg
paddq
mov
jle
stc
repz
mov
sahf
pop
movsb
pop
jno
push
enter
lahf
aas
jg
out
dec
or
out
out
dec
lahf
mov
lahf
repz
out
out
aas
jmp
sarb
or
jbe
pop
pop
jle
jl
sbb
jnp
js
imul
cltd
jne
pop
jg,pt
inc
loope
xchg
scas
inc
jmp
stos
dec
inc
popf
ds
icebp
bnd
sub
push
and
leave
push
lret
int3
gs
xchg
jg
insl
enter
jae
repnz
lahf
incb
cmp
sahf
and
iret
xchg
shll
mov
in
adc
push
sarl
cld
scas
std
loope
add
jg
cli
sbb
xor
mov
mov
test
lcall
fbld
cmpsl
mov
inc
aad
mov
in
mov
cmpsb
sub
ret
repnz
adc
jmp
call
je
mov
lahf
adc
lahf
jg
stc
test
sbb
sbb
mov
sbb
cmpb
jle
sbb
push
out
out
mov
popf
adc
pushf
ss
das
aas
mov
xchg
dec
lret
lret
fstpl
lahf
sti
xor
lahf
pop
out
lahf
aas
mov
adc
xchg
pop
mov
pushf
insl
ljmp
jle
sahf
push
aad
push
mov
cld
stc
repz
test
adc
cld
lahf
aas
jg
mov
jns
pop
add
sbb
dec
stc
repz
arpl
or
add
and
mov
add
inc
icebp
repnz
ljmp
push
cmp
xor
mov
mov
and
jno
xlat
add
or
cmp
sub
jle
dec
outsl
data16
ss
xor
sub
aaa
push
lea
std
movsb
nop
rcl
lods
xchg
pop
punpcklwd
mov
jmp
iret
or
mov
daa
cs
jle
cmp
add
mov
stc
cld
jg
ljmp
mov
mov
dec
mov
flds
ja
mov
ss
das
aad
cltd
in
push
pop
jge
adc
xor
jl
sbb
add
xchg
outsl
in
cli
sbbl
mov
sub
call
sbb
lret
mov
xchg
push
aam
test
pop
xlat
push
sub
nopl
jle
mov
idivl
ja
and
repnz
mov
call
fdivrs
pop
scas
sub
into
cvtps2pi
jns
scas
cs
pushf
movsl
cwtl
push
mov
out
push
cld
jb
das
mov
mov
mov
cli
in
add
push
pop
xchg
adc
fdivrp
fwait
cmc
in
das
push
fwait
mov
inc
push
pop
jns
push
lods
sbb
push
enter
not
dec
aam
pop
jns
xchg
mov
mov
dec
mov
push
lahf
aas
mov
push
mov
popa
push
pop
jns
pop
inc
popa
loop
pushl
mov
mov
in
test
push
call
repnz
call
sbb
orb
push
lds
and
cmp
jmp
mov
cmpsb
repnz
jecxz
xchg
mov
shr
imul
outsb
repnz
cmpb
stc
jbe
icebp
sti
in
sub
sbb
fnsave
sub
mov
cmc
pushf
js
leave
cli
in
clc
jmp
mov
mov
jg
jb
push
cltd
mov
lret
jne
test
lret
iret
call
bound
inc
and
jl
sbb
cld
enter
xor
mov
adc
lahf
aas
jg
xchg
call
push
pusha
mull
repz
jbe
mov
cs
dec
mov
jns
xchg
idiv
sahf
lods
add
push
and
ds
addb
mov
fimuls
push
and
aaa
lock
out
xchg
push
xchg
xchg
ja
loope
xchg
xor
xor
es
jb
in
push
pop
and
mov
mov
repz
push
insl
push
sbb
xor
push
pop
jns
add
adc
mov
sub
imul
scas
lods
push
punpcklwd
into
fiaddl
mul
out
add
mov
imulb
or
std
xchg
popf
jo
sub
cltd
pushf
mov
jg
imul
out
aas
outsb
fldt
in
mov
pop
lods
jmp
repnz
pushf
hlt
pop
inc
cmpsl
pop
dec
lcall
mov
cmpsl
mov
lods
test
mov
dec
divl
sub
pop
cs
lea
sbb
mul
out
lret
ret
mov
int3
mov
call
inc
loop
jle
cmp
in
pop
daa
adc
shrl
cmc
out
ja
pop
jns
hlt
cmpsb
outsl
sbb
adc
mov
fnstsw
xchg
sbb
pop
adc
leave
test
pop
inc
jg
cmpb
addl
stc
stos
push
mov
push
jg
cld
stc
mov
cmpsb
ljmp
sbb
lods
mov
jb
and
in
xor
xchg
and
mov
jle
je
jb
xchg
test
fdivl
cmp
in
shl
pop
mov
xor
std
jb
pop
mov
jmp
scas
aas
jg
sub
pop
fwait
sbb
pop
adc
out
lahf
mov
rcrl
cmpsl
imull
mov
pop
dec
mov
fistpll
push
pop
push
adc
and
add
outsl
lret
sub
jle
fwait
ret
push
xor
popf
roll
mov
and
in
push
mov
lret
repnz
adc
dec
sbb
xchg
mov
jne
xchg
sbb
pop
jns
fstl
add
pop
fisubrl
rclb
insb
xchg
pop
add
pop
out
mov
dec
scas
xchg
jnp
mov
repnz
dec
fcmovnb
std
add
mov
fdivrs
sub
mov
imul
rclb
loop
pop
ljmp
mov
xor
movsb
jmp
xchg
ja
rcr
push
jg
push
fst
mov
popf
adc
pop
pop
jns
out
jns
jmp
adc
dec
incl
jb
loope
in
sub
dec
lcall
mov
sbb
and
jp
jne
and
mov
mov
mov
pop
out
lahf
jg
and
cmpsl
mov
cld
stc
repz
test
jge
xchg
jp
insw
iret
lahf
aas
jg
shrl
jg
lret
scas
out
cmc
xchg
out
bound
test
fsub
pop
xchg
sbb
push
insb
sub
pop
repz
scas
sbb
lcall
stc
stc
jne
mov
popf
push
mov
jle
cld
sti
pop
jae
mov
dec
inc
cltd
dec
push
pop
mov
mov
mov
aas
test
xor
jp
hlt
into
jns
in
sub
mov
imul
ret
add
in
push
pop
jnp
cs
repnz
das
push
pop
jns
lret
xor
add
sar
hlt
lahf
aas
aas
incb
sahf
popa
mov
rcll
stc
repz
sahf
leave
das
std
mov
mov
push
les
jg
cld
outsl
loope
int3
inc
ret
pop
pusha
pextrw
orl
iret
lahf
push
aas
mov
jns
and
push
push
dec
cli
in
imul
push
clc
stc
dec
inc
cmp
inc
dec
adc
inc
das
fisubrs
out
cld
cld
stc
repz
lods
cmpsb
test
xchg
hlt
inc
roll
push
es
and
sbb
jns
pop
cs
out
mov
mov
fsubl
loopne
fstl
cmc
cmpsb
xchg
xchg
push
pop
jns
push
mov
popa
jo
jns
repz
pop
jns
and
in
call
jmp
fwait
cld
rol
arpl
aaa
orb
mov
jle
lds
sbb
pop
sti
mov
in
lret
jbe
mov
rcrl
fcomps
lret
ficomps
cld
movsb
lcall
pop
scas
or
xor
mov
out
dec
cmp
jae
xchg
adc
cltd
xchg
pop
arpl
jg
cld
stc
inc
aas
jl
insl
and
mov
mov
das
sbb
jmp
out
scas
lahf
loope
adc
mov
leave
and
mov
sub
jno
mov
in
lret
mov
mov
and
sub
add
sti
div
adc
mov
jne
pop
iret
in
aad
jecxz
fnsave
aas
xor
out
into
dec
imul
sbb
mov
add
loopne
arpl
aas
mov
pop
imul
dec
insl
mov
out
lahf
mov
mov
inc
aad
mov
sub
daa
das
mov
xchg
inc
adc
sbb
std
jb
jmp
push
shll
clc
sub
jb
xchg
push
lahf
sbb
xor
test
dec
std
cmp
in
pop
push
mov
lahf
pop
inc
pop
push
mov
and
cmp
iret
dec
dec
jns
mov
inc
or
mov
outsl
push
jle
dec
and
movsl
mov
sub
push
iret
sub
xchg
pop
jns
xchg
pushf
insl
dec
adc
scas
or
xorb
push
push
in
jo
inc
ss
xchg
enter
inc
pop
pusha
sub
test
jg
or
jge
in
ffreep
leave
jl
sbb
mov
pop
xlat
rclb
dec
jge
int3
lahf
pop
jns
fnsave
pusha
pushf
xchg
shlb
out
in
ja
into
jns
iret
decl
pop
jns
pop
enter
fidivl
fwait
aaa
mov
sar
addr16
jns
xchg
inc
js
sbb
xchg
lahf
rol
stos
sbb
and
mov
imul
cmpsb
test
and
cmp
stc
test
ret
mov
dec
loop
cmp
add
mov
or
xchg
jns
jae
jl
vmread
sahf
xor
xchg
aam
xchg
push
pop
leave
pop
cwtl
test
lock
rorb
les
stc
sbb
in
push
pop
pop
sub
pop
jns
sbb
lret
add
sub
jle
jns
xchg
cmp
sbb
jns
xchg
push
inc
cld
jl
xchg
adc
ficoml
mov
mov
xchg
push
pop
shufps
mov
call
cld
stc
mov
jle
stos
cmpsb
test
sub
pop
incb
xor
out
out
scas
mov
orb
jb
cs
es
sub
mov
loopne
pop
push
mov
mov
and
inc
dec
mov
rolb
pushf
aam
push
mov
ss
add
in
rorl
out
scas
movsl
inc
pop
push
clc
lods
and
cltd
in
xchg
iret
ja
dec
enter
xchg
punpckldq
sub
xor
iret
inc
fisubrs
std
sub
cmpsb
addr16
push
movsb
cld
sub
into
nop
mov
subb
jnp,pn
add
sarl
das
das
mov
mov
push
push
sub
jg
test
js
jo
iret
rclb
mov
out
push
jp
ja
jg
mov
push
rclb
out
lcall
inc
xchg
int3
mov
pusha
push
xchg
ret
jmp
out
int
sub
imul
push
add
mov
out
mov
fists
orl
dec
repnz
rcr
mov
and
lods
lods
lret
mov
dec
je
sar
clc
repnz
test
push
xchg
push
es
aas
jg
pop
fadd
sub
pop
push
pop
out
cmp
stc
jae
lret
and
js
or
cld
fisttps
or
jae
into
arpl
lret
xchg
ja
repz
outsl
sbb
pushf
das
pop
jns
cmpsl
icebp
rcll
popa
das
cmpl
jle
std
jge
fadd
das
sub
or
cmp
roll
lahf
aas
jg
addr16
out
loope
loope,pt
roll
lock
loope
in
xor
repnz
in
mov
les
adc
xchg
aaa
mov
mov
mov
mov
repz
lahf
dec
jae
sub
fsubs
call
ret
mov
sbb
mov
sub
and
ret
stc
repz
cltd
push
sub
xorb
inc
mov
jg
fucom
arpl
cs
pop
scas
mov
pop
ret
test
lahf
adc
mov
fld
repnz
fdiv
das
jne
push
push
mov
cs
mul
iret
lahf
aas
mov
rorl
lahf
loope
mov
js
stc
repz
std
mov
int
repnz
fistpll
xchg
filds
or
cmp
scas
stos
daa
mov
or
test
and
jne
add
repnz
or
inc
popf
js
mov
jle
stos
dec
outsb
cmpsl
in
ja
mov
inc
mov
inc
adc
jns
test
lret
jo
xchg
sbb
mov
jns
in
jbe
mov
mov
push
xor
mov
into
jmp
hlt
lret
out
repz
imul
cmc
mov
jmp
iret
mov
mov
pusha
repnz
repz
jcxz,pn
in
dec
or
les
daa
add
mov
adc
les
rcrl
scas
inc
inc
stc
repz
mov
xchg
and
loopne
std
xchg
icebp
repnz
out
adcl
daa
outsb
jb
fsubs
xchg
dec
dec
stc
lret
xchg
push
pop
jns
jae
daa
movsb
cli
or
fstps
xchg
and
stos
daa
mov
jns
mov
lods
les
clc
sub
xor
sub
repz
pop
lcall
pop
add
or
das
stc
mov
inc
adc
mov
and
in
scas
sub
repnz
or
fs
inc
cltd
repz
jmp
and
push
jg
cld
stc
insl
sti
enter
ds
aad
mov
aas
gs
fsub
add
stc
repz
push
xchg
fsts
arpl
testb
jg,pt
cld
cmp
dec
into
sub
scas
cwtl
dec
shlb
in
loopne
mov
sbb
mov
or
arpl
or
scas
mov
add
out
adc
dec
es
jae
iret
je
in
je
sbb
jg
mov
cli
in
fistps
je
in
sub
jo
add
rorl
mov
sbb
jg
dec
out
push
push
fidivrs
adc
xor
das
jg
dec
mov
pop
push
dec
ds
push
sub
fs
pop
sbb
and
das
cld
dec
lds
repnz
xchg
dec
bound
inc
inc
mov
jg
lahf
aas
mov
mov
mov
out
adc
xchg
fcoml
mov
popf
rorb
orb
cmpsl
xor
cmpsb
in
mov
loopne
jbe
xor
stc
repz
aaa
inc
daa
stc
clc
cmc
pop
cmp
data16
inc
fimull
pop
mov
lahf
pop
push
out
xor
jo
mov
cld
stc
xrelease
push
xchg
dec
lock
ret
jne
cli
xchg
test
aas
jmp
lods
int3
sbb
int
mov
popf
roll
cmpl
repnz
mov
dec
inc
and
adc
dec
rep
std
repnz
and
cmp
sbb
cld
stc
inc
psadbw
aas
push
inc
xchg
pcmpeqw
out
xchg
mov
xor
xchg
mov
aaa
jecxz
mov
stc
repz
loopne
adc
imul
cld
lret
mov
push
pushf
out
leave
mov
mov
flds
adc
stc
repz
add
cmp
pop
mov
ret
test
cld
mov
sub
inc
in
scas
lcall
rcr
das
outsb
lods
insb
dec
lock
fsts
cmp
lahf
aas
jg
stos
mov
lea
xor
repnz
in
mov
dec
dec
mov
cmp
cld
dec
pop
mov
frstor
incl
mov
fstl
pop
xchg
pop
sahf
test
iret
lahf
mov
mov
stc
stc
repz
sarl
xchg
sub
mov
mov
pop
in
sbb
sub
lahf
jg
mov
push
cmp
push
mov
jb
mov
jg
pop
aad
sahf
fsubrp
lret
mov
and
push
ljmp
enter
sub
cmp
sub
jle
ds
fadds
pop
jns
xchg
push
ss
pop
jmp
gs
add
in
push
push
insl
stos
fmul
scas
pop
pop
xor
scas
xchg
in
push
pop
xchg
clc
push
dec
enter
ret
ja
repz
loope
das
out
bound
mov
sarb
xchg
ja
ds
cwtl
popa
lret
mov
in
push
pop
jecxz
adc
xchg
pop
inc
rcl
ljmp
pop
inc
movsb
jmp
pop
das
out
jg,pn
jge
test
sub
mov
push
fidivrs
addl
push
pop
jns
lods
cmpsl
ficoms
popf
xchg
sbb
or
cld
push
adc
int3
aaa
aad
call
xchg
ja
icebp
cmp
xchg
loope
iret
inc
push
sub
push
pop
clc
or
test
imul
popf
ret
add
fptan
jbe
pop
rclb
push
or
adc
lret
cmpsb
js
aad
fldcw
sub
push
pusha
scas
mov
xchg
mov
sarl
or
bound
lret
sub
pop
or
pop
inc
add
out
adc
fdivl
lahf
inc
repnz
les
xchg
iret
das
lea
aam
aas
dec
fimuls
xor
das
mov
push
pop
jmp
das
scas
mov
sbb
mov
pop
movsb
push
dec
pop
jns
xchg
imul
and
pop
jns
xchg
push
mov
push
inc
andb
mov
mov
xor
inc
cli
dec
xor
scas
mov
test
insb
loope
or
mov
cmp
dec
cli
in
stos
ret
pusha
sbbl
sub
stc
repz
iret
add
hlt
xchg
push
lods
pop
fldcw
or
repnz
mov
sub
outsb
arpl
lret
lahf
aas
shl
stc
push
aaa
mov
iret
lahf
aas
mov
mov
pop
movb
mov
into
cld
stc
repz
or
jbe
sbb
sub
xor
pop
aam
or
sub
or
sub
jle
pop
out
std
cltd
aas
jg
and
repnz
movsl
daa
out
stos
sub
xchg
inc
jg
gs
mov
sahf
out
aas
mov
out
lahf
lahf
dec
mov
dec
dec
scas
push
pop
out
pop
lcall
add
fisubrl
out
lahf
jecxz
mov
mov
lock
push
xchg
lock
cld
stc
push
mov
ljmp
das
mov
mov
and
adc
stc
adc
or
jns
ret
loop
popa
add
add
test
iret
lahf
pop
mov
js
fisubrs
std
repnz
repz
xchg
fdivs
cmpsb
sbb
and
push
fdivrp
mov
sub
jae
pop
incl
pop
jns
mov
repnz
mov
stc
scas
dec
mov
div
in
mov
jg
push
jno
xchg
outsl
mov
push
pop
jns
and
jg
push
or
outsb
scas
mov
cli
aad
sbb
push
sbb
fisubrl
loop
sub
mov
dec
jg,pt
into
movb
dec
fldt
push
xchg
rcrl
mov
adc
sti
add
mov
pop
jns
pop
and
inc
sbb
aam
jp
or
in
ja
push
int3
or
je
pop
dec
mov
and
jl,pn
movsl
xchg
int3
inc
nop
dec
pusha
das
out
lahf
aas
inc
mov
ret
dec
repz
mov
or
repz
mov
lahf
dec
cmpsb
call
push
repz
xchg
inc
sub
pushf
cmp
movntq
lret
and
dec
fdivrl
xchg
xchg
or
sub
jecxz
je
rclb
fdiv
lret
jno
pop
fs
iret
and
lret
sub
dec
push
and
sub
mov
aad
les
popf
insl
mov
les
sbb
pop
adc
cmp
pop
push
imul
mov
cmpb
in
adc
dec
pop
xor
xor
in
mov
frstor
test
dec
call
pop
inc
mov
push
pop
mov
cmc
pop
jg
out
lahf
or
sub
xchg
ja
add
push
aas
scas
in
mov
cld
jb
inc
test
repnz
pushf
bound
mov
dec
xor
aas
jmp
ds
xchg
out
push
dec
jnp
fistpll
push
jno
lods
pop
mov
dec
das
and
outsb
inc
mov
rclb
pop
jns
push
mov
out
push
aaa
mov
bound
fisttpl
das
lods
sub
inc
mov
mov
pop
add
mov
sbb
stc
repz
ds
int3
push
scas
in
mov
jo
jne
jnp
jg
pop
cmpsl
push
out
xor
mov
sbb
jg
aaa
test
lret
mov
pop
xor
cld
stc
repz
outsb
pop
imul
pop
inc
lods
and
fldt
add
pop
mov
mov
inc
ss
in
iret
lods
test
rcl
mov
dec
popf
cs
cld
stc
aaa
into
int3
pop
jp
rcl
fcmovbe
dec
stc
movsl
mov
xor
test
jg
dec
aas
aas
jg
cld
test
loopne
dec
jns
fdivp
shlb
mov
cmp
cld
xchg
sub
mov
push
aad
out
push
stc
repz
jmp
mov
fcmovne
into
pop
jle
cld
cld
addl
cmpsb
lahf
nop
jno
inc
cmp
and
xchg
ja
iret
add
cmc
fistps
push
adcl
mov
std
lret
or
jp
out
mov
in
stos
repnz
lret
iret
ret
inc
push
inc
push
mov
sbb
fcmovne
sub
jnp
sbb
leave
xchg
push
fsubp
jns
mov
dec
into
lret
mov
in
insl
ss
pop
jns
cmp
mov
pop
push
test
cmp
fcmovnbe
add
scas
pop
push
mov
loopne
repnz
subl
push
sbbl
std
sti
jb
cmpsl
loope
and
aad
decb
fadds
jns
xchg
push
jno
xchg
lret
es
mov
nop
pop
pop
pop
pop
inc
cmc
int
clc
jle
cmpsb
outsl
in
iret
lahf
push
das
dec
add
adc
lock
cltd
out
dec
pop
mov
push
outsb
notl
es
mov
jns
xchg
ja
mov
call
lret
pop
repnz
pop
pop
aam
or
xor
pop
inc
cltd
inc
out
lret
mov
and
fwait
push
pop
scas
mov
or
pop
adc
stos
popf
mov
pop
daa
or
pop
push
or
add
stos
pop
aaa
cmpsl
add
repnz
out
test
push
in
push
pop
mov
pop
dec
pop
adc
push
fists
jb
scas
mov
sbb
imul
aas
jg
int3
mov
jge
enter
cld
stc
repz
lret
and
in
es
jg
ficoml
mov
aad
add
mov
iret
scas
lods
loope
ljmp
jae
lret
inc
call
lret
inc
and
adc
jecxz
pushf
outsl
cld
cld
add
in
cs
sbb
cli
mov
sub
mov
xchg
es
mov
scas
mov
in
jmp
and
fs
xchg
push
sbb
aas
ss
pop
mov
dec
into
add
gs
iret
lahf
fwait
xor
and
pop
add
add
ja
sti
in
leave
xchg
cmp
adc
jmp
jns
sti
ss
loop
in
pop
add
inc
push
es
lahf
add
insb
cmp
hlt
cli
lret
jle
rclb
aas
stc
push
mov
mov
adc
xor
sbb
je
je
pop
and
loopne
inc
cmp
or
jge
jl
add
int3
add
cld
stc
repz
stos
stos
rcrl
push
cmpsb
das
lahf
aas
jg
xor
or
rol
rcrb
das
lock
and
cld
stc
repz
push
jae
pop
stos
inc
push
push
das
fidivrs
sbb
repz
xchg
or
cmc
and
lea
repnz
lret
iret
test
nop
dec
in
cltd
stc
dec
pusha
les
push
lret
mov
push
sub
rep
fmulp
jb
mov
push
rolb
scas
stc
pop
jo
dec
or
pushf
cltd
sbb
mov
and
mov
movsbl
xlat
das
lahf
aas
mov
test
loop
xchg
mov
lcall
fwait
aas
call
adc
and
sub
xor
xchg
pusha
in
push
fidivrs
sub
aaa
xchg
into
stos
xchg
fmul
out
in
and
loopne
scas
cmp
testl
int3
movl
in
jno
cmpsb
inc
pop
cs
shrl
popa
insl
mov
in
push
pop
add
mov
sbb
xchg
ja
pop
push
pushf
lock
inc
inc
aas
insl
aam
sbb
pop
pop
jns
push
ss
lret
cs
push
add
int3
or
in
ja
pop
loop
sbb
repnz
xor
daa
mov
xchg
push
pop
or
or
in
cmp
xchg
xchg
loopne
mov
push
sub
mov
shrb
sbb
iret
lahf
xor
and
push
or
stc
repz
scas
orl
mov
int3
xchg
push
fdivrp
mov
or
ds
push
sbb
and
in
dec
push
pop
cld
fwait
scas
hlt
out
cmpl
out
dec
cmp
iret
lahf
aas
jg
into
xchg
out
aam
fs
cmp
mov
repz
lock
xchg
int
mov
and
scas
mov
pop
in
jle
push
pop
mov
pop
pushf
push
repnz
jmp
xchg
stos
movsb
call
pop
pusha
adc
push
xchg
imul
lock
addb
orb
ds
mov
out
in
rclb
jne
aas
jne
mov
xchg
and
add
hlt
andb
sub
jnp
xorb
jb
mov
rol
inc
jecxz
das
cmp
jbe
std
jb
rcl
iret
xor
fwait
rolb
rcll
or
repnz
out
lahf
pop
pop
push
aam
cli
inc
roll
jg
mov
mov
repnz
cmc
mov
ja
mov
movsl
fldl
sub
scas
mov
cmpsb
sub
test
ds
jmp
faddl
pop
jle
adc
in
cmc
daa
pop
adc
ret
and
repnz
into
xchg
jne
aaa
pop
push
das
jg
mov
push
pop
mov
jle
das
je
inc
mov
sub
div
cwtl
pop
xchg
out
lahf
aas
insb
xor
mov
mov
or
std
std
xor
inc
push
cmp
call
xchg
dec
and
je
xchg
sbb
insb
test
xchg
lahf
mov
outsb
mov
push
outsb
push
enter
out
in
mov
pop
cmp
std
repnz
clc
push
ja
idiv
scas
or
movsb
jle
dec
mov
arpl
scas
ss
push
mov
add
test
je
popf
daa
jge
stc
pusha
stc
repz
fwait
adc
outsb
or
push
or
loop
jl
cld
adc
lods
repz
roll
pop
adc
pop
imul
loop
loopne
or
nop
push
mov
scas
pushf
xchg
ja
in
aaa
adc
push
insl
or
hlt
jb
and
test
popa
out
xadd
mov
mov
inc
xor
cmp
scas
inc
adc
pop
sub
mov
scas
adc
lahf
gs
scas
mov
filds
mov
dec
dec
adc
jg
lods
das
adc
sarb
xor
xchg
out
lahf
aas
mov
les
dec
orl
and
jmp
pop
lcall
xchg
mov
jg
stos
pop
fcmovu
jge
sidtl
or
jns
fimull
sub
xchg
div
mov
add
in
test
mov
jle
aas
shll
mov
pop
fmull
sbb
stc
add
xor
into
mov
and
lret
mov
das
xchg
ljmp
fbld
je
xchg
je
aas
aas
aam
mov
es
clc
ret
div
lret
out
lahf
push
xrelease
cmp
in
lock
mov
rclb
out
incl
cld
cmpsl
cmp
mov
lahf
test
push
push
pop
jns
fwait
scas
pop
push
add
jns
xchg
imul
xchg
outsl
sahf
outsl
jns
xchg
push
outsb
iret
mov
and
jle
mov
push
bound
push
icebp
out
lret
inc
jns
xchg
ja
sarb
adc
sub
int3
ja
insl
cld
jnp
add
adc
lret
mov
add
push
sbbb
test
jle
mov
mov
cmp
sti
repnz
lahf
xadd
fsubl
jnp
movswl
sub
dec
in
lea
and
jle
repnz
sub
stos
xor
into
xchg
test
pop
scas
fabs
fcoml
gs
inc
lret
jns
jae
iret
fistps
or
mov
jmp
mov
fdiv
pop
and
shrb
adc
daa
ret
rcrb
aad
cltd
cwtl
pop
scas
repz
cmpsl
and
cmp
sbb
jg
cld
stc
mov
adc
dec
add
inc
rcrb
bound
add
sbbb
sbb
cmp
stos
lret
out
push
repz
mov
repnz
in
add
xchg
mov
pusha
sbbb
cmpsb
and
dec
cld
fs
pop
jno
xchg
movsb
xor
in
sub
inc
out
inc
test
sub
add
mov
es
fwait
or
xor
shlb
add
jecxz
cmp
jmp
sti
das
aas
test
std
in
sub
add
fwait
mov
bound
xor
aas
jg
cld
mov
test
arpl
mov
xchg
lea
jg
lods
xchg
xchg
addb
enter
out
lahf
aas
pushf
push
fwait
pop
std
sbb
outsl
mov
lock
addr16
jecxz
dec
push
call
cld
sbb
cmp
les
shrb
iret
lahf
test
popa
out
bound
outsl
mov
push
adc
sbb
sarl
int
stc
stos
or
cmc
cli
imul
data16
mov
add
iret
xchg
pop
sub
jmp
lret
xchg
push
cmp
roll
dec
popf
cld
stc
test
out
jmp
dec
pop
push
mov
jl
mov
ds
loop
shr
repz
lahf
clc
jl
stc
and
fistl
and
aas
add
stc
stc
push
mov
out
lods
and
out
mov
jg
ficoms
popf
shl
cltd
iret
prefetch
subb
out
dec
xor
pop
adc
mov
pop
and
loopne
mov
aas
pop
cmp
mov
in
xchg
aad
fs
lret
sub
dec
out
imul
pop
sub
cmp
ror
hlt
loope
and
clc
pop
scas
mov
insb
mov
inc
push
nop
div
pop
pop
sti
mov
stos
inc
in
jle
adc
push
push
jnp
xlat
xchg
cs
mov
outsl
iret
roll
mov
dec
lcall
addr16
sbb
or
scas
mov
pop
sbb
loopne
xor
sbb
js
sahf
es
xchg
sub
add
adc
push
ficomps
or
adc
aas
pop
pop
clc
in
mov
std
lods
dec
sbb
jns
out
into
scas
xchg
push
mov
ds
test
sbb
and
mov
leave
lret
insb
sbb
lret
fstl
popf
sbb
inc
cld
stc
adc
sub
push
jp
adc
icebp
repz
jae
sbb
sbb
cmp
out
add
and
xchg
push
fstps
test
and
cld
loop
jne
or
pop
pop
or
xchg
cmp
filds
pop
mov
das
lahf
aas
jg
and
xor
in
push
in
lret
out
sub
inc
dec
cmpb
xchg
adc
pop
push
cmp
cmc
test
cmpsb
sub
call
cmpsl
or
inc
cli
iret
fdivrl
push
int
xor
add
outsb
dec
jl
rorb
test
mov
mov
outsl
mov
in
lret
scas
jb
mov
bound
lock
sub
das
cmp
adc
mov
pop
sbb
lret
nop
inc
and
xchg
adc
xchg
inc
loop
xchg
sub
bound
dec
pop
das
enter
repnz
repz
out
jecxz
ret
xchg
cld
test
daa
ljmp
mov
into
mov
lea
dec
cli
inc
jge
in
jne
aad
int3
or
call
jle
lds
imul
mov
test
lods
lock
inc
jle
cs
jg
icebp
mov
subl
mov
xchg
jg
and
cli
in
mov
sub
loopne
dec
inc
pop
icebp
pop
lahf
aas
jg
bound
ljmp
cwtl
mul
out
dec
sub
roll
cli
mov
iret
xchg
push
pop
jns
xlat
mov
rcll
jne
movsl
insb
pop
jns
fstp
mov
or
out
lret
xchg
ja
arpl
push
aad
prefetch
ret
shl
notb
xor
xchg
stc
pop
dec
dec
mov
jl
repnz
sub
out
les
dec
subl
das
jg
adc
repnz
movsl
xor
mov
stc
repz
ficomps
or
dec
and
loop
jg
cld
mov
cltd
int3
jecxz
add
inc
fnstcw
lahf
jg
daa
mov
mov
iret
sarl
xor
xor
js
in
jle
jge
pushf
out
popf
repz
pop
dec
andb
xchg
lahf
aas
jg
add
cwtl
pop
addl
repnz
hlt
mul
fldl
jg
jns
push
jecxz
out
insl
fwait
jge
stc
xor
ret
pusha
adc
test
das
in
int
aad
sbb
repnz
in
cmc
mov
mov
sti
inc
aas
push
jmp
mov
insw
jg
shrl
pop
ret
out
xchg
flds
xchg
cmp
iret
lahf
aas
mov
or
inc
scas
fnstsw
stc
repz
adc
sub
inc
xchg
push
jle
cmp
mov
jecxz
sti
mov
bt
scas
lea
cs
cmp
push
mov
fists
out
les
mov
gs
cmpsl
jns
push
iret
jp
mov
sbb
iret
dec
inc
jnp
mov
in
jle
shl
iret
fisubrl
shr
cmp
push
and
or
pushl
scas
lds
xor
lahf
cmp
repnz
mov
adc
inc
lret
js
repnz
imul
stc
iret
or
mov
mov
mov
add
lods
jg
das
push
adc
jle
xchg
enter
stc
repz
or
pop
mov
add
mov
cld
in
mov
push
sub
pop
das
mov
xchg
push
fistps
lahf
sub
lret
adc
and
mov
xor
lahf
push
push
xchg
pop
xor
in
ja
movsl
out
fdivrs
test
hlt
scas
sbb
push
pop
jns
popf
test
push
ss
add
in
mov
pop
daa
add
xchg
mov
lea
add
jg
cld
xor
out
nop
inc
gs
mov
add
incb
enter
ret
mov
mov
mov
addr16
stc
xor
rorb
test
aas
jg
or
xor
cmpsb
mov
gs
div
out
push
out
push
or
outsb
loop
out
add
jb
lock
dec
pop
and
lock
call
xor
clc
jne
outsb
outsl
ficoms
mov
pop
mov
rclb
test
repnz
xchg
push
mov
xchg
push
push
enter
inc
mov
jg
and
mov
add
xor
aas
outsb
sbb
sub
imul
pop
rcrb
decl
mov
lahf
aas
aas
ds
aaa
cltd
mov
inc
popf
into
jns
cld
stc
repz
mov
add
push
inc
mov
xchg
jle
mov
mov
add
lcall
xchg
pop
dec
int3
push
jnp
in
das
out
ud1
mov
lret
mov
aam
mov
push
mov
sub
lahf
pop
es
jno
or
addl
jnp
pop
sbb
add
nop
imul
repnz
push
fdivrp
mov
in
cmp
sbb
push
pop
jns
dec
push
jns
stos
xorps
xor
pop
jns
xchg
cmp
cmp
jnp
lods
test
aaa
lock
xchg
push
or
lcall
out
adc
insb
popf
nop
cmpsl
mov
jns
es
dec
scas
sub
out
xor
cld
jb
xchg
cpuid
cmp
subl
sete
lahf
lahf
das
add
les
bound
mov
jns
inc
iret
test
adc
outsl
jno
fiaddl
ja
iretw
pmuludq
push
mov
outsb
jmp
stc
repz
out
xchg
mov
pop
les
addr16
jne
jb
sahf
fildll
es
outsl
adc
gs
dec
shrb
jg
scas
bound
inc
in
movsl
dec
sahf
pop
push
stos
push
orl
lret
pop
mov
rcrb
xlat
cld
stc
repz
or
pusha
sti
add
pop
inc
sarb
pop
out
pop
jnp
inc
xlat
or
lahf
imul
mov
pop
mov
cmovl
push
scas
mov
sub
fs
lds
mov
cmp
mul
pop
xchg
jge
lret
add
fsubr
xchg
imul
push
mov
mov
enter
xor
mov
rcrl
stos
add
inc
mov
mov
sub
int
cmpsl
hlt
lret
push
dec
mov
adc
lret
pushl
mov
mov
add
pop
dec
inc
cli
mov
out
lahf
jmp
pop
stc
mov
fwait
mov
inc
cmp
cld
stc
jo
add
imul
fwait
push
adc
jle
mov
fdivr
test
lahf
aas
mov
das
add
test
int3
stc
repz
lret
orl
outsb
and
aas
jg
or
call
pop
mov
pushf
fsubp
xchg
iret
mov
les
xor
add
xor
scas
push
repz
mov
lahf
clc
lea
inc
pop
in
mov
lret
aaa
pop
repnz
xchg
sub
lret
adcb
lret
mov
jg
cmp
fcoml
adc
scas
mov
leave
notl
pushf
jl
movsl
scas
mov
push
out
popf
in
inc
int3
dec
jo
les
loope
sub
xchg
fidivs
pop
sub
cmp
stc
jae
inc
push
rclb
je
les
sarb
aas
jg
cmp
pop
dec
sbb
ljmp
mov
repnz
repz
jmp
fdivrl
xchg
pop
dec
jmp
pushf
lahf
mov
inc
add
mov
push
adcb
and
ljmp
jecxz
or
jns
mov
test
or
in
jnp
idivb
lret
xchg
push
dec
ret
dec
mov
jmp
in
push
pop
xor
je
repnz
test
lahf
xor
jl
lret
rcl
cmp
loopne
aas
jg
outsb
imul
xchg
xchg
or
lahf
cld
in
dec
mov
out
hlt
and
addr16
cld
stc
imul
sub
cmpsl
mov
xor
jle
aas
sub
out
mov
push
dec
dec
aam
add
aas
mov
jo
repnz
jae
mov
jmp
es
cmpsl
daa
sahf
push
rcl
lods
scas
stc
scas
xor
push
fidivs
pop
xor
insl
cs
adc
jns
xchg
push
int3
idiv
loop
cmp
dec
jns
xchg
push
mov
dec
lcall
xchg
push
pop
jge
push
popl
dec
sbb
cmp
jge
testl
mov
pop
and
iret
adc
xlat
jae
lret
pop
fidivs
jne
dec
jle
cltd
sub
bound
add
pop
xor
call
inc
les
gs
call
iret
ljmp
mov
adc
jo
out
out
mov
mov
int3
arpl
cld
stc
repz
sar
fldl
popa
iret
lahf
aas
jg
pop
add
rcrb
jns
fstl
add
fidivl
dec
mov
lret
xchg
push
pop
int
jg
fwait
xchg
dec
out
or
push
pop
jns
popf
lods
dec
mov
xchg
xchg
mov
cld
jb
xchg
pop
sub
cli
jo
jg
add
stc
imul
jnp
jg
cld
dec
into
inc
and
jb
xchg
aas
xchg
frstor
lahf
aas
or
pop
js
jno
jge
in
fildll
test
jle
mov
mov
jnp
mov
fisubrl
xor
mov
iret
cwtl
cmp
daa
icebp
fbld
mov
stc
mov
fsubr
subb
xlat
ret
mov
ds
test
jmp
pop
andl
cmc
sbb
cld
xor
pop
jns
xchg
lret
and
dec
mov
or
xchg
push
xchg
fmuls
and
xchg
push
pop
test
and
jecxz
xchg
dec
test
mov
jmp
cs
iret
out
std
mov
xlat
ret
mov
repz
lahf
and
les
sub
je
mov
daa
jg
cld
stc
lahf
out
adc
mov
clc
dec
adc
and
scas
lret
iret
lahf
aas
sahf
xor
mov
cmc
adcb
call
dec
in
dec
mov
xor
pop
jns
mulb
inc
cmpsb
rorl
popa
push
in
stc
adc
sub
jp
jnp
arpl
pop
cld
sub
rorl
outsb
iret
lahf
aas
decl
into
cltd
pop
test
mov
stc
repz
or
dec
or
sbb
aam
xor
dec
or
outsb
ds
scas
mov
lcall
into
stc
inc
push
cmc
push
push
push
cld
inc
hlt
push
out
dec
cmpsl
jne
sub
xchg
iret
lahf
cmc
jge
push
in
das
xor
adc
dec
sub
dec
push
cmpsl
push
mov
xor
adc
loopne
loope
cvtps2pi
lahf
aam
jb
repnz
int3
sarl
das
xor
jl
std
mov
mov
scas
hlt
push
sub
mov
movsb
jle
andnps
jnp
pop
add
sbb
fmuls
xchg
imul
out
into
jmp
aam
jo
sub
mull
std
mov
pop
jg
outsl
sbb
jmp
add
mov
movsl
or
mov
push
pop
ficoms
add
test
clc
push
mov
jl
xchg
test
icebp
sub
std
add
scas
cld
inc
jp
push
pusha
add
pop
mov
sarw
lahf
mov
stc
or
rcl
xchg
ja
fsubrl
leave
mov
mov
mov
and
aam
xchg
aas
icebp
pop
sub
mov
out
lahf
sarb
xor
inc
xor
jno
jg
cld
stc
sub
pop
sub
xchg
sbb
add
cs
or
iret
and
out
inc
sbb
jp
cmpsb
add
cld
stc
xorb
dec
mov
pushf
call
aas
pop
int3
inc
push
push
or
jno
mov
or
cmp
xchg
adc
fnstenv
lahf
aas
jg
lahf
lcall
and
xchg
xor
fiadds
sbb
stc
xchg
lock
dec
or
jae
stos
mov
js
inc
xchg
sbb
pop
add
lret
mov
push
fdivrl
lahf
dec
fwait
jl
pop
lret
repnz
cltd
pop
xor
in
adc
inc
ret
sub
or
cmpb
aas
jg
cld
out
popf
or
pop
sbb
pop
sub
filds
div
out
lahf
insb
fldl
cs
nop
sbb
ja
mov
fcomp
pop
call
lahf
aas
push
faddp
imul
pusha
sbb
and
in
shll
in
mov
ja
lret
lahf
aas
jge
in
cmpsl
lea
mov
dec
xor
mov
jle
add
mov
jae
fisubs
imul
aas
inc
mov
push
jbe
pushf
mov
dec
rcrl
pop
mov
add
and
pop
es
fisubrl
push
enter
mov
negl
jmp
lahf
xchg
out
mov
or
jmp
scas
jp
dec
dec
xchg
arpl
mov
iret
lahf
sti
mov
cs
cmp
pusha
lret
sbb
dec
int3
mov
sbb
or
ja
xor
ljmp
loopne
push
pop
push
mov
mov
xchg
mov
fldenv
jecxz
in
dec
out
sub
cmc
lock
xchg
push
lahf
adc
in
cmpxchg
ja
mul
das
mov
pop
sub
and
test
mov
inc
std
std
cld
stc
daa
pop
push
lcall
push
cmp
sub
jg
xchg
outsb
jmp
ljmp
out
mov
pop
mov
test
adc
sub
rclb
repnz
inc
dec
fsub
loop
and
lret
outsl
int3
adcb
rcl
cld
dec
cli
jecxz
pop
push
cmc
jns
iret
sub
lahf
aas
jg
jecxz
cwtl
jge
sahf
fdivr
mov
stc
repz
cmc
ret
jnp
push
cmp
addr16
jg
pop
jns
adc
mov
repz
and
aaa
xlat
out
lods
inc
mov
add
cld
push
test
fisubl
iret
in
lahf
jg
dec
gs
mov
jbe
lahf
cmp
stc
repz
je
cmp
xchg
fs
outsb
lahf
aas
jg
add
jae
or
jne
cmpsb
sbbl
repnz
add
pushf
jle
xchg
idivb
nop
icebp
iret
das
icebp
mov
jnp
into
add
xchg
jge
stc
repz
test
aaa
xor
movb
out
jle
addr16
dec
add
fists
mov
mov
cltd
push
test
ret
mov
popl
lret
cld
pop
test
mov
out
push
outsl
int3
outsb
fbld
xor
ret
lret
outsl
and
mov
lcall
mov
nop
int3
xchg
jg
add
je
push
jo
neg
jb
iret
lahf
aas
dec
out
and
push
push
inc
inc
cld
stc
repz
xor
frstor
jnp
insb
rcrl
xchg
push
xchg
roll
push
push
inc
in
psubw
pop
into
mov
test
mov
xor
sbb
pop
sbb
fmul
sub
mov
xor
out
ljmp
repnz
adc
addr16
and
mov
inc
pushf
mov
and
rorb
repnz
roll
push
inc
lret
out
test
mov
popf
dec
push
push
sub
lret
pop
sbb
lahf
scas
rolb
jns
add
call
cli
cmc
push
pop
mov
jge
in
add
mov
sub
lahf
pop
pop
mov
and
push
sub
out
xchg
iret
cmp
lea
sahf
in
daa
das
inc
cs
cmp
or
ret
stos
and
dec
jo
cld
stc
mov
sbb
clc
fdivs
mov
arpl
jecxz
jge
mov
xchg
nop
sar
int
mov
out
cmpsl
xchg
sbb
test
pop
sbb
cmp
cmp
dec
out
aaa
clc
sti
repnz
pushf
sub
jg
add
incl
xchg
pop
jmp
je
jbe
roll
mov
and
push
fidivl
das
cltd
xchg
ljmp
mov
lret
pop
ja
daa
mov
add
lret
addr16
mov
push
dec
ja
and
xchg
ficoml
jno
adc
popa
mov
cld
stc
outsl
sbb
loop
push
mov
or
ja
xchg
iret
lahf
aas
pushf
adc
hlt
xchg
shlb
push
fsubp
push
jl
scas
dec
gs
push
ret
xchg
mov
jno
jbe
xchg
inc
pop
mov
scas
loopne
add
dec
pop
pop
pushf
pushl
aas
loope
in
outsb
les
mul
nopl
repnz
in
adc
scas
insl
push
scas
xor
lods
gs
lahf
push
das
cmc
imul
push
mov
mov
into
shr
cmp
jg
fistps
push
sbb
jns
xchg
push
jbe
pop
adc
jl
iret
lahf
pop
adc
jo
imul
xor
pop
mov
iret
sbb
enter
sub
mov
scas
pop
push
pop
scas
addr16
icebp
repnz
nop
mov
mov
xor
pop
fsin
jge
sti
mov
push
outsl
cmp
xchg
cld
stc
test
scas
or
and
aas
jg
push
gs
xlat
mov
in
aaa
hlt
jmp
inc
lret
lea
mov
xacquire
ret
xchg
lahf
cmp
adc
cld
test
lods
mov
jne
into
pop
out
mov
fdivrl
out
ds
jns
pop
repnz
cmp
sbb
dec
stc
cmovg
sti
enter
test
jmp
lret
mov
int
or
xorl
mov
add
push
sub
ficomps
mov
fwait
xchg
pop
pop
xor
xchg
lret
out
mov
and
call
jns
push
pop
aam
xchg
fwait
cmp
add
xchg
shll
mov
push
fimuls
bound
decl
popa
pop
incl
fisttps
cli
jb
subb
mov
jle
repnz
enter
push
mov
xchg
inc
lret
push
inc
adc
das
cmp
jmp
lret
inc
lahf
cmp
shlb
jno
cld
cld
mov
dec
dec
andl
int3
xor
mov
push
cs
repz
dec
push
xor
mov
mov
fimull
aas
jg
cld
out
sets
push
mov
out
fdiv
out
lahf
jmp
mov
and
sti
repnz
subb
mov
loope
ds
mov
and
adc
gs
bound
or
out
mov
test
scas
mov
adcl
sub
decb
arpl
repnz
jo
dec
pop
xor
aas
cld
stc
rep
jle
sub
insl
testb
sub
das
aas
jg
mov
inc
pop
and
jge
lcall
das
mov
add
add
add
in
and
jne
fistpll
in
and
mov
xor
decb
sahf
mov
mov
repz
lahf
cwtl
sub
jnp
rcll
inc
roll
fcoml
mov
jecxz
mov
xchg
ja
in
inc
xchg
lahf
pop
sarb
addr16
sub
loopne
lahf
mov
hlt
mov
stc
repz
scas
push
jae
lret
mov
mov
movsb
mov
cmp
scas
mov
cmp
je
jnp
sub
ret
subl
cmpsl
sbb
push
mov
mov
mov
stos
lods
sbb
xchg
push
mov
pop
pop
pop
xchg
sbb
jg
jle
mov
mov
dec
cmc
xchg
jg
movsl
pop
aas
xor
int
lods
jp
adc
pop
push
jmp
pop
push
mov
das
scas
mov
pusha
mov
shl
adc
inc
mov
iret
das
mov
orps
shrl
in
icebp
bnd
xchg
ja
dec
cmp
leave
outsl
adc
mov
adc
into
xor
dec
dec
test
mov
mov
jo
in
pop
or
icebp
dec
jmp
aaa
aas
sbb
push
into
pop
inc
clc
in
decl
repnz
push
pop
rolb
mov
cmp
cld
stc
repz
jne
cli
sahf
fdivrl
inc
orb
rclb
mov
and
cld
in
ret
add
in
loopne
mov
mov
cld
stc
repz
jo
test
loopne
loopne
lds
pop
mov
loopne
sbb
xchg
ja
and
xchg
iret
ja
pop
popf
inc
and
test
dec
jl
subb
fwait
out
jns
xchg
ja
cmpsb
jg
int
jge
sarb
xor
xchg
push
pop
mov
jg
jne
test
fbld
jns
lods
cmc
push
pop
ficomps
sahf
push
pop
jns
or
cmc
sbb
push
mov
xchg
pop
jns
xchg
mov
push
mov
fcmovnbe
or
jge
cmp
das
xor
and
cld
pop
inc
sub
adc
stc
repz
pop
stc
xor
jns
sahf
inc
insb
adc
jle
cld
imul
addr16
in
ja
loopne
scas
pop
push
shll
pop
jns
cltd
arpl
mov
jle
lahf
test
das
and
xlat
repz
lahf
cwtl
mov
push
cmc
jl
xor
push
das
stc
sub
mov
roll
decb
sbb
test
push
rcrb
out
mov
and
cmpsl
lock
out
add
aaa
adc
in
jl
cld
stc
cmpsl
push
or
jae
inc
add
cmp
repz
outsb
lds
iret
add
sahf
jne
and
inc
xchg
push
pop
jns
add
movsl
cmp
push
mov
sbbl
jns
xor
ja
adc
aas
push
out
sbb
decl
pop
jns
cwtl
xchg
jl
icebp
cld
adc
mov
jg
cmp
jle
mov
pop
repz
or
lret
dec
pop
push
scas
pushf
ret
pop
cmp
pop
jns
mov
sub
jge
xchg
cmp
cmp
jns
in
sbb
cmp
into
and
arpl
dec
or
out
pop
mov
mov
pop
filds
pusha
pop
test
out
repz
push
jmp
lret
shrb
dec
frstor
int
jns
sub
out
in
push
cli
out
insb
lret
stos
xchg
xlat
sub
mov
cmp
lahf
pop
dec
test
cmp
jecxz
xchg
fsubp
xor
or
jae
mov
mov
adc
ret
mov
sub
xor
lods
std
and
xchg
add
scas
test
push
fisubrs
add
push
jecxz
inc
aas
lret
out
les
scas
pop
push
or
insl
mov
in
pop
dec
push
addr16
mov
lret
cli
pop
add
lahf
pop
das
add
sarb
mov
add
lcall
mov
xchg
aaa
jecxz
xchg
fcmovnbe
push
pop
jns
int3
testb
jno
push
rolb
mov
cltd
push
sub
fimull
xchg
mov
lahf
aas
xor
repnz
mov
repnz
das
mov
add
cs
cmp
icebp
mov
ja
stos
jmp
scas
insb
popa
mov
xchg
cld
stc
repz
push
enter
fwait
cmp
in
int
mov
fstpl
cs
mov
repnz
or
les
pop
scas
push
jb
sub
cld
stc
lods
scas
and
sbb
iret
aas
mov
jmp
jmp
cmpb
pop
stos
pop
jg
cld
stc
sbb
fldcw
fs
hlt
outsb
rcrb
xlat
es
push
fdivrp
lock
inc
aad
rorl
std
std
jb
add
fildll
jg
pop
pop
cld
fnstcw
jno
aas
mov
jns
mov
push
dec
inc
data16
js
int3
lret
pop
shll
push
out
sbb
push
mov
sti
in
test
or
movsl
iret
repz
jg
lds
mov
push
bnd
adc
cltd
sub
ljmp
or
negl
add
jns
inc
xchg
and
xchg
push
pop
jns
faddp
or
xor
mov
jns
and
lods
repz
push
shrl
pop
jns
xchg
sti
xchg
shr
jp
data16
add
jns
xchg
push
or
push
lret
sub
mov
jmp
push
pop
jns
inc
rorb
pusha
push
jns
fisubs
enter
sbb
cmpsb
sbb
aas
lods
das
mov
dec
pop
insl
pop
jne
rcll
pop
add
lcall
pop
dec
and
adc
xchg
push
fisubrs
sub
dec
int3
pop
xchg
push
pop
jns
pop
es
xor
or
or
lods
fdivrp
jb
shlb
dec
xor
cli
jmp
das
push
push
mov
cmp
pop
push
cmpb
jns
and
or
jns
cwtl
iret
lahf
pop
sbb
lock
fldt
out
add
mov
fistpll
pop
xchg
inc
cmp
xor
iret
lahf
lods
mov
mov
pop
imul
push
jl
cmp
lret
repz
scas
aam
call
pop
pop
aad
cld
stc
cmpsl
dec
scas
data16
pop
push
add
adc
iret
lahf
aas
inc
fsts
mov
not
pop
loope
loop
out
fistps
pop
movsb
or
out
lahf
lahf
mov
or
fdivrl
jmp
cld
stc
imul
or
sub
or
push
or
cmp
ficomps
nop
fnstenv
xchg
and
bound
in
cmpsb
pushf
movb
xchg
dec
jmp
pop
and
sub
repnz
xchg
lret
mov
push
mov
repnz
mov
xchg
pop
or
call
sub
jg
fs
int
dec
ljmp
mov
sbb
push
mov
iret
cmp
imul
jp
mov
fimull
cmp
in
stc
stc
repz
aas
push
out
sub
jp
cmc
mov
push
ficomps
dec
cmp
sbb
jl
mul
mov
jns
iret
shrl
pop
jle
dec
cs
pop
popf
pop
orl
scas
mov
xchg
fcomp
xor
movsl
loopne
mov
xchg
adc
les
orb
das
lahf
aas
pop
outsl
dec
dec
dec
shl
lret
lahf
aas
decl
add
mov
mov
out
rolb
out
sub
mov
imul
scas
mov
loopne
stos
sarb
pop
cs
xchg
mov
cmp
repnz
lret
sub
cmp
out
jb
lret
sub
or
dec
xchg
cmp
insl
lods
loopne
sbb
mov
sub
stc
repz
arpl
shrb
outsb
add
and
dec
lahf
aas
jg
lahf
jb
incb
clc
add
xchg
fsubrs
pusha
mov
jo
adc
shl
xchg
iret
lahf
test
cld
mov
xor
mov
dec
movsl
jecxz
scas
cmp
js
stos
and
out
mov
or
pop
and
jle
std
andb
repz
or
jg
div
add
frstor
ljmp
push
dec
decl
cld
cs
pop
xchg
test
pop
out
bound
dec
hlt
push
das
lret
arpl
and
add
scas
fwait
xchg
sti
in
icebp
icebp
push
push
test
xchg
cmpsb
call
cld
adc
adc
test
mov
iret
lahf
aas
jg
pusha
xchg
nop
ficompl
das
cs
add
push
sbbb
mov
cmp
sub
dec
sub
xor
leave
or
loopne
cmp
mov
mov
insl
jecxz
sub
xchg
sahf
jl
scas
cli
push
cltd
arpl
stos
cld
mov
decb
mov
inc
aaa
iret
mov
xchg
push
into
test
icebp
cld
stc
repz
mov
add
mov
add
or
jl
push
daa
cld
std
das
ret
cmp
pop
lds
fdivl
aas
jmp
lahf
aas
jg
fiadds
lods
xchg
add
xchg
dec
stc
repz
dec
lcall
nop
xchg
dec
dec
inc
sbb
sarl
adc
jle
cld
shr
icebp
lods
jae
scas
loopne
ljmp
pop
pop
mov
adc
repz
push
or
add
mov
fcmovb
das
jg
push
arpl
adc
xchg
adc
stc
repz
outsb
jbe
xlat
popf
ja
lar
or
push
scas
adc
int
subb
dec
outsb
cwtl
lods
stos
ss
cmpsl
push
lahf
jns
lret
outsb
std
adc
sub
dec
jg
mov
sti
cmp
scas
mov
pop
int3
stos
fldenv
scas
xlat
cmp
mov
dec
repz
in
cmpb
sub
dec
imul
or
sahf
push
xchg
add
jecxz
mov
rcl
cmp
xor
sub
mov
out
stos
repz
or
cmp
mov
sbbl
mov
sti
mov
add
or
push
hlt
mov
stc
mov
sarl
lods
lods
cwtl
jb
sbb
leave
repz
mov
arpl
dec
fwait
cmpsb
jge
mov
mov
sahf
je
jmp
aas
xor
and
add
mov
dec
mov
push
xchg
fnstenv
repnz
inc
jae
cmpsl
mov
mov
lahf
aas
outsl
and
sbb
std
es
hlt
xchg
inc
xor
out
jo
pop
xorl
stc
adc
mov
inc
xchg
lods
cltd
dec
mov
push
ret
pop
out
outsb
mov
test
ret
test
das
push
mov
stc
mov
stc
int3
push
pop
pop
mov
push
inc
or
scas
fwait
cld
jo
mov
push
fsubp
push
repz
test
pop
subl
push
pop
jns
outsl
mov
or
addr16
pusha
mov
adc
add
cs
shr
add
int3
adc
xchg
aaa
clc
in
lret
mov
inc
es
mov
sti
in
imul
cld
js
xchg
xchg
sub
in
sub
pop
lock
sub
in
aaa
cli
lcall
sub
xchg
push
pop
jns
and
loope
hlt
dec
movsl
pop
enter
mov
jns
dec
bnd
sarb
mov
insl
xor
sub
sub
mov
iret
iret
xchg
aad
outsb
mov
fimull
in
popf
pushf
jb
or
ja
add
pop
jno
test
jp
sbb
mov
stc
add
cld
pop
push
mov
js
aas
jg
cld
push
mov
in
xchg
push
les
enter
pop
out
mov
out
jg
dec
scas
sbb
lods
or
mov
lahf
icebp
add
cld
movsl
stc
aad
decl
imull
aas
pop
int3
loopne
pop
out
cmp
hlt
popl
das
add
mov
into
and
repnz
mov
imul
aaa
repz
aas
sub
push
lods
lock
ss
ss
cld
mov
gs
jmp
dec
mov
mov
mov
ret
adc
jge
repnz
in
push
or
or
out
or
adc
dec
fistpll
mov
stos
sbbl
pusha
sahf
mov
cmp
adc
lock
sub
dec
js
inc
cld
jg
xor
adc
cld
iret
lock
outsb
cld
fildll
cld
test
xor
jns
ret
dec
cld
addl
pushf
lahf
unpcklps
xchg
cld
lahf
cld
fimull
or
jne
test
adc
mov
and
cld
jg
sub
ret
lahf
cld
lcall
jno
lods
fildl
das
cld
adc
scas
cld
adc
iret
inc
sbb
cltd
pusha
and
cld
lahf
xor
adc
cld
scas
cld
ret
mov
sub
cld
dec
xor
lret
test
jg
addb
js
cld
out
jl
jo
cld
aas
cld
iret
dec
sub
std
das
es
jo
cld
cmp
dec
js
cld
pop
into
add
cmp
pusha
ret
dec
cld
jg
es
cwtl
cld
scas
cld
repnz
aas
cld
out
jne
push
xor
leave
test
mov
push
jg
dec
loope
jb
mov
fistpll
add
call
es
cld
pop
cld
scas
or
sahf
or
scas
cld
es
loopne
cld
out
cld
pop
es
outsl
cld
dec
xrelease
lar
loope
add
cld
es
subl
cwtl
lock
dec
lahf
cld
pop
ret
test
das
cld
das
xor
pop
cld
or
cmp
push
cld
int3
iret
lock
es
cwtl
cld
pop
cld
pop
popa
ret
cld
paddb
adc
test
cmpsl
es
cwtl
cld
aas
cld
add
or
or
adc
das
cld
and
scas
xor
cld
fisttpl
cwtl
mov
pop
cld
iret
es
rolb
cld
cmp
rcrl
cld
out
push
rorl
cmp
cld
test
adc
xor
cld
cmpsl
or
loope
dec
xchg
adc
andb
outsl
cld
pop
es
rolb
mov
mov
fbstp
loope
test
out
cld
ret
xchg
out
cld
lahf
daa
cwtl
lock
cld
das
cld
jg
loope
add
push
orb
pop
cld
loope
add
jno
das
xorl
shll
cld
scas
cld
mov
cld
pop
outsb
jae
adc
xchg
test
aas
cld
test
or
cld
pop
pop
adc
mov
cld
jg
js
rcrl
cld
dec
pusha
adcb
cld
pop
cld
sub
adc
out
enter
cld
mov
xor
mov
test
leave
or
pusha
mov
cltd
xor
in
iret
out
cld
adc
iret
cld
dec
cltd
loopne
aas
cld
pop
xor
roll
cld
addb
mov
adc
cld
cld
add
cwtl
loopne
cld
fistps
es
cld
dec
clc
xor
scas
cld
lahf
cld
mov
and
das
pushw
in
jo
pop
add
cwtl
jo
iret
adc
loope
cld
lahf
cld
or
inc
or
sahf
cld
mov
push
cmp
jo
popf
pushf
jb
outsl
xor
push
es
cld
push
dec
clc
jg
jno
sub
pusha
or
xor
adc
cld
sahf
sbb
inc
scas
dec
mov
dec
js
shrl
pop
cld
xchg
cmp
adc
les
dec
cld
pop
cld
add
cwtl
lock
cld
jg
xor
leave
cld
das
cld
aas
push
xchg
or
aas
cld
pop
adc
in
cld
decl
loope
jo
das
pop
cld
pop
inc
int
xor
dec
js
jle,pn
out
imul
pusha
and
mov
jp
lcall
sahf
pop
mov
xor
roll
cld
addb
clc
cld
cltd
jo
cld
iret
cld
dec
xchg
pop
xor
iret
cld
subps
push
cld
loop
or
outsl
jl
lock
dec
cld
dec
out
sbb
cld
pop
mov
mov
or
das
cld
stc
imul
stc
adc
or
xor
lahf
loopne
adc
daa
xlat
movsb
lcall
movsb
jbe
jg
dec
mov
or
das
cld
dec
cmp
adc
jo
addb
cld
mov
cld
pusha
pop
mov
loope
cld
pop
cld
pop
dec
lock
cld
cld
mov
push
and
dec
cmp
jnp
pop
rolb
mov
das
cld
gs
repnz
mov
sbb
cld
paddb
cmp
lock
cld
aas
cld
test
xor
addr16
cld
rcrl
pop
cld
iret
orb
xor
mov
mov
cld
pminub
into
mov
cld
cmp
ret
scas
cld
outsl
cmp
ret
paddb
xlat
test
adc
outsl
cld
pop
xor
movsl
mov
roll
cld
out
andb
sets
cld
ffreep
xor
lret
cld
iret
or
pop
cld
sbb
paddb
pop
cld
outsl
cld
push
lock
cmp
pop
test
cltd
cld
mov
orb
pop
cld
loopne
adc
out
cld
mov
cld
jg
roll
pop
cld
jg
or
xor
pop
cld
cwtl
pusha
sub
cld
outsl
cld
loope
add
lahf
cld
mov
cld
cld
mov
cld
xadd
es
cld
iret
mov
cld
scas
cld
out
lcall
cmp
xor
daa
paddb
cmp
add
jo
andb
mov
jl
cld
paddb
pop
xchg
es
mov
das
fs
cld
das
cld
pusha
add
lods
jg
dec
pop
es
cld
cld
scas
addr16
cld
aas
cld
out
es
test
pop
cld
adcb
js
cld
wbinvd
adc
inc
cltd
pusha
iret
cld
outsl
mov
loope
cld
fbld
orl
mov
or
cld
dec
fs
ficoms
dec
fwait
pop
cld
add
cltd
lock
cld
inc
xor
sar
cld
iret
add
das
cld
xor
cltd
loopne
cld
pop
cld
aam
dec
clc
iret
cld
mov
xor
iret
pop
push
cld
or
add
popl
scas
test
iret
cld
loope
test
iret
cld
iret
es
jo,pt
lock
mov
cwtl
pusha
sub
sbb
sbb
cld
aas
scas
add
into
iret
cwtl
loopne
adc
cld
or
sbb
cld
lahf
pop
dec
jo
cld
dec
cld
outsl
pop
subb
and
ficoms
dec
cmp
ljmp
fs
cld
add
cwtl
jo
jg
mov
outsl
es
cwtl
pusha
lahf
cld
jg
mov
rorl
cld
outsl
or
orb
lahf
lock
scas
cld
out
rolb
cld
cld
dec
mov
dec
cld
lock
ret
cld
inc
test
cwtl
cld
scas
cld
or
xor
lahf
cld
xor
mov
xchg
sub
mov
pusha
lcall
xchg
push
sub
cld
and
pop
cwtl
loopne
dec
cld
out
dec
add
cld
iret
mov
add
cwtl
jo
incl
or
cld
lahf
cld
xchg
test
adc
cld
dec
or
js
cld
scas
cld
dec
mov
aas
cld
lock
pop
cwtl
cld
scas
cld
or
es
iret
add
cld
aas
cld
pop
adc
cmp
test
das
cld
jg
repnz
mov
xchg
pop
out
adc
cld
aas
cld
inc
adc
jle
sub
into
daa
rorl
loope
test
cld
sub
or
sbb
add
pop
cld
scas
test
iret
cld
mov
scas
cld
test
and
cld
vmread
loope
cld
paddb
or
dec
cld
leave
mov
loope
out
test
cmp
add
ret
cld
jb
xor
das
cld
bound
add
das
jne
cld
mov
cwtl
xor
pop
cld
icebp
cmp
in
push
push
test
es
pop
cld
ret
push
scas
cld
decl
popa
cld
paddb
adc
cmp
mov
js
test
out
cld
or
mov
cs
adc
in
cld
iret
add
push
dec
cld
iret
cld
ltr
sbb
add
into
mov
add
cwtl
cld
outsl
cld
adc
push
roll
pushf
mov
clc
xor
incl
mov
adc
outsl
add
jo
lock
cltd
adc
cmpsb
push
inc
cld
dec
js
jl
cld
lahf
cld
jo
addb
cld
aas
pop
es
cltd
cld
pop
cld
scas
push
adc
xchg
scas
cld
gs
pop
cld
test
cwtl
jo
cld
lahf
cmp
loope
cld
out
cld
fildll
adc
dec
cld
mov
pusha
pop
cld
mov
cwtl
jo
iret
cld
sbb
wbinvd
inc
xor
dec
cld
mov
cld
das
cld
adc
nop
cwtl
cld
pop
cld
push
xchg
xor
out
cld
scas
wbinvd
lret
sub
add
cld
out
adc
cmp
test
aas
cld
sahf
or
es
dec
cld
dec
ret
test
adc
cld
roll
pop
cld
sahf
dec
clc
xor
das
cld
lahf
lret
test
adc
lahf
cld
or
xor
dec
mov
cld
das
cld
lahf
leave
test
adc
cld
dec
js
loope
cld
pop
cld
mov
lahf
cld
out
sbb
cmp
cld
out
cld
dec
mov
lahf
cld
inc
push
jecxz
cltd
mov
pop
cld
xor
add
lahf
lock
jo
jl
test
out
cmp
or
jl
cld
mov
cli
sti
cld
lahf
jl
andl
or
xchg
add
in
lods
cld
inc
test
cwtl
cld
out
cld
js
es
aas
cld
out
xor
inc
es
out
cld
fstl
dec
mov
add
loope
movsl
pop
outsl
cld
lock
lahf
cld
outsl
push
xorb
sbb
pop
das
lock
cmp
lock
mov
push
or
sbb
add
pop
cld
pop
movsl
je
xor
jo
aas
data16
jg
loopne
adc
paddb
ret
cwtl
cld
paddb
test
jg
iret
cld
out
sbb
or
aas
lock
or
lahf
das
push
sbbb
lock
xor
cld
cld
cmp
add
mov
andl
mov
push
inc
cwtl
mov
sar
scas
fwait
cld
cld
insb
ret
mov
jo
lock
dec
ds
loop
or
dec
es
push
cld
scas
scas
dec
clc
xor
jg
dec
cwtl
pusha
or
cld
cld
add
dec
es
add
pop
cld
mov
or
cld
scas
andb
sbb
jo
cld
paddb
add
js
cld
lcall
dec
cld
das
cld
fiadds
es
setns
adc
out
cld
or
es
cld
scas
lods
fs
iret
cld
outsl
lods
flds
cld
xor
test
pop
es
aas
cld
addb
and
pushf
gs
dec
cld
iret
xor
ret
test
pop
cld
push
js
push
scas
lock
repnz
jb
lock
or
cmp
ret
cld
sbb
pusha
sub
inc
es
cld
setns
adc
loope
add
cld
pop
lret
add
xor
lret
and
addr16
lods
sbb
stc
add
or
push
lahf
f2xm1
add
loopne
lock
orl
lahf
lock
pop
int3
loopne
lahf
cwtl
jo
ret
cld
cltd
jo
add
in
mov
cld
pushf
mov
aaa
aas
sub
lea
cld
cs
test
jl
sti
repnz
pop
hlt
je
adc
xchg
mov
dec
in
mov
test
incl
movsb
clc
sbb
push
pop
jns
xchg
dec
pop
mov
dec
repz
and
pop
leave
inc
sbbb
inc
test
repz
push
into
and
clc
psubd
fstp
mov
fsubrs
push
outsl
test
pop
cmc
in
sub
rdtsc
mov
cwtl
pop
push
pop
ja
popa
pusha
cld
repnz
sbb
mov
std
aas
jg
push
jnp
outsb
pop
inc
test
xor
les
lahf
or
cld
sbb
jg
cld
scas
fisubrs
cld
dec
scas
orl
xchg
out
lahf
rcrb
in
xor
repnz
mov
mov
sub
outsb
xor
out
lahf
aas
adc
push
out
mov
pop
bnd
adc
mov
xor
inc
xchg
push
mov
push
mov
sbb
and
les
adc
lea
xchg
push
ds
jae
ljmp
cltd
stc
pop
add
jo
cmp
cld
popf
xchg
add
ret
ss
fsubrl
out
das
shrb
in
lahf
jae
sbb
add
cs
cld
stc
repz
mov
xchg
cmc
mov
enter
mov
and
jmp
cld
cwtl
sub
cmpsb
dec
inc
and
aas
jg
add
rcll
mov
jg
rcrb
xchg
lahf
inc
call
out
and
push
pop
cmc
add
leave
aas
dec
in
fistl
add
sub
cmp
jmp
add
loop
in
ds
mov
insb
aas
jg
sub
push
or
fs
push
fs
addl
inc
sti
and
aas
ret
stos
cmp
out
lods
sub
repz
jle
mov
sti
inc
addb
cmpsb
jne
arpl
inc
jle
sbb
cmp
jge
sbb
adc
or
jns
and
mov
or
fadd
push
pop
aad
scas
lahf
imul
fwait
not
rclb
cmp
enter
fidivrs
push
pop
add
mov
aas
cmp
or
xorb
js
in
lahf
xchg
sub
inc
outsl
das
mov
adc
push
mov
lds
int3
inc
movsl
and
inc
mov
fimuls
xor
jns
or
sub
xchg
rorb
es
mov
dec
xchg
inc
mov
in
push
lret
in
jcxz
dec
xor
fisubl
or
mov
cltd
incl
adc
sarb
mov
inc
mov
cmc
hlt
adc
mov
inc
inc
or
fstps
xchg
arpl
push
stc
repz
mov
mov
pop
insb
xchg
dec
hlt
mov
mov
test
push
int3
cld
stc
repz
mov
push
in
inc
ja
fidivrs
push
out
test
int
sub
jns
xchg
or
sub
cmc
lods
pop
and
mov
lret
cltd
pop
cs
inc
frstor
adcl
dec
mov
insb
cld
repnz
jle
ds
xlat
subl
and
inc
ss
add
sub
pop
mov
jnp
add
mov
jge
fisttpll
lahf
jl
rorb
cmp
and
pop
inc
iret
inc
inc
ucomiss
std
push
stos
pop
pop
pop
fcomip
mov
aas
push
push
loope
shlb
mov
cld
pop
pop
scas
lcall
add
setno
jg
addr16
das
lret
push
mov
dec
pop
sub
dec
jp
cld
jo
fstps
into
and
scas
mov
ss
xor
push
mov
loope
sub
ds
out
lahf
test
sbb
xor
push
ret
cld
stc
cmc
std
mov
test
outsl
test
jnp
adc
iret
lahf
aas
pop
sub
outsb
lock
arpl
jb
insb
das
and
sub
and
loopne
repz
lock
pop
and
ja
sub
jge
jl
cld
stc
inc
dec
add
in
sbb
jno
or
clc
mul
les
movsl
mov
cld
fidivrs
fwait
sbb
or
dec
and
hlt
xchg
pop
mov
dec
jp
movsb
lds
cs
add
iret
lahf
jg
cmp
mov
cld
repnz
repz
cmc
cmp
test
xor
out
inc
clc
push
stc
dec
les
cmp
cmp
mov
dec
xor
out
inc
imul
mov
jl
jmp
dec
pop
jns
movsl
int3
dec
fbld
adc
pop
insl
shlb
jns
xchg
push
imul
xchg
push
xchg
ficoml
shlb
pop
and
cmp
pop
xor
lret
xchg
push
pop
jns
test
sub
mov
push
pop
jns
aaa
lods
xchg
cmovge
lods
movsl
cmp
push
cmp
mov
or
in
cmp
shrl
jle
sti
in
sub
jg
inc
push
cmc
pop
push
jnp
adc
pextrw
mov
aas
aas
outsb
sbb
and
cmpb
pushw
mov
frstor
push
dec
mov
jns
jno
push
mov
out
fidivl
scas
mov
dec
xor
cmc
or
cmpl
jnp
repnz
jg
cld
shrl
insl
cmp
sub
iret
lahf
aas
gs
or
cmp
inc
pop
adc
inc
cmp
jns
fnstsw
fdivs
popl
xchg
repnz
push
lahf
mov
add
scas
mov
test
jbe
cmp
and
mov
decb
ljmp
sbb
jmp
ss
lret
lahf
aas
mov
adc
fldl
imul
xchg
add
cmp
push
repnz
mov
sti
push
mov
add
or
cmp
lahf
in
lret
xchg
push
fisubrs
xchg
pop
jge
ss
cmp
xchg
pop
and
out
pop
lods
jl
pop
jns
fucomp
decb
fstpt
inc
aad
adc
push
xor
call
sbb
xchg
push
pop
jns
xchg
mov
mov
push
xchg
push
pop
jns
push
stos
aas
or
sbb
lret
lret
xchg
xor
out
xchg
out
jg
cld
stc
pop
xchg
mov
mov
cmp
cwtl
or
iret
lahf
aas
out
insb
fistl
movsb
sub
call
icebp
in
fsts
jae
mov
push
dec
jecxz
iret
lahf
aas
enter
cmp
add
cmp
jnp
repz
popl
jnp
clc
xor
repnz
sub
pop
js
sbb
ds
in
sbbl
push
add
daa
je
push
lahf
aas
jg
outsb
or
jmp
xchg
mov
mov
mov
lret
out
lret
push
outsb
clc
sbb
out
pop
lcall
jns
lret
dec
pushf
jg
inc
push
cmc
xchg
movsb
inc
popf
cmpsl
sub
lahf
pop
inc
push
mov
gs
cld
rol
cmp
sbb
into
sbb
dec
fstl
adc
test
mov
stc
cld
fisubrs
mov
aas
sub
iret
lahf
aas
jg
dec
int3
test
sub
cmp
xor
in
out
mov
daa
cmpsl
ja
inc
add
sbb
stc
repz
jl
or
jle
sbb
push
leave
mov
dec
cld
stc
movsl
scas
cltd
leave
call
push
mov
lahf
aas
jg
mov
mov
adc
out
sarb
cs
cld
stc
repz
sub
out
sti
imul
and
lahf
aas
jg
std
arpl
ret
in
daa
adc
stc
repz
mov
lods
dec
sar
int3
jns
jl
popa
or
pop
scas
lahf
ljmp
mov
scas
int
js
iret
dec
xor
std
mov
jb
xchg
loopne
jno
pop
and
pop
inc
pop
fidivrs
sub
xor
xchg
lahf
jg
xchg
jno
mov
xchg
mov
rclb
xlat
aaa
cmpb
xor
cld
or
fists
inc
jmp
adc
nop
xchg
lahf
aas
jg
push
xchg
or
mov
fistpll
imulb
enter
fwait
add
mov
rorl
jmp
std
mov
stc
mov
or
in
xchg
ret
mov
push
out
subb
gs
mov
sbb
mov
aas
fcoms
shr
lret
push
sub
aaa
iret
lahf
aas
dec
scas
sbb
mov
pusha
xchg
or
push
fsubrp
lret
stos
popa
cld
or
std
sbb
dec
negl
in
sub
daa
mov
adc
in
push
jecxz
insb
inc
cli
jo
ja
in
and
mov
repz
scas
mov
cmp
or
xchg
repnz
loope
fbstp
scas
sbbl
or
mov
push
pop
lret
in
xchg
rclb
lahf
js
shll
jg
sahf
fmul
ret
test
cmp
add
out
lahf
aas
out
xorl
adc
pop
cmc
jge
stc
repz
hlt
mov
xchg
outsb
sbb
outsl
stos
jno
push
nop
dec
leave
iret
lea
mov
repz
into
aas
cmpl
jge
jl
aas
jg
cld
jp
js
mov
and
mov
xchg
lahf
jg
mov
scas
cmp
jmp
xchg
push
pop
jns
cld
mov
jmp
bound
in
sarl
xor
inc
testl
fsqrt
in
pcmpgtb
aas
jg
cld
outsb
pop
cmp
dec
stos
xchg
mov
sbbl
xchg
lahf
inc
add
xor
push
pop
dec
rcrb
push
mov
fdivs
out
mov
mov
fistps
aaa
lcall
sub
subb
mov
pop
add
lret
popa
adc
dec
jnp
jecxz
mov
hlt
pop
lahf
mov
sub
pop
jg,pt
andl
pop
rclb
ds
and
stc
repz
rorl
nop
stc
scas
push
push
movsb
test
jle
pusha
mov
lds
in
imul
sub
imul
mov
pop
jecxz
in
push
jl
lahf
mov
sub
add
out
mov
sahf
lock
mov
movsl
imul
add
jmp
test
aas
ds
adc
in
inc
dec
cli
jnp
stc
repz
pop
in
outsb
cmpl
push
insl
xchg
sbb
mov
loope
mov
cmpsl
sti
mov
mov
jl
mov
cli
xor
cmp
sub
fbstp
clc
mov
adc
fstp
adc
sub
dec
in
stos
xor
gs
pop
pop
mov
inc
push
out
cwtl
or
mov
out
xchg
repnz
dec
mov
imul
jle
pop
aas
nop
ja
cmc
cmp
jnp
mov
repnz
les
mov
push
pusha
push
pop
jle
pop
push
mov
mov
cltd
add
push
jnp
fidivrs
cmp
sub
dec
pop
rorl
fs
aas
jg
cmp
int3
xor
lahf
jg
adc
push
rorl
add
cld
stc
repz
pop
iret
jmp
stos
dec
push
outsl
push
inc
lret
sbb
lahf
aas
jg
dec
fbstp
add
xor
sub
mov
iret
imul
and
mov
and
cli
sbb
mov
icebp
in
lcall
es
or
sub
xchg
push
and
sub
movsl
int3
aad
push
lret
mov
sbb
hlt
jecxz
sub
pop
mov
push
jle
repnz
dec
sub
adc
mov
movsb
push
addr16
dec
aad
dec
stos
jg
cld
stc
cld
dec
cli
and
pop
fdivrp
jge
or
aas
aam
aaa
mov
and
cld
stc
xor
dec
dec
mov
sbb
cld
push
adc
mov
jmp
aas
jg
xorb
into
pop
push
outsl
pop
ds
daa
lea
push
lock
lahf
faddl
das
sbb
lds
repz
push
sbb
mov
outsl
pop
lahf
aas
jg
or
fs
ljmp
out
pop
pop
bound
inc
js
cld
cld
stc
xchg
hlt
lea
out
push
movsl
and
sbb
stc
adc
mov
inc
cli
lahf
aas
jg
fimuls
sbb
fdivs
shlb
ret
mov
lahf
cmp
add
call
repz
lahf
rorb
or
pushl
adc
jg
cld
stc
cli
ficoms
mov
aad
mov
das
lahf
aas
push
jb
pop
push
jg
jp
xor
lock
test
sahf
popa
lahf
mov
cld
cmp
lds
test
dec
and
xchg
icebp
int3
incb
repnz
repz
lahf
add
sub
call
jl
mov
add
lea
shl
iret
lahf
aas
mov
sub
pop
loop
xor
cld
jns
popa
scas
data16
add
mov
mov
fisubrl
mov
pop
xchg
add
out
sbb
out
jle
pop
cli
xchg
les
lods
out
movsl
jle
repnz
rcr
inc
fbld
mov
xor
pop
outsb
mov
movsb
xor
inc
add
iret
and
in
aas
dec
pop
or
enter
iret
lahf
pop
shrl
cmp
add
cld
stc
pop
jb
outsb
sub
push
pop
jle
cs
mov
xchg
dec
stos
js
pop
mov
repnz
icebp
cld
dec
or
repnz
pop
mov
dec
clc
orl
fstl
lahf
aas
jg
sbb
test
xchg
loope
mov
fildll
push
mov
shll
dec
pop
add
in
mov
pop
and
lods
push
jno
jb
lret
iret
aas
mov
test
out
dec
call
das
fimuls
dec
ret
call
lahf
push
call
xchg
out
lods
lahf
jb
cmp
mov
push
fsubp
insb
sti
popf
incl
xchg
jle
popl
add
aaa
mov
sahf
cpuid
pop
sti
adc
inc
inc
mov
outsb
sub
pusha
pop
push
pop
jns
dec
aas
shrl
popf
sbb
xchg
jns
mov
in
adc
or
js
or
stc
mov
pop
cmp
iret
scas
sub
iret
pop
push
pop
outsb
into
cltd
lds
out
aam
push
dec
xchg
enter
cmpsb
aam
inc
lock
aam
test
dec
mov
mov
xchg
jg
sbb
add
xchg
stc
and
or
dec
inc
sbb
mov
lds
js
mov
mov
jae
lock
mov
fldl
or
xor
add
pop
pusha
iret
pop
and
pop
mov
adc
inc
int3
sub
sub
jg
out
sahf
jg
iret
out
dec
fcoms
das
mov
outsb
and
add
xchg
insl
mov
mov
xlat
nop
out
lock
cmc
push
or
aas
mov
cmp
cmpsb
push
jle
add
call
ja
inc
cwtl
pushl
ficompl
int3
pop
std
jns
inc
inc
mov
push
icebp
test
lret
cltd
mov
and
jg
outsb
lods
ja
mov
stc
xchg
iret
sarb
add
jmp
shlb
jg
push
stos
das
scas
mov
jmp
loop
pop
xchg
push
pop
jns
das
rcrl
and
and
add
jb
aam
aaa
mov
daa
ret
cmp
add
push
jle
out
and
mov
sbb
aas
mov
cmp
dec
push
mov
outsl
xchg
mov
fnstenv
lret
sti
cmpsl
leave
pop
pop
xchg
scas
mov
repnz
ljmp
jg
fbstp
negb
adc
psllq
iret
lahf
out
fistl
xchg
mov
inc
dec
adc
push
lock
xchg
dec
mov
cmc
addr16
das
xchg
into
xchg
lahf
pop
outsl
xor
mov
cltd
outsl
or
lock
iret
or
adc
pop
stc
xor
popf
shl
sbb
out
sbb
repz
ja
jl
or
dec
out
js
push
gs
pop
jns
and
mov
les
aas
mov
jnp
push
inc
jecxz
add
data16
rclb
mov
and
div
out
lahf
shr
int3
ss
pop
out
adc
pushf
jge
inc
jge
sbb
push
or
jns
push
cmp
cli
and
mov
iret
inc
shll
or
jb
call
xchg
sbb
sbb
jns
jl
pop
or
fsub
xchg
adc
sbb
fists
jecxz
jae
mov
xchg
ja
pop
aaa
fnsave
insl
shrb
push
fdivrp
jnp
subl
or
push
dec
jo
hlt
lods
add
int
mov
jecxz
bswap
es
fbstp
cmc
pop
rcl
pop
ror
lahf
mov
imull
cld
stc
repz
sub
mov
addl
incb
pushf
sbb
inc
add
dec
mov
jg
cmpb
xchg
push
shr
out
adc
adc
mov
mov
jp
mov
push
pop
mov
mov
test
out
cmpsb
sub
jb
pop
jbe
stc
repz
push
cwtl
lods
pop
lcall
cmp
clc
sub
aas
sbb
inc
xchg
sub
or
cmp
add
cmc
gs
gs
ja
jl
loopne
into
xchg
aas
xchg
mov
lock
fstpl
push
imul
cmpsl
pop
stc
repz
leave
xchg
iret
inc
jbe
pop
mov
pop
add
dec
add
outsb
mov
insb
mov
stc
pop
clc
push
sbb
fisttpll
xor
rcrl
jle
sahf
adc
pop
adc
mov
lahf
fwait
dec
dec
es
pop
jns
lret
out
hlt
lret
jmp
cmpsb
mov
lret
xchg
push
pop
mov
push
and
xchg
fsub
jg
out
outsl
loopne
lock
iret
jbe
outsl
cmpsb
xor
push
pop
jns
sbb
into
sub
jge
fnstcw
and
sub
cmp
out
jle
cld
insl
pop
les
repnz
add
mov
divb
scas
sub
in
filds
xchg
mov
jns
mov
push
sub
cs
pop
insb
cld
fcmovnb
mov
mov
dec
pusha
cs
lahf
aas
jg
leave
aam
or
lcall
out
jo
filds
or
std
lods
cld
sbbl
cmp
das
cmp
adc
jg
sub
cmpsb
cmp
xor
bound
outsb
repz
nop
dec
dec
xchg
push
pop
jns
sbbl
dec
mov
or
jns
int3
inc
sub
pop
jle
sub
and
sti
in
xchg
pop
jnp
jp
pop
sbb
xchg
sub
mov
mov
adc
lcall
jecxz
xor
pop
pop
into
addr16
into
mov
cld
stc
movl
jo
cmp
adc
mov
mov
in
ficoms
lcall
cld
jle
jo
mov
shrb
adc
out
lahf
push
testl
jne
mov
inc
andb
outsl
push
pop
xor
data16
das
fists
outsb
cmc
fstps
cmp
out
lods
es
scas
xchg
mov
jg
and
jle
mov
jns
lret
loopne
gs
outsl
in
scas
fidivrs
cltd
lods
scas
sub
setne
jns
add
enter
mov
hlt
lahf
outsl
push
pop
jns
jnp
jmp
and
sti
int
jb
xchg
sbb
jnp
or
faddp
aas
jg
inc
xlat
lahf
pop
xorl
iret
mov
sar
movsb
mov
cli
mov
jae
pop
jnp
mov
jg
cld
stc
out
mov
dec
movsl
imul
fstl
fs
flds
jns
mov
es
ja
lods
pop
jns
xchg
adc
mov
xchg
imul
push
mov
cmp
adc
lahf
lret
ds
ja
decb
adc
mov
push
pop
jns
stc
fsubp
push
xorl
pushf
sub
jns
xchg
sbb
cmpsb
push
testl
xchg
and
pop
inc
insb
ficomps
cmp
xchg
xor
jb
outsb
push
inc
push
sub
jle
xor
mov
xchg
psrlq
mov
sub
mov
pusha
pop
repnz
mov
mov
fsubr
test
shrl
add
pop
out
iret
scas
mov
repz
mov
sub
mov
add
or
fdiv
scas
xchg
lret
pop
pop
lcall
in
mov
ret
leave
es
jb
xchg
push
lds
icebp
ret
fs
clc
push
jg
sub
inc
fistpll
in
push
add
jmp
xchg
lret
iret
lahf
aas
shll
fidivrs
imul
repnz
nop
jnp
aas
lcall
cmpsb
shlb
das
dec
push
fidivrs
push
sub
jns
fstp
lds
data16
fmull
les
in
test
cld
stc
repz
jnp
dec
or
js
cmpsb
insb
jle
dec
cld
nop
pop
pop
fidivrs
xor
test
adc
iret
lahf
pop
fbld
or
movb
xchg
psubw
into
push
or
mov
jnp
cmpsb
mov
cmp
shl
cmp
cmp
mov
cmpl
test
mov
xchg
cmp
pop
add
aas
sbb
sub
repnz
inc
inc
xlat
addl
ret
mov
das
ja
jg
xchg
xor
out
repnz
je
or
sub
lods
dec
scas
pop
jge
test
sub
das
jb
jb
pusha
lcall
or
aam
or
ret
lahf
aas
jg
dec
cmpsb
in
sbb
lahf
jmp
push
sub
iret
pop
lock
dec
ss
and
sarb
repnz
cld
add
iret
sidtl
lods
lcall
scas
fsubrl
in
pop
push
outsb
mov
stc
repz
or
sbb
sbb
sbb
cli
pop
in
rdmsr
pop
popa
push
cmc
cmpsl
mov
repnz
xor
jb
mov
xchg
jne
in
mov
into
sub
movsb
sub
jg
push
or
xlat
xor
dec
iret
dec
or
cld
stc
jae
cmp
rcrb
jbe
stc
mov
iret
lahf
aas
outsl
test
ds
bound
popa
dec
jnp
cli
repnz
testl
stc
ds
xorb
pop
ror
mov
jecxz
repnz
mov
cmpl
add
xchg
mov
mov
fdivr
in
inc
into
clc
mov
mov
out
jle
pop
cwtl
test
push
sub
jmp
test
dec
out
movsl
push
fnstenv
lahf
ficompl
jns
rol
lcall
cld
stc
movsl
cmp
sbb
jp
shll
jno
arpl
iret
xchg
aas
push
mov
and
inc
add
mov
jns
loopne
mov
shrb
or
xchg
xchg
cld
jmp
jle
jge
pop
insb
fistps
out
lahf
pop
mov
data16
cmp
mov
repz
stc
mov
dec
inc
cmpsl
mov
cmp
and
adc
daa
mov
hlt
cmc
repz
decl
sbb
movsb
out
xor
iret
lahf
pop
mulb
jp
add
leave
in
sub
push
push
popa
out
mov
xchg
sub
mov
or
enter
fidivrs
add
cmp
shlb
loopne
sub
or
xchg
dec
loopne
sub
jge
push
int
arpl
out
bswap
cmp
in
jecxz,pn
push
lods
ljmp
fstps
loopne
imul
fcom
aas
lds
lret
in
mov
mov
fsubrs
ljmp
scas
jg
jb,pt
sub
ficoms
jnp
faddl
push
push
cmpl
into
lcall
cmp
mov
cld
mov
inc
fwait
cmc
repz
lock
lret
loopne
popa
xchg
cs
lahf
addr16
test
roll
cld
stc
addl
mov
xor
ljmp
sub
psubq
dec
enter
out
movsb
pop
lds
pop
push
out
aas
ds
movb
cld
sbbl
sbb
stos
fcoms
fs
jge
in
jo
push
cmpsl
aad
mov
and
loope
shl
out
aas
pop
jno
push
mov
stc
cld
stc
loope
add
aaa
in
mov
xchg
add
lret
mov
sbb
inc
in
insb
push
mov
scas
mov
test
aad
xchg
pushf
fpatan
out
aas
jle
pop
es
aas
mov
sbb
xchg
clc
mov
add
add
and
cmp
sarb
jg
or
xor
lock
cmc
js
pushl
andb
mov
movsb
pusha
mov
aas
frstor
jge
push
sub
push
sbb
jb
cmp
inc
aad
push
lock
jmp
aas
adc
sbb
cld
add
aam
fdivr
jge
jle
sub
shll
iret
fsub
int3
repz
mov
mov
jl
cld
stc
xchg
sbb
mov
das
add
lahf
stos
js
push
push
lahf
aas
push
popl
int
call
out
xor
inc
rolb
stos
movsb
mov
ljmp
dec
jg,pt
cld
call
aas
mov
cwtl
rol
mov
iret
lahf
mov
jg
push
pop
loope
nop
out
pop
gs
pop
inc
push
jl
iret
scas
or
jnp
or
outsb
mov
cmp
mov
lahf
aas
mov
push
add
outsl
cmc
aas
int
test
into
jp
jp
ret
adc
repnz
pop
adc
stc
inc
add
cmp
cmp
push
fsubrl
push
pop
jns
mov
setne
test
xor
push
pop
jns
lfs
mov
lock
shufps
pop
sbb
outsb
or
ror
fstpl
imul
test
xor
lahf
aas
jg
sahf
shlb
loop
lea
sub
lret
add
dec
lahf
mov
pop
and
jge
das
push
ds
push
and
xor
add
xchg
negl
cmp
loopne
xchg
idivb
jb
cld
repnz
scas
dec
cmp
rclb
lahf
enter
ret
and
or
xor
dec
xchg
stos
jle
add
dec
testl
fcmovnbe
add
mov
inc
and
inc
int
cs
fisttpll
or
out
mov
inc
std
shlb
scas
fxch
adc
and
repnz
sub
jg
xchg
add
inc
adc
cmpl
lret
jle
push
lcall
nop
mov
ret
push
add
jg
movsl
dec
idiv
or
ds
daa
jg
enter
iret
je
stc
jmp
cld
stc
cmpsl
push
negb
out
fdivrs
repz
mov
addl
jae
dec
lahf
aas
aas
xchg
ficomps
inc
cmp
div
enter
lret
xorl
cmp
mov
pop
jg
sbbb
mov
jo
and
lods
orb
inc
mov
pop
fidivrs
mov
inc
pop
por
sbb
sahf
fldt
rolb
jge
int3
aam
out
xchg
into
gs
xchg
fcomp
stos
daa
mov
and
lahf
fdiv
mov
test
jbe
sbb
inc
pop
mov
gs
repnz
into
mov
addb
adc
out
xchg
push
loopne
movsl
cltd
aas
pushf
mov
stc
xor
add
daa
or
roll
xchg
or
das
in
ja
cmp
lahf
pop
outsb
mul
push
out
pop
xchg
jg
pop
jns
int3
mov
jmp
adc
or
into
cmp
imul
xchg
aam
sub
stc
repz
ds
dec
addr16
inc
sbb
ja
add
rcl
iret
sub
pop
rol
fidivs
sahf
add
and
pop
out
pop
fcoms
add
xchg
xchg
cwtl
xor
ficompl
in
in
add
mov
jb
or
aad
lret
pop
inc
leave
cmovs
std
popl
aas
cmp
test
ds
movsb
cmp
dec
ss
lahf
aas
jg
outsb
sbb
imul
cmc
popf
fprem
mov
out
push
stos
repnz
xor
and
scas
mov
sbb
iret
inc
lret
subl
in
lahf
aas
jg
push
adcl
mov
clc
stc
mov
fsubs
iret
lahf
aas
jg
loope
lock
and
aaa
cmp
inc
and
mov
cmp
enter
add
inc
cltd
push
orl
enter
outsl
cmc
dec
std
stos
cmp
aam
scas
cmpsl
xor
jnp
sub
push
pop
popa
fcoml
add
xchg
sub
jecxz
test
iret
cmp
push
push
fmulp
push
dec
xor
push
pop
xor
outsl
fisttps
inc
cld
lret
add
mov
fisubs
in
inc
fs
dec
popf
ljmp
push
pop
jns
dec
dec
mov
and
imul
pop
jns
adc
xchg
cmp
push
add
push
pop
dec
in
push
add
fisubrs
lahf
jg
daa
shl
repz
add
xor
icebp
lret
cli
ja
cmpsb
stos
push
out
in
stos
inc
cld
stc
repz
mov
ja
jne
lcall
js
aas
jg
jp
jnp
cwtl
cwtl
jne
enter
cmp
fsubrp
xchg
iret
nop
sbb
sarb
sahf
lds
jns
xchg
push
std
ds
mov
mov
stos
out
rcrl
gs
and
out
pusha
fistl
lahf
les
sub
clc
repnz
xchg
nop
sbb
and
mov
in
lahf
lock
sbb
scas
mov
lret
jmp
mov
std
or
repnz
lret
fs
rorb
movsb
or
and
mov
pop
enter
ss
xor
dec
dec
jns
push
jne
lods
mov
aas
pop
pop
jns
les
mov
aaa
xor
inc
xchg
jnp
loopne
lahf
pop
add
shlb
xchg
iret
cld
stc
repz
sub
add
adc
les
pop
lahf
aas
jg
pop
test
and
pop
jg
pop
cmc
add
sti
mov
inc
and
cmp
insb
inc
xorl
sahf
jbe
xchg
aas
jg
cld
inc
inc
shl
sbb
adc
jmp
lret
lahf
xchg
pop
adc
sbb
fwait
ds
movsl
xor
mov
rclb
and
cmpps
fcom
loop
jge
stc
repz
dec
inc
push
rclb
je
sbb
fidivrs
stos
stos
repnz
jo
mov
push
rorb
fildl
dec
mov
sar
iret
cmpsb
imul
and
jecxz
cmp
mov
out
lahf
sub
cli
sub
clc
jge
lret
je
mov
jae
rcrb
cmpsb
repnz
into
sub
stc
jne
sahf
adc
fsub
add
repnz
ja
xlat
fidivs
xor
adc
insl
mov
jb
mov
jno
jns
iret
mov
jle
adc
xchg
pop
sahf
and
mov
cld
jmp
lahf
and
cld
dec
leave
jmp
mov
icebp
cld
inc
push
adc
pop
scas
mov
cmp
xchg
ja
jg
fdivrs
add
adcb
mov
jmp
pop
cli
mov
push
shrb
push
decl
das
nop
push
sub
stc
repz
push
jg
push
lcall
inc
test
pop
and
ljmp
mov
frstor
dec
scas
and
xchg
pop
movsb
pop
popa
jb
dec
mov
jns
fisttpll
andl
cld
add
call
sub
mov
lahf
aas
jg
and
sbb
inc
sub
stc
repz
repz
repz
push
jns
mov
mov
in
lahf
sbb
icebp
or
sub
or
rcl
cld
stc
repz
jge
arpl
out
fldenv
xchg
aas
jg
loope
lahf
movsb
lahf
ljmp
lret
pop
insb
popa
mov
clc
xor
jo
scas
mov
jne
sbbb
int
push
mov
xor
aas
in
imul
pop
out
pop
ds
sub
lret
enter
jae
iret
or
and
and
aas
nop
xchg
je
fisubl
cs
pop
jns
xchg
mov
cltd
push
mov
sbb
loope
xchg
push
xchg
cltd
cwtl
xor
adc
pop
shlb
push
jnp
sbb
lahf
aas
decl
push
test
je
push
arpl
bnd
out
lods
ds
pop
aad
mov
int
pop
jg
and
repz
mov
loope
push
in
ja
mov
mov
repnz
push
pop
jns
aas
out
ffreep
jb
pop
sbb
xor
pop
mov
lock
or
ror
pop
dec
scas
mov
lret
xchg
das
xchg
jns
sbb
sbb
mov
aad
out
jno
popa
cld
pop
rorl
repnz
push
inc
hlt
cmpsb
pop
add
aad
add
lret
mov
out
cli
stos
js
std
cs
scas
mov
mov
xchg
jl
pop
call
mov
xchg
test
cwtl
or
sub
scas
movsl
sub
and
xchg
cmc
lret
paddd
cmp
mov
jge
pusha
aas
outsl
hlt
aas
test
mov
sbbb
into
out
mov
add
rcrb
iret
sub
in
aaa
inc
jne
sbb
mov
inc
icebp
dec
lcall
sbb
lea
mov
push
in
push
lret
outsl
push
cs
sub
decb
pop
scas
mov
inc
sbb
mov
jl
test
pop
sbbb
test
jg
jg
addb
push
pop
xor
test
mov
cwtl
scas
divl
sti
repnz
jae
inc
enter
stos
xor
pop
lods
in
or
shr
test
scas
mov
xor
or
cmp
insl
sub
in
lock
repnz
jg,pt
lahf
pop
cli
push
and
push
sbb
movsb
cli
in
mov
in
outsl
lock
jns
xchg
ja
lock
rcrl
std
or
xor
lds
sbb
or
inc
jle
rorl
xor
push
fimuls
scas
inc
pop
nop
inc
inc
fs
pop
jns
xchg
aad
jle
fnsave
dec
imul
push
out
cmc
pop
movsb
jmp
fiadds
add
xchg
push
pop
jne
cmc
shll
ret
div
cmp
push
pop
jns
xchg
in
outsb
push
push
xor
popf
xor
hlt
sub
jb
dec
fcomps
out
push
xchg
aas
jg
push
jbe
lret
adc
insb
divb
scas
test
jg
lods
pop
push
adc
repnz
in
loop
mov
push
jg
pop
jns
dec
mov
cs
stc
jg
adc
rorw
sahf
shll
fidivrs
repz
jp
aas
cld
mov
mov
cmp
aad
cld
ret
cld
xor
andb
lret
scas
data16
call
and
mov
lret
adc
push
fidivrs
sbb
pop
cltd
scas
out
and
clc
jb
xchg
cmp
cltd
add
xor
add
push
cld
stc
repz
pop
jno
fistps
mov
lahf
aas
jg
mov
push
sbb
loope
pop
mov
repz
xor
push
cmc
add
push
enter
push
aad
jl
fdivrp
pop
stc
repz
in
mov
mov
jle
cld
add
mov
xchg
sub
adc
cmp
cmpsl
lahf
ja
das
jg
out
push
into
hlt
pushl
lods
orb
or
test
ret
subb
outsl
enter
xchg
cmp
dec
ror
cmp
push
jae
inc
int3
in
xchg
push
das
and
js
enter
pushf
lods
xor
stc
and
jg
xchg
ds
out
scas
pop
inc
cld
add
stos
outsl
movsb
mov
jecxz,pt
dec
cmp
mov
in
insb
mov
xchg
fsubrs
add
les
aas
mov
ret
stc
mov
loop
pop
popa
ds
aad
add
add
bound
scas
mov
insl
cmp
leave
push
sub
jns
fstl
pop
xor
imul
jnp
insb
pop
enter
adc
scas
mov
jbe
xor
scas
mov
repnz
sub
sub
mov
sub
ljmp
rol
cli
xchg
iret
push
scas
mov
push
out
xchg
in
pop
push
adc
cld
xor
insl
mov
in
jo
insb
sbb
lret
jle
or
pop
fidivrs
mov
add
add
cmp
sub
mov
mov
loopne
xchg
test
pop
mov
mov
mov
in
ja
scas
push
jbe
mov
pop
ljmp
js
mov
pop
jo
cmp
mov
je
out
fsub
xor
fwait
mov
jo
cld
stc
fs
cmpsl
jne
pop
aas
insb
stos
xor
fdivr
cld
dec
and
jbe
rolb
xchg
aas
jg
pop
pop
leave
repz
cmp
sub
scas
js
pop
decl
stc
xchg
dec
aas
cwtl
pop
sti
insb
inc
stc
repz
imul
pop
add
ret
aas
jg
cld
pop
out
pop
add
or
aas
cmp
rclb
cwtl
dec
mov
jl
cld
sbb
xchg
adc
stos
jno
lahf
pop
dec
jg
cli
addr16
notb
push
jl
insl
pusha
in
adc
lea
out
mov
jnp
mov
sub
cld
stc
pop
mov
adc
jg
imul
fsubr
pop
lahf
push
jb
call
adc
std
cltd
pop
pushf
pop
xor
ret
jg
inc
jl
movsb
out
mov
lcall
lahf
aas
icebp
test
mov
push
dec
sbb
pop
jns
repnz
push
mov
repnz
inc
sub
int
jns
xchg
push
repnz
fmull
add
jl
sbb
sbb
lahf
aas
scas
xchg
jp
cmpsl
adc
add
cld
stc
repz
xor
out
fistps
ret
or
push
fcmovu
insl
jmp
mov
xchg
push
fdivrp
pop
into
mov
orb
pop
cmp
dec
mov
int3
push
cmp
pop
out
pop
jg
push
adc
in
push
dec
scas
jo
xchg
jg
xchg
std
dec
shl
xchg
push
pop
fbstp
aaa
fwait
and
rorl
pop
jns
push
xchg
in
pop
xchg
add
add
repnz
rcrb
and
dec
std
jb
shlb
or
push
pop
jg,pt
dec
mov
jp
pop
call
inc
and
out
lret
mov
pop
in
repz
fldcw
lret
mov
cmp
mov
xchg
ficoml
inc
ds
fs
stos
aam
stc
xor
lret
fldl
xor
adc
stc
repz
scas
mov
std
jae
out
add
in
ja
mov
stc
dec
mov
jmp
out
push
insl
ljmp
in
dec
xlat
inc
clc
mov
xchg
lret
mov
lea
ljmp
lret
ret
insb
xor
lods
test
in
loope
repz
aas
mov
mov
out
movsl
mov
cld
stc
adc
cmp
sub
stc
adc
sub
scas
pop
inc
jge
sub
sbb
scas
mov
jne
jg
cli
pusha
xor
mov
out
pusha
ds
loope
daa
lods
fiaddl
aas
hlt
aaa
cs
dec
ret
scas
and
cmpsb
jmp
push
jns
mov
xorps
lock
enter
out
stc
xchg
inc
out
dec
je
jg
cld
inc
into
ds
nop
shlb
fs
sbb
add
adc
lret
cs
clc
push
mov
add
fildll
cld
sti
dec
jg
or
pop
jne
loop
out
pop
jle
dec
outsb
jo
sbb
stos
in
mov
out
xbegin
lahf
testl
scas
push
fildl
mov
sub
fisttpll
daa
push
lods
cwtl
or
mov
mov
fdivrl
int
scas
pop
jns
sbb
xor
dec
lock
jb
and
pushf
popa
lahf
iret
lahf
cmp
adc
cld
stc
repz
daa
int
int
mov
mov
aas
jg
jae
imul
sti
sub
push
dec
and
iret
sub
outsl
xlat
xor
notl
push
sahf
cmpsb
mov
add
out
punpckhdq
xor
sbbb
repnz
sahf
mov
cld
ficoml
stc
test
pusha
imul
push
ja
push
fbld
aas
jg
xchg
adc
xor
enter
push
in
iret
and
iret
cs
mov
in
movsl
out
mov
jle
mov
xor
and
jp
cld
fcmovu
sbb
pop
leave
xchg
inc
in
je
ficomps
jge
in
jl
cmp
pop
mov
add
scas
cmp
xor
dec
mov
dec
pusha
xchg
cld
mov
into
sub
popa
xchg
or
adc
and
loope
addl
xchg
fcmovnu
sub
cmp
pusha
dec
xchg
push
pop
test
mov
sbb
cmc
add
sbb
push
popf
sbb
cmp
aas
push
sbb
fsqrt
pop
push
or
sub
and
mov
mov
xor
mov
lahf
es
repz
rcll
adc
mov
iret
lahf
nop
imull
or
cmpsl
push
sub
je
mov
adc
mov
cld
maskmovq
imull
cltd
test
jle
imul
lahf
aas
jg
fwait
rol
xchg
inc
lods
cmc
rcrb
fs
gs
repz
out
out
and
push
cli
add
lea
fisttps
lods
jg
leave
and
adc
pop
pop
inc
pop
bound
dec
int
repz
push
jle
push
out
cmp
push
xor
pop
in
ljmp
mov
xlat
pop
jns
inc
dec
pop
leave
jb
cmp
add
or
mov
pop
jns
and
enter
mov
adc
aas
imul
sub
and
mov
dec
mov
sub
mov
and
scas
test
sbb
test
or
jo
out
mov
cli
jo
out
fisubs
ror
sti
ja
lock
cmpsb
out
add
sub
ret
mov
add
cmc
add
xor
mov
jmp
mov
pop
shrb
mov
aas
ds
sbb
pusha
mov
or
inc
cld
stc
repz
or
jbe
ret
inc
test
pop
mov
mov
cmpsb
nop
and
sarb
out
lahf
pop
jle
mov
mov
cmpsl
clc
in
leave
cmpsb
dec
ljmp
jns
in
clc
push
leave
jg
inc
sahf
jg
cli
das
mov
or
mov
pop
subl
xor
cmp
test
incb
in
inc
icebp
xor
sub
in
out
add
lret
mov
sbb
push
push
test
enter
cmpsb
cmpsl
dec
adc
mov
jg
xchg
lcall
rcr
insl
jmp
jbe
inc
pusha
sahf
fwait
scas
or
imul
push
scas
cld
stc
stos
jno
cli
adc
gs
cld
ds
jg
orb
shlb
iret
lahf
fildl
mov
cmpb
add
je
jne
repnz
scas
scas
jl
scas
test
cmp
xchg
pop
push
pop
popf
dec
mov
rolb
ljmp
and
jnp
pop
pop
lret
cld
lahf
adc
xchg
jmp
and
.byte
.byte
mov
in
add
cmp
add
cmp
cmp
add
imul
mov
out
or
sub
imul
sub
and
cmp
add
sub
sub
mov
cld
insl
add
mov
add
push
lock
sub
push
mov
sti
sub
rorb
ret
add
sub
rolb
mov
outsb
mov
cmp
cwtl
push
sub
mov
add
sarb
shll
adc
sti
outsl
lods
mov
pop
shl
and
add
sub
imul
mov
ds
xlat
fidivrs
pop
clc
mov
ret
icebp
pop
add
xor
leave
sbb
add
or
sub
clc
add
ret
or
jbe
mov
sbb
xor
mov
das
js
cmpl
cli
sbb
and
ret
out
add
mov
int
mov
movzbl
mov
xor
mov
mov
mov
mov
pop
lret
and
adc
pop
add
mov
cwtl
adc
fstl
lock
mov
fimuls
adcb
or
test
je
pop
iret
lock
movsl
rolb
mov
push
jp
cmp
fisubl
leave
mov
xchg
adc
sub
jb
in
mov
je
adc
mov
mov
push
jb
push
mov
nop
xor
mov
sbb
icebp
bound
sbb
mov
cmp
outsb
repnz
add
adc
cmp
mov
ja
cld
sbb
dec
popa
xchg
adc
lock
roll
push
add
fldt
fldt
rcrb
adc
mov
push
or
sti
mov
sbb
jo
sub
pusha
pusha
insl
mov
data16
adc
aaa
insb
ss
lods
cmp
jmp
pop
or
sbb
push
repnz
jge
cs
push
sbb
cmp
stos
bndstx
adc
lret
or
sbb
sbb
adc
femms
lds
icebp
push
js
repnz
cmp
mov
sbb
pop
sbb
cwtl
cmpsb
push
cld
sub
mov
push
xchg
movsb
sbb
lock
movsb
push
in
pop
rcrb
and
sarb
imul
push
ror
mov
cmp
sbb
mov
add
xchg
into
add
mov
not
or
sbb
je
add
rcrl
mov
inc
es
lret
je
testb
xor
sbb
adc
testb
shll
fadd
pop
sbb
cli
rolb
icebp
imul
sarl
fstpt
or
fistpl
mov
pop
inc
or
negb
bound
leave
jno
jo
cwtl
xor
jbe
xor
mov
sbb
sub
push
ret
stos
out
fdivl
jo
loop
adc
mov
cmpsb
jo
lret
lea
pusha
pop
mov
aas
push
fldenv
pushf
into
addr16
ret
dec
and
ret
mov
lock
mov
add
push
imul
xorl
pop
test
pop
fisubs
xor
imulb
adc
mov
pop
jnp
insb
pushf
sbb
pop
cmp
xchg
into
sub
sbb
in
jle
push
je
cmp
mov
clc
and
jp
addl
mov
or
sub
rcll
adc
rorl
cmpsb
int
sbb
xorb
popf
or
adc
push
mov
sti
mov
xor
pop
into
addb
or
sub
adc
icebp
je
loop
icebp
mov
inc
push
fimull
ret
mov
inc
bnd
in
cli
add
sbb
adc
mov
xchg
sbb
sbbb
enter
mov
adc
cmp
xchg
mov
leave
ret
call
pop
sub
lock
bound
jl
cmp
or
stos
inc
sbb
add
or
push
div
or
stos
add
mov
or
jo
ds
pop
xor
into
out
adc
idiv
test
roll
xor
rcrb
xchg
stc
push
call
xchg
push
sbb
or
adc
jp
xchg
cmp
or
nop
shrb
loope
cmp
icebp
and
movl
cli
enter
sbb
ljmp
ss
hlt
adc
pop
add
shr
add
dec
cmpps
mov
xchg
jb
cmp
add
shl
adc
lock
cmp
sbb
clc
rolb
cld
add
or
and
sahf
push
xor
sbb
pop
adc
add
ljmp
lret
sub
mov
rorb
push
aam
dec
pop
divb
mov
adc
sbb
test
jmp
rcrb
pusha
adc
jl
shrl
mov
out
aam
scas
mov
jnp
rolb
or
sub
dec
enter
mov
out
jle
push
leave
dec
sbbl
fcmovbe
repnz
stos
or
and
icebp
jl
sti
sub
mov
sub
lock
pop
push
lods
mov
or
rol
or
test
push
dec
cmp
push
add
mov
mov
cwtl
add
addb
push
sahf
jo
rorl
jnp
xlat
sti
cmp
mov
orb
cmp
push
stos
in
mul
add
add
add
adcl
adc
push
jo
or
add
pop
sbb
pop
xchg
push
push
add
iret
mov
fdivrs
fiaddl
cmp
push
mov
push
rorl
or
mov
lods
pop
adc
adc
shlb
call
mov
push
rclb
inc
inc
mov
and
xchg
stc
addb
loope
sub
into
scas
and
dec
andl
rorl
jbe
mov
scas
andl
add
test
mov
testb
popf
pop
and
or
clc
inc
jae
mov
xor
je
out
mov
xadd
dec
test
sahf
sbb
insb
xor
push
and
add
push
mov
jae
sbb
insb
sarl
fwait
inc
int
sub
or
fwait
rolb
loopne
nop
push
pusha
lods
xor
orb
adc
pop
add
push
push
and
push
lock
into
mov
jg
cmp
insb
mov
cmp
sub
adc
adc
or
es
push
repnz
pop
imulb
add
push
lock
or
cmp
mov
out
jmp
std
clc
push
call
add
bnd
lcall
jle
loopne
add
pop
add
mov
inc
push
sbb
test
stos
test
pop
or
imul
inc
sbb
js
lcall
push
or
andb
hlt
or
adc
add
inc
cli
adc
cmp
sbb
movsb
mov
cmp
mov
ret
add
je
shll
out
dec
push
je
pop
pop
pushf
or
push
ret
ficompl
sbb
test
mov
adc
push
adc
push
inc
hlt
add
popa
xor
jl
or
mov
pusha
lret
cmp
dec
test
mov
daa
add
jo
out
sub
insb
push
test
loopne
int3
shlb
lds
enter
xor
cmp
cmpsl
adc
or
push
pop
mov
jmp
pop
mov
pop
sbb
rolb
push
pop
jg
push
sub
stc
push
xchg
leave
jo
or
push
lock
mov
lcall
lock
sbb
dec
sbb
ss
dec
or
sbb
push
data16
out
sub
push
inc
xchg
shl
mov
shlb
loop
das
cmp
xlat
and
int
fistpll
ror
adc
or
gs
xor
adc
and
cmp
jo
ljmp
sbb
mov
mov
sahf
test
lock
inc
sbb
leave
jp
inc
insb
xor
lea
cmp
push
or
sbb
ret
push
mov
mov
shrl
push
rorb
jb
ror
mov
add
js
and
push
jbe
mov
dec
call
mov
xchg
sbb
pop
mov
sbb
ret
aaa
rolb
lea
inc
test
and
rcll
repnz
in
cmc
sahf
adc
dec
pop
movsb
jp
jb
or
shll
push
push
cmpsb
adc
push
dec
push
inc
mov
pop
sti
mov
into
mov
fildl
push
add
jo
lahf
push
cmp
aam
int
insb
mov
ret
pop
enter
push
push
das
roll
xor
inc
loopne
sbb
ret
stos
dec
jb
enter
subl
in
sub
sbb
in
push
or
xor
clc
dec
cmp
rol
lcall
lret
rorb
push
or
sbb
mov
jb
mov
sbb
sarb
loopne
enter
mov
cld
loop
xchg
sahf
add
mov
cmp
movhps
xchg
enter
add
sarb
mov
ds
inc
out
adc
or
in
mov
cmp
cmp
dec
add
push
jmp
sbb
clc
shl
into
xchg
ljmp
inc
mov
jge
adc
icebp
ljmp
xchg
inc
mov
mov
outsb
gs
jl
call
addr16
mov
add
and
jmp
sbb
int3
sahf
dec
das
pop
repnz
xor
mov
jg
rorb
push
push
add
and
jo
movl
push
dec
xor
ljmp
push
out
or
adc
pop
push
call
out
movb
mov
xchg
jmp
rcrb
es
sub
flds
adc
insb
leave
loope
jns
add
imul
stos
in
psubb
push
mov
push
adc
imul
repnz
sub
enter
sbb
fs
and
outsb
daa
pusha
push
jge
xchg
add
mov
push
pop
clc
jl
mov
push
sahf
mov
cmpsb
rcll
adc
sbb
mov
add
sbb
or
xor
dec
pushf
pop
fs
out
cmpsb
push
push
gs
mov
push
mov
ret
out
or
adc
outsb
adc
sahf
fs
mov
or
subb
ret
mov
stc
pop
sahf
adc
or
pop
movsb
clc
adc
xchg
testb
js
fidivrl
jmp
roll
sub
or
or
lret
dec
xchg
in
xor
mov
leave
dec
cmp
xor
bt
lods
jb
clc
icebp
roll
mov
xchg
fstp
xchg
mov
xor
xor
or
mov
push
loop
mov
mov
pop
xor
inc
or
stc
rolb
sbb
mov
out
loop
addl
mov
cmpsb
sbb
inc
je
cmpsb
movntps
add
lret
mov
movsl
test
mov
push
and
push
ret
or
xchg
rorl
jb
stc
dec
xchg
ja
or
dec
imul
into
adc
adc
push
mov
cmp
ret
je
cs
push
pop
ret
or
lret
addl
mov
and
dec
mov
divb
sbb
mov
dec
sub
xor
xchg
into
bound
adc
shlb
inc
jge
loope
mulb
inc
pop
mov
sbb
ret
sbb
xor
push
cmc
inc
and
push
mov
hlt
lods
repnz
sub
call
in
shlb
sarb
je
lock
or
mov
ss
sar
sbb
hlt
cmpsl
rolb
fsubrp
imul
push
push
push
clc
sbbl
lret
push
push
jmp
rolb
sbb
fsubs
fs
or
ds
ficompl
enter
xchg
push
xchg
scas
stc
pop
lret
sbb
movb
jbe
mov
xor
fisubrs
rol
xor
sbb
sub
inc
gs
jae
pop
rclb
adc
loopne
push
sbb
mov
dec
out
cltd
in
inc
sub
nop
into
cmp
shlb
mov
repz
fimull
ret
inc
jbe
push
out
sbb
inc
or
xchg
sub
dec
mov
cli
push
cld
arpl
into
rclb
or
cmp
into
mov
mov
jmp
sbb
push
pusha
sbb
call
loopne
imull
adc
mov
rclb
pushf
cld
xchg
sahf
clc
data16
jne
cmpsb
or
sbb
das
gs
push
pop
push
pop
push
es
and
jo
out
pushf
add
sahf
push
dec
rcr
clc
adc
popa
mov
andb
mov
loopne
jp
ljmp
jl
add
mov
test
push
xchg
leave
sbb
adc
aam
ret
xchg
pop
or
xchg
insb
and
dec
out
adc
sbb
out
jno
xor
popa
push
into
adc
idivb
popf
push
lea
sub
add
pop
ret
or
and
mov
inc
rcll
dec
xor
push
adc
aad
daa
mov
adc
out
stos
test
ret
xchg
xor
enter
aas
test
inc
and
data16
sub
mov
and
or
mov
adc
add
add
data16
fdivrl
push
pop
shrb
cmp
xchg
adc
mov
adc
push
mov
or
dec
dec
mov
and
cmp
popa
mov
into
adc
pop
push
or
lock
imul
pop
pop
adc
cmp
push
fwait
jmp
dec
sub
adc
push
pop
or
cwtl
mov
or
flds
aam
cli
adc
push
push
push
push
inc
add
shrl
bound
dec
push
or
cmp
push
ds
or
ljmp
xor
adc
fs
cmpsl
sbb
mov
mov
rcl
inc
dec
xor
cmpsb
shlb
test
push
sbb
int
fwait
mov
sbb
dec
lods
or
and
xchg
xor
pop
repnz
or
mov
sbb
cmp
mov
and
inc
adc
repnz
iret
icebp
add
jmp
outsl
or
add
hlt
mov
clc
pop
lret
mov
xchg
or
cmp
sub
or
insw
adcb
or
cmp
cmp
pusha
out
jle
nop
push
dec
add
mov
sbb
xor
cmp
jo
loope
xor
enter
push
jmp
es
or
push
push
push
add
or
and
push
inc
or
mov
xchg
cmp
movsl
or
das
cmpl
add
sbb
enter
into
inc
xchg
push
jae
sbb
sbb
add
jns
mov
enter
mov
push
push
orl
adcb
adc
jl
js
xor
enter
mov
or
es
in
out
scas
or
sbb
andb
aas
push
mov
mov
loop
sbb
sub
sub
cmc
aaa
addl
rcl
push
xor
push
sbb
sbbb
test
jbe
rcrb
or
xor
and
add
mov
ret
popa
add
add
push
jo
and
stos
adc
lea
jl
adc
add
cli
or
jno
and
js
xor
out
ljmp
rolb
add
rcll
pop
fwait
repnz
push
pop
cmp
shl
inc
pusha
mov
not
dec
insb
fsubrs
adc
jmp
add
xor
cmp
cmpsl
dec
clc
out
push
loop
ljmp
mov
jge
arpl
cmp
mov
or
add
js
push
push
add
dec
push
and
xor
inc
xchg
xor
xorb
mov
push
arpl
xchg
in
push
into
xchg
push
mov
sbb
popa
push
xlat
shll
sbb
sub
fsubr
or
mov
xor
push
jae
pop
insb
or
add
cmp
rolb
punpckhdq
in
adc
loope
nop
mov
push
sub
or
add
add
loope
and
pop
into
pop
dec
pop
jl
mov
inc
fs
cwtl
fidivrs
lock
pop
sbb
lods
sbb
sub
outsl
jae
add
push
jnp
daa
sub
adc
cld
jmp
add
xchg
push
sbb
xchg
pop
iret
inc
pop
adc
mov
ljmp
jg
sbbb
cmpsb
ret
cmc
test
daa
adc
inc
xchg
sbb
out
cli
enter
imul
pop
in
and
push
sbb
lock
setp
mov
into
xor
jbe
jge,pn
lods
cmp
loopne
pusha
mov
push
call
in
xor
adc
mov
ret
push
movsl
and
push
inc
add
xchg
sbb
add
push
mov
adc
shll
xchg
nop
add
data16
out
mov
pop
and
sbb
xor
pop
mov
pusha
rorl
or
jo
icebp
jmp
es
mov
mov
popf
divb
adc
add
ret
or
shl
ficoms
cmp
jno
cwtl
shrl
lock
and
add
iret
jl
push
sbb
mov
sbbl
loop
add
stc
jb
movsb
pop
jo
dec
add
mov
add
in
mov
cs
fwait
call
pop
test
orl
inc
shll
push
jg
les
jmp
cmp
xor
pop
mov
push
and
pop
sub
stos
inc
imul
jle
adc
nop
and
shr
mov
pusha
mov
add
test
jmp
adc
push
pusha
test
jo
negl
lods
pop
and
or
inc
popl
es
mov
fsubrp
dec
mov
fiadds
mov
adc
rclb
inc
addl
or
into
pop
adc
mov
mov
jo
lods
push
or
ljmp
ror
mov
sbb
dec
lret
xor
sub
and
ljmp
jo
in
jnp
aas
dec
dec
sbb
push
inc
push
out
or
sbb
add
clc
and
jo
adc
pop
jl
pop
aad
inc
xchg
cmp
ss
lret
loopne
add
call
cmpb
cmpsb
mov
push
inc
push
jg
inc
iret
cwtl
enter
hlt
sbb
mov
fcoml
add
call
pusha
or
arpl
push
mov
je
sub
dec
data16
dec
or
icebp
cmc
add
xchg
push
lods
idivb
subl
mov
ss
cld
loopne,pn
bound
ljmp
add
shl
rclb
xor
mov
roll
add
pushf
dec
or
stos
jb
and
sbb
and
add
xor
or
push
ret
adc
std
ljmp
mov
stos
inc
pop
jo
sub
test
mov
outsb
in
sbb
or
inc
xor
in
push
xor
in
lock
popa
rcll
cmp
aas
pop
adc
mov
call
andl
or
rorl
adc
pop
sub
je
mov
and
sbb
add
mov
dec
pusha
sub
pop
shr
add
mov
retw
enter
pop
jl
add
adc
cli
mov
xor
je
pop
test
sbb
ret
push
xchg
inc
filds
jecxz
pop
scas
sub
int3
inc
push
mov
and
jp
jmp
add
rorb
clc
cmp
add
stos
into
subb
xorl
bound
shrl
sarb
cs
int3
cmp
push
pop
enter
test
inc
stos
adc
sbb
and
mov
cmp
int
das
popa
movsb
pop
cmc
inc
ficomps
arpl
fidivl
or
dec
rclb
mov
inc
sar
or
push
adc
xchg
adc
xor
and
xor
sbb
dec
pop
and
add
and
add
sub
out
in
xor
inc
mov
enter
sbb
push
pop
pop
inc
loopne
lods
or
push
inc
mov
sbbb
jge
push
into
addr16
bound
roll
pop
push
inc
and
adc
dec
sbb
fld
popa
xor
inc
adc
loop
cmp
mov
out
push
push
sbb
lock
in
or
dec
sbb
not
or
adc
jo
cmp
shlb
mov
sub
adc
inc
shl
mov
daa
push
les
sbb
jne
bound
pusha
sub
loop
xchg
mov
sarl
imul
into
out
pushf
fs
sbb
add
sbb
fdivr
cli
dec
dec
pop
pop
xchg
sbb
mov
push
gs
sbb
inc
decb
add
adc
icebp
xor
lret
or
mov
loopne
jb
outsb
push
adc
xor
ret
jl
or
test
enter
into
mov
shrl
sbb
pushf
mov
pop
jbe
ret
repz
test
cwtl
push
in
lods
jmp
rolb
push
shrb
add
cltd
mov
xchg
add
outsb
out
cmp
and
loope
push
movsl
pop
xor
push
mov
jo
and
xor
or
les
adc
push
mov
inc
push
jo
addb
mov
or
add
push
xlat
and
es
test
sbb
dec
jne
jnp
scas
sbb
divb
mov
sub
cmp
adc
adc
add
imul
mov
jo
fsubs
adc
inc
pop
mov
movsl
les
cmpsb
sub
push
adc
loope
pop
or
es
test
push
mov
loope
addr16
or
push
or
mov
mov
mov
cmp
adc
ret
push
mov
or
outsb
or
sbb
adc
mov
inc
aam
outsb
cmp
sbb
pop
push
adc
inc
rclb
pop
mov
popa
sbb
sbb
mov
push
leave
ret
lods
push
sbb
rorl
mov
adc
push
stos
sbb
sbb
add
leave
sbbl
adc
sbb
jp
jb
inc
inc
jo
rcll
test
adc
push
cmpb
scas
scas
push
or
add
addr16
stos
notl
xchg
sbb
adc
or
sub
push
cmpsb
or
shrb
movsl
pop
add
xor
and
test
les
pop
sbb
push
incb
mov
or
lods
add
call
adc
lret
dec
xor
sbb
int3
push
pop
sbb
adcb
sbb
ficompl
xchg
rorl
adc
les
out
fsubl
adc
jo
leave
sub
out
adc
xor
xor
loope
test
movsb
mov
and
adc
xchg
jl
mov
ret
ret
nop
pop
lock
int3
add
mov
dec
mov
test
push
in
sub
stos
add
aam
xchg
loope
mov
or
or
jb
adc
aaa
sbb
push
jp
shlb
mov
push
lock
adc
jmp
jo
mov
pushf
lcall
out
add
push
jno
shrl
mov
xchg
pop
stos
push
add
xor
add
rorl
enter
pop
mov
mov
shr
pop
or
mov
jae
scas
xlat
jae
mov
push
fs
xchg
adc
into
jg
mov
addl
shl
sub
push
and
inc
sbb
mov
lods
ds
enter
sbb
and
xchg
jbe
mov
sarl
inc
push
lret
mov
js
sub
xlat
xchg
ret
mov
push
inc
cwtl
add
sbb
add
sbb
in
inc
push
push
repnz
test
pop
cmpsb
adc
cmc
clc
sbbb
loopne
pop
lods
sub
cmp
add
loopne
ret
push
arpl
loop
shr
js
les
dec
inc
sub
loope
decb
push
mov
pop
cmpl
pusha
les
lea
mov
add
mov
into
movsl
xor
outsb
int3
push
xor
jno
ror
faddl
cmp
jbe
rcr
inc
push
or
jmp
mov
push
sahf
mov
sbb
adc
lock
xchg
test
or
dec
testb
push
in
jo
or
inc
sub
js,pn
adcb
mov
add
mov
mov
or
cmp
dec
loopne
sbbb
push
fmull
inc
mov
fs
dec
mov
cmp
mov
fiadds
jmp
test
mov
push
data16
test
mov
rcrl
jnp
sub
sub
shll
sbb
xor
sub
enter
loopne
ret
sbb
or
ljmp
nop
sbb
bsf
enter
lock
enter
outsl
cmp
add
mov
js
add
nop
loop
inc
add
insb
push
stos
push
jbe
sar
xchg
push
or
pop
lret
cmc
movsb
push
movsb
sahf
sub
sub
push
divl
mov
adc
cmpl
push
fmuls
fadd
pop
pop
pushf
push
negb
scas
es
push
pop
sub
shll
and
or
or
sbbb
pop
cmp
xor
and
or
jmp
imul
add
or
fdivr
or
test
test
pop
ret
push
inc
ja
sbb
xchg
xchg
mov
jbe
ret
roll
std
adc
popa
es
or
adc
ret
push
xchg
or
pop
fiadds
pop
xlat
add
enter
push
jo
push
mov
dec
push
jb
adc
push
lea
jle
sub
inc
and
jno
ret
xchg
adc
push
out
push
or
sub
xor
rclb
lret
cmp
das
hlt
ret
or
out
enter
test
adc
add
xchg
and
add
enter
mov
ds
inc
movsb
jl
call
mov
adc
into
push
pop
aad
ret
or
adc
pop
mov
or
push
or
push
xchg
pushf
stc
mov
sub
dec
push
sub
dec
mov
movlhps
dec
cs
rcr
adc
daa
dec
sub
push
es
push
push
ret
mov
sub
add
sbb
xor
dec
mov
adc
movsl
loopne
stc
shr
xor
test
inc
cmp
cli
mov
inc
movsb
xchg
cmpsb
dec
add
mov
popa
andl
push
arpl
add
sbb
cmc
je
add
daa
xchg
cmpb
add
sbb
adc
aas
ljmp
sub
dec
cmp
inc
lock
pop
jl
or
jae
out
lea
ret
xchg
shlb
adc
shlb
scas
push
fstl
mov
shl
enter
sub
add
inc
addb
sub
inc
pop
or
push
ljmp
inc
adc
sbb
test
push
xchg
mov
lret
stc
inc
sbb
push
cmpsb
or
sbb
das
or
sbb
imul
fsts
imul
push
inc
fcomip
ret
adc
add
repnz
data16
ljmp
stos
xor
sbb
mov
cs
es
cmp
rolb
loopne
pop
fidivrs
mov
and
jecxz
sbbl
mov
int
pop
mov
jb
add
xor
clc
xchg
iret
mulb
xor
or
nop
popf
add
or
xor
mov
dec
inc
cmp
pop
js
cmpsb
adc
add
and
inc
popf
dec
jg
imulb
rcl
mov
mov
scas
add
in
sbb
pop
inc
clc
lret
xchg
pop
dec
sub
lock
andl
pop
nop
lock
test
daa
or
scas
adc
or
pop
iret
xchg
cli
add
sub
call
mov
mov
or
dec
aas
or
stos
and
mov
sub
mov
sbb
and
hlt
adc
pop
dec
sbb
shlb
ret
pop
insb
pop
clc
imul
inc
mov
shr
mov
or
movsb
lret
push
ffreep
sbbb
xor
jo
cmpsl
pushf
cli
add
mov
test
cmp
mov
xor
xchg
mov
mov
out
adc
cmpl
shl
ds
sbb
mov
sbb
xor
push
loop
mov
cmp
pop
pop
sub
jg
lock
imul
sub
lods
push
jge
push
mov
adc
cmp
mov
adc
gs
jmp
xchg
add
push
push
pop
rorb
mov
stos
push
in
push
pop
dec
cwtl
jnp
loope
gs
mov
xlat
sub
divl
dec
add
cmp
cmpsb
clc
sbb
push
out
sub
mov
orl
sbb
pushf
mov
push
push
inc
jl
sbb
loopne
or
cltd
shl
ljmp
inc
cli
add
or
sub
mov
cmp
shlb
jbe
psubd
aad
lahf
push
add
ror
and
sbb
add
mov
test
mov
mov
push
sub
pop
sbb
and
bound
pushf
icebp
shlb
lock
notb
fwait
shlb
mov
or
adc
pushaw
insb
xor
pushf
add
test
test
rcrb
adc
or
sbb
inc
popa
pop
lds
push
mov
les
jmp
mov
js
xchg
orb
shrl
mov
gs
stos
push
hlt
negb
adc
add
or
pushf
mov
add
mov
ffreep
jno
daa
popf
jmp
js
ljmp
es
sbb
push
mov
adcl
mov
jp
sub
in
rcll
push
sub
fldenv
dec
pushf
testb
ret
das
add
add
push
xor
push
sbb
in
stc
test
fsubrl
add
sbb
loopne
xchg
repnz
mov
je
minps
dec
sbb
or
jno
mov
cltd
call
lock
imul
adc
and
jb
roll
or
push
push
sbb
push
or
push
dec
mov
repnz
push
les
imul
jl
cs
cli
pop
lods
or
pusha
dec
cmp
mov
jbe
xor
add
inc
fadds
mov
and
outsb
cmp
sbb
sbb
shlb
adc
or
adc
pop
sarl
add
push
lods
popf
cli
adc
pop
or
inc
pop
inc
cltd
hlt
loop
inc
movsb
repnz
test
mov
mov
sbb
add
pop
movb
sbb
ss
or
push
clc
inc
lcall
cmp
add
addr16
clc
pop
mov
mov
imul
cmp
xchg
sbb
xchg
add
cmp
test
pushf
jbe
or
or
xchg
push
test
enter
jp
add
adc
add
call
sub
add
or
push
shlb
sahf
subb
gs
nop
mov
faddl
xchg
addl
subb
les
shll
icebp
movb
in
mov
fs
rol
loopne
mov
scas
jmp
leave
jp
mov
xorb
push
jmp
inc
js
cmc
mov
inc
sub
sahf
ljmp
fcmovbe
lret
push
xchg
loopne
xor
sbb
mov
sti
imul
adc
loopne
xor
repz
mov
mov
fsubrl
add
cs
xchg
sar
sbb
and
add
shll
mov
out
sar
push
loop
add
jp
lock
movb
push
iret
rclb
gs
ret
cmp
in
add
or
ja
sbb
mov
xor
ljmp
aam
dec
addr16
mov
sbb
cmpps
xchg
mov
outsl
and
or
pop
add
or
push
rolb
sbb
xchg
xchg
adc
mov
adcl
adc
or
fdivrl
xor
jge
and
pop
in
adc
aad
sbb
mov
or
int3
in
xchg
subl
dec
adc
in
push
lds
push
xor
or
movsl
xchg
jl
mov
bound
xchg
mov
xchg
insb
add
and
stc
push
lock
sbbl
mov
ljmp
iret
mov
mov
add
cli
mov
or
sbb
mov
mov
mov
pushf
mov
fidivs
sub
sub
pop
adc
adc
decb
sarl
clc
test
and
js
lret
mov
rcrb
lock
jne
ja
mov
insl
test
shlb
stos
dec
das
fdivl
loop
and
mov
cmp
lcall
je
adc
or
adc
mov
jecxz
and
push
sub
xor
fcomp
call
pop
cmp
mov
movsb
sahf
popf
add
sub
xchg
leave
push
push
add
adc
lock
dec
mov
ret
jo
cs
mov
mov
push
push
mov
mov
test
add
addr16
jmp
pop
pop
movsl
popa
dec
add
jmp
clc
add
sbb
or
and
mov
sbb
ret
sbb
mov
push
test
std
mov
es
call
push
add
in
and
fiadds
bound
loopne
neg
or
adc
xor
notb
inc
or
add
push
int
mov
out
mov
outsl
or
out
pop
dec
mov
or
pop
fmuls
push
mov
fwait
mov
stos
lods
push
mov
inc
inc
or
xchg
mov
cwtl
sbb
ds
ret
inc
adc
subl
inc
subb
gs
rcl
andb
in
movsb
mov
dec
jmp
add
jl
icebp
mov
mov
add
mov
add
xchg
and
inc
test
test
jle
cs
push
sbb
xor
popa
inc
xor
add
or
adc
test
mov
testb
cmp
test
das
add
cmp
ret
dec
adc
xchg
mov
or
mov
mov
out
or
popa
or
cmp
dec
lds
add
int
adc
sbb
jns
ffreep
inc
call
test
mov
add
mov
pop
pop
adc
fdivrp
push
leave
jp
push
sbb
mov
push
jmp
leave
push
mov
add
aad
mov
or
adc
jp
cli
bswap
jne
je
je
sbb
xchg
mov
xchg
in
sahf
loopne
enter
sti
ret
mov
in
pusha
insb
icebp
add
and
dec
daa
leave
pop
nop
dec
pop
push
out
fisubs
into
xchg
cmp
rolb
scas
push
vmread
xor
adc
rcrb
aam
sub
orb
xorl
adc
ljmp
out
leave
sbb
cmpsb
xchg
sarl
add
daa
push
push
and
in
and
mov
push
push
adcl
cmp
xor
loopne
sbb
in
dec
or
inc
jno
leave
add
and
jo
fmuls
xor
sbb
fstl
sahf
xchg
or
popa
into
imul
mov
enter
flds
add
mov
sbbb
ror
jnp
sbb
lods
xchg
pop
mov
je
pop
sbb
and
orb
push
mov
lods
ss
or
mov
sub
outsb
sub
fsubrs
sbb
enter
xor
mov
add
adcl
hlt
mov
popa
jo
mov
sbb
enter
loopne
stos
loopne
fisubs
sub
cmpb
adc
sub
push
push
push
ffree
add
sbbb
mov
push
testb
dec
aad
fsubs
and
or
int3
test
jl
pop
and
imul
jecxz
push
pop
sbb
or
mov
or
adc
inc
push
sbb
sub
or
dec
add
add
shll
pop
inc
rcrb
sbb
cmpsb
add
inc
pop
sbb
incl
sbb
cld
les
push
or
or
mov
aam
sbb
neg
test
pop
adc
sub
push
or
mov
sbb
loopne
sbb
push
scas
add
sbb
ljmp
add
pusha
mov
and
repnz
mov
xchg
stc
shrl
pop
lds
or
test
lods
out
pushf
cmpsb
adc
jno
push
or
mov
mov
adc
inc
rclb
inc
lods
pop
test
in
shrb
icebp
cmp
ljmp
stos
or
repnz
mov
out
inc
out
shrb
sub
jbe
dec
mov
push
inc
mov
in
jo
cmp
stc
cmp
enter
outsb
clc
mov
add
add
mov
ja
add
add
stc
add
xchg
idivb
or
dec
pop
pop
adc
mov
add
lock
lahf
shlb
inc
rclb
mov
aam
xchg
sub
pop
imul
sbb
add
pop
fcoms
add
shl
int3
push
add
test
add
bound
adcb
ret
jo
xchg
dec
repnz
jb
addl
mov
adc
pop
dec
test
lds
dec
cmp
and
imul
adc
or
lds
inc
mov
or
ret
cmp
or
sub
test
loopne
mov
push
pop
push
adc
loop
hlt
xor
or
pop
pusha
or
inc
jb
push
aad
add
insl
or
dec
cs
add
mov
push
jecxz
cmp
fmull
in
xor
inc
push
fdivl
test
push
mov
or
xchg
cld
dec
loop
mov
pop
add
adc
or
into
pop
sub
stc
int3
xor
xchg
jle
inc
mov
dec
imul
das
sub
pusha
test
or
add
test
sbb
jp
cmpsb
les
push
es
sub
xchg
mov
mov
mull
enter
cmp
fs
in
dec
inc
les
sbb
cmp
movsl
xor
fsubl
pop
js
or
mov
adc
andps
fs
testb
mov
cwtl
add
add
pop
cmp
sbb
push
sbb
inc
push
xchg
popa
ret
je
inc
stc
sbb
incb
gs
lret
inc
and
aad
lahf
call
push
aas
push
jno
dec
mov
xchg
pop
sbb
jmp
pusha
dec
mov
push
mov
xor
add
and
mov
sub
inc
sbb
das
inc
or
adc
fimuls
test
rclb
push
push
mov
lods
sub
mov
fadd
jo
push
add
loope
cs
or
inc
sub
mov
call
and
leave
mov
xchg
test
add
mov
mov
adc
aaa
xor
push
clc
adc
push
dec
or
in
and
xchg
jb
mov
in
sarb
or
sub
icebp
mov
pop
into
and
je
mov
fdivl
adc
cwtl
rcrl
sub
rcl
adc
push
int3
test
push
pop
shlb
nopl
adc
cs
movsb
addr16
mov
adc
add
xchg
in
inc
orb
nop
data16
mov
and
mov
rol
test
dec
jp
call
add
movb
adc
outsl
loop
sahf
fcoms
call
cld
sbb
jge
mov
adc
xchg
jo
aaa
out
sbb
dec
stos
cmp
icebp
test
test
stos
or
call
adc
aam
sarb
adc
and
xlat
mov
add
subb
lock
pop
bound
and
add
pop
jb
cmp
mov
adc
ret
pop
cwtl
pop
or
push
movsb
ffreep
dec
sysenter
pushf
mov
pop
sub
ficoml
subb
in
xor
mov
lods
xor
jae
pusha
nop
inc
xlat
enter
or
insl
and
xor
pop
push
or
lods
sub
je
and
movsb
adc
insl
xor
push
push
ljmp
repnz
aaa
push
push
in
mov
push
and
popa
mov
adc
imul
mov
imul
mov
or
cmp
add
inc
stos
repnz
xor
pop
cmp
out
push
pop
test
ljmp
ret
xchg
sbb
out
fsubrs
and
jo
add
inc
test
push
adc
rcl
lock
pop
sbb
pop
filds
sbb
shlb
insb
or
add
shrl
cmc
aad
add
or
out
ret
pavgb
add
inc
decb
sbb
inc
test
push
and
stc
bnd
push
cmpsl
test
aam
adc
test
call
unpckhps
jp
shlb
adc
lcall
test
mov
subl
pop
push
sbb
sbb
xor
mov
sbb
adcl
cmp
notl
dec
addb
pusha
cmp
add
xchg
inc
pop
loope
inc
inc
sbb
je
rol
adc
push
or
idivb
adc
mov
lea
xchg
adc
dec
cmp
pop
lods
mov
clc
aas
ret
in
mov
les
mov
test
nop
inc
sar
mov
cmp
mov
leave
xchg
push
push
xor
mov
jae
out
pop
add
lret
in
xor
jmp
sbb
loopne
push
rcll
mov
pop
push
mov
push
mov
cld
xchg
cmp
data16
leave
gs
and
push
inc
sub
mov
adc
addl
xchg
fsub
test
adcb
nop
xchg
push
push
mov
xchg
pop
fadds
jl
push
mul
adc
jne
jb
pop
loope
pop
or
dec
sub
lcall
or
mov
cmc
subb
add
into
jle
jecxz
sbb
fs
push
repz
adc
mov
xchg
xchg
sub
rolb
cmp
addl
sub
dec
add
push
xchg
mov
shr
add
addl
xchg
test
sbb
int3
xor
push
mov
mov
dec
xor
sbb
wbinvd
das
lret
dec
sbb
mov
scas
shrl
mov
mov
push
cmp
fdivl
clc
jl
or
sbb
pop
outsb
mov
add
clc
lea
pop
shl
arpl
sbb
movsl
pushf
je
outsb
lret
inc
dec
les
lret
cli
mov
push
enter
lds
cmp
push
sbb
inc
xchg
ret
dec
dec
mov
in
sbb
dec
inc
adc
test
dec
js
lret
les
inc
lods
rclb
pop
lcall
xchg
push
sbb
mov
or
or
cmpsl
mov
addr16
and
orb
xor
lods
leave
into
hlt
adcb
add
add
cmp
mov
in
ret
pop
adc
or
out
push
mov
fwait
cmp
push
mov
mov
push
nop
test
mov
clc
mov
jecxz
jmp
sub
shll
mov
push
inc
mov
xor
pop
notb
aaa
and
mov
repz
ficomps
testb
sbb
xchg
lret
push
dec
jne
js
icebp
push
dec
in
or
adc
sub
adc
xchg
fidivl
movsb
cmpsl
sarb
sub
xchg
add
xchg
sbb
adc
inc
add
test
sbb
or
and
mov
jb
lret
add
into
mov
add
sub
arpl
loope
inc
pop
subb
subb
xchg
inc
jp
icebp
call
clc
rcll
jl
enter
decb
sub
into
les
shlb
adc
lods
sbb
cli
test
push
dec
scas
in
into
xchg
sbb
leave
xor
sbb
mov
adc
jle
xor
xorb
aas
or
inc
test
loope
frstor
cli
adc
test
mov
test
inc
je
cld
jmp
mov
mov
fidivs
inc
push
hlt
adc
fdivr
ljmp
sbbl
pop
leave
sbb
jb
or
sbbl
and
loop
push
test
jno
test
adc
add
inc
pop
xor
pop
add
push
mov
xchg
dec
aas
cmp
mov
mov
in
inc
sbb
xchg
cld
int3
push
push
inc
call
cld
and
jo
loop
sub
sbb
sub
lods
fmulp
jns
jp
scas
mov
sbb
test
pop
adc
push
xlat
add
adc
mov
xchg
andl
jmp
xchg
pop
push
and
test
mov
cmp
icebp
mov
and
sahf
mov
dec
jne
jl
rclb
push
push
stos
add
sbb
dec
fmul
push
lods
xor
out
push
push
cli
pop
icebp
loopne
lods
leave
mov
ret
or
push
cmp
lock
sbb
pop
push
movsl
xchg
lock
lods
lret
xchg
jg
insb
jle
pop
stos
xor
and
fldl2e
mov
add
repz
leave
and
scas
mov
sbb
mov
outsb
add
ret
mov
mov
jmp
adc
loope
xor
jmp
call
jne
or
adc
jp
mov
jecxz
insb
and
clc
push
push
cmc
test
push
insb
pop
mov
mov
loopne
sbb
test
xchg
or
lock
mov
adc
outsb
ljmp
xchg
and
pop
or
loope
addr16
test
mov
stos
pop
mov
or
add
xor
and
sub
test
bound
cld
adc
adc
popl
orb
jno
xchg
xchg
and
imul
cli
push
xor
in
add
add
les
loopne
dec
movsl
sbb
mov
or
xchg
insb
and
pop
cltd
adc
xchg
pop
sbb
inc
imul
pop
lods
mov
lock
or
js
outsb
sub
or
add
test
rclb
sbb
sbb
and
inc
cmp
in
sahf
add
jp
sub
add
idivb
or
je
or
pop
ret
subb
ljmp
and
add
inc
inc
lods
sub
fnstcw
int3
inc
aas
pusha
add
adc
adc
leave
and
mov
add
lea
push
mov
sub
icebp
test
pusha
push
cmc
mov
dec
fbstp
mov
pop
shll
cli
nop
xor
mov
xchg
mov
sbb
xchg
mov
test
add
and
or
cli
xor
sbb
or
mov
inc
push
stos
popf
mov
into
mov
cmpsl
outsb
fimuls
aaa
js
xor
ret
les
or
jmp
jno
lods
sub
ret
js
inc
cwtl
sbb
pop
movsl
rorb
pushf
sub
fcmovne
or
cwtl
jecxz
call
test
sbb
shrb
add
mov
cs
inc
cmp
outsb
cli
dec
leave
dec
push
call
inc
insb
sub
mov
ret
int3
rorb
lret
xchg
xchg
mov
test
inc
daa
mov
sbb
jo
or
test
pop
lods
in
enter
adc
inc
adc
and
push
aam
push
popf
addr16
jge
and
ss
adc
or
test
xchg
loopne
inc
xchg
mov
mov
adc
push
push
dec
cmp
xchg
test
push
roll
ret
xchg
fcoml
inc
pushf
into
jb
mov
push
and
repnz
sub
mov
xchg
push
clc
les
adc
lods
sub
push
or
mov
or
and
call
addr16
stc
push
ljmp
jnp
das
xor
out
adc
lock
aad
pop
pop
js
mov
nop
cli
aas
js
sbb
or
push
push
adc
enter
xor
push
bound
into
repnz
mov
push
add
or
mov
test
aaa
jo
je
add
mov
mov
ret
pusha
pop
or
pop
jo
mov
clc
push
pop
dec
inc
aam
xchg
pop
sbb
adc
ljmp
setb
pop
ret
or
daa
jmp
iret
shrb
push
dec
jmp
mov
sbb
ror
xchg
mov
push
xor
pop
test
inc
pop
push
int3
push
mov
outsb
stc
pop
inc
pushf
orl
or
idivl
dec
adc
cmpsb
mov
mov
sub
repnz
push
inc
negl
or
movsb
pusha
dec
pushf
or
sub
nop
mov
jmp
add
xchg
and
inc
rclb
sbb
int3
inc
cmp
ret
dec
pop
add
testb
movb
pop
pop
adc
les
or
cmp
popa
dec
mov
call
push
add
stc
mov
ret
add
cld
adc
cli
and
aam
or
add
pop
cmp
and
mov
insl
jae
lahf
andb
cltd
jo
jle
dec
js
add
jbe
sub
or
inc
xor
js
mov
sub
aam
xor
xor
sub
adc
fsubr
jo
andb
or
aam
imul
pop
xchg
and
fs
dec
add
sbb
adc
add
loopne
and
mov
sbb
add
sbb
add
xor
test
sbb
jo
jo
push
or
mov
subb
js
aaa
and
cmp
and
rorl
in
add
add
jb
xchg
ss
adcl
loope
aad
push
imul
rol
inc
xchg
test
push
add
or
mov
mulb
pusha
popl
jecxz
lock
cmp
push
shlb
add
rcl
push
nop
jle
adc
test
jl
sbb
or
adc
sbb
lods
out
and
pop
iret
nop
adcb
mov
je
inc
dec
test
xchg
sbb
shrb
dec
das
or
mov
push
stos
rcrb
sub
movsb
push
mov
loop
aam
mov
mov
mov
cmp
rcrl
mov
sbb
mov
jle
xor
insl
jo
sbb
push
adcb
cmp
xor
addb
add
inc
in
add
les
inc
or
xchg
push
or
add
mov
or
cltd
inc
out
js
call
andl
cmp
sbb
cmpsb
sbb
sahf
push
fst
into
mov
adc
lods
sbb
add
adc
inc
sbbb
xchg
inc
fbld
ljmp
add
or
or
pop
sub
mov
pop
mov
sub
push
movsb
sub
fs
sbb
loopne
mov
jp
dec
push
mov
add
add
pop
lcall
sbb
xchg
cmp
or
mov
mov
es
mov
pusha
mov
cld
mov
sub
outsb
push
push
movsl
push
js
sbb
clc
cmp
imull
fcompl
dec
test
xchg
and
hlt
scas
js
fs
mov
cmp
sub
xchg
in
add
pop
xor
inc
sbb
or
mov
or
mov
cmp
test
xchg
in
mov
push
negb
mov
adc
jnp
cmpsb
add
xor
pusha
dec
cmp
sub
xor
je
cltd
mov
int3
jp
sbb
sub
sub
andl
adc
jb
neg
lods
punpckhbw
notl
call
or
adc
negl
ljmp
out
pop
js
xchg
mov
push
inc
push
push
pushf
test
cmpsb
call
fmuls
xor
xor
pusha
push
push
add
jae
jns
sbb
and
sbb
or
je
sub
add
adc
cmp
xchg
push
mov
mov
dec
push
and
xchg
cs
add
or
mov
mov
adcl
je
pop
aas
rcll
inc
mov
sahf
push
repz
add
aam
dec
or
xlat
mov
adc
dec
pop
mov
pop
stos
lret
lcall
out
pushf
loope
or
mov
push
loop
dec
jb
stos
loop
xor
inc
loope
push
xchg
mov
sbb
sbb
daa
or
pop
adc
push
rcrb
push
enter
stos
rcrl
or
adc
cmc
pop
in
test
cmp
add
sbb
lock
jl
push
xchg
adc
xchg
rol
push
ror
dec
or
cmpsb
and
mov
pop
loope
icebp
stos
jns
cmp
mov
in
punpckhdq
push
inc
push
mov
mov
shll
int3
cld
je
and
sbb
sbb
pusha
inc
mov
sub
xchg
push
bound
adc
aam
fiadds
mov
cmpsl
sub
or
mov
lahf
cmc
decb
push
movsb
pop
inc
add
inc
movsl
push
pop
stos
ret
or
mov
rcl
les
mov
push
xor
pop
in
sub
add
imul
std
insl
push
movsl
dec
or
divb
icebp
pop
mov
inc
inc
sub
sub
lock
push
mov
lods
push
or
daa
sbb
and
sarl
pop
ja
sbb
xor
jl
daa
sbb
mov
push
arpl
cs
or
mov
cltd
pop
mov
scas
push
push
test
clc
sub
dec
push
push
dec
imul
add
xor
push
ret
or
sti
cmp
je
sarb
push
sbb
pop
sbb
adc
lock
in
ror
cmp
jp
or
clc
shrb
jnp
pop
sbb
rcl
jb
and
sbb
xchg
sub
stos
add
hlt
nop
or
rcl
xchg
in
mov
mov
mov
mov
movsb
lock
and
sbb
lods
or
push
add
adc
push
push
jns
in
sbb
popa
adc
cmp
out
or
jl
nop
sarb
adc
jp
ret
sbbb
xchg
shl
imul
add
xchg
jo
add
push
jg
sub
pop
mov
sbb
hlt
xchg
stos
sbb
subl
bound
out
daa
mov
pop
sarb
jbe
aas
pusha
or
xchg
push
push
sbb
add
lcall
xchg
orb
fwait
dec
stc
push
mov
std
adc
dec
jmp
push
rol
push
fistl
orl
hlt
adc
ret
jno
in
sbb
les
pop
or
push
gs
sub
dec
and
and
push
mov
cmp
adc
or
push
scas
mov
out
je
icebp
icebp
xor
out
ljmp
rcl
adc
push
nop
adc
ror
imul
inc
and
fs
cmp
or
fisttpl
sub
sbbl
sbb
cmp
sbb
jge
push
mov
jl
push
adc
xor
sarb
mov
imul
inc
inc
in
or
les
jmp
lods
and
out
push
cli
jp
mov
pop
jl
push
loop
jge
sbb
and
pop
inc
mov
pop
inc
push
mov
loopne
cmp
sbb
mov
loopne
sbb
hlt
ret
push
mov
imull
cmp
push
daa
pop
or
xor
movsl
or
push
xchg
rclb
repnz
sbb
sti
cs
or
ljmp
cmc
ret
add
shrl
push
jb
add
add
and
into
pop
test
and
in
jp
and
out
or
mov
sub
shl
mov
ss
xchg
scas
adc
inc
movb
movsl
xchg
sbb
add
cmp
push
adc
data16
xor
jmp
das
sbb
icebp
jb
icebp
jno
push
xlat
nop
sub
rcrb
inc
or
imul
adc
cmovnp
stc
mov
call
pusha
jno
dec
ret
repz
loopne
in
outsb
into
mov
cmp
imul
pushf
mov
add
mov
or
push
movsb
rclb
gs
xor
loopne
lcall
leave
xchg
or
jge
push
ljmp
or
mov
aam
cli
enter
and
movsl
and
les
arpl
mul
xchg
push
dec
dec
push
jl
inc
fidivrs
pop
popa
sub
push
mov
pop
aaa
jne
addb
arpl
sub
pop
rcrl
les
mov
rorl
call
adc
daa
xchg
mov
nop
movb
pop
sbb
in
push
dec
pop
or
xchg
mov
cltd
lods
cmp
xor
cwtl
andb
cmp
pop
or
jmp
inc
xor
push
loop
or
shr
add
roll
fadd
push
pop
jmp
mov
sbb
dec
js
testb
in
jne
cmp
pop
push
popf
movsb
aam
iret
mov
xchg
shll
leave
push
or
repz
js
shl
int
jne
xchg
sub
jb
sub
push
leave
mov
mov
xchg
mov
pop
and
pop
mov
ficoms
invd
mov
push
jno
jp
subb
into
xchg
inc
addb
js
aam
popa
int3
test
int3
adc
sahf
sub
xor
add
sbb
lods
test
and
mov
dec
lahf
pop
sbb
mov
mov
mov
cwtl
cmp
push
add
add
lock
movsl
cmpsl
xor
dec
loopne
dec
adc
lret
inc
dec
xlat
fsubrs
inc
inc
adc
icebp
push
jecxz
js
push
xchg
add
sub
push
add
jle
jp
test
dec
add
rclb
push
push
jns
lcall
xor
cmp
sbb
mov
ret
mov
test
or
or
scas
add
add
jb
jmp
pop
call
mov
mov
pusha
push
push
scas
sub
repnz
cmp
lret
les
or
dec
fcomps
inc
pop
pop
inc
or
rolb
je
mov
fs
sub
pop
popf
mov
mov
mov
xchg
ds
pop
or
add
or
add
mov
add
mov
jecxz
add
dec
je
cs
sbb
loope
xchg
popa
imul
cmp
and
inc
xorl
loopne
and
add
push
cmp
imul
mov
sbb
movsl
jo
int3
mov
sub
movsl
xchg
push
add
or
pop
add
sub
add
dec
sbb
pop
sub
inc
jmp
mov
push
aad
fisttpll
pop
popa
insb
dec
stc
mov
xchg
push
mov
icebp
les
enter
jne
push
xor
lock
rcrb
mov
cmpl
mov
call
add
push
inc
movsb
mov
adc
shr
les
cmp
jmp
sbb
sbb
jle
xlat
and
pop
imul
push
inc
jmp
out
call
jge
ljmp
add
add
adc
xchg
xchg
mov
ret
push
les
cmp
je
notb
xchg
ret
arpl
add
and
pop
push
repnz
adc
push
pop
rcrb
add
add
mov
lock
jne
fwait
dec
mov
insb
movsl
pop
nop
mov
adc
lcall
js
pusha
rclb
push
ds
inc
adc
aam
test
xchg
push
cmp
sbb
dec
pop
js
dec
stos
adc
popa
test
aad
and
imul
cmpsl
aaa
xchg
xchg
and
ret
rolb
bound
in
or
push
inc
scas
push
cmpsl
pop
es
in
xchg
subb
add
fsubrl
mov
cmp
inc
inc
ret
dec
lea
xchg
adc
mov
xor
loopne
lret
mov
push
cmp
or
xor
xchg
cmp
jl
das
lods
xchg
shlb
lock
push
ret
js
cltd
and
sbb
adc
arpl
add
popa
pop
jo
push
scas
adc
sub
inc
cmc
dec
test
jo
mov
push
cmp
xor
xor
adc
push
movb
sbb
aad
jl
sub
mov
xor
cmpsb
xor
hlt
aad
addr16
outsl
cld
push
rcr
add
jmp
cmp
sub
mov
sbb
insl
push
rorl
and
push
inc
cmp
rclb
es
xor
rclb
lea
inc
push
out
xor
or
sbb
push
mov
mov
or
pusha
mov
or
xor
js
iret
loopne
jbe
sub
adc
mov
iret
add
xchg
adc
lret
sti
js
adc
sub
inc
or
xor
insl
and
or
jne
mov
push
sbb
jbe
fdivs
mov
cli
call
dec
fs
femms
mov
ljmp
mov
add
jp
xor
xchg
lcall
clc
mov
dec
inc
ljmp
dec
subb
test
push
xchg
enter
mov
pop
xchg
mov
jmp
pop
add
xchg
push
stos
push
add
or
add
add
or
js
xchg
inc
fiadds
mov
shll
aaa
lock
es
mov
aam
pusha
and
push
out
je
jnp
sub
daa
dec
test
adc
sbb
ret
lods
pop
pop
mov
and
inc
jo
clc
sub
sbb
lock
repz
adc
movb
clc
movsb
call
les
mov
pop
sbb
mov
stc
adc
cmp
insl
or
lret
push
punpcklwd
jmp
inc
and
cli
mov
loopne
mov
or
adc
sub
gs
aaa
mov
push
loope
xor
push
jp
stos
hlt
test
jne
xchg
xchg
leave
and
sbb
loope
arpl
roll
push
sub
shlb
jg
movsl
jp
adc
imul
stos
inc
pushf
cmp
js
stc
adc
push
and
mov
rolb
mov
dec
inc
repnz
and
pop
adc
or
or
pushf
dec
pop
lods
and
push
sbb
fmuls
mov
out
mov
mov
push
outsb
pop
scas
clc
dec
mov
dec
cmp
scas
insb
insb
test
add
push
or
cltd
ljmp
or
xchg
fiaddl
and
add
xor
xchg
mov
js
hlt
dec
pop
mov
shll
or
aam
add
lret
adcb
xchg
jne
loopne
loopne
pop
cli
or
mov
or
repnz
pop
add
dec
or
aam
and
add
loope
xor
pusha
cmp
sub
pushf
push
mov
ljmp
mov
sbb
arpl
imul
mov
or
test
dec
mov
lret
and
scas
fcoms
cmpsl
aam
adc
addb
jl
adc
sbb
sbb
in
dec
aas
inc
add
out
sbb
mov
lret
mov
push
push
and
movsb
xchg
icebp
in
inc
shr
out
mov
jp
push
or
jle
sarb
pop
add
popa
mul
mov
push
push
and
rcrl
mov
add
cld
dec
sbb
into
insb
ret
shl
push
dec
or
push
pusha
or
cmp
lds
push
fiaddl
loope
sbb
ret
fadds
cli
or
fisttpll
sbb
lret
sahf
lods
or
lods
movb
lahf
decb
loopne
xchg
push
pop
scas
push
xor
or
je
add
bnd
js
insb
or
xor
mov
push
adc
push
push
inc
or
addb
scas
and
cwtl
aam
xchg
sub
insb
shlb
into
add
adc
add
jne
push
push
gs
pushf
or
push
jb
cld
pop
aaa
fisubs
test
cld
or
dec
stos
in
mov
add
add
or
shrb
mov
mov
add
dec
and
cwtl
cmp
cmp
xchg
jl
or
and
shlb
dec
cmp
push
pop
cmp
or
adcb
sub
xchg
jbe
xlat
orb
into
or
call
sarl
sbb
push
fs
into
imul
sub
fsub
lea
add
jno
es
and
mov
xchg
fdiv
mov
imul
pusha
or
fists
inc
inc
adc
adc
ret
dec
sbb
push
xchg
sub
jmp
clc
movsb
daa
add
or
pop
lock
or
clc
std
into
pop
push
daa
cmp
mov
add
sub
push
xchg
xchg
xchg
push
xchg
imul
xor
push
or
loopne
adc
scas
ret
adc
xchg
push
test
enter
or
sbb
jge
mov
je
loop
daa
lock
adcl
int3
or
les
mov
sarb
test
mov
dec
and
xor
pop
mov
stc
or
mov
push
mov
testb
lods
adc
xor
push
mov
mov
dec
int
xor
loope
shrl
jp
shll
add
mov
sbb
bound
dec
mov
adc
mov
sub
bound
scas
cs
dec
repnz
leave
mov
sti
add
xlat
sarb
jle
xchg
js
sbb
mov
cli
hlt
cmp
out
sub
fld1
mov
andl
sub
add
dec
adc
mov
sarl
loopne
adc
rcrl
ja
xchg
dec
jnp
cli
add
les
add
inc
pop
push
cmpsb
ficoml
and
push
jnp
bound
and
insb
pusha
sub
loop
aaa
inc
mov
addr16
xchg
mov
adc
adc
rorb
adc
sbb
and
dec
sbb
inc
adc
movsb
test
xchg
inc
push
mov
mov
inc
test
pop
roll
icebp
mov
in
fisttpl
int3
xor
shl
add
add
cmp
addb
mov
leave
or
sbb
sub
push
mov
adc
adc
xor
stos
push
repnz
pop
ss
movsb
add
jo
aaa
inc
aam
cmc
nop
push
shl
in
adc
xlat
ljmp
daa
xorb
inc
xchg
adc
add
rolb
sbb
xchg
lcall
pushf
jp
aaa
add
mov
xchg
hlt
add
ljmp
dec
jns
or
add
bound
sbb
addb
lsl
mov
sub
fldcw
mov
call
gs
fmul
push
cmp
fisttpl
sbb
jmp
leave
ljmp
push
cwtl
mov
or
loopne
or
dec
or
sub
pop
mov
mov
pop
mov
dec
adc
xor
adc
adcb
mov
or
scas
add
mov
fstl
push
into
pop
es
mov
adc
pop
push
mov
add
sar
push
sbb
scas
pop
mov
or
jp
mov
cmpl
inc
nop
popf
fwait
test
mov
imul
ret
jb
xchg
and
out
push
sub
and
jbe
test
xchg
ds
or
dec
push
xor
es
data16
call
adc
pusha
icebp
jmp
xor
mov
sbb
add
pusha
mov
sbb
xor
add
dec
js
sbb
push
inc
in
sbb
ret
inc
push
addb
and
push
and
push
into
mov
add
cmpl
arpl
sub
xchg
cs
add
lret
or
dec
xor
ret
mov
push
xor
lcall
repz
sbb
dec
sbb
adc
xor
adc
dec
popa
inc
data16
ds
inc
dec
xor
and
dec
sbb
das
adc
je
and
mov
sbb
hlt
add
push
cmp
fwait
sub
or
stos
dec
dec
test
bound
xchg
xor
inc
loop
mov
push
pop
add
pop
and
mov
sub
mov
loop
adc
or
jo
sbb
push
lock
lock
inc
xor
jns
mov
outsb
enter
nop
ret
push
push
mov
or
push
repnz
mov
adc
sub
adc
inc
mov
dec
insb
sbb
je
js
enter
mov
add
dec
xchg
js
test
cmc
fmuls
fiaddl
xor
push
lods
add
data16
subb
addb
or
pop
add
mov
sbb
into
and
adc
in
inc
or
loop
pop
into
cs
test
push
xor
loopne
cs
mov
hlt
loopne
push
adc
shr
push
add
mov
cwtl
in
int3
inc
pusha
dec
mov
add
rorl
add
daa
mov
adc
add
mov
cwtl
stos
sbb
mov
dec
sahf
mov
mov
sub
into
test
and
aam
test
pop
dec
sub
mov
mov
rorl
or
inc
nop
or
dec
stos
out
push
pop
mov
rcrb
test
rolb
adc
fsubs
rcrb
cmp
pop
and
je
adc
inc
push
jecxz
mov
mov
push
test
test
punpcklbw
fimull
subb
lret
lcall
inc
xchg
rorl
or
push
dec
adc
sub
push
adc
cltd
insb
mov
inc
mov
and
push
mov
test
fs
xor
es
or
or
loope
or
aam
sahf
sbb
div
inc
mov
push
shll
or
add
lret
loope
mov
mov
jecxz
pop
outsb
mov
lcall
xor
dec
mov
pop
mov
xchg
sbb
je
fisubrs
mov
inc
sbb
inc
sub
cld
addr16
inc
test
jo
sbb
test
xchg
dec
sbb
rolb
orl
xchg
sub
add
dec
inc
dec
mov
hlt
and
cmp
rolb
sbb
sub
andb
push
ja
mov
or
inc
sbb
mov
adc
push
inc
cli
sub
shlb
add
adc
push
or
xor
call
mov
pop
adc
test
leave
test
cltd
pop
add
enter
or
or
xchg
xor
adc
cmp
test
push
cmp
pop
ficomps
loopne
enter
xchg
test
xchg
push
dec
sahf
stos
in
shl
inc
xchg
ljmp
sarl
and
push
adc
and
xor
mov
sbb
imul
test
add
loope
adc
inc
push
sarl
arpl
fiaddl
or
sbb
xor
and
inc
cmpl
xchg
cli
jp
push
xchg
pusha
lcall
adc
jo
cli
sub
add
test
xor
mov
leave
icebp
inc
jl
xchg
ljmp
aam
ficompl
add
inc
movsl
mov
rolb
ret
cmp
mov
adc
add
test
repnz
pop
push
dec
stos
push
add
test
jmp
dec
mov
or
xor
and
adc
push
push
nop
mov
sub
hlt
movsl
mov
lods
test
push
or
faddl
and
hlt
lods
jmp
push
inc
or
mov
push
and
dec
ret
inc
xlat
and
dec
jne
clc
out
mov
andb
rcrb
push
push
pop
jecxz
pop
cli
sbb
ret
pusha
roll
sbb
xchg
dec
sbb
pop
pop
or
icebp
xor
shll
test
pop
mov
jg
rcl
clc
sbb
sbb
inc
aad
incb
sbbl
movsl
addr16
pop
adc
rorb
xor
ss
movsb
push
xchg
shll
add
dec
pop
or
mov
jp
adc
sbbb
add
and
mov
jns
in
add
jp
adc
call
cmp
mov
lock
dec
fidivrs
push
xchg
cli
mov
cmp
shrb
xor
ret
test
insb
addl
jl
enter
test
add
or
add
sbb
xchg
sub
nop
aam
cmp
push
lea
pop
jo
sub
ret
mov
push
mov
pop
mov
repz
and
repz
mov
push
into
push
call
ret
lock
bound
or
je
xor
lea
xchg
bound
addr16
mov
mov
cmp
jp
fdivl
fistl
sub
cmp
adc
and
add
add
xchg
push
push
js
jo
xchg
xchg
icebp
or
inc
push
aas
push
aaa
sbb
inc
adc
out
sbb
verr
cmpsb
push
pusha
or
jb
adc
adc
test
mov
mov
sub
push
or
testb
xor
jo
enter
pusha
mov
fisttpll
or
insb
or
sbb
imul
add
inc
jo
pop
inc
mov
sbbb
adc
sbb
push
xchg
scas
mov
aam
loope
cmc
jmp
adcl
cwtl
or
xchg
test
add
ret
rcrb
mov
cmp
dec
jl
or
pop
nop
addb
outsb
inc
jmp
lds
mov
adc
jb
bound
jns
push
in
test
dec
clc
or
ror
adcb
clc
mov
push
jge
test
dec
mov
dec
cmp
add
add
push
and
shlb
or
xor
xor
cmpb
lods
mov
push
lock
das
pop
sub
jmp
add
jbe
xchg
sbb
or
add
xchg
cmp
cmp
fists
test
add
into
das
jne
sbb
imull
call
icebp
sub
xchg
adc
mov
imul
jb
push
sub
mov
into
xchg
shrb
movsb
jp
push
pop
push
jg
jp
fs
pop
adc
adc
mov
popa
pop
pop
and
jl
xchg
lcall
add
out
jo
dec
mov
and
test
loop
adc
cs
sbb
xchg
add
mov
xor
out
imul
aam
addb
sbb
rcrl
push
dec
cmp
pop
rcrb
and
sbb
addl
jae
pop
dec
out
mov
adc
adc
jo
mov
mov
push
sbb
call
mov
das
pop
aam
add
push
iret
les
ret
push
mov
loopne
test
push
push
fcompl
adc
rol
sahf
inc
cmp
and
mov
int
inc
mov
fwait
push
loopne
rcl
sbb
mov
icebp
cmp
lahf
jg
xchg
adc
xchg
dec
mov
ret
jg
les
ficomps
and
enter
sbb
adc
fnstsw
inc
sbb
ss
adc
push
mov
sbb
aaa
push
adc
shll
add
fnstcw
sub
popl
leave
rol
outsb
rol
inc
leave
enter
ss
mov
stos
mov
adc
adc
or
enter
mov
add
popa
jne
add
add
js
hlt
movb
lret
or
push
int3
xor
push
add
fidivrl
adc
add
or
xor
mov
or
loopne
dec
adc
daa
sbb
add
pop
xor
sbb
imul
inc
mov
jne
add
or
repnz
add
add
movb
or
out
aam
cmc
shl
fsubrs
out
cmpsb
dec
lods
xorl
sub
pop
stos
cmp
pop
mov
and
dec
sbb
push
cmp
jbe
inc
movsb
xor
adc
xchg
jb
inc
adc
sub
inc
rcr
fdivp
push
shrb
push
fstl
popl
test
sub
arpl
jbe
push
jo
gs
push
nop
hlt
movsb
shll
inc
jno
adc
popf
sub
loope
push
enter
shll
ret
scas
push
outsl
jmp
mov
pcmpeqb
and
fcmovbe
orl
push
push
inc
in
pop
sub
js
ret
and
ror
jo
ret
inc
adc
movsl
inc
ret
push
dec
lods
pop
cmc
inc
push
sbb
clc
xchg
sbb
leave
divps
cli
xchg
sbbb
add
loopne
push
std
andb
or
xlat
testb
pop
cmp
mov
aas
sbb
cmp
xor
icebp
mov
mov
add
jo
pop
jge
outsl
out
dec
sub
xchg
inc
cmp
dec
adc
or
stos
pop
pushf
add
repnz
pop
test
or
and
test
aad
jne
arpl
lahf
ret
imul
in
popa
pushf
inc
xchg
add
or
mov
loop
jp
in
sbb
js
icebp
inc
xchg
sbb
nop
pop
ret
loop
mov
pop
aaa
sbb
push
push
add
jge
mov
out
pop
jbe
orl
rclb
js
stos
push
and
sbb
add
bound
pop
movsl
dec
xor
cmp
or
loopne
int
or
or
data16
push
or
into
ljmp
push
rolb
jo
jo
add
cmp
cld
xlat
mov
not
jmp
push
js
push
jb
dec
mov
and
inc
lods
shlb
inc
enter
movsl
or
scas
orb
je
add
loopnew
jp
adc
in
loope
mov
mov
addl
fisubrl
add
inc
push
adcl
push
ja
ret
test
icebp
pop
sbb
push
sbb
cmp
add
adc
jno
and
lds
xchg
sbb
push
add
or
sbb
adc
mov
push
mov
scas
test
pop
dec
cwtl
push
fildl
mov
outsb
push
add
mov
out
jae
or
adc
pop
inc
sub
lret
push
fs
call
loope
jbe
xor
inc
popa
je
mov
daa
jno
aas
xor
les
inc
or
pop
or
ret
inc
lods
cmc
mov
sar
cs
test
test
sti
mov
add
sbb
inc
sbb
fdivr
push
cmpsl
imul
test
mov
xchg
mov
or
sub
sbb
inc
test
jo
outsl
jge
out
or
lock
xor
add
gs
mov
fmuls
and
prefetch
divb
imul
imul
push
mov
and
xor
adc
mov
push
push
mov
or
mov
xor
adc
mov
call
pop
call
clc
stc
daa
shl
mov
cwtl
je
in
push
pop
xor
mov
jb
outsl
jecxz
and
aad
mov
stos
adc
mov
add
jecxz
enter
cmp
sbb
je
repz
and
je
ljmp
add
ret
adc
rcrb
test
mov
movsb
enter
andb
icebp
adc
or
call
in
leave
adc
pushf
shlb
pop
add
or
jp
mov
js
mov
inc
xchg
outsb
stos
outsb
ret
and
mov
pushf
adc
ljmp
pop
and
xchg
aaa
in
sub
adc
dec
inc
or
imul
mov
popf
jge
sbb
ret
cmp
ffree
adc
mov
adc
int3
add
mov
cli
cwtl
or
or
sub
jae
cs
bound
cs
cmp
pushf
sub
jbe
pop
xor
jp
xchg
inc
inc
mov
gs
fadd
pop
mov
roll
mov
jp
inc
punpcklbw
add
and
inc
das
dec
je
jb
paddusb
inc
test
push
scas
push
in
cli
ss
mov
lock
lret
push
testb
popa
repnz
roll
add
jg
in
push
xchg
shrb
jle
add
lock
jmp
cmp
ret
cmc
int
sbb
fs
or
xchg
std
into
mov
push
ret
inc
sbb
adc
movsl
add
xor
test
lcall
lret
xorl
or
lock
xchg
mov
dec
pop
stos
rorl
xor
jmp
jbe
mov
test
das
or
shrb
jo
jo
inc
adc
clc
lahf
inc
jo
pop
adc
mov
leave
fcomi
push
inc
inc
js
jne
enter
popa
iret
test
pop
pop
mov
adc
into
push
aam
push
rcr
sarb
std
out
xchg
mov
adc
int3
and
jb
xchg
lret
stc
sub
data16
stos
or
test
faddl
mov
xor
and
shl
popa
std
add
icebp
ret
pop
dec
xchg
push
or
adc
pop
push
test
sbb
call
pop
push
rcrl
xchg
cmp
dec
xchg
sub
mov
xor
das
mov
push
mov
inc
xor
pop
inc
loop
pop
cwtl
stos
adc
bswap
subl
adc
mov
leave
adc
xchg
xchg
pop
es
mov
fs
jl
lcall
loop
mov
repnz
push
adc
jae
adc
insb
dec
rorb
dec
movsl
addb
lea
pop
loope
cmp
xchg
cmp
int3
add
and
dec
loop
dec
mov
push
ljmp
inc
stc
push
xchg
xchg
jp
or
mov
data16
push
xor
mov
sub
test
mov
and
mov
shl
test
enter
add
ret
pop
push
data16
addl
xchg
xor
adc
data16
sub
sarb
and
xor
add
outsb
icebp
fsts
ds
sbbb
and
rorb
loopne
ret
mov
bnd
lret
or
xchg
add
lret
mov
or
and
or
mov
mov
rcrb
into
les
mov
sub
sbb
loopne
xchg
es
sub
mov
daa
mov
mov
loopne
adc
xchg
ljmp
lock
les
sar
rolb
loope
dec
mov
mov
inc
imul
lock
les
lret
or
inc
pop
jno
push
in
jmp
inc
repnz
popl
fcoms
xchg
xor
imul
sahf
jo
pop
fildll
xchg
enter
ljmp
add
push
xchg
pop
scas
rclb
jns
pop
fiadds
pop
stos
sub
lds
sub
pop
scas
inc
ret
sub
sub
sti
cmp
sbb
push
fdivl
pusha
ret
and
push
pusha
or
ret
mov
mov
sub
in
stc
or
xchg
sub
adc
inc
in
std
xchg
adc
pop
adc
clc
movsl
repnz
daa
shlb
cmp
add
add
add
ret
mov
ret
cmp
or
lock
sbb
inc
stos
push
leave
add
add
push
jg
inc
mov
sub
push
dec
inc
or
dec
adcl
cmpsb
divb
xor
mov
lods
aad
xor
cmp
adcb
sbb
aam
add
adc
mov
cmp
xchg
daa
or
movsb
jbe
shl
mov
sub
pop
icebp
pop
enter
sub
dec
jno
dec
jecxz
pop
xchg
or
pop
xchg
xor
adc
movsl
sub
leave
loope
jno
inc
push
in
rorb
in
jnp
dec
mov
aam
push
push
mov
push
call
cmpsb
push
notb
cmpxchg
inc
dec
sbb
ljmp
or
pop
push
adc
enter
std
pop
push
aas
or
lock
pop
pop
add
test
mov
mov
dec
adc
es
push
in
dec
loop
or
out
and
pop
orb
in
lea
mov
add
insl
stc
jle
mov
pop
pop
lahf
in
jge
popa
cs
pop
call
push
jp
cmp
testl
inc
add
cmp
xor
xchg
loope
sbb
sub
daa
or
pop
lea
push
push
and
jp
mov
adc
js
repnz
push
xor
dec
mov
pop
lock
add
shlb
ret
mov
jo
gs
fsubrl
subl
and
jl
inc
movsl
ret
fwait
mov
insb
popf
test
push
je
cwtl
adc
push
xchg
mov
xor
sarb
popa
or
stos
push
pop
cmp
push
shrb
add
xor
add
cmpsl
das
mov
nop
dec
call
cld
sbb
pop
pop
mov
sbb
loopne
push
pop
inc
fisttpll
lret
js
or
sahf
ficoms
icebp
out
adc
mov
push
pop
mov
bound
xor
sub
dec
ror
sub
push
push
pop
test
lret
aad
sbb
xchg
xor
pop
cmp
xchg
add
imul
rorb
mov
std
push
xor
xor
sub
pop
mov
or
and
popf
jbe
xor
inc
or
add
xor
stos
mov
push
pop
iret
pop
test
xchg
daa
or
push
int3
adc
inc
out
sbb
xor
scas
iret
jno
push
sar
push
and
push
mov
jo
aad
xor
jno
add
divl
lock
or
sahf
inc
sbb
add
adc
dec
xor
fsubrs
pushf
nop
out
mov
inc
imul
pop
aam
dec
xor
sbb
ret
xor
rcrb
shl
add
jnp
adc
add
dec
ljmp
pop
inc
mov
je
repnz
lret
pop
mov
sbbb
mov
mov
or
or
mov
les
pop
and
push
lret
adc
xor
push
dec
ret
inc
cmp
push
adc
mov
pop
shl
rcrl
xchg
dec
dec
ds
test
pop
push
mov
sbb
loop
add
sbb
mov
dec
inc
inc
sub
mov
push
cwtl
outsl
dec
cmp
icebp
sub
outsb
dec
mov
or
rorl
insb
fwait
sub
addps
mov
aad
sub
clc
addb
add
call
adc
and
loopne
jmp
inc
mov
lret
mov
mov
add
mov
pop
pop
sub
pop
xchg
cmc
and
and
sub
shlb
jp
inc
inc
loopne
das
lret
and
push
push
push
push
pop
push
iret
clc
sbb
xor
adc
out
pop
out
xchg
fwait
inc
mov
mov
mov
and
loope
sub
inc
push
push
repnz
inc
and
jle
sbb
ljmp
inc
and
and
adc
or
mov
or
inc
push
jne
cld
sub
fwait
adc
cmp
fiadds
xor
xor
mov
pop
mov
je
dec
xor
mov
jg
lea
ret
aam
inc
push
addb
dec
ljmp
mulb
and
push
rclb
mov
or
loop
and
test
shlb
push
inc
inc
ret
lock
or
cmp
and
push
mov
sbb
out
shlb
xor
dec
push
fmul
mov
loopne
pop
xor
dec
or
inc
test
mov
rorl
or
push
ret
adc
and
subb
ret
dec
cltd
jmp
mov
add
dec
sub
cs
mov
adc
js
sbb
les
push
lret
mov
imul
sbb
cmp
add
push
fldcw
int
mov
cmp
call
push
fucomi
leave
test
mov
ja
dec
pop
adc
or
rorb
or
dec
sahf
inc
call
sahf
or
aam
xchg
popa
hlt
repnz
sti
mov
mov
push
ret
dec
jmp
sbb
push
pop
scas
ret
call
mov
or
pop
mov
test
cwtl
adc
mov
lcall
ret
push
inc
lahf
or
leave
pusha
mov
jns
mov
xor
jno
dec
lds
pop
and
add
rcrb
push
sub
add
leave
sub
test
mov
pop
xchg
sbb
mov
loopne
push
mov
lods
cmp
es
xchg
lock
cmpsl
xchg
push
in
add
repnz
mov
xchg
ss
mov
test
add
mov
push
dec
pop
xchg
and
or
xorb
add
inc
push
add
in
push
mov
sub
xchg
cmp
movsb
negb
das
cs
xor
add
ss
popa
mov
and
test
push
adc
xchg
adc
adc
push
xchg
pop
imul
add
mov
mov
movb
push
test
mov
test
sbb
into
lock
push
push
mov
mov
add
rclb
cwtl
rolb
notb
ret
push
mov
sub
and
rclb
movsb
sarl
jno
hlt
mov
cltd
ja
in
mov
xchg
sub
ret
adc
iret
popa
addb
aam
push
adc
test
mov
imul
mov
inc
fwait
rol
sub
xlat
mov
call
repnz
add
addb
push
cld
push
ds
push
jp
mov
into
xor
mov
pop
pop
mov
aam
and
clc
push
add
adc
in
jb
mov
ret
adc
out
les
xor
dec
xor
push
syscall
push
nop
div
popa
mov
into
scas
add
loope
pop
add
cltd
aad
ret
add
push
bound
in
pop
test
xchg
add
ja
or
add
adc
pop
das
call
lea
cmp
es
sahf
les
mov
pop
mov
xor
inc
jp
ret
ljmp
cmp
roll
shrl
test
adc
scas
mov
mov
pop
lock
mov
adc
cld
dec
mov
sbb
scas
adc
cmpsl
imul
jmp
mov
sbb
out
or
mov
add
dec
jo
les
jo
or
pinsrw
sub
sbb
push
or
loopne
test
aaa
mov
xchg
cmp
out
adc
or
add
push
push
cmpl
lahf
and
dec
dec
cli
clc
or
leave
xor
and
mov
add
lcall
scas
jp
add
push
nop
mov
hlt
adc
mov
pusha
adc
mov
cmp
push
and
cmpsb
aam
mov
push
call
add
int3
xor
stc
sbb
pop
lret
sub
mov
mov
pop
push
or
jle
push
dec
lods
dec
std
jp
mov
jmp
orb
mov
xchg
mov
inc
cmp
ffreep
adc
adc
dec
or
ret
test
sub
or
int
add
shlb
jg
fmuls
fld
push
sub
or
scas
test
shlb
add
push
mov
lds
js
stos
into
rorl
mov
dec
stos
imul
ror
pop
xchg
sbb
ja
mov
cltd
movsb
loopne
xchg
cmp
mov
jecxz
dec
bound
mov
ror
sub
dec
adc
cltd
mov
pop
xor
loopne
jmp
test
mov
divb
test
sbb
inc
stc
or
mov
or
xor
sbb
adc
rorb
fwait
les
sub
loope
fwait
xchg
fcoms
lods
je
or
or
mov
push
or
xchg
mov
test
mov
mov
xor
sahf
xchg
sbb
add
push
sub
mov
sbb
ret
xchg
mov
adc
sub
jo
inc
nop
lret
inc
and
aas
jecxz
adc
sub
insb
inc
mov
sbb
cmp
push
inc
xlat
inc
jo
dec
cli
mov
sbb
push
add
jle
sbb
jo
adc
outsl
mov
arpl
and
js
loopne
push
mov
and
adcb
test
mov
jp
es
cmp
js
shlb
jecxz
loopne
mov
jp
push
pop
pop
out
ret
lock
cmpb
inc
sbb
add
adc
or
xchg
mov
pusha
dec
mov
das
hlt
popa
ret
ja
stc
or
lret
mov
inc
daa
lock
adc
inc
or
shrb
cwtl
lock
imul
call
lds
mov
loop
stc
pop
ljmp
jne
push
js
ret
or
pop
enter
rorl
pop
test
inc
cmc
xchg
or
into
dec
xor
enter
cmp
xchg
dec
enter
pop
call
in
push
add
loop
adc
movsb
enter
push
xchg
or
or
ds
push
and
pop
inc
inc
adc
std
lret
xor
addr16
mov
shr
mov
hlt
cmp
movsb
inc
jo
sbb
cmp
notl
push
cmp
mov
mov
mov
scas
push
mov
dec
cmp
mov
les
lahf
adc
outsl
scas
sub
cwtl
pop
stos
add
pop
or
test
sbb
and
cltd
sub
cltd
clc
and
mov
ror
and
xchg
and
xor
mov
lret
ror
jp
xchg
imul
ljmp
dec
ds
cmp
add
inc
sub
pop
sbb
imul
mov
lock
lock
int
sbb
cld
mov
shl
push
sahf
fwait
clc
xchg
lock
insl
sbb
pop
popa
pop
fisubrl
push
sahf
mov
je
add
jp
dec
loope
xchg
lods
or
mov
cmp
pop
push
jmp
repnz
and
add
test
or
adc
or
xor
testb
loopne
repz
add
add
sbb
arpl
or
in
and
xor
popa
cwtl
mov
or
jne
test
test
add
push
push
adc
xlat
and
add
data16
hlt
fdivrs
cmpb
dec
or
adc
add
mov
setbe
pop
push
sbb
adcl
xor
cmp
in
sbb
rclb
pop
out
daa
sbb
aaa
cmp
jl
add
sbb
dec
mov
adc
inc
test
and
xor
ret
push
sbb
jmp
popa
popa
ret
push
js
lods
and
sub
or
push
popf
cli
mov
dec
outsl
or
daa
sbb
sbb
enter
cmp
add
or
jl
push
push
lret
or
movsb
rolb
push
test
mov
jl
loopne
mov
push
xor
sbb
mov
add
sbb
mov
in
inc
add
push
out
jmp
add
dec
fildll
fs
testb
push
sbb
sahf
lret
je
ret
movsl
sbb
insb
add
cmc
in
addb
jns
push
movsl
fiadds
shlb
and
mov
or
mov
pop
into
pop
push
add
mov
inc
fwait
fs
adc
push
sbb
xor
test
call
inc
std
adc
or
call
addr16
addb
les
xchg
or
xlat
rol
call
leave
dec
pop
pusha
shrb
mov
and
push
or
or
mov
adc
rclb
push
mov
into
add
cwtl
movb
lret
or
loope
adc
add
push
mov
in
jo
fwait
call
lock
jmp
pop
sarb
sbb
mov
pusha
jb
add
loopne
jmp
pop
sbb
jmp
loope
mov
add
push
cs
add
jge
sbb
sub
or
lret
sbb
ret
jnp
push
or
lea
adc
xchg
or
pusha
loop
or
orl
mov
push
inc
bound
mov
outsl
icebp
ficompl
xchg
pop
data16
adc
ljmp
imulb
cmp
enter
sbbb
push
lods
stos
sbb
xchg
fstps
test
push
jmp
shlb
into
sbb
xchg
stos
mov
xchg
pop
pop
xchg
and
xor
loope
inc
clc
pop
inc
cmp
js
inc
xchg
js
or
mov
mov
adc
testl
mov
pop
inc
into
and
and
xor
dec
rolb
dec
pop
icebp
cmp
add
push
xor
mov
jae
ret
dec
pop
and
or
jecxz
xchg
pop
adc
xor
in
and
push
add
sbb
loopne
leave
mov
push
enter
mov
or
movsb
test
cmp
ljmp
or
push
add
dec
add
inc
hlt
nop
mov
hlt
inc
hlt
push
sbb
dec
sub
or
popa
cmc
jp
add
adc
mov
mov
xchg
lock
sub
jne
push
loope
pop
arpl
shlb
jle
jecxz
enter
subb
xchg
rol
insb
adc
adcb
ss
nop
adc
or
xchg
add
cmp
ljmp
popf
sbb
rcrb
fstpt
jo
mov
or
daa
add
push
loope
icebp
notb
scas
or
dec
mov
dec
push
or
je
andb
lret
sbb
and
insb
ss
leave
insl
mov
pop
mov
ret
fwait
les
clc
int3
push
jno
mov
or
xor
adc
js
hlt
inc
clc
add
lods
sub
mov
repnz
roll
ret
cmp
into
mov
mov
push
test
push
js
mov
rolb
or
aaa
je
lock
push
test
add
push
leave
lcall
xchg
hlt
lret
aam
js
or
xchg
int
bound
inc
iret
xchg
dec
mov
pop
inc
xchg
pop
ss
sar
xchg
ret
jbe
ja
mov
xor
xlat
add
jb
and
aaa
inc
lret
push
mov
xor
fnstenv
mov
inc
pop
xorl
and
push
ret
loopne
lahf
add
jnp
mov
or
popa
or
addr16
cld
ret
sub
fs
cmpsl
mov
jle
js
and
jo
clc
mov
jmp
pushf
gs
xor
rol
add
out
adc
push
push
test
mov
cmp
xchg
divb
add
jmp
jg
lods
addl
mov
xor
mov
and
clc
sbb
adc
mov
inc
pop
data16
push
push
and
pop
cmp
sbb
push
xchg
mov
xor
ljmp
sbb
add
inc
jno
js
cmp
or
test
dec
inc
test
mov
leave
sarl
loopne
add
adc
xor
push
mov
pop
aaa
hlt
leave
sahf
lock
sar
lock
ss
mov
inc
mov
repnz
inc
rcrb
pop
jp
cmpl
ljmp
sbb
out
rclb
jo
xor
push
mov
sbb
mov
inc
mov
mov
inc
add
rcll
ret
push
in
rcrb
aaa
mov
jecxz
xchg
bound
or
pushf
gs
jb
lcall
sub
shlb
cmp
sbb
repnz
add
mov
mov
aaa
sbb
xor
je
inc
adc
lret
xor
lock
jp
and
xchg
test
sub
clc
loope
mov
mov
outsl
js
xor
and
inc
or
ss
or
cmpsl
add
ljmp
sbb
imul
adc
adc
sub
dec
adcl
pop
pop
sbb
pop
test
push
inc
sbb
scas
jl
mov
rolb
pop
add
sbb
bound
adc
lret
test
xor
pusha
mov
dec
add
add
loopne
movsb
mov
adc
mov
cmp
mov
rcll
test
and
dec
jo
insb
add
cmp
test
adc
jns
mov
jns
pop
or
jnp
popl
jbe
cwtl
fptan
jns
rolb
sbb
and
sbb
cltd
mov
push
jo
mov
mov
xchg
dec
pop
mov
pop
xchg
xorb
xchg
sti
xor
sarw
shll
popa
cmp
mov
dec
test
je
orl
adc
push
add
pop
les
push
push
sbb
loope
adc
jmp
xchg
or
lock
mov
mov
sbb
sbb
cmp
pop
xchg
cmpb
cmp
clc
or
pop
imul
daa
shld
in
test
pop
adc
adc
mov
pop
insb
mov
jo
xor
inc
mov
pop
out
inc
inc
mov
or
aam
and
or
or
inc
pop
lret
cmp
divb
inc
xchg
dec
leave
daa
and
jno
sub
cmp
push
sti
js
sbb
leave
adcb
testl
test
jno,pn
test
ror
mov
add
xor
mov
jp
and
aaa
pop
xchg
adc
add
loopne
ds
ljmp
imul
inc
call
gs
mov
pop
and
test
mov
and
loop
lods
pop
popf
and
cli
scas
add
loope
jae
add
fld
mov
out
dec
dec
es
pushf
mov
scas
stos
rcrl
jle
fistpll
lods
fimuls
xor
dec
in
lock
cltd
sub
add
testb
hlt
js
xor
inc
cmpsb
shlb
push
and
cmp
push
inc
and
add
shlb
daa
loopne
or
cmp
iret
cld
adc
pop
les
mov
mov
outsb
lea
shlb
pop
dec
push
push
inc
push
dec
ficoml
mov
dec
mov
xor
ds
ljmp
adc
fildl
psrld
rcl
roll
mov
and
cmp
sub
sti
push
dec
mov
sub
add
rclb
adc
rorb
mov
xchg
xor
movsl
das
add
and
cmpsl
push
mov
or
xor
sbb
and
mov
xchg
loope
daa
lods
inc
lods
rol
sub
rorl
and
in
xor
dec
mov
push
dec
push
inc
enter
inc
mov
adc
fcmovnb
addb
or
or
jg
test
popa
jns
addr16
js
mov
adc
add
push
push
adc
fadds
mov
jbe
push
push
mov
js
jbe
mov
aam
lea
mov
xor
add
mov
mov
icebp
push
addr16
in
jne
push
jnp
xchg
test
daa
icebp
ret
jbe
shlb
es
and
dec
ret
icebp
pop
mov
fwait
lahf
pop
pop
add
cli
and
call
jb
adc
mov
sbb
or
call
popw
mov
and
test
test
ret
xorl
pusha
sub
clc
cmc
gs
dec
pop
ror
sub
add
dec
sbb
jmp
xor
add
rcrb
jp
inc
or
test
rclb
enter
push
shr
les
sbb
jb
dec
sarb
adc
je
rcrl
inc
add
das
add
sbb
push
or
or
jne
pusha
enter
or
cwtl
stos
rclb
push
xchg
es
mov
int
rolb
push
push
rcrb
ret
aam
add
roll
call
int3
xor
adc
push
adc
xchg
sbb
rcrb
mov
rol
in
in
loope
jle
out
or
jo
andb
inc
cmpsl
ror
loope
xor
or
dec
cmp
xor
mov
add
or
xchg
test
mov
sbb
mov
rcrl
test
jecxz
call
push
mov
nop
arpl
xor
mov
ret
in
inc
jnp
or
adc
cs
push
xchg
mov
scas
jne
push
sbb
xor
imul
shlb
int
in
pop
addr16
mov
xor
sbb
push
add
push
scas
mulb
dec
sbb
lods
ret
add
xor
shl
add
mov
rclb
push
repnz
adc
cmp
sbb
aam
popa
ret
mov
or
lods
icebp
xor
push
test
lret
xor
sbb
or
sub
lds
dec
mov
fs
gs
adc
scas
les
push
sub
mov
xor
dec
push
lock
ret
aaa
adc
inc
mov
mov
push
stos
push
dec
mov
out
stos
es
xchg
mov
stc
add
mov
mov
ja
call
addl
push
std
loopne
mov
lock
aam
test
aas
inc
xor
inc
dec
sub
mov
mov
cmpl
xor
std
div
pop
add
sbb
daa
sbb
adc
add
sub
in
enter
xor
and
out
aad
add
rcrl
add
ror
cmp
mov
rclb
cld
add
xorl
jp
fidivrl
andb
pop
and
xchg
shr
sub
pop
loop
jo
pop
addr16
ss
add
mov
into
pop
jecxz
xor
rorl
imul
sbb
addb
scas
dec
xor
jl
sub
icebp
imul
mov
adc
push
imul
push
pop
lods
cmp
or
faddp
mov
and
ret
lock
fs
xchg
inc
out
pop
stc
dec
sub
dec
mov
adc
sbb
jmp
call
cmc
add
rorb
and
cmp
mov
mov
test
int3
dec
mov
or
test
adcb
daa
sti
cmp
bsf
xchg
mov
pop
dec
aas
into
enter
pushf
sub
stc
cmp
sbb
fiadds
xor
cltd
arpl
andb
es
leave
pop
mov
mov
add
xchg
mov
mov
push
cmp
push
arpl
pop
pop
test
loop
shr
sbb
mov
pop
rcrl
data16
mov
jmp
mov
movsb
xchg
dec
push
add
and
add
dec
enter
xor
mov
push
inc
xor
ret
xorb
fimuls
ljmp
push
jp
rcl
insb
sbb
cmp
and
or
movsb
movsl
push
dec
sbb
call
add
dec
push
dec
lret
pusha
push
pop
mov
mov
adc
sub
mov
adc
sub
fadds
sbb
dec
inc
leave
xlat
or
sbb
or
popf
push
xchg
stos
xor
adc
sbb
cmpsb
js
and
adc
push
pop
rol
aad
xchg
adc
dec
dec
xor
and
ret
aad
sub
lea
push
mov
outsl
int3
pop
lcall
cmc
add
shrl
pusha
add
lods
lock
xchg
xchg
xor
dec
lea
subb
xor
clc
mov
push
or
stc
adc
icebp
test
push
jp
jle
pop
femms
das
inc
test
mov
xchg
xor
sub
out
dec
orb
sbb
pop
pusha
mov
xchg
push
aam
lcall
test
or
adc
xor
xor
test
xor
xchg
xchg
jp
mov
push
repnz
ret
fidivs
adc
cmp
mov
cmp
outsl
dec
fcoml
pop
pop
test
dec
sbb
inc
mov
enter
ret
push
add
sub
out
shr
add
mov
push
movsl
leave
hlt
pop
inc
pop
das
push
push
or
lock
or
in
lock
pop
mov
dec
imul
arpl
jmp
and
lock
dec
mov
pusha
shrb
rolb
and
gs
jo
and
xor
arpl
pop
adc
lret
push
add
bound
leave
in
notb
sbb
and
xlat
loopne
test
cmpb
add
sub
outsl
sbb
test
push
orb
movsb
mov
dec
adc
call
xchg
inc
adc
ret
ret
jae
out
and
mov
movsl
ljmp
rolb
mov
pop
enter
mov
add
cmove
mov
pusha
or
mov
aad
mov
icebp
imul
enter
jmp
push
jl
lock
pop
dec
or
push
or
xchg
lret
mov
les
mov
fs
inc
mov
push
sbb
js
int3
rcrb
and
fs
sbb
dec
loop
xchg
rol
mov
roll
sub
testl
ljmp
adc
test
push
ss
shlb
pop
jp
push
sarb
adc
xchg
xchg
inc
lret
call
xor
mov
icebp
js
ret
and
addb
xor
cmovp
inc
push
pop
test
dec
movsl
xchg
or
xchg
mov
movsb
and
enter
dec
js
add
adc
push
or
sbb
sub
std
push
leave
push
push
mov
push
sub
das
xor
inc
cmp
push
leave
int
pop
adc
rcll
adc
montmul
cmpsb
inc
roll
xor
or
push
fsubrl
cmp
in
pushf
sbb
sbb
xchg
clc
sbb
xchg
aam
xor
ret
add
pop
mov
xor
and
mov
outsb
sbb
adc
xchg
or
fisubrs
shlb
lods
mov
cmc
paddq
jno
lret
push
push
jge
rcl
loop
daa
int3
js
es
or
pop
cmp
punpckhdq
leave
leave
hlt
les
xchg
mov
pop
inc
js
shlb
je
ljmp
and
ret
icebp
lcall
xor
orb
shl
pusha
je
jb
push
add
and
add
test
add
je
clc
rol
xchg
or
mov
or
int
push
test
xor
imul
leave
push
mov
ds
call
pop
rcrb
js
test
enter
or
mov
push
jge
add
popa
bound
fcoml
xor
inc
clc
add
adc
xor
cmp
push
mov
leave
sub
sub
ja
popa
nop
xlat
repz
sbb
leave
cli
test
icebp
push
adc
fldenv
push
cmp
jmp
push
push
push
or
pop
xchg
sbb
xor
fs
ljmp
or
and
inc
xchg
add
push
bound
adc
xchg
sub
dec
aam
mov
rcrb
sbb
ss
rcl
inc
shrb
lret
mov
sahf
loop
lods
sarl
add
les
arpl
inc
pop
jo
pop
cmc
sub
dec
scas
push
pop
outsl
add
inc
loopne
outsl
inc
filds
cmp
lret
cmp
decl
insb
push
les
into
les
and
pusha
or
dec
cmp
rol
sub
ficoml
and
mov
push
or
mov
pop
pop
inc
adc
xor
ffree
fadds
fs
dec
and
aam
add
sbb
out
xor
aad
inc
enter
sbb
push
add
bound
das
sbb
rorb
fadds
pop
daa
shr
mov
add
sub
jmp
push
icebp
mov
les
rclb
pop
aam
icebp
or
inc
std
xchg
and
inc
call
xor
mov
scas
sbb
pop
pushf
pop
scas
inc
and
lret
ss
or
rolb
push
loopnew
stos
push
jo
test
mov
inc
jp
mov
push
or
iret
cmpsl
dec
por
push
pop
inc
test
cmp
add
adc
or
clc
cmp
push
sbb
dec
or
cs
ljmp
loopne
pop
push
popl
push
dec
mov
das
sub
jne
leave
mov
mov
mov
xor
insl
jne
insb
pcmpgtb
sbb
inc
add
leave
enter
jmp
cmp
or
push
outsl
or
sub
dec
sbb
ficomps
scas
out
mov
scas
adc
ret
jl
repz
pop
int3
mov
add
imul
ljmp
push
and
or
les
inc
mov
pop
aam
roll
ljmp
cmp
es
inc
push
scas
dec
lret
subb
push
xlat
and
fmuls
imul
xchg
lret
loope
jp
call
sub
mov
shll
sbb
shll
popa
add
xchg
dec
inc
iret
adc
inc
mov
sub
jmp
sub
ror
shlb
cmp
xor
pop
adc
and
cmp
and
dec
or
push
out
mov
cmp
sub
push
and
ds
loopne
cmp
cld
adc
inc
jmp
es
push
rolb
imul
or
movsl
rol
js
js
jl
and
lea
xor
jb
inc
dec
bound
xor
loop
in
mov
ds
sub
inc
loope
mov
loope
mov
outsb
inc
sub
and
ret
dec
mov
mov
insl
mov
loopne
pop
add
sub
ds
cmp
or
xor
mov
leave
push
lea
imul
mov
lods
je
mov
add
adc
lods
call
insl
or
sbb
data16
repz
pop
mov
adc
std
xchg
shlb
add
aam
xor
getsec
pop
andb
test
subb
add
mov
cmp
jecxz
add
push
jne
repz
pop
and
adc
cmp
in
subb
idivb
xchg
repnz
mov
adc
adc
xor
adc
dec
cmp
xor
adc
adc
scas
mov
decl
fstpl
lock
inc
lock
sahf
scas
sbb
rorb
adc
sub
das
and
add
or
clc
ss
pop
adc
enter
cld
ret
mov
mov
mov
and
jbe
add
push
or
orb
dec
push
jne
dec
mov
dec
xchg
cmp
loopne
testb
and
repnz
imul
or
ret
pop
inc
rcl
pop
pop
mov
ret
test
insb
sub
pushf
add
leave
adc
subl
and
add
inc
mov
add
andb
out
xchg
stos
mov
push
pop
loopne
jno
inc
push
mov
xchg
cli
pop
push
jecxz
jbe
push
inc
push
lods
mov
cmp
xchg
sbbl
insb
ret
push
shlb
and
movsb
push
test
icebp
and
push
test
ret
add
jmp
sub
loop
movsb
sbb
sub
les
push
fcomps
mov
adc
inc
lock
mov
add
cmp
or
roll
and
dec
xchg
inc
mov
int
sbb
dec
lea
lret
js
jmp
daa
sub
in
pop
sbbb
push
xor
push
pop
adc
push
jmp
add
popf
div
sub
inc
add
test
jo
adc
push
lret
les
cmpsb
mov
inc
outsb
sbb
xor
add
xchg
add
call
dec
xor
jne
out
rclb
and
push
mov
std
es
sbb
push
fucomi
xchg
push
pushf
or
pop
inc
in
rclb
cltd
or
dec
dec
push
pop
mov
xchg
shl
add
cwtl
cld
jecxz
loopne
pop
jmp
pop
out
pop
je
pop
and
pusha
imul
ret
or
sbb
pushf
mov
repnz
pop
and
daa
and
sub
inc
bound
and
les
into
cmp
adc
sbb
push
cwtl
shl
inc
sbb
or
pop
jmp
xchg
cmp
mov
jmp
jbe
pop
add
mov
hlt
pop
fcoms
jle
hlt
push
mov
jns
je
mov
je
lods
dec
mov
add
sub
enter
cwtl
push
mov
sbb
ret
pop
cmp
jmp
ljmp
loopne
and
and
or
push
mov
fs
rolb
lock
addb
sub
xchg
add
sub
mov
enter
test
cmp
mov
sbb
mov
rorl
sti
sub
sub
pop
and
adc
and
nop
adc
sbb
ror
jl
inc
ror
les
add
sbb
add
adc
push
adc
leave
pushf
test
inc
mov
push
pop
cli
mov
adc
and
rolb
push
xor
addr16
mov
call
cli
cmp
or
loop
les
clc
push
movsl
mov
nop
sbb
fistpll
push
shrl
mov
add
push
xchg
mov
shrb
leave
mov
js
jns
xor
jmp
fucomi
es
into
lock
std
dec
push
or
fcoml
popa
mov
push
push
js
in
ss
mov
lods
ja
or
xchg
xor
jp
sbbb
jae
orb
mov
dec
or
cltd
or
rol
xchg
les
lods
dec
xchg
sub
dec
mov
or
fcom
jo
xor
outsb
lret
sub
icebp
clc
js
jae
xor
xchg
out
sarl
xchg
or
cmpsb
sbb
pop
pop
inc
mov
jb
pop
les
pop
js
scas
jge
mov
inc
sbb
cwtl
or
cs
aad
rolb
and
js
mov
repz
pop
shlb
and
leave
enter
rcll
jge
push
cmp
xchg
mov
call
stos
add
lock
adc
jp
mov
or
hlt
and
mov
cmp
mov
adc
rclb
sub
push
out
dec
and
lcall
pop
scas
mov
add
cmp
inc
nop
xlat
or
push
arpl
inc
mov
sub
sahf
cwtl
pop
mov
sbb
mov
push
lock
vprotw
adc
or
sbb
mov
adc
add
sbb
push
inc
xchg
jmp
lret
cmp
adc
stc
icebp
inc
ret
or
pop
xchg
cmp
in
mov
dec
stos
notb
nop
add
sahf
test
push
add
test
inc
add
movb
cmp
jno
sti
rorb
or
inc
call
cmpsl
pop
cmp
sub
pop
das
arpl
icebp
outsb
adcb
imulb
call
aad
xor
shrb
fisttpl
aaa
jo
loop
movsb
or
cmc
mov
or
loopne
push
push
out
adc
push
pop
push
sub
cmc
xchg
push
cs
push
jns
sbb
dec
or
movsl
mov
cmpsl
dec
ljmp
mov
jbe
pop
push
push
mov
dec
adc
add
stos
sbb
add
ret
mov
fmull
dec
pop
cmpsb
pop
ror
inc
loop
add
or
test
sub
sahf
leave
leave
sbb
pusha
mov
in
into
rclb
test
fnstsw
cmp
mov
fst
sbb
push
loope
xchg
fadds
lret
mov
sub
cltd
shr
bound
enter
bsf
inc
sbb
or
mov
inc
lcall
mov
add
sbb
lret
nop
inc
pop
das
outsb
add
jg
sub
mov
inc
outsl
stos
into
xchg
or
inc
into
sbb
pop
ret
pop
sbb
pusha
and
sub
xor
add
mov
push
adc
add
mov
lods
roll
bound
js
push
inc
jle
aam
rorb
push
js
dec
pushf
and
fadds
pushf
test
in
adcl
mov
les
lods
add
loope
shl
xor
cmp
add
push
lahf
es
sbb
jne
jecxz
mov
mov
xor
dec
cwtl
push
jb
outsl
jmp
jae
sub
xchg
imul
xchg
push
sbb
in
rolb
ret
adc
lock
testl
test
adc
inc
addb
sub
cltd
ret
rolb
cmp
jno
jg
inc
loopne
sbb
xchg
lock
dec
pop
mov
enter
in
call
xchg
mov
and
mov
fwait
in
jno
cmpsb
push
or
adc
shlb
mov
or
out
cltd
mov
adc
pusha
xor
push
stos
or
jl
adc
push
mov
mov
xchg
mov
adc
or
and
enter
sbb
and
movsb
popl
insl
push
hlt
xor
and
ret
xchg
add
mov
loope
mov
jno
pop
xor
pushf
setbe
rclb
gs
clc
dec
sub
adc
add
cwtl
rcrl
mov
mov
jle
add
or
enter
inc
and
pop
add
pop
xor
xchg
daa
imull
cmp
add
xor
cmp
sbb
push
and
push
xorl
inc
or
and
fwait
push
mull
jae
lock
pop
movsb
or
sub
add
outsl
cmpsb
addb
arpl
xchg
push
mov
insb
sbb
into
in
pop
lock
rcll
push
in
push
xor
adc
xchg
or
aad
int3
push
rol
sub
adc
adc
mov
jnp
push
cmp
dec
or
push
xor
adc
rolb
xchg
add
cmp
push
and
sub
xorb
inc
cmp
push
insl
and
cmp
dec
cmpl
jb
cmp
or
sbb
sbb
dec
pop
add
push
inc
sub
dec
adc
bound
adc
adc
add
inc
xor
cli
add
push
or
mov
ljmp
pop
and
xchg
cmp
pop
test
or
mov
addl
push
ret
sbb
fcmovnbe
push
sbb
push
inc
sub
sbb
int3
mov
add
inc
loop
mov
fidivl
add
andb
sbb
mov
pop
xchg
pushf
inc
add
andl
mov
xchg
inc
push
and
mov
mov
inc
mov
data16
adc
adc
bnd
xor
adc
or
add
sbb
jp
jo
xor
scas
test
xchg
add
aam
int
or
mov
xor
add
icebp
add
daa
mov
shll
xchg
sbb
into
xchg
add
call
cltd
xchg
aam
adc
lds
rcrb
cltd
adcb
lea
adc
xchg
bound
sbb
push
inc
mov
inc
in
push
add
inc
xor
loop
call
enter
dec
sub
mov
sbb
mov
sbb
cmp
pushf
test
add
orb
andb
arpl
test
cmp
movsb
dec
bound
imul
imul
or
adc
cwtl
hlt
or
orl
or
sbb
out
subb
dec
mov
jmp
jo
push
sbb
adc
ret
or
or
in
lods
je
jb
adc
xor
stc
fmuls
cmp
call
push
arpl
xchg
mov
add
push
jl
rcrl
or
scas
inc
mov
push
xor
hlt
xchg
pop
add
adc
sub
sbb
jae
jl
js
inc
add
or
loope
xchg
push
add
andb
int3
push
cmp
scas
stos
xchg
push
scas
leave
popa
add
and
dec
clc
or
push
or
cmp
mov
push
jle
addl
push
add
pop
inc
adc
or
mov
int
mov
addr16
push
inc
arpl
cmp
add
addb
xor
movsb
push
adcb
cmp
paddq
mov
sbb
push
jno
mov
orb
pop
mov
jno
pop
mov
mov
push
dec
shlb
in
mov
loop
add
inc
mov
ret
adc
add
xchg
jne
push
rcll
cmpb
or
add
shrb
or
jo
adc
outsl
sbb
in
mov
loop
adc
sub
aad
into
into
inc
or
hlt
mov
adc
add
gs
lods
mov
shl
sub
and
ret
shrb
roll
xor
push
mov
sbb
push
jl
cmp
test
cmp
push
jne
jl
andl
push
mov
add
adc
add
pop
scas
notb
test
in
ret
icebp
xor
pushf
lock
pop
or
lock
push
adc
and
sbb
or
popa
adc
adc
lahf
cmpsb
adc
pop
adc
xor
xor
or
pop
mov
add
xor
xchg
loopne
sbb
ss
dec
inc
subl
cmp
and
ret
sbb
mov
pop
or
cltd
add
je
mov
or
cmp
call
add
mov
insb
cwtl
sub
xchg
or
xchg
mov
jg
mov
xchg
pop
push
cmp
xor
cmpsb
icebp
jno
xchg
mov
jb
pop
dec
into
mov
popa
xchg
push
sbb
and
mov
fcoms
enter
mov
stc
mov
cmp
and
push
pushf
mov
xor
mov
xor
adcl
xchg
sub
xor
daa
mov
shll
sbb
or
je
sub
mov
cld
or
sub
push
arpl
or
dec
es
mov
rolb
xor
cmc
jb
cmp
mov
out
mov
mov
mov
push
push
push
push
pop
adcb
cli
shlb
mov
inc
mov
inc
insb
or
es
push
mov
jo
data16
push
loopne
push
imul
and
rclb
shr
push
sbb
and
push
fisttpll
ficompl
sbb
pushf
sbbb
xchg
adc
xor
ret
fldcw
loope
jo
gs
fists
push
lcall
sbb
faddl
pop
sub
les
mov
sbb
mov
mov
fstpt
mov
sub
daa
loopne
pushf
inc
xchg
test
daa
dec
jecxz
les
in
xor
addl
xchg
popa
ret
lahf
mov
jge
rclb
js
movsl
enter
push
inc
mov
sarb
hlt
into
hlt
pop
sbb
sub
push
add
add
test
mov
cwtl
push
adc
dec
adc
call
add
mov
inc
sub
inc
jge
fisubrl
lods
push
mov
sbb
cmp
test
push
cmp
pop
xor
mov
mov
add
sbb
out
add
xchg
fcom
cmp
daa
xor
mov
mov
sbb
ror
nop
pop
in
and
test
mov
mov
mov
or
test
loop
mov
imulb
or
rorb
mov
push
jg
add
std
pusha
sbb
inc
lcall
in
into
push
out
loopne
sbb
notb
xchg
pop
adcb
das
dec
cmovs
ret
inc
push
enter
add
or
push
in
push
or
jp
sub
arpl
aas
ds
and
add
insb
pop
cmp
push
adc
push
outsb
or
rolb
dec
outsb
popf
fisubs
jmp
cs
xchg
push
or
xor
sbb
sub
or
icebp
mov
add
repnz
and
imul
jl
adc
push
mov
inc
xchg
or
aaa
inc
loope
mov
stc
or
and
popa
shlb
xchg
xorb
or
popa
add
test
hlt
inc
cmp
add
adcl
and
lods
jmp
xchg
fiadds
jno
xorl
es
stc
insb
jo
push
es
push
subl
sub
cmp
mov
and
mov
sub
or
add
push
or
pop
je
inc
and
push
ret
aam
sbb
fcompl
xor
push
and
push
sbb
fstpt
cmp
loope
js
insl
adc
or
xor
les
out
push
mov
pushf
add
mov
enter
or
lods
and
enter
es
or
fsubrs
push
dec
xchg
sbb
js
adc
je
test
or
cmp
loop
clc
pop
jns
dec
push
fldl
inc
repnz
daa
adc
or
test
xor
loopne
movb
mov
adc
icebp
nop
add
sbb
push
mov
jl
rcrb
lcall
mov
mov
les
aas
loope
xchg
xorb
cmpl
mov
inc
loopne
aaa
scas
subb
mov
rcrb
cmc
add
pop
cmp
cmpl
push
xchg
add
mov
and
sbb
arpl
or
adc
test
push
pop
mov
sub
or
adc
es
mov
cs
icebp
and
pop
hlt
loope
xor
aas
pop
and
or
xor
and
jae
lds
push
lock
cwtl
out
xorb
cmp
ljmp
ljmp
ret
outsl
lahf
add
lock
lret
cli
xorl
mov
lock
push
int3
dec
jp
fwait
loopne
xorl
inc
push
sub
mov
sbb
in
add
mov
sbb
push
sub
push
lock
and
add
stc
sbb
xor
cwtl
cmp
js
add
dec
fdiv
or
or
sbb
test
pop
lret
dec
pop
adc
call
rorb
loope
sbb
popa
popa
dec
add
insl
pushf
test
mov
mov
push
scas
mov
sub
bound
jl
enter
inc
pop
dec
shl
push
jae
pop
fisttpll
adc
push
mov
gs
or
daa
pusha
and
dec
xchg
cmp
and
ret
test
jmp
cmc
sbb
add
hlt
add
jmp
sbb
sub
rcrb
popa
xor
jno
push
push
rcll
sub
push
aam
dec
inc
jp
xchg
lea
sbb
cmp
lcall
std
xchg
fs
xor
sbb
daa
jne
pop
xor
stc
call
test
aam
and
stos
daa
sti
mov
adc
test
imul
push
cld
lea
imul
es
sbb
jecxz
cmp
mov
sub
push
dec
test
std
insb
cmp
pop
sbb
inc
sub
js
mov
lds
or
pop
sbb
dec
xchg
ret
inc
or
mov
sbb
bswap
xchg
cmpsb
xchg
mov
mov
push
dec
adc
mov
test
shll
or
es
dec
loope
add
sbbb
js
dec
adc
popa
sbb
jns
js
adc
into
jbe
stos
xor
mov
aam
fnstenv
and
pop
push
inc
fiaddl
jecxz
mov
ss
adc
call
mov
popa
pop
call
push
xchg
ret
test
adc
bound
adc
xchg
push
lret
xor
jo
and
inc
push
sub
dec
pusha
sbb
aaa
and
jmp
js
sbb
rclb
dec
xor
add
imul
mov
lock
rcrl
arpl
in
icebp
add
xchg
jle
rclb
xor
call
ss
test
push
sbb
test
movsl
xchg
push
cmpsb
mov
jecxz
push
cmp
mov
lods
lea
lret
and
roll
sbb
sbb
ret
into
xor
xor
test
andl
loope
fadds
fwait
call
gs
inc
clc
sub
sub
js
cmp
xchg
sbb
or
in
inc
aaa
pop
mov
or
inc
or
rcrb
add
int3
jle
add
sahf
add
xchg
mov
push
and
inc
ja
movsb
sbb
loop
sbb
push
shlb
nop
je
jecxz
pop
adc
inc
xchg
cs
popa
out
sbb
sarl
mov
push
loopne
loope
fs
sbb
inc
sbb
addb
xchg
mov
pop
dec
or
xchg
loopne
out
sbb
out
push
sub
inc
shll
out
sub
fs
inc
mov
adc
add
adcl
and
mov
sbb
push
movb
test
lock
rolb
bound
test
adc
inc
fdivl
push
rolb
outsb
in
adc
sbb
movl
adc
inc
or
or
sub
loop
jg
subl
call
jp
pop
mov
fadds
xor
in
or
icebp
xorb
xchg
sbb
or
pop
nop
and
xchg
mov
mov
adc
rorb
add
pushw
imul
xchg
push
or
adc
sbb
push
xchg
mov
cmpsl
sbb
test
and
adc
in
out
mov
insb
popf
sbb
cltd
sbb
loope
pusha
pusha
imull
and
xchg
and
xchg
sbb
or
push
mov
adc
pop
icebp
lock
add
xor
hlt
mov
pusha
sbb
add
lea
mov
loopne
cmpsb
pop
fidivl
sbb
cmp
pop
fstpl
pusha
mov
pop
rcrb
or
mov
call
jmp
xor
and
inc
push
jne
icebp
fs
inc
daa
sbb
add
fcompl
dec
xchg
push
mov
dec
xchg
popa
pop
mov
dec
sbb
mov
ja
jno
cs
mov
add
das
add
sub
les
xchg
fsincos
pop
outsl
mov
fcmovne
sub
icebp
cli
push
push
nop
mov
sbb
and
pop
xor
mov
cmpsl
jmp
and
ret
movsl
add
insb
sbb
test
rol
xor
push
mov
cmp
dec
push
leave
adcb
and
pop
adc
das
adc
and
test
mov
mov
mov
rcrb
out
popa
popa
rcrl
and
and
dec
sbbb
xor
icebp
fwait
rcll
sub
call
mov
sub
jo
jb
push
or
push
jmp
mov
rcll
rcrb
mov
and
pop
leave
or
clc
add
pusha
mov
fs
sbb
or
jo
stc
jbe
test
cmp
push
sbb
push
call
cmp
arpl
inc
punpckldq
xor
push
sub
sub
rolb
clc
or
movsb
mov
in
jae
push
xchg
xchg
adc
add
sar
add
push
es
clc
stos
xchg
mov
mov
je
js
add
add
and
mov
add
adc
lods
pusha
sbb
push
pop
sbb
mov
adc
ljmp
mov
jmp
xor
add
rcrb
jle
outsl
imul
and
ja
mov
roll
js
sbb
ret
add
xchg
mov
xchg
jle
enter
push
xchg
add
sub
aam
loopne
add
pusha
sub
arpl
pop
inc
clc
lds
shl
popa
push
mov
push
test
in
and
cmp
aas
ljmp
pop
xchg
sub
sub
fisubs
jmp
xchg
xor
enter
xchg
sbb
dec
in
jmp
cmp
adc
inc
js
push
mov
push
lea
xchg
xchg
test
mov
jmp
add
mov
or
mov
mov
push
push
or
pusha
jmp
sbb
pop
inc
leave
out
mov
aas
xchg
sahf
scas
lock
rclb
xor
or
xor
fs
cmp
imul
std
xor
and
imul
add
pop
mov
push
push
and
xor
jecxz
push
incl
in
inc
dec
adc
or
dec
push
orb
mov
cmpsb
lret
add
fisttpll
pusha
xchg
jno
mov
pop
inc
add
mov
test
sub
loop
cmp
mov
mov
xchg
adc
mov
sahf
test
test
ret
sarb
into
adcb
int
mov
addb
sbb
test
push
mov
adc
cmp
xor
jmp
ljmp
mov
rorb
pop
roll
mov
shll
sbbl
and
pop
inc
outsb
lcall
nop
pop
xorb
push
jp
sti
ss
pushf
lods
jne
sbb
mov
es
xor
lret
lea
lods
imul
clc
or
icebp
cmp
mov
add
mov
imul
sbb
and
jno
js
inc
add
movsb
orb
and
cmp
loopne
jl
mulb
loope
cmpsb
and
jo
lock
lods
das
ljmp
push
lods
sbb
nop
test
je
pop
or
outsb
cmpsl
xor
lods
je
mov
cwtl
or
shrl
inc
mov
adc
loopne
pop
push
aam
cmp
pop
xchg
dec
dec
or
movsb
jno
test
loopne
fs
shr
xchg
jp
aas
jo
mov
jmp
push
mov
jb
jae
ffreep
fwait
cmp
push
clc
dec
call
cmp
popa
cmp
inc
test
add
mov
mov
ds
out
filds
xchg
mov
inc
loope
out
pop
dec
loope
push
xchg
rorb
sub
jl
sbb
add
out
ljmp
fisubrl
ret
sbb
mov
sub
pusha
outsl
jmp
test
mov
sbb
dec
add
pusha
add
mov
jg
mov
movsb
sahf
lods
mov
jns
js
js
adc
dec
push
dec
lea
outsl
cmp
and
loope
call
xor
add
mov
pusha
xchg
push
ljmp
cwtl
cmp
pop
push
adc
add
pop
push
xchg
mov
or
add
es
xchg
xchg
lea
xchg
loopne
ret
insl
cltd
dec
pop
mov
ljmp
or
xor
cmp
js
repz
adc
fisubs
pop
cmp
lcall
nop
je
inc
sbb
loope
push
add
scas
mov
push
bound
mov
fdivrp
push
or
adc
sub
push
imul
nop
jp
push
jb
push
and
cmc
jmp
into
xor
das
inc
arpl
cmp
ret
or
sub
jno
push
push
daa
repnz
out
xor
mov
sub
sbb
ret
aaa
and
jle
add
sub
jle
mulb
mov
jno
fldenv
cmp
sbb
test
jns
mov
xor
mov
movb
jmp
and
jb
xchg
push
mov
jl
lcall
je
inc
add
lock
enter
xor
adc
clc
mov
fadd
xor
mov
xor
lock
sti
jmp
push
enter
push
stos
insl
push
mov
cmp
add
push
lea
rolb
sbb
into
pop
inc
inc
dec
test
dec
dec
inc
and
push
andb
ds
push
enter
or
jecxz
cmp
cmp
sbb
push
push
lock
pusha
imul
or
add
inc
addr16
xchg
jmp
gs
inc
or
mov
push
pop
leave
cmp
sbb
xor
sbb
insb
rorl
adc
scas
xor
add
inc
pop
je
into
xlat
ret
xchg
rolb
cld
lods
mov
xchg
adc
push
test
loop
js
adc
and
add
mov
ffree
enter
sub
sbb
into
cli
adc
xchg
xor
inc
pop
fistpll
out
mov
add
mov
enter
inc
mov
sbb
push
insb
in
push
add
sbb
push
jno
push
nop
push
and
nop
or
test
popf
add
dec
push
inc
cmpsl
mov
and
cli
lahf
cmp
sub
or
mov
lods
mov
test
mov
xchg
inc
sbbl
mov
mov
das
adc
cli
mov
and
mov
das
sbb
xor
sub
inc
push
or
add
add
ljmp
pushf
sub
movb
adc
stos
or
rcl
mov
and
dec
insb
ret
cmp
ds
jo
out
adc
adc
jbe
push
fadd
adc
addl
mov
testb
shl
inc
or
adc
movsb
out
insb
and
mov
adc
clc
loop
push
and
dec
jbe
dec
pop
mov
test
test
movl
sbb
jge
mov
adc
daa
dec
pusha
sub
xchg
ret
add
lock
lods
pop
and
das
jb
rorl
popl
push
lea
adc
add
sbb
xor
andb
push
icebp
inc
popa
shll
test
add
pop
jp
jmp
add
js
popa
and
shrb
pop
daa
sbb
mov
add
les
fnstenv
mov
cmc
dec
pop
mov
cmp
mov
inc
fidivl
into
cwtl
ret
enter
test
or
test
ds
push
add
out
mov
rcrl
pushf
xchg
sahf
pushf
ror
add
bound
iret
mov
cld
test
psrlq
adc
cs
inc
loopne
mov
sub
or
push
fcmovb
jo
sahf
xchg
mov
pop
pop
xor
pop
cmp
outsl
ret
insb
sbb
jmp
mov
bound
call
adc
notb
xor
push
fs
push
loopne
or
sbb
decb
ret
aad
lock
and
xor
sbb
in
mov
pop
mov
addr16
jno
inc
mov
mov
or
or
dec
xchg
loopne
mov
rcrb
pop
sub
or
ret
xor
stos
and
addr16
push
push
inc
add
xor
xchg
rolb
pop
shll
js
push
stos
xor
movsl
mov
xor
loop,pn
pop
add
inc
lahf
addb
jne
jecxz
push
pop
cmp
add
sbb
ds
sub
cs
vphaddbw
rorl
adc
lea
je
je
sbb
adc
add
mov
jmp
fcmovb
mov
aam
das
adc
adc
into
sbb
rclb
idivl
sbb
enter
ljmp
jb
mov
lock
ja
push
push
sub
fcmovb
es
push
xchg
sbb
or
or
pop
das
mov
adc
sbb
loop
push
cmp
dec
jo
jge
outsb
sbb
outsl
inc
sbbl
testb
ss
out
dec
sbb
adc
lods
sbb
lods
stc
or
out
dec
inc
loope
cwtl
fsubrs
inc
pop
sub
icebp
es
enter
lods
sub
popl
rorl
sahf
and
add
pusha
or
or
pop
push
fcmove
and
or
mov
and
add
sub
loopne
cmpb
xchg
clc
and
sbb
or
jmp
dec
and
lock
mov
out
or
out
rorl
sahf
adc
js
imul
push
icebp
pop
movsl
or
push
sub
inc
add
rcrl
xchg
adc
add
fadds
xchg
push
insb
dec
movsl
and
mov
push
mov
mov
xchg
scas
adc
or
add
push
add
cmpsl
mov
mov
push
cli
daa
or
add
and
js
arpl
cmc
ret
jb
add
lds
js
sbb
adc
cld
mov
in
inc
mov
call
add
popf
mov
sbb
scas
jle
pusha
cwtl
andb
les
add
sbb
add
ret
push
pop
es
pop
repnz
fcmovne
sub
push
push
sub
push
inc
outsb
cmp
mov
jo
sub
jbe
fmul
add
and
iret
cmpb
cs
jo
mov
movb
rclb
and
je
xchg
cmpb
jae
aaa
mov
rcr
andb
movsl
sub
mov
lds
je
add
cmp
mov
cmp
and
inc
ret
xor
cmp
add
jmp
test
and
scas
sub
orb
add
fidivrl
mov
fsubrl
pop
jp
lret
dec
dec
loope
mov
push
nop
pop
outsb
adc
jnp
cwtl
pop
sub
sbb
sar
jo
call
jge
lds
xor
mov
inc
mov
sbb
imul
mov
rorb
test
in
and
aam
gs
jmp
add
and
fcompl
outsl
or
add
adcb
push
setp
repz
fisubl
push
loop
sbb
dec
cli
rolb
mov
daa
sbb
and
movsb
fadds
outsl
ljmp
es
dec
push
push
and
repnz
repnz
jge
in
repnz
mov
shll
or
jbe
dec
clc
mov
dec
lcall
test
data16
dec
or
pop
es
gs
lds
or
add
sub
fs
pop
inc
shlb
shrb
dec
mov
mov
mov
add
pop
push
xchg
in
fcmovnbe
adc
push
loopne
rorb
pop
or
add
mov
sti
pop
outsl
stos
pop
ds
push
xor
or
into
aam
push
je
loop
mov
sbb
popf
lods
aas
cmpsb
sbb
lock
lahf
movsb
loopne
cmp
inc
sub
and
mov
jge
pusha
inc
add
add
nop
mov
outsb
mov
adc
fdivp
cmp
mov
inc
call
adcb
and
sbbl
sbb
popa
gs
xchg
sub
pop
push
sub
adc
inc
dec
or
cli
dec
jp
pop
adc
and
pushf
add
mov
ss
mov
xor
test
test
cmp
xor
in
rorb
dec
and
fwait
rolb
in
ret
mov
mov
nop
or
inc
jnp
sub
dec
test
or
push
jecxz
test
or
sbb
push
dec
mov
js
mov
xor
mov
std
push
push
inc
jp
xor
dec
ret
xchg
dec
out
push
or
jns
add
stos
sarb
imul
loop
movsl
sub
or
outsl
cmp
pop
mov
mov
cmp
fists
js
inc
push
rol
xchg
push
mov
bound
rcr
cmp
push
cli
dec
popa
es
jp
dec
xchg
cli
mov
pop
pop
pop
pop
rol
sbb
hlt
pushf
push
adc
insl
in
mov
pop
sub
popf
sbbb
not
jmp
outsl
pushf
insl
push
pop
mov
popa
xchg
push
pushf
out
ss
rclb
add
xor
scas
mov
mov
xchg
mov
pop
rclb
bound
or
loop
andb
push
cli
pop
loopne
rorb
data16
arpl
test
sarb
stos
dec
dec
call
adc
or
or
rorl
sub
pop
sub
shll
mov
sub
pop
sbb
push
lods
clc
push
push
decl
add
dec
pusha
es
adc
jne
add
sbb
or
sbb
loop
clc
das
ret
add
js
push
push
leave
loop
xor
adc
xchg
pop
adc
inc
inc
dec
jo
push
icebp
int3
xor
mov
fsubrl
rclb
icebp
push
das
sbb
movsl
mov
mov
mov
movsb
popa
add
stos
cmp
sub
xor
push
jbe
stos
xor
or
arpl
mov
or
dec
mov
dec
dec
and
mov
sbb
pop
xchg
clc
adc
dec
rcll
ret
dec
and
sub
mov
push
fcompl
jmp
adc
sub
push
repz
mov
or
add
mov
rcll
jnp
dec
fsubl
iret
sub
rclb
sbb
add
sbb
lahf
nop
popa
mov
ret
and
xchg
adc
xchg
mov
xorb
js
aam
add
repnz
and
adc
or
lret
or
out
dec
fwait
inc
mov
push
out
add
sub
or
loope
dec
pop
les
push
mov
adc
lods
and
jne
add
pop
sub
jmp
push
shr
icebp
inc
jmp
movsl
test
shl
notb
xor
scas
cs
loope
enter
or
cmp
inc
push
pusha
adc
push
xchg
sbb
sbb
xchg
cli
nop
xor
dec
xor
add
movsb
aam
mov
pop
pop
enter
or
pop
xor
lret
lea
add
pop
or
nop
sub
jo
dec
arpl
add
mov
fucomip
or
push
add
loopne
call
push
pop
mov
enter
dec
xor
mov
mov
nop
xchg
mov
pusha
lret
addb
add
aad
ret
gs
sbb
orb
int3
movb
imul
mov
sti
adc
test
push
loope
push
push
sbb
xorb
inc
xor
mov
jle,pt
decb
scas
jno
pusha
pop
push
jl
loope
mov
leave
mov
add
pop
movsb
xchg
dec
ret
dec
inc
inc
sub
mov
loop
mov
adc
jle
push
jns
scas
pop
adc
xlat
fst
andb
or
stos
add
inc
insb
sub
mov
add
nop
push
xor
into
stos
push
lods
cmp
jp
js
jle
imul
dec
ss
adc
or
in
xor
ret
int3
loopne
jp
push
adc
sbb
add
stos
cmc
push
fiadds
into
adc
fisubs
fsubrl
ror
xor
or
stos
mov
ret
sbb
pop
pop
inc
in
sub
mov
cmp
xchg
lock
lods
lock
pusha
xchg
es
icebp
dec
push
adcb
push
into
add
ljmp
jle
mov
stc
ljmp
jb
mov
sbb
repnz
ja
adc
loope
js
sbb
mov
and
rolb
xor
call
or
aam
arpl
imul
xchg
leave
sar
cmp
jp
arpl
push
in
hlt
add
sbb
stc
push
mov
clc
push
xchg
inc
xchg
sbb
add
fs
inc
or
sahf
lret
sub
adc
and
jbe
dec
inc
loopne
xchg
inc
or
mov
and
xchg
inc
push
xor
adc
push
xorl
push
dec
sbb
lods
sbb
add
sbb
mov
xor
xchg
jnp
or
push
cwtl
cmp
pop
rcrb
sbb
xchg
hlt
dec
mov
jno
pop
jl
icebp
lea
adc
or
pop
jmp
push
mov
das
adc
add
inc
xchg
xchg
rclb
xor
push
stos
addb
jmp
loopne
mov
cli
or
pushf
and
or
or
and
jo
xchg
mov
lods
adc
adc
cmp
dec
aaa
xor
add
enter
jb
sahf
or
jmp
pushf
movb
inc
jmp
mov
or
das
push
xor
dec
ljmp
sub
int
je
xchg
clc
lds
push
xor
pop
sbb
cmpsb
jle
sbb
call
arpl
adcl
or
mov
sbb
pushf
int
les
adc
adc
popa
aam
cmp
mov
mov
sbb
lds
icebp
pop
sbb
dec
or
leave
nop
les
seta
andb
inc
sub
out
lock
inc
iret
xchg
push
fisubl
xchg
dec
loop
rclb
popa
sbb
push
sbb
or
sbb
cwtl
adc
xor
call
sbb
popa
insl
pop
cmp
inc
inc
bound
roll
push
or
out
fidivrs
and
movsb
andl
and
imul
shrb
inc
daa
xor
xor
add
xchg
cwtl
mov
lods
dec
lods
lods
cmp
push
push
js
rcl
push
subl
push
ror
xchg
xchg
xor
inc
jl
sbb
lods
adc
jp
jmp
and
mov
pop
mov
das
into
sti
scas
sub
and
jo
jecxz
ret
rorb
lods
je
sbb
sub
and
rolb
pop
ss
adc
sbb
mov
add
inc
xchg
and
mov
loopne
cmpsl
or
iret
and
ret
sbb
add
or
shld
in
ss
add
into
add
and
add
movsb
adc
sbb
sub
mov
testb
fisttps
aas
dec
xorl
or
ret
or
mov
adc
out
ror
rcl
xchg
inc
push
jecxz
ret
cmp
ds
sahf
xchg
pushf
adc
xchg
push
and
sbb
movsb
ret
add
xchg
shr
clc
cmp
ss
nop
mov
test
std
mov
movsb
pop
inc
xor
xchg
mov
dec
push
xchg
and
ljmp
xchg
push
mov
xchg
or
cli
enter
dec
or
fsub
enter
add
jl
inc
inc
jae
enter
je
and
mov
add
push
les
mov
cld
subb
sbb
pop
jmp
xor
hlt
push
adc
push
aam
enter
push
daa
adc
pop
je
pop
sub
pop
lcall
sbb
sarl
mov
xchg
inc
leave
adc
xor
pop
into
arpl
daa
sbb
les
sbb
push
mov
lea
faddp
or
mov
icebp
xor
sub
push
and
stos
sub
adc
dec
js
std
inc
mov
pop
and
pop
stc
negb
les
rol
cwtl
add
add
dec
mov
loopne
xchg
jo
cs
push
popf
add
repz
adc
adc
jbe
xchg
shlb
push
fstpl
je
sbb
push
fisttpll
nop
lock
les
inc
or
inc
jp
into
and
push
js
xor
jle
push
pop
sbb
jg
jp
loopne
cmp
pop
mov
sub
xor
andl
int
dec
ret
dec
repnz
adcl
mov
ret
pop
push
outsb
xor
adc
lods
adc
xchg
xor
es
scas
adc
pushf
or
arpl
xchg
add
inc
ret
push
int
add
cld
xchg
sbb
mov
loopne
adc
out
inc
das
outsb
adc
nop
lods
and
popl
jg
push
dec
insl
out
or
call
xchg
adc
cwtl
jb
adc
sbb
inc
sbb
addl
sti
pop
and
sbb
sbb
fs
xchg
cmp
push
add
call
push
push
movsb
mov
pop
pop
jecxz
ss
mov
imul
mov
ja
push
or
pop
jmp
mov
test
movsb
adc
dec
jmp
sub
sub
jne
sbb
dec
mov
aaa
sub
xchg
mov
push
mov
xchg
cmpsb
push
pop
or
inc
push
or
ret
cli
mov
pop
dec
inc
mov
cmp
push
cmp
mov
loope
cmp
out
ret
scas
add
xor
pop
loopne
add
xor
sbb
je
push
xchg
movsb
jp
lock
sub
lock
into
mulps
or
mov
add
lret
rcr
inc
push
popa
inc
orb
into
xchg
into
cmp
jbe
gs
mov
loope
hlt
cmpsl
pop
je
mov
and
or
cmp
jo
in
add
je
cli
mov
xchg
push
and
and
jo
mov
pushf
add
insl
pop
leave
lods
inc
cmp
out
sbbl
sub
movsl
orb
subl
dec
and
mov
inc
bswap
or
cmc
sbb
mov
inc
pop
mov
pushf
test
lods
adc
adc
or
and
lock
call
cmp
and
jne
movsb
rol
adc
lock
jmp
and
and
rcll
adc
fwait
leave
pushf
or
test
es
mov
mov
clc
sub
inc
arpl
jno
xor
xchg
add
mov
pop
cmp
xchg
add
push
sbb
cmp
mov
mov
lods
inc
jge
push
or
inc
mov
and
push
push
test
sbbl
fsubrl
pop
ret
inc
jp
stc
adc
sbbb
outsb
cmp
pop
mov
add
add
lock
jno
adc
xor
mov
sbb
fwait
lock
mov
ds
xchg
pop
ret
sbb
lret
push
cmpsl
and
cs
loope
xchg
ja
xchg
ljmp
jge
pop
fidivrs
mov
push
sbb
push
adc
scas
int
iret
adc
jo
xchg
jle
mov
or
pop
iret
cmpsb
push
add
test
sbb
mov
cmc
cld
push
or
fldenv
sub
ret
mov
xchg
loop
mov
subb
mov
mov
pop
pop
out
in
lods
mov
test
or
xchg
and
cmp
add
paddusb
call
pop
xchg
dec
add
pop
mov
bound
lret
pop
shrl
push
mov
dec
hlt
ret
negb
pop
loope
sub
push
sarb
dec
lods
dec
push
dec
or
mov
push
mov
add
push
movb
mov
push
in
and
cmp
mov
cmp
add
mov
jne
sarb
std
aaa
or
or
int
ret
mov
fsub
bound
xchg
mov
and
cld
sub
mov
adc
jo
enter
jmp
je
mov
popa
add
cwtl
stos
and
aad
jno
rol
sub
test
xor
cmp
push
rcr
mov
xchg
fnstcw
jp
insb
cmp
inc
loope
stos
jnp
add
adc
je
add
call
popf
sub
insb
adc
jno
and
je
das
jmp
add
add
lods
movlps
push
pop
jmp
pop
dec
cmp
dec
scas
mov
adc
inc
mov
xchg
pop
fld
adc
stos
rorb
pop
jno
call
xchg
fsts
leave
pop
mov
sahf
cmp
testb
add
mov
rcl
pop
daa
movsl
inc
sub
mov
mov
sti
cmpsb
xchg
fs
aam
fsts
fists
rol
ds
mov
or
andb
xchg
sbb
icebp
call
inc
pop
push
dec
xchg
cmc
je
rolb
jl
inc
xchg
pop
mov
add
or
or
cmp
ljmp
dec
pusha
aas
adc
ret
push
cmp
movsb
rcrl
fwait
adc
popf
ds
cmp
or
lcall
in
jno
and
daa
push
ljmp
popa
jb
cmc
add
jne
adc
push
data16
js
jo
mov
call
add
js
shrl
and
dec
push
sbb
xchg
pop
xor
jne
adc
push
cmpsl
stc
add
nop
inc
cmp
push
mov
dec
push
sub
pushf
adc
xor
xchg
xor
repnz
outsb
fld
sub
dec
movb
or
aam
add
xchg
lock
ret
add
scas
in
ds
sub
rcrb
add
ret
jo
inc
or
sub
adc
or
imul
rolb
xor
sub
sbb
xlat
inc
cmp
sub
push
sbb
push
and
or
sub
pop
sub
adcb
pop
dec
call
cltd
insb
test
push
dec
sbb
aam
pop
sub
inc
or
mov
sub
loop
sbb
cmp
adc
iret
and
inc
inc
or
ret
lock
shlb
jge
das
sbb
dec
sub
pop
rcrl
ljmp
xchg
pop
inc
pusha
dec
popf
mov
xor
loopne
scas
ds
push
inc
mov
mov
leave
mov
xchg
push
pop
xor
ret
mov
and
adc
mov
mov
mov
or
loop
aam
test
sbb
nop
pop
int3
push
lcall
sarb
loop
adc
sbb
pushf
dec
mov
aas
push
call
test
sub
inc
pop
std
cmpsb
pop
jecxz
mov
push
ds
lret
cli
jo
jle
ror
mov
and
adc
mov
loope
loope
push
nop
js
push
mov
in
mov
into
push
and
ss
sbb
ret
jp
or
pop
pop
mov
ja
lea
je
scas
rcrl
lret
lahf
mov
ret
dec
loope
std
mov
sti
and
mov
and
mov
pop
addl
xorl
mov
add
hlt
inc
ret
push
sbb
shrb
int
sbb
lds
sbb
jge
push
inc
jmp
adc
xor
out
xor
test
scas
es
lds
or
jg
fidivl
popf
add
les
and
xchg
mov
jno
lock
add
mov
sbb
cli
movsl
mov
mov
sbb
and
push
je
ret
clc
mov
xor
es
and
cli
inc
mov
pop
sub
xor
or
cli
nop
scas
jno
sub
and
lret
pop
inc
rolb
cmp
movsl
cmp
inc
leave
pop
jo
or
jns
outsb
mov
mov
test
add
clc
cli
and
clc
ret
sbb
mov
arpl
xchg
mov
scas
test
push
aam
pop
push
pop
pop
adc
sub
xor
cmp
or
out
cmpsb
xor
dec
test
jl
mov
aam
xor
jl
push
decb
sarb
mov
mov
in
pushf
pop
push
das
sbb
call
sbb
pop
or
lods
into
test
sbb
movl
aad
push
xchg
lock
rolb
push
fsubl
jp
gs
es
jno
sub
lock
inc
push
outsl
push
adc
loopne
addr16
icebp
repnz
cld
pop
add
cmp
push
mov
xchg
mov
js
and
adc
pusha
inc
dec
add
jb
loope
gs
imul
add
mov
insb
into
enter
jne
sbb
aad
xchg
daa
cmpsb
into
sbb
pop
loope
dec
mov
push
xor
sbb
in
jmp
push
mov
mov
daa
sub
ret
rcrl
rcrb
mov
xor
fstpl
dec
je
test
js
divb
mov
pop
sbb
ret
adc
fcomi
sbb
dec
cmp
pop
roll
mov
xchg
gs
add
lea
mov
enter
imul
xor
and
or
jnp
lahf
push
test
mov
push
icebp
inc
dec
call
jge
dec
call
rclb
cmpsb
xor
adc
xchg
pop
or
mov
sbb
fwait
rol
aam
rcll
mov
gs
addb
je
pop
leave
and
or
inc
iret
ror
shll
loopne
jp
mov
pop
add
jne
rclb
add
iret
test
xchg
rcrb
rol
test
in
jecxz
push
push
daa
movsb
mov
call
insb
add
sub
adc
add
jmp
adc
fwait
mov
and
andb
jb
jl
loope
in
adc
inc
call
in
pop
mov
or
push
dec
mov
mov
sbb
ss
push
xor
ljmp
mov
sub
mov
mov
ret
or
scas
push
rcr
sbb
add
dec
nop
cmpsb
ret
cmp
pop
test
ret
push
ljmp
add
into
shlb
pop
xorb
add
imull
bound
add
js
mov
gs
push
stos
bound
dec
rclb
mov
adc
xor
and
adc
test
repnz
xlat
cmp
sbb
xor
adc
adc
mov
cmc
or
adc
mov
push
push
xchg
mov
shlb
push
not
cli
adc
test
pop
cmp
add
out
cmpsb
dec
roll
mov
inc
or
shrl
xor
mov
je
stc
push
or
js
repnz
dec
pop
adc
rclb
jmp
or
mov
sub
ret
sbb
outsb
outsl
dec
xchg
xchg
adc
add
arpl
jne
test
push
lods
not
lret
es
adc
mov
clc
loopne
pop
adc
adc
pop
js
inc
dec
mov
pop
dec
cld
rorl
clc
sbb
sub
mulb
or
push
loope
or
ds
push
movsb
lods
adc
push
into
push
hlt
xor
mov
jecxz
push
loop
jno
test
push
movsb
mov
mov
pop
rcl
pusha
stos
fadd
dec
shrb
xlat
xchg
pop
in
and
sub
cmp
test
mov
push
xchg
std
inc
lock
jne
mov
mov
mov
test
dec
mov
jb
shll
mov
rcll
aad
xor
pop
call
xorb
fs
cmp
adc
fsubs
jl
sbb
out
xor
xor
jns
adc
dec
cmp
test
sbb
lock
push
cmp
sbb
inc
retw
pop
sbb
sub
inc
fiadds
pop
pop
test
pusha
pushf
cwtl
adc
wbinvd
fdivr
push
sbb
xchg
jmp
dec
sub
addr16
test
sbb
add
adc
mov
jmp
mov
sub
imul
cwtl
add
mov
outsb
fwait
xchg
cli
inc
enter
xor
xchg
daa
push
mov
ret
jp
lock
xchg
xchg
and
push
xor
test
pusha
mov
ret
or
push
dec
xor
sub
lods
daa
ljmp
insb
test
inc
and
add
push
xchg
add
xchg
stc
cld
add
sbb
cmp
mov
or
or
adc
push
movsb
xchg
xor
hlt
testb
xchg
lock
inc
lret
cltd
and
imul
loopne
mov
shlb
adc
and
movsb
push
dec
add
add
or
inc
or
lahf
test
push
adc
pop
addr16
xlat
pop
adc
out
xor
mov
cltd
test
imul
mov
mov
add
push
aad
shlb
mov
and
add
mov
xchg
push
sub
lcall
xor
cmp
shrb
loope
test
mov
ret
pop
insb
pop
or
mov
imul
add
inc
cmpsl
cmp
jb
and
inc
sub
push
push
aam
xchg
ds
in
dec
ret
sbb
add
sbb
or
rol
and
push
ret
frstor
popa
inc
mov
xchg
lea
sbb
or
add
add
ret
push
and
add
popf
cmpsb
dec
add
inc
shlb
adc
add
lds
mov
imul
pop
or
jmp
pop
lcall
leave
mov
loop
cmp
aas
imul
push
inc
stos
jno
xor
cli
mov
rcrb
pop
cwtl
push
xor
add
ds
lcall
leave
or
and
dec
adc
dec
xchg
pop
insl
inc
test
movb
sub
nop
mov
pop
clc
int
mov
xor
pop
push
insb
and
hlt
lcall
sbb
sub
test
rcrl
xchg
mov
rcrb
lea
mov
or
les
pop
add
adc
pop
sbb
adc
iret
jge
sub
call
and
jecxz
scas
adc
jmp
jo
inc
sub
mov
xchg
xchg
xchg
xchg
mov
ljmp
rcl
sub
cmp
notb
push
jp
xor
or
sbb
jl
nop
or
andl
xchg
les
jle
xorb
outsl
scas
or
xchg
pop
mov
adc
loopne
pop
fdivs
jge
cwtl
and
inc
ljmp
or
enter
insl
or
jmp
pop
add
into
loope
or
imul
out
dec
sub
add
push
add
popa
mov
ljmp
rolb
xchg
dec
adc
loopne
cmpsl
sub
mov
nop
pusha
fs
pop
ret
jbe
push
sub
xor
test
add
pop
pop
mov
inc
xchg
sbb
arpl
nopl
mov
mov
std
xchg
push
clc
or
jne
cli
cli
push
mov
inc
or
outsb
nop
aam
in
or
or
mov
adc
xchg
loopne
scas
mov
dec
inc
push
enter
and
and
xor
inc
subb
mull
xor
sbb
jo
push
jle
xchg
scas
fwait
xchg
nop
inc
and
adc
test
dec
sbb
aaa
add
dec
inc
push
pop
jo
les
or
fs
ja
cli
add
in
sub
and
and
adc
sbb
sub
test
adc
and
add
stos
and
stc
movsl
push
dec
inc
lods
rcrb
and
mov
cmpb
sbb
add
mov
mov
pop
int
jmp
jp
and
add
cltd
push
shrb
ret
adcb
adc
or
or
adc
jl
pop
dec
mov
hlt
insb
sub
shll
push
add
jne
mov
add
mov
addr16
clc
ret
adc
jge
adc
ficoms
push
jge
dec
cmpsb
pushf
adc
xchg
mov
xor
or
fadds
cmpsb
adc
clc
mov
ret
fs
jb
lods
imul
rclb
sub
xchg
lcall
hlt
stc
inc
fistpll
into
xchg
push
pushf
inc
cmp
pop
out
cmp
xchg
mov
scas
xor
sub
pop
and
pop
inc
xor
jno
cmp
je
add
mov
and
xchg
cmp
dec
adc
or
sub
mov
or
mov
rol
faddl
insb
lods
push
cmp
mov
rclb
ljmp
push
adc
popa
add
test
push
push
pop
sub
inc
xorb
and
outsl
arpl
pop
sbb
adcb
mov
mov
pop
xchg
mov
pop
cmp
dec
inc
and
mov
icebp
pop
adc
lock
push
and
insb
xbegin
jo
or
or
js
or
push
test
movsb
cmpsl
mov
mov
dec
sub
inc
inc
add
xlat
or
push
pop
fs
leave
xchg
fsts
nop
ds
add
add
mov
add
shrb
lea
repnz
adc
push
jbe
jle
and
or
push
push
dec
pop
adc
aaa
into
imul
and
mov
test
mov
mov
mov
pop
loop
lcall
ret
xchg
dec
cld
push
xor
or
push
addr16
mov
or
pop
or
stos
fnstcw
push
fistl
lcall
int3
add
ret
and
sub
in
nop
adc
adc
xchg
dec
and
sub
or
shlb
xchg
jne
test
cwtl
xchg
xchg
xchg
ljmp
cmp
mov
sahf
mov
shlb
imul
push
mov
add
ljmp
xchg
loopne
adc
imul
sbb
push
ret
pop
lret
scas
add
pop
enter
pop
fwait
leave
jmp
test
sub
cmp
or
or
loop
pop
mov
cmp
adc
sbb
xchg
out
shll
xor
xchg
sbb
push
in
jle
aad
sbb
sbb
push
push
adc
sub
push
psubsb
into
push
xchg
jmp
xor
sub
neg
add
ret
or
push
sahf
enter
addb
rol
xchg
clc
push
mov
gs
rclb
push
fbld
dec
inc
test
cmpsb
mov
push
push
cltd
add
pusha
pop
nopl
xor
push
test
adc
add
mov
lock
data16
and
cmp
jp
or
lret
push
sbb
icebp
adc
adc
sub
adc
jle
jp
push
or
dec
ret
xor
mov
sahf
fs
cwtl
into
push
test
fildll
adc
rorl
adc
add
xchg
pop
sub
test
adc
cmp
sbb
fdiv
and
jge
xor
fs
jle
ljmp
pop
cmp
movsl
and
call
pop
xchg
xor
mov
mov
jecxz
or
dec
mov
xor
pop
lock
fs
inc
in
shlb
sbb
push
lock
push
pop
pop
mov
or
adc
push
push
adc
cmp
or
ljmp
nop
and
icebp
push
test
pop
xchg
out
and
jp
adc
aam
cmpsl
mov
add
test
pop
dec
aam
cmp
jecxz
sbb
outsl
xchg
xchg
or
ss
dec
cmp
and
push
pusha
adc
movsb
push
add
lods
mov
ret
in
ds
lods
fistl
out
dec
stos
sub
out
andb
bound
mov
pop
and
or
adc
push
cmp
dec
enter
stos
mov
cmp
or
mov
or
sbb
loop
ss
push
rolb
push
ss
cmp
bound
icebp
test
fists
pop
mov
dec
lcall
out
cltd
pusha
sbb
lds
push
movsl
pop
sbb
pop
pop
push
inc
cmp
mov
adc
call
pusha
rclb
xchg
xchg
pop
xor
mov
push
icebp
jmp
cmp
pop
push
jmp
bound
jns
mov
mov
inc
popf
or
or
mov
hlt
imul
push
sbb
cmp
mov
je
imul
cwtl
or
xor
adc
mov
sbb
mov
icebp
call
dec
or
loope
xchg
mov
add
in
and
sarb
sbb
ret
push
pop
insb
xchg
cmp
pop
test
dec
outsb
cmpsb
pop
lock
adc
inc
pop
or
jg
call
adc
js
sub
add
sbb
lcall
imul
jns
andb
sbb
mov
sahf
pop
pop
lock
call
add
sbb
adc
sbb
push
stos
aaa
int3
dec
test
add
cli
rcrb
test
sbb
out
fsubrl
push
cmc
lods
test
jmp
inc
aam
or
and
loop
dec
nop
mov
imul
pop
xchg
stc
je
in
incb
sahf
hlt
push
inc
sbb
add
pop
stos
rcll
or
movsb
or
push
and
std
cli
lret
sub
sbb
push
xchg
pop
pop
adc
cmp
xor
stos
inc
inc
pop
or
mov
repnz
rcrb
gs
mov
jb
aas
add
pop
xor
inc
xor
outsb
add
inc
mov
andl
or
cmp
xor
dec
mov
adc
mov
mov
je
imul
out
sarb
scas
pop
out
jge
xchg
ret
inc
ret
es
ret
add
jmp
mov
and
enter
add
imul
or
sbb
sub
pop
dec
fs
xchg
xor
add
sbb
out
push
inc
dec
fwait
dec
xchg
addl
es
ljmp
sub
push
adc
bound
sub
cmp
add
je
xlat
nop
adc
adcb
inc
sbb
or
sub
sub
pop
pop
mov
mov
ftst
push
data16
ret
dec
push
or
jp
push
inc
outsb
shlb
insb
lock
jp
test
add
and
mov
xor
add
add
add
stos
pop
loopne
add
or
dec
adc
lds
int3
inc
inc
add
loope
pop
mov
loope
int3
sbb
xchg
sbb
or
sub
add
stos
mov
or
xor
jp
mov
movsb
hlt
sbb
xchg
add
cmp
or
fbstp
enter
mov
add
xchg
adc
mov
call
notl
or
rorb
xor
mov
ljmp
push
aad
or
je
daa
pop
das
scas
dec
sbb
insl
enter
and
add
pop
ds
cmp
cmp
imul
mov
add
or
xchg
sbb
xor
fcoml
add
rorb
fs
sbb
rcl
push
cmp
inc
daa
push
cmp
loope
sbbb
inc
es
loop
ror
push
adc
pop
xchg
jno
aaa
shrb
pop
imul
adc
xorl
dec
loopne
cmp
pushf
mov
mov
xchg
subb
rorl
shrl
sbb
add
sbb
mov
adc
movsl
leave
or
mov
pop
adc
sub
jl
pop
add
mov
sub
add
iret
xor
leave
add
les
push
sbb
push
iret
les
sbb
add
add
inc
rolb
pushf
inc
bound
pop
aad
sarl
out
leave
ljmp
das
sub
or
insb
mov
filds
or
inc
cwtl
cs
or
stos
push
push
sbb
loope
psubusb
or
dec
push
or
jmp
rcll
bound
shlb
sub
xor
jb
and
mov
sar
addb
xchg
cmp
int
loop
add
clc
add
add
inc
push
inc
js
mov
pop
sbb
dec
sbb
push
fucomp
cli
push
cli
xor
ror
adcb
inc
xchg
les
nop
or
push
shll
add
sub
pop
fdivrs
xchg
js
sbb
pop
addb
cmpb
pop
sbb
adc
lea
adc
dec
inc
flds
pop
push
addl
cs
lods
lea
dec
dec
and
push
jns
cmp
inc
jle
add
mov
stos
dec
test
cmp
jo
mov
rclb
shlb
inc
sub
icebp
inc
mov
adc
cmp
and
xor
fisttpl
mov
xor
jno
pop
jl
enter
jbe
push
pop
les
lods
pop
pushf
mov
add
add
pop
push
aad
and
inc
sbb
xchg
outsb
sub
loop
ljmp
paddsb
mov
loop
fs
mov
push
sbb
inc
cwtl
push
cmp
outsl
or
xor
sub
adc
xor
or
dec
adc
jmp
movsb
lock
mov
jns
addr16
inc
inc
inc
xor
arpl
cmpsb
dec
cmc
sub
adc
sbb
inc
rcrl
or
in
push
es
jmp
movsb
add
xor
es
test
add
push
bound
push
nop
fmuls
js
cmp
pusha
in
fwait
pop
hlt
dec
fdivrs
adcb
scas
and
icebp
jne
pop
jl
in
rclb
popa
mov
loop
push
rcrb
jbe
je
or
fisubrl
sbb
pusha
mov
loope
add
loopne
js
add
inc
jl
in
pop
cmc
movsl
jle
out
adc
mov
and
sahf
dec
popf
xchg
and
shr
push
rcrl
mov
aaa
out
or
mov
or
xorb
mov
inc
jbe
ficoms
dec
and
cmp
mov
xchg
push
hlt
fcmovbe
aaa
push
adc
xor
addr16
xor
add
sub
add
rolb
js
lret
xor
jl
cmp
sub
push
and
mov
push
insl
fistpl
js
lock
les
and
sbb
adc
adcb
push
mov
int3
fadds
mov
adc
pop
xchg
lds
cmpsl
aaa
xor
mov
add
mov
xor
xchg
inc
inc
popa
test
bnd
dec
ljmp
inc
inc
or
scas
and
add
pushf
bound
or
push
mov
mov
cmp
cmp
pusha
and
adc
icebp
xor
dec
test
hlt
xchg
sbb
add
les
das
call
add
mov
lock
pop
sbb
popa
out
dec
sub
sar
mov
mov
mov
and
mov
adc
into
mov
gs
mov
adc
and
xchg
les
out
clc
test
and
sbb
add
popa
adc
push
out
mov
xchg
push
push
adc
jne
sti
or
push
push
mov
je
add
ret
cmp
mov
mov
testb
js
fsubrl
push
pop
push
push
and
and
add
insl
mov
adc
stc
push
loop
mov
ret
lods
in
adc
ret
push
mov
rclb
push
inc
mov
pop
pop
pop
xchg
insl
fcomps
dec
arpl
xchg
jl
add
pop
inc
mov
dec
inc
aad
or
lods
and
inc
jl
ficoml
jb
dec
add
scas
mov
lcall
mov
dec
dec
pusha
inc
jne
sbb
ljmp
and
je
pop
push
inc
sbb
leave
cli
xor
test
out
les
ljmp
push
add
loop
js
lea
stc
add
data16
pop
add
pop
out
aam
xlat
paddsb
jbe
dec
outsl
sbb
ds
xor
pop
xor
mulps
cmpsb
mov
repnz
icebp
call
leave
dec
pop
clc
test
mov
xchg
xor
lock
test
push
or
shll
lahf
inc
or
ss
cmp
fcomi
test
js
push
sub
jne
orl
ljmp
sbb
popa
stc
xor
sub
adc
cs
pop
add
mov
scas
pusha
inc
and
xchg
out
adc
push
data16
or
push
and
es
lea
movsb
lcall
xchg
push
popf
gs
ret
je
pushf
pusha
jmp
test
adc
xlat
shlb
add
movsl
and
mov
and
js
and
lret
xchg
cmc
dec
lret
mov
test
add
or
pop
adc
dec
mov
adc
adcb
push
or
cmp
popf
test
dec
ret
pop
icebp
xor
xchg
dec
mov
push
cmpsl
jns
or
inc
sbb
test
data16
jne
mov
and
add
inc
and
arpl
sub
enter
or
sbb
or
mov
js
aam
pop
sbb
mov
mov
mov
adc
lods
dec
or
sub
sbb
push
push
std
rcll
leave
sub
scas
adc
daa
push
nop
adc
mov
scas
in
imulb
lods
sbb
sbb
push
xor
push
adc
test
push
inc
cmpsl
movsb
sar
cmpsb
jns
lcall
cltd
cli
and
repz
dec
xor
out
lea
sbb
outsl
sbb
scas
add
ljmp
ror
inc
add
and
xchg
pusha
xchg
jle
lea
pop
rcrl
pop
inc
sub
or
gs
lret
add
imul
or
and
je
push
mov
loopne
in
add
xchg
mov
jb
roll
icebp
lods
add
mov
ret
dec
popa
inc
inc
loope
xchg
pop
xorb
daa
call
insl
jne
pushf
or
pop
movsl
andl
pop
test
ret
inc
pop
outsl
rcrl
call
ret
xorl
roll
lea
push
pop
add
lock
rcll
add
xor
pop
add
dec
mov
push
insb
add
add
inc
adc
ljmp
mov
test
ja
test
add
pusha
jecxz
inc
mov
adc
cmpl
cmc
rcrl
in
sub
lea
js
and
mov
ret
mov
or
mov
js
push
fchs
pushf
sbb
or
push
adc
fiaddl
mov
rolb
mov
inc
movsb
aad
in
sahf
sbb
xor
dec
cmc
stos
ret
mov
dec
add
inc
call
enter
mov
pop
shlb
sbb
movsl
icebp
or
mov
enter
pop
push
or
rcrl
dec
cmc
add
or
and
jle
dec
mov
xor
and
es
jmp
push
aam
pop
pop
cli
adc
xchg
pushf
xor
add
add
lret
adc
insl
dec
lods
es
push
cmp
lahf
fcomps
out
and
push
or
jmp
sub
aaa
mov
cmc
pop
push
sub
mov
jg
jmp
adc
dec
call
pop
call
les
add
or
fcomps
scas
and
add
stos
push
or
mov
adc
fs
rcrl
jne
mov
inc
popa
ss
adcb
cmp
xchg
aam
push
xorb
insb
sbb
push
xchg
pop
sub
sbb
clc
jle
ljmp
push
mov
sbb
cmp
lea
xor
jo
rcll
jmp
pusha
shrb
pop
js
cmpsl
je
pop
repnz
pop
adc
jle
xor
dec
popf
dec
es
pop
mov
cmp
ret
adc
loop
mov
xchg
xchg
pop
flds
xor
fisubrs
xchg
jne
push
clts
or
test
sbb
xchg
cmp
pop
jae
xlat
push
and
outsb
mov
push
cmp
push
lar
inc
stos
add
sub
test
and
bound
mov
dec
or
orl
lods
jle
shlb
cmp
hlt
je
sbb
das
adc
push
ljmp
roll
push
cmp
push
and
xchg
cmp
test
repnz
jbe
pusha
ja
sbb
movsl
or
daa
sbb
out
jg
add
icebp
sub
bound
pop
and
iret
adc
punpckhdq
lret
pop
pop
cli
and
pop
filds
cs
mov
lods
mov
add
push
and
xor
xchg
in
or
popf
xorl
adc
xchg
aas
sub
lcall
pushf
inc
fnstenv
data16
mov
inc
mov
mov
popl
pop
pop
xchg
aad
movsb
daa
rcrb
dec
or
xchg
add
pusha
push
push
mov
lret
repnz
es
add
stos
inc
sub
ret
testb
subl
into
les
rsqrtps
ret
add
out
dec
pop
aam
sbb
dec
sbb
mov
ror
and
jbe
cmp
dec
or
push
mov
mov
or
jle
mov
arpl
inc
sahf
hlt
sub
push
arpl
repnz
mov
or
jp
sub
jmp
adc
ljmp
mov
push
leave
scas
pop
adc
sbb
mov
enter
or
pop
pop
ljmp
pop
test
add
or
and
adc
pop
in
sub
or
lock
dec
cmp
mov
cwtl
push
jo
jmp
fsubs
rorl
sar
xor
daa
andb
shlb
or
push
repnz
and
inc
nop
arpl
and
jl
inc
adc
mov
mov
dec
rclb
xchg
fistpll
inc
sbb
hlt
or
sarb
ljmp
rorl
add
mov
inc
sub
mov
popa
lods
xchg
insb
in
rclb
repnz
push
pop
loopne
data16
xor
cli
rcrl
fsubl
add
add
xor
xor
adc
xor
add
cmp
test
nop
mov
hlt
icebp
leave
test
leave
jge
ljmp
rclb
or
dec
mov
push
clc
adc
xor
ror
pop
mov
test
or
addb
cli
xor
cmpsl
push
out
sbb
cwtl
enter
jl
sbb
insb
shrb
pusha
and
sbb
xchg
and
xor
jne
sbb
sbb
xor
push
loop
sub
in
shlb
pop
daa
push
imul
push
rcrb
or
xchg
sbb
add
mov
sbb
and
add
les
das
or
dec
cmp
mov
test
lea
nop
and
test
pop
mov
adc
imul
lock
xchg
subl
jbe
mov
push
or
pop
jno
pop
call
add
jb
lock
outsl
lret
push
add
les
add
rorb
xchg
test
push
outsl
js
scas
and
lock
push
mov
repz
mov
fsubl
or
adc
sub
scas
inc
dec
ror
aaa
sbb
xor
repnz
mov
gs
leave
push
mov
stos
add
ljmp
dec
jb
mov
std
jg
or
data16
movsb
jne
pop
aaa
add
dec
push
sbb
inc
dec
mov
test
sbb
cmp
push
push
adc
cmc
arpl
sub
ret
dec
inc
push
pop
jns
mov
pop
push
push
into
mov
and
rcl
insb
mov
test
ror
sbb
leave
mov
mov
xor
xor
dec
loope
jp
xchg
and
inc
cmp
imul
pop
adc
sub
ror
dec
sub
cwtl
sbb
lahf
push
lahf
cmp
add
xchg
adc
sub
pop
sbb
dec
inc
or
inc
call
xchg
sbb
push
lcall
lods
mov
or
mov
nop
pushf
test
xor
je
dec
fs
push
sub
add
xchg
js
inc
xchg
jmp
adc
sub
fisubs
imul
out
add
dec
pop
cmp
cmpsb
push
adc
push
and
jge
out
adc
popa
or
aam
push
push
data16
or
mov
lret
cmpsl
out
and
dec
fistl
cmpsb
notb
sub
pusha
and
nop
dec
cmpsl
int3
and
sti
sbb
xorb
movsb
add
mov
cmp
xchg
xor
arpl
pop
adc
jne
add
jecxz
enter
or
or
or
mov
mov
call
mov
inc
push
je
add
je
sbb
jo
jb
call
mov
imul
sub
mov
pop
es
int3
out
ret
into
mov
adc
in
ss
cli
and
test
push
and
call
repnz
push
cltd
lods
adc
sarb
dec
push
daa
pushf
inc
xchg
aam
dec
insb
adc
lea
adc
jle
add
es
or
not
jae
adc
les
pusha
inc
adc
cmp
sbb
ret
mov
sub
enter
jo
push
mov
sub
pop
adc
pop
push
cltd
movsl
push
pusha
insb
cmpsl
cwtl
and
add
xor
mov
or
cmp
push
mov
or
add
and
mov
test
pop
mov
lcall
mov
jmp
add
or
cmp
xchg
and
dec
lds
cmp
inc
sub
repz
cmp
lahf
push
cmp
add
sti
jo
xchg
xor
xor
add
into
sbb
adc
xor
pop
push
adc
bound
push
sub
push
lahf
cmp
xor
insb
push
inc
cltd
cs
jecxz
imul
popa
mov
add
mov
pop
pop
arpl
sub
add
ret
and
xchg
scas
pop
clc
add
push
addb
adc
and
iret
push
or
inc
jnp
add
mov
scas
mov
xchg
sub
xchg
dec
adc
add
push
add
jmp
loopne
lahf
sbb
add
add
add
sub
test
ret
or
lock
rcll
test
stc
mov
fistl
mov
int3
rcl
adc
cmp
dec
pushf
daa
mov
nop
outsb
sbb
rorb
js
outsl
add
pop
add
fmul
jo
stos
push
mov
cs
pop
adc
lret
scas
test
cmp
push
sub
sbb
mov
ficoms
je
inc
shlb
sar
ss
mov
xchg
push
ljmp
or
push
pop
cld
pop
dec
jl
xor
mov
jns
rcr
sbb
call
inc
js
cld
gs
jne
add
adc
into
push
push
pop
mov
cs
dec
xor
fbstp
push
sub
sub
in
les
sbb
pop
and
xor
or
lods
ret
add
movhps
jp
or
jno
inc
orl
pop
mov
push
push
push
adc
jl
cs
movsb
adc
push
repz
dec
add
add
inc
inc
pop
mov
mov
or
out
push
mov
pusha
jge
mov
mov
and
setno
je
andb
ja
or
pop
mov
cmc
inc
jmp
enter
adc
xchg
inc
nop
aam
js
pop
or
or
jp
enter
or
adc
mov
into
add
sub
mov
xchg
nop
mov
push
push
or
mov
inc
stos
sub
rol
jle
pop
sbb
enter
pop
push
add
inc
sub
addb
sbb
xchg
hlt
hlt
rorb
mov
cmp
loopne
rolb
mov
push
cmp
pop
sbb
ds
stc
addr16
cmpsl
mov
pop
push
xor
inc
dec
lret
adc
js
call
enter
insb
or
mov
inc
repnz
stos
jo
inc
add
mov
addb
aam
pop
inc
fiadds
loope
mov
or
cmpb
cmp
pand
loop
xchg
aas
sahf
add
mov
dec
push
xchg
mov
ret
sub
adc
jb
daa
dec
scas
and
leave
ljmp
mov
lds
adc
and
stos
xchg
mov
pop
pop
adcb
dec
or
iret
faddl
push
sub
or
pop
das
ror
test
add
adc
out
and
ret
mov
xchg
cs
and
iret
mov
sbb
rorb
pop
pusha
sub
cmc
sbb
push
mov
lods
lock
sbb
mov
cmpsb
xchg
push
testl
mov
inc
into
test
add
mov
cltd
je
xchg
jle
or
loope
push
add
mov
loop
push
outsl
leave
sub
xorl
outsb
jp
push
jne
inc
cmc
xchg
movsl
cli
cmpsb
daa
mov
popf
sbb
rolb
inc
daa
sbb
mov
js
mov
enter
sbb
jp
push
push
pop
fidivrl
sub
push
cmc
push
rorb
lea
dec
sbb
shr
sub
mov
sbb
mov
dec
lock
imul
in
adc
shlb
mov
mov
mov
add
jle
daa
js
pop
mov
lods
roll
jno
cmp
mov
mov
js
fcmovu
scas
out
loop
js
mov
fiadds
add
lea
add
push
and
or
shlb
dec
xchg
xchg
xchg
push
pop
pop
mov
push
fbstp
bound
sbb
sbb
or
dec
push
adc
push
sbb
pop
add
js
sub
pop
xchg
fisttpl
push
pop
sbb
mov
jp
pop
movsb
out
js
pop
pop
fs
push
and
wbinvd
mov
pop
and
mov
add
dec
fsubr
popa
sbb
jns
add
pop
or
xchg
dec
jge
aam
call
loope
sar
ds
dec
push
mov
lcall
stos
test
inc
push
leave
fwait
call
les
inc
dec
clc
ret
push
sub
sti
dec
jle
xchg
push
sub
push
add
rcrb
les
inc
cmp
mov
rclb
or
sbb
inc
or
clc
push
pushf
push
bound
mov
rolb
nop
jp
andb
loope
enter
mov
mov
sub
mov
mov
addl
cwtl
clc
mov
addl
and
add
push
es
and
pop
adc
dec
sbb
jns
add
por
xchg
enter
adc
nop
enter
call
or
inc
mov
pushf
pop
mov
or
enter
add
dec
mov
or
and
inc
inc
cmp
imulb
and
adc
dec
or
enter
jno
push
bound
or
jo
dec
add
push
push
push
dec
enter
sbb
or
sbbl
sarl
xchg
dec
aam
loop
add
or
pop
arpl
bound
pop
cli
movsb
pusha
jmp
mov
push
mov
or
scas
mov
and
shll
clc
adc
jbe,pn
mov
push
lret
daa
sub
lret
rclb
mov
inc
push
testl
adc
je
shld
sbb
jmp
sub
test
je
test
lret
pop
xor
sbb
fdiv
push
and
popa
and
xchg
or
les
push
pop
sbb
xor
adc
cmp
es
lods
cmpsl
mov
or
insb
insb
dec
je
pushf
xchg
in
aad
or
in
and
sbb
lret
fs
mov
sbb
jp
cmovle
xorb
sub
xchg
add
push
lods
cmp
dec
mov
or
pop
adcb
sbb
addr16
dec
inc
pop
inc
lahf
adc
sub
push
sbb
xchg
das
add
xor
sbb
adc
sarl
das
mov
inc
lea
or
cmpsl
or
scas
adc
inc
js
add
jle
cmp
push
and
or
into
add
and
or
mov
cmp
sbb
popf
lahf
or
mov
dec
data16
dec
mov
fcmovu
insb
lods
xchg
add
aam
aam
scas
jle
mov
lcall
adc
sub
fwait
push
stos
mov
imul
movsb
dec
adcb
sbb
sbb
jl
mov
outsb
roll
or
jno
and
add
rol
or
adc
adc
jb
pop
dec
inc
add
mov
nop
faddl
or
sub
hlt
and
fidivrs
pop
stos
lret
js
jecxz
mov
into
dec
push
push
jmp
testl
addr16
adc
movsl
add
or
neg
movsl
sbb
jno
xor
shll
add
dec
inc
ficompl
push
mov
adcl
cmp
push
mov
and
xchg
test
shlb
inc
je
or
mov
mov
jno
mov
and
pop
dec
sbb
sbb
jmp
inc
sbb
xor
mov
cmp
push
add
mov
outsb
add
dec
sbb
xor
pop
ret
inc
cwtl
cmc
sbb
push
aad
jg
xchg
addb
and
jo
pop
in
imul
sub
daa
cs
push
je
clc
mov
scas
ret
or
adc
mov
pop
sbb
mov
adc
cmp
push
mov
out
mov
push
inc
loop
pop
pop
push
cli
xchg
enter
push
inc
es
push
mov
mov
fucomip
adc
or
or
out
das
mov
push
adc
inc
inc
enter
imul
loop
push
pop
mov
shll
dec
sbb
push
adc
and
cmp
scas
push
and
pop
insb
inc
inc
test
call
mov
push
andb
loopne
inc
popf
lods
and
ds
orb
or
mov
jl
push
cmovb
icebp
sub
push
cld
aam
jp
inc
outsl
lret
sbb
jp
cld
mov
imul
add
pusha
mov
and
aam
add
pop
addb
push
jecxz
arpl
dec
addr16
addr16
lret
enter
add
lret
cmp
dec
xor
mov
cwtl
and
aaa
xor
subb
push
cli
mov
or
or
dec
add
push
les
and
pop
mov
sbb
movsb
or
out
pop
call
xchg
fldt
cli
sub
fxch
mov
adc
in
sbbb
call
sub
cmovle
pop
mov
shlb
mov
pop
push
adc
cwtl
sbb
ljmp
sub
dec
jae
dec
xor
ret
push
add
mov
lahf
lcall
mov
xchg
xor
or
call
clc
adc
addb
xlat
fists
mov
and
inc
pop
xor
mov
pop
inc
nop
icebp
ret
push
rcll
mov
cmc
adc
inc
aaa
test
and
ret
adc
rcr
adc
and
xor
mov
scas
bound
pusha
rorb
int3
mov
fdivs
or
sarl
or
faddl
rorb
and
pusha
bound
and
movsb
shll
fwait
or
icebp
loopne
daa
adc
aaa
or
jmp
pop
xchg
movb
outsb
test
js
inc
rclb
or
jmp
stc
xor
popf
mov
xor
subb
or
cltd
adc
rclb
leave
xchg
adc
ret
aaa
enter
pop
gs
mov
xchg
andl
in
push
xchg
jecxz
sbb
cmpsb
loop
push
push
mov
int3
sub
rorb
or
popa
xor
or
mov
rcr
jne
lock
mov
sbb
jnp
mov
mov
mov
push
aaa
and
or
ret
clc
mov
mov
mov
movsb
xor
nop
popl
or
sbb
adc
adc
jb
lahf
push
es
add
clc
xchg
add
push
das
dec
or
test
orb
add
in
mov
mov
cmp
mov
rolb
jg
sub
pop
mov
and
adc
ret
add
sbb
jno
mov
lods
cmp
addr16
push
pop
imulb
ret
dec
imul
aaa
push
push
dec
pop
push
sbb
dec
sbb
pop
mov
inc
out
add
mov
in
push
cmp
inc
loopne
mov
lcall
inc
sbb
inc
loopne
shlb
lea
sub
push
sbb
adc
sub
sbb
and
clc
push
xor
push
pop
adc
add
rclb
or
lock
push
mov
push
or
dec
out
lret
adc
adc
lods
mov
and
dec
repnz
out
push
add
insl
inc
iret
fadd
lock
andnps
nop
mov
adc
xchg
jge
sahf
adc
imul
sarl
sub
rclb
lods
mov
sahf
pop
cmpsb
out
jge
push
rcrb
push
cmc
jo
push
cwtl
repnz
dec
iret
lcall
repnz
xchg
xchg
popf
ret
int
inc
pop
cmpb
or
inc
pop
ja
add
nop
and
lea
sarb
or
xchg
add
loopne
push
rolb
inc
push
arpl
inc
and
sbb
sbb
insb
dec
pop
push
add
daa
fiaddl
xchg
and
loope
aaa
inc
loop
das
lods
cmp
call
bound
lea
push
pop
push
fs
and
inc
push
into
cli
movsl
es
sub
or
push
inc
mov
imul
sub
or
pusha
cmp
xchg
ss
and
or
cmpsb
dec
or
mov
pusha
sbb
rol
into
xchg
add
pop
cmc
adc
sub
add
adc
add
aaa
sbb
sarl
dec
jle
loopne
sbbb
jecxz
mov
dec
push
pop
stos
sbb
mov
adc
add
pop
repz
out
dec
int3
dec
test
sbb
or
cmp
inc
mov
scas
push
adc
adc
scas
fbstp
loopne
into
addb
lods
pop
imul
ja
xchg
or
test
scas
adc
loopw
rcrb
je
adc
testb
je
cld
jns
adc
mov
or
mov
inc
push
or
xor
cmp
hlt
shr
fs
pop
sub
push
lahf
xor
pop
sbb
ds
sbb
std
rolb
and
enter
ljmp
fnstenv
push
icebp
out
mov
cltd
clc
and
mov
lret
xchg
xchg
dec
lds
fstps
es
and
aas
add
jmp
stos
xchg
dec
cmovle
notb
mov
fsubr
call
mov
adc
xrelease
mov
mov
xor
pop
and
fcompl
dec
cmp
xor
jle
fistpl
stos
dec
sahf
punpckhdq
dec
pop
in
arpl
push
sbb
add
pop
push
ror
out
and
adc
push
lock
lods
test
push
jmp
cmpl
test
or
mov
je
inc
outsb
insl
add
int
or
mov
push
in
or
pop
jecxz
pop
add
add
adc
and
je
rolb
aam
lock
je
loope
mov
adc
pop
xor
mov
cvttps2pi
pusha
nop
adc
adc
negb
loope
add
lods
inc
clc
xor
mov
adc
jno
movsl
xchg
sarl
mov
aas
push
inc
shlb
rol
cmpsl
dec
adc
stos
or
test
sub
push
push
popf
add
inc
mov
test
pop
arpl
ret
sub
adc
inc
add
pusha
js
and
pop
push
inc
outsl
adc
stos
pop
fdivs
cmp
testb
les
addb
xchg
inc
cmp
out
notb
cmpsl
xor
outsb
or
push
fadds
dec
cmp
add
or
lods
cltd
test
or
nop
and
xchg
xor
jl
sbb
add
sbb
add
or
add
das
jnp
xchg
inc
rcrb
sbb
popa
ret
aam
lret
xor
mov
test
xchg
sbb
or
loopne
mov
add
mov
popf
les
adc
sbb
pusha
aam
aad
add
pop
mov
cld
enter
ds
rorb
int3
fcmovnbe
dec
cmp
or
xchg
es
lret
lock
inc
or
and
and
out
fdivl
sub
lret
cmp
int3
mov
insl
mov
and
and
push
es
adc
push
mov
in
mov
mov
rcl
mov
sub
add
mov
pusha
das
mov
and
aaa
test
out
rcl
mov
scas
movsb
adc
jmp
dec
lret
jl
mov
push
jb
std
and
cmp
ss
dec
mov
fcomps
add
dec
push
push
dec
sub
cmp
adcb
aas
test
stc
rclb
mov
sbb
push
xchg
mov
mov
or
sbb
jo
js
leave
shll
cmp
lods
test
in
inc
nop
mov
pusha
lret
sub
xor
loopne
rol
addr16
lahf
dec
js
shl
pop
inc
dec
sbb
xchg
sarb
rclb
flds
js
or
or
jnp
cwtl
xor
pop
or
test
popa
lea
mov
imul
mov
cli
lods
sub
cmp
or
test
gs
xor
adcl
sarl
inc
adc
ret
mov
mov
xchg
xchg
and
lea
mov
insl
test
mov
or
rorl
insb
xchg
or
add
sub
lret
test
jno
loopne
ret
imul
nop
sub
test
xchg
orl
mov
add
mov
push
dec
dec
pop
pop
sbb
fs
mov
cmc
adc
ja
jp
clc
insl
inc
sbb
sub
shrb
js
insb
push
sbb
inc
xchg
and
mov
dec
arpl
mov
xchg
outsl
sbb
ret
or
xor
inc
mov
movsb
xchg
movsl
movsb
mov
cwtl
push
loope
or
loope
or
es
dec
pop
jnp
or
outsl
cmp
or
mov
stos
je
jl
xchg
inc
and
or
sub
adc
adc
dec
adc
sub
push
arpl
cmp
adc
clc
mov
and
leave
mov
push
cmp
jb
pop
add
or
jae
adc
adc
pop
lods
mov
push
repnz
add
inc
rcrl
arpl
lret
cmpl
notl
imul
ror
ret
sbb
jno
imul
sub
addb
dec
add
or
test
xchg
xchg
cwtl
push
mov
mov
push
adc
jo
adc
rcrl
push
pop
sub
sahf
shrb
sub
clc
add
sbbl
bound
testl
imul
ljmp
xor
es
sbb
les
sbb
rolb
test
and
or
jecxz
shll
add
sbb
and
sbb
xor
push
dec
jb
addr16
es
and
lcall
inc
adc
lret
sub
pop
or
xor
cmp
sub
xor
ljmp
or
push
cmp
rolb
mov
and
stos
fmuls
inc
sub
or
push
adc
dec
pushf
into
adc
inc
xorl
shlb
xchg
mov
aam
sbb
add
add
sbb
ror
inc
or
push
add
xchg
pop
icebp
mov
and
call
ljmp
ret
add
dec
cmc
mov
je
jp
sbb
adc
lret
dec
add
aam
fcmovnb
push
pusha
push
jmp
pop
lods
add
nop
into
bound
sbb
and
mov
inc
loope
jecxz
sbb
and
or
xchg
je
icebp
xor
fldl
bound
mov
add
add
mov
leave
sub
jp
jo
fdivl
insb
js
pop
test
fs
shrb
mov
fimuls
imul
daa
xor
and
adc
fcmovbe
roll
test
daa
add
aaa
add
sbbb
pop
add
fimull
arpl
rcl
cmc
jo
out
xchg
cmp
jp
imul
sbb
pop
xorb
push
rcrb
and
push
or
or
add
enter
in
pop
sbb
adc
add
xchg
pop
das
subl
or
icebp
inc
sub
cmp
dec
or
and
pop
mov
mov
call
test
add
iret
or
stc
popa
xchg
cs
mov
pusha
mov
shr
jo
sahf
in
call
ja
inc
or
inc
enter
daa
leave
pusha
dec
mov
js
adc
test
push
insl
jmp
xor
sbb
pushf
pusha
adc
sbb
test
mov
loop
in
fwait
mov
mov
je
lea
xchg
mov
xor
xor
out
loopne
or
inc
mulb
jmp
pop
dec
and
add
fsts
mov
push
mov
test
aam
rcr
nop
aam
rolb
inc
roll
pop
outsl
call
icebp
push
inc
ja
add
pop
mov
xchg
push
ds
mov
adc
push
lea
ret
mov
add
or
jmp
xor
sbb
aam
and
add
mov
add
stos
xchg
and
mov
mov
cmpsl
add
mov
mov
dec
loopne
add
test
fdivs
bound
fistpll
pop
outsl
jb
mov
and
add
jnp
sub
push
xchg
mov
jmp
push
mov
lods
cmc
or
sbb
push
sbb
or
mov
cmpb
dec
mov
inc
js
call
push
test
jno
fs
lods
dec
lods
arpl
pop
add
loop
mov
enter
sub
and
lods
or
push
xor
pop
scas
nop
and
ja
scas
fisttps
popa
ret
dec
push
push
out
in
adc
jb
aad
lea
sub
loope
adcl
sub
inc
cmp
lea
rorb
in
loopne
mov
adc
add
roll
cmpsl
insb
inc
orb
add
scas
push
sbb
mov
pop
nop
fiaddl
sti
inc
inc
dec
pop
xor
pusha
mov
pop
aas
hlt
sbb
insl
mov
jo
add
push
daa
call
adc
or
push
mov
xlat
rolb
cwtl
push
daa
adc
rolb
jo
data16
dec
sub
mov
pop
fisubs
inc
adc
adc
lods
xchg
xchg
jp
adc
rorl
clc
add
dec
mov
add
push
cmp
out
imul
adc
pop
xor
loope
mov
mov
movsb
add
jg
adc
ret
mov
pop
mov
jbe
cmp
xor
inc
pop
or
lock
std
inc
mov
push
mov
and
fildl
imul
movsb
out
repnz
adc
shlb
sbb
xor
out
pushf
jne
loopne
in
mov
mov
ss
fdiv
or
add
dec
or
xchg
jo
add
dec
and
push
and
ret
in
lret
nop
mov
inc
sbb
mov
mov
rorl
inc
imul
outsl
adc
adc
test
enter
mov
mov
hlt
push
data16
adc
jg
jns
cli
lods
shl
xchg
xor
or
dec
jo
pop
mov
in
pop
or
pop
xbegin
sub
mov
test
ret
dec
loope
pusha
xorb
adc
inc
dec
and
xchg
js
rclb
mov
add
insb
add
ret
or
stos
dec
or
lods
insl
mov
inc
ds
addb
cld
mov
add
or
pop
gs
nop
clc
imul
add
add
add
adc
ficoms
mov
mov
cs
pusha
sbb
cltd
sbb
je
add
sub
loope
test
add
mov
add
adc
rcrb
imul
mov
lret
or
or
addb
or
pop
mov
xlat
xchg
cmp
rcrb
cmp
fcmovb
pop
jp
xlat
leave
inc
popa
inc
rolb
push
sub
pop
push
insl
jecxz
lods
and
jp
jnp
ds
xchg
mov
lahf
xchg
daa
adc
add
add
or
ror
inc
pop
dec
jmp
mov
fsubrs
lahf
push
addl
dec
jecxz
pushf
xchg
test
or
adc
xchg
jne
mov
push
clc
mov
push
or
cmpsb
popa
ds
push
mov
add
cmp
mov
xchg
xor
or
cwtl
add
add
add
outsb
sahf
push
aam
push
push
inc
jb
movsb
xor
fs
or
adc
add
int3
out
xor
loope
ss
loop
imul
stc
or
andb
fimull
adcb
mov
popl
dec
lahf
rclb
repnz
cmp
jge
jg
subl
cmp
mov
js
xchg
lret
repz
inc
pusha
push
mov
mov
roll
push
push
cli
mov
xchg
mov
mov
sub
xor
test
cmp
pop
pop
add
push
pop
andl
gs
mov
lods
xchg
xchg
mov
add
cld
cltd
lock
push
pop
add
adc
in
sub
cmpsb
xchg
and
cmpsb
addl
xor
adc
dec
es
lret
or
into
cmp
jl
test
sub
add
fs
or
push
or
cmc
sub
add
mov
add
mov
pop
imul
inc
xchg
addl
xchg
xor
mov
xor
lcall
or
test
pop
push
pop
xchg
mov
dec
or
test
and
or
hlt
cwtl
mov
inc
pushf
repnz
add
enter
push
out
add
ret
jl
mov
arpl
or
and
in
fsubl
mov
test
or
adc
sbb
pop
or
sbb
in
xchg
add
push
mov
and
mov
pusha
or
test
cmpsb
xchg
adc
push
or
or
xchg
xor
mov
pop
nop
outsl
sbb
jno
sahf
xchg
aaa
movsl
jmp
xchg
cmp
ds
inc
dec
outsl
xchg
pop
inc
push
shlb
ss
push
and
pusha
dec
lods
cmpsl
xchg
and
test
movb
cmp
sbb
jo
sahf
scas
sbb
sbb
sub
or
add
pop
sub
dec
cmc
xor
or
dec
stc
xlat
add
out
inc
pop
rol
cmpsb
jo
test
xchg
jmp
pop
or
int3
pop
adc
and
pop
loopne
popa
push
pushf
jle
add
enter
inc
mov
test
or
jne
add
xchg
rorb
sub
cmp
adc
jmp
or
xchg
cmp
inc
cltd
add
pop
mov
sti
xchg
cmc
or
dec
int3
or
add
mov
or
adc
push
pop
ljmp
ret
fcmovnb
outsb
inc
and
dec
loope
sbb
lret
std
cmpsb
lds
push
ljmp
fisttpl
std
inc
xor
daa
loopne
sub
popa
push
daa
ljmp
aam
inc
sbb
mov
or
dec
andb
add
push
xchg
test
insl
adc
popa
add
mov
mov
sbb
cmpb
push
push
dec
push
ss
dec
in
jns
addb
mov
adc
and
jl
mov
bndstx
add
outsb
xor
hlt
lea
push
mov
ljmp
adc
sbb
mov
or
pusha
mov
lret
dec
mov
ret
movsl
jno
sub
add
pop
mov
adc
mov
jne
sbb
adc
dec
inc
mov
add
subl
or
pushf
or
pop
pusha
movsl
outsb
mov
stos
sarl
shll
dec
fsubs
ss
and
dec
test
adcl
pop
shrb
pop
push
cmp
mov
pusha
and
mov
sub
push
and
or
or
jmp
shrb
and
xchg
sbb
push
leave
roll
sbb
adc
add
push
sbb
sub
add
pushf
cmp
ret
sub
mov
sarb
dec
pop
and
fdivr
ret
adc
das
mov
xchg
lock
hlt
popa
cmpsb
mov
sbb
ret
dec
add
push
inc
fmuls
push
cld
stos
add
aaa
push
sub
lds
and
dec
mov
ja
jle
add
sub
mov
bound
jl
rorb
push
inc
aad
loope
adcl
push
out
jno
dec
add
dec
adc
cmp
jnp
inc
push
pusha
and
bnd
add
sbb
and
clc
lock
push
inc
test
and
mull
scas
lods
mov
adc
sbb
xchg
sub
pop
mov
lds
sub
shlb
inc
adc
lret
loope
sub
rolb
cmpsb
or
mov
inc
or
adc
ror
imul
lods
inc
andl
or
call
adc
dec
xor
leave
cs
add
sub
ret
sub
js
or
mov
and
add
sub
mov
pop
rcrl
lret
gs
in
cltd
imul
pop
push
mov
lret
push
add
and
movl
sub
ret
push
pushf
mov
pop
addl
xchg
es
xchg
xor
mov
cs
cld
hlt
leave
adc
inc
or
inc
mov
jbe
and
and
cmp
sbb
add
rorl
in
pop
scas
push
xchg
xchg
inc
js
inc
sbb
cmpsl
adc
leave
inc
dec
int
mov
ds
xchg
and
das
ret
dec
ss
stos
xchg
xchg
inc
xchg
push
push
inc
bound
sahf
push
lret
adcl
xchg
pop
dec
outsb
iret
and
gs
imul
imul
add
loop
orps
lock
add
shrl
and
mov
or
pop
pop
sbb
rclb
mov
testb
movb
arpl
inc
xchg
mov
jg
ret
arpl
ret
sbb
rcrb
daa
jmp
sub
js
inc
mov
lock
mov
sub
int3
clc
arpl
xor
or
addb
sahf
sub
sbb
dec
cmp
jp
add
and
mov
push
adc
mov
adc
add
fs
push
adc
call
and
dec
and
or
dec
loope
sbb
and
movsl
fmuls
adc
xor
aam
add
mov
mov
or
xchg
xchg
and
or
or
pop
stc
daa
sbb
sub
rorb
cmc
mov
sub
jp
insb
int3
cmp
push
xchg
mov
mov
cmpsb
add
adc
out
push
lock
pop
pop
inc
pop
pop
sub
push
cmpsb
xor
pushf
xor
mov
mov
das
sbb
or
sbb
test
cmpsb
push
pop
cmp
into
ja
inc
ret
imul
lock
xor
sub
add
sbb
cmp
cmp
mov
stos
ds
push
popa
lods
pop
inc
leave
or
xchg
outsb
sbb
cmpb
lods
xchg
stos
orb
push
mov
push
mov
jno
adc
mov
nop
mov
mov
sub
in
inc
rsqrtps
add
inc
adc
rorb
pop
pop
cmp
sub
adc
movsl
ret
push
movsl
enter
hlt
sub
and
sbb
int3
jle
pop
mov
dec
popa
ret
popf
test
faddp
lret
addb
add
bound
mov
js
dec
sub
popa
dec
mov
stos
call
xor
sbb
or
andb
push
fimuls
gs
sbb
inc
add
jge
or
or
pusha
gs
mov
pop
fldt
mov
push
in
sbb
iret
dec
push
ljmp
fnstcw
cld
call
in
jle
enter
adc
cmpps
or
shll
fcoms
push
lret
out
pop
leave
xchg
repz
insb
stos
add
and
in
push
mov
addb
push
mov
sbb
inc
xor
sub
rcrb
jb
lcall
es
mov
xorb
cmpsb
ret
test
push
jo
inc
pop
lret
lock
adc
cmp
fs
loope
ret
js
popf
scas
scas
rol
jp
les
nopl
test
pop
nop
xchg
sbb
rclb
dec
and
imul
pop
jmp
sbb
lahf
adc
sub
dec
xchg
add
mov
test
or
jg
jno
int3
pop
insb
sbb
xchg
add
xor
stos
call
add
sub
ret
sbb
or
adcl
adc
test
mov
inc
bound
dec
lret
pop
xor
sub
and
movsb
test
xor
cmp
inc
rolb
add
jmp
cmp
test
or
add
fwait
jno
sbb
imul
and
add
push
sbbb
push
push
lea
mov
jl
dec
cs
pop
test
or
call
push
cmpsl
int3
movsb
insb
mov
ds
orl
sub
jmp
xchg
adc
lods
orb
add
in
dec
or
rcl
dec
mov
mov
mov
mov
repnz
ja
gs
test
dec
nop
inc
adc
sarl
xor
push
cs
pop
addb
out
ret
push
mov
mov
dec
rol
call
test
or
or
sbb
push
loope
push
shlb
lock
push
jge
lret
mov
popf
mov
lods
xchg
mov
sbb
dec
loopne
fstps
sarl
ss
adc
mov
pop
push
mov
pusha
subb
cmp
jmp
dec
pusha
lods
lods
scas
or
pop
addr16
enter
dec
pop
fwait
orb
mov
loope,pn
cmp
mov
xor
xor
fwait
push
push
pop
imul
mov
and
ss
jo
jp
lret
cmpsl
adc
xchg
lock
repnz
or
les
cmp
clc
in
js
add
push
dec
add
icebp
or
mov
push
cmp
cli
call
mov
or
xchg
addl
test
add
rolb
pop
inc
sbb
or
jbe
ret
sahf
ss
sub
icebp
or
xchg
mov
or
add
xchg
xchg
push
mov
xchg
jbe
shl
dec
dec
cmp
or
cmc
mov
lret
adc
bound
or
pop
xor
sbb
push
fcompl
cmpsl
jo
loop
jl
pop
push
mov
inc
add
add
cwtl
jb
mov
inc
aam
in
adc
ror
les
push
stos
xor
out
ds
sub
test
xor
push
adc
push
or
jne
pusha
shr
inc
sbb
idiv
push
movsb
mov
sbb
push
sbb
pop
mov
mov
shlb
cltd
xchg
dec
push
inc
xchg
inc
enter
push
and
mov
sbb
xor
addps
cli
xchg
loopne
rcll
xor
out
adc
xor
add
cmp
sarb
loope
loop
cmp
test
bound
lahf
inc
shrl
push
imul
jo
sbb
add
add
int3
arpl
jmp
jbe
or
mov
and
das
dec
inc
xor
pop
fisubrl
dec
inc
lock
or
jp
xchg
add
push
bound
fcompl
fildll
mov
cmp
test
push
rcrb
test
and
ljmp
ljmp
xchg
sbb
aam
jo
pop
xlat
loope
sbb
mov
loopne
mov
test
aad
add
dec
lahf
cwtl
and
push
push
rcrb
pop
les
push
inc
cmp
mov
stc
pop
dec
push
and
add
sbb
mov
cmp
movsl
imul
fbld
xchg
push
les
inc
lods
push
jle
out
add
add
cmc
ss
add
scas
push
xlat
enter
pop
or
xchg
cs
adc
xchg
xchg
dec
pop
jmp
ret
or
sbb
sub
xchg
test
jb
and
cmp
inc
dec
jo
andl
or
xchg
dec
dec
adcl
push
es
movsb
pushf
fwait
movsb
push
aad
stos
call
push
ja
stc
into
and
dec
popa
sub
in
push
fcom
rcll
cmc
mov
outsb
cld
add
push
repnz
clc
add
sbb
xor
jecxz
add
lcall
mov
mov
ds
dec
add
xor
addl
cltd
dec
ds
add
sub
pop
cmpsb
sbb
test
jmp
pop
pop
es
add
dec
popa
popf
gs
pop
dec
test
cli
adc
pushf
push
or
sub
inc
adc
enter
mov
iret
sub
xor
jl
test
hlt
add
mov
jle
add
pop
add
add
push
sub
adc
lods
mov
unpckhps
xor
push
rcrb
cmp
cmpsb
dec
and
adc
mov
inc
and
and
or
push
mov
das
or
daa
add
add
inc
pop
inc
or
rclb
sbb
cmp
pop
sbb
cltd
xchg
inc
imul
dec
mov
add
loopne
cmpsl
mov
pop
push
sub
pop
xchg
cs
jae
or
iret
push
and
mov
outsb
mov
add
test
or
loope
cld
sbb
movsl
inc
cmp
ss
movsb
sbb
loop
sub
mov
sti
push
push
cs
and
shlb
cmp
pop
adc
jmp
adc
or
mov
cmpsl
push
insb
mov
ljmp
js
sub
iret
scas
dec
adc
push
pop
mov
push
sbb
or
imull
push
loope
div
in
nop
cwtl
pop
ljmp
mov
jmp
sbb
push
mov
or
adc
sar
pop
inc
pop
mov
mov
mov
mov
data16
cmc
add
into
mov
ret
cmp
iret
aas
scas
add
jg
lock
push
jp
mov
pushf
idivb
mov
pushf
jecxz
add
shlb
scas
push
into
orb
add
or
sub
dec
push
jo
decb
mov
inc
addb
mov
notb
or
or
pop
add
push
enter
or
add
mov
out
sbb
pop
push
test
lar
jecxz
inc
inc
inc
rcrl
mov
jb
cmp
insb
in
jmp
ljmp
xor
loop
xor
sbb
dec
mov
into
clc
sbb
adc
or
fmul
dec
dec
xchg
add
push
fadds
and
inc
or
pop
inc
mov
cmp
icebp
popf
sub
xor
out
jbe
pusha
sub
les
xor
adc
daa
leave
dec
dec
pop
and
je
stos
or
stos
cld
jmp
sbb
adcb
fbstp
or
pop
popl
aam
sbb
inc
popf
push
stos
aam
xchg
mov
aad
sbbl
orl
xor
pushf
add
js
xor
mov
and
sbb
roll
sbb
sbb
cs
inc
lods
push
test
jmp
je
sub
mov
popf
aas
popa
push
adc
ljmp
dec
jge
dec
sti
mov
icebp
arpl
inc
and
popa
xor
cmp
mov
movsb
lret
lods
add
dec
dec
mov
xchg
jno
push
pop
dec
or
cmp
rolb
je
ror
pop
xchg
or
dec
push
mov
sbb
add
push
rcl
mov
daa
jne
or
std
jg
cwtl
or
mov
push
gs
push
ret
in
push
clc
xor
test
testb
mov
ds
jb
mov
and
xchg
test
mov
mov
add
push
sub
ja
xor
pusha
xchg
sub
add
lret
pusha
icebp
adcb
or
dec
xor
in
fcompl
mov
sahf
dec
jecxz
jle
add
sbb
xchg
push
jecxz
mov
add
mov
and
lea
add
mov
bound
push
and
xor
sbb
into
push
adc
push
xor
stos
jnp
pushf
stos
adc
mov
inc
add
jns
mov
jne
loopne
add
lods
ret
or
cwtl
fcmovu
lea
and
mov
call
call
dec
rclb
push
lock
imul
sbbl
sub
lods
shrb
inc
enter
or
or
fcmove
movsl
xor
inc
cmp
mov
hlt
test
adc
add
cli
ret
add
leave
xor
test
and
dec
push
cwtl
push
mov
xor
inc
mov
divl
mov
scas
int3
mov
movsb
push
and
int3
leave
test
movsl
add
in
mov
push
add
subl
roll
orl
lods
jmp
sbb
aam
data16
test
dec
adc
jno
fcom
mov
adc
int3
add
add
xor
loope
aaa
xor
in
mov
sti
pusha
scas
test
es
dec
push
subb
movsb
cltd
dec
adcb
arpl
mov
shrl
sbb
xor
sbb
or
mov
inc
jp
xor
inc
call
adc
xchg
roll
dec
out
loopne
add
in
mov
cmpsl
or
add
lea
xchg
sbb
mov
push
add
jno
lods
pop
stos
aaa
loopne
hlt
or
or
sub
je
or
in
fidivl
add
or
sbb
and
pushf
enter
push
scas
lods
push
ss
test
add
jecxz
adc
adc
arpl
add
mov
call
and
add
mov
pop
ljmp
negb
rcrb
pusha
mov
call
push
pop
xor
in
call
sub
aaa
mov
xor
adc
or
jbe
pop
xor
fdivrs
push
inc
push
mov
and
push
sbb
xor
sahf
inc
sarl
push
and
lock
aaa
mov
gs
add
icebp
sbb
ret
jp
pop
add
nop
jp
lock
jp
nop
lret
repz
lret
sub
mov
push
xchg
dec
adc
popa
cmp
outsl
and
mov
sub
sbb
or
loope
sbb
repnz
ss
xor
push
cmp
cltd
sarb
loope
addb
in
ss
xchg
or
scas
fsubrl
push
xchg
xor
test
enter
jo
xchg
popf
pop
pushf
mov
jge
jbe
enter
es
cmpsb
add
mov
adc
shl
sbb
loopne
rorb
lock
pop
dec
clc
or
jmp
testb
xchg
push
aas
adc
call
mov
pop
es
bound
jge
mov
jo
adc
jae
ds
adc
iret
lock
fstpt
inc
xor
push
xor
push
popf
inc
aam
push
jmp
dec
rcl
mov
dec
test
dec
arpl
daa
addl
push
and
nop
jb
test
insl
loopne
in
lock
xor
and
fs
and
outsb
subb
add
or
add
dec
cli
or
adc
add
test
icebp
push
sbb
enter
mov
sub
and
xchg
push
loopne
add
cmpsb
or
xchg
adc
xchg
lock
ret
pop
div
fildl
or
inc
xchg
mov
cmp
xchg
sbb
rorl
push
push
lahf
and
and
sbb
or
fs
nop
stos
shlb
popa
das
mov
aaa
lods
pop
dec
xor
xor
or
pop
push
dec
jmp
inc
fiadds
nop
push
mov
cli
jnp
shr
inc
sbb
add
add
int
pop
add
add
xorb
sub
or
and
pop
sub
mov
mov
es
sub
cli
jecxz
xor
lahf
cs
test
cmp
sbb
xor
sbb
pop
pop
xchg
das
sub
jbe
mov
fistl
and
and
adc
mov
or
mov
cmp
or
insb
add
dec
adc
add
aaa
jo
xor
test
push
sahf
dec
sbb
inc
add
pushf
mov
mov
sub
jmp
adc
mov
mov
or
fildl
arpl
test
sbbl
enter
sbb
sub
dec
xor
push
xorb
addr16
ja
lock
roll
flds
push
mov
iret
adc
cmpsl
sbb
mov
add
fldt
and
sbb
jecxz
inc
lods
adc
enter
xor
clc
adc
icebp
lcall
les
jmp
icebp
jo
add
pop
pop
and
mov
add
inc
jo
add
adcl
out
je
push
or
ljmp
push
mov
negb
dec
jl
lock
inc
test
inc
sbb
cmp
dec
sbb
adc
ror
xchg
and
ljmp
xchg
out
add
sahf
mov
jae
lds
mov
xor
addl
push
push
leave
ljmp
inc
or
and
mov
mov
sbb
mov
add
sub
adc
nop
add
loopne
xchg
pop
nop
push
add
imul
sbb
push
cmp
ret
or
dec
xchg
arpl
adcb
mov
xchg
inc
xorb
pop
out
es
and
fwait
subb
jo
or
ja
adc
adc
rclb
pop
insl
mov
out
leave
aam
setb
mov
push
les
addl
sub
jo
push
loopne
das
and
push
push
and
popa
and
fisubs
je
pusha
movsb
int3
sbb
dec
add
sbb
andl
dec
push
add
adc
or
mov
hlt
inc
or
push
jnp
js
ret
adc
cmp
dec
pusha
loope
lret
fcom
rcrb
sub
or
pusha
xor
rolb
adc
push
pop
std
ret
fcoml
loopne
repnz
push
cmc
repnz
in
dec
ret
xchg
lods
ret
addl
add
xlat
jae
xor
mov
int
adc
inc
xchg
and
push
aam
out
movsl
mov
icebp
sub
popa
stos
enter
pop
ficompl
repnz
adc
push
mov
xchg
xchg
loopne
es
xchg
shl
dec
roll
mov
dec
test
mov
iret
rclb
adc
testl
jg
cmp
sub
add
cmp
jecxz
xchg
cmpl
push
push
xchg
or
out
gs
mov
ss
repnz
pop
or
aas
push
clc
test
lods
aam
cvttps2pi
adc
ret
pop
cltd
lret
sub
jo
pushf
inc
nop
movsl
mov
ror
push
pop
iret
ret
test
push
arpl
cmp
jb
adc
sbb
add
bound
pop
inc
add
lret
fcmovnb
movb
cmc
push
dec
xabort
lret
pop
popf
jo
mov
mov
mov
lcall
and
sbb
fdivl
dec
xchg
addb
rclb
adc
in
movsb
add
add
pop
arpl
sub
sbb
adc
ss
mov
jge
dec
outsl
sar
mov
pop
inc
cmp
in
mov
cmp
or
js
push
jp
lahf
push
je
movsl
push
and
add
je
jo
mov
cltd
sti
stos
pop
sbb
adc
sbb
fmuls
pop
dec
dec
inc
enter
and
les
cli
fs
cmp
xchg
rcrb
sbbb
xor
lret
inc
xchg
subl
sahf
lock
cmp
sbb
push
daa
inc
mov
out
xchg
adc
dec
jns
es
mov
mov
mov
adcl
inc
sbb
xor
ret
add
int
jge
in
push
es
enter
inc
shll
les
rclb
pop
sbb
je
inc
jns
pop
rcrb
scas
icebp
test
pop
rol
rclb
loopne
outsl
xor
icebp
sub
push
pop
adc
xchg
rorl
rolb
mov
enter
or
cmp
pop
mov
ds
pop
cmpsb
push
pop
inc
lret
loop
rclb
mov
pop
in
xchg
clc
cmp
inc
push
and
mov
into
jle
ret
pop
pop
cmp
les
movsl
add
push
pop
mov
mov
dec
add
sub
mov
push
mov
mov
sub
lock
jmp
jns
inc
js
inc
mov
insb
test
into
lock
xchg
ds
xchg
push
or
fisubs
js
js
push
ret
pop
push
nop
jge
sarl
popa
inc
leave
es
and
pop
add
in
add
adc
adc
mov
ret
scas
fcoms
jno
loope
jno
or
adc
testb
hlt
test
mov
lods
add
movb
dec
dec
cld
push
enter
pop
push
xor
js
fbstp
sbb
xchg
cmp
adc
or
lock
insb
ret
jno
add
sub
adc
clc
popf
in
add
inc
cmp
in
add
jo
sub
jo
xor
lods
movsl
insb
sbb
xor
inc
lcall
test
jno,pn
cmp
mov
cmp
dec
pushf
xchg
jp
mulb
nop
jae
out
mov
adc
imul
ljmp
push
add
leave
arpl
dec
push
jecxz
mov
aaa
aam
clc
dec
mov
jmp
jo
les
dec
jno
sbb
mov
ds
test
cltd
dec
mov
mov
xor
ret
les
xchg
dec
mov
cmpsb
mov
xor
lret
test
mov
inc
rcrb
adc
mov
push
and
add
scas
pushf
in
or
cwtl
or
imul
dec
out
and
mov
js
push
xor
pop
push
jle
and
fwait
jg
fnstsw
xor
pop
and
or
dec
mov
popa
sbb
add
nop
jb
test
push
sub
or
push
lret
xor
inc
and
dec
cmp
scas
xchg
mov
add
sbb
cwtl
push
adc
mov
popa
imul
and
or
pusha
pusha
cmp
mov
cmp
ss
aam
shl
add
mov
sbb
or
shrb
loop
inc
rclb
ret
adc
int3
xchg
dec
sbb
test
sbb
data16
push
cs
fstl
movsb
rorb
mov
lock
aam
andl
es
pop
clc
jno
rorl
scas
add
inc
flds
cmp
lea
rcl
call
hlt
lock
es
pusha
lods
xor
adc
add
mov
aad
rcrl
sbb
sahf
out
push
mov
xchg
js
add
pop
imulb
fsubs
lods
add
pop
loopne
push
mov
test
xchg
mov
js
sub
add
dec
leave
insl
lods
bound
xchg
loope
add
add
jbe
hlt
adc
sbb
adc
push
lret
ret
dec
enter
or
push
pop
and
mov
setp
cli
mov
test
inc
inc
and
lret
aam
sub
and
sbb
cwtl
push
ret
out
insb
add
ret
mov
outsb
fucomip
roll
jb
imul
mov
inc
testb
stos
int3
inc
aam
nop
loope
jp
lock
fidivrs
add
xor
inc
clc
cld
mov
adc
dec
gs
mov
jp
cmp
xor
subb
dec
adc
jno
cmc
xor
inc
shll
xchg
jo
cmpsb
inc
rolb
pop
dec
lea
cmp
sbb
rorb
outsb
mov
or
push
push
sbb
movsb
mov
push
sbb
lret
or
je
cmp
adc
shl
stc
inc
or
enter
or
or
xchg
popa
add
pop
cwtl
test
shrb
daa
aam
add
call
in
sbb
test
sub
fsubrp
mov
dec
nop
fs
sbb
and
aaa
cs
lods
sub
pusha
mov
xor
fldcw
rolb
xor
cmp
and
push
mov
movsb
add
inc
mov
out
lcall
bound
repnz
test
stos
pop
mov
cmp
pop
imul
sub
es
mov
je
imul
cmp
xchg
pop
pusha
and
add
lock
add
mov
addb
lock
xchg
clc
push
push
xor
das
or
xor
sbb
add
inc
push
cmp
pop
cli
test
je
clc
movaps
inc
test
cmp
pop
xor
or
enter
fmul
mov
loope
les
aad
dec
pusha
jno
aas
lret
mov
push
mov
adc
fiaddl
or
sbb
sbb
iret
cmp
pushf
or
mov
cmc
int3
lcall
sub
xchg
mov
dec
inc
mov
add
adc
inc
frstor
pop
rolb
pop
pop
sbb
xor
xlat
leave
dec
sbb
push
mov
leave
sub
inc
or
out
or
ja
ljmp
loopne
movb
rol
jno
das
or
or
push
cltd
test
and
adc
mov
mov
mov
jecxz
ret
sbb
adc
adcb
pop
sbb
inc
add
movsl
shrl
pop
jo
pop
lods
and
xor
loope
jne
loop
jo
jo
or
sub
sbb
dec
shlb
add
xor
push
repnz
rcr
cs
mov
pusha
pushf
in
notb
adc
jle
mov
sbb
leave
fs
rol
jp
mov
pop
inc
cmpsl
or
add
addr16
cmp
pop
ret
pushf
xor
jo
adc
add
nop
and
sbb
sbb
add
add
push
adc
xchg
mov
mov
dec
sbb
test
mov
mov
pusha
cld
xor
mov
shr
and
push
push
and
mov
push
adc
cmpsl
mov
push
dec
push
push
into
cli
xor
dec
adc
push
stos
mov
icebp
dec
enter
xchg
add
mov
rorb
push
push
mov
shlb
or
cmpsb
push
rcll
rolb
jb
and
xor
xor
xor
pop
push
lods
inc
cmp
pop
rorb
cmpsl
std
xchg
jo
les
leave
xchg
adc
inc
mov
push
mov
je
or
aas
cmpxchg
gs
mov
adc
jne
imul
aam
sub
pop
pop
add
pop
ret
jo
flds
or
les
test
or
push
clc
and
mov
add
cld
rol
daa
notb
loope
or
xlat
sub
push
inc
lea
mov
rol
lock
and
rolb
adc
in
fucomip
add
inc
sbb
rclb
movsl
insl
out
and
sahf
or
loop
push
or
mov
mov
fidivrl
xchg
add
test
pop
add
mov
mov
insl
dec
add
into
cmpsb
sbbl
push
je
sbb
mov
lods
loop
xor
adc
mulb
cmp
pop
cltd
cmp
cmp
mov
xor
xchg
addr16
add
xchg
mov
push
add
inc
mov
inc
push
dec
xor
dec
jmp
pop
jmp
jp
stc
shl
or
popf
das
inc
outsl
or
fs
dec
push
pop
xchg
into
add
addl
xor
imul
mov
js
cld
repnz
or
dec
push
inc
push
imul
aam
push
outsl
sar
cmp
inc
mov
cmp
xor
jo
pop
mov
adc
and
add
cmp
test
sbb
lock
test
call
xchg
imul
mov
mov
mov
jmp
inc
add
push
jge
or
mov
push
mov
popa
mov
dec
popa
call
pop
dec
add
out
pop
xchg
movsb
rolb
push
je
jb
or
shrb
imul
mov
popa
or
add
ss
sar
adc
fs
xor
movb
add
sbbb
or
clc
or
rorb
mov
les
shl
cli
sbb
xchg
add
pop
inc
popl
add
into
xor
jno
pop
inc
pop
pop
rolb
inc
ss
sub
adc
adc
dec
scas
jmp
cmp
sbb
xor
jmp
jo
lock
cmp
xor
cmp
push
inc
inc
cmp
pop
shrb
add
xor
xor
or
mov
or
inc
jmp
mov
rcrl
loope
add
outsl
mov
inc
mov
data16
icebp
jne
sbbl
ret
mov
rclb
pop
jne
pop
and
jp
push
xlat
adc
cmp
sbb
dec
cmp
int
push
ret
ss
adc
aad
arpl
cwtl
push
adc
daa
sbb
pushf
mov
movsb
sub
idivl
push
mov
push
pusha
inc
add
dec
xchg
inc
add
and
stc
push
dec
xor
jmp
mov
cmp
in
inc
xor
dec
pop
adc
jo
sbb
loope
lahf
rcrl
mov
paddusw
ret
adc
les
popa
inc
xor
add
adc
mov
pusha
mov
in
push
out
adcl
stos
imul
xchg
movsl
add
scas
out
mov
ret
leave
repnz
mov
sbb
movsl
push
setb
jno
push
jae
adc
dec
sbb
mov
push
ljmp
push
mov
push
inc
stos
adcl
mov
insl
sub
loopne
cmp
ja
imul
push
xor
movsl
sbb
das
or
pop
movsl
add
push
mov
dec
enter
push
sub
call
or
sbb
test
psubsb
into
mov
or
mov
adcb
jp
xor
inc
movsb
insl
xchg
inc
hlt
dec
cmp
xchg
dec
mov
test
push
int
mov
sub
loopne
cmp
inc
and
or
mov
pop
mov
add
adc
sahf
test
aad
je
add
pop
pusha
push
nop
mov
jb
movswl
pop
inc
add
jle
adc
out
and
jne
xor
test
xor
push
rol
or
dec
rclb
mov
mov
sarl
jmp
or
cmp
and
movsb
mov
aaa
or
cmc
add
mov
es
sbb
pusha
es
mov
fdivl
xor
xchg
inc
add
pop
dec
mov
and
pop
add
mov
adc
xchg
pop
es
xchg
adc
aaa
sub
test
mov
push
jb
mov
popf
sub
mov
ficomps
bound
adc
fadd
jmp
js
jno
cs
pushf
cmpsl
loopne
or
test
imul
and
xor
sub
ret
push
adc
add
leavew
push
xor
mov
loopne
rolb
mov
inc
mov
pop
xchg
sarl
dec
mov
and
into
ret
pop
mov
xchg
shl
xchg
loope
in
pop
data16
ret
movsl
jl
adc
push
shlb
push
dec
popf
cmc
mov
data16
or
loopne
test
adc
mov
mov
andb
frstor
sahf
fisubrs
in
shlb
and
jp
add
adc
dec
sub
pop
sbb
xchg
leave
adc
sbbb
lods
add
pusha
outsb
add
jmp
pushl
enter
popa
mov
adc
sub
pop
outsl
lret
pop
adc
and
sbb
pop
aam
inc
rcl
ds
call
pop
imul
loop
or
test
and
inc
push
sub
jnp
rol
dec
push
cmp
and
pop
and
pop
xor
lret
and
rolb
mov
das
dec
mov
icebp
dec
pop
inc
sbb
mov
jl
lock
ret
sub
xorl
aam
mov
outsb
data16
inc
inc
and
inc
andb
xchg
add
mov
mov
mov
add
and
push
cmp
xchg
test
xor
hlt
cmc
inc
inc
cmpsl
jb
adc
cmovg
mov
xchg
push
rclb
adc
jl
dec
cmp
push
fsubs
in
add
lahf
or
mov
push
loope
insb
jne
dec
adc
add
xor
imul
fs
mov
mov
jge
pop
inc
push
call
arpl
dec
inc
xlat
and
xor
arpl
daa
push
inc
sub
and
test
or
addb
popa
add
in
add
outsl
xchg
xchg
leave
lcall
xor
cmp
fsubl
js
leave
roll
inc
js
repnz
pushf
sbb
push
push
or
push
inc
arpl
shlb
push
out
test
mov
jp
cmp
arpl
aam
sbb
inc
push
or
inc
nop
or
inc
nop
sbb
orl
gs
inc
cwtl
das
inc
pop
sub
or
pop
lcall
pushf
xor
or
addl
mov
loopne
sbb
js
decl
mov
lods
sarb
in
pushf
adc
rcrb
mov
xor
movsb
sbb
jge
mov
xor
and
jno
sub
sub
clc
out
sahf
xchg
sbb
jne
test
lret
sbb
push
loopne
leave
mov
nop
mov
lock
pop
iret
xor
sub
test
loopne
lahf
nop
adc
pop
or
add
ja
lock
xchg
psubsw
addr16
pop
mov
addl
dec
add
mov
jae
push
add
inc
xchg
dec
dec
lods
add
xor
push
jle
mov
sbb
adc
xor
push
mov
lret
xchg
pop
cmp
dec
inc
push
loope
adc
cmpsb
jno
insb
insl
call
jmp
or
movsb
add
jb
rcll
and
pusha
movsl
sub
add
dec
out
fdivr
jo
fisubrl
mov
push
sub
pop
add
mov
icebp
sbb
cwtl
andb
outsl
adc
cmp
arpl
cmp
mov
add
push
and
dec
mov
pop
movsb
test
sbb
push
test
pop
lcall
mov
daa
xchg
jecxz
roll
jp
xchg
test
out
cmp
add
nop
subl
call
test
pop
mov
ret
push
adc
jecxz
push
push
or
adc
es
push
pop
sarb
and
mov
sub
mov
cmp
shl
xchg
icebp
add
and
mov
repz
sbb
sbb
xchg
fwait
mov
mov
sahf
mov
push
cmp
shlb
lods
push
mov
xor
loope
xchg
cld
push
jp
xor
ljmp
rolb
mov
push
xchg
nop
push
and
stos
xlat
push
and
add
test
in
movsl
js,pn
mov
jae
xchg
popa
mov
mov
mov
jmp
movl
add
push
ja
mov
ret
cmpsl
out
pop
add
das
icebp
mov
jns
xchg
sub
fucomi
dec
fisubs
xchg
xor
in
push
sub
mov
jns
adc
or
xchg
push
pop
imul
xor
xchg
push
pop
jns
fldln2
jp
fwait
cld
adc
adc
push
pop
jns
nop
push
test
arpl
mov
and
in
out
push
or
cmp
mov
jns
xchg
push
scas
sbb
shrb
or
xor
add
xchg
push
pop
add
dec
bound
dec
push
mov
aaa
add
jnp
rclb
in
and
arpl
add
sti
aad
adc
jns
xchg
fisubrl
dec
jp
mov
stos
aaa
xchg
pop
jns
xchg
push
push
jno,pt
mov
mov
add
xchg
push
pop
mov
cmpsb
dec
inc
xchg
or
enter
push
pop
jns
inc
and
ror
les
sub
icebp
pop
jns
xchg
ds
cli
add
aaa
cmp
xchg
orl
push
jl
jbe
sahf
xchg
push
fdivrp
mov
and
inc
insb
insl
xchg
in
dec
add
jle
push
sbb
xchg
shrb
push
cmp
pop
pop
fnstcw
xchg
push
inc
mov
popa
jns
sub
pop
out
mov
cli
push
cmp
sub
cmp
les
aad
lret
jp
repz
push
pop
jns
lods
push
xor
loopne
and
adc
in
fstp
scas
push
psllw
dec
pop
push
mov
push
in
jecxz
and
repnz
inc
in
xchg
push
pop
dec
xor
bound
sub
jne
je
das
push
pop
jns
aas
mov
lret
xchg
fimuls
xchg
in
pop
jns
incl
cmpsb
test
xor
clc
push
subl
xchg
push
push
dec
add
mov
push
fdivrp
and
rep
iret
sbb
push
les
or
jns
fldl
or
mov
cli
push
jns
xchg
push
cmp
sub
sbb
xchg
push
pop
or
es
mov
or
push
pop
jns
or
adc
xchg
push
sub
push
pop
jns
out
cld
in
mov
popf
out
insl
addr16
in
add
jae
add
dec
xor
push
lock
sbb
pop
ljmp
lcall
les
in
cmp
mov
ss
aad
jmp
out
jle
jnp
clc
mov
movsb
xchg
loop
pop
sbb
jmp
inc
stos
mov
lahf
data16
int3
mov
ss
xchg
push
jecxz
addb
dec
adc
in
push
pop
in
rorl
pop
insl
cmp
push
pop
jns
aam
dec
loopne
outsb
addb
xor
push
pop
jns
cmpsb
es
mov
test
push
xor
jns
xchg
push
pushf
les
mov
sbb
jns
xchg
push
push
out
loop
mov
xor
dec
xchg
inc
in
push
pop
inc
stos
loop
fdiv
push
icebp
jne
movsl
xchg
push
pop
jns
and
and
cmpsb
in
push
push
pop
jns
sbb
xorb
pop
cld
push
into
dec
pop
jns
xchg
adc
push
dec
mov
sbb
jns
xchg
push
cmp
add
pop
or
xchg
push
pop
dec
sbb
outsl
cwtl
adc
sarl
shlb
jne
dec
shlb
out
lahf
in
xor
movsl
xchg
mov
stc
sarb
add
and
mov
cmpsl
jge
lahf
aas
adc
in
mov
jns
scas
cmp
jns
rcr
rolb
fldenv
inc
aas
scas
mov
mov
pop
add
shr
mov
sbb
lods
sub
and
jb
popf
and
out
pop
sbb
cmp
xchg
push
fsubrp
imul
jmp
push
stos
cld
mov
push
pop
jns
adc
in
cmpb
dec
xor
jns
in
pop
dec
pop
adc
pop
in
ja
mov
daa
add
pop
pop
repnz
jge
div
ljmpw
scas
fists
mov
add
fimuls
xchg
and
inc
xchg
push
pop
jns
int3
mov
push
xor
cmp
push
pop
jns
idiv
xlat
subl
inc
jl
in
push
add
nop
inc
sti
aaa
push
pop
jns
scas
bound
fwait
or
fmuls
iret
mov
adc
sub
in
push
dec
xchg
adc
xchg
or
and
enter
pop
push
mov
sub
sbb
ja
pop
jns
jns
addr16
sidtl
add
in
jle
gs
mov
jge
cmp
sbbl
mov
xchg
shl
loopne
cmpsb
in
push
pop
adc
xor
sub
lds
pop
jns
mov
fisubl
mov
pop
jns
xchg
aas
popf
hlt
das
cmc
sbb
push
cltd
in
das
push
cmp
pcmpgtb
or
and
in
movl
inc
std
std
jb
mov
mov
stos
cmp
pop
mov
in
push
fdivrp
ret
push
xchg
shrl
mov
ret
mov
outsb
arpl
les
shlb
inc
repnz
in
in
ja
jecxz
inc
and
sbb
lods
mov
and
pop
clc
les
cltd
push
inc
push
pop
jns
fstpt
pop
mov
push
cmp
and
and
in
xchg
inc
pop
add
sub
xchg
push
pop
int3
cmp
pop
in
mov
subl
pop
jns
scas
mov
pop
rcll
xor
pop
pop
jns
call
pop
in
test
dec
ret
hlt
scas
jns
xchg
ja
fwait
ja
xor
push
dec
loope
imul
xchg
push
pop
pop
ret
jmp
int3
jne
jl
xchg
push
pop
jns
add
mov
pop
add
mul
mov
jne
mov
lret
inc
bnd
xchg
push
pop
sub
push
in
push
jbe
test
pop
inc
push
imul
jmp
cmpsb
or
in
lret
mov
jmp
mov
pop
xchg
cltd
mov
test
dec
pop
call
testb
aad
lcall
or
inc
xchg
xchg
xchg
outsb
adc
lret
lret
dec
pop
adc
or
nop
jp
scas
lret
mov
out
out
mov
mov
out
clc
in
mov
insl
or
jbe
sbb
in
sbb
jmp
inc
mov
aad
scas
mov
cmp
pop
inc
aas
sahf
cmp
jle
inc
test
loop
in
sub
test
scas
loop
ds
dec
out
mov
jbe
scas
add
out
mov
add
sub
inc
loop
cmp
cmc
mov
xor
pop
pop
xchg
mov
mov
in
push
addr16
lret
mov
fwait
stos
mov
mov
inc
out
scas
mov
mov
fstpl
gs
insl
inc
clc
mov
repnz
shlb
pop
fdivrp
jb
mov
lods
sbb
outsl
jne
adc
jns
xchg
push
movsb
cmpsl
loopne
push
pop
dec
out
shrl
push
pop
mov
stos
popf
das
test
inc
scas
mov
push
imull
xchg
push
pop
addr16
scas
mov
xchg
ret
jmp
mov
xchg
cmp
popa
or
leave
add
mov
mov
in
dec
jg
xchg
int
cld
sub
es
mov
scas
mov
inc
enter
dec
dec
ret
aad
mov
ror
sub
cli
movsb
and
stc
sub
mov
stos
inc
std
jg
dec
xor
inc
adc
outsl
xchg
add
aad
jg
clc
aam
repnz
fcomps
jl
out
pushf
out
lret
mov
push
mov
add
sub
pop
push
jmp
int
mov
lret
jae
push
xor
cmpsb
add
sbb
lret
sub
mov
repnz
xchg
push
inc
dec
jnp
add
and
add
dec
push
and
jbe
lods
mov
lea
in
sbb
scas
mov
cs
imul
jg
mov
cmp
ss
push
xchg
dec
int3
inc
adc
stc
repz
cmp
or
subl
lahf
aas
jg
jmp
xor
stos
sti
hlt
xchg
push
sub
iret
mov
loope
test
stos
or
sahf
jecxz
in
xor
jg
cld
addr16
or
pop
mov
sub
lahf
dec
subl
or
andl
lcall
imul
mov
outsl
ret
xor
dec
sbb
in
push
pop
push
adcb
in
insb
xchg
cwtl
shrw
cmp
and
fadds
call
jns
adc
vpsllq
xor
test
in
cmp
xchg
cmpsb
push
dec
popa
and
xchg
lret
xchg
push
jle
lcall
inc
push
in
sub
jg
fcoms
insb
out
mov
jns
popf
loopne
jge
adc
push
pop
sub
movsl
adc
inc
iret
lahf
aas
mov
mov
jmp
jns
in
inc
jmp
mov
add
outsb
fistpll
adc
fstl
adc
insb
daa
mov
js
out
mov
inc
test
inc
int
lret
repnz
in
push
imul
iret
dec
inc
mov
push
or
add
lahf
aas
decl
jnp
sbb
dec
mov
repnz
xchg
push
sub
cwtl
cmp
cmp
mov
in
sub
mov
xor
ja
pop
stc
lea
jo
cli
push
mov
pop
jne
insb
pop
jns
xchg
xchg
mov
lret
push
xchg
std
aas
add
push
pop
aaa
jne
dec
cli
iret
jb,pn
xor
test
lock
dec
ljmp
aaa
sbb
test
jmp
leave
pop
xor
rclb
int
in
push
mov
fildl
das
daa
aad
xchg
push
fdivrp
insb
cmp
add
mov
sbb
push
pop
jns
add
rorl
in
pop
xchg
mov
jns
xchg
xchg
in
out
popa
mov
mov
xchg
push
or
xor
mov
cmc
out
js
repz
cld
mov
mov
popf
push
cs
mov
push
inc
push
jb
pop
mov
iret
psrld
int
loop
or
and
mov
sub
or
pop
sub
adc
ffree
inc
loope
repnz
jge
cmc
outsl
pop
jns
fstp
roll
sbb
and
pop
jle
xchg
push
pop
in
call
cwtl
shll
push
pop
jns
pop
les
fdiv
cli
out
cltd
mov
insl
or
addl
inc
jb
in
mov
frstor
rorb
jecxz
adc
in
std
jb
js
pop
inc
iret
cwtl
dec
xchg
push
xchg
push
fidivrs
sbb
xor
in
mov
cmp
pop
jns
sub
add
and
cmp
xchg
scas
mov
mov
dec
and
sti
jno
repnz
add
pop
repnz
mov
scas
mov
shrl
cltd
shll
lcall
cld
rorl
fsub
roll
fmul
insl
xor
mov
sub
out
jnp
scas
sar
repnz
in
out
jns
inc
dec
mov
scas
or
in
sub
cwtl
push
inc
in
inc
sub
mov
cmp
push
cmp
es
lock
scas
mov
cmp
clc
sub
jg
cmpsb
test
jecxz
repnz
lcall
and
sub
jns
repnz
into
cs
sub
push
xchg
pop
mov
adc
repnz
outsb
mov
push
inc
scas
cmp
or
pusha
sub
pop
loopne
out
dec
repnz
mov
cmpsl
dec
pushf
stos
fsubr
lahf
and
mov
add
fimuls
stc
repz
mov
xchg
add
inc
cli
sub
sub
jle
cld
jecxz
push
daa
in
add
repnz
nop
cmpsb
xor
jmp
xor
xchg
aas
sub
push
sbb
xor
mov
xor
repnz
cmp
mov
outsb
arpl
cmpl
push
pop
jae
jns
push
gs
std
jge
lods
cmpb
or
jmp
icebp
pop
jns
fstl
lahf
adc
add
in
push
pop
mov
in
mov
imul
es
xchg
push
pop
jns
nop
sub
lods
lock
pop
jns
sub
xchg
ss
xchg
xor
jmp
scas
mov
mov
outsl
add
mov
mov
enter
aad
je
popf
jae
lret
sub
mov
sub
or
jo
loopne
scas
mov
xor
ffreep
pushf
inc
enter
pop
les
and
repz
imul
in
add
dec
add
fsubr
in
aaa
cmp
in
push
fimuls
inc
into
inc
cltd
ljmp
jns
fwait
jne
mov
push
in
push
aam
in
pop
jns
sarl
jno
or
xchg
lret
sbb
cmpb
xchg
je
out
out
inc
scas
test
adc
add
ficoms
dec
mov
sbb
repnz
jns
jns
or
xchg
fwait
ret
iret
sub
jmp
mov
cmp
mov
lret
popf
in
push
in
loop
push
lahf
pop
lret
sub
fldl
mov
mov
or
aad
lret
lret
repnz
sti
cli
sti
into
cmp
sarb
or
cmovns
ja,pn
scas
mov
cli
sub
push
pop
pop
pushf
mov
xchg
xchg
mov
sub
scas
mov
and
xchg
imul
jne
stc
sub
arpl
pop
hlt
lret
test
xor
jmp
call
add
lret
out
dec
mov
adcb
sahf
aas
inc
scas
mov
mov
jns
xchg
ja
xor
daa
or
roll
xchg
repnz
int3
cli
or
jbe
jbe
xchg
push
pop
jns
inc
xor
xor
pop
jns
cmp
cmp
addb
ret
into
dec
icebp
mov
in
xchg
les
lahf
jb
test
lods
in
push
pop
and
and
cmp
jns
scas
inc
dec
pop
mov
lret
pop
pop
or
data16
movsl
in
ja
dec
sub
and
int3
mov
pop
xchg
push
pop
jns
cmp
fistpll
add
pop
lds
mul
lahf
sahf
lahf
stos
pop
xlat
pop
add
jo
xchg
xchg
push
leave
pop
aas
adc
mov
cltd
inc
dec
mov
jge
ss
scas
jge
insl
or
push
movsl
jnp
jb
loop
jle
pop
sub
or
mov
jo
jne
sbb
psubq
adcl
cmpsb
repnz
dec
nop
aaa
imul
mov
repnz
aas
adc
mov
mov
adc
repnz
rcrb
cmp
test
scas
mov
mov
into
or
pop
jo
sub
xor
jecxz
dec
jge
push
scas
mov
je
sbb
cmc
jns
in
add
repnz
xchg
sub
aad
mov
data16
aaa
icebp
inc
mov
cs
insl
jg
stos
stos
ja
sub
outsl
and
and
in
inc
dec
xchg
xor
inc
push
and
mov
mov
in
push
cltd
or
sahf
or
fsubl
mov
sbb
xchg
push
pop
pop
filds
lahf
or
fcmovbe
das
push
pop
jns
jmp
cmpsb
shl
dec
dec
pop
jns
fnstsw
mov
sbb
addb
fstl
ret
std
das
movsb
push
jl
fimuls
clc
jb
dec
inc
dec
inc
inc
cmpsb
cli
inc
mov
lahf
aas
jg
mov
mov
jle
cld
stc
repz
xlat
push
cmpsl
sub
push
call
loop
lahf
aas
jg
lret
popa
aaa
mov
dec
mov
stc
repz
arpl
call
cltd
xchg
repz
xchg
mov
cld
adc
imul
or
test
subb
iret
lahf
xor
sbb
mov
data16
stc
repz
jecxz
dec
jle
js
mov
mov
push
aam
aam
jg
scas
mov
sbb
cmpsl
incb
fcmovnbe
jecxz
sti
in
sub
adc
pop
cmc
aaa
in
ja
xlat
aas
mov
dec
adc
in
insl
daa
xchg
xchg
lret
mov
mov
in
in
stos
pushf
inc
aad
paddusw
pop
pop
loop
sub
loop
outsb
mov
outsb
xchg
xchg
cwtl
jae
aas
es
xor
lods
jle
mov
notl
mov
sub
or
hlt
daa
es
inc
std
mov
pop
lds
inc
dec
xchg
adc
and
stc
jge
mov
dec
dec
xchg
gs
xchg
dec
cmp
and
push
pop
outsb
xor
fldt
xchg
cmc
ljmp
mov
sti
mov
sahf
inc
rcrb
pop
jns
mov
or
sbb
push
pop
jns
sub
mov
mov
mov
das
mov
xchg
sbb
mov
push
push
lock
push
lcall
in
xchg
dec
lcall
xchg
pop
sub
out
ret
cmpsb
and
ret
cld
stc
repz
ljmp
sahf
outsl
outsb
and
lahf
aas
jg
imul
fldl
adc
and
das
fiadds
fisubl
repnz
cs
pop
add
insl
pop
push
sub
out
jno
nop
mov
push
xchg
scas
mov
or
insl
lret
mov
xor
cli
mov
and
xor
pop
sub
jle
imul
mov
mov
sbb
incl
nop
xchg
outsl
push
dec
fists
cmp
mov
jg
mov
cltd
je
les
es
jmp
enter
mov
filds
scas
leave
pop
lret
mov
pop
pop
push
sbb
push
pop
mov
aam
ffree
adc
push
outsl
int3
out
stc
and
jle
test
les
pop
je
in
rclb
cld
in
sbb
lock
je
test
xchg
ja
sbbb
repz
in
cmpsb
dec
jle
cld
jb
sbb
add
call
lahf
aas
jg
mov
push
pop
sbb
ficomps
in
jne
bswap
je
je
outsl
rclb
cmc
lret
xchg
push
mov
and
hlt
cmc
pop
repnz
dec
add
test
repz
outsl
fdivrp
sti
jb
xchg
mov
ror
sub
fisttpl
jns
xchg
push
mov
loope
jo
jo
insb
in
push
pop
pop
enter
loopne
xchg
pushf
daa
movsb
pop
pop
pop
jns
imul
sub
or
punpckhbw
lea
loopne
imul
xchg
cli
cwtl
xchg
jnp
insb
in
jg
push
pop
jns
aam
enter
sar
outsb
outsl
clc
adc
jns
pop
popl
rcrb
cmpb
xchg
mov
push
mov
sub
mov
xchg
push
fimuls
push
loopne
mov
bound
xchg
lock
push
jle
xchg
xchg
inc
orl
cmpsb
je
pop
in
pop
stos
jo
shr
scas
mov
xor
jg
loopne
mov
sub
xchg
sub
xchg
je,pt
cld
stc
repz
cwtl
or
push
pop
gs
dec
iret
lahf
aas
jg
das
dec
mov
push
sub
icebp
jns
repnz
xor
stos
sbb
shld
hlt
xchg
ja
pop
mov
add
pop
test
loop
xorps
in
pop
add
sbb
pop
mov
test
mov
mov
in
push
pop
inc
outsb
pusha
mov
data16
movsl
mov
push
pop
jns
mov
sbb
mov
jns
in
add
outsl
cmp
shlb
mov
mov
xchg
push
pop
pusha
cmp
mov
sbb
jge
jl
xchg
lret
lods
xchg
jg
sub
xchg
inc
mov
pop
push
push
cmp
lret
std
cmpsl
jl
sbb
sub
add
fisttpll
xchg
fstps
dec
and
pop
adc
int
int
xchg
push
pop
jns
mov
mov
into
imul
or
jg
dec
dec
push
dec
lahf
aas
jg
outsb
sub
les
fmuls
aas
xor
leave
xchg
sahf
stc
repz
xchg
dec
mov
or
mov
aas
jg
cld
popa
das
jae
mov
addr16
inc
ret
test
push
in
push
push
in
dec
jg
jecxz
jecxz
ja
fbstp
ficomps
xchg
adc
enter
xchg
jecxz
push
jmp
iret
and
in
push
pop
jge
sbb
pusha
mov
cmpb
sbb
push
shll
sahf
xor
lahf
stc
xchg
jle
and
sbb
xchg
add
push
fidivrs
in
pusha
frstor
jge
jl
cmp
pop
lret
mov
push
xor
scas
cmp
xor
ja
mov
sbb
popa
fdivl
jns
in
xchg
sub
lods
adc
mov
xchg
fldt
jae
das
push
pop
loop
cmp
pop
into
mov
das
sbb
in
cmc
add
sub
sbb
push
lcall
in
push
cltd
and
push
jnp
or
imul
repz
cmpsl
and
and
out
lahf
aas
xor
cld
inc
add
call
std
jmp
push
jns
outsl
pop
cli
jo
mov
inc
lret
out
lahf
or
gs
or
mov
daa
mov
push
adc
xor
dec
stos
push
pop
jns
inc
lods
inc
cltd
push
test
jge
xor
pop
les
sub
sarl
sahf
pop
int
fwait
cld
stc
repz
xchg
inc
lods
cmc
shrb
fs
jg
and
push
imul
cld
stc
repz
push
cli
add
fisttps
lods
jg
ja
jl
leave
and
adc
cmpsl
push
arpl
mov
jns
xchg
pop
cmpsb
cmpsl
std
repz
cmp
jns
xchg
push
push
mov
imul
sub
push
pop
mov
xlat
mov
jb
jb
jae
pop
jns
add
lcall
and
xchg
ja
or
dec
inc
out
sub
adc
xchg
push
pop
mov
imul
pop
jns
jo
repnz
and
mov
mov
in
fsubrl
push
mov
jnp
ljmp
scas
test
movsb
clc
adc
test
or
mov
sbb
jns
cli
and
ror
sti
ja
and
test
lock
pop
sub
dec
sbb
sbb
aas
jg
cld
out
xor
in
mov
cmp
sub
add
iret
lahf
or
cmp
xchg
hlt
test
jg
cld
stc
mov
repz
push
mov
aas
xor
jmp
out
push
sbb
mov
dec
inc
xchg
xor
gs
sbb
lahf
aas
jg
pusha
mov
or
inc
stos
or
jbe
ret
repz
cli
inc
test
pop
push
lret
jg
test
and
shlb
xchg
insl
in
out
sub
mov
cmpsl
pop
mov
jns
outsl
ljmp
in
stc
hlt
lret
xchg
ja
clc
cmc
es
inc
xchg
mov
cmp
out
mov
cli
rorl
xor
stc
iret
test
sbb
in
icebp
ret
das
lahf
aas
xor
or
dec
in
aas
scas
jg
sub
push
sbb
hlt
push
push
test
dec
in
ja
adc
scas
mov
bound
xchg
push
pop
jns
fsubs
lcall
jmp
in
mov
adc
lahf
jg
scas
mov
cli
adc
gs
js
in
push
jp
fildl
mov
mov
clc
sub
scas
adc
mov
xchg
inc
jne
scas
jl
test
mov
scas
adc
pop
popf
dec
mov
cmpsl
jmp
pop
scas
inc
xor
push
mov
out
pop
lods
stc
repnz
xchg
inc
icebp
jl
das
adc
adc
in
push
pop
cltd
and
xchg
out
leave
std
sti
std
jb
adc
sub
pop
and
sbb
xchg
push
fidivrs
dec
lahf
inc
dec
mov
pop
xchg
push
pop
jns
test
out
fsubrs
and
sub
scas
push
pop
jns
adc
sbb
mov
cmp
in
repz
inc
and
xchg
ja
fsubrl
xor
mov
inc
sbb
jns
xchg
pusha
daa
lret
jae
jae
mov
mov
pop
jns
xchg
mov
rolb
push
mov
push
dec
enter
mov
outsl
jecxz
push
lods
in
push
pop
ljmp
scas
push
mov
jns
fisttpll
mov
fwait
xchg
sub
mov
imul
lret
xchg
push
mov
cmc
iret
mov
xchg
push
pop
jns
pop
add
mov
sbb
lock
adc
lock
outsl
or
ljmp
sahf
xchg
jno
jge
aad
cld
stc
repz
aam
push
adc
fnstcw
aaa
outsb
test
aam
faddl
stc
pop
dec
neg
test
mov
add
xchg
push
pop
jns
rcrl
dec
movsl
jmp
sbb
pop
pop
jns
inc
stos
loopne
in
pop
cmpl
jg
cld
push
out
xchg
inc
rcrl
cld
inc
dec
jp
push
dec
out
lahf
aas
pusha
adc
adc
cld
stc
repz
push
icebp
xchg
sbb
sub
ficoms
add
fmulp
lahf
aas
jg
ljmp
imul
div
out
jg
adc
jae
mov
repnz
push
pop
stos
das
std
inc
inc
jb
jno
xchg
fwait
incb
jb
std
or
xchg
sarl
lret
and
lahf
aas
jg
pusha
insl
mov
jo
pop
push
out
jnp
out
xor
shr
mull
mov
gs
adc
js
dec
inc
sbb
lahf
aas
sub
mov
and
xor
outsb
cmp
cmp
inc
or
sbb
loope
sub
pop
scas
cwtl
dec
inc
or
cmp
insb
or
repz
into
fisttpl
sub
add
lahf
aas
jg
int
enter
or
loop
stc
repz
push
push
mov
pop
fnstsw
mov
jg
cld
sub
push
lock
flds
mov
lahf
inc
in
iret
lahf
cli
mov
lahf
mov
cltd
insl
cld
xlat
and
mov
repnz
js
jmp
pop
xchg
push
fidivrs
push
kmovb
jp
inc
sbb
sbb
in
das
pop
je
pop
fists
add
dec
int3
pop
loopne
rep
jge
addl
xchg
faddl
cld
mov
cmp
mov
adcb
mov
dec
movsl
xlat
inc
test
xchg
push
shr
xchg
sub
mov
cmpsb
loope
sub
lss
cmp
jp
cltd
scas
repz
lods
push
xor
xor
jg
mov
inc
loopne
pushf
cmp
mov
out
lret
sub
cmp
push
mov
cmpsb
test
sub
mov
jns
pop
stos
pop
add
ljmp
push
push
insl
jns
xchg
rclb
push
push
xchg
xorb
add
inc
inc
scas
aas
test
push
hlt
cmc
cld
stc
repz
xchg
leave
adc
scas
pop
scas
jo
push
adc
das
int
stos
stos
push
xorb
push
adc
xor
ret
sbb
lock
sysexit
les
int3
ja
xor
repnz
pop
fwait
jmp
jg
scas
mov
cmp
mov
out
cmp
cmp
repnz
lea
push
mov
lret
pop
sbb
test
sub
leave
lret
mov
or
stos
movsl
cmp
mov
rorl
gs
push
sub
jne
aad
in
ljmp
mov
pop
scas
enter
pop
xor
lret
scas
mov
dec
add
repnz
xor
mov
lret
jae
cltd
adc
cli
and
cld
stc
or
sbb
pop
lea
out
lahf
aas
adc
adc
into
jne
inc
inc
popf
xlat
mov
ja
movsb
dec
lahf
pop
cli
insl
inc
std
lret
adc
outsb
pop
push
xchg
and
jno
mov
adc
adc
lods
pop
subb
mov
nop
push
scas
negb
sub
pushf
or
insl
loope
mov
inc
inc
sbb
clc
repnz
aas
in
mov
xlat
jo
in
ja
pop
lret
and
add
in
push
pop
jno
bound
adc
imul
mov
pop
dec
pop
jns
pop
loopne
inc
and
je
incb
push
sub
mov
das
cmp
push
loope
lret
outsl
adc
and
out
sbb
clc
imull
pop
inc
out
mov
or
cld
fsub
push
scas
mov
lcall
adc
in
pop
movsb
out
cwtl
xchg
ret
mov
xchg
loop
stc
es
cltd
mov
lret
pop
cmpsl
jnp
std
sub
cs
jle
mov
sub
dec
push
mov
imul
imul
mov
cmpb
push
scas
jbe
cltd
addr16
in
les
aas
loope
cli
cmp
insl
insb
pop
or
jle
insl
jg
loopne
push
sbb
test
fists
decl
cmpsb
popa
jmp
decb
das
jl
cs
in
ja
out
mov
add
xchg
push
pop
and
lods
fmulp
test
push
jb
out
lret
out
push
jne
out
xor
shll
cmp
cld
or
xchg
clc
mov
daa
dec
ret
shrb
pop
jns
lods
jg
stos
out
xchg
mov
insl
xchg
in
ja
dec
pop
bound
and
jg
popf
lea
and
push
sarl
jne
jl
mul
pop
mov
xor
adc
into
fmuls
aas
jg
add
sbbl
das
mov
iret
lahf
nop
popa
pushf
addr16
mov
mov
mov
jmp
pop
jecxz
sarl
repz
loope
and
cmp
jecxz
sub
inc
jg
in
test
xchg
push
fsubrp
sub
es
aam
push
stos
fdivr
mov
xor
pop
cmc
fcoms
xor
sbb
scas
or
lea
outsl
and
or
std
or
mov
clc
repnz
fs
sub
cmp
jns
xchg
inc
mov
add
dec
outsl
cli
adc
scas
mov
pop
xchg
popf
and
aas
loope
sub
xchg
sub
cmp
push
fptan
lret
movsb
mov
imul
stc
lret
pop
xor
push
mov
fwait
xchg
push
fst
dec
mov
ja
or
setb
jns
leave
cmp
xchg
addr16
lea
jno
in
mov
dec
fnstcw
repnz
lock
test
inc
adc
sub
mov
scas
and
mov
mov
lret
pop
insl
imul
jge
fstl
sub
das
xchg
cmpsb
clc
dec
lcall
mov
mov
icebp
inc
mov
mov
push
and
pop
push
arpl
pop
mov
out
aas
mov
movd
and
xchg
das
movsb
rorb
loopne
jp
fcomip
or
test
lock
jns
sub
mov
pop
adc
sub
pop
mov
out
std
pop
fldt
xor
mov
jb
push
mov
mov
stos
imul
push
int3
or
lret
inc
in
push
xchg
rcrl
dec
icebp
out
lret
cmp
mov
lahf
pop
movsl
add
scas
mov
mov
sbb
cmpsb
out
das
test
scas
dec
add
insb
aas
sub
jecxz
pusha
imul
outsl
out
lahf
aas
or
push
fisubrs
stc
xor
out
mov
outsb
out
adc
sbb
cwtl
scas
cld
mov
jae
vmwrite
ljmp
dec
jge
mov
aad
and
sub
sub
jp
sub
mov
pop
and
sahf
stos
imul
sti
repnz
imul
das
mov
push
lret
or
mov
out
aad
in
sub
jo
xor
repnz
dec
call
enter
movsb
adc
push
clc
paddw
repnz
scas
push
cmp
fcoml
scas
mov
pop
inc
inc
and
mov
sub
leave
jmp
mov
push
repz
xchg
cs
sub
xchg
aaa
cli
repnz
inc
mov
fbld
mov
repnz
movsl
fstpl
jle
scas
sub
leave
mov
rcrl
loopne
push
pop
pop
inc
jbe
ret
scas
mov
scas
fstpl
cmp
movsb
pusha
shll
repnz
mov
aad
or
sbb
repnz
std
xchg
icebp
iret
ss
out
cmp
push
sub
lahf
lds
in
mov
mov
jns
and
scas
cld
stc
repz
mov
push
push
lock
push
jle
push
sub
popf
js
sbbl
pop
push
sti
int
shr
cld
ret
out
sub
cmp
push
cmc
shll
lret
lahf
aas
and
out
lea
sbb
pop
lret
mov
loopne
loop
fadds
loopne
sub
cmp
sub
scas
adcb
push
cld
scas
sbb
adc
leave
pop
jns
lret
lahf
mov
sbb
xchg
mov
sahf
fcmovb
lahf
pop
inc
mov
out
jp
pop
in
xchg
lock
out
mov
aad
aad
lahf
pop
mov
fsubrp
cld
stc
add
outsb
out
cmp
jmp
fistps
inc
pop
mov
push
lret
push
jmp
daa
scas
mov
lret
in
lods
sub
inc
and
iret
aas
test
fisubrl
sbb
push
repz
loope
popf
mov
jmp
and
out
clc
in
lea
in
out
inc
mov
in
cld
icebp
push
jne
add
cld
sahf
adc
inc
add
dec
cs
pop
outsl
mov
add
mov
cmp
ret
jp
inc
cld
stc
xchg
dec
arpl
lahf
aas
jg
out
inc
or
lods
jbe
push
das
addr16
repz
push
push
adc
ret
jns
fmuls
mov
push
fdivrp
repnz
shr
stc
lret
inc
iret
leave
push
xor
ffreep
das
mov
sbbl
movsb
mov
cs
bound
jg
or
in
rorb
in
jg
sub
decl
loopne
out
and
xchg
sub
hlt
cmpsl
pop
shl
lret
nop
das
push
inc
loop
or
test
or
xor
ror
out
dec
cmp
mov
mov
pop
adc
push
int
inc
daa
stos
adc
lret
iret
lahf
aas
and
repz
sbb
out
add
cwtl
outsl
popf
dec
movsb
sahf
inc
inc
cmp
jb
xchg
ja
ret
xchg
adc
push
adc
negb
mov
push
mov
in
cmpsl
ret
repnz
aas
push
xchg
push
xchg
out
xor
out
movsb
imul
sub
or
dec
into
and
bound
sub
int3
rcll
out
popa
jns
sub
adc
mov
sar
stc
jp
mov
inc
dec
xchg
push
leave
repz
jge
movsb
jae
imul
iret
setle
mov
sbb
adc
out
push
punpcklbw
fdivrp
repnz
jmp
push
nop
inc
push
bound
pop
add
lahf
jne
mov
sahf
mov
xor
hlt
das
mov
arpl
out
mov
sbb
and
in
outsb
fistps
pop
sbb
jmp
jns
xchg
stc
xchg
xor
loop
jb
inc
dec
mov
js
jae
dec
ret
dec
idiv
stc
and
adc
add
aam
sub
adc
nop
out
cmc
inc
mov
jg
inc
mov
xor
xor
idiv
in
jae
fists
xchg
mov
xor
pop
cld
sti
sub
push
das
dec
mov
imul
dec
push
mov
xor
aaa
incb
ficoms
ja
mov
jl
stc
repz
loop
jbe
fwait
pushf
in
mov
jl
ret
jmp
cmp
sub
outsl
loopne
mov
das
or
inc
mov
sar
repnz
adc
dec
jnp
sbb
cld
out
mov
mov
fcmovnu
and
sub
mov
push
or
mov
mov
scas
mov
out
out
push
sub
imul
mov
mov
cli
insb
dec
fstp
and
scas
push
jb
out
mov
pop
jle
jns
in
dec
das
sti
dec
js
mov
mov
sub
imul
dec
or
daa
into
jg
lcall
xlat
outsl
jecxz
lahf
aas
jg
push
cs
aam
push
xchg
ffreep
movsb
aas
jne,pt
mov
jecxz
repnz
mov
outsl
dec
sbb
push
and
bound
scas
push
decl
mulb
push
jns
lret
mov
mov
pop
leave
data16
mov
repnz
or
inc
ret
cmp
out
jne
test
xchg
push
adcb
dec
jecxz
lcall
jno
sbb
push
jne
scas
mov
sub
or
inc
mov
jg
inc
in
and
popf
xchg
push
pop
jns
pop
or
sub
lret
mov
sbb
pop
scas
rcl
adc
repnz
shrb
and
mov
jg
mov
ss
testl
mov
cld
pop
out
fcoml
aas
lock
ds
cli
mov
jns
mov
stc
mov
in
sahf
dec
lret
mov
test
iret
lahf
aas
mov
pop
lea
add
cmp
loopne
or
sub
push
xchg
cld
push
cltd
xchg
adc
cmpsb
inc
push
inc
iret
lahf
aas
jle
std
inc
inc
icebp
imul
repz
jne
dec
lock
push
arpl
mov
pop
mov
inc
dec
or
cmp
fstpl
stos
std
dec
stos
icebp
mov
in
add
jecxz
dec
inc
sub
aas
sbb
sbb
xchg
sbb
cmc
repnz
in
inc
testb
ja
xchg
iret
adc
xchg
scas
mov
and
pop
flds
cs
lret
mov
cmp
mov
adc
lret
or
jb
or
imull
sahf
push
aam
stc
adc
fnstsw
sbb
lea
dec
lcall
aas
test
push
mov
mov
jg
cld
inc
dec
push
or
jno
mov
mov
sub
aas
jmp
daa
add
mov
addr16
movsb
repnz
aas
mov
and
add
jle
mov
adc
add
divps
outsl
pop
or
pop
rcrb
inc
push
pushf
test
iret
scas
mov
push
xchg
lods
jle
lods
neg
pop
cld
stc
repz
mov
fnsave
adc
pop
jle
je
adc
mov
jg
add
dec
lahf
xchg
cli
push
add
mov
repnz
andl
cld
dec
test
stc
lret
mov
int3
stos
aas
das
std
push
pop
jns
pop
pop
dec
outsl
icebp
out
cmpsb
mov
lods
push
or
pop
jns
xchg
jnp
pop
scas
sbb
pop
mov
xchg
push
lret
mov
mov
incb
push
mov
inc
adc
inc
pushf
adc
iret
lahf
aas
jg
or
dec
fwait
out
mov
out
es
aad
dec
xchg
je
aas
pop
xchg
jge
push
pop
fs
les
test
rcll
jns
dec
xchg
movsb
xor
out
xchg
ss
cld
jb
xchg
jmp
adc
pop
inc
lret
cmpl
loope
sub
xchg
mov
aam
stc
repz
fdivrp
cmp
mov
fidivs
and
das
jg
xchg
lock
pusha
sbb
cmp
lret
popf
and
out
ffreep
xchg
and
loope
nop
xchg
sub
xchg
in
cmpsl
dec
lcall
sbb
jmp
call
inc
push
idivl
fbld
mov
lods
cmp
jg
push
cmp
shrl
push
fsubrp
xchg
cmp
nop
jb
and
test
aaa
fs
xor
flds
jne
pop
cld
shr
push
sbb
cmc
jns
add
push
xchg
mov
shlb
mov
push
jns
mov
das
daa
inc
sbb
daa
scas
jl
add
or
jg
cld
or
mov
in
adc
nop
jge
js
out
xchg
mov
repz
ret
in
xor
fstps
dec
lret
movsl
cli
loopne
pop
jle
mov
push
fistpl
cmovl
xchg
jno
xchg
movsl
push
inc
stos
insl
scas
inc
cli
in
push
jle
jbe
sub
push
stos
and
mov
jns
inc
sbb
fs
dec
rorb
jge
ffreep
xchg
mov
ds
pop
cld
dec
ljmp
push
xor
aas
mov
iret
lahf
pop
mov
xor
daa
out
stc
repz
jecxz
in
outsb
ds
lret
inc
push
mov
out
mov
xor
in
or
and
adc
in
sub
xchg
mov
mov
test
xlat
adc
fsub
and
mov
xlat
and
cld
push
icebp
stos
stc
test
mov
fcompl
in
ja
and
pusha
pop
test
movsl
das
push
add
lret
pop
mov
cmc
cmp
sub
ret
pop
scas
mov
shl
mov
clc
aas
int
inc
dec
sbbl
mov
mov
jo
jge
sarl
jo
adc
cld
or
jecxz
mov
inc
cli
jns
sbb
movsl
mov
xchg
jg
jp
ljmp
repnz
xchg
add
loope
lods
mov
push
imul
lods
pop
icebp
mull
inc
jle
ss
out
jle
lock
movsb
and
push
push
decl
cmp
pop
mov
pop
jns
in
aas
or
sub
repz
push
sarb
jb
push
stc
rorb
scas
pop
aaa
fldcw
in
call
in
rorb
push
cmp
iret
lahf
aas
jg
push
xor
clc
or
and
loop
jmp
repnz
in
push
push
mov
aas
add
jbe
stos
sbb
call
mov
in
mov
lcall
sub
mov
cmpsl
out
xchg
sub
aas
jg
add
subb
jle
ja
mov
les
je
fsubrl
sarl
cld
jge
ret
mov
lock
out
or
push
ja
nop
inc
adcl
in
mov
xchg
lret
push
add
fimuls
inc
daa
mul
iret
lahf
aas
push
mov
jle
add
test
aas
sbb
cld
stc
repz
jne
scas
xchg
sbb
repnz
xor
xchg
mov
sti
push
fists
push
ret
lret
xchg
testl
je
mov
or
sub
int
imul
sub
mov
sbb
jae
cli
in
daa
push
xlat
iret
adc
jp
jae
add
stc
or
cmc
and
popf
jle
dec
je
into
lahf
add
stos
or
push
flds
sub
out
xchg
aad
jbe
cld
dec
clc
in
xor
sub
dec
cwtl
pop
stc
adc
lods
shll
and
enter
push
cmc
ret
icebp
movsl
loopne
test
es
lahf
rolb
dec
in
mov
push
cmc
daa
shll
ret
arpl
pop
adc
cwtl
pop
dec
aas
or
push
pop
jns
inc
and
xchg
xor
pop
jns
mov
xchg
jle
xchg
jns
push
adcl
pop
add
lea
sub
lcall
fmuls
jge
cmp
scas
mov
mov
adc
lock
pop
dec
cmp
pop
sahf
sub
imul
cld
stc
jge
not
mov
aam
outsl
jge,pn
stc
rep
in
mov
push
cwtl
scas
and
jg
add
adc
inc
xchg
int3
mov
lahf
push
mov
or
jp
loopne
repz
sahf
loope
push
sbb
lahf
cli
cmpsl
push
pop
popa
adc
iret
out
xor
aaa
or
stc
pop
cmc
lret
leave
jl
sahf
xor
push
jb
or
push
jg
xchg
ja
xchg
lcall
ja
aaa
xchg
push
pop
jns
xor
pop
daa
rcrb
cmp
cmp
jns
addr16
ds
or
mov
hlt
filds
insb
mov
sti
repz
pop
fidivs
adc
mov
cld
stc
and
js
dec
lahf
aas
jg
scas
lcall
mov
popf
ret
push
mov
test
sub
roll
jg
push
pop
jns
xlat
popl
mov
out
mov
mov
push
daa
xorl
fistps
xlat
mov
not
das
lahf
aas
dec
pop
lahf
dec
sbb
jo
insl
xor
lahf
aas
mov
outsb
push
cmp
and
xchg
in
inc
stc
stc
repz
pop
test
dec
les
lea
mov
pop
xchg
iret
fs
aas
add
mov
sbb
or
push
fs
das
sbb
push
mov
in
lods
jnp
push
xor
stc
or
cld
sar
jmp
ds
jg
pop
xchg
jle
hlt
stc
out
dec
or
pushf
hlt
push
jmp
outsb
data16
adc
repnz
repz
sbb
in
int3
adc
mov
inc
adcb
push
incl
mov
cltd
sbb
scas
mov
jl
push
push
mov
mov
xchg
xchg
xchg
lret
jle
aas
lods
pop
pop
jle
cmp
cmp
outsb
outsb
imul
out
jne
pushf
lret
jl
push
xchg
popf
sub
inc
test
jg
cld
inc
enter
out
icebp
sbb
fs
pop
cmc
jns
xchg
ja
adc
mov
mov
sbb
pop
popf
outsb
fbstp
hlt
test
pop
incb
mov
leave
sti
sahf
mov
stc
repz
mov
mov
dec
mov
xor
push
stc
mov
mov
enter
adc
push
jg
cld
ficoms
cmp
xor
pop
ss
jl
das
pop
push
in
mov
in
adc
lea
adc
popa
iret
das
push
pop
jns
outsb
inc
outsb
mov
pop
rorb
imul
adc
pop
pop
add
and
outsb
shll
outsl
sub
movsb
stos
loopne
aas
out
mov
mov
ret
leave
ss
sub
push
sahf
jecxz
cmp
cld
dec
clc
div
mov
rep
dec
mov
sbb
jg
inc
jmp
in
mov
cmp
mov
cmp
xchg
popf
inc
jle
or
out
pop
push
pop
rcr
cmpsl
mov
les
mov
jnp,pn
loopew
bound
cmp
sub
sahf
dec
push
dec
mov
dec
out
push
mov
pop
mov
test
pop
out
das
or
pop
scas
mov
jns
cmpsb
adc
xchg
out
lahf
mov
sbb
popf
in
and
test
outsb
mov
jmp
and
outsb
jns
xchg
push
sbb
cmp
xor
push
test
and
push
pop
sbb
das
and
enter
pop
pop
xchg
push
pop
jns
shr
or
shl
dec
xor
daa
hlt
jb
xlat
fmuls
mov
std
cmp
mov
jno
out
mov
mov
repz
enter
dec
lret
into
fsubl
cld
stc
shll
imul
pop
daa
xchg
lret
cmp
sub
jno
pop
push
push
subl
adc
jns
xor
jge
push
mull
iret
cld
test
dec
mov
jnp
sbb
call
sub
push
sub
aad
sbb
aam
sbb
clc
in
and
mulb
outsb
pop
dec
cmpsl
fmul
lahf
mov
shlb
scas
mov
or
scas
cmc
jb
push
cld
imul
incb
xchg
xchg
setg
jns
mov
sub
mov
outsb
pop
jns
xchg
xchg
cmp
mov
repnz
cld
pop
pop
into
mov
leave
test
fcmovnbe
iret
lahf
aas
jg
jl
or
push
movsl
xor
mov
jecxz
lea
imul
lahf
mov
jle
cld
stc
mov
mov
fistpll
or
xor
adc
sarl
jg
cld
scas
mov
cs
leave
mov
addr16
fidivs
push
jle
lret
mov
pop
scas
icebp
mov
dec
adc
adc
sub
add
shlb
repnz
lret
xchg
jg
inc
in
popf
sbb
outsl
lret
sub
ds
or
das
nop
adcl
xor
outsl
jmp
push
int3
jbe
cld
stc
xchg
mov
add
ljmp
int
lahf
aas
jg
aam
neg
clc
sub
xor
jo
out
and
add
daa
icebp
repnz
xchg
loop
in
mov
add
call
inc
outsb
mov
aas
mov
dec
cmc
je
shrl
stc
repz
jb
mov
cmp
test
xchg
inc
aas
jg
cld
sbb
xorb
js
mov
filds
jb
ret
push
sub
cld
pushf
push
idivl
jns
fstpl
dec
fwait
out
and
and
mov
dec
in
xchg
xor
jns
fnstsw
aas
roll
pop
iret
imul
cmc
jg
mov
sahf
cmp
jge
iret
jl
jle
adc
nop
cld
stc
repz
inc
rorl
xlat
dec
cmp
adc
mov
sahf
xchg
mov
call
jbe
out
cmp
dec
jl
mov
inc
pop
mov
fidivrl
clc
or
aas
jg
cld
pop
daa
jo
lods
sub
add
iret
lahf
mov
cmp
fdivrs
cmp
pop
stc
mov
out
sub
pop
out
test
push
push
cwtl
je
cs
mov
cld
movsl
aas
pusha
add
xor
lahf
inc
outsl
outsb
das
scas
sbbb
push
lock
add
std
jb
push
repz
aad
cwtl
sbb
pop
incb
cs
inc
jae
lcall
das
movsb
das
fldt
ds
test
pop
cld
stc
repz
or
mov
mov
es
fidivrs
lods
stos
cwtl
je
call
jns
call
xorb
sahf
pop
cltd
jnp
pop
jns
xchg
mov
mov
sub
push
cltd
push
enter
push
xor
ret
out
into
dec
icebp
popl
pop
pop
jns
jae
pop
push
out
adc
out
lahf
pop
ds
ss
aam
jecxz
ja
xchg
std
repnz
repz
push
sbbb
fcomp
lret
andl
out
pop
or
repnz
xchg
sbb
cs
jbe
in
stc
repz
or
fidivrl
inc
lods
lds
je
jg
cld
push
sbb
leave
in
je
jbe
inc
sbb
out
lahf
jmp
adc
mov
sub
loopne
jle
add
mov
inc
fadds
faddl
jo
arpl
dec
repnz
fwait
cmp
nop
sub
cmp
sub
inc
jnp
loop
xchg
cld
dec
cli
repnz
adc
pusha
fldenv
add
mov
ss
or
test
mov
jle
leave
or
add
es
iret
lahf
pop
ds
hlt
outsl
outsl
xor
xor
test
cmp
or
xor
flds
jno
mov
pop
out
cwtl
dec
mov
je
ja
inc
in
out
cmp
jp
mov
loope
pop
push
mov
test
mov
sub
repnz
mov
xor
pop
dec
nop
inc
repnz
push
mov
adc
lock
in
loop
sub
cmp
pop
out
shrb
scas
mov
lods
sbb
adc
into
add
aas
testl
or
fidivrl
jg
push
mov
inc
ja
icebp
push
inc
pop
lret
das
int3
cmpsl
mov
cmp
scas
mov
aam
dec
pusha
mov
mov
pop
jecxz
in
push
mov
push
xchg
add
jecxz
repz
add
imul
jg
out
fimull
cwtl
das
jg
cld
push
sti
iret
pop
add
insb
mov
sub
das
pop
add
in
aam
jecxz
iret
mov
lret
in
loope
mov
ds
xchg
addr16
mov
add
mov
lret
mov
repnz
inc
sub
jle
repnz
scas
xchg
addr16
lcall
outsb
cmp
call
repnz
out
les
fwait
ds
sub
idiv
sbb
jp
sbb
iret
cmp
pop
lahf
aas
jg
jmp
lods
xchg
fisttpl
aad
sub
pop
les
outsl
daa
xor
lret
iret
fiadds
movsb
cmc
pop
shrl
repz
imul
sub
push
lahf
ficomps
lahf
aas
jg
notb
sub
adc
out
fists
ljmp
adc
addr16
sbb
out
cmc
lret
pop
in
xlat
push
ret
test
pop
dec
fs
adc
add
push
shld
out
lahf
outsb
mov
mov
cmc
ficomps
stc
xchg
ja
stc
jnp
scas
ljmp
adc
in
mov
daa
xor
dec
or
xchg
jge
push
jg
adc
imul
scas
fucomp
pop
push
sti
xchg
push
iret
dec
lret
pop
adc
testb
mov
or
jg
and
sub
mov
jg
daa
outsl
aad
dec
cmp
notb
lret
inc
lahf
ret
repz
aaa
sbb
repnz
mov
xor
in
inc
imul
adc
repnz
into
pop
and
adc
sbb
iret
lahf
aas
aas
push
cmp
xchg
sub
sub
fsubrs
ret
into
lds
mov
cltd
leave
or
lret
xchg
notl
sbb
mov
iret
scas
outsb
inc
jl
and
push
lock
in
sahf
or
dec
fisubrs
fildll
mov
xchg
xchg
leave
in
out
lahf
aas
mov
push
xchg
insl
flds
sub
bnd
rolb
xchg
gs
rclb
int
jne
movsb
add
out
xchg
lahf
into
mov
scas
pop
lahf
or
lret
mov
fisubl
int
out
mov
js
leave
xchg
or
aam
jg
jge
iret
aas
test
mov
dec
cmp
pop
pop
fidivs
stc
repz
jbe
push
mov
xchg
adc
orl
sahf
or
out
iret
add
sbb
inc
jg,pt
mov
test
sbb
in
movsb
inc
and
add
loop
sub
jmp
sbb
fcomps
fs
rol
xor
xor
jb
xchg
inc
outsl
lea
scas
mov
stc
pop
loope
in
pop
repz
nop
mov
fildll
cld
cld
stc
cld
in
jg
enter
inc
out
push
mov
mov
sub
iret
lahf
jg
xchg
xchg
in
pslld
sub
hlt
test
xchg
out
push
outsl
mov
stc
xchg
fisubs
int
mov
repz
lods
insl
iret
lahf
aas
jg
fwait
jle
xchg
lds
fistl
sar
stc
repz
sub
mov
add
dec
inc
lods
stos
jmp
arpl
ret
inc
xchg
stc
repz
scas
not
jne
jp
xchg
and
add
mov
mov
stc
cld
cld
inc
pop
outsl
adc
fisubrs
cmpsl
mov
fwait
add
scas
sbb
jns
push
mov
cmp
cld
jb
xchg
mov
jle
pop
mov
pop
jle
out
jmp
popf
jo
das
pop
or
dec
int
inc
movsl
mov
xchg
pop
lea
pop
inc
stc
ret
push
repnz
jg,pt
rcl
pusha
dec
and
jge
jno
shrb
jnp
jmp
stc
add
sub
or
sbb
outsl
push
insl
mov
mov
repnz
dec
fwait
lods
lahf
and
push
xor
out
sbb
outsl
fldl2e
or
repnz
fimull
sar
xchg
in
das
fisttpll
scas
icebp
mov
pop
pop
mov
push
add
in
push
sbb
and
lret
lahf
mov
add
push
pop
js
add
repnz
aaa
fs
pop
loop
loope
push
mov
sar
sub
pop
cwtl
popf
mov
lcall
jg
cld
stc
sbb
xchg
or
adc
mov
xlat
jmp
add
das
adc
sahf
push
or
sti
mov
icebp
jb
sub
pop
add
lahf
mov
cmc
loopne
sub
jle
add
scas
cli
ret
mov
xor
push
daa
or
nop
pop
in
sub
dec
bound
clc
pop
push
cmpsb
inc
into
adc
cld
cmp
xchg
ja
jle
dec
test
inc
mov
xchg
jmp
add
cmp
js
adc
mul
dec
outsb
and
imulb
jl
mov
cld
stc
mov
pop
jmp
fwait
push
arpl
jg
filds
repz
scas
cmp
aas
mov
pop
cmpsl
jecxz
lret
in
adc
pop
cwtl
jl
subb
adc
in
push
pop
push
jne
cmp
xchg
pop
stos
das
push
pop
jns
jle
push
inc
in
icebp
loopne
repnz
pop
add
add
decl
clc
std
movsl
in
shlb
mov
sub
mov
inc
icebp
sbb
aas
jmp
lret
aaa
into
sarb
mov
fsubrp
xor
pop
inc
pop
pop
mov
data16
mov
or
nop
mov
pop
das
mov
lea
enter
lahf
cltd
xchg
mov
jns
call
insl
clc
xchg
fs
jns
sub
add
bound
add
xchg
ljmp
repnz
and
push
push
loopne
sub
repnz
test
cmp
out
push
xor
dec
lret
mov
popa
clc
sub
sub
xor
lahf
data16
fdivs
xchg
mov
cld
mov
mov
stc
repz
rorb
jg
add
mov
and
mov
jge
cmp
cmp
dec
test
jl
mov
divl
lods
stos
and
aaa
pop
jns
xchg
mov
jl
movsb
cmp
mov
test
mov
mov
and
iret
pop
cmp
scas
push
mov
mov
repz
mov
aas
sbb
aas
xor
pop
imul
mov
jae
jno
fmull
xor
or
mov
shl
adcl
or
or
into
xor
sbb
adc
dec
in
je
or
std
xchg
aas
xchg
iret
lahf
hlt
xchg
xor
outsl
lods
mov
mov
test
int
jns
inc
push
cmp
aas
jg
imul
or
mov
dec
mov
stc
repz
enter
or
faddl
sbb
bnd
adc
dec
popf
xchg
xor
lahf
aas
jg
adcb
rclb
cmp
adc
in
or
shrl
cli
and
rorl
std
jnp
sbb
imul
mov
cmc
inc
add
push
enter
pop
jns
and
pop
stc
and
jmp
jmp
repz
out
cmp
es
dec
cmpl
ret
fwait
rorl
stc
cld
stc
adc
mov
cli
das
add
jle
sbb
push
das
cmp
outsl
adc
ficomps
mov
pop
push
add
xchg
addps
frstor
cmp
pushf
repz
lahf
out
fsubrp
push
sbb
adc
inc
fcoml
jl
cld
stc
fwait
push
jle
ret
mov
mov
inc
mov
lcall
sbb
sub
adc
out
lret
call
pop
jmp
jns
or
movsl
dec
fistps
nop
popf
inc
call
es
and
repnz
lock
dec
lds
shll
mov
bound
pop
imul
lahf
outsb
mov
cmp
adc
xor
iret
cwtl
icebp
insl
arpl
adc
lret
neg
lahf
test
cld
push
adc
cld
and
xchg
inc
add
cmp
ss
mov
in
dec
jae
xchg
aas
xchg
cwtl
test
sub
or
test
andb
repnz
or
aas
lret
mov
mov
mov
nop
fs
cltd
fcomp
pop
lret
scas
push
lcall
xor
scas
mov
add
push
mov
inc
mov
iret
das
test
push
cmpl
div
inc
pop
testl
inc
or
daa
xchg
push
repnz
pushl
sbb
loopne
test
add
out
imul
push
mov
xchg
push
pop
bound
lcall
add
into
sbb
mov
or
cmp
push
jg
in
ja
dec
pop
jg
stos
sub
sbb
pop
jns
sub
mov
div
jge
mov
mov
idivl
mov
jg
cld
dec
scas
push
adc
adcl
pop
popf
adc
lahf
aas
les
insl
adc
imul
mov
es
decb
fs
lahf
aas
push
out
popf
nop
and
push
or
js
cld
stc
repz
xor
testb
cmpsb
push
push
pop
adc
mov
pop
and
int3
push
or
iret
lahf
pop
push
js
push
movsb
cltd
stos
out
popa
jp
or
cld
stc
repz
mov
je
dec
xor
shll
cli
lods
xchg
aas
jg
andb
xor
repz
pop
push
cmp
jb
test
stc
stc
dec
pop
and
pop
dec
or
repz
pop
jns
xchg
push
mov
notb
jne,pn
pop
jle
push
pop
pop
aam
test
mov
pop
mov
aas
aas
dec
mov
lock
aas
jg
loopne
sahf
rcll
and
in
and
js
aas
jp
dec
fs
push
pop
jns
mov
rclb
jg
xchg
mov
scas
cmc
in
cmp
pop
fmul
and
mov
sub
cmp
fisubrl
scas
loopne
in
das
clc
push
ja
stc
repz
ret
ljmp
cmp
andb
xchg
push
push
push
in
mov
push
out
lahf
push
xor
out
mov
pop
out
mov
push
ljmp
add
scas
xor
jle
out
mov
andl
pushf
mov
scas
mov
add
inc
adc
pop
jle
jg
je
ret
xor
cmp
jg
aas
sbb
mov
nop
iret
andb
inc
mov
mov
iret
in
out
jle
cld
jns
xchg
pushf
fcoml
stc
outsl
movsl
mov
pop
movsb
xor
daa
into
andl
rclb
out
bound
xor
in
or
sub
sbb
outsl
hlt
lret
xchg
js
gs
push
movsb
pusha
adc
into
and
mov
outsl
sarl
xchg
jo
aam
leave
repnz
sarl
xchg
mov
dec
push
dec
pop
scas
mov
and
repnz
sub
jns
sub
out
mov
dec
jns
add
jmp
lret
pop
cltd
cmp
clc
in
push
enter
fimuls
lods
aas
jg
cld
fsubp
adc
sub
dec
gs
repz
lahf
gs
dec
lcall
push
xchg
std
repnz
push
mov
dec
pop
add
or
jg
mov
jle
adc
ror
orl
cmc
inc
repz
lahf
lret
dec
add
incb
inc
jle
cld
stc
sub
cmpsb
mov
insl
sbb
sbb
mov
rep
and
dec
push
xchg
xor
mov
inc
ja
daa
xor
mov
jle
sti
movsb
leave
outsl
leave
in
scas
mov
add
test
movsb
xor
and
lahf
aas
jg
clc
cmp
enter
in
xor
cld
cld
adc
mov
js
sti
and
mov
movsl
repnz
jle
push
pop
repnz
mov
call
enter
pop
scas
mov
xchg
push
loopne
xor
iret
das
mov
popf
test
jg
cld
stc
cmp
xor
jb
icebp
ljmp
mov
mov
repz
sbb
lds
add
mov
cld
cld
repz
sbb
jl
out
ljmp
repnz
pop
cmp
stos
mov
sub
int3
pop
fisttps
mov
cs
testl
lods
iret
xchg
add
xor
stc
add
cwtl
clc
iret
cld
lods
mov
lret
mov
jl
xchg
pop
jno
and
repnz
mov
popa
nop
ss
add
push
das
and
dec
xor
xchg
sub
pop
cmp
push
add
push
fsubp
out
stos
mov
mov
adc
sub
in
xor
add
in
jmp
adc
jne
add
scas
lcall
loop
fsubrp
and
repnz
mov
sub
pop
or
jle
and
shll
push
test
sarb
and
mov
pop
mov
sub
jns
pop
daa
or
and
sbb
sub
je
xchg
notl
lahf
pushw
and
repnz
mov
push
xchg
mov
cmpsb
out
sbb
aas
mov
adc
repz
lods
fcomps
sti
sbb
push
dec
xchg
sbb
cmc
out
das
jge
imul
lahf
adc
lahf
pop
scas
mov
push
icebp
sbb
jp
pusha
lock
lret
mov
aam
adc
pop
fst
pop
dec
xchg
push
pop
jns
jecxz
mov
inc
imul
in
pop
in
jb
and
shlb
mov
or
aaa
outsl
les
jl
xchg
call
jle
idivl
push
cwtl
aaa
add
adc
addr16
in
das
lahf
xchg
cmp
int
icebp
lahf
mov
push
pop
jns
arpl
mov
sbb
cs
in
xchg
sbb
dec
dec
xchg
repz
dec
pop
lds
icebp
sarb
push
xor
fnstsw
cld
add
jle
or
aas
and
sbb
xor
sahf
shl
xor
stc
daa
sub
and
repnz
lret
push
sbbl
hlt
bound
scas
mov
xor
imul
repnz
xchg
xchg
adc
inc
jns
in
into
test
sti
lock
mov
xlat
jb
push
adc
aas
scas
push
out
popf
xchg
lret
mov
lahf
pop
dec
mov
std
clc
xor
sbb
cmp
repz
flds
out
ss
push
xchg
mov
loopne
aam
aaa
fisubrl
or
fs
dec
fnstsw
lret
or
outsl
mov
jp
mov
in
mov
xchg
add
insl
mov
or
sub
jle
xchg
cmp
or
push
sub
sub
iret
xlat
outsb
xor
les
xor
sbb
pop
dec
pop
call
das
ficomps
cmp
cmp
es
jo
mov
repnz
push
lods
ljmp
into
jne
lret
mov
add
mov
out
cli
repnz
lcall
jb
insl
ret
stc
repz
mov
shrb
add
lods
out
lret
sub
das
dec
inc
popa
and
ret
repz
and
jg
fildll
jmp
outsl
mov
jnp
push
jns
in
dec
dec
je
ja
jo
mov
push
fidivrs
movsb
cltd
scas
aad
push
dec
arpl
ror
jge
in
jle
xlat
mov
roll
lahf
cmpb
add
dec
push
add
icebp
stos
or
repz
into
lods
pusha
xlat
sarl
out
call
cld
orb
stos
or
fiaddl
inc
loopne
out
lahf
add
decb
sub
je
push
push
cld
stc
mov
pop
mov
vmwrite
decb
fsubrl
inc
lods
push
pop
push
das
pop
loopne
iret
cmp
leave
jne
add
cs
pop
jns
repnz
pop
stos
cmc
jg
lret
cmpsb
rcrl
ja
aaa
jmp
or
cmp
movsb
xchg
push
pop
jns
test
pop
push
mov
jb
stos
jnp
sbb
push
aas
pop
sub
jge
div
shl
test
iret
push
inc
daa
aad
xor
or
pop
xchg
test
lahf
scas
ret
loope
repz
lahf
std
pop
push
jns
add
jle
test
stc
loop
sbb
sbb
ss
mov
add
cld
inc
mov
jle
mov
jg
sub
jg
xchg
add
pop
push
or
add
and
push
add
repnz
cld
add
pop
fwait
jb
push
dec
das
jg
cld
push
push
jbe
jo
sub
js
repnz
pop
shl
scas
pop
mov
and
pop
jns
jl
stos
movsl
mov
xchg
rcl
jns
xchg
ja
and
in
dec
xchg
addr16
in
push
pop
xor
add
out
xchg
push
pop
jns
adc
pop
push
test
pusha
sub
pop
jns
imul
stc
push
std
jb
xchg
push
xchg
in
and
scas
inc
fiadds
aas
roll
adc
pop
xchg
bound
jns
aam
cmp
sub
xchg
rolb
mov
fldl
lahf
push
out
dec
push
aas
jp
ja
sbb
jns
sbb
ret
lcall
push
pop
std
jb
ja
fstpl
repnz
outsl
push
scas
rclb
xchg
dec
jmp
xchg
addb
sbb
xchg
sub
aad
ja
scas
push
out
or
in
jl
and
insb
les
sub
xor
iret
mov
push
stos
or
scas
push
push
cli
in
mov
xor
outsb
movsb
mov
mov
cmp
sub
das
out
out
push
pop
cmp
jge
mov
mov
testl
mov
sub
ds
or
aam
xchg
lods
das
in
push
pop
shrb
sub
cmp
notl
mov
mov
mov
in
push
pop
cwtl
std
scas
mov
add
decb
int3
xchg
lcall
in
push
das
sub
jge
jb
sar
rcr
mov
cwtl
fisubl
pop
rcl
xor
pop
jns
dec
loop
pop
pushf
add
lret
aas
data16
insb
dec
xchg
daa
jo
clc
jl
lret
push
enter
idivb
mov
sahf
fwait
out
mov
mov
sbb
repnz
mov
gs
xor
je
std
ficompl
cld
adc
or
add
fcoml
xchg
mov
enter
iret
pop
test
cs
push
and
jg
std
xchg
jb
lcall
in
sbb
imul
jl
ds
stos
div
mov
sbb
mov
jmp
push
shrl
das
mov
mov
sbb
dec
mov
xor
xchg
lahf
pop
mov
push
js
dec
mov
cld
pop
mov
cmc
ja
cwtl
pop
jno
cs
aas
aas
xor
test
imul
lods
push
mov
xor
lret
jle
mov
push
aas
jge
mov
dec
push
cs
mov
lods
mov
dec
mov
jecxz
pop
cld
mov
clc
fcmovbe
mov
mov
mov
add
bnd
fidivs
aas
aas
push
pusha
adc
call
iret
lahf
sti
jg
movl
repnz
repz
sbbl
scas
sbb
repz
push
sbb
les
jle
sbb
push
lods
mov
mov
add
pusha
movsl
jmp
js
out
leave
jp
add
out
inc
fwait
inc
and
adc
jge
dec
enter
out
lahf
aas
shr
add
jle
push
pusha
test
push
pop
cli
in
mov
pop
push
hlt
outsl
outsl
repz
shlb
mov
add
rorb
jg
cld
stc
movsl
les
xchg
xchg
roll
cld
loopne
mov
adc
les
add
scas
mov
shlb
scas
das
mov
jle
repnz
or
pop
sub
aas
lahf
aas
mov
jae
pop
lcall
lret
adc
fwait
loope
repz
jle
xor
int3
mov
ss
mov
mov
aas
cli
lret
push
fbstp
push
or
repz
lahf
fstps
loope
in
out
mov
sub
cld
stc
jecxz
pusha
dec
ret
adc
push
sbb
test
out
lahf
aas
sbb
std
in
inc
das
mov
das
mov
mov
aas
repnz
das
mov
movsb
cs
lods
lahf
adc
add
je
repz
fimuls
cld
cmp
fwait
adc
repnz
dec
mov
add
mov
xchg
sub
cmpsl
or
push
scas
inc
test
repz
jmp
jge
fstpl
lret
daa
aas
in
fnstsw
jg
cld
test
mov
arpl
outsl
in
lahf
in
outsl
popf
xchg
out
fldlg2
cltd
jg
pop
jns
lret
adc
nop
rorl
test
out
push
inc
outsl
out
adc
inc
mov
daa
or
mov
pop
out
les
scas
mov
xorb
xchg
mov
mov
sub
jecxz
sub
jo
jle
cld
adc
jge
dec
cld
iret
rcrl
rolb
sub
lahf
xchg
outsl
xchg
pushf
fsts
lret
mov
mov
ja
sub
shlb
repnz
push
jb
mov
mov
ljmp
daa
mov
cli
in
sub
aas
push
xchg
push
imul
out
mov
and
xor
idivl
pop
jns
cmp
mov
add
daa
hlt
in
and
nop
cmpsb
jp
adc
sbb
push
dec
adc
ja
push
cli
decl
adc
mov
lahf
aas
mov
push
xchg
movsb
or
repz
aam
and
stc
repz
mov
adc
sbb
sbb
jp
and
rcr
pop
hlt
cli
push
jae
clc
jl
jo
repz
add
mov
aam
rcrb
mov
mov
mov
xor
cmpl
pop
lret
lock
aas
jg
push
data16
pusha
lds
xor
and
stc
mov
jge
and
mov
movl
aas
sbb
or
das
out
jo
outsb
jg
ret
xor
or
lret
mov
mov
cmp
mov
aam
scas
mov
shl
mov
fcoml
pop
aas
ret
addr16
jmp
dec
sbb
xor
lret
pop
scas
cmp
dec
mov
das
jmp
les
and
cld
cld
inc
clc
stos
jecxz
call
push
jae
imul
lret
nop
addb
pop
scas
mov
loopne
out
jnp
lahf
ljmp
pop
insl
popa
cmp
xchg
mov
imulb
gs
jp
shrl
aad
add
das
imul
push
pop
sbb
repz
mov
ljmp
lcall
xchg
cmpl
inc
inc
scas
out
push
fistps
addr16
add
in
out
lahf
mov
scas
testb
cld
stc
xor
hlt
bound
out
clc
xchg
and
ja
jl
adc
call
decb
pop
xor
das
test
lcall
push
xchg
lods
mov
fcmovbe
mov
jle
lahf
aas
jg
jnp
push
popa
andl
in
aaa
mov
bswap
pop
inc
lcall
pusha
jle
dec
inc
push
mov
cld
stc
or
push
hlt
scas
arpl
add
adc
aas
push
inc
mov
fnstcw
dec
insb
outsl
enter
call
lret
jno
mov
negb
mov
int
xor
stos
add
xchg
scas
mov
fsubrp
insl
mov
repz
sahf
xor
push
sbb
repnz
orb
add
push
jle
rcr
lahf
aas
jg
jg
dec
inc
jae
mov
in
popl
pop
scas
movsb
jb
pop
cmp
jnp
leave
sbb
sbb
pop
das
jne
and
scas
mov
cmc
xor
mov
aaa
imul
gs
movl
mov
or
xorb
jge
stc
aas
inc
hlt
imul
iret
push
fcoms
push
push
or
mov
xor
mov
pop
mov
jl
mov
stc
pop
cmc
in
xor
push
sbb
jle
out
stos
push
mov
sbb
out
fmul
sbb
stc
add
outsl
pop
adc
push
fbld
in
push
pop
out
dec
fidivrl
xor
xchg
lods
jg
sub
das
xchg
sub
or
scas
mov
cmp
call
dec
scas
mov
dec
push
mov
mov
std
enter
mov
xlat
loopne
adc
lret
xchg
push
jle
fidivl
lret
lods
pop
outsb
cmc
clc
push
push
cmp
pop
jle
inc
push
fsub
jnp
daa
xor
sbb
lretw
xchg
ja
fbld
mov
add
out
and
fbld
lcall
pop
and
jg
pusha
fimuls
sub
dec
sub
stos
lret
pop
adc
add
dec
pop
test
outsb
pushf
cs
in
lock
mov
xchg
in
jp
ret
pop
rcr
popl
sub
fs
loopne
loop
jno
in
sub
lea
mov
clc
and
add
faddl
xchg
jge
dec
sub
negl
jnp
push
repnz
cld
mov
pushf
jb
xchg
push
push
out
sbb
adc
or
pop
push
dec
push
adc
stc
repz
aas
adc
and
jl
cld
mov
loopne
mov
outsl
xor
push
mov
jg
pop
push
sahf
jmp
adc
cmp
iret
cmp
lgdtl
add
stc
hlt
arpl
lret
sub
mov
addr16
push
or
repz
mov
mov
pop
pop
loopne
inc
sbb
sbb
repnz
pusha
dec
add
dec
sbb
scas
mov
in
sub
cmpsb
and
mov
stc
stc
mov
daa
mov
sbb
add
mov
mov
icebp
repnz
add
fildl
mov
out
sti
pop
pop
jecxz
scas
mov
outsb
jge
mov
cmp
call
lret
loope
scas
out
sub
dec
jge
jns
xchg
push
push
sub
movsl
jp
jno
hlt
lock
in
push
pop
pop
sbb
push
adc
std
mov
push
pop
shlb
dec
push
imul
add
subb
push
mul
stc
repz
mov
addb
stc
sbb
scas
mov
add
aas
bound
sub
mov
bound
or
mov
lods
jg
sub
lahf
mov
mov
mov
jae
pop
outsb
hlt
mov
mov
pop
pusha
jb
jne
pop
or
xorb
xchg
mov
out
fcom
mov
jg
test
cmpsb
push
inc
or
adc
add
popf
jns
xchg
push
cmp
sub
cmp
repz
jne
dec
add
dec
xor
mov
daa
cmp
sub
pop
scas
in
push
add
pop
loopne
lahf
aas
lcall
lods
jle
mov
inc
jno
jb
clc
repnz
pop
xchg
pop
pop
xorb
or
cld
inc
cs
jns
rolb
mov
xchg
lahf
aas
cmp
sbb
repz
push
mov
daa
shlb
adc
add
jg
cld
sub
sub
loope
sbb
add
xchg
lahf
ja
iret
nop
push
dec
fnstsw
jg
cld
out
lock
and
cmpsl
mov
add
lahf
adc
push
outsl
cltd
lods
test
push
pop
jns
push
nop
mov
dec
adc
xchg
fcmovnb
mov
nop
xchg
push
stos
sbb
xor
push
add
lret
iret
push
lret
test
push
daa
out
lahf
cld
stc
jae
arpl
pushf
push
xor
test
int3
ja
je
scas
dec
mov
mov
das
cmovle
in
mov
jns
in
scas
out
aaa
pop
push
push
push
dec
cmpl
loop
bound
inc
fadd
insb
mov
jns
out
adc
ret
and
enter
xor
das
mov
or
lods
mov
push
add
lahf
aas
or
and
sbb
jmp
jnp
repz
sub
sahf
mov
andl
mov
addr16
test
adc
scas
mov
mov
pop
push
cltd
popa
and
xor
xchg
test
out
ds
xor
mov
lock
or
movl
movsb
push
outsb
jecxz
pop
adc
iret
scas
lods
jg
pop
scas
push
mov
ja,pt
cld
stc
repz
aas
adc
inc
jb
xchg
test
pop
jg,pt
xchg
or
cmpsb
pusha
gs
aas
jg
movsl
dec
jle
push
jnp
scas
insl
rcrl
lahf
outsb
mov
mov
lret
out
pop
cmc
pop
test
or
sar
mov
jae
fbld
jp
mov
in
sub
fldenv
xchg
sub
push
test
push
sbb
out
ljmp
repnz
inc
fmuls
and
popf
pushf
mov
dec
mov
jo
add
out
jle
mov
loop
das
mov
repnz
fsubrp
lret
inc
inc
jae
pop
scas
fs
dec
pop
jns
xchg
divl
push
std
lock
xchg
sbb
call
xchg
push
mov
pop
adc
mov
xchg
rcr
mov
lcall
xchg
fmull
mov
mov
pop
stc
in
in
mov
jns
sub
adc
jns
xchg
push
aaa
or
xchg
pop
mov
cmp
pop
or
popf
push
pop
loope
jecxz
das
adc
cs
out
loope
stos
hlt
in
test
cld
lods
add
sub
cli
hlt
xor
or
jg
iret
das
orb
out
inc
add
sbb
sbb
mov
fcomi
out
ret
push
arpl
cwtl
inc
fdivrl
movsl
sub
mov
mov
in
into
sbb
out
stc
stc
xchg
lock
in
add
test
mov
iret
das
sub
jb
fwait
xor
js
mov
xchg
cmp
dec
push
lret
pop
inc
and
mov
in
push
iret
cmc
xchg
add
test
add
inc
mov
inc
push
in
mov
lret
add
pop
lret
xadd
cmp
xor
test
pop
cld
mov
jge
dec
add
dec
adc
ficoms
push
mov
aas
into
mov
dec
jno
cld
stc
out
mov
adcb
mov
pop
test
dec
int3
cmp
sub
pmaddwd
and
repnz
movsb
dec
jnp
cmp
push
inc
mov
outsl
shll
adc
pop
stc
add
xor
mov
cld
xor
mov
mov
fcoms
iret
lahf
aas
aas
push
jb
sub
fwait
orb
dec
adc
in
mov
out
sbb
cmp
lret
inc
fsub
imul
push
mov
lret
sub
xchg
iret
and
stc
repz
cmp
stos
ffreep
dec
std
outsl
out
mov
imul
jg
xchg
mov
mov
lret
es
adc
pop
ds
inc
mov
orb
aad
shrd
rorl
mov
ds
jns
lds
int
incl
push
and
push
pop
ltr
dec
lods
jo
adc
push
pop
jns
sbb
push
mov
push
add
pop
pop
jns
popf
cli
pop
stos
push
and
int
les
aas
pop
das
adc
popa
dec
imul
imul
insb
sbb
sub
mov
fsubs
repnz
jle
pop
clc
out
outsl
fists
movsl
or
scas
mov
dec
adc
rcrb
sub
sbb
jge
cltd
into
movsl
jle
repnz
lret
sub
cmpsb
sbb
xor
ficomps
xchg
cld
mov
sub
mov
test
leave
push
andl
scas
mov
and
push
testl
dec
pop
jmp
cmp
jle
cld
stc
repz
mov
sub
fs
inc
inc
inc
movsb
das
aas
jg
xlat
clc
test
jno
fidivrl
repz
setle
add
inc
mov
lahf
adc
jno
stc
inc
or
fcmovbe
adc
jno
jle
cld
sti
sbb
std
lret
fsubp
aas
cmc
xchg
lahf
aas
jg
stc
ss
cwtl
adc
leave
cmpsb
stc
fimuls
add
sub
add
aam
out
jle
sbb
incb
push
test
incb
in
jle
das
jecxz
adc
out
xchg
mov
insb
add
das
scas
mov
ficompl
push
sbb
pop
mov
dec
mov
xor
cld
stc
repz
jl
ja
inc
movsl
sub
cmp
jno
int3
sbb
lahf
aas
jg
pop
cmc
in
lret
dec
fstpt
cmp
out
ret
dec
lret
decb
cld
stc
repz
mov
dec
mov
dec
add
jle
shll
pop
dec
test
sbb
sahf
pop
jle
repnz
push
adc
inc
test
mov
lret
lahf
jb
aad
push
push
call
lret
out
clc
clc
lods
mov
lret
into
fdivr
std
jb
lcall
dec
daa
std
jne
jg,pt
inc
out
mov
mov
aaa
aad
aas
cmpsb
pop
sbb
pavgb
repz
lahf
out
xchg
iret
enter
adc
xor
xor
stos
push
aad
push
add
and
cld
stc
add
movsl
lock
pop
pop
das
addl
iret
lahf
pop
sbb
xchg
inc
inc
xor
stc
repz
mov
test
clc
add
jg
add
jl
shlb
ret
mov
cmp
and
std
punpckldq
dec
pop
daa
xchg
iret
lahf
aas
and
adc
out
stc
repz
push
jecxz
ds
lcall
jg
cld
dec
or
xchg
lock
movsb
int3
push
shll
lahf
xorb
push
push
push
out
mov
push
repnz
dec
fisubrl
aas
dec
repnz
imul
mov
scas
mov
xor
pop
aas
scas
mov
fcomps
mov
popf
ja
mov
popf
sahf
mov
rorl
aas
xchg
mov
mov
pop
movsl
fildll
sbb
mov
jl
lahf
aas
lcall
cs
int3
inc
rorb
sbb
or
movsb
pop
fscale
insb
jo
sbb
in
push
in
enter
push
mov
lahf
or
cmp
daa
mov
es
stc
repz
jmp
push
lret
fldl
in
jg
cld
pusha
cmpb
hlt
ret
cli
sub
test
out
lahf
sbb
xchg
cmpsl
arpl
and
push
aad
cmp
pop
mov
scas
mov
leave
gs
mov
xor
ljmp
sub
call
cs
sub
fldl
jns
fstpl
pmaxub
lods
and
orl
fbld
mov
mov
dec
pushf
inc
das
push
pop
jns
or
sbb
scas
cltd
cmp
das
xor
adc
aas
daa
hlt
stos
into
mov
cld
stc
xchg
inc
inc
addl
notb
in
popf
fists
mov
sbbb
pushf
sub
out
xchg
or
aas
adc
push
mov
shrb
jecxz
out
push
iret
mov
mov
pop
lret
xchg
push
mov
sub
rcrl
ret
dec
mov
stos
mov
fsubrp
outsl
jno
xor
scas
add
pop
xchg
aas
jg
fidivs
mov
insb
std
bound
inc
mov
add
mov
pop
sub
iret
lahf
pop
dec
push
movsl
mov
adc
cmp
jns
mov
iret
lahf
aas
aas
out
shrb
mov
add
sbb
dec
jmp
out
popf
jge
test
pop
jle
repnz
repz
daa
lods
loopne
outsb
mov
xchg
push
fidivrs
movhps
xchg
push
pop
jns
ss
mov
inc
subb
shlb
icebp
lcall
jno
jg
cld
xchg
sahf
int
js
push
pushf
out
xchg
inc
mov
adc
daa
inc
push
jge
lods
ja
inc
jl
lcall
sahf
or
jns
mov
jp
mov
ja
cld
xchg
mov
xor
pop
out
xor
mov
in
rcll
pop
xchg
dec
push
pusha
xor
xlat
adc
in
push
mov
dec
add
cmp
mov
xchg
out
popf
inc
mov
outsl
movsl
xchg
out
out
mov
cwtl
or
pop
mov
ljmp
jle
roll
lret
jns
popf
ds
shll
bound
sub
xlat
aam
je
rorl
mov
mov
imul
aam
lahf
cld
subl
xchg
insb
ljmp
jecxz
icebp
out
xchg
dec
pop
loop
inc
or
cld
push
push
fcomps
or
mov
sbb
lret
mov
insb
test
call
jno
repnz
or
jns
movsb
xchg
pop
mov
dec
subl
sub
jle
dec
lret
aaa
outsl
xchg
and
mov
adc
out
scas
mov
mov
test
fwait
adc
iret
lahf
movsb
xor
or
jbe
stc
cld
stc
rep
sub
cmp
jmp
jle
rorl
adc
pop
divb
das
push
pop
jns
lods
push
imul
jnp
xchg
addr16
xor
xchg
mov
outsl
aad
push
mov
hlt
adc
jl
stc
repz
movsl
push
xchg
leave
push
lds
jg
sub
jno
push
fs
xchg
push
pop
jns
lock
fisttps
and
adc
mov
jo
int
fadds
repnz
mov
sbb
mov
pushf
iret
pop
mov
pop
push
xor
in
stc
repz
xchg
call
aaa
int
loop
cmp
enter
or
push
popa
mov
lahf
aas
mov
shll
testl
out
cmc
nop
or
jb
lods
sbb
icebp
mov
scas
push
fidivrs
loopne
mov
cmpsl
cmp
rcrl
sub
jns
fstl
lahf
or
loope
push
mov
in
push
pop
movsb
dec
sti
sbbl
arpl
jg
pop
jns
fdivrp
inc
push
enter
mov
dec
jo
sub
out
jp
js
pop
repz
stc
repz
push
pop
in
add
std
pop
andb
call
rorb
mov
xchg
movsb
mov
xchg
jg
into
jmp
lock
popa
data16
call
add
dec
outsb
sarb
dec
fadds
fbstp
aas
jg
cld
cs
xor
cs
or
push
sub
push
cmp
repz
lahf
mov
clc
popf
sub
and
stc
pop
push
stos
ret
bound
mov
mov
aas
shlb
and
dec
push
pop
jns
mov
mov
ret
jns
mov
or
pmulhuw
xchg
ja
out
sbb
sbb
out
jnp
lret
hlt
push
mov
mov
popa
sub
nop
push
mov
push
pop
scas
mov
popa
xor
mov
and
jp
aas
test
in
ja
mov
aam
aam
jo
xchg
push
pop
jns
xor
aad
pop
icebp
mov
das
das
cmc
lret
insb
popa
and
fstps
daa
leave
inc
xchg
loop
sbb
iret
aam
pop
iret
cld
stc
repz
fldt
in
movsb
loop
xchg
fs
jl
pop
pusha
xchg
xor
mov
inc
leave
jmp
pop
xchg
and
leave
out
stc
sbb
stc
repz
inc
cmpl
lea
xchg
lahf
aas
jg
mov
dec
je
ljmp
jns
fldl
and
and
in
push
and
jb
hlt
test
sub
lcall
jg
sub
pusha
add
aad
cwtl
aas
jle
repnz
sub
into
mov
jo
repnz
aas
xor
lret
shll
lret
mov
cmp
out
pop
adc
repnz
int3
xchg
lea
call
out
cli
sti
inc
stos
fstps
pop
call
cld
stc
repz
add
sub
xor
jl
sarl
stos
inc
pop
pop
inc
stc
xchg
cmpsl
dec
fdivs
cld
xor
push
pop
movsb
sti
imul
mov
leave
lret
fidivrs
lahf
aad
and
les
test
cmp
ds
dec
push
outsl
pop
jno
ljmp
cld
mov
adc
sbb
hlt
cmpsb
dec
jnp
leave
aas
lcall
repnz
lahf
pusha
popa
mov
push
hlt
push
mov
mov
out
outsl
ficomps
into
push
adc
rep
test
fbld
mov
push
clc
in
icebp
and
mov
mov
fbld
pop
test
or
push
pop
je
sub
inc
pop
and
adc
pop
jns
icebp
dec
xchg
adc
xor
xor
xchg
xchg
imul
push
xchg
push
fsubp
inc
fs
cmp
or
adc
jns
imul
ret
jp
mov
fdivs
add
sub
aam
cmp
jns
xchg
push
call
scas
push
dec
pop
ja
xchg
push
pop
mov
xchg
rcl
jnp
mov
mov
xchg
push
pop
jns
jae
lcall
sub
mov
mov
call
int
icebp
out
jle
repnz
lods
xor
mov
mov
cli
in
sub
mov
call
mov
in
sub
push
mov
xor
mov
xor
inc
pop
cs
ret
ret
repnz
cmp
pop
ljmp
pop
jb
mov
adc
in
cld
in
xorb
mov
push
cltd
cwtl
popa
iret
aas
mov
mov
jae
aas
mov
and
sub
aaa
mov
jle
jl
mov
mov
movsb
mov
jb
popf
outsl
cmpsb
mov
push
dec
sbb
stc
repz
pusha
insb
insl
push
add
pop
mov
in
pushf
testb
loop
mov
out
lahf
imull
shlb
adc
jl
cld
stc
adc
in
leave
pushf
mov
stc
push
mov
xchg
ja
jecxz
mov
cwtl
dec
inc
xchg
out
push
std
pop
add
mov
pop
cmp
push
pop
cs
mov
cmp
adc
push
pop
jns
insl
ljmp
enter
aaa
cli
adc
fsubrl
dec
mov
cmp
das
jno
add
mov
push
inc
in
aaa
shlb
pop
jno
loop
ss
leave
jle
pop
jns
push
call
jno
or
fcoml
in
inc
jb
fcoms
add
test
out
aaa
sub
or
repnz
mov
sub
bswap
xchg
jg
insb
in
inc
adc
jle
mov
mov
pop
mov
xchg
mov
outsw
cmpsb
cmpsl
cld
stc
repz
stos
scas
dec
push
jo
push
mov
mov
jb
xchg
lahf
aas
jg
nop
xchg
stos
xchg
dec
andb
pop
repnz
push
stos
pop
sbb
hlt
mov
push
fs
pop
scas
mov
sbb
dec
cmpsb
sahf
loopne
push
test
ss
enter
scas
jl
jns
stos
cltd
daa
xor
nop
adc
das
push
pop
jns
out
lods
addl
pop
and
inc
push
scas
jne
dec
aas
xor
call
xchg
bound
imul
push
pop
jns
adc
jo
or
mov
add
scas
mov
xchg
cmp
and
movsb
fwait
inc
push
mov
cld
imul
out
dec
jl
dec
imul
sub
inc
cmpsl
fldt
testl
xchg
jle
iret
mov
in
shrb
mov
imul
mov
mov
adc
mov
cmpsl
or
pop
pop
jns
mov
sub
jp
fsubr
lahf
das
in
jg
mov
bound
pop
es
out
and
scas
ret
sahf
sub
dec
stc
mov
enter
in
hlt
jle
xchg
enter
cld
cld
inc
imul
inc
xor
lahf
add
cs
add
shr
mov
sub
cli
shrb
mov
scas
push
xchg
mov
insb
mov
repnz
pop
bound
add
mov
mov
test
cmp
jg
and
cmc
xchg
jne
scas
mov
aad
fidivs
jno
mov
push
xchg
iret
mov
xorl
adc
stc
repz
inc
push
cmp
paddd
push
andl
sbbl
cmp
cs
inc
out
sar
cld
xchg
js
and
das
push
ja
call
das
aas
jg
outsb
outsl
mov
imul
xchg
push
pop
jns
outsb
movsb
loopne
fdivrp
sub
repz
sbb
in
test
lea
pop
cs
into
mov
outsb
mov
iret
adc
iretw
push
jne
pusha
adc
hlt
rcrl
pushf
pop
adc
fisttps
nop
out
dec
jge
fidivs
jno
jnp
sub
scas
mov
stc
push
mov
cmp
mov
xchg
xchg
out
sub
sbb
jns
mov
orl
stc
repz
mov
fnstcw
jge
mov
mov
mov
repnz
scas
pop
or
iret
aas
orb
mov
jmp
in
or
push
jge
popa
insl
ja
jg
cld
ds
iret
and
pushf
iret
pop
movsl
pop
jno
and
pop
inc
jo
lock
out
and
lods
pop
insb
pushf
mov
bound
or
fiadds
std
outsl
loope
scas
mov
xor
or
std
shrb
lret
sub
testb
pop
inc
vdivss
in
cs
add
leave
aam
in
sbbb
ds
repz
lods
jnp
push
repnz
es
scas
lock
xor
mov
loop
pop
addl
pop
incb
fbstp
in
sub
pop
adc
sub
out
js
adc
sub
inc
cld
sbb
lahf
sub
fcoms
lret
outsl
stos
popf
ds
dec
sub
and
scas
lahf
or
cmpsl
stc
repz
sahf
incb
push
add
rclb
stc
cld
cmp
fnstcw
push
add
jg
sub
mov
jmp
fs
scas
mov
dec
dec
aaa
cwtl
inc
xor
rcrl
iret
scas
addb
or
add
fimuls
repnz
loope
cmp
xor
pop
push
jle
jb
jns
mov
jno
rcl
lret
lahf
aas
decl
mov
jb
or
xchg
int3
sarl
cmp
stc
jl
cld
stc
insl
aas
mov
xchg
mov
int3
inc
lahf
pop
sbb
scas
insb
das
shlb
out
sahf
icebp
or
std
scas
cwtl
adc
mov
cld
aam
sub
mov
scas
xchg
push
fcomps
inc
jg
jmp
popl
mov
psraw
fbstp
into
ds
adc
mov
testl
aas
and
outsl
loopne
sahf
pop
sarb
dec
sahf
addl
stc
cmp
lds
ds
repz
sahf
insb
cmp
or
xchg
sti
cld
dec
jge
cli
loop
les
je
stc
pop
mov
scas
sarl
push
repnz
mov
icebp
push
call
pop
jns
jg
in
popa
pop
xor
scas
lds
loope
pushf
lcall
sub
jge
call
jp
lret
xchg
push
mulb
addr16
aas
movsb
bound
outsb
es
cmc
mov
pop
fistps
or
mov
out
inc
push
pop
aaa
add
xchg
mov
lret
mov
xor
adc
scas
mov
inc
call
push
pusha
lahf
cmpsl
cmc
cltd
push
sbb
out
xchg
sub
mov
lret
mov
adc
mov
or
stc
repnz
push
movsl
ljmp
push
mov
clts
jne
lock
popa
sbb
mov
and
jle
and
cmp
push
jnp
call
pop
xor
in
ja
repnz
and
ljmpw
into
inc
popl
jb
stc
push
neg
add
rcrl
in
enter
jg
mov
inc
fbld
and
xchg
push
pop
mov
mov
sub
xlat
push
popa
pop
iret
and
jo
jp
or
mov
imul
jnp
jns
cmp
push
cs
dec
mov
fstpl
cmc
jle
jbe
cs
lcall
addr16
bound
xchg
sbb
mov
repz
mov
insl
sub
fsubl
pushl
push
arpl
push
rclb
mov
test
loope
jmp
push
imul
stc
repz
jb
inc
sar
popf
int3
mov
jne
aas
jg
cld
push
fsubp
push
or
xlat
sbb
je
es
add
ret
je
cmp
cli
mov
or
jg
cld
sahf
data16
std
shrb
ror
aad
shrb
mov
xchg
lahf
adc
sbb
xchg
cli
xchg
cmp
les
xchg
push
fsubp
push
fs
out
enter
arpl
and
jb
sti
mov
ss
pusha
faddp
mov
ret
js
lret
stos
fsubrl
gs
ljmp
stc
sahf
xchg
rclb
push
adc
xlat
insb
lock
lret
sub
and
subl
pop
jns
add
mov
fcom
rcrb
test
repnz
inc
cmp
xor
jp
lahf
mov
repnz
aam
inc
jno
xlat
loopne
xchg
xor
std
cmc
dec
sub
mov
cld
stc
repz
mov
jns
mov
daa
aam
pop
add
addr16
call
and
outsl
stos
push
call
sub
stc
pop
shlb
outsl
push
pop
lock
repnz
inc
sahf
jnp
dec
and
jle
cld
stc
popa
outsl
pop
mov
cmpsb
adc
jb
dec
lahf
aas
aas
adc
mov
shlb
aaa
xchg
mov
pop
test
leave
cltd
arpl
lahf
sub
outsl
add
into
sub
sbb
xchg
push
daa
dec
mov
mov
pop
fsub
jno
lret
or
cwtl
mov
dec
xchg
push
dec
ja
testl
outsl
cmp
push
jl
cld
sbbb
stos
jo
and
mov
lret
ljmp
mov
sbb
ret
repnz
rcrl
inc
scas
push
mov
fcomi
lret
lret
or
cmp
xor
mov
pop
adc
scas
cmp
cmp
iret
lahf
aas
xor
repnz
loopne
xchg
and
cld
stc
repz
and
movsb
jbe
fcmove
xlat
out
push
jle
movsl
jle
jle
movsl
jmp
repz
clc
inc
in
daa
and
fisttps
bound
jmp
aas
jg
xlat
xor
jb
iret
jp
out
lcall
pop
cmp
stc
sar
je
dec
sbb
jae
pop
sbb
insl
scas
push
jecxz
es
ja
imul
jnp
dec
in
cld
jb
outsl
rol
ljmp
out
add
scas
lock
add
out
mov
lret
jecxz
aas
sbbb
cmpsb
hlt
mov
jecxz
sub
ja
sbb
cld
stc
repz
iret
and
mov
push
dec
in
xchg
lahf
aas
jg
mov
jmp
sub
add
jl
sub
jmp
jle
test
cmp
pop
mov
stc
repz
jle
mov
xchg
mov
test
popa
and
scas
mov
dec
adc
mov
push
push
hlt
out
xchg
sub
das
sub
adc
mov
inc
push
stc
repz
and
or
std
mov
insl
sub
mov
cmc
pmulhw
into
mov
mov
scas
mov
and
in
sbb
inc
fcompl
repnz
or
fsubrl
mov
xchg
jle
cld
jnp
das
pop
adc
or
xchg
ja
stos
xchg
aas
and
mov
inc
out
rol
es
pusha
pop
xchg
loope
xor
inc
xor
dec
add
add
mov
into
mov
das
decl
imul
lahf
or
add
xchg
push
pop
jns
cmp
cli
dec
frstor
xchg
xchg
loope
sti
fists
add
mov
fisubrl
mov
iret
lahf
test
pop
ficoms
jg
cld
stc
jnp
push
inc
xor
test
jne
out
lahf
aas
loopne
int
pop
leave
gs
sub
loopne
cld
stc
repz
insl
pushf
fistl
mov
cs
jo
inc
out
inc
mov
and
mov
push
fwait
scas
mov
add
sbb
aas
mov
push
push
sub
insb
and
stc
cld
scas
arpl
daa
sub
imul
imul
negl
lcall
pushf
mov
mov
cltd
push
adc
pop
jmp
out
pop
popa
mov
sub
mov
jns
mov
cmp
inc
outsb
out
xor
push
in
push
pop
imul
add
push
and
push
mov
and
subb
xor
stc
cld
into
test
jg
test
lahf
aas
mov
hlt
adc
in
je
inc
repnz
ret
out
ret
addr16
bnd
jns
pop
shrb
or
cmc
xlat
push
pop
lret
sbb
jecxz
pop
or
mov
pop
pop
jns
mov
leave
cmpsl
test
repz
outsb
xchg
out
fmull
clc
sub
lret
ret
jg
xchg
sub
scas
icebp
test
xchg
fmull
mov
scas
mov
xchg
test
sarb
sbb
push
pop
scas
mov
cli
pop
std
push
popa
jle
in
popf
lahf
sub
call
cmp
adc
cmpsl
repnz
in
imull
shlb
lret
sub
out
shrb
fstl
call
popa
pop
jno
enter
aas
dec
test
mov
out
xorps
inc
jae
mov
test
dec
sbb
sbb
mov
xor
hlt
dec
movsl
fs
jle
popf
inc
jg
pop
mov
fdivr
pop
scas
mov
add
fucom
xchg
outsl
push
mov
xor
pxor
adc
push
jl
jg
mov
jg
negb
imul
std
adc
lret
cmovnp
lahf
jne
outsb
mov
cld
stc
test
stos
lcall
negb
aas
jg
ss
mov
dec
out
sub
lds
dec
xchg
inc
stc
repz
push
jne
mov
dec
adc
loope
aas
jg
cld
loopne
js
cmp
push
imul
or
out
lahf
add
popa
sbb
pop
xor
gs
insl
cli
cs
jmp
in
push
xchg
int
mov
pop
adc
cmpl
mov
cltd
ret
mov
push
pop
jns
scas
inc
int3
jnp
pop
cwtl
push
push
lods
orb
js
pop
int
and
bound
das
adc
decl
stc
repz
jl
xor
shl
fists
adc
cmp
mov
in
arpl
lock
enter
ds
cmp
repnz
lret
pop
mov
adc
imul
jmp
and
lea
in
lahf
jg
pop
les
inc
bound
jl
mov
ljmp
fcompl
in
ret
fdivl
adc
pushf
lahf
mov
sbb
gs
insl
mov
cld
sar
ret
fistps
pop
lahf
pop
mov
mov
mov
cmc
jno
stos
bound
mov
scas
xchg
sub
rorb
sbb
data16
mul
xchg
dec
xor
cmc
jne
pop
inc
add
stc
cld
stc
mov
lret
repz
push
xchg
xlat
popf
ja
sub
jle
lods
stos
sbb
out
outsl
add
test
push
scas
or
xorb
fidivrs
or
xor
les
sbb
repnz
ja
insb
leave
inc
ror
shlb
in
pop
cmc
and
outsb
call
aam
nop
iret
lahf
aas
loope
mov
push
bound
cld
stc
repz
mov
adc
sbb
sahf
stc
mov
pop
jle
scas
cmp
mov
stc
repz
ret
pop
sbb
jg
js
sub
sarb
iret
xchg
inc
sub
jle
sti
cs
xor
xor
lret
insl
dec
jge
pushf
lea
stos
jp
clc
mov
cltd
stos
or
push
push
pop
jns
imul
push
out
fstpt
les
xor
xor
cwtl
lret
mov
push
repz
lahf
gs
push
out
xor
sbb
ret
inc
add
cmc
and
mov
jns
or
cmp
pop
adc
lea
xor
pop
jns
imul
push
dec
scas
ds
dec
push
mov
mov
xor
cwtl
push
pop
notrack
fisubrs
mov
sbb
ljmp
pop
mov
in
fwait
testb
loopne
fidivrs
lret
out
lahf
ror
jne
mov
dec
aad
inc
std
mov
pop
es
stos
hlt
lods
jbe
jg
insb
dec
dec
imul
add
out
sub
imul
mov
push
mov
jg
cld
stc
gs
insb
cmp
adc
mov
das
lahf
aas
mov
push
lret
pop
mov
sti
aas
xchg
sub
jns
xchg
movsb
imulb
push
pop
jns
pop
add
push
lret
xor
push
rclb
dec
and
dec
dec
and
cld
pop
push
sbb
mov
or
out
in
or
aas
jg
outsb
push
xor
lods
inc
sbb
lahf
lret
pop
adc
xor
mov
sar
dec
jno
call
pop
fidivrs
sbb
insb
popf
or
inc
out
pop
insb
lret
adc
xchg
push
adc
pop
jl
iret
sbb
sub
cli
pop
pop
pop
pop
cmp
aam
sub
mov
or
jecxz
iret
lahf
shrl
push
add
mov
pop
dec
out
lahf
pop
sahf
adc
dec
mov
in
arpl
in
out
jnp
push
ret
into
add
xor
xchg
push
lahf
push
aam
scas
xchg
cmpsb
in
push
pop
das
jle
cmp
data16
idivb
lcall
sbb
jl
aam
push
xchg
push
loope
sbb
data16
in
mov
je
notl
and
jmp
mov
pop
out
outsl
mul
fsubrs
imul
loope
inc
pop
jns
push
pop
inc
out
adc
cmpsl
sub
inc
xchg
cmpl
jb,pt
lahf
jmp
stc
insb
std
lcall
lahf
lret
lret
sub
das
dec
cmp
std
add
data16
dec
lret
mov
mov
mov
jecxz
and
sub
test
movsb
inc
in
add
sti
repnz
jnp
adc
sub
dec
pop
aaa
pushf
jno
movsb
das
scas
lods
or
outsb
pop
repz
push
mov
cltd
push
inc
jns
cli
pop
xor
xchg
sub
mov
inc
jno
fstpt
repnz
mov
push
mov
pop
in
mov
mov
ljmp
stos
push
repnz
or
pop
cmpsl
ss
xchg
dec
lret
mov
test
add
sub
pop
adc
roll
scas
ljmp
dec
fisubs
lahf
cld
cld
inc
jg
rolb
add
xor
cmp
mov
jle
jecxz
mov
xchg
ja
iret
mov
cld
mov
pop
into
cmpsb
pop
fisttpll
fistl
jno
and
dec
subl
cmpsb
dec
sbb
cmpsl
inc
jmp
repz
lahf
mov
mov
popa
mov
mov
jne
lret
pop
cmp
pop
mov
mov
pop
mov
jb
in
ja
int3
rorl
cmc
mov
cmp
rcll
pop
pop
jns
int3
fcmovnb
sub
mov
rcll
jno
test
popf
outsl
cmpsb
repz
cs
cmp
iret
dec
pop
pusha
mov
fstpt
jg
cld
stc
xchg
cltd
jg
adc
movsl
mov
lret
lahf
aas
mov
lcall
dec
mov
or
ds
push
lds
lods
outsb
je
push
adc
es
sub
push
push
sub
test
pop
push
nop
subb
mov
mov
outsl
mov
add
jge
pop
adc
jnp
mov
fisubl
aas
adc
cld
jge
cld
incb
adc
pop
icebp
inc
mov
repnz
das
out
aam
mov
int3
rcrl
lret
mov
cmp
inc
mov
mov
bnd
fimull
daa
jo
and
mov
push
push
scas
mov
mov
inc
mov
push
stc
xchg
mov
das
jbe
cs
push
call
das
test
and
repnz
les
xchg
fnstcw
xor
fistpll
and
scas
mov
inc
aas
pop
sbb
lret
das
jmp
movsl
scas
sbbl
icebp
inc
in
insb
ds
fwait
jbe
push
mov
xlat
cmp
mov
rcll
cmpsl
pushf
add
lahf
aas
mov
mov
cmp
sbb
repz
push
inc
pusha
lahf
rorl
mov
push
jg
jb
mov
xchg
out
rolb
dec
movsl
imul
lret
mov
sub
jecxz
arpl
es
adc
mov
xor
in
insb
out
sub
into
arpl
repnz
xchg
dec
icebp
inc
mov
call
and
mov
adc
ja
sbb
out
mov
repz
mov
mov
or
fbld
idivl
repnz
inc
lds
es
insb
pop
push
int3
dec
ret
scas
call
mov
pop
gs
inc
iret
inc
or
popl
out
lahf
aas
outsb
ss
sbb
jg
incl
icebp
lret
xchg
fiadds
xor
into
out
pop
mov
aas
imul
sub
cli
jb
and
xor
loop,pn
pop
clc
std
xor
jnp
fnstsw
dec
pop
jg
fs
imul
pop
jns
jmp
jno
aam
xchg
js
mov
pop
jns
xchg
pusha
fcom
mov
mov
popl
sbb
xchg
push
stos
out
pop
orl
add
xchg
push
pop
nop
loope
fwait
mov
jecxz
jns
frstor
adcb
mov
idivb
xor
push
iret
lahf
aas
or
mov
inc
shlb
cmpsl
rcrl
insl
loop
jae
sarb
ds
repnz
shl
inc
jle
or
or
outsl
addl
mov
xor
popf
mov
stc
sub
push
movsl
jg
insb
outsb
movb
mov
push
mov
das
pop
incb
lret
test
adc
imul
and
loope
shll
pop
hlt
decl
lcall
sbb
jo
sub
mov
icebp
or
in
push
pop
and
and
in
xchg
cli
pop
dec
fwait
add
sub
mov
or
pop
push
sub
xchg
xor
loopne
es
lret
out
mov
lahf
outsl
repnz
mov
stos
cltd
fsubp
push
mov
test
mov
pop
xor
jecxz
loop
and
jns
and
jg
pop
iret
xchg
push
xor
shlb
mov
lea
mov
mov
push
lahf
fsts
ljmp
mov
and
cmpb
repz
and
lret
mov
add
test
mov
inc
es
cmpl
lods
cwtl
jb
in
das
cld
mov
ret
js
fbld
data16
fistpl
mov
add
repnz
lcall
lahf
mov
aam
jmp
scas
sbb
pushf
or
xchg
fildll
pop
mov
data16
lret
loop
mov
subb
mov
rolb
lret
sub
cld
xor
mov
loopne
aad
and
repz
pop
xchg
mov
imul
push
fidivrs
cmp
xchg
cmpsl
rcl
sbb
out
in
aas
rcll
outsl
mov
push
or
jns
sub
lods
inc
insb
and
lahf
aas
jg
xchg
aam
movsl
inc
cwtl
sbb
mov
repnz
sub
in
imul
sub
jle
fcomip
pop
mov
sub
scas
mov
out
jg
cmp
lds
ljmp
pop
jmp
in
push
sub
sbb
dec
cmp
or
pop
insl
jle
das
scas
mov
adc
ret
loop
add
add
dec
scas
divb
dec
and
mov
xor
or
pop
push
push
lret
sub
pop
lahf
enter
dec
lret
movsb
js
rorb
rclb
cld
stc
orl
ljmp
cmp
aas
or
dec
cld
adc
xor
into
jecxz
cld
stc
adc
loopne
sub
sarl
push
incb
push
out
xor
mov
inc
fcomps
lock
fwait
lea
pushf
pop
xchg
xor
sub
mov
jb
mov
inc
sbb
mov
push
push
and
cld
insb
rcrb
aas
mov
and
scas
mov
popa
scas
jae
xchg
aaa
cli
inc
outsl
adc
jns
lcall
push
pop
jns
mov
in
daa
pushf
repnz
jns
jne
jb
xchg
dec
dec
in
fmuls
adc
outsb
xchg
jmp
adc
mov
or
aam
push
sbb
inc
js
pop
or
jg
sub
mov
dec
lcall
clc
cli
repnz
sbb
clc
ror
dec
add
iret
lahf
aas
mov
push
jno
cmp
stc
repz
pushf
sbb
cwtl
outsl
inc
jns
xchg
ja
ss
cmpb
addr16
iret
out
xor
in
push
pop
rcl
xchg
dec
mov
or
xchg
notl
push
pop
jns
inc
testb
or
enter
pop
faddl
xor
xchg
into
std
and
mov
cmc
mov
mov
and
addr16
das
lods
sub
xchg
movsb
ja
pop
in
and
cmp
mov
fucomi
jmp
mov
push
popa
movsl
leave
in
sub
std
dec
cmp
repz
inc
fwait
ds
les
iret
adc
inc
jg
cld
stc
in
lods
mov
cmp
or
repz
pop
mov
iret
lahf
aas
xlat
dec
popa
jo
jnp
xor
mov
aas
mov
insb
ja
fwait
les
mov
cmp
mov
gs
test
test
mov
mov
repnz
mov
scas
mov
roll
jg
cs
insl
push
ss
mov
xchg
push
pop
xchg
fisttpl
lret
lods
stc
add
fidivs
andb
mov
je
gs
sub
repnz
sbb
xchg
xchg
inc
in
insb
in
mov
pop
ret
scas
inc
rcpps
outsl
mov
add
adc
andl
in
sbb
inc
mov
pop
fimull
aas
jg
cld
scas
mov
scas
scas
and
sub
mov
mov
fnstsw
mov
jecxz
das
cmpsb
push
icebp
lahf
aam
test
lret
xor
cltd
jle
adc
cli
data16
mov
aaa
in
jns
cmp
pop
mov
mov
push
pop
xor
loopne
pop
xchg
push
inc
and
inc
add
pop
jns
add
jno
repz
or
inc
into
imul
movsb
decl
ret
push
pop
jns
insb
pop
xchg
das
hlt
lods
outsl
ds
add
pop
push
xchg
daa
imul
inc
mov
jnp
and
rcrl
or
jb
jne
add
scas
mov
outsl
xor
jmp
inc
aas
scas
hlt
in
sub
cwtl
cmp
adc
xchg
clc
pop
mov
push
xchg
insl
repz
lahf
nop
imul
dec
add
cld
jg
cld
stc
mov
xchg
xchg
and
add
add
xchg
xchg
out
lahf
aas
push
pop
stos
shlb
stc
rep
lret
xchg
sti
mov
add
push
push
or
das
out
mov
push
mov
jmp
rcll
lret
das
sub
mov
adc
pop
scas
idivb
jg
pushf
ds
aas
ja
imul
push
imul
or
stos
mov
fadd
mov
testb
shrl
xor
sub
lea
fstl
lret
sub
sbb
xchg
or
sub
push
loopne
xor
cmp
jle
sbb
sahf
lret
dec
arpl
scas
jl
scas
push
punpckhdq
clc
ds
test
mov
addr16
in
adc
stc
mov
imul
scas
sub
mov
cld
push
mov
pop
hlt
sbb
icebp
mov
lahf
mov
mov
cmp
fs
fdiv
jg
cld
stc
fildll
cld
push
lock
adc
dec
pop
ds
and
outsl
mov
and
xchg
mov
xchg
call
aas
jg
out
popa
das
lock
add
insl
push
jne
aad
stc
repz
aad
mov
test
jbe
sbb
bound
cmp
repz
mov
push
sbb
in
lahf
mov
and
aaa
lea
sub
xchg
push
ret
aad
mov
jmp
jge
stc
sbb
maxps
jle
adc
sub
push
icebp
mov
mov
iret
sbb
int3
cmp
mov
push
in
sub
repz
ja
in
mov
cld
dec
clc
sti
cmpsl
push
lahf
das
pop
fistl
jae
and
and
aaa
shll
mov
aam
cwtl
scas
pop
jb
mov
sbb
inc
dec
sahf
add
xchg
xchg
pop
jmp
outsl
adc
jmp
insb
adc
dec
xor
and
lret
stc
add
lret
ss
outsl
sub
into
test
cltd
pop
decb
in
dec
scas
repz
lahf
scas
mov
aad
and
ss
repnz
xor
icebp
xor
ret
jecxz
cld
stc
repz
lods
movsl
inc
cmpsb
and
enter
jg
sarl
lcall
imul
aas
cmpxchg
in
dec
xlat
sbb
push
fidivrs
jae
dec
lahf
jbe
xor
pop
jb
pop
jns
fisttpll
pop
stc
push
iret
aad
stos
sub
divb
xchg
push
into
movsb
ret
xor
push
xorb
fdivrp
sti
inc
shlb
das
sub
adc
add
jb
adc
ret
pop
sub
shll
add
fs
cmpsb
mov
stos
arpl
xchg
sub
jg
mov
ss
pop
fistps
xor
jecxz
dec
mov
pop
cld
cmpsb
dec
inc
xor
xchg
repnz
das
ja
addr16
lahf
aas
mov
addr16
pop
js
cmp
repnz
xchg
and
aaa
inc
sarl
dec
push
push
roll
das
scas
les
iret
pop
inc
mov
pop
jmp
jmp
mov
pop
hlt
cmc
mov
push
mov
into
mov
es
clc
mov
mov
rclb
pop
scas
mov
aas
pop
and
pushf
push
popa
xor
repnz
lret
mov
mov
push
outsb
mov
jle
rcr
ljmp
decb
ficomps
lret
mov
sub
or
xchg
sub
ljmp
jns
inc
mov
add
outsb
jnp
or
jns
out
into
stos
imul
and
mov
jns
xchg
push
nop
clc
xchg
or
jns
xchg
push
add
arpl
fwait
into
cmp
sti
sub
leave
mov
outsl
bnd
out
incl
mov
out
push
mov
mov
shlb
add
fmul
add
ljmp
repnz
in
xchg
fsubrs
loope
ret
mov
sub
jae
dec
dec
dec
andb
repnz
popf
push
add
or
mov
repnz
shlb
fwait
mov
inc
or
lret
sub
dec
fldenv
push
repnz
mov
or
sbb
or
sub
out
pop
out
xor
mov
idivb
fcmovnb
cld
lods
in
rcrb
jl
mov
and
xor
jecxz
sti
enter
loope
pop
inc
pop
xchg
imul
dec
lret
mov
dec
push
call
xor
scas
mov
fsubl
clc
add
iret
add
outsb
mov
into
inc
stos
mov
insl
xor
int
aas
enter
in
mov
lret
inc
out
lahf
aas
out
mov
jo
arpl
repz
add
jb
dec
cmp
cmp
iret
lahf
aas
mov
ljmp
jae
icebp
enter
scas
aaa
dec
xchg
jno
pop
mov
ds
adc
mov
pusha
mov
popa
lahf
test
mov
push
lods
and
lret
out
cmpsb
idivl
cmp
inc
pop
repz
loopne
cmp
jg
or
jle
adc
xor
cli
enter
in
ja
adc
jg
cld
cltd
ds
push
push
arpl
and
sbb
mov
sub
sub
out
push
stc
repz
sbb
jl
mov
mov
or
mov
je
repz
outsb
lods
jge
aas
outsl
pop
mov
dec
or
pop
jns
mov
int
pop
dec
xor
jns
lret
xchg
cmp
in
adc
outsb
xchg
fiaddl
pop
test
insl
mov
fidivrs
push
jb
xchg
out
dec
cmp
sbb
sti
pop
jns
xchg
or
ljmp
push
cs
xor
or
imul
ja
aas
stos
pop
out
aas
int3
push
scas
pusha
xor
js
push
pop
mov
push
mov
inc
xchg
sub
fisttps
arpl
xchg
push
fsubrp
mov
or
enter
jns
xchg
sub
sub
ljmp
dec
out
int3
adc
stos
add
pop
loopne
sub
jp
ds
add
lahf
roll
inc
push
xor
jmp
dec
lea
xchg
dec
add
lahf
and
in
push
sbb
movsb
gs
mov
sub
fstps
repnz
mov
dec
movsl
sbb
out
or
std
shlb
popf
jg
insb
sbb
sahf
pop
inc
cld
stc
repz
mov
adc
call
jg
repz
fists
cmp
punpckldq
iret
je
int
stos
push
jns
out
in
gs
test
push
dec
loop
xchg
push
pop
lea
int3
imull
aaa
jne
mov
push
pop
jns
ja
add
cmp
pop
jns
sub
sbb
hlt
scas
fwait
mov
faddl
jmp
orb
or
test
xor
repz
jbe
cmc
loope
ds
cmp
les
jg
cld
addr16
nop
pop
incl
enter
push
je
cmpb
iret
lahf
sbb
daa
clc
sti
sbb
cmpsl
mov
out
xchg
jge
lods
mov
fstpl
in
lahf
out
nop
jp
sub
test
aad
or
jns
xchg
push
mov
clc
stos
int3
dec
sahf
xorps
sar
in
push
pop
out
and
aam
repz
add
xchg
imul
cld
in
ja
insb
aas
test
inc
stos
mov
push
pop
jns
and
sbb
sub
mov
push
pop
jns
push
jns
adc
js
imul
in
xchg
and
cwtl
push
enter
mov
aaa
lods
jns
xchg
push
jno
push
mov
mov
xchg
ja
pop
loop
aad
pop
sar
dec
inc
and
popf
push
pop
jns
arpl
jg
call
imul
dec
pop
jns
xchg
arpl
sahf
or
ss
jns
xchg
push
test
ret
leave
inc
scas
push
push
nop
insl
in
push
pop
jo
stos
ret
cmp
sub
js
daa
scas
arpl
imul
mov
cmc
cmp
add
inc
ds
cmp
mov
js
and
jge
in
mov
fdivrp
jb
mull
jecxz
pushf
sti
rcrl
inc
xchg
mov
fdivr
repnz
das
movsb
inc
cwtl
dec
push
jl
popf
mov
repnz
clc
adc
adc
pop
inc
pop
add
lods
sbb
sahf
cmp
repz
jo
push
mov
or
scas
mov
flds
test
xchg
out
lret
mov
xchg
pushf
and
cltd
out
sub
push
dec
xor
mov
jle
scas
mov
cmp
pop
pop
outsl
push
add
imull
pop
arpl
pushf
sub
add
xchg
push
mov
ds
js
scas
xchg
jg
pop
jns
pop
fwait
roll
punpcklwd
out
cs
jns
xchg
ja
dec
sarl
pushf
mov
push
pop
test
mov
hlt
sbb
aas
pop
iret
or
sahf
loopne
push
neg
push
mov
pop
push
jle
or
cld
stc
xor
xchg
sahf
xchg
ja
cmp
and
aas
jg
cltd
sbb
push
or
clc
shr
mov
adc
fdivp
inc
xchg
stos
and
sahf
mov
add
lcall
or
inc
ljmp
into
xchg
mov
sti
repnz
pop
sbb
cmpsb
dec
adc
xchg
pushf
repnz
out
push
movsl
fcompp
faddl
aam
sub
ja
adc
jne
mov
repnz
rcrb
mov
mov
iret
das
movsb
sbb
cmp
enter
pop
loop
into
mov
mov
aaa
jp
adc
lock
jl
js
mov
push
sbb
xlat
pop
fidivl
push
fsubp
xchg
shr
loope
pop
test
test
sub
push
rclb
xor
and
xchg
popf
out
pop
arpl
cwtl
dec
jg
cld
stc
popa
jp
pop
adc
push
insl
jnp
test
and
xchg
scas
push
ds
imul
in
stos
mov
andl
sub
inc
dec
pop
out
jle
repz
insl
sahf
gs
fistps
ljmp
jg
aad
dec
xchg
rolb
xchg
scas
sbb
lahf
aaa
es
and
mov
repz
loope
test
push
or
push
lret
out
stos
mov
mov
repnz
jp
xchg
out
push
loope
mov
stc
inc
loope
mov
mov
mov
addr16
push
fidivrs
in
mov
popa
push
and
jb
xchg
stc
clc
ja
mov
insb
sarl
inc
pop
iret
cmovs
repnz
add
ficoms
jl
inc
loope
jo
out
and
aam
cld
leave
cli
in
into
mov
mov
ficomps
aas
jg
lcall
adc
dec
adc
repnz
out
add
ss
push
ret
mov
sub
fcomi
stc
repz
dec
enter
into
mov
sub
sub
out
mov
mov
and
mov
inc
sbb
in
sti
sub
pop
cmp
jb
push
out
pop
ja,pn
mul
in
fnstsw
push
pop
push
mov
and
test
negl
in
sbb
jmp
mov
jns
xchg
push
jl
mov
sbb
add
lret
xchg
jno
cmpsl
mov
jp
loope
stos
mov
push
pop
jns
movsl
rcr
pop
fiadds
mov
stc
xor
lret
ds
adc
outsb
mov
jg
cld
sbb
test
arpl
loope
push
sbb
lret
out
lahf
mov
je
ret
xchg
xlat
in
mov
dec
and
stos
out
jg
inc
jl
in
push
mov
adc
lret
mov
lcall
mov
jmp
xchg
cs
or
rclb
leave
dec
cld
stc
repz
pop
movsb
pop
pop
ffreep
jecxz
push
test
stc
repz
mov
repnz
stos
fs
bnd
arpl
fsubrl
ret
mov
jmp
jg
mov
je
jnp
iret
lahf
pop
sahf
mov
fisubrl
jns
imul
pop
stc
repz
insb
push
sub
out
mov
cwtl
out
iret
lahf
aas
jg
in
adc
xlat
mov
cmc
cld
stc
repz
inc
into
mov
mov
jbe
incb
jmp
fcomip
add
out
jge
enter
sbb
add
out
mov
xchg
cltd
aaa
nop
xchg
ja
jg
in
mov
imul
out
in
jge
mov
ljmp
out
cmc
divl
push
inc
pop
push
or
jl
xor
mov
dec
mov
repnz
add
imull
dec
ret
lret
mov
mov
xchg
mov
sub
ja
call
inc
mov
in
xor
rcll
sub
iret
lahf
jg
sahf
mov
int
idiv
stc
repz
cli
ret
mov
dec
sub
lahf
aas
jg
insl
leave
mov
mov
and
push
dec
stc
repz
xchg
push
nop
mov
outsl
lds
pop
cld
inc
popf
sahf
ljmp
cld
stc
xchg
dec
or
dec
sbb
loop
and
xor
xor
or
dec
popa
or
out
daa
mov
push
iret
mov
and
mov
decl
dec
addr16
test
aam
xchg
sub
push
and
sbb
push
sti
push
pushf
rol
mov
mov
jle
ds
mov
and
lret
out
lahf
sbb
push
inc
sub
popa
neg
mov
stc
mov
pop
push
adc
mov
outsl
mov
sbb
dec
inc
inc
insb
dec
xlat
dec
test
jbe
lahf
cli
in
sub
pop
hlt
inc
push
test
jle
cld
stc
repz
stos
sbb
xchg
adc
stc
mov
xorl
mov
add
xchg
ja
xor
pop
ljmp
lret
lock
scas
inc
movq
out
lret
xchg
repnz
xor
scas
repz
mov
cmp
cmpsl
and
xchg
ja
dec
fidivl
test
jnp
pop
aas
mov
in
cld
sub
and
mulb
outsb
mov
into
incb
ret
mov
mov
lahf
jg
imulb
adc
fisttpl
stc
repz
loope
adc
push
push
or
adc
aas
stos
js
pop
pop
add
lret
lds
jle
outsl
cmpsb
int3
mov
pop
out
jle
sbb
pushf
dec
cmovge
out
movl
jnp
xchg
popf
xchg
xor
sub
lret
stos
lods
cltd
cs
mov
pop
call
loopne
iret
repnz
insl
cltd
fdivs
cmp
jg
mov
jl
movsb
pop
push
adc
jmp
pop
je
stc
repz
stc
leave
xor
clc
fsubrl
int
test
jg
cld
cld
adcb
push
push
push
push
std
scas
mov
iret
lahf
mov
lock
jmp
cmp
sub
sub
repnz
dec
dec
mov
jb
lahf
aas
jg
scas
fistpl
push
push
mov
and
dec
dec
mov
stc
repz
mov
sbb
and
inc
or
clc
mov
xchg
mov
cmp
push
mov
or
jg
outsb
repnz
mov
shll
cli
repnz
lahf
xchg
movsl
and
or
jmp
inc
movsb
rcll
loopne
sar
movsb
and
jnp
in
testb
test
jecxz,pn
je
mov
fisubrs
fs
xor
inc
push
jo
pop
pop
jns
js
addr16
lahf
adc
adc
push
imul
jns
push
and
repnz
ds
mov
iret
cmpsb
mov
ja
dec
xchg
xchg
out
scas
xor
xchg
xchg
adc
xchg
push
fwait
pop
push
mov
xchg
pushf
mov
mov
std
in
adcl
mov
test
jl
in
jp
jo
and
adc
outsl
adc
pop
jns
pop
jecxz
les
iret
lahf
pop
push
andb
jecxz
stos
jp
push
stc
repz
pop
cmp
sahf
ljmp
pop
mov
loope
out
shll
repnz
xor
ja
inc
xor
scas
adc
lret
mov
jae
xlat
and
test
mul
ret
mov
scas
adc
scas
mov
pop
inc
into
sub
mov
loop
jp
adc
adc
lock
lods
adc
pop
cmp
sti
jl
cld
stc
or
pushl
inc
shl
imul
sub
push
cmc
mov
loopne
jl
cld
stc
jno
in
testb
lret
das
aas
push
sbb
xor
xor
xor
loopne
mov
data16
test
test
fcmovnb
inc
cld
stc
repz
lods
xlat
push
or
arpl
int3
push
in
mov
or
sub
rorl
jns
add
imul
push
pop
jns
fstpl
dec
xchg
sbb
das
sbbl
lret
jmp
jmp
sbbb
cld
add
into
inc
in
sub
out
pop
out
ret
int3
adc
inc
inc
in
je
mov
push
mov
jg
cld
stc
repz
ljmp
jg
push
fldenv
jle
cltd
mov
inc
out
repz
lahf
sbb
icebp
and
cmp
lods
ss
cld
stc
or
push
cltd
leave
push
leave
fnstcw
jno
out
lahf
aas
stos
les
jle
mov
cli
pop
jns
lret
xor
dec
mov
mov
sub
inc
lods
jg
pop
dec
fidivrs
out
mov
aas
jg
fimuls
mov
mov
cli
mov
push
lret
ror
mov
or
pop
pop
jle
lret
stos
push
outsb
xorb
add
rcrl
sbb
test
fcoms
jl
sbb
xchg
xorb
mov
out
ss
pop
shrl
repz
lahf
ljmp
xchg
sub
push
call
mov
push
mov
cmp
lret
popf
cmp
lret
fildll
xchg
stos
xor
lods
sbb
enter
sbb
test
sbb
mov
add
cld
stc
cmp
xor
or
jae
pop
rclb
aas
out
div
imul
cmpsb
aas
aaa
cmp
aaa
jecxz
outsl
test
daa
into
repz
lahf
dec
ljmp
jo
pop
jge
jp
cld
stc
lods
push
shll
std
enter
mov
fnstsw
sarb
pop
jns
sub
mov
sbb
xor
fnstsw
filds
sub
hlt
negb
mov
inc
mov
icebp
xor
repnz
repz
loopne
add
movsb
ljmp
jo
out
push
cmp
loopne
jns
fucomp
sbb
add
ret
loop
lock
sahf
cmpsb
xor
jg
jle
stos
jae
pop
sub
arpl
mov
fsubrp
pop
mov
and
xchg
lahf
aas
cmp
das
and
sti
dec
out
xchg
out
scas
pop
and
mov
mull
cld
mov
aas
loopne
push
pop
adc
pop
jns
xchg
xchg
jmp
lock
xchg
ja
jp
xor
cmp
iret
cld
cmpsb
jp
repnz
mov
xchg
leave
mov
cld
stc
adc
mov
mov
adc
and
orb
fisttpll
rcll
outsl
mov
stc
repz
icebp
sub
ljmp
pop
inc
inc
cmpsb
mov
cltd
pop
mov
cmp
xchg
aas
aaa
xchg
lea
loope
out
mov
sbbl
scas
in
fstpl
mov
mov
mov
jg,pn
push
in
xchg
lahf
out
lea
scas
jmp
push
pop
jns
mov
or
call
push
jecxz
push
pop
jns
negb
xchg
ljmp
dec
insl
dec
push
inc
mov
outsl
movsb
inc
sbb
dec
push
decb
daa
out
inc
sub
push
jo
mov
cld
cwtl
cli
repnz
pop
outsb
fldl
stc
addb
scas
sbb
outsb
incl
pusha
fists
out
out
pop
lret
aas
push
jmp
xchg
mov
or
push
jle
repnz
xchg
add
add
jb
fstl
dec
in
mov
out
mov
pop
add
sub
cwtl
jns
xchg
aas
push
add
cmpsb
fisubrs
mov
movb
mov
pop
dec
jle
xchg
push
out
imul
int
or
cld
push
cs
fucomip
aad
in
sbb
lahf
jg
mov
roll
stc
repz
repnz
cmp
dec
xchg
push
scas
movsb
pop
sbb
test
mov
inc
pop
outsl
pushf
lahf
or
rol
in
in
cld
adc
lcall
ss
repz
xchg
leave
cli
imul
sub
iret
xchg
inc
xchg
aas
jg
cld
dec
jnp
inc
stc
inc
enter
fdivs
and
lahf
rcll
push
sbbl
lods
loopne
out
rorl
out
xlat
fs
or
push
stc
add
pop
movsb
lret
dec
loope
out
mov
jp,pt
mov
ljmp
scas
mov
jno
ss
mov
pop
jmp
repnz
dec
rcrl
fistpl
mov
lret
mov
mov
lret
dec
dec
add
mov
lods
sti
mov
xchg
lahf
and
adc
les
outsb
std
ret
pushf
xor
mov
out
dec
adcl
stos
test
loop
cmp
jg
cld
cmp
mov
rorl
mov
mull
std
es
or
pop
cld
xchg
shrb
inc
push
popa
aaa
iret
mov
dec
jle
hlt
out
stc
repz
sub
insb
push
inc
lcall
mov
jno
lock
out
adc
les
les
sbb
push
lods
es
fs
lret
mov
lret
jp
in
mov
idiv
sbb
mov
sbbl
xor
jb
enter
xchg
movsbl
fistpl
out
xlat
pop
mov
lret
aam
lock
das
add
cltd
setne
jns
loopne
sbb
scas
rcll
jns
xor
or
sub
cmpl
rclb
stc
and
push
jno
lahf
jg
cmp
mov
fadds
iret
subb
xchg
xchg
dec
dec
daa
jle
incb
or
jge
mov
mov
jnp
cmp
mov
loopne
imul
mov
sub
test
xchg
das
push
fidivrs
cmp
adc
fstps
repnz
aam
add
mov
push
sub
std
jb
stc
or
jbe
xchg
pop
jl
dec
ja
in
push
jo
fsts
insb
jmp
add
and
cmp
js
mov
xor
mov
pop
add
scas
mov
arpl
test
in
xor
adcl
xchg
pop
add
aam
repnz
push
xchg
nop
filds
pop
adc
sub
sbb
fists
int
sub
pop
xchg
ffree
out
and
cmc
add
repnz
loope
dec
mov
jo
xchg
add
or
in
js
lods
jns
xchg
push
push
loop
mov
loopew
in
push
pop
mov
lcall
pop
cmpl
add
xchg
out
pop
or
in
jecxz
or
mov
imul
rclb
sbb
push
mov
xor
adc
outsl
test
jb
xchg
ljmp
mov
jmp
add
pusha
sbb
repnz
leave
add
in
sub
aam
repz
imul
aas
das
xchg
shr
lret
dec
cli
addr16
jle
push
push
mov
repnz
scas
mov
iret
ret
jp
int3
sbb
cmc
cltd
pushf
pushl
xlat
rcrb
lret
neg
call
cmp
scas
mov
outsl
outsl
sahf
rcll
cmpsl
je
std
cltd
pop
or
lret
divb
popf
ret
jg
push
int3
faddp
or
aas
inc
fistpll
aaa
or
in
iret
lahf
mov
mov
cmc
scas
das
jo
ret
hlt
jnp
fwait
dec
rcr
test
fists
inc
das
jg
mov
lock
fstps
icebp
ljmp
xor
mov
dec
pushf
loop
test
cld
stc
repz
out
push
sub
fs
cmp
mov
das
lahf
aas
jg
mov
xor
cmp
mov
jg
mov
mov
aam
jo
sar
cmp
out
out
pop
aad
xchg
clc
scas
inc
test
pusha
std
jnp
into
jl
mov
xchg
fists
jg,pt
cs
push
ret
negb
jecxz
xlat
lret
daa
test
nop
jle
out
cld
jnp
notl
jle
pop
mov
out
pop
dec
xor
cmpsb
repnz
adc
sub
mov
pop
or
cmp
lret
or
xor
stc
movsb
das
scas
mov
add
add
sbb
iret
aas
into
idiv
jg
xchg
push
cs
jle
data16
sub
mul
iret
mov
cmpsl
test
adc
stc
repz
and
xchg
xchg
xchg
cmpsb
je
push
lret
lahf
aas
jg
bound
xor
pop
cmp
hlt
lret
fstp
xor
push
sarl
fcmovnu
or
sub
jle
in
fstps
fidivrs
jecxz
fisubs
js
sub
cld
rol
das
xor
lods
fdivrl
xlat
mov
lahf
aas
jg
jmp
shlb
mov
xchg
mov
arpl
mov
cld
stc
repz
xor
push
jno
ljmp
mov
push
jge
out
push
and
jg
mov
out
or
sarl
imul
lahf
aas
add
ret
ds
mov
and
or
adc
add
push
pop
inc
jnp
jne
int3
jp
lret
push
mov
xorl
test
xor
int
dec
push
or
stc
cld
sub
jne
iret
jne
lret
lahf
aas
lds
lock
ror
in
fcmovnu
dec
xor
jns
jg
sub
sbb
or
aas
icebp
mov
xchg
mov
dec
mov
fsubrs
int3
adc
xor
mov
jae
sub
jnp
dec
in
std
sub
pop
lods
scas
adc
in
push
fisubrs
xlat
push
lret
jbe
out
jb
push
sub
xchg
push
pop
jns
mov
pop
jne
mov
xchg
mov
dec
mov
sub
xorb
xchg
aas
std
jns
aas
mov
xchg
xchg
icebp
in
sub
xchg
mov
scas
mov
or
xchg
data16
daa
jmp
scas
adc
pop
fnstcw
cmp
mov
pop
sub
add
xor
jns
ret
lds
out
or
adc
leave
sbb
push
jae
jno
dec
call
xor
pop
cld
xchg
into
xchg
sar
mov
stos
xchg
push
pop
jns
mov
ds
xchg
jg
jg
jge
aad
pop
jns
sub
dec
ja
subl
int3
push
mov
fmulp
lock
jle
cld
stc
repz
pop
hlt
sbb
xchg
inc
xchg
int
pop
das
aas
jg
mov
push
fmull
cmp
fst
pop
mov
add
repz
pop
ds
fidivrs
lcall
mov
sahf
les
iret
lahf
pop
adc
mov
mov
icebp
adc
dec
call
imul
lahf
cmp
lret
sub
xorb
jns
cld
neg
lods
cmp
push
xor
fs
clc
pop
jns
sbb
inc
dec
pop
out
mov
pop
adc
or
cmp
sar
sbb
iret
push
xchg
aaa
ret
pop
jns
push
mov
cmpsl
and
stc
sbb
add
push
out
imul
ja
push
pop
mov
sub
sub
lcall
jle
mov
fdivr
lret
aaa
mov
pop
pop
mov
cs
in
test
pop
cmpb
ret
aaa
cmc
push
ret
shl
sub
jg
lods
addb
cwtl
xchg
add
lret
push
outsl
and
dec
cli
lea
mov
sbb
cli
in
sub
xchg
and
add
roll
mov
aas
jg
cld
incb
je
jno
out
ljmp
xchg
loope
iret
lahf
je
xlat
test
pop
testb
repz
sahf
aaa
cmpsb
stos
outsl
lcall
xchg
jle
insl
mov
pop
jns
pop
jg
pop
cmc
push
jne
xchg
xor
in
out
fs
xchg
inc
subl
test
sbb
add
loope
dec
and
xchg
out
lahf
aas
out
ret
fwait
push
fldt
inc
sbb
mov
or
hlt
add
call
out
aas
or
sbb
test
fcomps
jp
les
jg
pusha
scas
stos
add
pushf
es
adc
outsl
repnz
scas
adc
and
test
mov
bound
xor
push
or
cs
int
sbb
mov
shrl
or
stc
add
lods
xchg
sub
mov
and
dec
ds
repnz
jg
sub
sbb
xor
out
pop
jp
mov
out
out
iret
clc
pop
cmp
decl
movsl
ds
sub
js
mov
mov
mov
imul
jo
sbb
mov
sar
std
repnz
push
mov
adcb
jge
repnz
ja
cmp
shlb
call
sub
int
cmp
push
or
mov
insl
xor
in
inc
out
lahf
add
jne
or
xchg
cld
stc
repz
decl
sub
scas
mov
push
jg
jg
sbb
sti
pushf
test
jmp
subl
sub
add
js
stos
push
jle
mov
adc
pop
test
hlt
lret
imul
xor
mov
out
inc
loope
outsl
call
test
out
out
arpl
xor
stc
push
subb
sub
jecxz
loope
cmc
add
stos
mov
mov
ja
aas
jg
out
xor
stc
pusha
movl
mov
cmp
jne
or
sub
lret
mov
lret
pop
mov
int
movsb
push
xor
inc
sub
sub
mov
xchg
xorb
mov
add
scas
mov
sti
test
dec
jbe
lahf
arpl
data16
lea
scas
xorl
div
in
iret
aad
movsl
jp
jg
jp
ficompl
xchg
push
pop
jns
sahf
mov
inc
jb
lcall
sbb
outsb
mov
xchg
aaa
js
lahf
outsl
cmpsb
xchg
int3
adc
xchg
cltd
xchg
push
pop
jns
cs
aas
cmp
data16
addb
jns
cli
rorl
ret
repnz
mov
mov
insb
je
test
aas
and
subb
inc
cld
stc
repz
sbb
xchg
stc
xchg
insl
aaa
imul
roll
aas
mov
lahf
ret
inc
scas
adc
repz
cmp
cmc
dec
arpl
jg
cld
stc
jg
sub
addr16
mov
or
lahf
aas
sbb
mov
ret
call
cld
stc
rep
in
int3
jns
mov
inc
outsl
or
repz
push
pop
jle
ret
and
jecxz
scas
cmp
out
lret
iret
lahf
mov
aad
sub
inc
sub
xchg
lret
sysexit
mov
adc
pop
aam
pop
movsl
sub
hlt
sbb
repz
out
cld
aaa
fmul
and
pop
movsb
adc
and
adc
add
mov
add
push
push
shl
pop
daa
std
in
iret
lahf
xor
and
std
lods
mov
loopne
jecxz
jo
outsl
out
and
rclb
ret
ret
lods
jge
cmp
jns
sbb
adc
jle
int3
in
sub
dec
fiaddl
gs
sub
push
fsubrp
lret
jp
js
cli
jmp
addr16
sub
sub
pop
mov
sub
cli
adc
mov
lret
in
sti
inc
loope
movsb
jns
jle
or
sub
lds
daa
dec
enter
sub
mov
test
loopne
mov
lret
aam
in
jg
sub
add
enter
lret
iret
push
jnp
and
inc
out
pop
out
mov
xor
sbb
mov
push
pop
stc
movsl
mov
jmp
ds
cld
lods
ret
aas
jg
cld
cmp
push
lea
xchg
sub
cltd
sbb
repz
les
push
xor
fld
jbe
mov
cld
stc
cmp
jb
or
xchg
sbb
out
sub
fisubrs
adc
test
add
fsubs
das
rcr
fwait
lock
push
pop
inc
jmp
in
sub
xchg
push
pop
jns
sar
ss
sub
jmp
adc
jmp
in
inc
sub
sbb
and
sub
sti
decl
cli
outsl
pop
dec
or
scas
inc
cld
inc
stc
stc
pop
icebp
test
pop
mov
aas
mov
dec
add
scas
xor
cmp
scas
mov
rol
jge
fiadds
repnz
mov
lret
xchg
ja
lret
test
xor
setle
pop
jns
mov
pop
mov
loopne
pop
mov
xor
inc
jl
lahf
iret
shr
adc
iret
ss
mov
fdiv
lret
out
shll
lret
dec
int3
jno
iret
xchg
push
pop
jns
daa
jbe
push
xor
in
imulb
js
mov
cmc
int3
arpl
jns
scas
cmp
lahf
sub
lret
sub
dec
sub
stc
jmp
repz
int3
int
mov
test
lret
mov
xor
pop
aas
sub
adc
sbb
cltd
clc
repnz
cmpb
incb
repnz
in
xor
jle
jg
jbe
ss
pushw
vpcomb
jle
cld
or
pop
jmp
pop
push
lods
dec
mov
test
cld
stc
repz
dec
div
aas
mov
sub
inc
xchg
es
int3
cmp
mov
sbb
lret
out
lret
sbb
rclb
gs
adc
jge
mov
cmp
in
fsubs
out
sub
sbb
xchg
jns
mov
xchg
mov
push
in
push
pop
imul
js
jg
sti
decb
xchg
push
pop
jns
and
sbb
jp
and
mov
jmp
jmp
sub
xchg
push
fmulp
test
loope
dec
cwtl
inc
pop
stos
xchg
dec
cmc
jb
aad
cmp
sub
inc
cli
repnz
jnp
push
pop
sbb
lahf
aas
out
scas
add
sti
sbb
fsts
mov
scas
fiadds
pop
arpl
repnz
jg
pop
push
cmc
mov
and
scas
mov
mov
pop
inc
push
sub
fldcw
xchg
arpl
and
sbb
dec
lret
dec
adc
lahf
pop
into
push
push
int
stc
bound
aas
xlat
inc
lret
frstor
pop
mov
inc
das
scas
mov
sti
repnz
ja
mov
mov
lret
mov
sub
std
stos
inc
sub
bound
adcb
jo
xchg
jl
scas
mov
int3
leave
push
out
movsb
ret
cmp
inc
loope
in
sub
rcll
inc
dec
movsb
mov
lcall
pop
hlt
loope
mov
sub
jg
rcrl
popa
insb
inc
sbbb
outsb
or
xchg
push
xchg
mov
aas
mov
pop
jle
mov
shlb
popf
fiaddl
imul
push
fidivrs
test
sbb
push
pop
jns
std
sti
cmc
sub
fdivl
mov
sbb
and
and
pop
aad
mov
addl
fildl
push
aas
cmp
pop
adcl
jg,pt
inc
nop
int
mov
jl
std
pop
jle
mov
gs
xor
pop
movsl
or
cmpsl
pop
out
in
iret
pop
sub
jb
repnz
insl
aaa
test
xchg
hlt
jo
push
push
out
sahf
lock
data16
insb
mov
jns
sub
dec
out
das
dec
mov
ljmp
push
pop
fisttpll
pop
jae
pop
aaa
jp
inc
dec
imul
adc
fnsave
jecxz
arpl
xchg
sub
push
and
lcall
inc
lea
push
mov
into
xchg
ja
jg
pusha
fiaddl
out
out
lahf
idivb
cmpsl
incb
jge
in
pop
xchg
in
sbb
popa
lahf
aas
jg
dec
push
mov
rcl
sti
pop
stc
mov
mov
out
xchg
iret
fcoms
dec
jb
push
or
out
pushf
call
scas
mov
rolb
adc
mul
sbb
jg
adc
inc
lods
scas
jns
xchg
push
ss
ljmp
lcall
mov
xchg
aas
aaa
shlb
mov
je
pop
and
jns
mov
jmp
add
scas
mov
adc
stos
movsb
std
ret
mov
dec
mov
pop
scas
js
in
fistpl
fidivl
mov
cmp
out
ret
in
inc
push
mov
cld
stc
repz
xor
add
push
rorb
nop
pop
pop
jl
or
cld
stc
xrelease
sahf
jp
cmpsl
jns
pop
lea
push
pop
xchg
mov
stos
divl
jg
cmc
lret
mov
hlt
lods
les
cmpsb
push
xchg
cmc
in
ja
and
cmpsb
lahf
data16
jbe
mov
mov
ret
push
addr16
xor
jg
sub
pushf
nop
lea
mov
inc
iret
shll
mov
out
insb
arpl
sub
fucomip
fbld
mov
es
ja
scas
mov
sub
out
dec
addr16
scas
test
loop
movsb
cld
jecxz
mov
dec
popa
test
mov
xchg
mov
lret
jge
test
cmpsb
js
bound
gs
das
out
dec
fmuls
xlat
add
sub
in
push
pop
sarb
fnstsw
adc
pop
into
sub
pop
jns
sbb
sti
mov
mov
jb
outsb
mov
lea
and
xor
lahf
nop
fisubrl
pop
test
jns
pushf
leavew
jl
and
cs
pop
clc
sti
in
ljmp
jg
les
stc
repz
out
enter
cmp
mov
fdivrs
or
iret
les
sbb
jp
xchg
lahf
pop
or
add
mov
or
mov
arpl
lahf
jnp
jbe
cli
mov
iret
jl
rorl
mov
cld
cld
into
jmp
jmp
scas
test
mov
pop
pusha
mov
add
push
shll
add
fnstsw
dec
jg
fs
cmp
jge
stc
mov
pop
orb
sahf
aas
jg
or
mov
aaa
and
pop
shrb
lahf
mov
mov
jnp
repz
dec
stos
push
xchg
int
cltd
push
push
fsubl
mov
mov
rcrb
iret
lahf
aas
aas
pop
mov
rcrl
test
out
xor
sbb
gs
iret
inc
jbe
adc
sbb
cld
imulb
pop
jns
fisttpll
iret
out
and
outsb
mov
jns
in
push
mov
pop
xor
cs
iret
dec
lret
xchg
push
pop
xchg
in
adc
scas
lock
push
xchg
xchg
mov
xor
push
push
push
cmp
push
add
in
cld
inc
mov
fs
shl
sbb
mov
inc
add
sahf
pop
cld
stc
repz
or
cmc
pop
cmp
ss
in
aas
jg
out
xchg
sbb
stc
repz
nop
iret
pop
mov
xchg
outsl
sub
push
jg
mov
jl
cld
pop
xor
push
pusha
add
mov
bound
mov
jae
and
push
fistpll
repnz
xchg
pusha
lods
ljmp
and
push
or
or
arpl
jo
out
inc
xor
ret
test
outsb
cld
mov
jns
ret
nop
mov
sbb
and
and
xchg
jle
ficomps
add
sub
cmp
lahf
pop
or
vdivsd
mov
xchg
fwait
jle
dec
shll
cld
stc
rep
mov
jmp
popf
mov
shrl
mov
xchg
nop
ret
pop
add
jmp
jge
repnz
popa
aad
movsl
mov
xlat
xchg
jle
lahf
data16
insb
clc
enter
dec
inc
icebp
jl
add
pop
inc
and
std
std
repnz
jg
punpckhwd
jmp
out
aas
push
inc
push
mov
jae
prefetch
cmp
xchg
test
cld
dec
das
enter
iret
jecxz
push
lock
or
adc
mov
mov
mov
repnz
mov
std
cmpb
dec
in
push
les
in
push
fidivrs
movsb
sahf
mov
das
cltd
pop
pop
fstpl
pop
jns
xchg
lret
hlt
ja
popa
or
jne
push
cmpsl
jns
xchg
push
repnz
cmpsl
arpl
push
hlt
lret
xchg
push
pop
ss
pop
sbb
push
add
repnz
lret
icebp
add
xchg
mov
add
sub
cwtl
add
mov
xor
scas
mov
adc
aaa
sub
mov
mov
mov
adc
jbe
adc
lret
and
pop
mov
data16
movsl
fmulp
adc
pop
cmpsl
mov
leave
cli
jmp
jae
dec
dec
push
jl
fbstp
xor
in
sub
xchg
jp
push
adc
mov
jp
jns
xchg
push
mov
dec
mov
in
push
pop
insb
shrb
shlb
push
insb
ficompl
lods
or
loopne
cld
push
ret
lahf
cmp
std
jb
hlt
outsb
decl
stc
xor
shlb
pop
jle
iret
loop
add
cltd
repnz
repz
sub
and
scas
in
mov
iret
jns
dec
mov
mov
mov
inc
push
cmp
xor
dec
mov
lret
xchg
jae
sbb
out
hlt
jle
das
scas
sub
aad
mov
lahf
aas
jg
mov
and
popa
adc
lret
out
cmp
jne
dec
out
jg
cld
stc
js
xor
push
les
jno
lret
lahf
aas
and
pop
fnstenv
jmp
cld
adc
cmpsb
push
mov
pop
sub
out
iret
lahf
aas
cld
in
sbb
adc
in
mov
aaa
xor
stos
inc
cld
cltd
clc
and
mov
and
jg
enter
mov
push
fs
stc
repz
fwait
pop
push
fcoml
lahf
aas
jg
iret
jle
mov
mov
xor
add
push
xchg
aaa
ror
inc
bound
mov
jno
sub
enter
or
jnp
cs
aas
jg
push
fsubr
je
rcrl
inc
pop
out
pop
xchg
lock
sahf
das
pop
roll
mov
outsb
jmp
into
loop
in
in
ja
popl
jno
jg
loop
push
cld
jnp
sub
out
or
jl
into
mov
add
orl
cmpsb
hlt
lret
xchg
adc
std
enter
sti
or
aas
sbb
xchg
repz
jg
and
pop
fidivrs
stc
outsb
dec
xor
scas
dec
lods
addl
mov
imul
aas
aas
and
cmc
dec
push
jbe
inc
jnp
test
and
lahf
cld
cmp
and
outsb
lock
repz
jb
ret
jmp
mov
cwtl
popa
sub
cld
stc
icebp
test
mov
jae
push
sarb
hlt
inc
out
lahf
aas
mov
pop
imul
push
clc
sti
repnz
cmp
sbbl
scas
cmp
iret
lahf
pop
leave
ds
fdivrl
xchg
cld
stc
repz
mov
cld
jl
inc
lds
dec
add
jecxz
cmp
out
stos
and
push
mov
push
fstl
scas
mov
xchg
inc
ja
push
pop
dec
xor
add
lock
jle
ljmp
add
outsb
jp
and
mov
fistps
cmpsl
mov
mov
pop
mov
lret
fstl
in
in
mov
mov
sub
inc
cwtl
sbb
cmp
sar
sar
repnz
outsb
mov
jmp
popf
or
shlb
jne
lock
mov
loop
mov
ret
cmp
hlt
out
inc
inc
and
repnz
dec
loope
pusha
jmp
jg
cld
adc
mov
lods
lahf
pop
test
aas
mov
sahf
sub
mul
out
cs
pop
pop
add
ret
cmc
dec
dec
sub
xchg
push
pop
jns
sbb
cmp
dec
sbb
pop
add
insb
xchg
cmp
jg
cld
stc
push
xchg
pop
cli
loopne
jecxz,pn
nop
adc
push
das
out
lahf
aas
fistps
fisttps
jnp
divl
pushf
xor
aad
cmp
inc
loopne
mov
mov
scas
inc
jae
movsl
das
test
addr16
aaa
push
jb
cld
stc
repz
stos
fbld
pop
push
xchg
sbb
xlat
add
lahf
aas
jg
and
repz
into
and
pop
cmpb
jo
cmc
xchg
adc
and
xor
std
cmp
cmpsb
mov
sahf
pop
stc
stc
repz
insb
cmp
neg
aas
jnp
xchg
imul
out
ror
lret
mov
iret
arpl
cmp
mov
sub
out
dec
mov
xchg
inc
mov
in
cmpsb
dec
sbb
jno
xchg
push
into
pop
incb
push
pushf
add
repz
adc
ljmp
or
repnz
or
ficoml
das
jg
lea
push
adc
dec
lock
in
push
xlat
cmpsl
in
lret
jle
cli
in
cs
iret
stc
in
popa
cmpsl
adc
fcompp
out
push
insl
or
es
jle
int
fldenv
inc
mov
cld
leave
enter
lret
jg
pop
mov
adcl
mov
out
push
xchg
movsl
loopne
pop
xchg
xchg
cld
stc
adc
inc
dec
outsb
push
cmp
dec
ret
lahf
aas
jg
jne
xor
loopne
int3
dec
jp
jo
repnz
scas
cltd
cwtl
add
pop
ret
icebp
and
scas
xchg
push
pop
jns
cltd
dec
dec
out
scas
scas
test
pop
jns
pop
dec
sti
cmp
scas
fdiv
stos
je
mov
clc
or
push
pop
ss
xchg
aaa
clc
testl
in
aas
scas
push
xchg
les
sarl
push
into
aad
repz
lahf
or
or
xor
out
jns
pop
aaa
jg
cld
stc
andb
insb
cs
faddl
jg
out
lahf
aas
mov
cmp
ss
lds
mov
in
das
pop
push
pop
or
cli
imul
repz
jnp
sub
out
and
push
xchg
sahf
scas
mov
sub
cmp
in
jo
daa
jae
cmp
dec
xchg
and
icebp
in
leave
mov
rolb
inc
adc
fists
or
add
aas
pushl
arpl
pop
jns
and
cmp
cmp
push
shrl
lds
inc
adc
cld
stc
repz
mov
ja
cmp
inc
xchg
ljmp
fisttpl
lds
jle
dec
mov
inc
mov
cmp
in
gs
shl
xchg
lods
xchg
je
mov
mov
fst
scas
cmpsl
leave
pop
mov
add
mov
fisubrl
scas
hlt
sti
repnz
test
jnp
inc
pop
scas
adc
pop
sbb
jno
cmpb
xchg
cmpsb
sar
sahf
decb
dec
bound
cmp
lock
lods
mov
cmp
aas
mov
inc
cld
stc
xor
mov
sub
ja
jl
mov
cmc
mov
sbb
pop
jns
xchg
xchg
or
jl
mov
test
xchg
ja
test
dec
pop
repnz
neg
mov
cltd
dec
std
xor
xor
lret
shrb
add
popf
mov
out
aam
test
scas
test
jb
int3
shr
mov
pop
pop
push
xchg
push
fdivrp
pop
lea
aas
lds
sub
iret
aas
cmc
lret
xor
jno
ljmp
fstpt
ret
andb
aas
jg
cmc
into
cs
xor
rcll
stc
repz
or
and
push
adc
das
idivl
das
das
cltd
adc
lahf
xchg
shl
dec
test
pop
scas
mov
adc
shld
lea
xchg
push
fidivrs
dec
dec
leave
adc
jno
pop
jns
fstp
scas
pop
jge
divl
jp
testb
lds
dec
inc
fbld
mov
mov
cli
and
adc
push
icebp
fs
mov
adc
cs
jg
jle
lds
icebp
fistps
lret
repz
lahf
lret
lcall
push
loop
xchg
in
imul
cld
stc
xor
mov
iret
mov
mov
lds
bswap
sub
dec
sbb
arpl
dec
push
mov
mov
f2xm1
inc
add
mov
lret
xchg
das
xchg
mov
pop
testb
insb
pushf
out
xchg
cmc
std
jb
jbe
pop
pop
nop
jmp
repz
std
je
mov
mov
mov
in
xchg
xrelease
cmp
mov
xlat
addr16
and
inc
pop
inc
jno
cld
stc
repz
mov
push
adc
ds
mov
lahf
aas
jg
rol
fldl
mov
jo
movsl
xchg
repnz
push
pushf
jnp
aad
pushf
imul
cld
mov
push
or
push
daa
or
cmpb
stc
stos
das
aas
jg
push
repz
pop
mov
std
sub
loopne
bound
sahf
jne
dec
lahf
iret
mov
rolb
lret
sbb
xchg
push
fisubrs
fistl
push
lret
out
ds
jge
pop
xchg
xor
cmpl
and
iret
popf
test
aas
mov
fdiv
add
hlt
outsl
jmp
lcall
leave
inc
repnz
pushl
mov
pop
clc
shlb
mov
push
cli
js
push
ds
imul
mov
arpl
js,pn
loopne
xor
aad
pop
pop
cli
daa
inc
test
and
mov
decl
iret
lahf
andl
adc
in
cld
stc
repz
das
sbb
out
push
loop
sarl
add
xor
jle
xchg
aad
mov
lcall
push
cld
or
sahf
jge
inc
sub
arpl
push
aas
jg
in
push
int
push
insb
mov
lahf
sbb
fcmovnu
leave
sarb
and
lret
rcrl
mov
out
mov
push
lret
mov
insb
pop
sub
sub
or
mov
je
lret
mov
dec
negl
dec
rcrb
addl
push
loop
cmpps
lods
out
jns
stc
repz
mov
or
add
test
dec
adc
jle
repz
test
inc
add
sahf
jecxz
xchg
fcmovu
in
pushf
push
mov
cld
stc
mov
xor
push
pusha
mov
add
mov
aas
lret
int3
jle
mov
dec
stos
push
cld
adc
in
mov
cmp
mov
aas
jg
fimull
cmpsl
sub
or
push
out
rclb
pop
mov
clc
bnd
pushf
push
js
jnp
cld
cs
mov
lea
out
pusha
push
popf
dec
mov
mov
sbb
mov
das
scas
lret
sbb
shrb
xchg
lea
out
push
push
jle
in
inc
jl
xchg
rcrb
dec
pop
shr
into
scas
xor
xor
mov
add
inc
into
scas
xchg
ret
sbb
roll
cld
stc
repz
mov
or
jne
ret
jle
incl
xchg
lret
push
dec
mov
lahf
aas
repnz
mov
jns
sbb
ficompl
add
adc
and
push
pop
fwait
lcall
cld
stc
mov
mov
inc
cmp
into
aam
dec
lret
iret
lahf
aas
xor
adc
adc
push
mov
out
lret
psrad
outsl
push
out
cld
stc
xor
cs
out
push
idiv
int
outsl
fimull
lahf
aas
jg
dec
sti
ror
outsb
sub
fmull
xchg
addr16
repz
dec
cmpsb
lret
xchg
cwtl
jbe
stos
test
xchg
std
mov
mov
and
stc
repz
cs
scas
add
aaa
out
popf
adc
jg
mov
stc
pop
les
in
ja
call
sbbl
adc
stos
cli
push
xchg
push
pop
jns
subb
mov
std
dec
stc
aaa
lock
inc
xchg
std
subl
cmpsl
add
jmp
mov
fimuls
cmpsl
hlt
add
pushf
sahf
inc
lock
mov
stos
jnp
aas
jg
lret
push
jecxz
out
sub
mov
stc
repz
shrb
les
pop
movsb
add
das
jle
cld
sub
fisttps
mov
leave
data16
aas
call
je
enter
iret
adc
mov
pop
sbbl
add
cld
sub
xor
push
das
add
out
lahf
push
repz
cmpsl
sahf
outsb
cmpsl
mov
repnz
cmp
mov
pop
stc
add
jle
pop
popf
lahf
pusha
push
cmc
rorl
shrl
inc
jg
imul
add
lods
fs
adc
icebp
push
mov
pop
jns
xchg
fsub
rorb
cmp
loope
imul
push
sub
jg
in
test
lahf
jge
in
test
out
lcall
and
mov
dec
dec
jae
jnp
xchg
push
push
adc
inc
gs
sbb
imul
jns
ljmp
push
xchg
cmp
repz
shl
mov
xor
mov
scas
mov
iret
xchg
shll
xor
out
lret
sub
cwtl
push
aas
test
sub
les
addr16
xchg
sub
mov
fsubr
test
ja
iret
inc
sti
movsl
adc
jl
inc
sahf
repz
repnz
mov
jge
rcrb
sub
nop
scas
sbb
stos
xchg
push
fsubrp
jns
adc
pop
pop
mov
adc
fildll
fidivrl
jo
lcall
out
cmp
pop
popf
sbb
pop
or
out
jne
das
imul
cs
loopne
loop
in
and
xor
in
sub
push
je
out
push
add
ja
and
sar
repnz
dec
xor
fnstsw
add
ds
mov
and
divl
mov
pop
ljmp
orl
cld
cmpsb
mov
movsb
mov
jmp
mov
push
inc
mov
repz
mov
sar
icebp
pop
outsb
aad
stos
cli
ret
loop
enter
cmp
lahf
jg
dec
cmp
in
pop
sub
jecxz
out
in
or
dec
sahf
cld
xor
in
popf
cmp
cmp
out
les
pop
pop
mov
adc
in
out
sub
inc
test
mov
ret
test
out
shll
stos
jmp
aas
xor
fwait
dec
mov
arpl
cmp
pusha
out
pop
std
repnz
sub
jge
cmpsb
ljmpw
cld
stc
repz
cmp
ds
push
es
ficomps
aas
jg
movsb
bound
arpl
sbb
lcall
mov
js
inc
pop
xor
iret
lahf
push
xor
or
push
out
add
cld
or
dec
loopne
hlt
clc
mov
jg
lods
in
xchg
mov
sahf
cmp
pop
jg
pusha
jb
pop
or
jne
iret
imul
mov
xchg
adc
push
or
pushf
cld
stc
add
inc
adc
aas
jg
add
inc
pop
jae
je
sbb
cmp
jge
mov
pop
pop
xchg
jecxz
add
repnz
int
xchg
xchg
pop
pop
sub
pop
add
das
scas
mov
add
stos
iret
inc
xchg
scas
mov
cwtl
dec
mov
dec
fcomp
sahf
mov
xchg
mov
pop
push
cmp
loop
or
aam
add
pop
dec
jns
fstl
jecxz
mov
mov
pop
pushf
inc
call
dec
push
pop
or
jae
cmovle
loopne
call
ds
dec
push
les
cld
inc
inc
jl
sub
jbe,pn
je
das
jg
fiadds
jp
rcrl
pop
out
mov
and
mov
push
adcb
sub
lret
scas
jb
fisubrs
ret
push
cmp
lret
mov
stos
inc
xchg
in
lahf
mov
repnz
enter
ljmp
pop
jns
in
int3
push
rclb
mov
inc
movsb
xchg
stc
xchg
repnz
lock
jbe
mov
jle
imul
mov
or
pop
dec
mov
push
ljmp
outsb
xor
popa
add
push
mull
xchg
sub
scas
xchg
sbb
out
int
jmp
push
jl
inc
stos
push
mov
add
pop
jns
mov
jae
xchg
inc
ret
mov
jle
movlps
pop
mov
xchg
push
pop
jns
dec
shll
inc
mov
in
repz
addl
pop
jns
xchg
and
adc
stc
sub
rcll
lods
ds
gs
sub
loop
pop
imul
js
lahf
outsb
fwait
sbb
add
lock
cs
ja
pop
loopew
cmpsl
sbb
mov
pop
pop
imul
pop
jns
in
mov
add
cld
cmp
mov
mov
or
stos
push
stc
dec
fidivl
stc
and
ffreep
xchg
jmp
dec
sbb
arpl
mov
in
xchg
popa
and
scas
scas
sbb
pop
cld
shr
lcall
sub
out
mov
popf
mov
iret
pop
fs
jp
scas
mov
or
rolb
ss
pop
xchg
and
pop
decb
rcrb
popf
pushf
dec
sub
mov
adc
bound
push
cmpsb
pop
out
jmp
cld
ja
aas
dec
hlt
ret
stc
repz
pop
daa
cmp
pop
dec
in
sbb
fdivr
or
xchg
mov
cwtl
hlt
cli
push
sub
in
pusha
xchg
jae
aam
in
in
shrb
push
outsb
push
shll
pop
aam
aas
jg
cld
out
insb
xor
out
adc
jecxz
movsb
insl
in
xchg
lahf
jl
or
xchg
mov
xchg
push
pop
jns
js
push
into
insb
sub
mov
ja
leave
pop
jns
fisttpll
cmp
adc
fdivl
bound
in
push
gs
sahf
fucomi
sub
cmove
xchg
lahf
lock
sbb
in
sub
pop
or
mov
sub
mov
push
test
stos
jge
add
add
mov
repnz
mov
ret
xor
inc
lret
mov
outsb
lock
lahf
xchg
shr
repnz
sub
mov
pop
pop
jns
das
dec
jge
das
fs
xchg
in
sbb
jns
xchg
push
mov
mov
int3
arpl
adc
mov
sar
fdivr
push
shrb
cmpsb
inc
rcl
push
cmpsl
xchg
and
xchg
aas
jg
push
pop
push
nop
mov
call
pop
fsubp
xchg
mov
push
sti
push
daa
leave
pop
xchg
adc
gs
adc
dec
xor
jmp
mov
ds
lahf
xor
jle
dec
jecxz
pop
movsl
mov
das
ja
inc
mov
xlat
outsb
pop
mov
jg
pop
sbb
mov
pop
push
ret
ror
scas
adcl
addr16
adc
test
lds
lods
jle
pop
push
aas
scas
xor
mov
imul
stc
repz
mov
test
mov
popf
sbb
shl
or
push
nop
push
pop
lea
xchg
stc
repz
ja
mov
push
push
xor
push
rcl
xchg
out
aas
jg
cld
leave
mov
or
fcmovnb
stc
repz
lahf
xor
xchg
cwtl
sbb
jae
cld
push
clc
in
test
and
mov
aas
jg
jnp
and
in
adcl
push
stos
pop
jno
stc
repz
dec
and
sub
bound
sbbb
jg
cld
mov
imul
cmp
xchg
jmp
iret
lahf
jg
dec
neg
mov
data16
jns
jmp
movaps
cli
mov
or
ficompl
in
push
lret
pop
push
jnp
pop
xchg
jb
xchg
push
sub
xchg
and
jl
and
sti
jp
into
pop
fistl
and
sti
iret
lahf
aas
jg
and
push
mov
add
cmp
stc
repz
lcall
fidivl
loop
aam
add
aas
jg
pop
outsb
pop
mov
repnz
dec
imul
out
cld
xchg
push
fmuls
out
adc
adc
adc
dec
popa
in
scas
xorb
mov
test
in
ja
sbb
ret
add
lret
push
pop
stos
fwait
add
imull
icebp
hlt
popa
inc
push
popa
and
pop
cmp
adc
add
mov
iret
inc
popl
aas
sbb
rcll
stc
repz
push
cld
xor
mov
decb
cli
mov
out
iret
xchg
fbld
mov
fmull
cld
sarb
out
and
leave
notb
cld
mov
inc
pop
pop
in
das
ja
push
ret
outsb
shrb
stos
inc
test
in
adc
xchg
sub
jbe
push
into
repz
mov
mov
sub
add
jnp
lret
mov
lods
cld
xchg
adc
lret
sub
leave
jle
push
in
sbb
test
stc
sub
sahf
dec
loopne
and
in
push
iret
lahf
aas
mov
hlt
push
mov
add
mov
pop
jp
repnz
push
mul
sub
rcr
cmpsl
imul
adc
test
lahf
jg
pop
inc
lods
inc
outsb
cmp
ret
dec
popf
xchg
stc
repz
and
sbb
lcall
pop
scas
mov
ret
add
cs
mov
iret
mov
je
mov
cld
stc
repz
rclb
fstpt
roll
mov
das
lahf
aas
jg
jnp
or
aam
inc
out
std
jb
fstp
lock
daa
xchg
mov
loopne
dec
jl
jg
dec
push
xchg
push
push
xor
repz
lahf
fsts
repnz
outsl
cltd
mov
sbb
cld
stc
xchg
xchg
and
sti
push
mov
nop
mov
xchg
insb
in
push
or
xchg
loope
lahf
aas
jg
mov
hlt
sub
cmc
dec
lret
pop
jns
fnstsw
fsubrl
mov
in
push
fstps
imul
hlt
sbb
jg
dec
jge
and
sti
cmp
cmp
push
stos
icebp
add
ds
pushf
xchg
mov
cli
in
ret
fistpl
add
mov
inc
fsubrp
data16
repz
divb
xchg
leave
shll
iret
hlt
jle
mov
pop
jg,pt
cld
ficoms
xchg
insl
addr16
out
lock
xchg
cmp
popa
cld
cltd
pop
adc
lahf
or
xor
enter
adc
jmp
aaa
lods
mov
mov
push
dec
jns
imul
lods
ret
jns
ss
inc
in
test
rolb
jg
jg
hlt
mov
inc
lds
lahf
hlt
jg
mov
lret
xchg
lds
lahf
xchg
fimuls
cld
stc
cs
sub
jg
ja
out
shld
xor
pop
iret
dec
out
pop
clc
repnz
jo
stc
mov
mov
repz
mov
push
nop
jo
popa
ljmp
lahf
aas
jg
inc
fists
lret
pushf
sbb
dec
cmp
test
pop
lods
dec
int3
iret
lahf
jg
jle
add
mov
bound
dec
aam
aam
scas
hlt
xor
out
cli
repnz
dec
fisubrs
sbb
stc
repz
loopne
ds
and
inc
sti
xchg
rolb
jp
cwtl
ds
sbbb
cld
push
or
mov
out
sbb
or
lahf
pop
push
scas
scas
psubsb
mov
xchg
sti
cmp
pop
push
iret
in
lret
out
mov
jmp
xor
icebp
push
das
repnz
or
leave
stc
repz
loope
int3
xchg
push
push
or
pop
mov
jle
cld
aas
jnp
rolb
stos
outsb
je
rcrb
pop
pusha
and
lahf
pop
sahf
xchg
lock
mov
scas
mov
mov
pop
jle
mov
or
repnz
cmp
shlb
xchg
sub
enter
mov
mov
sub
jecxz
js
adc
jo
nop
scas
mov
sbb
cwtl
mov
or
insb
sub
stos
push
sub
lret
sub
nop
inc
mov
imul
std
jb
lret
push
pop
add
inc
incl
std
outsl
call
pop
fdivrp
scas
shll
test
cmpb
lret
xchg
cmp
daa
stos
mov
mov
mov
inc
scas
mov
fnstenv
stos
in
mov
repz
xchg
sub
sub
iret
in
das
mov
stos
pop
stos
outsb
in
push
dec
lea
push
pop
cli
scas
xlat
sbb
inc
aam
inc
mov
mov
adc
mov
in
xchg
ja
inc
pop
lods
sbb
cmpsb
in
call
mov
mov
sti
push
pop
push
xlat
dec
movsl
adc
jl
in
dec
pusha
or
push
sbb
push
lahf
aas
jg
sahf
or
stos
xchg
dec
or
test
das
mov
push
jg
lret
jb
mov
aam
mov
push
daa
xor
mov
sti
jmp
mov
push
fcmovbe
leave
mov
sti
repnz
add
fnstsw
loopne
lret
mov
or
xor
clc
testl
pop
or
movsb
aas
xchg
push
fidivrs
aam
jg
inc
xor
cmc
or
pop
jns
test
push
fwait
xorb
setne
in
iret
sub
scas
cli
ret
xor
cltd
in
xchg
push
sub
bound
jb
in
or
decb
mov
add
stos
mov
jne
xchg
lea
mov
out
mov
pop
jns
adc
mulb
jle
push
push
insb
bound
lea
push
shlb
adc
addr16
pushl
test
xchg
ja
pop
sbb
mov
lds
aas
jge
vmovq
mov
lahf
iret
dec
xchg
aas
jg
jle
sbb
and
add
out
mov
arpl
fistps
cld
stc
repz
mov
sarb
sbb
inc
inc
mov
or
in
sub
and
inc
push
mov
icebp
mov
mov
cld
stc
xchg
hlt
les
jge
in
jecxz
popa
xchg
decb
xchg
push
mov
fistps
mov
push
and
lods
das
movsl
in
scas
cld
pop
int
aaa
outsb
sbb
mov
in
pop
xchg
inc
mov
je
dec
add
out
push
add
pushf
sbb
mov
into
inc
loopne
ret
sahf
movq
or
mov
rcrl
push
cmpb
xchg
and
sbb
mov
imul
fs
iret
cltd
outsl
stos
pop
aas
popa
or
mov
fucom
xchg
ja
pusha
cmp
adc
sub
push
pop
jns
ret
in
jae
iret
cmp
mov
inc
mov
push
pop
jns
in
mov
or
mov
pop
pop
jge
ds
in
and
ja
jns
push
jae
sbb
xor
push
inc
sbb
in
repz
cmp
mov
das
push
jnp
scas
push
mov
push
sub
stc
repz
adc
push
icebp
sub
lahf
aas
jg
mov
out
fiadds
int
cmp
cmp
iret
icebp
ss
jmp
subl
pop
mov
test
xchg
adc
lret
insl
jmp
filds
sub
jg,pt
pusha
repnz
call
xor
out
xorl
rcrb
dec
dec
leave
add
pop
adcl
fmuls
push
mov
scas
cld
stc
repz
cmp
ret
aam
outsl
pop
bound
sarb
push
pop
jle
push
loopne
push
dec
repz
lahf
lea
negb
mov
stos
in
pop
cld
stc
sub
out
jp
inc
adc
dec
into
or
adc
ja
mov
fidivs
mov
mov
mov
lret
fwait
push
mov
adc
test
pop
jg
jg
push
data16
pop
and
das
jg
cld
pop
jb
add
aas
cmc
cmp
pusha
iret
pop
push
jg
jg
add
inc
shrb
lahf
pop
push
adcb
outsl
icebp
in
adc
sbb
sbb
xor
dec
ljmp
push
add
pop
xchg
movsl
movsb
mov
push
pop
scas
mov
mov
or
xchg
cmp
comiss
loop
iret
sahf
mov
stc
repz
jmp
aad
jbe
sahf
lds
xchg
jle
cld
fsubl
mov
mov
mov
lahf
aas
mov
xchg
in
roll
rcrl
add
bound
adc
call
test
decb
mov
cmp
arpl
adcl
lret
fs
jb
ret
add
aaa
fs
cmpsb
pop
inc
adc
in
push
lods
jp
inc
jno
mov
aas
jg
cld
pop
das
into
sub
mov
mov
repz
lahf
adc
ret
adc
pop
cld
stc
and
ss
xlat
lret
pop
xchg
loope
push
and
shl
dec
clc
repnz
fcom
adc
or
mul
mov
shufps
out
pop
das
push
jo
xor
inc
cld
stc
repz
ss
mov
call
rcrb
jg
mov
mov
jge
jle
xchg
jecxz
pop
loope
iret
bound
inc
test
mul
outsb
outsl
xchg
fcomip
out
lahf
push
mov
push
add
enter
jle
cld
stc
xchg
mov
push
jnp
clc
cltd
js
ret
test
in
sub
seta
aam
fnstenv
mov
xor
xacquire
cmp
sub
jle
cmp
xor
dec
out
lcall
scas
nop
daa
mov
lret
mov
loope
mov
movsl
xchg
pop
scas
gs
sbb
and
adc
call
outsl
ds
out
jle
pop
imul
aam
imul
cmp
aad
stc
repz
or
sub
adc
cmp
stos
dec
xor
jg
cld
add
cli
fs
fmull
jle
push
jmp
outsl
mov
xor
jle
jge
inc
cs
cli
cmp
lahf
aas
jg
mov
sub
fstpt
es
lock
ffree
outsl
push
stos
lds
cmp
mov
jb
inc
ljmp
or
add
outsl
js
stc
repz
into
mov
loopne
mov
or
hlt
lahf
aas
jg
scas
pop
lea
fnstcw
subl
stc
repz
xchg
scas
inc
sub
and
add
lret
stc
jo
dec
hlt
fmull
mov
mov
mov
out
call
repnz
or
outsb
fisubs
inc
outsl
xor
push
xor
pop
jp
ja
pop
lret
xor
out
xor
pop
xor
jecxz
pop
adc
and
in
push
add
mov
fldl
mov
aas
jg
push
sbb
or
adc
pop
enter
dec
pop
das
into
inc
mov
out
test
push
xlat
cld
rcrb
or
mov
jp
mov
aam
push
ret
jg
or
stc
xchg
sub
adc
pop
mov
inc
addr16
xor
scas
mov
jp
mov
testb
cmpsb
xor
and
lret
cmp
xchg
js
mov
mov
scas
stc
push
sbb
outsl
pop
jns
adc
pop
inc
pop
cmp
or
in
sbbl
clc
xchg
push
pop
jns
cmp
imull
insl
shrb
pop
lahf
imul
pop
jns
xchg
daa
mov
adc
fadd
pop
jns
xchg
outsb
sti
scas
fwait
into
sub
js
sub
lock
rclb
xor
mov
stc
repz
jmp
je
cltd
sbb
jle
cld
test
mov
nop
jecxz
iret
lahf
aas
repz
fbstp
bound
jge
stc
repz
cltd
pop
fs
jg
out
pop
sbbl
xchg
jb
scas
mov
decb
pop
xchg
ds
jmp
push
lcall
les
pop
sti
arpl
pause
dec
adc
fstps
outsl
fnsave
out
mov
jmp
sar
inc
jle
repnz
fidivrl
repnz
hlt
ret
adc
jg
sahf
xor
cmp
lret
imul
sub
scas
push
out
ret
or
std
inc
movsb
mov
inc
cmp
inc
insb
iret
lahf
aas
dec
push
arpl
test
jns
in
loopne
xchg
scas
in
mov
test
push
pop
pop
dec
pop
dec
fildll
ss
fdivrp
jb
pop
fmulp
xchg
shll
loopne
mov
mul
xchg
push
movsl
push
fldcw
flds
mov
jl
inc
jmp
cld
stc
repz
bound
sti
rclb
or
jns
pop
loope
out
dec
push
test
es
minps
xlat
cwtl
and
jnp
in
dec
dec
stos
lahf
xchg
sbb
jnp
repnz
sahf
aaa
hlt
cld
mov
xor
int3
jp
repnz
sub
fldt
fidivrs
cmpsl
mov
inc
popf
xlat
pop
push
dec
clc
dec
adc
pop
dec
pop
and
pop
sub
ljmp
iret
xor
in
lods
cwtl
jb
ds
and
cld
in
mov
adc
mov
iret
lahf
dec
dec
push
push
js
leave
pop
call
iret
std
aam
pop
jmp
daa
mov
scas
and
fildll
and
cld
stc
pop
inc
sbb
ds
pop
sbb
mov
iret
lahf
aas
jle
loopne
jbe
mov
mov
stc
repz
lret
aas
cmp
xchg
mov
xlat
clc
test
fcmovb
iret
icebp
in
enter
xor
das
popa
cli
in
out
jbe
xchg
flds
ljmp
inc
jle
scas
lods
mov
ret
mov
or
repz
divb
jg
es
addr16
dec
lahf
aas
jg
fs
test
push
adc
jmp
iret
nop
adc
out
fwait
pop
loopne
adc
jl
adc
inc
xor
dec
cmp
js,pt
nop
jle
mov
aas
push
mov
sub
mov
sti
cmp
repnz
lret
in
sub
push
repnz
inc
mov
jnp
aas
flds
stos
mov
mov
sbb
stc
repz
mov
mov
mov
add
jg
cld
adc
shr
mov
xchg
ja
pop
pop
sbb
clc
outsl
sbb
sti
enter
mov
int
lret
mov
inc
xor
pop
sub
jae
daa
or
in
cs
lock
ss
scas
mov
push
cltd
mov
jb
inc
aad
mov
lret
out
shll
div
xor
cld
fwait
pop
fucomip
sub
adc
clc
mov
test
lcall
pop
fimuls
xchg
repnz
and
divps
lods
push
mov
adc
push
mov
xchg
push
out
bound
pop
das
stc
sub
mov
jns
ljmp
jg
jle
xor
sub
jmp
push
scas
pop
and
xchg
jnp
jge
xchg
add
mov
mov
scas
pop
lcall
cmpl
loop
rcll
ljmp
popf
cmp
xchg
sub
mov
ret
xor
cmc
push
jg
lea
lahf
fdivr
fwait
jge
pop
outsl
inc
in
xchg
paddd
sti
and
mov
push
xor
jl
and
pop
sbb
dec
cltd
pop
sar
addr16
pop
push
sbb
cmp
mov
into
cld
fimull
push
stos
pusha
sbbb
pop
cmc
jmp
das
ja
aaa
fimuls
pushf
push
mov
aaa
aas
jg
inc
jle
jnp
xlat
add
inc
mov
out
lahf
in
mov
ret
imul
sub
jg
cld
stc
fcoms
stos
fiadds
pop
or
adc
into
das
lahf
aas
js
bound
cltd
std
or
sub
ds
mov
test
cli
repnz
popa
jae
pop
loop
movsl
mov
in
mov
sub
push
cwtl
add
lahf
mov
add
cmp
nop
add
mov
in
insl
mov
mov
and
fmul
jne
stos
mov
sti
add
mov
outsl
jecxz
stos
xchg
sub
sub
cmp
les
xor
adc
adc
scas
mov
outsb
push
mov
out
jle
repnz
sub
xchg
lcall
mov
aam
repnz
pop
jg,pt
jle
rclb
scas
add
push
ja
xchg
aas
mov
inc
pop
cltd
dec
xchg
js
scas
mov
fldt
cmp
loop
sbb
repz
bound
outsb
adc
das
pop
lea
mov
push
jae
push
jg
pop
imul
sahf
add
lahf
pop
adc
push
jmp
negb
mov
out
lret
or
dec
out
out
shl
scas
call
movsl
pop
scas
mov
mov
loop
mov
xor
adc
in
repz
aas
cmp
sub
pop
into
add
xor
out
lahf
sub
and
ja
adc
pop
aam
dec
out
cld
add
repnz
in
loopne
xchg
or
dec
sub
jle
push
xchg
mov
pop
jmp
outsb
mov
repnz
mov
xor
add
sti
sti
pop
test
pop
out
std
lcall
out
mov
insl
fcmovne
fs
fsts
fcompl
inc
out
and
inc
punpckldq
add
das
and
inc
ds
mov
pop
sbb
lods
dec
popf
fbld
lret
ret
lods
push
jg
mov
out
mov
lds
scas
lret
pop
mov
jns
xchg
push
adc
xchg
or
data16
lret
adc
in
outsl
jnp
out
aas
lock
jne
into
jne
lock
sub
cld
stc
repz
xor
in
out
ret
push
or
xor
ja
lahf
imul
imul
test
xor
les
mov
cmp
xor
out
loope
lods
mov
xchg
repnz
cwtl
mov
stos
ja
jo
xchg
jns
xchg
push
jnp
push
rcrb
xchg
xor
jmp
incb
sbb
int3
xlat
ficompl
mov
add
iret
lahf
aas
ljmp
imul
cld
stc
repz
mov
fs
inc
dec
lahf
xor
fcomip
out
lret
jg
in
inc
add
pop
out
mov
in
inc
mov
jno
repnz
sub
jns
das
sbb
mov
or
sahf
sub
lret
xchg
push
and
xor
psubsb
add
jecxz
lds
cld
stc
rep
stos
sbb
in
sbb
mov
sub
mov
ja
hlt
and
ficoml
dec
push
fidivrs
inc
mov
scas
cmp
mov
call
inc
in
mov
mov
pop
jns
push
add
pop
add
sbb
fdivrp
repnz
sahf
jg
mov
adcb
mov
pop
stos
lods
arpl
mov
data16
outsl
pop
push
frstor
test
adc
out
dec
lods
xchg
push
pop
jns
ret
das
or
or
imul
push
pop
jns
mov
xorb
js
pusha
mov
mov
jns
xchg
lds
hlt
clc
dec
lahf
imul
push
std
mov
sbb
mov
inc
pop
and
push
or
das
lahf
xchg
add
sahf
jecxz
pusha
rorb
ret
in
int
and
lret
fs
push
pop
jns
dec
mov
frstor
mov
inc
pop
jns
cwtl
xor
add
or
lret
xchg
ja
mov
lahf
out
add
pop
jns
popa
in
fidivs
push
sbb
pop
into
jae
jns
in
into
sar
aas
xor
sbb
adc
jns
xchg
push
push
and
mov
shll
into
mov
in
push
pop
jo
jnp
lock
add
mov
movsbl
lock
lods
or
subl
jg
xchg
add
pop
mov
repz
jo
in
enter
or
xchg
lret
jle
mov
adc
daa
ds
ja
lret
jg
lea
or
add
repz
outsb
nop
pop
dec
xchg
shr
jecxz
lahf
aas
jg
into
dec
imul
cs
out
test
sahf
mov
push
lret
dec
rcrw
cld
das
mov
xchg
icebp
nop
fwait
push
xor
iret
lahf
pop
pop
mov
dec
sbb
fidivrl
jecxz
sub
out
scas
inc
xchg
mov
jno
pop
mov
push
push
hlt
fsubs
sub
lahf
pop
push
jmp
movsb
push
xchg
sub
loopne
loop
shrb
ja
jl
mov
jb
xchg
push
pop
or
bound
aam
cmc
sub
nop
mov
movsb
mov
sub
push
cmp
mov
scas
mov
call
add
ret
incb
call
lods
jns
rcll
enter
gs
inc
xlat
outsl
dec
int
ds
push
pop
jns
ja
jg
sahf
ja
loopne
lahf
cmp
cld
mov
and
mov
xorl
lret
jno
add
outsb
pop
fsubrs
scas
mov
cmp
test
das
ja
lret
or
faddl
btrl
add
xchg
paddq
mov
jle
stc
repz
mov
sahf
pop
movsb
pop
jno
push
enter
lahf
aas
jg
out
dec
or
out
out
dec
lahf
mov
lahf
repz
out
out
aas
jmp
sarb
or
jbe
pop
pop
jle
jl
sbb
jnp
js
imul
cltd
jne
pop
jg,pt
inc
loope
xchg
scas
inc
jmp
stos
dec
inc
popf
ds
icebp
bnd
sub
push
and
leave
push
lret
int3
gs
xchg
jg
insl
enter
jae
repnz
lahf
incb
cmp
sahf
and
iret
xchg
shll
mov
in
adc
push
sarl
cld
scas
std
loope
add
jg
cli
sbb
xor
mov
mov
test
lcall
fbld
cmpsl
mov
inc
aad
mov
in
mov
cmpsb
sub
ret
repnz
adc
jmp
call
je
mov
lahf
adc
lahf
jg
stc
test
sbb
sbb
mov
sbb
cmpb
jle
sbb
push
out
out
mov
popf
adc
pushf
ss
das
aas
mov
xchg
dec
lret
lret
fstpl
lahf
sti
xor
lahf
pop
out
lahf
aas
mov
adc
xchg
pop
mov
pushf
insl
ljmp
jle
sahf
push
aad
push
mov
cld
stc
repz
test
adc
cld
lahf
aas
jg
mov
jns
pop
add
sbb
dec
stc
repz
arpl
or
add
and
mov
add
inc
icebp
repnz
ljmp
push
cmp
xor
mov
mov
and
jno
xlat
add
or
cmp
sub
jle
dec
outsl
data16
ss
xor
sub
aaa
push
lea
std
movsb
nop
rcl
lods
xchg
pop
punpcklwd
mov
jmp
iret
or
mov
daa
cs
jle
cmp
add
mov
stc
cld
jg
ljmp
mov
mov
dec
mov
flds
ja
mov
ss
das
aad
cltd
in
push
pop
jge
adc
xor
jl
sbb
add
xchg
outsl
in
cli
sbbl
mov
sub
call
sbb
lret
mov
xchg
push
aam
test
pop
xlat
push
sub
nopl
jle
mov
idivl
ja
and
repnz
mov
call
fdivrs
pop
scas
sub
into
cvtps2pi
jns
scas
cs
pushf
movsl
cwtl
push
mov
out
push
cld
jb
das
mov
mov
mov
cli
in
add
push
pop
xchg
adc
fdivrp
fwait
cmc
in
das
push
fwait
mov
inc
push
pop
jns
push
lods
sbb
push
enter
not
dec
aam
pop
jns
xchg
mov
mov
dec
mov
push
lahf
aas
mov
push
mov
popa
push
pop
jns
pop
inc
popa
loop
pushl
mov
mov
in
test
push
call
repnz
call
sbb
orb
push
lds
and
cmp
jmp
mov
cmpsb
repnz
jecxz
xchg
mov
shr
imul
outsb
repnz
cmpb
stc
jbe
icebp
sti
in
sub
sbb
fnsave
sub
mov
cmc
pushf
js
leave
cli
in
clc
jmp
mov
mov
jg
jb
push
cltd
mov
lret
jne
test
lret
iret
call
bound
inc
and
jl
sbb
cld
enter
xor
mov
adc
lahf
aas
jg
xchg
call
push
pusha
mull
repz
jbe
mov
cs
dec
mov
jns
xchg
idiv
sahf
lods
add
push
and
ds
addb
mov
fimuls
push
and
aaa
lock
out
xchg
push
xchg
xchg
ja
loope
xchg
xor
xor
es
jb
in
push
pop
and
mov
mov
repz
push
insl
push
sbb
xor
push
pop
jns
add
adc
mov
sub
imul
scas
lods
push
punpcklwd
into
fiaddl
mul
out
add
mov
imulb
or
std
xchg
popf
jo
sub
cltd
pushf
mov
jg
imul
out
aas
outsb
fldt
in
mov
pop
lods
jmp
repnz
pushf
hlt
pop
inc
cmpsl
pop
dec
lcall
mov
cmpsl
mov
lods
test
mov
dec
divl
sub
pop
cs
lea
sbb
mul
out
lret
ret
mov
int3
mov
call
inc
loop
jle
cmp
in
pop
daa
adc
shrl
cmc
out
ja
pop
jns
hlt
cmpsb
outsl
sbb
adc
mov
fnstsw
xchg
sbb
pop
adc
leave
test
pop
inc
jg
cmpb
addl
stc
stos
push
mov
push
jg
cld
stc
mov
cmpsb
ljmp
sbb
lods
mov
jb
and
in
xor
xchg
and
mov
jle
je
jb
xchg
test
fdivl
cmp
in
shl
pop
mov
xor
std
jb
pop
mov
jmp
scas
aas
jg
sub
pop
fwait
sbb
pop
adc
out
lahf
mov
rcrl
cmpsl
imull
mov
pop
dec
mov
fistpll
push
pop
push
adc
and
add
outsl
lret
sub
jle
fwait
ret
push
xor
popf
roll
mov
and
in
push
mov
lret
repnz
adc
dec
sbb
xchg
mov
jne
xchg
sbb
pop
jns
fstl
add
pop
fisubrl
rclb
insb
xchg
pop
add
pop
out
mov
dec
scas
xchg
jnp
mov
repnz
dec
fcmovnb
std
add
mov
fdivrs
sub
mov
imul
rclb
loop
pop
ljmp
mov
xor
movsb
jmp
xchg
ja
rcr
push
jg
push
fst
mov
popf
adc
pop
pop
jns
out
jns
jmp
adc
dec
incl
jb
loope
in
sub
dec
lcall
mov
sbb
and
jp
jne
and
mov
mov
mov
pop
out
lahf
jg
and
cmpsl
mov
cld
stc
repz
test
jge
xchg
jp
insw
iret
lahf
aas
jg
shrl
jg
lret
scas
out
cmc
xchg
out
bound
test
fsub
pop
xchg
sbb
push
insb
sub
pop
repz
scas
sbb
lcall
stc
stc
jne
mov
popf
push
mov
jle
cld
sti
pop
jae
mov
dec
inc
cltd
dec
push
pop
mov
mov
mov
aas
test
xor
jp
hlt
into
jns
in
sub
mov
imul
ret
add
in
push
pop
jnp
cs
repnz
das
push
pop
jns
lret
xor
add
sar
hlt
lahf
aas
aas
incb
sahf
popa
mov
rcll
stc
repz
sahf
leave
das
std
mov
mov
push
les
jg
cld
outsl
loope
int3
inc
ret
pop
pusha
pextrw
orl
iret
lahf
push
aas
mov
jns
and
push
push
dec
cli
in
imul
push
clc
stc
dec
inc
cmp
inc
dec
adc
inc
das
fisubrs
out
cld
cld
stc
repz
lods
cmpsb
test
xchg
hlt
inc
roll
push
es
and
sbb
jns
pop
cs
out
mov
mov
fsubl
loopne
fstl
cmc
cmpsb
xchg
xchg
push
pop
jns
push
mov
popa
jo
jns
repz
pop
jns
and
in
call
jmp
fwait
cld
rol
arpl
aaa
orb
mov
jle
lds
sbb
pop
sti
mov
in
lret
jbe
mov
rcrl
fcomps
lret
ficomps
cld
movsb
lcall
pop
scas
or
xor
mov
out
dec
cmp
jae
xchg
adc
cltd
xchg
pop
arpl
jg
cld
stc
inc
aas
jl
insl
and
mov
mov
das
sbb
jmp
out
scas
lahf
loope
adc
mov
leave
and
mov
sub
jno
mov
in
lret
mov
mov
and
sub
add
sti
div
adc
mov
jne
pop
iret
in
aad
jecxz
fnsave
aas
xor
out
into
dec
imul
sbb
mov
add
loopne
arpl
aas
mov
pop
imul
dec
insl
mov
out
lahf
mov
mov
inc
aad
mov
sub
daa
das
mov
xchg
inc
adc
sbb
std
jb
jmp
push
shll
clc
sub
jb
xchg
push
lahf
sbb
xor
test
dec
std
cmp
in
pop
push
mov
lahf
pop
inc
pop
push
mov
and
cmp
iret
dec
dec
jns
mov
inc
or
mov
outsl
push
jle
dec
and
movsl
mov
sub
push
iret
sub
xchg
pop
jns
xchg
pushf
insl
dec
adc
scas
or
xorb
push
push
in
jo
inc
ss
xchg
enter
inc
pop
pusha
sub
test
jg
or
jge
in
ffreep
leave
jl
sbb
mov
pop
xlat
rclb
dec
jge
int3
lahf
pop
jns
fnsave
pusha
pushf
xchg
shlb
out
in
ja
into
jns
iret
decl
pop
jns
pop
enter
fidivl
fwait
aaa
mov
sar
addr16
jns
xchg
inc
js
sbb
xchg
lahf
rol
stos
sbb
and
mov
imul
cmpsb
test
and
cmp
stc
test
ret
mov
dec
loop
cmp
add
mov
or
xchg
jns
jae
jl
vmread
sahf
xor
xchg
aam
xchg
push
pop
leave
pop
cwtl
test
lock
rorb
les
stc
sbb
in
push
pop
pop
sub
pop
jns
sbb
lret
add
sub
jle
jns
xchg
cmp
sbb
jns
xchg
push
inc
cld
jl
xchg
adc
ficoml
mov
mov
xchg
push
pop
shufps
mov
call
cld
stc
mov
jle
stos
cmpsb
test
sub
pop
incb
xor
out
out
scas
mov
orb
jb
cs
es
sub
mov
loopne
pop
push
mov
mov
and
inc
dec
mov
rolb
pushf
aam
push
mov
ss
add
in
rorl
out
scas
movsl
inc
pop
push
clc
lods
and
cltd
in
xchg
iret
ja
dec
enter
xchg
punpckldq
sub
xor
iret
inc
fisubrs
std
sub
cmpsb
addr16
push
movsb
cld
sub
into
nop
mov
subb
jnp,pn
add
sarl
das
das
mov
mov
push
push
sub
jg
test
js
jo
iret
rclb
mov
out
push
jp
ja
jg
mov
push
rclb
out
lcall
inc
xchg
int3
mov
pusha
push
xchg
ret
jmp
out
int
sub
imul
push
add
mov
out
mov
fists
orl
dec
repnz
rcr
mov
and
lods
lods
lret
mov
dec
je
sar
clc
repnz
test
push
xchg
push
es
aas
jg
pop
fadd
sub
pop
push
pop
out
cmp
stc
jae
lret
and
js
or
cld
fisttps
or
jae
into
arpl
lret
xchg
ja
repz
outsl
sbb
pushf
das
pop
jns
cmpsl
icebp
rcll
popa
das
cmpl
jle
std
jge
fadd
das
sub
or
cmp
roll
lahf
aas
jg
addr16
out
loope
loope,pt
roll
lock
loope
in
xor
repnz
in
mov
les
adc
xchg
aaa
mov
mov
mov
mov
repz
lahf
dec
jae
sub
fsubs
call
ret
mov
sbb
mov
sub
and
ret
stc
repz
cltd
push
sub
xorb
inc
mov
jg
fucom
arpl
cs
pop
scas
mov
pop
ret
test
lahf
adc
mov
fld
repnz
fdiv
das
jne
push
push
mov
cs
mul
iret
lahf
aas
mov
rorl
lahf
loope
mov
js
stc
repz
std
mov
int
repnz
fistpll
xchg
filds
or
cmp
scas
stos
daa
mov
or
test
and
jne
add
repnz
or
inc
popf
js
mov
jle
stos
dec
outsb
cmpsl
in
ja
mov
inc
mov
inc
adc
jns
test
lret
jo
xchg
sbb
mov
jns
in
jbe
mov
mov
push
xor
mov
into
jmp
hlt
lret
out
repz
imul
cmc
mov
jmp
iret
mov
mov
pusha
repnz
repz
jcxz,pn
in
dec
or
les
daa
add
mov
adc
les
rcrl
scas
inc
inc
stc
repz
mov
xchg
and
loopne
std
xchg
icebp
repnz
out
adcl
daa
outsb
jb
fsubs
xchg
dec
dec
stc
lret
xchg
push
pop
jns
jae
daa
movsb
cli
or
fstps
xchg
and
stos
daa
mov
jns
mov
lods
les
clc
sub
xor
sub
repz
pop
lcall
pop
add
or
das
stc
mov
inc
adc
mov
and
in
scas
sub
repnz
or
fs
inc
cltd
repz
jmp
and
push
jg
cld
stc
insl
sti
enter
ds
aad
mov
aas
gs
fsub
add
stc
repz
push
xchg
fsts
arpl
testb
jg,pt
cld
cmp
dec
into
sub
scas
cwtl
dec
shlb
in
loopne
mov
sbb
mov
or
arpl
or
scas
mov
add
out
adc
dec
es
jae
iret
je
in
je
sbb
jg
mov
cli
in
fistps
je
in
sub
jo
add
rorl
mov
sbb
jg
dec
out
push
push
fidivrs
adc
xor
das
jg
dec
mov
pop
push
dec
ds
push
sub
fs
pop
sbb
and
das
cld
dec
lds
repnz
xchg
dec
bound
inc
inc
mov
jg
lahf
aas
mov
mov
mov
out
adc
xchg
fcoml
mov
popf
rorb
orb
cmpsl
xor
cmpsb
in
mov
loopne
jbe
xor
stc
repz
aaa
inc
daa
stc
clc
cmc
pop
cmp
data16
inc
fimull
pop
mov
lahf
pop
push
out
xor
jo
mov
cld
stc
xrelease
push
xchg
dec
lock
ret
jne
cli
xchg
test
aas
jmp
lods
int3
sbb
int
mov
popf
roll
cmpl
repnz
mov
dec
inc
and
adc
dec
rep
std
repnz
and
cmp
sbb
cld
stc
inc
psadbw
aas
push
inc
xchg
pcmpeqw
out
xchg
mov
xor
xchg
mov
aaa
jecxz
mov
stc
repz
loopne
adc
imul
cld
lret
mov
push
pushf
out
leave
mov
mov
flds
adc
stc
repz
add
cmp
pop
mov
ret
test
cld
mov
sub
inc
in
scas
lcall
rcr
das
outsb
lods
insb
dec
lock
fsts
cmp
lahf
aas
jg
stos
mov
lea
xor
repnz
in
mov
dec
dec
mov
cmp
cld
dec
pop
mov
frstor
incl
mov
fstl
pop
xchg
pop
sahf
test
iret
lahf
mov
mov
stc
stc
repz
sarl
xchg
sub
mov
mov
pop
in
sbb
sub
lahf
jg
mov
push
cmp
push
mov
jb
mov
jg
pop
aad
sahf
fsubrp
lret
mov
and
push
ljmp
enter
sub
cmp
sub
jle
ds
fadds
pop
jns
xchg
push
ss
pop
jmp
gs
add
in
push
push
insl
stos
fmul
scas
pop
pop
xor
scas
xchg
in
push
pop
xchg
clc
push
dec
enter
ret
ja
repz
loope
das
out
bound
mov
sarb
xchg
ja
ds
cwtl
popa
lret
mov
in
push
pop
jecxz
adc
xchg
pop
inc
rcl
ljmp
pop
inc
movsb
jmp
pop
das
out
jg,pn
jge
test
sub
mov
push
fidivrs
addl
push
pop
jns
lods
cmpsl
ficoms
popf
xchg
sbb
or
cld
push
adc
int3
aaa
aad
call
xchg
ja
icebp
cmp
xchg
loope
iret
inc
push
sub
push
pop
clc
or
test
imul
popf
ret
add
fptan
jbe
pop
rclb
push
or
adc
lret
cmpsb
js
aad
fldcw
sub
push
pusha
scas
mov
xchg
mov
sarl
or
bound
lret
sub
pop
or
pop
inc
add
out
adc
fdivl
lahf
inc
repnz
les
xchg
iret
das
lea
aam
aas
dec
fimuls
xor
das
mov
push
pop
jmp
das
scas
mov
sbb
mov
pop
movsb
push
dec
pop
jns
xchg
imul
and
pop
jns
xchg
push
mov
push
inc
andb
mov
mov
xor
inc
cli
dec
xor
scas
mov
test
insb
loope
or
mov
cmp
dec
cli
in
stos
ret
pusha
sbbl
sub
stc
repz
iret
add
hlt
xchg
push
lods
pop
fldcw
or
repnz
mov
sub
outsb
arpl
lret
lahf
aas
shl
stc
push
aaa
mov
iret
lahf
aas
mov
mov
pop
movb
mov
into
cld
stc
repz
or
jbe
sbb
sub
xor
pop
aam
or
sub
or
sub
jle
pop
out
std
cltd
aas
jg
and
repnz
movsl
daa
out
stos
sub
xchg
inc
jg
gs
mov
sahf
out
aas
mov
out
lahf
lahf
dec
mov
dec
dec
scas
push
pop
out
pop
lcall
add
fisubrl
out
lahf
jecxz
mov
mov
lock
push
xchg
lock
cld
stc
push
mov
ljmp
das
mov
mov
and
adc
stc
adc
or
jns
ret
loop
popa
add
add
test
iret
lahf
pop
mov
js
fisubrs
std
repnz
repz
xchg
fdivs
cmpsb
sbb
and
push
fdivrp
mov
sub
jae
pop
incl
pop
jns
mov
repnz
mov
stc
scas
dec
mov
div
in
mov
jg
push
jno
xchg
outsl
mov
push
pop
jns
and
jg
push
or
outsb
scas
mov
cli
aad
sbb
push
sbb
fisubrl
loop
sub
mov
dec
jg,pt
into
movb
dec
fldt
push
xchg
rcrl
mov
adc
sti
add
mov
pop
jns
pop
and
inc
sbb
aam
jp
or
in
ja
push
int3
or
je
pop
dec
mov
and
jl,pn
movsl
xchg
int3
inc
nop
dec
pusha
das
out
lahf
aas
inc
mov
ret
dec
repz
mov
or
repz
mov
lahf
dec
cmpsb
call
push
repz
xchg
inc
sub
pushf
cmp
movntq
lret
and
dec
fdivrl
xchg
xchg
or
sub
jecxz
je
rclb
fdiv
lret
jno
pop
fs
iret
and
lret
sub
dec
push
and
sub
mov
aad
les
popf
insl
mov
les
sbb
pop
adc
cmp
pop
push
imul
mov
cmpb
in
adc
dec
pop
xor
xor
in
mov
frstor
test
dec
call
pop
inc
mov
push
pop
mov
cmc
pop
jg
out
lahf
or
sub
xchg
ja
add
push
aas
scas
in
mov
cld
jb
inc
test
repnz
pushf
bound
mov
dec
xor
aas
jmp
ds
xchg
out
push
dec
jnp
fistpll
push
jno
lods
pop
mov
dec
das
and
outsb
inc
mov
rclb
pop
jns
push
mov
out
push
aaa
mov
bound
fisttpl
das
lods
sub
inc
mov
mov
pop
add
mov
sbb
stc
repz
ds
int3
push
scas
in
mov
jo
jne
jnp
jg
pop
cmpsl
push
out
xor
mov
sbb
jg
aaa
test
lret
mov
pop
xor
cld
stc
repz
outsb
pop
imul
pop
inc
lods
and
fldt
add
pop
mov
mov
inc
ss
in
iret
lods
test
rcl
mov
dec
popf
cs
cld
stc
aaa
into
int3
pop
jp
rcl
fcmovbe
dec
stc
movsl
mov
xor
test
jg
dec
aas
aas
jg
cld
test
loopne
dec
jns
fdivp
shlb
mov
cmp
cld
xchg
sub
mov
push
aad
out
push
stc
repz
jmp
mov
fcmovne
into
pop
jle
cld
cld
addl
cmpsb
lahf
nop
jno
inc
cmp
and
xchg
ja
iret
add
cmc
fistps
push
adcl
mov
std
lret
or
jp
out
mov
in
stos
repnz
lret
iret
ret
inc
push
inc
push
mov
sbb
fcmovne
sub
jnp
sbb
leave
xchg
push
fsubp
jns
mov
dec
into
lret
mov
in
insl
ss
pop
jns
cmp
mov
pop
push
test
cmp
fcmovnbe
add
scas
pop
push
mov
loopne
repnz
subl
push
sbbl
std
sti
jb
cmpsl
loope
and
aad
decb
fadds
jns
xchg
push
jno
xchg
lret
es
mov
nop
pop
pop
pop
pop
inc
cmc
int
clc
jle
cmpsb
outsl
in
iret
lahf
push
das
dec
add
adc
lock
cltd
out
dec
pop
mov
push
outsb
notl
es
mov
jns
xchg
ja
mov
call
lret
pop
repnz
pop
pop
aam
or
xor
pop
inc
cltd
inc
out
lret
mov
and
fwait
push
pop
scas
mov
or
pop
adc
stos
popf
mov
pop
daa
or
pop
push
or
add
stos
pop
aaa
cmpsl
add
repnz
out
test
push
in
push
pop
mov
pop
dec
pop
adc
push
fists
jb
scas
mov
sbb
imul
aas
jg
int3
mov
jge
enter
cld
stc
repz
lret
and
in
es
jg
ficoml
mov
aad
add
mov
iret
scas
lods
loope
ljmp
jae
lret
inc
call
lret
inc
and
adc
jecxz
pushf
outsl
cld
cld
add
in
cs
sbb
cli
mov
sub
mov
xchg
es
mov
scas
mov
in
jmp
and
fs
xchg
push
sbb
aas
ss
pop
mov
dec
into
add
gs
iret
lahf
fwait
xor
and
pop
add
add
ja
sti
in
leave
xchg
cmp
adc
jmp
jns
sti
ss
loop
in
pop
add
inc
push
es
lahf
add
insb
cmp
hlt
cli
lret
jle
rclb
aas
stc
push
mov
mov
adc
xor
sbb
je
je
pop
and
loopne
inc
cmp
or
jge
jl
add
int3
add
cld
stc
repz
stos
stos
rcrl
push
cmpsb
das
lahf
aas
jg
xor
or
rol
rcrb
das
lock
and
cld
stc
repz
push
jae
pop
stos
inc
push
push
das
fidivrs
sbb
repz
xchg
or
cmc
and
lea
repnz
lret
iret
test
nop
dec
in
cltd
stc
dec
pusha
les
push
lret
mov
push
sub
rep
fmulp
jb
mov
push
rolb
scas
stc
pop
jo
dec
or
pushf
cltd
sbb
mov
and
mov
movsbl
xlat
das
lahf
aas
mov
test
loop
xchg
mov
lcall
fwait
aas
call
adc
and
sub
xor
xchg
pusha
in
push
fidivrs
sub
aaa
xchg
into
stos
xchg
fmul
out
in
and
loopne
scas
cmp
testl
int3
movl
in
jno
cmpsb
inc
pop
cs
shrl
popa
insl
mov
in
push
pop
add
mov
sbb
xchg
ja
pop
push
pushf
lock
inc
inc
aas
insl
aam
sbb
pop
pop
jns
push
ss
lret
cs
push
add
int3
or
in
ja
pop
loop
sbb
repnz
xor
daa
mov
xchg
push
pop
or
or
in
cmp
xchg
xchg
loopne
mov
push
sub
mov
shrb
sbb
iret
lahf
xor
and
push
or
stc
repz
scas
orl
mov
int3
xchg
push
fdivrp
mov
or
ds
push
sbb
and
in
dec
push
pop
cld
fwait
scas
hlt
out
cmpl
out
dec
cmp
iret
lahf
aas
jg
into
xchg
out
aam
fs
cmp
mov
repz
lock
xchg
int
mov
and
scas
mov
pop
in
jle
push
pop
mov
pop
pushf
push
repnz
jmp
xchg
stos
movsb
call
pop
pusha
adc
push
xchg
imul
lock
addb
orb
ds
mov
out
in
rclb
jne
aas
jne
mov
xchg
and
add
hlt
andb
sub
jnp
xorb
jb
mov
rol
inc
jecxz
das
cmp
jbe
std
jb
rcl
iret
xor
fwait
rolb
rcll
or
repnz
out
lahf
pop
pop
push
aam
cli
inc
roll
jg
mov
mov
repnz
cmc
mov
ja
mov
movsl
fldl
sub
scas
mov
cmpsb
sub
test
ds
jmp
faddl
pop
jle
adc
in
cmc
daa
pop
adc
ret
and
repnz
into
xchg
jne
aaa
pop
push
das
jg
mov
push
pop
mov
jle
das
je
inc
mov
sub
div
cwtl
pop
xchg
out
lahf
aas
insb
xor
mov
mov
or
std
std
xor
inc
push
cmp
call
xchg
dec
and
je
xchg
sbb
insb
test
xchg
lahf
mov
outsb
mov
push
outsb
push
enter
out
in
mov
pop
cmp
std
repnz
clc
push
ja
idiv
scas
or
movsb
jle
dec
mov
arpl
scas
ss
push
mov
add
test
je
popf
daa
jge
stc
pusha
stc
repz
fwait
adc
outsb
or
push
or
loop
jl
cld
adc
lods
repz
roll
pop
adc
pop
imul
loop
loopne
or
nop
push
mov
scas
pushf
xchg
ja
in
aaa
adc
push
insl
or
hlt
jb
and
test
popa
out
xadd
mov
mov
inc
xor
cmp
scas
inc
adc
pop
sub
mov
scas
adc
lahf
gs
scas
mov
filds
mov
dec
dec
adc
jg
lods
das
adc
sarb
xor
xchg
out
lahf
aas
mov
les
dec
orl
and
jmp
pop
lcall
xchg
mov
jg
stos
pop
fcmovu
jge
sidtl
or
jns
fimull
sub
xchg
div
mov
add
in
test
mov
jle
aas
shll
mov
pop
fmull
sbb
stc
add
xor
into
mov
and
lret
mov
das
xchg
ljmp
fbld
je
xchg
je
aas
aas
aam
mov
es
clc
ret
div
lret
out
lahf
push
xrelease
cmp
in
lock
mov
rclb
out
incl
cld
cmpsl
cmp
mov
lahf
test
push
push
pop
jns
fwait
scas
pop
push
add
jns
xchg
imul
xchg
outsl
sahf
outsl
jns
xchg
push
outsb
iret
mov
and
jle
mov
push
bound
push
icebp
out
lret
inc
jns
xchg
ja
sarb
adc
sub
int3
ja
insl
cld
jnp
add
adc
lret
mov
add
push
sbbb
test
jle
mov
mov
cmp
sti
repnz
lahf
xadd
fsubl
jnp
movswl
sub
dec
in
lea
and
jle
repnz
sub
stos
xor
into
xchg
test
pop
scas
fabs
fcoml
gs
inc
lret
jns
jae
iret
fistps
or
mov
jmp
mov
fdiv
pop
and
shrb
adc
daa
ret
rcrb
aad
cltd
cwtl
pop
scas
repz
cmpsl
and
cmp
sbb
jg
cld
stc
mov
adc
dec
add
inc
rcrb
bound
add
sbbb
sbb
cmp
stos
lret
out
push
repz
mov
repnz
in
add
xchg
mov
pusha
sbbb
cmpsb
and
dec
cld
fs
pop
jno
xchg
movsb
xor
in
sub
inc
out
inc
test
sub
add
mov
es
fwait
or
xor
shlb
add
jecxz
cmp
jmp
sti
das
aas
test
std
in
sub
add
fwait
mov
bound
xor
aas
jg
cld
mov
test
arpl
mov
xchg
lea
jg
lods
xchg
xchg
addb
enter
out
lahf
aas
pushf
push
fwait
pop
std
sbb
outsl
mov
lock
addr16
jecxz
dec
push
call
cld
sbb
cmp
les
shrb
iret
lahf
test
popa
out
bound
outsl
mov
push
adc
sbb
sarl
int
stc
stos
or
cmc
cli
imul
data16
mov
add
iret
xchg
pop
sub
jmp
lret
xchg
push
cmp
roll
dec
popf
cld
stc
test
out
jmp
dec
pop
push
mov
jl
mov
ds
loop
shr
repz
lahf
clc
jl
stc
and
fistl
and
aas
add
stc
stc
push
mov
out
lods
and
out
mov
jg
ficoms
popf
shl
cltd
iret
prefetch
subb
out
dec
xor
pop
adc
mov
pop
and
loopne
mov
aas
pop
cmp
mov
in
xchg
aad
fs
lret
sub
dec
out
imul
pop
sub
cmp
ror
hlt
loope
and
clc
pop
scas
mov
insb
mov
inc
push
nop
div
pop
pop
sti
mov
stos
inc
in
jle
adc
push
push
jnp
xlat
xchg
cs
mov
outsl
iret
roll
mov
dec
lcall
addr16
sbb
or
scas
mov
pop
sbb
loopne
xor
sbb
js
sahf
es
xchg
sub
add
adc
push
ficomps
or
adc
aas
pop
pop
clc
in
mov
std
lods
dec
sbb
jns
out
into
scas
xchg
push
mov
ds
test
sbb
and
mov
leave
lret
insb
sbb
lret
fstl
popf
sbb
inc
cld
stc
adc
sub
push
jp
adc
icebp
repz
jae
sbb
sbb
cmp
out
add
and
xchg
push
fstps
test
and
cld
loop
jne
or
pop
pop
or
xchg
cmp
filds
pop
mov
das
lahf
aas
jg
and
xor
in
push
in
lret
out
sub
inc
dec
cmpb
xchg
adc
pop
push
cmp
cmc
test
cmpsb
sub
call
cmpsl
or
inc
cli
iret
fdivrl
push
int
xor
add
outsb
dec
jl
rorb
test
mov
mov
outsl
mov
in
lret
scas
jb
mov
bound
lock
sub
das
cmp
adc
mov
pop
sbb
lret
nop
inc
and
xchg
adc
xchg
inc
loop
xchg
sub
bound
dec
pop
das
enter
repnz
repz
out
jecxz
ret
xchg
cld
test
daa
ljmp
mov
into
mov
lea
dec
cli
inc
jge
in
jne
aad
int3
or
call
jle
lds
imul
mov
test
lods
lock
inc
jle
cs
jg
icebp
mov
subl
mov
xchg
jg
and
cli
in
mov
sub
loopne
dec
inc
pop
icebp
pop
lahf
aas
jg
bound
ljmp
cwtl
mul
out
dec
sub
roll
cli
mov
iret
xchg
push
pop
jns
xlat
mov
rcll
jne
movsl
insb
pop
jns
fstp
mov
or
out
lret
xchg
ja
arpl
push
aad
prefetch
ret
shl
notb
xor
xchg
stc
pop
dec
dec
mov
jl
repnz
sub
out
les
dec
subl
das
jg
adc
repnz
movsl
xor
mov
stc
repz
ficomps
or
dec
and
loop
jg
cld
mov
cltd
int3
jecxz
add
inc
fnstcw
lahf
jg
daa
mov
mov
iret
sarl
xor
xor
js
in
jle
jge
pushf
out
popf
repz
pop
dec
andb
xchg
lahf
aas
jg
add
cwtl
pop
addl
repnz
hlt
mul
fldl
jg
jns
push
jecxz
out
insl
fwait
jge
stc
xor
ret
pusha
adc
test
das
in
int
aad
sbb
repnz
in
cmc
mov
mov
sti
inc
aas
push
jmp
mov
insw
jg
shrl
pop
ret
out
xchg
flds
xchg
cmp
iret
lahf
aas
mov
or
inc
scas
fnstsw
stc
repz
adc
sub
inc
xchg
push
jle
cmp
mov
jecxz
sti
mov
bt
scas
lea
cs
cmp
push
mov
fists
out
les
mov
gs
cmpsl
jns
push
iret
jp
mov
sbb
iret
dec
inc
jnp
mov
in
jle
shl
iret
fisubrl
shr
cmp
push
and
or
pushl
scas
lds
xor
lahf
cmp
repnz
mov
adc
inc
lret
js
repnz
imul
stc
iret
or
mov
mov
mov
add
lods
jg
das
push
adc
jle
xchg
enter
stc
repz
or
pop
mov
add
mov
cld
in
mov
push
sub
pop
das
mov
xchg
push
fistps
lahf
sub
lret
adc
and
mov
xor
lahf
push
push
xchg
pop
xor
in
ja
movsl
out
fdivrs
test
hlt
scas
sbb
push
pop
jns
popf
test
push
ss
add
in
mov
pop
daa
add
xchg
mov
lea
add
jg
cld
xor
out
nop
inc
gs
mov
add
incb
enter
ret
mov
mov
mov
addr16
stc
xor
rorb
test
aas
jg
or
xor
cmpsb
mov
gs
div
out
push
out
push
or
outsb
loop
out
add
jb
lock
dec
pop
and
lock
call
xor
clc
jne
outsb
outsl
ficoms
mov
pop
mov
rclb
test
repnz
xchg
push
mov
xchg
push
push
enter
inc
mov
jg
and
mov
add
xor
aas
outsb
sbb
sub
imul
pop
rcrb
decl
mov
lahf
aas
aas
ds
aaa
cltd
mov
inc
popf
into
jns
cld
stc
repz
mov
add
push
inc
mov
xchg
jle
mov
mov
add
lcall
xchg
pop
dec
int3
push
jnp
in
das
out
ud1
mov
lret
mov
aam
mov
push
mov
sub
lahf
pop
es
jno
or
addl
jnp
pop
sbb
add
nop
imul
repnz
push
fdivrp
mov
in
cmp
sbb
push
pop
jns
dec
push
jns
stos
xorps
xor
pop
jns
xchg
cmp
cmp
jnp
lods
test
aaa
lock
xchg
push
or
lcall
out
adc
insb
popf
nop
cmpsl
mov
jns
es
dec
scas
sub
out
xor
cld
jb
xchg
cpuid
cmp
subl
sete
lahf
lahf
das
add
les
bound
mov
jns
inc
iret
test
adc
outsl
jno
fiaddl
ja
iretw
pmuludq
push
mov
outsb
jmp
stc
repz
out
xchg
mov
pop
les
addr16
jne
jb
sahf
fildll
es
outsl
adc
gs
dec
shrb
jg
scas
bound
inc
in
movsl
dec
sahf
pop
push
stos
push
orl
lret
pop
mov
rcrb
xlat
cld
stc
repz
or
pusha
sti
add
pop
inc
sarb
pop
out
pop
jnp
inc
xlat
or
lahf
imul
mov
pop
mov
cmovl
push
scas
mov
sub
fs
lds
mov
cmp
mul
pop
xchg
jge
lret
add
fsubr
xchg
imul
push
mov
mov
enter
xor
mov
rcrl
stos
add
inc
mov
mov
sub
int
cmpsl
hlt
lret
push
dec
mov
adc
lret
pushl
mov
mov
add
pop
dec
inc
cli
mov
out
lahf
jmp
pop
stc
mov
fwait
mov
inc
cmp
cld
stc
jo
add
imul
fwait
push
adc
jle
mov
fdivr
test
lahf
aas
mov
das
add
test
int3
stc
repz
lret
orl
outsb
and
aas
jg
or
call
pop
mov
pushf
fsubp
xchg
iret
mov
les
xor
add
xor
scas
push
repz
mov
lahf
clc
lea
inc
pop
in
mov
lret
aaa
pop
repnz
xchg
sub
lret
adcb
lret
mov
jg
cmp
fcoml
adc
scas
mov
leave
notl
pushf
jl
movsl
scas
mov
push
out
popf
in
inc
int3
dec
jo
les
loope
sub
xchg
fidivs
pop
sub
cmp
stc
jae
inc
push
rclb
je
les
sarb
aas
jg
cmp
pop
dec
sbb
ljmp
mov
repnz
repz
jmp
fdivrl
xchg
pop
dec
jmp
pushf
lahf
mov
inc
add
mov
push
adcb
and
ljmp
jecxz
or
jns
mov
test
or
in
jnp
idivb
lret
xchg
push
dec
ret
dec
mov
jmp
in
push
pop
xor
je
repnz
test
lahf
xor
jl
lret
rcl
cmp
loopne
aas
jg
outsb
imul
xchg
xchg
or
lahf
cld
in
dec
mov
out
hlt
and
addr16
cld
stc
imul
sub
cmpsl
mov
xor
jle
aas
sub
out
mov
push
dec
dec
aam
add
aas
mov
jo
repnz
jae
mov
jmp
es
cmpsl
daa
sahf
push
rcl
lods
scas
stc
scas
xor
push
fidivs
pop
xor
insl
cs
adc
jns
xchg
push
int3
idiv
loop
cmp
dec
jns
xchg
push
mov
dec
lcall
xchg
push
pop
jge
push
popl
dec
sbb
cmp
jge
testl
mov
pop
and
iret
adc
xlat
jae
lret
pop
fidivs
jne
dec
jle
cltd
sub
bound
add
pop
xor
call
inc
les
gs
call
iret
ljmp
mov
adc
jo
out
out
mov
mov
int3
arpl
cld
stc
repz
sar
fldl
popa
iret
lahf
aas
jg
pop
add
rcrb
jns
fstl
add
fidivl
dec
mov
lret
xchg
push
pop
int
jg
fwait
xchg
dec
out
or
push
pop
jns
popf
lods
dec
mov
xchg
xchg
mov
cld
jb
xchg
pop
sub
cli
jo
jg
add
stc
imul
jnp
jg
cld
dec
into
inc
and
jb
xchg
aas
xchg
frstor
lahf
aas
or
pop
js
jno
jge
in
fildll
test
jle
mov
mov
jnp
mov
fisubrl
xor
mov
iret
cwtl
cmp
daa
icebp
fbld
mov
stc
mov
fsubr
subb
xlat
ret
mov
ds
test
jmp
pop
andl
cmc
sbb
cld
xor
pop
jns
xchg
lret
and
dec
mov
or
xchg
push
xchg
fmuls
and
xchg
push
pop
test
and
jecxz
xchg
dec
test
mov
jmp
cs
iret
out
std
mov
xlat
ret
mov
repz
lahf
and
les
sub
je
mov
daa
jg
cld
stc
lahf
out
adc
mov
clc
dec
adc
and
scas
lret
iret
lahf
aas
sahf
xor
mov
cmc
adcb
call
dec
in
dec
mov
xor
pop
jns
mulb
inc
cmpsb
rorl
popa
push
in
stc
adc
sub
jp
jnp
arpl
pop
cld
sub
rorl
outsb
iret
lahf
aas
decl
into
cltd
pop
test
mov
stc
repz
or
dec
or
sbb
aam
xor
dec
or
outsb
ds
scas
mov
lcall
into
stc
inc
push
cmc
push
push
push
cld
inc
hlt
push
out
dec
cmpsl
jne
sub
xchg
iret
lahf
cmc
jge
push
in
das
xor
adc
dec
sub
dec
push
cmpsl
push
mov
xor
adc
loopne
loope
cvtps2pi
lahf
aam
jb
repnz
int3
sarl
das
xor
jl
std
mov
mov
scas
hlt
push
sub
mov
movsb
jle
andnps
jnp
pop
add
sbb
fmuls
xchg
imul
out
into
jmp
aam
jo
sub
mull
std
mov
pop
jg
outsl
sbb
jmp
add
mov
movsl
or
mov
push
pop
ficoms
add
test
clc
push
mov
jl
xchg
test
icebp
sub
std
add
scas
cld
inc
jp
push
pusha
add
pop
mov
sarw
lahf
mov
stc
or
rcl
xchg
ja
fsubrl
leave
mov
mov
mov
and
aam
xchg
aas
icebp
pop
sub
mov
out
lahf
sarb
xor
inc
xor
jno
jg
cld
stc
sub
pop
sub
xchg
sbb
add
cs
or
iret
and
out
inc
sbb
jp
cmpsb
add
cld
stc
xorb
dec
mov
pushf
call
aas
pop
int3
inc
push
push
or
jno
mov
or
cmp
xchg
adc
fnstenv
lahf
aas
jg
lahf
lcall
and
xchg
xor
fiadds
sbb
stc
xchg
lock
dec
or
jae
stos
mov
js
inc
xchg
sbb
pop
add
lret
mov
push
fdivrl
lahf
dec
fwait
jl
pop
lret
repnz
cltd
pop
xor
in
adc
inc
ret
sub
or
cmpb
aas
jg
cld
out
popf
or
pop
sbb
pop
sub
filds
div
out
lahf
insb
fldl
cs
nop
sbb
ja
mov
fcomp
pop
call
lahf
aas
push
faddp
imul
pusha
sbb
and
in
shll
in
mov
ja
lret
lahf
aas
jge
in
cmpsl
lea
mov
dec
xor
mov
jle
add
mov
jae
fisubs
imul
aas
inc
mov
push
jbe
pushf
mov
dec
rcrl
pop
mov
add
and
pop
es
fisubrl
push
enter
mov
negl
jmp
lahf
xchg
out
mov
or
jmp
scas
jp
dec
dec
xchg
arpl
mov
iret
lahf
sti
mov
cs
cmp
pusha
lret
sbb
dec
int3
mov
sbb
or
ja
xor
ljmp
loopne
push
pop
push
mov
mov
xchg
mov
fldenv
jecxz
in
dec
out
sub
cmc
lock
xchg
push
lahf
adc
in
cmpxchg
ja
mul
das
mov
pop
sub
and
test
mov
inc
std
std
cld
stc
daa
pop
push
lcall
push
cmp
sub
jg
xchg
outsb
jmp
ljmp
out
mov
pop
mov
test
adc
sub
rclb
repnz
inc
dec
fsub
loop
and
lret
outsl
int3
adcb
rcl
cld
dec
cli
jecxz
pop
push
cmc
jns
iret
sub
lahf
aas
jg
jecxz
cwtl
jge
sahf
fdivr
mov
stc
repz
cmc
ret
jnp
push
cmp
addr16
jg
pop
jns
adc
mov
repz
and
aaa
xlat
out
lods
inc
mov
add
cld
push
test
fisubl
iret
in
lahf
jg
dec
gs
mov
jbe
lahf
cmp
stc
repz
je
cmp
xchg
fs
outsb
lahf
aas
jg
add
jae
or
jne
cmpsb
sbbl
repnz
add
pushf
jle
xchg
idivb
nop
icebp
iret
das
icebp
mov
jnp
into
add
xchg
jge
stc
repz
test
aaa
xor
movb
out
jle
addr16
dec
add
fists
mov
mov
cltd
push
test
ret
mov
popl
lret
cld
pop
test
mov
out
push
outsl
int3
outsb
fbld
xor
ret
lret
outsl
and
mov
lcall
mov
nop
int3
xchg
jg
add
je
push
jo
neg
jb
iret
lahf
aas
dec
out
and
push
push
inc
inc
cld
stc
repz
xor
frstor
jnp
insb
rcrl
xchg
push
xchg
roll
push
push
inc
in
psubw
pop
into
mov
test
mov
xor
sbb
pop
sbb
fmul
sub
mov
xor
out
ljmp
repnz
adc
addr16
and
mov
inc
pushf
mov
and
rorb
repnz
roll
push
inc
lret
out
test
mov
popf
dec
push
push
sub
lret
pop
sbb
lahf
scas
rolb
jns
add
call
cli
cmc
push
pop
mov
jge
in
add
mov
sub
lahf
pop
pop
mov
and
push
sub
out
xchg
iret
cmp
lea
sahf
in
daa
das
inc
cs
cmp
or
ret
stos
and
dec
jo
cld
stc
mov
sbb
clc
fdivs
mov
arpl
jecxz
jge
mov
xchg
nop
sar
int
mov
out
cmpsl
xchg
sbb
test
pop
sbb
cmp
cmp
dec
out
aaa
clc
sti
repnz
pushf
sub
jg
add
incl
xchg
pop
jmp
je
jbe
roll
mov
and
push
fidivl
das
cltd
xchg
ljmp
mov
lret
pop
ja
daa
mov
add
lret
addr16
mov
push
dec
ja
and
xchg
ficoml
jno
adc
popa
mov
cld
stc
outsl
sbb
loop
push
mov
or
ja
xchg
iret
lahf
aas
pushf
adc
hlt
xchg
shlb
push
fsubp
push
jl
scas
dec
gs
push
ret
xchg
mov
jno
jbe
xchg
inc
pop
mov
scas
loopne
add
dec
pop
pop
pushf
pushl
aas
loope
in
outsb
les
mul
nopl
repnz
in
adc
scas
insl
push
scas
xor
lods
gs
lahf
push
das
cmc
imul
push
mov
mov
into
shr
cmp
jg
fistps
push
sbb
jns
xchg
push
jbe
pop
adc
jl
iret
lahf
pop
adc
jo
imul
xor
pop
mov
iret
sbb
enter
sub
mov
scas
pop
push
pop
scas
addr16
icebp
repnz
nop
mov
mov
xor
pop
fsin
jge
sti
mov
push
outsl
cmp
xchg
cld
stc
test
scas
or
and
aas
jg
push
gs
xlat
mov
in
aaa
hlt
jmp
inc
lret
lea
mov
xacquire
ret
xchg
lahf
cmp
adc
cld
test
lods
mov
jne
into
pop
out
mov
fdivrl
out
ds
jns
pop
repnz
cmp
sbb
dec
stc
cmovg
sti
enter
test
jmp
lret
mov
int
or
xorl
mov
add
push
sub
ficomps
mov
fwait
xchg
pop
pop
xor
xchg
lret
out
mov
and
call
jns
push
pop
aam
xchg
fwait
cmp
add
xchg
shll
mov
push
fimuls
bound
decl
popa
pop
incl
fisttps
cli
jb
subb
mov
jle
repnz
enter
push
mov
xchg
inc
lret
push
inc
adc
das
cmp
jmp
lret
inc
lahf
cmp
shlb
jno
cld
cld
mov
dec
dec
andl
int3
xor
mov
push
cs
repz
dec
push
xor
mov
mov
fimull
aas
jg
cld
out
sets
push
mov
out
fdiv
out
lahf
jmp
mov
and
sti
repnz
subb
mov
loope
ds
mov
and
adc
gs
bound
or
out
mov
test
scas
mov
adcl
sub
decb
arpl
repnz
jo
dec
pop
xor
aas
cld
stc
rep
jle
sub
insl
testb
sub
das
aas
jg
mov
inc
pop
and
jge
lcall
das
mov
add
add
add
in
and
jne
fistpll
in
and
mov
xor
decb
sahf
mov
mov
repz
lahf
cwtl
sub
jnp
rcll
inc
roll
fcoml
mov
jecxz
mov
xchg
ja
in
inc
xchg
lahf
pop
sarb
addr16
sub
loopne
lahf
mov
hlt
mov
stc
repz
scas
push
jae
lret
mov
mov
movsb
mov
cmp
scas
mov
cmp
je
jnp
sub
ret
subl
cmpsl
sbb
push
mov
mov
mov
stos
lods
sbb
xchg
push
mov
pop
pop
pop
xchg
sbb
jg
jle
mov
mov
dec
cmc
xchg
jg
movsl
pop
aas
xor
int
lods
jp
adc
pop
push
jmp
pop
push
mov
das
scas
mov
pusha
mov
shl
adc
inc
mov
iret
das
mov
orps
shrl
in
icebp
bnd
xchg
ja
dec
cmp
leave
outsl
adc
mov
adc
into
xor
dec
dec
test
mov
mov
jo
in
pop
or
icebp
dec
jmp
aaa
aas
sbb
push
into
pop
inc
clc
in
decl
repnz
push
pop
rolb
mov
cmp
cld
stc
repz
jne
cli
sahf
fdivrl
inc
orb
rclb
mov
and
cld
in
ret
add
in
loopne
mov
mov
cld
stc
repz
jo
test
loopne
loopne
lds
pop
mov
loopne
sbb
xchg
ja
and
xchg
iret
ja
pop
popf
inc
and
test
dec
jl
subb
fwait
out
jns
xchg
ja
cmpsb
jg
int
jge
sarb
xor
xchg
push
pop
mov
jg
jne
test
fbld
jns
lods
cmc
push
pop
ficomps
sahf
push
pop
jns
or
cmc
sbb
push
mov
xchg
pop
jns
xchg
mov
push
mov
fcmovnbe
or
jge
cmp
das
xor
and
cld
pop
inc
sub
adc
stc
repz
pop
stc
xor
jns
sahf
inc
insb
adc
jle
cld
imul
addr16
in
ja
loopne
scas
pop
push
shll
pop
jns
cltd
arpl
mov
jle
lahf
test
das
and
xlat
repz
lahf
cwtl
mov
push
cmc
jl
xor
push
das
stc
sub
mov
roll
decb
sbb
test
push
rcrb
out
mov
and
cmpsl
lock
out
add
aaa
adc
in
jl
cld
stc
cmpsl
push
or
jae
inc
add
cmp
repz
outsb
lds
iret
add
sahf
jne
and
inc
xchg
push
pop
jns
add
movsl
cmp
push
mov
sbbl
jns
xor
ja
adc
aas
push
out
sbb
decl
pop
jns
cwtl
xchg
jl
icebp
cld
adc
mov
jg
cmp
jle
mov
pop
repz
or
lret
dec
pop
push
scas
pushf
ret
pop
cmp
pop
jns
mov
sub
jge
xchg
cmp
cmp
jns
in
sbb
cmp
into
and
arpl
dec
or
out
pop
mov
mov
pop
filds
pusha
pop
test
out
repz
push
jmp
lret
shrb
dec
frstor
int
jns
sub
out
in
push
cli
out
insb
lret
stos
xchg
xlat
sub
mov
cmp
lahf
pop
dec
test
cmp
jecxz
xchg
fsubp
xor
or
jae
mov
mov
adc
ret
mov
sub
xor
lods
std
and
xchg
add
scas
test
push
fisubrs
add
push
jecxz
inc
aas
lret
out
les
scas
pop
push
or
insl
mov
in
pop
dec
push
addr16
mov
lret
cli
pop
add
lahf
pop
das
add
sarb
mov
add
lcall
mov
xchg
aaa
jecxz
xchg
fcmovnbe
push
pop
jns
int3
testb
jno
push
rolb
mov
cltd
push
sub
fimull
xchg
mov
lahf
aas
xor
repnz
mov
repnz
das
mov
add
cs
cmp
icebp
mov
ja
stos
jmp
scas
insb
popa
mov
xchg
cld
stc
repz
push
enter
fwait
cmp
in
int
mov
fstpl
cs
mov
repnz
or
les
pop
scas
push
jb
sub
cld
stc
lods
scas
and
sbb
iret
aas
mov
jmp
jmp
cmpb
pop
stos
pop
jg
cld
stc
sbb
fldcw
fs
hlt
outsb
rcrb
xlat
es
push
fdivrp
lock
inc
aad
rorl
std
std
jb
add
fildll
jg
pop
pop
cld
fnstcw
jno
aas
mov
jns
mov
push
dec
inc
data16
js
int3
lret
pop
shll
push
out
sbb
push
mov
sti
in
test
or
movsl
iret
repz
jg
lds
mov
push
bnd
adc
cltd
sub
ljmp
or
negl
add
jns
inc
xchg
and
xchg
push
pop
jns
faddp
or
xor
mov
jns
and
lods
repz
push
shrl
pop
jns
xchg
sti
xchg
shr
jp
data16
add
jns
xchg
push
or
push
lret
sub
mov
jmp
push
pop
jns
inc
rorb
pusha
push
jns
fisubs
enter
sbb
cmpsb
sbb
aas
lods
das
mov
dec
pop
insl
pop
jne
rcll
pop
add
lcall
pop
dec
and
adc
xchg
push
fisubrs
sub
dec
int3
pop
xchg
push
pop
jns
pop
es
xor
or
or
lods
fdivrp
jb
shlb
dec
xor
cli
jmp
das
push
push
mov
cmp
pop
push
cmpb
jns
and
or
jns
cwtl
iret
lahf
pop
sbb
lock
fldt
out
add
mov
fistpll
pop
xchg
inc
cmp
xor
iret
lahf
lods
mov
mov
pop
imul
push
jl
cmp
lret
repz
scas
aam
call
pop
pop
aad
cld
stc
cmpsl
dec
scas
data16
pop
push
add
adc
iret
lahf
aas
inc
fsts
mov
not
pop
loope
loop
out
fistps
pop
movsb
or
out
lahf
lahf
mov
or
fdivrl
jmp
cld
stc
imul
or
sub
or
push
or
cmp
ficomps
nop
fnstenv
xchg
and
bound
in
cmpsb
pushf
movb
xchg
dec
jmp
pop
and
sub
repnz
xchg
lret
mov
push
mov
repnz
mov
xchg
pop
or
call
sub
jg
fs
int
dec
ljmp
mov
sbb
push
mov
iret
cmp
imul
jp
mov
fimull
cmp
in
stc
stc
repz
aas
push
out
sub
jp
cmc
mov
push
ficomps
dec
cmp
sbb
jl
mul
mov
jns
iret
shrl
pop
jle
dec
cs
pop
popf
pop
orl
scas
mov
xchg
fcomp
xor
movsl
loopne
mov
xchg
adc
les
orb
das
lahf
aas
pop
outsl
dec
dec
dec
shl
lret
lahf
aas
decl
add
mov
mov
out
rolb
out
sub
mov
imul
scas
mov
loopne
stos
sarb
pop
cs
xchg
mov
cmp
repnz
lret
sub
cmp
out
jb
lret
sub
or
dec
xchg
cmp
insl
lods
loopne
sbb
mov
sub
stc
repz
arpl
shrb
outsb
add
and
dec
lahf
aas
jg
lahf
jb
incb
clc
add
xchg
fsubrs
pusha
mov
jo
adc
shl
xchg
iret
lahf
test
cld
mov
xor
mov
dec
movsl
jecxz
scas
cmp
js
stos
and
out
mov
or
pop
and
jle
std
andb
repz
or
jg
div
add
frstor
ljmp
push
dec
decl
cld
cs
pop
xchg
test
pop
out
bound
dec
hlt
push
das
lret
arpl
and
add
scas
fwait
xchg
sti
in
icebp
icebp
push
push
test
xchg
cmpsb
call
cld
adc
adc
test
mov
iret
lahf
aas
jg
pusha
xchg
nop
ficompl
das
cs
add
push
sbbb
mov
cmp
sub
dec
sub
xor
leave
or
loopne
cmp
mov
mov
insl
jecxz
sub
xchg
sahf
jl
scas
cli
push
cltd
arpl
stos
cld
mov
decb
mov
inc
aaa
iret
mov
xchg
push
into
test
icebp
cld
stc
repz
mov
add
mov
add
or
jl
push
daa
cld
std
das
ret
cmp
pop
lds
fdivl
aas
jmp
lahf
aas
jg
fiadds
lods
xchg
add
xchg
dec
stc
repz
dec
lcall
nop
xchg
dec
dec
inc
sbb
sarl
adc
jle
cld
shr
icebp
lods
jae
scas
loopne
ljmp
pop
pop
mov
adc
repz
push
or
add
mov
fcmovb
das
jg
push
arpl
adc
xchg
adc
stc
repz
outsb
jbe
xlat
popf
ja
lar
or
push
scas
adc
int
subb
dec
outsb
cwtl
lods
stos
ss
cmpsl
push
lahf
jns
lret
outsb
std
adc
sub
dec
jg
mov
sti
cmp
scas
mov
pop
int3
stos
fldenv
scas
xlat
cmp
mov
dec
repz
in
cmpb
sub
dec
imul
or
sahf
push
xchg
add
jecxz
mov
rcl
cmp
xor
sub
mov
out
stos
repz
or
cmp
mov
sbbl
mov
sti
mov
add
or
push
hlt
mov
stc
mov
sarl
lods
lods
cwtl
jb
sbb
leave
repz
mov
arpl
dec
fwait
cmpsb
jge
mov
mov
sahf
je
jmp
aas
xor
and
add
mov
dec
mov
push
xchg
fnstenv
repnz
inc
jae
cmpsl
mov
mov
lahf
aas
outsl
and
sbb
std
es
hlt
xchg
inc
xor
out
jo
pop
xorl
stc
adc
mov
inc
xchg
lods
cltd
dec
mov
push
ret
pop
out
outsb
mov
test
ret
test
das
push
mov
stc
mov
stc
int3
push
pop
pop
mov
push
inc
or
scas
fwait
cld
jo
mov
push
fsubp
push
repz
test
pop
subl
push
pop
jns
outsl
mov
or
addr16
pusha
mov
adc
add
cs
shr
add
int3
adc
xchg
aaa
clc
in
lret
mov
inc
es
mov
sti
in
imul
cld
js
xchg
xchg
sub
in
sub
pop
lock
sub
in
aaa
cli
lcall
sub
xchg
push
pop
jns
and
loope
hlt
dec
movsl
pop
enter
mov
jns
dec
bnd
sarb
mov
insl
xor
sub
sub
mov
iret
iret
xchg
aad
outsb
mov
fimull
in
popf
pushf
jb
or
ja
add
pop
jno
test
jp
sbb
mov
stc
add
cld
pop
push
mov
js
aas
jg
cld
push
mov
in
xchg
push
les
enter
pop
out
mov
out
jg
dec
scas
sbb
lods
or
mov
lahf
icebp
add
cld
movsl
stc
aad
decl
imull
aas
pop
int3
loopne
pop
out
cmp
hlt
popl
das
add
mov
into
and
repnz
mov
imul
aaa
repz
aas
sub
push
lods
lock
ss
ss
cld
mov
gs
jmp
dec
mov
mov
mov
ret
adc
jge
repnz
in
push
or
or
out
or
adc
dec
fistpll
mov
stos
sbbl
pusha
sahf
mov
cmp
adc
lock
sub
dec
js
inc
cld
jg
xor
adc
cld
iret
lock
outsb
cld
fildll
cld
test
xor
jns
ret
dec
cld
addl
pushf
lahf
unpcklps
xchg
cld
lahf
cld
fimull
or
jne
test
adc
mov
and
cld
jg
sub
ret
lahf
cld
lcall
jno
lods
fildl
das
cld
adc
scas
cld
adc
iret
inc
sbb
cltd
pusha
and
cld
lahf
xor
adc
cld
scas
cld
ret
mov
sub
cld
dec
xor
lret
test
jg
addb
js
cld
out
jl
jo
cld
aas
cld
iret
dec
sub
std
das
es
jo
cld
cmp
dec
js
cld
pop
into
add
cmp
pusha
ret
dec
cld
jg
es
cwtl
cld
scas
cld
repnz
aas
cld
out
jne
push
xor
leave
test
mov
push
jg
dec
loope
jb
mov
fistpll
add
call
es
cld
pop
cld
scas
or
sahf
or
scas
cld
es
loopne
cld
out
cld
pop
es
outsl
cld
dec
xrelease
lar
loope
add
cld
es
subl
cwtl
lock
dec
lahf
cld
pop
ret
test
das
cld
das
xor
pop
cld
or
cmp
push
cld
int3
iret
lock
es
cwtl
cld
pop
cld
pop
popa
ret
cld
paddb
adc
test
cmpsl
es
cwtl
cld
aas
cld
add
or
or
adc
das
cld
and
scas
xor
cld
fisttpl
cwtl
mov
pop
cld
iret
es
rolb
cld
cmp
rcrl
cld
out
push
rorl
cmp
cld
test
adc
xor
cld
cmpsl
or
loope
dec
xchg
adc
andb
outsl
cld
pop
es
rolb
mov
mov
fbstp
loope
test
out
cld
ret
xchg
out
cld
lahf
daa
cwtl
lock
cld
das
cld
jg
loope
add
push
orb
pop
cld
loope
add
jno
das
xorl
shll
cld
scas
cld
mov
cld
pop
outsb
jae
adc
xchg
test
aas
cld
test
or
cld
pop
pop
adc
mov
cld
jg
js
rcrl
cld
dec
pusha
adcb
cld
pop
cld
sub
adc
out
enter
cld
mov
xor
mov
test
leave
or
pusha
mov
cltd
xor
in
iret
out
cld
adc
iret
cld
dec
cltd
loopne
aas
cld
pop
xor
roll
cld
addb
mov
adc
cld
cld
add
cwtl
loopne
cld
fistps
es
cld
dec
clc
xor
scas
cld
lahf
cld
mov
and
das
pushw
in
jo
pop
add
cwtl
jo
iret
adc
loope
cld
lahf
cld
or
inc
or
sahf
cld
mov
push
cmp
jo
popf
pushf
jb
outsl
xor
push
es
cld
push
dec
clc
jg
jno
sub
pusha
or
xor
adc
cld
sahf
sbb
inc
scas
dec
mov
dec
js
shrl
pop
cld
xchg
cmp
adc
les
dec
cld
pop
cld
add
cwtl
lock
cld
jg
xor
leave
cld
das
cld
aas
push
xchg
or
aas
cld
pop
adc
in
cld
decl
loope
jo
das
pop
cld
pop
inc
int
xor
dec
js
jle,pn
out
imul
pusha
and
mov
jp
lcall
sahf
pop
mov
xor
roll
cld
addb
clc
cld
cltd
jo
cld
iret
cld
dec
xchg
pop
xor
iret
cld
subps
push
cld
loop
or
outsl
jl
lock
dec
cld
dec
out
sbb
cld
pop
mov
mov
or
das
cld
stc
imul
stc
adc
or
xor
lahf
loopne
adc
daa
xlat
movsb
lcall
movsb
jbe
jg
dec
mov
or
das
cld
dec
cmp
adc
jo
addb
cld
mov
cld
pusha
pop
mov
loope
cld
pop
cld
pop
dec
lock
cld
cld
mov
push
and
dec
cmp
jnp
pop
rolb
mov
das
cld
gs
repnz
mov
sbb
cld
paddb
cmp
lock
cld
aas
cld
test
xor
addr16
cld
rcrl
pop
cld
iret
orb
xor
mov
mov
cld
pminub
into
mov
cld
cmp
ret
scas
cld
outsl
cmp
ret
paddb
xlat
test
adc
outsl
cld
pop
xor
movsl
mov
roll
cld
out
andb
sets
cld
ffreep
xor
lret
cld
iret
or
pop
cld
sbb
paddb
pop
cld
outsl
cld
push
lock
cmp
pop
test
cltd
cld
mov
orb
pop
cld
loopne
adc
out
cld
mov
cld
jg
roll
pop
cld
jg
or
xor
pop
cld
cwtl
pusha
sub
cld
outsl
cld
loope
add
lahf
cld
mov
cld
cld
mov
cld
xadd
es
cld
iret
mov
cld
scas
cld
out
lcall
cmp
xor
daa
paddb
cmp
add
jo
andb
mov
jl
cld
paddb
pop
xchg
es
mov
das
fs
cld
das
cld
pusha
add
lods
jg
dec
pop
es
cld
cld
scas
addr16
cld
aas
cld
out
es
test
pop
cld
adcb
js
cld
wbinvd
adc
inc
cltd
pusha
iret
cld
outsl
mov
loope
cld
fbld
orl
mov
or
cld
dec
fs
ficoms
dec
fwait
pop
cld
add
cltd
lock
cld
inc
xor
sar
cld
iret
add
das
cld
xor
cltd
loopne
cld
pop
cld
aam
dec
clc
iret
cld
mov
xor
iret
pop
push
cld
or
add
popl
scas
test
iret
cld
loope
test
iret
cld
iret
es
jo,pt
lock
mov
cwtl
pusha
sub
sbb
sbb
cld
aas
scas
add
into
iret
cwtl
loopne
adc
cld
or
sbb
cld
lahf
pop
dec
jo
cld
dec
cld
outsl
pop
subb
and
ficoms
dec
cmp
ljmp
fs
cld
add
cwtl
jo
jg
mov
outsl
es
cwtl
pusha
lahf
cld
jg
mov
rorl
cld
outsl
or
orb
lahf
lock
scas
cld
out
rolb
cld
cld
dec
mov
dec
cld
lock
ret
cld
inc
test
cwtl
cld
scas
cld
or
xor
lahf
cld
xor
mov
xchg
sub
mov
pusha
lcall
xchg
push
sub
cld
and
pop
cwtl
loopne
dec
cld
out
dec
add
cld
iret
mov
add
cwtl
jo
incl
or
cld
lahf
cld
xchg
test
adc
cld
dec
or
js
cld
scas
cld
dec
mov
aas
cld
lock
pop
cwtl
cld
scas
cld
or
es
iret
add
cld
aas
cld
pop
adc
cmp
test
das
cld
jg
repnz
mov
xchg
pop
out
adc
cld
aas
cld
inc
adc
jle
sub
into
daa
rorl
loope
test
cld
sub
or
sbb
add
pop
cld
scas
test
iret
cld
mov
scas
cld
test
and
cld
vmread
loope
cld
paddb
or
dec
cld
leave
mov
loope
out
test
cmp
add
ret
cld
jb
xor
das
cld
bound
add
das
jne
cld
mov
cwtl
xor
pop
cld
icebp
cmp
in
push
push
test
es
pop
cld
ret
push
scas
cld
decl
popa
cld
paddb
adc
cmp
mov
js
test
out
cld
or
mov
cs
adc
in
cld
iret
add
push
dec
cld
iret
cld
ltr
sbb
add
into
mov
add
cwtl
cld
outsl
cld
adc
push
roll
pushf
mov
clc
xor
incl
mov
adc
outsl
add
jo
lock
cltd
adc
cmpsb
push
inc
cld
dec
js
jl
cld
lahf
cld
jo
addb
cld
aas
pop
es
cltd
cld
pop
cld
scas
push
adc
xchg
scas
cld
gs
pop
cld
test
cwtl
jo
cld
lahf
cmp
loope
cld
out
cld
fildll
adc
dec
cld
mov
pusha
pop
cld
mov
cwtl
jo
iret
cld
sbb
wbinvd
inc
xor
dec
cld
mov
cld
das
cld
adc
nop
cwtl
cld
pop
cld
push
xchg
xor
out
cld
scas
wbinvd
lret
sub
add
cld
out
adc
cmp
test
aas
cld
sahf
or
es
dec
cld
dec
ret
test
adc
cld
roll
pop
cld
sahf
dec
clc
xor
das
cld
lahf
lret
test
adc
lahf
cld
or
xor
dec
mov
cld
das
cld
lahf
leave
test
adc
cld
dec
js
loope
cld
pop
cld
mov
lahf
cld
out
sbb
cmp
cld
out
cld
dec
mov
lahf
cld
inc
push
jecxz
cltd
mov
pop
cld
xor
add
lahf
lock
jo
jl
test
out
cmp
or
jl
cld
mov
cli
sti
cld
lahf
jl
andl
or
xchg
add
in
lods
cld
inc
test
cwtl
cld
out
cld
js
es
aas
cld
out
xor
inc
es
out
cld
fstl
dec
mov
add
loope
movsl
pop
outsl
cld
lock
lahf
cld
outsl
push
xorb
sbb
pop
das
lock
cmp
lock
mov
push
or
sbb
add
pop
cld
pop
movsl
je
xor
jo
aas
data16
jg
loopne
adc
paddb
ret
cwtl
cld
paddb
test
jg
iret
cld
out
sbb
or
aas
lock
or
lahf
das
push
sbbb
lock
xor
cld
cld
cmp
add
mov
andl
mov
push
inc
cwtl
mov
sar
scas
fwait
cld
cld
insb
ret
mov
jo
lock
dec
ds
loop
or
dec
es
push
cld
scas
scas
dec
clc
xor
jg
dec
cwtl
pusha
or
cld
cld
add
dec
es
add
pop
cld
mov
or
cld
scas
andb
sbb
jo
cld
paddb
add
js
cld
lcall
dec
cld
das
cld
fiadds
es
setns
adc
out
cld
or
es
cld
scas
lods
fs
iret
cld
outsl
lods
flds
cld
xor
test
pop
es
aas
cld
addb
and
pushf
gs
dec
cld
iret
xor
ret
test
pop
cld
push
js
push
scas
lock
repnz
jb
lock
or
cmp
ret
cld
sbb
pusha
sub
inc
es
cld
setns
adc
loope
add
cld
pop
lret
add
xor
lret
and
addr16
lods
sbb
stc
add
or
push
lahf
f2xm1
add
loopne
lock
orl
lahf
lock
pop
int3
loopne
lahf
cwtl
jo
ret
cld
cltd
jo
add
in
mov
cld
pushf
mov
aaa
aas
sub
lea
cld
cs
test
jl
sti
repnz
pop
hlt
je
adc
xchg
mov
dec
in
mov
test
incl
movsb
clc
sbb
push
pop
jns
xchg
dec
pop
mov
dec
repz
and
pop
leave
inc
sbbb
inc
test
repz
push
into
and
clc
psubd
fstp
mov
fsubrs
push
outsl
test
pop
cmc
in
sub
rdtsc
mov
cwtl
pop
push
pop
ja
popa
pusha
cld
repnz
sbb
mov
std
aas
jg
push
jnp
outsb
pop
inc
test
xor
les
lahf
or
cld
sbb
jg
cld
scas
fisubrs
cld
dec
scas
orl
xchg
out
lahf
rcrb
in
xor
repnz
mov
mov
sub
outsb
xor
out
lahf
aas
adc
push
out
mov
pop
bnd
adc
mov
xor
inc
xchg
push
mov
push
mov
sbb
and
les
adc
lea
xchg
push
ds
jae
ljmp
cltd
stc
pop
add
jo
cmp
cld
popf
xchg
add
ret
ss
fsubrl
out
das
shrb
in
lahf
jae
sbb
add
cs
cld
stc
repz
mov
xchg
cmc
mov
enter
mov
and
jmp
cld
cwtl
sub
cmpsb
dec
inc
and
aas
jg
add
rcll
mov
jg
rcrb
xchg
lahf
inc
call
out
and
push
pop
cmc
add
leave
aas
dec
in
fistl
add
sub
cmp
jmp
add
loop
in
ds
mov
insb
aas
jg
sub
push
or
fs
push
fs
addl
inc
sti
and
aas
ret
stos
cmp
out
lods
sub
repz
jle
mov
sti
inc
addb
cmpsb
jne
arpl
inc
jle
sbb
cmp
jge
sbb
adc
or
jns
and
mov
or
fadd
push
pop
aad
scas
lahf
imul
fwait
not
rclb
cmp
enter
fidivrs
push
pop
add
mov
aas
cmp
or
xorb
js
in
lahf
xchg
sub
inc
outsl
das
mov
adc
push
mov
lds
int3
inc
movsl
and
inc
mov
fimuls
xor
jns
or
sub
xchg
rorb
es
mov
dec
xchg
inc
mov
in
push
lret
in
jcxz
dec
xor
fisubl
or
mov
cltd
incl
adc
sarb
mov
inc
mov
cmc
hlt
adc
mov
inc
inc
or
fstps
xchg
arpl
push
stc
repz
mov
mov
pop
insb
xchg
dec
hlt
mov
mov
test
push
int3
cld
stc
repz
mov
push
in
inc
ja
fidivrs
push
out
test
int
sub
jns
xchg
or
sub
cmc
lods
pop
and
mov
lret
cltd
pop
cs
inc
frstor
adcl
dec
mov
insb
cld
repnz
jle
ds
xlat
subl
and
inc
ss
add
sub
pop
mov
jnp
add
mov
jge
fisttpll
lahf
jl
rorb
cmp
and
pop
inc
iret
inc
inc
ucomiss
std
push
stos
pop
pop
pop
fcomip
mov
aas
push
push
loope
shlb
mov
cld
pop
pop
scas
lcall
add
setno
jg
addr16
das
lret
push
mov
dec
pop
sub
dec
jp
cld
jo
fstps
into
and
scas
mov
ss
xor
push
mov
loope
sub
ds
out
lahf
test
sbb
xor
push
ret
cld
stc
cmc
std
mov
test
outsl
test
jnp
adc
iret
lahf
aas
pop
sub
outsb
lock
arpl
jb
insb
das
and
sub
and
loopne
repz
lock
pop
and
ja
sub
jge
jl
cld
stc
inc
dec
add
in
sbb
jno
or
clc
mul
les
movsl
mov
cld
fidivrs
fwait
sbb
or
dec
and
hlt
xchg
pop
mov
dec
jp
movsb
lds
cs
add
iret
lahf
jg
cmp
mov
cld
repnz
repz
cmc
cmp
test
xor
out
inc
clc
push
stc
dec
les
cmp
cmp
mov
dec
xor
out
inc
imul
mov
jl
jmp
dec
pop
jns
movsl
int3
dec
fbld
adc
pop
insl
shlb
jns
xchg
push
imul
xchg
push
xchg
ficoml
shlb
pop
and
cmp
pop
xor
lret
xchg
push
pop
jns
test
sub
mov
push
pop
jns
aaa
lods
xchg
cmovge
lods
movsl
cmp
push
cmp
mov
or
in
cmp
shrl
jle
sti
in
sub
jg
inc
push
cmc
pop
push
jnp
adc
pextrw
mov
aas
aas
outsb
sbb
and
cmpb
pushw
mov
frstor
push
dec
mov
jns
jno
push
mov
out
fidivl
scas
mov
dec
xor
cmc
or
cmpl
jnp
repnz
jg
cld
shrl
insl
cmp
sub
iret
lahf
aas
gs
or
cmp
inc
pop
adc
inc
cmp
jns
fnstsw
fdivs
popl
xchg
repnz
push
lahf
mov
add
scas
mov
test
jbe
cmp
and
mov
decb
ljmp
sbb
jmp
ss
lret
lahf
aas
mov
adc
fldl
imul
xchg
add
cmp
push
repnz
mov
sti
push
mov
add
or
cmp
lahf
in
lret
xchg
push
fisubrs
xchg
pop
jge
ss
cmp
xchg
pop
and
out
pop
lods
jl
pop
jns
fucomp
decb
fstpt
inc
aad
adc
push
xor
call
sbb
xchg
push
pop
jns
xchg
mov
mov
push
xchg
push
pop
jns
push
stos
aas
or
sbb
lret
lret
xchg
xor
out
xchg
out
jg
cld
stc
pop
xchg
mov
mov
cmp
cwtl
or
iret
lahf
aas
out
insb
fistl
movsb
sub
call
icebp
in
fsts
jae
mov
push
dec
jecxz
iret
lahf
aas
enter
cmp
add
cmp
jnp
repz
popl
jnp
clc
xor
repnz
sub
pop
js
sbb
ds
in
sbbl
push
add
daa
je
push
lahf
aas
jg
outsb
or
jmp
xchg
mov
mov
mov
lret
out
lret
push
outsb
clc
sbb
out
pop
lcall
jns
lret
dec
pushf
jg
inc
push
cmc
xchg
movsb
inc
popf
cmpsl
sub
lahf
pop
inc
push
mov
gs
cld
rol
cmp
sbb
into
sbb
dec
fstl
adc
test
mov
stc
cld
fisubrs
mov
aas
sub
iret
lahf
aas
jg
dec
int3
test
sub
cmp
xor
in
out
mov
daa
cmpsl
ja
inc
add
sbb
stc
repz
jl
or
jle
sbb
push
leave
mov
dec
cld
stc
movsl
scas
cltd
leave
call
push
mov
lahf
aas
jg
mov
mov
adc
out
sarb
cs
cld
stc
repz
sub
out
sti
imul
and
lahf
aas
jg
std
arpl
ret
in
daa
adc
stc
repz
mov
lods
dec
sar
int3
jns
jl
popa
or
pop
scas
lahf
ljmp
mov
scas
int
js
iret
dec
xor
std
mov
jb
xchg
loopne
jno
pop
and
pop
inc
pop
fidivrs
sub
xor
xchg
lahf
jg
xchg
jno
mov
xchg
mov
rclb
xlat
aaa
cmpb
xor
cld
or
fists
inc
jmp
adc
nop
xchg
lahf
aas
jg
push
xchg
or
mov
fistpll
imulb
enter
fwait
add
mov
rorl
jmp
std
mov
stc
mov
or
in
xchg
ret
mov
push
out
subb
gs
mov
sbb
mov
aas
fcoms
shr
lret
push
sub
aaa
iret
lahf
aas
dec
scas
sbb
mov
pusha
xchg
or
push
fsubrp
lret
stos
popa
cld
or
std
sbb
dec
negl
in
sub
daa
mov
adc
in
push
jecxz
insb
inc
cli
jo
ja
in
and
mov
repz
scas
mov
cmp
or
xchg
repnz
loope
fbstp
scas
sbbl
or
mov
push
pop
lret
in
xchg
rclb
lahf
js
shll
jg
sahf
fmul
ret
test
cmp
add
out
lahf
aas
out
xorl
adc
pop
cmc
jge
stc
repz
hlt
mov
xchg
outsb
sbb
outsl
stos
jno
push
nop
dec
leave
iret
lea
mov
repz
into
aas
cmpl
jge
jl
aas
jg
cld
jp
js
mov
and
mov
xchg
lahf
jg
mov
scas
cmp
jmp
xchg
push
pop
jns
cld
mov
jmp
bound
in
sarl
xor
inc
testl
fsqrt
in
pcmpgtb
aas
jg
cld
outsb
pop
cmp
dec
stos
xchg
mov
sbbl
xchg
lahf
inc
add
xor
push
pop
dec
rcrb
push
mov
fdivs
out
mov
mov
fistps
aaa
lcall
sub
subb
mov
pop
add
lret
popa
adc
dec
jnp
jecxz
mov
hlt
pop
lahf
mov
sub
pop
jg,pt
andl
pop
rclb
ds
and
stc
repz
rorl
nop
stc
scas
push
push
movsb
test
jle
pusha
mov
lds
in
imul
sub
imul
mov
pop
jecxz
in
push
jl
lahf
mov
sub
add
out
mov
sahf
lock
mov
movsl
imul
add
jmp
test
aas
ds
adc
in
inc
dec
cli
jnp
stc
repz
pop
in
outsb
cmpl
push
insl
xchg
sbb
mov
loope
mov
cmpsl
sti
mov
mov
jl
mov
cli
xor
cmp
sub
fbstp
clc
mov
adc
fstp
adc
sub
dec
in
stos
xor
gs
pop
pop
mov
inc
push
out
cwtl
or
mov
out
xchg
repnz
dec
mov
imul
jle
pop
aas
nop
ja
cmc
cmp
jnp
mov
repnz
les
mov
push
pusha
push
pop
jle
pop
push
mov
mov
cltd
add
push
jnp
fidivrs
cmp
sub
dec
pop
rorl
fs
aas
jg
cmp
int3
xor
lahf
jg
adc
push
rorl
add
cld
stc
repz
pop
iret
jmp
stos
dec
push
outsl
push
inc
lret
sbb
lahf
aas
jg
dec
fbstp
add
xor
sub
mov
iret
imul
and
mov
and
cli
sbb
mov
icebp
in
lcall
es
or
sub
xchg
push
and
sub
movsl
int3
aad
push
lret
mov
sbb
hlt
jecxz
sub
pop
mov
push
jle
repnz
dec
sub
adc
mov
movsb
push
addr16
dec
aad
dec
stos
jg
cld
stc
cld
dec
cli
and
pop
fdivrp
jge
or
aas
aam
aaa
mov
and
cld
stc
xor
dec
dec
mov
sbb
cld
push
adc
mov
jmp
aas
jg
xorb
into
pop
push
outsl
pop
ds
daa
lea
push
lock
lahf
faddl
das
sbb
lds
repz
push
sbb
mov
outsl
pop
lahf
aas
jg
or
fs
ljmp
out
pop
pop
bound
inc
js
cld
cld
stc
xchg
hlt
lea
out
push
movsl
and
sbb
stc
adc
mov
inc
cli
lahf
aas
jg
fimuls
sbb
fdivs
shlb
ret
mov
lahf
cmp
add
call
repz
lahf
rorb
or
pushl
adc
jg
cld
stc
cli
ficoms
mov
aad
mov
das
lahf
aas
push
jb
pop
push
jg
jp
xor
lock
test
sahf
popa
lahf
mov
cld
cmp
lds
test
dec
and
xchg
icebp
int3
incb
repnz
repz
lahf
add
sub
call
jl
mov
add
lea
shl
iret
lahf
aas
mov
sub
pop
loop
xor
cld
jns
popa
scas
data16
add
mov
mov
fisubrl
mov
pop
xchg
add
out
sbb
out
jle
pop
cli
xchg
les
lods
out
movsl
jle
repnz
rcr
inc
fbld
mov
xor
pop
outsb
mov
movsb
xor
inc
add
iret
and
in
aas
dec
pop
or
enter
iret
lahf
pop
shrl
cmp
add
cld
stc
pop
jb
outsb
sub
push
pop
jle
cs
mov
xchg
dec
stos
js
pop
mov
repnz
icebp
cld
dec
or
repnz
pop
mov
dec
clc
orl
fstl
lahf
aas
jg
sbb
test
xchg
loope
mov
fildll
push
mov
shll
dec
pop
add
in
mov
pop
and
lods
push
jno
jb
lret
iret
aas
mov
test
out
dec
call
das
fimuls
dec
ret
call
lahf
push
call
xchg
out
lods
lahf
jb
cmp
mov
push
fsubp
insb
sti
popf
incl
xchg
jle
popl
add
aaa
mov
sahf
cpuid
pop
sti
adc
inc
inc
mov
outsb
sub
pusha
pop
push
pop
jns
dec
aas
shrl
popf
sbb
xchg
jns
mov
in
adc
or
js
or
stc
mov
pop
cmp
iret
scas
sub
iret
pop
push
pop
outsb
into
cltd
lds
out
aam
push
dec
xchg
enter
cmpsb
aam
inc
lock
aam
test
dec
mov
mov
xchg
jg
sbb
add
xchg
stc
and
or
dec
inc
sbb
mov
lds
js
mov
mov
jae
lock
mov
fldl
or
xor
add
pop
pusha
iret
pop
and
pop
mov
adc
inc
int3
sub
sub
jg
out
sahf
jg
iret
out
dec
fcoms
das
mov
outsb
and
add
xchg
insl
mov
mov
xlat
nop
out
lock
cmc
push
or
aas
mov
cmp
cmpsb
push
jle
add
call
ja
inc
cwtl
pushl
ficompl
int3
pop
std
jns
inc
inc
mov
push
icebp
test
lret
cltd
mov
and
jg
outsb
lods
ja
mov
stc
xchg
iret
sarb
add
jmp
shlb
jg
push
stos
das
scas
mov
jmp
loop
pop
xchg
push
pop
jns
das
rcrl
and
and
add
jb
aam
aaa
mov
daa
ret
cmp
add
push
jle
out
and
mov
sbb
aas
mov
cmp
dec
push
mov
outsl
xchg
mov
fnstenv
lret
sti
cmpsl
leave
pop
pop
xchg
scas
mov
repnz
ljmp
jg
fbstp
negb
adc
psllq
iret
lahf
out
fistl
xchg
mov
inc
dec
adc
push
lock
xchg
dec
mov
cmc
addr16
das
xchg
into
xchg
lahf
pop
outsl
xor
mov
cltd
outsl
or
lock
iret
or
adc
pop
stc
xor
popf
shl
sbb
out
sbb
repz
ja
jl
or
dec
out
js
push
gs
pop
jns
and
mov
les
aas
mov
jnp
push
inc
jecxz
add
data16
rclb
mov
and
div
out
lahf
shr
int3
ss
pop
out
adc
pushf
jge
inc
jge
sbb
push
or
jns
push
cmp
cli
and
mov
iret
inc
shll
or
jb
call
xchg
sbb
sbb
jns
jl
pop
or
fsub
xchg
adc
sbb
fists
jecxz
jae
mov
xchg
ja
pop
aaa
fnsave
insl
shrb
push
fdivrp
jnp
subl
or
push
dec
jo
hlt
lods
add
int
mov
jecxz
bswap
es
fbstp
cmc
pop
rcl
pop
ror
lahf
mov
imull
cld
stc
repz
sub
mov
addl
incb
pushf
sbb
inc
add
dec
mov
jg
cmpb
xchg
push
shr
out
adc
adc
mov
mov
jp
mov
push
pop
mov
mov
test
out
cmpsb
sub
jb
pop
jbe
stc
repz
push
cwtl
lods
pop
lcall
cmp
clc
sub
aas
sbb
inc
xchg
sub
or
cmp
add
cmc
gs
gs
ja
jl
loopne
into
xchg
aas
xchg
mov
lock
fstpl
push
imul
cmpsl
pop
stc
repz
leave
xchg
iret
inc
jbe
pop
mov
pop
add
dec
add
outsb
mov
insb
mov
stc
pop
clc
push
sbb
fisttpll
xor
rcrl
jle
sahf
adc
pop
adc
mov
lahf
fwait
dec
dec
es
pop
jns
lret
out
hlt
lret
jmp
cmpsb
mov
lret
xchg
push
pop
mov
push
and
xchg
fsub
jg
out
outsl
loopne
lock
iret
jbe
outsl
cmpsb
xor
push
pop
jns
sbb
into
sub
jge
fnstcw
and
sub
cmp
out
jle
cld
insl
pop
les
repnz
add
mov
divb
scas
sub
in
filds
xchg
mov
jns
mov
push
sub
cs
pop
insb
cld
fcmovnb
mov
mov
dec
pusha
cs
lahf
aas
jg
leave
aam
or
lcall
out
jo
filds
or
std
lods
cld
sbbl
cmp
das
cmp
adc
jg
sub
cmpsb
cmp
xor
bound
outsb
repz
nop
dec
dec
xchg
push
pop
jns
sbbl
dec
mov
or
jns
int3
inc
sub
pop
jle
sub
and
sti
in
xchg
pop
jnp
jp
pop
sbb
xchg
sub
mov
mov
adc
lcall
jecxz
xor
pop
pop
into
addr16
into
mov
cld
stc
movl
jo
cmp
adc
mov
mov
in
ficoms
lcall
cld
jle
jo
mov
shrb
adc
out
lahf
push
testl
jne
mov
inc
andb
outsl
push
pop
xor
data16
das
fists
outsb
cmc
fstps
cmp
out
lods
es
scas
xchg
mov
jg
and
jle
mov
jns
lret
loopne
gs
outsl
in
scas
fidivrs
cltd
lods
scas
sub
setne
jns
add
enter
mov
hlt
lahf
outsl
push
pop
jns
jnp
jmp
and
sti
int
jb
xchg
sbb
jnp
or
faddp
aas
jg
inc
xlat
lahf
pop
xorl
iret
mov
sar
movsb
mov
cli
mov
jae
pop
jnp
mov
jg
cld
stc
out
mov
dec
movsl
imul
fstl
fs
flds
jns
mov
es
ja
lods
pop
jns
xchg
adc
mov
xchg
imul
push
mov
cmp
adc
lahf
lret
ds
ja
decb
adc
mov
push
pop
jns
stc
fsubp
push
xorl
pushf
sub
jns
xchg
sbb
cmpsb
push
testl
xchg
and
pop
inc
insb
ficomps
cmp
xchg
xor
jb
outsb
push
inc
push
sub
jle
xor
mov
xchg
psrlq
mov
sub
mov
pusha
pop
repnz
mov
mov
fsubr
test
shrl
add
pop
out
iret
scas
mov
repz
mov
sub
mov
add
or
fdiv
scas
xchg
lret
pop
pop
lcall
in
mov
ret
leave
es
jb
xchg
push
lds
icebp
ret
fs
clc
push
jg
sub
inc
fistpll
in
push
add
jmp
xchg
lret
iret
lahf
aas
shll
fidivrs
imul
repnz
nop
jnp
aas
lcall
cmpsb
shlb
das
dec
push
fidivrs
push
sub
jns
fstp
lds
data16
fmull
les
in
test
cld
stc
repz
jnp
dec
or
js
cmpsb
insb
jle
dec
cld
nop
pop
pop
fidivrs
xor
test
adc
iret
lahf
pop
fbld
or
movb
xchg
psubw
into
push
or
mov
jnp
cmpsb
mov
cmp
shl
cmp
cmp
mov
cmpl
test
mov
xchg
cmp
pop
add
aas
sbb
sub
repnz
inc
inc
xlat
addl
ret
mov
das
ja
jg
xchg
xor
out
repnz
je
or
sub
lods
dec
scas
pop
jge
test
sub
das
jb
jb
pusha
lcall
or
aam
or
ret
lahf
aas
jg
dec
cmpsb
in
sbb
lahf
jmp
push
sub
iret
pop
lock
dec
ss
and
sarb
repnz
cld
add
iret
sidtl
lods
lcall
scas
fsubrl
in
pop
push
outsb
mov
stc
repz
or
sbb
sbb
sbb
cli
pop
in
rdmsr
pop
popa
push
cmc
cmpsl
mov
repnz
xor
jb
mov
xchg
jne
in
mov
into
sub
movsb
sub
jg
push
or
xlat
xor
dec
iret
dec
or
cld
stc
jae
cmp
rcrb
jbe
stc
mov
iret
lahf
aas
outsl
test
ds
bound
popa
dec
jnp
cli
repnz
testl
stc
ds
xorb
pop
ror
mov
jecxz
repnz
mov
cmpl
add
xchg
mov
mov
fdivr
in
inc
into
clc
mov
mov
out
jle
pop
cwtl
test
push
sub
jmp
test
dec
out
movsl
push
fnstenv
lahf
ficompl
jns
rol
lcall
cld
stc
movsl
cmp
sbb
jp
shll
jno
arpl
iret
xchg
aas
push
mov
and
inc
add
mov
jns
loopne
mov
shrb
or
xchg
xchg
cld
jmp
jle
jge
pop
insb
fistps
out
lahf
pop
mov
data16
cmp
mov
repz
stc
mov
dec
inc
cmpsl
mov
cmp
and
adc
daa
mov
hlt
cmc
repz
decl
sbb
movsb
out
xor
iret
lahf
pop
mulb
jp
add
leave
in
sub
push
push
popa
out
mov
xchg
sub
mov
or
enter
fidivrs
add
cmp
shlb
loopne
sub
or
xchg
dec
loopne
sub
jge
push
int
arpl
out
bswap
cmp
in
jecxz,pn
push
lods
ljmp
fstps
loopne
imul
fcom
aas
lds
lret
in
mov
mov
fsubrs
ljmp
scas
jg
jb,pt
sub
ficoms
jnp
faddl
push
push
cmpl
into
lcall
cmp
mov
cld
mov
inc
fwait
cmc
repz
lock
lret
loopne
popa
xchg
cs
lahf
addr16
test
roll
cld
stc
addl
mov
xor
ljmp
sub
psubq
dec
enter
out
movsb
pop
lds
pop
push
out
aas
ds
movb
cld
sbbl
sbb
stos
fcoms
fs
jge
in
jo
push
cmpsl
aad
mov
and
loope
shl
out
aas
pop
jno
push
mov
stc
cld
stc
loope
add
aaa
in
mov
xchg
add
lret
mov
sbb
inc
in
insb
push
mov
scas
mov
test
aad
xchg
pushf
fpatan
out
aas
jle
pop
es
aas
mov
sbb
xchg
clc
mov
add
add
and
cmp
sarb
jg
or
xor
lock
cmc
js
pushl
andb
mov
movsb
pusha
mov
aas
frstor
jge
push
sub
push
sbb
jb
cmp
inc
aad
push
lock
jmp
aas
adc
sbb
cld
add
aam
fdivr
jge
jle
sub
shll
iret
fsub
int3
repz
mov
mov
jl
cld
stc
xchg
sbb
mov
das
add
lahf
stos
js
push
push
lahf
aas
push
popl
int
call
out
xor
inc
rolb
stos
movsb
mov
ljmp
dec
jg,pt
cld
call
aas
mov
cwtl
rol
mov
iret
lahf
mov
jg
push
pop
loope
nop
out
pop
gs
pop
inc
push
jl
iret
scas
or
jnp
or
outsb
mov
cmp
mov
lahf
aas
mov
push
add
outsl
cmc
aas
int
test
into
jp
jp
ret
adc
repnz
pop
adc
stc
inc
add
cmp
cmp
push
fsubrl
push
pop
jns
mov
setne
test
xor
push
pop
jns
lfs
mov
lock
shufps
pop
sbb
outsb
or
ror
fstpl
imul
test
xor
lahf
aas
jg
sahf
shlb
loop
lea
sub
lret
add
dec
lahf
mov
pop
and
jge
das
push
ds
push
and
xor
add
xchg
negl
cmp
loopne
xchg
idivb
jb
cld
repnz
scas
dec
cmp
rclb
lahf
enter
ret
and
or
xor
dec
xchg
stos
jle
add
dec
testl
fcmovnbe
add
mov
inc
and
inc
int
cs
fisttpll
or
out
mov
inc
std
shlb
scas
fxch
adc
and
repnz
sub
jg
xchg
add
inc
adc
cmpl
lret
jle
push
lcall
nop
mov
ret
push
add
jg
movsl
dec
idiv
or
ds
daa
jg
enter
iret
je
stc
jmp
cld
stc
cmpsl
push
negb
out
fdivrs
repz
mov
addl
jae
dec
lahf
aas
aas
xchg
ficomps
inc
cmp
div
enter
lret
xorl
cmp
mov
pop
jg
sbbb
mov
jo
and
lods
orb
inc
mov
pop
fidivrs
mov
inc
pop
por
sbb
sahf
fldt
rolb
jge
int3
aam
out
xchg
into
gs
xchg
fcomp
stos
daa
mov
and
lahf
fdiv
mov
test
jbe
sbb
inc
pop
mov
gs
repnz
into
mov
addb
adc
out
xchg
push
loopne
movsl
cltd
aas
pushf
mov
stc
xor
add
daa
or
roll
xchg
or
das
in
ja
cmp
lahf
pop
outsb
mul
push
out
pop
xchg
jg
pop
jns
int3
mov
jmp
adc
or
into
cmp
imul
xchg
aam
sub
stc
repz
ds
dec
addr16
inc
sbb
ja
add
rcl
iret
sub
pop
rol
fidivs
sahf
add
and
pop
out
pop
fcoms
add
xchg
xchg
cwtl
xor
ficompl
in
in
add
mov
jb
or
aad
lret
pop
inc
leave
cmovs
std
popl
aas
cmp
test
ds
movsb
cmp
dec
ss
lahf
aas
jg
outsb
sbb
imul
cmc
popf
fprem
mov
out
push
stos
repnz
xor
and
scas
mov
sbb
iret
inc
lret
subl
in
lahf
aas
jg
push
adcl
mov
clc
stc
mov
fsubs
iret
lahf
aas
jg
loope
lock
and
aaa
cmp
inc
and
mov
cmp
enter
add
inc
cltd
push
orl
enter
outsl
cmc
dec
std
stos
cmp
aam
scas
cmpsl
xor
jnp
sub
push
pop
popa
fcoml
add
xchg
sub
jecxz
test
iret
cmp
push
push
fmulp
push
dec
xor
push
pop
xor
outsl
fisttps
inc
cld
lret
add
mov
fisubs
in
inc
fs
dec
popf
ljmp
push
pop
jns
dec
dec
mov
and
imul
pop
jns
adc
xchg
cmp
push
add
push
pop
dec
in
push
add
fisubrs
lahf
jg
daa
shl
repz
add
xor
icebp
lret
cli
ja
cmpsb
stos
push
out
in
stos
inc
cld
stc
repz
mov
ja
jne
lcall
js
aas
jg
jp
jnp
cwtl
cwtl
jne
enter
cmp
fsubrp
xchg
iret
nop
sbb
sarb
sahf
lds
jns
xchg
push
std
ds
mov
mov
stos
out
rcrl
gs
and
out
pusha
fistl
lahf
les
sub
clc
repnz
xchg
nop
sbb
and
mov
in
lahf
lock
sbb
scas
mov
lret
jmp
mov
std
or
repnz
lret
fs
rorb
movsb
or
and
mov
pop
enter
ss
xor
dec
dec
jns
push
jne
lods
mov
aas
pop
pop
jns
les
mov
aaa
xor
inc
xchg
jnp
loopne
lahf
pop
add
shlb
xchg
iret
cld
stc
repz
sub
add
adc
les
pop
lahf
aas
jg
pop
test
and
pop
jg
pop
cmc
add
sti
mov
inc
and
cmp
insb
inc
xorl
sahf
jbe
xchg
aas
jg
cld
inc
inc
shl
sbb
adc
jmp
lret
lahf
xchg
pop
adc
sbb
fwait
ds
movsl
xor
mov
rclb
and
cmpps
fcom
loop
jge
stc
repz
dec
inc
push
rclb
je
sbb
fidivrs
stos
stos
repnz
jo
mov
push
rorb
fildl
dec
mov
sar
iret
cmpsb
imul
and
jecxz
cmp
mov
out
lahf
sub
cli
sub
clc
jge
lret
je
mov
jae
rcrb
cmpsb
repnz
into
sub
stc
jne
sahf
adc
fsub
add
repnz
ja
xlat
fidivs
xor
adc
insl
mov
jb
mov
jno
jns
iret
mov
jle
adc
xchg
pop
sahf
and
mov
cld
jmp
lahf
and
cld
dec
leave
jmp
mov
icebp
cld
inc
push
adc
pop
scas
mov
cmp
xchg
ja
jg
fdivrs
add
adcb
mov
jmp
pop
cli
mov
push
shrb
push
decl
das
nop
push
sub
stc
repz
push
jg
push
lcall
inc
test
pop
and
ljmp
mov
frstor
dec
scas
and
xchg
pop
movsb
pop
popa
jb
dec
mov
jns
fisttpll
andl
cld
add
call
sub
mov
lahf
aas
jg
and
sbb
inc
sub
stc
repz
repz
repz
push
jns
mov
mov
in
lahf
sbb
icebp
or
sub
or
rcl
cld
stc
repz
jge
arpl
out
fldenv
xchg
aas
jg
loope
lahf
movsb
lahf
ljmp
lret
pop
insb
popa
mov
clc
xor
jo
scas
mov
jne
sbbb
int
push
mov
xor
aas
in
imul
pop
out
pop
ds
sub
lret
enter
jae
iret
or
and
and
aas
nop
xchg
je
fisubl
cs
pop
jns
xchg
mov
cltd
push
mov
sbb
loope
xchg
push
xchg
cltd
cwtl
xor
adc
pop
shlb
push
jnp
sbb
lahf
aas
decl
push
test
je
push
arpl
bnd
out
lods
ds
pop
aad
mov
int
pop
jg
and
repz
mov
loope
push
in
ja
mov
mov
repnz
push
pop
jns
aas
out
ffreep
jb
pop
sbb
xor
pop
mov
lock
or
ror
pop
dec
scas
mov
lret
xchg
das
xchg
jns
sbb
sbb
mov
aad
out
jno
popa
cld
pop
rorl
repnz
push
inc
hlt
cmpsb
pop
add
aad
add
lret
mov
out
cli
stos
js
std
cs
scas
mov
mov
xchg
jl
pop
call
mov
xchg
test
cwtl
or
sub
scas
movsl
sub
and
xchg
cmc
lret
paddd
cmp
mov
jge
pusha
aas
outsl
hlt
aas
test
mov
sbbb
into
out
mov
add
rcrb
iret
sub
in
aaa
inc
jne
sbb
mov
inc
icebp
dec
lcall
sbb
lea
mov
push
in
push
lret
outsl
push
cs
sub
decb
pop
scas
mov
inc
sbb
mov
jl
test
pop
sbbb
test
jg
jg
addb
push
pop
xor
test
mov
cwtl
scas
divl
sti
repnz
jae
inc
enter
stos
xor
pop
lods
in
or
shr
test
scas
mov
xor
or
cmp
insl
sub
in
lock
repnz
jg,pt
lahf
pop
cli
push
and
push
sbb
movsb
cli
in
mov
in
outsl
lock
jns
xchg
ja
lock
rcrl
std
or
xor
lds
sbb
or
inc
jle
rorl
xor
push
fimuls
scas
inc
pop
nop
inc
inc
fs
pop
jns
xchg
aad
jle
fnsave
dec
imul
push
out
cmc
pop
movsb
jmp
fiadds
add
xchg
push
pop
jne
cmc
shll
ret
div
cmp
push
pop
jns
xchg
in
outsb
push
push
xor
popf
xor
hlt
sub
jb
dec
fcomps
out
push
xchg
aas
jg
push
jbe
lret
adc
insb
divb
scas
test
jg
lods
pop
push
adc
repnz
in
loop
mov
push
jg
pop
jns
dec
mov
cs
stc
jg
adc
rorw
sahf
shll
fidivrs
repz
jp
aas
cld
mov
mov
cmp
aad
cld
ret
cld
xor
andb
lret
scas
data16
call
and
mov
lret
adc
push
fidivrs
sbb
pop
cltd
scas
out
and
clc
jb
xchg
cmp
cltd
add
xor
add
push
cld
stc
repz
pop
jno
fistps
mov
lahf
aas
jg
mov
push
sbb
loope
pop
mov
repz
xor
push
cmc
add
push
enter
push
aad
jl
fdivrp
pop
stc
repz
in
mov
mov
jle
cld
add
mov
xchg
sub
adc
cmp
cmpsl
lahf
ja
das
jg
out
push
into
hlt
pushl
lods
orb
or
test
ret
subb
outsl
enter
xchg
cmp
dec
ror
cmp
push
jae
inc
int3
in
xchg
push
das
and
js
enter
pushf
lods
xor
stc
and
jg
xchg
ds
out
scas
pop
inc
cld
add
stos
outsl
movsb
mov
jecxz,pt
dec
cmp
mov
in
insb
mov
xchg
fsubrs
add
les
aas
mov
ret
stc
mov
loop
pop
popa
ds
aad
add
add
bound
scas
mov
insl
cmp
leave
push
sub
jns
fstl
pop
xor
imul
jnp
insb
pop
enter
adc
scas
mov
jbe
xor
scas
mov
repnz
sub
sub
mov
sub
ljmp
rol
cli
xchg
iret
push
scas
mov
push
out
xchg
in
pop
push
adc
cld
xor
insl
mov
in
jo
insb
sbb
lret
jle
or
pop
fidivrs
mov
add
add
cmp
sub
mov
mov
loopne
xchg
test
pop
mov
mov
mov
in
ja
scas
push
jbe
mov
pop
ljmp
js
mov
pop
jo
cmp
mov
je
out
fsub
xor
fwait
mov
jo
cld
stc
fs
cmpsl
jne
pop
aas
insb
stos
xor
fdivr
cld
dec
and
jbe
rolb
xchg
aas
jg
pop
pop
leave
repz
cmp
sub
scas
js
pop
decl
stc
xchg
dec
aas
cwtl
pop
sti
insb
inc
stc
repz
imul
pop
add
ret
aas
jg
cld
pop
out
pop
add
or
aas
cmp
rclb
cwtl
dec
mov
jl
cld
sbb
xchg
adc
stos
jno
lahf
pop
dec
jg
cli
addr16
notb
push
jl
insl
pusha
in
adc
lea
out
mov
jnp
mov
sub
cld
stc
pop
mov
adc
jg
imul
fsubr
pop
lahf
push
jb
call
adc
std
cltd
pop
pushf
pop
xor
ret
jg
inc
jl
movsb
out
mov
lcall
lahf
aas
icebp
test
mov
push
dec
sbb
pop
jns
repnz
push
mov
repnz
inc
sub
int
jns
xchg
push
repnz
fmull
add
jl
sbb
sbb
lahf
aas
scas
xchg
jp
cmpsl
adc
add
cld
stc
repz
xor
out
fistps
ret
or
push
fcmovu
insl
jmp
mov
xchg
push
fdivrp
pop
into
mov
orb
pop
cmp
dec
mov
int3
push
cmp
pop
out
pop
jg
push
adc
in
push
dec
scas
jo
xchg
jg
xchg
std
dec
shl
xchg
push
pop
fbstp
aaa
fwait
and
rorl
pop
jns
push
xchg
in
pop
xchg
add
add
repnz
rcrb
and
dec
std
jb
shlb
or
push
pop
jg,pt
dec
mov
jp
pop
call
inc
and
out
lret
mov
pop
in
repz
fldcw
lret
mov
cmp
mov
xchg
ficoml
inc
ds
fs
stos
aam
stc
xor
lret
fldl
xor
adc
stc
repz
scas
mov
std
jae
out
add
in
ja
mov
stc
dec
mov
jmp
out
push
insl
ljmp
in
dec
xlat
inc
clc
mov
xchg
lret
mov
lea
ljmp
lret
ret
insb
xor
lods
test
in
loope
repz
aas
mov
mov
out
movsl
mov
cld
stc
adc
cmp
sub
stc
adc
sub
scas
pop
inc
jge
sub
sbb
scas
mov
jne
jg
cli
pusha
xor
mov
out
pusha
ds
loope
daa
lods
fiaddl
aas
hlt
aaa
cs
dec
ret
scas
and
cmpsb
jmp
push
jns
mov
xorps
lock
enter
out
stc
xchg
inc
out
dec
je
jg
cld
inc
into
ds
nop
shlb
fs
sbb
add
adc
lret
cs
clc
push
mov
add
fildll
cld
sti
dec
jg
or
pop
jne
loop
out
pop
jle
dec
outsb
jo
sbb
stos
in
mov
out
xbegin
lahf
testl
scas
push
fildl
mov
sub
fisttpll
daa
push
lods
cwtl
or
mov
mov
fdivrl
int
scas
pop
jns
sbb
xor
dec
lock
jb
and
pushf
popa
lahf
iret
lahf
cmp
adc
cld
stc
repz
daa
int
int
mov
mov
aas
jg
jae
imul
sti
sub
push
dec
and
iret
sub
outsl
xlat
xor
notl
push
sahf
cmpsb
mov
add
out
punpckhdq
xor
sbbb
repnz
sahf
mov
cld
ficoml
stc
test
pusha
imul
push
ja
push
fbld
aas
jg
xchg
adc
xor
enter
push
in
iret
and
iret
cs
mov
in
movsl
out
mov
jle
mov
xor
and
jp
cld
fcmovu
sbb
pop
leave
xchg
inc
in
je
ficomps
jge
in
jl
cmp
pop
mov
add
scas
cmp
xor
dec
mov
dec
pusha
xchg
cld
mov
into
sub
popa
xchg
or
adc
and
loope
addl
xchg
fcmovnu
sub
cmp
pusha
dec
xchg
push
pop
test
mov
sbb
cmc
add
sbb
push
popf
sbb
cmp
aas
push
sbb
fsqrt
pop
push
or
sub
and
mov
mov
xor
mov
lahf
es
repz
rcll
adc
mov
iret
lahf
nop
imull
or
cmpsl
push
sub
je
mov
adc
mov
cld
maskmovq
imull
cltd
test
jle
imul
lahf
aas
jg
fwait
rol
xchg
inc
lods
cmc
rcrb
fs
gs
repz
out
out
and
push
cli
add
lea
fisttps
lods
jg
leave
and
adc
pop
pop
inc
pop
bound
dec
int
repz
push
jle
push
out
cmp
push
xor
pop
in
ljmp
mov
xlat
pop
jns
inc
dec
pop
leave
jb
cmp
add
or
mov
pop
jns
and
enter
mov
adc
aas
imul
sub
and
mov
dec
mov
sub
mov
and
scas
test
sbb
test
or
jo
out
mov
cli
jo
out
fisubs
ror
sti
ja
lock
cmpsb
out
add
sub
ret
mov
add
cmc
add
xor
mov
jmp
mov
pop
shrb
mov
aas
ds
sbb
pusha
mov
or
inc
cld
stc
repz
or
jbe
ret
inc
test
pop
mov
mov
cmpsb
nop
and
sarb
out
lahf
pop
jle
mov
mov
cmpsl
clc
in
leave
cmpsb
dec
ljmp
jns
in
clc
push
leave
jg
inc
sahf
jg
cli
das
mov
or
mov
pop
subl
xor
cmp
test
incb
in
inc
icebp
xor
sub
in
out
add
lret
mov
sbb
push
push
test
enter
cmpsb
cmpsl
dec
adc
mov
jg
xchg
lcall
rcr
insl
jmp
jbe
inc
pusha
sahf
fwait
scas
or
imul
push
scas
cld
stc
stos
jno
cli
adc
gs
cld
ds
jg
orb
shlb
iret
lahf
fildl
mov
cmpb
add
je
jne
repnz
scas
scas
jl
scas
test
cmp
xchg
pop
push
pop
popf
dec
mov
rolb
ljmp
and
jnp
pop
pop
lret
cld
lahf
adc
xchg
jmp
and
xchg
dec
mov
xchg
adc
enter
repnz
add
imul
lret
mov
mov
mov
cmp
mov
mov
orb
sbb
mov
sbb
repz
dec
fs
movsl
test
and
aas
sbb
fidivs
xor
out
pop
das
lahf
xchg
pusha
daa
cltd
jae
pop
inc
mov
mov
loop
sub
mov
rolb
cld
jge
incb
dec
enter
mov
add
loop
shrb
push
mov
into
xchg
push
call
push
mov
fisttpll
jge
stc
repz
sub
ds
mov
in
std
outsl
sbb
pop
inc
mov
repnz
xchg
sbb
lock
sbb
ljmp
pop
jae
cld
pop
aam
xchg
jno
jge
lcall
aas
hlt
inc
mov
ss
mov
sbbb
inc
ficoms
dec
neg
lcall
cld
mov
flds
inc
sbb
movsl
lahf
aas
jg
into
jmp
sbb
inc
stos
loopne
add
cmp
dec
mov
outsl
xchg
inc
scas
test
cld
jp
outsb
push
dec
in
out
pusha
adc
adc
ret
sbb
jg
add
pushf
aas
repnz
ljmp
sub
popf
imul
fidivs
fmull
data16
stc
and
mov
repnz
das
xchg
and
stc
std
inc
jno
push
fwait
and
enter
aas
lahf
aas
aas
les
lcall
jge
in
iret
jo
pop
push
out
shr
aas
aas
xchg
hlt
dec
dec
idivl
mov
gs
adc
adc
jne
sbb
lds
add
mulb
pop
xchg
repnz
clc
mov
or
inc
lret
jnp
cmp
scas
cmp
scas
insb
js
lcall
aaa
add
dec
ds
sahf
mov
push
adc
repnz
or
loop
cli
cmp
leave
scas
push
push
fisttpll
mov
add
fisubrs
pop
push
lock
xor
repnz
adc
mov
lahf
inc
cli
mov
mov
das
shr
enter
clc
movsb
and
jle
stc
repz
pop
xchg
inc
lds
out
nop
jp
push
inc
iret
mov
dec
lcall
repz
dec
int3
pop
loopne
push
addl
fcompl
stc
xchg
pop
jle
insb
scas
mov
int
xlat
inc
test
pop
pop
outsb
add
test
cs
add
push
pop
shrb
mov
dec
movsb
lret
xchg
sarb
jp
mov
sahf
sub
outsl
jg
xchg
mov
pushf
mov
cmp
cmp
or
mov
push
dec
test
jl
ret
mov
push
jns
or
stos
pop
adc
lahf
aas
aas
mov
pushf
sbb
fisttpll
xor
ds
sub
sub
pop
addb
push
hlt
cmc
xchg
mov
mov
scas
jo
dec
daa
scas
sahf
sub
int
pop
inc
mov
push
cmp
dec
out
iret
fistl
sbb
orl
sbb
aaa
pop
pop
int3
ja
jbe
jns
sbb
fwait
jmp
jg
mov
cld
mov
xchg
mov
xor
repnz
mov
push
mov
xor
popa
in
scas
xor
icebp
enter
outsb
rorl
pop
push
stos
movsl
cmp
dec
rorl
push
movsb
dec
jmp
add
adc
in
ljmp
add
lahf
ret
cltd
pop
lods
out
mov
repnz
xor
push
pusha
dec
add
repnz
rol
add
mov
mov
jae
adc
and
xchg
xor
mov
xchg
arpl
into
aas
add
mov
lea
test
push
xchg
dec
filds
nop
iret
lahf
or
lret
adc
and
mov
in
xor
jae
xchg
mov
and
nop
push
scas
negb
rolb
sub
pushf
or
dec
mov
inc
inc
sbb
stc
repz
js
in
mov
or
jo
lret
iret
lahf
aas
jg
adc
out
add
jno
call
adc
mov
add
loopne
xor
mov
pop
add
repz
lahf
hlt
mov
repz
sub
loopne
je
mov
or
popa
add
jg
sub
mov
in
loope
in
ja
icebp
stos
int3
int
cmp
push
vmovntdq
sbb
jns
jb
rclb
dec
mov
cmpb
mov
outsl
in
icebp
jmp
nop
adc
jle
loopne
add
sbb
call
outsb
call
ss
test
call
repz
out
sbb
xor
loopne
int3
xchg
in
inc
mov
jg
cld
mov
push
mov
xchg
into
pusha
pop
inc
pusha
dec
inc
add
loop
mov
and
ja
repz
lret
out
mov
jns
test
or
cmp
adc
jp
pop
insl
cld
stc
adc
mov
lcall
jg
push
pop
xor
pop
pop
mov
gs
orb
scas
lock
jle
dec
xchg
cmovs
mov
cs
rol
xchg
iret
shrb
scas
inc
inc
inc
or
add
adc
add
push
lods
push
jns
cs
enter
dec
iret
mov
out
or
rol
xchg
bswap
jae
pop
add
or
push
fisubrs
in
mov
jo
aaa
ss
mov
lds
cmp
mov
sub
inc
pop
push
lcall
dec
cs
adc
std
inc
xor
loopne
push
out
rcrl
pop
inc
rolb
ljmp
nop
iret
rclb
fcomp
stos
daa
mov
pop
inc
pop
cmp
xor
psrld
lock
call
sub
sbb
dec
adc
mov
fsubrl
in
addr16
movntps
adc
gs
fcoml
ficoms
dec
adcl
jmp
scas
lret
mov
outsl
or
in
scas
mov
icebp
pop
neg
mov
test
scas
mov
in
pop
pop
cmp
sbb
in
mov
aad
lret
test
hlt
lea
add
jb
jb
pop
bound
cli
imul
mov
scas
decb
ss
rcrb
mov
loope
iret
stos
pushf
stos
add
sbb
mov
pop
repnz
pop
mov
cld
stc
adc
mov
jnp
insb
ja
aas
jg
notl
lods
xor
cmp
dec
push
jmp
call
adcb
xorb
push
fs
mov
mov
imul
add
dec
mov
add
xor
pop
jns
mov
insl
aaa
flds
push
xchg
xor
inc
lret
outsl
into
and
in
and
out
nop
push
repnz
xchg
mov
xchg
or
iret
inc
cmpsl
and
dec
decl
mov
jno
cld
cld
outsb
mov
lea
mov
cld
cld
stc
add
movsl
ja
rcll
push
and
mov
cltd
dec
ficoms
loope
mov
pop
pop
adc
sub
outsb
shrb
inc
inc
lahf
xlat
lods
outsb
adc
xchg
push
pop
lods
sahf
in
test
arpl
dec
jg
jb
mov
shrl
fidivs
add
in
xchg
xchg
or
sub
subl
jns
stos
xchg
xor
pop
cmp
stc
pusha
mov
out
pushf
cmp
stc
repz
mov
mov
add
adc
adc
or
jg
dec
lea
int
mov
test
sub
dec
jge
rclb
push
mov
xor
fstpt
je
ret
daa
pop
adc
pop
mov
or
bound
mov
cld
rolb
jecxz
xor
pop
inc
pop
fisubrs
in
or
iret
sbb
pop
jmp
pop
ljmp
fwait
cld
and
mov
std
pop
shll
lds
test
insb
addb
or
das
xor
iret
cmovns
mov
rorb
repz
gs
sbb
pop
jbe
mov
pop
int
lods
mov
cld
shrl
into
sbb
sub
push
pop
aam
xchg
test
cmp
dec
push
dec
and
addr16
xchg
jg
cld
dec
cs
inc
or
ds
adc
aas
xor
mov
adc
lods
mov
dec
scas
iret
ja
mov
cmp
and
test
das
loopne
xor
and
lock
ret
int3
jmp
aas
in
pop
out
outsb
xor
aam
or
or
arpl
inc
loopne
fistpl
stos
dec
mov
add
test
outsb
std
mov
iret
jg
nop
mov
das
push
fmulp
shlb
inc
sbb
or
cmp
iret
xor
out
cmpsb
sarb
push
add
clc
shl
jecxz
mov
xchg
sub
cmp
stc
mov
hlt
sahf
je
outsl
cmpb
dec
and
imul
mov
sbbb
mov
loopne
in
xchg
int3
int
inc
ja
loopne
insb
pop
push
xor
dec
push
scas
and
pop
dec
adc
cld
sbb
rcrb
mov
push
adc
xchg
mov
sub
xor
repnz
es
xor
aam
out
iret
imul
fwait
das
ror
aam
out
and
sub
or
sub
xchg
nopl
jp
inc
jae
jle
jl
mov
xor
jb
xchg
aas
jg
out
mov
mov
cmp
dec
call
sbb
stc
repz
pop
test
sub
daa
and
jno
xor
daa
cmc
xchg
xchg
lahf
aas
adc
jge
in
in
stos
pushf
inc
aad
mov
ja
xor
xor
or
sub
shll
jns
and
fisubrs
mov
in
pusha
shlb
lret
sub
out
out
scas
jbe,pn
hlt
daa
es
lock
jae
dec
xchg
adc
mov
mov
add
dec
mov
inc
pop
xchg
sub
and
jg
cld
mov
cmc
sahf
xchg
mov
jg
and
inc
rcrb
ss
out
lahf
inc
inc
or
sbb
sub
mov
stc
mov
xchg
stc
add
sbb
dec
or
push
pop
jg,pt
dec
lcall
lcall
jl
mov
jl
lahf
aas
jg
pop
fcoms
movsb
addr16
and
in
jae
repz
stc
repz
lds
sarl
xchg
das
add
mov
bound
dec
mov
out
and
push
inc
inc
lahf
cli
in
xor
cwtl
xchg
sub
push
mov
mov
sbb
xor
mov
sub
mov
cmp
mov
mov
inc
xchg
push
jmp
mov
cmp
pop
mov
jg
sub
mov
movswl
mov
lods
in
loop
mov
push
aam
jl
pop
mov
mov
mov
mov
das
test
push
insl
pop
push
push
lret
inc
scas
mov
mov
jl
pop
mov
push
dec
mov
mov
aam
nop
pop
mov
mov
pop
adc
and
repz
jne
xchg
mov
jns
sub
push
lret
sbb
pop
mov
mov
pop
test
mov
xor
mov
cld
stc
repz
out
shlb
int
sbb
xor
jg,pt
ret
inc
push
xor
jp
arpl
jb
stc
repz
pop
sub
orl
aas
jg
cld
fprem
mov
clc
add
in
xchg
lahf
in
cmp
ss
sub
divl
adc
ss
or
cmp
fcmovbe
or
out
out
jg
cld
stc
pop
insl
or
loop
lods
inc
xchg
imul
xor
sbbl
mov
stc
mov
mov
cmp
mov
lret
lea
mov
iret
gs
adc
loope
jne
fwait
cld
stc
repz
cmp
jp
lret
mov
xor
and
adc
rorl
scas
mov
mov
fists
dec
shlb
andb
dec
inc
dec
xor
sub
jne
mov
cld
adc
dec
repnz
outsb
and
sub
cmp
iret
wbinvd
sbb
jmp
cmp
jne
repz
mov
movb
out
scas
pop
push
out
mov
push
jecxz
mov
out
daa
pushf
jno
jl
dec
mov
jle
loopne,pn
cmpsb
xchg
push
xchg
mov
push
out
cmp
dec
out
inc
sbb
pop
cmpb
les
fstl
xor
sub
imul
xor
fbld
jg
hlt
in
xchg
and
fisttpl
aad
jb
cld
add
loopne
ja
xlat
fiaddl
jl
dec
adc
in
insl
cld
mov
cmc
mov
cli
mov
or
rcll
xchg
repnz
sub
dec
imul
es
pop
jo
iret
inc
bswap
inc
inc
mov
mov
mov
iret
xchg
dec
mov
pushf
sbb
xor
cmp
cmp
call
sbb
into
xor
sub
in
lahf
inc
mov
lods
lock
shll
pop
or
push
or
mov
and
sbb
jns
inc
cs
add
dec
pop
sarb
stc
stc
repz
mov
or
sub
xor
iret
jae
sub
int3
iret
cmpsl
decb
loop
add
rcll
psrad
pop
xor
in
jnp
jnp
lods
or
jg
xchg
repnz
lea
push
pop
push
xorb
adc
andb
lock
xor
sub
outsb
movsb
sub
hlt
jo
inc
lahf
aas
jg
test
test
jle
mov
mov
jmp
mov
shlb
mov
stos
cltd
and
inc
jle
cld
ret
enter
inc
inc
fwait
aad
test
lret
or
out
cwtl
scas
mov
repz
jle
cmp
loop
xor
fs
jle
cld
or
fiaddl
xchg
mov
bound
sub
mov
cmpb
lahf
sbb
adcb
in
mov
incb
cmpl
mov
test
imul
mov
mov
neg
mov
xchg
addr16
mov
repnz
sahf
cmpsl
xchg
mov
mov
mov
aas
mov
add
inc
mov
out
lahf
mov
mov
sbb
push
repz
push
xchg
imul
jle
cld
stc
gs
push
aas
std
push
lcall
mull
inc
and
mov
test
in
push
adc
jl
dec
sub
aaa
add
popf
push
pop
pop
jle
jle
mov
mov
hlt
dec
and
lock
inc
daa
dec
push
outsb
movsb
dec
jo
fidivrs
push
sub
dec
dec
jo
push
scas
dec
aas
mov
lahf
push
ret
cltd
xor
or
mov
outsl
dec
pusha
iret
or
jle
add
mov
add
dec
cli
dec
dec
inc
stc
into
and
dec
rorb
out
cmpsl
xchg
arpl
cmp
in
daa
dec
sbbl
jo
dec
mov
inc
iret
lret
stos
adc
decl
sbb
jmp
shlb
addb
lret
dec
incb
adc
scas
dec
sub
add
out
lds
test
mov
in
sbb
mov
or
add
cmpsb
and
mov
ds
cmp
call
xchg
out
mov
jg
and
orl
inc
and
adc
xchg
dec
das
dec
imul
scas
pop
mov
mov
sahf
in
mov
cmp
dec
lahf
xchg
iret
mov
dec
icebp
mov
add
lahf
push
test
fidivs
xchg
pop
push
mov
addb
rorb
inc
popf
dec
xchg
sar
enter
xor
cs
loopne
scas
pop
dec
pop
lret
add
scas
outsb
call
mov
loope
and
mov
xor
scas
adc
jo
dec
lahf
pusha
stc
and
dec
sbb
mov
outsl
ret
je
pop
iret
dec
and
cmp
xchg
outsl
fists
loopne
dec
das
dec
rolb
rcrb
dec
dec
jg
add
dec
dec
adc
jp
push
dec
subl
sub
mov
es
inc
dec
loopne
dec
mov
xor
ror
dec
pushfw
shlb
outsl
jne
dec
adc
add
dec
xor
decl
daa
pusha
aas
dec
dec
or
dec
das
dec
mov
dec
loopne
dec
scas
sahf
adcb
leave
inc
call
add
cmp
add
pop
adcl
cmp
fidivs
lret
sub
dec
rolb
pushf
rolb
dec
aas
dec
rol
xor
add
loopne
ds
dec
decl
daa
lock
dec
pop
data16
cmp
std
movmskps
repnz
xchg
jge
mov
adc
sub
mov
add
nop
sub
loope
arpl
in
fidivs
pop
enter
add
bound
les
ja
outsl
dec
xchg
or
jnp
jb
repz
mov
mov
pop
push
ret
cld
ret
jle
sbb
sbb
int3
or
stc
nop
faddp
cwtl
in
cs
inc
iret
aam
dec
jb
sbb
jp
out
fwait
pop
aam
pop
jecxz
xchg
mov
mov
pop
mov
aaa
add
dec
or
repnz
aam
fimuls
popf
in
addr16
lret
iret
scas
xor
mov
popf
lfs
or
jb
into
adc
cld
leave
mov
lahf
aas
sbb
fsubs
test
gs
mov
repnz
outsl
aad
test
sub
lret
jle
ljmp
dec
push
fmul
sub
cltd
leave
pop
das
fcmovnb
inc
sub
add
icebp
or
into
pop
out
mov
out
ja
jmp
mov
push
or
xchg
xorb
les
or
fimull
repz
lahf
imulb
pop
pushl
sbb
or
cwtl
adc
ficompl
lahf
aas
mov
mov
and
out
or
sub
std
cli
out
push
fdivrp
jb
xchg
add
inc
xchg
addr16
mov
jg
pop
jns
xchg
mov
stc
xor
into
adc
fnstsw
xchg
push
out
mov
sbb
adc
push
pop
dec
mov
add
lcall
inc
pop
lcall
in
push
add
cmpsb
add
and
cmp
adc
jle
pop
in
outsl
lret
mov
out
push
mull
push
mov
mov
nop
jge
jge
jp
repnz
inc
repnz
push
dec
cmpsb
inc
ss
adc
lret
pop
movsb
xor
shr
icebp
stc
stc
repz
push
orl
add
adc
in
scas
jg,pn
cld
stc
addb
ret
into
dec
icebp
mov
xor
fstpt
and
add
rolb
ds
in
aaa
in
dec
fcoml
adc
pop
mov
stc
mov
cmp
xchg
pop
push
popa
pop
fidivrl
pop
sub
in
iret
pushf
fistpl
mov
ss
cs
xchg
inc
pushl
add
es
or
cmp
pushl
push
rclb
aas
aas
inc
adcb
mov
adc
push
or
outsl
xor
inc
add
inc
xor
add
out
add
cmp
cmp
ret
das
push
mov
push
pop
jns
shrb
inc
xchg
int3
in
pop
inc
fbstp
clc
dec
xchg
outsb
imul
mov
mov
lret
out
rorb
fisttpl
ret
sahf
ret
clc
in
hlt
sub
pop
pop
mov
push
pop
push
repz
gs
scas
lcall
iret
lahf
aas
divl
movsl
std
icebp
and
and
sub
mov
incb
adc
outsl
dec
add
sbb
adc
stc
in
popa
inc
xchg
push
fiaddl
ffree
mov
jl
sarb
jle
lock
mov
mov
and
pushl
dec
pop
fisubrs
push
mov
lock
mov
test
into
imul
xchg
rorb
call
repnz
lret
bound
mov
lods
dec
add
loop
pxor
cmpsl
sub
pop
cmp
aaa
mov
and
inc
mov
mov
lods
pop
cmp
mov
mov
lods
scas
lods
mov
mov
xor
int3
lods
outsl
lods
xchg
add
xchg
jle
outsl
cwtl
loope
lods
das
cmp
jecxz
lods
aas
lods
das
rdpmc
scas
int3
lods
shrd
push
lret
iret
jecxz
sbb
mov
stc
xor
push
lods
xchg
int3
clc
dec
lods
mov
lods
das
lods
data16
popa
jg
mov
pop
fildll
lods
shrd
jne
out
cs
aad
sub
lods
shrd
mov
test
lcall
pop
lods
scas
pop
cltd
icebp
into
xor
cmp
lods
pop
mov
mov
bound
lret
test
pop
lods
ret
sbb
dec
lods
outsl
pop
stos
xchg
xor
inc
jle
adc
aad
in
xor
mov
push
rcrb
out
test
jae
lods
popa
repnz
sahf
testl
pop
data16
lods
fildll
lods
outsl
lods
jno
fs
pop
cwtl
loope
cwtl
lods
jg
sbb
cmp
lods
iret
lea
test
int3
sbbb
push
pop
jns
xor
dec
aas
shl
pop
mov
iret
test
cmp
sub
dec
xchg
ja
mov
aas
movsb
ljmp
push
add
rorb
jo
xor
lock
leave
sbb
cmc
dec
adc
popf
adc
sbb
fwait
mov
cmpsb
push
dec
shl
lret
pop
dec
inc
lods
lret
xchg
dec
jmp
jmp
add
dec
xor
cmp
mov
insl
insb
xor
rep
sbb
and
cld
stc
and
mov
repnz
das
add
jecxz
inc
pop
jle
ds
dec
pop
and
sqrtps
movsl
rolb
push
stos
cmpsl
add
add
adcb
push
inc
jle
sub
cmp
add
aad
out
jo
mov
sub
adc
inc
or
aas
jg
outsb
xor
xor
addr16
add
cs
aas
ret
push
popa
mov
pop
ficompl
repnz
icebp
dec
bsr
outsb
cld
fdivr
push
pop
test
ja
and
iret
lahf
aas
jg
or
popf
mov
pushfw
or
and
mov
inc
adcb
dec
add
mov
cmp
test
lret
bswap
jp
mov
mov
add
iret
or
fistpll
xchg
test
sbb
sub
sbb
stos
push
repnz
pop
das
jbe
or
es
sarl
pop
inc
sub
jle
stc
stc
repz
mov
stos
in
mov
dec
xchg
xchg
inc
cmp
scas
addr16
cmp
ljmp
fdivrp
sbb
push
pop
lahf
push
pop
cmp
xchg
ja
pop
pop
push
jmp
int3
pop
push
das
mov
inc
pusha
jns
and
and
and
mov
arpl
test
add
xor
mov
les
nop
popf
or
in
lock
pop
inc
stc
cld
stc
xchg
jl
fistps
lahf
gs
mov
xchg
or
js
pop
adc
push
add
pop
popa
pop
pusha
cmp
jae
jnp
out
das
rcll
ds
add
mov
push
outsb
pop
or
in
push
enter
aad
repnz
stc
and
jb
xchg
adcb
xchg
mov
mov
out
aas
mov
cmpsb
sbb
push
loopne
mov
mov
and
push
movl
push
mov
outsb
call
lret
std
push
outsl
sbb
inc
and
and
pop
jg
mov
xchg
jg
cwtl
ret
mov
je
add
repz
cmc
pmulhw
mov
sub
dec
popa
push
sbb
mov
mov
xchg
iret
lahf
pop
add
xchg
bound
iret
scas
and
icebp
lock
mulb
enter
jg
jl
in
notl
sbb
push
sbb
mov
sub
jmp
arpl
addr16
mov
daa
adc
push
movsb
lock
test
add
sarl
aas
stc
jne
out
imul
fistps
mull
fwait
and
and
lret
icebp
iret
adc
add
mov
repnz
xor
outsb
xor
sub
sbbb
mov
outsb
lds
jb
setbe
jns
cmp
cli
cmp
pop
cmp
lea
xchg
jo
jl
cld
push
or
into
xchg
int
cmp
xchg
jo
mov
xchg
push
fimuls
movsb
stos
es
mov
xlat
mov
arpl
push
adcb
add
sbb
xor
leave
dec
adc
movhps
jns
stos
testl
fisubs
dec
sub
sahf
ret
sbb
js
mov
mov
enter
mov
mov
inc
mov
push
pop
or
ret
sqrtps
andb
shl
pop
mov
pop
repnz
mov
add
xchg
add
mov
in
subl
das
jb
outsl
and
inc
sub
lock
fnsave
add
adc
mov
cmpsl
mov
jg
mov
lahf
pop
sarb
or
cld
stc
cmpsl
lods
lds
dec
fisubs
mov
sbb
inc
decb
jl
mov
mov
outsb
inc
loop
mov
scas
inc
data16
push
fsubp
in
push
adc
int3
and
cs
test
jo
enter
cmp
jno
test
and
jg
fidivrl
xchg
outsb
xor
jnp
lods
mov
or
popa
mov
movsb
dec
popf
jo
mov
inc
jg
loopne
out
sub
jb
fldt
idiv
imul
sub
imul
mov
repnz
clc
push
clc
in
adc
xor
pushf
popf
in
xchg
ja
ds
in
push
jns
xchg
jge
fldl
cli
repnz
lock
add
fwait
inc
dec
pop
out
xor
lret
mov
into
cmp
shlb
pop
ror
cmpsl
dec
jl
je
inc
movsb
mov
jb
xor
jg
mov
xchg
mov
fldcw
sub
es
xchg
xchg
add
mov
jne
sub
arpl
pop
add
sub
stc
repz
cld
daa
push
out
add
mov
jge
loopne
adcb
pop
add
pushf
mov
movsb
fcmovb
jb
popf
lock
jl
sarl
add
or
pusha
cltd
ret
mov
cld
fsts
cmp
mov
dec
jle
data16
bound
fdivrl
jle
orb
mov
les
cmpsl
arpl
and
outsl
mov
and
stc
xor
jecxz
outsl
popa
cmp
dec
les
mov
xor
or
xor
aas
sub
sbbl
jno
in
sub
fistpll
in
mov
es
jg
aas
mov
pop
xlat
add
leave
pop
and
inc
jl
adc
cmp
xor
jmp
pop
or
add
mov
movsl
jle
pop
sub
or
lock
mov
jg
shrl
nopl
fisubs
imul
mov
adc
sub
andb
ret
mov
test
cmp
test
data16
or
pop
lods
fldl
setge
jg
pusha
es
xchg
lock
cmp
sahf
fprem1
mov
pop
push
aad
cltd
and
scas
cmpl
lock
cs
daa
insl
cltd
cwtl
jne
and
mov
iret
aas
jne
jg
xor
dec
inc
dec
xchg
xor
cld
stc
repz
push
and
mov
mov
or
sahf
or
fdivr
sub
cld
addr16
cmp
add
add
lret
sub
jg
sub
data16
jg
pop
shl
pop
pop
mov
and
ret
popf
cltd
lock
std
movsb
push
jl
mov
pop
je
stos
cmpsb
cli
decb
outsb
dec
sbb
out
mov
data16
jg
jo
xlat
repz
inc
mov
imul
mov
cs
cld
stc
repz
arpl
call
cltd
xchg
add
std
inc
mov
lret
out
xor
lock
fimull
lret
test
stc
repz
subb
sbb
mov
xor
rcrb
out
dec
and
pop
dec
jle
js
pop
test
out
xor
push
jg
mov
pop
sbb
adc
fidivrs
aad
fistps
adc
jle
enter
xlat
fimull
inc
inc
jg,pt
in
insl
daa
cmc
cs
and
lock
dec
jge
pop
xchg
cltd
and
aas
jg
cld
dec
push
paddusw
pop
ja
loop
sbb
mov
xchg
xchg
cltd
and
lahf
cwtl
and
mov
popf
lock
mov
notl
cs
mov
adc
lahf
pop
pop
sahf
mov
iret
stc
jge
mov
in
or
cmp
decl
mov
add
and
inc
lods
popa
cld
dec
jg
cld
stc
mov
inc
sahf
inc
rcrb
ss
inc
or
sbbl
jg
pop
imul
nop
iret
nop
xchg
subb
outsl
sub
sbb
and
mov
setp
or
sub
repnz
dec
lcall
pop
xchg
pop
sub
mov
mov
fsubrs
cwtl
or
int3
add
jns
sbb
nop
repnz
adc
adc
test
sbb
mov
adc
das
fiadds
mov
push
pop
inc
stc
xchg
icebp
es
repz
cltd
inc
scas
call
cmp
nop
mov
out
das
out
dec
or
insl
lret
mov
loop
cld
stc
xor
and
fucomp
add
sahf
imul
push
xor
add
stc
sahf
roll
adc
add
outsl
lock
cld
adc
addb
mov
rcrb
outsb
es
daa
test
mov
dec
lock
arpl
scas
leave
xchg
push
pop
jns
sub
cmpsl
test
push
push
push
pop
push
pop
jns
clc
aam
fldl
xchg
cltd
and
stc
nop
out
or
mov
in
xor
stc
xchg
ds
mov
add
push
out
int3
add
outsl
mov
pop
dec
mov
inc
sub
and
pushl
mov
call
mov
jno
movsl
test
push
ficomps
cmpsl
push
adc
je
movsb
nop
sbb
lahf
inc
aaa
adc
repz
mov
icebp
test
rorb
lahf
das
out
int3
add
outsl
jno
xchg
mov
add
sub
scas
dec
push
js
cld
rorl
fisttpl
or
push
adc
loopne
ja
setno
cmp
ror
sub
pop
adc
or
and
push
ret
jns
imul
jbe
cmp
imul
in
out
outsb
outsl
clc
adc
es
ret
mov
inc
ret
lea
mov
push
mov
pusha
lock
mov
xchg
push
and
rol
repnz
bound
adc
outsb
jle
iret
das
inc
shl
add
cmpsb
je
or
pop
ja
sbb
lock
jg
loopne
jns
xchg
loope
lea
ret
imul
pop
lock
and
cld
stc
and
fistpll
in
sbb
mov
movsl
dec
dec
hlt
mov
cld
push
xchg
and
jae
inc
loop
paddd
cmpl
xor
jns
in
mov
out
pusha
enter
push
fimull
xchg
inc
outsb
pusha
pop
jns
fstp
jmp
ret
addr16
jl
cmpb
imul
js
jne
scas
in
shlb
fidivs
lock
mov
adc
out
das
sub
lods
sub
xor
mov
outsb
cmp
mov
out
std
cmpsl
jl
aas
aas
xor
cs
add
fisttpll
inc
xchg
adc
jmp
daa
int
inc
cmp
out
xchg
aas
push
fdivrl
add
mov
orb
mov
xchg
int3
rorb
mov
mov
mov
cmpsb
pop
push
scas
pop
and
xchg
addr16
mov
xchg
inc
xlat
rcll
outsl
add
push
or
dec
lahf
scas
fdivl
enter
pop
mov
mov
xchg
dec
fs
fdivrl
adc
and
pop
fmull
adc
mov
adc
fdivrl
nop
jge
mov
and
xor
bound
dec
incb
ret
pop
pavgb
loopne
add
cmc
and
xor
jnp
fildll
cmp
adc
mov
enter
in
shrb
jb
push
fs
mov
lahf
cs
pop
xor
sarb
outsl
inc
xchg
gs
fmull
inc
lcall
xchg
mov
andl
stc
fcompl
mov
andl
jne
adc
xor
mov
and
add
fdiv
jle
shl
outsl
mov
gs
nop
sahf
fcoml
fiadds
addl
iret
fsubrl
mov
dec
dec
paddusb
inc
adc
adc
lahf
fcoml
adc
iret
fdivrl
enter
fcompl
test
mov
push
int3
add
out
cs
dec
rorl
lret
lss
fs
das
mov
cmp
outsl
fsubrl
dec
push
xchg
add
or
mov
mov
scas
fdivl
push
inc
jl
dec
pop
lods
adcl
cmovno
fdivrl
fcompl
dec
fs
lahf
fcompl
jmp
fcompl
xchg
enter
and
fsubrl
aas
inc
fs
pop
inc
cmp
jge
push
fs
out
push
inc
movsl
mov
push
cmc
out
pop
jle
mov
imul
nop
setns
sti
repnz
sub
jg
rolb
sbb
mov
inc
mov
mov
roll
push
je
movb
cmp
mov
sbb
pop
fs
clc
aas
pop
insl
mov
xchg
test
jp
mov
and
xchg
mov
mov
jecxz
sub
stc
in
inc
push
sbb
je
pushf
adc
ret
mov
push
dec
and
add
inc
and
cmp
push
xchg
add
mov
fisubrl
or
inc
mov
xor
imul
sbb
adc
ss
gs
lea
push
mov
mov
and
sti
xchg
rorb
add
push
es
inc
ret
adc
sbb
xlat
sub
nop
xchg
cmp
or
leave
jge
in
sbb
push
adc
push
add
call
out
sbb
dec
dec
das
and
sub
iret
mov
sbb
add
cmpsb
xor
push
lahf
ret
sbb
popf
idivb
ret
into
nop
sbb
inc
push
pop
add
in
loope
mov
lds
es
pop
call
mov
orl
cwtl
rolb
in
sub
adc
or
mov
fldt
cmc
data16
inc
repz
sub
mov
or
adc
and
clc
ja
or
cmpsb
std
mov
cmp
cltd
leave
adc
and
outsb
pop
xchg
mov
cmpsb
ucomiss
out
or
int
lret
insl
sbb
leave
faddl
adc
pop
xchg
add
mov
mov
popl
adc
mov
mov
gs
into
rcrb
and
nop
stc
sbb
test
mov
rorl
or
mov
gs
incb
test
arpl
sub
push
push
mov
inc
mov
cwtl
cmpb
push
inc
pop
xchg
sbb
sarb
jo
and
sub
ss
add
dec
or
sbb
xor
jbe
into
pop
pusha
test
nop
nop
sbb
xor
or
test
shll
jns
adc
mov
push
and
mov
push
add
rolb
sbb
xchg
add
jl
lea
sub
movb
dec
xchg
sbb
add
xor
and
sub
xchg
add
mov
sub
mov
cmp
xor
adc
call
mov
unpckhps
inc
push
inc
popa
sbb
sbb
leave
insb
cwtl
mov
jb
add
addl
dec
mov
sar
adc
sarl
addl
enter
or
repnz
insb
sub
sub
scas
mov
adc
fiadds
mov
sbb
sti
mov
xor
jecxz
pop
inc
add
sbb
inc
pop
outsl
xchg
xor
or
sub
push
jnp
mov
and
and
push
roll
mov
es
or
xchg
stc
inc
mov
cmp
xchg
inc
pop
jb
arpl
fcomi
mov
out
cmc
add
out
inc
fistpl
push
dec
adc
pop
pop
leave
add
aaa
xorl
xchg
ret
sbb
fnstcw
mov
mov
jo
sub
add
cmc
imul
cli
sbb
mov
adc
leave
push
pop
roll
xor
push
cmp
loop
nop
xlat
adc
sub
or
adc
fsubp
in
xchg
or
rcl
ds
adc
movb
dec
push
cs
nop
push
js
push
call
xchg
mov
movsl
data16
stos
stc
push
hlt
sbb
mov
sbb
inc
adc
mov
test
mov
and
aaa
push
mov
or
mov
aam
sbb
mov
rol
leave
mov
fucompp
rcrl
les
out
mov
inc
xchg
adc
ret
inc
adc
dec
xor
xchg
lahf
xor
push
sbb
jp
mov
aaa
popf
xchg
nop
sahf
insl
outsb
leave
sub
and
or
dec
xor
movsb
or
jnp
add
movsl
push
imul
xlat
dec
inc
xchg
push
mov
pop
mov
cmc
xor
push
sbbb
jg
sbb
cmp
jecxz
push
mov
rcl
fiaddl
xor
mov
push
cmp
mov
mov
cmpsl
or
ss
pushf
cs
xchg
push
addr16
push
mov
cmpsb
cld
inc
movsb
gs
dec
enter
shrl
add
adc
sbb
sub
mov
mov
push
and
sbb
rolb
scas
push
pop
dec
ret
ret
xchg
cmp
push
ficoms
jo
adc
ret
jno
xor
insl
pop
enter
test
or
adc
mov
pop
test
inc
lock
outsl
push
mov
imul
inc
stos
sti
decb
cltd
cmpsb
incl
shrb
ret
fistl
xor
inc
xor
jb
jae
mov
and
ficoml
push
icebp
movsb
arpl
call
xor
sbb
enter
rcl
mov
hlt
push
mov
xor
and
jmp
push
mov
push
jmp
lods
in
inc
popf
and
jg
sbb
aad
mov
pop
push
dec
roll
sarb
punpcklwd
cmc
xor
xchg
scas
or
aam
and
lds
addb
adc
or
push
xor
leave
aam
push
cmp
ret
negb
dec
pop
sub
push
lods
mov
xchg
jno
sbb
repnz
sbb
or
push
cmp
xchg
pop
push
mov
ret
xor
push
call
add
or
and
push
leave
pop
sbb
inc
aad
div
clc
adc
cmp
out
in
les
fadds
in
loop
add
cmp
imul
jl
out
or
pushf
push
loopne
sbb
or
pop
push
and
enter
and
int3
cmc
push
mov
pop
inc
xchg
icebp
add
imul
or
subl
xchg
and
int3
icebp
loopne
adc
mov
push
mov
or
dec
inc
push
mov
lret
popf
rolb
bound
js
cmp
and
add
mov
aas
push
and
cmp
test
movl
les
sbb
xchg
mov
xchg
xchg
xlat
bound
adc
aam
cmp
xchg
pop
sbb
inc
or
fcoms
mov
sub
sbb
push
es
jmp
cmp
int3
sbb
sbb
lahf
sbb
pop
jp
pusha
and
adc
inc
lock
mov
adc
fadds
mov
mov
mov
push
in
filds
cmc
aad
or
xchg
shlb
jo
or
jo
test
fmuls
push
rolb
movsl
and
jp
lret
push
mov
ss
subl
cmpsb
fimull
mov
outsb
xor
inc
push
or
mov
or
inc
sbb
jnp
pop
push
and
mov
movsb
ljmp
mov
rorl
cmpxchg
cmp
orl
sbb
xor
mov
and
xor
or
or
into
adc
das
fcomps
aaa
shlb
pusha
sbb
mov
cmpsb
mov
loopne
push
movntps
cld
lock
add
xchg
leave
rolb
sub
mov
jmp
push
mov
jne
xor
cmp
rorb
push
pop
push
pushf
or
xor
pop
arpl
or
sub
add
lock
add
test
xor
fisttps
les
jbe
dec
pop
xchg
cs
and
rclb
xor
loop
or
and
in
mov
test
sub
rcr
dec
outsl
cltd
or
orl
lock
pop
shlb
mov
jmp
add
addl
dec
inc
xor
push
xchg
inc
test
push
dec
pop
cmp
pop
push
dec
add
push
xchg
ss
lahf
enter
jecxz
push
or
jbe
mov
adc
mov
mov
mov
push
push
mov
jecxz
add
fmull
or
sub
mov
xchg
xchg
invlpg
call
rcl
add
xor
add
add
push
mov
push
pop
enter
mov
push
adc
sbb
adc
stc
sbb
lea
push
andb
pop
adc
or
into
push
jle
shll
inc
lret
cmp
and
test
gs
negb
pop
mov
sub
inc
dec
out
repnz
ret
sub
xor
cmp
or
cmc
and
das
and
hlt
or
leave
sahf
pusha
mul
test
xchg
sbb
shrb
inc
aad
add
insl
mov
lock
mov
xor
xor
pop
scas
test
std
shll
jno
add
addl
cwtl
sbb
xor
jo
dec
xchg
mov
xor
pop
add
adc
pusha
and
mov
scas
shlb
jno
test
or
mov
mov
ljmp
cltd
fadds
cltd
xchg
or
sbb
inc
sarl
es
cmp
sbb
out
sub
les
mov
leave
mov
xchg
inc
push
and
imul
add
and
mov
push
test
inc
sbb
pop
setnp
movsb
xchg
inc
jmp
jp
xor
pushf
pop
xor
repnz
xor
adc
lret
mov
fwait
sub
jb
int3
lock
inc
sbb
rorb
pusha
xor
adc
les
push
pop
in
pop
adc
xor
aad
aad
or
movsb
push
pop
push
push
cmc
jge
out
dec
movsl
cmp
or
xor
sub
mov
dec
inc
jle
mov
lds
stc
add
mov
ljmp
or
fs
cmp
or
push
and
orl
push
xchg
sbb
sbb
sbb
cmpsl
mov
out
adc
mov
add
and
fidivrs
push
sbb
lock
xchg
dec
add
mov
pushf
hlt
pop
aaa
add
shlb
push
mov
mov
xchg
push
mov
in
pop
callw
and
icebp
adc
mov
lahf
fwait
xchg
pop
loope
stos
cmovp
imul
adc
add
add
filds
or
popf
lods
sub
in
xchg
shll
je
xor
inc
in
or
adc
fwait
addb
shlb
movsb
in
les
shll
and
or
jmp
call
aad
fs
push
rorl
jl
loop
rcl
icebp
or
and
push
adc
pop
inc
imul
inc
xchg
cmp
cmp
popf
ss
mov
xor
fnstsw
push
mov
add
je
and
icebp
hlt
mov
call
cmpsb
rcl
test
jb
aaa
push
ljmp
and
xchg
add
add
xchg
sub
adc
mov
sbb
frstor
xor
sub
inc
mov
dec
sbb
daa
or
add
and
push
sbb
inc
loop
xchg
sbb
ss
push
or
les
adc
push
xchg
and
nop
ret
or
lahf
jp
adc
mulb
enter
orl
push
and
sbb
test
jmp
xchg
inc
test
dec
cwtl
sbb
cld
fwait
pop
inc
mov
push
ljmp
dec
cmp
dec
jns
movb
cmp
mov
xchg
pop
or
add
rclb
pop
mov
mov
push
test
jp
into
loopne
adc
dec
rcrl
push
stos
adc
mulb
lds
xchg
sbb
pop
or
lods
add
mov
push
add
pop
cmp
adc
push
sub
jae
sub
movsbl
adc
jo
pop
add
add
pop
arpl
adcb
clc
mov
roll
loop
and
frstor
jmp
cmp
js
imul
data16
add
out
testb
mov
inc
nop
cs
cmpl
mov
shl
mov
call
xor
dec
inc
in
rorl
xor
mov
mov
cmp
fwait
js
jecxz
sbb
movsl
pop
popf
std
loope
dec
fxch
icebp
lret
pusha
jbe
mov
pop
movsl
lret
mov
imul
or
js
dec
test
lret
pop
xor
mov
addr16
arpl
dec
jnp
sub
sub
and
or
xchg
sub
inc
scas
repnz
dec
sub
scas
and
or
xchg
in
inc
dec
and
lcall
mov
pop
stc
adc
js
mov
or
js
xchg
sub
pop
xor
flds
mov
pop
add
xchg
xor
jmp
testl
xchg
dec
pushf
and
addb
mov
out
rcll
and
ss
sub
fwait
nop
std
push
aas
shlb
mov
adc
popa
subl
add
xchg
push
adc
or
push
push
mov
inc
js
lea
mov
push
push
xchg
repnz
arpl
stc
or
add
ret
mov
and
loopne
adc
frstor
mov
inc
popa
or
add
sbb
inc
pop
xchg
adcl
add
nop
aam
pop
add
or
pusha
fs
sbb
rclb
push
js
fidivrl
xchg
dec
addr16
into
cld
pusha
aam
pop
iret
mov
mov
adc
jb
cmp
push
nop
xor
inc
add
or
push
inc
pop
and
sub
xor
rclb
dec
test
out
or
jl
sbb
xchg
ret
sbb
or
or
cs
sbb
roll
int3
pop
lea
std
add
add
je
adc
movsl
or
jmp
addr16
stc
cmp
sar
sbb
and
rclb
cmpsb
or
and
jp
pop
or
rorb
psubsb
mov
rorl
fs
sbb
ret
sub
out
rcrl
push
ss
or
push
popa
les
add
dec
inc
das
mov
xor
lock
nop
pushf
scas
into
pop
iret
mov
out
or
scas
add
push
dec
ret
mov
xchg
or
mov
popl
and
ljmp
aaa
mov
dec
loop
cs
add
push
adc
std
add
popa
sbb
pushf
mov
sbb
je
rorl
push
add
or
add
ret
cmp
jbe
dec
mov
inc
add
les
dec
aas
in
shlb
sub
popa
inc
mov
repnz
add
or
sbb
xor
and
lret
mov
sarl
in
xorb
or
dec
xchg
sub
pop
psadbw
bswap
xchg
sbb
dec
cmp
test
jp
mov
ljmp
or
xchg
sbb
jb
stos
fiaddl
mov
in
add
in
test
scas
push
or
or
outsb
leave
pusha
dec
imul
je
cltd
sbb
in
or
add
mov
push
pop
scas
ja
xchg
clc
add
ret
test
fidivrs
and
inc
dec
cmp
decb
pop
mov
xor
push
dec
cmpsl
decb
adc
add
repnz
xchg
scas
mov
jb
mov
aam
push
stos
faddp
jecxz
sub
push
movsb
arpl
sub
xchg
rorl
negb
lods
push
movsb
loopne
rorl
rolb
cmp
xor
mov
sbb
cmp
shll
jl
lret
test
mov
or
sbb
icebp
add
popa
pusha
sbb
jbe
test
add
outsb
js
ficomps
nop
mov
mov
rcrb
lret
movsb
mov
loop
mov
lret
test
sahf
aad
pusha
ret
int3
lods
add
dec
outsl
loopne
push
into
cwtl
enter
sub
mov
mov
inc
sbb
pop
sbb
add
jp
cmpsl
lahf
add
adc
sub
adc
mov
mov
sbb
je
push
push
popl
rcrl
dec
jl
adc
jno
xor
adc
sbb
and
out
mov
pop
sbb
in
dec
fsubrl
pusha
sbb
sbb
jecxz
leave
push
rol
xor
int3
sbb
ds
flds
test
dec
inc
rdseed
fcoms
inc
scas
ds
add
stos
sbb
or
rcrb
xor
pop
and
movsl
mov
ret
mov
lret
inc
repz
xchg
add
nop
adc
push
mov
inc
add
call
ret
cltd
or
inc
adc
adc
out
dec
adc
rol
sbb
sbb
mov
pop
push
xchg
jno
push
jae
pop
cmpsb
das
xchg
in
in
push
jb
cmp
in
ror
adc
fiadds
pop
fisubs
daa
rorb
ljmp
mov
push
cmp
xor
add
pop
cmp
jno
or
inc
lea
adc
jp
jp
push
int
daa
mov
sahf
jb
xchg
movsb
test
cmp
call
sbb
and
in
inc
test
push
cmc
sub
sbb
mov
dec
mov
or
pop
orl
test
dec
adc
imul
xchg
pop
jge
xor
aam
enter
insl
adc
gs
mov
cmp
mov
int3
repnz
fadds
add
fs
insb
and
movsb
stc
bound
pusha
fwait
and
xchg
xor
dec
sbb
lret
sub
pop
clc
pop
add
loopne
andb
outsl
cltd
jo
sub
cmp
stc
or
imulb
xor
pop
fldcw
mov
nop
fstpl
rorb
push
mov
inc
inc
cmp
sub
or
adc
xor
jo
addl
mov
cli
adc
aam
xorb
xchg
inc
sub
cmpl
sbb
inc
or
jno
inc
ret
cmp
sbb
sub
add
outsb
pusha
dec
dec
or
xor
imul
xchg
xchg
add
xchg
mov
imul
mov
rdmsr
test
cmp
pop
mov
ret
push
adcb
and
xor
add
pop
dec
pusha
sbb
and
popa
xor
push
push
ret
sub
aad
inc
rorl
cmp
mov
inc
or
sub
adc
leave
xor
test
mov
outsl
lods
push
lods
sub
bound
aas
fprem
or
aam
stos
shll
adc
and
pop
es
fst
xor
popf
test
or
cmp
inc
cmpsl
dec
sti
out
pop
decl
add
xor
add
sbb
add
rorb
push
aaa
addr16
and
sbb
push
int3
sbb
and
jecxz
and
rcll
or
sbb
push
or
mov
mov
loopne
xlat
scas
fldcw
push
cmp
mov
pushw
adc
and
xchg
imul
imul
mov
ss
xor
dec
pop
add
cs
loope
movsb
ljmp
test
fs
push
rorb
dec
mov
adc
inc
push
lret
xchg
or
or
and
shll
add
dec
pop
mov
add
aam
mov
sti
cwtl
sbb
shrb
push
push
or
dec
sbb
test
or
mov
add
ds
ret
std
sbb
ljmp
push
or
nop
cmp
ret
pop
push
mov
lds
or
push
mov
sbb
outsb
add
cmpb
icebp
bound
mov
or
sbb
or
adc
jnp
dec
leave
push
sbb
daa
test
scas
sbb
push
jp
dec
push
push
or
and
mov
je
gs
ds
and
or
adc
sub
mov
loop
scas
jo
push
inc
sbb
push
or
loop
inc
dec
or
rcrb
je
into
lods
add
or
add
daa
mov
fmull
lret
push
ret
rol
and
insb
ret
cmp
add
ljmp
pop
es
cmpb
mov
fstl
cwtl
adc
add
arpl
decb
lds
lcall
pusha
test
lds
pop
push
xlat
mov
mov
pop
mov
push
repnz
push
inc
cmp
push
mov
jl
mov
sbb
adc
lods
sbb
or
imul
sub
test
cmp
test
aam
mov
dec
xorb
or
adcb
sbb
sbb
in
xlat
mov
addb
sbb
andb
ss
leave
mov
cmp
stos
pop
or
fidivs
js
xchg
push
jne
cmp
dec
add
loopne
enter
cmpsl
orl
iret
in
repnz
push
nop
adc
and
movsb
push
fsubrs
inc
ffree
fiaddl
nop
jp
test
lock
scas
pop
loop
mov
jmp
orb
lret
loopne
call
add
js
das
aad
and
movaps
adc
sahf
and
dec
leave
lock
lcall
int3
mov
dec
push
sbbb
add
jmp
add
in
fucomi
or
xchg
ret
loopew
dec
xlat
mov
inc
fwait
push
xchg
xchg
mov
insb
xchg
jge
sbbb
cmpsb
shrb
aam
loopne
adc
pushl
addr16
inc
sub
add
shlb
test
mov
popa
shll
push
mov
dec
lea
cmp
or
call
push
movsb
dec
or
and
xor
icebp
cli
mov
mov
add
jp
add
stos
add
inc
jne
stos
imul
xchg
and
dec
cli
sbb
movsl
rolb
xchg
sti
push
inc
and
cmp
jbe
icebp
jecxz
adc
add
inc
push
or
adc
or
adc
shr
push
mov
sbb
test
push
cmp
js
xor
mov
push
adc
dec
or
lea
mov
adc
jb
ret
add
sbb
orb
adc
jbe
xor
push
push
mov
xchg
nopl
gs
test
and
push
xor
pop
adc
popf
ret
mov
cmpsl
push
push
in
sbb
sbb
loope
pop
js
sbb
mov
das
push
popl
sub
sub
dec
push
cltd
cmp
rcl
test
cmp
cmp
sbbb
int
push
adc
cmpsb
pop
and
jle
jae
add
inc
pop
or
mov
sub
ds
add
mov
nop
lret
or
jecxz
int3
mov
pop
dec
inc
push
pushf
dec
or
outsb
mov
add
ret
mov
pop
inc
int3
mov
inc
adc
push
bound
jl
xor
aad
inc
out
test
push
dec
rorb
sbb
cmpsl
inc
inc
pop
adc
jo
xchg
sbb
mov
sbb
hlt
add
pushf
repnz
movl
mov
movsb
ss
xchg
mov
and
test
push
or
insl
pop
js
dec
inc
add
sbb
aam
ret
add
lea
sub
cmp
test
cmp
mov
sbb
fs
add
cwtl
gs
leave
push
or
stos
or
or
add
outsb
adc
adc
jle
push
jo
or
outsb
cltd
mov
fistpl
lret
add
inc
xchg
jl
pusha
add
or
sahf
mov
add
add
sbb
cli
pop
xchg
dec
je
out
jo
aam
jle
cld
add
dec
or
push
aad
push
ja
jb
pushf
sub
iret
pop
sbb
and
loop
lret
and
test
pushf
int3
sub
push
or
adc
mov
push
subb
mov
adc
in
call
pcmpeqw
inc
cwtl
xchg
inc
enter
add
mov
inc
cmp
fs
xchg
push
or
mov
cmp
testb
mov
je
pop
or
and
rcll
pop
test
mov
or
inc
push
push
stos
icebp
jno
push
lods
pop
mov
ret
xor
sub
adc
pop
scas
adcb
add
push
lcall
popaw
or
inc
test
dec
inc
pop
pop
fcompl
add
push
addb
add
cs
add
jae
or
xor
outsl
mov
xchg
push
decl
add
inc
loopne
addb
sbb
and
lods
popa
or
ss
cli
jo
xor
sbb
push
or
or
pop
addb
rclb
and
rcrb
mov
pusha
enter
xchg
push
pop
sbb
or
cld
jb
cmp
jp
or
aam
notb
addb
ret
mov
js
mov
push
mov
ret
dec
mov
adc
aas
and
les
nop
testb
jb
mov
xchg
or
sbb
aaa
sub
lock
push
or
xchg
xor
jns
jmp
or
es
and
es
mov
or
pop
or
push
adc
cmp
insl
xor
movsb
out
sbb
sbb
mov
push
loope
mov
in
ret
out
ror
aam
dec
cmp
sbbb
jb
add
mov
add
xchg
pop
divb
rcll
rcrb
xchg
add
and
ret
push
in
jmp
mov
xor
loopne
push
cmp
sbb
sub
jmp
mov
jae
gs
es
push
add
pop
sarb
loopne
rclb
sub
ret
push
sbb
mov
push
ja
sahf
rcll
insb
dec
faddp
sbb
gs
jne,pt
sahf
and
xor
dec
addl
clc
add
mov
jo
jae
lods
in
sbb
cmp
jb
lock
mov
je
pop
adc
pop
rclb
pop
js
rcrb
into
mov
cmp
cltd
jge
mov
outsb
adc
stos
add
add
insb
push
xor
add
xor
dec
pop
pop
jno
pop
adcb
enter
add
sub
mov
xchg
subb
push
or
clc
scas
add
push
dec
dec
mov
mov
popa
rorl
push
adc
xor
inc
inc
out
cmpsb
fs
sbbl
adc
pusha
dec
nop
fbld
sbb
nop
inc
dec
pop
add
lea
xor
xor
push
hlt
add
push
loope
lods
cmpsl
push
les
add
je
mov
or
popf
cmp
cmpsb
icebp
jb
push
push
xchg
sbb
adc
pop
mov
pusha
lea
inc
sub
icebp
loope
and
rcrl
mov
jne
sti
outsl
stc
jp
jno
xchg
and
add
out
cld
leave
nop
adc
inc
sbb
out
sbb
push
and
mov
push
adc
and
mov
movsb
xchg
rclb
xor
pop
add
aaa
sbb
in
mov
iret
mov
shll
mov
nop
push
push
sahf
push
cs
mov
xor
xor
pop
roll
roll
xchg
mov
sbb
cmp
pop
movsb
icebp
adc
push
roll
out
adc
roll
inc
mov
sub
push
adc
test
and
lahf
push
jp
aam
in
jg
xchg
dec
mov
xchg
push
fldcw
add
adc
xor
or
mov
mov
push
dec
cmp
out
xor
cmpsb
leave
mov
insb
shlb
arpl
jb
add
push
pop
add
jne
pop
inc
jle
hlt
jo
faddl
je
lock
push
sbb
cmp
mov
push
rcrl
pop
jl
fistps
or
rolb
push
push
pop
dec
test
sahf
and
leave
test
push
ja
dec
cld
mov
movsl
roll
cmp
jecxz
cmp
xor
les
xlat
jmp
fs
int
ror
or
xchg
add
rcll
xor
aam
repnz
and
inc
adc
jl
add
mov
lretw
mov
xchg
sbb
cmp
cmpsb
incb
cwtl
popa
sbbb
jo
xchg
sub
dec
xchg
dec
popa
inc
xor
jecxz
and
pop
pop
lods
add
leave
xchg
mov
pop
jnp
call
push
and
mov
or
arpl
push
push
mov
test
fwait
and
push
push
sbb
fdivs
adc
sbb
or
and
pop
shlb
mov
add
inc
xchg
daa
xor
stos
ret
es
dec
cmp
or
rolb
fdivr
or
mov
icebp
sbb
add
push
ds
sarl
or
into
mov
push
mov
and
adc
inc
jbe
xor
add
sub
sbb
mov
cmp
leave
frstor
pusha
add
cld
dec
jo
pop
movsl
dec
sub
lods
outsb
mov
addb
into
and
roll
pop
sub
jecxz
test
cmp
adc
inc
enter
mov
add
fcoms
loope
clc
jb
mov
fdivs
cmp
push
pop
pop
mov
ret
or
and
dec
pop
arpl
jecxz
lret
sbb
dec
lea
dec
daa
adc
fistpll
inc
and
sbb
jno
sbb
mov
adc
fstps
xchg
mov
xlat
testb
cmp
push
fbstp
test
xchg
add
es
and
dec
orb
lret
pop
xor
mov
mov
or
rclb
jmp
xchg
out
pop
imul
test
add
jp
push
subl
push
dec
fadd
lods
je
sahf
jo
cmp
sbb
sbb
movsl
incb
add
push
pop
xchg
shll
jecxz
sbb
stc
iret
or
push
sbb
jecxz
push
jp
int
rorb
ret
pushf
push
sub
and
ljmp
jno
cmp
daa
rol
add
mov
xchg
push
xchg
cmp
test
jecxz
pop
or
movsl
xor
sbb
dec
in
adc
ret
ret
xorl
lret
shrb
ss
or
clc
clc
adc
adc
and
mov
xchg
pop
sbbl
jno,pn
test
pop
mov
aam
ret
adc
dec
push
lds
mov
mov
ss
add
stos
nop
inc
jbe
and
bound
xchg
xor
jl
call
jns
mov
clc
and
dec
es
sbb
push
inc
push
pop
or
or
gs
and
mov
pop
scas
and
xchg
icebp
inc
mov
inc
mov
push
dec
mov
aam
xorl
push
fsubl
mov
loope
dec
mov
test
xchg
mov
or
xchg
test
cld
xchg
sub
cmpb
mov
dec
xorb
leave
jl
add
fimuls
adc
hlt
es
inc
sbb
add
js
ljmp
scas
add
sbb
sbb
enter
orb
pop
rclb
or
gs
sub
pop
cltd
sahf
mov
mov
adc
pop
fidivs
fiaddl
xchg
push
or
cmp
stos
dec
cltd
lcallw
test
and
push
neg
call
pushf
ljmp
sbb
and
dec
ret
incl
clc
gs
icebp
push
push
push
adc
adc
and
add
sub
push
sbb
inc
test
scas
pop
in
fldenv
push
nop
xor
add
jecxz
sbb
sbb
pop
pop
and
xchg
adc
clc
push
mov
push
xchg
xabort
out
adc
inc
lret
or
rclb
inc
sbb
xlat
add
xor
test
cmp
sbb
xchg
dec
add
rcl
pop
aam
xchg
add
sbb
and
out
and
divb
movsl
notb
shlb
leave
sub
sbbl
stc
or
pop
xlat
sub
into
dec
push
mov
cmp
orb
out
jnp
icebp
xor
push
cmpsb
outsl
jge
mul
clc
rolb
pushf
mov
cltd
or
cmpsl
adc
mov
sbb
and
inc
test
bound
mov
and
adc
push
mov
inc
push
cmp
dec
mov
add
cmp
scas
rol
sbb
pop
cmp
nop
clc
cmp
femms
jp
inc
cli
mov
inc
mov
mov
stc
push
lcall
xor
pusha
xor
outsb
in
int3
xorb
add
or
insl
lret
adc
or
rcrb
adc
lret
push
adc
lods
int3
mov
pop
test
dec
inc
pop
inc
dec
cmp
add
adcb
scas
mov
xor
push
movsb
testb
dec
dec
ret
dec
lcall
orb
and
inc
or
adc
clc
or
test
fsubs
sbb
loopne
or
adc
push
pop
cmpsb
push
lcall
cli
inc
inc
imul
xor
push
or
and
or
dec
and
bound
inc
push
xchg
pop
jbe
xor
js
push
or
out
add
sbb
test
inc
jl
shrl
dec
rclb
das
insl
out
push
push
mov
lea
jl,pn
mov
mov
rcll
stos
jl
lcall
and
add
sub
in
stos
cmp
into
popa
inc
clc
mov
xchg
in
lock
add
push
pop
lea
pop
and
xchg
adc
stc
add
mov
xchg
xor
mov
lea
imul
sub
dec
test
lea
push
and
xchg
insb
adc
xchg
repz
push
pop
xchg
sbb
cmp
add
push
dec
add
mov
pop
fcoms
pop
mov
inc
inc
mov
cmc
in
pop
ret
jge
adc
popa
mov
add
inc
push
or
cwtl
cmp
push
cltd
call
shlb
and
cmp
cmpsl
rcrb
shlb
loope
sbb
or
pop
xchg
testb
add
xchg
dec
mov
jecxz
push
dec
cmpsl
outsb
pop
mov
mov
push
out
call
add
xchg
outsb
lret
cmp
mov
inc
add
add
mov
and
mov
jne
insl
ret
rcrb
mov
push
fmull
inc
sub
and
in
push
inc
push
pcmpeqw
js
data16
call
fchs
pop
sub
push
push
std
pop
out
adc
sbb
adc
shlb
es
int3
adc
dec
xor
leave
sbb
push
rclb
nop
adc
push
test
cli
insb
dec
mull
sbb
and
fs
adc
sub
add
stc
mov
stos
adc
jo
mov
add
dec
mov
ja
push
sbb
sbb
pop
xchg
lods
jo
add
fimull
add
loopne
or
stos
sbb
mov
test
shr
add
pop
ljmp
loop
dec
pop
imul
test
cmp
add
icebp
insl
inc
jno
pop
cwtl
xor
sub
jecxz
and
mov
loopne
into
popa
push
movsb
repnz
pop
pop
mov
and
mov
sbb
mov
mov
call
cmp
push
inc
and
in
push
cmp
test
sbb
shlb
push
inc
sub
cltd
xor
cltd
adc
in
jle
scas
or
lods
xchg
cmp
xchg
cmp
scas
and
dec
cwtl
lret
adc
dec
xchg
das
pusha
adc
pop
test
sahf
push
ljmp
or
inc
dec
xor
inc
stos
adc
ficomps
or
xchg
ja
jo
jl
push
in
or
or
and
rclb
ret
pop
push
mov
mov
out
test
andb
test
aam
cmp
push
loop
adc
adc
jp
add
and
jo
cmpsl
roll
in
cmp
pop
xchg
ret
xor
fistl
fcom
add
mov
sub
roll
cmc
mov
sub
mov
rolb
into
ret
aad
xor
adc
les
loopne
loope
dec
rcl
xor
orb
or
sub
jl
aaa
pop
jp
mov
lret
pop
mov
and
push
pop
andb
push
insl
loopne
sub
adc
xor
loope
cmp
xor
xor
pusha
rol
fs
inc
mov
lods
sbb
adc
and
and
pop
call
mov
loopne
mov
mov
nop
push
mov
sub
jmp
cmp
dec
jp
pop
inc
or
push
ret
shlb
add
push
cmp
imul
call
push
imul
xlat
sub
orb
jge
jb
adc
jmp
add
pusha
insb
inc
int3
and
xchg
inc
pushfw
jae
dec
push
bound
and
int3
xor
xor
test
clc
adc
loope
mov
xor
adc
adc
scas
fs
stos
push
and
gs
ds
arpl
loopne
daa
int3
fistl
aaa
push
cmpb
leave
mov
out
mov
pop
xchg
shrl
mov
enter
clc
shl
sbb
movl
stos
xor
dec
inc
adc
mov
or
lock
jl
and
movsb
cmp
daa
repz
aas
add
xchg
sbb
push
movsb
cwtl
push
jb
lret
jmp
xchg
sbb
push
inc
jecxz
push
rcll
cmc
mov
xchg
lret
repnz
roll
int3
les
mov
enter
lds
sub
and
mov
dec
addr16
sub
jb
mov
ja
add
in
push
scas
jl
pop
gs
xchg
ss
cmp
ss
mov
and
pop
hlt
sub
adc
mov
and
dec
adcb
xor
push
push
adc
xor
ljmp
out
and
arpl
les
or
pop
sahf
fcmovnb
sub
lods
in
fs
xchg
sar
add
push
inc
addl
cmp
and
xchg
out
add
jmp
shl
cmp
arpl
dec
cltd
inc
popa
jp
add
imul
bound
xchg
jno
popa
fwait
pop
bound
test
or
jmp
jno
adc
pusha
mov
les
pop
stc
loope
dec
jns
outsl
jp
dec
das
pop
pop
mov
wbinvd
and
push
push
jmp
mov
add
adc
and
xchg
movsb
mov
xchg
mov
sub
xchg
or
or
push
xchg
popa
movsb
push
popf
sub
jo
test
add
rcl
outsb
xchg
sub
not
loop
loopne
push
fwait
jge
xchg
add
stos
mov
ljmp
lods
jae
movsb
stos
or
arpl
add
sbb
cmp
shl
add
jo
xlat
jp
daa
pusha
jo
sahf
and
orl
jl
je
lods
mov
pop
fcomps
loope
xor
es
jl
mov
ja
add
inc
add
gs
mov
inc
pop
nop
lods
sub
xor
rolb
and
loopne
orb
adc
and
pop
push
add
adcl
iret
mov
popa
in
mov
push
sub
aas
orl
negb
xchg
cli
cmp
ret
test
or
nop
test
xchg
sub
cmpl
jne
push
mov
clc
and
loope
sub
xchg
xchg
out
ret
inc
jbe
pop
adc
mov
std
inc
loop
lea
xchg
push
cs
addb
not
frstor
aam
repz
out
mov
inc
add
mov
loopne
inc
or
add
pop
adc
divb
mov
jno
cld
sub
mov
xorb
push
into
mov
mov
pop
dec
popa
inc
cmp
icebp
sub
icebp
jp
or
sub
lods
ss
fbstp
imul
add
rclb
scas
enter
jne
sbb
into
pusha
sub
jecxz
mov
sbb
enter
and
aam
movb
push
lea
mov
sub
mov
add
jecxz
xchg
mov
es
mov
fidivs
xchg
xor
dec
test
jb
mov
pop
not
rcrl
rorl
add
push
je
hlt
shl
add
mov
adc
pusha
or
sahf
adc
ljmp
lret
shr
adcb
mov
dec
faddl
adc
and
out
jp
cmp
xchg
out
adc
mov
ljmp
fsubrl
aam
dec
lock
adc
mov
es
xor
mov
cli
xchg
test
jle
lea
out
add
cmc
adc
lret
addl
sub
cmp
sbb
sub
cltd
pop
ret
dec
and
push
sbb
mov
enter
jne
insb
imul
insb
xchg
scas
adcb
push
pop
pop
clc
sbb
adc
and
adcl
adc
cmpsb
int3
xor
push
dec
add
shlb
push
add
sub
xchg
clc
cwtl
call
or
inc
aad
adc
test
push
push
push
xor
pop
adc
cld
pop
mov
mov
ljmp
ret
iret
push
test
push
or
inc
fwait
outsl
jecxz
icebp
mov
lret
insw
push
mov
rclb
stos
rcl
mov
inc
loopne
xor
icebp
roll
inc
cltd
push
push
rclb
gs
addr16
add
rolb
aam
jp
pop
adc
xor
jp
setnp
mov
mov
call
pop
shr
mov
enter
cmp
inc
rol
xor
pop
loopne
jb
rorb
stos
cmc
mov
mov
movsl
les
popf
fs
adc
in
dec
inc
loope
and
push
mov
adcl
hlt
lret
inc
cmpsb
icebp
outsb
sbb
stos
xchg
add
mov
pop
test
cmp
insl
sbb
cs
popf
sbb
rclb
mov
add
testb
or
cmp
lcall
call
push
cli
mov
popf
or
xor
punpcklwd
inc
sbb
inc
dec
push
mov
add
push
jb
inc
or
fiadds
js
lock
push
xchg
ror
into
add
dec
in
popa
mov
sbbb
mulb
rcrl
push
rolb
lahf
rcrb
push
bound
sub
gs
mov
jb
int
rcpps
jmp
lock
in
loopne
add
cmpsl
sahf
mov
push
add
xchg
cmp
mov
loop
loop
mov
ret
inc
push
pop
xchg
or
pop
loop
fadds
sub
jle
idivb
jb
cmp
push
jne
mov
xchg
aaa
sbb
xchg
xchg
test
fimull
pop
dec
jge
mov
adc
inc
lods
mov
cmp
push
cli
sti
imul
or
sub
and
sbb
dec
dec
es
and
addr16
shrb
sti
ret
jmp
xchg
push
xchg
nop
test
enter
xor
jo
or
loope
cltd
mov
adc
rclb
or
xchg
cmc
push
gs
jge
aas
dec
je
mov
hlt
pop
and
and
addr16
movsl
adc
fs
sbb
movsl
data16
rol
push
les
in
out
rcrb
pop
or
cmpsl
dec
mov
mov
cld
jecxz
mov
rcl
push
xor
or
arpl
adc
ret
cwtl
inc
inc
int
or
add
mov
mov
sbb
jo
outsb
inc
push
rcrb
jb
lods
stos
cmpsl
xorl
sbb
mov
repnz
sub
sbb
sub
add
cld
or
dec
jo
push
dec
fldenv
mov
mov
xchg
movsl
xchg
enter
mov
and
and
stos
sub
jb
mov
adc
cmp
jl
daa
push
jns
mov
xor
or
and
andl
daa
xchg
movb
or
call
mov
xor
mov
movsb
inc
add
cltd
sbb
xlat
rcrl
dec
inc
adcb
ror
cmp
outsl
add
xor
fsubl
in
add
int3
ret
insl
push
xchg
mov
jno
mov
scas
mov
xorl
mov
xchg
sbb
add
movsb
xchg
leave
ret
dec
mov
and
shl
dec
enter
pop
mov
ljmp
scas
jne
rol
mov
loope
cs
dec
and
add
add
ret
loopne
xor
sbb
dec
imul
movsb
popa
loopne
inc
cmpsl
shlb
pusha
test
sbb
das
out
jo
cli
loop
mov
and
fwait
push
fs
aam
push
ficompl
sub
enter
iret
ss
leave
int
mov
jmp
nop
movsb
sbb
je
xchg
test
gs
dec
sub
mov
adc
xor
sbbb
or
or
and
add
jo
in
rcrl
sub
push
testl
sarb
and
mov
adc
sbb
cwtl
movl
xchg
js
cmc
jg
addr16
addb
clc
and
sarb
fmul
sahf
sub
add
or
push
pusha
push
inc
dec
scas
add
add
test
jae
rorb
xchg
movsb
ret
inc
mov
push
push
xchg
push
mov
lods
divb
add
mov
sub
xor
or
or
pop
ret
mov
sub
rorl
adc
ret
add
add
inc
ror
add
xchg
lock
fcoml
lods
adc
xor
sub
ret
bound
add
xchg
adc
es
or
mov
popa
add
jl
push
sbb
dec
push
aas
add
mov
mov
pop
pop
add
cld
xchg
push
and
pop
test
add
daa
add
test
jne
push
sub
inc
jge
inc
push
push
sbb
adc
loop
js
daa
repnz
sbb
and
add
js
pop
lahf
mov
sub
dec
subl
orl
inc
imul
mov
fidivrl
mov
popa
nop
push
lock
mov
push
pop
jo
orb
scas
mov
push
dec
shlb
roll
adc
insb
orl
adc
or
and
push
outsb
or
cwtl
inc
sub
inc
enter
mov
jne
xchg
cmc
mov
rorb
lds
lcall
test
je
adc
and
ljmp
mov
testb
sub
mov
push
jnp
xchg
je
dec
test
jle
mov
add
sbb
push
xor
jb
test
mov
pop
push
iret
push
mov
enter
loope
pop
and
mov
test
dec
inc
hlt
enter
and
cmp
jmp
xchg
loopne
lret
paddb
or
test
pop
ljmp
adc
sub
lods
xchg
sub
dec
or
shl
push
lea
mov
je
lock
and
hlt
rclb
jecxz
cwtl
and
or
jp
pop
fsub
add
jo
dec
pop
dec
cs
movb
push
adcb
rol
mov
test
xor
stc
sbb
push
add
push
or
idivb
add
rcrb
or
lahf
idiv
sti
insl
sarl
movsl
mov
fcom
xlat
repz
adc
cmpsl
je
mov
adcb
adc
xlat
call
inc
mov
jp
test
js
xor
xchg
dec
dec
jo
inc
sub
add
mov
js
lcall
jecxz
shlb
adc
or
icebp
inc
call
add
xor
call
imul
lods
add
and
lods
je
dec
stos
loope
pop
sbb
add
inc
add
repnz
sub
jmp
mov
inc
cmp
cmp
mov
std
in
sub
lock
sbb
std
xchg
jno
subb
and
mov
xchg
daa
decb
mov
adc
adc
sub
or
xchg
fcoml
into
inc
movsb
ret
test
shrl
popf
test
dec
pushf
bound
call
mov
mov
adc
ljmp
push
push
and
stos
outsl
pop
push
xor
or
test
mov
lcall
fsubl
movsl
dec
or
sti
int
ret
and
fld
xor
sahf
and
adc
lea
pop
xchg
insb
aaa
pop
add
push
pusha
mov
jge
leave
push
mov
xchg
pop
inc
ret
and
sbb
sub
femms
mov
imul
shl
das
fstpt
outsl
add
jl
xchg
or
movb
mov
add
adc
in
out
mov
sbb
inc
sub
test
nop
cmp
and
stos
adc
loope
rorb
mov
or
xlat
js
push
sbb
sbb
push
cmp
cwtl
mov
xchg
add
insl
test
xchg
sub
xchg
add
xchg
ror
dec
jmp
push
mov
rolb
clc
rorb
es
mull
inc
or
es
xchg
or
sbbl
call
sarl
das
sbb
sbb
sbb
mov
outsb
loope
or
and
inc
sbb
inc
mov
popf
jl,pt
nop
loopne
pop
adc
popa
ss
aam
mov
je
icebp
inc
fmull
or
pop
or
push
mov
lock
pop
sahf
mov
add
into
mov
addr16
mov
into
js
sbb
mov
sbb
hlt
xor
mov
sbb
jno
cmp
loop
sub
add
cmp
shr
or
mov
in
out
sbb
in
and
or
sarl
mov
adc
pop
cmp
adc
xor
dec
scas
push
and
or
rcrb
pop
xor
jecxz
xchg
dec
mov
movsb
inc
arpl
sub
subb
jecxz
pop
pop
rcll
inc
sub
jbe
jnp
punpcklbw
adc
xorb
data16
sub
xrelease
test
mov
gs
aam
icebp
or
xor
push
test
jecxz
addr16
rcrl
add
inc
sub
add
xor
popa
scas
je
adc
sbb
sarl
pop
pop
negl
pushf
pop
and
pusha
mov
xchg
mov
mov
dec
cmp
test
cli
add
movsb
lods
pop
ljmp
jl
xor
adc
aas
call
leave
push
or
aam
push
fstl
pop
push
repnz
xor
push
mov
lret
pop
call
in
mov
rcrl
orl
sbb
popa
jle
xor
ret
adc
push
fmull
push
and
xchg
cmpsl
mov
xchg
test
sbb
clc
push
xchg
loopne
sbb
loope
inc
jmp
outsb
xor
addb
insl
std
xchg
jb
push
stc
mov
or
test
je
push
data16
mov
sti
or
mov
stos
push
pavgb
and
cmpsb
add
mov
mov
add
dec
inc
lret
ret
enter
imul
push
mov
jmp
or
addr16
cmp
add
mov
sbb
sahf
or
and
cmc
cmp
and
dec
mov
dec
push
push
popf
addl
adc
cmp
sub
mov
stos
xchg
pop
addr16
cwtl
shrl
lods
jae
add
or
imulb
sbb
mov
pop
dec
adc
xor
add
inc
stos
fbstp
mov
cmp
arpl
or
add
or
xor
fldl
xchg
scas
icebp
jp
out
sub
sbb
js
or
inc
and
xorl
dec
test
cmpl
cmpl
ljmp
sub
jecxz
mov
pop
cmp
mov
lcall
loopne
or
mov
dec
sbb
ljmp
jl
push
pop
iret
cmp
cmpsl
pusha
or
push
jl
or
inc
sbb
arpl
push
adc
inc
adc
aam
mov
add
and
and
dec
dec
rclb
ljmp
push
push
mov
jecxz
sbbb
mov
add
out
push
sub
add
je
add
push
push
pop
xor
in
push
push
sub
lahf
add
dec
jecxz
dec
jb
rclb
adc
dec
mov
iret
rcrl
or
adc
adcb
popf
mov
dec
aad
xchg
push
inc
hlt
loop
or
aad
jo
lret
sbb
or
and
int3
fsubl
fildl
mov
daa
or
mov
sahf
sahf
push
cltd
fs
out
loop
cmpb
inc
scas
or
js
and
and
cmp
jecxz
nop
push
add
mov
dec
or
pop
sbb
lcall
call
mov
stc
cli
outsb
cwtl
jo
out
ds
loopne
mov
ljmp
cli
lret
inc
push
arpl
or
cmp
pop
mov
loopne
cmp
dec
lret
subb
sub
and
orb
push
ljmp
or
pop
pop
sbb
inc
add
sub
scas
mov
xchg
mov
adcl
dec
dec
xchg
jno
popf
sahf
ds
push
xchg
pop
or
xor
pop
ljmp
xor
push
push
les
outsl
lret
add
sbb
negb
pop
xchg
and
xchg
add
or
mov
int3
sbb
jno
mov
ret
cmp
pop
in
sahf
adc
add
lock
add
loopne
popa
jae
jmp
les
cmp
rclb
orl
test
jb
sbb
testb
movsb
push
pusha
pop
mov
xor
je
das
daa
fmul
clc
add
xchg
jno
push
mov
push
pop
into
xor
and
inc
fs
orb
or
orl
or
push
aas
fistl
jbe
lods
add
dec
lods
dec
adc
adc
inc
pop
and
mov
cmp
xor
inc
lods
add
mov
push
mov
pop
fsubrl
in
aaa
jmp
jecxz
inc
push
or
cmpsl
and
mov
enter
hlt
aam
fs
push
pushf
add
dec
aad
scas
mov
push
inc
cmp
inc
mov
lea
fcomps
xor
lods
movsb
arpl
sub
adc
inc
cmp
xchg
call
in
aam
and
sbb
divb
test
add
andl
jp
push
cmpsl
jp
mov
add
jo
mov
lret
mov
mov
adc
cmpsb
rcrb
arpl
xchg
pop
lea
sarb
cmp
dec
aas
loop
stos
adc
fidivrl
pop
lods
inc
mov
adc
sub
mov
add
mov
pop
xchg
cmpsb
push
test
fadd
and
mov
clc
or
js
loopne
inc
push
push
inc
pop
inc
ret
or
jno
sbb
xor
or
inc
shlb
sbb
fadd
jae
mov
rorl
int3
andb
mov
in
rolb
arpl
arpl
js
or
cmc
xchg
sbb
dec
or
lret
xor
adc
adc
jno
or
add
js
xchg
ficoml
subb
cmp
les
xchg
xor
adc
div
inc
mov
push
adc
jge
or
dec
mov
cmpsl
xor
sub
cmp
test
jne
push
daa
int
pop
jecxz
mov
cmp
stos
xchg
loop
mov
loopne
dec
pop
int3
add
shlb
mov
push
daa
xor
into
test
outsl
or
nopl
sbb
sbb
xchg
push
add
sbb
ljmp
add
adc
dec
add
aam
pop
mov
push
sbb
mov
ss
mov
jo
sub
add
xchg
push
jo
cld
inc
sbb
xchg
int3
adc
faddl
mov
jnp
jl
cmp
add
or
sahf
out
xchg
popa
jo
cli
add
add
add
sbb
scas
movsb
int
inc
push
jbe
cmp
mov
sbb
mov
call
roll
push
adc
mov
nop
push
clc
incb
jg
and
shrb
rclb
jbe
mov
loopne
cs
adc
lock
fst
push
xor
sub
jo
xor
movsb
or
pusha
loopne
lret
insl
sub
push
pop
sbb
mov
xor
mov
xor
pushf
rcrb
pop
cmp
dec
inc
ss
xchg
inc
mov
push
pop
pop
sbb
jecxz
add
pop
pop
nop
dec
andb
dec
xchg
add
ret
adc
inc
xor
mov
ret
rcrb
cmpsb
test
pop
out
mov
test
out
jecxz
orb
pop
xchg
add
pusha
mov
dec
cmp
cmp
xchg
push
adc
test
adc
or
movsl
lock
pop
jno
js
mov
push
lcall
mov
popa
xchg
into
aam
out
rolb
or
or
cmpsb
adcb
pop
movb
dec
sbb
xor
lock
sbb
mov
sub
xchg
sarl
push
popa
pop
or
cmc
arpl
repnz
sbb
pushf
add
nop
mov
es
or
xor
pop
bnd
call
aas
ror
jge
cmp
sbb
addr16
pusha
flds
fs
out
ret
test
and
adc
or
loopne
dec
sub
inc
pop
shr
inc
push
xchg
jbe
push
inc
xchg
aad
push
and
mov
and
jge
call
add
push
clc
adc
sub
add
or
inc
ffree
and
sbb
push
cmp
push
stc
push
loopne
loop
cmpsb
ja
test
lret
xchg
movb
add
inc
aam
repz
lcall
int3
addr16
jmp
in
mov
or
shld
aam
mov
or
scas
sbb
popa
sbb
arpl
lret
imul
sbb
addb
cli
mov
jb
inc
add
in
push
outsb
and
loopne
xchg
push
xchg
pop
std
rcrb
xadd
std
add
mov
imul
jecxz
sbb
or
out
clc
or
add
add
push
push
cmp
xor
ljmp
push
cmp
bswap
sbb
sarl
loop
test
adc
sub
subb
mov
loop
rcl
mov
jo
cmc
xchg
and
inc
adc
or
enter
addl
dec
dec
std
arpl
int3
push
jb
lods
jo
mov
adc
adc
mov
or
loopne
or
js
xchg
add
arpl
mov
push
mov
push
mov
mov
and
ss
xor
push
jo
shrb
dec
push
pop
es
jo
pop
imul
sbb
test
mov
outsb
shlb
mov
mov
add
test
les
aam
mov
jecxz
es
xchg
or
inc
xchg
ret
adc
jmp
repnz
lea
lds
cmp
jne
adc
dec
roll
cmp
mov
sub
mov
and
push
insb
pusha
inc
lar
push
inc
orl
xchg
jecxz
push
cmp
push
and
push
mov
in
leave
fsubs
jmp
mov
dec
lahf
ds
bound
cmc
push
jge
push
sbb
sub
popa
push
dec
in
mov
or
aad
and
cmp
sbb
xchg
hlt
xchg
adc
xor
mov
sbbb
std
and
jae
add
fsub
push
push
addr16
cld
pop
aas
mov
sbb
xor
dec
push
add
out
push
scas
arpl
push
sti
push
je
mov
aam
add
loope
dec
pop
push
adc
mov
add
rolb
mov
jae
loop
sub
sub
ss
fbld
xchg
sub
add
mov
jb
mov
dec
add
pop
push
cmp
push
or
inc
aam
inc
adcb
and
dec
popf
dec
lcall
aam
enter
dec
add
ljmp
inc
cmp
push
mov
dec
and
pusha
or
jmp
inc
cmp
pop
xchg
add
xor
add
lods
or
pushf
test
and
add
cli
fcompl
or
lods
popf
jne
lods
add
adc
xor
pop
mov
movsb
mov
es
stc
push
das
popa
or
push
add
and
pop
loop
test
or
add
pop
fsub
pop
into
cwtl
and
pop
push
call
xchg
dec
imul
cmp
hlt
adc
or
into
mov
or
fwait
xchg
dec
arpl
or
xchg
pushf
cmp
jle
lods
or
inc
das
enter
sbb
js
ret
aam
dec
fiadds
mov
stos
loopne
sarb
insl
movsb
and
adc
jb
jecxz
in
adc
es
cmp
scas
js
clc
jp
xor
arpl
mov
and
jne
inc
pop
inc
sbb
push
xor
rcl
sub
jo
jge
enter
inc
test
xchg
lea
sbb
push
pusha
adc
shl
cmp
sub
sbb
and
jecxz
push
sub
push
mov
lret
stos
loopne
push
push
fiadds
ja
insb
inc
test
lret
je
and
ds
xor
adc
dec
xor
and
int3
test
mov
dec
mov
stos
jle
rdtsc
cmpsl
xchg
push
mov
in
pusha
jbe
negl
mov
rcrl
and
bound
sbb
push
or
xchg
pop
xchg
sbb
add
mov
test
sbb
add
xor
push
mov
pop
push
nop
fs
lods
test
pusha
adc
dec
call
push
adc
sbb
les
mov
pop
jl
in
cmc
lea
lock
sbb
xchg
push
or
add
mov
mov
lds
cmp
cmovs
insl
loopne
jmp
and
xchg
jl
cltd
das
jmp
cmpsb
or
or
or
leave
loopne
add
mov
add
testb
jge
test
cmpsb
jp
fdivs
imul
addl
push
dec
ficompl
ret
faddl
loopne
adc
inc
in
cmpsb
aam
mov
aam
inc
cs
in
stos
or
xor
mov
dec
inc
aaa
push
test
sub
mov
inc
mov
xchg
jne
rcrb
stos
enter
cmp
cmp
inc
dec
pop
cmp
or
lock
fiadds
xor
inc
sub
and
xchg
adc
adc
and
int
push
jmp
cmp
adc
mov
add
lret
push
dec
lret
ret
cmp
or
mov
adc
mov
lods
lea
ss
adc
xchg
xor
mov
add
lock
xor
cmp
push
xor
rolb
add
xor
leave
rcr
lcall
pop
mull
cli
push
lea
and
or
adc
xor
mov
xor
cmp
dec
mov
adc
xchg
xlat
out
fadds
mov
movb
dec
jl
pop
decl
push
push
mov
mov
push
add
dec
mov
push
pop
push
ljmp
dec
mov
and
sbb
xor
push
add
cmp
inc
pop
sti
mov
ret
mov
and
fcom
inc
jb
ja
or
push
sbb
rclb
shrb
es
fimull
cltd
mov
clc
adc
aaa
sub
adc
aam
add
mov
push
push
je
inc
daa
push
xchg
xor
xabort
js
push
incb
stos
ljmp
sbb
daa
mov
cmp
enter
push
or
lret
aad
out
icebp
js
in
fcmovb
pop
mov
movsl
sbb
jle
mov
push
dec
mov
stos
cmc
into
cmp
imul
add
subl
cmp
lret
pop
movsl
stos
mov
pusha
push
js
shll
in
pop
add
and
inc
int3
popa
lret
adc
mov
bound
mov
in
les
xchg
xchg
shlb
push
push
fnstcw
jne
imul
cmpl
dec
or
mov
outsl
pop
push
xor
and
clc
pop
out
shl
out
xor
inc
cmp
push
scas
fcmovnb
or
rcr
pop
or
add
mov
dec
ficompl
dec
shll
sub
pusha
call
dec
cltd
in
cmp
adc
push
rorb
sbb
subb
cs
and
icebp
or
outsl
icebp
ss
add
nop
xor
movb
scas
fcomps
call
daa
adc
lahf
jne
popa
push
dec
adc
add
test
ret
ret
pushf
addr16
adc
or
addb
repz
andb
sbb
pop
add
sbb
inc
leave
fs
fisttps
sub
sti
les
hlt
icebp
enter
loop
ds
mov
push
fs
je
aam
icebp
repnz
and
jo
dec
xchg
push
daa
mov
movsl
xor
rcr
xor
and
adc
loopne
mov
push
stos
pop
inc
dec
rclb
cmp
testb
mov
rolb
jno
push
add
adc
sbb
shrb
rorb
add
out
jne
inc
addl
leave
pop
adc
push
jp
push
xor
gs
mov
jbe
add
dec
jmp
cmp
xchg
pusha
movsl
das
add
sbb
push
sub
pop
xchg
cld
push
push
pop
loopne
lods
outsb
dec
or
mov
sub
and
or
adc
sbb
movb
ficomps
dec
jne
xor
xor
xchg
add
push
xchg
jp
mov
and
test
jne
movb
pop
add
hlt
leave
leave
xor
or
test
mov
inc
add
sub
testl
push
sub
pop
pop
bound
sub
sbb
and
nop
rorb
fidivrs
sbb
mov
xor
shlb
push
aam
mov
cs
rolb
add
call
mov
add
adc
sahf
call
adc
rolb
in
dec
call
ljmp
and
aam
pusha
xchg
push
dec
mov
jno
dec
or
inc
mov
adc
lods
icebp
aad
add
adc
ds
add
inc
inc
jmp
add
and
sbb
add
enter
lcall
repnz
lods
xchg
test
js
add
cmp
daa
add
push
jbe
dec
rcrb
mov
lea
jl
mov
mov
pop
test
mov
mov
scas
and
lahf
cmc
call
sbb
rcrb
push
lahf
shl
or
cmp
dec
mov
cmp
lcall
pop
stc
jne
and
je
sub
mov
fmull
push
push
cs
lods
or
add
leave
xchg
out
es
push
fisttps
and
pop
add
ret
imulb
dec
and
xor
imul
sarb
rol
shlb
or
scas
nop
lret
fcomip
push
es
les
lods
add
jo
nop
adc
movsb
inc
cltd
test
mov
xor
fwait
jl
sub
inc
cltd
push
sbb
sbbb
sbb
pop
enter
cli
adc
sbb
or
add
ror
push
sub
dec
push
cli
movl
call
loop
icebp
sbb
cld
push
leave
push
lea
adcb
cmp
lods
pop
pop
adc
cltd
push
lret
lret
sbb
sbb
pop
andl
mov
add
in
adc
add
lea
jl
lods
adc
icebp
imul
mov
push
ficomps
xor
mov
subl
dec
pop
push
pop
call
mov
adcb
dec
into
xchg
nop
subb
leave
pop
cmp
xchg
js
and
add
push
sub
cmp
push
or
cmpsl
or
or
mov
add
cmp
nop
sub
jge
sahf
or
and
sar
push
mov
add
mov
cmp
dec
subl
addr16
or
mov
and
xchg
push
xchg
mov
rclb
pop
add
push
jp,pt
xlat
gs
adc
push
or
jae
xchg
call
loopne
inc
mov
shrb
aas
jle
lock
xor
jbe
push
or
pop
pop
sbb
pop
add
loopne
push
cmp
mov
sbb
ret
pusha
in
aam
decb
sub
push
mov
add
in
fdivp
sub
fldenv
cwtl
jne
and
bound
mov
cmp
dec
and
or
fidivrl
mov
out
push
push
mov
push
add
sub
loope
adcl
pushf
mov
test
sahf
add
sub
sbb
cmp
xchg
sbb
imul
xchg
xchg
rolb
test
stos
sbb
inc
inc
ret
jns
and
or
outsl
mov
sbb
gs
sbb
sbb
lock
jne
fcmovbe
xchg
and
and
ss
fwait
repnz
rcrl
push
jl
push
adc
arpl
adc
loopne
pushf
pop
add
dec
push
push
sub
xor
pop
xchg
and
mov
add
fs
dec
cmp
push
sbb
xlat
adc
nop
jo
pusha
dec
in
or
xlat
mov
adc
xor
test
dec
or
ret
adc
dec
bound
bound
push
clc
loopne
xorb
cmp
jl
sbb
inc
push
xchg
xor
ret
lea
popa
add
stc
push
movsb
cmp
mov
sbb
leave
push
inc
xorl
test
xor
loop
pusha
add
mov
lods
and
je
inc
add
or
aad
test
jge
jmp
xchg
jmp
icebp
dec
pop
add
inc
inc
pop
cmovno
or
add
imul
mov
xchg
sbb
clc
mov
js
cmp
or
je
mov
cmp
sbb
pop
push
wbinvd
incl
inc
outsl
clc
adc
sbbl
push
jne
add
aas
cmp
and
or
adc
aad
and
mov
adc
xchg
mov
cmp
das
daa
inc
pusha
dec
jge
out
xchg
sbb
jecxz
sbb
jmp
cmp
outsb
sbb
repnz
pop
add
jecxz
sbb
add
test
ljmp
add
mov
lsl
or
loopne
or
push
and
dec
push
lcall
adc
adc
fs
movsl
and
inc
ljmpw
sub
or
xchg
rclb
js
fdivp
sahf
and
jp
call
xorl
or
jp
jo
in
add
aam
mov
jl
add
leave
movsl
lea
pushf
push
add
ljmp
xchg
pop
adc
adc
jecxz
mov
sub
adcl
fidivs
add
add
add
notb
ret
loopne
add
inc
mov
sub
inc
jne
push
dec
mov
push
fsubr
push
test
cmpsb
stos
jp
subb
adc
add
ret
and
test
cld
dec
sbb
cli
mov
cmp
adc
and
lahf
mov
xchg
lcall
xor
adc
testb
add
dec
or
rcrl
xchg
add
sub
add
in
test
sub
push
popa
sub
mov
mov
jo
shlb
pop
dec
ja
js
sub
adc
adc
mov
aas
cmp
pop
fwait
in
dec
and
pusha
rcrb
cs
out
push
and
pop
adc
mov
pushf
or
xchg
sbb
dec
addb
add
mov
mov
push
out
stos
mov
add
sbb
inc
mov
dec
pop
adc
rol
loope
or
test
lret
push
adc
adc
outsb
stc
dec
xchg
into
add
enter
inc
cmp
ret
lcall
std
aam
cltd
mov
insb
clc
sbb
jae
mov
enter
mov
fmul
inc
ret
inc
and
ret
xor
enter
pop
aam
shrb
sbb
push
popf
enter
je
ret
xchg
inc
pop
ficoms
xor
and
fsub
xchg
sub
out
dec
nop
mov
cwtl
test
dec
sub
rcrb
nop
inc
inc
dec
mov
push
jecxz
mov
andl
xor
xchg
pop
subb
jp
cmp
clc
adc
lods
mov
adc
idiv
or
or
movsb
inc
xor
jmp
call
jle
pusha
mov
sbb
sbb
add
out
pusha
add
nop
cmp
andb
popa
jl
enter
stos
into
fwait
shl
orb
sbb
jg
push
xorb
mov
cmp
cltd
inc
call
ret
dec
adc
rorb
or
sbb
sub
daa
fs
xchg
sub
ret
arpl
adc
and
adcl
pop
or
enter
dec
add
test
cli
pushf
ret
test
popa
fisttpl
dec
mov
test
and
or
loop
ret
mov
push
or
out
outsl
sbb
insl
push
bound
push
sub
or
sub
ror
sbb
lock
fldt
out
inc
push
insb
inc
call
xor
int3
shrb
jo
push
test
imulb
lret
dec
pop
bound
in
xchg
push
inc
xchg
xchg
cmc
ss
je
and
jae
xchg
adc
aaa
push
push
inc
or
ss
and
cmc
xor
test
insb
mov
dec
movb
in
push
cmp
cmp
mov
je
or
dec
pop
cltd
gs
or
adc
and
pushf
repnz
data16
jecxz
enter
xchg
lret
test
andl
mov
xchg
test
pop
in
sbb
or
push
fiadds
iret
sbb
push
pop
push
idivb
pop
adc
mulb
dec
shlb
cbtw
stos
outsb
hlt
dec
mov
bound
mov
outsl
fsts
sbb
mov
sbb
arpl
push
sbb
push
or
movsl
and
xor
mov
shl
adc
ret
add
cmp
cmp
jnp
add
cmp
rolb
cmp
lods
and
xchg
mov
xor
popa
or
les
push
lods
lods
sbb
dec
jge
test
call
adc
add
and
sti
pop
or
clc
xor
xor
cmpsb
dec
pop
adc
outsl
sbb
rclb
movsb
sahf
and
mov
adc
and
adc
mov
or
scas
icebp
aaa
adc
adc
lods
rcrl
nop
in
lods
inc
pop
cmp
insb
add
jno
ret
lods
xchg
add
sti
push
xor
jge
cli
add
jo
stos
cmpsl
fwait
lock
test
or
ret
add
ret
rcrl
xchg
xchg
cmovp
cmp
repz
xor
add
aaa
cld
jb
sbb
xchg
jne
imul
inc
ret
xor
push
pop
jbe
adcl
pusha
mov
test
cmpsl
lock
or
int3
and
or
inc
and
aas
push
loope
xchg
lods
rorl
scas
sbb
mov
ds
or
lret
insl
pusha
and
jle
aam
or
fs
sub
and
jno
addb
jp
cld
add
sahf
insb
sbb
xor
push
into
push
cmpsb
negb
mov
mov
add
leave
xorl
add
outsb
adc
inc
rcrb
dec
xor
push
test
xchg
sub
enter
mov
rorb
loope
mov
add
psubusw
jmp
test
repnz
insl
mov
bound
stc
add
push
rcrb
jecxz
imul
xor
aam
mov
out
mov
push
stos
movsb
pop
mov
inc
js
pop
lock
adc
nop
hlt
xor
push
fcompl
add
adc
sub
cwtl
movsb
xchg
and
outsb
pop
loope
add
movsl
out
and
mov
sub
add
outsl
addb
ds
stc
push
movsb
out
push
xorl
jb
dec
aam
xchg
lcall
push
cli
rcrb
sub
dec
cltd
xchg
pop
cwtl
icebp
or
loopne
sbb
mov
pop
dec
add
sbb
mov
xlat
adc
mov
adc
pop
enter
add
cmp
ja
jp
movsl
mov
jge
push
cli
movsb
adc
xor
mov
lock
arpl
movsb
in
in
xor
in
mov
jecxz
dec
cmpsl
xchg
mov
repnz
dec
pop
jae
lock
sub
addb
xchg
xchg
gs
sbb
xchg
ljmp
sarb
rolb
mov
les
inc
jbe
push
inc
ret
sbb
mov
pop
inc
push
and
xor
push
inc
inc
sbb
mov
push
ror
cmp
cmp
push
call
xchg
cmc
cmp
mov
or
mov
and
clc
mov
adc
mov
adc
andl
and
xchg
push
pushw
xor
cmp
add
shll
xchg
mov
inc
int
iret
xchg
add
add
fisttps
mov
lock
fs
aad
je
rorb
shlb
cmp
lret
sub
or
test
mov
adc
fcomps
dec
mov
sbb
into
sbb
je
xor
inc
jmp
mov
jne
add
sbb
push
das
inc
mov
loopne
mov
sbb
adc
dec
pop
ss
push
lods
adc
fstpt
xor
mov
ret
stos
test
add
sbb
call
push
hlt
jmp
or
or
push
sbb
leave
pop
lahf
jg
test
mov
cwtl
rorb
pop
pop
pop
mov
or
jnp
pushf
shrb
or
dec
adc
dec
cmp
test
lds
and
adc
jecxz
sahf
in
dec
rclb
rolb
clc
xor
push
ja
ds
and
xchg
add
add
mov
inc
pop
push
push
or
enter
sub
or
pop
add
or
mov
fwait
xor
mov
cmp
jmp
adc
out
aam
and
push
push
push
cmp
adc
inc
aas
ficoms
push
scas
sbb
mov
xchg
out
adc
js
sbb
xor
das
cmp
icebp
push
adc
sub
or
dec
cmp
adc
fldl
repnz
cmp
xorb
lock
jl
or
bound
jae
push
mov
add
xor
fcoms
mov
imul
sbb
fidivl
fmulp
and
lods
pop
rclb
lock
js
add
pop
or
inc
sub
pop
ss
adc
mov
mov
repnz
sarb
mov
xchg
push
scas
xchg
xor
and
stos
mov
and
xor
jno
insb
mov
insb
inc
or
add
in
sar
and
shlb
adc
push
ja
pop
and
and
jne
mov
jno
mov
inc
test
sbb
cmpsb
add
cmp
and
cmp
cld
leave
inc
pop
andb
adc
sub
jp
dec
insl
popa
xchg
mov
xchg
aad
sbb
add
hlt
movsb
js
out
inc
pop
xchg
xchg
adc
cmp
shlb
mov
add
xor
cmp
stc
lds
adc
mov
pop
mov
cmp
sub
dec
mov
mov
repnz
aam
ja
and
adc
ret
xor
push
enter
jmp
lods
fisubrl
aas
mov
ret
or
adc
inc
or
enter
add
pop
fsubl
adc
inc
ret
pop
inc
and
inc
sub
arpl
push
scas
repnz
push
aad
ds
es
adc
xchg
dec
clc
pop
dec
std
clc
or
xchg
sbb
in
cs
and
leave
dec
das
sbbl
mov
stos
mov
cmpl
inc
lods
push
mov
mov
push
jns
imul
inc
mov
sbb
mov
sub
pop
lret
movsb
scas
movsl
add
test
lock
std
xor
lret
sbb
test
pushf
lock
jl
adc
and
inc
loopne
lods
pop
mov
adc
pop
cs
cmp
repnz
mov
fldenv
adc
add
sbb
adcl
inc
sahf
xchg
add
cmp
push
cmp
sbb
rcrl
inc
sub
jbe
inc
aaa
aaa
jnp
xchg
ds
repnz
loopne
mov
in
mov
mov
or
mov
dec
lods
xorl
test
add
inc
addr16
movsb
xor
push
dec
popa
sbb
push
or
mov
jle
fistl
xchg
loopne
pop
inc
adc
xchg
lret
and
orb
add
js
adc
add
fnstcw
or
loope
sub
sub
andb
jno
mov
pusha
adc
pop
mov
lods
mov
pop
push
rcr
mov
push
and
sbb
or
ficoml
pop
mull
push
das
add
push
mov
jge
into
dec
xor
loop
aas
cmp
xor
or
cmpsl
inc
or
cmp
push
sbb
push
mov
mov
sub
xor
sbb
jge
inc
or
add
or
out
or
adc
add
adcl
pop
test
inc
xor
mov
jp
cld
cltd
pop
dec
mov
lahf
pop
negb
rcrl
arpl
mov
data16
ljmp
cli
rcrb
call
cmp
mov
sub
pop
xchg
lock
ss
inc
pop
pop
ret
push
xor
mov
sub
dec
xchg
int3
fmull
je
add
loopne
shlb
xor
pusha
jne
or
loopne
mov
jmp
andl
test
hlt
sbb
add
jmp
inc
test
adc
dec
sub
adc
shll
add
sub
add
stos
xchg
movsb
ficoms
and
pop
jge
pop
cmpsb
lcall
xor
adc
or
out
int3
mov
imul
dec
jo
fcmovb
and
andb
andl
pop
pop
add
rcll
xchg
call
arpl
les
popa
jp
notb
push
lods
and
or
and
addb
popf
mov
movsb
cmp
addr16
cs
xchg
mov
mov
nop
pop
sbb
ret
dec
les
mov
dec
ret
out
xlat
mov
xchg
adc
mov
push
adc
cltd
xor
mov
add
inc
sahf
or
or
xor
into
push
xchg
sub
xor
push
or
push
in
shlb
adc
xchg
out
ja
movsl
add
aad
or
or
mov
fs
call
pop
daa
jno
in
add
sbb
stc
sbb
mov
pop
arpl
add
cmc
je
mov
cmpsb
movsb
sub
and
add
fnstcw
add
dec
lds
and
sbb
or
jecxz
test
and
insl
cmp
outsb
mov
sbb
fadd
cwtl
jo
push
add
cmp
cltd
ret
or
xor
xchg
or
ror
push
push
mov
lret
arpl
mov
addr16
fstl
arpl
mov
test
cmp
outsl
loope
lock
sbb
stos
push
cmpsb
lock
or
fdivs
xchg
lods
or
mov
xchg
cwtl
test
adc
xor
inc
or
pop
in
or
lret
call
out
push
loope,pn
push
jo
mov
inc
arpl
and
rcr
dec
xor
nop
ljmp
adc
or
aam
ret
xchg
pop
push
shlb
push
mov
xchg
mov
cmp
jns
adc
jge
test
xorl
loope
pusha
dec
ret
xorl
push
and
xchg
add
mov
jge
push
rclb
and
pop
push
cmp
pusha
push
addr16
xlat
sbb
cli
mov
jmp
and
pop
mov
sahf
in
bnd
push
orb
xchg
sub
mov
jmp
bound
pop
dec
loopne
adc
cmp
cmp
insb
js
jne
adc
rcr
adc
movsb
movsl
cld
cmp
test
int3
add
mov
add
add
les
jmp
add
adcl
xchg
push
test
inc
xchg
jmp
push
sub
mov
sub
sbb
lock
dec
xchg
jecxz
pminsw
cltd
add
and
push
mov
inc
leave
add
cmp
andb
data16
popa
add
mov
fidivs
rclb
add
test
jne
pop
jbe
or
and
jb
sbb
lock
dec
sub
call
or
or
inc
dec
mov
sbb
xor
loopne
mov
sub
add
xlat
jae
es
stos
nop
and
and
test
add
rorb
add
xor
roll
push
push
sub
test
adc
add
push
inc
test
ret
rorb
ljmp
imul
les
push
pop
sub
rclb
pop
arpl
enter
cmp
inc
rorl
mov
loopne
sub
popa
mov
das
rcl
or
or
mov
add
jmp
dec
add
bound
sbb
mov
or
repnz
add
ffreep
xor
mov
pop
es
push
dec
aad
and
scas
fildl
fdivr
imul
sbb
adc
xor
repz
and
movsl
push
push
adc
test
inc
cmp
and
lds
fldl
and
fnstcw
inc
int3
push
leave
and
mov
or
int
push
rclb
sbb
adc
leave
adc
inc
cmp
ds
mov
or
rcrb
add
enter
addl
mov
shrl
leave
rcrl
or
in
push
jle
inc
ljmp
mov
mov
add
arpl
push
loope
sbb
fldl
lret
sbb
xchg
push
mov
sarb
sbb
sub
pop
inc
loopne
enter
xchg
mov
addb
push
push
and
sub
push
pop
imul
push
jmp
cli
ljmp
mov
and
push
popa
loopne
or
into
mov
mov
or
xchg
add
sbb
mov
jp
mov
movsl
push
mov
cld
mov
sbb
sbb
stos
push
pusha
sbbb
adc
mov
cmp
and
or
adcb
jbe
push
adc
pusha
and
test
jle
xchg
cmp
dec
mov
incl
and
pop
dec
aaa
rolb
push
mov
aad
xchg
pusha
mov
add
mov
scas
in
divb
gs
and
les
outsb
out
pop
movsb
add
inc
mov
cwtl
cmp
scas
movsb
lret
mov
nop
xchg
jo
add
test
mov
pop
loop
jge
or
mov
mov
fdivs
inc
inc
or
add
lods
cmpsl
das
mov
adc
ds
or
mov
sbb
sbb
pop
aaa
jno
push
pop
add
push
imul
movsl
and
sub
adc
sub
int3
es
mov
jnp
or
rolb
ss
or
loopne
mov
dec
cmp
mov
jae
mov
mov
out
loope
or
sbb
add
movsb
adc
inc
or
pop
dec
lock
and
negb
andb
stos
and
ficoms
sahf
or
push
ret
inc
and
inc
out
xchg
or
je
jmp
mov
mov
or
adc
inc
adc
dec
jmp
adc
inc
push
adc
mov
adc
inc
jg
and
add
mov
xchg
adc
add
int
adc
mov
jo
inc
jns
push
add
mov
jo
or
adc
mov
or
push
lock
adc
adc
sbb
sbb
inc
adc
mov
lcall
jne
pushf
les
lock
mov
sbb
push
and
inc
fwait
pusha
sub
ss
adc
fisttpll
les
call
or
add
inc
jmp
adc
adc
sub
pop
or
jp
add
sub
test
stos
repnz
jno
xor
inc
lcall
push
sbb
xchg
ljmp
je
adc
inc
insb
inc
sarl
adc
mov
test
lret
inc
cmp
sbb
adc
adc
pop
jo
pop
stos
xor
add
adc
pop
loop
repnz
fbld
test
shll
push
add
or
je
insb
or
and
xchg
lret
call
xor
pusha
test
pop
mov
add
rcrb
nop
mov
jmp
shlb
jbe
push
adc
pusha
mov
jns
jne
and
cs
xchg
push
aam
adc
pop
out
cli
pop
pop
shll
es
add
imul
mov
jnp
push
into
mov
lock
inc
stc
repnz
mov
and
inc
inc
aam
rclb
lret
test
inc
xchg
inc
and
sbb
xor
mov
ljmp
das
dec
xor
daa
arpl
and
add
icebp
call
xchg
pop
subb
pushf
fs
shll
aam
stos
or
jp
mov
movsl
adc
cmp
fs
pushf
dec
dec
xlat
mov
sahf
xor
mov
cwtl
push
adc
jp
add
jg
or
arpl
add
pop
mov
adc
scas
jo
inc
pusha
call
cmp
cmp
movsl
push
or
jge
mov
adc
mov
adc
fs
sub
loopne
add
push
push
sbb
mov
dec
add
push
sub
daa
jnp
sub
daa
loope
imul
es
cli
mov
sbb
adc
dec
ret
sbb
mov
mov
mov
sbb
js
xchg
pop
mov
sub
daa
adc
push
inc
sub
lods
xchg
repnz
pop
inc
adc
sub
cmpsl
ss
daa
sub
add
popa
cmp
lret
mov
gs
int3
andb
cmp
mov
dec
lods
inc
dec
dec
rclb
enter
add
bound
push
mov
xchg
jb
mov
xor
movsb
inc
cmpsb
mov
int3
jle
jo
and
jns
inc
movups
push
aam
cmc
fwait
xor
and
sbb
repnz
fsubrl
xchg
cmpsb
adc
inc
ficoms
mov
pop
mov
mov
cli
idivb
in
cmpl
subb
dec
mov
pushf
add
lods
jl
test
sbb
mov
das
mov
xchg
jmp
lock
addr16
add
pop
dec
shlb
pop
mov
jo
xor
stos
adc
or
or
cmovnp
shl
mov
add
cltd
mov
add
push
es
js
xor
and
xchg
dec
shrb
es
inc
test
sbbb
add
and
loopne
mov
adc
gs
cwtl
adc
adc
leave
stos
mov
pop
rcrl
and
mov
or
adc
jno
ja
shlb
test
push
cmp
jo
test
mov
dec
icebp
inc
and
mov
xchg
stos
pop
mov
or
and
sub
movsb
xchg
test
in
aas
ret
and
jo
lods
fimuls
cmp
dec
lcall
sbb
sub
push
xorb
dec
wbinvd
xlat
add
lret
dec
and
sub
push
inc
and
aam
add
add
das
sbb
or
mov
sahf
cwtl
pop
cmp
pop
push
adc
rcll
scas
cmpsw
push
jecxz
xor
and
popa
pusha
cmp
cs
ss
add
xor
push
mov
movsb
in
arpl
adc
vshufps
mov
les
stos
pop
test
rclb
loopne
mov
rclb
call
sub
rol
adc
ljmp
sbb
mov
roll
or
sub
xor
push
add
and
cmp
mov
adc
mov
test
add
inc
rol
fdivrs
stos
icebp
cmpsb
xor
repnz
or
mov
push
into
xorb
dec
cmp
push
push
test
or
sahf
xchg
in
test
xor
add
or
inc
xorb
mov
nop
loop
mov
mov
stos
push
or
dec
sub
ret
cmp
cmp
aas
push
jo
popf
and
pop
roll
xchg
rclb
lods
adc
mov
loope
mov
push
loopne
cmp
jge
icebp
aam
push
push
xor
xor
push
pop
addr16
sbb
pop
imul
and
push
and
pop
in
hlt
ljmp
adc
clc
mov
jo
mov
ss
xlat
xor
hlt
sbb
inc
pop
jo
test
xchg
and
cltd
push
stos
push
sbb
mov
jnp
dec
xor
out
rolb
mov
movsl
rclb
inc
push
pop
sub
lods
imul
inc
mov
loopne
xchg
pop
mov
cmp
and
mov
mov
aam
jp
clc
dec
mov
pop
faddl
mov
sub
ljmp
loopne
jle
fmuls
mov
add
mov
movsl
daa
in
mov
jno
fwait
adc
or
push
dec
or
push
jle
movsb
ret
pop
push
and
push
aam
push
insl
adc
adc
movsb
ret
add
mov
jno
gs
add
dec
xor
lods
inc
sbb
gs
fsqrt
sbb
pop
sbb
pop
sbb
sub
pop
mov
psubsb
movzbl
cmp
js
je
clc
dec
sbb
out
dec
fwait
rolb
repnz
cli
repnz
mov
push
sbb
cmc
gs
push
fwait
sub
movsl
in
lea
das
pop
prefetch
repnz
fs
or
lea
in
inc
pop
incb
add
xor
add
mov
shrb
test
mov
mov
push
pop
js
into
cmp
sbb
push
sbb
add
dec
and
pop
mov
and
inc
or
clc
addl
fs
sbb
adc
ljmp
nop
add
test
xchg
add
or
sub
or
je
mov
push
call
addb
or
push
adc
push
leave
dec
cmp
out
xor
cmpsl
popa
lret
dec
jb
xor
inc
outsl
dec
or
aas
cwtl
shlb
int
call
cltd
in
adc
hlt
xchg
push
sbb
xor
add
dec
lahf
push
sub
mov
andb
dec
test
adc
test
pop
add
push
lcall
push
jnp
ret
lcall
je
lret
inc
and
pusha
movl
xor
sarl
mov
leave
and
sbb
hlt
ss
xor
xorl
pop
call
xchg
xchg
pop
fisttps
sbb
mov
mov
push
mov
loope
mov
sbb
das
jle
and
adc
test
iret
adcb
lea
loop
inc
insb
ret
cmp
cmp
shl
cli
adc
pushf
dec
ret
inc
imul
xor
and
xchg
xchg
mov
mov
sarb
incb
rorb
or
push
ljmp
push
xchg
mov
fs
aam
cmp
nop
xchg
dec
mov
cwtl
cmp
rorb
dec
push
daa
rorb
das
push
inc
data16
lret
out
or
sub
aaa
cli
movsb
inc
inc
lods
insb
push
jns
add
mov
enter
andb
fstps
outsb
jmp
enter
push
lcall
jnp
leave
mov
lods
pop
or
jns
jg
scas
xchg
test
pushf
pop
repz
ret
pop
dec
dec
mov
stc
lcall
push
or
inc
or
cmp
adc
daa
arpl
mov
push
add
dec
stos
and
dec
pusha
out
das
imul
stos
add
scas
push
push
push
loop
scas
shrb
jp
sbb
call
ds
mov
jo
or
sbb
ret
sub
inc
xchg
scas
ret
pop
pop
outsb
mov
mov
sbb
lock
sbb
or
das
es
rcrl
je
sub
test
push
bound
push
popf
inc
push
mov
enter
sub
sbb
pop
sbb
jno
inc
outsb
lock
sub
imul
test
sub
in
stc
push
jle
fiadds
sahf
push
sbb
arpl
lret
or
dec
dec
sbb
inc
inc
ret
popa
iret
ret
xchg
aad
sbb
ficompl
push
mov
jb
mov
adc
xorb
icebp
pop
xor
xor
sbb
outsb
sub
out
mov
dec
sub
enter
xor
xlat
out
out
dec
sbb
jo
and
add
add
add
lahf
sarb
inc
mov
adc
nop
rcrb
and
add
xor
insl
fildl
xor
push
sbbl
mov
les
outsl
xchg
pop
xchg
add
adc
sub
pop
mov
and
jne
xchg
sbb
addl
pop
sub
out
push
jp
cmpsb
xlat
cli
sar
add
adc
fs
andl
popf
push
test
push
add
shlb
lret
shlb
ret
rolb
pop
jb
xchg
shl
movsb
orl
and
mov
bound
and
xchg
jmp
and
leave
fldenv
dec
and
push
and
push
int
pop
cmp
shrb
imul
cmc
rclb
ret
rol
into
lods
fidivs
push
mov
add
stos
dec
inc
ljmp
xchg
add
mov
ss
ljmp
dec
mov
and
out
int
adc
xchg
aad
adc
mov
sbb
sbb
or
adc
xchg
adc
inc
bound
clc
add
call
add
dec
or
aas
into
ret
xlat
into
mov
mov
inc
fnsave
dec
push
xchg
add
cmpl
pop
pushaw
cmp
in
fadd
inc
sbb
add
add
add
lods
and
add
mov
inc
andb
dec
pop
or
adc
dec
lcall
inc
mov
xlat
pop
or
pusha
lret
pop
popf
mov
and
mov
push
repz
jl
mov
rclb
dec
xor
inc
and
lods
mov
xchg
lcall
xlat
cmp
call
ljmp
cmp
pop
daa
mov
cmpsb
cld
xchg
insb
popf
movsl
inc
mov
jle
mov
imul
adc
xchg
or
push
into
xchg
sub
mov
bound
rolb
push
sbb
or
pop
fisttpl
dec
dec
adc
push
pop
dec
xor
pushf
lret
mov
loopne
xchg
xchg
push
xchg
inc
les
mov
cmpsb
inc
ret
addr16
call
dec
hlt
call
outsb
in
push
inc
mov
cli
push
js
inc
inc
sbb
mov
sub
dec
or
xor
int3
and
dec
lods
xlat
or
add
cmpl
push
sarl
movsl
mov
mov
cmp
adc
mov
mov
pop
dec
lahf
scas
movb
cld
mov
pop
sbb
lods
push
dec
inc
push
mov
adc
pop
andb
jne
loopne
jl
jne
adc
xor
mov
and
ret
je
add
lods
test
outsl
bound
mov
adc
movsl
cmp
adc
or
lret
push
xchg
mov
pushf
arpl
xchg
cmp
xchg
adcb
add
and
scas
add
sbb
mov
dec
pop
or
stos
push
das
mov
xor
icebp
mov
inc
push
inc
dec
mov
sbb
sub
jo
or
das
inc
repz
add
repnz
incb
lea
or
mov
xor
cmc
or
add
movsb
inc
push
add
enter
je,pn
sbb
lock
ja
xor
aas
lock
cmp
mov
xor
pop
mov
xchg
sbb
mov
jb
xchg
dec
pop
adc
mov
test
mov
loop
push
leave
pusha
pusha
cld
shlb
lock
push
add
inc
enter
sbb
sbb
mov
sti
cmp
mov
pop
inc
bnd
and
sub
nop
scas
dec
shlb
inc
adc
sub
sub
adc
call
adc
test
lock
xchg
jecxz
xchg
ficomps
mov
lods
xor
adcb
or
lods
lock
pop
xor
ljmp
dec
dec
inc
mov
xchg
push
mov
dec
or
pushf
enter
add
and
or
imul
enter
insl
lea
push
ret
mov
sub
xor
push
adc
ja
inc
rcrb
sarb
sub
xchg
inc
lock
or
add
inc
lock
cmpsl
cltd
jmp
pop
shl
cmp
dec
leave
loop
hlt
jp
hlt
xchg
mov
or
mov
cmp
mov
sub
movsl
mov
sub
mulb
sub
les
dec
push
sar
xor
pop
mov
out
dec
add
sarl
jae
test
pop
dec
or
ret
pop
xchg
popf
fstpl
xor
lret
or
xor
jo
insl
flds
inc
add
jns
popa
lcall
fstps
push
test
in
gs
dec
insl
dec
in
mov
les
push
mov
xchg
and
push
or
das
cltd
xor
add
xchg
lock
or
push
push
push
imul
inc
cmp
xchg
mov
repnz
sbb
adc
add
out
shrb
loop
cmpsb
adc
push
lock
icebp
les
into
mov
fmul
inc
push
mov
and
lret
leave
nop
movsl
add
sti
or
inc
cmpsl
loope
dec
push
dec
push
add
xchg
xor
loopne
adc
notb
int
sub
scas
cmp
inc
mov
jne
shrb
and
insl
xor
pop
mov
pop
js
rolb
les
push
mov
mov
arpl
push
and
mov
and
addr16
mov
outsl
and
inc
aam
jecxz
and
call
in
mov
mov
fists
lods
inc
das
xchg
je
mov
add
gs
adc
lahf
and
push
dec
pop
cmp
sub
outsl
and
jmp
inc
ficoml
mov
cmpl
cmp
sbb
shrb
xor
rolb
xlat
shr
push
mov
xchg
seta
in
repnz
test
jb
mov
pop
or
pushf
leave
cmc
pop
xor
and
out
sub
sbb
stos
jo
sbb
push
and
mov
push
and
loop
push
xor
mov
xor
in
mov
push
mov
push
push
add
xchg
roll
jo
or
mov
aaa
add
xchg
stos
inc
pushf
inc
xchg
shrb
add
jbe
popa
test
lods
mov
and
jne
cmpsl
ret
std
adc
mov
loopne
lds
sbb
or
xchg
mov
pop
testb
mov
mov
push
adc
or
popa
pusha
inc
pop
add
pop
enter
xchg
sub
sub
mov
xchg
js
mov
sub
add
xor
push
mov
inc
pop
mov
jecxz
and
or
add
mov
sub
mov
sbb
movsl
xlat
add
add
or
sub
aad
movsb
mov
add
fwait
leave
cld
dec
imul
dec
add
xchg
pop
les
add
mov
test
adc
mov
push
adc
push
roll
or
int
adc
aaa
sub
add
adc
pop
insb
push
push
mov
int3
inc
pop
ror
shrb
mov
insb
into
lods
dec
jmp
in
je
xlat
aaa
or
mov
inc
mov
cmp
xchg
loopne
mov
pop
mov
cli
adc
jg
adc
or
and
adc
adc
sbb
je
stos
cwtl
add
pop
repnz
mov
rorb
into
outsl
lods
mov
jns
pop
mov
enter
cwtl
lret
push
jno
andb
fiaddl
inc
fucom
dec
pop
mov
sub
or
cmp
mov
stos
sahf
ret
adc
cmp
sbb
adc
sub
adc
arpl
sbb
aam
test
and
adc
add
stos
mov
xchg
out
imul
cmpsb
sub
inc
pusha
lods
pop
inc
and
pop
pop
cmp
and
loop
and
arpl
xor
push
adc
xor
mov
pop
sub
imul
mov
dec
test
mov
push
pop
add
addr16
arpl
cli
adc
rcrl
loope
or
loop
mov
inc
xchg
or
inc
mov
or
add
adc
dec
sbb
movsl
cmp
call
movsb
dec
or
jmp
mov
sub
in
push
dec
sub
push
pop
and
jbe
or
and
mov
xchg
cs
outsb
jecxz
clc
ret
push
lds
add
dec
xor
inc
mov
imul
scas
lahf
movsb
add
in
andb
fdivrl
jo
mov
mov
and
loopne
mov
les
cld
push
xor
sub
in
pop
pop
xorl
pusha
or
mov
insb
lret
mov
rcrb
sbb
fcompl
outsb
push
xchg
jp
js
rclb
test
cmp
add
lods
dec
cmp
test
xchg
and
adc
pop
jp
mov
es
or
pop
lret
xchg
sub
or
pusha
loopne
mov
dec
leave
ss
popa
xor
roll
or
add
jl
xchg
movsl
ret
xor
push
xor
push
mov
add
mov
loopne
ret
mov
enter
sub
mov
lcall
icebp
push
sbb
adc
loop
nop
rorl
push
loopne
subb
pop
leave
into
mov
orb
pop
or
or
pop
daa
or
mov
mov
repz
sub
mov
mov
push
sbb
fs
test
ss
dec
aam
mov
or
popf
aaa
sub
fistps
xor
nop
dec
mov
and
and
jp
sar
mov
add
inc
jno
js
cs
mov
gs
adcb
pop
mov
add
ficoms
and
jmp
mov
push
mov
adc
loopne
imul
and
mov
adc
dec
sahf
jp
cwtl
daa
or
add
mov
pop
dec
pusha
dec
fldcw
pushf
andl
hlt
push
cli
idivb
add
loopne
jno
or
cmp
adc
and
scas
es
add
sbb
pop
inc
adc
loopne
popa
mov
and
xchg
rcl
pop
inc
push
test
into
or
mov
sub
and
or
pop
sbb
lods
push
push
dec
sub
cmp
aam
add
rolb
or
inc
cmpsb
cmp
add
dec
stos
lret
flds
pop
scas
enter
and
test
ljmp
cmp
in
divb
rcll
ljmp
pusha
notb
in
and
std
dec
and
cmp
lods
pop
nop
or
movb
push
pop
xchg
loopne
ret
push
adc
inc
pop
in
xor
int3
dec
loope
insl
sub
loope
push
pop
cmpsb
lea
jnp
in
lods
adc
loope
cmpsb
insl
jecxz
addl
sbb
outsb
jp
mov
fs
sub
and
incb
jb
lcall
push
lock
adc
bsf
add
icebp
and
jb
add
dec
dec
push
xchg
and
loopne
cmpsl
and
inc
das
mov
add
sbb
sub
push
out
mov
cmp
shl
ret
pop
mov
inc
jge
rcl
jecxz
sub
lahf
es
popa
xor
mov
nop
arpl
negb
jecxz
imul
mov
adc
xchg
test
add
insb
aam
in
or
aad
cmp
xor
icebp
pop
ret
or
rcll
ret
push
add
xlat
shrl
cmpl
xor
leave
xor
inc
inc
loope
add
adcb
call
lods
and
lret
mov
add
and
faddl
push
or
ljmp
sub
inc
inc
ja
mov
push
int
sbb
clc
adc
and
add
sbb
dec
repnz
or
mov
dec
inc
clc
or
enter
or
sub
popf
sbb
mov
and
inc
or
shlb
dec
cmpsb
jno
loope
inc
pop
push
push
hlt
int3
lret
adc
sbb
shr
aaa
xchg
adc
xchg
movsl
sahf
jb
dec
sub
fcmovb
pop
xlat
sbb
push
insl
add
or
arpl
lods
or
pop
cmp
lahf
or
rcll
sbb
and
fdivrl
out
mov
js
aam
rorb
add
cmp
nop
pop
push
push
push
inc
jge
sbb
leave
ret
mov
push
das
xor
testl
mov
add
pop
push
push
push
mov
call
rorb
notl
fcmovnb
pushf
test
loope
mov
hlt
or
test
xchg
rcll
nop
and
xchg
cmpsb
stos
adcb
test
jne
bnd
xchg
dec
js
pop
addl
aas
xor
mov
adc
xchg
push
jle
jmp
ljmp
jnp
pop
pop
push
call
loop
rorb
loope
jp
pushf
testb
je
sti
mov
inc
aam
add
pop
cmp
push
push
inc
adc
inc
sti
ljmp
add
push
mov
inc
in
mov
mov
mov
push
push
and
paddd
pop
pop
ret
mov
cmpl
fnstsw
pushl
adc
sbb
cmp
pop
dec
test
push
jle
and
mov
add
mov
arpl
loope
xor
push
jmp
les
ret
fiaddl
nop
dec
repz
lods
or
mov
push
push
sub
test
out
outsl
iret
lock
adc
add
pop
and
mov
cmpsl
shr
mov
adc
and
mov
loopne
lea
jb
push
cmp
sti
inc
push
xor
xor
sub
and
sbb
loopne
dec
test
pop
je
pop
pop
pop
ret
add
lea
or
and
test
mov
adc
cmp
stos
loope
jmp
ret
loopne
mov
pop
test
or
jp
pop
je
or
mov
pop
jbe
imul
jne
pusha
or
pop
jmp
push
mov
add
lcall
dec
or
adc
mov
pop
pop
enter
cs
cmp
jge
lea
sti
pop
fwait
inc
dec
adc
push
cmp
cmp
inc
xchg
dec
cmp
cmp
jl
mov
mov
testl
lret
movl
sbb
jmp
cmp
cmp
nop
sub
cmp
lea
push
cmp
cmp
pop
mov
pop
push
mov
pop
mov
pop
pop
jmp
rcll
pop
test
inc
push
or
jmp
inc
or
pusha
sub
je
bound
pop
jg
mov
ret
cmp
push
inc
je
lea
add
jg
movsl
mov
cmp
jne
push
sbb
fisubs
or
cmp
sbb
rcrb
pop
fmul
ja
call
idiv
mov
mov
push
cmp
jne
mov
inc
push
je
test
xchg
movzbl
pop
jle
inc
xchg
je
inc
jmp
cmpb
or
jbe
inc
mov
and
push
mov
scas
push
xor
cmp
mov
mov
jp
ljmp
cmp
je
cmp
je
inc
fisttps
jmp
cld
lock
call
leave
push
mov
pop
stc
ljmp
cmp
cmp
je
push
push
jae
call
xchg
and
cmp
pop
mov
pop
push
pushl
icebp
int3
pop
les
ffree
fildl
std
outsb
jne
pop
decl
sub
inc
cmp
mov
push
or
add
ljmp
mov
scas
jb
inc
push
push
out
xor
clc
add
inc
pop
cmp
sahf
mov
adc
mov
push
cld
push
push
push
aas
jl
mov
push
push
adc
mov
in
lods
inc
or
shll
push
imul
adc
mov
cmp
push
xor
push
adc
andl
jne
jge
xor
sub
mov
aaa
add
mov
inc
ss
mov
inc
cmpb
mov
jl
test
je
shl
orb
negl
out
push
test
loopne
adc
aad
ss
jmp
sbb
add
cmp
inc
cmp
insl
or
xorl
mov
inc
je
jnp
lret
or
adc
jne
jne
dec
stos
jbe
dec
bound
sbb
pushf
add
jne
popf
loopne
push
add
das
cmpb
pushf
enter
adc
add
mov
scas
or
add
inc
jmp
and
sub
ret
add
cmp
or
cltd
loopne
and
add
loopne
out
clc
sbb
shlb
sbb
xchg
ret
shr
mov
dec
test
add
inc
adc
push
pop
inc
bound
repz
adc
add
cmpl
adc
jge
cmp
mov
lds
enterw
aaa
jno
add
add
jge
popa
fnstsw
andl
adc
icebp
xchg
pop
negb
xchg
dec
aam
mov
icebp
push
jbe
fs
shlb
dec
adcb
aad
repz
push
divb
xchg
test
inc
cltd
popf
xchg
ljmp
mov
or
dec
ret
push
out
fs
inc
inc
adc
jne
or
adc
inc
sar
sbb
add
fwait
jle
mov
xor
xlat
push
jmp
xor
shlb
adc
push
push
andb
jp
mov
sbb
sbb
dec
pop
add
or
adc
ret
jmp
and
or
bound
dec
or
xlat
jle
je
rorb
idiv
or
sub
inc
aam
mov
push
imul
or
js
je
int3
mov
loope
xor
je
pop
pop
pop
imul
xor
mov
inc
fcomps
jns
push
dec
das
leave
loopne
loopne
lea
mov
jae
fiadds
subl
mov
movb
mov
aas
sub
inc
shr
mov
rolb
repnz
fcoms
mov
lea
or
mov
mov
jl
outsb
daa
lods
movsb
mov
cwtl
in
loopne
push
daa
or
addl
iret
aas
fsub
lea
andb
rcrl
and
roll
sti
fld
adc
fwait
jl
jmp
mov
and
aad
fs
loopne
push
movsbl
sbb
cmp
test
jne
push
push
push
jno
mov
rol
inc
xor
lea
dec
rolb
enter
mov
mov
add
inc
cmp
jl
rorb
fildl
cwtl
loope
cmpl
lea
jne
test
sbb
nop
mov
negb
and
dec
neg
sbb
cmc
cmp
fstl
push
pop
push
loope
and
xchg
leave
push
orb
dec
cld
adc
jne
or
add
addb
add
clc
or
xchg
test
pop
or
sarb
and
pushl
cld
pop
insb
mov
push
jmp
add
insb
sub
xor
pop
sbb
xchg
pop
and
mov
jne
xor
push
mov
add
push
dec
pusha
dec
in
pusha
push
or
dec
int3
push
insb
push
pop
dec
nop
lea
xor
sti
dec
aas
fldenv
adc
aam
mov
mov
int3
pop
ret
ficomps
push
cmp
repz
dec
and
stos
incb
add
mov
ret
and
fisubl
enter
and
test
pop
subb
clc
and
mov
pop
stos
dec
fcoml
add
inc
add
mov
jnp
sub
ret
jl
mov
push
push
xorl
aam
mov
jo
mov
cmp
sub
jbe
fdivl
dec
or
jl
out
adc
mov
mov
andl
push
adc
ret
popl
xchg
sbb
fs
push
jne
lea
jns
shll
push
or
pop
jo
hlt
push
or
push
or
xor
inc
add
je
lock
outsl
call
ret
inc
add
imul
ret
int3
push
inc
xor
pop
inc
xor
or
or
jnp
cmc
cs
or
or
sub
inc
leave
insb
andb
inc
adc
mov
inc
jae
or
bound
je
push
push
lea
push
push
pop
pop
orb
fistpll
pusha
xor
dec
push
outsb
dec
data16
mov
sbb
scas
cmp
add
stos
or
or
nopl
jmp
xchg
mov
xchg
jmp
mov
push
jg
sub
lds
je
mov
push
push
sbb
insb
rcrb
ret
cld
je
or
inc
pop
loopne
data16
and
int3
fcomps
add
sub
outsl
or
xor
mov
je
or
inc
mov
test
icebp
push
mov
shl
cmp
sub
jbe
fstps
mov
cli
jmp
icebp
sbb
pop
jl
sub
push
aad
pusha
adc
sbb
iret
loop,pt
in
push
pop
pop
and
js
inc
pop
lret
sub
push
mov
clc
sbb
add
sub
and
fwait
pop
cs
insb
stos
pusha
dec
cmp
sbb
cmp
and
mov
lock
cmpsb
sbb
and
and
ret
xor
pop
jmp
es
xor
sahf
popaw
mov
xor
push
dec
sti
sbbb
lahf
js
nop
mov
jmp
in
call
nop
in
fmul
lods
scas
cmp
enter
cmpl
repz
clc
jne
push
push
scas
clc
pop
test
adc
scas
pcmpeqb
pop
cmpl
or
inc
or
push
or
hlt
sahf
or
test
mov
mov
pop
sar
sub
push
test
pop
movzbl
dec
and
popa
jne
fimuls
movzwl
repnz
mov
jns
sbb
sbb
jns
ss
sti
push
pop
mov
sub
cwtl
pop
or
xor
jmp
icebp
daa
test
adc
xor
mov
insb
xor
inc
ret
pusha
stos
call
arpl
pop
cmp
ret
roll
push
andl
add
sti
pop
sub
cmp
rep
stos
mov
jle,pt
cmpb
mov
test
sbb
cmp
add
dec
movsl
enter
inc
out
andl
lahf
lea
clc
inc
pop
mov
sahf
sub
je
mov
ja
mov
sbb
add
cmp
ja
sub
mov
out
push
es
inc
inc
cmpb
aam
cmp
or
cmp
add
ror
pusha
stos
push
fadd
lods
pop
push
mov
shll
sbbb
loopne
mov
mov
movsl
jmp
cmpb
inc
lret
inc
nop
mov
cmp
jno
sbb
mov
nop
cmpsb
jmp
push
push
add
fsubrs
xchg
stos
add
push
loope
inc
sub
mov
xchg
inc
xor
ds
dec
testb
push
inc
fwait
and
ljmp
mov
sub
xchg
cld
jne
cmc
rcr
pop
es
cmp
sbb
push
pop
push
rcrb
inc
je
mov
int
sbb
or
push
and
push
jecxz
out
popa
sarl
lods
lret
or
sahf
pop
or
rcrl
inc
inc
sub
push
jg
mov
decl
adc
jb
mov
movb
or
push
repz
add
bound
pop
jbe
ret
push
inc
jg
loopne
mov
shr
or
and
rep
inc
inc
pushf
jns
in
mov
push
push
in
cli
call
sbb
or
add
std
cmp
repnz
cmp
push
int3
jo
nop
ds
clc
ja
lcall
mov
test
je
mov
fucom
pop
adc
nop
shr
xor
je
sub
sub
and
clc
shll
jmp
sub
ljmp
pop
fs
stos
movsl
mov
enter
mov
std
insl
mov
or
push
popf
cmp
and
loopne
icebp
dec
sbb
xchg
mov
std
test
arpl
test
xchg
mov
js
dec
lock
test
clc
nop
int3
je
sbb
sar
divl
movsb
xor
pop
push
sti
js
int3
jp
mov
jmp
lea
clc
pop
ficoms
roll
mov
inc
inc
in
sahf
cmp
mov
push
lock
xor
test
call
fnstcw
in
sbb
int3
bound
ss
add
jmp
or
jmp
pop
mov
fdivr
jmp
cld
rorb
pop
inc
or
in
push
int3
mov
inc
add
sub
jnp
cmp
loope
sti
cs
pop
xor
cli
daa
test
pushf
adc
andb
inc
aas
mov
push
ficompl
sub
mov
into
es
ficomps
add
ja
and
cli
xchg
jne
sub
and
add
jle
arpl
push
ja
or
imulb
add
rorb
adc
jo
add
xchg
out
add
dec
jno
pop
add
adc
inc
stc
xchg
xchg
addr16
and
cmp
rol
std
pop
pop
dec
push
cld
ficoms
xor
pop
stos
jne
mov
mov
js
subb
cmp
jbe
clc
jb
mov
adc
and
inc
jb
rep
jmp
and
adcb
jmp
add
or
loopne
test
cmpsl
cmp
sub
or
insb
pop
mov
rorl
mov
or
lods
ds
lcall
lea
xchg
cmpsb
stc
push
dec
add
add
lahf
inc
inc
inc
jg
iret
jnp
add
push
hlt
push
in
in
push
cmp
aam
mov
mov
call
call
repz
repz
hlt
clc
clc
cld
inc
xchg
add
popa
clc
adc
loope
xor
push
or
xchg
nop
mov
pop
xor
pop
repz
push
andl
adc
lea
into
jl
cld
jmp
adc
mov
fxch
pusha
mov
sub
into
inc
mov
push
enter
adc
add
fiadds
dec
mov
lods
mov
push
and
and
mov
mov
push
pop
add
mov
dec
dec
sbbl
insb
jns
out
je
test
cmpsl
cs
sbb
out
sahf
out
adc
adc
out
sahf
or
or
repz
rolb
fsubs
push
add
andl
adc
push
push
imul
push
push
pop
sub
mov
ja
aad
lcall
xchg
clc
sub
push
push
ja
dec
inc
mov
sub
add
pop
cmp
and
or
std
cmp
test
inc
mov
pop
sub
daa
jmp
push
sub
xchg
dec
loope
pop
cmp
das
mov
adcb
ret
mov
sete
xor
push
ds
or
cli
inc
popa
dec
inc
xor
jb
imul
rolb
adc
add
mov
inc
push
xchg
mov
shr
cli
jp
imul
es
jge
mov
inc
xor
xor
adc
roll
clc
jne
sarl
jge
push
dec
pop
push
or
iret
jbe
mov
cmp
daa
ds
in
or
mov
jae
mov
call
out
lea
not
and
decb
push
ljmp
outsl
loopne
mov
cmp
sbb
mov
dec
push
jns
mov
mov
or
pop
clc
sbb
sbb
sbb
mov
aas
testb
and
loopnew
cs
jne
pop
cwtl
sbb
inc
mov
dec
pop
cmp
dec
jbe
ja
push
xchg
mov
ss
cmpb
shlb
cli
jbe
cli
jle
imul
addb
ljmp
push
adc
faddl
jnp
movsl
cltd
push
push
jle
jl
pop
add
add
jne
and
cmpl
or
xchg
aaa
jae
dec
mov
lea
pusha
lcall
sbb
or
pop
jl
cs
arpl
and
mov
sti
fisubs
jae
cmpb
push
mov
jmp
or
sbb
fisttps
push
lea
sbb
sub
lea
xor
inc
jno
dec
pop
add
cmp
or
mov
mov
sahf
aad
xor
cli
popf
mov
div
jnp
sbb
add
movsb
sahf
test
push
int3
xchg
aas
cmp
push
or
sti
inc
adc
push
decb
adc
mov
testl
js
jne
rcrl
jo
and
xor
sti
jmp
orb
mov
hlt
pop
push
dec
adc
push
lea
push
push
rorl
decl
push
in
jbe
je
xchg
mov
mov
mov
pop
mov
rcr
int
rclb
cmp
pop
jl
cmp
dec
pop
in
lock
pop
jno
jle
jge
pop
shr
sbb
mov
jmp
push
add
not
call
mov
xchg
mov
jae
mov
std
outsl
sub
cmp
push
and
or
jne
add
cmp
push
movsb
sti
out
jb
push
jne
mov
cmp
dec
adc
jge
out
jne
dec
jae
cmpl
or
jnp
push
mov
or
sbb
out
jle
sub
in
or
or
or
fcompl
inc
or
mov
cmp
mov
mov
mov
mov
jno
xchg
pop
mov
shlb
jo
push
lock
mov
mov
jne
mov
movsb
cmp
hlt
jg
sar
and
or
je
cld
xor
add
mov
in
xlat
in
dec
scas
into
jne
int
and
pop
test
jl
shl
inc
jmp
jge
fcomip
mov
stc
xchg
sub
icebp
test
add
mov
aas
jle
pop
cmp
ss
mov
sub
mov
cmp
shl
in
and
mov
decb
jne
ja
inc
aam
push
and
jmp
das
mov
inc
mov
sub
and
inc
mov
into
push
insb
xor
add
inc
adc
jp
clc
add
loopne
mov
ljmp
stos
xor
push
jl
test
inc
test
push
decb
jge
mov
push
jbe
xor
add
into
sbb
pusha
insb
or
adc
jmp
push
sbb
pop
or
jnp
arpl
sub
out
or
aam
push
dec
fbstp
mov
mov
cld
fs
xlat
pop
push
adc
xor
out
movsl
fcomi
mov
inc
lea
jne,pt
mov
shlb
cmp
xlat
mov
mov
lea
adc
das
add
cmp
jne
mov
push
std
mov
mov
adc
jnp
cmp
xchg
push
mov
fistpll
adc
je
jl
js
test
cmpsb
fs
xor
jne
pushl
leave
js
ficoms
mov
mov
sub
adcb
fisttpll
test
nop
inc
or
repz
sbb
sahf
loopne
ret
outsb
mov
shrb
rolb
divb
add
enter
add
dec
xor
cmp
sti
or
out
add
push
enter
mov
dec
cwtl
rorb
cli
ja
lea
pop
mov
orl
cld
or
inc
cld
lock
shll
sbb
decl
add
cmpsl
jmp
sbb
and
add
fadds
jbe
adc
add
sub
add
mov
dec
or
push
and
fisttpl
fs
inc
test
fidivl
mov
push
test
hlt
mov
jne
or
mov
pop
lret
shr
cld
push
lret
jae
loope
xchg
movl
xor
test
je
push
addr16
movsb
sub
dec
imull
ret
inc
je
and
push
add
jbe
sub
or
out
shr
jne
call
jnp
push
and
and
lods
inc
mov
pop
out
lcall
add
clc
mov
push
mov
ljmp
loope
mov
jne
jmp
mov
inc
mov
je
and
das
sti
popf
popf
aas
jne
pop
cmp
jecxz
je
inc
cmp
cld
or
mov
pop
pop
pop
ret
cmp
addr16
adc
mov
fs
inc
fidivl
xor
xchg
lcall
xor
push
push
add
sub
mov
xchg
push
or
jb
sbb
sahf
sbb
push
add
shlb
loop
or
mov
mov
test
int
or
mov
and
xchg
add
push
mov
aas
pop
jo
inc
push
push
push
pop
push
popa
inc
jno
adc
sbb
mov
mov
sbb
inc
aaa
mov
cmp
push
sub
cmp
cli
hlt
adc
adc
jb
adc
mov
shr
adc
cltd
jo
sbb
and
sbb
mov
pop
dec
cmp
cli
dec
rorl
xor
and
pop
imul
movsl
loopne
inc
push
outsb
and
rcrl
cmp
or
cmp
lock
mov
int3
mov
add
jmp
call
int3
loope
and
push
cwtl
fsubl
arpl
dec
lock
dec
mov
lock
cmp
je
testb
je
jl
loopne
mov
lock
stos
jg
cmpsl
rolb
gs
movsb
xor
mov
pop
gs
lods
movsl
cli
movsb
imul
test
fmull
ja
sbb
push
enter
mov
iret
je
push
data16
push
add
pusha
jmp
sbb
and
stos
add
je
push
js
gs
and
test
push
lcall
fmuls
and
sbb
cmp
out
jne
sub
ret
adcb
add
imul
lea
push
mov
out
push
dec
mov
pop
out
aaa
push
xchg
push
mov
mov
pop
and
mov
push
in
xchg
add
pop
mov
popf
lock
pop
sbb
xchg
adc
push
pop
sbb
loopne
je
lret
xchg
cmp
stc
hlt
js
sub
fdiv
push
push
jmp
lcall
negb
fistl
stos
movsb
push
jne
mov
push
jl
emms
and
sahf
inc
lcall
and
add
or
dec
add
push
je
cmp
movsl
push
loopne
jo
sub
fidivrs
into
dec
mov
shl
shl
adc
adc
fiaddl
je
rep
je
inc
dec
push
test
int
jle
inc
push
lahf
fcomps
nop
movsl
sahf
test
add
sub
jg
sub
add
out
mov
push
mov
rep
movsb
pushf
xchg
mov
lahf
fsub
mov
lock
mov
enter
mov
jbe
js
jo
push
mov
test
pop
and
mov
jo
or
push
sub
sahf
out
xor
inc
dec
push
xchg
aas
movsl
sahf
out
or
jg
stos
or
aas
push
cmp
cmpsl
sahf
jb
sub
add
das
jae
in
sbb
dec
hlt
inc
add
jb
jb
pop
or
shrb
xchg
lret
in
lock
cld
clc
in
mov
add
xchg
lret
or
fadds
add
out
and
add
repz
js
jb
outsb
je
insl
and
jb
jb
add
or
push
push
notb
add
dec
inc
add
inc
and
insl
sti
imul
cmp
sub
insb
je
jnp
sti
outsl
and
imul
outsl
dec
aaa
mov
mov
outsb
outsl
je
or
push
arpl
dec
fldt
ja
jno
or
outsb
outsl
ss
jl
jae
fs
jo
jb
jbe
jb
jne
dec
arpl
jmp
arpl
insb
push
mov
in
pop
push
gs
das
mov
mov
lds
jo
pop
imul
mov
jae
push
fs
push
cmp
inc
imul
xor
inc
aaa
insl
jne
je
push
push
pop
insb
outsl
arpl
mov
mov
popa
pop
add
fcmovnb
es
inc
jb
add
addr16
insl
inc
mov
andl
cmp
and
rcrb
popa
jb
jne
daa
test
scas
jae
push
xor
fmull
addr16
or
dec
fs
sbbl
decl
shlb
push
imul
push
inc
sub
and
dec
imul
fdivs
or
inc
sbb
push
test
add
jbe
adc
rorb
fdivs
loop,pt
mov
inc
gs
popa
fs
add
gs
pusha
add
jo
pop
push
sub
or
jae
popa
addr16
outsl
js
add
dec
xor
cs
sbb
fwait
jle
adcb
jp
out
pushf
xor
ss
popf
mov
mov
push
add
lea
xor
add
arpl
insb
fldt
repnz
rorb
sahf
dec
dec
sahf
sbb
in
dec
dec
mov
mov
add
js
or
jne
jbe
add
and
fstl
js
dec
or
jl
and
mov
adc
adc
and
sbb
sbb
lock
js
xchg
and
jns
jp
cld
push
lock
and
adc
loopne
popf
nop
mov
adc
sub
clc
push
mov
add
int3
pusha
cmpb
das
cmpsb
fisttps
mov
movsl
sbbl
in
add
mov
cmovo
pop
inc
mov
iret
mov
jmp
call
adc
std
xchg
jl
push
ficompl
mov
xor
fcomp
loopne
ja
cmp
add
jp
cmp
push
and
and
sub
adc
addl
jg
add
fcoms
and
add
add
inc
adc
adc
mov
mov
add
dec
gs
jo
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
outsb
or
fbld
and
popa
push
jo
outsb
outsw
and
push
jmp
fildll
ds
imul
outsb
fstl
mulb
push
jae
sbb
in
ja
jb
outsb
dec
push
outsb
push
aad
je
jo
inc
imul
and
popa
insl
xlat
rcrl
lods
inc
jbe
inc
repz
bound
xor
mov
mov
inc
les
outsl
dec
jbe
jns
mov
sahf
mov
pop
sub
fcoms
pop
lock
das
mov
and
inc
lock
jns
gs
push
loope
imul
ret
dec
fs
insb
jae
push
popa
insb
jne
sbb
sub
pop
jmp
mull
cmp
cmp
dec
mov
sbb
jns
insl
insb
js
sbb
xor
push
je
nop
ja
mov
mov
add
jb
adc
mov
ret
mov
in
xor
cmpsb
ret
je
outsb
sub
lods
sbb
cmpsl
push
jo
negb
adc
inc
dec
adc
cmpsl
and
cltd
lods
pop
outsl
xchg
int
fs
dec
mov
mov
sub
xor
inc
dec
jnp
fwait
roll
pop
ret
sub
pop
ds
jmp
add
out
pop
inc
mov
mov
icebp
add
call
push
roll
cmpl
or
push
dec
bound
mov
adc
cmp
adc
js
inc
outsb
insb
lret
aam
push
in
xor
arpl
push
jns
rcl
mov
jne
iret
lock
pushf
outsl
jecxz
dec
sbb
push
lcall
push
scas
je
jno
jbe
cwtl
dec
fwait
repnz
outsl
es
sbb
or
arpl
jns
jo
test
lret
out
mov
xor
insb
jo
add
test
lock
add
jge
or
lock
mov
cmp
add
xor
cmp
pop
xor
daa
add
lock
lods
adc
pop
addb
add
mov
adc
outsl
int
push
loope
mov
add
cmp
jnp
inc
add
dec
lock
mov
lock
pusha
add
xor
dec
fdivr
push
add
push
vorps
jl
outsl
fildll
enter
and
lock
or
sub
gs
jo
cmp
mov
sbb
out
lar
cmpl
push
push
idiv
outsl
sbb
add
aas
inc
lock
sub
fldt
mov
add
push
add
adc
inc
cmp
xor
outsl
fwait
outsl
mov
dec
add
lock
xor
out
lock
add
add
push
adc
cmp
mov
xor
add
add
dec
lock
xor
sbb
xor
scas
loopne
incb
add
cmc
add
sbb
cmpsl
lock
adcl
add
add
cmpsb
mov
sti
xchg
addr16
sbb
xor
add
das
aaa
dec
shrl
cmpsb
inc
mov
xchg
mov
sahf
or
imul
lock
addb
and
dec
test
add
jno
xor
loopne
fisttpl
adc
sbb
insl
add
dec
cmp
push
repnz
inc
lock
mov
jnp
xor
lods
mov
add
sub
in
jbe
fcoms
mov
add
fidivrl
pop
insb
sbb
add
inc
addr16
push
clc
add
mov
out
xchg
push
pop
add
loopne
das
and
cmp
add
aaa
insl
rcrl
and
mov
fistps
xchg
lock
lods
and
mov
cmp
sub
or
js
push
xchg
sbb
movsl
test
inc
clc
int
xor
add
nop
ret
jecxz
jp
inc
cmp
lock
rcl
jnp
inc
cmp
into
lock
add
and
jb
add
stos
lock
pop
cld
push
add
dec
add
add
mov
xchg
outsb
dec
rcll
dec
inc
xchg
int3
fiadds
inc
aad
dec
mov
pop
lock
add
mov
jg
into
mov
lock
ja
mov
es
xor
mov
add
mov
bnd
adc
inc
jbe
fldln2
out
mov
add
xor
outsb
lock
add
lds
add
imul
movsl
add
inc
incl
add
jns
ret
xor
lods
push
inc
lock
push
sub
jns
jecxz
xchg
xlat
xor
xor
dec
sarb
loop
jbe
mov
mov
je
mov
jb
cmpsb
mov
fwait
das
cmp
aam
clc
clc
iret
add
cmp
add
rcrb
sbb
add
ljmp
push
mov
and
mov
shrl
jae
xor
roll
mov
leave
fidivrl
stos
xor
sarb
fstps
dec
lahf
fcompl
stc
mov
jg
mov
push
jp
add
inc
and
lret
roll
lods
xchg
mov
adc
inc
jge
cmp
jae
aas
push
in
fcomi
repnz
dec
fimuls
mov
leave
js
xorb
jmp
inc
sbb
into
mov
dec
mov
add
xor
push
pop
add
sti
mov
xor
add
imul
lock
mov
test
jno
in
xor
lock
mov
popa
mov
stos
add
jb
sarb
jg
push
dec
orl
lock
pop
outsl
pop
movl
out
scas
outsb
ss
mov
test
lock
jge
pop
or
sub
jo
inc
add
dec
jne
push
jae
xchg
jns
inc
add
jbe
jg
icebp
add
mov
imul
insb
cmp
push
push
adc
shrl
iret
cs
jmp
inc
cs
pop
lock
pop
mov
jo
add
imul
lds
cmp
mov
cmp
sub
mov
adc
xor
and
dec
dec
jbe
xchg
pop
add
aas
inc
add
cmpsl
jmp
fwait
call
movb
dec
push
shrl
repnz
add
lock
cmp
cs
repz
add
lock
xor
hlt
push
addl
andb
jle
or
mov
aam
aaa
fnsave
cld
jmp
loopne
add
fs
cmp
xchg
test
stos
add
jne
leave
mov
aas
loopne
xor
add
lock
mov
fisubl
test
inc
xchg
mov
inc
jbe
cmpsb
push
push
or
or
les
dec
inc
cwtl
xor
xchg
fstps
out
xchg
jnp
lcall
cmpsb
pop
add
push
push
mov
push
adc
mov
push
mov
add
sub
cmp
lock
jno
add
add
lods
fdivs
rcrl
inc
xor
mov
pop
inc
xchg
addr16
or
jo
dec
dec
lcall
mov
outsb
add
ret
mov
aas
cmp
lock
les
pop
pop
adcb
fs
mov
inc
add
stos
mov
cmp
std
sbb
lret
and
or
in
ja
push
or
pop
or
or
call
push
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
imul
call
ds
pop
adc
and
push
xor
adc
push
sbb
or
pop
sbb
adc
pop
inc
imul
es
fcoml
daa
cmovb
or
adc
adc
sub
jg
adc
sbb
or
adc
and
and
adc
pop
adc
shlb
push
inc
xor
sbb
outsl
sbb
clc
das
js
adc
or
push
movups
aam
cmp
ret
jg
jg
sbb
pop
add
sub
sbb
add
dec
push
or
sbb
or
inc
jle
sbb
push
or
or
mov
or
add
push
sbb
adc
or
mov
or
inc
jo
shll
push
push
push
xor
or
mov
rcrl
bound
mov
sbb
pop
and
lahf
pop
jo
or
push
sbb
xor
fiadds
pop
lods
adc
push
adc
rcrl
orl
xchg
add
movsb
push
add
mov
add
add
or
fmuls
add
push
loopne
adc
test
push
inc
add
dec
and
std
rolb
mov
add
add
or
inc
out
daa
adc
mov
jp
dec
xor
cs
add
imul
push
add
or
add
js
push
rolb
test
aam
lock
push
int3
xor
iret
add
scas
movsb
add
sbb
xchg
push
js
jb,pn
ret
add
or
or
test
negb
dec
dec
cld
shrb
repnz
mov
sahf
jae
arpl
jns
out
aas
loopne
or
jb
scas
dec
jbe
lock
jbe
bnd
call
push
xchg
and
scas
sbb
sub
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
