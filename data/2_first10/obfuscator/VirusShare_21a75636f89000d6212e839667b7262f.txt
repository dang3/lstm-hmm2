push
call
ret
ret
andb
lret
mov
mov
dec
int
jne
movsb
int
xlat
or
stos
inc
xchg
jnp
add
call
inc
pop
popf
dec
or
push
ss
or
inc
pop
sub
cmp
cmpsl
out
cli
mov
mov
sub
push
xlat
hlt
js
ret
xchg
mov
fisubrl
adc
jge
mov
cmp
or
or
lcall
aas
mov
sahf
mov
xor
dec
sub
dec
cmp
xor
pop
bound
test
aaa
or
dec
lds
loop
xchg
lods
jle
or
mov
frstor
imul
pop
arpl
pop
lcall
insl
out
nop
xor
mov
ja
dec
push
inc
sub
adc
xor
sub
jmp
sbb
js
inc
pop
sbb
mov
sbb
pop
jo
addr16
daa
pop
jl
imul
fcomps
pushf
fidivs
in
and
push
popa
pop
add
mov
xchg
inc
sbb
inc
push
scas
outsb
lret
adc
adc
mov
out
or
pop
inc
icebp
scas
cmp
in
es
arpl
into
jo
add
push
fldenv
loope
faddl
sbb
and
lahf
jmp
jbe
pop
xor
push
mov
add
ds
adc
fdivrs
sbb
lret
imul
shll
ds
add
orb
dec
mov
std
jle
pcmpeqb
xchg
cmpsb
or
sarb
jnp
inc
cmpsb
shl
psllq
addl
adc
mov
or
std
mov
loopne
inc
adc
loope
sub
xor
out
jp
loopne
cli
idivl
jge
mov
add
je
jns
push
add
and
push
ret
shll
loope
inc
push
cmp
inc
cvtdq2ps
jp
and
inc
or
fimull
mov
xchg
xchg
jae
test
push
or
scas
add
add
nop
sub
jmp
mov
cmp
or
loop
es
bsf
push
movsb
cmpsb
mov
mov
div
cmp
pushf
stos
cmp
xor
sub
fstpt
mov
mov
mov
outsb
fldenv
sub
add
sub
nop
out
scas
in
pop
jp
cli
or
or
xchg
xchg
xchg
stc
inc
or
cli
or
idiv
add
je
sti
xchg
mov
jmp
mov
rcrb
dec
push
xor
mov
jb
cwtl
dec
stos
and
jl
rol
pop
sub
ja
add
or
mov
cmpsl
dec
ficompl
push
aaa
bnd
push
addb
dec
add
and
mov
int3
mov
sbb
cmp
sub
and
pop
push
lods
mov
adc
ja
out
scas
lods
xchg
mov
lea
push
cltd
xchg
push
int
xchg
xchg
mov
lods
clc
jge
xchg
das
jecxz
xlat
in
out
adc
ljmp
std
icebp
push
test
push
rcr
or
call
inc
mov
jb
fdivl
gs
sbb
xchg
sahf
inc
sbb
cmpsb
sti
out
shl
cmp
add
mov
xor
daa
push
ss
push
xchg
in
das
or
inc
adcb
rep
rcrb
pop
scas
add
fwait
add
pusha
push
popf
and
imul
test
mov
pop
xchg
pop
jmp
loop
out
push
sar
adc
inc
jle
xchg
fcoms
imul
lods
mov
mov
jg
addl
addl
and
imul
hlt
iret
sbb
add
add
incb
sub
nop
rolb
sub
lahf
jne
add
xchg
cmp
cmp
enter
cmpl
cmpsl
sti
call
push
mov
loopne
int3
bound
cmp
popa
mov
jl
jno
cmp
shlb
push
andl
adc
fists
ja,pn
rclb
out
xchg
daa
pop
jmp
sbb
pop
fdivl
jmp
or
jne
ja
xlat
mov
test
pmuludq
mov
mov
xor
sahf
push
vmread
call
mov
adc
sub
test
mov
icebp
dec
mov
je
adc
iret
push
pop
pop
mov
pop
je
fs
xchg
repnz
loop
lret
sbb
jne
xlat
and
out
sub
mov
mov
and
leave
push
pushf
ret
xlat
loop
mov
adc
add
movsl
ja
loopne
outsl
call
jg
cmc
test
js
pop
ljmp
out
inc
pop
mov
rorb
movsb
jl
cs
sti
aam
fldl
xchg
inc
sub
mov
mov
xchg
inc
push
push
data16
sub
dec
sub
call
jl
mov
call
mov
daa
out
stc
and
enter
imull
jmp
movsl
push
xchg
ljmp
xchg
mov
insl
add
pop
ret
js
sub
outsb
jp
push
jo
and
push
mov
mov
jns
in
push
xchg
sbb
lahf
adc
ds
mov
mov
lcall
inc
shrb
fs
icebp
psllq
faddl
imul
push
inc
mov
jecxz
gs
mov
push
daa
lcall
jecxz
hlt
xor
inc
and
sub
push
adcb
ret
jmp
sub
mov
ret
sbb
test
push
sbb
cmp
or
ja
fcompl
iret
xor
test
mov
aad
fstpt
inc
addr16
popf
jno
bnd
out
mov
sub
mov
shrb
lds
fs
xchg
jb
rorl
ja
xchg
pop
andl
out
xor
add
push
cltd
dec
mov
sbbl
mov
adc
xchg
fldl
lock
lods
sub
lds
add
adc
mov
popf
or
jns
sub
mov
dec
cli
push
iret
lods
add
sub
mov
sbb
mov
inc
popf
inc
cltd
sbb
push
cwtl
fisttps
rorl
jle
imul
mov
pop
fwait
aad
and
fistps
lock
scas
pop
and
push
aam
hlt
adc
adc
icebp
mov
enter
mov
pop
xor
xchg
aaa
and
jp
jmp
movsl
add
fistps
movsl
xchg
in
inc
arpl
xor
sbb
gs
lds
push
roll
adc
paddusw
les
out
jmp
ss
xchg
jge
dec
je
lods
sub
xchg
mov
pop
sub
sub
fsubrs
dec
pop
mov
jne
ds
mov
out
in
pop
cmp
mov
and
cmpsl
test
lret
and
mov
iret
push
or
push
sbb
notb
test
test
dec
je
flds
orb
add
stc
nop
sbb
lock
add
sub
cmp
int
lea
outsb
js
push
test
push
pop
xorb
test
div
arpl
xchg
cld
sub
mov
dec
mov
inc
mov
sub
cmp
jmp
sbb
shll
sets
lret
inc
xchg
in
inc
lods
sub
cmp
lea
adc
dec
dec
test
cs
inc
xchg
mov
pop
repz
add
sbb
inc
jp
mov
mov
cld
enter
dec
inc
inc
into
adc
pusha
lahf
call
adc
or
lret
xchg
adc
mov
xor
add
ret
adc
adc
idivl
enter
leave
fadd
addb
or
jp
leave
inc
push
xor
xor
mov
push
mov
xchg
adcl
inc
mov
scas
jge
aas
call
and
les
sbb
call
adc
jae
jge
push
cmp
and
iret
mov
xchg
adc
rorb
mov
icebp
daa
adc
sbb
test
nop
mov
sti
fdivr
pushf
adcl
pop
jp
xor
notl
push
mov
ds
and
push
and
jecxz
ret
js
repnz
stc
xchg
or
pop
push
lea
mov
lods
subl
sahf
pop
mov
out
addr16
mov
imul
fisubrl
fnstenv
mov
xchg
inc
lods
popa
test
es
cmp
push
lods
jnp
inc
add
sub
pushf
mov
repnz
dec
and
fwait
push
adc
xchg
js
nop
inc
xchg
dec
mov
movsl
jno
les
or
loop
push
lock
xchg
adc
xchg
xchg
lcall
cmp
mull
jecxz
loop
lahf
pop
push
lret
lahf
xorl
repnz
xor
inc
out
xchg
mov
movsl
ret
cld
xchg
adc
dec
jb
ret
xor
addl
leave
push
mov
push
jmp
shll
mov
test
push
mov
or
cmp
mov
xor
sti
xor
mov
mov
movsl
scas
jmp
data16
sbb
out
xor
cmovg
sub
ja
ljmp
outsb
push
dec
pop
loopne
cli
and
aas
dec
insb
or
mov
and
jbe
mov
sbb
stos
bound
jae
mov
adc
pop
xchg
aas
les
mov
out
xchg
or
mov
mov
pusha
fldt
sbb
test
jb
hlt
push
and
ss
push
sub
inc
sub
push
movsb
pop
jg
popa
pop
jb
fimuls
cmp
popl
fnstenv
sahf
gs
mov
dec
xlat
xchg
jle
orb
aas
test
adc
push
gs
xor
popa
addr16
mov
aad
movsb
inc
and
mov
popa
out
xor
add
test
adc
xor
mov
jp
mov
xor
fbld
repnz
push
ss
outsb
repnz
xchg
pop
mov
cs
sub
pop
repnz
mov
mov
add
sub
dec
mov
movsb
add
aad
pop
mov
leave
mov
pushf
cmp
or
inc
push
and
imul
sbb
jae
mov
dec
cli
out
jge
mov
call
ja
xlat
or
arpl
jo
mov
xorb
mov
xchg
xor
mov
insl
aam
dec
push
mov
shlb
sbb
std
lea
pop
clc
cmp
inc
movsl
sbb
mov
out
subl
popa
xchg
insb
fcmovnbe
dec
movsb
mov
jecxz
push
cmp
inc
ja
mov
or
pop
mov
mov
mov
mov
push
out
aas
adc
jbe
mov
pop
sub
out
push
mov
imul
pop
sbb
test
rcl
mov
shrd
js
mov
subb
sahf
mov
push
cmp
jge
xchg
xor
mov
mov
aaa
cmp
jnp
stos
mov
push
adc
lock
aas
mov
push
add
insl
inc
mov
dec
push
add
imul
lret
insb
lahf
shlb
fisttpll
push
nop
pop
les
mov
fwait
mov
insb
sub
dec
sbb
shll
sub
dec
push
je
stos
les
sbb
in
jnp
xor
in
mov
std
data16
fisubrl
stos
pop
std
and
or
jle
out
vmovsd
repz
xchg
inc
je
test
in
clc
inc
stos
inc
adc
sub
js
imul
divb
mov
adcl
les
mov
outsl
aad
cmp
pushf
test
int
xchg
stc
dec
adc
jl
mov
imul
inc
gs
and
pop
repz
push
and
enter
test
push
scas
enter
jp
sub
lds
fwait
and
stos
sti
popf
xor
or
ret
dec
fwait
lcall
xor
enter
outsl
outsl
xor
enter
ja
xor
lods
ja
mov
mov
jle
inc
fidivrs
pop
jne
sbb
hlt
adc
dec
call
or
xor
xchg
jb
repnz
mov
adc
xor
sti
fsub
xchg
pop
test
mov
and
pusha
sub
fidivs
test
inc
jle
mov
mov
jno
sbb
push
pop
mov
mov
scas
inc
push
inc
shrb
inc
cmc
test
push
scas
rcll
mov
fmul
mov
daa
sahf
mov
pop
bnd
push
ja
jnp
sbb
jl
dec
sbb
sub
adc
mov
lret
xlat
cltd
ljmp
ficompl
out
cmp
or
loop
into
sbb
cld
xchg
sbb
xchg
xor
jecxz
dec
or
jo
testb
out
fwait
sar
enter
loopne
sub
pushf
jno
movsb
mov
into
adc
and
jno
mov
scas
repnz
fldt
popa
sbb
loope
xchg
rcr
sub
popf
clc
jnp
cmpsb
loope
pop
mov
lret
daa
and
out
or
scas
mov
mov
mov
xchg
sub
adc
in
jns
stos
hlt
sub
xor
and
fmull
cs
cvtpi2ps
movsb
xor
mov
cmp
lds
inc
daa
stos
jb
dec
sub
addl
movsl
in
orl
inc
jl
adc
xchg
and
and
insl
push
jmp
push
push
outsb
adc
repz
mov
icebp
pop
fidivrl
jnp
add
sti
sbb
push
jmp
int3
mov
xchg
cmc
lock
out
es
push
pop
cmp
jmp
stc
sti
add
sbb
push
cmp
sbb
add
xchg
sbb
adc
or
mov
imul
add
push
insl
lahf
dec
mov
js
pop
xchg
fisttps
pop
data16
inc
mov
pop
mov
cmp
push
out
jb
mov
aaa
pop
std
sub
cmp
stc
xor
int
mov
mov
dec
xlat
adc
repnz
test
in
in
pop
ret
mov
imul
lahf
aam
pop
ljmp
rcll
imul
lock
mov
jbe
cmp
cmp
push
push
jecxz
aad
cld
cltd
lds
adc
adc
inc
dec
and
sbbl
out
in
cmp
bound
je
pop
add
inc
jecxz
lcall
push
jo
je
jbe
sbb
clc
pop
shll
ss
xor
leave
test
negl
pop
pop
sbb
or
cli
stos
or
fisubs
std
shl
lcall
adc
xchg
outsl
daa
mov
in
inc
dec
bound
xor
ljmp
inc
and
xlat
or
jl
jae
out
pop
enter
sub
and
into
loope,pt
cmp
lcall
xor
loop
lahf
jge
inc
or
add
loope
jae
test
inc
stos
fstpt
adc
lock
mov
pop
push
sub
mov
xor
sbb
and
mov
ja
mov
outsb
dec
movsb
add
inc
cwtl
or
lsl
adc
mov
addr16
jmp
adc
out
lret
push
mov
cmpsl
mov
lcall
push
mov
dec
sbb
icebp
stos
jbe
push
jb
pop
bound
inc
mov
mov
popa
mov
pop
adc
test
bnd
lea
mov
fiaddl
mov
sbb
sub
push
sub
outsb
add
or
lea
in
test
rclb
and
cmp
iret
jae
add
xchg
mov
pop
jb
sarb
dec
ja
mov
out
xchg
mov
and
pop
cmp
leave
shr
push
rcll
pop
dec
inc
cmp
adc
pop
jnp
pusha
mov
ret
sub
insl
ds
inc
mov
outsb
fs
mov
xchg
daa
and
cltd
dec
bound
out
pusha
stos
lret
sbb
mov
pop
inc
jno
or
xchg
mov
pop
pop
fbstp
sub
xchg
bound
adc
mov
data16
outsl
and
push
int3
repz
outsb
push
clc
lcall
int
sub
jecxz
fsubrl
repnz
jp
repnz
sbb
std
iret
inc
lcall
push
out
pushf
sbb
pop
rol
fimuls
lea
xchg
ret
or
jp
stos
repz
inc
jmp
mov
mov
sahf
std
std
aas
or
popf
stos
cltd
xlat
mov
xlat
pop
js
push
sub
mov
int
xor
sub
inc
jge
scas
push
push
nop
out
sub
inc
roll
daa
leave
and
ja
jg
popf
jle
push
or
stos
popf
xchg
inc
inc
lds
adc
pop
xor
imul
movsb
fsubl
mov
mov
mov
or
outsl
or
cld
loopne
dec
int
dec
loop
test
cmp
sbb
nop
sahf
int3
inc
cmp
inc
aam
cmp
repz
inc
add
test
add
jb
jge
jbe
sub
cmp
xor
repnz
fidivrl
xchg
or
cmp
jl
fisubl
movsb
adc
dec
push
inc
imul
pop
scas
push
xchg
repz
push
fmuls
out
push
repz
mov
sarb
pop
cld
inc
lret
pop
sbb
sar
std
jl
test
jae
push
fldt
adcl
jmp
push
popa
add
in
inc
ja
ret
mov
add
frstor
lods
cli
jb
in
mov
pop
push
call
fidivrl
mov
clc
xlat
mov
cld
call
subb
loop
std
loopne
cltd
ret
sbb
lea
mov
jnp
and
xchg
pushf
outsb
push
leave
mov
lcall
in
inc
daa
mov
push
or
adc
jae
mov
xchg
in
movsb
out
and
fcoml
test
sbb
inc
aad
xor
sar
int3
xchg
fisubs
add
sub
jmp
dec
mov
push
sahf
pop
and
arpl
lcall
out
push
arpl
push
pop
jecxz
addr16
jae
fidivl
popa
inc
xchg
push
lds
subb
jo
lea
xchg
orb
inc
out
cmp
sti
mov
fwait
push
nop
inc
das
adc
lcall
add
icebp
cmc
push
gs
in
inc
push
push
into
loopne,pt
xor
inc
dec
flds
fstpl
mov
and
jmp
sub
out
dec
dec
mov
mov
xor
jge
lea
push
mov
add
sub
dec
leave
sub
inc
inc
insb
mov
fs
push
aad
or
cmove
inc
rclb
mov
jnp
xor
and
xor
hlt
test
enter
or
test
test
les
cli
hlt
lea
ret
pop
add
mov
push
inc
loop
into
std
mov
mov
jnp
fstp
andb
icebp
popa
mov
inc
jmp
cmp
scas
jp
dec
mov
mov
fcomps
pop
orl
xchg
aad
jne
outsl
adcl
jnp
mov
push
add
data16
adc
sbb
pop
add
int3
jae
insl
mov
mov
shlb
bound
cmc
cmpsl
aaa
sbb
pop
pop
sbb
mov
sbb
mov
lods
stos
cli
mov
jbe
gs
or
jl
loopne
xchg
sahf
dec
cld
cwtl
cmp
test
inc
addr16
inc
xor
adc
sub
xor
mov
xchg
mov
or
imull
es
pop
mov
orb
and
in
aad
mov
out
repnz
leave
sub
pushf
mov
fildl
test
andb
xchg
mov
lea
push
stos
push
adc
mov
sti
lret
push
mov
ja
mov
sub
jle
enter
xor
out
dec
sarb
xchg
jge
xor
cmp
lcall
leave
dec
sbb
xchg
jbe
mov
mov
push
or
jns
add
lds
addr16
pop
jno
nop
xor
and
cmp
enter
sub
fwait
mov
and
xor
scas
push
push
imull
int
xchg
jae
cltd
pop
push
mov
jne
inc
pusha
inc
imul
or
cs
adc
jnp
scas
das
jp
cmpsl
loope
or
dec
ss
loope
lods
enter
in
mov
cs
mov
mov
inc
pop
mov
adc
lahf
jl
push
xchg
int3
and
push
addr16
test
cltd
or
cwtl
inc
lods
pop
pop
push
jb
mov
inc
ffree
rcll
xchg
lock
add
mov
mov
hlt
mov
xchg
scas
mov
je
bound
dec
imull
push
pop
sbb
or
aaa
ret
hlt
lahf
sub
ret
mov
cli
mov
jle
outsb
sbb
xchg
scas
sbb
ds
ret
jae
pop
mov
sti
pop
insl
mov
testl
in
xchg
add
cmc
mov
push
pop
fnstcw
push
scas
cltd
in
jo
imul
sub
scas
push
xor
jg
movsb
mov
fs
or
sar
bound
flds
or
out
fldcw
iret
dec
cltd
push
inc
ja
jb
push
jns
push
clc
cmc
add
jnp
subl
pop
nop
cmp
cmp
fsubr
testl
aad
addr16
fsubrs
cmpsl
mov
sub
inc
add
or
sahf
sbb
je
pop
mov
mov
bound
inc
in
pop
mov
xorb
in
sub
push
or
mov
pop
and
jbe
scas
lahf
insb
jmp
jl
mov
xchg
and
xor
cmpsl
and
lea
xchg
paddq
repz
mov
in
imul
jg
data16
mov
ss
push
lea
adc
mov
aaa
push
cmp
mov
pop
test
cmp
mov
add
lret
bound
sub
xor
in
xor
mov
scas
xchg
xchg
mov
insb
xor
lret
dec
or
pop
mov
sahf
pusha
inc
sbb
mov
xchg
in
arpl
and
dec
push
shr
.byte
xchg
.byte
sbb
xor
add
add
loop
pusha
xchg
in
iret
aas
stos
jbe
iret
bound
daa
pop
scas
mov
call
xchg
mov
or
pushf
or
mov
into
xor
insl
inc
mov
jo
dec
fnstsw
dec
scas
ror
xorl
xchg
mov
fwait
enter
repnz
and
lret
and
and
add
ja
fildl
inc
add
inc
mov
pop
pop
xchg
rol
std
in
mov
push
into
push
pushf
sub
push
addr16
xchg
rclb
fbstp
and
pop
enter
movsl
jle
and
cld
and
mov
push
adc
push
sub
xchg
shr
neg
adc
jecxz
scas
fwait
repnz
or
lods
sub
mov
sbb
inc
pop
into
xlat
clc
nop
aam
push
sub
cmc
and
aaa
insl
dec
inc
iret
push
cmp
jae,pn
inc
adc
cmp
mov
sbb
fistpll
imul
sbb
cmpsb
mov
dec
jl
aas
jmp
push
inc
mov
mov
in
push
insl
ljmp
mov
mov
push
mov
pop
xor
pop
negl
sub
xchg
pop
pushw
das
inc
mov
or
xchg
add
les
test
mov
movsl
inc
jp
fldcw
inc
outsb
inc
les
loopne
push
leave
aas
rorb
iret
xor
aaa
mov
dec
mov
dec
mov
jl
repnz
mov
shrb
das
out
dec
cmc
push
sarb
in
pop
repz
adc
sub
popf
cmp
rcll
ds
mov
adc
jne
out
jbe
push
.byte
aaa
inc
sbb
cmpb
sbb
add
inc
jl
popf
jmp
mov
and
aaa
das
iret
cs
fldl
lret
pop
or
loope
insl
jp
inc
push
outsb
addb
into
es
and
popl
push
mov
test
ja
or
popa
cli
cmp
pop
divl
cli
mov
push
add
mov
cmp
dec
lods
adcl
xor
fwait
cmp
movsl
xor
sbb
and
pop
adc
addb
mov
cmp
lcall
mov
cmp
icebp
subl
lret
push
mov
ss
mov
mov
push
add
mov
xorl
xorl
outsl
and
push
cltd
je
inc
icebp
add
mov
inc
int
sbb
pop
xchg
ss
push
adc
ja
stos
stc
inc
pop
insl
mov
pop
xchg
aam
popa
fcmovbe
mov
sub
inc
and
cmc
push
movsl
je
mov
enter
sub
dec
and
lret
call
and
adc
dec
sub
cwtl
jg
vmovq
cmpl
inc
adc
mov
stc
cli
or
xor
add
ds
jecxz
ret
dec
lahf
js
dec
xor
dec
das
iret
scas
and
inc
repnz
sub
push
mov
in
mov
test
dec
arpl
loope
adc
aas
popf
inc
int3
push
popf
rclb
es
lods
aas
push
xchg
scas
insl
fmull
add
in
lock
outsb
aam
mov
std
dec
rclb
sbbl
dec
inc
inc
cmp
dec
cmp
mov
cltd
adc
add
imul
imul
jno
push
loope
sub
subb
mov
lcall
inc
inc
jnp
add
sub
sbb
cwtl
cs
sub
pusha
jl
js
inc
lcall
lret
mov
dec
scas
cmpb
push
pop
jo
adc
mov
xchg
testb
in
lret
stc
in
xor
les
dec
adc
adc
iret
and
sti
xor
aaa
shlb
pop
pop
push
sahf
stos
fisubrl
pop
rolb
and
adc
dec
les
test
aaa
je
dec
mov
mov
add
pop
movsb
and
call
icebp
pop
or
adc
aad
pushf
cli
rcrl
out
push
sbb
popa
xchg
pop
dec
cmp
adc
mov
lcall
xchg
mov
mov
push
mov
push
ror
xor
mov
xor
sarl
fs
fdivrs
sti
clc
movsb
decb
add
pop
subb
shll
sub
pop
xor
inc
loopne
inc
push
ficompl
loopne
xchg
lods
xor
cmc
push
sub
mov
stos
mov
push
and
xchg
fiadds
call
loop
adc
mov
in
gs
stos
ss
roll
movsb
mov
stc
add
push
xchg
pop
sub
xchg
and
push
jo
sbb
test
jl
icebp
scas
lock
or
sbb
loopne
add
lock
sbb
imul
xor
out
dec
mov
push
fs
jnp
iret
jne
dec
jmp
stos
fildll
les
cmp
mov
fisttps
mov
std
push
mov
add
or
cltd
gs
inc
pop
add
add
jo
add
add
addb
add
add
add
add
add
add
sub
add
cwtl
add
orb
add
push
add
add
add
add
add
jo
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
int
add
add
add
add
add
add
test
add
lods
add
xor
add
sbb
add
inc
add
addb
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
push
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
add
add
xor
add
sbb
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
add
add
addb
add
add
add
cwtl
add
add
add
add
add
add
add
add
dec
add
inc
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
sbb
sub
mov
jmp
push
enter
jl
xor
es
ljmp
or
andl
call
in
bound
jno
pop
lea
adc
sub
out
cmpsb
push
pop
push
mov
out
rcrl
add
sbb
test
stos
push
sbb
stos
aas
in
popa
inc
popf
mov
xchg
jne
fwait
jl
sub
mov
mov
push
jp
push
mov
dec
rolb
inc
sarl
negb
mov
pop
sahf
push
fnstenv
ds
lods
mov
mov
mov
sbb
and
sbb
adc
jmp
push
ja
sub
xor
cld
push
das
shlb
push
fldt
and
cmp
outsb
in
pop
pop
and
mov
cld
out
and
and
inc
xor
sub
rorl
adc
aad
es
repz
outsl
insb
je,pt
sub
cmp
and
cmpsl
cmp
xchg
sarb
xchg
inc
jl
sub
jno
adc
add
jg
pop
fiadds
push
insb
cmpsl
pop
mov
icebp
jne
fadds
outsb
iret
pop
scas
xchg
jno
imul
loop
xchg
test
test
sub
mov
test
in
xchg
int3
push
outsl
push
shrl
popa
lock
pop
xchg
add
mov
or
xchg
xchg
lret
nop
dec
test
pop
xor
test
gs
pop
test
ret
cmp
mov
sbb
sub
inc
out
scas
push
nop
ja
sub
div
mov
xlat
push
test
jg
xor
cmp
out
js
sbb
mov
loop
push
sub
sbb
out
aad
shrl
bound
add
call
push
scas
cmp
mov
inc
xchg
or
imul
insl
stos
sub
push
mov
nop
mov
enter
mov
xor
adc
mov
lock
movsb
mov
cs
dec
mov
int
je
inc
ret
outsl
cmp
clc
sub
inc
mov
fistl
add
mov
mov
dec
dec
loop
jae
mov
sub
lock
leave
imul
test
ja
pusha
pop
in
mov
fisubl
jno
adc
mov
pop
sbb
ds
jp
sub
cmp
in
push
out
mulb
cwtl
out
pop
inc
adc
popf
out
fcomi
es
mov
fs
or
jge
popf
or
insb
stos
clc
lds
ljmp
mov
cmp
shr
xor
in
jbe
cmpsl
aas
ss
jge
inc
cmp
and
xchg
push
pmaxub
sub
push
adc
push
sbb
xchg
or
ret
in
sub
xor
xor
jg
ja
fst
movsl
stc
lock
dec
rclb
leave
mov
push
jg
lcall
sbb
sti
dec
lcall
bound
inc
xchg
push
mov
mov
sub
jo
xor
sbb
insl
lret
dec
sub
add
push
lods
add
dec
aad
in
add
push
push
ret
mov
pushw
mov
mov
xorb
xchg
popa
jne
stc
adc
ds
xchg
mov
dec
mov
and
pushf
mov
pop
xchg
push
xchg
stos
iret
cli
mov
dec
in
test
or
lds
rcrl
roll
fstpl
pushf
movsl
dec
movsl
popf
mov
cmc
inc
cltd
jecxz
cmp
sub
pop
pop
in
rorb
cmp
rcll
push
sub
xor
int
rcll
fsts
pop
mov
adc
int
enter
insl
cmp
dec
push
mov
loop
and
cmp
cwtl
dec
jecxz
xor
xchg
pop
mov
inc
jmp
inc
or
lret
inc
cmp
test
mov
or
push
ret
push
mov
cmpsl
je
in
inc
mov
mov
xchg
iret
pop
scas
adcb
test
fidivl
into
and
fisubs
jbe
inc
add
lock
rdpmc
add
js
adc
and
in
push
dec
stos
push
ljmp
out
push
lcall
dec
pop
aas
inc
jnp
pop
xchg
mov
lods
adc
fsubl
in
mov
xchg
inc
sbb
or
roll
pop
cmp
xchg
insl
fcomi
lahf
in
fldt
xchg
ljmp
pop
cmpsb
daa
add
inc
cmp
orl
ljmp
jle
das
inc
adc
cmp
fldl
inc
pusha
or
cmp
jecxz
cld
aad
xchg
push
cs
leave
mov
aaa
lods
mov
icebp
or
ret
mov
shll
and
loopne
cmpsl
out
scas
dec
mov
jp
or
mov
das
lods
mov
das
mov
jbe
xor
xchg
mul
jnp
mov
xor
out
ds
mov
int
idivb
pop
xchg
test
add
cli
adc
sbb
push
lahf
sub
jo
pop
ret
out
repz
pop
dec
and
xchg
jmp
xor
ljmp
test
pop
or
andl
dec
aas
dec
in
cmp
inc
stos
rcrl
mov
jbe
gs
or
orb
iret
push
andb
fsubrl
fs
or
and
cmovp
inc
xchg
sbb
pop
jge
std
xchg
mov
lock
fs
pop
adc
out
mov
xchg
xor
out
lret
sahf
mov
loop
mov
jg
lea
mov
sbb
arpl
sbb
xchg
adc
xor
int
ss
iret
negb
mov
or
mov
add
popa
sub
jle
stos
ret
aas
mov
xor
adc
popa
ret
jo
in
fadd
dec
push
inc
push
pop
sub
and
push
pop
jecxz
mov
sarl
mov
inc
ror
popf
sbb
sub
adc
and
xchg
sbb
or
movsl
xor
pop
inc
aam
adc
dec
fstpl
test
mov
jl
rol
jle
and
inc
ret
add
adc
enter
mov
cs
leave
hlt
xor
mov
xchg
dec
inc
adc
push
sub
sbb
pusha
lea
iret
push
mov
mov
jne
pop
mov
call
push
cwtl
ret
rorl
xchg
loope
add
orl
push
mov
std
movsl
and
out
loopne
repnz
and
es
clc
les
xchg
call
mov
push
lret
das
stos
popa
cmp
sti
shll
mov
stos
movb
dec
mov
js
lcall
dec
push
cmc
mov
push
std
jb
inc
push
jle
fwait
push
mov
add
ret
sbb
out
out
and
cltd
sbb
in
fisubs
lahf
aas
mov
es
lock
cmpsl
or
imul
inc
aad
mov
mov
cmp
mov
mov
jge
sarb
sbb
ljmp
pop
popf
or
mov
fdivrs
mov
cmc
push
sbb
inc
cmpl
push
imul
mov
pushf
cmpsb
add
loopne
lds
mov
stos
mov
push
xchg
pop
loope
add
addr16
push
inc
xor
push
lods
or
pop
lret
xor
popf
inc
arpl
data16
loopne
xor
in
das
loop
xor
frstor
les
cmc
addb
arpl
pop
and
mov
rorb
test
mov
xchg
push
xchg
add
loopne
scas
lret
inc
jmp
mov
in
push
mov
inc
or
ds
out
imul
les
imul
subb
adc
adc
add
nop
mov
and
push
dec
jne
loope
or
jne
repnz
movsb
icebp
je
cmp
mov
cmp
pop
mov
fistps
push
pop
push
sbb
mov
jg
or
arpl
cmp
inc
pushf
push
push
xchg
push
imul
mov
rcrl
sbb
sbb
orl
aaa
iret
std
js
add
cwtl
into
test
or
mov
shrb
pop
shll
out
repz
jbe
xor
popl
jp
push
daa
into
xor
dec
push
iret
jle
mov
popa
ja
mov
std
enter
ljmp
std
gs
mov
xchg
das
movsw
in
jmp
dec
nop
rcrl
adc
ficompl
leave
adc
rcll
mov
pop
stc
and
popf
mov
insb
clc
test
mov
jb
push
dec
in
loopne
outsl
push
inc
mul
inc
out
hlt
out
inc
mov
pop
inc
mov
pop
add
jge
jbe
cmp
dec
fmull
out
xor
stos
mov
enter
xor
or
int
jne
iret
jle
aaa
xchg
mov
xor
push
test
insb
and
jne
pop
pop
mov
pop
xor
push
sbbb
mov
mov
loope
pop
pop
add
push
stos
lahf
rcl
lea
or
test
in
dec
inc
sbb
or
adc
xchg
rcrl
mov
fistpl
js
icebp
clc
adc
in
out
jae
daa
fwait
aad
add
fstl
arpl
jnp
mov
pop
inc
jae
lcall
jno
dec
inc
xor
imul
mov
add
mov
jo
mov
lock
es
and
jecxz
pop
push
mov
jb
cmc
pop
and
in
scas
and
lret
leave
mov
out
pop
sbb
in
cltd
mov
push
shlb
push
xchg
arpl
js
cmp
loope
lods
mov
sbb
outsl
mov
je
fcompl
lret
fisubrl
fdivl
mov
loopne
nop
fucomip
cmp
or
movsb
cmc
push
sahf
or
push
insl
mov
mov
inc
and
xor
sbb
sbb
xchg
ljmp
adc
ss
mov
adc
aad
pop
cmp
shlb
sbb
bnd
outsb
and
iret
pop
or
or
rcl
decb
pushf
mov
dec
out
lcall
pushf
inc
adc
das
mov
add
aaa
movntq
adc
jle
ret
push
dec
out
out
push
adc
fstpt
mov
lds
cwtl
fs
jno
arpl
iret
or
mov
mov
repz
loopne
pop
and
xlat
outsb
sub
dec
sti
inc
jnp
notl
lret
lock
mov
sbb
mov
lods
lahf
fs
or
mov
xchg
inc
inc
mov
in
aas
adc
and
hlt
scas
adc
ds
outsb
jnp
negb
xor
lea
cli
lock
ficoml
or
jecxz
movsb
movsl
sbb
adc
or
out
testb
arpl
mov
insb
mov
and
mov
mov
xchg
mov
imul
divb
mov
mov
xchg
fbld
das
xor
out
sbb
bound
lcall
dec
xchg
out
xor
sub
test
int3
mov
mov
cmp
test
int
movl
fucomp
cwtl
sahf
cmp
xor
inc
test
mov
mov
ret
sub
mov
inc
cmp
mov
fimuls
dec
mov
aad
dec
stos
mov
ljmp
in
adc
mov
cmpsl
sub
cmp
sti
dec
dec
pop
xchg
adc
out
mov
mov
pop
imul
sbb
and
ss
sbb
push
hlt
mov
cmpsb
xor
dec
bnd
xor
data16
jmp
fistl
push
or
js
adc
add
jno
imul
mov
mov
je
add
mov
mov
push
nop
xor
pop
pop
ret
inc
andl
mov
repnz
add
in
xchg
and
xlat
xor
add
adc
shll
sbb
xchg
bound
pop
shl
xchg
jmp
jmp
stos
push
scas
pop
mov
fwait
mov
cmpsb
mov
outsl
jp
outsl
lds
lea
jecxz
ljmp
dec
xchg
pushf
xchg
add
lcall
in
lods
mov
imul
dec
mov
mov
sbb
movsb
in
sbb
loop
mov
out
or
cmpsb
leave
mov
ret
or
push
xor
xlat
xchg
std
or
int
xchg
enter
lahf
add
loope
jge
xchg
or
sbb
fwait
inc
sahf
xlat
jns
dec
fs
cmpsb
ror
cmp
test
or
mov
mov
js
test
sub
lods
js
adc
fsubrl
sbb
leave
mov
daa
clc
xchg
push
push
mov
mov
add
mov
xor
scas
movsb
or
out
mov
rorl
rclb
xor
repnz
dec
pop
imul
frstor
js
enter
scas
pop
mov
cmc
mov
into
lcall
inc
adc
xchg
cmc
lcall
sti
dec
xchg
bnd
xor
push
popa
mov
outsb
int3
inc
stc
jle
lds
pop
stc
add
mov
xchg
add
jle
mov
jge
jbe
rcl
hlt
ret
cmpsb
lds
ficoms
andb
call
xor
sbb
cmc
movsb
popf
or
pushf
clc
add
pop
in
push
ss
icebp
nop
clc
lcall
sbbl
ss
push
or
jo
les
push
ljmp
movsl
and
jno
mov
mov
js
pop
popa
inc
and
xor
xor
mov
in
lret
push
je
mov
lahf
imul
push
rcrl
mov
or
sub
out
mov
aaa
insb
jge
push
xor
add
out
clc
lret
insl
js
sbb
jnp
ljmp
stos
popa
inc
or
movsl
fstpl
test
and
iret
cli
xor
lcall
aam
sub
cs
inc
cltd
ficoms
lods
fdivrl
repz
and
push
in
fadd
push
sub
bound
loop
dec
adc
fbstp
rclb
inc
jmp
outsb
popf
out
pop
xor
mov
rorb
push
stos
neg
push
int3
das
push
pop
xor
mov
icebp
ficoms
rcrb
sbb
ret
cmp
or
loopne
mov
out
push
ljmp
imul
and
test
into
dec
mov
in
and
xchg
test
cmpsb
enter
or
xor
mov
in
adc
or
dec
lret
popf
movsl
xchg
push
out
xor
lods
adc
push
fnsave
push
and
subb
loop
sti
stc
dec
insl
enter
pop
or
jno
add
scas
cmpsb
fs
notb
movsl
cmp
sti
in
jns
ljmp
jb
jecxz
adc
cmp
push
pop
dec
dec
jns
add
ljmp
jmp
mov
cmp
or
cs
lods
push
or
andb
fisttps
mov
pop
lret
shll
pop
adc
lods
dec
lods
fcmovnb
mov
cmpsb
cmp
xchg
test
xor
shrl
push
rclb
cltd
mov
pop
roll
jnp
ficompl
xlat
icebp
push
dec
xchg
dec
mov
sub
aaa
inc
adc
dec
jge
mov
xchg
addr16
repnz
adc
lock
push
imul
stos
clc
jo
push
pop
mov
cli
cmp
push
pop
cmp
test
popf
shlb
pop
mov
cmp
jno
adc
sub
mov
out
fidivl
push
fs
xchg
add
mov
ja
push
pop
mov
mov
mov
mov
mul
fbstp
push
mov
mov
inc
push
push
adc
aas
into
ret
lahf
inc
jnp
jbe
out
lods
mov
stos
shl
inc
out
cmp
add
aad
cmpsl
lock
sbb
gs
pop
stos
pop
cmp
adc
jnp
test
pop
jg
xorl
push
sbb
orl
fwait
int
pop
sub
in
in
cmp
imul
xor
mov
les
fistpl
jmp
js
mov
in
push
jle
jmp
xchg
add
or
inc
mov
cmc
push
push
add
stos
fwait
xchg
cwtl
push
push
movsb
lahf
mov
xchg
and
hlt
push
pusha
in
fsubrl
test
push
push
sbb
out
add
push
cld
outsl
cld
inc
xor
mov
jb
dec
xchg
lods
inc
sbb
xor
outsb
aaa
popa
mov
pop
push
sbb
fs
mov
movsl
aad
sbb
adc
aas
aad
mov
and
test
mov
cwtl
pop
pop
ss
push
bound
pop
popf
cmp
or
sub
in
xchg
scas
stos
sbb
into
push
pop
cmp
adcl
cmp
mov
dec
pop
fcmovnb
inc
enter
dec
and
mov
mov
jo
mov
scas
mov
adc
cld
rclb
insb
vunpckhps
jle
dec
sub
adc
or
inc
mov
sahf
adc
push
dec
mov
divl
jl
test
je
rdtsc
xlat
pop
xchg
pop
pop
sub
or
ficomps
fimuls
insb
imul
cld
sti
js
sbb
mov
push
bound
mov
popf
das
sub
subb
rcrl
fsubrs
and
sti
mov
in
cmp
sbb
cmpsb
fcmovnu
sub
lds
mov
push
push
push
jg
ret
loope
clc
cltd
stos
jne
jp
shll
lods
or
cs
ret
cmp
inc
je
xor
roll
sbb
push
movsb
mov
inc
call
adc
sbb
orl
xor
addr16
xchg
cmp
mov
in
sbb
pusha
insl
dec
es
out
jno
inc
stc
mov
inc
push
xor
cmp
orl
jno
or
insb
rorb
shrl
movsb
xchg
in
pop
jo
pop
shl
xor
pop
pusha
jnp
paddsw
in
mov
aad
jbe
in
inc
aas
jmp
sub
insl
movsb
mov
xor
pop
lods
leave
in
out
aaa
xorb
aaa
adc
add
push
adc
jp
cmp
push
add
fbstp
jmp
gs
pop
fsubrs
cmc
in
dec
sub
mov
xlat
fwait
dec
cmp
fcoms
mov
mov
sbb
xchg
xchg
pop
push
add
stos
or
push
sahf
and
xchg
shl
call
dec
mov
push
or
lods
adc
test
out
push
cmp
xchg
out
dec
out
pop
shlb
push
inc
mov
cmp
jle
adc
mov
popf
mov
hlt
push
push
adc
mov
pop
rolb
or
mov
ficomps
dec
jbe
mov
dec
in
jl
mov
xchg
jle
andl
add
ljmp
cwtl
hlt
adc
xlat
jb
or
xor
add
jl
inc
ljmp
push
in
test
sbb
sbb
push
sahf
aad
lahf
lcall
call
sbb
incl
adc
out
xchg
jbe
test
sub
sub
shrl
loop
adc
push
or
push
icebp
call
push
jno
arpl
fstps
cmpl
mov
jecxz
int
cmc
push
sbb
cmp
imul
mov
dec
stos
out
mov
repz
ret
add
dec
adc
movsb
sub
jns
push
or
adc
fld
lea
int3
fdivs
ljmp
cmp
pop
pop
add
nop
sub
pop
sbb
ja
in
add
aaa
xchg
inc
mov
inc
mov
adc
aad
mov
push
fcmovu
stos
icebp
adc
idivl
jg
cwtl
xchg
cmc
jno
inc
cmp
shr
rcl
jge
push
popa
dec
dec
pop
loopne
gs
mov
lock
fwait
shlb
or
pop
sbb
aad
and
es
pop
add
das
adc
ds
into
mov
jg
add
mov
inc
push
adc
push
sub
sub
lds
arpl
xor
sub
mov
out
rol
iret
insl
negb
ss
add
inc
jae
lods
icebp
test
adc
jle
mov
rol
in
mov
add
cltd
inc
jl
test
in
rorl
pop
adc
ret
jno
sbb
addr16
test
int3
sbb
xchg
jp
xchg
dec
cmc
mov
add
mov
in
pop
rorb
iret
jb
xchg
mov
outsb
leave
loope
mov
rorb
loope
shrb
mov
push
xor
xchg
push
dec
cmpsl
stc
in
add
leave
mov
or
xchg
sbb
mov
imul
mov
push
cld
push
inc
jg
push
add
ss
inc
test
fistpl
jb
out
inc
nop
push
jl
aad
jmp
sbb
jno
lds
mov
adcb
stc
fs
jle
shl
dec
in
repnz
dec
out
aad
fs
mov
jbe
cmpsl
jbe
ljmp
xlat
mov
cs
es
out
mull
mov
hlt
pop
clc
jg
mov
mov
dec
or
fwait
call
cs
or
dec
test
jns
rol
es
jecxz
push
and
jnp
cli
and
push
mov
stos
jnp
add
xchg
add
jbe
mov
mov
xchg
and
in
xchg
lea
mov
jo
aam
clc
pop
mov
movsl
testl
adc
sbb
push
pusha
dec
cli
mov
push
dec
vpshad
in
imul
add
in
inc
adc
inc
cmp
jge
cmpsb
test
in
add
lret
stc
dec
icebp
stos
test
mov
cli
pop
push
push
notb
cmp
xor
call
mov
xor
jge
cwtl
mov
cmc
mov
and
pusha
out
mov
movsb
push
and
dec
inc
ficoms
jo
dec
push
je
mov
loopne
aam
scas
sbb
jne
or
mov
incb
push
sti
fadds
mov
and
mov
cmp
arpl
incl
cmpsl
data16
mov
mov
cmc
imul
xor
lahf
cwtl
cmpsb
clc
dec
fdivr
repnz
dec
jmp
pushf
sbb
popf
ret
iret
arpl
cmp
jmp
sahf
fwait
stc
out
jbe
sub
mov
push
xchg
jno
dec
std
inc
xor
cltd
sub
jne
mov
inc
out
mov
ds
inc
lea
scas
outsb
dec
test
movsb
aas
mov
fwait
cmp
lock
adc
lea
mov
in
nop
shll
in
push
pop
push
mov
push
inc
add
nop
idivl
out
stos
je
cmp
bound
testl
cmp
jmp
mov
cltd
lcall
in
fdivrl
pop
mov
mov
jmp
loope
pop
ljmp
das
sbb
push
repnz
cmp
jnp
fwait
adc
dec
loope
mov
test
movsb
orb
mov
jle
dec
xchg
loop
or
pushf
xchg
push
adc
std
cmp
mov
test
inc
lcall
dec
or
test
push
add
dec
xchg
add
add
inc
mov
clc
jmp
loope
movsl
ret
jle
mov
rorl
sbb
movsl
aaa
mov
daa
pop
xor
in
fadds
shrw
dec
xchg
stc
add
incl
mov
fisttpl
sbb
xchg
pop
popf
jne
xchg
ja
jmp
cli
sti
jb
jo
pusha
and
cmp
jbe
das
addr16
xchg
daa
in
mov
dec
lret
aaa
jns
leave
xor
movl
pushf
hlt
ja
in
jae
pusha
imul
inc
insl
orb
mov
xor
mov
test
jg
int
addr16
mov
es
lds
cmp
cmp
adc
and
or
xchg
mov
push
das
mov
pop
inc
and
stc
in
lret
xor
imul
sub
xchg
push
and
test
cmc
cld
loop
pop
dec
pushf
mov
fmull
cld
adc
mov
and
cmp
pushf
mov
inc
ljmp
ret
mov
jge
int
testl
into
mov
mov
test
and
nop
adc
pusha
sbb
push
lahf
pop
fwait
lds
cmpsl
ja
insl
call
sbb
lods
lcall
aam
mov
or
mov
cmpsb
xor
push
jmp
dec
pcmpgtw
je
xchg
popa
xor
lahf
cmpsl
sti
mov
shl
pusha
cmp
pop
loopne
lcall
xor
mov
jno
xor
jmp
mov
mov
add
shr
in
sti
mov
xor
jae
jnp
push
mov
adcl
stc
mov
fwait
xchg
insl
sbb
jbe
es
data16
cmp
mov
ret
add
iret
mov
mov
daa
imul
add
jb
mov
lcall
add
cmp
jmp
sub
pop
or
pop
jp
aas
insb
xor
test
mov
out
mov
sbb
jg
sbb
mov
enter
xchg
jns
cmpsb
push
jl
pop
idivb
cmpsb
xor
inc
adc
pop
xor
push
jb
fimuls
cld
mov
push
inc
add
into
xchg
divb
pop
and
outsb
into
push
ficomps
mov
aas
fidivrl
roll
xchg
pop
jb,pn
lret
xor
enter
cmpsl
and
ss
inc
jmp
movsb
dec
subb
lea
ret
add
test
cmp
popa
out
sbb
jg
push
jnp
push
movsb
shll
cmp
lea
movsl
push
mov
in
add
sahf
shll
xchg
sbb
je
outsl
std
iret
pop
pop
cld
mov
lods
push
pop
pusha
mov
les
dec
imul
mov
je
lcall
aaa
loope
lea
test
orl
repz
xorl
rcl
mov
fmul
fldcw
insb
jp
fwait
jp
arpl
ja
je
in
ds
pop
push
add
add
rcll
pusha
pop
hlt
jnp
jecxz
push
inc
add
jl
dec
push
shl
test
ficomps
outsb
cmc
shl
pop
cwtl
movsb
xor
push
scas
xor
popf
adc
fcomps
cwtl
push
out
fwait
pop
adcl
pop
bnd
pop
adc
repnz
pop
stos
mov
fidivs
rolb
xor
mov
imul
divl
paddusb
push
push
xchg
in
add
xlat
rcrl
stos
xorb
clc
call
adc
xlat
push
push
adc
lahf
jns
and
adc
aaa
fwait
xlat
adc
cmpsl
mov
lds
fwait
nop
aam
or
pushf
movsl
jbe
lods
jo
fwait
mov
push
dec
aas
pop
outsb
flds
cmp
inc
das
shr
in
mov
aas
loop
nop
sub
cmpsb
mov
sbb
or
insl
add
popa
push
sti
or
push
aas
es
shl
cmpsl
cmpsl
clc
test
xor
insl
push
pushf
sarl
fwait
imul
and
push
rclb
xchg
cmpl
rcr
loop
jecxz
in
inc
stc
insb
jmp
xorb
loope
outsl
lea
das
movsb
mov
xor
mov
cmp
insl
jno
cwtl
jl
push
mov
mov
aaa
js
idivb
push
adc
lcall
stos
test
xchg
mov
setp
push
xchg
dec
repz
sub
scas
lods
xor
aas
stos
mov
or
decl
sahf
sub
ds
insl
xorb
mov
cli
xchg
inc
jnp
out
mov
les
insb
dec
xchg
jo
inc
loopne
xchg
cmp
or
push
inc
inc
dec
jmp
sub
in
sub
push
jecxz
sbb
mov
cwtl
out
mov
xor
mov
movsl
adc
ds
subl
inc
inc
lock
mov
mov
pop
in
das
scas
jl
cmc
shrl
repnz
sbb
push
jnp
ficoml
and
pop
popa
rol
jecxz
divb
outsl
movsl
out
sub
mov
fcoml
xor
xchg
push
sub
fisubs
test
jle
jns
mov
test
jbe
fwait
inc
int3
inc
test
test
mov
lret
pop
jmp
fimull
enter
mov
sbb
rol
cmp
push
adc
stos
xor
and
xor
fsubrs
or
push
jle
mov
incl
in
mov
pop
xor
icebp
mov
xchg
and
lods
jmp
stc
mov
or
inc
cwtl
jno
mov
mov
pop
cmp
ror
xor
mov
mov
pop
pop
jae
pusha
fidivs
fimull
and
xchg
mov
lret
cltd
mov
pop
sub
push
xor
sub
xchg
mov
xor
test
mov
jmp
adc
dec
or
ljmp
ds
xchg
sti
and
fs
push
pop
dec
sahf
cmp
jbe
xlat
js
xchg
mov
xchg
dec
pop
call
dec
repnz
xchg
stos
and
out
mov
push
jnp
cmp
inc
jg
jmp
insb
sahf
mov
cmp
or
xchg
cmpsl
int
out
aas
xchg
push
sbb
rol
out
xor
out
push
dec
push
rorl
mov
cli
bound
jp
mov
mov
push
mov
lods
andl
pushf
mov
dec
shll
mov
popa
jne
pop
loopne
jecxz
fnsave
mov
hlt
out
scas
repnz
xchg
xrelease
sub
cmp
dec
fwait
sti
aaa
xchg
push
jnp
pop
out
add
imul
mov
or
test
adc
sbb
shrb
xchg
aam
xchg
mov
repz
jne
push
imul
sub
aad
and
in
dec
insb
add
or
xchg
pop
adc
dec
frstor
mov
cld
xchg
push
into
repnz
out
out
xchg
mov
ftst
and
push
in
sub
sti
pop
jns
lock
cmc
popf
insb
out
sahf
push
push
sbb
cmp
fbld
xor
loopne
push
loope
movsb
out
mov
jmp
stc
pop
push
sbb
bound
popf
sbb
enter
pop
fldenv
push
movsl
into
into
add
mov
fwait
push
xor
jb
hlt
lea
inc
out
jmp
imul
daa
xor
lods
pop
and
js
insb
dec
outsb
cmp
cmp
sub
mov
xchg
cmp
inc
mov
data16
push
cltd
std
mov
stos
lods
sbb
or
outsb
adc
aas
inc
test
jg
mov
xor
add
dec
xchg
lock
into
movsl
test
cmpsb
pop
mov
sub
loop
mov
xchg
imul
hlt
sub
push
les
add
jne
into
and
mov
mov
xchg
xchg
out
mov
mov
mull
lret
push
js
or
movsb
insl
mov
mov
push
jle
mov
mull
inc
push
les
rcrb
pop
mov
into
mov
int
pop
cltd
add
or
sbb
int3
stc
cwtl
mov
push
jo
out
pop
ret
shrl
mov
add
push
pop
outsl
aad
push
add
pop
mov
pop
xor
ja
or
mov
cmp
jo
in
arpl
fiaddl
mov
cmp
jg
jecxz
cs
mov
jg
call
cmpsb
xchg
or
lcall
addr16
mov
mov
sub
imul
arpl
fwait
add
insb
and
fidivs
sbb
or
shll
movsb
popa
stos
push
lret
sub
sbb
scas
pop
push
ds
mov
pop
push
push
test
inc
cwtl
ss
and
das
xor
adc
sub
sahf
sbb
inc
addr16
inc
fidivs
xchg
adcl
mov
out
cmp
pop
cld
cmc
mov
push
popf
out
dec
pop
xchg
out
arpl
push
add
sti
rcr
je
test
iret
adc
aam
xchg
pop
cmc
add
out
into
xchg
sbb
mov
sbb
xlat
inc
dec
gs
fwait
ss
inc
xor
cld
and
push
cmp
inc
jb
push
adc
mov
test
lock
mov
imulb
jecxz
jne
push
inc
aaa
mov
loopne
push
gs
movb
out
or
xchg
adc
jbe
enter
mov
sub
movsb
mov
rorb
cld
xlat
mov
xor
mov
icebp
sbbb
xlat
mov
push
popa
inc
inc
lods
mov
inc
sbb
cmp
xlat
jge
addl
pop
pusha
xchg
inc
or
dec
push
cli
or
cmp
call
idivl
outsb
dec
test
ljmp
dec
es
cmp
cltd
jecxz
sub
add
mulb
lea
cwtl
aaa
test
jbe
sarl
popl
cltd
int3
sbb
gs
loopne
mov
pop
ss
cmp
shrl
mov
test
clc
jbe
or
mov
xchg
pop
ja
mov
ret
ret
out
xchg
pushf
or
add
insb
negl
mov
frstor
xor
cmp
loope
xor
inc
sub
shlb
mov
xor
andb
lret
xchg
lods
aam
dec
sbb
ds
icebp
lods
xchg
stos
jp
jb
das
xlat
mull
fmul
das
lock
or
in
lret
insl
xchg
fs
test
cmpsl
mov
push
cmc
ret
cli
jb
pop
inc
xchg
xchg
push
sbb
cmpsb
pop
and
mov
movsb
fwait
ret
push
lret
mov
rorb
jmp
adc
mov
sub
aaa
lcall
aas
rcrl
loopne
call
mov
mov
xchg
outsb
stos
mov
sub
hlt
scas
xor
mov
rolb
inc
out
sbb
or
inc
fbld
and
icebp
adc
imul
ret
sbb
mov
imul
pop
push
mov
dec
and
je
inc
dec
sbb
shrl
bsf
aad
sbb
rol
gs
fnsave
enter
leave
pop
push
out
fiadds
ds
add
xchg
imulb
pop
pop
test
cmp
dec
jecxz
sub
jnp
jmp
mov
pop
xor
pusha
mov
xchg
fsubrl
dec
push
into
lock
test
push
out
mov
sub
pop
jg
scas
mov
insb
sbb
push
sarb
in
stos
jo
dec
push
ss
jecxz
data16
inc
loopne
aam
sub
ss
and
movl
xchg
pushf
jmp
fsubs
or
xchg
bound
cmp
movsl
sahf
xchg
push
subb
adc
test
idiv
dec
sbb
and
mov
xchg
es
ficoml
jg
push
mov
push
in
xchg
push
jmp
add
jae
test
ficompl
lret
cld
sbb
xor
stos
push
stos
hlt
aaa
repnz
mov
fcoml
mov
and
mov
inc
jb
and
xor
aam
lret
pop
rol
jp
loopne
adc
test
rclb
mov
fs
aaa
mov
insl
and
cli
je
jg
fldenv
js
aad
aam
jns
mov
xchg
cmp
jae
xchg
repz
add
sbb
dec
mov
into
adcb
pop
vpmacsswd
mov
fmuls
movsb
loopne
adc
lret
dec
outsl
pop
inc
int3
xor
rcrb
sub
inc
arpl
shl
push
mov
and
leave
shrl
xor
jg
enter
jp
push
jo
add
inc
mov
hlt
sbb
push
in
push
movsl
cmp
jb
adc
mov
dec
dec
dec
imul
mov
push
fistl
icebp
mov
inc
imul
loope
dec
pop
popaw
xchg
rorl
jbe
sub
sbb
je
stc
mov
fsubrl
cli
ja
aad
into
imul
jns
mov
mov
sub
ret
jp
gs
sub
add
cmc
pop
sbb
gs
xlat
xor
sbb
inc
mov
lods
icebp
enter
movsb
and
and
push
clc
rcll
repnz
out
call
push
mov
jg
adc
int
cmc
inc
fisttpll
data16
jmp
dec
add
cmp
shrl
arpl
and
push
or
cmp
jae
or
inc
sti
pop
mov
mov
mov
aad
sbb
ret
popf
mov
test
bound
xorl
push
xchg
xchg
imul
mov
gs
sbb
das
or
nop
je
fbld
insl
ljmp
arpl
jae
adc
mov
mov
push
insb
hlt
adc
xchg
inc
push
in
mov
insl
mov
icebp
or
push
mov
sub
mov
push
jl
jb
jbe
lock
mov
sub
aad
dec
cmp
add
lea
mov
subl
push
xchg
loope
jp
aaa
fs
jl
jecxz
insb
sbb
out
pusha
xchg
ret
das
pop
cmp
jnp
loope
std
push
call
js
pushf
dec
lcall
jp
xor
jmp
mov
sar
dec
or
cwtl
loop
vmwrite
xor
cltd
push
test
ds
jg
out
test
xor
jg
popf
rcrl
push
sbb
fldl
mov
cmc
xchg
xchg
fildl
not
jo
loop
jmp
pop
and
repz
jmp
arpl
dec
xchg
cmpsl
sbb
data16
xlat
push
in
gs
in
mov
xchg
std
sti
lods
pop
hlt
adc
inc
jecxz,pn
cmp
jnp
out
and
cld
loopne
mov
sti
sti
and
pop
call
jno
xchg
sbb
or
icebp
mov
lea
sub
sbb
cltd
stos
call
jge
push
mov
cwtl
popf
in
je
xor
fimull
mov
lret
xchg
sub
mov
call
push
and
xor
inc
in
sti
jns
loopne
cmpsl
dec
mov
mov
push
loopne
xchg
shlb
js
sub
mov
repnz
gs
dec
adc
hlt
and
mov
orb
mov
jbe
mov
mov
aam
mov
jmp
pop
movl
mov
mov
push
jl
xor
and
mov
sbb
mov
mov
xor
xchg
gs
adc
movsb
jle
and
inc
lds
mov
jo
cmc
and
mov
lods
gs
mov
shlb
add
xchg
mov
fistpl
pop
notl
pop
movsl
mov
pushf
jbe
movsb
icebp
adc
imul
jle
xchg
push
cmp
push
jge
fiadds
push
outsw
out
mov
addr16
sbb
shrb
pop
aas
mov
jo
sub
arpl
stc
lcall
pop
divb
or
iret
ret
rcrb
push
lcall
loope
pop
sbb
inc
insl
sub
jbe
xchg
in
loop
push
pop
dec
adc
cmpsb
jmp
xor
jne
xor
cmp
stos
insl
addr16
xor
jle
pop
out
push
mov
pop
aaa
cltd
mov
loopne
mov
or
inc
notl
fnstsw
fsubr
inc
fcomi
daa
sub
adc
add
cmc
in
adc
lea
fstps
out
xchg
lds
icebp
insl
or
mov
pop
cmpsb
push
adc
shrl
mov
movsl
pop
add
movsb
pminsw
mov
pop
clc
xchg
xor
sahf
cli
out
dec
clc
roll
test
add
sbb
pop
push
rcrb
add
stos
pop
dec
lahf
cmpsl
push
loopne
les
rolb
cmp
addb
cmpsb
jno
iret
jno
sub
push
jae
add
fs
mov
testb
inc
mov
cmp
jmp
cmp
imul
mov
push
loope
pop
adc
dec
sub
rcrb
stos
cmp
daa
lods
pop
jbe
into
js
cmp
and
mov
mov
mov
push
fisttpll
daa
inc
pop
scas
inc
stos
inc
push
lret
lahf
xchg
xor
jp
stos
xchg
push
in
sbb
into
mov
nop
imul
push
call
mov
xor
loope
fnstenv
sbb
mov
loop
fcoms
scas
test
mov
xor
data16
orb
pop
cmpl
add
cmp
cmp
fbstp
and
sub
xor
mull
cld
movsl
call
in
cli
sub
insb
pop
mov
xor
gs
bound
or
lea
jl
enter
daa
idivl
repz
out
mov
mov
rcr
div
test
bound
adc
ucomiss
lods
js
leave
xchg
aam
lods
cld
outsb
loope
aas
imul
mov
aaa
jecxz
ljmp
adc
lock
jl
mov
movsb
push
mov
aaa
inc
push
dec
push
pop
xor
or
sbbl
sbb
sbb
or
jge
imul
sub
xor
adc
and
inc
outsl
adc
cmp
dec
out
int3
into
loope
dec
dec
std
fldl
mov
jmp
cltd
pushf
sbb
or
xor
cmp
inc
lret
xchg
xchg
mov
xchg
xor
mov
sbb
out
adc
dec
dec
xor
lret
stc
add
xchg
out
arpl
jmp
test
bound
cmp
adc
or
fiadds
pusha
int
clc
lods
dec
push
sbb
rcrw
sub
fimuls
nop
aas
or
xlat
pop
mov
pop
lods
lods
inc
sub
pushf
push
xchg
lret
icebp
dec
loopne
mov
std
leave
inc
push
dec
dec
push
lret
jae
js
jp
inc
shlb
xlat
sar
cmp
insl
pop
inc
cmp
xor
lods
imul
call
jmp
ret
cli
mov
jecxz
scas
adc
inc
mov
fbstp
sbb
imul
imul
sahf
mov
jecxz
sbb
adc
mov
cmp
mov
popa
lea
sub
xacquire
mov
push
mov
pop
test
loope
fdivrp
add
push
push
jmp
loopne
xchg
in
inc
adcl
je
cmc
popf
gs
dec
mov
and
jns
repnz
aad
xchg
push
sub
push
hlt
ss
out
cwtl
and
rorb
je
push
fildl
in
mov
pusha
mov
imul
out
dec
jns
ds
add
inc
inc
mov
dec
cmp
loopne
mov
stos
ficomps
sub
leave
or
fldl
inc
scas
sbb
jecxz
stos
xchg
lock
jo
sub
sbb
push
mov
sarb
lock
push
xor
mov
out
sbb
les
pop
jmp
xor
int3
mov
cs
mov
sbb
das
insl
pop
rolb
fcoml
cmp
bound
pop
jecxz
jmp
loop
inc
inc
and
iret
addr16
jmp
and
sbb
mov
push
test
sbb
lock
mov
adc
lods
ljmp
stos
jae
fs
xchg
push
fcomi
xor
adc
sub
hlt
fcoms
mov
jo
push
pop
mov
sbb
stos
jns
cwtl
out
sub
push
shll
jbe
jnp
es
leave
imul
xor
int
icebp
push
fdivp
push
ss
and
pusha
sub
cltd
xor
xchg
push
fs
adc
pop
mov
jmp
lret
idivl
inc
dec
leavew
mov
and
xchg
add
or
pop
stos
and
mov
pusha
xchg
cli
cmpsb
cmp
repz
divl
jle
push
lds
sbb
sub
test
cmc
or
pop
pop
stc
ljmp
insb
rolb
lock
test
dec
dec
inc
ret
fmuls
dec
lea
int
mov
out
jmp
jmp
fs
adc
inc
js
js
call
xchg
imul
xor
lret
in
sbb
test
cmp
xchg
ret
cmp
pop
fnstsw
addb
loope
add
and
adc
mov
fsubrl
xchg
idiv
xlat
clc
mov
mov
fs
mov
inc
xchg
rclb
arpl
mov
mov
mov
inc
sahf
aam
test
xchg
ret
cwtl
jno
jb
adc
sub
aad
jnp
ret
das
mov
push
jmp
popa
sub
loopne
loop
dec
loop
jae
fsub
push
mov
insb
shlb
inc
dec
push
inc
cmpsl
pop
call
inc
fs
sti
lret
and
push
pop
ljmp
int
add
sbbl
adc
inc
cmp
rol
jmp
mov
push
js
ret
test
in
mov
pop
push
pop
jge
adc
mov
ret
mov
xor
add
mov
lahf
sub
sub
dec
push
mov
cmp
out
fldenv
sub
shr
lcall
dec
insb
sub
jns
out
adc
jecxz
pop
addr16
and
or
test
ret
ret
push
data16
in
loop
mov
push
outsb
pop
push
loopne
and
mov
jo
jge
test
xor
mov
inc
js
negl
xor
adc
in
fidivrs
jge
outsb
add
mov
ja
jns
repnz
mov
xor
pop
out
jbe
pop
pusha
xchg
notl
xor
lds
fldcw
fsubrs
sub
push
push
int
lods
aad
jns
lods
push
push
mov
jnp
mov
lods
jae
and
inc
push
cmp
pop
divb
and
mov
xorb
cmpsl
insl
les
add
adc
cld
push
pop
xchg
sub
adc
neg
push
mov
sbb
int
int3
sub
scas
adc
notl
cmp
push
and
icebp
call
fidivrl
jmp
sbb
mov
pushf
arpl
xor
and
push
sahf
mov
stos
mov
inc
mov
jl
lea
jbe
jg
xchg
jmp
or
and
or
dec
jnp
rcll
push
lock
cmp
stc
jmp
sub
sbb
jg
std
jmp
clc
lds
stc
test
push
ret
in
jp
hlt
mulb
cwtl
dec
popf
adc
sub
movsl
mov
xor
pop
mov
inc
pop
mov
lahf
dec
xchg
mov
xacquire
inc
mov
inc
js
push
lds
and
nop
cmp
mov
xlat
fdivl
ficoml
dec
mov
fnstsw
in
out
decl
mov
lock
fwait
aad
ret
cmp
stc
push
add
add
dec
lret
bound
je
daa
mov
jle
xchg
sbb
lea
mov
jo
jg
mov
mov
xchg
jge
in
adc
ret
lock
pop
in
insb
orl
sbb
mov
mov
dec
ror
ret
add
into
push
sub
add
mov
mov
sti
mov
out
pusha
bound
mov
sub
sub
lds
js
pop
aam
or
into
scas
mov
add
imul
mov
adc
jmp
es
nop
in
xlat
mov
jbe
or
adc
inc
dec
sbb
inc
jg
jno
cmp
bound
or
jae
jmp
subl
orb
movsb
sbb
adc
xchg
cmpsb
dec
ss
push
out
inc
mov
push
into
pop
mov
mov
iret
icebp
sub
inc
std
fisubs
cli
ror
rcrb
mov
arpl
mull
mov
scas
xor
adc
test
sti
outsl
loopne
push
push
add
add
mov
cmp
stos
mov
jp
in
outsb
je
push
jne
out
xor
jno
inc
mov
xchg
pop
inc
pop
je
lods
notl
xchg
pop
mov
dec
addr16
shlb
stos
aas
mov
insb
cli
arpl
mov
movl
ja
jns
mov
xchg
cmp
dec
and
pop
js
iret
mov
xchg
and
xchg
dec
stc
jge
lds
push
or
cmp
out
jp
push
movsb
xorb
cmp
adc
pop
sbb
jne
mov
sub
mov
adc
data16
dec
jns
add
mov
ret
lret
jbe
in
les
ret
popf
jns
inc
pop
jl
push
out
nop
scas
mov
int3
xchg
pusha
xchg
mov
pop
call
sub
int3
jns
xchg
or
aad
mov
test
push
fwait
int3
and
xlat
pop
inc
ficoml
sub
jnp
stos
jb
shll
push
pop
sub
lret
bound
ret
dec
lret
aas
shlb
fbld
adc
inc
roll
ds
adcb
lds
inc
pop
and
das
mov
pop
ja
mov
idivl
sub
add
dec
xor
jp
fcoms
js
mov
push
addr16
add
in
add
xchg
jb
outsl
in
pop
ja
enter
jnp
sarb
sub
mul
ljmp
adc
fwait
shrw
call
sbb
inc
xchg
xchg
inc
es
pop
mov
adc
adc
movb
enter
pop
pop
out
repnz
out
arpl
mov
jb
sbb
stos
xor
adcb
in
shrb
pop
mov
xlat
cld
xor
filds
lea
mov
mov
mov
inc
js
inc
sti
stos
cmp
cmp
jl
lret
lcall
sbb
lahf
pop
jmp
lahf
out
cmc
pop
push
mov
inc
repnz
jmp
jo
mov
add
sbb
js
xchg
adc
push
pop
pop
adc
mov
or
inc
mov
lock
mov
push
sbb
cmp
sub
jle
add
cld
test
lahf
int3
pushf
adc
lret
iret
aad
dec
dec
xchg
inc
jne
jo
ret
lods
and
jnp
adc
sahf
in
cld
aad
pop
popf
scas
pop
outsb
push
fcomps
sub
xor
je
repz
shl
jmp
divl
leave
xor
cld
inc
imul
xor
xchg
dec
mov
cmp
pop
pop
in
mov
dec
movsl
add
push
ljmp
sbb
cmp
mov
adc
pop
decb
sub
in
or
inc
movsl
jbe
lock
xor
lret
fnsave
out
sarl
sub
repnz
lret
inc
mov
pop
jg
cmpsb
cmp
pop
add
das
cmp
arpl
ljmp
push
repz
dec
jnp
loope
inc
daa
xchg
inc
dec
push
inc
or
loopne
and
lds
push
aaa
jle
inc
sub
dec
inc
sbb
cmp
mov
push
inc
cmp
mov
loopne
adcl
ds
push
pop
mov
pop
inc
jne
gs
jmp
cmp
ljmp
subl
cmp
int3
psubw
clc
sub
nop
arpl
dec
int
inc
cld
stc
fisttps
jns
popa
cmp
and
lds
pop
mov
and
adc
in
leave
dec
xor
cmpsl
mov
dec
out
fisttps
movsl
sub
sub
sub
shrl
cmp
cmp
cvtps2pi
pop
popa
lret
and
nop
int3
je
xchg
in
add
mov
sub
test
inc
jmp
daa
into
sub
mov
jno
and
or
iret
rcrl
cmp
ljmp
ss
orl
mov
popf
cmpsl
fisttpl
xor
stos
jno
adc
repz
fistl
fs
lret
push
xchg
mov
inc
mov
inc
icebp
mov
mov
sub
out
fbstp
cli
cmpsb
mov
ljmp
xor
jmp
cld
arpl
call
cwtl
jb
jae
shlb
jmp
xor
mov
mov
pop
movsb
sbb
pushf
and
inc
cmp
fdivrl
add
cmp
ja
or
sbb
or
mov
inc
adc
mov
and
mov
fwait
mov
in
cmpsb
dec
hlt
sub
or
testl
sub
das
rorb
shlb
inc
add
mov
aam
or
lcall
jbe
loop
mov
in
and
and
push
in
lods
femms
mov
rorl
rcrb
cld
push
lods
cmpsl
scas
jle
loopw
jg
std
in
shrl
iret
out
lods
aaa
cli
ficoms
jecxz
inc
scas
out
jae
add
mov
mov
lods
mov
aas
jae
and
sub
js
sbb
out
or
or
dec
hlt
outsb
hlt
sub
shl
and
sub
frstor
pop
ljmp
ljmp
and
cmpl
jge
sbb
dec
fiadds
push
xor
push
sub
stc
sub
mull
jge
ljmp
pop
jge
scas
push
std
int3
repnz
insl
test
test
and
int
cltd
loope
cmpsl
inc
mov
add
pop
stos
or
outsb
mov
movsb
cmp
ficomps
imul
cli
popa
jge
add
mov
enter
int3
in
out
sub
out
add
scas
jg
rclb
insl
sbb
mov
lcall
icebp
dec
dec
inc
jg
and
jle
in
mov
icebp
out
sbb
loopne
adc
addr16
add
jo
subb
jb
icebp
xchg
push
push
int3
sbb
inc
in
test
je
jle
jmp
xchg
dec
dec
popf
lret
scas
pop
push
xchg
push
cli
hlt
popl
scas
inc
or
sub
push
outsb
dec
mov
jo
push
popa
nop
int3
push
iret
mov
stos
mov
pop
inc
xchg
ss
bswap
aad
inc
cs
sub
int3
sbb
xlat
jle
add
dec
pop
sbb
daa
sbb
xchg
popa
clc
add
dec
int3
fisttpl
imul
jmp
mov
lea
popa
iret
ss
xchg
push
ror
mov
adc
cmpsb
or
add
sbb
jns
xorl
insl
jb
pop
jns
rcrb
jp
daa
stc
pop
jo
mov
cwtl
push
mov
push
jo
mov
pusha
int3
push
jmp
xor
cld
nop
loope
hlt
adc
inc
push
jb
jnp
les
inc
aam
jmp
dec
pop
sbb
xlat
cmp
cmp
sbb
dec
pop
adc
push
lds
and
mov
stos
pop
push
dec
dec
jle
and
dec
push
stos
sub
imul
call
ret
cwtl
lock
or
xchg
popf
jbe
pop
pop
cmp
lcall
lea
insb
leave
inc
scas
xchg
mov
cmp
int
mov
mov
add
dec
lret
fidivrl
sbb
xor
fnstcw
inc
bound
lea
cmp
add
mov
dec
adc
je
inc
test
loopne
les
jmp
test
pop
icebp
lret
dec
adc
popf
adc
cmpsb
cmp
sbb
cmpb
xchg
sahf
cmpsl
test
jecxz
dec
and
xor
stos
insl
ja
idivb
cmpsl
xlat
mov
movhps
test
pushf
repnz
mov
mov
out
and
rorl
mov
sub
or
mov
sub
jae
xor
mov
out
pop
xchg
hlt
cli
fiaddl
mov
inc
shll
mov
xor
outsb
dec
or
cmc
rclb
rcrl
mov
inc
and
cmc
mov
mov
mov
les
cmp
dec
pop
divl
test
rol
mov
enter
sti
les
cltd
rcrb
xchg
xchg
call
mov
mov
scas
jg
push
cli
dec
and
add
mov
inc
jo
push
in
scas
test
cli
add
xor
mov
mov
cmp
sarl
sbb
leave
test
cli
jb
push
out
cli
into
rcrl
sub
xchg
repz
adc
jb
xchg
call
or
fisubs
sub
sbb
nop
pop
mov
cmp
loopne
cltd
ret
imul
cwtl
gs
loopne
sub
pop
push
fdivs
imul
pop
add
pop
jmp
ljmp
insb
sub
ljmp
sbb
xchg
fstps
pop
jmp
or
ror
xor
mov
add
idiv
aam
rcrl
inc
cmpsb
inc
and
adc
xor
in
mov
das
lea
xor
or
mov
sti
cmpsl
bswap
addb
scas
xchg
sbb
cmpsl
jbe
cmp
push
loope
cs
mov
popf
mov
inc
ret
mov
pop
xor
ret
or
gs
add
fwait
jns
shr
pop
mov
jbe
or
aam
mov
xchg
std
mov
arpl
repnz
dec
mov
out
loop
mov
push
xchg
and
fstl
add
in
out
sti
mov
test
push
ret
sub
rcl
jl
push
push
cmp
sub
lcall
mov
cltd
sbb
adc
aad
jge
and
test
adc
inc
push
in
xchg
popf
cmc
pop
mov
out
iret
jb
out
fdivrl
enter
push
pop
xorl
xchg
jmp
frstpm(287
adc
mov
mov
cmpsb
addr16
ja
iret
inc
jo
loopne
sarb
jmp
push
push
sub
push
shr
xchg
stos
int
in
mov
test
add
loopne
add
jecxz
sbb
sbb
adc
xchg
jl
gs
push
cmpsl
cli
sub
lahf
jns
scas
in
lcall
xchg
insb
xchg
pushf
mov
in
lock
cmc
pop
xlat
lock
cmp
js
icebp
in
sub
xor
xchg
cmp
lahf
lret
jmp
inc
sub
push
ret
or
cld
fldcw
mov
jg
inc
int
and
inc
leave
xor
fisubl
es
and
imul
in
insl
lds
sub
adc
jno
cmc
arpl
pmaxsw
jmpw
jns
pop
clc
fxch
sub
loop
in
sbb
ficomps
or
push
ja
xrelease
pop
jb
scas
push
mov
sbb
push
scas
mov
fxch
push
push
adc
cltd
push
push
stos
popa
push
adc
xchg
ds
cs
xor
mov
fstp
nop
inc
jge
pop
mov
mov
push
out
punpckldq
mov
push
jno
push
leave
add
or
stos
jnp
mov
mov
cmpsl
and
mov
scas
mov
test
jns
stos
add
pop
lea
sbb
mov
repz
jb
je
push
push
stc
mov
and
les
sarl
xor
sbb
cmp
and
mov
or
jp
inc
cld
pop
push
fidivl
jne
cwtl
stos
test
adc
xchg
test
add
dec
inc
ja
and
stos
subb
and
pushf
in
repnz
jae
loop
bound
fsubrs
loope
adc
and
mov
pop
mov
mov
insl
dec
incb
ja
push
ss
decl
mov
push
test
or
test
mov
mov
and
clc
jecxz,pn
jle
adc
xor
inc
jle
cmp
mov
std
adc
sub
cmp
jl
test
les
mov
mov
push
inc
fnsave
xor
popf
pop
lcall
sbb
insl
xor
adc
leave
movq
fsubrs
cmp
call
imul
testb
pop
out
jo
sub
inc
push
jo
sub
push
fcomps
mov
test
cmp
call
push
push
cli
inc
rcrb
aam
add
mov
shrb
test
rcll
dec
push
pusha
nop
cmp
cmp
add
xchg
dec
fildll
popa
popf
or
sbb
sub
inc
mov
push
inc
adc
cmp
cwtl
popa
icebp
push
fdivrs
mov
push
pop
in
pop
imulb
lret
pop
push
das
mov
out
push
mov
test
sti
arpl
inc
ds
in
xor
insl
and
in
mov
adcb
jo
xor
out
lret
rcrl
sbb
aad
movsb
mov
pop
mov
push
and
sub
fisubl
into
push
repz
outsl
icebp
mov
and
ss
cltd
out
fmull
cmp
leave
cmpsb
pop
loope
add
xor
cmp
push
jb
and
jae
pop
popa
dec
ds
cmc
imul
dec
shr
lret
lret
fimull
das
mov
enter
inc
shlb
sub
pmulhuw
fs
jg
push
call
repnz
rclb
stos
mov
xchg
js
jae
xchg
xor
pop
cs
les
xchg
pop
inc
xchg
dec
test
es
push
jo
xlat
cmp
mov
hlt
cmp
mov
xlat
add
call
jmp
and
xchg
fmul
popl
and
nop
daa
loop
add
scas
mov
jae
pop
add
mov
xor
faddl
shlb
ss
sub
mov
and
pop
mov
scas
int
jg
loope
into
cmpsl
jl
stc
inc
jo
sub
lret
stos
scas
jns
cs
sbb
pop
pop
mov
adc
icebp
push
mov
insl
shrl
inc
pushf
imul
in
dec
aad
cmpsb
js
arpl
out
mov
xor
jg
nop
in
pop
jle
push
out
into
jae
in
jmp
mov
dec
dec
js
leave
inc
xchg
push
movsl
inc
jle
popa
cld
aaa
aas
fmulp
cld
sub
inc
mov
inc
adc
sbb
repz
dec
mov
imul
mov
jmp
idiv
jmp
std
xlat
adc
xor
jb
mov
pop
js
xor
sti
ja
arpl
cltd
add
ljmp
dec
mov
fstpl
loop
or
cmpsl
push
pop
push
loope
pop
popf
shrb
sahf
lods
je
es
getsec
in
stos
push
pop
cmp
push
xor
stos
les
cwtl
cmp
mov
cmp
iret
das
int3
pop
xchg
mov
lret
push
frstor
js
adc
dec
fstps
lret
loop
nop
jo
and
shll
mov
lds
mov
pop
inc
or
repz
out
test
xchg
xchg
gs
or
push
fmull
sub
xchg
dec
jb
inc
in
fimuls
adc
sbb
aam
or
stc
xor
mov
out
data16
subl
and
and
test
xchg
push
adc
and
xor
je
cld
rorl
in
xchg
sub
push
js
repnz
mov
mov
adc
movsl
or
insl
xchg
pushf
cmpsb
pop
lahf
push
and
mov
fwait
roll
scas
out
sbb
mov
mov
clc
pop
movsl
mov
inc
test
xchg
inc
stos
lds
fistps
dec
fstpt
es
cltd
mov
cmp
lahf
shl
not
mov
mov
out
repz
mov
mov
jno
mov
shll
scas
jne
in
addr16
jmp
sbb
outsl
push
push
mov
es
xchg
pusha
testl
es
pop
lret
dec
mov
adc
pop
and
sarl
jb
push
mov
pop
pop
imul
jmp
leave
mov
add
andb
sbb
fnstcw
jge
cltd
inc
and
inc
push
cli
int
xor
sub
cs
add
pushf
xchg
das
sbb
repz
xor
orl
sub
xchg
xchg
test
push
clc
adc
ret
orb
bound
insl
std
les
pop
in
mov
or
jle
sti
inc
loopne
push
incl
and
adc
inc
sbb
jecxz
stos
and
push
pop
js
jle
sarb
cmp
add
jecxz
xor
jne
mov
mov
pop
push
lods
mov
fisubrs
leave
cld
arpl
xchg
or
xchg
adc
push
lahf
and
pop
cmp
loope
sbb
mov
jne
aad
orb
aas
sub
dec
pop
loopne
data16
xchg
xchg
cs
mov
je
jae
clc
bnd
out
repz
scas
out
xchg
aaa
les
movsl
xlat
faddl
xor
cmp
cmp
hlt
aad
lahf
scas
xchg
cmpsb
and
xchg
cmpsb
pop
xorb
cmp
cmp
lret
pusha
ljmp
repz
fstcw
jp
xor
jge
sub
cmpsl
fucom
xchg
adc
and
jb
mov
pop
mov
sbb
cmc
dec
stc
in
nop
or
cmpsl
addr16
stos
pop
popa
flds
pusha
xchg
cmp
mov
test
movsl
pop
inc
pushf
lods
lods
jb
pop
jo
pop
ret
lret
nop
inc
cmpsl
mov
xchg
mov
push
sub
sub
sub
pop
add
xor
xchg
dec
test
std
ret
mov
inc
xchg
cmpsb
xchg
sub
or
or
jns
adc
inc
test
sub
mov
sarl
data16
adc
mov
leave
daa
push
xor
rcll
push
xchg
lcall
mov
mov
ja
shll
mov
push
je
pop
mov
jl
fistps
adc
data16
push
ficoml
push
lods
inc
push
add
push
test
inc
push
and
fdivs
iret
or
xchg
pop
mov
stos
out
cmc
jp
cli
aad
sbb
push
cmp
adcb
sub
fbstp
hlt
xchg
and
xchg
mov
scas
jae,pn
subl
leave
cmp
push
shl
gs
cmp
sub
fsubl
scas
in
fstpt
js
test
fldenv
dec
enter
inc
push
inc
jg
fs
aas
es
xchg
fwait
fwait
add
test
xchg
cmp
pop
stc
inc
mov
inc
jns
mov
lret
test
cmp
mov
xor
jb
mov
rolb
insb
sar
stos
ljmp
call
mov
xor
xor
out
pop
ljmp
dec
cs
xchg
and
sub
mov
jle
into
ss
jl
testl
add
imul
int
test
addr16
stc
das
pop
adc
loopne
adc
sarb
cmpl
mov
imul
rorl
dec
mov
mov
mov
rcrb
imul
dec
mov
movsb
cld
out
cmp
adc
addr16
xor
adc
shll
jns
movb
jo
xchg
sbb
test
mov
int3
jge
jge
out
and
push
pop
sbb
iret
or
loop
test
xchg
or
lret
call
lcall
push
pop
push
iret
mov
subb
mov
lock
dec
add
popf
pop
es
test
dec
or
out
push
pop
sub
nop
es
outsb
xor
mov
mov
test
or
testb
mov
mov
jecxz
out
xor
idiv
lock
stc
rorl
mov
rcrb
cmpsb
stc
cmpsb
cmpsl
pop
add
xchg
stos
add
leave
and
adc
aad
leave
and
xor
inc
xchg
push
push
mov
repnz
movsl
jle
pop
in
mov
call
lret
add
inc
lcall
push
sub
adc
xor
xchg
pop
in
and
xchg
ja
mov
pop
aaa
imul
out
xor
mov
cld
sub
fidivl
rcrl
notb
lock
pop
jae
mov
dec
popf
lea
mov
xchg
int3
fwait
loopne
push
or
ror
xchg
lods
out
dec
mov
jnp
xor
scas
imul
movb
aas
inc
fdivs
and
hlt
clc
mov
test
pop
lahf
lcall
add
fsubrs
dec
mov
repz
mov
add
outsl
inc
add
or
pop
popa
lahf
enter
in
int3
and
fcom
push
in
jmp
pop
or
xor
pushf
dec
ds
js
sub
mov
filds
mov
aaa
dec
je
adc
cli
and
sbb
mov
xchg
leave
mov
or
arpl
push
mov
jmp
adc
xlat
and
shrl
add
fs
out
fcompl
imul
aad
mov
pushf
fildll
shll
adc
aas
xlat
dec
add
mov
clc
adc
push
inc
les
jp
or
inc
ficoml
and
aaa
sbb
inc
cmpsl
dec
xor
or
push
and
nop
add
or
push
rcrl
outsb
push
mov
add
add
pop
sbb
mov
decl
mov
xchg
pop
enter
pop
js
mov
inc
sub
pop
mov
faddl
scas
or
cs
icebp
push
adc
pop
push
jo
xor
sbb
xor
stos
sub
cmp
inc
aaa
test
jecxz
enter
test
std
stc
sahf
movsb
push
mov
push
in
cmp
movsb
push
repz
sub
aam
or
popa
jnp
sti
push
decb
in
jnp
sbb
lcall
xlat
cmp
into
pop
subl
lcall
in
jb
add
and
adc
bound
dec
test
mov
pop
rcr
push
xchg
or
stc
stc
xor
cmc
mov
xlat
idiv
cmp
or
mov
xor
ja
bound
out
sub
mov
cmpsl
fs
dec
push
fistl
cmp
out
test
outsl
pop
call
cmp
ja
fwait
ljmp
fsubl
inc
push
cmp
mov
or
out
mov
rcrb
popf
shl
in
inc
xchg
adc
lds
xor
in
pusha
iret
rcrl
adc
in
ret
pop
push
or
sub
or
or
outsb
adc
imul
mov
fwait
pop
out
jle
pop
mov
xchg
mov
into
mov
outsb
outsb
dec
ret
sbbb
call
push
xchg
iret
ja
pop
imul
inc
pushf
pushf
inc
shl
rcrl
jae
mov
pop
or
inc
cmp
call
lret
sbb
inc
mov
mov
rdtsc
flds
pop
fidivrs
add
loope
jle
fdivp
sbb
arpl
push
repnz
inc
stc
cmp
leave
inc
clc
mov
js
stc
pop
imul
popa
xchg
test
jg
out
mov
enter
add
xor
add
push
mov
repz
mov
mov
and
int3
dec
in
pop
dec
jecxz
or
negb
sbb
rclb
jae
pop
xor
push
lahf
xchg
push
loopne
addr16
es
jecxz
add
mov
and
sub
fisubl
dec
and
lret
mov
jnp
fcmove
mov
andb
in
dec
in
mov
jb
mov
adc
call
or
lock
add
sub
movsl
stos
xchg
aaa
sub
mov
dec
loopne
cmpsl
pop
stos
and
out
push
mov
popf
scas
invd
and
aaa
loope
out
fxch
push
push
jae
mov
xor
sub
mov
jmp
inc
mov
test
pop
bound
push
call
mov
lods
fs
mov
cmp
popa
cmp
jns
jle
jl
sbb
mov
scas
push
cwtl
mov
add
mov
mov
fs
inc
adc
cs
testl
and
pop
cmp
faddl
pop
adc
int3
inc
test
xchg
loop
adc
into
js
pop
cmp
adc
sbb
rcl
mov
imul
jnp
mov
jmp
fsubrl
push
jl
mov
xchg
adc
pushf
dec
test
test
xor
mov
inc
jg
adc
cmc
ret
mov
ret
lods
sahf
lods
pop
dec
sahf
ljmp
addr16
pop
jne
jp
push
cld
push
or
cmp
and
cwtl
cmpsl
inc
mov
js
add
ret
ss
xchg
mov
pop
push
lds
cwtl
lods
mov
xchg
ss
cmpsl
std
sbb
jne
out
sub
dec
gs
mov
dec
outsb
fwait
pop
dec
or
cli
lret
stos
jecxz
add
jbe
push
loope
cld
push
mov
daa
xchg
mov
mov
mov
cmc
aaa
ja
jle
cld
aaa
mov
jno
push
add
insl
push
loope
lods
lret
dec
or
dec
lcall
sbb
test
popa
test
aad
fdivl
rclb
repnz
ljmp
and
mov
ja
insl
mov
mov
jnp
int
push
repz
fdivrs
mov
cmp
pop
pop
rolb
gs
es
xor
mov
jmp
pop
pop
fnstsw
push
aam
adc
sub
dec
scas
xchg
jo
xor
mov
dec
ss
ja
dec
jae
in
cmpsb
stos
mov
mov
cmc
decb
addb
xchg
out
mov
mov
cs
sbb
in
bound
popa
push
movsl
je
mov
repz
and
lods
lods
jmp
add
push
aaa
cs
dec
aam
adc
and
sti
dec
and
or
xor
mov
xlat
push
inc
push
mov
cmpsb
or
add
cmp
scas
movsb
xchg
shl
mov
outsl
pushf
jmp
mov
test
adc
xchg
jge
cli
ljmp
push
aas
pop
lds
outsl
push
stos
orl
push
stc
test
sbb
aaa
ret
xchg
lcall
mov
mov
enter
andb
fwait
inc
popa
xchg
jmp
or
or
in
lods
push
and
jecxz
xor
outsb
ljmp
pop
test
ror
jae
scas
pop
jnp
cmpsl
mov
mov
popf
in
inc
enter
ljmp
adc
pop
ds
out
xchg
pop
int3
inc
fcmovne
pusha
addb
xor
xchg
or
and
rorl
and
divb
mov
stc
in
lods
sub
mov
inc
mov
in
lods
inc
jb
inc
inc
jg
arpl
mov
sbb
inc
dec
mov
lea
jmp
fidivrl
adc
xchg
mov
pop
test
clc
add
cltd
loopne
lea
sbb
and
mov
fsubs
mov
push
js
sbb
in
xor
jne
mov
ficomps
jge
mov
mov
loop
jae
adc
pop
loope
out
mov
out
movsl
pop
push
adc
cld
add
mov
das
adc
adc
inc
mov
pushf
sbb
cmp
sbb
adc
mov
jae
jbe
inc
sub
pop
scas
std
push
mov
jo
movsl
mov
inc
mov
sbbl
jp
xchg
adc
and
push
xor
mov
sti
arpl
jb
ss
adc
add
in
cmp
add
movsb
test
popf
xorl
pop
add
jb
stos
xor
pop
leave
jbe
shrb
icebp
incb
mov
fsub
scas
insb
int3
pop
das
out
lock
jnp
xor
imull
xor
add
scas
repnz
dec
stos
jne
dec
or
enter
into
jl
push
mov
sbb
mov
loope
jecxz
sub
lcall
inc
sub
in
mov
pop
addr16
xchg
leave
gs
or
jae
call
insl
xchg
or
mov
cmc
inc
mov
inc
mov
arpl
mov
ja
mov
insb
idiv
xor
sub
andb
mull
and
test
cmpsb
dec
mov
cmp
jnp
cmpsb
or
push
lds
stos
cmc
mov
cld
mov
sub
mov
add
mov
mov
add
jmp
in
xchg
jno
mov
imul
andb
pop
jo
mov
out
mov
adc
jg
pop
pop
pusha
popa
push
ret
or
inc
shrl
lret
lahf
shl
sub
inc
fcompl
ds
rcll
leave
nop
jnp
pop
aaa
adc
je
xchg
mov
notl
or
add
sub
push
test
lcall
aaa
pop
nop
jae
and
lret
xorl
xor
push
add
pop
cmpsl
mov
push
outsl
les
pop
sub
sbb
popf
jne
ss
jle
or
adc
loop
xor
nop
and
es
and
adc
es
or
into
jle
add
mov
test
fcomps
inc
xchg
arpl
xchg
and
add
ret
lea
int
add
xchg
pop
xor
mov
jnp
push
dec
push
iret
sub
cmp
inc
insb
pushf
rcrb
and
roll
std
rcl
push
and
aaa
out
sbb
jmp
jae
push
mov
imul
shrl
sub
cmp
adc
dec
sbb
mov
lahf
std
xor
pavgw
mov
cwtl
add
ret
mov
xchg
je
push
push
dec
mov
aaa
add
shlb
fs
cmp
out
xchg
les
movsl
mov
jnp
lock
dec
lahf
sbb
push
push
cmp
rorl
cld
xchg
pop
inc
adc
sarl
ljmp
leave
mov
xorl
sar
test
leave
es
ss
mov
cmp
adc
jl
lds
mov
inc
cmpsl
mov
jp
out
adc
pop
mov
mov
movsb
leave
jp
icebp
dec
xor
xor
cmpb
movsl
mov
or
adc
lock
pop
xor
dec
lds
fldt
icebp
inc
aam
call
in
and
pushf
mov
shrb
inc
les
push
push
out
sbb
pop
cmpsl
add
dec
fcoms
insb
dec
jbe
jne
int3
dec
fmul
das
rcrb
test
push
adc
inc
dec
in
aam
ja
cld
jecxz
test
lods
jb
push
xchg
jo
fsubs
mov
xchg
cli
mov
test
inc
mov
cmp
or
dec
or
cltd
pop
ss
jae
lods
mov
pushl
bound
pop
pop
fwait
jne
test
leave
and
sub
icebp
inc
and
ljmp
ds
xchg
mov
xor
ljmp
jecxz
mov
arpl
dec
mov
mov
dec
scas
cmpsl
js
rcll
cmpsl
jae
aaa
cwtl
inc
imul
mov
repnz
jle
sub
das
adc
mov
cwtl
ret
push
jne
lret
and
aaa
das
xlat
scas
push
sub
or
aam
sti
mov
or
cli
pmovmskb
push
frstor
int
ret
sub
push
push
in
lahf
stc
xchg
or
cmpsb
push
sbb
in
or
adc
jo
sbb
push
orl
mov
stos
fstl
mov
adc
pop
mov
jne
mov
lahf
pop
inc
or
sbbb
inc
mov
stos
xchg
mov
stos
pop
push
pop
mov
sahf
test
add
int
adcl
jmp
inc
loopne
push
sbb
mov
fs
mov
cmp
jp
addr16
in
subl
push
sub
jno
push
aaa
add
dec
and
rcrb
mov
mov
repnz
rcrb
loope
insb
xchg
shrb
gs
adc
xorb
push
outsl
adc
add
sub
cli
push
lds
out
sbb
sbb
sub
sbb
or
push
jbe
ja
xor
nopl
cmp
gs
lahf
push
not
xchg
arpl
mov
add
mov
inc
pushf
movsb
adcb
lahf
xor
xor
push
jnp
xor
inc
shll
adc
das
add
stos
pusha
inc
aam
out
adc
shl
jl
icebp
dec
call
add
test
push
inc
fdivr
fistpl
or
stos
cli
insb
inc
inc
and
jl
arpl
jg
jbe
popa
add
iret
pop
addr16
or
data16
sub
cmc
add
jmp
mov
fwait
pop
mov
and
cmp
movsb
jl
std
pushf
mov
loopne
cmpsl
cmp
inc
or
fisubs
lret
fsubrs
into
popa
adc
pop
sti
addb
ljmp
inc
mov
cmp
addl
mov
adc
jb
inc
cmpsl
in
ljmp
sub
add
push
xchg
ss
cmp
into
mov
mov
ss
fmuls
pop
in
mov
pop
cld
lret
adc
mov
or
out
jle
inc
pushf
cmp
jne
xchg
mov
out
jge
cmp
movsb
xchg
xchg
pop
lods
dec
xor
pop
sub
mov
xor
sub
mov
dec
jnp
and
mov
and
jmp
rorl
lods
rcll
jmp
jo
into
pop
sbb
inc
xchg
xchg
pop
mov
out
jp
aad
xor
cmp
mov
daa
jp
cmpsb
jle
mov
stos
aad
jbe
and
shll
orl
mov
gs
xor
mov
dec
and
movsb
pop
bound
repz
repnz
xchg
xchg
loope
push
ja
pop
push
bound
pop
xorb
and
ljmp
sub
jl
pop
and
testb
mov
mov
subl
push
sbb
into
rep
jg
mov
mov
aam
rcpps
xor
pop
xlat
mov
mov
or
and
push
pop
add
in
sub
pusha
push
inc
cmp
adc
xor
pop
mov
xor
jb
cmp
xchg
js
pop
pop
mov
in
ss
ret
out
nop
js
out
lds
xchg
sbb
sub
sbb
cmc
lods
stos
int3
scas
xor
dec
es
adcl
fsubrs
movsb
popa
mov
out
movsb
fnstcw
mov
call
fucomi
jae
rorb
xchg
inc
push
xchg
mov
dec
mov
jns
ljmp
pop
mov
jns
inc
lahf
mov
mov
stos
push
mov
sahf
test
sbb
rclb
jmp
fimull
mov
lcall
testb
mov
adc
push
and
orb
cmp
xchg
xchg
lret
or
call
cmpsb
sub
mov
mov
jo
je
fs
loope
and
test
in
xchg
xchg
ret
icebp
adc
mov
rorb
enter
mov
in
mov
and
sub
and
in
jp
pop
sbb
pop
xchg
movsl
mov
xor
out
add
sbb
aad
lret
inc
int
inc
mov
sbb
jae
sar
fsub
movsb
sub
jbe
adc
add
jle
icebp
ret
mov
fdivrs
push
and
sub
mov
scas
cmpsl
lods
scas
mov
cmpl
filds
aas
cmp
fcmovnb
push
dec
or
pusha
adc
fs
lret
and
lds
push
mov
test
sbb
adc
movsb
hlt
and
cld
sub
cmp
sbb
jo
mov
push
jnp
and
in
lahf
ret
dec
mov
icebp
aaa
lret
adc
rorl
popa
outsb
int3
aas
pop
pop
repz
jl
xchg
ret
popa
xchg
andb
cmp
decl
jae
push
fwait
roll
sbb
jae
rcrb
pushf
jle
lret
inc
test
xor
add
rclb
mov
lcall
ja
shrb
scas
aas
push
mov
jecxz
les
movsb
sbb
fsub
jecxz
adc
int3
inc
test
in
lret
in
aaa
add
fnstsw
int
push
test
pop
jge
xchg
push
add
mov
andl
xchg
sahf
jbe
mov
xor
lahf
shrl
outsl
test
popa
add
pop
dec
int3
test
or
jge
enter
sub
or
mov
mov
lret
fisttpll
cmpsl
dec
xchg
call
outsb
das
xchg
insl
fsub
push
je
test
jecxz
pop
adc
stos
imul
fstpt
inc
ja
aaa
lods
sub
faddl
mov
or
xor
cmp
je
mov
inc
sub
orb
test
test
aad
nop
pop
cmc
aad
cmpsb
mov
cmp
cmp
fdivs
and
mull
sahf
adc
push
lcall
aam
sub
sub
mov
or
dec
xchg
cltd
mov
jne
jp
pop
lcall
aad
lods
dec
inc
or
or
push
ljmp
pop
mov
add
sub
shll
insl
lds
add
imulb
and
sbbl
mov
and
pushf
push
std
add
push
imul
push
fstl
out
xchg
clc
aaa
sahf
xchg
dec
jp
call
lea
and
stos
adc
andl
cmpsl
enter
in
mov
outsl
std
jle
dec
add
scas
pop
mov
push
into
and
in
or
fs
adc
jae
loopne
jl
mov
aaa
add
and
and
xorb
in
loopne
cltd
aam
orl
jnp
loope
dec
mov
lret
movsl
xorb
mov
pop
pop
lret
sub
add
mov
jbe
shrb
ret
pop
jg
or
sbb
repnz
test
cwtl
and
in
push
mov
mov
push
ljmp
loop
mov
sbb
jl
and
inc
mov
mov
xor
in
pop
andnps
add
inc
loope
inc
sbb
mov
jae
int3
adc
test
jo
cld
inc
fnstsw
filds
subl
mov
cli
ret
mov
ds
lods
iret
pop
push
fldl
mov
sbb
add
int
dec
sarl
das
outsb
pop
pop
pop
sbb
dec
add
sbb
xchg
iret
in
mov
inc
pop
jp
ffree
test
mov
iret
mov
inc
cmc
pop
lods
sub
daa
pop
scas
stos
xchg
int
adc
popa
mov
cmp
push
dec
movsl
push
cld
aam
xchg
cmp
push
jno
mov
call
in
or
insl
xchg
mov
in
stos
jno
popf
std
and
rcll
xorl
jg
stos
stos
fcoml
ror
fnstenv
das
icebp
imul
mov
es
jge
sti
xor
es
rolb
dec
dec
test
leave
sub
add
insb
icebp
das
rcll
xor
cltd
lcall
rcrl
inc
cli
es
xor
push
cwtl
ret
xlat
jmp
outsb
jl
test
scas
or
mov
std
dec
sub
pop
inc
dec
call
shlb
add
xchg
pop
outsl
test
xchg
xor
cmpb
or
xchg
js
cmp
lock
xor
xchg
les
filds
mov
lods
scas
jae
mov
jnp
rorl
push
push
and
adc
js
jg
cmpsl
stc
dec
enter
je
mov
imul
and
lods
mov
xor
insl
loopne
cmpsl
xlat
cmp
cmp
test
push
push
pusha
ljmp
inc
adc
inc
repz
inc
out
into
stos
outsb
pop
sub
int3
or
xor
shrl
lods
cmp
and
movsl
push
mov
pushf
dec
mov
lea
stc
fstpt
xchg
lea
insl
pushf
jo
cmp
ja
cmpsl
xchg
jp
jns
adc
mov
sarl
cld
fstpl
rcrb
sub
stos
dec
lcall
fiaddl
xchg
mov
ret
cmp
aam
stos
cli
ficoml
or
ficoms
xchg
sub
pushf
rcll
int3
fidivs
sbb
push
inc
xchg
pushf
inc
push
inc
scas
les
std
cmp
mov
jbe
inc
js
add
fwait
daa
xor
pop
imul
gs
pop
mov
and
ret
bound
pop
mov
xchg
and
andb
jbe
push
or
mov
in
add
rorl
arpl
xor
addl
data16
inc
mov
sti
mov
mov
mov
imul
pop
int
or
push
mov
sub
jb
int3
jle
insb
sbb
push
and
cmpsl
dec
insl
xchg
jb
movsl
add
lret
xor
jo
cmpl
xchg
icebp
stos
dec
pusha
dec
filds
inc
cmp
jnp
mov
mov
xor
and
inc
mov
call
das
shlb
push
add
fs
dec
test
jbe
out
test
sbb
push
in
push
jl
rcrl
sub
ret
lret
jb
mov
fs
adc
test
pop
sub
sub
clc
icebp
xchg
mov
popf
std
cmpsl
xchg
jno
test
out
push
cltd
pop
lods
aam
outsb
jbe
cs
inc
dec
jg
jmp
dec
int
adc
mov
push
or
fwait
sbb
in
and
sbb
mov
sbb
into
add
mov
test
andb
jno
inc
cmp
push
or
outsl
outsb
dec
int
rsqrtps
inc
arpl
xchg
ficomps
or
add
aaa
mov
ja
pushf
repnz
lahf
adc
mov
pop
stos
jne
xchg
test
insb
mov
in
int3
push
arpl
sarl
sarb
les
dec
popf
outsb
nop
dec
sbb
mov
sbb
imul
and
adc
add
shll
cltd
int3
dec
lea
subl
fmuls
jb
inc
cmpl
mov
and
pop
mov
sub
xor
push
jne
fwait
xor
mov
sub
mov
ret
jl
gs
mov
pop
mov
sti
das
inc
fidivs
jae
lea
daa
je
cmp
out
clc
push
lods
push
sub
dec
inc
movsb
xor
xchg
sti
pop
es
xor
push
mov
xor
sub
cwtl
bswap
fidivs
scas
jecxz
jns
sbb
push
or
es
mov
inc
jno
inc
loope
imul
ret
mov
fwait
aad
push
incl
lods
adc
xchg
jo
rolb
dec
xchg
pop
test
sbb
pusha
popf
mov
sti
sbb
test
mov
repnz
rcpps
cltd
int3
sub
or
icebp
mov
fs
cwtl
dec
xor
or
or
push
mov
jmp
xor
adc
adc
sarl
jbe
mov
fisubrs
cmp
push
jmp
xor
imul
pop
das
jns
outsl
cmp
pop
pop
test
jmp
stos
sbb
adc
inc
stc
daa
aad
add
sub
mov
fs
push
lcall
inc
adc
out
cmpsl
or
fldl
clc
sub
pop
aam
ljmp
and
stos
sbb
dec
sbb
in
pop
out
fcoms
pop
mov
adc
cli
xor
ja
pushf
pop
out
jbe
cmp
mov
aad
jecxz
lcall
fisubrs
jae
fcompl
insl
sbb
dec
pushf
dec
dec
add
popa
add
xor
fs
xchg
inc
lods
scas
dec
pop
mov
rep
mov
lahf
sub
xchg
and
das
push
call
push
xor
sar
pop
jmp
bswap
fdivrs
ret
sbb
movl
mov
call
fs
add
dec
mov
inc
adc
xor
dec
xchg
imul
jnp
dec
push
cmpl
shlb
sbbl
in
mov
push
divl
jecxz
jp
repz
mov
xchg
push
inc
dec
pop
repz
fcmovb
fs
in
adc
test
mov
sub
hlt
xor
jle
cmovnp
inc
sbb
jge
xorl
mov
jne
cwtl
js
lret
es
cmp
jp
mov
and
jmp
popf
mov
aam
jmp
fldenvs
clc
mov
adc
loop
pop
push
cltd
mov
push
or
push
gs
sbb
shl
push
data16
mov
popa
dec
repz
push
jge
movsl
pop
inc
and
pushf
test
xor
push
mov
into
pushf
inc
sbb
scas
out
out
adc
lahf
xchg
or
lods
mov
aas
cmp
bound
and
pop
and
push
jecxz
adc
and
in
pop
xor
outsb
loopne
rcrb
lahf
bound
imull
or
inc
sbb
sub
mov
ja
push
sbb
shr
lods
in
lea
cld
daa
lds
lea
mov
popa
and
sub
jbe
push
testb
push
sub
mov
or
jns
cld
jbe
mov
in
xchg
scas
xor
cmp
arpl
mov
pop
fwait
pop
dec
insl
xchg
push
adc
mov
xchg
test
xchg
test
out
add
cli
sbb
dec
mov
sarb
out
int
sbb
jmp
scas
mov
loop
jle
decb
leave
ss
cmp
or
jae
iret
pushf
mov
in
sahf
pop
pop
repnz
stos
and
cmp
pop
jbe
lcall
jae
shr
in
adc
cmp
add
bound
nop
fwait
test
jo
sbbb
push
mov
sub
push
add
lcall
sahf
or
mov
pop
sbb
or
stos
pop
inc
push
xor
mov
es
ss
jbe
and
xchg
push
clc
jae
pop
dec
xor
insb
lds
lods
fwait
popa
fwait
sbb
adc
and
call
jmp
in
mov
cmc
rcll
and
add
enter
dec
cmp
sub
jno
cmp
mov
lcall
pop
push
push
sbb
xor
add
dec
adc
xor
in
xor
stc
pop
adc
mov
sub
jb
and
mov
push
lods
cmpsl
dec
movsl
xchg
mov
mov
cmpsb
std
jae
fucomp
adc
dec
jmp
sti
sub
rolb
negb
cs
and
dec
popa
lret
sub
sti
repnz
loop
mov
imul
out
aaa
pop
push
jp
mov
sub
ja
and
fsubrl
int3
push
fwait
sbb
push
mov
mov
push
mov
xchg
xchg
jle
jae
pop
mov
pop
jmp
insb
add
sub
jmp
fidivrl
and
ljmp
or
jbe
sbb
and
mov
data16
sub
xchg
scas
mov
sbb
mov
enter
repnz
or
les
or
out
popa
fs
pop
push
mov
or
lea
xchg
lret
inc
sbb
ds
in
cld
xchg
adc
arpl
bound
pushl
je,pn
and
inc
xchg
sbb
fsubl
dec
mov
mov
in
fsubl
pop
sbb
sti
mov
and
push
adcb
push
mov
fcmovne
cld
ffreep
ret
push
add
testb
push
pop
mov
sti
stos
ffree
sub
dec
jb
daa
lock
fs
xor
lods
mov
stos
add
inc
data16
sub
xor
mov
inc
dec
inc
sub
cmp
mov
or
mov
mov
inc
push
hlt
aas
je
mov
adc
cmpsl
sbb
insl
icebp
stos
pop
mov
loopne
int
xor
jl
and
pop
and
push
ret
fcomps
or
popf
or
xor
movsl
lret
imul
pushf
cmp
pushf
std
ss
mov
jp
mov
shlb
or
test
pop
xchg
inc
jb
lret
push
sub
jns
hlt
lds
mov
sbb
adc
ljmp
xchg
or
mov
aaa
adc
pop
in
jmp
adc
mov
inc
push
push
pop
xor
inc
jmp
repz
push
repz
or
xor
ret
hlt
mov
aas
subl
mov
loope
arpl
xlat
fcmove
sub
pop
or
out
dec
inc
dec
cld
and
rcrb
movsb
call
mov
cmp
dec
jae
mov
movsl
xchg
sbb
push
cmp
inc
or
imulb
mov
push
inc
and
pop
iret
hlt
cmpsb
xlat
xor
xor
dec
lock
push
movsl
push
stc
stos
sarb
stc
mov
js,pt
out
push
imul
sub
pusha
lds
push
mov
fistpll
xor
nop
ljmp
or
sub
pop
mov
rorl
pushf
mov
xchg
pop
pop
sbb
sti
sub
aam
sarl
sub
ret
sub
cmp
and
adc
pop
sub
dec
inc
mov
mov
adc
popa
vmwrite
fisubrs
adc
ds
or
jae
testl
add
nop
mov
nop
jno
push
add
add
mov
aas
mov
aaa
cltd
sbb
gs
jmp
lret
pop
es
jb
lds
insl
pop
cli
inc
mov
rclb
ret
idivl
cmp
mov
loop
xchg
and
xchg
les
outsl
aas
lret
dec
nop
aam
jmp
popa
enter
in
lret
or
shrl
push
cmc
bnd
sbb
inc
jg
jmp
repz
shll
call
cmpb
jne
ljmp
pusha
nop
push
cmp
outsl
sbb
pop
jg
in
ljmp
aad
pushf
mov
mov
sti
mov
and
inc
mov
mov
sbb
addr16
movsb
enter
adc
andl
insl
fwait
loop
sbb
arpl
test
in
test
movsl
push
sub
or
fldl
hlt
inc
jbe
lret
std
outsb
mov
cmp
dec
jmp
fsub
repz
lret
xor
fstps
and
insb
mov
sub
sbb
mov
push
push
pop
nop
lock
xor
fnstsw
pop
pop
mov
xor
push
dec
test
out
push
cli
sbb
lods
xchg
jmp
mov
imul
push
and
shl
test
jbe
mov
imul
pop
movsl
testb
in
cmp
mov
inc
inc
fwait
push
mov
stos
cmp
fadds
div
jg
inc
movsl
stc
and
lock
cmpsb
push
or
jmp
push
push
xor
mov
ficoml
inc
xchg
push
cwtl
pop
aas
sbb
in
xor
movsl
jae
push
lea
cmp
std
cltd
add
and
or
iret
and
iret
movsb
scas
scas
push
aas
or
push
js
clc
enter
and
push
pop
xchg
push
ja
out
mov
ljmp
es
inc
pop
mov
in
int
in
adc
leave
fstps
inc
jl
cmpsb
inc
mov
push
cmp
movsl
stc
sahf
pop
mov
mov
push
push
xchg
add
adc
xor
add
cli
mov
adc
mov
fistpll
mov
leave
mov
inc
nop
roll
bound
dec
in
cmp
into
fcomps
mov
mov
mov
popa
mov
mov
dec
inc
stos
clc
test
pop
xchg
adc
inc
daa
bound
in
dec
repz
repz
fmul
pop
pop
fsubl
testl
xchg
push
fisttpll
mov
add
jp
or
ret
push
inc
iret
cmp
and
jo
mov
stos
into
fbld
xor
out
or
mov
inc
fwait
gs
out
call
sti
popf
cltd
and
and
outsb
mov
lahf
xchg
dec
jle
in
xchg
aas
popf
mov
mov
test
jle
mov
mov
adc
or
movnti
popa
mov
push
test
subl
mov
jns
jb
out
mov
sbb
loope
pop
test
cmp
jno
aas
xrelease
xor
mov
hlt
jnp
xchg
es
mov
sar
mov
ficomps
pop
and
ja
pop
sbbb
lsl
stos
mov
icebp
inc
lods
jmp
lret
sti
mov
rorl
lcall
dec
sti
jne
fs
push
cwtl
inc
add
inc
pop
movsl
add
inc
mov
mov
jns
cltd
test
iret
and
and
cmp
cli
xchg
cmpsb
popa
xchg
cmpsb
int
cmp
rorl
jno
out
adc
in
lret
xor
inc
pop
and
sbb
inc
pop
jae
fnstcw
aas
aas
arpl
xchg
lret
and
stos
ljmp
fsubs
push
mov
aas
pushf
xchg
and
or
iret
test
push
push
scas
dec
fsub
lret
repnz
call
ret
popa
mov
jge
sub
or
push
pop
aad
xchg
stos
pop
inc
out
imul
jnp
loopne
sbb
pop
pop
mov
out
inc
push
and
dec
jnp
adc
adcb
hlt
jo
jg
pop
xor
js
adc
in
insl
adc
rolb
pop
jnp
sbbb
inc
mov
adc
add
sub
mov
lcall
mull
jo
subl
call
in
sarb
fdivp
xor
inc
add
imul
enter
lcall
aam
xchg
xchg
icebp
lahf
or
sub
movsl
mov
imul
push
scas
sbb
insl
pop
fisubl
jo
xchg
push
and
mov
scas
bound
mov
xor
cwtl
push
xor
push
mov
lret
enter
inc
push
push
sub
adc
cltd
add
pushf
mov
lcall
and
jmp
dec
mov
imul
insb
movsl
pushf
cmp
jb
jo
insb
outsb
add
sti
sub
push
imul
mov
and
enter
jmp
lods
test
mov
add
leave
pop
ljmp
vunpckhps
add
xlat
ror
inc
jbe
in
or
iret
nop
inc
cmp
mov
push
fildll
filds
icebp
add
shrl
adc
xor
pop
cmp
xor
xor
and
mov
push
add
cmpsl
jmp
sbb
mov
cmpl
mov
out
test
mov
std
and
jecxz
xchg
pusha
lret
pop
cld
int3
sbb
sbb
fstps
add
xor
popf
test
gs
cwtl
xchg
xor
xchg
addl
inc
insb
xchg
ret
repnz
aas
mov
push
fs
ret
mov
xchg
mov
iret
imulb
sti
mov
sbb
jp
mov
ret
xchg
push
jb
xor
xor
jmp
sub
out
loop
mov
popf
adc
cmp
push
mov
mov
fwait
add
xchg
inc
jp
add
dec
push
mov
pop
jnp
addl
lcall
and
movsb
int
add
fildl
pop
outsl
pushf
and
add
into
popf
aad
cs
xor
fldl
cmp
push
mov
repnz
add
xchg
xchg
fidivrs
popf
loope
push
leave
sahf
push
push
popf
arpl
inc
xchg
inc
jno
dec
inc
popa
dec
stos
push
or
in
aam
mov
jmp
xchg
and
jno
and
daa
mov
sti
jmp
mov
int3
in
out
jnp
ds
jno
mov
div
xchg
in
sbb
inc
pop
lods
sahf
outsb
cmp
xchg
or
cmp
adc
adcb
ret
sub
loope
sahf
sti
shrb
mov
das
dec
sarl
roll
shl
jge
sbb
jae
pushf
leave
cwtl
add
sahf
arpl
jmp
jo
in
push
test
cmp
test
xchg
addb
adc
jp
gs
into
vmread
clc
push
popa
add
xor
fnstcw
lods
xchg
jo
mov
mov
cltd
insb
mov
adc
lret
jns
push
sub
and
push
fisttpl
push
push
inc
and
jbe
dec
xchg
xchg
in
inc
imul
and
es
push
out
jbe
lcall
inc
mov
rcl
out
ss
icebp
inc
xchg
cmc
loopne
or
sbb
je
cmp
in
mov
ds
dec
cmp
mov
pop
fnsave
repz
rolb
aam
dec
ds
xlat
add
mov
sub
push
and
inc
js
les
loope
pop
push
ret
int
aas
shr
xor
lds
sub
pop
ret
push
mov
xor
cmp
in
cs
lods
lret
push
loope
popf
cmc
push
or
ret
jne
les
jp
inc
pop
xor
push
xchg
fbstp
cmp
push
repnz
dec
push
mov
cmc
adc
mov
in
mov
inc
aad
into
push
dec
dec
sub
xchg
jo
testl
in
xchg
adc
mov
xchg
cwtl
sub
xor
shr
sbb
sbb
xchg
jae
jge
sarb
jbe
lods
mov
out
mov
mov
nop
dec
testl
inc
mov
imul
sub
mov
test
rclb
cltd
testl
mov
sub
in
push
orl
stos
rcrb
add
jmp
clc
stos
imul
xchg
shrb
sub
mov
neg
and
xor
push
stc
sub
cmc
bound
inc
jns
mov
xor
xchg
cmpsb
jle
mov
pop
dec
mov
cmp
sub
push
test
cwtl
jmp
shrl
sub
add
mov
clc
nop
pop
sti
loope
lret
stos
faddl
dec
outsb
sub
js
jge
push
shrb
and
mov
mov
pop
sahf
arpl
data16
push
mov
mov
xor
lds
test
repz
inc
imul
test
cld
insl
jmp
insb
adc
sbb
cmp
jecxz
and
pop
out
outsl
mov
pop
xchg
out
mov
dec
push
cmpb
or
push
icebp
mov
cmp
xchg
in
and
out
dec
jae
push
outsb
mov
dec
aad
add
pop
bound
sti
push
fildll
repnz
loop
cmp
stos
lcall
jl
lods
addr16
inc
push
negl
orb
jecxz
add
pop
inc
repz
jns
xchg
call
pusha
testb
inc
stos
ja
test
je
dec
shrb
mov
loopne
inc
loope
aam
add
and
jge
out
sbb
cltd
fdivr
jae
mov
popf
sbb
cmc
lahf
sbb
jnp
sbb
jmp
and
mov
int3
cmp
push
fisubl
fldl
cltd
into
int3
jmp
std
xchg
inc
xor
popf
fs
loop
stc
mov
repnz
jne
fucomip
leave
xchg
jl
jp
sbb
scas
loope
and
add
ret
es
lods
loopne
ja
cmc
jo
mov
dec
std
lret
push
mov
sub
cmpsl
movl
pop
push
sahf
xchg
hlt
cmp
addl
daa
mov
pop
cld
cltd
mov
or
repnz
scas
or
lock
lcall
enter
mov
cmpsb
jle
icebp
push
ficoms
lret
out
andb
ja
adc
mov
add
imul
js
mov
rclb
lods
jecxz
int
xchg
lcall
dec
scas
and
hlt
mov
addb
xlat
sbb
subb
and
add
jecxz
popa
imul
sub
adc
xchg
dec
shlb
jl
scas
pusha
mov
sbb
imul
subb
mov
dec
jno
lahf
jle
insb
sub
sbb
pop
jae
xor
lahf
clc
add
test
pop
leave
cltd
xlat
push
mov
daa
les
add
bound
mov
or
mov
ja
out
mov
pop
push
test
ja
arpl
jo
inc
dec
fcomps
adc
fimull
jge
ja
pushf
in
adc
ljmp
xchg
mov
cmp
and
sub
fisubs
mov
xchg
push
popa
imul
xchg
sbb
or
mov
dec
stos
dec
add
sbb
jns
data16
mov
bound
add
pop
mov
xchg
jp
push
push
fistpl
adc
mov
mov
adc
mov
mov
insl
sbbb
fcoml
inc
ss
rclb
pop
aaa
sub
xor
mov
pop
mov
mov
cmc
aad
adc
cmp
xchg
popl
int
lret
xor
mov
mov
call
les
sbb
fsub
cmp
cmp
std
mov
add
sub
test
push
push
or
push
mov
lods
xor
and
add
add
gs
inc
andb
xor
mov
adc
inc
rsqrtps
scas
addr16
in
int
lods
cmp
and
pop
clc
add
in
stc
pusha
test
and
scas
or
sbb
ret
cmpl
xchg
xor
mov
rcl
scas
mov
ja
mov
inc
xor
fadds
jle
fsubrl
xor
lock
push
ds
push
xchg
idivl
sbb
imul
repz
push
out
je
dec
jle
xlat
inc
mov
mov
mov
dec
add
sti
add
cmp
aam
pusha
in
ljmp
sahf
nop
loop
mov
jne
fidivl
lcall
push
or
pop
inc
mov
cmp
das
mov
sub
mulb
je
and
jle
repz
sahf
fbstp
std
push
fucomip
inc
cmp
cld
inc
popf
push
mov
inc
out
es
pop
fidivs
xchg
dec
push
pop
jns
sbb
aas
arpl
xlat
mov
lcall
or
scas
stos
mov
lcall
movsb
stos
mov
mov
movsbl
sahf
repz
rol
xchg
push
mov
xchg
jbe
lods
mov
push
lods
out
mov
sbb
pop
sub
jne
and
xor
inc
test
push
xorb
mov
xchg
cwtl
ja
pop
out
andl
and
inc
sbb
mov
sbb
pop
xchg
add
lahf
filds
inc
sahf
shl
cmc
adc
mov
mov
push
ds
jnp
push
aad
mov
xchg
mov
push
lcall
lahf
pop
stos
movsl
push
add
fisubrl
add
mov
out
xchg
adc
inc
popf
ror
pop
aam
sbb
insl
mov
inc
pop
fcomi
pop
repz
sahf
inc
icebp
xchg
je
leave
adc
test
hlt
adc
or
add
adc
scas
mov
jg
sahf
fisttps
imul
push
rolb
push
arpl
xchg
nop
pushf
imul
or
arpl
sbb
sub
and
push
orb
rcr
mov
push
fucom
add
jne
adc
pop
xchg
mov
pop
rol
ljmp
test
push
inc
add
adcl
fimuls
loopne
xlat
xor
dec
das
pop
cwtl
loope
leave
push
sahf
call
add
cmp
iret
pushf
xor
std
xor
pop
sti
xor
inc
mov
aas
mov
addr16
add
pop
mov
mov
push
xlat
push
jbe
repz
jmp
test
jmp
out
xchg
sbb
cli
mov
insb
icebp
xchg
mov
sahf
imul
daa
jae
outsb
pop
adc
nop
mov
xor
fsubrl
js
outsl
mov
stos
add
add
cmp
mov
push
sbb
sub
daa
fnstsw
push
ljmpw
popa
sub
and
out
sub
popa
mov
sbb
mov
aad
movsb
mov
and
into
xor
xor
popl
push
idivl
ffree
adc
push
inc
add
fdivs
jg
add
movsl
cmp
push
lahf
jmp
in
add
lahf
mov
mov
mov
out
shl
jle
jg
adcl
in
mov
cmc
cmp
aam
out
jl
cmp
push
inc
xchg
out
adc
mov
jp
xchg
xor
fsubrs
cmp
negl
dec
lock
cli
xor
cmp
es
pop
jge
imul
jne
jne
add
outsl
or
push
pop
cmp
fstpt
pushf
rol
call
xor
jg
cwtl
dec
mov
push
loop
stos
jns
jae
pop
jb
iret
jae
xchg
mov
push
icebp
aas
mov
leave
dec
jle
gs
stos
xorl
mov
pop
ja
leave
inc
arpl
lcall
and
fcomp
popa
inc
or
and
mov
xor
popa
push
adc
out
xor
pop
pop
jns
arpl
inc
aaa
mov
movsl
jbe
insl
or
in
and
dec
dec
and
mov
call
fst
je
push
xor
jns
nop
popf
rcrb
xchg
sbb
cmpsb
dec
pop
loope
lret
daa
lods
inc
int
xlat
sub
mov
das
jb
pop
rcrb
fildll
cmc
mov
mov
push
bound
pop
outsb
xchg
mov
jne
inc
push
jns
ja
lock
out
and
mov
insl
stos
adc
mov
pusha
in
xchg
and
dec
outsl
incb
lret
mov
mov
mov
mov
xor
and
dec
scas
les
fs
ret
out
call
inc
mov
in
popf
les
cmc
push
or
push
loopne
outsb
or
addr16
stos
popa
fistl
ficoml
or
jmp
repnz
mov
dec
and
inc
mov
adc
sarl
cli
adc
out
jmp
jo
sub
xlat
mov
insl
gs
in
sti
nop
xor
xor
mov
xor
jne
xchg
outsb
sub
sbb
rcll
adc
or
dec
jge
or
xor
jmp
push
pop
push
xchg
xor
xchg
out
icebp
repz
daa
add
mov
lds
shll
jns
popf
stc
xchg
aaa
ja
out
arpl
adc
add
inc
nop
sbb
mov
push
xchg
int3
push
out
cmp
pop
cmp
and
bound
ret
lahf
pop
push
cmp
sti
les
mov
adc
and
mov
jg
mov
pushf
jns
mov
xchg
mov
int
int3
sbb
loop
mov
ja
xor
sub
arpl
shlb
mov
js
cs
jp
sbb
pop
mov
hlt
repz
jnp
test
xchg
lods
dec
xchg
pop
add
and
pop
xlat
loopne
lds
sbb
mov
lods
mov
dec
and
push
adc
dec
fldcw
fmul
push
call
adc
mov
addr16
pop
js
mov
mov
mov
cmp
inc
xchg
out
push
aaa
cwtl
and
in
cmp
je
lret
jl
jp
cmp
out
mov
sbb
faddl
cli
clc
clc
ret
dec
movsb
repz
lret
out
movsb
sub
lahf
xor
lret
mov
negb
hlt
or
add
pop
scas
sub
adc
sbb
push
add
sub
jle
jg
mov
xchg
adc
dec
mov
int
sub
xor
inc
cwtl
inc
icebp
mov
jg
int3
das
push
es
and
mov
mov
insb
out
lret
stos
dec
push
xchg
mov
jp
mov
jne
out
push
mov
add
pop
test
jnp
mov
cmpsl
fldenv
sub
out
xchg
ret
out
xorb
leave
cmp
jb
jle
add
push
add
mov
popa
cmp
lret
repnz
inc
lahf
das
cmpsl
mov
imul
shl
mov
or
cli
add
inc
sti
hlt
nop
adc
cltd
xlat
repnz
sub
mov
jno
add
inc
rcrl
or
es
subb
sbb
dec
or
adc
les
ds
push
cltd
inc
or
stos
pop
adc
test
fisubl
or
pop
mov
fwait
and
das
pop
arpl
adc
sub
dec
insl
jle
cltd
mov
fwait
mov
outsb
or
pop
test
inc
repnz
ret
cmc
fs
xor
jecxz
mov
xchg
filds
push
adc
test
pusha
mov
imul
cmp
mov
dec
jmp
cmc
in
add
dec
mov
sub
dec
fadds
xlat
imul
je
ret
das
enter
ds
cmp
pop
pop
lods
sbb
xchg
adc
notb
icebp
je
rolb
and
mov
shll
in
aaa
lcall
cmp
popf
jae
add
mov
inc
mov
push
lods
aad
push
jno
sub
cmp
stos
ds
mov
lahf
insl
and
mov
mov
mov
push
mov
pop
aad
jmp
inc
xchg
push
dec
cmp
rcrb
mov
sbb
outsb
xchg
test
mov
rcrb
mov
pushf
mov
xor
xchg
test
cmp
xchg
and
sahf
xchg
push
adc
clc
push
shlb
mov
xchg
out
pop
mov
ds
dec
pop
cltd
xchg
lds
js
mov
dec
cmp
subl
xchg
daa
insl
jecxz
shr
cmpsl
xor
add
sub
jge
sbb
dec
in
inc
add
sub
sub
xchg
push
sbb
frstor
pop
jle
loopne
lret
mov
orl
sub
xchg
cmp
dec
mov
jb
mov
sub
int
nop
loopne
pop
jbe
xor
lret
mov
mov
mov
dec
test
add
push
repnz
pop
sti
jge
es
rclb
int
insl
jb
mov
dec
pop
into
mov
push
lahf
in
mov
lcall
jb
add
pop
inc
in
xor
mov
daa
fcompl
cwtl
iret
imul
cmpsl
movsb
fisttpl
sbb
lods
pusha
int
xor
and
push
test
mov
aam
pop
insl
and
inc
icebp
and
mov
xchg
test
mov
xchg
rcr
ret
iret
inc
into
loope
mov
mov
scas
imul
scas
int
insl
adc
sbb
mov
shll
push
adc
mov
cs
cli
cltd
push
lods
div
orl
test
sarl
out
outsl
mov
pop
inc
xchg
aad
sbb
js
mov
inc
add
in
cmp
fidivs
test
lret
fdivrl
jle
sub
subb
pop
leave
cmp
push
or
xor
sarl
dec
pop
and
pop
xchg
add
sub
adc
mov
addr16
cmc
subb
mov
orb
push
jmp
fstpt
mov
icebp
repnz
xchg
imul
in
adc
mov
bswap
dec
mov
sub
push
or
rol
xlat
stos
scas
test
dec
jnp
or
mov
into
pop
into
daa
orl
xchg
mov
jnp
cmp
jecxz
cld
push
fs
mov
mov
xlat
jb
jae
loopne
negb
pop
add
adc
aad
inc
and
imul
nop
mov
test
jl
aas
lods
lahf
das
fdivl
jp
loop
es
cli
adc
jge
or
jge
call
cmpsb
arpl
jbe
inc
push
mov
dec
dec
or
fdivrs
fs
ficoml
pop
xlat
orb
daa
mov
scas
das
push
mov
call
sbb
ret
movsb
popf
or
and
stc
int
mov
cmpsb
cmc
and
dec
mov
dec
push
cwtl
fs
sub
push
imul
in
lret
inc
jge
jbe
sub
xchg
push
cs
jno
cld
jle
add
add
mov
cmp
loope
stos
adc
and
jbe
dec
aas
inc
or
pop
and
data16
dec
mov
ja
stc
xchg
ss
lahf
xor
mov
mov
mov
sub
test
nop
adc
fnstsw
mov
lods
add
aaa
cmp
inc
cmpsl
jnp
lods
sub
fs
scas
mov
jno
cmp
xor
lock
sbb
add
mov
data16
lret
rcrb
je
pop
loopne
fs
nop
xchg
and
sub
dec
aaa
mov
mov
xchg
inc
orb
fdivrs
sub
dec
in
push
cli
testl
push
mov
stos
loop
clc
test
inc
in
xchg
cmc
repz
out
aam
in
or
push
icebp
sub
in
or
inc
push
sarb
test
shlb
subb
mov
in
dec
aaa
xchg
push
shl
clc
in
mov
test
cmp
cmp
xor
popa
mov
pop
cmp
xchg
dec
push
int3
mov
sarl
mov
ret
mov
pop
fdivl
enter
data16
xchg
xchg
pushf
leave
out
out
paddsb
insl
dec
lahf
jmp
sahf
jne
sub
enter
ds
mov
mov
cmp
call
aas
mov
ja
mov
cmc
xor
mov
cmp
xchg
outsb
mov
jmp
mov
mov
loop
or
add
sub
xchg
rolb
cmp
ss
pop
std
xor
mov
add
ljmp
cwtl
ds
mov
pop
call
test
mov
jg
pop
mov
shlb
ror
push
movsb
mov
xor
mov
jne
imul
push
cmp
sbb
dec
dec
push
fnstenv
or
lret
xor
adc
je
xor
cmpsb
adc
mov
cmpsl
lods
sbb
push
jnp
push
loope
mov
iret
sbb
loop
push
mov
es
pop
cmpl
xchg
mov
shll
jno
jns
sbb
ds
mov
shrb
and
mov
lds
xor
pop
inc
mov
push
shlb
jp
jg
cmpsb
nop
test
inc
dec
ficoml
test
pop
loop
std
push
mov
ja
push
cmp
mov
sub
xchg
in
xchg
inc
jno
and
std
sahf
push
sbb
mov
mov
cltd
les
shlb
lcall
push
jo
xor
mov
dec
into
cli
dec
int3
mov
push
scas
jno
outsb
xchg
or
in
xlat
gs
stc
pminub
cmp
out
aaa
lods
push
stc
ljmp
fisubs
int
fldl
or
dec
add
pop
sti
push
aaa
dec
sarb
aad
fs
or
add
imul
shlb
int
sbb
stos
jae
into
xor
mov
mov
arpl
cmp
repz
lods
loopne
mov
les
test
fwait
push
nop
jmp
xor
stc
adc
iret
arpl
nop
aam
fadds
aad
dec
dec
pop
add
mov
adc
cmpsl
jbe
fsts
dec
mov
adc
mov
xchg
pop
test
push
pop
mov
jns
cmp
xor
pop
xor
cli
mov
gs
test
jle
mov
in
mov
inc
ja
push
pop
dec
add
lcall
mov
cmp
nop
sub
ret
or
lret
adc
fcoml
in
call
imul
and
ret
fwait
xor
lret
ljmp
inc
dec
lods
pop
jle
jg
dec
stos
sbb
dec
int
lahf
rcrl
lret
in
cwtl
scas
sub
je
adc
pop
ja
scas
jo
inc
fdivs
xchg
mov
in
cmpsl
inc
ffree
adc
dec
out
dec
stos
xchg
sub
mov
imul
push
shr
imul
adc
outsb
pop
add
js
popf
fnstenv
mov
xlat
lock
push
test
sbb
add
cmpsl
ret
vpmacsdd
dec
push
arpl
jle
loope
mov
and
adc
pop
out
mov
pop
cmp
aad
out
sbb
in
stos
filds
xor
jae
jae
xchg
cs
pusha
cmpsl
xchg
push
lret
cld
sbb
or
jne
sub
inc
idivl
and
jbe
adc
insb
in
out
in
cmp
cmp
js
inc
ljmp
cmp
xchg
popf
adc
xchg
scas
outsb
shlb
mov
jae
and
mov
jmp
dec
or
xchg
mov
shlb
dec
pushf
and
push
fcomi
dec
lods
cmp
pop
cwtl
jmp
dec
popf
inc
ret
std
inc
js
jbe
pop
popf
stc
or
cltd
xor
movsb
mov
lahf
cmp
out
dec
push
add
and
outsb
adc
pop
insb
mov
cmp
bound
lock
sub
out
or
or
fidivrs
mov
js
orl
ja
fdiv
frstor
xor
xor
ss
xlat
or
lcall
jp
add
add
add
jg
lcall
jmp
rol
out
das
sub
aaa
jl
or
cmpsl
mov
mov
test
mov
mov
out
fwait
jne
dec
mov
cmc
movsb
add
fs
in
xor
mov
out
arpl
mov
ljmp
and
jbe
ffreep
and
jne
mov
or
push
mov
test
add
push
sbb
xor
scas
jns
je
adc
test
fwait
leave
pop
jge
in
int
mov
jg
cmp
hlt
ja
sbb
loope
push
xchg
daa
pushf
aaa
shll
xchg
rol
cmp
pop
jmp
pop
adc
imul
pop
sub
test
sub
xor
jecxz
lahf
mov
out
xchg
orb
bound
je
pop
movsl
out
pop
and
push
xor
mov
and
adcb
adc
push
in
repz
push
mov
jge
mov
pushf
icebp
jns
push
push
pop
fistps
lcall
leave
lea
cmp
inc
jne
xor
sub
ss
mov
mov
push
jo
ds
adc
aad
ds
loopne
in
and
xor
push
sti
or
sbb
xor
insl
cmc
fwait
loope
iret
sarb
jno
jb
insb
jae
xor
aas
add
paddusb
mov
hlt
inc
mov
es
aam
adc
cli
sahf
jecxz
dec
fcmovnu
mov
stc
fsts
aas
sbb
popf
shrl
int3
lcall
fdivr
shrb
fdivl
add
lcall
jp
les
or
cmp
into
cld
sub
negl
call
out
sub
sub
dec
repnz
push
xor
out
ds
js
fnstsw
nop
pop
test
call
adc
repnz
dec
cmpsb
dec
fcoml
sub
cmp
dec
xchg
cltd
push
gs
cmp
push
mov
clc
imul
adc
and
mov
cmp
ficompl
out
xchg
cmc
mov
mov
ret
inc
sbb
inc
das
imull
sbb
xor
mov
mov
pop
cmp
mov
dec
imul
fcomps
mov
pop
inc
xor
popa
mov
filds
into
andb
jl
jmp
jmp
int3
rcll
inc
repnz
or
jg
xor
cmp
or
loope
int3
mov
call
mov
lea
xchg
lods
pop
and
push
mov
leave
cmpsb
sub
and
adc
jno
iret
jnp
jg
jne
cmp
or
sahf
hlt
aas
fcmove
jno
shlb
ljmp
popa
mov
lahf
inc
jp
and
sub
mov
adc
jb
pop
std
add
jg
dec
sub
push
sbb
push
sbb
mov
jne
cli
or
jnp
jno
faddl
pop
arpl
dec
xchg
jle
js
xchg
adc
lds
mov
pop
inc
cmp
push
cmp
push
stos
dec
ret
leave
leave
fcoms
fsubr
push
push
mov
jmp
dec
adc
nop
or
es
cmp
mov
mov
pop
mov
pop
imul
mov
jae
xchg
int3
jl
sub
inc
mov
ja
movsb
adc
out
data16
stos
jle
rcl
sahf
jbe
sbb
lahf
loop
xchg
inc
lods
xor
daa
scas
andl
dec
idivl
loope
add
pop
sbb
cli
test
inc
push
lret
fsub
mov
popa
fnstsw
arpl
add
pop
mov
adc
inc
xor
mov
clc
orb
add
sub
fiaddl
pop
adc
or
repz
stos
mov
loopne
add
push
and
xchg
lcall
adc
into
xorb
inc
daa
fdivrs
mov
out
lods
es
and
push
decl
jge
imul
inc
movsb
lahf
jae
cmpsb
mov
fs
repnz
push
adc
xor
mov
scas
jb
bound
mov
mov
insb
pop
movsb
xchg
jne
inc
int3
out
cmp
mov
les
cmpsb
mov
or
mov
ja
test
inc
xchg
adc
clc
sub
cmp
aam
pop
data16
shl
test
shll
lds
and
iret
cmpsb
clc
xor
or
cmp
jbe
pop
cmp
lret
pop
push
mov
into
xor
in
call
sub
ja
scas
stc
cmp
add
add
scas
xchg
loope,pt
adc
rcr
int
lea
adc
pop
adc
daa
inc
sub
pop
faddl
push
mov
adc
arpl
jg
mov
iret
icebp
ljmp
jno
push
mov
sbb
pusha
lea
jb
and
mov
cmpsl
push
ljmp
cmp
in
pop
shll
xchg
iret
inc
sub
pop
movb
mov
negl
clc
jl
pop
adc
mov
mov
or
fsubrs
cmp
daa
andb
pop
insb
mov
push
mov
out
mov
adc
and
jg
leave
lcall
xchg
js
in
rorl
mov
pop
mov
sub
push
int
imul
xchg
mov
sub
jo
stos
jno
mov
xchg
sub
jecxz
daa
xor
hlt
xlat
addb
std
test
bndstx
outsl
ds
pop
das
and
div
aam
outsb
stc
inc
mov
das
cltd
jo
mov
es
mov
pop
rclb
jbe
pop
daa
jle
jbe
adc
jb
push
iret
pusha
mulb
cmc
in
sub
add
xor
lahf
pop
outsb
dec
insb
lret
dec
cmpsb
pop
mul
add
xor
lods
ret
jl
stc
inc
xchg
je
mov
adc
xchg
idivb
xor
arpl
pop
sub
hlt
adcb
pop
test
xchg
pop
repnz
add
insb
sbb
int3
dec
pop
push
mov
mov
jp
mov
mov
cmc
cs
dec
out
or
and
mov
add
xor
dec
negl
out
lea
inc
add
into
lcall
jg
mov
or
out
pop
inc
jmp
popa
add
test
clc
or
inc
rcrl
xor
xchg
mov
inc
clc
mov
rcr
or
iret
xlat
jns
jle
mov
adc
ss
mov
mov
lret
adc
lahf
or
fcomi
and
rolb
std
ljmp
pop
mov
ljmp
cmp
popa
adc
mov
psubw
stc
fs
cltd
leave
cmp
pop
and
fcoml
js
push
enter
lahf
popa
xor
sbb
jg
pop
adc
in
sub
mov
xor
roll
mov
cmp
mov
fstpl
ret
enter
outsl
and
sub
mov
jecxz
repz
push
into
push
int3
std
push
mov
push
int
push
andb
sarl
fwait
ljmp
ficoms
add
push
push
dec
push
jb
sbb
inc
pop
mov
cld
add
cmp
xlat
lret
clc
out
xchg
insb
dec
jo
sbb
sbb
inc
jmp
inc
ds
adc
push
rcrb
int
mov
int3
inc
mov
xchg
clc
jns
pushf
jle
shrb
mov
sub
es
ljmp
add
or
dec
or
mov
repz
mov
dec
out
mov
sbb
and
mov
sub
inc
test
cmpsb
lahf
adc
push
sysexit
mov
push
or
sub
fistpll
movl
xor
cld
cmp
test
aad
pusha
mov
sub
es
andl
pop
out
cmpl
mov
adc
iret
nop
xchg
and
dec
ret
fisubl
push
inc
sbb
jl
ret
scas
mov
sahf
sahf
fldl
lock
sarb
jg
inc
imul
jg
push
xor
fldcw
sub
inc
and
dec
aam
dec
push
fbld
xor
sahf
lods
xchg
addb
mov
dec
cmp
fxch
sbb
stc
into
mov
sar
sbb
test
enter
push
cli
or
lret
jns
add
imul
cmp
sahf
mov
or
stc
xor
push
leave
mov
push
push
lock
out
xor
xor
cld
incl
or
fnsave
aaa
push
outsl
jl
push
shrb
xchg
sub
mov
xor
int3
or
add
outsl
fnstcw
repz
stos
stos
cltd
outsb
lods
add
pop
push
dec
repz
clc
xor
adc
out
push
xchg
mov
mov
leave
das
sub
jo
adc
xchg
hlt
sbb
cmc
push
ret
fdivs
and
cmp
fistl
inc
jmp
and
inc
adc
aam
insb
sub
pusha
mov
pop
mov
out
push
fldt
mov
fistpll
ja
icebp
inc
notl
push
loop
xchg
jb
inc
push
lods
cmc
xchg
cltd
scas
add
lods
andl
mov
sbb
sbb
divb
pop
sbb
pop
aas
jns
scas
clc
adc
sub
push
loope
in
push
and
pop
rep
shrb
mov
xchg
pop
stc
mov
sbb
imul
ja
das
push
cld
inc
aam
adc
mov
fadd
jns
in
inc
fildl
mov
jle
jp
jg
xorl
data16
mov
call
jp
in
outsl
scas
hlt
into
popf
dec
mov
sbb
cli
scas
push
mov
or
mov
rolb
std
call
test
ret
orl
push
xchg
outsl
dec
je
or
cli
jmp
sbb
inc
cld
xchg
cmpsb
test
fsubrs
cmp
add
jns
ss
loop
lods
js
jno
mov
add
out
sahf
lahf
push
cli
push
in
and
and
daa
cmp
add
inc
test
inc
js
into
es
fcom
cmp
leave
mov
sub
rcr
jmp
fmuls
add
mov
gs
test
mov
data16
pop
pop
imull
iret
out
mov
loope
enter
cwtl
mov
shlb
loopne
hlt
addr16
loop
ss
xlat
pop
jne
push
xor
xor
pop
mov
or
mov
in
lods
dec
push
adc
aad
jge
ja
mov
or
mov
or
jbe
movsb
mov
xlat
es
mov
or
dec
sbbl
jmp
xlat
aas
in
lahf
or
cltd
mov
or
inc
push
outsl
mov
xor
mov
stos
push
aaa
outsl
imul
jb
pop
add
add
addr16
fisttps
imul
push
fdivrl
cs
push
in
xor
icebp
jl
xorl
sbb
and
enter
or
mov
mov
out
daa
arpl
push
fimull
fisttpll
mov
add
and
pop
in
jl
stos
xor
out
xlat
imul
repz
psraw
insl
xchg
stos
and
xor
jmp
add
mov
mov
fists
and
ljmp
out
xchg
insb
jge
imul
fbld
adc
dec
rcll
push
sbb
fmulp
lock
stos
xchg
inc
ss
in
in
mov
xchg
or
int
cmp
push
bound
mov
not
push
mov
mov
jno
cmp
arpl
jne
and
or
arpl
adc
mov
mov
aad
mov
pop
scas
out
mov
divps
adc
mov
push
mov
add
mov
mov
clc
es
mov
iret
test
dec
aad
pop
ja
or
ret
mov
add
jb
stc
add
add
pop
push
out
lcall
jle
insb
mulb
or
inc
push
out
ds
aam
adc
jecxz
jo
ret
dec
repnz
dec
push
xor
dec
jmp
jle
cmp
shl
fdivs
scas
mov
aaa
ljmp
jle
fdivrs
adc
gs
dec
lods
in
jl
jbe
int
xchg
mov
pusha
inc
adc
iret
int3
sub
inc
bound
xor
les
inc
sbb
mov
mov
inc
fsubr
dec
pop
push
aaa
push
rolb
leave
sbb
fdivrl
es
mov
cmp
mov
cmpsb
push
cmpb
or
hlt
repnz
xchg
outsb
fisubrl
imul
insl
ja
lds
rorl
xchg
jns
fwait
imul
or
sbb
push
or
mov
out
stc
push
mov
pop
jno
sub
shr
outsb
pop
cmp
out
jnp
roll
jae
je
arpl
xchg
mov
pop
adc
lahf
cwtl
shll
pop
aam
mov
pop
lods
add
hlt
push
cmpsl
push
jb
mov
xchg
rcll
in
cmp
inc
ss
inc
sub
outsb
in
mov
jl
and
sub
jge
insb
fwait
data16
insb
outsb
adc
inc
in
push
mov
out
sub
lods
push
mov
int
andl
mov
jnp
les
jle
out
ljmp
jae
or
or
jo
fiadds
mov
fstps
mov
cltd
test
mov
mov
in
stc
negb
mov
lea
mov
mov
call
das
cmpsb
fs
insb
sbb
inc
push
les
or
lods
add
sbb
out
mov
jp
stc
mov
pop
adc
adc
repnz
pusha
and
mov
dec
sub
add
insl
aaa
mov
sub
fwait
jmp
mov
dec
ja
sbb
in
and
cmpl
outsb
hlt
pushf
dec
test
add
push
int3
push
adcb
enter
adc
fucomp
adc
mov
sbb
cmp
or
cmp
insb
les
shr
pop
and
imul
inc
fwait
pop
loop
dec
dec
fs
repz
jo,pn
ljmp
pushl
jae
adc
mov
pop
rclb
xchg
inc
addr16
insb
mov
mov
push
ljmp
test
jmp
pop
inc
mov
mov
lds
jae
dec
push
scas
icebp
pop
xchg
out
movsb
repnz
cmp
mov
int
pop
in
xchg
call
mov
aaa
scas
lods
mov
sbb
es
ret
mov
mov
js
mov
mov
push
les
dec
aad
pop
mov
sti
xor
ss
dec
daa
push
fstpl
and
add
testb
jp
lock
scas
enter
mov
pushf
mov
or
jae
cmp
stc
pop
xchg
aaa
sub
data16
or
andl
push
pcmpeqw
mov
push
xchg
inc
std
sbb
cmp
faddl
adc
in
cmp
in
cmp
dec
add
mov
mov
jo
push
jmp
add
ficompl
add
lds
adcb
insb
int3
sti
andb
arpl
movsb
movsb
test
xor
inc
push
xchg
bound
lock
inc
mov
test
js
loopne
mov
and
xor
mov
push
and
repz
mov
pop
push
xor
inc
xorb
inc
rorl
mov
daa
aas
inc
add
lret
ret
xchg
and
inc
inc
inc
mov
adc
movsl
inc
mov
dec
inc
cmp
test
dec
aaa
fs
sti
adc
push
push
cmp
adc
and
xorl
inc
inc
lods
xlat
scas
mov
cmpsl
mov
pop
jge
into
push
cwtl
roll
loope
sub
xor
add
mov
mov
cmpsl
and
aad
mov
adc
pop
scas
push
push
ret
inc
in
test
push
lahf
stc
lds
cmp
lds
or
pop
xor
mov
cld
fcmovnb
mov
decl
push
inc
lods
push
inc
jb
xchg
movsb
imul
shlb
call
cmpsl
ja
push
rcrb
xchg
mov
leave
push
ret
jl
loop
jge
ret
jmp
xlat
push
pop
add
stc
mov
std
imul
adc
add
flds
push
mov
dec
inc
sub
pop
gs
rcr
mov
stc
test
mov
push
cld
stos
push
mov
out
cmp
xor
push
stos
mov
scas
jp
mov
scas
jge
push
adc
push
insl
int
in
ljmp
loop
add
dec
jns
mov
jne
jmp
roll
movsb
cmp
in
sbb
test
imul
arpl
xchg
inc
std
sbb
loopne
pop
mov
or
jo
sbb
aas
ret
cli
jmp
in
push
mov
idivl
and
leave
jmp
jne
cwtl
ror
mov
enter
sbb
cltd
xor
mov
imul
mov
shlb
mov
xlat
addb
push
daa
push
cmp
mov
sbb
pop
lds
test
outsl
xchg
mov
adc
lods
mov
in
hlt
ret
sbb
les
daa
repz
lds
lods
xor
pop
jo
mov
stos
and
fidivrl
xchg
lret
dec
jmp
or
pushf
negb
xor
repz
dec
mov
mov
scas
in
inc
out
sbb
mov
xor
leave
fdivs
lret
mov
daa
mov
fwait
in
inc
outsl
fldcw
cltd
adc
jns
add
inc
cmpsb
fcompl
jo
out
sub
xor
mov
xlat
test
xor
add
dec
mov
inc
xchg
mov
jns
ret
adc
sbb
fwait
push
and
div
mov
dec
outsb
add
gs
mov
outsb
aas
adc
push
leave
pop
mov
mov
cmpsb
push
fcmovu
call
sub
sub
mov
xchg
xchg
xor
cwtl
cmp
and
pop
mov
subl
rcrl
outsb
or
mov
or
mov
pushf
dec
mov
jbe
mov
fldt
addb
cld
and
mov
mov
and
dec
sbb
add
sbb
mov
or
xor
mov
pop
fwait
sub
push
dec
inc
sub
sub
dec
xor
mov
fcmovu
movsb
jp
xor
xlat
popa
addr16
insb
dec
icebp
nop
repz
test
movl
or
movsb
push
fisubs
fsubrl
enter
nop
dec
ja
lcall
mov
adc
psubw
loope
xchg
cwtl
test
insb
outsl
orl
push
push
xchg
movsl
cmp
bound
repz
push
inc
scas
and
add
cmpb
movsl
or
ret
adc
adc
push
inc
xchg
add
or
dec
les
out
push
mov
inc
lods
pop
daa
inc
jno
add
add
mov
adc
jo
xor
test
cmpsb
out
ss
dec
int3
je
les
es
repz
fistl
pop
int3
jg
adc
xor
loope
ljmp
sti
push
xchg
aad
out
push
xchg
pop
dec
shll
pop
jns
test
ret
ja
dec
xlat
dec
mov
test
mov
imul
or
cltd
push
rorb
jmp
out
mov
sub
jbe
ja
adc
lods
int3
aas
pop
lds
scas
roll
xor
mov
shlb
js
mov
pusha
jb
js
and
push
mov
test
pusha
or
jnp
mov
cld
mov
push
leave
sub
adc
stc
dec
add
hlt
lret
iret
jmp
or
addr16
inc
fistpl
scas
push
fs
test
out
xor
xlat
bsf
cmpsb
xor
push
xchg
lret
in
and
arpl
cmp
push
lret
sub
and
bound
fbld
ljmp
cltd
mov
xchg
stos
mov
push
test
cmpsl
clc
push
dec
negl
pop
jae
repnz
adc
fucomip
cld
negl
int3
cli
sbb
mov
cmp
cmp
repnz
push
rcrl
test
xchg
push
das
mov
les
sbb
xor
jle
jle
into
push
jno
jle
mov
gs
iret
xchg
stos
bound
ja
out
inc
jnp
aas
in
std
xchg
pop
scas
cmpsl
xchg
jnp
outsb
ret
loopne
mov
dec
movsl
repz
inc
into
cmp
aaa
sbb
pop
cmp
imul
call
shlb
repz
fistps
mov
push
out
xchg
scas
idiv
cld
sub
adc
push
clc
lahf
dec
add
and
fbld
lods
pop
xchg
mov
sub
push
adc
sahf
add
fidivrs
jmp
js
loopne
aam
das
pop
repz
nop
mov
lea
sub
je
xchg
mov
adc
int3
lret
or
adc
js
jno
mov
mov
imulb
pop
or
dec
lret
test
out
popf
inc
dec
fstps
pusha
sahf
test
cmpsb
mov
inc
xchg
sbb
in
out
stc
fcomp
jbe
lret
shlb
test
std
cld
in
dec
jo
imul
push
push
cs
and
xor
push
iret
inc
jne
pop
dec
and
aas
jg
push
fisubl
or
mov
push
adcw
fs
loopne
sbb
iret
push
and
jl
and
test
test
jo
aad
jnp
sbb
mov
jne
xor
jl
cmpb
inc
and
dec
dec
or
lcall
cmp
sbb
fisubs
push
jb
and
jle
rcrl
nop
out
mov
sbb
outsb
pop
sbb
in
mov
or
lds
leave
addr16
push
push
cmpsl
rcll
push
mov
sbb
push
pop
xchg
rorb
jne
scas
sahf
or
dec
jl
sub
mov
xchg
fnstenv
mov
jge
jno
outsl
sbb
adc
jae
add
xlat
add
sbb
sarl
mov
cld
pop
push
test
add
dec
repz
or
mov
xchg
fbstp
ss
cmpsl
cli
pop
xchg
scas
cmpb
outsb
pop
adc
loopne
movd
in
fucomip
imul
xor
fbstp
or
je
push
sub
pop
ret
movsl
jg
pop
daa
and
jae
leave
and
leave
lcall
add
xchg
fwait
cmp
clc
push
jg
push
mov
adc
cli
jg
xor
loopne
pop
movsb
pushf
pop
push
inc
daa
insb
push
jp
adc
adc
fnsave
in
xchg
nop
fs
aad
stos
lock
cmp
in
sub
shrb
lret
xchg
push
adc
jns
mov
jp
jae
mov
outsb
out
in
mov
rclb
push
arpl
mov
rclb
xchg
nop
popf
clc
clc
les
pop
movsl
mov
sahf
fwait
and
push
mov
dec
dec
data16
nop
mov
sbb
pop
out
test
ffreep
orb
sbbl
in
jns
or
aas
mov
adc
cmp
cmp
fldl
push
push
ret
inc
lods
mov
push
mov
pop
push
shlw
in
push
pop
xchg
imul
cmp
mov
imul
xchg
out
das
sbb
xor
subl
xor
adc
push
mov
call
or
fcompl
push
fsts
decb
rorl
pushl
sub
das
sub
enter
xchg
dec
pop
repz
cs
in
pop
data16
shll
adc
sub
pop
sti
or
xor
jbe
xor
hlt
ljmp
xor
sbb
xchg
sub
adc
leave
mov
lods
xchg
pop
jbe
mov
inc
stos
jmp
push
jg
fcoml
dec
out
xchg
jb
into
popa
in
fxch
adc
les
imul
sbb
xchg
arpl
cmp
negl
add
cltd
inc
mov
lret
shl
push
push
fwait
mov
das
cltd
mov
xchg
icebp
push
push
test
out
inc
enter
loope
shrl
push
push
add
nop
dec
loopne
sar
cmp
lea
fs
dec
xchg
pop
or
bound
push
xchg
mov
add
or
xlat
mov
xor
and
aad
cmp
pop
mov
push
int
pop
test
pop
dec
add
jbe
mov
inc
xchg
inc
clc
fwait
dec
icebp
std
sub
fucomip
shrb
mov
or
mov
sahf
push
or
pop
xor
lods
ret
into
rcl
mov
in
jo
aam
dec
nop
xchg
jmp
mov
imul
rorl
outsl
sbb
inc
add
in
leave
insl
fs
incl
or
cmpsl
pop
subb
mov
sub
and
inc
popa
mov
enter
imul
jbe
cli
pop
cld
mov
call
add
pushf
dec
push
aam
aad
pop
cmp
mov
test
stc
xchg
pop
outsb
sub
mov
fisubrs
cmp
cmc
mov
mov
fwait
imull
xchg
int3
add
dec
mov
mov
movsb
jae
orb
dec
or
loope
movsb
pusha
xchg
sahf
jbe
jb
sahf
cmp
add
mov
mov
std
sbb
jmp
and
xor
int
inc
in
mov
fsubs
ja
fisttpl
cltd
lcall
out
xchg
imul
das
xchg
xchg
adc
dec
or
addr16
ss
clc
lret
stos
les
repnz
pop
gs
inc
ret
stc
in
jnp
int
mov
aas
movsb
adc
fstps
lahf
dec
test
adc
inc
arpl
sub
imul
int3
push
mov
inc
repnz
or
xchg
adc
pop
push
dec
push
or
ja
ucomiss
das
lret
ja
add
in
xchg
ss
jns
fisubl
test
xchg
repnz
loop
lods
add
push
enter
mov
xor
out
rorl
push
lods
fwait
inc
insb
mov
lods
out
xchg
cld
pop
int
mov
or
and
or
cs
stos
loope
and
cmp
and
aas
xchg
out
ja
inc
xor
mov
scas
fnsave
pop
mov
mov
popa
push
ljmp
dec
cld
lea
clc
inc
push
test
shl
lods
lret
push
enter
notl
and
out
fmuls
mov
ja
out
pop
xor
mov
dec
xor
test
mov
outsl
js
add
xor
mov
xor
gs
dec
scas
mov
dec
pop
into
add
andl
pop
dec
out
dec
mov
push
and
adc
push
dec
pop
sahf
daa
cmp
fmuls
push
mov
inc
mov
dec
pop
loope
inc
xbegin
daa
repnz
test
mov
mov
pop
hlt
or
test
cmp
push
stos
push
dec
vmread
fisubl
orb
loope
test
repz
mov
jle
and
pop
add
iret
insl
lret
xor
mov
xchg
pop
loop
ja
mov
mov
or
std
pop
popa
rcrb
pop
sub
mov
push
ss
ss
jo
loopne
mov
nopl
adc
inc
push
inc
mov
test
lcall
int
xchg
sahf
and
add
push
mov
lcall
jne
sub
adc
cmp
push
les
xor
rcl
sub
xor
lcall
mov
pushf
in
adc
lods
mov
loopne
dec
stos
test
xchg
pop
mov
push
clc
pop
push
rclb
adc
push
adc
adc
popa
imul
xchg
push
loope
pop
sub
cmpsb
enter
iret
into
mov
popf
mov
aad
cld
xchg
push
and
std
inc
push
repz
mov
pop
test
scas
movsb
aas
insl
lret
jle
ja
cmpl
movsb
test
cmp
stos
and
roll
jecxz
ds
cmpsl
mov
xor
jge
gs
xlat
add
rclb
gs
mov
jecxz
dec
scas
adc
out
fsubl
cmc
cmp
cs
repnz
push
sub
addl
in
outsb
pop
mov
sahf
cmp
out
lock
mov
flds
pop
out
fsubs
jbe
push
pop
out
and
int
push
ds
iret
lret
or
sub
arpl
push
jecxz
push
or
pusha
xchg
or
mov
pop
lcall
cwtl
insb
pop
mov
adc
adc
mov
jmp
pop
mov
cmpl
cmp
icebp
lahf
push
push
mov
mov
scas
loope
insl
inc
mov
pop
push
in
cmp
repnz
xchg
notb
repnz
mov
or
jbe
or
sbb
pop
outsl
shrl
xor
jae
push
jge
test
out
jmp
ljmp
jle
nop
add
inc
dec
out
fcomi
stc
pop
or
into
mov
jno
cmc
scas
pusha
and
mov
addr16
xchg
loop
lahf
or
adc
add
add
icebp
lcall
daa
sbb
xor
dec
or
adc
mov
sahf
cltd
xchg
jns
call
push
xchg
xor
mov
jb
ficompl
and
add
out
mov
push
cmp
lock
sub
jnp
sub
jns
xchg
mov
aam
mov
faddl
fsubs
mov
aad
pop
fistpl
lret
cmp
mov
int3
dec
jo
cmc
sarl
xlat
out
lea
in
das
mov
divb
adc
stc
jns
testb
movsl
xchg
outsl
pop
pop
test
dec
lahf
je
push
out
sub
lea
cs
ret
add
inc
lret
imul
xor
cmpsl
hlt
lock
orb
dec
clc
inc
inc
in
jg
cmp
xchg
cmp
sub
notl
fisttpll
cld
add
mov
mov
push
and
xchg
xchg
lcall
jnp
mov
inc
into
out
lods
mov
dec
sbb
adc
jmp
dec
add
mov
dec
jle
ds
mov
add
shlb
push
pop
mov
rcrl
dec
enter
sbb
cs
pop
pop
scas
jbe
push
neg
or
add
rcr
cmp
js
dec
out
sbb
in
mov
push
sub
aas
mov
lods
leave
dec
cmc
ror
jmp
in
push
dec
sub
add
mov
aad
cmp
mov
push
pop
mov
in
xor
insl
nop
clc
ja
jmp
dec
mulb
loopne
mov
xchg
getsec
loopne
gs
add
mov
lahf
push
cmc
scas
mov
pusha
iret
loopne
leave
inc
cmp
xchg
std
mov
push
inc
lods
or
sub
pusha
scas
inc
cld
roll
arpl
adc
push
jmp
sbb
xor
in
out
jb
sub
mov
sbb
gs
sub
fcomip
cmpsl
sub
xchg
jg
xor
xor
and
mov
les
dec
ret
les
mov
scas
inc
fistl
adc
daa
inc
dec
mov
jl
ss
jnp
out
jo
or
add
lds
stos
mov
cmp
sub
cmpsb
add
test
pop
inc
xchg
or
sub
mov
mov
jg
pop
sbb
imul
test
popa
sbb
dec
jno
jae
adc
mov
inc
shll
xor
jbe
in
loope
mov
jno
data16
dec
adc
insb
pop
imul
push
mov
cltd
ret
push
jae
aas
mov
hlt
mov
shll
mov
push
sub
dec
fldenv
cmp
add
daa
adcb
mov
aam
je
mov
lret
cli
inc
push
cs
sbb
mov
cltd
cs
loopne
test
scas
sub
xor
int
mov
inc
f2xm1
mov
xchg
cmp
xor
ficoms
lret
outsb
fstl
movsl
add
inc
mov
and
pushf
mov
sbb
inc
mov
out
jnp
fcompl
dec
adcb
inc
iret
mov
cmpsl
pop
add
jnp
mul
ja
add
into
mov
inc
and
fidivl
jns
pop
imul
or
insl
insb
jecxz
adc
mov
inc
rcll
add
mov
sbb
aad
lahf
mov
cmp
adc
in
out
add
insl
rclb
rol
stc
scas
push
and
aam
jae
popf
xor
sub
or
sahf
jmp
ret
gs
mov
push
mov
inc
aad
stc
scas
push
and
inc
in
cwtl
mov
push
sbb
pushf
repz
insl
mov
cwtl
pop
popa
into
xchg
lcall
and
in
lea
mov
pop
mov
sub
jmp
fcmovnbe
xchg
imul
outsl
xchg
sti
sub
jb
sarb
mov
shll
repnz
ds
and
xor
movsb
cmpsb
mov
xlat
push
repz
add
je
cli
enter
pop
jmp
xchg
inc
cmp
adc
or
jmp
fwait
mov
xor
icebp
mov
dec
stc
push
test
insl
mov
push
inc
call
pop
hlt
mov
lock
scas
mov
div
out
jb
inc
inc
sub
xchg
mov
test
xchg
jno
lods
imul
pop
sbb
jno
pushf
out
dec
loop
adc
addr16
sar
cs
je
cmpsb
movsb
xor
pop
popf
push
out
stos
dec
fsubl
mov
sar
adc
sbb
jmp
fnstcw
ret
pop
sbbl
filds
inc
fidivrl
test
mov
add
mov
inc
jg
xor
cmp
push
insl
ss
xchg
pop
adc
scas
xor
push
xlat
fstl
cli
rcl
repz
nop
push
shr
xlat
mov
hlt
xchg
xchg
push
mov
out
test
test
and
in
xor
aas
test
dec
fsubrs
sub
jnp
stc
les
pop
and
setg
stc
sbb
aad
pop
aam
xchg
xor
or
lcall
inc
shl
js
mov
stos
pop
dec
pushf
push
push
imul
rclb
subb
out
push
xor
insl
clc
xchg
icebp
sarl
add
je
movsb
leave
jge
sub
jne
pop
xchg
adc
or
lahf
pop
insl
add
sub
xlat
add
cltd
mov
ja
and
shlb
jne
cmp
das
je
mov
xchg
cmpsl
xchg
call
jp
mov
lret
pop
lret
mov
mov
or
inc
gs
sbb
dec
mov
and
cmp
pusha
inc
int
and
clc
inc
mov
mov
cmpsb
aas
fnstcw
mov
aaa
rcrb
outsb
push
scas
outsb
sub
xchg
lcall
adc
vpmulhuw
sbb
leave
lret
xor
sub
cs
mov
cmc
mov
in
mov
jle
imul
inc
push
pop
ror
or
insl
jl
cli
or
or
mov
int3
add
mov
out
rcr
jne
js
sub
les
pusha
je
fldt
or
shll
inc
adc
pop
adcb
push
xor
adc
ds
jo
in
or
push
push
cmc
inc
dec
push
xchg
faddp
push
rcr
cmc
sbb
xor
pusha
adc
jae
or
inc
dec
lds
mov
xlat
mov
xor
xchg
push
lret
jno
inc
sub
shrb
je
cmp
mov
imul
mov
and
fdivp
insl
xchg
ret
not
cmc
pop
lret
idivb
mov
out
movsb
xchg
or
mov
and
jp
scas
or
mov
nop
mov
insb
inc
rol
mov
lret
int
cmpsl
lods
jge
ljmp
add
rorb
outsb
add
pop
data16
push
rolb
and
adc
inc
inc
pop
stos
int
icebp
cmpsb
pop
jbe
stos
jp
out
push
push
jp
pop
inc
xchg
lea
test
jmp
fcomip
xchg
bound
outsl
push
xchg
out
jns
and
jmp
fcomi
dec
pop
dec
sete
fidivs
mov
movsl
adc
ljmp
xchg
xchg
xchg
add
ds
adc
test
leave
ss
inc
xchg
pop
mov
cmp
out
out
imul
cmp
push
out
mov
rcrb
mov
jo
xor
mov
pop
out
jp
lods
shlb
add
mov
jle
xchg
mov
das
scas
inc
in
ljmp
lea
fisubl
xadd
sahf
insl
inc
xchg
mov
mov
outsb
bound
js
adc
xchg
ja
mov
mov
add
jg
sbb
scas
leave
xchg
iret
lock
push
jo
movsl
dec
cmc
cs
push
pop
inc
pushf
cmp
ret
ss
sub
push
data16
pop
xor
je
xchg
mov
orl
push
std
fcoms
imul
imul
imul
pop
mov
outsl
fcmovnbe
je
shrl
insb
orl
out
or
cmc
xor
jmp
cmp
bswap
inc
add
rorb
aaa
insl
fdivrs
adc
outsb
xchg
jecxz
dec
ret
lods
inc
mov
inc
mov
push
fsts
push
mov
pop
icebp
sub
movsl
adc
lds
movsl
in
sbb
push
gs
addr16
sub
xor
js
mov
jne
inc
in
inc
andl
mov
ss
push
shl
fs
cmp
mov
xlat
out
and
xlat
out
int
mov
mov
or
mov
sbb
jg
mov
imulb
adc
jb
dec
push
std
sbb
push
jns
mov
pop
jecxz
int3
sub
xor
pop
mov
pop
ror
mov
jg
iret
popf
inc
movsb
adc
jmp
call
xchg
add
mov
sub
mov
mov
addr16
addr16
sbb
out
inc
sub
fsubrp
inc
inc
ret
push
and
leave
lahf
sbb
mov
sarl
test
clc
jb
iret
fisttps
arpl
add
cmp
out
lret
sbb
loopne
mov
int3
popl
pop
inc
cwtl
cmp
pcmpeqd
into
orb
out
push
aad
pop
ret
sbbb
cmp
push
js
andl
dec
xor
add
leave
adc
xor
and
xor
data16
mov
clc
add
pop
xchg
pop
movsl
or
je
jb
xor
adc
jne
cwtl
xor
and
sbb
lret
call
add
stc
subb
icebp
rep
popf
out
inc
mov
lret
mul
lcall
dec
mov
cmp
popa
inc
mov
outsb
push
repnz
cmp
xchg
sub
rcll
outsb
mov
mov
std
cli
sti
popa
and
sub
add
pop
and
popa
push
stos
or
xorb
and
gs
ret
sahf
xor
mov
sub
cli
add
push
inc
popf
xchg
inc
jmp
jb
fsts
mov
cltd
dec
inc
scas
sub
sti
rorb
shlb
jmp
push
inc
and
dec
dec
adc
push
jmp
mov
fs
mov
inc
daa
enter
imul
dec
or
lods
mov
cmp
jo
pop
movsl
mov
cmpsb
push
out
test
out
mov
and
pop
add
dec
in
pop
jmp
into
into
mov
cwtl
lret
jae
push
pop
rcll
xlat
mov
cmp
xchg
sbb
inc
aaa
incl
or
bound
push
sbb
sbb
out
push
push
test
mov
adc
pop
dec
popa
and
inc
dec
push
stos
fadds
in
push
mov
mov
pop
xchg
cmpsb
add
dec
push
push
lods
mov
repnz
int
push
push
cmp
loopne
popa
xlat
mov
adc
int
mov
mov
sahf
rclb
outsb
dec
or
into
cmp
movsl
cmpsl
adc
out
lcall
sub
cmp
fs
mov
icebp
and
loope
addr16
notl
in
dec
pop
jle
sbb
dec
dec
cmpsl
insl
mov
repz
cmp
faddp
dec
iret
divb
pop
xchg
and
mov
int3
mov
dec
mov
sti
cmp
adc
push
jp
mov
loopne
xor
out
push
pop
add
repnz
pop
mov
adc
push
ja
pop
je
jns
xchg
ret
push
jle
sub
test
jl
aam
and
mov
push
divb
aas
pop
mov
imul
loopne
clc
xchg
cmp
lds
or
mov
push
adc
repnz
pop
outsb
andl
ret
push
pop
cmpsb
out
adc
inc
sbb
int
push
jno
ret
mov
loop
push
ljmp
jae
pop
xor
cli
or
jecxz
jg
out
nop
and
xchg
cpuid
adc
mov
mov
jle
fs
data16
dec
jl
stos
lahf
cmp
jle
repnz
push
out
push
mov
adc
daa
stc
mov
mov
push
loopne
pop
dec
sbb
lea
mov
in
mov
push
faddl
imul
sahf
xchg
inc
stos
and
push
mov
xor
es
test
aad
or
xchg
pop
cltd
pop
into
mov
std
cli
pop
mov
in
lret
stos
xchg
or
dec
dec
int
sarl
mov
pop
adc
loope
jg
add
push
inc
enter
jmp
sahf
in
cltd
mov
dec
fldl
scas
std
add
das
icebp
fwait
pop
push
and
sbb
cmp
scas
loopne
fisubrs
add
dec
mov
inc
jmp
mov
arpl
daa
add
sub
movsl
xor
sbb
mov
sub
imul
xor
xchg
les
push
call
imul
sar
insl
adc
addr16
pop
sub
mov
dec
dec
mov
sbb
cmp
repnz
inc
push
mov
ja
inc
dec
xchg
scas
test
pop
arpl
mov
cmpsb
rclb
jne
insb
sub
enter
or
sub
push
es
adc
inc
sbb
fsubs
cmc
out
rorb
inc
das
jmp
stos
aad
sbb
out
dec
push
into
and
xchg
adc
cs
rcrl
cmp
sub
sbb
jns
inc
ficoms
aas
ror
mov
call
mov
inc
lret
jb
add
jp
jle
and
ljmp
cld
jl
cld
jle
sahf
xchg
test
or
loope
sub
bound
test
jmp
pop
cs
mov
arpl
xlat
dec
les
int3
leave
fisubrs
cmpb
dec
push
lcall
imul
jle
popf
out
in
mov
inc
js
push
jmp
dec
push
data16
sahf
push
sub
pop
dec
das
xchg
xchg
fwait
pushf
inc
adc
out
dec
ljmp
decl
mov
mov
adcb
xchg
inc
lock
adcl
lret
or
femms
jns
push
cmpsb
outsb
xchg
sbb
into
loope
pop
cltd
imul
ss
shll
xor
xchg
mov
ss
cmpsl
rcrb
loopne
jnp
sub
aad
pop
pop
out
jo
ss
ficoms
scas
pop
int3
loopne
xchg
fs
sbb
inc
vcvtpd2dqx
leave
std
daa
jbe
aad
stos
mov
dec
xor
mov
int
cmp
fucomip
jae
sbb
pop
pop
loopne
test
mov
out
stos
pop
add
mov
aaa
loop
pop
jo
mov
pop
mov
mov
push
bnd
in
mov
divl
xchg
std
enter
fmuls
pop
push
push
stc
leave
push
xchg
lret
and
and
lea
loop
js
ret
scas
push
jbe
pushfw
jns
xchg
pop
mov
push
xor
dec
pop
fsubs
add
pop
mov
cmp
mov
push
mov
mov
je
xlat
or
cmp
loop
pop
dec
insl
sub
out
arpl
lods
pop
mov
mov
mov
adc
dec
cwtl
dec
sbb
paddusb
in
movsl
push
fxam
das
mov
fistpll
jmp
dec
scas
mov
imul
inc
push
cmp
ljmp
cmp
nop
clc
int3
cmpsl
push
fidivrs
repz
mov
into
idiv
dec
es
hlt
scas
mov
mov
pop
pop
mov
fistpl
mov
jnp
std
xchg
in
icebp
push
aad
scas
gs
jo
in
jo
hlt
shr
jmp
les
mov
inc
and
stos
mov
mov
es
lock
ja
cli
ss
pushw
stos
add
sub
std
fwait
stos
ljmp
mov
imul
mov
or
and
in
cmp
pop
fcmovb
loop
nop
movsb
mov
je
mov
xor
xor
jbe
lods
pop
test
sahf
mov
xor
xchg
push
popa
mov
push
inc
mov
ret
in
repz
mov
mov
pop
mov
int
or
scas
addr16
addr16
ret
and
lcall
mulb
and
cmp
mov
sti
adc
outsl
and
push
shrd
outsb
loope
mov
mov
mov
test
jb
sbb
inc
sub
sbb
popa
repz
push
clc
ret
mov
int3
add
mov
adc
inc
jle
aad
cmp
aam
jns
pusha
xchg
popa
xchg
sub
ficompl
rclb
out
dec
and
inc
xchg
lcall
xchg
aaa
or
in
push
mov
sti
or
call
sbb
cmp
push
lods
and
mov
mov
or
inc
jg
sbb
or
cmp
mov
mov
insb
adc
je
movsb
inc
xchg
movsb
pusha
pop
clc
mov
mov
sahf
mov
rep
arpl
mov
inc
mov
mov
sbb
jle
addr16
loopne
hlt
xchg
mov
enter
mov
adc
shll
xor
adc
sbb
mov
mov
pop
mov
fwait
lods
and
mov
mov
inc
pop
inc
mov
test
jns
inc
iret
testl
jmp
cmp
sbbl
das
mov
mov
outsl
mov
mov
inc
add
add
jl
xor
std
rol
shlb
pop
cwtl
sub
mul
mov
add
push
pop
in
mov
out
lock
cmpl
in
mov
xor
pop
inc
insb
and
push
jmp
cmp
push
xor
pop
cmp
or
xchg
es
pop
push
mov
call
ja
bound
jo
loope
rol
hlt
jbe
pop
clc
adc
push
repnz
jb
popf
loop
arpl
sar
push
jmp
cmp
or
push
pop
adc
clc
pop
test
pop
cwtl
fwait
pop
sbb
xchg
cmp
push
dec
push
mov
enter
jle
push
clc
sub
lods
in
mov
in
dec
jl
adc
testb
pop
jmp
test
jmp
inc
push
xor
clc
add
pop
sbb
arpl
jp
mov
lds
imul
sbb
aam
jb
jns
jg
jb
loope
mov
sbb
lahf
cmp
mov
aam
es
fwait
xchg
add
push
fwait
cltd
xchg
fnstcw
scas
xchg
sub
or
mov
adc
ret
lds
add
pop
into
pop
pop
aad
lret
sub
gs
ds
ds
jmp
fisttpll
xor
test
testl
dec
testb
mov
jno
mov
inc
aad
sub
inc
ror
fwait
popf
imul
jmp
sbb
cmp
cmc
mov
pop
inc
pop
ss
lods
pusha
push
lahf
out
sbb
mov
pop
mov
mov
sbb
jg
je
cmp
inc
cmpb
inc
xchg
scas
cs
push
mov
cmp
jg
fs
ja
mov
xor
mov
stc
cmc
push
dec
fdivrp
mov
pop
jae
test
fbld
push
cmc
test
adc
vcmpsd
xlat
mov
insl
lcall
ja
lret
dec
shll
push
in
xor
lock
flds
icebp
add
adc
mov
sbb
outsb
daa
iret
jnp
jae
mov
pop
dec
loopne
push
inc
fsubrs
ret
movsl
bound
sub
jae
pop
call
loop
mov
cmp
cli
loop
subb
test
fistps
in
xchg
and
or
mov
inc
cli
les
lahf
lret
pop
leave
xchg
fwait
pop
mov
fcoms
je
adc
out
sbb
xchg
insb
mov
mov
pop
mov
fcmovnu
int3
dec
xor
loopne
addr16
mov
das
ss
mov
int3
mov
sbb
cwtl
inc
push
push
das
ret
dec
sbb
subl
idivl
or
sahf
std
jnp
fldcw
test
cmp
add
ja
jge
aaa
das
scas
stc
loopne
repnz
push
mov
jns
nop
dec
xchg
xchg
cmpl
cmpsl
pop
cmpsl
push
std
pushf
cltd
mov
add
fbstp
aam
std
jbe
xchg
mov
mov
fisubs
add
xor
inc
dec
mov
cmp
and
cmp
mov
ja
push
lea
pop
into
aas
dec
sub
in
test
mov
sarb
daa
xor
pushf
cmpsl
stc
ret
insb
je
mov
dec
notb
out
jbe
and
xchg
fldenv
sub
ja
clc
cmpsb
pushl
xchg
jo
pop
jl
jmp
or
psubb
adc
dec
cmpb
push
adc
dec
scas
jg
rdmsr
dec
pop
dec
divb
and
mov
testl
push
dec
adc
xchg
sbb
dec
loope
lahf
loopne
aad
icebp
mull
loop
pop
rcll
lods
jmp
imul
test
lock
into
push
add
mov
pop
xchg
dec
dec
sahf
mov
jmp
loop
mov
scas
xorb
bnd
out
jo
dec
sub
outsl
mov
sahf
inc
adc
std
cmpsl
les
stos
loop
xchg
lods
mov
adc
into
add
mov
mov
mov
cmp
or
mov
mov
inc
add
mov
pop
mov
mov
imul
into
and
data16
dec
pop
je
xchg
add
aam
loope
adc
aad
lea
and
mov
sub
loop
dec
jg
sbb
scas
adc
fimuls
or
test
xlat
out
xchg
dec
repnz
xchg
rdpmc
dec
xchg
inc
rcrl
sub
adcl
or
je
inc
repz
add
out
and
int
out
ret
into
xor
int3
repz
loopne
sub
roll
outsl
inc
add
fs
or
aas
sbb
adc
inc
fnstcw
and
pusha
mov
mov
sti
hlt
add
out
pop
xchg
fdivl
cmp
push
test
out
sub
mov
gs
sti
mov
jecxz
xchg
daa
imul
or
and
push
daa
in
xchg
sbb
and
and
ljmp
repz
out
movsl
xchg
or
dec
or
shrl
movsl
sub
cmpsb
lock
add
mov
mov
out
push
pushf
in
fcomps
add
inc
aad
out
sbb
inc
mov
aam
mov
cmc
pop
aas
sbb
lcall
mov
add
stc
jb
iret
sbb
sub
sbb
dec
jl
xchg
dec
enter
pop
push
adc
jbe
jns
imul
fwait
bound
mov
hlt
xchg
cmp
shll
lret
xor
stc
pop
mov
outsl
fldcw
add
and
arpl
movsb
mov
xor
pop
push
aad
pop
pop
dec
cmc
push
fmuls
shlb
gs
mov
fs
lcall
cmp
mov
push
jmp
mov
and
movsl
popa
sbb
inc
adc
mov
adc
xorl
dec
push
jbe
mov
shll
iret
popf
arpl
xchg
out
xor
cmp
out
mov
sar
jnp
stc
mov
aas
out
dec
in
dec
adc
outsl
jbe
push
sbb
ljmp
std
mov
mov
cmp
icebp
sub
lcall
mov
mov
cmpb
jno
pop
mov
push
sub
pop
ret
add
add
ret
add
fidivs
mov
xor
filds
gs
dec
mov
ja
adc
xor
sbb
lds
push
lea
loopne
push
mov
mov
loope
cmp
and
sbbb
jo
xchg
dec
push
add
out
int3
stc
je
inc
mov
into
data16
cmp
xor
mov
push
or
pop
ja
dec
mov
gs
xor
cmp
pop
es
lcall
adc
jnp
cs
lcall
xchg
and
enter
push
ret
les
add
stos
sub
enter
ret
imul
jge
sub
mov
je
jo
stos
lds
es
ret
push
aam
adc
dec
ja
pop
xchg
pop
add
mov
mov
xor
pop
aad
xchg
jecxz
iret
out
inc
rclb
sbb
push
in
lahf
addr16
mov
mov
push
add
inc
xchg
inc
jmp
sbb
aad
sub
and
jle
jno
push
cltd
gs
divl
test
cmpsl
flds
bound
imul
fistpl
rcrb
mov
repz
or
daa
jb
pop
ja
les
ficoms
das
push
aad
mov
stos
stos
loop
bound
lods
pop
mov
testb
mov
bound
mov
push
adc
cmp
cmp
es
jae
cmp
lea
add
push
jno
adc
fadds
cmp
sub
add
pusha
cld
fwait
sti
or
into
leave
jecxz
or
mov
mov
aas
in
xor
dec
jge
aas
adc
cmc
jo
add
dec
sarb
pop
mov
dec
xchg
jmp
dec
jp
les
sahf
jg
fistpll
call
scas
or
jb
cmp
mov
jb
cli
mov
mov
sahf
xor
je
mov
enter
add
push
int
ljmp
mov
cmp
cmpsb
sub
adc
inc
mov
cwtl
push
xchg
dec
cmpsl
aad
adc
mov
mov
push
mov
aam
xor
in
xlat
pop
mov
testb
mov
movsl
push
and
jp
mov
bound
out
in
adc
in
cmp
idivl
es
mov
jp
cltd
lods
and
cwtl
cmc
stos
xchg
sub
int
cld
enter
sub
stos
cld
sub
cmpsl
or
out
bound
cmpl
cld
xor
push
jl
jo
inc
dec
rclb
adc
inc
les
mov
ror
fcmovnbe
xor
das
mov
fdivrl
repnz
pop
add
pushf
repz
and
ss
add
insb
xchg
fstps
leave
ds
push
mov
or
xchg
in
mov
inc
sub
fildll
or
mov
sub
lods
jno
nop
lods
stc
ljmp
mov
mov
rclb
adc
add
mov
sbb
outsb
ret
fadds
or
jecxz
push
push
sbbb
inc
pop
dec
inc
popf
jge
push
and
jne
int3
sub
mov
xchg
scas
xchg
add
xchg
ja
mov
push
and
and
ljmp
scas
jmp
jb
imul
mov
and
lods
lea
rcl
inc
loope
lds
loope
jb
cmp
xchg
xchg
xchg
rolb
lret
int3
sbb
fdivs
and
gs
jne
gs
jnp
add
mov
mulb
push
cwtl
mov
xchg
pop
insl
xor
icebp
mov
xor
sbb
xor
into
sub
adc
mov
int3
sub
call
rolb
icebp
mov
xchg
mov
adc
xor
fildl
pop
arpl
jno
test
rclb
int
mov
pop
pop
cwtl
and
inc
xchg
push
test
ljmp
sub
push
mov
movsb
mov
mov
les
pop
push
mov
push
test
xchg
mov
push
mov
arpl
pushf
mov
jne
test
ja
adc
jmp
popf
push
sub
jp
cmc
repz
mov
loope
xchg
lcall
cmpsb
movsb
dec
sub
mov
inc
pop
jae
mov
push
mov
push
dec
adc
xchg
add
mov
xorl
xchg
lea
subl
lods
dec
pop
and
xchg
push
out
out
imul
lcall
test
std
js
add
xchg
pop
jp
shll
sub
and
xor
mov
pop
aaa
inc
mov
jle
xchg
push
mov
push
lret
mov
pusha
xlat
ljmp
push
sbb
mov
push
insb
pop
jae
loopne
jbe
loop
lods
jl
inc
jns
xchg
in
sbb
lea
in
rorb
loope
jnp
xchg
add
loop
sbb
xor
mov
pop
addl
xor
xorb
adc
clc
cmp
das
inc
loopne
dec
or
daa
adc
pop
mov
fbstp
mov
xor
push
jmp
add
inc
and
fistpll
daa
in
out
jl
sbb
shrl
jge
shrb
push
sti
and
adc
pop
rorb
xor
je
cld
mov
or
daa
or
and
mov
sahf
dec
mov
pop
jmp
sbb
sbb
jle
sub
jmp
hlt
les
fidivrl
stos
jp
lock
aam
movsb
int
sbb
fsubrl
ret
test
or
push
aas
cmp
mov
pushf
popf
addr16
fwait
stos
inc
lret
fbld
rolb
insl
lods
mov
sub
add
mov
pop
xor
xchg
cmp
repz
xchg
jl
rcl
mov
enter
mov
mov
add
dec
add
fwait
pop
mov
imul
sbb
or
xchg
xchg
outsb
shl
xchg
pop
jg
out
xor
je
imul
adc
push
mov
js
or
roll
loopne
in
ret
js
cld
sub
add
push
jge
std
sti
push
test
insl
shlb
adc
and
adc
outsb
pop
xor
enter
add
push
fwait
mov
outsl
cmpsb
out
sbb
adcb
dec
or
sar
dec
loope
mull
mov
xor
into
pop
or
xor
sahf
imul
mov
popa
pop
cltd
mov
push
lret
mov
or
loope
xchg
sbb
clc
test
aaa
mov
sub
and
call
shl
inc
rcrl
inc
xlat
inc
dec
xchg
lret
ss
add
mov
cmp
lahf
jbe
sub
int3
adc
mov
iret
aam
sbb
inc
mov
ja
movsb
push
loop
inc
mov
pop
das
push
xchg
push
lcall
inc
loop
add
mov
mov
lods
push
mov
subl
push
add
loope
lret
dec
hlt
mov
xor
cmp
mov
adc
add
mov
cli
or
xlat
mov
ret
jle
rorl
adc
dec
add
push
data16
out
jge
jmp
nop
js
ret
push
pop
shlb
cwtl
jmp
psubq
icebp
cmc
aam
and
push
dec
ret
sub
rolb
repnz
and
mov
jae,pt
jl
loopne
sahf
sti
loopne
fdivl
stos
or
sub
xchg
xchg
mov
dec
sbb
lods
cmp
jecxz
out
in
or
push
cmc
jmp
std
jl
int
pop
and
xchg
jge
leave
inc
cvtps2pi
xchg
mov
subb
dec
pop
inc
jge
sub
aaa
inc
sbb
jne
push
outsl
ljmp
int3
jne
call
pop
into
jne
jge
imul
jnp
mov
popw
fstpt
inc
xchg
mov
iret
movsl
ret
and
test
dec
sub
push
hlt
xor
add
stc
and
cli
lds
xchg
movsb
je
dec
cmp
bound
adcb
xchg
sahf
lret
or
ds
call
ljmp
and
add
pop
inc
out
in
ljmp
jae
gs
imul
pop
jg
mov
cmp
pop
lds
ds
nop
inc
jle
hlt
mov
push
cmp
pop
pop
add
dec
sub
test
or
fs
lds
mov
stc
pushf
mov
mov
pop
popa
and
sub
pop
std
mov
imul
fwait
jbe
popf
dec
jge
loope
xor
mov
jl
sbb
pop
push
fnstsw
repnz
jmp
in
enter
out
add
fwait
cmc
adc
fidivrl
sti
dec
or
push
dec
lds
daa
inc
dec
jnp
sub
clc
mov
movsl
adc
adc
out
lret
jge
push
addl
test
adc
mov
in
movsb
sub
or
xor
mov
jo
enter
dec
mov
insb
stos
rclb
dec
ja
mov
cmp
lock
and
add
cmp
mov
and
xor
mov
loopne
and
add
aam
out
dec
dec
out
scas
into
add
int3
add
dec
dec
and
pop
xchg
sub
out
add
vmulss
mov
xchg
data16
pop
stos
and
popf
mov
push
add
or
out
xchg
mov
dec
pop
xchg
ljmp
jl
add
pop
mov
add
repz
mov
sar
inc
jne
push
sub
adc
insl
out
mov
sub
xor
rcr
mov
mov
adc
mov
pushl
jns
or
ja
mov
cli
xchg
aad
jo
add
push
decb
out
out
or
adc
das
push
dec
or
popf
sbbb
cmp
out
push
pop
or
stc
mov
aaa
dec
push
dec
sub
lods
fstps
rorl
sarl
and
mov
add
cmp
adc
or
icebp
or
sbb
pop
jecxz
lock
pop
sahf
pop
inc
dec
mov
jmp
sbb
hlt
xor
cmpsl
mov
and
xchg
cltd
in
shll
push
dec
pushf
outsl
pop
pop
inc
jg
sar
inc
lea
dec
test
nop
jle
mov
mov
sub
jb
or
stc
popf
sbb
mov
cli
sbb
pop
icebp
not
jb
mov
ret
popa
xor
into
jmp
push
mov
cmpsb
sbb
das
jmp
xchg
in
test
dec
mov
in
or
dec
mov
mov
adc
xchg
xchg
pop
out
ficompl
pop
pop
lret
sbb
mov
pushf
pop
aam
test
adc
jbe
cmc
test
cmc
push
adc
popf
jecxz
loopne
ljmp
or
add
dec
scas
push
adc
cmp
popf
adc
jns
cmp
outsb
adc
push
xor
ljmp
push
sbb
lcall
pop
push
add
pop
test
ljmp
pop
mov
xchg
into
cmp
rcll
push
out
add
divb
pusha
jne
inc
lcall
lcall
loope
into
aas
in
daa
gs
cwtl
push
in
mov
pushf
xchg
or
lock
mov
jl
mov
push
cmp
jmp
sbb
clc
adc
imul
inc
dec
push
in
fstps
sub
jp
gs
mov
cmp
jle
and
push
xrelease
xchg
jne
out
pop
inc
outsb
inc
aam
add
stc
jecxz
ret
jmp
cmp
daa
jle
jns
popf
movsb
dec
add
push
movsb
movsl
movsb
fwait
push
xchg
jns
xor
inc
out
fcomps
gs
stos
sbb
mov
jg
cmp
stos
dec
xor
sbb
sbbb
fwait
or
add
jne
aad
leave
sbb
add
repz
popa
in
lret
dec
xor
sub
mov
xor
jle
xor
push
les
cmpsl
ja
int
mov
add
cwtl
dec
and
sahf
sbb
jns
mov
jecxz
punpckhbw
or
leave
sbb
scas
mov
mov
lock
xchg
fs
cmp
dec
push
idivl
or
cmpsb
lods
fbstp
jmp
mov
stc
inc
lcall
pop
in
in
mov
hlt
clc
push
lret
fwait
lcall
arpl
in
xchg
daa
dec
icebp
cmp
sub
sub
inc
rcll
shll
in
jg
pop
jl
fstl
ljmp
pop
adc
xchg
ret
iret
jae
inc
imul
jmp
cmpb
out
mov
inc
mov
push
fwait
add
loop
xorl
xor
mov
cmpsl
jmp
enter
imul
or
in
pop
cmp
pushf
lcall
leave
data16
ss
sub
aas
mov
cmp
daa
cltd
mov
ja
out
jmp
cmp
fdivrl
popf
xchg
outsb
jb,pn
mov
push
mov
movsl
and
mov
lock
mov
les
dec
lods
adc
imul
out
adc
dec
mov
adc
jnp
push
adc
or
in
insl
bound
inc
movsb
add
pop
jmp
inc
add
pop
enter
arpl
xor
in
jb
mov
in
sbb
rorb
jecxz
push
fsub
sahf
cmp
xchg
inc
out
xorl
jl
jbe
in
xchg
xlat
and
into
sub
imul
xchg
loop
rclb
xchg
mov
pop
enter
push
ret
inc
sbb
test
leave
mov
inc
dec
js
sbb
cmp
out
cmp
dec
leave
cmp
lock
andl
push
mov
dec
push
adcb
inc
test
imull
mov
lods
jb
ficoml
das
pop
add
xor
sti
xchg
jns
inc
or
sbb
insb
out
es
push
adc
test
jno
andl
adc
sahf
movsl
je
pop
mov
xlat
and
cli
shl
jb
shl
fdivrl
insb
pop
jg
out
pop
pop
xlat
out
ss
dec
roll
pop
sub
mov
mov
call
adc
or
shlb
pusha
das
pusha
xchg
sbb
lcall
enter
out
xchg
jne
adc
decb
inc
or
adc
mov
push
sbb
gs
cs
int
out
sti
dec
call
sahf
cmp
cli
int
iret
into
mov
aad
fcomps
bound
insl
or
add
mov
ja
es
and
test
xchg
lods
add
stos
pop
xlat
aam
and
xor
or
sar
push
jp
push
hlt
shrb
mov
push
fwait
cmp
fcomi
das
jns
gs
jnp
mov
arpl
loope
inc
push
insb
pop
icebp
nop
pop
cmp
pop
and
push
stc
test
mov
cli
aam
xchg
cld
aas
mov
fcompl
mov
add
mov
sbb
ja
repnz
dec
mov
les
sub
cltd
repz
in
aaa
movsl
cwtl
push
add
mov
cltd
mov
shrl
mov
int3
pop
or
lea
imull
cmp
jno
jp
aad
inc
je
push
ds
xchg
mov
test
and
js
mov
int3
stc
adc
outsb
xlat
adc
jle
and
adc
cs
test
pop
sbb
jecxz
lret
clc
loopne
adcb
xor
pop
enter
inc
sub
xor
test
cltd
xchg
outsl
sbb
icebp
testl
xchg
test
push
test
sbb
sub
repnz
sbb
scas
nop
hlt
daa
sub
cmp
pop
lea
int3
push
in
mov
ljmp
shll
insl
mov
rcl
shrl
sub
jbe
adc
inc
cmpb
xchg
outsl
mov
iret
adc
jo
dec
mov
pop
inc
pop
aas
pop
mov
subl
popf
mov
xchg
pushf
and
stos
jecxz
adc
mov
cmpsl
shll
cmp
rcrb
mov
pop
adc
int
mov
cmp
sti
jmp
out
push
mov
call
sbb
and
and
pop
and
mov
in
std
cwtl
paddsb
stos
add
or
push
rorb
pop
js
push
push
ret
xchg
or
jl
js
stc
pop
jle
in
xchg
push
jl
fildl
movsl
sub
pop
popf
lea
pusha
shlb
dec
daa
sarl
out
jecxz
push
rclb
filds
mov
cli
hlt
cwtl
testb
and
bound
xchg
mov
jle
push
jmp
scas
or
adc
aad
mov
jp
outsb
out
out
xor
add
mov
mov
nop
rcrb
xor
lret
bound
cltd
outsl
xor
jb
push
jbe
sub
push
std
lcall
mov
dec
fcoms
push
add
cld
icebp
cs
jns
outsl
or
inc
or
data16
cld
daa
cmc
pavgw
nop
leave
ja
hlt
lods
neg
sbb
lock
xchg
cmp
leave
cmp
fstl
cmp
mov
mov
addr16
aad
jecxz
test
mov
lret
add
cs
push
in
push
mov
sti
xchg
rol
cmpsl
push
popa
out
imul
push
add
in
ljmp
dec
loopne
or
hlt
mov
shr
inc
pop
push
fidivs
or
bswap
push
cld
inc
cmp
pop
mov
dec
iret
xor
stos
sbb
shll
sbb
sbb
adcb
fistpll
jmp
add
xchg
mov
cwtl
jmp
push
push
mov
loopne
int
iret
sbb
jb
sbb
mov
lock
flds
ss
cltd
or
js
out
xor
inc
clc
scas
dec
jl
cmp
cmp
out
outsb
and
pop
imul
mov
andl
sub
inc
test
jl
fstpt
sbb
pop
fadd
iret
test
daa
aas
and
and
jl
and
fwait
divl
jge
fildl
data16
lea
cmpsl
out
int3
dec
mov
lock
addl
xchg
arpl
js
loope
cmp
adc
loopne,pn
jl
dec
rcrl
sbb
test
stc
xlat
push
push
lret
push
mov
push
sbb
jg
ret
dec
mov
mov
stc
subb
xchg
mov
push
scas
jae
add
dec
dec
fisttpll
lods
inc
or
aam
and
push
push
dec
fisttpll
add
dec
cmp
pop
cmpsb
lcall
dec
std
sbb
je
arpl
aad
xchg
movsb
inc
pushf
pop
xchg
jle
sub
imul
dec
arpl
fisttpl
and
movsb
sub
sti
lds
addb
xchg
addr16
mov
call
data16
cli
es
pop
int3
xor
pop
dec
lahf
xchg
arpl
fists
mov
cmp
gs
jge
fs
int
ja
mov
popa
sbbb
pop
xor
ljmp
jecxz
pop
idiv
xor
repz
jecxz
lods
test
fwait
movb
fs
popf
js
sub
enter
insb
imull
ror
imul
and
pop
out
cld
jmp
mov
nopl
pop
pop
or
pop
mov
cltd
test
pop
adc
movsl
xor
cmc
sar
int
or
pushl
push
pop
fdivp
mov
jle
lds
into
les
loopne
inc
dec
dec
cmp
cwtl
add
and
inc
adc
sbb
fdivs
or
ljmp
mov
mov
lret
pushf
clc
xor
inc
aaa
hlt
xor
icebp
out
xor
sbb
inc
popf
mov
cmp
loop
push
or
push
jge
xchg
xor
mov
mov
into
insb
cmp
bound
sbb
sbb
cmpsb
jae
add
or
mov
je
lret
mov
jae
sub
movsb
adc
add
pop
sub
in
scas
or
mov
inc
outsl
pushf
mov
in
pop
adc
adc
test
stos
popa
mov
enter
aas
out
pop
push
scas
ffree
and
adc
in
out
stos
sbb
jl
test
adc
or
lcall
lds
lock
into
cmpsb
xor
push
lds
mov
hlt
mov
insl
data16
push
into
xchg
mov
push
mov
add
or
popa
dec
mov
dec
sub
iret
pop
mov
xor
outsb
cwtl
mov
mov
push
xchg
push
push
sub
cmp
pop
stos
sahf
mov
jp
mov
push
sbb
stos
or
xchg
cmp
push
cmp
add
in
mov
imul
mov
sub
in
jge
sub
lds
push
and
aad
push
out
and
pop
ja
lea
jmp
sti
xor
out
jmp
xchg
jecxz
push
mov
jne
movsb
dec
mov
jge
add
repz
out
mov
addr16
call
mov
fsts
push
cwtl
pop
loop
adc
mov
dec
pop
push
jmp
pushf
xchg
inc
inc
aaa
mov
mov
stos
ss
mov
cs
nop
stos
mov
dec
mov
scas
xchg
sbb
and
bound
dec
jne
ja
test
cmpsl
ja
sti
sbb
stc
cmpsl
pop
or
fsubs
popa
lds
xor
push
lea
adc
sbb
test
inc
xor
lods
or
das
xor
cmp
dec
or
ret
xchg
cmp
testb
shlb
insb
jp
leave
jns
or
adc
push
ficoms
mov
mov
outsl
loop
jecxz
push
xchg
jo
data16
arpl
insb
mov
js
imul
xchg
lods
cs
sbb
lea
es
mov
mov
jne
push
mov
loopne
lods
sbb
test
lahf
lods
xchg
push
jno
ljmp
cmp
pusha
mov
sbb
test
xchg
xor
enter
mov
test
popa
push
mov
mov
push
push
mov
aas
mov
out
xchg
cmp
sub
pop
movsb
scas
lea
pushf
cmp
mov
xor
cltd
pop
shrb
mov
stos
popa
repnz
jne
mov
loop
popa
lcall
sub
pop
int3
int3
cmovp
lods
test
xchg
mov
xchg
push
pop
mov
lahf
scas
xor
mov
shlb
in
das
push
fnsave
mov
xchg
lock
stc
pop
sub
add
push
movsl
cld
and
bound
cmp
mov
imul
push
jmp
push
add
xchg
jmp
and
repz
dec
fdivl
jle
sbb
pop
in
rorb
cmp
outsl
push
in
loop
sbb
stos
out
sahf
stos
jae
mov
mov
aas
xchg
aad
in
cmc
pop
vpmullw
imul
sub
fnstenv
push
je
sub
ficoms
cltd
or
loop
jle
sbb
shl
or
lods
pop
in
sbb
in
rcll
jl
movsl
sub
inc
or
outsl
rol
push
mov
out
mov
aaa
stos
daa
jo
insb
lcall
inc
wbinvd
and
cs
mov
add
push
scas
cld
inc
pop
sub
test
cmp
and
pop
sbb
sbb
xor
aaa
add
lcall
jmp
xchg
sbb
xor
outsb
xchg
or
add
pcmpgtw
xchg
ljmp
into
jge
jnp
cwtl
push
lahf
ljmp
cmp
xchg
mov
outsl
xor
test
xlat
idivl
or
fcoms
imul
mov
mov
mov
lods
shlb
test
decl
xchg
push
jno
xchg
rol
cltd
mov
xor
clc
xor
adc
cltd
adc
inc
cmp
xor
gs
sbb
mov
dec
cmp
xchg
lret
xchg
xchg
insb
mov
mov
pusha
aam
lret
adc
jmp
jmp
lcall
xchg
sahf
pop
jb
push
fcompl
popa
mov
dec
sub
xor
mov
cmp
mov
adc
or
xor
lahf
inc
roll
or
xchg
mov
notl
cld
sub
andb
lods
in
das
or
mov
lahf
mov
inc
jno
pushf
out
lock
lahf
push
repnz
out
mov
and
mov
dec
jnp
xchg
in
inc
add
and
jmp
cmp
mov
je
mov
mov
imul
shll
std
push
or
test
arpl
lcall
movb
ljmp
repnz
cmpl
dec
out
shrl
bnd
add
fdivs
xor
adc
imul
fnstenv
push
sbb
mov
sub
sbb
out
punpcklbw
xchg
jbe
ficompl
push
mov
mov
or
sahf
xlat
jge
lds
lahf
adc
mov
aas
mov
cmp
nop
and
imul
out
int3
testb
cmpsb
push
or
insl
mov
xchg
fcoms
add
out
lock
lock
jo
jae
gs
dec
fbld
cmpsb
pop
cld
in
test
xchg
loope
outsb
rep
cmp
imul
cmp
push
xor
cmp
cmp
sbb
jle
daa
mov
cmp
mov
dec
push
dec
adc
dec
mov
mov
sbb
jbe
in
or
mov
orb
ret
clc
xor
leave
xor
mov
jg
pop
push
imul
cmp
and
xor
lock
call
jnp
sbb
or
cmp
es
mov
lret
dec
lret
add
push
dec
ret
mov
fsubr
test
add
dec
mov
xor
mov
xchg
ret
pop
sub
inc
scas
fisttps
push
mov
sub
fdivs
dec
lret
adc
test
sarl
xor
ljmp
jge
sahf
in
je
ljmp
adc
mov
cmp
test
outsl
mov
ror
js
fisubrs
sahf
dec
int
sarb
nop
and
add
push
add
dec
test
out
xor
inc
jp
repnz
sub
lea
jmp
inc
mov
mov
xchg
insl
fisttpl
enter
mov
mov
push
sti
sub
jnp
push
loopne
cmp
mov
push
test
scas
mov
inc
popf
shll
jns
ds
insb
mov
fldl
ret
push
and
pushl
cmpsb
xchg
sarb
pop
sbb
xor
jns
or
inc
jg
pop
xchg
repz
repz
push
xor
btc
adc
and
rcll
loop
ret
fs
add
lcall
inc
into
bound
mov
lods
aam
sbb
sub
ret
aaa
pop
in
push
push
push
and
dec
push
rcll
fdivs
pop
jle
pop
cmp
sahf
out
xorb
test
and
das
subb
sub
movsb
shrb
rcrl
arpl
in
ffreep
sub
es
jmp
adc
jp
sub
pushf
inc
mov
ret
push
hlt
into
dec
dec
mov
inc
push
pop
sahf
insl
cmpsb
xchg
push
std
popf
jns,pn
lods
insl
mov
or
mov
jns
pop
pop
and
sub
pop
scas
lret
repnz
fmulp
xchg
jecxz
setns
push
decl
mov
cld
sar
sub
repz
dec
xchg
jl
push
cmp
daa
pop
test
push
jge
into
dec
or
es
orb
das
ret
aad
mov
leave
into
xlat
out
cli
sti
xor
adc
dec
movsb
xchg
add
int3
sbb
ja
sbb
lods
xor
pop
in
xor
push
push
push
mov
jl
lods
imul
mov
xor
shr
or
add
cmp
cmpsl
call
movsb
pop
pop
hlt
push
cmp
xchg
cmp
add
mov
jmp
cmpsb
push
fucomp
pop
mov
inc
xor
lea
adc
test
mov
push
adc
push
movsb
shrl
push
jg
sbb
sbb
push
xchg
inc
inc
out
nop
jne
aas
lret
pushf
and
push
dec
jo
mov
add
jg
ds
pop
inc
mov
stos
and
out
loop
imul
fstl
mov
rclb
incb
mov
push
int3
clc
pop
pop
sbb
fs
mov
shlb
pop
and
fisubs
fmul
or
xor
mov
cltd
cmpsb
popf
dec
adc
push
xchg
aam
push
cmp
and
inc
inc
in
rcrl
clc
push
jno
shlb
pcmpgtw
xchg
pop
xor
subl
mov
test
pop
xor
icebp
xor
cmpsb
and
mov
xchg
fmull
jmp
negb
hlt
push
sbb
mov
mov
aad
xchg
mov
movsl
xor
test
mov
xor
sub
scas
mov
repz
push
add
call
push
out
or
sbb
fwait
cmpb
lods
arpl
xlat
jb
sbbl
jmp
pop
or
cmp
jbe
in
push
dec
aas
push
pusha
pusha
in
mov
adc
jl
pop
pop
cmp
xor
dec
ficomps
sbb
iret
aam
add
inc
pop
movsl
xchg
shlb
idivb
gs
or
or
les
in
xchg
imulb
cmpsl
pop
fldenv
mov
ja
sbb
mov
out
add
cmpsb
pop
pusha
mov
push
add
movsb
mov
xchg
movsb
arpl
mov
mov
pop
and
push
mov
test
inc
xchg
xchg
xchg
cmp
int
mov
aad
xchg
bound
rorl
scas
movsl
add
mov
xor
xchg
ret
pop
jnp
cmp
ljmp
xchg
icebp
and
mov
push
mov
repnz
stc
mov
ja
or
push
call
adc
mov
jb
lret
adc
repnz
jl
sbb
call
cmp
mov
fwait
ds
out
sbb
ljmp
jg
enter
push
loope
insl
inc
sbb
call
es
std
shll
mov
mov
in
cltd
mov
pushf
mov
sti
sub
cmp
or
iret
addr16
stos
rclb
mov
inc
cmp
pop
sarb
and
notl
outsl
in
mov
test
mov
pop
rclb
in
or
icebp
pop
or
jno
dec
adc
push
lods
push
adc
inc
pop
pop
fucomi
nop
scas
ror
jb
mov
clc
jbe
push
mov
out
lock
loopne
std
rclb
aad
mov
sub
fimull
push
in
jp
jp
aaa
pop
xor
jno
jbe
jae
int
jbe
lea
pop
adcb
test
mov
mov
mov
push
jbe
and
cmp
push
jmp
mov
or
pop
outsb
mov
pop
lds
jecxz
fwait
sub
frstor
mov
outsb
xor
addr16
call
cmp
ja
cmc
and
adc
enter
iret
dec
in
adc
test
jge
phsubsw
lods
inc
repz
sub
fcomp
lock
mov
push
pusha
gs
dec
or
and
das
fwait
inc
and
jle
xchg
inc
inc
iret
lret
mov
cmpl
dec
jmp
cmpsl
add
pop
mov
stos
and
gs
in
mov
ja
scas
mov
cmpsl
dec
inc
arpl
or
test
pop
fbstp
icebp
clc
xchg
mov
sbb
int
or
push
push
ja
mov
movsb
inc
push
xchg
repnz
in
repnz
ret
pop
mov
pop
fidivrl
fildll
xchg
shlb
loope
pushf
clc
aaa
into
aaa
jmp
movsl
push
sub
adc
jle
imul
push
clc
cmc
xor
rolb
movsl
jne
mov
out
lea
sbb
lds
aam
adc
mov
or
mov
aad
and
pop
aaa
into
and
sbb
out
jnp
mov
pop
xor
mov
jg
cltd
enter
push
xor
jae
icebp
xchg
sbb
xor
dec
std
dec
cmp
sbb
adc
adc
pushf
jne
dec
jmp
lods
add
jp
dec
rcr
pop
and
fstps
repz
out
fimull
int
and
cmpsl
ret
aad
pop
mov
xchg
fdivp
movsl
mov
jecxz
scas
icebp
inc
dec
aam
mov
push
push
xchg
mov
xchg
int
inc
arpl
adc
mov
jp
adcl
cmp
inc
cltd
shlb
gs
push
inc
sub
inc
ja
adc
mov
repz
test
xor
sub
add
sbb
mov
sahf
sub
mov
mov
mov
pop
fs
sub
test
in
dec
in
jge
fmull
xor
ja
dec
sbb
ljmp
in
jb
insb
insl
stos
out
movsb
add
cmp
dec
mov
das
push
sub
mov
mov
test
sahf
out
pop
jmp
inc
fldt
stos
rcrl
mov
movsl
mov
enter
add
jmp
dec
and
test
or
cmpsl
xor
inc
call
inc
and
lahf
sub
jmp
push
add
xor
jnp
and
jo
stc
lcall
testl
jno
xor
jmp
cmp
xor
icebp
cmp
xor
mov
mov
loop
daa
sub
xor
jl
jecxz
fnsave
mov
xchg
jle
push
cmp
sbb
xchg
mov
and
cmp
xchg
jecxz
cmp
popa
dec
cmp
cmp
cld
pop
cmpsl
outsb
pop
test
scas
das
mov
repnz
sbb
dec
mov
and
inc
pop
sahf
jb
xor
sarb
lahf
lahf
mov
out
mov
rolb
mov
lret
orl
sub
pop
aad
shlb
jp
leave
jns
adc
mov
arpl
sub
mov
cmpsl
dec
sbb
push
jbe
xorb
xor
add
xor
test
push
mov
loope
dec
push
push
cmpsb
lahf
mov
dec
xchg
loop
insb
or
and
out
sahf
jbe
pop
adc
sub
mov
cmp
lret
popf
clc
mov
in
cmp
mov
dec
jns
les
and
pop
push
mov
pop
cmpsb
adcb
sbb
sahf
fucomip
movsb
xchg
aad
xor
push
push
push
mulb
pop
jmp
adc
cmp
push
xor
jge
stos
out
arpl
mov
sub
inc
sub
pop
xchg
lahf
outsb
xor
test
arpl
clc
mov
adc
add
in
fisubs
movsl
ret
fimull
pop
push
or
stos
add
stos
add
inc
fld
push
insl
pop
cmp
mov
mov
les
stos
enter
dec
push
fisttpll
lcall
pop
jecxz
jecxz
xchg
movsb
cli
mov
nop
mov
stc
dec
icebp
lcall
push
mov
push
int3
cld
pushf
jp
jle
inc
icebp
mov
in
sbb
mov
fidivs
call
pop
xor
mov
shlb
jl
adc
mov
cmp
ljmp
mov
sub
test
lds
sbb
lcall
pop
xor
leave
inc
xchg
scas
push
cmp
mov
xchg
cld
sbb
fisubrs
lcall
xchg
sbb
les
fmuls
push
mov
mov
cmc
jne
cmp
xchg
pop
mov
divps
adc
icebp
bound
push
push
jecxz
pop
popa
lods
dec
jnp
notl
fldcw
cmp
in
dec
add
fwait
nop
in
enter
xlat
jmp
js
shll
lahf
mov
call
aad
jnp
movsb
jmp
jne
push
inc
lds
ficoml
sub
sub
push
aam
inc
divb
pusha
movsl
add
jbe
enter
les
iret
inc
or
fistl
adc
xchg
stos
pop
adc
push
fxch
in
and
fwait
std
sub
nop
push
mov
lock
mov
les
cmp
jge
jno
nop
add
push
and
das
sbb
std
push
test
or
xchg
out
xor
repnz
add
in
arpl
push
into
call
and
pusha
jmp
xlat
sbb
cmpsl
and
pop
into
cmp
ss
mov
js
xchg
iret
repnz
test
mov
test
mov
dec
das
ret
repnz
mov
lock
scas
jb
imul
mov
push
cs
bound
popa
mov
xchg
push
jl
push
push
jo
stos
aam
insb
cmp
adc
push
jb
out
mov
cmp
xchg
fcomps
and
mov
sbb
test
sbb
icebp
sub
dec
std
adc
inc
pop
mov
jno
out
cmp
jae
jbe
xlat
data16
fldenv
xchg
lahf
ljmp
jnp
and
jl
inc
stos
sub
ss
les
lds
push
sbb
push
mov
test
daa
mov
rcrb
xchg
iret
and
js
mov
sub
lret
in
es
mov
ss
lods
push
push
mov
and
adcb
dec
push
cmp
push
xchg
pop
adc
xchg
enter
xchg
mov
push
test
xchg
hlt
fstpl
pop
test
push
ss
mov
jmp
cwtl
push
adc
pushf
outsl
fidivrs
stos
loop
mov
mov
cwtl
pusha
push
rcr
sub
or
inc
mov
jnp
pop
dec
lret
js
push
dec
pop
ja
adc
adcl
or
sub
fdivrs
sti
movsb
mov
sbb
rclb
ficoms
lea
pusha
mov
iret
daa
dec
fisubs
mov
dec
leave
fmulp
cmpsb
inc
push
cltd
mov
nop
or
cltd
pop
add
stos
addl
mov
dec
xor
add
shrl
sbb
stc
leave
fptan
ljmp
fs
call
ss
cmp
mov
call
popa
jb
pop
mov
push
xor
sbb
push
fimuls
and
xchg
rclb
adc
inc
stos
push
push
lcall
sub
xlat
pop
sbb
adc
mulb
xchg
cmp
into
adc
dec
add
insl
sub
dec
lock
mov
lret
lods
scas
mov
in
and
mov
mov
mov
push
dec
ss
jns
sub
insb
adc
sub
mov
mov
subl
std
mov
push
cmp
out
fisttps
sahf
adc
jne,pn
xchg
pop
imulb
add
jge
in
mull
push
inc
in
inc
jae
pop
pop
adc
push
int3
push
clc
cmc
mov
dec
jp
fs
jge
add
sub
and
cmp
mov
and
arpl
sbb
mov
xor
adcl
push
icebp
testb
std
xchg
movsb
addr16
imul
lds
mov
outsb
and
mov
inc
mov
fsub
cltd
push
das
bound
sub
lcall
adc
sbb
pop
xchg
leave
movsb
cwtl
test
push
mov
or
push
pop
xor
jge
ds
push
roll
in
push
mov
roll
xchg
push
mov
xor
mov
jne
aad
pop
cmp
fdivr
mov
cli
ljmp
push
loopne
pop
inc
shrl
inc
mov
mov
xchg
inc
fdivrs
arpl
pop
add
fidivrs
stos
pusha
into
jmp
push
sti
cwtl
imul
sub
hlt
imul
test
mov
sbb
mov
mov
cmpsl
or
cmp
add
leave
into
sbb
push
mov
fnstcw
adc
rol
and
das
dec
repnz
dec
das
sti
ds
sbb
adc
pop
dec
mov
and
incb
and
xor
sbb
mov
add
sub
pop
sub
test
and
xchg
shll
xchg
cli
mov
dec
popl
lahf
lods
mov
lds
andb
gs
cmp
mov
mov
xor
lock
mov
mov
adc
push
popa
sub
fcomps
xor
adc
outsb
mov
xchg
test
movl
sahf
dec
mov
inc
jne
add
fcompl
sub
into
lret
xchg
fimuls
jmp
inc
mov
cmp
xchg
out
inc
xor
or
test
jmp
xor
dec
test
test
sbb
cmp
dec
sbb
pop
xor
and
pop
push
cs
orl
or
add
iret
popf
add
jg
rcll
stc
scas
ret
jne
addr16
add
fdivr
mov
inc
sub
fidivl
stc
inc
dec
adc
nop
loope
push
fcoml
data16
mov
adc
mov
xchg
cmp
clc
cmp
adc
notb
cmp
pusha
fadd
mov
or
nop
cli
leave
or
pop
push
cs
lcall
dec
pop
inc
mov
das
out
fsts
iret
add
imull
jbe
add
rorb
iret
imul
cmp
fwait
gs
icebp
mov
mov
lea
sbb
push
push
jbe
in
loop
dec
pop
shl
outsl
cmc
idivl
call
inc
repz
rolb
jmp
sti
hlt
inc
and
add
sbb
ss
dec
pop
lods
inc
idivb
cmp
fdivs
pushf
jne
inc
adc
cmp
out
leave
daa
adc
sub
aad
mov
repz
insb
aas
pop
xchg
out
mov
xor
call
fsub
roll
dec
mov
inc
cli
enter
pop
fs
hlt
mov
add
cmp
and
fcomip
sbb
mov
outsb
mov
nop
sub
enter
push
mov
sarl
add
push
push
mov
mov
es
or
cmp
mov
cmp
pop
xchg
leave
ds
jnp
and
cmp
fwait
test
mov
jg
sbb
mov
xchg
and
bound
lcall
xchg
orl
cmp
jbe
ljmpw
test
fwait
xchg
movsl
dec
leave
jbe
fdiv
xor
mov
call
int3
jecxz
jae
add
sbb
xor
xor
and
loopne
popa
xlat
imul
dec
ds
shrd
lods
jg
sahf
int3
jno
pusha
adc
shrb
lock
ds
pop
jno
leave
sub
adc
pop
mov
push
sarb
xor
pop
popa
mov
cmpsl
idivb
jecxz
scas
dec
insl
aaa
dec
dec
jecxz
xchg
dec
inc
lcall
imul
add
test
adc
add
push
lret
xchg
stos
inc
ret
xchg
mov
gs
scas
dec
sbb
lds
aaa
out
jb
call
and
test
xchg
fs
fiadds
sti
repz
jp
cli
popa
or
and
test
bnd
out
movsl
icebp
pop
shlb
xchg
pop
les
mov
ret
sub
xchg
sub
test
mov
add
test
lcall
sub
adc
movl
sbb
bound
push
jb
ffreep
mov
icebp
and
out
and
in
sub
mov
int3
int
jmp
add
test
adc
pop
jmp
or
popf
mov
pusha
jge
stos
mov
leave
mov
and
lods
rorb
add
ret
dec
ds
cmp
inc
sbb
dec
movsl
add
push
fstpt
clc
mov
out
cmp
mov
lret
push
cmpsb
adc
movsb
and
inc
ljmp
fidivl
push
movsb
loope
stos
adc
pop
les
adc
pop
mov
inc
mov
jbe
hlt
pop
scas
div
push
xchg
sbb
xor
cmpsl
mov
repz
into
out
xchg
cmpsb
jge
jge
cltd
sahf
jg
jecxz
dec
cli
test
pushl
mov
js
cwtl
cmpsl
jecxz
cmp
addr16
sub
inc
lret
xchg
push
aam
xchg
adc
sub
mov
rcrl
daa
call
adc
jnp
and
insl
adc
dec
or
cld
fwait
inc
lock
push
or
mov
push
ljmp
pusha
cs
gs
adc
xor
movsl
and
jae
pop
and
or
std
pushf
pop
jg
imul
sub
sbb
icebp
or
sbb
popa
cmp
imul
repnz
or
inc
inc
cwtl
cmp
popf
mov
loope
outsb
ffree
mov
jg
in
and
mov
enter
xchg
lss
pop
mov
roll
test
cmp
dec
fisttps
mov
push
jmp
cld
mov
cld
inc
jecxz
addr16
mov
imulb
ljmp
hlt
or
popa
pushf
jle
out
and
test
push
shll
flds
cmpsl
leave
adc
xchg
dec
dec
pop
sar
fidivrl
pop
aad
les
cmp
push
popa
or
push
test
rorl
popa
incl
pusha
push
outsb
nop
ss
inc
inc
pop
xchg
js
sub
sbb
lcall
sub
test
das
jnp
test
popf
jb
scas
fstps
loope
nop
cltd
add
sub
sub
adc
jno
pop
sahf
dec
xchg
mov
out
push
negb
ljmp
addl
imul
scas
lret
push
mov
sahf
mov
jo
cwtl
lock
inc
cmpl
data16
ja
dec
movsb
push
mov
cmpsb
xor
mov
imul
sbb
push
mov
cmpsl
mov
mov
mov
xchg
std
sahf
mov
loope
lret
pusha
fs
imul
sahf
fsubrl
push
jp
mov
cmpb
and
or
inc
and
inc
add
ljmp
aaa
adc
bound
add
aaa
and
jle
cwtl
cs
shlb
push
mov
fnstsw
shr
mov
xchg
jmp
loopne
pop
mov
stos
je
mov
sub
cld
clc
je
sti
popf
jg
adc
movsb
adc
add
out
xchg
sarl
or
pop
imul
push
ficoml
in
mov
xchg
in
jmp
push
scas
enter
test
hlt
push
shll
hlt
push
and
pushf
cmpsl
fisttpl
sbb
insl
and
mov
mov
ret
test
push
das
mov
cmpsb
mov
mov
pop
scas
mov
aas
push
popf
scas
pop
lret
push
cld
in
jns
lret
lret
rolb
cld
adc
lret
movsb
push
scas
subb
jp
cmc
mov
cmpsl
inc
inc
fmul
aaa
cmp
lods
xchg
movsb
pusha
mov
xorl
mov
data16
mov
out
leave
mov
shll
mov
out
inc
leave
dec
stc
jnp
jae
rcrl
jns
and
push
pushf
clc
mov
repz
cld
test
and
mov
in
lret
mov
mov
cmp
cld
dec
add
or
es
xor
clc
cmpsb
rclb
mov
add
lret
push
cwtl
jecxz
in
push
jne
dec
cmp
and
inc
les
dec
outsl
or
jp
adc
movsl
cmp
into
xchg
int
add
xchg
sub
inc
incb
outsb
out
cmp
mov
ss
stos
loope
dec
xchg
cmp
mov
cmp
insb
sub
out
das
ss
pop
mov
mov
pop
out
outsb
add
cmp
xchg
jecxz
dec
or
mov
inc
imul
jne
cwtl
push
xchg
in
dec
add
or
loop
cmp
sbb
adc
mov
mov
negb
jb
jecxz
pop
pop
dec
jb
fcomps
in
and
jb
mov
insl
mov
in
push
imul
dec
xor
call
xor
adc
addr16
test
dec
adc
scas
mov
ret
pop
inc
fisttpl
out
ret
add
fsubrs
stc
pop
jmp
jmp
ret
clc
adc
mov
mov
lock
add
push
movsl
jae,pt
call
pop
sub
in
pop
pop
pusha
pusha
mov
out
pop
insl
sub
adc
mov
inc
fcomps
cmpsl
ja
pop
outsl
xor
push
fcoms
jnp
push
rcrl
fwait
jp
xlat
psllq
pop
aam
je
stos
mov
push
add
dec
movsb
js
push
jecxz
cmp
mov
outsl
shlb
mov
out
movaps
xchg
movsb
aad
mov
call
add
add
fsubl
mov
test
cs
mov
xchg
call
push
popa
cltd
add
pop
ficompl
test
les
cwtl
mov
test
mov
in
js
jnp
mov
fmuls
ret
in
cmp
jecxz
sbb
repnz
rorl
movsl
movb
mov
cmc
aaa
xchg
cmp
lret
mov
xor
jge
jno
or
cmc
mov
in
imul
rcr
cltd
pushf
aam
ja
lcall
imul
loop
xor
sub
fldl
das
and
data16
xor
add
cmpsb
movb
or
scas
lret
inc
push
movsl
jnp
jge
dec
out
ds
xchg
or
mov
jbe
pop
or
or
hlt
pushf
adc
ret
loop
iret
or
pop
sbb
imul
std
or
das
imul
subl
inc
xor
xchg
cmp
mov
or
outsb
or
shlb
arpl
xchg
add
pusha
pop
cs
and
cwtl
arpl
jb
lret
dec
mov
jmp
scas
out
mov
scas
inc
xchg
mov
stos
js
jae
jecxz
and
push
stos
mov
xchg
jnp
jecxz
scas
imul
aas
or
shlb
lahf
lock
popf
aad
mov
dec
push
mov
sub
ss
sbb
add
aas
adc
mov
ss
cmp
in
jmp
lea
lret
in
scas
imul
push
vmovhps
popa
pop
push
imul
fildl
lret
add
call
ljmp
pop
out
mov
mov
sub
and
dec
lea
xchg
lahf
addr16
push
iret
xchg
xorl
push
dec
or
dec
jno
push
cmpsl
scas
xchg
sub
mov
or
lret
testb
mov
xchg
cltd
enter
xor
inc
push
pop
ja
sub
pop
imul
jmp
cmp
pop
xchg
jne
test
lea
xor
movsl
inc
pop
cwtl
xchg
inc
add
mov
std
call
pop
push
push
xor
pop
imul
insl
mov
xor
pusha
inc
sub
loopne
inc
mov
loopne
and
in
push
sub
jle
cmpsb
mov
pop
enter
sti
jecxz
les
test
xor
adc
dec
xor
adc
sbb
sbb
cmp
pusha
push
fidivrl
sbb
xchg
testb
fs
lret
cltd
pusha
inc
loopne
in
mov
inc
mov
inc
pop
add
mov
repnz
mov
and
dec
push
inc
aas
jnp
add
mov
fsubr
dec
mov
xchg
sti
mov
add
xchg
jb
shr
mov
mov
out
imul
mov
add
inc
mov
andl
xor
and
inc
std
aam
arpl
cmp
dec
cmp
mov
xor
mov
jg
dec
ret
dec
mov
adc
and
mov
xchg
test
xor
rolb
ret
push
fwait
xchg
push
cmp
addr16
mov
mov
jnp
sbb
in
xchg
les
jno
aaa
loop
mov
mov
les
and
adc
mov
repz
shlb
andb
in
and
pop
push
std
adc
and
jle
xchg
xor
push
push
in
jne
out
cmpsb
xchg
fistpl
mov
cmpsl
adc
flds
jle
pop
call
dec
inc
aaa
mov
adc
inc
insl
out
adc
push
mov
sarb
fsubl
pop
lret
adc
adc
sbb
lcall
outsb
cmp
jle
je
cmp
push
jmp
cs
cmc
sbb
and
repnz
xor
mov
in
sbb
in
push
cmp
push
pop
push
clc
fnstenv
push
or
daa
mov
or
rclb
pop
insb
arpl
adc
xor
or
int3
test
inc
cwtl
cmc
sbb
xchg
cmc
je
jmp
ss
dec
adc
or
imul
hlt
sub
xor
mov
mov
push
lods
pop
sarb
mov
pop
adc
xor
fisttpl
loopne
mov
mov
or
out
in
xchg
adc
ljmp
decl
scas
jecxz
add
inc
cmpsl
in
mov
addr16
and
cmpsb
and
lds
mov
shr
fisubrl
mov
es
lods
dec
jl
adc
and
pop
std
loopne
or
scas
outsl
iret
js
pop
fwait
lahf
lar
repz
dec
mov
jmp
out
arpl
push
ret
mov
jge
cmp
or
jp
jmp
pushw
mov
lcall
lds
adc
mov
lods
jne
lods
mov
xor
lds
jge
lret
jg
scas
sbb
inc
cli
jecxz
lods
into
gs
xor
pop
negb
or
add
or
mov
inc
mov
sub
and
loop
hlt
mov
cmpsb
loope
mov
in
je
xor
das
adc
pushl
cmp
fincstp
adc
fs
outsb
int
cmpsb
and
cmp
mov
lret
aad
addr16
stos
mov
cmp
imul
sub
jecxz
lret
pop
arpl
sub
cmp
in
or
jle
add
inc
mov
sub
pusha
sub
cmc
cli
shr
xchg
inc
call
adc
fldl2t
adc
shlb
and
addr16
add
movsl
dec
imul
xlat
insl
jae
mov
dec
fistl
pop
dec
shll
or
or
repz
stos
fwait
sbb
loopne,pt
or
fistpll
cmp
das
or
int
cwtl
sbb
movsb
push
jecxz
leave
adc
inc
add
fdivp
jae
cmp
scas
xor
sbb
sbb
lret
dec
inc
clc
xchg
inc
adc
cmp
mov
push
add
ds
scas
dec
cmp
cmpb
cmp
pop
fld
dec
leave
clc
inc
jo
sbb
dec
sbb
pop
adc
jb
mull
and
jp
lcall
mov
sbb
fstl
add
cmp
dec
ja
cmp
push
sti
outsb
cs
pushf
int3
jno
jbe
xor
rclb
sbb
mov
ja
aam
xchg
cmc
push
xchg
test
stc
dec
pop
xor
inc
jg
fildl
mov
jg
mov
iret
outsb
fs
lods
das
pop
cwtl
rorb
in
or
jne
mov
inc
mov
aam
mov
cli
add
ds
rcrb
mov
mov
sub
jp
adcl
inc
add
cmp
pop
xor
aaa
sub
insl
sub
mov
inc
cmp
dec
cmp
jns
stos
xchg
popa
shrb
stos
cmp
pop
aas
mov
into
rcl
cmpsl
sbb
das
adc
ficoml
fldpi
mov
ficoms
sub
mov
call
hlt
jb
cmpsl
icebp
lea
cmp
or
jmp
push
cmp
loop
rorb
repnz
rorb
mov
mov
leave
xor
imul
test
sbb
sbb
out
mov
out
outsl
inc
cmpsl
inc
mov
mov
adc
fs
push
js
loope
ss
push
xor
inc
inc
sbb
aam
mov
push
adc
mov
stos
inc
xor
cmp
dec
jo
fcompl
adc
lds
jmp
and
fwait
scas
leave
in
mov
mov
inc
cmp
mov
rcrl
arpl
mov
sub
nop
jno
dec
dec
push
addr16
jp
fwait
xlat
pop
adc
mov
or
add
xchg
sahf
push
xor
pop
aad
test
sti
mov
lret
jbe
gs
mov
or
rcrb
jnp
and
movsl
out
mov
sahf
mov
sub
sti
cmp
aas
sbb
aaa
addr16
enter
and
xor
out
imul
fdivrs
filds
xor
jns
dec
enter
sub
das
in
lock
push
test
adc
jecxz
add
or
std
es
pop
cli
jecxz
mov
loope
sbb
test
add
dec
xor
sbb
cmc
inc
daa
jne
push
and
fimull
in
psllw
mov
cmp
ljmp
or
jle
ds
xchg
dec
inc
inc
mov
stos
cltd
inc
out
push
stos
adc
xlat
not
jg
cmp
mov
mov
mov
sbb
inc
jb
arpl
sbb
sahf
loope
adcl
dec
dec
fwait
outsl
jecxz
repnz
jg
leave
fnsave
mov
into
iret
and
dec
sbb
cmpl
imul
inc
mov
fs
clc
add
fnsave
out
mov
outsb
inc
cmp
repz
jne
push
add
xchg
ljmp
sbbb
pop
sub
mov
pop
pushf
xchg
cs
xchg
or
sbb
fistpll
jecxz
xor
dec
ljmp
stos
sub
add
xchg
mov
int3
push
and
add
sti
arpl
outsb
bnd
or
ficoms
and
movl
push
pushf
cmp
cmpl
in
aad
or
push
push
push
jne
xor
cmp
mov
xchg
lret
cmp
and
loope
push
xchg
ret
inc
dec
push
mov
dec
sti
lock
data16
sub
dec
cwtl
jne
out
and
addr16
pusha
iret
nop
lds
fists
hlt
inc
addr16
or
inc
sahf
out
jns
je
push
sub
mov
sub
xchg
sub
neg
inc
sti
test
aas
mov
les
outsb
imul
mov
roll
mov
hlt
nop
pop
lods
push
lods
arpl
cmpsl
mov
mov
pop
add
aad
inc
xchg
sti
sub
adc
jo
stos
or
push
and
sbb
jp
jae
fwait
sti
mov
cmpb
sbb
inc
int3
out
xacquire
das
ljmp
push
movsl
rcr
push
sti
imul
jb
xchg
insl
pop
movsb
cmpsl
jne
push
out
inc
inc
jg
repnz
sub
sbb
pop
xchg
xchg
xor
mov
lcall
cli
cwtl
bound
sarb
out
movsb
sbb
jne
test
dec
mov
cli
clc
add
jae
stos
cmc
xchg
pushf
fisttps
lods
mov
pusha
push
mov
xchg
sbb
mov
cmp
inc
xchg
xchg
ret
pop
xchg
mov
jmp
rcl
rol
dec
sbb
out
std
and
mov
jg
jge
sub
xchg
inc
das
incl
add
pop
jmp
leave
jecxz
mov
push
push
aam
stos
jmp
or
rcll
jnp
jmp
aas
leave
mov
mov
mul
add
sub
push
out
enter
jnp
inc
jne
into
jno
mov
lret
nop
xchg
push
ret
fldcw
lock
ja
mov
jbe
jae
movsb
jo
or
mov
fucomp
not
loop
test
lahf
inc
test
rorb
push
call
xor
addr16
das
cwtl
jbe
xor
mov
xor
insl
sbb
sub
lods
add
clc
add
cmp
sub
lahf
mov
pop
or
rcrb
mov
sbb
in
cmp
fs
imul
xchg
out
popf
inc
adc
pop
adc
nop
into
daa
mov
hlt
pop
dec
pop
divb
and
or
aam
mov
in
dec
insl
test
xor
inc
dec
je
movsb
xchg
push
in
add
ret
nop
jge
icebp
push
mov
mov
cmp
inc
mov
std
xchg
fadds
in
sahf
pop
addr16
fidivrs
sub
cmpsl
sets
and
adc
or
cmpsl
or
int3
push
mov
and
or
jle
mov
pop
arpl
cltd
mov
or
cmp
mov
subb
rorb
push
andb
and
das
movsl
imul
es
cwtl
push
popl
mov
test
popa
push
aaa
xorb
lea
or
in
xchg
aaa
scas
dec
stc
mov
cs
cwtl
push
cmp
and
lahf
lcall
in
movsl
pusha
loopne
mov
sbb
ficoml
mull
iret
push
xchg
icebp
xor
movsb
push
lds
out
push
push
aaa
jmp
cmpsb
push
mov
fimull
rcrl
sub
cmp
xchg
mov
xor
adc
mov
aas
mov
into
repz
mov
xchg
scas
inc
xchg
ficompl
sbb
scas
dec
sub
lret
mov
xchg
aam
sub
test
loopne
dec
out
pushl
mov
or
jmp
aad
data16
xchg
dec
out
cltd
inc
jo
mov
pop
shll
adc
sbb
sbb
lods
sub
dec
loopne
decb
into
push
test
and
movsb
stos
daa
and
jp
mov
mov
jb
ss
sbb
mov
and
dec
adc
jp
lret
inc
push
sub
mov
ds
int3
dec
add
cmp
sub
and
fldenv
jmp
pop
outsb
jge
clc
push
test
and
sbb
and
cltd
add
xor
push
push
scas
pop
dec
adc
in
icebp
int
dec
icebp
fnstenv
or
arpl
andb
jl
pop
testl
inc
jae
pop
cmp
loop
out
test
lea
lret
jmp
mov
jl
mov
outsb
hlt
mov
ljmp
xchg
xor
xchg
stos
lods
adc
arpl
lods
fildll
mov
ds
inc
aam
sti
xor
push
mov
dec
adc
adcb
push
lock
push
xchg
lea
pop
pop
rcll
push
iret
pop
mov
movsb
pop
and
and
jns
jge,pt
ror
ret
jo
pushf
lea
mov
rcll
insb
loopne
sub
sub
push
mov
dec
ljmp
adcl
mov
mov
dec
xchg
xchg
sahf
dec
ds
and
cmpsl
sub
outsl
cwtl
bnd
enter
scas
outsb
sbb
roll
jae
xor
ss
mov
insl
push
adc
adc
sub
xchg
in
dec
test
pop
dec
aam
imul
dec
out
mov
in
and
xor
addb
mov
adc
call
je
pop
push
jmp
push
add
mov
add
shl
lods
adc
adc
mov
mov
jl
adc
lea
or
and
push
dec
frstor
xor
icebp
outsl
shll
imul
mov
addr16
and
sub
lret
out
jbe
pop
add
popa
or
cmp
push
and
movsb
insb
mov
pop
fcomip
aas
mov
orl
fwait
push
icebp
mov
inc
inc
inc
test
stos
pusha
xchg
jae
xchg
inc
icebp
jno
push
gs
mov
jo
sub
adc
xlat
and
add
jl
rcl
xor
repz
adc
cs
sub
jl
push
sbb
fdivrl
jns
out
pop
push
cld
push
fimuls
jl
cmp
mov
fildll
dec
stos
jae
xchg
xor
rcr
xchg
push
mov
inc
inc
or
cwtl
sar
xlat
jnp
push
lea
fimuls
fldl2e
xchg
mov
ja
jae
shll
inc
sub
mov
xor
mov
xor
pop
push
adc
push
enter
outsb
flds
push
jl
xchg
out
std
inc
lahf
mov
enter
mov
sbb
ret
sbbb
adc
xchg
into
xchg
int3
fwait
lcall
lea
int3
test
insl
dec
add
inc
imul
scas
jns
jp
inc
pop
jns
dec
lds
mov
rcl
add
das
clc
movb
push
ret
and
sub
repnz
jne
aaa
cld
jae
inc
test
dec
jns
repz
scas
xor
loopne
mov
ja
pop
test
inc
sahf
xchg
push
mov
cmp
lods
repnz
cld
cmp
scas
add
inc
sub
movsl
mov
les
or
out
or
stos
add
lock
out
and
inc
jecxz
and
jbe
jnp
push
out
lahf
pop
mov
in
aaa
jne
xchg
jmp
xlat
clc
js
stc
jl
in
push
dec
imul
xchg
rorl
sbb
cmp
roll
lahf
xor
outsl
inc
or
pop
xor
in
xchg
xchg
and
push
sub
fsub
add
outsb
outsl
loop
xchg
mov
xor
adc
or
lahf
daa
mov
dec
push
jge
push
mov
mov
dec
pop
in
jl
push
imul
cmp
hlt
sbb
adc
cmp
lods
call
subb
and
inc
rcrl
daa
outsl
jg
je
sub
stos
fs
sub
pop
sbb
mov
fwait
stos
and
xchg
insb
imul
pop
bound
dec
nop
fiaddl
sbb
movsb
mov
movsb
xlat
push
js
lcall
cld
addl
loope
mov
imul
xchg
cmp
sub
cmpsl
mov
jg
mov
lret
pop
dec
arpl
aaa
jo
push
pop
je
cmp
insl
push
jnp
rolb
int
adc
dec
or
jl
in
loope
pop
push
adc
fldcw
mov
xor
xor
in
push
or
insl
push
rclb
xor
push
jl
lcall
adc
lcall
cmp
jecxz
xor
je
jmp
mov
test
inc
enter
jae
sub
in
sub
push
dec
pusha
into
sar
loop
negl
pop
pop
into
sbb
movsb
fwait
or
push
jle
xchg
out
cltd
call
arpl
imul
pop
lfs
push
imul
mov
ja
stc
ja
jns
add
push
repz
iret
test
dec
jmp
jmp
dec
and
adc
mov
in
xchg
or
mov
out
mov
insl
push
sti
ds
ret
pop
data16
mov
adc
add
mov
add
lods
cmp
cmp
std
dec
inc
mov
fldcw
sub
daa
lahf
ret
dec
scas
lret
push
or
ljmp
add
or
push
and
arpl
aam
insb
ljmp
mov
int3
jno
push
js
shlb
pop
mov
pop
icebp
cmc
and
add
imul
ret
shlb
inc
aaa
orb
inc
notb
fwait
jg
aam
loope,pn
in
fildl
sbb
mov
fldt
xchg
mov
jae
mov
dec
out
fnclex
daa
jg
bound
repnz
and
ljmp
aam
add
xor
test
adc
xchg
in
mov
je
arpl
push
adc
inc
daa
xor
imul
fildll
or
adc
mov
shrl
imul
test
mov
jmp
dec
push
not
insl
scas
divl
arpl
push
sub
rcl
push
ret
add
push
or
lods
jmp
adc
adc
push
lea
dec
dec
je
dec
cld
adc
lret
lret
sti
outsb
out
testl
sub
lods
xchg
mov
adc
int3
addr16
jp
jns
pop
mov
push
pop
dec
adc
enter
filds
in
fnstsw
cmpsb
push
insb
push
repz
pop
cmp
shlb
arpl
loop
outsb
ds
test
xor
pop
xor
je
dec
pop
inc
sub
imul
bound
pusha
daa
dec
or
sti
push
popf
aam
les
aam
jge
add
repnz
add
negb
dec
jp
pushl
lcall
inc
add
adc
nop
cli
daa
mov
jl
std
in
and
sti
xchg
pushf
movsb
mov
arpl
cmp
add
add
lret
ficoml
push
xchg
mov
in
mov
push
xor
shrb
fwait
loope
out
mov
mov
mov
or
in
js
pop
xor
outsl
push
popf
bound
xor
jbe
sub
sub
in
push
ja
lret
inc
sub
popa
sbb
or
bound
mov
jb
xor
inc
pop
loopne
mov
je
popa
sbb
out
jmp
adc
fimuls
mov
ljmp
out
outsb
inc
sbb
or
fcompl
popa
xchg
into
out
loope
cs
insb
aaa
call
fbstp
dec
push
pop
jbe
dec
mov
add
scas
leave
outsl
daa
jge
or
cltd
lret
out
int3
sbb
icebp
sbb
cmp
jp
add
dec
or
daa
add
pop
mov
sete
lahf
cli
scas
fs
mov
outsl
add
dec
ficomps
out
and
mov
in
sbb
push
xor
xchg
aad
dec
mov
sbb
or
pop
pop
xchg
movsl
add
rcr
mov
mov
jnp
adc
pop
mov
add
adc
ljmp
inc
push
hlt
lret
fimuls
sbb
add
fldl
xchg
push
test
cmpsl
inc
fmul
mov
movsl
popf
shll
mov
sbb
cmp
mov
xor
js
ret
repz
push
xchg
inc
outsb
data16
inc
dec
ss
jmp
popf
pop
stos
fldt
inc
jo
sbb
push
pop
lcall
mov
add
out
push
dec
loope
outsl
dec
xchg
mov
xchg
push
outsb
cmp
and
cmp
cmp
push
outsb
mov
nop
dec
inc
add
pop
xchg
filds
mov
test
popf
or
add
scas
pop
jbe
js
leave
jb
insl
push
and
inc
dec
sbb
mov
pop
add
pop
hlt
xchg
int
lods
ficoms
pop
pop
mov
fsqrt
inc
sub
dec
fisubrl
lea
daa
sarb
fidivrl
fstpt
xchg
lds
pop
inc
stos
push
mov
das
cwtl
movsb
fstps
push
shrb
fwait
lret
loop
scas
pop
insb
movsb
inc
shrl
ficoml
push
pop
push
and
dec
fidivrl
pop
scas
iret
sub
cltd
movl
ror
dec
pop
xlat
outsl
mov
and
push
jae
push
dec
cmp
clc
push
shll
cmpsl
add
or
in
cmpxchg
lcall
fdivrp
mov
mov
inc
sub
mov
inc
pop
ss
dec
mov
sbb
mov
and
scas
inc
dec
mov
ret
data16
xor
add
cmp
out
adc
pushf
xor
xchg
ret
dec
popa
or
cmp
fcmovbe
xchg
or
add
cmc
in
movsb
jo
into
lret
jb
fstp
xchg
mov
enter
sbb
int3
filds
mov
fstpt
pop
inc
cmp
push
test
fsubr
popf
or
xchg
xchg
adc
out
std
push
xor
xchg
repz
inc
sbb
xchg
dec
jmp
cwtl
inc
and
fidivrs
int
xor
pop
push
mov
out
push
divb
cmpsl
int
sub
repz
fisttpll
jno
cwtl
clc
dec
push
clc
push
shlb
and
fsubl
xlat
adc
cmp
movsl
cli
mov
mov
push
adc
push
punpckldq
push
mov
jbe
adc
or
lret
jle
nop
and
mov
in
or
addl
mov
pop
add
adc
pop
orl
pop
push
cmp
jge
es
mov
js
add
inc
sub
lret
inc
shl
mov
nop
xchg
movsl
mov
add
dec
dec
push
jae
or
lods
lock
push
mov
mov
cwtl
out
mov
aad
in
loop
mov
push
leave
out
sub
loopne
fldl
xchg
insl
imul
mov
dec
int
dec
nop
cli
mov
inc
mov
stos
mov
push
popa
imul
xor
pushf
leave
out
jmp
pop
pop
pop
test
icebp
imul
xor
and
hlt
loop
mov
cmp
inc
loope
sbb
je
lret
fadd
inc
mov
push
cmc
popf
xor
fistps
scas
push
mov
cltd
cli
adc
sti
or
test
jge
icebp
imull
adc
pop
pop
js
mov
mov
mov
stos
sbb
fmul
movsl
mov
js
outsl
dec
sahf
loop
add
push
lock
iret
mov
mov
dec
mov
push
inc
testl
out
or
jl
pop
or
out
lea
jg
ds
cmp
sahf
frstor
and
test
clc
cwtl
pusha
ret
push
lds
divl
hlt
and
xor
cmp
lret
cmp
cmpsb
aam
adc
arpl
inc
popa
and
inc
or
sbb
xorb
xchg
not
inc
dec
dec
mov
call
inc
test
sahf
mov
nop
repnz
clc
push
lret
dec
loope
sbb
mov
ljmp
test
and
jns
fcoml
out
pusha
jns
mov
mov
jb
jg
pop
jbe
test
imul
rclb
add
adc
ds
mov
shll
fmull
movsl
inc
outsl
or
ja
or
jp
imul
pop
div
ljmp
int
mov
mov
sub
push
aas
lahf
ljmp
add
jecxz
cmpl
fldcw
fs
insb
add
xor
sub
ljmp
cmp
jnp
xorl
jecxz
out
call
repz
dec
int
ficompl
loope
add
mov
fld
fs
test
std
jle
dec
je
mov
andl
imul
xchg
push
and
push
jbe
jmpw
sar
jbe
mov
pop
adc
jle
out
push
push
xor
cmc
lret
js
jecxz
xor
jl
inc
mov
mov
fldl
aad
shl
fsqrt
mov
imull
adc
mov
movsb
and
push
pushf
ljmp
or
and
or
adc
push
mov
mov
in
mov
push
or
jecxz
mov
int
push
scas
aad
outsl
sub
or
in
cmp
mov
push
jmp
outsl
stos
xchg
ja
movsb
and
lahf
cld
aad
mov
in
xchg
xchg
mov
mull
xchg
cmp
push
or
push
movups
xchg
fistpl
out
pop
mov
stc
stos
and
popa
adc
mov
movsb
repnz
bound
lahf
popa
cmp
jae
fcompl
loopne
dec
out
lahf
push
xchg
push
cmp
pop
pop
or
int3
cmp
out
aam
fsubp
outsb
mov
arpl
or
mov
outsl
dec
jbe
cmp
jmp
xchg
dec
lahf
xchg
pop
dec
cmc
mov
and
fsubs
stos
lods
jns
jae
push
sbb
shlb
adc
pop
enter
bound
adc
mov
dec
mov
xor
add
or
sub
cmpsl
jb
sub
or
loop
sbb
push
mov
in
and
push
inc
mov
pop
aas
mov
sub
pop
das
xchg
dec
shll
aaa
out
pop
pop
int3
or
pop
stos
cld
mov
sub
mov
dec
imul
in
pop
adc
mov
cmp
cmp
out
inc
sub
scas
cmc
loope
into
stc
jmp
addr16
pop
xchg
aad
sti
clc
aas
pop
jp
inc
cld
repz
sbb
fcoms
test
sbb
mov
or
xor
hlt
aad
cmp
mov
push
mov
or
inc
adc
mov
fs
call
leave
rol
jnp
fmull
testb
jl
popa
and
popa
push
idiv
shrl
fisttpl
es
push
mov
push
mov
xorb
in
sub
adc
outsb
cld
mov
fcompl
dec
cmp
mov
sub
pop
inc
add
jne
icebp
cmpsb
adc
add
cmc
dec
out
jge
dec
xor
cmp
je
test
adc
jmp
fsubrl
mov
dec
cmc
movsb
inc
cwtl
daa
movsl
out
addr16
aam
stos
in
imul
and
lahf
addb
mov
aas
sub
sti
ja
mov
mov
and
fwait
test
movsl
iret
dec
scas
mov
ds
dec
ficoml
sbb
fcmovne
bound
jmp
push
push
icebp
stos
xchg
or
shl
mov
mov
xlat
inc
inc
in
sbb
xchg
jne
mov
dec
sbb
jp
xchg
mov
hlt
xor
or
faddl
mov
bnd
cwtl
mov
push
pop
dec
dec
sbb
sub
pusha
mov
push
cmp
jnp
sbb
dec
xor
movsl
push
push
cs
fcmovnb
sbb
mov
add
pop
pop
and
or
sar
fnstsw
outsl
xlat
push
fildll
int3
into
jns
imul
insb
jne
push
mov
and
mov
sub
cmp
nop
sub
gs
sub
pop
lea
gs
pop
mov
adc
inc
loope
sbb
out
or
in
sbb
pcmpeqb
push
notb
ds
push
in
xchg
icebp
outsl
out
jmp
jne
ja
sub
inc
pop
sub
adcb
aad
sbb
jbe
movsl
and
jnp
clc
stos
lahf
adc
loopne
xchg
xchg
out
movsl
jbe
testl
insb
sbb
out
jb
mov
cs
test
push
aaa
and
sbb
repz
repnz
aas
lret
inc
call
ljmp
mov
pop
xchg
in
jge
stos
rcrb
jecxz
imul
cli
inc
stos
xchg
aam
xchg
add
xchg
add
mov
xor
lea
loope
or
adc
add
aam
xor
or
xchg
cmp
push
ljmp
mov
add
mov
mov
and
js
lea
inc
dec
sti
adc
in
mov
out
enter
or
addr16
sahf
movsl
jae
icebp
dec
sahf
rclb
stc
xor
mov
xchg
xor
and
fnstcw
xor
mov
stos
push
mov
inc
push
adc
or
aas
and
and
jne
sbb
or
test
mov
xchg
lret
leave
push
insb
cmpl
mov
iret
mov
push
pop
sbb
enter
mov
les
sbbl
and
rclb
jne
in
inc
jnp
xor
pushf
jecxz
mov
sbb
jp
in
dec
out
mov
push
xor
mov
cmp
xor
xchg
ljmp
sub
lods
pushf
mov
inc
push
xchg
ds
adc
pop
das
andb
rcr
add
cmpsl
pop
mov
xor
mov
std
push
subl
jno
pop
xchg
cmp
xor
mov
mov
addl
or
inc
lds
sti
lahf
rclb
mov
sub
jbe
jge
mov
or
xor
lock
outsb
dec
in
in
fstpl
xor
clc
mov
push
int
xchg
cmp
xchg
jmp
sub
mov
js
ret
and
inc
stc
inc
dec
mov
shl
inc
push
ja
ret
bound
lcall
lock
pop
mov
pop
adc
andb
fistps
sbb
es
cs
push
ret
add
inc
mov
loopne
jl
dec
scas
jl
mov
mov
add
mov
ja
repz
repz
jp
and
jl
sbb
sbb
mov
cli
and
xchg
loop
lea
shll
pop
dec
cli
cmpsl
decb
std
shrb
adcb
xor
pusha
ljmp
test
cld
in
lods
add
mov
mov
jecxz
subl
mov
xchg
jbe
enter
pop
stos
and
nop
lcall
xchg
jecxz
in
test
cs
adc
hlt
or
xor
xor
xlat
adc
xchg
into
sti
push
in
inc
stos
cs
inc
push
out
push
into
popa
out
lret
inc
pop
inc
sub
cmp
sbb
cmpl
incb
mov
adc
call
xchg
mov
fnstenv
push
push
in
mov
jbe
and
loopne
and
mov
lcall
lret
xchg
out
testb
leave
loop
lds
or
int
popf
int3
aas
int
push
push
repnz
push
scas
test
jnp
mov
adcl
int
sbbl
jae
and
divb
enter
pop
lock
repnz
and
push
push
push
dec
dec
shrb
notl
mov
pop
fbld
pop
xchg
xchg
clc
push
mov
jb
popf
loopne
int3
pop
mov
push
push
fistpll
add
push
xchg
add
xchg
lds
push
sbb
pop
lds
mov
call
sub
adc
insl
jns
sub
rcr
sbb
sub
jecxz
sbb
or
lret
les
jmp
xchg
xchg
adc
mov
jnp
insb
aaa
fisttpll
fcomip
adc
movsl
insb
scas
pop
fwait
sbb
fadds
pushf
mov
and
test
mov
push
std
negl
add
mov
mov
push
sub
mov
mov
daa
pushf
call
or
lods
arpl
arpl
push
push
and
pop
dec
js
pmaxub
sbb
push
and
push
xchg
les
aad
add
icebp
movsl
popf
jb
flds
mov
jmp
inc
push
inc
fidivrs
movsb
inc
or
fildl
jg
sbb
shll
mov
cmp
xor
xchg
sbb
aas
cmp
pushfw
pop
xchg
ja
rorl
insl
push
sahf
pop
push
es
and
es
in
mov
dec
lods
cmp
jmp
or
xor
sub
mov
in
fistps
push
jnp
bound
shl
pop
call
mov
xor
push
push
outsl
mov
bound
outsb
leave
out
fldl
push
stos
imul
jg
adc
stc
roll
loopne
adc
adc
sbb
pop
test
mov
inc
push
psrlq
stc
jecxz
sarb
ficoml
and
dec
push
jo,pn
xorl
repz
in
je
add
rorb
fst
mov
sub
xor
nop
inc
loope
jo
dec
test
imul
push
mov
sub
mov
push
bound
inc
add
test
push
dec
mov
mov
and
movsb
jmp
fwait
jb
push
and
jmp
in
push
sub
push
in
sub
dec
xchg
or
pop
inc
pop
push
push
mov
mov
in
inc
in
loop
out
ss
mov
clc
je
mov
fwait
jmp
shl
or
xchg
cwtl
cli
mov
dec
jg
sub
and
mov
xchg
adc
es
stos
lret
lds
sti
mov
dec
rcrl
push
cmc
pop
xchg
xorl
mov
adc
pushf
test
rcl
cmp
xor
repnz
movsb
daa
jmp
add
fnstenv
rcl
cmp
or
cmp
repz
add
repz
xchg
or
cs
add
in
dec
mov
addr16
sti
inc
cmc
push
mov
movsb
lahf
xor
or
xchg
mov
jmp
pop
xchg
ret
test
pop
dec
fxch
stos
pop
adc
or
and
arpl
int3
xchg
cmp
adc
cli
icebp
push
pop
cld
jmp
xor
sub
lahf
jb
movsb
jg
cli
sub
fcmovnb
xchg
scas
mov
fmul
mov
jne
mov
or
push
jne
mov
mov
add
sti
adc
in
repnz
sub
popa
popf
fistl
movsb
nop
pop
stos
sbb
movsb
repnz
nop
cmp
and
shlb
icebp
pop
imul
cmp
pop
sbb
sti
push
and
adc
xor
or
inc
cmp
es
mov
xchg
jae
popa
adc
push
push
outsl
xchg
rorl
je
int3
repnz
leave
fsubrs
mov
push
mov
cmp
xor
jmp
sahf
sbb
mov
push
mov
mulb
addr16
sub
mov
fbstp
cmp
xchg
jecxz
ficoms
xchg
add
pop
add
or
or
cmpsb
cltd
pop
mov
push
fnstsw
add
pop
stos
data16
pop
mov
popf
in
mov
fstl
mov
push
lret
cmp
jne
jge
sbb
fcomps
and
cld
insb
insb
xlat
inc
js
add
xchg
adc
mov
rcrl
mov
fs
movsb
jl
inc
pushf
add
mov
pushf
pop
xor
mov
ljmp
or
call
jmp
pop
add
popa
mov
jo
cmp
sahf
push
sbb
inc
sbb
call
xchg
data16
popa
or
jo
sbb
fs
ds
sbb
orl
push
outsl
movsb
lea
pop
sbb
mov
scas
pop
cmp
ror
shll
lahf
iret
jmp
mov
jnp
add
dec
movsb
inc
xor
lods
imul
mov
and
addr16
push
jnp
lret
jle
mov
sub
int
mov
or
jns
ror
sub
dec
fiadds
imul
mov
fldcw
mov
sbb
jae
cmp
sbb
shl
xor
xchg
jge
dec
js
add
int
cwtl
insl
in
push
inc
xchg
inc
bound
pop
test
fld
xlat
bound
loop
movsb
push
daa
mov
cmc
out
pushl
or
popf
mov
ret
into
lret
fildll
shrb
xlat
pop
stos
je
mov
sti
xor
add
dec
arpl
push
pop
mov
fsts
sub
in
xchg
and
dec
in
ss
jmp
xchg
daa
sbb
push
rcll
push
jle
jmp
pop
cmpl
push
push
imul
hlt
dec
out
mov
addr16
test
jb
push
movsb
push
stos
push
or
push
and
pop
mov
in
dec
std
ljmp
out
sti
or
stc
roll
mov
loopne
adc
cli
sar
sub
jg
lahf
insl
add
cmpsl
inc
mov
dec
mov
scas
mov
int3
mov
sub
xchg
and
lds
add
mov
xor
adc
sbb
hlt
test
rcl
xor
adc
in
inc
pushf
adc
lea
mov
fisttpl
mov
or
adc
out
xchg
testb
cmp
and
cmp
ret
cltd
push
jne
jle
daa
int3
mov
out
leave
push
mov
xchg
inc
inc
mov
mov
lret
pop
aam
xchg
add
add
into
mov
je
sub
nop
fnstcw
loopne
or
mov
mov
loop
adc
ret
dec
enter
mov
adc
xchg
pop
push
dec
mov
loop
sbb
lret
push
addr16
mov
lret
dec
mov
mov
mov
mov
jecxz
push
xchg
pop
adc
orb
inc
outsb
outsl
push
rorl
aaa
aam
add
or
sbb
inc
and
sub
pop
lahf
inc
popa
pop
mov
push
faddp
pusha
sti
lcall
add
stc
orl
pop
outsb
jne
lods
push
pop
cmp
add
sahf
pop
dec
and
incl
jle
fwait
pop
std
out
into
dec
sbb
call
lcall
cltd
xchg
inc
fnstenv
lret
mov
in
push
mov
cmp
mov
sarb
and
xlat
push
js
hlt
xor
arpl
jge
pop
lock
dec
lods
push
mov
pusha
and
add
mov
inc
adc
loope
xchg
fimull
push
inc
push
lods
mov
pop
les
or
movsb
cmpsb
mov
mov
jp
push
pop
sbb
test
add
mov
mov
and
xlat
ja
or
xchg
mov
xchg
cmp
aas
jno
pop
mov
jno
adcb
dec
andb
ret
stc
adc
sub
mov
mov
or
mov
loopne
out
adc
push
daa
xor
data16
lods
pop
mov
mov
mov
pop
fwait
shrb
in
adc
or
pop
adc
cs
mov
test
movsl
fcompl
aad
or
in
jno
fmul
mov
aaa
fimuls
cmpsb
dec
or
push
push
sar
add
push
push
cmc
sbb
sub
mov
cs
or
xor
dec
xchg
xor
cmp
sbb
sar
popf
scas
enter
ljmp
ficoml
out
loopne
mov
loopne
dec
rclb
mov
push
ljmp
sbb
add
dec
rcrb
and
mov
jmp
add
insb
outsb
stos
pop
jge
sbb
push
imul
sahf
sbb
das
fcoms
mov
dec
sti
xchg
fimull
mov
and
mov
adc
mov
push
js
scas
sbb
dec
sbb
xchg
out
cmp
test
mov
arpl
out
test
cmc
push
jne
mov
and
sub
test
sub
stos
push
clc
subb
sbb
mov
push
mov
jnp
gs
test
mov
push
adc
mov
test
lods
iret
fcmovnu
dec
push
xchg
popf
and
jg
dec
lahf
adc
cmp
pop
xor
stos
fst
int3
aas
hlt
cmpsl
mov
fdivs
adc
pusha
or
dec
stc
push
addr16
or
inc
adc
mov
orl
cmpsl
subb
xor
mov
nop
cmp
pop
mov
insb
inc
jbe
mov
leave
js
dec
pop
mov
jbe
adc
jmp
jmp
int
jb
imul
xchg
and
dec
cmp
sub
and
cltd
add
push
in
sbb
mov
push
jno
sbb
ljmp
loopne
fsubrp
fmull
subb
or
inc
iret
ljmp
fld
in
push
inc
stos
aaa
js
jb
fisubrl
adc
push
pop
cltd
jnp
jg
adc
bound
xor
nop
aam
pop
jae
push
sbb
push
mov
pop
cmp
lea
pop
sub
sahf
sbb
dec
arpl
sbb
push
dec
sub
push
lahf
popa
xchg
dec
xor
sub
jo
les
xor
xchg
aad
out
arpl
add
xor
pop
pop
lods
fildl
mov
repz
inc
mov
add
arpl
pop
xor
pop
push
adc
pop
xor
rorl
das
pop
js
test
push
cmpsl
mov
mov
xor
dec
jecxz
xchg
sti
xor
insl
rcr
xchg
or
add
call
jmp
jp
mov
cs
mov
sub
popa
jne
push
adc
ret
bound
push
loope
and
inc
xor
dec
mov
sub
sti
push
shll
fistps
and
out
push
outsb
addr16
cmp
xchg
xchg
pop
out
jno
mov
lcall
sbb
cmp
add
rcr
and
mov
cmp
xor
aam
add
adc
adc
cmp
es
adc
andb
mov
pop
inc
pop
ficompl
imul
mov
dec
push
shll
mov
popf
pusha
call
inc
out
mov
sbb
fsubl
push
clc
out
ja
jmp
out
enter
xchg
mov
pusha
xchg
adc
or
and
outsl
outsb
fwait
je
inc
jns
loopne
fistpll
gs
jl
inc
subb
pop
scas
mov
add
lret
xchg
fiaddl
jl
add
cltd
xlat
nop
dec
xor
push
cmp
dec
sahf
addr16
aam
into
fistpl
mov
jno
in
sub
dec
lds
mov
scas
jbe
push
add
leave
imul
out
imul
out
xchg
adc
push
jp
adc
jp
call
mov
mov
pop
pop
popf
mov
cmp
arpl
stos
and
imull
xchg
or
js
or
cmp
mov
mov
and
iret
pop
push
aad
cmp
sbb
mov
fisubl
mov
pusha
xorb
cld
into
push
adc
dec
jbe
pop
daa
or
push
mov
xchg
add
bound
fildl
lret
xchg
adc
inc
jge
stos
dec
pop
mov
lds
arpl
sbb
in
aad
lock
cmp
rorl
rcrl
sti
xlat
xchg
xchg
fcoms
cli
lds
hlt
test
testb
cld
ss
in
lock
xor
adc
mov
xchg
dec
data16
jb
call
and
xchg
xorl
sbb
aas
mov
adc
outsb
popf
push
push
mov
sub
aam
repnz
mov
ss
or
fs
mov
pop
leave
lods
pop
call
adc
jmp
xor
push
xchg
xor
js
pop
call
jecxz
sub
ja
in
xchg
jnp
xor
cs
test
mov
shlb
bound
out
mov
adc
lcall
pusha
mov
pop
scas
outsb
popf
xlat
int
push
aas
jg
clc
inc
jge
lcall
scas
xchg
dec
int3
jb
and
adc
test
xchg
je
pushf
test
sbb
pop
dec
sub
dec
lcall
dec
add
lahf
mov
sarb
loope
dec
ret
cli
sub
jne
leave
out
push
lea
inc
mov
lods
repnz
outsb
subl
and
fstpt
push
fisttpl
orb
jl
push
sub
repnz
data16
and
frstor
dec
sub
nop
mov
sub
negb
dec
sub
mov
cmp
pop
mov
stos
stos
imul
hlt
cmpl
rcrl
fadds
ljmp
inc
loop
ret
shll
push
orb
je
pop
add
cmp
jne
jecxz
inc
xor
aad
adc
mov
nop
jo
mov
push
enter
imul
insb
pusha
jae
insb
test
pop
cmp
lods
outsb
idiv
push
xchg
or
dec
sbb
jg
rcrb
fsubp
icebp
cmpsb
in
pop
sbb
js
loopne
add
jp
adc
adc
xor
std
sbb
dec
pop
cli
mov
cli
sahf
ljmp
jo
jbe
repnz
ret
outsl
mov
addr16
mov
push
stos
and
es
cmp
or
repnz
stos
lea
or
or
mov
sar
sub
add
fldl
xchg
sbb
cmp
pushl
in
mov
push
mov
mov
scas
jl
out
fldl
stc
mov
clc
stc
jle
sub
repnz
pop
iret
mov
in
cmp
aas
fyl2xp1
push
pop
mov
icebp
xor
sbb
out
loope,pn
out
into
mov
fidivrs
dec
aas
icebp
and
mov
inc
and
sbb
pop
std
cwtl
repnz
mov
jo
and
aaa
xor
popw
enter
xor
int
loop
lcall
inc
sahf
xchg
scas
push
xchg
sub
fldcw
sbb
push
xor
cmp
ret
jg
mov
bound
test
xchg
xchg
push
sub
push
pop
xchg
repz
mov
sbb
adc
adc
pop
ror
ficompl
lcall
scas
or
dec
xchg
xor
xchg
xor
adc
pop
push
outsl
fbstp
mov
mov
lods
and
arpl
jge
adc
shrl
lds
pop
mov
das
sbb
lcall
push
mov
js
outsb
pop
scas
sbb
ja
sbb
xchg
cmpsb
and
sti
mov
lcall
cwtl
xchg
cmc
mov
or
sbb
push
inc
push
mov
fwait
mov
popa
stos
mov
jl
aam
mov
mov
aaa
inc
int
xchg
mov
shll
stos
int3
imul
fisubs
test
xchg
sahf
jg
cli
pop
fsubs
sbb
push
push
hlt
inc
dec
and
sbb
jmp
stos
lret
shrl
adc
jecxz
jo
loope
pop
push
sti
sbb
cmpsl
cmp
or
mov
and
sub
xchg
xor
out
xor
inc
xchg
jp
hlt
aad
jecxz
sub
insb
mov
cmp
aam
sti
mov
sbb
int3
pop
xchg
andb
fidivrl
inc
push
scas
sbb
ss
xor
adc
stc
insb
or
in
in
imul
clc
in
jmp
jle
add
in
test
pop
lahf
int3
sbb
add
mov
push
testb
push
sbb
movsb
jle
sbb
popa
sbb
xor
fisttpl
sub
lret
jo
dec
arpl
push
js
out
jne
frstor
jp
pop
xor
sub
pop
mov
lret
outsl
jae
jbe
insb
fildl
das
test
fstp
js
cmp
cmp
hlt
xchg
rclb
ljmp
call
in
adc
push
sbb
cltd
push
push
fstps
sar
jge
test
icebp
push
cmp
dec
cmpl
jmp
movsb
inc
inc
loope
and
js
mov
cs
xchg
jge
aam
aad
dec
or
jbe
loope
cli
add
call
outsb
negl
jge
xchg
jmp
pop
loop
or
push
xchg
imul
add
xchg
pop
test
dec
xor
mov
add
xor
lahf
sbb
jecxz
mov
xor
nop
add
das
inc
in
or
mov
ret
or
sub
sub
ficompl
xchg
mov
test
cmp
mull
es
jle
pop
xorl
gs
xchg
std
adcb
into
loopne
pusha
push
test
inc
cmp
lods
arpl
shl
pop
fistpll
imul
sbb
add
out
lods
dec
scas
rorl
jbe
xlat
ds
pop
mov
mov
stos
int3
popa
in
scas
xor
jnp
adc
cmc
mov
mov
fldl
dec
and
mov
sub
add
imul
and
lds
sbb
cmp
adc
sbb
pushf
ja
jg
dec
mov
and
insb
jns
loopne
mov
xchg
jo
inc
ret
cmpsb
add
mov
cltd
mov
mov
imul
xchg
pop
pusha
cmp
mov
mov
call
call
mov
scas
cmp
sbb
mov
retw
cmpsl
xchg
cltd
sbb
sbb
dec
aas
daa
cmp
pushf
or
xor
nop
aas
int
or
fsin
dec
inc
insb
push
jmp
shrb
fdivr
fcompl
jbe
fnstenv
mov
outsb
xor
cltd
lret
push
and
iret
jg
mov
loopne
push
std
mov
xchg
ja
add
adc
scas
dec
xor
xor
xchg
xchg
fwait
add
into
jp
inc
adc
shlb
jge
popf
mov
les
sub
shll
xor
inc
adc
jno
mov
push
fnsave
sbb
pop
call
dec
lret
ret
mov
jge
aaa
mov
adc
out
cld
mov
or
lcall
jp
out
in
push
mov
movsl
stc
pop
cwtl
dec
jb
jg
and
popf
add
pop
cld
notb
iret
inc
and
sub
xor
inc
ret
xchg
in
leave
gs
add
lea
pushf
add
mov
add
jnp
pop
shlb
mov
mov
pop
test
add
mov
push
mov
int
aas
shl
test
or
and
mov
xchg
mov
jae
cmp
mov
mov
adc
push
jbe
cmc
cmp
mov
mov
inc
fldt
movsl
mov
or
and
jg
and
mov
insl
shll
leave
rep
jmp
rclb
push
int
cmp
movsb
add
call
add
cwtl
ret
aad
push
jl
jmp
cmp
cli
inc
gs
pop
adc
int3
sarl
cld
out
pop
or
mov
data16
jecxz
pop
pop
leave
mov
roll
nop
fsubr
inc
stc
insb
stc
xlat
xlat
mov
ljmp
mov
movsl
popf
ret
dec
int
xor
andb
lahf
test
pushf
adcb
dec
jbe
sbb
dec
jp
dec
fs
adc
lods
ret
pop
in
lcall
std
repz
lcall
dec
repnz
daa
and
dec
int3
jmp
repnz
adc
jge
mov
sub
les
mov
incl
or
das
inc
mov
sbb
cwtl
mov
aad
out
inc
pop
ds
mov
pop
cmp
dec
xchg
cli
xor
lods
push
loop
sbb
xchg
xor
lods
fnsave
lret
andl
enter
and
out
and
add
fwait
sbb
or
pop
setge
pop
xor
sub
inc
popf
sbb
and
jbe
push
push
add
push
sahf
loope
lahf
imul
ret
cmp
data16
insl
jmp
nop
out
lods
call
jge
cmpl
or
jge
lret
mov
or
jno
jl
mov
int
lea
sub
ljmp
or
test
xchg
loopne
je
jno
cmp
mov
push
sub
jo
clc
push
add
sti
ja
ja
scas
xlat
mov
test
jne
adc
inc
das
les
js
push
xchg
nop
mov
xlat
cmc
jns
mov
and
sahf
xchg
das
push
mov
add
mov
jbe
mov
push
push
xchg
mov
lahf
xor
pop
xlat
lahf
sarb
inc
lret
int3
aas
mov
push
push
sub
and
mov
sahf
xor
jno
addr16
into
repnz
test
andb
daa
inc
sbb
out
in
inc
cmc
mov
or
pop
cs
stc
or
sub
es
pop
call
dec
xchg
jp
loopne
inc
pusha
pop
push
test
repz
mov
int
and
add
jle
outsb
mov
aaa
push
jne
mov
sti
ret
sub
or
inc
lcall
and
out
and
jl
leave
loopne
jbe
jl
test
fimull
xor
pminsw
in
stc
loopne
sarb
mov
push
orl
mov
jp
in
in
insl
test
dec
testl
push
into
push
inc
stos
add
and
pushl
cld
je
popf
gs
add
or
pushf
xor
lds
pop
sub
daa
movsb
fst
sub
jb
leave
fwait
stc
add
pop
scas
pop
and
in
jne
jg
cltd
testb
stc
popa
arpl
mov
lea
lret
push
jnp
lahf
sti
and
cmp
pop
test
jle
insb
xor
jne
enter
repz
jae
into
mov
aam
cs
movsb
xor
add
cmp
test
xchg
cmp
fdivs
xchg
cli
lods
outsl
iret
fistps
test
and
jl
out
sahf
lods
cli
js
push
pop
and
cmp
xor
inc
xor
and
and
je
dec
sbb
mov
cmp
and
mov
out
stc
jne
cmp
popl
mov
jb
jecxz
lods
add
xchg
rep
xor
dec
sub
adc
rcr
sbb
sbb
jae
inc
dec
inc
xlat
xchg
push
aaa
mov
adc
into
jo
adc
mov
out
push
or
ja
pop
popf
and
lret
xchg
adc
push
inc
inc
loope
ljmp
cmp
rorb
iret
add
cli
adc
mov
out
mov
dec
mov
ljmp
push
int3
sbb
pop
sbb
add
dec
popa
sbbl
cwtl
test
mov
mov
insl
fisubs
fcompl
filds
xchg
loop
in
jmp
pop
sbb
sub
mov
cmp
and
jmp
pop
mull
add
add
cmpsl
mov
push
add
mov
das
mov
pop
jae
inc
dec
inc
add
loope
test
cmpsl
or
sub
or
in
sbb
mov
xchg
fsubl
inc
push
pop
mov
sbb
mov
int3
inc
push
xor
add
mov
clc
cltd
sbb
shll
sub
insb
stos
and
mov
movsb
dec
xchg
sbb
mov
add
pop
sub
push
outsb
lret
bound
fsub
idiv
lods
push
xchg
jb
gs
inc
jae
stos
cmp
repnz
cltd
mov
hlt
cmp
jns
xor
jge
cmp
out
gs
mov
nop
movsb
add
mov
enter
mov
int
mov
aad
jbe
aas
mov
int3
fmul
push
cld
and
adc
xor
inc
cmpsl
mov
ret
xchg
sub
add
push
scas
pusha
xchg
popl
test
push
xor
pop
lods
hlt
jp
jmp
mov
and
jg
popf
jb
movsb
mov
popf
pop
add
outsb
xor
outsl
js
sub
dec
dec
xchg
cld
mov
aam
and
ret
aad
jo
jecxz
nop
shrl
ficoms
xchg
aad
rol
lahf
idivl
ds
fnstenv
push
mov
cltd
xor
pop
mov
add
mov
pushl
fisubl
pop
enter
push
sbb
push
fcmovnb
xor
mov
pop
add
inc
xchg
jnp
cwtl
aas
jnp
cli
xlat
cli
fwait
sbb
or
je
mov
jae
push
xchg
outsb
mov
insl
dec
jnp
out
aas
nop
rorl
cwtl
leave
rcl
cmp
into
mov
cmc
xor
mov
int3
jno
ss
adc
push
jb
xchg
pop
shrb
cmc
mov
xabort
lahf
adc
jnp
lret
and
cmpsb
loopne
sub
loopne
push
lcall
adc
call
jno
scas
add
mov
push
movsb
or
push
adc
lret
rep
add
dec
movsl
dec
mov
sub
push
into
cs
int3
lds
inc
pop
mov
sub
mov
mov
mov
pop
lea
jbe
mov
addl
aaa
mov
jmp
cmp
push
out
sti
scas
ds
ss
popf
jmp
packssdw
in
sub
sub
or
sub
sti
std
jg
adc
pushf
push
xchg
mov
jmp
push
add
lds
aaa
mov
push
add
icebp
cmp
sub
sub
jbe
or
sbb
pop
cmp
jns
xchg
dec
mov
xor
jae
flds
push
and
mov
fs
mov
jg
lahf
push
scas
or
fstl
call
jbe
ds
rcr
int
xchg
xor
cmc
mov
cmp
xor
popf
dec
arpl
mov
mov
and
insb
dec
loopne
pop
std
mov
dec
ljmp
fsubp
je
sahf
jae
arpl
cli
dec
push
mov
les
ret
ljmp
jno
out
pop
xlat
xor
aad
push
sahf
xor
pop
jae
mov
add
ret
sbb
push
ss
scas
inc
or
bound
shll
mov
mov
add
sbb
xchg
dec
cmp
inc
pop
cli
movsl
fdivs
jb
xchg
cltd
xchg
aam
fistps
mov
pushf
jle
jecxz
push
adc
cli
test
and
mov
rorl
cmp
push
and
inc
sti
mov
pop
jmp
in
out
das
dec
pop
adc
jmp
cmp
mov
and
push
pop
inc
loopne
fwait
sub
loopne
xor
mov
push
cmpsl
repz
push
in
mov
mov
add
fsubl
push
cltd
mov
dec
push
je
pop
fs
cs
roll
pop
stos
sbb
imul
int3
or
inc
fsubrs
shl
dec
mov
inc
call
mov
mov
push
jmp
jge
push
das
inc
xchg
out
jle
mov
mov
jle
cmp
shrb
hlt
ds
push
cmc
pop
in
jp
jle
pop
push
sti
cltd
mov
movsl
loop
pushf
mov
xchg
in
aad
add
xor
pop
js
sub
fcomps
mov
aad
scas
dec
sbb
xchg
int
pop
mov
dec
repz
push
out
mov
xchg
mov
lods
jle
loopne
inc
add
lods
das
shll
loop
sub
sub
jne
rolb
sbb
mov
xchg
add
or
cmp
movsl
jno
inc
arpl
xor
jecxz
out
sbb
ret
push
rorl
or
repnz
jge
mov
xor
jne
fcoml
mov
popf
test
push
fcoml
lcallw
movsl
imul
sub
push
push
fsubrs
dec
shrb
mov
xchg
mov
mov
cmpl
inc
dec
sbb
inc
pop
push
push
nop
mov
sbb
mov
fists
xchg
clc
adc
data16
xchg
sar
jo
lock
int
pop
xchg
or
iret
test
int
xchg
pop
inc
cli
test
pushf
ja
push
sub
stc
or
jnp
jge
js
ret
fimuls
f2xm1
jecxz
sbb
or
dec
mov
mov
adc
je
dec
into
dec
idivb
mov
bnd
add
xchg
jp
scas
ret
add
cmp
xor
cmp
int
dec
mov
aas
dec
xchg
mov
jge
inc
cmc
cmp
inc
xchg
dec
pop
data16
rcrl
fs
int3
adc
or
mov
out
insl
mov
mov
pushf
inc
aad
loop
js
xorb
push
sahf
rorl
add
xor
pop
inc
cwtl
sub
sub
iret
jnp
jg
push
insl
push
pop
jnp
adc
xchg
addr16
sub
mov
into
mov
movsb
loopne
push
fwait
push
adc
js
testl
jp
xor
mov
inc
fisttpl
or
popf
in
push
repnz
sbb
shrb
jg
pop
out
movl
fidivs
dec
mov
push
cmp
push
fisttpl
jb
adc
and
inc
dec
mov
sub
fdivrs
push
and
in
mov
push
orl
dec
push
scas
scas
mov
fwait
in
fsubp
addl
sub
mov
sbb
mov
scas
cld
dec
adc
out
jb
fisttpl
dec
push
jge
jp
fs
imul
out
aam
es
sbb
or
sbb
in
lcall
push
scas
dec
test
mov
xchg
sbb
mov
stos
xchg
push
xchg
clc
sub
inc
js
test
inc
and
cmp
lea
mov
iret
jl
sti
enter
aam
push
and
insl
adc
and
mov
daa
sub
push
push
add
das
scas
xor
push
cmpsl
pop
xchg
mov
mov
and
es
mov
adc
movsl
cmp
xor
xlat
push
inc
fidivrl
dec
inc
mov
js
or
fsts
jne
movsb
push
fwait
sbb
lea
lret
mov
das
sub
xor
adc
mov
addr16
sub
xchg
xor
cmp
add
inc
mov
daa
xchg
dec
movsl
in
cs
xchg
push
cld
cmp
push
pop
aad
clc
sarb
push
fdivl
roll
inc
push
mov
jl
mov
data16
dec
jb
mov
add
fisubs
sahf
les
mov
dec
test
push
es
push
js
push
in
fptan
adc
fnsave
inc
sub
inc
ret
jbe
push
movsl
pop
das
jo
sub
setae
inc
cmp
mov
stc
fsubrs
sar
add
mov
outsb
shll
dec
in
sub
or
je
mov
shrb
sbb
rorb
sbb
repz
adc
jns
sbb
xchg
mov
xchg
lds
add
in
adc
repz
mov
mov
call
je
movswl
mov
lret
or
dec
and
daa
xor
push
mov
lahf
add
insb
sub
sub
push
test
xor
and
or
test
loop
fwait
clc
mov
mov
xchg
ds
and
mov
push
mov
enter
dec
iret
ljmp
push
jle
sub
int3
sbb
push
enter
inc
loope
mov
sub
out
mov
scas
in
xor
sarl
clc
or
fs
je
or
inc
jne,pn
rolb
xor
testl
call
sbb
xor
mov
xor
das
in
mov
outsl
fstpt
lds
outsl
xor
jp
out
mov
xchg
mov
sbbb
js
cmp
imul
mov
cli
push
vucomiss
pop
in
sbb
xlat
aad
sub
xchg
adc
xchg
add
gs
icebp
mov
ds
mov
inc
pop
fwait
rcrl
test
mov
pop
daa
int
xchg
pop
rcll
call
je
mov
mov
adc
jne
pop
and
sar
nop
push
jmp
add
dec
add
iret
adc
ljmp
jl
mov
mov
jnp
mov
orb
cli
cmc
sub
mov
leave
imul
mov
xchg
imul
sub
fwait
pop
sbbb
rclb
push
ja
mov
xchg
out
paddw
or
mov
xchg
bnd
push
dec
loope
nop
dec
lea
push
lret
pop
adc
mov
ret
cmpsb
faddl
je
add
imul
test
arpl
cmp
or
lret
mov
adc
sub
push
xchg
mov
inc
add
in
aas
jmp
lea
dec
xor
push
jg
out
xchg
decb
xor
ret
mov
nop
push
xor
jecxz
mov
xchg
hlt
ret
pop
sub
adc
loopne
dec
mov
popf
movsb
int
loope
jbe
cmpsb
adc
icebp
call
xchg
fnstcw
pop
cwtl
mov
and
lods
cmpsl
or
jg
fwait
ret
fists
adc
into
aam
and
xchg
lahf
mov
movb
imul
in
pop
push
sub
dec
lea
sub
iret
sub
addr16
inc
mov
mov
mov
jg
cli
in
push
push
jb
add
push
add
pop
and
mov
popf
js
iret
mov
and
mov
dec
xchg
mov
cmp
adc
jnp
jmp
das
dec
arpl
or
je
cwtl
xchg
arpl
fisubrs
pop
dec
stos
outsl
pop
insb
push
hlt
mov
repz
xor
mov
sub
inc
fcomi
push
subl
test
jg
in
jo
xchg
adc
ja
xchg
fisubl
push
insb
push
mov
cmpsb
sahf
xlat
and
push
mov
divl
sbb
jbe
movb
stc
dec
lods
jb
jl
xchg
fcompl
popf
and
xchg
add
inc
cld
call
mov
cmp
lds
sub
mov
jne
addr16
jo
sub
or
mov
mov
insl
dec
or
ss
mov
out
movsl
in
adc
push
in
roll
inc
xor
xchg
cltd
pop
ror
pop
sub
popa
lcall
and
ljmp
stos
mov
mov
mov
pusha
dec
add
xor
jmp
push
xchg
push
xor
or
pusha
inc
mov
les
dec
movsb
enter
call
ds
mov
jle
add
es
cmp
bound
lods
mov
mov
aad
call
loope
icebp
pop
pop
out
jae
aam
mov
lcall
lcall
stos
nop
adc
xorb
inc
es
mov
dec
dec
xchg
jmp
movsl
jle
and
push
stc
pop
es
adc
mov
ds
add
push
aad
arpl
mov
lock
jnp
arpl
adc
leave
sbb
mov
aaa
js
cmpsb
adc
mov
dec
mov
pop
lods
inc
mov
mov
imul
rclb
fcmovne
lahf
gs
jle
hlt
push
ret
ljmp
stc
sbb
in
or
or
push
test
in
inc
fwait
jbe
inc
sub
cltd
dec
aam
mov
in
push
stos
lock
pushf
adcb
andb
push
icebp
rcrb
sbb
inc
jl
mov
mov
lods
dec
cld
sti
pop
jno
pop
lods
mov
mov
shll
mov
or
mov
pop
dec
xchg
xchg
pop
push
mov
mov
xchg
repz
call
out
jmp
movsl
scas
jg
push
mov
subb
idivl
scas
repz
pop
ljmp
stos
or
mov
xchg
and
mov
arpl
into
ret
sub
or
pop
jecxz
mov
into
sbb
jmp
int
lret
push
adc
aam
dec
push
jno
ret
xchg
into
mov
sbb
jp
jmp
dec
rcl
cmp
clc
ret
mov
sbb
xor
fs
mov
les
test
jo
push
mov
std
mov
sub
hlt
rcrb
xchg
or
fcmovb
mov
call
mov
inc
add
or
xchg
add
ds
xchg
add
rcrl
jbe
scas
mov
pop
pop
ja
stc
and
mov
enter
push
out
cld
sbb
add
sub
sub
cwtl
loope
sub
jb
scas
xchg
inc
pop
add
shll
andb
je
jno
es
in
pop
mov
dec
mov
into
lret
adc
push
out
and
std
addr16
mov
push
bound
push
stos
cli
shrl
das
fiadds
pop
nop
jge
in
xchg
shl
mov
pop
lea
daa
stos
xor
jne
xor
out
add
gs
and
adc
lock
sub
adc
jb
int
pop
lahf
movsb
lret
movsl
pop
mov
lcall
out
sub
push
or
xchg
fisubl
cmpsb
and
cmc
dec
xlat
cmc
jmp
outsl
sbb
inc
ljmp
scas
or
hlt
jmp
adc
jbe
sbb
xchg
pop
loopne
andl
cmp
push
aas
lahf
stos
mov
xlat
inc
and
movsb
lcall
ljmp
sti
xchg
push
faddp
aad
xchg
pop
sti
adc
and
sbb
or
dec
insl
or
int
inc
int
inc
sbb
out
and
jae
ds
mull
test
jmp
stos
inc
rclb
inc
mov
cmc
ss
cmpsl
je
lret
push
mov
inc
mov
inc
jb
cs
or
add
sub
and
scas
lret
gs
arpl
je
loop
lcall
mov
xchg
mov
push
ss
jmp
aam
xor
ficoml
int3
sbb
mov
jne
cmp
xor
inc
xor
cmp
aaa
lock
lret
add
std
aas
mov
sbb
filds
in
dec
xlat
js
emms
ss
mov
insl
cmpsb
pop
push
cmp
sub
lods
pop
test
push
inc
cli
in
je
add
ljmp
inc
cmp
sarl
subb
xor
roll
push
in
fadds
xor
cmp
cmp
hlt
jecxz
mov
pop
es
adc
sbb
add
push
mov
stc
dec
sub
pop
cwtl
lods
leave
test
jo
jle
and
cmp
lods
cmpsl
cmp
into
out
or
icebp
xlat
mov
mov
pop
cmp
mov
or
push
lret
mov
push
in
adcb
xchg
roll
dec
adc
mov
cmpsl
js
hlt
xchg
pusha
add
add
test
clc
jg
fsubs
pop
cld
add
and
mov
cmp
and
xchg
cmp
in
xor
std
insb
lock
in
push
push
fs
cmc
fmul
mov
jmp
xor
cwtl
push
call
mov
jno
sbb
or
outsb
push
cmp
cmp
dec
cmpsl
addl
add
loope
xor
mov
dec
add
push
pop
addr16
xor
icebp
cltd
fimull
cld
mov
stc
cmp
scas
xlat
push
and
ret
stos
insb
sub
addb
mov
gs
popa
bound
push
je
adc
ljmp
pop
sub
push
daa
jge
out
mov
pop
jae
ret
and
in
adc
mov
jne
mov
es
test
lcall
stos
gs
data16
cmc
test
subl
xor
cmp
push
imul
xchg
lods
pop
loope
fcmovbe
push
hlt
call
insl
out
filds
pushf
les
jbe
decb
sbb
sti
fsubp
mov
cltd
jmp
pop
or
test
js
xor
shrl
das
or
jp
push
sub
and
mov
xchg
mov
cmpsl
push
pop
es
add
xor
mov
mov
sbb
mov
pushf
jl
mov
lods
cmp
adc
fdiv
imull
fnstsw
jmp
test
shll
jl
xor
outsl
iret
lret
mov
mov
mov
mov
push
adc
jle
icebp
cmc
call
lods
mov
int3
cmpsl
xchg
adc
in
sub
jge
add
push
fstpl
pop
repnz
ret
dec
test
shll
packsswb
adcl
push
mov
xor
enter
mul
sti
insb
nop
xchg
stos
mov
dec
bts
aaa
cs
push
jo
ret
sahf
mov
or
sub
add
inc
nop
cmp
orb
mov
jb
aas
shll
setg
push
push
jo
repnz
push
inc
sbb
sbb
popa
fbstp
xchg
mov
xchg
jb
jp
dec
mov
mov
adc
lea
dec
jo
pop
sub
ret
xchg
jns
test
pop
push
fstpt
jmp
pop
inc
insb
mov
mov
cmpsb
mov
ret
divl
xchg
in
fsts
mov
xlat
ret
fcmovu
test
mov
xor
inc
xchg
data16
in
data16
xlat
call
clc
outsl
rol
sbb
int
dec
and
push
pop
addr16
aad
mov
sbb
in
pusha
rcll
pop
mov
push
movsb
push
and
int
aad
sti
addr16
jo
push
mov
rol
nop
clc
cmp
aaa
jae
xchg
pop
mov
ret
pop
fs
arpl
sub
das
icebp
les
jo
xchg
aas
inc
inc
dec
mov
insl
arpl
jne
subl
cmp
in
sub
repnz
mov
cmp
jo
je
push
stos
pop
sbb
mov
test
push
inc
jae
mov
popf
leave
sbb
mov
fnstsw
pop
flds
xchg
shrb
mov
jb
pop
cmp
out
xor
and
adc
fsubr
push
dec
inc
lods
lods
std
or
sbbb
insl
jg
jb
adcb
call
xchg
lcall
mov
mov
gs
adc
push
out
pop
pop
lods
xor
arpl
push
test
add
and
jae
dec
and
imul
xor
dec
fstl
pop
ret
shr
push
insb
mov
cmc
fildl
jl
lods
call
xor
xor
cs
std
ret
std
mov
pop
jge
loop
in
ds
lcall
adc
sti
repz
adc
mov
mov
pop
movnti
scas
stos
mov
sbb
cmp
sub
or
fldenv
mov
les
insl
and
adc
mov
mov
ret
xor
fwait
or
xchg
mov
cmp
icebp
pushf
rorl
loope
dec
xchg
dec
adc
aad
test
or
ficoml
lods
push
jp
fs
xchg
jle
mov
int
xchg
into
test
cwtl
or
xor
clc
cs
repnz
cmp
xchg
daa
pop
mov
loope
sbbb
add
cmpsb
xchg
rolb
and
mov
push
adc
sahf
sub
adc
data16
jge
fnstcw
aam
jge
outsb
jb
sbb
xchg
fs
mov
shlb
jg
inc
mov
jns
roll
fs
sbb
jl
xchg
out
inc
push
repz
repnz
repnz
out
int3
xchg
jl
mov
pop
mov
fdivr
xchg
icebp
pop
mov
in
lea
lods
jnp
mov
and
xchg
push
cmp
rorl
bound
dec
stos
sub
sbb
and
cmp
and
popl
cmp
inc
xchg
ret
inc
pop
mov
add
cmp
in
ljmp
add
fistps
xchg
cmp
ret
mov
outsb
and
movsl
pushf
cmc
stc
push
iret
push
inc
mov
or
loope
or
fadd
mov
call
sub
and
dec
adc
arpl
iret
cmpsl
or
inc
mov
or
ret
ss
xor
fstpl
jmp
cltd
push
sbb
lock
jmp
jne
arpl
imul
nop
enter
movsl
xchg
mov
pop
push
cmp
xchg
jns
pop
out
in
dec
pop
out
dec
push
adc
push
jle
sub
adc
test
cwtl
arpl
xor
lret
in
movsl
push
mov
mov
and
stc
mov
scas
xor
in
lahf
insb
and
test
adc
out
push
in
inc
mov
enter
inc
incb
in
mov
mov
push
popf
adc
lcall
arpl
repz
fcoms
xchg
pop
shl
add
xchg
daa
push
xor
ds
nop
add
or
xor
mov
fcomip
clc
mov
xchg
je
orb
mov
call
and
in
fdivr
jl
mov
mov
lods
lret
push
adc
lock
mov
icebp
in
lods
inc
mov
cmpl
js
push
jae
fsubrs
roll
mov
jg
mov
inc
lcall
adc
xorl
adc
jnp
xchg
and
shl
adc
jnp
mov
das
dec
dec
test
add
pop
inc
and
mul
mov
pop
mov
push
out
jmp
xlat
mov
jp
jl
inc
lret
mov
hlt
mov
aas
ret
mov
or
test
sub
fldcw
xor
mov
call
in
mov
mov
popf
test
xor
jecxz
test
int3
mov
andb
and
pop
sub
mov
push
mov
and
lcall
xchg
adc
mov
pop
push
mov
or
pop
push
push
movl
mov
inc
test
or
mov
dec
add
inc
cmc
or
push
or
fcomip
sti
mov
add
jge
mov
jp
or
push
dec
xlat
inc
xchg
inc
sub
jne
jo
add
nop
jmp
fstl
insl
sbb
in
push
lret
xchg
mov
dec
inc
mov
sbb
or
xor
popf
push
jb
pop
mul
jno
xor
sub
add
adc
out
pop
xchg
movsb
xchg
or
push
add
out
sub
jae
mov
test
and
xchg
fidivl
inc
sbb
aam
inc
xor
jmp
cmp
jne
div
inc
jecxz
push
mov
pop
inc
mov
push
push
sub
pop
mov
push
adc
ret
add
std
hlt
push
adc
mov
iret
fcoms
cltd
shrb
rolb
in
jmp
bound
adc
loope
outsb
popa
sbb
pop
mov
inc
stos
xor
mov
or
mov
out
sbb
fwait
sarl
jb
jle
xlat
push
inc
popa
inc
roll
dec
in
lea
imul
icebp
shl
pusha
jae,pt
dec
adc
fcom
jmp
test
xchg
add
inc
sbb
adc
add
xorl
jmp
pop
mov
iret
cwtl
cmpsb
pop
lea
aad
pop
sub
cmc
adc
call
mov
les
add
fsubrs
adcl
cmp
lea
out
repz
ja
pop
test
fwait
test
mov
jge
insb
out
lret
mov
push
mov
fbld
push
shll
xchg
jb
mov
gs
push
adc
testb
cmpsl
cmpsb
sub
ficoml
adc
sub
dec
mov
jo
adc
repnz
mov
leave
or
dec
sbb
cld
inc
cwtd
push
ja
fmul
cwtl
fwait
cmpsb
aas
pop
inc
jecxz
ds
repnz
mov
popa
push
xchg
test
dec
outsl
insl
mov
jmp
test
cwtl
lret
xchg
pop
dec
insl
pop
pop
add
js
push
out
movsb
or
add
lods
lret
imul
hlt
ja
push
repz
jo
cld
sub
scas
mov
into
add
pop
push
xchg
mov
out
in
jne
fabs
lcall
add
mov
jp
out
test
mov
sbb
xchg
jl
insb
mov
jmp
jae
push
add
stos
lcall
push
jnp
pop
mov
cmp
xor
mov
cmc
cmp
xlat
sahf
sbb
clc
daa
mov
movsb
test
jo
mov
xor
es
pop
inc
sub
push
dec
les
pop
jnp
push
int
cmp
cmpsb
dec
testb
xor
testl
xchg
enter
mov
xchg
jnp
dec
out
repz
or
mov
shl
sbb
repnz
test
dec
roll
and
inc
pop
jl
adc
mov
mov
hlt
mov
mov
arpl
inc
dec
repz
push
sbb
aas
rcrl
pop
aad
or
xor
in
and
xchg
fadd
mov
inc
fldt
cmp
xchg
loop
fbld
dec
dec
jno
lods
cwtl
inc
test
and
gs
sahf
jbe
and
ret
in
cmpsb
nop
pop
pop
fs
xchg
daa
mov
lds
stos
dec
mov
or
mov
jg
lds
repz
xchg
mov
ljmp
mov
clc
leave
cmpb
pusha
pusha
insb
or
stc
push
cmp
mov
push
lret
sti
sub
sti
popf
or
and
or
and
mov
test
pop
jno
insl
push
ljmp
and
cmc
mul
mov
cmp
pop
adc
and
loopne
movsl
sbb
jmp
les
mov
hlt
dec
fists
scas
out
sbb
xchg
dec
pop
push
out
sub
and
test
cltd
lret
xchg
lahf
push
or
push
mov
ljmp
jg
sbb
mov
dec
outsl
fstpl
mov
push
ja
enter
mov
jnp
mov
adcb
std
cmc
xor
xchg
fmul
add
lds
int3
das
add
ret
adc
ret
mov
mov
js
data16
imul
add
push
dec
jne
add
aam
sub
stc
stos
push
mov
and
xor
sbb
lods
xor
cmp
fidivl
stos
hlt
cmpb
pop
mov
call
push
add
or
sub
inc
pop
aam
dec
xchg
and
xlat
std
adc
xchg
ljmp
xchg
lods
pop
inc
cmpsb
dec
mov
mov
setle
inc
mov
insb
add
aad
jle
inc
dec
jge
pop
xchg
shll
xor
scas
push
in
add
scas
sub
ljmp
or
pop
cmp
or
in
sbb
jne
mov
lea
push
icebp
jne
cmp
fistl
push
cmp
imul
fidivrl
jle
inc
mov
push
sub
push
movb
es
add
mov
mov
and
xor
adc
mov
loop
cmpsb
sub
fmuls
rcll
clc
scas
clc
lret
push
or
pop
pop
or
rolb
jecxz
xor
jmp
sti
jl
movsl
int
movsl
xchg
cmpb
pop
arpl
int
repnz
frstor
test
xlat
push
or
mov
js
in
ret
dec
sub
xor
stos
movsb
jmp
fisubl
cmc
mov
inc
mov
loopne
jb
lds
sbb
js
out
roll
leave
mov
aaa
xchg
jne
xor
out
push
jge
loopne
popf
inc
jae
push
std
dec
stos
mov
clc
subl
repnz
and
mov
xor
or
das
sub
adc
pop
pop
and
les
cmp
int
dec
push
xor
xor
lods
std
out
or
adc
lret
push
dec
cmp
mov
xchg
insb
outsb
mov
cmp
ret
out
push
mov
adc
mov
stos
or
pop
pop
mov
jbe
xchg
xchg
jae
mov
ret
das
cmp
pop
je
jb
loopne
mov
lds
call
jns
icebp
mov
scas
push
inc
cmp
shrl
cmp
or
fwait
out
push
push
aaa
mov
xor
cmpsl
aad
inc
push
mov
stc
push
push
jge
push
jg
call
mov
insb
movsl
push
int
lcall
pop
mov
cmp
add
add
icebp
ficoms
mov
mov
xchg
adc
jns
mov
pop
push
repz
adc
mov
je
imul
nop
out
or
test
aam
int3
or
cmp
icebp
scas
ss
in
scas
loope
imull
lods
lods
adc
pop
hlt
pop
sbb
int
int3
xchg
dec
sahf
rolb
jecxz
dec
sbb
int3
int3
das
mov
lret
pop
xchg
int3
mov
les
sub
test
jg
negl
or
mov
jle
out
pop
testl
lock
fwait
cmpsb
ljmp
add
fistpll
nop
mov
bnd
aaa
mov
repz
ret
fmull
xor
into
aaa
mov
xlat
pop
call
mov
cmp
inc
stc
mov
ljmp
cltd
mov
dec
cmp
jb
adc
dec
daa
sti
ror
inc
or
mov
inc
sub
xor
js
jecxz
lret
mov
test
push
ds
mov
int3
lods
mov
enter
les
and
rorl
imul
test
add
adc
pop
lock
daa
inc
xchg
add
ljmp
mov
inc
cmp
cs
outsb
enter
insl
xchg
dec
xor
test
mov
xchg
repz
pop
xchg
repnz
pusha
xchg
inc
inc
negl
movsb
loop
rorl
jge
lret
sahf
aaa
jle
cmp
cmp
dec
daa
mov
popf
jg
fmull
mulb
dec
xchg
ds
les
inc
cmp
mov
loope
aam
sub
xlat
sbb
and
push
pop
movsb
clc
loopne
dec
fwait
mov
loope
lcall
fcoms
jae
rcrb
ficoml
sbb
std
sbb
scas
inc
xchg
stos
adc
lea
in
shll
movsl
cli
push
pushf
jae
jl
addb
fildll
into
adc
fcomps
pop
and
xlat
cmp
je
or
testb
call
leave
sbb
xor
push
mov
xchg
sbb
fmull
arpl
mov
mov
out
ds
dec
mov
add
inc
adc
or
lret
sbb
out
enter
sub
mov
cmp
dec
fmuls
xlat
xchg
add
mov
repnz
mov
sbb
movsl
iret
push
cs
xchg
mov
jae
lods
dec
cmp
cltd
cmp
or
or
jle
jae
jle
cld
ljmp
add
and
fcoml
mov
and
js
mov
add
loope
rcrl
std
negl
jecxz
int3
add
mov
jmp
fs
mov
mov
movsl
nop
aas
sub
jne
data16
push
add
std
xchg
lock
sar
sub
jle
pop
outsb
les
mov
add
pop
into
bound
into
test
jno
mov
in
ljmp
adc
sti
popf
sub
movsl
movsb
add
cld
or
mov
cmp
stc
imul
fisttps
icebp
adc
mov
fnstenv
xlat
cmc
cld
outsl
pop
js
data16
dec
ret
cmp
cmpsl
popa
jp
cmp
idivb
clc
js
pop
lahf
sub
lods
xchg
mov
mov
test
jns
nop
adc
cmpsb
movl
sub
fcmovbe
mov
xor
push
jae
jne
adc
or
mov
leave
orb
push
cmpsl
pop
mov
xor
add
scas
cmp
xchg
fwait
gs
cltd
xorb
rolb
and
adc
push
clc
inc
mov
je
mov
push
sbb
mov
mov
lods
cld
lcall
gs
pop
lret
mov
push
dec
scas
in
xorl
shrb
into
int3
outsl
in
adc
jl
inc
clc
adc
dec
test
nop
push
sbb
ljmp
sub
lods
xchg
or
inc
mov
dec
cmp
adc
repnz
jle
icebp
adc
or
xchg
mov
xchg
push
scas
gs
push
cmp
cmp
insl
jno
data16
loop
add
and
shlb
jns
mov
xchg
or
imul
data16
int
add
ja
andl
mov
mov
jle
mov
push
lods
add
bound
outsb
stos
mov
shrb
sub
movsl
in
scas
mov
test
push
addr16
inc
inc
add
jmp
enter
pop
outsb
fidivrs
sbbl
sti
and
push
push
sarl
sub
call
test
stos
cmpsl
xor
dec
in
inc
ret
lods
int
aas
push
mov
adc
jo
adc
aam
xor
cmp
adc
jecxz
insl
xor
inc
mov
xor
lcall
movsl
mov
nop
test
outsb
push
jge
lea
aas
scas
pop
mov
dec
insl
testb
jnp
stc
push
stos
mov
jmp
subb
flds
mov
in
imul
leave
test
pcmpeqb
lea
mov
test
add
sub
addl
test
pop
push
bound
pop
or
mov
jo
pop
jo
dec
and
iret
loop
ret
lock
or
das
ficomps
pop
push
xchg
push
mov
mov
iret
ss
inc
lahf
movsb
mov
mov
inc
adc
sub
xchg
jl
jmp
bound
lret
mov
aas
mov
inc
pop
int3
rcrl
sub
sbb
test
sbb
pop
jns
push
in
bound
jb
inc
mov
fidivl
mulb
xor
popa
jne
xchg
sub
mov
aaa
pusha
jnp
outsb
testl
add
pop
insl
adc
fstl
inc
fiaddl
inc
out
fucom
fisubrs
push
int
out
xor
pop
dec
pushf
sbb
cli
outsb
icebp
sarl
push
mov
dec
sub
divb
mov
filds
mov
dec
les
icebp
insl
out
pop
inc
imul
cmp
shll
lahf
dec
xchg
mov
adc
cmpl
sbb
sub
les
push
or
xchg
in
or
hlt
xor
data16
sub
mov
cwtl
fucom
in
das
xchg
dec
cmp
cltd
pop
in
imul
pusha
sub
push
push
push
mov
iret
popa
leave
xchg
pop
mov
jne
pcmpeqd
xchg
ljmp
popa
inc
sbb
xlat
mov
cs
popa
popf
and
jge
mov
loope
cmp
stc
pop
sahf
rorb
leave
adc
call
nop
sbb
push
xor
mov
fistpl
jne
mov
les
call
out
xchg
dec
push
mov
in
mov
jnp
mov
js
xor
cltd
in
popf
mov
xor
xchg
cmp
and
mov
xchg
mov
mov
je
icebp
shlb
jp
push
xchg
cmp
std
push
push
sbb
dec
ss
mov
adc
je
shlb
adc
stos
mov
lock
fidivs
fsubl
add
dec
cltd
xchg
xchg
jg
je
fldl
push
xlat
xor
cmp
jl
out
lock
inc
and
jo
out
xchg
jge
mov
outsb
or
mov
popf
xor
cmc
cmp
out
out
jno
add
jl
mov
sub
sbb
xor
mov
rcr
hlt
out
xchg
cs
hlt
addb
pop
pop
shlb
push
cs
or
and
xchg
enter
sub
lods
adc
push
testl
mov
or
cwtl
sahf
push
and
adc
js
nop
add
ljmp
daa
fsubrl
lea
mov
dec
call
ret
mov
out
ss
addr16
dec
ljmp
dec
push
icebp
jns
cmpsb
testb
push
leave
loope
and
daa
xchg
jae
in
and
push
test
stos
in
sbb
sub
xlat
push
js
sti
shrl
add
xchg
es
inc
call
sbb
scas
sub
rclb
ret
xchg
xlat
stos
dec
push
pop
outsb
adc
push
xor
ja
pop
shll
aad
push
les
sti
xor
sub
inc
popa
sub
cli
fdivrs
cmpb
cmp
imul
xchg
sbb
add
pop
push
ds
mov
and
in
and
js
je
mov
mov
std
repz
jns
xor
or
or
xchg
imull
test
arpl
inc
ja
gs
push
jnp
jnp
aas
loopne
pop
idivl
out
mov
mov
adc
arpl
jbe
scas
mov
scas
aaa
cmp
mov
out
cmp
lock
mov
jno
loope
cs
in
stc
call
push
mov
fisubs
lds
pop
aas
out
mov
hlt
push
mov
and
rcll
ja
xchg
mov
add
xchg
add
dec
inc
pop
scas
adc
inc
mov
adc
loopne
jecxz
int
sub
push
arpl
icebp
shll
loopne
mov
rcll
and
lods
or
sub
inc
dec
mov
jb
loopne
cmpsl
bnd
cmp
inc
lods
in
ss
push
jmp
xor
cmpsl
cli
push
ret
in
inc
add
or
lahf
je
bound
add
push
in
jge
cmp
pushf
jno
inc
popa
xorl
cmpsl
addl
adc
mov
mov
cmp
leave
inc
xchg
mov
repz
pop
insb
test
addr16
xor
push
jne
mov
or
leave
jl
clc
cli
test
jno
or
mov
xchg
lahf
push
and
clc
push
inc
call
in
fstps
mov
jae
ret
mov
fisttpl
jne
or
dec
dec
pop
sbbb
push
les
stos
and
push
jp
loopne
outsl
negl
inc
xchg
rorl
push
sub
xor
xchg
inc
stos
mov
out
popa
out
arpl
es
jge
adc
xor
sbb
xchg
loope
ror
dec
mov
sub
jle
js
mov
faddl
js
mov
jmp
outsb
lret
pop
and
arpl
xchg
add
das
mov
cmp
das
mov
dec
xor
addr16
cmp
fdivl
and
pop
mov
push
mov
cld
and
fildll
adc
push
test
inc
pop
pop
sub
jbe
and
mov
mov
rcll
mov
fstpt
lcall
inc
adc
xor
pusha
les
xchg
sbb
testl
mov
out
sbb
inc
pop
dec
sahf
sahf
imul
sub
push
lret
inc
ljmp
push
fcompl
add
and
pop
and
pop
pop
cmp
jb
test
jb
pop
pusha
aam
mov
jae
fcoms
int
xor
lods
popa
and
sub
test
jp
add
shll
mov
lahf
mov
push
call
lods
dec
fdivr
inc
icebp
into
mov
in
lret
ficomps
pop
push
cwtl
ficomps
sub
pusha
dec
push
rcl
cmpsb
sbb
sub
aad
dec
cmp
sbb
pop
cli
es
bound
and
mov
lret
mov
cli
pusha
int
out
std
add
imul
out
int
push
andl
stc
sbb
fwait
lret
nop
add
jp
push
sbb
add
push
push
inc
stos
iret
mov
in
and
out
sub
push
adc
add
hlt
sub
mov
aad
push
and
popf
in
inc
aad
mov
aad
adc
and
cmc
add
cli
xorb
fidivrl
xchg
enter
cmp
cltd
xchg
xor
sti
les
les
fistpl
pop
test
mov
pop
andb
jp
pop
ja
xchg
ret
addr16
xor
out
sbb
and
mov
lods
add
mov
sub
mov
xchg
fs
enter
mov
xor
fisubrs
stc
xor
push
bound
pop
and
dec
stc
adc
push
dec
fcompl
paddw
dec
cwtl
push
fmuls
leave
push
shll
out
or
push
sbb
in
mov
popf
push
add
aas
adc
das
push
jge
xchg
mov
or
mov
in
outsl
xchg
fldl
jg
pusha
movb
mov
testl
outsl
mov
roll
test
pop
cli
scas
mov
pop
mov
jg
outsl
sub
mov
push
and
xchg
add
sub
fdivl
pusha
in
ljmp
add
movsb
je
mov
out
iret
xchg
lock
clc
xchg
stos
sbbl
cmc
sti
out
mov
add
aaa
lret
in
push
pop
cmp
cmp
xchg
sbb
iret
cmpsl
cs
int3
mov
hlt
jmp
and
jmp
lea
ret
fwait
cld
jge
jo
mov
ret
push
jns
insb
ljmp
push
loopne
inc
ljmp
mov
faddl
mov
pushf
mov
sub
arpl
std
cmp
daa
dec
mov
inc
into
bound
cli
inc
icebp
xchg
rcl
and
cmpsl
imul
gs
cmp
mov
pop
jbe
jl
mov
sub
aam
dec
scas
jg
inc
push
fistps
push
pop
subl
xchg
sbb
xchg
pusha
xchg
in
pop
push
xor
int
out
es
jns
sbb
aas
lcall
push
cmpsb
js
dec
cmc
cmp
fnstsw
in
xor
jg
fcoml
in
fildl
xchg
jbe
sar
enter
loop
push
xchg
adc
add
notb
ss
push
gs
fildl
hlt
push
gs
sub
pop
lock
rcr
jg
xlat
rcrb
xchg
add
nop
sbb
in
cmp
out
data16
je
xchg
mov
push
ret
sti
into
pop
insb
sub
test
out
jle
fidivrs
popa
or
sbb
iret
hlt
sbb
inc
inc
cmp
addr16
ja
adc
cmp
push
mov
mov
lret
adc
pushf
test
leave
sbb
add
pop
pusha
pop
ficoms
mov
call
movsb
mov
jmp
enter
in
mov
fcom
sti
push
pop
adc
sbb
sbb
jecxz
insb
aas
xor
shrl
xor
xorb
inc
gs
sti
cwtl
roll
push
and
movsb
jnp
sub
fsub
pop
leave
es
orb
add
ret
mov
cltd
shl
gs
jecxz
mov
inc
pushf
mov
or
sarl
cmc
enter
cmp
mov
jmp
jle
and
sbb
fistps
adc
adc
push
call
lds
xor
xor
pusha
mov
fdivl
push
push
loopne
popa
cmp
and
xchg
fwait
gs
add
ljmp
push
cmc
jg
cld
inc
incl
scas
insb
inc
push
lret
imul
fsubrp
jne
jmp
aam
dec
inc
xor
frstor
cmp
sbb
fsubp
sbb
lahf
mov
mov
adc
fmul
lcall
lahf
in
xchg
rol
inc
pop
fs
mov
jg
loop
mov
cmp
loope
jp
js
ds
aaa
pop
mov
movsl
jg
inc
lahf
mov
enter
adc
xor
adc
stc
movsl
shr
mov
inc
or
dec
mov
jae
mov
adcl
xchg
jo
jns
fbld
adc
test
cmpsl
orl
clc
xchg
mov
xor
imul
cmp
pop
icebp
ja
lcall
push
pushf
fnstcw
aaa
xor
imul
pop
je
ret
mov
or
cli
mov
repnz
aam
inc
mov
fs
ljmp
xchg
xor
and
mov
mov
jge
or
jns
sbb
add
cmp
cs
sub
popa
cmc
loop
pusha
mov
pop
adc
test
inc
js
push
add
sub
shlb
xor
mov
pushf
jnp
fidivs
sbb
scas
cmpsb
icebp
adc
jmp
lea
mov
or
jo
xchg
nop
push
in
ss
data16
stos
cmp
mov
push
shrb
add
jp
push
pop
dec
adc
leave
shlb
push
ret
inc
gs
shll
jnp
or
subb
jmp
push
push
gs
xchg
jns
sbb
and
lock
std
lock
shrb
insb
mov
and
sub
mov
and
lods
test
cmc
xchg
xor
loopne
sbb
mov
leave
sub
lret
jmp
fldl
outsl
aaa
icebp
jl
cmp
sti
loop
sub
mov
mov
dec
aad
push
fistpl
shrb
jle
fsubr
shll
repz
mov
lahf
icebp
ljmp
xor
xor
push
stos
scas
jmp
lea
push
dec
js
or
aas
cli
sti
fwait
icebp
js
push
scas
jns
mov
dec
push
sbb
mov
jp
mov
push
outsl
mov
jle
pushf
ret
fisubl
clc
in
popf
rclb
icebp
and
outsl
mov
dec
lahf
fmull
icebp
and
lea
mov
sbb
insb
and
in
imulb
push
adc
iret
sub
mov
cmpsb
out
jmp
ret
pop
mov
andl
mov
cmp
pop
jb
cmp
scas
mov
pushw
cmp
out
or
ficoml
sti
inc
std
cli
sbbl
stos
pushf
dec
xchg
cmp
adc
jne
ds
push
fldt
in
inc
call
movsl
mov
pushf
out
ja
sbb
add
or
sbb
add
cmp
and
jge
sbb
mov
push
sbb
inc
inc
sbb
shl
push
pop
pop
xchg
mov
xchg
mov
ss
aad
mov
adc
mov
pop
or
mov
cmp
mov
push
into
int3
xchg
fmul
leave
mull
sbb
sub
add
out
out
ljmp
sub
jo
fsubp
xlat
xor
aad
and
inc
out
push
and
aas
pop
cbtw
jns
call
out
inc
xor
or
lahf
sti
fidivl
sti
aas
test
adcb
les
or
sub
stos
push
out
out
inc
dec
lds
mov
cmpsb
lahf
jbe
lock
loope
inc
lcall
pop
lahf
imul
stos
sbb
mov
sar
lcall
mull
inc
or
clc
arpl
stos
or
mov
mov
test
xchg
cmpsl
dec
cli
inc
notb
out
dec
out
sbb
jl
sub
nop
clc
and
aas
mov
cld
mov
icebp
leave
andl
jge
pop
push
insl
out
add
mov
dec
imul
stc
mov
push
lods
mov
adc
div
fimuls
mov
push
inc
mov
icebp
js
xor
bound
mov
or
dec
enter
jge
mov
test
mov
add
loope
adc
popf
pop
xchg
push
ret
xadd
imul
mov
dec
cmp
lret
jg
loope
push
xor
inc
mov
test
cwtl
popa
outsl
testl
loopne
fnsave
dec
mov
mov
std
inc
lahf
xchg
in
xor
mov
jbe
pushf
adc
dec
cmp
filds
sub
inc
xchg
sub
imul
aaa
jo
std
fcmove
inc
and
xchg
push
jle
inc
and
pop
mov
repnz
or
movsl
btr
xor
mov
push
out
adc
test
fldt
ss
sbb
mov
add
xor
int
cli
iret
insb
fld
popf
xor
aaa
insb
sbb
push
test
cmpsl
jo
dec
sub
and
jle
mov
and
mov
cs
movsl
rcrb
pop
cld
mov
add
addb
push
sub
sbb
and
pop
xor
dec
jne
scas
jecxz
or
stos
fmull
adc
je
ret
pop
out
icebp
fsub
inc
and
adc
xchg
out
leave
jbe
pop
xchg
cmp
mov
jl
adc
pop
into
xor
clc
and
fldcw
icebp
mov
cmpsb
push
mov
ss
dec
mov
lock
leave
ret
inc
add
ljmp
lds
and
stos
lods
pop
jle
pop
aaa
lahf
pop
dec
iret
mov
movsl
ja
jg
movb
sbb
in
xchg
xor
mov
adc
fs
lret
or
fdivrs
dec
ljmp
add
xchg
lds
push
sbb
pop
lcall
pop
pop
movsb
add
or
std
jecxz
leave
sub
jmp
mov
dec
jb
mov
roll
inc
sub
mov
add
cs
int
les
sub
jg
cmovl
pop
jno
mov
jb
cmp
fistpll
loop
fiaddl
cmp
test
lea
imul
lock
ljmp
push
add
dec
sarb
sub
xor
es
xor
mov
fisttpl
jbe
pop
mov
push
ret
jle
orl
xchg
sbb
cs
ljmp
mov
inc
cmp
pop
test
push
in
pop
test
filds
pop
sub
lcall
mov
aad
dec
mov
mov
setle
mov
cmpsb
clc
loopne
cmpsb
fwait
aaa
iret
xchg
ljmp
jecxz
test
lahf
fldcw
repz
cmp
lret
insb
jne
sbb
pop
and
dec
sbb
cmpsl
mov
mov
dec
xchg
cli
jnp
mov
add
inc
cmpsb
je
jle
outsl
and
sub
jbe
pop
xchg
inc
xchg
or
out
ret
xlat
cltd
adc
daa
pop
movsl
pop
mov
xor
or
lods
and
sbb
icebp
mov
cmp
cmp
xor
nop
dec
cmpsb
ret
sub
daa
in
add
and
inc
mov
cmp
jb
dec
push
jo
shlb
ss
fs
fisttpll
push
or
inc
loope
bound
mov
adc
inc
push
or
dec
jp
push
fistl
jno
cmp
xchg
fidivrl
incb
sub
sbb
mov
imul
jmp
roll
pop
dec
ds
dec
fisubs
jg
addr16
aam
xchg
xor
add
lock
push
fwait
adc
stos
mov
aam
dec
cli
mov
pop
lea
inc
inc
inc
movsb
mov
xchg
inc
scas
cli
scas
mov
jg
inc
jg
or
addr16
xchg
iret
idiv
mov
mov
jl
dec
mov
adc
fstpt
push
lret
rolb
test
stos
orb
jmp
push
testl
mov
mov
lods
sbb
iret
lret
sahf
mov
cmp
sub
mov
push
pop
xor
mov
sar
mov
dec
lods
imul
dec
jmp
pop
cmp
jmp
idivl
jae
and
cmpsl
mov
dec
jmp
adc
in
cmpb
or
cltd
pop
aad
aam
arpl
sbb
arpl
and
sub
jge
mov
or
push
popf
stos
stos
movsb
push
jl
adc
pushf
shlb
arpl
pop
sbb
into
cmp
repz
pop
pop
out
inc
push
and
cmp
xchg
push
int3
enter
xchg
lahf
pop
test
and
mov
add
outsb
cmp
pop
stos
cmp
pop
jmp
mov
xchg
xchg
dec
int
or
fidivrl
pop
xchg
inc
sbb
jae
lret
addr16
mov
loop
push
adc
call
jmp
jae
mov
pusha
enter
fbld
movsl
clc
nop
mov
adc
inc
test
mov
mov
pop
xchg
pop
pop
push
rcrb
lock
sub
sarl
mov
jne
cmpsl
aad
bound
iret
sub
cmpsl
push
iret
jns
int3
xchg
pop
lcall
xchg
subl
cmp
or
pop
sub
bound
xchg
ljmp
mov
aaa
pslld
dec
dec
jecxz
mov
inc
imul
fbstp
mov
mov
cmp
jge
js
mov
jg
inc
push
fwait
pop
push
and
enter
xor
xor
pop
test
daa
out
adc
das
in
or
cmpsl
sbb
fildll
das
push
imul
subb
push
fstpt
push
lahf
pop
out
cs
cld
fs
mov
rclb
sub
xlat
add
jle
jmp
jbe
lock
ja
lea
cmp
cmpsl
in
call
adc
cmp
arpl
aas
xchg
sahf
jb
push
mov
cltd
test
push
into
lea
inc
cmp
add
xchg
mov
cmpxchg
lock
movsb
cltd
dec
stos
lret
cs
popf
ss
repnz
and
jne
mov
or
sub
xchg
stos
and
dec
std
sub
cmp
dec
add
xchg
into
or
test
into
mov
dec
mov
ss
xchg
and
mov
out
testl
and
sbb
loopne
cmp
pop
inc
outsl
addr16
adc
stc
mov
jecxz
push
pop
jl
sbb
inc
jae
call
lret
inc
jp
xor
jge
loopne
das
aas
loopne
lcall
idivl
jg
sti
outsl
loope
gs
cmp
adc
js
cmp
dec
jp
je
xor
int
icebp
sahf
cmp
sbb
test
nop
or
lock
fnsave
mov
xor
stos
cmp
mov
stos
fsts
adc
mov
lret
xchg
icebp
adc
popf
jp
lock
cmpb
int
andl
test
pop
dec
xorl
loope
dec
xlat
ds
call
aas
cmp
movsb
es
xchg
in
jne
xchg
add
test
pop
sub
movsl
in
inc
filds
and
xor
scas
mov
adc
add
xchg
fs
punpcklbw
mov
sub
mov
dec
nop
frstor
add
sbb
and
fcoml
ljmp
or
insb
imul
adc
ljmp
ret
enter
lea
inc
mov
pop
adc
xchg
insl
bnd
fmul
mov
sahf
shlb
mov
notl
sbb
add
and
push
lret
mov
in
hlt
inc
orl
loope
xchg
inc
ss
xchg
sbb
sub
pop
fs
jmp
cmp
movsb
jne
imul
mov
and
ja
dec
cltd
pop
jg
cltd
xchg
xor
scas
fs
mov
xor
arpl
nop
mov
jmp
insl
sbb
sarl
pop
xchg
aam
jmp
sgdtl
lods
adc
mov
repnz
hlt
dec
cmpsl
push
imul
sub
fs
cmp
mov
insl
negb
cmp
pop
dec
mov
call
sbb
aaa
out
lods
movsb
and
fistl
lods
xor
inc
arpl
int
sbb
jnp
mov
jo
jae
hlt
ja
mov
aas
aaa
adc
sbb
jp
ljmp
or
sub
mov
and
xchg
jmp
movsb
dec
arpl
pop
daa
in
sti
lret
cmpl
int3
and
push
out
pop
mov
push
shrl
cmc
or
push
mov
jbe
adc
mov
sub
or
sub
rolb
fisubrl
dec
in
pusha
pop
jp
or
and
or
mov
mov
outsb
dec
insb
repz
pop
adc
push
cmp
pushf
scas
add
jecxz
js
sbb
hlt
add
jb
xchg
and
mov
or
insl
mov
mov
je
shll
xor
jne
out
jne
xchg
arpl
sarl
in
dec
sbb
pop
mov
dec
xor
push
mov
je
in
out
sub
jle
popf
imul
inc
lods
repnz
cmp
fisubs
push
pop
movsl
fdivr
das
mov
arpl
pop
pusha
adc
ret
movsl
pushf
or
ss
sub
xchg
xor
stos
stos
jle
stos
movsl
movsb
shlb
jmp
jmp
push
shll
fistpll
fs
pushw
fsts
popf
mov
cmpsl
jb
push
jo
lahf
ja
xchg
in
dec
addr16
push
aam
data16
js
stos
inc
fsubr
jg
stos
in
inc
pop
jecxz
repnz
popf
aas
outsl
xor
lret
push
inc
push
cmpl
or
sbb
cmpsb
es
out
jmp
lcall
test
xor
aam
or
xchg
mov
rclb
clc
or
sub
add
cmp
mov
in
sbb
fwait
xchg
icebp
movsb
cmp
push
sbb
movsb
cmp
dec
aas
xchg
and
call
lret
ss
loopne
pusha
add
gs
push
insb
popa
xor
pop
ret
movsl
pop
mov
enter
cltd
loop
es
hlt
jnp
and
sbb
sub
es
imul
subb
xchg
enter
mov
mov
test
incl
cld
add
in
shll
sub
adc
ljmp
mov
xchg
and
fldcw
aam
pusha
adc
jle
les
scas
sub
bound
mov
fnstsw
and
movsb
test
mov
sub
mov
js
sub
mov
pop
pop
pop
dec
sti
insb
xor
inc
cmpsl
sbb
push
add
xor
popa
mov
pushf
sub
push
mov
pop
push
and
fcoms
xchg
mov
out
insl
cli
cmp
mov
xlat
cmpsb
shrl
mov
push
mov
sbbl
sbb
arpl
outsb
jmp
andl
notl
jle
jnp
pusha
ss
or
pop
mov
mov
popf
pop
jb
mov
mov
scas
mov
scas
push
jnp
int
pop
insb
mov
mov
push
jns
mov
xchg
pop
lret
frstor
dec
cmp
jne
jp
lret
fnsave
xchg
rcl
and
dec
push
jae
sub
out
xorl
mov
aaa
dec
dec
mov
and
mov
cmp
xchg
xor
xchg
test
popa
xchg
loopne
push
fcoms
std
and
mov
stos
sub
iret
inc
imul
and
jge
cmp
xchg
cwtl
mov
or
dec
test
push
mov
mov
nop
flds
push
jnp
inc
pop
enter
pop
mov
ret
and
ljmp
cmp
sysexit
pushf
stc
sub
es
orb
pushf
std
divb
inc
subl
cmp
sbb
adc
xchg
mov
inc
or
inc
mov
push
xchg
sbb
lahf
lcall
scas
inc
mov
mov
insl
outsl
lret
ss
fnsave
adc
inc
insl
xor
popa
mov
pop
or
xchg
cmpsb
stos
xor
mov
fildll
sarb
adc
jbe
adc
jne
pop
xchg
fists
or
shlb
out
pop
es
gs
fwait
inc
xor
add
gs
arpl
shrl
sbb
push
cmpsl
cwtl
xlat
push
push
and
rorl
mov
adc
mov
pop
add
mov
mov
stc
xchg
mov
stos
mov
and
jmp
mov
pop
cmpsl
jnp
xchg
cmp
lods
mov
push
pusha
inc
jae
mov
mov
sub
or
cmp
outsl
dec
pushl
jge
icebp
push
fstps
lret
jmp
mov
fsubl
cmpl
add
mov
popa
xchg
push
sbb
mov
pop
dec
jo
lahf
sete
inc
cmc
push
jle
roll
pop
loopne
dec
pop
pop
push
sbb
sub
jns
outsb
icebp
jge
xchg
jb
cmpsl
mov
cld
add
add
lret
cmp
xlat
data16
cmp
inc
loope
mov
shll
daa
sbb
xchg
mov
jl
scas
mov
clc
sbb
inc
cmp
jecxz
fsubl
iret
push
mov
clc
push
stos
jle
lcall
dec
fistps
inc
inc
test
stc
jle
in
test
jo
int
push
lods
fidivs
xor
fwait
loop
out
bswap
mov
push
popa
mov
ljmp
jo
inc
repnz
jmp
outsb
or
push
arpl
and
mov
mov
push
es
icebp
push
gs
jne
adc
out
leave
xor
add
in
je
mov
pop
sbb
cmpsl
pop
aaa
jecxz
inc
scas
dec
cs
flds
inc
sub
cmp
adc
clc
add
cwtl
add
sub
mov
ret
cs
push
jo
clc
push
mov
inc
jnp
push
mov
ret
and
imul
lahf
pop
and
xor
sub
dec
xor
dec
addb
jg
fiaddl
dec
flds
and
punpckhdq
push
pop
arpl
arpl
out
mov
stc
jo
pop
test
int3
adc
add
shll
sub
sub
daa
pop
push
js
mov
ss
test
ja
fidivrl
stc
leave
xor
cmp
cmp
das
add
and
push
dec
sar
add
and
xor
cmp
nop
xchg
jo
pushf
or
xlat
xor
push
jl
mov
push
mov
int
sub
loope
rclb
insb
repz
or
mov
xor
and
mov
out
push
call
cmpsl
lretw
add
dec
xorb
fsubs
mov
jmp
mov
pop
fwait
xchg
leave
hlt
sti
add
and
test
or
or
cmp
dec
mov
inc
movsl
dec
fs
je
mov
cmp
pop
inc
mov
mov
popa
add
jg
pop
shl
add
mov
je
shll
jmp
lret
push
xchg
jg
outsl
cs
mov
orb
popa
iret
sbb
es
dec
jae
mov
ficoml
cltd
or
loopne
aas
loope
dec
mov
test
jnp
je
shrb
add
filds
push
mov
jle
loop
iret
fwait
stc
cmp
jge
lret
movsb
addr16
fdivl
cmpsl
cli
mov
mov
shlb
jns
lods
loop
adc
sub
sub
cs
sbbl
and
mov
inc
cmpsb
dec
sub
dec
outsl
and
mov
fildl
and
cmpsb
cmp
lock
adc
nop
pop
ret
push
lds
xor
cmp
ror
lcall
aas
mov
decl
sbbb
sbb
cmp
adc
outsb
fdivl
nop
insb
jmp
xchg
pop
adc
test
int3
dec
jge
gs
addb
jnp
xchg
leave
roll
mov
ljmp
loop
je
mov
mov
cmp
ja
icebp
lret
jbe
push
xlat
sbb
nop
cmp
insl
cld
into
flds
xchg
mov
xor
repz
inc
jmp
lahf
cmp
ja
mov
jbe
aaa
jo
out
fwait
adc
adc
arpl
test
arpl
cli
aas
int3
adc
and
lds
loop
adc
call
add
pop
mov
adc
leave
es
push
out
or
out
jns
xchg
out
sbb
clc
adc
add
frstor
add
cmp
cwtl
cmp
jmp
aad
push
inc
xor
lods
dec
mov
jg
scas
testl
fisttpl
push
mov
fisubl
sbb
or
xor
mov
shll
xchg
lods
mov
mov
ja
mov
in
out
scas
enter
adc
idivl
jge
dec
imulb
push
iret
dec
jg
mov
dec
push
daa
popf
mov
push
sbb
xor
movsb
dec
jg
xchg
outsl
xchg
pushf
call
cmp
lahf
add
insl
lahf
inc
mov
shll
lods
scas
jnp
aam
mov
xacquire
mov
outsl
dec
subb
outsl
add
in
add
add
aad
xor
xchg
xchg
push
lods
cmp
fucomi
mov
out
dec
stos
push
dec
mov
xor
cmp
jb
and
xchg
ret
and
mov
sub
push
das
dec
imul
sub
lea
sarb
fistps
popf
outsl
xchg
mov
insb
pushf
and
sub
loop
mov
mov
dec
adc
push
notl
icebp
jge
push
and
inc
mov
pop
xchg
popa
std
and
pop
pop
or
ja
cmc
xor
sbb
xor
xchg
call
push
je,pn
ljmp
and
jmp
loop
mov
xor
cwtl
adc
fdivrl
iret
cs
add
push
dec
inc
insb
and
int
bnd
inc
cmp
lods
out
test
fs
cmp
pop
sub
pop
adc
mov
dec
pop
cld
loope
sbb
dec
ficoml
add
sub
cmp
xchg
mov
cmpsb
or
sti
mov
outsl
pop
xchg
cmpsb
movsb
mov
or
adc
xor
scas
mov
and
sub
sbb
push
pusha
addr16
dec
inc
mov
divl
dec
sahf
add
cwtl
int3
jo
and
add
out
push
and
sahf
cmp
roll
xchg
hlt
mov
enter
jg
dec
int3
inc
push
jne
rcll
outsb
xor
cld
xchg
jb
mulb
mov
push
outsb
jo
out
and
int3
pushf
sarb
pushf
sbb
fs
xor
mov
or
xchg
fdiv
or
add
mov
push
in
jmp
jg
rcl
mov
inc
push
or
fstl
repnz
and
ss
cli
sub
in
outsl
inc
lds
lods
push
xor
push
outsl
fisubrs
in
sub
sbb
or
ret
and
aas
stos
push
jg
lds
inc
push
mov
orl
mov
jbe
xlat
roll
pop
cmp
lods
sarl
push
ja
shlb
clc
je
adc
dec
dec
pop
daa
or
sub
pop
icebp
lods
mov
push
repz
sub
addl
sarb
iret
fildll
xlat
pop
xor
cmovnp
addb
ds
jg
pop
mov
ljmp
aaa
xor
pop
mov
and
and
sub
fucomip
aad
scas
mov
adcb
cld
test
leave
popa
and
inc
inc
inc
add
push
jge
les
and
sar
adc
cli
jle
arpl
and
lahf
mov
jno
push
pop
mov
daa
ja
lock
inc
xor
pop
call
dec
or
inc
cltd
pop
sub
gs
mov
jno
dec
xchg
hlt
inc
xor
or
scas
xchg
mov
icebp
sub
xor
andl
xlat
mov
xor
bndstx
mov
out
outsl
lock
stos
xchg
sub
push
push
xchg
aam
cmpsb
xor
dec
ja
idivl
jecxz
adc
jno
mov
mov
sub
jns
push
mov
loop
and
xchg
mov
jns,pt
mov
dec
ljmp
jg
fsubs
ret
jo
fists
jg
rclb
mov
js
mov
lock
gs
mov
sub
pop
clc
ret
mov
inc
xchg
js
xor
and
xor
loopne
test
arpl
jl
callw
not
stos
dec
orb
lds
add
nop
inc
sbb
push
mov
loop
shrb
jns
and
stos
jae
shrb
dec
push
add
js
das
inc
and
clc
add
clc
mov
and
sub
pop
js
push
insb
sbb
xchg
lds
in
mov
in
cmc
incl
stos
or
add
jg
dec
inc
mov
pop
stos
inc
popa
outsl
sub
push
mov
test
rolb
pop
inc
cmp
scas
xchg
xchg
lods
fldt
out
fisubs
sbbl
or
jecxz
or
dec
xchg
inc
outsb
out
xor
cwtl
andl
stos
lock
ss
xchg
jmp
jl
mov
jge
stos
sbb
ljmp
pop
bsf
repnz
loope
fiaddl
das
mov
inc
and
sbb
inc
fidivl
ret
sbb
pop
test
add
add
das
cmc
xchg
add
cmc
fisubs
pop
mov
lret
test
dec
cmp
xor
xchg
or
push
mov
dec
dec
jne
addr16
cmp
lcall
call
roll
pop
nop
jae
mov
ffreep
int3
and
xor
mov
aaa
and
cmp
mov
adc
data16
outsb
ds
dec
jg
scas
xlat
push
fwait
imul
in
jp
push
arpl
cvtps2pd
mov
inc
out
outsb
mov
dec
mov
pop
push
xchg
data16
rorb
mov
and
ss
test
inc
adc
icebp
sbb
test
mov
xor
push
pop
lods
lods
and
and
repz
movsl
enter
adc
dec
nop
sbb
into
xchg
cmp
js
add
mov
ds
testb
push
es
xchg
jg
adc
add
xor
repnz
dec
scas
adc
xchg
cld
dec
mov
sub
bound
fidivrs
push
inc
add
cmpsl
xlat
adc
and
lret
mov
inc
loopne
adc
clc
cli
or
aam
mov
push
test
test
ja
jl
cli
dec
in
daa
lea
and
ljmp
sub
xor
push
dec
ss
imul
in
mov
bnd
scas
test
xchg
and
in
pop
xchg
jnp
lods
test
cld
dec
and
mov
nop
enter
sbb
andb
stc
out
pushl
in
xor
outsl
pop
fldt
imul
cmpl
sti
sub
shr
adc
or
clc
adc
sbb
arpl
jg
clc
add
ljmp
mov
in
daa
lea
sbb
fdivr
loopne
insl
xor
ret
sarl
push
rcrb
loope
mov
push
cmpl
xchg
sbb
je
and
push
cmp
int3
push
jle
cmp
jo
sbb
inc
lcall
jmp
push
sbb
mov
std
inc
and
mov
test
daa
jmp
stos
mov
ljmp
add
mov
mov
sub
mov
jecxz
jl
inc
call
pop
iret
add
dec
push
xor
cs
repz
mov
inc
jmp
pusha
mov
dec
les
sub
repnz
jb
test
inc
push
or
pop
pop
imull
dec
or
xchg
cltd
dec
aaa
das
inc
es
lret
ds
pop
jo
pop
out
test
and
mov
add
xor
sub
test
inc
sbb
mov
sbb
aad
sbbb
cmp
addb
fisubs
ret
inc
adc
insl
popa
dec
push
pop
je
loop
stc
jbe
or
out
test
xlat
cmp
fcoms
xor
stos
sbb
inc
loopne
data16
push
mov
std
jle
sahf
or
mov
push
bound
sbb
add
push
xlat
mov
subb
xor
jecxz
xchg
xchg
xchg
movb
iret
inc
cmc
cmpsl
mov
leave
rorb
pop
jg
jae
aad
push
inc
push
js
or
in
cmp
imul
out
add
andb
mov
imul
mov
insb
loop
es
ret
pop
stos
arpl
xchg
gs
mov
xchg
dec
jmp
shl
iret
adc
shl
out
inc
pusha
cmc
in
inc
arpl
xor
xchg
js
mov
inc
mov
add
lods
cmp
lret
jp
bound
fsubrs
push
jns
imul
into
xchg
add
daa
test
arpl
lret
xchg
fiaddl
and
xor
push
fs
jbe
adc
outsl
add
mov
stos
or
fiadds
xchg
rclb
jmp
pop
test
mov
cld
add
popa
ficompl
cmp
xchg
repz
xchg
jecxz
in
mov
loope
pop
jbe
xchg
inc
rclb
adc
pop
loopnew
mov
cmp
cmp
lret
xchg
push
mov
fldt
rorb
addb
inc
leave
sub
shll
xchg
mov
cmp
mov
lret
iret
out
xor
int
jmp
ljmp
sbb
pop
sbbb
mov
cmp
in
cmp
mov
out
mov
repz
aaa
mov
aad
cmp
leave
pop
jns
aad
mov
clc
jge
add
les
ret
daa
add
mov
sub
mov
aaa
xchg
lods
and
xor
test
push
push
fistpll
cwtl
call
jb
out
mov
sub
pop
pop
pop
jne
fs
pop
test
adc
xchg
pop
mov
or
dec
sbbb
test
ljmp
jecxz
in
ret
std
add
jle
shr
cmp
iret
cs
pop
jno
les
and
xor
xchg
jle
sub
scas
add
jle
add
mov
xor
leave
pop
dec
rorb
idivl
cmp
call
add
mov
aas
in
and
leave
pop
lods
dec
out
lods
pushf
daa
cmp
addr16
aaa
push
sahf
jecxz
mov
pop
ljmp
popf
or
jns
adc
or
mov
jg
pop
jl
mov
xchg
or
hlt
jb
into
cmp
jo
sbb
inc
sub
xchg
mov
xor
xor
mov
leave
push
mov
sbb
bound
decl
inc
jae
cmc
addr16
add
mov
aaa
out
sbb
and
mov
mov
sbb
pop
data16
sub
pop
and
dec
or
call
and
fisttpl
mov
cmpsl
in
inc
jecxz
inc
fbld
mov
add
pop
dec
cwtl
loope
and
aad
or
inc
lds
sahf
pop
mov
dec
iret
aas
sub
adc
andb
sub
mov
jb
cmpsb
ss
pusha
lret
imul
pusha
push
scas
or
decl
push
mov
mov
insb
mov
sub
jo
jae
or
mov
outsb
cmc
in
pop
add
adcb
imul
jb
fisubs
push
aad
cmp
cld
push
into
in
dec
or
scas
lods
je
lcall
std
addb
xchg
in
or
fs
sahf
loope
call
jecxz
stc
xchg
insb
sub
sub
or
pop
jp
mov
out
cmp
fisubl
mov
stos
mov
ror
movl
mov
cmp
fadds
loope
mov
inc
or
mov
push
xlat
stos
bnd
mov
out
bound
xlat
jmp
ret
loop
xor
popf
xchg
mov
cmpsl
xchg
es
in
mov
loopne
cmpsl
test
fnstsw
push
jae
add
into
fsubr
sarb
push
xor
jb
xlat
fstl
nop
insl
add
xchg
es
pop
mov
loopne
mov
sub
shlb
ja
push
cmp
pop
nop
push
adc
mov
add
or
or
loopne
out
xchg
mov
das
push
mov
add
js
xor
in
add
pop
cmp
or
xchg
jg
movsb
push
fldl
pop
cmc
icebp
xchg
xor
jne
pop
faddl
push
and
into
icebp
lahf
leave
int
or
or
inc
aad
js
enter
xchg
push
daa
arpl
data16
divl
cli
adc
jno
mov
jecxz
cltd
jae
and
data16
pop
test
xchg
fstpl
push
sub
add
imul
push
addr16
fwait
xor
xchg
ljmp
pop
popa
sbb
test
mov
xchg
inc
cmp
jns
jnp
arpl
cmp
sub
pusha
mov
mov
mov
xor
sub
sub
xor
clc
out
inc
mov
or
dec
adc
ret
dec
outsb
mov
pop
push
outsb
arpl
mov
dec
in
outsb
test
jns
inc
xchg
mov
pop
and
cmp
scas
push
jp
pop
adc
pop
sub
mov
aas
incl
ss
pop
mov
dec
and
pop
scas
jae
mov
xlat
pop
jo
cmc
subb
ret
cmpsl
mov
mov
shlb
inc
add
mov
lods
movsl
adc
fnstcw
shrl
jg
repz
mov
rcrb
mov
mov
das
popf
jae
and
and
nop
in
lods
push
sti
mov
and
mov
aas
inc
aas
xor
roll
push
std
rclb
stos
or
ss
andb
xor
filds
push
mov
ds
push
adc
call
xor
cmp
xchg
lock
push
jb
push
pop
out
and
add
inc
push
mov
das
sbb
loop
fisubrl
divb
shll
addr16
fwait
cmp
orb
mov
sub
aas
and
mov
mov
ret
pop
jmp
test
or
xchg
cld
scas
dec
jne
test
mov
sub
fisttpl
dec
push
pushf
mov
fnstenv
fmull
cmp
testb
repnz
leave
cld
cli
or
xchg
fsts
xor
repz
adc
sub
mov
jae
jmp
xor
jecxz
sbb
ljmp
add
xorl
in
xor
adc
out
stos
scas
inc
mov
or
xor
jle
popf
sbb
js
inc
cltd
mov
test
ret
out
pop
mov
inc
cs
lret
add
xchg
loop
push
negb
clc
mov
aas
fsubr
popf
jp
cltd
popa
xor
add
cmpsb
push
or
lea
push
jmp
jg
adc
jle
inc
cltd
lret
in
jl
adc
mov
push
dec
mov
jge
es
mov
xor
inc
lret
mov
mov
jp
add
mov
cmp
cltd
fisttpl
inc
xor
neg
add
sti
ret
push
shlb
lds
shlb
pop
adc
cmp
and
pop
dec
repnz
or
add
mov
pop
js
mov
sub
sub
cmp
lea
dec
pop
fdivrs
push
lds
movsb
movsb
hlt
push
fcoml
cmc
test
mov
lds
stos
ficoms
mov
push
aaa
jb
lret
sti
push
das
leave
push
add
or
sub
push
xor
test
sarl
adc
push
push
pop
push
lahf
enter
sub
enter
movsl
lret
xor
lret
test
test
ficompl
pop
ja
inc
cmp
xchg
out
dec
popf
out
push
pop
jecxz
jne
call
test
stc
mov
sbb
push
stos
dec
sbb
mov
int
mov
imul
dec
or
repnz
adc
ret
mov
pop
fwait
les
pusha
push
jmp
scas
add
iret
fsubs
mov
jge
insl
jbe
pop
dec
cwtl
aam
mov
dec
jnp
mov
fisubs
pop
shlb
icebp
cmp
bound
sar
jmp
arpl
inc
jae
stos
inc
cmp
lahf
cmpb
mov
push
adc
pusha
repnz
mov
cmp
mov
out
cmp
ret
mov
cmc
adc
push
push
bound
jnp
cwtl
ds
add
addr16
pop
sbb
jnp
loopne
inc
pop
popf
sarb
adc
and
jecxz
test
fldt
cwtl
xchg
mov
cmp
fcmovnu
inc
imul
pop
mov
aam
mov
dec
daa
rol
jae
mov
ret
and
add
xor
fs
or
clc
orl
fs
subl
imul
push
call
mov
sub
mov
int3
pop
les
rcrb
sbb
xchg
imul
sbb
mov
cli
jns
push
out
xchg
daa
cmpsb
cmpsb
jno
push
mov
lahf
add
fcmovne
adc
cmp
fnsave
xchg
shll
xchg
inc
mov
pop
subl
and
xchg
push
mov
repnz
insb
pusha
inc
jmp
out
cmp
adc
sub
std
pusha
lcall
into
mov
jg
and
cmp
mov
add
faddl
and
xchg
pusha
scas
pop
inc
inc
inc
je
mov
in
xchg
lret
mov
lock
fidivrs
insl
push
shl
push
jle
sub
stos
inc
adc
jecxz
or
push
or
ja
mov
sub
mov
mov
jg
inc
add
sub
and
in
icebp
cs
adc
jae
push
mov
lea
mov
sub
sub
pop
in
ret
jmp
and
lahf
icebp
pop
mov
stos
cmc
popf
cmp
add
lret
push
stc
xchg
xor
nop
jno
xchg
add
mov
pop
stos
lods
dec
add
ret
pop
pop
jge
jle
mov
popf
sahf
jne
xchg
sub
sbb
pop
mov
xchg
out
les
add
dec
insb
in
jge
aad
clc
cmpsb
mov
mov
or
cmc
mov
pop
popf
test
fwait
or
sub
stc
push
jno
cli
mov
mov
mov
push
xchg
imul
push
rol
adc
int
sbb
scas
push
mov
sub
ds
iret
adc
in
jmp
mov
in
inc
jecxz
mov
xor
sbb
sbb
cmp
jb
add
jbe
push
aad
mov
stc
jns
mov
jle
mov
mov
xchg
cli
loopne
push
mov
jmp
jp
and
jno
in
xchg
in
push
popf
imul
jmp
push
fstl
fnstsw
andb
mov
add
mov
dec
cmc
pop
subb
push
jb
adc
rorl
int3
aad
dec
mov
jge
int
push
mov
dec
xor
aaa
pushf
or
stos
mov
stos
push
add
lock
xchg
sti
pop
xor
dec
movsb
and
jl
mov
or
xchg
int3
or
negl
mov
push
ret
sub
cmpsw
divb
je
pop
jge
jl
jmp
sub
bound
inc
nop
add
rcrl
sahf
xchg
movsl
pop
cld
or
cmp
or
cmp
lock
cs
cmp
push
rorb
jns
mov
adc
mov
sub
or
and
inc
rclb
mov
and
mov
sbb
rolb
ficomps
and
stos
js
mov
push
push
fmul
leave
jnp
mov
jb
out
pop
mov
loope
push
sbb
and
fcoms
or
or
hlt
pop
mov
rorb
cmp
cmpl
inc
fwait
lods
stc
lcall
dec
mov
dec
mov
lock
cmp
mov
jecxz
mov
leave
mov
jo
hlt
scas
fnstcw
mov
or
push
test
and
xor
dec
int3
fidivrl
das
lock
pop
pop
mov
cli
fs
mov
pop
dec
lcall
leave
mov
lods
sti
testl
into
mov
mov
push
xchg
out
and
and
cmp
or
xor
scas
fcmovne
scas
aas
fstp
js
lret
test
dec
push
push
bound
add
jle
mov
cwtl
inc
mov
outsb
fwait
inc
lods
xor
clc
cltd
xor
sub
arpl
jb
out
sarb
mov
mov
jp
pop
mov
out
pop
div
mov
add
mov
inc
cmpsl
or
xchg
adc
jae
call
sbb
push
add
and
and
mov
xor
fwait
mov
lods
mov
and
inc
adc
cs
push
gs
leave
cmc
insb
nop
mov
repnz
sbb
sub
and
hlt
xchg
mov
mov
cld
mov
pop
arpl
fsubrp
push
inc
insl
mov
add
ja
aam
mov
out
adc
add
mov
and
mov
xchg
popf
mov
cmp
testb
dec
lret
loope
cmp
jno
movl
mov
scas
pop
xchg
xor
aad
aam
adc
push
adc
xchg
jp
into
out
push
jecxz
xor
mov
xor
cmpsb
pushf
mov
insb
es
mov
pop
das
mov
lods
cs
aas
mov
js
cltd
sub
sub
shl
add
daa
mov
push
add
in
cmp
push
outsl
adc
repz
dec
fisubrl
cmpsl
cmc
aas
std
add
imul
in
mov
cmp
sbb
cmp
inc
fldcw
cmpsb
lahf
inc
inc
fdivs
and
rorb
lcall
stos
xchg
pop
mov
in
inc
xor
and
shll
data16
and
adc
add
loop
mov
mov
lret
adc
iret
xchg
mov
mov
das
sar
jle
mull
dec
push
sbb
pop
dec
outsb
sbb
mov
sti
in
out
sahf
jne
xor
sub
dec
pop
cld
iret
cld
lret
popa
lea
adc
and
fldenv
stc
in
cs
bound
mov
xchg
int3
inc
sbb
sbb
negb
dec
imul
mov
push
popf
jmp
and
aas
movsb
xchg
aad
ja
mov
repnz
jl
mov
mov
aam
jl
pop
pusha
xchg
call
xor
ss
ss
xchg
mov
fwait
call
int3
lahf
mov
mov
dec
jge
add
fstl
fwait
sub
xor
sbb
shrl
xchg
andl
cltd
dec
dec
aam
insb
pop
aam
xor
push
mov
adc
inc
lock
pusha
and
mov
repnz
mov
andl
aas
xchg
in
push
adc
std
sti
and
lods
repz
std
data16
cltd
movsb
filds
jmp
rorl
pop
jo
scas
and
sub
insl
add
cmp
popa
mov
out
ret
loop
pop
xchg
sbb
shlb
mov
jb
lea
cmp
pop
mov
cmp
xor
sahf
adc
xchg
xlat
mov
popf
dec
add
scas
pop
mov
mov
fidivrs
pop
mull
popf
sbb
in
add
push
cmp
xchg
bswap
push
jo
jmp
jb
sbb
mov
ljmp
xchg
andl
loope
or
aam
clc
xchg
cmp
in
fmuls
mov
repz
and
cmp
fwait
stos
sbb
jl
stos
loope
push
test
je
lret
std
mov
test
cmpsl
sbb
lock
dec
fldcw
push
pop
rcrl
jne
add
ffreep
xchg
cmpsb
sub
adc
hlt
adcl
int3
mov
cmp
push
in
call
scas
and
jecxz
add
cmp
ret
jne
test
jae
inc
mov
pop
inc
mov
mov
addr16
movsb
mov
jo
mov
mov
sub
jne
mov
mov
imul
mov
shlb
movsb
outsb
jnp
dec
sbb
rolb
inc
inc
leave
or
sbb
insb
jl
cmc
sarb
push
bound
andb
aam
pop
cmc
mov
add
lds
dec
adc
cmp
or
mov
shl
adc
inc
push
enter
mov
adc
icebp
jl
pushf
lods
jmp
or
sub
mov
mov
xor
in
jbe
xchg
lahf
mov
loope
repnz
sahf
movsb
cmp
lcall
and
leave
stos
xchg
cmp
jp
jo
pop
pop
mov
cmp
ret
pop
mov
shll
outsl
sti
sub
push
mov
mov
icebp
sbb
test
jmp
out
cld
cwtl
stos
xlat
in
dec
sbb
loopne
jae
dec
and
loope
sbb
cmp
dec
and
and
in
jne
shrb
sub
mov
insl
call
subb
push
add
xor
lock
cmp
mov
adc
lds
stc
push
es
mov
clc
push
imul
sbb
loop
sbb
mov
das
popf
mov
idivb
sub
imulb
adc
mov
cmp
in
xchg
xchg
jle
imul
rorb
pop
lods
mov
ss
cmpsl
insl
xchg
xchg
fdivrs
ja
mov
mov
movsb
pop
mov
inc
lods
jle
lea
repnz
popa
cmp
sub
sbb
mov
mov
in
cs
dec
pop
jl
and
pushf
adc
jp
inc
xor
ficomps
adc
mov
mov
ja
pop
outsb
push
lcall
push
int3
pop
xchg
or
pop
or
popf
jb
xchg
cwtl
out
add
cwtl
adc
cld
pop
imul
jnp
xchg
std
leave
xchg
es
lods
xchg
inc
jp
and
sbb
dec
cwtl
xor
add
shrb
cmp
fimull
push
mov
mov
push
shlb
cld
into
xor
cmp
cmp
push
mov
pop
cmp
pusha
or
mov
orb
insb
stos
loope
imul
sub
or
push
stc
sub
dec
mov
and
xchg
mov
xorb
push
js
inc
les
mov
push
test
les
out
idivb
mov
cmp
lods
cmpsb
push
inc
sahf
mov
and
int
adc
push
jbe
or
jne
push
mov
push
sbb
jae
pop
sub
xchg
in
aad
sub
dec
lock
jnp
xor
das
lahf
xchg
inc
movsl
jae
rol
sti
loope
pop
out
pop
roll
push
clc
shrl
call
lock
cmp
mov
cmpsb
pop
adc
mov
stos
sub
cli
mov
sub
adc
jle
fsub
add
push
push
lcall
add
dec
jb
outsb
sub
mov
dec
fidivs
inc
or
or
clc
subb
jmp
or
mov
call
enter
add
and
xchg
mov
mov
or
xor
inc
pop
out
pop
push
out
pop
ficompl
das
iretw
cmp
mov
scas
inc
mov
dec
fnclex
repz
jnp
pop
aam
xor
xchg
lahf
in
je
dec
mov
jnp
mov
and
pop
or
repnz
or
cmc
jp
jg
enter
fwait
outsb
lds
xchg
icebp
dec
scas
js
xchg
roll
imul
and
ret
test
ret
sahf
adc
test
adc
incl
popa
dec
dec
mov
mov
lret
jecxz
lret
icebp
out
jp
fcmovne
cs
aam
sbb
and
add
stos
mov
fbld
mov
push
aad
lods
xor
daa
frstor
mov
pop
mov
xor
mov
insb
imul
jle
fcmovne
call
aam
sub
jnp
outsl
sub
ljmp
mov
dec
adc
inc
mov
pop
jmp
mov
jmp
dec
pop
add
push
cmp
subl
and
stos
xchg
in
jae
loopne
out
adc
outsl
push
cmp
ljmp
pop
es
mov
cmp
mov
adc
mov
sbb
jns
and
ret
pushf
jbe
repnz
jb
xor
loopne
repz
fwait
jp
add
loope
cvtps2pd
xorb
xlat
pop
clc
jmp
xchg
mov
stc
testb
aas
fidivl
dec
pop
push
jge
inc
rcrb
fistpll
lods
jno
cmpsl
or
scas
scas
inc
or
scas
std
fbld
in
out
ljmp
mov
call
lds
and
subb
xlat
or
movd
cmc
push
xchg
lds
fs
jge
sub
cmpxchg
jnp
aaa
jb
mov
mov
in
jnp
fcoml
aad
in
sbb
aad
or
and
xor
mov
dec
mov
and
pop
mov
push
call
pop
fsubrs
push
or
lret
pop
les
xchg
ret
and
cmpsl
stos
repz
popa
shl
fdivl
fdivrp
test
xchg
xchg
rorl
jp
mov
cmp
outsb
mov
aaa
mov
sahf
into
jno
xchg
or
nop
sbb
pusha
aam
pop
mov
fildll
fcomp
cmc
dec
cld
push
push
lahf
scas
push
xchg
push
repz
add
int
mov
push
jmp
iret
mov
sti
pop
pop
aas
and
fnstcw
sbb
cmc
dec
leave
mov
fsubrl
add
inc
jle
lahf
adc
test
es
pushf
out
outsl
loop
mov
dec
lods
addr16
ss
adc
adc
je
cmpsl
inc
mov
js
xor
js
lock
or
fimull
fwait
cwtl
or
loope
cmpsb
testl
dec
jl
out
int3
ret
cli
pop
je
mov
sbb
jle
scas
imul
fmull
mov
jg
mov
cmp
fstpt
enter
sub
jno
bound
sahf
dec
push
test
and
mov
das
inc
or
popa
mov
mov
je
fsts
fstps
mov
shll
and
jno
or
push
mov
fs
scas
sub
movsb
inc
outsl
mov
mov
movl
adc
and
jne
sarl
test
sub
mov
mov
and
push
sub
adc
loop
dec
adc
gs
cli
aad
inc
push
push
arpl
out
testl
mov
push
in
sub
push
mov
rcl
ss
aam
dec
inc
push
icebp
ret
imul
mov
cmp
jns
cmp
push
je
jno
insl
pop
adc
pop
arpl
mov
mov
xor
rorl
test
out
ja
int3
xchg
cs
dec
fsts
fldcw
rep
movsl
das
and
cmc
dec
mov
je
cmp
cwtl
outsl
jne
leave
or
cmp
mov
rorb
push
outsl
xchg
jmp
pop
je
push
outsl
jp
mov
test
bound
fbstp
xchg
stc
push
ficoms
cmp
mov
push
pushf
jae
les
mov
aam
test
add
fisttpll
push
int
ljmp
xchg
enter
stc
sbb
fadds
in
adc
mov
mov
cmc
dec
loopne
stc
out
ficompl
push
mov
or
mov
hlt
xchg
mov
cmp
repnz
xlat
movsl
pop
stos
faddp
mov
mov
in
dec
ret
es
lahf
pop
sub
incb
xchg
cmp
mov
call
or
or
out
sub
sub
cli
outsb
out
pusha
out
imul
adc
movsb
jno
popf
xchg
loope
push
mov
cmp
jae
sti
mov
or
or
cmc
jo
mov
aas
lea
fists
xor
dec
jae
pushf
js
ret
into
pusha
loopne
scas
push
adc
xchg
xor
or
xchg
mov
lods
int
xchg
dec
mov
pop
or
cmp
loope
mov
xor
cli
sbb
sub
call
fcompl
xor
and
xchg
push
cmpsl
cmp
xchg
out
das
pop
popa
mov
mov
in
pop
in
nop
cmp
loope
cmp
push
sbb
pusha
pop
lret
mov
in
in
call
imul
pusha
movntps
imul
xchg
dec
add
add
mov
icebp
push
pop
hlt
ss
jnp
ret
mov
mov
add
cld
fdivrs
inc
mov
pusha
stos
stc
mov
cmp
ret
sbb
inc
popa
xlat
jo
sbb
jns
cmpsl
jge
shl
int3
mov
xor
in
jae
rcrl
xor
mov
push
dec
xor
inc
mov
xchg
fs
aam
mov
pop
push
mov
jae
lret
ret
repnz
popa
aam
adc
out
push
xchg
xor
iret
push
arpl
pushf
dec
xchg
sub
call
fdivs
jmp
adc
js
call
hlt
or
inc
pop
in
ljmp
roll
push
loope
cmp
hlt
and
lcall
mov
jge
call
rol
movsb
stos
mov
or
scas
repnz
lods
int
insb
cmp
add
mov
test
or
mov
rorb
test
jge
insl
mov
pop
cmp
mov
push
and
and
ds
stos
dec
outsl
sarb
fsubs
icebp
xchg
ss
pop
aas
nop
push
jg
cs
xchg
pop
add
inc
ljmp
icebp
sbb
mov
sub
jne
iret
enter
push
push
lcall
fiadds
rolb
jbe
int3
mov
lret
inc
jle
inc
int
mov
stos
sub
fxch
and
cltd
rep
ret
dec
mov
mov
pop
xchg
jmp
cmp
gs
dec
shrl
clc
inc
andl
cmp
outsb
and
daa
xchg
mov
div
insl
lahf
dec
sub
outsw
mov
cmc
insl
xchg
adc
pop
leave
push
add
sbb
addr16
mov
mov
or
cmp
ja
loopne
push
cli
adc
js
movsl
hlt
push
cmpb
in
inc
scas
xlat
imul
shrb
adc
cltd
rolb
mov
jno
jns
xchg
push
mov
mov
ret
outsb
inc
lods
outsl
or
xchg
jp
xchg
outsl
mov
xchg
aas
hlt
cmpsb
xor
dec
push
shlb
sbb
and
mov
mov
aas
sub
lds
sbb
arpl
fidivl
sbb
test
or
iret
test
inc
jmp
sub
mov
jp
popf
rcll
fldcw
lret
shlb
nop
and
pop
jnp
out
int
cmp
aad
sbb
adc
repz
pop
adcb
xor
and
sbb
cmpb
and
mov
sbb
clc
or
pop
movsl
notb
testl
pop
jecxz
cmc
test
sti
call
sub
subl
mov
lret
rorb
cld
jmp
xor
mov
cmpsl
sahf
outsl
insl
fcmovnb
hlt
mov
mov
adc
inc
incl
jg
fildll
aam
mov
sarl
inc
fsubrl
int3
fldenv
or
packssdw
dec
xchg
imul
test
or
je
test
cmc
test
repz
adc
sub
jp
call
mov
pop
outsb
fst
ret
jb
fwait
daa
xchg
ja
inc
add
jo
fs
jmp
jne
aam
jg
dec
cs
cmp
pop
sbb
movb
xor
xor
icebp
mov
or
xchg
inc
lea
adc
push
lea
cmc
jmp
and
and
and
dec
scas
pop
mov
cwtl
push
xor
arpl
and
stos
mov
cmp
stos
sbb
and
sub
xchg
adc
test
fadds
fcom
sti
inc
sbb
push
test
loope
or
xor
sub
aaa
out
push
mov
dec
jle
in
jnp
mov
mov
mov
dec
jae
fdivl
push
lret
addb
xor
mov
fwait
std
mov
test
cmp
jg
popa
les
orb
aaa
cmpl
pop
sti
push
xor
aaa
sub
jp
ror
lret
pop
pop
xchg
adc
jmp
cli
or
mov
jnp
test
rcrb
and
call
inc
std
popa
ja
out
loopne
and
aas
mov
pop
push
xor
pop
pop
pushf
ret
outsl
or
jmp
lods
xor
jmp
dec
addl
mov
shrl
adc
loope
dec
hlt
push
in
xor
xor
lret
add
inc
mov
inc
dec
imul
sub
and
mov
sub
xor
xchg
icebp
das
jmp
test
and
mov
adc
fcmovu
ds
imul
dec
jnp
or
iret
cmpsl
or
mov
ja
or
sti
mov
pushf
mov
fistl
insb
xchg
lods
sub
sbb
nop
sub
adc
add
out
push
push
inc
stos
xor
push
mov
test
sbb
lds
push
notl
cmp
pop
test
lahf
sbb
inc
jne
or
sbb
inc
stos
and
mov
and
pushf
xchg
fmuls
xchg
les
std
pop
lock
mov
jb
test
repnz
cld
xchg
pop
ret
mov
addl
arpl
sahf
xchg
jne
or
xor
mov
push
xchg
adc
bound
dec
mov
cmpsb
cli
fs
lods
push
adc
lods
lods
fcmovbe
dec
rcrl
repnz
decl
sahf
mov
inc
and
mov
add
imul
insb
push
cs
mov
dec
jne
aam
jae,pt
jae
dec
stos
or
or
xor
xorl
sbb
cld
inc
inc
and
inc
das
push
xchg
jb
bound
xchg
add
rorl
jmp
pop
loope
mulb
sbb
inc
mov
cmp
insl
test
adc
incl
cmp
add
cmpsl
mov
dec
aaa
push
cmp
ja
and
xlat
rclb
bound
jge
shrl
daa
cmp
test
jg
lea
pop
jg
data16
imul
cltd
pop
cltd
leave
inc
repnz
push
adc
cld
pop
jp
lret
or
mov
call
push
loope
mov
fwait
jb
lret
sub
cmpsl
int3
inc
adc
cmp
outsb
mov
mov
dec
andb
mov
ret
daa
pusha
in
xchg
or
scas
fisubl
daa
inc
push
jo
repz
fcmovb
mov
in
cmp
clc
movsl
mov
ds
sub
cli
push
lea
jo
out
inc
add
mov
push
rcll
leave
pop
or
xchg
add
in
add
lea
or
lret
dec
fs
enter
cmp
add
push
jle
mov
mov
mov
xchg
cmp
xor
test
test
in
xchg
ret
mov
mov
inc
imul
pop
inc
adc
and
sti
push
inc
test
ret
cs
jo
push
push
xchg
inc
xor
shll
daa
in
adc
cmpsb
shrb
cmc
mov
push
adcl
and
jbe
or
nop
clc
inc
mov
ret
fdivrl
nop
es
dec
stos
gs
push
cmp
or
cs
daa
adc
out
sub
jle
inc
clc
push
scas
xchg
pop
test
dec
daa
pop
pop
jno
and
lock
mov
push
pop
ret
aas
cmp
inc
repz
fsubs
movsl
xor
in
les
push
mov
mov
adcl
dec
adc
into
jl
mov
scas
and
cmp
orl
xor
cmpsb
aas
xor
pop
sub
xchg
insl
fnstsw
add
fdivrs
sbb
clc
and
push
xchg
pop
mov
cmp
out
fwait
pop
push
std
adc
jl
lret
test
adc
addr16
dec
and
or
xchg
push
push
dec
iret
cmp
mov
mov
inc
xor
cvtdq2ps
ja
pop
mov
xchg
shrb
mov
push
ret
mov
cmp
jp
cmpsl
jge
jne
cltd
cltd
lret
cmc
lods
shrw
push
inc
xchg
xchg
repz
xchg
test
cmp
mov
fisttpll
decl
pop
fcmovnb
or
das
dec
je
adc
hlt
lods
nop
test
push
hlt
pop
mov
lret
repz
or
pop
popf
sbb
insl
adc
mov
sahf
mov
xchg
pop
sub
lock
mov
sub
scas
sub
loope
sahf
dec
push
std
loope
movsb
push
push
pusha
arpl
push
push
arpl
test
sarl
jp
std
outsl
add
iret
push
and
mov
xchg
push
es
dec
lea
pop
inc
mov
or
xor
xchg
rolb
xor
jp
mov
inc
cld
mov
pop
les
push
stos
lret
fldl
jmp
ds
out
xchg
dec
aad
cmpsb
cwtl
xor
into
lahf
xchg
inc
or
mov
jp
dec
add
or
out
xor
pop
mov
cmpsb
sub
add
mov
jg
inc
ret
push
mov
xor
loop
sub
pop
loopew
cmp
in
sbb
inc
fldl
fwait
cwtl
clc
cld
or
xchg
add
cltd
add
pop
out
insl
xchg
cwtl
and
in
xor
adc
es
in
aad
xchg
or
iret
inc
inc
jnp
pusha
inc
arpl
js
and
cmp
jmp
xchg
lret
stos
jbe
es
pop
test
sub
inc
inc
subl
add
mov
fidivs
sbb
mov
sub
mov
aam
add
lock
sbb
push
jecxz
xor
adc
cmp
dec
dec
aas
mov
hlt
cmp
aaa
iret
fsubrl
mov
cmp
jl
pop
cwtl
popa
adc
ret
inc
pop
xor
jecxz
push
mov
dec
scas
mov
sub
stc
addr16
out
inc
cs
xchg
jmp
sahf
jmp
shll
inc
push
shr
loope
dec
into
jnp
add
push
inc
addr16
inc
int
fsubs
movsl
repz
out
push
test
test
adc
arpl
mov
nop
push
clc
xor
mov
jmp
cltd
cmpb
mov
xchg
jmp
pop
lods
icebp
inc
mov
lahf
xchg
pop
xchg
sahf
mov
mov
insb
scas
mov
add
mov
dec
int
push
in
cwtl
andl
fstpt
mov
xchg
cmpb
jno
sub
and
dec
fsts
cmpsb
sbb
cmp
jbe
jmp
mov
xor
cmp
in
cmp
xcrypt-ofb
cmpsl
push
cltd
mov
or
jae
sti
xchg
jge
xor
jge
mov
addr16
dec
outsb
mov
cmc
shlb
seto
shll
adc
push
add
enter
mov
orl
popl
cmpsb
cmovbe
cmp
int3
xchg
std
xchg
xchg
scas
fstl
lahf
test
inc
xchg
out
xor
dec
loopne
sbb
xchg
ret
mov
pop
adc
mov
inc
jno
pusha
data16
and
xlat
xlat
inc
push
cmpsl
sbb
scas
xchg
lret
data16
xchg
rcll
sbb
mov
inc
out
arpl
mov
mov
xchg
mov
repnz
xchg
scas
or
adc
and
jmp
shl
push
and
lcall
fstpt
xor
sub
sbbl
xor
lret
nop
sub
data16
pop
in
push
enter
add
dec
js
push
sbb
push
scas
popa
dec
sub
mov
pop
aaa
sarl
int3
fistps
lea
cmp
sub
or
icebp
cwtl
sbb
jge
int3
push
insl
push
adcl
pop
mov
lods
pushf
mov
stos
jne
mov
pop
popf
cli
adc
ficoms
push
pop
mov
jo
sahf
xchg
push
lret
jbe
std
sbb
jo
xchg
dec
jbe
loope
out
or
pop
faddl
sar
or
xlat
sub
and
jge
hlt
clc
inc
mov
pop
sub
adc
je
jb
insl
sahf
dec
mov
adc
sub
dec
push
lcall
jns
addr16
sahf
mov
jno
cmpsb
add
mov
jg
bound
dec
mov
jbe
xor
add
into
mov
cwtl
cmpsb
cmp
ss
cld
pop
add
push
sahf
mov
or
or
add
mov
cwtl
jns
or
rcll
mov
pop
ja
in
in
sahf
mov
jge
loop
mov
clc
push
mov
in
out
and
out
mov
scas
lods
cmp
sub
popf
cmpsl
pop
call
mov
push
mov
les
push
ljmp
aad
push
adc
sbb
shrl
test
das
scas
xor
jnp
lock
jae
jnp
inc
mov
sbb
cmp
mov
fwait
ljmp
sbb
sbb
adc
dec
mov
mov
divl
cmp
sub
stos
in
push
lahf
mov
fucomip
jge
cmp
add
test
std
mov
aaa
cwtl
cltd
sti
xor
repz
sar
push
fsubs
movsb
rol
xchg
mov
mov
shll
xchg
ljmp
rcrb
shrl
lock
movsl
nop
ret
scas
jl
cmpsl
in
pop
ja
imul
sub
xchg
cld
fstl
jg
push
jae
mov
add
sbb
xchg
lds
mov
pop
imul
xor
lods
or
push
pop
repnz
push
dec
inc
imul
cmp
xchg
and
jl
or
and
cmp
pop
sti
cmc
xor
int
test
movsl
fiaddl
dec
out
jle
sarl
push
xor
mov
mov
notb
out
call
pop
lea
adc
iret
stos
ljmp
cmp
jp
stc
pop
pop
es
sub
jg
mov
lea
mov
jno
rcl
inc
imul
cmpsb
pop
arpl
mov
idivl
int3
fucomi
cmp
lret
or
mov
imul
sub
iret
iret
outsl
cltd
xor
testl
adc
fcoms
cmp
aas
lods
sub
inc
and
sbb
stos
or
fsubrl
mov
xchg
push
sahf
mov
arpl
or
arpl
push
mov
jl,pn
sbb
sbb
popa
and
xor
fsubl
clc
inc
fs
adc
pop
cmp
mov
rcl
mov
leave
xor
out
test
sbb
push
cli
mov
fsts
imull
loop
cmpsb
repnz
cmp
mov
into
add
cmc
adc
insl
repnz
inc
imul
into
call
push
mov
das
jg
test
inc
cmpsl
cmpsl
sub
mov
inc
pop
mov
inc
ret
inc
add
jp
xchg
pop
in
inc
outsl
mov
xchg
mov
fisubl
int
push
cmp
in
or
inc
addl
test
ret
lods
call
jp
sbb
jns
mov
push
xchg
lret
sahf
div
push
mov
fldl2t
inc
shl
ret
rcll
fsubl
mov
in
je
sbb
push
push
bound
stos
and
jno
scas
mov
adc
cmc
jecxz
jge
cmpsb
mov
ljmp
int
out
mov
xor
push
cmpsl
sbb
dec
mov
add
test
test
aam
or
or
adc
clc
push
test
aad
pop
mov
pusha
jb
sti
test
cmp
lods
xchg
and
aad
std
push
inc
xor
sahf
outsb
icebp
cmc
das
jne
in
xlat
fildl
push
in
push
ss
test
mov
jg
idivl
sub
clc
sbb
pop
sub
mov
cmp
push
cwtl
dec
test
js
mov
out
mov
mov
mov
fmul
adc
push
repz
call
arpl
sub
push
and
mov
dec
stos
and
scas
sti
and
mov
xor
stc
mov
push
adcl
int
push
xor
cmp
stc
cmpsb
or
push
nop
or
sub
leave
call
out
cmpsl
mov
push
jecxz
jae
cmp
push
mov
xchg
xor
out
repnz
jle
add
sub
dec
xchg
add
stos
movsb
repz
mov
out
sbb
fwait
dec
mov
jo
dec
push
mov
jne
daa
shlb
xchg
lcall
mov
mov
xchg
pushf
loope
int3
mov
in
out
mov
xchg
push
pop
shrl
mov
xor
icebp
mov
mov
fs
and
std
mov
or
sbb
add
gs
jp
repnz
inc
leave
cmpsb
shr
pop
lea
in
insb
mov
les
push
hlt
test
repz
je
rclb
leave
test
repnz
sbb
pop
cmp
cmp
adc
jo
or
sub
and
daa
ficompl
fcoml
lahf
fidivrl
fcoml
push
cmp
jns
sbb
xor
mov
insb
mov
adc
movsb
jg
add
loopne
cmp
push
mov
or
loop
push
fwait
test
mov
mov
int3
xchg
mov
movsb
repnz
sbb
or
std
int3
call
sub
pop
pop
aas
add
into
push
adc
add
inc
pop
cmpsl
aaa
pop
xchg
fwait
imul
das
pop
jecxz
cmpb
mov
jmp
mov
cmpsb
lret
pop
pop
movsl
cmpsl
sti
aad
imulb
jb
ja
sub
add
add
mov
les
cmp
shrb
xchg
sbb
push
out
pop
sub
mov
pop
fbld
push
mov
sub
jnp
call
shlb
push
mov
adc
mov
cmp
jne
bswap
jmp
or
loopne
adc
and
push
inc
push
pop
pop
lahf
ja
iret
scas
out
shl
rol
pop
mov
lods
push
mov
std
lcall
or
insl
jns
xor
mov
inc
iret
clc
stos
cmp
sbb
mov
sahf
or
pop
push
or
push
mov
sahf
inc
dec
xor
xchg
jbe
out
shll
add
imul
jb
jne
ret
inc
xchg
imul
jb
ret
fsub
fstpl
dec
add
jge
adc
daa
das
mov
out
out
xor
into
lds
inc
movsl
cs
fbstp
xchg
xchg
clc
jmp
cmp
pop
lea
daa
icebp
ret
adc
mov
outsb
pop
and
sbb
es
imul
aaa
mov
pop
out
outsl
enter
xchg
call
inc
and
push
jl
pop
aaa
jns
mov
and
mov
adc
push
jmp
out
cwtl
cwtl
push
nop
je
loopne,pn
scas
mov
pusha
mov
sub
subl
jns
mov
xchg
aaa
faddl
vmovdqa
in
hlt
rcrb
mov
dec
push
xchg
data16
rcrb
mov
sub
inc
mov
fstpt
mov
lret
push
loopne
bound
cwtl
sbbl
dec
cmp
loope
xor
fstps
xlat
or
lret
int
mov
cmpsb
lods
stos
cwtl
nop
xchg
sarb
mov
aam
imul
pushf
cmp
xor
test
notb
pop
out
in
mov
adc
fs
ret
scas
test
ds
sub
cld
insl
add
add
mov
and
add
mov
popf
subl
push
sub
daa
je
xorb
push
xor
add
adc
inc
rorb
fwait
pop
sbbl
leave
mov
psllw
xor
fs
pushl
push
or
fbld
shr
cwtl
push
xor
lahf
pushl
xchg
xchg
lret
mov
ds
jae
std
xchg
and
gs
push
insb
outsb
in
test
fs
cltd
sbb
or
aad
pop
imulb
inc
mov
push
into
pop
rol
ja
pusha
sub
subb
mov
insl
mov
sbb
icebp
scas
sbb
shrl
mov
shll
cmpsl
test
cmp
fiaddl
add
sahf
aas
add
add
cmp
aad
test
mov
cltd
fidivl
call
es
cmp
jg
xchg
pop
mov
imul
in
mov
pop
std
clc
arpl
sahf
inc
cmp
out
sub
adc
ljmp
dec
call
jge
sbb
push
lea
or
pusha
pop
cmp
inc
dec
sub
in
cmc
cmp
rcll
and
ljmp
push
cmp
mov
movsb
stos
pop
cmp
or
mov
push
sub
flds
std
lock
aad
or
loopne
fwait
clc
dec
add
sbb
das
dec
xchg
ficompl
xchg
fisubrs
nop
shlb
fdivrl
jns
and
push
sti
insb
xor
xchg
sbb
pop
push
sbb
leave
mov
loop
push
je
test
sete
push
sub
jge
repnz
push
es
mov
dec
push
jmp
or
dec
mov
in
je
out
lahf
nop
xchg
outsl
pop
mov
loope
push
pop
je
inc
mov
adc
rclb
cmc
xchg
daa
sarl
loopne
cmp
push
push
mov
or
jne
cli
xlat
scas
add
in
out
stos
xchg
sbb
psrld
stos
lret
push
dec
fisubrs
or
lock
lea
xor
aaa
fiadds
popf
add
sub
pushf
popa
push
mov
andb
movsl
cmp
xchg
sti
cld
adc
call
inc
into
shlb
mov
dec
lret
into
pop
fnstenv
popa
xchg
insb
or
adc
ss
mov
dec
icebp
shrb
pusha
ficompl
bound
loope
lock
pop
xchg
fsubl
xchg
divb
cli
in
push
xlat
aas
data16
sahf
out
xchg
cmp
push
nop
xchg
lds
push
hlt
and
xchg
inc
ss
outsb
push
or
cmpsb
dec
sbb
testb
pop
or
pop
push
sub
jnp
bound
out
push
dec
je
and
gs
mov
mov
jbe
cmp
fnstenv
push
xchg
repz
gs
cmp
adc
aam
mov
fsubrs
movsl
dec
or
out
xor
int
test
inc
mov
mov
adc
lret
jnp
and
fisubrs
jl
enter
loope
jnp
insb
xor
pushf
push
xchg
cli
jge
stos
sbb
mov
lods
insl
cs
gs
into
lods
cmp
mov
out
ret
inc
cltd
or
ja
mov
in
cmp
ret
sbb
dec
outsl
iret
cmp
outsl
adc
jecxz
xor
mov
inc
mov
addr16
push
or
mov
or
cld
lods
bound
and
popf
pop
scas
xor
inc
pop
lret
lcall
mov
pushf
stos
jecxz
punpckhwd
jle
sahf
cltd
sbb
sbbb
aam
or
add
scas
or
mov
xchg
movsb
sbb
fwait
aam
sub
out
test
push
cmp
rcrb
adc
aam
inc
sbb
icebp
mov
dec
popf
in
movsl
decl
cwtl
mov
andl
lret
push
xchg
mov
fwait
lret
xchg
test
dec
test
shll
inc
out
mov
mov
aad
mov
fwait
lahf
dec
pop
div
mov
data16
xor
ds
cmp
fistpl
jecxz
int
and
sbb
add
movsb
rcl
shl
push
out
mov
fldcw
rclb
repz
xchg
and
mov
pop
mov
dec
pop
cmp
icebp
psllq
aad
cmpsl
adc
mov
push
outsb
ja
clc
bound
rorb
cmovge
stos
sti
sbb
jns
pop
or
sub
push
add
out
in
lea
add
and
loope
mov
fstps
mov
cmpsl
jl
jp
sbb
lahf
and
in
mov
mov
cs
mov
daa
rcrl
inc
stc
adc
mov
inc
sub
out
pop
mov
repz
aaa
mov
lcall
sub
and
sahf
mov
cld
add
adcl
and
lcall
pop
xor
aad
js
dec
mov
leave
imul
orb
cld
fcoms
mov
stc
sbb
cmc
sbb
stos
lahf
mov
mov
cmp
sub
icebp
xchg
push
mov
rorb
aas
mov
dec
stc
subb
mov
sbbl
adc
sbb
pushf
sarb
aaa
fucomi
fadds
fiaddl
subl
cmp
fstl
xlat
jge
or
jle
hlt
adc
sub
ds
mov
mov
lcall
std
outsb
sbb
out
std
insb
mov
repnz
popa
xchg
xor
lods
cld
mov
xchg
lods
xor
cmpsb
ret
inc
lret
cwtl
jne
jae
ja
inc
in
inc
add
jbe
andl
xor
aad
es
ss
sbb
xchg
push
jo
insl
mov
fadd
mov
lret
xchg
bndldx
jno
or
aam
xchg
lret
push
jecxz
jo
gs
ja
lret
push
lret
lock
insl
xor
xor
xchg
scas
addr16
sbb
push
mov
divb
sahf
or
pop
insl
out
fsubrp
jne
in
and
mov
cmp
or
mov
pop
dec
cmpsb
cmp
xor
jmp
xchg
cmp
lea
inc
cmp
hlt
add
jb
xchg
lret
out
jp
aad
inc
inc
out
jo
inc
movsl
lods
pop
popa
bound
sub
pop
or
add
das
scas
or
adc
iret
or
mov
outsb
inc
sbb
xchg
xchg
sbb
lret
nop
xchg
add
std
dec
movb
add
fucomi
rcrl
lock
outsb
mov
in
adc
rolb
movsl
mov
insl
mov
lds
mov
mov
or
out
in
ss
fwait
std
pop
mov
daa
jmp
dec
push
test
rcl
mov
mov
mov
or
adc
jb
jl
adc
xor
and
fsubp
aad
shrb
lahf
call
pusha
test
xchg
jo
inc
mov
cmp
rorl
add
sbb
rol
in
jns
push
cmp
push
ret
push
or
aam
mov
mov
push
fisubs
and
scas
mov
aas
sub
cmp
shl
xor
xchg
jne
and
push
outsb
push
xchg
pop
outsl
or
mov
sarl
xor
jns
dec
fwait
xor
cmp
cwtl
mov
leave
pop
orl
lods
fsubl
sub
dec
or
push
sarl
fists
movb
out
or
dec
jbe
rcll
sbb
dec
mov
pop
push
jecxz
scas
aaa
xlat
out
mov
cmpsb
movsl
jns
push
lods
xchg
adc
inc
dec
shll
sub
and
fistl
lret
insb
jo
jle
and
inc
repz
and
xchg
inc
loopne
out
jnp
stos
incb
fdivs
cmp
lds
xor
dec
cmpsl
loopne
out
mov
push
jl
or
dec
pop
es
push
and
gs
enter
std
cwtl
shl
xchg
mov
xor
daa
repnz
mov
jle,pt
inc
out
jmp
arpl
sub
dec
je
pop
or
cmp
cmp
and
push
fwait
xlat
pop
mov
cmp
test
nop
mov
loope
sbb
add
xchg
inc
cmpsb
and
cmp
sbb
sbb
xor
jne
xchg
dec
xor
cmp
mov
sbb
adc
jmp
sbb
xor
dec
inc
mov
inc
movsb
fimull
aas
sbb
push
mov
mov
movsl
js
bound
jae
and
adc
in
inc
jge
enter
insw
adc
scas
insl
mov
insb
sbb
scas
xor
jne
popa
xor
xchg
adc
dec
xor
xlat
and
mov
out
fstpt
sub
das
lds
xchg
xor
imul
rcrb
ljmp
jge
out
ljmp
push
lcall
add
push
mov
adc
and
out
lret
mov
push
movsb
dec
repz
daa
cmpsb
and
lret
mov
lds
push
mov
fwait
cmp
cmp
jmp
and
lock
pop
pop
das
pusha
push
xor
fsts
dec
xorb
sub
mov
pop
pop
stc
fs
sub
lods
xlat
outsb
or
cld
mov
dec
stos
pop
cmp
test
add
cmp
mov
mov
into
lcall
and
xorb
loope
add
add
aaa
lret
push
pop
jge
pop
pop
aas
or
repnz
inc
inc
inc
push
cmc
push
sub
inc
mov
hlt
pop
pushl
testb
pop
fstl
enter
cmp
add
cmp
lret
sti
or
push
dec
mov
pop
mov
mov
jae
jno
faddl
cmp
andb
or
add
adc
jp
mov
scas
and
pop
or
testb
sar
jbe
cmpsb
lods
mov
andl
orb
or
mov
xchg
cld
push
mov
rcrl
mov
cli
push
pop
sbb
scas
fcmove
and
dec
stos
xchg
sbb
push
xchg
mov
add
mov
adc
xor
std
loopne
enter
stc
cs
or
inc
sarl
or
dec
aas
insl
scas
mov
or
loop
jns
xchg
xlat
sub
or
mov
push
into
sub
outsb
mov
nop
mov
cmp
shll
push
cltd
sbb
jae
add
sbb
mov
repnz
movsl
mov
lcall
cmp
mov
pop
aaa
jae
push
int3
adc
xor
adc
xor
clc
and
jecxz
inc
xor
popf
aam
les
out
push
adc
cwtl
push
pop
lods
pusha
out
pop
mov
adc
jecxz
jo
push
lea
fucomp
push
jp
inc
adc
sbb
cmp
insb
les
into
sbb
dec
dec
add
inc
jne
test
cmpb
das
lahf
or
inc
sub
fs
cwtl
xor
packuswb
test
xchg
pusha
pop
cmp
push
and
mov
push
je
stos
sub
vmwrite
inc
inc
push
adc
xor
mov
adc
mov
insb
out
jecxz
sbb
out
add
sub
xchg
pop
fmul
ror
shr
sti
out
inc
ljmp
daa
mov
fwait
dec
xor
lcall
loopne
insl
movsl
sub
inc
inc
adc
ja
dec
int3
shl
ret
xchg
scas
sbb
xchg
inc
shrb
mov
push
xchg
sub
jmp
sbb
or
push
or
mov
xlat
push
idivl
cmpsb
inc
lret
ja
jle
sub
jp
in
sarb
mov
xor
sbb
jecxz
mov
int
clc
xchg
fisttpll
lods
push
inc
rcll
sbb
jmp
movups
bound
pushl
cwtl
pusha
pop
stos
mov
mov
inc
or
xchg
or
shr
ja
jl
jl
mov
or
or
and
loopne
in
mov
loopne
mov
nop
addb
push
sub
scas
or
mov
mov
sub
dec
fistpll
mov
xchg
mov
adcb
inc
jmp
jg
sub
push
mov
pop
mov
mov
mov
xor
mov
mov
ret
imul
jnp
les
cmp
dec
ret
jbe
lret
and
outsb
push
repz
jmp
jge
or
jecxz
mov
push
mov
add
in
leave
orb
push
and
nop
and
pop
mov
push
adc
sub
add
int
adc
and
push
mov
repnz
inc
mov
pop
mov
inc
jns
rcl
pop
hlt
pop
je
jno
decb
pushf
mov
xchg
mov
jo
mov
jp
dec
sbb
push
adc
mov
js
fsts
and
xchg
lret
lcall
icebp
lods
dec
fimull
push
sub
push
jecxz
xchg
dec
push
stc
clc
or
inc
sub
pop
imul
mov
idivl
iret
dec
shll
nop
leave
push
mov
pusha
mov
int
xor
push
stos
mov
pop
fwait
and
or
dec
jmp
jns
jo
add
pop
inc
mov
xor
mov
jmp
xor
or
push
cmpsb
cs
sbb
imul
sbb
adc
clc
mov
cmp
cmp
sub
aas
ja
pop
mov
xor
xchg
mov
cmp
dec
rcll
insb
jbe
mov
imul
and
adc
add
add
push
aaa
mov
mov
loopne
push
aas
mov
add
addr16
pop
push
pop
pop
pop
jecxz
fs
adc
fisubl
mov
sub
push
les
scas
dec
scas
es
out
pop
aaa
mov
jne
lret
push
push
stc
lock
ds
and
pextrw
pushf
mov
jns,pt
xchg
inc
push
ds
movups
fmuls
js
pop
loope
sub
andl
add
cmp
mov
movsl
mov
aam
aas
push
mov
pushf
movsl
leave
ljmp
cmp
out
in
xor
sbb
loope
dec
outsb
mov
mov
out
jl
loope
rol
adc
dec
aad
mov
loop
cmp
ret
add
sbb
mov
push
repnz
xchg
int
movsb
ja
pop
and
aam
aam
loopne
jnp,pt
lds
iret
adc
jb
jge
repnz
dec
or
lds
sbb
test
adc
jns
sbb
in
movsl
lret
outsl
or
repnz
mov
mov
fdivrl
jmp
nop
arpl
outsl
xchg
inc
adcl
inc
xlat
inc
repz
fstpl
fdivrs
fisubl
cmp
std
push
sti
gs
and
fcmovnu
jg
in
inc
mov
adc
sbb
jnp
ljmp
push
push
mov
sbb
in
cmp
iret
scas
rclb
adc
and
test
insb
or
add
jecxz
xchg
mov
fiadds
mov
mov
mulb
lds
inc
mov
xor
or
sub
test
dec
movsb
imull
or
cmpsb
jne
mov
xchg
outsb
or
ds
fldt
addb
test
cmp
lret
aam
movsl
shll
pop
cwtl
push
adc
push
leave
pop
pushl
jo
push
inc
and
add
rorl
mov
fidivrl
sub
mov
stos
xchg
push
rcl
push
sbb
and
push
push
nop
jecxz
mov
mov
push
aad
inc
pop
lods
test
jb
adc
cmpsl
popf
je
decb
dec
dec
jb
scas
pop
sahf
xchg
mov
sub
sub
aaa
mov
pop
lods
jmp
std
mov
adc
out
enter
pusha
pop
pop
in
das
and
jl
mov
jecxz
jmp
jecxz
repnz
dec
add
sarb
shl
fwait
dec
bound
sar
sub
dec
loopne
lea
inc
sbb
mov
dec
jns
stos
xchg
xchg
mov
jb
pop
cld
dec
mov
test
inc
sbbb
dec
test
xor
xor
mov
xor
pusha
and
lods
add
mov
popa
mov
pop
pushf
sbb
dec
fnstsw
adc
addl
sub
incb
dec
add
das
addb
in
push
jbe
adc
andl
sbb
mov
jno
xor
mov
push
or
inc
and
push
sbb
fdiv
cld
mov
push
inc
sbb
fsubl
and
clc
dec
cmp
or
xchg
mov
or
stc
inc
test
pushf
lcall
fcomps
push
aad
mov
sbb
jmp
jne
sbb
ret
addb
add
or
sub
repnz
or
and
cs
or
mov
adc
clc
push
jae
xor
mov
mov
jno
mov
ja
cs
pop
cmp
cmc
or
xor
mov
idivb
add
test
js
jns
cmpsb
leave
mov
push
sub
clc
xchg
push
dec
fsubr
lods
jb
loope
jo
inc
std
mov
fs
mov
xlat
sub
mov
dec
call
dec
aad
insb
dec
inc
mov
mov
xlat
stos
sub
inc
sub
mov
test
incl
out
push
out
cltd
add
out
adc
ds
dec
lods
ja
call
cwtl
sbb
sbb
xor
pop
nop
stos
out
cmpsb
adc
fiaddl
repz
add
xchg
mov
test
dec
push
jns
test
adc
push
out
popf
xchg
icebp
lea
gs
adc
aas
mov
jg
cltd
jo
sbb
mov
lea
xchg
data16
repnz
push
add
dec
leave
mov
mov
jno
in
pusha
int
push
popf
mov
and
es
iret
pop
inc
add
xchg
push
sub
cltd
mov
ss
xchg
jecxz
and
sub
lock
push
cwtl
hlt
incl
fcmovnbe
dec
loopne
pop
pop
lahf
and
lcall
outsl
pop
sarb
inc
arpl
andb
adc
pop
adc
insb
adc
mov
fidivl
out
xchg
pop
cmp
aam
pop
jp
adc
mov
add
lret
mov
xor
mov
rolb
inc
cs
lret
dec
mov
addl
clts
fisttpll
jl
mov
adc
dec
pop
add
pop
xor
xor
dec
stos
mov
in
repz
leave
xchg
inc
data16
or
loop
leave
push
xchg
and
mov
in
cmpsb
aad
int3
mov
stc
popl
lcall
dec
cmp
iret
subl
pop
unpcklps
lcall
lret
rclb
and
sbb
mov
ret
xchg
dec
outsl
inc
push
cmp
inc
iret
ljmp
jbe
mov
dec
mov
xchg
call
cmpsb
bound
xor
divb
hlt
fstpt
xor
rcl
mov
and
into
mov
mov
add
sbb
add
fwait
cmpsb
pop
mov
lahf
cltd
xor
ja,pt
jle
into
sbb
dec
pop
push
xchg
adc
imul
orb
push
inc
lods
dec
sub
xchg
jle
fs
rcl
cmc
sub
or
cmp
popf
dec
pop
pop
scas
inc
pop
cltd
mov
repz
fisubrl
call
in
push
rcl
out
mov
sbb
pop
test
mov
shr
pop
xchg
insb
sbb
lret
xchg
pushf
inc
jae
rcrl
es
and
iret
add
scas
subb
push
xchg
xor
sbb
jge
mov
mov
cld
jb
mov
cwtl
sahf
lods
stos
xlat
adc
pop
std
gs
jo
adc
roll
leave
ficomps
cmpsb
je
mov
and
les
or
mov
pop
repnz
sub
cmp
dec
add
shll
push
jnp
adc
sub
ljmp
sbb
add
jb
pop
xchg
pop
sahf
xchg
fbstp
push
add
hlt
push
scas
push
mov
test
or
cmc
push
rcll
jnp
inc
xorb
aam
push
insl
lcall
xor
fistpll
jne
int3
cmpl
xor
into
js
ret
fstpl
mov
sub
pop
and
int3
popf
or
or
shrb
sbbb
push
stos
pop
mov
pop
mov
mov
fbld
hlt
clc
adc
jl
fimuls
adc
ja
outsb
pop
rcll
ret
icebp
pop
push
bound
pop
xor
mov
xchg
out
jae
xor
test
shrl
hlt
adc
lds
mov
cmp
push
fs
shl
pusha
push
mov
cmp
xchg
testb
leave
adc
cmp
addr16
in
ret
xchg
sbb
dec
sti
push
lods
popf
ljmp
popa
inc
popf
mov
push
outsb
ret
jne
mov
pop
pop
jne
in
pop
jp
aas
stos
pusha
sub
mov
dec
sbb
mov
mov
mov
mov
sub
add
dec
add
pop
pop
dec
iret
cmp
sbb
inc
add
cmp
popf
shl
mov
sbb
push
mov
js
scas
lahf
mov
or
inc
stos
add
xchg
aaa
xchg
rol
cld
leave
scas
sti
enter
jmp
jae
mov
data16
aas
in
adc
push
push
je
mov
loopne,pn
pop
xor
mov
xchg
jne
jmp
and
icebp
ss
insl
jmp
jbe
lcall
out
mov
xchg
dec
sub
mov
lods
jo
xchg
and
or
jl
mov
mov
push
push
pop
repz
xchg
dec
push
repnz
in
repnz
movsl
mov
leave
sbb
push
insb
shr
mov
push
outsl
push
jmp
out
xchg
fidivl
jnp
jno
mov
jmp
mov
jb
mov
add
mov
lret
cld
and
stc
or
push
add
sbb
mov
cmp
repz
sub
push
cmc
scas
xor
les
rep
mov
lds
out
pop
pop
insb
mov
cmp
loop
in
xchg
test
lods
scas
lods
iret
xor
aaa
test
ret
dec
hlt
outsb
inc
fnstsw
xor
rorl
cld
push
jg
clc
mov
push
in
cwtl
mov
fisubrl
sub
push
xor
jle
add
lret
or
add
sahf
xchg
inc
repnz
scas
mov
ss
inc
jg
sub
ss
fwait
mov
fs
fstl
movl
data16
out
mov
jno
daa
lods
pop
popl
sbb
inc
xchg
mov
stc
mov
jle
insb
push
pop
cmc
cs
dec
xchg
je
imul
mov
lods
outsb
in
out
mov
xor
shl
adc
test
xchg
sub
in
mov
and
cmc
mov
test
push
movsl
imul
push
cmc
dec
lcall
xor
loop
xor
pusha
arpl
lock
andb
movb
fwait
addr16
test
rorb
popa
add
pop
addr16
orl
jl
cmp
test
stc
sub
lret
push
xchg
push
adcb
jno
and
push
mov
das
js
jcxz
fs
icebp
ror
mov
sub
mov
push
xchg
add
dec
test
in
jl
sti
fwait
or
and
dec
dec
cmp
andb
call
pushf
bound
mov
lock
popf
hlt
jae
leave
add
imul
jecxz
push
xchg
cmp
add
jne
das
or
mov
outsl
out
loope
ret
cmp
add
push
test
pop
out
orb
repz
sub
and
aad
xor
jne
out
loopne
out
adc
xchg
repnz
mov
dec
add
cmp
rcll
dec
jb
hlt
es
cmp
in
xlat
add
inc
xor
leave
loopne
inc
fisubl
push
xchg
aad
sub
mov
xorl
add
dec
add
test
addl
outsb
and
xor
cmp
jnp
jnp
or
jns
repnz
push
sub
sbbl
xchg
popf
imull
push
into
push
mov
add
lahf
sub
xchg
loope
stos
sbb
mov
inc
or
out
dec
aaa
jmp
stc
or
mov
mov
jno
mov
mov
sbb
fldenv
pop
cmp
push
out
inc
divb
xchg
push
sti
and
mov
mov
mov
adc
hlt
je
mov
and
ja
inc
aad
call
ret
mov
movsb
sbb
sub
outsl
pop
in
cmp
hlt
shll
xchg
pop
enter
out
xchg
lret
in
out
and
mov
add
and
xor
mov
jg
cs
das
fiadds
mov
cltd
add
sti
mov
adc
insl
fstpt
and
ljmp
rcl
mov
cmp
jmp
xchg
repz
out
call
fsubl
push
stc
push
xchg
pushf
cmc
inc
push
hlt
in
push
push
mov
popf
cwtl
fcomp
fildl
mov
addl
jns
mov
div
inc
dec
sbb
clc
sub
mov
data16
jg
in
add
addl
hlt
shll
push
adc
pop
inc
imul
imul
loop
add
push
sbb
out
jne
sub
ret
loop
sub
dec
lods
jmp
adc
mov
sbb
xchg
cltd
dec
dec
and
add
int
push
or
test
mov
addr16
sbb
xchg
bound
or
sbb
mov
out
xchg
cs
mov
ljmp
into
jbe
pop
lods
sbb
ss
in
pop
jmp
or
push
mov
hlt
sbb
pop
xchg
jb
js
mov
jno
in
dec
stos
push
mov
in
lret
aas
scas
or
push
test
cwtl
rolb
rorb
cs
mov
mov
in
cld
repnz
fisttps
sbb
jl
pop
pop
jmp
mov
mov
mov
sbb
inc
bound
dec
cmp
shlb
fstpl
arpl
push
pop
mov
mov
mov
jle
outsl
insb
push
push
int
cs
inc
mov
adcl
mov
push
in
inc
sbb
cli
addb
xchg
gs
inc
xor
mov
lea
notb
popa
mov
mov
cmpb
repz
imul
xlat
daa
fldt
lcall
push
stos
daa
fidivrl
insl
pusha
sbbb
inc
pop
jle
adc
or
mov
out
jmp
jg
inc
push
or
decl
or
mov
jne
inc
lahf
adcl
cwtl
xchg
rclb
shrb
or
jo
inc
xor
testl
cmp
mov
lea
daa
push
cmp
jge
sbb
lods
jge
mov
dec
cmp
pop
ficompl
cmpsl
decl
mov
add
push
push
pop
dec
cmpsl
aaa
push
xor
or
mov
stos
iret
mov
mov
jnp
dec
mov
fistpll
in
pop
sub
pop
sbb
jmp
jp
in
jge
dec
push
cmpsl
idivl
hlt
cld
adc
ret
pop
adc
xchg
lret
cmpsl
xchg
pop
lret
sbb
push
sub
iret
push
and
jl
into
jb
pop
or
mov
int
outsb
insb
mov
sub
adc
enter
fmull
cwtl
out
mov
mov
lock
mov
inc
jmp
xchg
add
mov
jo
and
shr
test
dec
fldl
xor
stos
test
pop
std
stc
sbb
hlt
sahf
in
mov
push
inc
inc
scas
cmp
xchg
rorl
pop
jg
fsubl
gs
iret
inc
add
enter
mov
xchg
cmp
jae
mov
aaa
int
out
test
adc
dec
jne
std
sti
jb
dec
adc
stos
fldl
idivb
les
mov
mov
int
mov
adc
rolb
mov
adc
sbb
or
lret
or
xlat
lret
and
test
sbb
add
or
aaa
mov
push
icebp
xchg
aaa
inc
outsb
mov
pushf
adc
and
or
popf
sub
sbb
push
lret
clc
jl
mov
xor
pusha
pop
repnz
pop
ja
inc
fmuls
adc
mov
rorl
shlb
add
test
in
xchg
xchg
mov
daa
gs
xchg
insl
je
testl
xorl
or
movsb
cmc
cmpsb
sub
mov
xor
sub
add
pop
in
pop
jecxz
outsb
ss
cmpsb
push
ret
pop
addr16
adc
test
sbb
jp
je
cli
sub
mov
xchg
jecxz
jns
mov
ss
xchg
das
sbb
jno
ret
and
sub
sbb
shrb
or
lret
lods
in
xchg
pop
cwtl
pop
lret
and
dec
xchg
cli
les
cld
sbb
test
leave
arpl
les
int
nop
fimuls
jae
mov
lock
cmp
mov
mov
les
dec
in
loopne
xchg
test
out
mov
test
jl
mov
das
cld
inc
fucomip
repnz
inc
insl
iret
rclb
sbb
das
adc
jmp
xor
sub
mov
or
and
jge
xor
shl
xchg
repnz
push
hlt
push
out
xlat
in
rcrb
test
lea
sub
test
dec
mov
loope
jb
mov
mov
xlat
hlt
lret
and
mov
or
lods
push
test
fwait
punpckhbw
adc
inc
fidivl
inc
cmp
js
and
sub
xchg
stos
rcll
cmpsl
lea
mov
sub
ja
insb
mov
mov
repz
and
and
add
orl
jp
mov
leave
enter
mov
mov
mov
xor
stos
out
mov
lret
xchg
insb
or
xchg
hlt
jg
add
mov
mov
sbb
push
mov
push
inc
lret
push
xlat
leave
dec
add
mov
sbb
cmp
pop
jbe
xchg
std
xchg
and
lods
and
pop
inc
cltd
pop
enter
adcb
sbb
mov
dec
bound
mov
mov
sub
sbb
push
adc
mov
jbe
push
pop
jne
sbb
shrb
push
jl
aaa
rcrl
out
adc
repz
gs
sub
mov
xchg
lods
cmp
pop
mov
js
out
hlt
movsl
or
aad
and
fstpt
in
push
mov
clc
aad
es
push
ss
sub
or
adc
jb
adc
out
in
lret
jns
jae
inc
or
dec
adc
jns
jae
clc
xlat
or
imull
mov
mov
sbb
adc
xchg
imul
js
lahf
push
jle
or
xchg
fbstp
jbe
rorb
rcll
fimuls
sub
jl
xor
decb
xchg
data16
or
icebp
pop
ret
add
mov
das
repz
fwait
cltd
adc
mov
std
shl
push
add
push
add
repz
add
jg
adc
dec
mov
jl
aas
int3
adc
lcall
inc
mov
movsb
push
and
push
mov
push
fisttpll
fdivrs
mov
or
ret
test
pusha
inc
pop
sahf
lcall
rorl
adc
mov
xchg
out
xor
mov
loop
xchg
mov
or
mov
mov
adc
ret
mov
inc
dec
and
js
outsl
mov
fiaddl
add
shlb
das
rolb
inc
push
cli
in
pop
and
xchg
mov
pop
cmp
sub
das
adc
mov
pop
rcl
iret
cmpsb
jmp
push
jne
cltd
loopne,pn
js
pop
insl
add
jecxz
jno
call
lea
jb
leave
daa
adc
inc
enter
aad
push
stos
scas
repz
xchg
sub
sub
outsb
inc
xor
mov
arpl
sub
test
xlat
pop
mov
aam
in
and
mov
sub
xchg
jnp
das
movsl
arpl
popl
in
pop
aad
adc
push
daa
int3
add
out
cmp
push
mov
std
call
push
xchg
jbe
jle
jmp
mov
aam
pop
mov
mov
imul
or
in
imul
test
in
jb
pop
dec
and
push
pop
and
and
xchg
adc
fmuls
jp
cmp
adc
lods
movsl
adc
inc
daa
pop
fnstsw
mov
xor
icebp
gs
xor
std
sub
xchg
decl
mov
lret
cmpsb
mov
enter
out
add
xchg
out
lea
js
in
inc
adc
imul
dec
add
int
mov
dec
lcall
icebp
add
ja
andb
xchg
lods
push
aaa
push
aaa
mov
repz
filds
frstor
pushf
push
fbstp
lds
push
xchg
xchg
mov
push
cld
aad
ret
and
adc
mov
add
lret
idivb
std
push
clc
loop
inc
out
stos
dec
or
xchg
dec
stc
sbb
push
xchg
movsl
xchg
test
mov
adc
nop
mov
inc
push
or
inc
add
das
mov
inc
xlat
cmp
jmp
ss
repnz
and
call
and
daa
mov
aad
xchg
cmp
xor
mov
rcrb
mov
adc
fisubrs
shufps
js
and
mov
in
pop
dec
lret
mov
adc
ja
cmp
sub
pusha
pushf
xchg
mov
mov
cmp
rolb
lea
shrl
adc
out
dec
sub
lock
xor
es
inc
push
add
jns
or
out
pop
stos
test
inc
mov
adc
out
sbb
xchg
out
pushw
mov
mov
nop
xchg
or
push
rclb
mov
hlt
test
sbb
mov
push
cli
or
mov
stos
push
cltd
lea
push
cmpb
iret
cmpsl
sub
ljmp
add
dec
arpl
lcall
sahf
pop
lods
cwtl
push
xor
test
mov
xchg
imul
out
cmp
jnp
xchg
add
in
out
sub
inc
xlat
repnz
hlt
add
sbb
mov
mov
mov
cwtl
push
add
out
sbb
int3
jno
in
xchg
cltd
mov
fs
and
icebp
sbb
addl
mov
repnz
mov
popa
lret
jns
fiaddl
cli
mov
enter
cli
lds
sbb
mov
xchg
pop
cltd
adc
pop
mov
hlt
pusha
sbb
xchg
sub
cwtl
lahf
mov
outsb
sbb
xchg
dec
mov
sub
std
sub
cmp
test
js
mov
xchg
xbegin
jle
xor
ret
subl
mov
mov
test
sbb
std
inc
adc
aad
fs
in
test
inc
pop
mov
push
leave
pop
in
sti
cmp
sub
pop
shll
loopne
iret
pop
cld
dec
jp
inc
sub
hlt
ret
xorl
faddp
dec
pushw
xchg
popl
mov
bound
lea
cmp
insl
cltd
push
adc
mov
cmp
mov
cmp
cmpsb
leave
push
pop
mov
test
pop
push
jb
sahf
cmp
enter
add
subb
rolb
dec
dec
sbb
fwait
in
push
adc
dec
fstp
sub
leave
pop
mov
mov
mov
je
jnp
fwait
xor
std
or
mov
mov
mov
fidivrs
or
lret
ljmp
out
pop
hlt
out
cmp
cmp
das
push
pop
ret
insl
inc
fwait
repnz
pminub
sti
mov
jmp
dec
mov
lahf
pop
lock
mov
out
pop
add
mov
dec
popa
add
dec
or
cli
inc
push
outsl
les
cmc
lcall
shll
das
dec
repz
dec
in
xchg
les
loopne
pop
add
mov
jae
jecxz
push
mov
xchg
pop
or
repnz
loope
hlt
cmp
dec
daa
push
push
rorl
inc
lcall
js
negl
mov
aas
xor
test
ds
clc
leave
es
or
rorl
push
sbb
ljmp
push
rorb
les
xor
out
mov
lock
or
je
jecxz
cwtl
jb
xchg
jns
push
xchg
xchg
or
push
sub
ljmp
fcmovbe
pushf
ret
addr16
mov
mov
hlt
loopne
xchg
ret
inc
push
push
push
and
or
jnp
rcl
pushf
call
imul
push
aas
xchg
orb
loopne,pt
add
dec
cli
or
mov
nop
call
imul
push
push
add
push
repz
jnp
aaa
sar
iret
stc
aas
add
fsubp
or
xlat
adc
inc
jns
popf
sub
adcb
iret
xor
push
mov
dec
mov
cmp
fadd
adc
xor
cmp
fstpt
imul
pusha
and
mov
mov
sbb
jb
inc
andb
les
jns
cmp
jno
daa
scas
dec
jmp
jl
jo
or
leave
push
xchg
jl
jg
mov
jle
and
clc
xchg
lahf
fildll
jbe
fmuls
add
inc
and
inc
mov
loope
adc
jne
and
ret
push
stc
push
lret
inc
mov
scas
in
gs
fsub
sub
dec
data16
xor
mov
mov
sub
xchg
ret
aam
lahf
lock
inc
test
push
mov
mov
adc
jmp
in
sbb
movb
test
in
stos
cmpsl
and
cmp
dec
fdivr
icebp
fiadds
insl
sub
adc
data16
insb
ret
add
stos
in
sbb
pop
fcompl
imul
test
mov
imul
mov
sub
xor
jp
sti
fisttpl
movsl
jl
and
mov
repnz
fidivrs
sub
cmpsl
mov
adc
inc
pop
lods
jns
sbb
push
cmp
jbe
or
ret
add
push
add
xor
lahf
jno
mov
icebp
scas
pop
mov
fdivl
fistpll
xchg
outsl
jmp
cmp
lock
ret
fstps
cmp
push
idivl
mov
test
mov
cmpsl
fwait
iret
dec
lahf
jge
jne
xchg
sub
rcr
dec
sti
repz
ss
sub
push
sbbb
mov
push
int
inc
mov
cmp
in
out
sbb
inc
rclb
or
repnz
or
inc
mov
add
rorb
xor
fidivl
mov
sbb
mov
sub
cmp
out
mov
push
adc
adc
ss
mov
in
aas
sbb
mov
or
inc
out
lcall
fmull
lret
sub
stos
sti
aad
pop
fsubrp
push
stos
je
movq
enter
scas
mov
or
ret
xchg
xor
lock
pusha
pop
cmpl
fst
outsl
fidivrs
sub
mov
push
adc
out
aaa
mov
jp
fs
push
cmp
insb
sbb
ret
jbe
jmp
outsb
mov
xchg
mov
jb
lods
adc
xchg
mov
fidivs
adc
and
movsl
mov
jge
out
cmp
add
mov
jge
shlb
in
ds
jnp
jns
add
je
fstpl
hlt
stos
pop
ljmpw
bound
and
xchg
sub
jecxz
xchg
stos
cli
xchg
xor
sbbl
out
cmp
imul
pop
mov
sbb
in
fs
mov
les
fstps
iret
test
ja
fwait
jl
mov
inc
bound
mov
cli
sbb
pop
sub
sub
std
sti
mov
dec
mov
outsl
lods
xlat
mov
insl
adc
and
enter
push
js
cmp
jae
inc
mov
push
icebp
mov
xorb
cmc
int3
int3
clc
sahf
or
mov
dec
add
call
out
pop
out
nop
push
and
jbe
clc
fidivrl
jp
cmp
xchg
xchg
cmp
mov
mov
mov
mov
xchg
icebp
repz
add
out
mov
cmp
or
stos
cmpsl
mov
arpl
addr16
pop
inc
rorl
mov
adc
mov
add
dec
xor
inc
add
out
jns
xchg
xchg
or
or
inc
loopne
shl
or
flds
shrl
sub
jecxz
rcrb
popf
popa
adc
cld
lds
sti
mov
out
pop
dec
out
lcall
stc
rcl
xchg
in
mov
lret
fimuls
lcall
inc
in
or
push
addl
mov
mov
mov
xor
and
repz
nop
jmp
jnp
enter
arpl
filds
mov
push
xchg
int3
push
in
inc
push
push
ficomps
inc
lods
sub
pop
push
xchg
push
mov
dec
adc
adc
jge
fistpl
inc
adc
jg
jne
inc
xor
call
dec
and
jmp
sahf
pop
ret
push
ret
das
mov
js
jg
es
or
inc
push
jle
and
add
or
mov
xor
or
or
xchg
jmp
adc
fwait
call
cmp
xor
daa
call
add
test
sub
loopne
mov
jmp
out
dec
mov
push
xchg
lcall
push
adc
cmp
repz
stos
and
sub
jle
mov
sbbl
add
push
into
dec
jnp
adc
push
fs
mov
or
xchg
stc
fists
clc
sbb
aaa
aas
mov
and
imul
cld
xor
or
xchg
pop
mov
orb
addr16
xchg
js
pop
or
lds
jne
fdivs
ret
lret
sbb
ret
and
cli
ret
mov
testb
ja
pop
mov
dec
gs
xchg
cmp
les
mov
mov
call
sahf
popf
fisubl
sub
mov
adc
cmp
mov
and
push
adc
js
mov
lea
xor
cmp
jge
cmp
push
imul
mov
cwtl
iret
jbe
gs
imull
inc
call
pushf
sbb
call
xchg
inc
fbstp
clc
add
adc
and
je
aas
push
jo
test
jmp
cmc
adc
repz
popa
pop
mov
gs
adc
jmp
pop
jmp
sbb
lock
mov
cmp
push
cltd
mov
inc
push
mov
push
mov
mov
adc
das
jmp
mov
push
dec
imul
addr16
pop
pop
aad
stos
pop
cmpl
outsb
fistl
mov
adc
aad
mov
out
addr16
fcmovb
ret
pop
arpl
pushf
sbb
and
or
xor
push
mov
push
inc
bound
dec
pushl
sub
adc
popf
call
int
cmp
les
lock
mov
xchg
sub
xchg
pop
shll
rcll
sbb
mov
in
fnstcw
std
xor
scas
mov
std
out
fs
cli
push
xor
push
inc
inc
ja
jne
popf
dec
outsb
and
aas
sub
xchg
mov
outsl
lahf
adc
cmp
scas
xchg
jmp
sahf
out
xor
jmp
mov
fsubs
ljmp
pop
ja
in
push
dec
dec
mov
adc
inc
fstpt
fsubs
lahf
mov
std
cmpsl
sub
xor
jl
xchg
inc
out
fst
jle
mov
fwait
xchg
add
inc
hlt
test
push
inc
xlat
fldt
ret
inc
daa
loope
dec
lods
inc
movsb
jg
or
xor
jb
cmp
mov
push
adc
into
cmp
xchg
loopne
sti
inc
repz
inc
outsb
aaa
sub
jecxz
adc
sub
mov
mov
push
fidivl
insl
movsl
es
lahf
cmpsb
orb
movsl
cmp
rcl
inc
cmc
cmp
fdiv
loopne
iret
jmp
movsb
cmp
out
or
pop
hlt
shrb
xor
mov
ds
cmp
cmp
in
aad
ret
sbb
xchg
add
push
adc
push
lds
push
es
rcrb
leave
mov
in
fnstsw
mov
cmp
jg
xchg
subb
mov
aas
sarb
imul
test
pop
add
out
fisubrl
repz
bound
inc
xor
fistpll
mov
sbb
dec
jge
cmpsl
cmpsl
mov
pushf
sub
cmpsl
repz
fdivrs
jg
mov
into
fwait
mov
addr16
mul
outsb
ss
stc
jbe
mov
sti
test
push
lds
loop
ret
cmp
icebp
sub
ja
ss
rorl
imul
xchg
mov
xchg
xchg
mov
add
push
mov
lds
inc
cmp
xor
xchg
xchg
shrl
stos
sbbb
sbb
jno
movsb
pop
out
mov
cmp
jo
pop
iret
dec
outsl
mov
mov
jnp
jnp
jns
fcmovnb
mov
mov
cmp
and
and
xor
push
cmp
lods
cmp
push
and
call
mov
sbb
nop
mov
insb
add
adc
roll
adc
vcvtdq2pd
add
subl
sub
lods
mov
clc
inc
sub
adc
loopne
and
mov
idivl
in
popw
out
cmp
test
jnp
repnz
mov
sahf
inc
and
or
test
les
xchg
popa
loope
test
sbb
add
add
ret
loopne
lea
testb
std
jle
dec
test
or
mov
inc
mov
mov
mov
jle
mov
mov
jns
cmpsl
fisttpl
mov
jecxz
push
xor
cwtl
dec
shlb
and
mov
pop
pop
ret
popa
inc
mov
dec
push
mov
inc
xchg
xor
loop
leave
popa
mov
xchg
daa
mov
jge
jo
xchg
stc
mov
xchg
sub
das
arpl
sbb
push
aam
call
outsb
call
stos
pop
cs
or
out
push
sti
xor
push
and
mov
xchg
dec
jge
push
mov
gs
xchg
lock
out
jmp
dec
cwtl
or
xchg
inc
or
ds
push
sub
push
jo
mov
dec
dec
cmp
cld
mov
in
dec
jnp
jns
fs
subb
and
std
add
add
fwait
lahf
sbb
jnp
jnp
cmp
mov
xor
divb
push
pop
adc
pop
mov
jns
cmc
or
aas
xchg
mov
nop
mov
xorl
sti
dec
je
jmp
or
dec
jmp
adc
jp
shll
mov
mov
lcall
outsb
rorl
pop
scas
mov
scas
mov
fsubr
test
sbbb
dec
pop
xchg
push
xchg
add
pop
or
test
mov
and
jmp
mov
rclb
push
fisttps
dec
sbb
into
sub
and
fwait
inc
inc
dec
roll
push
fistpll
subps
jle
imul
js
or
jb
mull
push
aas
aaa
ds
pushl
stc
pop
mov
orl
js
inc
mov
addr16
adc
dec
cmp
jp
mov
dec
dec
cltd
sbb
call
mov
fs
push
arpl
jbe
mov
hlt
add
mov
add
mov
loopne
in
insb
pop
jae
jmp
scas
mov
sbb
push
mov
sbb
out
push
je
jmp
das
movsb
inc
addr16
and
sub
or
dec
xrelease
jge
cmp
pop
orb
repnz
xchg
jno
cs
pop
adcl
jne
jmp
push
pop
push
add
push
arpl
jmp
mov
xor
xor
stos
dec
das
jns
ret
sbb
shlb
enter
sbb
push
stos
cmp
mov
popa
pop
popf
mov
lret
das
lcall
sub
jmp
and
add
or
cmpsl
push
adcb
gs
ljmp
ret
in
inc
and
inc
xchg
aad
insb
inc
lret
es
adc
pop
mov
lea
loopne
addr16
cmp
adc
int3
nop
scas
jle,pt
xlat
mov
mov
or
mov
std
je
aaa
fcomip
fidivrl
test
xchg
loopne
push
adc
shlb
int3
mov
inc
adc
lahf
mov
dec
inc
out
dec
push
pop
movsl
shll
mov
xchg
add
fists
shl
push
and
popf
cmp
cmp
in
cmpsb
or
jge
add
xchg
or
jbe
push
imul
dec
mov
push
test
add
mov
insb
or
sbb
mov
movb
dec
push
stos
mov
rcll
ljmp
sbb
add
xchg
push
or
cmpsb
hlt
outsl
cmp
add
shrb
movups
sbb
jecxz
cmpsl
shrb
insb
test
and
stos
fmuls
orl
or
xor
sbb
dec
lret
sbb
js
fistl
push
dec
sub
mov
pushf
pusha
mov
sub
push
cmc
cmpb
dec
xchg
lret
sbb
xchg
xchg
mov
dec
inc
xor
cmc
mov
pop
mov
adc
mov
xchg
mov
dec
jp
push
lahf
push
cmp
std
add
cmp
decl
fldl
mov
ljmp
inc
add
or
xchg
add
insl
ja
cmp
adc
sub
pop
jne
test
mov
cmp
in
insl
scas
je
jo
icebp
xchg
dec
jl
pop
aaa
es
hlt
into
fwait
repnz
push
fbld
xchg
lods
jno
scas
xchg
jge
shll
lahf
repnz
sbbl
negl
adc
test
loope
iret
lock
shrl
and
pop
repz
dec
ficoml
dec
dec
out
add
mov
popa
sti
jo
sub
in
test
sti
mov
xchg
loope
aad
push
push
filds
xchg
add
sbb
lods
mov
popa
push
sti
test
fdivs
call
jge
pop
push
xchg
xchg
adc
addr16
stos
add
or
pushf
mov
jbe
xor
xchg
mov
bound
mov
sub
mov
gs
jp
dec
jg
popf
lea
pop
push
inc
scas
xchg
pusha
sub
pop
mov
lods
daa
enter
test
jp
dec
mov
xchg
mov
sarl
xlat
scas
mov
adc
pop
xchg
adc
push
aaa
fldcw
xchg
inc
call
dec
cmpsl
xor
cli
sahf
jb
jg
jno
mov
je
or
mov
push
jb
ret
sub
hlt
in
roll
sti
js
xchg
inc
imul
cmp
out
aad
inc
stc
pop
insl
fwait
cmp
push
pushf
testl
sbb
and
in
mov
lods
sti
dec
mov
inc
cltd
push
xor
sbb
std
leave
ret
sbb
xchg
xchg
jle
push
xor
mov
stos
mov
dec
dec
jbe
loop
jmp
cmp
cld
inc
js
ror
scas
dec
jmp
fmull
ss
lock
rolb
xchg
imul
rcrl
push
shrl
leave
inc
stos
fimuls
clc
mov
mov
cmpsl
xchg
out
idiv
inc
fmul
dec
or
dec
orb
adc
imul
add
jno
int
div
dec
push
out
xor
ja
inc
std
insb
cmp
sbb
bound
mov
int
cmp
paddusw
sub
mov
lret
mov
in
and
ja
in
loop
jle
xchg
mov
xlat
repz
or
lahf
sbbb
mov
or
xor
cmp
xlat
jns
aas
add
xlat
jnp
or
ljmp
lahf
sbb
bound
aad
dec
sub
xor
adc
pusha
and
aaa
mov
sbb
sub
imul
lret
enter
pop
pop
cmp
cmp
in
add
mov
int3
mov
mov
jns
test
iret
mov
lcall
es
adcl
and
pop
popa
xor
test
jne
inc
in
clc
mov
es
jnp
bound
repz
out
ret
push
cmpsl
int3
mov
movb
faddl
mov
push
xchg
add
jns
cmp
insb
xor
popa
scas
jle
push
sar
ja
mov
xchg
les
out
or
add
repz
pop
or
clc
imul
imull
lret
setle
out
std
pop
jmp
mov
xchg
shrl
and
mov
jge
pop
repz
dec
jmp
add
arpl
or
and
push
ja
test
inc
mov
in
jmp
inc
xchg
add
in
adc
ret
sbb
inc
mov
lcall
cmp
adc
push
jb
xor
dec
cmp
and
add
mov
inc
inc
jno
test
push
fcomps
sub
jns
add
fidivrs
pusha
hlt
ror
lret
jg
mov
adc
jl
xchg
push
pusha
loope
mov
dec
adc
mov
popf
xchg
lock
stc
pop
mov
jmp
punpcklbw
or
xchg
jge
imul
imul
mov
push
push
ljmp
stos
mov
bound
test
jns
push
jbe
mov
hlt
jge
pop
adc
movsb
pop
sub
cmp
sub
insb
push
call
loopne
xor
pushl
insb
dec
add
xor
movsl
imul
aam
mov
mov
push
jbe
inc
int3
xchg
subb
sub
xlat
into
jp,pt
rcrb
jge
xor
int
enter
mov
fisubl
mov
cld
dec
repz
ret
mov
in
fdivl
stos
ret
lret
lret
stos
fwait
inc
into
and
push
xlat
orb
insl
sbb
shl
repnz
push
in
movl
add
jle
in
sbbl
push
mov
jo
inc
movsl
movsl
shl
jo
sbb
push
les
int3
mov
mov
adc
xor
jecxz
mov
andb
xchg
xor
xor
cmc
ljmp
cld
push
sub
mov
scas
xor
push
stos
icebp
pop
xchg
ljmp
adc
add
jno
and
add
bound
pop
adc
ret
test
inc
and
int3
pop
je
push
fstl
xchg
jno
jo
lods
mov
xor
mov
nop
les
iret
xor
pop
pushf
adc
fstl
dec
std
test
out
inc
inc
icebp
sbb
scas
dec
test
icebp
lret
adc
jns
adc
adc
fs
jne
leave
jno
mov
push
aad
adc
mov
js
mov
fwait
lock
xor
jbe
sub
xchg
push
in
test
adc
js
mov
and
push
call
nop
mov
outsb
adc
push
aas
scas
push
rclb
test
stc
mov
mov
dec
dec
insb
adc
mov
call
pop
cld
out
xor
stos
pop
mov
int
inc
stc
out
lods
pop
jle
lock
mov
or
out
xchg
ret
sbb
push
xor
ret
or
je
daa
jnp
mov
adc
xchg
jno
lahf
sub
mov
xor
insb
pop
xlat
push
push
adc
movsl
and
cmp
xor
add
imul
in
pop
adc
mov
add
rorb
inc
and
cmp
jbe
mov
mov
mov
add
jge
insb
in
pop
enter
sbb
subl
jl
lcall
mov
out
sbb
fcomp
aaa
pop
xor
adc
jp
out
cmp
mov
add
or
jbe
mov
icebp
mov
int3
into
xor
pop
sbb
cmp
cmp
and
jg
fimull
push
lret
in
jecxz
in
sub
jle
rcl
in
icebp
fisubrs
sbb
mov
push
dec
in
mov
xchg
jbe
cmp
pop
cmp
jmp
lret
in
loop
push
nop
mov
daa
fcmovne
jmp
dec
rcrl
cmc
cmp
mov
or
cltd
pop
mov
cld
pop
adc
into
xchg
lds
xchg
mov
in
mov
and
cmpsl
pushf
xchg
or
pop
adc
mov
cmp
fs
sarl
push
fildl
rcr
inc
dec
loopne
cmp
out
cmp
repnz
push
sbb
sbb
pop
test
dec
xchg
add
aam
imul
rcrb
jnp
ljmp
and
ret
mov
ficoms
adc
hlt
out
sbb
jg
or
lock
loope
inc
push
push
pop
rcl
jns
pop
push
lret
fidivrl
pop
inc
jg
stos
addr16
inc
fmul
addb
mov
sub
fcmovnu
push
cmp
xlat
mov
cld
jl
cmp
adc
mov
mov
popa
rcrb
sbb
adc
icebp
pushf
add
cli
dec
cli
negb
adc
sarl
xchg
out
shll
inc
or
cmp
push
inc
inc
scas
test
and
jae
std
cmpsl
mov
rol
test
test
pop
add
inc
notb
es
in
in
std
xchg
fstpl
or
add
aam
icebp
clc
inc
test
or
cwtl
idiv
push
fs
scas
js
inc
cmpsb
cwtl
cs
sahf
out
ret
mov
mov
in
mov
leave
aas
scas
inc
leave
jb
sub
cmp
pop
int
push
mov
mov
je
mov
testl
popf
out
jle
xor
xchg
xor
dec
mov
test
xchg
cmp
push
mov
push
pop
mov
cs
jae
repz
gs
cmpsb
jmp
loope
dec
mov
xchg
or
out
pop
jae
ret
nop
stc
int
xchg
adc
jno
addl
shr
repz
push
adc
repz
mov
sub
inc
sub
sahf
push
push
rcll
jmp
mov
xchg
loop
fildll
mov
mov
jb
iret
dec
out
push
dec
fs
sbbl
jl
xor
sub
cltd
push
sbb
sub
or
push
jmp
xchg
mov
mov
jno
mov
fmul
pop
dec
xchg
fnstcw
popa
push
lods
and
xor
sbb
jbe
imul
push
shl
jns
push
jne
inc
repz
test
jp
push
pop
cmp
aas
add
jle
int3
and
pop
adc
scas
dec
shrl
out
sarl
xchg
xchg
add
loop
jp
ja
fiadds
cmp
mov
pop
mov
in
push
and
and
push
in
arpl
xchg
dec
std
push
xor
adc
call
loop
and
add
test
pop
dec
enter
in
loop
xor
cmp
push
or
es
fnstenv
cmp
ret
in
stc
das
stos
xor
ja
add
mov
in
sbb
into
dec
inc
xorb
mov
mov
xchg
adc
insb
sub
mov
inc
mov
push
adc
jmp
stc
lods
mov
mov
pop
rol
fstps
xor
out
imul
sub
xchg
inc
out
dec
push
jae
test
cmovns
not
xor
xor
mov
out
and
mov
xor
fwait
jecxz
adcb
js
pop
orl
add
or
rcrl
scas
jle
adc
mov
mov
dec
adc
jae
push
das
mov
pop
das
dec
shr
jle
add
jnp
jbe
mov
adc
popa
scas
mov
sbb
les
inc
sbbl
or
out
jns
mov
lock
adc
addl
ror
aaa
fimull
ficoms
aaa
nop
inc
cltd
sbb
adc
mov
and
das
adc
adc
dec
add
sub
and
sub
dec
popf
add
pop
es
lods
shl
ret
into
sbb
cmp
xchg
test
sub
xchg
testl
popf
addr16
and
movsl
rorl
scas
aad
mov
outsb
or
add
fmul
adc
push
int3
inc
jmp
sub
repz
xor
fldt
test
add
mov
in
push
int
jbe
cs
mov
xchg
and
paddb
lods
and
cmp
xor
adc
dec
adc
aad
fldcw
popf
mov
leave
imul
push
xor
or
aad
cmp
fcmovnb
cs
pop
cmp
lret
test
push
lret
sarb
mov
ret
stos
mov
and
ficomps
mov
dec
sbb
add
push
hlt
inc
pop
rep
jl
aam
mov
xchg
arpl
xchg
xlat
push
hlt
stos
lds
imul
int3
add
mov
in
xlat
cmp
sahf
loop
stos
movsb
ss
adc
add
lahf
mov
imul
loop
je
data16
int3
mov
rcrl
stc
push
cld
cmpsb
push
out
pop
iret
es
test
mov
xchg
notb
pusha
xchg
mov
aas
sub
or
lds
mov
stos
dec
in
add
push
loopne
rcll
cmp
je
jne
ja
push
fiaddl
xchg
lods
jae
pusha
push
sub
pop
fsts
dec
mov
cmp
dec
aad
aas
bound
add
and
mov
xchg
push
repz
rol
mov
movsb
into
pop
pusha
mov
out
xchg
divl
jnp
adc
sbb
cld
mov
repnz
sbb
mov
aaa
lret
in
aad
je
adc
pop
and
xor
vpcomuq
clc
mov
add
test
ret
bound
imull
push
mov
ret
fisubs
or
aad
adc
mov
push
mov
or
stc
test
cmp
and
sbb
xchg
adc
pop
xor
pop
popa
mov
and
in
adc
pop
jge
cltd
push
pop
stos
mov
push
in
xchg
cmp
insb
mov
push
sub
shll
xchg
xor
adc
sub
test
in
jae
in
hlt
jo
imulb
cmp
loope
or
or
clc
outsb
rclb
popa
jecxz
out
dec
pusha
cmp
mov
stc
gs
pop
ds
lahf
gs
dec
adc
jae
mov
mov
das
pop
xor
cmp
sbb
out
jbe
repnz
cmpb
inc
pop
mov
sti
decb
or
dec
and
inc
fdivl
lds
call
int3
shrl
stos
add
cmpsb
push
pop
adc
jl
inc
pop
push
test
mov
xchg
loopne
movsb
mov
inc
jle
cwtl
cmp
mov
jae
pop
add
dec
shlb
scas
aad
test
leave
cmpsl
fistpl
push
mov
shr
test
mov
pushf
pop
pop
sub
popa
aas
shll
std
mov
movsb
jo
popf
sarl
movlps
push
cli
int
les
clc
roll
scas
jns
and
jmp
xchg
push
pop
pop
dec
lcall
or
xchg
nop
pop
cmc
ss
mov
or
dec
sbb
test
or
call
movsl
js
mov
or
cmp
aam
push
clc
push
mov
mov
adc
lret
cmp
std
xchg
imul
icebp
cmp
push
dec
sub
ret
xlat
lock
xchg
pop
lods
adc
mov
leave
insl
cmp
imul
mov
sub
out
daa
mov
jb
pop
pop
imul
mov
sub
bsf
inc
sti
js
aad
and
call
mov
dec
sub
inc
in
push
sub
std
cmp
sub
push
movsb
loope
fiadds
int3
aam
push
pusha
ss
mov
lret
mov
lock
mov
lds
imulb
popf
lret
push
push
mov
mov
dec
lahf
jle
pop
mov
push
out
mov
lds
negb
pop
jb
jl
rep
loopnew
mov
jmp
push
jle
or
xor
js
aad
lahf
dec
xor
dec
or
addr16
add
test
mov
adc
push
inc
repz
mov
cmp
add
movsl
push
clts
jnp
jns
lcall
arpl
repz
xchg
lock
insb
std
inc
mov
and
jns
insb
jge
ds
lods
add
mov
push
cmp
loopne
mov
and
insb
int3
mov
mov
sbb
scas
jns
clc
jl,pn
sysexit
subl
cmp
adc
push
inc
dec
ds
std
bound
pop
sub
push
leave
loopne
mov
es
sub
xor
das
mov
push
sbb
pop
cmpsl
push
add
dec
cmp
and
out
xor
cwtd
hlt
icebp
mov
rolb
stos
xchg
pop
push
push
xor
into
dec
xor
add
fnstenv
mov
aas
insl
xlat
subb
les
rcrl
ret
dec
jns
loope
stos
push
push
pop
imul
iret
icebp
sar
pop
sbb
in
cmc
rol
pop
cmc
jo
or
jp
xchg
add
or
rcrl
lahf
stc
lea
push
out
test
adc
mov
outsb
pop
es
inc
mov
sar
add
movsb
push
dec
push
xor
cld
jo
sbb
dec
xchg
pop
and
ds
jg
sti
insl
cmp
dec
test
or
pushl
xchg
add
sbb
inc
and
add
nop
pop
lret
inc
enter
lret
rclb
pop
leave
sub
rcrl
jg
sub
cwtl
and
dec
mov
and
dec
xchg
pop
cld
add
adc
leave
and
xlat
arpl
test
inc
cmpsb
gs
xchg
sbb
mov
iret
sbb
stos
int
scas
push
dec
in
xchg
scas
insl
mov
mov
pop
jg
mov
push
cld
adc
ss
rcr
es
pop
out
stos
pop
mov
lock
fucom
fs
cmc
mov
cmp
push
loopnew
shl
fbstp
cmc
call
gs
xor
pushf
dec
mov
dec
test
fwait
aaa
mov
fdivl
inc
adc
les
cmp
fldl
mov
jp
sub
aas
ret
hlt
fcompl
dec
inc
dec
ljmp
icebp
xchg
dec
scas
push
mov
jo
insl
sbb
nop
aaa
mov
fwait
jbe
pop
push
das
and
filds
jae
test
stos
or
mov
shrb
cmp
add
dec
roll
push
pop
inc
test
fadds
call
mov
sbb
dec
push
mov
add
idivl
leavew
jne
inc
movsb
add
dec
es
subb
jnp
inc
xor
mov
popa
and
cs
mov
gs
pop
das
mov
push
mov
adc
shl
xchg
call
sbb
jg
or
inc
pop
add
lahf
ret
xor
push
adc
dec
pop
sub
adc
xor
fs
mov
cmp
fidivrs
test
fwait
leave
je
jmp
out
gs
or
insb
bound
stc
pusha
and
pop
pop
sbb
ret
lods
aad
or
jns
popa
aad
sub
addr16
jae
sbb
mov
mov
sbb
push
cltd
std
cmp
mov
imul
gs
jp
clc
cmp
mov
lock
stos
insl
insb
rclb
test
adc
xchg
aad
push
jb
sbb
mov
in
sahf
adc
mov
mov
cli
cmp
loope
jge
and
cs
clc
fcoml
sub
jae
xchg
imul
xchg
xchg
xor
sub
shll
sbb
mov
mov
sbb
imul
dec
mov
test
pop
out
xchg
nop
ficompl
jne
aam
mov
push
pop
push
jle
adc
test
jge
pop
or
daa
dec
inc
outsl
test
sub
mov
stc
ret
ret
pop
test
sbb
add
xchg
mov
xor
in
lea
pop
stc
sbb
fistl
inc
rep
mov
push
xor
pop
sbb
cwtl
inc
mov
daa
push
shll
mov
sub
inc
cmp
inc
add
rcl
loop,pn
repnz
xor
int
test
fnsave
int3
les
cmc
gs
sti
test
sbb
in
xchg
jo
sbb
pushf
mov
lret
xchg
sbb
inc
cltd
push
das
sub
dec
pop
inc
push
pop
mov
sub
push
lcall
popf
pop
jg
lahf
loope
add
mov
shlb
xlat
push
mov
je
test
lret
push
mov
loopne
mov
add
loopne
cmc
sbb
repz
dec
js
sahf
xor
call
iret
sahf
pop
icebp
add
dec
pop
cmpsb
jmp
hlt
pop
rolb
lds
in
and
fmuls
enter
add
or
push
add
in
pop
jmp
ret
test
mov
movsl
jbe
icebp
xchg
jne
inc
sbb
dec
jg
scas
cmp
ficomps
inc
dec
pusha
sbb
xor
scas
or
jbe
in
fimuls
sub
ss
loopne
jae
sti
cs
in
ret
data16
lcall
fs
jecxz
jp
add
push
or
or
inc
stos
pop
mov
test
outsl
andb
mov
mov
jns
stos
dec
fisubl
movsb
jg,pn
jae
mov
or
lret
jne
add
jle
test
hlt
loop
mov
das
daa
data16
into
insb
mov
test
stc
mov
in
xor
cs
jbe
lea
outsb
xchg
test
pop
xchg
push
lods
pop
loopne
cltd
dec
xchg
mov
push
mov
ljmp
call
subl
jg
stos
cmpb
cmp
pop
lcall
jnp
insl
daa
fmulp
push
test
pop
xchg
adc
in
out
add
jbe
rcr
cmp
mov
xor
mov
add
lret
mov
mov
push
sti
push
cmc
dec
push
xchg
jb
sahf
jge
aam
clc
xchg
test
jg
fsub
aam
loop
dec
add
fstps
adc
and
xchg
or
dec
shlb
dec
addr16
cmp
pop
push
adc
push
adc
sti
mov
inc
mov
jae,pn
sub
fdivs
sub
stc
sub
cmp
adc
roll
aas
sbb
outsb
movsl
or
sub
sbbb
divb
insb
or
or
nop
add
shrb
jbe
xchg
imul
or
sbb
shlb
cmp
jae
cmp
incb
fdivr
rcr
and
sub
ljmp
iret
shl
add
xchg
pop
dec
cmpsl
leave
sbb
movsb
popa
inc
cmc
mov
cmpsl
pushf
and
push
xchg
jp
push
xchg
sub
ds
jae
out
mov
jae
xchg
sbb
iret
and
test
xchg
ret
lods
movsl
add
popf
xchg
fld
aam
mov
ds
popl
sbb
rorb
jle
cmpsl
fistps
aaa
sbb
cld
sar
cmp
sarb
ss
jb
xchg
cltd
xor
or
cmp
imul
fcoms
jbe
cmpsb
mov
stos
ss
jmp
rcrb
mov
or
adc
push
outsb
inc
dec
stos
inc
mov
aaa
jno
outsb
push
or
aas
pop
ret
cmp
out
test
nop
testb
sbb
ss
rcll
popf
data16
jbe
sbb
push
jecxz
faddl
call
inc
icebp
imul
add
inc
cltd
enter
pusha
jecxz
mov
stos
enter
test
or
dec
shr
mov
pop
add
inc
stc
cmp
cs
adc
sbb
push
ret
gs
xlat
lods
fcomps
cmpsb
add
icebp
inc
cmpsl
jl
imul
leave
fnstsw
pop
inc
push
mov
and
cmpsl
lods
lret
add
sbb
add
add
add
enter
clc
xor
pop
xchg
cmp
mov
inc
mov
ret
lods
sbb
shrb
add
jp
and
cmp
repz
sub
dec
pusha
fidivrl
and
sbb
mov
inc
add
push
outsl
stc
or
roll
outsl
popf
stc
test
clc
xor
xor
adc
xchg
jecxz
js
out
push
push
adc
dec
mov
jl
dec
cld
pusha
mov
aas
pop
orl
jecxz
mov
inc
lock
movl
icebp
and
pop
jo
cli
jb
ret
xchg
imul
jnp
aam
lods
adc
mov
jmp
mov
lcall
or
adc
push
xchg
add
push
scas
mov
cwtl
out
fsubp
jecxz
dec
int3
mov
in
adc
out
cs
fisubrs
or
mov
sub
mov
xchg
outsb
jns
mov
int
mov
pop
ret
mov
out
out
inc
sub
cmp
jae
scas
cltd
mov
push
dec
mov
negb
mov
jno
xchg
fcmovbe
cwtl
pop
sbb
push
rolb
mov
ljmp
adc
and
dec
sbb
notb
adc
xchg
lret
sbb
daa
test
jae
out
out
jecxz
pop
or
dec
ss
out
inc
shrb
sub
test
ret
jecxz
mov
insl
mov
dec
fisubs
rorb
xor
mov
je
lock
push
add
jno
sbbl
fcoms
hlt
out
or
imull
xlat
cmp
mov
push
inc
test
pop
mov
pusha
loop
cld
and
jp
clc
add
xor
dec
fldenv
push
jl
sbb
jbe
addl
lds
xchg
push
aad
jp
rcll
and
sbb
cmp
fdivrs
sub
xchg
jecxz
enter
mov
outsb
lret
mov
sub
or
or
aad
movsl
and
scas
xchg
and
pop
inc
ljmp
in
sbb
andb
out
loopne
clc
inc
call
cs
push
pop
stos
mov
fadd
pusha
push
and
sbb
sarb
pop
es
cmc
or
mov
xchg
out
js
out
dec
icebp
test
adc
out
rclb
aad
add
adc
adc
xchg
mov
jbe
xchg
jbe
mov
lds
dec
adc
gs
xor
fldcw
mov
and
icebp
mov
aam
push
outsl
out
inc
pop
out
and
outsl
imul
xlat
xor
lcall
imul
dec
sbb
nop
xchg
xchg
pop
repnz
jp
sub
repz
mul
cmp
jmp
fisubl
ja
adc
xlat
xchg
ds
scas
mov
jmp
push
cmp
ret
in
cmc
or
mov
lds
jae
aas
add
insl
rcrl
clc
adc
mov
adc
xchg
cwtl
sub
flds
pop
push
push
mov
fnstenv
fs
push
data16
das
cltd
jl
shrb
push
out
cwtl
sub
mov
arpl
or
and
or
cmp
insl
mov
inc
jge
adc
adc
xchg
lret
addr16
ja
cmpsl
addr16
add
mov
xchg
and
jns
inc
sub
lcall
cld
scas
or
popf
std
bound
mov
push
out
int3
movaps
out
pop
shll
insb
xchg
dec
mov
cmp
sbb
xor
mov
cltd
and
les
xchg
cmpsl
cmc
dec
mov
mov
sbb
outsb
xabort
cmc
fisttpl
mov
cmpsb
fmuls
inc
adc
mov
xor
sub
shrl
mov
add
cmp
jno
das
mov
mov
sub
arpl
aam
inc
pop
xor
outsb
idivb
dec
orb
push
stos
xor
ret
pop
es
push
stos
xor
sti
fisubrs
jecxz
pop
add
xchg
adc
aam
pushf
mov
nop
pop
push
lods
mov
fwait
sahf
fwait
jnp
cld
sbb
stc
jge
dec
decb
fchs
cmp
cltd
sub
mov
stos
mov
push
fimuls
inc
push
movsl
and
xor
mov
ds
mov
lds
push
dec
int3
stc
scas
mov
xor
jbe
pop
push
enter
ret
or
mov
sbb
mov
lahf
push
push
mov
cwtl
mov
mov
sub
adc
adc
cmpsl
js
sub
fcomps
lds
push
mov
sub
xchg
xchg
dec
ficompl
in
sbb
mov
jno
loope
sti
push
push
cmpsb
jl
test
or
popf
pop
xchg
xchg
mov
out
icebp
arpl
pushf
jo
outsl
mov
dec
add
sbb
sub
or
lock
out
and
mov
jb
sub
jae
or
loop
rorb
cli
push
mov
movsb
dec
mov
ljmp
sub
lods
dec
xchg
outsb
rclb
jne
push
rcll
enter
mov
dec
or
aaa
shll
push
testl
pusha
stos
sbb
fs
jge
shrl
xchg
loop
rorl
inc
xchg
jnp
push
loop
aad
xor
mov
imul
sbbb
fwait
in
mul
mov
pop
or
aas
pushf
pop
test
std
mov
dec
clc
and
sbb
test
sti
imul
dec
or
imull
aas
inc
dec
jmp
push
mov
and
xor
push
jb
xchg
sub
dec
dec
int
cli
fdiv
xchg
out
and
jl
out
cmc
test
push
cmp
mov
mov
sbb
sub
daa
stos
pop
int
lret
xlat
adc
aam
nop
fstpt
push
data16
addr16
call
pop
rolb
add
and
xchg
mov
pusha
sub
popf
push
xor
rcll
add
cmp
dec
or
daa
int
leave
cmpsl
rcll
pop
nop
and
notb
xchg
fs
fcom
test
xchg
rolb
enter
mov
jno
pop
push
stos
push
mov
test
xor
aam
movsl
lcall
test
jo
mov
push
andl
jno
adc
imul
mov
inc
push
rorb
cmp
dec
xchg
mov
inc
bound
adcb
pop
in
push
push
rcr
or
add
lahf
inc
xchg
repnz
imul
aad
outsb
xor
ljmp
movsb
js
push
mov
xorl
push
lcall
stc
add
push
ret
push
lea
in
insl
inc
jmp
in
ss
mov
cmp
mov
xchg
iret
test
mov
gs
pusha
sbb
push
movsl
shr
gs
in
hlt
cmp
movsb
mov
cld
dec
loopne
fwait
push
shll
jecxz
xchg
dec
sbb
insb
sti
out
shl
mov
xchg
sbb
iret
rcrb
or
out
js
jne
cmp
es
sub
push
pop
icebp
cli
inc
pop
ja
insl
adc
cmp
push
add
mov
outsl
and
inc
jle
inc
push
mov
mov
dec
aas
jg
int3
ds
xchg
loope
cmp
jg
inc
xchg
pop
pushf
filds
test
xchg
cmpsl
lods
inc
pop
das
jle
jp
add
push
push
or
dec
in
or
add
shlb
inc
fwait
out
ljmp
cmp
mov
mov
sahf
mov
mov
and
mov
adc
mov
mov
imul
in
inc
std
lahf
and
dec
mov
nop
arpl
cmp
xor
pop
aam
push
dec
mov
icebp
xor
add
mov
xchg
in
xchg
je
sbb
push
xchg
mov
pop
add
sbb
and
push
das
lcall
lods
mov
push
rolb
in
xor
sub
into
fcomp
mov
out
imul
dec
sbbl
lret
add
xchg
sbb
shll
add
loope
xor
mov
faddl
sti
pop
adc
or
push
dec
or
pop
mov
mov
sahf
mov
push
outsl
xchg
js
mov
cmp
pop
fs
fdivs
leave
insl
or
push
lahf
pop
aam
dec
mov
push
jb
or
cmp
inc
sbb
insb
into
rol
xchg
xor
add
xor
xchg
loop
add
mov
mov
addb
bound
sub
inc
iret
push
ds
mov
pop
sbb
mov
vcvtpd2ps
cmp
mov
movsl
insb
jle
repnz
pop
out
push
mov
dec
push
insl
das
or
nop
lea
inc
das
sub
push
mov
enter
mov
mov
fldenv
stos
cltd
jns
or
mov
mov
les
cmp
lcall
aad
fiaddl
dec
mov
scas
ficoms
inc
push
and
ret
xor
xor
imull
stos
movsb
sbb
lcall
cmc
xchg
test
pop
aaa
jbe
add
mov
inc
or
push
cmp
sub
pop
cli
cltd
stos
push
mov
mov
cmpsb
lods
stc
jmp
shrb
xchg
shlb
aaa
mov
adc
fisubrs
cmpsl
pmulhw
rolb
aam
xlat
nop
dec
cmp
lock
jae
lcall
roll
inc
add
imul
lock
jbe
or
pop
das
cmpsb
notb
pop
mov
hlt
push
or
inc
fidivl
jmp
dec
mov
iret
negb
jb
mov
lods
adc
mulb
pop
push
insb
aad
lret
mov
ds
neg
adc
divb
xchg
inc
mov
sahf
das
or
mov
jbe
mulb
jge
or
stos
int
or
mov
test
xchg
leave
sbb
mov
mov
les
cmp
lahf
mov
aam
dec
iret
cli
xchg
fists
xor
repz
inc
mov
aas
nop
xchg
ljmp
push
jae
pop
or
and
jae
loopne
arpl
xchg
dec
mov
sbb
fcmovb
into
int3
mov
sub
add
sub
daa
jge
jne
xchg
fisubl
addr16
fbstp
sub
mov
push
jno
out
cmp
shll
jg
shll
scas
stos
jmp
imul
push
cmpb
mov
and
add
movsl
arpl
mov
loop
pushf
inc
cmp
xchg
xor
mov
fwait
cmp
adc
lods
in
rclb
mov
cmp
in
push
lret
inc
scas
mov
xlat
sbb
lret
lods
and
insl
cmp
jbe
inc
rcll
xlat
inc
dec
mov
addb
xchg
xchg
xorl
jecxz
cmc
loop
das
jbe
mov
add
xor
jle
dec
sarl
je
sbb
or
mov
adc
lahf
insb
mov
data16
mov
sbb
or
adc
imull
data16
sbb
cli
xchg
cli
jg
mov
cmp
inc
and
in
push
mov
mov
mov
mov
aam
data16
lret
lret
inc
and
test
cmova
xor
and
xchg
imul
mov
movl
ds
mov
cltd
enter
shr
xor
lock
cmp
cld
fistl
mov
cmp
mov
add
jnp
mov
jle
cmovbe
and
rorb
sbb
in
inc
mov
popa
jge
add
fisttpll
sub
push
in
mov
dec
xchg
xor
inc
jg
lods
mov
push
push
xchg
mov
pusha
dec
sub
int3
or
adc
jb
push
sub
push
push
push
xchg
in
jg
push
mov
inc
and
adc
adc
pusha
lea
out
adc
in
cmp
pop
dec
xchg
inc
cltd
out
and
inc
xor
loopne
rcll
addr16
pop
rcr
xor
sbb
jg
jmp
xor
stc
movsb
inc
je
mov
push
push
mov
sub
fcmovb
sub
cmp
ret
fstl
jns
push
ja
cmp
push
jo
or
testb
enter
jbe
adc
testb
adc
jae,pn
lods
bound
jne
adc
inc
fmuls
loopne
xchg
jae
mov
negl
out
lcall
insl
add
hlt
rorb
pop
add
and
enter
push
daa
call
data16
push
sbb
sbb
xchg
xchg
sub
incb
or
outsl
cmp
add
mov
aas
cmpb
les
push
mov
sub
add
xchg
into
inc
out
fistps
sbb
loope
popl
add
int
fists
or
sub
mov
js
ja
adc
sbb
call
cmp
mov
lret
loop
xchg
rep
mov
ljmp
pop
imul
mov
outsb
mov
pop
cmpsb
xchg
cld
add
les
inc
out
popf
and
in
push
cmc
repnz
push
sbb
sub
clc
xchg
lods
mov
mov
shlb
stos
addr16
xchg
push
lea
or
in
mov
push
and
pop
jnp
inc
hlt
push
je
dec
jno
and
inc
repnz
jbe
and
fwait
mov
scas
adcl
xchg
and
mov
cmp
xor
lods
ds
cwtl
pusha
iret
repz
push
test
enter
cmp
sbb
sti
jge
push
mov
sbb
test
clc
pop
jb
out
fidivrs
daa
aaa
mov
push
repnz
cmp
jbe
and
sbb
stos
out
mov
xor
cltd
xor
fs
hlt
outsb
rcrb
jp
cltd
addr16
jmp
push
lock
pop
sub
add
int3
push
mov
sbb
aad
xchg
lods
addr16
add
inc
jle
mov
out
xor
pop
fcomp
mov
and
jmp
cmp
bound
jns
inc
mov
rcl
add
outsl
sbb
dec
mov
jecxz
xchg
sbb
sub
jno
clc
popf
mov
mov
mov
push
mov
adc
int3
pop
jl
or
inc
mov
test
loop
test
and
push
hlt
cmpsb
outsb
jae
rcrl
or
fstpt
dec
in
xchg
fs
dec
mov
std
leave
out
ss
outsb
out
pop
mov
xchg
es
cld
fnstenv
push
push
mov
sbb
pop
lret
scas
xor
leave
mov
push
div
insl
mov
lldt
mov
rorb
lock
jle
dec
fcom
push
or
out
add
rorl
sbb
cmc
out
sti
inc
out
arpl
push
repnz
xor
mov
ret
mov
jp
sti
jecxz
ljmp
mov
in
pop
pushf
jg
out
inc
icebp
ret
xlat
sub
push
jb
adc
idivb
enter
jl
push
mov
cli
and
cs
mov
and
inc
insb
imul
cmp
aas
pop
mov
negb
addb
nop
inc
push
mov
push
jmp
jns
daa
inc
dec
jecxz
sbb
jg
sbb
movsl
ret
in
orb
stos
mov
push
mov
push
xor
out
stc
cmp
adc
mov
sbb
sub
stos
xchg
push
loopne
lcall
lods
ret
dec
aad
aad
test
in
imul
jp
jg,pt
dec
mov
ja
stos
push
sbb
sbb
in
outsb
lahf
scas
inc
insl
addb
outsl
mov
int
test
sub
push
cmp
add
add
push
push
xorl
pop
xor
cmp
xor
test
jae
mov
aas
repz
cmc
fidivs
mov
or
divl
faddl
mov
inc
jmp
clc
sbb
jno
dec
bound
cmp
add
les
cmpsb
xchg
ds
aaa
mov
fstpt
dec
loopne
data16
pop
gs
sub
mov
jns
int3
cwtl
inc
xor
push
xchg
add
cmp
cmc
cmp
pop
imul
addr16
dec
sub
sub
cmc
loop
adcb
xchg
add
in
push
fisubs
out
sarl
jg
ja
jl
or
icebp
scas
loop
dec
hlt
lea
mov
pop
cltd
or
add
mov
xor
cltd
pop
mov
imul
xchg
or
fsts
push
sub
xchg
or
and
ds
add
xlat
mov
xor
mov
popf
adc
pop
dec
loop
adc
sti
faddp
sahf
je
test
fildll
xor
and
arpl
decb
inc
mov
and
mov
mov
out
cmp
pop
inc
jne
mov
iret
decl
inc
out
xchg
mov
sub
cmpsl
sbb
addr16
push
test
inc
sbb
pop
xlat
lods
mov
out
xchg
sbb
xlat
dec
dec
out
arpl
pop
xlat
mov
idivl
ljmp
push
popf
sti
adc
jnp
aam
mov
xor
mov
jge
pop
jnp
aad
loope
aaa
ljmp
pop
cmp
cli
fisttpl
lods
adcb
cmp
into
out
inc
sahf
mov
xchg
add
int3
out
jbe
sub
push
mov
rorl
dec
js
iret
pop
js
loopne
mov
pop
cld
pop
jg
cld
mov
xlat
push
pop
adc
or
xor
jge
int3
fcompl
test
idiv
xor
jl
cmc
stos
fsubrs
mov
or
adc
xchg
scas
cld
mov
shl
sbb
mov
sbbl
movsb
lods
dec
pop
arpl
in
ja
fucom
push
jnp
mov
dec
stos
inc
jno
and
jbe
and
cltd
arpl
rorl
repnz
dec
insl
push
pop
clc
icebp
pop
in
gs
push
mov
dec
inc
mov
cmovnp
dec
or
adc
xor
or
icebp
in
xchg
lock
adc
push
sub
enter
aaa
lret
iret
test
inc
ja
sti
dec
insl
ja
icebp
ret
pop
push
xchg
jae
dec
js
adc
das
ljmp
mov
add
lods
jg
scas
adc
push
mov
mov
lods
xor
jp
xchg
add
addb
insb
lods
mov
mov
or
cmp
jo
stc
xorl
xchg
adc
js
addb
pusha
dec
sbb
mov
mov
lock
mov
push
fldenv
insl
popf
adc
sbb
fwait
cmp
dec
shlb
dec
mov
lcall
pushl
lds
or
cmp
scas
mov
mov
push
rorl
addb
push
insb
lahf
and
lea
inc
lock
fiadds
jbe
and
repnz
les
andl
pop
sti
pusha
ret
sub
lret
cwtl
hlt
hlt
mov
jecxz
sub
nop
mov
dec
jl
xor
insb
cmpl
fdivr
lods
dec
jmp
and
inc
mov
inc
test
and
push
mov
les
add
mov
in
sub
cmpsl
ljmp
popf
jle
mov
iret
test
mov
jp
xor
mov
jle
andb
bound
ret
pop
add
cmp
data16
mov
jae
cwtl
sbb
push
into
int
scas
mov
sub
ret
out
decl
lret
cli
push
rol
adc
push
adc
lds
dec
daa
xchg
jg
sahf
bound
xchg
fs
dec
and
jmp
adc
int
pop
gs
or
xor
pop
mov
ror
arpl
xchg
jns
iret
pop
cmc
roll
into
fneni(8087
fstpl
cmc
data16
roll
fs
ffreep
outsl
ret
xchg
push
dec
ret
sbb
push
mov
or
fucomp
or
jp
sub
je
xor
es
add
push
jns
jbe
and
ds
pop
stos
lahf
pushl
fistpl
pushf
lods
pop
cmp
mov
adc
push
mov
fdivrs
jae
pop
xorb
sbb
shlb
mov
repz
fmuls
sub
xchg
pop
outsb
pop
cs
dec
xor
sub
pop
or
cwtl
pop
imul
mov
aam
fimull
nop
xor
mov
or
xchg
gs
xor
push
pop
cmpsb
mov
dec
sub
jns
lods
pop
pop
jbe
mov
scas
add
pop
dec
mov
add
and
stos
pop
sbb
jecxz
mov
xor
lds
mov
mov
fxch
test
or
int3
ss
xchg
subb
mov
aam
pop
jo
xchg
es
cmc
push
lret
fistl
inc
mov
fdivrl
test
sti
lahf
sar
dec
xchg
shrl
cmp
xor
jae
mov
add
aad
dec
insl
or
and
push
push
cmp
sbb
loopne
pop
xchg
lds
cmpsb
cmp
sub
fs
pop
adc
aad
stos
jbe
cwtl
fnsave
mov
adc
fildl
sti
push
mov
dec
clc
jb
lahf
jae
lahf
sub
sbb
adc
enter
xchg
jmp
cmpsl
leave
or
into
push
cltd
push
pop
mov
in
jle
imul
mov
out
imul
in
fnstsw
es
or
mov
mov
dec
dec
adc
mov
mov
insl
es
xlat
jecxz
or
mov
adc
iret
cmc
add
jmp
repnz
rorl
jo
sub
push
sub
in
out
xor
sbb
sub
ljmp
jne
sbb
inc
aas
mov
mov
mov
cmpsl
mov
cld
shl
test
pop
cmc
lret
adc
mov
in
cmp
movsl
xorb
xchg
fwait
test
and
imul
dec
push
movb
xor
jle
xchg
adc
fmull
pop
jo
push
insb
loopne
ss
cmp
loopne
test
mov
or
bound
push
dec
ss
inc
sbb
inc
iret
movsb
xchg
mov
sar
add
mov
mov
into
mov
in
push
lea
xchg
sbb
sti
js
out
in
pushf
out
inc
lods
fists
lock
jne
pop
imul
cwtl
aam
test
pusha
or
push
test
xor
movsl
jcxz
pushl
ljmp
mov
imul
stos
repnz
xor
adc
arpl
js
dec
push
ret
arpl
add
jecxz
mov
xor
xchg
movsl
or
cltd
or
cmp
in
scas
addb
or
and
dec
mov
inc
arpl
test
loopne
mov
sbb
mov
pushf
int
stc
push
pushf
sbb
add
mov
aad
sub
pop
ja
fiadds
xor
and
cmpsl
jp
inc
popf
inc
ljmp
xchg
fnstsw
mov
inc
fcompl
jnp
in
pop
sti
adc
stos
roll
cmp
or
fmull
dec
sahf
or
lods
adc
dec
in
mov
pop
sarb
jle
lea
jecxz,pt
lcall
movsl
jb
mull
jne
loopne
sbb
sbb
adc
loop
cmp
pop
add
xchg
imul
nop
out
xchg
pop
sbb
js
adc
in
cs
mov
loop
test
std
repz
stc
fidivrs
popa
or
xor
sti
and
scas
jno
jno
int3
rorb
repnz
cmp
ret
inc
repnz
cltd
xlat
movsl
out
cmp
sbb
or
daa
int3
add
movsb
rcrb
popf
fnstcw
push
out
mov
emms
lods
popa
insb
inc
out
add
outsb
mov
mov
xchg
pop
out
pop
lods
dec
lds
sbb
mov
leave
out
mov
addr16
cli
fldcw
jle
cmpsb
add
push
lahf
jae
cmp
sub
pop
mov
jns
mov
xchg
mov
ljmp
sarl
test
pop
add
push
mov
mov
xor
xchg
scas
repnz
inc
push
pusha
push
mov
xchg
lcall
js
pop
icebp
or
sbb
leave
and
pop
inc
icebp
addr16
out
inc
sbb
pop
lea
dec
test
sahf
and
sahf
movsl
mov
adc
jo
jg
push
nop
fldl
incb
pop
xchg
add
xor
xchg
cltd
jp
stos
cwtl
pop
inc
push
dec
enter
push
gs
stc
sub
outsl
rcrl
pop
aas
xor
push
mov
mov
inc
or
cmc
fnsave
xorl
add
xchg
xor
es
stc
fwait
ja
and
scas
push
es
lcall
inc
subb
xchg
jne
pop
push
sub
fnsave
sub
loope
xchg
jae
lret
inc
lea
mov
stc
int
in
push
aaa
pop
jno
aam
add
icebp
xchg
lahf
nop
aaa
out
repnz
adc
int
ljmp
jmp
add
xor
ret
call
xchg
inc
add
sarl
jecxz
add
cmp
or
push
ja
inc
in
js
dec
push
pop
sbb
hlt
pushf
movsl
call
xor
fistps
add
out
jnp
sbb
or
fdivrl
ret
sub
sti
ret
push
shrl
xorb
pusha
sahf
sahf
mov
dec
xchg
movsb
cld
cmp
jl
xchg
mov
std
std
call
jle
fcmovne
fnstenv
lcall
jo
dec
ljmp
cmp
sbb
inc
cmp
and
out
jmp
xor
scas
mov
cmp
lea
xlat
mov
jge
cmpsb
std
es
dec
fwait
fs
repnz
ja,pn
jno
cmpsl
insl
enter
add
inc
je
imull
iret
xchg
lds
mov
adc
jns
shll
dec
repnz
pop
xchg
push
or
or
xchg
lock
outsl
aam
mov
jnp
xlat
push
jb
movsl
lds
and
push
shlb
lret
cmp
cmc
loopne
cltd
lock
cmp
ljmp
nop
add
adc
aam
mov
add
mov
dec
mov
mul
gs
jbe
movsb
cmp
lods
or
scas
dec
inc
cltd
cmp
pop
inc
push
cmp
pop
insl
mov
inc
mov
and
test
sbb
cmp
enter
mov
inc
shlb
call
push
add
dec
cmp
fwait
sti
sub
xchg
fstpt
fwait
sar
sbb
daa
mull
inc
shl
add
pop
hlt
ss
fdiv
into
fdivs
jl
dec
insb
xchg
or
sub
lahf
repnz
sbb
ds
cmp
dec
adc
ficomps
xchg
cmp
ss
in
xlat
pushf
movsb
out
ds
add
jne
shrb
mov
push
add
movsl
icebp
jbe
and
jo
ret
outsl
subl
push
pop
cmp
stos
jns
gs
jnp
mov
and
add
fidivrs
sbb
dec
fidivrl
test
lret
jb
mov
das
mov
add
inc
or
xor
push
fnstsw
pop
jecxz
hlt
and
das
outsb
mov
stc
push
mov
lods
decb
and
sti
divl
or
test
scas
out
mov
cld
xchg
dec
mov
xor
add
mov
test
ds
lret
loope
imul
xor
adc
mov
pop
or
xchg
xor
or
mov
or
xchg
dec
lods
gs
iret
fsubs
xor
dec
arpl
loopne
lea
xchg
jge
push
sbb
pushf
push
pop
cmp
mov
popa
fdivrl
jl
fiadds
shl
xor
sub
push
jno
dec
pop
xor
rorb
idivb
loope
adc
sbb
aam
sti
insl
sub
sbb
in
cmp
cli
adc
loop
clc
enter
aaa
fisubs
pop
sub
mov
rcrl
mov
xor
mov
mov
mov
sbb
fildll
jl
aam
jns
adc
cmp
mov
out
mov
cmp
xchg
inc
adc
pop
ret
and
xlat
scas
add
aam
lock
rolb
int
fwait
call
popa
push
mov
gs
add
decb
jmp
or
shll
jp
push
and
vminss
add
inc
cmp
imul
sub
pop
cmpsb
pop
ds
mov
int
mov
dec
or
fs
push
daa
jo
jae
arpl
and
or
mov
dec
mov
sub
outsl
push
pop
daa
mov
push
hlt
or
cmp
mov
in
or
mov
mov
jbe
xchg
test
insb
repz
sbb
adc
rorb
mov
pop
into
movsb
push
outsl
das
ja
pop
out
mov
xchg
cmpsb
push
scas
xor
push
ja
mov
outsl
notb
out
xorl
pop
nop
ficomps
mov
pop
cli
inc
sbb
inc
jb
sbbl
scas
pop
lret
jns
fisubrl
enter
pop
arpl
xlat
rorl
iret
repnz
xlat
mov
sbb
mov
fdivs
xchg
std
ds
rcll
cs
mov
gs
sbb
mov
das
cmp
out
test
jbe,pn
push
lea
arpl
arpl
imul
fisttps
mov
sub
push
sub
xor
pop
jns
daa
out
mov
cmpl
or
icebp
mov
stos
sahf
arpl
inc
xor
mov
sbb
sub
aam
test
sbb
icebp
loop
hlt
mov
fbstp
ret
stos
adc
mov
xchg
push
push
outsl
repnz
push
and
dec
shlb
clc
push
xchg
dec
adc
and
ss
fcompl
push
and
imul
lcall
outsb
es
xchg
jnp
push
push
or
sbb
into
sub
jp
or
fsubrl
jp
mov
imul
pop
push
out
lods
mov
jb
mov
cmp
inc
jmp
dec
andl
push
mov
xor
jno
add
test
imul
addr16
into
int3
mov
xchg
pop
out
fs
adc
adc
lahf
jae
xor
inc
inc
insl
mov
in
movaps
xchg
addr16
pop
adc
sub
jae
and
inc
fisttpll
cs
add
loop
sahf
and
cmpsl
sbb
cmp
clc
cltd
icebp
aaa
outsl
hlt
jge
adc
les
imul
int
jae
xchg
add
icebp
js
fsubrs
ret
shrb
in
in
and
jg
sub
cmp
and
loop
jns
or
ja
jne
sub
adc
je
scas
addb
push
xor
dec
out
scas
dec
xor
fcoms
add
push
push
cmpsl
mov
nop
push
gs
int3
popf
cmp
in
pop
movl
pushl
in
push
cltd
jne
lods
pop
mov
cwtl
add
sbb
or
loopne
lock
sahf
pop
out
das
loopne
dec
inc
xor
mov
out
dec
cmc
rorl
and
sub
addr16
leave
lods
cmp
lods
pop
gs
xchg
jbe
bound
add
dec
test
sti
outsl
mov
push
xchg
and
out
jmp
imul
inc
pop
test
add
shrb
add
inc
out
int3
mov
fs
fnsave
lahf
xchg
pop
rclb
mov
dec
adc
aaa
push
jae
pop
jecxz
mov
sub
js
ljmp
sub
xchg
push
pop
es
jo
cltd
push
adc
je
jbe
cmp
push
inc
fwait
mov
inc
cmp
js
outsl
inc
push
push
mov
jo
stc
in
xchg
sbbl
mov
ljmp
mov
sub
jno
scas
xor
xor
xor
jns
dec
mov
xchg
push
xlat
leave
test
adc
push
pause
push
fwait
add
ret
xor
pop
lret
rep
mov
leave
push
mov
loopne
mov
jnp
sahf
fdivrp
jecxz
xchg
shr
push
in
inc
push
dec
mov
dec
notl
add
mov
or
lock
or
mov
insb
xlat
xor
int3
mov
popl
sbb
mov
sbb
lods
mov
sub
ds
mov
adc
ja
jecxz
les
dec
jge
clc
test
cmp
fcmovnu
outsl
roll
cmp
loop
xchg
inc
sbb
cmp
orl
push
test
fistpll
inc
lods
cs
or
fsubrl
mov
subl
sbb
rcll
push
dec
out
fistps
cli
jbe
inc
mov
add
mov
sarb
in
loop
cmp
aam
xchg
push
or
das
xor
sbb
add
mov
or
les
mov
stos
jmp
xchg
ret
dec
push
mov
cmpb
cmpsl
and
sbb
loope
jl
add
fmuls
ss
cwtl
scas
orl
add
xchg
loope
jmp
stos
pop
nop
pop
cmpsl
jl
jle
insb
xchg
xor
bts
aad
test
dec
es
add
fsubrl
cmp
movsl
js
jns
out
int
hlt
cmp
add
mov
aad
dec
pop
fcoms
loopne
negl
mov
fcoml
fisttpll
xchg
ret
dec
scas
mov
xor
sbb
repz
bound
sub
lahf
cmp
jecxz
lret
mov
jne
cmp
ds
cli
movsl
lret
push
je
dec
not
lret
inc
add
repz
out
add
mov
mov
mov
jo
xchg
pop
out
dec
mov
mov
xchg
add
in
out
inc
into
pop
scas
push
rorl
xor
ret
or
popf
loopne
nop
push
mov
mov
mov
fnsave
outsb
insb
addr16
ja
xchg
sub
ret
pop
out
das
xchg
lret
add
push
and
mov
jno
xor
adc
inc
or
insb
repz
scas
cmpsb
xor
cmp
iret
xchg
jno
pop
hlt
andl
fs
push
inc
out
sbb
mov
hlt
inc
jb
es
xchg
outsb
push
dec
imul
cmp
adc
stos
iret
pop
int
leave
xchg
jecxz
xor
int
inc
outsb
and
dec
xchg
jl
push
pop
lahf
or
jg
sbb
arpl
std
loopne
std
pop
pushf
push
in
xchg
cmpsl
aam
ds
cld
xchg
fwait
sti
dec
xor
cmp
mov
test
pop
add
mov
pop
and
or
pop
inc
fists
cli
pop
cmpsl
ret
shlb
sub
icebp
adc
inc
pop
loop
xchg
filds
jmp
subl
jmp
xchg
pusha
lds
mov
pop
mov
fwait
or
addr16
dec
sub
out
push
cs
xchg
fldt
xor
push
sub
je
add
dec
leave
lods
mov
es
cmpsb
movsl
aas
xchg
jno
mov
in
enter
popa
sar
cmp
jecxz
xor
lock
out
or
fstpt
lahf
pop
shlb
or
push
loop
int
les
insl
adc
je
cld
jmp
icebp
les
pop
lret
repnz
jbe
inc
jbe
adc
out
xchg
call
aaa
xlat
in
bound
mov
orb
dec
inc
push
dec
fdivs
fistpll
fwait
rcrl
fistpll
or
cmpsl
pop
sbb
loopne
xchg
dec
sahf
xorl
mov
mov
int3
sub
imul
cmp
pop
cmp
sarb
add
je
inc
fsts
push
add
xchg
jb
xor
jge
cmc
movsl
addr16
int
push
fcoms
or
inc
pop
insb
stos
push
popf
rclb
mov
cmp
scas
adc
xchg
sarl
sbb
mov
stos
clc
cmc
push
dec
mov
mov
pop
ret
mov
cmc
add
sbb
mulb
mov
jecxz
cs
cmp
inc
jae
sbb
xchg
jmp
imul
mov
jo
mov
mov
xchg
test
gs
cmp
shll
jl
push
rorl
push
jae
mov
popl
dec
and
dec
dec
cmp
rclb
fdivl
ljmp
stos
cmpsb
or
les
icebp
stc
inc
rolb
or
stos
jge
sub
cmpsl
jns
ja
pop
aas
mov
pop
imul
push
jb
add
dec
mov
fmull
mov
pop
xchg
pushf
add
mov
nop
add
outsl
andb
aam
inc
divb
in
lret
pop
inc
ss
into
sbb
rcl
xchg
insl
cmp
sbb
adc
out
jp
or
push
mov
dec
mov
shlb
fs
mov
jle
out
xor
sbb
outsl
xchg
mov
adc
dec
sub
jecxz
pop
loop
ss
lret
add
sbb
cli
dec
lret
std
xor
movsl
dec
fadds
stos
jne
inc
popa
and
insb
nop
pop
xchg
addr16
lods
sti
xchg
inc
inc
stos
jecxz
enter
jg
inc
cmp
sbb
dec
in
enter
jle
cmp
daa
mov
push
rcrb
test
ds
cmp
mov
push
shlb
adc
xchg
aaa
insb
xchg
fsub
add
push
add
movsb
fs
or
add
insb
imul
and
xor
xchg
pop
mov
adc
iret
aam
pop
sbb
scas
mov
add
cmpsl
mov
adc
jl
push
movsb
sbb
dec
cmp
and
gs
and
mov
mov
push
je
iret
fdivrl
inc
sub
out
jae
std
insb
in
or
cmp
mov
fisubs
inc
enter
hlt
mov
pushf
cli
dec
push
jge
lcall
lcall
mov
stos
mov
xor
out
outsl
mov
jmp
add
push
in
outsl
loopne
cmp
mov
lret
push
pop
cmpsb
popa
lods
xor
es
loopne
sub
sub
negb
and
xchg
or
push
aad
mov
or
popa
fst
push
add
lcall
mov
jmp
mov
stc
divb
sub
jae
sub
jl
mov
and
add
sub
mov
ds
push
leave
inc
sbb
ja
push
and
xchg
outsl
testb
jp
sahf
ficomps
arpl
ret
sub
test
mov
add
jbe
or
mov
and
dec
stos
jno
cmp
or
push
arpl
dec
pop
call
cmp
dec
or
jle
push
mov
xchg
mov
xorl
lock
scas
test
inc
aad
mov
rolb
in
sub
push
ds
add
jno
mov
pop
jne
dec
ss
cs
mov
adc
mov
mov
outsl
cmp
jg
pop
pandn
inc
sbbb
inc
arpl
lock
sbb
xchg
cmp
xor
js
or
fldcw
std
jge
xlat
insl
test
dec
or
sbb
in
push
hlt
lret
arpl
jae
dec
clc
ljmp
hlt
out
loop
push
fcmovu
rclb
or
lock
stos
in
jecxz
xchg
pop
or
out
test
lea
inc
jecxz
lods
push
insl
repnz
xchg
loope
xor
decb
test
xchg
dec
shlb
xchg
fisubl
fildll
enter
mov
sbb
adc
sub
xchg
push
jmp
sub
das
sbb
loope
xchg
xchg
sbb
sub
jmp
xor
andb
cltd
popf
int3
jl
mov
testb
pop
adc
push
enter
mov
push
jns
jns
adc
fisubrl
rolb
fsubs
lods
stos
mov
je
or
xchg
sarb
and
incb
out
mov
mov
fcmovbe
adc
and
push
fisttpll
fyl2xp1
insb
xlat
scas
cmpsb
insl
lods
push
sbb
ret
xchg
add
cmp
adc
dec
outsb
loop
rep
outsb
pusha
ret
fwait
xchg
clc
lea
jg
sbb
out
xor
js
inc
inc
js
cmp
push
adc
icebp
sbb
sti
sarb
jae
jns
sub
int3
test
cmpsb
sbb
lahf
sub
iret
or
stos
mov
into
fisubs
test
jnp
cld
pop
test
and
fs
jbe
xchg
negb
inc
inc
push
gs
pop
fs
xchg
xor
push
dec
push
stc
push
pop
sbb
daa
icebp
inc
push
outsb
push
push
cmp
sete
ds
ljmp
add
and
movsl
adc
dec
pop
addr16
push
gs
adc
sti
aam
cltd
jo
cmp
sbb
sbb
mov
jmp
push
add
nop
pop
icebp
mov
mov
ret
fs
and
adcb
adc
cmp
and
test
cmpl
mov
cmp
and
pop
out
xor
xor
pop
psrlw
cmp
aas
dec
sub
dec
add
shlb
mov
das
add
pop
addr16
repnz
mov
adc
push
loopne
test
test
dec
jno
sub
call
test
stos
xchg
arpl
push
loopne
push
or
xchg
out
fbld
lds
mov
addr16
xlat
je
cmp
xor
pusha
cld
and
push
inc
loopne
ds
or
jmp
sarb
sbb
inc
lock
xor
jecxz
test
xchg
cltd
jl
je
cli
rorb
or
push
mov
or
and
mov
gs
dec
test
add
or
xor
dec
and
in
aas
std
inc
inc
iret
mov
pop
cwtl
mov
fistps
cmpsb
aam
lods
pop
mov
push
sahf
push
adc
sbb
insl
xchg
rol
popf
insb
aaa
or
dec
fmuls
dec
ds
mov
mov
xorb
out
mov
add
jo
xchg
ret
fidivs
cmp
es
cmp
daa
fwait
push
cmc
cli
addr16
jmp
cmp
pop
or
or
xor
sub
add
xchg
inc
movsb
adc
sar
out
sub
mov
out
mov
jg
outsl
negb
and
jle
mov
js
outsb
aaa
sahf
aad
dec
xor
pushw
or
pop
sbbl
mov
mov
inc
lret
dec
mov
sub
xor
popa
sbb
leave
scas
pop
fwait
and
mov
dec
and
out
loope
movsl
insb
lcall
je,pn
cli
mov
stos
in
int
mov
mov
inc
data16
jb
dec
sbb
cmpsl
cmp
pop
movsb
hlt
insl
out
pop
sar
movsb
fcomps
push
jns
aam
adc
icebp
int
jne,pn
stos
mov
push
push
add
lret
popf
enter
lods
xor
scas
dec
inc
int3
cmp
testl
jb
fmull
jg
daa
shrl
mov
mov
imul
fstl
inc
dec
lods
mov
pop
pop
testb
out
jecxz
sub
aaa
repz
mov
push
push
out
mov
xor
in
das
inc
cmp
add
into
sub
fadd
lods
ljmp
xorl
xchg
pop
jp
mov
xchg
jmp
cmp
cmpsl
pop
scas
mov
inc
hlt
cltd
mov
movsl
or
hlt
ror
sub
dec
sbb
out
adc
lret
mov
adc
push
sti
adc
jne
add
and
movsb
add
lods
jecxz
imul
dec
push
dec
xchg
int3
xchg
js
xchg
mov
enter
pop
inc
fcomip
mov
mov
pop
mov
andl
ljmp
xchg
movsb
mov
mov
mov
push
mov
pop
pop
std
fldcw
daa
cld
mov
mov
lds
andb
imul
adcl
sbb
pop
jo
divb
mov
loop
xchg
and
out
out
fidivrs
in
dec
dec
xchg
insl
fld
sbb
decl
test
sbb
pusha
repz
data16
adc
inc
fisttpl
mov
in
pop
push
icebp
sbb
xlat
test
and
or
and
add
test
xchg
sbb
pop
or
add
fs
xchg
idivl
shrb
out
stc
cmpsb
xchg
mov
dec
imul
or
jne
lcall
inc
cmp
fsts
loopne
cwtl
add
lock
les
inc
mov
jbe
mov
mov
popa
jge
sbb
mov
xor
cld
fadd
pop
add
xor
cld
mov
jb
mov
sub
mov
lret
or
sbb
mov
sbb
xchg
cmp
xchg
mov
xor
sti
inc
sti
xchg
aas
cmp
fisubrl
push
inc
or
jne
adc
mov
mov
ds
adc
inc
adc
adc
sbb
push
scas
dec
cmp
popf
xchg
sub
xor
add
pop
push
gs
pop
bound
lds
repnz
push
cli
pushf
push
das
cmp
xchg
cmp
or
ficoml
dec
insl
int3
in
cmp
xchg
daa
add
and
mov
pop
sbb
xor
cmpsl
mov
sti
data16
iret
loopne
andl
push
cwtl
sete
add
jb
cld
dec
rcrl
push
inc
xor
test
sbb
dec
out
out
sub
rcll
xor
mov
fwait
dec
mov
cmp
inc
jmp
ljmp
add
inc
sub
stos
pavgb
xor
lods
inc
insl
hlt
or
sbb
jns
push
bndldx
insb
out
inc
push
jmp
and
inc
pop
sbb
in
or
sahf
sarl
fwait
fs
mov
push
scas
fwait
xor
jne
mov
jnp
add
sub
xchg
and
pop
inc
mov
lret
sub
cmpb
enter
push
mov
inc
adc
sbb
inc
test
mov
push
ret
test
mov
pop
xchg
mov
xchg
scas
aaa
gs
inc
jno
and
sub
daa
in
ljmp
add
iret
aad
ds
mov
stc
mov
mov
pop
push
cmp
dec
imul
test
pusha
mov
xor
lret
outsl
fisubl
scas
insl
mov
or
sahf
push
neg
lahf
jg
mov
shlb
adcb
nop
cmp
or
and
add
cld
mov
mov
sti
js
cmc
cmpsb
cs
in
popf
repz
push
adc
gs
xor
inc
psubw
add
mov
ror
mov
mov
dec
inc
mov
fisubs
in
iret
push
mov
ss
pop
pop
clc
push
into
out
jb
xchg
test
insl
dec
dec
out
inc
jle
jg
dec
mov
push
call
lret
call
add
divl
inc
ljmp
dec
mov
popa
rcr
sarl
mov
xor
jae
push
rcrb
xor
rorb
lcall
fmuls
std
mov
lods
outsl
or
ljmp
push
movsb
dec
inc
inc
mov
je
and
mov
int
mov
jnp
hlt
cmp
mov
xchg
pop
mov
mov
sub
mov
jns
mov
jnp
fstpl
test
cwtl
xchg
stos
icebp
sbb
out
testb
mov
xchg
sub
aad
mov
lock
loop
mov
jg
dec
cmc
xor
jo
fistl
and
sub
jg
outsl
sbb
jae
repnz
fldl
fscale
sub
and
shrl
inc
repnz
mov
mov
xchg
test
push
and
subl
push
xchg
mov
es
cmp
push
sbb
test
out
adc
out
mov
out
cmp
bound
dec
add
mov
mov
mov
out
mov
pop
cli
xchg
mov
test
cwtl
jmp
jne
sbb
in
jns
push
or
sbb
mov
stos
fists
out
lahf
das
in
adc
mov
push
imul
add
mov
divb
and
rorb
lahf
push
lds
add
cmp
or
sbb
jns
jg
xor
cmpsb
and
cmpsl
es
push
mov
pusha
rcr
repz
pop
mov
push
test
cmp
or
sbb
mov
sti
lret
sarb
jno
test
mov
sub
push
jle
ret
sub
daa
cmp
scas
add
xorb
dec
lea
push
scas
jo
jnp
lret
shl
inc
aaa
popa
nop
jg
mov
mov
push
arpl
in
push
ss
divl
dec
aaa
ret
movsl
pop
push
fisubs
rcl
xor
pop
cwtl
dec
or
push
push
mov
out
cwtl
repz
lahf
jo
decl
lret
jnp
xchg
mov
mov
mov
mov
jp
ret
mulb
movsl
sub
adc
fwait
fs
rorl
enter
xchg
and
daa
pushf
loope
jno
rcrl
push
fwait
cwtl
adc
cmc
lock
pop
jns
daa
psadbw
stc
lods
aas
lds
cmp
call
jmp
inc
inc
or
data16
in
pop
das
adc
pop
inc
add
pop
imul
xchg
dec
mov
cmpsb
xlat
out
inc
subl
gs
movsb
outsb
xchg
or
pop
mov
ret
outsl
push
mov
fldenvs
pop
inc
fldcw
fsubrs
dec
repz
push
ror
xchg
inc
sarl
insl
in
loope
jne
push
mov
movl
push
mov
xchg
jae
push
test
fmull
xor
and
sub
mov
push
add
xchg
cmc
mov
mov
cwtl
cmpsl
adc
test
mov
or
lret
jae
push
xchg
jl
pop
out
movnti
out
sbb
and
es
push
jp
testb
cltd
push
inc
ss
fildl
loop
sbb
pop
cld
cli
mov
jnp
fs
add
xchg
ret
jns
shr
adc
outsl
pop
push
int
mov
not
jne
repnz
pop
jno
mov
and
sarb
xor
cld
shlb
xor
outsb
xchg
push
add
out
mov
ds
lahf
jo
lods
mov
dec
es
and
push
nop
adc
repz
je
sub
pop
call
lds
push
inc
ret
rcrb
cwtl
add
xor
mov
lods
pop
xor
out
call
in
xchg
push
movsb
ljmp
push
outsb
add
lock
inc
or
jl
lds
cmpsb
jno
outsl
jp
mov
or
pushf
xchg
mov
xor
frstor
add
lcall
push
or
inc
fs
jo
add
pushf
stc
push
xchg
push
add
push
sub
push
xchg
fs
mov
sub
les
lret
and
js
cmp
or
sub
icebp
pop
sub
add
icebp
adc
rorb
js
cmp
inc
mov
fsts
shll
enter
fs
jne
mov
bound
outsl
pop
mov
rcll
xorl
dec
sub
daa
ja
mov
rorl
test
dec
lcall
push
fmul
jg
lret
cmp
nop
inc
ror
xchg
mov
lods
sbb
pop
sub
movsb
push
faddl
mov
mov
sbb
and
mov
xchg
popa
or
jle
inc
jo
mov
movsb
pop
jae
in
lods
dec
jmp
and
mov
fsubl
dec
xor
xchg
jp
push
sub
add
jg
push
push
cmp
sbb
je
sbb
movsb
add
jl
ret
add
pop
andl
fisttps
outsb
jl
imul
pop
sahf
les
mov
stos
jle
dec
pushf
ret
dec
jae
jne
dec
adc
jecxz
pop
inc
imul
lahf
leave
or
jb
push
lock
dec
xchg
pop
cmp
dec
cld
stos
add
add
jp
out
jbe
add
ror
data16
cwtl
pop
sahf
inc
idiv
pop
jle
sub
loopne
sbb
jno
sub
mov
scas
dec
sarl
notl
adc
and
out
cmpl
mov
fcomi
in
mov
cmp
pop
sbb
sbb
lahf
sbbl
jmp
aaa
add
jne
andl
push
inc
xorb
stos
aaa
jno
roll
xor
jbe
mov
shrl
lock
jle
movsl
pop
aam
mov
push
nop
call
xchg
inc
mov
stc
je
dec
fcmovnbe
adc
in
cmp
sbb
xor
push
jp
pop
je
int
sub
hlt
pop
inc
test
rcll
out
inc
mov
dec
out
sub
inc
mov
jae
push
rorb
jl
mov
test
addl
pop
pop
push
imul
cmp
loope
sub
dec
mov
sub
pop
int3
add
xorl
lret
ds
stos
test
mov
or
movsl
cmpsb
xor
inc
adc
cmp
mov
mov
mov
mov
pop
push
xor
push
pop
nop
je
xchg
or
arpl
shr
jmp
loop
jle
pop
pop
out
test
testl
mov
mov
addl
data16
jb
push
mov
xlat
stos
dec
dec
mov
sub
ss
popf
xor
jg
sbb
roll
ficoml
sbbl
cltd
sbb
fldcw
cmp
call
xchg
mov
roll
fstps
push
fldl
test
icebp
loop
push
add
cmp
aas
jmp
and
mov
sbb
xlat
xchg
sti
loope
dec
rolb
mov
or
mov
adc
adc
xor
pop
pop
dec
fdivrs
enter
mov
in
fucomip
loop
push
call
loopne
scas
mov
outsb
sets
jno
inc
inc
arpl
das
aaa
in
pop
popa
cmp
or
pop
push
push
mov
cmpsl
popf
ss
push
dec
or
cmp
or
xchg
and
sbb
sahf
pusha
std
sbb
sub
es
inc
and
mov
lcall
subl
mov
push
and
push
push
or
or
cld
mov
or
neg
and
mov
dec
xor
stos
adc
stc
pop
lcall
jmp
push
ss
std
dec
mov
jbe
xchg
xchg
add
inc
dec
aaa
sub
push
pushl
add
add
je
mov
arpl
pop
rcrb
push
leave
out
lds
sub
sub
jo
cld
lret
jns
xchg
pop
cmp
jge
pop
adc
mull
fidivrl
sub
xchg
enter
pop
dec
mov
lcall
cmp
inc
stos
loope
add
mov
dec
sarb
add
xchg
mov
xor
jb
jg
cmpsb
loopne
aaa
xchg
xor
dec
jl
mov
mov
neg
sub
lods
lods
or
leave
popf
mov
sti
dec
call
scas
push
sahf
xor
loop
pop
inc
out
lock
pop
jge
adc
icebp
scas
jo
mov
adc
or
aas
add
xchg
sbb
jg
pushf
daa
push
mov
fs
out
test
xor
mov
mov
popf
or
rcrb
gs
pop
imul
loop
sarl
std
add
clc
jbe
inc
test
pop
pop
cltd
hlt
dec
addr16
mov
sbbb
add
pop
mov
icebp
and
fmulp
mov
mov
mov
shrb
xor
lcall
lret
dec
adc
cwtl
or
sub
sar
jp
add
mov
xor
ljmp
push
pop
out
int
xchg
pop
leave
push
sub
push
shr
hlt
mov
adc
pop
xchg
sub
pop
dec
sub
and
sub
sub
jno
ret
mov
pusha
pusha
mov
dec
mov
mov
data16
inc
dec
or
mov
pop
imul
insb
xor
dec
fnsave
insl
jae
mov
jecxz
xor
mov
mov
mov
fidivrs
and
daa
daa
je
dec
rcr
int
sbb
adc
mov
adc
add
mov
das
fcoml
clc
lcall
popf
call
inc
sub
mov
aas
iret
xor
xor
ljmp
inc
stos
incb
xchg
mov
jge
adc
cwtl
push
sbbb
dec
jbe
test
inc
call
rorb
mov
aam
leave
sub
je
jnp
es
or
xor
call
inc
pop
mov
out
push
adc
sub
cmp
in
popa
xchg
mov
and
fists
inc
fdivl
fisttpll
push
pop
sub
sbb
adc
xor
mov
jle
and
pop
pop
pop
roll
mov
je
inc
pop
das
pop
mov
inc
aad
push
stc
aam
cmpsb
cmp
add
aas
dec
pop
rolb
push
push
imul
pop
inc
dec
sbb
adc
rcr
loop
or
lods
outsl
out
sbb
testb
ficoml
lock
arpl
pop
je
mov
int
add
shrl
push
xchg
int3
cmp
dec
lock
pop
mov
imull
or
adc
adc
ret
movsl
pop
outsl
xlat
push
hlt
incb
mov
fdivs
xchg
dec
rolb
divl
inc
inc
pusha
test
dec
or
xor
cli
pop
cmp
jns
inc
mov
rcrb
jnp
lods
shll
fcmovnbe
jmp
pushf
lods
insl
adc
stos
xchg
call
scas
lods
mov
cmpsb
into
push
push
int3
push
xor
scas
rcrl
negb
push
sar
rcl
push
and
stos
cmc
adcb
icebp
repz
mov
decb
aam
outsb
sub
sbbl
cli
mov
scas
add
inc
jl
hlt
push
aas
repz
cmpb
jle
and
jbe
and
or
cmp
jb
leave
push
add
dec
es
jmp
arpl
dec
mov
pop
sbb
fistps
jg
jl
lcall
adc
fistpll
roll
push
clc
mov
push
pop
or
add
inc
cld
arpl
lock
imul
mov
imul
int3
mov
cld
int
mov
iret
cwtl
push
inc
test
stc
jbe
js
jl
adc
xor
pop
enter
sahf
hlt
movsb
jge
mov
dec
orb
lods
rolb
xor
movsl
cld
jns
push
sub
pusha
call
xchg
jne
jecxz
sub
outsb
lcall
adc
adc
pop
pop
mov
or
pop
jbe
int
orb
jle
lods
mov
ret
mov
cld
aam
fldcw
add
call
js
sti
call
mul
mov
mov
mov
in
push
dec
orl
mov
lock
xlat
sub
push
pop
mov
lock
jo
xorl
or
adc
pop
mov
jl
dec
mov
dec
int3
stc
sub
mov
xor
addr16
cmc
add
mov
lods
pop
jne
jmp
xor
jae
into
bound
fisubs
lret
aam
in
cmp
clc
dec
fbstp
mov
test
loope
pop
mov
popl
mov
nop
cmp
js
shrb
push
roll
sub
cmpsb
adc
dec
mov
addl
les
inc
fcoml
sub
push
push
scas
lods
mov
mov
cmp
sbb
sub
orb
pop
inc
mov
jmp
outsl
inc
xor
test
push
jmp
push
mov
inc
ffree
sub
xchg
dec
pop
adc
imulb
adc
mov
pop
cmc
aad
shl
pop
outsb
xor
adc
sti
push
push
jmp
aaa
fsubl
shl
push
mov
add
and
and
jmp
inc
mov
dec
shr
dec
inc
mov
sahf
and
outsb
or
cltd
stos
xchg
jge
mov
mov
xchg
cli
ds
lea
ljmp
and
call
repnz
and
or
xchg
mov
fdivrs
imul
lods
faddl
mov
jno
nop
add
daa
adc
mov
add
mov
mov
repz
mov
fimull
outsb
mov
xorb
sub
adc
and
fdivl
inc
cmp
sub
dec
push
jae
mov
dec
pop
clc
xor
hlt
ds
lahf
push
mov
adc
pop
adc
or
lods
rcrb
xchg
imul
test
push
nop
mov
pop
ror
sbb
xor
lret
cwtl
jns
rolb
xchg
in
sbb
jne
in
dec
and
mov
dec
les
aam
mov
xor
mov
loop
mov
insb
loopne
scas
rclb
iret
sbb
mov
pop
sti
mov
das
fprem1
or
xchg
mov
lret
jmp
mov
enter
shlb
scas
xchg
jecxz
je
addl
data16
adc
mov
dec
ror
mull
xchg
lret
or
pop
add
or
push
xchg
pushf
jle
bound
mov
sub
cmp
mov
stos
outsl
mov
rol
fmuls
iret
lret
mov
xchg
dec
je
mov
xor
dec
call
outsl
loope
movl
sbb
ss
and
iret
jmp
fsubs
ss
int
push
inc
sbb
inc
sbb
in
push
fsubs
jg
pop
mov
scas
sbb
inc
push
loop
das
in
and
dec
sbb
fs
bound
rclb
loop
jns
xor
les
sbb
popf
lret
jnp
lds
cs
and
aaa
daa
or
xor
movsl
xlat
push
dec
stc
inc
jle
push
lods
insb
cmp
iret
js
std
add
push
push
and
xor
pop
sti
repnz
xor
cli
xchg
push
rorl
and
jmp
fs
dec
lcall
neg
pop
add
incl
icebp
lahf
mov
pop
or
and
das
jnp
add
mov
xlat
push
mov
lds
cmp
cmc
in
int3
push
xchg
adc
or
and
push
and
mov
jbe
dec
fwait
das
add
aam
pop
shlb
les
movsl
cmp
add
pop
xchg
movsb
sbb
or
push
loopne
lods
test
mov
aad
outsl
push
xor
push
xchg
lcall
adc
idivl
sub
sbb
mov
cli
sub
mul
sbbl
mulb
mov
mov
js
jp
adc
jbe
and
push
hlt
mov
xorl
lret
jno
pop
enter
push
pop
xlat
movsl
jb
and
loope
inc
rclb
std
stc
cld
xorl
jecxz
dec
outsl
push
adc
mov
push
xor
xor
shll
in
push
mov
dec
loopne
sti
les
call
lock
in
inc
mov
sub
or
das
pop
mul
fs
lds
cmp
xchg
out
and
mov
inc
and
ret
lea
jge
mov
adc
push
jmp
pop
les
inc
xor
int
jp
xlat
js
jns
lds
decl
mov
xchg
js
out
add
mov
jae
fidivl
pop
insb
dec
popf
popl
sahf
in
pop
cwtl
and
sahf
jb
dec
sbb
aas
test
pop
pop
adc
inc
and
cltd
sbb
xor
mov
mov
cmp
add
sbb
sub
push
sbb
sbb
mov
mov
xchg
xchg
loope
add
sbb
inc
imul
aam
add
jmp
movsl
mov
out
adcb
lods
sbb
push
and
fisubrl
subb
fisttps
inc
lds
mov
xchg
popf
ss
or
mov
dec
mov
mov
dec
pop
inc
add
ret
or
fildll
aad
jbe
jno
ds
idivb
frstor
mov
clc
jle
mov
lds
mov
inc
rorl
jo
cmp
jecxz
scas
push
into
es
or
out
aaa
leave
mov
jmp
and
adc
sbb
test
sbbb
mov
es
lds
cwtl
dec
push
add
and
movsl
cmp
push
stc
data16
loope
lret
jl
xor
xor
jns
inc
ja
fcmovne
push
jns
inc
xchg
int
dec
push
ret
and
dec
out
inc
das
jle
cmp
shll
arpl
repz
fldl
fnstenv
fnsave
call
mov
sub
ds
xlat
xchg
popf
or
push
jle
shlb
leave
clc
in
push
jmp
mov
sar
jg
bound
jb
movl
push
mov
xor
aam
xchg
and
flds
pop
push
movl
sbb
stos
int
and
add
fwait
data16
and
xor
jmp
leave
mov
leave
test
add
mov
or
orl
inc
xchg
lret
xchg
fmuls
ljmp
mov
popa
ret
cmc
sbb
dec
inc
ja
jg
push
popa
lret
in
sbb
jnp
push
ds
xchg
cmp
je
aad
ds
and
mov
sti
outsl
lods
dec
and
call
or
mov
das
daa
les
lock
sbb
push
aaa
and
mull
ljmp
jbe
inc
adc
ja
cli
mov
xor
rolb
andb
adcl
hlt
popa
outsb
push
mov
sub
lock
lea
les
js
nop
sub
mov
mov
cmpsl
mov
cmp
aad
cld
and
aad
xor
sti
not
repz
test
les
sub
adc
add
xchg
xchg
popa
idivw
lea
aam
sbb
pop
push
push
mov
movb
int
cmpsl
daa
jnp
inc
idivb
inc
clc
in
fnsave
cmp
pop
sbb
fnstcw
adcl
xchg
push
pusha
push
sbb
jnp
push
fcoms
div
mov
lret
outsb
inc
mov
adcl
testl
or
mov
push
arpl
mov
or
mov
push
sub
add
and
sub
pushl
mov
inc
pop
aaa
icebp
ret
pop
and
cmc
jle
jmp
int
push
lcall
or
pop
mov
mul
aam
jmp
mov
cld
mov
mov
sarb
pop
aas
xchg
inc
negl
jmp
and
push
cmpsb
aas
fs
fsub
xchg
dec
cmp
cmp
fs
sub
shlb
imul
sub
jmp
add
sbb
insl
aad
and
dec
cmp
sahf
mov
inc
and
fbld
pop
jae
xor
ret
aam
cmp
pop
sub
call
ret
push
flds
jbe
subb
or
shr
pop
fiaddl
pop
fadd
ror
call
inc
shll
mov
loope
push
cmp
and
loope
jmp
in
mov
push
push
rorl
lahf
out
inc
push
xchg
cltd
bound
push
roll
lock
leavew
in
jns
addr16
mov
jmp
popa
pusha
ljmp
in
mov
or
xchg
cmp
fxam
insb
ret
dec
inc
jnp
scas
mov
lock
cmp
loope
and
pop
adc
pop
scas
xor
push
out
inc
push
sub
dec
and
sbb
out
out
push
xchg
jl
sub
lret
sub
in
xor
push
or
adc
imul
addr16
inc
cltd
jecxz
sahf
jbe
pop
mov
loope
xchg
or
repz
mov
cmp
mov
ja
sub
sub
cmpsl
inc
cmp
nop
movsl
movsl
imul
mov
push
inc
lret
bound
jl
imul
ret
dec
jo
xchg
pop
pusha
in
cmpsl
aam
rcll
xchg
cmpsb
movsl
mov
dec
lcall
sub
push
xor
scas
xchg
sarb
jns
pushf
jg
stos
or
cltd
shr
xchg
or
roll
aam
inc
les
xchg
push
jno
adc
mov
cmp
pushf
in
dec
inc
sub
imul
pop
pusha
dec
mov
sbb
pop
leave
hlt
push
dec
outsb
jbe
pop
pop
cmc
jno
jne
inc
sbb
xchg
in
stc
or
cli
cmp
xor
rorb
mov
arpl
sbb
jae
nop
mov
push
mov
mov
rolb
xchg
jg
sbb
scas
loop
adc
jae
push
inc
aas
xchg
xchg
dec
mov
repnz
sbb
sahf
or
shll
adc
stos
movsb
or
cmp
test
add
sub
out
mov
rcrb
fnstcw
add
mov
testb
mov
mov
aas
mov
lea
xor
inc
adc
mov
push
loopne
dec
lret
sbb
or
xor
sti
int3
sti
fldcw
loopne
or
fists
adc
ret
insl
and
dec
popf
xor
in
mov
mov
jbe
mov
or
popa
xlat
ret
push
or
mov
mov
sahf
inc
mov
mov
mov
fwait
add
fstpt
std
test
divl
scas
outsb
add
adc
jp
cmp
seto
imul
add
sbb
xchg
cmp
enter
cli
mov
and
inc
mov
jecxz
dec
arpl
mov
cmc
into
scas
insb
cmp
outsb
mov
insb
lret
movl
and
jmp
clc
dec
jl
cli
jle
push
sbb
push
mov
pop
or
js
insb
out
test
out
xor
xchg
fnstcw
push
gs
cmc
xor
rcll
mov
xchg
cld
mov
cmp
idiv
out
ret
or
lcall
push
daa
sbbb
pop
xchg
and
sahf
shl
jo
push
dec
mov
lret
dec
jno
adc
and
roll
stc
leave
out
dec
aaa
loopne
adc
push
lret
je
sub
pop
push
fisubl
stc
adc
xor
popa
cmp
lcall
outsl
lcall
xor
imul
jle
mov
push
xchg
mov
imul
jno
int3
or
or
cli
jae
pusha
add
mov
es
popa
aaa
xchg
jge
mov
inc
xor
pop
testl
fstpt
sub
testb
adc
mov
jge
sarl
sub
jmp
ret
jno
inc
gs
cmp
dec
push
repnz
adc
movsb
lahf
and
inc
int3
pop
pop
xor
cs
fcmovnb
sub
mov
pushf
jg
sbb
push
dec
pop
mov
cmp
test
aaa
and
xor
stos
std
or
xchg
mov
push
lock
mov
lods
loop
dec
bound
dec
mov
cmp
int
cmc
movsb
ja
out
enter
xorb
xor
inc
dec
imul
mov
jg
in
mov
cmp
push
outsb
cli
xchg
sbb
xor
out
in
dec
dec
mov
mov
or
dec
cltd
lcall
clc
aam
mov
adc
inc
inc
call
pop
sbb
cmc
int3
js
push
push
fld
cmp
xor
cmp
pop
cmp
cmp
xchg
movb
leave
orl
hlt
std
mov
stos
repnz
add
xor
xchg
mov
jmp
adc
or
and
adc
int3
ja
mov
mov
dec
notl
out
jmp
scas
sti
out
cmp
add
ret
fisttpl
and
mov
ds
sti
xchg
jbe
and
and
cli
jb
dec
int
xlat
mov
pop
mov
add
inc
or
leave
mov
fsubs
xor
inc
mov
sbb
loopne
fsubrl
mov
shlb
fistpl
jge
mov
adc
lods
xor
inc
repnz
add
mov
jne
fistl
imul
hlt
das
cmp
add
push
fistpl
push
nop
jo
pop
push
push
jecxz
outsb
cwtl
xchg
in
jmp
cmp
stos
cld
cld
mov
movsl
mov
std
out
push
inc
xor
movsb
sti
imul
add
push
and
call
fldenv
add
jp
dec
adc
mov
fwait
and
ljmp
stos
push
and
jmp
and
std
notl
cmpsl
dec
insb
sub
addb
jmp
daa
fistpll
and
jae
pop
lods
push
repz
ss
stos
fstpl
es
jge
in
jecxz
test
sbbl
sub
jne
push
push
pop
dec
les
test
sub
test
pop
xor
ds
jmp
test
sub
inc
adc
aaa
mov
sbb
mov
je
mov
mov
sbb
leave
jle
movsl
or
cmp
call
les
inc
mov
mov
cmp
aas
jmp
mov
outsl
cld
and
adc
loop
mov
sbb
sub
xchg
and
clc
dec
cwtl
cmp
xchg
cmp
movsl
in
cmc
cmpsb
test
imul
loop
lret
addl
ret
mov
dec
xchg
sbb
add
sbb
and
stos
dec
mov
cmc
mov
jle
mov
and
jae
adc
cmp
inc
inc
out
adc
ja
inc
and
and
mov
fs
push
mov
mov
stc
push
mov
enter
mov
mov
rolb
fidivrs
dec
bound
and
dec
xor
mov
mov
aas
ret
or
repnz
repz
cmp
lcall
mov
into
sbb
inc
cmp
jne
adc
cwtl
adcl
test
jmp
and
adc
fnsave
cmp
inc
jle
das
shr
cmp
sub
mov
mov
pop
sbb
leave
cmc
push
enter
cmp
popa
jecxz
sub
pop
outsb
popa
pop
repnz
in
out
movsb
jno
clc
adc
cmp
sbb
cltd
in
xchg
pop
push
sbb
xchg
pusha
call
add
and
and
sub
test
pop
rcll
push
mov
push
xchg
pop
lods
or
pop
push
dec
or
loope
xchg
repnz
adc
popf
lcall
leave
testb
jns
add
aas
pushf
adc
insl
xchg
leave
out
pushf
pop
jae
or
cmc
fucomi
mov
and
sub
subb
or
fwait
cmpsb
movsb
stc
fidivs
in
push
push
fistpll
or
cmp
push
dec
lcall
inc
not
fdivrl
mov
pop
push
stos
sbb
test
push
sbb
rcrl
xor
add
test
fwait
lahf
loop
push
pop
dec
mov
pop
insb
in
loopne
sub
push
cmp
sbb
adc
es
leave
mov
andl
and
pop
pop
ret
outsb
clc
fiaddl
mov
cmc
pop
insb
xchg
xchg
mov
mov
fstps
je
fcoml
dec
adc
imul
or
add
jl
mov
loopne
dec
mov
sub
enter
or
jg
dec
lods
dec
ss
xlat
rorl
dec
outsb
inc
or
push
addr16
bound
xor
jnp
into
push
push
cltd
push
sbb
repz
dec
in
fucomip
rolb
aam
cmc
inc
mov
push
movsl
sarl
inc
out
push
imulb
pop
cmp
pop
cltd
pushf
cs
cmp
dec
sbb
pop
inc
adc
inc
fmulp
test
lods
sub
xchg
popf
sbb
add
xchg
xchg
add
out
call
test
sar
repnz
jp
into
in
ret
push
xor
dec
outsb
ret
mov
aam
cld
xorb
aas
dec
ss
jae
fnsave
rolb
inc
mov
gs
int3
es
xchg
in
call
into
cmp
adc
rcr
or
sbb
fwait
setge
lea
pop
pushf
jp
lcall
mov
push
imul
repz
pop
shll
int
jg,pt
xchg
dec
pop
jne
jle
dec
negb
dec
add
rcrb
movb
cmc
imul
aad
mov
xor
dec
or
aam
scas
push
cmpsl
xchg
mov
js
xor
mov
into
xchg
testl
jo
clc
cmp
fcomp
loop
sbb
push
test
js
ss
fs
add
mov
sbb
or
daa
out
imul
lret
negb
jge
push
pop
xchg
lock
inc
xor
inc
sub
mov
int3
xchg
loope
sub
fwait
daa
ss
inc
inc
mov
rol
lods
addr16
mov
dec
adc
call
les
imul
mov
lcall
mov
push
ja
jg
fdivl
clc
jb
iret
dec
cmp
xor
das
pop
jbe
iret
jl
notl
pop
push
lods
pop
mov
pop
dec
ficomps
mov
adc
stos
add
rorl
ja
jmp
mov
mov
push
sbb
dec
adcb
mov
lcall
add
fdivrl
mov
lahf
daa
jns
loopne
hlt
test
mov
cmp
pop
inc
mov
mov
ret
shrb
pop
mov
and
xor
sub
cmpsb
xlat
dec
xchg
push
cmc
ss
sub
mov
mov
add
sahf
lret
adc
sbbb
insl
fcmovnu
pop
lahf
sbb
mov
sti
test
mov
ret
in
cwtl
outsb
jge
add
dec
cli
cli
out
jb
inc
pop
jmp
cmp
ud0
fiadds
roll
sbb
pop
inc
jmp
je
imul
push
mov
outsb
rorl
test
pop
and
popf
rcrb
cmp
xchg
mov
ds
lock
mov
das
outsb
icebp
pop
sbb
and
aad
enter
xchg
and
jnp
adc
and
xor
cmpb
gs
mov
xchg
js
cmp
jo
jno
inc
push
fnstsw
push
adc
lret
mov
idiv
pop
cmp
call
inc
bound
stos
sbb
rcll
std
xor
jnp
inc
stos
xchg
in
push
and
add
enter
pushf
ret
jecxz
sub
xchg
adc
jae
out
push
fcmovu
mov
pop
pop
mov
xlat
orl
fsubr
mov
in
cmc
sub
mov
into
xor
jae
cwtl
in
mov
in
jg
sbb
or
jo
je
pushl
movsl
rorl
and
icebp
aam
cmp
fstpt
push
sahf
and
mov
mov
test
call
or
sahf
pop
das
mov
movsl
stos
sub
in
data16
fsts
xorl
icebp
sub
xchg
stos
mov
test
pop
add
int
pop
std
into
xor
jno
rcll
jae
fstpt
out
push
jne
subb
int3
or
jnp
xchg
es
in
test
jb
inc
out
out
and
pop
sub
ja
add
pushf
cltd
cwtl
adc
pop
push
std
repnz
repnz
imul
push
sub
sub
and
inc
fisttpl
xor
scas
lret
jg
cltd
adc
jnp
inc
sahf
sbbl
in
cmpsb
addb
mov
pop
sbb
icebp
sub
inc
inc
jb
xor
cmc
insl
addr16
cs
imul
jb
inc
inc
lahf
and
mov
mov
shll
push
push
and
sub
and
adc
sahf
or
jge
cmp
sbb
xchg
inc
dec
inc
fistpll
outsb
push
and
xor
sub
cmp
xor
dec
cmpsl
fistpll
pushf
and
pushf
test
xchg
ret
aam
jmp
popa
lret
gs
sub
cmp
rcl
imul
mov
push
test
les
and
cmp
ret
aam
clc
clc
call
cmp
inc
xchg
mov
je
jnp
sub
sub
mov
push
fildl
mov
shlb
inc
movsb
push
in
or
call
pop
cli
lret
scas
lret
push
mov
mov
add
jne
pushf
jl
mov
xor
fmuls
movsb
jg
inc
nop
xchg
xor
xor
popa
sub
sbb
sub
movsb
push
mov
aaa
inc
scas
pop
ret
pushf
sahf
or
jl
rcr
push
sarb
xchg
stos
pop
xchg
jp
mov
aam
stos
sti
and
mov
pop
jne
or
jp
call
roll
in
fdivrl
xor
pop
mov
sub
fsubrl
clc
rcrl
dec
jmp
adcl
cmp
xchg
loope
int
ret
or
add
push
mov
test
outsl
dec
sarb
sti
sub
addl
sbb
adc
enter
out
cmpsl
dec
pop
fs
fidivrl
sbb
and
or
and
and
clc
jmp
jb
cmp
or
ja
test
sbb
xchg
inc
adc
mov
scas
mov
shlb
inc
sub
adc
or
mov
dec
sbb
call
sbb
sub
movsb
mov
int3
sub
hlt
mov
and
jg
mov
mov
iret
inc
adc
imul
das
lea
jns
jge
jb
out
fs
call
lret
push
and
repz
jmp
fldl
out
hlt
addr16
iret
sub
push
js
fisubrl
fisubrl
mov
mov
sbb
fdivrs
cmp
cmp
int3
roll
cmp
rcrl
mov
leave
adc
push
lods
sbb
aas
pop
ret
cmp
add
adc
lret
dec
cmp
cmp
dec
in
or
pop
push
inc
scas
sbb
movhps
in
sub
inc
in
jnp
ds
je
and
mov
js
sub
ficoms
dec
imul
sub
jnp
mov
xor
push
mov
loopne
in
fcompl
in
fmuls
aas
lahf
xor
repnz
mov
and
cmp
call
mov
pop
lods
lds
dec
mov
jecxz
pop
dec
cltd
sbbb
repnz
fwait
mov
mov
or
cmp
cmp
xor
cmp
fcmovnb
mov
mov
lret
shlb
or
cltd
xchg
add
das
inc
sbb
pop
shrb
adc
and
mov
fadds
and
dec
mov
lods
jae
std
xor
add
push
outsb
cmpsl
add
aam
xchg
adc
mov
aad
mov
mov
roll
fldcw
shrb
cmp
hlt
dec
mov
imul
jl
js
jo
lret
movsbl
mov
and
shl
es
push
movsl
inc
mov
add
mov
jae
dec
movsb
cmpsl
xchg
sub
lods
cmp
pop
inc
jp
lret
int
xchg
cmpsl
shlb
fsts
mov
testl
mulb
sahf
lods
fiaddl
push
test
pop
mov
lods
inc
es
das
sub
mov
pop
dec
mov
ret
lds
pop
cmpsb
inc
out
stos
xor
addb
outsb
push
inc
jb
ficoml
scas
mov
and
ret
dec
mov
push
xchg
popf
fnstcw
xchg
repnz
or
jne
xchg
ficoml
cmp
dec
dec
mov
loopne
pushl
out
out
orb
loopne
mov
mov
xchg
sub
lds
or
fldl
sbb
popf
pop
inc
mov
std
add
stos
dec
lds
jmp
in
lahf
sbb
cmc
and
pminsw
ljmp
pop
daa
jmp
mov
das
dec
in
pop
push
call
inc
adc
push
cmpb
add
imul
lea
out
pusha
jle
in
push
dec
loop
sbb
js
in
jne
cmp
mov
mov
add
add
add
pop
mov
dec
sbb
sub
loope
mov
fbld
arpl
adc
dec
add
ss
rorb
sub
fnstsw
lea
push
xlat
xchg
arpl
mov
mov
dec
adc
mov
pop
stos
aad
jno
lods
jl
addl
pop
insl
mov
mov
mov
rorb
cli
add
sub
push
pop
or
or
add
mov
cmp
inc
jb
xor
cmp
cmpsb
mov
sbb
jb
rcrb
mov
jg
push
adc
ficoml
insl
mov
lahf
popf
test
mov
mov
loopne
push
loopw
test
fsubs
push
movsl
jp
xchg
sbb
mov
jge
out
or
jmp
fists
add
stos
push
test
jo
sti
repz
xchg
cmp
sbb
add
adcb
sbb
test
xor
push
lret
mov
stos
pop
pop
lock
jae
cmp
loopne
aam
and
dec
fnstsw
popa
adc
pop
xchg
mov
in
test
pop
inc
lret
sub
mov
fldt
push
add
fsts
sbb
stos
lock
leave
pop
fnstenv
sti
adc
or
xor
mov
jle
and
add
xchg
iret
pop
outsl
inc
cmp
add
cmp
scas
loopne
repnz
sub
mov
add
pop
jp
mov
and
cmp
pop
std
insb
lods
mov
loop
mov
jle
cmp
lock
mov
pop
xchg
rcrl
frstor
mov
add
push
mov
mov
adc
enter
sbb
fisttpll
bound
mov
aam
or
pop
fildll
mov
sarb
sti
jns
aam
add
stos
sbb
mov
fcoms
into
inc
fidivrl
mov
add
or
cmpl
or
mov
fsubrl
cmc
jg
or
icebp
jns
cmp
imul
test
lods
mov
out
stc
je
fucom
aaa
mov
jne
mov
pop
and
cwtl
nop
test
or
mov
inc
xor
ret
dec
or
cs
sets
xchg
xchg
mov
xor
push
cmpsb
fmull
sbb
mov
or
ja
cmp
add
loope
and
push
jg
mov
fbld
das
stos
ret
daa
xchg
add
dec
fs
push
pop
push
push
mov
pop
cmp
push
fmull
jle
push
je
hlt
or
jo
loop
xor
jo
sbb
adc
cmp
icebp
sbb
cmp
popf
push
lds
xor
loop
out
or
aad
ret
scas
mov
xor
jns
aas
push
pop
fnstcw
dec
repnz
cmpl
and
dec
jl
shl
jge
inc
sti
sti
test
jns
sub
testl
xorl
arpl
sub
mov
xor
pop
push
lcall
sbb
mov
pop
lret
and
jp
mov
xchg
call
fnstsw
pop
jo
fcmovu
cwtl
popa
cmp
sbbl
push
es
mov
pop
popf
shl
cltd
imul
rcrl
cmp
sub
jae
mulb
push
adc
mov
loope
mov
dec
xchg
rcrb
shl
dec
jle
lea
jl
and
xchg
adc
xchg
pop
dec
sub
aad
push
pop
xor
sub
lds
popf
add
pop
leave
add
js
and
stos
inc
hlt
jns
mov
sub
rolb
lret
push
loope
push
fxtract
pop
jo
orb
push
stos
call
jl
pusha
in
aam
jb
xchg
out
cmp
or
xchg
and
adc
movsl
xor
dec
jle
fstpt
gs
and
jp
inc
mov
jp
movsb
xchg
pop
inc
cwtl
icebp
mov
iret
adc
aam
xor
lds
pop
inc
xchg
xchg
out
dec
push
adc
divb
jge
inc
xchg
test
icebp
in
lret
mov
ds
or
aas
pop
loope
sub
jb
pop
mov
or
das
xor
adc
mov
add
loop
rorb
aas
lcall
add
adc
pop
pusha
add
add
daa
rcl
popa
push
sub
das
gs
push
fnstsw
repz
mov
and
mov
push
mov
jmp
push
xor
lea
mov
pop
je
fistpll
imul
and
jo
ficomps
inc
pshufw
sbb
aaa
out
xchg
inc
es
adc
test
lock
push
fidivl
fiaddl
push
xchg
lods
divl
sbb
push
outsl
add
xchg
xchg
sub
pop
lret
loop
loopne
pop
mov
cli
hlt
in
xchg
fnstenv
and
sub
or
rol
mov
daa
int
sub
adc
mov
cwtl
fisttpl
shll
loope
push
lds
adc
call
imul
ret
or
jge
sbb
jns
fwait
or
sbb
sub
or
jo
gs
cmp
imul
movsb
cwtl
imul
das
pop
dec
ret
mov
sub
mov
push
hlt
inc
and
mov
cltd
lods
mov
inc
dec
jnp
xor
shl
cmpsl
hlt
enter
rclb
dec
push
ja
add
dec
add
push
fiadds
scas
imul
add
xor
mov
sbb
xabort
adc
in
push
notb
mov
int3
and
pop
jl
xchg
xor
push
sbb
fs
mov
fdivrp
jns
in
lock
imul
std
sbb
es
add
test
sti
fstps
pop
pop
pop
mov
into
popa
aas
dec
rcrl
movsb
js
fadd
aad
clc
outsl
cmpsb
mov
out
pop
or
xlat
push
js
pop
mov
shrl
lret
mov
jp
or
repz
adc
xchg
rcrb
add
fidivs
icebp
call
outsb
loope
push
outsl
or
pusha
addr16
inc
push
push
mov
movb
movl
test
sahf
shr
adcb
push
and
dec
lret
popa
roll
dec
and
into
fwait
inc
lret
sub
jle
jecxz
sub
testb
aaa
dec
out
pop
loop
out
loop
sbb
cmp
xlat
movsl
popf
pop
es
cmp
in
mov
in
bnd
dec
add
dec
sti
jnp
clc
js
mov
dec
sbb
mov
xor
push
push
pop
adc
lahf
ret
push
scas
jl
pop
gs
cmp
xlat
cmpsb
and
decb
pop
fidivrl
jae
jl
push
stos
lea
jb
sub
in
cs
xchg
packssdw
adc
cmp
shrl
enter
cwtl
dec
ljmp
jno
cs
int
lea
inc
mov
pop
ss
mov
push
jno
cmp
mov
sbb
sub
je
stc
add
mov
inc
inc
int3
ljmp
imul
dec
dec
out
xchg
and
cltd
scas
test
dec
cmp
lcall
std
push
aam
outsl
push
inc
fisubrl
inc
mov
cmc
pop
mov
xchg
sub
push
push
std
jne
mov
out
mov
adc
xor
xor
pop
mov
fdivl
test
pop
jecxz
mov
pop
push
fcompl
outsb
pop
xor
pop
out
mov
mov
sub
xchg
sub
movsl
pop
mov
jo
dec
andl
and
pop
test
dec
adc
adc
out
jg
and
jecxz
dec
aaa
testl
rcll
fsubrp
lds
mov
fidivs
add
jbe
nop
fisttpll
shlb
out
mov
jl
bound
mov
mov
xchg
mov
es
test
jge
icebp
cld
or
adc
cmp
lods
leave
repnz
xor
adc
addr16
test
and
addr16
cwtl
xchg
pop
cmp
mov
or
inc
dec
xchg
or
idivl
and
fwait
mov
insb
cmp
mov
pop
es
ret
lret
and
push
loop
test
test
inc
mov
arpl
sub
aad
mov
fisubrl
xlat
mov
cmp
mov
movsb
ror
fisubrl
testl
repnz
imull
sti
in
mov
dec
lock
mov
pusha
xchg
imul
out
rclb
sub
lods
cmpsl
mov
pop
inc
lret
gs
push
dec
lahf
fstpt
mov
adc
push
dec
and
pop
push
jg
mov
add
jmp
shlb
mov
xor
fcoml
jmp
subb
leave
jo
pop
mov
cwtl
cmc
in
pop
cmp
jnp
ljmp
cmp
push
out
adc
cs
shl
inc
jno
clc
cmp
push
or
xchg
cmp
rol
dec
lods
xchg
ret
push
pop
add
xchg
clc
cwtl
popl
sti
jmp
lret
vmwrite
pushf
hlt
repz
jb
pusha
fmull
lods
jns
xchg
sub
add
mov
push
test
pop
or
jmp
push
cmpsb
or
jns
outsb
or
cmp
inc
mov
fdivr
js
testl
aas
or
push
xchg
mov
jmp
xor
and
and
jns
mov
pop
xlat
or
cmp
out
mov
lea
das
sub
adc
ret
sbb
cmp
xchg
add
loopne
out
or
sub
ret
std
lods
add
test
rcll
pop
sub
add
or
mov
repnz
test
cmp
cld
mov
fsubrp
jns
jecxz
jno
movsl
outsl
fmul
add
movsl
popa
xchg
add
adc
xchg
sti
dec
dec
mov
and
rclb
xchg
test
stos
mov
leave
ret
insb
sbb
inc
jne
mov
fldenv
dec
push
pusha
inc
fs
mov
nop
sbbl
or
enter
fadd
fdivl
out
jle,pn
hlt
fcomps
cmp
int
push
punpckhwd
fmul
inc
inc
pop
jno
jns
jo
jo
rol
je
jmp
call
imul
cs
out
jle
mov
fwait
test
xchg
sub
movsl
sub
addr16
sub
popf
mov
mov
fcmovnb
pop
repnz
xchg
pop
clc
jnp
jne
mov
push
mov
mov
pusha
ret
mov
stos
dec
xorb
incb
stc
ljmp
mov
dec
mov
inc
push
sbb
pop
std
pop
inc
sbb
lret
xchg
mov
adc
aas
dec
xor
and
xor
xchg
ficoms
mov
lahf
sbb
push
dec
mov
std
jp
movsl
subb
add
mov
jp
outsb
loope
pop
cld
push
mov
pop
pop
out
xchg
add
insl
loop
scas
in
orb
add
mov
test
ret
data16
xchg
fdivl
addr16
addb
imull
jae
jp
lds
push
out
es
jns
repz
pop
leave
shll
dec
mov
mov
add
das
and
fbstp
sbb
sbb
lea
lret
idivl
inc
add
cmp
adc
jns
xchg
arpl
ds
xor
mov
scas
jl
ret
stc
fcoml
xor
lds
std
adc
js
insl
mull
lock
les
stos
mov
or
jbe
sbb
pop
jg
arpl
pop
jp
test
jl
cmp
push
les
inc
in
pushf
xchg
popa
push
mov
pop
stos
jmp
push
in
cltd
cmp
lods
mov
xchg
movsl
sbb
jno
inc
cli
pop
mov
and
dec
and
push
pusha
popf
mov
inc
push
rolb
add
aad
xlat
lods
repz
and
push
inc
scas
repz
or
das
dec
jecxz
inc
pop
dec
xor
xchg
mov
mov
mov
shl
inc
cwtl
mov
pop
cmp
fsubrp
scas
ret
mov
mov
cmp
popl
lds
cmc
push
orb
pop
inc
int
or
xchg
cld
fwait
sbb
sub
xor
stos
add
push
jb
and
cmp
scas
push
jmp
sub
jnp
add
jle
xlat
xchg
xor
imul
aad
jae
call
out
inc
fbld
in
push
adc
jns
ret
mov
outsb
out
fs
or
outsl
xchg
ja
xchg
adc
ljmp
xchg
lahf
outsl
testl
pop
pusha
sbb
icebp
aaa
sti
xchg
jl
adc
mov
add
in
dec
cmp
nop
call
cmc
xorb
jo
xchg
test
add
mov
stc
jne
lcall
cmp
dec
incb
aam
iret
movsb
adc
dec
inc
mov
js
adc
test
push
rcrb
push
stos
sahf
add
mov
dec
out
insl
shl
sbb
cmpb
pop
jmp
lret
jae
fimuls
icebp
lcall
cwtl
pop
cmp
js
adc
pop
mov
sbb
pop
rcr
pop
push
popa
aaa
cmpb
lea
sub
cmp
pop
shll
jmp
gs
imulb
and
imulb
lret
loope
pop
mov
ljmp
pop
fidivrs
in
lods
popa
repz
jno
pop
adc
xchg
dec
or
sub
enter
lock
pop
addl
outsb
inc
ja
add
ja
mov
mov
xor
pop
std
arpl
sbb
jmp
pop
in
test
repnz
int3
adc
push
cmc
add
jg
pop
fistpll
testl
jmp
ret
xchg
mov
nopl
sarl
loopne
shufps
and
sti
jo
mov
loop
ret
outsb
or
pusha
inc
mov
xor
fildl
fmuls
cmpsl
cmp
pop
dec
xor
aad
or
gs
mov
movsl
ret
fimull
jmp
sbb
ret
insl
jge
sbb
stc
loopne
aad
push
sub
push
inc
aas
pop
nop
cmp
lea
push
jae
push
aad
add
rolb
cmc
push
sbb
lret
mov
repnz
arpl
fwait
notl
sahf
xlat
mov
pop
adc
inc
lds
xchg
cmp
dec
sahf
xchg
aam
mov
inc
inc
in
xchg
or
addr16
xlat
jmp
xor
leave
aad
mov
aad
dec
cmp
xchg
jle
fistpll
add
and
sbb
xchg
pop
ror
sbb
push
push
jp
or
sub
in
aad
cs
and
xchg
mov
push
aad
mov
xchg
orb
mov
out
or
pop
cmpsb
add
xor
mov
and
lock
pop
push
xor
mov
aad
les
test
push
mov
mull
pop
mov
stc
push
decl
lea
mov
jbe
lea
mov
xchg
sub
push
mov
mov
xor
jecxz
cmp
mov
xchg
jae
jbe
pop
sbb
mov
dec
pop
mov
mov
jne
repz
ja
negl
push
test
push
cld
ss
xor
movsb
and
cmpsw
popf
adc
jnp
out
loop
cmpb
adc
push
insl
ret
xchg
lret
pop
std
adc
out
ds
ja
out
lret
movsl
push
cld
sbb
xor
cld
xchg
jge
sub
jge
jg
jge
dec
out
mov
add
pop
bound
mov
pop
sahf
je
pop
xchg
in
adc
jb
andb
adc
and
push
cmp
cmp
sub
cmp
push
and
xor
dec
mov
loopne
add
adc
inc
movl
cmpb
test
fmull
adc
mov
lds
negb
push
mov
mov
into
addr16
xor
adc
and
cli
ret
sti
repz
test
std
imul
shrb
das
xorl
mov
mov
push
cs
fdivs
outsl
in
imul
push
sbb
je
shll
xchg
rclb
enter
insb
jb
stc
dec
mov
and
sbb
inc
adc
and
mov
xlat
sbb
arpl
pop
xchg
jae
push
jns
push
or
lret
mov
sbb
sti
mov
add
adc
xor
and
in
adc
pusha
int
sbb
fisubs
daa
pop
negb
aam
inc
lods
scas
int3
xlat
insb
mov
mov
lods
inc
lds
popa
dec
add
mov
xchg
push
ss
adc
push
pop
mov
out
jne
out
dec
or
jg
aad
shll
pushf
sub
add
xor
aaa
push
sub
js
stos
and
leave
in
jp
mov
les
test
clc
jo
bound
rcrl
xor
imul
ret
jns
xchg
test
fisubs
mov
cmc
mov
push
xchg
div
dec
shrb
xchg
out
scas
movsb
xchg
sbb
xor
lcall
imul
cmpxchg
add
stos
loop
stc
lds
cmpsl
mov
push
cli
sub
cmp
fwait
xchg
mov
movsb
push
push
inc
subb
push
sbb
iret
sub
aas
adc
insb
daa
pop
scas
push
sub
pop
stos
movsl
and
cmp
mov
shlb
xchg
mov
mov
inc
outsb
movsl
push
cmpsb
pop
xor
add
enter
insb
out
fldcw
push
add
aas
sub
pop
test
inc
dec
push
stos
xor
inc
pop
into
dec
js
xchg
inc
lcallw
loop
pushf
out
jo
out
in
sbb
adc
inc
fmuls
sahf
icebp
jecxz
pop
arpl
jae
insb
dec
test
add
int3
mov
or
pushw
lock
and
adc
lret
dec
call
aaa
cmp
leave
test
adc
or
je
sbb
addb
cs
cltd
dec
and
cs
divb
ljmp
lods
xor
push
cmc
sbb
inc
jmp
pop
pop
roll
gs
adc
mov
repz
and
fsubl
xchg
in
or
dec
mov
pop
loope
lcall
mov
enter
add
cwtl
mov
cmp
mov
jmp
or
addr16
sbb
js
out
cmpsl
test
jmp
gs
out
ds
pop
xchg
icebp
je
daa
inc
push
repz
push
js
sbb
pusha
inc
scas
mov
mov
add
loop
lret
gs
sar
sub
int
cmp
repz
xchg
sbb
aas
jmp
loop
and
sub
xchg
mov
inc
stc
arpl
inc
cmpsl
outsl
mov
scas
jmp
orl
cmc
add
dec
push
or
push
xchg
jecxz
push
test
dec
sbb
sbb
add
inc
push
fsubp
fs
jle
fxch
insb
inc
aaa
push
inc
jbe
push
jp
sbb
imul
push
jge
dec
insb
test
mov
push
pop
mov
add
mov
sahf
xorl
inc
out
ljmp
and
sbb
inc
outsl
lcall
cmp
cwtl
je
icebp
adc
cmp
insb
sub
cmp
mov
popf
xor
outsl
push
dec
xchg
mov
cmp
jbe
dec
iret
jl
mov
cltd
scas
or
cmp
mov
mov
cmp
or
jl
cmp
fisubrl
sub
shll
xchg
out
cmp
in
dec
fsubs
inc
sub
mov
cmp
push
aaa
mov
mov
fimuls
cld
xchg
cmpsb
mov
xor
data16
pop
or
push
rcl
js
negl
rorb
or
sbb
pop
sbb
push
xor
lret
scas
mov
scas
rcrb
fwait
mov
sbb
push
dec
jae
cmp
in
lret
ret
pop
dec
add
scas
rorl
xchg
push
test
inc
stc
xchg
push
pop
xor
movq
loopne
push
mov
int3
mov
adc
repz
cld
push
xlat
movsl
jbe
stos
ljmp
jecxz
sbb
add
test
dec
lahf
lea
test
push
dec
fwait
mov
sahf
notl
cmp
push
add
shlb
and
into
scas
dec
mov
push
adc
cmpsl
jmp
and
push
sub
je
or
in
inc
iret
xchg
mov
jnp
not
inc
fimuls
xor
or
fwait
pop
xchg
push
mov
mov
jg
or
sbb
jp
jne
lahf
scas
pop
mov
sbb
ljmp
pop
adc
jle
xchg
js
ret
cs
sbb
in
negb
insb
sub
pop
cmp
add
adc
push
xchg
xor
fcomp
sar
outsl
out
std
data16
and
shr
mov
sbb
dec
shrl
xchg
push
pop
mov
xchg
or
ds
jae
pop
pmuludq
sub
push
ret
mov
pusha
xchg
mov
insb
jo
pop
stos
inc
and
cmp
adc
loop
jp
push
rcr
mov
sahf
inc
adc
jle
fsubl
test
outsl
fsubs
mov
and
sbb
and
fsub
insl
je
in
sbb
sti
movsb
lret
xchg
sbb
add
xor
inc
in
sub
lret
lds
sti
jl
sbb
imul
movsb
lcall
mov
jno
cmp
callw
stos
lea
push
int3
dec
ds
pop
mov
sbb
add
inc
mov
cld
hlt
test
insl
adc
push
and
jb
push
push
int
imulb
mov
or
xor
ljmp
dec
jmp
adc
fmull
cmp
or
iret
and
inc
xor
aas
stos
mov
mov
push
cmp
insb
dec
stos
mov
inc
mov
gs
mov
cmp
push
mov
fidivrs
mov
rcll
les
cmpsl
lcall
fs
ret
cmpsl
jl
add
cltd
fnstenv
in
dec
adc
sbb
xchg
jp
jae
js
sub
daa
inc
push
fsubrl
imul
dec
movsb
push
adc
bound
je
loope
inc
nop
jg
jle
bound
mov
adc
sub
and
in
inc
pop
icebp
decb
popf
cmp
mov
insb
outsb
insl
lock
adc
push
lods
mulb
xchg
xor
sahf
data16
push
lock
xor
mov
jb
es
mov
fnstcw
fadds
jae
xchg
and
sub
ja
sti
or
stos
cmp
jno
mov
adc
and
xchg
mov
icebp
pop
sub
jbe
sub
out
imul
mov
rcl
push
and
mov
push
subb
add
arpl
and
inc
lods
iret
mov
dec
out
packsswb
mov
jg
addb
inc
loope
xchg
mov
jp
xor
je
inc
sbb
xchg
out
dec
enter
aas
jmp
divb
cmp
in
inc
or
pop
jge
mov
pop
adc
dec
loope
cmp
les
fadds
call
xor
stos
outsl
xchg
movsb
lods
push
js
int
sbb
fmuls
sbb
mov
icebp
and
pop
rcll
pop
stc
repz
xchg
pop
jmp
xchg
mov
lea
aaa
sbb
mov
inc
mov
add
sti
inc
push
dec
cmp
imul
rorb
dec
popa
adc
sbb
mov
call
lods
out
les
js
cmp
icebp
or
dec
inc
mov
jo
test
das
mov
xor
fnsave
push
cmp
jp
xor
fisubl
sti
addr16
and
outsl
ljmp
xchg
mov
inc
fistl
mov
jge
xchg
je
and
xchg
aam
dec
and
aaa
jb
daa
pop
xlat
and
pushf
mov
aad
testb
jbe
sub
push
xchg
test
adc
push
jecxz
mov
loop
jecxz
adc
pop
shl
icebp
push
adc
mov
lods
fs
mov
test
jmp
dec
sti
push
mov
stos
and
pop
ror
inc
das
push
es
fisttpll
sti
sub
ret
or
repz
xchg
movsl
fdivrl
push
in
dec
into
mov
mov
add
dec
scas
aas
addr16
or
loope
nop
arpl
xor
call
xchg
sti
test
dec
lret
jl
sub
mov
js
loop
aad
push
rcrl
push
lahf
pusha
test
loopne
push
test
ud2
in
imul
push
jno
in
vpsubusb
insb
das
sbb
push
pop
jns
cmp
push
push
cmp
adc
scas
ljmp
jecxz
mov
ja
gs
cmp
gs
and
js
xor
into
leave
xchg
and
imull
rcpps
jl
xor
pause
mov
inc
xor
add
pusha
movsb
dec
data16
xor
mov
and
jno
cmp
enter
movsl
das
cmp
jae
fcompl
ret
xchg
data16
cmp
sbb
push
loopne
nop
cwtl
out
scas
jmp
out
xlat
test
cmp
fstpl
ds
dec
pop
in
add
shll
lcall
jo
test
test
push
dec
pop
jns
xor
mov
dec
popa
or
js
fstpl
pop
ljmp
lods
cmpl
outsb
xchg
jge
stc
popf
repz
mov
inc
jg
mov
ljmp
pushf
movups
imul
or
fistpll
jns
outsb
int3
mov
sbb
in
pop
mov
ja
push
rcrl
pop
xor
mov
mov
inc
xlat
in
std
insb
jns
jns
and
sbb
adc
or
out
into
sub
cmpsb
insl
test
shlb
bound
sub
xor
push
lea
lahf
stos
pop
icebp
int
in
cmp
mov
sbb
iret
mov
push
jmp
mov
lahf
mov
mov
sub
cmc
jb
sub
fdiv
stos
mov
insb
jp
outsb
clc
fisttpl
push
pop
pushf
push
daa
push
imul
adc
lods
or
out
inc
cmp
dec
sbb
push
test
inc
cmpsb
data16
cltd
andl
mov
js
xor
fnstsw
pusha
push
lods
mov
adc
lods
push
mov
dec
fsubrs
xor
ds
sahf
aas
or
jg
jb
ret
fdiv
js
int
aas
and
pop
add
mov
pop
insl
push
sbb
lods
pop
cmp
inc
or
mov
in
in
test
mov
jne
push
cmp
jb
cmp
dec
cmp
fcomps
push
in
sub
mov
fwait
lods
xor
pop
sbb
cltd
rcrb
cli
add
outsb
sub
pop
pop
out
xchg
pop
iret
mov
lret
je
add
sub
repz
aad
test
inc
xchg
cmp
sahf
ficomps
dec
andl
adc
mov
ds
fisttps
jbe
mov
scas
xor
cmp
popf
xor
push
mov
test
pop
pop
add
les
add
jo
jle
jo
sbb
mov
mov
cmpsl
dec
and
xchg
sbb
mov
in
jo
push
ficomps
sbb
out
fwait
xor
cmp
icebp
ja
or
pop
inc
aas
fsubl
xor
in
xor
and
and
xor
adc
jno
and
dec
push
push
jl
leave
pop
jne
adc
insl
mov
inc
mov
mov
fsubl
icebp
xchg
ljmp
out
out
popa
add
inc
jns
xchg
add
je
ljmp
scas
inc
add
xchg
inc
pop
sub
mov
scas
fidivrs
pop
and
pop
pop
add
cmp
sbb
sahf
inc
inc
lahf
mov
pop
and
es
cmp
int3
adc
xchg
mov
shrl
ljmp
daa
hlt
jecxz
cli
pop
dec
adc
jmp
and
fistps
adc
rclb
push
cmp
sub
push
rolb
push
sbb
mov
mov
in
aad
rcrl
cmp
call
stos
cmc
enter
add
pop
sti
les
sub
stos
xor
xchg
pop
adc
out
dec
pusha
jmp
xchg
pushf
sub
test
ficompl
sub
mov
mov
xor
lea
pop
stc
mov
test
sub
jae
addr16
mov
lods
pop
jmp
push
bound
push
rcl
xor
mov
mov
loope
repz
hlt
pop
mov
push
cli
sub
popf
inc
jb
and
mov
cmp
cmpsl
cmpsb
popa
xor
xlat
popf
outsl
addr16
fsubrs
das
lods
cmp
shl
fisttpl
icebp
push
mov
roll
inc
sbb
xor
es
std
paddusb
sbb
mov
popa
pop
dec
pop
dec
xchg
xchg
sarl
icebp
lret
push
stc
push
push
mov
mov
clc
mov
xchg
rcl
stos
sbb
test
aas
add
mov
mov
movsl
loopne
adc
sub
dec
fadds
mov
push
xchg
adc
cmp
movsl
sbb
dec
and
cmp
inc
mov
xchg
pop
and
jae
cmpsl
das
iret
loopne
mov
and
push
and
mov
test
loopne
in
pop
std
negb
loop
lods
addr16
push
push
mov
loope
pop
pop
jae
and
aam
lock
int3
lret
pop
inc
lock
xor
loopne
mov
push
out
nop
cmpsl
popa
push
movsbl
pop
out
jge,pt
call
aam
andb
sub
fcoml
jge
in
mov
fimull
cmp
cmp
js
aad
add
adc
addr16
cmp
inc
cli
xchg
xchg
shlb
jle
mov
aad
xor
out
into
fdivr
mov
cmpsb
jnp
jnp
push
dec
and
leave
xchg
lahf
sbb
sbb
les
js
out
outsb
arpl
mov
fiadds
fsubl
movsl
pop
shlb
seto
mov
loope
aam
push
pop
ret
or
xchg
sbb
or
subl
mov
xchg
clc
cmp
sahf
lds
ja
inc
shrl
mov
mov
scas
inc
inc
dec
jbe
pop
nop
rcrb
jnp
test
aad
cmp
mov
jae
dec
sti
lods
jmp
das
pop
daa
sbb
xchg
fstp
imul
cmp
or
pop
pop
xor
bound
cld
cmpsb
lods
pop
clc
and
clc
xor
daa
sbb
pop
rol
daa
int
loop
arpl
leave
mov
jno
daa
insb
int
sub
mov
sarl
xor
mov
push
adc
out
push
and
stc
lret
add
add
fdivrl
or
mov
lea
cmp
mov
mov
out
out
sahf
xchg
int3
mov
mov
sub
add
gs
out
cltd
lret
xlat
jle
neg
pop
repnz
sub
cltd
cwtl
shl
or
push
dec
cmp
dec
sbb
setge
push
ja
in
jnp
loop
scas
pop
push
shl
xor
movsb
lcall
cmp
ficomps
jmp
out
fisubrs
fdivl
add
decb
mov
and
jae
in
les
fstsw
rorl
les
gs
arpl
xchg
iret
mov
xrelease
outsl
ds
cmp
xlat
jno
je
imul
aaa
data16
cmp
push
loopne
faddp
inc
push
movsl
adc
fdivl
sbb
cmc
sti
ss
mov
push
js
xor
jns
loope
jecxz
push
repnz
inc
fmul
xor
mov
push
and
cltd
fsubrl
fs
scas
mov
inc
adc
mov
xchg
iret
add
mov
push
mov
xchg
and
push
push
adc
outsl
xchg
clc
ja
test
mov
jae
inc
test
jb
add
adc
insb
xchg
jmp
and
sub
clc
dec
je
and
mull
push
test
fsubrp
push
xor
fsubp
stos
lock
xor
add
js
hlt
or
cwtl
jl
das
bts
mov
dec
arpl
out
cmpsb
popf
inc
adc
and
negl
call
push
pop
cld
sub
mov
sbb
imul
dec
xchg
dec
aaa
inc
mov
pop
inc
mov
mov
rorb
xor
ja
push
dec
sbb
xchg
xchg
movsl
or
int
mov
test
sti
inc
lret
es
or
cli
std
jecxz
out
int3
out
int
enter
int3
add
xchg
loopne
sbb
sub
mov
xchg
lret
mov
inc
lahf
push
and
into
ret
push
pop
mov
mov
fcoms
cmp
dec
jge
stc
rcl
imul
bound
jl
push
scas
pushf
loope
push
out
push
xchg
xchg
xchg
pop
xchg
xlat
push
cs
mov
dec
fcmovnu
sub
push
push
shl
xchg
bound
push
gs
popa
inc
mov
push
hlt
stos
outsb
cmp
ficomps
dec
fwait
bound
aad
out
ficomps
adc
fwait
test
data16
adc
subb
sarl
pushf
scas
shll
ds
pop
fld
cmp
ror
jge
mov
lods
or
andl
and
cmp
out
pop
out
mov
scas
icebp
out
pusha
stos
mov
fidivl
adc
adc
pop
xchg
lahf
fdivrs
mov
lods
out
dec
xlat
inc
mov
jb
loopne
inc
sub
push
mov
popa
jo
dec
pop
xlat
jo
imul
ljmp
mov
mov
mov
pop
in
mov
inc
push
cmp
xchg
addr16
aaa
leave
mov
nop
insb
cltd
and
jmp
fs
rcrb
xor
pop
inc
xchg
dec
mov
pushf
repnz
mov
in
sbb
adc
sub
xchg
push
mov
idivb
cs
ja
push
lock
or
jg
es
lods
pop
mulb
xor
repz
mov
pop
movb
dec
push
jp
sbb
out
xchg
iret
addr16
push
jge
adc
jmp
or
orl
test
mov
or
cwtl
call
mov
add
int3
xor
fnstenv
jp
and
pop
fs
mov
repnz
in
shlb
subl
adc
out
loop
or
jp
pop
cmpb
addr16
dec
push
inc
push
mov
mov
psllw
inc
outsl
das
and
mov
xchg
dec
out
add
test
adc
mov
test
lret
cmp
jno
xor
insb
pop
or
mov
jmp
xlat
jp
adc
pop
out
push
test
cli
pop
jg
cmp
xor
sbb
mov
mov
jno
dec
dec
fldl
push
cmp
out
ljmp
hlt
inc
imull
iret
and
jae
sub
cmp
push
xor
sti
sti
negb
out
jle
pusha
fs
push
push
cli
fdivr
popf
adc
movsb
in
in
xchg
es
fnstenv
cmp
vxorps
pop
mov
inc
xchg
xor
push
fmuls
or
mov
jne
jne
fimuls
xlat
cmc
push
mov
shll
add
mov
mov
jns
fucomip
adc
bnd
jle
cmp
clc
fwait
or
jns
incl
cmpsl
mov
mov
idivl
test
jb
daa
ds
pusha
clc
scas
mov
sbb
sar
inc
inc
add
mull
cli
push
add
xor
inc
fstpl
mov
neg
xor
fisubrs
sub
pop
inc
adc
cmpsl
mov
jmp
mov
fldenv
orl
xchg
sbb
push
js
pop
sbb
dec
data16
xor
xchg
repnz
verr
aam
stos
and
and
xchg
in
fbld
inc
fnstsw
fst
outsl
xor
out
pop
out
idivb
fsubl
adc
cmpl
imul
add
push
test
data16
mov
push
ja
stos
add
in
add
mov
inc
add
js
imul
out
pushf
push
push
fldl
xchg
dec
sub
leave
jge
sbb
in
imul
adcb
adc
fs
sub
push
shlb
or
fistpl
bound
arpl
push
sbb
mov
xchg
pop
scas
sub
push
ucomiss
fisubrl
jo
or
xor
mov
fsubl
lea
dec
scas
fdivrs
mov
sub
push
jno
in
ss
inc
fs
popf
arpl
mov
out
push
lahf
aaa
mov
leave
popa
xchg
stc
stc
lahf
cld
ss
lret
in
int
fisubrs
lahf
mov
test
push
mov
dec
push
loop
and
push
sarl
negb
fmuls
out
jmp
sub
loopne
pop
cmp
insl
or
iret
out
adcl
dec
aam
fildl
pusha
cld
sbb
push
ror
loopne
cwtl
cmp
ljmp
push
jl
shlb
pop
fidivl
push
insl
inc
xor
sbb
int3
sub
adc
ss
dec
mov
cmp
imul
notl
imul
bound
pop
mov
push
aas
add
lds
xchg
adc
data16
dec
aas
cmpsb
mov
jl
lock
es
pop
xchg
data16
mov
cmp
push
mov
in
insb
adc
scas
pop
fmuls
je
movsl
sub
jle
cmp
ret
cmpb
cmp
mov
in
mov
clc
fistpl
push
push
mov
inc
lret
mov
mov
imul
xchg
cmpsl
jge
inc
into
and
mov
shl
mov
mov
jo
dec
xchg
addr16
sub
cli
mov
sub
push
loope
fs
cltd
lret
xor
bound
fnstcw
and
dec
xchg
nop
pop
aas
out
pop
mov
pop
mov
jbe
pop
add
lea
push
in
push
sub
adc
imul
and
sti
push
sahf
loop
xchg
rorl
mov
imul
push
dec
jl
xor
add
aas
adc
jge
mov
imul
xor
divb
push
add
dec
sti
daa
aas
jmp
inc
push
cmp
sbb
inc
cmp
je
aas
push
pusha
mov
in
jp
cmpb
fisubrs
mov
xor
cmp
loopne
stc
sbb
jno
fbstp
dec
push
xchg
stos
cmp
popa
jno
jae
or
cmp
or
aad
in
pxor
lahf
icebp
jnp
inc
add
mov
fisttpl
aam
push
out
add
data16
mov
lcall
lcall
dec
mov
out
xor
sub
mov
jmp
les
jae
pusha
or
lret
lahf
sarl
push
jecxz
inc
jbe
int
pushf
add
add
int
pop
adc
mov
sti
mov
iret
stc
add
je
lock
sbbb
inc
mov
mov
int
add
pop
push
cmp
aas
mov
pushf
lcall
cs
sub
imul
mov
sti
mov
mov
sbb
xchg
mov
xor
mov
sbb
out
mov
cmpsl
pusha
aaa
mov
mov
loope
xchg
pusha
push
and
mov
cmp
faddp
roll
inc
cltd
stos
les
repnz
mov
lahf
push
mov
dec
mov
scas
sub
testl
lds
decl
cld
jb
ret
adc
jnp
cltd
test
dec
movsl
in
xchg
orb
push
shlb
dec
mov
adc
movb
in
rcll
lahf
mov
push
jmp
xor
xor
jnp
lahf
shrb
jmp
pusha
mov
popa
mov
dec
xchg
mov
pop
dec
je
xor
xchg
pop
gs
cwtl
pushf
popf
jbe
and
xchg
adc
les
sbb
xor
aaa
cli
push
enter
dec
sbb
enter
std
add
cmpsb
ret
es
mov
xor
mov
loopne
pusha
add
lods
mov
pop
in
out
xlat
int
cltd
or
cwtl
fwait
ret
pop
pop
rclb
sub
mov
popf
test
jne
les
xorl
fsubr
pop
inc
sub
aas
push
inc
aam
xchg
jb
mov
add
lock
adc
adc
subb
mov
xor
bound
mov
sbb
or
adc
gs
mov
sub
mov
inc
jnp
adc
add
inc
sub
or
cmp
fnstsw
xor
pusha
adc
jge
sahf
lds
inc
notl
scas
bound
lret
mov
sbb
pop
scas
mov
xor
jp
pop
fistps
movsb
out
dec
gs
rol
push
jle
xchg
sbb
lcall
inc
stc
inc
daa
and
or
push
push
ss
mov
or
push
fldenv
insb
cld
pop
cli
fwait
stc
jecxz
push
jmp
cltd
jmp
outsb
mov
cmc
push
jns
adc
add
sysexit
jle
jl
lcall
sbb
inc
sti
add
imul
and
mov
je
cmp
xchg
push
or
xchg
add
jmp
jbe
inc
xorl
mov
xor
and
scas
aad
xchg
adc
fs
jmp
sub
loopne
call
add
xor
lcall
inc
sbb
cmp
cmp
not
jmp
add
push
mov
cmpl
loop
pop
hlt
js
and
cmpsl
xchg
cmp
lods
sub
std
lcall
push
mov
mov
stos
dec
addb
ret
nop
loope
push
pop
pusha
dec
xchg
xor
fs
xchg
xor
ret
ljmp
pop
xchg
jae
es
ja
xchg
mov
mov
ret
or
ror
xchg
loopne
pop
lods
loopne
idivl
xor
popf
dec
cwtl
movsl
fsubrp
and
dec
mov
lret
sub
ret
fmull
and
or
int3
push
jo
xchg
lds
jg
mov
pop
mov
pop
repnz
sub
jb
ret
iret
inc
push
iret
inc
jns
adc
ljmp
hlt
int
mov
or
mov
cmp
mov
fs
pop
inc
test
inc
dec
jge
subl
xchg
sub
sbb
js
sub
push
andb
int3
sub
sbb
mov
sub
or
aaa
jb
popf
mov
adc
dec
mov
ljmp
repz
es
insl
mov
in
mov
pushf
icebp
mov
stc
push
add
js
inc
iret
cmp
pushf
pushf
dec
mov
pop
cmp
aaa
jnp
and
cmpb
xchg
xchg
repz
test
dec
movlps
lret
fsts
and
push
loopne
xor
lret
jecxz
xor
scas
mov
mov
mov
lahf
cltd
mov
scas
lds
mov
pop
ret
push
pop
sbb
inc
pusha
stc
sub
mov
and
movsl
inc
cmpsl
icebp
scas
or
inc
in
inc
pop
subb
insl
aad
into
xchg
sbb
rcl
push
loopne
int3
mov
sarl
or
dec
test
dec
ret
jo
cmp
sbb
sbb
ljmp
xchg
ljmp
das
in
int3
idivl
xor
jecxz
cld
sbb
int3
sbb
mov
sbb
les
dec
inc
js
add
lahf
pop
jmp
into
xchg
xchg
jae
inc
mov
sub
lock
pop
loope
and
adc
cmpsl
leave
fstpl
adc
adc
in
fcompl
out
aaa
cmp
imul
dec
pop
mov
fdivrs
in
mov
pop
adc
mov
push
fisubs
dec
cli
adc
out
repnz
call
lods
lods
inc
leave
and
mov
ja
mov
xchg
or
mov
mov
popa
cmp
mov
push
ljmp
inc
jg
mov
imul
loopne
cmp
fcoml
jo,pn
popa
filds
repz
mov
push
dec
mov
imul
loope
fstpl
mov
xchg
xor
xchg
ss
bnd
dec
iret
jo
popf
aam
lods
rcrl
gs
addb
rcrb
mov
loop
ret
cmp
in
ja
pop
popf
test
push
imul
push
iret
sti
jp
add
arpl
push
mov
shlb
or
lea
roll
fists
mov
pusha
filds
add
xchg
leave
or
shlb
sub
sub
mov
push
xchg
sbb
icebp
inc
jl
mov
jecxz
mov
jg
outsb
push
mov
dec
js
mov
das
aam
ficoml
push
xchg
loope
jmp
cs
lds
dec
sub
sbb
mov
inc
test
fcmove
fdivr
iret
nop
ret
mov
lcall
enter
mov
inc
test
cmp
mov
shl
adc
loopne
cmp
push
in
inc
or
mov
xlat
shlb
pop
or
push
jecxz
xlat
xchg
int
add
pop
shr
cli
cmp
lea
and
mov
xchg
loop
shlb
loope
jle
sbb
fwait
push
scas
insl
fdivrl
repz
push
mov
das
mov
xor
ret
sub
mov
out
addr16
or
imull
jecxz
mov
pop
jns
insb
sub
xor
adc
inc
sbb
sub
shlb
data16
or
js
inc
pop
mov
dec
adc
mov
mov
adc
repnz
cmp
mov
aam
mov
sbb
add
lar
fisttpl
jle
out
push
ljmp
es
jp
push
pushf
leave
cmp
es
xchg
fdivl
adc
popa
loop
sbb
inc
xchg
jecxz
lahf
pop
and
ret
div
push
or
cmp
sub
das
pause
or
dec
ljmp
xor
pop
movsl
test
push
out
mov
push
ja
popa
sub
pop
mov
aaa
jno
jge
add
call
cli
or
mov
lds
ja
pop
out
pop
dec
aam
jg
test
pop
mov
inc
jp
fs
into
test
add
std
scas
jne
ret
mov
dec
rorl
in
pop
es
push
cmpsb
aad
mov
shrl
cmp
int3
xlat
test
in
mov
fs
ljmp
mov
bound
cmpsb
mov
adc
dec
add
jmp
scas
sub
mov
xchg
dec
inc
sbb
push
push
mov
scas
sahf
rcll
dec
test
and
jb
sbb
dec
mov
scas
push
sti
ror
xor
loop
add
idiv
insl
dec
fstpl
loopnew
ficoms
pop
inc
negb
out
div
mov
enter
dec
pop
jmp
pop
xchg
pop
fidivrl
inc
jne
in
fsubl
cmp
sub
lcall
jmp
inc
dec
and
movsl
es
ljmp
popa
dec
ret
aaa
shrl
mov
test
cmp
or
dec
mov
imull
push
jp
dec
fstpt
jmp
xor
sub
mov
ja
push
add
idivl
sti
sub
loope
ret
test
into
adc
pop
jno
js
aad
rorl
bound
cwtl
out
shrl
idivl
iret
in
and
adc
adc
xor
popl
mov
ret
out
iret
imul
outsl
pop
leave
or
sub
cli
and
pop
scas
fninit
jb
cwtl
mov
ret
push
mov
cmp
xor
mov
cld
adc
fldt
out
jmp
enter
hlt
pop
adc
sti
push
call
adc
and
sar
push
shlb
sub
sbb
call
test
es
push
test
or
adc
mov
mov
out
clc
mov
out
mov
cmp
in
xor
aam
push
sbb
xchg
leave
decl
loop
jb
mov
add
and
sbb
in
adc
lods
add
dec
int3
adc
and
xchg
sbb
push
fstpl
out
leave
mov
cmp
imul
push
insb
cs
sbb
mov
mov
dec
outsb
int
sub
push
sti
movsl
fidivs
mov
iret
pop
test
loopne
lea
fs
std
pop
xor
cwtl
shl
push
inc
inc
adc
mov
int3
xor
mov
push
pop
movsb
mov
push
push
cld
push
and
loope
call
repz
sbb
xchg
mov
stc
push
push
in
push
popf
cmp
sti
xor
movsl
jb
cmpsb
pop
dec
jne
stos
int3
push
insb
aaa
mov
push
push
adc
push
lods
hlt
stos
mov
orl
arpl
outsl
enter
or
pop
xor
mov
and
pushf
imul
test
aaa
pop
cmc
ficoms
or
negl
in
xlat
stos
addr16
mov
lret
pop
rolb
cmp
cs
hlt
test
sub
inc
mov
sub
mov
outsl
mov
jecxz
imul
dec
cmp
lock
jecxz
mov
mov
xchg
insl
subl
inc
and
cs
xchg
test
xlat
mov
stos
test
jl
and
cli
inc
scas
pop
cs
or
sub
cmc
lea
mov
jae
cli
push
dec
out
and
jmp
pop
aam
imul
sahf
cltd
inc
fs
jae
ja
int3
dec
mov
mov
pushf
push
clc
sbb
push
xor
cmpsl
pop
out
mov
push
push
cmpsl
in
test
outsb
xlat
js
pop
pop
in
movsl
xchg
push
lea
out
push
fidivrl
mov
jae
jbe
lock
mov
mov
aas
fnsave
jne
or
leave
dec
pop
mov
add
stos
mov
sub
add
test
xchg
jmp
mov
fnsave
loopne
jbe
sahf
cli
and
out
xor
icebp
jns
or
mov
dec
push
pop
in
sahf
loop
pop
jb
mov
and
dec
mov
stc
loopne
pop
lahf
lahf
test
inc
cltd
adc
test
push
add
cwtl
fidivrs
pop
rcl
test
push
lret
push
aaa
push
adc
popa
xchg
outsl
lods
loope
or
sub
in
xor
scas
aam
push
daa
rcrl
insb
pop
or
dec
cwtl
adc
ret
test
and
ss
xor
jbe
dec
shrb
inc
mov
mov
inc
loope
inc
pop
xor
mov
in
nop
sahf
add
movsb
mov
or
mov
aaa
jl
pop
dec
push
gs
lcall
out
jg
popa
pop
mov
add
pushf
cmpsl
aas
adc
popa
cld
dec
dec
and
pop
sub
hlt
fists
sbb
push
xchg
imull
push
bound
sub
scas
jb
cli
sub
xor
addr16
pop
shr
pop
iret
cmp
test
inc
add
fldt
cli
cmp
test
inc
push
test
sub
mov
arpl
add
cmpsb
iret
xchg
mov
sbb
es
mov
add
cmp
jl
ret
adc
iret
mov
jns
xchg
jns
xchg
sarl
loopne
adc
pushf
xchg
cli
jnp
stos
inc
push
dec
movsb
test
rorb
dec
enter
adc
add
xchg
stos
mov
pushf
xor
popf
mov
mov
out
inc
xchg
popa
pop
in
sbb
clc
daa
aad
mov
push
push
outsb
cmp
imul
jl
xlat
pop
xor
xor
cmp
pop
dec
sbb
or
sub
in
pop
mov
ret
inc
adc
adc
adc
shl
xchg
insl
pop
xor
mov
outsl
es
sub
push
jno
lds
hlt
jae
adc
loop
jb
fstpt
in
inc
leave
out
in
dec
adc
addb
fisubs
mov
repz
outsl
mov
stc
fimull
aam
mov
divb
sbb
out
popf
mov
or
cmp
push
loopne
pop
xchg
repz
popf
lea
and
xor
cltd
arpl
dec
push
nop
dec
sub
cmc
and
mov
mov
mov
movsb
push
add
jae
movsl
bound
mov
loop
fs
cli
add
sbb
dec
stc
aaa
or
jp
push
pop
test
xchg
es
cld
call
sub
cs
sbb
repnz
pop
movb
not
push
pop
inc
cmp
add
mov
push
pop
enter
push
mov
sbb
into
daa
jmp
sub
scas
int3
nop
fdiv
xor
jo
dec
nop
dec
insl
andb
mov
ss
adc
ljmp
sub
ret
lods
cmp
lahf
adc
inc
idiv
fadds
dec
and
jne
adc
mov
mov
or
test
adc
daa
mov
mov
mov
mov
jns
outsl
dec
or
hlt
imul
fdivr
cmp
sbb
and
add
sub
pop
das
or
dec
mov
jle
pop
lret
cli
sbb
adc
mov
lods
mov
inc
dec
xchg
mov
sahf
sub
jae
inc
insb
push
mov
dec
inc
sub
insl
call
sbb
and
popa
je
pop
jg
call
rcrl
cmp
mov
in
rcrb
jb
dec
adcl
ja
mov
lds
sub
idivb
ljmp
and
nop
lock
push
push
jecxz
enter
insb
sti
xchg
xlat
hlt
fsubl
pop
add
push
dec
xor
jg
mov
xchg
cld
dec
call
ss
push
fnstsw
call
outsb
cwtl
mov
pop
lcall
out
dec
and
adcl
jecxz
daa
or
jg
mov
rcrl
add
xor
push
and
mov
das
pop
mov
sbb
push
xchg
repz
repz
push
pop
arpl
jno
dec
lahf
adc
sbb
adc
dec
pushl
out
jp
and
and
aad
add
mov
cmc
xchg
out
fnstsw
js
xor
mov
inc
adc
roll
and
cmpsl
xor
cmp
xchg
sub
bound
cwtl
stos
out
or
sub
test
shrb
mov
outsb
lock
dec
pop
pusha
push
pop
negl
xchg
dec
pop
xlat
ljmp
stos
fisttpll
sub
rcrl
test
lcall
xchg
in
aas
mov
xor
stc
das
int
jo
out
lds
push
mov
add
dec
xlat
mov
sbb
mov
cmp
in
out
sub
mov
pop
cmp
sub
adc
stc
out
call
xchg
sahf
jle
fmuls
xchg
popf
push
pop
pop
int3
cli
out
jp
cmp
js
xchg
clc
sbb
adc
and
les
xchg
fiaddl
push
rcrl
push
fwait
movsl
clc
mov
in
and
cmp
sahf
jo
ljmp
cmpsb
call
lods
lds
cmp
dec
sub
cld
push
and
ds
int
mov
dec
xor
push
cli
mull
pop
shrl
cwtl
sub
enter
add
jnp
inc
mov
or
nop
ficompl
fadd
cltd
lahf
or
fnstenv
xchg
int
jmp
sbb
nop
loopne
leave
xor
jae
imul
pop
cltd
mov
stc
mov
scas
push
or
sbbl
hlt
dec
and
jecxz
outsl
inc
sub
das
jbe
jne
sarl
xor
ss
xor
adc
fadds
call
rcll
jmp
movsl
pop
pusha
add
int
inc
push
fisubrs
xor
sub
in
jmp
jne
ficompl
or
push
das
sub
or
imul
popf
pop
xchg
xchg
jo
fbstp
mov
add
test
jp
ja
mov
leave
movsb
mov
push
inc
lds
pop
rorb
jb
dec
in
out
enter
repz
rorb
mov
insb
xchg
addr16
or
mov
in
lahf
data16
repnz
mov
sub
xchg
jg
shlb
dec
sbb
imul
stc
scas
jne
pusha
fisttpl
movsb
addr16
sub
jb
mov
out
dec
jns
aas
mov
cmp
push
sbb
nop
mov
lahf
out
xchg
xchg
fsubs
dec
pop
cmp
xchg
dec
cmp
hlt
stos
mov
inc
es
orl
imul
jmp
bound
mov
xor
mov
adc
popf
or
mov
dec
push
mov
xor
dec
pop
pop
mov
lret
andl
push
fcoml
sub
jg
cmp
xlat
mov
leave
mov
ret
pop
cmp
rorl
test
jg
mov
cmpl
aam
insb
es
orl
push
pop
pusha
lds
xchg
gs
or
fidivrl
fcoms
fwait
jns
mov
repz
mov
pop
std
clc
je
jbe
hlt
mov
leave
cmp
icebp
enter
rolb
sarb
sbb
jg
aaa
sbb
outsb
outsb
scas
xchg
xor
dec
sbb
std
mov
cmpsl
mov
mov
xor
fstpt
out
aaa
jne
inc
xchg
dec
jmp
and
mov
lahf
popf
mov
push
or
in
adc
cmp
mov
js
adc
clc
adcb
pusha
leave
jnp
and
jno
dec
filds
mov
mov
lods
mov
incl
sub
test
shr
scas
ljmp
subl
sbbb
xor
dec
sub
cmp
loop
adc
roll
mov
in
lcall
addr16
fadd
lea
inc
inc
push
pushf
cmc
jl
stos
sub
jno
addl
je
mov
xchg
stos
or
pop
pop
inc
sbb
and
call
arpl
xor
ljmp
fmuls
shrl
and
test
rolb
pop
inc
sbb
out
insb
movsb
test
shll
mov
push
bound
mov
jmp
lods
cmp
es
push
mov
xchg
stc
std
outsb
js
loop
push
testb
data16
ret
loopne
insl
divb
sub
add
test
pop
push
jae
jb
cmp
nop
xor
popf
fisubrs
int3
jno
inc
xchg
fdivrl
movsl
adc
aad
pop
xor
ss
sti
xor
repz
cld
xchg
xchg
das
ljmp
sbb
lret
decl
sub
aaa
dec
data16
jb
jo
mov
sbb
arpl
add
jg
loopne
adc
xchg
fdivrs
enter
adc
dec
xchg
xchg
pop
ret
pop
mov
mov
repz
push
push
xchg
add
outsb
cmp
ror
in
fcomps
dec
loop
jne
inc
cmp
xor
clc
shl
mov
sbb
js
pop
mov
sarb
jmp
mov
dec
pop
imul
push
xchg
pop
mov
ficoml
sbbl
js
xor
cmp
in
sub
xlat
loope
or
or
out
xor
cmpsl
mov
pop
loop
out
aad
xlat
inc
pushf
loop
lods
clc
sub
jb
pop
and
lods
xchg
jmp
in
xchg
lds
das
testb
jbe
pop
xlat
lock
jl
movsb
or
pop
jl
jmp
mov
sbb
push
js
jg
jle
rolb
xchg
mov
pop
imul
mov
test
pop
aaa
lahf
add
mov
aad
addb
mov
sub
xor
data16
push
jl
shll
jne
out
in
cltd
pop
rcrb
pop
mov
adc
loop
imul
repnz
shll
arpl
xor
or
rol
cmp
sub
jnp
cmp
das
imul
push
sti
mov
pusha
ja
jb
loopne
sub
dec
aaa
daa
mov
xchg
xlat
aad
cmpsb
sub
loopne
loopne
xchg
or
inc
cwtl
inc
jb
pop
pop
sbbl
aam
pop
push
popa
jge
mov
mov
adc
inc
mov
aad
pop
cmp
xchg
ja
jl
push
mov
cmpsb
push
mov
sti
cli
mov
shll
and
nop
mov
sub
mov
popa
cmpsl
sub
inc
ja
fldt
dec
adc
lea
nop
xchg
cmp
test
loopne
jns
dec
iret
push
inc
jns
sbb
sbb
jmp
lea
or
test
add
stc
or
ret
mov
aas
mov
adc
cmp
jle
sub
lret
scas
mov
mov
in
imul
repz
lods
xor
mov
cli
jecxz
ret
mov
fadd
subb
mov
xor
lds
push
push
out
lock
lods
adc
sub
enter
ret
jl
jb
xor
daa
mov
rcll
xchg
push
fs
add
xor
ljmp
sbb
xchg
out
test
pop
xchg
scas
xor
and
mov
pop
in
add
cmp
mov
sub
in
add
and
dec
call
das
fistps
ja
ficoml
mov
stos
clc
mov
adc
cltd
push
xchg
or
and
jbe
push
jnp
adc
mov
sub
pop
jle
jmp
lock
sbb
push
pop
cmp
gs
pop
xchg
xchg
cs
int3
pop
ret
lods
cmp
scas
push
sbb
loope
clc
push
mov
mov
test
lods
mov
adc
xor
iret
out
inc
fsubrs
xor
or
out
notb
cmp
leave
mov
loop
jnp
dec
mov
xchg
jbe
shl
cs
std
pop
sub
cmp
mov
push
aam
sahf
xchg
pop
dec
pop
jl
cmpsb
push
jbe
pop
jb
ret
sub
xchg
repz
push
pop
es
xchg
jp
pop
fidivrs
inc
inc
cltd
xchg
push
xchg
xor
mov
cs
adc
dec
lock
aad
sbb
lret
cmpsb
movsb
sub
mov
ss
fwait
push
xor
mov
or
ljmp
stc
add
xchg
cmpsl
push
insl
gs
fldt
mov
nop
and
loopne
sbb
decb
psrlw
push
out
add
test
enter
inc
mov
mov
pop
jnp
lret
stos
dec
fistpll
jg
in
mov
xchg
cmp
pop
mov
add
pop
bound
and
sbb
into
out
sbb
jle
cmp
and
inc
js
push
add
out
adcl
jbe
clc
nop
xchg
mov
cltd
and
push
shll
stos
push
jl
aas
jge
leave
sub
dec
popf
and
or
jecxz
popa
push
outsb
das
xor
mov
mov
and
outsb
cmp
out
pop
outsl
lret
jns
sub
mov
add
mov
cld
dec
dec
sbb
scas
fbstp
add
add
in
sarb
push
xchg
mov
cmp
inc
mov
imul
xchg
inc
bound
and
or
aam
mov
repz
jne
test
rcrl
shll
loop
cmp
xor
sbb
stos
es
iret
leave
push
mov
lahf
push
mov
enter
inc
int3
int
cmp
jnp
lcall
mov
mov
xor
in
jp
and
sbb
dec
int3
dec
pop
test
inc
mov
dec
add
aad
pushf
int3
lea
test
stos
xor
pop
xchg
andb
mov
mov
daa
fcompl
iret
call
outsb
add
sbb
and
daa
test
mov
js
mov
xchg
mov
xchg
push
jb
mov
popl
movsl
xchg
push
inc
add
jmp
sbb
mov
mov
pop
adcb
cmp
and
adc
jecxz
or
stos
sbb
movsb
xchg
dec
cmp
mov
repz
push
mov
xchg
scas
sub
sub
xor
mov
mov
addr16
xchg
xor
lahf
jne
cmp
mov
inc
mov
sbb
fnsave
outsl
xchg
mov
xor
mov
int
mov
lea
jno
and
pop
xchg
dec
fwait
push
xor
icebp
sarb
faddl
cmpsb
cwtl
xor
and
aaa
jmp
inc
ret
repnz
jmp
jl
clc
das
test
movsb
jp
pop
jne
jae
testb
xchg
repnz
push
ss
adc
push
fwait
mov
mov
push
push
popa
scas
mov
mov
popf
push
lret
stos
lcall
xchg
push
frstor
adc
pop
dec
mov
mov
leave
jbe
dec
cmc
mov
orl
or
inc
or
pop
inc
outsl
out
sbb
xchg
js
shl
test
dec
inc
add
orl
dec
cld
stc
xchg
shrb
xchg
jo
addr16
pushf
xchg
test
pop
rorb
in
les
in
out
sarl
stc
mov
mov
adc
in
cmc
aas
xchg
sbb
cli
dec
add
pusha
dec
movsb
jne
mov
and
push
imul
cmpsb
mov
mov
and
iret
mov
mov
mov
cld
rcr
fidivl
jno
lods
jns
movsl
push
jo
xchg
cmpsb
push
ljmp
jae
es
xchg
ja,pt
repz
filds
cmp
lcall
popl
jle
adc
dec
daa
int
dec
repnz
jo
xor
inc
xorl
cs
fisubrs
xchg
popa
pop
adc
mov
jns
xlat
nop
mov
push
and
ret
adcl
adc
jle
loop
inc
sub
and
cltd
inc
push
pop
scas
mov
jnp
inc
ret
inc
xor
xor
dec
insb
cmp
into
cwtl
clc
fs
loope
imul
lock
outsl
maxps
ds
andl
mov
lcall
hlt
push
push
dec
pop
sbb
sub
fbstp
arpl
ja
sub
pop
xchg
adc
lds
cs
sbb
movsb
fisttpll
inc
push
cmp
out
aad
lock
mov
stos
mov
in
push
jle
hlt
inc
adc
mov
push
and
sysret
push
inc
add
sbb
mov
es
cmpsb
cmp
mov
out
stos
rolb
pop
sbb
mov
jne
arpl
xor
sub
add
outsl
cld
dec
aas
data16
push
and
cmpsb
xor
leave
out
movb
into
cli
xchg
negb
mov
rolb
and
int3
jne
scas
arpl
scas
or
or
in
push
in
cs
jb
ret
test
lock
sbb
shrb
sub
push
dec
jmp
repnz
jge
jae
push
jmp
xchg
and
call
popa
push
add
xchg
lea
movb
cmp
sahf
xlat
xorl
jo
inc
xchg
sbb
push
xchg
cmpsb
jge
fbstp
gs
imul
sub
adcb
adc
xchg
mov
lods
adc
mov
inc
insb
lock
xchg
pop
out
arpl
xchg
jmp
cmp
loop
mov
cmp
push
fiadds
shll
lea
jge
dec
sahf
cmp
mov
and
sub
addl
mov
and
pop
inc
loopne
incl
push
xorl
or
jb
jno
dec
aad
sub
in
stc
mov
dec
out
dec
lock
or
adcl
shr
out
hlt
push
push
xlat
aas
push
push
xor
aas
shlb
fisttps
adc
cltd
mov
or
and
ds
xor
adc
scas
mov
popl
inc
out
mov
mov
and
iret
pop
xchg
in
push
aam
negl
jae
sub
mov
lcall
ret
mov
cwtl
pop
mov
ret
insl
pop
pushl
mov
sbb
lds
movsl
stos
out
cmp
test
jb
xchg
and
push
daa
and
inc
dec
lods
enter
insb
mov
stos
fisubrs
mov
mov
in
inc
addr16
lods
lods
mov
pop
mov
lods
pop
repnz
and
add
cmp
rorl
jno
cmp
mov
ja
xchg
lcall
cmpsl
sbb
mov
fsubrl
subl
mov
mov
aaa
repnz
sbb
jp
js
clc
adc
jnp
mov
jnp
dec
int
push
in
loop
add
pop
rclb
imul
divl
and
lret
enter
mov
fnstsw
and
fadds
fcmovb
dec
dec
mov
inc
lahf
popf
outsb
mov
adc
mov
jmp
mov
les
push
or
add
outsl
sub
lods
jmp
push
repz
cmp
jecxz
aam
imul
cmpsb
aas
adc
xor
pop
mov
push
cli
pop
xor
loopne
out
mov
mov
iret
insb
icebp
rcrb
pop
imul
dec
xor
xchg
cmp
xchg
dec
jb
xchg
les
xor
arpl
aaa
insl
lds
popa
mov
jns
mov
xor
lods
lahf
xchg
cld
shll
xchg
fbstp
test
hlt
pop
imul
shrb
mov
js
mov
in
or
mov
jns
inc
mov
ror
repnz
mov
cmp
xor
inc
sbb
lret
inc
mov
dec
leave
mov
xchg
add
cmp
cmp
cmpb
cwtl
fidivrs
movsl
shll
test
push
cltd
jecxz
or
popf
cmc
cli
mov
loopne
enter
loop
sbb
mov
mov
hlt
sahf
fnsave
je
ret
sbb
or
pop
enter
mov
mov
inc
dec
shlb
push
pop
mov
notl
lods
or
push
adc
fs
loope
pmulhw
and
sbb
movsl
mov
sub
lods
sbbb
or
sub
insb
mov
jl
repz
push
ss
mov
ja
sti
adc
xchg
jmp
dec
or
ret
hlt
fldt
scas
int
jbe
add
icebp
or
loope
jb
sub
add
xorl
ljmp
clc
adc
je
bound
sub
mov
aam
pusha
mov
push
adc
xchg
cmp
cli
gs
inc
fs
pop
cld
dec
jge
leave
fs
psubd
sub
clc
rcrb
movsl
mov
jmp
loop
mov
mov
ja
outsl
push
out
add
sub
orb
lret
jbe
push
mov
xchg
ficoms
stc
push
sbb
das
mov
dec
jns
cmpsb
movsb
ds
inc
mov
or
cmp
aas
testb
sbb
inc
jns
cmp
int
pop
loope
sub
ljmp
inc
mov
mov
sti
mov
aas
or
inc
cmpsb
xor
and
cli
repz
push
pop
xchg
mov
or
pusha
je
std
jae
and
inc
cmp
or
aaa
ja
popf
pop
xchg
mov
mov
adc
leave
sahf
repnz
rcr
dec
jb
aaa
xor
pop
add
outsl
dec
xchg
mov
je
pusha
mov
xchg
mov
movsl
push
sbb
out
inc
arpl
mov
push
xor
mov
jno
jne
out
repz
ja
xchg
fwait
mov
cmp
cmp
dec
shl
mov
push
ret
lds
mov
outsb
mov
jne
scas
test
movsl
xchg
mov
sbb
mov
decb
and
xchg
add
sub
mov
and
in
fs
int3
and
and
gs
jmp
jno
lods
in
std
or
imul
xor
sbb
insb
test
ljmp
cmp
push
mov
dec
lahf
jns
js
or
movsb
push
push
pop
leavew
idivl
or
add
pop
xor
jns
test
out
adc
xchg
push
loop
sti
imul
sbb
mov
push
shrb
xchg
orl
push
jge
cmc
ss
push
dec
or
cmp
rcrl
cmp
inc
sarl
addb
hlt
sub
je
pop
push
mov
icebp
idivb
enter
add
pushf
jnp
add
and
in
and
push
fwait
sbb
xlat
mov
xchg
dec
fnsave
inc
ss
xchg
clc
push
das
lret
mov
lea
call
and
or
push
fcoml
cmp
adcb
ss
xor
xor
push
mov
inc
stos
or
cld
jmp
sub
cld
jecxz
sub
daa
jne
test
or
mov
inc
sub
in
or
lock
or
jne
sbb
pop
mov
sub
into
jl
xchg
inc
popa
sub
loope
pop
into
push
jb
jp
add
xchg
mov
inc
push
orb
jmp
stos
inc
negb
int3
outsl
cmp
es
sahf
insl
xorl
adcb
testb
sbb
testl
fisubrs
movb
inc
sbb
cs
sub
sub
sbb
lea
out
cs
xchg
xchg
cmp
sbb
lods
outsb
loop
push
and
in
mov
jge
int
mov
dec
nop
sbb
pusha
xchg
test
xor
mov
scas
or
addr16
cmp
sub
mov
sub
push
sbb
popa
aaa
jmp
pop
jge
fcomp
sti
pop
mov
daa
push
sarl
add
inc
aam
adc
add
sbb
mov
pusha
lds
jmp
add
jbe
lcall
lods
push
icebp
sub
xchg
pop
movsb
mov
and
xor
mov
xor
mov
inc
inc
fstpt
scas
inc
adc
sub
fwait
mov
sub
xor
inc
xor
mov
test
in
repz
add
adc
mov
add
rorl
popf
pop
cltd
pop
inc
popa
mov
mov
xchg
dec
aad
divl
adc
loopne
shlb
inc
sub
std
test
sbbb
out
push
gs
adc
repz
or
push
sahf
adc
mov
jge
arpl
aad
push
imul
shll
fmull
int3
push
mov
lcall
movb
or
ljmp
ucomiss
xchg
subl
daa
int
sbb
lret
adc
and
or
dec
lret
lods
xchg
ret
inc
pop
dec
popa
cmp
std
aas
out
insl
mov
insl
xchg
cwtl
andb
out
pusha
mov
add
sbb
add
popf
mov
sub
add
scas
inc
pushf
sub
jp
inc
mov
jecxz
lea
mov
mov
lahf
lods
testb
sbb
hlt
xor
ljmp
mov
hlt
bound
jae
int3
mov
scas
mov
fwait
cmp
lea
mov
jno
lea
or
push
fwait
ss
loopne
fsubp
popa
pop
das
repnz
mov
or
lods
xor
add
push
jmp
mov
in
filds
mov
jmp
xor
mov
push
or
mov
les
fisubrl
outsl
sub
lcall
dec
add
dec
and
push
push
jge
out
rcrl
mov
ret
stos
shrb
aaa
and
imul
sbb
xorb
aaa
push
add
lods
daa
dec
imul
fsub
add
inc
imull
mov
sbb
test
int
add
stc
pop
lea
sub
movlps
dec
ffree
mov
xor
jnp
xor
jl
imul
enter
insl
push
lods
pop
into
mov
add
shlb
cmp
insb
and
push
add
mov
js
xchg
test
leave
out
xchg
inc
cld
jo
jmp
jb
push
stos
cli
xchg
mov
out
push
rorb
aam
loope
cmpsl
sub
inc
xchg
mov
mov
aaa
lock
dec
mov
xor
sarl
insb
push
das
rcrl
sub
mov
mov
mov
adc
stc
insb
in
and
inc
out
dec
insb
insl
stc
pop
cmc
pop
rolb
mov
aam
mov
inc
fcoms
mov
sub
or
jbe
jmp
dec
jae
pop
xor
gs
pop
loop
ret
js
mov
in
add
pop
push
cmp
decb
out
jns
out
enter
mov
jae
fwait
ds
jbe
cmc
addr16
add
imul
mov
jbe
dec
mov
and
hlt
bnd
jl
fisubl
js
ret
push
xchg
clc
std
jns
cld
pop
cmp
sti
inc
xor
lret
mov
mov
lock
cmp
add
lods
and
and
mov
fldt
sbb
pop
jne
mov
push
sbb
pop
push
mov
pop
out
fisttpll
fisttpl
cmpsb
sub
test
dec
fstpl
js
push
jmp
jle
mov
les
push
dec
xchg
enter
fstpl
jg
push
add
mov
dec
aad
adc
ds
add
or
push
negl
cs
jnp
cld
lods
stc
mov
add
fcomp
sub
inc
and
iret
cmc
lea
out
xor
sbb
push
adc
push
or
mov
add
in
adc
cmc
sub
out
jae
mov
mov
fcomps
mov
cmc
cltd
cs
enter
jl
xchg
dec
inc
adcl
subl
punpckhdq
sub
push
push
adc
xchg
ret
in
mov
add
cwtl
xor
enter
xor
aaa
outsb
je
xchg
jmp
or
mov
scas
int
mov
xchg
cmp
pop
xchg
add
or
fmulp
outsb
jle
sbb
inc
stos
cmp
aad
mov
loop
mov
xor
push
inc
mov
cs
dec
or
out
jg
xchg
pop
pop
mov
bound
pop
and
mov
sbbb
xlat
test
sti
dec
cmp
or
mov
rcll
push
mov
fistps
dec
push
and
out
scas
cli
pop
add
xor
and
in
dec
mov
outsl
mov
jne
push
ficoms
jb
popa
fdivr
push
push
sub
fidivrl
int3
stos
aad
jecxz
stc
or
jns
outsl
aas
stc
fsubrl
jne
popf
push
and
mov
fnstsw
inc
roll
out
pop
sahf
imul
dec
das
sarl
mov
push
pop
and
push
call
testb
movsl
fsubr
adc
lret
lods
nop
and
out
mov
out
lock
movsl
sub
push
mov
mov
test
lret
in
push
out
sub
xchg
test
xchg
repz
pop
inc
sub
pop
add
mov
lods
dec
jecxz
daa
push
jae
pop
lret
arpl
aam
or
sti
xchg
cld
daa
xchg
mov
stos
call
xchg
mov
in
aam
enter
fwait
inc
gs
repnz
les
jno
cwtl
into
outsl
jnp
xor
aad
mov
mov
hlt
sub
sub
hlt
jno
adc
rorb
scas
sbb
cli
inc
imul
mov
push
loop
adc
rcrb
clc
stos
pusha
cmpb
std
call
es
in
pop
xchg
cmp
ret
add
add
mov
lret
bnd
outsb
movsl
fisubl
in
add
arpl
outsb
xlat
push
mov
cli
pop
mov
lods
psrlw
mov
ret
daa
js
inc
ja
pop
push
rclb
fmull
pop
sbb
sub
mov
mov
rcll
fidivrs
sub
fs
cmp
push
out
stos
pop
adc
mov
pop
sub
leave
nop
sbb
mov
imulb
jge
jo
mov
jnp
sbb
cmc
cs
iret
mov
push
loopne
xlat
dec
cwtl
incb
adc
jp
ja
cltd
add
push
inc
jge
outsl
ss
hlt
fisttpl
cli
push
cmpsl
jle
jle
adc
xchg
mov
lea
in
daa
shll
addl
xor
leave
xchg
xor
push
pop
les
bound
jg
mull
aaa
sub
add
and
or
sub
and
scas
jmp
stos
lret
cmp
pop
outsb
daa
mov
push
jns
mov
pop
fs
pop
pushf
and
sti
loopne
fsub
rorl
or
adcl
movsl
repz
xchg
cs
lds
and
imul
fisubs
aas
push
xlat
shrl
lret
or
lahf
pop
out
xor
pop
nop
xchg
xchg
xchg
add
test
mov
jmp
cs
or
aaa
inc
and
or
push
psubq
cld
loop
inc
push
cmpsl
jns
and
fnstcw
js
in
mov
cmp
mov
cmpsl
jmp
in
shll
push
xor
pushf
stos
and
mov
mov
lcall
ficoml
sbb
mov
mov
and
mov
jb
xchg
icebp
mov
aas
add
test
std
std
sahf
leave
pop
fisubrl
sub
shr
stos
adc
or
jns
push
jle
lret
lea
aam
or
ljmp
push
sub
push
cmpsb
int3
movsl
mov
int3
into
cmp
mov
cmp
mov
rclb
push
xlat
sub
inc
mov
loopne
and
pop
jne
pop
scas
out
mov
pop
mov
rcl
nop
pop
mov
fnsave
roll
lods
cltd
jge
jb
cmpb
test
pop
loop
jmp
fistl
shll
fildll
jmp
sub
lock
xlat
xchg
enter
imul
sahf
pushf
lock
lret
mov
fadds
cmc
and
pop
pushf
popf
das
pop
lret
rorb
test
jmp
test
test
stos
lock
sbb
push
mov
fldcw
adc
gs
mov
sarb
cmp
sub
imul
mov
shrb
sbb
push
cmpsl
sti
dec
jl
dec
add
bound
mov
fistps
push
mov
jp
xor
and
add
xchg
rolb
mov
xor
mov
mov
inc
rcll
lods
adc
icebp
pop
rclb
call
inc
xlat
mov
add
inc
dec
shlb
jle
fstps
cmpsb
aad
sbb
sbb
add
inc
addl
imul
daa
mov
movsl
adc
aad
jb
sub
xlat
push
xchg
popf
inc
jb
cwtl
mov
sahf
and
push
or
xchg
loope
lret
and
ja
pop
ret
fnsave
outsl
lods
mov
daa
push
mov
cmc
leave
xlat
cltd
push
test
into
cmp
insl
xor
enter
enter
in
adc
adc
ficoms
div
jecxz
clc
in
or
xchg
add
inc
or
lods
xchg
push
dec
inc
inc
hlt
adc
add
push
add
adc
mov
xchg
sti
loop
icebp
push
mov
aas
mov
push
outsb
xchg
cmp
cli
and
out
popf
push
and
push
fs
add
aad
loop
lcall
or
test
xchg
adc
or
insb
push
dec
pop
jl
aas
xchg
inc
dec
adcb
ret
and
ss
add
mov
lcall
xor
shrl
leave
imul
adc
adc
mov
rcll
jge
popf
sub
scas
fsubp
es
add
push
imul
scas
add
movsl
mov
add
andl
and
xlat
cmc
in
mov
cmpsb
and
jge
pop
mov
mov
lea
sub
pushf
les
fwait
daa
sub
sbb
je
shlb
or
leave
xchg
dec
xchg
cmp
add
xor
cmp
cmp
jb
jns
push
bound
lods
lahf
xchg
cmp
fimuls
fldl
loopne
adc
aam
scas
push
jne
mov
xor
movsb
ljmp
idivl
out
xor
cmc
sub
jae
cltd
pop
in
js
rolb
lea
pop
and
inc
xor
jmp
or
sub
xchg
push
cmp
dec
cmp
push
mov
push
and
jg
mov
les
fucomip
mov
cmp
adc
adc
push
popf
scas
and
dec
push
jp
test
and
sub
push
xchg
cmpsl
scas
push
mov
xor
xchg
dec
das
jb
loop
xchg
cmp
push
mov
push
addr16
fsts
out
cmp
aad
inc
dec
pusha
xor
insb
enter
xor
scas
stc
xchg
pop
cmp
push
pop
push
bound
in
sbb
test
daa
mov
insb
adcw
add
lods
arpl
cmpl
pop
add
stc
push
test
repnz
inc
movsb
inc
cmp
das
sbb
cmp
fstpt
inc
mov
lea
inc
cmpsl
pop
or
push
mov
addr16
dec
fbstp
imul
jp
aas
inc
jns
push
inc
mov
jno
pop
sbb
jecxz
test
lds
rolb
add
lods
xor
push
mov
sti
sti
and
out
sti
mov
jecxz
icebp
andb
mov
mov
dec
xchg
xorl
jb
mov
pushf
pop
scas
add
insl
pop
hlt
jbe
popf
test
jb
in
xchg
cwtl
mov
pop
mov
mov
bound
ss
repnz
dec
movsb
test
sbb
outsl
mov
and
mov
repnz
xchg
lock
push
inc
pushf
out
fildl
cltd
stos
xchg
cwtl
pop
sbb
inc
adc
sarl
dec
inc
jb
addl
pop
enter
loopne
rcll
pop
sub
inc
stc
adc
pop
outsb
scas
and
ret
push
flds
sbb
lret
loope
dec
insl
test
xchg
push
shll
xchg
jno
jl
push
cmp
ror
mov
push
clc
pop
dec
push
imul
sti
mov
inc
pusha
pop
pop
xor
aad
xchg
sub
subl
xchg
dec
pop
loopne
jno
mov
xchg
fxch
andl
xchg
push
dec
adc
cltd
in
xor
outsb
fsubl
mov
movsb
lret
xchg
sbb
and
fwait
cmp
jne
int3
mov
cmp
test
or
push
cltd
flds
scas
pop
inc
arpl
dec
push
add
shr
pusha
mov
scas
mov
es
mov
sbb
mov
sub
mov
aam
jbe
cmpsl
inc
fistl
test
ret
je
dec
xor
test
push
shrb
xchg
mov
in
cmc
fistps
mov
sbb
sahf
cmc
addb
aam
dec
sbb
mov
pop
cmp
mov
xor
cwtl
cmp
xlat
mov
loopne
sub
loopne
rcrl
mov
xlat
add
cmc
das
cmp
lret
lret
cmpsl
mov
xor
dec
xor
mov
popf
add
lret
addr16
arpl
jp
js
negl
or
dec
scas
or
js
sbb
pushf
dec
push
lods
adcb
push
std
inc
and
pop
dec
leave
xchg
outsb
mov
dec
inc
cmc
in
fwait
or
dec
dec
imull
ss
xchg
adc
call
outsb
pop
jl
mov
sahf
inc
inc
xchg
idivb
inc
mov
bound
call
in
mov
aas
sub
sbb
es
xchg
sbb
jp
fsubr
ja
decl
mov
mov
xor
jae
xor
mov
andb
out
inc
leave
and
pop
and
cmpl
lea
pop
inc
es
aad
xchg
and
cmp
or
mov
xchg
push
sbb
dec
aas
or
pop
mov
js
shrb
test
adc
add
das
fsubrl
clc
sbb
aas
lds
mov
xor
stos
sbb
outsl
ss
fnstenv
xchg
or
ja
mov
or
divb
mov
pop
xor
fbld
bound
std
in
mov
scas
inc
adcb
adc
shlb
and
inc
cmc
flds
mov
ficoml
pop
dec
cmpsl
mov
in
out
mov
inc
mov
lret
or
adc
pop
stos
sahf
in
test
sub
icebp
call
enter
xchg
xchg
scas
jl
lcall
mov
mov
sbbb
leave
fistps
jne
pop
fdivr
ds
subb
icebp
ficompl
fadds
cmp
xor
pop
add
push
sbb
sbb
jle
adc
imul
jo
les
addr16
mov
inc
sbb
pop
mov
leave
xor
enter
push
jecxz
jae
mov
cmpsl
out
adcl
add
fabs
push
sti
push
xor
dec
sbb
cmc
jbe
cmpb
cmp
push
sbb
cwtl
pusha
add
mov
sub
movb
pop
movsb
pop
pmuludq
test
cmp
lret
cmp
insl
ret
mov
sbb
sbb
xor
inc
mov
and
fdivs
notl
xchg
add
add
lcall
imul
xchg
sub
incl
sbb
inc
mov
mov
aaa
sub
add
jne
daa
ljmp
dec
xor
sub
mov
in
xchg
and
sahf
aad
jl
mov
sub
pushf
mov
lahf
andl
bound
aas
sbb
cmc
lea
xor
mov
cmpsb
stos
xchg
aas
enter
inc
mul
orl
mov
insl
pop
jne
push
dec
pop
cmp
and
stos
cltd
sbb
mov
add
dec
mov
cmc
push
inc
rcrb
sub
enter
and
cmp
adc
sti
sbb
arpl
push
cmp
mov
rcrl
push
dec
scas
and
lcall
xchg
test
sbb
jae
outsl
nop
mov
je
stos
sbb
jne
sbb
addr16
pushf
out
mov
xor
or
mov
mov
or
in
cmpsb
dec
sbb
aas
das
out
mov
dec
push
mov
lds
mov
scas
imul
xlat
sahf
fnstenv
mov
jecxz
add
xchg
dec
mov
jbe
enter
jmp
xor
jne
rcrb
ret
dec
sub
push
dec
or
roll
ret
aad
aam
shr
push
fildll
sbb
push
add
sub
xor
push
push
int3
hlt
adc
cmp
lock
xor
add
sarl
nop
adc
adc
es
or
inc
cmp
mov
fisubrs
rorl
add
loop
xor
xor
jecxz
arpl
jne
sub
cwtl
push
inc
aad
fsubs
dec
mov
mov
jge
pop
or
pop
adc
popf
sahf
adc
lcall
fwait
mov
dec
mov
pop
or
mov
fisubrl
fsubrl
imul
in
cli
f2xm1
out
mov
adc
and
fsubs
dec
pop
lock
loop
dec
aad
loope
mov
int
and
lds
xor
ret
add
mov
mov
pop
rcl
fldenv
stc
xchg
cmc
adc
mov
jmp
pop
mov
dec
xchg
gs
fcomip
cmpsl
insl
out
sub
sbb
pop
jmp
and
dec
cwtl
push
sub
jg
nop
clc
cs
sbb
and
xor
sbb
jno
addr16
add
push
jns
scas
inc
push
mov
jmp
xchg
je
cmp
add
jge
popf
int
fnstcw
jle
scas
call
xchg
or
sub
pop
repz
stos
mov
test
mov
pushf
orl
inc
clc
fcoms
mov
lds
subb
sub
mov
adc
lret
popa
movsb
push
dec
dec
test
test
mov
idivl
pop
das
inc
fs
int
or
cmp
std
mov
daa
js
cli
aaa
bound
xchg
adc
loop
lds
in
and
xchg
aas
ret
xchg
push
out
cld
scas
pop
sub
push
add
scas
gs
sbb
sbb
push
cmp
sub
inc
inc
dec
push
int
pop
push
dec
pop
arpl
push
in
faddl
dec
sbb
sahf
testl
bound
sarb
adc
sbb
test
cmp
cltd
pushf
mov
xchg
call
inc
xchg
movsb
or
outsl
adc
and
cltd
gs
pop
or
clc
pushl
rcrl
movsb
xor
roll
add
mov
cmp
dec
lret
pop
xchg
out
and
ljmp
lods
fdivrp
and
or
sub
cmp
mov
pop
add
dec
aam
pop
lret
lret
and
filds
leave
cltd
xlat
faddl
stc
add
addl
push
xchg
inc
pop
jecxz
jae
sub
adcb
sub
cmc
mov
pop
aaa
mov
in
ljmp
and
stos
jns
sbb
loopne
fstps
sub
js
aam
jl
mov
add
sbb
enter
mov
jne
out
lretw
or
jnp
popf
dec
arpl
xchg
push
lds
dec
int3
stc
and
mov
push
cltd
mov
daa
cmpsl
pop
ficomps
xchg
lcall
pop
ds
popa
ret
push
das
ljmp
jge
adc
mov
jmp
sub
test
mov
inc
imul
sub
outsb
cwtl
mov
xchg
mov
sub
inc
mov
daa
neg
push
mov
ss
sub
jle
mov
hlt
leave
mov
adcb
cmpsl
pop
xor
sub
scas
push
adc
push
dec
div
and
call
cmp
mov
pop
xchg
popf
leave
xchg
or
mov
pop
mov
mov
pop
notl
cs
jb
in
push
das
dec
mov
or
inc
mov
or
test
sbb
mov
sub
outsl
jo
sub
sbb
outsl
push
pop
or
frstor
in
test
int
push
repz
into
stc
jb
xor
pop
sahf
mov
test
out
jmp
or
pop
mov
add
popa
sar
push
mov
adc
push
popf
cli
loopne
mov
xlat
shl
mov
lods
addr16
push
repnz
xchg
mov
push
psubsw
push
popf
dec
test
and
lret
mov
filds
pop
or
adc
xchg
stc
insl
push
nop
gs
jmp
xor
xor
xchg
jno
ljmp
mov
std
pop
jns
rclb
fwait
das
cmp
sub
adc
mov
sarl
add
mov
adc
stos
cld
insl
dec
std
in
jno
and
pop
cmp
ss
xor
repz
mov
or
outsl
jmp
js
ljmp
or
fists
adc
dec
push
in
jo
cmpsl
cltd
pop
testl
popa
jae
xchg
mov
push
jns
or
ret
cld
pop
or
xor
stc
cmpsb
add
pop
pop
out
pop
mov
sar
or
lret
in
scas
rorb
adc
and
pop
pop
mov
mov
dec
push
gs
mov
fcomi
in
xor
mov
jnp
adc
jp
repz
adc
pop
outsl
pop
adc
cltd
or
lods
mov
add
ja
mov
test
cmc
pop
xchg
mov
sbb
repz
dec
in
filds
lock
sti
inc
xor
adc
sbb
jge
xor
in
mov
mov
adc
push
test
xchg
mov
outsl
addr16
mov
xlat
mov
scas
sub
mov
fcomp
xchg
movsl
add
pop
js
movsb
in
mov
inc
std
ficomps
dec
scas
lock
leave
adc
push
push
ljmp
fs
mov
call
js
xor
in
in
push
pop
fstpl
or
sub
adcb
mov
lcall
lret
cmpsl
bound
out
dec
xor
pop
mov
pop
xchg
push
mov
daa
das
stc
shll
jns
xor
ljmp
push
xchg
pop
and
lcall
imul
imul
mov
push
les
mov
cwtl
push
xorb
xchg
pop
pusha
daa
cld
pop
test
stos
ret
lcall
or
dec
adc
jns
xor
mov
add
inc
dec
mov
pop
jns
fsubrs
dec
inc
sti
imul
xorb
cld
jle
push
roll
cmp
lds
mov
and
lcall
cld
int3
xchg
aaa
mov
mov
popa
cmp
pop
jne
sub
in
inc
dec
inc
sub
inc
pop
inc
adc
mov
negl
mov
cmp
cld
and
inc
lret
jg
scas
jno
sbb
lret
push
sbb
mov
pop
sub
or
fisttps
out
add
and
clc
pop
mov
add
fidivl
pop
sbb
pop
mov
push
pusha
aad
sbb
xlat
dec
push
cmp
push
xor
mov
inc
inc
sbb
leave
sar
push
lods
mov
fisubl
pop
int
jns
into
divl
jae
cmp
call
out
add
fistpl
mov
lret
lcall
clc
fadds
jbe
add
cld
sub
sbbl
cld
add
xchg
imull
adc
pop
std
mov
fsubp
sub
push
mov
pop
outsl
pop
ljmp
xor
lcall
jge
je
mov
icebp
lock
pop
in
inc
aas
rcrb
movl
into
popa
leave
push
xchg
mov
mov
sbb
adcl
mov
mov
mov
out
loop
imul
and
test
dec
mov
jbe
jp
push
neg
push
jmp
inc
lret
sahf
ljmp
in
dec
sub
jo
and
ret
mov
decl
mov
xor
cli
aam
repz
in
xchg
repz
xchg
popa
call
pop
mov
mov
cmp
add
push
mov
rcll
pop
or
inc
xchg
pop
rol
pop
cltd
int
repz
sbb
mov
xchg
lret
sub
and
push
adc
test
test
movsl
scas
es
jle
les
loop
aad
push
jno
mov
scas
or
subb
jp
into
fisubl
jge
pusha
imul
xlat
mov
cmp
cmpsb
lea
inc
mov
adc
lahf
lods
imulb
push
fcoml
lret
dec
cmpsb
fstps
jns
xchg
cwtl
sbb
out
call
dec
inc
inc
fcmovbe
clc
movb
mov
andl
mov
cs
add
cmpb
mov
nop
mov
and
mov
pusha
test
cs
jp
xchg
sti
daa
mov
xor
or
mov
lret
iret
lods
mov
out
mov
cmp
fldcw
mov
mov
ret
inc
je
inc
jle
pop
in
ret
xor
test
xlat
jle
sub
icebp
adc
jge
clc
sahf
sbb
push
out
jle
iret
mov
mov
mov
push
fucomi
mov
pop
sub
in
xor
adc
int
mov
push
stos
mov
test
orb
loope
push
pop
xchg
adc
xor
jno
fwait
mov
jne
test
mov
push
mov
loope
xchg
sbb
mov
sbb
xlat
sbb
pop
call
or
repz
test
rolb
add
es
stos
pop
cmc
loopne
rolb
add
sbb
pop
pop
dec
xor
cmp
mov
subb
sbb
adc
out
xchg
in
mov
jmp
data16
add
mov
pop
out
nop
lret
lds
hlt
test
subb
dec
push
add
cmpsb
sbbl
sbb
shrb
lret
inc
adc
mov
cmp
xor
jp
pop
jg
daa
add
fsubs
fmul
pop
scas
adc
sbb
adc
ret
jnp
std
nop
dec
outsl
jg
pop
add
jl
cli
adc
push
inc
in
cs
xor
fs
jecxz
les
rcll
or
aam
daa
out
dec
sub
popa
iret
dec
js
add
ljmp
stc
ja
es
movsl
jmp
imul
in
xor
xor
data16
fcmovnb
lcall
out
push
adc
rcrb
pop
pop
ror
cmp
lret
jge
outsl
les
aaa
insl
jle
dec
sub
adc
mov
lahf
mov
add
jmp
nop
mov
outsl
xchg
mov
mov
andnps
add
loopne
adc
ja
jno
pop
inc
push
xchg
icebp
not
ss
push
pop
movsl
and
pop
out
mov
lcall
cmpsb
cmpsl
cwtl
adc
nop
push
xchg
lods
jp
lret
les
pop
test
insl
cltd
adc
xor
xor
addb
jl
int
scas
push
lcall
sub
mov
js
retw
dec
or
into
mov
sbb
adc
outsb
out
in
push
rorl
test
pop
xchg
int
test
xchg
sbb
dec
rclb
xchg
cmc
pusha
sub
neg
mov
dec
push
lds
insb
dec
notl
shrl
stc
inc
xchg
sbb
movhps
fchs
subl
int3
in
and
mov
mov
loope
sbb
mov
sbb
sbbb
inc
add
or
add
inc
mov
mov
adc
clc
inc
scas
in
mov
mov
pop
movsl
loop
int3
movsb
fs
and
lret
fwait
dec
mov
outsl
lea
jnp
xchg
loopne
push
insl
inc
pop
xor
pop
sub
adc
mov
aad
movsl
sub
pop
mov
cmpsb
ret
stos
and
mov
arpl
cmpsb
in
mov
je
jle
in
push
and
mov
pusha
fisubl
mov
mov
push
and
aaa
sarb
pop
divb
movsb
imul
xchg
test
jns
xchg
ja
jmp
push
mov
pop
pusha
and
cli
mov
jo
push
popa
pop
test
daa
mov
adc
xchg
mov
or
ficompl
xlat
mov
jnp
stc
idivb
clc
add
dec
pcmpgtd
les
inc
mov
mov
ss
fxch
sti
ds
mov
sti
cmp
mov
adc
jl
or
sub
cltd
mov
jnp
loope
cmp
call
cmp
clc
push
mov
lods
es
icebp
insl
mov
inc
jg
push
sbb
sbbb
into
sbb
repnz
data16
stos
dec
aaa
inc
dec
push
cmpsb
nop
jle
pop
sbb
sub
test
inc
or
sbb
xchg
mov
xchg
iret
xor
mov
insl
or
mov
fcmovbe
lods
lods
inc
stc
ret
lea
imul
out
cli
mov
sub
inc
mov
xchg
xor
mov
xchg
or
fs
push
xchg
jbe
leave
mov
rcrl
icebp
dec
fcompl
push
dec
dec
sub
dec
sub
sub
cmpsb
dec
stc
pop
mov
sbb
bound
adc
scas
movsl
fmuls
and
js
cmp
sbb
addl
loop
or
mov
mov
and
mov
lods
xchg
cmc
mov
stos
mov
and
jae
sbb
inc
inc
dec
hlt
jno
dec
sbb
dec
dec
sub
js
fcmovnbe
lods
fldl
push
adc
sbb
dec
inc
add
loope
pushf
push
out
sub
add
in
jecxz
jne
cmp
popa
pop
in
inc
jnp
test
adc
pop
rep
hlt
adc
rolb
adc
fimull
stos
mov
mov
cli
sbb
addb
jmp
pop
dec
mov
sbb
mov
cmpsl
sbb
push
lods
call
push
clc
adc
xchg
imulb
mov
cli
pop
jb
sub
scas
cli
push
out
cltd
inc
stc
mov
repnz
sbb
lret
sbb
lea
out
clc
inc
vmovntdq
xchg
sti
dec
fidivrl
sub
xor
stos
xchg
inc
mov
mov
sarl
test
arpl
hlt
mov
dec
jg
sub
inc
jle,pt
xchg
add
jno
sub
loope
lds
dec
pop
insb
cs
jo
push
xor
inc
outsl
mov
lret
jbe
sbbl
sub
rolb
data16
mov
subl
or
std
lcall
cmp
or
ljmp
cmp
outsb
out
movb
xchg
pop
ljmp
ljmp
cmp
or
and
fcmovu
mov
fidivl
xchg
pushf
mov
iret
mov
out
jmp
jmp
mov
xor
loope
sub
mov
ja
loope
popf
xlat
cmp
mov
jo
cmp
clc
inc
cwtl
cmp
push
notb
aad
repz
mov
mov
inc
push
mov
cmpsl
push
cs
sub
mov
fdivl
fs
add
or
ss
xchg
mov
xor
out
push
xor
mov
cmp
adc
jp
mov
insl
dec
repnz
push
std
sbb
pop
mov
clc
dec
sbb
es
int3
xor
cmp
sub
fcoml
test
incb
rcrb
addl
in
in
xchg
and
dec
movsb
push
or
adc
sbb
mov
faddl
dec
push
fnstcw
xor
pop
dec
std
xlat
jne
mov
cld
sub
call
xor
sar
push
stos
ja
xchg
int
rolb
hlt
mov
pop
pop
xlat
nop
dec
mov
mov
scas
jecxz
ret
add
scas
in
rolb
pop
sbb
push
mov
jb
enter
mov
ret
lret
cmpxchg
adc
ljmp
cmp
addb
adc
mov
pop
stos
push
es
sbb
mov
push
insl
xor
and
test
and
into
mov
push
mov
arpl
jmp
je
stc
punpcklbw
push
sbb
ljmp
inc
or
inc
sub
movsl
lret
insl
outsb
test
pusha
mov
aam
data16
mov
aad
and
mov
adc
fsubrs
or
adc
ja
ret
mov
mov
xor
jo
int
mov
shrb
add
cmpsb
inc
dec
jge
in
sbb
popa
test
add
out
inc
mov
cltd
or
inc
icebp
adc
pop
addb
popa
pushf
fstl
mov
dec
out
cmc
es
and
inc
imul
push
sti
mov
mov
mov
mov
adc
adc
shlb
sbb
aam
std
cli
adc
adc
cmc
shrl
gs
shll
movsl
push
loope
pop
call
in
jecxz
enter
sub
out
fsubrl
mov
mov
clc
prefetchnta
mov
or
mov
enter
ds
aam
pop
rclb
test
insl
in
and
xchg
xor
jg
pop
jg
push
push
pop
xor
ljmp
out
push
jbe
in
popa
push
xor
mov
inc
test
pushf
or
add
sub
add
cmp
cmp
mov
jae
mov
cwtl
xchg
cmc
out
shrl
sub
mov
sbb
bound
jg
adc
push
mov
cmp
sub
dec
push
push
iret
sti
fldt
lret
xchg
imul
hlt
int3
push
push
push
das
ja
dec
lds
xchg
test
enter
cs
fld
stos
adc
outsl
mov
pop
jmp
push
cltd
pop
push
cmpb
sub
and
out
hlt
mov
xor
pusha
xor
push
aas
jne
push
pop
mul
scas
mov
test
pop
insb
mov
out
out
loope
ret
shlb
imul
bound
lods
int3
jb
out
int3
test
lock
adc
popa
mov
icebp
out
addr16
push
mov
dec
jb
sbb
mov
enter
not
jg
call
hlt
push
rclb
out
sbb
fnstsw
lret
notl
mov
jb
jbe
jno
and
and
fldl
sub
fsubrp
sbb
and
sub
dec
pop
std
fidivrs
sbb
or
mov
out
mov
ret
jae
or
sbbl
fldenv
inc
pop
xchg
lret
and
jp
out
or
or
lret
pushf
andb
sahf
jmp
imul
xor
sub
mov
rclb
jae
pop
pop
bnd
inc
daa
mov
cmpl
pop
outsb
add
cmpsb
imul
lods
jp
or
inc
ja
cmp
pop
pop
arpl
movsl
call
jmp
xor
or
adc
sbb
movsl
mov
repnz
xorl
sarl
mov
pop
mov
call
mov
mov
insl
jp
sbb
xchg
add
push
fsubr
push
enter
std
mov
mov
aaa
inc
das
cmp
andb
add
dec
inc
iret
sbb
scas
or
mov
das
fwait
iret
sbb
xor
pop
xor
inc
xchg
cmp
inc
sub
repz
mov
mov
loop
pop
push
aad
test
enter
mov
out
pop
dec
movzbl
pop
fwait
scas
and
movsl
enter
pop
pop
push
lret
jb
jmp
out
xor
mul
insl
ljmp
test
jg
pushf
lods
mov
jecxz
mov
inc
jb
add
scas
inc
out
mov
loope
push
sub
ljmp
mov
fcomps
xor
pop
push
xchg
adc
fsts
cmpsb
fdivrl
mov
pushf
stos
mov
mov
aad
out
and
idiv
fwait
sub
jno
in
je
xor
aaa
cli
std
pop
adc
sbb
cmc
movsb
ss
push
jge
inc
addr16
jo
cmpsb
pop
stos
pop
xor
stos
jno
rcll
out
xchg
mov
inc
adc
enter
push
mov
jl
ja
xor
jmp
dec
adcl
jp
enter
xchg
in
cwtl
adc
fisttpl
imul
addr16
mov
cmp
sbb
pop
mov
fs
movsb
xchg
sbb
cmpsb
fistpll
shlb
inc
test
punpckldq
scas
mov
iret
fimuls
sbb
jg
push
mov
pop
mov
loop
pop
jno
repnz
mov
and
sub
push
or
sbb
scas
xchg
out
fs
test
lods
jne
mov
xchg
jecxz
stos
into
loopne
rcrl
and
rorb
jp
jl
sbb
jne
and
cli
cld
icebp
in
sti
push
movl
scas
push
xor
adc
repz
sbb
in
loop
lods
push
dec
outsl
sti
and
ror
xor
outsl
inc
mov
xor
ljmp
lock
ja
stos
adc
cmpsb
cli
xchg
outsl
inc
ret
in
cmpsl
test
ss
loopne
bnd
stc
lds
xor
inc
lahf
and
inc
fldl
xor
jns
je
xchg
repnz
dec
aas
sbb
in
adc
test
stc
into
add
push
movb
outsl
outsl
int3
sub
mov
stos
adc
adc
push
ljmp
push
mov
notl
mov
sub
cmp
push
sbb
add
in
icebp
adc
es
lcall
in
or
insl
int
inc
idivb
jp
sti
fmull
pop
lret
add
mov
push
push
push
xchg
scas
loop
jecxz
outsb
xchg
dec
mov
data16
popa
adc
daa
dec
and
insb
mov
xchg
sbb
xlat
repz
push
fistpll
loopne
push
dec
and
jbe
push
idivl
mov
adc
add
xchg
fstp
ret
lret
cmpsb
mov
clc
pushf
arpl
addr16
cs
adc
and
stos
ljmp
dec
cmp
mov
inc
mov
popf
and
pop
add
test
mov
repz
or
gs
sub
sub
fs
adc
out
push
pop
inc
mov
jno
scas
mov
icebp
insb
daa
push
or
mov
sub
mov
mov
jp
jmp
xor
sbb
sub
add
xchg
movsl
stc
into
sub
cmp
xor
xor
jmp
lea
imull
xor
mov
imul
popf
dec
imul
adc
cmp
shrb
cmp
cs
andl
clc
mov
jnp
mov
push
dec
xchg
dec
lods
vdivss
pop
sub
sbb
push
jae
sub
popf
and
cmp
xorl
jl
xchg
mov
mov
mov
arpl
out
lret
ja
cmp
das
insb
stos
pop
mov
decb
insl
addr16
cmp
sahf
aaa
lea
fs
dec
jge
sbb
mov
mov
sub
shlb
ret
xchg
das
popa
popa
xchg
xlat
arpl
adc
out
sbb
and
insl
rorb
dec
mov
push
stos
jp
or
lcall
inc
dec
hlt
mov
stos
hlt
mov
or
mov
in
jae
add
stos
or
addr16
test
sub
imul
push
adc
test
jge
ret
mov
cli
out
mov
cmpsb
fistpll
lcall
inc
sbb
sbb
shll
and
and
mov
call
jb
into
cmp
lock
xor
sar
pop
lret
ffreep
or
cltd
mov
hlt
xchg
fcompl
inc
insb
adcl
gs
stos
pusha
mov
pop
add
add
aad
dec
sub
sbb
orb
popf
fwait
lahf
ja
xchg
jecxz
xchg
cmpb
nop
aam
aaa
hlt
fs
insl
mov
mov
pop
xlat
sbb
in
lock
push
mov
cwtl
in
ljmp
arpl
mov
fsubs
jle
call
iret
test
popf
sbb
add
xchg
outsl
repnz
cmpsl
icebp
fs
int3
push
push
mov
cmp
ret
pop
pop
dec
les
fisubrs
xchg
sar
cmp
pop
add
mov
add
mov
add
inc
aad
xchg
les
imul
ds
pop
or
enter
shr
pop
pop
push
xor
sub
push
idivb
lret
inc
testl
ljmp
xor
lcall
cmp
pop
sbb
and
in
cmpsb
aam
mov
frstor
add
lret
or
in
xor
jbe
pop
xchg
jecxz
xor
xchg
fldenv
cwtl
in
jb
call
lds
not
sahf
hlt
das
in
pop
repz
xchg
push
mov
xor
sbb
into
ret
daa
mov
out
or
push
push
mov
and
shl
mov
pop
pop
leave
cmpsb
cli
and
mov
addr16
mov
inc
or
xchg
mov
inc
push
pop
in
dec
insb
rcrl
pop
mov
mov
mov
mov
stos
out
fdivs
mov
cli
pusha
ss
rorl
fbstp
aaa
jno
dec
add
mov
addr16
xchg
fidivrl
pop
repz
nop
cltd
in
outsb
push
xchg
xor
mov
into
sti
dec
jle
addr16
jl
ret
sbbb
nop
push
sbb
vmovd
ljmp
aam
pusha
xor
dec
clc
jle
pop
scas
push
push
daa
dec
cmp
rcll
data16
mov
jecxz
addl
xchg
dec
or
or
mov
lods
lret
addr16
inc
cmp
mov
lds
fildl
shrb
rorl
ret
leave
jno
imul
insb
jp
filds
test
pop
jnp
pushf
inc
mov
mov
xor
test
push
jecxz
mov
push
ror
scas
imul
pushf
cmp
push
jo
adc
pushf
and
mov
mov
or
gs
cmpsl
addb
aad
rorl
inc
sub
pop
cmp
cmpsb
xchg
push
negb
addl
and
sub
push
rorl
cmp
int3
lcall
enter
push
push
push
push
arpl
ljmp
lock
clc
jne
and
dec
pop
fildl
xchg
lds
fisttps
mov
shr
pop
push
adc
lds
and
test
or
lcall
mov
data16
popa
push
in
enter
in
stos
data16
scas
mov
cmc
loop
mov
in
es
mov
cwtl
sub
or
arpl
popf
out
sub
mov
cmpsb
mov
pop
xor
fwait
inc
icebp
daa
push
mov
and
xchg
mull
push
jle
cmpsb
lds
add
imul
mov
decl
dec
or
cli
jbe
push
sbb
into
sub
out
mov
decl
sub
in
inc
xchg
push
popa
cs
adc
sub
insb
xchg
out
or
cmp
ret
popa
sbb
leave
dec
and
cwtl
scas
clc
and
lret
adc
pop
sbb
mov
inc
nop
lods
imul
push
iret
int3
icebp
push
inc
pop
aaa
mov
lret
test
sub
lock
push
repz
mov
loop
mov
sub
fdivs
mov
cltd
xchg
sbb
movsb
bound
mov
add
and
pop
subl
leave
lret
movsl
mov
in
mov
mov
lods
into
jecxz
scas
ret
cmp
rolb
xchg
jmp
scas
push
sub
jns
fmull
in
push
aaa
and
pop
add
clc
loope
repnz
mov
addl
repnz
or
stc
or
add
int3
add
fcoms
pop
pop
sub
and
mov
cmovl
fimull
jle
sti
xchg
mov
stos
test
sar
xor
adc
xor
fistpll
sti
or
push
push
iret
movsb
mov
lcall
repz
aad
pop
add
mov
lock
jb
mov
jg
inc
dec
into
bound
vmulss
dec
mov
add
add
int3
das
aad
orl
add
mov
sub
enter
inc
popf
mov
add
jle
add
loopne
add
push
xor
ficomps
dec
repz
and
adcb
pop
mov
stos
in
pop
add
push
add
out
xor
xchg
sbb
loope
in
je
or
mov
insl
rclb
jnp
mov
push
xchg
shrl
fbstp
add
orl
ljmp
mov
scas
mov
mov
mov
arpl
les
movsl
aas
sti
mov
xchg
inc
out
rorl
fs
dec
jae
sbb
pop
fdiv
in
rcrb
mov
fadd
into
mov
push
es
dec
add
pop
clc
jnp
test
insl
ret
dec
mov
xor
clc
shlb
pop
xor
psadbw
out
mov
and
add
cltd
push
mov
shll
fwait
scas
xor
notl
adc
fyl2x
cli
xchg
mov
xor
test
jnp
fld
into
sub
sub
dec
aam
popf
mov
je
jbe
mov
inc
orb
fstp
fnstcw
and
mov
bound
je,pn
ret
pusha
inc
and
xor
arpl
or
test
in
mov
cmp
push
jns
xor
adc
mov
xor
lea
jl
lea
repnz
lds
pop
push
mov
daa
pop
sub
aas
push
scas
jne
mov
pop
mov
mov
cmp
xlat
scas
pop
push
sbb
pop
adc
inc
xchg
ds
mov
fsubl
sub
bound
add
mov
in
das
mov
jp
jae
mov
cmp
inc
movsl
pusha
aad
push
lret
loopne
inc
test
jge
jno
inc
inc
shrl
es
push
push
mov
insl
mov
add
xchg
idivl
jge
mov
cmp
stc
jp
sub
aam
add
sbb
adc
mov
jno
add
jne
shlb
ret
adc
testb
cmp
rcrl
cmpsl
aad
sti
jge
das
imul
std
push
sti
loop
pop
mov
sbb
jnp
pop
cmp
and
or
dec
jecxz
or
call
inc
jns
mov
jae
movsb
int3
mov
mov
cs
enter
xchg
fisttps
push
cmp
test
clc
mov
or
mov
or
push
jbe
stos
mov
in
addl
adc
pop
push
inc
ror
dec
faddl
subb
cmpsl
ss
in
mov
and
mov
lahf
xchg
mov
roll
or
hlt
aaa
nop
push
lds
pop
loopne
sbb
out
push
fstpl
loop
dec
cmp
sub
jg
subl
mov
das
mov
jp
jnp
nop
ret
mov
leave
mov
inc
ret
mov
lock
std
pop
push
ss
lret
rcr
mov
or
mov
add
push
mov
cmp
push
fiadds
sbb
fs
add
dec
sbb
das
push
xchg
xchg
loop
inc
jge
nop
adc
pop
mov
sbb
in
je
loopne
jne
mov
inc
dec
jae
inc
dec
mov
addr16
outsl
pop
sbb
pop
sbb
mov
push
test
ficompl
dec
jo
ja
or
push
iret
pop
jne
hlt
pop
push
ret
jne
mov
cmpsb
adc
mov
and
shll
adc
dec
aaa
cmp
das
divl
dec
mov
push
arpl
mov
jnp
aam
shll
lret
rorl
outsb
mov
icebp
jo
xchg
mov
sbb
mov
xor
insl
mov
lock
aas
xlat
jmp
xchg
addr16
lret
inc
arpl
add
xor
or
fstpl
popa
xchg
dec
mov
lret
les
or
push
cmp
mov
imul
sbb
xchg
cmpsl
push
xchg
flds
sti
jle
adcl
jb
iret
arpl
aaa
cld
scas
jl
jecxz
enter
and
push
or
cwtl
fisttpl
in
dec
lds
std
push
inc
pop
sub
pop
in
lods
insl
dec
ret
push
rcl
adc
popf
rcl
inc
sbb
inc
lds
pop
xlat
lock
loopne
fildl
movsl
sbb
rclb
inc
or
pusha
pop
popa
xor
mov
es
movsl
loope
fs
paddusb
adc
addr16
sbb
adc
lahf
mov
inc
jecxz
in
dec
jb
ret
fstl
popa
addr16
pop
dec
int3
push
aas
cmc
in
mov
push
xor
pop
and
jge
out
xchg
jle
mov
imul
mov
inc
xor
lock
int3
mov
cmp
pop
sbb
xor
lock
pop
pop
divb
and
xchg
and
sbb
mov
fadds
push
or
repnz
sub
mov
dec
test
jo
loop
xor
call
cli
xor
jns
leave
movsb
std
mov
lea
stos
pop
jmp
mov
push
jp
dec
mov
sbb
push
push
and
push
ret
cmp
sbb
fistl
flds
jb
sub
outsb
xor
stc
and
mov
inc
mov
cmpsb
mov
pop
hlt
adc
and
fildll
mov
mov
pop
data16
daa
iret
cltd
rolb
notb
mov
push
outsb
cmpsl
lds
out
dec
pop
mov
dec
xchg
dec
sti
je
repz
std
sar
shll
xor
ss
scas
ss
mov
popa
jp
jb
test
add
sub
mov
stos
daa
fcoml
js
cmp
sbb
mov
mov
push
enter
loope
xchg
mov
outsl
scas
ffree
pusha
push
mov
sub
mov
xchg
xorb
cs
and
or
pop
stos
xchg
fidivrl
test
es
cmc
push
scas
xchg
cmpsb
popf
xchg
dec
scas
push
mov
xchg
push
repnz
mov
jb
cld
aam
fadd
xchg
mov
negb
leave
es
xor
or
mov
push
xor
mov
adc
xchg
inc
sahf
inc
les
mov
add
int3
scas
ficoml
push
aam
mov
aam
cmp
repnz
xlat
xchg
lods
and
inc
shr
das
xchg
lcall
fsubrl
test
or
cs
mov
out
les
stc
cmp
jge
lods
mov
sbb
mov
out
mov
scas
dec
mov
aaa
sub
adc
cs
aad
xchg
and
mov
cmp
imul
adc
in
hlt
lahf
xchg
cwtl
adc
int
mov
xchg
pop
je
and
addr16
mov
mov
jl
mov
sbb
ds
cli
roll
mov
mov
sub
dec
push
xor
cmp
push
mov
icebp
jno
cmc
gs
cmp
sti
cmpsl
ret
test
mov
cmp
adc
mov
hlt
stc
int3
popa
ret
mov
mov
out
addr16
fwait
push
mov
fildl
xchg
test
mov
and
cmp
loope
pop
in
negl
lock
mov
mov
jp
mov
mov
jmp
jno
stos
cmp
arpl
jae
and
jne
insl
cmp
or
push
loop
xlat
test
mov
pop
aad
xor
mov
sub
adc
push
fsubs
dec
mov
jne
lods
es
or
pusha
cli
imul
fs
adc
pop
lods
sahf
sbb
mov
loope
adc
inc
test
mov
jb
out
pushf
push
int
xchg
stos
jo
out
aad
jmp
out
sarl
jmp
pop
push
ss
push
add
movsl
test
sbb
cltd
imul
lea
mov
popa
test
add
ja
in
clc
rcrb
loope
mov
pop
out
scas
loop
mov
adc
outsb
shl
sbb
addr16
sbb
in
xor
or
fadds
test
pop
out
incl
fnsave
das
imul
cwtl
adc
clc
push
push
mov
mull
and
and
dec
jmp
aam
jns
icebp
data16
add
iret
sbb
add
push
push
jmp
bswap
aam
clc
stc
xchg
movsb
xlat
pop
push
mov
pop
jae
fcomps
mov
int
bound
retw
leave
jmp
pop
loope
inc
imul
test
dec
cmpl
scas
fdivs
in
lods
in
addb
mov
into
xor
pop
mov
or
jae
je
mov
cmp
push
das
test
push
xchg
or
stc
aad
sarl
mov
mov
mov
out
xchg
aas
hlt
or
fstpt
sahf
outsl
push
mov
sub
mov
aas
arpl
lds
dec
push
inc
dec
test
out
les
inc
ja
add
cmpsl
das
cmp
outsb
inc
dec
xchg
inc
fcmovnbe
mov
xchg
add
pop
dec
aas
cmp
or
ljmp
jp
repnz
cmp
mov
ja
enter
inc
push
iret
fpatan
dec
lods
pushf
scas
adc
fs
ja
prefetchnta
dec
out
xchg
int3
fptan
mov
or
push
xlat
aad
test
lods
dec
xchg
xchg
in
mov
punpckhwd
dec
aaa
stos
mov
sbb
iret
adc
mov
pop
mov
jmp
jns
xor
add
lahf
pop
mov
push
inc
aad
xchg
and
and
or
mov
adcb
adc
xchg
aam
inc
push
mov
sub
cmpsb
pushf
or
jle
or
lret
outsb
out
int3
lds
out
icebp
pop
cwtl
nop
scas
dec
cmpsl
in
imul
jno
repz
test
inc
nop
insl
xor
xchg
inc
cltd
fstps
pop
xor
pop
shl
mov
gs
xchg
inc
or
imul
loopne
xor
loope
addr16
adc
in
fiadds
iret
pop
inc
cmc
mov
mov
ja
dec
jne
push
inc
push
shrl
frstor
test
jl
sahf
lret
push
adc
jae
inc
xor
pop
mov
dec
arpl
mov
pop
cli
movsb
mov
lret
cwtl
cmp
pop
stos
insl
mov
xor
adc
mov
pop
sarl
popa
push
repnz
js
loop
jg
sarb
cld
cmpsb
mov
or
lods
fsts
idivl
in
inc
sub
cmpsb
or
mov
dec
or
push
inc
hlt
fbld
cmp
cmpsl
cwtl
xor
sbbb
cmp
in
out
popa
fbld
pop
cmp
iret
adc
js
or
f2xm1
aad
or
sti
ss
cwtl
mov
jge
aas
sub
adc
fsubrl
movsl
fcoml
cwtl
ljmp
subb
cmpsb
hlt
sbb
int3
cli
cltd
mov
call
popa
out
pushfw
gs
or
inc
aad
and
xchg
jmp
outsl
push
jl
xchg
push
and
out
sub
jecxz
and
mov
sbb
arpl
outsb
xor
mov
jno
dec
lods
mov
or
mov
sbbb
and
addb
jmp
inc
addr16
push
cmp
insb
mov
dec
unpckhps
pop
jmp
nop
shll
push
jb
push
xor
xchg
lods
push
lods
inc
jg
lods
mov
mov
jge
xor
inc
sbbl
out
fs
repz
repz
movsl
jbe
sub
dec
mov
scas
iret
cmp
jg
xchg
inc
out
push
xchg
out
inc
xor
outsl
je
icebp
add
jmp
xor
mov
jns
loop
pop
cwtl
push
loop
daa
clc
sbb
mov
sarl
xchg
mov
loopne
and
and
not
out
loop
jnp
and
aas
stos
je
cmp
mov
sbb
add
push
or
mov
dec
mov
inc
cwtl
mov
and
movsb
adc
vmread
jno
bound
std
pop
mov
inc
in
push
rcl
xor
imul
cli
cmp
lret
inc
lcall
cmp
enter
mov
mov
xchg
xchg
ret
dec
fwait
je
jecxz
or
inc
imul
int3
lods
jns
stc
adc
aad
jo
or
stc
cmp
cmp
mov
arpl
outsb
pop
jne
xor
xorb
inc
sbb
bound
adc
inc
mov
outsb
dec
paddusb
pushf
cltd
or
xorb
fnstcw
int3
ror
inc
cmpsl
dec
and
in
xlat
popa
sarl
lods
rorl
mov
and
mov
mov
in
lds
pop
pop
pop
ja
loop
sub
xor
mov
cmp
outsl
js
or
lahf
in
mov
inc
jnp
pop
push
in
lcall
scas
pop
inc
mov
enter
fcomp
jbe
add
mov
sub
inc
les
jecxz
scas
and
sbb
cltd
or
fldcw
test
arpl
fs
add
and
sub
cmpsb
jns
lcall
jae
adc
dec
or
loopne
adc
sub
sbb
sahf
daa
cmpsb
add
lods
cmp
push
mov
rolb
push
jnp
jge
ljmp
movsl
mov
and
push
push
or
rcrl
jnp
or
rcrl
test
xchg
or
inc
push
mov
repz
mov
jg
into
xchg
adc
int
imul
shl
mov
cmpsb
push
sarb
mov
aad
adc
test
out
adc
pop
cmpl
test
or
mov
cmpsl
dec
pop
add
xchg
jns
divl
sub
sarb
pop
mov
xchg
lahf
cs
sub
lea
out
test
std
or
xor
popa
out
xlat
fists
pop
sbb
cltd
xor
pop
xchg
ror
pop
cmpsl
sbb
jb
repnz
adc
cltd
mov
sahf
or
sarb
sbb
mov
pop
pop
fadds
mov
lea
inc
pop
xchg
js
push
fdivs
push
xchg
pop
cmpsl
cld
mov
mov
cmp
inc
orb
aad
ds
lret
mov
sar
push
sub
int
arpl
sub
push
mov
jne
jle
push
pop
mov
lds
push
frstor
pop
or
nop
mov
lahf
loope
push
fcomps
popl
pop
ja
jb
mov
cmp
xchg
and
sub
ds
jns
jo
loopne
ss
xchg
or
inc
iret
cld
inc
inc
push
out
mov
cmpsl
in
add
lahf
out
or
lods
rol
cmpsl
xchg
add
adc
jb
mov
mov
jo
jle
lock
test
push
lods
jle
daa
cltd
cltd
test
pusha
fistpll
enter
in
pop
lods
lahf
jno
add
arpl
push
js
cltd
loop
cmp
pushf
pushf
js
lahf
jbe
shl
dec
jno
jns
push
and
xchg
out
xor
pop
push
and
orl
dec
pop
jecxz
sahf
and
mov
adc
push
sbb
inc
popa
xchg
rolb
mov
jge
jno,pt
outsl
add
pop
loope
loop
in
push
jecxz
adc
jecxz
jle
je
pop
mov
sbb
adc
mov
pop
into
das
sbb
adc
mov
les
push
adc
push
in
sarl
lcall
jle
lcall
add
shrl
xchg
sub
push
mov
jge
mov
out
pop
pop
subl
push
push
cltd
ret
or
jl
bound
iretw
shlb
test
mov
jmp
test
push
mov
cmp
loopne
sbb
mov
sbbl
jne
pop
shlb
sub
rolb
and
lret
dec
leave
iret
or
shlb
mov
fs
imul
add
inc
lea
mov
es
xchg
mov
xchg
outsb
sti
mov
adc
sbb
lcall
pop
ss
aad
push
lret
sub
and
shrb
loopne
mov
ss
cltd
xchg
sub
pop
mov
xchg
mov
dec
andl
fidivrl
lcall
movsb
mov
mov
adc
dec
je
push
jl
inc
push
xor
std
mov
ficoml
cmp
sbb
out
push
fisttpl
lock
mov
ja
xchg
mov
add
sub
loopne
mov
jle
pop
xlat
rcll
roll
mov
in
xchg
rclb
in
out
bound
fs
dec
or
fimuls
rcrl
push
mov
mov
push
add
ficoms
ror
setnp
mov
mov
dec
jl
aad
out
faddl
push
rorl
or
cmp
lock
pop
or
int
xchg
cmp
cmc
mov
push
int3
adc
mov
rcll
jmp
push
icebp
cli
mov
add
in
xchg
mov
js
lds
push
jecxz
mov
push
daa
mov
xchg
dec
std
imul
jbe
loop
dec
mov
outsb
test
test
cmc
push
or
mulb
inc
rcl
jns
in
jg
add
jo
xchg
jnp
sbb
in
jo
pop
fdivl
outsl
call
mov
int3
jns
or
push
mov
inc
dec
sbb
mov
imul
xchg
sub
stc
shlb
lret
call
xlat
icebp
testl
inc
out
and
add
push
add
rcrb
out
pop
imul
jle
inc
inc
rcr
in
aam
pop
inc
bnd
int3
mov
xchg
cmp
or
jecxz
mov
sbb
inc
daa
push
sbb
add
shl
inc
stc
inc
hlt
ret
mov
cmp
pop
xlat
or
cmp
iret
stos
rcr
in
adc
test
ljmp
cmp
xchg
sbb
in
jp
or
popa
push
sub
jmp
or
mov
pusha
push
mov
mov
test
mov
loop
cmp
xchg
gs
hlt
nop
lock
imul
popf
mov
fstpl
or
inc
test
pop
dec
push
xchg
xchg
jnp
enter
ret
dec
dec
inc
mov
inc
fisttps
rcl
int
add
xchg
add
push
or
rcr
ja
scas
imul
fidivrl
hlt
add
outsb
push
mov
je
jmp
cmpsb
jmp
lahf
inc
cmp
jl
xchg
adc
mov
xor
sbb
mov
and
sub
mov
xchg
fldt
scas
xor
push
sbb
sub
pop
sub
aaa
cmp
into
test
jmp
mov
lret
out
je
mov
xchg
dec
cmpsb
mov
pop
addl
les
pop
sub
sub
push
mov
std
adc
les
clc
xor
cmpl
sub
add
sub
inc
and
pop
add
sarl
jecxz
add
repnz
add
int3
mov
add
ljmp
imull
xchg
push
push
daa
mov
movsb
imul
jmp
clc
nop
sub
or
mov
jle
orb
movsb
lods
mov
mov
mov
inc
test
and
rcrl
movsb
adc
orl
sbb
ss
sub
pop
xor
arpl
add
xchg
es
mov
pop
pop
jle
pop
xor
adc
sar
mov
adc
movsl
jns
js
dec
and
arpl
jo
cltd
inc
push
scas
xchg
adc
sub
dec
mov
pushl
subb
mov
mov
test
jnp
pop
jbe
fstps
sub
test
out
out
arpl
arpl
pop
mov
fiaddl
loop
out
sti
add
iret
stos
push
dec
outsl
push
iret
outsl
sub
add
dec
mov
push
test
pop
lock
pushf
movsb
mov
outsb
mov
xor
jb
adc
pop
sbb
add
mov
fnsave
sbb
add
cmpl
in
shll
sub
int3
or
jge
push
icebp
mov
in
dec
or
pop
shrl
out
call
ja
cmp
loopne
mov
jnp
adc
sub
fwait
repnz
in
sub
enter
mov
ds
ds
add
mov
in
mov
mov
in
ss
mov
lds
mov
cmp
mov
add
movsl
sub
in
gs
xchg
enter
movsb
fnsave
mov
lods
fisttpl
inc
stos
lds
pop
mov
mov
out
sti
outsl
sbb
imull
xchg
test
or
lea
push
aad
jle
gs
add
shl
xchg
stos
ljmp
adc
dec
mov
mov
imul
adc
and
pop
pop
jle
jmp
int
pop
ja
cmp
out
push
pop
ljmp
repz
pop
jmp
xchg
sub
sahf
xor
pop
push
sub
sbb
scas
pop
mov
frstor
cmp
jle
mov
stos
add
je
jbe
push
or
xchg
lret
mov
jg
sub
popf
call
lods
mov
cltd
mov
bound
jo
pop
into
call
inc
dec
push
jmp
adc
shlb
sbb
sbb
mov
add
pop
adc
xor
xchg
cmp
jne
in
inc
ljmp
lods
lods
cwtl
in
fwait
inc
inc
clc
add
daa
push
sub
es
repnz
push
push
and
push
xchg
push
icebp
xor
cmc
push
cmc
jmp
test
push
mov
or
sbb
inc
fcmovbe
push
push
test
test
add
cltd
fistpll
cmc
pop
add
loopne
pop
inc
pop
or
shrb
ds
les
loopne
das
pop
jg
add
dec
sahf
dec
rcl
jp
mov
lock
xchg
mov
xor
out
and
fwait
mov
loop
xchg
mov
xchg
je
cmp
loopne
add
icebp
and
push
std
lahf
push
mov
mov
rorl
cltd
popa
push
pushf
adc
lret
pop
andl
ret
int3
adc
xor
addr16
mov
mov
jmp
push
fiadds
mov
movsb
inc
ds
iret
add
das
pop
roll
divb
jmp
cs
xchg
dec
aad
push
cmp
movb
push
fiadds
dec
xchg
pop
pop
push
mov
test
scas
pop
pop
cmp
cmp
jmp
sub
dec
mov
rolb
aad
ljmp
lock
push
mov
in
or
dec
mov
loop
cmp
std
scas
lock
test
xchg
imul
cli
inc
mov
subb
es
pop
loope
add
sbb
outsb
loopne
cli
mov
inc
mov
cmpsb
push
and
ficoms
jns
add
js
das
inc
lcall
pop
xchg
cmp
mov
pop
movsb
pop
imul
push
call
cmc
fcom
xchg
push
and
call
ss
mov
movl
inc
ficoml
adc
xor
rclb
xlat
mov
or
jo
cvtpi2ps
movsl
fwait
push
push
leave
inc
sbb
push
std
xor
inc
jmp
lret
xor
jnp
add
stos
mov
xchg
addb
or
shl
inc
inc
ljmp
push
and
jmp
aaa
fstl
jne
jo
gs
jne
pop
mov
sbb
ret
dec
clc
dec
jl
sub
insb
pop
imul
hlt
test
bound
in
pop
add
mov
repz
pusha
and
cmp
stos
lods
xchg
jnp
or
lret
fildl
or
pop
xchg
mov
adc
adc
jp
mov
lods
js
nop
sarl
gs
popa
jge
mov
sahf
lcall
sbb
repnz
mov
cmc
add
or
mov
xorb
lods
push
rcll
sub
push
dec
ja
cmpsb
add
sbb
sarl
jmp
xor
and
lods
in
shll
jle
lods
inc
or
movsl
mov
lods
cli
lds
ror
mov
or
scas
repnz
dec
insb
mov
aaa
cmpl
or
pop
div
sub
mov
je
lock
jmp
push
adc
sti
pop
cwtl
sbb
dec
clc
adc
dec
dec
add
pop
aas
mov
mov
adc
shrb
aam
dec
addr16
push
xor
pop
add
mov
pop
fists
xchg
stc
fsubp
lods
sbb
dec
test
stc
int3
scas
xchg
cli
fs
dec
mov
mov
inc
lods
push
mov
mov
lret
push
ret
test
rolb
jecxz
jb
xchg
orl
push
fildll
lock
in
mov
repz
arpl
xchg
jecxz
mull
pop
jno
les
mov
fldl
push
aas
pushf
jne
bound
sub
dec
mov
cmp
inc
int3
roll
inc
loope
mov
lret
cltd
inc
ljmp
loopne
and
std
mov
outsl
fs
stc
mov
xchg
adc
cmp
or
loope
fimull
daa
fmuls
dec
xchg
sbb
fs
ljmp
xchg
mov
xor
cmc
scas
cmp
dec
push
andl
jmp
cld
xchg
mov
dec
addr16
push
outsl
cmpsl
outsl
pop
aad
xchg
fiaddl
imul
leave
mov
inc
lea
push
insb
out
lods
pop
repnz
arpl
outsb
loop
inc
cli
or
mov
das
jbe
daa
sub
add
sti
mov
out
pop
clc
dec
push
pop
xor
jecxz
imull
add
lods
pop
gs
dec
lods
xchg
pushl
add
jo
enter
pop
inc
pop
push
daa
enter
xchg
stc
outsb
fxch
lock
mov
lock
ficompl
cmp
mov
in
cmp
sub
xchg
or
stc
and
in
add
mov
mov
insl
rorl
sti
push
mov
cmp
xor
jl
cwtl
lret
add
test
inc
adc
jo
inc
mov
out
xchg
lahf
or
out
cltd
add
leave
inc
fcmovnbe
or
repnz
imul
hlt
sar
push
mov
aam
movsl
inc
pop
insl
xorl
push
enter
rol
dec
pop
sbb
and
lret
cltd
leave
push
outsb
repz
add
and
icebp
push
pop
into
pushw
jle
mov
decl
bnd
inc
addb
mov
cmp
ret
arpl
loope
xor
orl
cmc
addr16
cwtl
mov
pop
push
adc
rorb
jmp
in
xchg
mov
dec
pop
add
lea
gs
xchg
pop
push
add
pop
pusha
dec
dec
jb
test
xor
push
jmp
or
adc
jle
dec
dec
mov
fwait
mov
xor
ror
daa
bnd
xor
mov
or
dec
lds
cmpsl
or
mov
mov
mov
lcall
xor
insl
outsb
fsubl
mov
in
add
cmp
das
dec
lret
pop
dec
pop
dec
sahf
std
hlt
sbb
nop
jne
mov
nop
cmpsb
pop
dec
or
lods
pop
cld
out
stos
pop
test
stos
icebp
nop
pop
in
dec
inc
jle
jge
fcmovne
or
jb
rcl
in
dec
mov
lock
xchg
stos
jle
cmpsl
add
lods
cmp
mov
std
jecxz
sbb
scas
in
jl
dec
sub
jno
sub
mov
jno
mov
adc
and
pop
and
push
inc
add
inc
jns
sbb
inc
lret
push
int
mov
adc
inc
arpl
xor
adc
xor
cmp
repnz
cwtl
dec
xor
inc
arpl
lea
rclb
xor
imul
xor
stos
xlat
sti
fnsave
fcmovnu
enter
loope
dec
or
push
aam
out
outsb
xchg
adc
cld
push
out
mov
mov
cmp
sbb
lock
pushf
sub
mov
mov
or
xor
jne
push
pop
and
add
pop
lods
xor
jmp
mov
push
cmp
mov
and
movsb
cmpsb
add
push
ja
test
mov
int3
sub
sti
jns
cwtl
cmp
arpl
call
popf
icebp
xchg
hlt
loope
and
pop
loopne
push
or
mov
mov
shrb
sub
pushf
hlt
jbe
mov
push
or
movsl
sub
adc
sub
scas
xchg
mov
mov
mov
add
inc
sub
stos
test
test
push
insb
cmp
push
sti
fadds
outsb
out
scas
jnp
jns
call
sub
push
push
std
xchg
sub
nop
sbb
dec
lea
insb
jno
mov
ss
xor
lret
mov
cmpsl
mov
jp,pt
imul
testl
dec
dec
sar
addl
leave
je
hlt
mov
cmp
lock
pop
leave
push
cld
sub
mov
repnz
test
xchg
xor
jmp
jmp
aad
or
xor
push
mov
sub
fsubl
gs
stos
xor
test
jnp
push
outsb
inc
mov
insb
sub
mov
xchg
rcrl
jecxz
xchg
mov
fdivrl
pop
or
in
mov
and
xchg
cmp
sub
or
add
repz
inc
outsb
std
pop
int3
pop
es
movsb
push
sbb
cwtl
mov
inc
iret
add
push
lea
pop
fyl2x
loop
out
popf
pop
and
ss
xchg
out
mov
xchg
imulb
push
inc
jl
loop
mov
mov
jp
stc
jmp
or
aad
popa
lret
test
in
inc
mov
scas
stc
xchg
dec
gs
pop
sub
mov
sub
push
jl
js
cltd
lds
testl
mov
leave
test
sub
xchg
inc
test
jmp
and
std
dec
jnp
pop
jmp
lds
sub
in
shll
sahf
sbb
xchg
jb
outsl
dec
aaa
clc
mov
mov
sarb
xor
pop
inc
pop
rclb
mov
xchg
sar
xor
insl
les
sub
es
push
xor
arpl
stos
popf
insb
lret
fisttps
in
int3
lock
jp
out
jg
pop
cmpsb
add
out
mov
push
insl
sar
divb
sbb
cwtl
xchg
dec
mov
adc
push
adc
orl
lods
int3
das
push
dec
mov
int3
dec
pop
mov
push
ret
mov
ret
in
mov
jae
aas
es
cmc
sbb
ds
iret
xor
dec
sbb
cltd
shl
dec
js
adc
add
loopne
test
scas
mov
outsl
fldenv
insb
push
jp
jb
xlat
push
jmp
aad
leave
mov
std
mov
sbb
aas
aam
push
lcall
iret
aad
mov
popf
mov
lahf
je
mov
add
test
mov
test
fdivrs
dec
mov
dec
shll
divl
xchg
jo
fsubrs
cmpl
dec
loop
jle
sti
ljmp
mov
pop
das
adc
pop
decl
lock
pop
in
mov
add
push
mov
xchg
popa
shl
out
sub
insl
mov
jb
lods
mov
mov
dec
jge
mov
sahf
dec
xlat
cmp
inc
mov
in
cwtl
sbb
pop
mov
std
aam
pop
jecxz
aad
scas
subl
int
jl
imul
movsb
mov
fnstcw
dec
sub
out
fs
jnp
nop
popa
add
fwait
lcall
push
jno
imul
xchg
testl
hlt
xchg
cwtl
insb
stos
sbb
arpl
fistpll
jecxz
or
insb
je
out
cmp
cli
and
pop
jns
mov
sbb
mov
sbb
andb
data16
shrl
aaa
pop
jb
sbb
xor
imul
mov
scas
movsl
lods
add
xchg
scas
lret
add
mov
add
icebp
mov
xchg
mov
push
movsb
ds
push
or
out
dec
pushf
sbb
xchg
shl
sub
dec
add
repz
dec
test
inc
mov
xor
andb
inc
xchg
xchg
jecxz
arpl
out
inc
xlat
scas
push
add
sbb
shrb
mov
mov
sub
icebp
mov
fsubs
xlat
daa
stos
push
dec
pop
add
sub
call
jp
adc
jp
adc
popa
insl
push
sbb
pop
pause
sub
add
outsb
hlt
out
jg
xchg
mov
cmp
mov
jecxz
push
mov
repnz
or
aam
leave
pop
inc
aam
sub
movsl
mov
adc
inc
testb
cmp
out
nop
sub
fmulp
push
xorb
push
or
and
inc
and
jnp,pt
data16
fcoms
xchg
fisttpl
scas
cmp
push
mov
jo
pop
in
and
pop
jns
fcoms
inc
shlb
sar
mov
sbb
xlat
and
movsb
jb
stc
rcrl
ljmp
lea
pcmpeqw
movsb
addb
pop
in
add
lahf
mov
push
mov
cmc
aam
pop
out
mov
mov
dec
repz
inc
push
cmp
in
adc
mov
aam
icebp
jecxz
cmpsb
in
mov
movsb
push
sbb
test
rcrb
ret
popf
int3
iret
popa
cli
out
fsts
inc
push
cmp
mov
mov
clc
fcmove
adc
ret
rclb
sub
pop
push
push
fcoml
inc
loope
add
sbb
fidivrs
mov
or
jb
outsl
xchg
mov
testl
adc
or
inc
leave
aaa
mov
dec
sbb
xchg
test
dec
jl
or
shll
call
sub
or
fwait
fs
jae
sub
pop
decb
dec
push
inc
push
faddl
mov
and
dec
mov
push
mov
dec
std
pop
and
mov
jae
push
js
subl
and
test
add
adc
jae
lea
push
in
orl
mov
or
sti
xchg
int
jno
adc
xchg
sub
sbb
mov
sbb
push
pop
jl
es
push
test
sbb
lea
iret
ljmp
sub
jae
add
xchg
cmc
jae
adc
mov
mov
int
or
adc
enter
jo
jbe
jb
pop
push
pop
xlat
dec
popf
sub
aad
fwait
pop
add
aaa
fsubl
pop
lret
out
loope
inc
orb
mov
in
cmp
fbld
sbb
add
loopne
repz
jne
or
xor
dec
pop
pop
stos
in
xchg
add
or
push
in
mov
rcrb
std
dec
loop
addb
movsl
pop
rcll
mov
push
fcmovu
or
pop
cld
or
add
jmp
je
loope
pop
fistl
add
sahf
cmp
add
lret
movsb
pop
mov
ljmp
mov
jae
ljmpw
jae
std
cmpsb
sarl
xor
aaa
and
cld
lods
push
inc
fldt
std
sti
or
mov
inc
popf
pop
lea
xchg
jle
sahf
pusha
push
push
jl
sub
mov
and
in
lahf
push
cmp
dec
cmp
and
add
or
sbb
or
ret
dec
ficoms
ja
movsl
xchg
adcl
xchg
ror
pop
ret
add
jl
dec
je
mov
cmc
inc
inc
jmp
idivl
mov
xor
or
clc
push
rclb
mov
mov
mov
sub
jno
inc
or
xchg
push
mov
dec
repz
pop
lcall
das
inc
xchg
adc
pop
and
mov
lret
outsl
clc
lods
adc
jl
or
push
inc
jge
xchg
mov
dec
fistps
jge
pop
jge
subb
cmc
mov
mov
jle
shr
xor
mov
cmp
cmp
adc
leave
xchg
cwtl
in
hlt
sbb
cmc
das
leave
hlt
inc
mov
outsl
xchg
fxch
popf
and
jae
mov
decl
pop
fistpll
cmpsl
push
push
insb
rclb
mov
dec
mov
pop
test
inc
out
jo
xorl
fisubs
loopne
push
sbb
aam
adc
xor
adc
aaa
jns
fistpl
sub
dec
cmpsl
jmp
mov
sub
dec
push
dec
pop
loope
test
mov
mov
cmc
adc
out
hlt
xchg
sub
mov
data16
mov
mov
mov
adc
sbb
jecxz
les
add
lock
out
mov
push
jle
or
cmp
fnstsw
cmpsb
outsb
addl
fs
sub
push
scas
pop
out
in
jp
mov
inc
cmp
xchg
scas
sbb
test
out
cli
lods
cmp
inc
cwtl
call
fistpl
dec
jnp
adc
inc
pop
adc
push
xchg
and
aas
jecxz
dec
xchg
adc
jmp
pushf
and
orb
pop
mov
out
push
xor
fidivrl
push
jb
or
cltd
test
stos
cmp
mov
in
pop
cmpsb
pop
and
dec
lcall
xor
repz
ss
xchg
fsts
sub
inc
inc
cs
and
and
inc
cmpsl
pusha
push
push
ljmp
pop
push
insl
cmpsl
mov
scas
enter
dec
sub
pop
push
cmp
xlat
test
adc
mov
jge
lea
orb
jl
jecxz
shll
loop
paddusb
fsub
add
int3
jp
cmp
jne
add
rclb
adc
daa
dec
aam
aam
push
test
adc
mov
cmpsl
jl
add
in
add
dec
pop
in
jle
pop
fcmovu
lret
mov
dec
aas
sbb
push
sarb
pop
les
add
daa
sar
cmp
xchg
sbb
das
jbe
xchg
inc
lods
dec
xor
pop
iret
sahf
mov
daa
sahf
icebp
nop
std
or
push
iret
loope
pop
roll
push
les
mov
orl
ds
or
push
jmp
mov
cmp
jae
movsb
mov
jl
test
inc
test
mov
stos
clc
sti
test
pop
inc
sbb
jecxz
cltd
cmp
stos
dec
pop
cmp
repz
jge
sti
mov
aaa
imul
repnz
imul
or
mov
push
mov
int
setl
mov
mov
xor
roll
ljmp
int3
repz
out
fs
mov
cmc
aad
push
mov
out
dec
cltd
xchg
and
cmp
aas
dec
mov
xchg
repnz
mov
push
popf
sbb
sarl
ja
ja
jbe
je
sti
inc
jne
xchg
cmp
int3
shll
sbb
leave
mov
inc
mov
push
scas
out
cmpsb
jmp
enter
mov
xchg
filds
cmc
sahf
out
dec
test
xor
mov
adc
test
mov
or
push
int
mov
push
cmpsl
xor
jae
jecxz
fistps
dec
sbb
add
out
cmpsl
xchg
sbb
jmp
sbbb
mov
dec
es
lret
aas
call
test
push
xor
jg
jmp
or
xor
mov
sub
sub
mov
jp
ja
cltd
inc
sub
lods
arpl
test
lods
lahf
pop
fwait
out
inc
jnp
leave
nop
adc
daa
jbe
mov
rcrl
mov
pop
pushf
pop
fcomps
sub
iret
out
dec
dec
call
xchg
fmuls
push
mov
jbe
or
es
push
clc
inc
sub
ljmp
or
xchg
cmpsl
lods
cltd
pop
shr
out
cmpsb
mov
movsl
jae
popaw
sub
sbb
cmp
push
movsl
daa
iret
loopne
insb
adc
insl
xchg
pminsw
adc
mov
sbb
sbb
cmp
mov
push
outsb
mov
xchg
lahf
int
ss
jg
ljmp
andb
pop
sbb
xlat
dec
shl
outsb
and
dec
jne
sbb
or
jb
pop
and
pusha
out
mov
repz
scas
pop
enter
lock
daa
subb
popa
xor
adc
pop
pop
rolb
pop
pusha
xchg
les
pop
cld
sbb
popf
jo
mov
xor
addl
cmp
cmp
pusha
out
bound
out
lds
shl
and
jl
jg
int3
nop
shrb
cli
xchg
jae
jbe
xor
jmp
mov
sub
xlat
popf
xor
loopne
call
xchg
out
repz
jge
dec
mov
loopne
adc
xor
and
loope
cmc
daa
out
and
repnz
xchg
shll
negb
push
fcomps
sbb
pop
orb
push
in
jmp
repnz
into
lret
dec
mov
mov
mov
pop
jl
je
les
outsb
ret
jmp
mov
jbe
pop
loopne
call
ficoml
lods
stos
roll
adc
in
testb
xchg
cmpxchg
jl
pushf
mov
dec
in
je
aaa
jae
lock
repnz
and
xchg
adc
repnz
inc
jp
sbb
push
insl
test
loop
mov
sub
cmc
insl
sub
stos
xlat
xchg
inc
adc
mov
jae
pop
rclb
pop
out
cmc
cmpsb
xchg
nop
loope
cmp
or
int3
mov
lock
add
arpl
ficoms
iret
or
enter
fwait
test
push
daa
cwtl
dec
and
lock
sbb
mov
clc
sarl
xchg
jb
add
int3
xchg
ss
popa
movsl
fcoml
ds
mov
pop
movsl
push
sbb
lahf
jecxz
mulb
popf
js
mov
movsb
add
aaa
pop
les
lahf
adc
movsl
rcll
mov
mov
cmp
stos
or
sub
imul
repz
jecxz
mov
movsb
jge
lea
outsl
adc
xchg
repnz
xchg
pop
ja
push
add
iret
repz
mov
jp
int
and
std
mov
xor
jbe
ljmp
inc
mov
mov
sbb
cs
loope
loopne
or
inc
aad
dec
lds
fnstcw
jbe
dec
mov
addr16
gs
xchg
pop
sbb
cltd
dec
pushf
xorl
inc
xchg
or
push
nop
std
les
pop
xchg
cmpsl
das
sahf
mov
lods
leave
lods
loopne
mov
add
cmpsl
nop
mov
daa
test
pop
aas
inc
jne
scas
add
data16
mov
imul
in
cs
call
in
test
dec
cmp
mov
jmp
mov
aam
jb
inc
shlb
inc
add
pop
lds
stos
jae
ret
mov
xchg
fidivs
call
mov
inc
dec
push
pop
xchg
outsl
add
xchg
add
xchg
adc
jle
push
stos
lret
add
cmp
or
rcl
or
divb
insl
jmp
cmp
push
imul
inc
cltd
int
rcl
pop
mov
push
jmp
mov
scas
xor
popa
sub
xchg
repnz
in
aas
pop
mov
movsb
ds
test
cwtl
loope
mov
pop
je
stc
pop
pop
fcmovne
add
jge
cmp
dec
mov
add
push
les
push
adc
adc
popa
adc
adc
clc
in
xor
daa
jno
mov
xor
mov
sub
jns
dec
repz
lahf
popf
dec
mov
stc
popf
cmp
shl
ds
jmp
lret
cwtl
arpl
jmpw
xor
xor
es
out
cmp
and
std
pop
jno
daa
or
addl
adc
test
xchg
xor
mov
dec
xchg
mov
dec
fsubr
loop
daa
sub
dec
fadd
leave
fcomps
in
fbld
ljmp
xchg
test
cltd
cld
leave
adc
dec
rorl
add
ret
xchg
mov
push
push
mov
mov
mov
or
dec
lods
insb
cmp
fstpl
add
cmpb
inc
jmp
aad
push
dec
and
jmp
push
das
jle
or
sub
sahf
lock
and
or
movsb
mov
pop
xor
sarl
popa
inc
hlt
adc
xchg
test
push
xor
pop
mov
stos
fs
call
xor
andb
jp
xor
movsb
pushf
int3
daa
mov
cs
and
daa
sbb
jne
daa
popf
jbe
test
push
das
push
bnd
movsb
jnp
loop
rcrl
mov
cld
vsqrtpd
add
out
push
adc
sbb
shll
es
repnz
jno
mov
push
jne
mov
jle
pop
dec
lret
add
insl
cltd
stos
sahf
leave
mov
rcl
in
cwtl
mov
cmc
dec
adc
or
xchg
nop
cmp
sbb
fstpt
adc
push
sbb
dec
je
in
iret
in
jae
iret
mov
leave
xor
into
out
and
xor
add
dec
adc
dec
sbb
mov
std
repz
into
inc
in
sub
cwtl
sub
lret
fwait
pop
fbstp
lds
xor
and
inc
add
stc
call
fmuls
mov
mov
in
lods
fcmovb
dec
cmp
mov
push
push
in
jmp
idiv
in
pushf
xchg
aas
push
mov
inc
jle
stos
cmp
loope
jl
jb
or
xor
mov
jmp
xor
adc
mov
mov
rorb
mov
inc
daa
shrl
movsb
cmpsl
fcom
mov
test
mov
ja
rclb
push
or
jbe
pop
pop
jge
fs
daa
push
in
push
cmp
xor
aaa
cmp
xchg
int
or
dec
mov
and
leave
pop
ljmp
sbb
sub
adc
fldcw
imul
fcoms
std
mov
fimuls
pusha
addr16
pop
sbb
into
mov
pop
nop
cli
aaa
pop
mov
cmp
mov
fldcw
push
pushf
or
cmpsl
fcompl
xchg
popf
stos
push
fwait
push
outsl
test
call
repz
movsb
idiv
or
ss
xchg
into
cmp
lea
xchg
aam
mov
hlt
jo
cmpsb
and
mov
push
in
xor
ja
fldcw
sti
loope
lds
ret
fistpl
loop
adc
insb
xor
jbe
xlat
in
push
movsl
push
sub
push
addr16
insb
shll
bnd
ret
test
xor
xor
dec
xchg
xlat
push
adc
xor
jg
bound
in
in
mov
enter
mov
out
mov
pop
sbb
pop
inc
gs
sbb
jnp
dec
push
testl
jge
inc
mov
data16
loop
or
xchg
push
imul
jmp
icebp
xchg
sub
xchg
xor
xor
movsl
adc
mulb
adc
in
mov
andl
or
movl
mov
inc
lcall
push
movsl
out
cmp
fwait
stc
fwait
addr16
aaa
pop
mov
js
cmp
mov
popa
fdivrp
mov
or
cmp
popf
fdivs
pop
iret
popf
dec
push
xlat
subb
dec
push
sub
xlat
mov
or
mov
mov
and
scas
pop
xchg
lret
inc
sarb
cmp
sar
mov
les
jae
sbb
bound
mov
inc
push
or
push
cli
sub
rcrl
push
jnp
lahf
mov
push
xlat
into
insl
rcll
push
sub
je
lahf
into
lods
inc
mov
xlat
movl
mov
and
loopne
lahf
pop
inc
movsl
je
das
push
mov
or
aas
test
jmp
cmpsl
int
pop
addr16
mov
xor
jns
xchg
mov
cmp
xor
or
es
dec
pop
test
aad
mov
cmp
pop
xor
je
out
arpl
pop
xchg
movsl
jp
mov
cmpsl
mov
dec
pop
inc
arpl
push
xor
mov
mov
aam
inc
sub
das
pop
xchg
mov
and
or
inc
push
mov
xor
adc
ficoms
iret
fwait
xchg
push
out
cmpb
sti
jno
fstps
inc
pop
sub
xchg
cmp
pop
push
push
lret
stos
lahf
and
or
cmp
cli
add
push
stos
lock
dec
movsb
dec
push
mov
mov
cwtl
popf
jno
std
mov
xor
push
jle
and
adc
imul
fldl
pop
int3
loopw
sbb
fistps
call
shll
test
pcmpeqb
push
push
aad
stc
cli
leave
mov
jge
aam
inc
inc
jmp
fistpl
push
shll
push
mov
cmp
and
and
or
adc
inc
daa
add
xchg
mov
dec
mov
les
mov
lahf
imul
call
adc
les
out
nop
lret
ds
call
repnz
cmp
aad
push
push
outsl
int
fidivrl
fidivrs
cld
xor
shl
xor
dec
jecxz
mov
movsl
pop
jle
jmp
aam
inc
xor
or
daa
in
sahf
push
mov
lret
in
mov
sub
daa
daa
call
out
iret
dec
mov
and
and
cmc
movsl
subb
xor
push
cmc
adc
push
jno
lahf
inc
xchg
push
test
loopne
aas
insl
mov
test
out
loopne
aas
movsb
pop
mov
jns
inc
inc
adc
mov
push
mov
mov
xchg
and
je
lods
jg
sbb
and
adc
into
out
test
aam
adc
stos
jnp
adcl
dec
jmp
out
mov
movsl
or
sarb
inc
push
mov
inc
in
int
pusha
xchg
push
out
addr16
std
add
inc
add
repnz
jmp
inc
inc
icebp
aaa
inc
dec
jo
push
pop
add
jns
test
in
ds
lock
stos
adc
lea
lret
push
pop
das
test
ret
sbb
bound
lahf
inc
int
sub
stos
jp
mov
jb
cs
mov
cmp
inc
outsl
popf
xchg
sbbb
loopne
aam
subb
lret
push
xchg
or
shll
lcall
jno
sahf
jo
subl
xorl
stc
inc
test
shr
sbb
imul
cmpsl
or
mov
mov
inc
push
dec
xor
hlt
cmp
sub
dec
data16
add
stos
ret
inc
cmpsl
cmp
negl
push
js
push
rorl
adc
cmpsl
pop
sub
mov
jo
push
loopne
sub
cmovs
dec
lret
jmp
arpl
iret
into
cmpsl
cmp
mov
sbb
sti
jmp
and
cld
mov
dec
and
sti
ss
push
popa
jae
push
pop
xchg
cmc
cmp
stos
pop
scas
gs
mov
push
cmpl
fwait
movsl
cmp
scas
stos
cli
lds
add
mov
sub
lock
mov
movsl
mov
hlt
cmp
jl
stc
ret
shl
mov
out
jl
add
scas
cmp
sub
pop
and
cmp
pop
sbb
xchg
outsb
xor
js
mov
test
jo
xchg
xchg
dec
and
ret
and
jae
daa
add
and
fisttpll
mov
loop
push
sbb
pop
popa
or
jg
lock
out
jnp
dec
out
movsb
push
mov
int
les
xor
lret
cs
das
sub
orl
imulb
lret
mov
mov
or
sarl
imul
fs
in
cmp
pop
popf
or
xor
in
mov
in
cs
mov
mov
xchg
inc
test
mov
inc
mov
mov
xchg
rcll
cmp
and
popf
stc
push
pop
cmp
shll
push
xchg
pop
adc
lahf
xchg
pop
mov
lods
pop
or
sbb
test
arpl
push
int
jns
in
es
ret
fdivr
mov
jge
push
cli
lcall
sbb
data16
mov
inc
insl
jecxz
adc
inc
cmp
aaa
lcall
lock
daa
mov
ja
rorl
neg
decl
popa
movsb
rol
xor
ljmp
int
gs
aaa
sahf
push
cli
dec
push
jae
fnstsw
in
mov
pop
test
cmpsl
imul
sub
test
jecxz
clc
jecxz
jbe
jecxz
sub
add
cltd
cltd
push
dec
sbb
push
pop
push
call
test
js
rorl
xchg
pushf
pop
add
cmp
jae
sbb
inc
mov
mov
int3
ret
loope
and
popa
in
push
dec
adc
or
repz
mov
movsb
pushl
dec
jl
mov
jno
add
sub
or
mov
jg
or
mov
or
mov
pop
stos
data16
test
mov
pop
fcoml
xor
cmpsb
test
jno
pop
fiadds
mov
or
out
push
lcall
sub
pop
rorl
pop
pop
cmc
cwtl
dec
lcall
mov
add
push
nop
shrl
ret
lret
add
cli
and
inc
and
leave
sbb
jo
xchg
out
unpckhps
stos
ret
popa
cmp
mov
mov
scas
addr16
les
test
dec
xor
int
jmp
xor
call
movb
jmp
sti
mov
ss
xor
xor
sub
push
xchg
pop
fcmovnbe
cli
or
push
push
test
inc
aas
push
call
add
push
icebp
and
ds
movsb
jp
cs
pop
rcll
les
cwtl
fucomip
and
or
sub
cmp
icebp
xor
xchg
inc
cltd
adc
push
sub
ret
pop
cmp
jecxz
dec
push
xchg
cli
arpl
mov
in
iret
cli
mov
xor
aas
dec
mov
xchg
mov
push
cmpsb
pop
enter
lods
icebp
xchg
repz
xchg
je
xchg
lcall
push
jae
cmp
je
fdivs
add
addr16
cmp
xchg
cltd
adc
push
push
xchg
int3
mov
pop
lahf
ljmp
not
adc
xlat
sub
add
push
test
into
out
mov
inc
js
sub
popf
jg
lea
xlat
adc
xchg
jmp
popa
fstps
ret
hlt
dec
or
adc
jae
sbb
jp
pop
incl
bound
popf
ret
sub
inc
pushf
shl
sbb
orl
jecxz
fiadds
add
inc
out
xor
movb
outsb
lds
mov
leave
inc
mov
dec
stc
pop
fwait
and
stc
pop
data16
sub
mul
jne
jae
adc
lea
jo
mov
fdivrl
ljmp
sbb
mov
jecxz
lods
cmpsb
xchg
mov
xchg
mov
cmp
or
inc
xchg
push
aas
cmp
mov
jle
mov
popl
sbb
or
cli
into
outsl
int3
cwtl
loopne
cmp
sub
bound
mov
cld
push
sar
pusha
inc
mov
and
sbb
leave
cli
lods
sbb
cltd
push
rorl
push
adc
mov
jns
sub
mov
or
cmp
mov
scas
mov
xchg
cmc
xor
mull
scas
mov
or
mov
sbb
sbb
pop
scas
push
ljmp
push
jmp
dec
pop
xor
faddl
in
pop
sbb
idiv
aaa
mov
push
in
lahf
inc
push
scas
xchg
mov
scas
mov
and
push
xchg
inc
dec
inc
inc
test
imul
clc
or
and
jnp
xchg
js
adc
fst
movsl
out
sahf
fcomip
inc
mov
stos
sbb
loopne
jp
mov
cmp
jns
cwtl
push
mov
inc
fstl
xlat
movsl
das
jae
dec
pop
lods
enter
and
sub
mov
loop
mov
dec
adc
sub
add
and
cwtl
int3
and
stc
lods
mov
in
jbe
xor
lock
cmp
or
mov
popf
push
dec
scas
adc
add
xlat
push
pop
push
cmpsl
ss
popf
add
aas
add
arpl
dec
psubb
pusha
lock
je
pop
fxch
mov
hlt
sbb
and
mov
pop
mov
sbb
pop
inc
int3
sti
scas
cmp
push
pop
movsl
xchg
mov
lock
xchg
or
iret
outsb
sub
rcll
cmp
adc
cwtl
movsl
mov
loopne
sub
movsb
or
or
in
and
mov
cmp
inc
pop
dec
fidivrs
outsl
stos
add
xorl
je
inc
sbb
xchg
pop
jno
jb
call
dec
sar
push
shl
ficoml
push
clc
movsl
jmp
pop
push
sbb
jbe,pn
xchg
repnz
ljmp
mov
mov
testb
mov
rcrl
in
test
inc
lcall
movsb
mov
cli
sbb
repnz
mov
sub
xlat
mov
pop
cmc
jl
sbb
jp
lea
inc
fldcw
incl
mov
add
push
dec
pop
cltd
or
pop
ljmp
mov
popa
jno
lcall
roll
ret
repnz
add
enter
in
sti
fildll
and
ja
push
xchg
xor
mov
and
mov
hlt
or
lods
jmp
mov
mov
ds
and
xchg
pop
cltd
xchg
jp
or
icebp
inc
and
sbb
lcall
mov
xlat
mov
dec
push
xchg
pop
mov
sub
outsb
repnz
sti
mov
jne
fwait
out
lea
push
insb
inc
pop
in
adc
dec
jae
mov
mov
pop
mov
jns
push
dec
subb
in
dec
mov
int3
insb
sbb
dec
jns
inc
cmp
cltd
cltd
shrl
mov
xor
jmp
enter
push
mov
jle
rcrb
adc
push
sub
sar
mov
and
inc
les
in
push
sub
shlb
stos
mov
mov
pop
stc
sub
jmp
mov
add
or
dec
call
arpl
xor
data16
xor
and
repz
dec
pop
push
mov
jl
imul
lods
push
std
cmp
es
mov
jno
sub
rcr
sub
adc
inc
imull
repz
lsl
jmp
jns
pop
pop
sbb
ja
mov
push
mov
cltd
movsb
jbe
rolb
dec
adc
mov
pop
mov
pop
ljmp
push
mov
jnp
stos
and
stc
xchg
test
mov
mov
fidivs
sub
push
mov
dec
fsub
push
idivl
rcl
or
repnz
pop
and
push
lret
push
mov
lret
mov
dec
cltd
pop
inc
mov
lea
pop
jge
mov
out
fldenv
or
jns
mulb
push
sub
ds
jmp
cmp
cmpsb
fucom
out
imul
fdivp
jecxz
hlt
je
pop
xchg
outsl
clc
insl
cmp
mov
cmp
dec
add
cmpsb
jg
pop
pop
dec
movsb
mov
jne
ret
cmp
fcomip
jmp
loop
adc
mov
dec
insl
call
leave
ret
add
mov
int
dec
test
jne
leave
jo
testb
xlat
mov
mov
lods
adc
in
xor
pop
xchg
insb
aaa
in
inc
testl
ficompl
xchg
push
stc
sub
pop
aam
xchg
mov
mov
xchg
push
js
out
dec
jnp
sub
add
jmp
adc
cmp
out
push
jge
scas
cmp
cs
je
test
mov
insb
jmp
xor
das
gs
ret
xchg
pop
xchg
xor
xor
xchg
push
jge
es
mov
mov
sub
sbb
mov
sbb
mov
mov
rcll
mov
dec
lahf
cmpsl
sub
mov
jmp
lea
sti
popf
call
aas
xchg
fldl
stos
mov
mov
mov
and
and
mov
add
xchg
and
pop
shll
adc
adcb
aas
nop
pop
lret
repnz
xchg
mov
nop
popf
fstpt
mov
idiv
fdecstp
scas
sarl
push
or
cltd
loopne
mov
fimuls
and
dec
das
in
pop
mov
mov
sbbb
and
rclb
insl
addr16
out
fcmovbe
mov
adc
adc
mov
cmpl
iret
stos
and
jge
fldcw
enter
mov
pop
mov
lea
mov
push
or
test
scas
popa
fistpl
dec
jp
adc
pushf
test
xor
dec
jmp
dec
loope
sahf
popf
mov
jge
inc
dec
dec
mov
push
sub
ret
lcall
push
aam
in
sbb
fists
sbb
mov
test
hlt
pop
mov
mov
mov
jnp
fxch
adc
lea
inc
add
clc
pop
dec
xor
mov
xor
cs
or
pop
jp
pushf
adc
das
adc
and
push
mov
sub
xchg
add
addl
mov
lods
add
xchg
inc
jno
lcall
lret
mov
fisttps
pushf
pop
or
and
fcoms
pop
add
nop
int3
sbb
add
pop
cwtl
mov
push
fiadds
dec
in
jl
out
sti
out
add
add
insl
movsb
sub
daa
dec
jmp
adc
test
hlt
or
cmp
movsl
add
sbbl
clc
icebp
mov
hlt
ret
jb
out
mov
dec
xor
ss
lea
repnz
lcall
or
xchg
dec
dec
pop
aad
lds
add
or
scas
pusha
push
add
ja
dec
and
scas
fcmovne
lea
adc
fsub
fstps
movsl
push
sbb
mov
lods
mov
sti
fdivl
pop
imul
jge
push
inc
int3
jne
movsb
push
aas
push
fldcw
sub
bound
cmpsb
daa
or
or
inc
lcall
std
outsb
push
sub
cmp
leave
sub
enter
inc
cmp
xchg
jns
jnp
dec
adc
out
js
scas
clc
mov
or
and
jge
shll
xchg
gs
jb
sub
xchg
out
pop
fisubs
adc
add
sbb
add
vpxor
aad
into
divb
cli
or
jge
xlat
cmpsl
inc
cmp
pop
lret
push
inc
and
cmpsl
jns
pop
scas
frstor
scas
sbb
push
xchg
movl
movsl
adc
mov
leave
mov
sub
sub
adc
leave
dec
push
mov
jnp
inc
cltd
cmp
inc
repnz
xchg
xor
xor
cmp
xchg
ud2
mov
jne
movsb
scas
loop
add
mov
mov
fists
sbb
mov
xor
mov
les
dec
pop
stc
fiaddl
popf
hlt
push
lds
inc
out
inc
mov
mov
inc
loope
scas
mov
lods
cwtl
cmpsl
mov
sahf
gs
mov
cs
push
lods
mov
in
loope
push
or
sbb
je
imul
xor
sub
mov
pop
loop
inc
mov
inc
cmp
fisubs
lods
sbb
pushf
xchg
repnz
dec
push
push
jmp
es
cmp
jbe
or
xchg
leave
enter
push
lds
fsub
push
sub
scas
repz
push
inc
insl
mov
loope
mov
mov
xor
mov
push
dec
push
inc
loope
stos
nop
push
loopne
xchg
imul
hlt
outsb
je
mov
sti
subb
stos
or
out
and
push
sbb
or
cmpsl
dec
push
out
roll
lds
fidivrs
mov
push
bnd
movsl
push
mov
cmp
dec
sbb
inc
mov
sub
inc
cmpsb
xor
movsb
mov
mov
test
jnp
shrb
mov
rorl
ficompl
jno
push
sbb
ja
mov
sbb
pushf
pop
push
out
pop
mov
mov
mov
insb
jmp
roll
out
push
std
xor
push
cltd
aam
push
loop
sbb
ret
xor
inc
sbb
in
movsb
sbb
push
push
in
or
orb
popa
arpl
iret
and
andb
cmp
sbb
xor
int3
sti
xor
jle
and
mov
xchg
mov
pop
lods
sub
and
neg
sahf
or
sbb
add
and
repnz
aad
repz
lock
cmp
pop
xchg
daa
dec
aad
fstpt
xorl
mov
mov
cmpsb
xchg
mov
popf
scas
lahf
cmpsl
xor
mov
inc
lret
fstp
jmp
icebp
je
es
clc
scas
outsl
std
in
jnp
add
test
or
mov
stc
adc
xor
outsl
pop
out
inc
dec
push
idivb
ficoml
jns
jnp
loop
arpl
or
popa
pop
pop
popf
mov
dec
jp
lock
inc
pop
or
sub
xchg
add
movsl
icebp
push
popf
pushf
jno
fs
test
xor
xchg
pop
xor
or
jo
test
leave
mov
shlb
pop
sbb
add
mov
ds
fdiv
out
faddl
inc
mov
push
mov
ret
lahf
mov
cmp
sub
cmp
shl
jns
pop
mov
push
jg
je
repnz
fmull
inc
jns
test
js
lahf
sbbl
jne
add
ja
lods
add
dec
mov
push
and
push
jp
clc
mov
loope
jle
jnp,pn
adc
negl
mov
or
push
pusha
sbb
test
xchg
mov
pop
insl
enter
ja
lret
test
lcall
add
xlat
sbb
lea
call
outsb
inc
pusha
mull
dec
xchg
cmc
mov
push
leave
outsb
lods
xor
call
mov
mov
cmp
mov
clc
sbb
insl
and
popf
ret
jnp
test
test
xlat
frstor
adc
jnp
pop
add
ret
pop
dec
sub
add
das
sbb
adc
dec
out
xchg
mov
scas
mov
shlb
outsl
nop
pop
jbe
int
icebp
mul
out
iret
mov
lret
push
pop
lret
inc
mov
mov
mov
scas
das
out
or
imul
aam
int
or
pop
stos
cmc
dec
iret
jl
enter
scas
insb
adc
out
jge
mov
jle
mov
sbb
rep
adc
mov
sbb
das
lods
in
mov
lret
jecxz
pop
out
mov
stc
jne
jecxz
iret
scas
mov
mov
inc
add
in
pusha
dec
lods
imul
dec
fdecstp
sub
insb
inc
xchg
andl
mov
or
xchg
outsl
mov
imul
cmp
jns
lock
xchg
jo
xor
sub
fs
fcmovb
cmp
sub
jmp
jecxz
and
sbb
inc
movsb
add
mov
inc
sub
fs
sahf
int3
sub
jne
inc
and
int
in
mov
je
cltd
jne
popf
std
mov
imul
dec
xchg
jnp
orb
aam
pop
cmp
sub
add
and
call
sub
insl
imul
lret
lea
xchg
les
pop
cltd
cmp
mov
and
xchg
mull
imul
and
push
outsl
mov
add
xor
loopne
mov
adc
jl
inc
mov
fildll
rcrb
ljmp
inc
add
insb
adcl
mov
inc
jecxz
pop
jmp
push
mov
adc
or
xchg
shr
js
and
fsubrs
aam
and
daa
into
cs
fcoms
jge
cmp
fadd
or
sub
test
rcll
hlt
imul
loop
inc
loope
in
ss
out
push
push
pusha
stos
xchg
jl
ljmp
xor
and
hlt
sub
push
into
mov
aam
lea
fldenv
out
test
ss
dec
mov
aad
aam
and
in
mov
cmpsl
lods
jns
jge
push
cli
imul
nop
adc
icebp
shrb
xchg
test
xchg
xchg
jmp
jp
std
int
or
inc
inc
add
ss
cld
cmpsb
xchg
inc
loopne
data16
inc
shlb
adc
sbb
cld
je
jle
dec
inc
pop
and
test
incb
jno,pt
imul
in
in
push
incl
cmp
popa
adc
in
nop
xchg
imul
insl
push
lret
pinsrw
stc
aam
ja
inc
mov
cmp
ds
call
and
cltd
mov
push
inc
sub
and
lock
push
jecxz
or
sbb
mov
pushf
push
fisttpll
aam
jecxz
sti
and
repnz
inc
dec
add
mov
push
test
jns
lahf
mov
inc
imul
xlat
lea
xchg
js
loope
fldenv
daa
pop
and
ret
imul
icebp
iret
call
arpl
inc
xchg
mov
daa
push
stc
shlb
aad
lock
clc
push
sbb
inc
jnp
push
mov
sub
loop
pop
xor
sub
sub
mov
mov
in
popa
xchg
sbb
fisttps
mov
cmp
sbb
xchg
dec
adc
sbb
ds
jns
mov
jo
jo
sbb
xchg
dec
enter
ficoml
outsb
sbb
loopne
sbb
cmp
sti
pop
mov
enter
fiadds
and
fisttpll
and
cld
mov
wrmsr
inc
repnz
jecxz
mov
test
arpl
loop
mov
test
scas
cmp
lods
or
ret
enter
dec
jno
mov
pop
sub
aas
adc
fsubrp
pusha
fisttpll
mov
pop
dec
push
jle
and
dec
out
mov
test
mov
ss
sub
cmp
imul
in
imul
in
adcb
push
cmpsl
adc
cs
dec
dec
xchg
les
sub
sub
push
rcl
mov
sti
das
jge
bound
add
jge
sub
imul
pop
enter
cmp
pop
dec
sub
mov
xor
adc
es
pop
ret
mov
jl
daa
popa
mov
mov
push
mov
stos
outsb
inc
and
lea
pop
pop
cwtl
ret
push
adc
jmp
sbb
ljmp
sbb
ja
test
lcall
scas
and
popf
adc
dec
mov
pop
call
ljmp
xchg
ss
jp
xchg
mov
dec
jmp
sbb
call
sbb
cwtl
scas
or
insl
stos
mov
cmc
cmp
push
pop
aam
inc
into
les
pop
add
shrl
cmpsb
xor
lret
insb
daa
mov
popf
hlt
imul
lods
mov
jge
inc
enter
mov
mov
dec
in
mov
stos
cltd
js
mov
push
dec
push
repnz
jmp
movsb
das
jo
lods
jl
pop
shrb
loop
in
lcall
sbb
mov
and
pop
aam
adc
adc
fbstp
xchg
jge
or
inc
cmpsb
rcrb
sub
mov
lock
std
xchg
negl
dec
mov
lds
loope
lea
ss
xchg
stc
sbb
mov
ret
dec
cmp
ficoml
or
pop
pop
and
hlt
pop
inc
inc
dec
xor
lret
sub
ja
mov
test
dec
mov
push
test
xchg
mov
or
sub
push
bound
adc
push
pop
add
or
mov
pop
sub
in
xor
sbb
pushf
xlat
xchg
leave
lods
les
movsb
push
push
sub
cmpsl
jns
into
inc
adc
mov
mov
in
cmpsb
sti
mov
shlb
daa
lea
or
jl
xor
sbb
add
scas
jne
ficomps
pop
jg
movsl
xchg
jg
js
mov
jb
jnp
jle
roll
pop
adcl
aam
pop
rorb
and
lret
mov
ds
push
out
push
loope
xchg
mov
pop
push
push
and
push
insb
adc
fld
cmp
lret
inc
imul
cld
popa
jne
popf
cmc
idivb
add
es
test
push
and
xchg
fnstcw
xlat
cli
std
imul
sub
js
mov
bound
pop
jp
jecxz
add
jne
sub
popf
dec
sub
std
add
test
rcrb
movsl
sub
dec
sbb
sbb
lods
lahf
cwtl
outsb
cmpsb
push
inc
mov
adc
xor
cmp
adc
jmp
sbbl
or
sub
mov
sbb
testb
pop
and
popa
ror
xchg
pop
add
jge
shl
loop,pt
lret
mov
scas
push
push
andps
rclb
dec
cmpsl
adc
pop
mov
jbe
imul
repnz
jge
and
push
negl
jmp
adc
sub
cmp
mov
push
push
fwait
sbb
jo
mov
loope
jg
mov
leave
imul
mov
inc
sub
rorb
mov
das
in
lea
test
mov
push
pop
push
std
dec
mov
and
les
loopne
leave
add
xor
jecxz
mov
push
mov
dec
pop
lret
cmpsl
sti
mov
bound
cmp
jg
pushf
sbb
andl
pop
mov
fiaddl
mov
mov
inc
lds
fwait
xlat
notb
jg
out
jle
movsb
mov
mov
mov
mov
lahf
push
and
mov
xchg
mov
cltd
xchg
scas
mov
insb
mov
int
ret
insb
insl
fbstp
cmc
scas
inc
jnp
in
mov
cmp
push
xor
adc
jle
repz
incl
in
pusha
arpl
loopne
jbe
imul
inc
test
sub
mov
push
pop
inc
sub
mov
or
sbb
jno
into
mov
mov
sbb
js
fwait
adcl
xchg
xchg
mov
mov
lret
in
lods
cmpsb
testl
mov
jnp
lret
addb
ja
cwtl
cmc
add
cltd
addr16
sar
aad
sbb
add
or
out
pop
inc
ret
mov
movsl
push
mov
mov
movsb
push
or
mov
pop
sub
mov
in
cmp
div
loop
cmp
xor
jle
mov
bound
aam
jmp
int
mov
cmpsl
or
fists
loopne
cmp
adc
je
popa
fcompl
add
sub
rcr
xlat
mov
out
xor
add
push
inc
adc
xchg
xchg
shrl
lret
shl
fstp
or
cmp
mov
dec
ds
adc
pop
insb
jmp
push
xchg
clc
push
push
xchg
imul
rsqrtps
xchg
sub
lds
ret
mov
jb
xor
mov
sub
pop
dec
add
sbb
cli
pop
mov
pop
leave
cmp
imul
push
mov
mov
bound
and
inc
rclb
movsl
push
jne
lret
popa
or
jbe
cltd
lret
je
mov
jp
jno
ljmp
pop
daa
scas
sub
out
mov
loopne
jecxz
push
pusha
int
inc
lock
ljmp
cmp
call
fstps
out
sbb
push
jne
and
sub
inc
jp
fimuls
pop
in
add
add
push
outsb
push
fsub
jo
cmc
aas
pushf
jnp
inc
xlat
pop
jns
push
cltd
mov
adc
push
mov
pop
mov
aas
push
scas
xchg
mov
dec
pop
and
inc
das
lret
push
mov
cld
mov
imul
cwtl
cmp
xchg
scas
mov
jp
data16
ret
jle
mov
dec
filds
pop
adc
adc
movntq
push
sub
imul
sbb
jg
and
lret
jl
cmc
add
ret
scas
inc
aaa
mov
mov
into
xlat
es
jle
inc
ret
mov
pusha
adc
mov
out
sbb
push
xor
jbe
lds
add
mov
inc
xchg
push
insb
fwait
and
enter
pop
leave
lea
add
mov
lcall
sbb
loop
test
int
mov
jp
roll
movsb
lds
rcl
cmp
pop
test
xor
repnz
xchg
adc
hlt
xor
int3
rcrb
xchg
clc
pusha
test
adc
pop
ret
cmp
stos
sbb
ja
fwait
jge
in
aaa
jne
aad
mov
mov
inc
and
cmc
jne
mov
jno
rorl
mov
pop
mov
jge
out
pushf
popa
dec
sub
divl
cmp
or
or
jns
sbb
and
jnp
andl
scas
jge
dec
xchg
pop
sub
xchg
push
mov
ljmp
in
gs
and
repz
adc
lea
or
xchg
hlt
xchg
adc
xchg
in
inc
sbb
adc
mov
les
jnp
jne
mov
sbb
dec
out
aam
push
mov
insb
pop
add
jge
push
jmp
xchg
jle
cmc
hlt
push
and
mov
inc
into
mov
pop
lret
popa
adc
ss
push
adc
in
sbb
xor
fsubl
insl
pop
inc
ret
lods
xchg
lods
aaa
loop
mul
pushf
mov
repz
fisttpll
mov
push
mov
mov
sti
imul
sbb
jne
xchg
mov
and
dec
addl
jae
jns
mov
cmp
orb
add
call
jecxz
out
psllw
popa
jecxz
out
lods
adc
pop
out
sarl
jmp
push
cs
imul
mov
pop
cld
mov
xor
mov
leave
push
cmpsb
cmp
lea
lahf
xchg
sbb
jmp
xchg
fidivrl
jnp
and
pop
popa
mov
popa
fimull
ret
dec
xchg
add
test
sbb
jb
xchg
cs
inc
cmp
push
jo
jae
test
jb
mov
xchg
subl
mov
push
idivl
jae
jmp
out
cmp
das
adc
push
sahf
fildll
jl
push
movsb
lods
scas
mov
sub
adcb
xlat
mov
cld
mov
test
xchg
mov
and
pop
fadds
cmp
fwait
rcrb
mov
cltd
inc
add
stos
xor
ret
mov
js
jne
lcall
cmpsb
sahf
adc
ret
popa
mov
jmp
pop
jno
mov
lock
into
cmpl
ja
out
add
std
cmc
stos
call
scas
test
mov
add
lods
cs
pop
or
xchg
sub
es
sbbl
lret
pop
cmp
jp
sub
mov
mov
inc
aam
xchg
loope
xor
dec
dec
movsl
pop
xor
xor
cli
scas
add
dec
mov
imul
cwtl
mov
push
adc
mov
push
shll
xor
das
sbb
mov
sets
xchg
loop
vmread
lock
lds
fs
mov
xchg
inc
adc
ret
sbb
or
sbbb
sub
call
aaa
push
mov
and
adc
je
sbb
ret
jle
xlat
dec
into
add
xor
ror
pop
mov
ret
add
push
cltd
pushf
cmpl
shlb
iret
xchg
pop
call
push
repnz
lock
fstpt
dec
add
icebp
pop
daa
pop
into
dec
jno
mov
sbb
cmp
sbb
aaa
testb
inc
outsl
or
lahf
mov
hlt
add
push
addl
aam
orl
mov
pushf
or
inc
mov
and
lret
lods
aam
gs
mov
push
ss
pushf
mov
sbb
call
sbb
das
fs
imul
push
or
mov
popf
mov
aas
mov
popa
out
jmp
mov
xor
fdivrs
das
adc
icebp
sti
dec
lea
mulb
and
or
xchg
clc
js
xlat
jge
adc
pop
pop
ss
sub
clc
adcb
mov
push
jbe
mov
inc
nop
xor
dec
xchg
add
or
xor
push
add
test
jl
pop
mov
push
pop
fstps
sub
je
sub
jmp
xor
adc
pop
les
ret
cmp
arpl
inc
outsl
dec
pop
jae
stos
scas
xor
aas
fcmovu
dec
pop
test
pop
dec
imul
adc
sub
fcmovu
push
arpl
stos
sbb
arpl
pushf
jge
mov
lods
enter
icebp
xor
dec
and
pop
xor
icebp
dec
lret
pop
aaa
mov
outsb
jg
leave
js
mov
add
andl
arpl
push
aam
dec
push
xchg
or
or
mov
ret
inc
outsb
add
sbb
arpl
ud1
shrb
push
sbb
xchg
test
ja
pushf
aam
lds
mov
cmp
mov
loopne
pop
aas
pop
sub
or
es
push
scas
js
aaa
or
mov
jl
lods
and
ret
xchg
sub
sbb
jle
add
out
add
lods
sub
inc
jmp
out
pop
xor
push
icebp
adc
pop
outsl
cmp
mov
incb
xlat
ror
xor
daa
mov
hlt
adc
aas
xchg
xchg
test
mov
push
xor
pusha
test
incl
or
out
enter
xchg
sub
scas
mov
dec
xor
inc
jg
jecxz
popa
jmp
sub
push
jbe
xchg
fsubrs
push
jb
jno
mov
xorb
xor
sbb
lahf
inc
fs
xchg
aas
addr16
jmp
and
lods
mov
or
xchg
push
mov
shlb
rolb
pop
mov
push
sub
xchg
pushl
ret
ds
push
loopne
pushf
push
ret
mov
cmp
aaa
inc
fistpll
fcom
out
jg
mov
inc
into
inc
sti
lods
test
inc
adc
and
or
outsl
popf
push
decl
sub
in
addr16
cmp
mov
out
test
mov
mov
push
xor
enter
xchg
jle
adc
xor
sub
loopne
add
sbb
fcoms
pushf
ror
mov
dec
sub
push
inc
sbb
mov
or
sub
fldcw
inc
dec
jle
push
push
aas
mov
loop
jnp
loopne
jbe
test
dec
pop
jno,pt
scas
fimull
int3
leave
div
xor
cli
mov
into
fistpll
or
xchg
lock
imulb
add
cmp
and
sbb
int
sub
adc
mov
faddp
int
int
dec
or
dec
jno
mov
add
cld
jbe
push
adc
stos
jecxz
hlt
jno
hlt
movsl
cld
das
insl
cli
inc
pop
sub
mov
nop
test
add
lret
inc
mov
aaa
pop
dec
repz
push
scas
add
mov
push
mov
sti
aaa
fucomi
aam
sbb
fsub
xchg
iret
dec
aad
aas
sbb
mov
cmp
imul
sbbl
pushl
mov
movsb
cmpsl
push
aas
cmp
cmc
xchg
test
stos
in
les
sbb
ljmp
lods
xlat
push
rorb
dec
mov
les
in
mov
sub
xchg
daa
test
push
mov
adc
jle
pop
and
test
aam
sub
and
je
leave
inc
cmpb
xchg
pushf
add
cltd
cmp
test
sbb
xor
out
mov
imul
jno
cwtl
pop
adc
add
mov
pop
pop
int3
sub
xlat
pop
jb
lcall
push
sub
jmp
adc
sbb
adc
push
repnz
stos
and
pminub
mov
fsubs
push
or
iret
std
push
insb
adc
lcall
call
sbbl
fnstenv
pusha
fs
clc
mov
std
push
ret
cltd
addr16
lods
cmp
mov
pop
lret
push
in
adcl
mov
xchg
repz
add
ds
andl
mov
sub
push
lret
enter
jmp
or
negb
sbb
icebp
enter
and
pop
lea
test
jb
pop
sbb
adc
jbe
les
fcomps
or
and
push
cmp
mov
jmp
sbb
sbb
loope
adc
ret
fmul
dec
push
lahf
adc
movsb
jle
lahf
xchg
out
dec
mov
scas
leave
add
cmp
clc
dec
ja
xchg
gs
ret
lret
leave
arpl
push
iret
push
aaa
push
daa
dec
adc
jno
sbb
mov
imul
test
dec
scas
push
test
pop
sub
test
and
lret
insb
aaa
adc
pop
hlt
or
inc
inc
xchg
bound
cld
test
xlat
clc
add
fisubrl
outsb
or
outsb
push
cwtl
cmp
xchg
pop
cmp
mov
ret
cmp
les
xchg
jns
rcl
pop
je
hlt
dec
dec
out
test
mov
in
ret
push
sahf
cs
es
mov
push
in
sbb
push
xchg
mov
or
xchg
int
adc
shr
daa
sti
sarb
cwtl
gs
pop
cmpsl
and
sbb
fistps
fmull
clts
inc
insl
enter
out
and
fistl
stos
sar
orb
mov
imul
xor
pop
leave
loope
fs
pop
fsubl
or
cmpb
sub
ret
adc
lcall
sub
fistps
lcall
mov
rcl
stc
xchg
enter
mov
loope
loope
pop
push
mov
adc
pop
push
cmp
xorl
js
in
lcall
aam
push
daa
in
mov
movsb
mov
mov
xchg
mov
lods
sbb
sbbl
in
sbb
in
lods
mov
mov
loop
jmp
add
mov
mov
add
test
dec
outsl
jecxz
mov
push
jb
mov
xchg
add
loope
jecxz
popa
mov
jo
rcrb
mov
jns
inc
pop
lea
jmp
addl
mov
stos
pushf
pop
mull
xchg
int
repz
loopne
mov
loop
sti
and
mov
and
fmulp
push
jecxz
or
movb
push
mov
sub
dec
inc
lds
cmp
sub
add
xchg
jno
xor
dec
fdivl
add
add
clc
outsl
out
in
cmp
add
xchg
scas
sub
fisubrl
mov
addr16
mov
cli
out
cmp
inc
loop
mov
xor
mov
clc
push
or
in
dec
aaa
jno
outsl
cmc
fidivrl
pop
lret
mov
xor
mov
adc
adc
loopne
lds
sbb
pminub
out
leave
push
add
mov
or
or
in
add
xor
or
repz
ljmp
movsb
pop
lea
mov
push
xchg
ret
sub
sub
je
dec
movsb
cli
out
dec
mov
cmp
addr16
cmp
sub
dec
pop
inc
negl
add
pop
dec
push
push
dec
adcl
imul
dec
or
int3
push
mov
xchg
lock
mov
dec
js
mov
outsl
fidivrl
mov
xchg
mov
push
pop
push
sub
inc
mov
mov
test
sahf
dec
dec
hlt
mov
mov
fucomp
gs
sbb
jecxz
push
jns
test
pop
enter
xorps
mov
popf
jno
and
lret
cwtl
adc
sbb
dec
jecxz
fsubrs
push
loopne
daa
mov
arpl
ret
xor
in
rclb
cmp
lods
aaa
clc
fiaddl
test
inc
loop
pop
gs
push
mov
rolb
mov
test
cmp
xchg
shlb
aas
mov
mov
inc
mov
stos
mov
es
dec
lahf
cld
sbb
add
xchg
aad
dec
imul
ja
mov
ljmp
mov
scas
jno
cwtl
lock
xor
hlt
inc
jo
xchg
call
cmpsb
aam
push
inc
aas
jecxz
in
cs
lcall
fisttpll
mov
xor
pop
out
pop
or
push
push
mov
call
adc
xchg
gs
add
push
popa
inc
lar
sarb
mov
sub
mov
bndstx
mov
push
pop
movsl
decl
outsl
adcl
gs
cmp
fwait
aaa
jle
jp
aaa
xchg
adc
sbb
icebp
push
push
sbb
push
lcall
jp
rorl
jl
push
arpl
inc
jecxz
mov
lcall
or
or
push
pusha
out
in
or
insl
jl
pop
xor
inc
mov
insb
add
jge
and
and
jnp
aaa
cmp
fisubl
sbb
out
scas
mov
add
dec
scas
js
aad
fwait
cmp
adc
and
insl
fildl
repz
int
xchg
cmp
xchg
xchg
sbb
aad
out
andl
out
cmpsb
or
test
xor
push
pop
insl
pop
notb
xlat
rcr
add
xchg
adcb
adc
outsl
in
dec
pushf
out
mov
inc
test
cmp
negb
cmp
jecxz
test
and
and
sbb
addr16
or
and
loopne
sub
xor
dec
int
jae
fldt
dec
ljmp
stos
cmp
or
es
divl
cmp
insl
or
lret
jns
stc
es
push
mov
aad
dec
add
mov
mov
cmp
dec
dec
data16
xchg
testw
in
xchg
loope
jnp
xor
jo
sub
cmpsl
lret
inc
lahf
jmp
dec
call
inc
xchg
icebp
mov
pop
cmp
jmp
in
cs
xor
aaa
mov
aam
fdivs
out
and
imul
or
inc
jne
lret
test
out
mov
fistps
mov
adc
aaa
stos
insb
mov
mov
inc
push
loop
pop
mov
int3
mov
xchg
ss
roll
nop
xchg
and
les
sbb
lret
mov
nop
sbb
into
in
loopne
xchg
pop
lret
adc
cmpl
dec
dec
lock
add
mov
pop
add
adc
iret
lea
lahf
popa
mov
loopne
loop
in
xor
sub
arpl
mov
call
jecxz
lret
enter
fs
jl
sub
leave
jg
lcall
iret
testl
data16
call
xor
pop
outsb
pop
fld
sub
jb
mov
push
lret
cmp
adc
jl
aad
cltd
cli
out
mov
jecxz
xor
push
in
in
jo
cmc
addb
push
mov
xor
sub
add
push
pop
ljmp
jmp
cmp
fldcw
add
cmpsl
adc
es
xchg
ror
int
mov
insl
divb
test
add
xor
xchg
dec
mov
xor
mov
int
iret
mov
shll
out
add
cli
fdivrs
mov
jmp
mov
push
jg
aas
cmc
push
test
lock
cmp
fs
mov
stos
sub
in
and
sbb
int
out
ret
in
sbb
dec
scas
lock
mov
or
sbb
and
sarb
cmp
pop
loop
aam
jno
sbbb
test
test
ds
xor
fsubp
mov
or
insb
mov
lods
push
jo
pop
sbb
std
mov
push
addr16
xor
frstpm(287
lahf
push
lods
stc
pop
sbb
mov
and
xor
push
fcmovnbe
dec
loope
fs
sbb
cmpl
cld
scas
scas
xor
fsts
cmp
js
outsb
sahf
pop
adc
into
mov
jb
lahf
pop
mov
int3
enter
cmpsl
lahf
outsb
sbb
mov
out
rcrl
hlt
adc
pop
dec
dec
add
adc
jp
nop
add
jno
outsl
outsl
fmul
imul
and
lock
into
in
mov
push
std
jmp
mov
lods
jb
push
int
jl
imul
inc
xor
dec
adc
popa
add
or
push
dec
xor
jnp
scas
jmp
data16
jae,pn
pop
dec
scas
adc
pop
idivb
lock
cld
push
ljmp
bnd
loope
mov
push
or
mov
xchg
gs
ficomps
fcomip
jno
mov
adc
dec
and
push
jbe
xchg
cld
rolb
sub
cs
push
loop
inc
decb
push
ret
repnz
popf
bound
in
pusha
mov
sub
lahf
sub
mov
in
xchg
sbb
inc
testb
mov
hlt
popf
dec
sbbl
jle
lea
mov
add
pop
cmc
sbb
enter
ret
mov
movsb
stos
mov
sub
or
sub
sub
call
rcrl
mov
push
lret
or
ret
rclb
into
addl
sarb
pushf
pop
or
mov
pop
lahf
and
das
adc
cwtl
lods
ds
outsb
pushf
pop
mov
cmc
out
cmp
jns
loope
loopne
push
mov
jnp
xchg
clc
sti
adc
mov
push
insl
jae
jmp
mov
or
inc
mov
lret
adc
push
xchg
aam
lret
inc
adc
mov
or
inc
repz
or
outsb
daa
xchg
insl
adc
in
dec
xchg
imul
xor
lods
pushf
data16
lahf
xchg
daa
fs
call
cmp
fldcw
xor
inc
cmp
cmpl
movsl
push
push
loope
iret
rorl
shll
addb
sahf
and
add
add
in
jl
jne
mov
data16
adc
sahf
or
aas
aad
sub
data16
shrb
xchg
and
pop
nop
fsubl
mov
sar
jb
push
mul
out
sub
movsl
mov
add
leave
clc
rol
lods
leave
push
mov
mov
push
sub
les
and
cli
mov
lock
je
ficompl
daa
xor
loop
lods
mov
or
inc
mov
or
dec
fnstsw
in
cmp
test
daa
or
gs
ljmp
packsswb
fimuls
adc
fistpl
repnz
pop
fcomi
xchg
push
leave
add
lcall
ljmp
dec
xchg
andl
rclb
cmp
xchg
pop
and
rorb
fs
mov
mov
mov
addl
int
mov
ret
insb
xchg
movsl
mov
pop
add
push
inc
outsl
and
adc
cmp
mov
xchg
and
out
inc
adc
xlat
xchg
fucomip
lret
mov
mov
pop
mov
mov
xor
int
pop
adc
jno
std
add
or
daa
add
mov
scas
or
mov
hlt
adc
lcall
cmc
loope
xor
rolb
cmp
ficompl
push
cmp
cmp
nop
jmp
inc
xchg
cmp
inc
ja
add
fcoml
inc
cld
push
jl
ljmp
xchg
cmp
or
mov
insb
mov
xor
rep
and
xor
fstpl
sbb
and
adc
dec
clc
or
jp
call
lea
scas
out
pushl
pop
xchg
cs
mov
cmp
cmp
psubq
and
mov
int
mov
into
jae
mov
mov
mov
jnp
inc
sub
mov
dec
pop
cld
mov
sub
and
cltd
pop
jno
addr16
mov
in
xor
fidivrs
jbe
mov
push
push
loopne
scas
mov
and
mull
sti
xchg
jecxz
or
fs
out
jl
loope
sbb
mov
cmp
mov
aas
stos
fwait
mov
xchg
push
lahf
push
call
xor
push
xchg
movsb
popf
push
cmp
outsl
jge
repnz
in
xchg
and
jp
daa
leave
inc
sbb
xor
sbb
fildl
lock
call
mov
push
xor
xchg
ljmp
mov
jno
push
insl
movsb
pop
das
cmp
and
out
sub
jno
push
aaa
cmp
cmp
aad
cli
insb
ds
pop
pop
movsl
mov
cmp
pop
cmp
adc
fdivp
or
or
das
pusha
sub
cli
jmp
stc
push
pop
int
mov
inc
cld
or
out
loope
outsl
pop
cmp
sub
add
or
clc
jp
fildll
lods
ds
dec
out
loopne
lock
out
fimull
pop
mov
notb
mov
jbe
jmp
lock
out
push
mov
pop
adc
dec
rcr
xchg
cmpsl
push
dec
or
in
pop
dec
xchg
ds
testb
push
fsubl
sbb
jl
xorb
aad
fstl
lock
ljmp
xchg
lock
sbb
out
sbb
aam
adc
rolb
outsl
sub
mov
add
push
rcll
cmp
sbb
fidivrs
sub
or
movsl
or
pop
inc
nop
adc
mov
pop
cmp
test
cld
arpl
cli
cmc
mov
daa
and
jb
icebp
lods
imul
rcrl
jle
pop
xchg
or
aaa
sub
stos
pop
in
cwtl
add
adc
icebp
and
test
pop
pop
fwait
mov
xor
test
lds
hlt
std
std
das
mov
xchg
dec
push
in
icebp
lret
lods
pop
dec
in
pusha
cmpsb
jp
xchg
lahf
fidivs
lcall
xor
inc
mov
push
ficoms
jp
mov
jg
enter
inc
fidivrl
stos
cltd
filds
cmp
cmp
int
xchg
repz
cmp
and
cmp
addr16
clc
sub
sbb
andb
xchg
les
lds
int3
je
inc
es
adc
stos
mov
push
std
and
xchg
dec
dec
leave
imul
or
xchg
sbb
out
ret
mov
out
loopne
adc
adc
iret
cs
sub
push
mov
in
and
push
sub
or
je
stos
xchg
dec
ja
or
dec
decb
sbb
inc
xchg
fimuls
mov
outsl
ror
incl
lret
rcrl
fstpt
lret
scas
xorb
lret
cs
xor
dec
shrl
xor
pop
jae
and
bound
or
insl
jns
sub
sub
lods
test
xor
add
or
repnz
xor
push
les
push
insl
mov
pop
jmp
jb
inc
inc
lock
cmpl
paddusb
out
sbb
test
pop
or
mov
mov
sbbb
xor
pop
orl
inc
cmc
out
push
or
inc
sub
aaa
adc
cmp
xor
sbb
ret
ja
bound
enter
test
pop
lcall
jns
pop
inc
xor
xchg
std
repz
in
xchg
sbbb
stos
push
out
outsb
imul
idivb
outsb
add
mov
xchg
arpl
xchg
lret
bound
js
sub
ret
sub
jle
mov
mov
mov
scas
dec
pusha
push
leave
sbb
sbb
xor
cmpsl
out
push
cwtl
les
lret
bound
icebp
push
mov
adc
and
pushf
mov
sarl
stos
les
xor
sbb
je
std
imul
scas
add
push
push
cmpsb
cmc
gs
insl
mov
jo
movsb
jo
mov
cmp
inc
ficoml
aas
es
pop
out
movsb
testl
test
fmull
aad
or
cmc
ret
hlt
addb
or
adc
in
or
or
rcrl
das
test
xchg
and
negb
push
adc
sbb
jb
push
mov
jns
sti
jo
in
jnp
fstpt
pushf
sbb
jp
loopne
pop
nop
int
sbb
xchg
es
jb
jle
mov
aas
xchg
mov
pop
imulb
rcrb
sbb
syscall
rcrl
push
push
fwait
mov
dec
inc
mov
inc
push
je
fists
push
notb
xchg
sub
xchg
push
lods
dec
xchg
sub
sub
imul
mov
pop
cmp
mov
jne
pop
mov
in
pop
mov
in
std
cmp
or
mov
xor
push
test
inc
pop
adc
daa
mov
xchg
in
in
aam
pop
icebp
pop
in
inc
int3
xor
sub
mov
add
ljmp
mov
push
push
mov
out
mov
inc
lock
fstl
fsubrs
aam
and
adc
mov
and
and
pop
xchg
push
inc
mov
inc
in
js
pop
cli
jmp
pop
ret
movsb
sbb
mov
add
pop
aas
bound
lods
or
jg
dec
add
movsl
pop
cld
sub
jnp
push
xor
cwtl
xchg
call
mov
mov
dec
mov
pop
and
mov
mov
test
pop
push
and
lcall
bound
add
sbb
inc
test
lods
inc
dec
jg
sub
fistl
mov
inc
out
cs
out
cltd
fisubrs
push
lret
jno
dec
les
push
inc
insl
fiadds
push
out
fwait
sub
int
gs
clc
pop
cltd
insb
cmp
test
je
dec
pop
sub
inc
and
jg
mov
repz
stos
push
lcall
data16
loopne
dec
xor
push
aas
outsb
or
push
pop
cld
sub
sti
sbb
adcl
shll
jnp
int3
fistpll
fnstcw
aad
cmp
push
or
pop
push
cli
push
jl
adc
mov
dec
push
hlt
es
hlt
inc
fsubrs
and
mov
xor
push
loopne
shll
test
push
mov
adc
push
push
imul
es
xor
lahf
and
pop
dec
or
shlb
bound
jmp
mov
shl
data16
sti
sbb
ret
sbb
jns
in
xchg
xchg
lea
xchg
xor
fldt
push
mov
insl
test
in
mov
mov
jno
sbb
faddl
pop
push
into
sbb
push
jno
xor
jg
add
movsl
call
lret
hlt
ds
cmp
icebp
mov
das
pusha
ret
das
icebp
and
mov
imul
daa
sub
dec
push
loopne
push
push
sbb
fimuls
enter
jle
in
clc
shr
inc
sub
rolb
pop
or
popa
daa
imul
dec
das
mov
pop
xor
and
and
ret
jle
cmpsb
pop
inc
ror
dec
loop
dec
test
mov
xchg
jl
adc
pop
pop
inc
fildl
mov
ja
ret
shrb
inc
inc
xor
mov
add
leave
bound
filds
out
in
jb
mov
sbb
ss
xlat
or
rcr
mov
shl
pop
outsb
mov
scas
jl
mov
xor
in
jecxz
dec
outsb
xchg
std
or
sbb
stos
mov
push
mov
orb
xchg
jno
pop
inc
jg
in
pop
cmpsl
or
adc
dec
sbb
out
sbb
cmp
jecxz
aas
popa
outsb
mov
xchg
dec
jge
dec
and
js
inc
inc
dec
xchg
or
add
les
xlat
hlt
add
addr16
cmp
orb
jns
out
aam
jg
rcrb
mov
or
mov
int3
and
push
and
sbb
push
and
sbb
cltd
mov
mov
test
xchg
xor
jb
ljmp
mov
ljmp
or
test
cmp
jl
xor
test
clc
scas
fistpll
loop
flds
pop
jo
sbb
cmp
xchg
xor
sbb
dec
out
fwait
mov
and
cmp
cwtl
pop
fstpt
aas
mov
jmp
call
mov
inc
push
or
dec
push
jg
mov
iret
cmp
in
scas
dec
xchg
rcl
dec
mov
fcmovnb
push
mov
pusha
clc
test
test
rclb
mov
cmp
dec
xlat
inc
aas
popa
ja
movsl
xor
mov
rorb
inc
jb
test
lret
in
add
sti
cmpsb
mov
outsl
xor
inc
and
or
mov
sahf
sahf
pop
and
xor
lods
sbb
add
outsb
into
inc
push
imul
xchg
popf
add
insb
in
sub
cmp
les
fdivrl
xchg
jo
mov
sbb
maskmovq
imull
cwtl
jnp
dec
dec
les
arpl
cltd
mov
movsb
jmp
mov
in
lds
jo
insb
movswl
test
fisttpll
hlt
mov
add
iret
lods
lahf
cwtl
imul
loope
add
mov
out
lods
push
rcl
scas
push
lret
cmp
xor
lret
jne
bound
ljmp
es
aam
xchg
ficomps
mov
repnz
adc
lcall
leave
push
jge
pop
mov
and
fdivs
into
jmp
aaa
je
mov
call
xchg
daa
clc
mov
mov
cli
dec
popf
pop
or
call
loope
push
in
pop
cmp
int3
mov
rorb
jp
xor
loope
leave
shrb
or
inc
shll
adc
mov
ja
sbb
pop
sbb
mov
stos
faddl
dec
dec
vmovss
in
shlb
sub
and
jnp
add
or
xor
jg
push
inc
fisttpl
mov
push
dec
jmp
xlat
jl
adc
in
insl
mov
dec
push
add
mov
scas
cmp
das
int
add
nop
cmpsl
push
addb
jmp
mov
jnp
add
sub
jge
cmp
dec
cmc
sbbl
aam
pop
jb
rorb
jecxz
xchg
mov
out
sub
cwtl
jg
fs
cmpsl
push
popf
lock
es
in
or
adc
mov
jnp
pop
in
ss
cmp
cs
clc
xchg
xlat
fisttpl
hlt
xchg
add
sub
pop
outsl
inc
lods
int3
mov
mov
fistl
aaa
inc
inc
pop
fcmovnbe
setns
pop
cld
mov
or
push
arpl
stos
xchg
inc
mov
xor
cmc
push
push
ds
aaa
cmpsb
hlt
push
jg
std
adc
call
pop
lock
dec
push
cmpsl
iret
add
mov
push
add
xor
out
popa
push
iret
dec
addl
inc
add
xchg
mov
dec
lcall
inc
mulb
mov
pop
cli
fcomp
push
and
scas
or
lret
mov
mov
rol
es
cmpsl
xchg
pusha
add
lcall
xor
jl
mov
stc
add
int3
and
out
add
test
icebp
cmp
scas
mov
and
xor
dec
lods
mov
inc
popf
aam
pop
sbb
insb
cmp
or
lods
xor
xor
adc
mulb
cmc
cld
lcall
cmp
push
out
push
xchg
add
jecxz
fsubs
sub
jmp
cmc
fisttpll
call
je
cmp
xchg
enter
fsubr
dec
sub
jl
mov
out
add
push
rcll
shl
repz
dec
and
xchg
or
push
sar
int
mov
fiaddl
cwtl
shlb
add
fists
and
mov
or
jg
sbb
das
fcompl
sbb
cmpb
add
push
jle
das
xchg
ror
mov
cmpsl
jge
js
xchg
jl
jbe
adc
inc
jmp
std
adc
push
fcomps
mov
loopne
cmp
stos
mov
inc
fs
fistpl
mov
dec
imul
fisubrs
icebp
cmp
push
add
int3
enter
sub
mov
into
xlat
push
pop
cmp
pop
sub
ds
jno
pusha
sbb
in
es
icebp
orl
push
push
lds
int
shr
and
cmp
mov
jecxz
fcoml
inc
cli
cmpl
pop
out
aaa
ds
xor
dec
test
mov
xchg
jae
cli
rclb
jb
dec
ss
add
leave
aas
into
inc
stc
rolb
dec
popa
sub
dec
jo
xor
test
cltd
cmc
aaa
cs
loop
aas
jmp
jge
insl
cld
dec
aas
fisttpll
sbb
dec
scas
rcl
fdivrs
mov
cmpsb
push
mov
lea
add
sahf
out
int
fimull
mov
xchg
popf
jl
mov
inc
or
aaa
pop
mov
fmull
ret
pusha
add
dec
in
scas
xchg
mov
outsb
jmp
mov
rcl
or
cmp
nop
dec
ror
sbb
fs
fwait
push
mov
or
add
add
mov
xchg
pop
stos
cmp
arpl
and
adc
dec
aaa
cwtl
int
sbb
add
pop
or
scas
mov
xchg
test
lcall
pop
mov
sbb
mov
inc
aam
icebp
sub
imul
dec
mov
xchg
inc
push
out
stos
test
fs
incw
fs
mov
pop
add
jge
out
popf
cmp
aad
pop
hlt
sbb
xchg
cs
xchg
scas
mov
addr16
stc
cmc
add
dec
in
jmp
insl
lcall
mov
adc
xor
xor
add
mov
call
xchg
enter
lret
fs
xchg
int3
stos
lods
fdivr
imul
je
stos
lret
divb
popa
sbb
int
test
pop
cmp
sbb
jecxz
fs
cvttps2pi
push
outsb
sub
dec
lcall
push
jecxz
popf
mov
ss
push
jge
mov
mov
repz
mov
aad
xor
push
shrl
inc
push
jnp
mov
loope
mov
shll
mov
pop
and
mov
add
cwtl
rorl
sub
xchg
aas
or
call
fldcw
fcompl
je
xor
jns
mov
inc
xor
push
negb
frstor
push
push
add
stos
lahf
std
movsl
jmp
push
and
dec
das
push
push
push
pop
cmp
movb
cld
add
in
adc
push
jmp
dec
mov
adc
push
xchg
aam
push
daa
xchg
fdivr
jge
push
mov
sarl
adc
lahf
and
sbb
shl
mov
push
xchg
call
mov
nop
mov
stc
in
xor
jecxz
out
push
loope
adc
inc
dec
dec
mov
rorl
sub
xor
aaa
mov
or
push
jo
pop
in
jmp
sbb
pop
mov
push
sti
movsb
jg
das
outsl
jne
pop
mov
pop
mov
push
xchg
movsl
push
sbbb
add
je
mov
or
pop
mov
fildl
sub
popa
adc
stos
movsl
divl
inc
sub
idivl
fldt
mov
inc
add
pop
pop
push
and
stos
inc
xchg
cld
in
sbb
sub
jne
fsubl
stos
jnp
jp
test
and
sub
imul
mov
and
sbb
sub
jl
pop
mov
jae
sub
adc
dec
shll
mov
sub
outsl
cltd
xchg
cld
mov
mov
xchg
sbb
gs
pop
incb
test
mov
xlat
pop
mull
lds
mov
mov
or
jl
aam
sti
sbb
sbb
mov
andl
jmp
push
cmpsl
sub
pop
test
jge
movsl
push
dec
mov
cli
aaa
aas
arpl
or
push
push
testl
test
mov
pusha
jnp
lret
leave
cmp
mov
std
add
clc
mov
shr
lahf
out
decl
jnp
fdiv
cmpb
rcrl
in
add
or
loope
aaa
sub
add
push
mov
daa
mov
les
in
mov
push
fistpll
test
add
icebp
popfw
pop
sbb
cmp
test
pop
loopne
and
adc
nop
add
jp
push
repnz
ljmp
cmp
cmpsb
cld
mov
loope
div
jge
mov
add
add
mov
test
xchg
je
add
xchg
inc
repz
or
enter
adc
mov
add
sbb
popa
sahf
int
dec
in
mov
jg
mov
shlb
or
xor
ss
mov
sub
mov
sar
push
call
loope
push
add
xor
mov
mov
jb
stc
dec
and
and
jge
out
lock
out
pushf
push
fcomip
push
fmuls
mov
negb
add
mov
test
or
lds
in
jns
xlat
jmp
jg
data16
pop
aam
repz
sbb
js
mov
loope
test
jp
sub
scas
mov
ret
sbb
cmp
imul
push
cmp
rolb
inc
popa
and
push
dec
xchg
testb
std
movl
sbb
jne
hlt
test
orl
cmp
and
cmpsb
xor
and
push
xchg
adc
xchg
mov
pop
fsubrl
in
pop
cli
into
jno
sub
loop
scas
cmpsb
cli
push
pop
cmp
repnz
jg
jb
es
lret
lods
pop
xchg
mov
cmp
fists
cli
movsb
add
push
sahf
push
repz
inc
or
jmp
add
inc
dec
pop
jns
push
lods
sub
dec
cmp
jae
sub
inc
cwtl
nop
fdiv
out
popa
outsb
hlt
imul
dec
add
jl
inc
iret
inc
iret
ds
push
pushf
and
push
cmp
je
push
aas
aad
pushf
insl
jnp
popf
xchg
lret
xor
jb
repnz
or
mov
or
lods
iret
lods
jns
insb
dec
jae
sub
xchg
push
sub
enter
adc
test
ffree
movsl
call
mov
js
add
or
push
cli
dec
xchg
inc
call
push
cwtl
inc
mov
lods
add
lds
mov
fisubl
add
insl
adc
xchg
xchg
in
sbb
iret
sbb
pop
out
enter
inc
inc
dec
iretw
push
sub
je
inc
pop
rclb
repz
daa
sbbb
aam
or
lret
and
sbb
lods
inc
roll
sbb
xor
adc
cmp
dec
icebp
mov
inc
subl
test
sbb
roll
adc
fs
inc
mov
scas
sbbl
and
cmp
jae
jge
out
leave
js
push
popf
jmp
and
adc
xor
inc
and
cmp
sbb
cld
sbb
mov
mov
push
push
mov
leave
and
or
lods
loopne
test
ja
mov
js
dec
xchg
fistpll
sub
adc
push
mov
push
jp
cmc
aas
shl
flds
jns
andl
push
pop
xor
je
pop
mov
pop
sub
jl
movsl
sub
pop
sbb
out
xlat
aaa
sub
inc
add
cmc
rcl
sub
pop
add
je
dec
std
jno
pop
cmp
adc
test
stc
xchg
int
mov
push
jmp
xchg
jo
and
inc
pop
mov
push
cmpsb
movsl
mov
jg
adc
pop
push
push
and
jbe
inc
test
fmull
loope
sbb
add
out
or
ds
pop
adc
adc
out
addb
add
mov
out
negl
cld
jo
cld
mov
aas
aas
cmp
popa
inc
jle
rcr
push
enter
les
insb
push
mov
movsl
fsts
enter
mov
arpl
movsl
and
imul
pop
into
sbb
repnz
psllw
mov
pop
fnstcw
jo
xor
loop
inc
pusha
push
clc
stc
gs
mull
cmp
or
mov
push
pop
outsl
and
pmuludq
or
leave
loope
pusha
add
std
insb
mov
sbb
cmc
xchg
cmp
add
jle
enter
loop
pop
add
cmpsb
mov
and
sub
mov
or
lods
sbb
mov
xchg
cmp
fcomip
test
pop
pop
fwait
inc
mov
mov
dec
arpl
fstps
xchg
push
xor
or
mov
inc
cld
or
mulb
popa
jae
sahf
iret
fs
andl
les
ss
ljmp
or
das
shrl
add
mov
push
sbbl
popa
dec
ret
rcrl
sub
cmp
andb
popl
popa
xor
js
das
cs
sbb
xor
sbb
jbe
subl
xchg
inc
ljmp
jmp
xchg
xor
rorb
and
das
aam
lock
adc
and
mov
xchg
ljmp
dec
mov
aam
push
sub
cmp
lcall
pop
dec
mov
fildl
push
mov
leave
jns
shll
or
nop
ds
hlt
mov
xor
ret
mov
push
pop
xchg
in
mov
cmp
ret
add
clc
or
cmp
mov
fs
in
mov
faddl
les
scas
dec
cmc
sub
sub
leave
mov
movsl
xchg
std
imul
popl
xor
insl
in
loop
xor
rclb
ret
adc
in
mov
inc
pop
leave
push
push
test
xor
leave
loopne
dec
bound
popf
and
or
int3
lea
mov
insb
pop
dec
push
pop
call
enter
pushl
ror
inc
or
mov
jl
mov
es
xchg
fldenv
cmpsl
xchg
and
nop
std
into
icebp
xlat
push
cmp
jbe
xchg
jge
aam
in
or
test
dec
lea
outsb
push
pop
stos
xchg
push
lods
inc
pop
lea
xor
jg
int
data16
cmp
insb
aam
pop
push
stos
adc
jae
lret
add
cmpsb
push
shlb
mov
jle
pop
nop
adc
inc
cmc
repnz
push
sbb
out
insb
into
cmp
mov
sbb
xchg
inc
lds
sbb
inc
mov
fbld
sub
mov
mov
xchg
idivb
cmpl
lret
jno
fiadds
xchg
mov
repz
insl
es
lea
jl
popf
mov
mov
inc
into
lret
pop
cmp
lret
mov
mov
mov
sub
inc
push
clc
fsubrs
cmp
sub
fistpll
push
int3
jne
mov
sub
cmp
lods
ds
adc
pop
push
push
ret
jno
ss
sbb
pop
and
outsb
stos
lods
pop
xor
imul
hlt
inc
adc
dec
and
unpcklps
std
je
sub
pop
ficompl
popf
dec
jo
mov
call
adc
std
enter
mov
jne
nop
pusha
stos
mov
push
jmp
icebp
sub
dec
and
shll
add
iret
adc
jmp
mov
add
push
into
xor
pop
fisubs
shll
hlt
mov
push
push
mov
inc
fdivrp
aad
int
cli
lret
popf
repz
inc
xchg
fsubrs
dec
testb
in
pushl
lods
xchg
mov
test
pop
pushf
add
jns
cmc
xor
push
sub
lods
adc
add
xchg
ss
mov
xlat
icebp
cmp
bound
stos
and
popa
pop
shll
loope
pmaxub
xor
pop
cmc
pop
xor
std
sbb
sbb
out
push
mov
mov
xlat
fists
sbb
insl
xchg
pslld
lahf
mov
fisubrl
fsubrl
or
mov
repz
jb
dec
test
xor
or
loopne
mov
test
outsl
repnz
dec
mov
mov
popf
pop
dec
fistps
pusha
cmp
in
push
mov
and
push
repz
jns
xchg
adc
add
enter
inc
inc
dec
add
jo
xor
adc
gs
mov
xor
mov
mov
mov
popf
push
or
jmp
popf
repnz
aam
xchg
adc
jle
lods
sarl
or
jmp
xchg
outsb
das
lea
add
mov
or
sub
cmp
insl
scas
push
lret
int
pushf
mov
stos
out
lea
out
sbb
fcmovu
mulb
xchg
ljmp
lahf
mov
xchg
fucom
pop
sti
dec
xor
sbb
jecxz
test
roll
test
call
inc
xchg
xor
rolb
subb
mov
hlt
sub
aas
cmpl
ret
jo
test
sbbl
test
adc
push
push
jg
push
in
jecxz
movb
jno
fldl
rep
cld
xor
push
jno
xorb
push
xorb
xlat
mov
add
out
insb
sub
jg
ja
cmp
iret
jge
xchg
mov
mov
lcall
inc
fwait
jne
sub
mov
or
cld
out
lret
pop
hlt
lcall
push
ds
xchg
lds
pop
xchg
enter
cltd
and
popf
add
cmp
cmp
sub
pop
outsl
push
pop
flds
sub
jae
inc
cmc
mov
push
cmpsl
loop
xor
rol
and
add
inc
add
testl
xchg
bnd
call
dec
mov
push
call
push
pusha
ss
and
stc
xor
aam
mov
inc
fwait
and
xor
insl
in
lcall
mov
mov
mov
sub
mov
add
cmpsl
in
pop
call
sub
push
data16
adc
inc
push
xchg
in
mov
je
cld
ret
stos
sub
shl
data16
inc
add
or
notb
xchg
mov
jge
aas
jecxz
cld
inc
arpl
mov
clc
jnp
adc
pop
push
pop
mov
and
pop
and
fnsave
rorl
out
fiaddl
cmp
or
inc
add
ret
jecxz
or
add
je
jp
and
inc
xor
test
fisubrs
adc
fs
imul
int
knotb
enter
movaps
sti
pop
adc
cmc
or
xor
enter
incl
aas
incb
mov
mov
test
sub
stos
mov
stc
mov
adc
adc
lcall
shrl
sbb
adc
movsb
into
fsubs
xchg
addr16
rorl
cmc
mov
mov
and
sti
mov
pop
mull
jbe
cld
or
aam
push
fldenv
and
and
repnz
insb
push
idivl
sahf
in
adc
mov
fs
mov
fcomps
and
cmc
inc
les
adc
sub
add
adc
je
js
hlt
test
jg
sub
jbe
add
insb
scas
add
ret
inc
notl
xor
lret
mov
add
dec
jne
int3
loope
sbb
jl
outsl
idiv
mov
and
pop
push
fwait
xchg
lock
js
jne
adc
jae
jge
dec
pop
xlat
dec
or
sbb
xlat
out
or
das
ds
mov
and
stos
lahf
insl
in
sbb
popa
movsb
mov
push
rolw
push
inc
aam
dec
mov
out
mov
cld
sbb
mov
mov
insl
inc
or
sub
cmpsb
aam
push
movsl
pop
push
incl
lds
dec
push
mov
inc
mov
dec
leave
or
mov
fwait
lea
push
aaa
xchg
in
add
inc
mov
mov
xchg
outsb
inc
inc
inc
addr16
inc
dec
ss
inc
bound
and
cmp
mov
int
inc
adc
and
sbb
add
ficoms
mov
mov
faddp
out
xchg
in
lret
mov
lock
jg
outsb
sbb
mov
jbe
adc
pop
adc
push
inc
orl
inc
sbb
dec
cs
fldcw
ret
in
sbb
jno
mov
or
rcrl
push
leave
pop
push
movsb
fdivrs
out
xchg
xor
mov
xor
mov
mov
dec
jnp
clc
ret
bound
pop
push
iret
push
jns
mov
sub
stos
cld
add
jnp
outsb
push
cs
xchg
xchg
leave
dec
shr
sbb
mov
fidivs
push
sub
sub
loopne
add
mov
in
bound
pop
jp
pusha
fldenv
fsubr
jecxz
cli
sbb
test
rep
mov
sub
cmp
jmp
add
shrl
cmpsl
inc
insl
movsl
leave
ret
push
outsl
add
mov
lcall
xchg
dec
pop
lods
pop
pop
into
mov
xchg
mov
push
mov
or
xor
in
std
enter
mov
jl
add
sbb
or
ret
xchg
mov
or
mov
jl
sub
inc
mov
add
ljmp
repz
push
ljmp
jne
dec
outsl
add
into
rorl
and
jle
jb
adc
movsb
fcmovne
pop
lcall
mov
adcl
ret
sub
ret
sbb
adc
add
les
jno
pop
mov
inc
das
lea
jg
xor
pop
stc
sbb
dec
jmp
mov
add
dec
cmpsb
sahf
ja
sbb
insl
ds
xor
fcoms
into
mov
es
pop
jp
jle
push
fisubrs
adc
cmovns
mov
xor
push
fdivs
push
adc
mov
pop
push
cmp
inc
int
pop
into
cli
mov
push
or
into
dec
insb
sbb
sbb
imul
push
xor
call
mov
dec
int
outsl
movsl
es
pop
insl
cltd
jae
out
push
dec
push
rcrb
add
add
mov
lahf
sbb
int3
movsb
add
cmp
rep
inc
cmpsl
out
dec
pusha
sub
inc
cmp
cld
inc
mov
or
dec
addr16
loopne
icebp
mov
add
push
aad
sahf
cltd
mov
push
mov
sub
dec
leave
ds
notb
xor
loop
cmp
push
push
insb
out
ljmp
arpl
add
cmp
imul
movl
aad
bound
mov
mov
lret
adcl
je
out
scas
mov
dec
cmpb
mov
sub
sti
icebp
js
push
lods
push
stos
adc
icebp
lock
movsl
fiadds
std
push
loopne
std
fistps
mov
xor
dec
imul
jae
sub
and
imul
popa
cmpsb
stos
iret
mov
or
repz
pop
repz
push
cmp
mov
lret
sbb
sub
add
and
add
sbb
andb
push
ds
sahf
stos
out
jp
pop
jno
pushf
xchg
in
pushf
out
repz
ret
cmp
or
lret
mov
jne
icebp
in
roll
sub
out
insl
pop
pushf
push
xchg
cmp
in
rcrl
sbb
mov
rcl
dec
sub
jnp
xor
sbb
iret
call
or
jb
jae
loope
andl
sub
pop
add
mov
mov
int
inc
shl
test
mov
inc
paddw
cld
out
mov
shlb
fnstcw
es
jmp
imulb
push
pop
adc
mov
jnp
lcall
or
push
xlat
mov
loopne
mov
and
push
rclb
push
push
les
ds
xchg
fdivrl
inc
outsb
rcrb
adc
push
jae
or
sbb
sub
jle
inc
xchg
cli
mov
leave
sbb
push
lds
lret
dec
dec
jg
xchg
bound
push
fidivs
popa
ja
scas
mov
sub
scas
pop
dec
sbb
dec
andb
jae
jge
pushf
pop
xchg
call
lock
push
jnp
pusha
mov
je
cmp
fbld
popf
in
dec
std
subl
arpl
test
push
inc
rclb
mov
mov
xor
cmp
mov
fcmovnbe
mov
into
mov
insb
mov
push
inc
movsb
mov
in
mov
int
daa
mov
clc
dec
sbb
mov
mov
jb
add
xchg
cmp
aam
or
cmc
lea
fisubrs
jbe
jbe
ss
adc
lds
fwait
cld
inc
repz
cmp
sbb
mov
sub
lcall
fsubl
push
sbb
lock
popf
mov
sbb
ret
data16
cmpl
daa
int
mov
enter
idivb
rclb
jmp
add
aam
aam
sub
sub
shll
in
jp
adc
push
add
sahf
call
scas
fistl
leave
and
jno
dec
cmovg
pushf
cltd
cmpb
adc
sbb
lret
xor
in
mov
dec
or
insb
cwtl
js
scas
cmp
push
dec
out
sbb
push
adcl
dec
xor
dec
cmpsl
psllq
sbbl
jmp
call
je
mov
popa
mov
ret
cmp
mov
dec
dec
mov
or
jnp
repnz
xchg
mov
mov
scas
push
push
fbstp
cmp
inc
bound
jns
lret
push
ret
pushf
push
mov
jp
pop
stc
repz
pushl
aas
repnz
fnsave
data16
or
push
cmpl
adc
enter
xor
bound
ss
jne
sbb
movb
mov
iret
add
mov
cmp
xor
inc
clc
in
pop
fsub
jb
div
aad
xchg
sub
cltd
add
adc
jo
loope
xchg
pop
call
dec
fwait
outsl
clc
and
movsl
or
cmp
ljmp
in
shr
push
inc
add
sarl
ds
lock
sahf
ds
push
jmp
push
mov
add
daa
mov
mov
pop
push
and
cmpsb
pop
loop
negb
mov
push
data16
rorl
or
push
popf
adc
xor
and
or
xor
roll
pop
jns
cltd
mov
push
adc
pop
and
sbb
add
frstor
sub
xchg
clc
sub
mov
dec
jp
jbe
aam
lahf
pop
fildl
xor
daa
push
xor
push
jbe
mov
and
pop
out
imul
jl
inc
xchg
imul
sub
divb
cmpsb
push
decl
add
cmp
sbb
cmp
sbb
mov
mov
int
ja,pn
lcall
stos
xor
pop
out
mov
push
xor
mov
mov
xlat
sarb
sti
lea
imul
jne
sarl
sub
jae
inc
pop
ja
adc
gs
ljmp
jns
lret
sub
jns
pusha
outsl
shl
nop
xchg
mov
xchg
xchg
sbb
idivl
jl
mov
dec
dec
pop
mov
iret
nop
xchg
jae
or
pop
pop
cld
xchg
fidivrl
aas
xchg
pop
addr16
scas
leave
hlt
pop
cmpsl
fisttpll
in
lock
cmc
jge
pop
pop
sti
ljmp
sbb
jno
test
pop
pusha
mov
adc
and
mov
adc
stc
mov
mov
xchg
sub
out
xchg
popa
xorb
mov
push
inc
and
mov
ret
in
mov
loope
pop
dec
roll
popa
jle
lret
pop
xchg
and
push
test
aad
fcmovu
icebp
fcmovnu
inc
fnstcw
outsb
xchg
dec
cmc
cmp
jb
rcrb
fucomp
enter
mov
mov
rcl
sbb
cmp
aad
sahf
fbstp
xchg
mov
mov
adc
stos
aas
mov
xchg
dec
ret
xor
cmp
dec
xchg
add
fcmovb
xor
out
vfnmsubpd
jns
cli
adcb
sahf
xchg
cmp
rclb
ds
cmp
xchg
pop
movsl
jge
movsl
in
addb
jg
aas
int3
adc
pop
inc
fwait
push
mov
sub
xchg
out
ret
jbe
cmc
sub
xor
jg
mov
pop
sbb
adc
mov
push
inc
jbe
shrl
mov
pushf
arpl
sub
sub
fcoms
testb
clc
cmp
aad
mov
fdivr
divb
sti
scas
jne
test
or
pop
jl
cltd
cmp
cmpsl
loop
pop
xchg
nop
jno
push
pop
and
imul
sbb
mov
sub
aad
out
pop
sti
jne
mov
cmp
inc
pop
add
aaa
pop
ljmp
lea
outsb
push
in
mov
dec
jp
imul
jmp
ret
push
cmp
rolb
in
or
std
insb
pop
dec
jg
mov
cmp
push
mov
psadbw
rcrb
imul
aaa
repz
fs
fidivs
ret
das
inc
out
scas
cmp
push
lea
add
sub
mov
jg
inc
imul
push
jns
jne
popf
stos
in
lock
add
or
lea
adc
xchg
cmc
mov
mov
jl
cmpb
fisttps
imul
push
or
jle
icebp
jnp
sub
sbb
rcl
pop
pop
or
jmp
aaa
neg
mov
stos
jo
dec
xchg
push
jne
sbb
mov
xor
and
sub
scas
mov
xor
cwtl
dec
add
cmp
inc
xchg
jecxz
push
jmp
ljmp
rol
mov
lock
ret
das
add
popa
sbb
addr16
in
out
and
adc
jno
gs
pop
xchg
mov
dec
cmp
mov
flds
es
dec
popf
sbb
fstps
xchg
mov
loope
mov
add
push
popa
cmpsb
dec
stos
cmc
push
mov
inc
mov
adc
push
or
cld
xchg
pop
mov
mov
lret
adc
cmp
pop
pop
addb
out
xchg
mov
cmp
fimull
sbb
mov
mov
ja
jo
mov
das
mov
push
ds
addr16
mov
mov
pop
cli
mov
outsl
mov
fstpt
cmpsl
adc
pusha
ljmp
lcall
stos
xchg
rol
and
push
mov
mov
jnp
test
and
imul
jne
sbb
movsl
rcrb
jge
dec
sahf
test
iret
rolb
cmp
loope
mov
fildl
into
and
scas
sbb
mov
cmpsl
sbb
arpl
repz
mov
adc
cmp
pop
hlt
lods
cmc
cmp
mov
jmp
stos
mov
shl
out
xorl
ss
aad
inc
push
ss
sub
adc
xchg
std
movsb
popf
test
scas
xchg
jno
scas
scas
pop
jne
lods
inc
sub
pop
xchg
pop
lahf
inc
fsubrs
stos
movsb
jmp
mov
cmc
aam
pushf
lds
xchg
mov
mov
mov
loope
pop
ret
pop
arpl
mov
xchg
enter
add
lock
enter
push
daa
sbb
mov
cmp
fnstcw
push
adc
out
cmp
xchg
dec
dec
push
mov
mov
out
in
imul
cmc
push
mov
ja
add
push
pop
out
lret
mov
jno
int3
mov
xchg
and
pop
lahf
aad
cmpsb
nop
ja
lock
xchg
pop
adc
xchg
sub
xor
and
lret
and
fwait
push
loop
sub
jmp
mov
push
or
sbb
jns
scas
arpl
xchg
test
test
add
std
inc
aas
test
test
dec
pop
loopne
psubsw
push
mov
aam
adc
dec
das
sub
pushf
push
fisubs
shll
dec
xor
push
adc
int
inc
jmp
js
inc
call
jecxz
dec
and
ret
sbb
mov
xor
sbb
inc
mov
xor
push
sbb
movsl
jne
or
cmc
lds
hlt
test
aad
jnp
xor
dec
jle
ret
movsl
popa
add
imul
fadd
decb
ret
out
or
dec
dec
push
inc
cli
mov
dec
int3
pop
int
sub
sahf
mov
xchg
pop
mov
jo
push
xchg
lods
pop
bound
dec
cmc
leave
dec
mov
ret
mov
pop
jae
fld
pop
pop
pushf
imul
xchg
loop
lods
xchg
aad
sbb
inc
dec
es
cmpsb
sbb
cltd
out
and
cltd
inc
cltd
jmp
push
push
inc
jb
mov
cmp
test
ret
pop
lahf
pop
push
or
adc
pop
out
lcall
xor
fildll
aas
push
sbb
leave
xchg
imul
stos
jae
mov
pop
scas
sub
fs
and
outsb
bound
xor
push
hlt
imul
mov
nop
clc
adc
dec
aad
jne
gs
push
movsb
stc
loop
adc
ss
out
xchg
fisubrl
sti
adc
std
xor
mov
fidivl
outsl
mov
add
pop
cltd
jae
shll
fstl
add
rcl
fdivs
ljmp
test
movsl
pop
lods
int3
jge
or
xlat
stc
fst
imul
aad
push
sub
xor
inc
dec
movsb
dec
rcrb
mov
mov
ret
cmc
adc
push
pop
jle
enter
sbb
lret
xor
push
sub
fdivl
sbb
repnz
scas
pop
xor
ljmp
dec
or
into
rcll
jo
out
push
inc
mov
xor
cltd
jo
or
sub
jmp
inc
ds
sub
lods
mov
gs
inc
inc
fistpl
add
dec
mov
push
orl
jne
fwait
das
in
or
sub
leave
testb
in
fnstcw
loope
jnp
jp
dec
and
sub
mov
insl
loop
inc
xor
js
int
push
and
push
clc
les
dec
stc
popf
jl
faddl
dec
mov
jge
mov
clc
jl
call
xchg
jmp
jbe
pop
stos
call
and
inc
stc
imul
shrb
ror
cmpsb
sub
adc
jbe
or
mov
cmp
push
cmpsb
call
scas
jne
cmp
pop
mov
jp
sbb
sbb
mov
dec
add
jno
mov
xchg
incw
dec
cmpsl
mov
pop
ljmp
imul
sti
mov
and
jo
add
xchg
orl
adc
lea
in
jbe
xor
hlt
xchg
mov
cmpsb
cs
shl
mov
aam
mov
pushf
test
lods
mov
gs
daa
xor
adc
add
sub
scas
in
push
cmp
and
mov
outsb
cwtl
sbb
mov
xor
cmp
inc
test
aas
fstpl
cli
std
push
jg
lds
outsb
lds
into
popa
mov
mov
test
jge
ret
aam
es
pop
and
or
mov
sbb
inc
je
cmp
aad
aam
adc
std
shl
lods
nop
in
mov
cmp
lea
sub
insb
xor
dec
aam
sbb
and
add
or
ljmp
xchg
mov
push
and
jle
jbe
not
cmp
outsb
scas
iret
js
out
cmp
sub
mov
adc
mov
aad
sub
loop
divb
pop
sbb
outsl
add
repnz
mov
dec
test
xchg
mov
popf
ss
popa
mov
fcomi
sub
mov
lret
jecxz
xchg
push
xor
adc
je
ja
call
cmpsl
mov
pusha
sub
and
test
inc
pop
xchg
dec
add
in
fcompp
aad
cmp
mov
fwait
aam
push
ds
cmp
mov
addr16
cmp
xor
mov
stos
cmp
les
pop
sbb
adc
dec
shr
push
jl
lods
mov
sub
inc
mov
xor
mov
movsl
imulb
xor
leave
js
daa
xchg
pop
adc
negl
popf
or
jp
mov
popf
xor
push
or
xchg
mov
push
fildl
mov
pop
dec
pop
or
arpl
ret
lods
mov
cmpsb
add
aas
out
sti
push
cltd
out
sar
fsubl
aas
mov
ror
lea
repz
cmpsl
loopne
sub
dec
ficomps
sar
xor
push
inc
pusha
lahf
mov
leave
push
xchg
pop
xchg
lret
sbb
inc
jmp
push
mov
sub
and
cmc
push
mov
daa
ret
add
adc
in
popf
int3
sbb
mov
and
cmpsl
mov
fwait
add
insb
pop
sub
jmp
rcrl
xor
cmp
mov
push
ror
out
push
push
notb
test
inc
arpl
xor
xchg
push
pushf
mov
xchg
add
cmp
adc
popf
adc
adc
nop
mov
xor
stos
cmp
mov
xor
inc
jbe
negl
adc
add
rcr
dec
aaa
ret
add
test
xchg
push
adc
push
mov
fwait
sti
xchg
mov
xor
in
mov
dec
pushf
xchg
dec
repnz
icebp
ja
mov
mov
pop
mov
fimull
or
in
stos
or
cmp
cmp
sbb
xchg
sbb
push
pop
popf
lahf
cmc
push
mov
cmp
push
dec
aaa
fbstp
push
xchg
stc
fld
jno
push
es
lcall
fdivrs
in
imul
mov
mov
cmc
enter
sub
arpl
inc
adc
jns
jecxz
adc
cmp
insl
mov
push
je
out
jg
pushf
pop
call
xchg
fldenv
cli
cmp
mov
inc
mov
loope
scas
sbb
repnz
loope
loop
mov
test
pop
aas
call
fsubs
push
and
sbb
rcll
subb
mov
mov
int
test
clc
insl
outsl
jl
jle
js
mov
push
mov
xor
subl
cmp
or
pusha
dec
xcrypt-cfb
cmpsl
test
leave
inc
dec
test
ret
cld
and
and
addr16
inc
testb
fs
adc
pusha
mov
jl
andl
sub
xchg
ljmp
gs
shr
mov
lea
sahf
daa
push
mov
test
xchg
icebp
sbb
fistps
hlt
ss
jg
test
shlb
adc
roll
arpl
pop
out
xor
inc
mov
and
aas
loop
sbb
jnp
int
pushw
imul
xchg
jl
xor
push
outsl
push
int3
push
dec
xchg
test
jl
pop
mov
test
repnz
orb
xor
pop
lahf
sbb
lret
or
xchg
xor
fldenv
inc
in
inc
cmp
jne
je
xor
loopne
mov
xchg
dec
mov
cmpsl
mov
add
fnstsw
fiadds
lret
stos
loop
mov
push
jo
sbb
sub
jns
push
jb
test
rolb
dec
mov
outsl
mov
sti
nop
js
popl
sbb
imul
cmp
pushf
lret
push
dec
movsl
in
in
push
pop
jle
push
pusha
add
cmp
je
pop
mov
adc
pop
std
mov
mov
imul
rolb
jecxz
sbb
sahf
push
iret
imul
or
scas
bound
cmp
out
mov
or
addr16
loope
pop
and
out
nop
sub
popf
xchg
xlat
lods
js
xchg
inc
sub
dec
push
push
enter
popa
rcl
nop
in
lahf
cmpsl
ret
mov
add
fldenv
movsb
pop
pop
mov
insb
jns
sub
and
out
inc
pop
movsl
dec
pop
pop
test
lahf
ret
enter
in
push
aaa
sbb
icebp
mov
into
cmp
adc
call
mov
insl
lds
fucomip
push
sbb
divb
rorl
lcall
sbb
xor
cmp
pop
loopne
test
pop
mov
out
push
mov
out
push
fiaddl
lds
ss
jle
paddw
sbb
sbb
cwtl
xchg
jb
clc
loope
inc
dec
in
or
inc
ss
out
pop
inc
sbb
pop
stos
imulb
sti
lret
shll
adc
adc
ret
pop
jns
xchg
jle
fmulp
jbe
xchg
in
aas
je
rol
xchg
cwtl
jg
push
sbb
leave
negb
pop
stos
adc
pop
adc
ss
test
js
push
aas
out
repz
ror
inc
xor
imul
push
es
sub
gs
jo
or
addr16
sub
cwtl
pushf
in
mov
push
mov
insb
pushf
lock
mov
fsub
lret
js
sarb
inc
inc
mov
ret
xor
mull
addr16
rcl
push
dec
xor
imul
jb
lahf
std
bound
ficoms
cmp
pop
sub
je
mov
fstp
jnp
fisubrs
ja
out
push
adcl
rorl
loopne
rcrl
stos
fst
or
jg
shlb
arpl
or
scas
lea
add
xchg
movsl
push
into
movsl
push
rcll
aad
nop
inc
jo
ficompl
iret
ljmp
scas
test
mov
and
jecxz
inc
int
je
add
in
lahf
add
mov
inc
imul
ds
sbb
test
sti
add
cmp
dec
lahf
cs
push
lahf
mov
loopne
xchg
hlt
into
jae
lea
data16
addr16
pop
jmp
sbb
pop
outsl
mov
jle
sbb
and
cmp
test
fdivrl
mov
inc
mov
test
mov
mov
mov
adc
xor
movl
xor
cmp
movsl
out
or
iret
sub
push
inc
sub
mov
lret
rcr
pop
clc
pusha
fimuls
int3
inc
sub
cltd
xor
sbb
push
out
ficompl
mov
out
lods
stos
dec
cmp
jne
es
sub
mov
jns
imulb
sub
or
cltd
jae
cmc
jo
lds
sbb
cltd
test
fnstcw
hlt
insl
hlt
mov
in
cs
mov
and
imul
mov
jp
das
sub
xchg
cmp
or
adc
jnp
cmpsl
sahf
in
out
push
mov
jno
jo
xor
jnp
mov
out
mov
ret
pop
inc
in
cmpsl
mov
jle
jno
dec
jge
hlt
sub
mov
fadd
adc
shrb
out
je
loop
sbb
pop
mov
sahf
inc
sub
gs
imul
sub
or
mov
pusha
pop
mov
push
or
mov
xchg
sub
mov
shrb
ror
inc
inc
std
xlat
dec
xchg
into
dec
pop
jge
jnp
gs
jno
and
lea
ljmp
inc
mov
and
setnp
sub
lcall
cmpb
xchg
add
aad
pop
lahf
sub
movsb
fnstcw
pop
dec
xlat
movsb
sar
out
adc
sub
in
adc
add
xchg
push
pop
push
jne
mov
push
mov
and
sbb
sbb
pop
adc
jno
cmp
dec
push
lcall
in
int3
scas
sub
cmp
int
repz
subb
data16
sbb
mov
out
push
aaa
mov
or
incb
inc
cmp
insb
fdivrl
jmp
pop
jae
mov
test
stc
lods
push
fildll
jle
cltd
ret
shrl
stos
int
pop
addr16
inc
fwait
rcrb
inc
idiv
sub
dec
add
out
adc
scas
aaa
jae
ds
clc
cmpsl
stos
pop
popl
test
dec
mov
xchg
jmp
push
fistl
add
test
sbb
dec
xchg
aaa
dec
in
mov
jbe
pop
icebp
prefetch
push
rorl
out
jns
sahf
jmp
jae
shrl
andb
ljmp
fs
fbstp
xor
stos
inc
movsl
call
mov
jne
dec
sbb
mov
int3
jb
or
cmc
inc
sub
imul
jo
out
nop
mov
pop
jmp
addr16
inc
jmp
jno
test
in
jno
mov
ja
fwait
adc
flds
add
fwait
rorl
adc
pop
inc
mov
sarl
sti
xor
ja
sub
jne
inc
push
js
movsb
dec
std
push
scas
js
push
add
aam
ljmp
push
ja
mov
cmp
test
shlb
push
aas
lea
fnstcw
or
jl
pop
and
js
scas
mov
aas
jl
cli
mov
dec
pushf
out
iret
push
stos
gs
test
imul
hlt
dec
and
inc
mov
clc
mov
mov
xchg
outsb
imul
sub
test
cmp
jbe
lods
fsub
mov
xor
or
rorb
sbb
add
scas
into
iret
insl
repz
mov
push
cs
daa
and
add
call
outsl
iret
rolb
xchg
xor
imul
push
scas
nop
fstpt
xor
dec
into
inc
stc
mull
dec
push
add
cmc
sub
adc
int3
cmp
dec
test
fstp
fbld
sahf
jae
and
je
orl
sub
jge
pop
add
rcl
fwait
pop
xchg
xor
inc
sub
rcrb
aad
arpl
mov
mov
jb
hlt
daa
mov
pop
inc
and
movsl
in
ret
ret
inc
or
push
and
jo
cld
sar
rcrb
cltd
mov
add
sub
fisubs
mov
cwtl
xor
imul
std
int
mov
jmp
sub
enter
pop
std
xchg
pop
decl
adc
repz
pushf
mov
jecxz
sbbb
insl
mov
xor
dec
jno
insb
in
mov
nop
jle
rcll
push
out
and
xchg
out
or
sbb
cmp
dec
dec
loop
push
or
stos
xor
mov
enter
mov
mov
dec
inc
mov
scas
cmp
cs
and
sbb
push
jno
xchg
stc
mov
push
bound
shrl
clc
fcoms
cwtl
jno
push
sbb
cmp
fiadds
scas
out
and
xchg
mov
cs
sbb
dec
mov
fimuls
jb
in
jne
adc
enter
mov
mov
insb
mov
arpl
pop
cli
loop
jle
xor
lret
lret
push
jecxz
test
sub
or
imul
je
xor
jmp
lcall
mov
sub
popa
fildl
in
sub
and
mov
aad
rcrb
jecxz
inc
movsl
repz
arpl
push
test
cmp
notb
pusha
fcoml
outsl
jle
add
cltd
adc
push
sbb
shrl
jo
adcb
xlat
pop
rorl
call
mov
sahf
jge
push
jg
inc
adc
mov
mov
loop
cmp
and
in
adc
push
sahf
mov
popf
ljmp
sub
fisubrl
push
push
or
sbb
pop
mov
adc
daa
rcrl
lock
cmp
stc
cmp
xor
pop
mov
imul
popa
test
cmp
sbbl
loope
std
xor
xor
fwait
push
rol
jb
test
cld
push
lds
and
mov
or
mov
loope
lret
in
test
xor
stos
mov
or
cmpsb
mov
mov
xchg
pop
out
mov
pop
pop
out
cmp
pop
outsl
and
or
fcmove
jne
outsb
cmp
cwtl
cmc
popa
jecxz
pop
cli
cmp
add
sahf
fdivrs
sbb
ss
out
sbb
mov
fdivl
sbb
adc
add
pop
imul
adc
add
shrl
push
std
push
inc
push
mov
in
pop
add
jge
or
or
cmp
add
testb
sub
pop
mov
pusha
into
inc
push
pop
enter
and
mov
outsb
mov
into
xor
arpl
lahf
popf
jmp
pusha
dec
movsb
sub
movsl
outsl
add
dec
cmc
jl
push
sbb
test
dec
cmp
push
iret
cmp
fwait
xor
adc
aas
cmp
cld
popa
call
push
cmp
das
or
sub
jge
push
adc
nop
mov
mov
les
into
int3
test
mov
nop
xchg
stos
adc
push
dec
mov
ljmp
or
dec
jbe
xor
and
cwtl
imul
pop
sbb
cmp
lahf
add
sbb
cmpsb
test
push
addb
pop
xor
ljmp
sbb
add
lret
add
test
cltd
call
push
jo
sbb
adc
cmc
pop
adc
inc
mov
imul
popf
scas
adc
rolb
or
cwtl
push
mov
ljmp
push
adc
into
aam
ja
sti
out
dec
scas
adcb
jns
cmpsb
push
icebp
and
add
push
sbb
lcall
or
cmp
clc
and
les
mov
pop
cmp
mov
clc
cmp
xlat
popf
cmovs
popa
aaa
jb
cld
cld
std
mov
dec
adc
movsb
push
test
cmp
add
imul
in
sub
scas
jne
push
int
arpl
inc
mov
and
nop
test
add
mov
xor
sbb
xchg
stc
mov
and
xor
xor
xor
xchg
or
mov
mov
mov
test
lret
mov
xor
repz
push
mov
insl
dec
aam
or
outsl
xor
lds
fsubl
cmpsl
and
mov
rolb
cmpsl
xor
jbe
adc
in
mov
test
push
out
out
push
inc
cmc
ljmp
mov
dec
pop
mov
cmpsb
lock
push
xor
fwait
in
xor
push
cwtl
fstpt
popf
xor
cltd
lahf
mov
imul
lret
pop
pusha
ljmp
push
insl
cld
or
push
cmp
das
and
pop
movsb
jmp
imul
sbb
rcrl
inc
inc
xchg
mov
push
mov
cwtl
repz
sub
fdivrs
sahf
pop
lock
jns
insb
mov
or
iret
insb
fnstsw
popa
or
adc
insl
fwait
inc
cli
xchg
cmp
sub
lods
les
sbbl
push
pop
test
inc
movsb
adc
pop
jbe
adc
sbbl
lahf
lcall
fcoml
and
mov
mov
mov
scas
rorb
ds
dec
xor
mov
lea
testb
sbb
xchg
ret
stc
out
popf
jbe
mov
jecxz
rolb
xchg
pop
pop
lea
add
jp
movsl
mov
or
es
jl
xchg
push
mov
xchg
push
arpl
in
outsl
inc
ljmp
into
push
mov
imul
dec
pop
lret
cli
and
into
lcall
pushw
pushf
adc
rclb
xchg
addb
nop
xor
and
ja
ljmp
negb
test
inc
jb
dec
xor
inc
rolb
int
xchg
hlt
inc
push
rcrl
movsl
les
aas
push
dec
cli
rcrl
mov
jnp
ds
jo
adc
imul
leave
mull
or
jg
push
jbe
jbe
sti
inc
push
mov
loopne
ret
pop
pop
test
mov
mov
jo
jb
movsb
xchg
test
shrb
adc
jae
cmp
ds
aam
sbb
aaa
and
mov
test
jmp
stos
outsl
mov
idiv
jmp
cmp
jl
sub
adc
dec
cli
mov
fnsave
es
dec
lock
repnz
lods
adc
and
mov
sub
xchg
jnp
js
imul
adc
push
repz
xchg
jnp
cmpsb
loope
test
xchg
sub
push
pop
pop
bound
push
cmp
fisubrs
push
pusha
ljmp
movb
inc
cltd
ljmp
xor
mov
cmp
push
push
out
xor
dec
insb
add
adc
pop
mov
sbb
mov
and
pxor
sub
test
sub
xor
sbb
ja
mov
popa
xchg
push
and
xchg
and
into
cmovg
outsl
pushf
repnz
js
stos
or
adc
mov
in
ja
pop
push
popa
jl
fcompl
sbbb
mov
lcall
orb
icebp
push
jns
les
cmpsb
inc
lret
iret
adc
ja
adc
mov
mov
adc
sub
push
fisubl
cs
xchg
mov
dec
push
cld
stos
pop
ret
sarl
shl
mov
gs
inc
into
jmp
shr
sub
ljmp
mov
sub
fwait
ja
enter
loopne
out
mov
xchg
jge
pop
jae
ss
shll
sbb
data16
hlt
data16
rcll
mov
xlat
push
sbb
push
cwtl
outsb
inc
notl
cli
xchg
pop
adc
cmpb
inc
mov
jns
add
jbe
dec
jl
cmp
movsl
loope
les
pop
clc
or
lock
mov
xor
mov
xchg
pop
jle
xchg
mov
push
pop
push
cmp
enter
jl
iret
unpcklps
pushf
push
jnp
gs
ja
divb
sbb
iret
cwtl
sbb
in
test
rcrl
xchg
jbe
sub
xchg
push
push
and
pushl
or
ds
cmp
fs
pop
jo
cmp
repz
fcomi
mov
ljmp
mov
add
pop
sbb
stos
push
add
inc
push
out
or
mov
and
mov
popa
jle
push
adc
sub
inc
xlat
notb
enter
mov
pop
and
jns
scas
daa
jmp
shll
xchg
pop
hlt
or
popa
push
cmp
es
and
dec
cmp
inc
push
dec
fstl
arpl
jg
js
mov
or
jl
and
lock
fdivr
cmp
mov
test
out
movsl
dec
js
or
jne
scas
adc
scas
push
fneni(8087
loop
mov
leave
aas
add
or
mov
cmp
add
mov
inc
jns
mov
push
das
or
fstl
jnp
pushf
popa
xlat
xor
xor
mov
imul
xchg
cmp
jp
mov
pusha
enter
ficoml
repnz
and
push
test
inc
add
out
mov
setl
cld
imul
data16
and
cmc
sub
sub
insb
inc
dec
sbb
test
out
sub
movsb
lds
sbb
inc
bound
mov
jnp
mov
cmp
sbbl
sahf
mov
cmp
cmp
das
stos
test
nop
sub
insb
sub
int3
add
jge
aas
inc
lea
mov
test
mov
test
stos
inc
aad
sub
aam
push
leave
dec
dec
and
in
aam
cmp
pop
xchg
in
enter
psubusw
cli
xor
mov
popa
adc
rolb
aas
push
pop
cmp
stos
push
xor
adcl
cmpsl
cmpsb
jl
loope
rorb
lcall
and
dec
dec
mov
add
enter
sbb
test
jle
push
or
pop
cmpsl
xor
fdivl
push
mov
mov
mov
stos
lock
arpl
pusha
testl
xchg
cli
data16
jo
dec
jge
mov
inc
lahf
push
lret
cld
adc
jo
outsb
adc
addr16
je
push
cwtl
rolb
jmp
test
xor
clc
nopl
add
mov
movsb
rol
aad
stos
fidivs
enter
inc
andb
push
cwtl
and
xchg
ds
inc
lods
lret
data16
rcrl
inc
lea
bound
int3
inc
aam
sub
add
pop
and
pop
xor
iret
jnp
call
cmpl
add
add
in
push
test
loopne
sbb
leave
push
adc
imul
test
fadd
mov
iret
movsb
pop
call
out
push
mov
and
shll
lock
and
push
inc
mov
or
out
int3
loopne
clc
and
nop
xor
add
ret
xorl
rolb
imul
pop
mov
sub
mov
push
in
dec
adc
lods
sti
sbb
std
add
mov
xor
negb
dec
ljmp
sbb
pusha
setp
aad
and
psubusb
push
push
inc
jbe
test
and
xchg
jge
inc
fiaddl
aam
lea
inc
pop
in
clc
movsl
push
inc
dec
inc
std
bound
jo
js
ret
loopne
jns
in
sbb
mov
mov
test
repz
cmp
aad
aam
aaa
adc
aaa
xchg
movsb
lock
shr
sub
xchg
movsb
rcrl
push
push
mov
push
and
and
or
mov
cmp
shlb
cmp
jecxz
stos
sub
into
mov
insb
stos
movsb
dec
iret
add
sub
movsb
jmp
sti
pop
lods
mov
and
ror
loopne
leave
idivb
jns
add
mov
dec
fimuls
mov
scas
inc
addr16
iret
insl
sti
mov
lock
jecxz
jle
or
in
mov
sahf
jns
ds
jb
add
xchg
pop
jle
mov
hlt
cli
jge
mov
mov
sub
push
sub
pushf
daa
add
mov
xchg
add
mov
test
add
dec
xchg
xor
shl
add
sahf
bound
jne
and
sbb
lods
inc
out
jo
shll
push
mov
dec
stos
cmp
mov
and
add
loopne
and
mov
xchg
out
mov
xchg
xchg
lods
xchg
pop
sbb
lahf
push
outsl
sbb
xchg
push
cmp
mov
jnp
inc
fstpl
and
dec
adc
popf
movsb
pop
lahf
icebp
aas
ficoms
cmpsl
push
leave
shlb
mov
xor
imul
imul
movsl
shll
clc
mulb
mov
mov
daa
pop
fldt
into
jge
in
aam
pop
mov
add
pop
call
pop
orl
mov
movsl
xchg
xchg
mov
dec
lods
cltd
loopne
xor
loope
xor
mov
loope
xchg
addb
out
cmp
cmpsl
push
sub
aaa
daa
sbb
inc
repnz
loope
dec
cmp
sub
and
in
movsl
push
out
aaa
fiadds
mov
je
jecxz
or
insb
adc
out
jo
xor
iret
adc
jmp
into
fnstenv
pop
outsl
movb
inc
pop
and
das
adc
stos
js
testb
inc
mov
shl
pop
and
push
and
push
mov
clc
jno
jb
loop
lea
int
pop
sahf
aad
mov
ret
cmp
pop
lods
add
add
sti
jg
mull
rcll
mov
inc
stos
sbbl
fs
and
mov
mov
imul
nop
inc
sub
pusha
int3
jmp
pop
cmp
in
js
mov
push
adcl
inc
mov
xchg
mov
lcall
jp
sti
rcl
adc
inc
repnz
fdivs
pop
or
sbb
mov
ficomps
lods
mov
push
sbb
cmp
lock
enter
sbb
in
ljmp
aam
stos
scas
mov
push
cmc
xor
xchg
xchg
popa
mov
int3
jge
fsts
push
push
in
add
andl
inc
fiadds
fsub
push
mov
fwait
mov
movsl
ficoml
add
enter
test
les
sub
aam
ret
inc
out
jae
std
loop
test
cmp
mov
mov
shrb
sarb
mov
cmpsb
das
pop
mov
xlat
mov
fidivrl
imul
arpl
fists
stc
insb
xchg
dec
cmp
subl
pop
ds
divb
scas
andl
inc
jle
jge
mov
dec
pop
cmpb
pusha
mov
mov
int3
shrl
push
fwait
pop
lea
adc
aas
sbb
jno
pop
outsb
in
aaa
jbe
sar
or
fsubrp
out
jl
loope
dec
out
mov
test
stos
mov
jle
cs
outsb
adc
or
xchg
and
push
lret
imul
adc
mov
leave
into
ret
daa
dec
js
cmp
cli
das
adc
paddsb
js
dec
js
mov
cmc
in
dec
repz
scas
adc
or
pop
xchg
popf
nop
mov
jno
jecxz
and
mov
adc
icebp
fcomps
rcll
mov
jns
out
mov
jne
push
lods
js
mov
aam
jb
cmp
ds
pop
cmova
dec
pop
daa
sahf
rcl
and
jne
andb
jb
and
and
ret
add
mov
orb
test
cmp
cmp
sarb
pop
sub
decb
js
imul
imul
sub
sbb
in
mov
cmp
sbb
out
aad
inc
out
jne
sub
test
stc
insl
and
call
js
mov
loop
mov
arpl
lcall
dec
mov
push
xlat
out
add
nop
sbb
mov
pop
aam
xor
push
jo
jo
inc
mov
fs
sbb
and
sbb
inc
sbb
cld
into
loope
adc
into
call
cmp
ja
sahf
fistl
imul
sub
jnp
xchg
and
jae
push
jae
cmp
or
lock
pusha
xchg
mov
pop
jmp
mov
pop
push
cmp
sub
dec
adc
jb
imul
pop
clc
enter
xchg
pop
cmpsb
aas
sbb
dec
add
push
adc
push
cmp
gs
xlat
loop
xchg
lahf
popa
int
jg
adc
loope
sbb
dec
jp
cli
int
sbb
and
fnstsw
mov
insl
lahf
lret
ja
mov
xchg
jo
fmuls
mov
popa
cmpsb
test
push
dec
adc
mov
xor
or
scas
mov
cli
xchg
mov
js
mov
pop
lahf
fcmovb
inc
push
adc
cmp
cmp
and
inc
data16
insl
jnp
int
fildll
add
xor
in
mov
cmpl
sbb
mov
lret
leave
mov
js
xchg
cltd
or
add
lods
cld
xor
mov
jl
fisubl
xchg
add
add
sbb
cmp
dec
and
add
stc
repz
dec
push
fsts
mov
lahf
xorl
xchg
pop
ficoml
sub
or
xlat
decl
dec
xor
mov
mov
xor
push
pop
sub
dec
jmp
lock
daa
mov
xor
push
mov
stc
mov
sub
sub
test
cmp
jb
adc
test
jl
pop
pop
adc
cmpsl
popf
dec
lahf
and
or
test
pop
mov
and
stc
es
nop
daa
pop
sub
push
sbb
mov
sub
pop
push
pop
push
sahf
mov
pop
test
rclb
cmc
js
jecxz
push
outsb
daa
divl
xbegin
ret
scas
add
pop
cmp
insl
popf
int
xor
mov
and
out
inc
sarb
sbb
test
xchg
pop
push
dec
pop
sti
test
call
add
mov
imul
cmp
push
dec
in
je
addl
outsl
jne
lahf
lret
xor
leave
fwait
insb
clc
pop
inc
ret
mov
jg
cltd
fnsave
lahf
push
iretw
mov
stos
mov
jne
push
pop
jp
rorb
add
decb
xchg
pusha
cmp
in
lods
sbb
mov
mov
pop
push
mov
push
into
jecxz
mov
dec
mov
and
adc
mov
pop
cmpsb
imul
mov
xchg
repnz
and
sbb
test
fsubs
dec
push
xchg
mov
rorb
dec
stc
mov
mov
lret
imul
sub
roll
scas
ret
clc
loop
das
std
xchg
add
jl
push
es
xchg
jmp
lock
mov
mov
fs
loop
inc
fcompl
xor
sahf
ja
popa
sub
add
fwait
movsb
pop
add
xchg
loopne
scas
or
xchg
repz
mov
subl
and
jnp
adc
daa
xor
sub
fdivl
jecxz
lcall
in
aaa
adc
addr16
xor
sti
std
jl
pop
pop
fildll
push
cld
dec
test
popa
sub
stos
repz
loopne
inc
xchg
mov
daa
xchg
lret
fidivrs
shll
xchg
fcoms
push
xor
add
mov
xchg
popf
fisubl
mov
sub
sbbb
in
xchg
imul
daa
test
dec
mov
pop
dec
fimuls
icebp
lcall
sbb
fdiv
or
mov
fdivrs
je
and
mov
add
add
leave
xchg
xchg
pop
popa
pop
pop
int
daa
cmp
cmp
aam
dec
pop
mov
inc
adc
test
and
pop
xor
jg
mov
cmc
jge
loope
repnz
into
jne
fdivrl
cld
insl
sbb
adc
subl
out
xor
scas
sbb
js
or
pop
pushf
xchg
jb
mov
xchg
mov
dec
into
fiaddl
fidivrl
push
bound
jbe
xchg
or
repz
fsubr
add
add
sbb
fisubrl
add
xor
ja
or
jne
add
sub
push
jns
jle
sub
les
dec
pop
stc
into
push
mov
and
mov
sbb
xlat
mov
popf
into
loop
sub
mov
lahf
int
add
adc
scas
pop
in
shll
and
dec
pop
push
rcll
rol
mov
push
sbb
bound
mov
xchg
iret
andb
jp
in
in
mov
adc
xchg
lret
xchg
or
repnz
mov
insl
sub
mov
mov
mov
push
cmp
rorb
mov
test
in
inc
and
outsl
insl
pop
mov
cli
fdiv
push
sets
mov
and
push
sub
call
xor
sbb
mov
fwait
andl
lret
outsl
mov
dec
test
dec
lahf
test
cmp
push
insb
imul
add
iret
add
and
inc
leave
mov
xchg
push
mov
pop
push
lret
xchg
aas
mov
daa
cwtl
psubusb
mov
ljmp
sbb
aam
fldlg2
mov
insb
or
push
iret
mov
push
push
aaa
cld
adc
inc
jmp
add
and
test
and
lret
and
push
or
lods
dec
ljmp
xchg
lcall
sub
push
add
lock
je
stos
or
scas
mov
inc
push
inc
sbb
add
pop
test
inc
adc
mov
es
xor
add
aaa
mov
std
sub
xor
adc
sbb
pop
stc
sbb
xlat
sbb
inc
cwtl
lret
fcoml
xchg
adc
cmpsb
pop
push
loop
lcall
and
sub
push
dec
int3
mov
into
mov
mov
hlt
sar
enter
lods
add
fninit
lods
fildll
push
div
or
movsb
cmp
jo
cli
in
xchg
add
in
mov
jmp
pop
sti
cmp
clc
js
push
cld
test
sub
jp
and
mov
push
test
mov
jmp
mov
cmp
jp
iret
sbb
dec
idivl
inc
or
push
xchg
add
inc
subl
push
div
in
push
clc
scas
jne
gs
jo
lret
iret
pop
push
push
cmp
int
aaa
jnp
jnp
mov
es
pop
push
push
in
cltd
fimull
faddl
mov
loopne
sub
aas
ljmp
inc
sti
stc
jne
mov
sbb
clc
lock
mov
sub
insb
xor
incl
cmp
loopne
int3
push
repnz
xchg
scas
decl
mov
mov
pop
lahf
cmp
negl
lock
mov
mov
xchg
test
mov
daa
add
pop
flds
jle
jg
xor
sub
into
push
je
adc
test
jl
sbb
and
cmp
repz
mov
jne
imul
pop
scas
jecxz
mov
jecxz
imul
test
xor
sub
mov
jns
mov
int
pop
out
push
cmpsb
cmp
loop
popa
movsl
enter
mov
mov
jmp
repz
cmpsl
xchg
push
xor
icebp
sti
cmc
xchg
insb
jecxz
or
push
negb
cmpsb
sub
rcr
outsl
dec
stc
jl
add
add
sbb
add
les
ja
stc
in
repnz
mov
push
les
scas
ds
xor
or
sahf
dec
lcall
dec
les
add
clc
scas
dec
xlat
mov
insl
add
xorl
fisubs
jnp
xor
sub
mov
cltd
je
aad
push
inc
lret
ja
sbb
stos
int
xor
jg
push
pop
xchg
jge
mov
jle
push
fildl
and
cmpsl
ret
or
sti
dec
cmpb
mov
add
enter
push
mov
mov
fs
inc
and
xchg
inc
adc
jp
arpl
mov
mov
dec
xchg
jb
sub
sbb
xchg
call
orl
push
dec
shrb
xchg
pop
xchg
sbb
fbld
test
hlt
bound
andb
iret
push
pop
loopne
movsb
jo
rorb
aaa
jl
mov
inc
and
jmp
mov
dec
cmp
xchg
push
aaa
scas
adc
cmp
int3
jge
or
inc
push
mov
add
orl
sbb
std
mov
shlb
xor
inc
fwait
in
pop
push
sbb
or
repnz
lock
sub
xchg
mov
lods
and
repnz
mov
mov
aam
jp
mov
fadds
pop
in
xchg
aad
push
scas
sub
lret
pushf
cmpsb
cmp
mov
mov
mov
in
int3
sahf
and
ds
popa
movl
and
imul
push
insl
cs
push
cmpsb
jbe
xchg
movsb
data16
sub
dec
push
out
xrelease
add
mov
aaa
scas
xchg
jbe
adc
ja
xor
aad
adc
cmc
cltd
inc
pop
cmp
cmpsl
dec
push
sub
test
pop
xchg
mov
mov
mov
data16
mov
dec
lcall
cmc
out
cmp
and
outsl
and
std
movsl
scas
push
jge
into
or
adc
or
mov
sbb
cmpsl
dec
dec
mov
lret
fdivs
gs
mov
xchg
mov
or
jg
int3
sub
xor
test
nop
jae
jl
push
mov
dec
sub
mov
jmp
inc
xchg
cwtl
mov
not
fs
pop
dec
outsb
or
xor
test
scas
in
lea
pusha
ja
in
mov
cwtl
fs
sbbb
inc
fdiv
lods
lods
pop
popf
mov
fadds
andl
mov
pop
notb
xor
ja
clc
into
sahf
aas
jo
add
inc
jo,pn
js
les
test
cmp
mov
cmp
mov
ljmp
dec
jnp
test
mov
sahf
std
add
imul
push
jge
inc
xor
aad
sti
repz
cli
rclb
sbb
dec
add
push
adc
mov
test
into
jo
test
add
jle
cmp
fdivrl
stos
outsl
mov
hlt
or
push
fiaddl
and
je
xorb
push
mov
add
lds
mov
outsl
xor
mov
jl
add
dec
xor
aad
sbb
jne
pushf
nop
rcr
xor
mov
push
movb
add
push
mov
iret
loope
pop
sub
mov
scas
adc
push
or
fidivs
pop
adc
xchg
retw
iret
shlb
scas
adc
push
int
lods
movl
shlb
dec
inc
inc
testl
cmp
mov
divb
and
jbe
ret
inc
into
popf
repz
xor
jo
in
leave
xor
idivl
call
xor
mov
or
cmp
outsl
dec
mov
sbb
adcl
add
in
cmc
xor
adc
mov
ret
push
add
aas
and
daa
pop
out
addr16
js
rcll
popa
cmpsl
xor
js
mov
sbb
jbe
stc
test
test
imul
xchg
aas
mov
addr16
inc
js
cltd
mov
loop
ljmp
into
mov
arpl
mov
sub
lds
pushf
jb
dec
pusha
faddl
jnp
inc
aaa
pushf
out
add
jne
inc
cwtl
inc
xchg
test
ja
pop
mov
loopne
mov
pop
push
mov
pusha
pop
dec
jecxz
xorb
loopne
into
gs
sbb
or
sub
or
lea
inc
sbb
cltd
xchg
jge
dec
fwait
add
aas
addr16
neg
jge
xor
lock
ret
xchg
mov
or
movsl
scas
dec
jmp
cmpsl
and
cmp
pushf
daa
fistl
mov
jne
mov
aad
push
dec
adc
pop
pop
sub
cmpsb
mov
lret
test
in
loopne
sub
push
dec
fiadds
jne
in
dec
mov
inc
mov
outsb
xor
lods
bound
mov
xchg
dec
fadd
sbb
adc
or
mov
pop
ja
xor
call
insl
sahf
and
jp
movl
inc
add
and
jnp
jecxz
xchg
int3
and
dec
aad
add
notl
jnp
test
push
jbe
jecxz
loop
bound
add
xor
push
mov
mov
mov
dec
mov
aad
roll
push
push
call
out
test
push
cs
or
mov
jge
and
jecxz
xor
mov
ffreep
and
scas
xchg
lcall
int
and
cmp
loop
fadds
mov
push
fucomp
pushl
xchg
or
dec
cld
fwait
out
repnz
mov
cltd
xchg
mov
fwait
push
sub
add
inc
pop
and
movsb
mov
int
mov
cmp
or
sbbl
dec
popf
pushf
js
fsubrs
repz
mov
pop
push
adc
xor
cli
sbb
lods
leave
mov
cmp
jmp
or
dec
mov
and
sub
or
sbb
daa
push
stos
or
and
or
daa
push
xchg
out
or
xor
xorb
push
xchg
mov
adc
adc
mov
mov
adc
mov
and
inc
fs
cmp
xchg
mov
loope
mov
pusha
mov
sarl
js
mov
cwtl
ficomps
imul
add
in
and
jno
cmp
mov
cmp
inc
push
int3
or
or
push
testl
xor
adc
cmp
f2xm1
cmp
mov
mov
loop
add
insl
xchg
mov
push
and
cwtl
jb
dec
repnz
dec
scas
inc
aad
mov
es
cmp
sbb
stos
or
stos
aam
fucomip
hlt
neg
push
gs
das
xor
mov
lret
xchg
xchg
in
jbe
mov
stos
rorl
mov
lea
dec
xchg
or
or
test
hlt
jg
mov
sbb
pop
pop
dec
xor
mov
jg
out
ja
jne
push
pop
jg
adc
nop
mov
jo
outsl
repnz
rcrb
in
das
jnp
or
push
cmc
sub
lret
aaa
in
hlt
pusha
orb
push
sub
aam
mov
pop
mov
pop
mov
jo
inc
add
add
aad
pop
es
mov
shl
movsl
cmp
xor
pop
scas
jne
fcomip
and
mov
add
mov
cmp
inc
inc
sub
repz
add
pop
pop
mov
je
stos
scas
in
rcl
mov
rorl
shll
xchg
scas
mov
mov
scas
hlt
minps
xor
push
add
and
imul
jge
jne
imul
mov
fcmovnbe
mov
cmpsl
mov
mov
outsl
scas
adc
jns
jl
orl
insl
arpl
out
rolb
and
push
pop
cmp
push
insb
jne
loopne
call
cmp
jae
shll
dec
test
fisubrs
xchg
test
inc
js
or
lds
jp
add
inc
nopl
cmp
and
jbe
mov
data16
pop
pop
shrb
sti
mov
or
mov
pop
lods
mov
add
mov
scas
pop
pop
scas
pushf
pushf
fimull
cwtl
add
mov
or
adcb
jmp
pop
mov
daa
sbb
aas
sahf
ljmp
enter
sbb
popf
std
cmpb
push
push
xchg
popa
test
lret
sub
test
clc
shll
in
rolb
je
pop
xchg
mov
jno
jo
imul
fbstp
pop
pop
inc
and
out
adc
push
xlat
add
push
dec
push
lds
push
or
lcall
jecxz
loope
scas
mov
vpaddsw
pop
aas
pop
out
lods
fbstp
push
dec
pop
pop
cmp
gs
sub
vpaddq
add
repnz
push
out
nop
xchg
ljmp
push
shlb
push
jne
sbb
andl
mov
jmp
inc
pop
mov
loop
lea
loope
sbb
loopne
mov
cmp
jbe
test
push
negb
push
mov
jbe
or
ret
or
cmc
orb
ret
fs
enter
gs
cwtl
pop
in
inc
jge
std
sub
inc
call
lret
das
mov
jg
jle
stc
xor
icebp
data16
loopne
xlat
adc
popa
sub
stos
fs
stos
negl
mov
sbb
das
pop
stos
jle
add
stc
jecxz
push
or
es
in
dec
mov
aad
shrb
jns
inc
test
jae
pop
mov
cld
mov
add
xchg
sbb
xor
jne
decl
push
fidivl
push
inc
in
jae
cli
pop
adc
dec
and
popf
sbb
cwtl
mov
hlt
pop
and
sub
or
add
loope
xor
gs
mov
push
out
jae
inc
loope
shrb
rorb
adc
sarb
imul
lret
inc
jo
fdivs
aad
mov
insl
imulb
push
push
in
xchg
xchg
gs
subb
fwait
cmp
xor
jae
mov
adc
fldl
out
cmp
es
dec
test
jbe
icebp
jno
rcr
pop
ds
divl
shrb
dec
imul
push
xchg
pop
mov
pop
pop
test
add
fldenv
test
dec
inc
sbb
lret
lods
mov
xor
mov
mov
cmp
fsubs
fnstsw
cld
sub
jo
inc
les
xor
negb
arpl
sbb
enter
pushf
iret
pushf
shll
cmpsl
push
adc
or
jo
xor
mov
xchg
fisubs
subl
pop
pushf
sbb
adc
or
and
aam
fldcw
lahf
push
pop
ja
push
das
push
push
xor
cltd
cmp
loop
mov
mov
jl
mov
fidivl
sti
clc
adc
mov
je
pop
cmpsl
adc
xchg
cmc
sbb
aam
sub
pop
cld
and
push
addr16
sub
and
scas
gs
xlat
push
xcrypt-cbc
cmpsl
push
sbb
daa
mov
mov
push
movsb
lcall
sub
adc
cwtl
lret
mov
loopne
push
jo
lods
and
out
notl
mov
iret
repz
push
push
incb
dec
and
in
and
test
lods
sbb
mov
stc
add
pop
mov
dec
inc
and
loop
sti
add
aaa
xchg
fstp
pop
sub
stos
dec
mov
out
test
pop
jl
loopne
and
cltd
ljmp
and
jecxz
hlt
scas
stos
popa
subl
call
pop
or
out
mov
pop
aas
jno
jns
cmpsl
scas
lea
mov
fisttpll
jl
sbb
fidivrl
les
stos
or
sbb
in
dec
cmp
enter
dec
leave
nop
xor
rcl
push
iret
adcl
adc
push
xor
stos
inc
out
orb
mov
hlt
fistl
mov
sbb
popa
gs
add
gs
jl
std
lock
xchg
mov
imul
dec
sti
dec
das
loopne
sub
fsub
add
ret
outsb
cmp
in
inc
xchg
xor
cmpsl
popf
push
in
mov
mov
repnz
sbb
scas
lcall
push
and
mov
ds
jo
in
pop
je
cmpsb
xor
test
mov
in
rcrl
sub
lcall
fbld
cmp
xchg
push
or
cmp
pushf
jbe
or
sbb
jno
inc
scas
daa
hlt
cmp
mov
jno
pop
les
xor
add
push
punpckhbw
push
sbb
test
imul
sub
mov
cltd
outsb
inc
and
movsl
mov
pop
mov
aad
icebp
cmpsl
andl
add
cs
aaa
and
jne
aaa
or
pusha
orl
sbb
repz
popa
dec
out
push
dec
mov
scas
repz
xchg
mov
test
in
lock
imul
nop
dec
enter
aas
xlat
push
testl
out
cs
pop
into
inc
cltd
jnp
testl
mov
pop
mov
or
insl
lahf
dec
sub
rcl
mov
xor
daa
lcall
int3
aaa
outsl
cmpsb
inc
xor
loop
int3
adc
clc
mov
mov
sub
ror
stos
jnp
push
dec
sbb
jl
dec
enter
out
out
pop
xor
aas
or
fsts
mov
stos
enter
imul
scas
sub
int
cmp
push
das
ss
mov
pop
sub
lahf
pop
ret
js
adc
out
sub
lea
dec
cwtl
add
add
cmp
outsl
pop
dec
addb
pmaxub
cmpsb
add
adc
out
cli
mov
xchg
xchg
lahf
sbb
mov
pop
sbbl
jne
jnp
arpl
adc
stos
mov
mov
mov
inc
mov
or
mov
jecxz
pop
popa
imul
inc
testl
cmp
test
pop
into
shll
xor
dec
daa
dec
loop
daa
loop
sbb
add
adc
repnz
out
test
cmp
mov
jb
xchg
and
jmp
cli
mov
das
sub
test
mov
aas
and
push
dec
inc
outsl
imul
cld
fcoms
jne
mov
push
ja
je
or
dec
jo
dec
nop
sbb
pop
outsl
mov
mov
mov
mov
push
mov
orl
pop
push
cli
and
dec
ret
and
je
pop
mov
push
leave
push
cs
ret
lods
add
sbb
ljmp
test
cmpsl
jp
out
jbe
jecxz
push
repz
mov
xchg
into
adc
inc
adc
mov
jg
repnz
xchg
mov
sbb
loop
jnp
sbb
push
and
addr16
dec
int3
ret
lcall
xor
mov
mov
xchg
and
inc
fwait
sahf
in
imul
mov
je
pop
lods
stc
lret
arpl
cld
outsl
mov
ficoms
mov
jge
pop
loopne
jp
xor
push
sbb
int3
xor
xlat
mov
scas
lret
leave
mov
movsb
cs
mov
das
lods
xor
mov
mov
les
push
push
mov
add
add
pop
sub
pop
dec
cwtl
or
fwait
xchg
jl
adc
jl
cmpsb
and
inc
adc
sub
fs
adc
xchg
ja
divl
daa
popa
mov
call
fcomps
xchg
cmpsb
fisubrs
mov
xchg
icebp
dec
mov
fcompl
imul
fldl
push
shl
test
push
inc
mov
xchg
imul
je
and
sub
inc
imul
pop
adc
call
in
aas
mov
iret
test
mov
fldt
jns
sti
lds
or
into
insb
or
adc
lret
adc
out
out
jo
outsb
lds
sub
lods
pop
mov
or
sub
sub
icebp
sbb
pusha
and
repnz
jmp
into
popf
into
int
decl
dec
mov
inc
adc
mov
mov
adc
clc
shl
insl
and
push
loope
sbb
xor
push
shll
xchg
rorl
inc
dec
cmp
cmp
lret
fistps
fwait
stos
sbb
pop
pop
out
xchg
pop
fsqrt
cwtl
in
add
cs
mov
test
xor
sbb
fcomps
push
xor
es
mov
xchg
adc
mov
test
sbb
scas
pop
inc
sbb
popa
xchg
push
test
std
push
xor
imul
and
scas
xchg
js
xchg
pop
jne
cli
mov
mov
dec
inc
cmpsb
repnz
xorl
jle
push
inc
movsb
mov
ja
cmpsl
std
xchg
jns
lods
orl
frstor
std
lea
or
add
jb
gs
xchg
popa
aaa
lea
xor
mov
ret
sub
mov
sub
lds
dec
inc
filds
jno
sbb
fsubrs
movl
and
mov
dec
xor
aam
sub
mov
adc
push
dec
or
xor
test
xor
stos
xor
mov
roll
mov
xor
js
pop
and
movsl
adc
aaa
in
arpl
xor
sub
clc
push
push
jb
cmp
pop
jnp
addr16
jnp
sbb
lret
imulb
shlb
jb
push
and
pop
cmp
ret
adc
fs
xchg
add
mov
add
xchg
insl
lds
test
fwait
shll
sbb
subl
dec
movsl
xchg
adc
mov
and
cmc
lahf
mov
sub
xor
inc
cmp
cmp
popf
int
leave
into
or
cli
dec
mov
pop
test
jp
sbb
pop
mov
mov
nop
pop
in
mov
push
fistpll
movsb
loopne
xchg
call
lcall
push
aad
lahf
inc
cmpb
hlt
mov
enter
add
dec
insb
and
addr16
add
cmpsb
movsb
lods
or
jecxz
lock
xchg
and
cwtl
scas
add
loope
push
dec
push
lods
repz
cmp
shlb
ja
pop
mov
fidivl
pop
or
sub
mov
cmp
adc
scas
or
pop
movsb
jecxz
push
push
sbb
adc
xchg
rcrl
imul
daa
lds
xor
mov
lods
outsl
pop
cltd
ret
mov
lret
inc
imul
jge
orb
imul
xor
jl
rcll
push
mov
aas
aaa
mov
rcll
popa
cs
fwait
aaa
pop
jecxz
push
mov
das
mov
cmc
push
adc
dec
add
mov
add
outsb
test
cmpsb
movsb
iret
packuswb
and
into
cmpsb
adc
lds
inc
dec
fs
ds
cltd
test
cld
mov
push
lods
mov
rolb
push
pop
mov
hlt
sub
inc
inc
fcmovnbe
mov
jmp
dec
lahf
test
xchg
pop
push
cmp
inc
sbb
mov
xchg
enter
icebp
adc
out
dec
hlt
dec
xor
ss
in
sub
pop
push
add
out
fists
mov
test
adc
ja
push
xor
pop
cmp
push
imulb
mov
jns
fucomip
pop
xchg
cltd
imul
ds
cmp
push
mov
dec
shrb
movsl
iret
arpl
sub
xchg
lds
cmc
inc
sub
lret
testb
xor
arpl
cld
push
jns
pop
cmpxchg
or
in
add
pop
add
shl
outsl
pop
and
mov
and
lods
mov
mov
cs
lcall
and
xchg
jg
sbb
lods
adc
repnz
sub
call
inc
xor
and
mov
lock
add
jns
xlat
inc
jnp
dec
push
and
or
mov
adc
movsl
inc
jp
jo
adc
or
mov
hlt
outsb
xchg
and
mov
sbb
cmpsb
fwait
shl
inc
or
add
cli
adc
in
push
mov
js
push
xor
mov
pusha
mov
add
lock
cltd
dec
movsb
adc
cwtl
pop
iret
jecxz
mov
add
fstpt
mov
fcoml
shr
outsb
aad
mov
sub
xchg
aas
shll
mov
mov
gs
ja
cwtl
sbb
leave
test
out
lcall
sbb
add
cmp
fsub
adc
jg
das
hlt
push
jnp
cs
jl
sub
jb
fcompl
xchg
pop
or
test
cmp
xor
adcl
imull
insb
add
and
pop
pop
cmp
cmp
sbb
insl
lds
hlt
pop
mov
movsl
inc
mov
and
mov
mov
shll
dec
or
mov
cmc
or
jl
xor
sub
and
push
aaa
jge
ret
push
jge
divl
inc
sub
lock
iret
adc
jge
lcall
adc
gs
lcall
dec
scas
add
mov
leave
pop
adc
mov
xchg
lds
loopne
ljmp
into
pop
int3
fs
lea
cli
mov
pop
cs
xchg
jle
xor
mov
sbb
mov
or
jl
notl
insb
repnz
mov
mov
dec
lcall
cmp
cmp
xor
jae
jl
sub
jo
add
inc
sub
fmuls
jmp
sub
mov
adc
nop
sbb
add
andb
inc
xchg
dec
stos
push
out
sar
push
pop
mov
in
sti
fstps
out
pop
cmp
cmpsb
and
and
xchg
or
xchg
fldenv
pop
jno
pusha
mov
gs
test
jl
mov
into
xor
rclb
adc
xor
pop
sbb
iret
xor
gs
adc
jnp
insl
fbstp
adc
cmp
sti
mov
fsts
and
mov
inc
repz
jmp
test
mov
data16
cmp
test
hlt
and
sbb
scas
mov
fstl
mov
inc
sbb
jl
stc
sahf
fwait
int
push
xlat
jne
xor
in
insb
inc
stos
adc
shrb
adc
mov
push
push
rcrl
push
push
dec
mov
sarb
inc
xor
mov
aaa
rclb
pop
enter
xchg
je
xorl
pop
sub
rcll
jae
and
mov
in
push
adc
lret
sahf
sbb
or
pop
and
arpl
negb
jge
je
aad
jmp
stc
jge
xchg
mull
sahf
pop
arpl
ljmp
pushf
pop
inc
push
mov
mov
jecxz
mov
ret
pop
lahf
fstl
in
stos
cmp
adc
push
push
aas
jbe
inc
mov
loopne
aad
cmp
in
enter
je
cmc
mov
nop
push
sahf
lea
popf
pop
xchg
jmp
movsb
out
mov
mov
in
mov
jno
mov
push
dec
pop
mov
mov
fidivrl
scas
adc
and
pop
push
fists
dec
push
cwtl
into
lds
mov
testb
ret
xchg
push
out
dec
lods
test
dec
rcr
sti
fs
shlb
jbe
int
iret
adc
shlb
stc
cmp
mov
pusha
pusha
out
pop
mov
popf
icebp
ret
lret
push
dec
stos
fs
mov
in
lods
mov
add
scas
int
test
add
fldl2t
pop
mov
sub
pusha
adc
aam
andl
push
push
rclb
arpl
mov
lahf
xchg
jg
test
push
stos
fwait
inc
or
jl
add
into
xor
sar
mov
and
mov
adcb
out
outsl
outsl
inc
repz
mov
inc
pop
movsb
mov
pushf
mov
fldt
dec
std
add
mov
cmc
stos
xchg
push
mov
mov
mov
leave
adc
push
fimuls
movsb
outsb
mov
gs
lret
loop
subb
ret
jne
sbb
dec
out
xchg
xchg
cwtl
xchg
ret
sub
into
adc
mulb
inc
push
adc
mov
out
xchg
mov
mov
inc
cwtl
cmp
jne
sub
imul
adc
fucom
cmp
dec
pop
adcl
pop
xchg
cmp
and
addl
out
and
or
jmp
stc
and
fs
or
pop
je
push
lret
lods
cmpsl
stos
xchg
cmp
dec
sbb
lret
inc
mov
sub
mov
cwtl
push
aam
inc
xchg
les
faddl
mov
insl
and
cmp
push
push
pop
ljmp
je
adc
pusha
inc
push
mov
pop
pop
in
push
and
xor
sub
pusha
lds
cmpsb
call
mov
cmove
pop
loope
repnz
or
xchg
outsb
insl
jns
mov
test
mov
pop
xor
jne
aad
rcrl
mov
addr16
shll
or
cmpsl
push
pop
das
push
mov
movsl
mov
dec
push
or
mov
shrl
xchg
add
xchg
out
push
flds
inc
rol
rep
loope
or
mov
hlt
ljmp
xor
add
adc
enter
dec
stc
lcall
cmpsb
movsb
shlb
jl
in
les
sbb
repz
jno
int3
insl
and
addr16
xor
fnclex
jae
xchg
lods
stos
aas
dec
mov
xchg
push
sub
pusha
aas
push
lahf
rorl
popf
xor
inc
rclb
cmp
ss
ret
pop
faddl
in
add
xchg
mov
add
jp
dec
cmp
or
rcr
insl
sbb
aam
xlat
sarl
fs
leave
or
shll
push
cltd
push
jg
sbb
lcall
fbstp
ss
into
divl
adcl
aam
add
mov
jl
test
in
ret
and
sub
subl
incl
mov
leave
jmp
inc
adc
cmpl
scas
lahf
inc
lret
mov
out
pop
sarb
inc
jb
test
mov
pop
cmp
push
adcl
push
cs
imulb
out
cmp
or
imul
and
xchg
outsl
xchg
movb
mov
and
jecxz
push
and
xchg
add
fbld
test
mov
gs
and
and
xchg
push
scas
lret
lahf
mov
sbb
ss
mulb
or
push
leave
arpl
push
stos
mov
jne
in
jecxz
das
mov
mov
adc
mov
lret
adc
imul
xor
cmp
lods
dec
push
or
in
mov
adc
xor
dec
in
int3
dec
arpl
mov
mov
inc
je
test
int
in
push
xchg
sti
and
lods
lods
push
cli
xchg
sbb
notb
icebp
js
push
pop
add
pop
test
jnp
mov
xchg
mov
sbb
imul
ret
cmpsl
jbe
xchg
xor
jl
sub
inc
out
mov
je
dec
or
jge
std
popf
dec
frstor
cli
dec
out
call
push
icebp
cld
sub
cmp
clc
or
xor
mov
into
add
xor
sub
or
cmp
xchg
sbb
cwtl
jg
sti
out
pop
std
mov
pusha
jmp
push
pushf
loope
sub
lea
lds
inc
cmp
pop
and
mov
jns
fadds
into
inc
mov
test
xchg
sub
xchg
push
pop
mov
pop
dec
pop
xchg
sbb
mov
cmp
repz
mov
stc
outsb
insl
adc
decb
pusha
leave
mov
push
push
pop
in
jmp
pusha
push
mov
cmc
sbb
movsl
pop
inc
in
in
pop
mov
sti
xor
daa
into
push
adc
mov
mov
roll
push
scas
cmp
popf
push
lock
or
dec
jae
nop
xor
mov
add
fisubrl
cmp
xchg
push
mov
enter
in
adc
lock
or
imul
lock
jp
ljmp
lods
xchg
add
adc
std
and
push
aam
jmp
adc
stos
inc
iret
pop
cmp
lret
or
fnsave
dec
lods
aam
std
pushf
int3
ffreep
dec
popf
out
test
adc
dec
dec
xchg
cld
cs
xor
fsts
stos
fadds
movsl
repz
scas
or
or
lret
hlt
inc
lahf
clc
in
ljmp
scas
sbb
mov
cmpsb
push
or
push
adc
popf
rolb
mov
adc
jo
and
shr
fwait
mov
pop
jge
roll
mov
ret
push
insl
sbb
aam
clc
ljmp
std
mov
dec
in
mov
mov
addr16
push
cmp
es
fwait
jno
stos
out
push
loopne
dec
ss
cltd
push
aam
inc
push
fstl
call
sbb
cmc
sub
repz
arpl
outsl
pop
pop
jp
aas
aad
hlt
sbb
decl
cwtl
mov
into
call
add
adc
call
pop
sbb
jge
cmp
pop
or
mov
outsb
sbb
or
mov
jg
dec
movsl
mov
loop
fsts
dec
jbe
rolb
sbb
push
xchg
insl
test
aas
adc
add
xchg
cmc
mov
out
nop
mov
cli
icebp
js
repz
pusha
fldt
add
jmp
loope
loopne
xchg
roll
pop
xor
int
push
fistps
jnp
test
and
inc
aad
push
mov
xor
fmull
xor
xchg
sub
shlb
inc
lcall
sbb
call
xlat
scas
divb
out
mov
fxch
and
imul
cmp
leave
inc
ds
mov
jo
mov
test
xor
lods
lds
test
or
pop
je
imul
cltd
inc
push
sub
ss
push
cmpsb
jnp
mov
add
enter
add
mov
dec
scas
mov
lock
int3
push
out
sbb
adc
and
sub
mulb
adc
test
jecxz
stos
hlt
xlat
add
addr16
std
das
push
inc
jmp
stos
sub
pushf
sbb
fisttpl
mull
add
shlb
add
pop
int3
push
out
lret
cli
pop
xorb
hlt
or
lret
xchg
cmpsl
jbe
dec
cmp
xchg
shll
mov
pop
add
mov
iret
subb
sbb
inc
das
iret
jle
cmc
out
xchg
or
or
lds
addr16
pop
adc
icebp
aaa
lcall
jle
dec
xchg
cs
in
orb
fidivl
mov
pop
sub
movsl
mov
push
out
lds
jle
aad
cmp
lods
lock
jae
mov
imul
in
into
iret
xchg
mov
dec
adc
adc
lahf
iret
sbb
xor
ficoms
dec
fmull
inc
ret
jno
mov
jge
jbe
daa
lods
stos
data16
adc
scas
mov
addr16
sub
xchg
cld
mov
and
repnz
je
scas
ficompl
roll
mov
lahf
sahf
dec
adc
sbb
imul
das
pop
je
testb
lahf
xchg
outsl
fadd
je
sub
lea
shl
mov
add
jmp
mov
jne
adc
stc
adc
push
sub
push
push
pop
pop
sti
sbb
xor
call
pop
or
adc
pushl
cmp
sbb
mov
arpl
xor
mov
js
cs
mov
jmp
jns
outsl
sarl
insb
jb
xchg
sar
jne
fsub
inc
mov
mov
scas
add
pop
je
pop
into
inc
lret
add
nop
push
ret
jg
insl
push
jae
in
stc
add
std
ds
gs
lret
movl
pop
push
ror
mov
and
aaa
fsubrl
in
nop
cmp
aad
rcll
mov
cmp
push
xchg
xor
into
mov
inc
sbb
fnstsw
pop
mov
loop
loop
sub
cmp
fdivs
jl
sub
pop
add
or
inc
out
hlt
cmpl
mov
std
and
xchg
cmp
inc
bound
mov
mov
lret
mov
inc
add
aam
call
jge
sub
imulb
cltd
inc
daa
mov
movl
rclb
add
mov
aam
pop
addr16
mulb
jns
mov
jl
dec
sbb
pop
jmp
pop
pop
lds
insl
xlat
fimuls
data16
lods
aaa
hlt
xlat
aam
popf
sti
pop
adc
loope
in
and
lock
inc
inc
mov
jmp
or
mov
mov
ret
push
icebp
xchg
kunpckwd
rcll
in
add
push
les
push
arpl
add
jne
push
lds
scas
jl
cmp
call
pop
inc
push
out
mov
jp
nop
test
ficomps
mov
push
popf
cmp
hlt
test
fcomip
aad
aaa
adc
sbb
adc
mov
mull
fwait
jno
pop
clc
hlt
and
add
mov
aas
inc
call
mov
jecxz
jg
movsb
dec
mov
sahf
jb
aaa
and
sub
in
lds
xor
sbb
iret
in
jle
ret
arpl
arpl
pop
data16
add
mov
rcll
aas
or
lea
outsl
div
inc
out
lods
xor
les
add
xchg
sbb
divb
movsb
dec
sub
ds
loop
xorl
sbb
add
outsl
leave
mov
or
pop
outsl
hlt
aam
lret
mov
hlt
dec
pop
clc
mov
adcb
inc
outsb
dec
mov
xor
js
add
sti
out
adc
int
xor
sbb
jnp
fadds
loope
imul
cmpsl
xchg
mov
and
cmpb
xchg
std
std
mov
push
inc
xchg
into
fimull
mov
xchg
movsb
cwtl
iret
and
cmp
xor
fisubrl
jmp
negl
pxor
mov
push
sbb
in
pop
int3
dec
mov
push
int3
data16
inc
lahf
adc
sub
icebp
mov
lds
movsb
dec
xchg
mov
dec
shlb
cmp
enter
adc
inc
and
cmp
sub
dec
stos
adc
push
dec
push
jae
lock
mov
mov
inc
jle
in
mov
jbe
push
xor
add
js
ljmp
into
jmp
sbb
outsb
arpl
mov
push
test
adc
and
sbb
xor
ret
lret
pop
xchg
in
popf
xor
and
and
imul
inc
lcall
mov
jmp
fsts
incl
pop
scas
aas
cmc
push
lret
fstps
adc
cmpsl
imul
pop
sub
dec
out
lock
inc
je
rclb
gs
leave
sbb
sub
inc
or
in
lods
jle
or
fisubl
les
xor
mov
clc
call
adc
jo
push
and
or
lods
std
imul
pop
leave
imul
ds
cmc
inc
divb
push
in
dec
dec
rcl
xorl
add
mov
push
xor
bound
stos
mov
stos
push
inc
enter
test
mov
inc
inc
add
mov
pop
mov
dec
mov
sub
in
imul
mov
insb
popa
inc
lea
and
imul
sahf
sub
jge
inc
addl
into
lea
mov
cmpsl
sub
repz
out
fistps
inc
pusha
daa
inc
cmp
xchg
arpl
jae
cmp
cmp
mov
add
in
and
cwtl
and
mov
mov
movsl
icebp
mov
aaa
or
mov
repz
lds
xchg
mov
les
xchg
cs
add
mov
sti
data16
sbb
dec
imul
lcall
push
gs
adc
inc
outsl
test
sub
hlt
mov
jbe
mov
inc
push
out
mov
mov
mov
test
mov
mov
dec
stos
pop
cmpsb
pushf
sub
ljmp
cltd
int
inc
cmpsb
jg
mov
out
jmp
xor
sub
fs
inc
push
and
sbb
scas
out
repz
inc
das
xchg
xchg
hlt
add
outsl
dec
xor
and
rclb
jge
push
pusha
dec
inc
xchg
outsb
xor
sub
cmpsl
bound
popf
out
out
sbb
or
xor
mov
xchg
in
push
lcall
enter
pop
jle
adc
fwait
and
push
mov
mov
fnstenv
and
xchg
xchg
imul
psubd
dec
mov
repnz
ret
pop
push
nop
sub
mov
mov
in
lock
ja
mov
rorb
gs
jns
mov
pop
inc
mov
lret
addr16
clc
enter
inc
mov
xor
jle
int
sbb
xor
dec
mov
nop
aam
lods
pop
cwtl
mull
add
rcl
and
andl
push
mov
pop
cltd
stos
adc
into
out
insl
inc
xor
outsb
dec
xchg
mov
mov
popl
sbb
je
pop
cmp
dec
push
pop
xor
test
test
pusha
add
mov
lcall
ret
outsl
ret
cltd
cmc
or
and
jecxz
sbb
inc
sub
mov
fwait
push
mov
bnd
aaa
dec
sbb
push
stos
and
xchg
sub
pop
das
test
and
mov
into
ret
imul
lods
jecxz
insb
adcb
iret
and
xor
add
push
ret
or
cmc
clc
bound
xchg
pop
loopne,pt
sub
xchg
xor
das
cmp
pusha
adc
jecxz
std
stos
jmp
ds
cli
fucomi
pop
sub
mov
and
popf
sbb
nop
pop
push
enter
xchg
push
jmp
xor
or
mov
xchg
mov
lcall
jmp
pop
sbbb
mov
xchg
leave
lahf
lcall
popf
arpl
leave
xor
fwait
rolb
mov
div
sbb
shlb
in
enter
xor
cmpb
push
nop
cmp
and
mov
mov
mov
int3
arpl
push
ret
mov
out
sahf
movsb
and
jg
mul
jb
jp
data16
fldenv
into
mov
fstpl
test
in
ret
int
jb
dec
and
inc
xor
jns,pt
into
in
xor
jno
je
jl
loopne
and
adc
test
iret
test
shrb
inc
adc
jmp
call
jae
lret
shll
inc
lds
push
push
leave
add
imul
mov
adc
sahf
jl
sbb
sub
and
loopne
adc
xor
loope
arpl
shrb
into
out
cli
je
fwait
aas
pop
mov
test
push
pop
inc
aam
jl
ljmp
sbb
sub
adc
jo
dec
and
icebp
icebp
lret
sbb
test
push
pusha
sub
popf
jns
push
lods
mov
sti
adc
sub
and
jg
inc
xlat
test
jmp
xchg
sbb
in
or
sbb
jecxz
loopne
push
pop
outsl
inc
repz
rclb
pop
push
mov
adc
outsl
xlat
cwtl
xor
cwtl
or
and
mov
testb
push
ret
mov
pop
in
and
adc
xor
jae
adcb
adc
pop
adc
pop
stos
add
add
dec
jnp
adc
xchg
sbb
enter
iret
sbb
fldcw
bswap
or
or
pop
aam
fs
nop
daa
sub
sub
mov
inc
in
mov
dec
add
fsts
aas
inc
out
movsb
adc
jge
arpl
sub
mov
sub
imul
das
insb
xchg
lods
daa
sarl
push
rcrl
jle
aas
push
out
mov
jmp
xchg
and
xchg
mov
push
mov
inc
inc
in
adc
cmp
jmp
push
add
and
ficoms
movsb
sub
mov
dec
jecxz
inc
pop
push
test
sbb
test
add
bound
movsb
add
xchg
mov
incl
mov
bound
pop
movsb
push
push
out
mov
lret
xlat
int3
mov
dec
xchg
push
popa
shll
or
ret
in
xor
jnp
int
dec
mov
mov
add
xor
and
pop
popf
xor
jecxz
and
inc
push
lods
and
or
push
scas
jae
cmp
jmp
cs
jl
push
rcrb
lock
call
jb
je
mov
in
mov
lods
xchg
cli
pop
pop
adc
incb
dec
lcall
inc
push
xor
xor
sub
cli
es
jne
cmp
inc
jl
and
jl
lods
idivb
in
ja
mov
add
push
push
mov
cli
and
mov
test
paddsb
fstpl
cmpsb
out
pusha
inc
cmp
iret
lods
shrl
dec
mov
mov
mov
pop
lret
cli
ret
add
ja
jnp
int3
pop
or
out
cmovno
pop
push
xchg
enter
pop
cmc
dec
push
out
frstor
dec
test
fistps
ja
xchg
mov
fisubs
out
inc
pop
xor
and
inc
sar
adc
mov
sub
clc
fcompl
fildll
sub
xor
jo
add
push
pop
das
cmp
mov
imull
inc
popf
idivl
xor
jg
scas
xor
hlt
jne
aam
inc
out
jns
or
and
sbb
sub
and
ljmp
jnp
mov
pop
nop
rclb
mov
out
out
xchg
test
sub
or
cli
adc
out
in
mov
and
mul
jmp
in
pop
cmp
daa
xchg
cmpsl
lods
cmpsl
lahf
test
ss
fisubs
je
aaa
hlt
sbb
lret
cli
outsb
mov
mov
adc
xchg
xor
adc
jmp
outsb
out
into
out
inc
push
leave
adc
aas
movsb
leave
push
sbb
xchg
sti
fs
fstpt
pushl
fistpl
mov
and
dec
mov
fbld
push
mov
jp
rorb
mov
and
movsl
push
cmp
test
adc
into
sub
dec
adc
inc
shll
aaa
pop
dec
xor
scas
call
out
xchg
ficoml
pusha
fstpt
or
push
sub
jnp
push
sub
stc
ret
mov
js
rcr
ljmp
xchg
neg
ret
add
lods
cmp
or
mov
jbe
scas
outsl
fmull
jmp
adc
mov
cmp
lret
out
mov
push
xor
mov
mov
shrl
pop
cmpsl
cs
and
push
mov
sub
jmp
aaa
and
bound
ja
xor
jp
adc
dec
lahf
sbb
mov
jno
push
pop
ret
pop
xchg
sahf
daa
pop
push
xchg
test
push
pop
jge
dec
in
inc
mov
add
scas
stc
dec
add
sbb
in
pop
mul
repnz
ljmp
int
mov
les
push
mov
sub
ljmp
pop
and
xor
rcl
loope
sti
sub
mov
mov
xor
sub
and
out
into
shll
or
nop
and
jb
inc
fdivrp
mov
cmpb
ljmp
pop
pop
xor
aaa
call
in
out
or
fldt
filds
adc
dec
xlat
outsl
push
inc
cmp
dec
aad
pop
ret
xchg
je
cmpsb
pop
add
test
or
inc
and
nop
stc
rclb
xchg
and
hlt
or
adc
inc
rolb
mov
mov
adc
adc
adc
add
inc
outsb
enter
inc
dec
cmp
sbbl
dec
push
adc
dec
int
lret
xchg
out
mov
add
pop
scas
add
outsb
lret
mov
data16
mov
sub
fwait
cld
pop
movsb
jmp
in
shrb
in
and
pop
push
cli
xchg
hlt
movsl
fistpll
sub
popf
stos
inc
shr
sbb
into
outsb
fdivl
scas
mov
jl
dec
movsl
adc
and
sub
mov
iret
lret
sbb
lods
mov
testb
movsb
aaa
scas
iret
jle
mov
mov
mov
scas
push
sbb
xor
jb
das
dec
or
out
xlat
jl,pn
dec
in
fs
mov
mov
push
xor
test
sub
ljmp
xor
in
out
nop
sarl
jecxz
aam
adc
popf
jne
lds
decl
fnstsw
les
mov
jecxz
sub
pop
lods
dec
std
jmp
push
pusha
fsubrl
lods
mov
cmp
adc
inc
lods
fcmovnu
fwait
addr16
push
rorb
pop
cli
dec
xchg
incl
sbb
pop
push
jbe
dec
add
sbb
mov
lea
ds
or
gs
pop
adc
and
dec
jns
jecxz
push
dec
sub
cli
test
mov
fst
xor
add
sarl
fimull
or
dec
ds
stc
aas
cwtl
cld
icebp
fucom
sbb
sti
sarl
addl
lock
cmp
cmc
sbb
sbb
daa
fists
movsb
adc
push
pop
rol
jg
dec
xchg
add
adc
jg
fcoml
jle
enter
pop
std
lea
fisubs
and
push
xor
inc
cmp
sarl
xchg
outsb
dec
dec
stos
sub
loop
sub
fsub
dec
ret
lods
or
dec
fwait
mov
dec
jae
pop
data16
mov
inc
mov
mov
push
push
pop
mov
fwait
mov
sbb
push
mov
aas
imul
sbb
xchg
or
or
and
dec
fs
push
test
mov
pop
test
cwtl
fnsave
cmp
push
mov
cli
mov
repz
push
xchg
xor
ficoml
js
mov
or
mov
xchg
out
scas
adc
mov
jnp
ret
jae
fcmove
test
sub
sahf
int
add
sahf
lods
cld
add
pop
lret
out
orb
dec
hlt
outsl
pusha
cmpsb
ss
mov
std
push
sbb
shll
or
pusha
pop
push
vprotw
cmp
jns
stos
jae
fcomps
jno
xchg
movsl
pop
mulb
xchg
int3
jge
jb
mulb
cmp
fadd
mov
sub
mov
ljmp
std
clc
fwait
lahf
mov
sbb
cld
push
pop
les
mov
push
mov
int
stc
cmp
mov
testl
mov
fadds
and
aaa
rorb
add
pop
test
or
ret
pop
xchg
gs
xchg
add
shlb
aad
xchg
in
cltd
push
pusha
mov
aad
pop
cld
je
data16
scas
lret
cmp
out
rcl
mov
flds
in
daa
or
or
pushf
jns
movhps
push
pop
jecxz
adc
jns
pop
pusha
mov
in
movsb
add
and
lock
xor
sub
repz
nop
pop
and
mov
repnz
loop
cmp
cmp
xchg
sti
leave
jg
mov
scas
push
sbb
test
cmp
xlat
xor
push
adc
or
ljmp
js
cmp
inc
es
divl
aas
in
fidivrs
add
cmp
leave
cmpsl
lahf
inc
push
push
lods
or
xor
shl
out
dec
fldcw
div
out
mov
push
or
jns
lcall
mov
jne
adc
xor
cltd
js
fwait
sahf
mov
int
test
mov
sbb
aad
mov
or
and
sub
jl
cmpsl
lea
loope
jb
mov
fwait
push
inc
or
mov
push
adc
inc
decl
inc
dec
mov
push
sub
repnz
push
mov
and
pop
ret
hlt
dec
push
daa
push
inc
adc
inc
adc
add
inc
shr
dec
mov
pop
jb
lret
add
or
and
mov
mov
fwait
stos
shl
jb
inc
ljmp
arpl
pop
fimull
movsl
arpl
inc
and
or
mov
rcl
xchg
cmpsl
lahf
mov
loopne
inc
ljmp
insb
loopne
cld
mov
cmp
mov
cmp
xchg
mov
data16
das
popf
sbb
cmc
cmp
sbb
fsubr
pop
das
push
loope
lods
pop
add
adc
aas
leave
cmpsb
fstps
in
rorl
add
jbe
mov
inc
dec
les
faddp
pop
fisttpll
push
arpl
stc
adc
adc
test
fstl
les
inc
dec
cmpsl
mov
sbb
in
stos
inc
cmp
bound
movsl
lods
sbb
aad
stos
lahf
stos
gs
jb
push
sarb
sub
mov
loopne
loope
sub
in
mov
jns
mov
dec
testl
push
iret
jle
pop
adc
add
pushf
pop
and
repnz
outsb
rcrb
mov
and
sbb
xor
xor
mov
inc
enter
push
in
ja
or
cmp
ret
out
loop
add
xchg
mov
cmpsb
push
stos
in
out
pop
jmp
fcompl
xor
sub
and
in
mov
repnz
aam
ja
clc
incb
test
dec
add
xor
jle
fiaddl
in
dec
jp
mov
sub
push
xchg
in
test
sbb
dec
out
xorl
iret
idiv
leave
mov
dec
jns
add
stos
or
push
xchg
adc
mov
xchg
xor
sbb
xchg
daa
and
popa
fs
stos
cmp
and
imul
cmpsl
mov
cmpsb
test
cmp
inc
mov
sahf
cwtl
cli
mov
shr
subl
cmp
lret
add
ljmp
rcrb
ret
push
js
out
pop
add
pop
pop
sbb
lods
mov
push
mov
shr
pop
pusha
arpl
insl
dec
out
cmp
ds
dec
inc
and
jae
push
mov
inc
dec
aad
dec
xchg
fdiv
or
pop
adc
sub
and
push
aam
inc
pop
add
cmp
mov
jge
and
add
cltd
loope
sub
repnz
sub
inc
or
lahf
mov
loopne
push
mov
adcl
or
mov
loop
dec
xchg
pop
inc
pop
mov
adc
fsub
inc
rcrb
stos
nop
addb
rolb
sar
adc
mov
outsb
inc
int3
cmp
mov
icebp
pop
inc
in
or
mov
mov
cmp
pop
in
xorl
pop
clc
cmpsl
mov
je
loop
adc
jne
data16
rorl
mov
mov
jp
pop
mov
mov
add
mov
jnp
dec
outsb
mov
aam
pop
stos
popf
jmp
pop
mov
xor
inc
adc
mov
test
sub
mov
and
lea
push
sub
in
enter
adc
jecxz
cli
bound
mov
adc
xchg
mov
insb
lret
nop
sub
js
mov
rep
aas
repnz
fists
test
cmp
adc
pusha
push
add
sub
fs
jle
xchg
jae
xchg
fimuls
stos
jno
xchg
cld
xor
lret
mov
fstpt
in
mov
add
daa
add
xchg
ret
pop
into
dec
sbb
nop
jmp
movsb
jnp
test
inc
loopne
aaa
iret
fcoms
into
jg
inc
inc
scas
leave
ffreep
pop
ljmp
add
push
sub
xor
push
aaa
out
out
mov
addb
addl
ret
add
cmc
fcomip
push
pop
sahf
js
popa
mull
dec
xchg
mov
out
enter
leave
sar
ljmp
idivl
xchg
test
jno
mov
mov
stc
hlt
jp
js
or
xchg
pop
les
repz
jnp
cltd
add
or
loop
stos
and
jne
sahf
xchg
imul
dec
push
xor
mov
adc
pushf
dec
std
cli
nop
dec
mov
loopne
and
dec
dec
shlb
push
int3
hlt
inc
dec
cmpsl
push
addr16
cmpsb
mov
idivb
mov
fnop
aad
xchg
dec
les
mov
pop
je
test
xchg
xchg
mov
and
lods
fisttpll
insl
cmp
lahf
insb
push
aad
scas
xchg
jnp
sub
cmp
outsb
stos
inc
dec
dec
pop
out
mov
or
cmp
sub
or
jge
sahf
hlt
in
inc
lods
jmp
nop
xchg
xchg
or
orb
inc
sahf
lret
je
das
push
jo
push
outsb
ss
imul
push
in
xchg
sub
mov
cvtpi2ps
rorb
mov
test
fistps
push
inc
dec
repnz
add
out
jmp
shrl
out
test
mov
xchg
ss
lods
shrl
iret
subb
jg
or
fisubrs
push
sbb
subl
pop
and
cmp
movsb
and
or
push
or
adc
or
rorl
enter
dec
push
adc
jbe
aad
repz
pop
jle
add
dec
mov
adc
sub
js
inc
stc
mov
sbb
jns
mov
imul
xchg
repz
fiadds
cmpsb
sub
jl
sbb
adc
push
insb
mov
or
lahf
lea
sarl
fcompl
dec
imul
pop
and
pop
jnp
mov
or
mov
jo
and
ds
xchg
jl
out
mov
add
std
jle
subb
pop
add
lock
cmp
xor
das
neg
adc
mov
imul
push
xchg
sbb
xor
xor
ljmp
sahf
pop
push
fwait
fucom
xchg
mov
test
js
mov
sub
aas
and
inc
dec
out
xlat
or
and
pop
xor
push
lret
jge
jb
dec
js
xchg
xor
ss
mov
sahf
jnp
dec
dec
adcl
push
call
sahf
stos
and
cmp
loopne
repnz
lahf
jno
shll
pop
fmull
sub
fs
or
sbb
sbb
test
cmpsl
mov
and
shrb
cwtl
pop
insl
jmp
loopne
sbbb
shr
ret
out
push
mov
arpl
sub
daa
inc
ret
jmp
mov
clc
jno
xorl
mov
stos
sahf
lret
cmp
pop
ret
mov
jb
adc
fcoms
mov
dec
repz
sub
mov
inc
daa
je
cmp
les
and
lret
push
int
xchg
sbb
call
cmp
imul
stos
push
cmp
push
imul
or
in
xlat
sbb
ficoms
xor
std
loop
add
pop
jbe
fwait
jb
bnd
sub
cmp
jle
xor
or
fstpt
adc
mov
inc
cs
fadd
or
stos
jecxz
into
xchg
dec
aaa
cwtl
ds
inc
mov
mov
in
in
scas
leave
push
cmp
adc
or
inc
into
bound
push
add
js
adc
mov
cmp
pop
ds
mov
pop
fst
xchg
dec
dec
add
mov
inc
pushf
fildll
stos
jne
fninit
xchg
shlb
les
xchg
sub
pop
ret
push
lods
loopne
cmpsb
aaa
pop
mov
jmp
lock
scas
ja
xchg
int3
fistpl
pop
imul
test
xchg
mov
fists
repz
sub
daa
add
and
mov
jp
jae
imul
adc
pop
jo
int
push
mov
popa
mov
out
mov
inc
insl
out
aaa
jg
pop
sbb
aas
leave
pop
lock
fwait
xchg
adc
push
imul
fs
pop
xchg
jbe
pusha
lret
out
sub
xor
pop
inc
or
cmp
mov
mov
pop
mov
pop
jg
inc
inc
adc
mov
es
mov
fwait
adc
xchg
ljmp
mov
sbb
dec
push
stc
jle
arpl
imul
jae
or
in
sub
ret
rol
shl
mov
lahf
jecxz
inc
testl
out
mov
loop
mov
cmc
jo
aad
push
jg
jp
mov
mov
or
dec
ja
jo
fimuls
aam
sbb
lahf
pop
and
scas
push
insl
sub
leave
push
call
add
lds
inc
mov
cltd
icebp
add
cwtl
ljmp
mov
mulb
imul
in
push
add
adc
dec
testb
ss
xchg
pusha
jmp
std
inc
cwtl
jno
dec
jmp
enter
sar
and
jmp
mov
ds
sbb
xorb
repz
dec
jl
xor
pop
imul
and
or
xchg
pop
jmp
mov
xchg
lea
hlt
jg
fisttpll
or
adc
cmp
idiv
jle
jo
int
pusha
cwtl
sbb
pop
dec
xor
inc
sub
cld
jle
mov
imul
fcoms
pop
mov
sbb
push
int
aaa
jle
mov
addr16
or
mov
in
test
jbe
daa
stos
enter
shld
mov
or
or
sbb
lea
cmp
jmp
or
jae
mov
rorl
mov
jno
mov
jb
xor
sub
jp
xchg
outsb
shlb
in
xchg
or
movsl
daa
jmp
mov
pushf
mov
fnstenv
jecxz
jecxz
les
and
push
shr
cmp
shll
repz
out
or
pop
push
and
insb
mov
pop
arpl
ret
inc
mov
js
jge
dec
adc
and
fcoml
xchg
sub
daa
jl
adc
subl
xor
mov
mov
mov
inc
inc
daa
leave
xchg
add
inc
adc
gs
or
jo
adc
aaa
enter
enter
ljmp
xchg
mov
pop
add
or
clc
pop
mov
pop
insl
pop
out
adc
loop
push
outsl
add
push
adc
mov
imul
jmp
and
jnp
or
fisttpll
icebp
movsb
loope
or
mov
fcompp
repz
add
std
and
sbb
icebp
jp
jmp
adc
dec
pop
cld
pop
into
adc
js
sar
push
jno
cmp
pop
jle
inc
mov
adc
fidivrl
add
cltd
clc
push
xchg
outsb
pop
jno
dec
test
mov
mov
cltd
into
lahf
jp
les
lret
or
lods
add
fimuls
push
aaa
add
shlb
in
jge
gs
nop
fcompl
jns
dec
jne
inc
les
imul
outsl
outsb
or
test
mov
sub
dec
lret
mov
lcall
ss
cwtl
mov
or
and
adc
repnz
pusha
mov
mov
inc
cmp
lcall
sub
hlt
push
xchg
bound
cmpxchg
arpl
inc
aas
pop
arpl
js
and
inc
arpl
mov
cli
xor
sbb
or
pop
loope
mov
cwtl
ljmp
inc
or
out
mov
push
or
js
xchg
cmp
mov
movsl
movsl
es
dec
test
sbb
pop
xchg
fs
pop
mov
lret
fildl
push
push
dec
jnp
outsb
mov
sub
mov
arpl
test
es
xor
popf
mov
add
dec
add
mov
mov
js
sbb
inc
stos
xor
in
pushf
inc
sub
int3
mov
cmp
jo
push
sbb
icebp
les
das
mov
mov
or
test
adc
add
iret
mov
repz
divb
mov
es
aas
mov
arpl
fcompl
or
adc
jecxz
xor
xor
mov
sbb
pop
out
js
test
bound
or
gs
incl
push
shll
mov
sub
int3
mov
xchg
les
push
movsb
sub
jnp
in
jmp
clc
shrb
jno
push
and
cmp
sub
mov
xchg
ss
mov
dec
jmp
mov
mov
or
or
adc
lret
loopne
mov
mov
mov
xor
jg
push
mov
mov
sbb
test
clc
jmp
mov
out
ja
cmp
sbbb
push
pop
mov
jne
inc
cmp
insl
shll
cmpsl
fwait
adc
jge
stc
mov
cmpsb
data16
and
test
push
lahf
aaa
adc
push
fwait
xor
or
push
in
sub
cwtl
pop
int
icebp
in
push
xor
sub
outsl
mov
adc
jae
add
and
mov
andl
xchg
int3
mov
inc
cmp
push
inc
push
or
mov
dec
cmp
mov
inc
sbb
jo
mov
std
loop
add
test
cld
push
shrl
jp
mov
mov
or
dec
pop
push
inc
and
into
enter
call
pop
push
push
movsb
test
jnp
insb
jnp
pop
jo
shrb
into
jmp
fistpl
sub
aas
ret
in
in
xchg
insb
xchg
sahf
mov
scas
addr16
sahf
inc
sub
sbb
push
or
cmp
lea
xor
sub
fs
aam
mov
es
jge
mov
pop
or
imul
xor
add
enter
push
test
xchg
jnp
ja
mov
aad
sub
movsb
mov
pop
pop
shrl
addl
and
pop
push
testb
lock
jle
shrl
outsb
mov
adc
xchg
or
int3
or
into
imul
subl
push
test
adcb
sbb
mov
fwait
mov
push
test
cmc
ja
and
sti
repz
mov
sub
push
jns
mov
jb
mov
shl
in
cltd
and
filds
mov
cmp
pusha
or
inc
popf
subb
xchg
and
stc
sub
add
ja
int3
cmp
add
sub
inc
xor
mov
dec
cmpsb
scas
mov
leave
test
jbe
mov
mov
mov
adcl
jl
mov
lea
mov
dec
pop
and
lahf
int3
mov
mov
movsl
jbe
sbb
mov
es
pop
test
in
cmp
jo
mov
push
fnstcw
divb
outsb
pop
cltd
fildll
jle
hlt
ret
push
addb
lods
cmp
push
js
push
das
push
push
pusha
pop
cwtl
xchg
xor
add
pop
cmp
mov
shl
pop
and
inc
aam
dec
daa
xor
jae
push
lock
jb
scas
dec
aad
mov
adc
pop
cli
mov
add
sub
and
inc
test
ljmp
sbb
jns
scas
ljmp
pop
call
daa
sbb
jo
adc
xchg
push
test
rcrb
mov
lods
mov
enter
cmc
lahf
mulb
pop
xor
sub
mov
lods
jp
jg
adc
jbe
jb
ret
cmp
flds
jbe
int3
ret
stos
xchg
cltd
jmp
int
cmp
in
aas
test
je
dec
out
xor
fs
inc
adc
mov
out
jns
and
push
cmp
sarb
aam
in
pop
int
fld
dec
lahf
jo
and
popf
shrd
ret
mov
sub
push
loopw
fldl
mov
cmp
pop
xor
incb
mov
ficoms
xor
pop
psubusb
dec
lahf
popf
in
mov
pop
pop
sub
add
std
push
add
mov
js
dec
scas
sbb
lahf
cwtl
cwtl
shll
xchg
movsl
cmp
inc
dec
cmp
mov
xchg
ret
inc
mov
cwtl
or
mov
dec
cmp
add
sbb
push
xlat
cmc
fidivrl
dec
inc
les
adc
add
pop
add
mov
je
call
xor
es
adc
sub
ret
imul
add
sbb
or
or
jle
out
nop
addr16
fmulp
pop
call
mov
add
xor
mov
xchg
bound
cmpsl
loopne
mov
adc
lea
push
push
mov
imulb
sub
or
xor
mov
mov
jg
sub
cwtl
push
dec
xchg
sbb
jmp
sbb
cmp
test
mov
sbb
sub
mov
ds
dec
lret
lahf
pusha
addr16
cli
jg
aas
test
js
push
sarb
mov
roll
dec
dec
std
xchg
das
arpl
icebp
test
adc
or
inc
insl
sub
and
out
ja
mov
dec
push
fwait
mov
xchg
lods
pushf
mov
loope
mov
mov
adcl
push
and
sbb
mov
xor
xor
push
add
mov
cli
mov
fisubrs
in
ljmp
xor
andl
mov
sbb
test
mov
add
and
cld
dec
aas
jns
orl
cmp
mov
add
subl
ss
adc
mov
sub
push
popf
stos
push
movsb
inc
mov
ret
cmp
and
cmp
cmp
sub
mov
add
out
sbb
push
push
movsl
lcall
sbb
in
and
lods
mov
sbb
inc
mov
mul
or
stos
in
jnp
rorb
notb
push
push
mov
jp
push
ficoml
xor
cld
mov
cltd
leave
loope
fsts
jg
mov
adc
loope
repnz
xchg
sbb
scas
andl
negb
jnp
cmp
or
pop
inc
nop
cwtl
jge
sti
ret
loopne
inc
pop
insb
sbb
fdivr
mov
shll
ret
movsl
jo
lcall
inc
adc
js
cmpsb
pop
sbb
xchg
push
pop
jp
lcall
or
call
sub
lea
sub
mov
rolb
sub
movsb
jg
insl
pop
pop
fwait
test
les
xchg
adc
and
fiaddl
and
dec
add
rcl
cmp
xchg
cmc
push
insb
shrl
mov
push
sbb
cli
mov
dec
mov
push
int
cs
test
cltd
mov
jnp
fsubs
shll
and
js
and
outsb
mov
and
xchg
insb
dec
outsl
int
sub
sbb
fistps
sub
loope
fistpll
stos
pop
xchg
inc
adc
jge
fsubs
jbe
out
pop
inc
repz
pop
cmp
mov
mov
dec
mov
int
fucomi
or
gs
xchg
adc
imul
rclb
sub
cltd
pop
out
sti
ja
lds
sub
pop
and
cmp
das
cmp
and
sbb
mov
out
pop
insb
shl
push
xchg
data16
mov
fwait
dec
pop
inc
mov
hlt
shl
mov
pop
scas
incl
lahf
stc
cmp
dec
sub
mov
pop
fwait
pop
mov
push
into
testl
inc
or
push
xor
sub
mov
test
imul
test
mov
mov
mov
das
pusha
rcl
test
inc
inc
aaa
jge
and
mov
mov
rcl
outsl
fwait
sub
push
add
notl
dec
jl
fwait
inc
or
popa
and
sbb
mov
aas
sti
adc
cmpb
adcb
add
or
imul
adc
test
imul
rcrb
rcr
sub
lahf
in
jno
mov
fcmove
pop
clc
shrb
imul
lea
fisttpll
mov
push
stc
dec
insl
ret
out
fldcw
xlat
mov
jb
pcmpgtd
jp
and
push
xor
xchg
jp
sbb
mov
movsb
xchg
lds
mov
xor
insb
scas
and
out
jg
aas
add
imul
push
push
pop
jle
mov
fdivs
addr16
outsl
and
or
push
or
dec
sbb
lahf
test
inc
sub
xlat
fsubrp
cld
les
jmp
cli
insl
movl
shlb
inc
fisttpl
push
jb
mov
dec
fmuls
xor
cmp
mov
enter
mov
movsl
loopne
mov
stos
aad
push
and
in
ds
push
and
adc
cmp
lcall
mov
addr16
or
dec
mov
test
jmp
insl
out
fadds
call
icebp
lods
js
das
and
decb
mov
mov
pop
sub
and
add
adc
sub
je
movsl
ljmp
mov
negb
lret
fcmovu
push
iretw
das
outsb
sub
xchg
clc
inc
in
jns
add
cmp
mov
pop
stos
xchg
cltd
lcall
add
or
jp
add
mov
inc
es
js
lods
cs
cmp
xlat
mov
outsl
xchg
inc
fcmovnbe
jge
cwtl
mov
pop
or
and
pop
mov
inc
push
inc
repz
jle
arpl
sbb
js
sub
fidivrs
jl
add
or
ljmp
or
mov
in
pop
adc
mov
imul
loop
insl
xchg
cmpsb
or
fprem
push
js
push
pop
push
jmp
ss
ljmp
sub
pop
pop
push
or
aam
or
cwtl
xchg
mov
addr16
subl
or
lods
dec
insl
sbb
xor
inc
sub
jecxz
pop
lret
lods
and
add
sbb
mov
push
ds
and
pop
lods
test
mov
add
test
enter
movsb
enter
out
and
jmp
mov
dec
outsl
ja
imul
repnz
pop
dec
inc
fldl
pop
aad
ljmp
adc
lods
ds
pop
int
imul
pop
mulb
or
add
shll
xor
mov
iret
stos
in
rcrb
sub
sub
sub
adc
pusha
stos
sbb
in
sbb
mov
add
adc
cld
mov
test
insl
add
arpl
shr
push
movsb
push
xor
and
xchg
stc
movsb
cmp
fmuls
int3
scas
fsubl
in
clc
in
or
repz
aaa
rcll
popa
and
shll
gs
xor
jne
imul
sbb
cmp
jle
cmpsl
jb
xor
pop
adc
push
dec
mov
leave
fisttpl
inc
jle
jb
je
xor
lods
dec
mov
xchg
inc
ss
div
add
pop
jecxz
xlat
inc
rep
push
pop
dec
outsb
clc
pusha
sbb
jne
ret
and
cmp
fldt
jl
in
push
iret
nop
mov
cmp
or
out
and
jle
add
dec
inc
mov
xor
scas
lea
push
pop
xchg
iret
inc
mov
lods
sub
inc
mov
in
add
subl
add
xor
lea
or
das
in
mov
mov
add
mov
jp
out
sub
or
int
xchg
fmull
jp
pop
mov
xchg
jmp
lahf
loope
fisttps
cmpsb
std
shll
pop
repz
mov
mov
sub
in
dec
shrb
lea
clc
fcmovnu
shrl
adc
add
insb
addr16
adc
scas
cmp
pop
or
shl
je
vzeroupper
jg
or
push
movsl
outsb
les
push
rolb
hlt
les
negb
push
jmp
int3
ds
arpl
gs
lret
or
jb
mov
loop
and
es
lea
adc
fs
xor
imul
shlb
rep
jno
in
mov
mov
add
test
sub
sahf
std
popl
arpl
loop
push
cmp
loopne
movsl
mov
inc
js
jge
lds
shrb
jnp
push
jl
push
xlat
fcompl
inc
and
subl
jmp
mov
mov
cltd
pop
xchg
aaa
fsubl
and
lock
mov
ss
jne
mov
jl
adc
popf
mov
add
push
xor
aad
div
jno
dec
adc
nop
xor
stc
jge
mov
ljmp
sub
int3
mov
jle
adc
mov
insl
ficomps
ljmp
ficomps
xchg
lods
push
mov
and
push
loopne
scas
xor
and
in
pop
inc
and
aas
xor
ret
and
jmp
or
pushf
lret
ret
in
lret
xchg
mov
sbb
dec
mov
std
and
mov
mov
test
into
and
repz
andb
in
xchg
sub
test
popf
int3
ret
leave
aas
ret
push
push
dec
cs
cmp
adc
es
aas
pop
push
lret
xor
ss
adc
das
cmp
lea
cmp
in
popa
loopne
push
push
scas
jbe
pop
push
pop
fsubl
ret
sbb
jg
loope
mov
jae
sbb
dec
insb
decb
mov
pop
repz
shlb
push
jg
cmp
pop
xchg
call
mov
fwait
or
or
push
int3
arpl
popf
sub
xchg
notb
pop
xor
and
ds
stos
adc
fldt
jo
rclb
mov
mov
pop
mov
out
aam
cld
into
and
stc
lods
dec
xor
adc
ret
push
cmp
push
mov
scas
pop
mov
mov
or
mov
rclb
dec
mov
adc
and
sub
in
xlat
cmp
mov
mov
nop
daa
adc
or
sub
cmc
xor
pop
call
pop
push
pop
cltd
pop
ljmp
fxch
out
daa
stos
pop
jge
roll
outsl
dec
adc
push
add
stos
orl
pop
aas
and
cltd
fisubs
xor
outsl
xchg
and
test
cmpsb
fisubrl
shrl
popf
add
cltd
scas
fidivrs
repz
sbb
lock
pop
fnstenv
jg
test
jp
mov
outsb
and
into
mov
jo
mov
es
mov
ja
test
mov
add
add
enter
cmp
inc
cmpsb
int3
stc
lods
jo
and
sub
mov
inc
xchg
aam
or
push
jb
push
incb
xor
cmc
cmp
fwait
sub
sahf
lods
inc
clc
mov
lea
sbb
outsl
int
in
incl
push
ret
sub
or
movsb
mov
fwait
orl
orb
jns
cmp
in
pop
scas
imul
aam
int3
leave
jb
aas
mov
add
outsb
inc
inc
fwait
in
xchg
js
jb
cmp
rorl
test
sbb
sahf
xchg
add
lock
arpl
orb
cmp
push
cmp
bound
sub
ds
sub
and
mov
lods
mov
fidivrs
cld
cltd
es
xchg
sbb
js
outsb
mov
das
ret
adc
add
aam
pop
orb
inc
jp
xlat
jo
popl
mov
insl
rolb
fadd
pop
clc
or
lahf
leave
pop
ss
mov
addr16
add
jge
lea
addb
daa
lock
jae
adc
mov
repz
push
and
scas
outsb
sub
pop
test
les
loopne
inc
xchg
inc
cld
add
jns
pop
es
mov
mov
push
dec
xor
pop
and
xchg
push
xorl
mov
inc
mov
push
jl
lret
sti
xor
push
ror
push
ja
imul
das
xchg
fwait
inc
popa
fldcw
pop
repz
mov
mov
push
inc
out
sub
mov
lcall
push
andb
mov
mov
dec
pusha
outsl
loope
xor
xor
mov
bound
cmp
add
mov
ror
sbb
call
xor
cli
orb
loopne
movsl
push
xchg
and
jns
leave
mov
jo
sub
shrl
icebp
insb
jl
stos
cli
inc
inc
mov
push
inc
cwtl
mov
je
pop
andb
push
cmp
jle
and
pop
sub
test
xchg
dec
mov
cmp
shll
arpl
sahf
jl
xor
and
pop
inc
fdivs
rclb
push
es
fcmovu
scas
dec
loop
sbb
adc
cmp
inc
adc
mov
cmp
ds
in
dec
dec
inc
sbbb
mov
push
adc
dec
cmc
and
push
shr
and
push
stos
cmpsb
xor
fisttpl
mov
sbb
cmp
lds
push
lret
jp
push
push
repz
jno
push
jns
sbb
pop
sahf
nop
cli
sarl
cmp
adc
rcll
xor
rorb
adc
test
mov
sub
enter
mov
mov
push
ss
mov
aas
sub
mov
pop
cs
xor
repz
adc
add
sarl
leave
adc
pop
jnp
pusha
js
ss
js
and
sbb
ret
lock
push
mov
xchg
mov
pop
push
ret
xchg
inc
jp
jge
xlat
jb
ja
lea
sub
mov
sub
pop
dec
icebp
aas
cmp
clc
lods
out
or
inc
sub
sub
add
test
jmp
and
and
cmpsb
jge
enter
in
xchg
jne
sti
pop
xchg
movsl
dec
fmul
mov
push
sub
stc
dec
ljmp
jl
mov
push
bound
enter
xor
popf
outsb
lcall
stos
arpl
dec
and
mov
pop
pop
fnstcw
pop
movsb
repnz
cmp
adc
jae
repz
xchg
mov
lods
pop
jecxz
push
stos
cmp
outsl
dec
sub
sbb
dec
int
add
fimuls
lea
sahf
mov
ds
out
mov
mov
lahf
cmpsb
or
add
outsb
pop
xchg
inc
andl
mov
lret
pop
jae
push
movsb
out
pop
push
popa
add
out
xchg
enter
sub
push
iret
mov
sbb
out
shll
stos
push
pop
adc
clc
fdiv
or
add
mov
or
hlt
sbb
inc
lret
ds
pop
pop
insb
out
jl
push
xchg
and
or
std
cmpsl
pop
mov
pop
or
cs
sub
adc
jne
rcll
pushf
xchg
cmpsb
addr16
cmc
andl
inc
dec
inc
mov
insb
das
cmpsl
jmp
loop
cmp
pushf
je
test
sub
push
mov
icebp
cmp
je
jmp
jb
pop
testl
jo
adc
dec
and
repnz
cmp
insb
loop
int
mov
nop
in
push
mov
cmp
mov
idivb
into
fdiv
inc
xlat
rcll
mov
shrb
and
dec
cmp
fsts
inc
add
pop
mov
mov
mov
xchg
out
or
test
aaa
leave
pop
loope
xchg
test
movsb
test
push
addb
std
movsl
mov
dec
xor
or
leave
movsl
xchg
fsubrs
jl
sbb
push
inc
rcl
jnp
mov
mov
xchg
push
mov
out
test
aad
xor
push
test
out
mov
outsl
fldcw
push
push
mov
cmp
jmp
in
jg
pop
scas
cmp
push
mov
les
add
sub
jne
jecxz
bound
push
adc
lea
aas
stos
or
mov
int
push
and
gs
movsb
jne
or
cmp
mov
or
cmpsb
adc
jnp
inc
mov
xchg
lods
pushf
jbe
or
pop
fldcw
fwait
scas
adc
pop
add
xchg
cmpsl
mov
test
pop
call
mov
add
xchg
mov
push
add
popf
jle
jne
stc
mov
fnsave
cltd
push
xor
fsubl
je
std
xchg
push
xor
lret
pop
mov
clc
jbe
cld
cmpsl
lret
mov
jo
inc
inc
push
jecxz
sbb
int
pop
data16
mov
push
in
dec
shll
popf
xor
inc
inc
scas
movsb
jae
in
ljmp
cmp
inc
cmp
cmp
not
cmpsl
jno
jnp
add
notb
inc
jo
fbstp
push
or
xlat
fs
add
call
movsl
xchg
int
adc
sbb
sbb
decb
mov
dec
rorl
hlt
pop
push
ret
cmp
dec
jno
fisttps
mov
aad
out
sbb
call
push
cmpsl
dec
lret
jno
cld
mov
sbb
test
jl
ret
outsl
sbbl
mov
ficoms
jnp
outsb
lret
ret
pop
jmp
pop
fisubs
sbb
add
push
adc
xor
jecxz
mov
push
jle
xor
sbb
repnz
nop
dec
mull
xchg
call
out
dec
mov
out
jmp
cltd
add
ret
imul
or
lds
out
ss
bound
repz
lret
add
lea
test
dec
jb
lds
jae
mov
test
pop
les
fwait
mov
add
mov
pop
fs
enter
inc
jl
insl
fiadds
jge
loope
mov
sub
stos
add
rcll
push
lock
mov
pop
divb
lcall
das
dec
cmc
mov
xlat
aam
icebp
icebp
pushf
test
push
cmp
pop
lahf
sbb
mov
and
ja
out
test
pop
push
jnp
xchg
subl
sahf
mov
sub
push
pop
and
xchg
cmp
std
dec
and
js
pop
xchg
xchg
mov
hlt
pop
push
cmpsl
out
int
pop
mov
scas
pop
jl
cmp
out
les
jle
inc
jns
lret
das
fidivl
jb
cmpsb
xor
loope
inc
lcall
in
inc
jl
scas
jne
movsl
add
inc
adc
jnp
cmp
lea
lods
adc
pop
dec
or
sub
mov
adc
lods
outsl
mov
push
int3
jnp
repnz
clc
pop
sub
adc
or
or
aaa
jno
orl
inc
sbb
mov
mov
mov
outsl
xor
pop
jns
or
adc
mov
push
and
or
fsubrl
sbb
pushw
pop
xchg
or
pop
add
mov
mov
xchg
jns
sbb
sbb
add
cmp
sub
adc
sbb
out
push
dec
pop
movsl
jb
jl
cli
jne
ja
sti
insb
icebp
sub
xchg
fildl
jp
dec
in
cmp
inc
neg
inc
fisubs
std
idivb
ss
fistpll
test
dec
adc
icebp
mov
aaa
in
fs
loop
add
adc
inc
push
dec
cli
mov
mov
fisttps
pusha
pop
or
stc
fldcw
sub
add
or
jbe
std
bound
pop
adc
mov
xor
sbb
int3
scas
xor
adc
bound
mov
fcom
add
fidivrs
jecxz
and
xchg
movsb
and
lcall
pushf
sub
xor
sub
pop
dec
cmp
stos
ds
fidivl
xchg
iret
imul
xor
enter
loopne
cmp
aaa
pusha
mov
iret
push
popa
or
push
mov
jle
movsb
bound
xchg
call
and
in
mov
hlt
in
lcall
mov
popa
xor
xor
jle
jge
daa
pop
leave
inc
jp
or
scas
and
cmp
pop
ret
loopne
adc
mov
mov
jbe
jge
insb
es
cmpsb
adc
and
pop
xchg
and
sbb
pop
or
mov
xchg
jbe
xor
lahf
sbb
pop
xchg
jmp
rorl
in
inc
jne
loopne
subb
ret
imul
jl
dec
xor
or
ds
clc
stos
adc
mov
ret
data16
xchg
rcl
test
jbe
ret
xchg
xor
test
and
xor
sbb
imul
shll
cmp
mov
popa
dec
pop
mov
xchg
hlt
push
les
add
sub
add
push
sbb
popa
lahf
and
mov
imul
xchg
cmp
test
mov
pop
mov
mov
lcall
scas
addr16
daa
das
mov
pop
push
sbb
fwait
imul
xor
jbe
cmp
lcall
arpl
pop
test
dec
and
adc
sbb
mov
aad
jnp
nop
xor
xstore-rng
cmpsl
inc
jecxz
cmp
mov
push
or
es
loope
shll
adc
or
mov
out
ss
nop
hlt
jle
test
shlb
adc
in
pop
sub
aas
mov
and
sub
sbb
xchg
gs
cld
and
js
push
add
push
xchg
daa
jge
mov
cmp
push
or
mov
nop
pop
data16
sub
sub
loope
imul
in
fidivrs
ja
cmp
aas
loop
das
inc
jno
iret
shrl
adc
std
inc
loope
in
ja
es
aam
les
pop
jbe
fidivrs
add
sub
js
mov
shr
cmp
out
xor
xchg
push
mov
in
les
and
xchg
fisubrs
bound
aaa
push
in
sti
pop
sbb
mov
xor
aas
cwtl
mov
lea
inc
push
mov
and
adc
repnz
xor
unpckhps
add
in
ret
lahf
dec
insb
testb
dec
in
loope
sbb
rclb
and
add
mov
mov
mov
cmp
movl
test
dec
mov
xchg
inc
aas
ret
incb
ret
idivb
adc
cmpl
pop
test
lahf
push
xlat
push
mov
and
sti
out
pop
cmp
mov
fadds
jbe
inc
cmc
xchg
mov
lods
add
fisubrs
mov
add
sub
stos
jbe
aaa
push
outsb
and
or
outsb
jle
mov
pusha
pop
adc
inc
addr16
sub
add
mov
jp
cmc
pop
xchg
testb
mov
adc
mov
loope
mov
dec
jp
jp
mov
sub
inc
insb
out
pop
int3
daa
pop
jmp
dec
pop
mov
inc
nop
daa
xchg
mov
decb
out
push
mul
arpl
or
mov
test
pop
xchg
xor
ss
arpl
lahf
add
cli
or
jmp
int
inc
cmpsl
xchg
push
sbb
jae
sbb
mov
inc
xchg
jge
lods
jns
fwait
cmp
insb
add
lea
sbb
mov
lret
jns
xchg
sub
mov
sub
aas
into
int3
fsubs
or
in
xor
aas
into
adc
pop
xchg
movsl
outsl
pop
das
or
sbb
xor
test
mov
lods
pop
inc
xor
xchg
fldcw
lahf
outsl
repz
lods
scas
orl
adcb
mov
loopne
cwtl
jmp
hlt
loope
add
out
sbb
mov
ret
pop
stos
push
rcrb
outsl
fmuls
pop
inc
test
scas
add
std
aas
aam
mov
rcl
ficoms
dec
ret
or
shll
pop
lock
mov
push
push
sbb
pusha
add
mov
inc
mov
xchg
fists
add
or
daa
inc
iret
hlt
mov
enter
inc
push
loop
push
test
popa
pusha
adc
loop
gs
sbb
js
mov
jno
inc
adc
jle
stos
push
ds
in
lea
sub
add
sub
mov
pusha
xchg
jle
pop
fnstsw
adc
int3
jp
iret
lea
jmp
mov
lahf
popa
stos
xor
pop
mov
popa
std
sbb
mov
in
stos
enter
pop
mov
shlb
out
jbe
mov
out
and
add
mov
adc
push
inc
mov
cmp
inc
mov
xor
mov
mov
inc
push
lea
lahf
cmpb
or
fnstcw
jns
inc
enter
fmull
add
mov
loop
mov
add
and
jl
mov
pop
jne
jl
lret
push
add
mov
iret
mov
xor
in
jbe
cmpsb
xor
jnp
lret
addb
cmpsb
pop
out
js
cmpsl
rcll
jb
jnp
dec
sbb
movsl
sbb
paddusb
mov
ljmp
movsb
push
mov
xchg
movsl
cmp
xchg
sbb
pop
jne
adc
cli
or
jo
jnp
pop
jmp
call
jge
cmc
hlt
sbb
hlt
push
adc
mov
lods
adc
aad
add
ss
lret
mov
lret
push
lea
out
fildll
jno
adc
xor
out
or
jmp
ljmp
xchg
add
or
lcall
and
or
mov
adc
enter
and
inc
sub
fsubl
stc
or
pusha
mov
or
xchg
mov
fistpl
std
push
ret
mov
push
movsb
cld
out
out
mov
loop
lods
mov
outsl
push
sub
hlt
out
inc
popa
cmp
stc
in
xchg
int3
out
mov
mov
push
into
mov
pop
xor
aad
push
pop
sub
out
cltd
test
out
jge
sub
sub
add
jp
jge
das
stos
jo
rcrl
or
insl
shll
in
add
cld
xlat
es
popf
lock
icebp
stc
pop
xor
test
es
fs
push
ds
fs
mov
pop
repz
lods
fcmove
pop
add
iret
testb
cltd
xor
xlat
fdivl
jecxz
fisttpll
sarl
fdivl
push
inc
dec
pop
xchg
mov
mov
rolb
inc
dec
ja
sahf
outsb
xor
movsl
mov
mov
cltd
add
pop
sbb
mov
sbb
mov
or
stos
rcl
rcl
shr
push
shrl
xor
enter
jge
ret
lods
scas
mov
es
sbb
lret
loopne
adcl
push
shlb
sbb
test
js
rcrb
mov
mov
pop
in
xor
add
ljmp
mov
addr16
xlat
add
dec
mov
adc
fildl
out
in
ss
jp
fs
rcr
sub
xchg
cltd
sub
mov
ret
or
sub
mov
sub
fscale
stos
inc
and
loopne
outsb
dec
xchg
or
mov
sbb
aad
frstor
cld
dec
popf
mov
mov
outsb
pop
adc
js
movsl
jecxz
outsb
push
add
in
bound
mov
mov
jmp
lods
mov
mov
mov
adcb
lods
mov
adc
scas
jge
mov
popa
mov
mov
cwtl
repnz
xor
dec
loopne
and
rorl
stc
cmpsb
les
hlt
lea
movsl
arpl
shlb
bound
out
push
ret
mov
and
sbb
lods
movsb
xchg
fdivrp
dec
aad
xchg
loop
mov
cli
pop
xor
sub
cmpsl
out
cmp
leave
addr16
mov
add
mov
mov
imul
cld
push
jmp
adc
inc
fs
add
shlb
aaa
push
js
sbb
sbbl
xor
mov
adc
cmp
xor
lods
and
sbb
jp
add
loopne
fiaddl
pop
enter
cwtl
push
mov
or
adc
insl
sbb
dec
enter
int
jno
push
ds
and
mov
cs
fisttps
rorl
cmp
adc
inc
lea
mov
lahf
fstpt
mov
mov
std
in
adc
push
dec
inc
rorb
popf
fdivl
inc
sub
and
inc
sub
dec
movsl
movsl
push
insl
in
imul
mulb
bound
jmp
outsb
imul
call
les
or
lds
mov
dec
out
xor
sbb
cmp
and
out
sbb
sub
and
cmp
iret
in
shlb
lahf
sub
push
aas
and
add
pop
jle
aas
dec
daa
mov
and
out
push
jo
jp
and
sub
dec
dec
adc
inc
or
mov
mov
inc
pop
fnstsw
sbb
int3
sub
aas
add
fidivrs
lods
pop
fildl
xchg
pop
inc
shlb
lods
push
sbb
jg
imul
lds
xchg
test
adc
std
pop
insb
jbe
mov
mov
mov
loop
push
jmp
push
xchg
xor
add
mov
in
int3
dec
adc
cwtl
xorb
xchg
mov
push
mov
lret
mov
dec
inc
ror
or
adc
push
mov
clc
cmp
arpl
sub
pop
sub
jbe
addl
dec
mov
pop
lret
push
push
mov
xor
jae
jg
cmpsl
lods
mov
lock
ret
cmp
mov
lret
pop
mov
arpl
jmp
cmp
xchg
cld
pop
mov
jmp
in
inc
mov
jmp
xchg
jns
dec
pop
lret
cltd
pop
jp
sub
gs
mov
lock
mov
in
hlt
fstl
sub
out
insb
or
cltd
dec
scas
je
out
mov
ret
aaa
dec
xor
test
je
sub
push
ds
ja
out
lds
inc
inc
dec
inc
ds
dec
mov
push
mov
outsl
lock
rol
push
orl
mov
popa
mov
push
fistpl
pop
xchg
cmpsb
movsl
xchg
sbb
mov
movsb
inc
out
lds
and
fmul
les
xchg
lahf
mov
outsb
and
ja
xor
mov
pop
leave
shll
push
and
adc
fmul
stos
popf
jmp
outsl
fdivr
filds
mov
dec
imul
movsl
or
add
fwait
jmp
push
aad
jno
repz
adc
pushf
stos
jns
push
clc
insl
pop
push
mov
clc
movsb
outsb
add
dec
push
inc
or
lods
ficompl
or
jnp
clc
stc
mov
idivl
shlb
loop
mov
pusha
lcall
imul
loop
sbb
jmp
and
xchg
loopne
xchg
lds
push
dec
repz
xor
xchg
loopne
fcmovbe
js
sub
inc
adc
cmp
push
push
aaa
jg
aad
mov
cld
xchg
das
lods
dec
subl
inc
push
mov
popf
outsb
popa
out
cmp
cmpsl
insb
movsb
std
into
fstl
jnp
imul
sbb
insb
aam
mov
cmc
xchg
fldenv
and
mov
mov
jmp
enter
cmpl
fidivl
ss
xor
in
iret
aad
push
or
xor
dec
push
arpl
or
mov
clc
loope
imul
mov
add
and
ret
aam
cmp
and
jb
lock
aas
mov
sar
fildll
adc
loop
stos
and
movsl
mov
inc
mulb
xchg
pushf
mov
push
sbb
cltd
sub
out
pusha
pop
mov
or
mov
xchg
test
mov
mov
jbe
pop
movsb
push
int3
pop
cmp
mov
mov
pop
lret
out
seta
sbb
stos
fiaddl
cmpsb
jp
fstpt
inc
add
test
dec
test
jb
out
jae
fsub
push
pop
cmp
imul
fs
test
mov
xchg
aam
in
out
rclb
pop
pushf
mov
es
cli
popa
mov
addr16
into
je
sub
mov
fistpll
pextrw
dec
ss
cmc
cmc
jecxz
test
iret
inc
add
cmpsb
mov
mov
fbstp
push
cmp
push
in
xlat
sub
adc
jne
outsl
and
pop
int3
mov
dec
popa
movsb
add
imul
je
shrb
or
aas
bound
ds
xchg
std
cmp
mov
inc
dec
stos
pusha
minps
insb
and
ficomps
cmpsb
xor
lcall
xor
mov
in
sbb
pop
pop
iret
or
ljmp
pop
shll
lret
inc
dec
movsl
shrb
sbb
cmp
pop
lds
dec
add
adc
sub
sub
adc
push
je
pop
rcrb
cli
imul
fs
xor
lret
dec
adc
aam
sbb
pop
push
inc
push
lcall
shlb
inc
mov
movsb
jb
pop
into
mov
mov
shrl
mov
lahf
and
in
shrl
pop
push
pop
in
xchg
jae
ds
ljmp
jl
popa
xor
fst
sbb
cmpsb
mov
cmp
xlat
and
sub
jg
sti
setb
idiv
ja
cmpsl
pop
mov
and
enter
loop
shrb
pop
fwait
dec
or
or
pop
int3
inc
shrb
test
sbb
jns
cmpsb
cmp
sub
mov
push
imul
decl
dec
ret
aaa
inc
scas
icebp
outsl
xchg
sub
aad
jmp
dec
aad
mov
sub
sbb
call
test
xchg
jge
pusha
sub
ret
add
cmpsl
lret
jbe
cmp
in
sahf
call
mov
iret
mov
clc
lock
inc
cmp
jle
jne
jecxz
xchg
call
rcl
loop
mov
psubsb
sbb
aam
les
push
jae
dec
jl
push
inc
leave
aam
push
adc
aam
dec
paddusb
jnp
dec
ja
add
lods
mov
aad
fidivs
sbb
jne
xor
data16
icebp
push
pop
sub
outsl
in
ret
inc
sub
mov
imull
push
adc
jne
call
dec
test
fwait
jbe
sbbb
add
mov
mov
test
test
sub
pop
in
mov
push
rcrl
imul
inc
fcompl
adc
mov
out
cmpsb
les
or
pop
les
push
enter
xor
test
in
or
push
pop
mov
mov
lock
mov
inc
cmpsb
xor
movsl
mov
adc
mov
sub
pop
or
sub
jo
lret
cmp
mov
lret
pop
and
inc
test
dec
cmp
pop
xor
loope
and
aaa
sbb
sub
addr16
gs
popf
pop
jge
xor
push
add
jb
insl
ja
inc
aad
jge
sub
hlt
mov
mov
mov
data16
pushf
xchg
jnp
shlb
repz
std
mov
test
es
pusha
fwait
push
mov
pause
popa
daa
inc
lock
mov
insb
insl
push
sbb
clc
pop
int
xor
mov
test
xorb
loopne
neg
mov
pop
mov
lret
jbe
pop
mov
subb
cmp
push
sub
pop
repz
das
lahf
or
loope
test
fwait
push
shrb
and
imul
out
jle
adc
cld
jns
clc
shll
inc
orl
push
movsb
adc
data16
or
and
pop
in
rorl
cmc
int3
aas
mov
lods
mov
fcoms
ret
mov
add
or
or
jmp
jnp
arpl
jnp
mov
xor
xchg
aaa
cld
sbb
daa
dec
das
pop
xchg
pop
enter
add
lahf
mov
in
daa
nop
int3
mov
das
pushf
cmp
mov
ret
jno
or
ljmp
sub
sbb
fucomp
xchg
shll
cli
fisttps
jb
mov
cmpsb
mov
adc
pop
inc
sahf
jmp
cwtl
fsubrs
pusha
cs
sahf
inc
jmp
daa
insb
adc
cmp
int3
arpl
fwait
ljmp
inc
mov
push
js
sarl
in
lock
das
adc
pusha
call
insb
lcall
pop
and
lret
adc
xor
mov
dec
iret
jmp
ret
adc
jge
mov
aaa
xchg
xor
mov
bnd
and
movsl
xor
pop
jp
in
inc
adc
inc
adc
clc
in
lahf
pop
pop
daa
jge
fwait
int
shr
fsubrs
sub
push
roll
pop
testl
fwait
mov
mov
hlt
jbe
aas
fwait
test
lahf
lods
xchg
jmp
add
xlat
inc
mov
xchg
in
adc
hlt
sub
nop
cmp
jl
mov
jle
stc
add
add
test
call
mov
enter
cmp
sbb
xor
xor
in
pop
enter
mov
popa
add
dec
jno
inc
idivb
jnp
ja
and
sub
popf
pop
testb
rol
mov
je
mov
mov
negl
add
mov
negb
test
std
ss
xorb
loope
imul
mov
daa
xchg
insb
sahf
mov
fnstsw
cmp
push
and
in
nop
repnz
sub
addr16
rorl
mov
mov
and
push
into
cmpb
scas
icebp
cs
pop
fwait
push
enter
xchg
jne
inc
sarb
cmp
rcrb
jle
ss
daa
movsb
cli
les
mov
pop
dec
sub
inc
leave
jg
scas
mov
pop
push
adc
jp
lret
mov
repnz
shrb
fadds
es
jnp
pop
inc
fildl
pop
test
clc
cmpsl
lods
mov
cmpsb
and
iret
lret
pop
int
shlb
icebp
mov
idivb
jecxz
cmp
loope
lcall
repnz
jge
mov
aam
int3
mov
fmul
dec
add
shrl
xchg
aam
loope
lret
and
arpl
rcll
repnz
inc
sbb
push
ffree
xchg
xchg
das
mov
jb
mov
push
sarl
sahf
xor
mov
push
mov
ja
cmp
ja
pop
lcall
repz
mov
fimuls
xlat
stc
push
adc
das
lret
in
pusha
ds
push
leave
mov
and
inc
loope
add
outsl
subb
or
push
repz
enter
aam
pop
sub
push
push
add
or
ja
xchg
daa
xchg
repnz
out
ret
or
mov
xlat
sbb
xchg
or
mov
add
jg
cmp
adc
jl
stos
pop
test
push
repz
xchg
add
and
xchg
push
sbb
and
adc
xchg
lock
cmp
or
in
push
xchg
push
dec
and
jno
daa
insl
int
pop
cmpsl
push
dec
xchg
dec
aam
pop
lcall
jp
lods
push
loop
add
inc
xor
out
sub
mov
inc
pop
aas
pushf
mov
sub
mov
xchg
or
jne
jmp
sbb
or
rorb
out
inc
jo
insb
cmc
mov
push
inc
stc
insb
add
lahf
stos
ljmp
and
lret
push
movsl
pop
pop
lahf
mov
mov
add
ficoml
lods
fsubl
jno
imulb
cmpsl
cld
push
in
fadd
test
enter
loope
mov
sahf
push
mov
gs
repnz
adc
out
ret
cli
push
cltd
outsb
mov
sti
add
aas
mov
test
and
mov
pop
mov
or
sub
in
mov
sbb
pop
leave
es
pop
aam
data16
fidivs
push
les
bound
jo
xchg
dec
aaa
fld
scas
loope
aas
and
push
jl
lods
add
inc
iret
aam
or
lods
mov
out
cmovns
dec
lret
dec
sbb
adc
xor
pushf
cmp
jecxz
mov
enter
jbe
iret
xorl
fdivs
clc
out
rcrb
ljmp
adc
fs
insb
mov
sahf
nop
das
aas
movsl
mov
ss
js
bound
or
or
adc
mov
lret
fildl
sbb
lods
fmuls
cltd
dec
aad
sar
test
lcall
test
pop
gs
shl
leave
test
xchg
gs
sbb
push
iret
and
movsb
enter
imul
mov
sbb
ds
or
cmpsl
push
pop
mov
in
adc
rolb
mov
jg
jo
mov
pop
push
push
sbb
test
roll
jne
ficoml
mov
push
fadds
xchg
cmp
sbb
push
sbb
or
ds
sub
xchg
mov
enter
inc
xor
adc
jmp
pop
dec
inc
inc
push
cmp
pop
loope
stos
fnstenv
inc
lock
jno
leave
outsl
cwtl
mov
pushf
subb
xor
jle
inc
stos
outsb
add
cmp
out
mov
cmp
call
sbb
pop
cld
ss
int
dec
leave
popf
into
push
outsb
mov
push
imul
pop
popa
and
cmc
repz
cmpl
sub
add
pop
outsb
jge
jns
je
icebp
add
dec
sbb
pop
dec
rorl
push
jno
lahf
mov
movsb
mov
inc
popa
cwtl
cmpb
fisubs
addr16
push
push
clc
loopne
lret
faddp
jge
push
nop
lahf
ret
ja
or
push
jns
scas
push
addl
mov
lock
dec
push
and
imul
sub
negb
sbb
inc
lcall
inc
and
iret
mov
sbb
les
addr16
sarb
cmp
push
jbe
cli
cwtl
stos
inc
sbb
dec
pusha
push
rcr
mov
xor
gs
adcb
xor
bswap
pop
fnstcw
mov
fisubs
mov
imul
sbbl
loopne
xchg
inc
adc
mov
xor
fistl
pop
mov
adc
aaa
sbb
mov
xor
mov
out
add
pop
out
pop
jb
in
pop
mov
jp
xlat
mov
cmpsl
xor
and
push
enter
pop
and
loopne
or
adc
shrl
cltd
add
sbb
popf
push
lds
mov
out
sub
jge
addr16
pop
and
cmp
rorb
iret
mov
jmp
or
xchg
mov
xlat
repz
lock
mov
mov
cmp
mov
jmp
mov
push
lret
dec
imul
push
jns
out
out
fsubrl
add
push
out
sbbl
push
add
cmc
mov
sbb
xchg
js
jmp
sub
add
sbb
insl
fcomp
push
push
lret
jmp
lods
rcrl
dec
test
je
mov
cmpsb
push
and
inc
call
mov
adc
dec
jb
and
clc
jl
loop
pop
jnp
pop
arpl
and
stos
xchg
pop
out
lods
push
cmp
add
ret
hlt
dec
mov
push
rcll
lcall
or
ret
lcall
mov
pop
and
mov
hlt
xor
out
scas
adc
int
aas
nop
fadds
orb
mov
mov
scas
insl
mov
popf
flds
gs
fwait
push
xlat
xor
xchg
dec
or
add
rcll
or
test
pop
das
scas
pop
roll
xlat
jmp
nop
mov
cmc
cwtl
lret
iret
repnz
in
flds
dec
insl
jnp
mov
cld
shll
loop
dec
lods
lret
es
inc
int
icebp
ja
pop
dec
push
push
mov
popa
int3
sbb
adc
xchg
das
mov
xor
or
jno
stos
fdivp
jne
decl
sti
out
pop
push
imul
inc
dec
push
cmp
mov
mov
adc
jb
mov
add
enter
and
mov
xor
popf
add
xor
push
jns
dec
add
sub
xchg
and
scas
xor
dec
lock
sti
and
jae
fistl
xchg
jle
and
mov
lret
and
lods
fbstp
mov
gs
roll
fwait
sbb
hlt
mov
and
aaa
aam
push
bound
or
ljmp
aaa
addb
mov
jbe
xor
push
fsubrs
mov
sbb
iret
jno
in
mov
aas
inc
mov
sub
cmc
mov
clc
push
jne
pop
fsts
mov
sub
imul
xchg
stc
push
divb
iret
std
into
push
in
outsb
aaa
push
xchg
mov
fsubp
mov
fwait
inc
add
dec
dec
dec
adc
into
in
fisttps
arpl
add
test
aam
xor
inc
das
std
das
add
inc
push
lods
and
push
or
cmp
mov
sarl
mov
gs
in
inc
adc
lock
test
dec
mov
pop
outsl
adc
pop
addr16
mov
add
mov
push
pop
push
sbb
ss
push
leave
and
xorl
lods
adc
dec
mov
lcall
fs
cmpsl
or
int3
mov
mov
call
lret
jnp
jmp
fisttpl
mov
mov
loope
test
sahf
pop
jmp
aam
xchg
mov
lods
es
jmp
cltd
xchg
or
ds
add
rcrb
ret
idivb
ja
enter
cmp
imul
nop
xlat
push
out
scas
addl
sti
pop
in
pop
mov
inc
sub
push
int
push
fldcw
push
mov
gs
rcrl
lock
dec
dec
xor
mov
std
fidivs
inc
aas
mov
imul
std
call
mov
shl
push
in
jns
shlb
mov
pop
adc
outsb
mov
sub
push
sub
aaa
push
roll
jl
sub
xor
jp
sbb
lea
cs
add
es
fimull
cmpsb
dec
sti
repz
mov
testl
lods
lods
mov
or
push
or
lahf
scas
cwtl
sahf
lcall
jmp
and
xor
adc
movsb
mov
mov
push
sbb
fistpl
addr16
mov
add
in
jno
in
mov
inc
les
dec
ja
xlat
adc
xchg
sub
jne
in
das
pushf
icebp
pop
out
cmc
test
fldt
jae
mov
movsb
push
rclb
es
sbb
push
dec
pop
xlat
xchg
cmp
jmp
nop
fwait
jae
test
and
ja
push
scas
cmpsb
mov
jne
orb
jle
into
fildl
pop
adc
ret
into
push
xor
jnp
andb
pop
cmc
clc
sbbl
sahf
imul
mov
popa
push
xlat
inc
lods
mov
loope
hlt
sbb
rclb
clc
sbb
sbb
rorl
insb
xor
clc
and
and
pushl
aaa
adc
arpl
dec
clc
mov
mov
sahf
inc
fs
dec
sub
jecxz
ds
rcrb
mov
shll
pop
je
xor
xchg
fcomps
scas
and
test
ret
add
push
insb
int
data16
jno,pn
ja
adc
or
mov
or
lods
mov
add
mov
jmp
xchg
pop
pusha
or
or
popa
jp
mov
push
xchg
xor
mov
xchg
sbb
cmp
push
cmp
arpl
lods
xor
bound
ret
push
dec
xor
jmp
decb
mov
jbe
inc
xorl
push
int3
push
sub
das
faddl
push
push
dec
out
mov
je
loopne
push
pop
rorb
cmp
call
cld
xor
rclb
stc
mov
push
push
cmc
push
imul
xor
cs
stos
js
mov
stos
and
push
stc
mov
inc
mov
call
xchg
inc
adc
imul
insl
out
add
pop
mov
sahf
cli
dec
cli
pop
dec
notl
cli
daa
cmpsl
mov
jmp
lds
jae
pop
jns
in
dec
add
lods
out
jb
fbld
mov
or
and
jo
add
inc
push
jbe
je
xchg
mov
push
lods
stc
pop
inc
adc
push
mov
pop
fsts
lods
andnps
lret
add
data16
fstpl
cmp
adc
push
pop
pusha
dec
dec
iret
sub
imull
mov
inc
mov
aaa
int3
mov
sub
lods
sbb
jbe
test
sub
fyl2x
jb
fsubrp
lods
add
mov
pop
pop
mov
mov
test
popa
xchg
and
mov
int
push
xor
outsb
mov
and
adc
pop
dec
push
lret
sub
int3
mov
mov
xorb
inc
sub
orb
insb
ljmp
idivb
adc
in
test
jno
mov
fcmovbe
lcall
pop
sbb
movsl
pushf
loop
and
jmp
push
dec
push
pop
xchg
movsb
or
shrl
ret
mov
dec
inc
bound
movsl
cmpsb
lcall
cs
call
test
scas
xchg
sahf
xchg
test
inc
pop
adc
xchg
testl
ljmp
mov
sub
sti
inc
shl
sbb
movsl
in
push
lahf
pop
mov
sub
les
lds
insb
cli
jg
sub
cmp
ljmp
pop
stos
sub
fs
sub
push
mov
in
mov
push
mov
jge
enter
shlb
push
jne
inc
pop
jb
insl
stc
or
push
mov
cpuid
sbb
mov
dec
fwait
movsl
mov
or
push
push
jl
in
stos
dec
cmp
or
xchg
xchg
xchg
sbb
or
push
bound
jnp
shlb
xlat
lcall
adc
push
add
fwait
cmp
add
nop
mov
mov
push
mov
push
clc
and
mov
and
imul
and
xor
out
mov
jno
xor
jge
mov
xor
call
add
mov
mov
fs
adc
test
xchg
jecxz
or
xchg
push
ret
out
mov
inc
push
mov
xlat
inc
imul
int
xchg
adc
mov
lock
es
mov
push
xor
test
jmp
xchg
mov
push
dec
push
inc
repnz
jo
imul
and
jnp
out
popf
loop
popa
mov
cmp
daa
lods
test
lret
xchg
fwait
sub
cmpsb
lock
cmp
mov
inc
add
or
sub
iret
pop
xchg
insl
xchg
or
aaa
jbe
cli
mov
arpl
in
fwait
add
iret
mov
xlat
cmp
add
inc
mov
mov
hlt
lea
mov
sti
fdivrp
imul
or
ret
mov
sub
in
sbb
xchg
insl
jb
jns
inc
dec
cmp
ja
add
clc
js
pop
movsl
mov
jg
outsl
mov
rorl
jae
fisubs
xor
xchg
dec
out
repz
fwait
cwtl
jle
aad
xlat
insl
popa
enter
loopne
mov
jmp
out
add
adc
in
inc
pop
xchg
jns
mov
jne
int3
mov
out
outsl
imul
push
data16
sahf
dec
lcall
and
cmp
test
or
movsl
stos
ss
or
das
adc
xor
jecxz
add
in
xchg
rolb
in
repz
sbb
subb
sbb
lret
lret
sub
push
fmull
sar
xor
jl
mov
int3
or
popf
addb
xchg
xlat
inc
or
or
xchg
lahf
xchg
negl
lcall
sar
ja
push
mov
push
inc
outsl
adc
adc
xor
dec
ret
jmp
repnz
xor
ljmp
test
jmp
mov
sti
jbe
xor
shll
xor
imul
out
inc
jl
iret
int
sbb
fnstenv
add
mov
jle
mov
xor
pop
xchg
jg
push
enter
inc
ds
jecxz
cltd
mov
or
gs
and
movsl
push
push
inc
push
leave
push
jb
insl
les
cli
cwtl
leave
add
imul
cmpsb
or
insb
pop
jmp
jne
cmp
sbb
bnd
std
aas
ljmp
sbb
aas
dec
test
stos
repz
dec
sarb
pop
aam
pusha
in
dec
adc
sti
push
insl
pop
xchg
fstl
movsl
push
or
jne
and
or
jno
or
add
mov
and
sbb
and
out
xor
test
mov
pop
add
jg
iret
aad
pusha
fwait
adcb
lret
mov
pop
add
daa
mov
jns
ljmp
ffreep
mov
mov
pop
jae
push
dec
and
cmpl
mov
inc
outsb
add
in
cs
push
lods
push
jl
add
int3
fldt
fnstsw
inc
int
out
call
fmull
adc
enter
cmpsb
es
cltd
xor
idivb
pushf
pop
ret
jg
aad
shrb
lods
add
bound
stos
dec
out
add
test
test
jo
dec
sbb
mov
mov
jge
mov
int
xchg
add
pop
pop
jge
in
in
and
lods
sbb
xorps
add
aas
jg
pop
cwtl
mov
adc
or
xor
and
stos
fisubrs
adcb
popa
cld
xor
or
mov
ss
repnz
das
stos
sbb
pop
sbb
adc
xor
jne
lea
das
aas
inc
int3
mov
or
add
mov
std
js,pn
clc
pop
test
sbb
out
adc
lcall
outsl
fwait
mov
stos
adc
mov
aaa
adc
pop
int3
cmp
sarl
adc
xor
shl
mov
or
and
ja
loope
mov
xchg
lods
sub
hlt
mov
std
jo
sbb
sub
xchg
pop
icebp
adc
lret
jmp
or
xor
cmpsb
cwtl
in
jb
loop
in
jae
jb
pop
stos
aam
cmp
sbb
or
test
and
and
mov
sahf
stos
cmp
fmull
sbb
cs
push
mov
clc
in
inc
fistpl
and
push
jno
into
push
lock
adc
sub
nop
cltd
rol
lock
ja
cli
outsl
pop
mov
mov
ss
jnp
adc
and
sbb
mov
test
js
and
push
and
popa
mov
insl
jmp
add
lahf
push
lods
cld
jbe
lcall
push
imul
push
xchg
jmpw
mov
scas
push
mov
add
and
test
mov
mov
and
es
xchg
mov
or
sbbl
aas
and
fdivrl
adc
pop
mov
xchg
pushf
push
lock
mov
jo
mov
inc
cmp
mov
inc
cmpsb
mov
or
sbb
sub
in
cmp
xchg
daa
pusha
in
jle
outsb
xchg
scas
mov
xchg
xchg
imulb
clc
loopne
cmpl
loop
jb
aad
mov
out
cmp
fcoml
dec
adc
inc
cmp
mov
inc
movsb
mov
aad
in
lods
sub
loope
imul
test
push
stc
jmp
push
lods
movsb
push
cwtl
fcoml
cld
dec
idiv
hlt
xor
mov
dec
loop
pop
cmp
std
int
pop
fsts
or
push
pop
sbb
cmp
sub
imul
stos
cmpl
cmp
stos
stc
inc
nop
pop
pop
jp
stos
and
or
or
xor
inc
outsl
lock
xchg
sbb
and
test
enter
push
xchg
sub
push
ds
jp
mov
mov
test
cwtl
dec
mov
bnd
cmpsl
and
sub
call
cmp
mov
mov
icebp
rolb
jns
add
jne
insb
bound
mov
cmp
push
xchg
in
gs
mov
sub
lock
xchg
stc
xchg
pop
sbb
in
mov
fs
fists
sub
test
fcomip
rorb
xor
mov
mov
mov
jno
cmp
sbb
mov
rcrb
push
mov
mov
jmp
xchg
jae
fists
aad
xchg
mov
dec
roll
xor
shrl
and
test
xchg
and
add
cmp
add
test
out
inc
flds
pop
add
mov
iret
shr
or
iret
fisubl
in
jle
xchg
movsb
xchg
sahf
cld
add
or
cmp
push
movsl
push
or
pop
cmp
int3
out
jns
pop
mov
cmpsb
cmpsb
add
repz
mov
cmp
leave
int
scas
in
mov
test
mov
adc
jb,pt
aaa
addb
fbstp
addl
push
imul
xchg
mov
movsb
sbb
scas
das
mov
stc
addr16
dec
int3
push
andl
sahf
jno
int
add
test
inc
push
push
sbbl
or
mov
inc
mov
mov
push
xchg
mov
and
into
dec
pop
or
dec
lock
add
and
sub
xchg
and
loop
loopne
push
adcb
mov
cmp
fistpl
jmp
mov
repz
les
xor
aaa
lcall
outsb
das
cmp
push
bound
xchg
pop
inc
jo
sub
mov
inc
push
repz
push
jecxz
lea
iret
and
mov
shll
mov
nop
cmp
pop
jb
lahf
je
scas
mov
ds
mov
hlt
push
fwait
sbbl
mov
imul
addr16
cli
fmull
rorl
mov
mov
decl
test
out
mov
and
cs
pop
lock
sti
sub
xchg
pop
fcoms
leave
scas
dec
sbb
or
lea
cmp
data16
arpl
into
popa
lea
je
std
inc
ds
and
mov
movsl
xor
enter
add
outsb
or
pop
rorl
sti
xchg
and
fbld
rclb
mov
orb
jbe
cmc
mov
leave
push
pop
pop
mov
pxor
cmpsl
rcrb
add
inc
leave
in
inc
cld
movsb
pop
inc
adc
aas
fstps
daa
xchg
add
imulb
or
test
xor
shl
ret
rcl
daa
sub
xlat
sub
jno
pop
dec
pop
pop
push
mov
bound
mov
inc
sbb
loopne
in
push
push
add
inc
jg
lret
stos
xchg
out
ffreep
push
pop
mov
lret
pop
scas
push
mov
sbbl
pop
in
mov
ret
sbb
jp
negb
xor
adc
cmp
mov
lret
lret
adc
js
dec
ret
cmp
and
jge
aad
pop
sahf
mov
in
pop
rolb
loope
ds
fbld
mov
pop
mov
xchg
jnp
loopne
lds
scas
push
xor
bound
mov
inc
lds
ljmp
jne
jo
or
cmc
pop
pop
int3
popa
xchg
dec
push
push
pop
sbb
fiadds
pop
pop
out
out
or
mov
dec
pop
shll
aam
xor
pop
push
sbb
ljmp
pop
fldcw
or
sbb
les
jge
and
in
aas
cmp
mov
rorl
adc
fdivl
mov
xchg
push
push
fldcw
out
pusha
mov
inc
fldl
pop
lahf
jbe
xchg
cltd
enter
cmp
adc
arpl
repz
xchg
clc
add
xchg
std
adc
out
mov
push
cmp
adcl
sub
sub
adc
subb
dec
and
push
aas
ja
inc
jmp
sub
adc
sbb
lods
or
lods
mov
add
adc
outsl
in
pop
inc
xlat
jae
repnz
movsl
cmpsl
icebp
sub
outsl
hlt
jo
xor
je
aad
push
cmc
pop
push
cltd
sbb
xor
cmpsb
adc
scas
mov
pop
sahf
lods
sub
je
adc
push
jae
dec
arpl
jecxz
xor
shrb
cld
cmp
push
dec
sub
addb
std
xchg
scas
lds
xchg
pop
orl
xlat
in
jmp
xorl
rclb
ucomiss
mov
push
pop
inc
loop
cmp
adc
xor
icebp
insl
cld
popa
ret
fbld
xchg
nop
hlt
outsb
mov
adc
jl
clc
in
jl
dec
cmc
adc
aas
add
sbb
daa
jb
in
jno
ret
pop
jg
arpl
mov
scas
fwait
shr
enter
pop
testl
cmpsl
and
lret
mov
int
cmc
mov
push
enter
push
inc
add
or
in
cmpsl
iret
sub
push
mov
mov
jmp
mov
cs
or
cs
imul
dec
fidivrl
rcll
fldl
add
repz
inc
jmp
imulb
jle
dec
jg
call
in
jae
int3
jnp
xor
xor
push
mov
iret
pop
sub
push
sub
lret
cmp
mov
mov
jmp
sahf
loop
mov
std
mov
adc
in
push
lret
dec
out
aam
push
cmp
lret
dec
flds
es
xchg
sbb
adc
adcb
jg
and
out
adc
add
lahf
cmpl
adc
push
out
lods
sbb
aam
push
aas
xor
sbb
stc
lods
push
pop
fstl
sub
dec
arpl
stos
or
push
xor
mov
cltd
or
addr16
sbb
and
mov
mov
mov
pusha
sub
cmp
cmp
pop
push
add
lahf
adc
fwait
insl
into
add
test
daa
repnz
bound
mov
pop
js
fst
fimuls
faddl
nop
mov
adc
scas
pop
outsb
lods
inc
shll
gs
mov
and
dec
bound
mov
movsl
xchg
loop
cmp
fsubl
mov
lds
fwait
push
pop
lret
pop
outsb
inc
lea
insb
cmp
mov
xlat
dec
add
mov
idivb
mov
in
testl
adc
adc
jl
xlat
jle
mov
movb
repnz
test
mov
lahf
xor
out
scas
cmp
cwtl
test
ss
cmc
mov
mov
dec
loop
xlat
loope
stos
mov
stos
sahf
jp
jne
pushf
mov
pop
jnp
pop
insb
mov
mov
add
pop
sbb
or
dec
mov
lds
in
xchg
lock
pop
mov
push
mov
ror
lret
scas
inc
sbb
loopne
stc
push
test
ret
jmp
mov
mov
in
incb
cli
pop
mov
shr
sahf
cmpsb
pop
mov
std
push
outsl
dec
add
jno
pop
cmpsl
lea
cmp
add
adcb
adc
in
pop
js
pop
push
sub
sbb
adc
outsb
xor
dec
add
in
push
xchg
int
faddl
clc
inc
mov
xchg
cmp
clc
ja
sbb
mov
and
fucomp
into
mov
jbe
test
mov
push
sub
stc
das
dec
push
add
jecxz
mov
inc
cmpsl
add
sub
xor
xchg
and
sbb
imul
jle
push
lcall
lret
add
ret
dec
xorl
dec
mov
mov
cmp
sbb
dec
out
cmpsl
mov
push
test
cmp
mov
jge
das
cwtl
and
xor
sbb
mov
add
sbb
sub
ret
mov
cwtl
fdivrs
nop
adc
jbe
and
inc
or
enter
mov
dec
mov
push
xchg
and
jecxz
fisubrs
push
pushf
xchg
test
push
add
sub
popf
pop
mov
and
scas
test
ret
and
dec
stos
repz
cmp
dec
xor
push
mov
jae
getsec
fsubrl
xor
insl
rcrb
cmp
imul
dec
in
inc
loope
dec
dec
inc
out
je
xchg
clc
mov
inc
sub
test
xlat
stos
lock
rcrl
in
sub
mov
repnz
cs
faddl
inc
cmp
subl
xor
jno
test
xchg
push
pop
mov
in
roll
sahf
scas
je
sub
lds
mov
scas
xchg
sbb
cmp
jb
sub
fmull
mov
xchg
aaa
pop
movsl
fldl
sub
mov
pop
cmp
cmp
mov
loop
ljmp
inc
sbb
or
pusha
test
xchg
fisttpl
add
mov
es
mov
push
jnp
imul
imul
fs
jp
icebp
cs
shrb
pusha
divb
jns
nop
mov
and
mov
mov
push
aad
fs
movsb
imul
and
mov
mov
popa
out
mov
les
push
sub
mov
fisubl
push
and
fbstp
sub
mov
aam
ret
mov
nop
shrl
into
xchg
int3
mov
mov
add
push
pop
dec
scas
mov
add
xor
cmp
xchg
aam
jne
ljmp
inc
lret
scas
add
xor
mov
push
push
pop
mov
mov
fdivrl
lcall
mov
mov
into
sub
out
fbld
scas
call
jmp
inc
mov
movb
mov
jae
sarb
push
clc
jbe
push
ss
xchg
enter
inc
and
scas
inc
jb
loopne
mov
and
or
or
js,pt
dec
lods
mov
xchg
pop
jmp
xorb
cmp
sub
js
jns
incb
popa
aas
push
and
push
mov
adc
call
sub
pop
movsl
inc
aas
lahf
dec
inc
add
je
jecxz
sbb
or
es
int3
popf
jno
fcomi
inc
add
outsb
es
mov
insl
jb
xor
jle
inc
adc
fwait
dec
test
jl
push
ss
ljmp
or
ror
pop
adc
adc
mov
repnz
xchg
outsl
mov
mov
scas
push
mull
jecxz
ret
jne
scas
dec
std
fwait
mov
loop
jecxz
push
push
mov
dec
das
mov
pop
push
sub
and
push
stc
add
enter
shl
mov
push
shlb
push
push
xorl
mov
cwtl
testl
nop
mov
mov
pop
lods
into
push
mov
jae
addr16
pop
xchg
jb
cli
adc
fbstp
xchg
cmpsl
ljmp
sub
out
sbb
std
into
es
fwait
pop
shlb
or
fbld
jb
xchg
arpl
sub
sub
pop
add
into
test
lret
inc
sbb
test
aas
xchg
iret
push
adc
mov
xchg
mov
xor
lock
and
xchg
inc
sbb
nop
mov
je
fs
jp
out
into
push
jne
enter
outsb
xchg
pop
push
sbb
xor
mov
jp
aaa
subb
mov
in
push
inc
lret
shr
inc
mov
or
negl
int3
mov
mov
mov
scas
add
cmpsb
xchg
pushf
adc
xorl
roll
dec
fidivs
xor
cltd
xchg
xor
jns
ret
stos
ds
aas
jb
xchg
or
dec
cmp
inc
push
sti
stos
jbe
jecxz
pop
or
lods
cs
adc
test
mov
lds
push
ljmp
loop
mov
je
mov
jo
clc
jb
mov
sbb
pop
mov
adc
ja
out
ss
or
shrb
popa
or
fistps
out
sub
mov
fimull
mov
insb
pop
andb
add
mov
adc
aas
test
mov
out
test
dec
push
inc
fmulp
jmp
push
pop
xchg
out
pop
jns
aaa
loop
xchg
aad
mov
dec
sub
mov
out
out
jne
loopne
sub
xorb
dec
out
add
adcb
mov
pop
dec
sub
cmc
lds
testl
add
in
fs
leave
mov
ret
pop
mov
int3
pop
cmp
leave
inc
das
adc
nop
test
sbb
sub
pop
lods
jl
adc
fnsave
cmpsb
push
sbb
outsb
cmp
pop
xchg
in
jmp
pop
jp
push
lds
mov
or
lods
mov
or
test
xor
fdivr
pop
xchg
rcrl
push
push
sub
push
pop
fs
and
outsb
mov
xor
push
test
push
test
arpl
stos
shrb
mov
lea
mov
mov
xchg
jle
jnp
push
jae
mov
jo
xchg
inc
inc
out
xor
jg
or
push
add
mov
sbb
shl
iret
cmpsb
cmpsl
xor
sbb
xchg
mov
jl
sahf
cmp
mov
sbb
mov
ljmp
sub
xchg
outsb
pop
call
dec
repz
bnd
insl
lods
in
lea
mov
ljmp
pop
cmp
adc
jecxz
loop
daa
repz
lock
jo
pop
inc
or
out
mov
xchg
or
mov
adc
mov
adc
test
mov
jmp
pop
orb
push
sbb
cs
es
imul
roll
fildll
inc
test
jb
inc
pop
push
lods
cld
dec
cwtl
lea
ret
and
scas
cmp
mov
cmp
pop
jg
enter
and
movsl
dec
icebp
sbb
push
cli
outsb
xor
pop
mov
and
xchg
xlat
mov
insb
adc
push
in
faddl
std
lds
insl
sbb
or
pop
or
in
xchg
insl
fisttps
iret
in
pop
movnti
inc
ficomps
ja
dec
cmp
call
dec
fidivs
lods
xchg
repnz
sub
pop
or
mov
cmp
popa
leave
jmp
fwait
or
pop
xchg
fadds
and
gs
sbb
arpl
xlat
cmp
pop
cmpsb
adc
mov
pop
daa
in
mov
iret
inc
sub
leave
shlb
adcl
inc
popa
js
jmp
mov
cmp
and
jmp
jmp
movsb
outsb
sbb
aaa
dec
adc
repnz
pop
leave
push
xchg
jne
adc
push
mov
in
nop
cli
or
fwait
mov
or
loope
sarl
test
sbb
dec
pop
push
call
loopne
mov
cmp
cmpsl
sub
fs
xchg
mov
dec
stc
in
add
dec
mov
pop
jecxz
scas
sbb
push
jno
es
push
mov
pop
scas
add
call
jle
xorl
sub
rcrl
mov
or
xor
ds
and
in
or
dec
dec
aam
in
mov
pop
pop
or
lahf
mov
xchg
out
jnp
xchg
mov
push
sub
push
sub
jb
testl
out
ds
flds
lcall
sub
cmp
push
mov
fs
sub
int3
testb
xchg
add
nop
add
call
sbb
cli
adc
data16
mov
adc
loopne
mov
lret
mov
pushf
mull
cmp
subb
std
jge
push
insb
cmp
and
shrl
aad
xchg
ret
out
sub
test
sbb
adc
jne
fldenv
jnp
movsl
xchg
sub
ret
js
movsb
inc
test
pop
pop
jns
mov
inc
xchg
dec
cmp
fwait
dec
or
xor
cmc
ret
les
jp
lock
inc
fs
xchg
add
dec
inc
enter
xor
mov
test
jne
and
adc
lret
sub
ror
repz
pusha
fists
add
shrl
faddl
sbb
fdivrs
fdivs
adc
std
lahf
xchg
jl
fs
lret
add
cltd
fcomps
push
mov
mov
and
insl
pop
dec
loope
shr
std
lahf
roll
mov
sbb
test
push
mov
xor
shlb
cmp
jb
cmp
cmpsl
mov
mov
test
lret
jae
lods
cmpl
xor
enter
push
outsb
test
push
jb
inc
cmp
fwait
pop
jmp
or
xor
or
stc
cs
sub
scas
jmp
lods
punpcklwd
push
arpl
sbb
popf
outsl
sbb
mov
ret
cmpsl
dec
pushf
or
xchg
mov
dec
or
jns
loopne
adc
or
cmpsl
cmp
and
out
add
imul
xor
or
xchg
or
add
adc
cmpsl
jnp
push
xor
inc
xor
scas
inc
or
pushf
in
mov
hlt
add
and
addl
cmp
cmpl
mov
decl
sub
lods
xor
add
ljmp
add
shlb
xchg
xchg
jp
mov
pop
xchg
out
leave
or
sub
mov
shlb
sarb
stos
adc
xor
dec
xchg
into
aad
gs
mov
adc
test
ret
sub
xor
arpl
orb
cmp
clc
jbe
loop
add
push
shrb
mov
sub
mov
fdivl
into
jge
mov
imul
out
pop
shl
push
fs
lods
add
fidivrs
inc
addr16
ret
mov
ljmp
enter
cmpsb
fwait
mov
cmpsl
aam
dec
inc
lods
sub
sub
add
push
push
and
mov
jno
cmp
stos
pushf
ret
jg
out
fldt
mov
mov
push
pop
mov
mov
inc
icebp
sahf
mov
jg
mov
lods
data16
cs
stos
imul
aam
jns
adc
out
dec
imul
add
push
mov
inc
push
mov
or
mov
adc
gs
jae
lcall
jp
into
divl
push
dec
addr16
out
sbb
je
xchg
and
lret
mov
mov
cmp
test
xchg
call
insb
xchg
inc
lahf
loope
popf
cmpsl
add
mov
out
cld
inc
sbb
push
in
xchg
cmc
jne
decl
aas
arpl
loope
or
insb
pop
mov
loope
jo
pop
adc
jne
jge
movsb
jne
jne
std
xchg
dec
into
and
push
push
insl
movsl
ret
mov
adc
pop
cmovno
add
loope
and
mov
rolb
ret
into
cld
popa
and
ljmp
xsavec
dec
sbb
jns
xor
xchg
es
test
mov
push
roll
mov
pop
cmp
inc
out
or
shr
test
cmp
lret
loope
loope
inc
mov
orb
fcoms
sbb
jp
jbe
int
and
je
sahf
test
add
xorb
adc
xchg
popa
mov
data16
pushf
leave
insb
and
mov
mov
push
pop
mov
movl
cmp
movsl
cmp
jl
pop
lahf
test
and
jg
jne
xchg
sub
movsl
mov
pushf
popa
add
outsl
or
fistps
mov
lods
pop
rorl
xchg
pusha
scas
push
lods
pop
add
adc
lret
sahf
stc
pop
jbe
dec
movsl
inc
ficomps
cmp
setno
call
xor
xor
mov
cmp
pop
scas
je
aaa
inc
push
add
das
ret
ss
les
mov
add
daa
xchg
sti
mulb
loopne
add
xchg
out
push
dec
and
cmp
dec
imul
mov
ds
lds
scas
jg
in
pusha
lahf
jg
jl
xchg
icebp
fninit
xor
mov
insb
mov
mov
mov
pop
nop
fdiv
dec
adc
sbb
lcall
scas
add
ds
fdivr
xchg
push
add
add
xor
jno
jbe
and
repz
jo
aas
mov
pop
dec
sub
ja
adc
test
mov
dec
cmc
cmpsl
aaa
and
aas
mov
in
sbb
jp
dec
popa
aaa
lret
or
mov
hlt
cmc
bound
loopne
cmp
adc
add
outsb
or
loopne
xchg
daa
nop
out
adc
hlt
jle
mov
jne
pop
fsts
cmc
and
cs
adc
pop
push
out
in
hlt
jl
and
cmp
imul
enter
mov
xchg
je
lcall
and
orl
pop
fisttps
sub
int
les
gs
mov
in
sub
cwtl
jg
inc
mov
clc
xchg
dec
enter
ret
incl
mov
insb
jp
mov
cmp
mov
fisubrl
xchg
and
and
shll
hlt
sbb
sbb
cmp
xor
sub
roll
push
cmp
mov
fs
dec
jmp
lds
xorl
lcall
ret
lcall
jnp
xchg
cmp
dec
cwtl
sub
lods
mov
mov
shrl
push
pop
add
pushf
imul
push
xlat
or
fsubl
pop
push
jmp
add
pop
jl
leave
and
cmpsb
repz
jno
jo
lds
push
sub
les
adc
shl
in
jmp
dec
xchg
ret
mov
jo
add
cmp
in
push
bound
jmp
xor
mov
jp
fdivr
je
jno
jo
data16
call
push
inc
xor
clc
dec
and
adc
sub
popa
dec
popf
int3
mov
cmpsl
lahf
push
ret
push
and
sub
mov
xchg
sbb
sub
cmpsl
popa
daa
in
sbb
sti
mov
add
mov
das
rolb
fstl
inc
addl
fucomp
insb
sbb
jbe
xchg
or
pusha
jbe
or
mov
ja
test
adc
das
clc
adc
dec
aas
into
mov
jnp
mov
mov
mov
jns
ret
xchg
and
inc
jae
and
add
btc
push
cmp
cmpb
cltd
ja
sbb
sub
push
pop
cmp
pushf
inc
or
push
jecxz
jp
pop
imul
outsl
daa
cs
mov
stos
imul
jbe
stos
outsb
fdivrp
sahf
mov
xchg
mov
pop
jno
adc
dec
xchg
push
cmpsl
jae
cmpsb
shrl
mov
loope
adc
mov
lret
pop
loop
mov
adc
cmp
hlt
call
jbe
lods
jno
inc
inc
or
and
imul
cwtl
pop
push
stos
rolb
sub
pop
push
int
inc
out
sub
dec
fildl
sub
xor
repz
in
jns
push
je
or
and
adc
sub
mov
push
daa
mov
mov
push
jne
mov
push
jbe,pt
mov
adc
andl
push
rorl
je
inc
pop
push
mov
xchg
nop
mov
add
add
add
out
mov
push
out
outsb
jbe
mov
adc
daa
clc
adc
jle
or
rcr
insb
jnp
aas
out
lds
and
dec
push
or
pop
jbe
xchg
fwait
clc
test
dec
frstor
adc
pop
cmpsl
fldenv
and
push
popf
sbb
jecxz
ja
fwait
je
xor
mov
lret
add
es
pop
adc
add
dec
mov
pop
push
sahf
jmp
jmp
js
lar
jne
xchg
pop
push
push
jl
or
cltd
mov
push
jb
outsb
mov
stc
push
mov
add
icebp
movsb
add
outsl
mov
daa
mov
repz
sub
dec
mov
xlat
and
push
jbe
outsb
add
mov
daa
sbb
jo
sub
dec
cmc
and
pop
cmp
ss
xor
and
mov
adc
js
aas
inc
cld
insl
jl
rol
xlat
dec
inc
pop
imul
movsb
repnz
imul
mov
aaa
pop
fwait
mov
testb
push
subb
jp
ret
roll
mov
jnp
or
mov
sub
mov
bnd
aad
shlb
aaa
jle
inc
dec
loopne
and
or
add
cmp
filds
loope
mov
shlb
xor
fsubs
popf
mov
dec
jmp
test
jne
dec
jmp
add
lods
dec
xchg
cmp
loopne
pushf
lret
xchg
outsl
jae
mov
sbb
iret
icebp
xchg
adc
xlat
in
xor
mov
mov
xchg
pushf
jne
cmp
adc
ja
adc
repnz
xchg
jae
jge
adc
jo
mov
inc
mov
adc
insb
xchg
mov
iret
sbb
mov
js
andb
lods
gs
fstp
iret
and
pop
mov
or
cmp
mov
mov
insl
jo
arpl
add
divl
sbb
cmpb
pop
dec
push
lock
int
nop
jg
cmp
cltd
and
mov
stos
inc
adc
mov
outsl
and
sar
or
xchg
cmp
mov
sbbl
mov
jno
sbbb
xor
cmpsl
inc
xchg
mov
xchg
nop
stos
lcall
push
rolb
sub
rcll
pop
lret
pop
out
scas
lahf
fsubr
or
roll
add
loopne
or
out
aad
mov
daa
repz
shll
enter
xchg
addl
xor
ss
scas
aaa
cli
jae
out
outsb
js
orb
aad
sahf
pop
xor
push
and
loop
addb
jle
and
iret
push
sbb
stos
shlb
in
and
mov
test
cli
dec
push
mov
inc
fcmovbe
jae
inc
imul
nop
rcrl
inc
adc
stc
add
outsb
flds
inc
xor
mov
lock
or
mov
ret
mov
decb
aad
xlat
add
pop
pop
sub
outsb
mov
and
in
mov
lcall
mov
lock
cld
mov
scas
xchg
pusha
xchg
cmp
sub
jmp
push
subl
lret
cmc
dec
xchg
push
pop
adc
or
sbbb
add
subb
lret
scas
adc
rcl
mov
lock
ss
inc
mov
xor
scas
pop
push
icebp
cmc
cmpsl
push
inc
mov
test
jg
inc
rcl
mov
int
lock
and
scas
test
mov
and
fmull
loop
push
sahf
mov
gs
outsl
dec
jmp
rcrl
xchg
pop
rcl
sub
clc
and
lds
sbb
xor
incb
xchg
pop
out
lds
xchg
xchg
sbb
cmpsl
addl
inc
inc
lea
inc
pop
insb
mov
jb
inc
enter
mov
mov
idiv
push
jbe
xor
xchg
sbb
stc
xchg
lahf
pop
cwtl
scas
mov
gs
cmpb
fs
sub
jne
and
xorb
cltd
outsb
push
movsb
mov
movsb
mov
dec
loop
xor
insl
or
out
xchg
and
lret
fnstcw
pop
push
shll
repnz
les
rorl
sbbb
rorb
fcoms
andl
adc
jmp
rorl
ret
sub
mov
inc
mov
xchg
pop
arpl
outsb
lcall
cmpsl
sub
jno
mov
loopne
cmpsb
or
xchg
popa
push
sahf
adc
mov
pop
mov
pop
mov
mov
lods
pop
out
lds
bound
or
int
sub
and
out
fdivrl
pop
dec
loopne
xchg
cld
xchg
ja
mov
aas
movsl
jmp
cmp
scas
aas
lret
cltd
ret
repz
call
imul
jl
dec
mul
pop
xchg
test
iret
mov
add
mov
push
inc
stos
xchg
lahf
fnstsw
sbb
enter
xchg
fwait
lea
mov
shll
mov
loope
in
pop
iret
xchg
xorl
dec
fld
jmp
pop
pop
cmp
mov
adc
lods
xchg
loope
loope
xchg
stos
sub
fprem1
leave
sub
inc
faddp
call
rcrl
leave
cmc
xchg
lret
scas
scas
test
ds
mov
icebp
scas
dec
divl
adc
rcl
dec
setns
movb
nop
pop
sbb
out
add
lds
outsb
repz
dec
popf
popf
adc
fwait
lock
loope
pop
cmp
pop
xchg
mov
lods
add
mov
pushf
incl
mov
push
dec
in
push
xlat
lret
jg
xor
dec
in
sbbl
lret
dec
inc
jg
mov
outsb
add
arpl
dec
push
fisubrl
fnstsw
dec
fnstenv
scas
outsl
jle
test
fs
lds
mov
rolb
dec
mov
sbb
xlat
arpl
lret
jo
mov
xchg
gs
sbb
mov
cmc
push
pop
pop
ljmp
movsb
sti
outsl
xchg
or
aam
aad
imul
or
mov
xor
aam
icebp
sub
jge
dec
fimuls
xchg
ss
das
subl
jle
mov
mov
and
dec
mov
jge
mov
rorl
adc
pop
cmp
push
and
mov
test
cmp
daa
popa
adc
cmpsb
rclb
mov
xor
pop
sub
mov
mov
fistpll
loopne
scas
pop
mov
dec
add
rcll
into
push
sbb
xor
loope
test
push
das
adc
push
add
pop
add
sbb
cmpb
cmp
inc
sub
leave
xchg
int
mov
inc
fldcw
jo
inc
inc
pusha
push
push
mov
jl
rsqrtps
push
mov
push
faddl
push
cmpsb
mov
dec
mov
inc
lods
dec
outsl
lret
ret
mov
arpl
xchg
sbb
aas
mov
xor
dec
jno
xor
adc
hlt
lea
sbb
jp
clc
add
and
cltd
les
ja
call
adc
rclb
mov
repz
dec
pop
cmp
in
add
lret
shrb
fwait
sbb
fwait
mov
jnp
dec
fistpl
push
sbb
push
xlat
idivb
xor
test
aam
mov
push
dec
imul
dec
fldcw
repz
push
cmpsl
jle
out
xor
popa
adc
fwait
imul
jle
aad
xchg
xchg
ljmp
jmp
or
cmp
cmp
movsl
jnp
pop
decl
xchg
popf
aaa
scas
push
shll
aas
in
fmull
mov
xchg
ds
repz
sbb
inc
test
mov
or
sub
scas
ja
inc
push
cld
mov
insb
mov
or
sbb
sbb
lea
loope
and
mov
push
in
push
xchg
or
jmp
sub
in
jge
push
pop
cwtl
push
or
clc
out
push
inc
xor
jne
mov
push
dec
inc
jne
cltd
daa
dec
ret
test
jp
cld
subb
sbb
data16
in
aad
sbb
mov
and
mov
jbe
andb
addr16
inc
lret
xor
jmp
pop
pop
push
dec
sbb
dec
mov
inc
cltd
jl
dec
addr16
or
inc
mov
adc
bound
shrb
xchg
push
fs
mov
add
mov
jb
and
xchg
subl
mov
xchg
or
dec
negl
xchg
cwtl
nop
xor
rcrb
push
adc
imul
iret
inc
in
movsl
push
push
add
pop
inc
adc
arpl
inc
imul
pop
mov
pop
popf
push
insb
insl
pop
fisttpl
adc
mov
pop
pop
add
aaa
or
mov
fcompl
mov
pop
repz
sub
jnp
jnp
mov
mov
in
cmp
jne
jmp
xchg
cwtl
aaa
hlt
xchg
subl
test
jno
jle
mov
push
orb
cmp
out
dec
testl
fcoml
sbb
dec
xor
jae
cli
and
rcll
shl
push
cwtl
jecxz
std
xchg
mov
mov
xor
push
pop
lret
jo
loopne
hlt
mov
andb
adc
lods
add
int
in
icebp
out
mov
imul
mov
inc
and
pop
and
xor
movsb
mov
cld
test
mov
call
je
cli
fs
fildll
push
inc
cmpsl
adc
push
fmul
repz
mov
pushf
jl
xor
or
adcl
push
push
sbb
sub
and
xchg
push
shlb
jno
inc
aad
push
popa
jecxz
ljmp
into
and
fiaddl
icebp
fucomi
sbb
mov
les
idivb
sti
pop
cwtl
ss
adc
adc
lea
int3
adc
mov
leave
jbe
mov
or
or
loope
into
mov
push
or
aas
xlat
mov
shl
jl
stos
andb
mov
cli
aas
cltd
mov
add
push
push
clc
lds
or
fadds
push
jecxz
ret
lcall
push
aad
adc
mov
adc
sub
inc
outsb
mov
fimull
int
cltd
sub
scas
sahf
aas
jo
into
scas
addr16
push
inc
repnz
repnz
pushf
sub
out
xor
pop
sti
fmull
scas
pop
jbe
es
dec
popf
cmp
movsb
aaa
sbb
sbb
and
int
les
mov
ss
arpl
adc
cmovg
mov
push
xor
pop
inc
sub
cmp
mov
call
imul
lahf
loope
imul
or
sub
lods
orl
add
jle
test
mov
cli
ficoms
cwtl
xchg
imul
pop
cmp
out
lcall
in
sub
cld
mov
and
mov
bound
pop
adc
cwtl
in
cwtl
cwtl
arpl
xlat
out
jae
pop
inc
dec
push
pop
subl
dec
nop
mov
leave
lods
test
and
xor
or
and
aas
lahf
xlat
push
xchg
mov
add
ja
loop
mov
insl
sbb
add
dec
mov
shl
fisttpl
cmp
scas
push
test
mov
inc
pop
repnz
mull
xchg
std
pushf
adc
push
push
sbb
pop
daa
xor
lock
shlb
cwtl
jg
cmp
mov
and
inc
add
xchg
mov
and
and
mov
insl
mov
mov
rol
sub
lea
ret
shr
inc
adc
add
out
pop
fstpl
jecxz
mov
mov
inc
fwait
push
inc
cwtl
mov
leave
jg
repnz
arpl
dec
aam
push
loopne
mov
mov
dec
or
jp
fs
icebp
push
int3
fwait
loop
shl
clc
and
jmp
pop
lea
and
adc
mov
cmp
negb
out
shlb
or
xchg
adc
adc
out
sbb
add
fsubrp
clc
call
xchg
pushf
mov
lea
push
dec
and
pop
or
int3
xchg
test
dec
addr16
pusha
into
in
pop
cli
adc
cmp
paddusw
jmp
push
push
stos
xchg
pop
push
xlat
fldl2e
mov
and
hlt
mov
out
mov
pop
sti
in
inc
test
jae
addr16
iret
es
mov
mov
adc
push
call
pop
divb
adc
pop
xchg
sbb
cltd
mov
mov
sbb
out
xorb
popf
or
xor
push
mov
lret
cmp
mov
sub
bound
enter
mov
jle
movsbl
cmp
dec
enter
mov
imul
bound
mov
mov
popf
jne
pop
xor
dec
lods
mov
sbb
cmp
in
add
in
sbb
mov
nop
test
fcomps
cltd
in
popa
cmpsl
fwait
push
xor
sbb
push
imul
mov
xor
push
cmpsb
shr
and
inc
sub
ljmp
push
sub
pop
jp
cs
test
dec
aam
lret
jno
out
xor
jne
imul
std
ret
outsl
ss
push
sub
stos
clc
push
ret
xor
les
int3
xchg
inc
movsl
jmp
sbb
add
mov
cmp
mov
jl
daa
add
xor
xchg
sbb
sub
int
iret
loop
fstps
push
mov
stos
sbb
repnz
add
testb
lock
mov
xor
mov
nop
or
or
jg
in
gs
cmpsb
shll
shll
outsb
nop
cmp
popa
cli
xor
or
gs
pop
mov
ljmp
cltd
movl
inc
push
subl
hlt
mov
or
add
test
push
push
jmp
pop
pop
jmp
shlb
emms
push
xor
jns
dec
or
adc
cmc
mov
sub
sbb
fs
or
movsl
testb
push
test
movsl
jg
push
cmp
insb
and
divl
lcall
dec
fbld
cs
mov
mov
jno
xor
push
mov
cs
push
movsl
popf
and
ss
pop
xor
jl
jne
pusha
mov
jno
idivb
add
sbb
sub
cmp
call
insl
scas
or
xor
lcall
decb
sbb
adc
jo
xchg
insb
in
or
jno
mov
inc
cmc
int3
stc
fiadds
mov
pop
or
sub
inc
sahf
pop
push
out
rcrb
adcb
and
push
sbb
dec
pop
pop
notl
mov
stos
xor
add
jge
ljmp
sub
jle
js
in
ljmp
ljmp
loopne
ret
ja
and
ficompl
push
mov
mov
hlt
test
popf
cmpl
mov
movsl
rcrb
outsb
sbb
lret
pop
mov
cmpsl
dec
test
loopne
pop
aam
and
and
add
add
sbbb
add
packsswb
mov
push
push
jae
into
mov
mov
adc
xchg
sub
in
pop
add
mov
pop
js
je
push
icebp
xor
cmc
sarb
ljmp
das
dec
adc
aaa
cmpb
sub
std
mov
jmp
sar
test
cmp
pop
test
xchg
mov
mov
lds
pop
mov
pop
dec
xor
nop
cmp
cmp
mov
mov
and
xchg
rcrb
inc
lds
mov
mov
daa
mov
loopne
add
sbb
shlb
xchg
ficomps
aam
mov
paddsw
push
sbb
rorl
pop
adc
es
stc
inc
xchg
fidivrs
inc
or
mov
add
dec
mov
in
bound
shlb
push
mov
mov
out
hlt
adcl
ret
cmp
mov
and
push
add
adc
out
mov
adc
mov
popf
loop
into
push
dec
xorb
cli
hlt
cld
leave
dec
push
mov
xor
in
jnp
xor
fwait
jl
mov
cmovo
adc
fstps
dec
jle
iret
jg
in
ljmp
ret
adc
adc
mov
bound
inc
sub
in
scas
sub
push
add
dec
sub
jmp
add
lods
mov
int
and
jmp
sbb
int
fcom
fs
mov
jnp
inc
imul
pop
mov
lock
lcall
cmp
dec
lock
jl
adc
xchg
xor
mov
mov
inc
jns
xlat
mov
mov
lret
pop
lds
lret
mov
inc
lahf
mov
mov
adc
and
cmp
imul
jbe
lahf
loopne
lret
mov
aam
lret
mov
aad
int
imul
pop
add
scas
pop
push
fcom
mov
adc
rclb
stc
mov
loope
inc
mov
scas
push
dec
std
outsb
cwtl
xchg
cmp
push
and
divb
stc
dec
jnp
test
sub
push
jae
dec
cmp
or
clc
jnp
stos
icebp
bound
loope
shr
push
aaa
cltd
sbb
inc
lods
push
outsl
repz
sbb
pop
jne
dec
xchg
mov
in
in
mov
pop
movsb
sub
imul
xchg
and
mov
mov
mov
inc
sbb
dec
cli
shll
inc
scas
push
stc
sti
pop
or
imul
sub
lods
fcomip
dec
dec
xor
jmp
cmp
ffree
cmpb
or
dec
mov
outsl
or
js
inc
push
xor
jno
adc
push
fbstp
mov
out
jo
out
lahf
ret
movsl
pop
int
clc
lcall
mov
fwait
ss
scas
mov
ss
imul
xchg
mov
arpl
test
es
add
lods
mov
lods
insb
mov
push
ljmp
das
pop
and
stos
jge
xor
inc
dec
push
dec
xchg
add
sub
jno
lods
fidivrs
repz
mov
mov
ret
mov
ljmp
and
push
push
and
sbb
add
inc
in
das
adc
jmp
jbe
aam
rcrl
jle
xchg
lea
xchg
scas
jnp
fldl
xchg
mov
ljmp
bound
inc
lret
popa
js
push
insl
lret
jae
das
dec
jb
stos
cltd
mov
insl
clc
pushf
out
cmpl
add
pop
push
jo
inc
imul
stc
pop
jl
ss
loop
sub
cs
iret
aas
in
jbe
sti
sbb
jge
adc
orl
stc
adc
shlb
stc
mov
push
sahf
mov
inc
jg
push
dec
cmp
mov
lret
push
test
aas
and
mov
push
in
jl
hlt
ret
bound
cltd
outsl
clc
sahf
sub
ja
inc
push
popa
in
ljmp
push
outsb
into
jp
jmp
movsb
push
mov
jg
gs
or
mov
sbb
nop
ss
das
xchg
cmpsl
fisubl
lret
int
aam
xchg
stos
lods
jne
hlt
cltd
cmp
notb
inc
adcl
nop
pminub
mov
aad
mov
lea
test
cs
test
adc
mov
js
push
dec
mov
cli
pop
mov
fidivrs
rcrb
popa
sbb
lods
sub
outsb
cmc
push
out
pop
add
cli
pop
out
fisubl
mul
cmp
repz
lcall
fistpl
xor
pop
roll
lret
cmp
aaa
pushf
int3
cli
jecxz
es
mov
adc
dec
jge
repz
mov
fst
jecxz
cmp
or
pop
hlt
mov
or
pop
and
mov
cld
test
mov
in
xlat
xchg
pop
fscale
mov
pop
cmp
addl
js
lahf
sub
dec
pop
call
or
adc
hlt
fwait
mov
rcrl
orb
mov
xchg
lret
ss
push
stos
outsl
jge
aad
popa
sub
add
in
jae
test
dec
clc
push
imul
push
pop
cld
aam
nop
xchg
pop
mov
fxch
jp
iret
add
push
sub
cli
mov
mov
sbb
fmull
xor
push
xor
pop
aaa
insl
fs
jl
push
gs
sbb
outsl
les
dec
lea
out
jg
test
jge
mov
jno
mov
xchg
mov
fs
pusha
inc
lahf
or
sti
mov
out
cltd
in
mov
pusha
mov
mov
adc
mov
std
cmp
repz
ljmp
test
and
sbb
lret
push
lahf
pushf
ljmp
adc
jne
in
lahf
or
adc
pop
sti
rclb
dec
frstor
push
out
cmp
aad
inc
cmc
les
sahf
into
scas
divb
test
mov
jnp
maxps
sbbl
or
notb
test
ror
push
adc
push
dec
stc
pushf
jmp
push
popf
sbb
out
jnp
xchg
fwait
in
xchg
stc
std
mov
sub
lret
xor
pop
fdivrs
lret
add
clc
out
div
mov
xlat
ljmp
or
dec
sbb
sti
lahf
sbb
mov
lds
jbe
mov
pop
inc
push
in
iret
push
test
push
xchg
jnp
ret
lock
shrb
das
int3
roll
jo
jne
movsl
inc
jns
xor
aad
mov
stos
or
jne
dec
dec
adc
mov
inc
inc
fsubrs
sbb
inc
xor
inc
cmp
sub
jae
movsb
into
add
push
pop
mov
pop
dec
mov
icebp
sbb
jg
mov
mov
cli
and
or
jnp
loop
sarb
xchg
mov
stos
adc
xor
mov
insb
test
push
das
xor
loopne
sbb
mov
pusha
lods
pop
sub
xor
mov
ret
jae
xchg
jmp
jg
or
sbb
loopne
fwait
mov
stos
push
loope
mov
jle
sbb
notl
repz
aam
mov
movsb
dec
sarb
dec
ficompl
inc
out
mov
xor
mov
or
fdiv
push
pop
jmp
lock
cltd
inc
and
mov
out
xor
pushf
mov
mov
rolb
xchg
mov
mov
cmp
mov
lock
aas
mov
repnz
pop
and
cmp
jle
nop
adc
pop
icebp
pop
inc
xor
push
xchg
mov
decb
add
loope
dec
fcmovnb
pop
xchg
aas
testb
pop
lock
lret
enter
scas
inc
or
out
lret
mov
mov
pushl
xchg
cmc
scas
push
pop
inc
fiadds
mov
jl
outsb
test
repz
fsubs
push
pop
mov
adc
and
ds
xor
jne
mov
mov
out
sub
pusha
jge
mov
cmp
jb
mov
xchg
out
xor
stos
sbb
test
fcmovnb
pop
movsl
or
pop
ljmp
mov
movsb
mov
adc
or
jae
xchg
or
lock
test
dec
jmp
add
jge
and
push
xor
movsb
pop
hlt
pop
sar
pop
pusha
mov
je
push
jecxz
popa
mov
mov
pop
imul
pop
push
fildl
fistpll
cmpsb
and
mov
mov
and
es
pop
xchg
add
cmp
mov
inc
in
imul
aaa
pop
sti
sub
pop
scas
int
sub
pop
ret
lock
imul
sbb
sbb
fldl
mov
lahf
sbb
idivl
add
dec
sbb
mov
pop
iret
push
sub
add
xchg
push
pop
call
pop
scas
xchg
mov
add
leave
cwtl
fwait
mov
xchg
push
and
and
scas
jle
test
push
clc
mov
fdivl
mov
push
lods
test
jl
cmp
push
inc
lret
or
cmp
mov
adc
fisttps
push
fldenv
les
inc
shll
rol
mov
mov
in
or
je
test
clc
push
stc
scas
pop
xchg
inc
add
fsubrs
cltd
jge
cltd
dec
dec
cwtl
jmp
lret
pusha
mov
mov
adc
pusha
data16
arpl
push
sub
repnz
mov
and
cmp
dec
cmp
shll
inc
push
or
mov
cmpsb
lods
sub
shrl
rcrl
std
mov
and
cmp
fadd
fisubs
hlt
inc
or
lahf
mov
lods
mov
xchg
jae
and
push
ja
enter
xchg
ret
mov
clc
mov
ljmp
or
fidivs
shl
cmp
or
les
adc
xchg
mov
aad
sahf
ja
inc
movl
adc
mov
insb
mov
inc
into
jno
mov
ds
outsb
or
test
jb
sbb
xchg
jne
shlb
cmp
push
addl
adc
cltd
jp
push
test
das
push
in
imulb
jae
add
test
rcrl
in
movsl
lret
inc
sub
lock
fwait
pop
or
jns
mov
sbb
pop
xchg
or
lock
inc
add
cltd
xor
imul
cwtl
cwtl
movsl
lods
f2xm1
xchg
in
jmp
inc
add
cmp
or
pop
push
cwtl
cmc
or
adcb
inc
or
add
push
jp
shll
insl
cmc
xor
dec
sub
xor
shll
psubsb
sbb
or
sbb
mov
sbb
mov
jl
sub
or
cmp
jno
mov
inc
bound
xchg
xchg
xorb
out
fisubrl
and
aaa
fdivl
mov
or
out
leave
xchg
sbb
fs
jno
aam
incl
imul
cli
push
jne
sub
test
and
xor
and
sbb
inc
sbb
or
adc
dec
pop
mov
mov
jno
jmp
vcvtsd2si
pop
pop
or
vmovshdup
out
xchg
imul
lret
mov
pop
xchg
push
jnp
xor
pop
test
mov
add
loopne
cwtl
lock
jb
adc
das
repnz
js
or
dec
mov
aam
bound
aas
add
sbb
popf
clc
pop
mov
stos
lods
pusha
ret
inc
loop
stos
xor
enter
fpatan
lds
lds
mov
push
pop
add
cvtdq2ps
sub
fisubrs
gs
js
testl
jmp
popl
inc
mov
bound
jg
scas
cmp
testl
test
std
out
pmaddwd
sbb
subl
sub
sub
testb
cmpsb
push
and
cli
push
int
shlb
movsb
fwait
aaa
lods
sub
and
dec
aad
int
mov
xor
nop
pop
jne
and
sub
cmp
mov
loope
negl
add
mov
int
fxch
cwtl
or
dec
xor
jp
fwait
cwtl
jg
cmp
out
fdivrp
jmp
movaps
mov
ret
push
das
add
sub
push
pop
inc
mov
sub
and
ss
popf
outsb
jnp
aaa
mov
test
jp
push
jb
xchg
movsl
gs
xchg
pop
jecxz
pop
push
xchg
add
add
idivb
push
push
push
pop
repz
inc
iret
xchg
fnstenv
adc
jl
dec
and
mov
inc
movsl
push
jno
and
adcl
mov
fadds
push
les
es
ret
adc
mov
js
call
outsl
push
outsl
icebp
push
add
push
rcrl
dec
xor
or
jo
or
inc
clc
sbb
mov
ljmp
pop
lret
frstor
stc
push
pop
pop
and
sarl
mulb
adc
scas
jle
test
fisubrl
in
mov
outsl
pop
jmp
data16
sarl
jbe
lds
xor
pushf
mov
xchg
xor
jb
dec
cmpsb
mov
dec
pop
and
fisubs
or
xor
mov
add
xchg
mov
ret
and
rorb
inc
xor
ja
mov
daa
sbb
or
mov
xchg
mov
aad
and
xchg
dec
ret
lds
cmp
jmp
inc
fwait
push
xor
jle
fndisi(8087
stos
iret
cmp
inc
and
gs
scas
mov
arpl
sbb
repz
fildl
sub
ss
setno
mov
out
outsb
mov
inc
aaa
ljmp
sar
cmc
add
mov
es
sbb
dec
cmp
push
mov
hlt
jl
xchg
xor
fisttpll
pop
outsl
bound
mov
add
stos
js
loope,pn
ficomps
call
xor
pop
mov
push
mov
xchg
push
addb
mov
lock
jnp
pop
adc
mov
jp
push
mov
fs
cmp
aam
or
xchg
test
push
mov
test
mov
dec
or
cmc
in
dec
sub
lahf
stos
xchg
orb
jge
jmp
sbb
xor
adc
pop
jo
xchg
inc
xor
sub
insl
out
push
roll
out
cmpsb
adc
mov
fistl
and
and
jne
loope
dec
in
gs
sub
jbe
lret
pusha
sahf
mov
cmp
int
ja
jns
xchg
mov
push
ror
push
stos
aaa
jecxz
jge
xor
repnz
sub
add
or
adc
pop
sub
shl
hlt
rcr
mov
inc
clc
dec
mov
adc
pop
imul
sbb
cmp
mov
jb
insl
and
dec
test
mov
add
xchg
lahf
dec
sbb
jg
lret
jmp
sbb
cli
dec
mov
push
mov
add
pop
inc
popf
mov
repnz
cmp
testb
cwtl
push
movsb
mov
fyl2x
test
sub
dec
out
lcall
cltd
fldcw
bswap
mov
jecxz
cmp
mov
jne
frstor
xchg
xchg
dec
movsb
adc
and
test
push
ror
imul
popf
push
xchg
adc
imul
lea
adc
mov
push
xchg
pushf
push
in
mov
cli
push
data16
lahf
or
xchg
xchg
lea
cli
pop
mov
test
cs
jmp
sub
je
mov
mov
push
cmp
pop
rclb
dec
ss
jno
mov
xchg
adc
push
push
xchg
movsl
push
adc
out
andb
sub
imul
dec
push
pop
push
ficoms
cmp
add
gs
adc
gs
sbb
push
int3
out
sbb
mov
divb
mov
lcall
push
jo
jmp
sub
and
inc
adc
mov
pop
pop
roll
cmpsb
sub
cmp
scas
stc
cld
mov
shl
inc
sarl
fs
cmp
mov
daa
bound
ljmp
fldcw
jmp
out
cmpsb
int
ret
enter
cmp
cmp
sbb
add
and
and
popf
in
cld
arpl
xor
or
mov
add
das
in
pusha
ret
sahf
pop
lret
test
pop
or
sub
push
decb
sbbl
int3
testl
adc
sub
hlt
push
mov
popf
mov
push
push
in
data16
push
push
lcall
in
fwait
push
lock
adc
push
jb
dec
mov
jb
cmp
xor
dec
gs
cmpsb
dec
js
add
mov
sbb
dec
sahf
adc
or
and
sbb
cmpsl
out
and
xorl
inc
xchg
dec
in
jo
pop
push
and
adc
jge
xor
mov
jmp
dec
mov
lds
imul
mov
xor
fmulp
sbb
xor
jmp
ficompl
cmc
xor
cmc
ja
pop
jl
xchg
sbb
xchg
or
adcl
add
cli
les
add
mov
loop
push
cld
sti
stos
lcall
lcall
push
sbb
or
xchg
or
jmp
add
sub
sbb
lret
pop
shr
cld
lea
sub
cmp
dec
add
lret
movsl
loopne
andb
mov
dec
add
or
or
clc
xchg
mov
iret
mov
lea
jbe
movsb
push
cltd
negl
inc
mov
rclb
cmp
mov
imul
jb
shlb
add
mov
insb
bound
aad
push
sbb
lods
std
mov
fbld
lock
and
js
repz
xchg
xor
ret
call
lods
int3
outsb
jmp
out
fidivrs
jns
in
insl
insl
adc
jl
cmp
imul
dec
int3
lcall
movsl
mov
jno
and
outsb
rcr
cs
in
test
sarl
sbb
in
jl
mov
push
cmc
jo
add
in
ljmp
imul
jmp
loopne
sti
test
test
cmc
inc
sub
sti
xor
xchg
aam
mov
ret
ds
lcall
fsubr
inc
xchg
xchg
and
adc
pusha
sub
push
rcll
xor
imul
outsl
fwait
stos
jae
xor
and
js
test
cmc
das
xor
bound
aas
push
fs
push
imul
stc
dec
dec
xor
sub
out
cmp
push
pop
ss
out
js
xchg
int3
mov
out
arpl
and
sub
adc
addb
or
mov
call
sub
bound
add
mov
cwtl
jmp
or
sbb
fcomp
mov
ja
sub
sbb
cmc
jno
push
push
shr
ljmp
cmp
xchg
cmpb
jns
jecxz
or
das
fwait
stos
inc
pop
loopne
inc
dec
jae
aad
xorl
enter
push
pop
testb
aad
fisubl
dec
into
loope
adc
jnp
lds
mov
or
sub
or
leave
addr16
mov
insb
in
push
xchg
je
sar
sub
fcompl
and
sbb
xchg
jg
sub
jecxz
xor
sarb
jl
dec
push
sub
push
pop
inc
add
movsb
pop
subl
das
sub
mov
pop
fbstp
cwtl
rcrl
mov
mov
dec
js
sub
mov
and
sbb
dec
mov
inc
sub
ja
jg
push
mov
xchg
negb
push
dec
leave
xor
mov
mov
fwait
dec
and
jp
imul
cmp
outsb
js
xchg
test
pop
or
cmp
enter
mov
and
adc
lcall
cmp
test
jae
out
roll
pop
out
rcll
lahf
fmull
loop
cld
ja
filds
incb
push
mov
int3
data16
in
jl
jp
mov
push
sub
data16
sub
inc
lea
push
repnz
pop
test
stos
sub
test
push
pop
and
xor
and
push
jecxz
pop
xchg
push
daa
fs
loope
jne
dec
ja
xchg
mov
lahf
jae
dec
xchg
shll
push
xor
mov
sub
insb
or
inc
outsl
jge
sarb
fsub
jge
sub
xchg
stos
enter
xor
cmpsb
imul
jecxz
sub
lds
test
mov
cli
cwtl
and
iret
out
sahf
mov
xor
jae
mov
and
shll
dec
cmp
rclb
test
mov
push
arpl
shrb
repnz
lods
mov
fldcw
lock
data16
jg
sub
sti
sub
scas
scas
hlt
mov
fistpll
xlat
loopne
push
jmp
add
cmp
xchg
xlat
push
mov
lret
cli
leave
inc
ds
pop
push
adc
or
lds
mov
mov
adc
fbld
add
xlat
fwait
jl
mov
cmp
mov
xchg
dec
xlat
fldln2
clc
cmp
cmp
inc
ss
sbb
filds
sahf
dec
jbe
pop
adcl
aas
and
and
cmpsl
cltd
ljmp
js
mov
lods
adc
or
sti
es
adc
outsl
sbb
fisttpll
inc
mov
push
mov
pop
loope
push
and
inc
call
lds
jbe
push
inc
add
fnsetpm(287
xor
bound
sti
push
cld
fldcw
cmp
pop
mov
adc
loope
jl
push
mov
xchg
test
icebp
je
call
pusha
mov
inc
fwait
aam
nop
xchg
push
dec
out
add
mov
call
andl
and
cwtl
repz
lret
cmc
ret
mov
gs
dec
mov
push
aaa
imul
out
cmc
mov
mov
mov
nop
push
pop
in
pop
decl
push
sub
adc
xchg
popa
push
mov
mov
bound
jo
cmc
int3
xor
fs
cmpsl
fcmovnbe
scas
cmp
and
mov
arpl
and
mov
aad
nop
adcl
adc
and
dec
mov
lret
test
or
sub
insb
mov
sub
mov
push
inc
dec
add
loop
cmp
aaa
movsb
addr16
pop
mov
pop
les
movsb
cmp
sub
inc
or
inc
and
xchg
repz
and
ret
lcall
xor
dec
lods
or
fnstsw
out
add
bound
faddl
je
mov
test
dec
push
sub
cmp
xchg
test
out
add
lea
add
test
jg
js
add
rclb
push
mov
shll
cmpb
test
inc
sarl
add
hlt
in
popf
bnd
push
aas
loope
cs
fisubrs
push
sub
iret
sbb
mov
push
aam
pop
pop
sub
loopne
lahf
cld
or
arpl
scas
jge
sub
inc
fcom
xchg
jmpw
sub
loopw
int3
xor
mul
and
push
lods
push
dec
mov
stos
mov
lock
fidivl
and
push
jne
dec
xchg
cmp
lcall
aaa
out
lret
stos
scas
in
pop
mov
mov
jmp
cmp
xor
sbb
jl
mov
xlat
clc
orb
inc
scas
inc
xor
mov
cmpsl
sub
cmpsl
mov
imul
lea
lret
rcr
out
divb
enter
mov
adc
repz
mov
jmp
cmp
sbb
subl
or
nop
mov
fwait
testb
jbe
push
jmp
lock
in
into
add
xor
inc
pop
inc
bndstx
adc
and
nop
jp
lahf
mov
jg
push
xchg
dec
xchg
jb
mov
mov
aam
iret
lock
aas
stc
mov
inc
pop
push
sub
xor
pop
push
lods
sahf
jnp
pop
adcl
fldcw
xor
imul
js
mov
out
adcl
dec
out
add
rcll
lods
bound
jae
mov
pop
sbb
jno
lret
lcall
mov
out
jbe
sbb
sbb
imul
xchg
xor
mov
es
mov
sub
repnz
push
popf
push
inc
push
mov
mov
jmp
push
popl
push
stos
cmp
cs
dec
xor
xor
imul
fstl
mov
negl
jnp
and
jbe
adc
mov
cld
lret
jbe
dec
mov
cld
cmp
imul
insl
pop
jmp
fsubl
sub
ds
cmp
scas
in
sti
int
jle
xchg
pusha
push
out
sbb
mov
cmc
cmc
xor
insb
push
lahf
add
fldt
les
fcomps
or
mov
aad
or
lret
pinsrw
sbb
pop
push
stc
hlt
and
push
movsl
xchg
arpl
dec
pusha
imulb
stc
sbb
pop
jle
outsl
das
xchg
outsb
lcall
js
push
jp
xor
fidivl
lcall
inc
aam
push
pop
jo
lods
popa
lods
fdivrl
out
inc
lret
icebp
adc
cmpsl
mov
pop
inc
in
nop
lods
je
adcl
in
out
or
aad
cwtl
in
iret
pop
hlt
jecxz
mov
xor
push
pop
cli
in
xchg
std
mov
push
lret
movsl
inc
jbe
bnd
or
jo
inc
add
ret
add
pop
xor
fcom
add
jns
loop
data16
push
sbb
mov
add
nop
mov
in
mov
fwait
scas
iret
inc
stos
mov
cwtl
into
notb
mov
in
outsb
jg
mov
ja
mov
sti
adc
pop
sbb
add
lcall
repnz
in
imul
xorl
sbbl
add
in
cli
xlat
das
imul
inc
push
push
mov
xor
stos
in
push
notb
fsubrl
jb
lock
aaa
and
scas
xor
ds
je
push
cmpb
lock
lods
add
jo
jle
sbb
lods
push
loopne
mov
repnz
pop
sub
in
push
xor
repz
pop
popf
add
dec
int3
sbb
mov
xchg
out
pop
punpckldq
xchg
jns
hlt
aam
aaa
add
push
cmpsb
int
adc
mov
fwait
add
sti
stos
mov
xchg
xor
cmp
xor
add
daa
insb
pop
pusha
adc
and
addr16
sarl
adc
push
jmp
xchg
cld
mov
shrb
mov
divb
ss
pusha
lock
mov
lret
stos
or
fldcw
push
lods
arpl
je
bound
cmp
and
sub
inc
sub
les
inc
and
push
fnsave
int3
mov
fmul
sbb
movsl
and
leave
pop
inc
pop
mov
mov
fdivl
jb
push
repnz
pop
xor
mov
and
mov
sbb
std
dec
xchg
aas
ret
mov
movsl
xor
movsl
test
push
lea
movsb
jg
push
mov
je
stos
addb
lds
or
cld
mov
adc
sub
jg
or
lahf
and
jge
jo
sub
cmpsb
dec
xchg
and
arpl
jnp
lret
aad
dec
les
divl
fucomip
fwait
aad
push
jns
add
add
and
cmpb
jbe
mov
pop
imul
jl
pop
push
jae
jp
sbb
gs
inc
aaa
dec
lock
pop
xor
mov
lock
cmc
mov
or
mov
cmp
stos
enter
lods
adc
dec
ja
shrl
pushf
sbb
pop
dec
jb
hlt
pop
jno
mov
shr
push
lods
mov
dec
pop
test
mov
popf
inc
push
dec
dec
iret
leave
lahf
push
incl
arpl
mov
std
aas
push
mov
inc
loop
shrb
sbb
xchg
shrb
cmp
xor
jae
mov
rcrb
ljmp
lock
cwtl
into
dec
xor
xor
cld
les
inc
xchg
push
ss
int
in
adc
jae
in
dec
pop
jbe
hlt
jb
arpl
sbb
mov
pop
mov
lods
imul
stos
lcall
jb
sub
mov
jl,pt
pop
out
sbb
out
xchg
dec
aaa
shrb
js
imul
and
inc
sbb
cmp
xchg
aaa
repnz
mov
pushf
adc
out
repz
shr
gs
push
aad
ret
push
pushf
cmp
xor
orb
pop
or
leave
xchg
movsl
push
jno
mov
in
push
mov
out
jo
xchg
arpl
lea
jle
dec
lds
xchg
mov
and
mov
mov
jmp
pop
and
andb
inc
shlb
pop
ret
push
push
push
lock
sbb
in
lahf
sahf
fisttpl
xchg
pushf
jbe
jno
mov
xchg
loop
sar
arpl
mov
into
cmp
pusha
and
mov
inc
jmp
fdivl
in
xchg
inc
gs
mov
test
into
call
lret
dec
xchg
cltd
xor
out
jmp
sub
push
mov
sbb
scas
dec
popf
mov
xlat
adc
call
jne
cld
fidivs
lea
test
adc
sbb
dec
and
inc
pop
lods
cmp
cltd
imul
test
int3
mov
pop
cmp
icebp
cmp
push
outsl
mov
inc
jmp
and
push
cmc
mov
int
fdivr
sub
push
mov
sub
pop
addr16
lock
jl
dec
dec
or
pusha
push
pop
enter
add
loop
xchg
add
xor
movsb
xchg
sahf
push
inc
enter
push
cltd
or
fldlg2
iret
hlt
hlt
inc
pop
jnp
idivb
loope
xchg
mov
lret
popa
and
jo
imul
dec
aas
bound
push
pop
mov
fstps
add
fsubrl
and
lds
mov
mov
jp
ret
repz
sub
adc
mov
jae
pop
imul
and
rol
pop
sbb
iret
loope
int3
sbb
pusha
inc
pop
je
add
and
mov
push
xchg
in
pop
mov
insl
loop
orb
mov
dec
in
mov
cld
stos
fcompl
test
scas
roll
mov
roll
xchg
mov
pop
sahf
pop
dec
jp
dec
enter
test
cltd
in
pop
cli
mov
ret
cmpb
sbb
cld
fmulp
andb
ret
outsb
rolb
inc
iret
inc
shrl
es
aam
cmp
xchg
es
jl
ss
addr16
inc
js
aad
in
out
loop
sbb
lds
insl
in
adc
and
ljmp
mov
lcall
jnp
fisttps
inc
cmp
mov
pusha
xchg
int
cmp
xchg
int3
jmp
ja
jmp
adc
test
adc
fimuls
mov
bound
fiadds
neg
dec
sub
or
xchg
push
jl
jp
mov
jb
sub
addr16
add
xchg
mov
addl
mov
mov
sbb
scas
fsubr
repz
xchg
nop
mov
or
daa
lahf
inc
lret
xchg
je
fmul
rcrl
jecxz
dec
stos
sbb
xchg
imul
mov
xchg
pop
cwtl
xor
aaa
add
ret
divl
inc
push
mov
imul
rcl
or
lea
push
push
lcall
xchg
push
xchg
xchg
dec
addr16
mov
add
or
fbld
cmc
cmp
lcall
mov
pop
insb
pop
add
data16
mov
cmp
cmp
and
pop
cwtl
daa
ss
mov
cmp
and
stos
hlt
xor
pop
pop
bound
fsubr
fnstenv
cwtl
les
inc
add
adc
fldt
xor
movsl
adc
adc
cwtl
lret
scas
int3
mov
pusha
ds
xchg
test
call
stc
push
mov
mov
data16
adc
aaa
mov
dec
lods
cmp
mov
inc
mov
pop
sahf
mov
ret
lock
xor
mov
mov
rcll
fstl
sub
into
sbb
ret
mov
test
dec
bound
stos
pop
out
in
pop
pop
xchg
mov
cmpsl
nop
inc
in
out
sarb
ret
arpl
sbb
daa
test
xor
mov
ret
and
mov
pop
scas
arpl
adc
sub
iret
fldenv
repz
movl
clc
cmp
scas
sbb
cld
push
nop
cs
movsl
jmp
gs
ret
call
push
mov
movsl
adc
mov
gs
ss
jecxz
pusha
repz
sub
sub
pushf
bound
aam
stos
ret
mov
shrl
xor
xor
dec
pop
mov
mov
add
in
mov
int
mov
lret
cmp
sbb
cwtl
dec
xchg
ret
sbb
xchg
and
adc
imul
pop
mov
add
push
test
in
sti
jne
sbbb
ds
ret
filds
cld
outsb
pop
out
cmp
jo
test
lret
scas
cld
jo
jge
movsb
and
cli
lret
inc
cmpsl
adc
inc
sbbl
int3
bound
ja
xchg
icebp
dec
jmp
xchg
mov
std
push
es
sub
testl
or
pop
out
imul
xchg
push
test
addr16
aam
icebp
jecxz
adc
out
adc
jl
fldcw
xor
push
jnp
mov
sbb
mov
jl
push
pop
sbb
pushf
and
andl
xor
lds
mov
jno
sub
loopne
jb
scas
int
xchg
inc
fstps
imul
dec
mov
addl
push
sub
jne
xchg
mov
jle
in
jg
mov
jns
in
into
inc
andb
out
mov
stos
lock
xor
sbb
or
test
cmp
add
test
cmpsl
lods
imul
call
add
imul
pop
adc
les
xchg
mov
jle
out
pop
sub
cld
mov
xor
scas
xchg
adc
xorb
add
idiv
jle
lahf
xchg
js
dec
add
pop
popa
cmp
push
gs
pop
stos
out
out
out
or
pop
into
loop
jl
arpl
xchg
pop
jnp
xchg
pushf
mov
mov
mull
or
push
mov
scas
out
movsb
jmp
cmp
or
add
test
movsb
out
push
push
sub
test
insl
movsl
xor
sahf
add
xchg
mov
pop
fnsave
sub
dec
xchg
das
notl
aaa
ret
inc
mov
push
xchg
jl
mov
flds
adc
push
stos
cs
pushf
inc
out
pop
call
scas
outsl
jae
pop
adc
cmp
inc
jecxz
inc
mov
push
jo
push
pop
outsl
mov
inc
int3
scas
mov
ja
pop
mulb
fs
js
pop
daa
pop
fdivrp
mov
std
jl
lcall
xchg
inc
mov
rolb
icebp
sub
test
pop
mov
bnd
ljmp
and
jno
iret
mov
xchg
popf
xchg
div
enter
insb
cwtl
and
je
mov
lock
imul
inc
fiaddl
addl
je
xorl
cmc
fcompl
mov
jnp
pushf
rorl
fisubrs
cmp
enter
insl
mov
das
jne
push
push
leave
enter
mov
xchg
push
dec
jmp
xor
push
dec
or
jno
pushf
push
push
mov
inc
xor
cmp
jp
in
cmp
loope
in
arpl
xlat
sbb
fnstenv
and
fadds
hlt
cld
movsb
je
jnp
mov
mov
jns
pop
fstl
in
mov
imul
push
dec
cmpsl
lods
add
cmp
in
pop
mov
xchg
fmull
shlb
inc
loope
addr16
inc
inc
dec
mov
sub
outsl
mov
cmp
and
fldl
or
je
aam
sbb
call
daa
out
in
sar
pusha
mov
push
dec
inc
push
clc
dec
push
lret
push
lcall
test
jge
and
mov
dec
aas
cmc
mov
leave
sbb
lds
cmp
jno
imul
popf
popf
or
cli
inc
in
subb
and
je
in
mov
cmp
sbb
sub
into
pop
adc
fdivs
cltd
pop
pop
sbb
push
pop
dec
imul
mov
xor
sub
mov
xchg
rcrb
adc
mov
sub
xchg
jg
pusha
sbb
cmp
movsb
push
fmull
pop
rclb
mov
xchg
aam
cmp
mov
loop
push
scas
cmp
les
and
xor
jns
and
aad
jge
test
rorb
xor
fsubrl
mov
xor
mov
rcr
mov
bound
sub
mov
lea
and
jbe
or
inc
les
fcomip
int3
add
pop
push
ljmp
das
mov
scas
idivl
es
out
lcall
and
sbb
fildl
inc
or
ret
ss
xor
into
jge
jecxz
popa
lds
or
mov
addl
xchg
mov
mov
jnp
inc
inc
mov
jle
sbb
popf
cmp
push
gs
mov
imul
add
mov
cltd
inc
or
ror
jp,pn
movsl
mov
xchg
and
iret
sub
fadds
cmc
cmp
outsb
fs
popf
dec
cmp
mov
add
add
test
and
cmp
pop
adc
cmp
sbb
inc
push
adc
cmp
jl
mov
adc
stc
pop
adc
mov
into
lods
lcall
icebp
push
and
xor
pop
jb
sahf
cld
adc
int3
cli
cmpsl
add
aam
xchg
nop
cmovbe
mov
mov
std
inc
cmpsb
mov
fiaddl
xchg
daa
lahf
data16
or
cmp
addb
sahf
mov
mov
push
lods
push
lahf
mov
add
and
inc
cmc
mov
xchg
call
test
cmp
outsb
int3
test
imul
sub
sub
inc
or
xchg
or
hlt
dec
outsb
cmpsl
xor
addr16
lds
sbb
adc
pushf
iret
aas
je
outsl
into
fsub
rcr
mov
mov
jne
mov
lods
push
scas
enter
pop
daa
push
fadds
popa
out
pop
dec
pop
test
fcoms
jge
cmp
jae
adc
xlat
and
mov
and
xchg
fwait
jp
adc
jo
fldl
mov
mov
xchg
inc
pushf
je
cmp
outsl
add
or
lret
imul
push
mov
cmpsb
ds
paddusw
mov
xchg
sub
jecxz
sub
sahf
sub
pop
loop
xchg
int3
cmp
mov
clc
pop
mov
sbb
pusha
fs
pop
cmp
sub
out
sbb
clc
xor
push
cmpsb
pop
imul
inc
fs
mov
lcall
mov
ret
push
outsb
mov
xor
scas
ret
rcr
outsl
in
or
xor
dec
sub
int
lds
std
sbb
cs
sbb
xchg
mov
sub
daa
rcrb
mov
sbb
sti
ret
mov
loope
ret
test
sub
fs
cmpsl
and
fsubs
push
sbb
fadds
add
xchg
push
mov
xor
mov
js
out
or
lcall
cmc
sub
xor
cs
dec
inc
rol
je
jbe
je
jb
xor
or
incl
inc
xlat
std
mov
sub
fistps
stos
mov
sarl
je
push
cmpsl
enter
shr
sti
aaa
fbld
out
lods
clts
movsl
fimuls
pop
cmpsl
insl
mov
lods
clc
rorb
cmp
scas
fidivl
clc
arpl
fbld
jbe
insl
xchg
jo
retw
les
mov
ret
addr16
mov
cmp
hlt
mov
rcrb
sbb
adc
pop
xchg
and
inc
mov
fidivrs
in
ds
ljmp
or
mov
jecxz
test
mov
push
ret
mov
call
daa
sbb
stos
xor
orb
jbe
aam
mov
xchg
xor
lods
mov
pop
lods
pop
pusha
mov
movsb
jns
repnz
pushf
fwait
cwtl
mov
cwtl
and
dec
cwtl
cmc
setae
xor
pop
adc
sub
mov
out
pusha
daa
pop
and
aad
push
lods
jne
fcomip
pop
pop
push
pop
movsb
push
xor
pop
sahf
lret
out
adc
or
mov
inc
arpl
xchg
inc
or
mov
aas
scas
aaa
xchg
cmp
xchg
inc
inc
sbb
js
les
jmp
icebp
inc
mov
fcompl
cld
sub
jo
lea
jl
notb
cs
rorl
sbb
sbb
or
or
lea
cwtl
xor
mov
out
mov
popf
jnp
out
mov
adc
and
cwtl
jns
iret
cmp
adc
xchg
cmpl
xchg
pop
inc
add
addr16
xor
imul
rcr
bound
pop
xlat
lods
rorb
je
fistps
pop
add
das
fucom
in
out
mov
arpl
loope
add
fisubrl
inc
xchg
xor
dec
push
add
push
cmp
pop
pop
xor
dec
aaa
inc
pusha
jo
inc
cmp
sub
dec
mov
cltd
inc
imul
call
lock
outsb
icebp
push
jnp
cld
mov
bound
popl
or
mov
pop
pusha
fisubrs
js
mov
divb
jmp
lret
jno
fiadds
aas
mov
mov
ds
or
or
xor
test
push
and
mov
push
or
xchg
jg
xor
adc
insb
cs
movsb
sbb
jnp
dec
and
shll
fcompl
or
scas
lcall
pop
adc
ja
xor
hlt
gs
outsl
scas
call
push
ds
cmpsl
dec
int
loop
fwait
push
mov
dec
xor
sti
call
lret
mov
jbe,pt
and
lea
lcall
pop
pop
jl
mov
hlt
pop
xchg
dec
pusha
arpl
xchg
test
inc
aam
out
jae
dec
out
stos
jp
popa
xchg
pushf
data16
jno
sti
push
inc
push
aas
aam
mov
sahf
add
mov
test
sbbl
enter
mov
push
cwtl
mov
push
cmp
cmp
or
push
xchg
jmp
xchg
xor
ss
je
push
mov
xor
inc
adc
imul
outsl
in
rcrb
mov
pusha
mov
mov
roll
mov
cmpsb
sti
lods
sub
fcompl
mov
scas
shr
or
lret
or
xchg
jno
shll
lea
push
pop
xchg
push
sub
out
pop
andb
and
push
or
call
or
xchg
mov
fwait
sub
or
mov
jp
mov
cvtps2pi
bound
movsb
pop
in
stos
mov
test
or
std
cld
int3
cmp
fwait
es
subb
fs
lret
sarb
pop
mov
fimull
shlb
ljmp
xor
push
inc
fdisi(8087
or
inc
mov
lahf
ljmp
movsb
adc
ficoms
mov
lds
sub
fcompl
or
push
push
sbb
dec
sbb
fstpt
xlat
jno
add
subb
adc
mov
addr16
pop
xchg
les
jb
add
dec
sub
mov
or
dec
inc
dec
loope
mov
jno
pop
cld
jno
jmp
inc
sbb
or
sub
int3
ds
sbbb
into
push
frstor
fcmovnu
fidivrl
icebp
xor
pusha
and
xor
sub
push
lcall
in
imul
test
imul
bound
lret
rcrb
adc
push
pop
in
pop
cmp
push
push
arpl
push
jne
mov
mov
mov
inc
rclb
pop
ret
and
xor
mov
loopne
int3
xor
xor
repz
test
ror
sub
mov
cmc
add
mov
dec
mov
sbb
or
dec
jno
movntps
and
cwtl
jno
cmp
insb
loop
cmc
jl
mov
rorl
mov
lods
xor
lret
loop
ret
mov
adcb
dec
xor
push
jl
mov
jle
mov
rol
push
and
or
imul
into
jecxz
dec
bound
addr16
add
shr
inc
call
mov
pop
mov
dec
shr
ret
int3
fs
push
push
inc
mov
adcl
cmp
cmp
movsb
mov
stos
in
mov
mov
xor
test
inc
icebp
inc
in
pusha
insb
jae
call
mov
jp
cmpsb
push
lods
inc
stc
inc
sbb
stc
or
sub
jl
stos
cmp
cli
clc
pop
pop
aam
cltd
std
cmp
pop
cs
leave
xor
add
andb
push
lret
sub
xchg
pop
stc
mov
dec
sbbb
aad
push
lret
pushf
add
mov
jmp
into
sbb
lock
jae
jl
stos
loopne
dec
mov
stc
and
out
dec
rcll
sub
jo
ds
fstps
fists
into
sub
insl
in
xchg
divb
mov
jbe
mov
and
mov
push
jmp
xchg
sub
sbb
jge
mov
mov
int3
dec
outsl
and
lcall
cmpsl
scas
push
mov
les
mov
push
mov
adc
andl
add
push
lcall
add
and
add
test
jle
mov
stc
movzbl
and
sub
dec
jl
in
movsb
into
sub
sbb
fldl
sub
int3
lds
popf
cmp
jne
jg
in
popa
arpl
push
in
nop
xchg
adc
imul
hlt
push
xor
fsubp
xchg
aad
dec
cltd
insb
fcom
imul
mov
js
xchg
jb
cmpl
dec
in
add
jnp
jbe
push
sub
jle
inc
lea
cmpsb
cld
mov
insb
leave
or
push
ds
js
xorb
roll
dec
outsl
sbb
repz
push
es
adc
fidivrs
xor
mov
fmuls
mov
and
ret
push
adc
rcll
out
pop
push
repz
test
pop
in
arpl
and
dec
add
js
xchg
dec
dec
jmp
jo
int3
xchg
ficompl
negl
pop
pop
inc
outsl
pop
imul
das
add
mov
daa
mov
cs
cmp
jne
rcll
jl
pop
dec
icebp
adc
pop
xor
or
cs
ret
mov
mov
cmp
and
scas
cltd
call
sbb
push
notb
pop
leave
je
out
fsubp
out
mov
jecxz
xor
sub
mov
sbb
ret
fildll
clc
inc
pop
pop
data16
ja
data16
sub
adc
jg
outsl
inc
test
ljmp
iret
mov
call
std
pop
fstps
andb
cli
mov
aas
cmp
test
jno
pmulhw
mov
repz
cmp
add
das
shrl
dec
pushf
pop
insb
movsl
and
and
xchg
cmp
mov
in
ffree
mov
or
rcll
xchg
push
mov
mov
push
lock
mov
push
test
push
aaa
add
jle
add
lods
mov
sbb
int
push
or
bnd
push
mov
inc
sbb
test
mov
fwait
adc
jle
adc
jecxz
mov
lock
test
jg
xchg
stc
ss
xchg
push
ret
or
and
inc
pushf
shl
mov
or
or
mov
sbb
adc
pop
jg
jb
add
std
dec
and
jbe
mov
jmp
out
mov
mov
incl
pop
lea
dec
jge
inc
js
fstp
mov
pop
pop
lret
fs
dec
fldenv
fwait
ds
imul
cmp
xor
push
pop
icebp
mov
mov
dec
pop
dec
fcmovnbe
leave
aam
sbb
jae
hlt
mov
punpckhbw
push
add
mov
test
repnz
rcll
jb
adc
xchg
inc
iret
and
cmp
nop
fwait
jbe
xchg
pop
icebp
fldenv
gs
fisubrl
pop
dec
repz
inc
push
add
das
mov
pushf
jge
mov
stc
xchg
sbb
fcoml
add
mov
push
in
int
adc
test
cs
aam
cmp
addr16
scas
ficomps
mov
sbb
sarl
adcb
push
jns
test
daa
sub
sarl
add
xor
sub
mov
rcr
xor
cmp
cmp
and
xor
call
outsb
xor
inc
out
push
adc
xor
dec
or
cmp
and
jbe
repnz
adc
and
filds
arpl
sbb
insl
adc
add
jl
or
mov
les
mov
jmp
adc
push
jae
and
inc
xchg
lret
mov
add
jmp
cld
dec
idivl
stos
add
mov
adc
mov
xchg
in
mov
pop
mov
pop
jge
pop
push
movsl
in
std
js
cmp
cmp
call
sbb
mov
dec
push
mov
cmpsb
dec
shl
icebp
and
add
add
adc
sub
sbb
push
sbbl
mov
dec
sub
lock
jno
out
aad
mov
roll
add
adc
in
or
test
push
sbbl
sub
pop
stos
mov
insl
std
shll
sbb
sbb
mov
add
out
das
jae
shll
testb
jge
test
mov
inc
jbe
add
push
jl
cmc
pop
add
imul
push
fsubs
mov
sahf
inc
xchg
or
push
and
mov
and
addr16
xchg
pop
mov
sub
test
mov
and
xor
cmp
loop
pop
dec
lcall
jge
inc
and
sub
jp
mov
pop
je
sti
popf
or
add
inc
nop
out
pop
fsubrp
lahf
jmp
leave
lds
lret
popa
and
and
push
xchg
push
fcom
adc
repz
sbbl
cmc
xor
rolb
mov
pop
iret
addr16
outsb
mull
out
xlat
cmp
sbb
push
sbb
popa
pop
stos
cvttps2pi
mov
daa
lea
icebp
xchg
mov
add
in
push
inc
sahf
test
jbe
inc
push
xchg
dec
add
sti
jb
cli
push
cmpsb
in
or
out
push
sahf
std
cmp
fnstcw
cld
call
pop
pushf
jno
xchg
xor
stos
mov
data16
mov
mov
fsub
dec
call
and
std
pop
repnz
xor
rcrl
loop
mov
lcall
jmp
int3
loop
shl
pop
jle
mov
mov
lcall
sub
stos
mov
dec
mov
fisubl
enter
pusha
std
popf
ds
aaa
loope
aad
iret
adc
cmc
and
add
or
ret
je
shll
test
mov
in
jo
test
add
bswap
cmc
inc
adc
loop
call
outsb
pop
mov
nop
js
cld
cmp
mov
xchg
add
mov
dec
jne
xchg
xchg
and
lock
shl
xor
xlat
mov
pop
push
add
sub
xchg
jbe
push
leave
in
jecxz
fs
test
scas
loope
cmpl
test
notl
cmp
mov
je
fcmovbe
sbb
loope
jp
lods
push
gs
or
mov
jne
push
and
inc
xchg
xor
shlb
push
and
xchg
mov
pop
roll
lock
adc
stc
mov
and
aad
lahf
cltd
or
mov
sub
cli
mov
outsl
add
iret
cmpsb
dec
xchg
adc
fcmovb
add
dec
int
xor
leave
insb
and
test
call
sahf
hlt
mov
xor
jl
pop
cmp
sbb
andl
dec
add
xchg
xchg
sub
dec
add
sahf
fistpl
mov
jle
out
andl
repnz
mov
mov
clc
jae
adc
testl
or
xchg
push
mov
loop
and
imul
popf
in
fdivs
pop
fsubl
loope
pushf
daa
or
mov
mov
jp
sbb
mov
sbb
test
xchg
adc
sub
addr16
jne
adc
cmpsb
popf
mov
or
lods
inc
fstps
mov
dec
pop
dec
into
cs
call
dec
push
sub
fdivrs
mov
sub
repz
add
push
sti
jg
adc
fwait
pusha
push
scas
pop
sub
lds
push
gs
cs
sti
jle
adc
inc
add
adc
into
xchg
inc
insl
jb
sbb
div
push
add
sub
xchg
mov
adc
daa
cli
mov
pop
aam
add
inc
jge
sub
push
or
ror
ljmp
je
clc
mov
jle
pop
pop
cmpsl
fs
push
sub
mov
mov
mov
fnstenv
pop
loopne
mov
jp
shl
vphaddbw
ljmp
inc
dec
jmp
or
stos
aam
mov
sbb
mov
add
not
outsb
add
out
daa
popf
aaa
pop
pop
jb
inc
fstpt
sbb
subl
mov
test
movsb
sub
lds
or
ffree
add
das
cmp
imul
fwait
out
push
xchg
xchg
xchg
inc
jl
push
lds
add
lods
outsb
cmp
sub
cmc
outsl
adc
lret
std
test
dec
inc
and
aad
test
test
leave
mov
cmpsb
mov
push
or
popf
mov
pop
jbe
popa
add
adc
cmp
jmp
ret
and
mov
rcl
dec
loopne
repnz
pusha
testb
std
xchg
xor
aaa
das
and
dec
push
stc
pushl
sub
hlt
bound
imul
mov
xor
add
xchg
adc
rcl
cltd
dec
xor
pop
mov
int3
sbbl
push
loope
pop
mov
sbb
mov
sub
sti
xor
jecxz
rcr
push
enter
test
pop
pop
bound
mov
mov
push
cwtl
jl
cmp
cwtl
nop
js
pop
push
imul
or
inc
push
push
pop
xchg
ds
lret
push
add
hlt
nop
jle
in
scas
int
lock
adc
scas
jmp
rclb
mov
inc
cmpsl
sti
xchg
jae
xchg
jp
cmp
movsb
pop
mov
mov
sbb
sub
leave
sub
jb
dec
xchg
jl
mov
pop
shl
add
sub
test
sub
adc
mov
in
bnd
js
fwait
cmc
lahf
popa
iret
push
fdivrl
ret
dec
sub
repz
mov
test
mov
movsl
ret
adc
push
push
cs
mov
push
loopne
sub
pop
aas
stc
sub
rclb
sbb
pop
sbb
lret
xor
xor
inc
jecxz
add
bswap
xchg
push
xor
imul
lahf
and
test
xchg
lea
nop
jmp
pop
outsb
dec
mov
enter
xchg
push
mov
mov
enter
pusha
jle
mov
clc
sbb
popa
mov
jle
or
xchg
xchg
mov
add
or
aad
pop
add
sti
fcmovnbe
push
lret
xor
jmp
sti
cmpsl
rorl
dec
in
cld
sub
sbb
icebp
leave
or
mov
call
mov
loop
mov
add
adc
xchg
fwait
sbb
cltd
xchg
push
mov
stos
in
popf
inc
fmuls
lret
push
ficoml
push
out
pop
jl
dec
xchg
sub
and
lcall
mull
sub
negl
arpl
je
xor
push
jno
es
mov
inc
and
dec
mov
cld
addr16
imull
push
shrl
jnp
sbb
dec
jnp
or
xchg
pop
xor
ja
xchg
push
gs
mov
addl
repnz
push
movsl
cmp
xor
or
mov
or
dec
in
movsb
pop
jg
cmp
jb
push
lds
int
rep
inc
arpl
shrl
cli
sbb
aad
scas
cmp
xor
popa
icebp
int
adc
nop
and
sub
call
sbb
aaa
lods
sub
push
adc
std
out
lds
fnsave
add
xorl
push
adc
shl
int
cmp
sbb
pushf
xchg
pop
out
push
dec
ret
xor
adc
adc
cwtl
xchg
int3
lods
aam
pop
icebp
nop
into
adc
push
fldenv
cmp
inc
lret
pop
pop
scas
jmp
adc
pop
ss
mov
mov
sub
loopne
or
or
or
shlb
test
mov
mov
jp
xchg
inc
xchg
jge
xor
cld
lcall
aam
sbb
pop
gs
test
lods
jnp
test
mov
out
and
add
xchg
inc
mov
ljmp
test
add
mov
sbb
xor
lea
fs
or
and
sub
xor
ret
inc
and
push
bts
leave
pop
mov
pushf
scas
fldcw
lret
repnz
lods
sub
mov
xor
pusha
je
pop
iret
or
addl
dec
inc
cmpsb
jge
adc
out
test
jb
ret
sub
ret
dec
jmp
loope
enter
cwtl
les
aaa
les
xchg
ror
jge
sub
and
into
add
rep
test
jp
inc
or
ret
mov
out
jnp
xor
jp
int
out
setl
sub
mov
jb
push
jo
imul
addr16
push
adc
push
mov
mov
rolb
rcl
mov
xor
les
jnp
test
lret
jmp
or
dec
push
out
mov
inc
imul
push
or
mov
fsubr
mov
sub
pop
jnp
mov
jmp
mov
call
cmp
fstpt
ss
cli
je
movsl
lods
push
pop
gs
add
ret
xor
outsb
cmp
sub
add
jae
cmpsl
int
ret
es
sahf
loopne
clc
inc
mov
mov
loope
inc
in
sbb
and
dec
mul
daa
sub
add
pop
jp
dec
or
lea
cmp
xchg
aad
out
mov
jne
stc
out
scas
sbbb
lds
ret
cs
sbbl
cmp
fnstsw
push
addr16
mov
mov
std
iret
mov
insb
mov
insl
lods
mov
int
xor
aas
int
mov
mov
inc
in
subb
mov
add
and
cwtl
fs
cmc
sub
mov
fsubl
mov
lret
pushf
push
xchg
outsl
out
sub
inc
adc
mov
mov
adc
jecxz
inc
and
xor
in
addr16
lds
loop
sbb
cmpsl
dec
imul
mov
dec
inc
push
mov
or
push
mov
repnz
or
add
cmp
sub
gs
jb
mov
cmp
outsb
dec
add
pop
popa
insl
sbb
or
pop
inc
pop
xchg
sbb
mov
jge
lret
mov
dec
sbb
iret
cmp
popa
inc
popa
or
xor
loopne
xorb
mov
insb
test
clc
pop
jns
mov
cmp
cli
xchg
cs
cmpsb
cmp
sti
std
and
sub
into
or
cltd
push
jge
or
fbld
shrl
imul
cmp
psrld
shl
incb
orl
imul
sub
aas
sub
xor
or
xor
aad
push
lret
xchg
in
loope
xlat
mov
mov
dec
sub
lods
dec
cmp
push
in
adc
scas
dec
popl
jge
xor
push
push
movsb
ds
sub
ret
lock
fimull
jle
mov
or
pop
adc
dec
jp
into
repnz
jge
imul
ja
pushf
lcall
dec
mov
iret
dec
fsubrs
repnz
ret
movsb
sbb
sub
nop
dec
adc
dec
lret
pop
aas
ret
lret
aaa
enter
pop
and
nop
movsb
jl
xor
pop
mov
sbb
dec
mov
fs
int3
dec
mov
mov
mov
or
jne
adc
xchg
sub
or
loop
sub
inc
lret
fisubs
aaa
movsb
nop
stos
stos
mov
test
das
decb
cmp
cmp
jne
pop
xlat
sub
dec
movb
test
test
cli
xchg
or
mov
adcb
inc
mov
test
add
jp
outsl
fdivrl
outsb
mov
sbb
insb
in
outsl
push
or
pop
pop
out
mov
and
xchg
dec
ja
xor
or
xor
out
imul
fs
fldenv
std
ret
outsb
pusha
mov
push
cmc
pop
push
outsl
fstl
scas
imul
popa
sub
xor
mov
hlt
stc
jbe
cmc
dec
ss
int3
in
pop
mov
fwait
ret
mov
incb
arpl
lock
ret
in
loopne
pushf
nop
push
jp
ret
es
jmp
pop
or
jp
pop
test
adc
fldenv
xchg
xchg
mov
stos
nop
sarl
xor
arpl
adc
sub
loope
sub
in
jb
sbb
mov
push
pop
sub
pop
cmpb
fldl
fstl
outsl
adc
lret
dec
or
jecxz
test
lods
jge
repz
loopne
fprem
cmc
push
js
out
push
cltd
sbb
xchg
lds
pusha
inc
int
or
je
aas
pop
inc
aas
xor
xchg
stos
mov
inc
mov
lahf
xchg
ror
dec
inc
adc
pop
jns
jl
cmp
mov
arpl
mov
pop
loopne
sub
and
aam
test
rcll
data16
inc
sti
sub
ja
pop
ljmp
mov
add
mov
inc
loopne
hlt
mov
mov
cmc
jmp
mov
jg
rol
cmp
ss
daa
cwtl
xchg
cmc
mov
xchg
call
jns
adc
pop
sbb
stos
dec
push
and
lods
aas
sti
adc
push
fistpl
sub
icebp
dec
mov
pop
mov
in
out
sub
fcmovb
xchg
cld
xchg
insl
mov
cli
mov
mov
loope
dec
aam
sbb
into
pop
loop
fnstcw
mov
xchg
arpl
dec
jmp
test
adc
jl
cmp
lods
lret
leave
or
imulb
sbb
and
and
jmp
test
push
and
daa
mov
jae
xlat
stos
in
lahf
loopne
lods
std
lcall
dec
daa
jb
fidivs
push
push
pushf
ss
outsl
in
adc
dec
sub
bound
cli
in
mov
data16
sub
or
out
dec
sbb
fnsave
call
mov
sbb
pop
test
dec
pop
pop
fstpt
js
or
bound
test
and
fadds
sub
daa
ret
pusha
or
pop
xor
cmpsl
inc
push
cmp
ss
mov
idivb
inc
or
ljmp
loop
adc
dec
cmpsb
push
mov
sahf
pop
imul
sbb
pusha
inc
mov
in
sub
orb
dec
push
add
mov
les
pop
loop
and
clc
fmulp
cltd
fs
or
xorb
pop
push
pop
dec
iret
pop
mov
mov
inc
push
pop
or
adc
out
bound
xchg
iret
dec
test
in
int3
mov
pop
popl
and
pop
pop
insl
xchg
das
sbb
cmpsl
fs
sbb
aaa
test
aam
mov
cmp
and
in
cwtl
aas
lds
jecxz
shl
fwait
sub
or
push
enter
push
ljmp
movsb
inc
lock
pushf
fistl
insb
inc
out
call
loope
lahf
cmp
mov
xchg
lahf
jmp
push
jnp
sub
xor
in
jnp
add
and
nop
or
loopne
call
mov
inc
sbb
loopne
mov
cmpsb
push
pop
inc
insb
dec
lock
cmp
xchg
nop
xchg
andb
icebp
cmp
sbb
es
test
dec
xchg
fcmove
ror
in
jbe
out
lods
ljmp
mov
lock
jmp
cmp
add
loope
adc
and
lahf
sub
in
mov
popf
dec
lock
jp
jno
js
or
or
outsl
xchg
sub
mov
pop
test
cld
dec
insl
fnstenv
push
adc
arpl
xchg
movsl
cli
or
shl
mov
stc
loop
sub
jnp
in
fld1
mov
xor
push
lea
sar
jb
adc
and
jne
add
push
and
xchg
sub
mov
xchg
jnp
cld
pop
loopne
in
les
mov
inc
mov
inc
or
ja
and
inc
dec
sbb
xor
mov
pop
jl
rclb
test
inc
lock
dec
dec
cmp
inc
movsb
in
cmpsb
psubb
cmpsl
adc
pop
mov
jae
scas
fwait
into
xlat
leave
outsl
dec
jp
sbb
mov
or
je
cwtl
daa
out
loopne
in
or
mov
repz
enter
js
push
mov
dec
adcb
push
in
xchg
sub
dec
pop
stos
clc
xor
std
sbb
aaa
push
or
and
lods
push
xchg
jns
in
idivl
xchg
testb
xor
xchg
enter
or
or
push
cld
jb
cmpsl
out
ljmp
sbb
cmpsb
out
mov
push
ja
xlat
xor
jne
or
sub
imulb
mov
mov
inc
loopne
add
arpl
addr16
cmp
adc
mov
xor
sbb
scas
repz
aaa
dec
mov
dec
mov
xor
jbe
pop
pop
mov
jecxz
out
fstpl
pop
les
mov
arpl
ljmp
mov
jno
into
mov
test
pop
jns
dec
sbb
xchg
outsb
fsubrs
popa
pop
das
mulps
mov
rcl
xor
xchg
jb
inc
sbb
int3
scas
mov
outsb
or
out
sbb
add
fimull
xchg
daa
push
movsb
ja
mov
insb
lea
or
pop
loopne
jne
dec
aaa
add
push
jnp
hlt
dec
pop
push
pop
jbe
and
nop
imul
inc
sbb
and
cmp
es
xlat
pushf
cmpsl
mov
jae
or
stos
jmp
out
jg
xchg
dec
jno
jge
loopne
xchg
shlb
jns
inc
rorl
shrb
dec
jp
and
stos
push
jp
dec
mov
jge
mov
sahf
jp
mull
xchg
pop
pop
in
push
shlb
repnz
push
add
ret
loopne
push
mulb
frstor
mov
repnz
sub
lods
jne
adc
mov
fcmovu
add
div
test
test
clc
jmp
sub
aam
shrb
rcr
mov
adc
sbbb
test
test
mov
cmpsb
out
add
aam
push
lock
pop
cmp
cmp
mov
retw
cmp
mov
cmp
jno
sub
push
iret
push
jp
mov
jge
mov
lods
in
dec
jnp
jae
dec
pop
aam
imul
sbb
sbb
testb
inc
cmc
xchg
aad
jecxz
pop
add
fs
add
jle
je
add
bound
mov
je
push
adc
dec
aaa
sahf
out
sbb
fsubrl
scas
test
xchg
jmp
leave
sahf
ja
cld
test
cmp
sub
or
scas
incb
or
cmp
aam
xchg
push
movsb
dec
data16
push
cltd
aas
cmpsl
mov
sar
idivb
stos
sub
scas
cwtl
hlt
sahf
rcrb
insb
add
pushf
sarl
push
pushf
stos
push
cmc
repz
xchg
xor
shlb
das
aad
xchg
and
xchg
cmp
xchg
push
xor
xor
and
mov
mov
push
inc
xor
outsb
movsb
xor
ljmp
shll
pop
dec
fimuls
pop
in
xorl
mov
pop
sahf
sbb
xor
push
mov
sti
and
inc
and
hlt
sbb
inc
xor
inc
cltd
mov
pop
psrad
or
scas
mov
push
addl
lock
popa
pushl
pop
enter
mov
test
fisubl
jmp
or
jge
das
cmp
rorb
inc
mov
rcr
popf
lret
push
xor
shll
std
sti
in
pushf
dec
aad
call
pop
xor
shl
sbb
insb
lcall
adc
bound
icebp
mov
mov
in
mov
out
pop
jb
enter
xchg
mov
mov
shll
into
popf
cli
pushf
xchg
dec
lret
fiaddl
cmp
clc
push
test
cmp
sbb
jne
jbe
rol
cmp
js
loopne
or
cmc
arpl
lret
test
test
dec
inc
inc
nop
rclb
fnstcw
adc
push
dec
inc
dec
aaa
sub
hlt
jecxz
jne
sub
fs
das
rorl
pop
lock
push
addr16
jmp
lea
imul
adc
mov
test
in
or
test
pop
sbb
sub
movsb
out
inc
stos
enter
imul
adc
iret
mov
ret
fists
push
and
aas
test
push
loope
and
rclb
cmp
mov
bound
hlt
jbe
fisttpll
and
cmpsb
lds
cmpsl
loop
popa
cmp
pushw
jae
sbb
into
jl
sub
outsl
and
inc
test
inc
loop
mov
testb
out
inc
js
push
add
lock
jl
push
jbe
jo
out
jo
cmp
sub
lock
pusha
loop
or
jge
test
es
xchg
pop
mov
xchg
jae
fwait
dec
call
sub
cmp
out
sub
clc
mov
jg
fstl
gs
cmpl
cmp
rorl
mov
jo
cmp
ja
int
loopne
cltd
popa
ljmp
shlb
out
mov
or
mov
dec
cwtl
js
es
xlat
pop
cmpsl
mov
lods
cmpsl
xor
adc
xchg
test
loopne
jl
xchg
sbb
jns
in
out
repz
ret
into
push
lds
or
and
ja
xor
int
hlt
inc
dec
jne
mov
mov
sub
subl
ds
jne
pop
lods
jmp
outsl
pushl
loop
lods
inc
mov
clc
cmpsl
xchg
out
repnz
aaa
cmp
sti
xor
cltd
jl
sbb
push
sbb
stos
loopne
add
shll
int
inc
hlt
or
mov
and
and
adc
fdivrp
cli
in
lret
push
mov
dec
adc
dec
cltd
push
out
pop
or
pop
rorb
add
xor
aaa
stos
or
aam
ss
inc
pop
nop
lret
pop
call
mov
dec
xchg
cmp
sub
mov
jecxz
jo
dec
jae
movsl
mov
xchg
aas
and
inc
movl
dec
aad
and
stos
mov
stos
push
jmp
popl
pop
and
in
loop
cs
or
push
xor
jecxz
enter
popa
adc
in
jne
sub
outsb
cwtl
mov
xchg
lods
ficoml
mov
pop
xlat
sbb
fldcw
xchg
test
pop
int
mov
xchg
stos
sub
xlat
push
sbb
out
mov
pop
in
jge
orb
push
cmp
scas
sub
or
xchg
movsl
ret
subw
push
cmc
test
and
stos
stc
leave
and
or
rolb
cli
in
dec
ljmp
mov
mov
gs
gs
jae
jo
std
mov
jg
adc
and
mov
mov
imul
or
clc
or
mov
xchg
push
fldz
shlb
mov
pop
lea
rcr
hlt
push
pop
push
insb
xor
mov
pop
adc
aaa
divl
sbb
in
pop
cmp
int3
outsb
mov
xlat
jns
push
in
mov
fbld
in
lcall
outsb
jb
ret
insl
test
stos
jbe
inc
ss
add
pushf
and
push
stos
jg
push
lcall
imul
test
push
mov
sbb
jmp
pop
subb
xor
aas
mov
cwtl
jo
out
mov
lods
lret
or
jae
fdivrl
fld
fstpt
bound
out
loope
jnp
call
out
hlt
lahf
push
sahf
and
dec
sbb
inc
sbb
jp
mov
in
pushf
add
sbb
in
mov
insb
popf
mov
mov
test
lods
sub
shlb
lods
inc
adc
scas
cmpsb
movsb
sub
sbb
inc
test
orl
mov
pop
adc
sar
xor
adc
imul
bound
inc
jl
cmp
inc
push
xor
lds
xchg
xchg
adc
std
pop
pop
addr16
aad
outsb
js
xor
lods
or
test
imulb
adc
scas
sbb
jbe
imul
push
dec
jmp
addl
nop
inc
dec
inc
fcomip
xchg
int3
xor
mov
sbb
jmp
xor
and
subb
xchg
jp
pushf
dec
dec
cmc
xchg
es
sub
pop
aad
pushf
cltd
push
int
pushf
jle
cwtl
push
dec
push
push
aam
sub
jg
imulb
fdivrl
neg
adc
imul
push
stc
cs
imul
adc
negl
cltd
aaa
pop
lock
lods
test
pop
sarb
and
ficompl
ja
fcmove
push
ret
jnp
les
sahf
add
jnp
imul
stos
xchg
pop
inc
loope
mov
jg
or
fcmovne
lcall
xchg
dec
in
push
pusha
outsb
icebp
out
xchg
addb
daa
jmp
sub
aas
fcoml
shll
sub
pmullw
jns
xor
arpl
dec
and
jg
sub
or
test
loop
lcall
and
pop
ja
outsb
iret
pop
jno
aas
or
cli
cltd
scas
into
insb
aaa
jnp
mov
popf
cmp
add
or
std
push
inc
test
push
and
shlb
mov
bound
ljmp
outsb
jne
mov
pusha
xor
jae
jne
movsl
pushf
repz
outsb
pushf
push
cli
addb
and
dec
fsubs
sahf
dec
stc
mov
js
stos
test
pop
int3
out
lcall
push
sti
int
lods
andl
xchg
inc
mov
mov
or
adc
mov
ds
mov
xchg
mov
fiaddl
ret
pop
iret
mov
movsl
sub
mov
sub
jo
mov
test
and
gs
pop
aad
ljmp
addb
aam
lds
jl
movnti
dec
cmc
xchg
push
loope
les
int3
out
ret
xorb
pop
rclb
aas
jmp
lds
sar
out
pop
mov
movsl
xor
jne
lcall
inc
xor
dec
fucomp
lahf
cmp
xchg
bound
data16
jle
imul
jle
arpl
push
mov
push
scas
inc
ret
enter
add
outsb
nop
ss
jns
push
aaa
outsl
xor
jmp
aas
cs
and
sub
pop
arpl
pop
aaa
popf
adc
xchg
ds
mull
mov
mov
cltd
mov
add
lods
lea
test
out
cli
gs
add
mov
scas
sub
gs
adc
jns
mov
and
ret
xlat
movsl
out
and
ret
bndldx
test
outsl
push
inc
fwait
or
gs
sub
xor
mov
loope
mov
cmp
inc
test
inc
lsl
loope
cmpsl
mov
mov
pop
mov
mov
mov
mov
cmp
insb
push
adcl
xchg
mov
aas
jbe
imul
arpl
add
inc
dec
push
ret
call
aaa
dec
cmp
sub
and
and
mov
push
aas
jo
add
mov
push
lock
je
fwait
call
test
cmc
mov
add
jmp
inc
std
iret
out
jbe
push
push
test
outsb
mov
adc
ljmp
mov
dec
lret
shlb
xchg
or
cmp
sub
dec
aas
cmp
and
pop
mov
sbbb
ja
inc
inc
repz
fdivrp
gs
stc
fnstenv
inc
fwait
ret
ja
xchg
scas
les
mov
in
mov
sub
and
movnti
mov
movsl
jge
dec
stos
xchg
mov
xor
cmp
push
xchg
stos
xchg
mov
xchg
aaa
xor
addr16
mov
xor
lahf
mov
push
xchg
push
mov
sbb
jo
push
cmpl
push
es
sti
fbstp
jl
pop
into
out
xor
dec
and
fldenv
mov
lods
icebp
sti
lea
pushf
dec
cli
xchg
in
shlb
adc
out
imul
pop
stos
cmc
jns
test
aam
and
add
icebp
insl
sbb
insb
cmp
mov
mov
fcoms
repz
ss
addl
nop
aam
andb
mov
mov
leave
je
pop
sbb
cmc
xor
inc
sahf
aad
and
mov
mov
or
cli
xor
or
jnp
cmp
imul
arpl
int
inc
cmpsl
subb
sbb
mov
nop
dec
jnp
mov
jbe
sub
arpl
popf
lods
xchg
test
jae
popf
push
sub
lods
icebp
push
sub
pop
jmp
pop
test
shll
in
push
mov
inc
lods
fidivl
shlb
clc
xor
fdivp
mov
dec
lods
pop
push
dec
add
addr16
mov
cmc
aad
sbb
lock
int3
mov
sti
adc
and
dec
js
jmp
hlt
aam
xor
test
cmp
pop
ljmp
movntq
fcoms
and
add
pop
jg
mov
addb
hlt
xchg
data16
fnstsw
mov
mov
dec
clc
xor
repz
or
aad
out
add
mov
push
xchg
inc
les
test
sti
inc
pop
fwait
inc
push
pop
jl
sti
icebp
sub
data16
out
dec
out
fs
scas
pop
in
xor
and
sbb
xchg
sbb
cmp
add
push
outsb
lcall
ss
shrl
shrl
dec
mov
in
mov
fstps
cs
pop
aas
sub
jns
jns
xor
and
mov
test
inc
inc
cli
hlt
cmp
and
cmpb
lcall
xor
in
mov
and
adc
lahf
out
mov
jnp
pop
loopne
std
roll
popf
pushf
jle
aad
mov
xor
mov
movsb
cld
xor
pop
ficompl
lahf
pop
fsub
clc
jb
lods
xchg
loope
jb
out
call
xchg
ds
xor
xor
push
jecxz
fs
jge
stc
sub
loopne
cmpsb
cmp
mov
int3
inc
jp
pushf
popf
sub
sub
or
xchg
cwtl
xor
rorb
sti
shll
cltd
and
cmp
scas
xchg
mov
icebp
test
dec
and
out
cmp
adc
jecxz
add
mov
dec
lods
mov
or
pusha
xchg
xor
aas
push
sbb
int
xchg
out
lret
xchg
mov
call
int3
mov
xchg
in
push
sarb
dec
cmpsb
je
notl
dec
xchg
out
ret
mov
in
jg
cmp
outsl
xor
in
mov
sbb
xchg
stc
scas
xchg
add
cwtl
fnsetpm(287
xchg
fs
mov
outsl
bound
fcom
out
lret
das
mov
pop
ficoms
mov
pusha
mov
adc
nop
enter
leave
dec
popa
gs
outsb
lcall
mov
add
aam
mov
mov
in
xchg
cmp
push
adc
movsb
mov
mov
and
jecxz
jle
aam
call
aam
mov
xchg
outsl
mov
icebp
es
push
test
adc
inc
dec
std
push
gs
sarb
fsin
cmp
adc
cmc
movsb
arpl
imul
int
push
mov
inc
add
jp
imul
xchg
sbb
mov
mov
mov
add
mov
push
or
and
adc
mov
int3
xlat
test
sbb
or
iret
sub
subl
add
pop
pusha
aam
push
and
inc
and
decb
sar
push
insb
jge
mov
andl
lcall
test
or
sub
xor
mov
xchg
jp
add
and
adc
sbb
mov
or
mov
pop
lods
inc
ss
scas
add
jae
jno
sub
xchg
ljmp
addr16
xchg
decl
cmp
or
enter
mov
inc
scas
xchg
loopne
and
std
cs
push
jb
stc
out
stos
add
ds
xlat
cmc
dec
push
or
out
testl
sti
nop
adc
add
mov
fwait
popa
mov
scas
ret
jg
push
sub
or
je
add
or
loopne
sbb
and
push
mov
push
cmp
add
inc
mov
cmp
mov
mov
loop
jnp
outsw
iret
inc
gs
sbb
and
fldenv
xor
pop
les
or
test
pushf
arpl
lret
iret
rorl
xchg
mov
mov
sub
pop
lods
rolb
mov
negb
js
mov
out
and
inc
sub
mov
add
and
in
icebp
dec
cmpl
call
mov
inc
adc
mov
into
lock
shrb
data16
jb
dec
pop
cld
jno
stos
data16
dec
or
clc
dec
lret
jecxz
shlb
add
ljmp
popa
adc
ss
icebp
stc
mov
aam
je
das
pop
mov
add
pop
lea
push
cmp
arpl
ss
jl
xor
push
mov
mov
xor
movsb
xchg
mov
mov
inc
negl
pushf
loopne
pop
mov
adc
sbbl
into
lock
insb
icebp
daa
sahf
pop
outsb
mov
cmp
mov
rclb
sbb
hlt
pop
xchg
test
leave
add
cmp
cmpsl
or
xchg
sahf
sub
bound
mov
jae
sti
jge
shlb
push
rcrl
nop
cmc
into
hlt
xor
jl
push
lods
test
cmpsb
in
sbb
cmp
mov
fwait
mov
mov
data16
iret
jmp
or
mov
mov
bound
aad
inc
repz
adc
test
clc
sbb
shll
in
inc
cltd
fsubrs
lods
xchg
and
test
cmc
js
push
pop
insb
or
jns
dec
test
std
pop
push
jb
sbb
mov
lock
mov
notb
xchg
cmp
data16
imul
adc
cmc
xor
pusha
push
mov
shll
xor
sbb
rcr
fistps
mov
fcomps
jg
and
into
outsl
enter
jge
arpl
or
leave
dec
push
mov
nop
push
shl
enter
push
or
jl
inc
repz
and
daa
ret
imul
jae
loopne
call
inc
sub
inc
sub
inc
leave
pop
mov
repnz
push
out
frstor
stos
clc
jo
adc
xchg
xchg
xor
andb
test
xor
or
inc
xchg
and
in
pop
testb
xor
rdtsc
pop
repnz
nop
add
cmpsb
inc
sub
mov
mov
enter
xchg
ficomps
push
add
mov
nop
jmp
push
repz
into
loope
jle
push
fs
dec
xlat
add
cmp
jecxz
cmp
mov
dec
and
sub
outsl
jmp
out
out
aad
pop
add
jmp
into
movsl
or
mov
mov
mov
cmp
arpl
fnstcw
mov
sbb
sub
movsb
out
fsubrl
inc
ljmp
add
pop
lods
fistl
in
jbe
lock
mov
leave
icebp
ret
and
es
inc
push
push
jg
push
insl
inc
and
dec
in
std
push
pop
insl
sub
cmp
jge
stos
mov
imul
cmp
movsb
sub
fsubs
push
int3
jnp
inc
jae
cld
sub
push
sub
stc
or
jae
mov
jae
es
outsl
popf
mov
jp
jmp
and
mov
mov
inc
pop
push
and
cmc
sarl
sar
fcmovne
add
or
addl
add
adc
add
sbb
push
add
out
outsb
and
jmp
loop
scas
dec
inc
pop
mov
enter
push
movsb
xor
add
imul
in
je
cmp
stc
loope
pop
ret
js
xchg
push
pop
cmp
sarl
sbb
xchg
jp
add
fucomip
rcl
loopne
je
cltd
bswap
repz
and
int
rolb
pop
in
cmc
test
fdivrs
out
inc
fsubs
or
or
imul
cwtl
test
dec
pop
or
insl
push
mov
movsl
add
lret
mov
std
ret
adc
cs
fists
cmp
addr16
popf
shlb
mov
shrl
leave
aad
pop
gs
push
jp
jg
push
adc
pop
repnz
sbb
inc
fisubs
arpl
mov
stc
mov
into
shll
lods
adc
jmp
push
inc
call
inc
cmp
jnp
push
inc
lret
mov
or
adc
jg
xor
xor
jne
jo
fidivs
ja
and
data16
or
and
hlt
shlb
shll
sbb
pop
push
scas
sub
aad
push
sbb
xacquire
arpl
in
jne
sub
jl
add
and
mov
cmpb
sti
call
xlat
and
inc
add
adc
pop
pusha
scas
dec
outsb
es
jg
in
cwtl
inc
mov
jne
jg
mov
sbb
sub
jg
lods
cmpl
inc
fwait
je
incl
scas
lock
idivb
sbb
jne
mov
or
xchg
mov
pop
popf
add
mov
fisttps
push
inc
rcll
and
aas
clc
adc
dec
dec
xor
rclb
fisttpl
outsl
bound
iret
cmpsb
iret
adc
jp
clc
adc
neg
bound
fdivrs
sbb
xchg
loope
xlat
jg
decb
shrl
or
pusha
sti
sub
jnp
movsb
add
popf
and
xchg
dec
fidivl
pop
inc
int3
and
add
jge
in
int3
repnz
fs
mov
stc
jle
mov
xchg
shll
addl
xor
in
pop
dec
pop
push
push
adc
negb
dec
mov
pop
pop
xor
movsb
sub
jle
xchg
fsub
fwait
sub
cmp
scas
jno
or
cli
lods
and
sub
jns
pop
push
pusha
int
push
xchg
mov
and
lret
pop
out
mov
xchg
or
rcl
adc
xchg
pop
sbb
or
sub
cli
inc
and
push
jecxz
xor
gs
inc
pop
mov
xor
sub
pushf
std
imul
mov
in
jmp
lods
in
in
and
mov
hlt
pop
dec
mov
rorb
rclb
cmpsb
aad
mov
jae
hlt
daa
lcall
push
test
out
mov
stos
ss
das
test
jne
aaa
rcrb
imul
je
cmp
ret
push
cmp
ss
mov
fistpll
scas
jns
inc
cltd
sbb
int
sbb
pop
jmp
lea
mov
cmpsl
mov
cmc
pushf
push
xlat
repz
aam
test
stos
push
mov
add
mov
cmpsb
aam
push
xlat
sub
push
int3
mov
outsb
jne
pop
add
jge
xor
xchg
sbb
adc
rclb
in
in
push
cld
inc
mov
jle
and
xchg
cmp
push
pusha
outsb
fbld
ds
mov
or
cmp
jno
testl
pop
and
out
and
cltd
or
orb
bound
or
stos
dec
call
enter
fsubrl
rcrl
jae
jp
dec
jg
pop
mov
and
xor
lods
fidivs
sub
push
xchg
jnp
push
movsl
scas
aam
or
movsl
jmp
pop
xor
sbb
inc
adc
stos
imulb
fs
sbb
push
movsb
jmp
cmp
sbb
fbstp
rcll
stc
mov
jmp
imul
bound
jnp
dec
imul
arpl
ficompl
push
pop
mov
and
scas
mov
in
mov
jg
sub
push
xchg
mov
add
fistl
in
adc
and
mov
push
mov
or
mov
insb
adc
sbb
cli
arpl
jle
stc
in
cmp
xchg
mov
sbb
xlat
scas
mov
push
xchg
sarl
mov
sub
adc
sub
clc
dec
jbe
xor
xchg
inc
inc
mov
or
hlt
ret
stc
mov
dec
cmc
mov
sbb
jbe
xlat
inc
mov
jl
pop
nop
fidivs
push
cmpsb
mov
push
sbb
leave
mov
clc
icebp
fistpll
mov
mov
lock
pusha
add
mov
scas
aas
outsb
je
cmc
mov
cwtl
dec
jecxz
out
or
mov
jne
int3
dec
xchg
outsb
inc
dec
movsb
push
fdivp
mov
out
sbb
xor
mov
inc
sbb
hlt
sub
scas
leave
stos
repnz
mov
fwait
adcb
and
or
imul
inc
loopne
imul
sbb
mov
clc
pop
inc
mov
cmp
fisttpll
jp
mov
or
imul
push
dec
ds
lods
jl
dec
jbe
lcall
std
test
dec
pop
mov
and
imul
mov
push
std
xor
mov
pushf
inc
orb
pop
push
xchg
mov
sub
and
bound
mov
aas
mov
dec
out
outsl
jmp
popf
sub
in
mov
and
or
in
sub
add
or
pop
push
dec
xchg
dec
push
ret
pop
mov
sub
jne
cmpsb
cmpsl
pop
int
and
mov
subl
pop
mov
aaa
push
fcoms
or
in
sbb
mov
mov
push
ja
hlt
push
roll
stc
cmp
fmull
les
sbb
inc
jbe
insw
mov
in
cmp
jmp
in
pop
sarb
jg
cmp
xchg
and
jge
test
or
lea
jmp
ficompl
ja
cmpsb
sbb
lods
pop
loopne
sbb
pop
shlb
push
inc
in
or
scas
mulb
push
dec
push
add
sub
push
ja
push
lret
loop
nop
cs
mov
jg
sbb
scas
dec
and
aad
mov
scas
test
test
mov
mov
push
fcoml
scas
cwtl
nop
push
jl
adc
scas
sub
sub
cld
test
fdivrp
and
xchg
adc
std
inc
mov
pop
jo
mov
lret
xchg
repz
xchg
movsb
insb
sahf
mov
pop
mov
inc
push
dec
mov
xchg
cmc
xchg
or
mov
je
lods
lcall
insb
and
lods
mov
fsts
add
sbb
push
jecxz
xor
les
and
in
jne
cmpsl
ja
dec
in
js
push
push
pop
jno
imul
jno
rorb
xchg
or
out
adc
mov
out
cmpsb
jb
sub
inc
jge
jecxz
dec
fwait
insb
xor
je
pop
xchg
cld
dec
movsl
rol
std
fildl
mov
mov
mov
sbb
sbbb
inc
sub
cmp
sbb
sbb
call
xor
pop
bound
cmovp
jg
and
icebp
sbb
gs
insl
push
inc
test
in
sbb
sub
push
xchg
xchg
pop
test
cmc
lahf
inc
or
mov
adc
iret
cmp
inc
ret
xchg
loop
jp
fnsave
loopne
pushf
jae
bswap
imulb
in
and
bnd
test
jle
das
mov
adc
push
pop
xchg
pop
ror
add
in
xlat
fsts
mov
rcll
mov
cmpb
adc
push
mov
jb
cmp
mov
sbb
mov
adc
add
inc
ror
jecxz
mov
fistl
mov
sbb
lds
arpl
les
push
cltd
js
push
jg,pt
jnp
pushl
out
mov
sub
aaa
fstp
jle
dec
insl
push
xor
sahf
stos
lahf
mov
cmp
mov
lds
mov
jl
push
pop
sbb
scas
imul
stos
jbe
pushf
dec
sbb
or
pop
fwait
sbb
lcall
rcll
data16
add
cmp
jo
sbb
xor
ret
jbe
cmp
mov
mov
popa
in
inc
and
rorb
in
iret
pusha
cmpsl
imul
daa
rorl
cld
and
dec
push
xorb
push
add
shrl
into
jae
jo
test
lahf
mov
mov
cmpsb
sti
dec
mov
add
xor
in
sub
daa
adc
mov
out
imul
loop
mov
data16
sub
mov
xchg
sub
inc
int
lea
pop
xorb
cld
or
and
mov
rclb
xchg
jecxz
popa
mov
repnz
imul
pop
jne
xchg
push
ret
lds
mov
cmp
mov
cmp
stos
mov
pop
dec
adc
mov
lcall
decl
call
jnp
xchg
test
into
ss
in
xor
dec
cmp
mov
lret
popf
clc
push
movsl
in
dec
mov
push
jp
jp
sbb
inc
push
loop
in
enter
push
jne
mov
in
mov
repz
arpl
pop
mov
jge
fnsave
dec
in
xchg
jb
xchg
sbb
fwait
cld
cmp
insb
mov
clc
stos
or
pop
std
fistpll
push
mov
dec
jmp
dec
adc
into
mov
lahf
addr16
mov
mov
int
in
repnz
jp
pop
jmp
push
sbb
out
rcr
js
pop
andl
cmp
push
std
inc
subb
push
or
mov
inc
in
nop
stos
aas
leave
inc
lcall
xchg
test
xlat
mov
sub
cmpb
fisubl
push
ds
mov
nop
dec
int3
sub
ret
add
adc
lea
stc
inc
sub
shrl
or
dec
fwait
negl
movsl
adc
jl
loope
xchg
rcl
aam
clc
lahf
pop
mov
cmp
subl
lea
cmp
icebp
add
cmpsl
js
enter
sbb
mov
pop
cmovne
clc
sub
repz
ret
lret
and
add
movsb
icebp
dec
inc
xor
pop
mov
cmp
lods
fs
inc
sbb
cmp
xchg
into
mov
iret
add
add
pushl
fwait
cwtl
cmp
inc
movsb
sbb
inc
pop
sbb
sub
sub
push
push
dec
popa
sbb
sub
push
xacquire
xlat
xchg
decl
mov
push
lock
gs
adc
and
cltd
and
lret
fnstcw
inc
jg
adcb
mov
dec
pop
inc
fisubrl
pop
cmpsb
sub
subb
push
int
and
jmp
std
lds
iret
jmp
xlat
in
pop
in
add
mov
ret
add
and
add
loop
push
and
push
adc
lods
mov
jo
or
jbe
push
cmpsb
xor
pushf
sub
daa
pop
mov
mov
xlat
ja
aas
lods
lock
or
xlat
repnz
aad
fadd
nop
not
das
std
leave
addr16
test
push
lock
mov
call
inc
mov
mov
popa
sub
cltd
add
dec
ljmp
jp
popl
es
fs
hlt
out
adcb
pop
ficompl
pop
mov
test
popf
ljmp
push
aam
dec
mov
dec
hlt
add
lcall
lret
lods
adc
pushf
inc
push
rcr
sub
mov
scas
sahf
jp
dec
ror
sub
iret
outsb
sub
insb
push
push
or
pop
sbb
sbb
dec
repnz
inc
inc
imul
mov
scas
cmp
xchg
xchg
xchg
je
repz
or
cs
mov
ret
cmp
push
test
push
ror
repnz
sbb
xchg
ret
mov
int
bound
push
nop
and
insb
pop
adc
movzwl
dec
mov
loop
int
loopne
ffreep
push
outsb
cld
sbb
popf
push
loop
aad
les
pop
pop
inc
xor
sub
mov
sbb
adc
stos
stc
aas
jg
fs
cwtl
test
and
or
insl
fmulp
lahf
jecxz
add
inc
js
pop
repnz
fidivrl
add
mov
pop
and
rcll
sarl
adc
leave
fcoml
push
xor
xchg
mov
inc
push
dec
jg
aas
loopne
sub
xor
add
or
ficoml
aaa
test
mov
inc
repnz
popa
sti
cmp
in
in
cmp
push
hlt
fcmove
pop
insb
fstpt
les
sub
push
imul
push
ret
sahf
lock
icebp
pop
cli
mov
shrb
add
xchg
inc
jne
xchg
and
push
adc
lods
fstps
test
enter
pop
cmp
orb
movsb
add
ret
sbb
add
call
addr16
divl
nop
mov
dec
addr16
jb
or
sub
jns
lahf
fs
mov
pop
mov
mov
cmp
jb
aaa
dec
inc
fnsave
jp
mov
add
or
push
cld
jb
dec
sbb
cmp
mov
inc
movl
xlat
xor
xchg
mov
inc
sub
hlt
stos
dec
inc
shlb
fnstsw
jns
and
jge
pop
dec
fwait
jns
push
pop
cmp
fcmovb
jecxz
pop
pop
enter
mov
std
fucomip
lods
pusha
add
insl
lret
lret
fisubs
fucomip
shl
gs
push
roll
mov
cmp
fsub
and
leave
movsb
mov
lret
lcall
neg
push
cld
mov
push
inc
enter
sub
mov
jb
mov
xchg
jno
loope
push
ret
dec
cmp
pushf
or
iret
cld
fadds
add
mov
and
xor
lahf
pop
add
out
mov
pushf
sbb
cmp
les
aaa
lock
pop
mov
inc
icebp
or
movsl
pop
mov
divb
mov
sub
push
lahf
or
aam
sub
sub
and
sbb
mov
pop
xchg
inc
xor
sbb
push
dec
imul
rcrl
cmp
pushf
je
push
pop
push
test
addr16
mov
in
ret
mov
push
fs
mov
addr16
fstps
adc
lock
sbb
adc
inc
push
mov
dec
fildll
mov
insb
data16
cmp
jg
je
add
int
paddusw
test
cwtl
and
es
inc
ds
loopne
jo
mov
adc
push
cmp
rcrb
cmp
sar
add
adc
in
inc
les
sub
ret
stos
fsubrl
rclb
cmp
sahf
fs
stos
inc
mov
mov
fisttps
sub
mov
xchg
cmp
adc
sub
inc
jnp
xor
in
cli
add
dec
cli
mov
mov
ret
mov
push
sbb
js
mov
xchg
jne
add
test
cli
inc
enter
adc
flds
jmp
push
test
js
adcl
mov
icebp
jb
sub
or
fsubs
or
dec
clc
mov
add
inc
xchg
mov
or
sbb
dec
jne
mov
fiadds
push
cmp
inc
loop
out
decl
and
arpl
push
adc
cmpsl
mov
out
or
sahf
jb
sub
lock
cmp
pop
ret
int
xlat
jp
sub
jne
movsl
inc
xor
fisubrl
outsl
fnsave
sub
ja
subl
insl
cwtl
loop
inc
add
movsl
lahf
mov
js
pop
idiv
sub
mov
sbb
ss
mov
in
movsb
je
pushf
cli
sbb
sub
cmp
cltd
inc
or
daa
pop
pop
and
test
mov
and
pop
xor
pop
push
sub
and
adc
xor
das
or
sbb
jl
outsb
shlb
mov
push
xor
daa
fpatan
adc
jle
dec
mov
dec
hlt
adc
add
mov
inc
repnz
mov
cli
pop
xchg
dec
rcrb
mov
outsl
rcll
ret
fists
ret
xor
pop
adc
cwtl
inc
je
mov
cmp
xchg
stos
mov
cmp
fsub
jae
mov
xchg
xlat
es
call
xchg
cmp
push
cmpb
loopne
ret
jo
push
xchg
dec
push
lods
jmp
xor
push
jno
sbb
popf
test
mov
pop
adc
shll
pusha
dec
cmc
push
jb
gs
shr
cld
enter
and
sti
sti
cmpsl
dec
mov
outsl
push
idiv
mov
mov
icebp
lcall
mov
rclb
add
adc
rcr
std
scas
add
imul
jge
cld
lock
mov
out
xor
xchg
sbb
rcl
repz
cltd
test
xchg
ds
sbb
push
push
push
pop
mov
leave
push
push
push
push
lock
add
lret
xchg
test
lret
pop
outsb
pop
mov
loope
push
int3
inc
cmp
mov
ss
popa
pop
sub
cmc
popa
test
das
mov
or
adc
sub
stos
pop
iret
pop
cmc
loope
cltd
fwait
mov
ret
dec
pop
mov
cmpsl
sub
lock
xchg
es
push
imul
stc
jle
jnp
js
jne
insb
jb
inc
jg
jb
jb
ja
or
dec
test
in
div
sub
out
dec
icebp
push
xchg
shll
lods
cmp
lods
sub
pushf
in
pop
in
xlat
inc
addr16
jno
enter
mov
push
jp
jmp
sub
mov
push
in
push
inc
jl
decb
xchg
mov
mov
xor
mov
sahf
mov
mov
xor
mov
in
mov
adc
call
jno
lea
mov
push
imul
xor
repz
shr
fsts
nop
mov
inc
popa
es
cmpsl
xor
std
mov
jmp
aaa
shr
inc
arpl
into
mov
add
xchg
cmpsb
inc
cld
or
cmp
jno
cmp
shl
test
jnp
fsts
mov
mov
sub
cmpl
lods
mov
nop
test
jnp
xchg
sbb
push
jnp
mov
pop
les
inc
inc
fsubrp
icebp
int3
pop
adc
adc
test
popf
cmp
insl
testb
add
sub
xchg
mov
jo
mov
push
adc
leave
in
mov
out
mov
add
in
out
ror
sbbl
or
cmpsl
and
pop
das
mov
jb
mov
mov
fildl
std
frstor
sub
mov
mov
das
sbb
push
dec
push
push
jo
ficoms
dec
int
scas
jb
jle
outsl
cwtl
cmpsl
outsb
xor
mov
mov
out
mov
push
and
clc
sbbl
mov
leave
sbb
mov
and
jnp
test
xor
add
stos
fsts
mov
add
sub
clc
xor
cwtl
arpl
sub
sbb
movl
pusha
test
out
xor
cmp
sbb
push
and
pop
shrl
jge
or
fwait
sub
xchg
test
dec
pop
mov
aad
adc
mov
into
xor
dec
adcb
inc
xlat
cmp
aaa
push
jo
aas
dec
dec
mov
push
sub
add
or
cmp
ficompl
push
scas
aad
pop
idiv
andb
dec
cmp
push
fisubs
jae
add
int
les
lcall
xor
dec
bnd
push
xchg
and
jmp
push
fptan
mov
mov
mov
aas
ret
daa
pop
add
add
jle
lods
loopne
jecxz
and
cld
lods
idivl
push
adc
pop
mulb
inc
mov
mov
sbb
inc
popf
push
mov
cmp
test
jge
sub
outsb
sbb
sub
sub
ret
sub
dec
jg
xlat
jno
xchg
js
inc
lea
decl
jae
xchg
pop
push
inc
push
sahf
pop
scas
ljmp
movsl
fadd
repnz
pop
lcall
mov
sub
pop
fadds
and
push
ja
aad
aam
shl
es
insl
dec
jo
fcmovnu
sahf
daa
jle
jnp
push
jmp
cld
inc
mov
pop
inc
xor
call
sub
and
pop
xchg
push
fsubl
mov
and
mov
mov
xor
pop
nop
movq
and
jp
in
dec
or
and
cmp
outsl
les
jnp
sub
ljmp
and
ret
out
xchg
dec
adc
cmpl
adc
dec
jbe
lds
push
int3
int
sbb
mov
ret
and
stos
icebp
imul
sbb
sub
test
lahf
pop
fsub
sahf
scas
pop
jne
push
in
mov
xor
dec
cltd
mov
pop
cmp
jmp
add
repz
rcrl
lea
std
data16
mov
jmp
mov
test
lcall
add
mov
dec
movsl
test
pusha
cmc
push
or
nop
iret
mov
sbbl
lock
inc
xchg
xchg
daa
xchg
mov
and
lea
bound
adc
push
mov
je
imul
faddp
jo
inc
add
lds
leave
dec
dec
jns
inc
pop
xlat
repz
jg
cvtps2pd
mov
ret
insb
inc
jge
mov
pop
lret
adc
scas
stos
xchg
jg
lcall
mov
fisttps
mov
cltd
sbb
xor
xchg
jno
mov
lret
inc
xlat
sub
sbb
outsl
dec
push
out
mov
int3
in
mov
inc
jnp
lret
jbe
and
inc
loop
int
mov
push
mov
lods
xchg
xchg
clc
push
fadds
rcrl
jl
pmulhuw
mov
push
cmc
hlt
ror
xchg
lods
rclb
inc
into
pop
cmp
scas
xor
xchg
jb
fs
ja
out
pop
pop
cmp
jl
iret
lcall
jmp
pop
sub
imul
sbb
xor
test
rcl
inc
lods
cmc
cmovbe
push
dec
or
and
jg
mov
in
mov
fldcw
jp
inc
xor
cmp
jp
push
mov
cltd
notl
negl
mov
jg
lret
out
xchg
icebp
in
pop
mov
adc
add
inc
cwtl
mov
test
clc
movsl
dec
mov
sbb
xchg
and
push
btc
cli
cmpsl
jno
pop
adc
push
nop
insb
enter
adc
popa
loopne
push
dec
add
sti
aam
shrb
cltd
push
xchg
les
cmp
adc
lods
insb
mov
les
adc
bound
js
xor
mov
mov
cmp
push
repz
inc
cld
xchg
jg
mov
das
jne
cld
sar
das
and
xchg
rolb
mov
sub
dec
jo
mov
loopne
cmp
notl
push
repz
jmp
mov
inc
andb
inc
loop
jge
mov
jno
adc
xor
roll
sub
int
sub
nop
push
test
outsl
fisttpl
jo
jno
repnz
inc
push
lret
mov
pop
outsl
hlt
mov
inc
mov
mov
into
jmp
push
mov
mov
hlt
fisubs
int
xchg
mov
lds
mov
mov
and
in
inc
shr
ror
xor
mov
stc
sub
mov
cli
and
aam
dec
cmpxchg
clc
jae
cmp
pop
cmp
sahf
dec
out
cwtl
jg
mov
and
push
in
imul
jae
lock
in
sbb
jbe
sbb
rclb
lods
push
jecxz
sbb
jg
pop
mov
dec
insl
fnstsw
add
lock
icebp
xor
sarb
xor
mov
fs
test
scas
aam
mov
jge
je
scas
dec
orb
pop
and
hlt
mov
adc
pushf
fcoml
jle
push
mov
lock
add
ljmp
enter
cltd
dec
sub
imul
imul
and
mov
add
movsb
ficomps
fcomps
inc
andl
scas
xchg
xchg
xchg
bound
shl
cli
out
cmp
imul
mov
dec
out
icebp
pop
pop
adc
ljmp
fadd
push
mov
imul
dec
mov
pop
and
inc
repz
pop
xchg
fwait
push
outsb
xchg
pop
cs
sub
jo
push
loopne
fdiv
dec
pusha
lret
jno
lahf
mov
lahf
mov
stos
pop
fidivs
xor
and
or
xor
out
pushf
mov
sub
test
xlat
inc
mov
add
lcall
ficomps
add
push
xchg
outsl
popa
sahf
cmpsb
hlt
xchg
xchg
jb
mov
aaa
xchg
imull
fimuls
cltd
sub
dec
roll
mov
in
test
dec
outsl
pop
scas
sbb
in
sbb
loop
lret
cmp
pop
mov
leave
sbb
sbb
aam
mov
pop
std
cmc
lcall
inc
test
rol
sub
mov
inc
cmp
aam
fwait
cmp
pop
fs
lcall
xor
incl
xchg
stos
push
fimuls
dec
xchg
ja
mov
bound
mov
mov
faddl
mov
out
test
adc
leave
sub
cmp
test
call
xchg
negb
push
jle
jns
loop
mov
add
xchg
mov
stos
inc
inc
mov
jg
aas
pop
movsb
in
call
cmp
mov
mov
adc
sub
ret
jno
xchg
mov
aaa
clc
in
and
clc
ss
xorl
mov
les
or
sbb
movsl
lret
push
mov
xlat
push
or
xchg
sahf
or
out
pusha
pop
jo
jle
pop
sbb
addr16
bound
sbb
fdivrl
jg
lret
cli
dec
imul
enter
pop
mov
xchg
add
test
iret
sti
mov
imul
out
cmp
jo
add
outsl
test
inc
fdiv
sub
into
and
ret
mov
aad
test
nop
pop
xor
dec
sbb
push
into
dec
add
call
push
xor
adc
nop
mov
dec
cmp
test
lcall
call
sbbb
inc
testl
mov
lea
lods
mov
cld
jbe
sbb
movsb
mov
pop
xor
add
jae
rcrb
dec
ret
jl
je
xlat
mov
repnz
sub
cmp
leave
push
fisubrl
mov
inc
sti
or
hlt
sub
jo
sub
pop
sub
dec
xchg
pop
orl
inc
pop
xor
add
subb
popa
fs
adcl
add
cli
inc
pop
mov
cmp
aaa
fs
push
and
in
shrl
scas
mov
shl
nop
outsb
push
pop
cmp
notl
or
mov
lea
lea
mov
hlt
lods
mov
leave
in
sti
icebp
into
mov
aad
ret
nop
mov
pop
pop
popa
ret
sbb
iret
lret
loopne
and
fwait
clc
add
shrl
rcr
xor
cli
cli
sarb
sub
mov
into
je
lcall
mov
adc
add
jge
addr16
inc
lret
mov
hlt
lds
arpl
pop
mov
fs
push
push
jle
jl
fwait
cmpsl
jne
enter
pop
xor
addr16
add
cmpsb
pushf
pop
pop
fstpl
ret
stos
dec
adc
add
and
jmp
in
out
test
or
xchg
cmp
adc
dec
mov
movsl
notl
and
jns
je
fiaddl
mov
xor
fstps
push
shlb
push
add
mov
mov
cli
test
montmul
cmpsb
pop
int
inc
pop
xor
and
cmc
jbe
cmp
mov
sub
xchg
cs
insl
inc
pop
movsb
inc
push
hlt
pop
lret
add
ret
int
in
xor
cmp
bound
imull
ss
and
push
inc
icebp
lods
push
add
mov
mov
fsubr
jg
aad
lds
lds
outsl
xor
mov
cltd
cmp
xor
sti
js
test
rcr
loope
push
ljmp
pop
xchg
mov
scas
sbb
dec
aam
jae
sbb
sbb
mov
inc
push
xchg
inc
outsb
push
stc
jg
xor
rcrl
ficoms
xchg
lock
aas
xlat
test
mov
arpl
rcrl
cwtl
fcomps
cmc
add
xchg
jg
mov
scas
iret
mov
addl
inc
xchg
ret
fcoml
jl
shrl
bound
adc
test
dec
rorb
mov
inc
inc
push
imul
xor
loopne
ja
cmpsb
cmp
and
daa
adc
sub
or
pusha
inc
popf
xchg
pop
outsb
loope
cmpxchg
stos
test
add
mov
push
mov
orl
jae
stc
cmpl
inc
push
popa
cmpsb
aas
xchg
stos
fs
lcall
lods
loope
inc
frstor
cmpsb
fdiv
mov
push
dec
and
sbb
cmpsl
sbb
xor
cmc
cmpsl
loop
push
lods
out
int3
xor
popa
xchg
or
adc
sahf
mov
mov
pop
lret
mov
xchg
jns
insl
ljmp
or
mov
jnp
jb
add
test
inc
pop
out
out
cld
cmp
mov
test
repz
jge
dec
gs
push
pop
jle
fs
mov
in
ficomps
lret
nop
iret
and
cmpsb
bound
daa
movsl
out
adc
xchg
mov
cwtl
push
insl
loopne
ss
cwtl
mov
xchg
paddw
roll
stos
mov
mov
gs
jns
cmc
pop
mov
inc
mov
jae
scas
insb
je
jl
jne
aas
dec
inc
repz
cmpsb
js
pop
pop
faddp
loope
andl
push
test
fstp
or
jnp
push
xchg
inc
xor
cwtl
push
push
les
xchg
sbb
sbb
jne
aaa
jbe
sbb
dec
pop
movsl
xchg
pop
push
xchg
test
cmpb
push
jg
dec
jecxz
pop
ljmp
ret
push
insl
cmp
insb
pop
jmp
adc
jl
outsl
das
test
add
xor
dec
je
pop
mov
in
stc
test
adc
loope
pop
dec
pop
stos
inc
adc
mov
sbbl
pop
fsubp
push
mov
cmp
pop
test
mov
jecxz
out
addl
push
movsb
cmc
lods
mov
out
mov
stc
push
jo
test
cmp
pop
into
movw
or
xor
inc
in
pop
jecxz
sbb
jmp
popf
jg
jg
das
sar
mov
in
jl
leave
fdivrl
jecxz
scas
xor
fcoms
in
cmp
mov
fcoms
mov
dec
and
cmp
mov
xor
fistpll
loopne
mov
outsl
test
xor
sbb
jo
into
fldl
outsl
jo
scas
or
cs
inc
pop
insb
add
in
pusha
std
and
inc
test
into
bound
and
jnp
jl
pop
mov
sub
sbb
subl
dec
out
mov
test
clc
fdivs
inc
and
sbb
stos
mov
jge
push
mov
arpl
mov
mov
lret
add
dec
int3
dec
sbb
jae
aas
and
loopne
or
jge
xchg
in
out
out
jo
adc
ds
es
inc
lods
ds
ficoml
xchg
or
test
rcrl
cs
xchg
jmp
or
add
fwait
in
sbb
pop
cmp
rclb
call
leave
adc
ss
mov
jo
in
mov
xor
push
adc
in
or
orb
push
or
dec
adc
jg
les
and
jnp
sarb
xchg
pop
mov
incl
out
mov
insb
ja
mov
pop
mov
jl
punpckhdq
push
dec
aaa
mov
into
jmp
add
aad
dec
push
inc
popa
jne
lods
pop
orb
fnstsw
orb
xchg
cmp
sti
add
sbb
add
push
xchg
add
pop
les
sahf
clc
clc
xor
stos
fs
out
lock
inc
lahf
mov
mov
jnp
fs
sub
cmp
pusha
adc
cli
test
dec
fistps
jnp
pop
inc
mov
xchg
pop
jo
sbb
sub
push
xchg
out
rcl
fdiv
insb
orl
fs
and
test
pop
shll
adc
cmpsl
aas
mov
fs
dec
aam
dec
ret
clc
xchg
inc
add
xchg
xorb
popa
cmc
sbb
mov
xlat
push
pop
xor
mov
jo
arpl
xchg
inc
cli
or
mov
dec
add
outsl
enter
mov
lds
into
repnz
jmp
pop
mov
rcrl
adc
cmpsl
or
jbe
imul
mov
adc
pop
fisubl
dec
test
cli
test
iret
xor
fs
paddsb
xor
sbb
xchg
adc
mov
or
notl
test
rcl
or
cmc
fisubs
dec
mov
popa
pushf
xchg
test
stos
sahf
cmp
jl
jl
fucom
sub
xor
loope
add
mov
xor
jbe
scas
repz
scas
push
pop
add
add
lods
lret
pop
fs
andps
adc
jl
test
les
fiadds
bound
sub
cltd
sbb
mov
jle
xchg
sbb
cld
pop
shll
fmull
pop
fnstcw
shrl
sub
adc
fdiv
in
adc
fadds
jne
call
inc
stc
cmpl
jb
in
repz
inc
add
jae
cmp
mov
into
scas
ss
xchg
sub
and
incl
sbb
nop
mov
sub
mov
popf
hlt
ljmp
scas
repnz
loopne
loopne
inc
xchg
jle
dec
out
shlb
es
xor
push
notl
add
mov
pop
mov
xor
pop
popa
dec
call
popf
adc
sub
in
add
inc
cmp
rol
rcl
ror
aas
je
fsubrl
add
mov
xor
or
mov
mov
cwtl
jge
mov
lret
pop
repnz
jnp
loop
mov
fucomp
test
jecxz
sbb
cmp
movsb
out
sub
mov
inc
mov
inc
jb
outsb
repz
ljmp
rolb
cmp
rcl
fcompl
xor
insb
insl
leave
jge
sbb
mov
ljmp
mov
ret
imul
hlt
aad
stos
add
pop
dec
push
ja
pop
pop
iret
adc
inc
in
cmp
or
out
xchg
inc
sti
xchg
outsb
push
movsl
add
jecxz
inc
sti
ret
in
push
sti
pop
mov
outsl
inc
movsb
mov
testl
js
push
xchg
sbb
loope
mov
aaa
jge
inc
aas
addr16
mov
mov
loop
sub
or
aas
sub
xchg
pop
pop
cmp
add
xor
adc
sbb
dec
inc
push
adc
movsl
lea
lock
mov
jl
mov
mov
push
in
jl
cs
mov
mov
sbb
cmpsl
pop
int3
bound
cmpsl
xchg
adc
xchg
adc
cmpsb
lcall
lea
push
dec
mov
push
mov
push
rcll
add
adc
mov
repnz
cld
sub
xchg
push
adc
mov
int3
or
dec
std
inc
and
out
daa
scas
pop
adc
pop
test
push
pusha
icebp
xchg
out
sbb
ljmp
mov
mov
xlat
cmp
sarl
sbb
inc
int3
mov
and
std
ds
jecxz
mov
fcoml
jo
nop
or
mov
jg
mov
push
movsl
mov
shrl
mov
xor
mov
shl
in
std
sub
push
fs
nop
mov
gs
sub
xchg
sbb
andl
lcall
daa
jmp
sti
shl
mov
cmpsb
mov
aas
clc
repnz
add
or
jae
dec
push
in
fstpl
js
or
inc
int3
andl
pop
xor
sub
insl
jbe
pop
dec
insb
xchg
ds
pop
aad
arpl
cmp
pop
bound
sahf
lret
pop
ja
jno
pop
cmp
lret
push
pop
pop
int
add
jae
cmpsb
jp
jl
call
cmp
sbb
add
jbe
mov
mov
stos
push
or
mov
sbb
pop
adc
pop
push
mov
xchg
inc
stc
shrl
mov
cmp
push
arpl
lods
leave
out
imul
movsb
aas
inc
pop
notb
or
pusha
into
sbb
push
mov
xchg
arpl
dec
ret
orl
inc
adc
out
test
dec
push
cmpsl
jmp
rcl
out
mov
inc
cmp
mov
in
mov
cmp
mov
lds
push
and
or
daa
lcall
cmp
or
xor
adc
je
inc
jb
in
or
sahf
sub
xchg
cwtl
push
pop
hlt
and
iret
stc
adc
cmp
int
aad
orl
cmc
jnp
dec
push
inc
shl
imul
mov
add
in
mov
mov
push
xor
movsl
dec
dec
or
pop
jmp
mov
and
add
jmp
je
xor
inc
push
test
sbb
adc
loopne
and
mov
cmp
stos
pop
fyl2x
les
inc
ljmp
pusha
xor
and
das
cmp
cmp
sbb
insl
and
imul
jne
jo
push
into
mov
adc
inc
cmp
lock
jge
jns
hlt
jmp
jne
ja
jle
ds
insb
lahf
sbb
add
dec
popa
fstpt
or
dec
cmp
mov
sahf
xor
cmp
aas
lds
adc
insb
aas
lock
rorl
adc
in
pop
cmp
pusha
xchg
test
mov
int3
das
xchg
frstor
aam
or
into
fcoms
pop
les
inc
adc
and
imul
xchg
and
mov
js
testb
push
rcrl
dec
in
shl
lahf
pusha
ja
add
xor
clc
dec
int
xor
aas
dec
cmpsl
and
into
push
xchg
insb
insl
pop
jne
in
ret
lcall
xchg
or
jg
cmc
jne
pop
pop
int3
orb
dec
or
dec
hlt
loop
cltd
mov
xchg
bswap
dec
pop
mov
xchg
mov
push
xchg
xchg
push
and
push
mov
ss
add
cmp
shl
cmp
cmc
xchg
je
and
cmpsl
shl
call
testb
mov
int3
dec
mov
mov
mov
test
adc
add
pop
aad
cltd
pushf
push
sbb
inc
fbstp
mov
stos
pop
pop
stos
pop
cmp
dec
bound
sub
adc
adc
subl
stos
loopne,pn
test
lds
mov
mov
into
xchg
sbb
inc
mov
daa
bound
cmpsb
jb
gs
movsl
shlb
in
nop
pop
mov
jg
push
or
push
jecxz
ljmp
rorb
test
dec
cmp
mov
pop
xor
mov
stc
push
cld
lods
sbb
mov
ds
loope
mov
push
cld
shl
xor
int3
leave
movsb
out
test
sbb
and
dec
sub
addr16
pop
sbb
scas
outsl
add
mov
outsl
aad
jo
sbbl
push
dec
push
test
jno
fcomi
outsl
mov
rol
add
push
enter
cmpsb
or
push
popf
ds
nop
repz
and
out
cmp
or
mov
mov
ljmp
jo
cmp
mov
loopne
sbb
push
adc
xor
xchg
inc
stos
sbb
and
iret
insl
jo
stos
or
mov
xor
xlat
jle
sbb
mov
add
xchg
mov
mov
cmp
push
push
shlb
icebp
dec
cltd
or
xor
jl
inc
test
pop
sbb
mov
inc
lea
std
sbb
sbb
daa
jp
push
dec
or
and
mov
pop
jns
lock
ja
ret
or
aad
push
test
scas
cmp
mov
je
sbb
sub
orb
decl
cmpsl
ret
insb
cld
mov
mov
xchg
adc
call
fiaddl
stos
jb
xor
jmp
out
js
adc
test
or
cmp
shlb
repz
hlt
aad
scas
jecxz
add
ja
repnz
and
xlat
push
popf
out
aad
inc
push
and
aas
into
clc
repz
std
daa
ds
push
mov
xchg
pop
fs
loope
jae
jmp
pop
mov
push
lret
ficoms
push
imul
pop
mov
inc
shlb
fnsave
test
popa
jnp
cs
lret
push
mov
push
in
ret
jae
dec
pop
cmp
or
mov
mov
aam
adc
xchg
jne
jne
jns
adc
add
es
inc
dec
and
cmpsl
and
lock
nop
inc
or
test
inc
dec
or
push
inc
fsubl
test
hlt
cmpl
loop
cld
adcl
mov
mov
sbb
add
pop
into
lret
leave
xchg
mov
leave
out
ja
insl
arpl
add
addr16
push
adc
outsb
mov
outsb
xchg
or
loop
outsb
hlt
pop
int3
ds
sub
cltd
movsb
sub
adc
pop
les
push
jge
cli
dec
mov
mov
in
pushf
inc
mov
movb
jmp
popa
jnp
sub
xor
cs
pop
mov
popa
pop
notb
push
aam
jecxz
jl
mov
scas
mov
mov
fisubrl
push
mov
cmp
pop
out
xchg
xchg
xchg
in
aad
mov
or
or
test
stc
in
sub
pop
xor
lods
iret
adc
aad
cwtl
ficoml
rcrb
inc
mov
imul
add
pop
xchg
in
jnp
fcmovbe
mov
inc
rcll
push
and
push
fistpl
push
and
xchg
dec
inc
inc
xchg
add
mov
add
and
jp
loopne
shrb
in
and
mov
imul
jge
clc
out
out
mov
xchg
xchg
hlt
xchg
lcall
fstpt
jp
mov
out
add
cli
sbb
not
or
mov
mov
jle
jmp
mov
dec
dec
in
insl
int
cmc
mov
scas
sbb
aam
sbb
enter
cli
sbb
lds
arpl
mov
popa
jg
daa
cmc
and
adc
or
lret
inc
jmp
and
jns
lock
stos
or
mov
push
jo
xor
sbb
loop
and
lods
mov
daa
push
shlb
pushf
sub
insb
jmp
out
cmpsl
sarl
in
xlat
repnz
pop
imul
xor
add
std
icebp
sub
cmpsl
mov
idivl
aaa
xchg
idivl
movsl
inc
xor
sub
add
loopne
call
scas
loop
shlb
cmp
sub
xchg
iret
adc
out
mov
or
movsb
mulb
mov
mov
mov
mov
nop
xor
je
fwait
pop
dec
mov
mov
shr
hlt
mov
jne
push
in
dec
out
add
movsl
cmp
xor
cmp
inc
sub
sti
cmpsl
jb
mov
sbb
stos
inc
inc
daa
and
and
cmpsb
in
push
mov
imul
pop
iret
je
loope
and
lods
test
cmp
daa
mov
daa
sub
mov
fldcw
fstpl
scas
scas
or
push
add
mov
test
push
jp
pop
into
fdivl
je
cmpsb
outsl
stos
jne
cltd
pop
mov
xchg
lcall
jns
imul
mov
cltd
adc
rorb
pop
and
and
xchg
push
push
pop
add
in
mov
push
inc
std
icebp
aaa
jmp
xor
mov
shll
cli
jnp
sbb
jbe
enter
je
cld
insl
xor
outsb
fbstp
in
addr16
nop
dec
push
jecxz
pop
jle
int3
jne
cmpsb
lods
pop
pop
popa
jl
adcl
push
pop
loopne
leave
repnz
or
mov
jb
cs
push
daa
sbb
lcall
mov
mov
sete
jbe
inc
es
mov
scas
mov
mov
icebp
test
sbb
outsb
sarb
in
aam
testl
mov
lret
jmp
aam
and
sarb
cmp
lea
loop
adc
orb
fcomi
je
test
pop
dec
xchg
add
ret
inc
and
loopne
in
pop
push
icebp
cmpsl
or
scas
sub
pushf
xchg
call
scas
mov
cmp
dec
iret
push
push
push
fstpl
repz
inc
and
sbb
push
stos
sbb
pop
gs
mov
repz
or
mov
pop
and
cmovbe
fstps
sahf
mov
loop
cmpsb
in
adc
sub
stos
loop
cwtl
pop
push
jno
cwtl
in
mov
jl
loope
loop
xchg
xor
jns
test
sti
shl
testb
pop
xor
adc
fisubrs
dec
and
cmp
adc
jge
dec
xor
mov
and
and
ljmp
aad
lahf
inc
xlat
hlt
ljmp
push
lds
xchg
ss
inc
dec
sbb
or
pop
enter
jbe
mov
imul
ret
mov
push
mov
push
inc
mov
test
imul
call
or
mov
lea
lret
jbe
sbb
fs
or
cmc
insb
cmc
mov
push
pusha
cs
fucomp
add
pop
add
fcoms
scas
and
cmp
pop
lds
jecxz
jns
mov
mov
xchg
mov
xlat
adc
les
xor
inc
repz
xchg
sarl
mov
leave
jg
shrb
sub
das
push
sub
and
cmp
repz
clc
int
mov
les
ljmp
xchg
repnz
movsl
fs
sbb
std
stos
add
xchg
jne
outsb
xchg
sub
or
xor
cmp
add
pmaxsw
xor
dec
jns
test
add
scas
cmp
imul
call
xchg
cmpsb
sbb
xchg
lods
add
cli
sub
jle
xchg
dec
cmp
ret
fdivrs
fistl
add
rolb
mov
js
and
pop
pop
test
cmc
xchg
jne
mov
xchg
ret
mov
mov
adc
xor
int
int3
or
jmp
aad
lods
mov
scas
mov
clc
sub
lods
clc
push
pop
les
sarl
ret
rorl
int
push
add
icebp
sbb
cmpsb
enter
fnstsw
fistl
jp
sub
idivb
pop
xchg
mov
pop
out
insl
inc
push
stos
xchg
orl
mov
call
out
xchg
push
adcl
mov
mov
and
in
repz
jb
sub
dec
dec
inc
idiv
mov
jb
stc
inc
stos
dec
ja
mov
sub
in
sahf
xchg
and
setns
adc
push
inc
shrb
js
ficoms
lcall
sbb
shrb
adc
mov
fists
rorb
int
nop
mov
add
dec
mov
jnp
insb
stc
and
addr16
sahf
add
fwait
jns
xchg
cmpsb
je
scas
add
inc
cmpsb
lock
insl
je
mov
shl
add
lds
out
out
sub
xchg
out
rcrb
enter
push
sbb
xchg
dec
sub
leave
and
popf
push
cld
push
stos
sub
iret
fsts
dec
add
shl
mov
mov
lds
push
sub
inc
roll
mov
inc
push
push
clc
dec
sarb
jne
xor
enter
push
fxch
dec
imul
dec
sahf
leave
and
mov
ret
call
dec
add
je
shlb
dec
jnp
jp
sbb
imul
and
outsb
rorl
aas
cld
jne
test
mov
out
xchg
push
lahf
pop
test
dec
loopne
addr16
xchg
inc
int
adc
iret
into
aas
lahf
lret
mov
mov
ret
push
push
sar
dec
xchg
scas
loopne
sar
adc
repz
ret
out
movsl
pop
popa
icebp
mov
sbb
and
cld
xchg
jle
and
pop
push
jl
int
sbb
jge
shll
jno
notb
xchg
mov
pop
ret
add
fsubr
mov
jb
mov
repz
fdiv
and
jb
in
or
xor
fisttpl
push
push
xor
loope
cmc
push
push
je
add
inc
pop
xor
aam
inc
cmp
gs
lidtl
sbb
int
rcl
pop
enter
clc
pushf
xlat
test
dec
pop
jg
jae
aas
jae
clc
or
mov
sbb
sub
hlt
sarb
or
andl
sti
xor
add
and
ror
test
mov
and
and
dec
and
rorl
adc
xlat
repz
push
pushf
xchg
cmp
mov
cwtl
push
out
inc
jbe
out
outsb
cmp
inc
mov
xor
mov
xorb
xchg
adc
pushf
fsub
dec
sub
imul
xor
mov
lea
jecxz
xchg
inc
in
inc
and
xchg
jmp
push
mov
ja
dec
sub
mov
into
mov
icebp
sbb
adc
jno
jo
lds
stos
les
sub
xchg
scas
xor
or
testb
lret
adc
and
adc
lods
cmp
cmp
or
xor
vandnps
lea
inc
mov
repnz
or
and
mov
sahf
sarb
push
push
out
pop
cmp
jge
mov
pop
out
mov
push
cmp
mov
xlat
pop
jns
ss
dec
imul
jns
mov
pop
int3
xchg
pop
push
push
loope
out
inc
jle
daa
cmp
jo
imul
movsb
and
inc
or
js
dec
mov
inc
lcall
mov
or
add
mov
mov
jae
adc
insb
cmp
pop
push
xor
pop
adcl
ljmp
jecxz
sbb
in
andl
mov
sbb
sbb
mov
jo
sbb
rcrb
cmp
lds
call
jnp
adc
shll
gs
jbe
fistpl
std
test
sar
inc
jecxz
sub
sbb
stos
mov
cltd
xor
jecxz
stos
popf
xchg
mov
cmpsb
inc
jns
xor
jae
in
lret
fidivrs
jle
cmpsb
ret
std
pop
push
sub
test
rorl
sbb
je
shll
arpl
jnp
lods
shll
cmpsl
call
subb
push
ds
imul
arpl
cmp
cmp
or
leave
std
pusha
cmp
pusha
jg
data16
and
movsl
mov
ljmp
push
fnstsw
xor
rclb
mov
or
fs
push
adc
sub
and
in
dec
gs
xor
lret
or
or
fcoms
repnz
and
cmp
push
mov
into
test
inc
sbb
adc
add
js
add
aam
addr16
jl
adc
fisttps
sbb
mov
div
jbe
and
cmp
sub
call
ret
test
fidivrl
ljmp
sub
and
iret
dec
mov
mov
and
sbb
sti
popa
adc
mov
jge
sbb
mov
addr16
pop
push
mov
mov
mov
int3
je
loope
add
inc
sbb
iret
fwait
inc
jp
lahf
mov
lock
cltd
cmp
sub
sbb
fcom
fidivl
stos
cld
adc
cmpsl
jns
adc
icebp
ret
test
mov
mov
out
lahf
rcrb
aaa
rorb
sbb
add
adc
outsb
bound
pushl
mov
jl
xchg
mov
xchg
out
loope
sbb
addr16
aad
call
push
mov
mov
add
mov
loopne
mov
test
imul
in
or
push
aad
std
gs
or
jo
and
add
inc
pop
sub
in
xchg
mov
xor
mov
jmp
shrl
inc
hlt
addb
mov
movsb
testl
mov
push
dec
ljmp
add
jo
jle
insb
lock
or
pusha
clc
mov
leave
mov
outsb
movzbl
lcall
mov
into
xor
ret
sahf
fstp
sub
push
pop
push
fdivrl
cld
pushfw
jbe
out
sub
push
cwtl
mov
cmp
mov
hlt
inc
cmp
ds
cwtl
and
icebp
xor
cs
in
in
shll
in
scas
aas
dec
test
inc
ds
hlt
icebp
loop
mov
mov
lods
xor
fs
fisttpl
and
adc
in
lret
inc
mov
inc
fwait
mov
adc
call
in
pop
repnz
loope
cmp
fcmovne
mov
mov
add
pop
loope
mov
sub
popa
jecxz
mov
divl
mov
jp
imul
imul
movb
mov
and
rcrb
mov
sub
bnd
lret
mulb
int
icebp
rcrb
frstor
sbb
cmp
adc
jb
mov
shrl
mov
inc
xlat
shll
sahf
movb
jge
addr16
in
mov
sub
into
sub
mov
jmp
xchg
push
push
outsb
mov
pop
add
ret
inc
mov
sbb
pop
cmp
inc
jle
xchg
mov
mov
push
mov
cmp
es
pop
stc
fs
outsb
pop
orl
loope
xchg
pop
inc
xchg
cmp
mov
hlt
call
mov
mov
sub
arpl
push
rolb
loope
sbb
and
ljmp
cmp
fscale
sbb
and
bound
in
lods
lods
imul
stos
pop
ret
shll
inc
sar
xor
das
add
ret
mov
ret
lods
mov
mov
sahf
jno
adc
mov
sub
mov
mov
lods
dec
xor
lcall
fadds
push
pop
sbb
rol
mov
cli
and
fnstsw
and
xchg
add
outsb
mov
out
xchg
xor
test
adc
pusha
sub
lock
shll
cwtl
and
mov
sbb
stos
xchg
xchg
cmp
je
mov
mov
xchg
insl
push
mov
test
xor
stos
mov
gs
add
insl
dec
iret
jge
dec
cmp
mov
push
js
scas
movsb
lds
sub
xor
jg
and
xchg
jae
and
dec
sbb
outsb
arpl
xor
test
cmp
fwait
mov
pop
push
cmp
xchg
test
mov
mov
lds
mov
mov
xchg
jmp
pop
js
cmpsb
inc
jle
stos
loope
or
dec
add
repnz
pop
inc
mov
xor
popa
sbb
mov
test
jae
pusha
inc
aaa
lahf
mov
adc
scas
test
push
add
cmpl
cli
xor
aam
loopne
xor
cltd
fcoml
call
aad
bound
cmpsb
jecxz
sbb
repz
jb
jl
push
sti
sub
push
ds
push
js
imul
pop
push
rorb
fwait
cmp
fisubrs
mov
cmp
test
enter
jecxz
push
cmp
lds
push
xchg
push
sub
push
aam
sub
ficoml
test
es
xor
adc
mov
adc
mov
adc
lods
cmpsl
xchg
jb
loope
and
xor
mov
ljmp
lret
dec
pop
push
dec
test
jecxz
hlt
insl
std
outsl
out
pop
or
cmpl
out
lods
push
ss
fsubr
jno
enterw
push
pop
js
mov
ljmp
cmp
cmpsb
sbbl
sti
xor
repnz
jmp
inc
icebp
mov
into
sbb
aam
push
frstor
jge
scas
stos
sar
cmc
fcomp
pop
lahf
ds
sub
outsl
bound
ret
inc
pop
or
jecxz
or
xchg
into
cmpsb
lcall
dec
sahf
sub
cmp
jge
movl
hlt
jg
in
adc
lahf
pop
push
xlat
inc
scas
mov
xchg
dec
cmpsb
or
add
decl
addr16
push
out
hlt
js
jbe
cmpsl
xor
test
fisttpll
xchg
mov
scas
pop
pop
or
jle
cwtl
xor
xchg
clc
push
jo
cwtl
pushf
das
int3
ljmp
add
pop
andl
in
sub
outsb
mov
imul
ds
int
sahf
jmp
cld
or
xchg
in
outsb
dec
out
cmpsb
jmp
and
loop
mov
dec
and
pop
xor
mov
xchg
sub
mov
xchg
sub
loopne
ss
cvtdq2ps
dec
xchg
xchg
xchg
jp
lahf
loopne
out
clc
mov
push
in
sbb
mov
inc
out
repz
cli
cmp
clc
insl
xchg
cmpsb
imul
jecxz
mov
fld
daa
mov
mov
pop
and
lock
dec
push
jb
dec
or
lret
mulb
jmp
mov
and
icebp
fildl
lock
sbb
xchg
adc
add
mov
pop
xchg
movsb
sub
outsb
mov
iret
sahf
gs
pusha
bound
mov
mov
stc
insb
sbb
jns
dec
ljmp
cvttps2pi
sar
imul
pop
stc
sub
cmp
aad
ret
leave
pusha
aam
enter
nop
sbb
fucomp
int3
aam
jnp
add
mov
mov
adc
mov
inc
adc
outsb
cmp
mov
adc
popa
jge
test
addr16
movsb
leave
sbb
jne
adc
inc
mov
popf
cmp
movsl
jno
and
sbb
inc
adc
xor
dec
pop
mov
divl
dec
negl
stos
stc
push
icebp
rcr
aam
or
out
out
dec
jae
test
pop
push
xor
and
scas
xchg
xor
jbe
ja
push
dec
fwait
mov
inc
in
mov
and
xor
shrl
loopne
xchg
mov
lock
jle
and
mov
or
pop
xchg
push
dec
and
iret
or
cmc
inc
test
mov
or
lds
xchg
dec
test
lea
leave
mov
xor
sbb
and
xchg
in
mov
test
inc
pop
jmp
add
cmc
mov
adc
mov
imul
push
test
push
out
aas
jmp
mov
xchg
cmpsb
inc
jecxz
inc
mov
loope
inc
mov
shll
sarb
mov
nop
inc
jge
flds
push
aaa
adc
add
and
sbb
sub
loopne
iret
fisttpll
sbb
add
pop
mov
fisubrl
mov
cmp
int
pop
inc
movsl
sti
ret
mov
mov
ljmp
cmpsl
mov
push
stc
inc
sbb
inc
push
adc
fldl
jecxz
clc
xchg
mov
rorl
clc
dec
enter
cltd
stos
shll
das
cltd
cmpsl
fdivs
in
jl
add
sub
iret
xor
xchg
pop
jnp
or
clc
xlat
in
jno
out
pusha
mov
jge
jnp
jmp
and
and
jecxz
push
sbb
outsl
int
and
mov
cmp
repnz
dec
or
shrb
movsb
xchg
addr16
add
pinsrw
xor
cmp
popa
roll
adc
sbb
dec
mov
xchg
adc
ret
out
push
pop
xor
and
mov
ds
inc
subl
in
add
xchg
push
or
jnp
dec
jl
push
mov
or
sub
cs
ss
push
cld
in
mov
xor
add
fdivrl
mov
jne
xor
push
jmp
push
mov
nop
bound
pop
push
mov
add
sub
push
cltd
push
mov
lret
mov
ret
cmp
jne
jl
sbb
jo
mov
scas
out
roll
inc
cmp
cmc
mov
push
rol
dec
imul
sub
shrl
inc
daa
mov
or
adc
jo
or
test
jne
test
push
insb
sub
out
jae
arpl
dec
notl
xor
lock
push
in
sbb
mov
xchg
adc
xchg
and
es
sub
enter
jns
mov
cmp
stos
cwtl
mov
int3
mov
dec
sub
inc
stos
add
jg
sbb
shlb
lret
movsl
pushf
call
popa
fisttps
repz
je
mov
adc
repnz
cmp
inc
sbb
push
dec
pop
push
xlat
jns
rorb
aaa
das
pop
lea
push
mov
xor
rclb
out
xlat
jg
std
xlat
and
mov
cmp
dec
jmp
mov
rcrb
mov
negl
inc
cltd
insb
in
sti
inc
out
insb
cmp
fst
aad
dec
cli
push
test
lcall
lea
mov
and
dec
repz
or
or
cmp
sbb
inc
and
add
xchg
lea
cmp
lods
mov
cs
adc
mov
mov
test
cmp
jg
out
inc
cmp
add
push
push
mov
out
jge
data16
adc
fildl
das
in
push
fisubrl
scas
push
aam
jmp
and
xchg
jbe
subl
pop
or
out
inc
je
lods
dec
dec
imul
testb
mov
loope
fsubrl
fisttpll
sbb
das
add
sbb
adc
xchg
in
lods
shlb
push
loop
das
cmp
xchg
mov
movsl
pushf
pop
icebp
or
lahf
test
mov
mov
jge
lret
cld
pop
sub
cli
lcall
mov
push
aam
inc
sti
sbb
jecxz
cmp
cltd
sbb
and
call
scas
scas
movhps
test
mov
lods
movsl
inc
xor
inc
and
cmpsb
mov
mov
mov
adc
jbe
mov
xchg
mov
les
mov
insb
sub
data16
pop
push
xchg
test
inc
add
jbe
loop
lahf
jno
cmp
aad
in
and
fdiv
push
dec
sti
sub
out
push
xor
cli
addr16
pop
mov
inc
sbbl
outsb
leave
add
jge
hlt
add
xchg
jne
add
adc
imul
fidivrs
out
loopne
dec
enter
add
sub
stos
push
inc
dec
adc
out
pop
or
in
in
scas
stos
lahf
fisttpll
clc
fs
or
mov
sti
mov
xchg
pop
ret
xor
pop
dec
and
ret
dec
loope
in
out
pop
data16
sub
movsl
daa
out
js
sbb
pop
inc
les
das
mov
insb
adc
mov
xchg
pusha
loopne
xor
stos
ficompl
vhaddpd
mov
and
cmpsb
mov
jle
or
add
xor
call
jnp
psubb
js
push
push
out
dec
sbb
ljmp
pop
call
loope
sbb
test
mov
jecxz
pop
aaa
popf
je
cmp
push
iret
jmp
pop
push
mov
cwtl
add
data16
insb
call
pusha
clc
aad
sarb
push
or
loop
mov
sub
add
outsb
xor
push
pop
dec
je
nop
jae
add
inc
xchg
rcrl
jns
cmpsb
cwtl
imul
adc
lret
iret
or
cli
or
outsb
cwtl
mov
sub
xchg
out
repnz
negl
xchg
cmpsb
xchg
and
xorb
push
scas
add
shrb
mov
mov
jns
test
adc
daa
loope
mov
fisttpll
cwtl
into
push
push
pop
mov
icebp
push
lock
add
push
fidivrl
dec
jl
in
adc
xchg
outsl
sbb
xor
pushf
xor
xlat
test
lret
lock
or
add
xor
inc
fwait
int
add
mov
mov
mov
mov
jge
sub
mov
xchg
jno
incl
scas
clc
ret
mov
cmpb
jmp
push
lret
js
push
nop
das
shl
cmpb
cmp
and
jle
mov
xchg
insb
out
jge
jl
cmp
outsl
int
or
push
inc
dec
and
cmpsl
xor
push
xchg
mov
and
insl
adc
jg
iret
std
mov
pop
ret
push
pusha
das
gs
and
adc
bound
scas
cmp
sti
movsb
dec
inc
cmpsl
lods
push
ret
push
cmc
mov
or
outsb
inc
cmp
fadds
jmp
mov
imul
inc
push
mov
clc
vmovlpd
popf
sahf
out
add
sti
in
sbb
in
jae
in
insl
push
aad
fs
cmp
aaa
sbb
xor
or
xor
ficoms
jne
jge
in
sbb
scas
and
notb
dec
jmp
mov
cmp
dec
mov
lcall
scas
adc
in
cltd
enter
sahf
inc
push
les
and
cmp
jmp
mov
xchg
jl
push
mov
fwait
sbb
mov
and
enter
push
sub
aam
push
xchg
rorb
hlt
shrb
and
jno
fdivr
cmp
jno
enter
xor
rcrb
int
sub
hlt
fdivrs
fucompp
push
fdivrl
inc
icebp
rcrb
pop
fists
test
pop
adc
xchg
pop
xchg
mov
scas
fdivl
dec
dec
cwtl
xlat
xchg
or
leave
sbb
ljmp
push
mov
sub
fldt
mov
mov
adc
stos
std
in
out
mov
cmp
pop
jns
repz
push
dec
adcl
push
push
jmp
dec
cmp
push
sbb
inc
mov
or
push
scas
add
in
cs
sbb
aaa
mov
rclb
mov
lret
sarb
push
mov
add
aam
outsl
ffree
dec
cli
pop
inc
push
imul
dec
adc
int
into
mov
xchg
fsubs
or
cmp
and
push
lcall
pop
jmp
scas
aas
cli
movl
in
pop
or
in
test
mov
sbb
and
cwtl
push
lods
push
xchg
cltd
gs
repnz
scas
loop
dec
das
cmpb
out
shrb
addr16
sub
mov
cmp
cmpb
sub
or
cwtl
je
xchg
lea
imul
inc
inc
cltd
xor
lds
data16
addr16
sbb
int3
imul
in
adc
gs
call
in
push
rcrb
sbb
gs
mov
push
adcb
in
xor
mov
mov
inc
dec
xchg
popl
sub
aad
xor
cmpb
cli
fisubrs
lea
and
push
or
inc
sub
pop
inc
in
mov
insb
in
dec
jne
outsb
and
dec
testb
and
leave
inc
or
xor
mov
mov
xor
sahf
shl
xchg
add
mov
cmpsb
fidivs
lret
es
and
sbb
mov
insb
int3
dec
mov
jb
repnz
jecxz
mov
cmp
push
and
ret
cld
shlb
dec
and
push
insb
xor
xchg
stos
popf
shll
or
int
in
adc
je
popa
mov
cmp
mov
clts
rcr
push
in
xlat
jbe
cwtl
dec
out
test
jns
clc
cli
outsb
xchg
sbb
inc
mov
in
jg
call
fmul
sub
push
mov
out
push
test
mov
shll
xchg
cmp
sar
fcmovbe
gs
out
das
mov
cld
sbb
std
add
aas
aam
outsb
mov
fidivrl
xchg
in
xor
rorl
and
fstpt
shll
add
inc
movsb
rclb
or
pop
lea
lods
lock
flds
pusha
dec
cmp
rorb
mov
and
inc
mov
insl
sub
push
scas
shlb
cli
jb
pop
outsl
jg
movb
pop
cmp
adc
mov
push
aaa
roll
rol
and
test
push
pop
movsb
incb
iret
shl
outsb
jno
sbb
sbb
or
or
bound
and
cmp
loopne
push
loope
sub
pop
xor
adc
jg
sub
xor
fcmovu
xor
dec
dec
pop
mov
mov
and
sub
pop
cwtl
pop
outsb
leave
push
mov
in
je
xor
lea
pushf
xor
or
sub
xchg
push
and
dec
cmpsb
fidivrl
loope
inc
mov
mov
lods
testl
sub
imul
loope
jb
xor
xchg
and
movsl
cld
adc
in
mov
sub
decb
test
sbb
cmc
mov
xchg
or
decl
mov
fisttps
popf
data16
sbb
jp
and
test
mov
jae
cmpsl
sub
das
lds
jl
data16
mov
adc
je
test
bound
pop
je
stos
lcall
std
jns
loope
aam
lods
push
mov
xor
cld
cmp
push
add
push
mov
jnp
jecxz
mov
dec
es
sub
fnsave
sti
pusha
imul
movsl
popf
dec
test
test
loope
and
scas
out
adc
mov
jmp
add
or
popf
fidivrl
nop
inc
pop
push
aad
cmp
sub
xchg
and
adc
inc
sarb
jne
sbb
mov
xchg
xchg
mov
mov
popf
fbld
add
daa
mov
lahf
or
outsb
addr16
jb
mov
jo
out
stc
adc
out
movsb
or
in
mov
insl
int
mov
xor
lahf
insl
cmp
arpl
jns
cli
or
stc
jmp
std
xchg
insb
fdivr
dec
leave
movsb
jg
push
dec
out
or
daa
es
cmp
add
adc
aaa
mov
cltd
jns
and
pop
sahf
push
jb
aas
xor
xorl
stc
or
sbb
mov
mov
jle
cwtl
adc
cld
in
mov
jbe
add
fldl
gs
int3
xchg
xor
scas
pushf
pop
push
xchg
jo
adc
xor
fists
stos
add
aaa
xchg
xchg
dec
fucomip
fmuls
cld
cltd
mov
ss
das
repnz
shll
popa
scas
inc
push
outsl
sbb
mov
scas
dec
sub
fisubrl
icebp
pop
push
dec
jecxz
aam
mov
mov
pop
lea
sbb
jle
sbb
inc
xor
push
lock
scas
test
das
xor
xchg
cmpsl
mov
loope
adc
inc
add
pop
sbbb
imul
adc
movsb
gs
and
mov
outsl
inc
test
popf
insb
scas
sub
je
bound
pop
mov
out
loope
cmp
adc
sub
or
outsb
or
sub
sub
lods
es
insb
pop
adc
sub
popf
push
inc
dec
mov
sub
addr16
pushf
lahf
bound
jecxz
movsl
or
or
test
pop
push
insb
and
jbe
mov
insb
aad
call
sbb
cmp
js
test
mov
pop
add
xor
pop
sbb
in
mov
int
xchg
test
sbb
add
mov
repnz
push
mov
cmp
cmp
scas
push
mov
rcr
adc
adc
or
loopne,pn
pop
inc
in
or
repz
mov
int
xor
sub
lea
lods
lret
mov
or
jno
pusha
push
inc
fisttps
outsb
dec
lock
mov
jo
pop
aas
int
add
fs
test
fidivrs
pop
enter
mov
in
cmpsb
not
lock
iret
test
sub
or
je
frstor
test
jmp
arpl
jns
sbb
jp
pop
sbb
push
add
inc
or
shr
dec
nop
mov
aam
mov
lods
xchg
xchg
mov
and
sub
xchg
hlt
jg
jne
mov
mov
jo
jno
dec
cmovle
dec
mov
fs
outsb
inc
xor
sub
add
dec
or
jnp
test
adc
push
adc
inc
fsub
push
dec
or
adcb
clc
mov
aam
cmp
cmp
out
add
adc
mov
cli
outsb
fwait
cli
dec
sarb
out
and
shrl
cmp
leave
mov
xorl
aam
xor
cs
push
je
mov
mov
aaa
outsw
ds
xchg
or
les
mov
jno
inc
xlat
mov
push
sub
jmp
mov
rcl
pop
sub
mov
push
scas
or
aaa
sahf
and
xor
mov
mov
add
ja
cld
push
popa
mov
lret
sub
mov
mov
cmp
xchg
jo
test
xchg
jle
jb
add
mov
imul
or
push
ret
cmp
sub
in
jo
in
aam
stos
push
and
shll
das
and
sbb
ja
xchg
mov
es
fistl
popf
das
lea
push
dec
repnz
sahf
enter
adc
lahf
pop
jns
mov
js
dec
int3
pop
sub
fistpll
fstpt
scas
stos
push
mov
test
sub
loop
or
pusha
push
popf
lret
stos
and
xchg
adc
sti
addr16
jecxz
pop
sbb
dec
bound
pop
sub
stc
xchg
out
cmp
adc
push
and
mull
mov
sub
cmc
sbb
fdivl
dec
notl
inc
es
sbb
xchg
subb
push
or
sbb
jae
mov
fisubs
pop
insl
arpl
fbstp
pop
inc
push
cmp
out
push
or
pop
adc
loop
cmp
mov
jecxz
xchg
push
pop
andl
mov
dec
or
cmpsl
vrsqrtss
push
shlb
mov
and
out
lock
push
sub
pushf
pop
cs
addr16
sub
mov
xlat
outsl
orb
cmpl
fsubp
movsl
cld
adcb
loop
sti
cmp
adc
sbb
mov
test
test
and
scas
xchg
fwait
movsl
pop
loop
jnp
inc
pop
mov
loope
cwtl
ror
jl
mov
sti
dec
mov
pop
inc
jnp
push
or
add
jp
fs
mov
mov
enter
dec
pop
ret
mov
xlat
cmp
push
pop
repnz
mov
mulb
test
cwtl
leave
mov
cld
icebp
popf
sbb
add
ds
int3
inc
test
lea
inc
inc
into
lea
adc
xor
sub
mov
pop
mov
outsb
adc
sbb
mov
mov
mov
lock
jbe
push
xchg
aam
lret
iret
and
xchg
hlt
pop
sbb
std
xor
mov
sub
int3
sub
lock
push
jle
push
mov
dec
jno
push
outsb
popf
stc
loop
lret
dec
lock
cli
in
adc
jns
and
sub
and
in
popf
sti
dec
lahf
aaa
dec
pop
jne
stos
dec
push
cwtl
inc
decl
imul
or
sbb
loope
shlb
add
xchg
fldenv
dec
mov
mov
fs
into
push
test
popa
repz
mov
dec
sbbl
ret
incb
cmc
imul
or
cmpsb
sub
sahf
mov
cmc
mov
jns
decb
mov
ja
test
ja
mov
jp
repz
call
cmp
hlt
pop
pop
mov
pop
mov
fsubs
jb
icebp
cmp
fsubl
aas
mov
out
xchg
dec
inc
jge
aam
sbb
add
movsb
int3
lcall
add
sub
ret
pop
imul
aas
bound
sub
call
sub
orl
push
mov
dec
pop
mov
mov
push
jg
popf
cld
mov
and
mov
dec
dec
shll
or
int3
mov
xchg
adc
adc
in
cmp
push
xchg
movsl
pop
mov
xor
stos
jp
or
sbb
js
shrb
incl
das
inc
pushf
enter
movsl
jmp
sarb
push
mov
push
sbb
icebp
jmp
pusha
mov
mov
out
cmp
and
shl
test
push
xchg
in
add
cmc
movb
test
inc
fldcw
stos
adc
pushf
xchg
jge
in
lock
mov
xchg
outsl
mov
in
jnp
xor
pop
inc
out
xor
cmp
clc
mov
mov
sti
xor
push
das
jecxz
mov
xchg
and
out
fcomps
mov
pop
mov
mov
gs
jmp
int
xchg
pop
aam
dec
adc
and
pop
xchg
imul
mov
cs
dec
xor
pop
ret
mov
out
lret
mov
sbb
and
insl
cmp
mov
push
jnp
outsb
mov
pop
mov
imul
xchg
sub
sub
sub
sbb
push
jge
adc
mov
push
dec
dec
inc
shlb
ds
insb
lock
and
and
stos
fistpll
gs
dec
ljmp
lea
adc
add
arpl
pushf
fistpl
repnz
or
adc
mov
aam
test
push
xchg
mov
mov
in
call
popa
outsb
jmp
test
push
push
adc
in
jg
and
adc
rorb
mov
mov
aas
scas
dec
ret
and
push
mov
mov
mov
cmpsl
ljmp
xor
insl
mov
sbb
cmp
xor
fadd
push
sbb
mov
cmp
loop
outsl
popa
jmp
inc
lcall
pop
sub
xchg
add
scas
std
push
mov
into
sbb
iret
mov
dec
daa
cmc
pop
adc
mov
sub
push
dec
push
sbb
fcoms
xor
and
sahf
mov
and
clc
mov
mov
out
mull
push
xchg
stos
push
pcmpeqw
mov
mov
jbe
sar
repz
xchg
pushf
andl
mov
push
or
repz
or
nop
imul
sbb
push
sti
inc
mov
xchg
jnp
sbb
pop
add
jnp
pop
daa
es
mov
pop
mulb
lods
cmpl
adc
fldcw
insl
ja
adc
jl
adc
cmc
mov
cmp
bound
imul
push
xchg
pop
mov
push
sub
mov
clc
clc
das
or
push
sub
xlat
add
mov
std
mov
mov
pusha
loopne
sbb
das
mov
dec
jecxz
scas
int
fnstcw
fs
lds
jb
xchg
movl
push
push
sbb
imul
inc
mov
sbb
sbb
and
loop
outsb
fsts
dec
rclb
movsl
insl
mov
mov
inc
mov
pop
out
rcrb
jb
push
fucomip
xchg
outsl
jp
sub
call
add
rol
cmp
jmp
les
out
push
fs
movsb
test
ret
lret
xor
imul
sub
je
loopne
arpl
jne
add
xchg
xor
push
sbb
packssdw
imul
sub
sbb
jecxz
lods
or
inc
sbb
pop
mov
repz
push
es
pop
ljmp
mov
cld
cmp
lret
mov
fwait
inc
jp
js
mov
pop
or
testb
and
dec
in
imul
mov
pop
movsb
stos
lret
pushf
fldcw
in
pop
incl
iret
fists
push
and
insl
xchg
insl
jne
dec
cmpsb
outsl
lea
pop
cmp
test
jmp
mov
sahf
ds
outsb
outsb
into
mov
add
and
pop
lock
adc
jbe
push
movsb
cmc
and
jge
push
in
push
push
dec
in
add
sbb
sbb
xor
jnp
jp
dec
rclb
subl
stos
adc
out
fdivrl
push
popa
xor
push
sub
ret
xchg
cmpb
add
bound
inc
or
pop
movsb
push
xor
xor
fstps
dec
jne
aam
jge
scas
sarb
mov
adc
mov
pop
or
fsubl
and
sarb
inc
test
xor
mov
subb
inc
jmp
out
pop
sarb
add
clc
pop
shll
sbb
sbb
sti
dec
push
push
add
testb
incl
xchg
add
inc
pop
popa
jle
jbe
sub
jg
dec
jae
iret
sbb
push
pop
enter
in
cmp
bound
mov
pop
push
sbb
dec
adc
in
jge
jb
mov
jnp
push
cmp
xchg
fdivl
int3
add
push
push
xlat
gs
addr16
xor
stos
push
cmpsb
int
icebp
adc
loop
ficomps
ret
jp
lret
test
and
adcb
add
roll
sbb
xchg
push
inc
nop
mov
movsb
imul
xor
pop
pusha
pop
pop
ljmp
leave
aad
lcall
lods
mov
cmp
xorb
into
in
aas
xor
push
jb
push
push
leave
push
mov
mov
jecxz
repz
mov
mov
add
add
mov
leave
inc
sbb
mov
aas
sub
test
jg
loopne
pop
jnp
lcall
scas
mov
ficoms
jecxz
lret
test
aad
and
add
mov
inc
fs
cs
data16
mov
int
fsub
fabs
lods
es
push
xchg
stos
add
cmp
or
inc
enter
xor
in
mov
xchg
adc
movsb
push
sub
push
xor
aas
ficomps
dec
ret
dec
stc
jmp
cmpsl
cmpb
cmc
iret
clc
dec
imul
cmp
push
mov
rcrb
hlt
or
inc
pushl
xchg
sbb
pop
jns
inc
and
mov
xchg
test
mov
xchg
and
imul
xlat
jl
sub
pop
loope
lret
sahf
lods
popw
roll
adc
jp
in
jmp
test
testb
sub
jno
gs
pop
movsb
and
push
push
mov
mov
sub
ds
jo
push
dec
xor
cli
xor
push
pop
imul
sub
dec
data16
rclb
test
fisttpll
rcr
add
pushf
inc
enter
ss
or
sub
xor
repz
cmpsb
or
mov
ret
fcomi
ret
outsl
sbb
movsl
xchg
stc
enter
leave
mov
push
dec
dec
mov
mov
mov
scas
mov
xor
or
pop
sbb
sbb
sbb
jns
pop
mov
and
ficomps
mov
sahf
sub
sti
in
out
mov
dec
and
push
jnp
ficoml
dec
sbb
in
xor
jne
dec
xor
add
popf
test
cmc
push
xchg
iret
out
sbb
lods
push
inc
aad
arpl
pop
stos
lods
mov
lods
cmc
cmpsl
xor
fsubr
push
mov
mov
js
pop
or
iret
pop
fstl
push
aad
ret
cmpsl
rcrl
push
dec
jg
mov
xor
mov
and
sbb
push
pop
rclb
test
xchg
inc
scas
xchg
xchg
dec
aaa
fisttps
stc
arpl
test
nop
popa
push
cmpsl
ds
cmp
jns
mov
loope
repz
repz
xchg
mov
ja
and
and
pop
pop
int
aad
stos
js
test
jl
fs
push
jecxz
aas
repnz
popf
adc
in
pop
cmp
aam
mov
sbb
adc
dec
pop
pop
mov
xchg
insb
mov
dec
divl
ret
orb
xor
jbe
sub
rol
sbb
sbb
mov
ss
push
jae
int
testb
xor
mov
mov
repz
test
into
adcb
pop
mov
and
add
sbb
xchg
jne
aas
cmp
dec
je
xor
test
or
stc
xor
sbb
adc
out
imul
movsl
loop
dec
jmp
filds
sub
push
loope
in
out
outsb
cmpsl
mov
mov
aaa
xchg
cwtl
dec
jns
rol
sarl
lret
and
or
mov
sbb
mov
add
rolb
jb
lret
icebp
repz
lret
lods
sbb
popf
int3
cli
xor
jo
rorl
inc
icebp
adc
icebp
repnz
fnstenv
mov
lea
dec
jns
xorb
ret
xchg
pop
adc
xlat
in
jl
xlat
outsl
jge
std
jmp
pop
jns
pop
inc
adc
or
adc
mov
jb
das
xchg
xchg
cld
adc
ss
loopne
call
adcl
cmp
xchg
ret
scas
outsb
xchg
mov
and
rolb
inc
mov
int3
int3
sub
shlb
lods
mov
dec
outsl
xlat
lock
inc
lds
dec
inc
or
sbbl
cld
and
mov
cld
pop
sub
mov
add
push
dec
jmp
out
mov
mov
fistpll
test
daa
add
mov
sub
or
gs
inc
mov
mov
lods
xchg
cmp
loope
push
push
jge
std
xchg
inc
push
adc
and
mul
inc
and
imul
std
pop
fnstenv
dec
popf
mov
outsl
lds
sub
rorl
rclb
loopne
or
cmp
bound
in
lock
imul
or
xor
cmp
adc
jno
int3
arpl
pop
mov
pop
mov
xor
cltd
leave
ss
shlb
or
hlt
das
push
out
je
xchg
push
jno
scas
inc
jae
mov
ljmp
fsubl
jno
inc
gs
sti
or
pop
loope
dec
pop
jge
lcall
outsb
scas
jmp
cltd
les
addl
ss
mov
scas
push
adc
shll
fisubrl
mov
mov
arpl
cmpsl
enter
pop
lock
rorl
adc
xchg
insb
xchg
xchg
inc
lock
or
or
cwtl
mov
mov
jnp
call
adc
dec
loop
jmp
aas
ss
movsb
loopne
adc
mov
mov
mov
rolb
into
ret
jo
push
pop
fisubl
insl
xchg
or
push
mov
adc
stos
shll
inc
arpl
sbb
data16
cmp
xchg
jle
dec
lahf
call
ljmp
dec
in
test
xchg
cwtl
mov
ja
out
or
popf
xchg
dec
jb
mov
dec
ljmp
jb
xor
in
pop
sbbb
aam
add
or
lret
daa
lcall
jo
hlt
ret
ret
js
movsl
lcall
sub
push
ss
leave
pusha
sarl
pushf
mov
adcb
sbb
pop
loop
nop
or
mov
das
push
bound
fildl
add
xchg
push
pop
fwait
mov
popa
mov
insb
push
lods
sub
fwait
out
js
jge
addr16
sbb
rep
shll
push
cmpsl
adc
sbb
push
scas
test
inc
xor
lahf
mov
fistpll
xchg
scas
mov
dec
aam
adc
push
jbe
adc
jb
adc
in
adc
mov
and
and
add
mov
leave
movsb
rcr
sbb
cltd
cmp
clc
dec
fidivl
or
pop
add
in
sub
and
in
inc
pop
pop
fists
cld
js
add
enter
xor
xchg
mov
and
lock
cwtl
mov
lret
jmp
loopne
jo
sub
lret
je
dec
inc
int
mov
xchg
pop
cmp
sub
jp
push
xor
das
xor
xchg
jne
sub
in
shll
xchg
adc
cmpsl
inc
aaa
and
pop
and
mov
lcall
mov
mov
scas
or
or
pushf
push
dec
xor
or
ret
add
mov
ds
icebp
enter
pop
sbb
aaa
dec
push
push
js
in
xchg
dec
cltd
pop
aaa
mov
push
shrb
pop
jl
hlt
sub
adc
cld
dec
fimull
add
mov
sahf
int
repnz
xor
stc
ds
loopne
out
xchg
divb
or
inc
jmp
fwait
sti
out
lock
inc
xlat
andb
xor
mov
jmp
ja
imul
xor
xchg
pop
push
jbe
mov
cmp
nop
clc
sub
jp
cmpsb
jp
jae
mov
dec
into
push
cmpsl
add
jmp
stos
mov
into
jo
bound
scas
popf
hlt
lcall
push
adc
stc
das
xor
out
jle
nop
mov
test
in
test
repz
cmpb
dec
mov
sub
int
pop
sbb
repnz
push
cmp
stc
and
jmp
out
jg
mov
ds
daa
in
decl
in
rol
hlt
dec
push
ds
cmc
subl
stos
adc
lods
int
jne
call
sub
bound
lahf
lock
mov
mov
push
mov
dec
stos
movsb
sti
call
dec
jge
adc
adc
push
rcll
xor
xlat
das
ljmp
fsub
leave
in
mov
scas
pop
data16
inc
fsubrl
or
dec
jle
dec
stos
cmp
xchg
pop
cmp
push
inc
mov
mov
movsl
in
jno
adc
cmp
cmp
addr16
clc
leave
out
clc
lret
inc
popa
fadds
add
shrb
addr16
sub
xchg
int3
addb
movsb
sti
and
xor
add
push
cmc
imul
inc
lcall
cltd
xor
dec
icebp
popa
int
cwtl
or
sahf
mov
aaa
mov
mov
pop
cmp
icebp
jns
fcomps
mov
orl
popa
jns
add
ljmp
insb
notb
sbb
inc
push
test
cmp
pop
xor
sti
inc
neg
loope
push
mov
mov
and
mov
jno
rorl
out
in
add
aaa
in
add
push
mov
repnz
sub
lds
aas
dec
mov
mov
decl
lcall
cs
outsl
int
xchg
ror
cld
and
push
shll
add
fsave
cmp
gs
std
cmc
lcall
fsubrl
xor
add
mov
aam
imul
popa
push
ret
lcall
add
and
mov
aam
push
dec
xor
jge
movsb
push
xor
xchg
add
jge
cwtl
xchg
sar
fstpt
es
into
outsb
test
inc
push
jge
fcmovnbe
mov
pop
sbb
xchg
sub
imul
inc
or
and
out
xor
push
gs
inc
sub
pop
lcall
or
fiadds
into
dec
dec
push
add
pop
xor
inc
add
sbb
icebp
mov
sub
mov
cltd
idivl
mov
cmpsl
aad
and
fwait
dec
ss
and
ljmp
scas
mov
add
movsl
int3
xor
jg
cs
movsb
dec
mov
aaa
cmpsl
sbb
aam
faddl
fwait
xchg
insb
psrld
movsl
movl
push
push
sarl
leave
jle
xchg
sub
adc
jno
mov
aas
xchg
in
mov
ret
mov
fnsave
xor
inc
pop
cmpsl
outsl
rclb
insl
mov
dec
jg
jb
mov
test
push
or
fldenv
outsb
and
sub
inc
xchg
out
pop
orl
cmpb
dec
cltd
or
in
sbb
xor
arpl
xor
pop
ss
ud1
mov
pop
cli
xchg
lods
xchg
pop
jle
icebp
insl
sbbb
inc
btc
scas
mov
mov
dec
pop
lret
pop
mov
mov
mov
aaa
mov
sbb
cmp
xchg
mov
mov
cmpl
sbb
or
inc
cmpsl
push
shrb
mov
add
jbe
mov
repz
and
ss
les
mov
fldt
stos
shrl
push
sub
ja
imul
ljmp
ror
clc
sahf
movsl
ds
jecxz
push
lods
mov
clc
aas
sbb
mov
ljmp
sbb
inc
jno
push
test
iret
sub
jge
push
and
mov
repnz
push
add
xor
sbb
lret
pop
and
or
cmpsl
imul
cmp
pop
sub
shl
jmp
cmp
sub
inc
test
cs
addl
mov
jo
dec
stos
add
sbb
push
mov
and
and
pop
mov
fmul
mov
icebp
lods
cmc
cmpl
stos
adc
into
aas
cmp
in
jb
sub
pop
xor
pop
das
pop
lds
lock
pop
mov
add
inc
sub
sbb
ficomps
adc
inc
jne
orps
leave
ljmp
clc
add
xor
pushf
jle
adc
mov
lahf
xchg
jecxz
sahf
push
mov
fsubl
mov
sub
adc
pusha
sbbl
stos
push
push
cmp
je
cmpsb
adc
pop
xchg
pusha
popa
notb
lea
push
repnz
jecxz
jne
dec
jns
es
push
xor
and
pusha
aas
mov
add
addr16
pop
cmp
add
add
call
data16
adc
mov
int
stos
movsb
fsubs
lds
cmp
adc
sbb
ds
fdivrl
sbbl
mov
mov
sub
mov
rolb
lods
fisubs
fwait
stos
popf
mov
lahf
pop
jnp
in
popf
in
js
sbb
ret
xor
sbb
jg
lahf
sub
and
orb
add
popa
data16
cld
mov
add
adc
mov
gs
stos
scas
jne
scas
outsb
and
inc
mov
dec
and
lret
jl
cmp
cmp
outsl
jno
cmp
push
mov
pop
outsl
repnz
xchg
or
add
xchg
lods
jnp
ret
and
or
inc
enter
bound
dec
sti
mov
sahf
mov
inc
xchg
add
dec
lock
inc
sbb
mov
lock
xchg
mov
xchg
push
and
mov
cli
push
sbb
xchg
mov
daa
in
std
stc
inc
cmp
and
cmp
lret
pop
test
bound
sahf
and
insl
fcomps
fwait
push
cltd
or
cmpsl
outsb
xchg
mov
xchg
add
jnp
mov
js
in
sti
pop
adc
and
dec
popa
inc
xlat
inc
mov
push
sbb
add
ljmp
shlb
mov
fimuls
mov
aad
or
dec
sub
gs
mov
dec
sbb
sbb
int
inc
mov
push
cmpsb
das
jae
or
jb
aam
cltd
sti
fbstp
test
jp
test
inc
pop
inc
jp
adc
dec
imul
es
and
ret
shr
cwtl
add
or
adc
aaa
in
insl
adc
loop
adc
lret
dec
add
js
mov
add
stc
or
aaa
inc
std
adc
push
or
mov
jg
std
cltd
ret
and
lahf
cmc
fbstp
mov
xor
jp
pmovmskb
movsl
sbb
lret
mov
xchg
adc
inc
in
mov
push
out
insl
pushf
out
push
add
shrl
fimull
rorb
popa
pop
xchg
jb
jle
mov
cmp
ss
jns
icebp
jno
ret
enter
ds
mov
repz
mov
repz
cmpsl
aam
xchg
adc
popf
in
jb
lock
adc
push
aam
fldt
xchg
mov
cmp
mov
lret
scas
mov
dec
iret
and
cli
adc
sbb
mov
nop
loope
mov
mov
add
lods
aad
sbb
jns
pop
fbld
mov
jnp
adc
sbb
lret
and
jge
xor
test
out
sti
in
fsub
sub
lock
cmp
push
push
mov
daa
leave
or
cmp
mov
fstpt
lahf
adc
cmp
inc
xor
into
int
pop
ret
mov
push
cmp
dec
mov
ss
call
xchg
dec
addr16
loopne
push
scas
mov
iret
ret
icebp
adc
mov
sbb
loopne
mov
sbb
sbb
arpl
fisubrs
jne
inc
and
adc
or
mov
pushf
lcall
daa
sub
repz
inc
sbb
mov
out
test
jecxz
sahf
lret
xchg
test
inc
int3
and
mov
aas
or
popa
cltd
sbb
sahf
insl
sub
ja
movsl
outsb
std
adcl
xchg
mov
cmp
push
in
inc
mov
xchg
out
jne
push
popf
add
sub
sti
jmp
mov
inc
aad
ret
push
pop
jo
push
cmpsb
mov
mov
xchg
dec
xor
stc
test
enter
xor
adc
jnp
cld
fbstp
dec
push
std
dec
xlat
sbb
lret
scas
dec
and
imul
and
xlat
andb
daa
fnsave
icebp
pop
mov
addr16
repnz
jecxz
mov
jle
dec
jle
int3
bound
mov
call
ret
outsb
jl
mov
sbb
cmp
lret
xchg
popf
adc
xchg
mov
in
fstl
adc
stos
repnz
gs
ret
add
xor
push
inc
leave
pop
add
addr16
mov
outsb
cmpsl
sub
std
jne
shrb
pop
stos
je
xchg
test
insb
sub
out
das
movsl
mov
dec
push
xchg
fsts
push
cmpsl
lss
out
stos
sbb
push
repnz
pop
out
add
push
pop
xchg
scas
jp
xlat
jbe
fdivl
adc
insl
push
lahf
popf
jg
out
xor
mov
inc
inc
mov
out
xor
ret
ds
idivl
mov
add
pop
rcrl
push
fwait
nop
gs
mov
sarl
outsb
sarb
jp
hlt
push
jle
icebp
dec
daa
mov
mov
cmp
sub
push
mov
and
xor
addr16
or
adc
in
mov
inc
xlat
mov
insb
call
sbb
jb
jb
movsl
cmp
dec
insb
call
into
add
xchg
loop
mov
xchg
jnp
call
test
popa
and
mov
imulb
inc
cmp
and
in
sbb
adcl
out
push
push
testb
xchg
push
stos
mov
push
fisubrs
inc
and
out
rolb
sti
jecxz
jbe
or
fsubl
inc
pop
mov
jns
inc
mov
mov
lahf
jne
fisttps
xchg
add
lret
jae
mov
adc
pop
popf
jnp
mov
sbb
push
dec
sub
xor
outsb
adc
pop
mov
ja
cwtl
in
push
push
inc
sahf
jmp
cli
cmp
test
es
ja
movsl
or
xchg
cmp
unpcklps
clc
lret
mov
pop
scas
repz
mov
lret
pop
cmp
cs
decl
push
je
adc
push
clc
iret
pop
lds
adc
mov
es
mov
into
enter
lods
xor
xchg
sbb
je
lods
cs
mov
push
push
cli
rorb
repz
inc
jo
sbb
and
mov
sbb
xchg
mov
sub
adc
inc
xor
adc
jl
pop
mov
neg
or
popf
adc
jle
mov
ficoml
js
lret
and
sahf
mov
mov
aad
sarb
mov
add
push
and
test
xchg
xchg
sub
stos
add
pop
fstps
stos
push
testb
addr16
xlat
in
cmc
mov
jo
inc
outsl
xchg
cli
inc
fmull
sub
push
xor
mov
shll
pop
inc
jne
mov
push
rorb
fisubl
inc
fs
stos
insb
mov
aas
je
andb
jg
ficoml
mov
pop
ret
pop
inc
jo
in
out
jb
ret
push
pop
cli
xchg
cmp
jle
sbb
rclb
ljmp
loopne
mov
jno
push
or
mov
cmc
lods
xor
or
pop
js
lods
lods
push
cld
lock
jmp
adc
xor
push
mov
sbb
rorb
das
cmovp
or
scas
pop
mov
pop
aam
cltd
push
dec
dec
push
jae
pop
lods
cmp
imul
and
push
pop
adc
enter
xchg
out
inc
cltd
mov
sub
xchg
or
loop
lret
adc
arpl
push
sbb
loope
jg
xchg
shr
lea
cmp
adc
xor
add
pop
mov
std
xchg
outsl
pop
stos
scas
mov
inc
dec
mov
push
insb
and
pop
cwtl
mov
inc
popa
sbb
push
or
xor
pop
int
mov
loop,pn
jmp
test
rcrb
or
sbbl
mov
mov
fstl
jmp
loop
push
repz
lret
sbb
inc
jecxz
xor
ljmp
roll
movsb
out
aas
lds
cmpsb
lret
pop
gs
idivl
movsl
xor
adc
lret
sti
and
inc
nop
jge
inc
sbb
ret
xlat
or
jl
clc
and
out
pop
add
cmc
daa
fldl
icebp
mov
js
mov
fcoms
and
jp
fstl
test
ror
ss
dec
ja
push
xchg
or
push
dec
lret
or
int3
sbb
popf
and
xchg
xchg
jae
jns
clc
xchg
lcall
sub
cli
pop
cli
sbb
jmp
and
addl
aaa
mov
cwtl
xchg
ss
mov
or
icebp
leave
jmp
ljmp
inc
mov
xchg
in
sub
mov
nop
ja
aad
mov
cmp
add
into
lret
orb
and
out
mov
pusha
ret
xor
insl
les
mov
jo
cld
sbb
push
inc
ljmp
inc
fstl
xor
add
cld
push
lret
sub
and
mov
push
mov
mov
and
mov
jmp
push
cmpsl
and
pop
ret
into
or
xlat
dec
loopne
mov
lahf
int3
sub
add
push
push
jmp
mov
adcl
push
adcb
aam
addb
xlat
xchg
jb
insb
jno
loopne
push
xchg
mov
std
lods
enter
inc
fcomps
adc
mov
mov
ret
fnstenv
inc
mov
and
ja
mov
dec
adc
xchg
fwait
and
hlt
and
lea
mov
dec
in
mov
xchg
sbb
out
repz
cmc
aam
cmp
push
xchg
mov
cmpsl
pusha
xchg
outsl
push
inc
gs
add
and
jbe
enter
jnp
movups
sub
bound
add
cli
ret
repnz
shl
test
shlb
push
data16
mov
jns
pop
dec
push
sahf
dec
jno
inc
add
inc
or
xchg
sbb
std
adc
xchg
xor
inc
mov
test
fs
fcmovu
mov
mov
or
jg
subb
movsb
mov
lahf
dec
fistpll
imul
sbb
mov
adc
inc
fwait
dec
lahf
into
stc
push
mov
cmp
mov
cmp
pop
filds
jp
out
sbbb
sbb
frstor
cld
lds
inc
adc
divl
popf
movsb
notl
pop
sbb
popa
shr
ljmp
int3
mov
in
into
jae
lods
inc
test
sub
gs
outsb
add
sbb
cwtl
adc
pop
inc
jae
or
xor
sbb
in
cmp
stos
sti
adc
xor
int3
enter
rcr
popa
cltd
stos
push
das
cwtl
mov
xchg
aaa
lock
jne
push
mov
dec
das
test
sub
outsb
enter
test
mov
les
insl
jecxz
loop
xchg
adc
pop
push
subb
movaps
cltd
in
fcmovnb
ret
pop
xor
mov
xchg
xchg
cli
adc
push
in
mov
mov
jbe
clc
lret
jne
sbb
mov
int
mov
add
add
sub
jns
fadd
popf
insl
pop
lea
adc
push
jb
fdiv
inc
call
pop
fdiv
sub
xor
adc
jae
movsl
sahf
imul
mov
setns
inc
lods
insl
or
xchg
and
stc
xchg
mov
cmpsb
mov
jg
xchg
sbb
lds
and
jo
inc
int
add
out
dec
dec
add
repz
push
jns
push
lea
imul
addr16
adc
inc
lds
nop
or
inc
pop
inc
xor
and
std
mov
xor
rorl
xor
xlat
clc
mov
cmpsl
mov
addr16
or
fsub
nop
cmp
and
scas
and
mov
sub
mov
add
add
dec
in
pop
lret
jbe
bound
jle
mov
inc
daa
mov
mov
mov
cs
mov
mov
arpl
pop
cli
sbb
lock
sbb
fldenv
push
xor
jge
push
adc
popf
sub
movsl
sbb
cld
and
mov
mov
setbe
and
ret
jae
test
sub
mov
xor
and
inc
scas
and
push
rcl
repz
or
shr
stos
dec
int
fcoml
in
or
ret
rcrb
mov
jl
movsb
dec
push
jo
or
pushf
aad
aad
rcl
or
jns
in
lock
fnsave
fdiv
les
out
iret
cmp
add
jbe
inc
sbb
sub
cli
xchg
fisttpll
lock
cwtl
push
mov
jae
or
xor
shll
pop
adc
xchg
push
test
mov
cld
aaa
xchg
ret
hlt
jmp
dec
jae
mov
repnz
push
bound
cmpsb
ja
mov
adc
cld
scas
outsl
or
mov
mov
pop
aam
push
add
mov
lret
or
int
pop
fsubs
addr16
clc
sbb
sbb
sbb
xchg
rcl
adc
lock
fidivs
mov
ficomps
in
push
dec
push
cli
fcoml
ja
xor
cmp
jl
mov
push
into
out
push
ret
mov
mov
lahf
cmp
push
sbb
les
aam
nop
sbb
scas
and
roll
xchg
ja
xor
adc
aam
addb
mov
push
out
aam
test
dec
sbb
add
add
push
mov
sub
pusha
or
lock
mov
les
pop
cmp
out
sbb
movl
decb
push
mov
pop
adc
xchg
scas
out
jo
cmp
aaa
mov
sub
pop
out
js
and
xor
mov
sbb
mov
inc
ret
ss
cltd
cmp
push
sbbb
mov
mov
fsubl
xlat
into
hlt
pop
aam
test
xchg
ja
test
fs
xchg
jns
pop
pop
xchg
call
xor
scas
shl
mov
lahf
mov
sbb
mov
adc
out
gs
inc
hlt
std
icebp
filds
std
xchg
in
push
fs
sub
inc
roll
movsl
fildll
add
push
xor
shll
stos
fsubrs
sub
push
stos
inc
cmpsl
and
jmp
ss
xchg
mov
mov
sbb
iret
push
testl
jo
lea
and
fimull
mov
pop
aad
inc
jnp
out
and
adc
icebp
mov
icebp
aaa
push
xchg
push
xchg
stos
lock
jge
sub
lds
dec
push
loop
or
push
dec
pushl
inc
xor
xchg
daa
sub
cmp
jle
dec
lods
test
lods
push
repz
dec
enter
lahf
sbb
xchg
and
push
imul
dec
push
fldenv
jnp
mov
and
mov
xor
into
mov
sbb
sbb
inc
jbe
into
test
dec
and
js
push
lods
popf
xor
cs
xchg
das
xchg
dec
into
xchg
xchg
out
es
mov
jae
sub
lods
push
add
jge
xchg
push
aas
in
pop
dec
mov
jmp
cs
lret
mov
gs
fcmovbe
mov
bound
push
pop
push
arpl
xchg
add
mov
in
mov
in
mov
stc
sub
sub
aaa
and
cmp
and
out
leave
hlt
dec
iret
xor
shll
punpcklwd
insb
daa
jae
jno
in
sub
cmp
stos
push
sub
add
xchg
fnstsw
sbb
adc
xlat
dec
mov
rolb
jns
aad
and
sub
mov
out
push
xchg
push
lock
fcompl
js
dec
mov
adc
shrb
mov
loopne
mov
adc
in
sbb
outsl
and
and
pop
js
pop
sub
fs
sarl
jg
stos
outsb
scas
int
lret
xchg
xor
cmp
push
inc
popf
sub
cmp
inc
add
mov
xchg
aaa
out
jmp
fsubrl
dec
xor
adc
loope
and
shl
ljmp
adc
nop
pop
data16
out
mov
pushf
inc
jne
imul
loope
idiv
lods
call
rorb
inc
ret
call
mov
stos
pop
mov
pushf
and
xor
or
mov
enter
cmovae
addr16
jo
ret
add
jecxz
fldenv
adc
jno
adc
jp
xchg
subl
leave
inc
iret
xchg
jg
push
in
stc
push
and
dec
std
dec
jl
sbb
cmp
cmp
push
push
xchg
push
in
movsl
ficomps
stc
adc
test
sbb
sahf
lret
pop
mov
dec
aas
outsb
jne
sub
mov
xor
and
push
insb
sub
cmc
popf
inc
add
inc
mov
scas
sub
mov
sub
xchg
or
das
jno
or
sbb
popf
xor
sarl
aas
loope
insb
mov
imul
inc
inc
push
push
jmp
out
in
sub
loope
and
mov
push
pop
push
dec
insl
sub
mov
xor
js
in
gs
adc
mov
insb
xchg
mov
dec
inc
in
mov
out
mov
dec
xor
mov
aad
xchg
mov
mov
das
sbb
mov
push
adc
loopne
call
pmaxub
out
addr16
add
xor
push
dec
mov
push
jo
fdivrl
push
xchg
mul
dec
cmp
out
lea
push
loop
pusha
das
fnsave
rorb
push
mov
jo
pop
adc
negb
outsl
dec
xlat
mov
sbbb
outsl
scas
inc
popa
cmp
lret
and
xor
jae
and
lahf
add
rcrl
push
sub
jne
dec
divl
call
test
xor
sbb
jno
cmp
repz
push
mov
sub
in
scas
imul
adc
popa
aaa
mov
pop
fimuls
fbld
rdmsr
mov
sub
int3
push
out
sti
psrlq
in
pushf
mov
mov
cld
jmp
add
cli
pop
shll
pop
push
cli
sub
cmp
xchg
xor
outsl
pusha
push
cvtpi2ps
gs
insl
or
mov
jb
inc
test
cmpsl
mov
out
adc
push
jne
test
daa
fiaddl
dec
icebp
iret
jg
jecxz
bts
xor
xchg
adc
jno
popf
lea
cmp
push
jge
into
jmp
ret
popf
in
cld
adc
pop
add
out
add
orl
push
mov
ja
sahf
sub
adc
out
hlt
scas
lret
push
flds
in
inc
push
jl
ffree
xor
fwait
jne
jnp
scas
insb
das
outsl
mov
jle
xor
and
aaa
dec
popf
push
jns
mov
xchg
jnp
cmp
xchg
dec
cmpsl
mov
cltd
divb
std
pop
std
mov
add
aas
lock
mov
adc
push
stos
rorl
dec
pop
inc
call
pop
mov
ret
add
mov
aam
sbb
or
mov
push
jg
push
cmp
arpl
sbb
adc
adc
add
cld
out
arpl
sub
pop
int
or
jmp
std
xchg
sti
xchg
mov
jmp
ds
push
add
push
push
jge
adc
dec
cmp
xor
iret
or
adc
add
mov
jge
clc
iret
dec
mov
imul
push
stc
les
jo
or
pop
sbb
cmpsl
divl
int3
or
jnp
vpmulhw
xor
sahf
mov
xor
mov
mov
dec
fsubr
je
and
inc
push
enter
loopne
adc
adc
ja
outsl
or
je
es
iret
mov
push
lds
mov
adc
adc
and
and
movsl
imull
lods
cwtl
sbb
fcompl
jecxz
sub
inc
dec
popf
jne
jns
or
movsl
push
cli
add
aas
or
test
mov
rclb
insl
and
rorb
aam
mov
fisttpl
lea
jmp
jmp
jp
in
pop
mov
jno
mov
pop
dec
fdivs
scas
out
push
lock
mov
mov
jno
sbb
clc
test
push
std
inc
xor
or
push
fs
mov
movsb
pop
jle
mov
cli
iret
push
nop
fwait
pop
mov
pop
movsb
in
cmp
add
pop
mov
js
dec
lods
inc
mov
sbb
sub
test
insl
push
mov
fsubrl
fldt
jbe
mov
js
int
outsb
inc
mov
jl
fdivrl
aaa
mov
lea
pop
stc
pop
lock
mov
adc
gs
cmp
test
sub
cmp
cld
iret
push
pop
mov
and
push
push
mov
mov
mov
ljmp
sbb
inc
sbb
mov
lods
insb
fdiv
xlat
inc
fnsave
push
and
xchg
sub
in
sbb
mov
xchg
push
inc
jae
jl
xchg
sarl
cmpsl
mov
arpl
fcompl
or
clc
aam
inc
push
mov
push
jg
sub
sub
cwtl
adc
or
enter
mov
movl
or
fadds
ret
ret
jecxz
mov
dec
loope
daa
mov
test
ss
test
inc
cmpsl
cli
inc
jns
jecxz
add
cmp
mov
fidivl
int3
or
inc
xchg
pop
add
jae
adc
aaa
pusha
nop
lods
pop
xchg
pop
stc
nop
dec
mov
leave
mov
dec
xchg
or
mov
in
mov
inc
adc
icebp
mov
mov
sbb
sub
fstpl
adc
xor
or
popf
or
xchg
pop
mov
into
lds
and
jno
pushl
sbb
xor
xchg
or
pop
out
mov
mov
cmp
push
out
ja
dec
sub
fsts
test
mov
xor
xor
adc
push
ficoms
mov
inc
dec
lret
cmpsl
dec
cmp
fisubrs
popa
xchg
ds
jb
sub
cwtl
test
pop
nop
aaa
lret
sbb
loope
add
inc
cmpl
adc
or
mov
jl
ss
out
test
lea
fst
pusha
cmp
and
fwait
jl
jns
and
movsl
push
mov
leave
rcrb
roll
sbb
leave
push
in
mov
das
adc
sub
mov
push
pop
lods
addr16
add
xor
push
push
lods
or
icebp
pusha
test
xchg
or
push
xor
enter
and
sbb
imul
mov
leave
into
int3
jmp
ds
cmp
mov
outsl
jns
jle
cmp
mov
jmp
fdivl
inc
mov
jg
mov
dec
jno
and
sbb
std
arpl
xchg
mov
cmc
test
adc
adc
inc
add
enter
xchg
lds
xor
ret
inc
dec
pusha
in
mov
inc
sub
popl
loope
mov
std
lret
mov
push
inc
test
nop
push
push
push
fs
jecxz
negb
loope
in
sub
xchg
xchg
ja
jo
inc
mov
dec
sbb
ret
xor
rolb
push
jae
sub
sub
jl
mov
decl
repnz
fisttpl
jl
xchg
and
jns
push
lods
aas
scas
pusha
jae
xchg
icebp
inc
mov
mov
lods
cmpsb
mov
inc
pop
into
scas
inc
call
sbb
clc
mov
mov
shrb
xor
repnz
push
cmp
sub
inc
dec
fs
pop
push
sbb
add
test
pop
and
dec
call
lods
fidivl
xor
jns
loop
jmp
mov
sbb
lahf
in
jge
jns
fdivs
mov
psubusw
adc
je
inc
rcl
sbb
es
mulb
sub
fcomp
add
loopne
negl
cmp
dec
aas
js
jns
lret
adc
sbb
push
pop
ss
and
inc
es
jmp
add
cwtl
xchg
scas
pusha
cmc
xchg
mov
pushf
andb
dec
sub
inc
push
xchg
shll
inc
outsb
mov
jmp
repnz
pop
or
xchg
clc
dec
add
mov
int3
inc
stos
jae
jp
sbb
push
xor
jne
dec
mov
mov
push
cmc
stos
cmpsl
js
sbb
xor
nop
sbb
jo
stos
icebp
or
stc
adc
cmp
and
pop
lahf
xor
xchg
mov
enter
lahf
jecxz
daa
sbb
mov
imul
outsb
xchg
popf
insl
out
sub
pushf
sarb
sub
xor
pop
pop
or
push
orb
mov
fcmove
inc
fdivrl
jle
xor
aad
fsubrp
push
adc
test
mov
inc
mov
cmp
stos
inc
cmp
and
inc
idivb
int
mov
add
pop
inc
lret
inc
je
and
xor
movsb
sbb
int
mov
inc
in
lods
sub
mov
xor
mov
and
add
and
lcall
push
mov
in
aad
xor
das
int3
not
ret
dec
sub
push
inc
mov
out
cmp
xchg
nop
and
push
or
mov
into
cmp
repz
insl
jb
stos
call
cmp
ficomps
js
dec
sub
repnz
push
xchg
clc
sahf
lcall
fisubrs
scas
pop
dec
lods
fnstcw
and
jl
xor
in
sbb
adc
popa
stc
data16
mov
out
out
and
pop
loope
jp
mov
cmpsl
mov
scas
rorl
orl
aaa
push
cmc
push
cli
jb
xor
hlt
je
add
or
jns
push
jp
lods
repnz
bsr
sub
data16
xchg
lret
jbe
xlat
ja
push
pop
xchg
les
jb
lds
std
push
push
repnz
imul
scas
test
push
andl
int3
movsl
call
shll
mov
imul
push
mov
mov
and
push
es
lahf
push
jmp
lock
xchg
pop
push
xchg
ss
dec
fimull
cmp
and
pop
dec
enter
jns
jmp
push
stos
out
sub
popa
je
cmpsb
xor
dec
sub
je
ret
pop
dec
push
jnp
movsb
xchg
sub
xchg
xchg
cmp
pop
imul
inc
movsl
mov
loop
pop
stc
pop
xchg
cmp
push
mov
xchg
in
stos
movsb
push
dec
lcall
mov
cmp
test
sbb
mov
mov
cltd
cs
decw
jle
sub
sub
fidivs
dec
data16
fldcw
jnp
push
inc
pop
dec
xor
dec
mov
xchg
sbb
mov
sahf
clc
aam
decb
cli
mov
data16
das
stos
mov
ljmp
fmuls
pop
sarl
ja
add
add
or
jp
dec
leave
add
pop
sub
je
div
adc
pop
loopne
adc
pop
jnp
mov
mov
loope
xlat
cmp
negl
fwait
xor
mov
inc
dec
mov
adc
fs
out
jl
es
xchg
lcall
mov
fistpll
or
jb
call
xchg
lds
loopne
ds
cld
adc
cltd
subl
or
or
xor
mov
mov
and
pop
sbb
ds
das
dec
xor
or
outsb
sub
pushf
scas
lea
cmc
xchg
jmp
sbb
xchg
or
test
dec
pop
add
lock
test
or
dec
sub
lcall
xor
push
ret
dec
dec
in
movl
call
les
inc
cmpsb
push
or
add
mov
add
inc
mov
inc
xor
bound
cmp
cmpsl
and
xor
sub
xchg
lock
shl
inc
aad
pop
arpl
lods
cmp
push
mov
rorb
in
mov
dec
sub
add
xchg
andb
jnp
int
sbb
xchg
jmp
inc
loope
mov
mov
loope
ljmp
inc
xor
lahf
dec
push
xor
clc
test
or
outsl
loope
cmp
xchg
imul
das
mov
pop
lock
iret
inc
aad
xor
test
inc
mov
lahf
shrb
cmp
out
mov
cmc
sub
sub
lret
inc
jns
push
sbb
fwait
imul
inc
andb
jo
dec
addr16
sar
cmp
mov
pop
jle
inc
inc
mov
cs
add
push
loope
aad
and
jo
les
jg
dec
aam
lds
ret
mov
divw
jge
ja
out
scas
repnz
mov
adc
adc
jbe
hlt
or
mov
ret
repz
fidivrl
add
leave
sub
mov
cwtl
pop
nop
pop
xchg
movsl
mov
adc
dec
aas
dec
and
into
pop
jge
mov
or
push
xor
pop
push
add
clc
fists
out
popa
mov
mov
adc
add
and
mov
test
xor
js
pusha
js
fwait
enter
sbb
insb
idivb
or
cmc
inc
add
jp
push
push
cmpsl
dec
cltd
cmpsl
ljmp
sub
cld
fildll
loope
nop
push
inc
lret
shlb
xlat
fs
hlt
jecxz
cmpsl
add
or
pop
cmp
popf
insl
stc
cmp
cmp
mov
push
iretw
xchg
push
jbe
push
scas
popa
push
sarb
out
push
xchg
aaa
push
xchg
push
sub
or
mov
push
or
xor
fbld
les
push
sbb
mov
cmpsb
repnz
cmp
aas
stc
das
inc
mov
ss
ss
add
rclb
adc
dec
out
test
add
in
je
stc
sarl
inc
sarl
and
call
popf
inc
stos
enter
ja
push
push
lds
clc
adc
sbb
push
dec
out
test
xchg
push
sbb
and
pop
into
in
dec
pop
jne
into
jl
pop
jmp
gs
mov
dec
pop
popa
inc
cmp
jmp
ss
mov
mov
push
outsb
mov
fs
sub
push
lcall
jecxz
stos
xchg
dec
fisubrs
xchg
adc
dec
add
lcall
lahf
cmp
stc
xchg
rorl
push
std
pop
in
xchg
rolb
stos
pushf
daa
fdivl
and
popf
pop
mov
sub
addb
mov
pop
or
xor
dec
scas
insl
and
or
xchg
ja
filds
add
push
fisubrl
fs
test
stc
jb
xlat
scas
imull
pop
push
shlb
inc
adc
dec
rcrb
push
testl
mov
ljmp
cmp
dec
lcall
js
dec
mov
dec
lock
sti
mov
popa
sahf
shl
lods
mov
jns
pop
xor
sbb
jb
mov
mov
inc
adc
cltd
dec
decb
adc
mov
mov
dec
shl
mov
sub
push
push
cli
cmp
or
mov
lret
xor
dec
lea
int3
sbb
push
mov
and
sbb
fcomps
sbb
test
aas
mov
add
xor
mov
aam
lods
movsl
sbb
inc
jno
sbb
test
push
mov
je
ret
movsl
icebp
sbb
iret
popa
lea
inc
stos
jmp
fimull
adc
jp
lahf
cwtl
inc
and
decl
and
dec
pop
mov
push
int
shrl
inc
stos
xor
push
inc
imul
mov
add
in
fstpt
fidivs
mov
lea
in
stc
or
mov
and
fldpi
idivb
add
or
mov
mov
mov
push
lea
xchg
and
fs
adc
cmp
outsb
ficomps
fisttpll
cmp
divb
loope
mov
push
mov
pusha
dec
call
in
xchg
pop
rcrb
shll
insl
out
outsl
pop
pop
das
outsl
outsl
std
and
mov
dec
or
mov
sub
sub
or
pop
or
into
js
cwtl
in
icebp
inc
pop
and
popf
xor
mov
hlt
add
adc
popa
pop
push
inc
scas
mov
xlat
push
cmp
sarl
sbb
test
gs
mov
cmp
imul
mov
movsb
jne
cmpsb
sub
or
mov
or
test
out
push
in
insl
push
mov
negb
sub
test
mov
mov
popf
subb
or
jbe
sbb
clc
jge
ret
add
popf
sbb
fistps
inc
cli
sub
push
inc
or
push
std
push
inc
or
test
in
rcrl
pop
test
dec
scas
push
xor
fcomp
jl
pop
push
add
cmpsb
pop
or
jb
sbb
into
in
js
outsl
add
push
std
sub
jl
fisttpl
insl
and
outsb
push
pop
aam
pop
sbb
pop
or
not
je
and
pop
push
cli
gs
pop
cld
fistps
mov
std
fisubs
adc
push
pop
stos
jnp
cmc
std
adc
aaa
xchg
inc
cwtl
fldcw
cmp
dec
out
jl
jae
ret
scas
and
jge
fwait
or
call
nop
add
shl
aas
notl
xor
and
out
orb
jne
in
jae
push
orl
dec
jl
insb
sbb
adc
popf
mov
pusha
and
loop
ror
ret
pop
mov
xorl
jnp
scas
cmp
ficompl
add
and
mov
mov
jne
xchg
and
and
ficoms
mov
pop
mov
repnz
lret
push
lock
pop
jne
add
in
lods
or
or
divb
ss
mov
fldt
cmpsb
or
sarl
xchg
movsb
iret
loope
dec
or
mov
out
cmp
or
ja
movsl
icebp
mov
mov
xor
jge
out
push
leave
sub
out
sub
sub
pop
mov
loop
jo
movsl
in
pop
pusha
sub
adcl
loope
xchg
mov
inc
xchg
and
xchg
xor
fsubrs
pushf
adc
mov
add
cmp
pop
fiaddl
testl
ret
jle
and
or
test
xchg
and
movsb
out
add
sub
rcrl
pop
jnp
cmp
pusha
fiadds
outsb
add
mov
sbb
pop
inc
pop
repnz
pop
inc
cltd
push
pop
dec
loopne
lea
test
xchg
and
icebp
leave
stos
repnz
inc
in
lea
xor
cmp
ret
cmp
xchg
int
ds
xadd
addl
clc
andl
sbb
sub
pusha
push
imul
sub
dec
cltd
loopne
push
add
fisttpl
test
mov
aam
std
stos
std
sub
cmp
pop
pop
xor
loope
mov
nop
in
adc
arpl
or
andb
sbb
ss
mov
js
xchg
out
cld
dec
fs
iret
add
and
in
adc
std
call
in
and
adc
mov
xchg
jb
movsl
and
jg
mov
inc
jg
addr16
insb
cmpsl
adc
pop
pop
scas
push
push
inc
cmp
into
mov
jmp
js
adc
bound
jns
xchg
xchg
mov
popf
xchg
roll
or
lsl
iret
jnp
popf
imul
xchg
lods
ret
and
in
mov
mov
in
pop
cmpsl
lret
popa
mov
fdivrs
fmull
mov
cmp
mov
in
imul
dec
mov
jae
mov
mov
cli
hlt
mov
jno
test
out
test
lea
lahf
sarb
out
xor
sub
loop
pusha
inc
stos
mov
push
mov
packssdw
mov
scas
mov
or
dec
fiadds
in
pop
imul
cmp
dec
or
push
mov
sbb
jne
jmp
cmp
xchg
rcl
leave
dec
ret
es
mov
je
push
sti
imul
out
cmp
inc
lahf
jb
dec
mov
arpl
outsl
inc
sub
andb
cmpb
mov
xchg
mov
inc
mov
push
popf
pop
push
sbbb
xor
stos
xor
stos
pop
add
popa
cmp
mov
sbb
sbb
sbb
dec
fidivs
mov
in
sub
adc
add
and
pop
xor
sub
and
fnstsw
xor
jne
rcl
aam
movsb
pop
pop
push
fstpt
add
test
mov
and
xor
mov
push
pusha
pop
in
sahf
mov
loope
dec
xchg
mov
enter
mov
repnz
mov
stos
add
subb
jns
inc
dec
sub
inc
sbb
and
jno
push
or
cwtl
pop
xchg
outsb
cmp
icebp
cltd
dec
inc
xchg
sub
push
mov
or
ret
dec
xchg
pop
shlb
cwtl
push
bound
cmp
cmc
aam
mov
fs
mov
les
into
lea
loope
fmull
jo
jmp
or
rorb
push
mov
pop
iret
add
int
xchg
lret
xor
sbb
cld
call
inc
pop
adc
lea
ljmp
add
mov
lcall
pop
inc
gs
sbb
outsl
jo
subb
clc
sbb
push
lods
push
out
pop
fisubl
sti
mov
ror
mov
sbb
xlat
adc
ja
cmpsb
popf
mov
pop
push
les
xchg
dec
das
roll
cmpsl
cwtl
xor
out
lock
add
fdivrs
outsl
sub
mov
jg
and
push
jb
iret
xor
inc
push
inc
xor
les
xchg
test
shlb
xor
cwtl
jmp
xchg
inc
shl
pop
xlat
jle
idivl
lea
xor
fmull
ss
pop
xchg
adc
pop
jmp
out
das
and
push
mov
popa
push
stos
jno
jb
or
ss
shlb
mov
push
jno
faddl
jmp
movsl
decb
adc
pop
adc
aam
mov
mov
or
cwtl
xor
test
bound
repz
xor
andl
pop
arpl
mov
in
add
push
push
pop
fcoms
jne
lds
jmp
xchg
sbb
xchg
out
into
es
in
in
jge
xor
ljmp
xor
cs
cmp
push
aaa
jge
add
jmp
pop
fldenv
add
les
pop
mov
insb
mov
outsl
mov
int
cmp
aas
adc
loope
rorb
movsl
mov
mov
mov
loop
sbbl
mov
inc
sahf
jbe
arpl
lea
sub
push
or
mov
xchg
or
dec
and
in
call
stc
iret
outsb
pop
mov
push
insb
xor
fisttpll
mov
fdivs
sub
shl
popl
pop
and
or
xorl
fstp
sbb
mov
adc
in
jle
data16
je
xor
fildll
arpl
mov
jo
imul
fmull
cmp
test
loope
pop
ja
int
ds
insb
fdivrl
jmp
mov
xchg
adc
and
fildll
popf
cli
and
xchg
cmp
mov
adc
xchg
sbb
mov
inc
pop
jb
ffree
fwait
sahf
add
mov
jmp
outsl
movsb
popa
divl
mov
pop
jmp
scas
cwtl
and
push
pushw
jg
dec
fwait
push
push
sub
data16
or
inc
loop
jo
ffreep
pop
pop
outsl
jo
add
je
outsl
push
div
pop
inc
call
xchg
jl
cmp
adc
push
cs
sbb
sub
pusha
push
mov
lret
lahf
sbb
pop
and
loope
lret
xchg
cmc
hlt
adc
stos
cmp
aas
aad
add
or
jmp
xor
lcall
sub
movsl
adc
repnz
ret
jb
loopne
push
shrb
and
pusha
cmc
mov
test
and
cmc
nop
inc
movsl
arpl
mov
mov
push
aad
aad
lods
pop
sub
dec
push
rorl
mov
jmp
inc
mov
loop
mov
push
push
jg
jbe
push
and
imul
xor
insb
xor
mov
inc
fldcw
pop
sbb
cld
push
mov
cmp
insb
mov
sub
cmp
stos
popa
sub
orl
je
adc
jmp
xchg
or
out
lcall
fiaddl
and
pop
adc
pop
xchg
repz
sbb
jnp
dec
pusha
jae
sbb
sub
out
mov
cmp
xor
mov
jb
adc
paddq
mov
pop
jno
inc
lahf
push
pusha
dec
scas
out
int3
dec
outsl
cs
insl
loopne
mov
inc
ds
or
stc
pop
sub
sarl
mov
fs
data16
mov
adc
mov
cmp
lcall
fnop
lds
jo
shll
mov
inc
sbbl
mov
call
insb
out
and
jmp
and
dec
fbstp
cmp
pop
mov
lret
cwtl
pop
jbe
push
jo
or
dec
out
dec
sbb
dec
and
cmp
data16
xchg
xor
aad
movsb
cmp
bound
orb
mov
or
push
loope
push
push
xchg
jbe
mov
call
push
aas
call
push
jb
ret
mov
xlat
adc
adc
jmp
outsb
mov
xor
addl
leave
fcomps
rol
cmp
leave
and
dec
inc
in
fidivl
cmpsl
mov
xchg
pop
gs
jp
ljmp
dec
pop
lcall
jp
adc
lcall
inc
ja
mov
pop
stc
push
jo
movsb
mov
adc
pop
rclb
cli
cmp
push
sahf
test
aad
sbb
xchg
fiaddl
push
pop
hlt
pop
lahf
or
call
bound
and
push
scas
fnsave
daa
push
dec
dec
outsl
xor
adc
gs
dec
mov
cmc
xchg
and
xchg
sahf
fmuls
xchg
lods
pop
test
mov
in
lds
lret
dec
ja
in
in
mov
stc
fldcw
cmp
into
into
push
lods
xor
or
or
mov
repnz
iret
test
xchg
mov
pop
adc
jo
jmp
push
push
and
aad
mov
call
xor
mov
orb
nop
out
mov
xor
pop
or
out
aaa
cmp
push
cmp
xchg
jecxz
mov
dec
in
imul
fadd
jg
or
out
add
jnp
sbb
pop
stos
mov
xchg
cs
mov
mov
push
mov
inc
repnz
dec
addb
inc
daa
push
mov
sub
lods
or
outsl
icebp
jb
test
xchg
mov
pop
pop
in
inc
vfrczpd
sahf
jge
leave
cli
push
out
inc
jl
push
pop
sahf
push
dec
mov
scas
pop
mov
cld
leave
ret
and
mov
jl
xchg
outsl
mov
sbb
cmp
mov
mov
sub
push
mov
idivb
scas
mov
and
das
pop
mov
cmp
sub
lods
inc
and
push
xlat
cmp
inc
pusha
dec
dec
mov
or
add
in
test
add
lds
sbb
xor
inc
jmp
adcl
cmp
loopne
repnz
dec
cli
movsl
ss
ds
sbb
mov
pop
outsl
cltd
and
push
push
jno
inc
pop
xchg
outsb
rorb
cli
das
cmp
pop
mov
dec
imulb
pop
stc
jle
lret
adc
andb
dec
divb
sbb
lret
in
shll
add
ret
xchg
ja
push
mov
ret
sub
cli
ss
aad
xchg
out
mov
mov
dec
test
xchg
adc
lret
aas
and
clc
das
fimull
push
pop
cmp
cmp
negb
leave
sbb
aas
adc
jg
insl
bound
inc
add
scas
stos
pop
sti
pushf
sbb
repz
std
mov
add
test
xchg
push
pusha
imul
sbb
in
xchg
inc
nop
sbb
xchg
mov
cmp
in
insb
mov
cmp
sub
mov
jecxz
loopne
test
sbbl
mov
hlt
add
in
jnp
mov
fidivrs
leave
jmp
jmp
int
jp
sub
jb
dec
jmp
mov
lock
divb
fiaddl
sti
ljmp
daa
test
test
jns
mov
rolb
mov
cmpsl
insb
jmp
mov
outsl
inc
push
dec
or
xor
pop
flds
lahf
sahf
xchg
scas
out
and
fwait
mov
sub
sbb
test
or
jg
rolb
mov
pop
pop
stc
inc
push
inc
int3
cmp
mov
fwait
lods
je
push
adc
rol
inc
xchg
lods
leave
sub
pop
leave
push
lcall
cmp
iret
mov
inc
cmpsl
or
cmpsb
and
in
cld
mov
push
xor
mov
cmp
cli
filds
xchg
xchg
push
int3
ret
iret
iret
push
mov
out
movl
mov
add
mov
dec
lcall
mov
pop
inc
mov
out
mov
jecxz
mov
movsb
stc
mov
into
xor
stos
out
andl
xor
push
sbb
pop
mov
dec
mov
push
scas
cmp
sub
mov
pop
sbb
sub
push
inc
repnz
mov
push
rorl
mov
pop
jecxz
cld
loop
sbb
popa
std
mov
dec
push
leave
aam
ret
lods
in
dec
inc
mov
incl
or
and
push
mov
test
lock
push
sbb
mov
mov
xlat
cmp
jbe
out
add
stc
cmp
pop
xchg
xchg
ret
xor
fwait
sub
pop
es
cmc
xchg
imul
inc
popf
push
in
cmp
dec
mov
push
jp
bound
les
xor
jno
and
dec
outsb
pop
sti
scas
adc
ss
int3
in
bound
xchg
in
mov
leave
inc
pusha
mov
adc
pop
dec
cli
push
pop
mov
inc
lcall
pushf
mov
nop
pusha
xor
jge
jb
test
test
xchg
gs
jge
mov
mov
scas
sub
mov
mov
test
mov
stos
scas
gs
push
sub
shlb
cmp
or
sub
fwait
aaa
cld
cltd
pusha
inc
xchg
insb
fmul
lret
loopne
test
outsb
adc
andl
lahf
out
mov
popf
test
jg
mov
sub
cs
shll
mov
scas
xchg
jp
jecxz
xor
int3
cmpsb
addr16
sub
mov
mov
in
mov
mov
mov
jno
lret
jp
bnd
cmc
xchg
xchg
adc
push
pop
xchg
and
and
popf
mov
push
mov
flds
dec
xlat
mov
push
ja
and
push
sbb
push
popa
lds
leave
jno
sub
pop
sarl
rorl
sbb
or
dec
push
pop
test
cltd
mov
ss
jecxz
inc
es
insl
test
jmp
jg
loopne
fstps
les
shrl
push
and
inc
and
push
xor
insb
mov
push
insb
test
scas
xchg
cwtl
lods
xor
mov
shrl
xchg
pop
orl
imul
fnsaves
push
cmp
push
hlt
dec
inc
mov
inc
outsl
adc
dec
xor
mov
hlt
in
aaa
stos
pop
xchg
push
test
rolb
lea
cli
incl
mov
add
rcrb
mov
fistpl
addr16
xor
add
sahf
mov
vpunpckhqdq
sub
sub
enter
inc
mov
int
fbld
js
sbb
dec
inc
data16
jge
push
mov
bound
pop
sub
mov
daa
sub
sbbb
mov
in
push
mov
mov
jecxz
jp
es
mov
imulb
lods
mov
pop
popf
jecxz
mov
or
sbb
shlb
jl
stc
add
xchg
jns
lea
shr
icebp
enter
sub
sbb
push
fists
xor
xchg
loopne
mov
sub
outsb
adc
xchg
mov
adc
add
push
cli
push
leave
jne
out
pop
cs
push
pop
repnz
inc
push
lahf
or
and
int3
jl
mov
mov
sub
mov
shl
lods
loope
mov
sub
rcr
mov
clc
dec
mov
xchg
loopew
pusha
iret
cmp
stos
cmp
aas
xor
jl
xor
push
fsubrl
rolb
dec
mov
ret
mov
push
sbb
jbe
mov
push
out
into
xchg
jecxz
repnz
pop
lahf
cmpsl
xchg
push
mov
lret
xorb
jb
daa
jmp
mov
push
or
cmp
dec
scas
sarl
shrl
jnp
fnstsw
nop
daa
outsb
mov
js
push
mov
stc
push
ret
aas
jnp
pop
cmp
ja
jbe
rorl
push
nop
subl
adc
add
pop
ret
pop
lods
jbe
cmp
jle
lahf
popa
mov
scas
cmpsl
mov
das
xlat
hlt
adc
dec
popa
pop
notb
les
mov
test
andb
daa
in
xchg
jp
jbe
out
jb
fimull
sti
xor
punpcklbw
dec
inc
mov
movsb
push
and
divl
shlb
cltd
cmpsl
cli
push
movsl
xor
call
enter
sub
push
and
repz
and
nop
stos
clc
in
cmp
sub
andl
inc
pop
jae
mov
clc
fcmovnu
hlt
push
xor
jne
push
cmpsl
lret
inc
std
dec
sahf
enter
mov
in
dec
mov
mov
clc
inc
dec
push
push
mov
jbe
add
lods
mov
neg
sub
add
movsl
dec
fists
rcrl
sub
or
repz
cli
negl
xchg
push
sub
enter
mov
add
popf
sub
scas
loope
mov
cmp
int
scas
add
lock
int3
xchg
push
dec
cwtl
pop
cli
push
in
call
shll
mov
xor
aad
inc
pop
pushf
dec
mov
js
inc
dec
cld
insb
das
enter
sbb
push
insl
je
icebp
mov
push
enter
repz
sub
and
xchg
push
xor
sub
loopne
repnz
loop
inc
jge
xor
fdivr
push
xor
arpl
scas
add
adc
aas
add
ret
rorl
nop
test
xchg
jno
cwtl
lods
sub
cmpb
ss
mov
ss
ficoms
jmp
sbb
inc
dec
push
mov
orl
scas
incb
inc
dec
sub
jno
mov
mov
out
dec
ret
into
je
inc
lods
mov
pop
mov
xor
mov
es
sahf
lds
jge
hlt
orl
imul
xchg
xchg
call
call
mov
dec
out
fs
sub
lock
or
pop
jne
in
sbb
stos
lahf
sarl
cmpsb
jne
icebp
mov
addr16
sahf
push
lahf
adc
nopl
push
pop
xchg
daa
mov
mov
rorb
cmpsl
and
lcall
or
push
sub
dec
jmp
mov
mov
or
aas
fstps
xchg
or
idiv
repz
sub
sbb
jbe
in
mov
ror
xor
dec
inc
sub
aas
les
loopne
lods
jecxz
jno
mov
lcall
dec
mov
test
fidivl
rorb
mov
sub
ret
pop
cli
lahf
rcrb
fidivrs
mov
xchg
imul
loop
stos
mov
pop
int3
mov
adc
stos
enter
movsl
xchg
mov
mov
outsb
sbb
dec
jno
and
lret
cmpsl
sub
and
sahf
cmp
fldenv
cld
lods
cltd
sub
lret
mov
in
jl
mov
je
sub
or
xor
xchg
and
mov
xor
into
jmp
dec
pop
jp
imulb
jge
scas
fdiv
fildll
enter
lods
mov
pop
pop
sub
lret
add
loopne
jge
and
push
inc
and
cltd
mov
mov
inc
ja
pop
js
pushf
int
test
stc
jl
lods
xchg
inc
add
in
pop
cltd
mov
fadds
mov
jns
jb
stos
inc
push
push
pop
mov
dec
sbb
adc
fnstenv
sbb
sbb
divl
add
mov
arpl
pushf
unpckhps
mov
xor
pushf
xor
dec
sub
arpl
push
stc
push
pop
call
mov
mov
pushf
sti
inc
repnz
imul
jl
stc
add
push
dec
es
outsl
lret
xor
sub
hlt
and
dec
ret
xchg
jl
mov
or
add
dec
int3
add
sub
jae
jecxz
sub
cmpsb
jge
icebp
push
add
push
lea
movsl
inc
mov
iret
rorl
inc
push
shr
push
js
sub
ss
xor
es
in
int3
sub
dec
jmp
fcom
jge
ret
lcall
sub
dec
cmc
out
addr16
xchg
sub
xchg
inc
scas
rcl
jmp
sbb
sub
dec
cmp
adc
adc
decb
cs
push
sub
adc
ret
jne
sbbb
inc
push
es
sti
scas
jl
or
int3
repz
xlat
cmp
xchg
push
dec
xor
mov
cmp
mov
fisttpll
aas
into
scas
inc
push
pop
jecxz
test
jne
push
movsb
fistpll
mov
int3
mov
sbb
fwait
pop
out
sbb
pop
and
fdivr
add
pop
mov
ficompl
add
mov
jno
inc
scas
clc
int
xor
and
lock
inc
bound
rol
cmp
xchg
lods
mov
outsl
fdivrs
enter
aad
insb
inc
rol
mov
pop
clc
mov
push
int3
adc
stos
xor
jg
fwait
xor
js
pop
test
jmp
jmp
jmp
cmp
in
fisubrs
in
mov
repz
ret
loopne
inc
loope
fisttpll
cmp
scas
ds
fcmovu
fmull
cmp
or
xchg
test
fs
ret
sub
add
inc
dec
mov
inc
movsb
mov
mov
dec
jmp
xchg
dec
sub
popf
push
cmp
out
adc
push
sbb
adc
sub
sub
jbe
push
adc
mov
mov
mov
adc
nop
leave
aam
mov
inc
inc
dec
inc
lret
shll
in
out
inc
sub
sahf
insl
cltd
dec
test
in
fistl
cmp
xor
ds
mov
ss
movsl
fnstenv
xchg
ss
dec
push
out
xchg
pop
test
xor
jecxz
aam
inc
jg
loopne
xor
pop
icebp
out
dec
add
jp
jecxz
and
dec
jmp
pop
daa
fs
ret
and
mov
adc
xchg
mov
pusha
sbb
sbb
dec
inc
jbe
es
inc
inc
or
repnz
mov
and
in
inc
jle
push
scas
pop
std
cld
push
mov
int3
in
roll
loopne
leave
cmp
insl
scas
insb
mov
jl
sub
jns
or
xchg
ss
pop
jnp
sti
add
push
jns
cli
outsb
call
xchg
icebp
mov
daa
mull
cmp
mov
inc
jl
rorb
mov
pop
mov
mov
movsb
push
jno
pop
pop
sahf
pushf
and
push
sub
icebp
addl
fisubrl
test
push
mov
pop
int
or
push
pop
adc
stos
test
movsl
mov
jno
sahf
push
cmp
pusha
mov
in
xchg
dec
das
pop
nop
mov
mov
insl
add
sbb
ds
pop
js
out
xor
or
cmp
or
movsl
js
call
cwtl
loope
add
insl
jecxz
xor
shl
outsb
sahf
mov
es
sbb
in
aam
pop
jmp
int3
scas
shlb
mov
lds
pop
cmpsb
xor
in
jbe
clc
xor
sbb
add
jo
or
aas
cmp
pop
mov
mov
sbb
dec
and
cmp
and
aas
lods
jle
xchg
enter
and
neg
jbe
mov
loopne
push
mov
xchg
sbb
jecxz
push
mov
mov
add
push
stos
and
loop
add
hlt
outsl
imulb
jo
add
mov
dec
rcrl
clc
cmpsb
es
fwait
ljmp
pop
mov
scas
xchg
cmp
sahf
and
xchg
loope
or
and
leave
jmp
lret
xor
shrl
mov
mov
inc
outsb
xchg
push
lahf
clc
inc
push
in
push
frstpm(287
ds
sti
movaps
adc
xor
mov
cmpsb
jecxz
xchg
jge
jl
xor
and
jg
cmp
icebp
jmp
mov
xchg
and
arpl
mov
inc
enter
enter
into
cmpsb
xchg
bound
icebp
jns
dec
andb
inc
fcoms
leave
mov
jl
lods
fstpl
push
mov
push
or
jp
mov
out
push
jno
and
je
or
bound
fmul
call
sbb
adc
xor
mov
push
dec
xor
push
mov
in
push
jo
jo
mov
xor
mov
repnz
push
divl
sub
jb
pop
adc
into
out
cltd
sarb
push
movsl
cwtl
sub
mov
jp
mov
lahf
jnp
push
and
jb
loop
outsl
pushf
in
xor
jns
inc
xchg
dec
inc
fistps
adc
adc
hlt
ret
mov
shl
sub
jnp
cmp
mov
mov
out
xchg
push
pop
adc
fsub
dec
pop
cmp
pusha
adcl
push
gs
sub
cmpb
lcall
fildl
dec
aas
mov
jbe
cmpsb
incb
xchg
inc
push
xlat
out
xchg
lcall
leave
fmuls
test
loope
dec
das
lret
and
mov
lds
add
outsb
sub
adc
jo
fdivl
pop
jne
fnstcw
xchg
scas
fwait
push
ffree
mov
insl
lahf
std
and
or
stos
sti
push
mov
cmp
and
loopne
add
adc
fcomip
fmul
push
iret
int3
add
icebp
jmp
dec
movsl
xchg
subl
mov
ret
xor
push
cmpsb
sarb
rcr
and
into
nop
std
int
xor
pop
or
fisubs
adc
mov
mov
sbb
push
stos
ds
cmp
cli
out
icebp
xchg
push
pop
sahf
mov
mov
jb
adc
cltd
mov
ret
aam
push
das
xchg
mov
dec
xor
adc
xchg
inc
push
fwait
xchg
dec
cli
jnp
cmpsb
push
push
dec
xlat
pushf
jle
add
leave
inc
aas
ss
cli
mov
cltd
or
lods
scas
and
jno
frstor
pop
imul
addr16
call
push
xor
cmp
xchg
cwtl
enter
jbe
psubusb
xor
push
jnp
popf
imull
cltd
adc
stos
ds
mov
inc
outsb
jecxz
std
sbb
dec
out
in
inc
xchg
inc
aaa
push
lods
jp
rcr
aaa
outsb
xchg
and
pusha
repnz
stos
lret
and
sahf
outsb
inc
xlat
int
leave
jge
sti
mov
ja
add
and
out
pushf
mov
mov
xchg
stc
cli
cmp
pop
repz
push
lock
xchg
dec
aam
add
into
or
fdivs
xor
daa
sarb
dec
cmp
pop
mov
push
sub
pop
nop
xchg
bound
loop
fcoms
call
mov
add
add
push
fs
xor
je
lods
nop
enter
iret
add
xor
xor
push
iret
pop
mov
add
jb
dec
and
mov
addr16
mov
push
sub
add
push
repnz
jge
adc
sub
outsl
pop
pushf
jbe
xchg
xor
push
movl
mov
xor
aas
movsl
xchg
movsb
clc
int
enter
inc
jb
std
sub
pop
movsl
adc
daa
adc
jne
xlat
aam
jnp
or
fwait
cli
sub
mov
fs
xor
mov
xlat
daa
xor
adc
xchg
add
jp
pop
stos
mov
add
jns
cmp
out
adc
jecxz
xor
xlat
out
dec
ficomps
push
mov
pop
fcoml
mov
adc
cld
mov
adc
sub
fldcw
dec
mov
xchg
sahf
xchg
ss
cwtl
xor
pop
xlat
mov
pop
out
aam
dec
subb
push
xor
lods
fbld
jae
sbb
fwait
hlt
cld
in
lods
mov
das
push
xlat
inc
add
xchg
pop
pop
fdivrs
mov
lods
push
ss
xchg
xchg
sub
cmpl
fcmove
mov
lock
mov
fwait
hlt
xchg
sub
push
sub
xor
ret
pop
nop
cwtl
mov
mov
or
add
and
nop
shrb
cmc
sub
push
pop
imul
int3
fidivrs
or
pop
repz
xor
test
int
jge
lahf
out
add
out
ljmp
cli
bndstx
xor
in
out
and
addr16
push
cli
or
shlb
mov
sarl
push
ret
adc
inc
xchg
sti
sbb
loope
movsb
mov
std
in
mov
das
and
xor
jbe
insb
je
lds
or
subb
jnp
xchg
ficoms
inc
shlb
push
rorb
pop
sub
adc
push
lahf
fsub
push
inc
inc
xor
jg
testl
mov
xchg
stos
cmpsb
pushf
push
aam
pop
stc
fistps
push
das
ds
std
mov
jnp
sub
rcrl
or
inc
pop
aas
scas
aaa
subb
lea
jmp
adc
shlb
xchg
mov
xor
or
xor
rorl
cmp
jbe
inc
fmull
sub
dec
jne
xlat
xor
mov
ljmp
cmp
or
or
xchg
loopne
mul
xor
das
imul
lret
push
jmp
push
into
js
jecxz
mov
mov
sbbl
mov
movsl
lods
jns
bound
mov
fisttpl
jl
into
mov
shlb
nop
hlt
add
repnz
sbb
rcr
inc
pop
int
icebp
faddp
sub
loop
pop
dec
pop
pop
push
push
ds
push
mov
mov
les
adc
neg
mov
fnstsw
or
dec
push
inc
in
stc
iret
pop
arpl
int
mov
xor
movsl
sbb
mov
aaa
xlat
sti
sub
cmp
sbb
faddl
add
shll
adc
jp
cmp
jnp
bound
std
ret
and
lcall
adc
and
push
das
orl
lea
out
aam
jp
jb
fstl
sbb
fdivrs
push
and
or
sub
add
jp
ljmp
mov
dec
ret
jp
repnz
adc
or
insb
pop
xchg
hlt
gs
xchg
notl
daa
jmp
gs
adc
push
adcl
mov
iret
mov
fidivs
cmp
mov
sbb
ja
bound
cmp
fldenv
outsb
mov
sub
rclb
mov
inc
out
adc
daa
sub
rorl
sub
shll
pop
aaa
mov
imul
ljmp
sub
jecxz
and
sbb
inc
stos
push
sbb
mov
or
clc
mov
or
xlat
stos
add
jnp
cmpsl
inc
mov
adc
or
mov
neg
mov
cmc
mov
scas
pop
mov
cltd
inc
ret
cmp
ss
push
jmp
rclb
add
push
insl
adc
mov
fcoms
cs
data16
in
push
fists
mov
dec
cmp
cmp
sarb
sti
xor
ljmp
mov
mov
movsb
mov
sbb
lfs
pop
adc
lock
popf
pop
mov
lcall
std
sbb
push
push
out
ss
repz
jmp
push
ficomps
mov
mov
dec
mov
test
fnsave
iret
shrl
mov
inc
jle
cmp
rorb
test
jo
into
stos
sbb
inc
mov
push
rolb
out
movsl
dec
call
or
xlat
divl
das
dec
idivl
clc
sbb
xor
mov
ja
inc
xchg
stos
cmpsb
push
sarl
pusha
leave
jb
push
mov
fwait
pop
push
shll
mov
jbe
or
fisttpll
pop
cmpsl
fcomp
imul
cmp
jg
pop
das
pop
add
std
out
pop
mov
dec
dec
adc
ror
xchg
std
mov
loope
adc
push
xor
inc
je
sahf
push
cld
shrl
add
sub
iret
xchg
imul
lods
xor
push
push
jmp
mov
inc
and
and
jnp
mov
inc
in
test
pop
mov
std
or
mov
dec
jae
test
testb
cmp
inc
bnd
out
dec
xor
in
repnz
jne
and
rcpps
xchg
add
push
push
mov
fs
xchg
fidivl
ja
ljmp
jl
mov
adc
lahf
xor
pop
incb
and
mov
xchg
cmp
jae
dec
ror
nop
js
adc
jge
out
pusha
iret
pop
out
jbe
popf
xchg
hlt
sahf
fimuls
fstpt
xor
enter
pop
nop
jecxz
xorps
scas
dec
loope
mov
sub
xor
shlb
jmp
test
test
popf
daa
test
push
seta
sbbb
add
add
pop
pop
repnz
inc
test
push
mov
push
push
ljmp
test
repnz
shl
pop
xor
loop
movsb
in
scas
push
shrl
cwtl
dec
xlat
pop
jmp
pop
fwait
mov
lds
jmp
movsb
jbe
out
cld
hlt
jns
push
stos
inc
test
inc
jmp
mov
sbb
jecxz
dec
gs
adc
add
dec
out
mov
mov
cmp
in
js
pop
add
in
mov
pop
psubb
pop
rep
jne
shrb
daa
testl
incb
mov
xchg
scas
in
out
sbb
xor
shlb
fnstsw
adc
sahf
shlb
aam
ljmp
jg
fisubrs
xchg
dec
xchg
jae
cli
mov
dec
scas
adc
int
mov
pop
jae
cmp
mov
out
adc
jae
mov
add
loopne
out
outsb
stos
mov
mov
mov
sub
add
push
mov
test
add
adc
jae
pop
push
and
ss
stc
pop
jo
xor
inc
push
ljmp
and
fisubl
jno
mov
adc
daa
pop
stc
mov
cld
ja
hlt
test
xchg
mov
outsl
test
push
cmp
sbb
and
ljmp
divb
pop
out
push
or
mov
mov
inc
xchg
push
or
cmp
loope
push
add
push
adc
daa
add
inc
std
sub
scas
hlt
test
outsb
pop
mov
icebp
sub
sti
mov
sbb
aad
dec
sbb
mov
mov
pop
xchg
jo
pop
push
jle
mov
leave
sbb
push
adc
xchg
add
leave
rcr
push
xchg
add
fcoms
cmp
jae
push
das
ds
stc
adc
in
out
mov
ds
mov
das
inc
mov
inc
loope
and
cmp
fwait
sbbl
aaa
int
imul
sbb
mov
sub
rorb
jo
sub
push
aad
mov
jecxz
fnstsw
pop
dec
xchg
in
xor
sbb
scas
sbb
pop
add
les
mov
adcb
call
inc
imul
fmul
es
xchg
test
fwait
xor
sbb
jle
and
ja
pushf
xor
dec
pusha
arpl
mov
sbb
mov
mov
xchg
cmp
call
stc
push
or
inc
or
btr
push
fidivrs
xchg
fstps
sub
aaa
pop
inc
fsubr
jge
add
adc
xor
in
fmul
out
std
pop
bound
push
loop
and
cmp
mov
inc
xchg
pusha
jge
dec
push
icebp
ret
sbb
adc
dec
sbb
fildl
lock
out
mov
repz
cmpsl
jno
or
inc
aam
out
jp
fcomps
rcrl
out
lds
xchg
pop
out
cmc
pushf
push
cmp
pop
lahf
dec
xor
pop
sbb
or
sub
mov
mov
lds
pusha
pop
sub
inc
rorb
inc
xor
cmovne
mov
repz
iret
popf
sub
les
xor
mov
mulps
mov
negl
nop
ljmp
ret
dec
jle
pop
push
std
outsl
les
dec
jbe
inc
fsub
imul
enter
mov
sub
push
cmp
add
ds
sbb
sarl
dec
mov
sub
xchg
and
or
cltd
out
add
iret
or
rclb
fmulp
lcall
add
lock
push
mov
sti
jp
mov
or
inc
orb
sub
mulb
lods
pop
push
arpl
sbb
mov
in
scas
cmp
test
dec
add
dec
ret
inc
mov
movsl
out
mov
mov
dec
outsl
roll
cmp
repz
ss
fiadds
sub
int3
shll
insb
adc
int
dec
push
test
add
dec
cmp
xor
mov
jp
iret
mov
or
dec
adc
xchg
or
mov
daa
add
out
xchg
cmp
xchg
inc
dec
xchg
pusha
incl
sahf
mov
test
mov
pop
push
push
shll
xchg
mov
movsl
cmp
cltd
daa
pushf
pop
mov
mov
cmp
mov
mov
sub
int3
push
push
imul
out
mov
cmp
cwtl
adc
adc
mov
dec
mov
jae
xchg
dec
mov
lea
pusha
push
fcompl
mov
jnp
mov
mov
push
insb
testl
sbb
inc
std
add
dec
sub
jo
test
out
mov
pop
outsl
xor
lea
nop
sbb
jbe
cwtl
mov
add
inc
mov
out
fucomi
out
dec
addr16
pop
inc
pop
and
pop
xchg
fsubs
push
push
fisubs
sub
inc
push
jg
pop
mov
mov
fisttpl
cld
push
insl
push
xchg
xchg
movsb
mov
push
movb
pop
pushf
lcall
repnz
add
and
xor
cld
add
aas
mov
push
stos
cmc
clc
pop
jp
stos
pop
sahf
pop
mov
push
jp
je
mov
xchg
add
mov
les
out
sbb
adc
or
out
mov
shlb
pusha
divb
sub
and
clc
xor
jb
or
mov
andl
out
jo
mov
pop
jno
subl
inc
mov
push
cld
sub
xchg
data16
int3
add
xchg
iret
sti
jl
clc
mov
mov
cld
push
stos
push
pop
lret
sub
arpl
popw
add
divl
fwait
es
and
push
add
leave
rclb
xor
cltd
pop
sub
cli
adc
mov
daa
dec
adc
cwtl
lret
lods
cmpsl
mull
xchg
daa
dec
call
mov
mul
test
fwait
add
push
test
movsb
lcall
dec
sbb
or
mov
adc
in
mov
mov
in
sbb
mov
xchg
or
enter
enter
sahf
aad
imul
xor
in
jne
leavew
mov
lds
fcmovnbe
mov
push
insb
roll
inc
fld
ss
xor
fxch
out
mov
mov
int
xchg
stc
lods
clc
cwtl
addr16
adc
or
or
jge
lock
mov
pop
stos
xor
jb
add
mov
xor
iret
icebp
jp
cmp
flds
cmc
hlt
das
adcl
lds
mov
jg
subl
mov
adc
push
jno
into
js
adc
movsb
push
loop
mov
adc
bound
inc
pop
mov
xor
xor
dec
arpl
jo
shl
dec
out
cmp
xlat
adc
daa
fbstp
or
lods
sub
or
cmpb
sbb
icebp
sub
adc
pop
vmovshdup
jnp
cmc
inc
into
pop
push
push
lea
sub
inc
adc
repnz
fwait
mov
push
sarl
mov
push
cmp
inc
add
mov
or
lds
and
xchg
mov
movsl
inc
cmpsl
sbb
add
cmp
js
mov
pop
pop
int3
inc
jecxz
dec
cmp
sbb
js
stos
sbb
mov
dec
add
out
fmul
sbb
push
out
pop
dec
in
ljmp
loop
cmpsl
xchg
aam
xchg
fwait
cmpsl
mov
dec
lret
insb
orl
and
enter
xchg
xchg
aam
inc
shlb
add
fildll
and
js
out
pop
mov
mov
xchg
sub
jns
mov
adc
pop
mov
push
jle
shr
and
loope
jmp
in
cmp
cmp
mov
pop
call
ja
in
aaa
shl
add
enter
shlb
fadd
add
mov
and
or
movsl
int3
xchg
push
pusha
sbb
loope
adc
xor
sub
cmp
pop
add
jo
stos
scas
sub
or
push
jns
mov
sub
imul
dec
in
pop
push
fs
arpl
stc
mov
mov
fisttpll
outsb
sbb
fdivrl
xchg
and
out
stos
shrb
dec
adc
add
adc
add
aaa
js
pop
lods
lods
push
popf
pop
jne
pusha
xor
and
or
jb
or
pop
push
loope
fldt
xorb
outsl
xor
jno
cwtl
xor
cmc
push
mov
add
push
pop
mov
xchg
cwtl
dec
addr16
js
repz
rorb
fnstenv
sahf
push
add
sub
outsb
ja
jo
adc
sbb
ljmp
adc
jmp
xchg
push
inc
add
jae
push
push
iret
ss
cmpsb
ljmp
mov
push
or
jb
cmp
sub
pushf
or
mov
dec
and
in
stc
sub
cmpsl
ljmp
add
shll
sbb
lret
popf
adc
das
lea
stos
xchg
sbbb
xor
jmp
mov
mov
xlat
jo
mov
adc
jne
test
arpl
push
lcall
mov
cmp
ret
mov
push
lods
popf
adc
cmp
fimull
cmp
sbb
icebp
cmc
mov
mov
jmp
or
loope
jle
jnp
or
repz
fisttpl
enter
inc
stc
jb
int
pop
wbinvd
das
mov
mov
scas
sbb
mov
inc
aam
test
sub
out
cmpsb
rolb
mov
mov
xchg
sub
cwtl
les
pop
push
cld
pop
inc
jge
ret
lcall
enter
dec
pop
iret
mov
adc
les
cmp
aam
pop
fisubs
mov
inc
into
adc
sub
adc
adc
adc
sahf
popf
div
ret
push
sbb
hlt
push
pusha
mov
in
jmp
xchg
mov
adc
and
hlt
fs
test
fisttpl
push
jmp
pop
daa
pop
lret
out
cmove
cmp
test
mov
mov
cli
inc
scas
pop
lcall
daa
fadds
mov
into
adc
es
mov
hlt
in
push
in
pop
dec
xchg
xor
ret
ljmp
or
xchg
mov
in
or
aad
xchg
sarb
cli
std
pop
mul
lods
arpl
dec
shll
adc
jg
and
jno
sub
out
or
cmp
adc
adcl
aaa
jle
out
stos
push
js
jne
mov
les
cmpsl
cmp
out
mov
repnz
call
lea
xchg
add
xchg
test
sub
add
mov
imul
xor
and
arpl
xchg
mov
enter
inc
addr16
xchg
test
adc
negl
xor
out
lea
popf
mov
mov
xlat
adc
mov
jno
frstor
jo
stos
inc
pop
push
mov
in
mov
xor
div
xor
call
pop
lret
mov
addr16
insb
leave
sub
push
sahf
cs
cmp
test
mov
dec
cmovp
pop
mov
xchg
mov
jecxz
and
mov
pop
out
push
pop
sbb
sbb
mov
bound
das
fwait
nop
std
xchg
enter
jnp
push
aad
test
loope
sub
loopne
ficoml
ret
or
fdiv
sbb
leave
mov
or
push
outsb
lret
pop
out
cmp
jae
scas
pop
mov
repz
pop
stos
xor
jge
enter
push
iret
lret
mov
cmpsl
jnp
loopne
cmp
pop
xor
notl
mov
fimull
fmuls
inc
nop
sbb
push
movsl
xor
sub
pop
jg
sahf
xchg
pop
jge
or
and
mov
inc
xchg
cmp
mov
mov
inc
testb
push
popf
mov
test
xchg
or
fldenv
inc
aam
sub
test
push
pop
mov
push
pop
pop
push
out
repnz
pop
cmp
push
and
xchg
mov
into
mov
xchg
aas
dec
test
mov
call
in
pop
adc
xchg
stc
mov
ss
bound
dec
push
test
mov
lods
dec
mov
sub
repz
sbb
mov
sub
in
push
je
and
std
xor
xor
xor
sti
push
mov
and
outsl
fdivrl
mov
pop
push
and
test
inc
cmpsl
mov
lds
cmp
jb
rcrl
bound
movsl
icebp
pusha
idivl
push
cs
rorb
cli
sbb
lretw
outsl
addb
lea
or
jl
stos
pop
sbb
fidivrs
sbb
mov
push
dec
push
mov
ljmp
std
das
sbb
jle
xchg
mov
and
jo
nop
sub
mov
xchg
and
mov
cmp
push
out
add
into
mov
adc
mov
jl
scas
imul
iret
cmpsl
ficompl
add
inc
push
jno
jno
pusha
mov
les
in
rcrl
les
pop
icebp
jno
cmp
int
or
inc
fwait
inc
cwtl
add
cmp
push
mov
pop
not
sbb
in
mov
xor
mov
cmpsb
scas
mov
inc
dec
add
dec
pop
aas
ss
pop
mov
mov
outsb
xor
stos
push
mov
lock
push
pop
or
or
in
sahf
mov
out
test
jmp
or
test
sti
pop
dec
lods
mov
jp
pusha
or
or
sub
rcll
cmpsl
lds
inc
mov
or
jle
cmp
fldenv
lret
mov
je
clc
jl
push
pop
inc
in
mov
mov
addb
sahf
push
out
jle
fistl
in
cmpsb
jae
nop
mov
lret
sti
mov
inc
fmull
ss
aas
dec
imul
lret
pusha
gs
dec
lcall
xor
cmp
int3
mov
ljmp
xchg
and
aam
pop
shlb
into
mov
in
pop
pop
and
lcall
xor
mov
std
repnz
stc
loop
mov
and
loopne
bound
or
int3
or
iret
int3
jbe
rol
mov
adc
dec
pop
push
mov
dec
xor
rorb
sbb
loope
sahf
arpl
jno
arpl
js
lcall
xchg
movsb
ss
inc
popl
sub
test
rcl
and
subl
xchg
lret
dec
daa
adc
scas
cmp
iret
cmc
cmp
cli
cmc
mov
jge
xchg
hlt
cmpsl
lahf
pop
pop
sti
sub
movsl
mov
mov
addr16
adc
xor
addr16
or
notl
sub
jg
mov
addl
xor
cld
in
fldln2
adc
mov
gs
mov
mov
add
nop
cmp
jmp
mov
push
imul
add
leave
dec
pop
nop
inc
scas
sub
and
cwtl
inc
bound
divl
sbb
inc
out
dec
xlat
mov
repnz
push
mov
sub
cmp
stos
adc
in
mov
mul
mov
push
movsl
leave
call
mov
adc
ss
cmp
outsl
insb
adc
enter
mov
sub
mov
cmc
or
mov
mov
sarb
enter
out
clc
add
sbb
loope
ret
push
ret
pop
mov
imul
cwtl
cmp
pop
cmp
mov
les
mov
out
cltd
inc
lcall
dec
push
and
test
dec
stos
sti
clc
cli
adc
in
std
and
dec
cmp
xor
or
mov
pop
jle
test
ds
into
and
adc
leave
cmp
jb
inc
cltd
jae
xlat
mov
stos
dec
or
fs
into
inc
jge
add
pop
rcr
add
push
sub
sbb
mov
lcall
pop
jae
cwtl
andb
jp
scas
jns
ss
adc
xor
add
sbb
fstl
inc
mov
popa
mov
test
fcoml
sbb
mov
dec
lods
push
leave
pusha
push
mov
cwtl
push
pop
jl
mov
mov
xchg
mov
cmpsb
push
rcr
test
xchg
les
aad
sub
and
outsl
jno
mov
int3
inc
jae
jmp
adcl
mov
pop
fidivrl
xorl
xchg
jbe
sbb
cs
mov
mov
or
js
mov
pushf
mov
jg
or
mov
in
xchg
push
push
loope
hlt
aas
jle
inc
xor
repz
push
jae
notl
roll
insl
adcb
xchg
pop
je
add
mov
aam
pop
add
xor
mov
std
inc
call
mov
nop
and
bnd
je
lcall
add
jnp
dec
fmulp
rol
inc
loope
jmp
and
or
pushf
pop
lret
and
add
lock
data16
xchg
lret
enter
out
fwait
aam
gs
ret
mov
arpl
mov
or
lods
xchg
gs
jnp
xor
cmp
push
repnz
imull
pause
ljmp
push
iret
lret
mov
popf
mov
xor
in
cltd
inc
push
inc
push
fwait
lods
or
std
daa
xor
bound
subb
or
or
inc
faddp
push
cmp
push
aaa
imul
in
pop
xor
iret
mov
and
pop
push
out
imul
mov
jle
jno
cwtl
xchg
xchg
and
dec
xor
daa
add
xchg
jl
xor
jae
mov
and
stos
loopne
leave
jg
cmp
imul
mov
inc
xlat
mov
ljmp
or
mov
adc
rcrb
sahf
mov
xor
shrb
xor
dec
dec
dec
cs
test
scas
cmp
je
mov
xlat
inc
push
sub
cmc
xchg
rorl
dec
push
add
push
ds
jno
loop
jbe
or
icebp
add
addr16
dec
push
ja
mov
xchg
mov
jbe
push
ret
push
mov
lcall
mov
dec
push
cmp
shlb
pop
outsb
pop
fcmovbe
inc
cmpsl
stos
in
or
mov
movsl
push
mov
mov
mov
insl
jp
pop
pushf
pop
rolb
mov
lcall
xor
bound
mov
xchg
movsl
mov
adc
xor
in
ss
xchg
pusha
jns
shll
push
inc
sbb
xor
sbb
lds
cltd
icebp
out
jmp
jne
add
adc
fsubrs
test
jno
imul
aad
xchg
aad
add
mov
mov
fwait
push
mov
inc
or
je
seta
push
mov
dec
jge
int3
daa
and
and
cmp
orb
push
jge
and
pop
fsubs
jo
jbe
mov
adc
pop
popf
xlat
pop
lret
in
dec
test
pop
dec
dec
sbb
xchg
fisubs
or
cmp
jp
xor
and
jle
jne
pop
mov
test
loope
dec
fstl
in
xor
scas
das
pop
rep
outsl
in
out
push
jbe
ds
adc
mov
xor
fisubrs
sbb
inc
sbb
jge
pop
es
mov
addl
shll
fwait
out
jnp
pop
in
mov
popf
out
pop
jbe
leave
dec
mov
ret
push
lret
out
gs
fstpl
aad
icebp
shll
xor
sti
por
pushf
ficoms
ret
inc
lret
mov
and
outsb
add
int
push
pop
or
negl
incl
lock
int3
cmp
pop
filds
pop
mov
cmp
js
add
data16
in
daa
sbbl
out
dec
mov
jae
mov
cli
inc
es
aam
out
scas
pop
dec
jo
ja
jl
aam
pop
cmp
jecxz
adc
inc
les
fbstp
sub
mov
add
xor
adc
mov
mov
push
mov
or
or
loopne
in
xchg
adc
xchg
outsl
in
add
mov
scas
jmp
inc
and
xor
dec
inc
rolb
in
out
add
inc
or
pusha
out
push
mov
mov
aaa
je
pusha
inc
daa
mov
mov
test
fistl
mov
push
out
mov
sti
popf
test
int3
iret
sub
mov
mov
repnz
out
xchg
sub
or
test
jo
pop
clc
cmp
mov
mov
jne
xchg
jnp
je
ss
mov
jmp
call
mov
vphaddubw
nop
inc
mov
pop
pop
and
adc
int
insb
xchg
ja
dec
mov
sahf
xchg
push
dec
mov
jb
mov
jle
loop
or
rorl
sub
sahf
jge
ds
dec
jnp
scas
and
ds
std
jmp
ja
sti
sub
pop
jge
loopne
test
sbb
and
dec
dec
mov
inc
xor
sub
ss
inc
movsl
jbe
rclb
xor
pushf
xchg
out
test
dec
in
fwait
jnp
lret
out
lods
out
xchg
ret
push
inc
jbe
pop
pusha
mov
cs
out
adc
fldt
pusha
popf
sub
mov
xor
and
hlt
shlb
dec
cmp
icebp
fwait
sub
add
insl
inc
xchg
jl
adc
pop
or
adc
mov
std
sub
mov
int
mov
mul
aad
fcomps
mov
inc
stos
orb
std
fists
mov
cmpb
mov
mov
mov
jnp
mov
repz
mov
fstps
dec
push
ja
stos
xlat
xlat
push
pop
pushf
pop
clc
into
add
jbe
mov
inc
ja
sbb
sbb
xor
dec
and
add
add
pop
jle
in
mov
sbb
cltd
push
jge
test
imul
jbe
in
and
pop
imul
icebp
cmpsb
das
or
fdivr
push
imul
pop
pop
or
ss
or
into
fucomip
mov
sbb
int
int3
and
mov
lret
pusha
xor
add
mov
js
xchg
mov
movsl
xchg
xor
push
out
test
insb
xor
push
jbe
xchg
ljmp
mov
xlat
dec
jns
fildl
jbe
and
int
ss
xchg
pop
push
mov
arpl
movsl
inc
arpl
mov
mov
outsl
test
pop
stos
pop
rclb
mov
push
int3
mov
sub
add
cmp
in
clc
push
loop
cwtl
cli
mov
jne
mov
pop
in
std
in
mov
pop
ljmp
ss
cmp
repnz
and
ret
lds
push
jb
enter
scas
cmp
sub
sub
adc
mov
stc
mov
ret
daa
cli
fwait
in
jl
mov
adc
hlt
les
loop
jge
cmp
pusha
push
mov
xchg
out
mov
popf
lods
stc
clc
and
verw
out
xchg
jae
mov
push
ficompl
mov
clc
cmpsb
xchg
jmp
and
pop
rcrb
push
jno
lahf
sti
in
movsl
sbb
cmpsb
insb
aas
mov
jle
addr16
mov
cmp
ljmp
sub
sub
aad
push
xchg
fists
adc
jecxz
inc
pop
sti
lods
xchg
adc
push
imul
push
xchg
movsl
sub
xchg
xchg
push
and
daa
jmp
ss
out
out
pop
lcall
jo
aam
aad
in
aas
cmp
clc
sub
jo
loope
adc
pop
mov
in
dec
das
jae
push
xchg
adc
cmp
xor
mov
sbb
into
push
push
or
sbb
xlat
xchg
sbb
add
neg
sahf
mov
in
jg
jns
rcrb
mov
or
aaa
sbb
test
sbb
outsb
clc
por
add
in
or
mov
imul
push
daa
jmp
push
aad
push
or
test
fisubrl
cltd
ljmp
xchg
popf
jmp
mov
push
adc
aad
rclb
rcll
lea
mov
loopne
sbb
lock
arpl
xlat
das
sbb
sbb
cmpsb
icebp
rcl
pop
mov
inc
xlat
pop
mov
jbe
pop
xchg
pop
cmc
sahf
or
hlt
into
inc
sbb
lds
mov
mov
js
repnz
test
inc
xor
loopne
sbb
xchg
aas
scas
cmp
clc
push
xchg
shll
daa
jbe
icebp
jp
out
test
hlt
cmp
pop
mul
les
inc
jne
stos
mov
mov
movsl
mov
lock
inc
xchg
shrb
aam
repnz
xchg
ljmp
or
cli
imul
cmp
inc
jmp
sub
sbb
sbb
test
push
dec
out
fldcw
jle
adc
lret
xchg
loope
dec
dec
pop
cmpsl
fiaddl
xchg
ja
lret
push
jg
lock
inc
pop
mov
pop
mov
enter
int
sbb
lea
sub
xchg
pop
pop
lret
mov
and
notl
mov
jle
arpl
rclb
xor
cmp
mov
or
pop
xor
xchg
pop
adc
ss
push
xchg
push
nop
mov
mov
pause
test
ret
pop
rcrb
stc
push
int
push
imul
gs
cmpsb
in
adc
jnp
sbb
lret
les
insl
mov
sub
cmpsl
mov
cmp
mov
ds
lahf
push
mov
mov
into
mov
sub
and
leave
outsb
sbb
les
dec
mov
adc
out
and
insb
mull
popa
movsl
push
or
dec
addr16
in
xor
je
sub
and
push
and
mov
stc
sbb
cmp
xor
aaa
sbbl
inc
stc
mov
lods
dec
xchg
dec
std
mov
dec
repnz
sbb
lds
mov
in
dec
dec
mov
inc
lret
adc
cs
jmp
pop
movsl
std
imulb
mov
add
out
loope
xor
sub
out
in
in
xor
lret
ss
adc
jne
scas
add
or
and
xchg
mov
shll
pop
mov
outsb
hlt
push
fistps
fwait
adc
inc
xchg
fistpll
imul
test
add
mov
test
js
cmp
sub
das
fidivrl
repz
jnp
filds
lret
popf
xchg
sub
add
xlat
dec
jnp
jg
and
dec
insb
mov
jl
filds
cmc
sub
push
sub
pop
cmp
mov
mov
divl
jge
bound
xchg
xchg
mov
test
xor
ja
aas
sbb
push
jge
xchg
sbb
add
add
sbbl
lea
add
outsb
cld
push
das
subl
jns
es
jbe
int3
popa
xchg
push
test
movsb
and
aad
push
mov
sarb
add
ss
mov
idivb
inc
subl
in
pop
ds
xchg
mov
cmpsl
sbb
and
sub
mov
and
or
das
mov
dec
test
int3
je
rolb
xor
mov
push
xor
pop
mov
lds
leave
ficoms
mov
lcall
fdivl
add
icebp
sbb
or
rolb
pop
xor
pop
loopne
into
jno
test
loope
mov
decl
xchg
enter
mov
push
push
outsl
push
lock
adc
ljmp
inc
ds
jmp
sahf
pop
mov
dec
push
mov
push
pop
mov
mov
mov
gs
ds
jns
mov
loope
dec
push
mov
pop
aam
push
stos
push
sahf
sub
xchg
inc
mov
fmuls
mov
pusha
push
clc
ds
and
jo
aas
push
mov
sbb
jbe
mov
jae
and
pop
test
mov
ljmp
push
push
and
es
add
mov
push
aaa
data16
mov
adc
std
sbb
aam
sub
dec
movsb
cwtl
pop
jmp
jmp
out
enter
pop
xlat
hlt
pushf
sbb
jne
ret
cmp
pop
add
jmp
inc
pop
push
fildl
or
pop
rcl
test
dec
cmpsl
std
mov
inc
je
mov
loope
mov
std
int3
mov
add
gs
mov
xor
xchg
outsl
test
xor
nopl
lahf
add
ffree
push
lds
test
int
aad
outsb
mov
jp
movsl
les
es
mov
jg
shlb
loopne
mov
test
aaa
shll
add
adc
cmpsl
mov
arpl
cs
fcoms
pushf
jge
ss
ret
and
sbb
xchg
and
xor
adc
dec
mov
jmp
aam
dec
fs
xor
in
dec
mov
sub
jg
mov
mov
pop
xlat
negl
mov
sbb
rcll
push
out
xchg
mov
scas
jb
pop
sbb
xor
jb
cs
xor
dec
fdivl
mov
cmp
cli
xchg
adc
aas
fmuls
add
mov
xchg
jns
mov
and
fisttps
adc
in
fstl
jne
mulb
popa
adc
shr
cmpsl
pop
mov
shrl
es
sysexit
add
repz
dec
add
aad
push
inc
int
push
xlat
jae
sub
iret
in
call
test
out
lds
mov
int
jle
cmc
jg
std
ret
sbb
mov
daa
pop
cld
jo
xchg
imul
repnz
es
inc
stos
push
sbb
or
adc
shll
pusha
cmc
fmul
mov
cmpsb
sbb
push
add
or
xchg
cmp
gs
fbstp
rolb
out
insb
jmp
jmp
outsb
sahf
push
mov
xor
enter
lretw
pop
dec
std
push
adc
cmp
fld
fimull
stos
popf
and
out
es
mov
mov
repnz
pop
add
gs
xor
jl
mov
cld
jo
fwait
pop
adc
aad
or
dec
push
xchg
mov
jmp
and
jge
loopne
pop
mov
imul
jnp
enter
xchg
inc
ret
fcompl
dec
cs
cwtl
sahf
xor
add
xchg
getsec
jecxz
pop
mov
pop
push
adc
mov
lret
lea
mov
insl
jle
repnz
jg
jnp
and
call
push
out
jae
out
mov
fimull
jae
inc
cli
pusha
pop
dec
mov
stos
xchg
imul
mov
test
and
mov
stos
inc
pushf
push
insl
sub
adc
xchg
sub
scas
mov
inc
jns
inc
mov
add
gs
pop
inc
shl
sub
lods
jge
jg
inc
fisttps
jmp
inc
shrl
sbbl
out
add
mov
sbb
add
addr16
test
cmp
xor
pop
lods
popa
lret
call
adc
mov
lea
iret
push
filds
push
scas
fsubrl
sub
or
jns
js
cmp
pop
sahf
pop
stos
in
add
inc
or
ficompl
jmp
int3
adc
adc
fs
cld
clc
jmp
or
enter
mov
enter
test
pop
addr16
in
adc
pop
xchg
mov
dec
in
or
cmp
test
bound
movl
ss
sbb
iret
nop
mov
xchg
jnp
enter
fistpll
jle
adcb
sbb
mov
or
nop
std
push
dec
mov
gs
push
dec
mov
sbb
outsl
mov
mov
fmull
mov
ret
in
test
and
data16
call
movb
ja
icebp
fwait
jg
aas
or
pop
insl
jecxz
push
leave
pusha
cld
jb
outsl
ss
pop
int3
jnp
dec
sub
cmc
mov
xor
cmp
ljmp
sbb
jnp
enter
icebp
shr
dec
sub
jmp
lock
or
xorb
sub
dec
xchg
ds
stos
mov
cltd
cli
cmp
mov
xchg
adc
dec
call
lods
fsubr
lods
and
fsubp
mov
pop
cmp
repz
inc
jg
popa
imul
mov
mov
fsubs
adc
dec
fwait
inc
leave
inc
xor
mov
stos
add
stc
push
ljmp
and
or
push
mov
sbb
add
inc
aaa
movsl
or
aaa
sbb
add
sub
jnp
imul
sarl
or
jecxz
jl
mov
mov
mov
es
insb
cmp
xchg
push
lret
mov
cmp
cs
cmp
subb
sbb
aas
cld
frstor
test
into
push
pusha
decb
stc
fcomps
mov
dec
jl
pop
popf
lea
shr
stos
fldl
push
or
mov
mov
push
pop
jmp
nop
jnp
adc
ret
frstor
stos
div
mov
stos
movsl
stos
movsb
or
testl
outsl
xchg
rep
into
xor
dec
rcrl
push
mov
jmp
add
mov
aas
inc
andb
jge
leave
add
add
fwait
lahf
sti
int3
xor
dec
mov
shll
stos
in
gs
add
pusha
fs
xor
mov
inc
push
cmp
js
pop
popa
mov
sbb
cltd
in
aaa
popf
mov
imul
sti
sahf
or
out
sahf
shlb
push
addl
and
add
pop
cmpsl
cwtl
mov
stos
lret
or
outsl
notb
dec
scas
in
mov
mov
aas
cld
push
notb
mov
push
dec
divb
cmpsl
mov
sub
das
dec
popa
pop
into
dec
sub
mov
jmp
lret
and
loope
sarl
int
adc
and
mov
and
pop
jecxz
pop
and
pushf
adc
mov
out
jbe
fbstp
xor
in
inc
lock
in
or
pushl
jmp
arpl
pop
je
lret
or
xchg
aam
jae,pn
ss
mov
pop
icebp
cs
out
aam
or
clc
sbb
mov
push
mov
dec
std
ds
sub
imul
fidivl
mov
lret
stos
jne
mov
dec
jne
mov
in
xchg
jl
pushf
xchg
lods
push
out
jmp
add
inc
xlat
fdivl
lahf
pop
mov
jnp
jnp
insl
sar
lcall
jl
jle
scas
adc
fidivs
mov
mov
mov
jo
ss
test
sub
sub
xor
push
les
xor
jg
jnp
and
fdiv
inc
pop
ds
or
mov
mov
mov
pop
rcrl
jecxz
sub
mov
popl
bound
and
aad
jbe
sub
repz
shr
mov
jl
leave
mov
and
xor
mov
sub
sbb
mov
cmp
add
fwait
test
ret
leave
xorb
into
xor
mov
push
push
and
outsl
ds
out
test
cmp
repnz
mov
and
push
jge
jmp
xchg
add
icebp
es
shl
xchg
scas
test
xor
dec
test
sbb
test
std
insl
inc
adc
out
and
lock
xchg
pop
pop
lret
in
and
add
fcmove
movsl
test
fsubs
xchg
sbb
dec
pop
je
cwtl
in
sub
sbb
jmp
inc
push
adc
frstor
sbbl
js
or
stc
in
hlt
loopne
hlt
repnz
mov
mov
mov
cmpsb
pop
mov
loop
aam
stos
adc
mov
push
std
mov
lea
or
sub
cli
or
lds
xor
sub
mov
pushf
das
xchg
out
sbb
mov
or
popf
std
sti
pop
pop
cmp
insl
xlat
xchg
jne
in
jne
lcall
add
jne
fidivrl
add
aad
or
add
fsubs
loope
bound
jl
adc
ljmp
inc
shrl
xchg
cmpsb
push
add
sti
ljmp
loopne
lds
pop
hlt
xor
mov
xchg
push
pop
shll
or
mov
jo
movsl
sahf
cmpsl
mov
std
enter
mov
outsb
imul
pop
mov
in
or
arpl
cmpsb
dec
dec
adc
test
lods
lds
dec
sbb
out
call
mov
movsb
cld
test
sbb
outsl
cmp
imul
sti
daa
cltd
jl
or
shl
cmp
lret
ds
push
iret
outsb
popf
cmp
and
dec
shr
loopne
fs
sti
pop
and
jmp
lret
adc
test
xchg
shrl
insb
cmp
movsb
and
subb
fwait
mov
fsubs
jo
test
dec
xchg
inc
imul
repz
sbb
jno
addr16
stos
xor
test
xor
pop
pop
sti
daa
popa
dec
sub
leave
pop
lea
pop
cmpb
xor
push
xchg
testb
movl
mov
decb
shll
fucom
sub
sahf
push
pushf
pop
and
fidivrs
testb
xchg
pop
sbb
out
add
jmp
fldt
rorl
mov
sub
rol
cmp
push
pop
cmp
inc
pop
or
add
xor
das
nop
push
pop
xor
lcall
inc
push
pop
inc
aaa
cmpsl
and
push
push
xchg
push
cmp
mov
lahf
push
dec
mov
out
mov
out
aam
es
adc
push
into
jo
pop
orb
xchg
outsl
dec
lret
add
sbb
inc
sub
sbb
sti
iret
add
dec
add
dec
jl
stos
mov
push
das
fstl
mov
test
cmp
pop
in
sbb
repz
and
sti
out
adc
mov
sub
jle
mov
or
sti
test
sub
in
pusha
and
sub
inc
xchg
xchg
mov
int
sbb
push
mov
jge
clc
int3
push
and
es
fstl
sub
mov
add
jnp
sub
cmp
aad
int
jg
xchg
popf
push
or
jnp
insb
sahf
fists
cmp
add
in
jmp
icebp
add
xor
fnstenv
sbb
fnsetpm(287
lahf
sub
hlt
hlt
fwait
sarl
cmp
pop
push
arpl
xchg
notb
int
lcall
mov
cmp
mov
test
clc
or
ret
out
jbe
or
insb
pop
pushf
xchg
fildll
xor
sub
jl
push
and
roll
notb
and
enter
lret
loopne
dec
jl
cmp
mov
test
inc
jne
ss
rcr
cld
sub
imul
and
stos
or
subb
ret
xor
dec
push
pop
cli
int3
cwtl
jb
mov
push
addb
mov
push
mov
pop
scas
pop
scas
stc
lods
add
sbb
movsb
pop
push
ja
movsb
add
scas
dec
jae
out
inc
mov
addr16
jnp
add
sub
mov
jge
dec
mov
aas
ret
or
fsub
add
and
mov
pop
in
mov
fsts
mov
jg
aas
jg
sub
mov
xor
test
push
push
mov
jmp
in
std
mov
loopne
jg
push
sbb
enter
gs
cli
iret
shrl
mov
push
lahf
xchg
jns
push
repz
out
daa
out
icebp
sti
jmp
push
movsl
pop
inc
push
mov
pop
jmp
or
shl
cmp
mov
stc
int3
imul
xchg
ja
sbb
push
xchg
stc
sub
arpl
out
sub
xor
adc
repz
sub
mov
in
fmulp
mov
cld
push
in
pop
mov
inc
jns
mov
in
aad
sbb
or
enter
inc
ljmp
sahf
lcall
daa
sarl
inc
es
pusha
jae
sahf
cmp
sub
adc
jb
cmpsb
pop
ficompl
jns
rcl
mov
push
inc
loopne
jne
jl
mull
or
test
dec
idivb
psadbw
loop
sti
adc
loope
push
pop
insb
xor
arpl
xchg
sub
fisttps
jge
add
sbb
enter
add
test
das
mov
movsb
dec
sub
xor
enter
inc
mov
jno
mov
xchg
dec
push
mov
xlat
test
aad
out
mov
frstor
xchg
mov
push
pop
mov
stos
in
loop
aad
pusha
pop
jae
pop
notb
or
xchg
sbb
ret
lods
sbbl
lock
in
mov
add
add
or
mov
fwait
cmp
cmpsl
push
cmpsl
fdivs
jo
adc
popf
lret
mov
xchg
sbbl
insl
mov
jge
mov
dec
fldenv
push
jg,pt
sbb
out
stos
dec
dec
xor
stc
movsl
les
es
cmpsb
int
pop
loopne
cmp
mov
pop
test
out
stos
push
mov
push
xchg
idivl
scas
push
cmpsl
cmp
scas
mov
jp
movsl
mov
sbb
sub
fstps
and
ficomps
adc
rcr
imul
mov
push
mov
int3
psubsb
pushl
mov
cmpsb
dec
test
sbb
sahf
cmp
in
cmp
dec
pop
flds
ljmp
inc
out
notl
xchg
daa
or
andl
sarl
popa
mov
jne
mov
xchg
jne
mov
insb
or
mov
std
add
loop
out
neg
ss
jp
packsswb
mov
cmp
pop
and
xor
or
push
push
and
lea
adc
inc
pavgb
cmp
lods
push
cmp
clc
aam
ret
punpckhwd
shl
data16
mov
test
adc
repnz
bound
pop
push
jp
push
sub
xor
or
int3
jbe
mov
addb
scas
daa
rcrb
cmp
sub
add
mov
icebp
loope
arpl
repz
sub
push
fidivl
cld
data16
aam
js
xor
ja
popf
addr16
fdivr
scas
fmuls
icebp
pop
mov
add
mov
outsb
mov
ret
sub
push
scas
mov
push
loop
ljmp
inc
cwtl
js
pmulhuw
cwtl
sub
sub
jnp
rclb
mov
mov
xchg
and
test
jnp
sbb
sti
xor
push
jae
lret
pop
je
sbb
xchg
dec
fistps
cmp
out
test
pusha
mov
inc
mov
cmc
cmpb
add
mov
pop
add
in
jae
jge
in
lret
cmp
push
jp
shlb
fdivl
sbb
leave
pop
cmp
mov
jmp
ljmp
hlt
cltd
gs
dec
jmp
jns
add
das
call
fisubs
inc
icebp
daa
scas
mov
shrb
mov
jns
scas
in
ja
movsb
lods
cld
test
insl
xor
out
mov
aam
adc
xchg
xor
mov
and
add
mov
lea
gs
push
dec
and
sti
out
int
rcrb
pop
aaa
pop
lahf
jecxz
int
sar
sbb
fildll
loop
pop
arpl
stos
lcall
adc
js
adc
mov
sbb
jb
imul
push
push
sar
in
cmp
and
dec
jge
aam
xchg
fistpl
cmpsl
test
fnstenv
xchg
jo
fnstsw
xor
inc
popa
jbe
leave
fdivl
repz
js
addr16
xchg
mov
push
arpl
imul
sbb
cmc
mov
xor
pop
scas
jmp
pop
mov
cmp
idiv
push
and
data16
xchg
lcall
sbb
mov
out
sarb
test
push
xchg
mov
inc
fistpll
fmuls
dec
in
mov
icebp
mov
call
outsl
stc
xor
mul
xchg
mov
enter
sbb
add
mov
dec
lods
jecxz
mov
cmc
shrl
shrb
sub
stc
rcll
movsl
subb
xor
inc
das
in
data16
and
in
enter
movsb
jecxz
and
jl
stos
jb
mov
cs
lods
mov
lret
mov
das
popa
sti
mov
clc
es
out
adc
loopne
add
sahf
inc
in
lret
loop
out
fsubrs
add
sbb
dec
js
lea
inc
je
rolb
aam
enter
insb
and
bound
add
data16
mov
mov
dec
inc
xor
sahf
outsl
popa
push
inc
push
cmp
push
mov
int
pop
fnstsw
cs
xchg
pushf
movsl
cmpsb
jns
fsubp
fwait
cmpl
add
adc
mov
popf
nop
add
loopne
jge
inc
mov
mov
sub
idivb
add
or
cmp
inc
mov
pop
and
and
pop
fstl
fsubrl
stos
mov
jb
and
or
mov
xlat
mov
jo
movsb
orl
inc
dec
lret
lods
dec
adc
push
loop
sti
jae
enter
stos
fidivs
addr16
nop
outsb
movsb
notl
add
mov
or
mov
into
outsl
and
push
jl
sbb
push
jmp
or
or
loopne
mov
scas
packuswb
or
pop
dec
jnp
daa
mov
lods
movsb
int
xchg
jae
xor
stos
addr16
or
sub
or
popa
and
mov
imul
add
dec
mov
dec
pusha
and
jge
popa
iret
shrb
xchg
mov
in
add
ds
imul
or
shlb
push
mov
pushf
pop
dec
and
pop
cmp
shl
imul
stc
int3
sbb
test
mov
mov
sbb
and
inc
ds
dec
je
push
fdivrp
insl
pop
push
dec
push
rorl
jae
cs
push
mov
test
inc
aad
popa
sbb
mov
xchg
lods
push
stc
lods
ret
mov
cmp
push
into
cmovne
arpl
rclb
jecxz
jnp
insl
je
mov
ror
push
aam
sbb
fdivrl
adc
pop
mov
xor
add
jl
jbe
xor
pop
popf
jmp
es
push
iret
loope
rcll
scas
dec
and
test
jae
dec
add
int3
je
shll
cmpsl
mov
sub
fisttpll
into
cmp
mov
sub
icebp
push
leave
fadds
andl
bound
and
push
fidivrs
mov
scas
int
push
mov
addr16
cld
push
inc
inc
into
sbb
ds
imul
inc
loop
and
dec
jl
fisubrs
xlat
sub
push
sub
out
or
jge
mov
push
dec
roll
out
or
nop
mov
outsl
test
test
dec
cli
repz
aam
push
mov
sarl
adc
shrb
jmp
dec
pop
push
sub
dec
jp
cwtl
xor
mov
cwtl
loop
sbb
xchg
xor
mov
test
enter
mov
adc
mov
xchg
xchg
scas
mov
stc
out
sahf
mov
dec
xchg
lock
decb
sub
push
pop
or
lods
pushf
lds
mov
cmc
mov
je
stos
sub
icebp
xchg
xor
push
stos
mov
sub
lahf
mov
not
mov
lret
pushf
xor
dec
shl
xor
in
xchg
lret
cmp
push
push
gs
or
aaa
out
jbe
adc
andb
insb
cmpl
idivb
das
inc
cmp
iret
mov
popf
mov
nop
fcmovu
cmp
mov
sbb
out
or
int3
lret
ja
cmp
test
and
push
ret
lret
push
inc
mov
mov
mov
adc
scas
add
gs
mov
ret
push
inc
cmp
inc
sub
sbb
cmp
and
or
sarb
adc
and
aas
push
icebp
jmp
jnp
push
mov
mov
in
mov
loope
sbb
jg
movsl
aam
push
push
and
mov
jmp
aad
xchg
in
jp
jbe
sbb
push
out
mov
js
dec
dec
mov
pusha
rcrb
nop
in
mov
inc
arpl
pop
in
insl
cwtl
lds
cmp
mov
xchg
pop
icebp
fdivr
and
loop
sahf
pop
inc
cmpsl
jmp
fildll
imul
dec
cmp
fldl
aam
cmp
repz
jbe
jg
inc
jp
or
xorb
movsl
lret
rclb
jmp
or
xchg
cli
stc
scas
sbb
clc
and
inc
std
int
clc
mov
mov
xor
mov
sub
sub
jmp
mov
push
xlat
test
sbb
shlb
jmp
mov
fcomps
inc
sbb
push
jo
mov
sbb
ljmp
push
xchg
dec
lcall
sub
cmp
idiv
push
push
insb
mov
jecxz
ljmp
xlat
in
jmp
or
in
fucomi
mov
add
sub
pop
mov
and
jg
and
cmpsl
cmp
out
test
push
cmp
stos
jne
adc
test
aad
cwtl
inc
and
mov
sub
sbb
lret
jmp
sbb
aas
mov
cmp
loop
and
outsb
push
fstl
lods
push
push
inc
stos
inc
sub
in
lock
daa
cmpb
loope
out
jecxz
mov
pushf
adc
aaa
xor
or
cmp
or
push
fimull
popa
mov
imul
repz
and
imul
imul
pop
scas
addr16
cmpsl
mov
scas
mov
out
inc
flds
sub
push
pusha
ror
shll
cmovne
mov
jmp
aad
sbb
sahf
jp
lds
push
dec
inc
push
or
dec
sar
daa
add
ljmp
mov
in
cli
pop
xor
mov
xchg
ds
sbb
mov
sbb
in
js
enter
mov
sub
and
call
rcr
mov
jl
mov
jne
jp
dec
mov
fistpll
jmp
fsubrp
adc
int
test
addr16
ss
shlb
loope
mov
pop
int
movsb
ljmp
aas
out
enter
and
mov
stos
pop
iret
jnp
fiaddl
cli
cld
std
pusha
fdivl
leave
jmp
adc
into
cli
push
xor
jne
daa
xor
cwtl
mov
ja
fcmovnu
and
jmp
add
add
adcl
cmp
nop
sbb
xor
out
das
insb
ror
mov
dec
push
out
xor
cmp
inc
push
lret
insb
int
cs
inc
test
cwtl
mov
ds
xlat
xlat
pop
mov
jg
loopne
popf
xchg
je
lret
imulb
cli
pop
inc
sub
dec
pop
adc
test
daa
negl
mov
out
loopne
mov
pop
pause
sub
sbb
sub
lock
jmp
push
mov
movsl
dec
jns
push
jno
ret
push
imul
ja
out
xor
cmpsl
or
bound
je
inc
clc
pop
mov
pop
pushaw
addb
cmpsb
lcall
in
or
jmp
das
in
test
shll
nop
cmpsb
outsb
ljmp
adc
fstl
loop
lock
sbb
out
scas
insl
inc
lods
lret
pop
fcomps
imul
jge
inc
cmc
ds
ss
ljmp
scas
test
repz
pop
mov
es
shlb
fisubl
cmc
roll
push
testb
int3
jbe
or
or
outsl
fnsave
cmpsl
fcomp
sbb
dec
out
and
push
sub
push
int
cmp
fmull
daa
loop
jg
mov
pop
mov
or
push
push
jmp
lret
xchg
add
mov
inc
addr16
jae
cmp
lret
xchg
je
jno
in
cltd
inc
sub
or
fisubs
jl
in
out
mov
xchg
lods
sbb
mov
dec
mov
adc
push
test
aas
iret
sub
dec
sarl
push
cmp
idivl
lods
adc
push
repz
adc
stos
xlat
repz
jmp
lahf
push
pop
dec
je
xchg
out
xor
mov
add
xchg
rcll
mov
js
ds
lfs
adc
fstl
aaa
and
xor
aad
sub
nop
mov
and
jp
or
imul
lods
xor
xchg
repnz
ret
jmp
lds
or
negb
xchg
aas
nop
popf
add
insl
pop
fmulp
push
iret
xor
pop
lods
mov
or
jne
xor
mov
subb
subb
pop
lock
or
jo
loop
cmpsl
aas
ret
push
in
mov
gs
out
cmp
mov
adc
lret
cmpsl
xor
dec
xchg
push
mov
dec
ror
fwait
xor
cli
adc
sub
jp
mov
sub
ss
adc
cltd
adc
mov
insl
rcll
cmp
scas
push
loop
loopne
stc
pshufw
call
mov
lock
test
and
div
ja
cli
pop
mov
cmp
cmp
pop
mov
push
sarl
mov
dec
incl
int3
jo
adc
movb
xchg
dec
add
pusha
pop
rorl
lcall
in
sbb
insl
adc
push
sbb
push
es
push
mov
inc
or
xor
sub
jge
mov
test
mov
add
and
adc
inc
ficoml
dec
or
mov
inc
fstpl
dec
cli
loopne
iret
mov
cltd
adc
inc
inc
inc
js
jl
mov
mov
insl
pop
push
in
pop
sub
adc
lock
push
lret
jnp
lcall
cmp
dec
dec
fucomip
sbb
stc
add
dec
fcmovbe
movsl
js
ret
int
push
loopne
stc
scas
lods
clc
adc
daa
lret
or
icebp
fisubs
lahf
inc
movb
pop
es
push
adcb
and
xrelease
jne
loopne
insl
push
xchg
test
cmp
nop
popf
sub
addr16
int
push
jmp
add
lahf
jmp
xchg
dec
imull
sub
jns
add
add
and
inc
leave
mov
xchg
iret
adc
ja
adc
cmc
loope
in
mov
mov
and
mov
test
sti
add
pusha
mov
jno
push
mov
jge
adc
sbb
daa
mov
jmp
aad
push
popl
and
pop
sub
int3
xlat
adc
das
dec
dec
mov
cmp
adc
pop
dec
ja
cmp
cmc
inc
inc
pusha
xor
mov
xor
lahf
sbb
xchg
pop
and
in
ret
inc
repnz
dec
push
xchg
roll
sbb
xchg
into
jne
push
in
add
int
imul
mov
mov
rcr
filds
ljmp
and
push
push
mov
cmp
or
mov
test
inc
mov
pop
sub
repz
pop
cli
sub
sub
pop
in
jbe
mov
mov
dec
aaa
inc
push
fcompl
les
or
ret
test
pop
pop
and
gs
rcrb
add
aam
ljmp
imul
loope
inc
ret
mov
pop
dec
xchg
loopne
jp
dec
push
push
xchg
mov
cltd
sub
fildll
mov
xchg
fwait
out
lea
cmp
hlt
stos
jmp
loopne
sub
jns
out
mov
inc
ret
test
les
dec
and
push
data16
cltd
xor
stc
test
fnstenv
mov
inc
ret
lods
mov
xchg
push
or
aas
sbb
pop
jg
addr16
mov
sbb
shll
push
cltd
les
or
dec
pop
cltd
movsb
mov
jle
pop
movsl
mov
and
or
test
imul
push
sbb
jmp
aad
test
sub
mov
stc
imul
outsb
jb
aad
or
in
movsl
jae
test
int3
xor
call
cwtl
shrb
inc
inc
inc
movsb
in
das
imul
xchg
sub
and
sub
lea
jae
.byte
xchg
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
adc
mov
cmpb
jnp
or
add
push
inc
sub
scas
dec
fsub
pop
mov
add
mov
push
mov
pop
push
pop
pushl
adc
pop
mov
add
mov
sub
mov
sub
sbb
push
mov
popl
mov
mov
sub
mov
cmp
jne
or
jmp
div
fs
xchg
mov
jmp
test
or
add
addl
jle
sub
enter
jmp
mov
pushl
and
dec
fsubrl
test
or
mov
aaa
cmpsb
stos
test
cmp
imul
add
js
adc
xchg
lods
dec
aas
add
das
xor
add
icebp
pop
repnz
add
adc
bound
aas
data16
pop
gs
leave
lret
insl
shrb
push
test
mov
dec
jl
push
dec
jle
inc
mov
mov
xchg
ret
fldl
adc
inc
into
cld
sbb
ja
or
mov
stos
pusha
sbb
pop
gs
pusha
cmova
cli
xchg
pop
mov
inc
inc
popa
js
mov
sbb
xchg
cmc
loop
mov
push
adc
aaa
mov
sahf
ret
dec
xlat
test
test
add
mov
cltd
xor
mov
ret
imul
push
outsb
sbb
subl
push
psllw
jge
mov
mov
lods
mov
inc
cs
adc
mov
nop
sti
adcl
sbb
add
mov
orb
mov
stos
xor
lahf
pop
loopne
mov
arpl
int3
jae
insb
sti
sub
and
rcr
adc
pop
in
imul
lcall
repz
cwtl
inc
pop
pop
ret
loop
xor
icebp
int3
lahf
mov
push
fnstenv
mov
scas
or
add
jle
ret
in
test
inc
sub
ja
loope
xchg
aam
mov
pop
outsb
lods
rcll
addr16
dec
xor
aaa
mov
rcrl
cmpsb
cltd
rcll
ret
mov
push
inc
inc
movsb
call
inc
inc
movsl
repz
shrl
flds
out
aaa
rcr
and
insl
xchg
mov
ret
ja
sbb
fdivrs
inc
inc
outsl
mov
ret
jmp
mov
imul
arpl
in
call
sti
pop
jg
aam
xchg
xchg
dec
push
insl
lods
push
sbb
popa
inc
and
inc
or
loopne
fwait
push
loopne
dec
adc
xchg
aam
inc
xorb
aas
insl
in
jae
mov
leave
sub
pop
jmp
clc
jb
movsb
xor
cmpsl
pushf
pop
jmp
nop
sbb
mov
or
dec
sub
pop
jmp
clc
pop
dec
cmpsl
pushf
pop
jmp
nop
sbb
sub
push
jmp
or
push
push
movsl
jg
dec
lods
inc
mov
movsb
jns
ljmp
in
int3
or
push
pop
pop
cwtl
dec
movsb
dec
or
inc
sti
aas
sbb
or
popa
mov
jg
aas
or
data16
or
repz
or
in
fiaddl
push
je
fsts
aas
cwtl
hlt
ljmp
pop
jmp
pop
stos
rolb
jmp
dec
mov
ljmp
push
ljmp
fcompl
inc
or
push
jmp
jno
mov
fildll
adc
lret
jne
fstl
aas
xchg
pop
jbe
adc
cltd
out
int3
xchg
imul
aas
or
cltd
repnz
out
aas
or
inc
or
loope
or
push
jmp
add
roll
sbb
pop
cwtl
mov
pop
push
adc
mov
mov
push
xor
dec
in
xor
xor
fsts
aas
pop
loop
adc
push
jmp
cwtl
outsl
in
sbb
push
je
cwtl
inc
or
loope
sub
push
jmp
push
pop
dec
sahf
cwtl
popf
out
inc
aam
outsl
pop
orps
lret
jne
aam
jmp
xchg
cltd
test
arpl
aas
or
push
push
inc
fs
dec
adc
ljmp
dec
out
aas
or
push
scas
inc
or
push
jmp
cwtl
inc
dec
xchg
cwtl
int3
repnz
out
loope
test
lret
out
leave
and
adc
push
stos
inc
out
leave
and
inc
or
pop
jne
push
push
mov
xchg
sub
decl
sub
xchg
insl
xor
imul
adc
push
pop
inc
fs
adc
jb
push
inc
mov
push
push
jmp
movaps
xchg
insl
xor
imul
adc
lret
adc
push
push
jmp
movaps
xchg
insl
xor
imul
addb
add
fbstp
mov
rcrl
into
ss
adc
aas
or
loopne
xchg
sub
or
sub
xchg
insl
xor
enter
shr
aas
xorb
adc
mov
xchg
inc
lret
add
fidivl
mov
rcrl
push
ljmp
sbb
xchg
cwtl
dec
push
xor
sti
dec
sub
push
ljmp
push
roll
imul
cwtl
dec
push
xor
sti
dec
sub
push
ljmp
aam
mov
or
fwait
push
xor
ds
push
sbb
push
jmp
mov
dec
leave
xchg
dec
out
aas
or
pop
sub
leave
stos
arpl
aas
or
push
jmp
lret
aas
or
shr
aas
or
push
xchg
ret
rcrb
jnp
lret
aam
shlb
jmp
cwtl
mov
sbb
sbb
push
stos
mov
aam
out
ret
sub
mov
aam
pop
jnp
or
pop
out
mov
pop
mov
push
pop
mov
pop
jnp
mov
xor
pop
push
aas
es
dec
fiadds
inc
mov
xor
dec
daa
mov
jl
xor
xchg
xchg
movq
aas
inc
pop
push
andl
or
push
jmp
or
push
jmp
or
push
jmp
or
pop
jmp
ficomps
push
pop
jmp
dec
pop
jmp
or
push
sub
xchg
sub
xor
test
mov
aas
or
push
jmp
or
push
jmp
bound
jno
sbb
xor
aaa
in
adcl
cmp
lea
pusha
ds
inc
mov
mov
in
repz
xchg
test
cwtl
or
rcrb
mov
jo
sbb
out
stos
daa
jmp
testb
xchg
pop
inc
or
arpl
divl
insb
and
push
test
imull
jp
mov
imul
add
aas
inc
enter
push
inc
push
insb
decl
popa
imul
jp
out
in
adc
out
fnstenv
inc
popf
cmp
push
inc
xchg
add
frstor
sbb
lds
mov
and
jmp
mov
fisubrs
fiaddl
imul
sbb
insb
add
setb
call
xor
xchg
rcrb
es
adc
lods
sub
adc
pop
neg
dec
sub
pushf
cmpsl
cwtl
mov
dec
lret
testb
imul
sbb
psrld
stos
cmp
or
addr16
push
inc
mov
pop
aad
divb
lret
and
sub
test
outsl
xchg
mov
mov
jmp
data16
pop
es
or
int
pop
cmp
or
adc
fwait
mov
fdivr
sub
inc
imul
or
frstor
imul
dec
clc
test
pop
rolb
fs
outsl
fiaddl
adc
or
jne
xchg
mov
adc
cmp
cmp
es
dec
aas
pusha
shll
sbb
push
xor
sbb
pop
cli
divl
sbb
jns
in
jnp
or
jl
aas
jne
mov
rcll
sbb
mov
adc
mov
xchg
xchg
out
sub
add
cwtl
and
fs
mov
outsl
mov
sbb
cmp
mov
push
inc
mov
or
cs
enter
into
cmp
cwtl
jb
jns
cmp
mov
popa
inc
inc
cmc
fdivs
stos
pop
faddl
cmp
mov
jns
or
mov
cltd
lods
rcl
int
and
call
adc
addr16
xchg
mov
sub
call
xchg
inc
rcl
jne
push
xlat
js
and
inc
add
dec
push
lret
push
add
imul
or
ss
sbb
loop
int3
and
int
mov
js
ljmp
add
and
add
add
add
jo
add
jo
add
add
addb
add
add
add
add
int3
push
add
int3
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
int3
push
add
lret
push
add
int3
push
add
int3
push
add
int3
push
add
int3
push
add
int3
push
add
int
add
int3
push
add
int
add
gs
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
int
add
add
add
add
xor
push
add
add
add
push
add
add
add
add
je
gs
je
jo
imul
add
gs
insb
inc
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
and
adc
add
add
call
add
adc
add
add
add
add
add
add
inc
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
in
add
or
add
add
add
inc
repnz
adc
mov
sbb
cmp
lods
mov
hlt
cltd
jl
leave
addr16
inc
popf
add
in
cmpsl
std
push
cmp
adc
sti
hlt
adc
sub
sbb
cs
pushf
ss
jne
mov
xor
sbb
in
add
pop
adc
mov
mov
fisttpll
dec
test
jbe
popa
call
imulb
mov
iret
outsl
icebp
xchg
testl
jl
cmc
dec
js
aad
pop
jnp
std
mov
in
sbb
xor
inc
mov
mov
pop
scas
inc
mov
mov
stc
mov
daa
into
scas
mov
mov
imull
mov
xchg
mov
xchg
sbb
nop
fisttpll
jbe
in
and
jle
call
xchg
pop
cmp
lds
adc
or
push
dec
mov
pop
sbb
movsl
push
pop
jecxz
clc
imul
ljmp
ljmp
enter
jmp
lock
and
jmp
mov
loop
sbb
jne
scas
lds
cmp
push
sbb
out
mov
lea
addb
aam
setb
push
in
sbb
lahf
pop
enter
je
jb
shr
sub
inc
andb
pop
outsb
mov
mov
jge
jns
nop
push
fwait
test
lea
xor
call
cmp
nop
dec
cli
mov
push
xor
dec
inc
jmp
dec
insl
sub
ss
test
pop
sbb
sar
cs
clc
lock
fs
into
mov
lods
shll
sbb
adc
mov
aad
mov
xchg
xchg
pop
mov
push
sbb
mulb
pop
das
inc
and
stc
sub
inc
sub
hlt
mov
repnz
sarb
pusha
xchg
pop
inc
add
jnp
jbe
repnz
pop
mov
cmpsl
lods
in
and
mov
or
push
mov
fstps
and
adc
sti
add
jl
mov
or
push
pop
jns
mov
cmpsl
loopne
mov
ret
lea
add
bnd
ret
and
sbb
mov
cli
arpl
mov
test
adc
sub
sbb
and
jnp
adc
push
or
les
cmpsb
pop
inc
mov
xchg
test
clc
xor
cmp
out
inc
push
popf
xchg
add
maskmovq
negl
push
insl
xchg
pop
mov
push
sbb
fwait
out
pop
mov
xchg
jo
jns,pn
ja
cmpsb
xor
clc
sbb
dec
je
cmpl
sbb
dec
mov
mov
out
shlb
in
sbb
or
shlb
push
xchg
pushf
cli
call
push
daa
pop
outsb
push
add
das
add
rclb
adc
loopne
push
cmpsl
bound
sub
leave
pop
xlat
xor
decl
mov
icebp
insl
jge
lret
xor
dec
pop
loop
mov
jge
push
cmpb
push
add
or
mov
cmpsb
fs
pop
push
test
stos
pop
rcrb
push
fwait
adc
and
or
movsb
popa
and
lea
insb
scas
loop
mov
adc
stos
pushf
jae
ret
push
adc
pop
jg
cmpsl
movsb
mov
add
xchg
mov
popa
and
lcall
cli
aam
rcll
loope
mov
test
arpl
mov
imul
in
imul
sbb
pop
push
insb
sahf
cmp
test
dec
push
loop
xchg
cmpsb
outsb
and
inc
inc
mov
mov
and
leave
fisubrl
dec
or
cmp
repz
jb
push
sub
pop
inc
adc
push
imul
xchg
fmull
repnz
push
and
test
dec
sbb
push
inc
cmp
scas
mov
fwait
adc
in
fs
in
mov
sub
aas
mov
popa
clc
sahf
lret
cmp
outsl
sub
rcrl
nop
adc
jo
push
push
das
mov
pop
fidivrl
mov
cmp
test
jne
ret
jmp
sti
imul
fnsave
hlt
addl
imul
popf
sbb
lret
or
popa
pop
jns
cs
mov
or
lahf
sub
sti
mov
inc
mov
ret
or
mov
jae
add
repnz
js
jns
stc
and
pop
xor
xchg
push
cmp
leave
pop
jno
ret
arpl
sub
dec
sub
icebp
inc
inc
and
mov
ss
adc
sahf
or
iret
enter
sub
xor
test
pop
outsl
rcr
pop
rcll
push
push
repz
xchg
mov
test
sbb
notl
and
movsb
xchg
aaa
and
paddw
arpl
push
xchg
sbb
outsb
cwtl
imul
mov
stos
rorb
mov
sbb
mov
jmp
or
and
xor
ljmp
neg
fidivs
add
or
jle
shll
pop
and
jnp
pop
dec
adc
cwtl
imul
lods
sub
rolb
scas
repz
scas
in
popf
sub
jg
arpl
or
or
inc
in
stos
les
mov
push
leave
lcall
and
and
add
add
mov
inc
cwtl
xlat
pop
push
pusha
lock
mov
in
jp
xchg
enter
xchg
imul
cmp
jge
mov
adc
lcall
cmpb
lret
fcomps
pop
aaa
call
jl
inc
repnz
dec
cltd
iret
pop
notl
mov
jp
pop
cmp
mov
daa
mov
and
insb
jmp
sub
xor
or
lods
shrb
push
jbe
mov
xchg
movsb
jge
gs
cmp
push
pop
insb
sub
popf
aaa
mov
negl
ljmp
push
jecxz
push
shr
call
mov
add
movq
bound
mov
add
dec
inc
fwait
inc
mov
sbb
daa
mov
pusha
and
xor
into
mov
mov
cli
dec
jne
mov
fsub
jns
adc
jg
sub
sbb
pop
sbb
mov
cmp
push
cmp
inc
lret
sbb
ljmp
rcr
dec
jmp
sarb
mov
xchg
popf
test
cmp
mov
inc
sub
mov
dec
push
mov
test
cmp
cmp
jmp
fstl
test
xor
inc
imul
sbb
and
cmp
por
mov
adc
bound
out
arpl
mov
test
imul
mov
mov
ret
cld
fcoms
rorb
xlat
jmp
cmpsl
adc
xchg
jmp
push
call
fcmovnbe
sub
pop
int3
cmp
inc
xchg
inc
arpl
aaa
stc
fwait
scas
xchg
shl
jae
fidivrs
adc
stc
in
mov
jnp
or
xchg
adc
sbb
and
push
jl
cwtl
sub
idivl
aad
sbb
and
jp
push
insb
xchg
mov
xor
in
stos
add
push
push
add
out
lret
push
out
push
xchg
arpl
and
pop
out
mov
jmp
pop
push
mov
jge
mov
int
in
cmpsl
or
fmuls
xchg
add
sub
xor
int3
je
mov
test
xor
push
movsl
insl
outsb
rol
dec
cltd
pop
xchg
push
out
dec
lds
shrl
icebp
mov
sarb
movsl
outsl
pop
ljmp
pop
loopne
leave
sub
ficomps
popf
mov
stos
sbb
mul
push
ficoms
pop
xchg
mov
mov
jmp
lcall
test
inc
in
call
push
cmpsb
sbb
or
xchg
mov
rcrl
mov
ljmp
xchg
fsubr
push
enter
jns
jecxz
imul
mov
stos
ljmp
xor
mov
mov
flds
cmp
pop
mov
pop
xchg
or
xchg
and
mov
and
push
arpl
cwtl
lea
inc
popf
sahf
inc
mov
and
or
inc
jo
mov
mov
jmp
xchg
in
cmovl
mov
repz
and
dec
mov
add
pop
loop
push
inc
mov
cmpsb
or
lods
movsb
lret
sbb
outsb
xchg
xor
pop
cli
shll
xor
sahf
fcoms
mov
adc
lret
mov
inc
rcll
shlb
dec
pop
dec
cmpsb
lahf
je
pop
dec
push
ljmp
or
pop
xchg
push
dec
pop
sbb
mov
pop
divl
mov
jnp
aas
imul
pushf
xchg
xchg
shrb
sahf
push
fistl
lcall
data16
std
movsl
adc
jbe
xchg
or
in
xchg
sbb
inc
imull
jmp
mov
sbbl
and
mov
addr16
hlt
mov
adc
test
mov
ja
sbb
sahf
dec
and
push
fldt
push
loop
insl
push
mov
js
fnstsw
and
cwtl
mov
adc
cmpl
lods
scas
pop
aad
jle
pushf
cmp
das
or
loop
std
jle
aas
xchg
inc
jo
rcl
enter
adc
inc
jg
js
xor
lea
andl
mov
and
mov
mov
mov
fcmovnb
popa
mov
mov
inc
stos
cmp
cltd
sub
add
jno
mov
shlb
jae
xor
mov
jle
test
xor
or
lahf
mov
pop
stos
je
push
test
xor
jge
adc
dec
repnz
sbb
xchg
dec
mov
outsl
and
push
mov
mov
mov
loope
cld
inc
push
inc
arpl
sub
lahf
iret
push
hlt
jl
inc
fwait
cmp
mov
aaa
lock
cld
cld
int
movsl
arpl
jne
out
andb
int3
sub
push
dec
cs
stos
xor
cmp
jmp
popa
jo
into
mov
sbb
js
jmp
and
jns
sub
cltd
nop
nop
pop
stos
lods
std
repnz
mull
sbb
ja
aas
mov
cmpsb
inc
in
jo
out
out
repnz
mov
addr16
pop
mov
mov
push
sti
aaa
loopne
es
clc
ret
frstor
xor
mov
mov
in
pushf
subb
jecxz
add
mov
xor
fstpt
or
dec
xchg
mov
fidivrs
and
jo
icebp
movsb
xor
call
dec
rclb
sbb
pop
pusha
call
popf
outsl
jnp
mov
lods
cltd
out
shrb
aaa
sub
cmpsb
insb
hlt
mov
lret
sbb
jp
sub
data16
mov
in
shlb
gs
lods
or
call
shl
cmp
xchg
adc
inc
sub
outsl
in
xchg
or
ret
out
cmp
xor
decl
cmpsl
pop
lods
pop
popw
faddl
jne
shrb
mov
jns
outsb
ljmpw
sbb
push
sub
aam
je
xor
push
cwtl
stos
sub
push
shll
add
stos
jecxz
scas
dec
and
loopne
lods
testb
pop
push
mov
xchg
jmp
jae
push
push
cmp
xchg
mov
rclb
and
push
push
and
imul
popf
std
sbb
mov
stc
push
push
jne
test
test
sti
xor
cmp
cltd
lock
jnp
sub
clc
fisubrl
adc
movhps
sub
xor
sub
mov
xchg
psubw
xchg
aad
lods
push
mov
daa
or
mov
sbb
mov
sbb
movsl
lock
inc
ret
ds
or
jne
dec
inc
movq
sbbl
pop
imul
adc
in
ja
jb
fcomip
mov
dec
repz
sahf
fidivl
aaa
inc
sub
pop
jno
std
fwait
jle
push
inc
pop
lahf
test
push
testl
mov
inc
adc
mov
mov
imul
mov
mov
sbb
sub
pop
and
mov
mov
sti
test
inc
or
mov
jge
adcb
mov
lret
sub
mov
cmpsl
bound
push
arpl
stc
dec
mov
imul
sub
jp
xor
or
inc
jg
test
jmp
mov
sub
hlt
and
push
dec
cmpb
push
push
xchg
out
pop
cmp
shlb
loope
nop
sbbb
arpl
jae
xchg
inc
insb
inc
aas
ret
and
sarl
fcomps
cwtl
inc
fistps
cmp
lock
dec
test
sbb
jne
xlat
mov
add
in
icebp
mov
pop
inc
mov
lods
addr16
out
cmp
out
ljmp
push
adc
xor
xor
pop
push
adc
ljmp
cmp
lret
icebp
and
push
jg
dec
daa
iret
jae
mov
ror
xchg
pop
sub
sahf
movsl
push
sbb
in
movsb
imul
add
jle
dec
out
add
add
lock
sahf
inc
push
sbb
sbb
mov
mov
dec
mov
hlt
mov
in
mov
cmpsl
xchg
xlat
jecxz
adc
and
sahf
sarb
xchg
add
cmpsb
outsl
pop
jmp
pop
inc
mov
xor
mov
data16
adc
call
cltd
jnp
xlat
push
lret
in
xchg
push
xchg
dec
sbb
and
daa
ljmp
imul
cs
or
ror
mov
clc
shl
add
dec
and
imul
lahf
pop
push
mov
mov
mov
lods
daa
es
test
mov
or
ret
sub
insl
fidivs
mull
rorb
cmp
imul
mov
fcmovnbe
jns
bound
mov
sub
pushf
and
xor
scas
mov
std
adc
add
cmpsl
sbb
xchg
mov
jl
ret
cmp
fldcw
popa
or
cld
ja
fidivs
xchg
ljmp
sbb
rcr
les
jecxz
lret
pop
jmp
je
cmp
add
xchg
mov
clc
fwait
dec
add
addr16
inc
leave
sub
xor
cmpsl
xor
loopne
movl
sub
sarl
xor
adc
roll
call
mov
xor
xor
in
sub
inc
adcb
add
inc
jle
cmp
stos
pop
call
shll
pop
or
jp
sbb
mov
popf
and
faddl
nop
pop
pop
pop
mov
js
testw
mov
iret
mov
repz
sti
pop
outsb
mov
jmp
iret
jne
sahf
mov
add
pmuludq
adc
mov
jns
sub
fmulp
aad
imul
js
pop
std
xlat
xor
aad
xchg
xor
add
jbe
xchg
jle
popa
sbb
sbb
ss
xor
sbbl
inc
push
lret
mov
push
es
xchg
mov
shr
test
mov
clc
push
jbe
roll
dec
fidivl
movsb
lahf
or
push
testl
rcrb
cmp
pop
dec
call
leave
add
xor
jo
push
orb
adc
scas
in
ja
mov
sub
adc
mov
cmp
and
ja
loop
into
aaa
jl
arpl
xor
push
push
rolb
cltd
jge
mov
int3
mov
jmp
push
addr16
and
std
scas
push
popf
dec
mov
pop
aad
adc
out
into
push
shlb
sbb
mov
add
mov
push
and
cmp
xor
sti
sbb
mov
mov
add
stos
jg
rorl
ret
out
punpckhdq
arpl
push
movsl
or
ds
lret
pop
test
lret
and
mov
pop
mov
or
push
cld
push
jmp
fmuls
pop
mov
sbb
push
add
stos
cmp
aam
ret
lds
scas
mov
and
cmp
pusha
or
dec
lods
and
mov
lods
mov
rcrb
das
leave
sub
ffreep
insb
call
sub
pusha
mov
stos
hlt
mov
pop
inc
fsubp
mov
jnp
xchg
fdivs
pop
filds
gs
mov
pop
addl
xchg
mov
outsb
jnp
xchg
into
outsb
repz
inc
push
add
loope
add
sbb
sub
xor
jae
add
out
jg
jbe
push
iret
sbb
dec
xor
rolb
pop
test
pop
lret
adc
cmp
mov
arpl
mov
jb
mov
push
add
cld
fcompl
sbb
xchg
mov
out
stos
xchg
es
mov
jne
cmc
and
sub
xchg
out
xchg
data16
faddl
jae
test
sbb
iret
int
cs
xor
mov
push
mov
scas
xchg
mov
inc
shll
call
cmc
dec
scas
mov
daa
das
out
pop
inc
add
add
push
in
in
push
pop
jle
pop
loop
pushl
jnp
outsl
mov
push
pusha
data16
pop
movsl
jecxz
out
mov
iret
call
sahf
in
loope
gs
sbb
sbb
ljmp
popa
std
sarb
stos
out
outsb
test
mov
loop
inc
dec
shll
cld
push
push
shrb
sbb
ja
loopne
movsb
inc
fwait
dec
cld
pop
pop
adc
or
outsb
pushf
push
pop
jne
or
pop
push
cmpsb
je
push
mov
jae
int3
dec
sbb
fidivrs
fucom
test
or
jae
aaa
ret
jmp
repnz
xchg
jl
xchg
lods
jbe
xorl
ss
pop
insl
imul
cmp
stos
ret
cmc
loopne
stos
xchg
pop
mov
cmp
add
arpl
rclb
fstpt
dec
aaa
mov
in
adc
adc
xchg
and
aad
dec
push
adc
adc
cmp
cltd
fs
les
inc
xor
fistpll
mov
test
in
xor
aas
nop
pop
ret
sbb
sbbb
mov
dec
pop
ja
adc
das
outsl
idivb
shlb
into
movsl
int3
push
mov
cmpsl
in
cmp
les
cmp
pop
sbb
movsb
or
popf
dec
cmp
mov
sahf
dec
lock
push
sub
jmp
jns
push
mov
jg
push
and
mov
lcall
loope
adc
jns
xor
das
int3
mov
iret
cli
insl
mov
add
adc
pushf
cmp
mov
outsb
iret
inc
sub
adc
incl
xchg
adc
add
enter
push
fisttpl
mov
icebp
dec
xchg
ljmp
je
push
sub
or
and
fstpt
dec
mov
mov
imul
aad
movsb
leave
cmp
dec
lods
jae
adc
mov
cmp
adc
movsb
lahf
sbb
insl
mov
mov
lcall
inc
mov
iret
mov
mov
mov
data16
or
cld
jae
sbb
popf
dec
pop
psubusb
and
sti
mov
rolb
into
into
arpl
jne
scas
inc
xor
mov
push
mov
fdivl
pusha
ret
movsl
ret
cmc
test
push
sub
cld
enter
mov
mov
je
xor
repnz
sub
jb
or
inc
and
js
lcall
add
jle
mov
mov
or
cltd
sbb
ret
aad
das
xchg
inc
mov
sahf
data16
push
pop
mov
cltd
ss
fstpl
inc
dec
and
jecxz
insl
or
mov
push
mov
dec
out
xor
leave
test
stos
out
pop
dec
andb
into
repnz
and
into
xchg
lcall
andb
jge
inc
lods
jns
les
jo
push
rcl
das
in
inc
mov
aas
xchg
es
out
cmp
orl
dec
pop
movsb
mov
adcb
xchg
iret
jns
mov
sahf
jb
sbb
jge
cltd
addl
mov
imul
sahf
mov
adc
pop
je
sarl
je
cmp
push
dec
in
mov
sub
aad
dec
ficoms
iret
mov
inc
and
xchg
dec
mov
inc
jo
push
pop
or
jmp
test
mov
xchg
inc
add
ficoms
pop
sar
pop
jmp
shll
xchg
cltd
dec
jo
mov
repz
add
jno
mov
sbb
xor
movsb
rorl
jb
hlt
or
and
mov
dec
rep
adc
pusha
incl
mov
dec
jg
jae
nop
clc
ja
xor
dec
xchg
fwait
shr
xchg
out
into
adc
xor
xchg
out
je
sbb
add
push
pop
hlt
lret
mov
add
and
xorl
shlb
mov
stos
loopne
and
arpl
daa
rclb
mov
fs
mov
push
lea
cmp
icebp
std
mov
xor
pop
orl
fldenv
negl
outsb
xlat
fmull
add
out
push
rolb
dec
or
repnz
fcomi
notb
fistl
jnp
sub
xchg
xchg
pop
xchg
test
test
cmp
mov
ja
iret
jge
or
insl
mov
adc
addr16
cmp
ror
mov
inc
repnz
jle
insb
lret
sbbl
mov
fcompl
and
sub
daa
shl
leave
hlt
out
mov
sbb
jno
add
xchg
push
iret
in
test
cmp
je
inc
aaa
pushf
popf
cmpsl
add
idivb
dec
call
in
test
dec
adc
jg
jmp
scas
mov
push
xor
in
adc
sbb
jecxz
jg
cmp
mov
testl
cmp
arpl
icebp
loopne
iret
std
adc
xor
pop
cwtl
sti
maskmovq
divl
popa
stos
in
lea
inc
sub
subb
and
xchg
je
jmp
pop
sahf
bound
mov
out
call
push
fdivl
es
sbb
push
mov
push
test
lahf
jg
mov
aaa
call
ja
cwtl
push
cmp
dec
jmp
das
jnp
mov
mov
pop
inc
rorl
add
mov
cmpsb
imul
xor
in
xor
add
jge
add
fsubr
aas
mov
pop
test
out
aas
bound
adc
sub
jl
mov
xorb
out
mov
push
lret
lahf
outsb
movsb
test
daa
pop
cmp
loope
push
xchg
mov
sub
movsl
xchg
shlb
imul
shl
pop
inc
fsubrs
sub
pop
fadd
fsubrp
mov
hlt
pop
jo
lock
lret
clc
fiaddl
in
insl
in
mov
sahf
test
outsb
sbb
mov
int3
aaa
fldenv
jnp
pop
adc
add
sub
popf
push
push
mov
arpl
dec
sbb
mov
cli
fwait
jne
dec
mov
xlat
add
sbb
push
jne
jl
and
mov
add
cmpsl
and
fildl
fdivrl
frstor
fisubrl
test
sbb
decb
aas
outsb
mov
ss
pop
enter
or
cmp
cmp
push
sbb
shl
pop
push
lock
in
xor
jmp
add
mov
inc
fwait
cmpsb
imul
mov
sub
xorl
bound
push
adc
mov
push
lds
dec
gs
push
in
cwtl
jo
mov
scas
xchg
jbe
in
pop
jmp
pop
cli
push
xchg
daa
fdivrp
popf
mov
cmp
push
call
sub
mov
sbb
popa
xor
clc
mov
mov
adc
jg
rorl
lea
inc
sub
jnp
push
pop
mov
shll
dec
data16
loope
xorb
mov
lea
sbb
mov
lret
cmp
dec
stc
cmpsb
mov
enter
mov
aad
inc
xor
pop
sar
or
lea
mov
cld
add
daa
pop
cmp
das
aaa
int
nop
movsl
dec
ret
subb
xchg
inc
jns
out
inc
push
jno
xchg
and
inc
outsl
mov
and
in
sahf
lret
dec
dec
sbb
pop
sbb
cli
dec
jp
dec
inc
mov
enter
sub
movsl
mov
lret
sub
or
or
mov
push
rorb
aam
scas
ret
add
out
adc
addb
arpl
xchg
adc
popf
repz
inc
fdivrp
flds
test
dec
pop
rcrl
cmp
mov
fidivrs
adc
lahf
mov
xchg
jb
incb
rclb
daa
in
add
add
cmpsb
sahf
cltd
dec
fbld
jmp
fdivrs
push
imul
mov
sub
add
loop
mov
popf
xor
scas
mov
mov
pop
mov
loope
les
stc
push
sbb
or
inc
add
mov
roll
lea
adc
or
add
cmp
adc
xlat
cwtl
fld
or
dec
test
or
add
add
gs
lock
jb
test
js
popa
out
sbb
ss
ja
push
sbb
movl
mov
call
fiadds
scas
in
mov
jecxz
rol
fiadds
sbb
mov
aaa
aad
stos
xchg
sub
xchg
jmp
arpl
push
cwtl
cmpsb
ss
xor
push
icebp
xchg
fistpl
xor
mov
mov
mov
aas
test
shrb
sti
mov
and
addl
in
lcall
scas
pop
out
cld
daa
outsl
jb
and
call
and
subl
add
cltd
movsb
xchg
inc
jnp
jno
or
outsl
loop
push
push
bound
cld
fstpt
iret
data16
dec
mov
sub
sbb
mov
loop
sub
sub
push
out
or
jnp
mov
lret
nop
xor
xchg
shrl
cmp
test
inc
lahf
and
jp
lea
js
xchg
enter
sub
jbe
push
add
adc
dec
and
dec
dec
fwait
mov
or
ficoml
xlat
mov
or
lods
les
dec
adc
popf
and
out
jl
lods
jo
adc
repz
imull
lods
stos
push
xor
xor
or
nop
adc
mov
data16
movsl
jecxz
mov
mov
jl
adc
mov
sub
mov
test
inc
mov
popa
sbb
ljmp
adc
mov
and
outsl
cmp
adc
into
test
sbb
scas
cmp
sub
ja
mov
xor
push
inc
and
test
xchg
and
and
jg
lcall
inc
pop
popf
mov
mov
xlat
loop
mov
push
jae
iret
mov
inc
lock
pop
pusha
testb
mov
es
push
inc
cmpsb
or
and
add
pop
adc
imul
xchg
inc
pop
jecxz
adc
adcb
xchg
clc
jecxz
mov
cwtl
pop
imul
sub
pushf
cmp
inc
stc
jo
adc
es
das
flds
dec
roll
into
cmp
ds
in
cs
push
dec
loope
cmpsb
rcrb
imul
mov
lret
mov
sar
and
mov
inc
cmp
cli
stos
dec
int
xor
dec
xor
xchg
cmc
decb
int
fistpll
adc
push
pop
imul
rorb
add
fxch
fstl
pop
dec
test
sbb
jle
xchg
aaa
fsubl
pop
push
cmpsl
jbe
pop
xchg
jae
jno
cmp
mov
lock
arpl
and
adc
add
xchg
push
shlb
outsb
mov
mov
push
das
stos
xchg
xchg
mov
or
inc
cmpsb
or
cmpsb
ds
bound
js
sbb
lods
xchg
jmp
dec
adc
push
cmp
add
jl
push
adc
or
scas
and
lds
sarb
js
or
cmp
push
mov
andl
jecxz
adc
arpl
pop
stc
jb
pushf
loopne
imul
cmpb
fidivrs
das
mov
xor
into
cmp
mov
and
popa
cmp
push
lcall
test
jle
nop
dec
hlt
add
and
mov
sbb
jae
test
movsb
mov
pop
sti
aas
mov
sub
mov
das
int3
in
mov
adc
or
icebp
xlat
pop
jp,pn
pop
xchg
xchg
mov
dec
jno
or
add
iret
cmp
pop
pop
jnp
lea
lret
in
xchg
lods
movsl
loop
and
mov
mov
cmpsb
xchg
mov
scas
push
repz
push
aas
mov
pop
sbb
pop
stos
les
mov
insb
arpl
jg
push
shlb
push
gs
inc
or
les
mov
insb
lds
pop
jnp
daa
cli
xor
pop
shrl
xchg
out
ficoms
arpl
push
mov
jo
xchg
xlat
in
sbb
mov
mov
mov
leave
lahf
mov
gs
jecxz
mov
jbe
int
scas
mov
aad
aad
jae
pop
ret
cmpsb
sub
mov
mov
jae
pop
adc
aaa
inc
sti
lds
rclb
xlat
jnp
add
push
push
sarl
jne
push
bound
push
cltd
inc
cmp
int
and
fcomps
pop
inc
jecxz
xor
sbb
pop
jne
sbb
sbb
xor
outsl
jo
jp
cmc
xor
scas
lahf
push
shll
xor
cmp
push
js
mov
push
lret
in
jle
inc
push
sbb
cmp
jl
in
sarb
ds
xchg
mov
xor
mov
sahf
movsl
imull
xchg
mov
leave
movsb
testl
pop
insb
inc
cmpsl
jb
fists
mov
jb
sub
lret
pop
iret
das
imul
lds
enter
leave
sbb
out
xchg
inc
std
fcoms
loopne
roll
rorl
repnz
push
pavgw
dec
fisttpll
or
push
lods
and
loopne
mov
insl
gs
xchg
rorb
jmp
adc
jae
xlat
sbb
mov
rcrb
sbb
dec
pop
xchg
fdivs
hlt
jg
xchg
insl
aaa
add
add
movsb
mov
dec
test
daa
je
fimuls
je
cmpsb
and
ljmp
or
adc
out
loope
mov
ret
mov
inc
mov
pop
icebp
mov
jno
push
mov
jae
jnp
movsb
lea
mov
jl
jbe
insl
frstor
add
cld
fistpl
mov
jae
pop
in
inc
repz
mov
adc
movsl
mov
into
pop
sub
xor
xor
loop
or
sbb
cmpsw
addl
notl
inc
pop
cmpsl
sbb
rorl
jo
add
mov
mov
and
fadds
mov
xchg
jmp
test
dec
je
jo
and
cs
enter
and
and
scas
pop
cltd
ret
gs
vcvttss2si
push
sub
dec
das
shll
jnp
test
mov
mov
mov
xor
pop
loop
scas
xchg
and
out
out
sub
or
subl
sub
xchg
es
loope
incl
jg
xor
push
and
adc
pop
push
addr16
scas
les
loopne
mov
call
and
test
xchg
dec
sahf
jo
lods
scas
aad
and
xchg
mov
mov
dec
ss
imul
jle
sbb
xor
aaa
jmp
pop
pxor
xor
lcall
int3
shll
inc
in
mov
ja
fsubrl
push
and
lret
lahf
out
popa
mov
in
push
aad
ds
mov
mov
loop
js
add
jno
jo
rcrl
shlb
inc
popl
push
rcl
pop
data16
aas
and
add
idivl
bound
out
cmp
add
loop
scas
adc
fsubs
enter
jecxz
mov
pop
mov
jl
adc
jge
imul
fwait
mov
stos
loopne
pop
push
mov
cmp
jbe
popa
inc
out
ss
add
inc
sarb
lds
call
dec
mov
dec
popa
and
dec
lods
jl
call
repz
shll
jne
and
jmp
jns
add
mov
and
push
lods
hlt
mov
and
and
out
ds
pusha
jnp
push
and
jg
pop
jmp
mov
pop
push
aaa
shll
fwait
nop
imul
sbb
das
je
mov
jb
out
stos
in
das
sbb
test
cmp
out
adc
addr16
lock
mov
pop
push
xor
dec
fisttpl
cmc
std
mov
arpl
lods
mov
mov
mov
pusha
jge
push
sbb
and
lret
and
bound
lods
adc
gs
or
das
push
xchg
in
or
xchg
sbb
scas
sub
testb
jns
jnp
or
mov
pop
cmp
rol
fbstp
dec
test
mov
outsl
xchg
pop
push
ljmp
les
mov
fldl2e
xor
push
movsb
sar
scas
dec
xchg
rcrl
pop
movl
rcl
jg
enter
mov
xchg
lods
push
lcall
pop
pop
nop
mov
push
sbb
inc
mov
out
fiaddl
stos
je
lret
movsb
inc
das
mov
mov
rclb
fimull
daa
shr
push
pop
pop
gs
clc
fstp
out
sbb
sbb
ss
push
sti
or
dec
xlat
fnstcw
and
mov
rorl
bound
sub
mov
out
mov
andl
mov
dec
inc
adc
jnp
scas
icebp
xor
mov
into
sub
call
dec
pop
mov
mov
in
push
pop
or
mov
cmp
subl
repz
adc
cmp
mov
push
imul
pop
shll
add
je
or
stos
jmp
jo
inc
sbb
jno
mov
lea
ret
gs
push
clc
jmp
pop
repz
test
divb
rdtsc
push
in
gs
mov
mov
out
sbb
dec
aad
out
insl
dec
icebp
popa
mov
insl
jo
mov
fdivs
imul
jp
push
push
jecxz
ret
pop
iret
push
mov
push
mov
push
push
jo
lcall
cmc
mov
pop
testl
mov
shlb
xchg
ja
inc
mov
pop
stos
lahf
clc
pushf
out
cli
dec
iret
ds
cmp
and
stos
sub
fcmovnbe
stos
pop
jb
les
shll
cli
outsb
mov
mov
xor
and
call
add
sub
mov
mov
imul
loope
popa
sub
sbb
sub
jp
jo
stc
pop
push
cmpsl
push
sub
inc
iret
mov
sarl
pop
les
repz
push
test
jge
dec
leave
daa
and
add
in
out
movsb
repz
aad
mov
lea
xchg
sub
repz
dec
popl
cmp
fs
mov
daa
sub
aad
jo
fcompl
push
adc
lret
jnp
mov
cltd
div
leave
push
hlt
mov
adc
stos
jnp
data16
xchg
mov
call
xor
and
sub
inc
mov
je
std
jecxz
dec
scas
push
insb
ret
out
pmaddwd
mov
dec
sbb
mov
testb
jae
and
pop
xchg
dec
mov
int
outsb
daa
and
add
clc
shlb
sahf
enter
dec
pop
xchg
mov
add
jno
jbe
insb
rcrl
or
cwtl
add
and
cmp
loope
mov
dec
sahf
mov
inc
sub
xor
fimuls
outsb
xor
jg
ret
repz
jp
jl
pop
cwtl
cmp
movsl
adc
call
mov
imul
sbb
iret
mov
dec
cmc
sbb
int
mov
xor
lods
mov
outsb
rcll
mov
sub
int
popf
aam
sarl
ss
mov
ficomps
push
inc
push
clc
cli
and
outsb
rorl
add
pop
push
or
push
jl
ret
jae
loope
and
adc
sub
jns
xchg
push
push
insl
or
xchg
pop
sub
pop
push
inc
mov
data16
movsl
cmc
xlat
das
filds
mov
adc
rorb
arpl
in
pop
in
cld
int3
push
push
or
repz
ss
movsl
jbe
push
jg
sbb
adc
xor
and
mov
xchg
sub
mov
iret
lds
inc
jecxz
or
fdivrl
or
nop
push
stc
pop
add
jns
push
xchg
arpl
jp
jae
out
out
xor
fildl
imul
add
fs
pop
xchg
sub
cmp
in
int
addr16
sbb
lods
cmp
dec
push
jecxz
push
mov
orb
scas
out
cmp
lahf
push
sbb
sub
aas
js
int3
scas
mov
scas
stc
mov
or
xorl
push
add
push
loop
sbb
pop
mov
dec
pop
xlat
sti
out
ljmp
pop
dec
repz
call
mov
dec
pusha
push
nop
test
jge
mov
jl
cmp
stos
addr16
jne
add
out
inc
mov
int
fdivrl
out
jecxz
ss
cmp
jp
mov
pop
jmp
jecxz
mov
push
mov
xchg
aas
or
imul
push
adc
xor
out
sub
std
mov
push
mov
daa
pushf
jb
stos
push
dec
push
lret
cmp
data16
out
out
push
dec
pop
and
icebp
mov
sbb
je
out
pop
bound
jecxz
push
negb
enter
or
sbb
cmp
mov
pop
not
es
pushf
sbb
push
lret
sti
push
push
sbb
jg
sarb
or
pop
cld
pop
mull
inc
lods
ret
daa
mov
adc
dec
dec
inc
or
es
mov
push
adc
cltd
das
jae
in
icebp
pop
arpl
das
sbb
cs
mov
add
add
push
add
int3
aad
sbb
cs
insl
sti
and
dec
outsb
mov
in
in
add
cwtl
or
ja
adc
adc
cmp
repz
insl
jns
addr16
sub
das
cld
daa
loope
xchg
cmp
dec
mov
dec
call
mov
dec
xor
out
jbe
pop
jmp
ljmp
xor
into
mov
les
add
xchg
movb
cmpsb
sbb
jge
repz
aam
inc
xchg
xlat
cld
js
test
mov
push
sub
jno
lods
and
and
dec
sbb
jno
rclb
inc
xchg
repnz
xor
rcl
cmpsl
jns
push
mov
fwait
dec
std
roll
adc
aad
push
icebp
clc
jnp
movsb
cmp
arpl
aam
fsubrl
add
add
dec
fcompl
pop
pop
gs
sbb
jns
ds
out
out
xor
aam
dec
xchg
aad
xor
jno
int
jge
add
lret
in
into
aam
into
mov
cli
jg
popf
dec
add
shlb
add
imul
cmpsl
mov
xor
xchg
add
fwait
mov
or
mov
lret
aam
jmp
dec
lea
inc
xor
inc
and
mov
xor
jmp
xor
setp
unpcklps
dec
push
orb
jg
adc
or
inc
loope
ret
add
aas
add
add
fsubl
mov
fs
dec
cmp
mov
push
cmp
sahf
dec
xor
mov
push
data16
aaa
pop
adc
pushl
jns
sbb
ret
mov
xor
and
xor
hlt
stc
pop
inc
pop
inc
mov
hlt
push
ret
inc
xchg
xor
jbe
cltd
jg
pop
xchg
jmp
cwtl
inc
jl
aam
sbb
outsb
xchg
xor
push
bound
mov
scas
dec
xchg
jg
and
dec
jp
stos
xchg
cmc
jmp
push
out
stc
testb
gs
lods
sbb
cmp
mov
idivb
pusha
or
xlat
jo
and
pusha
js
add
dec
outsl
and
and
sbb
sbb
mov
add
repz
dec
jae
and
sarb
in
clc
or
dec
popf
andl
aaa
fwait
pop
sarl
int
push
push
mov
popa
icebp
mov
lods
and
repnz
les
xchg
inc
adc
xchg
dec
dec
add
pop
cld
sahf
add
ds
scas
aaa
xchg
dec
lahf
in
rcll
and
and
fprem
repnz
cmpsl
inc
cmp
or
mov
cmpsl
dec
xchg
cmp
test
out
pop
sub
mov
mov
stos
push
call
pushf
cmp
jne
push
out
clc
cmp
repz
jecxz
test
std
pop
mov
xor
std
fimuls
or
inc
and
fsubl
xor
mov
sub
or
negl
aam
jno
cld
jg
fs
sbbb
sub
add
hlt
sub
fisttps
mov
jbe
sarb
mov
jp
pop
int3
jl
arpl
jecxz
add
test
imul
add
arpl
sbb
mov
or
arpl
fisubrs
das
sbb
out
mov
fisubs
popf
pushf
test
push
pop
test
fucom
push
mov
ja
or
insb
and
push
pop
scas
fcomip
jnp,pn
xorb
popf
pop
mov
dec
fidivrs
mov
out
rcll
inc
repz
pop
test
popa
pusha
jl
push
insl
sub
insb
xor
dec
adc
mov
cmp
adc
fwait
dec
jb
jbe
sub
xor
lea
xrelease
sbb
clc
add
mov
pop
xor
cld
or
vmaxpd
loop
lods
js
or
mov
sub
fmuls
jmp
in
subl
fnstsw
gs
dec
xor
popa
and
or
imul
stos
sbb
mov
pop
out
mov
ret
xlat
pop
dec
pop
lods
ja
mov
sbb
call
idivb
or
in
cmp
test
mov
cld
xchg
or
scas
sub
add
dec
push
push
jns
mov
xchg
mov
adc
xchg
push
pop
and
adc
xchg
sbb
nop
push
mul
sarl
loopne
test
pop
inc
xchg
mov
jp
sahf
inc
jns
and
adc
dec
push
ret
test
sub
es
into
sti
test
push
std
incb
stc
ror
popf
sub
xchg
aam
movsl
xchg
inc
xchg
adc
cmp
test
push
add
sahf
test
and
jl
inc
gs
rorb
out
nop
decb
jmp
add
call
xor
cmpsb
jne
aam
out
aas
and
pop
push
adc
dec
imulb
addr16
adc
test
pop
js
pop
lahf
enter
push
scas
in
xor
fisttpll
je
lret
loop
mov
cli
jle
out
scas
iret
ja
fbld
cmpl
push
repnz
jo
jmp
repnz
mov
in
add
fsubl
push
sar
cmpl
popf
adc
cmc
mov
push
scas
jmp
aad
iret
dec
mov
cmp
xor
xlat
xchg
and
xchg
push
out
xchg
pop
push
fs
fidivl
pop
cwtl
sti
mov
add
adc
cmp
stos
addr16
lahf
xor
mov
push
adc
lcall
add
std
mov
sub
int
in
cmpsl
rolb
mov
cmpsb
daa
xchg
ror
or
call
repz
sub
cld
test
xchg
jmp
ds
test
inc
inc
xchg
xchg
pop
loope
nop
jmp
int3
out
dec
sub
ja
jbe
mov
lods
mov
aam
out
jmp
jl
stos
flds
or
arpl
push
daa
dec
mov
outsl
mov
jo
inc
lods
fistpl
or
dec
ret
rorl
lret
jg
add
lret
leave
inc
mov
lods
sub
mov
mov
adc
outsb
or
into
dec
xor
push
insb
ljmp
aad
cmp
pop
rcll
ret
repz
in
mov
sbb
sub
test
xchg
nop
xchg
imul
sbb
out
pop
in
call
aam
mov
pop
push
xor
and
dec
dec
jnp
mov
adc
stc
fildll
jl
imul
sbb
data16
insb
sbb
inc
sahf
mov
rolb
jg
gs
push
add
inc
leave
mov
jp
jle
mov
dec
push
test
in
pop
mov
pop
and
jmp
clc
divl
jp
xor
aaa
lret
mov
cltd
iret
shlb
dec
popf
xchg
shrb
push
addr16
shrb
mov
inc
and
cmp
scas
loope
clc
fiaddl
mov
test
inc
xor
ja
cmpsb
insl
rolb
jecxz
andb
sub
or
ds
add
test
scas
lock
cmpb
jmp
inc
lods
sahf
add
xchg
ss
orl
sbb
and
out
push
mov
dec
movsb
add
pop
sti
mov
sbb
xor
and
push
push
cmp
repnz
repnz
push
cmpsb
pop
xor
jbe
cmp
mov
push
inc
jecxz
std
js
pop
and
pop
mov
ret
movsb
jl
jmp
or
jbe
pop
mov
jno
out
outsl
push
dec
mov
pop
mov
ret
push
jo
push
mov
in
sbbl
into
push
cmp
and
mov
sarb
imul
mov
pop
std
das
and
dec
and
je
lea
sbb
mov
popf
mov
pusha
xchg
pop
outsl
loop
test
cmp
push
mov
sbb
mov
out
cmp
or
sbb
lcall
push
or
xchg
insb
inc
mov
in
test
jne
in
pop
mov
lahf
mov
out
lcall
jg
xchg
dec
mov
mov
mov
call
call
mov
push
in
adc
cmp
fdivrl
mov
lds
cmpsl
mov
fidivrl
push
mov
mov
test
sbb
js
clc
fidivrl
imul
testl
push
out
sub
jo
mov
ljmp
iret
mov
stos
sahf
and
or
das
cmp
pop
lods
sub
push
sarb
or
mov
and
mov
mov
mov
js
fwait
pop
push
cs
lcall
xor
sbb
inc
push
jo
or
mov
and
xchg
sbb
loop
adc
jp
jecxz
dec
xchg
aad
sahf
and
mov
fwait
testb
xlat
aad
mov
mov
mov
lods
jle
aad
hlt
xor
adc
or
mov
pop
sub
inc
jne
xchg
adc
xchg
mov
popa
fmull
cli
insb
mov
cmp
jg
lea
inc
in
js
push
cmp
xchg
lds
xor
pop
pop
mov
leave
or
leave
sub
or
mov
sahf
pop
mov
loop
xchg
sub
cmp
js
sub
inc
mov
in
mov
mov
iret
xchg
ret
and
nop
outsb
aad
jne
stos
sahf
andb
inc
loop
pop
movsl
xchg
pusha
in
mov
out
cmp
push
sahf
adc
test
jae
enter
add
mov
cmc
mov
shr
or
sbb
aas
jbe
pop
call
cli
das
inc
mov
jle
push
sub
sarl
cmp
iret
cmp
xor
push
nop
scas
sub
xchg
sbb
rcr
cli
dec
dec
dec
cmpsl
cltd
aas
jnp
insl
in
ljmp
testl
fcomi
jle
jmp
imul
xchg
aad
fsubrs
inc
pop
es
cmp
mov
push
into
mov
and
inc
sti
out
cmp
inc
inc
iret
push
mov
pop
into
ds
nop
jg
adc
xor
ret
xchg
sbb
inc
dec
sbb
and
cmc
lcall
jge
fs
add
dec
adc
jb
shl
mov
cmp
jb
mov
dec
subb
loop
add
and
push
mov
roll
ret
addl
push
shl
pop
xor
mov
lahf
insb
adc
add
pop
push
xchg
and
sar
sbb
and
push
shlb
jno
adc
sub
adc
sarl
push
sub
pop
or
xchg
jp
pushf
dec
psadbw
aam
adc
divl
mov
inc
mov
cmp
je
repz
mov
jle
jg
sbb
aaa
divb
inc
mov
loope
mov
test
sbb
negb
sub
sbb
pop
rorb
mov
stc
push
mov
jae
ret
fldenv
xor
add
add
inc
test
out
cmp
out
ja
cltd
fstl
in
add
inc
ret
inc
flds
mov
mov
add
xchg
cmp
test
shrb
sub
clc
les
and
fs
dec
inc
mov
sbb
xor
mov
sub
outsb
jbe
clc
je
mov
dec
ja
mov
outsl
jp
neg
lcall
pop
rorl
fadd
dec
addr16
dec
cli
test
in
js
xor
xchg
and
icebp
sub
cmp
push
test
stos
repz
sahf
aaa
and
adc
lods
andl
jne
arpl
push
sti
lods
mov
adc
into
iret
nop
mov
jne
cwtl
addb
mov
je
loopne
in
or
xchg
adc
inc
mov
push
imul
aaa
fldenv
inc
mov
adc
int3
mov
adc
ds
or
xchg
inc
cmp
inc
movsb
ja
int
or
in
rcrb
jl
outsb
push
lahf
test
ret
and
push
xor
aam
clc
lock
nop
sub
std
repz
and
cli
outsb
test
or
lock
mov
jae
mov
mov
in
xchg
xor
loope
push
cmpsl
sarl
push
les
xor
dec
or
aad
xor
push
inc
dec
sbb
xchg
add
xlat
pusha
es
cmp
dec
jne
jbe
mov
adc
pop
popa
out
pop
jne
fisttpl
mov
popa
test
aas
out
dec
sub
push
sbb
mov
mov
fstpt
xchg
cmpsl
add
aad
jecxz
sub
iret
sahf
ja
jae
sbb
adc
mov
pusha
dec
adc
sub
rcl
push
cltd
push
dec
in
hlt
push
int
pop
es
out
cmp
sub
mov
addr16
and
iret
mov
xchg
push
mov
jle
addr16
cld
mov
adc
pop
cmc
xorl
enter
sub
lret
ljmp
cmp
in
aam
arpl
cwtl
jo
in
or
pcmpgtb
fisubrs
lds
test
mov
dec
lcall
lds
shrl
pop
jnp
out
sbb
scas
or
push
test
pushf
adc
dec
xchg
aaa
and
or
sub
xchg
jmp
push
inc
xor
lret
adc
outsl
ror
add
add
pop
lds
sub
xchg
push
int3
dec
mov
add
aaa
faddl
fdivl
sbb
sub
add
xchg
sbb
sub
push
cmp
pushf
jo
mov
jp
jbe
sub
divl
mov
scas
sub
addr16
or
dec
stc
xchg
repnz
or
cmc
cs
dec
mov
sub
rorl
outsl
mov
sbb
jne
loope
and
inc
out
or
cmp
mov
mov
stos
cli
mov
inc
xor
dec
pop
adc
dec
jge
dec
dec
icebp
cmc
sti
aad
mov
add
and
movsl
fists
add
and
sbb
adc
xchg
out
dec
jge
dec
push
nop
add
int
and
inc
cmc
add
cmp
addr16
test
mov
sbb
lods
mov
mov
aas
orl
xor
shll
xchg
lds
fwait
lret
sahf
aas
inc
insb
sahf
ja
mov
call
loop
ss
dec
mov
pushf
pop
dec
jnp
dec
arpl
xchg
mov
pop
and
or
lret
cmp
clc
sub
dec
rcl
mov
js
lret
aad
dec
inc
dec
or
mov
dec
xchg
mov
pop
cld
int
fisubl
cmp
push
mov
xchg
iret
add
call
and
call
stc
inc
or
stos
dec
int
sub
push
btc
push
jmp
jno
fidivs
out
out
mov
sbb
roll
insl
pop
xor
mov
cmp
push
mov
mov
nop
mov
dec
fisttpll
inc
dec
pop
sti
jmp
cltd
push
je
outsl
out
pop
lret
jl
adc
dec
mov
pop
arpl
imul
aaa
ss
pop
jl
mov
outsb
inc
scas
cmpl
jnp
cld
negl
dec
or
iret
arpl
mov
adc
jns
jp
in
jp
mov
xor
fstps
pop
fistps
lds
lea
pushf
xor
jg
pushf
mov
xchg
stos
les
push
bnd
fsubl
add
call
dec
xor
mov
addl
andl
cmpsb
cwtl
outsl
xchg
call
inc
lahf
pop
in
xor
push
push
fistpl
push
aaa
movsb
mov
lods
popa
out
das
fiadds
ds
dec
mov
xchg
sub
and
dec
mov
insb
xor
inc
mov
or
dec
jge
xchg
xchg
push
scas
in
es
dec
and
fdivrs
in
adc
nop
mov
mov
lcall
or
mov
lods
pop
inc
dec
and
fisubrl
mov
je
push
rcl
jbe
out
push
popl
push
pop
jns
sbb
andl
and
xor
pop
or
es
inc
insl
int3
cmovp
stos
adcl
add
mov
xchg
mov
out
sub
jmp
insb
aaa
cltd
fsubrl
adc
sub
sub
arpl
xor
js
adc
adc
push
lea
mov
inc
xor
nop
gs
mov
pop
out
stc
cli
sub
sub
movsl
push
xchg
push
mov
nop
mov
nop
push
daa
push
fildll
adc
add
inc
fsubs
sub
add
jo
mov
out
xchg
jae
xchg
aas
enter
and
add
mov
sbb
ja
into
cwtl
mov
inc
mov
rcl
sub
push
push
shrl
inc
mov
jecxz
pop
cmp
inc
rorb
cli
sbb
imul
jmp
mov
stc
shl
or
int
and
sub
gs
pop
pop
mov
cli
xchg
sub
cmp
add
test
std
cld
repnz
std
nop
insb
mov
call
out
daa
addr16
mov
mov
scas
adc
cs
push
loop
lods
jge
and
lahf
lret
int3
jmp
outsl
pop
lock
stos
cmp
sbb
std
xchg
xchg
xchg
movsl
dec
jl
scas
decb
gs
sbbb
incl
xchg
out
pop
xchg
pop
mov
in
pop
les
add
jbe
popa
mov
add
pop
outsb
add
inc
xor
pushf
scas
movsb
loope
repnz
adc
gs
into
pop
enter
mov
popa
ret
jg
mov
ret
inc
pop
jg
xlat
add
jl
jb
sahf
xlat
xchg
nop
les
add
sub
cmp
fisubl
or
ret
mov
sub
xor
mov
push
shlb
loop
outsl
add
push
and
insl
stos
movsl
aaa
adc
pop
dec
mov
mov
rcl
es
stc
push
in
pop
jp
loopne
xchg
arpl
xor
lock
popf
mov
xchg
or
fwait
push
xchg
notl
repnz
int
out
aas
test
icebp
loopne
and
mov
mov
adc
jle
imul
stos
push
lock
and
cmp
out
stos
sub
cmpl
sarl
lods
pop
xor
pop
pop
push
leave
dec
sub
test
sbb
aad
in
and
adc
cmp
xchg
cwtl
mov
dec
push
dec
stos
push
push
loop
out
xor
sbb
inc
sub
mov
push
mov
mov
into
insb
sub
iret
push
xchg
add
pop
cli
push
shl
aaa
int
aas
hlt
call
inc
push
fdivl
fwait
sbb
lret
push
cmc
jmp
icebp
inc
xchg
lahf
enter
pop
sub
mov
lahf
pop
xor
in
mov
adc
xor
lds
mov
setns
test
fsubs
add
sub
out
push
stos
das
call
or
and
out
hlt
ficoms
lret
inc
push
add
cmpsl
sbb
or
sbb
inc
mov
jns
pop
lods
xor
dec
mov
xchg
lret
pop
sub
push
or
xchg
sahf
jl
test
leave
imulb
mov
xchg
inc
ds
pop
jge
gs
sub
cmp
prefetcht0
in
into
push
fwait
je
mov
pop
adc
add
aad
stos
nop
faddl
inc
cmp
lea
in
mov
outsl
mov
out
rorb
or
mov
fiadds
fwait
movsl
push
dec
bound
cmp
jle,pt
cmpsb
loop
sub
ficoms
xor
fs
pop
lods
enter
mov
sub
xor
subl
insb
mov
lock
pop
insb
mov
loope
loopne
inc
mov
mul
js
sbb
jmp
clc
fcoml
loop
sbb
out
dec
or
lods
cmp
ds
mov
xchg
pop
fdivs
mov
shl
mov
stos
xor
das
sbbl
xchg
or
and
or
mov
cmp
sub
dec
icebp
out
or
out
xor
sub
mov
ss
xor
jmp
xlat
cmp
dec
ds
test
pusha
lock
mov
dec
inc
loopne
je
mov
aad
fs
mov
outsl
jb
fs
fsub
dec
or
aam
mov
adc
scas
mov
push
jo
pop
mov
xchg
push
test
das
in
out
and
test
mov
cmpsl
pop
stos
loopne
pop
sbb
inc
sarb
jl,pt
int3
xor
jmp
aad
pop
xchg
fsubs
push
and
lock
iret
test
mov
and
cwtl
xor
dec
and
pushf
mov
push
xchg
inc
frstor
add
push
jl
aam
dec
outsb
nop
sbb
push
lds
bound
adc
aad
insl
repz
mov
push
xchg
je
in
mov
mov
cmp
mov
and
popl
fcoml
xor
xchg
ds
or
mov
pop
mov
je,pt
shll
aaa
xor
xchg
xor
stos
push
into
push
pusha
mov
movsl
xchg
adc
jb
and
fisubrs
sub
ret
inc
inc
pusha
pop
and
outsb
addb
stc
cmp
jl
test
lds
ficomps
movb
repz
hlt
stos
mov
out
movsb
lahf
je
push
pop
data16
or
adc
mov
mov
fcmove
out
push
loop
fildl
mov
lcall
pop
in
add
sbbl
nop
movsb
out
pop
inc
addb
stos
inc
mov
push
mov
addl
cmpsl
or
ja
push
dec
dec
jo
push
das
jns
fstps
shll
pushf
inc
pop
mov
lock
aas
movsl
rclb
xor
in
lods
insb
sbb
fstpl
mov
outsb
xlat
test
pop
je
inc
repnz
sub
rcll
sub
mov
stos
pop
popa
jns
push
push
cmp
mov
outsl
iret
xchg
lock
sbbb
sub
push
pop
clc
movsb
pop
pop
adc
orl
ret
out
fidivrl
pop
out
mov
fdivl
lock
jne
pxor
shrb
dec
jbe
imul
jecxz
sub
filds
add
sbb
sti
inc
adc
jno
aas
adc
ret
xor
stos
sbb
roll
inc
pop
lea
xor
loope
rcll
sahf
mov
in
cmpsb
shlb
push
dec
jmp
mov
movsb
insb
sbb
jp
sahf
dec
cs
popf
add
cmp
inc
ret
push
cmp
popf
push
push
rorl
pop
sub
inc
shl
sti
sub
xor
adc
sub
sub
mov
clc
mov
and
fisubs
and
xor
jo
jmp
fcoml
icebp
out
repnz
fucomi
or
scas
rorl
jmp
and
int3
imul
xorb
iret
fwait
pop
js
jmp
xchg
mov
push
mov
sahf
test
into
fst
std
int
jg
xor
push
jae
movsl
lahf
and
rcrb
inc
out
sti
lret
or
adc
jns
or
lea
inc
fdivrl
mov
mov
adcb
inc
mov
cmp
cld
test
idivb
sub
mov
aaa
in
and
in
addl
mov
ret
mov
aaa
jmp
adc
mov
lcall
out
insb
test
dec
pusha
mov
mov
cmpsl
adc
mov
fsts
std
cmp
in
fdivrl
jge
mov
subb
mov
decl
mov
and
cld
sarb
push
add
out
pop
pop
sahf
xlat
and
jbe
in
push
pop
mov
pop
ror
jg
popa
sub
add
je
aaa
in
dec
adc
add
lahf
fistps
add
push
push
mov
andl
popa
mov
lods
cmc
and
sbbb
push
fnstsw
xchg
sbb
fdivrs
xor
jbe
fsubp
aad
popf
stc
inc
sub
mov
ljmp
loope
pop
adc
xchg
inc
push
mov
xor
rorl
dec
xchg
sarb
jmp
nop
mov
std
jns
pop
or
insl
jns
add
ljmp
dec
ficoms
in
dec
cltd
push
mov
sbb
and
push
and
test
imul
imul
cli
je
outsb
mov
rolb
cmp
leave
lcall
mov
jg
inc
add
adc
mov
das
inc
mov
cld
inc
jnp
mov
sbb
xor
pop
fsts
push
and
or
push
pop
lods
and
lret
insl
inc
lods
enter
adc
cmp
aam
ss
jg
aas
aam
push
pop
insl
sbb
outsb
cmp
sbb
loopne
xchg
inc
lea
mov
push
jecxz,pn
mov
out
ret
pop
mov
push
xor
add
pop
sbb
ja
sbb
mov
pusha
dec
std
movsl
adc
jg
dec
mov
das
scas
sbb
mov
push
mov
lea
push
inc
fs
add
pop
addr16
outsb
xchg
sub
sarl
mov
out
xchg
fsts
test
shll
pop
call
mov
pop
or
mov
pop
shl
lods
inc
xchg
dec
cld
mov
ror
jae
sti
mov
mov
mov
sbb
cltd
rorb
pop
and
xor
sbb
push
mov
lcall
in
icebp
mov
mov
xchg
fdivr
fiadds
jp
pop
sub
add
and
ficomps
xor
push
add
xchg
fists
pusha
mov
and
outsl
ja
fucom
xor
mov
pushf
sub
inc
aam
scas
ljmp
push
adcb
insb
mov
pop
push
inc
xchg
in
addr16
push
sbb
mov
lock
mov
scas
lds
decl
lret
stos
mov
push
lods
xchg
adc
ljmp
sbb
add
ffreep
jmp
arpl
sahf
in
pop
lahf
es
jg
and
dec
lahf
ret
js
popa
decb
fwait
lret
das
popf
xlat
in
fs
adc
jo
xchg
popf
inc
lret
mov
xlat
sub
ret
ret
mov
hlt
int
cmc
js
mov
mov
mov
fcoml
add
call
dec
jg
stos
xor
lahf
xchg
incl
icebp
fdivrl
hlt
and
xchg
sbb
insl
repz
nop
lcall
xchg
xor
push
pop
pop
data16
jmp
pop
jns
mov
fisubl
inc
hlt
std
insb
adc
mov
loopne
sub
in
stc
adc
addb
ret
imul
mov
mov
jmp
scas
shlb
dec
iret
call
sarb
lcall
fnstenv
dec
rol
or
and
lahf
push
or
imul
bound
sbb
mov
add
loopne
or
push
push
adc
push
pop
xor
loop
xor
push
daa
lret
movb
loope
cmp
movsl
push
ficompl
clc
insb
sbb
mov
int3
push
sets
and
pop
xor
adcl
mov
addr16
push
test
fs
stos
xor
cwtl
ret
jg
ds
mov
or
mov
jb
rcrl
iret
and
dec
rcrl
pusha
xor
ficoml
and
adc
ljmp
jg
loope
add
iret
sbb
and
stos
xchg
faddl
scas
inc
sbb
fldenv
mov
mov
adc
insb
imul
scas
outsb
cmp
es
fwait
dec
aam
or
sub
or
out
sti
mov
add
arpl
mov
cmpsl
out
jmp
xchg
xchg
std
mov
and
lea
lock
dec
pop
fstpl
add
mov
jle
sub
outsb
shl
dec
mov
inc
movsl
dec
jp
inc
mov
data16
sub
jbe
inc
cmc
into
xor
xchg
mov
push
fidivs
sub
outsl
iret
addr16
sub
loope
fnsave
lods
icebp
xor
jl
mov
iret
outsb
addl
cmpsb
mov
stos
pop
sti
nop
movsb
dec
xor
orl
or
adc
and
sbb
lds
and
ss
insl
out
sub
push
mov
jle
stc
mov
ja
xchg
pusha
loop
push
sub
jge
les
in
dec
xor
xchg
movsb
ja
add
dec
daa
sbb
xor
les
bound
push
dec
inc
fsubl
out
mov
sbb
repz
push
push
fimull
call
mov
nop
jnp
or
js
sub
data16
sbb
jne
jns
add
sbbb
es
clc
push
gs
mov
sti
int3
push
aaa
lcall
or
movsl
or
mov
fsubr
sbb
or
jne
addr16
push
or
push
fimuls
or
insb
jnp
and
int3
test
ficoms
icebp
addr16
cmp
mov
movsb
add
pusha
dec
push
int
addl
jno
cld
lods
push
push
popf
sbb
stc
sbb
jb
xlat
lods
stos
mulb
push
inc
mov
jmp
push
pop
xchg
imul
inc
inc
xchg
cmp
in
movsl
iret
add
jmp
imull
or
test
test
ret
jl
pushf
in
sbb
push
xchg
sbb
rol
push
cs
out
ret
mov
inc
sbb
adc
and
xlat
mulb
sub
xor
div
adc
xor
lcall
xchg
jo
mov
call
jmp
sub
jne
mov
out
in
movsl
popa
jmp
incl
inc
sub
mov
inc
sub
mov
push
fs
negb
cmp
repz
jo
ljmp
xor
sbb
push
ret
fnstenv
lret
mov
sbb
cmpsl
js
lods
pop
dec
jl
inc
jp
jb
pop
xchg
dec
mov
xor
adc
iret
xor
xchg
adc
cmp
and
push
ja
xchg
test
aad
mov
inc
sub
xor
sub
dec
scas
pop
sbb
cltd
inc
pusha
out
dec
and
dec
mov
addb
mov
inc
fcmovnbe
push
lods
jmp
mov
mov
popf
jae
addr16
in
fisubs
mov
mov
clc
or
pop
das
lret
cld
mov
mov
sbb
stos
push
xchg
test
pusha
push
push
pushf
jg
inc
ljmp
arpl
insl
xchg
inc
add
sub
mov
xchg
loop
pop
sbb
lret
mov
dec
cld
mov
xorl
int3
lods
inc
push
fsubp
pop
jmp
mov
cmp
mov
sti
arpl
sbb
sub
sbb
gs
aas
xchg
adc
xchg
stc
mov
push
ja
imul
gs
lock
push
add
stos
xor
mov
fisttpll
sbb
dec
push
jbe
ds
rclb
push
adc
xchg
mov
in
ljmp
pop
fwait
xor
aas
inc
std
adc
or
push
dec
xchg
popf
ficoms
ret
sbbl
decl
and
mov
lods
mov
xlat
sub
sti
jmp
or
jns
jg
call
ljmp
flds
mov
daa
icebp
xor
daa
jl
fildl
adc
test
xor
push
inc
out
cmp
pusha
lcall
sbb
jl
mov
imul
pop
iret
cmc
jge
ror
or
or
stos
dec
mov
xor
and
rcrl
daa
mov
lcall
dec
pop
out
mov
dec
sub
mov
mov
gs
push
pop
ja
mov
lods
daa
push
cmovae
enter
push
adc
loopnew
mov
loop
nop
sub
jns
mov
out
mov
rcrb
out
mov
aam
push
xor
addb
out
add
nop
shlb
dec
push
icebp
jne
push
pop
xchg
cmp
push
cmp
cld
aaa
js
inc
xor
and
in
idivl
pop
mov
push
sarb
xchg
push
in
js
popl
push
xor
je
push
out
pop
rcr
sbb
mov
movsb
repnz
add
sub
popf
mov
jl
pop
lods
pop
mov
sbb
inc
jns
mov
xchg
insl
jge
push
jg
mov
push
or
push
repnz
add
call
add
jg
mov
add
pusha
fiaddl
lahf
push
rcr
push
mov
mov
or
xchg
mov
scas
mov
int
mov
call
in
aaa
xor
lods
and
das
mov
or
push
inc
sub
or
mov
cmp
std
in
jg
sti
xchg
idivl
adc
sahf
add
or
stc
jns
jbe
cld
cmp
lret
adc
push
jl
pop
dec
clc
or
jbe
in
lods
or
daa
mov
dec
lods
rcrb
mov
pop
ficoms
mov
push
xchg
div
test
or
es
mov
das
test
clc
inc
push
fistpl
lret
mov
cltd
inc
and
jmp
pop
xlat
cmp
fs
push
repz
les
sub
fbld
xor
cmp
enter
xchg
xchg
mov
pop
movsl
outsl
xchg
mov
fisttpl
fstl
mov
mov
cmpsl
dec
mov
and
jno
xor
test
mov
add
imul
or
sub
pop
cmpsb
sbb
pusha
popa
push
dec
inc
call
sbb
dec
dec
xchg
cmpsb
inc
fstps
dec
iret
pusha
cmpsl
iret
rorb
fs
jge
test
mov
xchg
jbe
cmp
cwtl
xchg
xor
xchg
push
fsubrl
xchg
mov
bound
ja
daa
data16
sti
iret
ss
je
mov
jp
or
jne
xor
scas
fwait
jg
pop
pop
cwtl
pop
jb
sbb
cmpsl
sub
and
jle
push
xchg
mov
negb
jle
ret
in
enter
shrb
mov
xchg
ret
dec
cli
in
outsb
out
push
notl
das
lods
mov
dec
fwait
add
imul
jo
shr
jnp
lahf
dec
shll
negl
popf
dec
add
sub
stc
je
test
repz
jmp
in
inc
add
aad
add
push
adc
cmp
loope
add
in
sub
aas
in
out
ljmp
mov
mov
insb
movsl
pop
push
inc
jno
insb
int3
xchg
ret
mov
and
push
in
arpl
jg
push
inc
and
fsts
sar
ficomps
rorb
loopne
ss
add
mov
mov
and
jno
mov
mov
ja
sub
es
in
add
scas
ficoms
mov
test
daa
jg
sbb
and
jmp
push
jle
shlb
rorb
iret
int
je
sub
xchg
pop
jnp
jae
pop
jns
aaa
jmp
inc
out
mov
sub
mov
add
push
decl
lods
cmp
xor
test
and
or
mov
addr16
mov
add
js
fsubrl
in
jp
cmp
icebp
mov
xor
into
push
add
push
aam
scas
xor
xchg
scas
fdivrs
cmp
mov
jg
js
push
add
mov
mov
cmpb
jge
xchg
orb
jl
pop
test
iret
test
outsb
jns
insl
or
ss
or
out
int
dec
lods
cmp
enter
jle
mov
or
xchg
sbb
leave
adc
int
add
cli
xchg
adcb
xchg
daa
mov
lret
fmuls
dec
outsb
das
xchg
lea
pop
stos
dec
icebp
mov
or
push
outsl
add
adc
mov
repz
aad
inc
pop
push
les
dec
lods
push
icebp
xchg
hlt
mov
jp
mov
mov
insb
aas
inc
jno
mov
jecxz
sub
cmc
cli
push
fstpl
gs
push
cmp
mov
ss
aam
mov
clc
jecxz
cmpsl
call
add
flds
repz
repz
push
push
cmp
cmp
daa
push
push
test
xchg
jle
dec
push
les
int3
push
subl
loop
push
xor
mov
jae
scas
loop
xchg
sbb
test
push
daa
dec
lcall
jns
mov
daa
cli
lock
cmp
test
test
ss
sahf
adc
mov
mov
pop
mov
or
mov
in
jae
pop
jb
xor
push
or
pop
in
pop
inc
in
pop
jae
adc
outsb
push
xchg
cli
pushf
jmp
insb
xor
fimull
xchg
fnsave
sti
leave
sub
fisubl
or
dec
lret
mov
push
sahf
ss
sub
push
cltd
xor
pusha
in
pop
pop
test
xor
xor
mov
lds
pop
fbld
mov
cmp
pop
cmp
push
rorb
arpl
popa
jp
lock
nop
cmpsl
pusha
repnz
sub
mov
leave
jne
pop
icebp
cld
sbb
or
movsb
push
pushf
imul
adc
push
adc
xchg
cltd
mov
mov
xchg
xchg
test
jbe
adc
lock
add
mov
insl
aas
mulb
mov
test
aas
mov
movsl
cmpl
lret
push
aas
inc
test
leave
rolb
mov
xor
outsl
testb
loope
rorb
xchg
inc
xchg
test
ja
mov
aam
inc
jmp
test
add
je
scas
repz
adc
sbb
cmp
gs
dec
jnp
jle
call
push
xchg
dec
sub
mov
mov
cmp
lods
inc
fildl
add
andl
repz
cmpsl
or
xlat
xchg
cmp
cltd
icebp
jae
pop
push
add
sbb
cwtl
inc
lock
cltd
mov
and
popl
pusha
int3
pop
jo
push
jo
mov
cmpsl
jo
dec
ljmp
je
in
push
cmp
jge
cmp
pop
imul
les
add
jns
cmp
rcll
add
test
cmc
sbb
ss
lcall
lahf
ss
scas
arpl
pop
pop
mov
mov
jb
shr
xor
shlb
sbb
adc
lods
lret
push
stc
xchg
adc
jmp
in
and
jg
dec
in
sti
data16
aad
ret
mov
xor
int
pop
dec
sahf
lea
fcomps
dec
inc
lret
in
push
mov
and
inc
mov
lea
cli
pushf
pop
xchg
or
adc
cwtl
mov
mov
sub
xchg
adcb
mov
or
shlb
sub
jo
movl
mov
insw
xor
push
dec
lock
test
arpl
adc
iret
imul
cmpsb
or
sbb
fimull
fists
push
pop
sbb
mov
fidivrl
xchg
stos
repnz
add
mov
sub
cmp
iret
dec
mov
lods
test
pop
cmp
inc
xchg
push
hlt
xchg
mov
lock
xor
jge
dec
push
loope
and
icebp
dec
mov
mov
pusha
mov
in
fcompl
aaa
pushf
sub
pop
mov
test
dec
pop
mov
jecxz
push
daa
aas
add
cltd
jns
cmp
mov
es
sbb
scas
popf
xor
sub
out
out
leave
aaa
mov
mov
ds
sbb
mov
pushf
add
push
cmpsl
stos
cmp
pop
mov
inc
lret
cmp
loop
mov
sbb
add
negb
adc
ja
or
jbe
hlt
cmc
out
sti
shrb
mov
push
jnp
stos
or
nop
loopne
rorl
idivl
push
pop
inc
and
jle
cmp
and
test
enter
pusha
into
push
mov
inc
mov
or
cmp
add
mov
fidivs
jno
or
jns
pushf
data16
mov
sub
pop
lods
xor
inc
push
dec
lret
nop
inc
pop
lock
cli
add
sahf
je
sub
lds
push
loope
mov
xchg
in
inc
popa
mov
aaa
sti
je
sub
xchg
dec
stos
xor
test
sub
cmpsl
xchg
popa
sub
sti
lock
inc
ds
pushf
idivb
xchg
mov
cmp
clc
xor
jns
mov
mov
test
sbb
and
pop
loope
xchg
xchg
mov
repnz
mov
push
inc
xchg
cmp
or
inc
jge
add
inc
jno
movsl
dec
sub
jns
add
adc
test
push
stos
lods
imul
je
rclb
aad
dec
dec
lret
push
bound
in
test
lods
jmp
enter
imul
and
fcmovnb
addr16
negl
pop
sahf
sbb
mov
fstp
mov
and
mov
stc
mov
aas
inc
arpl
scas
pop
and
addl
repz
ficomps
inc
call
xor
out
jecxz
push
inc
xor
cmp
int3
sub
ss
popf
outsb
sub
imul
rolb
arpl
out
xchg
popf
xor
mov
xchg
inc
iret
xchg
add
cmpsl
insl
mov
cltd
in
aas
add
ret
mov
push
popl
fisubrl
imulb
push
add
ds
cmp
or
aas
test
mov
test
jp
cwtl
test
ficompl
popa
lret
out
lds
mov
lock
loopne
mov
push
scas
xor
mov
mov
jb
adc
adc
xor
dec
sub
jmp
dec
test
imul
shlb
aas
shlb
popf
lds
out
out
leave
dec
js
push
dec
sbbb
adcb
js
push
iret
lret
lea
adc
pop
iret
xchg
inc
xor
jns
dec
popf
cmp
add
loopne
push
jmp
xor
xor
mov
aam
scas
fwait
outsb
mov
mov
xchg
push
test
ud2
inc
push
into
fldenv
mov
int3
or
sti
add
pop
push
lret
and
shl
inc
call
pop
pop
pop
jecxz
adc
add
xor
scas
sub
add
leave
shrl
cltd
fidivs
cmp
jmp
cmpb
les
mov
pusha
inc
jl
dec
fidivl
jae
lock
lret
cltd
fsubrl
pop
xchg
mov
pop
lret
jecxz
jno
xlat
or
shlb
cs
fildll
jo
cs
imul
aam
jae
inc
aas
mov
jmp
rol
icebp
dec
jnp
adc
sbb
sti
mov
xchg
sub
pop
dec
dec
mov
dec
out
jle
sbb
sbb
iret
or
in
jge,pt
push
jle
jecxz
gs
mov
outsl
jecxz
adc
xor
mov
lods
sub
pushf
jmp
xchg
or
jns
and
sub
sbb
iret
sub
lods
sub
and
dec
lret
cltd
aas
loope
mov
jmp
cltd
sarl
mov
push
lret
pusha
nop
jb
int3
jl
int
sbb
je
or
inc
sub
xchg
mov
ret
fcom
data16
and
gs
lret
push
adc
adc
jb
ret
mov
jecxz
adc
add
inc
lods
xchg
cli
aas
pusha
xlat
and
fidivrs
popa
xchg
xor
pushf
shl
addr16
sub
lea
or
cmp
in
pop
lds
jne
lahf
mov
xchg
cmc
ljmp
mov
jmp
add
insb
out
push
sti
cmp
imul
sub
shll
cs
dec
or
insl
mov
in
call
pop
mov
aas
xchg
mov
xchg
lret
add
insl
jecxz,pn
and
sbb
xchg
jns
pushl
pop
sbb
jecxz
sbb
xor
or
ror
inc
int3
cwtl
hlt
dec
int
lea
adc
cmpsb
inc
fucomp
sbb
arpl
ja
push
add
or
pop
dec
int3
leave
repnz
stc
sbb
xchg
inc
rcrl
inc
and
and
and
and
or
sbb
bound
fwait
xchg
or
mov
dec
hlt
pop
mov
lea
fstpl
push
stc
dec
lods
cmp
icebp
shll
and
sbb
into
pop
addr16
clc
mov
std
cmp
in
pushf
mov
jbe
outsl
outsb
imul
xchg
mov
mov
stos
sti
out
aam
cmpsb
or
mov
into
inc
lret
adc
sti
dec
sub
ficompl
jno
sbb
hlt
cmp
or
sub
ja
sbb
decl
icebp
mov
xchg
shrl
popa
mov
insb
adc
add
mov
imul
arpl
rclb
mov
pop
out
fs
sbb
daa
mov
mov
or
mov
pop
pop
std
push
add
mov
outsb
out
cs
xor
inc
mov
incl
mov
add
pushf
in
mov
pop
xchg
outsl
add
xchg
inc
or
das
jl
fstps
inc
lods
add
dec
adc
xchg
or
sti
xchg
mov
imulb
mov
xchg
sbb
jb
jne
pop
lahf
mov
test
pop
in
and
push
sub
mov
xchg
xchg
xor
inc
aaa
cmpsl
mov
ljmp
es
push
mov
or
sbb
cli
dec
mov
mov
popf
sbbl
dec
and
push
jg
int
jne
cmc
sbb
xor
xchg
mov
mov
sbb
sar
addr16
jnp
lods
sbb
jp
imul
rol
cmp
in
in
xchg
fimuls
aam
outsb
and
setnp
cmp
fbld
lret
dec
sub
scas
adc
pusha
jmp
popf
out
xchg
ret
test
cmc
lock
jno
mov
popf
test
sbb
adc
ss
popf
jmp
lahf
mov
inc
test
mov
cmp
sub
jne
out
shl
push
mov
push
aam
push
int
fisttpl
mov
push
mov
jg
cld
loope
pop
scas
jp
xchg
push
xor
es
mov
jp
adc
mov
ret
mov
jl
jge
mov
daa
xor
mov
lcall
into
ds
sarl
push
pop
insl
clc
inc
out
xchg
sbb
mov
dec
ja
xchg
adc
or
add
pop
mov
jbe
repz
jl
mov
or
fmull
add
in
mov
push
xor
inc
shrl
fs
lods
cmp
inc
fsts
and
or
subb
mov
add
adc
jp
adc
cs
int3
push
or
int
imul
sti
pop
adcl
add
insb
dec
adc
insl
inc
mov
outsb
or
pop
stos
push
mov
and
jmp
insb
shr
clc
mov
movsl
cmpsl
lcall
les
inc
sbb
pop
loopne
jbe
loopne
cwtl
sub
std
imull
dec
add
cmpsl
dec
push
cmp
int3
sarb
mov
leave
xor
jns
adc
mov
cmc
mov
daa
scas
std
stos
test
and
out
mov
test
push
mov
jae
or
stc
pop
add
pop
stc
push
in
cmp
pop
mov
cmp
adc
push
fadds
jb
adc
xor
dec
sbb
fistpll
sub
testb
add
rcrl
pop
scas
dec
cs
xlat
aam
xchg
fidivl
aaa
push
mov
sub
add
pop
xchg
out
popf
out
dec
jb
push
icebp
push
xchg
mov
mov
cs
sahf
and
cmpb
rcpps
in
fcoml
push
sbb
mov
dec
les
cmp
fwait
ljmp
scas
jge
movsb
std
lahf
mov
ljmp
imul
mov
aaa
cmc
leave
dec
xor
iret
stos
sbb
out
mov
push
subl
xchg
jecxz
dec
mov
xchg
sarl
cmpsl
adc
sarl
adc
scas
leave
test
sub
aam
jnp
add
adc
xchg
mov
mov
xchg
sub
xchg
fldt
fmulp
adc
std
ret
mov
ret
into
dec
and
jmp
popf
pop
imul
mov
fisubrs
movsb
leave
jecxz
jnp
jbe
cs
cmc
std
adc
xchg
xor
je
aaa
daa
loopne
arpl
fdivrl
loop
andb
out
xchg
lea
jae
out
jle
xor
dec
out
mov
fimuls
fldenv
dec
mov
imul
fisubrl
sub
nop
jne
xchg
sbb
fiaddl
cmp
lock
pop
lahf
int3
in
dec
inc
xchg
jns
cmpsl
mov
sub
mov
jp
xlat
jne
ret
xchg
mov
xor
sbb
pusha
or
repnz
cwtl
test
sbb
orb
xchg
cs
adc
push
jle
sub
mov
cmp
fdivr
add
xchg
cmp
insl
in
xchg
or
fcoms
xchg
adc
mov
or
cmc
mov
or
or
sbb
jo
bound
mov
test
stc
push
pop
sahf
mov
sub
adc
cmpsl
xchg
add
pop
enter
add
aaa
div
cld
pushf
ss
push
dec
sub
sar
pop
inc
fldz
and
cmpsl
jno
or
lea
sub
cli
cmpsl
in
movsl
stos
pop
cs
xchg
negb
adc
cmp
dec
mov
rorl
mov
xor
mulb
lret
sbb
bound
push
loop
mov
mov
cmc
repz
dec
add
sub
pop
sbb
leave
in
cs
xchg
sbb
xchg
push
pop
or
or
into
fcomi
xchg
push
shlb
dec
dec
aam
repz
fidivl
sub
and
push
xorb
shll
pushf
clc
sbb
cmp
mov
in
daa
jne
cs
aas
cwtl
aam
andl
popa
lahf
mov
push
test
insb
cmp
adc
cmp
push
mov
insl
mull
xchg
or
mov
pop
insl
mov
inc
inc
jnp
aad
dec
pop
stos
ja
outsl
mov
stos
ss
mov
lret
ljmp
aad
sub
inc
pop
aas
lcall
and
int
xor
sbb
cmp
cmpsb
sbb
dec
not
push
cmpsl
cmpsl
aam
dec
mov
packsswb
out
rolb
add
fdivl
dec
xchg
sbb
push
mov
into
fwait
pop
lcall
mov
pop
test
or
scas
or
dec
mov
movsl
data16
sub
pop
mov
shlb
mov
cmp
push
fdiv
insb
mov
jnp
rcl
sysexit
sarl
dec
push
and
add
pushf
xor
xchg
daa
test
add
mov
mov
add
sbb
xchg
sub
xchg
inc
lods
and
mov
mov
mov
in
or
idivb
xchg
les
push
in
mov
dec
aad
in
mov
addr16
repnz
sti
test
xchg
adc
clc
icebp
push
out
adcl
adc
cld
mov
xchg
dec
daa
sbbb
jle
and
cmp
mov
add
lahf
push
lock
aad
lret
repz
aaa
loopne
sti
das
jp
xchg
test
mov
jae
or
ja
inc
add
add
inc
hlt
ret
xchg
push
mov
mov
stos
test
ljmp
enter
movsl
inc
repz
daa
dec
rclb
std
sub
ja
jge
or
sub
add
inc
and
lret
add
mov
out
cmpsb
insb
mov
push
pop
and
pop
data16
add
dec
jp
int
lods
cld
mov
data16
lret
gs
mov
fs
inc
ret
mov
call
insb
cs
ss
scas
fsubrp
rcr
out
sub
pop
pop
xor
out
fidivs
xchg
lret
call
pushf
insb
push
callw
jne
jae
cld
icebp
loope
jbe
adc
cmpsb
cmc
insb
in
dec
pop
in
mov
icebp
lretw
or
aam
and
jne
int3
or
sub
icebp
sub
xchg
les
repnz
adc
and
cmc
mov
dec
xor
adc
jbe
test
cmp
repnz
cmp
out
sbb
and
push
lock
ja
pusha
or
std
fwait
dec
sub
adc
call
lret
popf
repnz
lahf
negb
cmp
inc
fistl
mov
into
lret
repz
mov
or
ljmp
push
xor
cmp
fisubl
aas
test
pushf
out
inc
shrb
jg
cmp
cmpsl
adc
mov
sbb
lahf
sbb
mov
repz
and
rcl
or
add
push
sahf
jo
addr16
je
jns
push
ret
jbe
jl
or
pop
aaa
add
dec
mov
es
or
dec
mov
pushl
test
sti
jnp
popa
adc
add
scas
outsb
movsb
pop
int
into
jae
cs
ficoms
notl
lcall
ret
stc
mov
fisttpl
mov
mov
sti
loopne
sbb
movsl
push
test
ret
mov
jecxz
call
test
xor
roll
jle
inc
pusha
loope
push
lret
add
jbe
out
xchg
push
pusha
lcall
lods
adc
cmp
int3
jne
add
addr16
xchg
pop
mov
testl
shll
mov
add
jb
pop
sti
repz
adc
ror
fisubrs
push
pop
cli
int
sub
push
fimuls
sub
orb
jle
loop
push
dec
lock
inc
or
iret
repnz
cmpsl
notb
jns,pt
int3
scas
cmp
push
and
xchg
icebp
or
cmp
xchg
incb
inc
xchg
das
jl
sbb
xchg
inc
sti
and
stos
adc
inc
andl
xchg
imul
stc
bound
int3
shrb
hlt
or
call
sub
aas
mov
mov
test
test
dec
dec
ror
int3
mov
mov
jmp
sub
xor
inc
and
and
adc
fdivrs
daa
lcall
movsb
shll
je
movsb
mov
icebp
jmp
scas
inc
jg
gs
in
cmpsl
fsub
mov
dec
push
push
icebp
sub
and
outsl
pop
dec
cmp
xlat
mov
imull
ret
push
andl
add
movsl
ljmp
rorl
pushf
into
cmp
fxch
bound
mov
jb
cmp
xchg
sub
sub
sbb
xchg
enter
in
repnz
dec
dec
jne
push
or
mov
pop
dec
jmp
mov
out
mov
mov
mov
sbb
sarl
mov
repz
mov
xchg
icebp
sub
jmp
rolb
mov
cmp
stc
mov
push
and
xchg
xor
ja
xchg
gs
lock
cli
mov
mov
ret
lods
add
push
lods
scas
mov
fdivl
push
dec
push
mov
xor
push
das
inc
mov
lret
aad
sub
pop
dec
cwtl
jp
pop
data16
mov
jb,pt
xlat
push
pusha
xor
or
iret
push
push
mov
jl
fisttpl
incl
fldl
jg
xchg
add
cmp
pop
push
outsb
repz
loopne
jno
cltd
dec
fisubl
sub
jne
sbb
inc
icebp
cld
popf
outsl
aad
stos
lcall
inc
sar
int3
adc
xchg
cmp
test
and
test
and
repnz
shll
xor
dec
mov
cmpsl
sbb
cltd
adc
mov
fistpll
cmp
lock
aas
mov
xchg
fldt
sub
rolb
adc
mov
pop
push
ret
sarl
sbb
test
movsb
bound
mov
movsl
push
pop
cmp
sti
inc
fadds
iret
call
add
xor
loop
loope
loop
je
cmp
rcll
pop
cmp
add
lods
push
cli
pop
cmpsb
popa
jl
jecxz
loop
fisttps
dec
pop
aam
cmp
pop
or
mov
xor
inc
adc
scas
xlat
or
sahf
outsl
sub
and
cltd
and
insl
lods
cld
mov
stos
add
or
jmp
in
out
xchg
repnz
fsubrl
xor
sti
jmp
mov
cmpsl
adc
push
rcr
nop
push
sub
jns
scas
xchg
jp
push
dec
cmp
cmc
adc
loop
addr16
cmp
shrb
mov
inc
xchg
inc
add
push
cmp
lea
loope
xor
sub
cmp
or
sbb
add
test
dec
lret
lret
push
dec
popf
sbb
cld
movsb
sti
add
notl
imul
mov
mov
fwait
adc
sub
pop
push
call
jne
and
enter
pop
jecxz
inc
adc
cli
daa
inc
insb
out
jne
inc
out
ficoml
cmp
mov
cs
lods
subl
mov
rcll
jnp
cmc
mov
push
dec
or
mov
loop
rclb
out
cmp
mov
rcl
add
push
fbstp
or
pop
cld
dec
ficomps
daa
int
jecxz
inc
jmp
mov
popl
rorl
or
adc
mov
into
daa
rcl
dec
ret
or
inc
push
js
shrl
or
jno
out
cmp
lea
mov
jmp
in
pop
cltd
movsl
pop
mov
push
jmp
fs
push
and
repnz
fisttpll
out
jecxz,pn
cmc
loop
fsubrs
mov
or
les
je
test
pop
cmp
sub
ds
xor
cwtl
clc
frstor
cmpsl
insl
stos
push
movsb
fbstp
pop
and
mov
xor
push
jnp
sub
mov
inc
inc
cli
fcoms
rcr
push
jne
xor
shl
aaa
jo
jg
jmp
dec
dec
cmp
bound
lahf
icebp
push
fwait
mov
shll
sub
fimull
jg
mov
lret
test
mov
repz
rcrb
sbb
out
fcmovbe
mov
mov
sub
jno
js
xor
out
and
int3
pop
aad
pop
je
inc
shlb
mov
arpl
mov
mov
sub
xor
cmp
sbb
in
push
add
mov
outsl
cmp
lods
sub
dec
pop
sbb
sub
mov
dec
icebp
cwtl
out
test
aam
fs
add
dec
enter
add
push
cmc
inc
out
add
adcl
les
dec
loop
dec
mov
xchg
mov
dec
cmc
jb
dec
mov
pop
mov
jle
out
cmp
sahf
jnp
shlb
data16
jmp
aaa
sbb
or
mov
cmp
adc
je
rclb
mov
out
jmp
je
vsubpd
inc
inc
and
push
push
cmp
add
iret
add
inc
pop
xchg
pop
les
movsl
mov
clc
scas
popf
pop
cltd
cmpsb
ret
xchg
dec
movsl
mov
sti
testl
lcall
jo
cld
jp
pop
cwtl
jb
enter
xchg
or
insb
cmpsb
xor
arpl
push
in
or
scas
mov
xchg
pop
jmp
js
out
xchg
jg
cmp
pusha
inc
pop
pop
adc
jae
call
int
cmp
dec
and
fdivp
dec
sbb
pop
sbb
dec
mov
sarb
or
pop
cmp
jo
sub
push
aaa
imul
mov
add
pushl
out
into
cmp
mov
test
nop
dec
and
mov
into
adc
push
cmp
push
jb
int3
cmp
loope
adc
lods
mov
out
or
cli
sbb
clc
jns
adc
stc
nop
sbb
xorb
mov
ja
cli
or
jb
leave
jbe
nop
out
mov
cmp
push
sub
add
mov
mov
jmp
sub
xchg
xor
xchg
or
aaa
push
push
out
mov
xchg
pop
push
dec
xchg
and
bound
cmp
gs
std
or
ss
xchg
cwtl
pop
out
push
push
and
mov
jmp
add
fistl
movb
aaa
mov
or
or
or
adc
push
inc
pop
jecxz
dec
xchg
dec
mov
ds
imul
sub
jne
dec
je
sti
or
adc
lock
xor
pushf
adc
imull
pushf
jge
jmp
push
aad
ret
pop
out
dec
mov
and
push
dec
xchg
in
pop
popa
cmp
sti
cmpsb
mov
dec
and
jg
inc
fsubl
mov
push
push
repz
mov
mov
jae
andl
push
xchg
sbb
sub
push
shll
nop
sub
mov
jae
xchg
cmp
dec
push
cltd
xchg
pop
jge
inc
pop
lea
sbb
loop
adc
loopne
lahf
xor
mov
insl
xchg
ds
push
jecxz
xor
je
or
push
aam
cli
sub
in
adc
jno
and
mov
or
cs
pop
int3
push
out
pop
cmpsl
pop
pop
dec
mov
mov
and
mov
xchg
jl
sub
psubq
jae
sahf
or
sbb
nop
xchg
ds
pop
xor
jbe
or
shll
inc
xchg
das
scas
pop
mov
lcall
nop
or
sub
movsb
mov
xchg
test
add
xchg
clc
inc
js
cli
lahf
jl
push
jno
push
outsb
xchg
rcrb
in
add
divl
movsb
repnz
inc
mov
aad
xchg
fadds
iret
add
xchg
neg
repz
mov
dec
cmpsb
ret
fsubrp
push
xchg
cltd
in
sbb
dec
int3
push
in
jnp
dec
fldt
call
out
mov
and
popa
js
sub
xchg
stos
sahf
sbb
or
mov
add
les
cmpsl
pushf
nop
push
cmp
mov
ljmp
inc
mov
nop
out
xor
arpl
repnz
mov
popf
dec
sbb
jbe
pop
pop
sub
sbbl
xor
xchg
sbb
int3
or
scas
sub
sub
in
outsb
inc
push
sbb
fcmovnu
mov
popa
or
jno
out
cmp
lcall
enter
cwtl
push
into
insl
cmp
and
mov
loopne
mov
jb
imul
jp
cmp
add
mov
xor
cmp
inc
call
cmpl
repz
les
addr16
jge
cmp
lcall
imul
data16
pop
and
pop
ret
xchg
in
aam
adc
jnp
push
or
cmp
mov
idivl
xchg
dec
enter
fimull
stos
jns
shlb
fwait
cmpsl
sbb
push
out
sub
push
mov
cmpsl
mov
push
or
push
push
in
xor
ja
insl
es
sbb
andb
inc
ja
out
adc
sub
mov
jno
aaa
mov
iret
xchg
jns
aam
in
aam
lea
push
pop
aaa
or
clc
loop
xor
jmp
adc
mov
and
push
push
or
pusha
and
mov
ret
aas
test
cld
cmp
mov
pop
fadd
push
icebp
pop
pop
mov
data16
push
xchg
adc
dec
les
xchg
lods
mov
sets
cwtl
sub
out
push
stos
js
push
jb
sbb
mov
xchg
mov
sub
adcb
and
cmp
sub
fstpt
gs
pop
sti
and
mov
xor
jecxz
adc
outsb
adcl
add
jne
fisttpll
das
cltd
cltd
push
inc
push
int3
data16
xchg
cmp
pop
xchg
stos
leave
hlt
stos
clc
xchg
sub
enter
cmpsb
sub
mov
mov
cmp
popf
es
daa
clc
fsubrl
or
jne
test
pop
xchg
jge
shl
mov
sbb
pop
fidivl
xchg
inc
sub
adc
dec
cmp
adc
movb
dec
shll
pop
mov
mov
jecxz
rorl
xchg
loop
out
xchg
gs
leave
dec
aaa
hlt
outsb
scas
in
mov
push
pop
sub
xor
out
bound
xchg
adc
pop
cmp
or
inc
sub
test
aaa
movsb
loope
mov
xchg
cmp
mov
popf
and
rdmsr
inc
dec
imul
movsb
movsb
decl
mov
das
inc
cmp
enter
mov
in
pop
rcl
add
pop
xchg
stc
and
imul
mov
out
mov
mov
dec
shll
xchg
add
jo
les
lret
mov
testb
push
or
xchg
ljmp
mov
je
rol
movsb
jnp
mov
popf
cmp
push
pusha
and
add
and
push
or
mov
nop
pop
jmp
xchg
je
movb
xchg
rorl
dec
dec
and
fistpl
loop
sbb
ja
lods
int3
jecxz
lahf
jmp
imul
fsubr
dec
imul
or
push
in
inc
and
sbb
pusha
mov
imull
sar
adc
ret
adc
xchg
movsb
stos
ss
fnstcw
das
dec
or
jbe
push
add
pop
loope
addr16
add
mov
es
leave
pop
xchg
xor
mov
cltd
mov
add
ja
inc
sbb
lock
lea
mov
in
push
pop
jbe
mov
ss
into
cmpsb
fsubrl
jle
push
pushf
jne
mov
and
dec
pop
adc
pop
xor
mov
pop
std
lock
ljmp
mov
cmpsl
in
mov
mov
dec
pop
imul
push
mov
sbb
jecxz
push
fcomi
or
insl
fisubs
rcr
push
mov
add
dec
mov
sbb
xchg
and
int
xorb
and
roll
popa
push
jo
lret
bound
ja
loope
push
ficoms
pop
movsl
stos
mov
dec
jl
mov
and
rcll
push
lret
xchg
xchg
lock
mov
sub
xchg
nop
fs
inc
ret
xchg
mov
ss
xor
adc
mov
and
inc
xchg
xchg
mov
or
push
pushf
ret
out
lds
cld
xor
sub
pusha
call
in
lcall
add
pop
loope
lock
xor
jbe
mov
sub
push
out
lret
sub
sbb
push
das
add
inc
dec
cmp
test
or
xlat
mov
mov
out
push
mov
mov
es
in
lock
push
add
add
pop
inc
stos
add
lret
add
insb
lock
adc
orb
inc
mov
push
aas
jb
fld
sub
or
pushf
lahf
bound
xor
adc
mov
add
iret
fcoml
cmp
cmp
pop
mov
lahf
jl
sbb
fucomp
mov
ret
outsb
mov
mov
fwait
out
ret
jns
aam
aaa
fs
fisubl
sarb
jbe
cld
rolb
fiadds
ljmp
ss
cmpsb
inc
pop
mov
aaa
push
xchg
mov
scas
fwait
and
scas
mov
out
call
cltd
cmpsl
pusha
inc
aam
data16
xor
mov
les
dec
mov
dec
push
cmp
ss
mov
pusha
lods
adc
dec
pop
or
mov
pop
data16
and
pop
into
sti
fnsave
cmp
sti
fwait
or
sub
aam
and
xor
test
xlat
sub
jle
pop
outsb
mov
fs
sarb
mov
jno
inc
cwtl
cmpl
add
mov
out
xchg
faddp
push
jnp
jmp
mov
adc
cmpl
stc
or
leave
inc
push
icebp
insl
pop
mov
in
mov
stos
sbb
cltd
sbb
dec
cmp
ss
hlt
jp
or
pop
dec
movsl
adc
and
cmpsl
lahf
dec
mov
xchg
imul
les
adc
fsubrs
pop
sar
in
dec
push
mov
lods
jae
aam
sbb
fs
push
in
push
test
lock
loopne
cmp
push
jbe
fwait
add
fdivrl
inc
cltd
imul
sbb
push
test
es
and
xor
clc
mov
cmc
cmp
in
sub
jno
push
adc
in
dec
xchg
mov
pop
scas
push
enter
imul
imul
test
pop
inc
jecxz
jbe
or
ja
jmp
lods
faddp
mov
mulb
js
jns
inc
loop
sub
idivb
call
int
std
or
loop
or
scas
fisttps
fs
push
iret
push
andl
sbb
or
jno
sub
ret
jnp
out
push
or
cld
push
leave
xor
push
jns
insl
mov
movsb
jns
movsb
pushf
das
jmp
movsb
scas
add
hlt
ja
mov
insb
popf
rcrb
test
dec
sahf
and
dec
lods
loope
jp
jle
cmp
xorl
xlat
stc
ds
out
mov
icebp
test
ja
mov
je
sbb
mov
repnz
pushf
sti
cld
cmpsb
or
xor
adc
roll
cmpb
adc
jnp
test
test
ss
dec
and
adc
aaa
inc
cmpsb
mov
xchg
addr16
sub
les
pop
cmpl
xor
ficompl
fcmove
fcomps
lds
loopne
out
mov
orl
rcll
mov
and
int3
jbe
stos
adcb
test
mov
fwait
xchg
int
inc
push
mov
xor
xchg
jmp
cs
xchg
pop
fbstp
xchg
negl
ja
pop
ret
int3
fstpt
inc
push
cmc
sbb
and
sub
pop
fwait
jp
aam
xor
cltd
mulb
addr16
int3
xchg
xor
jmp
and
inc
jecxz
jne
insb
in
cmpsl
jae
push
iret
js
sar
cmp
push
xchg
loope
scas
sti
es
test
push
ficomps
jns
insl
pop
arpl
popf
je
lret
mov
xor
leave
in
aaa
mov
scas
or
fdivp
in
inc
push
movb
push
icebp
xchg
movsl
pop
out
jb
xchg
scas
jne
test
stc
loopne
leave
adc
mov
mov
in
arpl
test
and
push
in
int3
jl
loope
mov
pushf
rorl
add
loopne
cs
sahf
jbe
inc
dec
dec
lods
testl
jle
dec
xor
add
arpl
aad
lret
int
leave
cmpsb
dec
int3
in
sbb
mov
xor
pop
test
sarl
cmp
test
imul
mov
mov
mov
add
add
scas
push
xchg
jbe
stc
insl
in
sti
mov
adc
dec
mov
stc
xchg
xlat
lds
scas
fists
rcl
cld
mulb
inc
out
sub
sbb
push
add
cwtl
mov
mov
ljmp
sub
xor
cmp
movsb
or
daa
stc
push
cmp
sahf
mov
sub
call
fsubrl
addb
movsb
jmp
sub
lock
sub
test
pop
inc
push
or
sbbl
mov
cs
jg
mov
in
pop
cmpsl
lods
or
sbb
or
and
icebp
dec
lcall
pop
rcl
mov
cmp
xor
push
push
repz
outsb
add
and
clc
and
scas
jns
add
test
xor
pop
fsubrs
sbb
test
cli
cmc
hlt
adc
fs
shrb
push
je
mov
jmp
and
gs
pop
inc
or
aad
jo
mov
sbbl
stc
inc
adc
dec
mov
cmpsb
or
rcll
fnsave
subl
addr16
stos
jp
dec
jnp
ret
inc
out
pop
adc
mov
cltd
and
fucom
dec
mov
cmp
push
in
xor
sbb
movsl
mov
les
lods
adc
dec
pop
jbe
icebp
insb
jmp
insb
jnp
sbb
pop
ret
les
scas
mov
jno
lock
sbb
sbbb
pop
add
pop
pushf
sub
js
inc
xlat
sub
dec
xchg
sbb
es
idiv
cs
jo
lds
hlt
adc
mov
shlb
ret
adc
or
lds
test
out
dec
push
xchg
inc
cmp
dec
push
sbbl
mov
pop
mov
cmpsl
shlb
aad
sbb
cmc
and
add
int3
test
and
daa
or
imul
or
ja
sbb
iret
mov
ds
jbe
imul
iret
mov
push
fdivrs
add
cmp
sbb
outsl
inc
int3
mov
daa
push
out
lea
insb
or
mov
mov
xor
in
into
cmp
inc
shl
aas
dec
fnsave
pop
cmp
pop
iret
sub
scas
mov
lret
dec
xchg
mov
add
cmp
fs
jecxz
mov
dec
and
sub
cmp
lret
pushf
add
outsl
in
push
xor
out
sbb
or
cmp
dec
mov
test
repnz
inc
xor
test
ja
test
jb
push
shll
loopne
jns
xchg
adc
lods
xchg
mov
adc
sub
fwait
xchg
faddl
stos
jge
jns
mov
fcompl
and
push
iret
test
mov
loope
je
jmp
je
icebp
pop
in
lods
push
rcll
out
and
andb
cld
cmp
mov
repnz
sbb
push
into
jo
les
adc
sbb
pop
mov
xor
std
stos
in
ret
sbb
cmpsl
leave
or
out
jp
lea
aam
sbb
mov
push
mov
ror
sub
call
ljmp
dec
out
pop
jmp
in
xor
out
mov
mov
lds
and
icebp
in
stc
xor
aas
xor
push
ret
call
int
mov
out
xchg
add
cmp
out
inc
cmp
stos
hlt
cmp
and
cmp
pop
mov
add
adc
insl
xchg
fwait
mov
lock
loopne
xchg
ds
inc
mov
fs
fsubrl
or
rcr
add
mov
cs
sbb
imul
dec
xchg
div
icebp
dec
push
cltd
sub
mov
mov
cmp
test
sub
adc
xor
ljmp
and
mov
jmp
int3
push
movsb
das
je
cmpb
xchg
mov
and
bound
sbb
xchg
xchg
dec
xchg
push
sbbb
mov
ds
stos
xchg
enter
sbbb
mov
mov
cmc
lret
lods
test
lcall
arpl
and
cmpsl
stos
mulb
out
inc
loopne
cld
and
mov
addr16
push
mov
dec
outsb
sbb
jg,pn
repnz
enter
sub
enter
push
jbe
push
xchg
lret
pusha
clc
sahf
bound
mov
imul
test
add
movsb
fcmovbe
jbe
sub
pop
push
out
cmpb
imul
push
add
pop
lods
ret
lods
iret
cmovnp
das
pop
dec
fisttpll
mulb
dec
xchg
xchg
push
sbb
leave
sarl
mov
imul
fcmovne
inc
adc
inc
aam
jno
into
lcall
cwtl
xchg
clc
push
daa
xchg
sbb
fs
insb
loop
out
mov
cli
into
mov
sti
repnz
popl
xor
call
ret
je
add
comiss
fdivrl
lret
push
dec
xchg
aas
movsb
test
fildll
sub
adc
aad
mov
in
xchg
outsl
ret
scas
mov
jl
mov
cmp
jp
fwait
test
fucomp
add
repnz
popa
adc
xchg
xchg
or
movsl
and
mov
push
es
scas
add
mov
xchg
movsl
sub
pop
xchg
sahf
xchg
cmp
mov
aaa
pop
out
pushf
es
push
or
mov
into
and
push
lret
out
add
fisubs
jns
pop
jo
add
stos
mull
imul
inc
lret
inc
xchg
ja
call
stos
and
pop
sub
push
ret
idiv
ret
ja
shl
cs
fwait
cli
push
lds
pop
stc
mov
loopne
sahf
les
or
adc
jge
cmp
pop
or
pop
out
ficoml
push
into
and
mov
iret
orl
jmp
jo
aaa
out
lret
xor
testb
addr16
popa
loope
mov
fwait
out
pxor
mov
push
lods
push
call
mov
repz
sbb
fsubrs
sub
mov
sub
scas
das
jne
fsubl
xchg
loop
lds
and
add
out
cld
ss
xor
lahf
lock
mov
je
push
adc
add
loope
popa
sbb
andps
stos
call
xor
cli
out
js
or
push
push
or
popa
xor
cld
cmp
jno
std
std
fcoms
jmp
jnp
jecxz
mov
xchg
sti
jmp
psrlq
test
clc
ljmp
dec
cmp
cmpsl
jl
jg
cwtl
les
test
inc
rol
movsb
push
push
and
mov
mov
ret
lods
ret
mov
lods
dec
pusha
mov
mov
fs
xchg
loope
sub
push
pop
in
neg
inc
lock
nop
push
imul
pop
cmpw
xchg
in
push
add
adc
pop
xchg
xlat
dec
test
mov
jmp
mov
inc
adc
pop
push
int3
sbb
pushf
sbb
enter
push
mov
push
daa
xchg
cmp
inc
and
jo
add
inc
push
adc
push
or
adc
in
push
add
dec
jecxz
mov
cltd
xlat
adc
xchg
stc
lret
mov
ja
ret
xabort
sub
bound
test
push
dec
cmp
jge
dec
pop
iret
sbb
mov
push
pop
ss
ficompl
push
dec
inc
mov
xchg
jne
mov
adc
lcall
push
push
mov
nop
test
add
in
js
repz
cmp
sti
in
loope
xchg
out
ficompl
stos
ret
in
and
xor
add
icebp
sub
dec
add
dec
pop
shlb
mov
push
sahf
xor
inc
fdecstp
lock
jmp
imul
sub
ljmp
out
sbb
cli
cmp
ret
dec
and
push
fs
stos
cwtl
lcall
int
cs
push
lret
lahf
push
jecxz
pop
cmp
mov
sbbl
inc
call
jl
rcll
push
cmp
dec
jmp
bound
xchg
pop
jecxz
pop
aad
andl
out
adc
mov
sub
or
sbb
test
xor
fildl
jge
mov
jg
adc
lds
mov
adc
fimull
fnstcw
push
repnz
inc
dec
cltd
jbe
cmp
into
pushl
lret
mov
mov
sbb
cld
push
fsts
push
xchg
inc
incb
dec
call
ds
pop
inc
sbb
mov
adc
sub
out
dec
leave
push
fmul
hlt
mov
lahf
cmpsl
aaa
push
jmp
out
outsb
shlb
aad
fs
adc
int3
jmp
pop
sarl
pop
je
int
test
movsb
dec
je
xor
jle
inc
ret
lds
mov
adc
sbb
pop
loope
cmp
ficoms
cmp
jae
sbb
scas
shl
and
mov
mov
push
xor
add
es
jno
sub
jae
icebp
pusha
fwait
and
jnp
fnstenv
jmp
cli
xchg
jo
jb
and
or
ficomps
sar
mov
mov
and
jp
aad
pop
in
aad
sbb
push
shrb
daa
add
ret
andl
stos
mov
leave
pop
adc
pushf
ret
lods
cmp
sub
push
divb
insl
out
or
in
dec
outsb
in
and
inc
int
add
xchg
inc
mov
lods
data16
add
cld
xchg
mov
jp
pop
push
insb
out
repnz
inc
lcall
outsb
adc
mov
jae
pop
out
mov
faddl
push
mov
lods
cli
ja
sub
rcrl
ljmp
pop
pop
pop
mov
lret
fildl
pusha
pop
mov
add
pop
loopne
sub
outsl
shl
mov
and
aad
jecxz
dec
shll
inc
xor
mov
jmp
pop
lret
leave
mov
int
xchg
orl
mov
test
das
dec
dec
into
pushf
int
cli
cmp
movsb
aaa
repz
dec
les
mov
jo
sbb
inc
cmp
lods
movsl
movsl
mov
jge
mov
ljmp
stos
sbb
fidivrs
xchg
sub
insb
faddl
popf
mov
push
in
jle
in
daa
xchg
scas
sarl
cwtl
jae
pop
mov
cmp
dec
mov
ja
push
outsl
adc
xchg
mov
jns
fwait
and
or
shll
mov
insb
movntps
mov
aaa
push
cmp
sbb
pop
cmpsb
sbb
jmp
or
inc
mov
push
pop
out
popl
ret
push
pop
std
xor
add
xchg
push
push
out
push
adcb
xorl
ds
lea
roll
cmp
lds
jmp
xchg
pop
pusha
lods
les
cmp
stos
dec
hlt
sahf
clc
test
loopne,pn
arpl
shlb
adc
inc
iret
lods
and
icebp
mov
or
push
pop
pop
stos
movsb
in
fs
or
mov
add
imul
lea
and
out
js
push
jno
shll
add
rcrl
movsl
pop
jb
lods
mov
sub
andnps
lret
inc
sbb
lret
cs
jmp
mov
mov
xor
daa
or
fimull
mov
mov
or
mov
scas
mov
rorb
cli
popa
cmp
icebp
mov
xchg
adc
mov
push
pop
test
movl
inc
push
and
pop
cs
mov
mov
out
repnz
movl
jmp
push
inc
pop
sub
iret
add
lods
mov
mov
xchg
stos
inc
push
repnz
pushf
mov
bound
mov
dec
mov
aam
inc
pushf
mov
mov
mov
imul
and
push
xchg
inc
inc
dec
orl
fisttpl
mov
pop
loopne
mov
outsb
lahf
dec
lock
outsl
sbb
inc
xor
lcall
out
hlt
cmp
outsb
push
sbb
sbb
inc
xor
sarb
jg
cwtl
push
xor
or
std
and
mov
pop
out
test
mov
ja
lret
sbbb
mov
lods
mov
rol
addb
and
cmp
xor
inc
mov
adc
inc
sti
cmp
and
sbbl
scas
jae
jle
jmp
into
mov
clc
scas
cmp
movsb
add
daa
pop
je,pt
cmp
call
sub
adc
into
dec
pop
leave
rorl
mov
mov
pop
pop
push
add
jo
push
cmp
dec
mov
js
pop
push
insl
testl
mov
pop
xor
sahf
jle
minps
popf
add
loope
ljmp
sub
adcl
scas
lret
push
mov
and
push
add
pop
mov
icebp
pop
ja
mov
aaa
gs
into
fsubrl
or
mov
outsb
stos
push
jns
inc
jns
mov
push
sbb
test
sarb
stc
xchg
es
jmp
mov
leave
fstp
enter
orb
lcall
sub
enter
mov
lea
jns
mov
sbb
arpl
ss
data16
arpl
xchg
test
mov
into
rcll
lret
pop
arpl
inc
pop
jns
fcmovb
inc
fdivrp
xor
mov
pop
das
mov
test
cli
mov
aas
mov
out
inc
ds
pmulhuw
mov
lahf
push
adc
outsb
mov
xchg
loope
mov
sbb
sarl
jbe
fildl
or
lods
jle
bound
shrb
and
pop
adc
repz
jmp
cltd
mov
fs
sti
sbb
or
push
mov
pop
loop
or
sbb
sbb
inc
mov
sbb
sbb
and
sbb
les
add
jne
mov
push
push
cmpsb
pop
cmc
ror
popa
mov
adc
ds
sti
sbb
ja
lods
mov
xlat
add
inc
in
lea
pusha
jg
and
add
mov
mov
sahf
push
xchg
sub
jl,pt
xchg
cmpsl
mov
lock
xchg
mov
pop
or
incl
movsl
jnp
or
xchg
xlat
loop
fwait
push
mov
add
jecxz
aas
shl
cmp
push
add
inc
bnd
shlb
dec
and
jne
mov
jnp
fists
add
mov
sub
and
pop
adc
jge
ja
xchg
jne
mov
popf
lret
incb
shll
jp
xchg
xor
cli
xor
repnz
jns
aas
imul
out
in
lret
mov
push
aas
dec
stos
dec
jbe
or
adc
push
daa
adc
aas
lret
or
push
dec
insb
movsb
sahf
xchg
or
push
dec
sub
jae
push
stos
sub
push
mov
lcall
aam
or
out
push
dec
in
sbb
pop
jg
cmc
int
bound
stos
xor
pop
push
setae
or
push
xchg
stos
mov
lret
push
lock
pop
std
add
jne
fstpl
mov
addr16
scas
mov
gs
loope
and
inc
adc
fwait
push
jge
mov
push
and
loopne
scas
and
xlat
inc
fdivrs
xchg
mov
out
or
test
or
xchg
lcall
faddl
es
sarb
inc
push
out
es
sahf
push
les
jmp
imul
cmp
mov
push
imul
xor
dec
lret
xor
mov
outsl
xor
pop
pop
test
inc
and
stos
sbb
sbb
cwtl
lock
adc
mov
inc
sub
out
lods
sahf
sbbl
orb
jmp
push
dec
sub
pop
imul
push
sub
cmc
leave
je
or
push
xchg
movsl
sbb
cwtl
insb
push
lods
sbb
add
jge
loop
mov
scas
test
out
fildl
lret
pusha
inc
push
adc
mov
push
int3
dec
outsb
mov
and
addl
ds
mov
pop
adc
sbb
lock
scas
dec
int3
lods
sbb
ds
aas
in
pop
icebp
sbb
mov
test
rorb
popa
out
in
mov
popf
ficoml
pextrw
dec
sbb
cwtl
ljmp
push
mov
and
dec
xchg
outsl
test
call
fs
aaa
mov
andb
dec
xlat
or
fcoms
mov
xor
push
xlat
test
cmp
push
sti
clc
push
out
jb
push
mov
daa
jge
inc
xor
std
push
imul
jns
cmp
in
jmpw
ds
sti
sarb
pop
dec
push
sub
push
lds
push
or
dec
into
or
pusha
sbbb
dec
xchg
test
rclb
add
std
fiadds
insl
bound
addb
sub
dec
sbb
push
push
mov
cmpsl
outsb
cmp
fisubs
icebp
rorb
adc
mov
mov
or
sub
aas
subl
leave
int
insl
mov
sbb
test
add
inc
mov
jb
or
cmpsl
orb
xor
sbbb
loop
mov
popf
sbb
inc
mov
inc
insl
xchg
push
in
xor
jg
dec
fs
mov
cmp
lcall
dec
les
push
aas
in
dec
dec
and
xor
imulb
dec
fisttpll
and
loopne
mov
mov
movsb
sti
mov
add
mov
shlb
out
lahf
dec
arpl
and
mov
ret
pop
push
dec
sub
sub
enter
xor
sbb
fwait
cld
jecxz
and
cs
sbb
pushf
sub
push
out
pop
push
fdivrs
sti
sahf
inc
or
jle
int
roll
out
shll
divb
sub
jle
mov
arpl
cmc
mov
subl
push
ja
jp
fs
mov
imul
das
jg
icebp
xchg
xor
in
pop
outsl
pop
icebp
aaa
mov
movsl
int
sbb
cmp
sbb
pop
jb
push
xchg
adc
mov
xlat
imul
pusha
and
inc
cmp
adc
fnstsw
shrl
fiaddl
outsl
mov
xchg
sbb
xchg
xlat
cmpsl
mov
xchg
xchg
push
inc
sub
mov
jo
sbb
aas
sbb
push
and
jp
adcb
sbb
adc
or
shl
adc
repz
or
cld
push
insb
shl
xor
dec
popf
inc
and
dec
sbb
lcall
xchg
bound
jmp
cld
adc
mov
mov
cmpl
jmp
out
xor
popa
push
out
sti
sub
mov
cmp
xchg
add
out
mov
jbe
adcb
cld
mov
lds
sub
push
mov
les
dec
or
scas
sub
jb
mov
scas
mov
push
jbe
repnz
adc
icebp
xor
mov
outsb
push
dec
mov
aas
xlat
xor
pop
adc
pop
lea
and
lahf
popf
sub
cmpsb
xchg
test
jge
leave
mov
add
int
rcll
dec
out
inc
add
fldcw
filds
mov
stc
cmpsl
sbb
in
sub
sti
ja
insb
xor
sti
jmp
and
cld
sub
xor
xchg
add
bound
imul
shrl
sbb
inc
lods
jg
push
mov
aam
mov
adc
jp
push
dec
jecxz
in
xor
fcmovnb
sar
inc
dec
fadd
adc
cmp
pushf
push
sbb
push
adc
lret
push
lods
scas
sbb
jnp
jb
ret
add
aaa
rcr
mov
or
stos
mov
repz
jo
add
lods
xchg
leave
stos
xchg
xor
inc
or
cli
fsubrl
inc
insl
fs
add
adc
add
or
aam
and
mov
lods
test
outsl
inc
lahf
scas
add
add
adcb
sub
cld
inc
push
push
xchg
add
inc
xchg
mov
xchg
mov
mov
sub
out
mov
xlat
sub
jmp
out
sub
push
add
divps
xchg
xchg
xor
roll
inc
out
stc
dec
mov
call
shrl
push
int3
xor
in
call
and
add
xorb
mov
xor
lcall
mov
jecxz
mov
mov
das
or
sbb
fldcw
loope
cmp
jmp
lods
sbb
in
lret
test
fwait
in
ja
js
mov
add
ret
or
or
addl
fs
jmp
mov
popf
jp
xchg
dec
xor
dec
out
push
int3
sbb
ficoms
fistpll
mov
or
push
and
je
daa
or
mov
insb
xor
cmp
aaa
xorb
dec
std
mov
pushf
and
nop
cmpsl
je
mov
mov
bound
inc
rorl
push
inc
sbb
sbb
dec
lods
icebp
mov
xchg
cli
aam
pusha
loope
test
movsl
adc
mov
call
xchg
lret
or
sub
insb
sub
cmp
repz
or
loope
sbb
insb
dec
and
sbb
jno
popf
sar
mov
mov
ljmp
adc
xchg
das
scas
xor
out
jg
add
sub
sub
insb
mov
fmuls
insl
jb
pop
add
cwtl
insb
ret
jo
jbe
lods
jmp
mov
int
jl
cmp
mov
loope
mov
xchg
or
jle
daa
lcall
xchg
adc
aas
or
ja
mov
xchg
or
adc
dec
push
cmpsb
subb
pop
cli
inc
or
aas
add
outsb
jp
out
push
pop
fisttps
cmova
aas
jl
or
outsl
inc
sti
cld
inc
aad
lock
jecxz
test
cmp
cmp
mov
out
push
jne
add
call
jecxz
cmp
sub
sbb
pop
mov
mov
scas
sub
add
pop
mov
adc
jle
xchg
jmp
insl
ds
pop
inc
mov
scas
pop
and
pop
fwait
sbb
mov
enter
push
add
mov
mov
xor
outsl
pop
mov
fxch
dec
push
and
jne
mov
inc
lods
popf
dec
rcl
add
inc
xor
pusha
dec
and
and
push
adc
arpl
movsb
xor
clc
repz
adc
mov
loope
mov
or
fcoms
xchg
xorl
jae
xor
sbb
loope
and
inc
mov
add
leave
cmpsb
jo
int
inc
and
shrl
push
jge
xor
insl
arpl
mov
push
cmp
add
in
sub
pushf
and
mov
mov
mov
addb
rol
mov
xor
or
xor
movsb
rclb
mov
xor
sbb
ret
xchg
dec
jle
lea
je
push
xor
pop
cmpsb
jne
push
aas
pop
dec
iret
ucomiss
jp
adc
fildll
test
or
aas
in
ret
lea
enter
test
mov
in
testl
or
ret
xchg
mov
xor
mov
jecxz
lcall
lods
mov
sbb
lcall
ret
popf
mov
insb
ljmp
fnstcw
or
mov
mov
ret
xchg
sub
repz
cmp
adc
mov
or
mov
dec
mov
leave
sbb
sub
adcb
inc
sub
sahf
lahf
push
shrb
lods
mov
cmc
push
enter
push
pop
test
mov
xchg
inc
jle
xchg
jb
mov
lock
adc
mov
test
push
jl
sub
mov
pop
adc
mov
cli
dec
push
xchg
add
xchg
cmpsl
xorb
fdivl
aad
mov
lea
mov
cmp
jp
gs
sbb
mov
xor
add
inc
test
xchg
ficomps
jmp
jo
adc
scas
push
dec
or
or
push
lcall
pop
adc
mov
xor
inc
inc
repz
fdivl
sub
xor
mov
les
loop
jmp
xchg
cmpsb
mov
rcrl
dec
push
mov
add
xchg
xchg
pop
push
test
mov
aam
dec
out
aam
adc
movsl
negb
pop
lods
mov
or
sarb
lods
jmp
movsl
aaa
add
xor
pop
movsl
jmp
and
movsb
jle
push
xchg
pop
add
lcall
fwait
pxor
inc
divl
rorb
push
in
test
push
cmp
sti
repnz
addr16
stos
shrb
call
test
fisubrl
scas
push
push
adc
xchg
ror
fcoml
aad
cltd
loopne
lea
pop
dec
fldcw
sbb
jns
movl
mov
mov
inc
mov
mov
fmuls
les
push
xor
inc
mov
push
inc
mov
adc
cmp
scas
lcall
xchg
mov
push
inc
ret
cli
cmp
outsb
sub
mov
lret
insl
mov
popf
ljmp
leave
int
into
packssdw
pop
push
pop
push
les
cmc
sub
push
flds
fstpt
push
in
inc
xchg
test
add
repz
fucomip
xchg
cmpsl
sbb
int3
test
rorb
cs
pop
xor
scas
lods
jmp
pop
jo
fcmovbe
fcompl
add
jno
sbb
or
xor
lods
xor
xchg
hlt
bound
sub
push
clc
or
ss
or
in
daa
push
and
push
pop
or
mov
xor
xchg
dec
jecxz
aaa
xchg
sub
nop
in
and
xchg
cs
mov
leave
xchg
dec
fidivrl
out
push
in
movsb
lcall
mov
inc
cmp
xchg
jp
repnz
ret
or
cld
popa
mov
stos
sbb
mov
push
mov
mov
and
mov
iret
cs
and
push
dec
mov
xor
dec
add
das
int3
imul
add
inc
notb
push
out
sub
or
test
cs
mov
popa
aad
stos
dec
or
les
cmpsb
add
into
lahf
or
call
bound
leave
xchg
cmpsl
mov
xchg
shlb
and
je
pop
push
xorl
mov
mov
xor
cmpsl
addr16
shrb
mov
aas
insb
cmp
stos
repnz
sbb
sbb
imull
xchg
cli
fistpll
push
repz
sbb
pop
cmp
in
sbb
xchg
loop
dec
outsb
movsl
mov
xchg
fs
push
add
cmpsl
jecxz
fistl
inc
std
vmwrite
dec
arpl
shll
inc
ficomps
sub
mov
ja
pop
cmpsl
mov
jl
sub
jbe
jo
aad
inc
push
loopne
xchg
data16
inc
sbb
mov
pushw
roll
enter
xor
add
js
addr16
cli
sbb
js
aas
in
aaa
daa
xlat
mov
push
divb
push
clc
rorb
ds
sub
notl
or
sub
stos
cmp
out
loop
dec
push
or
jmp
cwtl
jp
dec
stos
jmp
jge
arpl
pop
shrd
and
jmp
test
mov
cmpsl
inc
imul
popa
and
pop
xchg
adc
les
lcall
push
out
xchg
xchg
lock
inc
mov
enter
mov
xor
pop
loope
sub
push
mov
push
jle
dec
stos
push
xor
lret
adc
fbld
adcl
xchg
dec
sar
xor
ljmp
add
push
add
cmpsw
psrlw
imul
sub
pushf
lret
out
sti
or
cwtl
dec
inc
and
adc
jae
jne
not
or
push
loope
push
test
add
push
lcall
std
call
mov
cli
adc
cmpsb
stos
loope
xor
les
enter
and
popa
cmp
jmp
pop
sbb
dec
sbb
cmp
lcall
popf
inc
add
in
je
filds
jo
cmp
xchg
cmpsb
pop
ret
ljmp
imul
arpl
push
jns
jb
inc
in
popa
mov
cmp
fisttpll
outsl
imul
jge
add
pop
cmp
cmc
int3
lea
mull
mov
insl
adc
mov
or
sub
ss
gs
fisttpll
in
fwait
nop
mov
mov
pop
sbb
pop
and
inc
repz
daa
fstl
dec
nop
and
flds
pop
push
stos
sbb
gs
shrb
test
jecxz
jl
notb
mov
sub
out
insb
jle
dec
lahf
imul
cmp
stos
push
out
test
ret
jo
jnp
push
pop
push
add
xlat
fisttpl
je
shr
mov
cwtl
lock
cmp
pop
xchg
adc
cmp
inc
xchg
fldt
movsl
pop
ja
insb
ret
pop
in
ljmp
icebp
mov
pop
jmp
pusha
ja
jp
push
inc
js
and
jne
or
lock
xchg
push
fsubs
aad
cmp
inc
outsb
or
pop
or
mov
pop
jle
inc
cmpsb
imul
mov
xlat
jmp
pop
sub
push
out
movsl
push
test
inc
les
das
aas
lret
pop
mov
pop
dec
add
outsb
testl
jno
mov
sub
stos
test
jb
leave
dec
fldcw
mov
pop
popa
cmp
mov
stos
mov
inc
cmp
pop
add
stos
sub
dec
lock
push
add
sahf
jp
aam
or
rol
xchg
imul
inc
addb
push
mov
add
mov
sub
repnz
xor
cmovge
mov
ss
stos
and
xchg
lods
pop
fisttpll
xchg
mov
imul
insb
adcb
cmpsb
mov
call
cs
cwtl
sti
sbb
or
sti
xchg
inc
loopne
test
scas
dec
clc
sub
into
int
pop
jp
fistps
xchg
addr16
mov
jns
adc
repz
mov
push
call
jl
mov
aas
ret
lret
mov
fldcw
or
es
cmp
push
rorb
in
jnp
cmpsl
jl
dec
sbb
out
fs
mov
bndldx
int
lret
pop
mov
mov
lahf
shll
mov
fwait
jno
xor
dec
lahf
in
sub
cltd
dec
mov
insb
add
cltd
ret
and
mov
mov
sbb
es
cwtl
cmc
test
dec
add
inc
fmuls
leave
dec
push
jne
aaa
cmp
mov
inc
sub
les
sub
repz
mov
mov
addr16
stc
add
shl
rorl
inc
adc
jbe
fistpll
mov
lahf
shrb
mov
pop
add
mov
xchg
mov
cwtl
fiadds
mov
repz
pause
sub
je,pt
adc
popa
testl
inc
stos
mov
and
add
test
xchg
stos
adc
arpl
sar
mov
or
in
pop
mov
cli
sbb
popa
mov
cmp
dec
push
in
out
pop
addr16
cs
std
mov
scas
std
push
push
xor
add
sbb
xor
hlt
mov
adc
loopne
mov
add
pop
jb
add
out
pop
cwtl
adc
jg
jnp
jne
into
test
cmp
jmp
mov
lret
cmp
sub
das
add
xor
outsb
or
mov
mov
clc
movsl
js
sub
std
shl
jbe
inc
push
and
xlat
leave
mov
push
lock
cli
inc
pop
or
decb
add
pop
scas
jmp
xor
fstps
in
test
xchg
xchg
movl
loope
mov
fcompl
push
js
test
out
sbb
scas
sti
jae
jae
sub
jne
and
jmp
add
xchg
mov
or
test
xchg
cld
adc
push
mov
jecxz
inc
push
mov
je
jle
xor
cmp
jle
dec
xchg
test
pop
lret
int3
cmpb
push
sbb
pop
add
and
ljmp
pushf
roll
mul
cmpsl
jo
fiadds
mov
dec
outsl
mov
clc
scas
sub
dec
mov
jno
sbbl
jp
jbe
mov
dec
outsl
mov
jecxz
lock
xor
mov
pop
mov
jg
mov
sbb
sbb
sub
pop
and
pop
mulb
hlt
enter
adc
add
dec
pop
push
xor
inc
or
dec
xchg
mov
sbb
push
ret
jnp
roll
adc
dec
sub
dec
bound
jecxz
cmpsl
mov
orl
inc
or
inc
mov
pop
add
sub
mov
mov
cwtl
out
mov
aas
mov
outsb
fldt
popa
adc
dec
cmp
fs
sbb
xlat
nop
mov
pop
adc
push
adc
jmp
mov
mov
pop
jne
pushf
fisubl
inc
mov
daa
mov
es
fsts
ret
adc
outsb
iret
ret
mov
jnp
and
insl
stc
xchg
push
pop
mov
push
cmpsb
iret
mov
dec
ret
sbb
push
and
xchg
pop
add
xor
rcrb
add
iret
mov
fcmovu
fistps
stos
fscale
rcrb
jbe
add
outsl
add
mov
fs
or
movsb
loop
test
stos
daa
scas
sbb
mov
aaa
scas
xchg
or
ss
cld
push
mov
lahf
sbb
sar
cmp
rcrl
adc
addl
pop
cltd
dec
ror
pop
fdivrl
testb
add
cmp
decl
cld
outsl
aad
hlt
sbb
cli
dec
inc
rcll
jp
test
or
dec
les
cli
imulb
std
dec
jecxz
or
cltd
push
mov
mov
cli
aad
hlt
sbb
icebp
jl
cmp
inc
push
cmp
shll
bound
push
jne
mov
mov
lods
fwait
dec
iret
ja
enter
fistpl
jle
fldcw
and
mov
jne
ljmp
shll
call
mov
cwtl
aas
jle
pop
lea
dec
mov
stos
shrl
jl
pop
push
in
pop
xor
jae
lret
adc
jns
adc
sbb
mov
jp
inc
mov
pop
repz
sbb
mov
cmp
out
adc
push
or
out
in
sub
pop
int3
das
and
jl
data16
xor
loope
add
push
mov
jbe
adcb
mov
inc
aam
into
dec
sbbl
pop
int
stos
sub
stos
and
lods
into
fldl
inc
mov
jle
mov
jb
ret
imul
hlt
mov
addr16
or
ret
cltd
iret
xchg
adc
pop
pop
ror
out
dec
cmc
cmc
dec
or
sbb
jle
mov
dec
dec
adc
push
push
mov
sbb
jp
inc
mov
push
or
bound
jmp
xchg
jl
pop
test
clc
pop
out
inc
fldcw
lcall
out
test
gs
jg
lcall
cmpb
sub
xor
ss
fistpl
insb
pop
mov
les
pop
adc
gs
xchg
push
cmp
std
outsb
mov
sti
mov
jg
or
xchg
push
in
out
dec
std
insl
mov
xorps
or
mov
cmp
fldcw
sub
std
insl
int3
rcrb
sahf
mov
cmp
jl
pop
cmp
pop
mov
addl
out
pop
scas
lahf
roll
sub
sbb
mov
movsb
adc
cmp
outsb
xor
push
jno
jns
push
mov
lret
mov
cmp
in
mov
jge
add
sub
push
adc
add
inc
jmp
lds
lods
mov
cmp
imul
enter
cmp
xchg
addl
into
mov
int
mov
xor
mov
outsl
push
cmp
add
nop
pop
and
ret
pop
xor
cltd
testb
sub
push
adc
and
cmp
push
sbb
pop
fists
add
daa
dec
jbe
xor
orb
test
and
mov
push
mov
stos
roll
jnp
mov
in
es
add
iret
adc
ljmp
mov
fwait
mov
test
lret
ss
test
sub
imul
lret
je
jae
popf
add
xor
mov
jbe
dec
cmc
mov
rclb
jmp
out
das
add
adc
push
or
sbb
push
xchg
mov
push
pop
jge
pop
and
jge
dec
add
sbb
xlat
sub
adc
not
xchg
das
das
sbb
jns
mov
aam
sub
into
popa
xor
lods
inc
pop
repnz
mov
jmp
std
mov
std
out
push
hlt
vpshufhw
movsb
test
jp
int
pop
pop
and
inc
mov
sub
fsubs
sub
ret
subb
ret
fidivs
cmp
movsb
into
push
aad
in
mov
or
inc
in
aam
xchg
add
repz
out
cmp
sub
decb
lods
mov
mov
subl
add
mov
daa
push
rcrb
sbb
cld
enter
mov
int
pop
jl
add
inc
imul
pop
adc
xor
ret
mov
int
movsb
sub
or
jno
cwtl
mov
ljmp
dec
mov
fistps
lds
sub
xchg
lahf
mov
pop
fs
pop
adc
nop
sbb
aas
outsl
jle
hlt
inc
mov
daa
adc
call
jbe
mov
stos
xchg
test
iret
mov
daa
dec
mov
inc
sbbl
xchg
jp
fcmovu
sahf
and
out
or
js
or
mov
gs
pop
mov
ffree
pusha
lods
push
mov
push
cmp
leave
xchg
movsb
enter
xor
dec
stos
and
faddl
adc
aaa
out
orl
add
jo
pop
xchg
out
push
push
jae
addl
add
stc
aas
push
rcr
jnp
ja
pop
sub
les
ror
pop
les
mov
pop
mov
jne
fcmovb
or
in
jno
lret
mov
jecxz
pop
je
xor
movsb
test
sbb
pushf
das
sbb
daa
ret
leave
cmpsl
add
out
flds
fiaddl
mov
cmp
icebp
shrb
lods
lods
pop
addl
cmpsb
push
dec
sbb
addr16
sti
pop
xchg
xlat
cmp
in
push
mov
pushf
sbb
ja
jmp
mov
or
mov
in
xchg
in
mov
sub
out
call
and
fisubrs
lods
loope
add
imul
scas
int
andl
test
pop
mov
imul
shlb
xor
lret
jp
mov
test
out
fsubrs
hlt
or
stos
and
cmp
xchg
adc
cli
mov
jecxz
jmp
data16
add
mov
dec
push
xchg
je
lret
andb
repz
jle
cmpsb
lret
jp
cli
inc
daa
nop
xchg
sbb
sbb
mov
add
lea
or
ja
inc
cli
pushf
insb
push
and
adc
cs
dec
dec
lds
mov
sub
aam
shl
push
jle
imul
push
pop
sub
xlat
dec
xchg
jb
push
xchg
std
mov
cmpsb
mov
adc
xlat
fwait
push
stos
test
sbb
gs
push
jne
andb
sbb
lret
cs
lret
adc
jp
dec
inc
fcoms
lcall
dec
out
push
cmp
cmp
mov
pop
shrb
int
sub
sbb
and
sahf
daa
inc
xchg
pop
rcrb
fmuls
pop
xlat
mov
cmp
andb
test
jmp
push
sub
jp
cli
jle
sbb
enter
lea
cmpsb
movl
xchg
or
mov
in
push
jge
cmp
outsb
jl
cli
stos
push
sub
stos
inc
fwait
imul
sbb
xchg
jmp
aad
pop
ljmp
in
mov
add
data16
inc
add
and
mov
xchg
and
lahf
ret
mov
or
pop
leave
or
addl
rcll
xchg
xchg
arpl
mov
xor
popa
roll
push
mull
icebp
mov
xchg
sbb
enter
rcl
aam
push
xchg
in
and
iret
adc
mov
lcall
fisubl
arpl
mov
repnz
push
inc
adc
adc
repz
mov
out
pushf
ret
or
nop
cli
lock
sub
fwait
std
mov
xchg
or
inc
cmc
std
mov
pushf
xchg
imul
je
xor
cltd
out
jge
stos
dec
arpl
sub
shll
jnp
mov
push
je
sbb
in
push
push
sbb
pop
mov
out
fs
out
mov
ret
movsl
repnz
mov
cmc
mov
clc
sbb
jns
fcoms
stc
repz
cmp
aad
mov
adc
fcmovu
sub
mov
mov
dec
xor
jmp
cmp
ret
rclb
mov
das
pop
inc
cmp
sub
mov
jno
adc
xchg
jecxz
xchg
dec
movsl
sbb
inc
jae
xchg
clc
fsubrl
dec
test
loop
nop
pushf
jle
scas
push
loopne
mov
fsubs
push
mov
jle
push
daa
movsb
push
xchg
outsb
jae
or
adc
or
jp
mov
add
push
jb
xorb
iret
rclb
adcb
mov
jns
addr16
jge
in
cmovp
mov
test
and
inc
loop
mov
or
in
mov
fwait
and
call
push
cld
rolb
jecxz
and
or
lret
adc
mov
push
dec
and
jae
xlat
push
mov
mov
loop
int
mov
add
out
lcall
int
or
lret
sbb
sahf
xchg
in
cmp
sbb
adc
cmp
and
fsts
or
mov
push
inc
mov
faddl
xchg
sbb
mov
sbb
push
xor
cmp
lret
mov
push
lahf
hlt
sti
and
adc
les
mov
xor
sqrtps
dec
mov
pushf
fistps
or
mov
jo
mov
xlat
idiv
and
ds
in
push
cmc
push
fcmovnbe
inc
cmpb
fcmovnu
cmp
stc
sub
mov
adc
hlt
movsl
mov
pushf
xor
jmp
shll
cmp
cmc
popw
imul
xchg
lods
or
push
mov
push
mov
fs
shll
pop
std
adc
in
call
mov
fadds
mov
jmp
jecxz
loope
inc
xchg
icebp
data16
ja
addr16
pop
or
xor
cli
pop
mov
mov
push
mov
cmp
cmp
mov
adc
inc
orl
jae
dec
push
and
adc
jle
das
decl
push
mov
cmp
imul
mov
pop
iret
and
sub
ljmp
rsm
arpl
xchg
jns
adc
push
arpl
xchg
cmp
repnz
xchg
mov
cmpsb
jbe
mov
mov
push
repz
cmpsb
dec
push
cld
pop
cs
push
mov
dec
inc
imul
and
sbb
sbb
or
fsubl
das
and
shll
push
cltd
pop
inc
mov
pop
dec
dec
push
nop
jmp
xchg
jo
cwtl
aas
add
test
outsl
push
sbb
icebp
jae
jns
call
xor
xchg
adc
pop
jecxz
xor
dec
lock
dec
mov
mov
in
dec
xor
xchg
adc
and
pop
das
aaa
mov
sar
or
sahf
jg
jne
clc
push
push
stos
xchg
ja
push
lahf
aad
dec
mov
xchg
inc
jp
xchg
cmp
mov
in
dec
loope
stos
dec
push
cmp
or
jnp
lahf
push
or
int3
and
pop
sbb
dec
xchg
add
popf
cmp
ret
jbe
xor
sbb
adc
jnp
push
push
mov
inc
jns
in
cmc
inc
sbb
and
movsb
das
shrl
out
jp
push
sub
scas
xlat
push
mov
adc
push
lods
in
adc
gs
or
sti
out
push
sbb
popf
sahf
push
mov
jo
pop
in
imul
adc
out
lods
mov
fimull
pop
ret
pop
fdivp
add
test
jo
xchg
shrl
lcall
sbb
adc
aas
xchg
mov
cmpl
dec
dec
pop
mov
xor
jmp
xchg
insb
das
shll
out
call
ljmp
push
adc
and
xchg
mov
jns
out
dec
inc
xor
out
mov
outsl
cmp
sti
push
repnz
inc
pop
les
out
push
icebp
rcl
negb
insb
dec
and
out
or
sbb
add
stc
lret
nop
pop
xor
fldt
loopne
xor
inc
dec
push
fdivr
bnd
stc
leave
push
add
dec
mov
in
jmp
jb
cld
pop
xchg
inc
stc
int3
sbb
sbb
frstor
fiadds
xor
fucomp
jle
cld
lret
orl
xor
mov
aaa
bound
ret
inc
ss
test
test
add
gs
ror
push
cmp
cmpsl
mov
or
les
inc
jl
test
cmp
sub
cld
add
loope
sbb
popa
divb
int3
aam
scas
cmpsb
xlat
cmp
mov
dec
adc
insl
pop
rolb
fdivrs
jmp
call
dec
cmpsb
arpl
sub
ja
shll
enter
nop
dec
lret
cld
pusha
sbb
mov
inc
pop
mov
mov
idivl
outsl
mov
clc
inc
push
imul
pop
adc
push
pop
in
pusha
jle
xor
pop
cmp
popf
icebp
jae
add
inc
sub
xchg
repnz
adc
push
ds
iret
mov
xor
test
push
xor
lea
bound
inc
jo
lea
ljmp
or
mov
cmp
pop
jnp
jecxz
test
mov
cltd
push
cmp
sub
ss
push
push
mov
addr16
push
adc
cwtl
add
ss
mov
pop
lea
hlt
push
incl
and
je,pn
mov
int
dec
repz
jae
lret
xor
in
sub
inc
xchg
daa
filds
add
add
jb
xchg
xor
mov
jne
or
into
ss
xor
xor
pop
mov
adc
mov
cmp
sbb
pop
rcll
push
rcll
out
repnz
xchg
and
es
and
imul
ja
lea
insb
add
repz
dec
and
fiaddl
jl
mov
push
es
adc
scas
push
stos
outsl
repnz
cmpsb
es
adc
imul
mov
cmp
mov
iret
idiv
loop
cmc
into
fwait
pop
repz
jle
mov
sub
xchg
fistps
into
sbb
fiaddl
xchg
pushf
cltd
lds
jae
jp
in
lods
ljmp
mov
ds
ror
pusha
or
dec
and
mov
xlat
and
sti
pusha
or
movsl
fisubrs
into
mov
testb
lods
mov
nop
xchg
mov
push
movsb
jbe
xchg
push
mov
cmp
push
aad
jbe
xor
imull
add
adc
mov
mov
mov
push
dec
inc
rcll
inc
scas
sti
push
mov
popf
or
aas
mov
adc
jno
movsl
js
nop
pusha
add
push
pusha
inc
cli
call
cmp
sbb
cs
cmp
aam
popa
imul
icebp
sbb
jbe
leave
mov
xchg
lea
pop
or
or
movsl
xor
lret
sbbl
jl
and
test
aam
adc
mov
lahf
sbb
push
sub
add
adc
aas
in
mov
mov
mov
ret
in
cli
inc
mov
xor
imul
insl
and
cmp
or
ret
daa
sbb
or
mov
fidivrl
inc
imul
or
lock
jae
mov
inc
mov
stos
push
adc
sbb
data16
mov
imulb
or
xor
and
sbb
jl
pop
push
cmp
jb
clc
dec
jmp
fwait
lods
in
cmp
in
adc
cmpb
mov
push
prefetch
dec
mov
aas
sub
push
mov
jle
loop
pop
enter
jmp
cld
inc
lods
xchg
arpl
sub
das
inc
inc
mov
or
add
cmp
pop
jo
aad
cs
push
xor
push
inc
or
cmp
repnz
aam
jns
dec
mov
mov
imul
test
add
jno
loop
mov
jo
les
jg
ljmp
push
inc
decb
sbb
mov
out
xchg
xor
mov
xlat
adc
outsl
aaa
mov
jno
cmp
fsubrs
mov
mov
xor
sub
insb
sti
push
stos
mov
sub
shrd
out
dec
stc
sbb
cltd
push
push
cs
ljmp
shll
je
xor
es
nop
movsb
xor
int
adc
dec
mov
dec
fcmovnb
or
push
int
hlt
add
mov
fsub
call
jg
jle
xchg
mov
lods
xor
pop
add
cmpsb
sbb
movsl
dec
sti
xchg
std
ja
mov
scas
shll
cmp
loope
push
mov
mov
cltd
dec
xor
and
jg
xor
mov
fldcw
sbb
sub
mov
mov
or
push
test
shl
pcmpeqw
jl
pop
adc
pop
imul
inc
rcll
pop
jno
xchg
test
fwait
sbb
mov
jp
in
ljmp
fcomps
mov
stos
xorb
push
cli
roll
or
push
adcl
pop
or
lea
xchg
xchg
es
daa
sbb
adc
lret
pop
jmp
and
repnz
xor
sbb
mov
inc
xlat
pop
jae
add
jmp
jecxz
aam
lods
pop
sbb
js
xchg
push
int
iret
aam
and
xchg
push
in
push
in
jb
idivb
ds
cmp
mov
movsb
daa
cwtl
jbe
mov
ret
jbe
dec
shrl
pop
pop
jmp
push
mov
sbb
nop
jae
sahf
jl
pop
rcrb
mov
xor
fcoms
mov
insb
pop
call
or
loope
jp
test
pop
mov
and
and
popf
subb
mov
dec
inc
mov
add
stos
ss
outsb
sub
xchg
push
xorb
sub
dec
xchg
test
iret
mov
sahf
fcmovnu
xchg
dec
or
mov
pop
call
sahf
fs
or
jno
mov
or
sbbb
in
int
imulb
mov
mov
in
sbbb
sbb
stos
mull
hlt
rcr
inc
or
dec
mov
cld
pop
push
enter
testb
mov
std
mov
dec
mov
pop
repz
push
out
test
or
adc
scas
and
pop
xor
cld
push
orb
jmp
jge
stos
int3
mov
cmp
add
jns
or
jmp
cmp
add
add
pop
push
sub
test
xchg
sub
insb
jmp
movsb
jp
mov
sbb
or
popa
xchg
mov
mov
andl
xchg
clc
mov
xchg
fnstenv
xor
xchg
or
jge
frstor
xlat
lods
pusha
in
mov
loopne
dec
inc
add
lcall
sub
rolb
shlb
lret
or
sbb
pusha
xchg
pop
in
arpl
fisttpl
mov
add
fcoms
rcrl
mov
jg
or
mov
jae
movntps
add
dec
fwait
mov
sub
mov
dec
adc
cwtl
pusha
dec
sub
bswap
xlat
test
ja
xchg
dec
cmp
adc
aad
and
jmp
mov
or
pop
dec
imul
pop
cmp
cmp
data16
std
cld
loope
push
movsb
xor
jns
arpl
add
call
int
mov
xchg
jae
hlt
mov
js
xchg
pop
xor
mov
out
xor
ret
xchg
aas
arpl
das
stos
inc
pop
in
dec
adc
jno
pop
mov
in
xchg
push
and
sarl
aad
or
iret
add
mov
test
cmpsb
in
cmp
ljmp
add
sbbb
pop
push
sbb
loopne
add
mov
pop
inc
mov
cmp
sahf
repz
jae
and
xlat
jle
out
or
cmc
fisubrl
mov
xchg
xor
push
iret
jl
dec
les
je
jnp
test
xchg
add
das
ret
xor
es
imul
inc
xor
mov
dec
ret
js
repnz
mov
mov
and
mov
sub
cltd
xchg
add
jnp
pop
sbb
mov
dec
fcmovb
into
lahf
mov
loop
out
test
sbb
popa
mov
xor
xor
inc
xor
lahf
sub
or
or
mov
pop
jbe
jbe
shr
test
loop
rcl
dec
dec
adc
sbb
mov
iret
mov
jnp
lcall
in
sbb
pop
repnz
sbb
adc
inc
insb
push
incl
cmpsb
enter
pushf
add
mov
pop
cmp
pusha
cmpsb
cmp
mov
leave
leave
add
sub
test
pop
mov
mov
cs
adc
pop
pop
sub
adc
cmpsl
lret
add
cmpsl
mov
addr16
sbb
mov
mov
xchg
mov
mov
jb
pop
sti
lods
mov
mov
andb
and
stos
das
jg
jo
out
push
aaa
aad
jo
and
into
mov
roll
push
fs
mull
je
xchg
insl
push
loope
or
cs
pop
add
sahf
andl
inc
push
and
push
mov
lahf
ret
mov
pop
shr
xor
xchg
out
cwtl
adc
lock
inc
lock
pop
idivl
pop
testb
add
pop
fsubrl
incb
cmp
jle
push
imul
into
call
pop
xchg
push
push
popa
or
add
dec
mov
out
hlt
mov
imul
mov
scas
cmp
jae
pop
insl
push
adc
insl
test
sub
xchg
stc
pop
lret
movsl
pusha
pop
leave
out
mov
in
rcr
cmp
sbbb
xchg
cmp
cmp
jb
and
int3
call
push
adc
push
clc
inc
mov
xor
fiadds
dec
stc
arpl
in
dec
imul
rclb
daa
loopne
aad
aas
pop
dec
cmp
rol
jno
pop
pop
test
stos
out
sbb
adc
ja
shll
jae
ss
jp
xor
xchg
bound
mov
aas
mov
mov
nop
sub
pop
imull
xchg
and
mov
adc
movsl
mov
mov
push
jnp
inc
dec
pop
scas
xchg
lcall
inc
stc
push
call
fwait
rcll
push
stc
add
mov
adc
cli
jmp
aas
mov
jecxz
dec
pop
mov
jle
inc
dec
pop
repnz
mov
movsb
ss
pop
rcll
popa
cmc
sbb
test
loopne
iret
add
rorl
inc
xchg
mov
in
shll
negl
add
ficompl
mov
add
stos
jno
sahf
out
into
shl
rcr
fbstp
shll
xchg
sbb
cmpsb
pop
xor
lock
test
roll
push
repnz
test
lods
lret
pop
fcmovnb
sbb
adc
popa
ds
adc
inc
mov
mov
int3
sub
out
xacquire
or
push
adc
inc
stos
or
es
mov
les
mov
or
scas
dec
sti
out
cmpb
xorl
pop
popf
lahf
sti
push
xchg
loop
sub
push
orb
sahf
outsl
shr
cmp
mov
out
jge
jnp
pop
mov
dec
int
push
decl
jmp
lahf
cmp
mov
jb
insl
sbb
in
fwait
push
sub
movb
lock
jne
iret
imul
mov
rcrl
and
fnsave
mov
inc
in
cmp
aaa
ljmp
repnz
iret
xor
push
push
cmp
adc
imul
das
scas
mov
xor
fsubs
lea
xchg
addb
std
sub
dec
push
xchg
adc
addl
mov
inc
dec
lods
and
add
pop
xchg
out
arpl
pop
sub
mov
push
pop
out
push
lcall
and
cli
cltd
rcrl
inc
cmp
es
lds
jnp
test
push
cmp
rorl
clc
pop
mov
rol
testb
insl
in
push
adc
leave
jg
and
push
pop
cli
clc
lret
mov
scas
stc
loop
cmp
push
lret
outsl
xchg
in
adc
xchg
fdecstp
mov
sti
pop
mov
icebp
add
push
dec
jl
out
mov
xchg
pop
icebp
shrl
sub
jno
test
jno
ret
mov
jge
mov
pop
push
xor
decb
data16
jge
dec
in
or
ficompl
stos
les
sub
into
aaa
mov
fsubrs
adc
cmp
xchg
imul
mov
mov
adc
pop
xchg
in
jg
jns
test
add
jmp
cli
out
or
sti
popa
jecxz
mov
xchg
and
mov
addr16
dec
cmp
push
je
in
das
sub
imul
mov
push
and
lds
sub
lret
lret
xchg
cmpsb
scas
rcll
inc
std
rcrl
pop
pop
imul
and
stos
pop
and
int
addr16
push
or
sbb
fistpll
stos
mov
xchg
mov
push
mov
and
jns
lret
push
xchg
mov
scas
jg
fwait
sub
and
mov
imul
cwtl
adc
in
mov
sbb
xchg
sbb
sete
mov
pop
ljmp
stc
arpl
pop
lods
and
and
jge
jns
cmp
jbe
clc
aam
jbe
push
or
cwtl
inc
inc
rcll
push
xchg
mov
in
nop
and
imul
add
cwtl
xor
in
fcompl
push
divb
es
lret
lds
mov
shld
cmpsl
xchg
mov
movsl
movsl
les
cmp
loopne
orb
jmp
or
leave
cmpsb
push
pop
sub
aaa
add
push
add
pop
mov
shrb
sub
aam
and
shl
aam
pop
mov
jg
adc
aaa
cmc
push
scas
enter
jns
jno
mov
or
mov
data16
sub
mov
xchg
or
add
cli
mov
gs
push
adc
xchg
test
xchg
add
adc
jb
popa
rcl
jl
out
xchg
pushl
jp
rol
sub
sub
mov
icebp
push
mov
outsl
sub
inc
inc
movsb
pop
xchg
inc
pop
xchg
mov
xchg
push
fisttpll
fnstenv
lea
in
dec
ret
dec
sbb
and
mov
xchg
push
test
in
lock
mov
fimull
test
add
adc
icebp
in
and
dec
xchg
idiv
xchg
push
loope
sti
ja
sbb
mov
sti
add
into
push
pushf
je
inc
jo
inc
fs
xchg
xlat
mov
cs
inc
cmc
nop
mov
insb
mov
pop
mov
jmp
jmp
push
add
loopne
inc
cmc
fwait
icebp
aad
outsl
push
test
push
decb
mov
pop
cmpsb
scas
cld
jecxz
jbe
outsl
loopne
ds
loop
mov
in
cld
pusha
into
and
insl
push
add
fmuls
cmc
adc
mov
addr16
popf
cmp
adc
pop
mov
mov
mov
dec
cmc
lods
dec
mov
mov
dec
lods
fistpll
fbstp
popa
sbb
cmp
daa
clc
sbb
shlb
mov
mov
mov
imul
xor
inc
pop
jne
jns
lcall
inc
ror
data16
repnz
mov
iret
or
aaa
mov
dec
mov
inc
mov
movl
jnp
and
test
lock
fnsave
lea
shll
xor
int
push
repnz
pop
mov
cs
mov
scas
sub
pop
js
jae
outsb
sbb
dec
pop
lahf
inc
mov
popf
clc
lea
ror
jae
sbb
mov
imul
or
adc
pop
and
dec
mov
dec
arpl
jl
xor
xchg
adcb
loopne
imul
jmp
vcvtps2dq
or
xor
aas
cmp
lahf
mov
and
mov
mov
adc
mov
and
mov
lahf
fbld
les
loop
dec
call
xchg
cmc
mov
add
das
cmp
adc
enter
add
leave
mov
or
arpl
lods
ds
jle
add
fidivs
adc
push
add
shlb
andl
xor
test
popf
pop
lods
push
mov
xchg
cli
jo
adc
leave
jnp
jnp
out
adc
rorl
sbb
sub
and
pop
pop
xor
adc
mov
rcr
scas
mov
fnstsw
or
stos
mov
icebp
popa
popl
iret
data16
js
movl
or
stos
lock
push
push
pop
sub
adc
mov
dec
fbld
sahf
or
adc
xchg
adc
jmp
mov
fcomp
int3
das
fnstenv
lods
paddusb
adc
cmp
lret
cmp
pop
negl
push
std
aam
xchg
push
enter
push
jns
aas
lret
xchg
push
dec
xlat
jle
scas
dec
xchg
add
mov
xchg
mov
icebp
out
mov
movsl
mov
repz
inc
out
loope
xchg
popa
xor
inc
arpl
stc
cmp
cmp
lds
test
xor
imul
test
inc
mov
or
stos
adc
jns
fidivl
mull
lods
cmpsb
mov
fstl
pusha
mov
mov
push
insl
inc
push
mov
pop
or
rorl
ret
mov
ret
imul
scas
test
aaa
push
push
stc
in
ja
and
push
pop
das
jno
repnz
in
push
int3
pushf
jmp
push
mov
shlb
out
inc
push
jg
cmc
outsb
sbb
sbb
cli
aas
sahf
in
cld
xor
shrl
imul
es
mov
push
and
mov
xchg
adc
inc
mov
iret
cld
popf
inc
cmp
in
xchg
adc
scas
insl
lahf
jo
pop
inc
shll
push
stos
mov
mull
pop
cmp
mov
add
mov
repnz
xchg
dec
and
imul
inc
adc
sbb
insb
pop
jle
loop
in
call
and
xchg
outsb
mov
imulb
loopne
das
inc
jecxz
add
dec
in
enter
mov
out
jecxz
out
daa
or
insb
lret
sub
nop
adc
test
adc
std
stc
out
sbb
xchg
lds
push
insl
or
jge
pushf
js
lea
adc
in
int3
or
mov
js
and
fs
stos
dec
jns
iret
out
mov
sahf
add
cmp
shll
dec
cmp
bound
aas
inc
fldl
mov
sub
fcomip
mov
pop
leave
dec
cmp
xor
jg
adc
xchg
leave
test
sbb
pop
inc
add
adcb
lds
adc
shl
mov
mov
mov
mov
pop
cltd
or
xor
jmp
ss
xchg
outsb
jge
pushf
repz
sub
push
cmpsb
cltd
or
mov
sbb
cmpsb
mov
dec
repnz
mov
mov
adc
es
inc
xchg
sub
mov
xchg
dec
sub
mov
hlt
adc
or
pop
loope
or
lea
adc
and
sbb
xor
fwait
xchg
mov
imul
jae
add
sub
and
out
xchg
cmp
mov
pop
push
push
sbb
mov
cmpsl
or
iret
xchg
jae
mov
cmp
sbb
les
or
sub
xor
xor
jmp
cmp
xchg
rcrb
nop
push
lea
jmp
and
mov
mov
call
inc
cmpsb
cmc
xchg
enter
cmpsb
push
mov
adc
clc
inc
sbb
fwait
mov
cs
xchg
push
mov
and
pop
mov
shll
fwait
hlt
mov
pushw
ja
lods
dec
mov
ss
pusha
shr
ss
add
cmp
adc
mov
mov
out
push
adc
in
xor
hlt
add
lock
mov
incb
push
xchg
xlat
enter
imul
mov
pop
xor
sub
adc
adc
rcrl
cwtl
and
pushf
mov
repnz
cmc
jno
repz
jbe
sub
mov
repnz
adc
jg
lret
fwait
mov
repnz
and
sub
mov
dec
rcll
in
push
xorb
pop
mov
inc
jbe
mov
push
hlt
int3
mov
sub
mov
sub
mov
dec
jge
leave
xchg
call
loop
cmpsb
les
pop
xchg
pop
or
and
mov
push
inc
dec
imul
push
or
aaa
jecxz
sub
xor
add
scas
inc
and
shlb
icebp
loope
or
ja
adc
jl
bound
mov
adc
inc
or
fwait
into
out
rcl
ret
cs
mov
cmpsb
ret
call
cmc
out
jmp
adc
xchg
cmp
imul
std
stos
dec
jl
sbb
pop
pop
and
out
mov
dec
shll
push
gs
inc
movsl
cmp
lret
stc
adc
xchg
xor
or
rorb
mov
bound
dec
adc
sbb
int3
faddl
mov
push
cltd
mov
xor
dec
stos
sub
clc
xor
rcr
lret
push
dec
aam
cmp
js
fisubs
add
subb
add
sub
iret
sub
ret
cmp
testl
jge
std
decl
leave
inc
mov
dec
mov
or
adc
dec
xor
addr16
rol
hlt
mov
not
mov
rcrb
into
iret
int
push
inc
aaa
push
sub
mov
mov
mov
xchg
sub
fdivrl
add
in
push
out
incb
test
jns
sub
inc
xor
fbstp
sbb
jb
cmp
andb
push
push
scas
cmpsl
sti
cs
sahf
dec
loop
fs
xchg
jno
movsl
notl
and
and
jle
or
mov
mov
dec
add
mov
mov
outsb
and
clc
xor
shl
lods
adc
addr16
and
mov
fs
stos
xchg
lds
mov
mov
icebp
and
adc
sub
jecxz
mov
das
int
std
add
in
ret
push
shll
test
sbb
push
cld
pusha
sub
je
stos
inc
inc
outsb
or
mov
scas
je
fisubrl
add
cmp
mov
sub
iret
test
mov
mov
rcl
test
sub
dec
pop
arpl
sbb
lcall
inc
pop
jae
nop
fwait
lcall
xor
or
stos
fst
mov
das
testb
cmpsl
out
push
aaa
out
loopne
add
mov
sub
jge
frstor
hlt
addb
pop
add
rcll
sbb
add
fwait
adcb
cmp
fsubs
and
jg
push
sbb
and
iret
jge
fisttpll
xchg
enter
mov
and
jns
xor
movl
jl
in
fcmovb
mov
rorl
ja
cmpsl
pop
sub
dec
movsb
or
lods
shrl
jnp
int3
jbe
out
leave
xchg
add
xchg
jg
shl
cmp
orl
push
pop
or
cmp
mov
cmpsb
fdivrs
in
lea
std
jg
add
andl
mov
mov
mov
push
mov
mov
mov
loop
mov
scas
xchg
lcall
ret
insb
cld
ret
lret
and
jecxz
cmp
roll
cmpsl
mov
movsl
pop
pop
pop
clc
sbb
lahf
insb
push
je
popf
mov
adc
stc
dec
sub
popf
push
push
insb
in
jns
outsl
sub
aad
push
rdtsc
xchg
call
cmp
shl
adc
mov
pop
sbb
hlt
pop
jmp
inc
iret
dec
jmp
rcrb
xor
ljmp
hlt
mov
sbb
daa
and
ficoml
out
dec
ja
enter
ds
arpl
sub
fsubs
cmp
gs
push
dec
leave
pop
xchg
push
push
cli
int
test
push
arpl
xor
bound
insl
lods
push
mov
jb
push
dec
sbb
or
ror
or
mov
pop
pop
scas
xchg
inc
cmpsb
cli
ja
pop
cmp
scas
movsb
cld
jg
nop
sbb
and
push
mov
pop
jl
add
in
in
jg
outsl
test
ds
mov
lcallw
inc
mov
push
inc
mov
or
push
push
cmovg
sbb
mov
mov
into
fsubl
fisttpll
lcall
and
movsl
mov
nop
movsl
in
daa
popf
imul
mov
pop
bound
sub
cs
pushf
cmp
push
push
add
pop
sbb
jecxz
insb
pushf
aaa
sbb
repz
ret
jae
adc
and
fnstcw
push
xchg
insl
push
or
enter
fsub
lock
addr16
mov
shrl
in
rep
push
bound
push
mov
mov
ret
int3
mov
arpl
or
out
push
loope
insl
push
or
lock
iret
cmpsb
pop
dec
jbe
paddw
add
je
lahf
sbb
or
mov
mov
mov
cld
ljmp
clc
push
mov
push
xchg
fsubp
or
sbb
mov
mov
insb
data16
pop
aam
lock
jno
movsl
mov
cmpsb
in
scas
pop
lahf
mov
mov
pop
cltd
cmp
ja
pop
das
arpl
fidivrl
mov
or
push
push
mov
pop
pop
jns
cmpsl
adc
mov
sub
insb
enter
cmp
ds
fs
push
aas
cs
sub
mov
sbb
cli
mov
addr16
out
pop
pop
jecxz
push
push
cli
cmp
outsl
add
cmp
repz
push
std
or
faddl
cld
and
jl
pushf
negb
adc
cwtl
inc
mov
popf
push
jae
int3
sub
sbb
scas
popf
push
push
hlt
rclb
test
rcl
rorb
pop
xor
fucomip
jbe
jbe
in
jmp
jmp
cli
divl
clc
and
push
xchg
xor
mov
mov
in
inc
ss
ficomps
in
sub
cmp
mov
dec
cmc
in
xor
cmp
sbb
js
out
mov
sbb
cld
jnp
cld
or
cmp
jl
inc
adcb
inc
jp
and
push
push
inc
or
clc
jmp
inc
int3
add
popa
shlb
js
cmp
cmc
icebp
out
or
adc
shrb
adcb
fcoml
adc
xor
cmpsl
ljmp
dec
adc
sbb
int3
dec
pop
leave
push
jg
pop
into
dec
ret
add
mov
gs
jmp
push
cld
das
jbe
xchg
setno
popf
mov
repnz
push
imul
std
add
sarb
out
imul
stos
rorl
shl
or
subl
xlat
inc
mov
fnstenv
mov
inc
fnsave
imul
xchg
stos
pop
loopne
mov
add
hlt
call
and
pusha
ja
loope
or
out
inc
lods
jbe
pop
loopne
dec
je
jecxz
insl
xchg
out
inc
pop
add
push
test
sub
mull
popf
or
mov
outsb
inc
movsl
popf
mov
cmp
fwait
cmp
or
add
in
dec
fsts
cli
jbe
inc
clc
push
outsb
loope
mov
rclb
xor
mov
xchg
push
mov
imul
add
dec
je
sub
sbb
push
adc
cmp
sub
cltd
adc
xor
stos
daa
mov
pop
add
add
rcll
loopne
mov
mov
fisttpll
je
das
sbbb
dec
adc
inc
adc
xor
test
pop
cmp
ljmp
jp
repz
and
add
and
mov
jmp
jno
fistpll
adc
ret
adc
push
jb
aas
loopne
xchg
cs
fistl
div
movsb
test
insl
cmc
sub
jb
jnp
lret
test
hlt
out
jno
clc
dec
jb
hlt
mov
fs
mov
jno
out
and
fdivr
js
test
jle
jne
cli
jge
addr16
pusha
js
popf
xchg
cmp
xchg
aam
mull
adc
jecxz
test
mov
push
mov
cmpsb
das
rcr
aaa
loopne
dec
das
and
aam
fsubs
and
mov
aas
scas
sbb
mov
xchg
or
sbbb
ficoml
dec
sub
fistps
add
outsl
sbb
xchg
jmp
loopne
xor
inc
dec
lea
aaa
cld
sub
in
mov
dec
cmp
mov
add
stos
jecxz
dec
push
pop
push
bound
sti
dec
call
adc
aam
sub
mov
xchg
mov
clc
out
cli
int
lret
push
adc
dec
outsb
mov
inc
xchg
cmp
mov
add
sub
shlb
orl
les
xchg
imul
rolb
mov
sbb
inc
bound
insl
push
jmp
or
hlt
pop
sub
inc
gs
push
in
lods
mov
sbb
add
aam
lods
lret
push
notl
je
int
push
or
lahf
hlt
mov
test
cli
mov
clc
stos
push
xor
movsb
lcall
iret
sub
mov
add
pop
jg
out
xor
mov
pop
and
mov
cmp
dec
frstor
dec
add
call
xchg
lret
data16
inc
imul
es
mov
out
xor
pop
repz
setb
mov
aas
repnz
in
mov
sbbb
call
insl
inc
psllq
stc
fidivs
addr16
push
arpl
cmp
es
test
push
jp
add
pop
pop
inc
sti
jnp
mov
mov
push
adc
sub
mov
fs
add
test
push
jbe
test
in
outsl
push
and
adc
pop
xchg
inc
xchg
rol
cmc
cmp
pushf
jno
mov
xor
mov
out
ss
dec
jmp
icebp
aam
sarb
imul
push
out
mov
roll
clc
cwtl
imulb
xchg
xor
pushf
fdivrl
in
xchg
inc
into
ret
mov
test
flds
cltd
movsl
popa
ja
xchg
pop
loope
push
and
cmpsl
stos
push
into
into
inc
push
in
test
pop
push
or
cli
imul
fisubs
repz
mov
cmc
adc
mov
test
adc
dec
mov
dec
mov
jecxz
or
add
addl
outsb
cmp
pop
jl
stos
es
ljmp
xchg
das
ljmp
push
lds
mov
out
mov
and
xor
jle
xlat
dec
int
xor
xchg
stos
push
sub
and
rcll
test
pop
testb
jge
xor
add
aaa
ljmp
pop
push
mov
sbb
inc
shll
add
rcrl
cmc
jg
lods
scas
cmp
adc
mov
adc
mov
or
sahf
push
dec
sub
xor
stos
hlt
pop
mov
ljmp
jno
fcmovnu
stos
jae
mov
shrb
or
inc
inc
testb
push
xor
je
cltd
cmp
push
sub
mov
test
aaa
mov
dec
push
sbbb
imul
xchg
movsb
or
fcmovnbe
dec
and
and
mov
testl
aad
cmp
push
push
jp
rcl
adc
cltd
dec
fwait
mov
orb
xchg
nop
adc
hlt
cmp
pop
sub
push
fdiv
mov
test
pop
das
pop
js
pop
push
pop
lods
jbe
in
push
iret
cltd
fs
xorb
shl
lret
dec
lock
dec
pop
and
mov
movsl
sahf
lods
mov
inc
sbb
dec
push
cli
lods
out
mov
fidivl
inc
shr
lds
mov
and
insb
clc
sub
sbb
cmp
push
lret
pop
inc
es
idivb
inc
lcall
lods
adc
cmp
testb
popa
mov
in
inc
or
jae
sbb
repnz
pushf
mov
shrl
stos
das
jb
mov
adc
fstpl
out
rol
or
movsb
mov
cli
jb
jb
mov
add
sbb
loopne
aaa
jmp
push
dec
mov
js
xor
push
je
int3
push
mov
adc
imul
or
jae
xor
mov
mov
push
mov
or
jge
push
movsb
in
fwait
xchg
push
ss
insl
sub
stos
leave
icebp
in
dec
fidivrl
push
mov
ffreep
push
and
sub
enter
scas
mulb
and
mov
lea
dec
add
pop
inc
dec
ljmp
xchg
add
hlt
icebp
stos
outsl
inc
xor
inc
pop
test
jno
movsb
push
jb
mov
mov
lret
popf
popf
and
push
test
in
inc
imul
inc
test
lds
sub
in
or
icebp
insl
pop
insl
xor
inc
por
pop
stos
or
pop
jae
mov
pop
push
lahf
mov
insb
push
pop
sub
mov
in
adc
aad
or
cltd
loopne
in
aaa
cmpsl
movsb
mov
popf
add
sbb
sub
mov
pop
leave
das
jno
mov
jbe
pop
fsts
cmp
aaa
stos
rolb
pushaw
insb
outsl
mov
mov
ja
out
push
push
fcom
int3
gs
push
dec
fisubs
jge
repnz
inc
stc
adc
push
cmp
mov
jb
jb
dec
and
int3
iret
jmp
shll
sub
and
ljmp
and
cmpsb
imul
dec
pop
movsb
adc
stos
sub
adc
push
test
sti
lods
sbb
dec
popf
call
popf
in
lods
dec
insb
aam
mov
je
loope
jns
aad
mov
or
notb
lock
pop
xchg
stos
jmp
imul
pop
hlt
les
pop
ds
sbb
loopne
aaa
adc
adc
mov
cli
mov
cmp
dec
xor
push
dec
lods
enter
lods
sbb
adc
gs
popf
xlat
fistps
int
inc
xor
repz
sti
and
fisttpl
inc
pop
int3
rclb
out
jne
and
outsl
inc
xor
subl
pushf
outsb
push
dec
inc
imul
push
push
jmp
sub
cmpsl
dec
cltd
mov
aaa
aaa
cli
decl
in
push
int3
in
ret
out
and
rol
cmpsl
mov
pop
stc
or
jb
and
ficoms
in
pop
sahf
test
filds
aad
iret
jns
stos
sbb
xchg
mov
xchg
xor
dec
imul
je
cltd
or
leave
and
sbbl
shll
sub
and
movb
stc
adc
xchg
adc
ja
inc
testl
xchg
adc
cmpsb
loopne
and
mov
aam
sti
sbb
in
data16
sbb
cmc
pop
lds
dec
popa
test
jp
sahf
push
xchg
mov
xor
scas
add
stc
jle,pn
pop
outsl
stos
sub
ds
mov
adc
test
movsb
movsl
pop
mov
loop
adc
jbe
pop
mov
lods
lret
pop
mov
jp,pn
lods
int3
add
cmp
xor
cmp
sbb
pop
ja
clc
ret
adc
xchg
cwtl
adc
pop
inc
inc
popa
xchg
popa
jmp
leave
shrl
jmp
mov
cli
xchg
insl
subl
enter
xchg
iret
fbld
movsb
shrl
test
lock
sbb
add
scas
sub
clc
rclb
xorb
pushf
js
rcl
out
ror
mov
push
loope
push
icebp
or
shll
jb
jl
inc
in
push
mov
insl
pop
push
and
and
cwtl
pop
cmp
std
stc
dec
loope
cmpl
neg
dec
cmc
pop
push
mov
mov
negl
and
or
clc
cmc
mov
adc
cli
orl
mov
and
hlt
dec
mov
mov
mov
imul
mov
sahf
aad
add
mov
stos
mov
mov
out
js
inc
add
add
mov
aad
or
fcomi
adc
dec
inc
negb
xorb
and
push
sarl
daa
add
imul
pop
leave
pop
scas
loope
push
push
rorl
jle
dec
pop
fs
int
mov
xor
xchg
hlt
mov
mov
jbe
sbb
call
lret
mov
insb
mov
in
xor
cmp
imul
sbb
pop
cmp
sbb
and
mov
fimull
xchg
dec
or
mov
xchg
dec
xor
cmp
pop
lds
sub
fidivs
cmpsb
in
push
hlt
pop
add
mov
and
rclb
insb
lcall
push
jmp
arpl
push
xor
cld
or
dec
cltd
pop
jnp
ss
inc
mov
test
xchg
int
pop
mov
mov
dec
mov
sub
mov
jnp
aas
loop
cmp
repnz
popf
and
add
inc
ja
aam
xlat
jae
jg
xor
dec
aam
cltd
xchg
and
fwait
pushl
cmpsb
lret
xor
xor
out
or
ja
push
xchg
and
push
xor
jno
mov
cld
jmp
stc
inc
inc
rolb
push
add
mov
ds
mov
inc
and
sahf
rep
mov
xchg
add
sbb
mov
aam
mov
inc
and
insb
icebp
js
loope
test
ds
push
sbb
js
adc
int3
lods
jns
fcmovbe
jb
xchg
or
dec
push
sbb
pop
enter
dec
cmpsb
sbb
mov
popa
jne
and
movsl
test
fs
jns
and
popf
push
repz
dec
icebp
leave
mov
jmp
repz
pop
xchg
xor
cmp
fwait
punpckhbw
andb
fimull
push
adc
pop
xchg
imul
xor
js
scas
xchg
clc
scas
aas
bound
push
fisubl
mov
pop
inc
mov
fsubl
in
fmuls
push
lret
inc
adc
scas
pop
xchg
sbb
lds
pop
xchg
adc
mov
xchg
mov
inc
inc
mov
dec
mov
lret
mov
scas
mov
loop
out
sbb
xor
les
les
cmp
mov
jl
or
pop
hlt
add
add
in
add
dec
loop
insb
jmp
add
call
pop
jns
enter
popa
jmp
xor
iret
sub
addr16
sarl
xchg
inc
mov
sahf
or
inc
inc
pop
pop
sti
xchg
addr16
xor
mov
adc
jne
arpl
cmp
pushf
dec
sbbb
inc
dec
rorb
hlt
mov
fs
xchg
adc
xor
inc
sbbl
mov
jne
not
pop
gs
mov
push
shlb
xchg
sub
ret
mov
xor
out
cmpsb
movsl
sbb
jns
add
add
push
mov
jno
inc
repnz
xchg
in
jns
dec
xchg
jle
sbb
adc
xor
and
mov
insl
mov
jns
bound
push
arpl
lret
fwait
xchg
enter
xchg
iret
mov
dec
lcall
ret
xchg
fdivl
jne
pop
clc
loopne
adc
mov
cmp
cwtl
inc
pop
repnz
sub
or
cmpsb
add
xchg
sar
add
lds
cli
push
sar
ret
shlb
fadd
shl
div
xchg
sub
cmc
das
mov
adc
xchg
jnp
daa
mov
mov
daa
jns
push
cltd
shl
pop
out
repnz
sub
test
and
sub
jmp
mov
adc
sbb
cmp
rolb
mov
mov
je
or
bound
mov
scas
daa
dec
sbb
push
imul
mov
sub
push
out
cmovb
fwait
nop
push
push
in
mov
xchg
jl
aad
mov
mov
jbe
mov
mov
pop
int3
sub
pop
data16
shlb
push
inc
clc
sbb
push
pslld
cmp
sbb
addr16
sbb
call
lods
fidivl
push
mov
cmp
out
mov
sbb
inc
adc
mov
jp
mov
fadd
add
lcall
cmp
sub
fucomi
popf
stc
xchg
sub
ja
rorb
pop
xor
dec
aam
js
ss
jg
int
jnp
leave
fwait
movsb
shll
lea
push
pop
push
mov
cmp
inc
mov
or
in
inc
dec
mov
test
and
sbb
stos
lahf
pop
pop
cld
inc
subl
xor
mov
sub
or
mov
das
fs
mov
shll
rcrl
adc
addr16
mov
ret
sbbb
into
outsb
mov
adc
xchg
movsb
adcl
dec
je
clc
fimuls
pop
push
dec
push
mov
fnstcw
xchg
push
jnp
or
rorl
ds
sbbl
mov
pop
dec
outsl
arpl
rorl
mov
inc
sub
inc
or
sahf
sub
aam
and
xchg
mov
inc
js
mov
shrb
rorl
add
pop
popa
push
outsb
mov
pop
push
test
test
xlat
scas
cmpsb
sbb
lock
int
repnz
sahf
cmpsl
adc
sbb
xchg
lret
loop
mov
shl
imull
xor
pop
add
mov
push
icebp
push
mov
cltd
jge
xor
lds
cli
jae
mov
mov
out
nop
test
lret
shrl
dec
xor
testl
clc
add
push
pop
jl
lcall
popf
jno
rolb
xor
or
mov
lods
jecxz
pop
mov
mov
mov
push
inc
mov
int
enter
enter
dec
ret
iret
insl
daa
pop
std
out
jae
push
xchg
insl
sub
mov
repnz
cwtl
sub
in
fnstsw
sbb
loop
mov
sub
mov
jnp
add
xor
mov
pop
cmp
add
out
pop
xor
push
das
jl
push
mov
in
sti
push
outsl
push
outsb
test
xchg
mov
and
lods
and
sarl
pop
add
sti
jo
inc
push
loopne
fs
add
mov
add
sbb
pop
mov
aad
cld
jae
ds
int3
push
or
sub
das
mov
jp
mov
sbb
addl
imul
adc
mov
push
sbb
sbb
pushf
push
jmp
or
mov
push
fdivs
ret
mov
or
mov
roll
sub
je
cs
inc
andb
out
cltd
mov
sub
xlat
jg
adc
add
bound
test
out
in
test
dec
pop
push
add
cmpsl
jmp
and
or
aaa
filds
ds
mov
xchg
inc
cmpsl
add
dec
mov
popa
in
xor
fucomip
dec
loope
inc
xor
loopne
stc
mov
mov
mov
rcrb
mov
jns
lcall
repnz
popf
stos
gs
in
cs
shrb
idivb
inc
ds
cwtl
xlat
pop
out
push
jecxz
push
and
pop
mov
lret
data16
sub
mov
repnz
rcrl
or
push
pushf
movsl
out
mov
adcl
xchg
xor
xchg
push
sbb
cs
testb
lods
jbe
mov
stc
in
xchg
mov
pop
mov
sub
jns
push
or
adc
popa
sbbb
push
or
subb
icebp
push
movb
add
add
int3
ret
aad
push
cwtl
rorl
pushf
outsb
mov
and
scas
xchg
jmp
jmp
orps
hlt
ret
cltd
inc
in
jb
mov
loope
loopne
das
mov
adc
add
vphaddbq
xor
xchg
ljmp
mov
dec
divb
xchg
pusha
iret
adc
push
sbb
xor
cmp
ret
inc
jl
add
mov
into
inc
cmp
push
gs
dec
mov
das
cmpb
lcall
sti
cmp
loope
loop
push
fldenv
sub
les
adc
mov
movsb
cwtl
stos
and
fbld
lret
aam
jne
or
je
cs
lcall
adcl
into
lea
and
adc
call
push
insl
mov
mov
int3
push
repnz
jmp
add
out
pop
popf
movsl
push
popa
test
cmp
arpl
mov
out
xchg
or
in
push
sbb
push
test
inc
loope
loopne
das
js
pop
in
adc
push
out
adc
jecxz
or
jecxz
inc
mov
push
pop
cs
or
cs
jbe
push
push
push
mov
jg
jg
dec
mov
lahf
inc
arpl
push
cwtl
lock
inc
or
sti
or
stc
jae
mov
test
aad
js
adc
or
pop
lret
imul
test
pusha
sbb
add
xchg
mov
dec
imul
xchg
jle
dec
adc
dec
fidivl
or
or
pusha
out
es
adc
adc
inc
aaa
fwait
cld
int
mov
jno
dec
jmp
push
arpl
dec
adc
fstp
movsb
fldenv
fisubrs
xchg
inc
mov
daa
jno
mov
xchg
gs
lret
ret
cmp
adc
notl
hlt
push
mov
sbb
mov
xor
gs
testl
cli
mov
or
or
jge
int
mov
hlt
xchg
and
ljmp
hlt
dec
test
in
mov
arpl
cwtl
je
addr16
pop
fs
fidivl
addl
in
pop
rcrl
xchg
push
lret
lahf
lcall
nop
sub
stos
mov
add
dec
add
inc
fadd
inc
push
out
xor
pop
inc
rcrl
fwait
repnz
shll
inc
dec
imul
mov
jae
xor
jmp
adc
pop
shlb
lods
push
mov
lea
sbb
push
in
movlps
sbb
outsl
in
jle
mov
aam
mov
xor
neg
addr16
aam
fstps
in
es
js
mov
adc
dec
int
jge
pop
pop
sub
aas
lret
jnp
sbb
bound
stos
movsb
mov
mov
and
scas
cmp
inc
pusha
es
aas
fsubs
stc
in
ficompl
mov
fsubp
sti
ds
lods
lods
fiadds
cmc
cmpsl
xchg
pop
push
aas
gs
jbe
jae
loop
inc
add
xchg
lock
mov
in
inc
wrmsr
mov
pop
aas
arpl
dec
insl
cmp
pop
xchg
lcall
test
xor
push
lret
test
push
pop
je
inc
mov
xlat
push
in
imul
mov
inc
movsb
sub
jl
fdivrs
scas
cmp
xlat
jbe
cltd
mov
jae
lods
aam
movsl
xor
mov
iret
pop
stc
mov
mov
cmc
inc
sahf
xchg
pop
out
and
shll
movsb
dec
mov
in
cmp
inc
fisubrs
rorb
stos
mov
or
xchg
push
shll
push
pushf
stos
std
dec
sbb
loop
jnp
dec
adc
push
xor
cmp
out
or
jle
stos
xor
cmp
pop
jae
xor
xor
push
fcoml
adc
inc
inc
fwait
jae
xchg
xchg
pop
lret
cmc
jge
inc
cmp
dec
dec
movsb
mov
out
aam
cmp
dec
and
xor
jno
stc
rcr
pop
sbb
push
xchg
push
sbb
call
xor
xor
std
xchg
mov
cltd
loope
jle
loop
mov
out
jge
xorb
out
std
add
lcall
mov
inc
jbe
icebp
adc
xchg
cld
mov
xchg
cmpsb
cmp
sub
ss
push
cmpsl
icebp
subb
int
loope
mov
push
popa
js
or
movsl
dec
and
cmp
hlt
sahf
dec
and
push
mov
ret
imul
stos
mov
dec
popf
das
std
rclb
aas
jge
pop
sahf
add
js
xlat
test
jo
add
xchg
xchg
push
push
cmp
cmp
mov
int3
mov
mov
adc
mov
inc
stos
jns
enter
das
test
testl
jo
hlt
enter
fildl
ficomps
fstpl
push
imul
dec
sub
cmp
icebp
mov
ljmp
daa
lret
loop
ficoml
add
mov
loop
add
push
imul
xchg
shll
mov
jnp
daa
xor
or
adc
in
out
pop
mov
cwtl
and
in
adc
or
inc
push
add
popf
mov
pop
dec
xor
mov
and
cmc
aam
jecxz
int3
lcall
lret
ljmp
rcll
jo
mov
fimuls
dec
movsl
test
imul
imul
test
pop
sub
cli
pop
push
xor
outsl
jnp
lock
xchg
aam
add
out
push
xlat
scas
jp
cwtl
pop
fidivl
pop
push
leave
cmc
cmp
jns
push
icebp
dec
test
insl
js
into
repnz
lods
xor
xchg
sbb
dec
xor
or
sbb
and
jnp
add
inc
int3
jne
aaa
std
popf
mov
into
xchg
sahf
mov
fwait
sti
pop
mov
mov
sub
in
dec
mov
dec
jmp
push
std
jl
push
cmp
jne
push
sbb
lret
sbb
stos
cmp
jmp
mov
jp
cmc
adc
nop
std
icebp
icebp
pusha
out
decb
adc
or
pop
cltd
pop
out
jb
sbb
mov
sbb
adc
jl
arpl
repnz
test
and
push
push
js
in
popf
and
xchg
jg
jl
aam
pop
jmp
jo
or
adc
push
pusha
cmp
push
dec
pop
out
sub
add
enter
add
add
sub
insb
cs
mov
jb
cmpsl
xchg
add
adc
mov
adcl
data16
rorb
mov
cmp
jl
popf
sub
out
aam
add
dec
adc
pushf
dec
or
mov
push
stos
mov
inc
test
xor
imul
sub
lds
jno
in
lea
sbb
xor
fildl
ret
aad
and
insl
push
repz
sub
or
adc
xchg
pop
xor
sbb
sti
out
decb
mov
insl
push
or
test
lds
mov
xchg
pop
and
adc
mov
sbb
or
leave
mov
cmp
xchg
jb
in
pop
repnz
in
popf
and
dec
les
dec
xlat
pushf
xchg
and
sub
test
lret
sub
lea
mov
pop
popa
arpl
pop
lret
cs
or
mov
xchg
roll
mov
or
pop
xchg
mov
faddp
in
int3
iret
push
push
mov
push
sub
pop
lret
aas
xchg
push
adc
and
push
add
int
sarb
cltd
test
add
std
fwait
divps
add
push
or
fwait
repz
sbb
je
push
mov
push
inc
push
in
fdivs
add
rcll
xchg
or
inc
test
jno
cmpsb
push
or
sti
cmp
inc
sbb
xor
add
dec
inc
in
or
iret
adc
or
push
out
nop
mov
push
rclb
mov
imul
jg
jmp
rcrl
inc
aad
sbb
or
fistps
subb
xchg
sub
loope
cwtl
xor
nop
mov
stos
pusha
jp
enter
pusha
or
test
ds
repnz
jl
and
ljmp
mov
fucomip
aam
lds
sahf
xchg
push
rcrb
xor
xor
sbb
or
insl
repnz
pop
outsb
lds
rcrl
lock
outsl
push
clc
inc
outsw
ds
in
cmp
test
hlt
xor
out
sti
stc
mov
mov
popf
and
xor
pop
add
roll
ss
fs
pop
insl
add
cmp
jmp
repz
mov
bound
sub
cmpsl
shrb
repnz
mov
clc
xchg
out
dec
mov
shlb
daa
mov
dec
fisubrl
sbb
ss
sbb
push
data16
push
je
fwait
aam
lret
js,pn
adc
decl
pop
and
mov
test
mov
icebp
mov
pop
int
into
out
jg
int
cmpsl
or
or
cwtl
xor
push
dec
clc
and
jae
fwait
dec
fisttpll
push
pop
test
pop
xlat
mov
lret
nop
rclb
das
call
fsqrt
clc
int3
push
test
add
bound
fwait
test
pop
ss
sarl
and
mul
adc
jne
xchg
mov
in
add
sbb
xchg
push
subb
fdivs
outsl
cmp
lea
testb
mov
xor
sub
sub
mov
popf
push
iret
mov
out
lahf
or
xchg
stos
sarl
mov
loopne
mov
insl
lret
inc
mov
cli
ficoml
xor
mov
mov
iret
cmp
or
xor
cmpl
mov
mov
into
mov
sysexit
sbbl
push
sub
leave
leave
scas
mov
pop
sarl
pop
bound
mov
adc
lods
add
imul
lret
insb
mov
or
and
xorb
sbb
movsl
jns
loope
adc
repz
dec
mov
test
mov
das
jns
mov
stc
sub
lods
push
sbb
lods
daa
xchg
test
adc
cmp
and
iret
add
pusha
shll
fnstenv
xorb
xchg
mov
xor
sbbb
cmpsl
push
loop
pandn
sub
in
push
sub
push
xchg
pop
add
sti
or
pop
repnz
jecxz
and
sahf
or
xlat
sbb
xor
push
jnp
in
iret
movsl
outsb
dec
or
scas
int3
xchg
pushf
sub
sub
in
sbb
aad
mov
sub
stos
sbb
aam
ss
xor
addr16
sbb
leave
sub
ret
jg
pusha
aam
fimuls
push
fs
adc
sub
mov
jne
addr16
clc
loop
push
fnop
adc
sbb
loopne
dec
sub
mov
inc
xchg
lods
jg
cmp
popa
jbe
outsl
jb
xor
add
jp
dec
sbb
mov
pop
mov
cmpsl
jns
popf
in
push
ss
ss
add
cmp
dec
cmp
dec
scas
jae
sub
mov
cltd
sbb
add
or
enter
xor
jle
dec
jb
daa
jnp
pop
test
dec
cmpsl
rcll
or
test
mov
jge
inc
xchg
pop
iret
hlt
sub
xchg
movzbl
adc
leave
dec
mov
jo,pn
jo
addr16
iret
mov
mov
jle
jecxz
push
xchg
sub
xor
iret
cs
imul
js
sti
dec
adc
movsb
xor
push
add
arpl
cmp
inc
or
les
mov
adc
into
or
pop
ja
sbb
js
cld
mov
scas
lds
mov
mov
imul
inc
jnp
adc
fs
fisubl
pushf
pop
sub
jp
push
mov
pushf
aam
pop
sub
inc
sarb
repz
push
cltd
mov
and
pop
lret
in
adc
repnz
test
mov
sub
stos
es
imul
enter
pop
push
roll
out
xor
sbb
inc
cmp
mov
sbbb
pop
mov
into
inc
iret
push
stc
loop
push
cld
xchg
mov
push
in
sub
fucomp
test
into
xlat
mov
inc
xchg
enter
loop
inc
jmp
in
daa
rol
xchg
loope
iret
and
inc
sbb
or
insb
mov
dec
xchg
mov
pusha
jge
fildll
pop
jecxz
call
lahf
negl
sbb
jle
ret
inc
cmpsb
js
cmc
sahf
clc
rolb
scas
fs
adc
enter
pop
push
addl
xor
inc
lock
js
loope
add
lcall
mov
adc
xchg
and
subb
insb
push
mov
sbb
das
xor
shrd
cmp
jno
repnz
out
jge
and
insb
stos
in
in
xlat
mov
push
xchg
popa
inc
pop
pop
popf
in
inc
cmc
adc
mov
fisubrl
sbb
enter
xlat
jge
xchg
sbb
cmpsb
movsb
dec
push
push
inc
shl
push
jnp
ljmp
pop
jl
aas
mov
cmpsb
mov
push
jae
flds
mov
imul
adc
xor
arpl
roll
lahf
lcall
jecxz
aas
cld
jp
mov
mov
js
cltd
ljmp
add
or
fucomip
xchg
icebp
mov
leave
dec
callw
out
inc
je
nop
sub
stos
sub
push
add
pop
pop
or
mov
das
pop
xor
xchg
cltd
xchg
sahf
aas
test
rdmsr
pop
adc
jo
push
fs
mov
jmp
bound
lret
mov
inc
addr16
sbb
dec
pop
leave
or
mov
into
fldcw
sbb
pop
lea
mov
jae
mov
jle
pinsrw
sub
aad
fimuls
cmp
in
orl
xchg
jnp
add
cmp
popa
popf
or
pop
aad
mov
notl
cli
jo
mov
mov
fwait
adcl
jne
push
call
std
mov
inc
mov
jno
sar
mul
pop
inc
xor
imul
not
fidivrs
jmp
insl
stos
cltd
push
mov
fs
into
add
fidivs
xchg
jmp
int3
cmc
mov
ret
push
pop
and
add
cmp
push
sahf
std
jo
insl
cmc
mov
lcall
sbb
add
out
lea
or
pushf
lahf
inc
dec
or
pop
jp
sub
dec
mov
fimuls
divb
test
scas
ja
sbb
ljmp
adc
sahf
loop
cmc
cmp
mov
imul
mov
inc
adc
scas
inc
fnstsw
sub
arpl
fstpt
mov
pop
out
lods
cmc
jge
cs
sub
notb
dec
popa
add
dec
pushf
or
int3
mov
mov
mov
or
xor
ljmp
xor
jl
dec
cmp
imul
jbe
icebp
inc
movsb
mov
sbb
fwait
jb
shll
jnp
subb
or
shll
dec
adcl
gs
jge
jg
inc
sub
pop
jns
fcmovnbe
or
jo
sbb
es
jmp
or
and
or
sub
mov
mov
arpl
nop
pop
dec
ds
or
into
lds
fdivs
bound
clc
in
push
xor
stos
pop
insl
adc
das
sub
int
in
rolb
sbb
mov
cmp
outsl
lcall
scas
cli
pop
dec
into
enter
sbb
stc
add
mov
in
movsb
mov
xlat
data16
push
jbe
dec
jnp
cmp
dec
xchg
pop
nop
call
scas
mov
incl
dec
adc
nop
loopne
sbb
stos
jae
adc
aad
cmp
jge
dec
stc
pusha
sub
int3
fstps
insb
das
aad
pushf
cmp
outsl
push
cltd
fidivrl
test
clc
cli
jno
dec
jnp
js
push
jo
inc
inc
fnstenv
add
adc
in
push
pop
ljmp
cli
pop
pop
into
dec
test
jle
push
pop
not
bound
ret
lret
pop
lock
insl
cmp
sub
pop
shl
test
add
push
js
xor
push
stc
das
test
popf
inc
push
fstpl
cs
sti
pop
cmp
mov
repnz
cmp
mov
push
clc
pop
jns
pushf
ret
dec
cmpsl
addr16
mov
mov
jae
xchg
movsb
cltd
and
lods
icebp
mov
sub
das
mov
pop
xor
add
push
int
iret
and
xor
shlb
push
cmp
mov
mov
cmp
push
sub
stc
mov
add
adc
add
into
ret
in
fisttpll
adc
push
icebp
test
fildll
movb
into
test
arpl
jle
movsl
bound
fcom
pop
enter
and
fdivs
aad
mov
jl
test
cmp
dec
test
mov
cmp
xlat
dec
adc
pop
out
insl
test
jo
fisubs
insb
lods
jo
stos
icebp
rcll
dec
push
ret
not
fsubrp
pop
pushf
xor
mull
and
jg
and
cs
inc
sahf
ljmp
or
bound
mov
arpl
ss
add
rcr
jb
scas
lcall
xchg
mov
out
and
xor
cmpb
imul
aam
cmpl
imul
icebp
fstps
out
xlat
jmp
ret
fimuls
mov
ljmp
xchg
arpl
cwtl
aaa
das
jmp
fdivrl
xchg
inc
nop
ss
jns
xlat
out
xchg
pusha
cmp
mov
cmp
pop
mov
cmp
bound
lret
imul
or
xchg
cmp
pop
movsl
push
mov
xlat
call
loopne
mov
aad
hlt
addr16
adc
mov
out
cmpb
inc
outsb
push
lcall
push
sbb
inc
sub
adc
cmpsb
push
pop
in
mov
jbe
rclb
or
inc
shlb
fucomi
inc
cli
je
push
xchg
pop
xchg
int3
xchg
cmp
or
cmp
jne
testl
test
iret
cmp
sti
pop
call
jbe
sbb
idivb
push
hlt
push
jg
add
xor
clc
repz
mov
cwtl
mov
jo
in
mov
lds
add
lds
dec
and
fdivl
xlat
xlat
cmp
int3
inc
adcl
fimull
sub
cld
mov
push
mov
rol
pop
dec
out
aam
pop
sub
sub
aas
mov
ficomps
mov
std
pop
stc
xchg
push
scas
fcomps
adc
bound
hlt
cmpsb
mov
shlb
cmp
add
inc
jb
mov
pop
push
imul
xchg
mov
ja
sub
sub
jnp
mov
pop
adc
in
sub
aam
lock
and
mov
scas
shll
ret
xchg
bound
stos
jl
mov
adc
mov
lods
subb
dec
nop
push
cmpsl
xor
lret
ds
lret
out
sub
les
popf
mov
push
sub
in
cmpsl
sub
stc
loope
lcall
movsl
divb
mov
push
repz
fadd
xchg
andl
add
mov
xor
dec
dec
xor
outsb
icebp
push
push
xchg
cmpsl
mov
pusha
arpl
cmpsl
sbb
push
rcll
xchg
loopne
fsub
les
icebp
fistpl
cmp
push
xchg
fdivrp
enter
and
push
mov
bound
call
notb
and
test
shll
rolb
cltd
mov
adc
or
ret
fwait
sbb
decb
xchg
xor
notb
xchg
std
pop
out
cmp
jnp
jle
clc
sub
sbb
inc
stos
inc
lods
outsl
mov
iret
mov
mov
aas
mov
stos
insb
in
or
stos
jno
and
aas
pop
pop
imul
fcomip
mov
into
int
xchg
cmpsb
shlb
xor
lods
mov
test
lea
pop
mov
ds
mov
stos
mov
mov
lods
test
pop
push
or
xor
xorl
decb
cmp
mov
jne
dec
jno
aas
xchg
arpl
cld
fists
jo
leave
pop
push
adc
das
test
ds
jnp
lahf
adcl
push
xchg
xor
scas
rcrb
repz
fimuls
sub
fs
cmc
sub
lock
adc
data16
notl
mov
ss
dec
ljmp
and
sbb
cmp
mov
and
pop
adc
in
and
repz
dec
ret
scas
sub
ss
aas
repnz
dec
incl
dec
pop
dec
push
xchg
inc
cmp
int
dec
aam
cltd
int3
leave
mov
dec
adc
jmp
pop
add
pop
mov
push
test
xor
sbb
xchg
inc
mov
pop
jno
fimull
fldt
fidivl
xchg
push
cld
fildll
jns
mov
xor
jge
push
adc
and
sub
mov
mov
lret
xchg
stos
movsb
lds
inc
dec
imul
ja
into
fwait
inc
repz
mov
jle
imul
sbb
mov
inc
ds
cmp
inc
pop
movsl
into
mov
mov
fidivl
pop
pop
mov
sbb
mov
adc
mov
xchg
lods
loope
cmp
cmpsb
xchg
rcll
imul
add
xchg
sub
adc
mov
shrl
mov
xchg
mov
aam
int3
dec
push
mov
pop
xchg
cmp
sub
std
mov
andb
out
cmc
sti
cmpsl
jp
ja
cmp
pop
xchg
xchg
adc
sub
cwtl
mov
xchg
mov
dec
mov
or
adc
xor
outsl
pop
push
sti
js
add
push
addr16
ss
push
fcomps
push
daa
call
sbb
mov
sti
movsl
pop
xchg
xor
xchg
fldt
mov
dec
test
inc
scas
sub
sub
pop
call
sub
clc
mov
fldt
aam
push
imul
mov
dec
mov
inc
dec
pop
mov
cmc
dec
lods
inc
jns
insl
pop
into
ret
or
test
cwtl
sub
ljmp
insb
mov
add
jg
imul
add
mov
or
mov
negl
loop
cmp
sub
pop
mov
stos
in
lods
lods
lret
or
xchg
shl
ljmp
xor
adc
or
pop
inc
rolb
push
jg
cmc
leave
call
push
fistl
add
sti
cmp
dec
cmpl
adc
xchg
add
lahf
out
and
mov
loope
sub
and
fbld
fcomps
call
push
mov
jmp
es
aaa
mov
loopne
jle
xorb
and
ficomps
jae
push
dec
out
out
pusha
or
mov
pop
pusha
xchg
arpl
fisubl
pop
pop
pop
pusha
cs
push
mov
loop
pop
out
arpl
orb
insl
sbb
and
mov
and
int3
es
jno
ja
aam
dec
adc
cmp
popf
lret
or
mov
sub
add
mov
fcmovu
shrb
movsl
pop
dec
add
mov
into
mov
loope
pop
jge
cmc
and
out
cmpsl
rorb
pop
add
cs
int
xor
push
or
mov
imul
dec
add
aas
push
xchg
sarb
arpl
xchg
push
call
fmuls
jecxz
outsl
in
test
adc
lcall
and
mov
test
nop
jae
in
ja
push
mov
adc
ds
aam
mov
or
sub
xchg
jp
inc
jo
movsl
movsl
cmp
shlb
cmp
popf
lds
inc
cmp
xchg
add
adc
cmp
cmpsb
cmp
lcall
jno
push
push
xchg
ss
dec
pusha
gs
jmp
xchg
imul
mov
sarl
cmpb
repnz
cli
fcomps
lds
lret
fidivl
xor
adc
sti
inc
in
cltd
in
dec
lea
inc
out
sbb
xor
shr
mov
inc
add
loop
cmpl
push
cmpl
imul
adc
out
je
sub
push
inc
cld
lods
cmpsl
outsb
or
rorl
arpl
cld
data16
movsb
dec
and
xchg
inc
mov
pop
ljmp
data16
pop
iret
mov
mov
movsb
int3
cltd
mov
adc
stc
lods
ljmp
or
cltd
mov
fisttps
ds
pop
int3
stc
mov
push
outsb
ror
in
es
adc
add
clc
xchg
mov
jp
arpl
pop
inc
int3
xor
adc
pushf
add
pushf
lahf
lahf
push
lcall
movsl
lods
sahf
mov
mov
sbb
cltd
es
mov
adc
adc
pop
jmp
cmp
rcll
dec
xor
add
jb
dec
sahf
push
arpl
aam
sarb
xor
sahf
call
mov
outsl
mov
push
in
add
ja
aam
xor
popf
pop
mov
jbe
repz
cltd
clc
push
in
js
add
fistpl
fcompl
jo
or
mov
or
or
mov
xor
jecxz
repz
sti
pop
dec
insb
loope
dec
pop
loope
inc
aad
ljmp
sbb
mov
dec
mov
nop
repz
fcmovnu
inc
in
sub
insb
daa
add
stos
add
and
dec
mov
push
pop
test
andl
and
jne
rcl
jbe
add
pop
insb
mov
insl
test
ficomps
insl
cli
fwait
out
mov
mov
xor
movsb
aam
test
xchg
pop
call
inc
or
or
shll
sbb
push
sbb
insb
mov
sub
and
xor
or
adc
dec
rorl
push
sub
sbb
sbb
fcoml
push
add
ds
call
imul
pop
lahf
xor
test
pop
and
mov
hlt
and
xchg
shlb
add
call
mov
shlb
cli
rcrl
andb
inc
push
pinsrw
in
fisttps
js
jle
mov
pop
stos
adc
add
int
dec
rolb
stc
push
je
imul
jbe
in
sub
dec
sbb
cmp
les
jmp
shl
fcmovnb
add
dec
js
rclb
dec
aad
mov
jnp
push
mov
push
imul
jecxz
pop
loop
outsb
cmp
add
divl
movsb
clc
pop
inc
mov
sbb
out
or
pop
xchg
pushl
hlt
mov
imul
cmp
sbbl
xor
cld
and
jmp
test
pmulhuw
ljmp
sbb
cs
ja
dec
or
mov
js
dec
push
lea
std
ja
adc
adc
scas
dec
popa
mov
add
add
popf
xor
push
test
push
cltd
pop
and
outsl
stos
decl
lods
dec
int
jne
sub
ficoml
jae
pop
push
cltd
dec
xchg
lods
adc
sbb
int3
lods
dec
ss
fsubs
mov
mov
dec
pop
jmp
shrb
or
ds
xchg
test
lea
shld
test
faddl
and
pop
xor
jne
or
sbb
movsb
push
push
adc
or
or
sbb
nop
push
mov
lahf
mov
dec
jne
enter
push
xor
jb
mov
and
push
or
mov
testb
push
mov
adc
mov
shll
shr
fildl
bound
sub
pop
add
pop
dec
xchg
into
loopne
mov
mov
jae
push
mov
and
mov
push
stc
in
mov
sub
xchg
and
cmc
mov
out
inc
hlt
cmpsb
push
jne
cmp
int3
mov
jp
jae
ds
andl
mov
test
bound
cwtl
push
adc
stos
ss
pop
mov
xlat
inc
mov
aas
mov
and
mov
pop
cmp
push
into
enter
sbb
cli
jle
jmp
xchg
dec
jge
mov
push
out
je
adc
ds
fsubs
mov
xchg
js
sahf
add
jbe
inc
push
das
stos
out
mov
lea
shlb
adc
jno
sbb
jno
push
mov
dec
mov
ret
out
jo
cmp
cmc
lret
xchg
scas
aad
aam
and
pop
outsb
push
inc
loopne
js
int
cmp
push
jl
jp
test
adc
add
jp
xor
mov
and
sub
popa
inc
nop
adc
inc
xchg
into
repnz
adc
mov
push
mov
jp
sbb
call
ret
dec
push
push
nop
cs
jns
or
out
mov
fwait
aaa
add
push
mov
pop
ret
and
add
push
pusha
ljmp
idivl
push
inc
clc
cmc
xchg
and
push
fimull
mov
mov
out
dec
mov
jno
mov
popf
push
sbb
push
in
je
xor
dec
ret
inc
sub
idivl
dec
icebp
pop
mov
in
push
ds
sahf
idivb
pop
cmp
ja
icebp
jae
loop
js
out
hlt
mov
stos
hlt
lock
outsl
mov
addb
nop
mov
out
sub
or
popa
imulb
cwtl
dec
push
mov
xlat
push
sarl
xchg
jl
cs
in
mov
fwait
repnz
shrl
shrl
xchg
adc
and
add
mov
lcall
sti
pop
inc
push
jbe
pop
mov
push
iret
test
jnp
mov
dec
sbb
bound
in
pop
je
loopne
mov
adcb
insb
adc
ret
cmp
mov
jmp
hlt
sub
fs
add
and
adc
lret
stos
mov
cmp
cld
pushf
mov
cmp
dec
out
mov
push
and
bound
outsl
daa
xchg
xchg
sub
hlt
sti
aad
jno
xchg
xchg
je
test
adc
mov
sub
jg
cs
idiv
jmp
imul
pop
pop
mov
xchg
xorl
xchg
mov
adc
and
sahf
test
jge
adc
out
scas
sub
dec
outsb
sahf
xchg
enter
movlps
inc
das
pop
cs
xchg
push
and
sub
insb
or
push
bound
sbb
hlt
mov
fwait
pop
aam
jle
inc
or
rclb
mul
inc
inc
out
addr16
sarb
movsb
loopne
leave
mov
sub
adc
mov
inc
mov
in
dec
lahf
int
sti
sub
jbe
sbb
in
jge
sub
in
cld
jmp
jg
or
inc
add
fwait
in
sub
jmp
fnstcw
jl
xor
out
lahf
mov
inc
xor
adc
jmp
loope
imul
mov
push
add
lcall
test
movsl
ja
sbb
jns
mov
addl
or
push
lahf
leave
insb
mov
dec
pop
jg
push
xchg
sub
push
pop
xchg
mov
jp
ds
xchg
push
stos
mov
out
cmp
dec
and
inc
fsubrs
pop
cmpsb
xchg
dec
mov
jb
pop
mov
mov
clc
popa
mov
cmp
pop
nop
cmp
xlat
sarl
xor
mov
in
bound
pop
push
mov
scas
dec
pop
mov
fld
clc
xor
out
out
adc
jnp
das
mov
and
cmp
pushf
add
mov
js
repnz
ljmp
stos
jne
or
cltd
jle
adc
pop
sbb
mov
dec
stc
cld
mov
lock
roll
les
adc
or
roll
loopne
fwait
repz
xlat
jge
push
in
gs
and
mov
je
sub
clc
cs
push
addr16
pop
shrb
xor
or
ss
sub
aas
mov
xor
jmp
popa
std
sub
fmull
fisubl
or
sahf
add
scas
aam
mov
dec
or
fidivrs
es
cmc
push
mov
inc
pop
lcall
or
dec
mov
mov
aam
fidivs
into
mov
xor
sbb
xorl
adc
les
lret
pop
cmp
icebp
dec
adc
lret
xchg
cmp
movsl
pushl
call
mov
je
test
jb
push
jae
ss
sbb
mov
loopne
push
and
ja
jmp
mov
popf
cmp
sub
mov
dec
scas
insl
fnsave
adc
mov
cmp
mov
jo
mov
in
lds
aad
mov
push
int3
sbb
jecxz
dec
pop
sarb
andb
aaa
push
popa
mov
mov
push
imul
inc
out
dec
pop
lods
and
pop
shrb
xor
aaa
mov
mov
pop
sbb
aad
add
sub
movsl
push
icebp
push
push
mov
add
stos
xor
aad
xlat
jecxz
or
insb
leave
in
xchg
fsts
jnp
cmp
jb
scas
or
mov
jbe
repnz
cmp
dec
mov
andl
push
ror
call
call
xchg
jecxz
fwait
add
push
mov
jmp
xlat
jns
jmp
xchg
out
pop
jno
mov
xchg
and
es
ret
leave
jmp
xor
insb
scas
ja
sub
call
cli
sahf
xchg
pop
call
or
add
mov
ss
adc
insl
std
bound
jp
xor
cmp
daa
mov
sub
out
lock
sub
lcall
pop
leave
sub
cmp
sahf
adc
sahf
loope
mov
push
inc
jmp
adc
repz
cmp
popa
mov
cmp
dec
cltd
push
push
xchg
push
aaa
or
inc
push
imull
jp
int
xchg
mov
movsb
mov
sub
xchg
adc
scas
clc
es
test
mov
adc
das
jns
stos
dec
repz
stos
inc
and
mov
push
test
ljmp
mov
mov
insb
push
insb
nop
test
add
cmp
sbb
or
mov
sbb
adc
mov
sarb
cmp
push
das
out
xor
fldl
enter
in
outsb
mov
xchg
je
mov
and
sbb
xchg
fs
dec
aas
mov
add
adc
jbe
cmp
std
or
pusha
jmp
les
imul
jmp
shl
push
into
dec
imul
lea
shl
pop
mov
insl
test
in
add
mov
mov
fwait
jl
push
mov
pop
dec
xchg
push
dec
out
decl
les
call
ss
sub
gs
mov
push
fcoml
psubw
cmpsb
fbstp
ret
dec
mov
das
addr16
in
jg
sub
out
fcom
jbe
sahf
rcll
mov
push
sbb
mov
mov
rcll
inc
jnp
scas
mov
fcoms
fstpt
repnz
pop
lods
push
in
xor
mov
pop
in
jecxz
xchg
xchg
aaa
jle
pop
xchg
movsb
fbld
js
add
rdtsc
sub
cmp
cli
inc
mov
sbb
mov
mov
lock
cmp
inc
psubusw
pop
add
add
mov
ret
mov
cltd
bound
xchg
mov
mov
sarl
adc
stc
mov
imul
pop
sbb
sets
dec
mov
push
insl
add
gs
test
inc
mov
mov
inc
or
xor
sbb
addr16
clc
sub
mov
jne
subb
into
mov
push
in
cld
xorb
xor
xor
lods
lret
daa
in
insb
stc
lret
pop
out
sti
jg
sbb
jp
push
jl
mov
nop
adcb
mov
pop
ljmp
or
jo
out
sbb
mov
insb
sahf
dec
cli
test
jnp
xchg
cwtl
lcall
add
hlt
jle
mov
cmp
shll
mov
inc
push
pop
mov
jge
jle
pop
xlat
pop
mov
mov
std
fadd
sub
cmpl
dec
jp
xor
inc
and
cs
fistl
pop
cltd
push
push
mov
inc
add
xchg
in
adc
repnz
cmp
stc
dec
mov
mov
jo
test
add
dec
xor
jmp
lock
mov
mov
mov
js
mov
inc
pop
decl
in
in
repnz
xchg
scas
int3
arpl
sub
out
fstps
mov
cmpsl
fcoml
mov
and
jne
insb
clc
pop
jle
mov
dec
jecxz
das
xchg
sbb
jo
mov
mov
fstpt
addr16
inc
lods
inc
adc
pop
cmpsl
adc
ja
in
dec
add
in
jne
adc
notl
mov
inc
inc
jmp
add
orl
hlt
pop
sbb
dec
addr16
mov
push
loope
pop
sub
xor
mov
inc
jbe
pop
repnz
in
movsl
popf
dec
dec
mov
or
pop
or
fs
jnp
mov
adc
mov
mov
rclb
add
pop
ficoml
rolb
cmp
mov
lahf
and
jbe
xor
jge
jnp
xchg
add
cmpsl
sub
lea
add
pop
sahf
out
psubusb
popl
das
bound
mov
daa
in
mov
jmp
fiadds
adc
pop
xor
jo
jge
int3
sbb
orb
and
les
imul
add
fnsave
gs
jnp
xchg
push
mov
clc
inc
push
jbe
int
loop
lods
dec
sbb
aaa
mov
mov
mov
sbb
fnstenv
dec
adc
ljmp
sub
popa
clc
mov
rolb
cmpsb
fbld
jp
adc
bnd
xor
cltd
addb
adc
jp
mov
sub
enter
pushf
js
repz
inc
fwait
sub
aas
sahf
mov
jp
sub
jge
ja
ret
scas
ret
fadd
fs
arpl
das
pop
push
out
and
in
inc
pop
movsb
enter
pop
push
pop
lds
inc
and
inc
ja
loop
int
or
jo
mov
push
pop
outsl
repz
lock
adc
out
sti
xor
je
ret
or
cmpsl
imul
pop
loope
pop
xor
testb
fsubrp
cltd
adc
jnp
fisttps
push
mov
cmp
sub
add
xchg
xor
fwait
xchg
stos
xchg
test
loope
je
mov
cmp
inc
es
and
mov
push
in
adcb
movsl
jecxz
mov
adcb
sub
aad
lods
mov
push
insb
test
and
jp
lds
testb
lods
inc
iret
mov
pop
ret
dec
or
in
mov
lret
roll
in
adc
xlat
in
sbb
cltd
lret
jbe
or
sbbl
rcrb
pop
leave
std
daa
mov
cmp
pop
mov
push
jecxz
into
or
inc
loop
lods
ljmp
or
jmp
std
jg
shll
testb
mov
xlat
addr16
pusha
push
xor
cmp
mov
ja
inc
out
pop
out
xchg
mov
loope
push
cmp
lea
lahf
mov
adc
fmulp
cmp
inc
in
clc
or
lcall
shrb
fcoms
sbb
mov
enter
out
addb
int
or
adc
inc
cmp
push
pusha
pop
cli
dec
mov
subl
ljmp
cli
and
stc
lcall
xor
pusha
cmp
mov
or
std
gs
outsb
mov
dec
or
fsubs
pop
bound
xchg
notb
stos
test
mov
arpl
sub
aaa
pop
scas
mov
push
sahf
cmp
add
mov
lret
je
fwait
pop
clc
dec
lock
cmp
daa
pop
jae
pusha
cmc
dec
xlat
mov
mov
adc
fnstcw
jg
in
adc
jge
fnstsw
iret
or
or
cmp
mov
hlt
out
out
pushf
inc
jl
inc
pop
sub
fldcw
xchg
dec
cld
cli
ficompl
mov
sub
xchg
sti
dec
push
fwait
dec
and
xor
popf
sub
and
xor
fdivs
lea
in
mov
xchg
call
aaa
fadds
into
out
pop
cmp
mov
fs
inc
lods
stos
int3
push
or
push
imul
xorl
mov
or
pop
test
daa
pop
aas
clc
shrb
inc
jge
mov
and
fidivl
insb
mov
jl
das
fcmovbe
cmp
jmp
rcrl
iret
cs
roll
dec
sbb
dec
imul
shrb
xchg
callw
cmpsl
insb
call
lret
push
jae
mov
cmp
mov
mov
jae
aaa
mulb
mov
mov
xor
sub
mov
insl
mov
mov
ds
sahf
daa
sbb
sub
and
adc
cmp
mov
push
test
pop
sub
je
fsub
movsl
ds
cmpsb
dec
shlb
mov
repz
in
gs
ss
filds
ds
rcrl
pop
movsl
scas
pop
cmp
ss
push
fmuls
or
ret
nop
jnp
push
sbb
out
stos
jo
pop
and
clc
sbb
cs
cmpb
repnz
and
and
inc
pop
dec
sbb
xchg
push
pusha
xchg
ret
jg
in
test
mov
mov
push
scas
push
mov
fisubrl
mov
stos
xor
push
push
xor
in
cmp
loope
mov
xchg
aaa
inc
push
add
cli
and
popf
dec
mov
xchg
stos
les
lock
xor
pop
cmp
stc
or
loope
cs
xor
mov
mov
jae
push
jo
push
fistpll
fdivs
aam
lock
push
filds
sub
dec
cmc
mov
pop
sub
inc
lods
repz
jl
repz
adc
or
and
sbb
dec
sub
ljmp
add
test
repz
sbb
mov
fxch
dec
repnz
push
dec
lcall
sub
push
aad
ljmp
shll
test
dec
push
je
ljmp
push
jo
in
aaa
daa
push
test
mov
js
and
mov
pusha
xchg
jle
in
filds
add
sub
cld
mov
test
sbbb
mov
mov
or
xor
ret
mov
sbb
and
cmp
push
jcxz
mov
int
jo
enter
ret
sbb
push
and
hlt
adc
sbb
lods
fidivrs
sub
mov
push
test
cmc
push
jle
cli
mov
lret
or
dec
sub
sub
cmp
and
sub
sub
arpl
dec
das
daa
pushf
sti
mov
mov
or
and
or
dec
and
xchg
movsb
mov
fstps
das
adc
sbbb
adc
or
lret
cmp
sbb
dec
ss
popa
sub
xchg
lret
and
repnz
pop
lock
ret
leave
add
aam
pop
pop
lds
pop
sti
adc
andl
in
sbb
insl
adc
pop
lods
fcoms
outsl
mov
sbb
icebp
dec
aam
jns
hlt
in
pop
negb
xchg
stos
xlat
push
jl
adc
lret
test
cmp
sbb
outsb
sbb
aam
inc
jmp
gs
add
cmc
shlb
lret
shl
jmp
inc
scas
inc
and
mov
push
scas
ret
jno
pop
lret
daa
loop,pn
cld
or
xchg
into
pop
and
arpl
fdivrs
jb
xchg
adcb
mov
pop
shll
adc
mov
add
into
testb
imul
mov
sti
rcrb
cmc
pop
xor
scas
inc
in
mov
xchg
mov
out
pop
in
cmp
mov
lret
outsl
das
adc
leave
cmc
movsl
adc
pop
xchg
dec
gs
cmp
xor
mov
inc
mov
and
imul
xchg
xor
mov
movsl
and
xor
adc
dec
in
push
adc
mov
fmul
mull
in
hlt
jecxz
jbe
leave
xchg
filds
sub
outsb
xchg
mov
cmp
fs
out
addr16
rcr
pop
jae
int
jb
fdivrl
mov
pop
dec
int3
xchg
inc
jns
movsb
xchg
lods
pop
loopne
movsb
add
pusha
sbb
pop
div
dec
and
jbe
sub
jmp
mov
push
ds
rolb
or
jmp
movsl
xchg
mov
mov
call
inc
test
mov
sub
pop
push
or
mov
sbb
cwtl
adc
cmc
aam
in
aad
jl
push
dec
mov
pop
pop
test
shlb
pop
jne
xchg
enter
ret
dec
stc
nop
add
lea
and
mov
dec
pop
mov
outsb
dec
sbb
xchg
andl
mov
lret
sub
rcpps
sub
xchg
imul
stos
inc
cli
pop
std
subl
add
add
cmpsb
sub
jmp
out
fisttps
dec
push
clc
icebp
xchg
and
andl
cmc
mov
mov
or
pop
movsb
push
stos
sahf
in
fs
test
add
push
ss
ljmp
pushf
enter
xchg
sub
fbstp
aas
loop
dec
jnp
es
push
push
addb
lds
andl
or
jno
lds
sub
push
jnp
lea
or
stc
mov
aaa
daa
xchg
cmp
push
mov
repz
sub
cmp
jp
dec
mov
scas
in
test
leave
jecxz
mov
lea
cld
repnz
push
hlt
pop
out
cli
inc
hlt
rcll
shlb
inc
adc
lret
aas
pop
sbb
scas
jne
ret
ja
clc
mov
mov
adc
mov
iret
push
out
rol
mov
in
popa
mov
je
mov
inc
jmp
push
mull
std
addl
push
cmpb
xchg
push
fmulp
sbb
xor
fldcw
adc
and
aas
cmp
ret
ror
rolb
jbe
mov
daa
outsl
xor
loope
mov
divl
int3
inc
cwtl
popa
aad
out
cmp
mulb
xchg
adc
in
ficompl
jbe
dec
mov
xchg
loop
and
insb
in
adc
push
jo
and
pop
mov
movsb
mov
sub
js
fwait
repz
sub
ss
lea
push
or
xor
pop
aam
and
adc
sub
mov
test
mov
pop
hlt
ss
out
les
insl
sbb
lret
pop
aas
lcall
ss
pop
dec
sbb
mov
cltd
add
subps
xchg
cli
mov
ret
ss
xor
cwtl
push
dec
sbb
dec
pop
call
jo
jae
fsubl
push
stos
push
jp
movsl
add
xor
push
jae
sbb
cmpsl
repz
in
xchg
dec
popf
pop
add
inc
lcall
and
sbb
and
and
push
push
or
jmp
sbb
pushf
test
xchg
or
test
jp
sbb
leave
dec
cs
mov
sbb
fldcw
lods
scas
mov
cld
adc
out
push
in
cwtl
lods
push
dec
mov
ficomps
in
jo
dec
mov
mov
dec
push
mov
push
mov
insb
jae
repnz
lret
mov
inc
leave
imul
iret
fmull
mov
je
fchs
jle
adc
push
jl
cmp
fistpll
xchg
pop
inc
jno
push
rcll
pop
push
lock
xchg
xchg
inc
xchg
lds
mov
jge
ds
mov
inc
pop
mov
call
mov
xchg
sub
cmp
and
out
imul
adc
or
sbb
jo
lcall
push
pop
sub
pop
mov
pop
adcl
cmc
out
sbb
adc
mov
pop
shll
out
clc
or
xchg
imul
or
aad
movsl
out
ja
mov
mov
mov
mov
pop
iret
adc
jle
pop
push
add
dec
inc
push
sub
cmovnp
inc
cmc
repz
call
pop
icebp
cmpsl
lods
lock
insb
mov
scas
xchg
push
sbb
jmp
cmp
call
push
adc
jnp
push
mov
arpl
loope
jmp
or
mov
js
pop
test
or
push
ret
sub
adc
gs
adc
and
and
mov
test
jge
mov
lock
adc
scas
in
movsl
push
mov
leave
cwtl
pop
clc
daa
mov
cmp
add
mov
test
and
mov
dec
fnstenv
jbe
adc
mov
pop
push
icebp
cwtl
aaa
lods
or
call
cltd
out
cmpsl
lcall
std
push
add
leave
cmp
in
fdivs
fisubs
pop
pop
lock
arpl
mov
mov
scas
sbb
cmp
dec
mov
mov
arpl
testb
mov
repnz
mov
clc
pusha
fistpl
cmp
loop
repnz
int3
fwait
movsb
shlb
add
and
frstor
popf
and
ret
pop
fwait
mov
push
mov
mov
lret
dec
sub
and
cmpsb
in
subb
movsl
fsubr
sub
inc
ret
stos
mov
lcall
sbb
jle
dec
mov
inc
lret
inc
and
scas
fidivrs
push
cmp
pushf
iret
or
fisubs
mov
cli
sbb
rcrb
jns
jmp
mov
mov
popa
push
imull
sti
ret
lret
mov
lahf
inc
cmpsb
add
mov
mov
xor
sbb
vmovaps
scas
mov
icebp
in
sbb
adc
mov
mov
mov
mov
pop
cs
fsubr
xlat
adc
inc
orb
pop
sbb
sti
dec
inc
gs
test
mov
or
inc
adcl
cmp
xor
jns
test
sahf
adc
out
add
js
into
leave
add
dec
cmp
mov
adc
pop
lds
dec
jl
jle
outsb
lahf
sti
add
xchg
cmp
aas
pop
cmpl
pop
rcl
xchg
add
pop
movsb
clc
cltd
adc
xchg
pop
out
enter
mov
aam
push
subl
and
movsl
fimull
dec
and
addr16
and
fstl
xchg
daa
mov
repnz
mov
lahf
add
jns
popa
fsts
mov
add
sbb
pop
cltd
xor
sub
sbb
lds
movsl
pop
rcrl
nop
ljmp
mov
pop
insb
dec
xchg
adc
jno
add
pop
outsb
inc
and
pushf
jge
neg
ja
cli
test
cld
xorb
push
out
pop
mov
xor
pop
loopne
mov
sbb
scas
mov
push
xchg
mov
mov
lcall
or
cmp
das
jae
jo
lcall
ss
xchg
pop
mov
sbb
ss
jecxz
popa
push
inc
movnti
jne
fidivs
inc
out
pop
or
cltd
pop
mov
xorl
add
lock
jecxz
mov
mov
add
es
shrb
xlat
push
cltd
mov
push
xor
mov
dec
xor
js
inc
das
push
test
add
popa
leave
mov
in
push
rolb
add
in
fistps
cltd
xor
dec
mov
ret
push
jge
inc
fcmove
pop
ljmp
sbb
mov
and
mov
repnz
cmc
mov
sbb
mov
dec
xor
mov
ret
sti
add
xchg
xor
adcl
das
test
xchg
je
or
jmp
je
inc
mov
dec
pop
mov
mov
mov
add
sub
mov
das
int
xlat
inc
pop
in
imulb
mov
shll
aam
add
std
sbb
lock
repz
movsb
mov
and
out
mov
out
cmp
xor
sub
mov
inc
xor
movsl
adc
mov
pop
outsb
jge
arpl
sbb
int
pop
xchg
or
xor
popa
fwait
push
push
or
ljmp
cmpsl
scas
sub
sbb
push
mov
adc
enter
lods
lahf
mov
in
inc
out
clc
xorl
dec
jmp
cmpsb
add
jg
mov
and
and
sub
mov
int3
adc
mov
and
out
int3
mov
add
cmp
repz
sbb
int3
or
mov
nop
mov
cmp
add
ja
dec
pop
lahf
cmp
mov
adc
pop
jno
cltd
push
sti
jl
sub
lock
sbb
pop
fwait
lods
inc
data16
loopne
push
push
mov
std
xor
jb
iret
test
jo
incl
add
jne
xchg
or
roll
sbb
jo
dec
outsl
push
ficompl
dec
and
cmp
xlat
aaa
add
mov
push
push
ja
push
xchg
aam
clc
or
mov
pop
cmp
lds
lods
jbe
jns
call
jnp
mov
in
repnz
jg
jb
into
jmp
lock
outsl
imul
int
pop
dec
mov
lahf
jg
mov
out
adc
pop
and
imul
test
mov
fstpl
sub
mov
pusha
jl
mov
pop
ficomps
xchg
and
cltd
add
jecxz
mov
push
test
mov
push
mov
jmp
xor
or
inc
aas
sub
or
lods
mov
push
popf
das
sbb
sbbl
ficompl
jo
in
jle
sub
lahf
xchg
pop
jg
sbb
sub
adc
push
pop
ljmp
push
xor
out
dec
hlt
das
lret
sbb
addr16
lret
sub
add
int3
push
scas
xchg
test
dec
int
inc
sbb
icebp
mov
jp
push
sub
std
mov
addr16
insl
movsl
mov
jge
gs
int
add
addl
aad
rcll
dec
xchg
sub
push
hlt
mov
into
xchg
jns
insl
lret
jb
push
shrl
inc
in
ss
aad
or
push
inc
imul
or
sbb
or
clc
jns
je
and
sub
dec
push
inc
ret
and
ja
sti
popa
adc
sbb
push
pop
xchg
mov
push
in
push
push
add
and
das
addr16
addr16
add
push
lahf
adc
pushw
out
cmc
mov
mov
inc
or
sbb
in
pushl
scas
movb
cmp
adc
xorl
inc
cmpsl
cmp
mov
xor
add
mov
mov
push
iret
sub
pop
add
imul
rcl
or
inc
jns
mov
rol
add
stc
or
nop
push
jle
and
xchg
xor
arpl
push
loop
sbb
xchg
pop
cmp
adc
int3
or
pop
pop
lods
or
loopne,pn
das
and
and
or
leave
pop
dec
fimull
int3
xchg
lock
jl
lds
add
aaa
xor
mov
orl
mov
mov
inc
or
push
xchg
sub
mov
xor
xlat
ljmp
or
sbb
aaa
pop
mov
jmp
pop
faddl
jle
arpl
lods
lcall
gs
pop
stos
outsl
cwtl
leave
jge
xor
push
repnz
sub
and
sub
push
and
or
sbb
xchg
negl
dec
es
std
cmp
lods
sahf
mov
insl
fnstsw
mov
mov
xchg
popa
pop
add
lds
sarl
adc
xchg
lahf
pushf
push
jp
pop
inc
or
inc
cli
es
daa
inc
pop
mov
pop
mov
mov
add
sti
jns
fnstcw
into
cmp
push
out
mov
aas
xor
jge
shlb
mov
aam
or
and
das
out
xchg
cmp
xchg
movsl
cmp
sbb
jl
mov
stc
mov
es
or
xchg
into
xchg
mov
add
sub
andl
imul
stc
aam
rolb
or
sub
scas
jecxz
pop
sti
imul
fistps
sub
insl
inc
xchg
and
lock
aad
ficoms
sbb
jns
icebp
dec
scas
mov
xchg
into
xor
test
jb
mov
in
or
push
les
scas
call
ds
out
mov
mov
jg
inc
nop
sub
lock
cmpl
cmpsb
js
add
inc
and
inc
lret
sbb
mov
lretw
rol
and
arpl
adc
scas
sbb
daa
mov
sbb
push
adcl
pop
jnp
mov
lods
xchg
outsb
imul
cmpsl
mov
sti
seta
insb
inc
outsb
dec
in
pop
push
cmc
push
mov
ret
jg
ja
dec
push
stc
xor
in
add
mov
dec
xor
pop
xlat
out
xchg
pop
sub
repnz
jae
data16
xor
add
push
sbb
out
mov
gs
sahf
xchg
cmp
mull
lock
jae
xor
movsb
cmp
fiadds
sub
adc
ss
jae
xchg
pop
int
pop
pop
lcallw
daa
dec
popf
xchg
cwtl
cmc
adc
adc
dec
mov
fcomip
fs
xchg
or
sub
shrl
mov
push
cmpsl
mov
inc
adc
jmp
inc
xchg
mov
xor
mov
and
ds
push
xchg
fimull
jb
jns
sub
test
fwait
ds
mov
fcmovnbe
sub
adc
leave
dec
push
decl
call
fwait
sub
out
mov
sbb
inc
pop
lea
jnp
adcb
sbb
mov
sub
mov
arpl
stos
inc
int
sahf
mov
outsb
dec
loopne
cs
movsl
sbb
stc
cwtl
xchg
or
outsb
das
rolb
addb
out
out
iret
push
sbb
fisubrl
stc
push
cmpb
lea
add
inc
or
je
std
add
jmp
lcall
push
out
hlt
inc
sti
or
push
pop
push
sub
shll
jne
cvtps2pd
lret
xchg
ret
cmpsb
adc
mov
dec
iret
pop
mov
inc
pushf
and
icebp
adc
push
jnp
xor
ja
aad
mov
and
lods
ret
xor
inc
fcmovb
fldt
pop
xor
mov
xlat
out
rcll
mov
ret
aas
lahf
int
std
in
je
cmp
loop
ss
xchg
mov
fld
pop
adc
fistl
or
jmp
dec
das
dec
mov
fsts
cmp
inc
loop
pop
shll
xchg
rcrl
outsl
sub
stos
xor
js
out
mov
push
test
push
push
sbb
pop
stc
mov
lahf
repz
push
aaa
pusha
fnstcw
repnz
and
dec
cmp
mov
push
loopne
adc
lcall
add
cmp
push
mov
and
aad
mov
push
shll
inc
lret
jle
cmp
mov
hlt
ljmp
xor
push
in
mov
inc
scas
push
loope
inc
or
rorl
add
ljmp
stos
add
inc
je
aad
loop
negb
mov
jecxz
out
in
sbb
iret
icebp
in
jns
xchg
nop
and
in
inc
and
xor
add
sti
jmp
add
ds
jb
xor
stos
xchg
fidivs
inc
xchg
movsl
mov
je
lods
or
and
fsubrl
fdecstp
hlt
adc
push
iret
xchg
xchg
sub
ss
into
inc
inc
cmp
pushf
ror
lret
fisubl
jbe
addl
enter
ja
test
add
push
add
and
inc
adc
imul
roll
std
cltd
test
or
jg
sub
mov
pop
andb
add
pop
xor
xchg
ret
stc
and
mov
stos
shlb
test
inc
add
sti
sahf
jge
sbb
rcrl
sbb
dec
nop
shlb
stc
mov
push
adc
sub
xchg
out
cmp
inc
xchg
cmp
jge
adc
inc
inc
push
out
daa
fdivs
inc
inc
out
inc
insl
pop
stc
push
sbb
sbb
or
mov
shrb
mov
mov
and
dec
jne
jg
mov
pop
stos
mov
mov
or
sbb
cwtl
cs
clc
jg
testb
cmp
xor
and
nop
xchg
mov
je
xchg
fwait
movsb
xchg
pop
add
xchg
or
xchg
xchg
movsl
add
sub
jg
cmp
ss
sbb
inc
mov
cli
out
push
jae
mov
mov
data16
or
push
push
add
imul
push
xchg
fmuls
jne
out
cmp
fnstenv
or
es
lods
loope
xor
mov
std
pop
sub
test
icebp
mov
sti
ljmp
and
ljmp
sub
xor
mov
data16
mov
mov
scas
cmpsb
sub
cmp
sub
dec
fistpll
popa
ss
mov
and
add
xor
in
dec
fidivrs
cmc
shlb
lods
inc
adc
out
in
pop
fwait
xor
cld
lret
in
daa
or
sbb
cmpsb
jnp
ret
or
add
sub
mov
pop
mov
gs
das
lods
push
daa
push
push
pusha
xor
mov
ret
or
out
xchg
sub
pop
lea
sti
sahf
in
push
insb
cltd
in
cmpsl
dec
lods
xlat
mov
into
mov
rcr
mov
fcomip
fisubrs
push
cmp
mov
jno
mov
arpl
add
pop
sbb
sbb
sub
ret
jns
out
test
es
sbb
or
and
sub
repz
je
and
xor
andb
push
push
out
das
xchg
mov
aad
pusha
jb
fldcw
xchg
and
mov
jle
test
xor
jae
mov
inc
gs
cmp
jns
outsl
push
push
out
stc
insl
sub
mov
adc
cmp
jno
mov
xchg
js
movsl
sub
jg
sahf
mov
xchg
sbb
mov
scas
aaa
rcll
icebp
fcomps
xor
dec
std
pop
add
jp
adc
push
cmp
push
pop
fs
mov
call
int3
imul
xchg
ficoms
gs
lcall
sahf
push
test
data16
cmp
xorb
fidivl
pop
sarb
adc
lcall
push
pop
cmp
dec
in
cmp
adc
sahf
mov
imul
or
xchg
xacquire
repz
push
mov
mov
add
and
adc
arpl
icebp
cmp
pop
xchg
bound
mov
sub
cmpsb
or
divl
shr
mov
popf
loop
cmovno
imul
add
fiaddl
pop
fnstenv
push
sub
je
loopne
das
push
jo
subb
inc
push
xlat
out
in
cmp
mov
and
ljmp
divl
lock
xchg
pop
adc
filds
adc
push
mov
pop
mov
mov
ja
lret
ja
lret
xor
sub
cmp
lods
aad
movsl
repz
jp
ja
xor
jo
mov
icebp
adc
xor
pop
jbe
mov
xchg
loop
push
loope
ljmp
xchg
test
cli
mov
outsl
push
imul
cmp
or
xchg
insl
push
push
jge
gs
std
jbe
test
cs
pop
xchg
loope
nop
inc
jns
mov
jecxz
push
xorl
cmp
mov
stos
out
adc
roll
mov
frstor
fistpll
jo
cs
loope
jmp
mov
ret
bound
ret
pop
mov
adc
shlb
loop
lret
jg
mov
bound
push
adc
adc
aas
jg
xor
dec
pushf
icebp
popa
jle
or
arpl
into
xchg
cmp
mov
ja
mov
lods
and
pop
pop
sub
push
lods
sub
dec
and
ja
cmp
pop
test
pop
mov
sub
add
lods
mov
cmp
push
sbb
mov
enter
arpl
and
inc
inc
adc
push
mov
into
scas
stc
cmp
hlt
mov
clc
ret
mov
out
lret
cmpl
cmp
movsb
mov
jecxz
icebp
xorb
les
pop
rcrb
push
std
mov
and
xchg
rclb
popa
movsl
es
in
aam
inc
lret
out
jno
lret
lea
int
inc
adc
jns
lea
aad
cmpl
mov
xor
setg
xchg
dec
push
sub
xor
loope
in
je
rcrl
enter
stos
sbb
jnp
and
push
sub
mov
adc
sub
inc
pop
test
dec
dec
jmp
mov
jne
and
push
add
push
fmull
mov
repnz
push
mov
mov
cmp
xchg
dec
fistpll
jnp
test
xor
jmp
sbb
jp
insb
cmp
xor
imul
jo
aad
and
or
lods
mov
inc
mov
xchg
dec
ret
or
pusha
fcoml
scas
out
cmp
xchg
mov
lcall
pop
imul
lods
inc
dec
push
inc
push
mov
insl
adcb
lcall
int
dec
sahf
inc
enter
lock
fildl
xchg
adc
dec
jp
in
lret
in
and
in
aam
xchg
adc
lods
sbb
sahf
aaa
aaa
scas
xor
lods
lahf
push
cmp
popa
mov
test
and
push
inc
dec
and
jmp
lcall
cmpb
dec
iret
jp
push
add
inc
jne
xor
das
mov
mov
lahf
push
ss
dec
pusha
lcall
in
xlat
and
inc
clc
and
or
sub
mov
inc
sahf
cli
pop
jp
outsl
lods
jl
mov
adc
xchg
mov
push
pop
xchg
aaa
data16
cmp
call
or
dec
testb
fs
jbe
fimull
scas
cli
and
dec
adcl
js
int
shll
and
mov
inc
sbb
nop
pop
mov
inc
in
out
inc
daa
imul
insl
lahf
jno
fyl2x
cld
add
pop
push
add
xor
push
cwtl
notb
aaa
push
add
subb
xor
lret
add
add
xor
lea
and
push
lods
push
dec
mov
xor
imul
mov
and
xor
cli
mov
xchg
xchg
pop
enter
sub
in
adc
mov
mov
and
imul
mov
cmp
xor
push
int3
xchg
jmp
movsb
scas
push
stos
xchg
mov
fsubs
sbb
push
pop
insb
xor
fwait
add
push
call
sbb
stos
ret
xchg
into
int3
mov
push
or
call
loopne
cs
push
pop
dec
dec
fisubrl
leave
mov
in
mov
xchg
or
cwtl
cld
mov
push
ds
ja
cltd
inc
jnp
ret
adc
shlb
out
hlt
pop
lds
mov
xbegin
fadds
movlps
ficoml
mov
jp
jnp
xchg
pop
dec
stos
xchg
dec
addr16
filds
orl
std
adc
sub
clc
push
dec
pop
fwait
test
fstl
sub
mov
xor
xchg
mov
packuswb
dec
dec
test
sbb
sub
das
cltd
inc
icebp
push
subb
lods
clc
setle
outsb
insb
sbb
dec
in
outsb
inc
loopne
movsb
test
pop
mov
lcall
out
stos
jl
test
cltd
arpl
lahf
xchg
add
rorl
xchg
jg
jns
pop
sbb
lods
sar
mov
adc
ficoms
cs
and
add
cmp
rcll
sahf
xchg
cmp
out
pop
push
pop
adcb
std
addb
clc
add
enter
rcll
and
imul
push
je
testb
adc
sti
jo
pop
aas
cmp
inc
push
jo
test
inc
pusha
addr16
adc
cmp
and
jo
stos
cmpsl
addl
std
dec
adc
push
test
das
into
es
std
addb
cmp
xchg
sti
loopne
ficoms
push
xor
in
mov
cli
mov
xchg
mov
pop
sub
cmpsl
mov
stos
xor
dec
movsb
cli
cmp
js
shl
in
movsl
test
roll
ljmp
xchg
lret
pop
push
addr16
lahf
frstor
ljmp
pushf
sti
lcall
pop
mov
or
mov
into
jb
or
and
mov
int
jne
xchg
cmpsb
gs
popa
xchg
notl
fcomps
push
sbb
in
cmc
xchg
loope
push
jmp
scas
mov
push
frstor
adc
rcrl
push
mov
and
sub
lret
inc
jno
es
or
mov
shrl
dec
xor
push
push
inc
jne
jge
movsl
fsub
pusha
sbb
insb
jmp
and
movsb
lret
into
outsl
out
mov
push
sub
test
cmpsl
jl
ds
jb
nop
sub
cmp
and
ja
pop
cmp
jmp
ja
inc
testl
pop
inc
fcoms
ds
sbb
jmp
in
sbb
lea
shlb
jne
dec
add
xor
or
mov
push
mov
movb
pusha
adc
stc
sahf
cwtl
outsb
inc
mov
add
push
push
inc
sahf
jnp
mov
xor
call
xlat
pop
jl
dec
fldcw
jne
sarb
arpl
push
mov
push
and
loopne
dec
dec
cltd
daa
shll
arpl
push
pop
shll
daa
popf
inc
cwtl
mov
iret
xor
mov
lahf
mov
or
xor
test
mov
inc
dec
in
fwait
cmp
stos
jo
sbb
push
popa
pop
mov
lret
aad
fistl
hlt
sbb
in
fwait
iret
sbb
outsl
or
je
mov
xlat
sbb
das
adc
popa
jbe
lods
mov
xorl
mov
adc
pop
out
sbb
inc
mov
movsb
int
add
or
or
push
adc
loopne
xor
push
dec
adc
bound
lahf
mov
xchg
sbb
sub
sub
loope
aad
stos
insl
cli
pop
aas
dec
adc
cwtl
xchg
lea
jbe
xor
adc
xchg
lahf
jbe
xor
cmp
jl
dec
lds
mov
sbb
xor
xor
pop
arpl
pop
mov
mov
cli
lret
pop
hlt
push
hlt
xrelease
gs
cwtl
fistl
jl
xchg
pop
sub
jbe
pop
sahf
mov
movsb
mov
loopne
inc
mov
mov
mov
xchg
ret
jno
xchg
mov
int3
lea
add
aad
das
or
fidivs
dec
jmp
dec
add
mov
into
call
jbe
into
lahf
adc
sbb
pop
mov
mov
add
push
ret
inc
imul
sub
dec
push
xor
xchg
gs
jb
sub
inc
movsl
insl
inc
mov
pop
and
xchg
inc
mov
sub
dec
lods
or
test
fldl
mov
lods
add
push
ret
aas
dec
pop
in
call
scas
xor
in
clc
ja
cmc
rorb
fcmovnbe
les
je
mov
loopne
pop
imul
sbb
add
jnp
fsubrl
jg
popf
adc
insb
sbb
stos
movsb
outsl
sbb
shlb
xorb
popf
xor
int3
xor
loop
mov
xchg
jae
cmpb
arpl
fsts
sbb
mov
cmp
paddusb
mov
fstps
jb
cmpb
push
dec
addr16
aaa
mov
mov
xor
data16
loop
adc
fildl
scas
dec
aaa
and
stos
jns
stc
inc
or
fmul
imul
cld
mov
icebp
hlt
mov
inc
sbb
pop
popa
jnp
jnp
fisubrs
mov
sub
cs
dec
insl
ja
cltd
sti
cli
out
adc
and
mov
mov
ja
add
mov
mov
loopne,pn
push
fcomip
jp
sbbb
mov
xchg
xchg
cmp
arpl
repnz
cltd
addr16
adc
mov
inc
cld
or
dec
and
hlt
inc
inc
repnz
lcall
dec
nop
icebp
mov
cltd
mov
pop
xor
sub
jae
ds
adc
lods
lret
in
or
and
rcr
xor
mov
jle
add
mov
scas
pop
sbb
jne
jg
insl
xchg
das
xor
mov
sbb
out
mov
push
jnp
jno
cmp
mov
push
test
lcall
inc
and
jns
in
ret
in
push
adc
repz
inc
inc
ror
jle
inc
imul
imul
jno
jle
das
pop
fcomps
sub
mov
push
xor
test
cmp
xchg
mov
movsb
mov
pop
and
ljmp
xchg
sti
insl
dec
adc
scas
lods
sahf
es
test
sbb
xchg
in
push
cs
scas
imul
adc
lods
imul
loopne
sbb
pop
imul
jne
xchg
lcall
fldenv
js
push
popf
je
daa
aaa
aas
inc
sub
stc
ss
icebp
mov
cmp
fdivl
shrl
cmp
imul
test
adc
out
add
xchg
sbb
jp
iret
xchg
cmpsb
insl
mov
pop
push
xchg
jge
mov
jl
add
xor
ss
push
dec
test
adc
add
mov
pushf
jo
jbe
push
inc
add
addr16
inc
add
dec
mov
or
or
ss
ds
loop
adc
cmpb
call
cmp
sahf
jne
aaa
fildl
pop
inc
mov
mov
jne
rorb
sbb
adc
repnz
imul
mov
sub
pop
les
dec
shll
mov
dec
mov
cli
push
and
mov
ret
pop
dec
mov
lea
addr16
mov
lcall
jmp
test
xchg
pop
sub
mov
add
xchg
leave
dec
and
mov
mov
or
add
mov
push
pop
adc
imul
sub
imul
jecxz
mov
pop
inc
repnz
loopne
mov
mov
mov
rol
hlt
pushf
adc
pusha
dec
jno
add
clc
push
cltd
jle
test
std
test
out
push
jle
pop
in
fwait
sbb
sbb
les
insb
mov
mov
pop
lcall
lcall
xor
cmp
mov
loope
loope
or
rorb
jo
mov
pusha
sub
inc
popf
dec
inc
int
cmp
dec
xchg
cmc
dec
xor
aam
xchg
cmc
ja
jmp
pop
mov
lock
loopne
pop
dec
xchg
inc
sbb
cmpsb
or
fwait
das
xor
and
jno
mov
mov
cltd
cmp
outsb
test
cmp
sub
hlt
mov
sub
mov
std
jns
scas
in
dec
outsb
ljmp
pop
shll
pop
das
adc
and
nop
fnstsw
or
aaa
jb
mov
sbb
cs
mov
cwtl
leave
ret
stc
movsl
addr16
cmp
cmpsl
daa
and
cmp
mov
ror
mov
pop
rcrb
shll
mov
xorl
push
jle
xchg
mov
xchg
xor
push
or
rep
or
add
dec
dec
dec
insl
arpl
fisubs
jae
data16
outsb
jnp
cld
xchg
sahf
fwait
adc
movsl
aad
cli
push
mov
mov
sub
dec
pushf
cmpsl
notb
pop
xchg
outsl
movsl
rorb
out
icebp
push
dec
fdivrl
ljmp
sub
sbb
roll
xchg
dec
mov
pop
add
stos
ret
or
dec
add
sbb
shrb
movsl
dec
gs
xchg
ja
mov
push
pop
shl
jecxz
mov
add
hlt
xchg
jnp
cmpsl
or
mov
clc
xchg
or
iret
mov
xchg
and
in
sbb
inc
lods
std
xchg
lock
sbb
stos
xor
fs
push
loopne
or
ljmp
xchg
ljmp
jne
push
and
push
pop
test
push
lods
xor
popa
xchg
sbb
fdivs
or
pop
loop
gs
fidivs
out
sbb
mov
inc
sti
icebp
iret
push
dec
cli
loop
dec
xchg
dec
push
xchg
cmp
lock
fwait
jnp
or
out
test
pop
in
add
cmc
dec
sti
mov
xor
lret
inc
xlat
test
add
xchg
sub
pushf
pop
or
insb
or
adc
add
or
pop
mov
inc
shrb
in
scas
out
mov
add
sarb
sbb
movsl
popa
fs
or
aas
mov
shlb
add
push
cmp
jb
das
stos
movsl
mov
adc
fcoms
out
aad
jp
mov
sub
cmp
pushf
je
cmp
xchg
das
rcll
lock
adc
add
pusha
movsb
sbb
sbb
mov
mov
pop
cmp
inc
js
out
cld
dec
jae
xor
leave
xor
inc
fucomi
push
fnsave
dec
mov
mov
mov
lods
sub
fldt
dec
loop
xlat
add
enter
hlt
xchg
push
daa
repz
mov
cmp
mov
jl
pop
sub
fwait
sbbb
mov
xor
lcall
pop
mov
sub
add
out
sbb
add
movsb
lods
pop
div
stos
repz
jnp
stc
lcall
andb
pop
lcall
push
scas
dec
xor
popf
lods
xchg
std
lods
mov
dec
jae
cmp
mov
mov
xchg
or
mov
fnsave
bsr
cli
cmp
pop
addr16
adc
or
jge
dec
repnz
xor
nop
arpl
lds
sahf
push
sub
pop
dec
xor
mov
adc
xchg
mov
xor
and
iret
adc
ret
cmpb
jns
movsl
js
pandn
ret
fs
push
sub
mov
mov
pop
lahf
mov
add
leave
inc
test
jg
sar
mov
jmp
xchg
lahf
dec
imul
dec
inc
add
hlt
fbld
mov
push
sub
xchg
in
popf
fsubrl
ss
test
stos
xchg
sbb
mov
sbb
mov
or
incl
out
xchg
loop
test
popf
in
repnz
testb
fistpl
daa
nop
adcb
push
jnp
xor
int
punpcklbw
les
xor
mov
inc
out
inc
negl
lahf
cmpsl
imul
fwait
mov
negl
stos
and
or
add
mov
lcall
sub
psubusb
jne
inc
push
fidivrs
add
ss
cmc
xor
cmp
xchg
insb
mov
ja
cltd
std
sub
add
sbb
mov
xor
mov
jle
jecxz
mov
mov
enter
hlt
adc
adc
jns
inc
sbb
addl
lock
test
push
nop
mov
adc
shlb
sarl
mov
jnp,pt
mov
orl
and
inc
movsl
repz
add
inc
sbb
add
lret
sbb
add
jmp
push
push
imul
sti
es
movsb
jb
pop
add
sbb
xchg
dec
and
stos
int
lret
mov
push
inc
in
dec
pop
addl
sub
cmp
lea
sbbl
pop
pop
cmp
or
ljmp
mov
stc
out
and
mov
mov
icebp
pop
shlb
fstpl
ljmpw
xor
inc
mov
xchg
mov
addl
jb
pop
add
cmp
push
sub
dec
iret
adc
lret
in
out
cli
push
pop
scas
jg
repnz
xor
pop
inc
sti
sbb
fldenv
or
scas
popf
ds
fnstcw
mov
pushf
sbb
in
pop
jb
jp
adc
lock
jecxz
xor
dec
pop
cmp
sbb
leave
jo
and
push
in
xchg
ljmp
xchg
adc
pop
enter
lock
loopne
loopne
inc
or
xchg
fstpt
inc
sub
add
xchg
inc
or
dec
roll
cmovnp
xchg
aas
in
dec
in
mov
pop
pop
mov
mov
inc
es
pop
jno
rcr
add
out
int
aam
outsl
lahf
lcall
pusha
movsl
setg
add
mov
mov
xchg
aad
orl
fsubl
bound
adc
xor
adc
ret
pop
or
sbb
adc
cmp
jmp
pop
pushf
jecxz
bound
lahf
ret
pusha
dec
fstl
mov
mov
mov
inc
xchg
mov
adc
scas
stos
mov
dec
cltd
adc
cmp
lock
mov
push
neg
cmpsb
sub
fcomip
push
mov
sbb
out
mov
stos
cwtl
sti
dec
in
dec
sub
mov
cmp
cmpsb
pop
adc
popf
or
movsl
add
cmp
sub
inc
je
mov
aam
pop
ss
push
push
cmpsb
lock
add
les
pop
pop
push
or
ja
sub
inc
or
xchg
negl
gs
pop
jne
loope
int
mov
sahf
lea
pusha
lcall
xchg
pop
cmp
jmp
add
mov
in
cmpb
push
cmp
push
jl
jbe
jge
scas
push
ret
add
xchg
push
das
lahf
fmuls
int
ret
sbb
add
ja
fisubrs
inc
int3
push
and
cltd
ja
rdpmc
stc
push
push
testl
mov
roll
das
xchg
in
xchg
push
jo
jge
movsb
jns
mov
mov
mov
lods
lret
mov
mov
scas
mov
dec
inc
leave
lret
push
fnsave
pop
cmpsl
leave
aad
mov
loope
mov
inc
jnp
mov
cmc
sbb
dec
jae
pop
int3
repnz
push
xor
jae
outsl
cmc
mov
int3
pop
cwtl
sbb
nop
fnsave
mov
adc
mov
pop
jne
jle
ds
or
movsl
xor
rcl
ss
jne
dec
push
inc
cmp
mov
cmpsb
enter
out
ss
lret
push
sbb
and
and
mov
xlat
pop
xor
push
push
dec
mov
push
aaa
adc
hlt
lret
push
mov
mov
pusha
or
out
sub
in
int
lea
sub
or
push
push
lods
push
pop
mov
inc
rol
mov
movsl
repz
loop
or
popf
test
mov
cld
mov
mov
je
pop
push
lcall
fs
mov
mov
cmpsb
adc
cmc
mov
aas
sub
cmp
outsl
ja
in
push
push
mov
add
push
out
and
xchg
push
xor
call
pop
pop
imul
adc
pop
mov
mov
cmp
js
lret
jo
push
adc
inc
sbb
cmpl
pop
cli
popf
jle
mov
cmp
cmpsb
cld
sub
jns
fdivrp
out
push
movsl
test
shll
repnz
out
stos
repz
cli
in
in
jae
pop
inc
stos
es
and
xor
ror
xchg
push
into
mov
mov
cld
xchg
or
mov
xchg
cmpsb
lock
xor
fsts
sbb
fnstenv
push
xor
mov
cmpsb
cmp
gs
jnp
mov
add
inc
rcr
jmp
loop
cltd
cmp
sbb
popa
sahf
stos
es
fwait
test
mov
push
xorb
pop
pop
fisubrs
add
push
stos
jecxz
ja
push
sarb
mov
fnstcw
bound
mov
mov
arpl
pop
sub
mov
popf
popa
scas
enter
push
std
rcr
ret
mov
mov
add
mov
xchg
xorl
jns
mov
popa
jo
mov
out
add
fcoms
loope
mov
cmpsl
cmp
sub
and
addb
push
lahf
fsubrs
movb
pop
sahf
sarl
xor
or
scas
inc
cmpsl
and
cmpsb
insb
jae
js
lods
shr
aam
push
movsb
xlat
mov
fstl
fbstp
hlt
mov
mov
push
adc
sahf
sub
hlt
pushf
or
mov
scas
mov
adcb
mov
ret
lods
jae
or
addr16
test
adcb
sti
cwtl
call
or
idiv
cmc
cmp
fwait
jbe
push
cmp
or
mov
pop
imul
jbe
adc
sbbb
test
add
les
cmpl
adc
pop
sub
divl
shlb
lret
inc
pop
mulb
lock
xor
add
int
fisttpll
das
add
out
cwtl
adc
out
hlt
adc
lahf
lret
pop
repz
mov
addr16
cltd
push
movsl
cltd
lahf
push
lods
lods
mov
or
in
xchg
stc
inc
shrb
cmp
sub
ja
xor
call
dec
fwait
pop
and
jo,pt
imul
sbb
push
lret
pushf
xchg
add
rorb
popa
mov
sub
or
inc
stos
scas
and
sbb
dec
inc
mov
xchg
fs
dec
xchg
mov
adc
bound
push
add
nop
outsl
inc
adc
fisubrs
orb
sbbl
fiadds
push
movsb
or
lock
sbb
call
loopne
cmp
orb
cmp
into
jo
adc
repnz
insl
or
mov
mov
jecxz
dec
mov
fisubrs
add
push
test
testb
sbb
push
test
pop
xor
int3
sbb
and
add
cmp
mov
adc
mov
loope
inc
inc
mov
xchg
dec
sub
xorl
mov
dec
and
test
pop
mov
imul
hlt
sub
xor
adc
aad
mov
mov
ljmp
dec
dec
lahf
paddsw
xchg
les
or
inc
fcmovnbe
jp
push
dec
and
mov
shl
lods
pop
or
xchg
popa
xchg
jae
pushf
clc
orl
add
int3
jno
mov
mov
inc
xor
sub
push
mov
push
mov
std
sbb
jb
jg
and
icebp
orb
das
pop
repz
nop
adc
xchg
pop
aam
mov
push
pushf
aaa
mov
lret
int3
sbb
cmp
ret
or
ljmp
jno
xor
adc
inc
push
push
out
popa
cmp
es
lret
pop
jne
xor
stc
ja
loope
xor
popa
movsb
lods
sbb
sub
or
gs
lret
jp
and
test
and
lcall
fcoms
push
pusha
xor
mov
test
mov
dec
mov
je
sub
mov
jns
test
out
dec
add
push
xchg
add
mov
pop
sbb
xchg
xor
insl
jecxz
loope
cmpsb
cmpsb
or
call
inc
push
cmp
mov
std
fmuls
scas
hlt
int3
daa
ret
dec
je
and
push
ds
inc
mov
add
mov
fwait
xor
repnz
out
adc
mulb
lods
jb
fwait
fadds
cmp
sbb
mov
push
loopne
xor
push
pop
mov
int
mov
outsb
xchg
pop
jp
sbb
outsb
push
aas
fistps
notb
pop
aam
push
push
ret
adc
inc
xchg
mov
xor
je
ret
hlt
mov
push
push
push
inc
rcll
orb
mov
test
pop
sbb
push
jg
and
mov
xlat
enter
jp
scas
enter
xor
lods
iret
scas
push
pop
loope
inc
div
mov
leave
pusha
ret
int3
sbb
outsb
aad
outsl
icebp
xchg
sbb
jg
imul
je
in
dec
mov
out
sbb
bound
pop
loopne
inc
in
sub
mov
pop
jo
aas
sub
rcrb
xchg
cmp
rcrb
pop
pusha
jmp
dec
xchg
xchg
les
ljmp
pop
fwait
jnp
into
scas
xor
jne
mov
stos
gs
hlt
mov
jnp
mov
push
xor
push
cmpsb
xor
ljmp
idivb
mov
jge
repnz
jle
mov
push
adc
mov
push
pop
mov
mov
imul
mov
orb
mov
clc
in
xchg
lcall
sbb
dec
jae
mov
add
movsl
lcall
xchg
sub
xchg
cmp
or
outsl
and
std
inc
int3
jae
movsl
mov
fsubr
andl
inc
push
leave
ss
call
fdivrs
push
jae
mov
xchg
xchg
push
sub
test
pop
pop
or
lret
inc
icebp
jae
mov
pop
mov
fwait
dec
les
je,pn
sti
cmp
mov
inc
adc
in
lret
cmp
mov
cs
or
xchg
lods
adc
ljmp
mov
push
pop
popf
es
mov
mov
aad
scas
fistl
call
xchg
stc
mov
cmp
loop
pop
sub
jno
jp
loopne
outsb
in
add
mov
jp
mov
fwait
data16
pop
xor
les
into
mov
pop
ret
flds
js
mov
lods
out
mov
and
jp
lahf
in
ja
mov
or
test
sub
or
lock
movsb
sarb
sub
jo
push
pop
je
push
pop
clc
pcmpgtd
pop
scas
jg
jmp
lret
shlb
nop
sub
xor
inc
mov
inc
cmp
mov
mov
cld
sbb
pop
cmpsl
pop
inc
push
mov
dec
pop
je
mov
xchg
mov
es
xor
xor
dec
mov
int
fimuls
ja
inc
lock
xorl
cmp
xchg
xor
sub
pushfw
push
xor
sub
lea
xchg
jo
rorb
lahf
pop
and
sbb
sub
das
shlb
ret
fsubl
mov
faddp
mov
flds
rcll
jmp
loopne
cli
dec
sbb
std
test
mov
jae
testl
insl
aaa
jp
stos
xlat
xor
mov
cmc
inc
pop
ja
dec
test
ljmp
int3
stc
mov
pop
icebp
sbb
jecxz
mov
popa
fiadds
sti
xchg
loope
inc
je
adc
aam
cmp
js
mov
mov
xorb
fwait
push
cmp
push
fistl
arpl
cmpl
sub
es
jecxz
mov
rcll
sbb
inc
ja
fistpll
sbb
imul
jg
daa
mov
mov
cmpsl
aad
fldl
mov
push
inc
imul
add
repz
jno
sbb
shll
jae
push
push
jl
stc
jo
sar
pop
call
mov
mov
les
mov
cmp
mov
andb
dec
shll
pop
pop
xor
fldl
sbb
loopne
les
add
mov
pop
into
lret
mov
je
js
jae
sub
and
jmp
aad
or
xchg
adc
jg
in
dec
stos
adc
add
sbb
inc
insb
dec
push
stc
in
add
loopne
inc
inc
jecxz
push
int3
mov
xchg
fisttps
mov
test
push
ret
fsts
repz
cwtl
popa
adc
mov
jecxz,pt
mov
call
pop
mov
daa
stos
pop
pop
lods
inc
not
mov
test
or
sbb
dec
sti
mov
sub
pushf
add
jns
lock
adc
out
in
jo
mov
push
xchg
pop
sub
jns
and
pushf
mov
sbb
test
repz
push
mov
xor
insb
movsb
jge
xchg
ja
mov
ror
xchg
pop
xorb
movsb
pop
insb
sub
scas
xchg
sub
fisubrl
push
ljmp
cmp
xchg
dec
or
shr
sub
pop
lret
fmul
sub
jecxz
or
adc
sub
mov
arpl
fsubs
shll
xor
and
mov
stos
mov
adc
hlt
pusha
mov
imul
pushf
mov
jo
sahf
pop
repz
insb
enter
stos
pop
fcmovb
cmc
in
pop
cmp
dec
pop
mov
fnstsw
cli
lea
pop
cmp
lds
xlat
dec
cwtl
stc
fmull
jbe
ret
scas
sub
mov
mov
mov
jns
in
jnp
ret
in
sbb
inc
inc
inc
xchg
cmp
and
push
cld
inc
aaa
repz
icebp
lret
push
push
xor
xchg
scas
arpl
mov
mov
xchg
adc
cmp
xchg
js
jno
sbb
loope
repz
mov
push
xor
xor
repnz
call
push
pop
insl
in
sub
scas
int
fwait
pop
pop
jbe
ret
jne
fisubl
movsb
pop
flds
cmpsb
xchg
or
aas
rorl
inc
cmp
and
mov
xor
fisttpl
popfw
push
decb
sarl
sub
scas
sar
jb
loopne
divb
out
mov
mov
mov
push
addl
fwait
cmp
adc
test
into
cmpsb
in
sti
pop
or
fs
movsb
jae
xor
cmc
inc
shrb
push
adc
out
adc
cs
fists
dec
inc
xchg
popf
xor
push
std
pop
dec
jno
stos
push
sub
adc
test
dec
lds
or
inc
push
jo
pop
adc
outsl
das
mov
fists
add
insl
cmc
in
push
fisttps
adc
shl
lret
jbe
int3
or
adc
inc
repnz
outsl
cld
lods
test
dec
mov
fidivrl
sbb
mov
in
jnp
lret
adcb
mov
cltd
mov
aad
jl
scas
shrb
jnp
cmc
xchg
scas
fildl
ss
rcl
imul
flds
push
push
jb
outsb
add
dec
mov
popa
ss
hlt
xor
push
fistps
andb
pop
dec
adc
pop
orb
scas
mov
sarb
cld
push
jb
jne
jo
mov
dec
and
push
xchg
sbb
shlb
jnp
adc
push
pop
xchg
push
xor
pushf
sbb
nop
mov
mov
xchg
sbb
add
fistpl
popa
cmp
das
rcll
dec
adc
mov
sub
push
push
fucomp
outsl
push
xlat
loop
push
jl
pop
dec
sbb
std
fadds
jp
sbb
outsb
and
out
xchg
xor
lcall
in
ret
pop
adc
inc
jnp
and
int
push
dec
pusha
fcoml
test
stc
dec
stc
cmpsl
cli
stos
imul
sub
xchg
int3
mov
mov
andb
pop
stos
sarb
insb
iret
sbb
jno
cmc
scas
rorb
out
mov
out
push
cmc
lds
cmovl
imul
mul
inc
and
out
xchg
jmp
jle
rclb
pop
fnstsw
dec
popf
notl
pop
mov
insb
and
jle
arpl
out
movsl
fistps
enter
loope
aaa
xchg
loop
lods
and
lret
in
pusha
cli
ret
pop
inc
and
fwait
push
es
dec
dec
daa
sbb
dec
xchg
call
or
xor
push
cmpsb
daa
outsb
sub
mov
push
popa
mov
aam
lret
and
loop
pop
pop
mov
popf
inc
test
jnp
scas
jne
addr16
add
hlt
adc
aad
rdpmc
pop
sti
adc
dec
bound
mov
ds
mov
dec
mov
in
push
test
mov
sbb
out
sbb
loopne
push
lds
mov
adc
rclb
sarb
jns
xchg
dec
cltd
sub
rolb
ss
insb
leave
mov
daa
or
cmp
shl
outsb
insl
addb
mov
in
xchg
sbb
sub
loop
push
jnp
fisttpll
negl
sbb
jno
xchg
push
and
add
int3
dec
jge
fnstsw
dec
mov
into
sub
mov
cmp
pushf
fdivs
and
push
mov
outsb
push
push
mov
mov
jne
mov
pop
pop
mov
dec
xor
jg
or
xchg
cmp
sahf
push
lods
cmp
jns
std
mov
jnp
add
orb
push
pop
pop
filds
pop
sti
xchg
sbb
hlt
rclb
xor
cmpsb
push
push
dec
xor
cmp
cld
xchg
popa
xchg
jmp
icebp
call
mov
notl
stc
mov
jle
or
mov
cmpsb
int3
push
adc
mov
inc
outsl
ss
call
movsl
dec
outsb
pop
pop
ljmp
jne
js
add
dec
mov
ret
lret
sub
add
pop
out
cmc
mov
insb
adc
jmp
addr16
stc
aad
data16
xchg
loop
sbb
sub
cltd
lds
test
repz
stos
hlt
sti
push
imul
inc
fs
pop
gs
mov
mov
ret
mov
inc
pop
and
add
out
je
jmp
fwait
repz
aam
push
sub
pushf
loop
ss
mov
cli
aas
mov
sbb
jns
inc
jg
inc
sbb
and
sub
xchg
or
jge
aas
movsb
inc
xchg
sub
dec
div
stc
adc
xor
inc
into
xchg
xchg
outsb
or
dec
adc
stos
cmp
ret
dec
sbb
in
mov
repz
fcomps
loopne
ffreep
cmp
add
sub
sub
and
ror
pop
xor
inc
repz
shll
ljmp
cmpsl
scas
test
outsl
bound
jns
idivb
fbstp
xor
outsb
andl
push
xchg
shlb
cmpb
aas
in
clc
movsb
xchg
or
lods
cmp
enter
imul
mov
fmull
fldcw
lret
xor
stos
int3
and
std
test
jo
xor
mov
dec
add
xchg
or
and
lcall
lcall
cmpsb
stos
pop
sbb
bound
arpl
mov
push
jnp
xchg
pusha
push
or
les
add
mov
fstps
sub
sbb
mov
pop
jmp
xchg
sbb
aas
adc
in
pop
and
cmp
sub
lds
jp
test
pop
push
xor
arpl
pop
xlat
adc
test
int
leave
sbbl
dec
loop
mov
je
xlat
add
shll
pop
mov
push
dec
aad
lds
pusha
loop
mov
sbb
cmpsl
adc
sbb
out
xchg
cmp
arpl
out
and
jbe
mov
cmp
mov
cwtl
inc
xchg
test
dec
cmc
adcl
mov
enter
mov
std
ffree
sahf
fstps
movsl
pop
in
pop
iret
jo
mov
data16
movb
xchg
mov
jg
ja
stc
jmp
lods
stos
sbb
sub
mov
sub
pop
add
mov
or
enter
addb
and
pop
sbb
das
push
jecxz
add
push
fs
mov
mov
mov
xchg
add
or
push
test
dec
push
scas
jmp
mov
cmp
lock
data16
sti
stc
rorl
sub
xchg
sub
dec
inc
add
dec
pop
push
dec
jo
xchg
or
xor
pop
inc
data16
cmp
clc
push
cli
decb
fwait
subl
out
jbe
jmp
push
repz
dec
and
out
dec
loop
mov
ret
rclb
xlat
jae,pt
lods
stos
cmp
mov
iret
pusha
mov
inc
sete
or
fucomip
push
scas
xchg
add
gs
pop
adc
inc
in
fadds
mov
lcall
dec
arpl
imul
ficoms
jno
jecxz
in
push
out
clc
xchg
mov
sub
aam
aas
shll
pop
lods
out
bound
xor
repz
xlat
cwtl
inc
add
mov
outsb
sti
icebp
and
and
inc
das
jmp
xor
push
pop
pop
out
jne
jns
mov
js
inc
mov
ljmp
fs
xor
push
shlb
xchg
jnp
sar
dec
xchg
shll
mov
inc
test
mov
sbb
pop
adc
loop
jbe
fwait
movb
andl
jg
mov
xlat
insl
cmp
fwait
push
fistpl
sbb
mov
pop
inc
cwtl
or
aaa
push
sti
mov
jne
fisttps
dec
mov
leave
push
push
adc
add
dec
icebp
cmp
xchg
or
js
mov
and
and
cltd
outsb
or
ret
xor
test
lret
rorb
sbb
push
dec
cld
jnp
push
mov
and
mov
pusha
xor
push
sbb
mov
insb
xor
push
out
notl
inc
inc
inc
push
push
dec
and
jb
cmpsl
out
xor
xchg
push
mov
dec
movsb
inc
jae
hlt
push
mov
pop
mov
sti
mov
jge
das
adc
mov
dec
pop
iret
xor
out
push
dec
movsl
loop
pop
sub
xchg
pop
jae
xor
jp
stc
int
sbb
inc
mov
push
sbb
lret
mov
sub
shlb
xchg
push
cmp
push
adc
cmp
dec
dec
mov
xchg
cmp
vpacksswb
xor
cmpb
cmp
aaa
push
dec
clc
scas
push
loopne
movsb
je
push
jns
sub
outsb
mov
sbb
xchg
pop
sub
dec
aam
and
sbb
lods
clc
cmp
xor
aad
jle
jge
shll
arpl
mov
pusha
mov
int3
or
ret
jle
in
lods
dec
cs
pop
or
pop
adc
imul
dec
fnsave
pop
pusha
mov
xlat
sub
lret
mov
test
call
and
push
push
push
ds
jle
das
pop
sbb
lock
std
loope
push
sub
into
fs
jg
loop
mov
mov
sbb
mov
sub
test
pop
shll
in
lcall
iret
enter
insb
jno,pt
xor
addl
ret
sbbl
adc
movsl
repz
xchg
loope
or
int3
pop
add
jl
ret
sub
cmp
inc
out
test
jb
dec
mov
xchg
sub
sub
pusha
out
inc
mov
out
jge
adc
call
pushf
loope
imul
mov
inc
push
cmp
xor
xor
into
nop
jns
or
mov
cmp
jge
mov
ja
cmp
mov
into
pusha
fs
xor
lds
push
add
call
sarl
lods
inc
mov
pop
je
fidivs
icebp
fcmovbe
mov
xor
mov
ja
xchg
jne
dec
xchg
dec
sub
dec
fadds
and
dec
sbb
fcmovu
jne
inc
mov
xchg
stos
mov
repz
and
ret
fildll
enter
or
pushf
addr16
xchg
iret
cmpsb
out
rcrb
push
loopne
sub
xchg
lea
ljmp
cmp
adc
sti
adc
mov
push
sti
pop
mov
inc
push
push
sbb
lret
push
fists
lret
lret
imul
push
jmp
outsb
xchg
inc
push
pop
inc
jo
popf
adc
je
jno
fs
imul
jle
cmpsb
xchg
out
mov
push
dec
push
sub
out
push
pop
aaa
push
pusha
leave
mov
xor
sbb
outsb
outsl
pop
sahf
mov
jns
or
mov
mov
ljmp
pop
and
subb
lods
sub
dec
jge
sub
das
sbb
adc
add
rcrb
bound
dec
in
dec
pop
or
addb
icebp
mov
push
addr16
mov
jns
xchg
daa
mov
and
fimuls
vxorpd
or
and
inc
xorb
push
jecxz
lcall
rclb
xchg
outsl
das
jbe
push
adc
push
push
inc
lods
pop
gs
push
jecxz
test
jmp
jne
enter
xchg
in
mov
loopne
idivl
in
sub
push
mov
mov
mov
push
clc
dec
repnz
jo
ljmp
inc
imul
iret
loope
sub
adc
test
add
addl
mov
jns
repnz
mov
pop
insb
or
cs
aad
fs
rcll
in
cmpsl
jecxz
aam
sub
xchg
decb
cmp
shr
loope
or
lods
cmpsl
sub
jge
xchg
das
enter
repnz
cli
icebp
shrl
add
add
sbb
in
fnsave
push
dec
xchg
jne
sub
xchg
aaa
fsts
out
dec
push
mov
cmc
rcrb
xchg
pop
add
mov
sbb
sbb
cs
psubsw
in
daa
mov
pop
push
inc
jbe
xor
lahf
dec
pop
dec
xchg
lds
mov
cmp
cmpsb
pop
jae
lcall
mov
les
mov
enter
andl
in
jno
andl
and
fwait
pop
mov
dec
lret
or
loop
popa
push
sti
inc
inc
and
or
sub
std
leave
fwait
imul
xor
sbb
push
enter
mov
fildl
pushf
pushf
or
cmp
jb
test
mov
cmp
imul
nop
fisubrs
mov
mov
pop
push
rcll
decl
imul
cmpb
inc
cs
xorb
xor
divl
push
add
push
xor
mov
cmpsb
roll
cmp
sarb
cmp
aaa
leave
xor
test
jge
or
cmp
pop
xor
lock
pop
fmuls
fwait
test
rorl
aam
dec
sub
ds
add
test
cmpsb
mull
cmp
nop
test
xor
shlb
pushf
adc
jnp
ja
jge
add
dec
subl
cmp
mov
add
pop
add
jae
insl
xchg
ljmp
aam
jnp
ss
ja
lods
test
cmp
dec
pop
and
scas
pop
xor
daa
sbb
scas
lock
pop
ljmp
pop
in
jne
into
sbbb
jns
mov
push
cmp
adc
aad
stc
lock
or
push
sbb
imul
ds
popf
pusha
daa
outsl
cltd
mulb
cwtl
loop
fistpll
lds
push
subl
inc
lods
dec
in
loop
mov
and
xchg
mov
cld
pop
aad
les
push
xchg
dec
xchg
mov
in
in
test
mov
xchg
aad
in
push
arpl
das
and
cmp
pop
lods
lret
cmc
out
pop
ds
out
mov
push
rolb
cmp
pop
sbb
lods
ds
cmp
inc
jecxz
dec
arpl
sti
add
cmp
xor
sbbl
insl
ret
xchg
aam
movsl
jge
add
cmpsl
xor
bound
aaa
stc
cmp
repz
sbb
sti
lret
lahf
fidivrs
push
cmp
inc
push
adc
xor
pop
jge
iret
fadd
ja
inc
mov
cmp
in
sbb
add
popa
mov
stc
add
add
jno
jne
mov
lods
xor
shrl
pop
mov
lcall
dec
xchg
push
push
mov
add
int3
mov
mov
clts
add
shll
dec
jo
mov
pop
adc
jo
jno
and
cmp
es
mov
or
stos
sub
sub
xchg
fiaddl
sahf
cmp
xchg
adc
jl
fsubp
stos
push
out
lahf
out
sub
ds
fcmovu
clc
cmp
xor
pop
nop
test
ja
add
push
cmp
shlb
repz
dec
pop
lds
xchg
in
fs
pop
jp
jns
aas
pop
mov
clc
xlat
out
cmp
loope
mov
inc
sbb
jno
or
lcall
add
mov
loope
jge
out
pop
shll
cmp
inc
xchg
pop
test
pop
push
cmp
pop
aam
xchg
je
mov
out
in
push
dec
test
fdiv
pop
adc
shl
xor
jmp
xchg
or
popa
pop
in
sbb
out
push
mov
and
cld
xor
adcl
leave
bound
add
ja
aam
jb
je
and
out
inc
and
pushf
iret
or
sub
xchg
loop
rsqrtps
pop
hlt
push
popa
xor
xor
push
lods
xor
movsb
ss
fistpl
insl
dec
mov
scas
mov
imul
jle
shll
cmp
jnp
fisubs
gs
xchg
int
outsb
sar
mov
inc
out
ret
dec
ret
mov
xor
add
repz
add
mov
or
adc
mov
shl
xchg
pop
inc
xchg
mov
fcmovnb
leave
inc
xor
xchg
mov
xchg
lcall
pop
mov
or
loope
ljmp
pusha
ljmp
push
jnp
sub
sub
inc
stos
xchg
aaa
xor
fwait
and
cmp
dec
outsl
pop
pop
gs
mov
nop
xorl
daa
outsb
out
loop
cmpb
xchg
inc
and
pop
mov
cmp
dec
js
ja
andb
ds
pop
jnp
sub
fmuls
ret
lock
or
loopne
adc
pop
rclb
iret
bound
sbb
pop
mov
dec
movsl
mov
fsubrl
add
mov
in
icebp
shl
je
sbb
aaa
jge
mov
stos
xchg
aaa
movsb
outsb
fldcw
and
in
jle
xlat
jne
jbe
or
jg
mov
mov
mov
mov
inc
mov
jge
rolb
mov
mov
jg
mov
push
shrb
repz
xchg
mov
sti
imul
mov
sbb
and
movsl
adc
or
pop
fsubrs
pusha
repnz
test
aas
gs
lds
jns
pushf
addb
mov
mov
popf
mov
pop
push
xchg
add
jp
stc
das
mov
push
daa
out
cmpb
js
adc
es
jmp
xchg
int
adcb
and
or
loopne
scas
sub
mov
adc
inc
aaa
gs
push
outsl
xor
mov
fcomps
pushf
std
lods
jg
sti
sbb
and
pop
mov
cmp
outsl
mov
lock
enter
mov
xor
data16
xor
mov
shlb
ljmp
out
call
push
dec
in
fidivl
or
bound
fisttpll
cmpb
cmp
not
add
xor
inc
mov
lock
add
xchg
outsb
sahf
adc
pop
sti
nop
dec
adc
rorl
cmpsb
lods
outsl
loopne
push
xchg
fnstcw
arpl
icebp
mov
ja
mov
test
arpl
icebp
mov
sbbl
rorl
sbb
sti
adc
inc
in
mov
lock
test
jns
inc
cmpsb
cmp
pop
xchg
fdivl
movsl
xchg
and
imull
mov
lcall
loop
test
jge
jmp
jae
repnz
test
pop
xchg
loop
ljmp
mov
xchg
popf
xor
leave
sbb
fdivl
jp
stc
or
cmp
or
push
adc
scas
es
movsl
out
adc
clc
popf
mov
push
stc
insb
call
rorl
push
dec
push
jne
into
cwtl
ljmp
jb
cmp
andb
mov
xchg
cmc
or
les
adc
or
test
test
jno
ss
cmp
cmp
or
insb
shrb
dec
and
xchg
popf
push
and
fs
push
imul
mov
mov
jns
in
push
cltd
inc
jecxz
sub
xlat
addr16
sub
rorb
lods
repnz
xchg
xchg
mov
dec
in
fs
std
pusha
call
loope
push
rcl
int
adc
ret
int3
adc
repz
stos
pop
outsl
mov
aaa
je
leave
addr16
push
daa
adc
jae
add
sbb
pop
or
pop
xchg
lods
outsb
lea
ret
outsl
out
xchg
push
cltd
bound
pushf
push
ds
mov
shlb
imul
stc
mov
sub
hlt
pop
scas
jno
mov
outsl
push
dec
sahf
ds
sub
push
pop
xchg
mov
mov
fsts
cltd
jg
inc
hlt
pop
scas
xchg
subb
int3
pop
mov
jge
outsb
pop
outsl
xor
xchg
stos
out
in
je
mov
jbe
pop
jmp
jmp
std
scas
or
cmpsb
test
mov
out
sti
popf
mov
out
pusha
lea
aas
lret
scas
pop
lock
add
xor
mov
out
and
imul
pop
es
stos
movsl
aad
jne
lea
xchg
and
push
pop
jle
adc
clc
lods
pop
and
ss
mov
jns
adc
aad
insb
pop
adc
sbb
and
lea
adc
lods
add
test
les
rclb
lods
sub
ljmp
notl
inc
xchg
xchg
and
xchg
inc
data16
mov
jne
jb
xlat
xchg
and
ja
inc
pop
sub
push
sbb
loop
xchg
and
mov
loop
cmc
adc
xchg
aas
idivb
add
pop
ret
test
mov
cmpsl
add
jne
or
iret
lahf
clc
mov
sub
cmpsl
or
adc
or
mov
xchg
fwait
scas
mov
xor
and
xchg
xchg
push
ja
lcall
cmpsb
mov
insl
add
movsb
inc
divl
mov
das
dec
pop
pop
mov
mov
sahf
jge
inc
cmp
out
mov
sub
dec
lcall
aad
pop
subl
lods
mov
outsl
insl
js
sahf
xchg
test
mov
cs
dec
bound
push
mov
loopne
sbb
inc
cmc
xor
ret
add
jl
sbb
lea
outsl
mov
mov
and
inc
sub
aas
nop
push
out
mov
fidivs
sbb
pop
into
stos
sub
push
xor
fcmovnb
xchg
mov
shrl
jl
aas
and
add
movsb
inc
jns
in
mov
push
cmp
and
imul
imul
mov
lods
fisubs
jecxz
sbb
push
sbb
add
mov
mov
and
mov
cmpsl
jne
fnsave
xchg
mov
jo
and
inc
jp
sti
or
sbb
aad
sarl
pop
or
push
mov
sahf
sub
rcl
fdivl
scas
ds
movsb
xor
push
fs
push
lret
or
pop
dec
push
dec
pop
gs
push
pushf
pop
pusha
es
movsl
fmuls
and
jbe
arpl
jg
loope
sarb
mov
cmp
push
nop
lds
or
mov
out
rolb
les
mov
dec
nop
jne
das
gs
lret
icebp
call
or
jp
ja
cmpsb
ret
xchg
sahf
mov
sbb
push
outsb
test
test
loope
or
mov
sarb
push
sub
add
jmp
pop
clc
cmpsb
jge
clc
mov
xchg
inc
mov
jbe
xchg
test
stos
addr16
add
in
dec
data16
inc
push
mov
data16
push
xchg
nop
sub
aas
pop
inc
push
inc
sbb
mov
push
jno
push
and
orl
outsl
sti
inc
inc
mov
add
mov
mov
or
sub
test
stos
pop
or
mov
or
inc
jl
push
cmpsb
cmp
lret
test
dec
mov
mov
or
in
xchg
mov
mov
xchg
fwait
loope
subb
xchg
mov
xlat
in
clc
inc
or
mov
insb
mov
insl
xchg
lahf
xor
or
into
pop
les
cwtl
inc
dec
rcrl
or
mov
mov
test
and
cmc
dec
cmp
mov
inc
mov
cltd
xor
jo
fs
pusha
mov
clc
inc
fistpll
fstps
in
aas
lea
mov
mov
adc
outsl
push
pop
xor
daa
and
cmc
mov
mov
out
sbb
movsl
xchg
popa
jbe
popa
cmpsl
leave
mov
sbb
ret
jnp
pusha
xchg
shlb
xchg
inc
arpl
cmp
push
push
arpl
stc
in
and
sub
aad
out
pop
nop
int3
sub
push
int3
insl
sub
mov
divb
imull
divl
sbb
std
in
sbb
fs
lret
dec
jle
pop
lahf
mov
jle
mov
mov
push
lods
push
outsl
adc
inc
jb
cmpsl
fimull
push
push
jns
in
dec
pop
dec
sahf
sbb
imul
cltd
fwait
movsl
mov
pushf
xchg
xor
inc
std
xchg
mov
mov
mov
js
test
mov
test
add
xchg
cmpsl
cwtl
jg
sahf
jecxz
pop
xor
push
mov
gs
mov
inc
mov
pop
addl
movsb
and
ficoms
mov
adc
push
cmpl
jecxz
xor
sahf
call
jb
mov
adc
xchg
fnstsw
xor
cmpsl
adc
loopne
dec
jnp
cmpl
sbb
push
or
orb
cli
sub
xor
cwtl
mov
daa
ja
aaa
mov
sub
std
dec
cmp
fcoms
xchg
lock
mov
push
dec
outsl
insl
leave
jge
xchg
or
aaa
adc
mov
ljmp
pop
sub
in
inc
adc
xchg
in
cmp
pusha
pop
in
loopne
testb
int
sbb
fdivl
dec
xchg
xor
and
int
add
mov
stos
fsubr
push
mov
jne
xor
stos
xchg
fisttpl
lret
fstpl
adc
adc
lods
mov
and
mov
test
and
lret
test
faddl
xchg
pop
push
cltd
sub
leave
lods
xor
je
mov
inc
mov
test
mov
sub
cwtl
je
dec
lods
sbb
sar
add
jnp
aas
sbb
push
iret
repz
inc
test
xchg
dec
sbb
mov
sub
ds
int
cmp
loope
iret
arpl
popf
or
xchg
das
sbb
inc
mov
or
sub
sbb
shl
push
les
daa
sbb
in
push
push
sub
sbb
inc
arpl
out
pop
fmuls
outsb
push
sub
loop
cmpsb
ja
xor
subl
mov
mov
cld
fcomps
push
mov
outsb
mov
dec
mov
sub
and
icebp
in
rcr
test
test
sub
mov
mov
inc
push
data16
xor
pop
ja
pop
in
lahf
inc
mov
sub
movb
jo
test
ret
mov
fstps
add
inc
xchg
mov
outsl
std
getsec
icebp
scas
or
xor
mov
add
ds
add
fnstcw
jle
inc
sub
stos
xchg
xor
movsb
hlt
imul
xchg
mov
jne
aaa
inc
push
pushf
dec
or
popf
push
loope
xchg
xchg
pop
stc
push
mov
mov
or
add
rclb
mov
adc
inc
cld
inc
mov
jl
xchg
shll
mov
jo
jae
rcll
add
xchg
sbb
mov
fbld
addr16
jg
pop
pop
inc
outsb
or
pop
sub
shlb
sbbb
aas
adc
dec
je
inc
scas
mov
push
mov
outsl
shll
add
mov
aaa
xchg
cmpsl
fidivrs
or
mov
jo
sti
jecxz
imul
adc
fsts
addr16
sbb
aam
rcrl
imul
outsl
jns
sub
in
outsb
inc
cmp
hlt
mov
stos
lret
call
and
cmpsb
push
int3
mov
pop
jnp
mov
pop
adcb
cmp
out
imul
int
adc
add
je
jmp
mov
repnz
xchg
jnp
mov
inc
cmpsl
push
es
pop
lcall
in
ds
pop
mov
mov
addr16
mov
cltd
loop
dec
xor
push
sti
iret
enter
push
sahf
bound
popa
push
lock
sarb
int3
lahf
push
mov
leave
int
sbb
jle
lods
or
pushl
out
into
adc
stos
add
push
jge
xor
sub
cmp
sbb
iret
call
repz
jns
dec
fistps
test
loope
leave
and
sub
repnz
push
adc
sbb
wrmsr
inc
dec
into
xor
rcll
in
outsb
cmp
aas
adc
dec
push
or
incl
jle
ret
xchg
ljmp
xchg
in
ficoml
inc
loop
pop
movsl
filds
loope
stc
cmp
ss
dec
or
push
movb
inc
out
mov
dec
push
mov
xchg
ficomps
popf
inc
mov
fcomp
cmp
popa
mov
in
dec
lahf
mov
aaa
jb
into
push
cmpsl
movsb
cmp
push
sti
test
nop
add
shll
jp
repnz
icebp
and
xor
mov
into
cmpsb
lea
xorl
adc
mov
stos
cmpsl
cmpsb
jge
cltd
pop
inc
negl
sbb
mov
push
je
xchg
xchg
sbb
mov
push
jmp
xlat
mov
out
inc
call
xlat
pop
dec
daa
ret
cwtl
dec
movsb
sub
mov
fcmovu
xlat
js
or
rorb
insl
cmpsb
imul
test
jle
xchg
ret
cmpsl
ss
mov
imul
insl
lcall
cmp
mov
jne
xor
lret
add
mov
lock
push
mov
jno
dec
cmpsl
add
jp
rcll
in
pop
movsl
aam
in
movsl
xchg
ja
mov
out
cmc
sub
lods
out
or
ja
out
popf
es
out
xchg
sub
sbb
out
fists
std
xchg
test
int
dec
fmul
cs
negl
loopne
adc
jo
out
mov
imul
mov
fmull
xor
mov
push
adc
leave
out
arpl
fimuls
js
xchg
rclb
sub
mov
je
xor
adc
dec
push
jo
loop
mov
cmp
jnp
xchg
dec
out
movb
jl
dec
sbb
cmc
pusha
push
mov
dec
xor
xchg
int
sub
add
xor
idivb
in
in
lret
adc
jmp
sbb
aad
mov
xor
mov
cs
repnz
mov
push
lahf
bound
add
xchg
or
pop
mov
test
sub
cmpsb
sbb
lahf
int
stos
sbb
subb
mov
xchg
add
mov
jbe
dec
push
dec
fildll
push
and
mov
push
popf
or
mov
cmpsb
or
mov
outsb
outsl
mov
push
inc
mov
xor
cmpsb
fucomip
std
out
push
imul
in
xchg
sub
popa
test
sahf
jp
mov
xor
jl
adcl
inc
dec
ret
aas
mov
sarb
lret
insl
mov
inc
pop
sahf
pop
cmp
inc
aas
push
mov
stc
insl
fnstcw
sbb
or
daa
mov
nop
cmp
ds
inc
dec
jle
xchg
xor
dec
or
adc
roll
adc
in
fidivrs
xchg
push
sahf
je
iret
arpl
test
and
cmpsl
mov
push
dec
xchg
std
shrl
mull
xchg
outsl
inc
mov
cs
lret
les
in
imul
ss
pop
push
add
pop
lods
inc
cwtl
fimuls
sub
mov
add
aad
fs
mov
push
xchg
cwtl
add
sbb
mov
loop
loopne
testb
stos
add
out
xchg
cltd
inc
sub
movsb
xor
int
ljmp
cltd
sarl
cmp
xchg
cmp
pop
add
negl
inc
ljmp
loope
push
mov
cwtl
add
insb
xchg
punpckhdq
pusha
in
sub
ja
sub
fmuls
sbb
jne
add
in
repz
and
inc
fdivl
pop
aam
imul
inc
fildll
ffree
mov
lea
and
pop
imul
xchg
xchg
inc
fmuls
inc
sub
jp
js
ja
or
xchg
outsb
mov
inc
aam
mov
mov
pop
mov
adc
imul
push
imul
daa
out
loope
lds
xor
inc
fidivl
test
and
adc
arpl
or
xor
in
cs
inc
aaa
push
cmp
push
loope
imul
jb
xor
loopne
cld
or
int
repz
mov
subl
sbb
add
mov
pop
add
mov
jp
mov
cmpl
jmp
or
icebp
aam
ret
xchg
mov
push
fsubr
add
in
sbb
pop
nop
mov
mov
jb
jp
inc
xchg
inc
rcll
jl
sub
ret
push
and
sub
clc
mov
push
test
cmc
pop
ss
lret
mov
xchg
insb
xchg
or
jnp
dec
dec
mov
cmpl
sbb
data16
subl
das
popf
pusha
repz
add
xorb
jge
addb
dec
decb
repz
adc
pop
mulb
test
bound
push
mov
enter
pop
rorb
mov
xchg
xchg
imul
in
scas
js
adc
and
out
adc
stos
loope
test
cmp
xchg
xchg
into
sti
jo
in
ds
jb
pusha
leave
in
jo
sbb
sub
ss
dec
les
cmp
fs
jmp
lcall
mov
sbbl
sbb
dec
movsl
rorl
iret
lcall
movsl
inc
dec
scas
jecxz
into
push
cmp
pop
push
mov
movsb
fwait
push
es
in
push
inc
cmp
cmp
testl
inc
lock
push
sbb
je
scas
adc
and
jmp
loopne
inc
mov
push
add
pop
dec
inc
pop
fs
scas
push
lcall
jge
subl
cmc
notb
cmp
jne
shrb
pop
lods
cmc
testb
sbb
ja
fwait
cltd
mov
xlat
shl
jb
mov
sti
mov
xchg
sahf
pop
loopne
xchg
xlat
pop
mov
mov
into
in
iret
and
arpl
int3
lock
sbb
gs
stos
insb
or
fdivs
xchg
inc
divb
pop
outsl
adc
out
aad
adc
xchg
into
shlb
pop
cmp
add
or
stc
xor
sbb
sub
pop
rol
cmpsl
ror
aaa
es
jns
call
cmpb
jmp
sbb
pop
push
roll
and
mov
scas
push
or
into
inc
popa
fwait
mov
mov
fcoml
xor
mov
shlb
mov
movsb
push
jb
out
mov
fldl
ret
popa
jno
iret
xchg
clc
aaa
add
sub
mov
xchg
ret
push
pop
mov
push
push
popa
inc
inc
sub
enter
addl
pop
insb
in
lds
push
out
sbb
cs
loopne
fmull
adc
ljmp
push
jle,pn
cli
fbld
fidivrs
ss
adc
loope
and
cmp
out
aaa
xchg
cld
sub
jnp
mov
add
mov
dec
jo
jmp
or
in
fsubr
mov
clc
ja
leave
pop
adc
xor
jg
xchg
mov
hlt
lods
stos
sub
push
inc
pop
sub
and
int
and
dec
pop
or
inc
fldl
enter
xor
movsb
jle
sub
pop
mov
orl
lds
sbb
cmp
add
dec
mov
dec
and
xlat
ja
cmp
pop
dec
scas
cmp
pop
push
js
sub
sub
inc
outsl
xor
call
clc
js
jmp
and
ss
stos
xor
insb
ja
inc
xchg
lods
mov
add
ljmp
iret
mull
jo
push
adc
add
sbb
call
in
movd
cmp
jg
inc
pop
fwait
pop
insl
mov
fdivs
ficompl
mov
rcl
push
js
nop
and
pop
mov
out
pop
fidivl
hlt
xor
or
push
mov
and
push
xchg
test
dec
repnz
fldcw
pop
mov
int3
subb
sti
imul
fwait
repnz
sub
pop
lcall
cmp
imull
or
repz
and
frstor
dec
stc
adcb
xor
dec
dec
shrb
adc
dec
out
cmpsl
jmp
je
frstor
sub
sbbb
mov
into
stos
adc
popf
cmpl
lods
cmp
insl
test
mov
ljmp
lods
sub
lods
pop
insl
lahf
movb
out
lcall
mov
cmpsl
call
loop
and
ret
mov
mov
fidivs
mov
xlat
jbe
lcall
cmp
xchg
jnp
adc
in
sbb
jmp
push
fcmovnb
enter
mov
xchg
stos
mov
dec
in
dec
inc
in
gs
mov
lcall
xchg
push
mov
arpl
fsubrs
inc
cs
pop
rol
sbb
inc
in
lea
shrb
push
stc
add
xchg
outsl
or
aam
push
hlt
jg
mov
out
mov
dec
dec
icebp
inc
popa
mov
cmp
stos
jbe
mov
dec
or
mov
jmp
pop
sub
push
fstpt
das
addr16
xchg
sbb
ret
xor
cmp
cmp
mov
xor
cmp
fdivl
mov
test
xchg
loop
xor
clc
cmp
stos
out
flds
outsl
in
je
rcrl
mov
jnp
in
ret
lds
jae
js
sub
inc
push
testl
mov
int
test
mov
inc
test
jmp
out
mov
loope
mov
popa
inc
ljmp
mov
test
xor
mov
nop
stos
and
aaa
jae
push
jl
and
pop
inc
rcrb
mov
mov
clc
enter
ljmp
leave
lods
or
popa
cltd
les
ret
xchg
and
daa
cmp
sub
mov
and
mov
punpckhbw
sub
shlb
cltd
or
hlt
sub
jae
shlb
shrb
mov
adc
mov
cmp
add
sbb
sbb
pushf
xlat
pop
mov
outsb
call
inc
bound
leave
xchg
mov
cmpsl
xor
jns
push
mov
dec
int
inc
int3
out
je
es
mov
mov
push
in
mov
sub
cmpsl
mov
or
std
or
dec
addr16
rcl
dec
idiv
jnp
and
aad
ret
push
sbb
int3
test
pop
jne
aaa
aad
insb
mov
insl
outsl
out
scas
loop
mov
adcb
mov
pop
orb
sbb
ficoms
inc
sbb
mov
cmc
mov
bound
repz
mov
cltd
rorb
dec
aas
loopne
mulb
inc
push
jne
adc
mov
inc
push
stc
and
add
test
sarb
loop
shrb
les
clc
inc
and
pop
addr16
nop
les
cmp
inc
and
sub
in
mov
shl
and
lahf
pop
and
jne
or
sub
cmpsb
push
adcb
mov
cmp
xchg
xlat
divl
out
mov
outsb
cmp
js
mov
mov
adc
jecxz
pop
fsubp
adc
fnsave
sub
mov
and
or
dec
iret
or
rcll
js
jg
je
fwait
inc
ret
cmpsb
stc
lret
gs
pop
aaa
mov
pusha
inc
aad
scas
imul
cli
daa
popa
cmp
mov
mov
lcall
test
enter
cmp
enter
jnp
cwtl
inc
xchg
inc
jns
test
jle
cmpsl
or
cmp
aad
cmpsl
ret
mov
test
xchg
and
fstp
mov
lea
xchg
inc
and
xor
inc
pushf
and
xor
dec
testl
stos
cli
sub
pop
aas
cmp
push
sbbb
mov
stos
pop
gs
cmc
lret
call
es
enter
and
push
xor
jno,pn
pop
and
add
popf
push
mov
lcall
pop
ret
lods
jns
push
add
mov
movsl
jae
in
sub
xchg
and
popf
xlat
xchg
test
xchg
ds
movsb
pop
mov
iret
insl
sbb
inc
insl
mov
icebp
dec
gs
and
bound
cmc
jge
roll
jecxz
inc
pop
ret
push
cwtl
mov
mov
clc
cmp
popa
push
sbb
xchg
mov
mov
adc
movsl
push
outsl
mull
jecxz
fistpll
jecxz
dec
sbb
insl
lret
and
cmc
xor
push
jo
stos
and
roll
xchg
push
jbe
into
test
lea
test
ljmp
or
popl
sbb
add
adc
xchg
fildl
imul
ss
notb
sub
in
push
bsr
iret
mov
daa
sarl
jg
lcall
fs
adc
or
and
or
sarb
mov
addb
shrl
jo
jns
inc
xor
sbb
xchg
sbb
ret
imul
stos
and
xchg
cld
pop
sbb
inc
jo
push
aaa
pushf
and
xchg
fiaddl
nop
push
pop
aam
clc
ss
cmp
sub
out
ss
push
mov
and
fnstsw
cmc
repz
cmpsl
add
push
iret
ds
popa
or
mov
aas
xchg
mov
push
inc
ja
push
sbb
xchg
sbb
push
js
loope
outsl
adc
mov
mov
sub
fwait
out
shrl
mov
mov
push
and
mov
mov
mov
cld
jmp
int
dec
hlt
cmp
or
in
mov
pop
xchg
inc
aam
fs
movsb
icebp
xchg
test
test
push
pop
scas
movsb
xor
pop
repz
sub
cs
push
pop
adc
inc
pop
aad
dec
sbb
xor
xor
lock
stc
mov
lods
push
jmp
mov
stos
test
dec
subl
imul
mov
cltd
sub
icebp
pop
and
xchg
in
add
or
ret
cli
mov
cmpsl
xor
test
dec
mov
ret
cmpsl
lods
jo
mov
call
aaa
adc
fcomp
rcrb
lods
into
pop
xlat
lods
xor
adc
jg
sahf
sbb
jne
pop
subl
mov
sbb
mov
cltd
int
pop
dec
push
pushl
push
es
outsl
popa
sti
int3
xchg
cltd
adc
jecxz
or
fs
ds
jns
sub
add
testb
jle
push
mov
jo
jbe
jns
jno
inc
inc
mov
es
int
push
fwait
in
cltd
dec
jle
jge
out
insb
jecxz
xchg
sbb
fst
xchg
adc
sub
int
xor
outsl
fadds
dec
mov
das
fisttpl
nop
sub
sbb
cmp
testl
ret
inc
test
inc
pop
fisubrs
movl
pop
fimull
mov
fsubr
adc
push
call
sahf
fwait
loope
or
pop
shlb
cwtl
push
adc
es
xchg
cmpsb
adc
shll
jge
jno
dec
mov
and
sub
popf
sahf
sbb
movsb
lret
or
and
adc
inc
xchg
and
cmp
lock
int
add
sti
and
cmp
scas
or
push
dec
lds
pusha
outsb
xchg
rolb
ficompl
add
cmp
sub
dec
das
sti
or
mov
xchg
imul
out
add
inc
sub
loopne
mov
sub
fs
inc
mov
cmpsl
icebp
aaa
adc
dec
xor
cmp
cltd
pop
lret
mov
ds
jecxz
in
sub
loop
sub
or
and
loop
lret
incb
lea
mov
in
outsl
xchg
sti
xchg
shrb
push
mov
mov
ljmp
xchg
inc
fildll
les
sub
adc
rcr
fstpl
adcb
push
add
mov
add
in
mov
adc
push
repnz
dec
adc
pop
add
test
ret
inc
push
inc
push
mov
outsl
push
frstor
jnp
lret
mov
mov
sub
out
inc
sbb
mov
add
push
xchg
push
mov
aaa
mov
leave
sti
mov
mov
mov
dec
jo
ljmp
pop
je
addl
adc
cli
push
pusha
stos
mov
jno
push
mov
sub
imul
or
and
aas
sbb
fisttpl
pop
xchg
xchg
ret
xor
and
push
mov
mov
stos
inc
jns
mov
sbb
test
xor
pop
sbb
cmp
rolb
pop
sbb
xor
repnz
iret
ss
clc
mov
clc
mov
popf
sahf
mov
mov
inc
mov
fstpl
add
or
lods
mov
aaa
mov
jmp
inc
fcoml
and
jne
ja
mov
sub
test
repnz
adcl
sbb
jmp
sbb
mov
add
cmpl
xor
lret
dec
dec
lods
sbb
mov
dec
lcall
pushf
int
adc
jecxz
mov
sbb
sub
scas
xor
pop
xor
mov
shl
sbb
lds
or
ja
mov
mov
adc
or
sbbb
sub
test
cltd
cmc
adc
call
popf
cmpsb
subb
popa
gs
jmp
mov
fsts
notb
push
pop
nop
dec
mov
in
mov
imul
cwtl
sbb
push
pop
fs
mov
mov
cmp
imul
adc
stos
inc
ret
out
nop
sub
xchg
ljmp
movsb
outsb
mov
stos
pop
cmp
pop
insb
movsb
outsb
ret
in
adc
xchg
sti
xlat
xor
out
pusha
sub
jmp
add
movsl
mov
clc
scas
xchg
cmp
jg
loope
imul
sbb
xor
in
rcrb
and
push
icebp
sar
outsb
int
add
loope
mov
xchg
pop
or
fidivrs
in
out
es
hlt
mov
mov
xchg
push
rcrl
xchg
add
jp
in
call
pop
xchg
and
out
ss
mov
fildl
jae
rcrb
mov
into
daa
mov
mov
xlat
xchg
push
pop
push
rorb
clc
jmp
or
daa
cmpsb
sti
and
inc
cmp
repnz
jp
sbb
aad
sbb
ds
clc
push
xorl
mov
pop
xor
sbbb
add
in
and
mov
mov
xor
add
and
mov
jl
jge
mov
xor
lock
fnstcw
sti
and
xchg
cltd
in
inc
mov
out
push
shll
push
jmp
out
imul
mov
add
or
jne
rcr
loope
mov
cmpb
inc
daa
jge
es
or
mov
sub
inc
mov
mov
sub
js
insl
gs
scas
or
dec
mov
pushf
lods
mov
nop
or
cmp
rcll
mov
pusha
stos
pop
mov
repnz
inc
inc
daa
xchg
dec
adc
xchg
rcll
jns
in
inc
into
sbb
lods
decl
ss
sub
add
mov
pop
lods
mov
jb
inc
push
adc
mov
add
add
xchg
or
imul
cmp
lret
xchg
and
lcall
pop
fisttps
mov
push
jp
inc
push
adc
add
dec
in
adc
mov
inc
cltd
xor
mov
cmp
mov
cmpsl
jns
adc
arpl
cld
pop
popf
and
sub
aam
mov
enter
jle
push
cli
idivb
xchg
mov
hlt
lahf
cmp
out
mov
test
ret
loopne
push
mov
sahf
clc
roll
pop
dec
or
xchg
xor
aad
hlt
ljmp
mov
iret
js
cmp
cwtl
mov
in
cmp
sbb
sti
jb
xchg
push
xor
ret
mov
adc
imul
js
mov
xchg
mov
out
mov
out
divb
inc
lahf
loope
or
into
in
push
inc
push
add
pop
ret
insb
mov
mov
stos
imul
xchg
sub
ret
lock
mov
pusha
cs
mov
xor
xor
in
imull
aam
push
mov
cmp
fs
pop
add
pop
adc
sbb
loope
sahf
add
icebp
push
xor
sahf
sahf
xchg
dec
cmp
das
fsubl
fistl
xor
enter
in
mov
mov
dec
mov
jecxz
dec
lea
mov
ret
inc
adc
gs
xor
jno
loop
mov
aas
lcall
jg
ror
aam
jg
or
jge
pop
loopne
mov
popa
adc
adc
call
lahf
sbb
lods
sbb
sbb
xchg
adc
push
lcall
jae
popa
sbb
or
data16
das
jle
mov
roll
cmpl
cmp
xchg
mov
or
es
or
fdivr
cmp
xchg
inc
rcrl
jl
je
mov
add
inc
dec
das
call
dec
lods
jno
xchg
outsl
fdivl
dec
push
pop
xor
mov
sbb
lcall
jo
and
cli
add
cmp
push
cmpsl
in
xchg
imul
mov
aas
out
jmp
outsl
sbb
dec
popf
jne
xchg
rorb
fidivrs
mov
popf
test
jmp
imul
stc
sbb
push
xchg
js
insb
add
xchg
repnz
jns
sarb
push
ret
xchg
jg
daa
cmp
cmpsl
add
lock
std
pusha
popa
cmpsl
loope
xchg
ljmp
es
jge
sbbb
or
push
lret
push
or
pop
xchg
add
inc
into
repz
gs
inc
pusha
and
out
negl
jl
jg
adc
mov
mov
nop
mov
push
jnp
pop
jnp
add
loop
hlt
lea
aaa
inc
sbb
add
cmp
cmp
or
pushf
out
test
xor
xorl
push
js
pop
sbb
jno
xor
dec
dec
dec
pusha
adc
push
popf
cmp
or
cmpsl
pop
mov
gs
mov
into
les
dec
push
scas
imul
and
xchg
scas
or
pop
jb
pop
or
rcll
mov
ret
fsts
xchg
lea
cmp
in
cs
fs
or
xchg
fstpt
enter
js
dec
or
pop
and
push
xchg
or
push
int3
pop
mov
sub
mov
sbb
std
xchg
pusha
mov
xchg
or
push
inc
dec
ja
adc
adc
push
dec
test
mov
dec
inc
mov
pop
stos
jmp
xor
shll
dec
jge
sbb
xor
rclb
or
cmpsl
cmp
push
cmp
loop
lret
mov
in
push
cmpsl
sbb
icebp
xchg
inc
dec
pop
jb
xor
or
xlat
and
cmp
push
add
sub
or
dec
stos
out
sti
pop
icebp
pop
icebp
xchg
addr16
and
and
ljmp
add
jne
ss
xor
inc
testl
mov
enter
push
repz
imul
jns
jg
rcrb
into
fdivs
mov
pop
jo
unpcklps
sti
cwtl
sub
mov
jge
scas
rcrb
daa
insb
cwtl
cmp
scas
push
mov
jbe
mov
jae
cld
and
adc
ds
les
and
aad
lret
lods
aam
scas
sub
xor
add
loope
xchg
or
inc
push
pop
sub
pop
aad
pop
test
xor
cltd
pushf
inc
xchg
outsb
fsubr
adc
movsl
mov
mov
fadds
jl
addr16
clc
inc
fisubl
ljmp
repnz
sub
sub
or
fidivrs
mov
idiv
mov
stos
sub
out
pop
in
roll
enter
in
pop
shrl
leave
mov
jbe
icebp
pop
dec
push
in
adc
mov
aaa
shl
cs
add
push
xchg
and
mov
sti
incl
out
add
movsb
cmp
xchg
js
and
add
jle
mov
fwait
pop
adc
mull
sbb
add
enter
cltd
in
cmc
or
push
out
lret
push
pop
push
mov
aad
test
xchg
fcoml
push
addb
mov
inc
add
loop
aad
xchg
push
and
dec
aam
mov
sub
mov
popf
adc
push
ss
xor
add
inc
and
cltd
in
mov
xchg
mov
fdivl
out
cmp
push
adc
mov
fmull
sahf
outsl
cli
outsb
int
stos
push
and
testl
aaa
inc
sbb
popf
cmpb
ljmp
mov
mov
mov
dec
lea
arpl
jmp
test
adc
fisttpl
insb
cmc
pop
aad
cltd
fwait
int3
movsb
mov
roll
rol
inc
mov
or
cmp
mov
loope
pop
jmp
insl
cmp
lret
pop
xabort
fbld
push
pop
das
ret
lcall
lock
mov
xor
dec
and
ljmp
push
pcmpeqb
inc
mov
fs
sbbl
cmp
mov
push
pusha
rorb
aaa
lea
mov
inc
ja
and
mov
data16
mov
mov
cmp
cmpsb
dec
dec
xchg
or
push
add
push
or
pop
das
adc
dec
jae
push
push
ja
sahf
jnp
add
pusha
dec
adc
mov
stos
mov
or
jle
jp
mov
xchg
sub
lock
shl
shlb
mov
mov
mov
jno
push
loop
cs
cmpl
xor
mov
adc
push
cmp
pushf
mov
adc
divl
int
sti
jmp
addr16
pop
insb
xchg
out
into
scas
and
cmp
and
mov
mov
negl
fstpl
dec
les
pop
fwait
rolb
ljmp
scas
stos
fadd
adc
aas
popf
mov
rorl
pop
outsb
in
test
popf
push
sub
subb
sub
push
das
dec
mov
stos
imull
add
xor
incb
outsl
mov
fwait
ret
fs
jo
sbb
jo
aad
addb
and
jns
sbbb
idivl
fcomip
out
inc
xchg
cmp
xchg
mov
mov
cmp
adc
add
mov
jecxz
ds
mov
ja
fimull
push
mov
mov
fdivr
dec
mov
pop
in
aas
fcomp
xchg
push
rol
push
out
loopne
jmp
xchg
fcoml
movsl
mov
push
ds
sub
xor
lcall
stos
lcall
les
dec
fwait
and
sub
cltd
out
stos
rcl
out
pusha
adc
ljmp
fidivrs
mov
cld
push
sbb
cmp
mov
test
loope
add
jo
sbbb
stos
inc
jae
mov
or
out
mov
xchg
aas
dec
add
push
xchg
es
xchg
leave
inc
dec
xchg
xchg
in
add
roll
nop
sbb
imul
xlat
in
xchg
or
test
popf
int
imul
cld
sbb
push
rcr
xchg
fsubrs
jp
les
int3
jno
insl
mov
std
dec
fdivr
add
pushf
adc
sahf
or
pop
in
cmp
jle
cmp
mov
mov
sarb
xor
push
and
inc
fmull
pop
aaa
hlt
test
or
jns
pop
jle
jmp
adc
sahf
repnz
js
dec
push
xchg
and
pop
xor
cmpsb
or
in
outsb
ds
xchg
mov
jg
jne
lret
xor
les
cs
jg
jecxz
sub
cmp
dec
xchg
inc
in
push
add
sub
jle
jg
in
cmpsb
stos
in
cmc
sub
xor
push
add
mov
sbb
loope
pop
xchg
pop
or
test
mov
out
cmp
sub
mov
and
lret
dec
jns
fwait
mov
jnp
shll
push
stos
jecxz
inc
mov
or
mov
enter
pop
jp
mov
stos
aas
in
push
stos
fisubrl
ds
rclb
mov
add
sbb
and
mov
cltd
and
mov
and
add
andl
mov
loopne
pop
dec
xor
xor
or
imul
sub
mov
out
sbb
push
xchg
pop
cli
adc
out
push
jge
pop
add
fnsave
inc
aam
mov
jle
imul
xchg
or
mov
jnp
mov
inc
xchg
testb
aad
ret
dec
aad
adc
dec
into
repz
out
hlt
xor
xchg
inc
push
ret
pop
sbb
or
mov
push
rcll
mov
xchg
dec
cmc
lods
mov
jo
andb
iret
add
fs
jp
aad
pop
sub
pop
push
lods
jne
insb
sub
sub
mov
pushf
add
hlt
xor
adcl
push
inc
mov
jno
cltd
pop
cmp
cmp
ljmp
push
stc
icebp
aas
jo
jl
or
mov
in
or
cmp
inc
not
jae
mov
aad
popa
lock
shlb
adc
mov
sub
lock
ja
loope
leave
xchg
mov
jbe
mov
cmp
in
adc
mov
sub
mov
sbb
addr16
int
pop
mov
movsb
fsub
mov
dec
sub
test
dec
pop
popa
sub
std
bound
sub
adc
sbb
insb
add
fwait
sub
or
xor
pop
adc
lods
stc
cld
sbb
pop
or
and
bound
dec
in
stos
xor
shll
pop
daa
and
or
in
mov
jne
or
pop
lods
es
test
add
dec
nop
mov
cld
lahf
mov
cld
mov
mov
aaa
push
out
stc
sbb
pop
sub
mov
cmp
mov
rolb
push
pushf
cwtl
mov
and
adc
sbb
loope
cmpsl
or
dec
bnd
jo
pop
insb
sarb
lods
repz
iret
or
push
int3
cmp
lcall
jl
lcall
jne
es
add
mov
xchg
jg
scas
adc
ljmp
xchg
jb
shlb
mov
sub
jb
in
xor
sub
ret
movb
fistpl
mov
jno
cmp
dec
mov
pop
mov
not
push
int
out
xchg
aas
add
mov
push
mov
add
mov
push
movsl
mov
xchg
sahf
jge
mov
sub
nop
or
cwtl
jbe
les
pop
ret
lahf
lods
test
mov
mov
jmp
mov
incl
movsb
mov
xor
stc
ret
shr
and
mov
lods
add
adc
inc
mov
xor
movsb
lcall
jbe
addb
js
popa
ficoml
mov
rcrb
ja
out
pop
add
rclb
pop
daa
xor
test
fadd
mov
sbbb
cmp
stc
enter
jecxz
lret
cmc
lret
es
int3
mov
enter
sub
test
mov
cmc
repz
xor
mov
dec
test
add
jo
xchg
aaa
outsb
sti
mov
and
testl
sub
inc
daa
fistpll
mov
xchg
shr
mov
stc
cmp
popa
aad
lahf
push
sbb
cmp
pop
add
outsb
daa
fwait
shl
aas
add
push
out
out
int3
movsb
ss
fmull
cmp
jns
mov
xor
jp
pop
push
aas
notb
push
sbb
xor
ds
push
pop
fistpl
cmp
sbb
mov
push
pop
mov
fwait
out
mov
cmp
ret
mov
mov
push
test
ss
dec
jmp
imul
pop
aam
sbb
sbb
ja
out
mov
push
jecxz
or
xor
add
in
in
xchg
or
aam
sub
mov
sbb
cmp
cmpsb
aad
lods
mov
lret
xor
xchg
mov
mov
cmp
repnz
stos
mov
or
repnz
xchg
jmp
imul
sbb
pop
mov
adc
mov
sbb
lahf
lahf
cld
or
mov
push
pop
mov
ror
add
sub
clc
lret
lods
xor
adc
int3
movsb
mov
cltd
add
test
xchg
xchg
fwait
test
sub
nop
loope
inc
inc
cmp
sub
popa
mov
js
int
inc
lock
sbb
or
inc
pushf
test
test
xorl
pop
lock
dec
imul
push
shlb
xchg
cwtl
inc
sub
inc
sbb
dec
hlt
pop
int3
dec
movsl
insl
movsb
jbe
mov
push
or
movsl
pop
notb
push
cmp
dec
mov
icebp
xor
fistps
sbb
pop
or
jp
mov
push
or
xchg
shl
sbb
aas
in
loope
xchg
mov
repnz
xchg
cs
sub
inc
and
mov
out
lods
adc
push
subl
cmpsb
out
cmc
addr16
jns,pn
std
xchg
mov
inc
sub
adc
scas
out
outsl
rcl
mov
stos
rcrb
mov
push
xor
xlat
lahf
fmulp
add
push
add
scas
pop
add
and
lahf
shr
push
lods
jnp
lar
hlt
in
mov
jne
add
and
jae
daa
push
out
xchg
outsb
dec
out
pop
inc
pop
dec
stos
daa
mov
dec
add
out
sub
lret
les
rcrl
fs
xchg
dec
push
ds
mov
cmp
ds
nop
jle
shrb
mov
lahf
loopne
cmp
dec
mov
add
push
and
and
scas
out
add
mov
xchg
cmc
aam
and
icebp
inc
jne
push
add
leave
lret
in
xor
pop
insb
imul
fstl
enter
add
xchg
push
mov
jne
pop
jb
inc
jg
adc
dec
in
jbe
mov
mov
cmpsl
mov
pushf
popf
mov
pop
jp
arpl
js
lret
pop
cwtl
rorl
pop
xchg
mov
dec
add
mov
jl
je
aas
inc
adc
cmp
mov
mov
mov
pop
cmp
or
mov
push
adc
pop
jp
lcall
out
dec
add
add
les
cmp
aaa
push
ss
lock
adc
add
jae
push
orl
outsl
mov
sbb
pop
int3
pop
xor
rcl
mov
addr16
popa
xchg
jle
mov
shll
je
das
xor
sub
shll
cmp
add
mov
mov
pop
dec
pop
mov
xchg
fiadds
sbb
sub
andl
xchg
sub
int3
jecxz
mov
pop
aam
mov
xor
dec
push
and
lods
test
popa
cwtl
mov
pop
pop
push
xchg
mov
clc
xor
dec
xchg
lret
outsb
cmp
and
les
and
mov
pop
paddb
sbb
aam
in
dec
test
push
jl
test
push
add
mov
xor
bound
mov
jp
test
xor
pusha
jp
cmp
out
out
cmp
xchg
inc
or
mov
sbbb
pop
mov
sbb
fisubrl
pop
out
pop
bound
pop
push
push
push
add
jp
mov
fcomip
stos
outsb
lret
xchg
sub
stos
mov
jmp
xorl
xor
and
clc
mov
dec
sbb
lret
mov
mov
ljmp
das
and
push
or
pop
mov
inc
mov
outsl
add
js
pop
mov
adc
cwtl
or
aas
mov
in
adc
test
js
add
shlb
dec
aad
cmp
sbb
jno
mov
pusha
imul
mov
xor
push
arpl
push
clc
ja
cli
loope
fiaddl
cmp
cmp
or
popf
push
iret
push
iret
fsubr
mov
icebp
nop
insl
inc
cli
jecxz
pop
mov
adcb
pop
mov
dec
clc
push
inc
inc
cwtl
stc
scas
js
or
shlb
arpl
paddb
and
push
lret
pusha
dec
xchg
cmpsb
push
sbb
gs
add
sub
and
mov
lret
shll
adc
and
push
rolb
es
aam
inc
xor
sub
in
jo
mov
nop
dec
out
xorb
fimull
in
inc
ds
lahf
test
or
push
cmp
lahf
imul
and
add
push
xchg
or
into
and
in
repz
xor
dec
jns
mov
cmp
pusha
sub
jg
sub
loopne
jns
sbb
test
pop
addr16
fucom
sbb
addl
cmp
cli
mov
push
scas
push
xchg
lcall
pusha
mov
in
inc
push
adc
mov
addr16
add
sbb
addr16
sub
mov
add
and
push
lds
daa
xchg
std
jne
dec
and
notb
adc
push
lds
adc
das
loope
jp
inc
inc
aas
andb
xor
popa
daa
cmp
xchg
add
mov
mov
pop
shl
pop
movsb
push
xchg
jnp
popl
sahf
and
idiv
cmpsl
cmc
adc
popa
xor
daa
mov
xor
push
mov
add
or
or
inc
or
insl
mov
add
sahf
pop
cld
dec
orb
fwait
mov
jnp
or
mov
nop
inc
test
lret
sahf
data16
gs
xchg
out
bound
mov
xchg
aas
in
stos
xor
shl
mov
dec
int3
xor
lock
ds
cmp
jns
mov
pushf
adc
mov
inc
cmp
xchg
push
fcoms
movsl
out
push
pop
xchg
inc
mov
add
repz
push
mov
cmp
push
mov
test
adc
xlat
or
mov
call
cmp
aas
stos
push
cld
adc
push
push
or
and
jns
lods
cmp
adc
jno
pop
push
punpckhwd
mov
sbb
mov
or
adc
les
pop
dec
sbb
sub
xlat
loopne
pop
rcll
fsubp
inc
jp
and
push
xchg
fsubr
in
ljmp
lea
mov
mov
push
xchg
mulb
xor
cmp
leave
sti
add
xchg
push
sbb
in
or
in
leave
fisttpll
rcrl
xor
mov
adc
outsl
add
sub
push
mov
jns
pop
add
ss
sbb
lods
and
call
shlb
aam
add
fcmovne
cmpsb
je
lret
and
divb
movsl
add
outsb
dec
xchg
dec
pop
add
and
jmp
addr16
test
loopne
loopne
in
dec
or
aas
push
pop
mov
loopne
aam
pop
fnstcw
fmuls
or
shll
pop
jo
pop
loopne
dec
or
fucomp
jb
insb
mov
fisubl
adc
shl
nop
roll
pop
xorb
pop
enter
fstpt
hlt
mov
fucomp
insb
mov
test
imul
lds
lret
cmp
sub
movsb
push
inc
ror
pop
iret
out
mov
int3
jmp
pop
pusha
out
aam
mov
fs
and
jnp
mov
xchg
cwtl
pushf
aas
outsl
or
inc
jns
outsl
or
les
shll
cmp
mov
xchg
ljmp
orl
stos
hlt
inc
mov
test
movsl
dec
dec
call
lock
mov
push
pop
cmpsl
xor
fsts
or
fildll
xor
imul
or
jl
inc
sub
jno
movsb
orl
push
jae
and
inc
mov
push
adc
cmpsb
cwtl
cli
xchg
lea
add
xor
imul
int3
inc
cmp
outsb
mov
pop
int3
sbb
adc
jp
sbb
insb
out
cmp
sbb
pop
pop
mov
aam
pop
adc
sbb
mov
and
xor
pushf
xlat
sbb
xchg
and
xchg
rol
addr16
loopne
sbb
imul
ret
pushf
cmp
mov
daa
std
mov
jle
adc
les
out
fnstenv
and
inc
stos
xchg
inc
fildll
push
cli
rorl
inc
lret
dec
sub
push
cmpsb
add
push
sub
mov
je
xor
cmp
inc
sbb
adc
enter
rolb
pop
lock
xchg
lds
add
xchg
sbb
inc
xor
and
mov
xor
loopne
pop
imul
mov
mov
int
dec
rolb
sarb
repnz
pop
fst
mov
fcomp
mov
aad
int3
xor
xchg
add
ret
cwtl
mov
std
ja
xchg
fmull
arpl
pop
add
std
shrb
mov
int
data16
inc
mov
pop
sbb
loope
mov
jae
jnp
sbb
imul
dec
lcall
xchg
jl
je
lret
jge
nop
in
movsb
dec
fnstenv
add
daa
fisubrs
or
mov
cmp
mov
sahf
jge
enter
mov
lds
aas
adc
mov
cwtl
scas
sbb
stc
add
adc
sarl
insl
loope
xor
out
add
xchg
int
dec
fbstp
mov
aas
add
inc
insl
ja
hlt
leave
in
rcll
cmp
and
jl
pusha
rcll
cld
jmp
mov
data16
fdivr
call
xchg
mov
pop
mov
testl
pop
push
add
popf
inc
inc
cmp
pop
repz
and
ror
rcrl
sub
repnz
xchg
dec
sbb
das
sbb
cmp
and
push
rorb
jecxz
inc
jns
and
mov
xor
inc
outsl
xchg
xchg
jbe
mov
push
cmp
mov
pop
adc
jmp
jecxz
and
jmp
mov
cmp
mov
inc
xchg
mov
jno
arpl
stos
enter
or
lret
dec
cmpsl
dec
ret
xchg
adc
das
inc
out
and
cmpsl
or
fistpll
test
es
icebp
xchg
xchg
mov
and
xchg
imul
dec
das
sub
lods
inc
adc
lods
mov
data16
outsl
push
mov
mov
addsubps
cmpsl
loope
stos
sub
orl
lcall
pop
imul
cwtl
mov
sbb
inc
and
stos
arpl
push
add
cmovns
sarl
jg
xchg
pop
scas
xchg
or
and
or
inc
push
pop
push
mov
addr16
mov
iret
rcl
cmp
mov
or
mov
mov
fstps
int3
call
je
dec
cwtl
sbb
aas
cwtl
pop
fistps
mov
push
push
inc
mov
out
mov
loope
push
push
leavew
or
sub
pop
inc
mov
stc
inc
imul
ret
les
adc
sbb
xchg
pusha
fdivr
inc
mov
in
xchg
es
mov
dec
test
cmp
negb
sub
cld
inc
push
cwtl
lock
fstpl
mov
in
fistpll
jne
loope
aad
fldcw
adc
fstpt
jp
sti
mov
mov
test
pop
ret
cld
and
adc
jle
pop
bnd
inc
and
mov
stc
fsubrl
popf
xchg
testb
and
aad
fcompl
sarb
int
lock
cs
push
orl
dec
into
fstpt
xchg
mov
das
sbb
dec
mov
fcoms
loop
fwait
push
or
mov
or
inc
ret
xlat
lods
data16
dec
cmp
inc
fcomps
adc
or
test
dec
mov
popf
ret
inc
xor
sub
xor
iret
rclb
add
adc
sbb
in
pop
mov
bound
jne
bound
cld
lock
pusha
fsubs
sarb
bound
std
imul
jno
dec
ficomps
dec
dec
std
mov
fmull
test
les
test
in
nop
loopne
cmp
adc
and
or
and
in
sub
xor
mov
and
mov
addr16
cld
dec
mov
xchg
cmpsl
cld
pop
je
mov
mov
sub
fwait
lahf
jl
and
cld
push
xchg
cmp
mov
pop
pop
mov
insl
lds
aam
mov
out
lods
jp
call
push
movsb
adc
jns
pop
adc
adc
sbb
jl
imul
mov
and
jp
add
push
pop
dec
jg
push
push
inc
xor
add
cmp
bnd
mov
mov
push
nop
xchg
out
cmp
aaa
lret
sub
in
rclb
dec
or
jns
loopne
test
sub
shl
nop
xor
cwtl
and
mov
ja
in
out
insl
push
imul
xor
movl
ss
in
pop
adc
cmpsb
xchg
push
mov
mov
mov
adc
ret
popf
mov
inc
ror
into
adc
mov
in
dec
dec
push
sub
push
repnz
in
ljmp
push
ljmp
and
outsl
jge
and
or
xchg
sti
ret
jno
aam
pushl
adc
fstl
cmp
add
test
lods
stos
push
movsl
inc
sbb
mov
push
leave
sbb
enter
mov
arpl
mov
xchg
and
mov
dec
pop
jns
inc
push
mov
fbld
rcrb
sbb
or
popf
lock
leave
imul
fisttps
cli
hlt
or
mov
push
fisttpll
sub
xchg
adc
in
test
add
stos
je
push
cmp
and
fstpt
dec
push
hlt
lea
outsb
dec
cmp
xor
jnp
fwait
push
jno
lods
lods
stc
or
orb
into
xor
mul
xlat
mov
je
ja
dec
fstl
shr
notl
jnp
dec
mov
lods
cld
out
push
les
nop
adc
loope
imul
jp
inc
ja
loopne
xor
arpl
mov
add
push
movsb
sub
push
or
lret
xchg
jns
movsb
sub
aaa
inc
test
sahf
movsl
rorl
insb
push
repnz
or
add
enter
movsb
sub
fadds
xor
scas
adc
ljmp
fwait
js
popa
sbb
mov
in
sbb
pop
mov
mov
or
es
pop
imul
push
push
mov
ljmp
dec
scas
enter
jo
ljmp
fdivp
cs
and
xor
or
clc
push
iret
push
std
mov
jnp
pop
cmp
mov
lahf
mov
js
jb
cmp
adc
je
scas
push
daa
outsb
sbb
pushf
mov
or
into
les
xor
bound
icebp
sbb
inc
sub
xchg
rcll
jmp
stos
adcb
dec
sub
std
mov
ja
jnp
cmpsl
fcoms
fcmovbe
cmp
sbb
dec
mov
dec
lcall
xor
lret
mov
cs
aas
das
mov
mov
nop
std
push
fstl
or
or
inc
add
and
adc
in
orl
cmp
das
outsb
xchg
ret
sub
jmp
or
dec
adc
cld
push
xchg
mov
out
inc
lds
adc
into
pop
int3
daa
inc
and
roll
lods
mov
mov
repz
sbb
xchg
mov
negl
pop
lea
push
jnp
xchg
notb
or
test
test
mov
and
cmp
in
or
sti
js
lds
mov
pop
ret
ja
lock
mov
pop
test
jns
pop
sbb
sbb
adc
sub
into
jne
loop
mov
add
jle
pop
mov
push
decb
pusha
and
mov
rcrb
aaa
mov
adc
bound
movsb
dec
daa
cmp
inc
imulb
mov
jge
add
cltd
jae
cmc
movq
pop
stos
cmp
cld
add
movl
call
jb
divb
mov
or
or
std
adc
push
addl
adc
xchg
inc
dec
sub
xchg
dec
stc
sbbl
lahf
push
sbb
je
jecxz
pop
cltd
out
and
pop
xchg
xchg
je
or
js
inc
cmpxchg
out
dec
mov
js
pop
xchg
mov
xor
cmpsb
inc
ret
ds
sti
jne
mov
add
dec
ss
into
inc
in
and
adc
mov
cmp
pusha
fstpt
aam
rolb
push
mov
bound
cmpsl
jb
sbb
pushw
jmp
dec
push
jns
aam
jae
and
clc
test
mov
push
popf
jns
dec
sti
push
scas
out
pop
mov
sbb
rcrb
das
mov
push
mov
sub
xchg
ss
mov
pop
push
inc
out
outsl
ret
popf
pop
in
add
dec
and
and
insb
pushf
addr16
dec
mov
jnp
xchg
sbb
popa
fstps
inc
mov
testb
outsb
outsl
mov
jp
push
popa
sub
shr
imul
mov
in
sarb
aaa
std
lahf
lds
xchg
into
lods
push
jns
in
mov
ljmp
insl
arpl
movsb
cld
cmp
sub
sbb
sub
cwtl
pop
scas
pop
mov
push
jle
add
xchg
mov
pop
push
adc
push
fsubp
outsl
arpl
sbb
stos
out
adc
xor
or
adc
cmp
dec
jae
or
mov
mov
arpl
lea
daa
es
cwtl
mov
test
dec
push
sbb
loop
mov
jbe
mov
xchg
lods
lds
scas
xlat
lods
dec
int3
adc
jnp
dec
ss
iret
fisttpll
adc
jbe
xorl
cld
add
out
or
addr16
push
xchg
mov
cmc
sub
fsubr
dec
and
das
ds
fistps
mov
cmp
adc
adc
push
lods
cmc
push
push
add
lret
ret
inc
test
lahf
lods
lods
pop
jmp
xchg
test
jo
adc
mov
lahf
ss
push
shlb
mov
gs
push
fsubl
xchg
dec
xchg
shll
inc
xor
adc
movd
push
sub
adcl
mov
test
int
push
dec
cmpsl
hlt
or
test
jg
stc
fsubrl
lods
stos
cmc
jp
insl
mov
hlt
les
xchg
push
test
push
jbe
xor
and
test
jp
mov
popa
inc
xor
pop
adc
shrb
push
inc
add
inc
sbbl
sbb
mov
mov
pop
cltd
mov
dec
push
sub
gs
lods
xchg
inc
lret
push
adc
dec
mov
fsubr
xchg
push
idivl
pushf
movb
inc
cmp
pop
cmpl
mov
sbb
mov
lds
sbb
js
push
inc
pop
xchg
in
fidivrl
into
add
mov
ss
xchg
sbb
shrb
leave
push
mov
stos
cmp
dec
fistps
nop
push
jp
pop
cmp
dec
sbb
dec
cmp
fidivl
outsl
mov
sbb
call
push
clc
insb
aad
fistps
sub
inc
ss
inc
jp
scas
loop
pushf
sbb
xor
jg
xchg
mov
pop
sub
inc
clc
xor
push
xchg
cwtl
cmc
aad
or
sbb
loope
cltd
decb
dec
icebp
testl
js
rcl
ja
iret
pop
pop
sub
je
inc
mov
loop
push
adc
mov
jbe
movsl
cmc
flds
xor
mov
sub
out
cli
pop
leave
cwtl
bound
push
popf
pop
jbe
loopne
cld
pop
mov
cvttss2si
daa
inc
inc
lahf
dec
nop
ret
leave
jp
je
lahf
or
dec
daa
incb
xchg
sub
ljmp
in
arpl
adcl
out
mov
ret
add
fcmovbe
aaa
adc
push
sbb
mov
aaa
shlb
rclb
dec
jb
xchg
sbb
in
loopne
out
frstpm(287
negl
or
push
dec
insl
lods
push
fwait
sbb
mov
jnp
cmp
stc
mov
ss
adc
inc
mov
scas
iret
mov
add
mov
push
push
add
out
mov
je
jl
push
sbb
inc
push
jmp
jecxz
cmp
dec
imul
mov
push
sub
imul
jle
leave
cmpsl
insl
ds
movsl
imul
les
out
add
lods
add
cmp
pusha
jne
lds
subb
sar
push
ret
and
inc
imul
mov
push
cli
or
sbb
int
and
mov
out
adc
sahf
mov
xchg
xchg
cmpsl
lcall
sub
dec
jb
inc
and
cmpsl
mov
sub
aaa
jg
cmp
nop
mov
jno
outsl
sub
push
insl
cmpsl
lret
inc
stc
icebp
sbb
xchg
pop
add
add
ds
xchg
push
mov
pop
adc
enter
fwait
pop
push
leave
repz
out
and
dec
je
fmulp
push
jbe
imul
outsb
pop
mov
xor
movsl
xchg
mov
lahf
sbb
mov
std
fimull
jecxz
mov
sbb
popf
adc
fwait
fs
jg
xlat
adc
js
ljmp
inc
and
out
push
cmp
pushf
jnp
pushf
or
mov
or
cmp
rorb
jg
stos
ljmp
stos
push
xchg
cmp
vsubps
jmp
inc
ret
lahf
sub
enter
xchg
iret
push
negl
mov
fisubrl
xor
lods
lods
aaa
int3
pushf
lds
add
add
jmp
fstpt
cmp
lret
mov
xchg
cli
cmc
xor
xchg
mov
movsl
repnz
jnp
mov
xchg
inc
xchg
cmc
std
mov
rolb
xchg
mov
addb
mov
mov
fiadds
sbb
mov
fisubrl
stos
pusha
xor
adc
jl
sbb
stc
cmp
xchg
ss
mov
sbb
loopne
sub
jg
es
mov
mov
jb
lea
aad
ret
shll
jb
add
jmp
xor
ja
jg
mov
jo
sahf
mov
or
push
inc
add
push
sub
pop
stos
int3
popl
mov
push
pop
adc
mov
xchg
sub
jno
cmp
cmp
jns
pop
push
xchg
enter
lcall
insl
mov
into
testl
sar
dec
adc
pop
scas
mov
ss
jge
sub
mov
sbb
outsl
adc
dec
adc
je
xor
out
arpl
ret
mov
pop
cli
or
inc
sti
rolb
js
enter
push
mov
pop
js
je
or
lahf
out
or
push
leave
push
fldt
rcrl
mov
sub
stos
lds
mov
jns
xchg
sbb
outsl
push
fists
inc
jae
xor
repnz
mov
dec
sbb
insl
cmp
out
adcl
fbstp
int
or
test
mov
stos
xchg
or
xor
push
inc
aas
dec
icebp
adc
iret
or
stos
adc
dec
enter
inc
dec
ss
adc
cmpsb
sti
pushf
rdmsr
das
mov
cld
jg
xchg
fs
jecxz
xchg
pop
pop
push
pop
or
sbb
dec
scas
add
jns
sbb
push
stc
lock
pop
mov
xor
add
mov
cmp
pusha
or
sti
xchg
mov
sbb
add
and
mov
aaa
pop
dec
fsubrs
mov
and
outsb
xchg
xchg
test
outsl
push
jp
xlat
imul
dec
cmp
adc
and
rcrl
flds
cmpsb
mov
arpl
xor
loop
pop
addr16
lods
cmovge
mov
adc
ljmp
mov
aam
into
mov
mov
mov
sarb
testl
dec
std
cmp
push
push
sbb
out
push
dec
popf
ret
sub
mov
adcl
cli
ss
xlat
jbe
sub
cs
bnd
pushf
mov
push
into
add
pop
jle,pn
in
or
pop
adc
mov
pop
jno
mov
mov
es
int
movsb
xchg
xor
push
imul
dec
jns
inc
mov
and
pop
jle
adc
into
lcall
lds
lahf
lods
mov
ficoms
aaa
aaa
stc
stos
push
jnp
push
lea
inc
jns
ljmp
lea
mov
stos
dec
mov
ret
icebp
repz
pop
lahf
lret
mov
daa
xor
sysexit
jp
cmp
xchg
mov
shll
in
icebp
dec
inc
cmp
test
cmpl
ret
ds
cmp
sub
fcoml
std
mov
movsl
xchg
lods
lds
mov
adc
pop
inc
test
loope
les
adc
add
mov
sbb
pusha
jl
dec
inc
xor
mov
roll
inc
repnz
sbb
push
pop
pop
or
mov
movsl
cmpsl
xor
jo
or
mov
aad
addr16
dec
mov
filds
mov
jne
data16
cmpsb
and
xchg
imul
adc
inc
jae
lods
fisubl
loope
lods
jno
mov
inc
mov
sbb
pop
leave
aaa
push
cmp
in
mov
notl
leave
sbb
movsb
xchg
or
push
dec
pop
pop
lods
push
andb
aad
xchg
add
ret
lods
mov
mov
mov
fwait
ds
jbe
cs
mov
test
xor
sbb
stc
scas
sub
sbb
cld
cmp
insl
jo
outsl
negl
repz
scas
das
stc
js
mov
mov
cmp
insl
sbb
pop
and
sub
sbbl
xchg
imul
jo
in
arpl
lods
fdivp
mov
inc
and
in
jnp
gs
adc
movsb
cltd
inc
xchg
out
in
fnstenv
js
or
aaa
inc
mov
int3
fdivp
aas
js
mov
std
xchg
aas
cli
lahf
addr16
push
cmp
mov
nop
movsb
mov
cmp
mov
out
repnz
imul
outsl
xor
xchg
add
mov
dec
je
or
in
sbb
into
add
std
and
rcrl
xor
shrb
dec
into
lods
xchg
sahf
fdivr
outsb
push
inc
push
xor
adc
imul
cmp
clc
sbb
mov
push
test
test
xor
cltd
iret
ret
mov
mov
jl
and
enter
out
popf
loop
cmc
dec
mov
popf
enter
xchg
mov
and
cmpsb
fnstenv
imul
dec
push
xchg
jbe
shl
push
in
pop
test
jae
hlt
xchg
and
stos
add
mov
inc
mov
dec
aaa
testl
jnp
ja
shll
mov
xor
ficomps
leave
insl
jmp
xor
inc
jmp
cmpsb
push
sbb
xor
adc
push
pop
cwtl
xchg
add
pop
dec
lcall
cmp
aad
lahf
cli
data16
or
in
lods
mov
icebp
in
mov
in
test
addb
pop
xor
push
shll
or
xor
in
push
cmp
or
pushf
jae
into
stos
out
jb
push
stos
shlb
mov
mov
mov
or
rcrb
sar
add
popl
xchg
fisttps
jmp
jnp
push
fstpl
test
mov
dec
cmp
jnp
dec
test
out
fdivr
int
incb
xor
inc
testl
outsl
repz
and
push
out
je
push
inc
inc
or
je
xor
sub
jecxz
cmp
and
cs
das
pop
filds
dec
cmp
push
insl
pop
xor
in
loopne
xchg
andl
jp
jae
repnz
adc
iret
inc
pop
negb
leave
jb
xchg
push
int3
loopne
xlat
sub
and
shll
mov
cwtl
mov
jno
icebp
mov
aad
pop
addb
ficompl
and
int3
sti
mov
out
cmpsb
adc
sub
dec
mov
mov
andl
outsb
insl
mov
outsl
inc
loopne
push
shll
in
loopne
out
loop
jle
loope
fwait
push
enter
out
std
xlat
jecxz
sbbl
ds
mov
bound
fwait
jecxz
xchg
jbe
movsl
mov
or
add
fs
lret
inc
mov
pop
les
insl
dec
dec
js
xor
xchg
pop
mov
xorl
lret
hlt
jnp
xchg
fsubp
xor
push
mov
js
inc
inc
cmp
repz
leave
dec
rcrb
cltd
out
imul
out
pushf
sbb
add
test
mov
gs
adc
push
mov
sub
push
dec
inc
out
js
xchg
je
int3
enter
scas
icebp
aam
shrb
xchg
addr16
or
push
shl
fisubrs
loopne
flds
pushf
rclb
or
sbb
in
fcoms
cmp
dec
pop
add
cmc
dec
push
mov
roll
inc
jge
sbb
outsl
lods
mov
pop
lea
push
mov
sbb
aad
push
rolb
pop
pop
testl
mov
loopne
jmp
pop
or
loope
test
mov
fwait
adc
xchg
push
shlb
out
mov
xchg
adc
add
shr
dec
or
mov
push
jg
push
dec
ret
cltd
jne
outsb
cltd
lahf
push
mov
inc
cmp
xor
sbbl
icebp
xor
test
andl
push
sub
xchg
xchg
mov
add
add
and
push
push
or
idivb
mov
shrl
pop
nop
jecxz
aad
pushf
loop
mov
out
loop
and
ds
lret
xchg
mov
lods
push
cli
sbb
push
sbb
or
push
pop
adc
adc
scas
push
or
mov
jno
jb
mov
mov
bound
enter
cltd
pop
cmp
in
test
or
rorl
push
or
pop
dec
ss
mov
int
ss
into
and
push
pmaxub
or
add
adc
pop
xchg
push
adc
mov
lods
lods
cmp
sbb
push
clc
dec
test
arpl
xor
mov
jp
or
and
into
lods
mov
xchg
hlt
or
jge
sbb
or
arpl
stc
adc
int
stos
frstor
mov
inc
mov
sbb
cmp
jae,pn
xchg
sbb
xor
pop
lods
lea
inc
mov
leave
imul
das
rorl
sarl
adc
push
divb
sarb
dec
repnz
push
jnp
mov
std
jb
jb
fsubrp
cmpsb
or
imul
rcrl
orl
jb
sahf
cmpsl
cmc
or
push
clc
sbb
lahf
fs
mov
pushl
mov
lea
int
fldl
das
scas
into
mov
mov
stc
stos
popf
mov
mov
jb
mov
xor
adc
call
in
mov
xor
syscall
bound
arpl
xor
push
iret
mov
orl
cmpsb
inc
adc
or
jl
jns
mov
mov
sbb
ljmp
mov
loop
jne
cmc
imul
and
or
mov
jecxz
cmp
pop
adc
mov
xor
int
ds
je
pop
int3
test
mov
jg
out
ja
or
sarb
subl
xchg
fldl
scas
popf
stos
add
adcb
cld
sub
xor
pop
jns
lcall
fwait
xchg
add
adc
push
xchg
shlb
rcll
lahf
push
and
js
push
ret
jmp
ret
movsb
or
push
cmp
xchg
mov
loopne
pusha
enter
repz
cmp
ret
loopne
fsubs
xchg
sbb
xchg
idiv
jl
bound
lcall
pop
pop
xor
insl
lret
inc
inc
andl
pop
push
test
add
das
dec
shll
sti
push
xchg
push
jae
mov
je
push
add
scas
icebp
pop
test
sub
pop
and
aad
cmp
mov
std
stos
push
fists
adc
xchg
lods
movsb
test
sbb
pusha
push
inc
xor
stc
idivl
xor
cmp
insb
ljmp
fstpt
pop
push
mov
cld
fdivs
dec
lds
inc
and
out
pxor
sbb
out
aam
rorb
xor
subl
shlb
add
mov
and
sbb
pushf
push
mov
fabs
lret
cli
cmpb
fdivr
fnstsw
xor
add
sbb
inc
add
pop
lds
mov
loopne
in
out
push
fdiv
lods
pop
repnz
inc
or
push
push
outsb
divb
adc
pop
and
mov
cmp
aas
add
add
fisttps
mov
imul
movsb
loopne
pop
pop
leave
cmp
push
mov
or
jl
adc
cmp
jb
push
test
pop
scas
jmp
add
inc
cmp
cmpsl
mov
cmp
shlb
cmpsb
popa
repz
aad
repnz
add
insb
jecxz
sbb
jns
dec
pop
mulb
test
adc
fnstsw
fidivl
sti
inc
dec
xchg
cmp
jge
fsubrl
adc
std
pop
cmpsl
subb
adc
movsb
lret
add
cmp
pop
or
cmpsl
iret
mov
js
cwtl
pop
test
push
cmp
popf
sbbb
sub
imulb
sahf
xor
and
dec
push
cmp
and
mov
cmp
mov
and
mov
icebp
js
push
lods
lret
in
dec
push
jg
inc
lock
scas
mov
faddl
or
add
clc
movsb
out
scas
add
mov
aam
sahf
lds
out
inc
sti
jae
cld
imul
addr16
mov
mov
arpl
jge
push
jo
repz
or
add
dec
subl
popf
inc
repnz
ljmp
daa
push
sbb
sti
out
sbb
push
jne
outsb
shr
ja
nop
fstps
insl
cmpsl
clc
scas
dec
mov
sub
mov
mov
and
pushf
xchg
sub
out
pop
or
push
sub
sbb
push
loopne
adc
push
and
insb
mov
arpl
mov
add
or
push
pop
or
push
mov
adcb
push
sbb
lret
add
adc
cmpsb
mov
mov
add
inc
jb
push
in
jmp
inc
fcmovne
nop
dec
cmp
ljmp
cmp
ss
jns
clc
incl
nop
adc
inc
enter
mov
mov
iret
sbb
dec
in
subb
mov
inc
fldl
scas
cmpsl
xchg
popf
xchg
sbb
cmp
sarl
cmp
add
insl
repz
or
dec
insl
or
sahf
xchg
jo
xchg
push
add
push
shll
inc
testl
into
mov
cmpsb
popa
cmp
push
cwtl
push
loop
lahf
adc
adc
stos
enter
jl
and
ret
mov
je
inc
and
xchg
bound
jnp
mov
push
cmpsl
dec
repz
pusha
cmpsb
in
dec
addr16
cmp
ficomps
fsts
mov
divb
xchg
ficompl
inc
sbb
sbb
mov
pop
fists
lret
jmp
adc
xchg
pop
outsl
repnz
roll
mov
loope
xor
rclb
stc
inc
mov
lock
test
rcrb
outsb
aaa
pop
xor
push
cmp
sbbb
sbb
and
addb
insb
in
repz
pushf
dec
fmull
loop
stc
or
test
out
daa
mov
jecxz
repnz
leave
dec
add
sahf
push
scas
xchg
and
adcb
imul
sbb
test
imul
rorl
movsl
xchg
stc
adc
adc
test
test
add
mov
push
movsb
popf
xor
testl
pop
out
jnp
pcmpeqd
aaa
adc
in
lods
push
mov
in
mov
jecxz
rcrb
hlt
mov
pop
jb
in
roll
xchg
inc
ss
jl
testl
xlat
shl
test
ljmp
and
xor
test
in
xor
hlt
in
mov
sub
and
cmpsb
sbb
movb
and
or
fnstsw
fnsave
mov
add
cmp
rorl
in
xchg
fistpll
ljmp
sbb
push
sbb
xor
in
mov
or
sub
les
or
movsl
pop
jl
cli
adc
jmp
in
mov
dec
aas
aaa
mov
call
xchg
outsb
fsubs
cmp
cmc
in
adc
leave
les
andb
and
aad
push
xlat
jne
add
xchg
invd
incb
mov
cli
adc
mov
jle
jne
out
pop
sub
mov
sub
stc
jo
enter
adc
mov
les
lods
sbb
bound
xchg
insl
or
sub
into
jmp
in
mov
shrb
jmp
xlat
sbb
pop
pop
cmpsb
pop
pop
pop
dec
in
jge
and
in
sbb
out
arpl
jp
scas
jnp
xor
cmpsb
testl
push
scas
es
sbb
sub
sub
js
lret
daa
fwait
jle
jge
idiv
mul
rcrb
sbb
inc
xchg
or
fs
cmc
mov
lds
add
cld
scas
aas
dec
pop
pusha
addb
orl
xor
adc
mov
or
jl
or
push
sub
gs
rcrl
stos
js
push
add
lret
dec
jmp
add
movsl
outsb
pushf
bound
int3
xchg
and
mov
jo
loop
xor
sahf
pop
mov
add
push
stos
xor
push
mov
lods
cli
sub
sbb
aam
sbb
lcall
in
mov
xchg
jecxz
sub
into
popf
xchg
and
dec
das
or
push
mov
push
jp
ret
pop
mov
insl
adc
int3
rcrl
in
xor
cmp
fsincos
mov
mov
jecxz
add
nop
and
adc
fsts
mov
xor
imul
test
stos
gs
or
and
mov
mov
rorl
pop
push
xchg
stc
cmpsb
jecxz
mov
add
icebp
movsb
mov
cli
jbe
dec
xchg
xchg
push
repnz
daa
fstps
xlat
mov
pop
dec
inc
mov
adc
inc
jnp
mov
loop
add
aad
aaa
out
add
cmpsl
cs
lds
out
mov
std
push
mov
inc
pop
stc
pushf
ss
loope
imul
repnz
aaa
test
dec
cld
mov
push
mov
andb
xchg
test
pusha
adc
arpl
lods
add
out
xchg
rorb
push
outsl
cmpsb
pop
iret
cmp
xchg
test
shrl
pop
push
pop
sub
loope
push
out
jmp
pop
dec
mov
and
push
sub
repnz
pop
gs
jne
mov
inc
sub
mov
div
or
mov
fdivrl
add
xor
xor
outsl
inc
add
mov
frstor
jp
jno
dec
add
pop
add
xor
lahf
int
stos
cli
fisttpl
sub
xor
sub
mov
lret
stos
repnz
mov
dec
or
or
cmp
inc
xchg
mov
cmp
cmp
arpl
rcrb
jmp
aad
xchg
fadd
inc
test
sarb
testl
add
div
arpl
cmpl
and
xor
adc
lcall
ret
push
cmp
in
test
mov
dec
int
or
out
pop
push
mov
popa
mov
rcll
pop
scas
sahf
sub
scas
imul
lea
xor
fnstsw
jg
sbb
add
lcall
lock
cmpsb
in
in
ret
or
cmc
cli
cmp
loop
adcb
fsubl
mov
add
es
addr16
inc
xchg
movl
int3
mov
lea
cmp
push
xor
sub
push
add
mov
xor
nop
jnp
nop
scas
mov
out
mov
add
js
loopne
adc
cli
adc
cwtl
daa
xchg
jbe
inc
daa
xchg
cmp
xchg
fmuls
push
in
xor
sbb
pop
xor
mov
xchg
cmp
jmp
sbb
xchg
outsb
adc
jle
lcall
addb
lcall
sbb
cmpsb
or
stos
sbb
jle
jae
fnstenv
mov
xchg
add
cmp
push
loopne
add
ss
mov
loop
mov
popf
repz
sbb
movb
insl
ja
cmp
sbb
dec
imul
mov
jb
sub
or
push
movsb
std
mov
cs
add
lret
dec
es
jg
roll
jne
lock
les
int
icebp
repz
js
and
ds
jp
outsl
out
je
and
outsb
popa
xchg
push
int
xor
push
push
jmp
shlb
scas
sub
and
fnsave
das
pop
sbb
push
xor
pop
push
or
lret
jp
stos
mov
aam
jecxz
adc
subb
cmp
or
xchg
mov
ret
mov
enter
test
inc
iret
or
or
nop
xchg
mov
pop
jp
fnstsw
mov
pop
jmp
adc
cmc
mov
cmc
push
inc
cmp
paddusw
dec
mov
ljmp
shll
mov
aad
into
lods
adc
nop
xor
rolb
int3
pop
faddp
add
mov
cmp
fsub
lds
push
mov
xchg
test
push
dec
lods
rcll
mov
or
push
xor
pusha
pop
mov
in
mov
shrb
scas
pop
jmp
fisubs
pop
into
add
in
add
int
lret
divl
xchg
pop
pusha
repnz
xchg
and
mov
sahf
fidivs
push
aam
xlat
fwait
mov
mov
cmp
popw
lret
dec
dec
mov
fdivr
mov
enter
sub
sahf
sbb
and
jg
jge
mov
pop
pop
aam
imul
js
enter
andl
fadds
out
adc
call
and
out
xchg
das
out
daa
xor
in
xchg
adc
mov
mov
xor
test
outsb
andb
cmc
enter
or
pop
xor
jnp
xor
inc
add
jnp,pn
xorl
jae
cld
leave
andb
orb
jnp
cmpsb
cmc
pop
jo
or
jecxz
sbb
test
push
ja
loop
dec
movsb
xor
sti
adc
sbb
scas
and
xchg
sub
popf
mov
sub
addl
sahf
sbb
in
inc
mov
cmpb
mov
push
mov
jnp
movsb
or
xchg
or
out
mov
push
cmp
mov
or
pop
arpl
mov
cmp
pop
pop
test
cltd
out
dec
xor
popf
pop
inc
cli
das
or
and
repnz
mov
cltd
or
les
test
sbb
shr
dec
iret
lcall
daa
in
addr16
shl
sbb
lock
push
movsl
lock
jp
sbb
fsubl
xchg
push
mov
pushf
jle
adc
stos
xchg
xchg
adc
pusha
out
test
ds
inc
and
adc
inc
sub
pop
mov
sarb
cmp
lahf
mov
data16
aad
scas
adc
dec
cmc
movl
lret
mov
lds
repz
stos
mov
pop
das
insl
inc
xchg
add
leave
jecxz
inc
fucomi
hlt
sub
es
push
push
or
or
and
std
ja
fldenv
test
and
jecxz
mov
popa
pop
inc
push
jecxz
jp
popf
icebp
popf
aam
rcrl
leave
or
push
mov
test
dec
sahf
lea
mov
test
es
out
push
gs
insl
mov
xchg
inc
jno
pop
lea
pusha
ds
jmp
flds
pushf
push
fdiv
pop
pop
test
pusha
xor
push
testl
shll
insl
xchg
fadds
repz
add
das
jmp
xor
mov
mov
lret
and
mov
mov
arpl
subl
or
push
ret
lcall
pop
lret
repz
sbb
xor
add
or
pop
xor
cli
daa
push
movsb
and
cld
add
mov
mov
stos
int3
mov
stos
dec
jg
insb
aas
in
stos
outsb
outsb
xor
mov
push
scas
cli
lock
shlb
fldenv
stc
sub
popa
lret
mov
mov
dec
jmp
movsb
sub
pop
imul
in
out
push
jle
loope
bound
lock
inc
pop
aas
mov
loope
add
arpl
lods
aad
cmpsl
sub
das
add
es
jmp
cmpsb
adc
ds
mov
and
sbb
add
push
loop
xor
dec
dec
xor
cmpsl
push
cmp
push
js
ret
mov
or
xor
adc
pop
das
ret
sbb
push
pop
mov
adc
aam
outsl
xchg
and
test
sub
xchg
push
rcrb
popa
pop
push
scas
movsb
mov
add
icebp
mov
dec
jmp
nop
insb
fstl
insb
inc
dec
mov
adc
push
in
test
push
aaa
cli
dec
loop
test
fldlg2
cs
clc
jae
adc
cltd
and
xlat
jb
fidivs
sbb
push
dec
clc
cmp
jle
pop
lds
mov
add
or
icebp
adcl
push
lahf
dec
das
ds
cs
ret
mov
call
sar
sbb
and
fiadds
inc
es
cltd
adc
mov
jnp
repz
xor
repz
pop
pop
aam
jbe
daa
mov
mov
pop
cmp
dec
add
jmp
add
insb
movl
pop
xor
hlt
xchg
dec
testl
sbb
cmp
lret
jmp
push
testl
xchg
stos
inc
decb
cs
push
lds
test
pop
push
mov
addl
fwait
sar
cs
mov
add
sbb
mov
cmp
or
pop
jg
int3
lcall
in
pop
lahf
lcall
push
xor
pop
fnstcw
mov
lcall
jle
sbb
pusha
push
lahf
push
sub
adc
inc
or
in
jg
cmpsl
lea
in
push
rorl
pop
fildl
xchg
mov
mov
or
cltd
mov
test
and
nop
rcll
or
popf
push
call
or
xor
mov
clc
out
andb
jo
mov
xchg
cmc
mov
ret
push
pusha
cli
int
clc
jmp
imul
adcb
sub
pop
out
mov
mov
or
cmp
insb
push
test
xor
add
repz
fs
inc
fstl
jo
sar
inc
mov
orb
add
jl
daa
mov
push
ljmp
sub
xchg
aaa
sub
add
test
in
mov
pop
in
rcrl
int3
push
clc
lret
loopne
rcr
inc
lock
jno
jmp
aas
adc
jbe
xor
jp
andl
cmp
in
int3
or
ret
or
adc
pop
xchg
movsb
insl
push
iret
sbb
repnz
pop
xor
jge
imul
mov
or
cltd
jle
adc
pop
xchg
lcall
je
les
dec
fdivrl
bound
dec
out
jl
arpl
and
fwait
imul
inc
xchg
stc
mov
fists
aad
add
in
aaa
shlb
ret
inc
sti
es
cmp
in
shl
repnz
pop
inc
aam
outsb
imul
data16
pop
rolb
aam
push
cmc
add
cmp
out
dec
mov
dec
shrb
pop
es
dec
leave
jne
sahf
in
xor
mov
enter
or
sti
addr16
ss
jmp
ja
iret
adcl
adc
mov
lahf
dec
xchg
cs
test
and
jno
lds
inc
sti
out
inc
lret
mov
pop
fstpl
test
adc
lock
pop
test
cmp
in
fucomp
jg
add
leave
cmp
imul
cli
and
cmc
es
mov
mov
xchg
push
cmc
lcall
js
sarl
into
jns
pop
ret
aas
push
sbb
adcl
add
shll
mov
decl
dec
orb
sub
or
cltd
pop
in
fucomip
push
mulb
push
cmpb
inc
or
mov
add
pushl
xchg
clc
mov
rcl
cwtl
les
mov
jp
add
xchg
adc
and
lcall
lret
dec
dec
lock
cltd
or
jp
xor
jbe
jo
test
xchg
lods
jbe
inc
hlt
imul
push
pop
lods
adc
ss
jo
xor
and
mov
addb
sub
sbb
addr16
lcall
repz
fists
movsl
outsb
mov
jbe
pop
xor
xchg
mov
inc
adc
jge
insl
scas
into
sbb
clc
xchg
addb
popa
inc
jns
inc
andb
dec
pop
aaa
jnp
fwait
jae
cmp
mov
dec
je
js
add
dec
adc
mov
jns
rolb
xchg
pop
mov
dec
test
or
cmp
mov
ljmp
dec
mov
stos
or
lods
sub
push
jno
pusha
cmp
jne
cmp
adc
out
cmp
imul
jo
pop
nop
jae
inc
mov
jp
fdivp
dec
dec
dec
punpckhwd
mov
jmp
xor
loope
mov
mov
jae
xchg
fsubrs
dec
fiadds
aaa
sbb
cmp
dec
lds
add
push
ds
jg
xlat
jle
repnz
arpl
sub
cmpsl
and
sub
xchg
mov
xchg
repnz
cmp
enter
or
into
jle
pop
push
or
bound
adc
cmpsb
mov
ja
xchg
cmp
xchg
dec
int3
sbbl
jl
push
push
ret
push
push
xlat
cmc
notl
push
subl
inc
add
gs
outsb
mov
xlat
cli
pusha
push
mov
sbb
xchg
sarb
or
roll
into
or
xchg
sub
movsb
fiadds
out
shll
scas
cmp
je
es
lret
pop
fisubl
push
pop
push
popf
sbb
jmp
sbb
imul
ljmp
push
sbb
andb
ss
sbb
jnp
lret
add
fsubp
popf
lcall
inc
push
mov
jnp
call
repz
xchg
xchg
jge
and
cli
in
adc
and
lret
pop
inc
jmp
jb
leave
pop
mov
call
add
in
lahf
or
std
sbb
pop
pusha
andl
mov
sbb
bound
aaa
or
xchg
pop
xchg
inc
cmp
gs
xor
nop
xlat
mov
ret
int3
and
mov
ficompl
xlat
inc
enter
or
add
jg
cld
mov
rcr
xchg
push
std
and
inc
cli
movsb
test
jmp
and
xor
dec
sbb
xchg
push
insb
mov
and
je
outsb
aas
insl
fwait
movsb
cmp
mov
iret
mov
mov
mov
cmp
cmp
lods
jbe
add
add
test
aam
jo
mov
mov
dec
add
lcall
sbb
adc
push
scas
fidivrs
cmp
mov
mov
roll
mov
insl
mov
loop
aas
daa
test
pop
gs
xor
sbb
pop
test
xlat
dec
xchg
fidivl
or
loope
mov
jmp
and
mov
sbb
pop
xorb
xchg
fwait
jecxz
sub
mov
fwait
mov
in
sub
push
or
ret
xor
movsb
in
cmpsl
in
push
fisubl
jg
sbb
nop
fwait
sti
test
ror
mov
hlt
add
nop
es
sbb
fwait
stos
or
shll
scas
leave
mov
test
nop
aam
ja
adc
subb
cmp
int
jnp
rcl
mov
imul
leave
leave
std
lea
jge
aad
add
mov
push
sub
idivb
pushl
cmp
rep
iret
sub
dec
mov
insl
ret
mov
loop
repnz
loope
cmp
test
mov
cmpsl
jo
insb
test
and
mov
dec
pop
mov
fiaddl
push
jno
lahf
inc
fwait
out
pushf
xor
notb
dec
xor
cmp
mov
adc
jnp
push
dec
pop
push
cmpsl
lea
mov
ret
pop
pop
test
aad
jne
or
call
lret
lock
loopne
flds
xor
mov
add
pop
cmp
jp
and
subb
jno
pop
dec
or
es
xor
bound
addr16
jp
mov
test
jne
push
bound
fiaddl
xor
popf
push
xor
and
cld
sarb
push
inc
sub
lods
icebp
insb
push
pop
cmpsl
xlat
roll
pop
out
jb
test
repz
ret
lods
adc
mov
inc
xchg
aas
jns
mov
push
lock
test
add
mov
jae
out
lret
fisubl
mov
jl
xchg
jmp
jbe
popa
inc
mov
cmp
out
sub
sub
bnd
dec
shrl
inc
ja
and
lret
stc
mov
in
call
or
insb
rol
or
lods
pop
mov
in
mov
push
pop
xchg
xchg
add
test
int3
filds
in
pusha
icebp
mov
or
add
and
mov
in
or
or
push
mov
xor
clc
adc
jns
jns
ret
aas
sbb
scas
in
test
xor
sahf
pop
cwtl
push
out
loop
fistl
pop
and
enter
stos
push
jno
sti
adc
or
inc
test
test
aad
and
sub
icebp
mov
push
add
fwait
outsb
jo
add
fcompl
jns
jl
fldcw
cmpsl
or
fs
pop
mov
jae
mov
sbb
inc
in
xor
and
push
jbe
sbb
punpckhdq
sub
dec
jne
hlt
push
fnstsw
inc
fisttpl
xor
fsub
jg
push
ror
mov
dec
lret
stos
jmp
pop
and
lods
jg
push
repnz
xor
scas
push
pop
cs
pusha
loope
cli
mov
and
and
movsb
xchg
es
and
or
fdivrl
pop
pushf
push
pop
pop
dec
imul
pop
push
mov
cmp
sub
scas
int
test
push
sub
adc
mov
inc
push
iret
add
lahf
mov
xor
xchg
sti
or
add
inc
insb
gs
add
ja
or
sbb
cmp
mov
adc
add
lods
pop
jmp
les
repnz
inc
shlb
inc
sub
xor
in
sub
pop
and
fcomp
das
gs
sub
adc
add
and
nop
jno
add
leave
mov
shll
mov
pushw
push
popa
xor
and
mov
or
imul
adc
jle
push
xchg
mov
push
popf
aam
mov
test
imul
popa
testl
mov
mov
popf
cmp
adc
push
sbb
push
je
push
fcomi
test
fwait
inc
push
fadds
out
test
mov
xchg
fdivrs
into
rcrb
mov
outsl
xor
insl
mov
pop
stos
pop
or
pop
sub
fwait
dec
cmp
inc
popf
lock
pop
xchg
subb
mov
xchg
stos
xor
sbb
fstpl
inc
pop
pushf
mov
bnd
sbb
loop
mov
rcrl
popl
mov
mov
and
pop
nop
jg
cs
cmp
ret
push
jl
xchg
jmp
cwtl
sbb
mov
movsb
loop
scas
add
mov
inc
test
bound
sbb
mov
call
incl
dec
pop
call
mov
pusha
cmp
push
jbe
pushf
rclb
std
mov
inc
add
sub
lcall
test
mov
arpl
adc
sub
pop
lahf
int
pop
sahf
jae
nop
es
in
hlt
out
sub
js
into
testl
std
pushf
pop
repnz
adc
dec
test
inc
fsubs
pop
in
sub
add
mov
cmp
testb
out
bswap
pop
rcll
aaa
mov
and
in
jp
xor
mov
cmp
jb
into
mov
loopne
or
in
cs
sub
iret
negb
xlat
and
dec
and
sbb
mov
cs
mov
cmp
or
lock
mov
mov
lcall
loope
std
std
dec
cmp
ljmp
mov
orl
popf
xchg
jae
inc
mov
aam
adc
dec
outsl
and
insb
and
xchg
xchg
add
iret
xlat
push
out
addr16
mov
pop
shrb
mov
push
das
daa
rcl
inc
movsb
and
jo
push
out
add
loop
into
jno
popl
cwtl
ret
mov
imul
test
inc
mov
lods
orb
jo
enter
lds
xchg
imul
aad
addr16
test
bound
lea
pop
sti
mov
movsl
dec
mov
into
jns
add
aad
popf
aam
cltd
jl
lret
jg
dec
enter
adc
adc
loop
push
test
test
dec
add
jne
lcall
arpl
push
es
adc
pop
adc
sub
sbb
jnp
ret
jl
dec
std
out
jb
test
orl
in
jns
mov
ds
mov
push
es
dec
mov
xor
pushf
hlt
cltd
cmp
or
clc
adc
pop
xor
xchg
test
aas
and
inc
mov
popf
mov
dec
mov
cltd
hlt
addr16
jo
movsb
aaa
ljmp
mov
cs
mov
je
xchg
leave
mov
scas
icebp
idivb
rolb
gs
xor
or
in
adc
adc
push
lods
std
dec
mov
sbb
sbb
pop
daa
movsb
call
push
shr
push
testl
movsb
and
stos
jmp
fwait
cltd
popa
frstor
mov
adc
icebp
and
scas
dec
rcl
add
pusha
stos
movsb
push
mov
inc
sbb
inc
xor
jno
mov
jle
cmp
scas
jg
xlat
enter
shrl
cmp
jno
mov
stos
enter
mov
lret
shlb
sbb
pop
arpl
outsl
in
mov
mov
sub
adc
pop
je
inc
and
loop
mov
mov
sbb
repnz
sub
xchg
mov
sub
popa
imul
bts
push
push
insb
xor
in
sbb
jecxz
cs
sub
sbbl
xor
dec
jno
cwtl
nop
adc
push
dec
lcall
xchg
shlb
pop
push
mov
sub
ret
in
cld
push
xor
and
xchg
bound
adc
int3
cld
mov
mov
out
fists
pushf
popa
leave
fmul
mov
daa
ss
or
data16
sub
js
add
movsb
mov
shll
lods
dec
sub
cli
scas
aaa
sub
out
lock
push
addb
ljmp
pushf
mov
or
movups
jecxz,pt
bound
or
dec
cs
subb
js
pop
xor
sub
xlat
repnz
popa
ds
push
cmpsb
xchg
js
xchg
cmp
std
pop
xchg
ds
loope
out
je
xchg
and
mov
xchg
xchg
ja
movsb
cmp
add
shrb
repnz
fidivs
das
mov
lret
int3
js
or
fstpl
jns
jno
dec
fisubrs
pop
sbb
sbb
scas
and
insb
dec
std
mov
xor
shr
bnd
in
mov
sahf
pop
out
xchg
sub
lcall
arpl
xlat
movsb
and
or
inc
add
outsb
mov
fadds
or
inc
dec
jg
enter
test
mov
sarb
inc
jecxz
push
in
ljmp
xchg
aad
push
out
ja
mov
dec
sbb
pusha
filds
ljmp
xchg
mov
pop
xchg
xchg
pop
adc
pop
pop
xor
in
sub
dec
jb
dec
fcoml
sub
jno
pop
mov
push
ret
mov
inc
lock
cli
sub
jmp
in
mov
test
jbe
sub
sbb
jl
adc
jmp
rclb
inc
pop
jl
jne
xchg
cltd
out
test
movsl
or
inc
fnstenv
adc
mov
call
and
inc
pop
mov
xchg
inc
les
ljmp
sbb
mov
clc
iret
inc
cmpsb
lcall
cs
loope
loopne
or
or
adc
aam
rcrb
hlt
notb
inc
iret
shl
cld
mov
fistps
push
push
fcmovne
shr
lock
push
mov
ss
mov
xor
mov
mov
call
push
inc
clc
xor
and
xchg
bound
mov
lock
inc
sarb
lret
mov
stos
testb
push
dec
movsb
movsb
xor
lahf
in
fdivrl
push
mov
popa
fadds
ja
stos
mov
bt
ret
rolb
dec
adc
fldt
arpl
jge
ljmp
pop
les
cmp
fistl
shrb
xchg
cld
or
jno
mov
and
jno
fisubrs
pushf
dec
mov
or
cmp
pop
std
out
jne
xor
mov
mov
or
pop
cwtl
jns
pop
rcl
lcall
adc
imul
mov
xor
or
frstor
cltd
idivl
push
mov
lea
xchg
jl
push
inc
adc
test
nop
out
es
orb
xchg
or
inc
and
enter
fistpl
pop
adc
sbb
std
shll
sar
dec
pushl
xchg
sub
xor
adc
sbb
int
outsl
mov
mov
mov
gs
cld
enter
sbb
xchg
jle
xor
fs
rcll
cmp
movsb
sub
int3
inc
dec
sub
inc
in
jns
iret
push
roll
inc
jns
loopne
jb
xor
pop
out
into
dec
push
adc
sub
nop
rcll
dec
mov
cmp
pop
inc
sbb
rcrl
jmp
std
mov
mov
xchg
fisubl
xchg
push
ficomps
adc
inc
mov
cltd
mov
sbb
jl
into
idivl
mov
iret
sbb
in
pop
add
mov
cmc
mov
cmp
xor
push
sub
rcrb
cmp
bound
sarb
and
aas
lret
dec
out
cmpl
sub
sarb
es
jo
add
loopne
sbb
fidivs
lcall
jmp
and
inc
add
out
mov
mov
jp
outsb
movsl
jo
mov
adc
int
sarl
sbb
loope
rcll
or
mov
mov
xchg
jns
pop
fdivp
cmp
adc
ja
mov
subb
test
sbb
negb
and
insl
jp
jno
aas
hlt
mov
ret
fnstenv
pop
mov
addl
xlat
bnd
pop
and
jo
bnd
add
mov
xor
adc
fs
lahf
inc
mov
mov
hlt
xor
mov
testb
push
shlb
push
jecxz
dec
scas
ret
jbe
sub
popa
mov
lock
test
sahf
mov
pop
call
inc
adc
cmp
icebp
in
stos
loopne
inc
push
in
aad
dec
jae
push
in
out
popa
test
pop
pop
jg
stos
aaa
xor
les
ret
cmp
dec
xor
xlat
sub
notb
jle
jne
xor
xor
arpl
cmp
sbb
mov
jbe
test
cmp
xor
ds
out
push
andb
or
test
jmp
mov
push
mov
pop
mov
pop
mov
js
test
mov
sbb
and
jnp
clc
adc
mov
addr16
xor
in
adc
mov
aad
sub
ret
pop
nop
ja
cmpsb
fs
nop
mov
arpl
xor
lret
lcall
cld
imul
lods
jbe
pop
je
push
fsts
loopne
xor
mov
shlb
rcrb
or
int
fs
outsl
hlt
mov
mov
fcompl
cmpsl
outsl
mov
xchg
fldt
xchg
in
pop
rol
sub
jo
cltd
jne
and
and
insb
or
ror
mov
je
dec
xor
cmp
call
pop
or
push
ljmp
inc
fdivl
xor
mov
lcall
and
push
sbb
xor
and
xchg
es
and
and
adc
fisubrs
dec
xchg
jo
jl
test
jno
jle
mov
shll
sub
and
or
outsl
jp
inc
jo
lds
rolb
idivl
mov
xlat
lea
loope
fstl
jmp
mov
xchg
and
jnp
test
in
push
std
clc
mov
sarl
jmp
fcmovbe
and
lea
jg
jg
out
imul
fisubl
xor
push
push
lret
pop
lret
call
and
mov
push
sbb
sarb
sti
rcrb
xchg
ret
cmp
rcrb
daa
rcr
inc
lcall
mov
cmp
jp
push
clc
rclb
sub
push
iret
rorl
daa
stc
call
sub
in
mov
fsubr
ret
hlt
mov
in
loope
xor
test
xchg
jnp
loop
clc
int
jb
enter
cltd
xlat
jo
inc
pop
jbe
pop
mov
mov
fcomps
adc
dec
jns
mov
inc
push
mov
xchg
or
in
idivb
or
fnstenv
mov
sub
mov
cmp
popf
pop
fnstcw
jmp
pop
mov
movsb
outsb
shrb
sbb
cmp
hlt
jno
int
or
xor
dec
xchg
scas
add
lcall
mov
mov
addr16
mov
cmpsb
inc
inc
jecxz
in
fcompl
adc
push
jno
int3
mov
jp
xchg
loopne
jecxz
clc
and
inc
subl
int3
int3
dec
std
and
pusha
sbb
mov
pop
repnz
scas
fsubl
je
add
or
push
xchg
lods
cmpsb
shll
add
lcall
or
sbb
xor
movsl
lds
push
ret
sub
xor
inc
dec
sbb
or
mov
popa
and
nop
xlat
inc
sbb
aas
pushf
sub
cmp
push
add
dec
mov
in
cmp
or
cli
cmp
jmp
jb
rolb
jns
push
rcll
dec
sub
das
js
pop
jmp
test
xchg
outsb
out
fnstcw
add
push
pusha
loope,pn
inc
int
sub
cmp
inc
lcall
sbb
cmp
in
lods
rolb
adc
insb
add
out
pop
lret
or
fdivp
cmpsl
repnz
popf
out
mov
sbb
ds
xchg
and
lods
sahf
lret
xor
jb
pop
clc
scas
adc
xor
pusha
in
jne
jb
notl
or
ljmp
xor
pop
fldt
cli
mov
rcrl
sti
js
shl
jmp
push
cmp
adc
mov
loop
jns
pushf
out
xchg
push
scas
mov
xor
cmp
imul
xlat
insb
mov
test
dec
shll
icebp
mov
scas
mov
mov
or
data16
jbe
fidivl
roll
lea
shll
mov
sbb
and
mov
or
mov
mov
adc
and
push
sarl
mov
mov
cmp
jns
ss
aas
hlt
adc
hlt
inc
fwait
insl
repz
test
shlb
les
push
push
add
push
sub
ljmp
fisttps
xchg
in
push
inc
push
sbb
fadds
xchg
add
fwait
add
push
pop
pop
pop
loopne
enter
jecxz
mov
sbb
subl
push
jne
and
xor
jne
mov
jbe
call
jae
test
jge
mov
out
movsb
cli
mov
xor
sbb
or
outsb
std
in
out
push
arpl
imull
popa
aad
cmp
jbe
repz
das
xchg
and
pop
outsb
pop
es
mov
sub
jg
sbb
xor
mov
jbe
pop
lret
test
push
rcrb
cmpsl
int
pusha
and
shll
sahf
aam
divl
inc
mov
pop
or
scas
push
or
adc
xchg
clc
sbb
iret
mov
push
mov
and
call
push
ds
hlt
fs
jnp
inc
lcall
fldcw
push
test
in
dec
push
mov
mov
rolb
mov
dec
gs
mov
cmp
cld
cmpsb
jnp
shl
jno,pt
ret
jl,pt
pop
jge
cmp
movsb
push
hlt
or
or
shrb
hlt
test
xchg
inc
stc
ret
and
scas
pop
ss
cmpsb
cmp
or
push
nop
dec
int
fxch
mov
xchg
adc
xor
dec
lcall
mov
call
mov
inc
or
scas
mov
lret
dec
in
push
cli
pusha
and
nop
fcomps
int3
into
sti
push
mov
mov
into
mov
arpl
arpl
stc
push
sub
pop
and
popa
adc
mov
mov
loopne
addl
mov
stos
frstor
adc
mov
xor
movsl
or
pop
pushf
test
xchg
lret
mov
jno
add
idivl
jg
outsl
pop
mov
mov
pop
mov
xor
xchg
xchg
cmc
cld
ret
sahf
fwait
or
call
push
jmp
mov
xchg
call
scas
arpl
sub
pop
lods
adc
mov
push
mov
inc
add
pop
sbb
fcoml
out
inc
dec
in
popa
je
cmpb
int
movsl
mov
mov
insb
pop
or
test
lea
push
pop
inc
push
fstl
mov
insb
xor
rcrl
daa
loop
mov
mov
out
pop
sbb
xchg
cmp
cld
mov
ss
fidivs
mov
sub
test
fildll
shlb
iret
and
je
imulb
push
test
push
enter
divl
outsl
or
out
test
or
push
sbb
arpl
dec
popf
dec
mov
jmp
lock
pop
test
imull
neg
push
bound
inc
out
roll
scas
frstor
or
jle
outsb
inc
xchg
fsubrs
aam
fs
mov
lahf
std
incb
inc
jnp
test
inc
psubb
jno
int3
shrb
das
push
sbb
or
mov
adc
leave
cltd
cmp
cmp
mov
dec
das
loop
insb
push
outsb
cli
fstpl
dec
xchg
data16
out
icebp
in
dec
pop
jno
sbb
sub
loope
mov
adc
mov
cmpl
sbb
int3
jp
ss
jnp
sbbb
repz
dec
or
stos
xchg
mov
push
pop
jb
xchg
mov
add
test
out
subb
add
aas
test
arpl
add
or
xor
ljmp
repnz
addr16
loope
jl
stc
adc
mov
fisubl
sarl
fs
movsb
add
leave
push
sarl
mov
int
cmp
fdivrs
test
add
add
insl
sub
push
test
adc
xlat
push
xchg
idivl
insl
loopne
lahf
dec
sub
xor
sahf
cli
aam
outsl
pop
and
mov
push
subb
rep
adc
aam
pop
clc
jnp
jp
lcall
js
add
bound
les
dec
mov
fnstsw
jb
inc
mov
test
sub
fdivrl
adc
shll
in
imul
test
lret
or
jae
in
sbb
out
das
pop
adc
jae
movsb
sbb
and
push
lds
pushf
mull
in
xor
push
dec
ljmp
mov
jmp
pop
mov
add
lret
mov
mov
mov
sub
push
repz
and
lods
lcall
xor
ds
inc
dec
xlat
es
mov
ja
sub
dec
sbb
push
iret
lods
lret
lcall
dec
inc
push
lcall
xchg
push
scas
insl
in
lea
or
mov
xlat
lcall
lods
xlat
inc
push
inc
fisubl
pop
push
inc
outsl
jbe
movsb
insl
cmp
lahf
daa
test
cmp
cmpsb
lret
into
xor
faddl
icebp
xchg
mov
jbe
jecxz
div
mov
mov
inc
fwait
sub
push
adc
sbb
mov
dec
fisubl
inc
mov
xlat
rolb
repnz
inc
mov
mov
test
outsl
sbb
jg
push
jp
or
lods
repnz
xor
rcll
and
jp
adc
and
cmp
int
lea
inc
enter
mov
cli
aas
sub
inc
je
adc
or
pop
and
in
dec
test
adc
mov
pop
dec
dec
sbb
mov
mov
loop
std
xrelease
call
jb
inc
pop
jb
dec
push
mov
xchg
std
fidivrs
fcompp
and
int3
xchg
dec
call
xchg
out
mov
dec
gs
sub
sbb
decl
inc
pop
mov
push
int
jle
cmp
jmp
out
je
jle
rcrl
cmp
movsb
xchg
dec
repz
sti
dec
rcrb
in
adc
idivb
adc
ljmp
mov
test
addb
sbb
cmp
aad
in
scas
call
push
xchg
push
sub
mov
sbb
cli
cmc
adc
fs
or
pushf
pusha
mov
push
xchg
shr
imul
pop
imul
mov
sbb
pop
xchg
sbb
repnz
popf
adcb
or
and
cmpsb
xchg
lret
mov
inc
jns
or
test
mov
mov
adc
add
push
mov
dec
ret
dec
gs
data16
mov
pop
xchg
aas
lret
out
rorb
cmpsb
jmp
stos
testb
mov
adc
loopne
push
jmp
out
out
sarl
test
fucom
lret
adc
nop
push
cmp
lock
mov
push
jne
xchg
sbb
lods
jmp
aas
mov
xchg
push
inc
mov
inc
jbe
mov
or
xor
push
sub
fdivrl
mov
loop
inc
cli
xchg
cmpsb
jb
stc
xchg
add
sub
cmp
aas
dec
jle
aas
inc
inc
cmp
cmc
cmp
lea
sbb
add
sub
mov
outsb
xchg
push
sub
mov
mov
cmpsb
fimull
lods
or
pop
mov
mov
push
push
cmpsb
mov
mov
std
xlat
sub
mov
jl
mov
mov
call
rcr
push
or
ret
enter
xchg
adc
add
sub
mov
cwtl
pop
aas
mov
bound
popl
pushf
fwait
push
jns
aam
clc
iret
gs
push
push
mov
inc
out
mov
stos
xor
scas
dec
mov
jp
leave
in
in
mov
rclb
and
loop
and
or
or
or
out
roll
jb
mov
or
xor
mov
jg
jbe
dec
cmc
mov
hlt
dec
cmp
mov
jge
pop
xor
add
dec
or
push
cmp
inc
fdivp
pusha
aad
or
xor
pop
ja
das
ljmp
or
xor
and
pop
xor
cld
jns
aas
pop
push
adc
outsb
push
jbe
lods
mov
std
cmove
arpl
push
xchg
adc
and
cmp
lods
push
imul
add
sarb
lods
push
inc
cltd
les
lcall
jp
jae
push
cmc
xor
sbb
push
call
xor
aas
push
mov
outsb
xor
les
je
shll
loopne
cmp
xor
push
shlb
mov
fsubr
xlat
ds
xchg
mov
movsl
pusha
pop
out
stc
mov
xchg
adc
adc
in
in
and
sbb
lods
rcrl
dec
test
pop
fdivl
setno
ds
jnp
out
mov
bound
xchg
sbb
mov
outsb
cmp
jl
gs
fsub
and
push
push
mov
mov
mov
test
sbb
xor
dec
arpl
ret
stos
sbb
gs
fnsave
and
imul
inc
mov
testl
jg
and
cmpsb
enter
and
scas
fs
repnz
push
cltd
jmp
lcall
rorb
mov
sbb
addl
addr16
sbbb
mov
popf
pop
pop
inc
xchg
mov
push
std
out
scas
push
and
das
and
repz
js
and
xchg
sbb
incl
pop
arpl
clc
jg
rolb
sub
jge
sub
push
out
and
inc
sub
scas
add
lret
push
rorl
and
sbb
lods
lea
in
mov
push
xchg
test
mov
pop
paddsb
lea
lea
aaa
mov
lock
fwait
enter
jns
cmc
mov
pop
insl
xchg
lret
cmp
int3
test
dec
daa
cwtl
dec
mov
cmp
pop
sub
out
stos
push
dec
sub
push
dec
inc
das
mov
sbb
std
mov
adc
sub
mov
out
xlat
mov
mov
movsb
push
pop
fidivrl
push
sti
jg
rcrb
jp
imul
xchg
pusha
mov
jle
cmp
push
pop
gs
jp
addb
mov
bound
repz
movsl
mov
mov
lock
inc
cli
in
adc
sbb
mov
sbb
pop
xchg
into
jmp
hlt
sarl
cmpb
aam
mov
popa
gs
xor
xlat
mov
gs
aaa
xchg
mov
sub
mov
pop
mov
int
xchg
lds
test
xor
inc
push
jno
xchg
mov
push
pop
cmpsb
inc
lods
nop
sub
shrl
lds
enter
ss
adc
inc
push
fsts
gs
mov
out
popf
add
mov
jmp
scas
push
cmpsl
test
movsl
test
andl
xor
jg
mov
jo
aam
xchg
rorb
pop
sbb
dec
mov
mov
test
jno
pop
ja
adc
movsb
mov
loopne
xor
in
rcrl
ljmp
add
push
cmpsb
movsl
pop
inc
popf
sub
movsb
cld
mov
sbb
ret
es
mov
jbe
idivl
xchg
mov
pop
sub
test
ljmp
or
arpl
rcrb
sub
mov
div
shl
lock
ret
cmpsb
or
push
mov
mov
je
jl
sar
xchg
pushf
fistl
test
cmp
or
hlt
cmp
aam
call
pushf
push
inc
fstl
sub
jge
jecxz
movsb
adc
mov
cmp
or
mov
cmpsb
into
pop
sahf
stos
dec
loopne
add
and
dec
push
fwait
push
js
xchg
in
or
pop
in
mov
push
rorb
cmp
fldl
icebp
jmp
or
inc
rolb
jle
pop
mov
xchg
or
scas
xchg
inc
mov
push
push
fildll
out
gs
push
int
jnp
leave
aad
jmp
inc
outsb
imul
fs
sbbl
mov
decl
rorl
push
popa
jne
pop
or
add
enter
push
in
pop
pop
xor
pop
aas
xor
cmp
loopew
or
and
loopne
in
mov
ret
push
aaa
push
cmp
aaa
and
int3
mov
mov
jmp
dec
repz
scas
dec
or
push
enter
fldenv
pop
xchg
xchg
lds
jecxz
stos
in
sbb
and
lahf
sub
and
cmp
jge
jo
rcrl
cli
add
test
aas
jle
leave
lcall
push
mov
pop
out
jle
xorl
pop
mov
push
push
mov
test
mov
pop
out
inc
cmp
loop
mov
test
inc
jp
mov
pop
push
push
sub
xchg
fcom
movl
sbb
pop
shll
roll
fmull
insb
inc
insl
mov
addr16
out
push
mov
pop
scas
xor
test
je
mov
jmp
sub
aas
adc
ja
and
jp
cmpsb
mov
aam
sbb
mov
mov
cwtl
sahf
xor
in
jp
or
nop
push
lahf
gs
xor
pusha
loopne
ret
dec
jl
in
ja
inc
out
and
pop
xchg
daa
adc
inc
shr
aaa
jae
gs
fs
jp
inc
jbe
mov
lods
shl
aam
fisubrs
insb
push
movsb
lret
sahf
add
jecxz
fldt
mov
ja
adc
loopne
inc
pop
inc
xchg
add
es
jge
es
add
jl
inc
mov
jae
inc
nop
jl
repnz
stos
cmp
mov
fcompl
inc
fs
cld
sar
aaa
in
out
jle
fdiv
sbb
sub
arpl
push
or
cwtl
aad
loopne
dec
gs
sbb
xlat
mov
test
out
scas
add
jl
mov
xchg
inc
pop
or
das
jle
pushf
std
and
lock
test
call
popf
mov
jg
and
xor
xchg
pop
stos
adcl
scas
aas
push
push
add
sub
cmp
ret
mov
clc
scas
mov
dec
das
das
test
jmp
test
fidivs
loop
and
push
ret
xchg
push
pop
cmp
shlb
daa
cld
sbb
add
imul
xchg
and
mov
in
jecxz
in
jnp
mov
xchg
sbb
sbb
cld
cli
lret
xor
dec
push
add
pop
or
add
fists
mov
lods
mov
xchg
push
mov
inc
mov
cmp
and
jae
pop
sbb
xchg
fnstcw
scas
jl
adc
mov
or
jb
xchg
dec
and
inc
and
mov
adc
cmp
add
subb
add
int
sbb
into
cld
shl
outsl
adc
mov
sub
and
xor
jb
and
sahf
adcb
outsb
mov
ja
int
in
dec
xchg
rcrl
and
xor
push
jne
out
lea
xchg
pop
lea
rcr
icebp
es
inc
sub
das
push
push
xor
jbe
in
cltd
fisttps
sbb
je
xchg
or
cmp
push
xor
pushf
xor
fidivl
idivl
xor
mov
loop
stos
out
fstl
dec
sahf
decb
pop
xor
imul
fildll
inc
inc
out
stos
add
ss
sbb
and
add
adc
dec
mov
dec
movsl
lret
rol
scas
addr16
cmc
dec
je
adc
cmpsl
add
mov
mov
cmpsb
cmp
xor
mov
push
pop
push
mov
dec
cmp
add
jbe
pop
push
xchg
insb
and
add
push
es
cwtl
repnz
sub
pop
inc
cs
adc
xor
std
call
int
add
add
sub
cmp
mov
sahf
sbb
in
cmp
add
mov
xor
mov
cld
sbbl
sub
mov
push
stc
jae
inc
push
lods
adc
mov
jle
insb
lret
pop
or
test
decb
insl
stos
inc
sub
mov
pop
lods
mov
hlt
push
inc
cmp
leave
dec
cmp
mov
jbe
mov
fstl
dec
mov
jge
in
repz
xchg
jns
popa
dec
cwtl
mov
pop
in
jge
in
test
addr16
mov
add
mov
push
aad
jmp
movsb
mov
mov
jle
dec
cli
hlt
inc
mov
mov
inc
aad
and
aaa
fwait
jp
popf
lock
sahf
ret
jae
and
jae
or
adc
push
push
in
imul
mov
sub
or
cmp
shrb
into
incl
pop
shll
pop
add
mov
std
push
xchg
cmp
mov
mov
nop
in
jmp
aam
mulb
inc
jns
ljmp
loope
inc
rolb
stos
sbb
push
fsubl
cmp
xchg
rcll
rorb
movsl
adc
cmpsl
icebp
jo
in
std
pop
xchg
aad
mov
mov
cmp
add
and
std
popl
xorl
scas
fs
fs
js
cld
push
jbe
clc
rcrl
jg
rcl
mov
in
cwtl
push
bound
es
std
daa
cmp
or
lods
push
sbb
sub
xorb
test
sar
jne
fisubrs
jle
imul
dec
jle
and
xchg
insb
shlb
mov
mov
lret
test
cltd
pop
sti
cmp
lods
push
mov
mov
scas
cltd
add
mov
scas
pusha
inc
sub
in
inc
or
cmp
and
jns
adc
mov
lret
mov
fimuls
loopne
xchg
mov
clc
arpl
scas
jno
or
into
fstps
dec
lret
sub
inc
mov
rcll
lret
inc
push
and
ds
jp
js
mov
scas
orl
lcall
stc
dec
stos
movl
ret
mov
cmpsb
push
mov
fnstenv
repnz
xchg
jno
xchg
dec
cmp
popl
call
cld
xchg
push
xchg
insl
xlat
cltd
aaa
ja
mov
add
sub
adc
aaa
data16
decl
xor
movsb
add
shl
jb
lret
testb
lahf
dec
dec
xorb
popa
mov
and
aaa
lahf
adc
dec
pop
push
mov
clc
mov
add
push
cmp
cmpsl
jnp
cmpsl
inc
mov
mov
stos
insl
inc
sahf
loopne
xor
push
fsts
sbb
add
loopne
idiv
nop
jae
pop
rcll
fldenv
outsb
cltd
icebp
or
jmp
xchg
pop
jge
lahf
sbb
loop
sub
xchg
pop
movsl
clc
dec
mov
mov
mov
es
pop
mov
jno
mov
icebp
add
sbb
xchg
push
faddl
pop
cmp
repz
stos
dec
mov
ljmp
mov
xor
sub
jbe
aad
pushf
in
push
flds
mul
addr16
cmp
dec
fcomps
fwait
les
repnz
push
pop
repz
arpl
mov
cmp
loopne
div
mov
jno
popa
enter
jnp
fsubrl
inc
js
lcall
cmc
arpl
xchg
pop
push
pop
cmp
loopne
push
cmpsl
mov
imul
lock
in
into
loopne
std
daa
sbb
mov
mov
mov
dec
add
loope
je
stos
fucomp
lea
fdivrs
call
clc
imul
sbb
cmp
inc
lret
mov
and
aad
dec
pop
mov
xchg
decl
add
sub
fisttpl
pop
add
movsb
out
cmc
insl
adc
xor
dec
pop
aam
jb
dec
inc
mov
js
pushf
sub
push
sub
clc
enter
push
add
shrl
outsl
les
popa
lret
insb
mov
dec
fstpl
or
dec
adc
jmp
call
fidivl
subl
gs
add
add
rclb
pop
pushf
loope
adc
sarl
leave
nop
sbb
inc
dec
xchg
scas
sub
iret
mov
inc
push
ja
xchg
pop
push
xchg
test
nop
imul
mov
push
enter
mov
fcom
mov
sub
push
addl
sub
addr16
std
sbb
aad
testl
xchg
xchg
jne
bound
jb
adc
insl
and
push
mov
ss
pop
or
pop
cs
sub
xchg
pop
push
in
ret
mov
fs
shrb
and
mov
mov
adc
out
clc
inc
add
std
insb
outsl
mov
pop
jno
subb
xchg
int3
pushf
push
pop
loopne
xor
sbb
inc
add
test
imul
dec
mov
aaa
sar
add
mov
cwtl
sar
icebp
dec
cmc
adc
mov
inc
dec
push
test
jg
cltd
jl
in
jo
in
cmp
xor
int
cmp
pop
out
jne
dec
add
xor
sub
shlb
jg
jp
jo
cli
jns
into
std
testl
xchg
test
push
scas
sbb
and
xlat
lods
dec
lds
dec
adc
popa
sub
pop
sti
enter
adc
call
das
sbb
iret
push
shl
popl
insl
popa
popl
cmp
lds
sbb
fildll
push
inc
js
cmp
iret
mov
fs
pop
and
dec
cld
mov
or
mov
mov
push
loopne
loop
xchg
lret
cs
icebp
js
and
ret
lock
mov
mov
pop
out
leave
dec
icebp
icebp
testl
xchg
jno
push
and
pop
inc
mov
es
inc
mov
xchg
sarl
xchg
cmc
jp
aaa
data16
xchg
xor
mov
cmp
aaa
mov
pop
std
cmc
add
sub
arpl
iret
xchg
sbb
int3
mov
mov
stos
cmpsb
sub
mov
sub
adc
lret
gs
dec
mov
push
xor
xor
mov
repnz
mov
pop
hlt
mov
jne
xlat
xchg
addr16
pop
fnsave
mov
movsl
popa
xchg
add
mov
xchg
outsl
fs
jbe
push
sarl
cs
addr16
jns
popf
mov
sbb
or
dec
adc
repz
es
cmp
or
cmp
bound
sar
push
jp
outsl
jmp
prefetcht2
jns
inc
outsl
inc
ds
push
xchg
xor
push
xlat
leave
fmull
insb
jno
mov
in
sub
fbld
dec
ror
daa
mulb
adc
adc
xchg
sub
fwait
cli
pop
mov
add
mov
dec
mov
cmp
ss
push
enter
adcl
mov
stc
outsl
movsb
enter
adc
mov
test
js
sarl
insl
ljmp
popl
pop
addr16
and
test
fsubrl
mov
mov
add
arpl
cmpsb
aaa
inc
or
adc
or
js
mulb
nop
add
xor
xlat
mov
mov
or
pop
aas
cmp
negb
dec
fsubr
cmpsb
sub
gs
xchg
xor
ret
xor
data16
jno
dec
dec
mov
int
jmp
sub
push
leave
push
js
scas
mov
das
movsb
xchg
push
cmpsb
jae
xor
mov
pusha
lcall
mov
out
mov
or
xor
out
arpl
sub
js
in
mov
adc
jns
loope
cmp
adc
cmc
or
cmp
imul
mov
cmp
lea
lret
sbb
dec
xchg
dec
in
ret
lods
ljmp
inc
out
insl
mov
jnp
lds
cltd
pop
roll
dec
cltd
out
aaa
adcl
in
jecxz
jecxz
pop
sbb
pop
cmp
xchg
mov
adc
push
popa
dec
insb
mov
sbb
mov
cmp
outsl
repnz
dec
arpl
inc
xchg
cmp
dec
stos
and
push
push
test
and
xchg
clc
push
cmp
xchg
cltd
in
and
inc
outsb
rorl
popf
enter
ss
inc
iret
inc
mov
aas
jno
outsl
icebp
adc
mov
or
fcoml
pop
xor
cmp
pop
mov
decl
fisttpll
int3
mov
clc
mov
fstl
and
sbb
mov
int
leave
add
push
adc
and
sub
mov
mov
xchg
sbb
and
adc
dec
not
orb
jns
arpl
and
sub
iret
and
adc
shl
xlat
orb
sahf
pop
gs
adc
jno
mov
aam
js
mov
test
add
inc
or
stos
dec
cmpsl
mov
ja
jl
mov
mov
or
xchg
adc
rorb
popf
mov
loop
dec
mov
movzwl
pop
repnz
sub
bound
fucomp
imul
xor
ret
lcall
push
push
xchg
pop
jmp
fnstenv
mov
filds
aam
ret
jg
push
lock
pop
ret
dec
aad
nop
call
adc
test
sarl
xchg
es
xorl
aaa
adc
sub
dec
push
cld
inc
mov
mov
daa
dec
or
ljmp
clc
movsb
mov
imul
pop
adc
mov
sub
and
outsb
mov
mov
inc
pop
pop
loope
out
enter
adc
fimull
fldlg2
in
jl
sbb
adc
fbstp
inc
xchg
inc
nop
rcrb
sub
sahf
test
icebp
jg
adcl
jl
mov
push
stc
push
icebp
jecxz
mov
pop
dec
mov
insl
es
or
popf
shll
loope
ljmp
xor
shll
mov
rcll
xchg
inc
jb
leave
adc
push
jne
adc
jg
lds
push
movsb
or
push
pop
std
loope
loopne
dec
fnsave
mov
enter
ret
jo
sub
push
mov
lahf
pop
cmp
mov
pop
add
push
cli
sub
and
or
sub
adc
scas
fisubrs
or
imul
adc
jb
enter
scas
push
xchg
rorl
inc
je
fprem1
pushf
std
stos
lods
leave
stc
pop
fidivs
and
inc
call
push
addr16
mov
sar
cmp
pop
test
sti
into
into
or
test
ret
jmp
insl
dec
xchg
add
jl
cld
jl
pusha
jle
mov
pop
out
cwtl
lret
add
sub
push
pop
lods
pop
xchg
push
mov
or
pop
dec
sti
sbb
pop
inc
xchg
lock
mov
insl
adc
or
mov
pop
xchg
push
lock
and
movsl
adc
inc
aas
xorb
add
cld
das
sarl
js
push
jg
insb
sub
rcl
push
data16
rcll
imul
xor
imul
mov
pop
loop
sub
sbb
mov
jg
divb
or
push
icebp
sub
stos
aas
lods
in
outsb
mov
por
xchg
aaa
push
pusha
ret
cmpb
fdivs
jne
lahf
loop
or
rol
xchg
pop
shll
inc
movsl
xchg
xchg
mov
jbe
mov
push
mov
scas
or
push
fwait
mov
jmp
pop
lret
addr16
add
pusha
aaa
dec
xacquire
fmuls
imul
gs
icebp
std
mov
mov
stos
lods
push
sub
push
mov
mov
das
mov
int
ja,pt
popf
pop
movsb
jb
mov
lods
mov
mov
les
cld
mov
insl
fadd
cmp
xor
or
out
mov
lret
mov
mov
out
call
lahf
rcrb
add
or
cmovbe
inc
rclb
or
js
rorl
test
push
inc
adc
inc
arpl
out
cs
jmp
lahf
jbe
sub
bound
shrb
xlat
dec
aad
dec
dec
loope
pusha
pop
mov
ljmp
orb
or
fmulp
ds
jl
add
leave
lock
insb
jl
cmpsl
pop
loope
ret
fisttps
jp
loop
popf
ja
lock
xor
and
stos
push
dec
prefetchnta
mov
out
arpl
arpl
in
push
and
sbb
mov
lods
sti
nop
icebp
or
mov
out
iret
mov
mov
xor
mov
icebp
movsl
pop
hlt
xor
insb
data16
std
hlt
fxch
dec
mov
cs
daa
loopne
aam
hlt
popf
xor
mov
lahf
push
psrlq
cld
sarb
xlat
xlat
leave
jl
loop
dec
fmull
pop
mov
aam
and
jecxz
imul
les
push
inc
loop
cmc
movsb
adc
pop
cmp
mov
jp
add
loope
rcr
dec
xchg
push
icebp
xchg
ds
subl
fadds
mov
outsb
jp
cmp
xor
out
mov
cltd
jmp
sub
mov
cmc
pop
push
pop
inc
mov
add
add
sbb
push
push
sbb
mov
mov
scas
fwait
sub
es
and
scas
push
add
icebp
jmp
mov
mov
and
icebp
iret
ret
lock
cltd
lret
aad
fsubs
push
out
jns
jnp
stc
out
icebp
stos
push
pop
fimuls
lahf
in
mov
lods
mov
aas
bound
gs
mov
lock
jg
xchg
adc
lret
incb
mov
jno
lcall
fbld
bound
shrb
sarb
pop
pop
popa
push
fidivrl
fisubl
mov
or
inc
je
sbb
aaa
jge
pusha
mov
shrb
cmpsl
sub
inc
scas
pop
cltd
addr16
inc
xor
push
pop
sbb
dec
xor
stc
or
inc
xchg
mov
jb
int
cmp
xchg
pop
jbe
inc
lcall
jnp
imul
sti
push
out
dec
out
and
mov
mov
push
mov
push
stos
pop
add
dec
int3
dec
fwait
mov
adc
stos
sbb
cmp
jmp
fadd
lods
jecxz
sub
xchg
xchg
rol
lock
xchg
fwait
ret
xor
sbb
stos
push
push
xchg
xor
sbb
les
xor
movsb
das
sbb
fs
sub
adc
js
lods
pop
es
sub
sarl
mov
dec
xchg
or
shrb
lahf
fidivrl
xor
inc
lock
xor
pushf
pop
sbb
lahf
je
jne
inc
call
pop
cwtl
cwtl
xor
xor
mov
aam
jae
jbe
push
mov
push
fs
fsubl
clc
stc
xchg
add
cltd
mov
and
xor
ret
aam
cmp
xchg
or
pop
lret
rcr
lahf
sbb
xchg
xor
les
or
inc
test
jae
mov
push
pushf
shlb
and
xchg
push
jbe
xchg
mov
xchg
sub
ds
pop
push
mov
addr16
pop
dec
add
push
js
and
xor
mov
mov
pop
stc
or
xchg
mov
mov
jb
scas
and
add
pop
das
adc
loop
xor
xchg
rol
mov
fcmovb
push
aaa
imul
aaa
lods
xchg
test
mov
sbb
ficoml
sub
mov
mov
sbb
sbb
or
aam
shlb
cld
xor
dec
push
sbb
push
or
pop
js
ja
repz
adc
bound
inc
pop
pushf
sub
movsb
les
nop
les
mov
sbb
mov
sarl
fcmovnb
xor
pop
jno
push
addl
dec
push
push
mov
pop
jnp
enter
push
pop
mov
cli
cmp
mov
lahf
push
outsl
jp
out
xor
mov
lret
lock
push
lods
adc
jmp
pop
cli
push
pop
ss
mov
lahf
sub
xor
jns
sbb
lret
clc
mov
push
xor
mov
repz
mov
adcl
or
repz
mov
rolb
and
popf
imul
cmpb
mov
out
jge
aas
jle
sub
call
inc
sbb
loope
ret
xor
imul
test
jge,pt
xor
imul
mov
jo
aad
imul
scas
inc
jns
out
sub
xor
cmp
mov
icebp
jno
mov
icebp
sub
loopne
ds
js
adc
cli
cmp
shrb
sti
fisttpl
sbb
lret
test
xlat
je
dec
lock
sarb
int3
mov
loope
cmp
sub
push
cmp
lcall
out
adc
inc
and
mov
das
in
ja
incb
push
or
xor
push
push
and
jmp
cmp
js
cmp
lahf
and
jle
aam
cmpsb
popf
ret
pop
or
cmp
sub
mov
xor
outsb
sub
fs
cmp
popf
or
or
aad
repnz
int
sub
push
orb
pop
shl
pop
js
or
gs
aad
xchg
shl
outsb
mov
mulb
xlat
ds
stc
dec
push
lods
pop
int
add
cmp
mov
add
xchg
into
inc
add
push
cmp
and
clc
push
or
mov
cmp
ss
stos
inc
stos
pop
iret
jbe
out
add
dec
jmp
mov
and
imul
lret
push
shll
int
mov
fisubs
int
lcall
stos
mov
lahf
data16
or
std
dec
or
pop
gs
test
pop
add
mov
lret
repz
rorb
daa
loop
fistps
popa
jae
cmpl
push
push
push
repz
jmp
sahf
push
mov
or
dec
stos
in
jne
andb
and
jno
movsl
push
leave
adc
sarb
jne
mov
xor
and
add
jnp
adc
cwtl
xor
ja
dec
mov
cmpl
dec
jnp
sub
iret
fs
mov
mov
rorl
or
push
sub
mov
and
mov
push
movsl
imul
pop
je
outsl
hlt
je
sub
stos
adc
mov
mov
fsub
gs
mov
in
jne
call
ficoml
pop
test
leave
xchg
and
loopne
xchg
dec
or
in
lret
popa
push
loopne
imul
adc
push
ret
int3
mov
cwtl
bound
and
adc
dec
sahf
cmp
cs
mov
loop
push
call
decl
sub
or
mov
data16
imul
inc
mov
pop
sbb
repz
iret
jb
lods
mov
subl
or
neg
add
sbb
loope
push
cmp
push
arpl
add
mov
test
iret
fists
ljmp
enter
jl,pn
add
hlt
xchg
mov
enter
subl
test
lock
pop
dec
mov
stc
ret
or
inc
pushf
mov
insl
jne
xchg
jge
jb
in
xor
sub
push
mov
xlat
push
jmp
or
inc
adc
mov
dec
push
inc
pop
cmc
xorb
inc
pop
addr16
sarl
scas
pop
jmp
movsl
scas
in
std
fs
mov
sub
push
mov
mov
ds
filds
inc
mov
inc
mov
movsl
mov
dec
je
leave
push
inc
push
aam
and
adc
lock
nop
jmp
mov
sbbb
xchg
cmp
bnd
and
rorb
cld
in
cmp
lds
stos
mov
out
jmp
add
bound
aas
mov
scas
cmpb
ja
lea
pop
cmc
mov
jno
or
dec
cltd
and
push
adc
stos
fsubr
push
imul
je
pop
ljmp
push
fadd
mov
xor
add
pop
imulb
je
mov
pop
mov
push
xor
and
mov
cmp
lea
mov
cmp
mov
aad
or
scas
sbb
call
sbb
ja
iret
stos
mov
xchg
add
sub
cld
or
xchg
push
xor
push
and
dec
cmp
pusha
push
outsl
xlat
nop
add
add
inc
push
inc
add
movsl
mov
cmp
jnp
pop
jecxz
imul
push
inc
les
sbb
mov
cmp
mov
fs
rcrb
mov
inc
dec
xchg
and
ret
sbb
mov
das
mov
add
adc
lcall
push
insl
xor
pop
clc
daa
mov
push
cli
mov
jns
xchg
and
mov
fstps
daa
repnz
xchg
jb
jo
test
dec
aam
int
jno
ja
adc
pop
add
repz
mov
dec
or
out
cmc
dec
jp
and
cltd
xor
pusha
xor
insl
mov
leave
sub
xchg
aad
dec
int3
pop
stc
add
push
inc
ret
sti
mov
fwait
xchg
jns
ja
jno
xor
mov
jecxz
fidivrs
xchg
push
add
cmpsb
imul
add
mov
push
aas
pusha
and
dec
push
stos
jmp
xchg
imul
out
lcall
inc
scas
aad
add
dec
xchg
test
xlat
out
gs
or
pop
les
fisubrl
scas
mov
push
das
sub
adcl
mov
ret
std
imul
out
cli
scas
out
out
loope
sbb
and
adc
ljmp
les
mov
xchg
cmp
adc
rol
xor
les
mov
cmp
fbstp
cmpsl
sbb
mov
out
leave
and
aaa
cld
test
icebp
es
or
push
in
scas
mov
sub
sub
xchg
gs
mov
stos
mov
arpl
add
jl
jg
jne
adc
push
mov
dec
adc
enter
xchg
jb
push
pop
or
imul
popa
sbb
imul
daa
ljmp
push
mov
mov
stos
jae
aas
sahf
aad
push
cwtl
mov
or
lods
test
xor
xor
lcall
shll
dec
fnstsw
pop
repz
mov
sahf
push
jae
pop
movsb
cs
push
xor
fsubrp
in
cltd
out
jecxz
pop
cmp
pop
int3
and
in
pop
or
pop
jno
xchg
ret
pop
fsubrs
ret
jp
mov
out
inc
jnp
and
xchg
popl
sbb
lret
dec
dec
loop
into
and
es
xor
lock
mov
nop
or
fimull
mov
xchg
pop
mov
imul
cld
fsubrp
ret
sbb
outsl
jmp
mov
jbe
jg
mov
pop
dec
cld
xchg
mov
incl
aad
mov
mov
cltd
pop
lods
jbe
inc
mov
add
aas
cmpsl
pop
repz
jbe
movsl
aam
fcom
sub
inc
pusha
push
cmpsb
in
aaa
sub
lock
push
pop
adc
push
xchg
ds
xchg
js
popf
mov
cli
or
ja
add
ss
test
sti
imul
movaps
sub
repnz
adc
cwtl
int3
and
and
les
mov
inc
xchg
push
or
dec
stc
or
cmc
out
push
jno
je
and
add
aaa
addr16
packssdw
xor
fs
jns
ljmp
push
lds
jns
shrb
xchg
add
adcl
jne
int3
xor
hlt
out
aam
mov
sub
mov
stos
add
jbe
push
sbb
repnz
cwtl
ja
push
push
adc
push
pop
jg
loop
jae
add
xchg
iret
push
js
xchg
or
sbb
hlt
cltd
cltd
or
ja
testb
xlat
jmp
fadds
jg
sarb
pop
mov
adc
mov
inc
jecxz
jecxz
movsb
test
in
jge
shll
xor
push
sarb
lret
mov
jp
repz
stos
bound
js
outsl
lret
sub
sti
mov
or
leave
std
iret
cmp
cmc
jg
mov
pop
or
inc
test
xchg
or
roll
loop
stc
adc
dec
cld
gs
push
in
add
repz
push
mov
push
mov
push
std
inc
lods
out
pop
int
sub
adcl
push
push
push
pop
add
mov
cmp
adc
cmp
mov
push
xor
jbe
mov
aad
jge
dec
ja
pop
pop
mov
or
cmp
nop
fwait
mov
test
and
xchg
mov
cmp
gs
testl
movsb
jb
lahf
ret
pusha
jecxz
imul
xchg
lcall
or
pop
in
in
pop
cltd
lahf
mov
negb
or
xlat
sub
push
imul
out
xorb
cmc
movb
cmp
ja
or
and
pop
outsl
aas
add
sub
dec
insb
ja
dec
stos
xchg
aaa
das
stos
jmp
xchg
jl
and
pop
xchg
ss
jmp
inc
insb
std
sarb
out
and
cli
push
imul
push
inc
mov
cwtl
jno
jp
inc
pop
jnp
push
into
ja
cwtl
jmp
ds
mov
inc
push
jb
sbb
mov
inc
cmc
lret
pop
aam
mov
mov
mov
sbb
xorb
divb
pop
call
jo
mov
ret
popa
xor
lds
dec
mov
repnz
nop
scas
mov
std
fiadds
sbb
test
sbb
data16
aad
int3
jl
push
ja
xchg
loope
pop
jns
pop
jbe
div
mov
xlat
push
outsb
int3
dec
sahf
dec
sub
adc
arpl
dec
fsubrs
cmpsl
les
call
xor
dec
ret
jae
gs
xchg
jbe
cltd
push
mov
pop
stc
or
pop
jecxz
push
dec
cld
or
jmp
or
scas
imul
jno
in
add
lret
cmp
add
push
movsb
jbe
arpl
push
sub
sahf
pop
mov
enter
and
add
int
inc
gs
and
test
pop
or
dec
xchg
mov
mov
fldcw
imul
push
mov
ds
sub
push
enter
mov
xchg
sbb
addr16
pop
or
cmp
inc
pop
push
cwtl
fisubrs
shrb
or
loop
pop
lret
xorl
or
adc
push
aaa
add
imul
pop
mov
iret
ja
adc
cmp
je
insl
and
inc
stos
scas
and
add
mov
outsl
mov
psubsb
fstps
push
xchg
ret
jmp
ljmp
ja
mov
out
std
lcall
sahf
xor
daa
les
movsb
adc
or
pop
xchg
negl
test
push
jnp
hlt
xchg
xchg
mov
in
mov
movsb
and
jo
push
lcall
ret
or
gs
xor
in
mov
imul
and
in
inc
or
adcb
arpl
subb
setg
insb
xchg
or
or
das
cwtl
es
sbbb
cmpsl
imul
frstor
std
out
push
stc
imul
pushf
xor
add
enter
insl
fndisi(8087
add
jge
xor
and
aaa
movsb
xchg
jns
jp
roll
ds
adc
shlb
repnz
popa
push
push
mov
and
inc
jne
adc
mov
push
adc
popf
jg
dec
aas
andl
data16
aaa
in
pop
or
xchg
arpl
sbb
cmp
popa
loopne
arpl
jb
lods
dec
icebp
hlt
mov
rorl
and
mov
je
ret
in
shll
aaa
test
call
insl
mov
sarl
cmp
adc
dec
sub
push
mov
mov
daa
adc
jnp
jno
sub
popa
lea
insl
repz
sub
add
cmpsb
cmp
inc
lcall
in
mov
push
adc
push
sti
mov
fadds
test
jmp
sub
insl
sti
addr16
dec
shl
aaa
mov
lds
outsb
jle
pusha
jne
pop
push
inc
lcall
ficomps
rorb
push
nop
sub
gs
or
dec
xchg
sbb
fisttpl
inc
push
lcall
sbb
jne
in
movsl
lahf
mov
mov
loope
ja
lods
or
xlat
stc
dec
movsb
mov
sub
xor
push
lds
or
idivl
push
xor
out
and
sbb
sbb
arpl
sbb
shll
push
lock
jae
enter
jnp
adc
jne
push
sbbb
pop
stos
mov
dec
and
xchg
xor
inc
mov
bound
fstpl
popa
add
mov
es
repz
or
xorl
ds
int3
pop
and
add
jae
rolb
cmp
insl
popf
js
lret
push
ret
lods
push
or
fstps
jge
mov
or
xchg
xchg
scas
unpcklps
decb
fcmovbe
fucomp
clc
pop
test
ret
lret
repz
imul
mov
and
dec
pop
sbb
mov
jnp
inc
mov
loopne
ret
inc
push
jp
xchg
es
dec
mov
sbb
mov
pop
mov
pop
jge
and
or
in
ss
popa
testb
cmp
inc
popf
mov
inc
subl
pop
jmp
sti
jecxz
sub
dec
mov
sub
or
push
inc
push
stos
movq
xchg
ret
rcr
sar
andps
lcall
sbb
pop
cwtl
mov
sbb
sti
popf
mov
cli
sub
push
or
and
mov
inc
je
das
test
icebp
test
xor
sub
cmpsb
and
pop
xor
mov
pop
lea
dec
ds
sub
cmp
dec
adc
scas
addb
and
pop
lock
dec
push
in
rcll
ror
scas
or
xchg
xchg
or
add
test
into
inc
dec
iret
xchg
inc
icebp
or
mov
adc
insb
cld
xchg
loope
pop
lret
lret
push
addr16
xchg
push
stos
add
cmpsb
and
bound
in
adc
mov
lret
popa
test
cmp
mov
shr
sub
fdivp
pop
dec
push
rol
aas
fs
lods
hlt
ss
daa
das
pop
push
jle
xor
mulb
jg
push
jg
pop
pmullw
cli
leave
js
shrl
mov
fwait
ss
shr
lods
mov
roll
push
or
nop
lahf
imul
fldenv
imul
sbb
cwtl
into
pop
sbb
stos
push
adc
inc
mov
stos
mov
push
lret
cmpsl
sarb
scas
jno
or
xchg
daa
jo
mov
js
xchg
sbb
enter
lea
xor
xor
xor
dec
in
push
mov
mov
je
sub
xor
or
data16
xchg
mov
mov
in
mov
repnz
mov
xchg
jbe
ja
mov
sub
test
cmp
jnp
adc
and
stc
inc
jb
pop
sub
inc
jb
rorb
xlat
jo
or
cmp
shll
ret
xchg
dec
mov
adc
or
mov
data16
insl
mov
cltd
adc
inc
aaa
bound
mov
jns
inc
roll
cmp
iret
xchg
stc
cld
fbld
jnp
add
pop
pop
inc
inc
movsl
ficompl
std
mov
fcomip
pop
fcompl
hlt
test
push
sbb
dec
aam
mov
dec
ret
ret
xor
pop
mov
sbb
push
sbb
ljmp
or
pusha
pop
jg
cmpl
inc
or
loop,pt
insl
and
sbb
int
mov
sbb
mov
inc
fidivs
mov
sub
sbb
mov
ret
aas
sub
mov
mov
sahf
pushf
push
lcall
dec
mov
test
enter
stos
movsb
or
inc
sbb
mov
mov
mov
mov
and
and
std
popf
xor
mov
sbb
cmc
sub
loop
sbb
add
stc
lea
cmp
or
add
mov
ss
cmpsl
leave
xor
jnp
mov
insl
inc
dec
movsl
and
cld
je
cmpsl
cs
scas
and
jne
push
daa
andb
push
pop
sub
insb
push
push
dec
lret
nop
xor
bound
pop
ljmp
lcall
cmp
xchg
lods
sbb
scas
rclb
daa
sub
leave
fstcw
clc
repnz
sbb
and
xor
loop
daa
gs
push
mov
clc
lock
adc
dec
test
hlt
sub
sahf
sub
mov
pop
adc
lret
andb
inc
test
cmpsb
popf
hlt
das
adc
mov
push
sarl
mov
mov
jl
and
pop
inc
js
xchg
out
fcmovnu
in
and
or
lcall
mov
jecxz
mov
jo
outsb
xor
or
movsl
nop
mov
test
out
stos
jae
ljmp
rcrl
into
adc
pop
cld
dec
lds
bound
rorb
sbb
sti
std
mov
jbe
sti
lea
cs
xchg
jb
push
mov
sub
jns
pop
and
jl
add
jo
lods
jo
fidivrl
repz
in
loopne
rcr
les
pop
add
inc
int3
inc
or
incl
cmpsb
xchg
mov
test
cmpsl
lret
xor
int3
or
xchg
aaa
adc
mov
adc
mov
stos
cmpl
cmp
into
sub
push
dec
cmpsb
mov
add
movsl
jo
ja
lret
ss
inc
jae
in
xlat
jae
adc
jns
cmp
ljmp
push
sub
xchg
mov
orb
and
aas
dec
lea
mov
pop
mov
adc
lahf
cli
popf
adc
xlat
inc
push
xor
xchg
mov
mov
mov
iret
push
jne
and
jns
in
xchg
cmpsb
cmpsb
mov
jno
jae
fidivs
loopne
fistpll
aas
fdivr
aaa
stc
aas
pop
jmp
push
cwtl
adc
dec
mov
cmpsb
fdivr
cmp
jg
nop
daa
rcrl
lds
xchg
loope
add
ds
or
sbb
mov
mov
sbbl
jecxz
adc
xor
out
outsb
cmp
outsb
aas
jmp
cmp
popa
add
push
cmp
lcall
inc
add
in
add
xlat
pop
insb
push
inc
ja
xor
mov
and
sub
sub
ror
cmp
int3
jne
adc
xchg
pop
data16
loopne
push
iret
add
out
push
mov
or
or
test
and
mov
pop
fninit
inc
sub
pop
pop
lcall
sub
or
movsl
sbb
add
shl
xchg
stc
inc
add
std
pop
jb
fmul
sub
test
dec
mov
inc
cmc
xor
inc
xchg
popf
pop
xor
xchg
out
or
mov
sahf
stos
out
cli
add
das
jg,pn
mov
push
pop
or
fdivrs
stc
push
iret
mov
xchg
mov
cltd
pop
fmuls
lahf
cmp
clc
push
rorb
js
ja
mov
leave
mov
jae
enter
mov
shl
dec
repnz
vpunpcklwd
push
rorl
pop
dec
movsb
or
mov
mov
pop
dec
jmp
pop
inc
lahf
or
frstor
data16
movsb
xchg
jle
daa
xchg
rorl
or
push
xor
xchg
pop
pop
lods
adc
mov
out
push
mov
sub
das
and
imul
cmp
push
test
fildll
insl
mov
lcall
jl
mov
es
jb
mov
fcompp
xor
enter
or
jb
leave
js
push
mov
jns
push
xchg
loop
pop
sub
icebp
xchg
insl
dec
jmp
leave
cs
lods
in
in
mov
adcl
or
movsl
out
stos
xchg
ret
nop
loopne
adc
lret
cmpsb
fidivs
pop
fnsave
cmp
and
lea
cmpsl
iret
adc
lds
cmp
fcompl
and
scas
push
sbb
jbe
push
cltd
dec
arpl
popf
aam
xchg
mov
popa
and
sarb
loopne
mov
icebp
hlt
imul
xor
mov
cmp
dec
rolb
ss
adc
testb
pop
and
inc
xchg
test
mov
pop
adc
push
scas
daa
mov
mov
daa
xchg
fimull
out
stc
scas
lcall
insb
hlt
pop
or
insb
sti
mov
scas
hlt
arpl
push
test
pop
adc
cs
xchg
lcall
std
or
andb
fs
insl
icebp
jo
icebp
jbe
aam
aad
in
sub
jb
cs
add
pop
push
sbb
cmp
xchg
ss
lahf
mov
stos
add
cmovns
js
pop
lds
seta
pushf
jae
adc
or
das
jmp
xor
test
rcll
lock
push
ja
mov
and
dec
inc
clc
lods
jmp
test
scas
fcoml
fdivrs
aas
mov
rolb
jb
mov
inc
rolb
out
int
mov
dec
cs
mov
outsl
out
mov
cmp
inc
aas
out
das
lcall
mov
mov
ffreep
and
xchg
leave
pop
mov
les
leave
pop
push
xor
sbb
in
movl
jl
stc
add
int3
xorl
adc
test
jl
in
lahf
cltd
and
xchg
out
scas
adc
gs
pop
xchg
mov
and
xlat
xchg
les
mov
xor
dec
aaa
imul
insl
dec
cmp
lcall
pop
popa
in
dec
lds
jmp
cld
cmc
mov
pop
xchg
mov
mov
sbb
aaa
addr16
push
imul
sti
dec
or
mov
dec
push
adc
dec
mov
lods
das
subl
imul
jo
jge
push
or
js
test
fcomp
stos
in
pop
enter
cmp
repnz
inc
nopl
cmpb
dec
int
mov
and
cmp
push
into
push
es
fimull
pop
scas
out
and
mov
and
mov
bound
add
stc
adc
aaa
sub
dec
mov
mov
cli
mov
cmc
repz
fmull
sub
cmpsl
call
pop
and
insb
pop
out
push
push
push
mov
insb
mov
mull
mov
and
dec
jecxz
lcall
lea
testl
bswap
fistpll
mov
jg
add
mov
int3
dec
test
or
xor
ss
loope
push
sub
clc
out
adc
jb
fsubp
mov
push
aas
rcrl
jmp
test
js
fnstenv
pop
aas
popa
lcall
adc
lods
pop
push
sbb
lret
xor
sub
mov
push
movsl
or
mov
xor
mov
mov
push
lcall
mov
sub
push
arpl
dec
jmp
inc
xlat
jmp
sub
cmp
shl
inc
jmp
pop
and
dec
jg
mov
push
cmp
and
sbbl
adc
jb
or
in
or
jae
xchg
ljmp
call
fs
xor
adc
cli
adc
scas
jb
add
into
shl
cmp
push
ret
mov
call
loope
mov
add
leave
mov
mov
mov
ret
push
stc
test
cld
out
mov
push
adc
and
mov
repnz
sbb
xchg
mov
lds
sarb
insl
jb
pop
mov
xor
adc
and
out
sbb
fstl
xchg
into
xchg
subb
aam
rep
popa
addr16
ss
sahf
xor
in
mov
push
add
mov
leave
jg
jp
mov
aad
mov
out
roll
or
inc
adc
cmp
shll
iret
shlb
fld
test
loope
in
mov
sub
outsl
fwait
or
dec
xlat
jae
rcr
add
xchg
ds
scas
inc
xchg
lds
inc
cmp
fcoms
xor
jp
inc
ret
sbb
shrb
inc
addl
sbb
sbb
xchg
insl
outsb
cmpsb
dec
xchg
cmp
cmpsl
sbb
cmp
popf
push
push
xchg
movsl
out
mov
sahf
xlat
inc
inc
ret
in
testb
enter
push
mov
or
stc
dec
sub
or
and
sub
jnp
xor
sbb
rol
inc
sub
and
push
inc
sbb
scas
pop
lock
push
lahf
lods
mov
dec
mov
loopne
pusha
clc
push
mov
dec
xor
mov
push
fiaddl
add
in
pop
loope
movsb
jae
cmp
cltd
fldenv
insl
and
pop
pop
cli
movsl
fnstenv
jnp
sbb
hlt
adc
cmp
xlat
mov
lahf
dec
or
mov
adc
adc
pusha
leave
cmp
xor
aas
mov
push
mov
push
mov
xchg
sub
repz
cwtl
loop
fidivs
insb
inc
out
push
xchg
enter
dec
inc
popf
imul
and
outsb
push
sub
fsubs
cmp
stc
xchg
lds
addr16
mov
je
aam
cmpsl
arpl
inc
push
cmp
inc
lret
iret
lahf
jge
mov
hlt
imul
jp
cltd
add
imul
pop
jne
or
or
aad
js
std
not
mov
and
xchg
es
out
add
jecxz
mov
test
xchg
push
or
sub
mov
iret
mov
jbe
imul
mov
test
stos
mov
mov
xor
mov
xchg
mov
mov
test
aam
lock
fwait
aaa
push
mov
fldln2
and
aad
and
scas
ss
jmp
jmp
add
jae
xchg
add
push
push
xor
xchg
stc
arpl
mov
xor
jecxz
popa
clc
jno
xor
jmp
mov
lcall
sbb
loope
enter
mov
xchg
stos
data16
pop
nop
add
xchg
add
jle
sub
fidivs
pop
push
push
loope
fwait
insb
int3
adc
inc
lahf
pusha
and
sub
xchg
mov
in
outsl
cmpsl
stos
cmp
nop
dec
push
sub
imul
xchg
rcrb
push
adc
loopne
rorb
xor
jb
arpl
stos
pop
sbb
inc
mov
jmp
jmp
cmp
and
dec
sbb
ret
push
int
mov
push
mov
in
jmp
sbb
mov
mov
scas
mov
cmpsb
inc
maxps
mov
popf
mov
pop
ficoms
push
imul
and
adc
repnz
sbb
pushf
cltd
xchg
insb
dec
jo
int3
ds
data16
in
adcl
stos
cmpsl
sbb
adc
jbe
movsl
mov
xchg
mov
push
jle
push
sub
and
js
fwait
or
mov
test
mov
mov
sub
adc
mov
inc
shl
adc
inc
mov
repnz
jns
xchg
push
xchg
ret
xchg
mov
es
adc
cmpsl
pop
int
add
icebp
inc
push
loopne
ss
leave
adc
xchg
dec
sbb
cmovb
fdivrl
jo
dec
pop
stos
xchg
inc
mov
lret
or
cmpsl
inc
in
jp
mov
or
fcmovu
pop
pushf
pop
sub
sti
cltd
push
jae
inc
inc
dec
mov
sbb
add
out
and
pop
xor
xor
jmp
repnz
rcrb
fidivl
adc
jae
add
push
sarb
push
jg
fcmovnu
lds
int
cmp
fs
mov
push
mov
xor
ror
xor
out
xchg
pop
sbb
out
sbb
pushf
xor
dec
inc
repnz
inc
lea
sub
arpl
mov
or
je
jns
fldcw
jle
mov
sbb
fistl
mov
cmp
inc
in
lahf
leave
mov
fs
fcoms
or
dec
jmp
lahf
fsubl
lock
mov
xchg
pop
jb
mov
gs
xlat
icebp
not
adc
cmp
mov
inc
aam
loopne
and
cld
mov
cmp
mov
std
test
scas
cmc
leave
ret
and
ja
lahf
js
lcall
xchg
cmpsb
shl
je
xchg
cmp
xchg
outsb
outsb
data16
cli
stos
fs
aam
jb
jmp
das
movsl
pop
cld
cltd
jae
cmp
arpl
sbb
add
xchg
add
jb
inc
push
push
jb
jg
cmc
jo
xor
cs
mov
repnz
jge
fld1
shlb
fidivl
add
mov
xor
mov
dec
mov
xchg
xchg
mov
mov
les
push
sub
adc
add
movsl
push
dec
stos
mov
aam
cltd
inc
mov
or
aas
xor
adc
push
dec
push
fsin
and
imul
arpl
xor
divl
sti
leave
and
bt
sbb
cld
cmpsl
push
cmc
out
fcoms
jle
mov
push
aas
cmp
ret
sub
jp
movsl
pop
add
scas
fbld
test
sub
rdmsr
ret
repz
add
push
movsb
inc
test
jne
lret
cmp
into
dec
aas
test
sub
pop
fnstcw
mov
in
jae
cli
sarl
and
popa
pushf
sbb
andl
lcall
pop
push
imul
pop
nop
jmp
imul
sbb
sub
or
sti
mov
mov
dec
adc
xchg
mov
fs
xchg
fisttps
push
sbb
lcall
inc
dec
pop
inc
popf
xlat
adc
gs
sbb
jl
out
add
jp
xor
cmp
fsts
mov
mov
imul
and
les
or
into
std
std
lock
jb
jb
jae
or
out
inc
xchg
cmc
add
push
mov
call
lret
inc
imulb
test
ret
rorl
mov
mov
xor
jp
add
outsb
mov
sarb
rcrb
adc
push
pop
outsl
ljmp
pop
jo
pop
sbb
or
xlat
arpl
add
cmc
sbb
jmp
pop
nop
cmp
mov
pop
push
dec
jns
mov
btr
loop
cmpsl
mov
repz
cltd
push
mov
pop
ficoms
ss
mov
jle
cmp
and
xor
cmp
fistpll
xchg
jbe
lods
daa
xchg
sub
out
dec
and
mov
dec
or
lahf
out
push
pop
out
fwait
xor
sub
je
ja
pop
jb
stc
xchg
sbb
pop
and
or
sub
outsl
lahf
pop
pop
add
int3
pusha
jnp
int3
xchg
jmp
repz
loop
ret
and
lods
ret
or
int3
mov
ret
daa
je
add
aad
fsts
andl
roll
or
push
test
cwtl
adc
mov
mov
add
out
ljmp
fstps
ds
popa
in
mov
mov
jmp
xchg
xchg
cmp
fwait
mov
and
stos
out
gs
jmp
decl
fists
mov
pop
cwtl
ds
dec
rcrl
cmp
arpl
lcall
shlb
mov
rclb
shrl
fisttps
pop
sub
adc
mov
ret
in
or
pop
mov
add
out
sub
pop
inc
sub
xor
outsl
xchg
pop
jnp
mov
cwtl
pop
movb
push
js
sub
lret
and
rcl
jmp
add
shrl
cmpsb
loopne
push
sbb
push
neg
jae
lret
cmp
mov
lahf
in
dec
std
or
mov
cmp
sub
out
les
jb
sbb
mov
cmc
add
cmp
sub
lahf
fnstcw
add
imul
test
jnp
cs
je
push
mov
adc
std
dec
mov
std
cli
xchg
adc
adcl
and
mov
pop
loopne
xchg
fnstenv
scas
das
mov
bound
sysexit
fs
dec
fdivl
adc
mov
jge
push
sbb
popa
lahf
fstpt
fptan
das
mov
loopne
dec
mov
mov
xlat
insl
jg
jge
lock
ret
sahf
shll
inc
outsb
pop
in
mov
jmpw
cwtl
xchg
int
scas
pusha
xchg
cmpb
ds
cld
pop
xchg
xlat
fcom
or
and
push
dec
cmp
ljmp
xlat
in
shlb
js
mov
dec
mov
cwtl
jno
jp
xor
pop
and
fbld
xlat
sbb
dec
sbb
pop
pusha
and
mov
xchg
push
orb
xor
mov
lods
cmp
pop
inc
cmp
jle
add
sbb
in
dec
inc
int
andb
mov
lods
cmp
sub
and
jns
push
push
scas
ret
adc
addr16
mov
push
and
aam
fildl
dec
decl
mov
fstl
daa
enter
push
cwtl
cmp
and
push
push
inc
mov
mov
stos
xor
imul
push
movsl
outsl
test
aam
je
jae
push
inc
mov
add
and
pop
adc
push
cmovne
mov
and
or
dec
mov
call
add
mov
test
pusha
lods
sbb
stos
push
cmp
sub
out
repz
repz
ljmp
pop
dec
cmc
pop
mov
cmpl
add
inc
mov
lods
push
inc
push
jns
mov
es
shlb
adc
xchg
je
repz
xchg
push
jp
fcoms
fucomi
dec
addr16
cld
fcmovne
addl
xchg
adc
jo
jne
movsl
fadd
dec
lock
jns
repz
addr16
pop
mov
addl
int
mov
cmpsl
loopne
mov
ss
adc
imulb
and
cmc
inc
cwtl
pop
cmp
lcall
int
mov
sub
jns
inc
ljmp
xor
pushf
add
sar
adc
sub
enter
jle
rcll
and
mov
fwait
sbb
mov
sbb
mov
push
push
inc
adc
xor
jbe
jmp
xchg
mov
push
cs
xchg
fs
out
fldt
jl
cmp
call
outsb
sahf
push
or
sbb
pop
mov
test
mov
lahf
jae
repnz
jne
pusha
in
push
icebp
mov
int3
add
or
jecxz
subb
inc
std
les
lret
sahf
push
dec
or
push
sub
inc
jno
les
and
jg
xchg
js
mov
scas
popf
movsl
add
cmp
push
inc
gs
stos
popf
push
fsub
movsb
push
mov
mov
xor
xor
adc
js
push
sbb
adc
jp
bsf
or
loopne
out
jg
xchg
cmp
xor
sti
add
xchg
mov
dec
test
aas
xchg
push
xor
xchg
in
mov
mov
jl
in
mov
in
jmp
mov
sbb
or
ss
mov
sbbl
sub
xchg
mov
pop
ds
mov
enter
fcomi
mov
push
or
inc
or
xchg
sbb
int3
push
and
loop
fisttpll
leave
mov
aaa
add
mov
int3
imul
add
xor
imul
jp
xchg
test
js
mov
out
and
xchg
xchg
mov
cmp
push
subl
rcrb
out
stos
pop
pop
fcomps
ljmp
jl
ficomps
test
arpl
test
push
scas
cwtl
jmp
loope
inc
xchg
push
adc
cmpsb
xor
jne
and
push
xor
pop
mov
sahf
jle
xchg
lret
push
cli
jae
lods
jns
test
insb
data16
add
push
sbb
fwait
dec
dec
pop
aad
std
sub
inc
adcb
rol
es
enter
sbb
inc
nop
add
iret
pop
nop
adc
pop
stos
subb
sub
test
mov
je
sub
inc
bound
scas
in
xchg
fistpll
xchg
mov
shrl
mov
in
enter
inc
cmpsb
fsubrs
adc
nop
dec
xchg
insb
mov
lret
push
and
mov
std
mov
push
test
lea
data16
sbb
call
in
xchg
xor
je
filds
shl
repz
js
jmp
cmp
lds
pop
jns
mov
lea
scas
insl
jg
xchg
fcmove
cmp
jle
cmpsb
and
sub
mov
mov
push
lea
jbe
jns
adc
push
lret
mov
data16
sub
sahf
xchg
stc
xchg
insb
sub
pop
repnz
mov
and
push
lret
outsb
sarl
sahf
cmova
stos
add
and
movsl
and
pop
stos
fbstp
cli
fstp
adc
jmp
and
add
inc
cmp
pushf
addl
mov
adc
push
pushf
cmp
orl
movsb
xor
xor
mulb
ds
cmp
cmp
sub
pop
push
push
shl
lods
cmp
ljmp
rorl
sbb
jg
in
cld
mov
mov
es
push
das
popf
pop
data16
shrb
fisubrs
pop
sahf
inc
nop
js
lcall
cmc
das
cmp
cwtl
call
mov
lods
imul
outsl
imul
mov
xor
xor
push
or
pop
cltd
pop
xchg
cmp
ljmp
fdivrp
sahf
insl
and
sbb
mov
adc
or
jbe
cmc
sub
or
jb
rcl
repnz
jecxz
or
dec
push
mov
jmp
test
xor
push
sbb
adc
xchg
je
int
int3
cltd
xor
sub
pop
cmc
fbld
push
cmp
out
subl
jno
xchg
fisttpl
cmp
push
imul
icebp
lea
pusha
dec
test
lea
addl
fisttpl
gs
cmp
inc
sub
aad
mov
fnstcw
or
add
xchg
push
mov
aad
push
adc
imul
sbb
xchg
cld
sub
inc
stos
lods
dec
xor
loopne
pop
adc
sub
jmp
or
sbb
add
dec
out
pop
stos
leave
cwtl
and
pop
inc
push
repz
cmp
dec
adc
push
call
aaa
push
cmpsb
fcoms
push
popa
cmp
mov
push
push
pusha
mov
in
movsb
or
daa
sub
sub
mov
xchg
jle
jo
pop
lods
fstl
pop
and
cmp
xor
cmc
inc
inc
ret
adc
nop
out
divl
push
ja
lahf
sub
fadds
add
cmpsl
lods
shlb
xchg
mov
repnz
int3
push
and
test
pop
dec
in
mov
pop
je
out
test
shrl
nop
inc
push
pop
inc
push
hlt
lods
xor
fcompl
leave
jecxz
dec
aad
sub
adc
repz
mov
ja
arpl
bound
stc
jnp
pop
mov
ljmp
and
test
nop
pop
mov
out
sub
sub
test
xor
xchg
dec
mov
pop
fs
xorb
adc
push
icebp
adc
inc
enter
std
outsl
rorl
in
call
mov
mov
roll
fistpl
rolb
cmpsb
fnstsw
hlt
jno
jl
mov
insb
test
xlat
dec
jg
and
and
sub
inc
das
repz
aad
sbb
sub
fnstsw
int
shrb
jne
fbstp
clc
or
lds
in
sbb
jno
inc
inc
mov
add
sub
dec
popf
sub
daa
aaa
sarl
push
je
mov
or
int3
leave
insb
lods
in
mov
mov
adc
mov
pop
outsb
push
jg
dec
cli
fs
fbstp
rol
lock
pop
movsb
push
test
push
xor
inc
lcall
out
jl
sub
lcall
jno
dec
push
cwtl
inc
daa
lret
aad
insl
sti
inc
mov
xlat
push
popa
xchg
or
mov
iret
cmp
push
lahf
stc
mov
bound
and
lea
fcomps
mov
cmpsb
or
mov
mov
jo
inc
jp
and
clc
xor
lret
stos
fbstp
sub
push
xchg
fisttps
aad
and
pop
xor
pop
lods
fistl
mov
push
or
mov
cmp
div
fcoms
sub
fnstsw
pushf
movl
int
dec
rorl
clc
push
icebp
mov
scas
adc
fidivs
mov
ror
stos
ds
jae
sbb
lret
hlt
rorl
clc
and
inc
mov
enter
sub
xchg
inc
inc
lods
jns
insb
add
pop
stos
les
or
sub
pop
xchg
sbb
movsb
je
mov
dec
xchg
int
imull
int3
clc
mov
in
ss
sub
sub
orl
ficomps
sahf
mov
xchg
dec
sbb
arpl
incb
dec
repnz
aad
push
dec
dec
cmpsb
jne
out
movsl
and
mov
push
cmp
cmp
mov
lcall
mov
pop
sub
mov
scas
push
push
sub
sti
push
clc
movsb
clc
fstl
jae
cltd
xchg
mov
mov
push
or
jl
enter
fldenv
mov
incb
lock
fs
mov
out
sub
pop
cmp
cmp
pop
test
int
push
ss
xchg
dec
inc
adc
jg
inc
ljmp
icebp
in
dec
into
push
mov
and
shll
aas
jbe
call
or
mov
cmp
jmp
out
repnz
js
fsub
faddl
or
aam
sbb
jne
int3
dec
outsl
cmp
fstps
cmpsl
test
cmp
push
xorb
mov
outsl
cmpsb
inc
push
outsl
jmp
leave
pop
jbe
or
and
lret
test
inc
pop
in
inc
mov
lods
outsb
jne
js
bound
mov
add
enter
stos
pop
pop
pop
popa
and
mov
loop
addr16
or
into
std
dec
int3
mov
xchg
rcr
xchg
pop
out
mov
cmp
insl
faddl
dec
jl
adc
jno
and
mov
subb
mov
rcr
shlb
xor
add
add
mov
jo
sbb
loopne
in
cmpsl
add
fsubs
mov
incb
loope
inc
out
xchg
mov
in
dec
das
daa
pop
inc
lock
dec
push
jge
sti
mov
movsb
nop
das
ret
mov
insl
stc
jo
ss
mov
aaa
cwtl
sbb
insl
mov
paddsb
flds
adc
push
xchg
xchg
jle
cli
repz
cmp
lret
mov
call
aad
jmp
mov
adc
mov
mov
jl
iret
subl
test
test
clc
movsl
test
adc
add
mov
shll
dec
fcoml
jne
xor
mov
stc
sub
jg
adc
icebp
cld
and
sbb
call
jg
flds
mov
push
fdivl
aaa
fiadds
stos
outsl
mov
mov
jp
jmp
mov
je
mov
int
movl
mov
movsb
jnp
adc
inc
lods
cmp
out
push
in
mov
mov
pop
sbb
jl
stos
test
fstps
fidivl
test
add
mov
movq
mov
jnp
bound
ss
adc
aas
mov
das
movsl
mov
mov
lds
pop
stos
mov
mov
adc
ret
push
push
rcpps
aaa
test
sbb
test
pop
inc
add
stos
mov
xor
mov
xchg
jp
and
fs
adc
lcall
jl
sub
rcr
inc
icebp
inc
mov
add
rorb
dec
xchg
xchg
imul
fstpt
int
shll
fistps
insb
aad
mov
or
dec
test
xor
xchg
jno
mov
add
push
jg
mov
pop
stc
mov
mov
jb
gs
sub
push
int
lret
adcb
jg
jp
ds
popf
jecxz
cmp
dec
adc
mov
daa
dec
inc
mov
jo
mov
pop
imul
add
movsb
cmpsb
jbe
int
add
stc
cmpsb
ss
sbbl
lret
call
jle
cmp
addr16
out
test
pop
cmp
or
and
and
push
mov
ja
xchg
cli
or
xchg
dec
lcall
ljmp
nop
idivb
aaa
insb
jmp
lods
mov
in
adc
repnz
mov
and
fisubl
sub
push
push
sub
aam
les
xchg
pop
pmaddwd
fsubrs
mov
cmpsl
xor
fsubrl
stos
rorb
repnz
pusha
mov
jmp
push
xchg
and
iret
imul
dec
push
push
js
loopne
loopne
or
ss
xchg
daa
mov
rolb
testl
pop
mov
addl
test
jnp
aaa
je
ja
pop
cmc
xor
dec
cmp
mov
or
test
ljmp
sub
and
jnp
jo
push
adc
shrl
fwait
in
sbb
pop
inc
mov
mov
loopne
mov
in
sub
fistpl
dec
push
loopne
mov
bound
lea
xor
inc
rcr
pop
cmp
mov
or
sbb
clc
push
pop
or
xchg
sbb
lock
push
mov
xor
add
mov
call
mov
push
mov
cmp
fidivrl
cs
push
js
fstps
ret
and
aam
and
rcl
in
xchg
outsb
call
out
shlb
jmp
cmc
and
adc
cld
jb
popa
int
lahf
leave
xor
mov
aaa
out
xchg
jne
lds
std
mov
cmp
data16
in
sbb
pusha
adc
jne
movsl
inc
mov
add
cmp
in
cmp
push
stc
cmp
cmpsb
je
je
pop
add
inc
subb
iret
mov
loop
aam
jl
mov
xor
inc
xlat
pop
mov
push
nop
pop
jecxz
test
inc
sbb
push
xor
fiadds
inc
lcall
jle
xor
xor
enter
outsb
xchg
ss
mov
out
sub
imul
mov
test
mov
lods
and
pop
lea
dec
sub
scas
orb
mov
push
jo
int
xor
jne
fmull
inc
push
sbb
insl
jle
imul
rorl
out
dec
std
paddd
ljmp
sub
cmp
cmp
mov
xlat
pop
nop
out
cmp
add
lret
and
jecxz
cmp
dec
inc
stos
xchg
fdivrl
popf
inc
jl
sbb
shlb
cmpl
mov
push
lods
adc
cmpsb
pop
bound
push
mov
ret
sub
jns
and
loope
movsb
jge
xor
mov
jge
mov
jnp
mov
xchg
inc
pop
jge
push
js
daa
and
fists
and
gs
push
mov
pop
jmp
loop
lahf
cmp
cmp
outsb
fbstp
imul
mov
cmc
mov
mov
outsb
daa
and
pop
jae
stos
ret
aaa
scas
xor
push
adc
aad
dec
jmp
stc
sbb
cwtl
mov
fstcw
scas
inc
mov
adc
out
pushf
stos
mov
xchg
push
mov
loope
add
into
pop
mov
test
aad
mov
dec
shrb
and
xchg
pop
sub
jmp
push
mov
sbb
rclb
jp
in
js
addr16
jae
jp
sbb
lahf
xor
addr16
inc
fwait
mov
xor
dec
out
add
sub
mov
inc
imul
lret
out
add
mov
rcrl
out
jbe
and
jns
sub
leave
push
push
lock
imul
movsl
cmpsl
hlt
add
mov
add
ss
sbb
pop
imul
test
ja
add
sub
int3
les
lcall
jno
mov
mov
cmovge
mov
xchg
xchg
daa
sbb
negb
mov
xor
loope
clc
mov
sub
or
into
jge
and
cli
pop
or
mov
cs
gs
test
xchg
shll
or
pop
mov
push
cli
or
lcall
push
push
jo
js
call
lret
mov
mov
subl
imul
arpl
cmp
mov
dec
js
mov
push
pop
es
ljmp
mov
call
xchg
mov
outsb
jne
in
pop
cmp
rolb
push
in
dec
xchg
xor
pop
sub
jle
pop
or
addr16
jne
fcmovne
cmp
adc
cmp
flds
mulb
pop
sbb
test
jge
sbb
sahf
mov
and
aaa
and
repnz
ss
mov
and
loopne
mov
insl
out
or
cmpsl
leave
fdivl
ss
int
movsl
jno
push
mov
daa
dec
inc
aad
mov
testb
lcall
jg
test
or
mov
sub
push
xor
and
rcl
push
ret
rolb
lods
mov
aam
test
or
xchg
movsb
cld
icebp
pop
pop
stc
test
insl
fimull
sub
or
lahf
loop
pop
testl
addr16
and
lcall
lret
mov
stc
mov
loopne
sub
cmp
mov
leave
addr16
mov
call
jg
mov
mov
jns
iret
adc
push
sub
or
inc
push
mov
aas
sbb
es
or
adc
test
cmp
and
outsb
jge
mov
sbb
lret
test
sbb
insb
test
incb
add
xchg
imul
sahf
mov
daa
dec
xor
pop
inc
jg
add
in
pop
outsb
dec
adc
or
dec
cmpsb
aas
jb
jae
jb
inc
push
in
xor
sahf
dec
sti
fwait
add
sub
loope
in
enter
and
mov
psrlw
popa
xchg
pop
xchg
subl
lret
cmp
in
cmpl
ss
push
push
cs
xchg
dec
aaa
mov
and
je
stos
push
mov
pop
jecxz
loop
inc
push
es
push
pslld
adc
fmul
pop
fidivs
repz
int3
sbb
rcpps
mov
imul
test
add
or
mov
xchg
dec
in
pop
call
subb
sub
in
mov
aaa
aad
sub
sub
inc
jg
push
mov
pop
in
sub
jno
pop
jno
jo
lret
imul
push
movsl
jle
lds
pop
or
pop
mov
repz
mov
sub
cmp
sahf
in
rclb
insl
fildll
inc
mov
rclb
mov
lcall
test
push
enter
mov
dec
jno
movsb
iret
fdivl
nop
mov
imul
jecxz
std
es
pop
shrb
jmp
movsb
iret
aaa
and
in
shrl
xchg
jge
pop
or
divl
nop
pop
into
xchg
sti
xor
out
jge
cmp
test
fsubs
insl
mov
pop
repz
imul
inc
popf
das
cmpsl
mov
adc
inc
dec
fnstsw
fstpl
inc
pop
stc
std
dec
enter
xor
push
iret
cwtl
xchg
pop
sbb
jnp
lock
push
xor
push
std
push
mov
ds
mov
add
outsl
pop
jge
sub
stc
nop
sub
jp
ja
cs
and
mov
jg
aas
and
jmp
mov
test
cmp
call
sbb
imull
pop
mov
mov
cmp
sub
ljmp
insl
ds
fwait
mov
mov
add
insb
pop
sbb
loope
xor
inc
mov
xchg
popf
jo
mov
adc
pop
dec
loop
mov
or
shrl
cmp
mov
push
jmp
add
clc
aas
rclb
rcr
cli
push
inc
ficoml
scas
lods
jecxz
mov
mov
js
mov
mov
lahf
out
pop
xchg
cwtl
ja
pop
mov
test
mov
push
out
test
dec
mov
dec
lret
mov
ffree
dec
inc
inc
push
jne
insb
iret
call
ret
push
adc
inc
pop
pop
popf
xchg
aas
xchg
mov
jno
hlt
cmp
fistpl
mov
lea
add
hlt
push
je
add
mov
xchg
adc
aad
cmpsl
ret
jmp
dec
shrl
mov
and
and
and
out
shl
push
jmp
lahf
jbe
and
nop
mov
adc
jle
pop
xchg
outsl
test
nop
into
pop
sub
push
jecxz
aam
and
testl
cli
inc
mov
repnz
lcall
dec
imul
pop
andl
clc
hlt
pop
ljmp
jge
xor
bound
cmpsl
or
jecxz
loope
cmp
repz
push
cmpsl
dec
ja
test
incb
ja
push
je
scas
pop
adc
clc
cmc
pusha
insb
mov
popf
insl
inc
add
sbb
pop
sahf
mov
out
cmp
data16
das
mov
enter
jmp
ss
mov
addb
sub
mov
mov
test
icebp
dec
mov
gs
pop
repz
jb
inc
stos
imul
add
std
adc
stos
xchg
cmp
pop
insb
pop
push
enter
pop
cwtl
pushf
mov
dec
or
fisttpll
dec
and
and
ret
lcall
adc
pop
cli
dec
into
mov
inc
and
mov
enter
sub
popf
fidivrl
lea
dec
nop
cmp
jne
jb
pop
test
lea
push
adc
mov
jns
adc
repnz
mov
add
std
or
dec
fadds
aaa
cmp
push
leave
xor
ret
sub
bound
negb
ss
xchg
addr16
cmp
mov
repz
subps
sahf
movl
loop
jae
push
or
cmp
hlt
stc
sbb
and
adc
aaa
das
and
test
mov
sbb
icebp
push
or
ja
addr16
mov
in
and
jmp
fnstenv
sub
movsl
bound
hlt
sbb
sbb
mov
dec
cs
inc
and
pop
cmc
xor
out
push
pop
inc
ds
fisubs
push
mov
and
push
negl
mov
arpl
xchg
mov
cld
push
mov
and
fsts
cmp
mov
outsl
lret
out
add
sarl
or
mov
cld
es
inc
inc
jnp
mov
or
add
inc
pop
mov
mov
xor
out
pop
xor
push
bound
xor
push
arpl
in
dec
jne
jae
not
push
fucomip
sbb
inc
test
imul
jno
out
mov
xchg
fbld
cmp
cltd
imul
adc
pusha
xor
fdivr
jb
pop
mov
das
mov
out
sbb
cmp
std
xor
ds
call
icebp
sti
sub
and
leave
stos
fimull
test
pop
mov
test
out
popf
adc
xchg
mov
add
mov
cmp
sbbl
mov
jbe
movsl
or
daa
divl
push
sub
fadd
xor
pop
jb
sub
jl
sbb
mov
dec
popf
sbb
xorl
stos
fsubs
xchg
lock
sbb
xchg
or
cs
aad
lods
inc
mov
pop
jge
jo
inc
fisttps
addl
sarl
cmc
enter
movsb
push
pushf
pop
jnp
jnp
xchg
scas
leave
test
add
sbbb
ds
pop
inc
cmc
dec
lock
jb
xchg
cwtl
mov
dec
dec
inc
add
ja
call
subl
mov
lods
push
sub
xor
sbb
lods
dec
arpl
imul
scas
idiv
and
loope
cld
or
xchg
in
bound
shl
je
inc
xchg
test
mov
cmp
movsb
movsb
xchg
imul
popf
outsl
fcompl
pop
pop
repz
add
cmp
scas
pop
nop
or
xchg
negl
add
inc
mov
repnz
fstpt
test
ret
push
jmp
test
aad
jbe
sti
cmp
ss
push
jecxz
ljmp
mov
cmp
test
dec
cwtl
mov
and
xor
mov
test
xchg
bound
jle
jne
jno
adc
insb
dec
out
push
movsb
or
jl
sbb
pop
int
mov
add
ret
xchg
dec
aam
aad
add
scas
mov
mov
imul
inc
mov
dec
out
cmp
and
push
pop
lds
add
push
push
adc
clc
stos
gs
mov
bound
jle
cmp
mov
test
and
jmp
lea
mov
pop
add
mov
push
out
adc
mov
mov
lock
daa
push
lcall
jge
sbb
xchg
sub
fwait
add
cmp
adc
stos
fdivrp
add
loope
and
fbstp
adc
add
adc
mov
outsb
pop
mov
aaa
sbb
pop
adc
movsl
leave
jmp
mov
jne
std
jge
and
insl
ss
mov
jo
dec
adc
mov
or
inc
scas
jmp
and
or
dec
pop
sub
loop
pop
daa
dec
jnp
jae
cmpb
xchg
dec
mov
xchg
xor
inc
mov
push
mov
cmpsl
xor
jge
mov
inc
lcall
or
mulb
pop
icebp
xor
mov
incb
int
sahf
pop
aam
into
add
ss
jmp
aad
push
shlb
icebp
push
fidivs
sbb
jbe
push
mov
sbb
test
imulb
aad
outsb
push
lods
xchg
inc
out
inc
mov
inc
and
jmp
xor
mov
cmp
sub
int3
push
adc
push
out
jmp
lea
jno
xor
fdiv
pushl
pop
mov
test
ja
push
subl
mov
daa
mov
loopne
daa
shrb
pusha
pop
mov
dec
ret
scas
adc
mov
xchg
nop
fsubrp
addr16
cmp
stos
dec
jo
or
movsb
push
and
pop
test
inc
adc
cmp
je
jp
mov
mov
pushf
loope
mov
jnp
hlt
lds
test
fucom
mov
mov
ret
and
mov
xchg
call
jl
mov
add
mov
cwtl
mov
popa
sbb
xchg
push
xchg
in
aaa
leave
push
cmp
sbb
cmc
pop
mov
out
lcall
popf
mov
dec
xor
cmp
pop
mov
jle
adc
cmpsb
outsl
jbe
jmp
lahf
jmp
insb
pop
mov
ja
idiv
inc
mov
pop
xchg
push
push
sbb
enter
inc
sti
sbb
lods
xchg
cmp
push
sub
lcall
sahf
cmc
test
dec
add
jno
sbb
arpl
mov
push
inc
sti
imul
mov
mov
dec
push
daa
ja
mov
mov
outsb
xor
sti
adc
and
ret
jno
mov
std
dec
ljmp
add
inc
mov
test
mov
in
in
popf
mov
push
lock
sub
pop
leave
and
adc
notb
xor
leave
dec
push
iret
ret
aad
fldenv
fildll
scas
cld
add
cmp
into
pushf
xor
jmp
xor
cmp
pop
dec
jmp
mov
fldl
popa
popa
fadds
fwait
lea
adc
jns
test
cmc
jne
push
push
inc
call
movsb
mov
stos
jmp
gs
mov
dec
stc
pop
stc
adc
daa
sar
sbb
into
dec
aad
and
and
movsb
push
cwtl
push
push
fistps
jmp
adc
lods
leave
mov
jmp
mov
mov
push
addl
popa
daa
bound
or
hlt
aad
stos
and
jmp
or
fbstp
or
xchg
mov
add
adc
dec
out
int3
repnz
cmp
jne
push
add
scas
or
ret
mov
xor
jnp
pop
ss
mov
mov
movsb
pop
call
jno
xchg
pop
or
add
aas
pop
mov
mov
push
lahf
adc
je
ss
and
roll
dec
add
popf
cli
or
out
inc
mov
mov
pusha
jle
leave
nop
mov
mov
sub
pop
sbb
imul
cmp
mov
mov
test
scas
sbb
and
lods
int3
mov
dec
or
or
sbb
push
iret
shlb
push
mov
arpl
and
insl
sbb
aas
dec
out
jle
bound
bound
sub
jns
and
xor
jmp
pop
fldenv
pop
popa
aas
shl
lret
leave
jmp
mov
out
jo
xor
and
pop
ss
fimuls
rorb
pusha
ja
pushw
daa
mov
ljmp
jo
adc
inc
add
adc
sub
enter
fucomi
movsb
sbb
add
mov
xchg
mov
mov
int3
inc
jp
inc
inc
cmp
cld
pop
arpl
and
mov
test
cmp
movntq
pop
cmpsl
je
shrl
mov
pop
xchg
xchg
lahf
mov
insb
cmp
andl
cmpxchg
movsl
imul
sahf
mulb
rclb
ret
inc
adc
push
dec
jmp
setbe
in
pushf
push
add
push
push
les
sub
xchg
or
cmc
add
xor
sar
mov
cmp
sub
mov
shlb
cltd
jns
aam
sarb
jbe
pop
and
cmp
not
sub
fistpll
jnp
in
push
testl
mov
xor
call
sub
in
mov
push
xchg
inc
inc
mov
push
jl
je
andb
pop
ljmp
int3
xor
or
or
aam
sbb
std
push
pusha
push
sbb
ficompl
ret
shll
aad
adc
lcall
pop
push
out
popaw
and
mov
push
and
fstl
dec
xchg
lret
loop
sub
pop
dec
push
or
cld
das
clc
orb
pop
scas
stos
lea
xchg
loop
xor
loop
cmp
add
mov
rcll
roll
mov
dec
cwtl
fldt
sbb
sbb
lret
repnz
push
mov
sbb
aaa
shll
outsl
icebp
cmp
nop
outsb
ret
inc
stc
orl
roll
pop
aaa
divps
movsl
ljmp
daa
or
jne
cmp
cmc
inc
in
lods
mov
mov
popa
dec
clc
outsb
adc
leave
pop
mov
sbb
fisttps
add
stos
rclb
in
insl
aas
adc
inc
sbb
pop
lahf
popa
jnp
jno
aad
cltd
sub
mov
fldcw
pop
cmpsb
jl
subl
and
pop
mov
mov
add
lds
pushf
leave
fwait
sbb
sbb
and
xor
mov
ss
push
leave
stc
mov
loopne
sbb
fbstp
mov
test
pop
les
jnp
xlat
call
mov
jne
xchg
push
cwtl
inc
dec
xor
pop
test
bswap
sbb
nop
mov
clc
jns
xlat
pushf
scas
and
cmp
and
imul
mov
inc
pop
pop
outsb
nop
push
add
xor
xchg
bnd
movl
sub
add
in
mov
test
add
lods
jp
test
xor
inc
test
or
sub
icebp
xor
cmp
mov
xchg
in
shl
mov
jnp
aaa
andb
jae
in
fcom
lret
add
and
lds
insb
aam
mov
cmp
xlat
mov
or
xchg
ds
sti
negb
push
mov
inc
xor
adc
push
fists
addl
idivl
mov
js
mov
pop
xlat
adc
push
pop
add
andb
cmp
nop
mov
xor
sbb
repz
dec
or
movsb
daa
jne
xchg
jno
stc
xor
sub
fs
lock
cs
cmpl
cmc
mov
scas
shll
stos
jecxz
xchg
dec
mov
xchg
inc
mov
outsb
mov
shll
mov
mov
push
movsb
repnz
les
jg
mov
jnp
ss
faddl
mov
pop
dec
dec
aas
dec
repz
mov
sub
daa
hlt
shlb
nop
jb
repz
das
pop
andb
xor
xorl
or
roll
add
insl
add
add
fidivrl
lcall
or
or
sbb
xchg
push
xor
shl
mov
mov
fs
rcrl
cmp
jecxz
lods
or
lock
mov
pop
push
jne
xor
scas
inc
or
dec
std
sbb
xchg
inc
jno
icebp
les
int
mov
mov
or
mov
into
cld
xor
div
pop
cmp
fldl
popa
in
fldt
leave
rolb
mov
ret
mov
mov
test
shlb
sahf
adc
mov
shll
or
js
jmp
in
mov
fdivrs
jo
mov
cmp
aas
int
pop
fucomi
in
ficoms
xor
xor
lahf
in
lock
push
pop
pop
jmp
sbb
insl
push
cmp
pop
xchg
sbb
frstor
jmp
stos
inc
stos
loopne
repnz
adc
fadd
pop
cs
sub
xchg
or
jo
int3
inc
add
addb
shrb
add
and
rorl
or
push
and
aam
je
sarl
addr16
xchg
in
add
adc
int3
sub
xor
stos
cmp
outsl
loopne
inc
cmp
mov
rcrb
adc
les
fisubs
mov
aam
clc
fdivl
xchg
mov
arpl
leave
push
add
psubsb
push
xchg
popa
daa
sbb
dec
xchg
movsl
addb
mov
ret
pop
push
xchg
xor
xor
sbb
mov
jb
das
mov
fcmovb
dec
mov
pushf
les
and
mov
xchg
and
inc
scas
push
or
ret
cmp
pop
push
mov
lret
fmuls
push
pop
scas
test
xchg
push
in
cmp
sahf
xchg
data16
mov
bound
and
pop
mov
int3
pop
outsl
shl
inc
movsb
jp
cmp
je
push
mov
add
stc
cmp
pop
push
mov
dec
mov
lock
push
dec
or
mov
dec
adcb
shrl
pop
sub
arpl
xchg
movsl
cmpw
fldenv
ljmp
nop
out
xchg
jbe
movsl
adc
es
fdivrp
imul
loope
hlt
mov
es
xchg
js
pushf
xor
jp
push
or
cltd
and
aam
sbb
mov
aaa
inc
lock
push
movsl
pop
call
cmp
add
mov
aad
sub
ja
mov
push
push
sbb
pop
scas
mov
and
jg
or
mov
rolb
gs
addr16
gs
cmp
das
nop
mov
mov
cmp
lods
ds
imul
insb
pop
out
pushl
cltd
in
ja
jae
fwait
mov
and
mov
loope
sbb
sbb
mov
sahf
jge
pop
in
movsl
cli
in
cmp
rep
xor
mov
add
das
jo
lds
xchg
or
xchg
xor
push
stos
xor
mov
jne
je
push
and
sub
pop
stc
xor
loope
nop
imul
xor
or
call
pop
inc
sbbl
mov
dec
inc
adc
popf
cli
mov
sub
enter
lret
mov
loopne
mov
push
jmp
stos
mov
or
xor
adc
cmp
insl
lret
jmp
adc
cmp
inc
or
cld
test
cmp
lock
mov
mov
mov
jmp
push
pop
in
dec
pop
push
pop
push
mov
pop
lods
int
dec
adc
sbb
adc
adc
je
out
cwtl
stos
inc
insb
mov
xchg
xchg
cmp
cwtl
ret
pop
call
fcmovu
mov
std
loop
into
add
pop
fdivrl
aaa
pop
pop
icebp
imul
cmp
dec
leave
mov
out
test
scas
ljmp
mov
xlat
mov
cmp
shrb
push
mov
mov
daa
mov
rorb
mov
jne
fwait
push
leave
stos
cmpsl
adc
adc
xor
stos
dec
nop
inc
mov
xorb
mov
mov
sbb
mov
add
js
xchg
enter
and
pushf
inc
and
push
ficoml
popa
sarl
dec
sbb
enter
push
shl
loope
mov
in
mov
mov
pop
jp
in
pop
lea
adcl
das
adc
pop
movsl
push
pop
cmp
push
out
aam
lret
push
dec
enter
fwait
cli
lods
sub
out
inc
ljmp
dec
aad
add
scas
mov
popa
andl
inc
push
cmpb
pop
bound
mov
aad
stos
addb
sub
xchg
inc
outsl
xor
pop
fcompp
sbb
sub
cli
lret
or
std
sub
add
enter
or
xor
and
dec
pusha
popa
fs
mov
jecxz
fstps
lret
dec
stos
mov
sbb
lods
addr16
outsb
add
in
inc
and
rcrb
cli
icebp
cmpsb
jo
inc
and
movsl
gs
outsl
aas
adc
ja
mov
or
insl
xchg
adc
push
or
xchg
in
aas
aaa
fiaddl
aaa
sub
mov
in
xchg
bound
rorl
js
aas
jne
fwait
in
xchg
test
dec
lods
adc
cwtl
dec
mov
pop
pusha
loope
lock
js
push
add
imul
mov
xor
pop
and
scas
js
adc
add
dec
xor
cmp
add
pusha
xchg
gs
push
in
lods
mov
cmpsb
jbe
jmp
dec
jmp
cmp
and
clc
push
or
dec
xchg
mov
nop
pop
jmp
pop
shlb
in
enter
das
rcl
fdivrl
das
in
dec
repnz
in
adc
imulb
add
mov
fcomps
insb
mov
mov
inc
mov
dec
xchg
inc
mov
xchg
arpl
std
iret
sub
mov
loopne
insb
mov
lcall
pushf
ret
mov
dec
fistpl
xchg
jmp
dec
into
js
cld
xor
pop
scas
mov
arpl
aas
lcall
dec
mov
sub
out
or
popf
sub
loop
mov
pop
sti
imul
add
sbb
mov
dec
and
mov
jl
push
daa
leave
std
push
movb
cltd
popa
sarb
test
ss
lock
and
and
mov
test
xchg
test
adc
aad
sub
sti
sbb
dec
leave
lds
cltd
popf
cwtl
sub
frstor
pop
sbb
lret
fs
and
mov
sbb
pop
cmp
and
popa
sub
inc
add
dec
stos
ficoms
lods
mov
into
gs
mov
clc
jne
clc
push
jno
xor
inc
icebp
enter
sahf
stos
sub
ret
jb
lods
jg
inc
pop
popa
mov
push
cmp
push
popf
iret
xchg
cli
adc
mov
and
jbe
sbb
jmp
and
fldt
xchg
or
xor
push
sub
sbb
mov
loopne
sti
mov
loope
xchg
popa
xchg
mov
dec
inc
pop
fnsave
jmp
xchg
ret
adc
inc
test
jmp
add
sub
jle
adc
cltd
pop
cs
mov
rcll
repnz
mov
aam
fisttpll
outsb
sub
negb
add
mov
and
insb
push
in
adcb
out
faddl
jae
jp
xor
pop
add
jne
sbb
mov
lret
ds
xor
imul
cltd
loop
add
cmp
xchg
aas
cmp
jp
fcomps
fcmovnb
outsl
jge
clc
jno
pop
inc
mov
sbb
or
into
out
movsb
and
inc
adc
popf
insb
jnp
in
arpl
jmp
cltd
in
enter
pop
mov
mov
mov
daa
mov
lcall
imul
out
iret
aas
xchg
es
repnz
sbb
inc
xchg
cmc
aad
jno
stos
jge
add
pop
or
outsl
jge
ltr
jb
pop
rcrl
xchg
jmp
ret
cmpsb
insb
mov
add
mov
fs
jle
pusha
out
xor
sub
xchg
or
cmpsl
fsubrl
popf
mov
pop
xchg
mov
gs
xchg
mov
das
sub
jge
in
xchg
lods
lock
xor
mov
mov
negb
stos
faddp
jns
leave
out
stos
bound
sti
stc
sbb
sub
stc
hlt
mov
xor
sbb
or
test
mov
add
pop
imul
xchg
nop
movsb
mov
mov
pop
lahf
xchg
fstl
iret
dec
inc
aas
imul
jle
cld
scas
fs
das
mov
cmc
test
jp
neg
jb
mov
push
insl
mov
dec
hlt
test
loop
mov
mov
and
jne
test
hlt
imul
add
push
and
push
ret
push
cmpsb
sub
pusha
adc
movsb
xor
dec
fldt
or
dec
mov
out
ss
inc
in
adc
out
push
cs
hlt
mov
jecxz
loop
xorb
addr16
cwtl
dec
push
xchg
cmp
das
mov
sahf
arpl
sub
add
add
jne
out
jecxz
divl
cwtl
push
or
inc
cmp
loopne
push
out
sub
fdivr
push
mov
inc
jmp
shlb
push
mov
add
xchg
pop
mov
xor
and
arpl
xor
popl
sbb
jle
cli
sahf
pop
jae
or
outsb
es
adc
pop
adc
mov
imul
lods
fnstenv
or
imul
jb
bound
xor
push
arpl
das
cs
mov
xor
sar
mov
pushf
xchg
movsb
sbb
icebp
pop
notb
lods
lods
add
jg
lods
lret
popf
push
mov
mov
sahf
inc
push
jns
gs
xor
dec
cmp
jae
in
adc
adc
out
mov
and
pop
mov
jb
cmc
call
sub
cmp
mov
int
lahf
adc
stc
insl
jo
gs
mov
pop
pop
insl
and
repnz
hlt
fidivl
fwait
stos
and
add
iret
scas
xlat
pop
hlt
call
pop
nop
pop
lds
mov
lds
xchg
mov
push
fistpll
add
jno
jbe
sub
jbe
push
xor
and
in
loop
mov
loopne
mov
and
fwait
rcll
hlt
aam
pop
ret
test
mov
xchg
xlat
mov
push
cwtl
daa
stc
subb
lock
add
sar
aaa
cli
stos
mov
repz
adc
pop
cmp
push
xor
nop
cmp
jle
push
mov
mov
mov
inc
test
and
inc
movsl
xchg
push
mov
testl
rcr
xor
sarb
xlat
adc
out
lock
ret
jns
xorb
ret
nop
bswap
push
cmp
dec
cli
push
jns
mov
sub
fcomp
out
bound
xor
mov
ss
rcrb
push
mov
and
imul
pop
pop
dec
outsb
jne
and
or
fisubrl
int3
jg
xchg
mov
testb
int3
imul
sub
into
or
clc
mov
sti
and
adc
idivl
lock
mov
jle
in
ljmp
mov
cmpsl
mov
fmull
push
jp
test
jg
loop
push
push
or
rcr
leave
cwtl
mov
mov
pop
hlt
sbb
xchg
aam
out
scas
rcrb
lcall
mov
mov
cmpsb
cmpsb
mov
stos
call
inc
mov
aad
insb
cmc
or
rclb
dec
xor
lahf
mov
daa
rcl
mov
in
aam
push
jmp
lcall
lods
sbb
or
mov
mov
inc
add
mov
imul
xchg
xor
mov
fidivrl
dec
push
add
xor
lahf
and
jge
imulb
and
outsl
xor
mov
or
inc
testb
fnstcw
xchg
aam
cmpl
xchg
adc
mov
jl
fadds
rolb
mov
mov
dec
push
jne
fcomip
cmp
mov
out
add
jge
das
or
adc
mov
push
clc
lcall
xchg
iretw
ds
in
adc
pop
adc
in
rcrl
dec
pusha
sbb
stos
sub
sub
das
roll
dec
cmpsl
mov
add
push
in
xchg
es
xchg
push
cmp
pop
push
loope
sbb
hlt
xchg
jbe
into
jmp
aad
push
loope
push
out
or
outsl
add
jge
std
jg
aad
mov
scas
idiv
flds
adc
xchg
jno
aas
push
clc
cmp
call
mov
xor
nop
mov
ss
ja
jle
xchg
inc
dec
cmpb
stc
in
test
or
shll
arpl
lcall
test
mov
inc
sbbl
out
stc
lret
xor
lcall
xchg
push
dec
les
add
xchg
add
xor
sub
sub
xor
outsl
dec
int3
jmp
pop
pushf
lahf
fdivr
sub
adc
fs
emms
cld
repz
lods
adc
fmull
and
xchg
or
xor
mov
movsb
mov
cmp
sbb
inc
and
mov
scas
ret
dec
ljmp
aam
fmulp
fcomps
cmpsl
push
popa
add
mov
pusha
lock
sbbb
cmp
addl
mov
cmc
mov
loopne
mov
inc
jae
mov
mov
pop
lret
xor
dec
fisubl
cmp
jne
mov
bound
inc
pop
daa
inc
inc
sub
movl
add
int
cmp
fldl
aam
fs
or
and
movsl
or
in
inc
enter
fs
pop
call
xor
loope
pop
push
dec
cmp
dec
adc
xor
sbb
ret
repnz
jge
xchg
and
push
pop
adc
test
popa
sub
mov
xor
outsb
mov
imul
dec
or
in
add
jns
in
or
mov
sbb
xchg
xor
sti
bnd
lea
iret
cmp
dec
fwait
sub
or
xchg
adc
jno
cmp
lret
inc
xor
ja
aam
jp
cwtl
aas
add
aad
cs
data16
xchg
imul
outsb
xchg
adc
xor
aaa
sbb
jnp
inc
cmp
and
cmp
jg
call
pop
adc
add
xchg
lea
mov
jb
gs
scas
aad
jmp
inc
xchg
movsl
dec
xchg
mov
gs
je
imul
sar
jno
inc
mov
shlb
or
mov
jns
shll
mov
add
test
adcb
mov
sub
jp
mov
push
cwtl
test
xor
inc
push
push
repz
jecxz
outsl
add
stc
lcall
inc
lock
xchg
mov
jecxz
pop
xchg
and
jp
xchg
push
cli
in
push
js
xchg
mov
mov
dec
enter
jp
loop
jno
scas
lret
icebp
or
push
inc
and
xor
pop
lahf
sbb
push
pop
pop
or
xchg
test
cmpsl
cmpsl
sub
fs
and
or
ret
js
iret
nop
and
in
test
or
fdivrs
xchg
push
or
jecxz
lds
xor
sub
add
and
iret
pop
mov
push
mov
ss
push
push
ret
loop
imul
xor
cmp
sti
movsl
xor
dec
push
jge
les
pop
dec
cmp
sbb
push
call
push
icebp
outsb
inc
pop
push
jp
mov
xor
sub
sbb
xchg
fwait
mov
outsl
cmp
jle
lahf
shr
sbb
shrl
dec
rcrl
adc
inc
push
push
scas
call
imul
mov
iretw
sbb
loope
mov
pop
addr16
xor
jp
mov
in
int3
xchg
xchg
pusha
mov
inc
cmp
jg
lahf
and
das
arpl
sahf
mov
aas
rcrb
pusha
ss
hlt
cmc
xchg
loop
cmpsl
je
fcom
dec
pop
lods
out
ret
dec
push
sbb
call
or
cmp
int
into
cmp
xchg
or
lods
sti
xor
sbb
lret
aas
xchg
push
popf
push
out
movsl
lds
xor
sbb
movsl
sbb
sbb
xorl
int
movb
pushl
dec
ljmp
arpl
cmp
mov
out
stos
arpl
in
adc
lock
and
fcompl
loopne
iret
xor
subl
and
xor
dec
inc
push
enter
adc
mov
jae
adc
jnp
pushf
adc
pusha
xchg
dec
inc
sub
jmp
dec
cld
das
dec
pop
dec
int
jge
movsb
shlb
xor
fs
mov
outsb
shll
movsb
mull
fwait
loop
and
mov
js
cmpsb
xor
push
test
stos
inc
sbb
std
iret
hlt
inc
pop
aad
pop
jnp
cmp
adc
jl
outsb
adc
aaa
and
sbb
dec
cmpsb
push
pop
dec
test
nop
fwait
shlb
cltd
int3
ja
stos
push
cs
jge
push
mov
jg
lea
push
int3
xchg
push
fcmovu
xchg
notl
mov
dec
js
pop
data16
stos
cmp
dec
mov
pusha
or
inc
jo
push
xor
ja
jle
and
cmp
movsl
sub
ret
pop
jle
lret
cmp
sub
pop
das
ficoms
fwait
or
out
cli
lcall
enter
lock
negl
scas
fmuls
xchg
cmp
loope
outsb
xchg
or
and
push
jg
movsb
leave
ja
push
cmpl
orb
aam
scas
in
push
xchg
pop
sarb
prefetch
lahf
xor
int3
jae
xor
jg
pusha
sub
push
push
neg
push
test
movsb
pop
fisttpll
out
popf
dec
inc
stc
xchg
loopne
rorw
das
pop
xchg
out
flds
push
add
aaa
negl
fdivrl
sbb
cltd
xchg
mov
aaa
fnstcw
add
shl
mov
decb
int3
jae
scas
insb
adc
cmpsl
in
mov
mov
push
bound
and
int
cmp
cmovne
jb
sbb
pavgb
int
jmp
inc
lea
or
jbe
or
xchg
mov
jg
imul
les
mov
ss
out
and
mov
mov
push
jmp
fwait
jns
jno
jmp
dec
cwtl
lea
or
push
aaa
inc
fwait
enter
sbb
fisttpl
movsl
in
shll
sbb
repnz
mov
cmp
xchg
fists
ss
ror
xchg
sub
sbb
out
mov
sub
mov
mov
push
add
xchg
cmp
jno
mov
inc
mov
push
lahf
lods
popa
jmp
fisubrs
jnp,pt
mov
icebp
adc
push
pop
orl
cltd
nop
jo
dec
cmp
ss
shlb
int
xor
push
add
in
popf
inc
subb
cmp
inc
sub
mov
mov
and
loop
mov
sete
pop
xchg
adc
or
fs
out
adc
inc
sub
inc
shll
cmp
push
testb
imull
aam
dec
adc
dec
push
push
sub
lahf
mov
jno
sahf
mov
inc
das
add
jge
pusha
push
sbb
shl
and
jmp
mov
cmpsl
icebp
ja
rorb
ret
xchg
sti
push
jo
cwtl
jb
fs
loopne
aas
jo
add
mov
shlb
scas
in
icebp
dec
and
push
push
scas
xlat
sub
flds
adc
dec
test
jecxz
inc
rsqrtps
bound
loope
mov
lods
subb
dec
enter
pop
repz
loopne
aaa
mov
add
je
fadds
loop
inc
test
testl
bnd
mov
out
insl
and
ret
or
pusha
bound
mov
outsb
pop
int
add
xor
adc
loope
xchg
fnsetpm(287
mov
sbb
ret
mov
loopne
jbe
or
rcr
mov
xchg
jno
es
ljmp
fldenv
mov
stos
mov
lahf
cmp
jge
js
mov
in
cli
sbb
inc
and
dec
out
xchg
popf
add
inc
sbb
pop
fisttps
movsb
xchg
icebp
bound
cltd
mull
je
xor
pop
xor
mov
ja
cwtl
into
popf
cmp
hlt
stc
repnz
fisttpll
jmp
xor
add
jecxz
test
fs
inc
ret
gs
movsl
loopne
fidivrl
scas
dec
mov
nop
xlat
or
fwait
outsb
cmp
nop
xchg
inc
mov
mov
insl
test
inc
sbb
rcrb
nop
in
push
divl
iret
xor
pusha
mov
cltd
aaa
adc
ljmp
mov
push
sets
sbb
jle
xchg
fstps
xlat
push
stc
push
jecxz
clc
cmp
lcall
add
pop
popf
adc
imul
mov
ds
not
cmc
mov
lcall
dec
popf
arpl
stos
int
or
lods
mov
aaa
sbb
daa
in
test
fisubrl
stos
jecxz
pusha
dec
negb
xlat
sub
loop
inc
ret
leave
icebp
test
fs
ret
icebp
mov
and
jmp
dec
cmc
or
lret
pop
je
pop
shlb
pop
push
dec
mov
jmp
movsl
enter
pop
or
test
pop
in
and
std
repnz
aaa
push
sbb
fs
out
or
or
or
pop
icebp
mov
inc
xor
movsb
add
inc
pusha
jle
cld
js
push
or
mov
xchg
mov
xor
in
out
jae
in
popa
push
cmp
fnstcw
dec
movsb
add
cmp
fstpl
cwtl
daa
test
cmpsl
aaa
add
lds
push
sbb
sub
sub
mov
or
clc
mov
inc
sahf
addr16
dec
negb
jo
sbb
jo
cmp
int
inc
lds
movsl
fildll
and
jp
pop
jmp
int
jo
arpl
jne
outsl
subl
push
int3
xor
stc
cmp
xchg
aam
call
in
mov
aam
clc
sub
sub
jp
pop
gs
cltd
sbb
jne
shll
nop
xor
bound
jns
aam
xor
ds
xchg
cmpsl
sbb
pop
imul
or
adc
fs
jae
jmp
lods
jno
ja
jo
pusha
xchg
fldt
pop
out
in
jmp
icebp
pop
fmulp
imul
bound
add
jle
sub
mov
push
push
jmp
push
sub
add
stos
lea
xchg
push
nop
in
leave
mov
pushf
cltd
cli
mov
dec
push
sbb
pushl
push
jmp
mov
push
jmp
mov
cmpsl
push
sbb
adc
idivl
fcmovu
or
test
lods
inc
nop
enter
fstl
push
cli
imul
xchg
jbe
lea
mov
mov
sti
pop
xchg
int
addr16
cmp
cmp
jge
add
stos
jbe
lcall
dec
cmpsl
ljmp
addr16
cmc
cmp
mov
lock
int3
cmp
sub
sub
push
test
aam
fistpl
mov
js
or
bnd
icebp
les
push
es
inc
mov
inc
push
jg
inc
jae
arpl
dec
fucomp
mov
in
data16
into
mov
inc
push
aad
jecxz
mov
push
push
push
test
cmp
call
rorb
jecxz
ss
add
lock
cltd
adc
out
es
movsl
mov
pop
ret
sbb
das
outsb
adc
mov
pop
mov
inc
xor
cmpsl
push
movhps
jecxz
sahf
or
movsb
sub
out
jmp
push
jae
xor
jmp
lcall
adc
xchg
and
xchg
mov
xorl
xchg
mov
out
leave
adc
hlt
shrl
adc
mov
ret
xor
sbb
cld
mov
jp
pop
pop
pop
pop
stos
and
mov
lds
ds
mov
sub
or
pop
jns
loop
jno
adc
push
orl
test
rcr
sbb
es
dec
outsl
xor
je
clc
sub
pop
insl
in
cmp
jo
fcoml
cltd
adc
js
fsubs
sub
jns
shll
adc
sub
into
nop
or
or
sbb
push
filds
out
mov
addr16
sbb
sti
push
repnz
test
sub
push
aas
int3
int
popf
fwait
lock
lcall
ds
push
pop
add
cmp
xchg
ret
cmp
pop
sub
ret
jo
and
adc
fstl
mov
stos
cwtl
out
push
dec
lods
out
xchg
in
and
in
movl
sbbb
sti
inc
aas
daa
xchg
and
fidivs
imul
aaa
push
push
adc
arpl
cltd
sub
xlat
cmp
xchg
and
jae
outsb
push
fildll
push
xor
inc
enter
clc
dec
insl
cmp
ret
push
sahf
mov
cld
adc
insb
xchg
outsl
and
jecxz
mov
scas
cltd
stos
xchg
int
cmp
jmp
sub
and
mov
je
imul
xor
fstps
aaa
xchg
in
dec
xchg
cld
std
lahf
adc
xchg
xor
loop
xchg
jecxz
sub
dec
add
inc
repz
sahf
lds
cmpsb
add
adc
in
in
adc
stc
outsl
shlb
mov
xchg
sub
dec
out
jb
pop
jmp
and
adc
mov
nop
add
add
in
mov
ficoml
inc
aam
data16
testl
push
jle
inc
mov
movsl
fidivs
into
popf
scas
lock
js
mov
cmp
dec
cmpsl
ret
out
jno
mov
push
popf
cwtl
push
clc
jbe
push
lea
sbb
mov
pop
pushf
stos
push
ret
ljmp
and
testl
cli
lret
add
xlat
add
adcb
repnz
repz
jecxz
jmp
pop
or
adc
insb
jl
sarb
jo
xchg
lods
in
daa
jge
mov
sbb
jnp
cmp
fcmovnu
xchg
inc
imul
pop
cmp
aad
mov
dec
dec
lret
sarb
out
adc
ret
mov
jae
loopne
xor
mov
leave
movsb
or
imul
dec
movsb
cmp
insb
pop
lea
inc
sbb
push
push
pop
js
pop
xlat
ds
or
xchg
adc
aaa
fists
pop
jl
nop
into
outsl
push
cmp
push
jle
sbb
mov
push
sub
cwtl
xchg
lcall
pop
pop
mov
and
pop
sti
mov
inc
inc
mov
lods
test
xchg
inc
adc
or
lret
test
xlat
imul
cld
in
in
jecxz
ljmp
loope
mov
jo
add
in
aaa
mov
pop
rolb
into
pop
jle
fstpl
fisttps
fdivp
push
and
fdivrl
lret
lods
fistpll
xchg
call
in
push
std
bswap
repnz
or
dec
sub
mov
mov
mov
dec
into
and
outsl
aas
cld
push
mov
popa
fsubl
jmp
pand
sbb
shlb
fsubrl
jae
aaa
push
mov
xor
adc
pop
jmp
fimull
out
imul
push
inc
dec
push
dec
adcl
stos
int3
pop
pushf
or
mov
dec
sarl
sub
mov
xchg
and
push
int
lock
loopne
sub
mov
sbb
jge
pop
inc
outsl
data16
mov
repnz
inc
mov
es
mov
dec
data16
bound
xlat
adc
fldcw
ss
mov
xchg
clc
les
adc
mov
jge
aam
mov
inc
inc
sub
fistpll
enter
loope
mov
pop
mov
sub
mov
sti
mov
mov
xor
mov
push
punpckhbw
outsl
xchg
insl
cmp
mov
xor
gs
mov
xor
ss
sarl
ret
adc
out
cmp
sub
cmp
mov
push
sahf
xlat
or
fs
jp
push
cmc
sub
mov
mov
insl
and
pop
in
out
and
sbb
mov
xor
mov
ficomps
lock
sbb
out
aas
ds
mov
fwait
cmp
aaa
jne
movsb
in
cmp
push
mov
or
into
repz
repnz
and
inc
push
sti
mov
pushf
inc
aam
sub
pop
xchg
xchg
mov
dec
push
shl
sub
pushf
rorl
cmp
push
cld
add
lods
dec
dec
sub
ja
xor
push
in
sar
cmp
xor
dec
and
add
xor
sahf
push
call
mov
add
push
cmpsl
jb
notb
sbb
out
cli
in
sub
repz
xor
pop
dec
dec
pusha
pop
push
imul
sbb
dec
fs
jns
adc
and
outsb
lahf
xorb
adc
cmc
sub
push
lock
xchg
mov
les
out
rclb
sahf
xchg
push
jl
je
push
jbe
arpl
loopne
pop
iret
rolb
pop
mov
inc
inc
cmpsl
jmp
jb
outsl
scas
orl
dec
add
shrb
sub
add
add
ja
push
mov
enter
mov
jg
loopne
dec
inc
pop
mov
aam
dec
pop
outsb
jns
in
bound
xor
pop
mov
bound
arpl
adc
test
fstps
repz
lcall
pushf
jbe
cs
icebp
es
andl
inc
scas
shlb
cli
mov
lea
ljmp
adc
mov
and
xchg
roll
fistpll
icebp
sub
nop
pop
add
and
jo
test
xchg
sarl
sub
xor
out
lahf
sub
les
ret
subb
jbe
dec
jg
cmpsb
push
jmp
push
sub
pop
xor
sbb
xchg
dec
jbe
jp
fisttps
push
push
and
push
mov
stos
loopne
jae
xchg
ret
or
cmp
mov
adcb
ffree
xor
fisubrs
dec
mov
adc
inc
mov
cmp
hlt
add
mov
dec
imul
pop
idiv
push
pop
jns
xor
leave
daa
rep
fcmovu
es
es
repz
outsl
int3
sbbb
dec
popa
std
sbb
lahf
icebp
pop
jp
std
or
push
push
adc
outsl
fisubl
jo
cmp
in
push
cs
and
out
test
imul
fwait
xchg
sub
sbb
out
stos
fmuls
jno
pop
dec
mov
dec
setne
call
mov
sarb
addr16
dec
ficoms
testb
mov
sub
mov
cld
hlt
dec
outsl
outsb
pop
dec
dec
mov
sub
dec
sbb
test
and
pushf
mov
push
jmp
pop
jae
xchg
std
mov
or
mov
mov
cmp
mov
push
in
cmp
push
fidivs
ret
out
inc
jge
xlat
fdivl
mov
sbb
push
mov
push
out
inc
ja
jecxz
or
shll
arpl
out
leave
push
jecxz
arpl
insl
inc
aaa
mov
sub
mov
mov
iret
xor
mov
out
rclb
ja
test
shll
jle
inc
sbb
add
mov
aaa
sbb
sarb
cmp
lods
mov
xor
pop
add
adc
enter
or
mov
jo
and
jmp
in
out
push
xor
ret
xor
inc
or
repnz
xchg
sub
sub
jp
and
and
sbb
mov
rclb
sbb
outsb
addr16
aam
add
ficoml
jbe
mov
aam
pop
mov
add
jae
in
mov
arpl
xor
dec
or
push
cli
push
adc
rcl
scas
jmp
lret
sahf
clc
xchg
gs
imul
out
cmpsl
insl
ret
or
sbb
icebp
test
add
jg
not
or
mov
push
cs
xchg
xor
push
lret
shr
sbb
mov
in
stos
xchg
xchg
pop
loope
jg
fnstcw
pop
ljmp
jne
cmp
lret
into
add
jne
pop
xchg
xchg
mov
push
mov
in
and
jb
lcall
in
and
fwait
sub
lret
xchg
clc
lds
mov
out
test
pop
sbb
pop
fcoml
xor
jecxz
lret
stc
es
mov
mov
mov
out
fists
mov
popf
cmpl
sbb
int3
dec
jl
adcl
pop
add
xor
inc
sub
dec
fsubrs
dec
push
pop
rorb
add
cs
pop
mov
leave
es
insb
xor
inc
cmp
cld
mov
imul
shl
aam
adcl
adc
pop
hlt
dec
adc
xor
xchg
and
mov
fstpl
pop
aas
fsubs
jo
sahf
push
rol
sub
mov
push
xchg
mov
decb
cmc
or
and
jns
mov
ja
hlt
jp
pusha
bnd
cmp
push
cmpsb
adc
test
jmp
test
popa
adc
daa
cmp
inc
jecxz
shlb
jp
lods
cld
xchg
lret
mov
arpl
push
cmp
xchg
incb
xchg
or
sub
mov
stos
or
aad
lahf
outsl
ljmp
mov
sub
mov
stc
in
sbb
sub
or
int
mov
nop
lret
jno
pop
xchg
xchg
jge
mov
push
icebp
icebp
add
adc
sbb
or
push
sahf
lahf
and
andl
push
stos
loope
cmp
mov
in
fs
jecxz
push
out
xchg
nop
push
push
push
out
je
sbb
push
test
data16
insl
pop
or
sub
fcmovbe
xor
dec
mov
in
repnz
jbe
adc
hlt
mov
mov
inc
add
insb
enter
mov
push
inc
out
add
sub
cmpsl
cli
push
ret
cld
ficompl
jo
or
add
cld
xor
lahf
pop
test
and
shr
loope
data16
or
into
negb
sub
stos
lret
in
icebp
dec
or
insl
lret
cmp
pusha
inc
dec
in
in
or
data16
out
scas
fdivrs
ret
add
jecxz
adc
pop
jns
lret
out
xor
enter
jns
inc
movsb
pop
cmp
mov
ss
stos
negl
xchg
push
inc
add
ja
xor
xchg
cmp
cmpsb
in
mov
popa
test
cmpsb
lods
push
ret
sti
inc
sbb
mov
int
cwtl
adc
pop
jnp
lcall
and
outsl
mov
and
aam
sub
loop
mov
fiadds
loope
pop
jl
test
insb
and
mov
aam
shlb
test
fiaddl
push
movsl
daa
sbb
arpl
and
jbe
inc
adc
sub
arpl
or
mov
in
mov
mov
inc
adc
and
test
outsb
mov
dec
jg
popf
jno
mov
js
int3
ja
pop
add
dec
jecxz
and
xchg
hlt
or
mov
inc
cmp
fwait
loope
test
shr
addr16
mov
xchg
cmp
scas
jne
daa
push
aaa
mov
aaa
loope
dec
adc
mov
testl
jl
dec
notl
cmpsl
add
or
xchg
pop
shll
call
ss
icebp
in
stos
push
addr16
pop
mov
mov
mov
push
addr16
push
adcb
jle
bound
lea
push
iret
jmp
adc
mov
dec
insb
fs
dec
addr16
outsl
pop
ds
loope
xchg
aam
inc
xchg
mov
out
mov
shlb
loopne
or
fwait
or
dec
shlb
adcl
inc
in
or
cwtl
sub
mull
call
dec
in
bound
neg
into
mov
pop
push
std
rcl
leave
insl
popf
int3
aas
daa
cmp
shrd
aad
dec
adc
fldt
stos
cltd
push
popf
mov
and
add
mov
sbb
xor
jl
ret
jnp
and
pop
shlb
mov
out
scas
inc
lock
pop
imul
std
lods
int
xchg
or
psrlq
das
dec
adc
jb
dec
fisttpl
jle
push
mov
jmp
lret
popa
add
or
or
in
scas
add
adc
push
aas
pop
jbe
fisubrl
and
cmpsb
je
pop
adc
imul
adc
pusha
orl
push
inc
testb
sti
jb
ret
jne
str
sbb
sub
or
scas
pusha
test
cs
aas
test
test
ljmp
pusha
jnp
test
sbbb
das
jbe
pop
out
pusha
dec
pop
push
push
stos
dec
aas
xor
pop
out
push
add
stos
ds
shll
out
pop
cmp
push
jp
movsl
or
fwait
push
add
hlt
sahf
mov
mov
mov
and
or
ss
dec
loopne
sbb
lcall
mov
add
adc
lret
push
stos
jecxz
cwtl
adc
cmpsb
fiadds
xchg
in
sub
mov
mov
or
imul
inc
hlt
pusha
dec
mov
or
mov
repz
add
in
xchg
xchg
stc
bound
xor
mov
cltd
fstpt
lret
das
ss
pop
pop
lret
mov
xor
es
push
sub
popa
loop
addr16
jecxz
and
and
xchg
imul
sti
test
sahf
test
xchg
ds
in
iret
push
xchg
xchg
roll
and
aas
jmp
push
inc
jo
sti
dec
stc
outsb
repnz
dec
addr16
sbb
loopne
add
or
and
pop
jle
adc
xadd
push
lea
rolb
inc
jge
lret
adc
mov
add
pusha
jmp
dec
cmp
cmp
xor
inc
add
pop
mov
das
cmpsl
and
push
pop
outsl
wbinvd
enter
mov
jnp
orb
out
jl
mov
push
sbb
inc
mov
stos
repz
int3
inc
fistpl
fbstp
mov
test
lds
iret
lret
outsb
jne
fidivs
aas
mov
imul
dec
sbb
shl
xchg
xchg
out
out
les
out
cmp
push
pop
stos
cltd
imul
mov
push
mov
xchg
xchg
mov
dec
dec
mov
sub
mov
push
pop
mov
arpl
xlat
cli
adc
push
jp
and
dec
xorb
pop
insb
mov
lods
add
and
push
lret
daa
adc
jg
jp
jge
negl
cmp
inc
push
cmp
lret
sub
pop
mov
and
xor
push
lds
add
int
scas
fwait
mov
push
xchg
addr16
outsl
ljmp
add
mov
add
mov
clc
fnstcw
aaa
or
jp
inc
flds
stc
xchg
mov
or
add
jle
imul
rcrl
xor
outsl
out
hlt
mov
inc
mov
pop
aaa
mov
xlat
xchg
and
jnp
mov
mov
cmp
push
push
dec
or
mov
sub
cs
push
inc
inc
fsubrs
sahf
adcb
push
lods
jecxz
out
cltd
inc
xor
push
imull
jecxz
adc
into
into
or
ffree
inc
and
add
and
sbb
aaa
lds
addr16
sub
adc
xchg
xlat
lods
leave
pop
mov
push
lahf
fucom
adc
dec
cs
arpl
adc
push
pop
dec
mov
cmpsb
push
sbb
mov
or
mov
adc
out
movsb
aad
pop
xchg
in
daa
dec
mov
aam
cltd
sub
int
adc
rcrb
out
xor
int3
negl
shlb
mov
iret
ss
inc
mov
outsb
and
stc
inc
pop
imul
fmuls
call
aaa
inc
sub
outsb
mov
push
scas
mov
test
mov
imul
sub
loop
jg
and
js
pusha
sub
loop
insl
xor
cmpb
movsb
sarl
jb
pop
jecxz
out
repz
je
sti
push
sti
fucomip
mov
fiadds
xchg
ja
test
inc
mov
add
or
ss
fists
lret
mov
aam
dec
or
pop
rcr
inc
mov
or
and
adc
sbb
cmpsl
mov
or
jmp
cmc
mov
fstpt
push
inc
out
pop
jne
fdivp
pop
sti
out
push
pop
aas
cld
and
fs
pop
sub
inc
sub
cmp
jb
cmp
sbb
rcrl
push
xchg
lret
mov
lahf
jo
stc
arpl
and
jle
inc
dec
repz
pop
xor
and
outsb
add
inc
push
xlat
jle
push
lret
fnstsw
outsl
insb
push
or
mov
ja
inc
int
iret
adc
sbb
and
lea
mov
inc
push
lret
push
mov
mov
loope
cmp
cmpsl
stos
ficompl
ljmp
pop
js
cli
xchg
out
arpl
and
mov
push
shrb
gs
push
push
xchg
xchg
outsl
sub
fadds
mov
hlt
xor
sbb
xchg
dec
xchg
popf
or
xor
daa
shl
mov
and
iret
gs
ja
adc
and
push
cmp
dec
cmpsl
mov
and
push
clc
push
and
hlt
dec
xor
xor
mov
inc
lea
inc
cmpsb
cld
push
cmp
ljmp
jbe
or
xor
cmp
push
je
sub
add
ds
jo
lcall
pop
cs
dec
fs
jp
push
movsl
or
idiv
pop
cmc
add
out
aaa
sub
sbb
lahf
ds
imul
lock
scas
sahf
lods
cs
adc
mov
cli
in
fnstcw
notl
xlat
in
add
jb
jmp
sahf
push
cmpsl
iret
sub
aam
jno
pop
mov
inc
mov
in
sti
sahf
jge
cmp
xchg
lods
jle
xchg
xchg
stos
jns
sub
jb
stos
fsubrs
dec
ljmp
fsts
aam
out
sbb
jae
jle
mov
dec
enter
add
inc
mov
rcrb
push
pop
loope
repnz
mov
cwtl
movsl
andb
out
xchg
sbb
in
lods
push
xor
lea
pop
lret
sub
sub
xor
dec
test
in
dec
lds
cmp
addr16
inc
lock
pop
lds
jge
inc
sbb
fsubrl
sbb
pop
dec
sub
icebp
pop
cmpb
pusha
out
test
jbe
lods
pop
es
push
xor
stos
jecxz
lea
adc
js
dec
sbb
movl
jo
insl
mov
lcall
mov
addl
out
fwait
add
in
std
adc
fldl
xor
ret
stos
inc
fiaddl
test
shlb
jae
std
fisttps
in
push
sbb
jno
lcall
ja
and
movsb
jp
pusha
and
sub
cld
lcall
sub
mov
cltd
imul
clc
cld
je
outsl
fnstsw
in
jae
sbb
fmuls
cwtl
push
nop
packsswb
mov
fstp
jns
xor
cmpsl
sub
push
sahf
xchg
xor
dec
sub
pop
adc
mov
pop
insb
arpl
mov
cld
or
or
fwait
in
push
pop
mov
scas
mov
adc
dec
stc
imul
stos
dec
pop
cmp
or
pop
sbb
inc
call
out
lods
iret
sbb
dec
inc
jns
adc
shlb
out
sbb
insl
and
sbb
cltd
push
sbb
fimuls
sub
push
ljmp
add
aaa
jmp
push
dec
mov
push
cmp
adc
insb
pop
orb
push
pmaddwd
stos
lret
adc
cmc
or
dec
cmp
cmpl
jo
imul
insl
ret
cmp
push
jb
xor
push
jge
call
or
push
shrl
roll
clc
pop
add
mov
fwait
or
mov
or
or
scas
or
jns
iret
cli
iret
mov
push
mov
hlt
jmp
mov
pop
and
fwait
sbb
outsb
movsb
fiaddl
sbb
notl
dec
mov
add
imul
inc
cli
pusha
cmp
out
cwtl
sub
push
jb
fdivl
fwait
xor
stc
std
push
nop
sub
leave
lahf
jp
inc
jp
aas
dec
jns
push
xor
jp
or
cmpl
hlt
push
mov
stos
push
xchg
daa
pop
push
into
sub
xchg
loopne
cltd
and
push
xlat
outsb
jg
js
mov
das
and
xlat
mov
mov
xchg
jne
ret
mov
test
push
cwtl
scas
lods
nop
pop
xor
jo
cmpsl
pop
add
mov
shr
fstpl
dec
add
les
ja
cmp
cmp
ss
es
into
pop
add
pop
xlat
iret
loop
mov
push
jl
pusha
stc
xchg
jecxz
cld
inc
enter
xchg
fdivl
lods
jae
mov
ret
xor
mov
xchg
xchg
dec
mov
enter
popf
mov
push
insl
push
ds
or
fnsave
jcxz
or
xor
arpl
sbb
inc
mov
xchg
das
jbe
cmpsl
lret
xor
push
mov
mov
bnd
gs
xor
lahf
dec
mov
shl
cmpl
call
xlat
scas
mov
enter
adc
sub
incb
jbe
ret
mov
mov
add
and
mov
push
pop
push
hlt
add
mov
cltd
push
xchg
aam
cmp
sbb
ds
sbb
and
cmc
test
and
leave
push
inc
adc
add
sub
aam
push
mov
lret
push
jle
mov
daa
xchg
jmp
lret
add
add
push
xor
fadd
inc
js
adc
cmp
dec
notl
or
movsl
mov
mov
daa
lds
add
mov
dec
inc
or
mov
add
mov
aad
movsb
enter
inc
cmc
adc
push
popa
mov
out
ret
js
pusha
fwait
mov
out
cmp
dec
or
add
loop
jbe
pop
incb
cs
adc
pop
ja
xchg
push
mov
mov
push
fildl
in
jg
mov
jecxz
push
in
xorb
cwtl
push
sahf
dec
jns
cmp
jge
xor
and
pop
mov
fs
out
mov
lret
imul
rorb
add
lret
push
je
pop
mov
mov
in
pop
cld
and
pop
cli
rolb
call
cld
inc
sub
lcall
or
loope
dec
call
or
pop
rcrb
sbb
cmp
inc
icebp
ds
sub
cmpsl
adc
adc
or
mov
mov
stos
jp
mov
cmpsb
rclb
ds
lret
pop
ds
fsubrl
fsubrl
in
rcll
xchg
pushf
mov
outsb
mov
sti
mov
add
ret
mov
ljmp
repz
and
sub
pop
mov
adc
pop
int3
into
cmp
adc
cmp
cltd
push
sub
popa
lock
ja
and
ja,pt
sahf
mov
push
mov
push
pop
lock
add
jb
mov
imul
push
cmpsl
or
fsubrs
aam
sub
jb
xchg
xchg
or
test
push
adc
ret
or
pop
int3
fs
mov
push
push
dec
mulb
int3
negl
dec
xchg
add
push
jbe
cli
shr
sub
dec
test
lock
xchg
mov
sbbb
fdivrl
aad
sub
adc
xchg
insb
adc
sbb
fcomps
scas
out
call
add
imul
sub
bound
popf
sbb
xchg
std
cli
adc
inc
test
inc
pop
adcb
adc
xchg
test
pop
push
jl
daa
jo
das
xorl
scas
adc
adc
mov
repnz
mov
imul
addr16
dec
xorb
aas
dec
lods
insb
sarl
or
lea
mov
jne
repz
push
dec
cli
sbb
testb
push
loop
clc
js
imul
add
jno
or
xor
dec
hlt
mov
jno
inc
dec
iret
sub
push
pop
lret
je
or
mov
cmpsb
dec
sbb
sub
insb
pop
mov
imull
aad
lcall
outsl
shll
test
push
scas
dec
adc
ret
cmpb
sti
call
add
add
mov
cltd
sub
ret
mov
push
dec
arpl
xor
popf
push
push
cmp
cmc
mov
mov
pop
sub
sahf
outsb
cmp
mov
test
adc
jl
mov
aaa
leave
rorl
push
xor
nop
jle
xlat
fs
dec
ret
cmpsl
jno
das
mov
mov
fsub
mulb
mov
sbb
sub
dec
iret
jp
add
stc
cmpsl
es
mov
fdiv
sbb
mov
mov
jns
insb
pop
mov
xchg
mov
xchg
fnstcw
ficomps
xchg
sub
inc
mov
pop
xchg
imul
pop
xchg
adc
icebp
xchg
dec
sahf
aaa
or
mov
roll
mov
lea
xlat
mov
mov
imul
aad
cmp
mov
mov
add
fiadds
call
xchg
sbb
popf
pop
fs
mov
adc
cmp
andl
pop
fnstenv
lret
xchg
repnz
test
dec
insl
mov
mov
ffree
lock
lods
pop
je
cmp
sahf
rorl
lds
aad
out
add
es
jp
jp
aad
lods
lock
adc
inc
lret
ja
out
push
jge
stc
xor
add
into
dec
jmp
rcll
fwait
jmp
jle
and
cmpsb
ljmp
xchg
add
pop
mov
cmp
pop
xor
int
dec
push
xchg
repnz
gs
in
aas
adcl
xchg
mov
ljmp
out
push
clc
pop
scas
mov
ret
lods
stos
repz
jbe
mov
jnp
cmp
push
cltd
xlat
mov
inc
and
cmp
sbb
push
adc
stc
mov
jecxz
sbb
or
je
mov
ds
ret
or
xchg
push
and
pop
loope
insl
sub
in
popa
scas
ljmp
gs
push
popa
add
imul
xor
xchg
lahf
or
lahf
pop
gs
loop
xchg
pusha
fldl
shll
pop
xor
adc
jno
xlat
jnp
or
and
xchg
gs
and
data16
add
addl
cmp
xchg
dec
dec
repnz
ficoml
dec
jae
out
aad
adc
or
jp
or
aad
jnp
xor
push
stc
pusha
and
cmp
rcll
mov
lcall
sub
inc
mov
scas
bound
std
ret
aam
cmp
sbb
and
pop
setnp
mov
ss
pop
add
push
scas
add
rolb
mov
mov
add
xchg
filds
lret
std
cmp
inc
aaa
xchg
or
loop
data16
cmp
pop
adc
scas
xor
ljmp
stos
cmpsb
pop
scas
addl
mov
repz
imul
xor
imul
or
pop
cmp
mov
dec
pop
push
xor
mov
notl
fdivrl
mov
mov
mov
int
insl
jne
cmp
mov
pop
cmp
adc
lret
adc
and
outsb
sbb
push
push
loop
clc
lds
adc
cmp
loop
sub
sub
iret
mov
pop
jns
push
jno
and
mov
lea
or
cli
das
mov
dec
sarb
outsl
jmp
testb
jo
add
push
lods
inc
in
pop
inc
dec
or
dec
lds
adc
add
jno
rcl
es
inc
outsb
push
icebp
movsb
mov
addr16
push
dec
mov
mov
and
adc
and
popl
sti
pushf
inc
jl
repnz
xchg
mov
dec
sahf
sahf
sahf
movsb
out
jo
cltd
icebp
adc
jae
loopne
mov
std
es
jmp
je
mov
or
push
sub
ret
insl
jne
lret
jg
loopne
fnsave
sar
jno
pusha
mov
popa
adc
mov
fwait
ret
add
mov
jo
add
in
push
add
jnp
and
jmp
cmp
push
sbb
sbb
inc
jl
jp
aas
mov
call
ret
cmpb
or
jb
loope
mov
testl
jle
xchg
ret
push
xchg
cld
jae
lret
addl
xor
push
and
cwtl
sub
lock
mov
xor
loopne
add
mov
push
mov
jl
xor
sti
cmp
vpmulhuw
jo
fldenv
arpl
call
popf
mov
jae
pushf
xorl
push
sar
jo
in
iret
inc
popa
adc
lcall
mov
movsl
mov
or
insl
push
cld
in
roll
sbb
mov
scas
and
je
or
out
xchg
mov
addr16
cmp
xchg
sbb
fmul
mov
sub
mov
xor
mov
fsts
shrl
cltd
pop
mov
inc
stos
xor
push
dec
jbe
movsl
jo
xor
push
pop
adc
lods
ss
mov
fistl
jns
es
fsubl
jno
sub
movsb
ret
add
cmp
call
pop
pop
dec
incl
popa
mov
cmpb
andl
cmp
inc
jl
inc
lret
mov
push
adc
les
je
gs
cmp
sbb
push
lahf
sub
jecxz
push
icebp
je
xor
inc
adc
jno
movsl
inc
mov
insb
enter
lock
mov
lock
add
push
or
push
push
scas
pushf
mov
adc
das
push
pop
push
imul
or
ret
and
inc
clc
mov
xchg
lods
pop
mov
out
add
lock
fmull
inc
mov
and
loopne
lds
loope
push
xor
pop
aas
shrl
sar
xchg
sbb
into
jge
loop
jbe
call
add
mov
dec
jne
xchg
mov
dec
adc
sbb
mov
jmp
les
xchg
pop
fisubl
or
ret
arpl
sahf
dec
loop
sbb
loop
movsl
dec
out
daa
sub
ja
xor
lods
inc
sub
jl
inc
and
subl
jmp
adc
sub
lcall
cld
leave
pop
or
adc
cmpsb
xlat
sub
xor
sahf
jmp
mov
stc
or
push
sahf
iret
cmp
mov
fidivs
inc
mov
cmp
push
lcall
push
loop
sub
scas
jb
pop
dec
dec
cmpsb
mov
loop
outsb
mov
shll
repz
lea
aad
push
add
addr16
or
mov
data16
sub
dec
push
and
ret
cld
sahf
sub
inc
bound
dec
repz
push
adcb
into
repnz
xchg
cmp
insl
pop
or
imul
sub
stos
pop
repz
jno
cli
add
mov
mov
les
jp
outsl
fwait
and
cwtl
lret
sbb
push
add
or
push
repnz
sub
in
xor
fs
aad
add
fsts
mov
mov
cmc
ds
test
pop
push
cmpb
fwait
addb
fdivl
idivl
sti
dec
mov
rorb
aad
mov
lcall
loop
sbb
jp
mov
fs
hlt
cmpsl
jge
pop
mov
scas
xchg
push
shlb
xchg
inc
cmpsl
cld
imul
fucomip
xchg
scas
push
lea
popf
adc
sbb
test
aas
test
mov
fistpl
mov
cmp
xor
dec
stos
andl
lcall
imul
sbb
push
push
daa
xchg
cmp
xlat
frstor
add
icebp
lcall
lahf
pop
into
push
leave
outsl
mov
sbb
lahf
aam
push
fwait
cld
cs
and
xchg
mov
enter
dec
push
scas
nop
or
insb
lea
push
mov
dec
lea
enter
insb
xlat
mov
or
repz
adc
pop
cld
cli
dec
cs
push
rorl
and
mov
stos
mov
stc
je
stos
pop
push
xchg
nop
loope
incb
mov
addr16
mov
popf
xor
mov
shl
pop
mov
push
push
mov
je
icebp
dec
addb
jmp
cmp
push
jns
in
mov
daa
mov
jno
das
pop
mov
stos
outsb
aad
jmp
pop
es
push
shl
inc
adc
and
dec
ror
pushf
lahf
stc
mov
and
ds
sub
sub
inc
hlt
jae
out
cmpsl
into
jno
cmp
jge
and
pop
xorl
adc
ret
inc
inc
imul
or
rolb
sbb
mov
ja
mov
popa
vmovaps
shll
jle
rorl
push
jecxz
xchg
shl
movsb
cmp
es
jp
psadbw
mov
dec
push
sbb
mov
cmp
clc
mov
pusha
stos
add
push
mov
fidivs
sbb
push
and
dec
sbbl
mov
in
lods
dec
xchg
adc
cmpsb
adc
cmp
or
mov
into
in
out
pusha
push
into
push
mov
shrl
pushf
fsubrl
fdivs
or
fwait
in
fsubrs
xlat
mov
popf
test
mov
push
scas
popa
icebp
jae
sbb
xchg
jge
inc
mov
jnp
mov
pushf
aad
unpckhps
addr16
pop
andl
in
pusha
dec
adc
mov
push
or
inc
pushf
fsubr
mov
test
leave
leave
jb
test
push
xor
mov
in
jno
fstpt
into
xchg
mov
push
sbb
push
icebp
jne
xchg
dec
mov
sub
leave
xor
push
ficomps
inc
mov
pop
mov
scas
dec
jl
aas
mov
pop
pop
pop
in
movsl
mov
sarb
or
push
mov
fnop
adc
mov
xor
fwait
and
insl
mov
jne
add
mov
push
inc
sub
out
jle
mov
arpl
mov
adc
inc
sub
lock
and
fisubrl
gs
sbb
inc
imull
push
insl
push
inc
xorl
lea
push
leave
mov
pop
add
sar
iret
cs
sub
popa
adc
xor
pop
leave
mov
sbb
or
int3
rolb
adc
and
jg
mov
mov
test
jbe
in
loope
out
jecxz
cs
xor
movsb
out
movsb
pop
mov
jo
sbbl
outsl
lock
rcrl
push
push
xchg
dec
mov
int
out
mov
out
insl
sarl
sub
les
mov
es
sub
or
jl
xor
add
mov
adc
negl
cmp
cmc
inc
out
dec
aam
in
push
push
cld
adc
xchg
dec
stos
test
or
dec
sahf
push
mov
sahf
lahf
mov
xchg
arpl
divl
outsb
fwait
xchg
mov
insb
inc
fxch
std
pop
icebp
pop
sbb
or
aad
add
std
cmc
outsl
adc
pop
mov
mov
adc
and
cmp
cli
arpl
jge
add
imul
outsb
dec
repz
mov
in
jno
sti
outsb
andb
into
fisttps
dec
shll
xchg
pop
pop
cmp
dec
xchg
out
push
shrb
rdmsr
mov
push
pop
jecxz
fstpl
mov
xchg
jg
ficomps
lods
in
xchg
jns
push
hlt
and
dec
inc
decb
stos
aad
cmpsb
mov
mov
mov
cmp
inc
mov
mov
outsl
mov
inc
inc
jge
xorb
xchg
xchg
sbb
push
lods
inc
fwait
repnz
dec
pusha
dec
or
and
jne
sti
xchg
pop
cmp
pushf
mov
imul
ss
adc
xor
repz
jne
cmp
cmp
jns
sub
cltd
inc
pusha
pop
mov
dec
or
icebp
fst
mov
gs
mov
test
or
adc
sbb
xor
mov
and
adc
jo
or
cmp
lret
jae
push
popf
push
push
stos
add
sbb
imul
cmp
scas
xchg
push
xor
arpl
jmp
js
bound
stc
jecxz
mov
lret
dec
cs
sahf
pop
mov
call
pusha
mov
out
mov
xchg
xchg
xor
aam
stos
xchg
sbb
rcrb
adc
lcall
xchg
adc
lret
or
jo
sbb
addb
cld
ljmp
mov
lods
lret
repz
sbb
cmp
xchg
adc
xchg
add
dec
ret
sub
inc
pop
or
jp
mov
cli
inc
movsl
fwait
or
loope
shrl
ja
out
push
add
or
pxor
out
in
das
push
arpl
loope
jmp
ja
andb
pushf
outsl
inc
push
rcll
sub
cmpsl
adc
notb
lods
mov
incl
mov
inc
fistpl
les
test
in
mov
decl
adc
or
dec
and
stos
enter
add
lret
sbb
cmp
pusha
cltd
imul
sti
stos
dec
sbb
push
and
or
mov
les
inc
test
xchg
pushaw
and
aas
fs
into
bnd
push
push
mov
sti
dec
jecxz
jge
mov
dec
fimull
lret
out
mov
mov
cltd
jmp
mov
notl
add
fldl
sbbb
popf
and
cmp
es
vunpcklpd
enter
jb
mov
xchg
mov
cmp
fadd
adc
fistl
aaa
sbb
mov
jge
fbstp
sbb
and
push
mov
sbb
or
add
mov
mov
jbe
cwtl
ret
xor
and
flds
or
andl
loop
outsb
pop
movsb
mov
mov
jle
cli
out
mov
push
push
jb
and
dec
jecxz
pop
shr
test
or
fisubrl
scas
jns
jo
and
in
cmp
mov
and
dec
dec
mov
nop
rorl
pop
divb
pop
jae
jp
jl
std
out
fucom
rorb
or
data16
xor
jp
out
pop
push
mov
hlt
jge
jl
push
shr
arpl
scas
daa
loopne
out
add
cmc
in
jle
fwait
jae
sub
sub
jl
sub
cmpsb
out
dec
jecxz
in
aaa
ss
fcmovu
mov
ja
aad
add
and
sahf
and
out
jne
into
xor
jb
les
sbb
sub
stc
add
pop
xchg
cmpsb
fs
adc
xchg
es
shlb
sub
in
call
sub
insl
popa
push
inc
adc
dec
jae
sarb
adc
dec
pop
sbb
inc
arpl
jge
icebp
fstpl
inc
xor
icebp
sub
lret
lds
jl
lret
mov
lcall
or
xchg
add
sub
hlt
ret
push
adc
negb
insb
adcb
popa
dec
inc
or
test
inc
cld
pop
mov
xor
enterw
jge
jae
mov
ret
mov
insb
sub
cmpsb
mov
pop
in
and
mov
add
jo
pop
les
or
jb
and
js
dec
ds
lock
add
pop
cli
fdivp
dec
xchg
jns
lods
jl
fisttpll
jge
ljmp
mov
shr
not
insb
fstpl
es
cli
test
sub
data16
or
imul
xor
cli
insl
inc
std
popf
inc
insl
les
sub
outsl
mov
out
dec
pop
aad
inc
jns
stos
sub
js
xchg
lods
dec
mov
cmp
inc
mov
xor
jns
sub
movsb
push
cltd
sub
xor
add
push
mov
sahf
mov
push
jle
mov
loopne
adc
cmp
aas
jecxz
and
push
cmpsb
jno
aaa
int
and
movsb
iret
adc
sahf
lcall
clc
stos
add
mov
sbb
sub
cmp
push
sub
push
pop
pop
hlt
lgs
mov
stos
insb
adc
std
xchg
adc
mov
call
dec
imul
add
cmp
cld
enter
mov
fstpl
add
mov
aam
jno
mov
pop
xchg
push
jno
jmp
xchg
cwtl
dec
ds
pop
push
imul
mov
sub
xchg
loopne
addr16
cmpsl
inc
fists
inc
jns
jecxz
das
xor
xchg
stc
jg
xor
jbe
pop
dec
mov
push
pop
imull
lcall
jno
and
push
xchg
cltd
sub
sbb
pushl
bound
les
xchg
jo
cmp
pop
push
push
js
scas
sbb
fdivrl
sbb
loope
sub
mov
cmp
mov
mov
sarb
ds
mov
dec
inc
jl
dec
or
sbb
xchg
sbb
repnz
jg
cld
dec
scas
adc
mov
push
rcll
mov
mov
cld
frstor
mov
insl
ret
out
or
or
ss
aad
cmp
cmp
dec
dec
inc
mov
fcoml
xor
scas
or
sbb
out
sarb
cltd
pop
sarb
push
cmp
hlt
mov
cli
lahf
popa
xchg
sub
dec
sbb
daa
mov
fsubrs
mov
adc
or
dec
pushf
cmp
cwtl
xchg
aam
das
mov
pop
inc
and
and
mov
sbb
sbb
outsb
in
xor
lret
test
es
mov
jmp
pop
ret
outsl
xchg
jmp
xchg
sar
jnp
sub
jecxz
and
mov
cmp
das
mov
and
push
jns
add
push
jb
mov
dec
pop
loop
out
into
xchg
lods
es
sbb
jl
cmp
xor
xor
mov
mov
push
mov
jle
add
mov
out
pop
lods
cli
push
or
mov
adc
or
into
nop
and
cmp
pushf
jmp
fisubrl
xor
sbb
cltd
dec
es
data16
fstps
mov
loop
jb
enter
and
int
and
js
icebp
push
sbb
shr
push
in
addl
sbb
sub
lock
mov
lock
sub
dec
pop
push
cmp
dec
inc
push
lahf
rol
hlt
cwtl
loop
dec
std
out
es
inc
and
push
push
push
movsl
xchg
pop
cmp
mov
mov
insb
iret
xchg
or
adc
or
scas
insb
push
clc
daa
ret
cmp
fidivrs
inc
sbb
cmc
ror
add
aas
imull
push
inc
xchg
rcrb
faddl
loope
repz
fsubl
mov
and
js
push
push
lods
ficompl
or
gs
pusha
cwtl
mov
cmp
pop
mov
aaa
roll
dec
sbb
xchg
mov
mov
and
push
loope
jno
cmp
sub
dec
insb
xor
sub
into
movsl
insb
sub
sahf
repz
xchg
jecxz
and
adc
jecxz
push
int3
notb
ret
in
fs
mov
dec
cmpsb
jns
xor
jp
lcall
mov
popa
or
mov
sub
jno
out
dec
scas
repnz
jmp
cmpsb
sti
push
jle
and
mov
dec
push
call
mov
cmp
xlat
icebp
sbb
cmp
and
sbb
xchg
clc
das
mov
stos
inc
mov
dec
mov
test
jb
xchg
xchg
mov
cmc
enter
jg
mov
dec
sub
movq
sbb
pop
xchg
out
int
ja
je
mov
mov
jmp
add
insl
lret
push
and
mov
and
push
xchg
decb
subl
les
cmpsl
movsb
cli
icebp
push
add
mov
pop
jge
stc
jecxz
loopne
fistpl
jne
js
popf
pop
daa
div
fwait
std
pop
cmpsl
insl
and
sbb
test
mov
adc
add
mov
adc
xchg
call
xchg
dec
mov
jnp
pusha
adc
sarl
adc
push
mov
aam
pop
mov
callw
out
cld
out
push
mov
stc
lret
xchg
jno
xchg
mov
mov
mov
pop
aam
push
mov
out
jb
fcomps
push
jns
jp
jecxz
mov
and
and
sub
mov
les
push
pop
mov
fists
add
imul
call
addr16
in
cli
or
lds
movsl
dec
mov
icebp
rorb
sahf
pop
scas
shlb
cmpsl
loope
mov
mul
push
out
mov
icebp
mov
leave
inc
cmp
add
cmc
pop
outsl
or
imul
int
mov
jmp
lret
mov
les
and
add
lods
add
jg
mov
in
dec
mov
es
outsl
or
xor
fsubl
add
insb
mov
fisttps
pop
cmp
fsubp
sbb
mov
fdivrs
pop
lods
pop
dec
mov
leave
imul
mov
or
jmp
cmp
shlb
rol
jp
sbb
and
js
adc
xchg
mov
adc
jae
movsl
and
push
sbb
lods
daa
adc
add
adc
push
arpl
mov
cmpsb
loopne
popl
sti
jae
out
addl
xchg
pop
sub
jp
ret
add
js
jecxz
test
stos
call
cmc
hlt
and
jl
mov
pop
mov
mov
stos
jl
in
out
sbb
adc
push
pop
in
outsl
mov
xor
icebp
cli
hlt
bound
cmp
cmp
into
jp
lods
ss
aas
subl
addr16
nop
ret
or
data16
push
or
movsl
bound
jecxz
add
mov
adc
xorl
out
aas
out
dec
push
insl
xchg
lahf
je
je
cmp
idivl
push
cmpsl
imul
jno
adc
hlt
or
les
inc
aam
mov
sub
xor
or
sbb
xor
imul
in
out
popa
popf
fstpt
cs
dec
mov
jbe
dec
outsb
inc
int
pop
mov
cmp
inc
sub
jns
inc
fucom
sub
cmp
dec
gs
loop
pop
gs
jecxz
lret
jo
inc
inc
jne
es
sub
bound
mov
sarb
push
stos
testb
lcall
lods
fwait
mov
insl
sbb
push
jle
push
mov
mov
push
test
fimull
pop
dec
es
mov
lret
inc
push
into
push
pop
popf
outsl
ja
and
movsl
dec
push
xchg
in
daa
xor
pop
xchg
jmp
mov
mov
enter
cmc
into
add
cwtl
push
dec
sbb
aad
sub
test
adc
jle
arpl
mov
jmp
mov
jne
jmp
sti
sub
pinsrw
mov
rclb
push
cli
scas
lods
sti
adc
iret
mov
shlb
pusha
lods
mov
dec
push
mov
mov
inc
test
dec
enter
fcmovne
scas
loopne
imul
pop
rolb
inc
enter
or
sahf
insl
pop
lods
push
test
adc
out
cli
xor
in
pop
jae
mov
loope
push
int3
fcompl
sub
test
cltd
je
sbb
mov
lret
pop
push
pop
jae
out
insb
inc
cmpsb
or
pusha
dec
fwait
mov
jl
or
jb
outsb
imul
jp
adc
xor
mov
jecxz
xchg
ret
loopne
dec
xlat
mov
data16
fldl
nop
movb
push
imul
aaa
popa
push
cs
xchg
push
xor
imul
inc
mov
lret
cli
aas
xor
popf
rol
cmp
mov
and
lcall
jmp
in
push
xor
mov
mov
cltd
mov
push
repnz
push
adc
pop
mov
add
mov
repz
pop
stos
rcrb
xorl
sub
outsb
inc
into
jbe
xchg
test
mov
scas
jmp
pop
into
insl
add
repz
fstpt
pop
dec
out
or
scas
addr16
mov
and
ret
mov
lods
repz
cs
push
dec
xchg
test
cli
rcl
mov
mov
scas
das
test
lret
or
out
push
add
in
out
repz
fst
add
pop
rolb
jmp
jne
inc
xchg
loopne
pop
repnz
jg
insb
add
loop
ror
sub
inc
fimuls
inc
mov
mov
and
or
in
rolb
cmp
ret
hlt
int3
or
xor
inc
std
jnp
cmp
inc
mov
or
push
gs
paddq
arpl
sbb
je
add
pop
and
push
pop
mov
and
pushf
std
mov
inc
das
jnp
inc
scas
cmp
rcrb
and
adc
adc
cld
inc
or
roll
and
dec
pop
aad
arpl
push
pop
pop
scas
inc
test
stos
ret
sarb
dec
mov
stos
sbb
lret
sbb
jne
xchg
jecxz
fwait
push
jnp
lcall
jecxz
add
andb
pop
inc
cli
sub
add
and
pusha
mov
add
std
aaa
inc
pop
push
and
sub
in
cwtl
sbb
fwait
push
out
shrl
xor
xlat
xor
bound
or
imul
ss
cmp
data16
jl
jle
adc
inc
mov
adc
and
dec
addr16
in
push
mov
ret
stos
mov
loope
pop
dec
fnstcw
jl
data16
in
test
push
adc
jle
push
fdivl
popf
or
cmp
mov
jne
bswap
push
jbe
rclb
xchg
pop
push
stos
xchg
and
insb
pop
popa
add
dec
ss
cltd
sbb
test
pop
lods
loopne
inc
call
test
sub
ficoml
pop
fnstsw
xchg
cld
scas
mulb
mov
cltd
data16
data16
fs
aaa
inc
push
adc
xlat
in
mov
loopne
repz
or
fidivrl
mov
inc
lock
lcall
adc
sbb
jle
iret
fimull
ds
inc
int3
push
ss
addb
jl
es
mulb
movb
popa
lret
xchg
dec
mov
stos
rorb
add
sub
jg
call
mov
stos
enter
je
cli
dec
or
add
es
fisubrl
mov
mov
mov
jbe
call
test
scas
pusha
inc
aam
push
pop
mov
sbb
leave
pushf
subb
push
sarb
and
dec
inc
out
les
es
xchg
push
jmp
or
pop
sub
pop
xchg
int3
or
mov
ret
aaa
jae
xchg
mov
test
cmpsl
rcl
dec
test
ljmp
popa
leave
inc
vandpd
aas
pop
sub
push
out
stc
xchg
mov
add
or
clc
outsl
fbld
std
dec
aas
dec
mov
add
out
mov
call
xchg
sub
iret
test
into
stos
xchg
and
rorb
mov
push
test
fcmovnu
inc
je
jmp
mov
mov
rcrb
sub
repz
cli
daa
cmc
bound
inc
aad
pop
pop
dec
mov
push
dec
cld
sub
sbb
mov
cs
idivb
jns
insl
pop
push
xor
dec
push
push
aam
lds
sub
movsl
hlt
loop
scas
add
dec
outsl
aam
mov
test
aam
in
dec
dec
sbbl
dec
inc
jl
adc
xchg
test
lods
fiadds
push
daa
adc
inc
repz
mov
mov
imul
bound
cmp
fwait
inc
jnp
push
sub
mov
mov
adc
nop
enter
cmpl
sbb
into
mul
mov
mov
clc
cwtl
hlt
ret
mov
pop
jns
aas
inc
mov
test
xchg
push
xchg
adc
cmp
sbb
loope
mov
enter
mov
mov
movsl
outsb
jo
out
sub
pop
mov
jno
popf
es
lods
mov
dec
fwait
mov
cmp
mov
pop
daa
loope
lcall
cli
jecxz
fs
lods
sub
add
test
test
pusha
vmovlhps
sbb
inc
and
sub
hlt
imul
add
lea
pushf
cmp
gs
adc
shll
push
rcrl
mov
out
add
bound
cmp
pop
pusha
mov
lea
je
aas
sub
leave
push
jle
shlb
push
pop
jmp
cmp
test
xchg
jbe
mov
mov
movsl
or
les
xor
imul
dec
xchg
mov
xorb
sbb
push
aam
shlb
shl
mov
adc
adc
mov
lock
cwtl
int3
push
sahf
inc
add
icebp
mov
push
shrb
pop
xlat
push
rolb
mov
ja
push
push
icebp
hlt
mov
test
cwtl
pop
xchg
enter
push
inc
inc
add
lret
inc
mov
mov
mov
fwait
push
ljmp
arpl
add
fbld
scas
sub
xor
lahf
add
mov
xor
cmpsl
stos
adc
seta
add
and
sbb
adc
inc
fdivs
push
imul
test
pop
movsb
das
adc
add
dec
cmp
mov
fucomp
cmp
add
fstps
jbe
xor
call
fldt
add
dec
enter
addr16
fsubl
inc
sbb
mov
cmp
lret
sub
pop
insb
jne
cmpsb
push
sub
orb
push
push
mov
iret
push
mov
movsl
cltd
das
adcb
in
fisubs
jns
aam
mov
lahf
data16
and
inc
jb
lods
adc
ja
lds
push
stos
lods
jp
mov
dec
mov
jnp
fiaddl
push
add
sbb
sub
and
aas
mov
loopne
imul
call
call
cmp
packssdw
mov
xchg
fnstenv
sbb
push
rcr
cmp
adc
adc
inc
js
or
cmp
sub
fbstp
or
or
sbb
mov
pop
inc
and
or
sbb
and
or
popf
dec
out
mov
insl
dec
xchg
push
js
hlt
out
aam
pop
enter
and
out
pop
es
mov
add
daa
sbb
dec
mov
andl
mov
sti
or
out
popa
enter
or
popf
or
mov
sbb
xchg
or
lods
mov
mov
push
push
xchg
add
inc
in
out
mov
mov
push
imul
dec
lret
add
mov
jne
xchg
cmpsl
push
pop
mov
push
arpl
mov
pop
ds
mov
mov
push
test
inc
inc
test
push
xchg
test
push
popf
push
and
loopne
hlt
mov
lcall
cli
and
xchg
pop
dec
filds
in
xchg
cwtl
lahf
or
dec
cld
shll
add
outsl
out
fldt
nop
out
pop
cmc
std
push
cld
mov
sub
nop
cmpsb
or
jne
mov
pop
push
test
pop
sub
xchg
fstl
aad
insl
imul
out
inc
mov
add
jbe
cmp
divl
pop
lcall
jle
insb
jbe
fwait
aad
shrb
out
mov
ret
or
jne
cmpsb
cld
out
dec
andl
test
lret
or
je
pop
imul
sbb
sbb
leave
mov
sbb
xchg
popa
in
dec
rcrb
js
cmp
jg
push
xchg
mov
or
aas
jno
lods
xchg
test
fdivp
xchg
sbb
cmp
fnstcw
mov
xorb
adc
jbe
pusha
jno
sbb
imul
dec
fsts
dec
xor
out
lret
mov
addb
ror
mov
sarl
hlt
ret
xor
enter
or
and
insb
inc
dec
fistpll
imul
scas
lods
shl
nop
out
or
or
or
or
into
or
dec
sbb
mov
fdivr
and
and
inc
lcall
add
ja
and
lds
sbbb
push
imul
mov
pop
jle
mov
rclb
testb
movsb
mov
push
leave
mul
imul
aas
sbb
pop
mov
push
jmp
gs
scas
push
enter
cmp
inc
fs
mov
or
movsb
lea
mov
adc
add
test
out
mov
jle
adc
cmpb
fidivs
or
dec
mov
icebp
xchg
in
pop
mov
jbe
and
arpl
inc
sub
xor
inc
lea
adc
jb
lret
mov
dec
lds
push
rolb
jp
push
push
lods
pmulhuw
pop
dec
fs
ret
sub
fmul
and
jno
cmp
xchg
movsb
sub
cmp
push
inc
cmp
mov
lret
jae
sbb
pop
inc
and
pop
sub
ficoml
xchg
mov
sub
in
xlat
or
xor
cmp
xchg
push
push
or
imulb
or
cmpsl
mov
push
xlat
or
vminss
js
dec
mov
lcall
ljmp
mov
into
and
jecxz
adc
cmp
aaa
dec
in
ret
out
inc
cld
push
imul
dec
cmpl
mov
mov
movsl
popa
ret
mov
fld
in
icebp
inc
sub
cs
out
xlat
fwait
jns
repnz
ror
mov
stos
cwtl
mov
cmp
clc
jg
xor
jae
fs
pop
xor
mov
adc
dec
repz
in
mov
ljmp
adc
push
jecxz
and
push
mov
xchg
in
lahf
rcrl
stos
lods
mov
not
stos
push
mov
jbe
sarl
mov
std
daa
mov
or
pop
pop
rcll
fdivl
loopne
or
sub
and
add
outsb
xorb
pop
jae
data16
sub
sbb
mov
iret
adc
sub
test
mov
test
fstps
push
dec
stos
mov
les
push
repz
jmp
xchg
mov
ss
rorb
cld
sbb
repz
sbb
pop
ret
jb
adc
xor
ljmp
jae
mov
sbb
aam
xchg
add
js
lcall
sbb
pop
push
or
adc
xchg
ja
push
xlat
cmp
aas
aas
mov
cmp
jb
dec
jge
xor
nop
lock
jp
or
dec
push
push
xchg
cli
push
rcrb
xlat
movsb
lods
sbb
push
push
mov
int3
or
loopne
sti
jne
data16
fstpt
xchg
jmp
or
insb
pop
mov
in
push
push
pusha
xlat
loopne
pop
mov
lahf
pop
into
lcall
cmp
imul
mov
movsl
sub
jae
repnz
pop
push
jb
cmc
jecxz
fdivrl
sub
add
icebp
outsb
nop
xchg
and
repz
dec
inc
mov
dec
xor
mov
xor
stc
jmp
xor
arpl
test
popa
xchg
mov
mov
xchg
fildll
push
rcll
call
imul
jmp
cli
repz
cs
push
int
and
dec
add
and
xor
test
inc
inc
or
lods
mov
pushf
lods
push
or
rcrl
divb
cmp
loopne
or
sbb
dec
repnz
dec
arpl
dec
cli
js
push
insb
xor
jne
adc
pop
dec
mov
mov
add
xchg
rolb
ljmp
jae
std
push
jno
or
cld
cmp
mov
dec
jo
adc
daa
or
int3
inc
push
bound
adc
mov
xchg
jge
push
push
leave
mov
cmp
popf
fdivrs
jl
dec
push
cmpsb
cmp
cmc
loop
rorb
inc
and
xchg
test
dec
lods
cmp
mov
sar
push
out
imul
mov
cld
loope
aas
aam
sbb
test
mov
sbb
xchg
jecxz
leave
xorb
rclb
jbe
pop
sub
push
int
pop
xchg
adc
mov
rol
ret
xor
push
jnp
and
loopne
cwtl
jns
loope
xchg
loop
or
push
push
ret
es
rolb
mull
leave
rorl
into
ljmp
mov
pop
sub
mov
sub
mov
sub
xchg
mov
jno
std
rcr
adc
push
sub
adc
fsubl
insl
adc
jp
xchg
aad
adc
add
push
nop
int
ljmp
xor
cmc
lcall
and
test
mov
mov
add
lret
sbb
lock
dec
mov
mul
int3
dec
mov
xchg
adc
je
add
pop
add
push
inc
lret
orl
push
push
mov
mov
hlt
sub
sti
js
push
mov
data16
or
outsl
nop
sbb
fwait
mov
pop
add
fs
lcall
xchg
popf
add
jg
add
ss
jmp
mov
shl
fdivr
mov
in
mov
out
push
or
outsl
test
loopne
cmc
loope
sub
dec
or
push
lds
mov
nop
jecxz
ret
bound
mov
int
pop
into
or
inc
xchg
subb
iret
xor
js
mov
adc
sbb
test
push
and
mov
in
mov
mov
fs
pop
jmp
lahf
push
dec
test
rclb
cmp
call
scas
fldcw
iret
in
out
xchg
inc
out
movsb
xchg
adc
fdivr
in
lea
inc
push
hlt
in
insb
xchg
xor
dec
or
lods
mov
stos
test
push
int
fwait
xchg
mov
pop
mov
testl
test
daa
cmp
pop
xchg
add
test
imul
fadds
mov
mov
sti
sub
shl
lcall
dec
pop
and
or
jp
dec
movsl
jl
in
lds
lods
xor
rcrb
push
sbb
xchg
popf
dec
repnz
or
adc
and
outsl
pop
enter
jns
inc
insb
mov
and
imul
jl
mov
adcl
jnp
mov
mov
mov
je
fwait
add
addb
fdivrs
cmp
mov
out
push
pop
aaa
enter
and
push
mov
cmp
xchg
push
pop
iret
shll
xor
jg
adc
sub
popf
mull
add
mov
je
jmp
call
pop
popa
mov
arpl
decb
scas
xor
in
mov
enter
add
inc
test
out
and
pop
cmp
outsl
or
xchg
stc
mov
ljmp
cmp
sahf
ja
mov
int3
inc
pop
push
test
cs
sar
mov
or
cmp
cmpsb
enter
or
mov
xchg
jnp
xchg
adc
xchg
movsl
cwtl
sbbl
fwait
sbb
cmpsl
push
sbb
sbb
dec
add
shll
data16
out
test
movsb
adc
dec
xor
jmp
sbb
popa
popa
xlat
pushf
dec
aad
cltd
fldl
pop
rolb
adc
jne
lret
arpl
jp,pt
frstor
pop
aas
outsb
testl
rorl
ja
add
push
sbb
shrl
mov
sub
or
sub
mov
shrb
icebp
jnp
jno
ret
and
fwait
sub
repnz
xchg
xchg
adc
cmc
sbb
pcmpgtb
test
or
subb
jae
mov
pop
xchg
inc
ja
pop
xorb
lods
inc
and
inc
popa
fs
xor
lahf
jg
nop
sti
cmp
test
xchg
add
icebp
addr16
shrb
mov
sbb
mov
ret
insl
xorb
nop
pop
jge
mov
lret
jae
push
xor
jmp
or
iret
test
lea
fisttpl
push
sub
jbe
inc
insl
imul
cmp
mov
mov
xchg
fcoms
dec
dec
outsl
hlt
mov
sahf
mov
insb
popa
and
lods
push
lods
lods
sti
test
mov
in
lods
adc
cmpsl
imul
mov
out
mov
or
pop
out
push
cmp
movsb
vprotb
ret
int
daa
lods
inc
push
adcl
dec
mov
test
xor
mov
jne
les
int3
imul
fisttps
push
repnz
mov
outsb
xchg
pop
jmp
scas
adcl
jl
std
add
cmp
ds
lret
mov
jbe
fists
sub
pop
sbb
mov
mov
aad
mov
cli
int
and
adcb
sbb
jo
mov
add
jnp
sub
test
mov
dec
aaa
jnp
mov
sti
popa
sbb
sti
enter
iret
adc
xor
in
es
adc
inc
cmp
push
mov
jne
ds
shrb
insl
and
es
mov
xchg
repz
jo
mov
inc
outsb
test
fcoms
xor
push
mov
xchg
push
pop
mov
push
jb
jno
adc
loope
out
sbb
lahf
pop
aad
push
jg
arpl
mov
jge
loope
into
imul
jl
iret
xor
into
cmp
cs
das
scas
cmp
push
push
dec
shll
cmc
addr16
pop
out
sub
rcrl
add
adc
shll
pop
cmpsb
loopne
subb
sub
cmp
dec
sahf
popa
xlat
mov
fs
pusha
or
dec
les
mov
adc
adc
pop
insb
add
dec
mov
daa
and
int3
adc
sti
dec
imul
inc
sub
or
mov
jmp
dec
push
push
xchg
addl
mov
add
mov
test
test
es
sti
xchg
fisubl
xchg
sti
mov
and
clc
pop
arpl
xchg
test
sbb
lahf
out
pop
push
add
mov
mov
jl
dec
sahf
js
xchg
rcrb
mov
adc
outsb
dec
andl
xor
xchg
mov
dec
imul
adc
fsts
adc
lods
jne
jmp
out
js
nop
jnp
lcall
ljmp
sahf
mov
or
jo
and
scas
les
pop
adc
loop
mov
loope
pop
or
xorl
movsb
ss
pushf
inc
js
clc
mov
ret
cmp
pushl
mov
jge
jne
push
sub
andl
arpl
stos
inc
rcrl
push
cli
addb
dec
jbe
in
mov
adc
mov
xchg
pop
outsl
pop
push
cmp
sbbl
inc
outsl
fcoml
cld
cli
xor
pop
mov
cmp
es
adc
fldl
arpl
ficoms
add
ds
subb
aam
and
mov
pusha
jl
push
int3
xor
xor
xchg
or
adc
jecxz
pusha
cwtl
sbb
popa
enter
push
out
mov
outsl
and
aad
stos
or
push
adc
ljmp
sub
inc
arpl
sub
leave
fistpl
lret
xor
stos
in
adc
popa
add
inc
or
rep
mov
xorl
movsl
add
jno
pop
sar
in
test
jo
xor
mov
das
aaa
fs
sarb
scas
shr
sub
xchg
mov
les
push
mov
mov
adc
cli
cwtl
push
pop
out
jecxz
mov
pop
in
ljmp
addl
fdivs
mov
in
lds
pop
jecxz
adc
dec
jl
mov
dec
stc
dec
mov
pop
jmp
mov
adcl
ret
inc
mov
repnz
incb
sub
aam
push
sub
ret
insb
inc
data16
inc
imul
outsb
stc
and
mov
inc
fisttps
pop
mov
jb
sub
jns
and
sbb
cmp
or
sbb
ja
sarb
cmp
or
daa
je
inc
imul
mov
stos
sub
shl
and
pop
test
stos
test
les
mov
add
int
dec
cli
sbb
inc
movsb
jo
mov
inc
mov
push
sbb
je
in
push
cmpsb
jns
aaa
mov
sub
popf
mov
mov
lods
xor
sub
push
inc
int
insl
testl
mov
xlat
nop
movsb
sub
mov
fsub
nop
cmp
mov
ss
jne
jne
sahf
push
les
xlat
fstps
sbb
sub
cmpsl
call
aam
lret
lahf
and
int3
mov
popf
fcompl
jo
add
shl
push
aas
mov
jne
or
sbb
jecxz
ja
hlt
sbb
mov
aaa
adc
xchg
aaa
out
mov
idivb
lret
jecxz
aaa
adc
dec
stos
fisubs
jle
adc
push
pop
push
dec
imul
jmp
mov
mov
ret
pop
std
clc
pop
jl
push
mov
stc
prefetch
or
mov
cs
icebp
sub
stc
fsubrp
dec
ds
jle
push
adc
mov
shll
lcall
adc
sbb
stos
jp
pop
gs
sbb
filds
xchg
shrl
out
outsl
xchg
inc
jbe
call
shrb
subb
mov
loope
in
pushf
int3
dec
sti
scas
mov
xchg
daa
xor
pop
lret
mov
mov
and
inc
in
pop
out
cli
std
pop
jo
cwtl
pop
pop
push
lock
sbb
lret
push
mov
cld
sub
inc
imul
insb
fsts
jb
jno
xchg
stos
jmp
lcall
or
arpl
imul
sar
arpl
pop
loop
imul
and
cmpsb
mov
push
mov
stc
add
mov
cmpsb
adc
out
and
loope
adc
fstpt
mov
stc
xlat
push
cmp
sub
push
cmc
add
int3
fisubrs
or
nop
mov
or
mov
and
pushf
nop
mov
js
or
inc
mov
lret
jo
xchg
hlt
fimuls
dec
fucom
xchg
adc
in
jb
lods
jns
xchg
add
fists
push
cmpsb
or
and
mov
aas
mov
inc
outsb
ja
pop
inc
outsl
sub
testb
pop
rcrb
and
jle
push
pusha
imul
lock
addr16
xor
push
xchg
test
mov
adc
mov
inc
scas
loopne
mov
push
jle
xor
and
insl
cmpb
xchg
push
les
mov
mov
arpl
push
imul
inc
icebp
aaa
in
and
or
mov
pop
rcl
mov
sbb
ss
in
push
popf
pusha
xchg
xor
dec
push
in
mov
aaa
out
enter
add
lcall
pop
js
xchg
adc
dec
jno
push
lods
cmp
fmulp
jmp
sub
in
xchg
loop
shl
test
push
cmpsb
shlb
fneni(8087
aam
repz
stos
add
jge
inc
out
dec
leave
xchg
sbb
inc
and
aam
loop
ret
ret
jns
ja
mov
inc
cmpl
pushf
inc
ds
sub
pop
sub
frstor
cmp
fs
pushf
mov
fdivl
pop
push
push
cmpsl
das
push
movsb
cmp
push
xor
jnp
fiaddl
test
add
cltd
out
aas
dec
repnz
stos
lods
jg
and
int
adc
xlat
push
jne
out
xor
mov
ss
clc
cld
or
xlat
fldt
jnp
pop
lret
xor
arpl
xchg
imul
add
movsl
push
leave
std
sar
insl
and
inc
cmp
pop
mov
ljmp
or
mov
divl
pop
xor
or
dec
inc
leave
push
test
pushf
repnz
imul
add
pop
xlat
inc
jecxz
inc
pop
popa
xchg
test
punpcklbw
sub
test
aas
mov
fstpl
push
inc
mull
xor
lds
call
xchg
push
dec
fnstenv
fcomps
dec
add
ljmp
iret
xor
cmp
inc
sbb
xor
lods
leave
jne
in
mov
and
inc
xor
dec
xor
mov
xchg
nop
stc
mov
push
das
sahf
mull
jns
je
and
or
sub
mov
ds
sarl
xchg
xor
fisttps
roll
xor
cli
add
cmpsb
cmp
pop
pop
sti
mov
imul
mulb
lock
mov
adc
push
or
adc
mov
mov
pop
add
mov
mov
mov
int
cmc
xor
pop
fisubs
sbb
shll
je
jno
or
pop
repnz
pushf
push
lret
sar
pop
loope
mov
xchg
jl
pop
mov
mov
int3
add
jbe
hlt
fs
xchg
mov
dec
test
mov
mov
dec
movsb
or
or
sahf
and
dec
inc
xchg
push
inc
dec
fucomi
pop
xor
mov
jmp
push
mov
adc
sub
pop
popa
in
mov
fists
mov
mov
xchg
jo
pop
and
jns
fdivl
mov
sbb
and
ret
adc
leave
jno
divl
je
repz
and
pop
mov
xor
sub
test
mov
cmpb
mov
or
aam
sub
rclb
into
outsl
add
adc
gs
adc
xchg
jnp
push
and
or
mov
add
sub
ds
jae
push
fiaddl
aad
xor
adc
lret
mov
aam
push
adc
aad
daa
aam
mov
ficoml
call
fcomps
fisubl
and
jg
push
pop
insb
inc
or
cmp
std
xchg
cmpsl
mov
call
cltd
shlb
arpl
nop
xchg
into
jbe
mov
mov
fisttpl
adc
cs
mov
mov
xor
int3
pop
out
int3
fstps
fimuls
and
ror
cmpsl
xchg
inc
dec
ret
jmp
mov
xor
jo
aaa
les
fldenv
repnz
push
fisubl
je
int
cli
mov
dec
movsb
xchg
mov
xor
pop
ret
and
or
fistl
sti
cmp
cmp
stos
jmp
pushf
pop
jns
xchg
cmpl
in
ss
lods
fs
enter
int3
mov
mov
inc
or
fucom
inc
push
data16
scas
and
pop
int3
mov
xor
mulb
mov
sbb
outsl
in
aas
mov
add
cmpl
cmp
pop
and
fnsave
push
sub
add
scas
outsl
xor
or
mov
pavgb
xor
mov
add
jge
pop
repnz
mov
push
dec
sub
cmpsl
addr16
pop
shll
popa
ss
push
or
int
add
push
lds
lahf
sbb
ljmp
pop
mov
rcrl
add
xor
push
ds
outsl
pop
jl
mov
in
mov
leave
ret
andl
xchg
out
ja
jno
jl
push
loopne
inc
cmpsb
mov
add
pop
ret
fsubrl
xor
mov
xor
mov
mov
fwait
decb
lcall
sub
das
cmp
sub
jnp
fs
fs
mov
jne
pop
movsl
daa
cmp
mov
sti
jae
pop
icebp
sbb
sub
mov
stos
ret
inc
lcall
addr16
or
fimull
int3
xchg
pop
mov
mov
ficomps
jno
or
pop
xor
imul
inc
jge
insl
mov
shll
pop
pop
push
into
fidivl
adc
popa
lods
cmpsl
sbb
lods
mov
lret
daa
mov
daa
ret
pop
stos
lods
gs
mov
imul
scas
mov
test
mov
cmpsb
dec
jecxz
nop
dec
in
pop
js
dec
les
int
push
jg
imul
test
in
jmp
mov
fildl
push
adc
test
iret
ficomps
fstp
pop
add
cmpsl
and
or
lods
icebp
shlb
mov
cmp
push
dec
rcrb
aaa
push
push
jmp
push
sub
push
dec
inc
mov
bound
inc
jmp
sub
push
insb
xchg
sbb
xchg
sahf
add
loope
jno
shrb
xchg
sub
lret
fcomip
pop
dec
push
test
mov
scas
rclb
or
mov
fldenv
cmp
jle
in
inc
pushf
xchg
xor
movsb
mov
out
inc
pop
xchg
push
or
cmp
mov
mov
lret
mov
jo
mov
ljmp
mov
sub
call
xor
test
mov
cs
or
dec
sbb
and
dec
jb
mov
sub
lock
lods
movsl
xchg
imul
sbbb
xor
shrb
clc
push
push
bound
cmpsl
push
xchg
sub
xor
pop
test
mov
nop
nop
dec
mov
add
pop
or
push
cmc
popa
lahf
cmp
jb
ja
or
mov
add
adc
dec
or
hlt
mov
rcr
test
dec
and
les
jbe
dec
aaa
push
cmc
pop
mov
sti
mov
or
stos
dec
popf
sub
lods
xlat
xchg
xorb
mov
sub
cmpsb
jp
lahf
ss
mov
pushf
jne
sub
jnp
into
jecxz
pusha
add
cmp
inc
imul
insl
mov
push
out
dec
rorl
aam
push
popf
fnstenv
stos
cltd
shrl
pop
jmp
out
lds
fwait
mov
insb
enter
sub
and
mov
repz
call
mov
xor
push
adc
jae
and
mov
adc
data16
call
cmc
jns
add
lods
xchg
loop
jnp
sbb
fwait
movsw
adc
jnp
jmp
je
push
pushaw
add
fwait
push
lock
sbb
add
or
jp
push
stc
inc
into
push
mov
adc
pop
sub
xor
cmp
push
sub
adc
in
mov
or
mull
pop
dec
dec
push
lahf
inc
lea
in
popf
mov
mov
cmp
ss
icebp
xor
and
pop
jae
fsts
adc
sbb
dec
mov
lock
test
ss
pop
scas
in
mov
inc
mov
stos
ret
arpl
in
fsts
mov
mov
cmpsl
sub
push
sahf
rcll
push
mov
xchg
jne
xor
mov
rorb
and
stos
adc
sub
clc
adc
pusha
mov
hlt
xchg
ss
repnz
andl
xchg
pop
movsl
cmpsb
jnp
ficoml
ret
push
mov
mov
lock
add
cld
xchg
popa
addl
cvtpi2ps
fnsave
push
lods
dec
lds
push
push
pushw
xchg
cmpsb
cmp
pop
push
pop
push
push
sarl
sbb
mov
push
inc
iret
rcr
sbb
xchg
stos
aad
mov
out
xchg
gs
js
sbb
das
sbb
dec
push
push
xor
aaa
push
lret
lret
xchg
stos
mov
mov
loope
je
adc
movsb
test
nop
fs
cmpsl
pop
xor
mov
rcrl
mov
pusha
in
and
lret
xchg
loop
iret
das
loop
aaa
pushf
mov
pop
xchg
int3
push
faddl
pop
inc
sbb
xchg
add
xlat
movsl
push
xchg
fwait
or
loope
insl
pop
cmpsl
cmpsb
sbb
lret
jb
cld
fistl
stos
or
pop
mov
adc
mov
mov
mov
repz
es
test
mov
lret
pop
out
cmp
cs
out
rclb
ret
sbb
push
push
or
pop
xor
dec
stos
cmp
nop
cmp
pop
cwtl
add
or
mov
aaa
push
or
jo
out
fidivrs
je
add
nop
cmc
jnp
cmc
rcrl
leave
sbb
imul
xlat
adc
add
push
xlat
je
lock
add
xchg
and
inc
push
cwtl
sti
add
cmpsl
ret
push
pop
stos
sbb
mov
xchg
cmpsl
mov
out
aad
mov
imul
jns
xchg
sub
ret
dec
mov
push
or
push
in
dec
aas
dec
arpl
lea
loope
clc
js
insl
movsb
out
in
aad
push
xorl
bound
jg
dec
in
jl
add
arpl
shll
mov
out
pop
fistps
sub
dec
lahf
out
pusha
outsb
ss
mov
in
ljmp
sbb
xchg
xchg
cmc
loop
mov
fidivrl
or
repnz
int
jmp
cli
push
roll
push
ret
inc
cld
dec
out
icebp
xchg
xchg
jle
pop
and
inc
out
jecxz
test
inc
cmp
mov
pusha
inc
push
fldenv
shrl
mov
pop
dec
mov
cs
or
leave
ret
dec
sbb
aaa
je
cmpsb
add
sbb
sub
fidivs
fnstenv
nop
jmp
fistps
jb
jns
xor
scas
fs
lret
xchg
add
lods
dec
sub
insl
ror
inc
enter
dec
pop
jae
sbb
cs
sub
push
sub
into
sbb
fiadds
jbe
mov
jmp
mov
push
add
sbb
pop
add
cwtl
cmp
dec
sahf
mov
sub
xchg
mov
insb
movsl
pop
ret
adc
test
and
dec
jae
push
cmpsb
adc
xchg
shlb
arpl
push
fcoms
test
daa
js
jle
movlps
outsb
pop
adc
mov
mov
out
enter
mov
mov
mov
pop
push
pusha
out
xor
cmp
jle
loope
out
pop
push
inc
adc
pushf
mov
xlat
repz
or
fcoml
cmc
test
inc
mov
pushf
dec
lret
stos
pop
outsb
push
aaa
imul
sahf
jno
jmp
jae
dec
clc
cs
ret
inc
cmp
sbb
mov
or
fwait
cmpsb
inc
and
mov
popf
dec
inc
das
cltd
cs
mov
or
outsl
inc
out
xorb
cld
