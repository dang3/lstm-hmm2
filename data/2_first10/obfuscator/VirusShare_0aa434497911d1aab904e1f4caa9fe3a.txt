clc
cmpb
pushf
lea
jne
bsf
pushf
sar
pushf
sub
aad
movzbl
lea
mov
xor
adc
rcr
cmc
add
not
pushf
cmc
clc
mov
pushl
movb
test
call
pushf
lea
jne
lahf
xor
test
sar
mov
sbb
add
push
movb
adc
mov
mov
bt
test
call
lea
jne
lea
not
test
sete
mov
shld
cmc
rcl
shl
sub
cmp
cmp
pushf
lea
clc
pusha
stc
sub
pushf
clc
clc
pushl
popl
call
xchg
pusha
movb
pusha
movl
jmp
shr
dec
pushf
bswap
mov
movzbw
setg
seto
mov
pushf
test
push
xor
call
sub
sar
rcr
push
cwtl
lea
shl
cmc
push
rol
bts
movsbl
btc
push
cmp
xor
bswap
movzbw
movsbw
lea
pusha
pusha
push
mov
jmp
cmp
pushl
lea
ja
sbb
sar
sub
cmp
jmp
pusha
mov
mov
mov
lea
call
push
push
lea
jmp
lea
jne
push
call
pop
mov
movzbw
movsbw
pushf
lea
pushf
pushf
mov
lea
pusha
cwtl
movsbl
pushl
popl
pop
mov
lahf
pop
setge
movl
jmp
jmp
add
jo
or
add
add
cmp
add
daa
or
mov
repz
test
or
repz
or
add
add
add
je
add
fs
ja
dec
inc
pusha
sub
shl
mov
add
add
cmp
bsr
mov
shl
mov
jmp
movl
pushf
lea
call
push
pushf
pushl
lea
jmp
pushf
jmp
pushf
pushf
pusha
lea
ja
pusha
call
movsbw
btr
btr
sub
xchg
mov
movsbw
pop
jmp
push
movl
pushf
movl
pushf
push
lea
jmp
push
cmpb
pushf
pusha
jmp
pushf
pusha
lea
jne
movsbl
sbb
test
stc
mov
jmp
lea
jb
pushf
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
xor
jmp
sbb
dec
sub
mov
pop
mov
scas
adc
pop
jle
xchg
jl
mov
aaa
sbb
lods
pextrw
js
mov
jl
inc
ret
lcall
fwait
mov
in
adc
les
push
xor
and
inc
sti
loopne
mov
push
std
faddp
dec
test
add
aam
mov
push
movb
lea
jmp
not
mov
clc
push
cmc
xor
stc
cmp
stc
pushf
repnz
mov
pushf
pusha
mov
lea
jne
test
shr
test
pusha
mov
sub
shl
sub
xor
cmp
bswap
lea
cmc
clc
clc
sub
jmp
shl
shl
mov
mov
mov
add
call
jmp
movw
mov
pushf
mov
pushf
pushf
mov
jmp
mov
pusha
jmp
lea
ja
cmp
jmp
movb
inc
push
cmc
not
test
pushw
popfw
pushf
pushf
pushl
inc
call
jmp
adc
lea
pushf
pusha
pushl
ret
lea
ja
pushf
dec
sar
sub
sar
lea
add
setnp
push
pushl
mov
shr
mov
jmp
xchg
shrl
jmp
outsb
pop
push
or
sbb
pop
ljmp
stos
pcmpgtb
lcall
push
inc
mov
sahf
add
test
mov
rcr
inc
cmc
jp
stos
fisubs
dec
lds
int
mov
pusha
dec
mov
pop
test
fwait
loop
cmp
and
ljmp
pop
mov
push
or
pop
cmp
ss
repz
sbb
xchg
xor
jae
lds
ret
jl
data16
jns
cmp
add
lea
inc
jecxz
es
outsl
adc
fdivrs
pop
les
ret
or
cmc
push
add
js
mov
pusha
cmpb
movb
push
lea
jne
pushf
das
sub
aam
sub
xor
not
mov
pushl
add
call
xchg
movw
dec
pushf
shl
sete
movb
jmp
movl
pushl
pushf
push
lea
jmp
lcall
mov
xor
jp
in
addl
rcl
movsb
xor
jmp
pop
inc
movsb
mov
fwait
pop
sub
ret
sub
adc
fldl
dec
icebp
pop
mov
dec
xor
push
xchg
aam
subb
inc
sub
or
sarb
testb
xlat
add
pushf
stos
pushf
pusha
movw
pushf
lea
jmp
repnz
jmp
pusha
or
jmp
mov
xchg
push
ret
dec
sahf
add
jge
pop
faddl
fsubrl
cs
jne
out
dec
rol
out
jmp
leave
stos
or
jns
ret
mov
sbb
mov
xor
test
and
mov
inc
sarb
ss
insb
mov
lahf
dec
mov
ret
test
jnp
adc
mov
jp
inc
test
leave
imul
sbb
dec
adc
and
lea
jne
call
push
mov
xchg
movzbw
call
test
cmp
repnz
call
movb
push
movb
lea
ja
shl
push
sub
btr
rcl
btc
stc
sub
add
pushf
mov
rol
mov
cmc
call
stc
add
push
call
cmp
pushl
lahf
bswap
movsbl
lea
lahf
mov
pushl
call
into
pusha
inc
movsb
negl
xchg
mov
inc
and
out
push
mov
xchg
cld
fnstsw
inc
test
jmp
dec
popa
stos
or
jle
cmp
nop
cld
pop
mov
subl
sub
repz
xchg
sub
ret
mov
pop
mov
rcrl
sbb
fwait
push
pop
pushf
push
icebp
fldl
dec
lods
jb
mov
std
inc
add
sbb
xlat
xchg
jmp
mov
aas
in
cs
js
cmp
sub
or
add
inc
aam
add
add
add
add
add
add
add
enter
enter
enter
add
add
add
enter
bound
jecxz
pop
mov
sbb
and
popa
dec
inc
and
repz
pop
mov
out
sub
les
adc
icebp
test
lea
aam
mov
out
test
scas
insb
sub
xor
cwtl
inc
sbb
cmp
ja
xchg
jg
inc
daa
test
ret
mov
test
out
sub
aam
lcall
dec
rcrb
push
adc
mov
mov
nop
mov
out
aas
ss
push
cmp
sub
mov
aas
cmc
mov
and
inc
mov
push
pop
clc
sti
dec
lahf
cmp
out
push
pushf
test
fdivrs
lock
and
ret
ficoms
jne
adc
dec
negb
shll
xchg
xor
pusha
jle
push
jle
push
aaa
mull
or
sub
dec
xor
repnz
ret
jge
add
mov
inc
loopne
sbbb
fiaddl
out
cmp
dec
call
cmp
or
scas
imul
cmp
xchg
mov
push
ret
pop
jae
sub
dec
jle
mov
mov
mov
in
xor
sbb
and
mov
insb
fidivrs
pop
inc
dec
or
popa
dec
cmp
pusha
or
inc
push
lahf
sub
sub
and
es
xchg
cwtl
lock
leave
push
adc
fisubs
cmp
jge
lock
rcll
push
mov
inc
add
aad
push
je
data16
or
pusha
cmp
das
sbb
mov
add
sub
pop
popf
sbb
and
jo
dec
and
sub
aam
ret
add
xlat
fcomps
out
std
ljmp
xor
aaa
sti
or
hlt
sti
je
addr16
mov
xchg
or
insb
iret
adc
mov
dec
adc
fldl
cmp
cmpsl
inc
outsl
jmp
push
xchg
lds
movsb
fbld
add
lods
aas
add
arpl
mov
int3
movl
idivb
hlt
dec
std
jl
push
jmp
mov
or
dec
dec
sub
xchg
std
sbb
mov
mov
imul
add
dec
inc
xor
push
cmp
push
es
sbb
mov
cmp
inc
clc
xchg
pop
lahf
sbb
jnp
cmpsl
mov
test
lret
pop
jnp
pop
add
out
test
sub
mov
and
inc
push
xchg
addr16
addr16
aas
add
sahf
pushf
test
xlat
sub
sub
dec
repz
scas
cmpsb
adc
ss
mov
es
jle
mov
fldlg2
xor
and
int3
out
cld
sbbl
aad
or
insb
xchg
xchg
inc
cli
sbb
sub
xchg
xor
shll
inc
mul
fbstp
push
add
outsl
leave
sub
je
mov
mov
stos
xchg
sbb
mov
jecxz
xchg
xchg
imul
cltd
or
je
test
test
xchg
inc
xchg
add
mov
movsb
mov
xlat
hlt
and
cmp
add
clc
roll
mov
fwait
xchg
outsl
push
mov
mov
cltd
outsb
in
inc
cmp
adc
int3
cmp
adc
outsl
push
pop
inc
cwtl
cmpsl
and
popa
sub
jmp
or
xor
cmp
aad
xchg
pop
mov
or
ret
add
lcall
ds
stos
fisttpl
xor
cli
repnz
push
int
jmp
mov
fucomi
adc
jp
rcrb
dec
mov
lea
mov
test
imul
add
int3
fstpl
aad
jge
ffree
out
adcb
push
data16
popf
pop
imul
xchg
fcompl
adc
popa
push
outsb
mov
lea
add
ljmp
es
arpl
data16
dec
inc
stc
pop
or
ja
fnstenv
into
mov
and
sti
xchg
inc
dec
mov
add
fwait
mov
cmp
clc
cmp
lea
mov
fcmovb
or
add
jl
aam
imul
int
mov
outsb
xchg
mov
jge
pop
push
es
xchg
outsb
out
ret
mov
fsts
rcll
rcr
jl
pop
xchg
in
fldcw
aam
cmp
jle
jno
lret
xor
jo
and
popa
xchg
test
push
xor
push
xchg
and
or
mov
sub
xor
pop
call
testl
dec
ja
xchg
sbb
sbb
dec
shll
jae
pop
leave
test
divb
lods
lods
popa
or
inc
sbb
dec
push
and
outsb
cs
int3
dec
ficompl
or
mov
mov
pusha
ja
sbb
rcll
push
shll
adc
cmp
jbe
in
jg
cmp
push
sbb
jbe
mov
xlat
push
or
out
sahf
div
xor
pusha
jne
xchg
pop
frstor
sbb
sub
shll
push
insb
aam
dec
mov
mov
fdivrp
fnstenv
and
mov
insb
or
mov
decb
into
push
sbb
aas
push
shlb
das
and
pop
les
test
shll
jno
fsubr
ds
jecxz
mov
inc
js
in
push
sub
cmc
add
mov
mov
sub
call
lods
mov
mov
jne
sbb
push
push
repnz
fadds
mov
lods
int
and
ret
sub
xor
fmuls
xchg
mov
loop
inc
mov
stos
xlat
imul
mov
cmpsl
jecxz
cmc
dec
pop
xor
add
mov
xchg
xor
pop
loopne
pusha
sub
shrl
bound
push
loop
sbb
jl
mov
adc
insl
daa
xor
mov
cwtl
icebp
hlt
popf
lret
cwtl
scas
lods
push
mov
pop
push
in
movsl
add
lret
sbb
fistps
cmp
repnz
adc
pop
pop
sub
lret
and
inc
lret
mov
sbb
adc
mov
ret
xchg
repnz
cmpsb
push
mov
dec
jp
enter
xor
mov
jecxz
insl
out
outsb
inc
aas
ficomps
mov
jmp
cmp
out
not
or
cmp
fsubp
or
push
xor
jnp
inc
cwtl
shr
xorb
int3
je
sbb
in
mov
dec
xchg
mov
das
dec
push
mov
cmpsl
test
push
jle
outsb
les
cmp
std
inc
ja
xchg
daa
lahf
sbb
jne
dec
call
xchg
or
mov
out
lds
jae
imul
bound
and
rcll
fsubl
mov
scas
jmp
lea
mov
inc
or
cwtl
sub
dec
bound
dec
bound
pop
in
push
rol
nop
ja
out
xor
mov
jge
sub
pop
mov
cs
repz
xrelease
fadd
mov
xchg
mov
mov
mov
cld
pop
cs
sub
add
mov
or
testb
icebp
xchg
push
movsb
push
iret
xor
adc
and
test
mov
out
or
xchg
dec
dec
and
fisubrs
mov
daa
out
shlb
cwtl
hlt
jge
xchg
and
sti
push
test
and
xchg
lcall
hlt
sahf
ret
push
mov
lea
add
fcoms
fistps
call
mov
popf
xchg
hlt
or
lock
jl
jge
jb
mov
movsb
adc
je
cwtl
lock
hlt
lea
jne
xchg
jp
mov
imul
push
pop
and
mov
cmp
jl
fisttpl
cmp
jmp
jp
inc
lret
sahf
rep
int3
in
xor
popa
push
xchg
fcmove
call
int
pushf
push
xchg
cmp
bound
pop
and
or
sub
inc
in
mov
mov
inc
pop
mov
test
push
mov
je
in
lea
enter
in
xchg
mov
lret
iret
or
imul
sti
cmc
sbb
and
in
lret
pop
andl
jae
xchg
dec
out
cmp
lahf
repz
push
jae
adc
imul
jne
arpl
aas
cli
and
pop
push
popaw
dec
outsl
push
aas
mov
push
and
in
fwait
or
loop
mov
test
adc
and
mov
sub
push
xor
cmp
push
mov
repnz
xchg
cmc
xchg
add
or
inc
mov
pop
or
sahf
addr16
push
jmp
jecxz
mov
loop
insb
fwait
jle
xorb
mov
mov
dec
push
and
mov
stos
dec
and
xchg
rclb
pop
cmc
bound
xor
cltd
mov
jae
ds
imul
jo
adc
cmpl
jg
pop
jge
ljmp
push
and
add
call
cmp
push
inc
mov
shlb
inc
fisttpl
scas
in
pop
clc
popa
mov
xchg
cld
stos
inc
js
lret
adc
and
shlb
push
jmp
adc
mov
pushl
inc
std
int
and
test
aaa
xchg
inc
pusha
mov
dec
mov
in
sub
sub
mov
push
mov
xchg
insb
cmp
int3
pop
sarb
mov
cli
dec
pushf
orb
cmp
pop
pop
xchg
dec
push
cltd
xchg
in
jno
push
or
jecxz
mov
int
test
rcr
imul
push
pop
push
test
in
push
sub
cmpsl
in
adc
cli
cli
loop
push
test
cmp
mov
cltd
loopne
and
xchg
inc
cmp
pop
pop
dec
into
shrb
fstpl
mov
sbb
lcall
push
pop
xchg
mov
movsb
mov
mov
xchg
dec
and
out
popa
pop
insl
pop
mov
dec
decl
mov
or
sbb
pusha
push
push
out
ss
cs
jne
or
les
fwait
or
loop
inc
push
nop
sub
addl
aad
adc
cs
pop
subb
bound
int3
and
inc
add
das
out
cli
shl
pop
mov
or
add
add
mov
pop
pusha
pusha
pushl
ret
jne
pushf
mov
pusha
mov
push
lea
jmp
mov
movzbw
mov
lea
mov
pop
mov
jmp
pop
push
jmp
cmc
pushf
push
test
push
lea
je
pusha
call
pushf
movl
cwtl
lea
mov
call
repnz
call
jmp
pusha
pushf
lea
jne
adc
cmc
shld
pushf
mov
or
sub
neg
stc
test
lea
push
call
in
fidivrl
mov
mov
call
out
aam
pushf
jge
movb
repnz
mov
jns
ror
arpl
pop
dec
mov
test
cld
sti
lds
ret
rclb
cli
pop
mov
fstpt
adc
faddl
cmp
test
sbb
jmp
leave
les
xchg
fdivs
adc
test
inc
in
test
and
dec
jno
sahf
push
jmp
cmp
jmp
push
push
inc
push
xor
cs
insb
add
aad
and
scas
sub
or
xor
mov
out
xchg
rclb
mov
js
cltd
adc
cmp
outsb
sarl
adcb
loopne
and
sub
test
test
dec
cmp
aaa
xchg
xor
and
cwtl
or
mov
notl
and
out
das
inc
mov
pushf
dec
shlb
outsb
xchg
jae
subb
pop
lock
scas
repnz
jle
sbb
mov
cs
xor
push
jne
push
lahf
push
je
adc
daa
xor
inc
jle
lds
mov
out
nop
int
adc
mov
test
cwtl
cld
push
add
push
je
subl
jb
push
cmp
loope
or
mov
add
xor
mov
repnz
pop
mov
shr
add
jb
js
xchg
push
xor
and
repz
jne
mov
mov
mov
movsb
leave
mov
xor
pop
imul
xor
out
dec
sub
das
ja
add
xor
les
arpl
jmp
mov
mov
in
das
shlb
jne
lahf
les
jmp
mov
mov
js
mov
negl
cmp
dec
outsl
hlt
mov
mov
jmp
add
jge
or
push
inc
or
aam
or
test
or
scas
aad
add
rorl
leave
or
push
inc
or
in
or
add
push
inc
and
pushf
pushl
pushf
pushl
ret
mov
movb
lea
je
cmp
jmp
cli
addr16
sub
pop
pop
push
aad
out
adc
lcall
scas
iret
and
icebp
adc
in
push
out
mov
dec
jo
push
lret
out
int3
bound
ss
mov
pusha
subb
outsl
adc
add
jg
nop
jbe
shl
mov
test
or
dec
scas
adc
loop
inc
cmpsl
dec
iret
maxps
cmp
fsubrl
sarb
cltd
std
imul
outsl
xchg
std
loope
xchg
add
int
mov
push
mov
add
fisttpl
popf
test
inc
fmuls
clc
repnz
adc
incb
inc
arpl
cmp
add
push
jbe
inc
dec
les
or
bt
movb
cmp
jmp
not
mov
pushf
cmp
cmp
cmpb
lea
js
pusha
pusha
lea
jne
jmp
cmc
add
pushf
clc
stc
mov
bt
pushf
test
pushl
lea
jae
pushf
movb
lea
je
pushf
clc
jmp
not
call
mov
movsbl
call
stos
fidivrl
les
jge
call
sub
cmp
adc
ret
mov
bound
mov
mov
test
xor
lea
push
mov
insl
xor
push
scas
lea
insl
sub
mov
inc
inc
addr16
stc
pop
vmread
in
pop
std
push
dec
insb
insb
dec
xor
jmp
insl
mov
cld
and
addr16
addl
jmp
lea
je
bswap
pusha
mov
movsbw
mov
lea
call
clc
call
push
pusha
jmp
sbb
inc
test
xchg
sbb
cld
inc
lods
mov
mov
cld
sti
loopne
sub
lret
xchg
imul
and
out
jo
push
in
sub
imul
jnp
mov
insb
pop
addl
mov
add
icebp
fld
dec
insl
xchg
push
into
movzbl
jmp
lods
ffree
cmpsl
loopne
jns
scas
fildll
or
dec
xor
xchg
jb
mov
andb
int
xor
xchg
bnd
xchg
and
jp
mov
mov
xchg
add
int
iret
sub
fadds
and
arpl
out
ja
mov
cmp
movsl
jae
andl
test
in
ja
pop
add
dec
lock
mov
stc
sbb
insl
add
add
add
sub
lea
jmp
pushf
call
pusha
pusha
lea
jne
push
not
mov
clc
push
add
bt
pushl
movzwl
jmp
sbb
mov
js
adc
pop
dec
xchg
clc
pop
aas
mov
mov
negl
out
lods
xor
ss
mov
daa
mov
movb
xor
cmp
aad
push
mov
enter
mov
lds
pop
push
leave
sub
jb
shl
scas
jmp
rol
dec
insb
lahf
test
and
xlat
and
mov
xchg
dec
jb
mov
std
and
rcrl
movzbl
mov
pusha
jmp
mov
lea
ja
shl
ror
xor
shl
sub
mov
ror
sar
add
bts
and
bswap
mov
pushf
jmp
call
movl
pusha
mov
mov
mov
pushl
ret
lea
jne
setg
mov
push
shr
cmc
pop
sub
bsr
shld
shld
bsf
mov
pushf
stc
stc
sub
stc
bt
test
stc
pushl
popl
stc
test
pushf
cmp
pushf
movb
mov
lea
ja
and
adc
pushf
pushf
sub
shrd
lea
stc
lea
add
stc
clc
sub
shld
mov
stc
add
mov
cmp
cmc
repnz
call
add
bt
cmp
mov
call
ror
pusha
inc
test
lea
js
jge
cmp
jmp
rcl
shl
shr
btr
mov
cmc
cmpb
push
lea
jne
pushf
xor
movsbl
btc
movsbw
aad
mov
inc
add
stc
mov
stc
test
pusha
pushf
lea
je
pusha
push
lea
jmp
movw
movsbw
pushl
mov
lea
push
lea
pusha
call
mov
cmp
movb
add
pusha
jmp
movb
lea
jne
cwtl
jmp
pusha
movl
pushf
mov
pushf
pushf
pushl
ret
shr
jmp
shrd
push
shl
mov
add
inc
rcr
push
xor
sar
push
xadd
push
dec
push
movsbl
xchg
rcr
btr
mov
inc
mov
clc
mov
cmc
jmp
clc
sub
lock
mov
hlt
pop
cmp
xor
filds
gs
push
xchg
negb
mov
sub
xchg
adc
dec
jg
push
notl
mov
inc
lcall
dec
mov
test
in
lock
xchg
sbb
sbb
sub
sbb
jae
cli
les
mov
xor
call
aas
outsl
aad
sbb
and
inc
sub
jmp
mov
adc
pop
ds
outsb
stos
dec
mov
mov
push
addr16
xor
lcall
mov
fsts
mov
fwait
pmaxsw
aam
cmc
arpl
cmp
and
outsb
mov
imul
in
popf
add
insl
xchg
cmp
test
push
lods
push
cmc
lcall
push
stc
add
movsbw
movl
cmp
mov
cmc
clc
pusha
cmp
pusha
jmp
das
neg
mov
mov
sub
icebp
push
mov
sub
or
dec
cmp
cmp
shrb
or
pusha
addr16
mov
or
inc
mov
sbbb
mov
xchg
notb
jmp
stos
and
or
mov
dec
push
mov
xchg
or
negb
push
neg
les
cltd
sbb
mov
pusha
mov
jmp
lea
jne
cwtl
movzbl
movsbw
bswap
movb
bswap
pusha
mov
mov
jmp
add
push
pushf
mov
pushf
pushf
pusha
lea
jmp
stc
pop
mov
and
icebp
cmp
test
xor
cmp
les
sub
push
cld
ret
dec
push
push
jmp
mov
adc
and
adc
dec
push
sub
lea
jae
pushf
dec
mov
lea
cmp
dec
bswap
mov
shr
cmc
setno
mov
movb
sub
cmc
mov
repnz
push
call
call
call
out
push
jle
je
andb
pushf
add
sub
sbb
popa
inc
pusha
cmpb
int
stos
or
iret
aaa
sub
pushf
mov
inc
in
dec
insb
nop
out
shll
icebp
dec
das
negl
mov
jmp
jmp
jno
mov
push
fldcw
sub
mov
movsb
outsb
adc
lds
shl
push
sbb
inc
les
xchg
popl
lods
jmp
std
and
sub
adc
loopne
jmp
daa
jo
fs
jne
bswap
lea
pop
bswap
pusha
pop
mov
call
movzwl
shl
mov
test
pushf
pushf
cmp
add
jmp
call
lea
jae
push
push
pusha
lea
jne
jmp
imul
jp
cmp
xor
xlat
mov
sub
cmp
sub
mov
xchg
into
xlat
mov
iret
mov
jbe
or
mov
movsb
les
pop
dec
ljmp
mov
cmp
lods
cmpl
fistl
movl
jg
inc
insb
rdtsc
aad
lahf
inc
and
dec
fbld
add
jmp
jmp
lea
cwtl
jp
movsl
push
repz
out
inc
test
or
aas
in
sub
fsubp
mov
call
push
cmc
lods
int
mov
sub
arpl
mov
cmp
imul
jbe
add
cmp
outsl
mov
fst
ficoms
gs
inc
icebp
pop
push
sbb
jo
jmp
push
jno
xchg
cmpsl
int3
dec
inc
jns
scas
ja
loop
das
test
outsb
dec
mov
push
das
push
ja
cmp
ret
inc
andl
or
inc
push
aaa
jmp
imul
addr16
jnp
addb
daa
jmp
mov
push
les
jg
mov
jmp
repz
lahf
jle
xor
add
les
ficompl
mov
movl
mov
jmp
pop
div
push
lods
sbb
imull
add
inc
test
popf
jge
insb
xchg
shll
rclb
sub
popa
add
and
arpl
lds
mov
jp
imull
push
push
ret
dec
shll
ret
ss
inc
mov
mov
int
cmp
or
es
fists
in
icebp
xlat
mov
subl
loop
cs
adc
popf
les
pop
sbb
pop
test
cmp
cmpsl
mov
push
xor
std
pop
add
jge
lcall
xchg
jp
lods
iret
or
xchg
cld
mov
fs
xor
lcall
std
inc
call
jl
stc
and
pop
add
dec
push
push
imul
roll
xchg
in
lret
out
mov
push
pop
push
popf
adc
out
insl
xor
test
fsubrs
cmp
cmp
sbb
loopne
iret
repnz
ss
add
dec
and
in
cld
add
mov
mov
or
shl
bt
pusha
mov
test
repnz
call
negb
and
adc
pop
inc
and
xchg
xchg
xor
pop
out
aad
cmp
imul
pop
aaa
push
mov
out
loopne
test
pshufw
sbb
mov
fildl
inc
movsl
push
scas
and
jae
xchg
and
ret
jge
jne
push
lea
ret
loopne
pop
jge
xor
sahf
iret
inc
hlt
mov
testb
pusha
popf
inc
sti
lods
push
aaa
mov
jb
inc
imul
addr16
loopne
ds
cmp
fmul
repnz
cmp
pop
ror
mov
cli
pop
xor
xchg
and
mov
in
shll
xor
out
dec
insl
push
sub
subb
cld
and
out
nop
mov
les
mov
imul
mov
mov
xor
les
clc
jnp
neg
inc
xchg
out
cmc
sbb
cvtps2pd
dec
arpl
imul
cmp
cmp
lods
push
jbe
cmp
dec
fs
jne
lea
xor
stc
cmp
ffreep
dec
pusha
stos
xor
icebp
pop
cmpsl
or
and
sbb
iret
jne
mov
popa
std
mov
mov
orb
jge
sub
xchg
ja
ret
movsb
mov
mov
add
or
add
movsb
aaa
int3
xchg
push
push
scas
out
xchg
hlt
push
pusha
or
andl
dec
jno
mov
call
les
jo
stos
dec
lods
xchg
out
cmc
sbb
push
cmp
sbb
xchg
repnz
les
and
ja
mov
sub
adc
push
fsubl
int3
jmp
scas
rorl
jb
jl
xor
les
out
mov
adc
arpl
adc
mov
iret
outsb
mov
fldl
js
nop
jno
mov
mov
mov
in
into
loope
cmp
cmpsl
enter
aad
cwtl
cmp
andl
lea
je
pusha
mov
mov
movb
lea
jmp
lea
jne
shr
movsbw
shr
shld
mov
clc
jmp
push
lea
ss
adc
pop
inc
and
push
cmpsb
push
out
mov
jmp
les
cld
xchg
filds
sbb
pop
lea
jp
subb
out
push
mov
pop
scas
icebp
jmp
mov
pushf
movb
pushf
push
pushl
ret
std
daa
or
mov
imul
sbb
pop
aas
and
test
lock
test
in
dec
aaa
out
sbb
negl
pop
mov
repz
es
scas
loope
ret
push
mov
inc
test
lods
mov
push
cmpsb
add
xor
data16
mov
mov
sub
cmp
lock
jp
ficomps
cmp
mov
imul
pushf
pop
gs
inc
pushw
aas
jle
xchg
sub
jo
aas
loopne
les
std
mov
daa
push
fcmovnb
ret
leave
cli
sarl
sahf
andb
imul
popf
les
out
iret
xor
repz
dec
xchg
icebp
mov
iret
cmc
sbb
sub
int3
or
outsl
pop
mov
pushf
push
mov
or
cmp
sbb
jl
cltd
ds
pop
inc
sub
adc
xchg
and
dec
push
jbe
push
xchg
jns
lock
in
scas
iret
cmc
lcall
ja
std
fs
cmc
sbb
xor
pusha
mov
lret
dec
pusha
dec
into
rep
mov
fcmovnb
in
insl
shlb
xchg
cld
les
inc
mov
pop
pushf
cmp
stos
inc
xor
push
cli
fdivl
rcl
sarl
leave
daa
dec
test
jbe
filds
std
mov
sbb
repz
inc
es
icebp
loope
xchg
daa
repnz
das
sarl
mov
jp
adc
icebp
sbb
pop
shll
jmp
jb
jbe
xor
fsts
jns
inc
add
mov
test
push
push
js
fidivrs
sub
pusha
jmp
jle
sub
jne
xor
jns
sbb
xlat
test
jae
adc
jbe
or
push
xor
fdivl
xchg
daa
sbb
inc
and
and
ret
cmc
insb
mov
and
lret
xchg
les
push
js
fsubs
adc
shrb
andl
dec
pop
or
push
and
sub
jb
cmp
mov
dec
ds
or
pop
dec
outsl
popl
pop
divb
xchg
mov
and
push
jg
add
sub
sbb
dec
cs
les
rorb
notl
aam
das
push
xchg
jg
mov
ja
mov
dec
pop
lahf
and
fs
jne
shld
sub
pushf
pushl
ror
mov
test
test
shl
add
bt
rol
or
call
pusha
call
call
lea
jne
lahf
movb
push
bswap
setb
pop
push
not
mov
bswap
movsbw
lea
jmp
cmc
and
mov
clc
jmp
pushf
lea
jne
call
pushf
lea
jne
setno
call
aam
sti
popa
inc
lds
pop
das
push
push
fstpt
sub
lock
mov
mov
sbb
iret
lret
xor
cli
fisttpll
stos
dec
xchg
push
sbb
test
int3
icebp
jno
ficoms
les
and
fs
push
jb
add
mov
cmp
lcall
in
cmpsb
into
repz
mov
and
xor
cmp
dec
pop
idivb
lea
jns
push
push
movl
pushl
pushf
push
lea
jmp
scas
loope
mov
aas
movsl
lods
xchg
cmc
pop
aas
movsl
or
mov
inc
or
outsl
aaa
xchg
xor
xchg
lret
add
pop
lock
test
out
push
hlt
pop
mov
ja
cmp
les
nop
and
gs
adc
and
and
pop
push
lea
call
jmp
lea
jbe
push
movsbw
xadd
sub
test
inc
sbb
bt
mov
lea
shl
not
not
mov
neg
bts
add
movzbw
clc
pushf
bts
shr
btc
rcl
cmc
not
mov
btc
test
add
mov
pushf
mov
lea
pusha
pushl
call
jmp
stc
cmc
cmp
mov
lea
jae
rol
shl
mov
sar
mov
bts
adc
shrd
movsbw
mov
pushf
pusha
xor
call
call
lea
jb
pushf
bt
jmp
jmp
push
cmp
pushl
pushf
lea
ja
clc
sub
or
shl
sbb
rcl
add
call
test
cmp
lea
jnp
push
push
lea
ja
pusha
push
imul
cmp
push
cmp
add
pushl
pushf
pushf
pushf
lea
jmp
lea
ja
shr
mov
shl
setp
sub
bsf
mov
inc
add
cmc
sub
rcr
mov
rcr
neg
or
sbb
mov
pushf
repnz
jmp
test
cmp
movb
pusha
mov
push
lea
ja
pusha
jmp
cmp
call
adc
rolb
mov
jo
mov
and
dec
stos
loope
sahf
movsl
sbb
mov
cmp
pop
inc
jge
mov
je
dec
xchg
mov
sbb
gs
push
fadds
sub
negl
push
pop
lahf
push
xor
aas
fldt
outsb
jne
in
clc
pushf
jle
shll
popf
add
pop
pushf
dec
in
push
cmpsb
aad
negl
mov
pop
jmp
les
test
jbe
pop
shll
mov
mov
jbe
mov
leave
push
lods
jl
jecxz
int3
sub
push
cltd
mov
dec
outsb
btr
inc
lcall
adc
mov
cs
lds
dec
jl
loop
ds
xlat
sbb
jecxz
sub
mov
imul
dec
dec
aad
mov
push
mov
pop
cs
jo
push
les
popf
pop
cmpsb
add
pushw
orl
jmp
scas
push
negb
in
les
add
shlb
bt
pusha
test
test
push
movb
lea
jmp
pushf
pushl
inc
call
jmp
cltd
dec
sub
adc
and
push
ss
popa
sub
jl
repnz
pop
mov
leavew
dec
jecxz
lahf
xor
jl
ss
and
jecxz
out
push
les
idivl
mov
jns
adc
test
scas
xchg
mov
out
adc
pop
jbe
rorb
mov
pushf
lea
movw
push
mov
movl
movl
push
pushl
popl
pushf
mov
mov
pushl
ret
pushf
pushl
lea
jne
pushf
movsbw
lahf
pushf
movb
pop
setp
mov
jmp
pusha
adc
sar
mov
call
lods
bt
not
stc
test
call
call
je
dec
scas
adc
cmc
push
mov
inc
cmpsl
pop
imulb
mov
lahf
adc
std
bound
mov
aad
bound
inc
in
sub
repnz
and
mov
dec
adc
iret
pop
mov
and
aad
mov
or
pop
test
push
cmpsb
mov
dec
outsl
push
xor
std
mov
aam
faddp
dec
pop
cltd
pop
aad
out
movsbl
mov
jmp
popf
int
adc
rcll
mov
cs
stc
pop
cmp
cwtl
pusha
jg
je
mov
jo
push
icebp
xor
loop
sar
sub
sub
mov
pushw
roll
in
leave
xor
rorl
jmp
arpl
sub
lock
mov
cmp
cmp
mov
mov
ljmp
cmp
fdivrl
dec
mov
negb
mov
andl
sti
mov
pushl
add
int
mov
jae
pushf
push
lea
jmp
push
xchg
lret
xor
clc
pusha
inc
inc
and
imul
mov
ss
insb
or
cmp
les
xchg
push
lcall
out
xchg
shlb
lret
repnz
cmp
push
jle
fiaddl
add
add
or
into
xor
push
dec
stos
adc
faddl
pop
imul
sti
push
xchg
mov
mov
sub
push
jmp
push
mov
push
xchg
repz
subb
js
pushf
xchg
push
rcrb
mov
cmp
adc
in
shll
mov
jle
jl
fdivrs
fscale
mov
shl
cwtl
mov
push
addl
test
jmp
movb
pusha
stos
mov
push
pushl
lea
jmp
call
call
movzwl
sub
pushf
mov
cmp
add
stc
jmp
pusha
rol
rcl
mov
stc
test
cmc
cmp
repnz
pushf
lea
jne
push
lahf
movb
call
push
pushf
lea
jne
xadd
not
mov
call
jg
xchg
cmc
xchg
add
mul
push
dec
mov
xchg
subl
or
sbb
insl
pop
mov
xchg
xor
adc
aas
movsb
or
insl
shll
sub
dec
sub
or
notb
dec
fildll
pop
movd
or
mov
popa
mov
sub
mov
sbb
jo
stos
aaa
into
shlb
push
mov
stc
addr16
lahf
rcrl
sub
rorb
fnsave
inc
out
xchg
jbe
push
dec
xchg
jp
gs
sub
enter
ss
hlt
arpl
and
dec
mov
pop
add
js
cmp
pushf
ds
stos
pop
mov
cmc
dec
or
jo
scas
iret
adc
out
adc
insl
and
add
pusha
pop
popf
call
aad
and
pop
ds
push
popa
sub
insl
fnstcw
aaa
flds
test
lcall
add
ja
mov
cmp
push
jge
pop
leave
xor
and
xor
sbb
and
ret
xor
mov
lret
in
lfs
and
lds
cmp
imul
jb
inc
test
popa
int
and
int3
cmc
pusha
sub
insb
mov
cmp
mov
outsl
sarl
pop
mov
sub
mov
ret
or
inc
and
hlt
cmp
xchg
daa
sub
or
movsb
push
pop
scas
push
xlat
and
shll
push
mov
jle
jg
gs
das
shlb
aaa
fldl
and
out
adc
push
sbb
and
aas
bswap
mov
add
sub
sar
setl
shld
jmp
mov
lea
je
rcl
mov
call
lea
je
movsbl
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pop
and
jmp
adc
push
pop
mov
aaa
pop
test
test
cmc
outsb
int
xchg
mov
sub
int
adc
mov
mov
mov
xor
pop
lret
lock
dec
jp
jns
adc
fcom
mov
sub
push
mov
cld
cmp
and
fstp
outsb
movl
out
test
je
out
adc
rcrl
cmp
loopne
ret
dec
lock
pmaddwd
outsl
lods
push
dec
jecxz
pop
push
and
fldcw
sub
cmpsl
mov
dec
lock
pop
scas
cli
pop
cmpb
and
aad
lds
mov
cmp
xor
sbb
adc
lahf
out
lods
repz
stos
dec
jno
fwait
and
lcall
dec
push
dec
mov
adc
insb
mov
pop
repz
out
sub
sbb
inc
les
add
cmp
ret
cmc
or
adc
jge
mov
les
nop
add
jge
adc
popa
cmp
xchg
mov
add
test
les
dec
and
mov
ffree
dec
push
stos
ret
mov
push
sbb
test
push
mov
scas
ja
aas
loop
push
dec
push
and
or
sub
bswap
cmp
or
movzbw
lea
pusha
push
cmp
sub
pushf
pushf
jmp
icebp
and
imul
test
xchg
clc
fidivrl
cs
neg
cld
and
ret
pop
mov
and
push
popa
rolb
mov
and
inc
daa
in
in
sub
cs
repz
ret
pop
and
jno
adc
movsb
pushl
mov
dec
xlat
out
jno
jle
pop
enter
push
decl
rcll
js
fldl
imul
pop
cmc
nop
jb
cmp
and
or
shlb
fadd
dec
push
addl
lods
or
and
pop
sub
les
aas
add
ret
movsbw
pushf
lea
pushf
xchg
movsbl
pop
not
not
pushl
popl
cwtl
bswap
bswap
movzbw
push
setge
push
call
sub
sub
btr
pusha
add
add
pusha
ror
sbb
mov
xor
test
setge
mov
jmp
inc
bts
stc
mov
clc
test
call
lea
je
mov
call
pusha
pusha
stos
pushf
movb
movb
pushf
lea
jmp
push
movb
lea
jne
not
aas
movsbl
sub
call
jmp
repnz
mov
jmp
cmp
test
jmp
pusha
movl
push
lea
jmp
lea
jae
shr
xadd
shr
not
mov
btr
and
mov
cmp
lea
dec
dec
mov
cmp
sub
jmp
inc
dec
inc
ror
inc
dec
xchg
dec
bsr
and
add
mov
cmc
inc
sub
mov
call
push
push
lea
call
pusha
call
lea
call
pusha
lea
jae
pushf
setae
mov
mov
dec
inc
jmp
repnz
movb
lea
jne
pusha
bts
mov
movl
pushf
sub
cmc
rcr
pop
sbb
lea
cmc
pushf
clc
pusha
sub
test
jmp
cmp
pusha
inc
mov
in
jle
sub
sti
arpl
sbb
cltd
and
cld
adc
or
out
mov
outsb
pushf
mov
xor
out
xlat
and
cwtl
arpl
mov
shlb
sbb
sub
shl
add
jne
jge
mov
mov
loope
testb
dec
and
out
aas
data16
or
test
js
iret
je
in
dec
mov
ret
xor
sti
mov
and
das
push
cmc
pop
jns
dec
push
xor
lods
sub
pushf
lea
jne
jmp
imul
cmpsl
or
aad
sbb
popa
shlb
les
stos
or
push
and
push
mov
scas
out
jmp
stc
push
mov
cli
pop
cs
in
cmp
sbb
dec
mov
jmp
fbstp
jne
xorl
negb
xor
push
pop
in
int3
pop
mov
sbb
repz
popa
and
in
sub
xchg
cmp
sub
push
sbb
fisubl
test
loope
movsb
lret
nop
inc
es
dec
lods
dec
jae
cmp
es
in
xchg
jne
dec
dec
xor
add
push
lea
jb
cmc
jmp
clc
clc
push
cmp
mov
cmp
cmp
rcr
movzbl
mov
mov
call
jns
mov
daa
pop
lcall
xor
add
push
mov
aad
push
test
mov
pushf
icebp
rolb
in
clc
mov
add
mov
mov
int
pop
stc
fwait
xlat
lods
stos
xchg
insb
imul
scas
adc
std
inc
push
adc
mov
cmp
pushf
lret
fs
adc
repz
sub
negl
dec
mov
dec
dec
insl
lock
mov
push
lea
jmp
roll
mov
push
aaa
and
lods
nop
clc
push
aas
and
jnp
and
xchg
fiadds
out
mov
jne
cltd
std
mov
stos
dec
leave
insl
mov
popf
cmp
jns
sub
jns
fcoml
inc
rclb
or
out
jge
shrl
inc
mov
pop
sti
cmp
mov
push
stc
lcall
outsl
pop
les
mov
fldt
push
les
sub
add
clc
clc
pusha
stc
cmp
call
jmp
jmp
mov
test
test
pushf
jmp
push
movb
jmp
call
es
aaa
sbb
mov
int3
lods
sarb
xor
jp
test
adc
jle
xchg
ret
imulb
pop
cmp
subb
mov
cmp
pop
adc
push
stc
sbb
cmp
pop
pop
roll
mov
or
hlt
test
lods
jae
or
xchg
dec
icebp
xchg
je
sbb
dec
dec
dec
xor
pop
subl
bound
inc
ljmp
enter
or
out
and
mov
sbb
fidivrl
mov
lock
cmc
addl
outsb
imul
js
negb
test
mov
push
cmpsl
adc
mov
xor
xchg
leave
ret
int3
pop
pusha
add
pop
test
jg
call
in
push
jbe
insb
mov
or
hlt
mov
addr16
push
and
in
imul
mov
or
and
mov
sbb
pop
and
mov
aam
mov
push
in
pop
scas
push
xchg
xchg
pushf
ret
in
ret
jecxz
mov
pop
aas
mov
dec
jae
clc
shlb
add
push
pusha
pusha
lds
xor
in
dec
loope
sbb
add
les
mov
bt
sub
pusha
jmp
pushf
cmp
jmp
lea
jne
call
pushf
lea
jae
jmp
jmp
cwtl
mov
bswap
lea
lea
push
movl
push
mov
pusha
push
pushf
pushl
ret
clc
call
pushf
mov
push
rep
pusha
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
pushf
movb
movl
movb
push
pusha
lea
jmp
xor
xchg
cli
dec
mov
test
xchg
xchg
negb
es
nop
mov
inc
lds
jp
mov
add
pop
lds
push
mov
and
inc
xor
out
dec
out
xor
jnp
adc
inc
sub
scas
or
mov
ss
xchg
sub
push
aaa
fdivs
push
call
out
pop
test
lret
rol
mov
cmp
mov
scas
pop
inc
in
adc
fidivrl
jge
pop
pop
fwait
inc
pusha
test
les
mov
sub
pusha
jmp
movl
pusha
movl
movb
lea
jmp
push
jmp
cmp
add
stc
jmp
roll
out
das
mov
fs
sub
aad
pop
adc
filds
into
jno
push
lea
mov
fimull
or
leave
movsl
jp
fidivl
xchg
xor
movsl
or
inc
fdivrs
mov
cmc
arpl
or
inc
inc
imul
leave
in
inc
add
cli
mov
push
popf
add
clc
pop
mov
mov
aad
rcll
sub
add
dec
outsl
nop
mov
jns
mov
dec
dec
mov
cmp
pushf
call
lea
lea
pushf
jmp
jo
add
jmp
add
test
xchg
jl
lds
scas
xchg
ja
ret
sub
insl
je
jge
jle
jb
jne
push
cmp
movsb
inc
call
xchg
lds
sub
into
inc
filds
inc
push
dec
imul
xor
mov
lds
xchg
in
cli
push
mov
lcall
out
ljmp
mov
mov
frndint
mov
les
mov
fmuls
jno
outsl
lods
adc
xchg
dec
jae
scas
pusha
lea
jne
jmp
xchg
pop
mov
mov
push
insb
dec
mov
sti
fidivrl
push
and
sub
adc
adc
lahf
call
imul
xor
sbb
or
sbb
fdivrp
sub
push
cmp
cs
clc
push
sbb
jb
cmp
shlb
ljmp
lods
data16
int3
xchg
icebp
jecxz
pop
jge
add
fdivr
movsl
enter
nop
pop
mov
ror
andl
dec
xchg
aas
bound
dec
xor
and
data16
push
ja
les
adc
mov
daa
pop
add
mov
cmc
pushf
repnz
mov
push
call
pushf
adc
jmp
jae
jmp
cmc
add
cmp
pushf
call
cmp
imul
mov
jnp
push
or
xchg
hlt
push
mov
lods
or
xchg
push
aaa
std
in
iret
daa
lret
sbb
test
enter
mov
sbb
inc
push
pop
pushf
in
iret
daa
push
negl
clc
mov
push
and
and
rolb
clc
pop
enter
xchg
xor
inc
add
pop
scas
call
je
cwtl
cwtl
or
mov
dec
outsb
jnp
lret
les
or
fadd
inc
and
mull
lea
jmp
push
movl
je
push
push
lea
jmp
pusha
test
pushf
cmc
or
push
jmp
jmp
shr
sub
mov
push
cmpb
call
mov
movb
lea
jae
cmp
mov
test
cmp
mov
shl
shld
stc
mov
ror
mov
pushf
sub
cmc
cmc
mov
cmc
repnz
push
call
jno
xchg
sbb
or
adc
mov
scas
lods
mov
je
pop
add
in
iret
aaa
mov
xchg
or
jno
mov
shl
in
iret
aaa
inc
imul
mov
lret
mov
cmc
fcmovne
hlt
add
rcrb
sti
imul
outsb
scas
mov
cmp
pusha
andb
jmp
sbb
jecxz
les
inc
cmp
test
inc
pusha
not
pusha
push
mov
pushf
lea
call
pusha
mov
adc
pusha
pushf
lea
jae
pusha
call
mov
outsl
popa
outsl
iret
cmp
and
addr16
scas
xchg
jbe
mov
xor
push
xor
repnz
ss
xchg
shll
add
lcall
sarb
stos
lret
bound
vmovaps
mov
icebp
jecxz
push
lock
cmp
lods
xor
pop
jno
pop
sbb
xchg
std
jge
ss
test
push
test
ret
call
xchg
les
sub
fwait
dec
jb
outsb
add
and
in
mov
jbe
les
xchg
sbb
out
mov
fstl
cmpsl
xchg
dec
inc
fisubrs
mov
pushf
mov
xchg
jae
daa
andb
mov
clc
pop
les
mov
dec
inc
in
pop
inc
xchg
bound
mov
xchg
repz
cld
push
ss
dec
aad
fcmovb
and
imul
dec
inc
cmp
aam
inc
je
in
or
sub
fildl
sahf
and
mov
pushf
pushl
ret
bt
clc
test
pushf
call
xchg
xor
shlb
and
fs
ja
pusha
lea
jb
cmc
push
pushl
cmpb
jmp
imul
std
outsl
add
jnp
mov
xor
stc
sbb
aas
daa
jp
inc
inc
push
mov
ljmp
cmp
xchg
movsl
in
mov
sub
ss
popa
dec
loope
aam
mov
cmp
cmp
sub
in
fidivrl
aaa
movsl
xor
push
mov
jnp
mov
cli
pushf
shlb
xor
bt
bts
mov
rol
not
add
sub
mov
pusha
stc
cmp
test
mov
pushf
pushl
lea
jmp
add
cmp
cmp
pushf
cmp
mov
pushf
pushf
lea
jb
stc
push
test
test
cmp
mov
pusha
movb
lea
jae
stc
mov
not
call
pusha
movl
pushf
pushf
mov
movl
pusha
push
movb
push
lea
jmp
adc
inc
stos
lock
mov
loop
imul
in
icebp
inc
mov
push
sbb
popa
inc
bound
jns
test
test
dec
outsb
lods
into
les
jae
lcall
fwait
in
push
in
mov
shlb
dec
inc
out
mov
dec
mov
out
hlt
sti
into
decl
adc
andl
lock
call
mov
adc
xchg
xchg
cld
pop
inc
cmpsb
les
hlt
sbb
mov
filds
cmp
jmp
les
jp
imul
aam
hlt
xor
filds
sub
jno
cmp
les
addl
mov
adc
push
pushf
lea
je
jae
call
or
sahf
fwait
jg
xchg
cmp
imul
insb
push
mov
jle
mov
xor
and
pop
les
xchg
into
js
push
flds
scas
fmuls
xchg
inc
fisttpl
idivb
shll
icebp
push
xchg
or
popa
or
shlb
sti
pushf
or
or
cs
and
push
popa
push
add
push
mov
adc
fnstcw
imul
xor
jne
mov
je
jnp
dec
inc
ss
add
cmpb
call
jmp
xchg
sub
xor
aas
mov
int
xor
std
arpl
xchg
icebp
xchg
mov
pop
push
pusha
push
jns
mov
jns
dec
ss
and
cmp
out
andb
push
xor
mov
jl
js
out
sbb
fldt
adc
bnd
jbe
and
push
mov
loopne
std
mov
add
imul
jp
sti
aam
xor
popa
push
ficomps
aam
lcall
dec
inc
push
movsb
pop
jle
out
and
mov
sbb
popa
inc
aam
dec
repz
mov
push
neg
les
xchg
push
iret
lea
movw
pusha
mov
pushf
lea
call
call
movl
movw
pushf
push
movl
pushf
push
lea
jmp
adc
rol
add
shl
dec
bswap
mov
dec
mov
pushf
stc
pushf
repnz
push
push
push
lea
jne
movsbw
movb
bswap
push
setl
bswap
mov
pushf
lea
jmp
pushl
popl
movb
pusha
movb
pushl
ret
stc
movzwl
stc
add
btr
mov
mov
stc
pusha
clc
add
pusha
clc
mov
mov
pushf
test
call
stc
imul
pushf
push
lea
jmp
movb
pusha
lea
jae
not
mov
xadd
shr
sub
mov
setl
mov
test
shl
mov
cmp
call
call
mov
pushf
lods
cmp
call
stos
pusha
pushf
lea
jmp
stc
or
pushf
mov
mov
cmp
stc
test
cmpb
jmp
sub
pushf
movw
cmp
test
pushl
popl
test
cmp
movw
pusha
lea
ja
not
push
not
sub
shrd
bsr
add
add
pusha
sub
rol
rcl
mov
xor
or
call
sbb
js
jl
xor
jo
mov
stc
pop
ret
xchg
push
pop
cmp
push
add
fbld
icebp
add
shlb
fwait
ja
arpl
mov
push
cmp
cmp
loope
in
pushf
add
sbb
sub
fnstcw
negl
cmp
ds
dec
neg
sub
inc
mov
fldl
scas
xchg
les
dec
iret
sbb
xor
mov
pusha
call
pop
dec
mov
jg
fcomps
adc
rcrb
jnp
ret
insl
push
mov
xchg
icebp
xchg
jns
movsl
insl
lods
outsb
pop
mov
xor
leave
mov
scas
jmp
xor
outsb
pop
add
ret
stos
iret
icebp
adc
je
inc
jmp
pusha
movl
pushf
movl
pusha
lea
jmp
movl
lea
je
cmp
jmp
lea
je
pusha
mov
pushf
bswap
mov
lea
bswap
pop
lea
jmp
lea
je
movsbw
lea
xchg
movzwl
lea
jmp
add
pushf
mov
pusha
movb
cmc
movb
test
push
lea
je
stc
jmp
in
mov
and
adc
std
pop
inc
inc
and
adc
pop
pushf
ljmp
cmp
aad
shl
pop
pushf
jmp
jne
aas
in
cmpsl
int
mov
les
aaa
stos
hlt
fcoms
cmp
xchg
test
outsl
xchg
mov
les
stc
mov
aaa
sbb
cli
pop
inc
daa
mov
push
mov
sti
fidivrl
push
pop
test
jae
pop
incl
test
jmp
jo
aaa
push
test
cmp
int3
push
or
sbb
test
jmp
or
xchg
out
dec
xorl
jno
clc
ds
dec
sti
sbb
sbb
cltd
mov
xchg
lret
xor
and
mov
or
sbb
insl
lahf
cli
inc
adc
out
mov
cwtl
ds
dec
cmp
mov
push
sub
adc
cmc
cld
cmp
mov
push
push
test
outsb
sti
sahf
fs
mov
lds
mov
dec
in
or
push
mov
neg
mov
in
cmovle
testl
repz
mov
push
mov
cmp
jb
and
fdivrl
sub
add
cltd
jl
rcrb
dec
out
adc
push
jl
add
dec
cmp
inc
and
pusha
movw
pushf
pushl
ret
pushf
mov
pushf
lea
jmp
lea
je
pushf
pushf
adc
pushf
push
pushf
lea
jmp
movl
mov
mov
pushf
pushl
ret
cmpsb
fidivrl
mov
out
push
ss
jle
mov
add
mov
push
xchg
fsqrt
cmp
cmp
rcrb
or
push
sti
push
inc
mov
loop
cmp
repnz
inc
test
or
mov
jp
cmpsb
enter
insl
mov
div
mov
ljmp
loope
jmp
fiadds
push
out
hlt
hlt
or
sbb
in
cmpsl
dec
xchg
les
adc
stos
lret
shrl
add
xchg
in
dec
out
push
aaa
les
add
mov
pop
mov
push
mov
orl
push
xor
les
les
iret
pushf
jge
je
inc
mov
dec
insb
push
xor
inc
call
cmp
test
mov
call
call
mov
mov
pushf
pushl
ret
movb
not
cwtl
pop
lahf
push
setge
lea
jmp
ljmp
in
dec
sub
cmpsb
stc
gs
jnp
mov
jo
mov
dec
pusha
scas
xor
fldcw
ds
mov
js
inc
xchg
icebp
shll
mov
and
add
jbe
sbb
imul
and
sub
ljmp
and
dec
cmp
lahf
push
jbe
mov
test
adc
shll
cli
pop
orb
pop
adc
jle
xchg
ret
cmpsl
out
out
or
das
rolb
jecxz
or
xor
push
cmp
adc
cli
add
dec
fdivl
adc
call
data16
mov
mov
test
push
pop
adc
pop
leave
sbb
xchg
mov
and
mov
les
pop
aad
add
fadds
popa
pop
stc
jg
insb
push
ja
les
sub
cmp
inc
lea
ja
or
setge
sub
jmp
mov
movzbw
lea
not
pop
pushf
movl
movw
mov
pushl
ret
pop
pushf
call
mov
test
pushl
pushf
lea
je
bt
add
pusha
cmc
cmp
jmp
pusha
lea
jne
jmp
test
cmpb
push
pushl
lea
jne
dec
xor
cwtl
sar
bts
cwtl
mov
pusha
add
call
setp
bt
rcr
mov
stc
clc
cmpb
call
movl
pushf
mov
pushl
mov
push
movb
pushl
ret
lea
call
lea
jne
pusha
lea
adc
cwtl
xor
rol
stc
mov
dec
rol
clc
add
or
clc
mov
pushf
cmp
pushf
test
test
movw
push
pushl
push
lea
jmp
not
shl
mov
stc
or
jmp
popa
dec
das
nop
jb
lods
popf
sub
push
xor
or
or
push
mov
or
in
out
cmp
iret
xchg
addb
cmpsl
outsl
aam
lret
and
sub
lods
and
pop
ffree
popf
pop
addr16
scas
mov
mov
leave
push
hlt
dec
out
or
in
popf
fistps
mov
sbb
inc
jg
sub
lock
mov
in
mov
les
cmp
or
test
bsf
shld
neg
push
sub
bsf
sub
bsf
call
mov
push
pushf
pushl
pushf
pushl
ret
pusha
pushf
lea
ja
call
in
jmp
push
push
movb
lea
jne
pushf
bswap
call
cmp
and
clc
stc
add
pusha
movw
pusha
lea
jmp
pusha
repnz
jmp
pushl
lea
je
pusha
bt
pusha
mov
sub
cmc
bt
cmc
jmp
mov
bsr
call
mov
pusha
push
xchg
pusha
movsbw
pushl
pop
movl
pop
lea
movb
movl
call
lea
jb
call
jmp
lea
jle
push
lea
ja
pushf
lea
jb
stc
cmpb
pusha
movb
lea
jne
cmp
inc
xor
mov
jmp
dec
lods
adc
sbb
daa
xchg
jbe
aaa
fadds
cld
push
mov
xlat
mov
subl
xchg
cmp
in
or
pop
mov
and
pushf
cwtl
xchg
ss
adc
fidivrl
mov
xor
jge
test
mov
push
xor
ss
mov
pop
or
mov
add
sub
adc
mov
jle
mov
int
pop
mov
les
dec
and
bt
test
push
push
lea
jmp
lea
jne
movzbw
mov
push
pusha
pushl
movw
lea
jmp
call
movw
call
stc
push
clc
imul
pushf
pusha
mov
push
lea
jmp
test
add
stc
cmp
push
call
pusha
pushl
jmp
lea
je
cmp
bt
sub
or
mov
jmp
not
jmp
jo
pop
imul
rorl
test
iret
xor
adc
pop
inc
es
push
not
sahf
inc
xchg
and
ljmp
jmp
xchg
fiadds
aas
sub
nop
mov
je
test
jle
xchg
pop
iret
cmp
jge
xchg
and
add
lods
xor
jno
xlat
gs
adc
stos
xchg
fnstenv
cli
pop
std
and
adc
dec
les
push
movsb
sbb
int3
bound
sub
test
push
out
xlat
imul
mov
stc
lea
je
pushf
cmp
add
bt
pushf
pushf
cmp
pusha
lea
jb
clc
cmp
pushf
call
cmp
mov
shll
lcall
imul
in
adc
loope
mov
pop
outsl
cmp
mov
sbb
ucomiss
sbb
les
mov
lods
or
sbb
mov
cmp
jmp
pushl
popl
mov
pushf
pushf
movw
lea
jmp
shll
lcall
gs
ja
test
and
cmp
and
sub
dec
xor
mov
cmp
pop
inc
daa
mov
cltd
mov
les
lret
mov
cmpsb
or
out
hlt
in
movsb
adc
pushf
andb
adc
xor
jno
ja
xor
and
in
jbe
cmc
pop
les
lahf
lcall
push
xchg
cli
pop
add
out
adc
dec
jo
mov
in
adc
cmc
les
lcall
pop
mov
sbb
sbb
in
sub
les
int
cltd
adc
pushf
jmp
lea
je
bt
cmp
jmp
stc
cmpb
jmp
jmp
inc
adc
fadd
popf
fstpt
xchg
mov
jle
inc
mov
sar
aaa
sbb
icebp
and
mov
push
xor
inc
push
test
jae
fimuls
push
std
jae
push
adc
push
inc
mov
mov
out
sub
mov
in
xor
lock
xchg
push
jmp
jo
mov
and
jns
imul
cmp
repz
lods
mov
push
mov
insl
push
mov
jb
les
adc
dec
sets
mov
mov
sbb
mov
sub
jp
push
pusha
repnz
jmp
inc
push
lock
mov
sbb
loop
sub
mov
icebp
cs
adc
mov
push
adc
loopne
dec
fidivs
fwait
inc
movsb
lret
es
add
mov
push
dec
pushf
out
outsl
les
xor
ret
push
sbb
dec
ret
fstl
movsl
add
out
shll
mov
adc
fwait
jl
push
je
mov
negl
pop
jp
les
adc
add
xchg
sbb
iret
dec
sub
fnsave
lcall
les
dec
int
imull
mov
fwait
sbb
lock
fdivrs
push
jle
dec
cs
je
pop
push
clc
push
sbb
adc
std
adc
inc
or
cmpsb
mov
cmp
je
icebp
jno
or
jo
and
movsl
in
outsl
insl
sub
imul
ret
mov
stos
rcrb
push
push
rcl
inc
mov
gs
inc
inc
outsb
push
sbb
xor
jmp
cmc
pop
cld
cmp
test
jno
jnp
les
or
adc
jmp
insb
nop
int
xchg
cmp
inc
in
push
dec
xor
mov
adc
jecxz
pushf
movb
movb
lea
jmp
adc
mov
cmp
mov
jbe
cmp
xchg
mov
inc
pusha
inc
das
js
jmp
sbb
jle
inc
xor
push
notb
inc
sub
aad
adc
mov
and
mov
dec
subb
adc
jecxz
jmp
outsb
sub
inc
out
testb
lahf
adc
sub
push
mov
sbb
jno
add
sub
xor
aam
push
mov
fs
lret
jp
inc
pop
leave
ss
in
pop
adc
fnstcw
jnp
and
add
mov
ds
repnz
in
sub
negb
ret
sti
cmp
dec
fdivr
dec
mov
xor
pop
repnz
stc
pop
mov
jo
js
pop
rclb
mov
jmp
jp
mov
xchg
cmp
push
lods
inc
lcall
push
outsb
shll
sub
ror
and
mov
jbe
sub
int
dec
mov
adc
movsb
std
mov
rorb
std
lcall
add
dec
pop
pusha
xchg
xor
push
mov
jnp
dec
loope
sbb
andb
cmpsl
cli
jns
mov
mov
xor
xchg
or
pop
andb
mov
das
pop
vpaddsw
cli
jno
xchg
and
push
mov
xor
pop
sub
add
mov
mov
js
mov
mov
mov
push
jo
fsubrp
sarb
fsubl
lret
xlat
cmp
ret
and
mov
sub
push
cmp
pop
subb
lcall
mov
mov
inc
adc
loopne
in
pushf
push
lcall
mov
cmp
mov
xor
mov
dec
or
sub
xor
ret
or
les
cmp
mov
movw
movb
lea
je
movzbw
lea
movsbl
call
pusha
test
pushf
pushf
cmp
movw
pushf
pushl
lea
ja
inc
jmp
pushf
shld
mov
test
mov
clc
clc
cmc
call
cmpb
movb
lea
jne
push
neg
xor
shr
mov
shl
add
add
neg
mov
jmp
jmp
call
jmp
pushl
popl
bt
cmp
pushf
jmp
pushf
pushf
lea
jne
mov
dec
xor
mov
stc
xor
sub
rol
rol
mov
pushf
bt
cmc
pusha
sub
pusha
cmp
cmc
pushl
popl
cmc
sub
jne
cmp
pusha
jmp
pushf
call
cli
out
lods
adc
mov
iret
inc
mov
pusha
aas
movsl
add
iret
scas
xchg
jbe
jge
mov
pop
mov
mov
adc
mov
je
adc
sub
and
adc
add
xabort
pop
mov
or
xchg
inc
fwait
in
mov
sub
fldcw
sub
lods
inc
les
popa
and
enter
pop
sti
mov
les
inc
add
jmp
filds
cmp
out
xchg
ss
clc
push
ret
dec
sub
lea
jb
clc
cmc
cmp
pusha
pushf
jmp
pushf
movl
call
call
mov
popf
cld
pop
ds
test
into
mov
movsb
xor
iret
in
es
scas
or
push
push
jns
into
jge
ja
into
mov
cmp
imul
xlat
jg
stc
inc
sahf
inc
push
pop
and
rol
dec
sub
jmp
mov
jmp
adc
sub
fs
je
stc
clc
cmp
sub
stc
cmp
call
movl
call
adc
ljmp
lcall
cmp
insb
repz
outsb
aam
cwtl
movsb
insb
dec
adc
mov
fdivs
pop
xchg
or
lods
inc
fstpt
into
insl
rdmsr
xchg
les
dec
shrb
jecxz
push
mov
iret
cmpsb
or
rcl
mov
loopne
es
xchg
idivb
insb
mov
loopne
and
cmp
cmpsl
dec
in
sbb
jno
dec
sub
inc
les
pop
mov
mov
xchg
or
fldcw
cmp
lcall
xchg
xchg
jae
cltd
sti
sbb
mov
inc
jge
ror
mov
ja
cmp
xlat
aas
xchg
mov
aad
lds
xchg
es
xchg
ja
les
or
dec
jmp
les
mov
pop
mov
dec
test
pop
adc
add
push
ja
inc
out
in
les
test
jbe
shr
jmp
mov
stc
cmc
pushf
jmp
lea
call
pusha
call
lea
ja
jmp
mov
test
mov
ja
inc
mov
pcmpeqw
jnp
ljmp
jl
jle
scas
mov
mov
insl
inc
test
mov
loope
inc
mov
jecxz
imul
sarb
arpl
sarb
cwtl
jp
mov
shlb
fsubr
push
inc
pop
adc
mov
popf
push
notb
mov
std
mov
les
mov
fdivs
or
xlat
aaa
std
fnstsw
jb
cmp
les
fstps
imul
not
push
cmc
jmp
pusha
cmp
pushl
push
lea
jb
call
sub
pushl
neg
pusha
call
jmp
pusha
ror
mov
cmc
call
lea
jne
sub
lea
mov
cmp
rcr
rol
sub
mov
cmp
mov
cmc
clc
bt
bt
sub
push
stc
pushl
popl
jmp
cmp
pusha
lea
jae
movzbw
shld
mov
jl
btr
shr
cmp
mov
seta
lea
mov
bt
clc
push
xor
cmc
repnz
jmp
mov
pushl
call
dec
pushf
not
inc
pushl
pushl
not
pusha
call
pusha
pushf
lea
ja
pusha
pushl
pusha
pushf
lea
jb
cmc
cmpb
call
repnz
jmp
pushl
popl
stc
cmp
pusha
push
lea
ja
adc
neg
sbb
sub
btc
rcr
shl
add
rcl
adc
sbb
mov
mov
mov
not
mov
cmp
push
movw
repnz
pushl
push
pushf
lea
jne
lea
pusha
pushl
lahf
movb
bswap
pushf
mov
pop
lahf
not
pop
lea
pushl
mov
push
movl
call
rolb
fs
stos
out
hlt
jecxz
xchg
loopne
mov
xor
jbe
aas
mov
aad
xchg
cmp
les
add
jmp
or
ljmp
push
aas
cmpsb
les
popa
in
jmp
jge
inc
xchg
jge
jge
adc
push
push
scas
hlt
pop
cmp
jp
pushf
fs
mov
das
push
or
sbb
xor
fildl
iret
popa
shrl
push
mov
loope
lock
dec
in
push
cmpsb
mov
jns
out
adc
push
push
xor
mov
ret
dec
mov
xor
js
and
add
in
xchg
mov
xchg
movsl
bound
xchg
mov
inc
es
stc
inc
mov
mov
inc
test
dec
adc
jl
iret
iret
jg
push
mov
or
aad
fs
sub
lret
cmp
sbb
push
dec
divl
pop
lcall
push
clc
pop
mov
add
cltd
mov
jmp
bound
arpl
mov
test
fldenv
xchg
out
mov
fidivrs
les
jne
scas
aad
and
hlt
loope
dec
lds
les
mov
js
insl
lahf
out
push
mov
shll
loope
inc
scas
adc
dec
sub
xchg
dec
out
cld
or
pusha
or
xchg
ficoml
in
mov
lret
push
aas
xchg
sti
pop
dec
lds
test
inc
pushf
pop
cmpsl
sub
aaa
mov
sahf
inc
xorl
dec
outsb
stos
xchg
sub
add
pop
mov
and
sub
adc
out
fmulp
fs
cmc
in
ret
pop
jne
adc
mov
loope
add
push
insl
push
jmp
add
mov
cmp
jl
movsl
dec
mov
push
jl
inc
arpl
sub
pusha
inc
movsl
jmp
adc
aaa
leave
pop
jl
add
mov
sub
inc
mov
xchg
jnp
pop
mov
jne
cmp
lods
xchg
js
cmp
pop
imul
and
inc
enter
daa
out
push
mov
imul
jecxz
int
xchg
pop
popa
enter
xchg
mov
in
xchg
xor
pop
les
sbb
sub
xorl
call
jmp
rcr
xor
and
in
mov
movsbw
add
mov
jmp
repz
jb
pusha
movl
jmp
jmp
lea
jne
bswap
bsr
neg
sub
shrd
bts
bsr
mov
or
adc
add
ror
shl
test
mov
jo
test
pushf
movw
pushl
lea
jmp
pushl
popl
stc
stc
cmp
call
mov
movl
jmp
jmp
movl
pusha
movl
movb
pusha
pushf
pushf
lea
jmp
dec
jle
inc
and
add
ret
hlt
aas
cmp
add
sub
mov
sbb
push
pop
fs
sub
icebp
pop
push
cmp
stos
cmp
lcall
or
scas
fbstp
testb
pop
xchg
inc
imul
inc
es
cmp
test
rcl
sbb
jnp
fst
add
daa
mov
cltd
inc
push
and
sub
fldl
in
mov
cltd
les
pusha
mov
es
stos
and
mov
dec
fidivs
pop
ret
es
hlt
mov
bswap
push
lea
pusha
movl
jmp
pusha
lea
jae
push
jmp
str
call
call
fucomip
mov
ljmp
adc
and
lods
lahf
add
mov
dec
jno
xor
outsb
mov
cli
mov
jmp
mov
and
je
movsl
popf
sbb
pop
std
adcl
push
jnp
les
popf
and
lret
addl
pusha
jmp
push
movl
pusha
pusha
pushf
push
lea
jmp
call
cmpb
jmp
mov
lea
jmp
pushl
lea
jae
seto
sbb
cmc
mov
bsf
pushf
mov
not
pop
mov
stc
pusha
cmc
bt
xor
pushf
cmp
repnz
pusha
jmp
jg
dec
mov
adc
rolb
fdivrl
leave
sub
ret
push
test
inc
xchg
xor
mov
out
mov
loope
or
jl
xchg
jp
mov
pop
xchg
or
push
cmpsl
push
sub
sarl
sub
imul
aaa
std
pop
pop
les
sub
dec
push
and
jp
movsw
or
cmp
add
les
mov
out
cmp
pushf
lea
jae
add
mov
cmc
mov
rcl
mov
pushf
cmc
inc
mov
cmp
test
test
xor
pushf
jmp
push
ss
jmp
push
loopne
sahf
iret
sbb
fiadds
or
mov
repz
sbb
jmp
xlat
jecxz
cwtl
xchg
ja
ret
pushf
movsl
pushf
adc
jbe
jb
cmc
adc
mov
aaa
inc
inc
lods
fidivs
fstpt
xchg
repz
cmpsb
pop
cld
cmp
cmp
into
scas
jno
cltd
sti
decb
lods
cmp
xor
push
or
enter
ret
aam
shl
stos
int
getsec
faddl
test
mov
dec
and
out
cmp
sbb
mov
lea
jno
push
pusha
pushl
lea
jmp
add
inc
js
je
jb
arpl
jae
in
xchg
xchg
sti
jge
pop
mov
sahf
add
sub
jnp
filds
sub
xchg
push
sub
jo
sbb
fdivrl
dec
cld
pop
leave
mov
jo
and
sbb
cmp
jne
push
sub
add
ss
or
test
movsl
jmp
xchg
mov
sbb
and
mov
mov
cmp
inc
in
ret
ret
and
sbb
outsl
xchg
mov
in
insl
les
sub
sbb
and
test
add
push
pushf
movb
lea
jmp
pushl
call
je
ds
fnsave
xor
je
shlb
xor
xlat
inc
test
push
fmuls
mov
jecxz
jnp
xchg
scas
ljmp
push
loop
push
lahf
lock
ficoml
pop
jb
shrb
test
das
jbe
cmp
pop
pop
movsl
sbb
xor
sbb
in
xchg
mov
ret
les
jle
dec
movl
pusha
pushl
pushf
pushf
pushl
popl
pushf
mov
pushf
pushl
ret
movb
repnz
pusha
pushl
call
rcrl
mov
dec
inc
and
sbb
shll
jb
fdivrp
mov
pop
push
push
cmp
and
sub
push
popf
adc
adc
mov
jmp
lret
adc
xchg
xorl
sub
mov
mull
pop
fdivrp
and
outsb
adc
lock
mov
dec
and
xchg
or
pushf
jge
push
aad
dec
mov
mov
cli
lahf
shl
lods
dec
repz
sti
les
mov
subb
jmp
movw
mov
lea
push
mov
lea
setl
inc
not
dec
mov
pushf
mov
pusha
dec
pusha
rol
cmc
pushf
xor
cmc
stc
pushl
cmc
not
pushl
test
mov
call
lea
jb
jmp
neg
call
pushf
push
pushl
popl
pushf
pushf
pushf
pushl
ret
clc
sub
jle
mulb
jb
mov
stos
push
jno
mov
jae
add
jmp
sarb
lods
out
shrl
push
stos
int3
adc
fidivrl
sahf
call
sbb
add
xchg
repnz
lods
cmp
in
jnp
and
add
mov
fldt
sub
int
test
cmovge
xor
pusha
mov
js
pop
mov
into
mov
xor
mov
aad
sbb
rorb
sti
cmp
or
pushf
push
mov
lea
jne
shld
bts
test
mov
pusha
pushf
or
pusha
mov
lea
je
movsbw
lea
pusha
movzwl
jmp
mov
pushf
pushl
bswap
mov
mov
pushl
mov
pushf
bswap
mov
lea
je
movzbw
pusha
bswap
mov
pushf
movb
pushl
ret
xchg
bswap
call
orb
clc
pop
ja
mov
sub
sbb
shll
bound
xor
in
scas
fildll
push
or
mov
or
mov
or
mulb
or
add
jp
inc
sub
fdivl
sahf
repz
fidivs
out
mov
adc
mov
mov
shl
lods
jle
pop
lock
xor
in
push
cld
or
mov
xchg
mov
cmp
mov
mov
shlb
pop
or
lret
mov
dec
pop
sbb
push
ja
cmp
mov
aaa
sbb
mov
adc
dec
pop
mov
fcmovnb
and
inc
andb
push
les
sbb
or
cmpsb
lret
les
jo
faddp
imul
js
xchg
in
shlb
mov
xchg
jae
dec
pop
cs
push
inc
movsl
mov
inc
ds
xchg
stc
pop
shll
sbb
movzbl
push
lods
xchg
jo
push
mov
dec
insb
adc
pusha
sbb
faddl
insb
outsl
or
movzbl
mov
or
inc
pop
mov
std
pop
mov
dec
in
mov
leave
outsl
add
in
dec
fidivl
jns
and
cld
xor
sti
lahf
aas
jecxz
and
pop
jg
les
popf
and
bsf
mov
test
and
pusha
add
add
stc
pushf
push
test
add
pusha
pushf
mov
call
lea
je
pushf
test
cmp
clc
or
pushf
mov
pushf
jmp
mov
jmp
jmp
push
jmp
add
dec
inc
dec
popa
jo
je
imul
inc
add
and
and
xor
mov
push
movb
test
pusha
pusha
push
pushf
lea
jmp
stos
ffree
mov
jae
xlat
and
jns
cmp
add
out
mov
stos
imul
out
jbe
xor
pop
rcll
cmp
ret
xchg
jge
je
enter
pop
push
jmp
mov
push
cld
movsb
mov
mov
add
gs
mov
ljmp
sub
mov
je
imul
cmp
xchg
leave
jmp
xor
dec
sbb
je
mov
sub
sbb
pop
cmp
dec
sbb
mov
jmp
push
jmp
rcl
btr
mov
cmc
cmc
bt
pusha
shl
pusha
pushf
lea
je
pushf
lea
jo
mov
jns
push
push
call
mulb
or
dec
jno
or
pop
jle
dec
lods
sbb
and
aas
jecxz
outsl
iret
mov
jmp
xchg
fcmovb
das
enter
icebp
jecxz
or
clc
push
xchg
cmpsl
mov
adc
adc
mov
iret
repnz
sub
xchg
sub
mov
cmp
ljmp
sbb
lret
mov
mov
repnz
ficomps
rorl
sub
bsf
sbb
dec
add
bt
dec
pushf
btc
mov
clc
and
or
sbb
mov
pushf
call
push
pusha
pushf
lea
jne
movsbw
sub
sar
stc
dec
mov
and
setge
add
bt
inc
or
sar
mov
push
pushf
test
pushf
push
lea
jmp
push
pushf
pushl
popl
pushf
push
pusha
pushl
ret
cmp
push
aaa
pushf
test
mov
stos
adc
push
ss
inc
push
adc
pop
movsl
mov
dec
mov
add
jae
mov
xchg
inc
pusha
xchg
mov
mov
sbb
lds
in
inc
fiaddl
mov
add
dec
out
xchg
mov
ja
mov
sbb
xor
movl
pushf
push
movw
lea
jmp
xchg
pop
cmp
mov
pop
mov
int3
xor
lcall
lret
and
lret
sub
divb
rolb
jnp
jecxz
into
aad
bswap
fwait
jge
sbb
mov
cli
lahf
jecxz
jmp
out
mov
fisubl
imul
sahf
shll
insl
mov
mov
test
je
add
outsb
sbb
jns
test
mov
repnz
sti
div
cmp
adc
push
cld
mov
sbb
dec
sbb
push
sub
sbb
mov
ss
insl
push
dec
mov
cld
pusha
inc
inc
in
mov
sbb
jne
rcr
cs
cmp
or
daa
mov
push
lret
jb
mov
push
inc
ss
mov
push
imul
mov
fldl
fsubrs
mov
lret
jb
mov
and
pushl
enter
push
sti
sahf
add
dec
sbb
jmp
cmp
jmp
pushf
pusha
jmp
cs
shlb
and
sahf
test
into
xor
jne
mov
neg
js
push
sti
cli
xor
sahf
adc
ja
xchg
data16
jb
mov
sub
icebp
mov
out
jno
call
mov
mov
lock
xchg
es
aad
notb
rclb
and
es
int3
push
xchg
ja
shlb
stc
out
movsl
cli
popf
gs
loope
push
xchg
std
pop
jle
mov
and
add
sub
popa
cmc
push
mov
js
cmp
das
push
xchg
jp
les
or
scas
and
mov
sarl
aas
jecxz
les
addb
je
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
decl
mov
pusha
pushf
jmp
ljmp
les
clc
pop
and
in
dec
xor
pop
mov
or
rcrb
andl
mov
mov
mov
jmp
pusha
xchg
ss
push
hlt
xor
jp
fisttpll
jbe
or
pop
lods
outsl
in
rclb
in
adc
push
iret
sbb
jae
mov
loop
aam
das
fdivrs
sahf
in
test
es
push
push
cmp
in
mov
push
jbe
and
pop
mov
aad
ret
gs
lock
aad
gs
lds
pop
pop
jne
sbb
lds
xchg
testb
out
adc
jg
jg
sbbb
std
dec
sub
sub
aas
call
sub
lret
lds
jnp
inc
aaa
ret
add
cmp
mov
loope
negl
add
scas
sbb
xchg
xor
sub
or
iret
xor
sbb
movsl
inc
test
sbb
inc
sub
loop
mov
mull
lods
cmc
pop
pop
mov
int
and
stos
jg
mov
iret
inc
sub
push
sub
sub
ds
js
inc
cmpsb
stc
addr16
cmpl
rolb
ffreep
adc
pop
mov
cs
out
xchg
push
inc
mov
cwtl
fistl
test
rcrb
or
test
arpl
mov
call
mov
fs
xchg
sbb
cmp
mov
cmpb
adc
ss
out
dec
and
mov
xor
push
mov
push
sbb
adc
and
inc
stos
add
xchg
leave
mov
aas
mov
repnz
loop
mov
lods
add
xor
dec
pusha
fs
aaa
sbb
xor
sti
addr16
and
pop
sbb
adc
lcall
es
jns
and
out
push
movsl
adc
pop
add
pop
mov
xlat
xchg
enter
add
call
movsb
add
std
lods
dec
xor
pop
cli
out
and
cs
cmp
ret
repnz
arpl
nop
ss
in
and
js
mov
and
mov
dec
dec
inc
nop
mov
xor
jbe
and
out
push
movsl
or
out
mov
out
inc
xlat
mov
mov
lea
or
inc
sub
dec
xor
dec
scas
sub
cmp
nop
icebp
inc
iret
sahf
push
adc
pushf
add
cmp
gs
into
inc
sub
xchg
out
jno
mov
shll
add
jno
out
sti
sub
dec
scas
inc
dec
ret
testl
pop
xor
cmpsb
inc
out
popa
mov
xor
inc
loop
push
out
dec
dec
inc
movsb
inc
jo
aas
es
cli
lretw
push
call
movsb
scas
push
pop
add
lods
or
loopne
and
dec
movsb
inc
ret
push
jg
pop
cmp
rorl
push
inc
jecxz
mov
lods
in
mov
cvtps2pd
cmpsb
jae
push
mov
aad
test
repz
mov
mov
and
inc
call
mov
add
loope
mov
in
mov
iret
dec
test
shll
mov
int
iret
push
add
cmp
es
lods
adc
push
popa
cld
out
xchg
sti
iret
xor
repnz
ss
scas
dec
mov
mov
rorl
mov
xchg
xorl
mov
mov
jb
mov
stos
xlat
aas
xchg
mull
cli
jp,pn
mov
popa
int3
fistps
shll
or
fstpt
aam
test
popf
jmp
mov
lds
jnp
mov
ret
pop
jmp
mov
and
decb
jle
je
lret
leave
sub
dec
fwait
adc
filds
repz
sbb
mov
sarl
cmp
mov
add
ret
test
mov
aaa
fwait
and
fmul
pop
insl
and
jl
xor
imul
and
mov
or
cmc
cmpsb
dec
scas
add
stos
outsl
lret
cmp
lret
in
pop
shlb
test
xchg
pop
or
pop
std
imul
jmp
xchg
jle
add
dec
mov
sub
int3
cmpb
add
or
nop
mov
dec
and
sbb
xor
pop
sbb
jmp
in
cmpl
push
cmpsb
shlb
repz
out
out
std
adc
lahf
add
cwtl
nop
icebp
xchg
std
jecxz
lock
add
cmp
fwait
xor
es
hlt
loope
pop
cmpsb
push
fidivrl
lret
and
adc
outsl
out
pop
and
and
cltd
push
inc
or
hlt
dec
push
lods
adc
jp
inc
pop
les
jnp
mov
ss
out
cmpsb
js
mov
add
xor
pop
addr16
addb
sub
xor
ss
and
js
inc
test
mov
aad
es
xchg
jae
sub
dec
mov
pop
or
aas
mov
jno,pt
dec
ja
mov
test
mov
pop
mov
adc
arpl
fsubrs
mov
lds
jbe
xorb
xor
enter
icebp
push
std
sub
movsb
adc
dec
hlt
mov
shl
sbb
dec
jmp
xchg
in
dec
mov
ds
or
iret
and
jp
insl
push
movsb
adcl
vlddqu
insl
shrb
iret
inc
xlat
jbe
adc
pop
sub
dec
xlat
clc
dec
dec
imul
lock
pushf
jae
sub
lods
sbb
lahf
cmp
test
movsl
push
push
out
shll
leave
sub
jle
jb
cmp
js
cmp
inc
xchg
js
fisttps
movsl
adc
bound
push
sub
lock
cli
jb
dec
mov
pop
cmp
in
inc
movsb
adc
pop
inc
sub
roll
fadds
movsl
or
imul
cmp
inc
mov
std
sbb
cmpl
mov
mov
mov
mov
xor
xor
sbb
negl
adc
ds
cmp
fstpt
arpl
into
mov
fistps
insl
into
pop
ja
stos
or
lret
mov
adc
xor
push
push
sbb
push
je
and
mov
insl
fnstcw
stc
inc
cmpsl
std
pop
bound
aaa
sbb
inc
jle
cmp
repz
ret
jecxz
popa
mov
sbb
outsl
push
xor
xor
xor
jmp
es
xchg
mov
add
jns
cltd
push
lock
sub
mov
push
leave
enter
mov
push
add
insb
rol
mov
adc
mov
rcrb
pop
push
xor
daa
sahf
add
ds
jmp
lcall
pop
xor
repz
and
testl
pop
mov
scas
and
hlt
dec
adc
lcall
adcb
fdivrl
insl
out
ficoml
test
mov
xor
xchg
jb
cmpsl
sbb
pop
lea
shll
sub
and
mov
push
int3
pop
jp
jns
in
lahf
add
xor
xchg
lods
xchg
out
cvttps2pi
inc
imul
in
mov
je
les
pop
lcall
popa
insb
inc
jb
add
fs
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
outsb
add
stos
pushf
pushf
pushf
mov
lea
jmp
movl
pusha
call
clc
cmp
jmp
bswap
bsf
mov
rcl
adc
pusha
mov
pusha
pushl
repnz
jmp
pusha
cmp
call
pushf
lea
jne
movsbw
not
not
movb
movzbw
push
push
lea
lea
pushl
pushf
movb
pushl
movl
movb
jmp
push
pushf
cmp
call
pop
movzbl
cwtl
lea
mov
movl
call
jmp
jmp
lea
jb
bt
pusha
jmp
pop
mov
call
pushf
mov
lea
jne
not
cwtl
pushf
movb
pushl
lahf
call
jmp
clc
jmp
stos
jae
mov
test
repnz
dec
mov
jle
adc
int3
pop
mov
xchg
xchg
xchg
cmp
xor
jg
mov
movsb
xor
mov
dec
pop
jp
or
mov
or
ret
pop
mov
push
xchg
dec
lods
dec
outsl
push
fistpl
andb
js
cmp
dec
mov
icebp
add
mov
adc
or
sbb
or
inc
jmp
add
add
imul
mov
arpl
loope
clc
push
or
add
or
xor
mov
pop
jge
fistps
rcrb
cld
sub
jp
sarb
mov
cwtl
xchg
push
push
in
xor
outsl
and
addr16
cmp
mov
xchg
mov
shl
fidivs
inc
in
mov
sbb
dec
repnz
les
adc
sub
bt
pushl
popl
pushf
stc
pusha
pushl
cmp
call
mov
and
nop
icebp
push
mov
jbe
mov
imul
sub
xchg
xor
les
or
inc
lret
lea
daa
ret
mov
les
stos
sub
call
mov
std
push
xor
or
mov
jo
ficompl
aas
int
sti
xchg
lcall
test
daa
jl
sub
cmp
sbb
pop
shlb
add
stos
mov
das
outsb
js
emms
cwtl
les
dec
xchg
push
mov
cmp
cmp
jne
sbb
and
and
cmp
mov
jmp
stc
pop
les
sbb
or
mov
sub
adc
rcr
pushl
push
mov
mov
or
jnp
loopne
pushw
lods
fildll
push
jae
inc
scas
mov
ljmp
mov
xor
outsb
pop
test
inc
jmp
push
inc
loop
and
pop
jle
inc
inc
and
clc
lea
je
push
clc
add
movb
bt
call
add
clc
stc
call
push
lea
jne
not
pusha
mov
mov
pushf
lea
jmp
mov
lea
jae
sbb
rcr
mov
xor
mov
shld
bsf
call
xorb
or
lods
add
sub
aaa
adc
cmp
inc
inc
popa
lods
into
aad
mov
dec
es
pop
ret
icebp
aaa
sbb
loope
call
outsb
jns
inc
inc
and
xor
pop
pushf
mov
outsb
hlt
out
mov
adc
pop
dec
outsl
es
pop
shlb
cmc
cwtl
sti
bound
inc
sub
aaa
filds
les
and
lcall
add
push
lea
call
push
lea
jne
lea
pushf
lea
mov
pushf
lea
jmp
movl
pushf
pusha
movl
pushf
pusha
lea
jmp
enter
mov
pop
iret
dec
test
sahf
add
enter
scas
jne
and
pop
xchg
mov
mov
iret
popa
pop
mov
push
adc
adc
and
and
out
adc
mov
push
negl
dec
or
push
in
dec
std
es
push
inc
shl
loop
jle
fmuls
adcb
lcall
and
adc
pusha
pushf
lea
jmp
lea
jb
push
cmp
pusha
mov
pusha
call
lahf
movb
push
not
mov
jmp
mov
je
imul
jmp
cmpsl
or
mov
movsb
in
shll
mov
stos
call
add
dec
mov
ljmp
mov
lcall
jle
mov
xchg
dec
repnz
jns
mov
adc
jae
shll
pop
mov
mov
adc
gs
xchg
xor
dec
or
xchg
loopne
movsl
jmp
mov
rdmsr
aad
sbb
dec
or
mov
add
movb
cmp
pushl
call
push
jmp
push
push
pushl
popl
movw
pushf
pushf
push
pushl
ret
repz
loope
mov
scas
xchg
nop
repnz
ss
and
xorb
scas
movsl
lds
xchg
pop
repz
insl
pop
mov
mov
inc
jmp
or
enter
pop
lcall
cld
and
xorb
sbb
jnp
jmp
xor
movsl
xchg
mov
imul
idivl
lret
adc
push
mov
xchg
xor
jle
les
popa
sub
dec
or
jmp
xor
rolb
pushf
mov
les
lret
dec
xchg
sub
mov
push
call
movl
call
xor
pop
inc
es
add
loope
lret
scas
xchg
je
mov
sub
jne
mov
push
js
jg
lahf
out
pop
inc
mov
loope
out
adc
pop
mov
inc
ljmp
jae
push
test
cmp
jbe
push
aaa
ljmp
jl
loop
int3
je
lahf
clc
fidivs
xchg
sbb
insl
sub
stc
sbb
arpl
xchg
mov
adc
dec
ret
cmpsb
stos
pop
mov
jmp
les
add
fmuls
sbb
pop
cmp
gs
pop
jmp
or
fistps
test
pusha
pushf
lea
jmp
push
pusha
lea
call
fmuls
push
mov
test
mov
stos
lea
push
ss
mov
ds
mov
dec
mov
mov
push
jge
cltd
sti
adcl
ja
std
iret
xor
sub
cs
jle
cli
lcall
enter
or
idivb
addr16
je
out
dec
adc
fwait
push
cmp
iret
sub
pop
pop
movsl
adc
enter
jno
adc
ret
pop
cltd
jge
xchg
imul
fdivrl
negb
aas
jecxz
sub
pop
mov
int3
sbb
mov
call
sbb
les
pop
fmuls
xor
jmp
pusha
jmp
stos
pushf
call
pusha
jmp
movl
mov
jmp
test
lea
mov
push
cmp
cmpb
pusha
lea
jne
shld
cwtl
movzbw
sub
or
aaa
sub
pushf
mov
jmp
cmp
pushf
push
lea
jae
xadd
mov
test
mov
dec
clc
shld
shrd
mov
bt
cmc
xor
stc
clc
push
repnz
mov
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
stc
repnz
mov
mov
pusha
pushf
lea
jne
cwtl
setno
movsbl
cwtl
movb
pushf
call
cmc
push
cmp
pusha
mov
lea
call
jmp
shld
pushf
rcl
sub
adc
movsbw
lea
sub
stc
sub
cmp
call
mov
pushf
movl
lea
call
push
pushf
pusha
jmp
call
call
push
pushf
pushf
pusha
pushl
ret
sbb
call
sbb
push
les
and
lock
mov
jg
shl
mov
push
sub
jo
enter
pushf
ret
push
mov
out
movsl
repnz
movlps
xchg
mov
fistpll
and
xor
repnz
jge
fcomp
iret
rcl
mov
outsl
ffree
adc
inc
aam
std
jbe
ja
cs
hlt
lret
mulb
pop
cmpl
xchg
ljmp
rcll
add
pop
or
xor
ds
mov
aam
xchg
hlt
mov
pop
inc
clc
fisubs
call
pop
rclb
xor
ja
into
add
dec
sbb
mov
mov
push
push
mov
jl
inc
jmp
mov
pop
add
fwait
in
add
in
adc
sahf
jge
lods
push
stc
popf
mov
jmp
xchg
bswap
lahf
not
lahf
mov
xchg
mov
movzbw
pop
not
bswap
call
pop
shlb
push
mov
mov
mov
adc
sbb
pop
repz
dec
jae
aaa
pop
sbb
jg
sub
out
pop
xchg
fdivrs
gs
mov
fisttpl
and
cs
in
dec
fisttpll
mov
jno
jns
out
les
outsl
cltd
adc
scas
data16
ljmp
lret
xor
fsubrs
add
inc
and
push
movw
pushl
ret
movl
pusha
pusha
mov
movl
push
pushl
pushf
movb
lea
jmp
call
jbe
movsb
andl
dec
and
push
mov
cli
loopne
sub
jae
std
ret
and
dec
adc
mov
out
sub
repnz
xchg
testl
and
mov
dec
adc
jae
mov
insl
aam
je
push
jns
or
idivl
lret
jae
stos
mov
inc
repnz
add
ljmp
andb
dec
add
scas
clc
sahf
jmp
and
xor
jmp
dec
add
pop
push
pusha
call
mov
shlb
xlat
push
mov
dec
dec
mov
je
cmp
std
fiadds
int3
xor
mov
pop
adc
sbb
mov
cs
cmp
mov
cmp
jne
dec
jb
cmpsl
adc
mov
xor
jnp
xor
sub
mov
imul
stos
adc
insl
ffreep
das
adc
popa
pop
add
mov
dec
aam
clc
les
pop
std
push
inc
out
enter
shlb
push
jns
les
test
or
pop
rclb
mov
je
cmp
dec
add
pop
mov
fs
fistpll
mov
jnp
out
pusha
dec
push
in
pop
shlb
out
or
cmp
scas
imul
daa
stos
rcrb
add
in
lcall
loope
jo
cmc
pop
js
cmp
fimuls
lcall
pop
addr16
push
pop
mov
jbe
pop
test
nop
sbb
loope
test
pushf
cld
in
pop
push
out
xor
insb
pop
shlb
mov
jecxz
test
cmpl
insl
cmp
out
pop
pop
shr
jno
dec
nop
test
mov
aam
popf
bound
jne
inc
sbb
pushf
xor
je
subb
mov
push
mov
cmpsl
data16
dec
add
inc
jecxz
rclb
pusha
bound
cs
adc
cmp
or
mov
fimull
sahf
into
push
scas
jno
popa
jns
in
bound
sub
cmc
mov
sbb
ret
gs
xchg
mov
and
stos
fcoml
and
push
insl
aaa
xor
push
push
pop
fstl
pop
sahf
push
cmp
adc
test
imul
push
sarl
sti
lret
cld
add
dec
outsb
jecxz
gs
js
and
hlt
adcl
arpl
dec
lods
cwtl
and
xor
imul
mov
dec
mov
cmp
pop
jmp
inc
je
mov
es
lahf
stos
sbb
lcall
ret
dec
js
mov
pop
imul
jmp
cmp
sbb
xor
aam
sub
xor
mov
push
lds
lock
shlb
jl
int
pop
cmp
test
movsb
inc
xor
in
mov
stos
cld
adc
or
test
mov
les
rol
test
loop
jae
loopne
adc
rcr
push
pop
in
int3
cmp
sbb
xor
les
jecxz
inc
or
sub
lcall
inc
test
mov
daa
pop
test
push
daa
pop
or
adc
cmp
movsl
popa
lcall
ljmp
adc
sub
movsl
loopne
pop
jle
add
xchg
aad
push
and
cmpsb
mov
or
pop
xor
sbb
add
mov
hlt
sbb
rcrb
sbb
push
xor
push
in
jae
lcall
mov
inc
lods
dec
adc
inc
ret
insb
je
fbld
lcall
pop
adc
dec
leave
mov
adc
sub
inc
add
jg
pop
or
nop
pushf
loopne
dec
ret
jo
sub
out
imul
and
pop
jne
subb
in
popa
dec
add
sub
inc
and
cmpsl
cmp
add
dec
sub
test
ds
mov
mov
ds
xchg
sub
rolb
sbb
sbb
das
dec
push
test
mov
mov
adc
fildl
push
jmp
mov
pop
out
inc
mov
inc
mov
sub
mov
mov
imul
xchg
mov
dec
test
aaa
fadd
hlt
and
outsb
popf
cmp
loopne
dec
bound
dec
xchg
pop
push
stos
cmp
sbb
ljmp
push
test
pop
push
or
push
lock
jnp
and
sub
pop
push
xor
aaa
lahf
jnp
dec
sub
dec
mov
pop
sbb
inc
mov
data16
pusha
cmp
pop
mov
push
and
lahf
es
mov
xchg
fidivl
inc
jecxz
js
in
cmp
stos
xor
int
lret
jae
xor
fsubrp
add
dec
fidivl
and
popf
daa
lock
jecxz
js
ja
call
push
mov
cmc
mov
in
xor
or
arpl
call
ja
sub
pop
dec
dec
mov
sbb
ficompl
sbb
mov
pop
insb
les
sub
popf
inc
push
jne
sub
jecxz
shr
push
fcomip
imul
cmpsl
pop
push
adc
xor
les
dec
mov
arpl
xchg
push
imul
push
inc
dec
jno
int3
cmpsb
push
sbb
inc
fistps
loope
mov
push
pop
je
add
js
mov
cli
das
dec
adcl
push
ds
mov
dec
jmp
imul
jae
or
and
fs
in
insl
lahf
jecxz
fdivl
test
mov
jp
cmp
or
outsb
mov
ja
arpl
dec
fs
lock
cmp
cmp
cld
and
or
rcrb
test
pop
or
bound
pop
sub
jb
xchg
jecxz
pushf
adc
out
jo
sub
or
daa
in
dec
pop
jge
or
jo
jae
pusha
test
test
or
movsb
pop
filds
imul
popa
mov
xor
mov
sub
or
adc
jo
mov
push
test
subl
arpl
outsb
fldt
and
pop
andl
jg
cmpb
mov
push
dec
add
pop
pop
test
out
push
add
flds
ret
loope
push
jmp
aas
pop
inc
or
iret
mov
mov
pop
pop
sarl
mov
adc
leave
xchg
test
sub
mov
sbb
addr16
test
test
sub
clc
pop
test
fsubs
dec
stos
pop
cmp
aam
arpl
mov
imul
fs
js
mov
adc
cltd
imulb
xchg
scas
fnstcw
adc
dec
mov
push
cmpsl
jmp
lret
adc
inc
push
seto
enter
or
sub
lods
test
pop
orl
imul
mov
test
pop
xchg
jnp
jecxz
insb
ret
sahf
xorl
mov
repz
test
pop
or
in
scas
fcomps
inc
je
repz
insb
xchg
pop
mov
insl
push
stos
push
xor
sbb
pop
xor
sarb
bound
lcall
popa
sbb
push
mov
shrb
jne
xchg
data16
fwait
jnp
lock
xlat
sub
movsb
insb
pcmpgtb
inc
push
mov
gs
je
inc
mulb
ret
sub
jbe
imul
andl
test
push
mov
ljmp
xchg
inc
pushf
out
je
push
add
leave
jbe
adc
mov
jmp
dec
hlt
xchg
in
cltd
adc
outsb
jmp
andl
xchg
jecxz
adc
aas
inc
test
dec
fcomps
push
dec
cmp
cmp
push
andb
data16
mov
mov
in
test
lahf
jmp
es
push
pop
test
dec
js
xor
std
pop
or
stos
or
cmp
ds
pop
lods
ja
mov
push
xchg
and
or
sbb
mov
xchg
insb
mov
push
arpl
rcrb
mov
lods
jle
jg
xchg
fadd
pop
xchg
shufps
mov
int3
push
pusha
xchg
mov
pop
jo
cmc
loopne
adc
sub
push
outsb
mov
pop
in
das
sbb
sbb
jbe
sar
ja
stos
mov
push
test
or
sbb
scas
mov
and
fwait
mov
dec
adc
imul
dec
scas
fsts
cmp
sahf
xchg
sub
inc
out
inc
inc
lret
arpl
jle
outsb
cmc
pusha
lock
pop
test
dec
adc
cmp
push
and
push
cmp
push
xor
lahf
sub
cmp
sbb
inc
push
xor
cld
fidivl
push
push
call
movsb
cltd
stos
sbb
cmp
jno
dec
add
pop
enter
out
sarb
pop
inc
icebp
test
push
out
je
cmp
push
lcall
sbb
mull
add
shll
cmp
imul
fs
dec
or
xor
ja
inc
pushf
mov
aad
imul
inc
pop
pop
jbe
out
stos
or
lea
jns
jbe
cwtl
cmpl
fnstsw
xchg
je
call
scas
out
fsubrs
push
dec
daa
test
jp
sbb
test
inc
sbb
lret
mull
and
mov
xor
dec
push
cld
dec
inc
in
je
fucompp
ret
cmpsb
mov
push
shrl
sbb
xor
in
add
movsl
inc
scas
pop
test
push
and
in
dec
mull
lcall
sbb
pop
addb
iret
loope
or
adc
adcb
sbb
mov
sub
stos
jbe
icebp
push
cmpsb
pop
dec
sbb
lods
fsubrs
daa
lret
sub
stc
aam
jge
sbb
sub
test
or
out
xor
push
stos
pop
push
sbb
test
mov
and
lcall
bound
sub
push
and
fstpl
sti
xor
adc
pop
sbbl
jae
insl
aas
push
insb
fistps
clc
dec
mov
lcall
cli
lods
imul
add
and
lds
js
mov
out
rolb
lret
bound
pusha
mov
mov
sbb
jl
push
test
shlb
adc
scas
stos
fs
xchg
xchg
fmuls
ja
or
mov
mov
mov
sub
test
loop
push
inc
inc
imul
int3
cld
dec
dec
cmp
nop
mov
push
dec
lcall
gs
xor
stos
gs
je
in
cld
daa
rorb
arpl
orl
push
push
stos
mov
inc
or
arpl
insl
lods
mov
arpl
and
sub
repnz
fsubrl
mov
out
gs
xchg
cmp
lods
sbb
xchg
mov
cmp
fsubl
jmp
jl
mov
int
shr
in
and
mov
xchg
cmp
push
in
js
mov
nop
das
add
rolb
mov
lret
add
mov
jg
mov
pushf
add
orl
dec
xor
aas
fsts
arpl
pop
xchg
hlt
inc
jl
jbe
or
mov
push
dec
outsb
add
xor
pop
jmp
pop
sbb
sti
and
add
js
imul
or
stos
testl
lcall
sbb
dec
jp
mov
pusha
push
insl
lahf
sbb
data16
ficomps
mov
mov
pushl
push
inc
cltd
into
incl
sub
sbb
add
xor
shrl
mov
pop
or
pop
xor
jmp
testl
inc
mov
pushf
fwait
arpl
xchg
int3
cs
out
test
int
dec
pop
in
xchg
fisubl
jle
dec
pop
sub
shlb
sahf
xchg
inc
add
nop
imul
pop
es
sbb
fists
push
stc
push
andb
arpl
cltd
test
cmpsl
or
push
repz
dec
loopne
fldlg2
push
push
andl
jl
test
loopne
out
lds
push
or
out
jns
dec
cmpsl
imulb
cmp
push
sub
aam
xor
cwtl
or
lret
in
cmpsl
popa
lods
fs
inc
pop
pop
mov
jno
and
int
xor
fs
push
and
arpl
pop
or
cmp
xor
rcr
insl
lods
dec
dec
test
inc
test
lock
push
aam
mov
ja
fisubl
sbb
mov
mov
pop
fcomps
cmp
arpl
loop
pop
mov
adc
repz
popa
jp
inc
pop
pushf
inc
xchg
rcl
push
rcrl
sbb
pop
lods
mov
scas
cltd
cmp
movsl
or
popa
jbe
xor
and
inc
test
loope
mov
ret
mov
js
cmc
xor
mov
or
fistpll
mov
out
popa
mov
pop
sbb
lcall
pop
loopne
mov
arpl
mov
loopne
xchg
add
inc
push
jmp
cmpl
sbb
arpl
pop
sbb
sub
and
lret
mov
pop
or
add
and
cmp
int3
or
inc
push
in
mov
lcall
gs
or
notb
je
lret
data16
lods
cmp
and
sub
insb
adc
add
sahf
nop
cmp
dec
insb
sub
subl
mov
mov
shlb
jbe
jo
sub
mov
mov
lret
dec
cmp
adc
loop
in
ret
lods
adc
jb
dec
sub
out
imul
push
jg
sub
push
mov
dec
inc
pusha
mov
or
xor
pop
inc
ret
xchg
add
inc
cmc
insl
out
xchg
js
js
inc
les
jmp
stc
and
xor
dec
pop
mov
mov
sbb
sbb
adc
and
pop
movsb
inc
lcall
loop
xor
cs
pop
sbbl
nop
pop
mov
arpl
nop
cmpsb
and
stos
push
inc
enter
xchg
sbb
mov
xchg
mov
ret
xchg
stos
cmp
cmp
pop
outsb
cli
sahf
mov
cltd
jp
subb
cmp
and
xor
sub
int
pop
mov
add
pop
sub
hlt
orl
in
nop
pushf
test
xchg
shll
pop
push
call
push
or
pop
and
jl
mov
or
pop
pusha
dec
data16
or
push
imul
and
xor
cs
push
mov
in
xchg
fsubl
enter
js
cmp
inc
sahf
sahf
int3
sahf
lcall
inc
inc
and
dec
dec
cmp
dec
cmp
cmp
and
test
pop
sbb
adcl
jae
cmpsb
sbbl
sbb
pop
sbb
sbb
fidivl
inc
negb
out
inc
aam
mov
test
jb
int
cwtl
push
call
sub
mov
insb
into
lods
mov
inc
pop
sub
jp
mov
pop
je
dec
or
dec
pop
shlb
roll
fadd
jmp
filds
mov
stos
pop
or
out
sarb
pop
cmp
add
xchg
jmp
imul
lea
jne
fwait
jmp
xchg
mov
inc
insb
in
cmpsl
push
adc
push
jbe
je
stos
out
in
jae
in
test
jno
mov
mov
jne
mov
dec
ljmp
cwtl
nop
movsl
pop
xor
sbbb
add
inc
pop
jo
rorl
push
subl
lahf
inc
cmp
sbb
mov
lea
loop
dec
jl
jb
arpl
sub
rcrl
fiadds
inc
cmp
int
xor
dec
fsubr
xchg
push
inc
cmp
mov
fcmovbe
pop
inc
mov
adc
jb
fs
fstp
in
inc
or
xor
mov
test
adcl
cmp
ds
pop
xlat
imul
push
rorl
adc
cli
ret
arpl
iret
rorb
in
pop
mov
iret
lds
fistpl
or
adc
cli
add
sbb
sbbl
or
jbe
jecxz
mov
mov
add
popf
stos
jp
xlat
inc
repz
pop
cmpl
cmp
push
xlat
adc
push
rcrb
loopne
pop
add
add
sub
adc
lds
push
jne
add
fidivl
jl
push
jp
push
sbb
mov
jne
pop
inc
insb
sub
adcl
or
push
sub
ficomps
sahf
push
cmp
xchg
push
insb
pushf
push
add
sbb
jno
lea
mov
std
inc
jecxz
enter
loope
push
popa
jo
fs
cmc
imul
out
inc
cmpsl
insb
mov
ja
aad
push
pop
loopne
jb
sbb
je
and
adcl
ljmp
pop
add
sub
fs
scas
jne
shlb
pop
testl
xorb
loope
or
test
movsb
pusha
int
or
popa
outsb
add
mov
mov
test
xchg
sbb
sbb
pop
sbb
pushf
xchg
test
and
and
in
cltd
xchg
pop
push
xchg
cmp
and
bound
testb
jno
push
cltd
add
mov
lret
jno
mov
jbe
pop
pop
cmpl
js
in
jno
jl
lret
fsubrs
test
cwtl
and
and
sbb
and
sub
aas
pusha
and
adc
push
pop
insl
int3
inc
icebp
and
imul
push
adc
xchg
jne
aaa
data16
mov
add
push
sbb
in
inc
jo
add
add
jmp
mov
enter
adc
cld
pusha
jmp
ds
sti
addb
mul
pusha
mov
and
repnz
negl
inc
push
ds
jo
std
cmp
sbb
test
sub
cmp
jmp
repz
sbb
pusha
stc
sbb
xor
and
fstpl
pop
mov
mov
sbbl
pop
test
aad
sub
pusha
adc
stos
cltd
pushf
pop
rclb
cmp
lds
xlat
je
jmp
jo
pmaxub
jg
sub
xchg
add
pop
outsl
cmp
push
jo
pop
or
sub
pusha
icebp
adc
frstor
clc
cwtl
popf
loope
in
mov
adc
pop
lcall
leave
lcall
femms
xchg
mov
and
fsts
or
push
movsb
cmp
add
data16
dec
xchg
pusha
pop
in
cmp
dec
inc
jmp
fldl
jmp
jns
push
sub
add
mul
andnps
scas
sub
xlat
lods
pop
out
inc
or
push
sbb
fs
xor
jg
add
fmull
test
jo
insb
loope
and
imul
add
mov
pop
push
pop
stos
push
arpl
cmp
sbb
mov
in
jl
lods
inc
adc
adc
xchg
xor
sbb
loop
jae
xor
dec
xchg
mov
leave
jg
jmp
sbb
in
mov
xor
jmp
pop
sbb
scas
inc
dec
call
xchg
subl
push
divl
pop
mov
push
pop
leave
and
in
addr16
pop
dec
cmp
sbb
fistl
mov
in
aam
inc
leave
or
pop
test
jecxz
ret
sub
clc
push
test
xchg
mov
andl
push
sub
into
inc
out
repz
test
fstp
push
jecxz
sbb
sbb
mov
adc
inc
inc
sbb
inc
add
aam
add
sbb
fsubr
imul
imul
je
push
cmp
mov
mov
test
and
movsl
pop
pop
movsb
cmc
add
fisubrl
dec
pop
cmp
push
or
pop
mov
push
push
aam
inc
push
nop
arpl
pusha
jmp
fisubrs
jmp
pushf
popf
rorl
es
imul
push
pusha
lds
pushf
imul
inc
mov
bound
out
inc
sub
push
inc
fcoml
or
jmp
mov
stos
push
sbb
mov
leave
jnp
ss
sbb
mull
cmpsl
adc
pop
popa
dec
sbb
or
push
out
add
pop
fs
fs
inc
mov
pop
ljmp
inc
inc
cmp
adcl
sub
loopne
loope
stos
daa
loope
out
cmp
clc
ds
push
sbb
shld
push
lods
jecxz
shl
pop
test
and
or
cmp
dec
push
imul
adcl
or
imul
fisttps
xor
add
call
or
mov
inc
mull
pusha
xor
xor
das
int3
sbb
mov
jo
jl
dec
pop
mov
arpl
lret
fdivrs
push
insl
sahf
js
add
loopne
pushl
stc
out
movsb
sbb
lret
push
loope
dec
aas
adc
sbb
addr16
sbb
pop
data16
loopne
ja
les
cld
inc
sbb
pushf
mov
sub
inc
enter
inc
inc
shrb
push
clc
pop
mov
and
loopne
pop
addl
in
fwait
arpl
test
push
shll
jmp
xchg
mov
lret
adc
ret
pop
jp
std
or
mov
pop
aad
add
repnz
scas
dec
push
and
mov
nop
stos
orl
jbe
int3
rclb
add
pop
add
iret
gs
xor
jle
ds
jl
rclb
insl
ret
and
push
jecxz
adc
jae
movsl
or
jb
leave
aad
imul
in
xchg
div
mov
out
cltd
dec
gs
jo
ljmp
push
in
add
xchg
gs
test
mov
out
pop
arpl
xor
pop
es
lock
add
mov
sbb
inc
fisttpl
jmp
je
xchg
jbe
js
clc
sub
pop
mov
xor
xor
imul
stos
jo
sbb
daa
pop
mov
dec
out
hlt
push
popa
or
dec
inc
out
xchg
lret
data16
cmp
imul
ret
mov
sbb
and
movsb
xchg
stc
pushw
sub
div
or
add
ret
mov
sub
and
pop
loope
mov
dec
xchg
out
pop
fildll
add
push
xor
push
jmp
cmp
js
idivl
add
adc
mov
sub
xchg
lock
test
xlat
cld
or
cltd
jecxz
jle
dec
out
jle
sub
xlat
and
sbb
push
mov
iret
cmpsl
ficompl
pop
push
dec
adc
fsubrl
adc
cltd
out
repnz
es
out
lock
push
repz
jbe
adc
mov
dec
imul
lret
insl
pop
movsb
sub
sub
push
lods
orl
movsb
jns
sbb
inc
stos
pop
lret
adc
clc
gs
push
xchg
mov
sbb
fsubl
addr16
lret
aad
cmp
jo
popf
jge
jno
sub
ja
mov
cld
arpl
nop
pop
xor
mov
call
js
push
xchg
dec
pop
mov
movsl
addr16
push
jecxz
add
ds
scas
xchg
fcomps
ret
xor
std
xchg
push
mov
dec
sbb
popa
repz
push
dec
sub
movsl
cmpsb
arpl
mov
cmpl
lods
push
out
movsl
out
lods
add
pop
inc
scas
cwtl
dec
cmp
mov
mov
in
mov
push
mov
push
push
and
dec
pop
add
sub
push
and
inc
push
cli
sbb
test
add
push
xor
inc
int3
pop
js
jmp
jmp
add
stos
sahf
fiaddl
cmp
pop
fwait
mov
pusha
sahf
cld
imul
inc
push
inc
jecxz
pop
loope
adc
lods
add
or
in
lock
push
out
or
pop
cmc
adc
cld
pop
insl
mov
lods
fistl
add
dec
pushf
sbb
sbb
sbb
push
xor
pop
mov
inc
movsl
mov
xlat
mov
cmp
arpl
add
cmp
out
cmp
imul
and
pop
dec
fmulp
push
mov
test
pop
scas
data16
push
andl
adc
jnp
jno
pop
test
mov
pop
icebp
test
fsubr
mov
test
dec
sub
andl
sub
fs
ja
pusha
lea
inc
andl
mov
jge
pushf
and
xor
cmp
jb
push
repnz
sub
inc
in
fs
jbe
and
sbb
sbb
nop
lea
sub
fs
or
adc
pop
clc
push
cmp
xor
pusha
dec
mov
bound
and
push
dec
adc
mov
aad
pop
cmp
dec
sub
and
push
mull
mov
push
adc
push
das
inc
dec
push
dec
cwtl
xor
dec
adc
gs
stos
loope
xor
testb
sub
or
xor
imul
out
pop
mov
in
shrl
aam
cld
xor
outsb
add
adc
fdivp
imul
pusha
rorb
js
mov
daa
lea
sbb
dec
imul
pop
push
xchg
jecxz
aas
sub
lock
push
cld
outsb
outsb
loope
stos
dec
pushf
iret
or
push
sub
sbb
stos
leave
into
mov
fs
add
pop
cld
push
dec
inc
and
push
in
imul
xor
nop
pop
fcoml
shrl
mov
sbb
jne
jbe
sub
pop
inc
push
popf
sahf
adc
pop
addr16
dec
adc
pop
mull
push
enter
jno
pop
cmp
sub
pop
inc
les
sub
cmp
aam
cmp
pop
rolb
sub
gs
xor
inc
add
cmp
sub
lods
inc
inc
jne
pop
push
mull
imul
loope
sbb
sub
popa
dec
mov
test
mov
in
add
sub
jecxz
push
mov
ljmp
outsb
das
lods
pop
imul
ret
add
push
mov
dec
jecxz
mov
mov
push
and
imul
mov
and
jl
shrb
repnz
push
test
mov
jae
subb
imul
popf
loope
push
sbbl
test
dec
push
outsl
roll
ror
inc
or
cmp
pop
push
push
inc
pop
push
sti
lahf
mov
mov
das
movsb
dec
pop
push
push
inc
push
aas
outsl
sub
xor
sbb
inc
pop
jmp
sub
imul
jae
xor
aaa
push
xchg
mov
pop
add
jl
sub
divl
pop
ljmpw
xor
or
sub
mov
mov
fs
inc
sbb
bound
hlt
les
push
frstor
inc
dec
mov
adcl
add
je
mov
dec
insl
dec
clc
pop
sbb
push
test
xchg
push
ljmp
push
int3
dec
pop
pop
xlat
rcrl
in
xchg
xor
push
das
loope
movsb
add
and
adc
dec
addr16
push
movsl
es
sbb
add
xor
fs
decl
fidivl
iret
adc
shl
cmpsb
push
lret
add
aas
mov
call
adc
repz
jle
mov
aaa
sbb
push
xor
push
sub
cmp
pop
xor
inc
test
or
and
popa
loopne
sbb
into
dec
pop
dec
jb
xor
pop
dec
movsl
shll
sub
fsubp
js
cld
pop
jmp
cmp
and
lcall
insl
fdivl
sbb
cmp
mov
add
fs
pop
arpl
hlt
inc
imul
arpl
cmp
call
sub
jmp
push
mov
mov
pop
das
inc
imul
add
les
sbb
jl
jae
dec
ret
sahf
cmp
sub
lret
fstpl
inc
pusha
aaa
xchg
enter
xchg
inc
ljmp
rol
mov
arpl
ret
mov
ficompl
int3
bound
pop
adc
push
jne
arpl
out
faddl
call
js
xchg
fstl
xchg
bound
out
mov
sub
pop
mov
dec
loop
das
push
xor
roll
imul
lret
call
js
fwait
push
dec
repnz
push
movsl
addr16
inc
inc
add
fs
rcrb
ret
pop
clc
sub
sti
mov
push
sti
sub
push
xor
out
inc
pop
pop
mov
jmp
movsl
sub
jo
and
mov
testb
popa
jns
xlat
out
pop
push
mov
jnp
mov
in
cltd
subl
aaa
sub
imul
mov
xchg
popa
mov
jo
push
mov
xchg
cli
cmp
sbb
mov
pop
adc
imul
dec
sahf
inc
stos
jb
add
xlat
dec
and
leave
in
push
sub
xchg
addr16
mov
test
mov
repz
dec
fldt
arpl
andl
sbb
pushf
jge
cmpsl
lret
xor
adc
mov
mov
popa
xchg
push
push
fstps
xor
insl
fwait
xor
cli
jg
popa
inc
add
sub
rolb
xadd
fs
dec
mov
inc
stc
pop
add
lods
test
jl
mov
jecxz
mov
xor
pusha
xlat
ret
ficomps
sub
fcom
jmp
pop
jecxz
mov
lock
xor
pusha
divl
movsb
mov
pop
xchg
xchg
sbb
fs
ja
push
cli
mov
xchg
dec
sbb
mov
loope
test
mov
add
sub
jnp
loop
pop
daa
push
mov
pop
in
shrb
xor
sarl
outsb
lret
push
inc
addr16
testl
adc
lods
dec
jle
dec
xchg
dec
pop
sarb
dec
mov
ret
and
adc
adc
mov
movsl
jmp
js
add
rcrb
mov
push
pop
push
inc
inc
arpl
nop
pop
pop
fsub
popa
mov
out
mov
dec
fucom
andl
cltd
dec
decl
mov
xchg
pop
sti
sarb
jecxz
mov
jl
imul
and
jb
sbb
jmp
lea
pminsw
dec
push
test
cmc
cmp
dec
in
sbb
arpl
movsb
jecxz
and
inc
mov
pop
loop
mov
rcrl
dec
xorb
pop
fldcw
and
testl
dec
lea
ds
mov
fwait
outsb
push
mov
into
movsl
sbb
in
jmp
inc
in
push
xchg
mov
fs
mov
push
in
mov
sahf
add
pop
mov
inc
orl
cld
sub
addr16
divb
pop
cli
mov
popa
lods
filds
sbb
shrb
stos
push
jmp
call
and
and
pusha
popa
xor
pop
sbb
loope
jecxz
mov
pop
je
push
sub
scas
add
pop
pop
pop
ljmp
insl
xor
push
imul
lods
orl
add
cmp
sbb
pop
scas
pop
jle
pusha
and
inc
mull
loope
adc
mov
dec
aam
dec
stos
jae
push
pusha
inc
fdivrs
jmp
shlb
scas
in
mov
mov
fcompl
call
arpl
insl
es
xor
push
lock
push
mov
xor
jmp
std
out
cmpsb
clc
lods
pop
imul
adc
pop
inc
or
jne
push
lods
sub
js
fisubrl
sub
jmp
sbb
cmp
sbb
int3
fs
mull
jmp
sub
arpl
push
mov
out
insl
inc
fcmovnb
and
daa
inc
gs
fsubrl
jmp
loopne
lcall
ret
ficoml
dec
movups
and
push
pop
scas
call
cmp
in
adc
push
jmp
bound
and
adc
mov
jmp
nop
or
cli
mov
test
jmp
fs
in
movsb
aad
and
sbb
xor
dec
lcall
fnstenv
xchg
inc
jbe
jns
pop
cmpl
and
sbb
loop
xor
scas
fwait
mov
or
jno
push
das
cmp
out
inc
adc
dec
pop
adc
lds
stos
daa
in
cs
sub
cmp
test
movsb
mov
arpl
insb
movsl
push
negl
and
add
sbb
xchg
dec
cmp
insl
adc
sub
jmp
mov
xor
xor
dec
adc
movsl
imul
jmp
push
in
xor
negl
push
push
lcall
je
aas
dec
insl
data16
loopw
in
and
xchg
sub
jmp
push
push
in
and
cmpl
in
jae
add
mov
and
mov
loop
dec
data16
jnp
xchg
inc
fildll
insl
imul
subl
clc
jae
iret
inc
dec
jbe
imul
sbb
pusha
sbb
pusha
in
xor
aaa
loope
es
loop
adc
bound
pop
out
loop
adc
push
and
jns
add
call
repz
mov
fcomps
jbe
xchg
cmpsl
popw
test
pop
jl
mov
jmp
imul
add
cli
inc
adc
and
fistpl
push
or
push
cld
icebp
fmull
mov
in
dec
inc
test
out
scas
and
pop
stos
mov
popa
test
lods
or
lret
fmul
fsubl
aaa
push
jo
cmpsl
gs
loope
adc
cmp
fbld
jo
add
push
cmc
lods
xchg
loope
xchg
cmpsb
test
inc
adc
cmp
loopne
inc
leave
cmp
ja
push
cmp
bound
dec
and
leave
mov
mov
dec
dec
lret
lret
push
ret
in
sbb
lcall
xlat
sub
cmc
dec
add
maskmovq
imull
xchg
loope
cmp
push
stos
push
adcl
push
sub
cmpsl
leave
int3
push
andl
out
mov
gs
xor
cmpsb
sti
pop
imul
pop
movsb
fcoml
cmp
push
cmpsb
cwtl
fwait
je
pop
cmc
pop
inc
xchg
xlat
add
xchg
cmpl
es
adc
in
or
pop
sbb
fs
pop
sub
add
pushf
outsb
je
sub
jmp
arpl
push
mov
sbbl
xor
movsl
dec
cmpsl
sub
jecxz,pt
adc
and
sub
jb
pop
addr16
jns
xchg
pushf
lea
bound
push
test
mov
movsl
mov
sti
adc
fsubrl
int3
jle
movsl
daa
mov
cmpsl
push
jmp
sub
dec
mov
xchg
popa
insl
pushf
repnz
adcl
push
cmp
jge
lret
mov
mov
negl
sub
add
imul
orb
add
mov
andb
inc
insl
repnz
dec
int3
testl
push
push
rcrb
pop
mov
test
dec
ja
and
test
add
pop
cmpsl
arpl
aas
js
out
ds
push
mov
loop,pt
bound
xor
sub
xchg
inc
jl
insl
ss
aaa
pop
mov
inc
add
negb
stos
sbb
xor
and
sahf
sub
sub
out
jnp
das
movsl
insb
stc
pop
jne
imul
dec
sbb
rcr
xchg
jmp
push
pop
aas
addr16
out
inc
in
addb
test
push
push
mov
testl
jnp
jne
sahf
inc
jl
sub
lret
dec
mov
out
xor
xor
sub
stos
pusha
jmp
shlb
mov
jne
ljmpw
xor
stos
call
adc
xchg
int
ret
dec
push
push
mull
or
jo
pop
imul
adc
aad
lcall
sub
pop
cmpsl
or
lods
push
push
push
mov
push
popa
imul
adc
mov
or
fcompl
das
dec
jae
sub
sub
mov
inc
cltd
lock
jmp
fsubrp
lods
mov
movsl
es
push
orl
pop
mov
fldt
call
inc
out
sub
pop
ljmp
pop
pop
push
pop
gs
loop
mov
cltd
pop
adc
jmp
push
and
adc
mov
popa
test
out
addr16
mov
stc
decl
inc
dec
addr16
in
jg
lock
ffreep
dec
clc
sar
push
jmp
pusha
lds
andb
out
pop
push
cmp
inc
cmpsl
inc
outsl
dec
clc
data16
pop
cli
jnp
lods
mov
pop
sub
push
adc
loop
sbb
in
stos
xchg
pushf
xchg
scas
sbb
or
jns
imul
sbb
in
dec
pop
popa
test
je
jno
pop
pop
lds
pushf
in
int
push
pop
mov
test
cs
inc
testb
cmp
jmp
dec
push
lret
sub
pop
pop
pop
call
in
xchg
xchg
inc
push
fildll
aas
imul
call
inc
nop
je
rcr
mov
dec
pop
scas
pop
add
ficompl
mov
mov
scas
mov
inc
shrl
sbb
out
dec
cmc
sbb
inc
cli
jmp
mov
js
int
mov
push
inc
add
jp
inc
adc
stos
push
mov
loopne
cmpsl
push
add
fisubrl
ljmp
outsb
dec
fistps
adc
pop
out
sbb
aad
xchg
pop
or
incl
in
sahf
inc
test
sbb
dec
fxch
arpl
cmp
xlat
loope
dec
cmovl
and
mov
dec
stos
aad
and
stc
sti
inc
cmp
fdivrl
pop
add
cmp
xor
cltd
aam
clc
xor
or
fisttps
pusha
jl
imul
jbe
or
divb
push
pop
dec
inc
addl
push
inc
aaa
push
loop
lods
pushf
pop
lret
inc
enter
sbb
arpl
mov
es
add
test
cmp
dec
push
adc
push
clc
pop
loop
sti
cmp
call
out
jge
xor
xor
lods
out
fstpl
cs
ret
xor
loope
clc
test
imul
add
je
repnz
add
stc
imul
outsb
sub
outsl
outsb
imul
or
lcall
movsl
movb
addb
add
xchg
repz
pop
cmp
jbe
inc
jne
ret
pop
lret
pop
std
shlb
or
cmpsb
scas
mov
xor
pop
in
ret
insb
and
daa
adc
jmp
sbb
mov
bound
cmpsb
out
push
les
push
aam
adc
push
jmp
mov
incb
jl
inc
sub
xchg
cld
sbb
call
daa
xor
jg
pop
cmp
push
xorb
ja
shlb
jle
lret
push
dec
ja
daa
sbb
dec
push
std
jbe
loopne
pusha
jmp
int
pop
dec
es
cwtl
mov
jecxz
push
pusha
loopne
imull
mov
pop
push
fs
push
cwtl
lods
adc
pusha
pop
xchg
or
cmc
fdivr
inc
mov
dec
push
mov
rorl
push
inc
addr16
pop
pop
fistps
mov
fisttpl
pop
sti
sub
out
inc
stos
test
outsl
mov
sbb
rcr
xchg
test
and
call
fiaddl
push
xor
int3
aaa
pop
mov
mov
arpl
and
jmp
sbb
iret
loope
push
push
clc
arpl
ficoms
jae
test
out
inc
loope
adc
dec
sbb
arpl
shlb
scas
test
mov
jbe
and
in
clc
in
push
daa
outsb
or
arpl
std
adc
sbb
jnp
cmp
enter
or
push
ret
push
dec
ror
jmp
fisubl
jo
push
pusha
dec
pop
outsl
rcrl
pop
stc
pop
out
push
jno
sub
mov
sub
loope
loopne
test
into
push
and
jae
movsl
es
fldt
jne
mov
jmp
mov
dec
out
test
test
mov
or
imul
cmp
adc
pusha
in
jl
push
sub
sub
lock
imul
push
fbstp
mov
adc
or
insl
pop
xor
popa
jge
hlt
test
add
xchg
pushf
call
rcr
imul
loope
fstl
clc
dec
fistps
and
dec
int3
mov
negl
daa
pop
add
les
adc
sub
xchg
inc
out
arpl
jl
sbb
mov
or
xor
pop
arpl
adc
in
mov
cmp
imul
divl
xor
sub
jl
out
jl
sbb
and
shll
popf
insl
lcall
je
push
inc
pop
sbb
cmp
dec
popf
es
js
out
jle
pusha
dec
popa
divl
inc
add
adc
cmp
adc
loope
inc
pop
mov
repnz
mov
pop
or
and
aas
subl
test
pop
push
xlat
push
xchg
and
pop
dec
inc
jae
jmp
xchg
cmp
leave
add
push
test
shrl
in
and
jo
js
je
push
dec
cmp
aam
adc
jmp
out
js
sub
sbbl
daa
and
adc
sub
fs
add
mov
icebp
pop
lret
push
xor
bound
orl
xor
test
movsl
adc
cmp
adc
fcomps
and
sbb
inc
mov
adcl
push
dec
sbb
pop
jne
dec
in
in
push
pop
pop
imul
or
push
in
pop
jne
int3
push
imul
jecxz
insb
negb
aad
pop
jne
push
mov
in
popa
mov
outsb
sub
negl
mov
pop
je
adc
pop
andl
cmp
add
into
sbb
or
push
pop
in
cwtl
call
mov
in
add
jl
jnp
inc
and
pusha
repz
dec
adcb
sub
pop
mov
in
mov
int
stos
fwait
imul
lock
push
pop
push
pop
jmp
fs
inc
jns
insw
dec
xlat
rcrb
mov
sbb
adc
icebp
je
stos
cmp
mov
push
shrb
lods
inc
xor
lods
push
dec
fwait
loop
in
xor
imul
pop
mov
push
inc
and
dec
int3
jns
out
fmull
arpl
mov
das
lds
push
fstps
dec
cld
sub
jecxz
pop
sbb
jmp
fimuls
dec
pop
test
dec
jl
pop
js
fisttpl
sbbl
gs
inc
add
imul
ja
mov
pop
fwait
adc
fmul
lret
dec
outsb
dec
pop
lret
pop
ret
inc
push
cmp
dec
dec
stos
pop
outsl
out
jo
dec
xor
dec
iret
inc
add
sbb
sub
inc
pop
xor
out
xor
push
and
arpl
aam
nop
imul
or
mov
dec
fadd
mov
pop
call
inc
jmp
push
mov
fidivrl
out
push
adc
call
and
pusha
movsb
arpl
push
dec
cmp
jp
push
fisttpl
sbbl
fisttpl
sbbl
fisttpl
addl
dec
loopne
pop
sbb
arpl
clc
sbb
pushf
mov
mov
loopne
pop
push
in
pop
xlat
mov
jle
pop
cmp
and
lahf
pop
out
fcompl
imul
dec
adc
mov
addr16
data16
insb
sub
adc
pop
sub
stos
push
testl
in
xor
aaa
add
push
cmp
sub
mov
jne
mov
insb
insl
sub
pop
adc
ja
xchg
ds
sbb
cmp
sbb
xor
xor
fisubrl
stos
cmp
scas
mov
mov
dec
loope
repnz
and
pusha
sub
xchg
inc
out
mov
xchg
pop
xor
mov
stos
sub
inc
lods
sbb
test
cltd
inc
pop
xchg
dec
jecxz
sub
push
pusha
mov
int3
movsl
movsb
les
popa
movsb
add
mov
out
jecxz
stos
sbb
adc
sbb
xchg
fwait
dec
mov
imul
inc
xchg
mov
int3
popf
into
and
inc
mov
aam
lds
push
and
ret
std
pop
shlb
mull
jo
push
push
cmp
out
fdivl
mov
cwtl
mov
push
pop
push
push
mov
cld
xchg
dec
jecxz
int3
jge
test
cwtl
and
jns
mov
cmc
sbb
mov
mov
jb
dec
cmp
ss
mov
clc
pusha
inc
fwait
sahf
pop
dec
divl
subl
pop
inc
mov
lods
jns
in
sbb
dec
cmpb
push
inc
pop
push
xchg
inc
adc
clc
sub
push
stc
call
push
dec
pop
imul
addr16
inc
arpl
imul
mov
fidivrl
sub
scas
mov
clc
dec
jmp
stos
push
test
imul
arpl
imul
clc
jl
xchg
mull
push
jmp
movsl
and
repnz
imul
aam
push
pop
mov
loop
and
or
mov
pop
mov
or
imul
mov
roll
lcall
and
adc
mull
popa
cmpsb
subl
push
and
pop
int
mov
mov
and
pop
test
pusha
push
jne
dec
pop
fs
sub
shll
mov
add
test
jae
repnz
test
push
jne
xor
mov
add
jl
cld
cmpsl
push
jecxz
mov
call
push
test
pusha
in
es
outsb
dec
lock
mov
jnp
mov
andb
mov
jmp
jmp
movsl
out
inc
cltd
adc
loop
fs
dec
mov
nop
inc
or
int3
inc
imull
sbb
dec
inc
xchg
fs
cmp
push
mov
bswap
push
fsubl
sarl
mov
cmp
lcall
add
sahf
jecxz
sbb
lock
movsl
dec
in
or
push
gs
pop
adc
jmp
pop
movsb
aam
pop
inc
icebp
repnz
lret
cmp
xchg
popf
into
adc
mov
push
jecxz
es
daa
and
inc
bound
test
push
mov
push
fbstp
test
mov
cs
pop
xchg
sbb
cmp
lret
add
sub
addr16
test
jb
pop
data16
or
fists
push
push
xor
cmpsl
xchg
into
test
xor
inc
lods
cmp
cmp
and
adc
and
pushf
pop
aaa
cmp
push
push
cmp
add
sub
sbb
inc
repnz
lods
test
xor
cmp
pop
ss
inc
push
mov
sub
pop
aaa
xor
or
or
call
insb
jns
cmp
shll
jns
cmp
arpl
cmp
sub
and
sub
loope
addr16
or
fs
pop
sub
sbb
cld
sub
pop
sub
mul
fdivrl
or
cld
iret
or
sub
pop
pop
xor
jl
inc
lea
in
jg
or
push
aad
shrl
notb
loope
mov
sbb
outsl
mov
jge
jmp
and
mov
mov
and
enter
dec
jmp
bound
cmp
loope
stos
fdivs
pop
scas
dec
fs
pop
dec
push
adc
lods
orl
push
leave
sub
dec
cltd
inc
push
popa
lods
sbb
xchg
jmp
or
push
cld
fcmove
and
aaa
sub
popa
jno
repnz
sub
pop
mov
addr16
test
js
loop
jle
lods
pop
out
insb
dec
clc
ss
pop
jge
adc
lods
imul
cmc
dec
inc
movsb
sub
sbb
mov
mov
lret
pushf
nop
ret
loop
mov
negl
xchg
es
sub
repnz
out
pop
pop
jo
push
mov
push
fdivrl
outsl
inc
push
dec
scas
sbb
lock
imul
jo
add
dec
dec
or
test
adc
loopne
jecxz
sbb
push
in
in
mov
pop
loop
addr16
out
jo
cmpsb
filds
jge
push
dec
dec
cmp
orl
jae
fmull
sub
push
bound
cmc
pop
adc
movsb
jp
sbb
dec
cmp
cli
pop
stos
vfmadd231sd
repnz
pop
mov
fadds
cld
pop
popa
push
test
push
xchg
repnz
sub
sbb
push
mov
mov
pop
jmp
jl
inc
dec
cli
jg
sub
pop
lret
push
sbb
dec
loop
outsl
sub
push
daa
imul
xor
addr16
cmp
cmp
out
jle
aam
mov
fistps
sbb
mov
insl
fs
mov
cs
add
fbld
sbb
mov
test
pushf
jmp
jns
inc
mov
inc
jl
data16
test
loopew
mov
fimull
mov
fs
jl
mov
loop
data16
daa
mov
push
loopne
movsl
and
push
lahf
xor
sub
test
repz
cmp
loopne
rcll
push
mov
ret
loopne
insl
inc
cmp
jmp
fbstp
fwait
inc
ret
jecxz
sub
andl
and
int3
sbbl
sub
cwtl
mov
mov
popa
xor
sbbl
cmp
dec
add
adc
mov
popa
rorl
jb
idivb
push
add
sub
je
inc
negl
outsl
jb
sbb
addl
xlat
add
xchg
sub
in
push
sbb
push
xor
pop
lods
aam
loope
sbb
push
notl
xor
into
jle
push
push
push
pop
in
fdivrs
in
bnd
mov
jb
jle
and
mov
and
inc
out
ret
in
addr16
xchg
fnsave
enter
jecxz
es
addl
and
or
and
cmp
cmp
sub
or
cmpsb
loopne
cmp
dec
xor
xchg
into
les
sbb
pusha
clc
lods
ljmp
push
jecxz
movsl
test
hlt
dec
movsb
lcall
jmp
sub
add
fildl
dec
fs
movsb
push
enter
outsl
pop
sahf
adc
loope
call
dec
pop
sub
inc
pushf
jmp
jp
push
mov
dec
inc
jnp
gs
imul
inc
lret
push
jmp
lea
and
inc
sbb
leave
int3
stos
jae
fucomi
pusha
pop
jecxz
xchg
xor
sbb
fs
add
dec
vmovhps
pop
inc
imull
inc
push
adc
cld
dec
pop
lret
cs
jge
in
fwait
jmp
bound
inc
xor
movsl
fwait
lods
clc
shlb
and
add
jo
xor
rolb
addr16
ret
out
adc
in
inc
ja
push
or
dec
leave
dec
cmp
pop
xor
sub
test
in
mov
in
pop
mov
gs
jb
sti
ds
arpl
push
orb
sub
repnz
adc
enter
stos
jge
in
xchg
add
fnstsw
imul
in
jecxz
jl
pop
and
dec
cmp
stos
cld
xchg
in
cmp
fists
loope
outsb
pop
idivl
push
jo
je
pop
cmp
stos
xor
pusha
imull
stos
jb
and
int3
sub
pop
adc
and
cmpsb
imull
dec
and
in
stc
push
lock
push
jne
dec
imul
sub
testl
push
filds
mov
shlb
sub
push
pop
lds
pop
shrb
cmpsb
js
adc
pop
dec
pop
sbb
fs
cmp
and
sub
movsl
pcmpeqb
rcll
imull
inc
stos
jno
ss
in
iret
and
xor
fcomp
je
int
xchg
jmp
inc
clc
push
add
and
jmp
push
loope
push
jle
xchg
dec
clc
int3
mov
jns
xlat
cmp
push
fbld
mov
push
mov
mov
mov
push
pusha
sbb
dec
outsb
jecxz
jp
xor
js
outsl
mov
sbb
fwait
adcb
mov
mov
bswap
pop
jp
xor
testl
pop
outsb
stos
fisubl
jnp
push
stc
inc
in
out
jbe
and
and
sbb
ss
arpl
ret
push
fsubrs
in
cmc
push
sbb
pop
ficoml
dec
sub
mov
arpl
mov
xor
sub
pop
jl
inc
ljmp
cmp
pop
inc
lods
dec
push
test
mov
inc
movsb
stos
stos
mov
and
mov
inc
insl
xchg
dec
dec
cmp
adc
sbb
pop
dec
loope
ret
dec
jmpw
xchg
loopne
stos
aas
outsb
and
fldenv
mov
repz
pop
les
or
outsb
mov
stos
push
add
or
add
mov
mov
add
icebp
loope
mov
push
movsb
inc
xor
sub
sbbb
and
cltd
pop
xchg
mov
adc
xor
dec
imulb
dec
and
xchg
daa
cmpsl
addr16
jecxz
dec
lds
push
out
push
fs
dec
mov
cmp
sbb
fidivl
test
xor
and
jl
or
inc
mov
dec
push
add
cld
sub
mov
jmp
stc
jecxz
pop
xor
sub
add
dec
mov
jnp
ljmp
pop
insl
notb
jo
push
aam
cs
imulb
addr16
shl
jmp
or
sahf
sahf
hlt
cmp
sti
mov
aam
push
fwait
mov
mov
testb
popf
in
cmp
lret
arpl
je
pushf
sub
cwtl
pop
xor
data16
add
lret
xchg
test
addr16
sarl
mov
xor
push
aad
cld
pusha
inc
xor
push
incl
stos
insb
andl
pop
sub
and
je
pop
in
mov
pop
jecxz
pop
and
lods
sub
jl
pop
sbb
js
add
pop
pop
pop
addr16
and
mov
in
and
sbb
pop
mov
int
mov
into
sub
cmp
pop
loop
sub
movsb
push
call
push
je
arpl
hlt
push
xorb
dec
cld
dec
mov
push
mov
mov
cmp
dec
xchg
inc
sbb
orb
push
sbb
and
jnp
or
pop
inc
imul
pop
daa
gs
imul
stos
pop
jae
and
loopne
sbb
data16
loope
mov
adc
mov
icebp
out
loopne
fsubr
es
fs
jmp
rcr
jge
iret
sbb
arpl
jae
repz
dec
fistl
sahf
imul
jecxz
cmp
push
imul
cmp
jbe
or
jno
pop
pop
adc
pop
pusha
int
and
adc
mov
pop
xor
notl
pop
dec
insl
jae
push
pop
pushf
in
lcall
dec
pop
push
popa
mov
call
and
ds
cmp
cmp
dec
mov
xor
sub
inc
je
xor
pop
pop
fistpll
inc
mov
cmp
and
adc
lcall
clc
jmp
inc
push
cltd
push
jbe
daa
mov
dec
test
dec
xor
movsb
sahf
jecxz
pop
cld
and
adc
out
data16
jg
xchg
cld
pop
cmc
jecxz
xchg
sahf
mov
imul
pusha
idivb
repz
lcall
pop
mov
adc
push
push
lret
enter
fdivrl
xor
sahf
fs
call
and
adc
adc
and
sub
push
mov
cmp
cli
sub
push
mov
pop
enter
enter
int
stos
xor
add
cli
icebp
popa
pop
sahf
insl
cltd
jle
pop
cld
rcrb
icebp
pop
mov
test
insl
lret
xchg
xchg
test
xor
hlt
decb
or
popf
neg
add
pop
mov
push
test
dec
loope
inc
sbbl
out
test
pop
call
ret
sbb
int3
data16
jb
dec
sar
ret
fwait
lock
xor
jg
pop
lea
jg
inc
fbld
pop
cmp
ljmp
je
sbb
push
dec
insl
je
shlb
clc
in
adcl
dec
dec
sahf
inc
idiv
push
mov
orl
stos
add
lret
cli
jge
pop
inc
inc
arpl
mov
jl
int3
or
aad
shr
lods
sub
push
sbb
fmuls
sbbl
xor
cmp
dec
scas
bswap
mov
repnz
fwait
mov
dec
outsl
sbb
xor
bound
push
jnp
mov
outsb
out
or
and
push
test
stos
add
jmp
stos
dec
xor
loope
mov
je
outsb
pop
xor
mov
popa
inc
addl
jecxz
arpl
dec
movsb
mov
and
adc
cmpsb
je
mov
pop
mov
in
fbld
adc
sub
sbb
pusha
xlat
aam
push
mov
out
dec
out
jmp
pop
jge
arpl
mov
jo
lock
addl
push
arpl
in
mov
jle
xor
popa
popa
jecxz
call
lret
mov
or
inc
cmp
jle
xchg
leave
mov
repz
dec
jecxz,pn
xor
ljmp
sbb
xchg
inc
push
fildll
push
aam
mov
push
xchg
into
scas
sahf
mov
stos
cs
or
hlt
shl
push
cmpsb
in
lret
int3
les
add
imul
insb
sub
test
js
imul
jmp
in
pop
aas
xorb
ret
and
orl
push
push
mov
push
mov
push
iret
add
rclb
lcall
jae
xchg
cmpsl
repz
in
rcl
ficoms
lds
stc
ds
xor
mov
cmp
push
mov
jae
loop
dec
cmp
sub
mov
xor
stos
aas
data16
push
mov
gs
inc
add
inc
and
mov
dec
fisttpl
divl
inc
push
adc
faddl
outsb
dec
mov
daa
aaa
mov
test
lods
bnd
fs
lock
dec
jmp
push
movsl
int3
je
cmp
adc
arpl
or
popa
lret
pusha
decb
sub
jnp
arpl
movsb
and
mov
pusha
decb
or
and
mov
std
add
sar
std
shll
fs
jge
stos
std
dec
sub
std
aaa
and
push
adc
or
and
fcomi
dec
call
jo
adc
pop
or
cmpsl
cld
out
add
push
push
hlt
mov
pop
cmc
arpl
push
adc
xchg
lea
dec
mov
jbe
push
cmc
imul
xorb
or
jo
outsb
shlb
adc
sahf
push
outsl
arpl
cmp
pop
imul
jo
pop
in
pop
cmp
add
shlb
pop
dec
mov
add
aam
call
mov
divl
xor
add
aaa
xchg
fcmovu
or
xchg
scas
and
aaa
dec
imul
mov
pop
push
addps
sbb
xchg
hlt
fstl
push
adc
push
mov
bnd
inc
stos
imul
lret
loopne
add
xlat
loopne
mov
cwtl
sbb
loop
dec
rcrb
mov
lret
cltd
subl
fucomp
mov
ds
pop
not
dec
cmpsl
imul
inc
dec
push
enter
bnd
cmp
ss
orb
pop
loope
and
and
adcl
movl
lea
mov
xchg
jno
or
lds
or
movsb
call
or
add
jmp
mov
mov
xor
sub
jle
shrb
push
js
movsl
in
daa
pusha
pop
push
rol
dec
xor
pop
fnstsw
push
xor
cs
xchg
int
sbb
sahf
dec
push
sub
jb
dec
and
mov
mov
sub
lods
clc
or
mov
insl
and
push
arpl
dec
lret
lret
push
pop
andl
dec
out
mov
gs
mov
xchg
lret
dec
mov
mov
data16
adcl
jmp
xchg
inc
sahf
xchg
test
xor
js
inc
ret
ss
in
stc
fistps
or
inc
js
dec
jecxz
les
dec
and
and
xlat
add
test
push
adc
push
sbb
imul
call
imul
mov
cwtl
jmp
mov
inc
mov
in
andl
arpl
inc
cmp
nop
stos
pop
jae
mov
cmp
fisubl
inc
adc
xor
scas
pop
arpl
rclb
andl
dec
sbb
sbb
pop
cmp
push
jbe
fs
divl
imul
mov
test
push
sbb
fisttpl
in
adc
shlb
scas
sbb
mov
popf
pop
xor
stc
imul
bound
jo
add
lds
imul
push
fbld
push
cld
mov
pop
imul
cmc
cmp
int
test
frstpm(287
jecxz
psrlw
aas
test
sub
jbe
movsb
hlt
stos
stos
orl
lods
jb
popa
and
cmp
xchg
in
subb
mov
or
dec
call
out
ss
out
jae
jp
subl
add
insl
jnp
fwait
xorb
fnsave
sbb
ja
lcall
int3
call
jecxz
pop
sbb
insb
ss
loope
fucomip
jl
mov
test
or
cmp
sub
aam
pop
scas
scas
sub
js
arpl
xor
xchg
mov
xorl
mov
jecxz
loope
sbb
insl
arpl
pop
mov
mov
or
stos
sub
nop
pop
stc
jmp
imul
mov
fcmovnbe
cmp
mov
fs
jg
mov
mov
sub
adc
adc
lock
or
dec
mov
daa
or
fsubl
dec
les
shr
push
or
lods
loop
pop
or
mov
jle
imul
and
xchg
lods
and
pop
cmp
dec
out
xor
in
jno
cmp
pusha
bound
in
gs
add
push
cmp
xlat
jae
push
testl
pop
test
xor
and
pop
pop
pop
imul
add
dec
outsb
push
out
mov
aaa
lahf
dec
pop
sbb
adc
addr16
mov
push
inc
into
aaa
idivl
sub
pop
sub
ficoms
pop
imul
pop
push
outsl
lret
xorw
mov
arpl
and
icebp
or
pop
enter
cmp
sbbl
into
out
mov
pop
push
jmp
stc
popa
pop
cmpsl
popf
in
jmp
in
or
pop
mov
cmp
ret
sbbl
ret
add
dec
sbb
cmp
movsl
clc
ja
push
enter
leave
xor
in
cltd
cmpsl
sbb
dec
and
aas
pop
sub
popa
inc
jmp
les
adc
shlb
rorb
shll
fistps
lods
mov
fistpl
mov
rcrb
ficomps
mov
add
mov
xlat
imul
ljmp
mov
sbb
js
lahf
lock
jmp
insb
insb
out
test
imul
insl
sub
pop
out
mov
test
in
arpl
and
js
outsl
or
loopne
data16
add
inc
rcl
mov
gs
testl
gs
fistps
push
out
sub
mov
or
adc
and
bound
and
mov
clc
sub
icebp
in
pop
loop
pop
jecxz
stos
andl
rcrb
loop
sub
or
add
aad
movsb
xchg
bound
in
les
adcl
mull
jno
jge
cmp
mov
jp
sbb
enter
pop
push
sub
inc
jl
sbb
in
jle,pt
xlat
push
lock
fadd
arpl
pop
cld
push
push
jle
jp
or
cmpl
repz
insl
in
sbb
inc
inc
cmp
pop
mov
and
mov
popa
xor
pop
sti
popw
adc
jb
pop
inc
xlat
mov
push
imul
push
arpl
jmp
pop
add
and
in
hlt
pop
push
dec
xchg
sub
and
push
push
push
stos
movsb
scas
and
mov
push
out
adc
xchg
test
andl
jno
jge
mov
cwtl
imul
sub
cmp
ficompl
in
sub
mov
dec
push
xor
in
mov
mov
data16
pop
jne
xchg
sub
imul
andl
jmp
lahf
inc
lods
call
add
sub
icebp
cld
sbb
dec
dec
add
aas
fildll
adc
dec
xchg
lahf
cmpsl
xchg
stos
or
xor
loop
mov
test
or
orl
pop
pop
pop
in
push
sbb
jle
insb
cwtl
push
add
imul
xchg
or
jp
adc
pop
lods
cmpsb
push
inc
in
gs
jb
out
jbe
sub
pop
mov
outsb
insl
aaa
sub
dec
gs
pusha
ja
aam
sbb
js
test
pop
in
imul
cmp
jb
lds
mov
or
jmp
outsb
sub
das
pop
pop
fs
test
je
sub
jnp
in
lret
push
jne
jmp
xchg
out
pop
and
outsb
rcrl
ss
cmpsl
in
dec
xchg
sub
pushf
xor
sbb
adc
xchg
cmp
pop
test
je
mov
lret
sbb
ror
xorb
push
loope
loop
jno
and
mov
mov
imul
jo
and
fs
jae
pop
fbld
push
or
iret
test
xor
push
popa
cld
dec
inc
test
sbb
cmpsb
sub
aaa
and
mov
sbb
cmp
cltd
cmpsb
out
imul
dec
inc
cld
and
xlat
jecxz
xchg
arpl
pushf
pop
lahf
test
mov
pop
pop
fisttps
push
imul
in
popa
js
sbb
into
pusha
pop
lds
pop
call
fstpl
outsl
in
pop
dec
jb
lds
out
sbb
inc
into
inc
push
add
xor
or
hlt
cmp
adc
push
jl
ret
and
sbb
pop
xor
push
cs
aaa
pop
xor
inc
aas
fs
and
inc
xor
dec
dec
les
sbb
sbb
hlt
adc
xor
pop
outsl
scas
fisttpll
ja
or
pushf
sbb
add
cld
stos
xchg
push
clc
mov
out
lock
pop
dec
jmp
mov
fs
enter
rcll
fs
sub
dec
jmp
or
dec
call
fs
sub
dec
adc
or
dec
sub
lock
push
daa
fdivl
mov
das
popaw
pop
pop
mov
lahf
adc
int3
clc
pop
mov
mov
and
mov
push
lret
dec
test
sub
push
cld
mov
adcb
in
push
mov
into
or
movsb
mov
popf
cmp
js
aad
pop
pop
jns
je
es
push
sbb
push
pop
jns
test
dec
call
enter
mov
das
cmpsb
stc
loopne
xor
imul
bound
pushf
pop
stos
imul
mov
inc
jnp
shll
into
push
loop
push
dec
cmpsb
sub
stc
pop
jle
stos
add
push
sti
imul
jne
iret
pop
clc
xor
imulb
add
or
inc
xrelease
dec
dec
adc
push
push
inc
pop
jmp
test
push
lcall
push
inc
fwait
mov
dec
imul
and
clc
push
fmull
mov
add
enter
jne
sahf
inc
aas
cmpsb
or
cmpsl
scas
stos
and
in
fdivrl
and
sub
push
popa
xchg
mulb
clc
xor
sub
pop
loop
xor
notl
iret
dec
insl
test
gs
xor
mull
out
pop
jge
repz
xor
sbb
mov
out
push
jnp
gs
jns
and
rcll
clc
ja
pusha
jo,pt
cmpb
out
mov
lret
push
test
push
out
xor
pop
movsl
push
xor
jle
mov
pop
mov
mov
xor
cli
mov
push
add
lret
pop
clc
mov
pop
test
fsubrs
cmp
adc
fmul
das
pusha
sub
mov
lret
pop
mov
cmpsb
imul
mov
adcb
js
mov
mov
inc
je
test
add
dec
mov
xlat
mov
or
cwtl
rcrl
cld
and
les
push
sub
addr16
jbe
mov
movsb
notl
int
icebp
mov
mov
add
notl
repz
test
out
push
xlat
jp
pop
shlb
cltd
ljmp
mov
popl
or
dec
cmp
mov
sahf
dec
ds
mov
sbb
mov
fs
sahf
arpl
or
out
enter
fcoml
pop
pop
add
xchg
outsb
out
inc
imul
movsb
pusha
xlat
into
enter
test
sub
sti
mov
mov
movsl
filds
movsb
test
mov
adc
dec
sbb
inc
xchg
adc
jne
jp
mov
outsb
jo
jns
mov
cmp
addr16
sub
mov
or
ror
mov
xor
rcr
pusha
lret
jnp
mov
mov
lret
mov
mov
dec
pop
fs
test
inc
call
xor
push
jge
call
jecxz
je
cltd
enter
mov
test
add
or
nop
orl
add
in
pop
fisttpl
inc
push
inc
push
mov
inc
loope
jo
and
xor
sbb
in
mov
lcall
sub
inc
and
sbb
in
inc
pop
daa
sbb
bound
adc
adc
mov
sbb
mov
sub
movsb
mov
adc
fists
adc
or
and
inc
in
flds
outsb
dec
daa
out
mov
adc
lcall
cmc
push
adc
mov
movsb
aad
mov
and
mull
sarb
lret
push
std
stc
pusha
xor
inc
cltd
push
ss
cmp
int3
adc
divb
jmp
mov
push
mov
dec
sbb
sbbb
pop
test
or
pop
jl
jbe
lar
sbb
push
add
push
sbb
push
cmpsb
jno
out
adc
rcrb
inc
bound
test
xor
fcompl
sub
in
shr
jle
int
xchg
mov
xor
push
cmp
lods
push
test
fs
sub
ljmp
aam
push
ja,pt
test
dec
pop
mov
ja
aaa
add
xor
ljmp
jno
call
adc
nop
lods
test
repnz
jl
push
movsb
insl
push
mov
xor
adc
aad
roll
mov
jne
mov
aas
jo
dec
in
scas
mov
xor
lret
sahf
test
pop
push
lds
ffreep
iret
fisttpl
ret
aaa
mov
xchg
lds
test
stos
arpl
rcll
insl
lods
and
push
test
mov
jmp
test
inc
mov
pusha
sub
cltd
addr16
clc
sub
testb
push
pop
push
dec
sub
shrb
sub
lcall
mov
adc
repnz
push
mov
sbb
jb
sahf
add
aas
clc
bound
into
jp
pop
inc
push
mov
adc
leave
dec
inc
mov
inc
pop
bswap
divl
lcall
mov
adc
or
imul
adcl
add
or
ret
ficoms
push
scas
out
jmp
cmp
pop
sub
jne
bound
inc
jae
pop
push
xchg
jnp
push
dec
pop
pop
mov
mov
arpl
adc
emms
xchg
test
shl
stc
pushaw
cmpl
je
jg
dec
xchg
jecxz
test
xlat
jecxz
lret
je
inc
ret
inc
xor
addr16
and
je
push
int3
cmp
jge
sbb
fisttpl
addb
bound
sub
inc
and
lahf
rcrb
arpl
dec
pop
les
inc
adc
add
mul
push
and
in
ret
and
data16
js
je
inc
bound
dec
mov
inc
jmp
add
push
das
stos
dec
fistps
in
or
out
jmp
dec
movsb
push
mov
and
loopne
sub
xor
in
out
addb
dec
test
adc
dec
xor
push
cmp
push
xor
mov
push
cmp
sub
pop
mov
data16
addw
and
adc
sub
inc
addb
pusha
addr16
dec
imul
js
and
sub
mov
nop
dec
out
stos
push
pop
ja
pop
arpl
cmp
data16
clc
push
clc
mov
and
xchg
mov
in
shr
int3
fisubrl
xlat
inc
jb
dec
fiaddl
shll
daa
cmpsl
jp
ss
xor
pop
mov
push
push
stc
adc
sbb
gs
imul
lock
pushf
sbb
adc
negl
cwtl
in
pop
xor
pop
lds
push
mov
xor
das
xchg
push
divl
popf
sub
aad
dec
insl
mov
dec
gs
pop
mov
aad
mov
pushf
enter
leave
mov
push
jbe
movsl
jp
jge
dec
stc
push
scas
cs
jb
jecxz
pusha
xor
push
sub
data16
popa
movsl
dec
pusha
xchg
xorl
popa
jae
xchg
push
xchg
push
in
jmp
dec
jecxz
xlat
mov
pop
jb
mov
cmp
hlt
push
dec
orl
out
popa
jne
pushf
mov
scas
fwait
ds
testb
stc
jecxz
sub
sub
aad
clc
stos
out
fprem
shrl
inc
aad
inc
or
sub
push
nop
cli
pusha
lret
fdivr
and
push
mov
mov
test
jmp
scas
into
sbb
dec
clc
mov
jbe
xlat
fwait
dec
xor
inc
sub
inc
sub
push
in
in
mov
push
push
pop
xor
clc
out
sahf
adc
pop
sub
test
pop
insb
mov
das
xlat
adc
gs
sahf
aas
dec
je
or
in
cmp
push
pop
add
xchg
pop
sbb
arpl
addl
fwait
xor
push
cmpsb
cmp
bound
xor
inc
sbbl
xchg
push
pusha
xchg
orl
mov
repnz
es
push
pop
popa
movsb
pop
out
arpl
push
sbb
pusha
jnp
and
pop
imul
xor
popa
xor
sub
mov
mov
fdivl
bound
inc
cmp
dec
loopne
xor
jo
gs
cmc
push
xchg
je
sub
scas
add
fwait
dec
out
sbb
imul
aam
imul
push
pop
je
dec
inc
sub
inc
test
inc
cmpsb
fs
imul
push
in
or
jecxz
push
or
arpl
inc
mov
cmp
xchg
push
fs
pusha
jne
dec
sub
mov
lret
add
inc
pop
in
fildll
insl
adc
or
mov
sbb
xchg
scas
mov
out
les
push
loop
or
xor
jp
aad
xchg
and
aam
addl
stos
mov
pop
pop
bound
or
jae
jnp
insl
jg
sub
push
xor
push
inc
gs
clc
cltd
sub
rorl
test
xor
loope
jo
or
ss
stc
and
test
bound
inc
push
and
cwtl
adc
outsb
int3
cld
gs
dec
jo
test
jbe
jmp
orl
and
mov
stc
add
rol
mov
rcr
inc
mov
call
lret
flds
test
cmp
and
scas
xchg
mov
aam
fdivrs
pop
fwait
pop
adc
out
lock
jle
sarl
mov
pop
jmp
repz
into
mov
scas
loope
mov
test
into
rorb
stos
scas
shr
pusha
inc
lcall
or
dec
dec
push
add
imul
outsb
leave
lods
xor
sbb
jae
or
sub
jp
idivl
sbbb
push
pop
ret
cmpsl
mov
inc
lods
inc
enter
and
add
push
or
cmp
push
mov
mov
pushf
lea
jbe
movsbl
inc
clc
mov
neg
shl
test
add
and
bsr
mov
movzbw
clc
call
mov
movzwl
movzbw
pusha
lea
lea
mov
pushf
mov
mov
lea
call
call
pusha
stc
or
mov
call
pusha
pushf
lea
ja
jmp
test
out
and
sahf
jg
ret
movsb
add
dec
cs
cmp
fs
inc
mov
out
pop
ljmp
into
scas
mov
fcmovne
repnz
inc
adc
cwtl
and
cmc
ljmp
dec
decl
hlt
and
push
add
mov
movsl
gs
sbb
scas
push
jne
jl
add
shll
stos
dec
jmp
mov
stc
lahf
xchg
inc
stos
inc
add
sub
add
rorb
loop
cmp
repnz
jmp
movzbw
sar
shld
rcr
mov
push
call
lea
jae
bsr
add
mov
seta
mov
and
and
mov
test
test
cmp
sub
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
or
jmp
pusha
stc
cmc
jmp
lea
je
jmp
pushf
movl
bswap
call
jmp
lea
pushf
movb
jmp
adc
push
imul
sahf
add
int3
stos
lea
sarb
jb
push
cmpsl
les
ja
adc
lods
mov
pushf
dec
lods
inc
fwait
jle
in
sbb
push
jns
dec
mov
popa
cmc
jno
or
insl
shr
mov
enter
sti
movsl
push
jle
punpckhdq
out
xchg
mov
jge
aaa
xchg
pop
shlb
mov
les
push
insb
outsl
mov
cmp
cmpsl
mov
dec
lods
push
add
mov
mov
push
inc
arpl
mov
dec
les
js
ljmp
mov
scas
sarb
inc
test
in
dec
mov
fistl
cld
push
pop
les
test
outsb
jle
jo
in
jmp
mov
dec
mov
loope
movsb
les
in
or
fs
lahf
cmpb
pop
jns
imul
lahf
inc
test
inc
test
lret
inc
shrl
push
gs
push
out
les
add
leave
cs
in
ja
sub
ja
rcrb
mov
flds
ds
jae
mov
adc
adc
pop
pop
sti
and
shll
aam
je
ljmp
jg
sub
clc
pop
sti
jmp
and
inc
cmpsb
stc
fbld
cmpsb
sbb
cmp
xor
aas
movsb
stc
dec
mov
fstps
xor
jae
push
cld
or
pop
xchg
push
mov
negb
shl
sub
adc
jns
les
shl
mov
jmp
inc
and
dec
scas
dec
jo
les
or
fiaddl
hlt
pusha
jmp
imul
xchg
int3
and
push
mov
jle
pop
inc
les
mov
fcoms
ja
cmp
mov
xlat
jns
cmpsl
enter
insl
jecxz
ret
out
xchg
push
stos
adc
test
cmp
adc
lea
jbe
bt
rcr
sub
adc
mov
bsf
mov
rcl
add
btr
clc
xadd
rcl
shr
btr
clc
cmc
mov
shl
add
movsbl
movzbl
jmp
lea
movzbw
pushf
call
call
je
or
cmpsl
and
fidivrs
adc
mov
ds
cs
shlb
mov
push
cmp
div
jg
add
pop
jb
xchg
arpl
pop
cmp
das
imul
in
cmp
and
movsb
inc
in
mov
scas
aam
js
or
in
lret
cmp
xor
or
cmp
inc
cmpsb
xchg
fwait
push
mov
int
cmp
cmp
int3
repnz
std
les
mov
popf
jg
fiadds
popf
push
xchg
out
xlat
ds
add
je
sub
jnp
xor
mov
cmp
cmpsl
sbb
arpl
or
dec
cmp
cs
fildl
ja
std
pop
and
mov
sub
mov
movsl
or
mov
jns
push
aas
mov
cmp
inc
fwait
lock
aad
fmuls
cli
sbb
popa
push
scas
sar
sbb
les
mov
inc
gs
outsl
fs
gs
imul
add
cmc
pop
cmp
mov
cmp
std
cli
fidivrs
cs
cmp
ja
adc
xchg
dec
dec
lock
es
or
pop
lds
test
repnz
mov
cltd
add
adc
xchg
sbbl
imul
inc
movsl
lock
sub
cwtl
inc
fildl
jns
out
mov
fcmove
mov
cmp
notb
out
shll
cwtl
cwtl
fidivrl
loop,pt
and
pop
rol
cmpsb
jnp
aad
jmp
pop
inc
lods
je
pop
gs
pusha
stos
mov
dec
mov
notb
mov
sub
jae
lods
mov
or
cmp
or
mov
sbb
scas
inc
or
icebp
sti
add
enter
cwtl
fldl
push
sbb
popaw
ja
out
js
mov
inc
mov
test
mov
ret
js
adc
cmpsb
jnp
mov
pop
adc
xchg
mov
sub
mov
nop
aaa
fidivrl
inc
addr16
les
or
inc
test
and
movb
jmp
push
add
sub
movsbw
mov
push
bt
stc
test
jmp
adc
pushl
pushf
movb
jmp
pusha
stc
add
call
test
jmp
roll
das
mov
push
or
xchg
cld
sti
pop
shlb
in
scas
push
cld
cmp
add
dec
push
and
insb
fiaddl
pop
lcall
mov
dec
mov
addr16
push
push
arpl
inc
xchg
push
lcall
xor
rorb
inc
js
ret
cmp
roll
jae
mov
ljmp
les
mov
popl
pushf
pushl
ret
cmpsb
outsl
insb
aam
mov
dec
xor
cli
pop
mov
lds
pusha
dec
loopne
xchg
mov
cmp
jecxz
insb
dec
pop
jle
adc
test
loopne
cmp
repz
mov
loop
jne
xchg
sub
dec
loope
mov
ds
push
ds
mov
mov
sahf
out
xor
sbb
fiadds
adc
les
movsl
xchg
loop
jmp
jmp
mov
push
les
mov
lcall
mov
cli
pop
mov
scas
adc
mov
stos
ds
aad
cli
jle
scas
lahf
aam
lods
xor
and
mov
mov
dec
lahf
or
addb
push
inc
out
pop
loope
test
xchg
cli
pop
xchg
jo
pushf
std
mov
je
dec
cmp
cmp
test
stos
pop
pop
mov
in
lea
negl
inc
addr16
adc
ret
cmp
les
gs
mov
push
mov
inc
mov
mov
push
add
lea
push
dec
ror
mov
cmp
bt
mov
cmc
add
sub
jnp
pusha
test
stc
mov
or
cmp
mov
stc
cmc
pushf
cmp
cmp
pushf
lea
jbe
movsbw
rol
pushf
mov
sbb
sar
neg
pushf
add
rcr
neg
btc
rcl
mov
rcr
or
add
movsbw
inc
clc
movl
add
mov
sub
call
pop
in
push
ss
ljmp
xchg
jne
mov
inc
sub
repz
pop
adc
js
sub
xor
not
or
popa
pop
lock
mov
scas
xchg
arpl
cmp
sub
fs
scas
or
mov
sub
adc
loop
mov
fcom
mov
js
fiadds
inc
mov
jmp
movsb
dec
mov
mov
jne
cmp
cmpsl
mov
inc
mov
add
fs
jne
lea
pushf
cwtl
cwtl
movb
call
pusha
jmp
jmp
cmp
push
pushf
jmp
mov
cmp
test
pusha
movb
mov
lea
jmp
lahf
lea
jmp
bt
repnz
pushf
movl
call
call
pushf
pushf
push
mov
call
mov
pushl
add
bt
jmp
pusha
jmp
bswap
lahf
lea
mov
pushl
not
lea
lea
pushf
call
jmp
movl
jmp
lea
jne
sub
shld
shl
mov
bt
jmp
pusha
sub
push
lea
call
je
pushf
pusha
push
lea
jae
push
sub
movb
call
push
movb
lea
ja
jmp
push
pusha
push
mov
call
pusha
pusha
push
movl
pushf
push
movl
push
lea
jmp
lea
jne
add
shrd
rcl
neg
mov
push
clc
call
lea
jne
cmc
shld
movzbl
add
mov
btr
rol
rcl
sub
rcr
mov
stc
bt
stc
sub
pushf
push
pushf
jmp
sub
pushf
pushf
cmp
push
mov
lea
ja
bt
imul
pusha
test
jmp
lea
jne
call
cmp
stc
add
push
lea
jle
push
push
mov
call
push
push
pushf
lea
call
jmp
jmp
lea
jne
or
sub
aad
mov
stc
cmp
clc
add
push
lea
jmp
mov
jmp
fmul
das
push
testb
test
dec
pop
add
sub
mov
jnp
orl
daa
ror
hlt
cmp
mov
jle
jb
xlat
cmp
leave
and
stos
shll
pop
jl
aam
nop
rorb
in
ror
fsubrp
bound
sub
mov
push
cli
mov
mov
xchg
sub
inc
mov
or
aas
jbe
push
jl
mov
push
sbb
mov
cs
sub
cld
and
aas
daa
jp
into
xor
out
sbbl
dec
add
mov
jbe
ja
sub
imul
sbb
cmc
fnsave
outsl
xor
fnstcw
pop
jae
test
fildll
add
dec
lret
inc
mov
push
mov
inc
xchg
clc
dec
mov
popa
push
js
sbb
push
xor
jge
movsl
jnp
ds
xchg
mov
packssdw
xchg
add
mov
outsb
pop
jne
push
mov
push
clc
clc
xchg
aad
fnsave
adc
jle
sub
add
fistps
imul
sub
mov
shlb
adc
sbb
or
and
mov
inc
lea
imul
in
mov
iret
adc
jbe
mov
xchg
mov
and
jle
mov
adc
lcall
jg
mov
fprem
sbb
les
inc
enter
and
outsb
pop
or
mov
pushl
call
mov
call
lea
ja
cmc
rcl
and
sub
add
dec
add
jmp
clc
or
pushf
pushl
call
add
stc
movzwl
sar
mov
cmp
test
test
pushf
add
pusha
bt
cmp
pushf
mov
movw
push
test
pushf
movb
push
lea
je
bt
add
bt
cmc
cmp
jmp
not
movzbl
movl
pop
lea
jmp
pushf
lea
ja
pusha
pushf
push
lea
jb
cmp
pushf
cmpb
call
pop
push
pushl
mov
push
pushl
pushl
mov
push
pushf
pop
movl
mov
pusha
push
pushl
ret
push
jmp
call
clc
call
sub
mov
mov
call
subb
repz
pushf
enter
mov
jecxz
cmp
xlat
jbe
jl
je
push
inc
mov
dec
and
lods
jne
std
add
pop
inc
mov
mov
in
pop
add
lret
jne
xor
sub
out
icebp
sbb
mov
imul
and
test
insb
mov
mov
cwtl
pop
sub
pop
imul
rorl
cmp
into
xchg
je
sbb
inc
sub
call
fwait
and
jl
clc
ret
xor
mov
insb
inc
loope
aam
fwait
les
insb
jno
test
push
push
mov
add
imul
cmc
int3
mov
xor
mov
dec
pop
push
insb
xchg
mov
jge
xor
imul
xchg
mov
cmpsb
push
cmp
insb
aam
dec
in
leave
dec
clc
insb
or
dec
das
inc
xchg
stc
xchg
sbb
dec
adc
insb
lods
roll
or
cld
xchg
insb
pop
dec
loop
fsts
test
mov
and
push
arpl
pop
xchg
lret
dec
insl
imul
pop
sub
test
sub
test
imul
aaa
in
daa
sub
cmp
clc
hlt
aas
movsb
bound
pop
std
pop
mov
dec
or
mov
imul
mov
bound
jle
xor
cmp
xor
adc
inc
pop
mov
mov
fadds
in
sbb
cli
sbb
push
les
or
mov
push
mov
arpl
pusha
pop
push
inc
dec
dec
dec
xor
pop
lcall
add
aas
push
lock
add
cli
std
stc
faddl
clc
dec
repnz
jle
xor
add
sub
mov
int
clc
pop
fisubs
leave
or
or
repz
sbb
or
pop
fisubs
push
xor
dec
push
dec
cltd
add
jge
add
xor
je
jb
lret
fdivr
lea
mulb
cmp
add
stc
inc
jne
xor
mov
mov
in
cmpsb
cmc
add
test
sbb
pop
cltd
outsb
loop
sbb
stc
bound
jmp
scas
je
iret
pop
jo,pt
sbb
add
sbb
jb
add
in
mov
imull
xchg
hlt
mov
mov
dec
mov
jp
bound
rcll
scas
sub
into
sub
jecxz
pop
pushf
jmp
stc
out
cli
add
mov
daa
std
pop
push
mov
ja
adc
dec
lods
sub
xlat
imul
movsl
push
push
add
adc
cmp
loope
xchg
dec
pop
pop
inc
cmp
push
pop
jl
sub
out
imul
in
xor
and
outsb
or
outsl
icebp
mov
incl
pop
outsb
dec
imul
sbb
push
pop
and
cmp
imul
lods
pusha
pop
sub
add
icebp
or
pusha
pop
sbb
ficoms
dec
imul
sub
cmp
add
outsl
lcall
daa
hlt
lret
jmp
dec
jmp
movsb
dec
pop
xor
or
xor
push
sub
inc
pop
pavgw
pop
cli
jns
jnp
xor
dec
push
sbb
sbb
gs
pop
lret
and
sbb
pop
data16
cmp
xor
aas
xchg
and
sbb
cld
mov
aam
jg
scas
adc
lcall
or
lahf
xor
pop
dec
out
leave
dec
rolb
ret
push
rcr
and
adc
loope
bound
add
xor
mov
sub
or
or
in
aaa
sbb
sbb
fadds
push
ja
dec
les
mov
push
std
and
sub
pop
repnz
push
repnz
sbb
sub
add
cmpsb
cld
jbe
ret
cmc
add
adc
sbb
add
inc
or
aaa
fs
shll
inc
fbld
push
arpl
or
sub
lods
adc
sbb
xchg
ds
pop
mov
cmp
mov
jg
or
decl
inc
lea
ficoms
cld
mov
push
xlat
jo
fs
xor
daa
mov
or
add
aaa
sbb
sub
pop
sti
inc
es
aas
xor
addr16
out
sarl
inc
push
inc
sub
xor
xchg
xchg
dec
mov
push
call
xor
mov
insl
sbb
inc
stc
mov
push
cmp
pusha
lahf
adc
inc
sbb
sub
jns
sub
das
fmuls
pop
or
adc
in
sbb
mov
push
pop
sub
cli
sbb
inc
and
and
push
jne
push
in
cmp
data16
pop
fsubl
or
lahf
or
rcl
xor
and
adc
dec
push
add
inc
cmc
test
sub
test
jmp
push
imul
sub
ljmp
xor
call
insb
data16
pusha
insb
pop
pop
pop
pop
pop
pop
pop
pop
insb
push
push
push
push
push
push
push
push
insb
dec
dec
dec
dec
dec
dec
dec
dec
insb
inc
inc
inc
inc
inc
inc
inc
inc
push
aas
ds
cmp
ss
xor
xor
cs
sub
sub
es
and
and
push
insb
sbb
sbb
push
insb
adc
adc
push
inc
or
arpl
in
and
add
add
decl
cld
sti
cli
insb
scas
div
cmc
hlt
imul
icebp
lock
out
in
dec
fsubrl
cmpsl
pusha
or
or
mov
or
cli
adc
das
sbb
add
cld
dec
mov
into
imull
xor
pushf
add
and
incl
pop
cs
push
sti
enter
add
sub
data16
cmp
push
sub
adc
pop
and
dec
pop
sub
push
xor
xor
in
dec
daa
pop
xchg
out
repz
cli
sub
push
mov
cli
pop
addr16
std
idiv
pusha
sbb
sub
cld
jns
push
sub
and
or
dec
popf
daa
pop
jmp
or
xlat
test
dec
popa
pushf
fwait
or
adc
sbb
sub
fdivr
repz
sub
xor
and
dec
repz
sub
lret
mov
pop
pop
adc
pop
inc
sbb
bound
pop
repnz
pop
sbb
fs
in
xor
cmp
inc
fs
dec
xor
imul
xor
inc
add
push
imul
add
push
push
rolb
daa
push
mov
push
ret
push
pop
sub
dec
xchg
imul
in
dec
pop
add
hlt
dec
jnp
clc
ja
aam
lods
call
out
aam
lahf
push
shlb
and
sbb
sti
or
add
cli
stc
js
movsl
adc
repz
mov
data16
jnp
je
insl
lret
inc
pop
and
int3
sbb
inc
insb
loop
jp
push
and
lods
and
insb
adc
hlt
mov
dec
imul
sbb
sub
xor
sbb
nop
lret
jl
or
push
gs
jns
push
mov
dec
fildll
loop
loopne
mov
or
sub
sub
mov
pop
sub
insl
mov
xchg
orl
fldpi
jle
das
incb
ljmp
data16
cltd
dec
pop
gs
or
fmull
aad
adc
inc
xchg
lcall
ret
das
mov
insb
jecxz
cmp
push
mov
jb
inc
jns
daa
dec
insb
dec
sahf
mov
push
data16
inc
movsl
add
shlb
ret
dec
pushf
and
fildl
sub
jecxz
pop
and
and
fcomi
pop
rol
dec
loop
push
sub
jecxz
pop
sbb
or
neg
out
int3
sub
dec
js
mov
jecxz,pn
pop
push
dec
add
fneni(8087
dec
shrb
shrb
pop
les
and
fistpl
dec
adc
add
jecxz
pop
mov
fistl
pop
ret
mov
dec
and
adc
jecxz
pop
movsl
jo
jo
ret
xchg
scas
dec
aam
andb
push
add
imul
jmp
in
dec
insb
loopne
xor
push
out
jmp
xchg
sub
insb
pop
xchg
mov
lahf
xchg
push
and
cli
test
jecxz
andl
je
push
cs
pop
loop
std
test
sbb
movsl
cmp
add
cltd
cmp
dec
add
adc
gs
push
xchg
pop
sbb
adc
sub
mov
out
in
das
lods
sbb
aam
dec
xlat
jmp
mov
gs
ret
fcmove
pushf
jmp
arpl
mov
pop
jo
leave
xchg
scas
imul
icebp
dec
sub
insb
mov
inc
jb
and
dec
out
insb
shll
inc
adcl
shll
mov
mov
jl
jmp
insb
xor
aaa
sahf
lock
fldcw
lds
cmc
movsl
inc
insb
and
inc
imul
lods
movl
cmp
mov
mov
cld
dec
adc
jne
mov
cld
shrb
mov
dec
pop
xor
outsl
mov
test
pop
rorb
in
mov
insb
call
sub
out
ret
js
in
mov
cmp
dec
xor
sahf
insb
add
icebp
ss
pop
xor
ljmp
xor
pop
sbb
sub
insb
mov
push
sbb
insb
xor
jmp
pop
pop
add
cs
insb
and
or
dec
gs
nop
out
and
adc
pop
or
pop
sbb
xchg
mov
cld
inc
insb
mov
cmp
dec
dec
pop
jle
push
rclb
clc
inc
mov
push
sahf
jae
lods
js
data16
mov
push
out
and
jne
dec
aad
dec
out
das
in
xchg
add
mov
mov
insl
insb
adc
lret
xchg
cld
jno
insb
pop
sub
incl
cmpsb
xor
lret
insb
test
loopne
test
mov
and
cs
in
fidivl
into
add
popf
repz
mov
pop
stos
or
ds
sub
lds
jns
les
pop
mov
jp
and
sub
cltd
xor
in
aam
sub
pop
sbb
out
mov
andl
mov
imul
cmc
test
jb
mov
inc
scas
scas
mov
in
loopne
lods
bound
popa
or
in
insb
sti
mov
inc
es
inc
mulb
inc
cmp
js
mov
mov
insb
ss
ja
fdivrl
into
aam
insb
enter
lcall
sub
pop
dec
xor
imul
jmp
cs
ja
or
dec
and
xor
js
mov
sub
or
movsl
insb
dec
mov
test
ficoms
xchg
aas
insb
jbe
out
pop
cmp
sbb
adc
inc
cmp
int
or
sbb
push
jmp
cmc
sbbb
inc
fwait
jno
xlat
imul
lock
push
xor
lds
in
push
lret
mov
pushf
addr16
mov
inc
insb
shl
fimull
jecxz
sarl
sbb
adc
insb
sti
sub
xlat
insb
shr
clc
popf
int3
fsubr
pop
gs
loope
push
imul
add
xor
test
dec
sub
fcompl
and
aam
sbb
adc
sbb
xchg
jge
test
insb
mov
fsubrp
imul
lea
mov
fsts
and
sbb
jle
stc
inc
or
lods
dec
xlat
xor
fcoml
adcb
fcomps
mov
xor
loope
dec
sbb
jnp
dec
movsl
nop
adc
or
fisttpll
lods
cs
lods
aam
mov
loop
popf
dec
jg
stc
cmp
push
cmp
dec
outsb
insb
leave
jle
test
fs
gs
sbb
adc
xchg
jo
cmp
jmp
test
fs
cmpsb
pop
mov
lds
lods
push
mov
adc
arpl
in
inc
sar
imul
aam
pop
cmpsl
mov
pop
mov
xor
out
inc
and
dec
push
jno
iret
hlt
sub
xor
das
ret
or
pop
lods
add
fsubrs
and
inc
dec
push
or
jl
dec
popa
sbb
adc
cld
mov
out
jle
ds
or
pop
flds
out
push
cmp
imul
and
int
gs
lahf
shrb
lods
push
or
sbb
mov
cld
ljmp
out
or
outsb
pop
loopne
mov
arpl
fs
imul
sbbb
cltd
stc
pop
in
xor
das
insb
ja
sub
pop
inc
mov
mov
push
lea
je
jae
js
test
cmp
push
sub
jmp
pusha
sub
lea
shl
lea
stc
push
pushf
clc
sub
jmp
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
push
pop
add
mov
adc
inc
inc
test
xchg
pop
ds
push
out
js
mov
mov
stos
add
xchg
out
push
xor
jge
ret
and
push
xor
mov
push
xor
stos
mov
xchg
std
mov
xor
jo
push
add
ljmp
cmp
or
int3
out
xor
cmc
mov
mov
pushl
pushf
movl
lea
jno
pushf
movl
pusha
pushf
pusha
movb
lea
jmp
call
mov
or
out
shll
sub
jae
mov
fadd
pop
out
or
or
incl
inc
sub
xor
mov
cmp
lret
cmp
mov
xchg
out
adc
inc
in
add
jae
lods
mov
cmp
movsb
pop
imul
sub
dec
insb
aam
shll
xchg
xor
lock
les
mov
jmp
cmp
pusha
lea
jb
call
in
sbb
out
hlt
inc
or
adc
push
mov
scas
nop
cmc
hlt
pop
mov
mov
cmp
sub
mov
sub
iret
xor
enter
push
negb
inc
movsl
les
pusha
and
jne
cwtl
lahf
movzbw
jmp
setbe
mov
lea
pusha
pushf
pusha
lea
call
jmp
insb
movsl
imul
push
mov
gs
imul
dec
pop
jmp
negl
jl
ljmp
mov
push
fs
bound
inc
push
pop
push
dec
mov
push
imul
adc
mov
dec
ljmp
fsts
dec
imul
aam
pop
stc
arpl
inc
cld
inc
add
push
fcoml
jnp
mov
and
mov
add
addr16
lods
popa
fimuls
dec
push
push
fbld
fisubs
fisttpl
shrl
gs
hlt
dec
bound
fcoms
rcrb
in
int3
push
xor
pop
jecxz
pop
pop
dec
xor
fldt
push
dec
nop
sub
jecxz
pop
add
and
fisttpl
int3
xlat
sub
fsubl
repnz
jo
add
dec
adc
sarl
arpl
jo
push
aaa
push
fstpt
sub
andb
hlt
arpl
lods
dec
mov
push
imul
sub
cmp
dec
jae
imul
inc
test
mov
and
dec
pop
push
inc
mov
push
adc
and
push
push
ror
mov
ljmp
lea
cmp
int
mov
sub
in
cmp
pop
or
adc
inc
jmp
fs
sub
mov
pand
movsb
mov
popf
lret
mov
add
out
lret
bound
arpl
or
mov
fs
mov
dec
inc
loope
mov
pop
jp
jno
push
fdivrs
fs
arpl
mov
pop
cmpsl
nop
cwtl
gs
leave
push
pop
push
xor
pop
pop
movsb
pop
fcomps
pushf
push
dec
dec
fdivs
pop
movsb
sub
cmp
and
sbb
fadds
push
mov
pop
push
inc
cli
cli
shlb
in
adc
ljmp
movsb
fcmovnu
inc
inc
into
pop
xlat
lret
fsubl
cli
mov
int3
sahf
and
dec
push
gs
mov
iret
test
jo
fs
js
jl
orb
movsb
and
fstpt
int3
loope
and
fcmovnu
dec
fsubrl
loopne
jecxz
pop
in
dec
lock
dec
or
adc
cmp
and
jecxz
pop
cmp
inc
and
scas
test
jecxz
pop
jo
imul
bound
jecxz,pt
sbb
lret
imul
in
cld
pop
arpl
cwtl
push
sbb
sbb
movsb
cmpsl
sbb
out
sub
sub
aad
and
int3
push
sub
pop
movsb
mov
popa
repz
shlb
sbb
pop
popa
fs
js
sbb
dec
aam
sub
mov
push
loopne
push
cmp
das
mov
push
in
dec
jl
mov
imul
mov
push
ficomps
sti
insb
xchg
xlat
sub
filds
mov
int3
sub
pop
stc
ljmp
popf
insl
and
repnz
std
cmpsb
mov
sub
mov
sub
inc
xor
jne
mov
lock
mov
jno
insb
out
ret
lret
xchg
mov
inc
cmp
imul
mov
add
mov
repnz
insb
popf
daa
pop
mov
imul
pop
js
pusha
push
imul
out
mulb
insb
mov
fnstenv
xor
mov
jg,pn
jb
xchg
das
cmpsl
in
sub
into
ficoml
insl
test
jl
lret
dec
lods
sbb
loopne
or
outsl
loope
sub
inc
pavgw
xchg
add
inc
lods
cs
in
and
loop
sbb
inc
inc
dec
insl
lahf
mov
jno
sti
das
bound
lock
adc
xor
dec
pop
jmp
inc
pop
push
mov
push
mov
jnp
pushf
pop
dec
call
shlb
mov
imul
scas
xor
das
insb
mov
xacquire
test
outsl
in
sahf
or
pop
cmc
mov
cmp
test
fmuls
xchg
xor
sub
mov
fdivs
daa
mov
jo
dec
dec
cmpsb
mov
loope
repnz
insb
adc
pop
mov
or
fbld
push
push
jno
and
movl
in
out
ror
mov
or
es
pop
or
mov
insl
push
fucomi
das
lods
jb
push
repnz
sub
lods
shlb
jecxz
gs
and
xchg
xor
push
mov
imul
shrl
xchg
xor
sti
push
xor
and
adc
imul
lods
adc
lret
cmp
sbb
insb
sub
mov
inc
inc
and
sbb
jbe
insb
adc
lods
mov
cmpsb
dec
into
test
adc
sbb
dec
push
push
pop
and
or
fnstsw
pop
adc
movsb
push
or
jmp
in
dec
pop
imul
push
cmp
cmp
cmc
hlt
inc
nop
pop
mov
arpl
aaa
cmp
add
imul
insb
fisubl
mul
sub
mov
cs
repnz
sbb
dec
mov
adc
pop
ret
jle
aaa
popf
jle
push
js
ds
xchg
cmp
mov
adc
xor
rorl
cli
mov
sbb
fdivl
gs
stos
aas
push
mov
jl
inc
addr16
push
testl
std
pushf
ret
les
xchg
push
mov
pusha
jmp
lea
jne
shl
sar
lea
and
mov
dec
jmp
lea
movb
lea
movzbw
jmp
pushf
lea
jne
pusha
bt
btr
shl
mov
jmp
lea
ja
pushf
push
imul
sub
clc
add
pusha
push
movw
lea
jmp
jmp
pusha
lods
test
push
cmc
stc
not
test
mov
clc
stc
sub
cmp
call
jmp
cmp
add
pushf
pushf
lea
jne
seto
setnp
not
pushfw
rcr
push
mov
movb
bt
pushf
jmp
call
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sbb
call
pusha
call
shr
mov
mov
bt
stc
jle
and
pusha
cmc
add
pushf
lea
jmp
add
dec
outsl
popa
fs
imul
add
mov
clc
test
call
lea
not
mov
pop
pusha
lea
ja
call
pushl
popl
push
pushf
pushf
lea
jmp
pushf
cmp
pushf
movw
lea
jae
test
jmp
cmp
cmp
call
lea
jl
jne
shl
mov
rol
test
mov
bsr
cmp
jmp
lea
call
call
pushf
mov
push
pushf
lea
jmp
pushl
popl
call
test
xchg
neg
xchg
in
push
cwtl
leave
adc
ffree
sub
xlat
xor
add
push
mov
outsl
loope
push
push
xchg
jae
punpcklwd
mov
mov
fdivrs
sbb
bound
into
out
cs
mov
ffreep
xor
cmpsl
in
sub
in
loope
cmp
inc
fwait
clc
aas
pop
pop
jge
and
es
insb
mov
aam
pop
ret
scas
push
hlt
sbb
les
cmp
add
js
cmp
movzwl
bts
sar
rcl
bswap
mov
jmp
scas
jp
ret
sub
add
cli
inc
mov
xor
cmp
lods
push
mov
or
outsb
es
dec
fidivs
pop
dec
movsb
or
push
mull
pop
stos
adc
pop
ret
cmc
lods
push
mov
inc
loop
xchg
and
bound
das
pop
or
mov
xchg
in
sbb
nop
fldl
adc
std
mov
enter
jle
mov
fidivrs
sahf
shlb
push
mov
jge
mov
cmpsl
lock
cmp
mov
stc
lahf
push
inc
sbb
push
push
addr16
iret
add
std
in
pop
xor
fwait
inc
pop
andl
and
jmp
lea
jne
bsf
shrd
mov
stc
add
test
push
movzwl
adc
sbb
bsf
shrd
mov
cmp
jmp
jmp
repz
daa
xchg
dec
scas
jne
mov
add
push
pop
lcall
pusha
stos
sbb
test
inc
nop
mov
dec
lock
js
mov
jmp
out
jns
sub
or
es
subl
arpl
data16
stos
mov
cmpsb
enter
inc
mov
push
mov
jmp
push
mov
jge
pop
mov
imul
jbe
sbb
inc
fwait
cmp
lods
rorb
out
les
sbb
sbbb
jmp
add
shll
les
icebp
mov
sbb
imul
or
jb
xlat
dec
shll
in
int3
cs
lock
mov
movsb
or
pop
out
xchg
cmp
jae
mov
clc
push
add
fstp
cmp
in
xchg
sarb
test
mov
push
jns
sub
sub
test
mov
nop
lods
out
cli
icebp
enter
ffree
push
and
sub
in
adc
push
das
xchg
les
dec
shlb
push
and
pusha
pushl
popl
cmc
cmp
call
lea
push
jmp
bt
cmp
jmp
jmp
lea
jnp
push
push
movl
pushf
lea
jmp
lea
jae
push
pushf
pusha
cmp
sub
jmp
push
call
push
pushf
inc
lea
jb
pusha
inc
cmp
cmp
cmp
pushl
cmpb
mov
movw
lea
jne
push
pusha
movl
call
clc
mov
pushl
pushl
push
bt
test
movl
jmp
jmp
cmpb
movb
lea
jne
shl
sub
jmp
lea
jb
push
pushl
ret
pushf
pushf
movl
pusha
pushf
pushf
call
popf
rdtsc
nop
jmp
addr16
sti
bound
or
das
jp
faddl
or
xor
cli
popa
inc
in
inc
movsb
push
pop
gs
pop
cmp
aaa
es
ss
sti
popa
push
pop
gs
pop
jle
xor
jmp
mov
rorb
mov
inc
sbbl
iret
add
add
js
inc
bound
arpl
test
pop
pop
aas
das
outsl
je
imul
adc
xlat
cmp
rcll
lret
xor
dec
mov
add
mov
mov
jo
in
adc
dec
mov
sarb
add
stos
je
or
pop
call
stos
push
jnp
dec
xor
fwait
pop
call
cmpl
imul
push
divb
pop
scas
test
imul
mov
lahf
call
pop
jmp
lds
mov
jns
les
xchg
push
or
mov
or
iret
and
incl
sub
test
pusha
pusha
pushl
popl
pushf
bt
push
cmp
push
pushf
call
movl
call
jmp
sahf
shrb
xor
xchg
or
adc
mov
test
jecxz
cmp
push
inc
bound
aas
inc
jns
out
xchg
lret
push
imul
push
mov
je
mov
mov
cmp
loopne
mov
push
jnp
addr16
int3
pusha
mov
loop
mov
xchg
mov
pop
push
xor
icebp
adc
jecxz
lcall
sbb
dec
les
or
inc
pushf
pusha
movl
lea
jne
not
lea
dec
mov
call
pushf
lea
ja
or
rcl
add
sub
shl
test
mov
pushf
call
jo
or
add
add
cmp
add
daa
or
mov
repz
test
or
repz
or
add
add
push
xchg
adcl
dec
jnp
sub
test
lods
or
jge
lret
outsb
push
shlb
xor
mov
inc
daa
jp
lret
fucomip
neg
dec
sub
hlt
arpl
inc
loop
and
mov
add
jnp
int
xor
jae
fcoms
insb
jecxz
mov
sbb
hlt
adc
push
ficomps
sahf
adc
push
push
int
shlb
mov
mov
rcrb
cmp
pop
sub
lock
fdivr
movsl
inc
lods
les
sub
insl
lcall
sbbb
stc
call
lea
jb
test
jmp
jmp
pushf
inc
not
jmp
mov
inc
sub
test
lret
xor
test
mov
push
inc
lds
insb
inc
daa
lea
nop
mov
js
mul
cmpl
lret
jmp
add
mov
inc
jmp
jb
fsubl
jmp
mov
lods
lea
mov
out
xchg
rcll
repz
mov
push
outsl
aam
out
jb
mov
lds
push
add
ja
ret
inc
test
inc
jl
mov
jg
inc
mov
inc
popf
inc
loop
lods
shl
push
cmp
mov
sti
inc
lods
faddp
movsb
or
les
mov
inc
sub
out
adc
inc
call
mov
or
scas
jecxz
jge
or
add
mov
push
jge
ret
fs
fs
dec
push
rorl
cld
push
andl
ljmp
inc
stos
adc
les
push
stos
shlb
jecxz
jmp
xchg
les
vfnmsub132ss
jmp
fbld
push
mul
jbe
cmp
jnp
inc
sub
inc
jnp
addr16
adcb
fs
jne
call
cmc
stc
ror
jmp
lea
je
pushf
pushf
lea
call
jmp
movl
pushf
jmp
xor
bound
subb
lret
dec
jl
cmpsl
or
shlb
cwtl
jle
aas
lahf
inc
es
xchg
sar
jg
lcall
mov
fdivl
cwtl
sub
imul
lods
push
jbe
pop
int
sbb
popf
ret
rclb
cwtl
cld
adcb
push
test
cld
jg
cwtl
cmp
hlt
push
jns
adc
add
filds
daa
leave
lock
aaa
fsts
jbe
les
or
jg
jmp
jbe
popa
repz
xchg
xor
sti
sbb
inc
jnp
xchg
push
movl
pusha
mov
lea
jmp
jmp
int3
xchg
jns
mov
pop
fdivrs
popf
add
div
pop
mov
cmp
mov
inc
mov
dec
xchg
cmp
int3
and
into
repz
loopne
add
push
pop
xabort
adc
cwtl
data16
outsb
lfs
outsl
into
adc
xor
pop
mov
adc
and
call
pop
xchg
ljmp
push
mov
das
mov
iret
jne
mov
jns
iret
dec
out
jmp
inc
and
movsl
inc
imul
pop
jnp
les
pushf
pop
adc
mov
push
decl
or
ljmp
mov
and
jne
jmp
call
call
je
cmp
cmp
add
pusha
test
cmp
pusha
pushf
pushl
pushf
lea
jb
clc
cmp
pusha
call
pusha
lea
jb
cmc
push
cmp
cmpb
mov
lea
jne
call
pusha
add
jmp
jmp
jmp
movl
pushf
pushl
mov
jmp
or
lcall
into
pop
jns
inc
and
sbb
pusha
dec
jmp
shrl
mov
insb
mov
sbb
push
mov
pusha
cmc
jecxz
es
inc
jns
jno
mov
push
jg
clc
out
sbb
jmp
xchg
sbb
pop
mov
bound
ljmp
inc
jge
mov
add
lcall
xor
mov
into
jo
les
mov
pop
movw
mov
pushl
push
pushl
ret
movb
lea
ja
neg
test
sub
rol
add
movsbw
adc
or
shrd
mov
call
mov
pop
call
mov
mov
inc
cmpsb
mov
xor
js
pop
cmp
add
adc
cmp
iret
loope
int3
cmp
into
push
mov
xchg
sub
adc
sarb
pop
sti
add
sub
ss
lods
lea
jecxz
jmp
mov
cmp
ds
mov
sbb
mov
das
iret
adc
pop
and
call
pusha
les
sbb
xchg
in
clc
dec
sub
pop
sahf
aam
xchg
insl
lods
pop
fs
ljmp
pop
jecxz
push
and
mov
mov
jnp
insl
in
adc
and
std
es
aaa
loope
cmp
in
pop
aad
ja
test
daa
push
fs
mov
pushf
mov
inc
in
shrb
insb
add
dec
in
fbld
dec
sbb
out
inc
inc
push
or
daa
pop
cmpsb
push
sub
jge
push
sub
shlb
and
push
stos
mov
ja
jmp
xor
subb
cmc
adc
sub
data16
or
inc
add
sub
movsb
ja
loopne
cmp
sub
push
ret
push
jbe
imul
dec
push
leave
insb
loop
xor
cmpsl
les
repz
test
decb
pop
fwait
fwait
add
push
enter
fsubp
cmpsl
or
loope
inc
cmp
in
rcr
in
xor
lods
sub
pop
jne
repz
pop
push
idivb
mov
pop
pop
push
roll
fisubs
sbb
inc
fiadds
outsl
push
push
push
mov
pop
cmp
std
daa
xchg
test
cmpsl
test
xlat
shrb
fildll
cwtl
lahf
pop
loop
mov
paddw
dec
pop
push
rep
push
je
jg
pop
xor
dec
and
dec
jecxz
push
div
jbe
cmpsl
aaa
jmp
sub
mov
test
add
cli
test
cmpsb
imul
cmp
rcrl
imul
jo
sbb
inc
inc
stos
xor
adcl
sub
pushf
imul
cltd
or
push
shlb
pop
scas
fcoms
lahf
inc
aad
fsubr
dec
fs
pop
push
testl
jl
stos
out
fildl
sbb
xor
push
dec
pop
loope
imul
je
inc
xchg
adc
or
ror
movl
xor
jmp
cmp
movsw
dec
push
stc
xor
mov
or
leave
push
imul
sub
daa
imul
pop
xor
lds
sbb
xor
call
outsb
out
ja
aam
adc
or
inc
and
outsb
fcoml
xchg
sbb
inc
pusha
pop
lret
into
das
xchg
xor
repnz
mov
pop
lret
pop
push
ret
push
addl
push
loopne
ret
xorb
in
and
in
imul
hlt
dec
xor
inc
shll
xchg
sub
inc
xchg
sub
cli
add
ss
stos
sub
gs
xchg
test
sub
cwtl
es
add
in
mov
shrb
outsl
bound
fcmovbe
dec
aam
pop
call
jae
jae
scas
jae
mov
xchg
loope
sub
xchg
pop
jb
dec
jb
stos
call
rclb
aam
stc
pop
push
loopne
xor
add
ds
addr16
testb
pop
sahf
dec
adc
mov
xor
sbb
or
pop
leave
inc
andl
nop
enter
pop
xchg
fsubrp
cmp
negl
cmp
or
pop
repnz
add
fisttpll
insb
shll
pusha
out
pop
cmp
out
xor
lods
test
cmp
imul
xor
push
inc
lods
test
es
fsub
or
jo
addr16
mov
pop
dec
lahf
fcmovu
and
push
imul
inc
aaa
jno
fisttpll
outsb
push
fbld
add
and
jbe
loop
repnz
test
push
imul
insl
frstor
inc
xchg
xchg
pop
sbb
outsb
add
outsl
inc
mov
cmpsl
inc
push
stos
test
dec
je
out
jbe
push
pop
mov
fstpl
add
shl
pop
mov
insb
cmp
je
popa
pushf
cmp
inc
loopne
add
dec
call
stos
mov
push
inc
addr16
inc
inc
cmp
adc
xor
pop
sbb
push
in
xchg
or
lods
lcall
mov
aam
jecxz
dec
inc
pop
push
jo
jns
dec
mov
pop
xor
xchg
cld
sub
popa
add
cli
loopne
in
cmp
sbb
imul
jbe
ljmp
add
mov
adc
bnd
in
pop
xor
adcl
test
mov
pop
mov
flds
imul
jp
mov
lcall
mov
ja
test
inc
push
outsb
push
add
jge
cmpsl
sub
jmp
jbe
out
lahf
sbb
cmp
repz
popf
andl
mov
sbb
push
mov
xor
aam
xor
and
pushf
aam
aas
sub
sbb
iret
fidivrl
out
pop
lods
xor
push
dec
aas
sbb
jae
test
inc
cmp
cmp
orl
inc
inc
push
lea
arpl
out
and
push
or
mov
fwait
nop
icebp
in
and
popa
mov
int3
mov
pop
push
ljmp
xlat
mov
stos
and
push
aaa
xor
int3
in
lret
sarb
push
enter
orl
test
out
push
adc
and
pop
fimuls
jns
push
push
mov
ficompl
pop
cmp
lods
xor
pop
cmp
mov
test
mov
xchg
std
gs
rclb
add
xorw
pop
mov
xchg
test
nop
arpl
push
or
pop
test
movsb
jecxz
and
inc
faddl
xor
fwait
mov
push
adc
lahf
pop
fdivl
lods
sbb
aad
sti
and
or
pop
xorl
test
or
insb
fildll
mov
cmp
leave
stos
sahf
or
push
test
cld
neg
mov
iret
add
lret
xchg
sub
mov
data16
or
add
sub
std
call
ljmp
mov
in
fidivs
call
arpl
or
mov
sub
cltd
test
rclb
mov
dec
and
cmp
into
mov
lcall
jo
dec
mov
mov
je
jo
outsl
iret
sbb
sub
and
imul
adc
pushf
movw
call
pushl
popl
pushf
pushl
ret
lea
jb
stc
cmp
pusha
call
mov
push
sahf
fsub
sbb
cmp
das
adc
test
push
repnz
pop
cmpsb
or
std
xor
cli
inc
and
dec
stos
dec
mov
jno
stos
mov
xorb
pop
mov
repnz
stc
xor
sub
push
scas
je
mov
mov
jne
xor
sbb
sbb
ss
repnz
in
ljmp
pop
btr
pop
fs
test
gs
lret
lcall
add
inc
out
mov
js
inc
imul
push
jae
push
out
hlt
sub
inc
mov
ss
cld
fs
lods
or
mov
jge
dec
icebp
xchg
mov
cld
and
add
dec
mov
pop
cmp
mov
imul
jo
aaa
push
movb
movl
push
lea
jmp
call
shr
shr
xor
btr
movzbw
mov
or
ror
adc
add
shr
shrd
shr
add
add
cmc
stc
mov
bt
jmp
setns
bts
mov
cmp
sub
inc
and
add
jmp
cwtl
movzbw
movb
call
call
pushf
inc
cmc
push
test
test
cmp
mov
lea
bswap
mov
jmp
gs
jp
inc
out
dec
cld
insl
out
sub
addr16
lahf
fwait
ret
nop
push
mov
xchg
mov
mov
push
mov
std
bound
shl
xor
mov
push
inc
data16
and
dec
xor
pushl
sub
rcr
and
adc
ds
adc
clc
lcall
aad
inc
outsl
nop
adc
not
cmc
xor
lea
jns
jmp
shl
not
test
mov
cmp
push
cmpb
pusha
lea
jne
cmp
pusha
sub
call
or
repz
mov
sti
lcall
out
mul
int3
xlat
psubb
mov
aad
movsb
mov
push
mov
sbb
and
out
lret
negb
test
mov
xor
inc
call
pop
mov
mov
jnp
or
or
jns
inc
xor
movsb
mov
lock
test
mov
adc
pop
filds
leave
sub
out
xchg
xor
and
cwtl
mov
outsb
xchg
mov
pop
pushf
movl
push
pusha
lea
jmp
adc
iret
call
sti
fstpt
inc
stos
xchg
jne
jle
sub
movsb
cmp
jmp
push
int3
repnz
andl
pop
mov
xchg
lods
adc
movsb
cmp
push
jne
mov
cmp
or
es
cmp
das
push
sbb
shrb
cwtl
or
mov
push
clc
sbb
or
shl
adc
mov
inc
outsb
inc
enter
cs
imul
mov
adc
xlat
mov
les
mov
adc
jno
sarl
push
cmc
test
pop
add
xchg
adc
inc
sbb
push
jo
lds
adcl
lcall
daa
sub
sbb
mov
inc
mov
lcall
ret
lods
adc
pop
ss
add
aad
mov
aas
ret
xor
pop
mov
hlt
dec
jnp
cmc
fstpt
es
int
mov
ja
std
bound
lret
inc
xchg
shlb
fidivrl
mov
aaa
jmp
jno
sub
icebp
insl
fiaddl
arpl
mov
xchg
cmp
mov
jp
in
jge
bound
test
call
out
cmc
mov
mov
outsl
adc
inc
outsb
xchg
xor
les
rclb
jae
xchg
setb
mov
je
push
inc
jmp
movsl
insb
into
scas
adc
push
mov
add
adc
pushf
test
lret
scas
imul
movsb
cli
or
mov
cmp
xchg
xor
pop
mov
clc
lretw
push
mov
out
inc
xor
add
idiv
mov
mov
jne
xchg
mov
rcll
cmp
mov
popa
lcall
pushf
add
pop
dec
add
loop
daa
dec
call
mov
les
sub
push
inc
movl
pushf
movl
pushf
pushf
pushl
push
lea
jmp
push
lea
pusha
movl
call
jmp
lea
jne
pusha
pushl
ret
jge
push
subb
scas
xchg
test
mov
mov
mov
xchg
adc
dec
enter
or
shlb
fldl
mov
mov
sbb
pop
pushf
std
pop
lock
cmp
push
add
jge
adc
or
das
push
mov
or
add
leave
xor
inc
push
outsl
mov
jmp
cmp
call
das
popa
inc
and
pop
xchg
pop
add
xlat
and
ja
pop
ret
sub
pushw
push
test
das
adc
sub
push
xor
push
mov
out
ss
aas
pop
add
pop
jmp
leave
out
push
les
or
inc
call
cmc
cmc
pushf
cmc
cmp
pushf
mov
lea
jae
bt
cmp
pushf
mov
pusha
lea
jae
call
cmp
outsl
outsb
iret
cltd
scas
fisttpl
mov
jge
outsb
add
push
ja
jne
rclb
andl
adc
mov
loope
inc
insl
cmp
outsl
sarb
js
lea
push
xor
cmp
push
scas
sbb
js
int
lret
mov
inc
mov
push
cli
popf
test
xchg
push
xchg
or
sub
jno
xor
loop
in
les
test
pop
call
cmp
pushf
push
mov
lea
ja
clc
stc
push
imul
pushl
pushf
pusha
mov
lea
jmp
push
movzwl
shl
mov
bt
call
not
mov
movb
test
push
pushf
lea
je
push
lea
jmp
xchg
jle
inc
stos
add
movsl
mov
into
mov
jae
mov
push
sbb
sti
add
jge
aam
mov
push
xchg
cmp
or
and
shl
pushf
mov
jo
mov
jnp
les
sbb
cmp
movl
call
call
call
xchg
add
jnp
ffreep
sbb
and
adc
push
cmp
jl
shll
and
fmull
jle
int
andl
sub
notb
inc
cmp
icebp
xchg
push
imul
addb
mov
outsb
xchg
aaa
fldl
mov
lea
pusha
pushf
pusha
pushl
inc
lea
push
mov
lea
call
jmp
mov
mov
lea
ja
pusha
jmp
cmpb
lea
js
jne
dec
daa
push
cwtl
sub
bts
sete
clc
shl
mov
add
rcl
sbb
pusha
add
add
add
mov
cmp
clc
test
test
push
lea
jge
je
bt
cmp
pusha
sub
cmc
test
cmp
pushf
call
dec
pushf
push
jmp
btr
shrd
sbb
mov
pusha
adc
add
pushf
shr
setb
mov
pushf
cmp
test
pushf
call
lea
je
cmc
cmp
push
lea
je
test
bt
cmp
pushf
pusha
jmp
pushf
cmp
pushf
lea
jae
clc
cmp
mov
rol
mov
mov
stc
sub
mov
stc
bt
xor
pushf
cmp
bt
repnz
pusha
lea
jne
xor
test
mov
rcl
jb
sub
inc
mov
call
xor
movsl
mov
popa
xchg
fiadds
sub
mov
jb
mov
les
push
jge
and
and
nop
repz
jg
inc
jmp
jg
jne
xchg
call
cmp
lret
xor
data16
out
push
push
jno
filds
insb
shlb
insl
pop
sbb
lds
xor
shlb
ja
push
test
and
outsb
lods
push
fwait
out
neg
es
mov
and
mov
push
cmp
ljmp
pop
add
fwait
out
shlb
mov
test
push
mov
mov
push
sbb
ljmp
mov
jle
out
js
xor
scas
shl
xchg
xor
inc
xchg
js
dec
xchg
inc
mov
hlt
sbb
out
sub
les
mov
pop
out
hlt
push
pop
dec
xchg
neg
cmp
mov
sbb
inc
sarb
aad
dec
xchg
call
mov
imul
jno
fisubl
push
loopne
aam
mov
or
lods
push
movsl
inc
test
enter
lock
mov
mov
insl
push
xor
push
pop
mov
aas
and
inc
inc
inc
outsb
xor
mov
dec
mov
push
push
repnz
in
dec
pop
cmp
lret
or
shlb
ret
mov
sbb
xor
adc
les
pop
scas
stc
negb
fcoml
jmp
enter
gs
adc
hlt
push
int3
cmp
fisubs
push
movsl
out
push
rcll
push
mov
mov
daa
mov
inc
ss
or
mov
pop
enter
enter
lods
push
jbe
cmp
movsb
enter
les
std
popl
mov
nop
dec
mov
outsl
aad
lahf
shl
les
add
lea
jne
movsbw
btr
mov
rcr
movsbw
bswap
or
sub
bt
shl
shl
pushf
lea
bt
cmc
call
pusha
lea
jne
shl
sbb
cmc
test
xor
shl
shld
daa
mov
or
cmc
push
setp
add
rcl
mov
clc
pushf
test
pushl
test
movb
push
jmp
movl
neg
call
pusha
jmp
call
cmp
xor
in
insl
sub
mov
sub
mov
lods
adc
pop
sahf
incl
inc
sub
jge
mov
shrl
jnp
or
loopne
inc
aaa
pop
mov
cmp
negb
mov
mov
cmp
xchg
call
out
sub
mov
jb
cmp
mov
fs
and
push
movzwl
movsbl
shrd
btr
jmp
mov
test
je
inc
mov
dec
xor
mov
mov
mov
jl
xor
xlat
xor
ljmp
push
or
mov
pushl
ret
sub
std
pop
mov
in
sarl
movsb
push
imul
jb
inc
movsl
xchg
mov
xchg
pop
repz
mov
mov
cs
mov
add
xchg
cmp
cmp
push
push
subl
mov
and
sbb
mov
test
jne
push
cmp
out
sysenter
sbb
lret
enter
xlat
jp
dec
out
nop
mov
neg
les
xchg
pop
rorb
test
rcr
not
shrd
movzbw
pop
clc
sub
pushf
push
lea
jb
pusha
pusha
pushl
jmp
movb
push
cmp
bswap
pusha
lea
cwtl
mov
pushf
lea
ja
pushf
mov
mov
lea
jb
clc
jmp
adc
les
mov
and
stos
adc
mov
or
js
gs
out
jae
xchg
in
mov
jg
pop
sub
repz
rolb
cmpsb
jecxz
push
movsl
xlat
xor
pop
lods
nop
es
icebp
aad
out
mov
into
adc
lret
inc
into
xor
pop
mov
push
incl
xchg
cmp
fidivs
cmp
add
dec
js
xchg
mov
andb
insl
cmovle
adc
and
mov
negl
xor
inc
arpl
cli
inc
sub
mov
mov
push
clc
in
fdivrs
lds
sbb
inc
aad
mov
out
hlt
sbb
xchg
adc
inc
and
subl
popa
loopne
pop
std
bound
and
fdivrs
insl
int
inc
bound
sti
jb
adc
lock
mov
dec
sub
inc
popa
pop
and
cmc
inc
test
or
adc
pop
cli
push
ret
mov
push
cmp
inc
popa
cmc
js
in
cmpsb
out
hlt
sbb
ffree
mov
mov
xchg
jno
inc
bound
inc
test
sub
jo
je
mov
in
inc
mov
xlat
jnp
inc
out
sub
popa
xlat
add
add
sub
cmpsb
sub
loopne
int
lea
xlat
std
mov
les
sub
arpl
adc
js
xchg
or
sub
neg
mov
clc
clc
bt
call
call
mov
shr
bsf
mov
pusha
pusha
or
push
pushf
jmp
movl
pusha
jmp
pushf
stos
pusha
push
push
lea
jmp
jmp
mov
push
ret
mov
nop
mov
push
ret
push
push
out
decl
shll
mov
dec
ret
frstor
inc
mov
push
ret
mov
lea
push
ret
pop
addb
in
xor
dec
iret
adc
in
mov
dec
ret
xor
mov
dec
ret
ret
mov
cli
clc
push
ret
andl
mov
movsb
sti
loopne
out
ss
push
ret
movl
dec
inc
dec
jae
mov
push
ret
bound
divb
ret
cmp
lcall
ret
call
iret
imul
inc
jp
mov
push
ret
mov
xor
shll
mov
dec
ret
push
mov
ret
mov
cmp
loopne
pop
js
ret
adc
mov
push
ret
daa
mov
dec
ret
bound
pop
mov
push
ret
add
xor
ret
jo
push
mov
push
ret
stos
pop
mov
out
xor
enter
iret
mov
dec
ret
leave
popl
mov
push
ret
pop
int3
cmp
push
ret
lods
and
out
xor
or
es
mov
push
ret
or
mov
push
ret
sbb
fbld
xchg
dec
ret
sub
mov
push
ret
mov
push
ret
movsb
pop
add
push
ret
fisubl
mov
dec
ret
sbb
jl
push
ret
sub
fistpl
nop
and
scas
mov
push
ret
mov
push
jo
ret
or
pop
in
aas
test
xchg
dec
lods
lea
cmp
sahf
jle
subb
scas
cmp
dec
lret
test
dec
inc
push
lods
xchg
mov
mov
and
add
jle
mov
call
ss
adc
mov
mov
xchg
in
xor
dec
or
lahf
adc
std
dec
xchg
sub
clc
inc
jecxz
sub
pop
jmp
dec
jmp
pop
mov
jl
xor
push
lea
call
jmp
not
cmp
jmp
les
jp
sbb
negl
and
xor
inc
sub
mov
ja
popa
add
lea
sub
inc
xchg
mov
inc
jns
xchg
movsl
dec
add
shlb
adc
mov
pop
call
sbb
dec
insb
mov
lods
dec
pop
test
outsl
adc
inc
pop
adc
movl
call
movl
mov
lea
jmp
pop
and
inc
lret
push
jbe
mov
sub
cmpsl
lock
sbb
testl
ljmp
or
pop
add
std
gs
xor
jle
cmpsl
cmp
pop
add
adc
pushf
xor
lret
pop
lcall
in
ror
add
mov
pop
jge
shrb
push
aaa
jmp
lods
les
jns
adc
aas
sbb
adcl
sbb
les
loop
mov
cmp
pusha
lea
ja
jmp
pushf
pushf
lea
je
test
stc
pusha
jmp
sbb
add
mov
call
mov
jb
pushf
pusha
mov
pushf
lods
clc
cmp
mov
not
cmc
clc
stc
xor
pusha
call
xor
pusha
inc
sub
scas
iret
orl
jne
cmp
outsb
stos
or
jecxz
mov
imul
push
test
jbe
sub
outsl
cmovs
lahf
adc
subb
hlt
sti
dec
cmp
and
aam
std
bound
cmp
dec
imul
cmc
adc
jne
dec
cwtl
and
fildl
fwait
les
int3
leave
pop
in
iret
arpl
mov
arpl
xchg
and
js
jge
add
notl
pop
jns
xor
sbb
movsb
les
pop
loop
stc
call
cld
sub
loopw
test
std
loopne
inc
es
dec
mov
jbe
mov
sub
xlat
and
lods
sbb
movsb
not
inc
out
xchg
sbb
sti
add
and
xor
les
push
xchg
cmp
jle
mov
cmp
rorl
pushf
push
pop
mov
cmp
and
push
cmc
sbb
in
jae
inc
pop
cs
movsl
not
jmp
sbb
push
testb
pop
xchg
adc
mov
mov
aaa
sbb
xchg
fiadds
mov
testl
cmp
add
aam
mov
pusha
add
rcrb
add
lcall
dec
push
mov
incl
mov
jmp
xor
call
negb
imul
aad
and
popa
daa
push
sub
std
insl
adc
mov
sahf
lds
les
shlb
insl
xchg
popa
pop
dec
cmp
jae
andl
loop
shl
les
test
test
cmp
push
cmp
call
pushf
movb
lea
je
bt
cmp
jmp
movsl
xlat
cmp
push
and
push
jne
mov
jb
shl
xor
fdivrs
testl
hlt
aad
sbb
into
and
xlat
mov
pop
add
cmpsb
or
inc
mov
cmp
lea
xor
sbb
add
int
cmp
out
jne
data16
mov
imul
sbb
mov
inc
pop
pusha
mov
pop
jge
test
cltd
cmp
out
nop
mov
les
rcll
movsl
or
hlt
adc
faddp
sub
les
pop
lahf
sbb
pop
push
adc
call
ss
fistpll
inc
pop
pop
call
xchg
cmp
add
xlat
push
ja
les
or
mov
in
nop
lea
jp
jb
repnz
pop
mov
cld
inc
inc
sub
push
adc
stc
sub
mov
scas
scas
pmaddwd
jge
arpl
nop
sub
push
pop
shl
xchg
loopne
lret
inc
movsb
sub
andb
repz
adc
mov
push
mov
lahf
fisubs
addl
xor
mov
rorb
in
xchg
push
inc
arpl
jnp
inc
pop
ret
fildll
or
push
or
jecxz
add
add
int3
jae
cmp
fbstp
hlt
adc
fdivrs
inc
or
pushf
mov
adc
das
add
pusha
lahf
andb
int
adc
les
sub
push
cld
mov
aad
fidivrl
push
stos
bound
ret
push
icebp
mov
bound
dec
insl
push
les
or
fisubl
pop
mov
das
xchg
nop
jo
cmp
sbb
sub
cld
push
scas
lods
inc
fstpt
adc
pop
andb
les
loope
cmpsb
or
sahf
movsl
push
aas
jle
mov
notl
pop
push
push
lea
hlt
adc
mov
pop
mul
cs
jno
inc
push
lahf
scas
rcll
ja
dec
cmp
and
lods
adc
les
shll
andb
imul
mov
jecxz
sub
sbb
inc
mov
pop
ds
mov
push
jns
sub
cmp
ss
xor
jmp
hlt
push
mov
xor
fnstcw
push
mov
notb
repz
jg
mov
lds
cmp
test
dec
scas
adc
ds
dec
mov
fcmovb
pop
mov
arpl
inc
call
and
lds
mov
mov
jae
pop
mov
movsl
jle
pusha
xchg
sub
movsl
lds
ret
sbb
or
jb
cmp
cmp
sub
andl
les
mov
lcall
jle
test
push
stos
cmc
sbb
imul
andl
inc
push
jecxz
nop
mov
into
fsts
lret
sub
jbe
mov
jmp
mov
pop
mov
mov
in
xchg
jmp
xor
push
std
jecxz
das
xchg
cmc
arpl
add
outsb
pop
lds
xchg
add
movsb
lret
and
dec
sub
test
pusha
inc
jp
pop
imul
pop
sti
pop
jg
filds
inc
mov
ret
in
rorl
addr16
lea
xchg
lock
sub
in
clc
lret
scas
and
repnz
pop
aas
pop
subl
out
jae
sbb
in
adc
dec
outsb
aam
inc
push
adc
movl
add
adc
shl
mov
stc
cmc
bt
test
lea
pushf
movw
pushf
lea
je
pushf
mov
pushl
lea
jmp
pushl
popl
setb
cwtl
pushf
mov
setnp
seta
movl
bswap
pushf
call
pushf
lea
jb
pushf
pushf
cmpb
jmp
jl
inc
cmpsl
push
xchg
mov
in
push
mov
std
pusha
inc
daa
mov
or
imul
fdivl
cmpsb
or
or
or
dec
mov
stos
faddl
cmp
mov
rorb
xchg
sbb
fsubs
ljmp
or
adc
or
sti
push
mov
das
rcrb
jecxz
cs
jno
mov
xlat
mov
into
adc
stos
mov
shll
lds
sbb
repz
mov
lods
loopnew
jle
punpckhbw
dec
xchg
add
mov
mov
cmp
stc
fidivrl
mov
push
cld
and
addr16
stos
into
or
push
adc
push
or
enter
cmp
int3
jno
jbe
inc
push
xor
sub
adc
movl
pushf
movb
pusha
push
mov
pushf
pushl
pushl
ret
inc
movw
pushl
cmp
cwtl
lea
call
sub
and
jp
xchg
jle
lds
xlat
ficomps
mov
das
lds
push
push
int3
int
push
mov
ds
xchg
negb
cs
cmc
fnstcw
xchg
mov
xchg
xor
out
adc
int3
mov
arpl
push
gs
push
repnz
std
push
es
pop
shlb
add
iret
jbe
cmp
les
jg
dec
iret
add
in
and
pop
cmp
jne
cmp
imull
mov
int
xor
mov
inc
xchg
dec
sub
inc
test
cltd
loop
dec
fidivrs
sbb
mov
cmpsb
bound
dec
int3
adc
dec
mov
rcrb
pop
movsl
pushf
testl
sub
and
mov
addr16
push
out
mov
pop
fidivrl
xlat
mov
mov
lea
fidivrl
add
cmpl
je
cmp
add
pusha
cmp
pusha
cmp
jmp
test
in
xchg
sbb
inc
and
cld
pop
inc
test
mov
fldl
or
outsl
or
cmp
xlat
xor
xor
mov
ficoms
inc
mov
inc
in
hlt
mov
sbb
outsl
shl
jg
cmp
pop
mov
mov
pop
mov
insl
daa
jae
pop
jns
add
push
into
adc
pop
add
sbb
pop
movsb
dec
dec
inc
call
mov
lea
call
push
lea
jae
jmp
cmc
shr
push
pusha
cmp
call
lea
jne
bsr
mov
sar
and
sub
jmp
clc
sub
insl
dec
out
hlt
or
cmp
ja
pop
mov
jb
shlb
adc
add
inc
push
cmpsb
add
pop
jg
cmp
lods
inc
mov
pop
cmc
pop
jmp
imul
je
les
adc
mov
popf
shr
cli
pushl
pusha
lea
jb
jmp
lea
jb
jmp
add
push
jnp
test
adc
fidivrl
sbb
gs
sub
pop
add
dec
xchg
xor
iret
sbb
xchg
negl
inc
loop
je
in
push
sub
into
xchg
mov
pushf
inc
jge
les
push
ret
lods
xor
jg
int3
hlt
xchg
mov
xchg
inc
push
and
add
cmp
add
jl
mov
xor
and
or
pop
insl
push
lret
adc
ret
pop
xchg
loope
mov
jge
cmp
cmp
fimuls
movsb
or
push
rorb
dec
add
ja
jmp
sbb
xor
movsb
cmp
or
mov
dec
jo
xorl
xchg
clc
popf
inc
imul
pop
jp
and
xor
andb
lret
lock
ret
push
sbb
inc
push
jge
dec
sub
and
neg
ror
sub
mov
bt
sub
push
pushl
popl
stc
cmp
pusha
call
inc
or
push
mov
dec
out
ficoms
movsb
or
ljmp
and
insl
int
pushf
cs
dec
xchg
stc
pop
stos
jp
xchg
xor
xlat
stos
pop
stc
in
fdivr
mov
stc
pop
cmp
test
pushf
fildll
dec
mov
test
jecxz
sub
xchg
jno
mov
aas
sub
sti
decb
mov
cmpsb
movsl
push
je
jno
dec
sbb
dec
out
adc
pop
mov
inc
push
mov
xchg
aaa
sbb
leave
jnp
icebp
test
xchg
les
mov
andl
sar
stc
mov
pushf
cmp
sub
cmc
pushl
popl
cmp
call
lea
jne
call
bsf
mov
pusha
cmpb
call
call
cmp
adc
mov
push
xor
pushf
jecxz
cmp
add
ds
insl
je
jne
mov
xchg
cs
dec
movsl
outsb
lahf
mov
in
inc
mov
pop
std
mov
les
mov
dec
test
mov
gs
xchg
hlt
xchg
sbb
lret
push
test
push
lahf
shll
sub
jp
pop
xor
test
fdiv
stc
or
jle
mov
pop
cli
bound
add
sahf
pushl
inc
insb
scas
lea
mov
movb
dec
add
adc
jne
sub
lods
int3
jb
sbb
mov
repz
test
mov
jo
in
sbb
xchg
inc
mov
shll
pop
add
test
lret
and
insl
inc
cmpsb
int
pop
push
jmp
push
pop
xor
movsl
aaa
mov
cld
or
icebp
aad
fsubrs
insb
fwait
in
jns
jmp
mov
out
sub
int3
pop
mov
or
pusha
lds
xchg
pop
add
inc
push
cmpsb
scas
negl
test
push
addr16
push
mov
push
adc
mov
and
fdivl
call
or
inc
push
adc
arpl
pop
test
xchg
xor
mov
mov
fildll
mov
jmp
cmc
cmpb
pushf
lea
jne
shr
adc
xor
setns
mov
rol
add
stc
shl
setbe
mov
jmp
mov
pop
add
stc
xchg
popa
mov
mov
xor
pop
int
test
cmc
sbb
mov
lret
mov
and
lret
xor
in
aas
mov
cmpsb
into
out
xchg
mov
jge
shll
or
inc
dec
dec
and
fs
je
cmc
pushf
pushl
call
lea
je
pushf
pushf
pushf
lea
jmp
mov
add
push
movsb
push
or
pop
cmp
lds
fnstsw
push
into
mov
daa
arpl
pop
push
dec
xchg
jbe
sbb
sbb
sbb
push
ja
push
push
inc
ds
push
aas
into
jae
xor
pushf
sbbb
in
pop
cltd
sub
iret
jg
sub
push
mov
jl
mov
adcl
mov
push
mov
out
call
push
pop
add
dec
repz
jecxz
in
or
inc
dec
cmp
scas
nop
bnd
pop
cmpb
xor
fwait
shll
inc
dec
mov
movb
mov
lea
call
pushf
movb
pusha
mov
lea
jae
inc
mov
call
push
movl
call
mov
lea
je
push
pusha
stc
bt
sub
movb
cmp
mov
movl
lea
ja
pushf
imul
pusha
add
pushf
lea
jmp
mov
call
cmpb
call
push
xchg
lods
add
dec
stos
mov
cmp
lods
into
lods
jne
addb
sbb
insb
mov
lret
jbe
push
cmp
lahf
jae
addb
pop
lods
iret
je
mov
jmp
aad
dec
xor
sub
adc
cmp
cli
mov
mov
inc
dec
lea
lea
je
cmp
push
test
add
clc
clc
test
cmp
cmp
pushf
lea
jb
stc
bt
jmp
pusha
lea
jb
clc
jmp
cmpsb
fidivrl
mov
out
push
mov
push
cmp
out
add
pusha
bound
rorl
out
push
mov
stos
dec
mov
pop
sti
mov
andb
negl
mov
mov
pop
sarl
mov
pop
aas
add
dec
repnz
or
in
mov
or
out
lcall
inc
dec
dec
int3
adc
shll
dec
mov
cli
negl
and
test
cmp
mov
add
dec
mov
jnp
sub
mov
movsl
dec
jl
cwtl
dec
aad
stos
int3
or
mov
add
iret
scas
xchg
test
testl
and
cmp
int
push
jbe
mov
push
into
cs
popf
inc
out
scas
xchg
les
dec
rcrb
aad
and
adc
add
jle
sub
out
sarl
sbb
xor
lcall
out
pop
xchg
xor
mov
xor
push
inc
mov
shr
sbb
bound
dec
xor
js
cmp
dec
jo
inc
dec
adc
cmp
inc
fisubl
dec
mov
push
mov
andb
les
inc
lret
test
push
jae
in
sbb
add
scas
adc
add
mov
sbb
enter
addr16
jp
out
add
mov
pop
stos
pop
jns
xchg
sub
sbb
fistps
and
arpl
pop
xor
inc
repz
insl
fldt
jmp
sub
cmp
cli
xchg
fdivrl
hlt
push
stc
dec
mov
leave
ljmp
insb
xchg
ss
inc
dec
aam
mov
mov
bt
test
jmp
push
clc
bt
ror
call
pushf
call
cmp
stc
add
stc
test
call
push
pushf
mov
pushl
mov
movl
pushl
pushl
ret
jns
or
sub
inc
add
and
loope
sub
xchg
hlt
pusha
inc
cltd
pop
sub
jle
xor
mov
dec
imul
arpl
repnz
push
je
mov
fisubs
xchg
push
mov
adc
mov
ja
rcrb
aad
repz
dec
xor
pop
mov
sbb
xchg
popf
in
and
shll
sub
cmp
jle
inc
outsb
xchg
mov
lahf
inc
loop
les
add
decl
mov
dec
rol
neg
mov
stc
add
pusha
cmp
bt
clc
mov
bt
jmp
call
negl
mov
inc
jno
sub
lahf
fs
xor
cmp
cmpsl
add
push
and
add
xchg
repz
sbb
add
fisttps
int
gs
mov
jb
outsl
sar
pop
mov
cmp
xor
fldl
dec
cmpsl
or
leave
insl
or
cmp
pop
loop
pusha
push
pusha
call
jmp
lea
neg
and
mov
jmp
add
xor
neg
mov
stos
mov
mov
jge
fstpl
scas
xchg
into
mov
fs
imul
mov
xorb
or
push
jno
pop
out
or
mov
fmul
mov
xchg
push
mov
mov
shl
xor
sbb
test
lahf
mov
cmp
or
mov
data16
les
mov
jge
pushf
jmp
jmp
movsbw
mov
mov
movb
push
pushl
pushl
ret
jmp
jmp
xchg
pop
daa
paddusb
lret
mov
jns
inc
test
xor
mov
inc
lods
mov
sub
fwait
out
dec
mov
arpl
ss
in
xor
sub
cld
cwtl
shl
in
dec
decl
ds
ret
add
sub
cmpsb
or
scas
pop
je
les
add
mov
cmp
jge
mov
loope
repnz
cmc
cwtl
mov
jg
add
mov
les
movb
adc
push
cmp
nop
push
lods
shrl
je
cmp
and
pop
jp
movsl
insl
sub
sbb
sbb
out
shlb
dec
sub
sbb
push
lcall
lret
icebp
cli
cmpsb
popa
jno
fisttpll
addb
add
hlt
clc
ss
fistpll
mov
xor
loopne
enter
pop
mov
xchg
faddl
inc
mov
aaa
popl
cmp
test
test
mov
cmp
pushf
call
repnz
call
pushf
pushf
lea
jne
bswap
movb
call
lea
shl
mov
cmc
mov
cmp
xor
clc
repnz
movw
jmp
lret
sti
popa
inc
cmpsl
cli
sub
shlb
push
jb
cmp
dec
add
xlat
and
hlt
call
push
mov
lcall
andl
icebp
add
or
gs
add
aaa
add
scas
inc
shll
mov
insl
dec
insb
fwait
in
cld
jae
inc
mov
sub
negb
les
popf
pop
cmpsb
or
and
pop
in
mov
mov
cld
inc
clc
or
push
call
jne
aad
or
sub
aaa
pushf
mov
rcr
shl
add
cmp
mov
cmp
test
push
pushf
pushl
lea
jmp
push
sbb
btc
push
or
cmp
push
adc
sar
mov
push
cmc
aad
mov
cmc
cmc
pusha
test
mov
call
call
cmp
mov
orb
ret
cmp
and
mov
stc
fcmovnb
mov
mov
adc
adc
aaa
and
movsl
jle
push
pop
push
pop
arpl
cs
sub
es
sbb
jne
fld
inc
inc
jle
and
notl
xor
dec
xor
pop
clc
in
pushf
ret
in
imul
lock
adc
push
bt
push
shl
push
xchg
pusha
mov
xor
sar
bsr
mov
xor
xchg
xor
mov
rcl
mov
or
jmp
pushf
lea
jne
pusha
pushf
jmp
push
inc
call
and
mov
call
mov
insb
dec
adc
pop
ss
shll
add
gs
aaa
das
adc
fdivl
jecxz
imul
dec
and
sub
shlb
inc
cmpsl
flds
pop
fmull
sbb
in
loopne
pop
stc
arpl
push
and
mov
outsl
xchg
push
mov
lcall
in
inc
daa
jp
and
xor
out
dec
insb
shlb
push
mov
push
negb
mov
xchg
sub
and
ljmp
push
icebp
out
sbb
addr16
pmaddwd
jns
xchg
addr16
jae
mov
push
cmp
cmc
push
mov
fwait
jge
xchg
cmp
test
fistps
aas
popa
sahf
inc
xchg
ret
dec
out
jmp
mov
pop
and
mov
jmp
inc
sub
jp
movsl
xchg
out
int
push
xchg
sub
push
imul
add
mov
jb
fnstcw
inc
mov
dec
jno
mov
inc
inc
mov
jo
fwait
adc
xor
shrb
rol
inc
jl
dec
pushf
pusha
movl
pushf
pushf
movl
pushf
pushl
pushl
push
lea
jmp
mov
pop
enter
repz
ds
add
dec
mov
div
fcom
jp
pop
ret
mov
sbb
push
pop
imul
call
sbb
sbb
out
cmp
andl
clc
xor
lds
and
jb
cmp
negl
ds
inc
les
inc
cmp
fisttpl
rclb
clc
sbb
shl
and
not
bt
rcl
and
sub
shl
neg
jmp
jmp
lea
call
jmp
cmp
insb
dec
movsb
clc
jmp
jno
jmp
xor
popf
pushf
lcall
imul
iret
sub
push
dec
cmpsb
jecxz
movsl
xchg
ds
adc
inc
out
or
shl
es
mov
inc
inc
outsb
icebp
cmp
fs
jne
pushf
jmp
stc
pop
ret
je
shll
test
jno
cmp
lods
push
jo
dec
adc
outsb
mov
mov
iret
icebp
fistpll
popf
mov
in
ss
lods
sbb
dec
mov
out
push
mov
test
jle
dec
fildll
into
out
push
sbb
xchg
xor
jecxz
xchg
stc
cmc
hlt
push
stos
mov
cmpl
push
inc
xchg
mov
fs
test
jno
adc
inc
inc
inc
fdivrs
fs
mov
cltd
xchg
xchg
lock
push
sbb
bsr
bsr
mov
cmc
cmc
stc
sub
jmp
imul
bt
add
pushf
pusha
pushf
lea
jmp
lea
jb
pushf
push
bt
cmpb
push
mov
lea
jne
ror
clc
pushf
mov
pushf
pushl
test
add
test
movb
movzwl
jmp
and
cmp
das
test
push
mov
cli
fldl
push
jmp
cmc
pop
and
or
xchg
out
adc
loope
push
push
in
and
or
push
aaa
mov
pop
mov
cmp
mov
sbb
ljmp
movsb
sbb
sahf
in
dec
ss
subb
stc
popa
mov
pusha
add
xor
inc
test
lods
lods
push
sbb
jae
cmp
or
or
push
std
mov
les
sub
add
fcoml
aam
jnp
shld
neg
mov
bsr
call
pushf
movl
push
jmp
pusha
movb
movl
jmp
adc
add
ds
push
imul
xchg
jbe
mov
outsl
rcrl
gs
or
das
into
inc
call
sti
lcall
jl
mov
cli
cmpsl
and
xor
xlat
add
pop
sbb
je
cmp
dec
mov
les
leave
xchg
repz
popw
inc
xor
inc
in
mov
mov
inc
inc
jb
int3
movb
movzbw
push
lahf
lea
pushf
jmp
pusha
cmpb
mov
jmp
ljmp
cmp
arpl
dec
mov
add
fadd
and
out
sub
inc
push
dec
cmp
ret
pop
pop
push
pop
lock
aam
sbb
icebp
lcall
xchg
pusha
xlat
inc
shlb
jo
pushf
mov
mov
enter
out
shlb
sub
aad
and
and
push
das
shl
pop
inc
inc
inc
mov
adc
movl
mov
lea
jmp
lea
ja
inc
ror
jmp
stos
gs
push
jno
sbb
pop
mov
xor
imull
dec
push
es
in
orl
lods
outsl
jne
cmp
dec
jb
lea
pushf
movsb
or
lods
movsl
mov
mov
lods
cmp
jbe
fisttps
insl
sbb
jnp
xchg
push
cwtl
jbe
loope
lods
dec
mov
mov
xorl
in
xchg
mov
movsl
xor
daa
imul
inc
cmp
cmpl
cs
out
stos
in
jp
jp
jmp
test
rcr
sti
push
imul
mov
insl
cmp
in
jge
add
xor
pop
or
jb
sbb
sbb
xor
in
sahf
push
nop
xchg
insb
je
jno
int
or
jo
call
leave
lea
pop
cs
ljmp
shll
jecxz
fmul
push
subb
cmp
pop
cwtl
sub
mov
test
jp
cmp
insl
push
add
pop
imul
test
addl
data16
pop
or
sbb
pop
ret
xchg
push
movsl
lods
cmpsl
lret
mov
pop
lret
inc
test
sbb
cmp
adc
inc
push
lods
push
jmp
mov
and
or
bound
pop
adc
shl
sub
cmp
ret
call
add
leave
ja
outsb
out
stos
adc
push
and
adc
cmpsl
test
movsb
ss
lock
out
dec
xor
lods
push
cmp
je
xchg
xor
pushf
les
xorl
fstpl
push
fnsetpm(287
test
andl
outsb
mov
lahf
xor
push
push
inc
test
adcl
or
push
push
fiaddl
movsb
jecxz
adcb
call
fisubrl
and
pop
cmp
addr16
sbb
mov
dec
xorb
jae
mov
stos
or
mov
je
xor
jecxz
or
cli
fisttpl
push
lea
repnz
ja
call
pop
data16
or
or
pop
sbb
pop
int
sbb
sub
push
sub
pop
sub
lcall
cwtl
or
test
pusha
xchg
push
inc
pop
test
cltd
inc
and
xor
lret
adc
fs
sub
sbbl
idivb
movsl
inc
sub
push
adc
fs
in
out
movsb
jecxz
fs
sub
fs
push
loop
fs
push
in
push
shr
fisubs
cmpsb
inc
jno
fs
sbb
lock
ret
dec
adc
repz
inc
fsubrs
ljmp
push
sbb
xor
ret
in
outsb
cmpsb
movl
pop
je
sub
cmp
loop
sub
movsb
lahf
in
mov
xor
stos
mov
push
arpl
imul
jl
add
or
xchg
adc
or
and
pop
pop
mov
add
punpckhwd
push
dec
xchg
pop
je
rclb
pop
int3
sub
jo
loopne
sub
push
imul
les
or
pop
push
pushf
and
test
mov
mov
mov
imul
adc
mov
clc
rcrl
in
xor
int3
dec
jb
cwtl
jg
push
cmp
loopne
ret
fs
in
adc
mov
dec
lret
xor
and
daa
in
dec
pop
pop
idivb
xchg
arpl
or
dec
ror
pop
inc
sbb
dec
in
movsb
enter
lock
aam
es
push
or
xchg
pop
pop
cmp
cwtl
gs
enter
or
in
push
insb
sbb
xor
sub
and
aam
xchg
fwait
xchg
movsb
ficompl
je
sbb
mov
jmp
insb
stc
es
pop
arpl
in
pop
sbb
rolb
lock
sub
inc
and
js
fcompl
cltd
pop
xchg
adc
mov
loope
insb
add
cmp
movsb
mov
fcom
sub
add
rcll
jbe
push
push
cmp
adc
jae
leave
jno
in
call
aas
jnp
inc
inc
test
push
test
sub
icebp
insl
inc
aam
out
in
stos
add
mov
test
xor
enter
orl
xor
lcall
jl
push
je
or
jbe
push
jno
mov
dec
or
arpl
jno
jbe
imul
pusha
dec
jne
or
iret
imul
loope
dec
jp
xchg
fsubs
cmpb
int3
leave
jmp
imul
cmp
sub
ss
adcl
cmp
and
inc
and
sbb
dec
sbb
or
addr16
inc
js
mov
out
push
push
ds
mov
sbb
and
sbb
sbb
jae
xor
test
add
into
call
cmp
lcall
jne
jecxz
xor
leave
fcomi
cmp
add
push
ljmp
test
movsb
xor
popl
pushf
mov
je
xchg
andl
cmp
mov
pop
jmp
push
loope
in
outsl
mov
insb
cmp
aaa
sbb
in
jbe
stos
out
test
mov
shl
cmp
or
pusha
inc
dec
aaa
popf
pop
sbb
in
sbb
sub
test
lret
test
aaa
add
mov
jp
in
push
call
push
pop
cmp
lcall
push
rorb
jecxz
cltd
inc
add
push
inc
xchg
sbb
and
das
or
test
and
lcall
add
xor
mov
mov
sub
fucomi
add
adc
jecxz
and
test
in
dec
dec
mov
jl
in
push
and
sbb
test
jl
lret
mov
popa
xchg
enter
lods
popf
push
lcall
bound
iret
ja
mulb
lret
jp
andl
and
int3
out
or
push
add
test
ret
cmp
leave
jo
push
pop
inc
js
arpl
sub
sbb
addr16
movl
in
jo
out
push
jae
lods
jb
pop
shll
bnd
jne
insb
mov
stos
inc
div
cmp
mov
jne
mov
int3
in
cltd
fcompl
lods
xchg
imul
pop
xor
xchg
sub
in
add
add
push
in
inc
aad
pushf
jo
mov
shl
inc
ss
call
aas
enter
mov
neg
pop
and
mov
dec
orb
cs
mov
dec
lea
movsl
fsub
add
gs
in
or
push
imul
fucomip
xchg
add
test
and
mov
insl
out
fcoml
ss
imul
cmpsl
pop
andl
or
sub
mov
inc
and
leave
dec
call
adc
jmp
movsb
xchg
xchg
jecxz
mov
loopne
jae
push
orl
cmp
jp
mov
imul
daa
jne
shll
aas
jae
rolb
aaa
pop
dec
aad
call
adc
lcall
les
mov
xchg
mov
push
js
xchg
inc
imul
out
push
and
jb
push
rorb
jb
movsb
pusha
lcall
and
scas
imul
test
jae
cli
push
xchg
dec
cmp
out
jmp
mov
push
xchg
cmovl
adc
sub
xchg
fmull
dec
adc
loope
or
add
dec
loopne
push
sub
and
pushf
test
push
sbb
fiaddl
inc
jo
gs
inc
push
adc
sbb
push
cmp
mulb
push
aam
outsb
mov
mov
dec
jmp
cmpsb
sbb
dec
repz
shrb
movsb
push
test
mov
jb
dec
mov
lahf
sahf
or
xchg
inc
xchg
adcl
mov
js
scas
mov
movb
xorl
lcall
repz
pop
inc
add
aaa
imul
pop
add
and
adc
pushf
mov
arpl
sub
movsl
adc
sbb
dec
mov
xlat
aas
push
jmp
or
iret
sbb
cmp
or
or
and
and
bound
aad
adc
lods
or
lcall
cld
jmp
mov
insb
sarl
push
pop
add
sub
or
push
fs
push
test
out
inc
dec
fs
xchg
cmp
fstl
orb
jns
sub
fcoml
enter
or
pop
adc
in
stos
or
imul
rcrl
sbb
sbb
push
mov
ljmp
pusha
and
push
into
mov
or
cmp
mov
loopne
or
xchg
fs
cld
dec
sarl
push
jae
pop
cmp
daa
sbb
pop
test
mov
dec
loop
pop
jo
clc
popf
pop
inc
faddl
fsubl
mov
and
lods
lret
add
or
inc
aam
loop
mov
cmp
push
add
pop
mov
loopne
mov
dec
push
je
pop
dec
rcr
dec
or
push
arpl
push
aaa
test
pop
mov
and
call
imul
dec
insb
rol
mov
sub
pusha
stos
ret
frstor
xor
xchg
lahf
pop
pop
nop
pop
jl
fcomps
les
stos
ret
lret
cmp
push
dec
in
call
adc
pop
pop
xor
cmp
push
inc
daa
jo
inc
jae
push
pusha
insl
push
push
or
loopne
enter
fildl
pop
movsl
adc
pop
push
xor
inc
push
fs
pop
stos
push
ja
dec
inc
aam
les
negb
int3
push
pop
clc
dec
push
icebp
outsl
pop
in
je
pop
shrb
pop
push
loop
movsb
movsb
test
dec
jle
sbb
push
cmp
fcoml
sti
ljmp
and
cld
arpl
daa
adc
add
call
mov
or
fcmovne
daa
clc
addr16
mov
fcmovne
push
sub
lods
sub
inc
xor
add
fmuls
rclb
add
sub
outsb
out
dec
call
and
push
adc
inc
ss
daa
in
push
pop
movsb
sub
push
je
fsub
and
and
sbb
mov
pop
push
jecxz
inc
std
out
sbb
jae
imul
mov
cmp
sbb
pushf
pxor
pop
inc
adc
xor
imul
sti
roll
in
test
shrb
imul
inc
xor
or
inc
fmul
mov
leave
sbb
sti
xchg
popa
movsb
loop
shlb
loope
or
es
inc
xchg
insb
push
jmp
or
push
sti
lods
jl
imul
pusha
out
leave
add
pop
imull
and
push
xor
inc
mov
test
punpckldq
jmp
pop
add
inc
xchg
xor
aam
cmpsl
cld
stos
jp
test
pop
pop
pop
in
outsl
add
mov
xor
xchg
xor
add
gs
adc
cmp
sub
test
ss
shl
xchg
jns
fwait
pop
xchg
lcall
fidivl
xchg
popa
cmp
scas
mov
in
pop
scas
aas
fwait
jae
lods
sub
pop
out
test
mov
sbb
push
dec
jae
int3
mov
shrb
lods
xchg
add
sub
loop
test
dec
jnp
push
lcall
adc
pushf
and
cmp
push
jae
xor
test
pusha
outsl
pusha
ret
mov
sbb
jae
pop
jo
pop
xchg
cmpl
mov
pop
inc
imul
mov
lahf
and
aas
adc
pop
jmp
add
adc
xchg
stos
or
jbe
dec
mov
mov
jno
pop
std
pop
mov
pop
shlb
and
jae
jo
and
fwait
xor
int3
iret
outsb
cmpsl
int3
push
imul
inc
test
data16
sbb
or
loop
mov
in
add
jp
mov
inc
arpl
andl
into
mov
bound
inc
adc
sub
xchg
pop
out
pop
and
movsb
jne
sub
xchg
dec
arpl
out
out
movsb
data16
cmp
ret
popa
mov
test
shll
lcall
je
fildll
fimull
inc
xchg
aad
jmp
cmpsb
icebp
mov
cwtl
sub
mov
xchg
push
pop
cs
loopne
mov
in
ds
xchg
in
inc
loope
adc
ja
dec
jmp
xlat
xor
outsl
and
xlat
jno
push
sbb
je
sub
xchg
adc
add
inc
jo
in
in
jae
test
push
test
jecxz
stos
jbe
cmp
sub
mov
aaa
in
mov
fistpl
sbb
mov
sub
jb
fwait
push
xlat
dec
jmp
cli
add
out
push
movsb
push
xor
adc
scas
stos
pop
and
stos
adc
cmp
popa
mov
mov
sbb
inc
pop
jmp
ret
push
jecxz
mov
sbbl
adc
gs
mov
lods
sbb
fstl
test
jl
sbb
inc
push
ss
mov
mov
pop
xor
or
in
or
xchg
cmp
pushf
mov
xor
and
testb
in
js
mov
inc
ljmp
arpl
dec
dec
addr16
jb
adc
outsl
enter
cwtd
pop
pop
int
inc
add
into
aas
and
pusha
pushf
xchg
movsb
cld
adc
dec
mov
shll
lds
dec
pusha
and
in
or
lahf
and
bound
les
push
push
jecxz
ljmp
cltd
cmp
cmp
pop
jbe
movups
sbb
add
jmp
test
pop
or
push
inc
cmpsl
xchg
pop
and
into
push
lock
mov
lock
outsb
sbb
jae
aad
mov
jl
sbb
pushf
sub
and
jle
mov
popa
leave
xchg
je
mov
cli
jg
test
out
jmp
popa
jns
sub
ret
push
popa
movsl
outsl
jo
rolb
lret
cmp
cmpb
jnp
call
test
sbb
lods
pop
mov
pop
cmc
and
cmc
sbb
or
iret
aas
mov
popa
cltd
orb
aas
cmp
ret
mov
lret
fwait
stos
lea
int3
sahf
push
daa
pop
push
imul
sbb
ficomps
or
orl
outsb
jge
imul
mov
pop
ljmp
pop
jbe
dec
dec
add
loopne
add
fs
orb
and
inc
jae
xchg
mov
mov
xlat
fs
push
cs
pminsw
das
sub
ret
test
lods
lods
inc
xor
mov
loopne
adc
xchg
sbb
cmp
enter
adc
sbb
push
add
mov
aam
insl
sub
jp
outsb
sub
sbbb
xchg
inc
pop
in
call
dec
pop
in
fsubrl
pop
es
pop
sub
push
ja
fs
movsb
enter
push
xor
push
shlb
pushf
push
rcrb
jae
pop
mov
push
mov
dec
insb
cmp
inc
add
loop
or
inc
mov
fs
xor
int
mov
clc
mov
mov
fistpl
pusha
shlb
ret
mov
sbb
and
sub
mov
orb
addr16
or
dec
int
adc
cltd
and
mov
dec
out
lret
pusha
int3
adc
mov
loopne
ret
bound
jo
mov
pop
loop
mov
dec
and
loopne
movsb
call
sub
out
sbb
sub
pop
enter
dec
add
mov
xchg
lret
clc
mov
pop
push
inc
dec
add
pop
and
and
dec
aam
pop
enter
mov
arpl
cmp
cmp
int3
call
pop
clc
addb
push
mov
sub
push
scas
mov
dec
pushf
xchg
pusha
rcrb
mov
inc
lret
enter
xchg
and
pop
cwtl
movsb
pop
dec
fcmovnu
daa
lock
movsb
pop
xor
sub
mov
fdivrl
pushf
nop
add
mov
sub
nop
pop
in
fiaddl
dec
cld
arpl
rol
push
fprem
dec
in
dec
pop
aaa
pushf
or
pop
ficompl
or
enter
orb
sbb
fmull
popa
mov
enter
mov
sbb
xor
mov
je
ret
inc
or
sub
jne
out
outsb
imul
or
cmpsb
inc
cmc
mov
cmp
inc
fistps
ljmp
cli
pop
outsb
movsb
lock
gs
stos
jae
jmp
outsl
adc
scas
pop
stc
jp
add
or
cmpb
je
lret
insb
mov
mov
pushf
and
insb
dec
sarb
mov
sbbb
mov
popa
mov
test
test
daa
imulb
imulb
outsl
jl
arpl
pop
je
orb
and
fs
stos
adc
pop
pop
stc
movsb
pop
push
in
rolb
adc
test
dec
je
loope
popf
lahf
pop
xor
and
mov
mov
ret
xchg
arpl
and
and
sub
outsb
lret
inc
bound
andb
out
int3
jno
test
aas
jmp
jge
data16
or
cmp
stc
dec
dec
into
aad
bound
mov
cmp
data16
jae
mov
or
xor
dec
and
out
push
icebp
pop
sti
jae
and
add
pop
in
fsubl
xchg
in
xor
pop
pop
lock
lods
test
loopne
sbb
mov
test
pop
push
in
out
add
jmp
xchg
pop
add
test
and
sbb
pop
xchg
out
movsb
rcrb
lcall
mov
daa
scas
ret
mov
ficomps
dec
push
dec
inc
sbbl
dec
loopne
adc
ret
icebp
sbb
daa
sbb
push
pop
lods
xchg
sub
lret
push
dec
je
xchg
adc
int3
gs
out
jnp
xor
xchg
lock
dec
je
inc
scas
or
xor
in
xchg
pop
mov
imul
cltd
xchg
addr16
and
je
and
mov
mov
int3
jne
sbb
dec
dec
je
in
xchg
or
fildl
mov
pop
int3
pop
cmp
mov
add
shrb
jo
lock
aad
insb
test
into
jmp
push
dec
out
push
enter
cmpsb
pop
sahf
in
push
cltd
xor
sbb
cmp
aad
adc
fidivl
sbb
xor
sub
mov
test
mov
xor
outsb
xor
mov
cmp
adc
sarl
arpl
mov
ljmp
insb
push
pushf
push
movsl
cmp
fstl
fsubrl
inc
int
dec
dec
ja
cmp
xor
ss
sbb
lods
sub
jg
lea
jb
inc
jcxz
aaa
into
pop
xor
loop
repz
jmp
or
mov
sbb
loopne
jne
aas
pop
and
imul
jp
or
xchg
test
mov
sub
sahf
into
mov
dec
push
or
insl
sub
sbbl
ljmp
mov
call
iret
fistps
jecxz
lods
popa
add
xchg
fs
mov
je
fdivl
hlt
sbb
jle
push
pop
shll
int3
jo
pop
jp
push
rorb
and
hlt
fisubl
pushf
mov
call
stos
les
inc
loop
ret
mov
bound
int
dec
pop
cmp
adc
or
cmp
mov
popa
movsb
or
cmp
stc
push
or
xchg
pop
mov
mov
insb
adc
and
or
cmc
and
cmp
dec
sub
addr16
inc
cmp
out
stos
inc
aam
and
lds
in
lods
lcall
cmp
inc
adc
mov
test
cmp
stos
outsb
bound
jbe
dec
mov
push
in
lcall
in
push
cmp
inc
fwait
dec
pop
test
sarl
insl
pop
jne
icebp
outsl
nop
movsl
fistpll
daa
in
dec
mov
push
call
cmp
aam
roll
jmp
imul
adc
cwtl
or
insb
lods
add
push
movsl
popf
ja
ds
pop
sub
ret
insb
add
jnp
mov
pop
inc
fs
fwait
cmp
jb
push
mov
sub
test
je
outsb
stos
or
shlb
call
mov
sub
pop
insb
repz
in
mov
push
xor
movsb
enter
pop
jb
sbb
mov
clc
sbb
xor
imulb
test
lret
dec
je
fisttpl
mov
jne
mov
xorl
pop
aas
fldt
mov
pop
test
and
sbb
aam
push
sbb
stos
jmp
inc
xchg
das
cmp
stos
out
inc
and
insb
in
lea
add
popa
xchg
jl
sti
movsb
push
mov
test
out
xor
loopne
jbe
movsl
orl
xchg
and
cmpsb
and
in
or
rol
mov
insb
push
lret
outsb
subl
sub
test
aam
cmc
push
inc
cltd
jb
mov
ret
xchg
lret
jns
xchg
out
dec
mov
push
or
xor
jmp
adcl
int
sbb
add
sbb
xchg
xor
inc
dec
test
mov
add
adc
lret
push
stc
xor
jbe
push
mov
or
xor
fdivrs
mov
xorl
push
adc
hlt
xor
jbe
push
test
rcl
lret
mov
sub
xchg
fs
iret
pop
xor
or
inc
data16
pusha
cld
sub
out
xor
adc
rolb
in
cmp
ja
sub
lret
rol
lret
andb
lods
pop
mov
inc
fadds
sub
adc
test
in
push
mov
in
push
or
mov
push
push
imul
jb
test
dec
ficoml
or
dec
inc
imul
call
call
enter
push
lret
stos
ds
arpl
bound
fs
aaa
cmp
jecxz
test
pop
and
adc
cmp
sbb
jmp
into
adc
sbb
js
or
jns
adc
cmp
inc
push
pop
mov
push
in
cmpsb
mov
loope
and
xchg
or
xchg
and
push
push
subb
pusha
iret
addr16
cltd
in
inc
xchg
jle
fidivrl
test
push
cmp
sub
outsb
cmpsb
push
xchg
inc
inc
sub
aaa
imul
xorl
adc
inc
xor
jmp
xor
ss
cwtl
sub
push
sub
push
jbe
adc
les
test
outsb
movsb
out
dec
pop
test
ljmp
xchg
je
mov
mov
inc
pop
enter
test
jae
lock
xlat
mov
ljmp
aaa
fs
test
push
sub
fsubrl
xor
mov
push
mov
adc
pusha
insl
shlb
mov
test
push
fiaddl
pop
stos
dec
in
loopne
xor
sbb
add
pusha
xor
call
pop
push
repnz
lods
jp
or
inc
pop
xor
sub
sahf
push
push
aad
jle
inc
push
pop
jae
pushf
es
popf
pop
mov
adc
in
or
ret
inc
inc
orl
jmp
xchg
cmp
cmp
jnp
inc
xor
inc
push
enter
and
push
add
addl
sbbl
cs
fwait
mov
or
mov
movsl
push
shlb
push
aam
rolb
insb
add
or
or
and
jns
and
mov
mov
xlat
mov
popa
mov
test
cmpsl
lock
fwait
mov
push
push
sbb
stos
pop
cmp
clc
push
aad
cmp
les
stc
arpl
pop
arpl
nop
cmp
negl
mov
pusha
mov
out
push
fisubs
pusha
pop
out
jbe
shlb
ja
xchg
inc
stos
enter
fcomps
dec
cmp
stos
cmp
xor
push
pop
call
pop
in
dec
cmp
ss
call
inc
dec
jp
sbb
lods
adc
pusha
aad
stc
insb
xchg
jbe
lods
test
mov
test
fcmovb
leave
jbe
out
data16
sbb
sbb
dec
je
pop
push
movsb
in
and
lret
xchg
adc
sub
mov
and
pop
pcmpgtb
sbb
fstpt
pop
add
and
out
iret
loope
push
addr16
push
fdecstp
aam
sbbl
popa
leave
outsl
or
fs
ja
mov
sbb
push
add
arpl
xchg
fisubs
xchg
shr
adc
test
ljmp
fmull
add
or
test
subl
and
sbb
mov
jae
xchg
outsb
ja
scas
or
mov
in
xchg
jmp
imul
shlb
sbb
lods
jbe
xchg
jae
pop
push
xchg
pop
cmp
cmpsb
pusha
cmp
add
push
sub
sbb
aad
out
es
in
and
add
fnstsw
sub
loopne
sub
aad
shll
sti
lahf
in
ds
cmpsb
dec
les
fs
jp
cmp
dec
adc
and
fnstsw
sub
ret
push
and
cmp
loop
cmpsl
xor
cld
xor
outsl
leave
aam
push
repnz
push
inc
sub
in
shlb
fwait
jae
sub
dec
out
push
test
addr16
sbb
cwtl
dec
push
ffree
call
pop
xor
mov
push
loop
pop
cld
pop
jnp
push
cmpsb
add
pop
ficompl
arpl
cmp
xchg
repz
in
add
cld
sub
data16
or
xrelease
add
insb
or
out
pop
repnz
add
jae
rorb
in
aam
xor
jae
or
test
les
ljmp
in
and
and
and
dec
rorb
mov
aam
pop
cmc
push
rorb
movsb
or
adc
outsb
or
fs
jl
pusha
sub
cmp
and
pop
je
les
pop
pushf
cmp
aam
fs
shrb
pop
and
enter
cld
fsubr
sub
call
call
js
pushf
in
arpl
sub
or
rcll
pop
inc
or
and
ficompl
mov
sbb
das
and
pusha
loopne
and
dec
and
in
push
dec
shl
call
xor
lahf
xchg
arpl
adc
sarb
lock
inc
push
aam
in
insb
mov
fisubrs
call
adc
fsubrl
mov
push
and
push
mov
mov
shrb
loop
in
pusha
push
addl
sub
inc
push
loope
and
sbb
push
mov
cmp
in
sahf
jmp
cmpl
pop
test
and
xchg
fwait
sbb
push
cmp
popa
mov
dec
push
mov
jno
rclb
fucomi
test
push
mov
adc
or
jl
cld
pop
aas
jne
fdivl
pushl
fsubl
mov
inc
adc
dec
mov
movsl
adc
push
cmp
inc
sbb
cmp
bsf
inc
loope
jp
inc
sbb
fcompl
xchg
cmp
pop
jmp
jl
push
push
mov
push
test
add
loope
sub
or
push
push
jl
add
leave
js
fdivrs
shll
dec
or
rcr
and
sbb
aas
and
mov
add
lret
xor
sbb
xor
adc
mov
lcall
in
mov
push
orl
dec
sbb
and
rep
bound
jl
jecxz
pop
xor
test
adc
orl
insb
or
je
test
dec
int3
aam
fiaddl
cwtl
test
push
cltd
xor
rcr
andl
or
jl
dec
push
ja
or
jne
add
sub
fidivl
inc
outsb
lods
int
sarl
lods
imul
in
jmp
outsb
idivb
mov
pusha
pusha
je
cltd
xchg
test
test
xchg
ret
imul
mov
iret
xor
jmp
sub
fdivrl
xor
jge
insb
adc
inc
push
adc
movsl
out
lcall
or
jne
jg
mov
loopne
xchg
into
orps
je
gs
in
stos
pop
out
movb
or
sbbb
lods
aad
jecxz
mov
cwtl
mov
lds
pop
ljmp
or
rclb
imul
test
cmp
pop
or
iret
incb
imul
add
dec
xchg
pop
cmp
notl
aad
mov
sbb
lds
dec
push
stos
sub
cmpl
scas
xor
addr16
mov
shrb
and
loopne
pop
and
leave
cmp
int3
xor
out
mov
pop
sbb
push
and
in
adc
cli
mov
pop
stos
mov
jmp
adc
add
xchg
aad
or
xchg
and
movsb
add
xor
sub
jp
sbb
mov
inc
mov
pusha
scas
jp
jbe
pusha
mov
cmp
cmp
pop
inc
mov
xchg
adc
scas
shrl
mov
div
lea
xchg
test
inc
int
or
aad
dec
ja
mulb
imul
test
push
inc
in
fiadds
xlat
es
icebp
push
lods
push
mov
jb
js
mov
cmp
loope
inc
xchg
ss
jns
xchg
lods
cltd
adcl
xor
fsubs
stos
pop
loope
xor
enter
and
sti
gs
adc
imul
aam
mov
movsb
push
in
push
lcall
movsb
mov
cmp
mov
sbb
mov
stos
aas
inc
mov
pop
mov
pop
dec
test
das
sub
lock
xchg
sub
and
stos
loope
aam
loop
sbb
add
mov
sub
and
out
and
jl
ljmp
add
lcall
addr16
movsb
je
test
mov
loop
xchg
sti
iret
pop
or
mov
adc
xor
add
in
loop
pop
and
sar
adc
enter
jl
lret
jb
xor
rolb
jbe
aam
and
xchg
ret
cmp
jne
movsl
xor
test
push
pop
pop
sbb
out
inc
jecxz
mov
imul
addr16
in
in
test
push
cltd
ja
mov
aas
cmp
push
sub
pop
addl
ljmp
inc
push
mov
in
cmc
xchg
inc
aam
mov
mov
xchg
sub
arpl
sahf
sub
add
in
sbb
or
xor
mov
mov
dec
pop
mov
and
je
fsubs
adc
fsubl
sub
sbb
clc
andb
pusha
leave
loop
imul
sub
mov
push
into
test
pop
lret
ds
dec
insl
incl
call
mov
xlat
ss
mov
jl
fistps
mov
imul
iret
ret
lock
ficoml
dec
adc
int3
jo
lods
ljmp
add
pop
xor
add
mov
mov
ds
test
xlat
xlat
in
pusha
cmp
jo
and
call
pop
mov
add
or
std
in
pop
mov
lods
inc
stos
scas
arpl
pushf
mov
aam
and
shr
pop
push
jmp
adc
test
sbb
push
fdivrl
pop
andl
jbe
sub
inc
cltd
loope
mov
dec
and
pop
xor
call
inc
mov
in
or
popa
loopne
dec
int
inc
imul
xor
ret
and
pop
bound
xlat
aaa
push
mov
xor
cld
iret
cmp
xchg
cli
out
cmp
push
int
mov
cmp
enter
xchg
mov
out
sub
jno
out
adc
jecxz
mov
aaa
fsubr
pushf
ret
push
mov
movb
out
push
pushf
add
mov
out
divl
or
cmp
pop
ss
in
fs
test
cmp
pop
addl
test
aad
in
push
jbe
sub
mov
lret
mov
jl
shrb
cltd
outsb
inc
push
inc
pop
add
mov
push
popa
xor
aas
adc
mov
jecxz
xchg
lahf
fcoms
sbb
xchg
lods
lock
mov
hlt
and
sahf
mov
dec
iret
subb
jnp
jmp
aaa
sbb
sbb
or
bound
adc
fsubl
cmp
inc
cmpsb
popa
decl
mov
fistps
jle
stos
out
imul
jnp
push
xchg
cli
fsubrl
test
push
sbb
inc
lea
add
andl
adc
imul
leave
jbe
sub
lods
adc
arpl
in
push
adc
jecxz
movl
xor
fimull
cmpsl
or
clc
mov
mulb
pop
insb
sub
stos
test
ds
or
andb
cltd
jecxz
sahf
pop
mov
arpl
adc
push
imul
jmp
inc
ret
or
ret
dec
inc
xchg
cltd
imul
call
lcall
jbe
scas
pop
imul
adc
gs
jb
sub
test
lods
adc
fcmovnu
lods
mov
push
jae
stos
outsl
ljmp
fistl
in
test
add
jo
shrl
aaa
dec
daa
sahf
mov
dec
ret
leave
mov
xor
inc
jae
and
testl
shll
push
iret
xorb
mov
shrb
orb
jle
stos
rorb
jmp
jp
repnz
push
inc
in
inc
or
mov
ret
stos
or
dec
xchg
andl
call
roll
out
fdivs
std
xchg
outsb
inc
adc
js
dec
jno
popa
cltd
xchg
fs
inc
or
imul
sbb
cmpsl
pop
xchg
push
xor
lods
xchg
mov
imul
cld
adc
xchg
pop
std
xor
fidivrs
sbb
or
rcr
mov
pop
test
and
aad
sar
out
lret
fmuls
mov
jo
ljmp
jo
xchg
adc
sub
adc
inc
xor
fs
je
cmp
mov
test
or
fistps
in
cltd
mov
push
jns
xchg
daa
mov
xchg
mov
in
outsl
adc
aaa
or
bound
push
fwait
int
mov
test
test
out
cwtl
inc
xorl
movsl
pushf
pop
adc
arpl
jp
stos
mov
mov
test
imul
dec
or
pusha
test
mov
shrl
sbb
orb
mov
cmp
aad
xchg
ja
sete
adc
lods
cmpl
add
stos
addr16
cwtl
je
fmul
cld
sub
lcall
ja
pop
xchg
adc
loopne
pushf
aam
and
lods
scas
jns
push
rcr
sub
fldl2e
push
cmp
push
xchg
ja
in
in
test
mov
outsb
sbb
push
clc
jb
xor
sbb
jmp
call
repz
pushf
push
je
mov
cmovae
popa
mov
or
push
hlt
inc
pop
out
sub
incb
rol
and
and
and
iret
jp
cmp
gs
insl
jns
test
inc
sub
push
add
pop
xchg
and
sbb
repz
scas
push
xchg
fcoml
scas
push
sub
mov
xchg
aaa
sti
sub
add
scas
and
fdivr
mov
cmpl
test
pop
pop
xor
in
test
or
lahf
mov
jns
jecxz
ja
outsl
fs
fcompl
xchg
sarb
pop
call
imul
pop
stos
fiaddl
push
incb
pop
shr
pop
add
imul
je
mov
jge
popl
call
add
jecxz
roll
fnsave
and
cmp
aas
insb
sahf
lock
sbb
sbb
dec
mov
jb
mov
sbb
xchg
cmc
pop
cmpl
loopne
cmc
add
notb
pushf
pop
in
pop
sahf
subl
loopne
in
xchg
fwait
in
sub
stos
jb
repz
popa
dec
fidivl
and
cmpl
arpl
sbb
rclb
aam
cmc
add
inc
add
dec
and
dec
int3
ja
jecxz
mov
xlat
popa
mov
into
fcomi
mov
fwait
xchg
sub
ja
xchg
push
stos
iret
add
cmp
mov
and
rorb
nop
push
jbe
ds
fsubs
xor
push
mov
mov
das
mov
in
lret
lods
sub
pop
push
stos
sar
scas
push
jbe
mov
jle
data16
lret
pop
xchg
dec
cmp
sub
loop
popa
cmp
sbb
lret
xchg
sbb
pop
scas
ret
mov
jmp
je
or
iret
mov
mov
out
fcmove
cli
sub
subb
jne
stos
push
inc
pop
sbb
ss
fs
fnsave
cmpsb
lcall
insb
add
stc
sub
movsb
jb
daa
push
call
clc
aaa
js
dec
pop
add
lock
scas
xchg
or
js
cli
xor
or
mov
push
adc
push
test
and
cmp
mov
aas
outsb
mov
mov
dec
aam
in
sub
in
pop
xor
push
xchg
rolb
pop
push
dec
movsl
pop
mov
fwait
jl
cmp
jae
call
dec
repnz
and
mov
pop
das
aas
imul
push
jne
cli
sbb
mov
pop
add
pop
dec
lahf
or
repz
push
xchg
into
and
cmpsb
sarl
sbb
cmp
or
aam
and
dec
ds
mov
gs
rorb
pop
sbb
ds
imul
nop
jb
daa
icebp
loopne
mov
push
imul
loopne
cmpsl
sub
sbb
rcrb
lret
mov
pop
shr
int3
ja
jae
adc
orb
pop
pop
inc
dec
mov
movsl
jno
cwtl
repz
xchg
rcll
mov
mov
push
stos
fisttpll
jecxz
fldl
sbb
mov
test
push
or
jp
test
pop
js
cmp
cmp
or
in
insl
push
iret
imul
adc
pop
xor
add
stos
in
test
cs
dec
call
inc
lods
in
fsubr
adc
std
pop
xor
jnp
call
or
jl
cmp
mov
jb
push
mov
lret
mov
push
push
aad
push
or
pop
mov
lock
sarb
adc
push
mov
or
hlt
adc
cmpsl
sub
inc
xlat
sti
lcall
sbb
ficompl
mul
test
inc
sti
ja
add
add
mov
iret
test
sub
pushf
xchg
lods
add
mov
inc
cwtl
inc
iretw
aam
test
lcall
push
pop
mov
shlb
and
shll
arpl
fs
loopne
and
call
xor
add
nop
loopne
mov
xchg
or
movsb
mov
arpl
lods
test
repz
insb
fwait
lcall
mov
inc
jnp
add
cmpsb
cld
fs
hlt
lcall
sbb
mov
jl
stos
call
pop
pop
les
mov
lods
int3
sti
sahf
sub
arpl
sahf
cmpsb
icebp
jl
shl
stos
test
adc
popa
test
stos
jbe
idivl
scas
sub
andl
dec
in
cltd
add
sbb
dec
or
xchg
inc
imul
cmp
bndldx
xchg
or
shr
adc
in
jb
fcompl
into
push
in
pop
stos
lock
jmp
push
mov
push
ja
jo
stos
xchg
pop
imul
in
xchg
jl
aam
ja
jo
ds
andb
ja
xchg
adc
inc
cwtl
mov
repz
mov
gs
hlt
popf
or
xchg
mov
fsubrs
add
arpl
subb
jne
fisubrl
test
or
lcall
into
inc
mov
outsb
or
xchg
push
mov
xchg
je
xchg
adc
cltd
xor
loop
cli
inc
pushf
cmc
inc
and
arpl
dec
xchg
call
shrb
jmp
mov
push
or
pop
outsb
cld
sbb
cmp
repnz
rorb
push
add
push
nop
jns
aaa
jb
push
cli
push
xor
adc
gs
xchg
cmp
pusha
cmp
negb
cltd
pop
or
add
loopne
out
add
inc
rolb
push
rorl
jecxz
mov
cmp
mov
adc
mov
jle
adc
movsl
stos
and
aam
fisttpl
imul
fildl
pop
shlb
lods
shlb
sbb
arpl
bound
mov
jns
arpl
popa
cmp
push
std
sbb
pusha
les
xchg
and
mov
subl
inc
outsb
in
cmpl
mov
and
mov
filds
mov
add
inc
cmpsb
aam
addr16
xor
dec
pop
ds
packuswb
ja
xor
jg
mov
loope
in
pop
popa
fisubrs
xor
sahf
scas
cld
mov
mov
lcall
ficompl
movsl
mov
jae
out
je
in
das
ljmp
sbb
outsl
out
cmpsl
or
fmul
test
mov
pusha
mov
mov
push
imul
addb
cwtl
jns
ljmp
fnstenv
pop
aas
lcall
test
mov
in
dec
dec
pop
fistpl
movsb
and
push
test
ficoml
call
fs
mov
adcl
cmp
scas
popa
xchg
rorl
popa
stc
sub
cli
enter
cmpl
cmpsb
fdivl
in
cltd
cmpsb
loope
jbe
addr16
insl
imul
push
dec
outsb
sbb
sub
rcr
mov
jno
test
leave
subl
into
push
imul
ja
aam
push
movsb
frstor
out
xlat
stos
ror
gs
mov
leave
mov
push
or
jecxz
push
aad
xchg
or
push
shl
xchg
xchg
bound
dec
cmpsb
popa
addb
outsl
pop
mov
pushf
pop
shl
lcall
sbb
xor
push
dec
test
into
push
mov
daa
and
fadds
andl
testl
test
pop
inc
je
lods
pushf
addr16
xchg
lcall
in
stc
aam
and
dec
insb
add
mov
push
push
jbe
push
pop
dec
test
cmc
nop
xlat
std
mov
test
test
cld
xor
lock
ds
pop
mov
ret
push
je
push
adc
call
xchg
lods
fdivp
imul
jno
sbb
xor
jecxz
addl
ds
push
fs
insb
push
test
ss
in
jmp
aas
sub
jbe
lcall
push
jle
cmp
test
sub
or
pop
movsl
divl
fwait
cmc
jl
sub
imul
jmp
xchg
pop
adc
and
ds
mov
pop
rclb
xor
xor
mov
adc
popf
aaa
mov
jo
or
mov
add
jge
std
arpl
cmpl
shl
push
setae
jo
inc
adc
mov
sub
and
pushf
in
lods
mov
lds
inc
test
rcll
inc
xor
add
out
lods
in
cmp
inc
scas
nop
or
mov
in
ret
sub
pushl
xor
loop
xlat
xchg
jns
jecxz
test
stos
shlb
cmp
push
arpl
and
xchg
mov
mov
arpl
dec
test
enter
xorb
ret
arpl
cmc
int
xchg
loopne
decl
insb
in
jb
mov
test
mov
imul
repz
sub
stc
pop
inc
sbb
stos
inc
lods
pop
and
gs
adc
rcrb
mov
call
jae
ja
xor
xchg
push
ret
fs
lock
in
out
fstpt
in
stos
jmp
outsb
and
out
test
shlb
int
movl
popa
or
jmp
jno
dec
pushl
add
addr16
test
mov
dec
sub
data16
leave
call
mov
icebp
jmp
sbbl
mov
adc
mov
sub
stc
roll
adc
xchg
clc
jle
outsb
jge
mov
adc
xor
js
mov
enter
test
add
idivb
lret
imul
loope
sub
jae
add
mov
test
stos
inc
fmuls
cld
push
int
jp
lock
lcall
lds
xor
jo
and
aad
push
ja
ljmp
push
je
js
mov
jle
mov
daa
ds
jo
push
test
pop
mov
insl
jl
xor
cmpsb
test
mov
fidivrl
inc
enter
addl
arpl
movsb
sbb
inc
mov
pop
notb
lret
fs
cwtl
pop
pop
inc
dec
mov
ss
aam
inc
add
arpl
fs
fidivl
in
add
mov
dec
rcl
pop
out
pushf
add
inc
pusha
imul
call
or
mov
lcall
jo
push
adc
mov
mov
iret
fs
push
push
int3
add
lret
lahf
mov
imul
jmp
and
xor
ja
enter
lods
cmp
jns
mov
test
inc
mov
push
jg
pop
movsb
pop
xor
mov
cs
out
dec
adc
sub
adc
dec
ds
stos
icebp
mov
sub
out
aam
or
add
pop
cmp
aad
lret
in
ficompl
dec
mov
roll
fisubs
stos
jle
cmc
dec
mov
jae
xchg
cmpsb
inc
sub
stos
adc
inc
lcall
or
lods
xchg
gs
lea
push
dec
push
mov
mov
push
xchg
mov
jecxz
jne
cmp
dec
cli
pop
outsb
xchg
in
dec
stos
cmpsb
fsubrl
mov
mov
or
push
sub
rcll
mov
jae
ss
sbb
cmp
adc
xchg
lret
shll
mov
lock
mov
mov
mov
push
incl
dec
xor
loope
xchg
adc
jae
pop
shrl
mov
or
fs
flds
jae
adc
insl
into
repnz
and
push
test
fidivrs
data16
sbb
loopne
fldt
aam
push
scas
cltd
enter
mov
imul
arpl
outsb
adcb
cmp
add
push
out
jb
xchg
jl
je
xorb
xlat
incl
pop
mov
imul
sbb
lods
pusha
mov
push
data16
aam
dec
out
mov
outsl
daa
gs
rorl
cmpsb
movsl
cltd
push
clc
and
es
mov
cld
lods
mov
inc
or
push
jmp
sub
add
xor
push
sub
xor
mov
xor
mov
xor
out
adc
rorb
mov
ja
xchg
lods
scas
xlat
xchg
mov
mov
lods
movsb
test
aad
cltd
mov
enter
inc
and
subl
pop
cli
or
iret
add
mov
movsb
lcall
stc
jmp
lods
or
and
js
dec
jl
jne
popa
rcrl
push
out
and
test
les
cmp
push
add
das
push
cmp
jge
mov
push
mov
mov
dec
mov
jle
les
jae
sub
mov
mov
insb
pop
aad
loope
jo
clc
add
int
loope
add
pop
in
mov
fbld
push
xor
cmpsb
testl
mov
filds
inc
test
lcall
aas
push
adc
sbb
in
inc
cs
push
cmpsb
inc
outsl
and
xlat
pop
and
sti
addb
jnp
lds
add
adc
std
xchg
das
aas
or
lock
adc
jne
cmp
pop
mov
pop
xor
jno
ret
ficoms
dec
mov
mov
xchg
add
test
adc
fidivrl
jp
lret
sti
and
and
sbb
dec
xor
jbe
push
stc
lret
scas
or
sub
xchg
sub
mov
and
add
and
push
mov
and
mov
jbe
dec
sbb
xchg
fwait
xor
dec
inc
pop
cmpsb
mov
icebp
jl
aam
and
hlt
addr16
ret
inc
xchg
jne
pop
addr16
std
mov
push
push
xchg
mov
xor
sub
sub
outsl
xlat
je
inc
lcall
lods
push
inc
xorb
je
mov
imul
jmp
in
mov
jp
xchg
rclb
xor
adc
std
push
outsl
jae
mov
das
xor
pop
ljmp
adc
dec
mov
sbb
or
push
push
imul
inc
jecxz
pop
fsubrl
shlb
dec
int3
pop
ficompl
roll
iret
je
inc
xchg
push
loop
mov
jbe
popa
mov
rcll
xchg
sbb
js
xchg
out
sub
push
and
jp
and
pop
sbb
pop
mov
cmp
and
pusha
and
push
xor
or
pop
dec
xchg
test
call
xor
or
cmp
lcall
mov
arpl
cmp
out
fucomip
pop
or
push
push
xor
push
lods
std
jmp
cmpsl
xchg
and
xor
push
xchg
dec
rcll
pop
orl
jno
xchg
cltd
call
push
sbb
xlat
dec
rolb
shrl
xchg
shll
leave
inc
leave
jmp
mov
sahf
lret
add
cmp
insb
insl
pop
lods
dec
dec
push
mov
adc
jl
and
inc
jp
sbb
lock
stc
cmp
ret
mov
dec
mov
xchg
adc
push
outsb
mov
xor
push
add
popa
cmp
mov
jmp
cmp
cmp
inc
xchg
push
sub
outsl
jb
repz
jbe
in
outsb
test
xchg
nop
stos
cmpsb
fs
cmovb
cli
test
sbb
hlt
in
jb
popf
sub
filds
arpl
jno
imul
sub
fsubrl
cli
es
dec
shlb
cmpl
adc
sub
div
fisubrl
xor
cmp
call
mov
sbb
cwtl
and
test
pop
mov
push
sub
stos
out
addr16
and
or
data16
xchg
pushf
addr16
sbb
push
mov
test
ret
mov
aam
sbb
dec
mov
dec
repz
int
in
dec
imul
in
mov
bsf
addr16
rcrb
mov
jne
mov
adc
in
add
mov
ret
mov
adcb
inc
aas
pop
sbb
dec
int3
and
clc
jbe
out
and
dec
nop
adc
imul
pop
loopne
mov
mov
fidivrs
clc
cmpb
cmp
xor
mov
shrb
xlat
sbb
pop
adc
test
ja
movsl
fsts
sub
outsl
add
add
fsubs
ret
adc
addr16
cmp
push
stos
cmp
sbb
push
jbe
adc
push
stos
xor
inc
sub
pop
test
jmp
iret
test
xor
jecxz
ja
ja
dec
add
lods
in
pusha
arpl
mov
mov
lea
cmpsb
mulb
outsl
mov
jbe
hlt
cmp
andl
mov
and
jp
stos
mov
sub
cltd
sbb
pop
cmpsl
movsl
cmp
pop
jg
inc
out
and
jge
stos
insb
sahf
pop
adc
xchg
mov
int3
addr16
or
adc
xor
es
outsb
call
adc
mov
ds
sbb
xchg
mov
or
and
das
fiaddl
lods
in
push
fldenv
test
and
dec
mov
jae
ret
cmp
cwtl
inc
mov
fadds
push
cwtl
adc
adc
cmp
rorl
mov
push
dec
push
pop
pop
push
mov
je
jnp
xor
repnz
sub
inc
rol
fs
and
out
aad
or
call
xor
in
in
orl
sub
in
andl
push
je
mov
fisubl
test
inc
lods
jo
or
xchg
cltd
xor
pop
or
lret
pop
loopne
lret
repnz
xchg
adc
sub
aaa
imul
cmp
xor
mov
test
call
and
push
lret
fisttps
push
jnp
test
push
cwtl
inc
add
test
mov
xlat
ljmp
cmpsb
and
cmp
mov
nop
sbb
dec
bound
jmp
sahf
pushf
iret
test
xlat
and
movsl
data16
mov
dec
mov
sub
add
mov
or
out
add
fstl
test
jae
pop
sbb
out
aas
das
sbb
pop
aam
adc
roll
in
mov
mov
fsts
inc
ja
cmpsb
cmp
subb
mov
sub
push
imul
rcrb
jne
and
inc
or
xor
push
shl
adc
pop
pop
mov
or
xchg
cmc
daa
jb
hlt
pushfw
jae
xlat
xor
pusha
adc
dec
ss
lods
pop
aad
sbb
sbb
cmp
or
enter
lods
je
sub
aam
inc
ljmp
xchg
push
test
xchg
dec
push
imul
shl
push
and
lea
jo
stc
jns
fistpll
aad
scas
xchg
mov
pop
lods
rolb
add
loopne
fwait
mov
mov
xorb
repnz
mov
aas
adc
outsl
inc
cwtl
clc
sub
push
jae
pop
lods
add
xor
and
cmp
adcl
push
scas
jl
add
mov
iret
fcmovbe
call
jl
mov
pop
imul
push
adc
imul
jecxz
mov
mov
dec
rcl
ja
add
and
add
mov
fistps
pusha
int
mov
hlt
idiv
dec
stos
cmp
aam
aas
push
dec
imul
sbb
jge
loopne
push
subb
cmp
fwait
dec
fdivrl
push
jge
mov
sbb
outsl
fwait
lret
shlb
test
xor
cld
pop
insl
arpl
js
mov
jmp
ja
dec
outsl
mov
add
pminsw
addl
imul
pop
stos
mov
mov
sbb
pop
sub
imull
adc
or
enter
jns
call
pop
test
outsl
sub
mov
dec
sub
push
pop
pop
fnstcw
sub
fcoms
xchg
xchg
mov
idivl
aas
xchg
mov
test
inc
xor
pop
mov
int
push
add
jmp
push
dec
stos
pop
rolb
add
movsl
sti
and
xlat
std
cmp
lcall
inc
or
jae
sahf
inc
cld
orb
xchg
dec
scas
lcall
test
repz
sbb
push
pusha
dec
ret
arpl
out
xor
mov
int
fldenv
adcb
aas
fwait
cmpsb
jecxz
sbb
or
sub
mov
mov
aam
inc
adc
push
scas
scas
in
push
std
dec
out
rolb
movsl
out
into
sbb
or
outsb
jo
dec
iret
subb
lret
out
in
nop
leave
cmp
xchg
cmp
sub
mov
sub
add
push
clc
xor
xchg
push
arpl
sbb
push
out
int3
push
sbb
and
aas
out
mov
jl
xlat
dec
pop
lods
mov
jg
pusha
xor
fwait
pop
jbe
xorl
sbb
test
and
xchg
and
or
iret
mov
jp
cmpb
lret
xchg
sahf
pop
inc
and
dec
fs
pop
jmp
xorl
cmp
jbe
sub
out
and
daa
sub
xchg
sbb
dec
out
push
jnp
sbb
cmp
faddl
ljmp
lcall
and
lods
aas
push
jae
adc
dec
into
and
out
inc
cmp
inc
xchg
lcall
jge
jne
mov
cli
mov
rolb
inc
mov
adc
enter
xchg
adc
sub
test
cli
or
fstpl
dec
popa
sti
adc
and
imul
test
and
pop
cmpsb
stos
out
inc
movsb
xor
int
lods
in
mov
add
push
cmc
and
push
dec
and
pop
or
lods
cmp
push
mov
rorb
dec
mov
insl
sub
imul
adc
add
adc
aad
mov
mov
push
lods
jmp
mov
adc
sbb
cli
repnz
fsubl
cli
aaa
cmp
jp
test
xor
xchg
inc
pop
sbb
push
orl
imul
xor
out
add
pushf
mov
aam
in
mov
or
cmpsb
fiaddl
mov
mov
mull
jnp
jecxz,pt
pop
std
aam
pop
stos
pushf
addb
pop
and
and
test
dec
test
stos
mov
lods
aas
sbb
dec
loope
sahf
cmp
pop
jb
inc
cmp
xchg
sbb
sub
mov
and
test
push
imul
popf
cwtl
mov
push
jecxz
leave
sbb
xchg
xchg
test
push
sbb
sbb
pop
jno
shlb
lock
jge
in
jge
and
sbb
mov
pop
jae
sahf
pop
cmp
cld
pop
cwtl
in
push
or
ljmp
jl
jmp
mov
out
inc
mov
inc
test
addr16
test
or
push
cmovns
movsb
jmp
outsb
cmpsb
cmp
pop
popa
aam
lds
cli
cltd
test
outsb
mov
jae
push
mov
push
jne
test
js
xor
mov
outsb
jmp
test
pop
es
push
out
icebp
pusha
lods
clc
fs
jne
xchg
mov
rcl
jmp
out
sub
in
jae
sbb
jns
in
adc
xor
adc
mov
test
iret
pop
bound
movsb
int
je
nop
jecxz
push
xchg
inc
bound
jmp
mov
stos
mov
jg
les
or
dec
push
ret
in
fstpt
push
insl
pop
dec
stos
icebp
push
inc
loope
push
dec
xlat
pushf
or
int
leave
arpl
jnp
shlb
pop
popa
sbb
lcall
mov
movsb
pop
test
adc
cmp
ljmp
inc
pop
cmpsl
imul
dec
pop
adc
add
push
jg
test
in
pop
mov
cmp
add
jmp
adc
mov
mov
mov
lret
lea
outsb
xor
fcmovb
or
popa
add
enter
loop
in
sahf
ds
xchg
push
rcl
push
stos
call
jmp
cmp
adc
cltd
pop
imul
mov
push
imul
ret
xchg
jns
jnp
inc
icebp
fwait
pop
roll
movsb
scas
sub
dec
test
push
stos
sbb
inc
rcrb
mov
cs
mov
push
cmp
mov
push
repz
out
xchg
adc
sbb
add
adc
in
mov
int3
sub
pop
and
dec
imul
mov
arpl
int3
data16
sbbl
in
outsb
xchg
lds
xchg
or
aam
jne
jecxz
subl
rorl
mov
arpl
jns
adc
dec
in
dec
imul
dec
mov
jecxz
jo
sahf
push
jecxz
stos
mov
cmp
scas
push
test
fistps
mov
popa
cld
mov
jae
scas
cmp
int3
mov
hlt
jp
push
sbb
fwait
sbb
lret
popl
push
sarb
lcall
in
lcall
cli
dec
cltd
jp
xchg
jecxz
ja
in
fs
lods
sbb
sbb
adc
jns
jp
sbb
cmp
sbb
sti
mull
lcall
adc
pop
cmp
add
int
add
lods
mov
jge
push
fists
out
test
jmp
sbbb
xchg
pop
sti
ficompl
jae
pop
andl
in
xchg
lgs
push
shll
mov
cmpsb
mov
bound
mov
pusha
rcrb
xor
xchg
inc
loop
cli
push
dec
xchg
outsb
ds
mov
into
lret
pop
push
mov
sub
cmpsb
jne
lahf
bound
inc
addr16
adc
mov
popa
test
xchg
lret
test
lcall
mov
test
in
mov
jmp
cmpsl
jl
sbb
orb
mov
insb
sbb
outsl
sbb
or
movsb
das
das
or
loope
js
mov
or
or
push
lret
lret
addw
loope
setp
fdivrs
adc
adc
mov
adc
push
gs
xor
popl
cmpsb
and
and
neg
cmp
xlat
and
sub
icebp
or
mov
out
rcrb
insb
or
push
lods
adcl
xchg
mov
xor
out
test
fdivp
daa
or
mov
test
popa
mov
aam
pop
popf
stos
adc
xchg
negl
mov
mov
or
lea
int3
adc
ret
cmp
sub
xchg
xor
xchg
jno
popf
clc
mov
pop
test
push
outsb
jo
shll
cmp
in
or
xor
push
jp
adc
in
xor
out
cmpsb
mov
cmp
test
lcall
rcrb
scas
adcl
jmp
inc
sub
mov
add
dec
inc
mov
pop
cmp
in
and
test
mov
or
cwtl
scas
and
or
sbb
cs
fmuls
inc
outsb
enter
sti
es
add
dec
cli
xorb
push
std
fsts
pusha
xchg
cmp
jb
inc
sub
mov
inc
mov
outsb
jle
pop
jne
and
shrl
clc
cmp
xchg
lods
mov
cmp
pop
mov
pop
jl
shrb
ljmp
add
lea
sbb
in
stos
mov
stos
ja
mov
xchg
mov
pop
test
lods
cwtl
adc
insl
cmpb
or
pop
jecxz
js
js
fistpll
lahf
jl
pop
lds
clc
shr
notl
jne
dec
jne
push
pop
xchg
xor
cld
xor
dec
fstps
inc
pop
inc
xchg
in
xchg
aam
loope
jle
pop
insb
xor
and
popa
test
adc
sbb
mov
in
add
add
and
lock
lods
jnp
mov
pop
sbb
test
cmc
xlat
test
adc
push
imul
mov
fcomp
sbb
mov
xchg
repnz
mov
test
cmpsl
adc
js
xchg
and
pop
dec
movsb
cs
addr16
fimull
jmp
push
fucompp
ljmp
add
cmp
jae
cmp
bound
adc
xchg
pop
cmp
push
mov
in
pop
inc
out
jnp
add
add
js
push
bound
dec
aam
shlb
fdivrs
sti
jae
mov
test
dec
dec
jns
in
adc
pop
cmpsl
sbb
rorb
mov
rolb
jnp
rol
ret
adc
xchg
mov
sarl
int
hlt
inc
fisubrl
jae
call
in
and
jp
cmp
fldenv
in
out
jbe
adc
pop
jecxz
sbb
test
inc
stc
cmp
lds
and
outsl
adc
std
cmpsb
cmp
test
arpl
ficoml
jne
fnstcw
fsubrs
adc
jo
push
mov
fimull
imul
xor
inc
stos
sbb
nop
arpl
add
subb
mov
lcall
mov
cmc
subl
in
aad
cmpsl
cmp
sahf
inc
data16
imul
push
ja
mov
push
addr16
imul
push
arpl
stos
rorb
push
out
cmpsb
aaa
sahf
sbb
and
addl
enter
lea
addr16
xchg
into
dec
les
pushf
sahf
push
loop
imul
xchg
xchg
push
cltd
inc
imul
lret
das
and
cltd
pop
sti
cmp
push
int
add
fcoml
mov
mov
inc
pop
xchg
pushf
cmpsb
dec
enter
jmp
in
loop
andb
popa
cmp
cmp
mov
inc
sbb
dec
cmp
jb
lret
enter
or
or
fs
out
xchg
dec
cltd
mov
in
and
inc
setae
sti
and
jb
push
addr16
fs
stos
fcompl
sbb
sbb
jae
pop
sub
push
cmp
push
xorl
pop
int
mov
sbb
test
push
dec
stos
movsb
int3
mov
pop
sbbb
xchg
jbe
dec
mov
sub
adcl
movsl
xchg
or
cltd
and
sbb
mov
pop
sbb
xor
pop
cmp
dec
shr
jecxz
xor
mov
lods
inc
mov
shlb
jb
dec
jbe
add
in
sub
test
aad
xor
lods
xor
or
push
idivl
push
lock
test
cmp
daa
test
cs
mov
jecxz
push
je
dec
test
gs
dec
je
pop
ret
xchg
int
jmp
jl
mov
in
xor
sub
pop
mov
aaa
jno
sarb
push
ret
add
fwait
stc
std
add
fnstcw
sbb
ds
dec
popa
lahf
or
mov
orb
fiaddl
jecxz
mov
ljmp
cmp
pop
jae
cli
scas
and
stos
ljmp
test
in
dec
imul
mov
mov
xor
lret
adc
sub
pop
or
jae
das
jge
in
push
mov
mov
testl
mull
test
inc
sub
sub
sbb
icebp
cltd
and
push
push
mov
add
js
hlt
outsl
push
jecxz
inc
pop
fadds
and
jns
or
inc
pushf
jnp
xchg
mov
jp
and
in
fwait
xchg
cwtl
jmp
sub
sbb
inc
cwtl
sbb
pop
hlt
push
sbb
and
jbe
pop
fsubs
dec
pushf
sub
cltd
mov
popa
test
lcall
mov
ds
movb
insl
cmpsb
push
stos
jo
cmp
in
sti
pop
cmp
mov
hlt
lods
inc
incl
imul
add
stc
jecxz
out
cmp
mov
arpl
mov
xor
and
dec
mov
call
cmp
mov
mov
aas
adc
arpl
std
mov
sbb
sub
addl
pop
out
push
dec
fcoms
or
movsb
push
aam
xor
mov
inc
cmpsb
xor
jbe
sub
je
xchg
cmc
imul
arpl
jae
loope
jae
cli
cmp
lcallw
scas
test
sub
imul
cmp
sahf
jno
cwtl
and
adc
or
mov
iret
jmp
and
jo
cld
xchg
in
sub
cmp
std
mov
xor
lcall
loop
ljmp
aam
cmp
cld
ss
lcall
push
mov
dec
loopne
lret
cmp
jecxz
sub
fiadds
loope
adc
ret
sbb
pop
xor
pushf
mov
push
imul
pop
out
and
pop
inc
test
loopne
xor
outsl
jle
push
mov
dec
out
ret
icebp
inc
push
mov
dec
and
mov
aam
pusha
mov
sub
cmp
aaa
in
test
cmp
push
jo
push
scas
xchg
mov
jl
bound
js
shlb
cmp
lret
jae
jno
pop
fs
mov
insl
sbb
andl
sbb
mov
xor
xchg
dec
sbb
or
imul
adc
call
sub
sbb
cmc
aad
sbb
mov
mov
mov
sub
mov
lods
or
inc
fwait
mov
insb
clc
jl
xchg
icebp
int
fbld
add
sbbb
fimull
jg
cld
int3
dec
adc
push
dec
xchg
aam
inc
mov
test
gs
cmp
loopne
xor
and
enter
mov
inc
cmp
in
cmp
push
aaa
loope
xor
cmp
adc
push
adc
sbb
mov
push
mov
and
test
xlat
es
pop
imul
mov
inc
stos
stos
fwait
fs
mov
pop
loope
daa
jle
lods
sahf
mov
outsb
sub
fistpll
iret
dec
int
and
jns
imul
cmp
stos
fwait
pop
test
pop
leave
mov
gs
dec
xchg
push
cmp
repnz
push
test
popa
or
in
les
lods
pop
or
dec
xor
lds
stos
pop
testl
sub
adc
orb
and
and
jae
fildll
pop
outsb
enter
vmread
inc
cmpsb
or
mov
pop
xor
ja
mov
imul
in
jp
lea
jae
neg
test
jnp
cmc
mov
out
dec
test
inc
and
pavgw
call
bnd
loop
shlb
sub
xchg
fs
clc
sbb
xchg
push
in
mov
mov
int3
mov
sub
and
lods
push
add
mov
fucomp
arpl
ret
sub
lret
stos
sub
jg
sti
mov
stc
jo
xchg
inc
iret
push
icebp
or
xchg
sub
adc
ficomps
addl
arpl
aaa
mov
fistpll
inc
adc
lcall
jmp
dec
xchg
negb
and
sbb
ss
pop
mov
xor
test
or
push
out
addb
jno
in
ret
hlt
addl
daa
dec
addb
sub
jb
cmpsl
repnz
fwait
push
cmpsl
pop
cmp
inc
mov
sbb
adc
and
xchg
mov
js
lods
ljmp
shrl
rol
fmull
js
out
mov
pop
dec
aad
pop
add
pop
add
into
pop
mov
xor
stos
jo
in
fimull
aas
cwtl
cltd
stos
adc
jg
fldcw
sub
les
fistps
or
sahf
dec
cmpsl
lcall
mov
repz
lret
xchg
andl
mov
pusha
fs
ret
sub
fdivl
jmp
lods
add
iret
fbstp
addr16
ficoml
jb
les
shlb
ljmp
pop
test
fmuls
or
xor
sbbl
call
ja
push
xchg
imul
jp
aaa
dec
mov
jl
pop
adc
pop
lcall
jl
movsb
lods
fdivl
ljmp
mov
sub
es
inc
sbb
adc
sbb
push
sub
push
les
rclb
add
in
aam
adc
sub
ror
add
test
push
cwtl
inc
jmp
rcrl
dec
sub
insb
movsb
test
mov
mov
pop
pop
sbb
cmpsl
in
test
cmp
and
mov
or
daa
push
out
test
xchg
sub
jnp
inc
sbb
iret
xor
and
mov
push
les
jge
inc
pushf
mov
pop
add
xchg
ret
rolb
orb
pop
push
cmp
xor
lahf
sbb
and
push
fwait
into
dec
aas
push
or
repnz
popa
mov
int
xchg
pop
bnd
xor
call
xchg
sub
add
ljmp
dec
jbe
sub
and
dec
push
add
test
mov
jmp
inc
and
iret
jno
das
jecxz
lcall
xlat
xor
pop
mov
enter
xchg
or
aas
inc
and
dec
testb
push
pushf
mov
dec
fidivrl
xchg
insb
pop
ljmp
pop
sbb
aaa
out
mov
xchg
test
pop
and
das
imul
fbstp
or
insl
xlat
sbb
adc
call
adc
or
push
dec
pushf
scas
and
orl
push
mov
push
fdivrs
cmc
shrb
dec
mov
pusha
call
fildl
sub
adc
in
shlb
cs
mov
xorb
gs
cld
je
pop
mov
bound
lods
stos
addr16
push
or
je
mov
test
int3
pop
idiv
add
imul
inc
test
sbb
pop
dec
xchg
jns
test
loopne
or
flds
mov
and
pop
inc
sbb
fnstenv
sbb
pop
ss
loope
push
inc
push
out
lret
sub
and
inc
sahf
xchg
adc
aam
out
xor
jecxz
addr16
inc
lret
cmp
test
or
insb
sub
or
mov
adc
and
cld
out
lea
jo
test
out
add
add
or
es
fmuls
imul
pop
push
mov
and
or
shll
or
pop
sub
sahf
aad
push
inc
leave
lods
hlt
push
cmp
mov
sbb
insb
cli
call
out
rcrl
jb
jp
push
mov
dec
rcrb
jg
mov
pop
pcmpgtb
cwtl
movsl
sub
sub
mov
movl
cmp
popf
scas
sbb
xor
mov
jae
inc
clc
sub
push
ljmp
fisubl
int3
pop
addl
mov
dec
imul
xchg
in
jmp
jp
aas
jae
pop
jb
movsl
cmpsl
sbb
push
and
negl
cmpsl
push
xor
jecxz
decl
cs
dec
mov
out
adc
mov
mov
sub
push
sbb
xchg
jnp
dec
or
jp
lock
movsb
sbb
or
pushf
push
pop
mov
push
inc
jbe
inc
pushf
pop
loope
jae
dec
jle
dec
fwait
aas
jae
pop
push
push
sti
sbb
xlat
leave
mov
mov
popa
rclb
in
inc
mov
stos
sbb
int3
cmpb
ja
mov
inc
jge
sbbl
cltd
or
pop
mov
dec
xor
push
jbe
inc
test
gs
pop
iret
out
stos
lea
mov
jb
or
adc
les
subb
stos
in
subl
js
pop
jnp
jl
xor
call
call
cmp
imul
add
jmp
inc
addr16
test
inc
mov
cmp
fisubs
cmp
jne
cmp
imul
in
jb
fisubl
dec
rolb
jmp
mov
cs
cwtl
sub
mov
xorb
sarb
push
cmp
cmp
cmp
xor
add
pushf
movsb
rcrl
mov
xor
and
test
pushf
ds
lods
adc
fdivr
int
sub
je
test
lcall
cli
sbb
cmp
arpl
and
mov
sahf
cmp
sub
and
mov
mov
call
cmp
add
js
xor
repz
loope
not
sbb
jbe
or
sbb
add
inc
adc
adc
loopne
add
test
and
pop
mov
nop
inc
ja
cmp
cmp
mov
loope
sbb
dec
xchg
xchg
xchg
shll
pop
lret
sahf
push
pop
mov
cmpl
sub
pop
jno
jl
hlt
out
push
push
ret
cmp
out
dec
cmpb
andl
and
mov
mov
or
sub
daa
cmp
or
cmp
stos
mov
cwtl
mov
in
xor
push
lods
jae
jnp
push
inc
sbb
mov
lahf
call
jecxz
sti
mov
and
xor
push
and
pushf
lods
or
jae
xor
xchg
iret
pop
add
cmp
pusha
insb
add
adc
fcmovb
mov
test
xor
xchg
mov
xchg
clc
and
out
cmc
int
dec
aam
dec
xchg
mov
in
sarl
add
loope
idivl
xlat
mov
rorb
cld
push
cmpb
and
jno
jae
or
out
jmp
and
in
repnz
and
ljmp
scas
push
out
dec
dec
call
hlt
pop
sbb
add
xor
mov
sub
dec
ret
pop
rcrl
mov
pop
cmp
rorb
jp
sbb
push
imull
fsubs
xor
jno
push
lods
pop
mov
mov
lret
movsb
das
test
push
dec
sub
push
fadds
aaa
jnp
loopne
dec
pop
adc
pop
test
sahf
mov
ds
lods
pushf
pop
xchg
push
sbb
sbb
aam
xlat
cmpsb
jne
and
cmpsb
hlt
xlat
and
pop
cmpl
in
je
aad
das
lahf
mov
ss
xor
dec
pop
sbb
mov
sub
mov
iret
int3
cmc
js
cmp
mov
insl
pop
lods
stos
sub
loope
push
pushf
or
xchg
cmp
jecxz
xor
adcl
lods
and
jp
pop
sbbl
gs
xchg
test
in
stos
mov
mov
sub
popa
call
mov
clc
xor
mov
push
js
je
dec
test
es
rorb
arpl
imul
rolb
lcall
and
subl
sub
adc
orl
test
mov
enter
jmp
xor
mov
inc
fwait
jbe
push
inc
je
scas
sub
mov
bound
test
loop
cmp
cwtl
or
fwait
push
jmp
data16
enter
stos
insl
adc
fwait
mov
cmp
rcrl
call
movsb
mov
jmp
je
or
xor
mov
mov
test
mov
jmp
insb
add
andl
cmp
pushf
and
addl
sbb
ss
add
out
jae
shll
xchg
cmp
xor
nop
or
rclb
lods
subl
test
inc
les
jp
cmp
xor
negb
fimuls
jbe
inc
jae
jnp
nop
bound
sbb
mov
jae
sub
scas
ret
call
jne
sahf
incb
imul
daa
pushf
push
in
add
pop
sbb
outsb
or
in
pop
aas
push
pop
sub
hlt
ret
loope
adc
jg
jns
push
mov
andl
gs
pushf
dec
movsb
jbe
rolb
mov
fidivs
lods
sarb
xchg
inc
movsb
imul
aad
push
arpl
arpl
jno
push
dec
mov
js
sarb
sub
xchg
pushf
test
aam
mov
mov
push
adc
mov
add
les
xchg
fs
xor
adc
aam
mov
aam
push
sarb
and
add
in
ret
lds
movsl
sub
cmpsl
scas
jno
cmc
rorb
lcall
pop
adc
test
xchg
lock
cmp
mov
jge
add
xchg
loope
addr16
je
xchg
pop
sbb
jl
outsb
test
clc
aas
dec
dec
dec
pushf
cmp
pop
fwait
mov
pop
inc
in
push
push
out
shl
sbb
or
ret
sbb
xchg
adc
pop
xchg
jecxz
hlt
or
arpl
inc
insl
cmp
adc
in
add
pop
and
out
pop
sbb
pop
xorb
aam
out
rclb
push
mov
addb
addr16
loopne
mov
test
scas
stos
mov
movsb
mov
jbe
cmp
rcrl
mov
or
cmp
or
jg
enter
xor
add
aad
pop
and
push
test
xchg
mov
jecxz
pop
dec
cltd
mov
pop
inc
adc
mov
mov
and
mov
pop
and
les
sub
iret
movsl
push
stos
xchg
push
jae
test
les
fldt
je
sbb
pop
cmpsb
or
add
jl
push
sbb
lahf
ss
insl
sti
addr16
cltd
pop
add
ljmp
cmp
in
inc
mov
sbb
and
push
adc
sub
dec
xlat
sub
dec
mov
ds
mov
mov
xchg
sub
push
cld
mov
add
mov
xchg
mov
idivl
loop
sbb
xor
aad
push
sbb
inc
addb
inc
js
add
movsb
rcrl
daa
out
dec
addr16
ror
fwait
push
push
pop
int
daa
push
xchg
pusha
shlb
mov
or
loope
cmp
add
inc
add
js
mulb
imul
push
mov
push
stc
add
adc
nop
aaa
pop
jb
xchg
push
test
cmpsl
mov
loop
cmp
xor
leave
notb
push
and
sarb
arpl
cmpsb
sub
mov
out
pushf
test
test
push
pop
xor
mov
bound
pop
rcl
jae
cmpsb
lods
push
popf
inc
in
test
test
fbstp
in
jle
mov
xor
mov
mov
scas
cwtl
pmulhuw
or
ljmp
jl
and
add
dec
inc
iret
pushf
xchg
lcall
div
in
mov
xor
jno
call
mov
add
mov
sbb
loop
dec
and
pop
or
pop
pop
idivb
cmp
dec
fimull
rolb
mov
pop
sub
mov
popa
lcall
jb
and
sti
fdiv
loope
jp
arpl
or
imul
ss
hlt
cs
test
inc
aaa
mov
lods
push
adc
jecxz
or
insl
sti
lcall
ss
or
mov
int3
add
leave
sub
cmp
mov
in
out
dec
test
mov
xchg
iret
sbb
stc
mov
test
iret
dec
rolb
iret
mov
test
out
fnstcw
lods
scas
ds
push
dec
mov
ljmp
jae
and
push
push
pop
test
cmp
loope
sbb
push
mov
loopne
sub
and
aad
xchg
adc
mul
pop
sbb
push
xchg
xchg
or
jbe
test
cltd
lcall
pop
and
sub
test
nop
push
icebp
data16
into
mov
xor
xor
sub
lods
pop
push
or
adc
cltd
sub
cmpsl
adc
jge
mov
mov
mov
pop
roll
pop
aas
je
mov
mov
add
bound
arpl
push
pushf
add
xchg
js
cmc
inc
lcall
aas
std
outsb
rcr
mov
sub
dec
and
jle
pop
pop
lods
test
imul
outsb
daa
das
nop
insl
cmp
in
mov
cli
lea
jl
in
push
je
sub
cmp
sahf
in
sbb
mov
or
in
inc
shr
jbe
ret
push
cwtl
roll
adc
adc
cmp
in
dec
xchg
lea
pop
fadds
jecxz
sbb
or
sbb
popaw
enter
cmp
lods
xor
cli
cli
push
pop
mov
test
mov
insb
outsb
pop
add
inc
jl
jae
js
pop
stos
pop
hlt
test
push
aam
cs
test
inc
xor
sub
lods
mov
movsb
shrb
push
sbb
sub
pop
jo
std
aad
dec
push
and
cs
and
in
or
jae
idivl
cmp
add
jp
in
in
mov
nop
test
nop
fadd
cmp
cmp
stc
xchg
mov
lret
jnp
and
push
jns
add
sbb
ja
sahf
aaa
orb
mov
mov
int
je
inc
imul
loopne
xchg
xor
je
xchg
ret
mov
lock
adc
popa
dec
daa
repz
push
pop
mov
cmp
jno
xchg
imul
lea
mov
lcall
in
mov
scas
in
pop
dec
inc
fstps
fldt
add
pushf
bound
imul
jge
push
dec
cmp
fstpt
pop
sbbl
mov
push
lods
rolb
sub
daa
pusha
cmp
xor
push
xor
jle
sbb
cmp
in
arpl
in
or
inc
nop
scas
outsb
and
lods
add
ljmp
add
inc
dec
sbb
addr16
insl
sbb
iret
mov
and
jecxz
xchg
xadd
xchg
ror
arpl
hlt
inc
mov
inc
push
rolb
fwait
push
push
jecxz
sbb
lods
test
xlat
pop
inc
sub
adc
mov
xchg
add
mov
jmp
push
xchg
sbb
dec
cltd
pop
out
lods
cli
arpl
movsb
lret
add
push
test
and
iret
push
test
icebp
ja
jns
orl
stos
mov
sub
fs
test
stos
cmc
mov
pop
mov
jb
mov
mov
into
insl
or
mov
adcl
pop
ds
mov
and
xchg
and
or
mov
push
sahf
mov
aam
sti
jb
sbb
mov
loopne
movsb
in
in
subl
pop
xor
orl
in
mov
jge
in
pop
out
outsb
sub
and
pop
int
es
jl
push
jbe
fildll
adcb
int
out
pop
inc
filds
cmp
jge
outsb
cmpsb
inc
dec
in
fucomip
push
and
mov
repz
push
mov
pop
fs
cli
jne
sbb
and
push
push
add
aas
inc
das
mov
ret
lret
add
ss
mov
push
loop
fisttps
dec
cmpsl
add
mov
dec
jmp
cli
sub
loopne
and
aaa
and
stos
rorl
imul
lret
pushf
xor
je
cmp
arpl
cmp
xorb
data16
call
mov
sbb
out
adcb
sbb
push
jge
sbb
out
bound
gs
pop
cmp
inc
dec
les
lds
shl
pop
sbb
icebp
adc
je
mov
mov
repz
shll
xchg
mov
and
mov
and
or
pop
out
jo
pminub
mov
mov
outsb
add
fldcw
sbb
jbe
mov
xchg
aas
fs
insl
dec
jno
push
lcall
ja
aam
jl
adc
test
addl
jl
outsb
lods
jae
pop
and
push
mov
jmp
pop
push
and
test
xchg
push
inc
xchg
jle
inc
outsb
mov
jb
mov
and
push
ret
push
call
imulb
dec
popa
pusha
movsb
jae
pop
sub
sbbb
jbe
jmp
or
xchg
in
sahf
add
lcall
addr16
mov
or
lods
jp
test
pop
inc
mov
dec
add
xchg
sub
clc
std
mov
fadds
push
negl
jne
cwtl
sbb
mov
pop
pop
pop
data16
arpl
or
jno
adc
mov
imul
fnsave
sub
sbb
mov
and
pop
jae
clc
mov
push
iret
cmp
sub
push
sbbl
jecxz
outsl
mov
notl
in
cwtl
adc
jae
cmovg
xchg
and
jl
test
or
sub
in
jo
jl
mov
sbb
push
scas
movsb
adc
and
arpl
xchg
mov
int
cli
lods
dec
imul
pushf
inc
pushf
mov
lret
inc
xchg
inc
add
loopne
rcll
xor
pop
out
in
mov
je
push
push
jbe
mov
and
add
push
mov
jns
int
xchg
xlat
jle
jle
adc
push
sbb
cmp
jge
in
movsb
int
dec
pop
adc
and
outsl
jb
mov
lods
sbb
push
in
aaa
jle
adc
pop
jmp
pop
leave
lea
mov
fwait
jecxz
dec
movsb
insb
add
mov
aam
repnz
cmp
jbe
jbe
out
xchg
rorl
mov
sarl
aam
aad
pop
push
aas
in
xchg
add
push
mov
push
repnz
push
test
jge
shrl
aaa
lods
jae
add
dec
dec
aad
xchg
push
push
ja
xor
ja
sub
xor
xchg
jge
lahf
arpl
outsl
sub
mov
das
or
push
inc
xor
inc
imul
xlat
sbb
push
imul
lods
mov
mov
rcll
push
jmp
es
sbb
test
inc
ret
test
or
sbb
mov
push
orb
cltd
adcb
dec
mov
loopne
pop
inc
cmpl
push
rol
and
add
sub
jae
or
and
lds
mov
and
inc
mov
or
outsl
sbb
pop
je
mov
xchg
les
mov
dec
enter
rclb
aas
roll
sbb
bound
sbb
inc
divps
sbb
shr
pop
and
or
adc
cli
aas
pop
fwait
rcrl
cmp
pushf
sbb
cld
stc
pop
cmp
mov
dec
add
fsubs
sbb
lock
sub
shrl
enter
cwtl
imul
sbb
in
js
and
dec
xchg
mov
mov
push
imul
mov
outsb
popf
bound
sub
pop
in
cwtl
int
push
adcb
sbb
and
dec
sub
or
insb
int3
in
pop
stos
adc
lods
pop
mov
jmp
sub
or
movsb
adc
shll
ss
cmp
mov
lcall
mov
outsb
or
stos
repnz
push
call
dec
je
ficoml
stc
pop
push
lsl
js
or
xchg
mov
aas
xchg
aas
add
adc
sbb
setne
aas
push
and
pop
mov
mov
in
and
xor
and
xchg
insl
jbe
add
ja
stos
loopne
test
imul
fwait
imul
xchg
and
mov
add
sub
les
xlat
cli
pop
pop
jne
add
out
pushf
add
insl
movsb
adc
nop
cmp
scas
or
enter
repnz
test
cmp
or
cmp
xchg
mov
mov
add
mov
xlat
sarb
addl
xchg
jle
pushf
movl
sub
out
es
or
test
imul
jae
mov
js
sub
cmp
xor
sahf
xor
push
sbbl
leave
push
arpl
fnstcw
mov
enter
ficoml
sub
aas
andl
cmp
jp
in
mov
mov
pop
std
jne
and
aas
movsl
xor
pop
stos
dec
jae
fisubrl
xor
test
push
subl
stos
jle
cmpsb
xor
cmpsl
ffree
jae
cwtl
mov
in
test
add
jmp
or
mov
mov
xor
push
aad
push
sbb
ret
lods
scas
mov
mov
sbbl
out
test
xchg
cmpsl
inc
sbb
shlb
ljmp
or
cmp
push
jle
pop
jmp
addb
xchg
je
ja
cltd
mov
mov
pushf
lahf
pop
mov
mov
inc
fdivl
inc
inc
cwtd
add
cld
cmpsl
cmp
loope
inc
xchg
shlb
ja
cmpsb
imul
pop
or
cmpsl
mov
sbb
cmp
mov
je
outsb
ja
mov
in
adcl
out
aad
cltd
test
mov
dec
pop
push
jo
xchg
dec
push
repz
mov
jecxz
addr16
andl
popa
pop
cmpsb
sar
pushf
scas
cltd
insb
pop
push
dec
out
les
outsl
fstpt
push
sbb
cmp
xchg
mov
xchg
sti
adc
xlat
or
cmp
cwtl
xlat
sbb
or
xor
iret
or
int3
xor
jno
xorb
mov
out
cmp
mov
xchg
adc
inc
insb
aad
movsb
inc
cmpsl
mov
inc
xchg
cmp
jbe
xchg
notb
test
mov
aam
add
sti
imul
cld
fdivp
gs
and
jae
clc
insb
add
subl
or
addr16
movsb
xor
mov
pop
and
int
es
ja
and
dec
dec
std
adc
sbb
mov
push
mov
loop
lods
or
mov
or
xchg
addl
pop
pop
sbbl
jmp
popa
sbb
iret
add
filds
xchg
shrl
sbb
sbb
push
add
in
push
pop
and
jb
mov
into
mov
jge
sub
or
out
es
xchg
adc
das
push
pusha
mov
mov
stos
sub
lods
js
scas
adc
in
ja
flds
mov
xlat
fiadds
dec
and
dec
fwait
lret
nop
outsb
pop
fadd
shl
push
push
xchg
push
pop
aam
rcll
add
push
xorl
arpl
xor
add
cmp
inc
jle
jl
jae,pt
dec
sub
cmp
jns
cmp
test
mov
jmp
xchg
push
in
jp
or
dec
inc
and
inc
mov
lret
out
pop
lods
inc
in
out
pop
mov
adc
sub
outsb
inc
adcw
subl
inc
xor
fwait
mov
cltd
subl
jnp
jmp
aam
sbb
stos
push
stc
sub
push
movsb
loope
incb
xor
sbb
daa
aas
shl
xor
mov
dec
inc
or
lcall
add
clc
xchg
sub
lods
pop
roll
int
jns
shll
test
ret
int3
cmp
jns
mov
rclb
movsb
cli
subb
ljmp
sub
mov
iret
inc
nop
shl
outsl
or
pusha
scas
xchg
fcmovne
mov
cltd
xchg
stos
leave
out
lret
inc
aam
xchg
push
sarb
outsl
sub
js
mov
adc
sahf
push
imul
inc
inc
lods
scas
xchg
push
jae
inc
mov
mov
cmpsl
cmp
jl
mov
dec
gs
arpl
stc
in
push
pop
lods
outsb
icebp
in
sbb
sbb
or
cmp
or
push
xor
adc
int
popa
out
sub
sbb
mov
cmc
aam
mov
out
rorl
test
fidivrl
cmpsb
test
mov
jecxz
shrl
mul
sbb
pcmpgtw
pop
lcall
jne
jbe
or
cltd
xchg
popf
lret
pop
out
mov
clc
rclb
push
jp
cmp
bound
or
leave
xchg
mov
rclb
sub
arpl
inc
leave
mov
push
loop
fdiv
sub
push
xorl
pop
ja
inc
mov
or
mov
cmpl
jge
pop
subl
orl
int
dec
push
jbe
stos
xchg
pop
test
sub
push
xchg
dec
adc
pop
mov
dec
into
outsb
jne
out
fs
scas
pop
inc
jae
ja
and
xchg
or
xor
test
mov
jno
scas
loopne
sbb
scas
leave
loopne
xchg
sbb
mov
pop
inc
aam
adc
out
pushl
scas
dec
adc
xor
pop
mov
test
jmp
push
loopne
and
dec
cmp
mov
out
sbb
or
cwtl
mov
ficompl
dec
test
pop
je
xor
repz
stc
rcr
mov
test
jl
sbb
andl
pusha
or
dec
xchg
sub
xchg
mov
pop
mov
out
pushf
xor
pop
jno
fs
or
enter
adc
inc
xchg
mov
out
push
loopne
test
scas
repz
push
add
xor
or
das
pop
into
clc
aas
xor
lahf
jae
lret
lcall
cld
mov
dec
and
pop
inc
aad
xor
call
bswap
je
and
fsubs
aam
xchg
push
fwait
cmpsb
cmp
lret
sub
aam
testl
enter
mov
pop
cmp
in
add
mov
mov
sbb
fwait
jb
pop
adc
and
es
pop
xor
test
xor
cld
scas
lcall
xor
add
popa
cmc
aam
movsl
insl
mov
dec
sbb
or
adc
pusha
adc
cltd
adc
mov
jg
mov
sahf
inc
test
jo
aaa
loop
xchg
add
pop
pop
in
insl
mov
xchg
ja
or
xchg
fcompl
test
fdivs
and
pop
fstpt
add
loopne
popa
inc
push
lret
loope
sub
push
lahf
outsl
addb
incb
adc
popa
out
lahf
push
out
imul
or
cmp
jle
stos
pop
jne
pop
mov
inc
xor
push
cmp
mov
inc
cmpl
adc
dec
stos
jb
rol
fs
dec
push
jnp
mull
push
test
adc
aas
mov
dec
sbb
push
adcl
mov
pop
insl
ss
lock
fisubl
mov
das
in
pusha
jne
add
xchg
mov
sbb
sbbl
out
lahf
sar
or
mov
cmp
xchg
aam
jecxz
int
repnz
jnp
push
shlb
jl
lods
bound
mov
in
stos
sahf
push
pop
or
jne
arpl
mov
sub
xorb
jecxz
imul
rcrl
mov
pop
jae
ljmp
loop
negb
jl
adc
lcall
cltd
pop
in
jmp
daa
cmp
jbe
js
stos
inc
xchg
push
push
jle
cmp
jmp
mov
mov
iret
sbb
jecxz
dec
adc
fcmovnb
xor
aad
push
pushf
push
jp
arpl
or
xor
cmpsl
pop
xor
aas
sbb
cwtl
pop
call
cli
test
int
es
cmc
leave
and
aad
add
out
pop
je
dec
sub
ja
sbb
mov
lcall
insb
jp
fbld
test
mov
fstpl
lret
test
dec
adc
lds
repz
addl
ds
pop
sarl
xchg
aad
add
xchg
xchg
or
ret
adc
test
jge
push
mov
xor
sbb
sbb
pushf
mov
movsb
xchg
and
popa
jnp
call
cmpsb
or
cmp
add
and
and
add
je
sbb
out
xchg
sbb
jae
xchg
cld
lods
sbb
iret
mov
faddl
cmpl
into
int3
in
mov
out
add
divb
pop
add
and
jae
fxch
test
stos
repnz
dec
jl
cltd
add
movsl
jns
cmpsl
ja
or
xchg
jb
xchg
aam
cmpsl
in
pusha
inc
lcall
pop
push
fildl
sbb
loope
mov
ljmp
aam
fistpll
mov
mov
das
xchg
out
jae
dec
push
inc
mov
fs
xchg
sub
imul
sbb
mov
add
dec
lret
jp
int3
dec
fbstp
inc
cmpxchg
mov
lret
inc
sub
clc
gs
cld
lret
inc
sub
test
pusha
orl
shrl
sub
clc
cmp
add
or
xchg
or
in
popf
inc
add
pop
stos
adc
call
rorl
pusha
mov
in
sbb
fcomp
mov
sub
mov
jo
inc
cmpsb
pop
push
push
cld
dec
dec
mov
jp
inc
call
inc
inc
pop
dec
cld
fwait
or
ljmp
pop
and
and
fadd
fstl
add
test
hlt
sub
pop
test
loopne
push
shlb
flds
pop
mov
jp
xor
mov
cltd
push
sub
pop
lods
pop
call
lret
mov
les
in
shll
fmuls
push
fcomps
call
sahf
mov
add
mov
jae
cmp
ljmp
sub
js
adc
fdivrl
push
mov
pop
pusha
bound
or
and
pop
xor
sbb
inc
and
adc
out
popf
and
or
mov
xor
cmp
push
pop
jle
or
in
jl
hlt
add
mov
sub
push
in
arpl
add
hlt
sbb
xor
or
arpl
cld
sbb
fists
aam
fsubrl
cwtl
inc
js
fs
js
inc
inc
dec
add
arpl
or
cwtl
mov
enter
add
ficompl
aam
sbb
sub
sbb
dec
mov
fsubs
mov
or
push
pop
rclb
nop
popf
addr16
mov
pushf
in
test
push
enter
sub
and
insb
or
lcall
imul
mov
pop
outsb
lods
in
jmp
push
scas
fwait
mov
movsb
sub
in
in
push
jbe
jno
lret
sbb
mov
pop
or
test
jno
test
xchg
add
inc
sbb
jecxz
bnd
jecxz
push
pop
mov
sbb
mov
push
andl
je
or
dec
mov
iret
stos
inc
rol
cltd
xor
add
rclb
mov
test
xlat
sti
sbb
mov
xchg
push
int3
sbb
or
pop
lret
data16
outsb
inc
pop
inc
mov
jecxz
hlt
aaa
pop
test
mov
in
imul
jp
cs
jns
or
pop
pop
idivl
mov
in
add
test
sbb
push
pop
into
js
jle
jmp
outsb
mov
stos
test
nop
and
out
je
mov
adc
push
mov
push
out
inc
jl
lock
mov
daa
int3
jb
mov
pop
sbb
mov
mov
or
popa
cwtl
ljmp
push
mov
lea
mov
daa
sbb
sbb
adc
je
push
sub
pcmpeqb
lock
adc
jbe
dec
push
sbb
mov
cmp
fxch
mov
out
inc
cmpsb
js
pop
mov
mov
xchg
xlat
adc
daa
sbb
mov
cs
jbe
repnz
xor
leave
fisttps
mov
pop
ficoms
jb
adc
scas
fcomps
and
xlat
mulb
movsl
in
mov
dec
mov
jo
cmp
pop
push
aam
inc
mov
inc
jae
add
xor
outsl
and
outsb
cmp
push
mov
jl
xor
cmpsl
xlat
scas
xchg
jo
dec
adc
dec
sbb
lds
cmp
jbe
in
dec
inc
mov
sub
addl
out
or
or
in
inc
lods
mov
je
mov
int3
and
lods
push
mov
lret
sbb
or
jmp
and
mov
sbb
and
add
arpl
dec
and
popf
lds
in
push
cmpsb
icebp
inc
xchg
les
adc
and
jmp
mov
je
pop
sbb
hlt
xor
arpl
mov
mov
cmpsb
dec
mov
pop
je
pop
lret
lods
nopl
sub
loope
imul
push
fimull
mov
dec
je
xchg
inc
mov
stos
in
jg
js
jns
out
mov
sub
rcl
mov
sahf
mov
mov
lock
lret
arpl
js
adc
jbe
or
and
adc
sub
sbb
pop
dec
shll
test
mov
and
movsb
dec
cli
xor
mov
lock
lods
mov
mov
and
lret
in
gs
test
sub
sbb
data16
jno
and
cmpsb
push
adc
and
lods
jecxz
xor
jp
out
in
cmpsl
push
leave
scas
and
loopne
outsl
iret
insl
xor
or
in
sbb
scas
and
stos
inc
jbe
in
xchg
jo
sbb
push
stos
shlb
sub
push
test
xor
sbb
push
sbb
jno
adc
lods
fdivr
inc
outsb
cwtl
mov
dec
fdivrl
in
movb
stos
aad
dec
popa
movsl
pop
out
jecxz
inc
sbb
sub
xor
sbb
and
loop
cmp
pop
push
mov
rolb
and
pop
pop
add
pushf
out
push
mov
arpl
adc
fcomp
or
jb
mov
cmp
mov
pop
lods
mov
jne
rcrb
mov
ljmp
xchg
xchg
arpl
loope
pop
jmp
push
pop
ljmp
sbbb
popf
in
sbbl
bnd
lcall
push
loopne
mov
fiaddl
or
cmc
int3
cld
adc
pop
push
jb
mov
pop
xchg
enter
mov
xlat
mov
mov
push
fcompl
xchg
cmp
mov
add
mov
mov
inc
fcmove
inc
stos
jne
push
xchg
orl
mov
xchg
addr16
dec
popf
pop
cmp
scas
cmp
mull
inc
xor
or
jp
enter
aas
pop
cs
mov
xchg
ja
mov
arpl
stos
mov
out
jecxz
xchg
push
cmp
cld
push
pop
out
je
ret
ds
clc
sub
push
lret
add
popf
cmp
cmpb
xorl
pop
arpl
mov
sub
adc
push
jl
mov
pushf
stos
shll
xchg
ja
xor
jns
dec
sub
subl
out
sarl
pop
push
sbb
sti
ja
fs
inc
out
fidivrl
adc
loope
lret
and
mov
mov
or
adc
incl
js
add
aad
mov
out
ficompl
sbb
add
icebp
movsb
sbb
dec
push
fsub
cmp
mov
pusha
and
push
popa
or
orl
mov
and
test
inc
fisubl
xchg
fcmovbe
js
es
and
add
push
mov
cs
jnp
or
orb
stos
jb
icebp
test
jno
stc
mov
xlat
mov
mov
aam
insb
mov
and
mov
dec
mov
std
xchg
sbb
cltd
jp
lcall
mov
ljmp
orl
cltd
in
pop
test
jmp
sub
mov
mov
sbb
xchg
in
mov
movsb
add
xor
out
xor
test
pop
addl
aas
jecxz
jle
jmp
pop
jecxz
lock
dec
std
sbb
stos
imul
sub
cmpsl
fsubs
int
gs
pop
loop
sub
dec
or
cmp
mov
and
adc
xchg
in
add
mov
scas
mov
loope
mov
jbe
xchg
sub
enter
fwait
jae
push
mov
pushl
cmpsl
mov
sub
pop
adcl
test
push
ret
cmp
add
and
push
mov
call
inc
call
imul
push
outsl
out
dec
rcrl
lods
mov
stos
sbb
lods
cmp
addb
jecxz
pop
jl
or
sbb
insb
data16
lods
fistps
shrb
pop
cld
add
loope
xchg
hlt
arpl
stos
repnz
or
xor
add
lret
jae
lcall
pop
fdivrs
aam
dec
cmp
jno
or
jmp
pop
mov
mov
add
jmp
aad
adc
ficoms
aam
pop
mov
loope
sbb
sbb
pop
inc
inc
shlb
xor
push
jbe
mov
xchg
push
aas
jnp
mov
repnz
xchg
jae
nop
rorb
adc
scas
outsl
pop
rcrb
dec
xchg
mov
jmp
aam
cli
mov
mov
cmpb
clc
insb
add
push
test
mov
and
in
js
or
mov
jbe
lods
jno
adc
xchg
cmp
or
sbb
shll
or
out
fists
frstor
sub
and
sub
mov
or
lcall
xchg
jmp
mov
sub
sbb
xorl
cmp
xchg
inc
jne
push
aam
addr16
hlt
call
mov
test
push
push
cs
cltd
aam
cwtl
push
lods
aas
push
add
in
jnp
pop
test
int3
and
out
mov
lret
lds
mov
sbb
jb
movsl
rorl
inc
inc
or
cltd
mov
rolb
push
push
flds
jmp
pop
js
mov
cmp
push
mov
ret
subb
es
inc
in
stos
sub
out
mov
test
dec
mov
pop
sub
outsl
push
cmpsb
das
inc
push
push
jl
out
sub
inc
repnz
adc
xor
in
sbb
pop
xor
inc
xchg
enter
jp
aam
adc
sub
lock
mov
loop
out
dec
or
nop
inc
mov
push
mov
cmp
push
ret
jl
push
call
sbbl
sub
ficoml
cmc
pop
repz
cwtl
dec
loope
or
enter
jmp
call
out
nop
cmp
cmpsl
pop
fadd
adc
arpl
pop
inc
sahf
imul
cltd
mov
ss
adc
imul
std
mov
and
jb
cmc
fmull
xchg
lcall
fdivl
mov
xchg
lret
mov
mov
add
lret
push
or
jae
sbb
mov
xor
je
mov
lret
insl
xor
pop
sbb
sbb
inc
xchg
in
pop
xchg
outsb
rorb
or
push
adc
pop
js
icebp
call
mov
adc
stc
out
jecxz
imul
sti
out
dec
xchg
scas
adc
fs
lods
mov
pop
xchg
call
add
rorb
xorl
mov
leave
loope
inc
pop
iret
cmp
negb
jbe
cs
add
adc
jb
lret
fwait
cmp
test
fdivs
jnp
ds
lods
dec
adc
and
pusha
out
or
in
loope
out
or
adc
adcl
in
fldenv
sbb
daa
push
outsb
lods
and
ja
repnz
cwtl
xchg
or
pop
cmpsb
or
imul
push
test
push
dec
mov
imul
lcall
arpl
inc
repz
jle
in
add
mov
shl
ret
mov
jbe
std
fldt
movl
bswap
inc
div
sbb
inc
mov
lods
fstpt
pop
shll
in
pop
xor
adc
inc
repnz
fimull
mov
adcb
push
pusha
cmp
aad
jns
ret
or
pop
or
loope
inc
sub
out
adc
ficompl
sbb
ja
adc
int
xchg
imul
iret
mov
mov
mov
lret
cs
test
mov
push
inc
pop
rclb
addr16
push
cmpsl
movsb
dec
imul
push
rorl
pop
movsb
mov
iret
lcall
mov
cmpsl
jae
adc
cltd
ja
xchg
scas
adc
hlt
scas
movsb
fstps
andl
mull
pop
stos
stos
inc
and
jne
push
mov
dec
call
test
subl
push
ret
fadds
add
movsb
or
test
xor
jns
jne
pushf
enter
jmp
push
sti
scas
lds
fbld
rcll
pop
mov
jns
sbb
int
or
jge
jecxz
ja
lods
or
jno
imul
add
icebp
dec
in
shr
stos
orb
push
or
sbb
dec
sbb
outsb
arpl
push
jp
inc
pop
dec
lods
mov
pop
pop
sbb
out
in
fdiv
out
outsb
movsb
aad
rcll
ret
scas
ficompl
mov
push
test
jns
cltd
imul
popl
aam
lcall
push
out
cmpsb
xchg
ret
test
xchg
cmp
sbb
add
cltd
loope
aaa
mov
jo
jae
subl
sbb
loopne
jo
call
jmp
mov
inc
mov
hlt
int3
lock
scas
and
int3
xchg
inc
mov
or
add
mov
int
sub
sbb
xor
ret
test
arpl
lret
xor
fsub
adc
xchg
or
fdivrs
pop
aas
xchg
ja
mov
cmp
loopne
dec
cmp
adc
aad
push
icebp
cmpsl
in
cmp
repz
jmp
jb
or
sbb
test
scas
es
sbb
addr16
out
mov
popf
fimull
jle
shll
dec
sbb
mov
fdivl
push
cmpl
sub
outsl
ja
pop
in
call
test
inc
adc
mov
xchg
fs
scas
dec
clc
imul
mov
pop
adc
cmp
pusha
movl
mov
adc
xorl
or
lods
adc
adc
roll
aam
cmp
rolb
add
push
pop
mov
jecxz
cld
cmp
add
mov
popa
xor
ja
jae
aas
jo
adc
ror
stc
leave
loope
push
dec
and
mov
into
stos
mov
movsl
mov
lods
in
xor
test
and
pop
sbb
jmp
inc
in
sbb
cmp
jecxz
ret
cli
pop
inc
or
lret
imul
inc
jp
adc
mov
mov
xor
xor
push
scas
sub
jb
or
sub
cs
mov
fiaddl
out
adc
push
call
adc
ror
jo
xor
cmp
popf
inc
adc
add
lds
and
push
out
jg
shlb
push
cmpb
test
push
push
aad
sub
xchg
out
mov
lock
in
lods
int3
scas
call
repnz
addr16
xchg
imul
adc
iret
jb
jecxz
inc
cmp
repz
pop
int3
mov
lods
and
jo
lret
je
lods
out
jne
out
mov
push
rcrl
and
jg
dec
inc
xorl
add
mov
pop
sbb
pop
or
push
les
pushf
loop
lcall
pop
icebp
add
rcll
mov
ret
pop
out
xor
or
daa
sub
lcall
loopne
aad
lds
jmp
stos
adc
jo
inc
pop
loop
add
dec
out
fisubrl
and
or
ror
lock
cmpsl
xorb
shr
and
xchg
fisubl
mov
inc
aad
jp
sbb
and
sub
lar
or
lods
fwait
data16
mov
jmp
push
stos
jbe
jne
ljmp
aaa
dec
xor
lcall
pop
lods
jae
sbb
mov
cmc
push
jnp
outsl
and
sub
jp
mov
movsb
dec
cltd
xor
nop
sbb
pop
into
test
idivl
mov
or
add
fcoml
and
xchg
jmp
pop
sbb
push
xor
in
test
push
or
lret
pop
cmpsl
pop
ss
test
add
adc
in
mov
lcall
sahf
out
test
push
mov
pop
les
movsb
sbb
test
adc
fcom
inc
push
or
push
test
fstpl
lahf
icebp
inc
inc
fstps
int
sti
jg
ficoms
cltd
mov
dec
add
aam
cmp
movl
and
stos
dec
rcrl
ljmp
rorl
subb
mov
sbb
cmp
lds
xchg
add
mov
flds
out
les
xchg
or
mov
cld
cmpsl
lahf
popf
mov
and
lods
adc
iret
cs
lods
arpl
outsb
push
out
push
add
xor
xchg
cmc
add
test
add
and
aas
push
jecxz
sbb
cmpsb
fsubrs
push
in
push
lahf
repnz
sbb
aas
adc
xlat
lret
or
pop
nop
scas
xchg
aam
and
test
fldcw
xchg
ret
insl
stos
test
push
sub
jae
xchg
sarb
sbb
mov
out
add
sbb
test
jb
adc
xchg
adc
add
sbb
aas
sti
fucomp
and
lds
iret
sti
and
inc
and
mov
jl
jns
enter
mov
inc
dec
call
sbb
or
xchg
lret
inc
sbb
out
push
ret
adc
fldt
enter
xor
cltd
dec
xor
ja
and
jb
mov
inc
adc
sbb
pop
mulb
imul
scas
pop
xor
xor
cmpsb
mov
jmp
es
adc
jl
jae
cmp
enter
dec
or
ds
aas
cmp
add
movsb
es
push
sub
jl
push
loope
pop
outsb
stos
jmp
scas
das
ret
lds
push
in
stos
inc
cli
push
mov
pop
das
add
push
aad
movsb
shll
jmp
and
jecxz
push
and
std
inc
sbb
lock
enter
iret
inc
inc
dec
out
jo
mov
cmp
icebp
mov
adc
pop
clc
pop
mov
and
mov
subl
sbb
adc
daa
lea
cmp
sahf
push
inc
cs
stos
or
xlat
int
fdivrl
jecxz
dec
jne
pop
je
lods
and
cmpsb
loop
mov
adc
leave
daa
sbb
lret
push
add
sti
out
jg
mov
lahf
mov
data16
scas
add
inc
or
cmp
in
or
or
xchg
test
outsb
add
mov
push
lcall
push
test
add
push
push
inc
sub
mov
test
adc
std
push
mov
adc
xchg
jge
dec
jecxz
fldt
pusha
shl
xchg
arpl
and
xorl
push
popa
pop
hlt
adc
fstps
mov
dec
mov
stos
sbb
pop
lods
lahf
jcxz
push
in
adc
push
outsb
ss
and
jns
inc
pop
lret
nop
pop
cltd
push
xchg
mov
popa
lds
pusha
outsb
xchg
xor
sub
shlb
pop
mov
cmp
test
ficoml
lods
pop
cmp
in
je
add
inc
cmp
enter
jmp
push
inc
push
mov
inc
subl
ds
sub
jns
les
jne
mov
and
mov
mov
out
push
mov
sbb
rcll
cwtd
push
bound
imul
lock
dec
ret
test
neg
sub
out
insb
insb
jo
mov
test
push
enter
sub
or
adc
insb
cmpsl
add
push
in
fcomip
lcall
sub
dec
xchg
adc
addr16
fimull
fistps
inc
les
test
mov
xor
mov
sarb
test
xchg
mov
leave
orl
ss
dec
outsb
inc
test
sbb
inc
push
and
fwait
xor
test
mov
mov
pushf
arpl
mov
pop
cmpsb
movsl
in
ret
jae
test
rcl
sub
popf
aaa
push
push
fisttpll
or
les
popa
inc
notb
mov
xchg
mov
sbb
add
in
test
daa
sub
aas
loopne
sub
imul
lods
sarl
xchg
mov
int3
rcl
and
mov
nop
aas
out
sub
inc
mov
mov
adc
add
or
mov
or
not
scas
inc
in
aaa
mov
sub
inc
push
inc
fcmovbe
movq
push
jp
mov
insb
jne
mov
add
fs
out
into
cmp
adc
push
shrb
shll
pop
jp
and
sbb
sbbl
cmp
test
sbb
ret
mov
ja
mov
add
insb
add
fmulp
cmp
pop
push
jmp
test
daa
add
mov
mov
lea
pop
jl
sub
arpl
push
call
divb
cld
inc
orl
in
xchg
pop
jmp
jmp
cmp
sub
clc
xorl
mov
test
xchg
or
inc
out
popf
and
pop
push
mov
adc
push
mov
xor
shrb
pop
or
push
or
add
sub
mov
arpl
out
std
call
mov
add
mov
cmpl
and
pop
or
xor
mov
push
mov
pop
mov
fwait
or
jbe
jmp
je
out
inc
push
test
repz
pop
pop
xchg
cmp
or
addr16
xchg
cmp
jmp
pop
xor
sub
pop
or
idivl
ret
cmpsb
imul
int3
das
test
cmpsb
negl
adc
inc
adc
arpl
or
mov
add
lods
out
inc
imul
data16
sub
popf
inc
aas
orl
mov
cld
clc
testl
cwtl
sub
cmp
inc
pop
loope
dec
js
lahf
pop
push
dec
rcl
mov
xchg
pop
push
sub
es
push
out
or
mov
pop
out
push
or
arpl
sti
pop
icebp
mov
sub
in
data16
xchg
int
push
dec
mov
jl
stos
pop
cmp
push
test
outsb
pop
pop
loop
pop
cmpsl
push
shlb
or
mov
sub
and
aam
pop
mov
lock
shlb
daa
xlat
stc
mov
add
test
mov
push
mov
and
ljmp
cltd
jecxz
test
jmp
sub
sub
ds
int3
roll
adc
enter
xor
mov
mov
mov
pop
int
loope
lea
inc
jmp
cs
and
mov
add
mov
sub
movsl
xlat
pop
lret
sub
add
adc
jbe
mov
mov
mov
cld
fcomp
add
into
gs
xchg
cmp
mov
xchg
pushf
outsb
or
inc
in
roll
andb
mov
push
push
sarb
in
sti
push
sbb
cmp
scas
repz
mov
gs
cmpl
xchg
popa
test
lret
nop
shr
aaa
push
test
fst
mov
inc
inc
repz
pop
test
andb
je
push
sbb
ds
xchg
or
pop
pop
mov
jmp
repz
cmp
imul
clc
jg
add
push
adc
lcall
cmpsb
or
or
arpl
push
mov
adc
fnstcw
jb
push
fs
std
cld
mul
je
cld
add
data16
jmp
outsb
pop
call
sbb
dec
cmp
add
jl
sbbl
icebp
test
mov
xchg
fsubp
adc
jae
or
add
fstl
push
adc
xchg
lcall
int3
outsb
jne
call
cmp
daa
xor
add
repz
cltd
stc
fcoml
xchg
jns
mov
inc
fistl
outsl
jecxz
notb
xlat
ficomps
xchg
jle
andb
or
fs
add
dec
shl
lcall
popa
out
mov
scas
aam
arpl
lret
lods
jae
hlt
mov
out
jbe
testb
repz
insl
ljmp
lret
es
test
sub
sbb
aad
and
cwtl
mov
inc
out
fistl
xchg
mov
and
insb
mov
out
pop
mov
out
out
fiaddl
je
push
dec
add
xchg
add
pop
mov
es
bound
ficomps
or
pop
arpl
dec
pop
out
cmp
jns
pusha
outsb
adc
mov
sub
mov
mov
out
js
dec
test
pop
adc
cmp
enter
or
pop
xor
xchg
in
xor
popf
lods
pop
cmpsl
xchg
cld
dec
sub
pop
inc
iret
fsubrs
push
lret
movsl
lahf
insb
pop
stos
out
pusha
inc
dec
dec
sub
mov
pop
lret
mov
mov
or
sub
es
pop
cmp
ljmp
test
inc
jb
pusha
ljmp
fsubrl
inc
sbb
sub
push
in
dec
pop
and
mov
fdiv
lret
adc
test
dec
jns
dec
cld
add
cmp
gs
mov
int
push
dec
sbb
mov
sub
les
mov
scas
int3
xlat
add
xor
addr16
inc
movsb
in
call
mov
aam
pop
xorb
rcl
addr16
subb
loopne
out
fs
pop
inc
sub
sbb
jo
dec
sbb
or
inc
sbb
push
in
shl
push
loopne
ror
adc
and
pop
fsubl
and
outsl
mov
cmp
sub
push
jo
push
rcrl
test
adc
movsb
inc
in
cmp
jecxz
cmp
cwtl
xor
in
dec
je
push
sub
or
jle
mov
fs
lret
dec
fldenv
mov
in
sub
lods
jle
mov
fmuls
js
sbb
inc
sub
mov
inc
xchg
data16
call
inc
add
mov
sub
pop
xchg
fldenv
cmp
hlt
sbb
lock
inc
pusha
call
int3
pop
cld
or
enter
fcompl
cmp
mov
xor
rolb
adcl
inc
fwait
test
scas
xchg
in
mov
lods
xor
lcall
mov
data16
sbb
adc
push
call
push
pop
xchg
push
sbb
cmp
mov
xor
icebp
cmp
mov
outsb
mov
jne
out
popa
and
test
push
arpl
push
push
lods
pusha
sbb
mov
aaa
loope
push
sarl
sub
cmp
inc
aad
fmul
jb
stos
outsb
add
push
je
mov
sbb
push
push
mov
mov
push
test
out
rclb
fs
fisubrl
subl
fimuls
fnsave
xchg
jno
mov
fsts
stc
jmp
inc
repz
cmc
inc
mov
clc
in
sbb
add
icebp
sbb
cmp
rorb
out
jb
fstps
push
jns
iret
xchg
push
pop
jns
or
xchg
xchg
inc
ja
push
push
imul
pcmpeqw
mov
jb
test
in
pop
sahf
out
jbe
push
addl
dec
push
cmp
jb
les
rcl
push
push
popf
dec
call
iret
xchg
xchg
popa
add
bound
pop
aas
push
in
and
es
adc
push
insl
cs
sub
pop
jg
push
jl
jo
repz
add
push
aad
lret
into
out
jns
inc
sbb
jp
xlat
fwait
out
cmp
jg
dec
or
or
mov
test
push
in
push
push
mov
sub
push
ljmp
add
cmp
nop
mov
xchg
cs
adc
out
ljmp
add
push
das
sbb
test
mov
xchg
sbb
inc
sub
push
xorl
daa
fisttpll
pop
popl
cmpsb
cs
pop
pop
inc
lcall
je
ss
test
hlt
in
imul
mov
cmpsl
push
cmp
cld
jmp
test
cmp
mov
lcall
cmp
stc
insl
adc
dec
fs
push
and
jnp
and
cmp
lcall
aad
xchg
outsl
pop
or
mov
mov
mov
mov
jb
fs
pop
adc
push
jbe
and
mov
lods
jbe
jae
and
loopne
shrb
lcall
rcrl
cmpsb
inc
adc
movsb
push
xor
adc
and
call
pop
push
addr16
je
push
and
inc
ss
rcrb
les
and
adc
lret
cmpsb
mov
jg
sub
dec
jbe
arpl
xchg
rcr
imul
mov
mov
xchg
das
dec
test
mov
std
mov
and
hlt
jae
fisubrs
in
cmpsl
inc
fs
sti
jecxz
jmp
jg
add
xchg
xchg
mov
sbb
cwtl
insl
je
push
mov
push
mull
call
in
mov
dec
mov
add
in
add
sbb
pop
roll
cmp
out
sub
adcb
ljmp
pop
pushf
aaa
xor
or
xchg
fcmovu
leave
fs
ja
orl
sub
sub
add
shlb
mov
jno
mov
jo
lds
mov
or
xchg
sub
jae
add
push
jb
test
movsl
inc
lods
pop
adcl
xor
xchg
leave
scas
sub
jnp
inc
xchg
popa
addr16
scas
jae
inc
cmp
arpl
ja
rcr
mov
xchg
jmp
lock
in
gs
inc
and
mov
and
ljmp
sbb
lret
jmp
adc
mov
sbb
sub
jmp
push
xchg
mov
or
arpl
loope
jb
daa
mov
je
xchg
mov
lret
leave
cld
fadds
jno
movsb
int3
orl
and
cmp
add
jo
and
shl
xchg
xor
fcoms
jmp
inc
add
and
daa
lods
bound
jb
jp
jns
cwtl
push
cmp
jo
push
cmpl
add
push
xor
stos
loope
sub
xor
pusha
mov
xchg
push
pop
adc
mov
xlat
cmpsb
pop
cmp
dec
add
push
push
stos
jecxz
ret
lcall
rcrl
push
int3
aam
stos
mov
and
rcr
lcall
pop
nop
push
mov
and
fsubs
push
rolb
sbb
jmp
fwait
push
sub
imul
or
subb
arpl
cmp
aas
cld
adc
inc
ja
test
loop
pop
or
dec
jne
insb
call
or
xchg
add
int3
aaa
cmpb
lret
or
lcall
pop
pop
mov
or
ror
jo
mov
ret
jg
cmp
aad
cmp
ss
cmc
cld
jecxz
push
aam
repnz
xlat
push
sahf
sub
dec
cmc
mov
pusha
lds
jg
pusha
sbb
and
add
xor
in
sarb
insb
jne
rorb
pushf
int3
faddp
repz
aam
or
inc
mov
cmp
mov
mov
add
jo
or
loopne
loope
cld
add
iret
xchg
fs
cmpl
dec
imul
rcrl
in
jecxz
xchg
sbb
clc
out
inc
repz
int
imul
inc
dec
aas
mov
cltd
scas
fucomp
add
sbb
sbb
xchg
inc
shll
mov
jnp
xlat
xchg
push
jne
out
js
call
adc
sbb
sub
cli
add
mov
lahf
ret
test
pop
and
pop
or
out
or
or
pop
inc
push
and
pop
jne
aam
lcall
push
gs
fwait
add
jl
push
out
inc
dec
je
inc
cmc
imull
cmc
inc
leave
jle
out
add
sbb
movsb
cmp
and
cmp
pop
bound
in
aam
jb
fcmovnbe
fisubrs
stos
cwtl
popf
sbb
fimuls
in
rol
test
adc
xchg
mov
xchg
inc
sub
dec
or
pop
movaps
mov
je
je
out
lahf
arpl
cmpl
and
add
mov
pop
xlat
push
ret
sub
pop
mov
xchg
je
outsl
inc
sub
pop
xchg
dec
and
test
xchg
into
loope
testb
es
je
sub
sbb
push
inc
aas
movsb
push
pop
sub
xor
pop
arpl
popa
fldt
sbb
mov
bound
jge
jle
mov
jo
mov
dec
shll
push
or
lock
mov
ljmp
enter
dec
pop
adc
adc
in
cmpl
cmp
adc
add
pop
push
outsb
xchg
mov
inc
popf
mov
push
sub
shrb
dec
aaa
gs
call
scas
out
lcall
jne
fstpl
xchg
test
mov
es
add
and
adc
orl
jg
adc
push
icebp
sub
mov
bound
enter
aas
xchg
mov
fidivs
cmp
sub
cltd
sbb
push
mov
addr16
imul
push
inc
outsb
adcl
lret
inc
call
lcall
aam
sbb
test
test
outsb
pop
cmp
mov
lds
inc
sbb
aad
sub
sahf
fwait
jne
aad
ret
sub
push
jns
or
popf
rorb
popa
push
jo
pop
sbb
adc
jbe
push
flds
insl
movsb
dec
push
popf
jl
lret
ljmp
add
cmp
push
aam
idivb
ja
sbb
sbbl
aaa
jne
xchg
ljmp
call
fisttpl
mov
loopne
and
or
sti
cltd
adc
xchg
push
cmp
test
int3
movsb
cmpsl
inc
pop
test
mov
mov
add
sbb
jbe
iret
push
inc
mov
fisubrs
loope
out
mov
mov
ror
fwait
popf
mov
outsb
stos
mov
outsb
call
outsl
mov
out
test
push
addr16
test
je
loopne
push
mov
mov
int
daa
idivl
mov
ljmp
outsb
sub
ret
mov
mov
imul
test
xchg
push
addr16
inc
out
pop
fmuls
aam
xor
andl
iret
lds
dec
fwait
pushf
out
xchg
out
insb
fistps
fs
popa
cltd
in
sbb
call
pop
add
dec
jbe
test
int3
ljmp
leave
invd
xor
fidivl
popa
mov
fldenv
pusha
lea
mov
xchg
mov
xchg
and
cmc
arpl
rcrb
outsl
sbb
daa
mov
push
xchg
or
test
xchg
arpl
jmp
inc
jecxz
test
cmp
push
mov
adc
fisubrl
push
test
adc
cmpb
mov
jmp
xchg
adc
leave
adc
jns
jo
jnp
aam
cmpsl
jl
sbb
mov
shl
jp
mov
andl
dec
push
ja
pop
xor
push
xor
inc
add
adc
push
shr
pop
lock
sbb
xor
xlat
aam
add
bound
add
xchg
sbb
mov
dec
roll
popa
sbb
imul
cmp
or
xor
add
jae
les
fiaddl
pop
mov
aaa
aaa
push
cmp
ds
or
into
js
sub
push
cmp
or
pushf
ja
lods
mov
sbb
lods
push
out
outsb
movsb
mov
rolb
push
sub
pusha
mov
ret
jne
mov
test
pushf
ficompl
mov
jmp
loopne
xchg
jns
push
cmp
mov
aam
inc
pop
add
cmpsl
sbb
testb
clc
sbbb
je
jne
pusha
test
test
push
and
sub
popf
dec
pushf
xchg
es
rcrb
fbld
mov
pop
test
inc
jae
call
out
mov
ljmp
sti
add
stos
inc
je
ljmp
in
addb
dec
cmpsb
push
push
sti
in
sbb
ljmp
cmp
fucomip
cld
aas
cltd
aas
push
repz
stos
mov
enter
in
test
adc
insb
lods
andb
je
imul
sbb
fldcw
inc
fwait
outsb
mov
cmpl
clc
jecxz
js
push
jae
mov
outsb
stos
dec
lea
dec
mov
sbb
push
repnz
or
mov
enter
dec
enter
jbe
in
push
and
popf
fistpl
out
and
sub
hlt
scas
pop
enter
popa
call
push
rcrb
std
dec
jmp
stos
pop
loop
mov
or
fs
push
sub
push
pop
test
mov
rolb
xor
sub
or
xlat
into
mov
add
adc
push
in
push
jb
js
sbb
fnstenv
out
pushf
push
gs
ljmp
dec
call
mov
fwait
inc
es
je
dec
movsl
inc
xchg
pusha
push
adc
sbb
roll
pusha
shlb
imul
fwait
aaa
and
mov
jmp
ficoml
push
mov
sbb
add
xor
lcall
mov
adc
pop
jnp
pop
pop
xorb
lods
sub
int3
dec
add
loop
cwtl
jmp
test
mov
es
cmp
fldcw
dec
add
js
ss
test
lods
push
mov
fwait
test
jae
xchg
das
mov
jl
scas
jecxz,pn
pop
popf
sbb
push
sbb
xor
test
int
push
jecxz
mov
cmp
out
add
jl
rolb
mov
adc
sub
movsb
xor
xchg
jbe
daa
call
and
jns
xchg
sub
or
mov
inc
push
xlat
iret
sub
insb
dec
jge
je
test
leave
mov
xlat
std
jl
xor
mov
jecxz
lods
xlat
xor
jo
scas
fistl
dec
pushf
jge
mov
test
or
rclb
ds
js
push
push
popf
inc
and
push
mov
in
faddp
in
push
jno
sbb
or
mov
in
mov
test
movsl
ret
inc
push
std
fs
xchg
inc
xor
test
popa
dec
mov
dec
pop
dec
jnp
fs
pop
cwtl
jb
out
bound
push
adc
and
add
push
sub
sub
xor
loop
in
loopne
adc
mov
xlat
jnp
dec
out
hlt
inc
jo
in
pop
pop
cmp
push
aam
lret
outsl
call
jp
push
mov
push
cmp
mov
in
subl
pop
push
push
inc
push
xor
int
push
and
call
inc
and
fs
pop
dec
inc
dec
lret
xabort
lahf
stc
push
daa
insb
movsb
pushf
sub
mov
insb
adc
aaa
jae
and
test
mov
dec
sub
lock
test
call
aam
call
pop
movsl
inc
pop
pusha
adc
and
cmpsl
fs
ret
and
inc
in
loopne
lret
and
cld
sub
rolb
aaa
adc
or
or
lahf
loope
xor
adc
push
push
loopne
je
adc
call
or
xor
insb
sbb
mov
dec
repz
insb
and
dec
dec
mov
sub
sbb
mov
mov
mov
shrl
cmp
loopne
mov
in
add
movsb
mov
dec
movsb
out
fstpt
arpl
aam
and
cltd
aad
push
call
int3
loopne
sub
lret
lret
inc
push
pop
lret
and
mov
sub
sub
insb
fdivs
pop
call
aam
cmp
or
aam
enter
cld
call
enter
es
pop
jo
mov
mov
cwtl
xchg
int3
push
cli
into
ljmp
inc
dec
sub
push
test
icebp
bound
jbe
sahf
xchg
inc
les
inc
fisubl
addl
add
xchg
in
push
je
outsl
push
mov
loopne,pn
or
inc
xlat
cli
push
mov
stc
and
dec
inc
push
push
test
mov
out
and
pop
lods
jl
movsl
outsb
stos
fldenv
jne
and
stos
ljmp
lods
cmp
adc
xchg
or
test
sahf
dec
jne
mov
inc
pop
addl
mov
push
xchg
loope
call
andb
pop
mov
into
dec
and
inc
lods
pushf
imul
lds
jnp
loopne
dec
orl
das
pop
in
mov
data16
aam
mov
lods
adc
jo
jle
cmp
jp
scas
stos
dec
mov
xchg
dec
fs
cmpsb
push
cmp
xor
sub
adc
stc
divb
inc
call
mov
insb
lahf
add
loop
aaa
inc
sbbl
movsb
dec
push
jmp
mov
inc
push
mov
dec
jp
fwait
jb
fildll
lret
or
adc
stos
pop
sbbl
fildl
aas
push
sbb
dec
scas
xlat
sbb
enter
cmpsl
sbb
test
mull
testl
std
pop
xor
sub
lods
lcall
xor
test
pop
and
pop
add
add
adc
and
andl
ja
mov
jle
xlat
test
add
jo
test
rorl
insb
ror
or
andl
stos
push
mov
mov
mov
cmp
pop
xor
out
jno
scas
sbb
ret
inc
dec
xor
cmc
xchg
jne
je
repz
aam
xchg
xchg
mov
dec
jnp
fwait
imul
cld
pop
jb
cmpsl
pop
data16
std
in
popa
and
movsb
dec
das
loop
or
or
data16
in
sbb
mov
cmc
mov
adc
sub
mov
loopne
test
int3
scas
pop
cmc
enter
pop
lea
jecxz
in
outsl
iret
xchg
mov
mov
int3
cmp
inc
je
push
into
insb
stos
ljmp
dec
iret
dec
out
pop
fdivs
push
push
mov
std
inc
addl
ljmp
outsl
push
aaa
mov
ja
in
dec
fs
xchg
pusha
adcl
je
cwtl
sbb
aas
out
dec
int3
jp
dec
ja
insb
fnstenv
int3
jg
repz
mov
xorl
bound
or
loopne
outsl
test
data16
mov
clc
pushf
mov
lock
xor
add
push
movsb
aam
cmp
fwait
xor
dec
mov
xchg
inc
movsb
mov
je
insb
mov
les
test
aas
push
sub
test
mov
xor
xchg
ljmp
jb
sbb
dec
sbb
lods
cwtl
push
sub
je
imul
pop
xorl
cmpsl
jbe
sbb
iret
aam
pop
in
jnp
add
outsl
xorl
push
in
pop
imul
and
jle
sbb
addr16
jecxz
repnz
leave
mov
push
or
or
fdivl
sub
pop
push
mov
pop
and
pop
push
test
or
sbb
mov
js
out
call
sti
pop
jae
test
lea
cmp
and
xchg
mov
adc
fwait
add
in
pusha
dec
fwait
and
stos
inc
sbb
and
out
mov
sbb
push
cmp
mov
fdiv
popa
inc
adcl
push
pop
movsb
and
jo
ret
sbb
xchg
imul
addr16
xor
xor
je
mov
daa
nop
push
sub
dec
int3
mov
pop
jns
shl
cmc
out
jge
add
inc
test
mov
xor
sbb
ja
adc
push
mov
cmpsl
cmc
adcl
sub
push
lods
dec
inc
lea
add
or
add
negb
outsb
inc
fildl
mov
mov
ret
push
lcall
pop
rcll
cmc
push
xorb
or
int
mov
lahf
pop
adc
outsb
xchg
andl
fbstp
or
ret
fldcw
clc
jae
lret
lea
push
xchg
pop
dec
sub
jbe
push
ja
pushf
mov
jnp
lcall
or
dec
stos
xchg
adc
int3
sbb
mov
aam
outsb
rcrb
sbb
sub
mov
stos
sub
jg
ljmp
and
pop
addl
dec
pop
push
lahf
shl
jg
call
mov
jecxz
popa
fcomip
arpl
mov
push
mov
in
shlb
or
jae
cs
dec
testb
rcl
sbb
adc
fwait
outsb
jne
sbb
subl
js
pop
inc
test
lea
or
push
add
jb
cmc
cmpsb
and
sub
mov
inc
add
dec
sbb
and
loope
out
mov
popa
or
adcl
mov
call
lret
mov
imul
jl
mov
sbb
inc
cmpsl
mov
adc
jecxz
pop
scas
cwtl
pushf
test
call
xchg
inc
lods
out
addr16
push
in
sahf
fnstsw
fwait
call
jle
cmp
dec
sub
lods
fisubl
loope
xchg
xchg
cmc
ja
int3
push
xchg
ror
push
sub
lds
call
hlt
dec
dec
cmp
fstps
or
sub
loope
xchg
adc
jle
jbe
lods
pop
cmp
rcll
jno
aad
out
pushf
mov
and
xor
shl
dec
sbb
aaa
dec
add
sbb
xchg
fldl
cmp
pop
mov
push
je
shll
jecxz
pop
cmc
cmpsb
pop
push
dec
jnp
add
repz
mov
mov
in
jp
ljmp
movsb
not
mov
cmp
outsb
andl
and
inc
jecxz
adc
arpl
jp
xor
sub
push
scas
sub
mov
scas
fildll
xor
mov
sahf
gs
cmpsl
push
and
int
stc
jp
add
arpl
stos
inc
add
mov
dec
pushf
xor
rcrl
dec
iret
stos
or
xchg
out
cltd
dec
xchg
or
ja
lcall
sbb
loop
int3
leave
jg
repz
fsts
jecxz
xor
cmpsl
jbe
mov
xor
shl
push
lods
sub
js
mov
pop
add
dec
mov
in
mov
mov
pop
pushf
add
jbe
sub
cmp
call
movsb
xchg
and
sub
adc
add
loope
loope
dec
popa
mov
mov
ficoml
mov
ja
sub
add
in
or
popa
js
sub
mov
lahf
sub
inc
les
mov
and
shlb
mov
inc
add
andb
mov
jmp
test
xchg
inc
daa
pusha
pop
les
add
push
arpl
sbb
xor
andl
jecxz
mov
pop
in
adc
pop
lods
sbb
test
xlat
fsubp
jbe
xchg
push
or
push
in
in
cmc
jnp
shlb
xor
js
jbe
or
fisubl
add
push
clc
lock
leave
je
stos
sub
mov
mov
or
inc
jp
scas
push
in
aad
lahf
push
bound
in
lds
inc
push
dec
jge
jl
mov
test
and
push
pop
hlt
adc
fldenv
popa
popf
test
cmc
mov
inc
shrl
cmp
or
add
pop
sbb
mov
enter
clc
jb
sbb
cltd
std
inc
xor
sbb
pushf
fstl
fstpt
enter
pop
pop
nop
test
inc
lock
adc
inc
push
push
adc
pop
rcrl
or
push
mov
dec
sti
jae
add
jnp
xor
lret
fwait
addb
dec
in
push
xchg
sbb
push
int
ficompl
mov
sbb
jae
push
cmpl
xchg
jge
cmpsl
push
mov
or
inc
pop
cld
mov
popf
filds
gs
jnp
sbb
into
ret
push
arpl
pop
outsl
jecxz
mov
fstpl
jbe
jmp
mov
sbb
dec
or
inc
sahf
inc
movsl
sbb
fbstp
int
ljmp
cmpsb
aad
mov
adc
pop
pop
orb
lods
test
cld
push
lods
je
movsl
stos
lods
jbe
sti
mov
dec
int
addr16
ss
mov
add
dec
stos
jae
insb
sbb
inc
jne
lods
insl
je
sub
fucomip
xor
outsb
mov
je
clc
jmp
aam
mov
cmp
aam
test
aas
jb
leave
xchg
lcall
jmp
loop
dec
lea
mov
stos
clc
dec
subb
add
mov
add
stos
jg
outsb
jle
ds
arpl
pop
pop
addr16
gs
mov
xchg
push
add
imulb
test
outsl
pop
sub
jnp
dec
mov
xchg
les
add
push
pop
cli
leave
jecxz
lds
pop
popf
mov
jnp
lods
inc
adc
jae
rcrb
in
aad
jae
lods
jmp
add
ret
scas
push
and
das
nop
cmp
dec
push
pop
lods
sbb
xor
lea
push
test
test
arpl
push
dec
add
sub
test
mov
movsl
jle
xchg
cli
xor
call
ja
pop
dec
lcall
movsb
xchg
mov
imul
arpl
push
insl
popa
xor
imul
mov
sbb
sbb
adc
data16
orl
mov
inc
mov
pop
adc
add
cmc
mov
jge
mov
fdivl
jo
adc
xor
jae
cmp
sbb
les
jae
sbb
push
pop
test
fnstenv
rcrb
bswap
ret
add
inc
xor
jnp
jno
jmp
daa
adc
ret
mov
mov
dec
adc
arpl
inc
shlb
lds
in
lods
test
push
andb
stos
leave
stos
jg
out
cltd
pop
mov
inc
mov
aaa
jne
push
jae
cmp
xchg
dec
pop
xchg
sub
and
fdivrl
arpl
test
ret
dec
sub
stos
xor
test
popf
sbb
shll
loop
mov
mov
fnstcw
or
cmpsl
cmp
test
jne
sub
cmp
repnz
or
xchg
sahf
nop
mov
xchg
jle
int3
std
push
xor
adc
sub
cmp
test
ret
inc
pop
lock
addr16
insl
push
mov
mov
test
in
nop
jp
mov
outsb
out
cs
add
lods
lcall
and
in
push
cmpl
inc
in
mov
sbb
mov
punpcklwd
hlt
movsb
mov
std
push
imul
cwtl
popa
xchg
adc
jb
mov
jp
or
sbb
dec
ret
inc
loope
jnp
inc
push
shlb
fisttpl
and
jp
jbe
mov
inc
les
outsl
aad
dec
push
notl
xor
inc
or
jmp
into
outsl
in
mov
int3
adc
cmp
xchg
fisubl
shr
stos
out
mov
sbb
inc
out
mov
or
xor
rorb
sub
test
mov
xchg
fbstp
popa
or
bound
into
cltd
mull
test
andl
cmpsl
test
nop
ret
add
cmp
loop
push
out
jmp
sahf
sbb
sub
jmp
mov
jno
cltd
mov
test
pop
andl
mov
jecxz
and
stos
sahf
pop
popf
dec
outsl
cmpsb
fwait
jge
ds
jae
ficompl
inc
scas
xchg
jmp
in
cltd
push
call
mov
mov
jl
mov
ja
jmp
mov
mov
lods
stc
pop
mov
push
shl
push
pop
sub
inc
jno
mov
imul
dec
rcrb
outsb
popa
sbb
in
fdivr
orl
inc
push
jle
or
int
inc
fidivrl
pop
aas
xlat
pop
cwtl
lret
sub
xchg
out
jg
add
jp
jbe
out
pop
sub
mov
rcrl
sbb
mov
lods
aaa
pop
orb
lds
and
mov
jno
adc
dec
lret
pop
pop
jae
repnz
mov
pusha
jo
pop
cmpl
adc
in
sub
push
decl
lods
sti
outsl
mov
mov
dec
pushf
add
pop
push
in
or
fdiv
mov
pop
lahf
pop
or
or
pop
xchg
jl
sub
xchg
xchg
inc
inc
push
mov
cld
or
mov
addr16
inc
sub
mov
cmp
sub
int
dec
push
add
sbb
jp
insb
jmp
mov
jno
mov
in
mov
or
movsl
insb
ss
outsl
add
enter
shlb
inc
xchg
jecxz
outsb
pop
sub
jecxz
cmovns
outsb
nop
jecxz
lret
iret
repnz
adc
lcall
sub
pop
iret
cmpsl
inc
adc
fs
jbe
push
lcall
and
in
jge
sub
mov
adc
mov
test
push
pop
stos
xchg
push
enter
int3
in
cmpsb
dec
cwtl
and
scas
mov
pop
sub
or
push
push
push
jno
push
inc
in
test
outsl
sbb
adc
pushf
sub
cmc
ss
arpl
fcomps
test
xchg
outsb
push
sub
in
mov
loope
addr16
dec
xor
les
pop
mov
stos
push
lret
fisubl
push
insb
jbe
ja
push
xor
dec
pusha
pop
jp
subb
ljmp
adc
les
scas
xchg
jbe
in
sahf
inc
xlat
adc
ret
rorb
push
icebp
pop
dec
mov
lret
aam
mov
dec
jmp
insb
push
test
mov
and
out
add
dec
cwtl
mov
mov
xchg
pop
sub
push
call
cmpsl
dec
sbb
ljmp
subl
cmp
mov
stos
xor
jne
jne
sub
mov
lret
pop
dec
repz
sbb
fistpl
andb
out
iret
filds
shr
pop
test
fwait
jo
jno
sbb
dec
cld
daa
enter
jbe
sbb
mov
stos
outsb
imul
js
pop
int
or
mov
xorl
mov
push
aas
out
les
cwtl
mov
mov
xor
arpl
jecxz
movsb
fadds
andl
idivb
bound
sub
mov
and
cmpsb
or
xorl
xlat
sbb
add
mov
pop
sub
orb
inc
cmp
fmulp
adc
jl
or
inc
pop
inc
movsl
outsl
into
cmpl
sbb
shl
mov
pop
arpl
inc
sub
mov
pusha
xchg
add
imul
aas
pushf
adc
mov
mov
call
xor
mov
push
xlat
fmull
in
mov
fsubrl
mov
xor
and
repz
jp
or
pop
insb
add
cmc
loop
js
cmp
dec
jmp
pusha
call
jmp
test
push
cld
add
push
push
js
mov
xor
cli
addr16
test
mov
sub
out
mov
sbb
and
pop
pop
test
cmpsb
and
xor
jne
push
aad
shrl
loopne
mov
xchg
pop
scas
test
scas
loop
cmp
in
rcrb
in
add
xor
movsb
mov
imulb
add
lock
and
adc
cmp
insb
push
mov
cld
aam
pop
stc
repz
sub
adcl
cmp
addl
stos
repnz
dec
jecxz
inc
xor
dec
cmp
ret
and
inc
mov
inc
pusha
pop
out
jb
or
and
and
mov
xchg
aas
lahf
js
movsb
jecxz
loope
jle
mov
ret
aas
xchg
inc
out
stos
or
xchg
shlb
ds
cmp
push
ja
test
lret
shrl
push
rclb
in
sti
jmp
add
pop
pop
and
and
inc
xor
or
jmp
pop
inc
dec
xchg
sbb
iret
cli
cli
push
mov
jg
dec
ja
xor
mov
cltd
test
add
testl
sti
inc
aad
in
fs
cmp
hlt
loopne
mov
sub
sbb
sub
mov
hlt
push
stos
mov
ret
pop
sbb
adc
ret
pop
add
fcmovnu
inc
adc
hlt
aas
aas
push
sbb
imul
shlb
jne
or
mov
inc
cmp
mov
sbb
mov
xor
mov
lods
orb
pop
and
ret
add
loopne
mov
mov
xchg
xor
aam
test
mov
mov
cmpsb
in
stc
stos
mov
lret
sub
jmp
xchg
mov
outsb
add
xor
lahf
popa
or
pop
mov
pop
mov
push
mov
pop
inc
popa
push
sub
add
ja
mov
inc
dec
adcl
add
and
xchg
js
inc
test
test
aam
scas
adc
scas
sti
push
jecxz
pop
xor
enterw
pop
sub
xorb
shlb
add
loope
lcall
std
fcom
filds
lds
fwait
popa
xor
dec
jp
lret
push
jnp
pop
sbb
aam
fs
addr16
and
sbb
outsl
pop
pop
lret
push
mov
fmuls
inc
pusha
test
call
fdivl
add
sarb
test
pop
lcall
out
push
out
popa
mov
in
add
push
adc
mov
xor
loope
jbe
add
mov
inc
movsb
mov
cmc
sub
sbb
and
jnp
xor
aam
add
pop
adc
inc
push
stos
mov
ljmp
cli
fwait
pop
sub
adcb
mov
jle
fwait
inc
jae
jg
adc
jg
rcrb
or
sbbl
aaa
inc
cli
in
jl
mov
add
jl
cli
lret
xor
repz
pop
or
lods
sbb
pusha
daa
scas
jl
add
stc
push
shl
out
sub
sub
negl
push
test
sub
mov
add
push
fbstp
gs
jbe
sbb
lcall
sbb
int3
add
ret
jno
inc
sub
mov
pop
test
icebp
iret
addb
push
insb
push
push
jnp
add
daa
loopne
mov
movsl
scas
jmp
ljmp
insb
mov
ja
cmpsb
mov
pop
jl
adc
pop
out
sbb
mov
xchg
outsl
sbb
subb
mov
andb
jp
gs
pop
out
je
call
xchg
add
outsl
sub
stc
test
push
out
pslld
call
lock
pop
rclb
jns
adc
sti
sbb
mov
int3
ljmp
adc
mov
cmp
daa
mov
je
or
les
push
pop
je
shll
mov
movlps
fdiv
jp
cli
jns
adc
out
jne
xor
cmp
int
and
or
jecxz
or
addr16
mov
add
push
xchg
adc
clc
jae
add
fisttps
add
add
pop
int
and
loope
jg
test
cmp
add
sub
jg
inc
insb
push
outsb
in
mov
shll
inc
or
sbbl
fadds
loopne
out
shrb
inc
enter
orl
push
sub
inc
push
ds
inc
lods
mov
fcmove
cwtl
sbb
ret
mov
cltd
mov
and
stos
sbbl
lock
enter
mov
jecxz
jecxz
aam
inc
mov
jno
je
ljmp
cmp
out
iret
lods
dec
add
addl
jle
jns
test
int
es
cmp
insl
incb
mov
cmp
std
sbb
cld
scas
cmp
cld
cmp
aas
cmp
lret
arpl
call
idivl
iret
xor
push
dec
std
fidivl
push
mov
xchg
in
jp
jbe
fucomp
jl
mov
fcmovb
clc
xchg
je
dec
cmp
daa
sbb
inc
mov
fs
test
jbe
ljmp
and
mov
sbb
add
push
xchg
lods
scas
push
outsl
cmp
pop
or
insl
jno
xchg
inc
lods
fcoms
push
inc
test
inc
lods
inc
enter
insl
xchg
fdivrl
dec
xchg
cmp
push
dec
mov
rorb
jns
ljmp
jbe
je
imull
ja
call
loopne
inc
in
xchg
cld
cmpsl
enter
js
aad
pcmpgtd
adc
xor
sbb
imul
pop
shlb
lret
test
dec
bound
jp
inc
mov
jb
cltd
xorl
lods
xchg
cmpsl
scas
cld
xlat
inc
imul
out
sbbl
lods
test
jp
mov
cmc
mov
dec
imul
jbe
cmp
jae
repnz
xor
jae
cmp
gs
sub
je
outsb
jl
cmpsb
mov
jl
jg
sbb
cmp
dec
mov
sub
lret
scas
mov
pop
inc
cmp
jmp
jl
sahf
adc
push
das
in
cltd
outsb
mov
insb
arpl
jb
cld
jecxz
ds
pop
aaa
fmul
ret
outsb
aaa
mov
push
icebp
sub
dec
int
adc
popa
lcall
inc
leave
sbb
xorl
mov
arpl
lods
adc
lcall
sub
cmp
pushf
movsb
jo
add
push
je
xor
sub
leave
jno
mov
pop
push
add
mov
call
jb
or
xchg
cmpsb
orl
inc
mov
out
outsl
mov
pop
inc
addr16
ljmp
bound
xchg
or
push
xchg
fwait
adc
lock
sbb
fisubl
mov
test
sub
je
cltd
add
in
mov
jae
mov
add
xchg
or
popa
push
call
jo
sahf
adc
xor
pop
mull
test
push
or
pop
push
jecxz
cld
sbb
fdivr
lods
jae
push
sub
ds
add
xchg
inc
cmpsb
ret
mov
aas
pop
cmp
mulb
cmp
dec
lcall
jl
xchg
repz
push
cs
mov
in
iret
push
fcomps
jnp
pop
or
mov
pop
add
mov
and
inc
loope
nop
jmp
xor
adc
or
dec
ficompl
sahf
sub
shlb
cmpsl
inc
lods
cwtl
addl
and
popa
mov
test
stc
fwait
jne
or
xchg
cmp
ss
dec
mov
mov
adc
sbb
pusha
sub
jnp
aam
sbb
xchg
xor
push
adc
andl
lea
daa
arpl
arpl
push
mov
jno
andb
sbb
xorl
add
nop
imul
repz
sub
inc
shrl
in
adc
jl
das
in
mov
shlb
ja
mov
sub
roll
mov
and
add
pop
cmp
sub
test
sub
aas
sub
mov
scas
xchg
or
dec
pop
adc
add
and
jb
inc
mov
shr
mov
bound
js
stc
jbe
in
sub
xor
push
stos
int3
aaa
outsl
es
setge
lock
push
sbb
pop
addr16
mov
jle
xchg
les
jge
xor
sarb
push
shrd
shlb
jnp
ss
enter
cmpl
adc
inc
dec
fadds
mov
addr16
or
mov
xor
push
cmp
jecxz
xchg
icebp
cmp
test
movsl
in
dec
into
pop
loope
inc
arpl
mov
jmp
inc
outsb
add
ja
sbb
clc
jae
fisubrs
or
test
jecxz
adc
fsts
mov
clc
ret
jbe
pop
jne
dec
mov
and
jg
mov
add
mov
test
movsl
test
enter
mov
inc
push
arpl
in
js
mov
call
popa
das
subl
sbb
push
arpl
sbb
test
push
sbb
jle
push
mov
or
cmp
gs
fsubs
pop
ljmp
push
jb
or
in
loope
sidtl
ss
push
pop
or
sbb
nop
scas
fs
sbb
mov
mov
lock
bound
test
in
mov
lcall
sti
sub
mov
jecxz
adc
jmp
dec
mov
push
inc
shll
jae
leave
stos
xor
and
icebp
call
push
push
andl
pushf
inc
sub
stos
jne
cld
sahf
cld
arpl
sbb
cmp
xorl
inc
ret
jge
xlat
stos
mov
lcall
in
jecxz
pop
addr16
xor
fmull
and
jmp
stos
pop
mov
stos
inc
popa
testl
mov
mov
rol
icebp
sbb
inc
jle
xor
popa
jae
lcall
sbb
leave
imul
jnp
fmull
pop
repz
mov
push
fs
loope
inc
pop
mov
jo
lds
divb
testl
jl
adc
shll
movsb
sbbl
fmull
repnz
adc
jne
scas
je
in
or
push
inc
inc
out
sub
in
mov
in
cmp
xchg
xor
stos
push
addl
or
cli
in
add
push
or
sub
xchg
jmp
lods
stos
inc
add
imul
push
fidivl
cmp
xchg
addr16
mov
adc
pop
test
adc
icebp
jp
jl
bound
pop
push
stos
stos
add
fnstsw
imul
mov
mov
cmpb
cwtl
sbb
push
stos
push
or
and
cmp
cmpsb
out
cmc
push
or
jno
mov
jo
loope
sbb
nop
shlb
add
out
jno
sub
scas
cmc
lods
es
dec
inc
and
fcoms
or
xchg
cmp
jmp
mov
xlat
lds
lret
mov
pop
cmc
push
xchg
lock
xor
sub
das
xor
jmp
stos
bound
lcall
test
jno
rep
test
jbe
sbb
jmp
test
push
aas
dec
pop
xchg
imull
sbbl
ret
xchg
cmc
jb
inc
test
inc
lods
xchg
pop
push
icebp
test
pop
pop
loopne
pop
movsb
ja
cmp
aaa
jecxz
adc
sub
imul
out
shrb
xchg
adc
dec
in
cmc
psubq
bound
xchg
fdivrl
test
dec
pop
les
dec
jmp
sahf
icebp
outsl
es
mov
std
rcrb
pop
xor
movsb
in
xchg
cmp
xor
sbb
lods
and
fwait
push
mov
jl
jae
push
stc
in
stos
mov
aas
loop
mov
mov
xchg
push
fmuls
inc
call
movsl
xor
push
lods
inc
mov
cli
inc
inc
in
inc
stos
jns
test
push
cli
sbb
pop
sub
cmp
loopne
jp
xchg
and
addr16
push
jnp
jae
fsubs
cltd
fdivr
fs
add
push
jg
fst
jle
mov
lea
jo
mov
xor
push
and
popa
and
nop
jp
sub
fistpll
insb
aad
jg
ret
mov
xchg
mov
mov
mov
rcr
jnp
push
push
pop
xchg
repnz
or
outsl
xchg
push
insb
insl
stos
adc
sbbl
jmp
inc
shrl
aam
pop
loop
lods
gs
stos
xchg
bound
cmp
movsl
push
lahf
add
insb
pop
pop
dec
dec
pop
test
inc
loope
bndldx
dec
add
jne
icebp
pusha
jne,pt
push
les
or
xor
mov
lret
ljmp
add
test
into
push
pop
icebp
sub
out
add
sbb
sbb
push
popl
push
push
inc
cmc
lahf
adc
mov
and
inc
cmp
faddl
enter
loopne
and
aaa
mov
scas
sub
scas
test
mov
xchg
mov
ficompl
adc
ret
ret
ljmp
or
bsr
sub
jp
pushf
sahf
int
add
or
jg
sub
stos
jb
or
and
sbb
mov
inc
push
push
sbb
add
fisubs
mov
enter
stc
mov
inc
int3
sahf
js
sbb
xchg
les
pop
lds
dec
push
inc
pop
loope
mov
cltd
push
pop
inc
jns
test
popa
bound
cld
stos
push
dec
xor
adc
mov
inc
insb
ficompl
outsl
dec
fisubrl
cmp
sahf
icebp
outsl
pushw
pop
adc
adc
mov
imul
xchg
mov
dec
push
stos
xor
ficoms
mov
test
mov
pop
mov
insl
pop
fimuls
and
testl
mov
lcall
insl
aam
add
adc
mov
aam
sarl
fwait
pop
fwait
mov
mov
cmp
xchg
or
sbb
sbb
jecxz
cmp
mov
sub
xor
in
ja
aad
popf
dec
dec
dec
fmul
xchg
mov
xchg
sub
nop
pop
push
or
arpl
push
xlat
aam
or
ret
push
sbb
jmp
fidivl
or
push
push
dec
aam
sbb
fdiv
ljmp
repnz
lods
xor
repz
pop
add
push
cmp
mov
rolb
or
ret
pusha
scas
mov
adc
fcoml
cmc
dec
mov
daa
out
mov
adcb
xchg
jne
xlat
lock
add
mov
mov
pop
test
mov
test
jns
pusha
or
dec
bound
lahf
sahf
sub
adc
outsl
sub
inc
xchg
fs
push
sbb
jae
movsb
or
js
lret
popa
lcall
aad
dec
sub
mov
adc
add
adc
adc
push
cmp
inc
mov
cmp
clc
push
inc
adc
xchg
inc
insl
lods
loopne
add
push
pop
inc
push
lret
xchg
outsl
dec
cmp
cwtl
mov
jecxz
cltd
push
sbbb
rcrb
add
daa
inc
jnp
aas
inc
or
subl
arpl
cld
jae
stos
fcos
cmp
or
jo
or
push
int
out
fisubl
aam
out
pop
push
fs
inc
rcrb
js
mov
push
cmp
jbe
mov
push
mov
and
mov
dec
dec
cmc
sub
aam
enter
or
dec
mov
movsl
sub
add
mov
dec
scas
sti
lcall
inc
jb
fidivl
sbb
mov
int
loope
dec
ds
ljmp
pop
fstpt
in
xlat
aam
ljmp
mov
cli
faddl
push
jbe
lds
les
je
jmp
and
xchg
cmp
ja
das
mov
xchg
jo
out
cmp
xor
js
mov
adc
mov
pop
jns
inc
adc
sub
add
xor
jae
dec
lods
jnp
inc
in
ja
xchg
add
idivl
leave
stos
dec
je
test
jl
andl
aas
inc
outsb
shr
adc
pop
loop
jae
xor
test
ja
sbb
or
sub
mov
mov
inc
fisubl
jl
iret
repnz
mov
popf
jecxz
inc
test
movsb
jno
psraw
and
and
pop
fsubrl
leave
scas
or
mov
aaa
push
and
pop
xchg
lds
cmp
sbb
dec
imull
das
test
pop
adc
sbb
rclb
outsl
cmp
iret
stos
push
addr16
mov
xchg
imul
push
inc
fs
jbe
cmp
movb
jmp
popa
aas
sub
addr16
loopne
popa
mov
pop
lods
and
data16
push
pop
jnp
test
inc
stos
andl
xchg
jne
cltd
das
xchg
cmpsb
outsb
cmp
fsubrp
add
dec
mov
adc
pop
add
adc
in
inc
sbb
pop
test
jbe
ficoml
ret
pop
lods
xor
popa
int3
sbb
xor
fwait
push
mov
ja
jne
popf
lahf
rolb
in
test
sub
in
and
ljmp
or
popa
popf
lods
xor
mov
aas
lret
dec
sbb
inc
mov
push
aad
sbb
xorl
incb
scas
and
fstpl
xchg
xor
xchg
in
into
test
mov
loope
or
cmp
ss
push
filds
or
cmp
fwait
pop
push
cmp
arpl
jbe
sub
lcall
pop
pop
xor
sub
fwait
sbb
stc
xor
mov
mov
fistpll
mov
loope
sti
sbb
insl
push
rclb
xchg
dec
shrb
add
sbb
mov
jb
arpl
lea
repnz
shl
push
dec
insl
andb
xlat
imul
push
fdivr
out
in
inc
jo
int3
mov
pop
mov
sbb
push
lods
movsb
mov
daa
popa
aam
mov
xchg
push
arpl
cmpb
test
mov
ja
dec
pop
fisttps
cmpsb
insl
mov
dec
out
pop
dec
hlt
leave
dec
mov
dec
add
andl
push
mov
push
fs
xchg
test
jns
data16
jo
cmp
push
push
xchg
popa
xor
sub
push
or
pop
xor
movsb
xchg
push
mov
dec
sbb
xchg
mov
dec
lods
xor
xchg
imul
inc
adc
fsubl
aam
dec
mov
pop
dec
sub
mov
sahf
les
loope
enter
test
fwait
mov
sub
in
clc
or
movsb
sub
mov
add
mov
fwait
push
jne
rcr
jae
in
aam
sub
test
je
mov
ret
les
push
in
cmp
inc
int3
fcompl
and
dec
sub
add
xor
pop
mov
movsb
push
dec
push
jl
test
and
xacquire
enter
push
lret
mov
sub
mov
add
ja
mov
sbb
pop
imul
mov
and
fimull
aam
pop
cld
fs
sub
add
dec
and
xchg
xor
call
pop
movlps
and
pop
fistpl
arpl
dec
push
push
cld
dec
cmp
pop
inc
jo
ror
pushf
dec
add
pusha
es
pop
and
fstps
dec
or
lods
int3
cld
lret
dec
push
test
inc
and
sbb
mov
and
nop
int3
mov
dec
call
and
dec
mov
es
adcb
dec
dec
daa
mov
push
fwait
hlt
inc
daa
clc
dec
movsb
ficompl
or
pop
cmp
cld
pop
sbb
dec
mov
dec
pop
dec
add
enter
pop
pop
nop
push
mov
call
pop
push
sub
pushf
push
add
cwtl
pop
aam
call
push
cld
lret
cld
xor
dec
dec
dec
xor
sbb
fcoml
dec
cld
sub
sub
or
enter
pushf
push
je
out
lret
mov
inc
int3
jno
adc
xor
lcall
int3
scas
lock
mov
orl
test
xchg
mov
mov
in
addl
mov
std
add
rcll
aas
sub
mov
insl
pushf
je
push
and
rcrb
and
pop
sbb
push
cmp
ror
call
xorl
pop
enter
test
idivl
outsb
stos
or
or
cmp
ffree
pop
daa
fidivs
das
sbb
sarl
addr16
sbb
test
filds
pushf
xchg
aam
jne
sbb
insb
pop
xlat
lods
add
xor
mov
cs
adc
sbb
roll
adc
sbb
or
fs
adcb
push
sti
in
fcmove
lods
frstor
lahf
data16
push
inc
xchg
sbb
adc
jne
out
mov
imul
inc
jle
test
sarb
xchg
add
jg
in
ja
shll
mov
and
test
adc
leave
mov
insb
xchg
ja
xor
sbb
cmp
push
sbb
iret
imul
imul
cmp
roll
je
xlat
xchg
push
aaa
arpl
orl
popa
fcompl
outsl
adc
ja
je
imul
mov
rolb
push
mov
add
dec
arpl
cmp
mov
dec
ja
mov
push
mov
and
pop
hlt
xchg
xchg
mov
ret
outsl
jno
mov
lods
in
xchg
mov
stos
incb
xor
xchg
movsl
jae
arpl
movsb
pop
jmp
and
out
jb
mov
ljmp
add
imul
pushf
lret
mov
xchg
jg
push
enter
insl
repz
stc
pop
cmp
add
add
push
test
inc
in
out
mov
mov
fwait
insb
adc
jae
inc
xchg
fcmovne
cmp
lcall
mov
push
mov
inc
sbb
mov
push
mov
sbb
adc
adc
xchg
les
rclb
jmp
rorl
pop
nop
dec
cli
mov
lret
xor
fwait
insb
push
lods
mov
gs
sub
pushf
xlat
inc
std
scas
push
das
add
xchg
and
or
in
push
xor
add
loopne
push
int
xchg
push
xor
dec
ret
rorb
decb
or
add
test
sub
ret
jmp
cmp
and
or
xor
xchg
mov
push
popa
xor
negb
test
push
sub
not
popa
mov
jns
hlt
int3
repnz
mov
fadds
inc
imul
xor
push
mov
fwait
pusha
fs
pushf
call
pop
pop
add
jmp
dec
wbinvd
push
int
mov
pop
je
sub
dec
xorb
lock
aaa
sub
test
mov
dec
aam
pusha
int3
sti
pop
mov
leave
jmp
loopne
inc
jg
jl
outsl
arpl
cmp
jbe
adc
pop
cwtl
sbb
lret
pop
hlt
mov
sti
out
pop
push
clc
aas
ret
push
les
inc
cld
call
pop
in
hlt
inc
or
loopne
mov
fsub
pop
mov
sub
push
lret
rorb
inc
mov
xor
add
popa
xor
push
shlb
fildll
pop
inc
loopne
pop
sub
sbb
and
cld
inc
mov
pop
sbb
adc
fmull
fs
pop
ret
lret
dec
in
hlt
adc
pop
pop
pop
faddl
sbb
fdiv
ja
test
inc
lods
fadds
rorb
add
mov
test
and
loopne
mov
sbb
cmp
inc
js
push
pop
pop
and
and
sarb
cmp
stos
cmp
shlb
pop
out
cmovl
pop
movsb
add
inc
je
les
gs
pop
sbb
sbb
mov
ss
lods
int3
pusha
ss
enter
hlt
ret
mov
xchg
lock
xor
sbb
pusha
adc
cmp
mov
pop
inc
push
loopne
mov
xchg
push
mov
sub
pop
cmp
adc
lods
sbb
in
popa
xor
out
or
aaa
pushf
fcmovnbe
sbb
adc
sbb
push
cmp
pop
ret
mov
mov
pushf
fsubrl
lods
sub
cld
and
ficompl
mov
xor
inc
sub
dec
lods
ficompl
mov
int3
mov
es
ret
je
or
hlt
and
mov
daa
inc
dec
add
loopne
dec
pop
mov
inc
and
in
push
pop
lock
test
int
xor
or
jbe
pop
insb
imul
aas
test
cmp
adc
inc
mov
aad
in
int3
setp
jb
aas
insl
stos
jnp
sub
jns
fidivl
cmpl
jne
pusha
gs
test
mov
sub
loopne
sbb
fdivr
cmp
or
cmp
inc
aas
rolb
or
rorb
insb
je
movsb
ja
jb
sub
cltd
scas
mov
cmp
cmp
jbe
adc
inc
test
arpl
popl
jne
test
mov
dec
add
fdivp
xchg
cmp
int
add
lea
test
sbb
dec
js
fidivs
push
scas
int3
and
jne
clc
in
call
int
cmp
and
inc
xchg
je
mov
or
jae
cmp
adc
fstpt
xor
cs
inc
cmp
hlt
or
mov
imul
shll
push
xor
sub
mov
cmp
popf
adc
mov
pop
imul
lcall
rol
push
mov
nop
mov
scas
lds
sub
push
lods
xchg
data16
ret
sahf
imul
push
arpl
sbb
repnz
outsb
jbe
sub
imul
pop
iret
aam
xor
fstl
pop
pop
jbe
add
test
pushf
lret
sub
in
addr16
mov
pop
es
cmp
lret
ret
add
inc
dec
sbb
mov
aas
inc
lret
popa
jb
cmp
fsubs
dec
stc
nop
inc
icebp
and
inc
mov
or
inc
test
mov
pop
jge
pop
pop
inc
gs
xor
inc
jle
lds
jae
adc
cmpsl
test
inc
scas
sbb
popa
xchg
add
adcl
ret
cltd
mov
lods
xor
push
xor
outsb
dec
mov
pop
inc
xchg
in
andl
inc
insb
jae
cmp
lods
outsl
push
sbb
jnp
sarb
or
lcall
imulb
test
movsb
stos
das
pop
imul
aad
inc
arpl
iret
or
dec
pop
mov
push
xor
aam
push
inc
shll
adc
push
je
aam
xchg
shrl
scas
ja
adc
insb
cmpsb
outsb
add
cmp
arpl
add
ret
pop
ja
push
sbb
push
dec
sub
and
or
sbb
test
mov
push
mov
mov
orl
iret
outsb
adc
mov
and
rolb
dec
sub
mov
lods
enter
or
cmpl
lods
addr16
mov
mov
in
xchg
cmp
fldcw
push
pop
pop
fs
add
dec
and
dec
pop
mov
mov
dec
xchg
xchg
inc
jo
call
out
xlat
je
imul
cmp
adc
push
jmp
xchg
adcl
pusha
test
dec
sub
loop
loope
cmc
shl
or
loopne
inc
push
and
fs
push
cmp
push
xchg
scas
jp
or
sbb
cltd
aas
int3
cmpsb
sub
add
sub
aaa
sub
sbb
mov
in
test
addl
arpl
test
orl
mov
cmpsl
and
dec
push
lret
push
in
sbb
pop
jne
pushf
arpl
cmp
pop
fptan
or
and
or
add
push
repz
push
sbb
dec
insl
push
sub
cmpsb
imul
adc
mov
pop
xor
sub
add
loope
mov
fnsave
adc
cmp
aas
push
lds
pop
jmp
rcrl
sub
in
shlb
push
cmp
push
shrl
mov
subl
mov
cmp
pop
lret
adc
or
sub
add
test
popa
pop
call
or
orb
movsb
xchg
jmp
inc
subl
test
sub
mov
xchg
movsl
sub
xchg
je
xchg
stos
mov
test
inc
mov
popa
lahf
and
cmc
push
popf
lods
xchg
insb
ljmp
inc
out
repz
scas
jnp
push
sub
and
jo
or
sbb
cmpsl
sarl
test
je
out
jl
int
inc
daa
mov
insl
insb
mov
mov
sub
daa
jne
push
xor
push
mov
sbb
std
mov
orl
sub
and
and
cltd
nop
fisubrl
ffreep
jecxz
test
or
mov
sub
sbbb
mov
fwait
lahf
stos
cmpsl
fs
pop
dec
fld
cmp
or
pop
mov
lods
mov
out
xchg
push
popa
xchg
xchg
test
rcrl
fwait
dec
arpl
insl
orl
and
mov
out
or
xchg
jbe
mov
rcll
es
jae
and
not
ljmp
and
je
mov
daa
sbb
shlb
test
xor
dec
pusha
and
mov
sbb
mov
and
or
scas
mov
shlb
mov
xchg
scas
data16
cli
and
pop
sbb
test
fsubrl
mov
arpl
test
jmp
mov
pop
push
adcl
sub
lds
in
mov
xchg
mov
push
sbb
fdivs
push
repnz
jmp
mov
inc
idiv
arpl
pushf
aas
in
jle
sub
jo
rcr
inc
adc
inc
inc
imul
xchg
fs
dec
fcoml
xchg
sub
inc
xchg
mov
cltd
push
ja,pt
add
popf
sti
aad
testl
sub
pop
loope
pop
nopl
adc
xchg
outsb
outsb
cmp
test
or
xchg
adc
and
and
jecxz
movsl
add
dec
or
pushf
loopne
inc
cmp
pusha
and
mov
xchg
fs
mov
mov
arpl
or
sub
fcompl
cli
outsl
mov
inc
fiadds
icebp
rorl
cmc
xor
inc
jp
push
enter
jne
lods
loope
movsb
xor
cmp
xor
cmp
mov
mov
jg
adc
push
fisubrl
cmp
xorl
out
outsb
pop
sub
lret
push
insb
lcall
test
cmpb
imul
xchg
adc
and
jbe
adc
fcomps
int
fidivl
or
int3
cmp
push
test
push
mov
jae
test
lret
dec
jo
add
ret
clc
call
test
test
adcb
int
xorl
scas
mov
jnp
jecxz
dec
aaa
mov
xor
cmpsl
xchg
push
sahf
push
jl
and
inc
fs
out
pop
pop
jp
xlat
pop
push
or
and
xchg
stos
mov
aam
arpl
aad
andb
inc
jecxz
cmc
or
or
cltd
sbb
push
fwait
je
sbb
mov
inc
dec
xchg
dec
adc
call
aam
jl
dec
push
pop
xchg
stc
mov
rolb
push
insl
mov
test
and
popa
or
idivb
sbb
mov
ljmp
sarl
jle
out
imul
or
inc
jne
cmp
pop
inc
jp
fidivl
adc
push
outsl
imul
in
jbe
loope
into
jb
adc
ss
pop
movsb
je
pusha
test
enter
mov
cld
aaa
fildl
mov
mov
popa
ds
xchg
sbb
xchg
xlat
outsl
dec
xor
cmc
adc
pop
xchg
cmpsl
loope
dec
lcall
enter
mov
dec
jle
pop
lret
adc
cmp
hlt
popf
pop
mov
xorb
into
test
mov
inc
push
sti
or
jmp
mov
inc
out
call
in
pop
cmp
jmp
inc
mov
jecxz
xor
sbb
repnz
call
and
cli
xor
dec
ds
scas
inc
arpl
mov
cs
je
xchg
sahf
decb
in
outsb
fcoms
or
jb
cwtd
dec
dec
out
jnp
cmp
jo
mov
fisttpl
aad
adc
pop
jne
mov
mov
pop
daa
inc
scas
mov
mov
outsl
cmpsl
dec
out
lods
adc
xchg
sti
lcall
jno
jno
lock
stos
pop
push
and
shrl
mov
ficoml
jns
jne
cmp
rolb
bnd
outsl
jmp
stos
lcall
pop
push
xor
pop
ja
testl
in
inc
cmp
pop
inc
adc
pop
push
pop
xchg
push
cmpsb
push
inc
subb
pop
test
in
aas
js
lea
fstpt
imul
mov
pop
cltd
sahf
fbstp
mov
inc
jecxz
pop
mov
mov
jb
or
cmp
notl
mov
stos
test
jecxz
fadd
stos
xchg
adc
dec
outsb
jle
and
aam
mov
in
out
jo
and
call
pop
and
inc
test
pop
rcrl
rcrl
inc
fs
sbb
mov
cwtl
adc
lret
dec
push
std
push
subb
fstpl
rolb
sahf
sub
test
int
ret
fiaddl
pop
inc
sahf
dec
or
lcall
and
xor
pop
dec
sbb
cld
cltd
add
xchg
pop
jbe
pop
mov
jecxz
and
jmp
xchg
pop
rclb
adc
cmpsb
cmpb
mov
mov
test
jae
jnp
xor
test
add
aas
xchg
xchg
icebp
movsl
int3
shll
mov
lds
stos
xor
lods
adc
sub
pop
int3
cs
call
pop
add
idivl
push
jno
lods
and
out
cwtl
ret
xchg
add
call
add
in
mov
cmpl
cmp
bound
adc
cmp
pusha
arpl
xor
push
push
xchg
scas
pop
stos
lcall
adc
pop
imul
xchg
lea
and
xchg
xchg
call
push
push
scas
xchg
cltd
cmp
xchg
iret
movsl
mov
push
xchg
inc
in
dec
xor
aaa
mov
xchg
pop
cmp
adcl
nop
and
ss
push
sbbb
cld
push
enter
daa
push
or
push
stc
inc
loope
jp
and
lret
sub
xchg
inc
adc
repnz
jno
jo
inc
popf
sub
test
ds
gs
mov
and
and
out
popf
aas
inc
out
jae
fisubl
jg
xchg
popa
test
jl
pushf
mov
jg
inc
inc
xor
inc
mov
imul
mov
imul
scas
shlb
add
sub
inc
ret
jnp
fidivl
inc
adc
mov
cltd
add
les
cld
inc
jno
in
ds
ja
pop
xor
push
add
sub
dec
pushf
leave
adc
leave
push
add
into
or
cmp
mov
addb
into
aad
pusha
jecxz
dec
out
push
repnz
pop
or
mov
mov
cltd
jns
test
sbb
cs
arpl
jmp
push
sti
dec
sahf
inc
lods
push
dec
test
sar
and
dec
lahf
mov
or
movsb
mov
cmc
lret
cmp
and
push
push
stos
adc
cmp
pop
adc
lds
arpl
sahf
loopne
xorb
popa
fs
add
mov
xchg
insl
test
popf
repz
jo
fidivl
addb
push
orl
sub
je
out
repz
mov
inc
pop
inc
mov
insl
cmp
xchg
popa
gs
pop
aam
lock
lret
ljmp
dec
popa
jbe
imul
inc
in
mov
cmp
push
xor
or
scas
mov
scas
fldt
mov
xchg
inc
and
inc
lods
cmp
lods
add
dec
lret
sbb
scas
dec
inc
js
rcrb
inc
lock
out
in
sarb
aam
loopne
xlat
test
adc
dec
xchg
pushf
hlt
push
fbstp
mov
bound
dec
mov
pop
popa
ret
xchg
dec
add
mov
hlt
jbe
repz
scas
ja
cs
pop
sahf
dec
xor
push
pop
add
adc
inc
xor
sbb
cmp
icebp
sub
mov
loopne
jne
jae
loop
orl
out
fbld
out
stos
push
in
xchg
fldt
add
adcb
inc
or
sahf
xchg
xorb
sub
loope
sub
cmp
scas
jo
push
cmp
mov
dec
les
aas
pushf
aad
mov
pop
xchg
adc
mov
fldt
fmull
add
push
pop
test
adc
jne
loope
dec
call
jne
out
mov
xchg
inc
xor
sub
inc
mov
add
cli
in
mov
inc
imul
mov
sti
xchg
pusha
push
cmc
or
mov
sbb
or
adc
add
jae
fwait
std
sub
sti
push
lods
scas
fcmovnu
pop
sbb
jbe
jg
stos
mov
jae
aas
hlt
cmpb
enter
js
add
outsl
inc
pop
pusha
outsl
sub
call
movups
mov
ret
xchg
dec
pusha
dec
sub
orb
or
call
mov
popf
movsb
stos
outsb
ret
cmpsl
lea
jno
inc
push
jle
adc
je
jns
mov
movsb
outsb
cmpl
dec
xchg
jae
ja
shlb
mov
jns
fidivrl
sub
sbb
mov
jbe
mov
je
repz
push
jo
pop
mov
aam
add
lcall
pop
pop
xor
jnp
xacquire
sbb
mov
push
dec
lods
lret
les
jae
mov
aas
xor
mov
jle
xlat
pop
in
mov
in
mov
mov
testb
jecxz
int
push
test
stc
sub
test
cmpsb
pop
add
push
jmp
lret
sbbl
pop
add
push
mov
fisttps
mov
xchg
test
adc
cmp
fisubrl
je
ljmp
lds
mov
dec
xchg
inc
sbb
mov
push
loop
or
inc
inc
call
adc
sub
in
jnp
or
jne
lods
cmp
jp
ret
gs
stc
pop
jae
inc
jmp
cli
ds
movsb
cmp
ja
insb
stos
sarl
inc
mov
pop
mov
aam
mov
push
ja
xor
sbb
pop
inc
test
jae
sbb
cmp
mov
inc
andl
out
ficompl
lcall
push
push
orl
add
pop
xchg
push
test
pop
mov
adc
xchg
sub
daa
test
jp
aam
push
in
aad
mov
mov
mov
iret
loopne
mov
imul
popa
sahf
sbb
cmp
push
cmpsb
mov
iret
ljmp
jle
push
outsb
in
and
repz
push
dec
stos
pop
aad
ds
lods
shlb
jb
out
popf
mov
cmp
cmp
dec
cmpsl
imul
jns
jl
push
jecxz
mov
jmp
stos
xchg
out
pop
xchg
jge
xchg
cli
inc
mov
lea
jb
movsl
stc
cld
xchg
jecxz
in
inc
jo
outsb
ds
cwtl
out
inc
je
insb
jl
pop
xchg
in
rcr
add
push
dec
ret
scas
aam
inc
push
pop
push
adc
jle
shl
lcall
shrl
out
sbb
mov
loop
jg
jae
xchg
and
stos
in
push
pop
xchg
std
leave
adc
cld
jns
inc
add
test
jne
dec
nop
pusha
test
inc
pop
mov
in
add
lea
pop
adc
fsubl
inc
dec
ss
arpl
stos
sbb
pushf
sub
pusha
mov
and
or
add
aad
mov
mov
xchg
mov
test
jbe
out
fisubrl
fucom
cmp
mov
test
jbe
loope
imul
push
aas
xchg
shll
das
iret
or
pop
rcr
jbe
sbb
pop
fs
sub
jmp
add
sub
xor
xchg
cmp
nop
enter
repnz
push
in
jno
mov
pushl
sbb
daa
or
cwtl
xlat
insb
lods
test
outsb
inc
inc
into
adc
push
mov
iret
popf
ljmp
scas
iret
adc
mov
je
mov
dec
fstps
jle
outsb
aam
inc
daa
cmp
dec
icebp
mov
push
in
mov
filds
sbb
mov
out
or
adc
jle
pusha
loop
fsub
mov
and
pop
jp
stos
xchg
nop
jle
push
pop
sbb
mov
pop
jmp
sahf
aaa
jge
fisubl
mov
cwtl
ljmp
mov
and
cwtl
ja
push
add
push
inc
out
outsl
cmp
mov
sti
psrad
test
test
call
sub
lret
xor
ret
jno
adcb
dec
and
pop
nop
ja
mov
subl
pop
cvtps2pd
or
sbb
xchg
arpl
jno
sbb
push
dec
mov
mov
popa
sub
test
xchg
lods
dec
sbb
imulb
and
xchg
jle
int3
stos
jae
ret
mov
cmp
subb
xchg
pop
dec
jb
les
divl
mov
cmp
sti
inc
and
pop
sbbl
cwtl
add
push
adc
jbe
and
arpl
and
cld
add
inc
aad
insb
je
mov
inc
movsl
popa
pop
and
bnd
mov
imul
inc
test
jecxz
adc
mov
mov
xchg
addr16
add
stos
lock
xchg
rcrb
es
xlat
mov
mov
btc
or
mov
jle
cld
repnz
leave
lds
sub
fidivrl
fs
mov
dec
mov
or
dec
aaa
in
fidivl
mov
lods
bound
imul
jecxz
ret
xchg
pop
repnz
jl
and
mov
sbb
dec
and
xchg
pop
adc
leave
push
xchg
pop
push
negl
add
sarb
sub
add
into
roll
out
ret
xchg
insb
add
repz
gs
cltd
in
cmp
sub
outsl
mov
push
imulb
jl
test
jbe
and
mov
in
insl
fwait
test
cmp
insb
mov
je
or
mov
and
xchg
pop
scas
mov
jae
pop
inc
scas
mov
arpl
movsl
inc
jle
jmp
xchg
popf
jge
xlat
es
loop
xchg
sbb
mov
add
cmp
aad
dec
ficompl
sahf
adc
mov
pusha
sbb
in
cmpsl
cmp
sarb
out
lcall
lahf
or
mov
movsl
pop
add
jns
cmpsb
xor
mov
jmp
insb
mov
xchg
cmp
jecxz
iret
shl
movsb
imul
js
jbe
stos
pop
sbb
push
sbbl
add
outsl
sbb
movsb
test
sbb
mov
sub
mov
mov
rorl
mov
cmp
push
aam
mov
pushf
pop
in
mov
xor
repnz
and
xor
out
cmpsb
mov
or
dec
jb
add
subb
scas
ret
xchg
test
stos
sub
mov
scas
shlb
js,pn
add
add
subl
dec
add
mov
aad
add
inc
int
xchg
ja
jne
arpl
sbb
imul
xchg
lods
pop
ss
jae
mov
sbb
nop
mov
and
dec
ja
dec
addr16
jae
mulb
fcomps
and
imul
ror
lcall
adc
aaa
in
sbb
aad
jle
sbb
pop
adc
outsl
ja
add
sub
mov
mov
loopne
jmp
outsb
sbb
mov
jp
in
pusha
add
iret
push
iret
nop
and
mull
int
scas
mov
jns
push
sahf
orb
push
cmp
int3
fcmovu
pop
jns
pusha
aad
cmp
add
daa
sbb
test
dec
lea
out
xor
xchg
js
jmp
jecxz
and
push
or
roll
test
mov
insl
sub
push
jecxz
test
xor
pop
xchg
or
popa
or
aam
cs
cmp
ret
andb
dec
andb
adc
inc
sbb
scas
lods
xchg
add
jno
xor
xchg
pop
dec
cmpsl
dec
mov
call
or
push
xchg
add
ret
and
inc
pop
leave
sub
test
fnstenv
cmpsb
xor
cmp
loope
dec
inc
leave
jp
push
lock
iret
mov
add
iret
insl
inc
ret
or
mov
fsubl
dec
movsb
loope
fiaddl
mov
push
jecxz
lret
pop
in
fcoml
jne
add
sub
or
std
inc
lret
xchg
movsl
and
in
call
pushw
addl
cmp
adc
mov
sub
test
clc
imul
cmp
pusha
stos
arpl
mov
push
ljmp
inc
pop
andb
push
outsb
sbb
mov
mov
testb
popw
testl
in
mov
andl
arpl
add
inc
cmp
rcrb
outsl
es
or
jae
fdivrs
popa
popa
cmp
push
pop
xchg
pop
ljmp
add
pop
sbb
outsb
push
shrb
fnstcw
add
aas
or
inc
test
and
inc
inc
bound
leave
ret
mov
ret
xor
mov
insl
clc
repz
bound
xor
test
mov
imul
pop
push
je
in
jo
adc
jmp
cltd
add
test
jmp
ficoml
jecxz
cmpsb
addr16
add
aam
cmc
rcrl
daa
sub
and
fs
mov
mov
arpl
jg
adc
loopne
mov
adc
cmp
mov
push
mov
inc
ret
fmuls
adc
data16
inc
nop
rorl
outsb
pop
push
int
repz
inc
adc
push
fwait
pusha
mov
test
push
nop
popa
xchg
xor
movsl
add
dec
add
lods
dec
fbstp
cltd
adcl
leave
push
in
repnz
mov
cmp
in
push
sub
popf
dec
xor
pop
fbstp
imul
call
push
add
mov
aam
jne
jle
mov
movsl
lock
inc
mov
nop
sbb
xor
add
je
mov
fldenv
pop
cli
shrl
or
mov
xorb
rorb
inc
fsubr
xor
addr16
xchg
sbbl
inc
jno
push
pop
pop
adc
xor
cmpsl
xor
dec
dec
rclb
cmp
jp
pop
sub
ljmp
xor
and
out
insl
mov
mov
mov
jnp
out
sbb
mov
pusha
dec
jb
inc
icebp
arpl
sub
push
aas
xchg
lds
push
sbb
test
cmp
and
cmp
inc
ret
out
jg
out
inc
scas
fsubr
je
push
jnp
and
out
xlat
lds
js
cmp
xlat
cmpsb
fidivrl
push
dec
inc
clc
fisubl
sbb
bound
lods
popa
xchg
sub
jae
in
jns
push
js
in
push
mov
in
sbb
xchg
jmp
xchg
mov
push
imul
aas
adc
xor
inc
sbb
jecxz
mov
fstpt
dec
adc
jo
stc
scas
hlt
sti
mov
push
sub
sbb
outsb
adc
lret
adc
icebp
sbb
ljmp
mov
adc
xor
mov
inc
scas
mov
sbb
inc
sbb
lcall
fs
jne
pop
add
pop
pusha
popa
sbb
adc
scas
inc
ja
mov
mov
adc
adc
insb
movsb
stos
mov
xchg
insb
push
lcall
cld
in
ja
loope
or
xrelease
and
insl
lahf
mov
shl
mov
sbb
ja
jge
cmp
sbb
and
in
cmpsb
mov
add
xor
sti
adc
push
std
mov
xchg
jns
pop
push
je
in
xor
pop
ds
mov
movsl
inc
or
push
dec
add
scas
ss
lahf
jp
pop
rorl
call
pop
dec
ds
fsub
pusha
cmp
iret
adc
xchg
lret
jl
jg
fdivrs
xchg
arpl
test
push
pushf
push
mov
shlb
push
sbb
mov
jnp
inc
mov
add
repz
pushw
dec
sbb
test
xor
or
ja
sti
shrb
lcall
xchg
xor
jo
in
popa
stos
inc
and
ljmp
cmc
mov
stc
push
pusha
add
cmp
add
test
mov
insb
dec
cmp
rorb
push
xor
pop
xchg
je
adc
xlat
xchg
mov
cmp
je
movsl
mov
ja
cld
inc
jbe
and
and
adc
mov
xchg
fidivrl
sbb
outsl
hlt
and
and
clc
sbb
jne
jg
xor
test
je
jbe
inc
jae
dec
adc
mov
lcall
nop
sbb
inc
ja
sub
inc
das
mov
scas
and
out
sti
gs
or
ljmp
fildl
enter
rorb
data16
push
repz
inc
arpl
shll
mov
in
test
rclb
xchg
pop
sarl
dec
xchg
push
xchg
adc
bound
adc
mov
xchg
pushf
and
push
mov
je
mov
or
sub
mov
dec
mov
jge
mov
lock
subl
inc
or
add
scas
jp
xchg
lret
jge
sub
ret
adc
push
xor
nop
sub
mov
out
push
insl
daa
aam
sbb
jmp
xor
mov
push
dec
data16
cltd
xchg
xor
test
add
inc
sbb
aas
in
and
scas
xchg
rorb
push
fbld
push
add
jns
test
in
xchg
or
jno
scas
sub
push
stos
aas
jns
and
ljmp
in
test
lds
mov
mov
xor
add
jge
xchg
sbb
fs
les
xchg
inc
jle
outsl
add
mov
inc
mov
mov
shrl
ret
mov
mov
pop
leave
cmp
mov
cmp
xchg
jge
jbe
popf
fistpl
push
out
enter
test
xchg
sub
mov
repnz
int
ljmp
mov
mov
cwtl
jl
xchg
aas
bound
pushl
push
jb
clc
xlat
js
loope
ret
cmp
dec
orl
outsb
xchg
jp
xchg
pop
fwait
jle
jnp
mov
adc
cmp
mov
aam
jle
outsb
cmp
fcmovnu
push
lock
jo
fstpl
insb
push
mov
jl
mov
pop
jmp
sub
shr
out
das
into
adc
dec
repz
inc
int
mov
dec
mov
loop
dec
or
stos
in
sub
lock
gs
jae
mov
stos
jmp
push
jb
arpl
adc
sub
clc
test
lahf
popa
adc
add
xor
xchg
sbbl
inc
fs
data16
mov
dec
mov
enter
stos
and
addr16
mov
je
cmpsb
push
push
movsl
push
dec
popf
sbb
xor
loop
pop
jecxz
nop
icebp
stos
sbb
ja
cmp
xor
adc
ror
cmp
inc
cmpsb
loopne
lock
and
jbe
fistps
cmp
inc
jecxz
cld
push
arpl
jbe
pop
and
pcmpeqd
sub
stos
test
push
mov
loope
pushf
mov
out
jg
popf
push
fs
std
test
add
call
out
pop
xchg
mov
cs
ja
and
test
sub
outsl
movsl
xor
jne
fidivl
lret
dec
call
cmp
cmp
xchg
scas
in
aam
xchg
movsl
xchg
push
test
mov
ds
stos
lahf
popa
adc
rcrl
fwait
test
mov
repz
sahf
adc
enter
mov
sbb
xchg
outsl
xor
loop
ds
mov
pop
sub
out
jne
mov
dec
cld
std
jnp
jmp
and
inc
fcmovnb
mov
addb
push
ficoml
jle
xor
mov
inc
loope
icebp
cmp
sbb
inc
mov
cmp
aas
testl
jge
les
pop
sahf
rclb
dec
jne
rorb
jl
jne
jmp
stc
loope
lret
lock
mov
jecxz
pop
test
into
aad
jne
enter
xor
jg
mov
sti
cs
sub
jno
push
fsubl
jo
cmpsl
cmp
aas
pushf
xchg
sub
xchg
scas
fsubrl
loop
jno
add
mov
jae
fwait
pop
call
jne
scas
mov
pop
or
mov
enter
in
pop
arpl
inc
cltd
jle
cmp
and
adc
pop
push
sbb
jp
pushf
xchg
dec
pusha
imul
jecxz
mov
push
shlb
push
hlt
push
inc
arpl
mov
shlb
xchg
dec
push
mov
and
pop
xor
hlt
sbb
fs
fsubs
cmp
enter
cmp
les
loopne
mov
out
or
fs
pop
loopne
sub
clc
pop
int3
hlt
fs
shl
push
jl
loop
push
xorb
mov
adc
fcompl
imul
imul
fs
inc
cli
sub
stos
mov
and
push
je
sub
xchg
mov
cmp
mov
aad
or
jle
shlb
mov
add
mov
lea
addr16
daa
xchg
push
jl
in
xor
fsts
xchg
add
pop
faddl
dec
inc
push
pop
pop
fsubs
inc
xor
ret
je
les
loopne
inc
sub
andb
fsubl
sbb
clc
adc
test
sub
pop
mov
sub
mov
inc
mov
mov
addr16
dec
adc
pop
push
push
sub
fs
lods
lahf
dec
pop
dec
jmp
aam
cmp
pop
dec
cmp
je
xor
loop
mov
mov
sbbl
mov
ss
mov
clc
enter
mov
add
pushf
pop
pusha
les
inc
mov
aaa
mov
push
mov
fdiv
sbb
add
mov
es
pop
loopne
fwait
mov
pop
mov
loopne
fadds
in
lock
mov
adc
add
mov
sbb
arpl
lret
ret
clc
inc
jo
pop
mov
test
inc
lock
loop
mov
lods
dec
and
stos
pop
aas
imul
inc
cmp
pop
cwtl
inc
cwtl
sbb
in
and
dec
or
mov
jno
adc
xchg
insb
sarb
xchg
xor
push
dec
ja
push
jecxz
mov
mov
jmp
sub
in
pusha
test
fs
mov
pop
inc
cmpl
aam
iret
add
pop
mov
andl
push
rcr
aas
mov
ds
push
add
sbb
fimull
roll
test
lea
cmc
pop
jno
test
mov
push
push
mov
test
movsl
orl
cmp
xchg
out
mov
shrb
nop
push
inc
cmp
push
test
adc
mov
pop
sub
or
xchg
sarl
push
jo
outsb
repz
dec
out
jae
jecxz
lds
mov
outsl
push
mov
das
inc
imul
or
gs
and
or
cmc
in
ret
cltd
xchg
mov
test
divb
and
xor
outsb
inc
data16
mov
test
xorb
add
cmp
mov
jmp
add
lahf
jns
outsb
adc
mov
outsl
dec
adc
mov
stos
out
mov
and
sbb
ds
cmp
test
es
cmp
or
jns
outsl
movsb
pop
jecxz
negl
test
pop
sbb
xor
jno
bound
mov
pop
test
movsl
das
fwait
lea
xchg
je
les
jmp
pusha
scas
mov
lret
mov
jo
std
inc
pushf
inc
mov
std
pop
or
sbb
inc
mov
push
pop
cmp
sub
std
dec
inc
adc
and
sbb
jbe
sti
je
jae
xor
pop
subl
pushf
add
jae
idivl
imul
test
rolb
inc
negb
mov
and
sbb
cwtl
loope
push
in
outsl
jp
imul
test
or
mov
add
push
movsl
sub
cltd
arpl
imul
fiaddl
sub
out
jecxz
sub
add
sub
xor
cmc
cmp
scas
inc
data16
imul
or
adc
sub
bound
inc
scas
sbb
mov
pop
rcrl
outsl
inc
cmp
leave
jbe
mov
push
into
and
push
pop
add
cmp
inc
in
mov
into
fbld
xchg
insb
add
test
in
lds
jns,pt
out
sbb
lods
push
xchg
ljmp
xor
call
mov
pop
out
xchg
fs
adcl
mov
sub
adc
into
inc
outsb
cmpsb
mov
stos
int
cmpsl
inc
mov
add
pop
add
out
insb
jg
cmp
jnp
sbb
int3
pushf
jbe
cmp
shrb
arpl
ror
flds
jle
addr16
out
orb
aaa
loop
dec
cmp
gs
subb
add
les
jmp
cmpsb
lret
xlat
add
cmp
es
xchg
movsb
jp
push
pop
mov
jecxz
pop
xchg
shrb
data16
test
fcmovnb
test
mov
xchg
rolb
sarl
pop
test
addr16
rcr
add
or
int
imul
fs
imul
movsb
test
xchg
pop
lods
movsl
mov
and
loope
clc
ss
lea
push
jbe
mov
and
setae
push
jns
pop
xchg
ss
adc
es
and
jb
or
mov
xchg
pop
imul
pop
hlt
inc
lret
xchg
jge
or
fisttps
sub
xor
mov
push
cmp
inc
mov
iret
cli
ret
loope
rorl
sub
mov
pop
push
sub
nop
test
lods
pop
cmp
fdivl
inc
pop
fwait
fs
test
leave
jo
jno
scas
subl
stos
test
jmp
in
and
pop
inc
bound
push
sbb
jl
add
test
popf
cwtl
gs
and
enter
push
inc
push
je
jmp
addr16
push
into
in
ss
mov
test
cmp
sbb
inc
daa
dec
fwait
xchg
scas
sub
out
leave
fildll
add
or
lock
stos
movsb
xchg
clc
imul
and
dec
or
push
mov
or
in
rcll
scas
stos
mov
test
cmp
cmp
pushf
push
stos
push
fsubrl
pusha
cli
sub
mov
sub
aaa
loop
loopne
add
push
mov
aam
or
arpl
stos
out
pop
enter
mov
inc
call
inc
je
aas
dec
pushf
movsb
iret
sbb
mov
lret
movsb
sbb
pop
mov
arpl
fprem1
aam
shl
push
sbb
pop
dec
out
jae
outsb
mov
and
pop
fiaddl
mov
push
or
dec
out
jae
es
adc
in
xchg
into
add
jnp
mov
imul
int3
rolb
addl
notl
ljmp
stos
dec
adc
call
pop
addr16
cmp
cmpb
xchg
cmpsl
ficoms
inc
sbb
xlat
inc
xor
or
sub
inc
inc
push
pop
xchg
pop
pop
mov
lods
or
scas
cmp
inc
pop
push
test
aam
xor
in
jp
aam
ds
imul
mov
lcall
fimuls
stos
adc
imul
cmp
mov
orl
aaa
add
int3
in
push
test
xorl
lods
pop
sbb
pop
and
cld
ja
and
imul
mov
mov
test
aam
lret
js
lock
inc
outsl
cmp
xor
fcomi
je
xchg
rep
jbe
orb
por
mov
stos
sub
cltd
divb
jb
xor
cs
cltd
pop
jne
rcrl
lcall
or
xchg
outsb
mov
xchg
dec
inc
jg
xchg
jl
and
pusha
jge
pop
sbb
sbb
sbb
cmc
jp
push
addl
test
mov
inc
cltd
test
mov
imulb
jmp
xor
incb
jg
sub
inc
xor
xchg
jnp
addb
gs
data16
mov
pop
ret
mov
sub
orl
jp
sbb
push
xchg
and
push
push
sbb
test
jne
divl
sahf
aaa
push
cmpsl
jae
and
push
jb
fs
aas
ja
int3
fisubrl
mov
pop
and
mov
scas
pop
pop
dec
ja
xchg
fldl
sbb
sub
subl
jmp
inc
orl
out
add
lret
out
cmp
inc
cmc
adcb
lock
fs
pop
push
imul
cltd
mov
sbb
loope
sbb
icebp
jl
test
cwtl
arpl
insb
test
loopne
push
js
js
cmpl
push
das
insl
cli
sub
sbb
mov
cld
scas
mov
mov
movsl
je
cld
mov
sub
push
inc
or
fimull
das
push
fidivrl
movsb
inc
mov
mov
xor
cmp
jp
and
dec
mov
dec
push
sub
rcll
xor
test
in
jno
inc
cwtl
ret
and
shrb
mov
sbb
mov
cmpsb
cmp
or
mov
mov
imul
mov
xchg
add
jb
mov
lods
nop
or
ljmp
pop
bnd
outsb
mov
push
insl
out
test
or
jle
orps
jb
lcall
sbb
or
mov
pop
loop
or
sub
add
push
aad
add
dec
and
andl
mov
xchg
jge
ljmp
push
add
or
outsb
cmp
addb
out
rcl
push
xor
ljmp
pop
cs
xorl
scas
aad
inc
int
je
push
test
movsl
addr16
jo
fdivl
je
cmp
or
jae
inc
scas
je
fildll
sbb
scas
pop
xchg
adcl
in
test
xor
and
ljmp
xchg
shlb
mov
mov
or
pop
shlb
mov
jmp
imul
test
inc
mov
outsb
test
push
sbb
inc
jae
frstor
cltd
out
pop
imul
fwait
mov
xor
jae
aam
outsl
push
test
push
jb
test
pop
xor
out
xor
add
xchg
xchg
sbb
in
test
xor
pop
jae
lds
cmp
out
push
dec
outsb
es
repnz
adc
aaa
xor
push
cmp
xchg
daa
sub
jno
xchg
mov
ja
test
movsb
pop
out
jns
cmc
mov
gs
adc
push
push
lods
testb
pop
iret
cmpsl
dec
add
std
xchg
stos
push
stos
call
xchg
ja
mov
mov
shr
fcmove
pushf
xchg
push
subl
je
adc
rcr
push
or
inc
sub
dec
jg
push
lcall
xor
or
test
xor
test
int3
xlat
lret
enter
inc
mov
iret
push
popa
rclb
jp
rcll
std
xorl
xor
bound
sbb
mov
stos
mov
pusha
lods
mov
lcall
sti
cmpsl
fisttpl
loopne
adc
sub
sbb
xor
js
pop
or
xchg
inc
add
and
mov
loopne
jl
loope
or
push
push
mov
cmp
orl
xchg
sbb
lcall
mov
test
pop
mov
orl
xchg
sahf
pop
ljmp
dec
push
out
pushl
pop
mov
lods
imul
pop
add
inc
cltd
jne
jl
xor
or
pop
push
pop
addr16
je
mov
aas
iret
sbb
aam
cmp
lcall
sarb
dec
outsl
or
clc
into
rcrb
mov
cmpsl
ds
inc
adc
insl
inc
sub
ret
bound
xchg
sbb
lock
jl
pcmpeqb
inc
enter
jnp
cmp
pop
dec
sub
sbb
add
test
movsb
adc
and
dec
inc
insb
add
in
cld
iret
mov
mov
sbb
inc
pop
pop
aam
cltd
dec
sub
pop
inc
xorb
lods
push
mov
ja
xor
jns
xor
xlat
xchg
lods
int
outsl
jmp
mov
outsl
stc
pop
dec
pop
push
andl
popa
jb
cmp
fsubs
mov
adc
add
fisttps
lahf
fs
xor
add
inc
push
in
adc
pop
push
mov
lahf
jg
and
shlb
inc
and
inc
sbb
xchg
adc
arpl
lods
jp
jecxz
loope
xorl
scas
cmc
cmp
aam
jl
out
movsl
adc
inc
lods
add
scas
test
iret
xchg
xchg
or
lret
xchg
adc
sub
sub
jbe
sub
out
jbe
stos
xchg
popf
jecxz
xorb
mov
ljmpw
inc
orl
cmc
xchg
mov
arpl
daa
pusha
sbb
add
mov
dec
lcall
fs
xor
in
sub
es
rcr
push
inc
push
add
mov
daa
push
sub
pop
shrb
or
pop
xchg
scas
call
mov
mov
repnz
push
call
jb
adc
rcrb
jl
imul
pop
fstps
stos
sahf
popf
cmc
cmp
pop
jp
and
add
pop
lods
test
pop
ds
nop
xlat
bound
jo
xor
mov
push
arpl
cmp
arpl
add
fwait
or
jnp
mov
fisubl
nop
fs
fisubrl
iret
test
shl
out
push
ret
mov
in
add
popa
or
dec
push
xchg
loop
leave
or
or
mov
in
pop
rcl
sbb
cmp
inc
iret
push
shlb
loope
in
inc
and
rcrb
out
mov
orl
scas
dec
add
fcompl
mov
sbb
scas
dec
or
in
pop
shrb
ja
test
icebp
adc
cmp
add
xchg
in
cmp
fs
lock
pop
fwait
in
sbb
pushl
xor
aad
lea
push
lock
inc
out
loopne
out
rclb
xchg
mov
jns
test
test
std
bnd
mov
call
jne
cs
scas
xor
xor
push
push
fldl
pop
dec
jmp
les
fcompl
repnz
stos
lcall
jb
pop
and
push
mov
loop
loopne
leave
sbb
movsb
pop
cmp
lods
pop
inc
fistpll
mov
cmp
test
mov
daa
jb
rolb
sub
gs
test
jae
arpl
xor
and
mov
push
xor
lds
ss
fnstenv
inc
arpl
andl
daa
sbb
rcl
adc
enter
imul
jp
filds
xor
and
xchg
outsb
enter
in
test
shrl
dec
pop
jae
push
lcall
ja
ds
mov
adc
repnz
movsb
mov
xor
inc
push
or
pop
cmp
ss
adc
sbb
pop
xlat
sub
scas
cltd
dec
pop
iret
andl
outsb
or
mov
aas
aas
push
lcall
dec
mov
lock
out
jmp
sub
add
xor
mov
loop
test
and
test
rolb
sbbb
das
out
and
jmp
imul
mov
aaa
test
test
popf
dec
xor
je
cmpb
mov
test
in
jg
ljmp
push
outsl
adc
icebp
pop
lret
and
mov
jecxz
mov
loope
xor
or
dec
iret
mov
cmc
lods
notl
mov
dec
push
in
xchg
lods
mov
or
adc
fxch
das
jo
cmova
imul
aaa
aad
out
jns
aas
push
pop
pop
mov
inc
or
insl
jb,pt
sub
cmc
or
mov
imul
push
adc
mov
push
test
arpl
mov
or
cmc
pop
mov
in
add
paddsw
clc
insl
sub
pop
pop
mov
sbb
cmp
std
jno
arpl
jp
cmc
jno
ret
rolb
andb
push
fldl
loop
dec
add
imul
ja
add
sub
in
test
nop
icebp
loope
jl
or
ja
inc
or
sub
hlt
sarb
mov
ret
adc
add
popf
pop
sti
lods
shl
test
and
mulb
xor
sbb
ljmp
pushf
loopew
pop
je
adc
cwtl
subb
add
jp
lret
ss
test
xor
cmp
pop
jl
sti
aam
aas
mov
popl
pop
jo
adc
jo
lcall
jecxz
mov
ja
dec
popf
xorb
movsl
loop
mov
or
pushf
sbb
jne
sahf
popf
lods
stos
cmp
test
cmp
add
into
addl
push
dec
in
loopne
out
scas
loopne
sub
movsb
push
movsl
dec
mov
and
xor
icebp
aad
or
mov
and
out
mov
std
lret
movsl
jecxz
shll
test
lods
lock
jmp
mov
dec
repnz
dec
scas
in
lcall
and
add
push
jle
push
sbb
fcomp
and
movsb
insl
ret
pop
aas
sbb
mov
mov
rolb
push
sub
xor
cmp
nop
adc
mov
push
mov
out
hlt
dec
cmpsb
adc
popf
div
xchg
dec
fnstenv
pop
out
roll
das
mov
inc
sbb
ds
dec
ds
out
mov
sub
gs
jb
or
lret
in
cmp
leave
imul
in
lods
leave
jae
jne
jg
ja
jl
fwait
jecxz
sahf
out
sbb
jae
jno
dec
shrl
xchg
fimull
dec
or
lea
push
ss
popa
lret
adc
push
or
scas
jbe
mov
push
lods
push
sbb
push
push
sbb
jb
addb
jne
add
movsb
fs
or
inc
movsl
ficompl
dec
adc
stos
adc
in
ret
dec
mov
pop
mov
jge
in
pop
insl
out
enter
loop
or
fs
cwtl
stos
lret
mov
aas
mov
aad
ja
jo
xlat
cmpsb
roll
adc
xchg
lock
jl
dec
hlt
sbb
mov
or
dec
in
shr
mov
lds
mov
lcall
inc
dec
sbb
sub
sbb
scas
adc
inc
rcrb
les
sbb
call
imul
adc
int3
xlat
xor
dec
in
xor
sbb
add
imul
aas
pushf
lods
in
mov
mov
ret
push
test
enter
and
xchg
adc
xlat
dec
inc
test
xlat
push
cwtl
inc
and
and
jle
fldt
mov
inc
stos
nop
fwait
pop
ljmpw
pop
mov
push
test
rorb
jno
js
fisttpl
imul
mov
xchg
mov
push
outsb
cwtl
aad
adc
rcrb
xchg
inc
sub
cmpsl
pop
dec
mov
and
repz
cmp
jg
pop
jne
pop
into
push
push
xor
sub
jbe
jecxz
sbb
dec
arpl
sahf
cmc
lcall
inc
int
cwtl
xor
cmpsb
stos
push
jb
cwtl
adc
inc
je
adc
sbb
push
outsl
shll
jb
mov
ss
cmc
loope
xchg
movsl
mov
in
out
in
mov
roll
push
pusha
sub
xchg
dec
mov
xchg
xchg
fcomps
outsb
mov
out
in
xchg
dec
xchg
fs
je
pop
jbe
mov
js
cld
sub
mov
or
lods
sub
inc
dec
xchg
xchg
xchg
dec
sbb
xor
adc
out
imul
pop
movsl
imul
mov
fidivrl
adc
push
ja
daa
adc
popa
popf
mov
pusha
xchg
lcall
out
add
push
lret
cmp
sbb
xchg
stos
stos
insl
dec
fxch
mov
jb
push
movsb
outsb
sub
pop
push
insb
add
push
sahf
jae
or
test
ficoml
shlb
jae
xor
pop
inc
dec
jne
push
inc
lods
stc
mov
dec
test
push
xor
insl
mov
ljmp
jo
push
pop
jbe
cmp
fisttps
std
mov
lods
add
les
movsl
mov
rcll
xchg
cmp
mov
icebp
mov
or
jb
push
lret
jbe
inc
adc
push
mov
pop
imul
movsb
add
sbbl
call
jmp
test
lods
cmc
pop
cltd
lea
popa
fbld
mov
pop
shr
pop
mov
push
test
jbe
test
pop
push
cmp
gs
cmp
icebp
jnp
add
sbb
cmp
aam
hlt
out
call
fdivp
test
xchg
jmp
or
sub
mov
push
push
lret
lcall
popf
fs
cs
jp
push
pop
test
push
stc
pusha
inc
test
pushf
cli
fs
adc
inc
je
or
testb
shl
push
cmp
cmpsl
in
ds
add
push
or
jnp
add
lods
jnp
sub
sub
push
cmp
sbb
add
and
inc
pop
mov
push
aas
stc
dec
and
inc
es
mov
push
scas
or
or
loop
fldl
push
rorb
or
bound
pop
cld
jne
jle
cmp
jbe
dec
cmp
jmp
or
call
jo
mov
in
mov
jecxz
xor
jg
cli
xor
lahf
pop
out
sub
jns
scas
pop
xchg
imul
or
arpl
mov
inc
cmpsb
mov
stc
enter
in
push
je
clc
imulb
jecxz
jp
aas
push
clc
mov
pop
arpl
dec
pop
cltd
stos
lock
clc
andl
pop
in
testl
mov
push
or
stos
push
lods
or
jbe
rorb
jg
xchg
and
fs
pop
lods
cwtl
pop
jp
in
pop
and
nop
mov
mov
nop
sbb
test
push
fcmovbe
outsb
xchg
xchg
mov
push
ja
sti
push
xor
adc
imul
dec
dec
je
fadds
push
jle
mov
jns
and
fsubl
int
subl
jp
sub
pop
push
orb
jp
in
cmp
push
push
stos
push
xchg
adc
in
stos
sti
in
cmp
or
mov
dec
lock
sbb
gs
mov
incb
jle
and
sbb
into
loope
pop
out
push
loope
mov
xlat
sub
lret
into
push
mov
outsl
imul
mov
hlt
and
jmp
push
jno
stos
clc
shl
push
push
mov
cmpsl
mov
jns
ja
movsb
mov
lret
pop
mov
es
pop
in
stos
pop
jmp
mov
or
pop
fists
xchg
sub
jecxz
rcrb
movsl
addr16
movsb
outsb
outsb
push
fldt
adc
cmpsb
push
outsl
xor
stos
push
sarl
incb
or
jbe
lods
in
fistpll
cmp
jne
cmp
gs
mov
dec
arpl
dec
sbb
aaa
dec
fxtract
xor
xchg
inc
dec
iret
xchg
xchg
test
int
rclb
add
fistpl
lods
loope
jbe
sahf
lods
and
rorl
cmp
repnz
rolb
or
cmp
and
or
pushf
sub
outsb
push
sti
cmp
mov
and
movsl
mov
test
xchg
shrb
cmp
pop
pop
lds
xchg
cmp
jbe
test
cmp
push
adc
repz
fistpll
icebp
in
mov
test
xlat
mul
cmpsl
popa
ret
shl
imul
mull
and
or
arpl
adc
pop
sub
jmp
inc
jo
jl
lea
fwait
adc
adc
ljmp
loop
aam
cld
adc
cmp
in
outsb
std
sbb
sub
or
push
sbb
js,pn
and
and
add
sbb
cwtl
fdivrl
inc
and
mov
cmpsb
lret
int3
int
adc
repz
loop
adc
add
fwait
sahf
sti
cltd
lock
xchg
pusha
popa
pop
inc
repnz
push
cmp
lret
cmp
xor
leave
add
pop
sub
ficoml
push
cmc
cmpsb
jae
gs
rorb
push
in
inc
movsl
out
outsb
inc
in
push
mov
dec
lahf
xor
mov
hlt
test
jo
or
popf
stos
pop
cmp
jnp
in
push
cmpsb
out
xchg
imul
ja
or
dec
pop
add
mov
data16
push
es
mov
jmp
mov
pop
ds
pop
or
push
lcall
add
mov
mov
or
add
mov
sub
gs
mov
pop
aam
mov
xlat
outsb
insb
or
pop
add
mov
enter
push
push
push
and
mov
das
and
cmpsl
add
dec
jp
cmp
jae
inc
jp
sar
lcall
dec
mov
inc
sub
mov
bound
inc
hlt
call
jae
push
inc
or
mov
pop
jg
in
out
mov
popl
jmp
add
pop
xor
adc
xor
inc
cmpsb
xchg
pop
icebp
xor
mov
and
test
inc
stos
and
jo
sub
mov
sbb
sbb
ljmp
cmp
and
xor
lcall
pop
leave
fs
adc
jp
push
cmp
cmc
xchg
pop
fs
scas
loope
jo
adc
or
dec
cltd
icebp
sub
test
sbb
sub
ret
mov
jne
or
xchg
cmp
fs
and
je
xlat
jbe
mov
in
pushf
lcall
dec
mov
pop
cmp
lods
call
xor
pop
xor
lcall
inc
ljmp
adc
push
jae
dec
stos
in
int
xor
addr16
cmp
sbb
outsb
aad
or
jl
mull
xchg
jg
adc
enter
jo
out
lods
outsb
or
push
add
int3
adc
loope
jg
jbe
je
lock
lock
loop
jne
pop
je
imul
orl
outsl
ljmp
shrb
pop
jo
enter
movsl
xor
xchg
call
jmp
data16
test
xchg
push
andl
stos
arpl
pop
not
pop
cmp
or
inc
stc
xor
ljmp
mov
ljmp
sti
imulb
dec
xchg
test
mov
push
or
dec
outsb
imul
std
ljmp
test
mov
pop
loope
jns
cmp
and
lods
aam
jmp
insb
mov
lods
scas
mov
repz
and
push
inc
mov
ja
arpl
cmp
rorl
jno
test
jne
loop
movsb
sbb
in
add
leave
enter
add
sarl
xchg
and
add
mov
ss
repz
push
push
arpl
jnp
int
clc
scas
icebp
add
mov
arpl
test
pop
xchg
cmp
cli
mov
add
lcall
jne
xchg
icebp
dec
sub
dec
lods
or
sub
in
mov
in
nop
or
jecxz
jae
pop
iret
add
or
insb
ja
xchg
imul
lods
movsb
jb
sbb
or
and
jbe
aad
cmpl
fs
out
cwtl
test
cmp
xchg
popl
push
pop
movsl
adc
and
arpl
lods
inc
push
mov
push
sub
scas
push
cmp
outsl
xchg
in
int3
mov
mov
xor
mov
pop
pop
mov
or
jl
test
leave
cmpsb
stos
jne
xlat
pop
outsb
jns
adcb
adc
mov
aad
std
in
inc
jmp
mov
out
cld
mov
js
add
mov
jle
mov
inc
push
fs
dec
sbb
mov
in
adc
xchg
fldt
push
or
inc
dec
cmpsl
push
pusha
icebp
mov
sub
xor
add
pop
aas
aad
jle
inc
jno
sbb
cmp
fs
jnp
lcall
or
gs
and
pop
jbe
jns
xchg
mov
xor
ja
mov
add
pop
mov
xchg
jle
jmp
arpl
adc
mov
pop
jmp
adc
and
cs
stos
je
sub
pop
ret
gs
pusha
mov
loopne
push
popa
or
loope
mov
in
int3
xchg
bound
mov
int3
mov
cltd
outsl
rcrb
pop
insb
mov
cltd
mov
dec
jns
addl
xchg
cmp
jecxz,pn
push
sbb
fcoms
mov
dec
jg
inc
shlb
mov
data16
daa
mov
lock
sbb
dec
je
call
mov
mov
mov
inc
xchg
test
addr16
pop
fidivrl
push
vmovaps
mov
mov
xor
lretw
jg
xor
out
mov
jo
insb
mov
sahf
pop
int
inc
aas
jae
jecxz
dec
jae
arpl
xchg
pop
xor
lods
jg
aad
iret
sub
fsubl
pushf
movsb
je
addr16
enter
es
or
stos
daa
push
xor
add
leave
rcll
and
iret
es
dec
pop
cmp
in
push
pop
scas
addb
out
mov
sbb
insl
jae
movsb
adc
cmpsl
push
aam
test
adc
enter
aas
pop
scas
jmp
fwait
insl
dec
aad
dec
sub
popf
inc
movsb
pop
or
jnp
or
inc
rol
gs
cmp
inc
sbb
ljmp
mov
out
mov
mov
jnp
out
rol
inc
sub
dec
cmp
enter
xchg
adc
and
push
mov
loopne
aaa
sub
or
add
sub
push
scas
or
xlat
hlt
out
or
push
gs
in
test
jle
lret
mov
das
arpl
mov
leave
xor
stos
ljmp
cmp
loope
movl
push
hlt
mov
ds
arpl
mov
in
jae
pop
pop
jb
sub
jmp
das
mov
out
push
aaa
push
lcall
dec
and
mov
mov
inc
pop
int
add
pop
sarb
or
shrl
les
mov
mov
fwait
jae
pop
movsl
test
dec
and
jbe
pop
fucomp
or
inc
call
aam
jae
nop
daa
std
outsb
adc
mov
and
pop
popa
add
sahf
or
or
adc
mov
and
dec
sbb
and
insl
in
je
add
stos
shrb
adcl
mov
add
adc
lahf
mov
pusha
outsl
jne
das
ficoml
mov
pop
scas
scas
dec
loop
movsl
mov
js
xchg
mov
ljmp
arpl
and
pop
sbb
rol
jmp
mov
mov
sbbl
jo
divl
enter
mov
gs
xchg
rolb
sbb
cmp
pop
mov
mov
jmp
push
and
sbb
andb
aam
je
outsb
dec
ja
jne
xchg
xchg
enter
test
pop
push
sbb
dec
sbb
ds
jbe
or
cmp
lds
push
pop
in
push
pop
adc
ret
or
adc
mov
fwait
mov
sbb
xchg
or
aas
mov
xlat
cmpps
sti
mov
movsl
jb
mov
test
add
outsb
pop
add
fidivrs
fcmovbe
shr
mov
cmp
adcl
lds
xor
push
popa
sahf
or
pop
lcall
iret
in
mov
jo,pn
loope
test
adc
push
xchg
inc
nop
imul
cmpl
xor
outsl
je
dec
fidivl
jnp
outsl
pop
imul
dec
aam
loope
mov
insb
push
je
dec
xlat
inc
orb
stos
xor
add
push
repz
and
out
jb
pop
sub
subl
icebp
imul
xchg
adc
dec
sbb
imul
arpl
mov
in
jns
pop
stc
imul
push
dec
pop
cmp
flds
in
pop
dec
pop
sub
fimuls
pop
push
rcrb
inc
arpl
lock
out
jnp
push
popa
mov
pop
pop
xchg
std
jl
enter
push
fcoml
out
pop
push
insb
and
pushf
cld
pop
pop
movsb
push
imul
jae
sbb
push
add
sbbl
inc
lods
pop
add
insl
fdivrs
or
dec
ds
mov
adc
mov
mov
ss
mov
push
outsl
sub
nop
das
push
subb
push
push
mov
or
rsqrtps
sbb
push
or
insb
mov
mov
mov
jg
mov
push
jmp
insb
push
fmuls
mov
adc
lods
xchg
es
in
std
shll
jmp
push
pop
pop
mov
pop
dec
insb
out
xchg
adc
mov
pop
in
stos
jb
dec
inc
pop
pushw
imul
cli
sbb
xor
popa
jp
adc
pop
inc
lods
stc
pushf
out
cmp
cmpsb
push
lahf
fildll
xorb
je
sbb
xchg
pop
in
popf
mov
adc
insb
inc
cmp
sub
sub
repnz
add
fisubrs
loop
or
ret
pop
clc
insb
mov
int3
cmc
dec
and
push
pop
sub
call
pop
hlt
xchg
jle
dec
sti
arpl
dec
fcompl
sub
pop
in
pop
mov
fs
dec
dec
mov
mov
ret
xchg
pop
in
hlt
inc
data16
inc
es
pop
cwtl
push
or
pop
xchg
push
imul
mov
xchg
mov
add
cmp
push
fs
pop
pusha
dec
insb
xor
jecxz
xchg
in
pop
out
nop
dec
imul
cwtl
jmp
adc
insb
sbb
dec
in
sbb
add
test
loope
call
out
enter
insb
dec
orb
pop
test
push
in
mov
push
pop
insb
pop
xlat
xchg
imul
aas
jmp
sub
insb
or
sub
pop
cmp
imul
pop
ds
jbe
pop
pop
ljmp
scas
test
loopne
pop
push
pop
jmp
xchg
inc
insb
sub
movsb
aad
sbb
dec
mov
jl
pop
mov
fs
xchg
fisubs
fstps
lea
dec
shrl
sti
mov
inc
iret
xor
inc
movsl
or
xchg
cmpsl
mov
mov
ret
andb
insb
out
insl
xor
movsl
insb
jg
sti
out
xchg
in
sub
pushf
xchg
pop
or
jb
xchg
ret
aam
jmp
and
push
stos
out
mov
int3
in
cli
xchg
xor
rcrb
adc
rorb
lcall
mov
pop
push
mov
addr16
fsts
sub
addb
in
dec
xor
scas
dec
cltd
rorb
fs
gs
mov
inc
push
ss
test
scas
dec
iret
xchg
sbb
pop
mov
lods
jns
rcrb
je
loop
mov
push
adc
outsl
in
mov
fs
mov
push
dec
imul
pop
test
loop
arpl
in
sbb
aad
xor
dec
add
test
insb
les
sbb
sub
pusha
push
mov
insb
daa
dec
into
or
xchg
imul
jp
mov
insb
mov
sbb
pop
gs
shrb
xchg
data16
push
ret
cli
into
insb
add
or
test
in
pop
jmp
mov
sbb
or
leave
pushl
dec
or
pop
popf
mov
pop
add
shrb
repz
lcall
cwtl
adc
ja
es
fs
inc
test
arpl
mov
fsubl
jle
pop
roll
ss
mov
in
js
in
cmp
aad
je
mov
inc
int3
mov
mov
mov
inc
mov
arpl
pop
data16
pop
imul
lods
insb
sub
nop
pop
imul
and
jp
pop
je
push
pusha
outsl
mov
push
mov
sbb
pop
bound
and
fs
push
jne
jo
and
in
mov
fs
inc
pop
jmp
in
pop
push
sbb
sti
movsb
mov
and
or
mov
aaa
ficoml
insb
pop
cld
xor
icebp
loop
sbb
mov
cmp
mov
sbb
lods
pop
jmp
push
pop
jle
push
jecxz
frstor
insb
dec
inc
mov
pop
inc
inc
imul
insb
xchg
test
mov
push
je
cmp
in
push
les
and
cli
lock
pop
mov
dec
xorl
out
or
cmc
push
repz
aad
xchg
jae
jns
outsb
out
mov
mov
lods
lds
inc
inc
pop
imul
mov
addr16
sbb
imul
test
inc
insb
fimuls
jno
mov
stc
loopne
pop
test
scas
fistps
push
imul
inc
cmp
jne
push
in
or
push
push
dec
sub
fistps
xchg
dec
in
imul
jl
or
pop
or
outsl
out
std
leave
dec
mov
imul
adc
mov
pop
insb
or
mov
push
insb
lahf
sub
pop
pop
sahf
decb
fcmovnbe
inc
imul
inc
pop
xor
ret
das
push
int3
inc
xor
fs
addr16
lods
jmp
xor
dec
dec
out
sub
push
mov
andb
xor
jmp
into
dec
out
sub
into
or
pop
push
dec
push
xor
ffree
cmp
inc
cmp
sbb
in
push
les
jl
fmull
insb
mov
xor
adc
int
icebp
sbb
and
dec
mov
imul
ret
lea
xor
test
addr16
scas
jmp
and
setbe
pop
inc
push
xchg
sub
movsb
jge
mul
js
push
subb
jb
dec
fiadds
bound
in
fisttpl
insb
pop
xor
xchg
data16
dec
and
pop
je
loop
push
loopne
test
imul
mov
ja
in
xor
pop
jmp
jne
dec
test
fs
test
xor
jl
insb
jb
lock
jmp
scas
insb
outsb
mov
out
cwtl
xchg
insb
jno
add
lret
sbb
outsl
addr16
sub
je
lods
xor
outsl
or
in
add
pop
int
xchg
es
jl
pop
push
or
xchg
pushf
dec
jne
aam
repnz
push
inc
add
movsl
daa
push
and
dec
xchg
dec
jae
sbb
and
ret
or
out
pop
mov
xchg
pop
adc
cmpsb
lret
and
shl
repnz
inc
xor
stos
and
or
adc
push
dec
xchg
repnz
inc
push
fsubrp
sahf
pop
mov
jl
or
mov
pop
mov
ud1
lahf
imul
jmp
jo
stos
insb
jno
xchg
pop
inc
cmp
pop
aas
push
mov
inc
sbb
aaa
lret
push
testl
outsl
lods
xchg
mov
pop
fsub
push
inc
sub
xor
pop
es
subb
sti
sbb
xor
aaa
ss
mov
cli
push
pushf
mov
and
cmp
xchg
mov
inc
imul
inc
in
fcmovne
scas
xchg
jmp
addb
jl
stos
inc
xor
aas
popf
inc
inc
xor
sub
mov
imul
int
push
push
cs
adc
inc
lock
dec
sub
in
and
jmp
or
dec
orl
inc
in
repnz
cli
xor
sbb
or
fcmovnu
andl
dec
xor
jae
je
xor
adc
push
push
fisttpl
xor
xchg
or
inc
lock
lea
ret
lods
pop
jge
mov
rorl
ficompl
test
push
and
push
jbe
push
pop
mov
dec
mov
data16
pop
sub
popa
and
xchg
adc
and
adc
pop
add
pop
fldt
and
mov
push
leave
lds
das
pop
push
pop
push
addr16
xchg
andl
in
dec
sbb
sub
jb
jns
mov
pop
imul
pusha
push
aaa
or
pop
imul
jmp
in
push
je
in
sub
cmp
imul
xor
dec
loope
xor
jno
and
in
arpl
fidivrl
gs
cmp
pop
addb
aaa
test
insb
jo
je
sarb
clc
pop
mov
mov
jl
testl
jbe
sub
cld
mov
adc
repz
push
cld
sub
test
push
sub
jae
push
pusha
cmpsl
in
imul
pop
push
out
imul
in
lods
fistpl
ret
xor
sub
jno
add
or
out
inc
andb
in
mov
adc
dec
and
cmp
lods
lds
in
cmp
cwtl
in
inc
push
lods
xor
inc
or
decl
xchg
lods
xchg
or
push
add
inc
ret
in
repnz
push
mov
repz
aad
es
sub
insb
jo
test
jmp
pop
sbb
or
cs
jmp
xor
inc
add
in
popa
test
fiaddl
cmp
cmp
lods
xor
stos
or
inc
scas
fiadds
dec
dec
sbb
je
inc
jne
push
in
mov
jb
adc
lods
pushl
pop
loop
inc
sub
jb
ss
scas
mov
push
cwtl
outsb
pop
lcall
xchg
sbb
daa
test
sub
pop
sti
mov
fisttpll
adc
addr16
in
and
fmuls
sub
test
ss
pop
daa
out
inc
ret
imulb
mov
adc
pusha
outsl
lahf
adc
or
cmc
xchg
adc
add
push
insb
jbe
sub
mov
out
in
xor
push
movsl
leave
iret
inc
mov
cmp
xor
or
adc
sub
and
or
leave
sbb
pop
mov
lods
out
enter
pop
imul
mov
jae
dec
pusha
cmp
loopne
inc
ja
test
frstor
in
imul
xchg
ret
jl
mov
jno
mov
jbe
int
jne
mov
and
in
mov
pop
scas
cltd
mov
fisubrs
mov
aad
cs
pop
imul
imul
out
jno
xchg
push
scas
fldl
lcall
repnz
mov
addr16
pop
and
bound
push
aam
mov
into
das
or
pop
int3
ret
pusha
repnz
mov
lock
leave
scas
inc
imul
imul
and
adc
int
xor
roll
addr16
mov
adc
sbb
xchg
pop
in
dec
lret
outsl
out
cmp
mov
push
sbb
dec
push
ret
sti
shrl
outsb
imul
imul
fucomi
pop
xor
mov
and
cmp
iret
in
rorb
adc
mov
rorb
test
pop
gs
pop
sub
imul
gs
lds
sar
cwtl
outsl
mov
addr16
xor
dec
gs
jbe
pop
sub
in
add
mov
in
pop
sti
xlat
arpl
jecxz
sub
fidivrs
dec
or
leave
or
inc
loopne
lods
pushw
lds
and
dec
mov
inc
adc
ficoms
jmp
imul
mov
sub
jb
and
sub
dec
mov
sbb
pop
loope
cmp
mov
pusha
and
jbe
data16
inc
leave
jne
das
sbb
sarb
sub
sbb
sbb
add
adc
test
sub
outsb
gs
jo
cmpsb
pop
imul
cmpsl
je
mov
insl
in
js
lret
aaa
jo
or
and
xor
add
or
sbb
in
outsl
inc
push
mov
xchg
loopne
cmp
mov
inc
mov
lods
shll
xchg
dec
adc
and
lods
sub
jle
adc
pusha
pop
mov
jo
and
fdivrs
je
dec
xor
inc
push
add
outsb
fcoml
leave
sub
jnp
pop
lret
mov
pushf
lds
jnp
outsl
fwait
adc
int3
mov
jae
add
imul
hlt
sbbl
lods
xor
and
inc
arpl
lret
mov
pop
lcall
jne
pop
jnp
iret
push
cmc
xchg
lods
lcall
or
adc
mov
pop
jbe
lods
ds
cmpsl
inc
push
mov
mov
enter
xchg
stos
lahf
imul
outsb
frstor
inc
call
je
adc
cmp
lods
sti
cmp
stos
adc
sbbl
push
adc
ret
insb
outsb
mov
xchg
stos
cmp
sahf
pop
inc
mov
pop
int
popf
insb
insl
stos
imulb
jg
dec
lock
xor
fsubr
lods
inc
mov
or
and
movsl
in
mov
int3
pop
xchg
out
inc
leave
or
inc
or
sarl
add
ss
mov
and
xor
imul
call
pop
repnz
add
jo
lods
and
dec
dec
test
pop
mov
subb
in
mov
pop
xchg
sub
jo
mov
cmp
inc
mov
loop
fst
data16
xor
dec
and
push
inc
insb
insl
int
push
adc
outsb
rcll
cmp
dec
call
daa
dec
mov
xchg
jns
pop
scas
aas
imul
jp
jmp
ljmp
in
leave
push
mov
mov
sbb
add
mov
je
push
inc
popf
fcomi
or
pop
lods
hlt
or
sub
lods
xchg
scas
and
lods
es
pop
add
inc
in
leave
mov
push
int
pop
mov
pop
pusha
dec
iret
imul
addr16
insb
insl
repnz
push
in
inc
nop
ficompl
pop
insb
jae
cmp
js
push
lods
pop
xchg
insl
inc
push
xchg
sub
mov
inc
push
xor
addr16
subb
inc
stos
jle
hlt
mov
push
and
imul
pop
aad
movsl
mov
bound
in
jo
out
test
dec
imul
bound
iret
gs
cmp
imul
mov
fcomi
jecxz
and
sub
scas
leave
imul
pop
mov
dec
popf
stos
iret
mov
imul
cmpsb
movsl
gs
mov
adc
idiv
leave
imul
sti
imul
pop
adc
imulb
sub
cmc
and
push
or
sub
pop
leave
adc
dec
cmp
repnz
inc
aam
insb
outsl
pop
sahf
xlat
and
hlt
loope
iret
and
repz
movb
push
sbb
jbe
in
insl
leave
dec
sbb
lret
sub
fmul
movsl
pop
mov
test
or
inc
testl
pop
sahf
out
add
add
pop
or
xchg
jne
and
mov
push
lods
and
mov
jno
or
inc
out
fdivrl
pop
sbb
imul
jmp
bound
nop
call
int
or
jae
icebp
int3
adc
mov
cld
inc
imul
mov
xor
movsl
pop
jmp
pop
cwtl
lods
pop
imul
adc
pop
imul
mov
ja
pop
test
lods
imul
pusha
fistpll
jle
or
jl
rorb
dec
in
mov
pop
adc
std
testl
std
scas
adc
sbbl
adc
pop
outsb
jnp
or
sub
in
xchg
push
shrb
jp
xor
jecxz
push
add
mov
adcl
add
pop
in
adc
mov
loope
in
jae
sbb
pop
xchg
xor
dec
jl
leave
out
inc
insb
xchg
in
pop
mov
push
test
insb
ja
inc
adc
jns
jl
mov
sub
std
insb
pop
adc
or
push
push
insb
mov
push
into
test
repnz
mov
mov
dec
std
in
mov
mov
lods
test
sbb
push
sub
mov
je
mov
gs
pop
and
mov
int3
imul
xchg
fwait
insb
stc
mov
aas
lahf
adc
or
xor
pusha
notb
sub
out
insb
adc
inc
ja
loope
imul
or
push
push
pop
lds
adc
cmp
f2xm1
pushf
insb
int3
in
lcall
imul
insb
jg
xchg
addb
idiv
cltd
bound
xchg
pusha
pop
xadd
imul
mov
test
jp
inc
or
or
jns
fisttpll
ljmp
sbb
gs
xchg
loope
mov
addr16
push
call
gs
dec
daa
cmp
imul
ja
push
lea
cmp
cmpsl
push
cmp
mov
insb
and
cs
sbb
inc
scas
insb
cli
sbb
addl
xchg
cmp
imulb
sub
sbb
adc
xchg
xor
stos
mov
and
mov
pop
add
pop
movsb
addr16
pop
pusha
out
sbb
mov
mov
cli
inc
push
in
arpl
mov
pushl
movsb
mov
lds
in
jne
xor
mov
insb
fldt
adc
rcrb
ja
mov
in
das
xor
lock
sub
movsb
and
lods
js
int
insb
cmp
cli
dec
inc
mov
dec
repnz
xchg
sub
pop
mov
push
mov
xchg
push
in
jne
loop
jmp
sub
aam
sub
insb
xor
jo
rolb
add
ljmp
and
lcall
and
sub
cli
push
imulb
addr16
mov
or
pop
or
pop
rcll
jno
pop
add
xchg
push
jp
dec
or
in
mov
movsl
sub
sti
adc
js
inc
cmp
mov
mov
adc
pop
xorl
push
push
js
xchg
popf
outsl
sbb
cmp
in
loope
cmp
int3
adc
jo
mov
shlb
je
fdiv
js
aas
iret
outsl
mov
test
outsl
loop
aad
out
xor
hlt
mov
mov
inc
push
inc
add
insb
fcompl
imul
jns
cmc
cmp
jae
jle
cld
pop
and
pop
imul
leave
mov
insb
jno
jb
xor
xchg
pop
testb
lcall
mov
hlt
sub
mov
jge
push
mov
ljmp
ret
outsb
add
fwait
jae
out
es
insb
pop
mov
out
push
mov
xchg
or
shrb
in
xor
int
hlt
loop
insb
add
aad
les
insb
rorl
mov
push
insb
pop
das
faddl
mov
movsl
clts
in
lahf
adc
fdivs
insb
mov
lods
in
arpl
cmp
insb
push
lcall
out
lods
mov
insb
adc
push
clc
insb
std
aam
fs
and
insb
dec
jno
js
adcl
gs
dec
adc
push
imul
fstl
mov
inc
cltd
insb
xor
stos
leave
ret
popf
insb
and
push
inc
mov
cmc
xchg
jle
outsb
cmp
testb
ja
repz
bswap
mov
mov
and
ret
iret
popf
aam
jp
insb
jp
je
push
lahf
aas
cltd
push
ljmp
dec
fistpl
hlt
or
rorb
push
dec
and
in
xchg
movsl
jp
addr16
in
push
iret
pop
inc
jae
mov
cmp
adc
mov
jo
xor
mov
lock
adc
sub
push
sub
pusha
ja
insb
inc
faddl
aad
add
xor
dec
adc
sbb
cld
cmp
sbb
es
in
mov
rep
jge,pt
imul
lds
in
mov
sub
or
and
lret
push
outsl
loop
sbb
stos
and
jg
dec
test
and
int
pop
pop
loopne
imul
or
fildll
push
call
push
and
lea
xor
test
rcrl
add
or
push
pop
rolb
out
or
push
fs
outsl
jae
enter
jmp
in
lahf
cld
push
and
pop
jbe
out
jg
push
repnz
dec
pop
fmuls
sub
dec
lods
sub
je
call
iret
jbe
cmp
jmp
add
jnp
insb
inc
dec
lds
mov
imul
nop
lcall
jo
sbb
stos
push
out
jmp
rcl
data16
in
mov
dec
scas
je
sub
popa
push
test
pop
notl
jmp
sti
inc
jmp
and
cmc
imul
pop
or
sbb
jl
outsl
sub
aad
add
stos
mov
sbb
or
shrb
test
ss
aaa
mov
dec
push
xor
out
in
and
mov
dec
pop
cwtl
adc
das
jg
insb
push
aam
push
cmc
call
sar
cmp
stc
pop
sbb
test
push
mov
insb
and
ljmp
sbb
xorl
mov
jo
xor
orl
iret
mov
pop
imul
mov
lcall
sti
insb
stos
mov
or
cld
mov
out
in
das
xor
mov
sahf
add
adc
arpl
cmp
test
jo
fdivl
insb
fs
sbb
jle
gs
icebp
paddsb
pop
insb
and
mov
pop
adc
xor
and
xor
pop
xchg
inc
out
mov
or
or
xchg
ret
push
xchg
fldt
mov
clc
adcb
iret
push
cld
mov
ds
test
push
imul
insb
xor
push
inc
idivb
stc
daa
and
push
fadds
mov
dec
mov
xchg
mov
insb
push
dec
mov
insb
push
repnz
pop
mov
aaa
or
aas
popa
loopne
pop
mov
dec
sbb
cmc
mov
imul
stos
inc
insb
ja
fnstcw
lea
rcl
orb
insb
push
and
cli
xchg
adc
aaa
les
out
xchg
xor
sbb
push
stc
es
mov
arpl
sbb
xor
cmpsb
les
inc
xor
cmc
jge
xlat
xor
into
pop
sbb
pop
mov
faddl
insb
mov
shll
andb
mov
and
and
fistps
ljmp
xlat
or
insb
pushl
scas
mov
fisubs
xor
dec
add
xor
nop
adc
push
shrl
or
jno
adc
popf
xor
addb
push
mov
jl
gs
or
call
loopne
sbb
sahf
push
in
notl
jbe
divb
mov
insb
hlt
mov
icebp
adc
into
cmp
ficompl
pop
add
pop
sbb
insb
push
es
test
call
sahf
insb
xor
ret
dec
loop
adc
add
jl
xchg
push
das
insb
jno
push
cmp
lods
insb
jl
pop
sbb
pop
test
repz
push
inc
add
clc
push
sbbl
inc
arpl
dec
mov
push
xchg
sub
repnz
insb
pop
cmc
fistpl
pop
mov
xchg
dec
cmp
dec
mov
popa
xchg
sbb
cmp
repnz
insb
andb
jb
insb
mov
mov
insb
push
jmp
jp
insb
ret
sahf
mov
insb
test
xchg
lods
cmp
out
insb
jnp
dec
clc
or
cmp
int3
add
pop
insl
xchg
je
insb
mov
lds
aad
mov
insb
lret
adc
fmulp
mulb
hlt
lahf
jae
add
das
in
sub
pop
xchg
and
push
out
pop
stc
xor
jns
insb
mov
jnp
sarb
sbb
pop
ljmp
xor
gs
or
cmp
sub
pop
dec
or
sarl
mov
sbbl
std
or
jg
mov
cmp
insb
incb
xchg
pop
sub
pop
rol
orl
or
lock
dec
dec
push
out
in
gs
jp
jmp
adc
out
lcall
add
mov
dec
pop
xor
subl
mov
push
movsb
and
mov
pop
int
insb
jecxz
loopne
ret
pop
dec
in
jo
jle
stc
loop
cwtl
pop
dec
xchg
shll
pushf
je
xchg
enter
insb
lock
sbb
outsl
pop
shrb
stos
les
cmp
cmp
pop
pop
dec
cwtl
call
loop
insb
sub
xchg
mov
movsb
or
push
lea
sbb
push
mov
mov
arpl
xchg
mov
lds
push
in
add
mov
out
ret
jno
into
lods
cli
insb
adc
mov
test
push
cwtl
push
insb
pop
cmp
decb
test
and
lock
jge
dec
jae
mov
scas
ss
add
imul
mov
ds
stos
lret
das
mov
loopne
iret
insb
in
test
jne
mov
fsubr
das
into
test
out
aad
insb
sarl
mov
insb
jo
mov
xchg
insb
dec
cmpsb
into
daa
lods
or
cli
sbb
data16
shlb
fldcw
insb
push
jmp
cli
fildll
sub
test
mov
insb
pop
adcl
jnp
arpl
pop
cmp
dec
lcall
mov
out
insb
test
sub
cltd
push
leave
icebp
dec
push
sub
stos
lods
lahf
xchg
nop
xor
and
fs
xchg
lods
dec
inc
scas
insb
or
cmp
dec
sub
and
addr16
and
insb
push
into
inc
xor
popf
jbe
test
fs
push
inc
pusha
fwait
lods
jae
stos
insb
mov
loopne
mov
mov
dec
push
lahf
ret
shrb
jae
lods
call
loop
jle
inc
es
movsl
insb
push
decb
and
je
insb
cltd
cmp
xor
iret
arpl
mov
daa
adc
jnp
push
lods
add
xlat
subl
mov
push
imul
or
ja
insb
pop
sbb
pushf
inc
push
repz
out
xchg
jl
pop
dec
insb
mov
push
pusha
insb
stos
pop
add
call
mov
and
arpl
popf
data16
flds
int3
push
xor
pusha
push
icebp
imul
push
scas
outsb
xorl
movsb
insb
icebp
dec
adc
push
idiv
mov
data16
insb
and
mov
jbe
inc
ret
adc
dec
insb
je
ror
fisttpl
arpl
xchg
or
imul
mov
pushl
xor
in
jnp
mov
insb
push
popf
jns
fidivrl
jle
imul
push
outsb
dec
mov
mov
dec
test
jl
lret
leave
hlt
cmp
push
rorb
dec
pushf
movsl
mov
in
iret
adc
mov
xor
rep
push
pop
xor
sub
adc
orl
sub
mov
gs
jle
mov
stc
out
push
cmp
rol
cmc
insb
aam
dec
add
sub
sbb
pop
cmpsb
ja
push
and
cmpsl
icebp
mul
lds
insb
pop
orb
pop
shll
mov
insb
lret
fs
jp
mov
rcrl
js
scas
add
jecxz
xchg
in
loope
loop
repnz
dec
insb
fdivrl
insb
jmp
add
call
out
mov
js
or
xchg
insb
mov
pop
jo
insb
xchg
push
hlt
dec
movsb
insl
in
gs
sub
push
lcall
adc
add
cwtl
in
dec
sbb
inc
pop
repnz
pushf
cs
xor
insl
gs
fs
fimuls
clc
insb
push
into
loope
jg
xor
sub
mov
pop
scas
jbe
lcall
dec
add
jb
insb
mov
or
in
test
movsb
pop
aas
xor
std
insb
test
jl
das
mov
or
and
insb
inc
lret
xchg
mov
insb
ds
arpl
jge
dec
sub
lret
movsl
or
call
je
or
test
cmp
adc
popa
insb
fisubl
insb
sub
je
insb
cld
aas
pop
xchg
jl
push
insb
or
dec
pop
pop
lcall
ljmp
aaa
test
rcll
arpl
incb
adc
js
pusha
testl
mov
and
insb
mov
and
insb
pop
leave
out
mov
pop
shrl
dec
outsl
mov
cmc
out
lea
cld
aad
and
or
inc
jns
stc
inc
insb
xchg
outsl
mov
push
and
pop
insb
lahf
sbb
insb
jg
sub
bnd
pop
js
push
xchg
add
insb
jae
lods
gs
xchg
in
insb
shll
sbb
cmp
cmpsl
mov
insb
dec
inc
xchg
fistl
push
les
sbb
add
test
jns
rolb
fsubr
es
insb
jle
fwait
lods
xchg
insb
mov
test
mov
in
enter
sahf
pop
mov
push
gs
arpl
shlb
int
shll
adc
fcoml
mov
jge
mov
pop
insb
hlt
inc
movsl
dec
sub
dec
or
sti
lcall
mov
push
test
ffreep
mov
lods
loop
sahf
add
pop
shrb
ds
mov
push
cmp
outsb
or
pusha
xor
lods
sbb
insb
dec
rclb
push
les
fsubl
mov
add
adc
add
lcall
push
popf
mov
mov
adc
push
xchg
insb
pushf
fsubrl
jp
pop
int
cld
xor
clc
in
pusha
or
insb
and
ror
pop
out
jns
pop
sar
dec
xor
jae
pop
ret
mov
jmp
mov
incl
ret
xchg
test
xchg
insb
inc
push
push
push
cltd
js
addr16
jbe
cmp
imul
sbb
call
push
sbb
iret
xlat
arpl
adc
jb
insb
cmpsb
ficomps
jbe
dec
mov
push
ljmp
fadds
icebp
jnp
xchg
lret
fldcw
adc
stc
jp
insb
and
rcr
lock
imul
out
mov
nop
mov
jb
hlt
lds
dec
mov
mov
inc
test
mov
aaa
insb
mov
jmp
iret
insb
mov
push
in
jae
ja
jmp
fdecstp
jmp
fiadds
add
insb
movsl
dec
cltd
popf
ljmp
bswap
bound
nop
mov
lret
xor
sbb
add
mov
or
mov
adc
mov
add
mov
gs
sbb
jae
pop
rclb
fimuls
mov
andb
into
mov
ja
mov
nop
jb
insb
mov
ret
push
shrl
ss
movsb
enter
pop
push
lea
xchg
mov
adc
insb
divl
adc
inc
xchg
pop
aam
shrb
outsb
daa
jle
cld
mov
test
jp
insb
sahf
gs
lret
dec
push
jnp
test
insb
pusha
add
cmp
jbe
fisubrl
mov
shrb
outsb
movsl
xchg
ret
imul
mov
sahf
dec
lret
mov
insb
cs
jmp
push
xchg
inc
incb
dec
ss
lods
jb
and
xchg
push
xor
mov
inc
addr16
fistpll
dec
imul
mov
cld
and
dec
lea
in
pop
jp
sar
pushf
jo
hlt
dec
imul
je
nop
cmpsl
imul
int3
mov
fcomps
mov
repz
cmp
push
sahf
aad
mov
sbb
adc
imul
scas
jg
clc
mov
add
dec
and
repz
imul
stos
hlt
jle
xor
pusha
pop
dec
xor
loope
xlat
hlt
in
arpl
test
mov
push
insb
ja
xor
je
mov
insb
out
movsb
mov
insb
loope
imul
mov
jns
cs
xor
addr16
out
dec
cmpsl
int3
cli
popf
xchg
insb
or
cwtl
jle
insb
cmp
scas
js
loop
pop
mov
ja
lds
jo
sti
lahf
jb
test
xor
bound
mov
xor
mov
adc
insb
cs
mov
popa
loop
test
imul
in
cmp
out
stos
lea
mov
or
xchg
xor
loope
out
fs
test
mov
push
xchg
xorb
jle
push
jge
mov
into
or
cmc
insl
and
outsl
and
or
bound
movsl
adc
gs
aad
test
outsb
push
or
inc
mov
cmpsl
test
outsl
js
cltd
push
add
cli
orl
inc
das
jmp
xchg
gs
hlt
mov
pop
pushf
mov
popa
or
xor
imul
dec
jp
dec
ja
jmp
mov
aas
push
js
inc
sbb
loope
loop
jae
jmp
jnp
cmpb
fsubs
out
and
sub
ss
iret
mov
js
push
gs
daa
movsl
gs
ljmp
and
pop
insb
jns
cmp
mov
sbb
adc
gs
jne
adc
and
insb
gs
jb
and
mov
int
pop
inc
dec
inc
xchg
pushf
loope
mov
mov
push
subb
sbb
out
inc
gs
lcall
insb
and
aas
dec
dec
mov
push
out
jno
cmp
hlt
dec
pop
aaa
or
xchg
insb
ljmp
fsub
sbb
insb
mov
sub
or
sahf
or
insb
mov
inc
test
in
js
mov
int3
shll
out
insb
pop
add
mov
imull
sbb
lods
ljmp
fsubl
xchg
int3
adc
ds
add
sar
jno
mov
mov
je
inc
fwait
insb
xchg
and
rclb
cli
loope
xlat
gs
insl
popa
mov
and
movsb
imul
mov
and
jle
addr16
in
loopne
mov
cmpsb
inc
pop
dec
xchg
insb
sbb
inc
pop
mov
adc
hlt
cmp
mov
xor
or
and
lahf
push
cs
xor
or
scas
push
insb
pop
or
and
ret
insb
xor
adc
movq
xor
mov
shrb
in
ss
test
xor
mov
mov
insb
cmp
pop
cmp
insb
clc
pop
aad
enter
pop
xchg
jl
xor
xchg
insb
sahf
mov
mov
cld
aam
cmp
test
cmc
jno
or
sub
mov
cmp
in
jbe
xchg
loop
fidivs
sub
jmp
insb
jl
or
repnz
and
cltd
xchg
ss
sbb
sub
lret
inc
lock
insl
cld
or
out
in
lret
out
out
aaa
loope
repz
addr16
xlat
int
or
xchg
cmp
out
xchg
jp
fs
mov
in
xchg
add
cmpsl
fisttpl
leave
and
sarb
inc
push
jne
push
sahf
sbb
nop
in
lock
sub
mov
add
insb
shr
les
imul
es
pop
or
mov
dec
insb
dec
mov
icebp
cmp
xlat
pop
xor
insb
push
insb
pop
data16
push
jmp
insl
xchg
aam
iret
sbb
mov
ja
or
imul
nop
jns
dec
mov
insb
leave
mov
insb
mov
or
ds
insb
dec
pop
paddusb
jns
pop
in
int3
fwait
push
mov
scas
sbb
imul
push
mov
xchg
arpl
cmp
mov
insb
dec
add
inc
into
sarb
test
or
sbb
mov
jo
dec
insb
and
ret
dec
adc
pop
cltd
imul
mov
pop
test
ja
stos
loopne
cmp
sbb
inc
jmp
xor
xlat
insb
mov
mov
inc
popf
jbe
imul
sbb
jae
repz
std
xchg
push
outsb
jmp
enter
shrb
mov
pop
jno
add
insb
mov
push
mov
nop
xlat
outsb
push
decl
sub
mov
stos
lds
rclb
sahf
imul
inc
pushf
push
cmp
cmp
adc
mov
popa
and
imul
ror
js
data16
xchg
outsb
pop
mov
and
or
dec
jp
sbb
mov
xor
ljmp
sti
test
testb
push
or
sbb
insl
insb
pusha
sub
insb
je
xor
add
in
insb
popa
stos
lahf
mov
daa
jb
insb
out
adc
mov
inc
push
imul
in
ss
pop
insb
pop
or
fisubrl
stos
in
ds
mov
or
insb
xchg
xchg
fildll
popf
int3
and
stos
dec
imulb
and
cmc
or
inc
adc
std
enter
jmp
push
jl
addr16
insb
scas
push
daa
pop
sub
push
xchg
scas
pop
jmp
fisubl
not
lods
imul
rorl
insb
pop
jne
aaa
push
leave
loopne
insb
test
mov
xchg
pop
arpl
in
in
das
push
hlt
mov
sbb
mov
or
mov
xor
aas
jle
sub
insb
add
cltd
test
mov
dec
fcoml
cld
movsl
out
insb
inc
inc
xchg
cmp
xor
jbe
push
inc
jno
ret
lods
inc
sbb
insb
pop
mov
add
pushf
popf
sub
lods
sub
ret
lcall
xor
mov
dec
cmp
fimuls
push
mov
xor
leavew
testl
arpl
lahf
insb
call
shl
add
mov
out
insb
mov
popf
mov
jnp
imul
xchg
js
imull
pop
lret
jne
xlat
movsb
rclb
insb
js
adc
int
ds
out
adc
cmc
bound
or
loopne
and
jae
mov
inc
add
pop
mov
insb
xor
xchg
mov
inc
inc
push
xchg
lods
mov
push
lea
or
or
jg
jge
sbb
mov
scas
push
push
pop
ljmp
stc
addr16
in
xlat
xchg
lds
mov
js
cmp
dec
ja
push
insb
sub
jae
mov
gs
lods
popa
pushf
jp
add
insb
fstp
xchg
ss
nop
lret
mov
std
aas
ret
dec
dec
jb
insb
or
das
sub
insb
push
jle
ret
dec
xchg
addb
aaa
fs
cmp
cld
movsl
mov
sar
mov
rcll
andl
xor
mov
push
gs
ja
or
sbb
adc
sahf
inc
lods
or
cltd
imul
mov
daa
insb
movsb
stc
cltd
mov
mov
jecxz
int3
sbb
or
cmp
insb
xor
js
insb
push
popa
arpl
mov
cmpsb
in
jnp
xchg
pop
loop
add
mov
out
mov
mov
mov
in
xchg
cmp
popa
popf
insb
mov
pop
stc
dec
je
pop
movsb
push
sub
push
mov
adcl
xchg
lods
jl
imul
inc
popa
xchg
in
mov
je
inc
std
hlt
insb
ljmp
fsubl
sub
mov
cld
out
jle
insb
sbb
insl
nop
push
std
push
cwtl
insb
add
push
mov
or
lods
add
fsubrs
aam
je
push
mov
add
das
dec
cmp
in
xchg
pop
dec
jo
or
and
test
pusha
push
mov
cltd
mov
nop
pop
scas
gs
mov
stos
ret
sbb
testb
sbb
adc
mov
out
push
dec
mov
adc
add
scas
push
insb
out
pop
inc
pcmpeqw
pushf
cwtl
jb
insb
shrl
jl
bound
imul
popa
aam
imul
scas
pushf
ffreep
pop
lock
jae
jnp
jg
mov
sbb
mov
xchg
inc
add
dec
loop
inc
inc
adc
lahf
cmp
cmp
dec
imulb
aam
insb
sbb
mov
in
pop
insb
pop
cli
add
testl
and
rcrb
inc
sti
xchg
fisubrl
andb
insb
neg
or
xchg
xor
insb
xor
popf
sub
xor
mov
sbb
out
xchg
and
jbe
pusha
pop
jp
mov
dec
insb
mov
xor
pop
bound
and
ret
sbb
sbb
ds
dec
int3
fwait
clc
dec
xchg
loop
mov
insb
cmp
testl
inc
fildll
sbb
sbb
cmpsb
fmul
in
pop
xchg
popa
addr16
mov
in
jb
test
mov
mov
or
adc
mov
insb
and
xlat
aad
dec
lods
mov
jno
loopne
ss
cvtps2pd
addr16
push
faddl
ja
sub
sysexit
orb
xor
aad
sbb
xchg
sub
clc
imul
jns
inc
adc
jl
mov
inc
nop
data16
jmp
adc
int
repnz
mov
movsb
pop
in
arpl
faddl
shrl
xorl
aad
cmp
les
jnp
movsl
leave
xlat
and
push
loop
in
add
fidivrl
out
dec
jns
imul
or
test
sbb
cld
and
out
arpl
lods
lcall
jl
push
js
cwtl
insb
rorl
xorb
ret
or
fwait
mov
rolb
shlb
mov
mov
jg
push
movsb
repz
js
insb
inc
leave
mov
repz
push
bound
mov
mov
add
push
stc
cmpsl
insb
lahf
dec
jns
test
in
xor
add
xchg
mov
ficompl
pop
stos
add
adc
inc
dec
scas
pop
insb
or
dec
jl
test
pop
insb
push
mov
stos
out
pop
sbb
mov
insb
jle
les
leave
clc
mov
mov
dec
mov
adc
insb
gs
lds
insb
data16
mov
loope
dec
and
cmpsb
insb
sbb
lcall
ljmp
inc
pop
cmc
or
sbb
out
movsl
push
leave
jno
fcoms
in
push
dec
ja
imul
xchg
push
test
insb
sti
add
gs
cmc
or
pop
dec
or
sbb
js
insb
xchg
dec
ja
jmp
mov
cmp
pop
hlt
outsl
std
movsl
add
xlat
icebp
adc
stos
lds
lock
test
aad
inc
inc
iret
pushf
pop
jg
jbe
jb
cmp
icebp
mov
sbb
insb
mov
in
or
pushf
mov
mov
pop
add
jle
sub
mov
push
outsl
fwait
stos
mov
sub
xor
in
add
push
lock
test
sub
adc
and
andb
add
data16
cmpsb
jg
insb
mov
push
add
fdivrl
aam
nop
dec
jb
fdivr
or
and
pop
into
in
cld
mov
adc
mov
in
mov
and
push
xchg
push
repz
dec
mov
stc
mov
aas
xor
or
push
sbb
jmp
ljmp
mov
loopne
lds
xor
add
sbb
imul
push
insb
sti
repz
pop
das
and
out
mov
cmp
jo
jbe
xchg
mov
pop
sub
int
dec
mov
sub
and
jns
xchg
xor
dec
mov
nop
xor
xor
push
lods
lret
cli
out
insb
sub
pusha
add
in
frstor
andb
push
inc
cs
push
dec
push
outsb
insb
ljmp
xchg
pusha
in
insl
inc
cld
insb
sub
adc
ret
and
push
out
mov
rcrl
sti
stc
or
push
add
cmc
stos
cmpl
aam
out
stc
cld
imul
cmp
test
and
jge
lretw
aas
fcomps
mov
in
adcl
mov
xor
push
jle
lcall
jno
outsb
push
cmc
out
jmp
int3
loopne
xchg
cltd
jae
jns
test
fstps
dec
xchg
push
outsl
push
pusha
test
mov
push
dec
loope
shll
mov
call
inc
cmp
pop
movb
lods
inc
movsl
jl
jae
mov
aaa
in
lods
dec
enter
inc
stos
or
imul
fldt
pop
pop
ljmp
jb
push
insl
rcr
cmp
cmp
scas
xchg
das
aad
push
test
popf
jmp
or
mov
imul
sti
call
insl
cmp
shrl
xchg
sbb
sub
loope
dec
int
jns
or
test
scas
adc
and
vmovd
insb
rcrl
jecxz
mov
xchg
insb
adc
idivl
jnp
adc
push
mov
popa
mov
pop
and
fsubl
xchg
imul
xchg
pop
mov
sub
test
adc
sbb
pop
push
scas
insb
jecxz
jo
test
hlt
insl
insb
mov
or
fs
imul
cld
out
jmp
and
rol
push
dec
aam
imul
mov
imul
jl
or
ds
into
mov
insb
sbb
xor
and
cli
pop
insb
sbb
out
mov
xchg
dec
pop
fcoml
insb
dec
cwtl
add
xchg
sub
aaa
ljmp
mov
ret
nop
lds
pop
and
mov
add
leave
js
cmc
mov
ficompl
out
imulb
mov
mov
cmp
orw
nop
jmp
arpl
sub
xchg
jne
xchg
in
sub
data16
mov
dec
and
js
jge
fisubrl
inc
testb
mov
xlat
mov
cmp
int
scas
sbb
scas
aam
mov
in
shrb
sbb
lret
jnp
add
jmp
test
icebp
in
jbe
loope
adc
pop
pop
dec
lret
mov
xchg
xor
test
cli
cltd
leave
insb
aas
lods
dec
fsubl
aad
imul
insb
mov
lea
sahf
movsl
or
loope
outsb
mov
daa
call
jle
sbb
insb
add
xor
jg
insb
ficompl
add
xor
fsubr
pop
pop
jne
cmpsb
je
aas
testl
add
insb
out
ror
xlat
pushf
sbb
ds
pop
imul
cltd
popa
insb
fbld
repnz
adc
gs
outsb
sub
mov
adc
and
mov
sub
lds
in
loope
and
inc
jg
out
lahf
jbe
js
push
adc
mov
stos
push
ror
xchg
mov
ljmp
lcall
insb
lods
cmp
xchg
pop
fwait
push
insb
in
mov
pop
insb
mov
lret
sahf
out
jb
insb
xchg
in
mov
cmp
and
dec
xchg
dec
insb
aad
sti
ret
cwtl
mov
jae
mov
push
cmpsl
and
dec
insb
sub
push
pop
lock
in
sbbb
ficomps
lea
loope
insb
into
or
test
insb
adc
lret
insb
popa
sar
lea
in
das
cmp
sub
sbb
loopne
fs
pop
call
insb
shlb
jecxz
push
cwtl
sbb
jb
jo
and
cmpb
push
mov
jb
lock
sbb
push
sub
insb
push
aas
sbb
ds
int
insb
cld
les
pop
arpl
sbb
je
mov
into
adc
sbb
jo
pushw
insb
or
push
adc
xchg
rorl
dec
xor
popf
subb
jmp
push
mov
add
xor
arpl
in
cmp
insb
and
lahf
ja
xor
outsl
aam
insb
sub
adc
in
aad
dec
fadds
gs
sbb
leave
es
mov
pop
shr
jle
insl
out
in
imul
add
inc
sbb
add
push
dec
pushf
cmpsl
push
sbb
orl
jmp
popl
in
mov
js
fldt
mov
push
insb
sbb
xchg
push
xor
outsb
js
dec
daa
xchg
clc
push
or
jae
push
fs
in
mov
and
mov
dec
popa
dec
mov
pushf
mov
push
xchg
arpl
push
insb
sub
xor
bound
jecxz
dec
int
sbb
pop
jl
and
xchg
jl
jae
jge
add
adc
jno
push
insb
xor
stos
sbbl
xor
fcoms
insb
mov
call
daa
sub
xchg
pop
out
sbb
fnstenv
insb
dec
sbb
sbb
in
orb
pop
insb
mov
or
xchg
push
mov
insb
adc
imul
fcmovbe
lods
scas
ret
or
ljmp
dec
hlt
out
mov
dec
leave
inc
shlb
dec
inc
inc
mov
outsb
mov
jle
mov
loopne
imul
jmp
pop
insb
mov
repnz
adcl
mov
xchg
pop
lock
stc
in
xchg
mov
push
movsb
mov
xlat
add
stos
insb
mov
sbb
insb
imul
outsb
insb
jge
lret
pop
test
insb
sahf
dec
xor
insb
movsb
sub
adc
dec
pushf
insb
fwait
push
mov
mov
dec
pop
jo
insb
outsl
xor
aas
pusha
cmp
push
inc
lods
inc
adc
pop
push
orl
cmp
ret
mov
lods
cmp
fsubrl
sbb
aam
insb
sub
jbe
cld
iret
push
pop
insb
push
pop
inc
fucomip
or
insb
dec
jmp
pop
in
xor
mov
insl
lods
mov
scas
gs
xchg
clc
in
in
mov
sbb
xor
inc
movups
jno
out
mov
clc
insb
lret
cmp
sub
sub
add
in
fsts
insb
cwtl
or
xchg
es
and
insb
adc
outsb
pop
repz
insb
test
pop
gs
mov
adc
shll
loopne
movsl
sbb
sbb
mov
cmpsb
repz
insb
adc
inc
mov
or
repnz
insb
subl
sbb
mov
xor
cmpsl
insb
dec
add
popa
pop
aas
dec
ss
ror
mov
dec
fstpt
push
pop
in
jp
mov
insb
les
xor
xchg
add
scas
jnp
repz
cmp
aam
mov
imul
out
or
aas
notb
js
insb
mov
xor
cmp
loop
push
add
cmp
pushf
pusha
jmp
adc
testb
mov
pop
ret
insb
js
or
pop
inc
sub
shld
and
mov
sbb
add
pop
ret
dec
test
lods
je
jecxz
inc
mov
insl
loop
mov
xchg
mov
rorb
push
jo
mov
mov
or
lock
sarl
fcompl
orl
ljmp
inc
pop
out
push
xor
icebp
in
js
xchg
mov
insb
pop
xor
xchg
sbb
mov
cwtl
sbb
or
pop
das
inc
std
icebp
subl
dec
xor
cmp
and
or
rep
mov
pop
jmp
insb
dec
rolb
jne
pop
cmp
cmp
in
sub
add
int3
pop
pop
sbb
jmp
ss
push
cwtl
add
add
repz
cld
lahf
push
gs
jle
or
fstpt
add
xchg
insb
pop
pop
sbb
lock
mov
push
adc
outsl
cmp
jbe
pop
dec
mov
xchg
mov
stos
mov
cmpsl
push
add
arpl
movsb
sbb
dec
pop
jo
mov
insb
bound
mov
adc
insb
xor
fisubl
test
xchg
or
popf
pop
imul
call
test
xchg
cmp
inc
sarl
sbb
lods
cmp
sbb
jno
pop
mov
mov
pusha
test
pushw
andl
sbb
les
in
cs
xchg
test
imul
popf
call
sbb
popa
ljmp
cli
mov
jmp
fdiv
insb
loope
push
mov
and
mov
cmp
lods
orb
divb
sbb
dec
stos
sbbl
cwtl
push
push
mov
fnsave
adc
movl
xor
inc
cs
fadd
rcr
add
call
sbb
aas
insb
jecxz
mov
popa
xlat
xor
insl
mov
sbb
sub
test
imul
call
cs
mov
movsl
imul
xchg
xor
jbe
or
or
sub
int
insb
xor
and
insb
mov
and
push
aad
nop
xor
xor
or
and
sbbl
sbb
ja
into
in
mov
mov
repnz
test
cmpsb
cmc
fildll
inc
mov
xor
push
and
add
insb
inc
iret
out
mov
sub
xchg
push
add
pop
insb
mov
pusha
pop
daa
lds
out
xchg
repnz
imul
pop
je
jecxz
insb
fbld
loop
insb
imul
mov
xor
lret
insb
mov
popf
cli
andl
xor
jbe
and
pusha
stos
iret
pop
lock
aad
aas
jae
fimuls
das
xchg
mov
mov
pusha
insb
test
movsl
and
mov
pop
jb
outsl
push
lods
inc
iret
jmp
pop
jp
xor
icebp
mov
fdivrl
inc
faddp
adc
data16
insb
outsl
xlat
pop
into
jne
lds
dec
sub
insb
dec
dec
inc
pop
mov
mov
pop
insb
inc
testb
insb
sbb
jge
jmp
pop
insb
fdivs
push
repnz
or
gs
xchg
lock
cmpl
in
sub
mov
adc
push
mov
inc
sub
out
insb
les
enter
sbb
xchg
mov
jecxz
pushf
popf
and
inc
add
int3
loope
jl
or
movsb
lods
cmp
test
xchg
dec
mov
jb
mov
adc
clc
enter
imul
stos
cli
mov
mov
je
pusha
shrl
or
gs
push
xchg
and
dec
cmpsl
frstor
cmc
sbb
in
xchg
insb
imul
dec
out
aaa
insb
adc
xchg
stos
shrl
data16
mov
jne
add
sbb
pop
jmp
cmp
ljmp
lds
int
dec
std
inc
fs
sti
pop
xorl
or
or
sub
rcrb
lea
mov
jnp
aam
mov
notl
insb
jmp
mov
int3
imul
dec
lods
fstpt
stc
pop
insb
inc
stc
adcb
pushf
movsb
insb
mov
jge
stos
mov
inc
cmp
paddw
out
adc
or
push
rcrl
imul
cmp
enter
stos
aaa
insb
dec
inc
scas
loope
pop
dec
sti
cld
sub
adc
test
jnp
push
jbe
sbb
mov
insb
jle
js
fwait
pusha
pop
stos
dec
mov
cmp
repz
push
arpl
das
lret
insb
aaa
iret
ret
aad
insb
scas
pop
dec
shr
dec
clc
out
insb
mov
inc
cli
sbb
fwait
cmp
sbb
jo
subl
mov
arpl
pop
stos
jp
inc
insb
jg
cmp
outsl
hlt
pop
push
insb
cli
xchg
pop
aaa
lods
inc
mov
insb
out
jge
dec
cmp
int
xchg
xchg
insb
fbld
sbb
jnp
mov
pushf
std
insb
jo,pt
mov
jmp
adc
inc
aad
dec
in
scas
and
outsl
pop
sbb
ja
ss
push
out
insb
lods
or
or
in
sbb
adc
js
pop
cmpsl
cltd
sub
sbb
push
pop
fwait
lods
xchg
sub
fucomp
imul
aam
push
cli
push
adc
popa
insb
xchg
or
ja
int
inc
insb
inc
pop
add
cmpsb
je
imul
mov
xor
int
jl
pop
fstps
jecxz
dec
in
sbb
xor
jle
xor
js
xor
pop
sub
shlb
xchg
push
call
in
insl
mov
sbb
mov
sahf
jne
dec
adc
mov
push
pop
lock
pop
jg
jo
rcrl
dec
and
scas
mov
insb
mov
mov
jne
push
cld
mov
dec
pop
cltd
inc
nop
cwtl
hlt
pop
imul
loopne
pop
int3
mov
and
in
sub
loope
sbb
and
xor
ret
pop
xchg
dec
rclb
xchg
std
dec
insb
rolb
xchg
fs
in
popa
loope
aam
and
cmpsb
pusha
cmp
sub
cmpsb
push
int3
pop
mov
push
xor
imul
lret
mov
dec
jp
test
divb
fcoms
xor
jecxz
jns
insl
cmp
ret
insb
aas
mov
in
inc
xor
in
and
insb
jno,pn
mov
bnd
jb
and
mov
jl
in
insb
es
sub
inc
pusha
bound
rcll
int3
mov
push
sub
mov
roll
or
insb
stos
pop
push
ret
dec
shrl
das
je
xor
sub
sub
insb
test
pop
loope
imul
xor
imul
lock
mov
inc
mov
or
add
jle
jbe
xchg
pushf
andl
push
imul
aam
insb
roll
cs
insb
mov
test
and
roll
insb
push
sub
adc
xchg
sbb
data16
xor
mov
aam
adc
dec
and
popa
jo
xchg
dec
dec
std
and
addl
sarb
jae
inc
in
xor
xor
sub
mov
je
cmpl
lods
inc
push
jb
insb
test
mov
pop
daa
xchg
jo
cmp
jmp
imul
mov
sbb
nop
shrb
xchg
or
cltd
mov
insb
addl
testb
pushf
pop
mov
fldt
xor
pushf
sbb
pop
jg
stos
add
ret
les
imul
cmp
lret
ret
int
cs
aas
add
out
add
shll
lods
jnp
mov
loopne
push
dec
adcb
cmpl
dec
add
mov
aam
xor
push
incb
mov
insb
hlt
fnsetpm(287
lret
mov
cmp
dec
push
mov
leave
insb
scas
out
mov
jge
jp
imul
push
mov
imul
inc
shrb
cmpsl
cld
aad
mov
imul
xchg
test
gs
fidivl
sbb
imul
pop
fmull
adc
jmp
add
je
mov
pop
and
in
std
mov
add
mov
je
insb
jns
addb
push
outsb
sahf
insb
mov
xchg
and
insb
fimull
lret
inc
aaa
mov
xchg
xchg
and
pop
outsl
movsb
sbb
dec
sub
out
push
gs
in
ss
mov
add
das
inc
inc
add
inc
sbb
adc
xor
stos
insb
out
ffree
cld
mov
cmp
push
sub
mov
pop
test
pop
int3
loope
dec
adc
mov
xor
lods
in
jg
rcrl
jbe
mov
insb
movsb
imul
sbb
sbb
insb
push
shll
insb
push
stc
imul
movsl
fadd
shrb
xchg
gs
push
mov
insb
test
push
pop
cli
adc
int
movsl
test
movsl
pop
ds
add
ljmp
pusha
popf
or
ret
inc
insb
repnz
mov
insb
jae
inc
repz
fisubrs
pop
in
mov
mov
or
imul
shl
cs
inc
sbb
addr16
sub
in
jae
mov
jns
sahf
test
sbbb
nop
pop
cmpsb
sbb
cs
jo
xlat
or
add
push
fildll
pushf
pop
insb
aaa
or
popl
imul
lods
test
add
ss
rcrb
mov
mov
inc
inc
or
imul
xor
fwait
enter
xchg
sbb
test
insb
in
and
lods
lea
daa
insb
push
mov
stos
addr16
pop
xor
ds
aaa
aas
push
fcoms
and
insb
mov
cmp
push
mov
ljmp
push
dec
mov
in
insb
adc
mov
out
insb
push
leave
and
mov
lahf
and
dec
imul
pop
jl
mov
addr16
sub
shr
xor
inc
shrb
insb
xchg
jo
sub
adc
lret
lahf
add
fdivr
jecxz
push
adcl
int
sub
notl
stc
and
jb
mov
mov
or
inc
sbb
mov
jo
fdivr
pop
loop
ret
lods
lret
jno
in
nop
mov
insb
fs
sub
sub
imul
mov
add
insb
mov
xchg
lahf
ja
imulb
mov
xchg
dec
adc
lods
pop
subb
movb
fistpll
daa
inc
cmp
out
jbe
insb
faddp
ret
xor
pop
faddl
arpl
jno
push
dec
imul
das
adc
xor
sbb
push
mov
hlt
mov
insb
cmpsb
push
mov
mov
adc
jmp
add
jae
sete
fsubrs
or
sub
bound
aaa
push
mov
popf
xchg
ja
imul
dec
mov
xchg
gs
inc
xor
insb
arpl
cmp
shlb
push
subl
subb
ljmp
ss
dec
mov
xor
add
pop
xchg
cmp
pop
mov
imul
in
mov
fldcw
adc
mov
das
adc
mov
sbb
xor
insb
notl
mov
add
sbb
fs
inc
cltd
xor
out
sti
dec
pop
fidivs
and
dec
insb
inc
dec
enter
int3
idivb
cwtl
cltd
mov
mov
in
push
inc
mov
jg
nop
sbb
lods
dec
mov
adc
ret
testl
mov
inc
push
xchg
leave
insb
rolb
dec
ret
or
or
clc
push
or
or
cltd
adc
push
aad
shrb
add
mov
mov
movsb
sub
cmp
lods
hlt
lret
sub
loopne
imul
or
push
cltd
sbb
imul
shl
pop
cmp
cmp
dec
subb
test
lds
sub
iret
cmc
ljmp
sbbl
xor
push
lock
ss
dec
and
insb
or
insb
mov
xor
aam
or
addr16
ret
push
mov
dec
popf
xchg
pop
arpl
daa
hlt
in
add
mov
dec
scas
add
fidivl
inc
fcmovnb
notl
jbe
xor
push
jmp
adc
repz
insb
lock
or
gs
dec
arpl
mov
insb
sub
hlt
jmp
aas
add
inc
mov
inc
jne
sbb
pop
mov
insb
and
test
sbb
sbb
jo
imul
loop
cmpsl
cwtl
sbb
jbe
nop
adc
out
sbb
and
stc
mov
sbb
in
jne
cmpsl
mov
cli
push
insb
arpl
stos
lds
fidivrl
rcrl
xor
loopne
cmp
jle
cmp
std
pop
cld
xchg
minps
mov
or
fisubrl
lret
mov
hlt
imul
jl
mov
into
insb
sbb
out
sbb
rcrb
sub
aaa
add
insl
cld
xchg
fmul
and
mov
cmp
push
dec
dec
nop
icebp
in
ja
icebp
imul
mov
cmp
and
dec
mov
in
int
sbb
mov
jl
lods
dec
repnz
and
cmp
xor
pop
jae
pop
jecxz
jne
inc
mov
insb
cltd
cmp
inc
lods
imul
cmpsl
movsb
fmuls
shll
insb
pop
jle
add
pop
popf
imull
cltd
outsb
lea
shll
sti
test
adc
movsb
push
cld
xorl
iret
rcll
movsb
inc
imul
repz
in
pop
cmpb
nop
lcall
dec
lret
lea
mov
and
insb
mov
push
jl
fidivs
add
in
ret
add
add
test
mov
dec
mov
push
imul
push
loope
sbb
pop
jp
in
call
clc
push
dec
mov
jmp
test
std
xchg
xor
mov
jecxz
jle
insb
mov
rorb
sub
add
fwait
pop
lock
push
sbb
psubusb
pusha
xchg
add
adc
insb
test
insb
inc
pop
mov
and
ret
lods
and
pop
into
lret
adc
xor
dec
cs
ds
sbb
shrl
cmpsl
cld
aad
insb
shll
dec
inc
dec
das
fs
inc
jns
shrl
cmp
sub
push
arpl
hlt
insb
aam
lahf
push
shrb
enter
dec
lods
neg
dec
sbb
insb
and
dec
dec
mov
cwtl
xor
fucomi
stos
cwtl
loopne
mov
imul
pushf
test
imul
in
push
xchg
insb
jle
push
cmp
lock
insb
mov
push
pop
imul
adc
ss
xlat
insb
mov
testb
jo
insb
sbb
dec
insb
dec
repz
push
gs
inc
mov
test
pop
test
adc
insb
sub
mov
dec
xchg
je
gs
push
mov
jmp
nop
or
cmp
arpl
std
das
sub
ds
sub
lea
imull
pop
pop
shrl
cmpsl
and
dec
fisubrl
xchg
jge
test
testl
or
popa
gs
ljmp
cmp
push
lea
rcrb
sbb
inc
add
dec
add
push
scas
insb
mov
movb
stc
cmp
in
in
mov
insb
aas
out
ret
sub
fmull
outsl
sub
push
mov
adc
shrb
pop
pop
shll
test
mov
insb
mov
cmp
insb
cmp
pop
out
sub
and
lods
leave
mov
data16
jns
fwait
pop
sub
test
nop
push
jmp
loop
sti
lods
mov
sbb
jns
xchg
cmp
nop
loop
pusha
jo
pop
sub
popf
hlt
in
inc
loope
mov
push
jno
jge
clc
lret
in
mov
inc
mov
insb
ficomps
mov
push
ljmp
insb
sub
push
sti
loop
sbb
mov
cs
jno
idivb
mov
mov
mov
jbe
adc
mov
insb
jns
jb
lret
jl
out
out
in
jge
movsb
sbbl
or
sahf
cmpsl
add
insb
enter
push
mov
push
xchg
jle
insb
jne
mov
test
in
test
std
and
dec
movsb
imul
repnz
aad
insb
sbb
sub
inc
dec
mov
mov
ss
call
out
sbb
sub
mov
rolb
les
mov
and
subb
cmp
mov
mov
insb
dec
mov
xor
imulb
push
pop
pop
js
enter
insb
and
lds
loopne
jae
loop
xor
arpl
mov
hlt
shl
insb
dec
pop
cmp
xor
inc
insb
subl
add
adc
enter
out
out
xchg
mov
cmpsl
ss
dec
dec
test
gs
std
xor
fdivrs
lock
insb
mov
adc
fidivl
mov
mov
mov
jbe
lods
mov
insb
test
repnz
sahf
jnp
negl
imul
sti
mov
xchg
pop
push
pop
call
loope
push
shrb
push
sbb
sahf
adc
das
inc
aam
arpl
cltd
xchg
insb
js
popa
in
push
insb
xchg
lods
sub
adc
pop
jmp
jmp
mov
xchg
add
or
add
ficoml
mov
insb
adc
out
insb
clc
pop
dec
xor
out
adc
insb
or
push
fldt
push
dec
jecxz
insl
or
sbb
cmp
lods
mov
jne
sahf
dec
inc
mov
insb
jmp
repz
adc
lcall
jecxz
cmpsl
imul
fcompl
test
adc
cmc
inc
mov
int3
lcall
out
insb
adc
adc
xor
sti
in
lcall
dec
fdivs
adc
mov
cmp
cwtl
mov
push
pop
cmpsb
mov
subb
lret
mov
nop
outsl
mov
aas
cmp
push
dec
fdivs
lods
mov
cmp
mov
mov
or
sbb
insb
jno
jecxz
jge
popf
or
data16
dec
mov
int
or
lods
sub
mull
fiaddl
sbb
imul
into
and
adc
push
arpl
lock
mov
insb
jnp
sbb
push
imul
cmp
xor
or
cmp
push
jge,pn
mov
mov
in
mov
mov
lea
jns
sub
pop
mov
jo
ret
jno
jl
out
ss
bound
jbe
cld
cli
fwait
ljmp
jne
cmp
lock
sub
xchg
lds
fdivrl
jp
gs
xchg
jmp
std
sub
mov
push
fs
lods
lcall
cmp
flds
xor
aad
int3
popf
fsts
push
stos
lret
lods
out
imul
fmulp
sbb
cwtl
scas
addr16
iret
mov
sbb
xchg
pop
std
cmpsl
push
cmp
lods
push
cmc
insb
outsb
push
fidivs
out
add
dec
jo
insl
sub
pop
lret
inc
mov
insb
mov
insb
loope
repz
cmp
adc
in
lods
pop
push
cli
jmp
inc
daa
inc
popf
xor
insb
pop
mov
jnp
hlt
push
mov
arpl
and
insb
and
cmp
adcb
xor
cmpsb
mov
insb
sub
or
mov
icebp
lods
dec
xlat
pop
ficompl
push
insb
fstl
push
mov
mov
insb
sub
cli
push
adc
cwtl
ret
xor
jl
fwait
insb
xorl
out
mov
jle
lea
xchg
cltd
cmp
cwtl
popf
outsb
lret
ror
insb
mov
and
insb
fidivrl
fcoms
scas
cmp
and
sub
addr16
out
pop
gs
sub
mov
insb
nop
inc
icebp
mov
addr16
imul
fimull
je
dec
cs
test
insb
cmpsl
gs
fs
jns
aad
movsb
int
and
and
imul
jae
jl
movsb
insb
pop
or
xchg
insb
mov
pop
mov
movb
mov
daa
das
mov
cltd
js
lods
or
adc
jge
fstpt
mov
push
push
mov
cmc
imul
push
les
popl
dec
xchg
fiaddl
sbb
xchg
mov
xor
test
insb
ret
stc
lock
cld
dec
push
popl
pop
push
loope
sbb
jnp
dec
imul
fistps
popa
mov
movsb
repz
push
test
jbe
mov
packsswb
cltd
sarb
loope
in
mov
mov
imul
cwtl
nop
faddl
xor
lock
xor
insb
or
ja
pop
jb,pn
insb
jns
mov
insb
ffreep
and
jno
cmpb
push
insb
daa
push
scas
mov
outsl
push
fsubrs
xchg
subl
shrb
pop
imul
xchg
insb
int
sub
cli
test
scas
dec
push
in
pop
jbe
xlat
fsubr
or
fcmovu
shll
jo
les
and
adc
out
mov
jbe
jmp
or
insb
sub
stos
and
shrb
lods
ret
pop
test
push
fldcw
and
fildll
into
dec
inc
cmp
inc
insb
hlt
call
stos
sub
and
shl
movsb
pop
xchg
xor
fistpll
adc
negb
test
insb
iret
push
xor
insb
mov
inc
jmp
pop
into
lods
lods
aaa
lods
icebp
push
xchg
and
cmp
in
loopne
pop
add
cmp
in
movsl
jp
fidivs
popf
addr16
into
pop
cmp
and
or
sub
push
les
cmp
and
jle
insb
sbbl
clc
cld
in
adc
stos
insb
ja
rolb
dec
ds
test
inc
or
xor
icebp
hlt
mov
in
movsb
xor
test
cld
das
add
leave
cmp
xchg
ret
cmpsb
pusha
imul
jmp
call
aam
movsb
insb
xchg
add
xchg
shl
imul
sbb
daa
adc
insb
imul
test
es
inc
out
ss
mov
outsb
adc
mov
mov
clc
push
cs
mov
mov
mov
movsl
xor
add
pop
mov
xlat
std
nop
jg
add
aas
out
scas
mov
adc
sub
stos
sahf
out
push
insb
loopne
repnz
xor
inc
lret
popa
xorl
test
out
sbb
outsb
push
insb
mov
sarl
cs
fisttps
add
aad
insb
or
mov
pop
sbb
pop
jge
sub
in
shrl
pop
in
les
clc
cltd
sahf
int
xlat
and
or
pushf
mov
mov
fimull
cld
xchg
out
mov
int3
push
inc
fs
out
imul
xchg
fimull
sub
xor
cmp
cmp
insb
cld
inc
push
inc
adc
fisubs
dec
mov
sbb
gs
mov
cmp
or
das
xor
cltd
mov
cld
mov
aad
sahf
dec
cmp
and
pop
insb
in
stos
int3
mov
sub
sbb
psubq
lods
in
insb
cmp
mov
add
jbe
add
insb
cmpsb
cld
jb
je
sbb
shrb
cmpsl
push
rcrb
in
std
call
jmp
and
xlat
xchg
ss
les
ret
es
pop
imul
loop
mov
ljmp
movsb
push
inc
xchg
mov
xchg
icebp
cmp
cmp
jbe
adc
lahf
hlt
insb
sub
sti
dec
insb
test
push
lret
adc
iret
add
mov
insb
jl
ss
arpl
rcr
dec
adc
push
cmpsl
insb
mov
jge
add
in
dec
xor
imul
pop
push
lock
adc
sbb
aad
jl
insb
mov
jo
jae
inc
add
add
inc
pop
icebp
inc
loope
in
je
sbb
mov
nop
out
mov
enter
subb
add
insb
mov
and
or
jmp
dec
insb
mov
cltd
lcall
or
or
in
pushf
into
stc
adc
xchg
scas
test
out
outsl
dec
mov
mulb
stos
adc
cmpsl
not
mov
xchg
sahf
je
mov
in
pop
add
push
insb
js
hlt
andb
xchg
push
and
sub
scas
mov
int
xorl
loop
imul
mov
fdivs
sub
imul
subb
insb
and
jns
insb
pop
nop
lahf
rcll
or
stos
pop
mov
push
mov
mov
mov
shr
loop
jno
and
sbb
int3
add
movsb
jecxz
imul
or
sbbl
mov
add
insb
out
idivl
aad
xchg
xchg
aas
imul
sbb
outsl
jb
dec
inc
jg
pusha
test
insb
iret
incb
std
sub
mov
jg
stc
mov
jl
outsl
fidivrl
into
insb
sbb
sbb
and
fldl
test
movsb
adc
insb
daa
adc
imul
insl
ds
pusha
outsl
xlat
jae
xlat
imul
rorl
adcl
imul
mov
fisubs
call
imul
popa
cmpsb
adc
push
ljmp
add
push
stos
xor
mov
pop
lods
and
mov
mov
popa
cmp
data16
loopne
or
sar
mov
es
pop
scas
adc
test
cwtl
mov
shrl
xchg
loope
fbld
jp
push
stos
scas
stc
int
mov
in
sbb
stos
nop
inc
lods
push
push
push
xor
xor
insb
sbb
push
mov
divb
imul
int3
inc
shrl
jns
je
jmp
add
or
pop
lcall
pop
dec
out
movsl
movsb
insb
jge
xchg
or
dec
sub
xchg
shrl
push
aam
gs
pop
mov
cmp
insl
out
mov
imul
movsl
pop
push
fistl
xchg
and
into
std
faddl
pop
das
mov
fnstsw
cwtl
fs
insb
shll
add
jg
shlb
push
inc
insb
jne
ss
leave
adc
outsl
mov
cmp
insb
ret
push
sub
leave
mov
add
insb
xor
scas
push
sbb
cmpsl
out
dec
cmp
inc
cwtl
sub
mov
insb
cmp
adcl
or
and
shr
pop
js
insb
inc
in
adc
inc
lea
jns
das
ret
insb
cmp
lods
shrb
push
cmpsl
jl
imul
fucomi
inc
sub
inc
mov
xchg
mov
test
repz
mov
inc
xchg
push
xchg
mov
jl
insb
cmpsl
out
dec
or
insl
mov
add
lret
outsl
out
adc
mov
rorb
sbb
int
push
ret
xchg
in
sahf
sub
jp
aad
daa
pop
push
cmc
xor
imul
jl
in
ljmp
insb
int
lret
insl
jne
insb
xor
lea
icebp
cmp
jo
xchg
mov
subl
pop
repz
fidivs
sub
mov
imul
cmp
adc
dec
and
insb
xchg
mov
xlat
xor
pushf
xchg
repz
in
mov
lods
repz
aad
insl
fisubrs
inc
and
cld
or
lret
push
jnp
daa
test
mov
int3
stos
jecxz
insl
xor
pop
mov
dec
in
xchg
or
pop
test
mov
sub
enter
fmuls
gs
test
push
sub
leave
pop
rorb
test
int3
xor
scas
sbb
movsb
in
hlt
ret
enter
test
jb
mov
lcall
insb
stos
add
cmp
push
xorl
les
iret
fucom
insb
cmp
fisubrl
hlt
xchg
ss
aaa
sub
sub
arpl
mov
xchg
lret
add
cli
and
or
push
loop
test
mov
int
and
pusha
pop
mov
data16
insb
sub
push
jle
cs
gs
pop
aam
add
sbb
icebp
pusha
pop
mov
outsb
aas
mov
loopne
sub
and
lahf
cmp
imul
jno
xchg
ret
lret
insb
sbbb
adc
mov
sbb
inc
adc
jl
xchg
shrb
inc
pop
mov
mov
push
aad
lods
inc
adc
adc
cli
xchg
push
lcall
mov
mov
test
mov
mov
dec
cmp
and
out
in
adc
test
push
jp
add
jb
xchg
adc
mov
sbb
lods
cmp
xchg
shll
popa
pop
outsb
jl
insb
jns
sarl
add
sub
jle
fisttps
sbb
adc
xchg
cmp
and
push
mov
adcl
out
push
or
test
lods
mov
cmpsb
adc
fucomip
hlt
xor
loope
mov
xor
or
jp
sbb
mov
imul
lcall
addl
adc
sbb
subl
adc
pop
lods
ret
inc
in
pop
xor
jbe
mov
xchg
push
jmp
and
arpl
bound
ljmp
mov
aaa
sbb
jo
mov
pop
test
sar
int
adc
jne
loopne
pop
js
stc
mov
imul
fdivl
loopne
pop
xor
pop
jecxz
add
mov
insb
mov
lcall
in
aaa
push
repnz
dec
xor
iret
in
decb
sbbb
dec
and
fldt
and
cmp
sub
std
sub
inc
shrb
stos
jp
sbb
sub
cltd
xchg
leave
inc
xchg
mov
outsb
mov
xor
sbb
insb
ret
fsubrl
pop
insb
add
inc
rclb
ret
int3
loopne
pop
addb
fs
pushf
sbb
nop
insb
jmp
lds
imul
mov
dec
shrb
xchg
lods
pop
sbb
pusha
icebp
std
cmc
out
insb
addr16
jl
mov
fsubp
ret
addb
add
inc
jo
imul
adc
popa
imul
gs
mov
in
fsubrl
dec
fdivl
sbb
pushf
or
lret
insb
cmp
mov
rol
push
or
in
movsl
rcrb
dec
loope
bswap
in
in
xchg
addr16
mov
ss
xchg
cltd
in
pop
rorb
call
mov
and
imul
pop
xor
sbb
lods
or
lods
lods
jno
insb
mov
dec
adc
mov
imul
mov
xor
aas
lret
ret
insb
lahf
xchg
jae
xchg
movsb
or
insb
inc
adc
aas
mov
and
sahf
mov
insl
lods
pop
lret
add
inc
dec
xchg
adc
data16
gs
ljmp
insb
mov
loopne
dec
fs
adc
shrl
mov
dec
insb
mov
test
adc
cmp
or
shrb
icebp
insb
push
in
pop
jle
add
inc
imul
leave
fnsave
xchg
loopne
insb
ss
stc
cmp
sarb
fs
sbb
push
fstpl
sub
std
or
mov
aam
insb
mov
and
sti
cmp
xchg
xchg
insb
push
jne
dec
lods
pop
pop
aaa
popf
fs
lods
andb
movsl
cmpsl
adc
mov
dec
xlat
loopne
pushf
push
sahf
imul
stos
aaa
je
insb
dec
adc
aad
pop
xor
jp
mov
jae
repz
xor
je
mull
call
mov
xor
lcall
pop
push
inc
sub
dec
daa
inc
sub
cmp
mov
repz
push
insb
pop
inc
add
adc
test
inc
lahf
insb
in
lds
cli
fcmovne
je
pushf
aam
testb
push
ds
out
pop
arpl
in
pop
in
test
sub
pop
popa
xor
in
scas
packssdw
cmp
push
mov
and
fldl2e
popa
push
jp
cmpsb
test
insb
ficomps
fisubl
insl
adcb
inc
push
cmc
and
insb
popa
in
iret
adc
fcompl
daa
jbe
fidivrs
popf
insb
mov
std
mov
imul
shll
push
lods
dec
push
movsb
dec
pop
movsl
or
leave
cld
dec
sub
or
in
test
insb
test
jp
cmpsb
aad
and
call
insb
out
sbb
hlt
gs
cwtl
arpl
in
das
lcall
mov
dec
cltd
cmc
adc
in
outsb
pop
ret
lret
push
cmp
push
cmp
push
jb
and
and
dec
adc
je
pushf
pop
xchg
lods
xor
insb
xchg
lock
fisubl
insb
outsl
ret
dec
push
fnsave
jb
sub
call
cmp
decl
out
pop
mov
xchg
sub
mov
shll
sub
dec
fwait
cmpsb
shrl
xchg
sub
in
dec
cld
insb
iret
ss
lods
cmp
insb
filds
fcompl
int
and
test
lahf
xor
test
call
mov
jp
cmp
sarl
jl
cmpb
cmp
mov
jo
or
outsl
pushf
inc
outsb
stos
sub
fstpl
idivl
mov
or
add
jp
and
loope
push
repz
add
pop
arpl
mov
inc
sub
popf
int
pusha
cmp
mov
and
jecxz
add
pop
aad
jno
or
xchg
inc
jecxz
jle
test
pusha
out
jmp
ja
or
add
jne
mov
lods
jns
leave
jb
aaa
mov
addb
mov
out
sub
rol
call
rorb
cmp
xor
pop
sbbl
shlb
jnp
call
mov
lods
xlat
sbb
call
xor
leave
sub
shlb
mov
jb
pop
aaa
insl
sub
add
out
push
lock
mov
sbb
repz
js
arpl
xlat
cmp
shlb
ljmp
mov
and
testl
xor
mov
push
mov
in
mov
mov
jb
repz
mov
xchg
sahf
cmpl
das
add
mov
or
rcrb
scas
add
add
pop
outsl
push
int3
cmp
mov
jge
cmpsl
arpl
scas
hlt
lahf
std
sbb
cmp
xchg
aam
gs
js
lods
pushf
mov
jbe
push
imul
cmpsb
mov
adc
add
inc
lock
adc
in
xchg
and
push
insb
mov
fs
mov
mov
pop
icebp
adc
fdivrl
in
mov
out
jmp
jbe
cmp
cwtl
mov
sahf
out
test
insb
scas
std
cld
jae
inc
inc
jb
mov
movsl
out
pop
jle
imul
push
mov
add
clc
fnstenv
inc
xor
inc
insb
stos
pushf
cmp
insb
or
shlb
push
ljmp
insb
lock
pop
insb
cwtl
mov
xchg
insb
out
lods
adc
xor
sahf
xor
or
sbb
sbb
aam
repnz
push
imulb
insb
jecxz
dec
lcall
insl
cmpsb
add
cmp
xor
aad
repnz
je
insb
sub
cmp
mov
inc
push
add
insb
pop
sbb
push
xchg
adc
pop
pop
aaa
out
insb
ds
xchg
ds
loop
ret
pop
cltd
lret
adc
and
into
pop
cs
dec
sbb
add
cmp
cs
xchg
insb
add
xlat
mov
sti
js
xchg
push
mov
jne
pop
in
iret
fmul
push
adc
or
out
pop
imull
insb
jne
pop
data16
movsl
inc
scas
insb
pop
sub
ds
sbb
dec
lret
dec
repnz
cmp
icebp
push
insb
int
push
and
and
pop
repnz
push
insb
cmp
and
cmp
xchg
lcall
lds
or
cld
call
gs
test
adc
imul
xchg
insl
movsb
xor
xchg
lods
lret
cmp
loope
out
sub
insb
rol
mov
fldcw
insb
sbb
data16
inc
add
insb
stos
ss
xchg
cmpsl
inc
shrb
dec
sub
fstl
ja
pusha
mov
repz
xor
ret
mov
sub
cmp
push
dec
std
jmp
popa
insb
sub
sbb
or
adc
mov
jle
insb
popf
push
jne
mov
or
insb
cmp
push
shll
imul
aas
or
lods
cmpl
aam
xchg
test
int3
fimuls
gs
ja
orb
test
jbe
dec
ds
pop
notb
inc
roll
imul
xchg
mov
inc
mov
pushf
dec
mov
jo
xor
js
mov
xchg
jl
jge
sahf
or
sub
lds
jne
mov
xor
pushf
mov
sahf
jg
inc
cmc
inc
ljmp
push
sub
shrl
xchg
lods
int3
jbe
cmp
cli
push
int
call
sarl
xchg
scas
adc
mov
mov
repnz
and
pop
jno
mov
add
mov
mov
in
insb
ljmp
int
stc
mov
pop
push
push
subl
push
gs
jle
and
mov
aas
mov
insb
movsb
mov
cwtl
mov
jnp
insb
cmp
imul
rcr
insb
cmp
call
in
push
sbb
insb
push
std
clc
push
gs
insb
cmp
sub
adc
cmpsb
add
insb
mov
inc
mov
lret
xorb
rorb
xchg
aam
mov
sbb
add
imul
les
mov
in
cs
rcrb
cmp
insl
ud0
jns
into
mov
mov
and
inc
out
dec
sub
xchg
das
ret
push
xor
lret
in
mov
mov
mov
jge
lahf
adc
xor
subb
add
cwtl
mov
in
aam
cmc
push
sbb
jae
dec
adc
fmull
fstl
dec
jl
add
fidivrl
inc
mov
insb
loopne
ror
push
xchg
out
jp
dec
insb
lds
aas
inc
imul
mov
daa
shrb
jl
sbb
lea
into
xchg
inc
das
lret
shlb
arpl
pop
jmp
sub
xor
pop
leave
insb
lret
es
cli
inc
push
jno
xchg
popf
jle
xchg
insb
fcom
dec
in
js
and
fsts
adc
insb
cmp
add
mov
lods
daa
mov
clc
aas
ficomps
mov
mov
nop
lahf
test
js
pop
xchg
add
mov
mov
ljmp
dec
lret
insb
clc
cmpsl
or
fxtract
sbb
jne
popa
inc
xorb
sbb
inc
pop
pop
iret
jge
jl
je
cmp
add
bsr
sbb
insb
pop
xchg
fstps
push
jo
jmp
outsl
or
je
mov
cmc
xrelease
insb
inc
hlt
push
aam
push
dec
insb
into
mov
push
insb
adc
imul
jae
xor
pop
or
xlat
icebp
xchg
inc
and
ja
scas
out
cmp
fsubrl
adcb
mov
cmp
dec
cmp
sub
mov
push
fldcw
and
arpl
ret
in
cmpb
sub
xchg
push
repnz
fcoml
cmp
fistps
and
mov
insb
movsl
xchg
loop
in
insb
mov
fistps
pop
add
fistpl
insb
push
mov
and
xchg
loopne
cltd
sub
pop
sahf
mov
lods
add
and
dec
lods
cwtl
fisttps
mov
pop
test
fidivrl
test
cmpsl
xchg
iret
insb
jno
fwait
inc
es
int3
insb
out
mov
not
das
insl
sti
popa
cwtl
aad
in
arpl
pop
hlt
aaa
insb
cmp
jle
cmp
in
jnp
and
shrb
and
lods
icebp
xor
jl
push
mov
lods
mov
add
in
pop
call
insb
mov
inc
icebp
push
insb
test
sub
rcrb
stc
mov
cmpsb
and
pop
in
mov
push
xchg
data16
or
xchg
out
or
xchg
xor
aaa
mov
xlat
mov
hlt
outsb
jbe
and
jl
or
jae
sbb
insb
and
mov
insb
scas
js
adc
dec
cmp
push
stos
lret
icebp
lods
sbb
fnstenv
cwtl
push
lds
jmp
movsb
inc
sarb
insb
jge
cmp
nop
gs
fsubrs
mov
cmp
xor
mov
insb
pop
lret
cli
cmp
imul
inc
jl
add
insb
arpl
push
cmp
mov
xchg
mov
lahf
jg
mov
les
lret
hlt
dec
mov
pop
pop
insb
cmp
js
add
test
sbb
mov
sub
jnp
mov
mov
test
mov
lds
or
shrb
adc
mov
xor
mov
aad
pop
jo
imull
sbb
cli
push
add
insb
mov
adcb
xchg
addr16
stos
xchg
jns
insl
mov
lahf
dec
lea
inc
xchg
jle
daa
orl
gs
sub
setnp
inc
repnz
pop
in
rep
pop
imul
gs
mov
pushf
lahf
into
insb
ret
jl
sbb
jne
in
and
dec
pop
push
sbb
xchg
push
insb
out
gs
jl
xchg
xchg
adc
cmp
js
imul
sbb
test
fcmovu
stc
mov
jae
fisubs
in
pushf
insb
es
js
ljmp
ret
pop
fists
pop
insb
push
das
cmp
jae
sub
movsl
iret
and
cmp
mov
jbe
arpl
mov
out
or
insb
dec
insl
cmp
xchg
insb
sbb
lock
je
orb
xchg
shll
lret
hlt
mov
loop
xor
pusha
insb
push
xchg
cmp
mov
js
imul
xorb
xchg
jl
dec
adc
ret
insb
sub
aas
lret
insb
adc
cld
nop
add
or
je
xor
test
insb
pop
pop
mov
xchg
mov
xor
mov
sbb
repnz
sub
pop
fistpl
or
nop
pop
push
lods
stos
jmp
cmp
mov
pop
insb
push
inc
scas
xor
mov
inc
cld
add
faddl
stos
fidivrs
pop
ljmp
leave
popa
es
cmp
int
pop
xor
pop
xchg
mov
out
mulb
fcomip
jmp
loopne
insb
sbb
pop
lods
pop
jb
adcb
sbb
aam
inc
insb
mov
jne
jle
in
stc
cmp
leave
mov
mov
adc
shrb
out
rclb
mov
insb
pop
hlt
and
cmpsl
lds
jl
push
out
jle
mov
adc
inc
sub
and
into
jecxz
sbb
cmpsb
pop
test
jle
push
fwait
sahf
mov
xchg
lret
dec
inc
lahf
or
enter
sti
pushf
or
xchg
insb
cmp
fucom
xor
pusha
pop
imul
push
adc
lods
test
js
mov
dec
mov
loop
pop
mov
cmp
sub
cmp
or
fisubrs
nop
fdiv
jp
jp
push
and
ss
lods
cmp
or
insb
and
lret
mov
imul
test
fistpll
sub
jge
int3
add
insb
outsb
jne
es
out
push
pop
out
inc
insb
and
lods
push
adc
push
insb
dec
inc
or
adcb
and
mov
add
mov
jno
dec
shlb
fisttpll
sbb
ljmp
lock
out
scas
lret
mov
xchg
and
mov
sub
cli
xchg
js
popa
sub
sahf
test
mov
cmp
les
negl
popf
lahf
lret
loop
jecxz
jmp
repnz
mov
pop
or
es
outsl
push
repnz
js
insb
mov
daa
cmc
insb
cmp
mov
push
int3
cld
insb
cmp
loop
push
xchg
insb
shll
and
insl
clc
lret
insb
out
clc
cmpsl
push
push
lods
hlt
cmp
or
dec
aas
std
outsb
repnz
jp
je
pop
add
in
mov
cmpxchg
ss
sub
lods
cmp
pusha
xor
mov
insb
or
fwait
xor
xor
repz
mov
jl
add
cmp
mov
add
pop
je
nop
cmp
outsl
lods
push
test
cld
mov
pushf
mov
insb
cli
cmp
cmc
loope
jge
jb
testl
fdivrl
or
popf
into
insb
mov
pop
gs
lea
adc
insb
and
fs
xor
xlat
das
fstpl
xchg
outsb
jb
gs
call
add
icebp
mov
mov
leave
mov
icebp
xchg
idivl
daa
cmp
subl
jne
xchg
lods
push
fisubrs
nop
aas
or
add
stos
fwait
pop
ss
add
mov
std
je
mov
pusha
cs
daa
mov
push
mov
pop
xor
data16
gs
jecxz
stos
push
insb
adcb
inc
hlt
sbb
in
les
jmp
push
dec
adc
push
std
pop
aaa
clc
daa
in
mov
mov
loop
jmp
insb
gs
mov
mov
cmc
in
pop
mov
rolb
inc
in
ret
or
out
xor
scas
lods
cwtl
in
jne
addr16
mov
jge
ja
insb
pop
xchg
fwait
xchg
push
ret
clc
das
insb
inc
arpl
out
sub
sub
mov
cmp
fldt
mov
mov
cltd
jb
mov
jo
pop
sarb
cmp
imul
fisubrs
add
pushf
fcomps
cmp
or
push
cmc
mov
insb
sub
insl
sub
inc
add
clc
jle
vpunpcklqdq
mov
dec
push
add
insb
outsl
push
fs
push
jno
ds
lods
push
and
pop
and
insb
xchg
dec
sbb
daa
repnz
push
dec
adc
mov
in
push
int
adc
mov
xchg
fdivp
jae
and
scas
leave
pop
jmp
fisttpll
movsl
clc
adcb
aad
je
mov
push
sbb
out
lahf
xor
popa
mov
lock
cmc
je
insl
in
mov
lods
insb
dec
fs
mov
fmuls
insb
and
cmp
xchg
or
xchg
and
in
sub
ja
clc
push
sbb
sti
dec
insb
stos
ficoms
or
fisttps
sbb
imul
and
out
icebp
shr
or
std
mov
insb
pusha
mov
adc
mov
add
push
push
aam
stos
iret
push
sub
or
inc
fisubrl
insb
push
mov
cmp
stos
clc
sub
stc
push
mov
ja
push
outsl
xchg
insb
gs
scas
pop
pop
rcll
insb
mov
rorb
push
movsb
rcll
or
cmc
inc
add
and
mov
cmpl
das
andb
lods
add
in
cmpsb
mov
jns
push
sbb
xor
ja
dec
enter
mov
fildl
fiadds
mov
loopne
mov
xor
sub
mov
mov
xlat
xchg
insb
lods
adc
xchg
mov
andl
cwtl
aam
dec
call
xlat
cmp
push
adc
pop
jecxz
sbb
push
insb
jnp
ds
je
loope
imul
sub
mov
xchg
inc
or
lret
imul
sbb
repnz
mov
xchg
pop
xor
std
out
adc
mov
xchg
pop
shrb
lcall
cmpsl
inc
leave
fwait
inc
fidivrs
out
adc
cmp
rolb
jns
xor
adc
outsl
inc
inc
push
iret
in
lods
fimull
lock
inc
sbb
lcall
out
incl
inc
mov
ljmp
xor
adc
popa
sub
loop
mov
bound
outsl
mov
aaa
and
shlb
imul
adcl
out
imul
daa
sbb
adc
pop
jbe
sub
lods
cmp
inc
jb
inc
or
stc
insl
xor
int
adc
fwait
gs
xor
or
fisttps
pop
cmp
dec
add
insb
test
mov
pop
insb
inc
push
movsl
cmp
outsb
rcll
rorb
push
popa
insb
adc
xchg
orl
cmp
insb
repz
jl
insb
outsb
lret
movsl
aam
adc
fs
jmp
test
gs
out
jbe
in
scas
clc
lock
bound
int3
aaa
shr
jge
xor
cmp
into
sub
pop
std
xor
adc
sub
aam
push
insb
sbb
and
ds
repnz
adc
insb
xchg
push
lahf
inc
mov
dec
aas
fmuls
jge
insb
ljmp
lock
gs
and
pavgb
insb
rorl
sub
addr16
lcall
daa
arpl
mov
in
or
insb
dec
push
inc
mov
mov
mov
sub
push
in
adc
insb
stc
mov
cmp
dec
push
inc
insb
jmp
fwait
pop
stos
add
or
pushf
mov
and
iret
xor
mov
and
outsb
scas
data16
and
outsl
fisttps
jle
fs
pusha
adc
out
jl
sbb
insb
leave
clc
test
adc
decl
addr16
pushf
arpl
lods
test
aas
outsb
insb
dec
or
add
ljmp
mov
or
pop
lret
fisubrs
repz
fsubrs
dec
mov
sti
ret
push
fisubl
jb
fdivs
add
jo
nop
push
inc
mov
lret
fldl
xor
and
insb
xlat
or
push
dec
insb
cs
scas
inc
mov
cmp
out
ds
pop
cmc
or
repnz
ss
push
push
jae
call
movsb
inc
xor
jmp
dec
mov
out
rclb
ljmp
aaa
adc
in
insb
call
sbb
jae
add
push
outsb
mov
bound
push
int3
imul
cmc
fldcw
adc
insb
pop
push
ljmp
xchg
lcall
pop
push
pop
in
jb
sub
push
fsubrl
and
adc
hlt
pop
bound
insb
test
repz
insb
dec
mov
push
out
insb
cmp
adc
add
mov
insb
push
xchg
xchg
or
sbb
insb
and
jne
inc
frstor
mov
dec
push
add
sahf
mov
imulb
inc
sbb
dec
mov
sti
add
lock
jb
push
pushf
insb
cltd
xlat
jnp
test
push
mov
addb
inc
pop
mov
push
cmp
jecxz
repnz
or
pushf
push
ja
aas
insb
popf
jo
sti
cmp
jmp
adc
les
cmpsb
insb
sbb
fwait
int
pop
push
jmp
lock
inc
shrl
xor
mov
xlat
test
mov
std
imul
ja
jmp
adc
and
sbb
insl
lret
jno
in
clc
mov
sbb
pop
lods
cmp
shl
mov
cli
lods
jle
std
fnsave
insb
and
ja
je
daa
mov
push
xor
insb
cltd
push
mov
insb
sub
les
pop
pushl
aaa
data16
in
dec
int
stos
in
mov
lods
pop
shll
fists
lds
push
adc
pop
lahf
jae
push
xchg
insb
dec
xchg
lea
data16
inc
insb
in
ret
lds
in
pop
cmp
popf
pop
cli
sub
negl
adc
sbb
rorb
loope
insb
repz
cld
push
sub
mov
addr16
rcll
xchg
cwtl
out
push
imul
test
scas
dec
insb
loop
in
fisttps
push
insb
rcrb
enter
insb
scas
out
pop
or
data16
subl
mov
jp
sbb
imul
mov
cli
fisubl
or
pop
jp
cwtl
jae
mov
push
iret
subl
push
and
subl
pop
mov
pusha
mov
dec
movsl
test
ds
jmp
pop
inc
pop
insb
cmp
cltd
aad
mov
mov
and
and
aaa
lods
subb
lcall
inc
leave
pop
idiv
insb
mov
add
adc
sbb
jmp
insb
imul
aas
insb
loop
clc
mov
push
push
in
pop
insb
out
or
push
mov
add
sbb
pop
imul
xor
or
cmp
push
sbb
insb
mov
cmp
insb
cmpl
pop
insb
push
mov
mov
mov
in
inc
gs
sbb
cli
mov
or
push
lock
pop
adc
loop
pusha
hlt
mov
sbb
insb
call
sub
stos
jp
in
jge
cmp
ret
lods
adc
repnz
xchg
push
imul
jl
jbe
hlt
notb
sub
jo
js
push
xor
or
sub
adc
mov
insb
mov
popf
dec
push
pop
xchg
cli
fwait
dec
dec
xor
insb
sub
out
lahf
adc
insb
xor
or
adc
xchg
inc
jmp
mov
scas
xchg
and
mov
int3
cs
insb
aam
mov
stos
insb
rcr
xchg
or
punpckhwd
hlt
jl
pop
mov
sub
cltd
mov
xchg
adc
dec
ljmp
orb
sbb
gs
xor
cs
xchg
gs
sub
js
insb
data16
or
adc
test
insb
mov
inc
aas
pop
repnz
stos
xor
or
xchg
insl
mov
mov
pop
ja
aam
push
sub
gs
stc
in
mov
in
lcall
dec
push
push
and
out
sub
idiv
pop
sahf
lret
mov
outsl
dec
bound
insb
inc
push
mov
jl
testl
cmp
push
in
mov
lods
insb
ds
es
insb
ret
xchg
sub
pop
dec
test
adc
inc
push
mov
insb
das
jle
mov
aam
imul
shrl
inc
sub
inc
das
adc
shlb
gs
xchg
xchg
ficompl
inc
mov
imul
popf
clc
xor
xor
aaa
sbb
insb
and
mov
cmp
imul
xchg
pop
mov
insb
or
sbb
mov
imul
ja
or
pop
mov
cmc
shll
int3
es
sbb
sbb
ss
mov
shl
xchg
xchg
out
lahf
outsb
insb
cmpsb
js
scas
mov
push
orb
pop
pop
jnp
pop
mov
out
add
outsb
insb
sub
dec
scas
ret
js
insb
mov
mov
push
test
fcomps
test
out
dec
je
insb
je
cwtl
jg
popa
mov
cltd
jnp
imul
fcomps
cs
imul
mov
dec
and
xchg
xchg
mov
push
mov
fbld
push
pop
in
xchg
xor
inc
sub
xor
dec
sarb
adc
in
push
insb
out
iret
cmpl
xor
call
dec
imul
sbb
mov
dec
jg
imul
add
inc
sbb
lods
repnz
xchg
insb
add
and
loopne
add
add
sub
inc
in
jecxz
jno
aam
imul
ljmp
fbld
insb
jbe
fidivrs
insb
jae
or
ds
stos
scas
insb
inc
adcl
or
ds
cmpsl
clc
in
inc
into
and
fwait
pushf
insb
jecxz
adc
or
repnz
push
jmp
in
sub
jo
hlt
shrl
fistps
lds
cwtl
fcmovu
fdivrl
xchg
dec
aam
negl
loopne
dec
sbb
mov
dec
or
in
sahf
rolb
call
hlt
add
stos
mov
shl
jbe
dec
jo
cmpb
fmuls
inc
fs
sbb
xor
sbb
jbe
adc
mov
leave
ljmp
movsb
les
test
sbb
stc
imul
and
or
push
xchg
out
mov
mov
insb
jmp
jg
imul
and
insb
test
icebp
mov
insb
add
sub
data16
mov
ja
dec
insb
jns
push
test
cs
popa
inc
add
mov
arpl
shrb
adc
call
insb
and
or
xor
inc
call
add
inc
in
jge
push
gs
repnz
xchg
pusha
jnp
ljmp
fistps
int3
mov
mov
popf
scas
dec
test
push
test
aas
xor
push
pop
pop
dec
insb
fbstp
out
dec
or
test
push
cmpl
std
cwtl
stos
in
mov
lods
cmp
lahf
dec
pop
cld
vphaddubw
iret
jp
lods
adc
stc
scas
pusha
add
repz
insb
int3
jnp
push
js
jp
adc
leave
cli
lods
and
fistpll
mov
imul
js
ss
sub
pusha
push
das
add
dec
inc
in
cmp
fsubl
add
xchg
insl
jl
jl
and
imul
inc
xchg
add
cmp
aas
xor
sarl
fsubrs
aaa
mov
xor
xchg
cmp
je
imul
cltd
insb
cld
cmp
sbb
repnz
call
adc
insb
loopne
in
bt
or
mov
sbb
pop
insb
js
push
loop
mov
push
repnz
inc
and
insb
inc
jb
xor
insb
ja
or
sbb
test
subl
push
out
dec
inc
aaa
mov
enter
cs
push
mov
lods
sbb
sbb
sub
push
imul
mov
test
stos
jbe
or
push
daa
insb
mov
or
nop
subb
in
dec
shrl
xchg
insl
mov
dec
xchg
fwait
lret
sub
jb
insb
fs
add
mov
movsb
rcr
stos
push
insb
xchg
xchg
mov
in
loop
insb
sub
and
jp
and
pushf
imul
jae
xchg
jmp
push
dec
movsl
or
bound
insl
mov
dec
mov
int3
pusha
or
add
adc
icebp
insb
int
jecxz
fcomi
movsb
insb
cmp
sub
in
mov
insb
lahf
into
push
bound
ljmp
cmp
cmpsl
outsb
xchg
call
cmp
mov
cs
push
or
jo
cmpsl
lret
rdpmc
xor
outsl
mov
jle
into
dec
and
insb
add
xchg
mov
insb
cld
mov
jo
insb
or
mov
divb
mov
and
push
ss
inc
dec
add
insb
and
mov
popf
push
js
int3
repnz
cmp
mov
enter
insb
xchg
xchg
xor
xchg
stc
insb
repnz
mov
push
lds
int
fisttps
xor
cmp
pop
and
cmpsb
mov
mov
clc
je
add
sub
push
pushf
jae
xor
mov
lods
jns
sub
jl,pn
in
cmp
negl
jne
insb
pop
scas
pop
xor
sbb
jmp
int3
dec
pop
sub
imul
outsl
sbb
flds
jb
mov
cmp
sbb
ret
stc
xchg
inc
fadds
lahf
clc
insb
add
pop
mov
mov
mov
adc
lcall
or
mov
sbb
insb
bnd
out
xchg
inc
insb
bound
mov
inc
insb
push
je
dec
lods
lods
xchg
imul
imul
xchg
sub
pop
lea
pusha
repz
insb
lret
shr
movd
cwtl
imulb
or
xor
fwait
dec
insb
pop
cmpb
outsb
in
insb
lahf
sbb
and
out
popf
insb
jmp
out
notb
insl
mov
call
js
push
in
repnz
pop
sbb
push
inc
andb
outsw
es
jg
das
pop
and
daa
jno
aaa
movsb
jl
and
std
xchg
mov
dec
dec
pop
movsb
rorl
es
jnp
test
or
push
mov
lret
insb
out
fnsave
in
insb
shll
push
xchg
insb
push
lcall
ljmp
insb
mov
push
dec
insb
into
xor
fs
insb
xlat
addr16
jg
call
and
jb
movsb
fnstsw
ja
sbb
out
rorl
insb
test
fisubrs
sub
jp
aad
mov
dec
outsb
popl
lret
into
js
xor
out
leave
ljmp
out
pop
lret
cmp
mov
insb
clc
cld
mov
sub
les
mov
sbb
and
push
aad
dec
add
int
adc
mov
sti
outsl
aam
sahf
pop
ds
sbb
insb
sarl
imul
xchg
in
outsb
fldenv
test
data16
add
pop
insb
cld
in
gs
scas
pop
imul
jbe
lds
sbb
xchg
pop
or
mov
xor
sub
xor
jno
xor
pop
gs
ficoms
sbb
dec
push
movsl
mov
dec
xor
dec
fimull
pushf
adc
add
mov
insb
pop
xchg
xor
insb
or
mov
in
xchg
inc
mov
push
clc
adc
test
aas
imulb
shll
inc
insb
mov
pushf
andb
les
insb
jne
xchg
jmp
insb
adc
leave
mov
insb
fwait
mov
ficomps
pushf
insb
xchg
push
add
adc
jl
aam
xor
shrb
inc
sub
out
pop
sbb
imul
push
jg
or
jae
imulb
insb
popf
mov
mov
xor
in
cmp
popa
adc
aas
scas
clc
test
or
ret
dec
push
ja
cmp
adc
dec
cltd
out
xor
insl
jle
adcb
loopne
in
push
xchg
aad
imul
fimull
fidivs
das
mov
lods
cwtl
in
pop
mov
push
xchg
fisubl
imul
ljmp
pop
mov
test
fldenv
or
sub
cmp
nop
subl
das
mov
insb
adc
test
cmpb
in
adc
fstp
jnp
je
sub
sub
stc
or
xor
imul
imulb
mov
imul
mov
jne
lret
subb
dec
sti
mov
mov
fimuls
insb
ds
or
dec
rolb
popa
imul
bound
lock
js
insb
inc
clc
xchg
inc
test
stos
stc
pusha
jae
pop
or
push
in
int
mov
gs
daa
adc
xor
inc
insl
pop
lods
push
lahf
push
in
out
lock
jnp
int3
rclw
jp,pt
imul
aas
or
stos
pop
repnz
cmp
adc
negl
ret
fdivl
jle
pop
mov
and
int3
repnz
outsl
lahf
inc
shr
or
jle
imul
or
cltd
insb
sti
cld
roll
mov
stos
aam
repz
icebp
test
out
les
push
pop
cli
clc
push
cltd
insb
push
mov
xchg
add
aaa
hlt
mov
or
cmp
pop
pop
rcl
xor
push
pop
adc
testb
xchg
pop
gs
or
dec
pop
std
cmpsb
sub
iret
ja
data16
movsl
cmp
jge
fisttpll
mov
xchg
inc
fidivs
cmp
je
pop
xchg
imul
or
mov
push
adc
orb
fs
jns
enter
dec
aaa
data16
push
int
cmc
xchg
sub
pop
pop
cli
add
mov
dec
fisubs
ss
adc
insb
and
inc
imul
inc
ret
pushf
jnp
cmp
insb
pop
call
xchg
dec
insb
ret
retw
sub
insb
lods
mov
mov
outsb
push
js
insb
or
sub
mov
xchg
imul
insb
das
jl
xchg
ss
call
push
outsb
cmpsb
test
insb
es
imul
cmp
aam
cld
imul
les
clc
movsb
ds
popa
insb
mov
jecxz
lock
insb
pop
push
stos
add
in
inc
imul
aas
adc
hlt
sbb
stc
mov
sub
jmp
aam
pop
cmp
adc
insb
test
inc
test
pop
sbb
pop
mov
test
dec
dec
stos
pop
and
xor
out
mov
pop
insb
and
dec
outsl
mov
ljmp
xor
xchg
dec
insb
jecxz
cmpsl
icebp
out
cmc
xchg
mov
iret
aam
and
jae
into
xor
je
pop
jmp
in
icebp
mov
adc
jmp
add
inc
jl
jecxz
pop
dec
fsubrl
les
mov
push
popf
xorl
inc
out
cmpsb
add
call
ret
jecxz
xchg
sub
add
pushf
je
insb
jmp
push
push
in
lret
insb
push
sbb
jb
add
dec
sti
mulb
xchg
test
adc
insb
mov
and
push
jno
push
mov
xchg
sub
aaa
repz
movsb
icebp
jl
push
push
sub
or
scas
pop
lea
out
insb
clc
or
mov
push
out
adc
dec
mov
pushf
andb
insb
cmp
jge
jbe
and
pop
adc
es
clc
adc
dec
mov
cs
stc
or
jg
cwtl
in
jmp
inc
pop
dec
cmp
mov
jno
mov
sub
cmpsb
add
idivl
jb
int3
or
pop
fdivr
shlb
xchg
sbb
clc
arpl
test
jl
cmp
into
insb
add
or
pop
test
mov
xor
jb
es
ja
imul
lods
lock
adc
insb
enter
sti
cmpsb
bound
adcl
imul
inc
inc
push
imul
push
call
insb
inc
std
pop
mov
inc
mov
outsl
pop
ja
jge
cli
or
rorb
push
add
insb
cmp
stos
xlat
insb
jb
xor
in
and
bound
je
push
insb
jno
lock
add
adc
inc
sub
xor
push
xor
xchg
loope
aas
lods
mov
or
lods
pop
aaa
out
pop
in
ret
stos
pop
insl
fists
insb
sub
popa
lods
sub
cmp
gs
dec
outsb
mov
repnz
mov
xor
jae
mov
std
dec
or
test
in
jns
insb
dec
jle
cmpsb
cvtps2pd
dec
xor
arpl
insb
int
stc
out
cmpsl
jno
insb
mov
and
jmp
flds
scas
add
lds
sub
insb
cltd
sbb
imul
bound
lods
and
insb
sbb
pop
pop
cmp
popf
mov
xchg
cli
push
adc
ds
test
push
push
cs
imul
mov
nop
sbb
ror
jns
xchg
scas
inc
add
mov
jb
push
xor
insb
sub
fdiv
insb
test
mov
bound
pop
and
pop
popa
addr16
insb
bound
test
cs
icebp
sbb
mov
lcall
xlat
cs
int
push
dec
arpl
mov
jge
test
ficoml
sbb
fmull
scas
push
push
in
shll
js
dec
cmp
cmp
sbb
leave
jo
adc
jb
stos
dec
mov
fdiv
mov
pusha
gs
popf
outsb
inc
test
cmpsl
insb
mov
push
dec
imul
clc
int
out
icebp
imul
mov
inc
xchg
jnp
arpl
mov
and
inc
out
dec
sub
icebp
ds
and
sub
or
cmp
add
and
pop
dec
pop
mov
in
lods
movsb
mov
lea
cld
fisttps
push
xchg
test
push
sarb
mov
jae
dec
insb
sub
clc
jecxz
xor
ljmp
cli
or
pop
inc
and
xchg
dec
test
in
mov
nop
es
jl
cltd
insb
dec
adc
cs
mov
ret
pusha
ret
and
mov
cmp
push
mov
push
popa
lds
mov
xor
outsb
aad
jae
jbe
xor
repnz
jecxz
or
loope
insb
and
ds
imul
fcoml
or
orb
imul
xchg
aam
push
cmp
out
insb
pop
cld
icebp
dec
into
ret
gs
shl
inc
sub
mov
out
adcl
push
or
subb
je
gs
lcall
int3
mov
add
ret
jg
xlat
mov
shrb
insb
test
jl
loopne
into
sbb
xchg
sub
andl
push
daa
inc
mov
in
mov
xchg
add
fidivl
pop
dec
cmpsl
pop
cli
adc
lahf
sub
jp
xchg
je
cmpl
xchg
adc
imulb
pop
or
jno
das
scas
fucomi
cs
stc
out
in
imul
jns
in
mov
sub
xchg
stc
push
shrl
jno
ss
test
jnp
test
mov
les
stos
xor
dec
aad
call
inc
clc
pusha
insb
push
cld
lret
and
hlt
mov
pop
data16
dec
sbb
subl
stos
iret
nop
sarb
fidivrs
sub
les
inc
xchg
insb
jg
jae
sub
pop
insb
push
inc
lret
fstpt
cmp
jo
out
push
adc
divb
insb
xchg
mov
pop
orl
and
gs
popa
repz
xchg
mov
insb
dec
mov
mov
xor
icebp
nop
lahf
loopne
js
or
sub
sbb
fs
sarb
lods
mov
mov
cmpsb
cmp
jmp
clc
ret
inc
or
lods
insb
iret
xchg
mov
sub
cmp
insb
stos
ja
str
insb
xor
adc
insb
icebp
xchg
jo
out
inc
fisubrs
scas
inc
pop
movsl
and
mov
push
loopne
daa
jmp
jno
insb
cmpsl
scas
adc
inc
insb
mov
or
sahf
cmp
jle
fiaddl
and
push
mov
or
mov
insb
arpl
out
stos
call
sbb
insb
clc
inc
nop
cmp
pop
xchg
inc
dec
pop
iret
pop
lods
pushf
ret
inc
addr16
clc
popa
out
mov
filds
lds
imul
mov
pop
insb
xchg
push
test
dec
mov
jb
insb
in
xor
dec
mov
sub
push
mov
lods
repz
insb
dec
xor
dec
imul
sub
mov
hlt
push
ljmp
xchg
push
xor
not
and
mov
clc
cmp
cmp
shll
mov
push
pop
lretw
mov
sub
xor
lahf
push
insb
add
aas
or
mov
mov
insb
adc
jae
add
or
mov
lock
dec
push
jge
pop
and
imulb
fwait
mov
push
add
lea
imul
jge
cmpsb
iret
ss
mov
and
movsl
int3
insb
sti
dec
std
add
rclb
xchg
nop
mov
jbe
ds
mov
inc
or
ficomps
insb
cmp
jne
mov
or
dec
add
push
pop
pop
movsl
enter
xorb
xor
int3
push
cltd
jmp
dec
insb
inc
mov
andl
test
out
or
arpl
xchg
icebp
lods
push
rorl
insb
fisubs
lret
dec
cli
stos
pushf
lods
xor
repnz
pushl
mov
pop
mov
or
mov
jns
in
sub
add
push
xor
clc
pop
xchg
cwtl
lret
pop
insb
int3
lods
aaa
mov
imul
dec
dec
insl
ret
jne
sub
test
fucomp
sub
in
cmpsl
mov
shll
lahf
and
push
fstpl
xchg
fdivrl
cmp
test
lcall
mov
lfs
outsb
int
adc
mov
lods
pop
inc
insb
sti
in
clc
call
jne
or
test
or
insb
mov
fildll
dec
std
icebp
lahf
add
insb
pop
jbe
cmc
out
pop
cmp
mov
push
loopne
inc
pop
xor
sti
or
aaa
mov
xchg
sub
push
cmp
dec
jb
ja
add
jb
dec
aas
outsl
push
das
xor
stos
fs
lods
call
lods
in
popf
mov
insb
arpl
dec
jae
xchg
outsb
sbb
jns
jle
insl
add
insb
pop
js
pop
sarb
test
aad
loope
push
lea
cwtl
gs
ss
insb
fisubrl
jnp
pop
mov
and
leave
dec
xchg
repnz
cwtl
xor
insl
or
dec
jae
jnp
mov
adc
sbb
int3
iret
sbb
enter
or
xchg
insb
cmp
lahf
loope
insb
subb
pop
jge
inc
imul
sub
cmp
push
imul
rolb
xchg
adc
xor
xchg
aad
push
fsubrs
loope
sub
stc
std
adc
arpl
push
insb
push
mulb
mov
xchg
insb
loope
or
sbb
cmp
insb
sti
lds
in
jbe
in
pop
xchg
mov
iret
std
shrl
and
insb
andb
mov
or
insb
mov
mulb
xchg
rorl
mov
xchg
xor
insb
call
enter
push
push
adc
push
cli
or
and
es
out
or
mov
scas
ds
insb
pop
xchg
popa
enter
sti
pop
xchg
or
push
gs
insb
adc
in
push
cltd
cmpsl
fldl
push
jmp
mov
xor
pop
xchg
or
xchg
in
test
orl
inc
dec
dec
js
divl
push
hlt
in
out
cmp
insb
push
pmaxub
repnz
dec
pop
imul
xor
imul
pop
xlat
mov
lods
and
xchg
and
cmp
jnp
insb
inc
sbb
jo
pop
mov
lods
scas
jo
and
push
daa
insb
addl
icebp
sti
add
pop
adc
pushf
mov
fmull
sti
shrl
push
jnp
lods
jmp
cmp
out
adc
insb
mov
push
jb
sub
insb
int
imul
lcall
pop
in
mov
mov
and
mov
adc
cld
dec
push
cs
push
test
insb
sbb
ret
mov
cwtl
inc
cld
cmp
adc
movsl
shll
mov
insb
fwait
pusha
xor
mov
call
add
in
movsl
push
ret
je
stos
je
xchg
lock
insb
fiadds
fistl
fdivs
popa
push
xor
out
daa
mov
xor
imulb
push
mov
mov
push
call
dec
gs
sub
mov
xor
in
imul
adcl
movsb
mov
push
mov
dec
mov
loop
cwtl
add
in
pop
out
jnp
int3
mov
or
sbb
movl
je,pn
pushl
mov
cld
mov
xor
jno
lds
dec
jns
push
push
ja
insb
or
xchg
insb
and
and
insb
lea
popf
adc
mov
into
scas
shrl
insb
jae
sbb
int
div
cwtl
nop
and
in
push
es
sub
cmp
cmp
sub
cli
fisubl
out
out
add
aaa
xchg
insb
das
int3
ljmp
push
insb
xchg
and
ja
pop
or
insl
xchg
ret
mov
fstpl
imul
jg
in
insb
or
mov
mov
in
jl
por
insb
mov
push
popa
sar
push
inc
and
pop
in
mov
insb
in
mov
scas
jbe
sub
pusha
mov
fcomi
push
pop
out
imul
leave
bound
stc
insb
cmp
rcrl
mov
jne
xchg
add
xchg
arpl
mov
fsubrs
fildll
imul
insb
cs
cmp
fxam
out
inc
insb
sub
in
insb
inc
cltd
xchg
adc
sbbb
testl
shr
pop
cmc
out
lods
or
insb
lcall
jp
cmpsl
mov
sbb
push
push
pop
ss
fwait
insb
mov
push
mov
jno
fcoms
insb
std
mov
xchg
pop
sbb
inc
jbe
outsb
jmp
fidivl
in
in
shrb
jle
push
mov
jg
cmp
adc
mov
mov
and
call
insb
std
sbb
mov
insb
jmp
fbld
das
mov
sti
xchg
addr16
jbe
push
and
ret
pop
sub
aad
je
sub
dec
clc
dec
call
xchg
imul
testl
add
es
std
je
mov
imul
mov
addl
push
add
insb
sub
outsl
mov
pusha
mov
insb
add
inc
push
mov
cli
jmp
adc
sub
popa
push
or
sbb
imul
pop
std
mov
shrb
call
xor
mov
in
pop
ret
push
add
mov
insb
fidivl
aad
insb
pop
mov
and
xor
sub
je
mov
dec
in
inc
fisttpll
pop
or
pop
ds
loopne
insb
in
sub
dec
insb
addr16
push
push
ss
or
insl
pushf
or
push
sub
cmp
insl
jmp
outsl
xchg
jle
and
insb
movsl
xchg
inc
ss
icebp
jp
insb
loopne
push
mov
mov
jo
arpl
and
xlat
adc
insb
fwait
push
in
pop
cld
std
cltd
test
pop
cmovs
in
pop
mov
add
mov
insb
enter
in
add
stos
insb
xchg
xor
out
pop
pushf
xor
add
push
test
shrl
hlt
lret
adc
inc
out
clc
xchg
sub
aaa
in
imul
lcall
es
jge
jne
mov
or
imul
out
in
into
inc
and
fnstenv
insb
mov
jle
xchg
pop
dec
xchg
cmp
das
lods
inc
out
sbb
dec
push
sbb
cmp
xlat
dec
insb
jb
icebp
mov
test
imul
lahf
mov
mov
sbb
gs
add
mov
mov
shrl
adcb
lock
fistpl
pushf
adc
in
das
daa
insl
xchg
outsb
imul
xor
mov
mov
ljmp
frstor
sbb
add
dec
das
addr16
subb
negl
or
and
mov
test
imul
imulb
push
outsl
sbbl
movsb
mov
mov
jb
insb
and
cld
lret
inc
or
insl
sbb
dec
enter
xchg
mov
lea
pop
mov
imul
hlt
je
aam
gs
repz
jne
mov
mov
clc
sub
xchg
sbb
insb
daa
adc
jle
insb
xor
ljmp
lcall
cmpsb
les
jmp
mov
push
fcoml
sub
out
icebp
test
pushf
jne
iret
insb
cmpsl
mov
and
addr16
imul
dec
popa
in
xlat
mov
xchg
mov
sbb
xorl
sub
jnp
mov
insb
inc
es
cmpsb
mov
jns
adc
push
and
stos
enter
mov
dec
pop
jge
fwait
inc
or
and
fmuls
loopne
jnp
jecxz
sub
fs
mov
imul
and
jae
sub
or
data16
jl
pmuludq
rol
pop
cld
inc
mov
xchg
pop
pop
adc
sbbb
gs
mov
cmc
mov
inc
insb
fcmovnb
push
xchg
clc
scas
dec
gs
sub
insb
pop
inc
pop
je
mov
daa
movsl
ficoml
lret
ss
sub
std
sbb
cmpsl
lds
or
cmovo
insl
and
imul
push
cwtl
xchg
addr16
mov
push
out
rep
fdivrs
pop
adc
mov
fwait
movsb
movsl
add
insb
and
push
ljmp
idivl
push
add
in
or
xor
loop
xorb
push
xchg
pop
repz
push
insb
jle
mov
mov
sahf
xchg
jnp
ret
popa
gs
loope
pop
jl
or
out
ja
xor
pop
pop
movsl
fnstsw
js
mov
add
shll
jecxz
jle
arpl
mov
pop
imul
mov
push
add
sbb
xor
mov
mov
imul
inc
test
sub
js
xchg
out
dec
pop
xor
or
popf
mov
je
notl
lret
js
lcall
pop
enter
in
cmpsl
mov
movsb
insb
test
cmp
adc
repz
imul
sub
push
arpl
mov
dec
mov
dec
fcomps
enter
xor
mov
pop
movsl
xchg
push
sbb
mov
das
add
xor
dec
shll
sbb
movsl
orl
ret
mov
cmp
in
xchg
int
mov
and
jae
inc
jmp
mov
xor
push
imul
insb
lock
mov
jb,pn
aad
pop
push
test
jge
rcrl
or
insb
rcll
cltd
lds
into
mov
outsb
and
and
mov
or
lret
lds
add
insb
dec
adcb
mov
adc
insb
hlt
test
js
insb
outsl
sbb
xchg
inc
lock
imul
es
pop
pop
int3
dec
pushw
int
insb
out
loop
mov
insb
push
repz
xchg
jno
insb
pop
dec
dec
in
mov
test
mov
sarb
push
out
adc
gs
xchg
es
sub
mov
push
insb
sub
fwait
shrl
mov
insb
xchg
daa
push
test
and
inc
in
jge
mov
nop
sub
cmp
sbb
or
in
xor
out
jl
arpl
and
pop
push
fmull
lret
xchg
pop
lds
push
insb
mov
scas
ss
sub
movsl
insb
cmpsb
test
stc
push
insb
scas
mov
dec
fsubrs
cld
ret
imul
dec
inc
sub
dec
ljmp
loope
push
mov
stc
insb
mov
ss
pop
mov
sub
leave
enter
adc
pop
dec
dec
loop
daa
jno
xchg
stos
mov
mov
sti
jnp
aam
in
cmp
scas
int3
jmp
lcall
jb
repz
cmp
xor
cmp
int3
ja
in
sbb
negb
inc
or
inc
in
pushf
sbb
dec
inc
or
and
inc
xor
out
jne
btc
mov
aas
pop
or
adc
outsl
insb
stos
scas
enter
lcall
mov
std
popf
aad
ss
push
mov
xchg
sub
jg
xor
adc
dec
sahf
stc
push
in
or
jno
jne
insb
mov
loopne
mov
mov
ss
les
out
insb
jbe
push
arpl
mov
insb
xor
shll
addb
cmpsl
insb
inc
adcl
dec
add
int3
jb
mov
xchg
bound
adc
fmull
ljmp
jg
mov
mov
sbb
pop
lcall
add
inc
insb
addr16
xchg
mov
shl
push
addr16
dec
imul
std
sbb
in
xchg
cmp
outsb
scas
insb
lods
lahf
pop
inc
bound
xorl
cmp
mov
in
or
xor
mov
cmp
frstor
xchg
jae
insb
dec
cld
mov
lock
ljmp
and
pop
xor
mov
pop
les
dec
scas
inc
push
insb
mov
lock
pop
adc
sbb
in
subl
sub
jo
adc
enter
mov
inc
lret
xchg
iret
insl
pop
pop
mov
add
cli
negb
leave
xor
mov
sti
push
je
pushl
and
sbb
insb
inc
and
test
arpl
pop
cltd
and
pop
sbb
jge
jecxz
shrb
fistpll
and
ret
out
cmp
dec
sub
pop
cmc
sbb
sub
in
flds
scas
dec
scas
sarb
sahf
jp
rolb
sub
dec
push
push
popa
aas
scas
push
jmp
iret
js
or
sarb
data16
int3
xchg
cmp
xchg
xor
lahf
dec
test
lods
push
mov
push
cmpsb
cltd
sub
lea
mov
sbb
insb
outsb
into
fwait
cs
int
lock
mov
or
je
insb
jb
mov
mov
pusha
insb
frstpm(287
idivb
jbe
das
pop
xchg
dec
jb
in
jle
std
adc
lock
imul
or
sbb
fcomps
scas
insb
out
loope
cli
mov
insb
jg
push
into
xchg
pop
sub
je
enter
fisubs
test
xchg
mov
xchg
sub
out
mov
inc
jl
adc
lods
mov
insb
lods
loopne
sbb
insb
fidivl
cld
mov
push
in
insb
xchg
push
inc
xchg
push
sub
sbb
pop
repnz
je
insb
jmp
push
and
pop
mov
clc
pop
fidivrl
push
insb
jl
data16
dec
cmpsl
insb
rcrl
outsb
scas
insb
dec
cmp
insb
push
dec
xchg
pop
push
addr16
repnz
stos
insb
xlat
je
repz
loop
popf
jne
push
insb
das
fdivp
mov
pop
mov
jb
stos
dec
je
or
orl
push
push
les
hlt
or
jo
fstl
jle
out
xor
call
jle
idivl
mov
arpl
pop
jecxz
test
cmp
pop
out
jae
inc
mov
mov
push
addr16
test
pop
rolb
mov
fidivrs
repnz
xorl
jmp
movsl
sub
xchg
pop
ja
das
cmpl
mov
testb
bound
shr
sbb
xlat
fiaddl
sbb
mov
mov
scas
orl
roll
std
dec
pop
lds
cmp
sbb
ljmp
shl
cmpsb
and
xlat
sbb
in
rcrl
xchg
out
xor
jno
movsb
push
or
pop
fs
xor
in
outsl
adc
in
mov
ja
xor
cmc
lcall
mov
mov
pop
cmc
jnp
xlat
shrb
and
sub
data16
fdiv
xor
bound
and
in
scas
jo
sbb
outsl
pop
jb
in
scas
andb
inc
mov
insb
cmp
test
insb
cld
jmp
add
pop
pop
mov
sub
repz
imul
sbb
mov
and
insl
rolb
sub
int
xor
ljmp
ret
adc
mov
push
insb
jle
and
orl
or
shll
push
cmp
push
insb
cmp
nop
fdiv
imul
je
jb
add
ret
aam
insb
loope
in
inc
sahf
out
popf
imul
mov
inc
mov
lds
mov
lock
imul
les
jb
inc
pusha
jne
dec
into
sbb
insb
and
jle
insb
stos
fisubrl
jo
adc
les
test
dec
insb
pushf
call
decl
mov
cmp
cmpsl
or
inc
sub
sub
xchg
out
pushf
pop
jle
dec
insb
xchg
out
jo
gs
or
dec
out
push
and
imul
lret
ss
push
out
and
sub
daa
xor
add
jp
xor
addr16
push
gs
mov
xchg
imul
mov
dec
inc
sub
dec
scas
out
fisttpl
xchg
push
popa
dec
inc
cmp
movsb
lods
jae
dec
sub
pop
in
decb
hlt
lods
mov
je
insb
lret
pop
jl
in
into
add
insb
push
push
lahf
fstps
ljmp
negl
lock
xor
leave
xlat
insb
loopne
push
add
jle
das
inc
add
pop
add
and
dec
int3
xchg
shll
dec
xchg
jp
cld
iret
popf
mov
xchg
sti
mov
cmp
test
add
pop
in
cli
mov
inc
ret
das
call
ss
jmp
mov
insb
aaa
lahf
aad
add
iret
or
xlat
lods
inc
lcall
xor
std
insb
repnz
inc
stos
aad
cli
fildll
push
frndint
fiadds
scas
cmpsl
sti
jecxz
sti
mov
in
sub
js
dec
pushf
push
mov
call
xchg
mov
lods
pop
sbb
and
push
or
and
xchg
inc
mov
insb
cmp
aam
xor
insb
sub
fstps
ret
das
fmull
push
add
imul
jno
pop
mov
fmull
fs
fisttpll
dec
test
repz
popa
into
lods
jo
outsl
insb
stos
add
in
sub
or
mov
ss
mov
or
in
mov
in
loopne
loop
repz
rorl
insb
in
xchg
push
add
mov
mov
insb
sbb
insl
jb
repnz
insb
sbb
xchg
cmpsb
push
sarl
inc
inc
insb
mov
pop
ret
mov
xchg
fnsave
fistps
insb
je
enter
fcoms
outsb
adc
dec
jns
int
jp
int
sbb
pop
cmpsl
sahf
jg
je
or
pop
cmp
insl
cmpsb
in
call
mov
dec
out
push
sub
xchg
pop
jg
lret
lea
imul
rep
pop
stos
mov
mov
aas
adc
mov
insb
sub
lock
enter
mov
insb
gs
insb
std
jno
adc
shlb
mov
insb
jmp
xchg
imul
push
std
loop
sbb
ds
pop
dec
xchg
enter
cs
into
dec
mov
sub
sbb
push
sbb
adc
aad
lods
jge
jno
add
es
mov
sbb
scas
and
out
mov
insb
push
js
dec
out
dec
pop
sub
pop
insb
and
inc
push
out
push
jl
pop
aam
scas
sti
insb
mov
outsl
push
imul
sbb
jge
sub
aad
mov
cmp
push
insb
xor
fnsave
mov
loope
mov
mov
sti
imul
dec
jo
ret
mov
xor
lds
insb
js
aam
jmp
cs
mov
cld
fcomp
push
or
sub
and
sti
xchg
mov
mov
inc
sti
rcrl
leave
insb
int3
xchg
flds
dec
xor
pop
stos
add
es
and
xor
cs
adc
out
push
fistl
xor
or
in
ficomps
dec
sub
adc
pop
xor
in
lret
push
dec
cs
jns,pn
imul
cmpsb
cwtl
jg
insb
aaa
loope
out
xchg
rclb
or
pop
lcall
out
inc
mov
sbb
lods
call
popa
pop
fdivp
iret
insb
inc
or
add
insb
jnp
cltd
data16
xchg
lret
jp
mov
mov
sbb
insb
out
imul
push
sub
pop
test
push
imul
cld
addr16
pop
cmpsb
test
ret
movsb
xor
rolb
js
test
adc
insb
orl
shll
stos
cld
inc
iret
sub
jg
sub
mov
cmp
imul
mov
and
out
cs
enter
fmul
pop
fdivr
inc
inc
stos
rcll
mov
sbb
jg
push
pop
in
xchg
sub
insb
loopne
ret
adc
xor
std
insb
iret
xor
pop
shll
mov
sub
cmp
pop
cld
inc
insb
jmp
jge
mov
cld
pop
gs
pop
ficoml
pop
idivb
pop
mov
out
pop
pushf
imul
mulb
movzbl
insb
and
dec
adc
xor
xchg
jecxz
cmp
xchg
inc
and
iret
insb
push
mov
mov
jp
cs
xor
pusha
jmp
cmc
push
scas
outsb
xor
fcompl
dec
push
mov
mov
repz
xchg
adc
dec
cmc
jmp
into
adc
adcb
insb
push
cwtl
icebp
imul
shrb
outsb
push
leave
mov
push
scas
insb
movsl
adc
and
dec
pop
in
xchg
gs
test
fdivr
mov
aaa
insb
dec
mov
lods
jo
pop
fs
dec
je
mov
jns
xchg
add
hlt
sub
pop
bound
lds
fwait
mov
repz
test
insb
test
repnz
aad
xchg
mov
jle
out
jo
sbb
pop
lret
testl
test
dec
jmp
fdivs
insb
and
push
rcr
outsb
repnz
dec
add
mov
dec
cld
fsubrl
inc
dec
xor
lret
sub
jl
movsl
sub
pop
rcrl
sbb
cmp
mov
lahf
pop
pusha
mov
insb
sbb
loopne
inc
insb
xchg
sbb
adc
mov
push
insb
xchg
test
aaa
inc
cmp
lcall
inc
hlt
pop
aam
xchg
xor
ret
mov
xchg
lods
fsubrl
xor
sbb
cmc
xchg
sub
dec
imul
dec
mov
push
push
lea
pop
loope
jae
sti
dec
addr16
sub
dec
rcrl
add
int3
imul
xchg
mov
shrl
in
fdivrl
mov
es
enter
mov
jne
sub
in
pop
cmp
ret
mov
and
sub
push
daa
inc
pusha
call
ficompl
subl
sbb
push
jle
fucomi
and
lock
stos
ret
push
insb
ficompl
dec
lds
add
push
into
ror
insb
pop
lods
adc
sub
aam
sbb
insb
stc
or
xor
loope
fwait
and
negl
mov
lods
scas
stc
call
scas
pop
add
adc
xor
shr
or
cmp
lds
xchg
aad
imul
movsb
mov
fdivrp
subb
xchg
fwait
cmc
daa
sub
mov
push
lcall
xor
xor
cmp
dec
movsb
adc
outsb
imul
je
das
lcall
insb
mov
cmp
inc
insb
inc
adc
icebp
in
aam
mov
dec
fnsave
lods
inc
inc
shll
mov
lret
insb
in
repnz
mov
insb
push
cmp
test
sub
cmp
mov
xlat
xchg
pop
or
push
rorb
outsl
mov
push
out
insb
stos
nop
sbb
lret
arpl
pop
jp
mov
lods
mov
aam
xor
outsb
pop
repnz
jp
gs
cmpb
dec
sub
call
insb
fistl
sub
dec
push
adc
fildll
mov
inc
fdiv
je
xchg
in
inc
movsb
inc
into
dec
call
lods
inc
cmp
and
popf
repnz
xorl
add
pop
cmpsb
inc
cs
sub
inc
add
outsb
cmp
test
movsl
subl
sti
or
mov
xor
xchg
imul
xor
adc
adc
insb
sbb
imul
sbb
pusha
or
dec
mov
jne
out
xchg
sub
pop
pop
stos
sbb
fcomip
add
insb
jmp
in
insb
cmpb
pop
fmull
mov
xchg
jno
jo
cmpsb
dec
cmp
pop
xchg
in
jle
stc
push
pop
imul
dec
arpl
and
jg
jno
jo
jl
insb
mov
pop
mov
and
out
push
rol
mov
jecxz
test
push
xor
jge
add
mov
fstpt
insb
rcrb
xor
popa
jno
push
mov
mov
xchg
test
pop
sub
repz
sarl
fisubrs
arpl
and
jl
push
mov
in
gs
jne
into
ljmp
xor
movsb
jmp
pop
std
jo
push
xchg
lock
xor
sub
inc
adc
pop
in
pop
dec
in
sbb
mov
ljmp
xor
lods
sbb
cmpsl
sub
push
ja
mov
es
push
push
jbe
xchg
push
sbb
imul
sbb
adc
add
popa
cwtl
addb
add
mov
roll
and
sub
mov
das
int3
rcl
inc
lcall
cmp
insb
push
leave
xor
insl
pop
jae
daa
adc
xor
in
test
pop
mov
out
in
adcl
outsl
mov
push
call
hlt
add
out
lock
push
insb
dec
dec
cmp
mov
out
mov
into
xor
sub
push
test
shlb
lods
adc
movsl
dec
cld
push
inc
jo
shrl
push
xchg
ss
cmp
xchg
mov
data16
cmp
xor
dec
inc
mov
pop
xchg
add
adc
add
sub
push
sbb
jle
xor
gs
dec
insl
lods
dec
inc
aam
cmc
adc
aaa
ljmp
cmpsl
aad
jns
jp
or
inc
imul
cmpb
jns
loope
xor
jnp
sbbl
in
in
mov
mov
dec
rorl
imul
push
lcall
mov
ficompl
in
test
jmp
sub
cltd
push
push
test
ss
scas
sbb
or
mov
das
imul
lock
out
loope
je
addr16
pushw
cmc
xor
roll
add
roll
stc
push
pop
in
or
icebp
pop
xor
imul
mov
popf
push
pop
imul
jecxz
aad
imul
insb
das
push
or
mov
adc
jge
ficoms
add
insb
cmp
sbb
mov
inc
test
adc
outsl
insb
popf
clc
cld
je
int3
rcrb
lcall
lock
dec
add
ret
test
insb
lock
imul
sbb
mov
lods
mov
mov
dec
push
ret
popa
mov
sub
or
enter
push
sub
xor
in
sbb
addr16
jmp
jle
sahf
jno
sarl
repnz
into
loop
insb
push
inc
xchg
push
inc
mov
or
sbb
in
jg
aad
jne
adc
repnz
or
inc
jae
jecxz
insb
cli
rcll
inc
dec
push
mov
pusha
push
stos
mov
mov
sbb
or
cmpsb
pop
insb
sub
mov
sbb
stos
fstpl
ret
push
jl
mov
insb
mov
cltd
dec
add
cli
mov
mov
mulb
and
test
insb
faddp
mov
loopne
mov
xchg
or
lods
push
jg
imull
mov
inc
out
xlat
adc
pop
insb
in
sbb
mov
mov
sub
es
ret
aas
or
mov
insb
add
adc
mov
push
xchg
or
stos
push
fwait
adc
pop
mov
rcrl
xchg
pop
icebp
repz
insb
and
pop
xchg
dec
insb
push
mov
movsb
gs
push
pmaxub
cmpsl
nop
lods
shll
gs
fisttpl
mov
sbb
and
dec
fsubrs
jge
push
insb
pop
jne
mov
insb
out
mov
test
insb
nop
mov
or
mov
adc
and
jb
dec
nop
insb
sub
cwtl
and
aad
in
xor
push
fidivrl
jg
lret
pop
mov
imul
and
xchg
adc
cmp
stos
insb
mov
test
idivb
and
cmc
mov
pop
jnp
mov
pop
gs
shrl
add
dec
outsl
in
add
push
popa
pushf
clc
ret
sbb
ljmp
js
loop
popf
insb
and
pop
insb
cmp
inc
xchg
gs
jecxz
ja
mov
loopne
mov
outsb
and
add
mov
into
mov
mov
insb
adc
bound
insb
int3
jg
aaa
repz
adc
stc
mov
aas
xchg
mov
in
dec
imul
mov
std
mov
pop
pop
or
push
push
sub
adc
insb
pusha
sbb
push
insb
notb
subl
adc
mov
dec
mov
dec
imull
add
adc
insb
cli
std
out
shlb
repnz
insb
int3
aas
cld
ret
daa
mov
test
lds
pop
add
mov
test
sahf
and
push
outsl
adc
loop
mov
dec
inc
mov
insb
das
cmp
cmp
push
into
and
fmul
insb
into
pop
shlb
ljmp
imul
sarl
mov
adc
cld
jg
loop
nop
sub
outsb
mov
std
xor
gs
jl
movsb
and
insb
mov
jp
push
imul
mov
and
in
stos
cmp
lret
insb
je
jg
inc
icebp
loope
insb
push
push
add
push
xlat
movsl
ljmp
jne
imul
dec
or
sub
daa
imul
adc
or
movsb
test
call
push
dec
insl
sti
cmp
fdivp
xchg
lret
pop
sbb
jl
orb
imul
mov
insb
pushf
sti
push
or
xor
insb
arpl
push
and
xor
lret
les
xchg
xor
outsb
out
sbb
shll
addr16
xlat
push
out
ret
fisttps
add
in
jge
mov
pop
dec
push
sub
lahf
ret
adc
fs
cmc
bound
int
mov
in
insb
nop
push
mov
popa
push
xor
dec
ret
dec
call
jecxz
enter
loop
mov
sub
cmp
into
dec
sbb
jmp
push
pop
std
xor
or
stos
cli
je
dec
mov
loop
pop
lahf
inc
insb
push
jmp
or
ds
insb
jo
jmp
shrl
sti
mov
or
adc
xchg
push
xor
xor
andb
lret
imul
imul
xor
xlat
cmp
insb
xor
push
mov
stos
hlt
xor
xor
popa
lcall
jl
insb
test
fwait
test
mov
out
xor
adc
lea
fdivrl
cpuid
cmpb
loop
mov
push
mov
stos
insb
rcrb
pop
add
lock
inc
push
add
cmc
mov
push
mov
shrl
xchg
popf
mov
mov
decb
xchg
cltd
fldl
jne
push
jp
jnp
mov
xor
mov
xor
adc
push
popf
sti
sahf
mov
jo
call
jno
pop
mov
pop
int3
or
inc
inc
gs
insb
xor
mov
sub
ss
push
test
pop
xchg
sbb
push
jns
xchg
xor
imul
mov
insb
dec
and
das
inc
pop
push
mov
mov
jge
lods
hlt
mov
insb
sbb
pop
leave
inc
pop
pushf
sbb
cmc
sti
mov
jo
adcb
jl
xchg
movsl
fidivrs
pop
loope
test
sbb
insb
ljmp
movsl
insb
sub
iret
jns
cmp
mov
lahf
mov
insb
push
and
inc
push
dec
dec
xor
push
ret
gs
add
pop
jno
xor
push
push
cmp
aaa
mov
dec
flds
jo
rcrb
data16
fsubp
mov
mov
insb
jg
add
sub
into
ss
outsl
jnp
pusha
insb
repnz
dec
pop
and
jle
mov
stc
in
movsb
adc
pop
mov
cmpsb
pop
pop
xorl
outsb
gs
jmp
jle
mov
dec
and
mov
jbe
dec
mov
insb
mov
inc
stos
pop
xchg
jo
xchg
jmp
mov
jnp
repnz
add
fsubrs
adc
adc
insb
push
sbb
xlat
push
xor
insb
test
mov
cld
insb
mov
shrl
pop
js
xchg
inc
loopne
add
xchg
xchg
dec
aad
mov
dec
stos
jno
inc
icebp
sbb
or
cmpsb
mov
popa
insb
mov
jl
jp
cmc
mov
out
xor
fsubrs
hlt
xchg
rcll
lods
es
inc
pop
mov
aaa
insb
jne
or
sbb
dec
jo
jae
mov
inc
insb
push
aam
pop
ret
adc
insb
pop
es
pushf
jecxz
insb
fimuls
testb
fdivrl
add
sub
pushf
out
add
gs
push
and
gs
pop
inc
rcrb
rorl
insb
loope
mov
lahf
das
and
insb
lcall
insb
fiaddl
dec
add
das
call
pushf
les
lods
ja
dec
push
xchg
cmovo
repnz
sub
clc
leave
mov
pop
lock
jbe
insb
sbb
je
and
gs
outsb
sbb
pop
ret
hlt
insb
mov
inc
dec
movsl
insb
rorb
xchg
stos
pop
cmpsb
insb
sub
adcb
cmp
fstps
jb,pn
movsb
and
mov
push
sub
push
imul
sub
movsl
add
cli
lods
in
dec
mov
test
hlt
addr16
cwtl
jp
das
dec
imul
xchg
shll
jmp
or
fidivrs
gs
xchg
pop
mov
jo
insb
ficompl
xchg
cmpsb
popa
or
lahf
jo
insb
jle
mov
inc
imul
fdivrl
cmp
bound
js
add
das
insl
mov
popf
pop
insb
scas
imul
stos
aaa
dec
jmp
and
adc
jo
insb
arpl
mov
rcrb
insb
xchg
dec
mov
or
inc
xchg
insb
movsl
sbb
subb
jno
mov
jnp
js
or
mov
out
xchg
jb
xchg
mov
push
loop
imul
pop
aaa
xchg
adc
test
push
ja
hlt
gs
rcll
scas
repz
or
cmpsb
popa
inc
cltd
and
adc
xor
out
jnp
leave
insb
pop
lock
mov
in
insb
stos
dec
lods
stos
repz
scas
imul
xchg
sar
std
ds
daa
stc
insb
add
add
imul
in
fwait
inc
daa
imul
xor
dec
sub
test
test
dec
in
imul
dec
push
pop
test
xor
movsl
insb
popf
loopne
or
push
test
imul
sahf
nop
into
loop
test
insb
mov
cmp
cwtl
xor
pop
insb
inc
sub
pop
xchg
out
sub
cli
jmp
insb
cmpsl
scas
lock
ret
mov
not
push
add
imul
ds
dec
sbb
push
insb
inc
out
dec
insl
inc
mov
shrb
xchg
mov
insb
mov
shll
insb
inc
sbb
iret
add
xchg
cmpsb
maxps
push
pop
pop
movsl
outsb
and
test
xchg
iret
mov
xorb
imul
imul
push
sub
pop
push
sti
out
ret
sub
push
jno
int3
test
gs
popf
push
xchg
int
imul
push
aad
and
mov
gs
or
fcomps
test
push
gs
sub
je
roll
add
clc
test
xor
push
inc
dec
ret
lods
scas
mov
insb
dec
jle
push
push
sbb
daa
lock
jae
call
popf
mov
cmc
push
or
inc
insb
inc
and
stos
loop
jp,pn
fucom
loope
mov
pop
fbld
mov
add
mov
cli
clc
pop
xchg
jae
mov
or
or
cmp
xor
insb
sbb
xchg
xchg
stc
mov
hlt
bound
js
mov
mov
inc
xor
in
xchg
push
imul
test
insb
invlpg
mov
mov
xor
jp
std
pop
add
or
sub
test
outsb
cmp
sub
pop
insb
mov
and
and
sti
add
lods
jmp
out
dec
fucomip
mov
xchg
adc
inc
popf
testb
adc
pop
addb
das
out
adc
xchg
jne
mov
les
inc
push
pop
das
push
insb
daa
xchg
mov
cwtl
insb
cltd
test
insl
out
sbb
ror
ljmp
xor
cld
sbb
insb
rcrl
jns
pop
pop
or
jmp
adc
ja
imul
ds
mov
idiv
dec
insb
xlat
lea
cwtl
es
popa
insb
js
mov
roll
mov
nop
sub
repz
inc
stc
xchg
shlb
xchg
insb
cwtl
outsl
mov
dec
ljmp
push
or
xchg
in
cwtl
scas
and
mov
sub
jecxz
pop
test
pop
cmp
or
pop
fldcw
lods
sbb
insb
aad
mov
shrl
fstps
fistpll
push
adc
subl
ljmp
pop
or
arpl
inc
subl
sahf
into
std
inc
pop
sub
pop
and
push
jle
xor
int
arpl
js
sbb
fildll
pop
loopne
leave
mov
cmp
subw
cmp
sub
xchg
mov
sti
or
lods
lock
mov
flds
dec
imul
add
or
push
scas
adc
sahf
jne
push
pop
fisubrl
pop
sbb
sahf
xchg
sbb
test
push
mov
loope
in
xor
jecxz
inc
add
ret
push
xchg
xorl
arpl
adc
adc
lods
sbb
scas
stos
cmp
push
sbb
add
ljmp
mov
mov
push
mov
shlb
test
in
je
cmpsl
jecxz
enter
insb
sahf
roll
test
fdivrl
jae
andb
and
xor
or
jp
push
bnd
inc
fists
nopl
adc
mov
sub
test
or
outsb
or
pusha
addl
push
fs
fsubs
nop
push
xor
aaa
adc
int3
mov
sbb
cwtl
outsb
mov
outsl
imul
into
pop
and
in
add
pushf
or
rolb
inc
jge
repz
test
cmp
jge
fwait
js
test
pop
mov
xchg
push
add
clc
or
xor
int
outsl
out
daa
or
cmp
sbb
dec
or
call
xor
scas
insb
add
in
insb
dec
mov
dec
les
imul
fndisi(8087
rol
sub
mov
sbb
pop
frstor
push
fiadds
int3
mov
insb
enter
mov
cld
in
mov
and
pop
jno
movb
insb
mov
mov
std
jecxz
outsl
nop
sbb
fbld
cmp
test
push
lods
adc
cmpsl
je
mov
insb
xor
out
fucomi
adc
insb
sbb
or
insb
cmp
adc
add
repz
sub
adc
aam
and
pop
insb
aad
lahf
sti
and
pop
insb
push
into
mov
mov
test
call
sub
mov
cmp
sub
add
out
cmpsb
ja
mov
mov
mov
in
rcrl
loopne
pop
dec
mov
lods
fwait
call
insb
mov
es
ret
data16
insb
bndstx
add
test
scas
push
insb
cmp
pop
mov
add
dec
hlt
sti
insb
jp
in
mov
pop
popa
js
lods
mov
hlt
cmp
push
xchg
lea
js
inc
bound
xor
test
xor
cli
es
outsl
mov
insl
into
insb
sub
sub
sti
insb
ja
daa
rcr
mov
push
pushw
sub
jmp
insb
cs
push
add
imul
lock
xchg
sahf
pushf
xor
iret
pop
into
and
gs
dec
mov
fs
insb
and
lods
out
lcall
sub
bound
ljmp
daa
jne
je
jl
push
dec
jge
lret
das
pop
insb
lahf
mov
mov
call
push
adc
or
pop
jl
cmp
clc
jb
roll
sbb
outsl
mov
mov
call
pop
lcall
adc
xchg
jl
jns
inc
sub
hlt
insb
add
pushf
jae
jl
and
iret
aas
mov
imul
jge
pop
mov
insb
xchg
mov
push
imull
imul
adc
pushf
idivb
jnp
je
cmpsl
in
xor
inc
or
push
pop
in
in
inc
rcrb
adc
ja
jp
daa
pushf
mov
aam
fisubs
in
stos
mov
cld
ss
sub
push
push
jbe
testl
fldcw
div
dec
loope
icebp
imul
imul
sub
push
pop
bound
dec
push
lea
lret
cmpsb
ss
mov
pusha
jo
clc
scas
insb
clc
aad
mov
out
icebp
insb
push
jmp
push
sub
fcomps
ljmp
add
insb
pop
lds
pop
sbb
out
push
sub
or
xor
sub
or
fsub
sbbb
aad
sub
cwtl
dec
sahf
or
insb
sbb
test
mov
sar
or
out
insb
cmp
mov
pop
insb
add
call
roll
in
or
rorb
mov
xchg
movsl
fsubl
lahf
fldcw
in
ja
enter
lods
or
adcl
push
dec
arpl
lods
dec
fldcw
in
sbb
insl
lods
sbb
insb
sub
pop
add
rorb
xor
out
xchg
or
mov
jbe
insb
mov
aas
jns
pop
insb
movsb
push
lock
push
jno
mov
imul
push
mov
jge
sub
andl
insb
and
mov
cmpsb
gs
mov
rcrl
test
xor
push
fists
shll
jl
mov
insb
fsubs
movsb
stc
xor
hlt
jg
jmp
jns
mov
lret
sar
push
test
sub
dec
pop
push
lods
inc
mov
xchg
test
and
xor
in
repz
ret
adc
lea
push
insb
aaa
adc
mov
int3
out
sahf
jg
and
sbb
movsl
shrb
lds
sbb
hlt
lahf
test
push
sbbb
lret
in
fnstenv
in
jge
sbbl
mov
push
repnz
jb
sub
fmuls
insb
jbe
imul
pop
xor
decb
scas
scas
in
mov
xchg
push
cmpsl
push
and
mov
movsb
mov
and
insb
add
fiaddl
and
les
add
dec
dec
je
mov
cwtl
ds
gs
cmpsb
xchg
sarl
jle
mov
out
bound
cmp
insb
sar
shl
imul
mov
push
add
and
pop
fsubl
scas
dec
pop
and
xchg
insb
ficoml
mov
lock
int
out
imul
punpckldq
dec
cmp
jne
inc
xchg
insb
stos
jo
push
sti
insb
rorb
push
insb
inc
ss
and
mov
insb
lds
push
sub
imul
cmc
mul
frstor
test
nop
fldt
das
dec
in
jge
data16
xchg
in
cmp
pop
jle
cmp
mov
or
loop
xor
repz
lods
adcl
add
insb
push
and
fwait
dec
pusha
mov
ss
pop
cmp
adc
push
jg
int3
xchg
andl
scas
push
push
dec
shll
ja
xor
aad
inc
imul
xlat
mov
cmp
mov
jo
lock
insb
test
shlb
push
cli
out
shlb
adc
int
pusha
lods
rol
lock
push
xor
scas
int
fsubrl
insb
jmp
sete
push
int
pop
testl
or
mov
or
pusha
out
adc
mov
ret
mov
dec
sbb
xor
push
scas
gs
popa
sub
jae
pop
arpl
dec
inc
loop
cmpsb
insb
rolb
sbbb
insb
in
sarl
insb
jp
xor
mov
scas
insb
out
push
cmp
std
mov
xorb
and
add
je
pop
outsl
xor
jle
popl
imul
fwait
insb
ljmp
adc
rcrb
lret
insb
mov
mov
insl
inc
in
push
push
cmc
dec
insb
js
bound
pop
fimuls
shr
cmp
pushw
fbstp
cmp
int
int3
jo
movsl
lahf
add
jb
mov
pop
int
cwtl
aam
and
mov
mov
xor
sub
push
aam
push
pop
insb
and
xlat
nop
roll
pushf
pop
loop
cltd
imul
xchg
mov
mov
and
inc
insb
mov
dec
push
lahf
cld
inc
je
and
imul
rorb
jo
lea
mov
mov
xor
mov
xor
jle
push
insl
mov
mov
lock
pop
aas
out
mov
test
xor
arpl
pop
sub
imul
jne
insb
or
sub
pop
push
in
test
cmp
xor
cmpb
or
ljmp
or
in
add
negl
mov
mov
icebp
mov
lods
xor
jns
pop
insb
dec
push
inc
std
dec
xor
inc
addr16
out
insb
shlb
adc
fisubrl
xchg
inc
cmc
enter
adcb
adc
add
stc
jmp
stos
inc
xchg
imul
adc
insb
sbb
push
cmp
clc
xchg
sbb
outsl
cwtl
iret
sub
xchg
cs
lock
packuswb
pop
rorl
push
or
mov
sbb
add
dec
cli
xor
and
xchg
cld
jnp
jl
fwait
mov
scas
pusha
jbe
mov
ret
insb
push
mov
cmpsl
push
xchg
or
jle
shrl
mov
inc
daa
add
adc
bound
inc
add
ss
into
push
movsb
mov
and
rclw
sub
xchg
push
iret
aad
lods
in
ret
rcrb
imul
rorl
in
ret
cmp
cmp
sub
mov
pop
lret
pusha
inc
cwtl
imul
pop
sbb
fcompl
loop
int3
push
jle
dec
sbb
addb
xchg
in
lret
mov
pop
imul
inc
insl
jae
roll
jecxz
add
daa
cmp
jns
xchg
pop
sub
jp
das
mov
insb
jge
es
out
stos
lcall
add
test
fs
push
xlat
sub
inc
cwtl
sub
dec
inc
cld
lods
pop
je
and
aas
insb
in
cmp
repz
shrl
lcall
clc
mov
jge
xor
outsb
insl
push
popf
sbb
gs
stos
xchg
adc
dec
cmp
jl
insb
imul
and
sbb
insb
lea
xor
jns
adc
insb
ffree
gs
mov
or
insb
bound
push
cmpsl
stos
and
cmp
pushf
push
fs
insb
cwtl
test
mov
pop
imul
test
test
inc
mov
icebp
push
fcmovnb
flds
pop
or
std
xchg
mov
insb
das
imul
mov
sahf
cli
inc
cmpsb
jg
popa
pop
insb
jmp
adcb
and
adc
fldcw
xor
gs
pushf
xor
or
pop
mov
mov
lods
call
clc
cmc
scas
insb
push
xchg
incb
cmp
cltd
fisubs
stos
adc
mov
insb
loopne
inc
cs
addb
sub
mov
mov
loope
push
call
mov
insb
fcoms
aam
lods
stos
xor
je
cld
pop
imul
and
push
repnz
lcall
insb
shrl
xchg
push
or
mov
jg
aaa
xor
inc
inc
lahf
hlt
faddl
cmp
movsb
jge
sbb
arpl
data16
pop
cmpsb
pop
push
pop
aad
pop
push
mov
lods
outsl
shlb
jbe
xor
push
or
faddl
jecxz
mov
cld
mov
outsl
push
test
movsb
in
iret
divb
mov
sub
xchg
mov
or
adc
jmp
fdivrl
in
call
and
std
lahf
inc
mov
cli
dec
lods
hlt
and
adcl
lcall
loop
mov
dec
xchg
sub
cmp
lahf
mov
jmp
mov
movsb
pop
jnp
inc
sbb
aad
popa
dec
push
mov
dec
mov
imul
dec
movsl
mov
sub
xor
rcll
insb
pop
sub
ds
mov
mov
push
aas
data16
xchg
fisttpll
or
out
aad
in
mov
pop
icebp
mov
gs
mov
lret
push
xchg
in
movsb
imul
and
cmp
push
pop
mov
mov
sub
pop
iret
push
inc
insb
push
divb
jmp
scas
push
imul
dec
mov
cmp
dec
insb
out
sub
sub
insb
mov
jg
stc
imul
sbb
mov
cmp
inc
push
sti
ficomps
insb
push
cmpsl
ja
subl
in
into
add
iret
adc
in
out
pop
dec
ss
push
mov
mov
aad
shlb
inc
insb
adc
dec
adc
lods
adcb
stos
test
and
mov
popf
pop
dec
pop
and
js
lods
sbb
mov
addr16
int
dec
gs
pushf
add
fnstenv
inc
xchg
xor
pop
out
mov
xchg
stos
pop
cmp
out
inc
dec
imul
vpcmpeqd
inc
lods
in
loopne
push
shl
movsl
scas
xor
xorb
insb
iret
jno
push
mov
scas
jp
insb
dec
push
aaa
arpl
imul
in
jnp
pop
dec
in
cmp
insb
stc
sti
and
insb
cli
mov
addr16
imul
fmuls
xor
repz
adc
gs
and
jae
imul
sahf
in
sbb
test
jns
jg
inc
loopne
mov
int3
ss
gs
pop
mov
xchg
cmp
push
mov
and
gs
insb
sbb
fdivl
inc
fstl
insb
iret
lea
pushf
and
mov
xor
mov
sub
adc
testb
and
cmp
lea
iret
pusha
int
rolb
pop
sahf
imul
out
repnz
and
mov
movsl
outsl
lret
leave
dec
mov
push
ljmp
lcall
bound
jg
scas
cli
aad
cmp
fsubrs
testb
mov
outsb
dec
and
push
test
into
gs
pusha
insb
mov
sub
push
insb
dec
leave
push
enter
inc
pop
insl
and
cmpsb
fmull
insb
dec
sbb
lahf
insb
sar
push
loope
or
dec
xchg
fs
popf
js
lods
clc
dec
test
adc
ret
sbb
pushf
in
in
imul
in
xchg
sub
or
add
in
insb
loopne
pop
cmpsb
cmp
mov
cli
mov
xchg
jbe
cmp
xchg
cld
inc
ret
sub
aaa
jecxz
cli
jnp
sbb
push
in
repnz
pop
pop
push
aas
iret
push
inc
roll
ss
add
aas
pop
pop
stc
in
mov
mov
insb
mov
or
ret
and
or
cli
dec
dec
xchg
in
jns
rep
jne
push
or
mov
icebp
les
sub
repz
aas
cmp
in
cwtl
test
jecxz
insb
sbb
ret
sub
jmp
aad
movsb
lret
insb
pop
testb
xchg
sub
mov
mov
in
adc
mov
cltd
fsubrs
xchg
pop
stos
ss
je
sbb
push
sbb
or
sti
scas
in
dec
in
jno
jmp
push
jae
jl
aaa
xor
xlat
insb
push
or
push
jg,pn
pop
sub
add
cmp
rolb
cmp
mov
loope
pop
jae
cmp
aam
call
adc
fisttps
pop
jb
inc
cld
lea
xorl
inc
add
jecxz
rol
lret
insb
add
movsb
push
pop
and
pop
pop
xchg
cs
out
cmp
sub
ficoml
add
and
lahf
and
cli
imull
fildl
sub
jp
inc
je
insb
cwtl
ret
out
ficoml
push
dec
sbb
xor
push
fs
jno
jmp
jge
mov
inc
insb
and
push
cltd
insb
mov
mov
loopne
fidivl
push
xorl
cmp
gs
inc
and
cld
jnp
andb
mov
mov
mov
xchg
imul
lahf
xchg
test
rcr
sub
mov
andb
insl
loopne
and
insb
sub
arpl
jmp
stos
add
jnp
cmp
fildll
scas
push
push
int
arpl
insb
rorl
insl
dec
jp
jle
movsl
cmp
insb
sbb
xlat
lds
les
int3
insb
repz
push
test
or
insb
rclb
pop
inc
inc
lock
insb
decl
not
insb
jg
xor
lods
sbb
ja
out
aas
jl
insb
sub
push
mov
jns
mov
sub
aad
insb
stos
inc
test
inc
addr16
addb
mov
pop
lret
jb
call
cld
insb
fldcw
rorl
stc
sahf
mov
andb
jmp
roll
ss
push
movsb
mov
data16
xchg
stc
mov
insb
mov
cmp
jmp
ficoml
fdivp
rolb
pop
xor
push
pop
or
insb
and
fisttpll
fisubrs
pop
idiv
pop
outsb
jae
sbb
xor
cmp
ljmp
insb
les
add
imul
iret
lods
push
inc
ds
dec
ret
or
aas
insb
mov
or
dec
insb
aam
mov
jae
inc
jb
fnsave
push
push
sbb
out
dec
notb
dec
pop
push
pop
in
cs
cmp
jmp
subl
push
js
xchg
jne
sub
aaa
jns
cmpsl
inc
cmp
ljmp
add
imul
dec
mov
sbb
xor
stc
adc
add
sbb
cltd
jno
jbe
popf
aam
in
mov
push
jae
add
bound
cmpb
js
cld
repz
cltd
push
pushf
pop
dec
insl
xor
stc
jmp
inc
or
js
test
insb
fadd
arpl
cmp
out
cmp
adcb
xor
in
jmp
mov
pop
lods
insb
pushf
cmp
mov
sbb
insb
dec
pop
inc
lea
imul
lods
stos
pop
and
negb
push
insl
or
dec
subl
sub
test
ljmp
adc
jge
fneni(8087
mov
push
addr16
clc
mov
dec
jp
popa
out
adc
cs
insb
xchg
loopne
adc
cmp
movsl
insb
loop
and
xor
pop
push
jae
push
push
insb
and
mov
insb
cs
mov
mov
mov
mov
mov
xor
add
fnstsw
out
cltd
push
push
fcompl
ljmp
jns
push
lcall
xchg
iret
cld
in
int3
xlat
aam
insb
and
decb
mov
shrb
sub
dec
push
insb
and
daa
pop
insb
xor
cld
insb
les
dec
test
gs
adc
dec
cwtl
lcall
push
lock
mov
int3
enter
lea
in
xor
js
test
ret
dec
xchg
insb
and
leave
add
dec
push
sub
ss
dec
imul
fdivr
aad
dec
mov
icebp
repz
jne
add
pop
jge
jae
add
mov
jmp
pusha
lock
push
imul
mov
arpl
lods
in
mov
insb
gs
push
pusha
pop
inc
push
or
insb
fildl
bound
xchg
sti
pop
insb
movsl
xchg
cmp
mov
pop
insb
sub
std
inc
int3
insb
jnp
data16
mov
xchg
sub
ret
insb
dec
mov
icebp
mov
test
jle
xchg
mov
in
out
and
sbb
je
aas
insb
scas
cwtl
sbb
repz
jns
or
jno
sub
xchg
dec
mov
inc
lods
pop
ljmp
xchg
fnstcw
rclb
in
lods
in
fildll
pop
sbb
dec
addl
xor
gs
pop
jnp
pop
inc
xor
insb
call
sbb
xchg
out
std
repnz
push
mov
cltd
and
test
pop
or
jns
repz
cli
test
je
mov
shrl
cmp
out
add
popf
data16
aaa
dec
stos
and
les
mov
xchg
inc
daa
mov
fisubs
inc
sbb
sarl
mov
xor
cwtl
popa
jmp
call
cld
xchg
adc
imul
mov
pop
jo
aam
in
data16
inc
jne
insb
cld
lret
adc
filds
mov
stos
mov
push
adc
clc
out
insb
push
hlt
xlat
movsl
mov
push
test
jg
push
es
cli
and
insb
add
mov
mov
sub
mov
add
pop
insb
movsb
cmp
insb
jae
stos
xchg
aam
sub
stc
orb
inc
scas
jp
or
fbld
and
fldt
into
int
dec
jge
insb
popf
je
push
cwtl
cld
pop
and
aam
mov
fldenv
mov
insl
cmp
iret
std
in
add
adc
ret
in
in
imul
mov
jb
jno
orb
push
insb
ss
xchg
into
cmpsl
int
insb
adcb
pop
clc
pop
test
incb
je
les
cli
mov
test
xchg
pop
push
imul
lock
fisubrl
pop
in
leave
scas
and
out
push
cltd
push
icebp
sub
push
sbb
pop
scas
push
ja
mov
inc
or
lds
mov
push
pop
fdivrl
test
imul
push
adc
aaa
test
imul
rol
sbb
imul
sbb
orl
mov
push
xor
sub
or
jmp
jb
imul
aam
sub
sub
popf
pusha
sbb
xor
in
xchg
insb
fwait
shlb
inc
shl
mov
out
adc
sub
or
imul
push
adc
insb
adc
imul
inc
lret
test
jae
jo
push
je
cli
es
aad
into
mov
scas
xchg
jp
je
xor
mov
frstor
jle
inc
mov
cmp
add
rcrb
xchg
or
dec
fistpll
cmpb
adcb
jecxz
lret
jmp
push
push
and
test
mov
push
je
cmpb
sub
add
testl
cli
shr
loopne
mov
sbbl
push
add
insb
dec
das
in
sbb
jo
ret
insb
sub
aam
insb
xor
add
pop
loopne
insb
scas
loope
dec
push
push
or
insb
lahf
out
and
dec
pop
xchg
inc
lods
lcall
sub
movntps
popa
leave
out
push
pop
imul
mov
arpl
cmpsb
jbe
ret
mov
daa
cmp
sub
or
imul
insb
enter
push
or
scas
into
insb
movsl
mov
mov
sub
loop
mov
lea
insb
mov
nop
push
sbb
daa
adcl
push
pop
pop
test
repz
mov
insb
inc
cmp
sahf
pop
fadds
imul
aam
pop
push
mov
out
hlt
xchg
and
outsb
pop
push
push
scas
seta
stc
fstpl
mov
mov
je
cmp
push
push
push
sbb
jmp
and
insb
or
adc
inc
gs
out
fsubr
jns
stc
add
pop
jae
inc
int3
sub
pop
xchg
xlat
lods
je
push
mov
dec
dec
dec
test
int
test
mov
insb
cltd
lds
or
xor
imul
aad
cld
or
mov
insb
mov
mov
imul
shrb
in
cmp
fwait
adc
xor
or
jns
jmp
or
jo
and
or
mov
add
jecxz
iret
loopne
out
test
pusha
imul
add
adc
jo
incb
stc
cli
adc
or
mov
lods
ljmp
lahf
push
mov
cs
and
das
insb
mov
shl
push
insb
push
dec
push
cmp
addr16
cli
jl
shrb
push
insb
fwait
psubsw
mov
icebp
ja
outsb
popf
stos
or
lds
add
insb
push
repz
lods
jl
push
mov
loop
je
mov
xchg
fwait
aaa
mov
ljmp
pop
pusha
dec
loop
insb
ret
and
stc
gs
jnp
and
lcall
dec
and
cmp
mov
cmp
imul
std
imul
dec
lods
pop
mov
insb
lret
scas
mov
clc
cmpsb
insb
dec
push
iret
mov
into
push
and
icebp
in
test
cld
add
shrb
outsb
sub
loop
inc
sub
lods
add
scas
mov
or
cld
insb
push
add
or
and
mov
je
mov
cmp
dec
pop
insb
arpl
cltd
loopne
rcrb
sub
push
iret
out
insb
mov
lret
cltd
pusha
push
mov
insb
mov
dec
or
insb
mov
sbbb
mov
in
test
movsl
cs
in
push
mov
ds
scas
data16
hlt
gs
sub
cld
xor
jl
inc
out
out
xchg
ret
insb
jns
pop
jg
sbb
hlt
lods
clc
nop
insb
ret
or
or
jbe
lret
fsubrl
inc
cwtl
in
add
movsl
ss
scas
test
push
insb
js
mov
shlb
dec
insb
and
dec
lods
mov
int
pop
add
lock
in
mov
sbb
movsl
out
cld
call
insb
xorl
or
or
sbb
iret
inc
jmp
loope
xchg
add
test
mov
xlat
lods
sbb
and
xchg
mov
or
and
loope
faddl
insb
pushl
cmc
adc
xchg
adc
es
mov
push
gs
js
adc
push
dec
sbb
pop
push
sbb
xor
sub
pop
xor
dec
es
mov
pushl
jecxz
iret
jle
mov
outsb
push
xor
sub
aaa
push
cld
adc
addr16
or
test
rcrb
dec
fcomp
movsb
pop
insb
lret
push
outsl
mov
push
ficoms
lock
xorb
out
fwait
lods
mov
insb
in
mov
push
insb
in
fstpt
adc
mov
pop
loop
aam
ud0
mov
fdivr
jmp
xor
pushf
loope
jo
cmp
jnp
cmp
fimull
data16
loop
into
jl
ret
insb
shr
mov
lods
insb
stc
add
cmpb
fldcw
test
arpl
push
adc
loope
jle
insb
mov
mov
lods
inc
add
mov
scas
pop
outsb
jg
cld
fisubs
mov
repnz
int3
sub
push
sbb
mul
imul
add
ret
scas
sub
mov
mov
aam
es
jo
pusha
movsb
test
pop
and
testl
insb
push
std
dec
test
mov
xor
adc
int
fucomp
jnp
cmpsl
jp
scas
insb
ljmp
dec
xorb
push
pop
in
sub
insb
bswap
lods
jae
popf
dec
imul
inc
je
out
repz
testl
aas
mov
insb
cmpsb
fdivrs
mov
shlb
scas
call
push
sub
rcrb
call
out
imul
cld
insb
fs
xchg
jle
lock
push
ljmp
push
fucomi
lea
jle
xchg
inc
idivb
jo
jmp
mov
xor
insb
aas
push
dec
cli
sub
imul
fcoml
push
push
insb
adc
out
pushw
imul
add
dec
pop
mov
ds
push
cli
push
cmp
sbb
add
jb
ret
jg
mov
inc
lahf
jne
insl
mov
in
jge
fcoms
mov
sub
mov
inc
insb
push
jns
xchg
push
sbbl
sub
cmp
lock
insl
mov
bound
add
in
push
lret
imul
mov
lea
sub
or
lods
push
adc
test
ja
mov
hlt
push
inc
mov
xchg
add
mov
or
imul
aam
adc
mov
pop
push
and
fcomps
pushw
and
sbb
cmp
je
push
push
pusha
pop
out
lahf
addr16
imul
arpl
sbbl
xchg
insb
sbb
inc
cmp
testl
into
in
scas
imul
mov
sbb
insb
imull
jbe
insb
adc
push
cmp
das
sbb
gs
lods
xchg
sub
cmpsl
push
insb
jnp
sub
std
mov
jns
or
fwait
test
dec
xor
dec
push
neg
sub
movsb
push
pusha
adc
add
insb
adc
outsl
or
rorb
pop
pop
and
shrb
out
push
add
insb
out
add
gs
dec
cmpsb
xchg
dec
jle
es
shlb
and
jecxz
dec
mov
pusha
insb
cmp
imul
in
cmpsb
sub
mov
add
xchg
sub
fadds
out
bound
or
outsb
xchg
lods
xchg
in
mov
jp
lods
inc
pop
and
jle
and
pop
jne
or
cwtl
sbb
packssdw
mov
dec
in
sbb
or
test
popa
add
xchg
scas
jns
insb
fldenv
jle
cmpsb
insb
pop
sub
xchg
pop
insb
int3
in
lock
imul
bnd
lret
stos
andb
pop
sub
in
cmp
sub
call
fs
test
inc
insb
rclb
mov
lods
xor
fwait
sahf
insb
fmul
pop
data16
stc
into
pop
push
inc
fldenv
inc
or
int
lret
repnz
pop
jae
sti
out
jnp
test
insb
push
and
out
sub
xchg
or
xor
insb
into
jae
inc
jbe
jg
insb
stos
mov
data16
dec
fsubrl
lret
cltd
inc
incb
sbb
rolb
pop
lret
cld
fst
in
xchg
or
movsb
cmp
cmpsb
mov
and
insb
xchg
stos
lods
ljmp
fsts
clc
decb
jmp
in
mov
outsl
insb
dec
push
push
hlt
adc
adc
fldlg2
ja
dec
inc
sub
dec
mov
push
xchg
xor
insb
repnz
dec
lods
mov
ja
scas
insb
sub
mov
jge
int3
and
insb
push
imul
xor
fisttpl
xchg
mov
inc
sbb
mov
aaa
push
jge
bound
push
xchg
xchg
imul
and
scas
mov
movsb
inc
jmp
aaa
and
je
stos
sarl
jns
stos
pushf
jp
gs
and
mov
cmp
insb
pushl
cmc
jp
sbb
xor
pop
sbb
daa
inc
lods
sub
mov
imul
loope
dec
dec
adc
out
mov
int3
dec
adc
push
dec
mov
mov
lods
dec
incb
jl
insl
xorb
cmc
mov
orl
scas
xor
dec
idiv
popa
insb
push
sbb
subb
jbe
mov
add
shrb
pop
mov
cmp
jmp
data16
pop
ret
xor
mov
enter
in
or
jg
cld
and
jns
test
rorb
dec
adc
in
icebp
fs
push
push
andl
adc
pop
inc
cli
insb
fmuls
push
adc
xchg
imul
cwtl
insb
jp
lods
lcall
cs
jl
mov
xor
arpl
aam
cmp
mov
insb
jp
int3
inc
test
or
loopne
jbe
cwtl
sbb
cmc
addr16
jo
insb
in
inc
js
jnp
push
sub
fs
or
fisubl
mov
mov
sti
ja
jne
jno
insb
filds
inc
dec
inc
fwait
mov
fidivrl
pop
rcl
insb
or
jne
test
in
pop
shrb
das
sub
test
insb
xchg
std
push
xchg
fildll
notl
inc
mov
insb
jg
test
adc
or
sbb
test
xor
inc
in
or
push
insb
int3
lods
cmp
and
cltd
fsubrl
divb
pop
pop
mov
insb
cmp
leave
xchg
pop
gs
ljmp
push
jbe
inc
movsb
insb
leave
inc
sub
in
insb
jl
clc
xchg
pusha
icebp
addr16
jle
xor
outsb
cmc
insb
mov
pop
push
lock
data16
fldenv
int3
mov
out
cmp
testb
inc
fsubrl
adc
jnp
pop
les
or
xchg
sub
sahf
mov
lret
mov
arpl
outsl
orl
int3
xor
mov
ds
idivl
scas
dec
mov
scas
jmp
es
insb
mov
fidivrs
test
mov
mov
insb
push
je
std
negb
imul
adc
jmp
or
mov
cmpl
js
bound
data16
insb
jg
fsts
cmp
es
popa
mov
dec
mov
xchg
insb
dec
lods
mov
insb
jne
push
dec
adc
lcall
xor
xchg
lahf
add
xchg
popa
insb
push
dec
dec
pop
inc
cs
subb
jl
lret
mov
mov
subl
pop
stc
dec
mov
test
mov
arpl
ret
negb
adc
fwait
jnp
pop
pop
adc
jb
mov
jns
add
push
fucomip
pop
fwait
int
stos
sub
jmp
cmp
dec
jne
xor
in
movsb
push
cmp
leave
int3
sbb
jne
scas
sbb
push
popa
pushf
inc
rcrb
stos
pop
movsb
dec
xchg
adc
pop
mov
sbb
inc
jns
pop
push
iret
cld
push
pop
insb
xchg
inc
out
xchg
aam
rorb
pop
stc
mov
cmc
xor
imul
jl
stc
repnz
outsl
dec
or
xchg
insb
mov
inc
arpl
cmpl
repnz
lock
inc
push
mov
imul
add
in
pop
mov
mov
int3
insl
and
test
cmp
pop
test
sub
insb
clc
fbld
repz
add
mov
test
gs
jl
pop
popa
mov
insb
mov
sbb
movl
aas
xchg
sub
into
mov
jns
shl
lods
mov
push
insb
subl
cmp
mov
insb
adc
xor
insb
fs
cmp
add
adc
mov
js
push
sbb
sub
testl
lret
outsl
fs
and
repnz
dec
popa
pop
or
lcall
subl
popa
rclb
jae
cmp
jo
cmp
or
mov
fstps
push
test
push
imul
stc
int3
or
push
or
das
inc
into
aaa
insb
stc
sub
mov
cld
add
cmc
dec
in
mov
cld
push
pop
pusha
adcl
aam
inc
andl
idivl
addb
adc
ja
pop
jle
ds
push
xor
sub
sub
or
mov
cmc
movsb
cltd
test
or
cmpl
cmp
ljmp
ret
in
dec
out
gs
adc
bound
fsub
stos
pop
xor
lret
rorb
sbb
in
popa
pop
fisubrl
sbb
scas
loope
imul
fs
imul
bnd
in
jo
mov
out
push
movsb
push
inc
jo
sub
and
aas
js
xchg
mov
mov
imul
and
cli
pop
aad
push
mov
insb
cmp
lret
fcoml
ljmp
sub
inc
subl
inc
push
lock
pop
idivb
pop
jnp
int
mov
or
dec
mov
movsb
sbb
lcall
fsts
stos
rcr
push
test
fs
dec
rcrl
or
in
ss
mov
xchg
and
pop
jo
mov
jns
sbbl
or
je
add
ret
mov
cmp
movb
cmp
insb
stc
push
adcb
inc
xor
adc
push
pop
out
jle
shll
ret
pusha
test
cmc
rcll
add
loop
sbb
fidivrl
mov
sbb
leave
sub
sbb
sub
xchg
mov
addr16
cmpsl
dec
rolb
sub
cmp
jb
or
cli
call
scas
xor
in
test
fwait
daa
lods
insb
aam
cwtl
pop
fcoml
dec
cld
sub
dec
xorl
xor
xchg
ja
ljmp
lods
jp
aaa
gs
mov
push
je
sbb
iret
aaa
and
mov
xchg
xchg
je
fst
loop
mov
mov
stc
jno
iret
insb
popf
sub
jmp
movsl
inc
insb
daa
pop
add
pusha
nop
cwtl
test
insb
insl
and
mov
stc
xchg
dec
ja
jl
popf
insb
jbe
test
dec
xchg
into
pop
ret
sti
jecxz
mov
stc
mov
insb
cmp
add
mov
inc
dec
pop
xor
adc
test
xchg
insb
add
pop
test
push
insb
pop
push
xchg
loopne
pop
inc
inc
insb
cltd
xchg
inc
push
mov
fldcw
ficompl
insb
je
inc
push
out
leave
and
jnp
lret
sub
imul
ret
insb
daa
push
jg
jecxz
xchg
cs
mov
or
push
repnz
adc
in
in
in
dec
mov
sbb
jmp
push
lock
cli
insb
jge
out
sarl
xchg
add
scas
mov
xchg
mov
shll
jbe
lea
mov
inc
mov
sbb
jns
shll
add
loope
jg
jge
aad
adc
jecxz
ljmp
insb
dec
and
insb
push
into
jmp
mov
push
outsl
jb
imul
in
je
jbe
das
push
lock
out
mov
push
insb
std
dec
outsb
sub
lahf
das
insb
xor
scas
and
push
addb
aas
push
repnz
test
pusha
pop
sub
data16
ret
insb
cltd
lret
int
xchg
lock
js
xor
out
test
mov
cmpsl
test
xor
pop
in
data16
mov
aaa
je
dec
es
mov
or
imull
add
imul
adc
ds
mov
out
out
scas
out
push
push
filds
cmpsl
xchg
std
cmpsb
jl
add
ds
inc
addb
imul
addb
leave
insb
mov
out
and
push
xchg
insb
imul
orl
std
insb
xchg
mov
mov
push
xchg
std
push
jg
sbb
insb
je
sarb
ljmp
insb
bound
aad
js
cmp
insb
ret
out
mov
xor
scas
imul
sarl
or
inc
sub
adc
mov
ds
movsb
push
insl
pop
insb
add
icebp
fcoml
cmpsl
out
insb
inc
pop
xor
iret
add
hlt
ret
lds
sub
in
andl
sub
cltd
add
sbb
or
add
insb
in
cmc
cld
das
push
movsb
decl
shrl
pop
dec
push
and
enter
in
les
dec
sub
test
int3
push
jecxz
repnz
sti
xchg
insb
dec
popa
popf
push
ljmp
sbb
dec
std
insb
pop
add
idivl
mov
fsubrp
imul
jbe
push
add
gs
fisubrl
imul
insb
cmc
add
idivb
lcall
sub
fsubs
xor
in
and
jo
push
insb
les
stos
pop
arpl
insb
jp
popf
daa
adc
cltd
dec
insb
inc
dec
push
mov
jge
imul
mov
popa
add
dec
mov
and
hlt
push
call
insb
rcl
outsb
bound
dec
push
dec
insb
sbb
adc
mov
insl
and
ljmp
pop
loop
test
mov
or
jle
pop
jmp
adc
outsb
in
xor
imull
jecxz
inc
sarb
test
incb
insb
mov
mov
insb
mov
mov
mov
adc
xchg
xorl
push
mov
cmp
cmc
push
imul
std
cwtl
insb
enter
imul
lret
and
xchg
insb
sbb
sbb
gs
cmp
mov
int
mov
out
adc
fldcw
push
addr16
dec
cltd
lods
les
cltd
es
and
pushf
shr
out
scas
inc
mov
dec
push
xchg
push
push
pop
insb
jns
test
fadd
mov
insb
and
shlb
sub
aad
fisubrs
loop
cmpsl
cmpsb
lds
jle
dec
sahf
in
loopne
data16
sbb
loop
insb
data16
mov
or
lock
shlb
cmp
lret
data16
adc
jmp
mov
mov
push
jmp
inc
mov
or
jecxz
xor
insb
aad
push
out
cmp
lahf
lret
jbe
into
aas
arpl
add
jmp
mov
popl
add
lock
inc
scas
sahf
packssdw
pop
jp
js
sub
lds
repnz
ret
cwtl
jae
inc
inc
insb
push
sar
enter
pop
insb
or
mov
fsubr
mov
ret
push
push
pop
lcall
fstpl
mov
repnz
insb
movb
mov
or
adc
add
subb
outsb
aas
imul
jle
insb
lret
xor
xchg
insb
loopne
hlt
sub
mov
stos
jle
insb
into
lds
sbb
mov
and
push
ret
or
cld
fldt
and
stc
mov
insb
daa
xor
test
cmp
sub
jmp
fidivrl
and
lahf
push
jbe
insb
cli
mov
in
repnz
imul
popf
mov
jp
popa
and
in
std
aas
mov
insb
mov
lods
aam
stc
call
sahf
sub
insb
in
dec
or
pushf
jne
test
xchg
ljmp
insb
mov
movsl
nop
pop
call
lea
cmp
add
pushf
leave
sbb
add
test
sub
out
inc
mov
insb
xor
mov
add
xchg
test
shrl
repnz
insb
stc
mul
adc
insb
cli
pop
dec
ficomps
imul
out
mov
push
jnp
mov
push
js
and
mov
sbb
enter
subb
pop
lret
sub
mov
dec
or
popa
jecxz
jb
sbb
cmp
jl
mov
imul
xchg
jle
cmp
aam
mull
xor
imul
jmp
mov
movsl
jbe
inc
insb
cmp
call
xor
jge
gs
push
sahf
mov
push
shrl
xchg
xor
xchg
insb
mov
dec
dec
sub
data16
test
sub
jbe
adc
fdivrs
lea
xchg
ficompl
push
movzwl
xor
in
into
fwait
push
stos
jns
outsb
in
xor
out
and
mov
mov
xchg
jnp
sti
in
insb
je
fbld
orl
inc
pop
and
insb
xor
add
cli
ret
insb
aaa
xlat
popf
push
xchg
xchg
inc
mov
xchg
shrb
xor
push
xchg
pop
imul
sub
out
push
loopne
and
pop
and
call
sahf
dec
mov
pop
ss
out
fsubrs
insb
std
dec
and
insb
jo
test
xchg
insb
addb
bound
xlat
pop
jecxz
cltd
mov
jbe
iret
pusha
outsl
jle
or
xorl
stos
insb
jmp
and
cmpsl
loope
fwait
mov
mov
addr16
lock
push
inc
insb
xchg
xchg
fisttps
inc
insb
push
shll
clc
inc
insb
jne
clc
lret
xchg
cld
pop
int
sub
scas
push
push
sbb
jae
stc
icebp
mov
insb
pop
das
xor
dec
cmp
js
sub
insb
cmp
leave
xchg
jmp
out
sbb
insb
mov
xlat
or
mov
jb
insb
fs
imul
adc
add
scas
arpl
xchg
inc
ss
popf
dec
shll
das
pop
mov
jecxz
insb
mov
out
jno
and
dec
ret
push
scas
daa
icebp
ss
lods
insb
mov
fs
aaa
insb
jmp
and
insb
adc
inc
test
imul
jmp
icebp
filds
cmp
and
xchg
scas
insb
push
cld
loop
jecxz
and
into
in
pop
cmp
in
push
insb
adc
loope
mov
insb
std
ret
movsb
cli
cltd
mov
cmp
imul
jnp
lret
xor
clc
adc
in
in
xchg
daa
push
sub
es
jmp
xchg
pop
sahf
or
rorl
and
inc
and
jp
push
sbb
mov
jp
aad
cmp
mov
mov
out
cli
jecxz
sbb
jae
pop
sbb
push
mov
push
imul
arpl
mov
repz
pop
lcall
sahf
imul
arpl
lea
int3
dec
pop
addl
cmc
mov
or
push
rcl
sahf
arpl
and
sbb
mov
dec
xlat
stc
cmp
or
sub
scas
pop
add
mov
add
add
xor
insb
ja
movsb
push
adc
xor
insb
add
or
sub
ret
mov
mov
je
inc
aad
es
mov
call
and
cmp
push
cmp
sub
icebp
mov
test
or
and
leave
shl
push
or
push
iret
insb
shlb
outsb
cmp
mov
ja
insb
pusha
movsb
fistpll
pop
cmc
mov
insb
lds
pop
icebp
clc
push
popf
imul
jg
enter
lcall
xchg
cwtl
arpl
add
call
sbb
adc
imul
pop
jecxz
in
mov
imul
std
mov
cmpsb
clc
inc
sub
pop
les
jns
mov
shrl
push
xlat
and
ljmp
jne
add
scas
inc
fisubs
jecxz
stc
mov
mov
cmp
jl
mov
rcr
jne
adc
or
mov
cmp
push
lahf
adc
adc
lock
xchg
insb
aas
rcl
push
inc
in
imul
test
imul
int3
push
push
shll
jg
inc
push
insb
test
mov
inc
lock
jae
setg
dec
js
inc
popa
dec
pushf
out
leave
in
insb
xchg
mov
inc
jecxz
jbe
xchg
or
inc
pop
icebp
dec
adc
adc
xchg
insb
push
clc
pushf
pusha
xor
cmc
int
push
dec
insb
stos
bswap
das
mulb
adc
insb
push
and
xchg
stos
mov
fwait
and
shll
cmpsb
fdivp
xor
push
mov
sbb
idivb
cltd
pop
dec
jo
and
scas
fists
and
insb
sbb
mov
adc
pop
sub
dec
sub
add
push
jge
and
ds
rcrb
jl
jnp
fnstcw
out
imul
enter
jl
push
in
push
pop
and
std
insb
scas
jg
pop
cld
pop
mov
cltd
push
adc
lea
cmpsl
add
or
push
xchg
push
fsubrl
xchg
jnp
dec
loope
adc
std
insb
sbb
pusha
ja
push
pusha
loopne
jbe
pop
xlat
arpl
shl
int3
ljmp
arpl
in
imul
pop
addr16
sbb
cmpsb
dec
insl
shlb
pop
pop
scas
lods
push
sub
cmpl
cmp
sbb
ret
arpl
jmp
dec
jle
mov
mov
outsl
pop
movsb
fldcw
xorl
jmp
or
popa
inc
or
in
insb
outsb
nop
dec
push
mov
jno
jb
add
mov
sbb
jne,pt
je
sbb
imul
gs
push
out
mov
push
and
je
insb
jno
les
mov
lods
add
jp
mov
xchg
insb
xchg
mov
xchg
lret
pop
or
sub
jg
inc
outsl
inc
test
lret
insb
pusha
mov
add
insb
mov
and
call
imul
fadds
pop
test
je
mov
xchg
subl
daa
fildll
shl
div
xchg
inc
mov
insb
stos
orb
mov
push
mov
xchg
insb
dec
aam
stos
and
pushf
call
cli
add
mov
mov
inc
push
aam
mov
and
dec
pop
int3
mov
mov
das
inc
jge
add
mov
mov
push
aam
and
mov
dec
ss
inc
xchg
insb
lahf
sahf
call
jg
jbe
mov
sbb
jnp
inc
insb
xchg
pop
xor
or
pop
js
cmp
pop
insb
add
mov
jae
pop
inc
mov
jmp
dec
xchg
icebp
xchg
insb
dec
fimuls
pop
mov
lock
jne
lret
arpl
jo
cmp
loopne
nop
xor
dec
insb
jae
push
adc
popa
test
dec
and
mov
fidivl
mov
mov
in
aas
es
lods
pop
sub
rep
jns
dec
jg,pt
and
insb
lret
mov
rcll
xor
loopne
insb
adc
push
lock
pop
movl
aad
and
insb
loope
std
iret
pop
xor
aam
xchg
xchg
in
push
jecxz
insb
push
adc
xchg
cmp
mov
xor
mov
bound
mov
jnp
push
movsb
addr16
out
into
aam
in
stos
subl
in
insb
or
clc
jge
aad
add
fnstsw
fisubs
sbb
pop
pop
push
jns
or
adc
in
or
insb
mov
xchg
pop
out
insb
jg
sub
jae
push
sbb
lret
insb
adc
cmp
int
int3
cltd
cmp
mov
js
xchg
lret
cld
push
loopne
cmc
stos
sbb
sti
movsb
insb
xlat
xor
pusha
xor
dec
push
test
jp
insb
dec
jno
mov
sarw
insb
stos
arpl
lds
mov
add
test
in
daa
mov
inc
addr16
xor
fidivl
inc
pop
outsb
insb
arpl
push
or
pusha
sub
std
andl
fildll
mov
add
lock
ljmp
sbb
les
loop
insb
aad
sub
test
divl
insb
inc
out
mov
jo
js
insb
imul
int3
addb
bound
insb
jecxz
call
hlt
int
in
lcall
and
insb
leave
push
pushl
pop
scas
jae
bound
ret
sub
insb
imul
jecxz
aas
ds
icebp
mov
insb
cmp
mov
mov
sahf
movsb
jnp
imul
push
jle
xor
mov
inc
pop
imul
or
dec
dec
mov
insb
das
adc
add
gs
mov
sti
add
inc
jmp
adc
les
xlat
pushf
lods
es
xchg
or
test
mov
popa
xor
out
mov
push
mov
cwtl
mov
pop
cmc
push
xor
adc
sub
test
inc
ja
fsubrs
loop
mov
push
pop
lcall
mov
repz
sbb
mov
cld
loopne
lock
dec
jg
add
lahf
insb
pop
pop
xchg
pop
push
add
xor
into
in
push
aas
lds
imul
pop
cmpsb
xorl
cmp
push
push
insb
fnop
lds
sub
push
xor
mov
imul
cmp
and
jp
test
pop
pop
xchg
subb
les
pop
mov
add
inc
cmp
and
mov
or
int3
push
push
mov
int
stos
sbb
insb
add
push
ret
mov
mov
ja
mov
and
jo
mov
lea
loope
andb
xor
mov
push
inc
insb
xchg
repnz
xor
out
jg
xchg
int
mov
shrl
sahf
inc
jmp
adc
out
ret
fcoms
insb
int3
inc
aad
jnp
jmp
imul
mov
scas
or
movsb
clc
dec
cmp
and
hlt
xchg
push
ret
les
jmp
adc
imul
ja
lret
insb
shlb
push
std
imul
add
sub
lea
or
dec
mov
pop
mov
ja
cmc
insb
in
mov
push
adc
pop
out
orl
mov
repz
xchg
add
and
sub
cmpsb
test
ret
mov
fildll
add
xchg
jne
mov
loope
push
xchg
and
test
push
pop
scas
test
or
aam
inc
aad
inc
pop
in
bound
sbb
lcall
push
cmp
jno
jmp
jae
or
rcl
pop
or
in
dec
xor
sti
jb
jbe
cmp
xchg
add
add
jo
lods
dec
faddl
incb
mov
cltd
and
cmc
je
data16
dec
adc
jnp
int
push
pop
jle
or
xor
mov
push
cmpb
iret
out
push
call
insl
cmp
jno
pop
pop
out
cmp
loopne
imul
sahf
mov
and
adc
push
push
icebp
in
jecxz
add
popa
sbb
and
dec
jo
pop
aad
inc
lds
inc
mov
xchg
xchg
pop
inc
pusha
popf
push
jbe
and
pop
pop
outsb
leave
sub
test
js
and
in
mov
out
sbb
jb
add
rcl
insb
bnd
jl
xchg
aam
arpl
inc
dec
insb
lea
ds
xchg
jp
insb
rcr
out
xchg
and
xor
sub
mov
es
hlt
and
xchg
dec
repnz
loope
int3
cmpl
and
arpl
gs
mov
fisubs
bound
insb
out
lds
insb
incl
cmp
orl
outsb
insb
mov
or
xlat
xor
sbb
ss
test
mov
cmp
insb
pop
lcall
insb
rolb
fwait
xchg
dec
sbb
pop
mov
push
pop
mov
add
sbb
lcall
jg
icebp
lahf
inc
push
pop
mov
inc
fisubrs
xchg
mov
popf
push
and
push
fmull
jae
imul
roll
push
das
rclb
ss
ds
cld
adc
ljmp
jne
insb
push
jmp
test
or
fnstsw
stos
ja
inc
nop
iret
mov
and
lahf
ret
cmpl
pop
into
jnp
mov
lods
fcompl
sbb
mov
dec
adc
xlat
in
ret
testl
popf
sbb
mov
mov
add
inc
call
sbb
mov
sub
or
sub
push
xchg
insb
cmpsl
sub
dec
push
cmp
lods
mov
push
imul
adc
out
mov
in
movsb
arpl
push
push
fwait
pusha
mov
insb
std
les
jae
jmp
sbb
xor
popa
cmpsb
insb
rcll
jae
sub
adcb
pop
shrb
cmpsb
pop
test
pop
movsb
mov
jp
mov
insb
jnp
mov
lds
cld
push
push
lods
inc
xchg
bound
push
add
sub
loop
rep
cmpsb
fs
vmovntps
and
insb
insb
mov
fldcw
mov
xchg
lock
leave
xor
mov
jmp
inc
pop
pop
lds
sbb
daa
inc
imul
pop
std
test
cmp
je
mov
jnp
fbstp
pusha
aam
push
jbe
push
jne
hlt
or
mov
mov
xor
inc
xor
mov
dec
adc
mul
cmp
in
addr16
out
push
imul
pop
int3
fsubrl
fcoml
sbbl
or
in
pop
xchg
pop
fstl
inc
div
movsb
sub
mov
sub
dec
in
repz
pusha
setb
and
and
sbb
jbe
aas
bound
or
or
ljmp
adc
and
enter
and
jne
pop
mov
rcrl
imul
add
iret
insb
lea
xor
int
jne
movsb
gs
or
xchg
loope
test
sub
mov
cwtl
mov
lds
xor
repnz
cmc
cld
sbb
test
and
insb
lea
pop
mov
js
mov
imul
add
outsl
xor
insb
dec
lret
sbb
mov
inc
adc
sub
jmp
sahf
std
imul
pushf
push
or
repz
dec
push
aam
pop
inc
inc
data16
sbb
push
push
dec
rcrl
push
pushf
test
or
jno
mov
insb
jne
jl
mov
mov
mov
scas
pop
push
cmp
repnz
shl
shlb
arpl
or
lcall
fsubrl
and
push
out
xor
xor
sahf
push
push
jg
push
testl
fisubrl
adcb
mov
in
aad
dec
inc
mov
push
or
aas
mov
test
sub
test
mov
cmp
sarb
inc
pop
in
mov
jle
mov
jns
clc
insb
add
test
xor
gs
stos
pop
ret
test
ret
dec
in
jge
repnz
adc
icebp
outsb
insb
insl
sbb
out
push
pop
nop
mov
sub
push
mov
enter
inc
mov
and
insb
mov
leave
pop
push
insb
in
or
call
fwait
roll
leave
insb
nop
mov
xor
cmpsb
pop
push
xor
inc
insb
or
xchg
push
insb
mov
fisubrs
pcmpeqd
cmp
loopne
insb
push
insl
int3
or
data16
cmp
mov
or
adc
addr16
das
pushf
add
call
aad
push
stos
stc
adc
insb
xchg
dec
adc
xor
inc
push
inc
pop
lret
pop
mov
pop
dec
push
rcrl
mov
insb
call
in
mov
jae
adc
pusha
ljmp
das
ret
insb
mov
fldenv
dec
cwtl
mov
sub
in
imul
xchg
sbb
add
push
hlt
and
or
mov
pop
pop
das
pop
lock
jmp
and
aam
test
add
xchg
adcl
sarb
fstl
add
arpl
fcompl
insb
inc
sbb
pop
xchg
or
inc
icebp
fcmovb
scas
lret
inc
xchg
insb
xchg
daa
dec
jb
xor
out
stc
mov
or
insb
int
gs
insb
stc
mov
in
and
cmp
xchg
enter
or
mov
cmc
imul
test
pop
xchg
and
jle
sbb
fldcw
xor
jnp
std
add
xor
xchg
and
xchg
xor
inc
in
insb
call
sbb
es
rol
repz
loopne
xchg
in
ljmp
lret
jmp
push
in
adcl
insb
icebp
mov
mov
xor
imul
mov
mov
fistl
mov
imul
aaa
shlb
ret
imul
cmp
and
imul
inc
sbb
cltd
int
ja
mov
insb
movsb
shrl
insb
leave
into
insl
push
les
pop
push
in
pop
mov
dec
popa
push
arpl
jg
xchg
insb
jnp
cld
mov
insb
and
xchg
push
mov
lods
insb
push
add
jae
rep
int3
add
and
dec
or
mov
insb
arpl
xor
xor
jnp
fsubs
lds
push
mov
out
imul
rcr
or
loope
subl
push
insb
int
mov
les
inc
dec
insb
add
fsubrs
cmp
lcall
sub
mov
push
push
stc
out
jl
setge
cmp
and
inc
rolb
stc
test
andb
pop
and
shll
sahf
insb
das
dec
pop
xchg
push
xor
insb
pusha
xor
aaa
cmp
insb
sbb
cmp
aas
imul
fistpll
mov
popa
jp
outsl
jl
popf
or
loope
or
daa
aam
sbb
pop
test
adcl
mov
or
xchg
adc
mov
or
test
insb
xor
push
mov
int3
cmpsb
das
add
js
jmp
lock
gs
jnp
push
jo
gs
pop
pop
add
dec
nop
je
lret
shrb
xchg
lods
stos
xlat
mov
pop
bnd
dec
int
inc
into
cwtl
add
loopne
push
test
mov
cltd
gs
insb
and
cli
sub
psrad
out
dec
ret
cmc
les
jge
pop
rorl
mov
fsubl
lahf
mov
sub
pop
xor
pop
mov
mov
mov
inc
sahf
movsb
insb
push
cwtl
out
push
insb
push
sbb
add
dec
cmp
fisttps
lods
or
out
cmp
mov
imul
in
mov
fsubl
sub
xor
sub
rorl
pop
lret
loopne
gs
adc
insb
push
mov
jo
insb
sub
sbb
cmp
sbbl
ret
lcall
pop
cmpsb
rcll
xchg
faddl
in
inc
aaa
and
mov
test
imul
es
mov
fs
xchg
and
aaa
scas
mov
jae
int
sub
das
mov
aad
movsb
sub
add
loop
clc
in
nop
aam
pop
push
mov
pop
hlt
push
push
xchg
ljmp
arpl
xchg
insb
mov
mov
jne
xchg
ja
sub
mov
cmp
jne,pt
movsb
jns
fdivrs
js
std
insb
sub
insb
add
inc
mov
dec
adc
in
leave
fcomi
lret
inc
jmp
sub
mov
jnp
mov
jle
xchg
test
adc
insb
rclb
lds
pop
adc
call
js
or
iret
mov
roll
rcrl
lcall
insb
add
addb
imul
clc
cmpl
insb
dec
push
cmp
sub
insb
int
xchg
push
cmc
nop
ret
pop
pop
test
bound
jmp
jg
cmp
mov
cmp
insb
cli
dec
cwtl
in
mov
xor
int3
push
jne
mov
or
fsubl
loop
mulb
pop
popa
test
insb
in
mov
pop
lds
or
cmp
dec
shrb
mov
dec
and
ret
icebp
inc
mov
adc
xor
dec
in
add
dec
mov
cmp
insb
cmp
dec
adc
push
sub
icebp
sbb
lea
pop
xor
jns
aam
add
imulb
enter
mov
frstor
pop
push
out
stos
cli
gs
cmp
dec
push
aas
mov
clc
mov
xchg
cmp
stos
gs
repnz
mov
jg
push
xor
ret
add
xchg
loop
jb
imul
ret
jno
jl
in
insb
mov
mov
insl
insb
or
out
sbb
xor
xchg
addr16
data16
lret
fsts
dec
rcrb
imul
sub
negl
gs
jnp
push
and
and
insb
mov
aad
cmc
cltd
cld
int3
insb
out
adc
repz
clc
mov
sub
testb
test
shrl
sbb
iret
inc
lret
push
out
cmp
cli
mov
das
push
pop
repnz
insb
xchg
xchg
inc
adc
dec
or
fsubrl
insb
push
sbb
add
mov
stc
insb
divb
dec
insb
loopne
or
stos
popl
jns
dec
out
jo
inc
stos
pop
dec
xor
int3
and
insb
xor
dec
insb
cmp
mov
mov
mov
stc
insb
into
sahf
mov
add
ret
aaa
xor
in
jne
inc
out
lock
loopne
negl
gs
dec
icebp
test
and
clc
insb
dec
pusha
push
inc
mov
jb
in
cmp
or
fsubl
cmc
xor
cmp
jp
lret
mov
insb
rclb
push
cmp
incl
shrl
xor
dec
adc
mov
sar
dec
ret
pop
insb
and
mulb
mov
addr16
mov
dec
xchg
imul
shlb
test
add
faddl
bound
push
mov
mov
out
repz
lret
pop
insb
in
test
jae
je
popl
insb
inc
in
jl
inc
mov
aaa
insb
rcrl
mov
insb
mov
adcl
dec
adc
daa
cs
sub
push
sbb
out
adc
pop
jo
mov
or
adc
lret
call
dec
fisubrs
inc
fistl
adc
dec
xor
sub
std
inc
mov
test
jno
lods
mov
shr
mov
jns
insb
roll
lahf
movsl
pop
mov
adc
imul
and
in
add
dec
pop
insl
or
fildll
out
insb
add
xchg
sbbl
outsb
fiadds
movsb
sbb
mov
repz
fs
arpl
aam
ljmp
cwtl
ja
insb
pop
sar
mov
aad
pop
lock
out
inc
pusha
ret
xchg
bound
push
fcmovbe
xchg
jecxz
adc
jmp
mov
insb
jl
ficompl
stos
pop
pusha
insb
imul
enter
xor
cld
adc
insb
mov
xor
jns
cmp
mov
insb
outsl
push
and
jbe
ds
lret
sub
insb
inc
mov
jmp
and
imul
sbb
fsubl
add
in
fildll
cld
das
insb
sub
mov
mov
or
iret
xchg
int
movsl
arpl
lahf
adc
cld
pop
jne
insl
cmp
dec
and
dec
push
rorl
insb
cmpsl
cmp
xchg
shrb
shrl
mov
adc
aaa
stos
xor
fstpl
pop
jbe
ljmp
stc
insb
aaa
xchg
push
add
jge
mov
scas
dec
test
insb
adc
fcomi
xlat
insb
cmpsb
sub
and
les
insb
pushf
stos
jb
fcompl
das
stc
inc
lods
inc
inc
jbe
stos
xor
xor
dec
pushf
mov
dec
push
insb
push
sbb
mov
gs
mov
adc
jno
pop
lock
xchg
or
insb
dec
sar
sub
outsb
imul
or
xlat
lcall
mov
fidivs
outsl
inc
xchg
lods
xchg
sub
lea
mov
jae
fdivp
push
add
inc
test
loope
or
sub
cmpsb
xor
adc
insb
mov
ret
xchg
test
call
pop
jns
jnp
sub
jae
enter
or
mov
mov
xor
insb
movsb
jnp
lahf
outsb
mov
arpl
cmpb
cmp
insb
mov
mov
pop
sti
mov
mov
jne
cli
pop
lds
int3
jbe
push
cs
xor
mov
repz
imul
lods
mov
insb
push
addb
call
popa
inc
xchg
mov
jl,pt
jg
insb
push
test
push
insb
lock
or
arpl
cmp
imul
add
sbb
push
push
jge
in
inc
in
ss
pushf
cltd
insb
lds
subb
shlb
or
jmp
xor
gs
ds
stos
inc
mov
pop
mov
enter
cwtl
arpl
outsl
sub
pop
lea
leave
xor
int3
mov
mov
insb
imul
insb
sub
cmpl
imul
ljmp
cmp
test
outsl
jge
lahf
lock
sub
jmp
xchg
jae
push
dec
out
insb
inc
cwtl
mov
push
dec
or
les
scas
mov
jmp
mov
rcll
sahf
shrl
pop
jl
insb
mov
jbe
mov
inc
adc
and
fildll
jp
dec
dec
cmpb
lods
adcb
repz
out
dec
jg
popa
insb
fsub
sbb
arpl
xor
nop
int3
int
add
push
notb
aam
dec
inc
or
dec
jb
insb
jo
movaps
insl
scas
pop
insb
daa
sub
xor
inc
and
mov
fsub
bswap
sbb
repnz
lods
jmp
xchg
insb
mov
inc
and
add
xor
imul
pop
push
mov
in
mulb
das
cmpsb
stos
mov
mov
insb
push
sub
sar
and
subb
lds
pop
add
aad
xchg
imul
push
in
and
dec
iret
mov
in
or
stos
scas
mov
imul
fs
testb
mov
mov
fwait
xchg
mov
movsb
jl
scas
dec
adc
ja
jmp
inc
pushf
xchg
dec
jecxz
or
sub
clc
popf
jmp
rol
outsb
mov
adc
mov
lea
scas
push
std
pop
dec
and
adc
les
xchg
inc
jno
xchg
pop
jo
mov
lea
adc
mov
xchg
lods
out
in
out
incl
cmp
test
mov
insb
cmp
shll
mov
jbe
leave
jge
and
jle
shrl
and
in
inc
xor
outsb
mov
mov
jmp
xor
inc
sahf
cmp
mov
gs
in
adc
xchg
dec
dec
xor
push
pop
push
sub
js
xchg
insb
jns
es
dec
out
insb
loopne
add
push
ss
dec
lods
cwtl
xchg
cs
insb
jp
push
sbb
mov
testl
and
inc
jnp
insl
dec
shr
dec
or
push
sub
testl
lcall
je
out
shrb
and
aaa
lcall
jo
add
lods
xchg
addr16
insb
fimuls
mov
jp
lcall
push
xor
data16
lret
xchg
shrl
jno
jl
adc
insb
pop
add
aam
push
insb
add
out
fs
and
insb
mov
jne
mov
pop
shrb
mov
sahf
call
fbld
lock
cmp
mov
aas
sub
imul
in
iret
std
aam
repnz
cs
enter
imul
jae
sahf
pop
insb
mov
das
xchg
aaa
cmpsl
data16
insb
fwait
scas
lods
aad
jle
xchg
insb
or
insb
stos
xor
push
lret
mov
cltd
pushf
push
mov
arpl
sub
in
fldl
push
insb
sbb
out
imul
push
jnp
pop
nop
movsl
mov
or
mov
mov
repnz
insb
mov
lcall
clc
mov
insb
push
mov
pop
shrb
mov
sbb
insb
mov
mov
cmp
push
les
dec
mov
hlt
pop
out
fstl
loope
xchg
insb
int3
lds
and
out
inc
fbstp
orb
insb
add
aaa
es
pop
and
pop
scas
dec
mov
decb
cmpb
lock
adc
mov
lods
mov
leave
sub
mov
out
mov
repz
aam
ds
insw
mov
or
gs
andl
test
dec
push
inc
pop
sbb
insb
jmp
inc
mov
mov
cmp
repnz
mov
xchg
into
loope
jbe
lea
neg
stos
les
push
imul
rcr
adc
mov
xlat
push
inc
adc
aad
insb
mov
pop
lea
mov
les
mov
in
in
insl
lcall
jecxz
xchg
xchg
stc
dec
imul
xor
in
cmpsl
xor
and
add
int3
mov
cmp
lret
mov
lret
in
xor
cmp
call
mov
mov
fistl
jae
xor
aam
shll
mov
xchg
popa
and
xor
jb
fsubl
pop
js
or
pop
mov
pop
shlb
mov
pop
and
lds
ljmp
push
and
loope
cmp
xchg
mov
rcrb
ds
cmp
mov
jbe
jp
aas
jo
mov
mov
stos
insb
push
iret
icebp
or
xlat
pop
popa
xchg
pop
xchg
or
iret
jl
adc
fldenv
ljmp
mov
xchg
or
gs
xor
lcall
inc
mov
cmc
cltd
push
jmp
push
movsl
jl
dec
cmp
insb
mov
push
lods
flds
mov
push
test
aas
push
insb
orl
dec
and
insb
stos
addb
xchg
cmp
fisubrl
addr16
idivl
in
and
lahf
inc
insb
dec
push
mov
cli
fldenv
popa
in
cmp
push
lds
loop
xlat
xor
mov
popf
out
insb
and
and
pop
imul
pusha
daa
call
in
jg
cmpsb
sbb
jecxz
fidivrl
fisubrs
pop
mov
push
cs
into
or
mov
add
dec
ss
nop
repz
push
fisubl
cmp
ljmp
xchg
or
xlat
shrl
dec
cmp
adc
in
test
bnd
inc
jl
cmpsl
aad
dec
xor
insb
xchg
push
mov
arpl
arpl
in
lods
in
pushf
mov
sti
inc
imul
mov
mov
cmp
cli
and
xor
in
jp
xor
dec
jle
mov
subb
dec
test
subl
bound
out
cld
insb
xlat
in
pop
jecxz
movsl
pop
mov
mov
jl
test
push
adc
push
inc
mov
mull
leave
fsubrs
imul
xor
outsl
mov
out
js
insb
mov
es
and
mov
test
insl
xchg
jge
sbb
jmp
insb
loop
mov
in
mov
xchg
insb
push
push
inc
stc
icebp
xchg
dec
and
jmp
iret
mov
int3
adc
movsl
insb
ss
sbb
pop
int
test
inc
hlt
ret
gs
or
sub
outsb
gs
jle
cmpsl
inc
int3
int
add
pop
popl
mov
jb
fsubl
insb
pop
ss
jnp
sbb
adc
iret
mov
mov
dec
xor
call
mov
popl
imul
add
movsb
xchg
cwtl
adc
insb
xor
aaa
ds
or
insb
sbb
sub
mov
xchg
push
jl
pop
insb
push
push
mov
test
xor
gs
sbb
or
or
sub
adc
imul
shl
inc
and
out
lods
mov
jnp
cmp
ds
mov
test
lock
je
cmp
lret
mov
aam
sub
movsb
dec
lods
insb
int3
and
nop
adc
insb
mov
pop
mov
ss
insb
xchg
inc
jbe
inc
pop
push
in
mov
lds
cld
inc
xchg
jmp
dec
test
insb
aas
or
xchg
test
int3
pop
outsb
in
cltd
aam
jecxz
lods
jae
mov
gs
outsl
pop
pop
imul
xor
aad
inc
mov
insb
dec
rorl
loopne
test
inc
push
adc
pop
icebp
pusha
movsb
lods
xor
xor
lret
xor
fs
stos
lret
inc
es
push
dec
gs
incl
cmp
jecxz
sarb
test
cmp
xchg
cmp
add
shrl
insb
inc
mov
out
mov
mov
cli
insb
stos
push
into
xor
mov
insb
lcall
jns
loope
xor
adc
xchg
shrb
mov
stos
insb
jns
push
repz
dec
mov
mov
insb
xor
mov
test
adc
stos
mov
insb
push
outsl
sahf
inc
adc
bound
movsb
addr16
scas
insb
test
ja
pushf
insb
sbb
or
sub
adc
lods
dec
inc
adc
push
xor
ljmp
sub
stos
inc
arpl
js
mov
inc
push
gs
and
inc
mov
loope
sub
dec
shrl
pop
add
cmp
add
iret
inc
add
xchg
repz
sti
rolb
cltd
insb
pop
cli
mov
cmpsl
dec
pop
stc
mov
sahf
mov
fdivrl
push
lcall
jo
cmpl
and
xlat
jne
jg,pn
cmc
insb
jno
addb
jle
cmpsl
test
imul
aaa
iret
je
pushf
mov
insb
rol
mov
inc
adc
or
imul
rolb
lock
jns
test
fdivs
outsb
sub
ljmp
jo
mov
shr
xchg
in
inc
aad
sub
or
cmc
or
hlt
push
mov
mov
insb
test
push
aaa
adc
pop
repnz
lods
jmp
jno
or
mov
js
or
sti
insb
inc
test
andl
jl
xor
fcomi
pop
jge
popa
imul
imul
mov
lcall
daa
in
and
frstor
int3
cmpsl
adc
xchg
insl
push
mov
push
xor
repz
icebp
testb
imul
cmp
shrl
cmp
xchg
adc
sbb
and
in
repz
into
lea
insb
pop
fs
dec
call
jp
fwait
cmp
mov
mov
inc
mov
xchg
add
dec
pop
jno
sbb
gs
imul
out
or
cmp
jge
xor
in
fldt
xor
in
repnz
add
lods
lcall
cmpsl
testb
out
fidivrs
xor
mov
mov
cmp
insl
sub
out
mov
negl
xchg
dec
mov
jb
inc
insb
jbe
jp
mov
push
pop
insb
jge
int
fs
push
gs
mov
mov
xchg
insb
pop
xor
out
outsl
insb
repnz
call
insb
sarl
or
mov
insb
xchg
stos
mov
movsl
sar
mov
lea
push
enter
cmp
jns
push
imul
subl
into
adc
test
xorb
pop
insb
loopne
mov
stos
inc
lods
insb
cmp
fldl
xchg
insb
dec
icebp
dec
pop
mov
mov
std
jg
rclb
inc
xchg
aas
push
mov
push
pop
cmpsl
push
sbb
push
dec
and
loop
js
insb
adc
dec
scas
insb
xchg
out
repz
cli
pusha
push
dec
fmull
mov
sub
notl
fistpl
add
push
mov
add
aas
mov
js,pn
in
push
sub
jae
sub
ds
push
out
clc
imul
sahf
outsb
cmp
mov
sub
es
add
cmp
add
dec
ret
sahf
mov
in
outsl
push
pop
insb
cld
lods
popa
mov
test
loope
cwtl
cmp
mov
imul
add
insb
rcrb
sahf
dec
sub
loop
cltd
insb
inc
jbe
jns
test
mov
pushf
mov
insl
jp
mov
xchg
aaa
insb
mov
xchg
jbe
dec
mov
xchg
push
dec
ret
adc
insb
sbb
adc
push
mov
fcom
lret
xor
dec
sub
xchg
dec
sahf
arpl
xchg
dec
and
xor
lods
push
in
bnd
or
jbe
insb
mov
cmp
inc
jo
scas
imul
xlat
arpl
movsl
mov
jbe
addr16
push
push
lea
out
adc
jge
test
insb
mov
adc
sub
and
test
add
int
xlat
adc
sbb
cld
insb
mov
fsts
ds
cltd
xchg
xchg
leave
notb
jne
mov
cmp
push
insb
mov
insb
out
insl
jb
clc
aas
push
pop
cmpsl
rolb
cltd
xlat
insb
xchg
mov
xchg
push
xor
cld
arpl
adc
mov
dec
inc
scas
lds
mov
lea
sbb
add
or
fs
imul
lds
jmp
cmpsl
mulb
repnz
xchg
jle
in
insb
lea
sbb
dec
xchg
pop
push
sbb
inc
imul
cld
inc
call
jl
das
and
in
push
lods
mov
ret
xchg
test
es
fsubp
stos
insl
fldenv
cwtl
outsl
jne
sub
test
cmpsb
hlt
inc
ss
push
pop
arpl
adc
outsl
push
cmp
in
and
or
aad
in
sbb
jmp
jmp
inc
insb
dec
or
sub
insb
xor
std
mov
ss
jle
ficoml
imul
icebp
xor
fcomip
popf
insb
cmpsb
jne
sar
mov
dec
inc
sbb
mov
sub
sbb
add
jg
enter
and
xchg
cld
sarb
insb
dec
es
notl
popf
inc
push
add
xchg
stos
das
xchg
ja
mov
pop
sub
loope
add
inc
imul
in
dec
jb
insb
movsb
dec
mov
push
xor
shrb
inc
and
jg
pop
xchg
outsl
enter
push
jge
ss
sbb
xor
dec
inc
pop
push
insb
push
inc
or
sbb
insb
pop
cmp
repz
fldcw
mov
add
jg
pop
sub
insb
xor
test
dec
test
dec
mov
mov
imul
push
fsts
fwait
lea
fmull
ds
mov
lahf
sbb
add
jmp
mov
insb
out
adc
imul
pop
sub
pop
outsb
shr
sbb
xor
int3
test
loop
and
mov
or
imul
jns
shr
lods
cld
and
imul
pop
insb
xchg
lret
push
add
dec
mov
aas
sbb
xchg
lret
sbb
and
pop
icebp
xor
ss
fs
cvttps2pi
cmc
dec
insb
js
aad
repz
mov
jmp
pop
push
insb
add
stc
adcb
mov
imul
jo
lods
mov
push
mov
and
movsb
push
and
pop
fldl
inc
pop
jg
mov
mov
xor
sub
add
pop
cmp
fmull
mov
int3
addr16
clc
ret
insb
add
fisubrs
loopne
sti
mov
ja
jecxz
push
xor
and
pop
adc
push
cmp
add
sub
test
lahf
notb
cmp
mov
sbb
mov
sub
gs
jnp
mov
sub
xchg
inc
or
stos
scas
cmp
aad
mov
xchg
push
cmp
insb
popf
push
loope
fldt
pop
aas
int3
lcall
insb
in
je
sbb
jp
xor
insb
enter
roll
mov
inc
mov
insb
mull
sbb
out
lods
outsb
fnsave
insb
sahf
pop
bound
sub
movsl
setb
sub
repnz
lods
testb
imul
mov
push
pop
inc
insb
insl
fwait
or
push
jp
jl
idiv
insb
mov
adc
imul
adc
test
aad
std
ret
insb
and
jno
inc
leave
nop
mov
shrb
aas
push
mov
jb
je
cmp
shrl
test
adc
jbe
dec
in
cmp
sahf
pop
aad
insb
sub
icebp
inc
add
pop
mov
mov
sub
insb
dec
div
adc
dec
aas
mov
jb
ljmp
xchg
insw
je
push
push
push
into
push
push
insb
loop
fwait
data16
imul
or
add
mov
xchg
dec
imul
shrl
addb
scas
xor
insb
jbe
or
push
out
pop
xor
sti
xchg
cmp
stc
and
gs
int
jne
pushf
cli
addl
ja
pop
in
mov
aad
push
sbb
mov
sbbl
movsl
rorb
inc
xor
arpl
push
push
cmp
mov
outsl
xor
mov
and
inc
xor
inc
cld
pop
movsb
out
or
rorb
inc
mov
insb
sbb
lock
mov
cmp
not
sbb
cwtl
insb
xchg
sbb
and
dec
sti
or
int
in
insb
adc
jp
push
sub
xchg
sub
jg
leave
insb
fxtract
out
outsl
stos
test
pop
jmp
cmp
dec
addr16
popf
sub
pop
push
or
and
stos
data16
sub
jo
fadd
pop
mov
loop
mov
or
jno
and
es
xchg
or
xchg
or
imul
push
dec
subb
inc
jl
adc
popl
pop
and
insl
push
or
jnp
mov
sub
and
movsb
jl
fcoms
loope
lret
fwait
sbb
dec
and
fistl
data16
lock
cmp
sub
cmp
xchg
repnz
push
or
scas
int3
daa
jnp
sarl
xor
into
imul
inc
adc
add
jl
push
cwtl
ja
mov
dec
and
repz
in
imul
mov
sbb
cmp
in
aad
insb
push
sbb
sub
sub
mov
xlat
movzwl
sub
and
sbb
sub
jecxz
test
xchg
inc
fisttps
inc
xlat
and
sub
push
pop
push
xor
js
lcall
cmpsb
mov
dec
push
insb
sbb
xchg
iret
ret
pop
push
jnp
add
in
adc
mov
inc
call
jnp
or
jb
insb
mov
shrb
les
out
push
iret
imul
sbb
adc
adc
movsl
pop
cli
or
inc
mov
imul
insb
pop
mov
roll
pop
mov
add
fistl
insb
and
int
adc
loopne
cmpsl
adc
std
sub
out
subl
fsts
dec
lea
bound
test
repnz
in
mov
cltd
inc
pop
xor
lahf
jne
insl
mov
mov
sahf
popa
ljmp
into
jnp
cs
dec
insb
cmp
mov
insb
jae
idivb
jmp
into
insb
adc
mov
les
insb
and
and
pop
inc
cmc
mov
out
adc
call
sbb
loope
sub
push
imul
enter
out
adc
imul
aam
xor
xor
imul
push
std
add
mov
sub
pop
sub
pop
fwait
xor
out
jns
add
mov
hlt
pop
push
push
cmp
nop
jne
outsl
push
sub
insb
stos
je
or
mov
sbb
mov
std
scas
jbe
push
js
xchg
mov
or
iret
lock
test
xlat
push
mov
sub
int
addl
push
xor
push
popf
shll
pop
xor
inc
insb
sbb
or
mov
inc
dec
fsubrs
jl
out
test
outsb
insb
mov
gs
int3
movsl
inc
lock
jmp
xor
in
stc
out
mov
mov
icebp
cmp
mov
in
loope
and
jo
push
ss
rorb
imul
mov
divb
pop
icebp
or
popf
gs
shrb
jae
cwtl
push
sub
xor
insb
jne
in
es
xchg
loop
inc
hlt
and
les
fwait
test
mov
push
out
cmp
inc
mov
dec
rorb
bound
mov
loopne
icebp
fidivl
pop
insb
mov
jge
mov
adc
dec
imul
insb
lods
cmc
fisubrs
insb
lock
jmp
mov
out
mov
mov
pop
xchg
aas
cs
lea
daa
xchg
and
nop
sub
aad
push
or
shl
mov
cmp
lods
push
icebp
pusha
les
es
add
loop
insb
cld
push
xor
sti
gs
cmp
lds
push
push
test
mov
mov
or
movsb
stos
repnz
sbb
pop
sub
outsl
insb
cmpsl
adc
rclb
mov
push
les
mov
out
ds
aad
insb
mov
adc
or
mov
sbb
shll
mov
dec
mov
add
push
cmp
pop
cs
insb
cmpb
bnd
lret
push
dec
hlt
stos
lods
add
test
out
nop
icebp
mov
pop
adc
enter
push
mov
stc
imul
inc
adc
sbb
xor
inc
ljmp
fbstp
pop
insb
xchg
andl
dec
sbbl
insb
mov
sahf
mov
sbb
xor
mov
adc
sets
pop
sbb
stos
push
mov
in
imul
inc
aam
aaa
nop
insb
cs
push
lea
iret
dec
imul
jmp
out
insb
lea
push
jno
and
mov
sti
inc
in
push
dec
mov
and
imul
test
cwtl
mov
push
orb
xchg
mov
mov
inc
insb
jg
mov
add
scas
lods
insb
push
inc
ficompl
pusha
fwait
sahf
fdivr
pop
std
pop
sbb
lcall
push
cmp
in
insb
pop
and
cmpb
decb
sbb
pop
imul
mov
icebp
mov
test
aad
jne
xor
out
mov
push
or
mov
arpl
xchg
popf
out
xchg
in
das
jno
addr16
push
xchg
lods
jbe
sub
fidivrl
adc
insb
push
xchg
dec
cli
pop
int3
insb
lods
imul
xchg
insb
push
xchg
lret
cmp
das
cmc
pop
out
or
lods
mov
imul
pop
int3
adc
jo
sub
pushf
out
and
adc
mov
popf
cmp
lock
or
dec
addr16
test
inc
xchg
mov
pushf
repnz
xor
mov
hlt
sbb
jmp
xor
xchg
ds
faddl
test
shl
sub
mov
popf
stos
inc
dec
mov
mov
push
sbb
mov
popa
insb
cmpsl
mov
inc
or
rcrl
dec
mov
mov
repnz
adc
jno
insb
mov
enter
mov
mov
dec
test
lods
push
movups
shll
pop
xchg
std
pop
cwtl
and
sub
sbb
pusha
xchg
insb
into
iret
or
pop
push
mov
test
outsb
lea
in
idivl
in
xor
adc
mov
aas
insb
in
add
pop
scas
mov
and
jnp
sub
push
arpl
out
jae
lcall
lret
insb
mov
mov
test
mov
shr
int3
insb
cs
pop
call
imul
inc
pop
or
mov
insb
add
popa
jle
fwait
mov
je
insb
imul
inc
adc
insb
mov
mov
lret
ret
push
pop
lods
cpuid
pop
cmp
cli
jae
imul
mov
push
pop
insb
mov
dec
sub
lods
xor
jle
popf
dec
jbe
dec
insb
jmp
loop
cmp
lahf
fcoml
inc
fdiv
movsb
insb
push
mov
shrl
outsb
mov
jo
insb
leave
xor
gs
popf
push
push
pop
insb
jecxz
inc
out
insb
jnp
rcll
imul
das
lret
test
or
push
testb
mov
psllw
jle
and
xor
pop
dec
jg
aad
sbb
fadds
add
jmp
sbb
xor
fistps
mov
aad
nop
shll
in
push
sbb
xchg
dec
in
cltd
mov
call
xchg
orl
mov
push
shrb
jle
sbb
insb
sbb
iret
jl
inc
jb,pn
pop
push
lea
ret
insb
push
jecxz
inc
mov
fisttpl
lods
lcall
jl
cmc
cmp
jno
jbe
cmpl
insb
mov
insb
cmp
cmp
stos
insb
movsl
push
repz
and
dec
mov
push
outsb
addr16
adc
xchg
jle
dec
push
lods
mov
jno
insb
cmp
sbb
add
adc
fdiv
mov
icebp
dec
daa
xchg
inc
pop
js
aad
insb
test
fwait
dec
or
insb
int3
sbb
mov
add
mull
popf
or
cmp
jl
lods
jp
cmp
in
jne
jmp
xor
dec
pop
dec
adc
or
adc
insb
movsb
and
lods
or
cwtl
outsb
xchg
lcall
push
jecxz
xchg
mov
jae
cmpsb
std
test
insb
addl
insl
pop
loop
pushf
mov
cmp
mov
ljmp
add
lret
push
int3
stos
fistpll
ja
cmp
xchg
es
jp
repz
loop
push
xorl
ret
inc
inc
lods
bound
gs
lock
push
ljmp
sti
adc
dec
arpl
popa
insb
jae
fistpll
hlt
mov
int3
sub
add
stc
mov
and
scas
dec
orb
push
lods
inc
mov
push
mov
xchg
insb
mov
pop
mov
xchg
push
mov
push
insb
arpl
inc
dec
insb
mov
sbb
mov
fs
adc
push
insb
push
and
fwait
rorb
mov
jne
mov
in
or
into
orl
and
lods
lcall
repnz
les
cld
out
loopne
pushf
dec
push
lea
movsb
lahf
lods
test
fsubrs
jno
dec
pop
mov
insb
mov
fwait
pop
test
xchg
gs
or
pop
and
test
insb
jbe
aad
xchg
int3
sahf
fs
insb
imul
mov
sbb
scas
mov
sbb
mov
in
cwtl
mov
cltd
enter
inc
xor
cmp
cmp
nop
cmp
mov
mov
shrb
or
call
dec
xchg
add
loopne
xor
ss
pushf
xor
insb
shrb
and
in
pop
test
mov
adc
loopne
ficoml
shlb
int3
dec
jp
hlt
sub
loope
mov
or
repz
cmp
nop
outsb
insb
int3
movsb
add
push
pop
push
mov
insb
das
sahf
mov
filds
insb
mov
imul
push
dec
lret
jl
xor
insb
out
dec
jb
stos
ret
in
xchg
mov
jnp
repnz
inc
je
pushf
or
cmp
fnstenv
fidivs
pop
inc
adc
jmp
or
pop
sub
adc
wrmsr
push
sbb
sti
rorl
sbb
insb
adc
push
icebp
sahf
daa
insb
cltd
rorl
or
xchg
dec
and
sub
andb
xchg
jg
psubsb
pop
lock
push
insb
hlt
adc
sbb
lds
jg
inc
insb
push
js
mov
ljmp
push
test
jns
insb
mov
mov
cs
je
aas
push
mov
jle
inc
sub
jmp
jecxz
pop
aaa
imul
add
mov
push
mov
or
sub
shlb
test
daa
lret
mov
cmc
std
xchg
out
push
lahf
jno
push
sbb
add
xchg
adc
sub
add
lock
cmc
cld
insb
jl
in
push
jae
push
mov
insb
xchg
lea
add
out
nop
imul
lahf
insb
iret
pushf
xorl
outsb
std
sbb
test
jge
or
xorl
insb
and
sbb
jl
fisubrl
mov
test
mov
sub
push
fwait
cli
stos
insb
aad
aaa
cmp
pop
iret
shrb
push
xchg
fistl
ja
jb
std
xchg
dec
les
mov
je
mov
insb
shl
mov
stos
insb
in
testl
insb
rcl
and
adc
mov
inc
lcall
imul
subl
jmp
int3
xor
jle
bound
insb
mov
pop
mov
push
add
call
adc
sahf
imul
add
daa
std
mov
imul
mov
movsl
mov
mov
insb
sbb
lcall
mov
cmp
pushf
xor
insb
mov
adc
rolb
insb
cmpsb
xor
pop
sbb
mov
fisttps
movsb
insb
icebp
movsl
lret
mov
gs
adc
jae
insb
movsb
mov
push
pop
xor
in
xchg
mov
mov
jnp
xor
std
ja
mov
and
insb
adc
int3
push
xchg
inc
arpl
add
aaa
enter
cwtl
adc
insl
ret
cmp
ljmp
jo
jge
push
push
subl
add
xchg
jge
jle
popa
clc
mov
sub
and
mov
into
insb
vandps
insb
pop
rcrb
imul
push
pushf
in
ja
movsl
mov
gs
inc
int
jno,pn
jae
insb
xchg
test
jg
dec
jne
mov
xchg
insb
andl
sub
and
out
adc
xchg
insb
insl
mov
and
pusha
lock
ja
cmc
adc
in
insb
std
push
scas
jae
cmpsb
lcall
cmp
fdivs
xor
mov
push
lods
test
imul
insb
test
cmp
add
xor
fildll
cmpsb
mov
out
into
daa
cmc
cltd
dec
adc
mov
xorb
mov
test
adc
fcomps
cmp
hlt
mov
insb
aaa
pop
jl
pop
sbb
inc
insb
out
jmp
aam
je
gs
insb
div
jecxz
insb
lods
ds
pop
pushf
mov
insb
or
or
mov
icebp
xchg
rcl
push
insb
pop
adc
sub
push
dec
std
insb
sub
fnsave
sti
insl
aad
jmp
insb
test
dec
xchg
cmc
xor
scas
pop
sub
in
sbb
xchg
mov
leave
cmc
lds
and
dec
jecxz
sti
fimull
pop
cmp
adc
mov
push
ret
pop
fnstenv
sti
push
xor
fiaddl
jne
push
mov
push
gs
arpl
xor
test
jb
pop
push
cmc
insb
mov
imul
cmp
lea
dec
pop
popf
shlb
insb
lods
push
movsl
add
mov
out
out
jl
imul
pushf
pop
ds
cmp
and
lret
test
dec
xor
jg
jbe
clc
pusha
repnz
loopne
inc
in
icebp
push
cltd
add
insb
sbb
insl
insb
pop
je
fdivrp
push
rorb
aas
jge
dec
imul
pop
insb
scas
jecxz
pushf
xor
orb
mov
in
pusha
lds
xor
out
insb
stc
and
stos
insb
cmp
push
jb
push
jne
shrl
insb
stc
daa
rcll
mov
repz
or
int3
je,pn
mov
fcompl
stc
fwait
dec
daa
out
data16
insb
push
dec
repz
sti
push
leave
xor
mov
imul
lods
daa
insb
or
sbb
ljmp
xchg
and
jmp
stos
cmc
jle
imul
mov
sahf
pop
mov
arpl
mulb
out
jns
outsl
cmp
jmp
mov
mov
inc
loope
ljmp
insb
adc
jmp
mov
icebp
push
cmp
daa
insb
into
cmc
je
adc
lods
shrl
push
pop
push
mov
xor
mov
mov
sub
shlb
inc
insb
pop
jmp
xor
popf
inc
movsl
jecxz
push
push
jb
imul
add
addr16
mov
ret
lock
out
adc
test
insb
cmp
mov
and
aas
aad
mov
test
rclb
repnz
mov
lods
insb
je
pop
fidivl
sti
pop
lock
mov
sbb
mov
sub
test
xor
pushf
adc
enter
cwtl
sbb
and
jae
scas
in
cmp
insb
mov
cs
test
mov
sub
leave
pop
std
fiaddl
pop
scas
mov
gs
pop
dec
inc
mov
insb
xchg
sbb
ret
xlat
into
imul
mov
mov
insb
sub
outsb
or
test
cmc
insb
rcrl
loopne
lahf
jno
xchg
out
bound
xor
mov
jns
das
push
add
lret
mov
xor
out
hlt
or
dec
pusha
insb
pop
inc
adc
movsb
inc
pop
pop
imul
ljmp
popf
lret
js
insb
repnz
jnp
mov
out
test
push
mov
imulb
shrl
cmpsl
push
and
xor
imul
lcall
mov
add
sub
fimull
je
mov
insb
ds
mov
adc
insb
mov
inc
push
sbb
jp
xorb
or
mov
pop
aad
mov
cld
cmp
mov
in
gs
test
pop
insb
sbbl
mov
or
and
mov
xlat
pop
jle
jns
cmc
nop
mov
sbb
xor
jbe
out
popf
xchg
jns
and
cwtl
xchg
aaa
insb
adc
cltd
fildll
rcrb
insb
out
or
jle
ja
ss
stc
mov
push
push
jo
add
enter
dec
arpl
xchg
mov
push
xchg
and
sahf
movsl
imul
lods
push
mov
pop
fistl
inc
imul
jl
xor
push
jl
sub
addb
pusha
out
fisubrl
push
xchg
xchg
inc
mov
lds
xchg
shrb
imul
mov
or
mov
das
into
fcompl
insb
or
xchg
repnz
aam
dec
imul
rolb
add
test
push
inc
mov
into
repz
adc
gs
mov
inc
xchg
mov
push
bound
nop
and
lcall
ret
xor
cmp
lret
fsin
pop
subb
xchg
adc
push
cmp
pop
mov
jo
lds
pop
inc
lret
out
cli
js
sbb
loope
adc
imul
dec
in
mov
sbb
insb
dec
push
pop
adc
sbb
pop
jl
pop
xchg
cmc
jmp
jns
insb
sub
pop
mov
out
lods
insb
inc
sub
inc
int3
push
push
jbe
mov
add
and
pop
or
in
cld
mov
in
insb
stc
cmp
sahf
fscale
jp
and
insb
mov
ja
shrl
lret
jne
sub
clc
imul
mov
push
push
xchg
dec
jbe
outsl
and
push
add
or
lock
pop
out
scas
pop
dec
push
add
sub
pop
xchg
ror
sub
stc
shrb
pop
cwtl
sti
mov
xor
test
cmp
test
xchg
jno
test
imul
aad
aaa
aas
into
mov
insb
xchg
pop
pop
subb
pop
test
dec
ja
cmpsb
push
das
inc
daa
mov
divb
clc
dec
mov
in
repz
cmpsb
adc
insb
xor
mov
jl
adc
insb
stc
fcoms
xor
popf
in
sbb
mov
mov
mov
insb
sbb
xchg
add
subb
lods
mov
into
push
sti
shrb
push
xor
stos
mov
mov
mov
insb
jmp
push
test
cmp
clc
test
mov
mov
leave
insb
testb
xchg
lahf
aas
and
lock
pop
fcomp
into
out
ret
testb
decb
adc
imul
addr16
xchg
loope
in
and
pop
ljmp
cmp
pop
rcrl
push
jae
repnz
rorb
or
add
or
mov
insb
inc
cmp
and
rolb
ffreep
cmp
mov
insb
xor
sbb
cld
jecxz
insb
jp
popa
xchg
jae
xchg
mov
enter
and
out
or
insb
xor
pop
pushf
or
push
jge
pop
dec
cmp
add
insb
mov
inc
dec
cmpsb
lods
insb
add
fdivrl
ficompl
addr16
les
mov
stos
push
cld
push
in
sarb
movsb
insb
enter
jns
clc
and
cmpsb
push
mov
aas
pop
insb
fcomp
adc
and
popa
and
mov
sbb
mov
push
gs
and
push
insb
mov
cmp
dec
inc
add
adc
lods
jnp
sbb
mov
push
iret
insb
mov
fdiv
mov
dec
inc
push
pop
gs
or
mov
shl
sbb
int
lods
sbb
leave
or
and
bound
insb
mov
xchg
scas
int
hlt
push
movsb
cmp
xor
inc
shlb
insb
arpl
and
push
or
sub
test
stc
in
aas
int3
imul
icebp
mov
cmp
xchg
sti
outsb
or
insb
sbb
icebp
mov
ss
pop
ds
mov
and
mov
ljmp
in
cmp
insb
xchg
pop
leave
jae
movsb
insb
or
xchg
cmp
ja
sbb
in
enter
mov
mov
fbstp
dec
addr16
pusha
dec
jmp
jb
sbb
pop
gs
ljmp
cmp
out
push
push
lcall
fucom
ja
mul
fsubr
insb
int3
xchg
add
mov
faddl
sub
mov
inc
stos
sbb
sbb
sub
insb
hlt
mov
push
and
dec
push
insb
push
and
or
subb
iret
pop
and
insb
out
lret
in
mov
adc
jge
or
insb
dec
pop
push
fstpl
xor
insb
les
popa
insb
lock
sbb
test
or
jmp
out
pop
dec
ss
jmp
cld
sbb
insb
ret
je
test
mov
shr
mov
gs
outsl
mov
aad
push
xor
pushf
fucomi
adc
imul
inc
in
ret
jbe
pop
orb
cmp
inc
fsubrs
int3
sbbl
add
cmp
imul
gs
xlat
xchg
repnz
jno
movsb
sahf
insb
loopne
jp
mov
mov
in
shll
std
dec
xchg
je
out
or
push
adc
pusha
sbb
add
das
adc
jbe
push
mov
fisubrl
mov
adc
bound
gs
movsb
subl
lahf
sub
sub
and
lcall
pusha
insb
ljmp
insb
stos
addb
test
inc
in
and
daa
movsb
push
aam
adc
jbe
data16
mov
jmp
xor
add
pop
xor
orb
sbb
cli
cld
dec
out
cmpb
xchg
inc
cmp
leave
inc
int
insb
or
ds
pop
dec
aad
or
outsl
nop
push
sti
jne
mov
inc
insb
fbstp
fwait
jecxz
adc
jb
icebp
xchg
jl
adc
sti
dec
cli
and
inc
repnz
popa
imul
adc
insb
xchg
test
aad
scas
in
cmp
loopne
aas
add
push
rorl
cmp
mov
cmp
arpl
shlb
pop
movsb
inc
xor
sub
test
push
imul
xchg
imul
call
je
xchg
dec
pusha
lahf
fadd
and
push
inc
push
push
mov
mov
jns
cmp
lock
aad
call
jne
cld
lret
push
test
jnp
stos
les
je
jbe
add
jae
push
clc
call
insl
sbb
shlb
aam
loopne
aam
scas
test
or
xchg
mov
sbb
push
mov
inc
xor
and
test
mull
inc
test
test
and
mov
xor
stos
jp
enter
push
das
cmc
in
fxch
test
insb
cmp
test
es
mov
insb
sarl
fdivl
jle
jbe
cli
and
dec
and
fcmovnbe
in
ja
outsb
je
mov
push
movsb
mov
jge
and
insb
mov
out
insl
sahf
pop
int
inc
push
repz
add
adc
in
mov
enter
fwait
cli
cmpsl
ret
or
xchg
scas
mov
outsb
sub
inc
insl
xchg
out
cmpsb
insb
ret
dec
movsb
data16
mov
or
loop
mov
js
adc
arpl
dec
gs
pushf
imul
jle
iret
jmp
sbb
imul
adc
insb
xor
inc
out
add
aam
push
pop
ss
add
aaa
jns
rep
cli
test
jbe
addr16
out
cwtl
div
lods
das
popf
and
lock
jnp
ljmp
adc
lds
mov
pop
scas
insb
ret
scas
xchg
xor
in
jns
stos
js
mov
imul
sub
repnz
sbb
fs
mov
sbb
sbbl
cmp
ja
das
je
fdivrp
push
gs
in
inc
hlt
int3
cmpsl
jle
add
jmp
test
arpl
xor
les
pop
ret
jle
xchg
pusha
insb
xor
mov
inc
fdivs
jg
sub
outsl
pop
mov
out
in
adc
and
andb
mov
popf
or
lret
test
sub
aad
insb
daa
jmp
mov
push
lock
add
push
sbb
adc
mov
or
lods
push
test
pop
or
aaa
push
jl
mov
cs
cmp
stos
sarb
lea
mov
insb
sbb
mov
ljmp
cmp
or
insl
insb
push
scas
hlt
sub
cmc
xor
lcall
adc
movsb
fistl
mov
testb
and
insb
mov
sbb
push
add
mov
jnp
pop
insb
lcall
inc
insb
pop
push
call
mov
stos
inc
cmp
add
jp
cmp
ss
inc
lds
push
insb
je
mov
ljmp
outsl
add
into
fildll
or
mov
dec
mov
or
add
popa
insb
dec
orb
xchg
lret
insb
jno
or
and
fsubs
lahf
ss
mov
pusha
insb
iret
rclb
insb
fcmove
and
mov
mov
out
popf
ljmp
cmp
jle
xor
paddsb
mov
push
stc
adc
insb
loopne
decl
xchg
cmp
pop
xchg
in
outsl
ret
insb
mov
lods
pushf
nop
fsubrl
out
iret
hlt
sub
popa
pop
imul
insb
or
lret
rep
or
dec
pop
push
dec
mov
dec
xchg
pop
xchg
jmp
mov
cld
sbb
jle
insb
shll
xchg
mov
lods
rorl
adc
mov
cmc
into
insb
in
rcrb
fisubrs
mov
sbb
add
ds
inc
xchg
or
in
xor
xchg
fldl
mov
aam
std
enter
ja
in
pop
out
outsb
imul
mov
test
cwtl
scas
lods
mov
insb
mov
xchg
push
cmpsb
insb
js
cld
add
pop
outsb
mov
push
les
scas
dec
pop
xlat
push
xchg
dec
insb
sub
cs
mov
cmp
mov
xchg
sub
ss
mov
jbe
cmp
lock
pop
or
rcll
call
sub
in
mov
dec
cld
xchg
cmc
dec
push
adc
or
repnz
scas
dec
insb
outsl
adc
sbb
shll
subl
orl
fdivrl
push
add
cmp
jbe
insb
lods
mov
sbb
insb
int
sub
pop
jmp
clc
imul
dec
shrl
inc
adc
loop
popf
sbb
pop
sbbl
into
rcl
jns
out
and
mov
and
insb
or
cltd
nop
insb
pop
or
jb
dec
cmp
jmp
ret
shrl
mov
pushf
out
scas
insb
test
xchg
pop
and
xchg
insb
push
test
insb
mov
or
insb
mov
push
xor
je
dec
pop
lahf
aaa
cli
int3
insb
lds
lret
and
loope
hlt
repz
daa
lock
imul
movsl
popf
add
orl
lods
bound
das
outsb
insb
dec
xchg
xchg
and
test
stc
jo
sub
les
xchg
or
jno
insb
out
mov
and
enterw
shl
xchg
insb
pop
fstpt
mov
jb
xor
je
sbb
cmpsb
mov
lods
fs
aas
dec
sbb
or
cmp
insb
mov
push
test
insb
in
ljmp
nop
push
cs
sub
inc
jbe
insb
cmp
xchg
out
xchg
stos
push
imul
jl,pn
and
push
ud1
repnz
or
inc
cmc
aam
in
data16
insb
ds
mov
pop
cmp
rclb
leave
cld
lock
outsb
lret
xor
pop
add
int3
mov
or
xchg
cmp
nop
jge
aaa
jb
movsb
mov
push
lret
xor
mov
sti
pop
xor
pop
or
gs
ret
arpl
sbb
fisubrs
gs
dec
pop
mov
cli
jle
bound
inc
push
insb
mov
insl
mov
mov
and
popa
mov
leave
cmp
push
pop
fmull
dec
pop
adc
fistpl
insb
test
aas
mov
cli
adc
mov
in
loopne
and
pop
insb
lret
or
cs
jo
sbb
lret
lods
adc
cmpsb
int3
fwait
pop
out
adc
mov
lahf
sub
dec
mov
mov
add
and
inc
insb
mov
scas
jmp
xchg
sarb
dec
xor
inc
repnz
insb
push
mov
push
mov
dec
cli
mov
dec
sub
add
or
mov
iret
pushf
or
movsl
movsb
cmpsb
push
xor
insb
mov
mov
insb
add
test
add
mov
aad
dec
mov
dec
insb
and
ret
jne
lret
pop
jl
insb
sbb
jbe
inc
mov
mov
xor
and
push
push
or
inc
rorb
imull
jbe
jle
mov
dec
scas
in
orb
sbb
das
outsl
fsubl
xchg
sbb
dec
dec
mov
xor
xchg
rcrb
xlat
in
inc
pop
fldl
fsub
sbb
push
loop
daa
adc
cmp
sub
mov
enter
insb
xchg
jge
outsl
xor
mov
lods
test
add
xor
jg
sub
int3
xlat
xor
popa
push
into
je
insb
xor
inc
outsb
lods
insb
dec
inc
mov
loope
jl
mov
test
scas
sub
insb
push
mov
or
je
shrl
mov
cmpsl
push
xchg
insb
xchg
in
fstpt
dec
js
insb
bound
adcb
cmc
add
cmp
pop
xor
fcmovnb
push
mov
movsl
pop
imul
dec
mov
mov
push
aas
xchg
cli
cmpsl
add
mov
mov
insb
and
rol
bound
nop
insb
xor
or
pusha
lahf
insb
fwait
adc
sti
lcall
sbb
ds
mov
gs
in
ss
in
jl
cli
gs
push
scas
mov
push
insb
fldenv
push
sbb
cs
in
sbbb
insb
pop
std
add
inc
dec
xor
icebp
xor
insb
mov
xor
bnd
je
rorb
add
imul
ljmp
insb
out
jecxz
mov
jl
movsb
push
test
push
insb
adc
rcrl
dec
sub
mov
fdivs
sbb
shlb
xlat
addr16
cmpsb
xchg
mov
ss
int
scas
jmp
xchg
fiaddl
jg
cmpb
dec
push
push
mov
jnp
lcall
pusha
adc
insb
lods
stos
jne
lret
mov
divl
xchg
jmp
test
sub
shrb
pop
jno
sub
daa
repnz
pop
jne
pop
cltd
inc
xchg
repz
mov
jb,pn
add
fs
imul
into
in
pop
adc
mov
in
mov
push
addr16
gs
ljmp
sbb
enter
imul
jno
and
dec
int
mov
jg
sti
into
push
outsl
cmp
push
lret
push
insb
scas
dec
and
mov
mov
dec
xor
adc
jmp
sbb
mov
push
fstpl
out
mov
fistl
mov
aam
cmc
pop
adc
mov
pop
imull
mov
ret
push
stos
sub
pop
movsl
sarb
mov
lods
pusha
clc
bound
loopne
insl
sub
mov
stc
insb
leave
cs
shlb
fimuls
push
sbb
test
cmc
push
insb
testb
std
int3
push
in
xor
lds
xchg
js
aam
insb
jmp
or
rolb
pop
insb
adc
int
mov
jge
ret
inc
in
sbbb
jae
outsb
fwait
test
insb
aas
adc
jne
push
xor
insb
jmp
dec
add
insb
or
sbb
mov
stos
scas
mov
fadds
push
lahf
test
jbe
arpl
jge
lret
push
push
and
sbbl
mov
imul
jl
outsb
fcomps
and
cmp
insl
mov
jbe
push
fistl
insb
aaa
push
movl
lcall
cmp
and
mov
imul
dec
adc
xchg
sub
scas
mov
ss
call
pop
mov
xchg
stos
add
lods
subl
xor
clc
sbb
cs
in
pop
in
mov
dec
adc
stos
and
hlt
mov
std
int
sub
outsb
dec
insb
sbb
aad
insb
fidivrs
or
repnz
insb
imul
adc
and
adc
rorl
insb
fldt
arpl
inc
dec
das
mov
mov
lahf
mov
sti
sub
xlat
lds
push
push
imul
mov
test
adc
mov
decb
jmp
pop
sub
add
mov
sbb
or
jg,pt
push
or
sub
inc
mov
and
nop
mov
pop
icebp
insb
jae
imulb
push
imul
push
clc
imul
mov
out
or
bound
lcall
lods
and
xchg
sub
mov
push
mov
pop
mov
es
clc
std
insb
insl
inc
incb
pop
xchg
pop
insb
inc
adc
fadds
insb
lret
loop
mov
dec
xor
ja
sub
cld
push
jecxz
imul
push
or
sub
sbb
shrl
mov
enter
mov
int3
and
insb
inc
jo
mov
sub
dec
mov
jae
lret
xchg
nop
dec
cmp
mov
insb
inc
ljmp
in
mov
adc
jmp
insb
cmp
imulb
insb
leave
add
push
insb
push
jge
icebp
sub
jns
insb
loopne
pop
mov
int3
cltd
std
testl
jns
lock
cmp
gs
mov
fwait
and
push
insb
or
outsl
gs
cli
lret
dec
fisubrl
int
pushf
push
inc
or
pop
cld
mov
out
daa
adc
insb
sub
push
add
loopne
fsts
adc
adc
dec
into
sub
cli
jecxz
les
mov
insb
push
in
sbb
ss
imul
clc
lods
push
dec
aam
push
mov
outsb
insb
sbb
arpl
sbb
sub
outsl
mov
daa
ljmp
inc
mov
fwait
push
cwtl
push
call
cmp
fsubl
arpl
gs
outsb
xchg
jne
insb
jbe
mov
dec
cld
mov
pushf
imul
push
inc
jnp
mov
adc
in
in
arpl
or
bound
and
insl
sbb
push
test
inc
adc
lret
dec
or
sub
lret
sbb
lret
or
int3
sbbl
jae
jae
out
cs
outsb
pop
loope
aaa
popf
cld
cmpsb
loopne
fstl
fldl
jbe
jmp
xor
xchg
inc
jb
leave
scas
imul
negl
push
je
shll
push
mov
cmp
mov
jne
insb
add
fsub
imul
xchg
and
into
inc
faddp
cld
call
cmp
mov
jae
addr16
insb
cltd
xchg
or
inc
mov
shrb
insb
xor
test
std
cmpb
pop
aad
cmp
imul
xor
mov
mov
fldenv
xor
cli
or
ds
adc
sbb
inc
push
imul
ds
xor
lods
imul
xchg
inc
pusha
mov
outsb
mov
ret
cmpsb
insb
and
xchg
xor
insb
dec
fcmovnbe
cwtl
shll
adc
js
lret
xchg
insb
lds
push
adc
fidivs
in
xlat
dec
mov
insb
sub
test
mov
ficompl
arpl
cltd
insb
cmp
jo
xor
insb
and
jmp
lods
imul
add
or
stos
xchg
je
mov
insb
dec
mov
add
xor
xor
cs
arpl
in
xchg
fildl
adc
mov
ds
imul
rcrb
inc
insl
jno
inc
xchg
movsb
popf
loop
pop
sti
cmp
mov
call
cmp
pop
pop
js
mov
cmp
jle
in
fistps
mov
popa
cmp
sub
pushf
pop
faddl
or
mov
xchg
push
lods
mov
jo
popa
cmp
mov
mov
lds
lea
xlat
push
cmp
rolb
mov
scas
js
cmp
lahf
pop
jecxz
xchg
mov
sub
fwait
jp
push
adc
push
lock
pop
jp
stc
insb
push
in
and
push
jmp
insl
mov
popa
dec
ffreep
lods
hlt
scas
insb
mov
bound
mov
imul
xor
mov
mov
loop
dec
dec
sbb
pop
daa
mov
ficompl
insb
ja
sarb
mov
insb
xor
or
sub
inc
insb
hlt
adc
in
xchg
push
push
cmc
jmp
dec
mov
xchg
imul
pushf
add
lret
pop
insb
push
dec
ficoms
sbb
imul
mov
out
mov
push
xor
pop
pop
mov
insb
aad
jne
imul
rcll
sub
loope
rolb
ret
clc
in
push
addr16
and
adc
je
dec
stc
cwtl
mov
mov
jae
push
gs
hlt
jnp
sub
xchg
nop
sub
mov
xor
dec
mov
es
outsb
imul
push
shll
xchg
push
insb
pop
xchg
xchg
repz
gs
test
imul
or
push
mov
in
fsubr
addr16
insb
fstpt
shrb
les
mov
xor
pop
cmp
mov
cltd
or
out
xor
insb
cmp
mov
sti
in
push
cmpsl
ds
insb
roll
sub
mov
pop
xchg
lods
add
jmp
scas
insb
mov
jp
lret
rclb
in
xor
movsl
insb
aam
hlt
pop
fstpl
xor
xchg
insb
sbb
ja
aad
jl
insb
or
sub
popa
shrl
js
jle
loop
cmc
mov
sub
add
insb
iret
mov
jno
pop
lret
push
xor
jecxz
push
inc
out
out
stos
insb
push
fstpt
int
ljmp
pushf
repnz
pop
gs
shr
imul
adc
lret
xchg
jl
inc
push
imul
mov
push
sub
insb
outsl
adcl
pop
cmp
int3
sub
enter
insb
mov
inc
jecxz
jne
scas
insb
lds
ss
adcl
fwait
adc
pop
or
inc
and
pop
icebp
in
mov
pop
pop
enter
cwtl
out
repz
insb
jl
push
mov
cltd
dec
cmp
lods
push
fsubrp
imul
shlb
cmp
leave
xor
xlat
insb
es
pushf
lods
xor
and
inc
cmc
pop
imul
dec
push
aaa
insb
in
addr16
mov
lea
lods
imul
out
cltd
and
aam
fistps
jns
mov
pop
bsf
inc
xchg
in
add
lods
mov
fbld
int3
loope
sub
ljmp
int3
ja
inc
in
inc
lods
mov
imul
mov
insb
jge
xor
add
adc
insb
push
divb
scas
icebp
fistps
stos
jecxz
pusha
mov
dec
jge
bound
lods
mov
xlat
xchg
insb
push
icebp
cli
std
mov
je
insb
xchg
push
das
jae
scas
imul
mov
push
insb
sahf
ljmp
insb
fcomi
jmp
aam
jecxz
fs
das
sbbb
imul
test
out
mov
shlb
aam
inc
mov
insb
nop
scas
push
inc
insb
mov
dec
fwait
mov
in
aas
mov
insb
fdivs
or
dec
lret
imul
and
out
jl
lcall
xchg
jno
xchg
dec
insb
sbb
push
fiadds
ss
or
scas
out
mov
xchg
in
negl
mov
loop
mov
lock
jmp
addr16
and
hlt
jne
mov
inc
out
adc
mov
cmpsl
icebp
bound
sbb
popf
cwtl
xchg
and
inc
insb
ret
push
int
fcoml
dec
cwtl
popf
push
mov
xor
sub
movsb
pop
push
aam
mov
aas
in
and
das
fwait
loop
jecxz
flds
mov
jo
imul
xchg
sbb
lock
popf
jl
lods
rorb
or
popa
jnp
insl
push
xor
mov
popf
call
insb
scas
mov
cltd
fisttpll
test
xor
insb
dec
pop
fiaddl
insb
lds
js
jg
aad
in
insb
loope
jae
stos
pop
push
jmp
call
imul
cld
ljmp
arpl
sub
fnstenv
insb
mov
fsubs
insb
into
dec
test
or
mov
andl
out
push
int3
and
es
jle
clc
or
adc
adc
pusha
inc
push
add
and
rorb
xor
les
cmp
mov
sbbl
dec
jl
add
faddl
inc
lods
insl
dec
insb
mov
or
scas
pusha
insb
xchg
mov
or
insb
fistpl
or
shl
movb
push
mov
inc
cmp
pop
push
iret
pop
leave
or
mov
xor
hlt
cld
insb
dec
add
jno
ja
andb
rol
shll
inc
outsb
push
ficomps
pop
push
dec
sub
push
je
or
sarb
addr16
mov
pushf
adc
jmp
mov
nop
sub
outsb
test
scas
dec
lahf
addr16
repz
xchg
movsl
sub
sub
or
popfw
push
xor
imull
xchg
out
cli
jb
insb
leave
inc
test
jl
pop
jno
outsl
cmp
ret
cmpsb
push
ljmp
dec
out
in
insb
xchg
mov
movsb
cmc
sub
and
insb
xor
adc
insb
mov
and
insb
xchg
in
jns
sub
sbbl
and
push
cmp
orl
push
inc
mov
stc
jnp
xchg
in
and
cmp
mov
shrl
leave
mulb
js
insb
movb
lods
sbb
mov
fidivl
imul
cmp
push
mov
enter
imul
xchg
je
mov
insb
icebp
inc
cmp
pop
pop
or
sbb
mov
insb
aaa
xchg
insl
enter
sbb
cld
jmp
mov
ja
cmp
ljmp
xchg
and
sub
bnd
sub
imul
sahf
mov
lcall
mov
shr
xchg
insb
lock
mov
ljmp
adc
insb
icebp
fs
lds
imul
mov
and
insb
mov
mov
shlb
das
and
insb
imul
cmp
and
in
popa
pusha
lret
jbe
adc
es
dec
add
jno
sub
movsb
loop
dec
cs
fwait
in
lock
lods
insb
pop
repnz
sbb
outsb
mov
daa
fmuls
inc
inc
xor
imul
mov
insb
xchg
repz
int3
arpl
insb
mov
xor
push
cmp
addr16
sbb
imul
gs
push
mov
subb
mov
cld
fdivr
pop
test
outsl
rcrb
enter
mov
lcall
cmp
aad
pop
ljmp
arpl
shlb
pop
jo
jle
test
punpcklwd
and
cli
jmp
mov
inc
fdivs
insb
add
mov
ljmp
cmp
jle
fiadds
scas
cmp
inc
xor
in
mov
dec
rcrb
sub
stos
js
push
and
daa
pushf
int
bound
imul
lret
lods
shlb
insb
or
fucomi
icebp
adc
pop
push
cmp
push
shr
or
popf
fisubrs
adc
ror
lahf
test
ja
or
int3
push
or
mov
push
gs
pop
js
pop
and
jae
sub
mov
nop
shrl
jl
xor
cmp
dec
xchg
or
add
add
sbb
test
sbb
aam
stos
imul
iret
mov
inc
out
adcb
pop
imul
faddl
xor
cmp
movsl
addb
mov
mov
outsb
insb
xor
insb
pushf
nop
adc
pop
cld
jmp
mov
insb
dec
in
add
int
insb
xor
and
in
insb
imulb
xchg
cmc
xor
push
shufps
push
insb
clc
out
mov
or
insb
dec
inc
aaa
ret
imul
insb
mov
cltd
mov
insb
push
sub
or
insb
aaa
loope
mov
jp
enter
mov
fsts
inc
insb
mov
mov
ss
and
ja
push
xchg
pop
jne
loope
jmp
inc
insb
fwait
mov
outsb
insb
sub
pusha
rolb
ljmp
hlt
mov
xchg
xchg
test
add
fmull
or
sub
leave
fmul
insb
push
adc
mov
mov
sbb
fiaddl
sbb
add
or
into
mov
int
mov
insb
xchg
sbb
out
test
sub
mov
cmp
xchg
rcrb
xchg
je
dec
dec
and
cmpsl
push
in
lods
lock
decb
sbb
leave
js
xor
scas
ds
fdivl
scas
push
pop
in
pop
lahf
sub
lcall
xor
mov
push
bnd
inc
les
mov
cmc
repz
inc
pusha
insb
fwait
jl
rorl
leave
insb
mov
mov
insb
cwtl
push
xchg
adc
retw
rcll
xor
mov
cld
mov
jne
insb
or
mov
in
xor
test
test
in
cmp
mov
sahf
xchg
mov
lods
insb
cmpsl
dec
ficoms
cmp
fcoms
insb
fwait
and
imul
cmp
mov
pop
into
scas
dec
dec
pop
loop
in
cmp
and
pop
jmp
push
mov
pop
xchg
fldcw
mov
mov
jae
push
mov
xchg
mov
lcall
or
popa
cli
mov
mov
xchg
sub
jle
mov
inc
cmpsl
xor
pop
bswap
cmp
mov
insb
jg
push
ja
out
imul
push
cld
mov
dec
pusha
pop
dec
gs
dec
xor
daa
sbb
mov
js
insb
push
test
mov
jnp
insb
pop
and
and
inc
xor
pop
lods
xor
insb
or
repnz
mov
push
addr16
xchg
fldcw
dec
sar
bound
insb
lea
imul
std
scas
ret
cmp
repnz
pop
and
inc
pop
sub
insb
inc
js
inc
mov
test
sti
inc
mov
add
push
int3
arpl
mov
stos
adc
push
insb
xor
pusha
insb
push
je
dec
add
ds
and
or
inc
bound
pop
insb
fisubrs
popa
call
push
js
cmc
xlat
insb
push
cmpsb
sbb
fildl
negb
mov
imul
jmp
xchg
jp
inc
cs
enter
shr
add
xchg
lcall
insb
test
jbe
jecxz
jb
insb
pop
sbb
cmp
sbb
sub
pop
into
push
add
jge
push
cmp
fmull
pop
push
shll
hlt
mov
jle
pop
cld
addl
add
test
sbb
enter
imul
mov
lock
insb
dec
adc
jno
pop
xchg
insb
sbb
xor
imul
cmpsb
add
das
sti
mov
xchg
jno
push
in
ljmp
xor
mov
dec
cmp
push
sub
mov
xor
nop
insb
into
or
push
jmp
insb
pushw
in
mov
imul
push
hlt
pusha
mov
dec
pop
test
pushf
adc
inc
mov
insb
pop
jge
addr16
xchg
sbb
outsl
push
scas
imul
jae
clc
mov
fadd
insb
xchg
inc
shll
cs
mov
jno
mov
cmpsb
sbb
mov
test
xor
subl
adc
int3
push
je
mov
add
hlt
sahf
pop
adc
gs
int
sbb
in
test
and
stc
sbb
insb
sub
push
loope
fisttps
xchg
and
fcoml
jne
fwait
push
mov
ds
into
movl
insb
shlb
dec
and
mov
test
dec
in
inc
xchg
dec
pop
shlb
jne
pop
push
lds
sub
dec
lret
enter
push
repz
mov
rcl
fldcw
mov
mov
adc
mov
mov
cmp
aam
hlt
mov
xchg
leave
sbb
int3
mov
cld
fs
add
insb
das
mov
jp
pop
push
push
jo
sub
pop
test
cs
insb
adc
pop
js
dec
and
sub
xor
jge
imul
xor
sbb
jmp
dec
push
mov
in
sarl
jg
push
xor
pop
lea
dec
imul
sub
frstor
gs
aaa
int
mov
outsl
xchg
xor
pop
or
adc
stos
aad
insb
ss
pop
mov
and
fucom
rcrl
inc
or
add
dec
xorl
mov
jmp
lock
test
ret
cmp
clc
and
in
push
je
push
int3
ret
inc
lret
insb
imul
insb
sbb
outsb
lea
daa
clc
insb
int3
pop
cmp
pushl
xchg
sbb
insb
xchg
sbb
xor
popa
fwait
insb
cld
lret
inc
outsl
pop
pop
jae
arpl
sub
in
addb
cli
jbe
pop
jge
ret
fadd
mov
push
movsb
mov
xchg
insl
add
out
test
cmc
jp
pushf
mov
bound
test
imul
mov
in
push
lahf
sbb
insb
xchg
inc
and
imul
popa
iret
inc
mov
add
push
insl
cmp
pop
mov
jno
pop
mov
mov
test
int
fwait
cmp
dec
dec
imul
insb
pushf
pop
scas
pop
negb
imul
dec
lret
sti
cld
enter
adc
scas
ja
out
insb
loopne
rcrl
or
retw
mov
xor
xchg
and
leave
imul
jno
cltd
cli
jb
and
pop
jp
inc
mov
stos
pop
daa
pushf
arpl
repnz
das
in
adc
xor
insb
add
lods
sbb
xor
xchg
outsl
mov
insb
sahf
inc
addr16
loopne,pt
cmp
or
and
push
pushf
shll
xor
cli
addr16
xchg
scas
pop
lods
out
mov
insb
jl
cmp
rcrl
jp
xor
jle
sbb
and
in
mov
icebp
in
sbb
and
cmc
ret
mov
insb
js
stos
or
mov
fmul
call
sahf
rorl
jb
dec
scas
jg
insb
sarb
jo
loope
push
insb
movups
out
sub
push
jnp
jne
pop
insb
lahf
pop
cmp
lods
xchg
popa
xlat
loop
mov
inc
sub
fcoms
int3
xchg
test
repz
or
push
sub
jg
sub
insb
lcall
fsubrl
sub
sbb
aas
mov
jp
lods
scas
filds
mov
loope
jp
cmpsl
pop
sub
dec
and
mov
jge
xchg
in
scas
sbb
lcall
lods
sub
aad
sarl
dec
pop
cltd
adc
fldcw
fcmove
sbb
pop
pop
sbb
xchg
and
ja
gs
mov
insb
arpl
mov
and
iret
arpl
ffreep
pop
fisubrl
int
mov
cmp
or
push
jg
je
push
sub
push
ss
fsts
push
shrl
mov
in
mov
cmpsl
sub
pop
loope
jae
or
insb
ss
pop
xchg
push
mov
xor
gs
fsubl
daa
push
in
pop
mov
dec
or
jmp
jne
push
mov
fsubrl
push
inc
push
bound
jbe
scas
sbb
dec
inc
inc
aaa
mov
pop
xor
outsl
sub
int
imul
leave
mov
lret
in
xorl
out
sbb
pop
dec
jbe
stc
pop
sbb
dec
sub
xchg
or
jecxz
insb
ja
cmp
neg
movsl
ficompl
adc
inc
lahf
mov
lret
cltd
pushf
mov
xchg
sub
call
jo
xchg
insb
jb
clc
mov
inc
lds
test
repz
insb
xchg
dec
cli
mov
mov
incl
jb
call
arpl
add
mov
or
push
jle
dec
sub
sbb
jae
lret
lods
sub
sbb
mov
call
movsb
ds
dec
mov
cmpsb
stc
insb
shlb
mov
or
lods
mov
insb
fs
cltd
lods
das
in
iret
dec
xor
push
es
cmp
mov
mov
xor
add
scas
mov
insb
cmp
xor
mov
xor
fimuls
and
mov
jbe
ficompl
xchg
pop
cld
xor
adc
insb
frstor
subl
bound
mov
ja
cwtl
inc
leave
mov
test
arpl
and
mov
push
xchg
in
outsb
sub
mov
sub
fldenv
je
add
ficoml
scas
jne
rcrb
pop
mov
aaa
jnp
insb
leave
jecxz
xor
adc
je
ss
add
in
sbb
sub
inc
ds
loope
je
dec
insb
cli
add
cld
add
jne
push
adc
jmp
test
rorl
clc
subb
push
lahf
inc
data16
sub
mov
imul
inc
push
xor
leave
in
lods
icebp
pop
jge
ljmp
mov
mov
test
cli
adc
or
es
lock
jne
pusha
fxtract
inc
mov
stos
mov
cmp
pop
dec
cmpsl
adc
in
push
stos
pop
dec
insb
out
jo
adc
xchg
insb
xchg
mov
jg
mov
outsb
pushf
push
xchg
data16
lods
loope
stos
cmp
xor
or
push
cwtl
push
fs
clc
mov
push
rorl
js
xor
jg
add
push
popa
clc
and
pop
in
jecxz
cmp
stos
xchg
sahf
lahf
insb
xor
out
imull
movsl
xor
dec
lock
and
ret
les
jnp,pt
cmp
imull
insl
or
jge
jno
push
sahf
lods
lret
or
add
mov
jbe
add
push
insl
mov
mov
sti
cmp
jmp
in
lods
bound
jmpw
jo
push
gs
cld
cmp
jnp
mov
pop
mov
jne
inc
cmp
sti
jmp
pop
pop
stos
cli
adc
pop
xor
or
iret
mov
inc
imul
xchg
out
sahf
movsb
mov
insb
push
pop
mov
jbe
stc
je
insb
pop
cmpsl
xor
jg
lea
xchg
dec
lret
insb
xlat
cmp
add
pop
out
insb
int
sub
addr16
out
lret
popf
insb
jno
in
out
scas
inc
inc
mov
arpl
push
xchg
xor
and
pop
cmp
or
aam
nop
jmp
popa
dec
xor
test
push
pop
or
mov
insb
mov
fs
xchg
push
repnz
dec
orl
pop
sbb
insb
sbb
sahf
andb
es
cmp
ret
insb
stc
icebp
aas
pop
dec
insb
stos
and
out
jl
je
and
mov
mul
push
hlt
inc
test
int3
sbb
insb
sti
nop
outsl
mov
push
loope
les
in
mov
scas
into
js
mov
xchg
test
ret
mov
gs
sub
or
mov
add
jnp
testl
push
ds
nop
jae
fldcw
sub
aaa
cltd
mov
pushf
adc
jmp
icebp
insb
pop
xor
xor
xchg
popf
pop
insb
push
scas
stc
xor
in
mov
cmpsb
mov
call
gs
insb
dec
ficompl
int
sub
xor
ret
inc
hlt
xchg
mov
les
push
mov
push
popa
cmp
pop
insb
flds
and
movsb
mov
dec
fs
inc
jbe
xor
jnp
cmp
xor
cmpsb
fsubrl
xchg
bound
popa
imull
inc
icebp
push
jo
jns
mov
cld
mov
xor
jb
sub
cmovae
out
ja
push
jl
or
sub
mov
aam
or
jp
adc
leave
mov
insb
sub
lahf
mov
js
rcr
test
cmpsl
fildl
scas
inc
pop
dec
in
mov
js
or
jno
sahf
and
pop
xor
aad
jg
test
add
test
push
xchg
leave
adc
mov
mov
xlat
and
mov
in
push
dec
inc
mov
push
pop
pop
out
mov
pop
xchg
pop
in
cwtl
stos
ret
insb
jns
inc
movsl
push
jae
mov
test
pop
test
imul
mov
add
shl
pusha
faddl
popa
shrl
pop
mov
fidivs
in
jb
imul
aas
ljmp
stc
mov
jl
mov
mov
scas
jb
mov
jle
iret
cwtl
xor
fidivs
or
fsubr
xchg
ror
and
lods
hlt
stos
sbb
sar
mov
lea
mov
xor
pop
lret
incl
sbb
push
insb
mov
imul
daa
sub
dec
outsl
cli
and
jno
mov
dec
cmp
mov
popf
gs
mov
mov
insb
push
xchg
cmpsl
fldt
ret
sub
inc
cli
in
pop
jg
pop
hlt
pusha
js
fdivrl
test
dec
jbe
cmp
add
xor
cmpsl
jle
lret
pop
rorl
and
xlat
pop
gs
enter
sbbl
insb
imul
in
ror
mov
arpl
adc
insb
push
imul
push
pushf
jmp
ljmp
cmp
mov
push
and
jg
ljmp
insb
test
outsl
lods
arpl
gs
aad
push
mov
gs
push
dec
sbb
push
data16
jno
and
mov
mov
mov
daa
sub
adc
mov
insb
mov
insb
xor
repz
jg
jp
insb
mov
jmp
cmp
cmpsl
xchg
loop
jno
add
lock
dec
add
lret
adc
ror
dec
fsts
aam
mov
lahf
xor
xor
sub
or
insb
adc
xchg
jo
xchg
addb
push
push
lods
outsb
cwtl
lods
inc
ret
popa
insb
repz
mov
cs
and
mov
fisubrs
mov
adc
mov
sbb
adc
cmp
daa
xor
mov
jnp
xchg
insb
adc
je
sbb
pop
cwtl
xor
cmp
xchg
in
clc
push
pushl
dec
arpl
cwtl
jb
adc
out
mov
imul
hlt
in
mov
pop
mov
lock
inc
xor
push
pop
ja
and
sub
inc
lds
insb
pop
mov
jmp
push
mov
subb
xor
test
xor
stc
adc
dec
test
sub
outsl
jae
mov
sub
fsubrs
ljmp
push
pop
jb
insb
jecxz
xor
data16
js
cwtl
bound
jle
insb
leave
push
mov
rcrb
push
gs
in
cmpb
sti
icebp
insb
ss
cltd
add
mov
mov
dec
ret
insb
push
int
xor
mov
pop
aam
rolb
rcrl
add
insb
call
or
and
inc
stos
insb
aas
mov
jmp
and
cmp
mov
push
repz
jp
mov
cmp
stos
lahf
in
mov
cltd
sar
fwait
out
xchg
insb
dec
popa
cmp
insb
insl
push
enter
fcomps
and
in
es
cli
xchg
fucomip
or
jecxz
mov
ljmp
imul
xor
jg
sub
les
pop
and
pop
insb
loope
dec
rcrl
rcll
imull
pop
orl
mov
mov
sbb
adc
addr16
sub
fwait
ret
and
mov
arpl
cmp
dec
shl
insb
aaa
mulb
xchg
imul
je
andl
mov
jno
fcompl
mov
jp
insb
adc
loopne
insb
xor
bound
fcom
pop
jl
das
cmp
in
ficoms
xor
sub
xor
xchg
push
insb
add
sbb
jg
in
aaa
cmc
lods
cltd
cmpsb
cld
fldcw
nop
pop
test
dec
lea
stos
and
sub
inc
in
mov
sarl
shr
push
dec
cs
sub
xchg
cmc
insb
sbb
lds
insb
xor
jp
add
mov
imul
bound
add
pushf
out
push
cmp
fisttpl
sub
sub
mov
js
jp
test
jne
out
xor
pop
xor
xor
mov
into
add
pusha
jbe
xor
jo
imul
xchg
push
mov
and
inc
imull
cli
push
pusha
pop
inc
scas
insb
mov
decb
ret
jb
mov
addr16
or
int
cmp
mov
jno
sahf
adc
insb
es
test
icebp
adc
jecxz,pt
je
loopne
out
aas
adcl
cmp
std
lods
add
dec
nop
and
sub
mov
insb
jle
nop
lods
xor
ficoms
insb
sbb
add
or
xor
sbb
mov
fcom
movsb
insb
jmp
push
inc
push
sub
or
fstpt
insb
outsl
je
xchg
push
mov
shl
sub
test
daa
cmp
push
jle
inc
jns
insb
lods
jnp,pt
stos
cmc
add
insb
roll
lret
mov
push
adc
or
popf
gs
adc
fstl
cmp
and
rcll
sti
sbb
push
xchg
dec
fs
lods
pusha
push
cmp
insb
adc
lds
shll
lcall
lock
repnz
ret
xchg
sbb
repz
inc
out
jae
sbb
in
adc
jns
jmp
pop
jle
sbb
fwait
ds
mov
sarl
flds
mov
jecxz
push
fwait
jo
adc
inc
bound
adc
addr16
call
lock
xchg
daa
lods
jecxz
mov
push
mov
push
insb
sub
cmp
cmp
outsl
and
jae
fldenv
in
insb
test
cli
push
insb
stos
or
mov
jno
mov
xchg
in
ss
je
insb
mov
add
pop
fcompl
xlat
sub
test
or
cmp
pop
ret
inc
popa
sahf
movsb
int
dec
jbe
jb
pop
insl
in
test
push
sub
cmp
adc
sub
ja
pop
stc
cwtl
lcall
fistpl
cld
test
aas
pop
or
insb
jecxz
dec
dec
push
cmp
sbb
rolb
fcmovbe
lods
xlat
incl
add
fsubrs
insb
mov
inc
and
insb
mov
inc
stos
cmpsl
push
lds
test
jge
dec
xchg
cli
sub
sbb
stc
fsubrs
sahf
or
inc
sti
push
xchg
scas
jle
xchg
repnz
ficomps
push
pop
xorl
lret
mov
loop
std
and
push
insb
out
lock
in
jnp
or
or
scas
leave
xchg
push
xor
lods
out
lahf
or
into
push
gs
orl
cmp
testb
fldcw
cmp
fcmovne
insb
mov
cwtl
jnp
xor
lods
push
lret
xor
aas
lcall
push
inc
mov
pushf
and
imul
inc
orb
and
mov
sub
in
mov
cmpl
loop
sub
inc
cwtl
insb
pop
cmpsb
ret
push
or
in
push
pop
pop
sub
repz
aam
dec
xor
dec
sub
in
xchg
mov
mov
std
test
test
xchg
ljmp
xor
pop
or
dec
xor
inc
pop
in
or
es
movb
inc
imul
rol
or
cmpsl
sarb
insb
add
adc
clc
filds
insb
xor
mov
aas
ret
pushf
xchg
xchg
pop
mov
lods
push
and
sbb
xor
js
out
and
add
add
rcl
insb
xor
or
mov
shrb
pop
movb
test
and
dec
dec
aaa
fucomip
outsb
dec
test
push
pushf
jg
lods
lret
insb
sbb
add
mov
sub
ds
das
push
adc
jmp
cs
mov
insb
mov
scas
pushf
stos
aam
dec
arpl
add
add
dec
push
xor
dec
jle
arpl
and
test
adc
push
out
js
insb
daa
adc
jl
mov
insb
icebp
sbb
sub
insb
jp
scas
mov
xor
xor
insb
scas
cmp
adc
push
jge
cmc
test
int
sub
stos
ret
adc
clc
gs
xor
fsubl
jmp
addb
add
ss
jns
sub
sub
dec
inc
jb
mov
movsl
int3
or
sub
in
insb
sbb
scas
out
cmp
sub
cmpl
jl
clc
pop
in
hlt
imul
bound
jns
push
test
adc
push
in
testb
xchg
lds
xlat
xor
sbb
hlt
add
shrl
out
sub
dec
arpl
lds
ja
loop
dec
popa
in
sub
cmp
mov
insb
insl
jl
xchg
repz
insb
xchg
and
xchg
ja
and
jge
mov
insb
leave
xor
mov
imul
popa
clc
lock
rcr
icebp
inc
dec
or
push
pop
test
sarb
adc
cwtl
insb
dec
adc
js
jb
pop
dec
mov
push
test
xor
call
lock
mov
lcall
inc
insb
inc
push
sub
pop
gs
adc
and
push
push
addr16
insb
and
insb
je
int3
femms
jnp
stos
imul
imul
mov
insb
or
fldcw
insb
arpl
or
sahf
ss
jp
push
aad
sbb
lods
shll
sub
mov
into
inc
mov
gs
dec
jl
insb
rorl
push
notb
test
push
dec
sbb
jno
mov
push
insb
subl
loop
or
loopne
iret
bndstx
shrb
inc
divb
je
jnp
add
pusha
mov
xchg
or
xchg
jo
cmp
insb
mov
adc
xor
insb
add
out
movsb
pusha
insb
jo
and
xchg
adc
std
cmp
insb
lods
sbb
jge
pop
push
mov
stos
pop
in
cmp
cltd
data16
push
lea
sbbb
cwtl
sbb
cmp
lret
cmp
aam
insb
xchg
cmp
xchg
jmp
mov
push
mov
xor
adc
insb
dec
jmp
out
dec
enter
fistps
leave
movsb
jp
sbb
or
out
sub
jne
jecxz
push
loop
and
inc
dec
cwtl
imul
fcompl
int
push
insb
push
stos
inc
mov
and
in
add
inc
dec
insb
jo
and
mov
push
fwait
inc
xchg
insb
mov
cld
imul
xor
into
mov
pushf
fildll
xor
lcall
jl
nop
in
sbb
cmp
rcrb
dec
push
push
sub
xchg
pop
jo
inc
sbb
sub
sub
adc
pop
movsl
sbb
xchg
outsb
dec
inc
insb
fcompl
lcall
cmpsb
ret
int3
lods
mull
std
insb
mov
xchg
fstpl
lods
loope
fadd
ljmp
jb
cmp
dec
lea
orb
mov
cmc
in
addr16
inc
jg
dec
cltd
pop
mov
and
xchg
repz
sahf
mov
gs
movsl
cmp
clc
xlat
xchg
dec
jmp
mov
scas
sbb
leave
ja
dec
mov
movsl
xchg
in
test
sbb
dec
mov
pop
pop
int3
rcll
movsl
mov
cmp
pop
outsl
dec
pop
imul
push
shlb
lods
cmp
inc
mov
addr16
inc
int
in
mov
and
cmp
jno
sub
mov
pop
jg
aad
insb
push
inc
xchg
push
jo
xor
add
out
cltd
sti
dec
insb
add
xchg
xor
aam
gs
es
pop
icebp
aas
xchg
mov
nop
movsb
hlt
add
movsl
adc
inc
add
dec
insb
push
out
jbe
rcrb
clc
mov
sbb
movsl
aam
les
dec
es
mov
aas
add
dec
arpl
pop
sbb
cwtl
dec
jl
ljmp
and
clc
scas
test
and
jmp
movsl
lock
mov
jle
scas
add
dec
xchg
or
insb
jecxz
mov
inc
or
jo
dec
stos
in
js
cli
es
aaa
pop
sbb
mov
pop
adc
or
insb
jg
push
mov
cmpsb
pop
mov
xchg
add
and
mov
pop
jecxz
nop
shrl
pushf
mov
cli
imul
jmp
cwtl
fabs
push
gs
repz
add
enter
jl
sti
stos
jp
sub
or
hlt
xor
dec
bnd
sub
in
les
imul
jecxz
gs
dec
cltd
cmp
jp
pop
add
pushf
imul
xchg
push
sub
daa
hlt
faddl
mov
jmp
add
inc
ds
fisubs
lret
pop
inc
aad
push
xchg
sbb
adc
sub
xchg
dec
punpckhbw
insb
cmp
cmp
popa
mov
call
stos
cmp
lahf
div
xorl
adc
icebp
insb
aam
inc
mov
mov
inc
adc
negl
dec
out
lds
cmp
repnz
sbb
xchg
inc
sbb
sub
cmp
jmp
mov
cmc
imul
mov
stc
ljmp
scas
popa
xor
xchg
out
into
mov
insb
dec
add
mov
out
add
cmp
lret
and
scas
sub
push
ret
xchg
inc
lcall
sub
loopne
dec
jl
in
icebp
push
mov
jge
insb
imul
sub
adc
out
insb
popf
jbe
lahf
sub
outsl
cwtl
dec
sub
adc
push
in
int3
in
mov
lret
pop
out
loopne
jns
jbe
xchg
lret
pop
push
pop
aas
sbb
mov
sub
imulb
xor
push
insb
xor
je
pop
and
icebp
ret
inc
fisttps
push
jmp
in
fwait
jp
add
or
ficoms
cmp
cmp
cltd
insb
adc
jae
inc
repz
stos
insb
sub
pushf
shrb
shll
orl
mov
xor
xchg
lcall
popf
mov
sbb
lcall
jl
repz
insb
sarl
mov
mov
es
push
aas
and
orl
pop
push
popf
sub
lahf
pop
sub
xor
int
jne
es
mov
nop
xchg
and
add
push
scas
imul
adc
sti
out
sbb
dec
out
mov
mov
sub
stos
jns
fnop
shrl
repz
data16
into
insb
div
add
mov
stos
pop
dec
test
push
cltd
pop
out
cli
insb
mov
jo
das
js
daa
popa
out
cmp
cwtl
pusha
xor
pop
mov
lds
pop
push
and
jns
gs
cmp
cli
xchg
aas
test
insb
andb
test
add
es
xor
mov
push
or
mov
call
loopne
insb
lods
xchg
movsl
add
push
mov
shrl
neg
insb
xor
fistpl
insb
movb
pop
pop
pop
and
pop
in
jecxz
mov
jp
fstps
movsb
imul
into
andl
jo
dec
aam
xor
sbb
xchg
or
adc
inc
loop
imul
scas
imul
xchg
adc
sbb
arpl
push
xchg
out
out
insb
xchg
xor
lea
cmp
add
push
mov
sbb
fiadds
add
or
insl
and
das
insb
enter
mov
test
lds
xor
imul
mov
rclb
adc
inc
xor
test
and
call
xor
adc
add
movsl
pop
xchg
pop
into
dec
arpl
mov
test
cltd
in
into
addr16
scas
mov
jmp
pop
add
fdiv
pop
insb
cli
mov
ja
dec
cmp
sub
es
insb
mov
cmp
mov
inc
push
cmc
jmp
and
movsl
mov
ja
arpl
das
lock
data16
call
xchg
and
sarl
jbe
mov
and
dec
lea
pop
out
dec
aaa
mov
stos
aam
iret
rcrb
out
shl
inc
daa
out
repnz
fs
cwtl
movsl
insb
or
inc
out
sub
insb
jbe
scas
mov
pop
std
jp
cwtd
push
mov
mov
xor
pop
dec
insb
in
aad
pusha
loopne
cmp
insb
mov
test
push
dec
movsb
aad
daa
push
jo
lods
ja
ret
std
imul
cmpsb
fsubrl
pop
push
sbb
insb
imull
scas
cli
imul
mov
add
sub
lcall
insb
repz
insb
cmp
pop
test
scas
pop
sub
insb
jmp
xlat
into
pop
insb
stc
call
jae
insb
cmp
in
shrl
gs
mov
jb
mov
add
insb
xchg
shr
add
cli
gs
mov
insb
sbb
jl
aam
push
jae
dec
sbb
insb
push
add
insl
test
pop
lock
jb
pop
ret
adc
push
insb
stc
int
lea
cmpsl
push
roll
push
cmp
dec
mov
inc
cli
sub
mov
inc
lock
cmp
xor
js
xor
xor
pcmpgtw
xor
adc
cmp
aad
jb
cmc
repnz
stos
fidivrs
and
popa
aaa
jmp
popf
dec
pop
pop
adc
out
inc
scas
dec
sub
jbe
insb
cli
add
adc
dec
out
outsb
les
sbb
dec
pop
test
andb
adc
cmp
push
cs
loopne
mov
cmp
insb
sbbb
popf
aaa
or
jmp
sbb
pop
adc
push
cmpsl
xor
mov
inc
dec
stos
pop
adc
cmc
sbb
dec
arpl
test
js
fnstsw
push
add
insb
mov
inc
mov
repnz
in
aas
pop
test
insb
jbe
pop
fisubrl
roll
sub
cmp
jl
emms
or
mov
and
xchg
insb
scas
out
sbb
and
scas
add
cli
cmp
mov
push
or
rclb
insb
sbb
repnz
lods
dec
lods
jmp
add
arpl
clc
aam
enter
dec
mov
insb
sub
pop
or
mov
insb
ret
ficoml
pop
shll
addr16
int3
adc
les
mov
cmp
loopne
jge
clc
gs
inc
push
and
arpl
pop
jo
insb
fcompl
push
mov
xchg
lahf
adc
insb
lcall
icebp
or
adc
mov
bound
mov
pop
insb
in
lock
icebp
insb
pushf
mov
mov
fdivp
repnz
in
shlb
mov
pop
xchg
mov
popa
outsl
call
push
out
mov
sub
push
out
mov
cmp
repnz
mov
sbb
cmp
mov
insb
subb
xchg
popf
fists
stc
push
scas
push
push
mov
imul
std
mov
pop
je
aad
enter
mov
shrb
pop
insb
mov
imul
dec
shlb
int
subb
xchg
xor
push
add
shrb
mov
shlb
xor
fs
or
dec
daa
push
imul
cmp
fstps
aaa
mov
insb
mov
jne
clc
repz
cmc
outsl
je
js
insb
and
call
mov
add
iret
lods
xor
jmp
loop
shl
add
pusha
imul
xor
in
cmpsb
in
jae
xchg
xchg
pop
mov
test
outsl
pusha
gs
stos
inc
push
dec
or
mov
cmp
jb
mov
hlt
jo
ja
test
and
add
insb
and
fdiv
mov
in
mov
xor
sahf
cmp
sarl
rclb
inc
aaa
insb
scas
std
pop
dec
adc
lahf
iret
rcrb
stos
dec
mov
and
fistps
das
sbbl
mov
xchg
inc
setge
adc
or
xor
adc
sbb
loope
inc
cmc
and
dec
hlt
scas
pop
push
add
pop
fiadds
mov
mov
insb
xchg
xchg
inc
adc
insb
xchg
add
sti
pop
insl
xor
adc
into
push
sbb
fisttps
shrl
sub
insb
xor
movsb
push
pop
popa
movsl
scas
mov
mov
cmc
mov
jmp
pop
cmp
test
cltd
mov
pop
xchg
ljmp
gs
mov
mov
arpl
dec
adc
adc
es
insb
aas
ja
push
add
test
outsl
xchg
sub
mov
inc
mov
aad
test
dec
popf
arpl
mov
in
adc
push
xchg
mov
lahf
lock
out
out
mov
push
xor
inc
cwtl
js
loop
xchg
sub
and
lret
or
dec
popf
out
leave
insb
xor
cmp
rol
daa
or
dec
sub
lods
lods
ja
dec
cmp
push
jp
push
daa
jecxz
inc
push
sbb
lods
or
mov
mov
test
push
cmp
popa
insb
mov
adc
sahf
insb
mov
mov
es
out
sub
push
mov
or
int3
push
jge
inc
in
lea
insb
pop
cld
js
test
or
mov
xchg
jb
push
pop
insb
addr16
mov
adc
sub
dec
out
out
gs
mov
outsl
out
sub
testl
and
lods
shll
inc
inc
repnz
insb
dec
stos
idivl
insb
cltd
xchg
out
xor
cmp
xchg
imul
insl
repnz
insb
in
sahf
inc
pop
cmp
pop
inc
mov
adc
stc
ret
insb
dec
sti
ss
inc
aad
imul
jge
pop
mov
fisttpl
addb
push
movsb
imul
jle
pop
and
insb
nop
dec
pop
fwait
push
jl
insb
pop
pop
dec
sub
call
loope
divb
mov
pop
out
cmp
push
scas
aad
insb
test
jnp
int3
xor
xor
mov
sub
sub
mov
iret
pushf
mov
dec
add
lods
jmp
cmp
test
inc
insb
dec
and
dec
dec
xchg
punpckhwd
lea
ss
icebp
cmp
add
int3
pop
push
push
repz
cmp
jle
fwait
and
xor
cmp
jg
insb
nop
lahf
sbb
sbb
arpl
gs
cmp
and
jns
insb
mov
inc
pop
sub
pusha
fwait
sbb
and
or
jnp
and
fwait
insb
add
jge
outsb
fdivp
out
insb
outsl
pop
cmpl
push
jb
pop
inc
aad
xchg
sub
pop
sahf
mov
xchg
xor
mov
int
insl
je
and
test
cs
inc
imul
nop
in
loopne
jbe
insb
push
pop
or
std
pop
insb
inc
pop
ss
call
jmp
insb
jno
les
mov
and
sub
add
insb
lcall
sub
fst
mov
push
and
xor
inc
shlb
out
sub
inc
insb
out
dec
aam
and
movsl
enter
into
jmp
filds
loop
insb
test
leave
dec
into
outsb
mov
cmp
pop
insb
add
mov
imul
out
imul
xlat
insb
mov
fwait
jne
insb
push
mov
sbb
lret
insb
mov
enter
jl
xchg
stos
pop
insb
in
lods
hlt
jmp
lea
aad
mov
xchg
pop
inc
mov
push
arpl
int
xlat
aad
and
popf
cli
push
clc
mov
sti
mov
repz
lock
mov
xor
mov
xchg
sub
enter
push
xchg
insb
es
pop
pop
push
jp
inc
cmpsl
out
stos
insb
mov
jns
pop
lcall
dec
xor
adc
or
add
je
das
test
push
insb
mov
inc
push
inc
fdivrs
xchg
out
mov
enter
mov
popf
and
popa
adc
icebp
ret
mov
or
aad
mov
add
imul
sbb
mov
mov
or
mov
add
mov
sub
push
and
pop
and
or
add
mov
insb
cli
cs
loop
test
aaa
jg
xchg
insb
lods
sahf
leave
popa
push
xchg
cmp
cld
sub
imul
inc
insb
xlat
lods
inc
push
dec
mov
into
cld
and
adc
push
das
jmp
aam
dec
pop
data16
mov
sub
add
mov
xchg
arpl
insb
cmpsb
mov
lds
sub
mov
push
pop
dec
adc
jmp
icebp
mov
xchg
push
insb
scas
jp
mov
imul
sbb
shrb
aam
pop
std
loope
outsb
inc
scas
jmp
repnz
push
scas
gs
pop
cmp
lret
mov
push
gs
out
orl
test
jno
jp
inc
mov
ja
or
sbb
mov
push
in
xor
ss
push
aaa
xchg
xor
pushf
loop
mov
cmp
ja
fmul
xchg
ja
movsl
push
subl
inc
push
or
sbb
scas
ljmp
jb
outsb
in
sahf
inc
jecxz
sbbl
arpl
je
adc
insb
ficomps
lods
cmp
pop
push
jecxz
jg
cld
cld
jge
sbb
or
pop
int3
add
repz
inc
or
sub
movsl
ja
mov
xchg
aaa
xorb
pop
sbb
xchg
scas
sbb
mov
int3
call
ja
xor
mov
pushf
mov
fs
push
jno
scas
lods
pop
cmp
stos
cld
pop
gs
push
xor
push
shlb
jge
and
in
xorl
es
jns
mov
lods
push
ret
push
mov
jmp
sahf
aam
cmp
xchg
xor
leave
lahf
xchg
xchg
xchg
out
insb
mov
or
sub
add
in
ds
imulb
xor
orb
sar
in
insb
fists
popf
sub
mov
mov
pop
out
iret
repz
xchg
add
repnz
ficoms
inc
imul
cwtl
je
xchg
imul
xchg
addr16
mov
dec
add
mov
and
cmpsb
or
jg
insb
jl
lods
add
sbb
in
insb
rcrb
push
insb
negl
jmp
shll
push
mov
fidivs
adcl
mov
outsl
sbb
pop
fisubrs
mov
pmaddwd
ds
cmp
arpl
insb
cmp
pop
mov
insb
adc
outsb
les
icebp
in
loope
stos
imul
lea
xor
leave
push
movl
test
js
adc
pop
insb
xlat
sbb
mov
imulb
sbbb
xor
jbe
insb
xchg
cmp
dec
sarb
and
or
jns
ljmp
insb
mov
fninit
sahf
and
insb
ja
in
add
cld
xlat
cmpsb
inc
mov
add
aaa
jns
xchg
sbb
fnstenv
test
add
xor
push
cmp
insl
mov
jns
gs
mov
sub
xor
inc
push
negl
es
cmp
cmp
aad
push
mov
adc
push
mov
arpl
in
imul
int3
push
rcrb
popa
fcmovne
cmpl
push
mov
cmpsl
push
push
fldt
dec
push
aam
cmp
cmp
jb
xchg
pop
inc
sbb
pop
out
fisubs
dec
xchg
in
pop
mov
imul
test
mov
cs
inc
add
insl
cmpb
aam
cmp
insb
addr16
xchg
daa
movsl
sub
out
loopne
je
insb
ss
aas
das
gs
xor
dec
or
sbb
adc
mov
insb
popf
ljmp
insb
sti
push
cli
mov
stc
mov
mov
or
insb
inc
mov
xchg
ja
jnp
fstps
fsubp
dec
sbb
adc
fwait
pop
cld
sub
ret
insb
shll
jbe
mov
push
test
imull
cmp
je
aam
push
pop
lret
fldt
add
mov
pusha
jnp
insb
std
rolb
cmp
mov
pop
mov
jbe
dec
fisttpll
rorb
movsb
inc
hlt
gs
popf
shlb
clc
stc
fsubr
insb
sahf
jge
cmp
insl
lock
mov
xor
lods
imul
jge
and
xchg
std
pop
push
pop
sbb
mov
ds
pop
imul
je
in
ljmp
fsub
cmc
pushf
cltd
sub
adc
jle
rclb
fdivs
das
cmp
in
aam
and
addr16
insb
push
sahf
int
into
sti
jl
insb
mov
push
sbb
ret
adc
insb
pushf
and
or
lcall
int
pop
mov
mov
incb
cmp
push
lcall
insb
inc
les
push
jne
sbb
pop
test
adc
jmp
or
cmc
push
addb
lea
mov
inc
push
cmpsb
insb
outsb
jle
les
jns
stos
in
js
jl
dec
pop
insb
sub
pop
xchg
imul
xor
mov
cld
call
pop
mov
dec
or
or
stos
inc
iret
push
imul
addr16
ds
jns
stos
mov
xchg
bound
dec
fstpt
loopne
push
push
add
insb
aaa
cmc
jg
aas
mov
inc
and
dec
test
aam
cld
loope
divl
cmp
ds
add
cmp
jns
popf
push
or
outsb
mov
inc
inc
push
js
insb
addr16
hlt
loop
repnz
insb
push
dec
fidivl
imul
jecxz
adc
scas
insb
bound
xor
cmpsl
jge
xlat
push
insb
scas
jp
out
es
push
push
pop
in
push
jns
clc
add
shll
incb
ds
dec
daa
mov
mov
jnp
mov
andl
out
inc
fmull
imul
xchg
les
insl
inc
mov
or
fisubrs
clc
aam
insb
sub
sbbb
push
test
insb
mov
cmp
jb
gs
mov
into
push
push
mov
sbb
or
sti
pop
pusha
lcall
ljmp
sahf
insb
push
and
and
xor
dec
add
fnstenv
fistl
and
insb
pop
pop
ss
mov
xchg
es
or
sbb
mov
pop
add
mov
ret
out
pop
insb
xchg
orl
das
xor
in
sarb
jb
mov
cmc
out
das
adc
in
push
movsl
or
in
inc
mov
pop
in
test
pop
test
cmp
popf
add
mov
ja
lea
add
insl
sub
je
arpl
dec
xor
mov
insb
fisubl
repz
lods
je
dec
lods
jns
sub
sub
push
xchg
mov
mov
int3
dec
cmpsl
inc
mov
jo
in
int
roll
clc
fsubrl
test
insb
sbb
fnstsw
push
sbb
add
mov
dec
jge
and
push
mov
mov
xchg
repnz
jle
fsubrs
mov
pop
gs
or
xchg
jecxz
sub
inc
mov
jb
popa
xor
jns
mov
daa
sahf
pop
jo
add
sbb
pop
stos
push
cltd
pop
imul
sarb
imul
jge
cmp
pop
cmp
lock
inc
jbe
dec
pushf
and
pop
fldt
pop
mov
test
and
fbstp
mov
js
lock
lcall
push
insb
jl
ljmp
sbb
ret
mov
dec
adc
int
outsl
rorb
adc
inc
pop
stc
lea
hlt
add
pop
int3
fcmovnb
ljmp
insb
pop
and
orl
int3
xor
pop
insb
adc
xor
in
nop
jl
outsb
in
mov
insb
out
pop
fisubs
insb
data16
rcrl
cmp
test
sbb
test
gs
cmp
test
cli
jl
push
inc
shll
shll
insb
dec
aad
or
lcall
jmp
repnz
add
adc
icebp
sub
pop
insb
imul
jae
orb
insb
sub
insb
sbb
mov
in
imul
aaa
adc
insb
inc
xor
sbb
loope
mov
pop
mov
clc
push
test
adc
dec
or
dec
neg
add
sarl
insb
push
sbb
push
xchg
fcoml
dec
loopne
cld
insb
cmp
lcall
icebp
into
push
insb
push
incl
push
xor
mov
xchg
ret
fisttpll
rcrb
inc
enter
jg
push
dec
mov
add
inc
mov
ljmp
nop
fcos
add
push
mov
int3
in
imul
lret
arpl
bound
fisubrs
orl
and
xor
jbe
insb
sbb
int
adcb
xor
insb
xchg
test
call
outsb
imull
test
sbbb
mov
mov
adc
in
jl
scas
mov
insb
dec
dec
lock
orl
push
dec
push
lret
insb
adc
insb
test
push
std
dec
jge
insb
inc
clc
nop
sub
adc
insb
test
xchg
add
sub
enter
popf
stc
adc
cmp
and
inc
loop
cwtl
out
cmp
sbb
insb
sbb
shrl
test
les
push
pop
out
xor
insb
addr16
js
jp
insb
mov
mov
stos
insb
jns
inc
xlat
outsl
je
insb
fdivl
adc
dec
jmp
cld
push
fcoms
loope
shll
inc
sub
jb
dec
cmp
jbe
mov
jmp
aaa
inc
fcomip
sbb
push
pinsrw
push
push
das
jp
lcall
ret
and
scas
test
adc
dec
fisubl
jo
pop
fldcw
ret
mov
cwtl
mov
imul
scas
xchg
adc
add
scas
adc
fmull
pop
jne
sarb
mov
push
ror
mov
in
sbb
clc
arpl
xor
cmp
adc
cmp
mov
sub
data16
in
sbb
rolb
jl
xchg
mov
jmp
or
push
jge
call
insb
xor
or
jecxz
loope
mov
jnp
inc
ds
outsl
sbb
dec
mov
inc
in
clc
dec
jg
inc
pop
imul
adc
nop
and
push
pop
mov
in
jns
xor
aad
dec
push
pop
gs
vaddps
cmp
cmpsb
and
das
mov
cmp
xor
shlb
push
sbb
lods
or
shll
cld
mov
sbb
lea
sub
push
jbe
pop
fwait
lods
js
insb
add
insl
jb
les
push
in
jns
add
sbb
fs
xchg
and
or
adc
imul
insb
rcll
movsl
fbld
pop
insl
xor
gs
mov
mov
xor
jg
loopne
mov
cmp
mov
xchg
mov
mov
cmp
jo
mov
insb
cld
stos
xorb
outsb
je
insb
mov
in
sbb
lahf
rcrb
popf
insb
iret
add
jne
leave
dec
pop
xlat
call
rclb
pop
add
xchg
int3
in
xchg
out
jp
and
jle
xchg
jl
inc
iret
inc
sbb
xor
push
pop
loope
shrl
aad
sbb
jl
jns
insb
ds
int
insb
xchg
mov
fmull
sub
mov
adc
add
dec
insb
repnz
ss
imul
arpl
cmp
ljmp
fwait
data16
jp
insb
adc
jns
lret
loop
inc
insb
imul
mov
int3
fidivrl
insb
adc
xchg
sbb
insb
mov
popf
in
int
xchg
or
cmp
dec
push
scas
add
js
mov
pop
leave
or
mov
clc
into
jns
repnz
dec
fstps
test
jl
insb
popa
adc
pop
mov
dec
or
pop
push
mov
sbb
insb
fcomi
sbbb
fimull
adc
addb
or
add
popf
mov
pop
clc
xchg
jge
mov
adc
dec
scas
push
add
pop
or
or
je
pop
mov
lods
cmpsb
leave
mov
insb
loop
jl
adc
xchg
imul
insb
rcll
mov
inc
sub
add
cmpsb
push
das
inc
pushf
cmc
imul
jne
xchg
int3
xchg
pop
jg
jns
mov
shrb
in
mov
mov
sar
dec
inc
inc
mov
shll
fsubrl
sbb
mov
insb
add
repz
mov
mov
insb
out
mov
sbb
cmpb
test
sub
mov
pop
pop
pushf
sub
sub
es
int3
push
test
fwait
jecxz
ret
lahf
insb
jl
pop
fs
push
mov
es
push
bnd
insb
out
cmp
push
insb
pushf
inc
push
std
leave
or
gs
and
add
lods
xor
xchg
hlt
aaa
arpl
push
leave
addr16
testl
xlat
jg
imul
sub
jl
pop
test
cltd
leave
jmp
and
push
fcomp
pushf
sahf
test
es
sbb
lea
addr16
and
or
insb
sub
sub
sbb
fdivrs
mov
xchg
mov
mov
movl
lods
sub
mov
std
insb
aam
sarb
xchg
push
cli
sub
scas
icebp
push
cmpsb
dec
ret
xchg
bnd
dec
scas
fidivrs
in
insb
shl
cmpsb
mov
gs
mov
mov
loopne
aad
adc
lods
fadd
les
mov
pusha
mov
pop
xor
ret
dec
inc
dec
pop
gs
push
adc
hlt
insb
enter
mov
gs
dec
ja
inc
outsb
cmp
cli
inc
sub
sbb
pop
pop
ljmp
ds
dec
repz
aad
inc
lods
xchg
push
cmp
xchg
insb
dec
movsl
pop
xchg
and
sub
mov
test
nop
test
insb
in
adc
popa
stc
js
jb
in
lods
and
aad
dec
jnp
loopne
jo
mov
mov
or
xor
sub
insb
lret
js
movsb
lods
jnp
insb
das
dec
out
mov
popa
mov
imul
in
or
push
mov
ss
inc
pop
mov
dec
loop
mov
xor
pop
jge
fwait
in
shrb
push
mov
stos
cmp
dec
sub
jnp
lods
insb
lret
push
inc
out
pop
in
mov
aam
jmp
test
or
mov
adc
inc
add
or
mov
add
in
std
cld
push
jge
xchg
insb
out
and
out
add
insb
fidivs
in
mov
mov
es
lock
jno
and
subl
mov
cwtl
jae
and
sub
insb
leave
push
add
mov
test
aaa
arpl
test
int
aaa
je
xor
lret
push
push
in
push
insb
jle
pop
pop
test
sub
loopne
clc
cs
aad
cmp
sahf
mov
cmpsl
or
add
stc
push
add
nop
xor
cmpsl
pop
mov
imul
sub
adc
push
mov
inc
pop
xchg
scas
insb
pop
jbe
in
icebp
mov
push
scas
ret
clc
in
inc
mov
icebp
das
aad
mov
addr16
shr
pop
xor
mov
icebp
out
aam
insb
dec
popa
inc
adc
in
test
insb
sarl
or
hlt
inc
dec
mov
jecxz
xlat
or
test
adc
xchg
sbb
sub
jge
in
and
and
cli
shrb
and
sarb
insb
imul
gs
xchg
sub
cli
jmp
add
aaa
mov
test
and
mov
and
insb
jge
and
xchg
popa
call
cmp
in
leave
sbb
cltd
insb
cmp
jns
mov
ret
lcall
pusha
notb
in
in
xor
fdivl
shr
pop
lret
push
imul
cmc
or
jmp
imul
mov
es
or
mov
sti
mov
jmp
cltd
jb
push
mov
jmp
push
popa
daa
insb
push
ret
adc
xor
dec
sarl
xchg
jne
imul
insb
sbb
inc
add
jp
cmp
or
mov
lods
mov
jl
fsubrl
imul
ds
and
dec
lea
jmp
xor
inc
inc
mov
jmp
js
lods
loope
push
mov
bound
sbb
xchg
and
pop
shl
and
cmp
loopne
adc
mov
pop
or
mov
pop
mov
mov
and
in
sahf
or
sti
aaa
adc
loope
mov
jp
imul
movsb
jne
mov
outsl
pop
lods
mov
xchg
cmc
data16
int3
inc
mov
je
repz
jo
sbb
clc
push
adc
xor
pop
mov
pusha
add
sub
mov
mov
test
test
mov
int3
mov
leave
lret
aad
mov
dec
sub
sbb
insl
or
and
fbld
fucomi
sbb
mov
daa
inc
insl
push
mov
sbb
inc
xor
xchg
jmp
outsb
dec
nop
pop
cwtl
aam
insb
iret
cmp
les
inc
and
xor
dec
and
nop
cmp
and
xor
inc
ljmp
out
test
insb
jl
rcl
xlat
shll
fprem
scas
jnp
mov
push
cmc
out
mov
or
out
cltd
sbb
gs
test
adc
mov
xchg
mov
add
ret
dec
mov
sbb
int3
mov
insb
dec
scas
or
in
les
into
and
insb
inc
cmp
out
or
xor
insb
adc
insb
jl
dec
mov
mov
std
imul
imul
xor
pop
mov
insb
gs
mov
daa
push
cwtl
cmp
mov
insb
cld
mov
mov
dec
gs
iret
in
mov
shll
and
pop
sub
push
sub
xor
jb
std
cmpsb
repz
xchg
leave
bound
insb
popa
enter
lock
popf
insb
xchg
loopne
popl
xorl
mov
xchg
cmp
fisttps
imul
insb
ds
popl
sbb
jg
mov
sub
data16
cli
jmp
lds
ljmp
aaa
cs
imul
mov
cmp
sti
insb
xor
call
insb
sahf
pop
nop
decb
inc
adc
push
cli
jbe
jg
mov
in
mov
inc
jl
mov
imul
repnz
jmp
xchg
addr16
hlt
jp
in
sar
into
insb
push
push
mov
push
mov
pusha
sub
dec
mov
push
imul
pop
stos
xchg
jbe
xlat
push
or
cmp
inc
in
sbb
mov
sub
jae
dec
and
insb
mov
sub
fwait
dec
sbb
lcall
sti
insb
add
or
icebp
into
pop
leave
xlat
or
mov
push
int3
lods
lret
or
arpl
sti
cli
mov
iret
sbb
dec
inc
das
das
pusha
push
dec
mov
in
cmpsb
pop
out
lret
push
insb
fcompl
sbb
jecxz
arpl
rclb
xchg
inc
les
mov
je
insb
dec
dec
sub
lods
insb
pop
fsubs
push
xchg
inc
xchg
ja
je
test
adc
dec
pop
neg
jo
test
dec
aam
xchg
gs
fildl
fdivrl
std
xor
in
xchg
test
sbbl
xchg
stc
lds
pop
lods
mov
pop
cmp
in
add
xor
in
sbb
loope
insb
xor
xchg
jl
cmp
jp
mov
xor
or
mov
inc
jg
mov
lods
fildl
insb
adc
push
arpl
mov
sbb
cwtl
xchg
leave
rcl
lret
jae
insb
inc
enter
lcall
push
xchg
jecxz
subb
xor
decl
div
adc
std
insb
xor
adc
je
out
ret
cmp
enter
ja
popf
insb
pop
adc
imull
lret
cmp
pushf
pop
xor
les
pop
inc
mov
imul
mov
pop
ds
in
or
insb
out
bound
cli
xchg
lret
cmp
cs
daa
push
lods
and
cmp
jmp
and
mov
rorb
fidivrs
scas
dec
out
cmp
and
sub
daa
mov
imul
xchg
insb
stos
rcll
inc
call
cmp
or
and
popw
lods
aam
cmp
push
insb
and
fcoms
xor
lret
subb
sbbl
outsb
insb
lahf
mov
jmp
jle
insb
or
and
imul
xor
clc
nop
dec
xchg
and
mov
adc
jne
lret
sub
fnstsw
pop
imul
and
jg
repnz
in
aad
or
sub
in
dec
test
ss
jns
sahf
mov
enter
in
jge
or
inc
dec
push
rorl
or
insb
sub
mov
ljmp
das
mull
push
lea
movb
out
cmp
jmp
push
mov
pop
aad
fcoml
adc
imul
pop
insb
pop
jmp
movsl
push
aad
ss
push
inc
mov
push
imul
or
pop
insb
icebp
jnp
cmpsb
xor
lcall
mov
aas
movsl
dec
dec
jne
xchg
and
adc
ljmp
insb
lods
shll
mov
insb
mov
je
loopne
jle
in
js
lcall
pop
xchg
inc
xor
out
or
mov
cli
inc
imul
add
das
test
and
inc
xor
adc
jns
pop
fisttpl
subb
cmp
es
sbb
xchg
insb
mov
clc
xlat
cmc
idivb
add
dec
hlt
into
insb
push
adc
ss
arpl
cwtl
outsb
jmp
cmp
bound
xor
int3
je
dec
mov
dec
sahf
sub
insb
test
xor
mov
insb
dec
xor
sub
xchg
cmp
shrb
std
cld
icebp
dec
orb
xchg
subl
add
mov
push
xor
jbe
out
icebp
lret
mov
push
mov
or
mov
add
insb
aaa
inc
aam
mov
insb
or
jecxz
sub
dec
mov
es
push
insb
cltd
xchg
xor
or
mov
mov
cmpsb
insb
dec
lahf
sbb
mov
jle
daa
leave
fs
mov
add
clc
mov
int
inc
mov
stc
xchg
xor
jbe
jl
insb
jmp
xchg
insb
pop
repz
insb
cmp
sub
push
stc
ljmp
sub
push
sub
add
fwait
ss
sbb
insb
shl
xchg
xchg
out
leave
and
jmp
out
insb
pop
ljmp
insb
testb
cmp
adc
pusha
mov
and
mov
cs
ss
mov
leave
insb
shrb
jb
insb
aaa
jne
lods
or
pop
dec
test
sahf
dec
xchg
jmp
jle
inc
push
insl
dec
into
test
outsb
iret
jg
or
imul
test
lcall
jecxz
insb
incl
dec
cmp
rcll
fcompl
xchg
insb
ljmp
out
insb
pop
idivb
push
xlat
mov
push
cmpl
mov
test
pop
repz
faddl
aas
sti
ror
in
shrb
rcll
cs
pop
fstpl
js
push
mov
insb
xor
mull
xchg
mov
jl
xcrypt-ofb
cmpsl
insb
adc
test
imul
insb
test
test
repnz
inc
pusha
fnstsw
fbstp
mov
cltd
lock
push
pop
cmp
repz
pop
inc
mov
stos
pop
imul
xchg
mov
xchg
pop
fsubs
mov
out
lods
xchg
nop
addr16
in
push
push
xchg
insb
shll
sbb
xchg
pop
push
cmpsb
lods
fwait
mov
pusha
rolb
cmpsl
out
aam
insb
mov
xor
dec
int
cli
iret
xchg
ljmp
repnz
jno
jp
xor
or
insb
out
push
test
add
mov
imul
cmp
pop
mov
movsb
fwait
lret
insb
and
inc
insb
and
popf
dec
sbb
push
icebp
insb
and
fildll
inc
repz
iret
insb
xchg
or
stos
dec
dec
pop
mov
xor
push
or
jbe
andl
insb
add
icebp
or
xchg
pop
sub
and
sar
insb
cwtl
dec
inc
jmp
insb
inc
mov
in
hlt
outsb
jl
xchg
shll
and
pop
sbb
adc
cmpsl
push
movsl
cmp
pop
mov
loopne
pop
push
data16
or
test
mov
in
pop
adc
insb
xchg
lret
les
adc
icebp
cmp
inc
insb
jbe
int
mov
stos
jnp
lock
mov
push
sub
push
insb
outsb
cmp
repnz
push
dec
lcall
std
sub
sub
and
fnstcw
mov
out
test
pop
sarb
inc
mov
dec
insb
pop
adc
jae
pop
jle
add
sbb
fwait
mov
xor
jl
and
pop
push
add
pop
or
insb
idiv
mov
push
jle
stos
cmp
jno
adc
push
insb
mov
mov
shrl
push
cmp
push
loope
into
jne
daa
mov
leave
lahf
mov
jge
pop
xchg
and
mov
inc
cmp
adc
push
push
lea
xchg
push
dec
and
daa
sub
enter
repnz
or
and
fcomi
mov
aaa
jns
test
inc
cmpsl
jnp
shl
insb
xlat
icebp
add
xchg
inc
xor
pushf
cmp
int
pop
cltd
arpl
jg
jge
stc
sub
pop
mov
xor
jl
movsl
insb
push
mov
adc
insb
aam
xchg
scas
rcl
mov
test
xor
insb
aad
cwtl
ss
ljmp
xchg
mov
push
insb
sti
mov
sub
insb
jb
mov
clc
andl
pushf
adc
xor
xor
or
data16
loop
pusha
insb
pop
js
adc
mov
out
mov
mov
das
dec
insb
xor
inc
adc
xchg
aas
out
hlt
lock
insb
lea
or
movsl
push
inc
mov
jns
inc
and
mov
xchg
cs
mov
data16
xor
insb
mov
std
out
adcb
into
mov
mov
pop
push
rcr
enter
pop
cli
cmp
das
lret
imul
push
pop
jmp
pushf
push
dec
pop
imul
fldz
mov
pop
xor
mov
push
inc
jae
or
es
into
insb
imul
xchg
dec
iret
lcall
xchg
rep
popa
pop
aas
xor
mov
cs
or
dec
lock
add
sub
push
nop
xorl
lods
sub
xchg
add
cmp
popa
sbb
pushf
sahf
jmp
leave
mov
push
ljmp
jnp
push
mov
mov
pop
cmp
xchg
push
stos
push
stos
outsb
sub
popa
add
sbb
in
jns
fnstsw
xchg
in
test
mov
test
mov
sbb
push
hlt
nop
inc
mov
outsl
mov
mov
je
imul
insb
data16
mul
fwait
imul
add
push
fsub
sbb
cmp
xchg
or
movsb
stos
ss
insb
sub
shll
xchg
addl
insb
pop
outsl
xchg
push
push
test
jns
push
jl
xor
aam
cmc
insb
mov
fidivs
xchg
insb
addb
mov
aam
sbb
bound
insb
push
movsl
dec
add
fwait
loopne
pop
cmc
or
in
popa
lahf
sbb
cs
dec
in
dec
cmp
fs
out
mov
or
cmp
pop
push
iret
or
jbe
mov
sbb
mov
stos
insb
lds
aaa
jmp
aam
loop
shll
mov
mov
add
test
orl
xchg
mov
xor
xchg
insb
ja
add
xchg
dec
stc
jp
jmp
inc
pop
in
sbb
stc
push
sub
aam
movsb
xchg
stos
pop
mov
mov
adc
and
pop
push
push
aam
sub
out
add
xlat
xchg
insb
ret
movsb
sub
push
and
shll
insb
stos
int3
lds
gs
les
cmpb
icebp
imul
mov
or
js
sbb
cld
ds
popa
aas
mov
dec
in
cpuid
and
dec
cltd
dec
jae
pop
inc
insb
es
cld
aad
cmp
pop
ss
mov
mov
in
mov
hlt
bound
into
imul
rep
insl
cmp
popf
xor
fwait
hlt
insb
dec
add
cmp
insb
stc
pop
inc
icebp
dec
jbe
lcall
bound
push
imul
xchg
mov
out
push
pop
mov
iret
test
push
insb
mov
mov
push
push
add
ljmp
sarb
sbb
movsb
sub
cmp
or
movsl
subb
push
test
push
imul
lods
cld
pop
repnz
ja
popf
testl
dec
mov
mov
add
in
or
enter
jb
jns
in
cld
fprem
mov
sub
stos
adc
js
insb
ds
call
imul
test
xchg
loop
mov
jg
and
ret
icebp
cmpb
dec
test
mov
jbe
js
insb
rcrb
inc
out
cmpb
cmpsl
push
insb
push
pushf
dec
mov
sbb
stc
mov
insb
or
fisubl
insb
setl
mov
inc
lock
ds
and
dec
lods
call
cmc
sbb
adc
jge
pop
repnz
sub
mov
mov
mov
call
test
lret
sbb
stos
movsb
daa
hlt
sahf
push
leave
mov
inc
xor
insb
lret
popf
loopne
mov
insb
faddl
imul
leave
xor
inc
mov
imul
int
pop
cmp
aaa
bound
jbe
push
mov
insb
js
cmp
pop
in
test
mov
pop
insb
xchg
aam
ljmp
mov
inc
rcrl
mov
js
pushf
adcl
dec
stos
aam
jo
ret
jg
arpl
cld
push
cmp
add
fisubs
mov
les
pop
mov
push
xorb
pop
jl
push
mov
ss
int3
mov
insb
mov
lea
daa
js
shr
imul
lea
das
adcl
mov
fdivl
enter
push
out
xor
pop
xlat
mov
ds
and
shll
adc
and
dec
push
data16
sbb
xor
push
insb
jp
shl
jbe
testl
pop
scas
cmp
insb
out
push
pop
pop
push
ljmp
in
nop
loopne
jle
jbe
insb
dec
fsubs
ja
inc
ret
repnz
sbb
xchg
sub
insb
stos
ljmp
int3
xlat
xchg
sub
test
insb
or
xor
inc
ja
sub
sbb
movsb
gs
mov
pop
jl
lods
add
dec
ret
cmc
test
insb
xlat
jns
imul
test
pushf
or
inc
fdivrs
push
fwait
insb
mov
pop
xchg
and
stos
fcmovbe
sub
std
cmp
clc
mov
jle
sub
dec
insb
cmp
dec
fbld
mov
mov
pop
insb
inc
sub
pop
sub
cld
repz
imulb
pop
push
pop
or
pushl
sbb
icebp
insb
sbb
clc
push
shll
in
push
cs
adc
je
mov
insl
dec
mov
insb
fbstp
lock
cmpsl
push
call
or
or
add
orb
cmpsb
push
stos
stos
sub
xlat
sub
pop
cs
gs
sti
and
jne
add
mov
cmp
mov
lcall
insb
inc
jge
inc
xchg
pslld
imul
shll
push
insb
mov
push
test
sahf
cmp
loopne
insb
jb
imul
mov
and
stos
cltd
jge
cwtl
xchg
outsb
insb
cmp
xlat
push
out
insb
imul
push
subl
loop
push
fxch
pop
sub
mov
sub
jmp
cmp
push
sub
mov
insb
or
mov
sub
into
xor
in
inc
xchg
inc
nop
iret
mov
insb
and
cmp
lods
sub
mov
scas
push
pop
ret
add
mov
out
or
ja
jae
push
mov
insb
sti
sub
mov
adcl
or
in
lods
push
pop
mov
mov
shrl
lds
inc
pop
stos
lods
in
insb
inc
sbb
push
sub
push
dec
or
rcrb
test
pop
out
ds
xor
out
adc
adc
popa
lods
mov
push
hlt
and
dec
imul
stc
cmp
cmp
ja
or
sub
mull
sub
dec
mov
shlb
mov
add
int3
dec
icebp
adc
push
imul
rorb
lods
cli
dec
lea
lods
and
jp
insb
fsubs
fcompl
js
lret
dec
xchg
and
sbb
dec
pop
or
pushf
xchg
mov
insb
cmpsb
mov
push
repz
mov
pop
jbe
insb
lods
arpl
jbe
repnz
fmuls
jb
insb
lret
cmp
mov
insb
xchg
jl
add
je
call
call
int3
insb
mov
ss
out
cmp
cmp
lret
lret
sti
insl
testl
repnz
scas
nop
insb
aam
mov
cmp
popa
int
inc
mov
mov
mov
push
xchg
int
pop
jmp
daa
sub
test
inc
add
or
stc
cmpsb
xlat
cmp
sub
mov
repz
in
dec
or
loop
inc
and
lods
shrb
pop
ror
jne
sbb
jg
pop
xchg
fsts
xchg
adc
insb
out
mov
xchg
mov
xchg
pusha
mov
sbb
xor
xor
insb
adc
aam
xchg
push
shlb
or
cltd
das
mov
mov
jl
stos
clc
adc
loopne
mov
insb
out
popa
xlat
fnsave
ja
mov
out
out
imul
push
adc
insb
add
outsb
sub
fmuls
stc
mov
cmp
and
icebp
stos
rol
ret
insb
xor
in
ljmp
inc
les
subb
imul
rcrb
fistps
add
or
jmp
jge
xchg
or
subl
mov
outsl
mov
lret
mov
repnz
xchg
xchg
insb
test
jge
jo
insb
mov
mov
mov
int3
fiadds
cmp
je
or
dec
jb
test
cld
test
dec
lret
repz
insb
daa
mov
jne
js
cli
stos
insb
imul
xchg
push
loop
insb
pop
mov
xor
xchg
es
jo
lods
outsl
jae
sub
push
insl
mov
in
jle
add
jg
mov
mov
call
in
adcl
imul
sbb
je
xchg
scas
dec
in
insb
mov
dec
fdivrp
and
repz
mov
imul
jecxz
in
fisubrl
xor
xchg
pop
mov
lcall
and
dec
int
push
cmp
lods
dec
sub
icebp
insb
or
mov
pop
dec
add
enter
popa
icebp
xchg
mov
mov
add
ja
bound
cmp
mov
xchg
sub
fprem1
nop
lcall
adc
xchg
clc
xor
les
jns
rcr
in
pop
push
xor
and
pop
loop
cltd
fucomi
mov
imul
ss
in
jne
mov
and
shll
negl
iret
ljmp
xchg
xor
gs
out
es
aas
fsubrp
aaa
and
and
jne
movsb
push
pusha
cwtl
pop
insb
in
aaa
push
xor
ret
dec
data16
fsubp
insl
sbb
xor
shr
add
pop
dec
adc
mov
imul
mov
arpl
outsb
insl
filds
push
lcall
mov
cmpsb
push
out
aaa
fisubrl
xchg
adc
jns
add
fsubr
mov
icebp
mov
or
fwait
pop
xchg
jge
pop
fsubr
imul
iret
imul
cmpsl
inc
mov
insb
sbb
addl
out
insb
xchg
sbb
xchg
mov
or
inc
test
out
cld
cs
movsl
in
jmp
cmp
std
push
sbb
jge
loope
and
dec
inc
adc
jne
mov
pop
inc
mov
xchg
xchg
jle
imul
loope
gs
mov
shrb
push
in
int
cmpsl
mov
adc
arpl
mov
std
inc
pop
je
leave
mov
ret
out
nop
addr16
push
pop
out
in
loopne
mov
insb
iret
jle
sub
mov
rcll
mov
insb
test
aaa
push
imul
stos
push
jp
and
or
xchg
lret
addr16
pop
scas
loopne
orl
adcb
outsl
insb
sub
push
push
icebp
fwait
jp
insb
in
movsb
lods
ds
nop
insb
sarl
mov
leave
lcall
ror
in
addl
xor
xchg
imul
mov
mov
jmp
insb
out
loop
push
mov
pop
pop
jb
sbb
insb
test
int3
nop
addr16
fbstp
and
or
insb
push
inc
adc
sbb
stos
gs
daa
pushf
inc
mov
imul
imul
and
cmovo
push
jns
addr16
mov
mov
negb
jl
insb
in
xor
insb
dec
js
imul
jmp
jo
or
icebp
pop
pop
mov
outsl
dec
push
ret
imul
push
pop
xor
inc
mov
cli
into
insb
mov
dec
insb
xchg
js
xorb
pop
in
cld
aas
inc
sub
inc
movsl
push
push
gs
jge
cmp
js
jp
subb
jno
dec
stos
fildll
sub
xor
dec
das
test
xlat
jbe
insb
mov
add
jecxz
cwtl
lahf
je
insb
jge
out
add
stos
xor
mov
cmp
sub
mov
pop
das
add
cli
shlb
push
mov
das
xchg
insb
fistpl
jb
or
add
adc
mov
or
xchg
out
aam
out
insb
out
sahf
fs
clc
jne
shrl
pcmpeqb
in
subl
sbb
push
add
insb
aaa
add
jg
push
add
testb
pop
sbb
jge
push
adc
orb
adc
xchg
imul
mov
dec
xchg
fdivl
push
xor
out
test
mov
mov
fstps
or
push
fisubrl
adc
and
inc
mov
mov
inc
dec
outsb
repz
adc
sti
inc
addl
xchg
fistpl
jmp
pop
xorb
insb
pop
or
cmp
lcall
js
dec
xchg
push
add
hlt
cmp
loope
xchg
insb
xor
xchg
cltd
mov
loopne
jnp
adc
xor
pushf
in
pushf
gs
xlat
fdivl
xchg
lods
sbb
push
xchg
lea
lods
ret
cmp
push
insb
aad
repz
fisubs
insb
mov
mov
insb
into
lret
mov
das
sbb
inc
adc
clc
sbb
adc
mov
es
mov
test
lcall
and
and
call
aam
mov
sbb
ja
repnz
arpl
mov
imul
jmp
adcl
repz
dec
repnz
add
insb
outsb
push
xchg
popa
nop
gs
insb
cmpl
call
jne
xorl
fs
adc
jl
in
in
stc
shrb
dec
sub
pop
fisubs
int3
xchg
mov
inc
dec
sbb
imul
nop
push
mov
or
mov
mov
imul
in
sub
xor
pop
test
pop
insb
fiaddl
insl
ja
shlb
lret
test
and
rol
imul
arpl
in
sbb
xor
loope
adc
pop
cmp
lods
xor
imul
in
cmp
shlb
scas
in
and
mov
insb
push
cwtl
loop
fadds
es
test
push
lret
insb
mov
or
xlat
dec
xor
enter
push
push
das
ds
insb
push
frstor
lret
pop
and
or
lods
or
insl
sbb
insb
lcall
sbb
repnz
aas
mov
lods
pop
dec
jno
mov
pusha
inc
hlt
lret
lods
adc
insb
xchg
jb
or
and
pop
sbb
or
jbe
mov
lods
out
xchg
xor
cmp
push
popf
int
insb
mov
adc
imul
leave
call
xor
mov
ss
insb
andw
and
stc
ja
insb
push
pop
imul
or
mov
data16
dec
push
and
mov
xchg
loope
xlat
pop
jno
cli
xor
out
dec
add
mov
popf
sub
out
shl
and
insb
iret
in
sub
gs
jmp
fimull
adc
into
pop
sti
mov
movsb
out
jno
insb
lods
push
mov
stos
pop
and
xchg
ds
jne
add
insb
push
lds
inc
push
fcmovu
cmp
loope
adc
ljmp
add
test
and
mov
fs
insb
jl
mov
into
insb
jae
clc
wrmsr
dec
loop
insb
inc
mov
xchg
dec
lock
imul
divl
gs
mov
rolb
cmc
rorl
add
pop
inc
lcall
insb
add
addr16
iret
test
jno
dec
sbb
dec
push
out
lcall
push
insb
jae
test
in
sbb
push
imul
add
test
jg
xor
xor
cmp
jge
in
sar
cwtl
inc
and
pop
leave
mov
pop
or
inc
push
aaa
fs
jle
arpl
cmp
and
fsubrl
add
pop
adc
adc
cmc
push
pop
insb
leave
lds
or
into
insb
rorl
xchg
das
xlat
mov
and
movsb
sub
insb
mov
mov
fsubrl
testb
out
insb
cmp
and
jp
xor
cs
jbe
andl
stos
jecxz
lds
inc
or
test
insb
jle
popa
movsb
sub
cwtl
shrb
fidivs
mov
ss
jns
sti
mov
ja
sub
mov
mov
and
int
adc
in
aad
sub
out
cmpsb
jg
sub
cmp
jg
pop
jge
push
das
pop
lahf
insb
mov
mov
adcb
cmpsl
insb
jmp
mov
leave
push
test
cmc
fcomps
sbb
jmp
mov
adc
xor
push
insb
push
dec
xor
cmp
mov
insb
mov
frstor
je
daa
enter
sbb
insb
sub
jo
inc
pop
xchg
insb
repnz
mov
mov
xchg
dec
ss
lods
xchg
mov
insb
loope
bound
lret
jo
pop
adc
rcrl
sbb
imul
xor
in
add
mulb
adc
mov
arpl
insb
into
jno
cmp
out
adc
xchg
sarb
imul
int3
xchg
int
xlat
xor
aam
out
imul
xor
mov
insb
or
jo
shll
insl
or
imul
cli
fsubl
cmp
or
stos
inc
push
mov
or
enter
sub
out
loope
icebp
add
pop
ja
cmp
insb
inc
fwait
dec
fs
enter
aas
js
insb
mov
jb
daa
add
insb
cld
bound
and
enter
pop
mov
pop
cltd
mov
cmpsb
jle
stc
fdivrs
clc
pop
insb
out
test
insl
mov
mov
pop
aaa
loop
or
sub
mov
cmpl
loop
add
jmp
mov
mov
mov
sbb
data16
inc
popa
fwait
das
xchg
cmp
push
or
aas
in
jl
mov
mov
xor
jmp
ja
in
testb
sahf
mov
jnp
rolb
rcrl
cs
mov
insb
fcoml
dec
cmpsb
push
lods
lods
inc
out
gs
adc
test
loopne
outsl
mov
mov
int3
xlat
cmpsb
ret
popl
movsl
dec
imul
imul
les
add
or
imul
push
clc
xchg
imul
mov
stos
xor
pusha
or
lods
je
mov
cld
sub
mov
movsb
jb
insb
pop
xlat
cltd
inc
jae
bnd
push
hlt
mov
mov
lds
popa
sti
test
loopne
and
insb
or
int
jmp
mov
insb
sub
in
jbe
cmp
insb
mov
outsb
pop
inc
cmpsl
ljmp
in
dec
or
sarb
incl
aas
insb
out
rcrl
cmp
cmp
imul
sarl
xor
cmpsl
out
mov
inc
lds
shrb
mov
jnp
popa
dec
mov
cmc
add
cs
andl
jg
sub
insb
push
lods
or
sub
insb
insb
inc
mov
cmp
mov
dec
push
lods
inc
cli
insb
icebp
dec
in
lcall
test
sub
fs
pop
mov
inc
jp
fcomps
stos
ret
insb
push
stc
cld
sbb
adc
in
add
insl
push
sub
sbb
shrl
dec
ds
push
insb
std
jb
shrb
js,pn
mov
in
outsb
jbe
lea
dec
test
loopne
xor
psubb
xchg
test
call
or
nop
notb
mov
lea
adc
mov
mov
lahf
test
dec
addr16
repz
ja
aam
mov
movsl
adc
loope
insb
lods
and
adc
xchg
es
pusha
insb
xor
das
adc
sub
insb
push
std
pop
mov
mov
push
xor
iret
popf
insb
xor
nop
in
lret
pop
insb
jbe
lock
cmc
push
jecxz
lods
insb
imul
aas
push
push
mov
ret
push
fisubl
iret
loop
hlt
lahf
insb
imul
pushf
mov
or
push
insb
sbb
rolb
inc
frstpm(287
mov
mov
pop
loopne
loop
int3
inc
in
sub
jo
pop
cmp
ljmp
pop
dec
inc
jo
packssdw
mov
push
lret
xchg
mov
and
sbb
pop
sahf
push
and
mov
lcall
mov
ds
pop
or
subl
jecxz
dec
repnz
and
insb
xchg
or
mov
cmovge
sahf
jno
jp
dec
push
and
shrb
out
dec
insb
mov
loopne
cmpsl
insb
orb
mov
and
pop
inc
pusha
lds
insb
xchg
dec
cwtl
sub
sbbb
pop
sahf
imul
or
js
sbb
jl
outsl
arpl
jno
jmp
pcmpgtw
xor
fimull
mov
jl
imul
add
imul
lods
sbb
loope
adc
test
in
push
cmp
and
jbe
adc
stc
dec
insb
adc
ret
cwtl
lea
mov
lods
out
popf
repnz
pop
dec
xor
imul
gs
shlb
daa
int3
mov
stos
dec
sbb
sub
pop
hlt
sbb
dec
cmpsl
push
lods
jmp
pop
mov
cmpsb
mov
sbb
andb
insb
outsb
xor
test
jp
imul
pushf
and
insb
lret
push
add
jp
push
iret
push
insb
add
push
gs
fsubl
cli
insb
loop
ljmp
add
adc
insb
pop
push
enter
adc
add
rorb
dec
push
jmp
loope
insb
stc
add
mov
fdiv
insb
or
xor
movd
clc
pop
movsl
xor
mov
mov
nop
and
fists
cmp
insb
xchg
clc
sbb
xchg
sub
popf
mov
insb
jge
push
jp
mov
lcall
outsb
mov
sti
or
dec
outsl
cld
arpl
push
cmp
out
insb
and
mov
xor
push
cmpl
xor
inc
insb
fstp
stc
xor
or
add
cmp
push
in
jle
push
lock
fsubrl
stos
je
inc
or
fwait
arpl
add
sbb
xchg
shrb
nop
insb
enter
cwtl
inc
xchg
pop
insb
leave
cs
mov
repz
pop
mov
imul
xchg
addl
sub
jno
jb
stos
push
dec
push
cmp
in
cmp
andl
pushf
jmp
adc
jo
lock
sbb
adc
mov
in
cs
or
insb
add
loope
out
icebp
pop
mov
push
out
fwait
or
cs
fidivrs
xchg
fadd
mov
imul
jbe
enter
xor
insl
mov
pop
sub
mov
pusha
adc
insb
xor
xor
icebp
mov
scas
in
movsb
cmpsb
xchg
and
or
or
imul
outsb
je
jecxz
jg
lret
stos
call
dec
imul
sahf
stos
insb
movsl
pop
lcall
xor
and
test
mov
lods
insb
lcall
jnp
data16
pushf
hlt
out
push
jns
xorb
jmp
cmpsb
and
xchg
arpl
stc
cmpb
movsb
cld
pop
pop
sbb
push
insb
cli
insl
pop
jb
sub
gs
dec
clc
push
mov
insb
mov
into
push
xor
fcomps
insb
mov
or
xor
aaa
movsl
push
insb
push
pop
int3
out
pusha
mov
insb
cmpsb
xor
repz
insb
mov
adc
jg
cmp
xlat
mov
dec
jno
repnz
cmova
jg
pop
in
jl
push
imulb
lret
push
mov
test
mov
aaa
lock
push
mov
out
jnp
jns
push
jb
insb
mov
rolb
data16
add
leave
jle
sbb
sbb
enter
scas
imul
rol
lods
pop
inc
jmp
shll
or
push
pop
dec
lret
test
gs
xchg
xchg
repz
insb
ja
mov
mov
cwtl
roll
cmpsl
push
inc
insb
hlt
stos
inc
lock
jecxz
lods
pop
enter
sub
add
insb
sub
dec
xchg
fidivl
dec
and
push
jne
sti
jb
ja
push
xor
lods
inc
loope
pop
insb
mov
push
popf
jp
mov
adc
jmp
insb
insl
mov
sub
gs
lods
xchg
adc
fwait
sbb
adc
xor
lcall
insb
mov
push
test
push
sub
loop
stc
cmp
jne
dec
xchg
sbb
mov
fisttps
insb
add
inc
and
dec
xchg
mov
divl
cmpsl
addl
or
pop
insb
inc
pop
sbb
out
pop
xchg
std
sbb
cmp
insb
jns
addr16
loop
clc
insb
lds
xlat
pusha
subb
insb
jg
xchg
insb
into
push
fldcw
pushf
inc
insb
sahf
aam
cmp
mov
test
insb
testl
aad
out
sti
insb
daa
lods
dec
test
mov
dec
inc
mov
jp
imul
inc
ret
imulb
cli
scas
insb
mov
adc
enter
push
pop
mov
insb
push
mov
inc
cmp
xor
aad
inc
lods
and
ret
xchg
insb
add
imul
ret
lds
pop
in
push
cmp
adc
or
xchg
jno
add
stos
sbb
scas
movsl
test
ja
insb
movb
xor
shlb
dec
sub
insb
cmc
cmpsl
add
push
adc
je
push
insb
pop
push
mov
sahf
das
fwait
loopne
pop
mov
outsb
dec
insb
cmp
pop
out
insb
pop
inc
loope
stos
incl
loopne
sti
out
dec
fwait
push
ljmp
push
arpl
jo
xchg
mov
dec
mov
repnz
aad
or
insb
mov
add
mov
pop
xchg
enter
adc
sub
sti
fisttpll
pop
stc
sub
call
imul
dec
mov
and
shll
jp
push
movsb
push
jo
lcall
lret
jbe
insb
movsl
push
mov
jne
push
push
repnz
mov
dec
pop
imul
cld
sbb
mov
insb
repnz
ljmp
xor
loope
addr16
in
mov
push
add
loop
xchg
mov
imul
jb
imul
jnp
movsb
jg
mov
inc
sub
scas
les
mov
aas
jg
pop
imul
mov
and
rcr
sarl
insb
fs
jbe
pop
out
mov
addr16
mov
pusha
dec
imul
mov
xchg
pop
mov
inc
or
xor
movsl
fistpl
mov
xchg
fsubs
pop
addb
data16
xor
lret
popa
sub
mul
in
jg
loope
pop
lret
fbstp
ret
push
outsb
insb
fwait
sbb
stc
jle
into
mov
shlb
and
in
sub
push
rol
mov
adc
mov
xchg
xchg
and
xor
sub
add
xchg
iret
test
insb
mov
sub
cmp
jnp
imul
popa
fmull
subl
lahf
out
inc
mov
je
xor
ds
fistpll
push
clc
mov
sub
mov
push
xchg
mov
inc
mov
shrb
cmp
cmp
mov
push
or
insb
leave
stc
rcl
punpckhwd
inc
sub
ja
lahf
popf
lods
xor
mov
loopne
insb
repnz
lock
int
insb
cs
icebp
mov
inc
mov
mov
or
int
sahf
popa
xor
in
xchg
jne
pop
dec
divl
insb
scas
adc
mov
out
mov
ljmp
lret
mov
js
or
icebp
sbb
sub
gs
or
dec
pushf
sub
sub
insb
jp
sti
jbe
arpl
insb
cld
cs
mov
xor
test
rcrb
cmp
dec
dec
jp
pop
cmc
insb
inc
adc
mov
xor
bound
or
enter
sub
insb
and
xchg
jmp
arpl
jns
xor
int3
test
stos
addr16
jmp
outsl
or
add
and
lds
bound
sbb
lock
pop
lret
or
pop
subb
dec
ret
stos
movsl
sbb
fdivr
into
ds
inc
sbb
icebp
cwtl
iret
je
mov
aam
mov
and
and
cmp
dec
jg
or
adc
cli
insb
push
int3
popa
push
sar
leave
in
enter
sub
mov
cmp
xchg
fdivs
enter
add
insb
jmp
sub
je
and
cmp
insb
test
inc
loop
jo
insb
sbbb
jb
cmp
mov
enter
pop
and
add
insb
mov
scas
aad
lret
sub
cwtl
dec
cmp
and
pop
nop
into
cld
dec
int3
sub
push
inc
fiaddl
push
aaa
insb
frstor
xor
xchg
xchg
fldl
mov
popf
in
xor
pop
xor
test
jge
sbb
int3
mov
lods
xchg
hlt
ds
mov
icebp
insb
inc
pop
add
xchg
clc
test
pop
pop
xor
imul
and
insb
in
or
jns
inc
inc
add
mov
mov
in
mov
mov
push
jmp
xchg
mov
cld
xor
loop
call
jecxz
dec
cmp
jb
iret
jae
sub
jbe
in
lret
rorb
insb
les
fisubs
fcompl
in
mov
insb
xor
lcall
in
xchg
ds
dec
fisubl
scas
push
test
pop
into
mov
sub
fst
int
xor
xchg
xlat
push
push
insb
or
jl
test
je
jecxz
cmc
cli
imul
insb
xor
stc
sub
cmp
sbb
pop
jmp
add
int3
sarl
sbb
xchg
push
lds
in
ja
mov
cmc
mov
mov
fcoml
jmp
xchg
jno
in
into
xor
xor
sbb
pop
and
fs
jno
outsl
cmp
fsubrl
icebp
pop
rclb
cwtl
sbb
inc
leave
jg
jp
jbe
dec
xlat
dec
movsl
cmp
xor
notl
adc
lea
imul
dec
mov
inc
leave
mov
inc
and
cmp
stc
insb
push
mov
cld
subl
lock
xlat
mov
in
pop
dec
lcall
jae
aad
push
rorl
and
lcall
mov
lods
call
xchg
addr16
xchg
jle
push
and
mov
insb
xchg
aad
mov
insb
outsl
or
cli
bound
inc
push
pop
pop
mov
stos
or
cld
in
sbb
inc
pop
insb
sub
mov
mov
cltd
aam
lock
out
push
gs
sub
xor
sbb
je
insb
ljmp
jb
cmc
adc
add
movsb
in
jno
inc
mov
cwtl
xchg
daa
pop
bound
jbe
mov
inc
test
add
leave
inc
loop
dec
loope
nop
sti
push
insb
or
add
in
xchg
ljmp
lock
mov
fcmovb
test
les
xchg
mov
imul
inc
mov
jno
int3
stos
arpl
out
pop
pop
pcmpgtd
xor
dec
xchg
insb
rorl
mov
insb
mov
imul
in
insb
dec
in
sub
xchg
mov
insb
adc
xor
in
cli
call
dec
cmp
cmpl
fidivrl
cmp
adc
insb
out
push
jmp
imull
in
outsb
sbb
shlb
insl
out
ret
push
add
insb
mov
sbb
cmc
es
pop
jne
scas
pop
xor
mov
imul
or
mov
inc
lret
leave
xor
pop
insb
xchg
mov
sbb
je
js
dec
adc
lods
xchg
jb
fnstenv
sub
sbb
jno
stc
mov
pop
fwait
je
dec
imul
hlt
bound
gs
cmp
mov
push
test
sbb
int
mov
adc
test
out
jle,pn
fwait
xor
cmp
lods
mov
push
aad
sub
dec
pop
ficomps
pushf
push
insb
push
pop
ljmp
popa
icebp
pop
pop
popf
lods
mov
insb
xor
mov
mov
mov
insb
adc
mov
dec
xchg
incb
or
les
insb
push
shrb
hlt
shrl
and
ja
mov
and
insb
inc
mov
add
icebp
lods
lret
ss
inc
leave
pop
push
addr16
jb
imul
xor
mov
int3
xchg
push
pop
xchg
inc
push
dec
mov
xor
sub
ret
adc
jne
fldpi
scas
insb
xchg
mov
mov
jne
sbbl
mov
sub
mov
lods
insb
push
gs
insb
xchg
rep
add
lret
addr16
ret
addb
movsb
js
sbb
movsl
xchg
xor
mov
pop
jnp
scas
xor
xor
fdivrs
lahf
xorb
inc
in
out
push
rcrb
lock
xor
out
insb
push
int
into
fistpl
lahf
jg
test
push
pop
or
shrb
test
sub
jmp
cmp
sbb
rcrb
dec
mov
in
fisttps
jge
insb
inc
sub
cmp
and
pop
pop
in
ja
sbb
xchg
adc
or
sbb
iret
scas
insb
push
pop
addr16
xchg
cmp
mov
or
lcall
loope
insb
aas
pop
and
lds
add
stos
repz
fisubl
insb
sub
jo
add
push
jb
out
test
cmpsl
adc
pop
fs
or
in
add
aam
adc
sub
sarb
cli
imul
imul
in
mov
arpl
cmp
add
pushf
je
imul
mov
jmp
sub
jl
sbbl
xor
insb
ret
lcall
inc
cld
sub
imul
jle
sub
mov
in
sarl
push
pop
insb
das
xchg
cs
push
pop
pusha
and
stos
jae
divb
dec
add
icebp
iret
cmp
test
hlt
ljmp
and
dec
pushf
cmpl
insb
loopne
jmp
xchg
insb
fistpl
jmp
push
add
xor
inc
inc
test
ret
mov
or
adc
pop
je
hlt
pop
cmp
insb
imul
or
in
sub
mov
jp
subl
pop
addr16
add
leave
inc
aad
mov
adc
push
pop
dec
fsts
cmp
inc
xchg
je
imul
dec
mov
pop
test
fs
and
sbb
lods
insb
xchg
sub
dec
clc
insb
out
lea
sbb
xchg
lods
sbb
js
jns
cmp
push
imul
aam
repnz
and
xor
insb
fldl
mov
scas
fistps
pop
mov
mov
cmp
xor
aam
dec
mov
std
cmpsl
push
shrb
lods
adc
xor
sub
out
imul
jl
push
sub
sub
jg
dec
add
jns
and
test
imul
mov
ffree
inc
test
dec
jp
mov
je
sbb
dec
xor
test
sbb
xchg
inc
pop
push
bound
shrl
gs
xchg
mov
pop
jmp
mov
sub
dec
xchg
xor
and
arpl
insb
scas
leave
cld
xorb
insb
inc
inc
inc
dec
adc
lcall
cmc
pop
pop
insb
mov
fnsave
dec
xchg
adc
adc
push
xor
repnz
je
shlb
iret
ficoml
push
cld
insb
stos
loopne
cmpsl
mov
cmp
out
call
pop
adc
aam
jo
insb
cmp
add
out
push
jne
dec
dec
shrb
pop
ja
fisubrl
insb
call
ret
mov
insb
dec
call
mov
or
push
pop
std
out
in
jmp
mov
mov
xor
push
dec
sub
stos
into
loopne
adc
adc
push
test
gs
insb
loop
inc
xor
cmp
and
sub
mov
xchg
pop
push
sub
inc
sub
adc
mov
sar
mov
sub
cmp
nop
adc
in
icebp
xor
stos
in
movsb
mov
ret
inc
or
cmp
mov
push
or
cmp
lds
sti
pusha
loope
les
inc
in
fidivrs
insb
push
mov
je
push
mov
push
dec
out
cmpsb
jo
insb
shll
push
jmp
insb
int
cmp
jmp
mov
xchg
cvtps2pd
and
and
sbbl
mov
mov
stc
or
test
insb
add
cmp
int
dec
cmp
sbb
scas
jnp
jl
cli
aas
insb
and
dec
jecxz
rcr
subb
lods
jge
mov
sub
loop
mov
insb
stc
ds
lahf
stos
int
sub
pushf
pop
and
adc
testl
cmpl
xchg
cli
mov
mov
insb
and
fistps
cld
imul
mov
mov
mov
mov
in
cld
ret
cmp
in
sbb
fldcw
inc
pop
mov
pusha
aam
pushf
sti
insb
orl
sahf
pop
or
cmpsb
add
subb
mov
push
sbb
push
cmpsl
add
adc
js
ret
stos
push
mov
std
gs
inc
sbb
out
subb
repz
stos
pushf
in
mov
or
ret
mov
jle
roll
pop
push
xchg
push
mov
mov
das
mov
jae
test
rolb
and
push
insb
dec
adc
xchg
lret
emms
insb
or
inc
rorb
sbb
imul
mov
sti
push
push
dec
in
lret
bound
pop
mov
and
xor
inc
icebp
addr16
add
outsb
push
pop
test
iret
fs
sbb
or
dec
sub
add
push
movsl
test
mov
loopne
sbb
daa
jecxz
add
adc
adc
mov
add
imul
jae
jmp
xor
jmp
mov
or
movsl
cld
leave
test
out
test
add
or
call
lods
cmpl
sbb
imul
mov
stc
push
sub
fidivs
in
mov
adc
nop
dec
mov
ss
xchg
les
loope
cmp
jbe
movsl
scas
ja
repnz
inc
mov
dec
xor
insb
loopne
mov
push
pop
insb
sub
dec
mov
add
jp
sti
fstl
pop
sub
push
or
jg
aam
add
dec
clc
sbb
in
addr16
jne
imul
mov
test
sub
adc
ja
sub
and
fdivl
imulb
inc
pop
sbbl
cmp
loope
xor
bound
sub
or
push
addr16
mov
loope
or
insb
loopne
mov
call
cmpsb
out
enter
or
sub
dec
pop
jmp
lock
addr16
int
es
ss
push
cld
insb
out
adc
int
mov
insb
push
xlat
sub
gs
jmp
inc
or
int
mov
pop
jl
sbb
jnp
mov
insb
sbb
mov
pop
insb
sub
outsl
cmpsb
dec
pusha
movsl
imul
adc
fldcw
jmp
lods
dec
sbb
rep
fsubs
inc
lret
mov
and
insl
call
je
fsubrs
jg
ret
pop
subb
pop
loop
jmp
std
sbb
mov
dec
xchg
imul
and
sub
or
push
imul
fwait
in
das
mov
dec
sbb
sbb
add
shrb
push
or
cmp
xchg
ret
lcall
ljmp
data16
lahf
insb
pop
inc
pusha
jmp
mov
insb
iret
pop
xchg
xor
faddl
call
pop
cld
sub
stos
lret
ds
ret
insb
mov
lcall
jmp
addr16
lea
iret
ljmp
dec
insl
movsl
insb
dec
push
test
fsubrs
add
fsubrl
insb
jns
aad
or
and
insb
es
add
test
sub
add
insb
push
int
push
jae
inc
and
xor
push
imul
das
fdivl
loope
leave
outsb
nop
insb
pusha
dec
inc
mov
imul
ficompl
fldenv
sub
push
or
in
pushf
jo
mov
hlt
stos
or
lods
pop
in
cmp
sbb
xor
dec
in
inc
and
sbb
jge
dec
mov
insb
jecxz
dec
in
inc
aad
mov
movsl
icebp
dec
jb
aam
les
in
enter
in
xlat
movsl
rcrl
pusha
mov
test
mov
xchg
insb
and
gs
or
mov
mov
test
push
and
in
dec
fildll
dec
xchg
mov
lods
andl
xorb
adc
jne
pop
bound
sbb
sub
mov
push
and
insb
dec
cmpsb
stc
dec
xor
outsb
jmp
add
das
sbb
outsb
icebp
xchg
sub
and
mov
iret
aas
mov
mov
loop
rep
arpl
repnz
imul
mov
sbb
insb
fistpl
lds
xor
pop
xor
dec
xchg
or
mov
test
es
ds
stc
or
inc
pop
test
push
mov
ret
cmpsb
rolb
out
leave
stos
fistpll
xor
pop
lods
xlat
gs
inc
faddl
sub
roll
out
jmp
test
imul
dec
lods
mov
icebp
adc
pop
add
mov
aam
push
mov
aas
sub
mov
pop
mov
insb
in
movsl
repnz
pop
sti
insb
test
gs
clc
outsb
dec
pop
sbb
mov
cmp
pop
in
cwtl
pop
xchg
insb
sbb
ss
daa
lds
inc
notl
mov
mov
sbb
enter
arpl
jae
cmc
shrb
fdiv
xor
jo
pop
rorb
arpl
jle
and
insb
pop
sahf
add
in
call
into
lds
inc
fiaddl
enter
out
inc
insb
test
in
cmp
rep
xlat
cmpsb
int3
lret
loope
insb
pop
xchg
fld
imull
cmp
pop
insb
cmp
jno
mov
leave
shrb
jo
mov
inc
jns
jle
mov
inc
scas
xor
aaa
cld
insb
bound
push
jbe
inc
imul
es
jmp
mov
subb
ljmp
pop
fbstp
je
insb
xchg
inc
jne
mull
test
hlt
cli
shrl
ljmp
xor
add
enter
mov
aam
call
imul
push
pop
sbbb
push
inc
punpckhdq
call
insb
inc
pop
xchg
adc
imul
inc
dec
divb
or
jg
stos
jo
and
and
test
xor
adc
test
fidivrl
adc
and
gs
call
repnz
add
fcomp
jne
xor
mov
cmp
insb
mov
add
mov
mov
popa
add
out
xor
inc
sub
jb
fs
scas
or
pop
ljmp
ficomps
in
mov
cmpsb
xchg
movsb
popl
les
lahf
adc
mov
push
sahf
push
icebp
cmp
aas
ljmp
cmc
or
insb
cmp
mov
in
add
jmp
pop
mov
aam
das
test
sbb
adc
and
jb
sarl
push
push
lea
sub
or
in
das
sbb
dec
inc
mov
insb
xchg
push
jecxz
mov
inc
jne
imul
call
ret
in
pop
int3
fwait
adc
jo
add
and
sub
stos
jns
sbb
push
fsubrl
jp
inc
in
pusha
pop
pop
insb
sbb
rorb
push
adc
push
push
or
sub
adc
in
aas
je
fdivl
popf
add
data16
sub
inc
push
xor
in
js
xchg
nop
dec
push
or
inc
insb
scas
xchg
ret
mov
pushf
mov
or
shl
out
lods
jge
pop
orb
xchg
pop
mov
insl
gs
mov
pop
xor
fisttpll
pop
divl
push
sbb
mov
les
pop
pop
cmp
notb
rclb
dec
insb
sbb
lret
mov
insb
iret
pop
or
push
pop
sub
fsubl
insb
mov
loop
fs
jnp
imul
test
pop
insb
test
add
rep
jnp
aas
cmp
jecxz
js
add
aam
or
fs
lea
jnp
jne
stos
mov
cmp
gs
add
inc
popf
insb
xchg
in
or
dec
xchg
imul
cmp
aad
mov
lret
pop
ret
lahf
dec
rcll
push
outsb
sbb
insb
adc
push
les
clc
cwtl
mov
pop
mov
imul
mov
cld
ljmp
or
rorl
arpl
lret
icebp
jl
inc
mov
das
push
lods
insb
out
scas
mov
bound
ljmp
sti
inc
jl
fdivs
ja
sahf
leave
fsubr
jns
jbe
shl
cltd
hlt
insb
pop
movsl
andb
popf
push
insb
repz
addr16
pop
fisttpll
xlat
xchg
push
pop
mov
out
cmpsb
pop
out
jmp
mov
test
xor
lods
fiaddl
test
sbb
xor
jnp
mov
add
jo
les
pavgw
dec
or
daa
and
pop
sbb
outsl
ret
jecxz
xor
sub
imul
scas
jno
fistpll
sbb
cwtl
cmp
rclb
sarl
or
inc
repz
jecxz
inc
sbb
adcl
lock
jl
fs
xorb
push
mov
dec
insl
in
enter
data16
pop
sbb
push
mull
pop
jbe
mov
imul
push
jne
mov
insb
data16
dec
out
int3
jb
stos
cmp
enter
add
xchg
sub
mov
inc
fldt
jnp
cmc
fwait
sbbb
adcb
sub
xorl
mov
fs
xchg
aas
nop
xchg
push
ja
lock
dec
mov
into
int
or
dec
jbe
push
add
add
adcl
jo
inc
sub
adc
out
data16
leave
jbe
push
add
movl
adcl
sbb
jae
idivb
cld
das
in
rcrl
adc
mov
cmc
iret
addl
push
not
or
mov
xchg
imul
jne
loope
dec
lods
fnstcw
add
rclb
insb
lds
aaa
jae
test
pop
sub
add
aam
rep
sub
adc
mov
fstpt
fisubs
imul
rolb
sub
adc
ljmp
push
mov
test
jne
xchg
test
in
int
imul
mov
and
stc
push
in
xor
negl
adc
jecxz
shlb
adc
popa
push
and
cwtl
ficoml
inc
insb
xchg
and
dec
roll
loopne
pop
ret
shll
or
xor
push
mov
inc
xorb
dec
jnp
shr
out
fdivs
popa
cld
js
bound
insb
push
test
insb
jb
fcompl
cmp
jecxz
mov
imul
and
ljmp
loope
dec
pop
xchg
jne
inc
insb
push
scas
cwtl
pop
add
out
fdivrl
insb
subb
in
push
call
lods
push
sub
aad
imul
push
insb
pop
ds
lret
repz
insb
aaa
jnp
pop
or
cmpsl
js
xor
insb
inc
mov
imul
mov
or
jo
push
xchg
push
xchg
push
clc
cmp
imul
pop
pop
mov
mov
sub
insb
icebp
enter
int
mov
in
fcmovne
pop
mov
xor
icebp
dec
sub
inc
dec
inc
xor
insb
sbb
enter
or
insb
gs
fs
sub
imul
loop
aam
js
jl
or
mov
or
dec
insb
xchg
lods
dec
mov
jp
andb
fldenv
jg
repnz
mov
popf
jnp
lods
dec
mov
mov
mov
xlat
cwtl
leave
popa
dec
insb
or
outsb
or
stos
jl
insb
mov
mov
xlat
insb
sbb
cmpsb
or
notl
push
pop
mov
insb
xchg
test
les
insb
movsb
xor
adc
imul
jp
inc
mov
cltd
mov
mov
shrl
insb
xor
cmpsl
inc
dec
xchg
add
mov
jl
in
mov
cld
mov
or
push
out
fmul
dec
mov
das
sar
push
insb
je
inc
aaa
and
push
push
xor
imul
jg
out
hlt
or
insb
dec
and
daa
movsl
pop
jb
imul
rol
les
fnstenv
mov
push
je
lahf
in
mov
dec
or
insl
pop
cmp
insb
imul
adc
in
dec
mov
add
aam
inc
sub
sub
ret
jnp
add
and
leave
notb
scas
jge
in
sub
mov
repz
insb
std
push
mov
fcomip
insb
or
xor
mov
lods
pop
push
push
aad
insl
adc
and
and
sub
imul
testb
xlat
in
icebp
cmpsl
in
shrl
mov
dec
pop
or
mov
jno
cmc
mov
lahf
pusha
lds
mov
cmp
xor
fcoml
lods
sbb
sub
fisubrl
shll
imul
inc
xchg
push
jle
inc
lods
in
or
jbe,pt
insb
inc
out
pop
in
insb
cltd
popa
fnclex
pop
jo
dec
inc
jl
insb
push
or
mov
inc
pushf
or
inc
mov
dec
insb
and
inc
subb
aas
pop
leave
sub
test
mov
lods
push
arpl
cltd
xchg
or
mov
mov
mov
adc
aad
push
adc
mov
repnz
cmc
lods
xor
adc
ljmp
pop
mov
rcr
jecxz
xchg
pop
jle
mov
lods
in
mov
fisubrs
xorb
sbb
add
push
insb
fcomp
adc
call
push
mov
sbb
jae
in
dec
insb
and
mov
ljmp
pop
cs
ds
or
jnp
mov
pop
and
mov
mov
mov
fsubl
inc
sub
push
aas
movsb
outsl
lahf
insb
pop
inc
mov
or
insb
push
push
mov
mov
idiv
insb
mov
or
insb
jo
sbb
inc
int3
cmpsb
movsl
imul
pushf
ja
inc
and
out
mov
push
sahf
pop
lds
test
dec
push
mov
gs
je
xchg
xlat
mov
cmpsl
insb
test
xchg
add
sti
hlt
sub
imul
cld
stos
stc
insb
mov
fidivrl
pushf
inc
insl
push
or
cltd
xor
imul
shl
rcrl
sarb
mov
sti
insb
mov
adc
add
inc
out
cmpsb
cmp
test
imul
sbb
cmp
and
insb
movsb
pushf
mov
clc
ja
popa
sub
pop
insl
or
cli
pop
out
insb
hlt
das
pop
aas
ljmp
mov
aaa
jp
jle
imul
das
in
add
insb
mov
movntq
out
insb
push
int
mov
out
jno
cmp
jge
imul
pop
adcb
shlb
jnp
gs
sbb
insb
mov
jo
lret
leave
sub
insb
test
cld
cmp
sub
popf
or
imul
scas
or
cmp
xchg
leave
mov
lret
adc
shr
fwait
dec
out
dec
mov
xor
leave
movsl
cltd
sub
dec
fld
cs
dec
lret
shrl
fwait
xchg
xor
mov
push
in
sbb
subb
bound
xchg
lds
lret
mov
leave
adc
sub
add
xchg
dec
popa
push
or
mov
enter
lods
pop
and
mov
insb
add
fsubl
mov
mov
insb
cmp
in
lcall
loop
dec
fcoms
sbb
subl
mov
addr16
pop
insb
lret
push
lcall
iret
jae
sbb
cld
mov
cli
daa
lahf
ljmp
lcall
repz
adc
rcrl
ss
sub
mov
dec
jno
pushf
and
lods
pop
in
call
imul
les
jb
jno
push
pop
pop
insb
popl
mov
lods
aaa
xchg
flds
mov
sub
insb
cmp
scas
push
mov
sub
or
aam
leave
test
in
std
sub
push
orl
in
inc
xchg
call
mulb
cs
loope
call
imull
jge
enter
add
jae
mov
mov
les
insb
fwait
or
dec
call
test
aas
test
gs
roll
in
mov
insb
into
lds
data16
pop
mov
idiv
jl
adc
dec
xchg
and
mov
mov
adc
les
jb
push
sbb
pushf
mov
sub
movsb
arpl
jnp
hlt
and
inc
mov
add
popa
fcomi
in
jl
or
dec
lret
and
cmpsb
xor
in
and
push
icebp
int
jge
or
xor
sbb
fldcw
xor
scas
out
fisubrs
jecxz
out
fnsave
xor
and
insb
push
stc
fisubrl
mov
fisubrs
mov
gs
jo
pusha
insl
sbb
cld
sub
out
cltd
test
push
insb
jno
mov
jns
jnp
test
mov
cli
push
inc
xor
adc
in
adc
insb
xor
ficomps
jp
ja
scas
in
inc
jb
insl
mov
and
sub
jle
shrl
and
or
andl
hlt
ljmp
mov
addr16
lods
sub
mov
lret
insb
imul
jbe
mov
fldcw
fwait
lret
xor
int3
add
shll
loop
jecxz
cld
xor
pop
in
dec
xor
ltr
insb
push
int
out
incl
stos
inc
xchg
and
mov
mov
hlt
mov
out
inc
push
fxch
insb
ja
dec
lret
les
xor
pop
test
push
jae
scas
stos
in
jp
insb
cwtl
add
in
loop
xchg
xlat
adc
lcall
into
popf
sti
push
popa
adc
jle
insb
stc
jmp
jo
adc
test
repz
cmp
aad
xor
mov
jmp
sbb
add
imul
pop
enter
addr16
push
fstpt
mov
insb
icebp
and
mov
mov
imul
insb
lret
push
addr16
dec
cmp
or
adc
mov
sub
imul
stc
lods
int3
xchg
insb
mov
cwtl
xchg
lds
ret
sti
push
pop
push
out
lret
decl
movsl
xchg
mov
mov
das
or
mov
xchg
nop
lahf
sub
cmp
lods
pop
fstps
inc
jmp
and
rcl
mov
add
mov
in
mov
iret
jno
insb
dec
fucom
test
mov
push
outsl
sub
jg
insb
push
in
or
jae
inc
insb
movsb
lods
stos
mov
mov
js
add
insb
mov
pop
es
insb
jno
dec
aad
aas
dec
fs
push
icebp
push
and
lock
cmp
pushf
lret
add
insb
dec
stos
add
ss
sbb
jmp
cld
jle
inc
subl
inc
jge
dec
jle
pop
push
dec
sbb
insb
xchg
push
outsb
xchg
sbb
loopne
in
fnsave
mov
cmc
lds
xor
fwait
insb
sbb
insb
or
loopne
insb
and
pop
stos
or
and
and
into
fbld
or
cmp
mov
jl
insb
xor
sbb
dec
inc
insb
mov
pop
jno
fildl
fcmovu
loope
jb
insb
call
adc
insb
imul
push
sub
test
in
cld
mov
aam
sub
lods
shl
xchg
push
insb
cmpsb
fidivrl
shlb
pop
ljmp
insb
xor
and
int3
inc
inc
insb
ret
pusha
rolb
xchg
mov
mov
mov
jno
dec
imul
xchg
les
jo
hlt
imul
fcoms
lock
outsl
das
jns
jg
mov
stc
je
js
int3
jl
push
pop
sbb
cmpsl
xchg
add
in
repnz
sbb
insb
hlt
adc
movsl
lods
xchg
pop
cmp
les
popf
pop
insb
shrb
scas
jmp
push
repz
sti
xor
jecxz
sahf
imul
push
sbb
test
in
xor
xchg
les
stos
popa
jl
mov
cmpsb
insb
nop
inc
mov
push
cmp
cmp
sbb
cmp
lcall
mov
sbb
insb
roll
add
js
das
pop
push
in
fmuls
pop
xor
mov
outsb
adc
lret
inc
dec
jo
js
iret
insb
aaa
addl
add
shrl
xor
insb
outsl
aaa
xchg
sbb
rorl
imul
dec
sub
xor
fisubrs
arpl
loopne
mov
test
jle
inc
xchg
outsb
addr16
add
xchg
pop
data16
insb
loope
in
mov
insb
lahf
fsts
or
lret
adc
in
loopne
xchg
xchg
sbbl
mov
sub
insb
js
mov
pop
lahf
inc
insb
pop
push
test
out
dec
pop
cli
test
rcr
wrmsr
mov
imul
or
aam
or
jmp
push
insb
mov
and
subl
cltd
imul
xor
ja
cmp
orl
dec
insb
sub
outsl
mov
insb
int
mov
push
dec
mov
xor
ret
pushl
adc
xchg
in
bound
add
and
setl
jle
pop
xor
mov
aad
lea
inc
add
mov
cmp
mov
adc
add
insb
cld
movb
out
cmpb
ljmp
mov
cmp
iret
call
pop
insb
sub
sbb
add
xchg
rcpps
xchg
insb
sub
xchg
cmpb
fucomp
cld
insb
rcr
divb
mov
nop
insb
push
xchg
ficomps
ljmp
xchg
sub
mov
xlat
faddl
jmp
aam
add
insb
cmpsb
sub
ret
mov
insb
ret
shll
rclb
cmp
inc
and
jbe
lahf
adc
sbb
insb
inc
pusha
cmp
sub
scas
adc
cltd
insb
test
adc
cmc
insb
rclb
mov
and
cmp
arpl
insb
sub
pop
rcrl
jp
cmp
std
mov
cmp
cld
xchg
jne
jg
cmpsb
pop
fs
nopl
push
push
insb
sbb
sub
mov
sub
outsb
cmpsl
xor
shr
shl
adc
in
mov
lret
and
insb
mov
in
stc
sbb
xchg
mov
insb
cmp
hlt
or
into
insb
aaa
adc
movsl
insb
or
sub
pop
or
jb
sub
fld
inc
daa
insb
sub
adc
pop
pop
jle
loop
stos
jmp
cmp
loope
scas
mov
xor
fucomp
push
and
xlat
or
nop
mov
sub
mulb
in
push
int3
dec
pop
es
int
aam
ret
pop
icebp
shlb
imul
xchg
out
cmpsb
fisubl
divl
fcoml
dec
xor
pop
mov
or
insb
dec
or
mov
sbb
push
insb
jl
jbe
and
pop
sub
sbb
add
sub
mov
push
mov
hlt
jno
pop
cwtl
cmp
insb
or
mulb
insb
jns
test
insb
loopne
mov
push
fcomps
add
mov
sbb
mov
push
pop
mov
subl
jns
negl
xchg
dec
arpl
insb
iret
divb
bound
jns
sti
xor
mov
xor
sub
mov
nop
repnz
xchg
jmp
or
popf
and
pop
sbb
push
adcl
hlt
pushf
insb
xlat
lds
dec
push
inc
fisubs
dec
lods
popa
add
shr
repz
popf
movsl
dec
sarl
shl
sub
and
mov
push
and
or
imul
or
aad
sbb
imul
cmp
test
insb
mov
icebp
popa
cmpsl
and
data16
aam
cld
pop
int
xor
mov
repz
mov
cmp
insb
loope
sbb
and
fisubrs
dec
mov
aam
pop
xchg
insb
inc
lahf
push
cwtl
sbb
out
dec
scas
rorb
jl
inc
mov
daa
lret
jle
scas
adc
jb
dec
callw
inc
add
stos
movsb
sbb
imul
aam
rol
hlt
std
sbb
pop
inc
clc
mov
in
insb
sbb
ucomiss
jbe
imul
jecxz
icebp
lea
xor
enter
and
insb
sbb
xor
les
jbe
out
insb
lods
enter
pushf
sub
insb
xor
pop
push
insb
iret
mov
pop
aaa
add
mov
shr
cmpl
xchg
fstps
icebp
je
push
insb
call
mov
cmpsb
pop
pusha
pushf
sbb
pop
dec
sub
cmpsl
insb
into
fdivrl
mov
repnz
cmp
ja
jl
mov
lods
bound
sbb
mov
cmp
mov
pop
push
imul
enter
fmuls
movsb
push
int3
dec
insb
scas
scas
les
ret
lret
imul
ljmp
or
adc
imul
and
stos
test
les
sbb
adc
ja
insb
incb
jmp
add
insb
pop
test
insb
sbb
sbb
sbb
test
popaw
xchg
sub
cmp
gs
xor
sub
xor
jnp
jp
add
ja
repz
jmp
test
and
int3
loopne
es
dec
mov
push
sarb
mov
stos
ja
lcall
out
rorb
lahf
sbb
sahf
sbbl
shll
lds
insb
mov
and
leave
inc
push
test
subb
inc
insl
in
mov
sbb
sub
test
xor
cmp
popa
ja
jl
pop
test
push
dec
rcrl
pop
mov
cli
lret
lods
pusha
push
xlat
add
jg
sub
xchg
out
insb
cs
inc
mov
insb
mov
xchg
sbb
je
std
xor
xchg
imul
popf
mov
mov
insb
dec
rol
inc
dec
ret
ret
lea
gs
pop
cmp
repnz
insb
pop
repz
out
xchg
insb
dec
mov
scas
outsb
popa
mov
insb
enter
cmp
test
in
mov
in
jmp
dec
out
and
insb
ror
outsb
xchg
ret
jae
lods
inc
dec
mov
std
out
mov
gs
in
je
jl
pop
xchg
int
out
mov
cmp
xchg
cvttps2pi
out
push
adc
sub
cmp
xchg
insb
and
xchg
out
imul
or
addb
sahf
push
mov
cli
arpl
hlt
lahf
lods
insb
cmp
test
inc
or
or
repnz
scas
jno
cld
fs
sub
roll
inc
bswap
sbb
out
insb
jge
test
mov
insb
pop
je
push
jmp
push
dec
fnstcw
mov
cmp
mov
fsubrl
cmp
sub
jmp
sbb
outsl
jnp
popa
data16
pop
loop
insb
mov
mov
aam
or
out
xor
int
cs
inc
insb
cld
clc
pop
xchg
scas
mov
adc
xchg
and
call
loop
inc
mov
insb
mov
cmp
insb
aas
fwait
cmp
sti
and
repnz
xchg
adc
inc
insb
sbb
sub
mov
addr16
popa
xchg
inc
lods
or
and
push
and
int3
gs
adc
mov
cltd
push
xor
fildll
adc
out
insb
cmp
sahf
jns
jge
insb
iret
aam
mov
pop
pop
dec
insb
dec
pop
mov
loop
sub
sbb
push
cmp
insb
add
cwtl
push
xchg
mov
shlb
sbb
adc
mov
ss
jb
arpl
out
sbb
add
hlt
insb
jmp
xlat
pusha
push
aas
insb
daa
mov
cmpsl
and
das
and
insb
mov
pop
mov
iret
add
xchg
sub
insb
and
pop
imull
mov
int
inc
fsubrs
out
insb
inc
or
add
outsl
insb
mov
mov
mov
cmp
int3
and
aad
insb
clc
pop
out
add
imul
out
mov
stc
push
mov
jo
jno
dec
push
ficompl
cwtl
inc
and
loope
in
jno
sub
ret
mov
insl
insb
or
data16
inc
push
rep
sbb
in
push
push
cmp
and
mov
shrl
out
push
sbb
push
mov
movsb
xor
mulb
adc
cwtl
xor
push
fcmovb
movsl
jb
arpl
das
je
dec
insb
repnz
ljmp
nop
outsl
sub
push
push
mov
leave
push
sbb
dec
shr
lods
push
pop
jge
gs
sbb
sub
dec
sub
decb
sub
icebp
rorl
shrl
fisubs
shll
js
pop
sub
lds
xorb
mov
or
sub
in
test
loop
xchg
jmp
or
hlt
stc
fmuls
jbe
jp
mov
dec
insb
mov
lods
int3
les
pop
cli
cltd
mov
inc
insb
dec
push
stc
cmp
dec
jl
stos
subb
dec
je
rorb
mov
sbb
add
popa
mov
sti
ret
in
std
movsl
cmpsl
inc
stos
stos
insb
scas
jle
pop
cmp
sbb
cs
in
arpl
hlt
and
pop
add
adc
outsb
imul
imul
or
pop
xchg
test
insb
je
push
popa
subl
inc
pop
jb
jmp
and
xlat
lock
pop
cmp
out
xchg
int
incl
mov
jo
repz
inc
mov
inc
int
cmc
lods
push
repnz
sub
in
lds
fucomip
jmp
sub
pop
enter
fisttpll
sub
lret
cmpsb
sti
aad
pop
mov
loopne
or
lea
cmpsl
xor
lods
inc
push
imul
aam
insb
ret
push
push
dec
jno
mov
sbb
sti
push
pop
mov
push
sub
bound
add
cmc
push
inc
insb
mov
push
jnp
lret
lret
out
or
mov
jecxz
data16
andl
into
push
push
sub
xor
cmp
insb
inc
cli
mov
fists
insb
push
pushf
lds
or
or
aaa
mov
sbb
mov
pop
fadds
inc
mov
pop
push
pop
sub
xor
je
jae
dec
gs
mov
mov
movsb
jmp
cs
les
adc
adc
mov
xchg
and
das
test
inc
cmp
sti
fildl
sbb
push
push
sbb
insb
pop
addb
and
lahf
loop
movsb
test
cmp
insb
push
cs
or
pop
loopne
int
jg
call
jge
inc
add
push
sub
inc
pop
gs
leave
pusha
popf
mov
out
pop
pop
lahf
and
imul
mov
in
sub
inc
stos
andl
inc
and
iret
fistpl
negl
jns
aam
insb
jle
push
and
push
outsl
mov
push
cmp
icebp
sahf
insb
mov
mov
movsl
xchg
jecxz
sub
xlat
insb
xchg
cmp
xor
sbb
adc
mov
insb
cld
jle
mov
jns
in
insb
push
test
fstpl
ret
mov
mov
gs
adc
cmpsl
outsb
mov
pop
sti
loop
inc
insb
test
mov
or
cmp
aas
push
adc
mov
idivb
clc
adc
push
sub
insb
or
or
insb
aaa
xchg
lods
mov
and
imul
in
lret
inc
insb
xchg
xchg
xor
dec
loopne
lods
insb
mov
adcl
mov
xor
mov
xor
mov
cmp
or
enter
mov
iret
push
outsb
pop
test
popf
xlat
sbb
insb
add
test
int
jne
pop
mov
insb
push
xor
and
xchg
pop
fstps
je
jns
outsl
rcr
pusha
dec
push
mov
and
push
sub
mov
loopne
imul
sbb
sbb
dec
add
gs
gs
xor
in
cmpsl
cmp
fs
push
jbe
popf
mov
lahf
movsb
jae
psrad
hlt
mov
insb
aaa
sbb
dec
ret
test
jp
jmp
dec
pop
mov
add
imul
cmpsl
ljmp
lds
pop
loop
call
loope
xlat
sti
popf
dec
xor
sub
nop
mov
popa
pusha
gs
jl
pop
into
dec
es
xor
insb
add
xchg
jnp
fidivs
rorl
mov
xchg
or
mov
jo
insb
add
in
imul
and
daa
mov
insb
jmp
pop
out
lds
mov
push
stos
jecxz
and
dec
pop
out
pop
xchg
xchg
dec
int3
rolb
sarl
xchg
jns
push
rcr
cmpsl
adc
xchg
nop
jno
xlat
jnp
js
int3
fs
cwtl
insb
mov
jo
popa
sti
mov
jge
inc
pop
pop
inc
or
mov
rcr
pusha
mov
outsl
outsb
pop
dec
int
sub
loope
cmc
mull
adc
in
jo
or
push
lods
mov
cwtl
xchg
pushf
outsl
insb
incb
fidivs
push
push
frstor
lds
cltd
sbb
fnstcw
insb
daa
out
std
push
mov
xor
pop
mov
jae
out
insb
mov
and
aas
ret
cmc
insb
rolb
inc
sbb
je
gs
lds
mov
es
insb
out
cmp
xorb
insb
push
ret
inc
add
insb
shlb
push
jge
cmp
cli
insb
mov
lock
push
insb
outsb
push
adc
insb
ss
mov
xor
mov
in
insb
fidivrs
push
mov
scas
mov
gs
mov
imul
les
pop
lcall
mov
jp
outsb
test
cmp
pop
iret
insb
mov
mov
sub
repz
sbb
add
dec
jbe
lods
test
js
pop
mov
cmp
push
xor
iret
jo
pop
inc
outsl
pop
stos
xor
add
in
mov
push
daa
inc
and
and
imul
mov
insb
jmp
into
ror
aam
xor
dec
inc
movsl
push
insb
int3
fwait
mov
cld
imul
and
xor
int
xchg
insb
dec
loopne
mov
pop
adc
insb
cmpsb
loope
pusha
adc
call
add
and
mov
js
insb
lret
es
movsl
mov
clc
insb
cmpl
xchg
scas
insb
rorl
pusha
scas
hlt
shrl
test
jmp
mov
rcl
int3
clc
insb
scas
push
inc
xor
fisubs
fmull
lret
dec
add
iret
gs
daa
fwait
shrb
mov
mov
add
insb
in
sarb
loopne
stos
imul
and
mov
or
mulb
insb
fdivrl
bound
cli
jg
push
dec
xlat
cs
in
faddl
push
fcomps
insl
lds
xchg
dec
das
push
insb
pop
aas
fs
push
xor
mov
repnz
sub
mov
jle
xchg
pusha
call
or
rorb
insb
jbe
cmp
insb
cmpsl
xchg
cld
xchg
pushf
repnz
hlt
mov
sub
dec
bound
movsb
push
in
mov
fiadds
insb
cltd
mov
fdiv
sbb
insb
into
lret
outsl
sbb
idivl
pop
in
mov
sub
cmp
aad
leave
cmpsl
out
or
xlat
mov
jo
pop
imul
inc
stos
mov
inc
jb
mov
negl
mov
insb
xor
push
sub
inc
test
addb
scas
test
mov
fisttpll
mov
test
insb
scas
hlt
and
sbb
ret
in
mov
and
es
sbbb
adc
and
sti
mov
test
cli
rclb
cmp
sub
lods
sahf
mov
dec
xor
sbb
loopne
push
jg
and
xchg
or
and
ja
insb
mov
scas
mov
int
outsl
imul
jl
sub
insb
cltd
call
dec
adc
stc
sub
imul
rorb
and
or
inc
in
or
mov
adc
xchg
subl
dec
insb
aad
jmp
loopne
ds
adc
lret
cltd
je
in
test
cmpsl
sub
lcall
loopne
jp
repnz
xor
and
dec
or
subb
jle
in
push
push
inc
dec
lods
cmp
in
sbb
insb
shlb
or
push
xor
jbe
inc
inc
xchg
mov
jp
fs
int
pop
clc
js
rorl
pusha
jecxz
mov
in
inc
insb
or
jp
or
ljmp
leave
loopne
sub
fimuls
adc
dec
jl
insb
cmc
lods
fwait
repnz
into
adc
add
in
xchg
insb
sti
xor
int3
insb
mov
mov
adc
or
sbb
subl
pop
jnp
jo
imul
pop
mov
loopne
cs
cli
insb
push
js
movsl
sbb
jbe
insb
mov
out
mov
jp
ljmp
mov
addr16
xchg
insb
int3
ja
outsl
inc
lcall
jno
aam
mov
insb
test
mov
insb
arpl
jb
pop
fisubs
insb
in
jns
push
outsb
pop
cmp
sub
push
icebp
sbb
gs
xchg
int
popf
push
inc
out
addr16
in
out
and
daa
cli
insb
inc
adc
insl
xor
repz
dec
loopne
insb
or
sub
mov
lahf
loope
insb
fldcw
push
out
jnp
stos
adc
xchg
adc
sub
sarl
mov
cmp
insb
fcmovb
xchg
mov
pop
xchg
test
test
fs
in
push
xor
lahf
sub
fiaddl
mov
fadd
insb
sub
js
fmul
push
mov
xor
int3
adc
icebp
imul
mov
sar
cmpsb
pop
daa
rcr
jl
sbb
mov
dec
test
stc
dec
xor
jge
in
lcall
xchg
push
pop
sbb
adc
orl
iret
insb
jbe
inc
mov
sti
and
mov
imulb
jb
cmp
inc
addr16
push
push
test
jle
insb
lods
add
mov
mov
fnsave
dec
ljmp
adc
jnp
call
pop
add
push
je
or
jl
cs
addr16
sahf
cmp
push
jns
mov
in
gs
or
lret
insb
fldcw
xor
in
inc
insb
pop
popa
sbb
push
insb
ja
cmp
xor
mov
mov
mov
jl
dec
lods
jne
ret
xchg
fsubs
orl
in
ljmp
mov
loopne
movsb
jae
xor
and
std
mov
pop
jg
sub
cwtl
dec
add
scas
lret
add
mov
mov
or
and
insb
shrb
lret
jl
insb
push
mov
mov
cwtl
add
push
clc
js
lods
adc
insb
in
mov
xchg
add
dec
insb
xlat
clc
and
push
std
xor
cld
adc
and
into
imul
cmp
or
outsb
test
test
inc
or
lods
fcoms
shll
insb
jecxz,pt
mov
pop
jle
int3
test
insb
bound
push
insb
sub
sbb
gs
cld
out
out
jl
push
xor
aam
jge
sti
inc
insb
das
xor
divb
xchg
stc
push
and
jnp
insl
add
mov
sti
ljmp
ljmp
sahf
adc
push
jg
repnz
dec
mov
or
fiadds
pop
shrb
jae
inc
mov
dec
mov
pushf
mov
mov
jae
je
lods
xor
fs
popa
jl
cs
test
mov
subb
das
adc
mov
fidivrl
mov
adc
and
insb
stc
dec
aam
sbb
insb
gs
cmp
cmc
insb
mov
jecxz
xor
insb
push
setns
xor
sbb
lock
insb
add
dec
mov
jns
or
lret
loope
xchg
adc
aad
fidivs
jb
and
jl
stc
insb
dec
push
pushf
xor
and
sti
adc
out
jbe
insb
jb
mov
mov
popa
cmp
mov
push
lods
out
nop
insb
mov
je
repnz
adc
and
loopne
syscall
sbb
stos
jecxz
or
xor
out
fwait
imul
cmc
aaa
jecxz
test
pusha
cmpsl
popa
test
lret
popf
in
adc
ljmp
insb
std
adc
insb
xor
in
push
out
shrb
or
mulb
cli
xor
int3
cmp
insb
lods
push
xchg
xor
push
xor
mov
mov
mov
cmp
cs
sbb
insb
pop
les
inc
daa
add
and
cmp
insb
cld
pop
add
pop
insb
dec
shll
notl
mov
insb
xchg
and
mov
jp
jnp
shrb
hlt
add
insb
and
enter
jne
push
mov
test
je
ja
dec
js
push
insb
jae
fsubl
insl
and
mov
mov
jmp
fisubrs
push
mov
inc
xor
mov
fwait
dec
xchg
jl
or
mov
lret
sub
cwtl
iret
mov
jecxz
xor
mov
adc
int3
insb
shrb
dec
sbb
aam
inc
es
mov
pop
xchg
fldt
lahf
insb
pop
test
imul
dec
mov
mov
insb
jns
mov
push
fimull
insb
jo
inc
ds
mov
xchg
insb
mov
fiadds
movsb
cmc
arpl
xchg
mov
xchg
and
push
or
push
iret
sub
pushf
mov
stos
aam
cmpsl
lcall
cmp
js
les
dec
pop
pop
cmp
in
mov
leave
insb
cltd
push
int
xor
pop
pusha
gs
adc
jl
rcrb
mov
sub
das
dec
add
scas
pushf
outsl
mov
mov
sub
imul
shrl
insb
cld
push
pop
ss
xchg
je
call
pop
pop
dec
out
sti
inc
cld
hlt
imul
insb
push
jns
out
repz
mov
imul
cmp
lods
jbe
popa
in
xorl
int
push
sbb
lret
xor
sahf
push
or
mov
jne
add
enter
insb
inc
jns
or
sarl
dec
sbb
rcr
adc
xchg
out
pop
pushf
cltd
xor
pushf
jbe
or
insb
pop
xchg
dec
inc
jle
insb
fnstenv
ret
push
shr
mov
fwait
and
pushf
shll
xchg
and
push
inc
push
in
push
popf
mov
insb
dec
jg
cmp
and
insb
jecxz
out
inc
clc
pop
add
xor
lods
mov
insb
test
jno
inc
dec
push
imul
adc
sahf
xor
mov
cmp
jno
rep
loop
movsl
ss
xchg
out
xchg
mov
jge
push
stc
mov
sub
aas
out
cmpsb
movsb
pop
insb
adc
mov
fistpl
or
shl
and
repnz
adc
in
loope
insb
out
mov
test
insb
fldenv
rclb
lahf
jno
out
or
hlt
insb
les
outsl
insb
add
push
mov
mov
push
mov
mov
dec
jmp
sti
jl
inc
dec
xchg
push
inc
fildl
jb
ret
mov
insb
dec
xor
or
into
insb
xlat
mov
shll
jbe
lahf
nop
lods
add
cmpsb
mov
imul
sub
aam
inc
scas
cmpsl
in
sbb
xchg
loopne
mov
pop
rorl
movsb
aas
adc
or
dec
faddl
pop
or
insb
sub
es
mov
or
sbb
dec
xlat
add
cmpb
scas
je
cmp
push
insb
lret
mov
popa
mov
arpl
sub
add
imul
testb
das
sti
dec
jne
arpl
call
pop
in
adcl
push
cmc
sbb
imul
daa
adc
jecxz
testl
sub
stos
adc
aas
dec
push
negb
lds
adc
xorl
jne
mov
cld
mov
xchg
insb
ret
mov
and
test
jmp
in
hlt
sub
pop
adc
test
mov
and
push
push
mov
sbb
ds
or
loop
out
jmp
add
xchg
sti
xchg
jge
hlt
nop
insb
pop
lret
adc
out
mov
cmpsl
in
subb
mov
or
shll
inc
insb
rorb
sbb
repz
ljmp
xchg
fwait
cli
or
push
cld
jmp
inc
ret
and
jnp
fidivrl
jae
push
cmpsl
xor
cmp
popf
test
sub
dec
mov
mull
lds
cmpsb
push
int3
cltd
fs
add
mov
mov
and
insb
push
fnstsw
jg
movsb
cmp
jo
add
pop
insb
mov
std
fisttps
inc
push
jg
and
out
mov
inc
sti
and
and
sub
jnp
xchg
jb
adc
pminub
dec
xchg
gs
aam
xor
inc
shrl
mov
insb
xchg
pop
icebp
and
xor
dec
js
data16
push
fisubs
mov
insb
clc
pop
sub
rcrb
in
subl
pushf
dec
cmp
pop
jnp
jae
push
jl
xlat
insb
pop
inc
leave
lods
cmp
clc
sub
push
xor
insb
mov
mov
pop
insb
fwait
sub
and
mov
pusha
xchg
mov
bound
adc
rcr
mov
push
push
cmp
mov
mov
icebp
adc
clc
or
and
aaa
jge
fimull
in
adc
lcall
lcall
stos
subb
and
push
mov
or
push
test
insb
cmp
pop
loopne
insb
push
in
mov
sarb
insb
mov
jecxz
insb
sub
sub
lahf
sbb
sub
mov
cld
or
rcrb
mov
xchg
mov
and
fcomip
sbb
or
daa
mov
mov
notl
cmc
andl
push
jmp
mov
insb
pop
dec
add
stos
xor
jnp
mov
inc
mov
in
shrb
sti
mov
mov
jns
sbb
xchg
rorb
ja
mov
imul
push
dec
stos
ds
and
mov
adc
lret
cmp
stc
insb
int3
mov
mov
insb
mov
shl
lods
pop
aam
subb
gs
outsb
lock
in
dec
adc
je
imul
fnstcw
mov
rorb
inc
lods
jp
aas
or
push
insb
mov
sub
stc
insb
adc
repnz
sub
and
and
pushf
and
insb
fwait
pop
fiaddl
inc
jno
insb
dec
lods
testb
scas
test
push
adc
push
mov
push
jo
sbbb
push
mov
add
insb
or
repnz
pop
mov
in
add
pop
xor
cmp
jmp
stos
fsubl
js
lret
sbb
mov
pop
inc
subb
push
mov
sbbl
push
xor
mov
iret
shrl
out
inc
pop
adc
out
push
insb
adc
jo
push
xchg
gs
inc
insl
clc
fcmovne
add
and
insb
jle
mov
in
xchg
sub
int
or
insb
shll
std
stos
insb
mov
jbe
dec
jg
insb
movsl
add
dec
add
fistl
in
pop
add
sub
insl
push
pop
imul
mov
pushf
mov
pop
rcl
add
int3
cld
xor
loopne
pop
scas
bound
xor
cmp
mov
sub
cli
loope
nop
push
fsubrs
stc
push
enter
insb
pop
sub
xchg
jo
xchg
pop
cli
lea
mov
lock
jnp
dec
in
dec
insb
rcrb
or
mov
gs
hlt
stos
xchg
dec
in
jp
ljmp
jb
push
imul
int3
inc
ljmp
xchg
test
push
xor
xor
hlt
push
mov
pop
xchg
mov
aas
gs
vmovsd
xchg
mov
das
insb
push
and
jb
jnp
insb
into
adc
dec
lea
sbb
push
insb
pushf
xchg
cmpl
clc
mov
lret
daa
mov
mov
xchg
imul
ss
push
addb
cmp
cltd
sbb
test
out
imul
jp
mov
cwtl
jecxz
and
xor
lods
aas
insb
out
jmp
mov
mov
or
shll
mov
xor
mov
negb
mov
push
sub
cmp
in
lret
dec
sub
idivl
jo
inc
or
out
adc
stc
pop
cmp
mov
das
push
lds
cmc
cmpsb
and
mov
test
mov
sub
cs
sti
jmp
pop
enter
into
fs
xchg
dec
ret
mov
insb
icebp
adc
mov
cmpsb
ds
pop
insb
add
and
mov
dec
cmpsb
xor
pop
and
adc
cmp
rep
lret
sub
cltd
xor
popf
in
pushf
in
in
sub
jge
pop
test
push
or
cmp
daa
insb
popf
fucom
call
insb
repnz
addr16
add
js
dec
pushf
subl
ss
movsl
dec
adc
pop
stos
push
xchg
in
dec
incl
repnz
inc
lods
or
pop
test
cmp
mov
pop
imul
jns
clc
fildll
sbb
xor
mov
lahf
ljmp
insb
test
aaa
push
cmp
mov
pop
in
pop
insb
xchg
lret
les
jb
adc
dec
sbb
imul
lcall
xchg
pop
push
insb
add
das
loope
decl
insb
bswap
xorl
test
out
nop
arpl
ljmp
mov
insb
push
js
ljmp
cwtl
lret
or
mov
stos
pusha
adc
push
pop
pushl
adc
xlat
pop
jmp
lahf
jle
sbb
adc
aad
test
mov
icebp
cmp
es
mov
imul
cs
pop
and
insb
or
xchg
pop
jge
sub
ret
push
sub
mov
insb
negb
xor
popa
les
movsb
jno
pushf
daa
out
imul
cmpxchg
inc
sbb
xor
jmp
push
push
imul
gs
cmp
mov
pop
stos
testb
int3
and
arpl
scas
xchg
notl
mov
cmpl
outsl
nop
pop
xchg
fsubrl
jo
lea
popf
sbbb
mov
xor
pusha
or
fxch
gs
mov
pop
pop
mov
mov
insb
mov
lds
imul
jl
call
jmp
pop
mov
fiaddl
and
shrb
adc
lods
imul
jmp
sub
ss
out
cmc
mov
cmp
aas
scas
push
pushf
push
ret
xor
xchg
das
mov
insb
rolb
and
xor
popa
sbb
adc
mov
xchg
es
mov
pushf
int3
aad
and
add
clc
fsubrl
xchg
dec
ljmp
ja
push
dec
xchg
aad
cmpsl
movsb
andl
in
cld
mov
inc
xchg
add
adc
or
fwait
xor
int3
xlat
jb
cmp
mov
fsubrs
xor
shlb
inc
sahf
cltd
insb
lods
jmp
xchg
insb
mov
add
pop
insb
in
in
xchg
out
fmull
fdivs
push
push
icebp
addr16
cmp
cltd
dec
add
out
shl
rclb
in
push
sub
jmp
jne
out
gs
inc
jns
pop
pop
sbb
mov
fucompp
jae
dec
add
pop
jae
aad
and
sbb
in
je
call
and
push
in
mov
aaa
pop
nop
push
and
lock
xlat
xor
mov
insb
jge
pop
sbb
outsb
push
insl
mov
sub
addr16
gs
jp
sbb
cmpl
movsl
aam
push
mov
sub
xor
or
fistl
cmp
fs
test
in
test
xor
ret
dec
fisubl
mov
push
xorb
jnp
test
push
ja
lods
pop
push
fs
mov
push
pusha
jg
xor
push
out
jnp
dec
hlt
and
sbb
das
xor
notb
out
sub
jb
xchg
test
add
stos
sbb
in
mov
pusha
stos
pop
mov
cmp
push
jb
jge
jecxz
aam
test
sbb
mov
push
jne
cmp
pop
je
xor
jmp
jbe
jle
pusha
xorl
scas
add
xor
xor
xchg
rcll
mov
arpl
mov
mov
push
stos
sbb
scas
imul
jae
outsl
je
xchg
pop
fsubrs
or
cmpsb
leave
xor
push
leave
jl
lcall
fidivrl
sub
xchg
mov
xor
jae
xchg
ret
push
jmp
xor
je
xor
std
cmpsl
sbbl
testb
pop
in
and
rcrb
sub
loope
pop
push
sbb
loope
addr16
fisubl
and
pop
push
inc
stos
inc
inc
movsl
push
or
sbb
sub
jnp
stos
pop
sub
test
out
xchg
pop
shrl
sub
aaa
cmp
xchg
pop
sti
ja
subb
mov
pop
push
cmpsl
sbbl
aas
sub
sahf
fstpt
sbb
mov
arpl
mov
test
inc
sti
add
jno
aam
mov
int3
dec
or
jo
fs
fiadds
sbb
push
xchg
data16
inc
mov
in
jae
aaa
inc
push
dec
les
stos
fisubrl
dec
xchg
and
inc
adc
jl
mov
test
shrl
xor
jnp
push
jecxz
cmp
imul
test
outsl
push
cltd
ror
jmp
lods
sar
insb
mov
std
mov
lods
mull
push
pusha
loope
or
lcall
out
adc
insb
clc
push
xor
adc
xchg
test
pop
xchg
jbe
cmpsb
sub
insb
repz
ds
leave
pop
aaa
xorb
out
mov
mov
cmp
mov
shll
fidivrs
ljmp
pop
idivb
aad
fcompl
adc
mov
lods
adc
insb
cmc
and
call
insb
std
insl
inc
fisubs
mov
dec
stos
inc
sub
xchg
mov
push
pop
pushf
fsubrs
stos
xor
dec
jl
insb
inc
mov
hlt
push
daa
add
mov
lcallw
mov
jp
aam
dec
insb
frstor
mov
out
test
cltd
int3
jns
fwait
lods
pop
jb
fisubrs
insb
sbb
or
insb
pusha
mov
xchg
ret
imul
test
lcall
bound
mov
xchg
adc
insb
pop
outsl
cli
mov
mov
xor
pop
dec
lods
insb
sbb
inc
jbe
add
fsub
and
mov
insb
adc
sub
movsb
mov
jg
stc
into
xor
jbe
dec
cmp
cmp
scas
and
push
or
in
fnstcw
push
xchg
inc
cmp
pop
gs
js
jbe
in
popf
xchg
dec
push
aaa
adc
dec
or
inc
pop
imul
sbb
int
cmp
stos
dec
imul
adc
sub
add
mov
xchg
cs
push
xor
cmp
add
push
lret
fwait
dec
or
pop
or
jo
jge
push
lods
insb
adc
inc
sti
jle
insb
cwtl
aas
inc
or
das
or
es
pushf
aam
int3
ficoml
xor
cmpb
lds
fcompl
inc
pop
add
jle
inc
into
sub
jne
insb
add
shrl
aas
mov
mov
cmpsb
stos
sbb
sbb
enter
icebp
mov
test
out
divb
jmp
dec
jo
sub
mov
scas
jle
sbb
cld
adc
xlat
and
rcll
repz
fidivl
test
in
mov
cltd
pusha
sub
stc
mov
bound
cmp
mov
add
dec
fwait
dec
xor
clc
and
jns
sub
insb
das
jl
sbb
push
and
jmp
int3
mov
insb
ret
les
cmpsl
sub
sbb
pop
mov
xchg
add
sbb
cmp
lea
dec
icebp
into
mov
dec
mov
sub
cmp
sarl
pop
insb
int
fsubs
in
js
inc
sbb
test
and
add
inc
sub
pop
push
mov
imull
pop
push
jnp
dec
inc
push
arpl
pushf
xchg
mov
idiv
loop
mov
ds
mov
and
aam
lock
jo
xor
or
mov
mov
insb
stos
sbb
repnz
pop
scas
insb
lret
test
daa
pop
das
cld
in
frstor
sbb
test
and
dec
jmp
insb
test
sub
inc
daa
mov
bnd
shll
insb
stos
aaa
stc
loop
dec
dec
call
jns
sbb
and
mov
ljmp
adc
pop
push
cmc
in
insb
rcrb
mov
pop
imul
gs
ds
dec
icebp
lret
and
sbb
stc
insb
shll
xchg
inc
arpl
mov
ss
adc
jg
bound
push
fdivrl
pop
cs
insb
push
movsb
imul
pop
das
dec
insb
pop
pop
or
mov
movsbl
adc
insb
ret
cmp
mov
mov
insb
ret
pop
lds
insb
subb
mov
push
dec
insb
das
repnz
push
sarb
test
inc
test
and
repz
cli
pop
gs
rclb
inc
repz
xchg
std
sub
iret
into
insb
mulb
fs
leave
subb
add
lea
out
cmpsl
insb
push
inc
pusha
pop
inc
adc
cmp
outsl
daa
lret
mov
push
mov
push
das
ss
movsb
pcmpeqw
pop
movsl
cld
jae
push
xor
dec
cmpb
sbb
lds
sahf
repz
out
sub
add
insb
mov
lock
movl
and
adc
insb
popa
cmp
cmp
insl
mov
and
dec
pop
mov
sub
add
mov
insb
fisubl
out
lret
insb
add
inc
mov
jmp
mov
or
fwait
ja
jb
dec
stos
insb
jnp
sub
lret
imul
sub
lret
inc
movsb
dec
inc
imul
test
or
mov
js
insb
jg
mov
and
dec
aas
es
xchg
mov
add
insb
out
adc
pop
sbb
ds
sub
in
jg
push
mov
bound
xor
stc
shrb
xchg
pushf
adc
imul
sbb
push
mov
push
insb
pop
and
dec
imul
out
fldcw
shr
push
or
xor
cmp
xchg
out
mov
aam
mov
adc
cwtl
in
dec
push
insb
fildl
loope,pn
insb
or
push
and
shrl
inc
xchg
test
mov
push
test
es
repnz
dec
scas
imul
insb
shr
int3
sub
cmp
cmc
movsl
aam
adc
sub
mov
push
cli
imul
jmp
mov
dec
sahf
movsb
js
daa
je
dec
call
rcl
int3
cmpsl
ds
pop
push
and
pop
jecxz
add
xchg
in
mov
mov
in
lock
inc
or
adc
lcall
sbb
add
in
je
subb
rclb
arpl
in
mov
dec
jle
test
mov
out
push
scas
sub
insb
or
cltd
xchg
test
xorl
hlt
xor
sub
gs
dec
out
push
mov
mov
cmp
jo
xorl
adc
push
mov
insb
add
sub
pop
imul
pushf
clc
stos
xorb
loopne
ja
push
xchg
sti
dec
fildll
xchg
repnz
inc
jne
xor
jns
pop
ror
xchg
test
cmp
stos
mov
and
in
sub
lret
insb
jle
add
xor
inc
xchg
mov
push
sub
in
bound
stos
jbe
push
mov
xor
insb
jmp
jp
dec
pop
xor
in
pushf
inc
hlt
aaa
mov
gs
cli
call
adc
inc
insb
mov
adc
insb
jo
sbb
insb
pop
lea
insb
jo
dec
cld
mov
add
insb
jp
sub
push
insb
xchg
xor
add
sbb
pop
sbb
sub
or
adc
mov
pop
sbb
iret
fimuls
insb
out
pusha
push
jns
loop
pop
lea
cld
loopne
mov
arpl
cs
push
nop
and
das
inc
jns
repnz
sbb
mov
testb
out
insb
js
mov
das
jno,pt
mov
or
repnz
aas
lret
outsl
in
gs
and
hlt
xchg
ljmp
jp
sub
mov
repnz
jb
sbb
or
xlat
lea
es
mov
jae
xor
jb
jbe
repz
in
aad
imulb
aaa
mov
bndstx
dec
jp
imul
subl
arpl
cmpb
xchg
aaa
cld
add
xchg
add
into
sbb
iret
clc
js
stos
push
pop
hlt
es
call
fwait
jmp
fisubs
add
call
dec
push
loop
mov
fs
xor
mov
fldcw
mov
or
shl
push
imul
cmpsb
pusha
pop
xchg
push
in
mov
add
inc
cmp
out
xlat
dec
sbb
outsl
sarb
mov
cwtl
or
dec
push
idivl
push
movl
andl
sub
scas
shl
rcl
cmp
lock
fistps
jle
inc
mov
in
jnp
sti
insl
mov
pusha
into
dec
fs
sub
push
insb
jns
push
sti
lahf
ja
sub
pop
jle
outsl
addr16
subl
shrl
and
js
call
js
fsubrl
pop
mov
testb
fucom
mov
sbb
jmp
iret
sub
cmp
arpl
ljmp
xor
add
in
cltd
fwait
xor
popf
lret
mov
mov
call
in
insb
pop
add
fists
jno
or
adc
cmp
xchg
cmc
iret
insb
dec
ds
fsubrl
mov
stc
scas
data16
sti
aam
insb
test
jns
lods
sbb
je
jae
mov
xchg
insb
fs
mov
mov
cli
hlt
into
iret
dec
mov
adc
imul
pop
mov
and
loope
in
sub
push
inc
mov
jle
lods
aas
jno
imul
add
dec
lods
int
mov
lcall
loop
aaa
push
orb
push
pushf
insl
mov
mov
in
mov
dec
dec
and
cli
scas
push
sub
enter
mov
mov
daa
add
les
cmp
repnz
stos
loop
test
mov
or
xchg
test
ret
push
lret
insb
arpl
push
insb
xor
jbe
mov
and
mov
insb
dec
leave
xchg
insb
and
mov
dec
int
xchg
insb
fnstsw
mov
ljmp
fidivrl
and
pop
adc
lds
dec
ds
in
jecxz
neg
insb
or
or
or
insl
test
sbb
push
hlt
and
mov
jge
insb
lds
in
push
adc
sbb
repnz
inc
mov
mov
inc
sub
pop
insb
mov
js
jecxz
ret
xchg
or
mov
insb
je
mov
sub
test
push
fsubs
aad
jge
int3
int
divl
xchg
shl
insb
mov
fsubrs
aaa
shrb
aam
shrb
lea
jg
push
adc
out
std
dec
scas
mov
test
xor
mov
lahf
mov
cmp
scas
jge
xchg
in
lds
xchg
js
sub
jle
aad
iret
sub
and
ljmp
fildl
push
inc
sub
mov
aad
or
sbb
aad
xchg
imul
test
insb
das
loop
sbb
xchg
pop
sarl
outsb
test
jbe
lds
mov
jge
sub
sti
pop
insb
sub
fisubrl
adc
push
cmp
clc
mov
in
or
icebp
lds
mov
insb
push
jmp
add
insb
cwtl
mov
lds
fcomps
insb
or
or
push
test
nop
cmp
adc
insb
mov
jecxz
cli
dec
mov
cli
add
sub
ficoml
sub
jl
insb
shrb
jmp
adc
pop
xlat
shr
fsubp
mov
dec
pop
inc
clc
aam
xor
sub
pushw
loopne
and
pop
push
xchg
ja
insb
push
clc
cmpsl
push
adc
repnz
nop
push
out
push
cmc
cmpsb
data16
js
and
fldt
aad
inc
push
cmp
repnz
enter
stc
adc
lret
in
and
fwait
push
adc
insb
and
aam
out
out
fldcw
and
and
push
jno
push
std
icebp
pop
fsubrl
adc
fidivrl
jb
es
push
add
and
arpl
sti
nop
mov
testb
mov
aad
popf
sub
inc
movsl
xchg
lods
pop
sti
mov
adc
mov
jo
jl
mov
insb
imul
aad
pop
inc
mov
mov
rcr
lods
sub
and
icebp
cmp
jp
insb
cmp
sbb
out
xchg
jno
sbbl
xchg
sbb
gs
and
insb
insl
xor
les
adc
daa
aad
push
insb
popa
cmp
cmpl
xor
mov
insb
imul
insb
push
dec
aaa
mov
inc
push
loop
xor
insl
push
mov
popa
mov
in
jno
fs
cmp
rcrl
xor
xchg
sub
bound
imul
mov
sbb
add
adc
fcoml
and
loop
lods
jnp
dec
dec
jl
push
insb
add
orl
adc
sub
mov
test
cmpl
pop
xorb
int3
or
pop
stc
cli
int
and
pop
mov
stos
insb
or
xlat
sti
mov
sbb
pop
lea
push
push
inc
test
mov
insb
xchg
sub
enter
loop
loope
or
fildl
inc
cld
ljmp
out
dec
roll
sub
adc
sarb
inc
push
hlt
or
test
aad
out
xchg
into
cld
movsl
dec
decl
insb
xchg
mov
insb
adc
les
js
insb
cmpb
mov
in
add
imul
sbb
jl
call
cwtl
mov
cmp
mov
stos
jmp
lock
into
push
or
and
adc
push
sbb
push
mov
sbbb
pop
pop
or
mov
adc
push
cwtl
jg
pop
jnp
xor
jmp
insb
bnd
fwait
mov
rolb
adc
jns
repnz
fnstsw
insb
out
mov
mov
test
dec
jbe
sbb
insb
push
in
adc
xor
fsubr
insb
jle
inc
into
add
mov
xchg
mov
sub
xchg
imul
add
insb
mov
movsb
inc
xchg
orb
in
insb
lret
adc
cli
pop
insb
xchg
cmp
add
push
das
movsl
sub
fwait
lahf
repz
mov
pop
sbbl
in
shlb
insb
mov
out
mov
insb
push
dec
inc
and
scas
cld
xchg
iret
jb
fisttps
jne
or
pushf
insb
jno
xlat
insb
cld
bound
int
adc
insb
pop
or
ficoms
insb
out
add
test
imul
int
stos
sbb
mov
sar
aad
dec
xchg
xchg
mov
imul
insb
in
pop
das
sbb
jbe
insb
adc
daa
rorb
aam
mov
mov
insb
cmp
sbb
sub
imul
shrb
jmp
insb
ret
push
inc
cmp
add
add
insb
shll
and
insb
loop
leave
addl
mov
inc
ss
or
lods
in
ljmp
mov
cmp
cwtl
jle
xchg
adc
les
stc
imul
push
jbe
insb
pop
jmp
add
imul
mov
add
arpl
mov
repz
hlt
and
or
add
xor
jle
xor
arpl
jo
in
mov
xchg
js
sub
cmpsb
scas
adc
mov
push
addr16
fwait
arpl
mov
xor
aaa
jns
mov
dec
lcall
enter
aad
les
ja
iret
pop
jns
mov
mov
or
xchg
mov
je
dec
or
cmp
ljmp
pop
test
lcall
push
arpl
lret
out
jmp
loopne
cmpsl
xchg
cld
adc
mov
mov
inc
sub
cltd
insb
cli
fwait
call
insb
lds
mov
enter
xchg
dec
scas
imul
insb
lcall
das
push
mov
dec
push
pop
dec
imul
and
cmpsb
mov
pop
insb
imul
fldt
sub
int3
repz
insb
jne
call
insb
mov
mov
cmpsl
jb
in
and
pop
mov
lods
jns
int3
outsl
popa
inc
jno
push
gs
and
jns
scas
in
cmp
jmp
sbbb
sub
insb
or
dec
in
insb
jbe
inc
enter
push
aas
pop
stos
les
and
xchg
dec
mov
js
xor
sub
mov
jae
adc
adc
or
mov
mov
gs
push
dec
bound
icebp
cs
loope
add
sub
cmp
int
paddusb
sub
insb
mov
mov
gs
popf
dec
cmovge
insb
push
dec
jg
divb
pop
fimuls
pusha
jle
inc
mov
add
push
fdiv
xchg
into
orb
jno
cld
clc
insb
push
aam
mov
pop
cwtl
js
mov
stos
xchg
lea
adc
and
dec
in
les
cmp
sahf
inc
imul
push
outsb
mov
xchg
dec
mov
insb
xchg
jmp
imul
jae
pop
andl
insb
rclb
push
sub
push
mov
push
sbb
dec
cmp
jmp
and
dec
push
insb
mov
jne
andb
push
int3
inc
outsb
insb
add
movsl
xor
call
xchg
jmp
pusha
jb
aas
jnp
pop
incb
or
dec
pop
testb
xchg
sub
in
scas
pushf
in
cs
inc
insb
cmp
sub
outsb
bound
sub
jb
pop
data16
insb
inc
ja
mov
popa
lea
sarb
push
mov
insb
mov
add
insb
jp
jge
imul
lcall
add
cmp
ror
push
shlb
dec
movsb
insb
negb
sti
ret
rcrb
push
sahf
mov
insb
cmp
inc
andb
mov
fmulp
jbe
push
add
insb
pop
repz
push
addl
arpl
cmp
cmp
imul
jno
mov
inc
imul
adc
nop
cwtl
push
push
insb
sub
xchg
ret
pop
insb
mov
inc
push
jno
fwait
pop
jbe
loop
je
cmp
imul
jle
and
pop
xchg
and
and
pop
hlt
inc
vpslld
outsb
outsl
arpl
mov
xorb
xchg
loopne
in
push
cmc
pushf
pushf
dec
ljmp
push
insb
or
test
jnp
insb
les
aad
jl
fsubrl
mov
test
mov
add
addr16
cmp
mov
movsb
insb
or
cmp
in
ja
rcrb
data16
adc
rcrb
insb
fidivl
jle
sub
xchg
push
xchg
call
orl
insb
fdivrl
mov
insb
sbb
out
cmp
gs
mov
add
mov
push
xor
pop
inc
push
xchg
insb
sub
push
push
inc
cmp
add
mov
xor
cmp
andb
addr16
cmp
je
jl
push
adc
xor
dec
insb
jns
mov
clc
insb
cmpsl
pop
fnstcw
imul
jb
dec
fldl
test
sbb
add
insb
dec
cmp
test
mov
dec
xorl
loope
or
sub
cmp
jb
notb
je
dec
pop
cltd
fsubrl
sbb
inc
insb
in
test
or
lahf
shrb
cli
lods
add
in
xchg
bound
xchg
arpl
mov
dec
icebp
cltd
lods
insb
lock
xchg
test
xor
cmp
add
or
pop
jle
fstpt
cmp
aad
dec
loopne
insb
fwait
out
dec
mov
rclb
sub
lds
mov
int
pop
dec
sbb
push
dec
pop
pushf
sub
nop
imul
xchg
inc
adc
insb
or
insb
push
sub
fidivrs
push
pop
adc
mov
dec
cmp
mov
gs
fmull
xchg
ret
insl
jb
xor
cli
cmpsb
pop
sahf
fisubrl
imul
fldt
mov
out
fsubrl
shll
xchg
out
xchg
xchg
sbb
icebp
insb
ret
je
jbe
cmp
imul
mov
pop
test
jge
pop
test
insb
imull
jae
js
lock
pop
fistps
in
jns
insb
pop
sahf
mov
push
inc
icebp
fwait
in
test
addr16
cs
test
xchg
push
cld
sub
inc
shrb
orl
jl
cmp
push
jo
mov
inc
and
push
dec
adc
lods
lods
cmp
insl
xor
push
mov
bound
mov
stos
cmpl
ror
je
fprem1
pop
pop
stos
fcmovnb
ljmp
insb
mov
xchg
sub
insb
adc
mov
lahf
into
cmpsl
xchg
pop
lods
push
and
jecxz
add
sbb
test
and
jle
dec
mov
xor
mov
cmpsb
pop
and
and
mov
aam
pop
shl
cmp
outsb
insb
clc
pop
xchg
std
pusha
mov
jnp
cmp
pop
lret
ficomps
dec
sbb
das
out
insb
jl
shlb
ror
test
mov
push
xchg
adc
rcll
bound
sbb
lods
sbb
push
in
nop
sub
cmp
cmc
add
jecxz
jl
cmp
lods
push
imul
pcmpeqb
mov
insb
test
mov
shrb
out
inc
mov
cmp
cmpsb
adc
dec
xchg
test
hlt
sbb
dec
insb
vmovlpd
insb
repnz
scas
insb
leave
aaa
push
and
lds
aas
insb
xchg
shlb
add
and
push
outsl
in
xor
or
pop
dec
and
pop
icebp
pop
das
and
add
imulb
lahf
insb
sahf
addr16
in
adc
repnz
call
lcall
gs
pop
jbe
shrb
sub
out
xchg
sbb
jbe
cmc
jbe
clc
mov
mov
movsb
push
jmp
or
mov
add
mov
out
pop
orl
cmp
insb
pop
push
shl
add
ss
lock
jo
gs
jne
rcrl
popa
addl
sbb
add
pop
jle
pop
and
sbb
mov
out
insb
fsubrl
test
mov
add
popf
xchg
add
es
int
push
sbb
jb
insb
ljmp
adc
negl
mov
jecxz
jno
jbe
xchg
and
scas
pusha
or
adc
jo
mov
ss
and
pop
mov
mov
pop
or
mov
aam
xchg
mov
stos
addr16
jl
xchg
test
rcrb
mov
cmpsb
lcall
in
mov
fistpl
insb
push
das
mov
mov
insb
pop
push
inc
shrl
push
insb
popa
pop
das
les
pop
test
jl
out
shrb
fnsave
insb
push
cmpl
outsb
insl
test
or
lret
inc
test
xorl
mov
push
push
or
mov
cmpsb
pop
fwait
adc
ret
insb
dec
outsl
insl
loope
das
cmp
fs
or
jne
fistpll
stos
xchg
cmp
addr16
sar
add
fbld
push
sub
dec
jmp
adc
dec
scas
pop
insb
xchg
mov
ja
xchg
shll
adc
jno
js
scas
sarl
pop
ret
sbb
bound
inc
dec
or
lock
xor
mov
bound
fs
adc
ljmp
addr16
xor
aaa
je
xor
and
push
enter
jmp
push
xlat
push
push
stc
jbe
in
int
arpl
mov
push
das
movsl
cmp
and
rcrb
stos
imul
movsb
fdivl
or
jbe
add
iret
cltd
scas
push
xchg
or
add
xor
cmp
test
xchg
cmpsl
lods
pop
jecxz
mov
push
movsb
cmp
fs
cmp
pop
cmc
fists
cmpsl
inc
pop
push
rcl
mov
sub
pop
jmp
cwtl
int
mov
popa
shlb
ret
push
xchg
gs
pop
cmp
and
out
and
es
stos
fsubrs
mov
mov
fsubrs
shlb
pop
push
mov
pop
shlb
roll
sbbl
shlb
ficompl
mov
sbbl
rorb
bound
jp
add
aaa
add
sub
mov
or
and
push
dec
xchg
mov
adcb
add
mov
imul
and
hlt
jmp
lea
test
or
or
js
pusha
or
loop
add
fidivl
xor
mov
je
imul
movsl
sub
loopne
jbe
cld
push
ret
int3
dec
ja
les
xchg
dec
and
add
xor
insb
jp
sbb
mov
cmp
je
insb
mov
nop
cld
push
insb
mov
cmpsb
push
jp
dec
xor
xor
sbb
sbb
std
pop
sbb
jbe
addr16
inc
pop
xor
insb
pop
cmc
adc
cmpsl
fldenv
dec
inc
inc
dec
dec
subb
outsl
or
lock
xor
cmp
push
out
fistl
in
xchg
nop
gs
cwtl
mov
outsl
xchg
insb
sub
xchg
mov
pop
jl
xor
xchg
sub
push
pop
ret
dec
pop
inc
lods
cmp
insb
in
add
insb
mov
xor
dec
mov
imul
add
shl
insb
mov
test
je
push
sub
xor
repnz
pop
inc
mov
xchg
xlat
scas
imull
add
stos
adc
in
js
int3
imul
sbbl
pop
jb
push
cmp
inc
insb
rcl
popl
adc
pop
in
psrld
dec
push
mov
imul
sahf
js
fisubrs
in
imul
loop
outsb
notl
icebp
dec
hlt
or
cmc
xchg
sub
shl
insb
xchg
aad
lds
lods
push
xor
pop
mov
insb
or
adc
out
dec
jns
insb
sub
pushl
lock
in
fisttpll
dec
scas
sub
sub
arpl
adc
jmp
jno
cmp
add
hlt
imul
sub
das
insb
mov
push
ret
sub
cmpsl
aad
jl
mov
dec
stos
dec
movsb
insb
inc
fnstcw
sub
out
scas
or
dec
lcall
mov
shlb
insb
mov
pop
enter
insb
add
xor
insb
mov
mov
sti
aaa
sbb
pop
nop
scas
insb
dec
xor
mov
in
stos
pusha
adc
test
and
jo
mov
sub
insb
loope,pn
add
xor
adc
shll
dec
inc
in
jns
push
cmp
leave
push
cmc
sub
rorl
cmp
jmp
push
clc
sar
lcall
pop
sbb
xchg
repnz
mov
mov
and
pop
adc
push
push
jbe
mov
es
int3
repnz
shrb
stos
inc
in
xchg
mov
add
cs
in
mov
inc
stos
insb
cmc
pop
and
mov
xor
and
push
imul
push
jbe
mov
shrl
inc
lcall
clc
pop
sarb
push
jne
in
pop
stc
in
dec
in
stc
mov
aas
lret
xchg
inc
fldenv
stos
data16
sbb
push
insb
and
fdivrl
insb
xchg
push
icebp
or
mov
dec
in
mov
arpl
out
dec
mov
insl
xorl
jp
insb
cmp
lods
movsl
jo
insb
in
cmp
mov
insb
pop
je
out
dec
sbb
andb
cmp
outsb
mov
dec
gs
mov
js
insb
std
call
jnp
push
dec
sub
push
pop
or
test
dec
ljmp
xchg
fsubrl
imul
test
test
insb
in
inc
or
in
mov
or
outsl
les
pop
xchg
adc
pop
jle
test
insb
push
push
sub
push
mov
mov
ret
lods
pop
hlt
mov
dec
iret
mov
adc
insb
aam
sbbl
adc
cs
cwtl
pushf
mov
mov
and
xor
test
mov
aaa
jo
imul
xchg
dec
pop
add
and
cwtl
clc
push
xor
stos
ss
imul
sub
xor
faddl
scas
bound
loopne
cmp
fbstp
fs
jnp
add
and
loop
test
or
daa
sub
pushf
outsl
lods
repz
cmp
xchg
xor
in
fcompl
cmpsl
test
jae
insl
adcb
mov
pop
cmc
into
or
and
dec
xchg
in
mov
aas
jmp
xor
jmp
add
addl
das
scas
pushf
in
dec
nop
mov
jbe
xchg
inc
cmp
inc
mov
imul
sbb
test
push
daa
movsl
push
xchg
movsl
lods
stos
gs
movsb
xor
jnp
lea
xchg
insb
loope
enter
mov
shlb
pop
popf
xor
andl
jne
inc
dec
and
cmp
ds
addr16
stos
jo
sbb
adc
imul
aas
pushf
arpl
sbb
and
adc
fcompl
cmp
loope
lds
dec
les
filds
push
adc
cmp
jle
insl
int3
jg
ret
imul
xor
psraw
int3
enter
sbb
stos
test
push
sbbl
bound
or
fildll
sbb
xchg
jecxz
shrb
fucom
lds
subb
cmp
pushf
nop
out
loope
insb
mov
push
cmc
mov
iret
mov
push
ds
js
xor
fnstsw
popa
in
xchg
push
insb
lock
notb
add
pop
pop
gs
add
gs
inc
leave
cmpb
dec
test
jecxz
scas
insb
subb
xchg
adc
insb
push
push
shl
mov
jb
ficomps
outsl
push
mov
pop
and
sub
pop
sub
or
adc
clc
imul
cmp
xor
fimuls
xchg
cmp
hlt
ss
out
repz
pop
cmpsb
mov
insb
pop
pop
mov
insb
ja
adcl
insb
imul
push
sbb
fimull
pop
sub
insb
cli
inc
pop
add
dec
mov
data16
cli
pop
cs
shrl
lcall
loop
xchg
dec
push
cs
mov
xlat
jb
add
and
or
cmc
in
adc
jb
push
add
push
insb
insl
aas
cld
fcomp
mov
mov
ret
mov
mov
push
push
fisttps
negb
insb
fsubl
inc
sub
or
icebp
push
lea
scas
jb
popa
nop
pop
movsb
insb
shlb
test
int
sbb
insb
jmp
flds
js
insb
xchg
jo
stc
test
jb
loopne
mov
nop
stc
push
ja
sub
lods
data16
insb
std
enter
push
dec
cli
imul
in
ds
mov
pop
or
xor
call
jl
shlb
sbb
sbb
or
xor
lea
push
and
popf
js
push
adc
add
xor
out
insb
lret
mov
insb
pop
rolb
nop
xchg
and
pop
enter
sahf
js
aad
rcr
sub
mov
repnz
push
in
add
movsb
icebp
insb
ss
xchg
and
and
mov
adc
bound
push
mov
xchg
fbstp
add
pop
bound
xor
mov
xchg
or
pop
add
pop
loope
out
sbb
adc
adc
lcall
dec
mov
mov
mov
dec
xchg
test
ja
insb
or
pop
imul
data16
dec
adc
xchg
lcall
lea
and
and
sbb
or
cmc
imul
fdivrp
fs
xor
xor
ret
push
jne
fcompl
pop
push
pop
xor
push
sbbl
xlat
cli
pmulhuw
dec
inc
aad
jnp
push
cmpsl
dec
int
xchg
or
ret
jae
addl
pop
pop
jp
add
stc
cmp
adc
cwtl
adc
out
jbe
jbe
jnp
mov
mov
xchg
jne
insb
in
in
rorb
movsb
fwait
push
or
je
pop
sub
sub
sbbl
lea
and
xor
xchg
inc
or
pop
insl
xchg
fdivl
pusha
fildll
stc
adc
lods
jnp
push
aas
test
pop
sbb
int3
js
push
sbb
lahf
mov
test
jbe
push
adc
imul
sub
adc
stos
pop
fldcw
dec
jb
arpl
lock
sbb
fidivrl
scas
int
cwtl
ss
inc
cmp
or
fistpll
jmp
das
adc
into
mov
sub
pop
test
sub
cs
les
sahf
or
push
aaa
ljmp
bnd
imul
test
sub
cli
push
insb
dec
push
test
data16
test
jns
es
bound
lds
test
in
int
inc
push
cmp
ret
test
mov
ja
jmp
sbb
push
sbb
mov
and
lock
xchg
popf
sub
sub
call
push
sub
loope
xor
push
outsl
aas
lock
jns,pn
in
fwait
mov
cmp
in
loopne
or
dec
ror
push
jle
jno
or
out
adc
and
and
xor
sar
mov
mov
pusha
adc
xorl
cli
sbb
dec
outsl
mov
insb
push
mov
sti
push
and
insl
insb
pop
std
filds
fwait
xor
lods
insb
rcrl
push
stos
ss
insb
mov
in
loopne
imul
xor
cwtl
dec
mov
pop
push
sahf
push
inc
push
fs
mov
cwtl
popa
pop
insb
shr
mov
xor
es
leave
jmp
fmuls
jne
xchg
mov
loopne
push
xor
imul
push
xchg
daa
hlt
sub
call
adc
lahf
or
lods
sub
mov
pop
in
cwtl
and
jle
push
imul
add
or
icebp
imul
out
in
out
fimuls
sahf
std
insb
adc
mov
rorb
mov
popf
in
jp
jne
popa
arpl
push
sub
add
je
sbb
lods
je
and
jg
cmpsl
xor
jbe
sarb
mov
jmp
pop
xor
push
and
adc
xchg
cmp
push
sahf
insb
xorl
mov
inc
enter
fdivs
inc
cmpsl
mov
popa
int
xlat
enter
xchg
xchg
mov
pop
lea
push
and
fistpl
lods
adc
scas
lcall
adc
insb
fwait
inc
imul
jecxz
or
rcrl
movsl
mov
xor
sub
pop
xchg
pop
outsl
jae
mov
mov
lea
jnp
xchg
insb
adc
cli
sti
imul
inc
mov
xchg
rcll
insb
pop
jne
scas
sub
test
push
in
mov
insb
ret
inc
pusha
mov
insb
push
arpl
in
mov
add
out
sti
mov
pusha
rol
loop
das
imul
les
add
xor
xor
pop
mulb
mov
clc
jecxz
push
inc
insb
subl
xchg
insb
lds
adc
insb
mov
mov
xor
popf
dec
pop
out
pop
in
jbe
inc
xchg
insb
and
push
cmp
push
push
bound
jge
out
aad
fwait
sub
xchg
ret
lock
push
jbe
pop
loop
subb
subb
cs
pop
std
cmp
popa
xchg
push
gs
mov
pop
mov
mov
pop
insb
mov
push
inc
out
insb
sub
adc
imul
cmpb
xchg
push
loope
mov
push
sti
push
insb
and
xlat
or
imul
dec
insb
jecxz
and
lods
pop
dec
out
adc
push
xor
mov
mov
mov
es
in
fnsave
jmp
ds
jns
pop
xor
push
xor
add
xchg
hlt
cmp
mov
scas
or
aas
sbb
dec
cmp
inc
outsb
lock
or
adc
xor
into
loope
sub
popa
scas
imul
repnz
outsb
xchg
cwtl
sbbb
insb
dec
inc
mov
insb
xor
sub
cld
shrl
hlt
inc
clc
sti
addl
dec
sbb
sbb
push
out
pop
xor
mov
adc
testl
daa
pop
jl
insb
jnp
mov
stos
push
ja
pop
lret
insb
cs
jl
or
arpl
adc
add
outsb
adc
loopne
cli
ja
nop
cmpsl
mov
and
insb
inc
pop
mov
pop
mov
js
mov
incl
mov
movsb
xchg
pminsw
enter
pusha
inc
sub
mov
mov
push
mov
mov
pushf
bound
nop
insb
ja
lock
mov
sbb
loope
icebp
imul
xchg
sbb
mov
hlt
daa
call
cmc
insb
icebp
out
aad
sahf
enter
xor
sbb
pop
test
hlt
or
inc
xchg
jae
movsl
pop
aad
cltd
push
mov
pushl
jo
sbb
int
add
adc
out
das
cmpb
aam
ds
fs
bound
jecxz
insb
popa
stos
cmp
insb
xchg
daa
addr16
sti
jmp
insb
mov
jp
xchg
insb
inc
es
jo
dec
jecxz
insb
mov
cmpsb
xchg
fidivl
into
adc
inc
aas
lea
pop
mov
mov
int
mov
scas
orl
jae
jbe
testl
ja
adc
aam
cmc
adc
in
insb
fcomps
jo
xchg
arpl
bound
cmp
test
cmpb
xor
movsl
fdivrl
xchg
jmp
sub
repnz
outsb
mov
jb
or
pop
insb
push
in
lods
xlat
jp
insb
adc
imul
loope
xchg
rcrl
adcb
xchg
mov
stos
xchg
push
jp
aam
fnstenv
dec
in
repz
sbb
insb
out
ffree
sbb
mov
insb
add
pushf
push
js
insb
ljmp
fsqrt
push
imul
pop
movsb
jnp
sbb
xchg
in
std
test
nop
dec
pusha
push
push
or
jl
pop
xchg
mov
setl
xorb
inc
mov
dec
jae
pop
fisubrl
stc
daa
scas
push
iret
xchg
xor
out
dec
adc
pop
pop
pusha
jbe
inc
cmpsb
inc
sub
stc
push
loop
arpl
mov
ljmp
adc
cltd
cvttps2pi
ret
insb
scas
mov
popf
dec
insb
lock
xchg
enter
cltd
insb
andb
pop
mov
pop
ret
push
push
ret
push
jl
cltd
jge
insb
das
add
xchg
aam
lock
imul
lods
in
and
add
mov
out
fimull
addr16
jmp
out
or
fcomps
pusha
sub
cmpsb
jne
adc
les
and
enter
xor
inc
mov
mov
insb
push
jecxz
pushf
insb
dec
mov
aad
push
sbb
lods
insb
xor
lret
mov
imul
movsl
xchg
rorl
mov
aam
push
cmpsb
sbb
cmp
scas
test
push
pop
inc
ljmp
hlt
inc
jg
insb
jmp
cmp
popa
les
ljmp
cs
pushf
jnp
mov
insb
enter
mov
inc
insb
hlt
mov
jle
imul
lock
movsbl
xchg
lods
mov
xchg
pop
xor
daa
insb
add
cli
push
mov
pop
es
push
insb
pop
inc
sbb
and
addl
stos
les
cmp
xchg
sbb
push
xor
and
xor
dec
xchg
insb
lahf
cwtl
xchg
test
insb
pop
divb
inc
insb
pushf
cmp
imul
imul
inc
stc
dec
mov
subb
jmp
xchg
negl
test
inc
incl
mov
fsubl
lock
mov
pushf
push
add
sbb
scas
imul
aad
lds
sbb
mov
sti
in
in
push
pop
dec
les
add
dec
scas
inc
jl
arpl
insb
jmp
jge
jo
pop
xor
in
xchg
mov
insb
popa
mov
sub
pop
add
pop
or
pushf
imul
addb
cwtl
adc
imul
jl
into
insb
sbb
bound
push
icebp
mov
inc
inc
mov
cmpsb
xchg
insb
movsl
add
int
cmc
or
imul
xchg
test
jo
rcrb
jno
cvttps2pi
inc
nop
dec
jg
cmp
les
pop
dec
cs
and
int3
lds
aaa
cmc
insb
cli
sub
cmp
out
pop
lcall
pop
add
pop
int
insb
sbb
mov
mov
sub
test
jge
sub
insb
push
hlt
adc
cmp
aad
movsb
sub
jle
pusha
fwait
test
add
imul
pop
mov
lods
and
lret
add
mov
movsb
stos
xlat
adc
stc
and
insb
scas
jnp
lret
popa
insb
cmp
rcll
and
or
pop
insb
in
movsb
pop
andl
insb
push
push
and
mov
test
arpl
into
clc
push
or
paddw
fidivrl
popf
aad
mov
in
and
iret
sbbl
jg
mov
sbbb
jle
xchg
movsl
sbb
insb
adc
mov
or
add
in
and
dec
xchg
gs
add
shll
scas
cmp
rcrl
xchg
int3
jno
sbb
insb
inc
shrl
icebp
jb
insb
fsubp
or
imul
push
mov
inc
or
mov
popa
bound
loop
outsl
mov
xchg
mov
jae
fsts
jecxz
pop
jno
adc
in
pop
cmp
inc
pusha
les
enter
js
subb
push
out
addr16
bound
dec
jmp
in
lods
ficoml
insb
cltd
cmpsb
pop
loopne
push
icebp
sub
lcall
insb
mov
lahf
xchg
aad
or
rcrl
xor
rolb
in
push
movsl
stos
pop
sub
insb
jp
pusha
jb
arpl
push
sbb
in
push
cmp
push
test
js
cmp
repnz
xchg
bound
in
call
adc
jno
adc
and
dec
cltd
jo
jge
add
sub
insb
sub
mov
push
insb
cld
orb
and
movsl
mov
pop
insb
sbb
adc
pop
into
sub
ret
rclb
dec
insb
mov
and
bound
jnp
xchg
rcrl
mov
xchg
les
jae
aaa
push
add
fnsave
mov
push
test
outsl
xor
shrb
pop
and
cmp
icebp
ret
into
insb
js
cmp
pop
xor
out
inc
cld
mov
fisubrl
mov
or
pop
cmp
xor
xor
icebp
pop
aas
dec
js
lahf
xorb
lods
insb
aaa
mov
sub
sahf
mov
and
aas
imull
mov
lods
jge
xor
fidivrs
push
mov
inc
mov
aad
adc
pop
sarb
data16
stos
push
push
mulb
and
insb
cmpsl
push
repnz
jno
mov
adc
lahf
pop
insb
aaa
jne
lods
cmp
js
push
dec
insb
es
incb
pushf
cmpl
pop
mov
cmc
push
push
push
lahf
imul
insb
pop
mov
xchg
loope
dec
jae
lods
and
insb
test
in
pop
adc
pop
mov
movsb
ja
addr16
jl
lods
ljmp
bound
es
xchg
cmpsl
mov
imul
test
ds
xor
pushf
imul
dec
or
shlb
pop
imul
addr16
clc
or
je
insb
pop
imul
movsl
shrl
fisubl
repnz
push
sbb
pop
insb
fistl
mov
xor
xor
ss
sub
je
mov
or
insb
dec
push
push
add
or
mov
sbb
pop
into
xchg
mov
insb
jno
xchg
fstl
lret
xor
cmpsb
sti
pop
clc
ret
mov
call
dec
fistps
test
loope
dec
das
cmp
push
loop
arpl
mov
insb
ret
lds
sub
xchg
insb
inc
int3
popa
sbb
or
stos
aam
sbb
insb
pop
int
std
xlat
insb
pop
mov
mov
fistpl
mov
scas
push
sub
imul
push
insb
dec
lahf
push
in
push
in
shrb
push
add
adc
push
ljmp
mov
test
sub
jbe
aas
orl
std
iret
cmpsb
clc
cmp
orl
stos
sbb
mov
lds
push
repz
jge
mov
sub
rolb
xor
push
call
fistpll
lret
lret
add
mov
pop
push
in
inc
mov
and
cld
jns
cmp
loope
xor
bound
lret
or
insw
pop
sub
ja
outsl
ficoml
iret
loop
push
fdivrl
iret
addb
mov
fisubs
sbb
int
imul
mov
xchg
cmc
xchg
cmp
testl
lock
or
clc
fldcw
test
test
push
adc
insb
rcll
push
jecxz
imul
daa
mov
in
insb
mov
dec
inc
cmp
inc
dec
mov
mov
sub
insb
pushf
add
ror
pop
and
pop
roll
mov
cmp
les
in
mov
or
mov
pop
outsb
fisubl
dec
xchg
lods
xor
stos
insb
push
mov
cli
xor
add
cmp
xor
insb
xor
xor
arpl
pushf
fs
inc
insb
mov
es
insb
addr16
xchg
je
clc
jle
inc
insb
sub
ror
dec
or
sbb
jb
mov
pusha
daa
test
divl
lret
jle
addl
sti
imul
mov
sub
ficoms
cli
insb
push
test
jp
arpl
xchg
mov
mov
sub
mov
lods
icebp
adc
add
insb
int
sub
mov
sbb
insb
dec
push
push
in
test
sbb
jecxz
ret
stc
test
pop
aas
fldt
xor
xchg
insb
lcall
push
je
lock
imul
lods
repnz
mov
test
subb
fcoms
leave
loopne
std
pop
aaa
add
inc
dec
scas
jbe
gs
inc
dec
xor
lea
sbb
inc
push
leave
mov
imul
mov
insb
xorl
pop
insb
jp
jg
in
mov
ret
aam
in
sub
xchg
sub
xchg
sbb
add
push
push
popa
cmp
in
mov
mov
lret
pop
sub
insb
outsb
inc
and
insl
stos
ret
call
rcl
pop
xor
imul
popa
aam
mov
imul
dec
sahf
push
mov
mov
mov
ljmp
dec
push
pop
mov
sub
jne
pop
push
xor
lods
dec
cmp
je
mov
iret
sub
scas
pushf
adc
pop
dec
je
sub
mov
cwtl
push
jge
stos
out
insb
jl
inc
out
clc
xorl
aas
pop
mov
mov
int
outsl
inc
sub
lcall
leave
jg
in
icebp
xchg
and
in
jle
outsb
xor
xor
jns
pop
sub
mov
stc
insb
push
push
jle
xor
inc
insb
std
pop
pop
pop
mov
pop
xchg
sbb
scas
test
push
movsb
jno
loopne
inc
int
xchg
sti
push
data16
mov
fsubl
sahf
scas
insb
pusha
pop
sub
out
dec
lret
push
popa
notl
mov
insb
das
ret
or
and
rclb
lret
sub
ss
pop
shrb
lahf
int
jns
sbb
insb
outsl
jl
pop
sub
scas
insb
in
pop
cmp
mov
cmp
xlat
imul
jo
mov
dec
mov
dec
pop
shlb
jo
jge
imul
rorl
insb
jo
adc
inc
lea
xor
xchg
insb
jle
pop
lods
outsb
lcall
ja
mov
pop
inc
arpl
inc
mov
mov
lods
pop
mov
lcall
in
fwait
sahf
adc
lcall
push
fdivl
jmp
mov
jbe
xor
bound
mov
xor
insb
sahf
xor
in
loope
mov
aad
lcall
sbb
insb
push
inc
call
add
lods
sbb
fcmovbe
mov
dec
mov
aad
push
aaa
mov
sbb
shrl
xchg
lods
jge
push
insl
in
sub
fldenv
hlt
cltd
add
out
insb
fidivl
test
insb
mov
lock
bound
push
insl
jno
scas
call
je
cld
idivb
xchg
dec
shll
daa
insb
mov
mov
ja
cwtl
shll
fwait
xchg
cmp
sub
or
aad
mov
jge
mov
add
mov
ljmp
outsb
ss
jno
out
add
out
nop
flds
roll
hlt
insb
mov
pop
cmpsb
clc
insb
lds
and
push
lret
xor
fcompl
ret
cmp
pushf
or
sub
xlat
pop
sahf
popf
pop
pop
aam
or
sub
mov
in
sbb
pop
lahf
adc
movsl
xchg
lcall
and
fs
enter
sub
mov
insb
push
push
cmpsl
lods
mov
clc
and
in
out
sub
pop
lock
mov
dec
lea
insb
mov
push
pop
or
inc
lahf
sub
div
insb
adc
pop
pop
or
mov
in
cmpb
scas
pop
adc
insb
nop
and
and
in
push
cmp
movsb
jmp
pop
insb
mov
imul
add
pop
cmpsl
push
hlt
jmp
rorl
mov
insb
jae
pushf
fisubl
int3
mov
das
pop
insb
into
loop
sub
iret
daa
arpl
dec
mov
mov
in
fisubrs
mov
test
sbb
dec
push
mov
inc
mov
insb
add
mov
fldenv
insb
lret
aaa
cmp
std
call
fmulp
lock
ja
push
push
aad
cmp
mov
adc
adcb
insb
push
jns
and
mul
xchg
jle
jo
insb
adc
or
les
mov
insb
movsl
test
imul
gs
mov
movsb
and
test
xor
insb
mov
sti
push
pop
rcrb
pushf
inc
rorb
jmp
cmp
pop
lods
daa
dec
stos
aad
insb
xchg
inc
inc
dec
xchg
jns
jo
adc
add
push
filds
out
adc
mov
scas
mov
vmovntdq
jle
xchg
mov
push
sbb
and
mov
pop
jmp
call
add
loope
pop
cmp
pop
or
daa
lcall
rorl
cmpsb
pop
pop
add
insl
mov
jns
shrl
xorb
dec
stc
pop
clc
cltd
push
inc
jae
xor
popaw
add
js
cmp
hlt
sbb
xchg
scas
aaa
test
add
mov
data16
cmpsb
dec
pop
and
ja
sub
mov
mov
adc
xor
jb
push
jbe
and
xor
jb
in
dec
je
adc
jecxz
pushf
cmpb
out
in
outsb
xlat
and
adc
or
push
pop
jb
jb
into
dec
sbb
or
mov
dec
loopne
pop
popf
mov
pop
inc
inc
jb
push
daa
out
pop
jbe
mov
cmpsb
inc
jne
sub
jecxz
mov
rolb
sbb
stos
push
xchg
test
jne
xchg
sub
shlb
dec
sahf
loope
or
sub
sub
jecxz
dec
loope
xor
xor
ljmp
xchg
arpl
lret
je
push
movsb
adc
or
fwait
push
jno
aas
adc
and
or
test
stos
or
sbb
in
loope
jb
mov
xchg
and
jne
add
aas
dec
iret
mov
add
dec
aad
sbb
loopne
imul
dec
outsb
popf
jge
std
dec
repz
in
mov
sbbl
xor
jle
lods
aas
cmpsl
dec
and
lods
cwtl
xchg
sbb
subb
lods
adc
pop
cmpl
movsb
mov
push
mov
jae
sbb
aaa
hlt
rclb
inc
test
loop
mov
mov
jb
je
adc
shlb
pop
fwait
sub
imul
dec
mov
roll
pop
lock
int
loope
push
mov
jmp
mov
jmp
fs
outsl
cmp
mov
jp
in
cli
pusha
adc
dec
push
je
insb
jne
out
mov
ja
movsb
dec
sahf
aas
clc
rcrb
clc
arpl
sbb
movsl
sub
push
cmpsl
ret
insb
roll
jb
pop
add
pop
js
mov
sbb
jno
push
scas
mov
icebp
in
jl
sbb
mov
insl
fs
and
mov
mov
insb
pminsw
push
insb
in
add
in
and
fsubl
insb
pop
cmp
test
lock
add
gs
push
int3
add
pop
xchg
or
jp
inc
mov
mov
das
or
je
insb
dec
clc
fwait
sbb
xor
pusha
in
jnp
fmulp
test
lods
xchg
insb
sbb
pop
jb
mov
and
adc
sub
insb
add
lcall
sbb
dec
sbb
sbb
mov
int3
insb
roll
dec
jno
out
adcl
nop
jl
mov
insb
mov
repz
inc
push
scas
add
mov
sbb
pop
arpl
pop
jmp
push
push
fwait
xchg
pop
js
jmp
pop
ret
loop
test
xchg
ja
push
aaa
movsl
push
push
cmp
xor
fldlg2
sbb
xor
jle
cmp
jecxz
sahf
mov
cmpsb
cmp
out
xchg
mov
add
cmp
insb
movsb
aaa
ret
cwtl
push
data16
mov
jge
jnp
imul
ja
lea
ljmp
fidivs
outsl
je
pop
jbe
mov
dec
js
lock
add
mov
mov
pop
adc
stc
or
inc
mov
js
out
mov
ja
cmp
movsl
outsl
cmpsb
icebp
hlt
shrb
pop
jno
test
xor
in
shll
imul
arpl
in
les
das
mov
or
adc
mov
lods
jo
sub
andl
dec
mov
cmp
fsin
jp
mov
pop
inc
dec
sbb
int3
mov
scas
jo
repnz
sbb
mov
arpl
lea
jns
insl
jl
pop
sbb
jmp
adc
in
xchg
xchg
xor
sbbl
jno
gs
mov
pop
fadds
jne
push
pop
imul
enter
pop
shrb
movsb
test
insb
and
ljmp
lds
leave
outsb
popa
loop
mov
insb
push
sub
xchg
adc
dec
pop
dec
insb
or
loopne
dec
sub
or
jecxz
hlt
insb
mov
test
sub
test
xchg
outsl
imul
mov
lea
jge
cwtl
in
insb
fsubl
shrl
push
mov
or
daa
lock
gs
arpl
outsl
imul
push
sub
xchg
insb
fidivrl
divl
out
sub
jo
sub
test
call
mov
mov
cwtl
icebp
pushf
arpl
dec
cs
and
mov
xchg
in
mov
enter
out
insb
sub
push
xchg
mov
mov
fs
or
les
and
mov
insb
lds
std
jo
mov
insb
push
or
push
inc
gs
cmpl
rorl
inc
mov
in
dec
and
adc
bound
dec
fidivrs
lret
dec
push
shrl
cs
mov
sti
xlat
insb
pusha
lret
mov
loop
insb
inc
xchg
bound
cmp
push
inc
inc
mov
aas
lods
pop
push
cmpsb
insb
lahf
ret
out
hlt
fildl
dec
dec
mov
push
ss
dec
loopne
mov
cmp
dec
movb
test
subl
imul
subl
in
push
mov
xchg
add
std
cmp
insb
xchg
jns
or
mov
shr
sub
dec
dec
xor
push
jle
insb
jge
mov
std
push
mov
mov
adcl
push
sub
xor
jae
aas
shll
icebp
add
add
pop
mov
cmp
jg
xor
mov
jae
fdivr
jnp
imul
adc
add
fs
adc
repnz
mov
bound
sub
in
insb
ds
cmp
xlat
add
mov
mov
test
testl
ljmp
loopne
or
fiadds
loop
pop
pop
in
sbb
sub
adc
mov
imul
jmp
mov
jb
jg
lods
cs
inc
jne
movsb
sbb
xchg
jns
mov
dec
mov
cmpsl
int3
jnp
lcall
fldl
in
test
dec
adc
mov
mov
jle
stos
jge
pop
leave
call
lods
mov
mov
inc
ds
sub
push
bound
xor
pop
inc
cltd
sbb
fmuls
add
dec
insb
inc
clc
stos
jns
mov
enter
xor
push
xor
xchg
xchg
jne
dec
insb
divb
nop
xchg
insb
adc
lock
inc
insb
mov
mov
insb
and
jns
dec
mov
dec
jp
insb
lea
popa
cmp
fsubrs
lods
xor
adc
adc
mov
sub
jnp
movsl
cmp
push
dec
mov
cs
xor
mov
shrb
mov
mov
xchg
dec
xchg
testb
or
insb
cmp
cwtl
filds
fsubrs
mov
push
sub
and
les
pop
in
or
mov
in
outsb
rorl
inc
lcall
jns
dec
loope
sbb
out
insb
sbb
imul
jmp
sbb
ds
fldcw
dec
sub
pusha
lret
dec
fstps
clc
popf
aam
jl
xchg
mov
pop
dec
and
daa
popf
jle
jecxz
push
gs
xor
movsb
xor
xchg
jge
loope
xchg
insb
in
clc
pop
test
mov
rcrl
insb
out
adc
mov
ds
dec
cmp
jp
push
xchg
insb
lret
mov
call
sahf
in
in
scas
daa
mov
inc
test
insb
pop
mov
sub
pop
out
lods
dec
push
xor
push
out
dec
leave
jb
je
sti
insb
cmpsl
xor
sub
addr16
xchg
shr
imul
icebp
adc
and
sbb
push
pop
subl
adc
aad
sbb
in
je
rcr
std
insb
and
xchg
adc
int
sbb
mov
jge
fmul
mov
jae
rcll
test
js
jnp
mov
mov
fiaddl
into
ja
insb
xchg
jb
jecxz
push
pusha
fldcw
jo
inc
cmc
fbstp
add
add
popf
jle
mov
sub
add
mov
adc
sub
int3
into
cli
mov
xor
pop
adc
in
add
xor
nop
sbb
inc
xchg
or
dec
xlat
pop
insb
xor
test
push
cs
sub
cld
call
insb
sahf
dec
sub
ljmp
pop
jl
dec
lahf
repnz
loopw
pop
dec
js
lods
insb
adc
pop
add
aam
insb
push
xchg
je
imul
push
xor
push
sub
jbe
push
inc
lods
outsb
lahf
push
sub
fiadds
insl
in
xchg
outsb
idivb
das
adc
adc
insb
bound
and
insb
sbb
cmp
jle
leave
loop
ljmp
pop
jno
enter
insb
pusha
test
mov
adc
and
push
fsubl
or
xchg
insb
rcrl
jp
fisttpll
adc
sub
shl
sub
je
imul
mov
lcall
dec
jb
mov
inc
sbb
or
xchg
adc
push
xchg
jbe
add
scas
mov
pop
pop
insb
push
loope
dec
push
stos
insb
and
mov
lret
mov
push
call
imul
imul
pop
mov
sub
outsb
push
pop
xchg
mov
loopne
xchg
mov
jb
push
mov
mov
inc
inc
and
in
in
icebp
jns
xchg
lret
inc
xor
loopne
sub
xchg
jl
add
insb
repz
filds
out
xor
jmp
shrb
arpl
insb
pop
mov
jne
mov
pop
mov
stos
pop
inc
push
push
popf
mov
mov
scas
insb
mov
fcoms
add
es
xor
push
sub
jle
sub
cmc
push
mov
mov
xor
xchg
test
push
leave
push
or
pop
dec
cli
outsl
arpl
arpl
mov
xchg
lea
xlat
stos
js
enter
push
jns
and
popa
pop
mov
addr16
jne
xchg
pop
lods
call
mov
mov
push
push
xchg
insb
push
scas
std
or
fiaddl
in
cmp
xchg
popa
lahf
and
shl
das
cmp
loop
in
pop
lret
insb
push
mov
sbb
cmp
mov
mov
rcrb
and
rorl
push
stos
insb
lahf
daa
out
cmp
insb
imul
das
pop
in
jge
xchg
loope
shrb
loop
mov
addr16
xchg
sub
lods
addr16
push
jecxz
out
nop
mov
add
insb
lahf
dec
cmp
insb
sbbb
and
addr16
ret
cli
imul
jno
mov
cmp
insl
insb
and
call
lcall
hlt
insb
pop
add
jecxz
addr16
fsubr
jae
mov
mov
cmp
or
or
adc
fdivs
movsl
and
push
cwtl
out
adc
ficompl
mov
jge
push
jne
aaa
mov
cli
fstl
popa
int
add
sub
jbe
or
xorl
addr16
shlb
push
shll
mov
imul
xor
pushf
jl
sub
adc
mov
icebp
ffree
lods
mov
inc
push
in
sub
pop
dec
push
push
in
cmp
jge
mull
push
mov
push
or
movsb
or
insb
ljmp
dec
insb
in
aaa
push
mov
ss
jns
cmp
je
insb
jge
std
mov
in
int3
xchg
jl
or
aas
fistps
cmpsl
das
ret
push
icebp
jns
stos
sti
fs
fwait
xlat
dec
mov
fcom
cmp
sarl
cmp
aaa
xchg
dec
js
and
cmpsb
pop
frstor
adc
or
lret
push
mov
sarl
cmp
sti
test
adc
jae
shlb
mov
sti
pop
and
pop
test
adc
insb
arpl
jecxz
xchg
adc
xor
sbb
imul
dec
int3
inc
arpl
cwtl
cmp
jmp
sahf
xchg
sbb
xchg
imul
mov
dec
xor
shrb
jg
mov
sbb
outsb
les
xor
xlat
outsb
mov
sarb
cs
imul
int3
ret
jle
addr16
push
mov
mov
push
pop
xor
insb
pop
fmulp
mov
lods
repz
mov
inc
ss
add
push
insb
xor
cltd
shrl
dec
nop
outsb
mov
cmc
ds
mov
sub
pushf
das
leave
nop
ljmp
test
and
lret
sahf
jge
mov
xor
std
sbb
add
in
dec
mov
xchg
inc
imul
xchg
add
lahf
mov
loop
scas
insb
mov
scas
das
adc
ret
enter
nop
xor
insb
fisttps
lods
mov
aaa
mov
insb
push
subl
adc
insb
cltd
shrb
mov
jns
pop
cmp
jmp
sub
xchg
and
clc
cmpsl
movsl
mov
daa
int3
mov
sub
repz
insb
stos
mov
pop
insb
cmp
and
into
icebp
les
in
in
inc
jge
insb
push
cs
adc
inc
movl
push
insb
xor
jo
ja
xchg
inc
insb
test
insl
fists
mov
dec
fdivrl
ret
lcall
mov
adc
mov
lea
inc
push
jecxz
outsb
xchg
inc
pushf
push
daa
das
lods
clc
cmp
sbb
and
push
or
xchg
cltd
lods
aam
add
insb
sbb
cmc
mov
in
pop
pop
or
jbe
les
or
push
test
je
dec
scas
rolb
in
cli
ljmp
xchg
fsin
shll
mov
sarl
mov
lods
xchg
mov
xchg
sbb
lahf
es
aam
add
jns
cmp
arpl
mov
insb
sbb
xchg
js
imul
call
repnz
or
insb
add
push
jmp
gs
fnstcw
out
jp
imul
std
lret
mov
hlt
xchg
and
xchg
dec
ss
insb
push
pop
add
pop
jns
leave
sub
imul
push
dec
lods
push
andl
ficoml
lahf
push
test
jg
xor
cli
add
pop
sbb
push
loop
pop
xlat
insb
loope
outsl
es
out
imul
push
cld
push
pop
add
popa
and
mov
xchg
push
roll
into
xchg
insb
out
test
mov
add
sahf
mulb
cltd
insb
les
mov
data16
pushf
mov
das
push
lcall
popa
push
pop
xor
cmp
sti
into
mov
lods
insb
sub
push
mov
xor
mov
insb
inc
sbb
add
sbb
popf
cmp
sub
pop
mov
pop
xchg
jnp
scas
sub
jbe
jmp
mov
jb
ss
dec
pop
cmp
insb
mov
lods
and
mov
add
clc
push
sub
pushf
sahf
push
insb
adc
jae
mov
pop
cmp
jge
cs
and
insb
or
fcomps
test
add
adc
push
ljmp
fsubrs
bound
jo
xlat
push
xchg
or
xchg
xor
lahf
jle
mov
insb
or
inc
xchg
and
ds
fists
rcrb
js
mov
aam
cmpsb
outsb
xchg
or
aaa
dec
xor
jp
dec
xchg
add
fsubr
mov
sub
mov
insb
xor
and
flds
popa
ret
xchg
repnz
fsts
pop
aas
pop
lahf
add
bound
adc
and
psrld
test
fisubl
out
fistpll
in
jb
pop
cmpsb
daa
fidivrs
ss
das
pushf
dec
add
aas
pop
mov
or
pop
pop
jo
es
cmp
mov
negb
sub
push
inc
push
insb
sub
ljmp
aad
sub
in
pop
mov
ret
int3
sbb
insb
adcb
xor
mov
in
or
pop
not
ds
jb
out
insb
iret
mov
arpl
mov
xor
xchg
mov
movsl
fcompl
jbe
and
aaa
outsb
dec
int
xor
popa
cmc
xchg
cmp
push
js
jae
lahf
bound
dec
sub
cmp
cmp
pop
xor
icebp
insb
cmp
adcl
lcall
push
imul
insb
sub
push
pop
fcompl
daa
and
into
cmc
push
insb
in
int3
ret
jno
xor
imul
sbb
jecxz
jmp
mov
sub
mov
gs
dec
out
leave
js
add
or
sub
frstor
push
jmp
xchg
clc
xor
adc
add
jp
idivb
in
sbb
insb
jmp
sahf
lods
cmp
jnp
dec
sub
mov
mov
outsb
div
call
nop
cmpsl
sti
outsb
shlb
in
leave
insb
or
sbb
in
pushf
rol
push
loop
sub
and
mov
test
in
lret
sahf
out
pop
insb
ret
mov
imul
sub
push
mov
lds
jns
inc
mov
insl
sbb
gs
pushf
push
out
jp
data16
xorl
push
rcrl
bnd
int3
sub
adc
mov
or
ja
cs
pop
push
nop
push
aas
bound
je
or
repnz
sub
out
xor
pop
cmp
outsl
jge
in
ds
mov
adc
cmp
xor
cmp
sbb
fldl
test
cld
insb
mov
sub
dec
lock
sub
je
jo
xor
sahf
jp
sub
divb
xor
cmc
jge
test
ja
pushf
cs
xor
and
dec
mov
push
cld
jno
dec
cmp
out
fbstp
mov
mov
dec
dec
stc
movsb
mov
xor
and
lods
out
sbb
cwtl
inc
sub
fcoml
insb
mov
popa
inc
dec
xor
inc
pop
pop
lods
xchg
dec
gs
imul
shlb
push
adc
std
sub
mov
lahf
insb
jb
in
shl
mov
ret
push
imul
dec
fistpll
dec
dec
and
aam
lret
insb
lea
mov
subl
cmpsl
les
fbld
pushf
stos
push
aam
dec
sbb
jns
mov
add
push
incb
jae
or
sbb
fwait
sub
fdivrl
aad
mov
divb
cmpsl
push
adc
cmp
roll
shll
repnz
sub
and
mov
testl
in
cli
jecxz
dec
rcl
in
arpl
outsb
inc
dec
dec
mov
cmpsb
and
test
outsb
jb
stos
addr16
push
aam
or
dec
lret
mov
popa
add
pop
out
dec
jle
mov
cld
pop
adc
insb
bound
scas
cmp
das
pushl
hlt
repnz
mov
pop
push
pop
fsubs
xchg
jne
jle
insb
sbb
and
insb
push
aas
mov
xchg
test
insb
rorl
fwait
sar
push
insb
arpl
ror
jne
dec
imul
add
sbb
cmpsl
jns
mov
pushf
rcll
cld
out
imul
and
andl
subl
insb
mov
pop
mov
insb
xchg
mov
jne
gs
pop
jl
dec
sub
cmpl
push
cwtl
adc
stos
mov
mov
test
andl
icebp
and
insb
mov
out
stc
pop
fldenv
imul
mulb
lods
mov
insl
and
dec
dec
insb
xchg
push
lods
fdivr
sbb
insb
jle
inc
shll
imul
dec
add
mov
xor
sub
dec
inc
loopne
arpl
add
jge
lods
ja
stc
ret
in
fisubs
sti
lcall
push
jge
insb
add
xor
inc
iret
cwtl
mov
xorl
aas
dec
cmp
hlt
je
add
stos
int3
cmc
adc
ja
cmpsb
in
jbe
iret
test
jg
cltd
cmp
mov
jle
and
or
dec
mov
add
push
mov
movsl
bound
push
in
push
add
push
jo
push
test
imul
inc
push
andl
loope
repnz
fbld
cmp
faddl
or
mov
insb
adc
fdivr
fwait
cmp
je
or
inc
jecxz
sbb
insb
dec
test
lcall
les
mov
and
insb
divb
inc
jmp
insb
in
jecxz
mov
jge
insb
mov
push
repnz
hlt
mov
ret
pop
jb
push
lea
in
push
insb
insl
movsb
push
cmc
popa
and
insb
pop
sbb
ss
test
imul
cs
into
push
gs
sub
jo
or
xor
scas
in
insb
mov
mov
xchg
insb
mov
mov
js
adc
lock
ds
lock
imul
cmp
xchg
insb
jnp
xor
fidivl
popf
aaa
jmp
insl
mov
movsl
adc
xchg
je
sbb
clc
loope
push
popf
or
imul
hlt
roll
hlt
aad
mov
and
mov
sub
loopne
call
js
lods
adc
insb
inc
fisttps
popa
insb
imul
push
lods
gs
cmp
mov
int3
call
or
pop
insb
repz
aaa
mov
push
fisubl
clc
pop
jb
dec
das
test
mov
lret
dec
les
insb
add
rcl
xor
sub
pop
pause
in
cs
test
dec
fisubrl
lea
jecxz
insb
jnp
fwait
enter
or
jne
dec
test
fildll
addr16
fnstsw
sbb
sub
ret
inc
push
jae
imul
stos
repnz
pushf
subl
insb
mov
in
jb
in
movsl
mov
outsb
insb
cmpb
addr16
cmp
xchg
jae
dec
lea
imul
sbb
and
mov
repnz
call
add
pop
jp
test
xchg
push
jnp
mov
push
and
xchg
in
out
dec
js
insb
mov
lds
in
rclb
insb
lods
rolb
push
adc
loopne
pop
mov
pop
and
mov
iret
dec
shlb
sub
mov
pop
jne
inc
sub
push
imul
ror
push
sub
insb
inc
sti
xchg
or
sbb
mov
jl
adc
call
scas
insb
pop
fsubrl
jl
lods
add
xor
adc
sbb
insb
addb
dec
sub
insb
shl
ficomps
lret
mov
or
push
int3
ds
jbe
inc
lods
shrb
jno
imul
fs
bound
cmpsl
mov
outsb
and
fsubl
add
outsl
mov
jae
jbe
stos
imull
movsb
insb
out
out
jle
pop
sar
mov
xor
or
mov
dec
or
ja
lock
xor
mov
pop
xchg
aas
rorb
insb
add
inc
ljmp
mov
lcall
and
mov
jp
les
dec
frstor
jns
subb
push
mov
addr16
sbb
jmp
mul
dec
pushf
in
push
mov
pop
int
jbe
lds
mov
mov
mov
sbb
rcrl
insb
jb
roll
mov
ds
cmp
xor
je
sbb
aam
call
jmp
push
insb
lods
jbe
cld
call
test
jl
hlt
popf
mov
ret
loop
cli
dec
adc
in
fidivrl
lea
pop
xlat
loopne
mov
cs
pop
add
push
les
mov
xor
into
xchg
xchg
xor
dec
pop
movsb
add
mul
adc
insb
das
ljmp
dec
in
xor
clc
jo
or
dec
insb
test
jnp
enter
xor
cmp
das
and
nop
jp
xor
xchg
xchg
or
sub
insb
xor
or
popa
sub
and
aaa
sub
insb
jbe
sbb
fwait
inc
lds
insb
nop
dec
sti
lret
xchg
adcb
jg
jp
sbb
imul
popf
leave
popa
test
pusha
jae
pop
cmp
fistpll
imul
xor
xor
lahf
fldl
pop
call
repnz
inc
bound
notb
iret
insb
lcall
add
stos
push
rcrb
adc
xor
lea
addr16
xchg
pusha
scas
subb
insl
and
insb
xor
adc
lock
pop
mov
loop
dec
or
fadd
and
imul
sti
pushf
inc
xchg
mov
imul
pop
inc
in
enter
into
sbb
dec
cli
cmpsl
cwtl
insb
and
popa
jl
inc
insb
push
enter
test
mov
and
dec
jb
xchg
dec
out
stos
jmp
lret
in
test
mov
mov
rcrb
add
fisubrl
and
inc
imul
mov
popa
inc
lods
xorl
stc
fs
pop
cltd
sti
cld
mov
xor
bound
test
adc
sti
leave
stos
lock
jae
cmp
xor
push
in
cmp
sub
jo
test
jmp
sbb
or
lods
testl
lock
and
sti
ljmp
jmp
fwait
ljmp
mov
insl
divl
push
aam
aas
mov
add
cwtl
icebp
in
fstl
dec
mov
repz
scas
hlt
push
lcall
xchg
mov
aam
jbe
xorl
pop
xchg
aad
mov
pop
adc
adc
test
lods
insb
mov
arpl
ja
por
cmpb
jecxz
es
loop
fwait
mov
pushf
fnsave
mov
popf
mov
lods
jmp
and
insb
pushf
hlt
push
jg
les
insb
cs
cwtl
sub
fisttpl
inc
xchg
and
pop
sbb
stos
imul
xor
adc
repnz
je
cmc
xchg
ja
cwtl
xchg
adc
push
scas
bound
mov
shrl
inc
jg
loopne
insb
xchg
push
test
adc
insb
fdivrl
pushf
and
inc
sub
hlt
mov
push
inc
push
insb
test
mov
leave
insb
xor
xor
mov
jg
imul
jo
icebp
je
add
loop
stos
in
sbb
or
xlat
pop
insb
in
mov
mov
mov
insb
idiv
and
insb
imul
imulb
arpl
ja
push
xchg
insb
jne
fstpt
mov
repnz
loopne
cmp
shrb
and
mov
fdivrp
inc
or
and
gs
shrb
adc
or
push
inc
sub
inc
jo
insb
mov
cwtl
sbb
js
dec
in
pop
insb
jg
es
cs
sahf
dec
jmp
insb
xchg
push
push
sbb
sbb
mov
insb
mov
mov
loope
pop
lret
test
dec
lods
fstpt
dec
jbe
or
lock
sbb
mov
cmp
inc
cmpsl
and
popa
xor
pushf
insb
lret
imul
adc
loope
shll
xchg
mov
jp
int
nop
sbb
mov
test
push
sbb
adc
icebp
outsb
in
jns
sbb
inc
insb
pop
sub
lock
imul
sbb
dec
in
insb
add
mov
add
cltd
popf
adc
out
insb
out
into
mov
push
push
cmpsb
imul
sti
ret
imul
je
push
outsb
push
insb
pop
pop
mov
push
std
call
into
insb
xor
insb
and
inc
or
mov
cmp
sub
mov
fmull
cld
loopne
ds
insb
xchg
add
sub
sub
insb
or
mov
jo
js
mov
and
push
fimuls
jbe
popf
orl
sub
mov
out
mov
inc
movb
rcl
add
insb
adc
sbb
xchg
insb
sub
pusha
or
scas
push
popf
push
ret
adc
fs
cmp
pop
push
push
and
or
or
pop
insb
dec
dec
mov
sarb
lds
hlt
mov
xchg
aam
sti
inc
inc
xor
out
xor
sbb
call
mov
push
insb
jge
std
mov
pop
or
cmp
inc
es
movb
dec
dec
push
out
push
xchg
imul
pop
cmp
insb
das
fisttpll
mov
movl
pop
pushf
lret
mov
insb
mov
xor
subl
sub
pop
js
dec
mov
xor
insb
cmpsl
inc
pop
xchg
mov
dec
pop
imul
cmp
or
mov
mov
push
sub
dec
loop
lods
inc
ret
js
into
imul
enter
jb
imul
jae
pop
insl
dec
cs
cmpsl
insl
mov
cmp
std
nop
mov
or
push
bound
out
push
add
push
pop
insb
push
ss
and
adc
xor
jp
adcb
shlb
pop
in
pop
int3
fs
iret
or
xchg
mov
jle
push
and
push
xor
lods
mov
movsl
std
int
pop
pusha
cmp
mov
in
cmp
dec
cltd
xchg
sbb
cli
or
pop
or
pop
sbb
rep
insb
pavgw
pop
sbb
inc
in
cs
je
repnz
insb
cmp
rolb
rclb
out
mov
or
insb
in
jbe
cmp
dec
es
hlt
repz
imul
jns
pop
sub
inc
sub
jno
or
es
addr16
mov
jnp
insb
pop
jmp
pop
sub
es
in
int
sbb
dec
xchg
fnsave
mov
outsb
insb
ret
xor
std
imul
leave
dec
insb
jg
aaa
bound
lods
lret
push
addr16
xor
mov
js
pop
lahf
loope
outsb
mov
lods
shrl
adc
jle
in
mov
test
lock
dec
insb
inc
js
mov
insb
lods
shrb
mov
mov
push
push
pop
adc
pop
dec
clc
sti
xchg
pop
add
xor
xor
outsb
es
jns
mov
pop
insb
aas
mov
xchg
mov
das
gs
xorl
pop
sbb
push
ljmp
es
fisttps
and
dec
lea
cmp
insb
mov
mov
cmc
sub
sbb
pop
xchg
lds
dec
mov
das
xlat
inc
in
sub
dec
push
sbb
cmp
dec
aad
cmp
in
dec
insb
mov
cmp
mov
mov
cli
test
cmpsl
mov
jb
add
xchg
sbb
fs
push
int3
inc
sbb
push
stos
insb
adc
mov
insb
lods
arpl
mov
movsb
mov
inc
pop
test
insb
add
mov
ja
dec
sub
add
xchg
cmp
push
pop
je
xchg
adc
andb
into
out
add
fdiv
repnz
fstpl
push
mov
filds
shrb
nop
sub
adc
sub
test
rcrb
and
xchg
mov
xor
push
dec
lret
lods
sbb
mov
inc
data16
ror
cmp
insb
dec
or
xor
cmc
inc
test
mov
xor
jb
int3
ss
xor
fcomip
hlt
cmc
xchg
fcoms
arpl
mov
push
aas
stos
stos
xchg
ret
dec
nop
add
imul
adc
xchg
popf
pop
inc
data16
mov
in
enter
cmpsl
mov
lret
arpl
rorb
jl
lods
aas
insb
or
inc
xchg
jge
aad
mov
out
inc
fs
sub
push
insb
fsubs
sbb
clc
lret
and
lods
add
insb
pop
outsb
pop
or
mov
push
shrl
mov
pop
mov
sbb
pop
lret
pop
or
gs
int
int3
scas
sbb
lods
insb
push
subb
or
scas
ja
adc
xchg
aaa
in
adc
pushf
pop
mov
lret
sub
add
pop
add
adc
jl
movsb
popa
adc
lcall
insb
jp
fwait
in
shrl
stc
inc
mov
ret
ljmp
shrb
fwait
pop
sub
xorl
flds
es
add
push
mov
or
push
into
imul
int3
lcall
imul
and
popa
lds
shr
ss
mov
in
pushf
push
aas
imul
mov
imul
jmp
insb
loopne
ljmp
stc
imul
insb
int3
pop
jmp
xor
sub
or
ret
cli
push
lahf
lret
insb
sbb
cmc
mov
gs
arpl
cmp
andb
std
dec
dec
loope
jle
mov
imul
mov
cmp
subb
jo
mov
mov
mov
out
inc
hlt
mov
sbb
xchg
fmuls
xor
subb
shll
dec
jno
mov
insb
fwait
test
push
movsb
add
xor
insb
push
xchg
mov
jbe
cmp
jmp
pop
xor
cmp
aaa
les
insb
inc
jae
in
push
shrl
jl
and
lcall
and
imul
lock
lods
sbb
mov
lods
pop
mov
xor
xchg
sahf
insb
and
int
or
dec
insb
push
pop
stos
mov
das
mov
add
cmc
nop
stos
incb
xchg
adc
xchg
lcall
shl
cmp
push
and
and
mov
push
das
popf
cmp
xchg
insb
adc
insb
pop
sbb
cli
or
xchg
jb
pop
fimull
imul
outsb
enter
or
sub
xlat
data16
xchg
pop
mov
mov
pop
xor
rcl
sub
mov
jnp
jb
fsubrl
gs
mov
mov
out
fisubs
ja
dec
repz
imul
adc
cmpsb
insb
dec
popf
jg
test
cmp
insb
push
xor
mov
sub
mov
mov
jno
xchg
out
gs
clc
stos
lahf
jle
mov
test
dec
fisubrs
outsl
mov
int3
xchg
jge
xor
xchg
mov
mov
insb
enter
cmp
xchg
insb
xor
push
sub
cmpb
insb
stos
sahf
lods
jmp
xchg
xor
test
push
rep
lods
inc
xor
stos
push
mov
arpl
jl
inc
das
or
fbstp
mov
xlat
cld
pop
pop
mov
push
lods
lock
fisttps
insb
jae
lret
ficomps
and
cmp
ljmp
imul
cmc
and
push
shlb
in
subl
in
jl
rorb
sub
pop
outsb
push
pushf
pop
inc
das
cmc
jae
ficoml
insb
insl
cwtl
adc
fstpl
ret
mov
or
mov
imul
cmp
add
mov
push
fidivl
stos
jmpw
or
pop
mov
mov
mov
sti
jg
lods
loope
or
fsubp
push
loopne
ljmp
arpl
add
xor
sbb
pushf
in
jmp
gs
push
xor
fsubl
xlat
xchg
add
nop
scas
add
insb
mov
adc
stos
inc
inc
stos
int
inc
out
insb
pop
push
lods
mov
insb
push
shl
jecxz
pop
lea
pop
clc
xor
stos
lret
aam
push
jge
add
cwtl
loope
pop
pop
cmp
shrl
cltd
stc
ror
pop
je
fadd
aas
pop
test
xchg
insb
stc
push
leave
mov
in
mov
or
pop
and
pop
xchg
aaa
and
insb
dec
dec
jb
xchg
mov
xor
rorl
inc
insb
imul
adc
or
aaa
movsl
aad
jnp
icebp
imul
sbb
or
jg
daa
cmp
imul
orb
sub
orl
int3
arpl
testl
jo
cwtl
insb
movsb
push
sub
rolb
and
out
inc
hlt
insb
inc
test
fs
popa
cmpsl
sbb
lret
insb
sbb
stos
rcrb
push
sub
xchg
pushl
cmpsb
imul
stos
sbb
pop
jne
movsb
imul
loop
pop
outsb
cmp
sahf
insb
in
or
sbb
push
cmc
mov
mov
pop
rcl
insb
or
mov
into
jle
out
insb
repnz
sub
aam
dec
loop
jne
mov
ficomps
sub
add
or
add
in
xor
add
out
xor
jne
ds
insb
and
pop
push
insb
cltd
inc
adcl
or
dec
out
jns
lahf
insb
aaa
dec
add
or
insb
jle
pop
jge
mov
aas
dec
sbb
movsl
adc
pop
mov
inc
lea
mov
cmc
fsubrl
add
insb
aas
push
das
mov
pop
repnz
popf
dec
test
rclb
pop
insb
or
pop
fdivrl
xchg
bound
sbb
adc
in
mov
je
jle
div
insb
fwait
in
outsb
jno
lea
xchg
insl
jge
jmp
in
and
pushf
popa
insb
adc
lcall
jb
cwtl
insl
mov
ljmp
cmc
jmp
jne
repnz
push
fsubs
push
adc
cmp
cmc
insb
mov
fwait
vunpcklps
xor
pop
xorl
jle
movsb
mov
popf
imul
clc
adcl
mov
or
mov
fcomp
dec
push
lret
fisubrs
int3
xor
cmp
push
inc
xor
popf
call
das
inc
sbb
in
mov
std
insb
cs
xchg
mov
xor
and
ficompl
cmp
jle
insb
clc
mov
sti
aam
pop
push
add
sub
testb
jmp
insb
scas
push
and
pop
pushf
sbb
mov
sub
fbld
pop
xchg
loop
stc
xor
imul
push
mov
insb
mov
push
add
xchg
dec
loopne
xorb
xchg
cmp
hlt
aam
push
sub
pop
pop
rcl
in
int
sbb
jns
insb
cld
adcl
xchg
lods
lret
insb
imul
push
mov
insb
std
repz
mov
cltd
mov
add
dec
imul
mov
mov
xchg
insb
scas
push
push
incb
frstor
fisttpl
insb
mov
shrb
dec
lret
jecxz
andb
xor
sbb
insb
sub
ljmp
inc
adc
mov
ret
dec
popa
push
lds
enter
pop
out
mov
or
mov
jns
jmp
pushf
sbb
and
push
movsl
in
jne
sbb
jae
int3
mov
outsb
jbe
inc
in
das
leave
test
jmp
jb
test
push
cmp
insb
xlat
or
loopne
push
aad
insb
push
jge
mov
push
mov
leave
imul
lret
lods
fistpl
xchg
insb
test
xor
adc
mov
int3
outsb
jo
and
dec
das
and
je
mov
pop
inc
sbb
fmull
insb
xlat
fisubl
pop
insb
mov
jecxz
or
push
sti
orl
adc
fdivrl
insb
leave
les
mov
sbb
xor
ret
test
repnz
in
jo
dec
cs
sub
push
call
and
sahf
lods
test
mov
movsb
insb
xor
aaa
popf
xor
mov
push
icebp
insb
daa
imul
and
imul
andb
inc
push
jecxz
cmpsb
mov
or
mov
sbb
in
add
test
mov
jmp
call
in
inc
xchg
in
mov
jae
aam
je
lds
sub
std
jge
insb
adc
mov
insb
jmp
cmpl
or
sbb
shrl
insb
mov
adc
pop
movsl
addr16
xchg
nop
xchg
movsl
jp
xor
les
jmp
mov
push
mov
xchg
push
leave
int3
cmpsb
pop
das
ret
dec
xchg
dec
insb
sbb
jb
inc
cltd
out
in
arpl
int3
cmc
aad
scas
decb
add
test
outsl
jl
xchg
insb
jl
sbb
adc
jnp
insb
adc
in
loop
dec
cmp
push
repnz
push
stos
pusha
popa
xchg
mov
push
dec
je
mov
mov
mov
cmp
in
dec
imul
adc
cmp
mov
adc
popa
arpl
xor
lods
popf
mov
inc
sbbb
sub
push
clc
jge
adc
add
pushf
int3
loop
inc
insb
dec
cli
stc
icebp
cltd
or
insb
fildll
gs
insb
xchg
dec
adc
mov
fstpl
inc
or
xor
xchg
ja
sbbb
xor
lret
inc
ret
pop
pop
xchg
in
gs
sub
insb
xor
push
es
push
loopne
sahf
push
adc
insb
mov
mov
xchg
jp
pusha
or
xor
cmc
lods
mov
mov
repz
pop
in
int3
push
mov
test
and
cmp
pop
mov
push
mov
mov
sbb
sub
pushf
adc
lock
out
data16
adc
js
mov
lock
sbb
divb
gs
fs
mov
cmp
test
lods
rorl
insb
mov
push
insb
lahf
into
push
int3
push
push
insb
lcall
jo
in
cmp
jp
ss
mov
jae
xchg
shlb
xchg
sub
mov
add
jne
xchg
faddl
fdivr
shrb
gs
mov
cmpl
scas
sub
jecxz
insb
pop
dec
add
pop
in
xor
sbb
sub
cmp
imul
dec
jge
lods
lcall
lods
testl
jmp
inc
insb
pop
fnstsw
push
cmp
inc
add
push
xchg
jae
xor
testb
movsl
mov
insb
shlb
xchg
inc
fistpll
shll
popa
movsb
push
pushf
lods
xchg
imul
imul
mov
js
imul
inc
cld
or
xlat
sti
cmp
imul
stos
sahf
std
in
pop
in
jo
mov
or
mov
xchg
mov
pop
rorb
push
test
mov
cld
insb
rclb
xorl
pop
push
les
stos
mov
xchg
insb
cli
cmp
mov
repz
mov
mov
xor
ja
shrb
xchg
mov
sub
jmp
insb
popf
pusha
fdivrs
insb
sub
sub
or
leave
lock
das
and
lcall
mov
imul
sbb
leave
insb
cld
mov
inc
cmc
sub
mov
pop
lods
pusha
js
insb
arpl
aaa
rcr
jnp
int
mov
insb
arpl
pop
pop
sbb
inc
shlb
ja
inc
push
insb
lret
adc
fiaddl
xchg
insb
xor
jmp
movsl
insb
add
decl
xor
sbb
shrl
adc
stc
paddsb
imul
data16
cmp
insb
jnp
punpcklwd
sub
fisubrl
bound
jmp
mov
jg
mov
in
aad
clc
insb
dec
jp
xorl
rolb
sbbb
insb
mov
andb
pop
adc
add
and
xchg
lahf
mov
cmp
xchg
je
insb
rcrb
leave
test
stc
xor
hlt
add
les
cltd
imul
leave
jge
dec
lods
xor
arpl
add
orl
jbe
popw
sbb
jge
cmp
xchg
and
jo
jo
imul
cs
sar
arpl
sub
xchg
dec
insb
jl
cmc
test
hlt
stos
insb
inc
js
stos
push
jmp
xchg
jmp
popf
and
xchg
sbb
iret
mov
xorb
push
xchg
movsl
xor
sub
push
sub
sbb
mov
fidivs
ret
insb
pop
sbb
insb
pop
inc
dec
add
fsubrl
dec
xchg
xchg
pop
jl
imul
clc
jl
push
sbb
insb
ficomps
aam
push
or
pop
dec
stos
xchg
fs
jae
in
mov
cltd
pop
xchg
pop
adc
movsb
xor
mov
dec
jp
push
mov
std
xchg
es
jae
jnp
pop
and
add
out
push
mov
add
ret
es
movsl
sub
dec
inc
mov
xor
aas
push
shll
aad
and
push
aam
pop
pop
xchg
shr
leave
xchg
adc
icebp
in
insb
mov
imul
fimull
outsb
ret
pop
insb
leave
popa
pop
fldcw
popf
sti
push
xor
dec
inc
jl
jno
pop
stc
loopne
loop
subb
and
fstpt
add
mov
xchg
loope
insb
jno
sbb
outsb
push
push
mov
xor
or
jl
dec
vpackssdw
lds
pop
xchg
imul
mov
xchg
fsubrl
clc
fldt
inc
xchg
pop
and
add
cltd
enter
xlat
mov
int3
sarl
or
pop
dec
insb
daa
jl
mov
insb
push
push
dec
inc
repnz
insb
ja
mov
cld
ret
push
insb
and
xchg
ljmp
lret
fsubrp
and
popf
lret
sub
test
imul
xor
mov
push
push
adc
xchg
subb
sub
repnz
das
xorl
sbb
pusha
insb
adc
inc
pop
cmp
insb
xor
cmp
cmp
mov
idiv
insb
jb
push
int
mov
mov
sub
lret
push
pop
pop
pop
ljmp
inc
xor
loopne
aaa
jbe
insb
pop
shll
and
lcall
je
insb
pop
mov
cmp
mov
aad
mov
pop
gs
insb
cli
addb
insb
xchg
push
les
cmp
sub
jbe
insb
and
insb
sahf
fwait
pop
out
cld
insb
jp
pop
test
push
ds
inc
bound
scas
insb
push
enter
jl
out
call
xchg
mov
push
push
iret
in
cwtl
pop
insb
fcmovbe
in
mov
xor
repz
jne
inc
sti
inc
aaa
insb
push
js
and
sahf
mov
mov
shl
jno
or
pop
and
mov
aaa
rorb
jno
out
dec
loopne
hlt
subl
insb
int
pop
adc
adc
jle
xor
insb
inc
mov
jecxz
insb
lahf
pushf
bound
rep
pusha
and
jo
scas
ja
imul
add
mov
pop
lret
xor
push
insl
icebp
loop
sub
mov
xor
lret
dec
lret
inc
pop
sub
adc
insb
jo
xchg
std
bound
and
inc
insb
call
aam
insb
lret
rol
mov
push
xlat
adc
adcb
sub
ss
mov
sub
xchg
fxch
lea
mov
jp
inc
cmpsl
in
neg
outsb
cmpsb
in
dec
xchg
insb
or
es
nop
test
mov
hlt
insb
mulb
adc
test
insb
lea
cmp
xchg
add
adc
aam
mov
xchg
mov
pop
jmp
inc
arpl
fmuls
pop
cwtl
insb
bound
pop
in
decl
and
xlat
call
sbb
push
dec
ja
cltd
and
cmp
jno
into
or
mov
jecxz
cmpl
test
dec
mov
push
xor
adc
insb
sarl
sbb
cmp
out
lods
mov
xor
jg
sub
push
xchg
into
inc
jp
fdivrl
lods
nop
daa
push
imul
fdivrl
out
insb
arpl
xor
add
ret
sbb
jmp
test
lahf
pop
mov
rolb
fs
mov
cltd
cmp
sub
vsubps
jo
pop
ds
adc
pop
sub
insb
sub
jecxz
mov
lea
cwtl
and
mov
dec
das
icebp
scas
in
push
add
or
pop
les
push
mov
push
icebp
sbbl
fadd
or
jno
xchg
fwait
mov
xchg
insb
movsb
into
adc
dec
addr16
ja
add
in
and
sub
insb
push
loop
xor
xor
cld
insb
jo
pop
aas
ljmp
dec
in
test
imul
les
cmp
insb
sub
out
aad
sbb
lods
stos
push
rcrb
jecxz
cmp
add
insb
push
cmpsl
ret
inc
sub
cwtl
or
dec
shl
pop
inc
ja
fs
or
jge
insb
sub
mov
orb
mov
int
push
ja
push
dec
into
pusha
cmp
cltd
rcr
jb
xor
adc
inc
insb
jno
fmul
call
jecxz
test
cmpsl
xchg
roll
sbb
scas
xchg
cmp
sub
lea
ss
and
icebp
mov
repnz
gs
mov
sets
and
lcall
mov
jnp
inc
insb
mov
cmp
pushf
pop
sub
mov
jl
test
and
mov
enter
push
mov
in
cwtl
sub
mov
dec
movsb
scas
or
pusha
pop
jge
icebp
mov
push
jno
dec
lods
popa
mov
test
insb
push
fwait
cmp
mov
sti
sahf
test
sub
in
or
ljmp
dec
mov
mov
jns
cli
lds
pop
out
cmp
icebp
add
fsub
jnp
mov
jae
fs
sbb
popf
pop
insb
lcall
cmp
das
push
xor
lock
popa
lcall
movsl
pop
sub
cmc
lock
add
pop
je
lret
js
imul
mov
cmpsb
cs
add
out
enter
test
mov
leave
test
pusha
mov
fdivrl
out
movsb
mov
int
in
adc
cltd
in
cwtl
sbb
mov
push
mov
mov
das
dec
inc
xor
mov
dec
xchg
lret
imul
jne
push
loop
int
stos
insb
flds
fcompl
inc
repz
in
test
insb
pop
sub
cmpsb
shrb
xchg
les
jne
pop
jecxz
adc
call
cmpsb
js
leave
insb
test
or
mov
stos
out
gs
lods
push
sub
insb
xor
jle
jmp
lret
ret
shlb
lret
mov
xchg
pushf
loop
insb
adc
lret
out
lcall
std
or
lods
insb
inc
loope
push
jge
dec
nop
das
fdiv
iret
bound
imul
shlb
iret
test
sub
xor
loope
fsubp
xor
iretw
out
es
lock
add
popa
insb
addr16
inc
sbb
adc
ret
push
leave
pop
scas
enter
daa
bnd
dec
adc
xchg
aas
and
fs
push
sbb
mov
repnz
je
ja
mov
test
pop
cld
pop
push
xchg
dec
xchg
mov
jne
inc
ss
lcall
xor
addr16
mov
mov
push
hlt
leave
insl
or
jbe
or
cld
imul
cs
out
insb
or
shrb
sub
inc
and
iret
notb
mov
push
icebp
movsl
clc
mov
push
or
dec
test
imul
sub
insb
push
jno
mov
xlat
and
int
push
aad
push
and
paddsb
cmp
repnz
lock
movsb
dec
sub
cmp
push
xchg
sbb
xchg
out
push
std
insb
push
mov
push
mov
movsl
pop
subl
inc
inc
xchg
cwtl
mov
push
loope
out
in
jecxz
xchg
cmp
and
out
or
lcall
jae
jbe
pop
test
or
neg
ret
lcall
push
adc
imul
inc
cld
repz
aam
dec
mov
pop
out
jl
je
fldt
pop
add
push
lea
jbe
enter
insb
mov
mov
ret
arpl
xlat
imul
mov
mov
or
outsb
sbb
in
insb
stos
adc
push
push
mov
imul
xchg
adc
cmp
pop
cs
xacquire
not
insb
pop
test
mov
insb
sbb
sbb
pop
jb
movsl
xor
sbb
imul
into
nop
cld
push
insb
cmpsb
cmp
sub
insb
fs
inc
xor
mov
lret
data16
movd
les
adc
xlat
push
insb
or
mov
sarb
insb
mov
repz
insb
jecxz
dec
lret
test
negl
xchg
adc
pop
dec
ds
push
lret
das
insb
dec
repz
fcoml
roll
repnz
cmp
push
push
mov
loopne
fnstsw
arpl
mov
sbb
call
sbb
xchg
in
pop
jge
mov
leave
mov
xchg
mov
push
insb
scas
into
orw
fdivr
jbe
inc
adc
inc
mov
loope
mov
lods
xchg
imull
xchg
mov
lock
sub
jp
adc
push
inc
insb
dec
mov
imul
int3
cmp
loop
dec
or
xor
cmp
je
flds
imul
or
pop
mov
insb
outsl
sti
mov
jns
jmp
popa
int
je
fsubrl
push
cmp
dec
imul
mov
ret
mov
or
dec
xchg
decl
insb
lods
mov
pop
cld
insb
sub
fsubrp
sbb
dec
pop
dec
lea
pop
nop
lods
add
outsb
icebp
xor
leave
mov
insb
and
mov
lods
push
or
aam
xor
sub
in
aas
imul
mov
imul
xchg
inc
cmp
insb
mov
jge
icebp
pop
test
add
lods
sbb
daa
mov
inc
in
addl
imul
out
lock
and
mov
cmpsl
jmp
insb
rcrl
fwait
cwtl
rorl
imul
ret
push
sbb
sbb
jne
orl
push
mov
add
push
clc
fisttpll
cld
repz
cmp
mov
xor
testb
imul
pop
js
dec
sbb
push
gs
add
jne
pcmpgtb
lods
and
inc
inc
aam
das
or
adc
and
int
sbb
imul
in
adc
cld
lods
es
inc
push
push
adc
jae
popa
popf
sbb
pop
jle
fildll
xchg
push
leave
out
outsl
fnstcw
lret
shll
mov
adc
aas
lock
loope
test
icebp
js
sbb
cmpl
mov
xor
jl
mov
sub
scas
ja
dec
cwtl
mov
ficoml
sbb
in
xchg
aaa
arpl
insl
int
jmp
pop
adcl
insb
inc
fidivrs
xor
push
outsb
insb
mov
iret
imul
mov
mov
notb
xchg
jno
inc
dec
lahf
mov
jmp
shrb
mov
dec
stc
xchg
ds
xor
jge
pop
inc
push
mov
mov
and
les
gs
jmp
in
pop
std
out
or
cmp
pop
jg
vpunpcklqdq
mov
xchg
xor
popa
loopne
push
mov
out
int3
insb
fisubrl
dec
jmp
dec
xchg
leave
fistpll
lods
pop
fst
jmp
add
sub
cld
lds
aad
inc
out
xor
clc
jae
mov
pop
mov
lock
sbb
clc
stos
imul
shlb
lea
insb
out
jge
into
imul
pop
insb
jae
iret
int
or
es
in
pop
js
jbe
mov
or
repz
lods
jns
xchg
pop
mov
shrl
outsl
push
mov
bound
in
leave
or
aam
dec
sbb
sahf
in
jg
or
sarb
mov
sbb
cmpsb
sub
and
push
imul
js
adc
mov
and
mov
insb
mov
or
mov
cltd
cmp
ret
insb
data16
mov
insb
into
fucomip
mov
sub
es
mov
sub
mov
insb
lea
inc
int3
push
xorl
push
and
mull
jge
movsl
push
push
cmp
rep
inc
and
insb
imulb
mov
cmc
icebp
inc
adc
add
insb
pop
jae
dec
ret
mov
cwtl
and
cs
fnstenv
push
sbb
pop
out
xlat
mov
mov
cld
and
test
sahf
cmc
jmp
xchg
push
mov
cmp
insb
add
pop
or
out
mov
mov
lods
arpl
std
jmp
inc
ret
scas
fcomip
xor
aad
sbb
sub
cmp
lahf
mov
insb
xchg
aaa
mov
add
mov
stc
insb
jae
jb
out
insb
fstl
inc
xor
dec
insb
cmp
or
xor
sbb
sbb
leave
adc
movsb
fistl
add
insb
sub
shr
push
xor
test
mov
fs
push
ds
lods
inc
mov
mov
insb
out
int3
jns
sbb
bound
xor
dec
arpl
fmull
sub
imul
push
fisubrl
std
mov
into
addr16
add
shl
insb
sbb
sub
dec
xchg
outsl
jb
push
imul
lahf
test
pop
insb
shlb
pop
out
inc
lret
insb
jle
dec
repz
cmp
dec
arpl
insb
ja
cmp
shl
out
inc
gs
sub
dec
outsb
stos
scas
lahf
pop
cmc
imul
jno
adcl
into
jecxz,pn
fiadds
xchg
add
fdivl
in
push
pop
ds
fwait
dec
jmp
pmuludq
mov
push
in
xchg
xor
mov
rcll
repz
inc
mov
sbb
jge
insb
or
testb
fwait
insb
ja
addl
je
add
jno
insb
testl
xchg
aam
push
out
sub
push
mov
mov
int3
and
jecxz
jle
aas
test
loop
xchg
inc
loope
or
mov
jb
jb
pop
push
imul
insb
sub
jno
insb
mov
push
xor
sti
ret
xor
in
push
jl
adc
xchg
or
inc
imul
adc
repz
xorb
gs
pop
xchg
js
in
mov
xchg
dec
xlat
dec
clc
cmp
shrb
iret
scas
adc
or
xor
push
cmp
insl
insb
out
jmp
xchg
xchg
stos
insl
insb
jo
add
cs
scas
pop
insb
jecxz
xchg
jle
fsubl
insb
push
sub
push
ffree
sti
xor
push
sub
pusha
lea
add
insb
inc
incl
pop
jb
insb
mov
std
mov
insb
adc
lret
push
sbb
push
movsb
insb
fdiv
out
xchg
scas
adc
mov
mov
add
arpl
push
xor
in
inc
push
aad
leave
mov
mov
mov
insb
ljmp
insb
jecxz
outsl
cltd
and
in
in
bound
ret
into
mov
rorb
xchg
mov
imul
push
pushf
push
adc
adc
push
insb
sarl
xor
pop
add
push
cmpl
push
cs
inc
adc
sbb
push
es
xor
bound
fimull
outsb
inc
xlat
mov
sub
shll
outsl
lods
jb
mov
shrb
in
xor
out
jecxz
iret
imull
xchg
mov
add
dec
dec
insb
add
in
insb
push
mov
fisubs
cltd
stos
jge
inc
imul
in
adcl
xchg
mov
push
mov
sub
dec
ret
jne
gs
out
jp
xchg
in
and
xchg
test
cmpsb
lcall
cmp
mov
jle
pop
leave
fs
insb
add
push
dec
insb
cmp
adc
iret
out
lods
insb
pop
cmp
push
cmc
add
adc
jmp
xor
mov
insb
sahf
and
jp
insb
mov
sub
pushf
into
ljmp
cmp
mov
in
adc
sub
into
mov
cli
imul
jl
inc
pop
or
adc
int
ss
insb
mov
iret
decb
inc
sub
ja
xchg
add
arpl
add
jecxz
cmp
pop
xor
pop
sub
pop
inc
js
insb
pop
xlat
aaa
add
mov
mov
lea
pop
cmpsb
mov
mov
insb
jnp
cld
js
call
pop
jo
jne
or
mov
fnstsw
jmp
and
imul
cmp
push
movsb
dec
movsb
and
insb
aad
sbb
aas
insb
fldt
outsl
dec
sub
ljmp
xchg
in
repnz
and
xchg
test
in
xchg
pop
stc
and
in
ficompl
insb
hlt
data16
push
xlat
insb
pop
cwtl
inc
cmp
insb
cltd
mov
nop
mov
stc
or
lods
xor
dec
aam
cli
pop
inc
rolb
and
pushf
push
dec
cli
cmpsl
imul
pusha
sbb
dec
cmp
lock
push
mov
mov
mov
dec
mov
xor
mov
xchg
adc
insb
inc
jmp
and
int
mov
mov
stos
jp
dec
xchg
lods
int3
mov
loop
jno
subb
ds
flds
jae
pop
insb
add
mov
mov
lcall
pop
mov
xchg
push
addr16
sbb
iret
insb
jnp
pop
cmp
xor
out
incl
insb
mov
je
ljmp
and
insb
jno
pop
jle
rorb
fwait
push
aas
aad
pop
pusha
int
dec
insb
mov
addr16
inc
stos
test
xor
push
push
out
mov
sarl
imul
cmpsb
inc
mov
dec
leave
outsb
dec
push
fldcw
pop
cld
push
arpl
ljmp
enter
repnz
sub
mov
dec
and
cmc
inc
mov
adc
mov
fsubs
insb
test
cli
mov
inc
into
lods
mov
nop
mov
pop
inc
insb
orb
rorb
jns
test
int3
jns
jb
test
adc
sub
into
add
das
mov
insb
push
sub
lahf
pusha
popf
insb
add
into
das
push
jno
jnp
ljmp
shll
movb
adc
cmp
mov
pop
aad
jb
imul
jno
mov
fldt
clc
push
sub
loop
push
insb
lds
inc
insb
mov
mov
insb
add
inc
int3
mov
loopne
inc
xchg
cmp
in
pushf
sbb
pop
pop
movsl
dec
repnz
mov
pop
mov
in
xlat
or
insb
out
bnd
jge
cmpsl
imul
test
clc
xlat
scas
dec
and
mov
mov
imul
dec
cmp
mov
dec
push
shrb
dec
insb
push
lea
xchg
push
int
mov
repnz
fcompl
addr16
mov
pop
in
fsubrl
cmp
sub
cmc
cld
push
out
xchg
inc
outsb
pop
fisubs
inc
int3
adc
shll
cmpsl
dec
orl
cmpsb
add
adc
mov
mov
lods
mov
in
rorl
jge
stos
jne
addr16
in
ret
or
setnp
aam
mov
or
enter
insb
xchg
ds
push
jmp
clc
jge
push
aam
sarb
ja
push
sti
xor
insb
adc
clc
sub
inc
xchg
out
dec
ret
or
aaa
xor
or
push
sub
lods
outsb
mov
insb
xor
adcl
mov
loopne
jge
adc
dec
pop
stc
mov
lcall
mov
lahf
clc
mov
mov
mov
lret
xor
sub
mov
mov
push
jno
cs
imul
pop
cwtl
inc
outsb
jne
jo
insb
cmpsb
into
push
testb
inc
jno
dec
aas
lods
inc
scas
out
cmp
mov
data16
popa
add
leave
aas
stos
loop
jbe
insb
inc
pop
mov
hlt
inc
sahf
in
mov
pushl
shlb
sub
push
jb
jmp
mov
aas
stos
jb
jmp
in
sbb
es
lods
jl
imul
in
xor
insb
fwait
mov
loop
insb
dec
push
adc
nop
push
jne
xchg
or
inc
or
aaa
insb
jae
lcall
dec
imul
xchg
mov
outsl
pushf
cmp
orb
add
ja
popf
cmp
adc
pop
xor
orb
mov
sti
iret
cmpsb
insb
scas
pushf
sub
jo
sahf
mov
push
movsl
mov
ds
pop
push
clc
out
call
lods
test
lret
lahf
mov
mov
clc
cmp
fs
insb
sub
aaa
fwait
in
mov
dec
adc
out
jnp
pinsrw
sub
sahf
stos
repz
push
sub
insb
xchg
adc
movsl
xchg
mov
push
subl
dec
add
dec
jbe
nop
imul
insb
lock
cld
pop
pop
gs
push
pop
fucomip
dec
mov
movsl
hlt
insb
xchg
add
int3
int
sahf
xchg
insb
push
nop
sbb
push
adc
jb
jnp
loope
insb
and
xchg
mov
rorl
cld
sbb
inc
inc
imul
outsb
cmp
pop
repnz
jge
dec
inc
mov
mov
jecxz
test
out
mov
and
inc
fisubl
aam
pop
insb
ljmp
out
gs
or
out
subl
sbb
pop
mov
ds
mov
pop
dec
sbb
movsb
scas
lods
cmp
insb
xor
cld
push
insb
cli
adc
mov
sar
popf
jle
add
push
lret
cli
mov
sub
ljmp
ficoml
notl
insb
sahf
pushf
push
lret
mov
sti
imul
inc
leave
ja
mov
insb
inc
jge
pusha
push
scas
imulb
xor
mov
daa
lret
adc
bound
jl
cmp
insb
frstor
adc
push
imul
mov
mov
xor
mov
insb
xchg
in
and
sub
or
add
cmp
fdivr
fsubr
jno
jae
push
imul
lods
adc
and
xchg
and
imul
fmuls
lods
lahf
cmpsl
in
insb
sub
ret
pop
cs
or
xchg
popa
in
dec
imul
xchg
jae
cwtl
js
sub
shrb
gs
insl
sbb
rorl
fsubrl
mov
leave
fmuls
adc
cmpb
insb
xchg
and
cmp
adc
aad
xor
push
outsb
rep
push
push
into
jmp
out
add
mov
or
js
push
insb
xor
lahf
or
and
or
or
mov
xchg
xor
addr16
std
insb
loop
mov
outsl
jmp
test
rep
xchg
adc
insb
adc
gs
sbb
mov
or
push
insb
scas
mov
in
and
decl
ror
nop
insb
fbstp
sbb
movl
pop
mov
sbb
bnd
xor
inc
out
icebp
repnz
insb
pop
stc
sub
mov
adc
inc
insl
outsb
jl
int3
scas
dec
gs
xchg
pop
push
sub
ret
mov
mov
xchg
xchg
xlat
xor
push
pusha
pop
sub
repnz
stos
ljmp
sub
mov
and
jmp
dec
jo
repnz
dec
cmc
inc
sub
out
repz
sub
mov
cli
dec
push
sti
in
and
or
cs
cld
aam
insb
mov
xor
test
insb
lock
xchg
mov
push
sti
out
es
sbb
negl
xor
shlb
pop
adc
or
mov
loope
cmp
sbb
aas
shl
dec
sarl
lods
or
pop
or
leave
xchg
xor
push
xchg
sbb
insb
outsb
in
addb
sub
mov
cmp
dec
clc
sti
pop
rcrb
insb
xor
inc
lods
xorb
cmpsl
mov
aas
scas
cmp
shll
jne
jmp
adc
xchg
jo
insb
pop
ficoms
ljmp
iret
xchg
adc
and
insb
popa
pusha
scas
inc
daa
ret
pop
pop
insb
call
movsl
pop
push
test
insb
loope
jle
out
cmp
pusha
xchg
aad
sarl
fwait
insb
lahf
jno
out
cld
insb
or
pop
outsb
sbb
inc
js
xor
cmp
jg
mov
ficompl
rorb
lret
inc
divb
push
loope
jl
pop
lods
sbb
insb
or
lret
fst
out
arpl
mov
inc
and
fldenv
loope
aaa
shrb
sbb
insb
ds
add
das
mov
sbb
dec
mov
adc
xchg
inc
xchg
shlb
sub
mov
push
loop
mov
in
sbb
in
sbb
sahf
cmpsb
and
add
scas
outsb
popa
ljmp
in
pop
cs
jbe
insb
aaa
pop
or
sub
inc
mov
pop
lods
hlt
adc
pop
pop
ds
mov
ror
jae
aam
testl
mov
push
lret
push
fldln2
gs
and
int3
into
or
push
mov
popf
push
mov
mov
push
insb
movb
dec
hlt
sub
out
xor
addr16
cmp
pop
push
mov
or
mov
rcll
int3
jmp
fwait
sub
loop
imul
lods
testl
pop
bound
inc
push
sahf
push
cltd
imul
gs
jnp
push
cmp
icebp
cmp
ret
push
push
jmp
aad
addr16
cmp
sbb
setae
shrb
pop
cmp
popf
ficoms
dec
insb
rorl
rolb
arpl
dec
cmp
in
ret
add
insb
pop
pop
xchg
lahf
mov
repnz
sbb
pop
imull
loop
mov
push
xchg
and
cmp
fmull
decb
insb
inc
lea
cmp
imul
pop
push
pusha
repz
imul
call
pushf
mov
jle
insl
and
mov
shll
cwtd
mov
sub
push
adc
insb
jp
fdivrs
jle
adc
mov
or
lds
xlat
inc
mov
mov
daa
and
push
insb
ficomps
add
push
pop
xchg
jmp
dec
pop
imul
mov
sub
jbe
push
repnz
fildl
xor
in
sub
les
push
imul
pop
jne
andl
cmpsl
mov
orl
in
scas
cmp
fidivrl
cmp
insb
iret
cmp
xchg
lret
jp
scas
xor
gs
push
adc
sub
in
jno
mov
sub
jp
sti
in
adc
fidivrl
push
dec
jno
mov
stos
or
insb
cmp
mov
mov
popl
std
int
ficoms
dec
insb
mov
and
jne
sahf
pop
scas
fs
adc
mov
std
fstpt
insb
cld
jl
cmp
fdivr
aas
insb
mov
gs
cld
add
je
sar
mov
fnstcw
addr16
arpl
xor
push
into
pop
lock
xchg
mov
mov
sbb
dec
popf
and
pop
adc
lret
test
je
push
jno
lods
rep
add
jno
xchg
aas
mov
mov
popa
std
cmc
jl
insb
pushf
xchg
dec
adc
imul
adc
jo
cmp
imul
js
or
enter
subl
fildl
xchg
and
scas
insb
sti
in
aam
imul
lcall
pusha
inc
int3
jmp
and
daa
cmp
popl
insb
mov
lret
clc
xchg
insb
inc
loope
rcl
aad
int
pcmpeqw
xor
add
sti
ljmp
pop
insb
shr
scas
add
pop
bound
imul
test
xchg
les
jne
add
out
rcrb
pop
insb
lret
scas
test
xchg
pop
bound
sub
adc
fldt
subl
pop
and
fistpll
xchg
cmp
lock
rcl
pop
sbb
mov
mov
lds
push
lret
jne
imul
pop
mov
xor
xchg
pop
insb
and
xchg
enter
aad
leave
sub
sub
fwait
push
mov
mov
scas
sbb
mov
insb
and
dec
mov
lret
inc
int
or
gs
jno
movsb
xchg
in
mov
nop
and
sub
adc
pop
jne
insb
or
sbb
stc
and
cmp
ljmp
pop
mov
js
repnz
jp
ss
incl
mov
mov
gs
xor
clc
add
mov
xor
add
lods
subl
mov
mov
mov
jl
subb
push
jno
mov
ja
cli
out
insb
decb
icebp
mov
add
mov
gs
pop
jo
sar
pop
xlat
int3
xchg
imul
push
mov
imul
mov
pop
imul
insb
push
adc
sti
orb
sbb
test
jp
jg
insb
aas
sub
push
aam
xchg
insb
popf
pop
dec
es
popa
sub
movsb
jge
and
mov
xchg
jmp
sbb
arpl
mov
popl
ret
push
out
test
leave
mov
insb
outsl
mov
mov
jb
xor
dec
lret
sbb
xchg
insb
sub
sub
xchg
sbb
push
mov
insb
xchg
mov
mov
out
insb
cs
cli
popf
call
lods
or
insb
movsl
xchg
aas
mov
dec
lods
inc
dec
push
add
push
push
call
push
or
test
aam
insb
loop
les
mov
orb
xchg
imul
in
xor
mov
jnp
sti
in
mov
lcall
stc
mov
pop
mov
insb
dec
dec
int
mov
test
sub
cmp
in
sub
test
dec
pop
insb
sahf
add
jmp
xchg
stos
mov
or
xchg
mov
out
adcl
jae
sub
push
pop
dec
sub
and
and
call
xor
rcrb
or
mov
int3
insb
xchg
arpl
pop
mov
adc
inc
pop
insb
push
outsb
roll
repz
push
in
inc
dec
ljmp
jecxz
clc
xchg
push
sti
insb
shlb
outsl
into
mov
movsb
dec
mov
rorl
mov
pop
pop
int
fildll
repnz
cld
inc
stos
popf
cli
sub
insb
mov
imul
and
dec
mov
fldcw
mov
repnz
sbb
dec
es
mov
insb
fistps
xlat
jmp
sub
xchg
outsb
arpl
decl
xchg
lods
imul
adc
mov
jne
cmpb
mov
adc
out
stos
loop
or
gs
xchg
gs
lods
xchg
jns
insb
pop
les
mov
pop
nop
cs
adc
mov
add
mov
mov
in
subl
in
out
repz
inc
pushf
adc
dec
pop
imul
loop
mov
xor
sbb
std
add
insb
pop
mov
jmp
xor
in
pop
lds
insb
xchg
mov
inc
fxtract
mov
mov
cmc
ss
xorb
std
aad
arpl
cwtl
cli
insb
sub
in
pop
sub
xor
mov
push
test
in
gs
push
loopne
sahf
fs
je
int
jecxz
popf
cmpsb
pop
insb
inc
pop
mov
imulb
and
insb
push
mov
mov
adc
lds
push
insb
fsubr
in
push
popf
sti
or
btr
out
dec
sub
fcompl
cs
jecxz
pop
out
add
adc
insb
jmp
std
ficomps
or
insb
shlb
pop
inc
cmp
idivb
mov
imul
insl
cmp
mov
in
cmp
stos
scas
shll
inc
dec
aad
pop
lret
dec
lahf
mov
imul
in
cmc
xor
jp
jo
rcr
sti
add
lods
jns
insb
in
jecxz
rolb
xor
int3
insb
jb
or
mov
mov
out
rol
mov
push
jns
or
cltd
pop
jne
pusha
ljmp
jle
aaa
and
dec
in
bnd
ret
sbb
push
rcll
scas
jo
insb
push
mov
cltd
jge
test
ljmp
xchg
inc
xchg
pop
stc
sahf
pop
and
imul
mov
xor
jmp
enter
std
stos
insb
flds
pop
xor
int
xor
leave
push
repnz
icebp
mov
dec
pop
insb
jno
aad
clc
lods
pop
stos
imul
pop
js
sub
jge
enter
mov
cmp
loop
and
popa
outsb
orb
in
ljmp
mov
sub
and
call
push
xor
mov
outsb
cwtl
mov
imul
xchg
cmp
dec
mov
enter
jo
insb
mov
outsl
mov
nop
lret
sub
jmp
fsubrs
stos
ljmp
xor
cmp
cmpsl
sub
mov
inc
popa
scas
xchg
inc
jnp
insb
push
or
fimull
lods
jp
xor
dec
add
pop
pusha
outsl
pop
and
cmpsl
or
bound
popa
inc
sub
push
insb
je
pop
fildll
enter
cli
in
xor
cwtl
insb
mov
xor
incl
and
and
cmp
std
ss
fmull
mov
je
sbb
lahf
andl
sbb
dec
notl
cmp
insb
mov
add
sub
pop
dec
xchg
or
into
popf
sub
xlat
mov
imul
sbbb
ficoms
rolb
fadds
sub
jbe
sahf
pop
pop
fwait
ret
sub
insb
ret
lret
cmc
pop
adc
gs
in
popa
int3
inc
xchg
jb
imul
test
test
pop
jmp
inc
mov
leave
xchg
insb
jl
lock
push
adc
jmp
sub
pop
outsb
lods
std
in
movsb
pop
adc
int3
insb
and
nop
sbb
ret
insb
addr16
mov
push
sub
lds
jno
stc
xchg
imul
add
adc
and
sub
push
aas
gs
mov
sub
pop
lahf
push
insb
cmp
pop
jecxz
sbb
dec
fldl
repnz
fxch
test
mov
in
or
xchg
loopne
or
jb
test
xchg
inc
or
fisubrl
out
push
fdivr
int
outsl
rcll
jbe
inc
cltd
pop
mov
divl
pop
mov
mov
insb
inc
sub
inc
icebp
dec
push
dec
aaa
not
insb
pop
loop
bound
pop
and
dec
clc
insb
xor
insb
scas
add
mov
decb
mov
dec
loop
fldcw
aam
hlt
daa
imul
aas
insb
mov
mull
cmp
push
jnp
insb
in
test
jae
jg,pn
or
leave
pop
sub
dec
xchg
ljmp
pop
dec
gs
pop
leave
gs
mov
xor
icebp
mov
outsb
xorl
fisttpl
test
hlt
rcrl
insb
ds
xor
in
mov
pop
icebp
adc
cmpsb
dec
pop
pop
xchg
add
cmp
mov
aad
insb
lds
mull
push
movsl
xchg
ja
iret
lea
lret
xor
das
dec
add
in
jle
mov
mov
mov
push
test
out
jecxz
imul
push
sbb
jl
lret
insb
and
fcmovnbe
insb
loopne
int3
out
mov
cmp
add
sub
fs
lods
dec
stc
adc
jge
sbb
push
jbe
cmp
insb
arpl
outsl
xchg
xchg
pop
cwtl
out
popf
insb
insl
ret
add
mov
sbb
push
sar
cmpsb
leave
lods
in
cltd
loope
mov
ds
mov
iret
ljmp
insb
sbb
call
fbstp
push
dec
jl
repnz
and
inc
std
sti
stc
push
cmpsb
pusha
mov
or
cmp
insb
mov
subl
test
jo
scas
daa
jl
stos
lds
ja
lea
push
hlt
xchg
insb
sbb
int
xchg
add
insb
adc
ficomps
pop
cli
int
sbb
and
xchg
imul
inc
dec
popf
insb
mov
mov
sbb
sub
dec
ds
xor
aam
sti
lret
xchg
mov
xchg
pop
mov
add
cmp
dec
insb
jl
fisubl
push
xchg
dec
insb
inc
push
mov
enter
lret
shrd
and
mov
sahf
imul
xchg
jle
xor
dec
int3
mov
ficoms
lods
sbb
iret
lds
rcl
cli
sub
xor
fwait
popa
insl
insb
dec
je
inc
push
xchg
pop
movsb
inc
inc
push
xchg
inc
inc
in
inc
insb
jge
flds
pusha
bound
insb
jnp
mov
or
mov
leave
sbb
dec
pop
sub
ljmp
dec
orb
jmp
in
xchg
mov
cwtl
ret
imul
pusha
std
repz
in
insb
add
sub
pop
scas
inc
aaa
insb
cmp
stos
cmp
out
nop
daa
mov
outsb
rol
dec
sti
mov
xor
inc
imul
cld
insb
loope
lret
in
push
mov
mov
mov
dec
mov
xchg
sub
jne
fwait
and
xor
sti
clc
ss
inc
insb
sbb
pop
add
in
gs
int
adc
lods
pop
sub
pop
mov
roll
mov
arpl
pop
in
insb
sbb
int3
dec
test
push
insb
outsl
push
imul
insb
dec
push
cmp
popf
fisubrl
pop
cmp
xor
fldcw
adc
jg
inc
or
pop
ja
xor
insb
and
js
mov
xor
sbb
mov
or
inc
aam
insb
mov
jne
cmp
adc
xchg
dec
in
mov
outsb
les
insl
insb
add
mov
int
insb
pushf
mov
xlat
js
and
pop
lcall
cmp
jb
insb
xchg
sti
aas
fwait
pop
xlat
repz
add
lret
fisubrl
xorl
sbb
mov
ret
cmp
pop
or
in
jl
imul
push
iret
pop
cwtl
dec
fldcw
jo
xchg
pop
xor
insb
xor
mul
icebp
mov
lock
mov
mov
in
jle
daa
insb
popf
imul
dec
push
sbb
cmp
or
repnz
fldcw
add
movsl
jmp
and
pop
popf
or
inc
xor
js
xchg
insb
bound
xchg
lods
dec
xor
loopne
out
fmulp
loop
insb
xchg
xlat
les
cmp
fcoml
sub
sti
ja
xor
push
and
pop
imul
pop
aad
insb
outsl
dec
mov
daa
insb
xlat
cld
xchg
adc
scas
pop
addb
insb
add
mov
sub
xor
ror
xchg
popf
call
xchg
xor
sti
lods
scas
loopne
and
push
pop
or
subb
pop
mov
dec
gs
shl
mov
xor
cs
push
push
in
insb
dec
fisttpl
inc
je
push
inc
and
icebp
test
add
fdivs
outsl
test
mov
push
jp
sti
stos
in
mov
sub
aaa
dec
imul
fucomp
cmp
sub
mov
out
push
jae
adcb
add
outsb
mov
jl
push
mov
cmc
mov
imul
sub
aas
lock
jns
in
sbb
mov
movsl
std
jp
ret
jne
ljmp
mov
mov
pop
cmpsl
jns
lahf
outsb
jl
xor
daa
repz
stos
insb
sbb
sub
or
test
cld
lret
mulb
shll
insb
shlb
dec
and
pop
pop
jbe
repz
dec
inc
lea
jns
insl
cmp
xchg
insb
into
dec
loopne
data16
in
in
push
xchg
push
and
inc
in
cmpsb
mov
adc
sti
insb
dec
fcompl
xlat
jle
ds
add
icebp
jp
inc
sarl
popa
mov
pop
pop
fsubrs
rcll
xchg
mov
jb
popf
test
push
imul
xchg
or
aas
and
mov
scas
insb
mov
inc
out
and
add
loope
mov
in
pop
mov
or
xchg
xor
mov
inc
gs
movsb
push
mov
lock
and
aaa
fiadds
cld
negl
pop
fistpl
leave
push
in
xchg
icebp
push
jns
in
mov
popa
push
out
fwait
rcrb
insb
xor
sbb
xchg
adc
cmp
fbld
adc
insb
fmuls
inc
call
fmul
pop
jg
std
xchg
call
insb
out
xlat
sbb
jae
arpl
lock
mul
pop
and
sar
ljmp
dec
insb
adc
cmp
dec
insb
loopne
into
and
and
insb
loope
mov
pop
mov
push
rorl
jecxz
xchg
lods
or
adc
scas
sub
enter
mov
or
scas
mov
or
pop
pop
or
mov
sahf
add
adc
jge
mov
aad
cmp
aad
sbb
ljmp
sbb
in
push
sub
lock
pop
xchg
outsb
in
lret
faddl
pusha
sbbb
int
jne
lret
dec
pop
jl
ljmp
sub
mov
fisubrl
test
pushf
in
mov
xlat
jo
inc
jbe
jge
jmp
dec
mov
jp
mov
shl
je
jnp
arpl
ja
loop
fistl
cmpsb
push
in
out
jb
arpl
test
mov
insb
jae
jp
imul
add
and
je
rorb
jbe
imul
or
fdivs
mov
jnp
jbe
aam
add
std
imul
insb
fistpl
xchg
lret
call
or
xlat
dec
enter
sbb
jo
loopne
jae
iret
leave
cwtl
cmp
pop
push
jecxz
ret
mov
pop
sub
insb
adc
fimuls
in
xchg
pop
int3
insb
cs
das
lds
jp
adc
inc
iret
addr16
mov
lods
test
les
insb
cmpsl
insl
arpl
jnp
cli
sub
jns
insb
push
jbe
cmp
insb
dec
and
adc
cld
hlt
cs
lea
mov
rorb
aas
adc
mov
sbb
xchg
and
addr16
daa
jge
hlt
insb
pop
fadds
imul
cmp
outsl
mov
sbb
iret
pusha
insb
adc
xchg
jnp
popf
mov
xchg
jmp
clc
inc
imul
xor
xchg
insb
mov
lock
sbb
pop
popf
imul
push
sbb
pop
insb
push
sbb
jg
rcll
mov
cmpsb
repnz
sbb
jl
xchg
hlt
mov
sub
je
push
insb
pop
lahf
stos
xchg
push
push
dec
pop
mov
inc
mov
ljmp
jns
pop
insb
pop
xor
addr16
int
mov
gs
fsubl
inc
push
add
mov
cmp
divl
stos
hlt
mul
mov
or
mov
mov
sub
imul
jb
push
mov
jae
or
scas
xchg
mov
repz
jbe
orb
int
fwait
aad
or
ja
shll
jns
add
jmp
add
mov
lock
enter
xor
ficomps
cli
sbb
cmp
pop
mov
les
lahf
fisubrs
aas
aad
shll
frstor
jle
push
cld
iret
xchg
xor
imul
repz
into
or
mov
adc
jle
dec
out
xchg
mov
add
xchg
mov
mov
and
cmpsb
movl
xor
andb
adc
xchg
inc
dec
push
imul
fwait
in
fbld
sahf
out
bound
lret
pop
push
xchg
xor
rorb
pop
push
insb
lret
out
lret
inc
insb
mov
shrb
nop
ljmp
mov
and
in
icebp
jmp
insb
aad
fdiv
cmp
cltd
sbb
out
and
aaa
cmc
insb
dec
sti
add
insb
add
stos
dec
mov
insb
add
addr16
gs
mov
mov
lret
lock
imul
push
xchg
jbe
cwtl
or
jl
jnp
outsb
adc
push
sbb
mov
mov
insl
decl
imul
jecxz
lahf
and
and
xchg
inc
repnz
pop
movsl
fsubrs
loope
and
lea
sarl
lds
lret
or
xchg
xor
mov
jae
xor
cmpsl
mov
dec
mov
lock
mov
mov
movsl
push
push
sub
xchg
popf
jae
pushf
add
jmp
stc
faddl
jecxz
lea
imul
push
sub
orl
dec
lret
je
xchg
insb
lcall
jbe
adc
test
hlt
pop
add
and
inc
xchg
cmp
insb
dec
inc
test
insb
pop
jmp
xchg
push
mov
insb
sbb
leave
mov
inc
push
insl
or
js
cmp
sub
pop
inc
jne
jge
xchg
lock
sub
add
js
in
mov
push
jbe
enter
inc
fildll
fstpt
icebp
les
hlt
dec
mov
mov
cmp
fdivp
xchg
repnz
mov
out
push
test
ljmp
out
in
fstl
mov
sbb
popf
jp
imul
neg
mov
nop
bound
mov
xor
lret
mov
in
adc
dec
xchg
ds
fisttpll
push
ss
sbb
ret
imulb
mov
mov
ret
mov
int
outsb
insb
dec
jg
add
mov
add
cmp
pushf
bound
imul
pop
frstor
dec
jle
aad
insb
mov
ja
in
sbb
adc
mov
lods
ss
add
sub
ds
add
cwtl
sub
gs
mov
adc
cmc
sub
sarb
pop
xchg
out
mov
inc
bound
cld
stos
insb
cmpb
leave
nop
mov
insb
add
push
xchg
push
or
dec
aaa
cli
pop
jle
loopew
lret
in
inc
scas
adcl
pop
pop
push
dec
pop
adc
xorb
in
lods
lcall
sub
in
push
cwtl
jle
shlb
cs
cli
je
subb
cmp
or
dec
dec
subl
mov
es
insb
pop
pop
adc
add
dec
fstl
sub
push
cltd
and
aam
subb
daa
add
pop
js
xchg
sub
shlb
jae
fwait
xor
mov
xchg
sbb
mov
pop
jae
mov
pop
sahf
jnp
cmp
xchg
scas
and
pop
xchg
push
popa
arpl
jl
add
or
lock
in
in
ljmp
addr16
in
push
enter
jns
rcrl
cmp
jo
and
out
ja
xor
lcall
inc
push
das
es
scas
rorb
mov
jno
leave
push
ret
stos
fistpl
insb
mov
iret
repnz
insb
and
jns
sbb
pusha
push
add
movsb
scas
lods
mov
and
addr16
mov
in
xor
test
call
cmp
pop
adc
or
fnstenv
mov
daa
mov
cs
push
mov
mov
cmp
mov
dec
in
je
ud0
les
push
ja
inc
mov
idivb
or
stc
mov
ja
mov
mov
jl
gs
jp
jnp
or
sub
fnstcw
ss
sub
mov
xchg
push
xchg
or
lds
xchg
sub
mov
lock
js
sub
ljmp
or
or
inc
dec
and
pusha
inc
push
arpl
insb
and
test
insb
xor
mov
fsubl
test
push
in
ss
push
std
insb
shll
int
imul
or
imul
jle
jb
stos
sub
adc
dec
cmp
not
mov
sub
mov
push
sbb
sub
pop
sbb
imul
imul
jmp
test
out
movsb
xlat
pop
sti
pusha
jbe
dec
icebp
les
outsl
or
in
iret
ds
inc
lahf
insb
dec
movsb
std
push
push
test
test
addr16
jb
and
cmp
rorl
mov
mov
cmp
jg
dec
clc
or
xchg
xor
insb
hlt
pop
sbb
push
mov
data16
or
in
mov
enter
pop
shrl
jnp
gs
or
mov
xchg
xor
scas
dec
mov
xchg
int3
push
shrl
arpl
cmpsb
in
je
in
test
jns
inc
mov
pop
cltd
imull
push
push
mov
push
pop
lcall
stos
xor
test
in
imul
rcll
popf
imul
call
icebp
int3
push
fisubrl
lock
addr16
sub
mov
sbb
orl
in
outsb
mov
mov
cmp
arpl
test
imul
out
sub
xor
data16
aam
jp
dec
insb
inc
pushf
xchg
loope
mov
insb
mov
fisttps
mov
aas
insl
daa
scas
pop
jno
insb
rcr
iret
adc
insb
loopw
cmp
aam
js
push
inc
pop
dec
dec
cmpsl
subb
jmp
mov
test
xchg
jb
push
xchg
out
dec
insb
or
fstpl
inc
jl
divb
or
cld
arpl
stos
inc
insb
dec
or
adc
lret
je
test
lock
adc
cmp
call
xlat
and
cmp
cmpsl
jmp
ljmp
fdivr
and
insb
sbb
js
mov
outsl
insb
scas
jmp
popa
mov
adc
test
bound
add
mov
mov
sbb
lds
jno
std
push
int
lahf
pop
pop
pop
imul
xorb
imul
inc
stos
adc
jl
loopne
lahf
mov
pop
jle
lods
emms
lret
adc
pop
xchg
test
scas
cwtl
aaa
push
in
in
add
test
leave
in
inc
mov
in
lret
or
xchg
ret
jg
insb
sbb
daa
mov
jo
fcmovnu
push
dec
pop
clc
shll
adc
pop
mov
out
fsubrs
rclb
pop
or
sub
lods
stc
out
jno
insb
mov
dec
mov
or
roll
and
pop
xchg
loop
clc
cmp
adc
test
hlt
insb
pop
and
ds
fdivrs
movsl
xor
mov
ret
insb
int
out
movsl
or
mov
rorl
xchg
xor
insb
dec
sub
push
sbb
stos
je
insb
mov
pop
fld
int3
mov
jp
dec
cli
mov
xchg
cld
adc
out
ljmp
pop
sahf
and
sti
lods
mov
iret
ss
and
push
add
sub
lret
or
repz
mov
mov
data16
sbb
pop
xchg
push
aaa
jg
inc
insb
shll
xor
mov
sarb
jnp
mov
pop
and
loop
mov
pushf
out
xchg
sbb
mov
or
push
cmc
cli
sti
xlat
insb
mov
xchg
mov
lcall
dec
xor
jns
mov
vminss
or
jle
insb
xor
fdivs
insb
dec
arpl
dec
xor
imul
or
popa
sahf
orb
in
in
mov
insb
shlb
std
add
out
imul
or
push
cmpsb
mov
pop
sub
insb
mov
cmp
loopne
data16
add
inc
jmp
add
xchg
xor
lea
fistl
adc
mov
dec
inc
and
leave
mov
dec
mov
insb
add
lock
imul
jae
out
or
mov
jge
jb
test
mulb
rcll
jbe
ljmp
out
pusha
lret
adc
mov
dec
adc
xor
jmp
gs
push
insb
adcl
shll
ja
jo
push
repnz
or
test
dec
mov
ret
insb
lds
ss
imul
loope
popa
xor
xor
insb
or
xchg
andb
cltd
test
mov
lods
pop
insb
sub
int
arpl
loopne
in
pop
arpl
inc
push
xor
aad
idivb
inc
cmpsl
hlt
lcall
cli
sbb
pop
cmp
aam
sbb
and
or
inc
or
mov
nop
jae
xor
cmpsl
call
mov
inc
jne
mov
jae,pn
in
stos
rorl
add
xor
cmc
insb
scas
pop
mov
aad
subl
xor
stos
push
cld
mov
mov
sub
xchg
mulb
or
arpl
cmp
nop
std
sub
pop
imul
lret
sub
mul
insb
addb
sbbb
rcrl
push
call
insb
pop
jl
outsl
mov
andl
jmp
stc
int3
inc
in
push
ret
out
mov
lods
icebp
jle
xor
in
and
and
or
scas
inc
sub
adcl
add
ret
shl
imul
sbb
je
add
pop
insb
mov
insl
js
imul
jno
je
shll
out
fisubrs
ss
cld
mov
cltd
mov
imul
jp
rcl
adc
loop
mov
and
cmpsb
movsb
test
lcall
insb
pmaxub
pop
add
ret
adcb
mov
jp
addr16
js
xor
cmc
gs
xchg
or
sub
mov
sub
ds
xor
insb
insl
in
add
xor
fnstcw
insb
and
push
jge
stc
lock
addr16
mov
daa
int
and
scas
insb
in
icebp
rolb
add
out
ja
xor
mov
pop
push
mov
fdivl
mov
ret
sub
cwtl
imul
mov
mov
fxch
jno
pop
dec
in
out
mov
pop
fcoml
pushf
sub
push
mov
inc
cld
bound
or
or
pop
insb
movsl
mov
call
ja
push
les
stc
sahf
imul
mov
jbe
sub
aas
std
insb
shll
adc
testb
stc
dec
fcoms
xchg
insb
or
decb
pop
xchg
scas
sub
fists
rcrl
sub
inc
inc
jo
xor
xchg
insb
mul
and
lock
insb
add
js
mov
punpckhwd
cmp
imul
xchg
xchg
icebp
fadds
popa
sub
scas
outsb
sub
movsb
inc
and
mov
pop
or
pop
lock
xchg
dec
and
stos
insb
or
jl
es
imul
pop
shlb
mov
test
and
ljmp
cltd
cmc
ljmp
add
push
scas
mov
mov
sbb
test
jmp
rorl
stos
xchg
add
push
imul
mov
std
je
fidivrs
mov
push
xorl
xchg
outsl
insl
mov
adc
push
jb
cmp
in
xor
add
sbb
rolb
mov
push
sub
or
gs
cli
imul
add
aas
inc
loop
xchg
or
mov
outsb
add
xor
mov
icebp
mov
jl
lret
imul
jecxz
test
int
adc
push
repnz
mov
aam
cmp
stos
loop
imul
enter
add
insb
das
dec
movsl
cld
sbb
scas
push
je
insb
out
xor
insb
addr16
mov
insb
mov
xor
push
leave
lods
lods
jp
jns
xor
notb
pushl
mov
mov
xor
xchg
xor
mov
into
pop
xor
in
cmc
xchg
scas
imul
notb
and
test
shrb
pop
pop
pop
sub
int3
jp
hlt
insb
cmp
outsl
sbb
or
mov
std
push
pop
jbe
int
cmp
sbb
jl
ds
push
insb
inc
lret
in
cltd
cwtl
pop
mov
pushf
lret
mov
sahf
mov
out
js
jmp
cs
sbb
stos
mov
into
aas
gs
xchg
push
repz
sti
mov
inc
sub
pop
dec
pop
rcl
movb
jno
inc
jo
daa
insb
push
repz
idivl
lock
insb
mov
mov
xchg
int3
mov
pop
or
or
insb
mov
adc
dec
ss
bound
int3
and
mov
adc
aas
or
inc
dec
adc
popa
mov
jp
jae
test
sbb
cmp
std
insb
xor
fs
ss
sbb
scas
enter
and
mov
xchg
insb
test
add
sub
insl
mov
into
xchg
or
dec
push
xchg
stos
jae
insb
loop
mov
outsl
insb
dec
adc
and
mov
fsubr
daa
jb
out
cld
insl
insb
or
xchg
insb
stc
shlb
inc
lds
or
push
sub
jl
cmpsb
test
lahf
mov
insb
xchg
int3
and
imul
mov
test
insb
pop
loopne
xlat
test
mov
pop
fisttpl
cs
bound
leave
insb
test
imul
shrl
mov
pusha
xchg
insb
cmp
and
pop
xor
add
mov
stc
insb
add
pop
cmp
ret
or
mov
cmp
rcr
dec
inc
insb
scas
sbb
test
insb
in
mov
adc
add
dec
fprem
xor
imul
dec
gs
out
push
sbb
js
cmp
inc
or
push
mov
and
jge
xor
pop
lea
jo,pt
out
mov
insb
push
rdtsc
sbb
push
out
fadds
push
sub
stc
aam
or
test
mov
sahf
sbb
gs
xorb
jp
les
jmp
push
mov
pop
push
sub
pusha
shl
aas
bound
mov
xchg
shrb
and
and
dec
sbb
outsb
xchg
nop
or
mov
gs
movsl
mov
jecxz
xchg
inc
jae
imul
testb
fwait
push
ds
inc
insb
repz
fld
ja
xor
and
in
mov
xchg
insb
aaa
roll
dec
and
out
cltd
adc
fisubrs
and
jl
xor
sbb
aam
add
dec
sub
inc
and
cmpsl
add
jo
popa
bound
out
mov
cmp
ss
test
pop
add
adc
mov
movsl
inc
pop
mov
icebp
push
mov
nop
imul
mov
insb
jnp
leave
ja
push
inc
lret
fdiv
xchg
cs
gs
xlat
mov
shll
mov
pop
mov
fdivrl
ret
pop
push
jno
adc
iret
insb
sub
adc
mov
xchg
stos
movsl
jmp
jl
push
in
movsb
aaa
mov
add
lock
imul
push
pushf
insb
fldenv
jnp
movsl
in
jecxz
sbb
imul
push
jb
xor
adc
add
addr16
and
sbb
in
dec
sbb
push
mov
imul
xchg
jb
nop
adc
insb
add
fidivs
filds
push
imul
xchg
in
mov
and
insb
addr16
out
mov
aam
dec
inc
push
pop
mov
cmp
jno
pop
jne
sub
hlt
lret
stc
lods
std
insb
push
pop
cmp
or
test
shr
mov
insb
sbb
sti
addr16
scas
insb
xchg
loopne
test
fldt
jne
push
js
fsubp
mov
imul
sti
popa
mull
sbbb
test
add
xchg
pushf
scas
jmp
lahf
fisubrs
shll
imul
test
es
xchg
or
pushf
sbb
push
scas
mov
std
adc
stc
fdiv
pop
mov
lret
xchg
adcb
cwtl
lea
orb
pop
xchg
repnz
decl
idiv
out
rcr
popa
xchg
adc
insb
and
xchg
pop
addr16
sub
jmp
fidivrs
mov
sarl
call
clc
add
enter
cwtl
mov
insb
and
fdivs
jbe
mov
cmp
lea
cmp
and
or
pop
pushf
dec
xor
push
adc
pop
lods
mov
lret
or
add
mov
inc
inc
insb
or
or
insb
test
cs
sbb
push
hlt
ss
in
push
dec
ret
sub
ljmp
sbb
adc
cmp
insb
aad
mov
cld
xlat
es
insb
repnz
in
insb
lret
sub
cwtl
jecxz
pop
inc
insb
into
rcl
mov
lret
and
inc
movsb
mov
pop
call
insb
xchg
ficoml
mov
sahf
lret
mov
in
cli
or
icebp
lea
pushf
jnp
mov
sub
stos
fnsave
pop
insb
xor
or
adcb
ret
dec
mov
push
sbb
cmp
pop
cmp
scas
cld
push
jae
lods
or
ss
call
mov
insb
mov
jo
cmp
xor
jne
movsb
mov
sti
sub
insb
cmpl
mov
das
xchg
cmp
imul
pop
test
fwait
mov
out
in
jns
sub
insb
imul
insb
xchg
xlat
sbb
or
mov
je
inc
pop
popa
jno
roll
in
cltd
mov
insl
addl
stc
ds
adc
jb
lods
adc
stos
mov
dec
ja
daa
sub
sub
insb
xor
imul
inc
aaa
cmp
pop
in
scas
insb
mov
dec
lock
in
enter
insb
mov
std
sbb
inc
adcb
jo
and
dec
xchg
cltd
mov
dec
or
mov
mov
adc
insb
outsl
pop
sub
fcomip
jns
sub
xlat
cmpsb
insb
cli
test
fs
mov
ret
popf
andl
mov
lahf
and
imulb
xchg
in
mov
xor
adc
fidivrl
das
mov
stos
out
fwait
test
test
and
pusha
xor
ret
jmp
lret
xchg
xor
inc
roll
adc
pop
mov
das
or
mov
insb
jno
add
sbb
inc
add
lret
cwtl
arpl
and
xor
daa
push
sahf
popf
xorb
test
push
xor
or
jmp
mov
insb
ret
inc
sub
add
sahf
in
cwtl
mov
or
cmp
insb
lods
arpl
lea
movsb
xor
pushf
into
out
jae
call
mov
and
mov
in
pusha
ficomps
clc
dec
sti
insb
les
jl
lahf
insb
out
xor
int
fsubl
cmpsb
sub
pop
js
mov
in
adc
nop
push
insb
test
js,pn
pop
aas
push
insb
xchg
lcall
insb
aad
mov
int
adc
adc
insb
sub
xor
dec
push
xor
dec
outsl
xor
pop
insb
adc
mov
insb
adcl
push
ret
and
leave
bnd
cmc
insb
frstor
mov
pop
out
mov
sub
rorl
sbb
cld
std
push
inc
mulb
sbb
mov
xchg
inc
sub
push
insb
gs
stos
pop
out
xor
int3
xchg
or
jbe
jnp
mov
jmp
jl
sbb
xchg
xor
xchg
stc
adc
push
das
or
cli
movsb
add
outsb
test
or
sub
mov
out
fsubrs
add
add
or
call
test
inc
jb
cmp
repnz
xor
or
insb
adc
outsb
stos
xchg
clc
mov
sar
imul
dec
adc
sub
cld
mov
insb
xchg
lods
jno
push
insb
adc
add
add
xchg
push
int3
or
add
aas
insl
insb
stos
pop
mov
and
imul
jae
mov
mov
mov
jmp
hlt
int3
jmp
fdivrl
insb
push
cmp
push
dec
ret
shrb
xchg
mov
nop
repz
lret
insb
test
pop
mov
adc
mov
insb
or
sbb
pusha
hlt
xlat
fs
jl
cmc
push
sub
jno
adc
add
insb
rorb
pusha
push
arpl
gs
mov
hlt
dec
insb
jp
clc
cld
xchg
scas
cmc
aad
out
push
xor
push
add
fsub
enter
insb
outsl
das
pop
sbb
xlat
shl
outsb
lcall
int3
fdiv
aam
arpl
cmp
or
sahf
insb
andl
push
fisubrl
lcall
cld
push
push
inc
mov
mov
pop
jo
adc
or
pop
fidivrs
cwtl
cmp
cs
iret
out
xor
stos
mov
jmp
xchg
insb
lret
add
fsubrl
insb
aaa
xchg
jo
cmp
iret
std
pop
loopne
ss
out
sub
dec
cld
imul
xchg
cmc
fwait
mov
pop
insb
mov
xchg
rcrb
sbb
lock
jge
xchg
dec
add
push
insl
sub
cmp
insb
aad
cmp
insb
pop
adc
cli
insb
aas
es
sub
mov
in
or
loop
nop
mov
insb
pushf
and
adc
repnz
sti
mov
or
sub
jp
icebp
int3
rep
xchg
mov
adc
sbb
inc
ret
es
pop
lds
xor
jae
insb
add
in
cmp
lahf
jb
loope
sbb
pushf
mov
xchg
jno
jmp
dec
xchg
cmc
ds
in
daa
or
repz
mov
mov
or
pop
add
mov
or
mov
or
mov
push
push
add
daa
pop
out
insb
jb
cwtl
mov
push
xchg
dec
fs
in
sbb
std
xorb
xor
mov
mov
jne
in
insb
pop
ret
sub
aad
dec
mov
adc
in
or
or
mov
pop
push
popf
out
or
inc
cmp
rcrw
and
ds
lods
ljmp
jo
imul
fmull
shrl
xchg
cmp
add
insb
lahf
das
fsubs
fwait
push
lock
scas
sbb
jo
loope
or
jl
mov
popl
pop
popa
insb
sub
leave
insb
sbb
loop
mov
insb
xchg
mov
stos
inc
cmp
mov
sub
je
sbb
push
sbb
int
pop
aaa
sbb
scas
in
cmp
or
xor
and
jne
popl
pop
cmpsb
stos
lahf
mov
bound
sub
mov
inc
inc
fistps
or
add
mov
insb
sti
xchg
lock
xchg
jns
repnz
fsubrs
in
push
lods
xchg
pop
add
out
pop
and
fisubrs
outsl
idivl
insb
jge
lds
pop
cmc
jno
rorl
jg
sbb
xchg
or
xor
sub
loope
mov
cltd
insb
lcall
cmp
pop
cmpsl
stos
insl
sbb
in
adc
and
subl
les
ret
mov
insb
jmp
push
jb
sbb
adc
in
inc
das
jbe
lahf
jmp
in
pushf
loopne
inc
jle
push
int
add
push
xchg
adcb
andb
jp
call
addb
lret
pop
or
sub
inc
fs
bound
pop
cmp
in
and
lods
arpl
and
sbb
sti
int3
test
add
adc
nop
mov
int
inc
das
jmp
dec
ljmp
jle
addr16
or
push
arpl
mov
and
fbstp
je
lcall
addb
xchg
lcall
jge
orb
shrl
jle
xchg
in
arpl
jge
push
int3
mov
iret
sub
jno
test
iret
lods
jle
jns
mov
and
les
addr16
pusha
aaa
and
xchg
shrb
ds
sbb
jp
mov
dec
jg
jb
out
jmp
jae
mov
dec
mov
fisttpll
inc
and
into
jno
jbe
jnp
cmp
mov
je
lret
outsb
sets
or
lods
fnsave
insl
in
adc
lock
sbbl
insb
jmp
lea
or
push
lods
loopne
loopne
or
out
jge
popf
loope,pn
adcb
or
push
jb
aas
pushaw
pop
rol
push
std
and
cmp
jb
or
adc
add
loopne
and
pop
ss
daa
jp
sub
ljmp
pop
iret
adc
mov
fildll
and
jae
inc
aas
inc
push
jl
jmp
jo
in
stos
inc
test
in
dec
lds
mov
jl
jbe
loope
rolb
leave
aas
cmp
jp
dec
xchg
out
jo
pop
int3
sub
cmp
pop
test
std
inc
imulb
pusha
in
cltd
inc
subl
push
int3
cmpsl
arpl
sti
push
out
add
push
dec
insl
add
dec
or
in
scas
mov
cmp
cmp
test
and
dec
loopne
pop
mov
or
sub
fidivs
mov
pop
mov
enter
addb
mov
pop
mov
xor
fimuls
sub
xchg
scas
jmp
sbb
test
mov
insb
cmp
jecxz
fwait
outsb
gs
je
cs
idivb
mov
inc
daa
hlt
sub
jp
pop
sbb
or
insb
lds
push
pusha
insb
gs
ljmp
rcr
jae
out
xchg
inc
or
mov
jecxz
mov
sub
cld
adc
out
xchg
insb
and
and
and
mov
popa
fildl
data16
insb
push
int3
sbb
xchg
cwtl
fucomp
je
insb
push
add
ss
out
fiadds
es
fildl
dec
sub
insl
insb
sbb
insb
shll
xor
iret
xor
xchg
fs
aad
adc
cltd
push
cld
pop
ja
add
arpl
jle
mov
loope
mov
sarb
insb
jo
adcl
dec
out
gs
cltd
aaa
xchg
sbb
arpl
inc
pop
adc
insb
test
push
dec
mov
mov
adc
mov
insb
or
insb
and
mov
add
addl
popa
nop
inc
and
pop
jb
xor
arpl
fdivr
das
out
in
sbb
xor
insb
insl
mov
ds
adc
push
mov
xor
cmpsl
mov
les
mov
add
push
push
mov
xchg
cli
mov
in
stos
and
mov
mov
mov
inc
fbld
push
aas
mov
sbb
jno
mov
mov
fs
nop
adc
insb
sub
movsl
add
inc
adc
push
insb
xchg
dec
pop
xor
lods
pusha
sub
inc
sub
sbb
adc
test
or
xor
add
out
lods
sub
or
mov
nop
cmp
adc
mov
sub
aaa
mov
int3
lock
sub
icebp
dec
and
enter
rolb
or
rcr
mov
mov
mov
lods
cmp
jg
inc
data16
fs
insl
inc
and
cli
ja
mov
jo
xchg
mov
cwtl
je
ja
popa
xchg
out
xchg
in
mov
sub
pop
xorl
inc
imul
lods
lods
cmp
mov
pusha
mov
iret
imul
push
push
cld
adc
jg
pop
xor
adc
insb
cltd
xlat
into
cmpl
push
lahf
ret
xchg
or
divb
sti
and
inc
pop
cli
add
ja
mov
insb
into
ret
fcompl
test
xchg
or
mov
xchg
xchg
xchg
and
imul
jnp
push
cmp
and
ds
das
test
out
mov
push
mov
push
or
or
mov
cmp
insb
dec
movsl
rcll
je
in
movsb
add
mov
adc
aaa
ds
add
insb
cmp
scas
sub
insb
pop
gs
lods
out
je
xchg
pop
adc
repz
aas
mov
dec
xorl
loopne
insb
dec
mov
jae
jmp
sub
lods
sbb
ss
out
sti
dec
add
lock
and
or
mov
jecxz
sbb
cmc
pop
pop
and
adc
pop
lret
insb
xor
rolb
insb
test
loop
lret
fcompl
outsl
xchg
imul
adcb
pop
sahf
ds
add
sub
mov
icebp
test
insb
xchg
push
xchg
push
aam
sub
insb
test
outsb
mov
insb
or
pop
imul
mov
nop
popf
insb
add
mov
mov
sbb
imul
loop
mov
js
sub
add
fwait
insb
adc
das
int3
test
out
cmp
cmpsb
push
gs
pop
aad
movsl
movsl
pushf
add
outsl
dec
stos
ja
cld
xor
les
add
insb
jge
rorl
and
and
in
sarl
and
sub
inc
xor
lahf
jecxz
fistpl
insb
jmp
test
xor
loope
call
mov
jbe
insb
cmpsl
mov
testb
xchg
xchg
shrb
mov
insb
xchg
clc
cmpsb
call
insb
jg
cli
or
enter
fisubrs
push
or
insb
outsl
pusha
insl
lock
xchg
or
xor
jmp
or
lods
push
insb
mov
popa
xor
mov
outsl
push
in
xchg
cwtl
fmuls
dec
sti
lods
je
dec
fidivrs
insb
inc
rcrb
jmp
push
imul
lods
mov
mov
push
dec
jmp
adc
lahf
das
xor
sub
mov
in
cmc
movb
insb
mov
cmp
call
or
cmp
test
adc
shlb
popa
pop
aas
jns
xor
imul
int
fldcw
in
wbinvd
repz
add
mov
sbb
jnp
cmpw
das
xor
insb
aaa
push
jecxz
and
xor
out
lret
pop
je
fcompl
insb
cmpl
jge
insb
and
dec
insb
lcall
or
cmp
xchg
dec
pop
insb
movsl
pop
jle
cmp
lea
mov
sub
jmp
jmp
fsubrs
int3
mov
jb
out
xchg
insb
icebp
in
cmp
fnsave
xor
pop
insb
push
mov
mov
and
adc
ret
loop
xlat
push
insb
popa
inc
push
shl
daa
inc
insb
adc
lods
add
lret
fsubrs
ds
add
hlt
mov
mov
jmp
imul
fs
out
jge
jp
insb
lret
push
in
orl
insb
sti
mov
pop
insb
jle
and
rolb
imul
push
or
popl
cmp
insb
push
stos
test
xchg
jbe
jmp
nop
dec
ss
mov
imul
out
rcrl
outsl
cmp
pop
mov
orb
xchg
test
pop
lret
imul
dec
dec
add
out
andb
test
jno
add
out
imul
lods
or
insb
pop
adc
push
push
push
xchg
add
imul
cwtl
insb
mov
add
out
or
push
dec
cmp
int
ret
push
pop
mov
fldl
xchg
ja
dec
ret
insb
test
out
ljmp
or
ret
cs
or
xlat
xchg
ret
fcomps
push
insb
sbb
adc
xchg
or
cmove
hlt
insb
imul
insb
mov
test
mov
fidivrs
aas
adc
xchg
outsb
or
les
dec
insb
mov
testl
insb
sub
outsb
call
jp
pop
out
lods
push
add
imul
icebp
lods
stc
sub
jo
imul
mov
insl
pushf
jp
shrb
out
pusha
js
mov
fstl
movsb
jl
pop
dec
mov
fimuls
push
sbb
push
in
fistpl
fcoms
cld
lods
mov
jecxz
insb
sbbb
dec
insb
loop
sbb
cmp
imul
pop
mov
mov
cltd
pusha
mov
shrl
nop
mov
insb
adc
int
xor
ss
cmpsb
scas
enter
sub
jb
dec
iret
jg
fldl
dec
mov
cmc
mov
jmp
xchg
mov
imul
sbb
adc
pop
pop
ljmp
into
sub
insb
imull
add
lret
sbb
arpl
call
fisttpl
sbb
repz
dec
sub
or
mov
dec
sbb
cmp
pop
imul
and
sub
je
insb
sub
es
cld
xor
jp
cltd
test
faddl
xor
lods
cmp
jecxz
mov
jp
int3
push
aam
insb
mov
xor
add
push
xchg
insb
scas
pop
and
leave
stc
lret
repz
mov
or
pop
mov
in
mov
xchg
sbb
divl
mov
dec
mov
inc
dec
sti
cmp
insb
lret
stos
jge
into
clc
jo
jl
aam
insb
jnp
std
mov
cmpb
subb
inc
out
stos
shrl
xchg
jmp
mov
bound
insb
int3
lods
movsb
dec
rorl
insb
dec
and
lcall
ss
ds
xchg
fs
shll
insb
popf
jns
mov
mov
inc
pop
test
in
fldcw
stc
push
xchg
insl
outsl
imul
loope
jmp
inc
inc
mov
xor
inc
push
insb
and
lret
loop
sub
cs
xchg
js
mov
xlat
inc
test
out
jb
popa
jno
inc
sti
imull
in
jecxz
insb
sahf
mov
xchg
jo
pop
add
fsubrl
shl
aad
sub
les
aam
je
lods
sub
sbb
insb
cli
das
push
jge
imul
enter
dec
mov
inc
insb
outsl
and
insb
or
push
and
cmp
and
lds
cmpsb
jecxz
clc
shrb
roll
jb
sbb
sbb
dec
dec
test
pop
xor
test
repz
insb
push
test
lcall
fildll
sbbb
jbe
popa
xor
movsl
dec
adc
in
pop
or
data16
mov
cmp
stos
xchg
addb
cmp
pop
push
in
mov
mov
adc
insb
push
call
and
adc
cmp
aas
into
sarl
je
fisubrs
and
inc
pop
xchg
push
decb
lcall
dec
adc
sub
xor
add
aas
fbld
xchg
lods
dec
mov
push
pop
js
je
mov
cmpsb
lea
sub
jecxz
or
js
js
repnz
pusha
xchg
je
lret
jp
fistps
inc
test
insb
xor
stos
cmpsl
insb
std
xor
das
test
out
pop
jae
cmp
pop
subl
cmp
mov
dec
insb
jns
lock
adc
pusha
dec
bt
lods
xor
xorl
scas
jb
hlt
in
sub
mov
jb
inc
cmp
xor
or
rorl
mov
push
pop
inc
pop
push
imul
mov
and
jecxz
incb
imul
inc
cld
fisttpll
xor
repz
imul
xlat
and
cs
dec
sbb
mov
and
std
and
lock
cld
jmp
dec
dec
cmp
push
insb
mov
or
fstl
out
cltd
negb
jae
gs
cmpsb
or
dec
in
data16
mov
insb
mov
inc
add
in
insb
inc
lahf
sbb
movsl
cmpsb
fwait
insb
nop
insl
dec
icebp
notl
stc
stc
push
dec
scas
mov
movsl
call
ret
cwtl
ljmp
lds
call
jmp
in
adc
xor
lret
sbb
imul
aas
adc
bound
cmp
jg
lods
push
stos
pop
cmc
in
insb
loope
xor
je
das
add
insb
imul
mov
cld
loopne
dec
mov
insb
insl
imull
mov
mov
xor
push
insb
mov
dec
pop
das
jp
insb
xor
xor
jmp
xor
pop
insb
pop
sub
je
cmp
and
shll
cltd
or
jae
fwait
xor
pop
push
mov
pop
xchg
xor
add
adc
xchg
imul
and
rcll
pop
or
inc
aam
dec
and
cwtl
xchg
pop
dec
add
out
mov
push
movsl
lret
lret
sub
inc
and
popf
jo
insb
cli
fisubrl
std
insb
subb
shrl
add
ja
fdivrs
xchg
imul
sti
rolb
in
hlt
pop
imul
cs
lock
sub
pop
cmp
push
insb
or
jbe
jg
adc
sub
fistpll
sub
pop
aas
mov
stos
mov
add
adc
repz
insb
pop
fcmovnb
shl
cwtl
cs
insb
popa
pusha
jmp
ret
ds
mov
arpl
pushf
xor
mov
mov
mov
insb
jno
into
cli
add
jns
in
faddl
pop
mov
daa
insb
aad
xor
jp
shrb
les
sbb
mov
mov
not
dec
push
sbb
insb
pop
ja
mov
enter
jge
fs
imul
insb
inc
mov
dec
jp
jbe
insb
mov
jne
mov
or
outsb
sub
sbb
mov
jge
add
adc
jmp
insb
push
mov
subb
lods
xlat
test
push
pop
dec
je
push
push
movsb
insb
sub
dec
xchg
test
cmpsb
loope
dec
jb
adc
xor
inc
sahf
int
addr16
ret
imul
les
cmp
mov
inc
or
add
das
cmp
or
loope
pop
pusha
insb
push
movsb
inc
mov
mov
icebp
imul
negl
cmp
gs
test
in
xchg
test
and
movsl
cltd
or
insl
cmpsb
negl
out
xchg
mov
in
addb
mov
repz
pop
adc
pop
jle
js
sub
jnp
xchg
in
mov
lcall
mov
lock
insb
jecxz
mov
pop
adc
push
insb
mov
cmpsl
mov
jg
insb
xor
lret
fisubrl
push
loopne
add
mov
insb
stos
sti
dec
jbe
shl
out
xchg
insb
or
sub
mov
fldcw
outsl
pushl
repz
stos
jle,pn
insb
dec
xor
insb
or
cli
loope
xchg
inc
insb
popfw
lods
int
ss
rcrl
add
pop
insb
sti
mov
push
cmpsl
insb
dec
mov
xchg
stos
pop
lret
xlat
add
jnp
leave
test
or
mov
popf
pop
add
fadds
shrb
dec
sub
inc
outsl
lods
fsubr
cmc
pushf
insb
add
je
in
in
fstps
pop
fs
mov
xchg
push
lods
sbb
lods
xor
cmc
data16
imul
sbb
push
inc
insb
mov
scas
fwait
jbe
add
fistps
insb
jns
pop
push
fisttpll
lret
or
cmp
sbb
add
sub
bound
subl
or
mov
mov
xchg
push
or
inc
mov
and
jge
in
pop
sbb
insb
jns
cltd
jo
cld
cmc
mov
sub
mov
dec
or
je
scas
daa
or
pop
and
add
insb
std
sbb
mov
test
in
fbld
stos
jl
cmc
xchg
imul
adc
fwait
dec
lock
adc
es
scas
push
aam
xchg
in
leave
dec
jbe
insb
ljmp
or
mov
sub
or
lods
lock
sub
jne
int3
pop
dec
int3
mov
jl
aas
jle
jecxz
mov
rolb
cmp
jle
in
iret
xor
mov
push
mov
pcmpgtb
xchg
dec
test
dec
ret
mov
fisubs
stc
mov
xor
js
imul
cmp
dec
or
sub
bound
mov
jae
pop
mov
ret
mov
lods
insb
int3
mov
adc
insb
mov
jno
scas
loop
repnz
mov
dec
insb
push
imul
and
in
and
test
adc
aaa
mov
xchg
mov
or
scas
dec
sbb
test
jg
push
stos
jmp
addr16
dec
mov
jo
push
fadd
lock
pop
mov
jg
in
call
popf
mov
test
fwait
outsb
xor
push
mov
cld
dec
pop
loopne
and
scas
dec
lret
dec
pop
jb
cmp
jno
add
hlt
hlt
cmpsl
pop
adc
push
adc
push
das
out
xchg
jmp
lods
pushf
add
test
push
pop
jno
sub
mov
gs
push
ljmp
insb
lock
insb
in
jg
dec
or
cmpsb
mov
push
xor
mov
lds
inc
mov
xor
mov
xchg
insb
das
loop
int
cs
insb
sti
aas
shlb
pop
cmp
cmp
jb
lock
pusha
pushf
nop
mov
or
insb
outsb
sti
ja
out
dec
rclb
or
es
pushf
cmp
insb
fistpl
sub
xchg
inc
dec
es
sahf
cltd
or
pushf
dec
and
js
lret
ljmp
ja
arpl
cltd
sbb
test
gs
dec
xchg
jge
xor
ds
movsb
cld
pop
sub
push
cmp
or
imul
nop
arpl
test
mov
js
hlt
scas
cmp
and
sbb
mov
insb
fucomi
add
sbb
stos
push
inc
jp
cwtl
aam
jno
xchg
push
je
insb
aas
arpl
cmp
test
imulb
jns
inc
mov
jo
sti
scas
sub
ss
pop
insb
mov
shrl
aam
xor
push
subl
mov
je
sahf
mov
sub
das
or
subb
mov
lods
cmpsl
push
jmp
mov
pop
insb
mov
inc
cmc
out
sub
divl
mov
insl
test
lods
lods
xlat
mov
cmp
fildll
mov
cmpsl
dec
shr
test
int3
jae
cltd
imul
jne
pop
popf
xchg
insl
nop
insb
mov
es
pop
orb
js
cmp
test
ret
pop
mov
pop
insb
xor
outsl
hlt
xchg
add
int
dec
lods
jle
shrl
xor
sub
dec
xlat
scas
add
adc
fstp
xor
imul
mov
iret
xchg
cld
out
pop
fwait
pop
icebp
call
test
int3
roll
mov
insb
lods
mov
push
aaa
add
sub
in
mov
mov
in
into
mov
rol
dec
scas
mov
pop
sbb
loop
cs
cmpsb
xchg
or
popa
insb
sti
mov
lahf
jb
add
js
cltd
dec
adc
aad
dec
call
sub
sbb
movsb
ja
sub
in
xor
fsubrl
sbb
mov
mov
cmp
dec
push
jns
je
sbb
sbb
insb
mov
mov
pcmpeqb
and
je
adc
out
sub
addr16
lock
jge
fadds
std
mov
ja
movsl
subb
cmp
or
xor
fiaddl
pushf
mov
mov
inc
js
xor
add
addr16
scas
test
push
push
mov
gs
repnz
dec
popa
insb
push
mov
jns
ret
sbb
jle
jp
imul
nop
xchg
mull
jl
in
sub
sub
xlat
insb
hlt
mulps
mov
and
inc
mov
push
leave
nop
adc
insb
iret
jae
rorl
lahf
call
imul
or
mov
fsubr
insb
hlt
sti
testl
push
push
sbbb
sahf
test
adc
outsb
mov
cs
mov
or
and
insb
ja
ss
pop
pop
inc
or
cmp
or
stos
jmp
ds
aaa
push
dec
hlt
enter
mov
hlt
pop
pop
pop
sub
stos
sbb
fldcw
cli
add
roll
stos
fstl
dec
insb
sbb
lods
adc
rol
insb
mov
sub
pop
ljmp
or
and
xorl
out
movsb
repz
mov
pop
bound
push
or
push
cmc
call
out
or
jp
pushf
mov
adc
sub
inc
fisubrs
xor
jne
sub
jecxz
stc
or
dec
aam
xchg
dec
xlat
movsl
inc
or
sbb
es
fsubrs
xchg
xor
mov
xor
test
mov
jnp
lcall
movsb
repnz
ds
sbb
fdivrl
mov
loope
lea
xor
aaa
mov
pushf
mov
cmp
imul
iret
push
icebp
jno
sub
loopne
xor
xor
mov
insb
sub
pop
movsb
adc
and
mov
les
lahf
out
jge
xchg
push
insb
or
adc
xchg
out
decb
insb
push
movsl
imul
insb
jp
adc
fdivl
sti
cmpsl
dec
scas
push
orb
ret
gs
sbb
push
jb
or
in
dec
or
push
pmulhw
lahf
in
xchg
lret
clc
aad
jns
cwtl
jae
sub
in
xchg
jp
testb
push
mulb
fisubl
pop
push
pop
sbb
mov
sbb
or
push
mov
add
dec
idivl
call
ds
insb
rcll
xor
insb
sub
int3
mov
cmc
pushf
addr16
popa
insb
cmp
sbb
jbe
imul
call
setg
add
mov
hlt
mov
shll
or
jp
enter
insb
mov
loopne
inc
cmp
or
xchg
add
jns
mov
xor
enter
das
insb
xor
daa
push
jl
test
inc
or
int
popa
rep
in
out
adc
aad
mov
xor
idivl
inc
cmp
bound
in
insb
dec
xchg
adc
pop
add
pop
add
fucomi
or
leave
pop
mov
pushf
fdivl
pop
jo
insb
fldl
xchg
imul
dec
sbb
test
aad
fadds
jmp
cld
test
xor
inc
dec
push
outsb
hlt
inc
in
fisubl
pop
das
insb
push
es
add
jge
lock
insb
sti
mov
add
push
push
xor
sbb
mov
jge
in
mov
pop
cmp
test
pop
cmp
popa
jo
adc
in
outsl
insb
push
ret
xor
mov
cld
insb
fisubrl
or
stos
les
cmp
fldt
arpl
pop
mov
dec
lret
dec
loopne
xchg
cmpsl
adc
mov
add
insb
jb
push
push
push
cmp
fisttps
or
imul
icebp
pop
ljmp
lcall
sub
cmpb
outsb
sbb
pop
js
pop
xor
std
lock
adc
imul
cmpsb
add
jns
pop
mov
out
popa
test
popa
iret
repz
movsb
das
mov
mov
mov
mov
push
fldt
pop
shrb
int3
dec
pushf
call
jns
andl
lods
sub
shrb
mov
sub
lea
int
stos
fwait
pop
jo
in
inc
mov
insb
mov
mov
aaa
dec
xchg
push
outsb
arpl
jp
sub
or
movsl
push
loop
call
pop
insl
and
mov
insb
push
add
out
lahf
dec
push
sbb
insb
mov
in
idivl
out
sub
sahf
mov
mov
pop
insb
pop
cs
jb
mov
sbbl
in
aaa
in
cmp
ret
notl
icebp
inc
dec
and
lcall
dec
add
mov
lds
adc
cmpsb
push
fwait
dec
adc
imul
adc
add
cli
outsl
mov
fdiv
xchg
mov
jne
or
add
int
jo
mov
sub
je
imul
stos
int3
fbstp
lods
pop
or
mov
or
shrb
xchg
adc
leave
hlt
or
mov
jne
ljmp
push
jl
mov
insb
jno
insl
dec
test
into
insb
pop
sbb
pusha
mov
add
or
jl
mov
inc
jno
dec
and
inc
and
das
rclb
imul
pop
lret
mov
insb
hlt
sub
rorl
dec
add
jnp
mov
insl
addb
push
cmp
jl
inc
insb
cs
lds
fldcw
lret
adc
imul
clc
mov
push
add
bndstx
nop
in
adc
xchg
pop
xor
mov
pop
ss
lock
in
sub
fwait
and
repnz
shll
jl
mov
push
insb
adc
inc
sbb
cwtl
inc
dec
hlt
dec
cmpsb
in
lods
push
jnp
xor
out
add
pop
pop
fisubl
push
fbld
and
enter
xchg
fdivl
insl
inc
in
inc
inc
lods
push
nop
leave
adc
dec
mov
insb
dec
dec
int
jne
push
mov
cmp
adc
faddl
loopne
inc
in
jge
insb
fndisi(8087
pop
add
ss
insb
sub
subl
push
in
pop
mov
pop
sub
in
lods
sub
rorl
in
insb
or
push
sbb
mov
imul
push
add
es
int
and
arpl
imulb
movsb
and
repz
jp
or
mov
cli
mov
mov
mov
push
or
repnz
mov
push
jecxz
sbb
imul
push
jmp
jmp
push
push
stos
pop
movsl
jbe
imul
pusha
cmpl
xor
adc
push
pop
andl
and
xlat
nop
xor
jp
jne
repnz
inc
adc
in
enter
insl
dec
xor
outsl
inc
mov
imul
mov
jno
lds
pop
or
jae
icebp
pop
gs
jl
inc
test
insl
lods
shlb
insb
sub
xchg
adc
insb
adc
cmp
xchg
testl
imul
mov
pushf
clc
xchg
sbb
xchg
sub
daa
insb
push
pop
xor
jbe
jle
xchg
sahf
sub
sub
test
adc
clc
insb
pop
fimuls
aad
imul
jbe
pusha
xchg
movsb
in
insb
mov
inc
mov
insb
pushf
mov
sti
mov
cli
pop
lods
pop
int
cs
xor
jo
in
dec
push
idivb
sti
lahf
inc
daa
or
mov
jecxz
sub
mov
dec
sbb
sahf
push
lret
adc
pusha
jne
cmpsl
insb
inc
cmpsb
sub
insb
ficoml
enter
dec
aas
cld
lret
pop
stos
jns
fadd
sbb
clc
cmp
inc
and
dec
insb
test
loope
sbb
sbbl
cmp
movsb
dec
imul
sub
and
scas
push
add
or
int
insb
inc
add
push
cli
pop
cld
cmc
mov
adc
push
je
imul
imul
out
jmp
out
insb
mov
int
call
subb
in
sbb
mov
jmp
pop
adcb
add
dec
adc
mov
scas
lods
cmpsb
xchg
subl
test
jp
movsl
aas
loope
out
imul
cltd
jo
into
insb
sbb
mov
adc
add
insb
add
data16
push
imul
test
insb
ljmp
xor
cmpsb
cld
dec
insb
test
push
sahf
loop
shrl
fdivp
sbbl
push
and
xorl
inc
add
or
pop
jg
sub
int3
cmpsl
ds
jge
insb
push
push
and
sub
ret
or
jne
loopne
test
repz
sub
mov
mov
loope
xor
repnz
ljmp
dec
xchg
call
add
sti
loopne
lea
push
xor
out
in
sub
dec
arpl
or
int
jno
or
loope
mov
jmp
dec
cmp
inc
add
outsl
stos
in
insb
jmp
mov
lods
insb
and
addr16
lods
jp
cmp
add
mov
shrb
sbb
xor
push
pop
jbe
insb
pop
cmc
inc
std
loopne
jnp
jle
insb
aaa
and
jge
mov
dec
insb
pop
jg
aad
xchg
dec
inc
insb
hlt
push
sar
sub
insb
loopne
xor
jl
insb
pop
sbb
ret
daa
imul
jae
push
xchg
pop
test
pop
dec
cmp
sub
mov
popf
pop
int3
jge
and
fimull
xchg
imulb
push
jns
inc
scas
pop
imull
ja
mov
shld
rcrb
inc
mov
cmp
insb
lds
mov
arpl
pop
insb
mov
inc
xchg
pop
out
xor
test
in
xor
rclb
je
pop
add
es
push
imul
and
fiadds
xchg
sub
push
mov
add
cmp
pop
and
jno
mov
shrl
imul
dec
insb
out
adc
sbb
sub
xchg
jae
lock
jecxz
mov
lea
inc
test
das
popf
js
xlat
pop
push
es
cmc
imul
test
mov
cmp
imul
push
push
jg
pop
subl
mov
subb
rcrb
movsl
inc
xlat
jo
orl
inc
stc
sub
ret
dec
pop
sarl
adc
inc
icebp
fiaddl
nop
adc
fstps
fs
xor
lods
mov
ffree
inc
in
dec
xchg
mov
insb
test
mov
jl
sarl
inc
add
cwtl
stc
insb
adc
out
scas
insb
popf
pop
in
shlb
push
xor
insb
neg
stos
loop
imul
mov
pop
lds
fistpl
mov
daa
icebp
hlt
inc
and
imul
pop
xchg
dec
loop
xchg
lods
add
mov
pushf
in
mov
adc
scas
sbb
jle
insb
ret
lcall
testl
inc
jp
loope
imul
push
js
jb
cmp
call
jle
adc
push
inc
add
lret
mov
mov
cmp
imul
insb
xchg
fcoms
adc
push
push
repnz
jb
pop
sbb
cmpsl
shll
inc
mov
popf
notb
dec
cs
push
pop
roll
push
mov
insl
mov
int
fs
nop
outsl
aad
lret
sub
sub
cmp
in
shl
jge
xor
mov
das
inc
imul
or
gs
movsb
insb
cmp
mov
mov
pusha
insb
xchg
rcll
sbb
inc
in
insb
scas
jmp
flds
pop
repz
lea
decb
stos
movsb
xor
std
cmp
insb
arpl
inc
imul
inc
push
mov
jns
push
in
cmc
pop
enter
aam
add
jno
insb
xchg
inc
or
cmp
dec
xlat
rcrb
pop
dec
addr16
sarl
mov
adc
cwtl
xchg
push
adc
sub
inc
and
mov
fcmovnu
insb
and
int
mov
aaa
xlat
and
popa
call
lret
enter
adc
mov
lcall
scas
push
pop
ret
dec
int3
mov
mov
enter
loop
popa
pop
lcall
cli
cltd
lock
imul
xor
insl
movsl
lea
xor
stos
notb
insb
xchg
icebp
adc
jge
sbb
cltd
xor
outsb
xor
je
or
leave
mov
pop
or
clc
push
mov
cld
outsb
push
inc
mov
in
lods
xor
shrl
imul
or
push
add
insb
jns
push
add
icebp
scas
and
int
mov
das
insb
xchg
aaa
leave
sub
imul
mov
fcmovu
insb
push
dec
jle
mov
adc
mov
insb
imul
mov
shrl
dec
addr16
subb
xor
push
inc
push
cmp
mov
fistpl
insb
pop
out
sbb
insb
scas
and
ret
insb
ficompl
stos
mov
ret
sbb
repz
imul
cmp
mov
jb
sbb
cmp
or
fcompl
and
outsb
dec
inc
jmp
sub
imul
xchg
data16
mov
rclb
inc
add
sbb
insb
mul
mov
sbb
js
pop
outsb
add
insb
mov
add
and
jne
mov
idivb
jae
sbb
push
mov
push
pop
xchg
test
nop
push
js
sbb
jl
mov
pop
out
cwtl
insb
fidivrl
sbb
data16
and
in
dec
mov
mov
jmp
insb
jb
mov
lea
jl
pop
es
pop
fisttpl
jns
in
pop
pop
or
shll
xchg
insb
in
push
adc
outsb
jae
inc
scas
pushf
mov
shll
mov
int
and
mov
scas
insb
inc
lret
xchg
insb
popa
xchg
inc
imul
xor
inc
sub
je
out
add
mov
inc
pop
sub
insb
jnp
and
push
dec
or
std
mov
push
js
imul
scas
imul
pop
push
enter
out
inc
mov
std
cmpb
outsl
sub
or
lods
dec
pop
pop
out
mov
cmp
mov
stos
mov
or
bnd
je
in
addr16
ljmp
fdivl
popa
jle
or
xor
dec
loopne
push
lcall
movsb
loope
imul
cmpsl
test
mov
test
popa
insb
mov
lret
imul
pop
iret
push
adc
lahf
jmp
push
xor
in
int3
inc
xchg
mov
insb
inc
jnp
dec
add
outsl
mov
pushl
scas
lahf
mov
mov
push
pop
xchg
or
cmp
pusha
dec
das
cs
pop
outsl
mov
in
push
jno
popa
xor
push
mov
insb
in
or
test
insb
adc
sub
mov
and
mov
jnp
cmp
stos
insb
jmp
or
jne
insb
xor
aam
sbb
rolb
imul
mov
push
into
jmp
hlt
cs
imul
jbe
cmp
mov
js
ds
fisubs
outsb
ss
or
bound
and
insb
lock
mov
lret
push
daa
outsl
jle
out
insb
lock
orb
jae
in
push
mov
adc
pop
fsubrl
push
jecxz
and
rclb
loopne
pop
insb
sbb
fsubr
stc
mov
hlt
add
inc
mov
mov
in
divb
aas
insb
shll
or
xor
incb
mov
addr16
and
in
cmp
mov
sub
add
int
imul
andb
scas
in
sbb
call
cmc
push
adc
pop
sub
icebp
insb
cld
pop
fildl
insb
lods
aad
cmpsl
das
mov
imulb
push
outsb
pop
shr
and
sub
and
push
enter
sub
jmp
test
insb
or
cs
insl
dec
aaa
stos
inc
insb
inc
cmc
enter
mov
repz
inc
jge
bound
pop
sahf
mov
in
cmp
shl
and
sbb
lods
mov
fsubrs
or
std
js
mov
xor
xchg
ret
lock
out
pop
mov
mov
insb
xchg
and
decb
or
cpuid
pop
in
rep
cmp
jnp
adc
stos
test
fnstsw
push
mov
mov
jg
out
orl
les
fwait
dec
vpcomub
push
mov
xchg
and
insb
addb
mov
gs
insb
in
jmp
adc
xor
mov
into
repnz
sub
sub
dec
mov
xchg
aaa
imul
xchg
cltd
mov
ret
imul
cmp
or
popa
andl
jmp
les
add
imul
iret
les
shlb
dec
pop
push
sub
mov
test
mov
fsqrt
mov
push
xchg
shlb
jecxz
loop
insb
xchg
sbb
dec
push
nop
inc
insb
sbb
ret
movaps
push
mov
mov
mov
insb
sub
mov
xlat
push
repnz
ja
sbb
lea
lods
push
insb
mov
add
or
stos
andb
in
inc
dec
or
getsec
imul
imul
leave
xchg
out
add
jno
push
or
cli
fisttpll
pop
daa
adc
lock
ljmp
aad
push
sub
mov
jbe
pop
add
fsubp
repz
cmc
loopne
dec
mov
push
jbe
jae
addr16
rcrb
sbb
pop
sbb
insb
mov
push
rorl
sbb
pop
xchg
xor
aam
fldcw
scas
pop
insb
push
jno
push
xorl
clc
fdivp
xor
jmp
aas
js
js
shl
insb
mov
push
push
pop
push
lret
cmpsb
imul
movsb
gs
int3
pushf
add
insb
dec
pushf
data16
scas
popf
pop
aam
and
inc
movsl
add
xchg
insb
xor
out
mov
cld
scas
add
orl
ficoml
outsb
test
cmp
cmc
cmp
sbb
imul
imul
xchg
jne
and
sub
in
insb
mov
jae
mov
into
aam
loopne
mov
sbb
iret
lea
insb
push
mov
xor
lods
pop
stos
popf
subl
cld
dec
mov
sub
cmc
xor
fnstsw
and
movsb
outsb
xor
in
dec
mov
lods
insb
pop
xor
aam
stos
mov
mov
ss
shll
add
mov
je
jge
out
and
ss
iret
sbb
gs
mov
insb
dec
lea
testl
xlat
push
ljmp
cwtl
fst
mov
lods
insb
and
sub
insl
inc
loope
pop
insb
mov
mov
cmp
pusha
insb
adc
loope
jecxz
fs
stos
lcall
adc
inc
push
mov
push
aad
mov
insb
inc
shrb
push
sbb
push
insb
nop
dec
mov
dec
repz
insb
aam
and
pop
inc
push
push
roll
xlat
sub
lods
hlt
sbb
aaa
pop
lods
mov
outsb
push
xchg
hlt
xor
cltd
push
cmp
in
decb
cmp
enter
insl
insb
jp
lcall
lea
icebp
pop
loopne
popf
insb
xor
test
and
imul
dec
pushf
leave
insb
imul
aad
mov
je
insb
rcrl
enter
dec
insb
int3
int
mov
jb
cmp
inc
or
dec
adcl
pop
imul
or
pusha
subl
popf
fisubrl
repnz
nop
into
movsb
ret
dec
mov
loope
sub
mov
and
pusha
insb
or
ljmp
rcrl
inc
push
addb
cmpsl
fisubrs
mov
lcall
sub
jno
mov
insb
fnstcw
adc
es
lods
push
or
sbb
insb
jg
out
xchg
xchg
fadd
jnp
fwait
xchg
mov
pop
lea
mov
xchg
insb
fstp
or
push
or
stc
sbb
inc
xor
ja
sub
pop
jle
arpl
lods
imul
repz
adc
and
bound
dec
pop
insb
movsb
subl
into
ljmp
mov
stc
mov
xor
aad
mov
insb
or
xor
add
outsl
jge
xlat
in
imul
ret
push
test
jge
out
inc
ljmp
jle
ja
std
inc
cmp
push
cmpsb
insb
sarb
shrl
jb
aad
ljmp
or
dec
sub
nop
enter
cmp
push
out
aaa
push
in
stos
adc
mov
insb
out
jecxz
xor
insb
sub
add
iret
mov
ret
es
cmp
xor
mulb
insb
mov
jge
shll
xchg
lods
cmp
mov
jl
adc
scas
push
stos
jnp
cld
lret
pusha
xchg
jmp
fmuls
xchg
lods
adc
gs
or
mov
pop
in
movsb
jp
adc
daa
pop
stc
int
insb
nop
lods
das
inc
sbb
cmp
dec
imull
sbb
outsl
rclb
push
int
sti
stos
call
jae
aam
jbe
insb
clc
adc
or
insb
adc
push
imul
hlt
pop
pop
lahf
test
fwait
jo
mov
insb
xor
mov
dec
pop
out
pop
xor
and
pop
repz
out
sahf
push
push
push
ss
icebp
outsb
and
dec
insb
bound
test
push
sbb
mov
call
insb
mov
mov
mov
jo
push
sti
jmp
sbb
xor
cmp
icebp
and
mov
dec
aam
insb
leave
shlb
insb
repnz
xchg
aad
call
cmp
jge
cmp
insb
xor
sub
dec
jo
into
xor
or
fistl
mov
push
dec
ljmp
mov
stc
cmp
jb
push
int
jp
shlb
push
les
ss
jno
das
adc
or
insb
cmp
pusha
jbe
mov
sub
ret
lods
sbbb
daa
subl
insb
mov
fldenv
xchg
adc
inc
stc
cli
cmp
pushf
add
adc
insb
or
pop
scas
imul
into
dec
xorl
cltd
insb
pop
shll
mov
outsb
cmp
or
in
ficomps
insb
xchg
movsl
insl
es
mov
insb
fisttpl
xchg
xchg
ret
mov
pop
push
insb
or
mull
xchg
mov
mov
push
jl
xor
sbb
test
scas
push
iret
lahf
pop
jbe
xchg
mov
mov
xor
pop
idivb
xchg
jmp
push
ret
mov
pop
jp
movsb
cmc
pushf
outsb
fbstp
dec
fs
flds
or
cmp
rcll
out
cmp
or
mov
imul
pop
pop
sbb
mov
mov
and
dec
call
push
lock
mov
xchg
cltd
cmpb
sub
xor
stos
inc
jne
lahf
push
jbe
mov
xor
xor
jg
adc
jl
test
cmp
adc
push
insl
jle
inc
adcl
inc
mov
jno
fs
lcall
add
push
aad
scas
add
xor
dec
pop
and
mov
adc
insb
ja
fisubrl
xchg
test
or
and
scas
js
mov
add
push
movsb
pushf
dec
sub
in
lods
jl
add
dec
push
mov
ja
adc
push
xor
fistpll
push
fisubrl
sub
inc
sub
fdivs
f2xm1
cmp
push
insl
popa
dec
xor
and
cs
cmp
cltd
test
adc
call
insb
imul
popf
lret
test
gs
jle
icebp
jnp
into
outsl
in
mov
dec
je
mov
fsubrs
mov
hlt
insb
incl
jbe
repnz
repnz
xlat
push
popf
dec
adc
jbe
sbb
popa
push
cmp
stos
dec
fs
fs
mov
out
lods
push
pusha
loope
outsl
andl
std
push
jge
mov
ljmp
hlt
jns
out
fbld
adc
xchg
pop
loopne
jb
int
dec
int3
fwait
pop
jge
lahf
mov
dec
fs
pop
js
lock
mov
sbb
imul
pop
addr16
fsubrl
pop
jmp
mov
mov
xorl
shrb
aas
push
mov
mov
ss
pop
cld
dec
or
mov
adc
mov
push
pop
enter
lds
stos
sub
popa
jne
repnz
jle
enter
pop
and
cmp
dec
inc
and
xorb
pop
imul
sbb
jbe
aam
cmp
cltd
pusha
iret
push
pop
pop
stos
push
jno
gs
jecxz
and
xor
mov
or
lea
lods
aaa
ljmp
mov
inc
mov
rcrb
push
sub
cli
sbb
push
mov
jg
jecxz
inc
arpl
xchg
pop
outsb
in
inc
bound
js
sbb
fisttpll
les
ljmp
jge
xchg
loopne
in
lods
test
jno
add
pop
cmp
xchg
popl
push
pushf
enter
imul
mov
adc
lret
cld
imul
scas
adc
mov
lret
ja
dec
push
lea
insb
or
push
xor
xchg
test
and
nop
in
test
out
outsb
mov
cmp
je
mov
push
shlb
jae
jp
dec
sahf
aas
shrl
aaa
gs
loopne
addr16
insb
mov
lods
sub
mulb
mov
jecxz
outsb
add
mov
mov
pop
mov
xchg
test
sbb
sbb
push
movsb
insb
adcl
push
in
lods
pop
or
lock
rcl
mov
in
mov
jo
adc
sub
es
in
or
push
fdivr
arpl
emms
jmp
les
dec
fdivs
and
imul
sub
lcall
andl
sub
mov
inc
pushf
cmpl
aaa
sbb
dec
xchg
or
scas
cmp
clc
fsubrs
cs
in
jecxz
scas
lcall
sbb
mov
enter
dec
xor
outsb
mov
in
add
sahf
imul
dec
fdivp
xchg
adc
popf
movb
pusha
insb
pop
jo
lea
sbb
jne
add
roll
imulb
mov
rcrb
out
loop
pop
push
inc
movsb
je
insb
dec
scas
or
xor
sub
cltd
mov
leave
sub
lods
dec
pushf
dec
daa
push
lcall
lods
nop
fisubrs
enter
pop
mov
dec
cs
je
sbb
inc
sub
insb
sbb
push
mov
sub
insb
mov
jae
out
int3
jo
leave
insb
inc
pop
aad
outsl
cs
imul
stc
icebp
pop
inc
push
test
les
arpl
xchg
and
imul
mov
mov
je
ficompl
sub
jne
stc
cmp
add
dec
dec
mov
mov
das
lods
xchg
pop
or
outsl
sbb
xchg
insb
push
xor
das
dec
inc
and
sbbb
test
enter
xchg
sti
cltd
je
test
or
es
insb
push
popf
into
enter
and
stc
sbb
jno
mov
fidivs
pop
ss
fwait
jp
and
insb
sub
mov
mov
adc
lret
dec
cltd
dec
enter
mov
and
cmp
xor
loopne
rorb
sti
sbb
insb
pop
cmp
jg
sbb
insb
aam
cmp
jo
ljmp
pop
pop
mov
aam
adc
and
insb
fs
loopne
lret
inc
xor
lahf
imul
sub
and
cmp
mov
sbb
or
iret
dec
pop
add
mov
pusha
push
insb
cmp
add
sbb
sbb
mov
mov
adc
dec
xor
push
and
ret
clc
and
xchg
data16
push
cltd
jge
mov
popa
xchg
adc
imul
in
insb
daa
xor
loope
out
insb
add
cwtl
lahf
mov
xor
sub
loope
sbb
sbbl
mov
repz
adc
mov
inc
fisttpl
push
insb
repnz
add
filds
sub
pop
sbb
aam
jge
fmul
loop
les
scas
dec
rorb
adc
sti
cmp
aaa
add
shrl
mov
sub
pop
lods
les
cmpsl
mov
mov
inc
cmp
jl
in
sti
jp
xor
xor
popf
leave
pop
iret
sar
xchg
adc
sbb
adc
inc
mov
insb
fnstenv
aam
sub
insb
pop
jns
hlt
dec
jl
push
cs
in
roll
add
adcl
dec
mov
jno
imul
lods
mov
das
insb
into
or
mov
cmpsb
lea
fsubs
insb
fdivrl
mov
test
fsubs
or
xor
lods
add
insb
fildl
fs
insb
movsl
inc
lret
mov
xchg
and
addr16
hlt
insb
sub
cmp
aas
and
and
pop
or
insb
xlat
adc
ljmp
cmc
int3
dec
lds
imul
cltd
jge
gs
lock
jle
or
push
in
ljmp
hlt
imul
add
imul
jno
dec
or
push
insb
mov
outsb
jbe
or
and
test
in
dec
xor
stc
insb
push
jnp
faddl
sti
lcall
pop
int3
mov
xchg
int3
cmp
daa
pop
inc
insb
call
mov
insb
aam
mov
ret
xor
sub
mov
pop
shll
mov
or
leave
rcrb
mov
pop
sub
cmp
in
enter
jae
pop
push
notl
insb
das
shlb
dec
mov
int3
rolb
insb
and
mov
mov
add
xchg
push
fisubrl
sbb
or
mov
xor
xchg
in
mov
jae
or
jo
imulb
ja
subl
icebp
and
or
loop
call
cmp
and
xchg
fistpll
insb
push
divb
add
pop
insl
xor
in
inc
lods
int3
icebp
dec
jno
int
cmpb
mov
imul
pop
cmpb
cmc
jbe
jle
insb
sbb
dec
sbb
adc
add
loope
insb
sti
jmp
sbb
out
insb
pop
popf
mov
and
arpl
and
xchg
repnz
cwtl
mov
imul
dec
cmc
clc
pop
pop
rcr
or
fwait
aad
aam
insb
lret
mov
dec
cmp
pop
jmp
mov
sub
mov
mov
out
aam
imul
push
and
push
imul
lods
jge
insb
adc
lods
xchg
shll
push
and
outsb
insb
add
mov
fs
push
jle
xchg
pushl
and
jne
jecxz
adc
insb
mov
ret
insb
scas
jnp,pn
pop
push
repz
hlt
in
add
xor
out
push
in
and
das
test
pop
ficoms
and
ficoml
xor
jmp
je
mov
stos
xchg
lea
insb
dec
movb
sub
jo
inc
jb
sub
xor
mov
sub
mov
mov
push
inc
repnz
insb
mov
lods
fxam
or
in
pop
xor
movl
test
out
or
insb
inc
pop
push
jo
outsb
mov
or
in
out
and
js
adc
movsl
insb
mov
jnp
jmp
repnz
sbb
xchg
or
scas
jp
imul
jg
dec
mov
nop
pop
sbb
mov
cwtl
fidivrl
or
and
dec
outsb
xor
insb
adc
add
xor
lods
mov
aad
sub
insb
imul
push
inc
pop
cmp
stos
nop
ret
insb
add
shlb
outsb
je
or
or
imul
adc
mov
jmp
fwait
in
dec
cs
mov
mov
out
adc
imul
mov
and
mov
jae
and
insb
cmpb
les
lahf
adc
dec
mov
fdivl
mov
loope
in
xchg
lahf
jmp
clc
mov
lods
fldcw
jg
fdivl
inc
rep
pop
xchg
xor
mov
mov
aam
jno
stc
test
sub
out
out
pushf
insl
insb
cwtl
out
mov
inc
xchg
mov
fsubrs
push
lods
jns
or
or
mov
jae
stos
dec
push
loopne
and
insb
pop
push
insl
mov
scas
inc
xor
inc
jmp
jmp
dec
cmp
in
cmp
data16
and
insb
je
sbb
mov
insb
das
jl
stos
push
sub
xor
insb
sub
adc
mov
sbb
insb
sub
mov
jns
mov
mov
es
mov
push
sti
push
mov
xchg
sbb
fdivrs
adc
cmp
fbstp
xchg
sbb
ds
mov
sub
pop
pop
bound
push
popa
xchg
adc
icebp
fidivrs
push
scas
insb
aam
outsl
sbb
mov
or
dec
ljmp
arpl
mov
dec
jmp
dec
cmp
fsubrl
jge
xchg
pop
and
or
mov
mov
mov
push
or
imul
jmp
mov
mov
data16
test
shlb
pop
js
imulb
and
dec
add
sbbl
push
pop
cltd
or
lods
fiaddl
xchg
add
cmp
inc
outsl
insl
jns
pop
insb
cmp
das
fwait
insb
sub
sbb
imulb
je
in
lods
les
clc
shlb
or
jg,pt
sbb
sbb
sbb
mov
mov
es
insb
out
sbb
popa
ds
mov
mov
inc
mov
or
lods
imul
ret
add
inc
push
mov
in
push
fnstsw
dec
dec
mov
dec
insb
xchg
in
lds
arpl
push
or
movsb
dec
insb
test
pop
mov
pop
mov
int
sbb
je
shlb
jns
outsb
lods
loopne
mov
negl
out
mov
insb
into
push
imul
enter
xor
jae
insb
insl
add
int3
movsb
fisubrs
insb
mov
and
rcrb
xor
fcomps
insb
adc
out
lods
scas
enter
lock
dec
test
insb
shll
jb
and
adc
xchg
pop
call
xlat
in
lods
push
pushf
mov
pushw
insl
call
pushf
jecxz
notl
jp
fst
insb
cwtl
lods
push
lds
insb
stos
aas
jno
mov
jae
lods
mov
insb
add
shl
adc
fdivr
mov
or
mov
test
jmp
mov
subl
cmpsb
jnp
cld
adc
movsb
jbe
addr16
je
jl
sub
stc
cltd
mov
shll
cmp
aam
mov
sbb
or
push
push
imul
dec
mov
or
pop
in
add
pop
sbb
movsl
arpl
push
es
push
push
in
cmpsl
daa
sub
mov
xchg
pop
arpl
inc
mov
inc
insb
jg
mov
gs
popa
xchg
lahf
lods
daa
loope
jbe
jle
insb
lret
xor
aaa
or
in
out
insb
jo
add
hlt
repnz
sub
cmpsl
icebp
cli
fcmovu
fwait
insb
std
movsl
mov
call
lock
insb
sub
mov
fsubrs
loopne
sbb
mov
insb
xchg
ss
dec
mov
sub
pop
fsubrs
dec
xchg
cltd
sbb
insb
mov
lea
insb
lock
int3
shlb
push
insb
jmp
jle
cwtl
mov
gs
adc
mov
jle
xchg
jbe
clc
pop
icebp
lds
pushf
mov
ds
mov
adc
xlat
sub
jnp
popa
push
mov
push
in
jns
jne
push
and
mov
lds
add
cmpsl
mov
push
test
jecxz
jle
mov
in
and
sub
mov
fsubp
aam
insb
xchg
loop
lods
sub
insb
push
out
mov
jbe
jo
insb
js
inc
outsb
mov
and
stos
sub
cmc
clc
jbe
call
mull
sub
or
sbb
jmp
and
xchg
shl
xchg
cwtl
pop
insb
xchg
addl
cmpsb
lahf
mov
inc
push
insb
cwtl
outsl
xchg
jno
insb
shl
mov
cmp
xor
cwtl
add
imul
jmp
jo
in
add
fdivrl
push
insb
pop
xor
sahf
fsubrl
sbb
jae
addr16
das
and
insb
int3
push
push
outsl
mov
insb
adc
xor
insb
mov
outsl
repnz
mov
and
cmp
or
adc
xchg
ljmp
inc
test
xor
insb
lret
mov
insb
out
mov
adc
iret
sub
adc
js
inc
jns
fdivrl
insb
rcrl
adc
and
mov
dec
loope
cmpsl
jne
mov
mov
pop
adc
mov
cmp
sbb
cmp
call
arpl
push
push
pop
out
int3
iret
inc
insb
in
stos
out
ljmp
mov
mov
mov
pop
dec
int3
add
pop
enter
insb
push
ljmp
xchg
sub
insb
sub
mov
jp
insb
lods
pop
in
cmp
test
rcr
lods
cmp
adc
mov
xchg
xchg
dec
pop
dec
dec
insb
mov
inc
jge
push
clc
insb
ret
fwait
jnp
mov
xchg
pop
insb
mov
movsb
jg
outsb
cmp
xchg
lret
lcall
xchg
out
shrl
sbbb
in
aad
or
sbb
test
pop
jecxz
sub
imul
xor
lret
insb
popa
cmp
pusha
add
in
mov
mov
outsl
fstp
and
inc
insb
inc
popa
shlb
jecxz
rcll
or
jl
push
fsubs
aas
shrl
cmp
lret
orb
scas
add
push
mov
xor
adc
lods
std
rclb
mov
cmp
ss
popf
insb
cmovl
and
sarl
inc
push
stos
stc
sti
jne
push
jp
jae
or
sub
jno
mov
arpl
add
dec
push
aam
insb
lods
xchg
test
mov
aad
andb
insb
cmp
sbb
push
test
insb
lret
stc
xchg
pop
push
mov
xchg
insb
push
out
std
fdivrs
popf
mov
sub
insb
sarb
inc
insb
adc
or
insb
nop
fisttps
rorl
cmp
movsb
inc
push
call
hlt
leave
add
inc
jnp
iret
jmp
sub
xor
lret
dec
icebp
int
in
push
ret
inc
fsubrl
sub
mov
xor
lods
addl
sahf
mov
dec
popa
lahf
xor
or
test
pop
test
mov
hlt
jae
inc
push
jnp
mov
inc
push
insb
inc
les
icebp
push
imul
dec
movsb
push
xor
fwait
inc
sub
jnp
ds
es
sub
insb
in
cmc
jp
adc
test
aad
push
and
movb
cmp
lcall
sbb
addr16
ja
inc
insb
push
lods
push
xchg
leave
jl
add
xchg
mov
xchg
mov
lods
sub
insb
pop
cmp
shll
or
rorl
outsb
sub
mov
xchg
sub
adc
add
ret
dec
loope
outsl
sub
jne
and
jl
imul
cmp
jo
je
pusha
insb
iret
data16
add
mov
hlt
mov
mov
repnz
std
jle
inc
mov
pop
or
fldcw
push
sti
jns
and
les
rolb
imul
dec
mov
insb
lock
cmp
push
icebp
lods
aam
fiadds
cs
jge
inc
inc
sub
adcl
add
adc
mov
cltd
lock
push
test
jmp
aam
inc
push
or
cmp
cmpsb
push
jo
pop
insb
sti
ret
repnz
jmp
jo
negb
shl
insb
lock
xorb
packuswb
adc
rclb
es
or
jp
stc
sbb
adc
xor
sbb
pop
jecxz
lods
cwtl
xor
fwait
push
mov
dec
les
pop
xor
mov
mov
les
rcrl
pop
adc
lret
push
fucomip
xchg
xor
push
hlt
js
pop
insb
lds
mov
cwtl
xor
pop
fsubrs
or
xchg
and
pop
cmc
cmp
cmp
pop
bound
ret
and
mov
push
fisubrs
jecxz
insb
les
ret
lods
fsubrs
ds
lret
cmp
push
xor
in
cmp
scas
sub
repz
leave
ficomps
lea
in
lock
iret
add
push
mov
push
gs
push
neg
dec
mov
lods
ljmp
jle
ja
dec
mov
jno
pop
or
lods
rclb
fsubrp
insb
lods
mov
xchg
mov
leave
jo
insb
xchg
gs
mov
js
insb
or
lret
insb
mov
jmp
insb
shrl
fdivp
adc
xor
xorl
insb
sub
cli
aad
mov
lds
loopne
enter
subb
scas
mov
and
gs
or
pushf
cli
dec
mov
mov
movsb
clc
pop
pop
xor
insb
dec
sbb
dec
adc
in
mov
or
sub
lods
or
xchg
cltd
imul
lds
imul
jl
xchg
icebp
xor
imul
adcb
jp
inc
or
insb
jns
scas
enter
in
stc
jg
sbb
stos
imul
mov
ds
enter
out
jecxz
jne
int3
pop
cmp
aaa
shrl
push
and
xor
cli
insb
mov
mov
dec
mov
cwtl
sbb
insb
mov
int3
iret
in
movsl
cmp
fcmovnu
lods
or
or
pop
mov
addr16
and
jle
sahf
sub
sbb
sahf
or
ljmp
pop
add
or
dec
loope
ljmp
fcomp
pop
cli
insb
jge
adc
shrb
les
cmpsb
in
push
and
lret
mov
in
hlt
xchg
mov
repz
or
imul
mov
mov
mov
mov
insb
and
insb
push
and
fmuls
mov
fscale
mov
dec
fsts
jecxz
ficompl
bound
or
pop
adcl
ja
iret
or
sub
pop
xchg
les
iret
jp
cwtl
out
mov
xchg
mov
test
fs
jle
pop
not
dec
mov
out
adc
pop
xor
sbb
xchg
pop
test
jbe
nop
insl
shl
call
lods
daa
mov
cmpsb
dec
icebp
push
loopne
mov
jo
fisubs
mov
bound
insb
stc
cmp
push
xchg
hlt
pop
adc
mov
imul
icebp
and
pushf
cmp
jmp
dec
aam
pop
lds
inc
hlt
mov
mov
mov
mov
sub
inc
and
out
flds
repnz
gs
test
dec
cmp
insb
sbb
mov
push
add
imul
test
dec
imul
insb
dec
and
icebp
push
insl
fidivrs
test
sti
xlat
outsl
jne
mov
push
scas
mov
lods
inc
lea
add
out
insb
mov
dec
pop
mov
push
cmpsb
sub
arpl
insb
mov
adc
scas
jbe
jnp
inc
ljmp
imul
sub
inc
rolb
jo
push
aaa
ret
subb
cld
cs
insb
adc
xor
fsubrl
push
jae
and
scas
xor
pop
stc
push
fstps
ja
sub
in
mov
pushf
pop
and
addr16
in
out
inc
mov
mov
jl
int
jl
ljmp
fs
imul
shll
sbb
ja
stos
imul
mov
jae
push
xor
imul
aam
lret
mov
push
dec
and
xchg
repnz
pusha
mov
jnp
insb
or
dec
and
imul
pushf
insb
shlb
jg
dec
sbb
punpckhbw
pop
fldt
lock
popa
jb
insb
xchg
xchg
stos
dec
cmc
rolb
mov
imul
iret
pop
xchg
lret
fisubs
cmpsl
fs
jle
add
push
das
sbb
je
insb
push
enter
or
fidivrs
mov
sub
nop
pop
jae
imul
ss
inc
mov
mov
insb
leave
lahf
in
sahf
xchg
and
sbb
pop
insb
sbb
std
into
jl
insb
loopne
and
xor
sub
mov
jl
addr16
adc
out
stos
stos
shlb
xor
adc
mov
fucomip
int
fs
iret
addr16
outsb
mov
push
xchg
mov
mov
jecxz
pop
imul
fs
jo
jbe
xchg
in
dec
xchg
jle
ljmp
cmpsb
in
test
pop
sbb
std
mov
mov
call
subb
dec
push
xlat
out
sbb
dec
jmp
cli
or
leave
sub
jecxz
xor
in
jae
divb
call
lea
cmc
fiaddl
adc
imul
hlt
sub
inc
insb
lahf
cmpsl
cmp
shlb
imul
mov
lea
sbb
sub
add
xchg
gs
es
sbb
pushf
inc
push
movsb
xlat
notb
call
jmp
push
insb
inc
imul
dec
popf
shrl
mov
test
stos
mov
pop
xchg
and
inc
pop
push
rclb
addl
sub
addr16
xor
push
jmp
dec
in
aas
outsb
add
cmp
push
mov
inc
dec
pop
inc
insb
in
mov
mov
xchg
mov
and
pshufw
orb
imul
pop
mov
mov
xchg
or
movsb
xor
inc
pop
aam
or
addr16
sub
ret
jns
hlt
mov
mov
jge
inc
mov
negb
cli
je
fs
rolb
push
push
mov
lock
inc
testb
pop
mov
mov
pop
mov
jmp
outsb
test
outsl
jle
loope
sbbl
iret
sub
clc
xchg
insb
dec
or
lahf
push
popa
sub
and
cltd
and
insb
cmp
movhlps
ror
insb
movsl
int3
subl
push
and
sbb
iret
mov
dec
xor
fwait
mov
jae
mov
xor
imul
insb
in
lea
inc
sbb
lods
xor
insb
pop
loopne
out
pop
adc
int3
pop
popa
std
dec
outsb
nop
push
fwait
insb
sahf
pop
sub
pop
testl
xchg
clc
sbbl
cmp
test
mov
dec
fmul
push
pop
insb
xchg
std
or
push
mov
sub
xchg
push
cs
out
in
clc
cmpsl
xorl
insb
repz
dec
js
out
insb
into
movsl
sbb
pop
fwait
lahf
insb
mov
pop
cmpsb
ffree
lea
xor
addr16
sahf
push
and
jl
enter
mov
insb
pop
sbb
add
inc
cli
cmp
imul
xchg
mov
insb
stos
adc
pusha
insb
cli
xchg
mov
xor
fisttps
lret
mov
out
testb
sti
sub
mov
adc
lods
movsl
sub
add
data16
dec
in
push
pop
cmp
add
push
add
dec
inc
add
jne
pop
xchg
ja
insb
std
add
out
mov
and
shl
addr16
jge
sub
cmp
lret
insb
std
addr16
ds
sub
inc
push
out
pusha
in
lret
aaa
dec
jg
insb
lret
and
sub
inc
push
pop
and
dec
adc
sub
mov
mov
mov
es
push
sub
xor
xchg
mov
das
insb
nop
xchg
mov
cmp
add
push
mov
sub
in
insb
xchg
inc
jecxz
mov
pop
mov
sub
call
imul
xchg
mov
and
pop
shrb
and
or
xchg
add
fldt
ret
call
icebp
xor
or
mov
cld
mov
bound
ret
insb
test
stc
mov
push
outsl
add
mov
pop
push
stos
loopne
or
insl
push
hlt
and
cmp
inc
out
xor
dec
cltd
xchg
sub
pop
rcrb
adc
xchg
sbb
pop
imul
rcrl
xchg
sbb
in
je
dec
andb
lea
lahf
adc
repz
mov
inc
das
insb
and
pop
mov
jmp
cmp
in
push
pushf
les
xchg
cmpsl
cmp
arpl
push
insb
nop
movsl
or
push
hlt
push
cmc
dec
add
dec
fisttps
push
mov
fdivl
lret
xor
cmp
call
cmpb
sahf
push
fmuls
insb
lret
jns
test
cmc
int3
movsb
jae
rorl
pop
lret
insb
sbb
xor
xor
insb
cmp
pop
pop
in
mov
pusha
and
insb
pop
fsubs
insb
mov
ljmp
dec
adc
pop
jp
pop
insb
data16
outsl
enter
adc
fsubrs
sbb
jmp
outsb
mov
das
or
call
and
fisubl
sub
mov
insb
or
fidivs
je
sti
xchg
pushf
xchg
jle
fdivl
mov
jae
and
mov
insb
aaa
lods
rclb
push
fs
adc
mov
push
insb
stc
or
push
insb
loop
cmp
repz
shrl
sub
mov
sbb
mov
add
jno
pop
inc
mov
push
jecxz
jns
jbe
adc
fsubrp
xor
mov
sub
jns
scas
iret
xor
jb
loope
lods
inc
fucomp
mov
cmc
mov
pop
imul
lcall
mov
cmp
jecxz
sub
clc
inc
stos
xor
in
mov
pop
and
cld
lret
xchg
mov
insb
jbe
in
xchg
out
inc
insb
ss
mov
add
push
inc
insb
ljmp
insb
and
bound
inc
inc
sarl
jp
insb
pop
cmp
mov
addb
xchg
pop
sub
sbb
movntps
pop
fs
dec
add
pop
out
mov
in
sbb
out
pusha
sbb
nop
hlt
mov
mov
jp
pop
lret
shll
and
push
adc
je
adc
clc
insb
mov
push
subl
ret
cmp
mov
jo
push
lret
shl
test
insb
xchg
sub
cs
dec
pop
loopne
jns
pop
cmp
imul
lock
imul
call
shll
orl
ret
pop
or
clc
cld
dec
mov
arpl
into
shll
mov
mov
pushf
cmpsl
dec
mov
dec
mov
test
push
jmp
in
pop
sar
fmulp
inc
stc
or
in
fs
xor
cs
loop
in
sahf
pop
ja
test
in
mov
mov
in
or
cmc
decl
aam
imul
fwait
mov
gs
jl
jae
adc
sub
add
sbb
gs
mov
jp
sbb
and
push
mov
adc
inc
pop
bound
mov
xchg
imul
lcall
jg
dec
dec
and
aas
pushf
in
insb
nop
leave
push
imul
push
les
or
enter
shll
insb
and
pop
xor
insb
fiadds
sub
bound
sbb
inc
push
inc
movsl
inc
mov
gs
insb
adc
aad
insb
movsl
add
mov
jne
shrl
jo
sub
js
int3
popf
pop
mov
fsubrs
mov
stos
imul
ficoml
shrb
insb
popf
mov
jl
insb
dec
sub
shrb
lods
insb
xchg
adc
inc
shrl
xor
jb
dec
fs
dec
fildl
fmuls
scas
bound
or
sbb
adc
mov
into
xchg
dec
inc
insb
mov
imul
aad
jp
enter
adc
or
rcll
jle
cmp
fcmovb
insb
sub
in
mov
fsts
insb
mov
and
insb
aad
mov
insb
sar
jns
jo
std
insb
int3
iret
mov
and
ficoml
push
daa
pop
sti
insb
jmp
push
mov
push
lods
jnp
mov
cld
pop
popa
imul
and
movsb
in
int3
ds
push
jno
testb
adc
insb
popa
add
mov
cmc
gs
push
bound
xchg
je
in
push
fidivrl
int3
sbb
ret
push
cmp
insb
xlat
insb
in
mov
lea
xlat
pop
sub
inc
les
dec
loope
in
test
mov
sub
jle
cwtl
push
ret
pop
ds
fs
int
pop
and
outsl
insb
xchg
mov
je
insb
mov
jne
jl
sub
insb
pop
and
mov
rclb
addr16
mov
shlb
inc
imul
pop
pop
popa
in
nop
sbb
mov
sbb
stos
hlt
inc
shll
cld
popa
inc
popf
add
das
sbb
mov
pop
and
stc
cld
xchg
lock
enter
in
popa
gs
aaa
bound
lods
mov
insb
rcr
inc
shlb
test
sbb
mov
lods
dec
cli
push
lahf
insb
jns
out
shlb
imul
loope
in
ds
loop
and
mov
push
sbb
or
pop
imul
sub
jle
push
shlb
test
mov
popf
or
mov
mov
mov
mov
mov
jmp
mov
shrl
shl
dec
in
cmc
inc
and
imul
sub
test
pop
inc
push
pop
lret
pop
jmp
repnz
fmuls
mov
jno
cltd
sbb
imul
cmc
imul
js
xor
pop
cld
push
xor
sti
mov
pop
loope
ret
fcmovnu
push
pop
sbb
loop
sarb
sti
out
push
insb
movsl
and
outsl
ss
insb
sub
sbb
popa
adcl
aam
roll
mov
push
sbb
jo
insb
add
test
repnz
xor
xlat
jmp
mov
shrb
insb
stos
sbb
cld
imul
pop
aam
lock
scas
mov
sahf
sti
add
gs
cltd
shl
inc
scas
gs
int3
rcrb
insb
das
or
cltd
push
imul
aas
jbe
jg
and
fcompl
mov
mov
lret
add
mov
lea
bound
lcall
cmc
fsubp
and
xor
testl
movsb
xor
fisubrs
jo
xor
icebp
repz
dec
jp
aad
cld
sbb
mov
rcl
dec
ja
jmp
int3
ljmp
xchg
mov
inc
arpl
hlt
cmp
adc
loopne
xor
sub
std
stos
cmp
addr16
pop
dec
scas
push
imulb
push
sub
cmpsl
push
sub
cmp
out
add
cmp
cmp
insb
test
push
out
cmpsl
jae
insb
mov
pusha
scas
mov
orb
and
imul
sahf
add
ror
push
popf
xor
stc
jmp
setl
dec
mov
test
fisubrl
inc
inc
pushf
hlt
popf
gs
nop
mov
mov
pop
imul
mov
imul
mov
jl
aam
daa
dec
leave
pop
in
xchg
or
int
mov
insb
js
mov
jl
shrl
lahf
mov
pop
xor
xchg
orb
jae
aam
insb
les
ja
sbbb
add
xchg
cmpsl
add
popa
xor
jecxz,pt
jno
int3
pop
mov
cwtl
fwait
add
pop
pop
xor
push
insb
push
aam
test
pop
or
cmpsb
push
push
aad
pop
gs
arpl
add
mov
test
jmp
push
movsb
jg
stc
mov
lock
insb
push
jge
and
je
js
pop
xor
or
insb
push
cli
std
inc
bound
divb
insb
adc
xchg
comiss
int3
leave
insb
jne
inc
arpl
or
jg
aas
js
leave
insb
nop
mov
add
insb
xchg
sub
bound
pop
inc
insb
cmp
into
xchg
jo
or
mov
data16
xchg
add
xchg
insb
sub
jl
nop
lahf
out
or
imul
inc
test
fwait
insb
adc
out
mov
int
xor
adc
insb
fadds
insl
jne
sub
insb
mov
in
adc
sub
pop
fs
les
je
push
jae
lock
pop
popa
out
add
bound
push
sti
mov
dec
pop
xor
lods
or
decb
mov
insb
xor
jl
out
rcll
xor
or
cmp
cmpsb
lock
mov
fisubs
add
bound
mov
mov
pushf
aam
adc
or
loopne
inc
icebp
sub
pusha
insb
dec
sbb
es
bound
pop
lods
cmpl
fstps
sbb
test
insb
sbb
sub
aam
push
in
sub
sbb
in
cmp
mov
ds
jp
insl
mov
sub
mov
ret
inc
fst
pop
insb
sahf
lcall
or
pop
mov
sub
add
mov
xor
out
insb
sti
and
adc
mov
fdivrs
jl
pusha
shrl
icebp
adc
imul
push
cmp
jae
lret
mov
dec
imul
pop
mov
push
arpl
movsb
sub
mov
les
daa
xchg
ret
push
cmc
insb
or
in
scas
in
and
sbb
xor
push
push
or
je
push
insb
out
imul
dec
mov
imul
mov
lret
leave
mov
jge
sbb
cvtpi2ps
in
add
mov
jl
insb
leave
sbb
sbb
dec
insb
adc
push
xlat
or
or
dec
adc
xchg
negb
xor
and
push
imul
insb
jo
xchg
mov
stc
movsl
inc
insb
ret
xchg
jae,pt
pop
or
out
pushf
insb
xlat
mov
dec
lahf
xchg
imulb
and
daa
jp
sub
scas
cmp
fxtract
jae
mov
filds
out
aam
pop
scas
jne
jo
aaa
outsb
fcmovbe
xor
insb
xchg
and
mov
xchg
imul
or
adc
cli
aad
popf
insb
aam
add
cld
pusha
std
insb
dec
fcoms
test
cs
jne
xchg
push
sti
mov
add
and
xor
jne
ja
sub
stc
es
cmp
lods
dec
arpl
sbb
push
std
les
jbe
and
pop
jl
add
add
or
shrb
cmp
mov
and
out
gs
cmp
mov
mov
popa
in
cwtl
sbb
ljmp
fisubrl
popf
addr16
push
jecxz
loope
jp
into
and
repz
add
xor
and
mov
insb
arpl
push
fisubl
mov
mov
adc
fs
xor
adc
mov
jle
imul
ret
pop
jmp
sub
es
pop
mov
clc
push
jbe
outsl
push
mov
cmp
xorl
mov
pop
pop
inc
gs
mov
insl
imul
leave
les
xor
jmp
or
dec
cwtl
movsl
jns
xorb
jb
filds
movsb
aad
insb
pop
pop
stos
cltd
jo
in
ja
fnstsw
out
jmp
decb
lock
test
xchg
insb
imulb
push
ss
mov
insb
xor
lahf
leave
dec
add
pop
in
popl
adc
xor
test
addr16
push
std
push
mov
pop
addr16
jmp
push
xchg
je
insb
rcr
add
arpl
addr16
and
mov
xor
push
stos
lret
movsb
lea
les
mov
stos
dec
repnz
mov
sub
jmp
into
push
stc
mov
leave
imul
mov
dec
out
push
cld
lret
rolb
sarl
push
insb
mov
int3
add
lahf
adc
aad
rolb
lods
mov
jecxz
mov
cwtl
ljmp
pop
cmp
inc
insb
adcb
xchg
insb
out
lods
ds
fdivl
mov
lcall
mov
dec
or
sbb
filds
xchg
repnz
sub
aam
push
in
cld
mulb
scas
lods
in
test
cmp
fisubs
loop
ret
push
cwtl
js
mov
orl
jne
push
test
add
arpl
jae
in
rclb
xor
enter
inc
addr16
popa
scas
and
and
pushf
clc
cmp
imul
testl
mov
pushw
jb
movsb
int3
out
fdivl
push
aas
imul
lret
dec
repz
or
mov
insb
and
mov
adc
arpl
sbb
std
scas
rolb
dec
jl
clc
addr16
cmpsl
pop
mov
or
shlb
nop
das
cmpsb
push
push
xchg
fisubrl
push
enter
imul
sarl
sbb
push
add
or
mov
insb
fcmovne
scas
idivl
hlt
stos
dec
andl
pcmpgtw
mov
mulb
loopne
jmp
adc
insb
mov
jae
xor
out
loopne
imul
lds
movsb
jecxz
in
sub
lods
insb
pop
inc
imul
mov
into
rcll
mov
daa
scas
inc
mov
pushf
ljmp
or
xchg
data16
insb
fisubrs
jnp
insb
pop
mov
enter
jge
test
adc
shlb
mov
std
mov
popf
jnp
insb
ret
je
movsl
insb
lds
mov
jb
lock
insb
cmpsb
xchg
cmpb
mov
divb
jb
ret
pop
rol
nop
push
mov
sbb
into
xor
es
mov
jae
mov
lock
faddl
lahf
fwait
pop
ds
and
pushf
adc
je
insb
cltd
adc
mov
dec
daa
arpl
call
insb
fwait
push
test
jl
pop
subb
cmp
push
into
ds
movsl
pop
cld
cmp
enter
mov
add
jo
in
scas
out
push
insb
in
scas
jmp
cmc
sti
insb
jle
les
xchg
dec
fwait
std
insb
xchg
mov
insb
add
push
sbb
das
cwtl
stos
inc
mov
fstpt
or
daa
fsubrs
sub
inc
mov
jp
inc
mov
decl
insb
gs
in
aam
aam
insb
test
pop
jge
clc
out
ret
sbb
aaa
push
push
and
arpl
es
out
pusha
sub
pop
xor
std
push
fldt
cmc
sub
loope
mov
rep
or
inc
aas
cmpsl
ja
arpl
neg
lock
xchg
rolb
xchg
imul
push
loopne
jbe
mov
xlat
loop
push
cmp
iret
jns
inc
xchg
outsl
or
push
aaa
insb
fimuls
sti
xor
es
mov
push
adc
lahf
in
fldcw
int
dec
mov
jp
hlt
push
sbb
call
dec
xlat
cli
outsb
fdivrs
jno
inc
push
imul
test
cmp
int3
mov
pop
pop
sbb
imulb
inc
lods
push
cwtl
sub
push
push
mov
jg
shrl
jecxz
pushf
jnp
cld
aad
insb
sub
movsb
xchg
xchg
inc
push
xor
mov
insb
in
in
push
xlat
lcall
imul
inc
insl
dec
dec
xor
insb
adc
push
cmpsb
aam
fcmovne
xchg
pop
push
shll
mov
test
insb
xorb
jne
int
insb
cmp
das
popf
test
insb
int3
out
xor
rorb
xor
insb
aam
xorb
or
mov
mov
pop
xchg
add
or
addl
insb
pop
in
xchg
dec
clc
or
pusha
adc
insb
mull
rcrb
mov
mov
mov
push
lret
ficomps
jle
in
mov
pop
inc
mov
mov
insb
scas
sbb
dec
xchg
push
pop
lods
xor
out
movb
and
lcall
out
scas
pop
insb
mov
stos
mov
xchg
inc
insb
test
inc
in
clc
cmc
push
lods
mov
cmp
hlt
fsubrs
je
in
leave
repnz
imulb
xchg
pop
jne
popf
sub
insl
aad
das
insb
inc
jo
or
insb
pop
xchg
mov
dec
popa
pushf
dec
sub
loope
mov
xor
cmpsl
xchg
mov
outsl
arpl
or
mov
leave
lods
xchg
push
out
pop
aad
cmp
jb
scas
cmpsb
in
xchg
aaa
insb
add
in
insb
out
xchg
dec
dec
sbb
cmp
js
jge
fcomp
cld
xor
shr
or
sbb
sbb
mov
adc
insb
into
test
lods
xorl
mov
out
xchg
push
fadds
dec
leave
xor
or
push
sbb
xchg
sbb
pop
push
dec
in
clc
cltd
call
fisubl
xchg
push
add
scas
mov
cmpsb
mov
rolb
push
aas
imul
aaa
inc
adc
xchg
jbe
nop
jl
xchg
pop
lods
je
inc
xchg
dec
gs
cli
leave
enter
mov
insb
mov
cmp
fs
imul
stos
push
pop
push
or
and
mov
push
imul
je
dec
insb
std
lock
mov
add
lret
mov
outsb
insb
jb
mov
mov
add
mov
pushf
stos
fsubr
mov
lahf
aam
jbe
pop
shrl
or
fildll
loope
pop
fadd
es
and
into
mov
cmp
insb
in
dec
aad
fcompl
imul
or
mov
fwait
cmp
in
push
and
mov
sbb
insb
test
jp
icebp
insb
pop
add
inc
dec
insb
pop
int3
repz
jb
pop
adc
xchg
cltd
lods
xor
add
lret
sbb
cld
dec
mov
push
cltd
cs
inc
mov
or
inc
fistpl
adc
insb
jnp
mov
mov
xchg
cld
testb
cwtl
xlat
stos
cmp
xchg
insb
push
xchg
pop
mov
inc
test
imul
pop
cmp
icebp
cmp
orl
sub
push
sbb
and
dec
insb
out
adc
stos
jns
iret
pop
cmp
icebp
outsl
jecxz
xor
roll
leave
jo
jbe
loopne
lods
popa
fdivs
and
push
movlhps
insb
cmpsb
push
popf
sbb
mov
in
mov
lods
mov
stos
sub
push
gs
js
or
dec
insb
enter
mov
adc
inc
push
mov
insb
mov
push
out
insb
jmp
jl
and
mov
push
sbb
inc
xchg
ss
or
cmp
out
cmp
les
and
in
add
lahf
imul
subl
icebp
push
dec
mov
test
push
cmc
mov
inc
les
sub
inc
cmp
xor
and
mov
stc
ljmp
in
repz
cmpb
imul
ret
xchg
xor
sub
mov
cmp
mov
dec
push
or
dec
out
jp
or
add
push
outsl
and
cmp
inc
in
xor
fs
mov
mov
insb
inc
push
cmp
xor
subl
mov
addr16
shlb
je
adc
xchg
sbbl
lods
jo
scas
out
insb
push
pmaxsw
std
cmp
cld
pop
mov
arpl
jns
dec
call
pushf
shll
lret
fsubl
inc
xchg
clc
rep
enter
mov
cld
dec
int
add
dec
add
sbb
jle
nop
sbb
adc
insb
add
andl
sbb
insb
lahf
jb
movups
popa
mov
subl
arpl
xor
jg
mov
js
pop
sahf
mov
dec
sahf
jns
pop
push
jo
inc
gs
cmp
out
movsl
push
mov
stos
jmp
outsl
in
inc
outsb
mov
add
sahf
lahf
insb
xchg
add
pop
sti
push
mov
shl
xor
insb
mov
sbb
fnsave
insb
mov
or
insb
sub
stos
dec
sahf
fildll
inc
icebp
in
jl
ja
movsb
jo
push
rol
mov
inc
push
imull
mov
iret
insb
pop
test
cld
sub
sbb
repnz
fcmovnu
testb
pushf
lock
jle
insb
ljmp
cmpsl
lock
xlat
adc
sbb
insb
fwait
aaa
leave
mov
inc
fsubrp
jge
fistl
jle
lds
dec
dec
adcb
insb
fimull
mov
movsl
cmp
pop
pop
int
inc
add
pop
xor
cmp
bound
imul
in
xor
push
mov
int
jnp
cmp
mov
push
movsb
out
stc
insb
and
mov
test
or
cmpsb
imul
adc
leave
je
std
insb
mov
adc
xor
sbb
cs
ljmp
mov
insb
mov
sub
add
and
in
leave
fmull
pop
push
cmp
addb
and
cmp
add
mov
rcrb
lret
fcoml
push
dec
pop
fldt
inc
xor
xor
and
add
adc
ljmp
jae
aam
ds
pop
imul
jmp
fldcw
imul
ds
lahf
dec
imul
mov
xor
jge
shr
and
ss
pop
jl
fsts
and
rcrl
xor
insb
fdivrs
test
jnp
aad
mov
cmp
or
jno
movsb
xchg
insb
loop
aaa
pusha
dec
repnz
mov
push
fcomps
outsb
or
mov
out
subb
push
xor
jb
and
data16
insb
and
icebp
or
sbb
ret
addr16
into
dec
mov
xorb
fwait
jp
dec
clc
insb
jae
jmp
push
xchg
mov
insb
clc
sub
and
insb
imul
add
xchg
mov
mov
fsts
insb
xchg
xchg
mov
push
jb
popl
lods
push
mov
icebp
or
ret
and
insb
add
mov
les
iret
cli
xchg
outsb
mov
js
jl
mov
cs
push
inc
sub
sbb
push
push
sbb
repnz
insb
clc
lods
inc
jae
pop
insl
lcall
mov
push
cmp
cs
fldenv
push
insb
or
ljmp
jae
lods
mov
enter
xor
sbb
jle
adc
mov
insb
mov
xlat
inc
sarb
ljmp
sbb
mov
lcall
push
mov
insb
in
fcomi
fsubs
sub
imulb
jae
test
insb
notl
in
bound
sub
sub
test
jle
cmp
clc
mov
pop
gs
jae
lds
or
inc
shl
xlat
outsl
insb
xchg
dec
sahf
ret
or
imul
xor
cld
insb
push
in
fstps
sub
xchg
dec
adcb
out
cmpsl
mov
xor
les
cmp
jge
mov
in
stos
ret
adc
insb
inc
loope
cmp
mov
insb
and
push
sub
pop
add
push
out
in
dec
std
int3
cmp
jo
insb
xlat
loope
fdivs
jge
or
jp
mov
and
and
icebp
dec
sbb
sbb
add
insb
pop
in
ja
jmp
xchg
jo
fwait
clc
dec
xlat
push
push
mov
insb
call
repz
cltd
jb
in
test
in
push
inc
mov
lods
sbb
outsl
pop
jne
mov
dec
cmpsl
insl
fwait
popa
stc
dec
gs
sub
sbb
pushf
aaa
mov
cmp
mov
and
call
dec
jnp
push
inc
insb
stc
pushf
sbb
in
xor
xchg
es
push
test
stos
popf
lods
mov
lods
or
int3
sahf
outsl
int
loope
mov
je
dec
dec
out
imul
insb
mov
bound
adc
sub
mov
cmp
adc
push
mov
or
popa
test
jns
scas
ret
andb
add
aaa
mov
insb
stc
mov
in
insb
xchg
mov
subb
fdivr
imul
insb
mov
mov
mov
js
insb
or
xchg
jge
jo
call
aaa
lock
insb
testb
dec
inc
xor
jno
sbb
outsl
pusha
push
insb
mov
pop
repz
and
imul
add
fisubs
mov
aad
popf
imul
cs
push
or
outsb
xchg
sub
sbb
xchg
insb
sub
inc
js
dec
insb
push
xor
pop
imul
aas
insb
jae
lret
adc
testl
mov
gs
xor
pop
pop
sub
pop
xchg
sub
stc
stos
insb
adc
ljmp
mov
sbb
cmpsb
dec
jb
in
adc
out
insb
in
xor
dec
or
jb
mov
loop
push
cmpsb
xchg
sub
jo
inc
insb
jecxz
jae
cld
fld
insb
add
inc
push
loopne
jg
pop
xchg
out
in
out
int
or
push
cltd
jno
bound
fwait
out
jnp
insb
cmp
sub
outsl
scas
in
inc
add
inc
mov
jle
clc
lock
or
daa
dec
jge
insb
inc
xor
js
mov
jns
es
ss
les
inc
fdivrl
adcb
xchg
jns
sub
imul
rcr
icebp
ret
ja
xchg
rcll
outsb
pop
jae
adc
jmp
fwait
mov
add
push
gs
leave
jmp
inc
mov
jl
pop
insb
ljmp
stos
insb
in
and
cmp
inc
mov
roll
lcall
sbb
loop
out
add
adc
mov
stc
cmp
into
inc
lods
jbe
xor
test
xchg
arpl
leave
dec
out
andl
mov
xor
shr
int
mov
fisubrl
imul
inc
push
lea
or
stc
insb
push
xor
pop
shrl
leave
mov
testb
sbb
jmp
push
push
mov
insl
jg
inc
loop
repnz
test
js
and
imul
lea
mov
add
cmp
jl
or
rcrb
out
icebp
mov
jo
pop
adcb
lcall
mov
adc
adc
lea
jecxz
mov
mov
insb
sub
push
mov
imul
jne
mov
cwtl
icebp
mov
fstps
mov
jecxz
inc
and
sbb
ja
xor
cmc
imul
xor
sbb
sub
sahf
movsb
aaa
xchg
insb
into
jg
jl
xor
aas
sub
fsubrp
insb
pop
inc
mov
outsl
push
movsb
insb
mov
out
fiaddl
ret
loop
not
and
xchg
pop
and
dec
pop
push
xor
mov
insb
cmp
add
outsb
shrl
cmpsb
test
pop
xlat
xchg
or
cmp
fsubs
lcall
sub
pop
imul
dec
add
cmc
test
cmp
gs
and
cmpb
pop
cmpsb
mov
mov
adc
les
in
mov
cld
adc
clc
insb
repz
test
arpl
pop
je
in
insb
movsl
mov
jb
popa
daa
mov
cmp
mov
jo
enter
sar
add
ret
insb
and
imul
cmpsl
push
rep
sbb
ret
mov
repnz
pop
sub
xchg
dec
xchg
in
hlt
icebp
jno
xchg
adc
and
xor
jg
lahf
insb
sbb
push
aad
divb
imul
fnstenv
cs
pop
in
leave
into
scas
mov
insb
imul
or
pop
xor
ret
xchg
xchg
in
test
addr16
das
xor
es
iret
xor
rorb
ljmp
repz
mov
cmp
dec
les
push
outsb
xor
ret
jb
repnz
and
add
outsl
test
xor
out
ret
insb
pop
pusha
pop
pop
and
adc
pop
int3
fidivrl
xchg
stos
add
icebp
outsl
insb
es
add
sub
aas
dec
or
aad
data16
adc
and
loop
add
repnz
es
call
insb
fimuls
and
cltd
in
mov
imul
ret
dec
xor
popa
lret
imul
push
adc
ja
or
sbb
loope
mov
icebp
xor
pop
xor
lods
leave
jle
cmp
andl
and
shrl
shll
hlt
inc
cld
cld
jl
arpl
out
jmp
insb
sub
or
push
xchg
es
and
sub
adc
xlat
mov
gs
insb
mov
xchg
in
mov
jl
andb
xchg
lds
outsl
mov
sarl
insl
xor
insl
mov
add
js
pop
insb
jecxz
inc
sub
inc
mov
js
call
out
add
push
test
ror
mov
cmp
popa
adc
pop
cld
cmpsb
or
mov
insb
shr
sbb
xchg
mov
imul
jl
cmp
and
arpl
or
clc
sub
sbb
add
mov
out
push
push
adc
imul
lock
push
sbb
mov
out
ret
out
insb
lret
movsb
cmpb
outsb
test
repnz
sub
lret
insb
rolb
repz
mov
mov
ds
cmp
scas
cmpsb
and
outsl
insb
lahf
sbb
pushl
push
insb
adc
jmp
insb
mov
sbb
pop
add
sub
mov
push
mov
insb
out
or
push
sub
push
dec
jmp
insl
mov
or
cmp
or
adc
stos
loopne
ja
in
dec
sub
insl
add
out
mov
lods
mov
ret
popa
dec
and
out
pop
das
pop
pop
push
sbb
negl
inc
sbbl
jo
out
jge
das
mov
mov
push
mov
inc
pusha
or
loope
jb
lcall
fiaddl
jbe
push
loop
mov
testl
movsb
movsl
fs
jb
mov
lock
mov
sbbb
lret
test
mov
push
inc
ret
jmp
ret
xchg
pop
and
lret
dec
std
imul
pop
mov
dec
arpl
rcll
cmp
add
insb
jns
xor
jbe
mov
in
fdivrl
mov
jo
int3
fwait
mov
sbb
roll
or
sbb
sub
cmp
xchg
or
movsl
add
mov
jge
push
and
lods
sbb
outsl
scas
fdivs
repnz
push
ret
ja
dec
push
shlb
cmp
insl
test
dec
pop
test
or
cmp
sub
jo
dec
inc
xchg
stos
bound
scas
dec
dec
ret
test
xor
dec
loop
insb
mov
out
and
dec
loope
inc
cmp
mov
adc
xor
mov
mov
pop
mov
gs
cmp
in
mov
out
cmp
mov
push
mov
dec
or
imul
sar
aaa
call
imul
pushf
rorb
test
cmp
mov
loopne
in
call
cmp
pop
add
push
aad
insb
divl
fst
xchg
jle
rcr
xor
gs
mov
ret
insb
dec
dec
jg
movsb
dec
lea
into
lods
or
push
insb
push
je
shl
fdivrl
push
dec
leave
add
stos
jne
and
int
movsb
jo
dec
push
insb
inc
pop
mov
sti
push
mov
scas
push
dec
jns
fisubrs
mov
ja
pop
dec
push
push
stos
out
outsb
and
jbe
sahf
push
dec
rcrb
cmp
call
test
data16
pop
loopne
cmp
mov
arpl
cmc
inc
test
and
xor
in
leave
mov
push
jmp
mov
lds
aas
jmp
fimull
sbb
dec
mov
fmull
push
jle
or
lock
sub
cmp
mov
imul
jp
mov
rolb
loope
outsl
sahf
xchg
push
test
imul
lock
xor
insb
ss
loope
adc
insb
push
sbb
xchg
jecxz
mov
cli
jmp
sbb
mov
pusha
cmp
popa
mov
fst
lods
inc
movsb
fs
pop
mov
ljmp
mov
nop
mov
mov
sti
mov
dec
test
xor
jg
push
lea
mov
sub
cmpsl
adc
insb
loope
mov
loop
insb
cmp
inc
add
jl
adc
in
jns
pushf
gs
out
sti
pop
ljmp
xchg
movsl
adc
xchg
mov
pushf
cs
jne
mov
mov
cld
lret
test
mov
mov
mov
out
fwait
sbb
bound
cld
std
insb
sbb
lods
or
insb
das
mov
push
jbe
ljmp
aas
pop
inc
test
insb
cmc
mov
pop
add
sub
cmp
out
shr
lahf
jl
insb
pop
enter
les
push
or
sub
jecxz
dec
jnp
cmc
and
mov
cmp
aam
jmp
push
loopne
pushf
jle
dec
xchg
insb
ja
jge
or
daa
aas
add
fistps
ljmp
outsl
and
xor
pop
int3
sub
cmp
insb
cmc
dec
hlt
xor
insb
lods
sub
into
jne
pop
insb
cs
imul
xor
mov
sub
in
sub
sti
pop
or
js
push
loopne
movsb
sub
mov
push
pop
xchg
sub
jl
out
insb
cmp
mov
sub
cmp
jl
insb
jmp
outsl
mov
insb
dec
enter
mov
and
addr16
inc
insb
adc
jno
sub
out
cmp
out
insb
ds
cmp
adc
push
dec
mulb
in
jnp
jae
adc
pop
insb
inc
mov
loopne
imul
xchg
mov
or
fldlg2
mov
and
aaa
push
sub
mov
sbb
jecxz
push
inc
push
loopne
scas
pop
outsb
sub
sub
outsl
mull
out
insb
jo
cmp
ret
insb
mov
call
insb
movsb
ss
xor
push
cmp
mov
daa
insb
mov
aas
sub
xchg
insb
cmp
lahf
ret
sub
stc
cmpsb
insb
xchg
cmp
mov
mov
dec
mov
mov
pop
xor
iret
popf
insb
movsb
mov
test
dec
push
cmp
clc
subb
js
jmp
xor
or
popl
orl
mov
dec
or
call
and
pop
dec
popa
push
aam
push
insb
jecxz
cltd
adc
add
insb
xchg
mov
xchg
jns
aaa
pop
fcoml
dec
or
add
sarb
sub
push
add
enter
imul
jbe
or
and
or
in
jg
pop
mov
push
cmpsb
loope
pop
dec
dec
sub
xchg
pop
repnz
insb
int3
stc
ds
out
shl
aaa
mov
push
mov
sub
and
aam
insb
ss
sbb
into
mov
test
insb
fsubp
das
lods
imul
adc
jecxz
add
jl
xchg
mov
orb
push
mov
scas
insb
mov
jnp
in
insb
add
pop
cli
call
push
shl
pop
jle
sub
leave
lods
insb
aad
enter
loop
xchg
sbb
jns
dec
clc
mov
insb
iret
xor
mov
in
lods
movl
aas
sub
cmp
lods
jecxz
or
sub
push
mov
ss
outsb
dec
pop
mov
jns
mov
insb
iret
int3
cld
adc
arpl
push
mov
insb
test
jmp
imul
push
sbb
adc
mov
stos
aas
mov
insb
andl
int
sub
add
pop
insb
stos
jl
pop
cli
sbb
inc
jge,pt
inc
lahf
in
loopne
jmp
sbb
cmp
addr16
insb
xor
ljmp
and
sbb
push
cmpsl
in
lods
iretw
mov
imul
add
jbe
xor
jae
loopne
xchg
and
cltd
mov
lds
out
andl
xchg
push
jne
mov
mov
lcall
pop
cs
mov
push
mov
cmp
imulb
loopne
sub
sysenter
insb
add
cmpsl
loop
in
push
mull
ss
mov
sbb
js
aas
outsb
fstpl
xor
insb
imulb
sbb
cs
mov
xchg
add
test
ds
aad
xor
sbbl
xchg
pop
clc
push
les
mov
inc
add
and
in
dec
pop
scas
and
mov
insb
pusha
mov
or
cmpsl
mov
sub
insb
mov
loop
cld
and
xchg
insb
mov
or
in
mov
add
mov
pop
dec
fcoms
sar
aam
rcrb
insb
jp
adc
inc
inc
fsub
mov
dec
push
pop
popa
and
repz
jp
dec
daa
push
dec
arpl
insb
in
inc
ljmp
mov
jne
push
xor
ret
insb
sahf
pop
nop
sub
loope
or
mov
lods
sbb
test
inc
insb
sahf
dec
test
insb
or
repnz
test
mov
scas
mov
leave
jns
ss
or
inc
aas
cmp
lret
imul
sbb
ds
call
push
sub
mov
insb
jp
cwtl
nop
fcmovnbe
and
imul
xchg
dec
outsl
les
mov
dec
sbb
adc
and
les
fisubl
sub
xor
inc
insb
jmp
loop
mov
mov
add
insb
mulb
mov
insb
xchg
mov
or
insb
push
jno
mov
pop
xchg
imul
pop
add
aam
lret
jb
inc
pop
sahf
sub
lahf
inc
xor
in
in
test
xchg
bound
xor
mov
push
cli
mov
adc
sub
xchg
insb
dec
lret
pop
testb
cwtl
sti
insb
add
push
push
test
cmpl
in
imul
cmp
adc
jl
pop
insb
xorl
hlt
lea
cli
inc
push
insb
sbb
imul
add
test
lock
push
loopne
in
mov
sub
xor
pop
sub
ror
stos
insl
jl
js
rorb
fmuls
mov
push
lret
mov
xchg
clc
add
outsb
out
cmp
pop
mov
sti
je
insb
adc
ficomps
insb
add
xchg
and
aad
sub
gs
insb
stos
sbb
out
bound
pusha
test
mov
fmull
insb
pop
or
sbb
movsb
fwait
and
fsub
add
inc
inc
mov
mov
daa
in
mov
mov
mov
jge
aam
jnp
jl
mov
push
test
insb
sbb
into
push
dec
push
frstor
insb
movsl
and
insb
clc
inc
or
xchg
insb
fidivrl
rcrb
add
mov
fstps
imul
sub
push
jb
clc
jne
imul
cmpsl
cwtl
fisubrl
pop
insb
and
mov
mov
cli
ja
push
pop
shrb
aas
rcrl
xchg
imul
in
sbbl
xor
pop
mov
pushf
mov
loopne
xor
jns
or
js
lret
adc
cmp
cld
xchg
push
clc
add
gs
insb
in
addr16
loopne
adc
inc
or
xlat
cwtl
pop
lods
insb
or
jnp
fdivs
data16
decl
xor
pop
xchg
mov
mov
jge
stc
sahf
mov
jns
jmp
orb
add
in
mov
insb
popf
leave
inc
imul
test
sub
scas
adc
dec
dec
xor
jl
insb
and
fldln2
pop
scas
les
in
scas
mov
push
push
mov
sub
insb
in
xor
jns
repz
ss
repz
movsb
int3
mov
mov
xchg
adc
mov
sbb
out
shrb
pop
loop
scas
xchg
push
imul
push
subb
xchg
out
scas
dec
insb
cmp
push
adc
insb
inc
fidivl
xchg
and
int3
jbe
push
scas
in
and
outsl
push
insb
mov
sub
xor
lahf
rcrb
cmp
inc
movnti
insb
push
push
insl
push
hlt
aam
sub
add
mov
sub
dec
pop
jns
xor
jo
jmp
rol
mov
jae
icebp
test
insb
ret
or
add
cmp
cmp
xor
add
sub
xchg
add
insb
pop
adcb
push
lods
adc
cmp
daa
mov
insb
xor
int3
mov
insb
lret
cmp
insb
push
mov
xchg
ss
insb
mov
lods
adc
aam
insb
push
xor
jg
or
shrb
xchg
xor
jnp
lahf
ja
adc
aas
insb
pop
data16
jecxz
fbld
jge
imul
ret
in
pusha
push
xchg
sub
xchg
insb
sti
loope
jno
sbb
popa
iret
aad
jl
imul
push
ret
dec
insb
cmp
dec
lods
in
inc
shrl
jle
testl
push
lock
shr
mov
je
and
add
cmp
clc
pop
cmp
mov
cltd
cmc
mov
xchg
xor
mov
sahf
test
cmp
insb
lcall
xchg
cmc
push
pop
arpl
bound
xor
pop
pop
gs
xchg
aaa
test
insb
adc
dec
popf
xor
push
fldt
mov
lea
jg
mov
inc
xorb
les
insb
inc
divl
in
push
mov
dec
dec
pop
inc
insl
xor
jnp
mov
xchg
fcomps
mov
dec
lds
aam
mov
and
das
mov
push
insb
xchg
cmp
in
mov
aad
in
shrb
or
aaa
insb
push
and
enter
lahf
cmp
insb
cmp
mov
pushf
call
lds
shrb
sbb
xchg
mov
insb
int
mov
into
insb
ficompl
mov
out
clc
add
mov
cmp
dec
loopne
aas
iret
push
cwtl
mov
jg
stc
lds
bnd
adc
insb
xor
xor
imul
xchg
data16
scas
cwtl
cld
cli
imul
stos
insl
cld
cmp
cs
jg
sti
out
stos
scas
out
int
push
sbb
push
lods
push
lcall
pop
mov
insb
sub
imul
iret
insb
sub
xor
mov
mov
loop
cmpsl
lods
out
or
aaa
push
jecxz
cmp
and
imul
jbe
adc
push
pop
xor
in
into
pop
and
test
pop
insb
mov
or
es
lods
je
insb
imul
stc
std
cwtl
mov
loope
fcompl
or
jp
gs
in
icebp
cwtl
mov
insb
jne
js
dec
lods
cmc
andb
insb
sahf
jmp
push
test
push
jecxz
fcompl
mov
daa
loop
xor
hlt
xchg
cmp
mov
push
je
dec
es
faddl
mov
fucomip
or
loope
add
in
mov
fidivl
nop
mov
call
shl
jo
jmp
adcl
out
roll
adc
ds
pop
addl
cmp
sahf
jl
insb
cmp
adc
dec
insb
sub
ret
popf
and
dec
mov
jnp
inc
adc
fildll
fsubl
mov
cmp
enter
jno
fistl
scas
sbb
jecxz
imul
pop
hlt
imul
sub
dec
daa
pop
das
loopne
lahf
insb
test
je
insb
add
inc
in
leave
insb
stos
std
cld
aas
or
movsl
xchg
mov
js
fdivs
insb
sub
jg
insb
push
aad
and
pushf
mov
aas
mov
push
cmp
data16
lahf
imul
int3
inc
bound
insb
arpl
lods
xchg
mov
sub
jle
and
xor
outsb
int
cmpsb
pusha
lahf
scas
mov
add
jnp
mov
lock
push
shrl
gs
mov
imul
and
cmp
jae
shrb
in
cli
or
stc
mov
bound
subl
inc
insb
cltd
mov
es
mov
stos
aam
rclb
xchg
xchg
push
jo
jmp
push
loop
inc
sbb
fsubrl
xchg
inc
sbb
lock
mov
data16
aad
test
sbb
jne
aas
mov
dec
jmp
es
test
jnp
int
ret
mov
mov
ja
imul
rol
cmp
fs
adc
add
insb
cltd
jb
jecxz
xor
and
rolb
cmp
xchg
imul
mov
pop
aas
leave
test
aaa
push
lret
fs
push
jnp
sub
push
addb
dec
popa
addr16
fisubrl
mov
cmp
jno
xchg
sbb
jle
push
push
aam
jae
das
shrl
out
imul
jge
mov
imul
lock
lods
out
dec
or
subl
adc
cmp
pop
paddusb
rorb
sbb
mov
jecxz
in
add
fnstenv
arpl
scas
inc
cmp
push
jg
notl
lock
push
add
xchg
and
or
or
pop
jb
push
jg
in
js
pop
insb
xor
lea
mov
push
in
adc
and
and
xchg
insb
mov
bnd
fcmovne
mov
fldcw
dec
int
loopne
es
xlat
popa
or
or
insb
imul
jle
imul
mov
ljmp
outsl
mov
push
stos
test
jno
stos
pop
call
mov
xlat
sahf
popf
insb
push
insl
jg
inc
adc
loope
xchg
sbb
insb
xchg
mov
mov
imul
in
push
xchg
insb
aam
push
or
out
pop
lods
outsb
out
jg
pop
xor
dec
in
xchg
aaa
push
aas
add
xchg
sub
jge
pusha
adc
and
pop
insl
push
lods
cs
dec
adc
dec
xchg
sarb
mov
cmp
mov
fdiv
mov
pop
stos
fisubrs
popa
repnz
pop
cmp
sub
mov
inc
arpl
inc
fstpl
jle
cmc
insb
cmp
or
lods
int
mov
insb
fsts
cmpsl
out
mov
ds
xchg
imul
sbb
or
lds
inc
jne
mov
js
mov
mov
inc
nop
dec
mov
jb
insb
mov
clc
and
insb
dec
call
xchg
push
push
mov
mov
cmpsb
or
push
mov
jmp
lea
idiv
insb
aaa
adc
xlat
insb
fsubrs
xor
imul
or
add
dec
and
jmp
loopne
outsl
or
lcall
shl
lea
imul
test
data16
push
pop
icebp
rcrl
stc
js
or
xchg
mov
shrb
insb
pop
cmc
leave
sbb
clc
lahf
inc
sti
shrl
mov
xlat
push
mov
add
lahf
mov
je
insb
cs
sub
pop
jbe
insb
iret
push
pop
lock
aam
insb
jmp
sub
inc
inc
in
insb
rol
dec
divl
mov
pop
aaa
imul
mov
lret
sub
cld
shrb
in
mov
push
jb
mov
add
inc
xor
sahf
mov
orb
int3
dec
dec
mov
in
fisttpll
inc
aam
adc
mov
in
add
jo
ljmp
idivl
cmp
mov
sbb
adc
pop
in
cmpsb
jb
insb
mov
test
gs
es
inc
pop
outsl
add
push
xorb
or
inc
mov
gs
and
aad
mov
in
stos
testb
data16
dec
pop
sahf
ds
lods
push
xor
subb
in
loopne
pop
jle
insb
movsb
fiadds
repnz
and
sub
int3
shlb
ss
xor
push
xorl
gs
jp
dec
sub
fldlg2
scas
pop
test
mov
scas
push
out
mov
je
insb
fistps
mov
cmp
das
sbb
pusha
xchg
fs
outsl
inc
rcr
out
jnp
je
add
adc
mov
dec
mov
xchg
fs
nop
sub
push
sahf
insl
movsl
push
xlat
mov
and
push
loopne
cld
insb
xchg
add
pop
mov
inc
insb
ret
test
scas
in
imul
mov
repz
je
fldt
shl
ret
sub
push
xor
adc
mov
jb
cmpsb
sbbl
push
xor
scas
and
xchg
stos
xlat
in
inc
mov
in
aam
lock
test
insl
fcompl
int3
movsb
insb
aaa
dec
mov
adc
in
jmp
or
add
ds
pop
mov
jae
push
iret
cmp
scas
movsb
or
in
adc
jbe
sub
insb
nop
cld
int
xchg
add
mov
mov
mov
insb
cmp
jae
or
ljmp
pop
sbb
push
fldt
mov
lahf
insb
mov
xchg
mov
insb
sbb
mov
pusha
add
gs
out
adcl
lock
ficoml
adc
arpl
imulb
scas
pusha
stos
ret
stc
push
add
imul
aas
stos
lret
insb
test
pop
rcll
sub
mov
mov
and
push
pop
fwait
pop
add
lahf
jmp
add
dec
jne
sbb
dec
mov
xor
aam
and
lds
mov
popa
jb
xchg
ja
in
cmp
xor
lea
jmp
adc
adc
push
or
cmp
std
add
push
mov
fnstsw
imul
pop
jge
rcrb
push
outsl
movsb
insb
add
sub
popa
sahf
or
insb
jne
mov
insb
psllw
push
imul
push
sbb
loope
ss
and
or
sti
mov
insb
fiaddl
xor
add
xchg
mov
arpl
mov
iret
mov
xor
stos
daa
pop
cs
loop
pop
popa
mov
inc
popf
jae
inc
dec
lods
lret
mov
test
push
adc
pop
ljmp
movsb
cli
pop
xchg
or
hlt
scas
cs
in
pop
mov
dec
test
insb
xchg
fdivrs
mov
add
xor
pop
leave
cli
dec
jl
xchg
insb
cld
and
push
les
shr
lret
lea
mov
adcb
xchg
and
je
insb
mov
int3
dec
mov
call
sbb
xchg
insb
mov
pop
lret
dec
into
cs
lock
mov
sub
mov
cmp
sbb
adc
insb
pop
mov
test
and
push
xor
mov
sub
test
insb
lods
jb
jg
push
pop
insb
lcall
jno
sub
outsb
xchg
and
push
dec
scas
dec
xor
imul
sbb
pop
daa
cwtl
dec
subl
sub
lods
test
xor
mov
inc
test
push
shr
in
stc
iret
dec
push
or
dec
and
dec
movsb
jae
aas
push
xchg
iret
mov
mov
insb
imul
gs
out
divb
std
adc
mov
push
ja
lret
js
insb
xor
cld
int3
or
rcrl
loope
adc
ret
push
ljmp
xor
mov
and
loope
jmp
ret
fbld
add
pop
daa
insb
jo
imul
ret
enter
mov
ret
xchg
add
aas
mov
ja
fsub
push
test
int3
dec
pop
jle
xor
xor
xlat
fldt
cwtl
scas
imul
mov
nop
nop
mov
fstl
insb
mov
add
iret
insb
mov
jbe
stc
insb
call
mov
xchg
sub
jg
pop
shl
dec
insb
xor
lods
call
xchg
adc
cmp
pop
mov
jnp
lods
rol
test
insb
pushf
adc
aaa
pop
push
sahf
pop
fidivrl
cwtl
mov
das
popf
or
push
xor
push
lock
stos
mov
insb
pop
adc
insb
fnsave
ficoml
pop
gs
faddl
sub
je
xor
jns
in
in
stos
cmp
ja
insb
inc
mov
sub
loop
push
adc
icebp
mov
int
insb
adc
dec
sbb
add
je
add
sbb
outsb
pop
sub
push
jle
pushl
data16
rcl
cvttps2pi
and
fimull
test
insb
popf
jecxz
inc
xchg
lcall
fdivr
in
cwtl
aam
daa
and
mov
mov
fidivrs
or
inc
push
add
xchg
repz
jne
xor
ret
ds
mov
and
insb
cmp
mov
jnp
popa
out
aad
lods
aaa
cld
pop
int
jo
insb
adc
movsl
aam
xor
sbb
or
xchg
insb
imul
std
nop
int3
aad
insb
cmp
cmp
and
sbb
jge
les
xchg
push
mov
gs
or
pop
aam
lret
sbb
pushf
xchg
aaa
xchg
scas
je
push
insb
mov
xor
sbb
jnp
mov
mov
or
jns
out
insb
cltd
mov
push
imul
movsb
fbstp
in
mov
iret
out
add
fildl
lret
sub
add
hlt
std
pop
xchg
out
scas
lods
push
cmpsl
daa
mov
je
outsl
flds
int3
mov
push
and
in
xor
subl
mov
push
test
dec
mov
sbb
rcrl
ljmp
sub
adc
test
or
and
mov
pop
mov
jo
imul
add
dec
lock
mov
ret
push
add
pop
mov
dec
inc
adc
insb
adc
jb
dec
or
insb
inc
jecxz,pt
lret
push
stos
and
pop
or
notb
xor
das
in
or
hlt
dec
insb
and
cs
inc
xchg
jmp
mov
adc
mov
dec
ja
insb
push
insb
ret
fdivrl
subb
xchg
orl
cld
cmc
jg
lods
sti
sbbb
dec
insb
clc
mov
insb
cs
push
adc
jns
push
lret
sahf
repnz
push
ror
xor
xchg
jb
jno
in
adc
sub
insb
xor
xor
pop
int3
inc
test
pop
call
pusha
out
popa
rorb
shrb
mov
insb
push
data16
sbb
jge
in
out
sbb
lods
insl
push
or
sub
adc
pop
pop
test
rcrb
dec
outsb
push
test
out
test
mov
mov
fs
pop
dec
mov
xor
cmp
mov
gs
and
jmp
cmp
add
pop
dec
in
inc
push
into
mov
insl
sub
aad
popf
and
insb
or
mov
cltd
xor
push
lahf
test
sbb
lods
insb
pusha
add
and
jnp
popf
push
add
cli
into
insb
outsb
repz
gs
loope
insl
sbb
mov
repnz
inc
jnp
adcb
loop
sub
mov
xchg
stos
insl
test
icebp
ljmp
xorb
cs
pop
jae
ret
push
je
adc
and
mov
push
das
mov
dec
xor
jae
dec
dec
adc
xchg
call
push
jne
push
pop
sbb
pusha
stos
xchg
loopne
je
cmp
ja
shll
insl
pop
push
scas
test
sbb
enter
mov
inc
mov
add
xor
mov
insb
scas
cltd
push
dec
push
cmpsb
adc
mov
in
inc
mov
sbb
data16
int3
jle
loop
dec
bound
jecxz
negl
int3
pop
in
xchg
add
movsb
loope
sub
xlat
lea
jae
in
test
sbb
aam
fldcw
imul
and
xchg
jae
adc
fimull
popf
imul
mov
jecxz
add
les
js
xor
cld
adc
imul
xchg
dec
sbb
inc
iret
inc
or
in
and
mov
jl
pop
imulb
add
insb
pop
pop
out
mov
adc
les
mov
push
cld
das
xor
scas
aad
and
test
jmp
add
sahf
in
push
enter
xor
sub
sbb
inc
cmpsl
dec
adc
insb
hlt
jbe
std
pop
shll
pop
bound
rep
mov
pop
leave
or
dec
jns
dec
xchg
lcall
pop
fld
mov
cmp
insb
cmp
popf
inc
lret
insb
mov
call
lods
loope
mov
aam
xor
push
xchg
lods
xchg
push
mov
insb
pushf
add
rorl
fildll
aas
sti
dec
mov
add
loop
imul
inc
sub
adc
nop
jns
cli
aam
jge
out
lcall
imul
stos
mov
push
xor
in
push
or
into
sbb
xchg
jnp
call
jbe
in
aas
adc
imul
dec
out
sarl
inc
insb
mov
dec
mov
xchg
imul
dec
pop
pop
or
fisubs
jg
movaps
rolb
jns
dec
mov
enter
int3
dec
sbb
cmpsb
shlb
into
out
insb
xor
cmp
push
addl
jp
jno
fs
insb
lret
movsb
cmp
insb
mov
push
add
dec
insb
pop
mov
mov
pop
pushf
das
jo
add
push
jg
psllq
insb
lahf
incb
into
sub
lea
mov
push
aas
xorb
fisttpl
repz
mov
push
pop
jne
jno
pushl
xor
fldl
xchg
outsb
xor
enter
fadds
dec
push
mov
jae
out
icebp
sbb
insb
dec
pop
mov
orb
xchg
lods
pop
lods
mov
loop
insb
mov
cli
and
jl
insb
pop
add
cmc
fildll
push
and
sub
insb
rclb
mov
imul
push
add
sahf
cmp
adc
gs
sbb
out
decl
pop
fildl
outsb
mov
insb
add
sbb
fwait
insb
or
xchg
pop
dec
insb
and
daa
in
sub
das
dec
pop
add
aam
dec
addr16
repz
sub
cs
imul
inc
mov
aaa
imull
cmpsl
jne
mov
stos
pop
or
loop
subl
out
push
xor
test
push
addr16
mov
dec
lea
imul
xlat
insb
mov
sahf
xchg
push
push
stos
data16
inc
xchg
inc
push
jno
xor
nop
cmp
fs
gs
fistl
jecxz
test
les
fbld
testl
repnz
inc
std
sub
ja
insb
sbb
push
xchg
adc
pop
jl
adc
iret
popf
aad
and
cltd
sub
pop
stos
ss
xor
jo
subl
sub
lods
cwtl
cltd
and
and
fadd
xchg
cld
or
dec
popa
pop
pop
push
pop
lret
jbe
cmpsl
dec
roll
xor
ret
hlt
jle
mov
jno
sbb
or
mov
imul
subl
lret
sub
mov
insb
push
or
push
cltd
push
movsb
jecxz
and
popf
or
popa
cmp
sub
sub
pop
aas
pusha
fdivs
negl
mov
repnz
je
xor
das
mov
in
test
inc
shrb
scas
xchg
and
mov
insb
popa
inc
add
dec
jg
in
sub
ljmp
mov
mov
insb
sahf
test
push
mov
gs
std
lret
js
jno
ss
in
cmp
test
insl
xchg
push
mov
and
out
movsl
hlt
insb
stc
mov
js
pushf
push
xchg
insb
fwait
push
ds
inc
aam
insb
cmp
xor
pusha
popa
sub
mov
add
pop
adc
fdivrs
add
or
aam
adc
and
sub
call
movsb
inc
test
test
insl
vcvttps2dq
popf
pop
push
inc
lret
stc
cmp
and
add
jge
cmp
jnp
stc
pop
push
call
or
stos
jno
dec
sub
outsl
in
mov
xor
gs
mov
mov
cmpsb
shrl
dec
inc
push
icebp
test
cmp
imul
cld
movsl
dec
into
pop
insb
cmp
push
fstpt
insb
je
aad
movsl
mov
aaa
insb
mov
pop
push
insb
add
dec
pop
and
mov
in
push
mov
pop
int
ss
movsl
xor
pushf
insb
adcl
in
in
sub
pop
xorl
cs
movsb
xchg
outsb
inc
insb
push
hlt
in
mov
jo
in
cld
lods
cmp
bound
xchg
js
pushf
insb
inc
gs
sbb
cs
adc
xor
out
cli
neg
push
and
inc
mov
insb
rol
cmpsb
iret
insb
jbe
mov
out
pop
mov
popf
mov
push
insb
jnp
aas
mov
imul
sahf
add
daa
push
std
clc
mov
pop
jge
add
subb
mov
insb
test
hlt
mov
jo
insb
shl
xchg
mov
jo
pop
pop
sbb
lods
in
push
adcb
dec
push
daa
frstor
insb
fnstenv
mov
addr16
lods
mov
sbb
and
nop
shl
enter
add
dec
int3
mov
fistpl
fists
push
gs
mov
pop
lds
fidivs
push
insb
mov
pop
jne
sti
stos
insb
sti
test
cmp
mov
test
mov
insb
in
out
and
push
insb
adc
and
xchg
outsb
dec
xchg
pop
fucompp
out
insb
sbb
aas
inc
sub
sbb
mov
mov
int
inc
in
out
insb
mov
push
into
jp
sti
push
adc
fucomp
in
mov
add
stc
mov
popa
cmpsb
xor
in
xchg
out
add
pop
cld
arpl
jl
insb
jns
testb
ss
add
scas
data16
fs
mov
jecxz
xlat
imulb
sub
insb
inc
xor
outsl
adc
repnz
in
inc
fsubrs
fisubrs
rorl
imul
add
sbb
insb
jg
insl
outsb
pop
ljmp
mov
ja
and
adc
xorl
out
out
gs
pop
bound
or
sbb
xlat
pop
pop
out
xchg
sub
pop
jle
cli
or
stc
fnstsw
imul
movsb
inc
out
dec
dec
mov
push
out
push
insb
fmuls
nop
dec
scas
fisubrs
insb
mov
cli
js
inc
int3
xchg
imul
cmpsb
jno
adc
mov
jb
inc
imul
adc
clc
xchg
insb
xor
ret
sbb
xlat
adc
mov
scas
adc
ret
or
pusha
jecxz
int
xor
insb
lock
loop
sub
ds
or
xchg
pop
insb
jle
and
bound
nop
xlat
lods
scas
sti
xchg
jecxz
dec
xor
mov
xchg
ret
iret
insb
cltd
loope
add
mov
mov
daa
insb
ltr
mov
xor
mov
jno
jb
sbb
push
and
jbe
pop
mov
int3
pop
popf
mov
xlat
cs
insb
fdiv
dec
addr16
mov
sbb
in
out
add
insb
push
ret
dec
adc
jne
sarl
outsl
or
adc
and
jg
and
daa
gs
aaa
inc
gs
lods
jno
inc
sub
xchg
je
mov
insb
ss
mov
cltd
out
cmp
dec
insb
in
orl
mov
inc
mov
insb
and
cmpsl
ret
mov
pop
jge
xchg
or
xchg
sub
mov
push
pushf
mov
dec
aad
fstl
lds
push
mov
stc
jle
xor
fsts
imull
testl
inc
jg
repz
add
aad
jbe
xchg
push
aaa
or
cmp
pop
push
push
jne
push
test
jmp
out
mov
scas
fdivrs
es
pop
in
mov
or
mov
or
fisttpl
inc
int
cwtl
mov
sarl
sbb
out
addr16
xor
and
cmc
cmp
push
sub
test
and
pop
out
jecxz
pop
dec
or
inc
in
and
insb
or
xor
loopne
cld
test
jg
cld
pop
pop
dec
push
dec
or
mov
insb
clc
push
xchg
insb
cmp
jmp
push
mov
lock
inc
xchg
fildll
jl
lea
jbe
andl
mov
ret
jecxz
test
iret
mov
add
xchg
arpl
insb
pop
sbb
cmp
insb
sbb
out
or
subl
cs
fstpt
mov
loopne
test
call
xor
lds
adc
pop
mov
xchg
cmpsb
and
adc
push
lods
loope
dec
dec
and
shll
imul
aam
pop
movsl
gs
rcr
sbb
movsb
insb
cmp
push
lods
xlat
insb
or
cmpsl
rclb
push
mov
mov
mov
out
and
sub
sbb
xchg
jmp
insb
popa
sub
and
fsubs
jne
add
xchg
push
cmc
and
outsb
pop
adc
mov
cld
insb
pop
gs
dec
dec
and
xor
sbb
insb
and
jbe
test
sbb
insb
dec
inc
xchg
insl
lahf
mov
mov
adc
out
outsb
insb
je
inc
and
pop
in
lea
xchg
pop
sub
xchg
mov
scas
mov
lahf
icebp
pop
imul
add
out
mov
mov
push
gs
inc
jae
dec
sbbl
xchg
mov
aad
in
flds
arpl
mov
cld
lcall
cwtl
inc
mov
ljmp
cltd
dec
imul
aad
out
sbb
insb
xchg
out
in
jno
and
push
shll
pop
inc
dec
cmp
pusha
inc
subl
pushf
pop
gs
test
ljmp
push
mov
and
imul
rcl
sub
daa
stc
insb
out
jl
jns
sahf
int3
insb
loope
jge
popa
xlat
pop
cmp
arpl
mov
dec
sti
inc
fistps
mov
imulb
call
lock
dec
sub
insb
xor
mov
test
fisubl
adc
jno
xchg
ret
insb
imul
inc
xchg
insb
imul
insb
ss
sbb
fs
int3
pop
xchg
addb
adc
insb
jecxz
enter
es
sub
aad
addr16
inc
cmc
lods
xlat
dec
mull
or
mov
insb
lock
sub
std
mov
ljmp
cld
clc
ja
dec
scas
stc
add
and
ds
icebp
pusha
xchg
repnz
test
pop
add
or
push
fsubs
mov
mov
adc
jno
sti
jbe
ds
lock
fcoml
ffree
xor
add
insb
cmp
ret
cmp
insb
add
out
pop
inc
and
insb
pop
movsb
sarl
lods
outsb
insb
mov
push
out
rep
pusha
push
cmpsb
int3
push
pop
ret
or
in
xchg
aas
sub
xor
lahf
jmp
adc
fsubl
inc
in
int
bound
hlt
addr16
xchg
inc
pop
insb
test
sub
xorb
and
imul
test
pop
sub
call
cmp
insb
pop
pusha
clc
adc
sub
scas
aas
aam
xchg
ljmp
xor
inc
bound
xor
jge
push
ja
insb
notb
gs
js
dec
out
jg
stc
add
dec
inc
insb
mov
lods
cmp
insb
call
mov
insb
pusha
fstps
add
lret
mov
adc
clc
mov
fisubrs
push
insb
cmpsl
and
lret
jge
mov
cmp
punpcklbw
mov
xchg
insb
xor
xchg
jnp
insl
mov
sbb
imul
stc
imul
test
dec
inc
ljmp
mov
jecxz
add
rep
mov
bound
mov
in
int3
and
jl
mov
popf
insb
stos
inc
cmp
adc
insb
push
mov
push
ljmp
push
lahf
add
mov
fnsave
out
jge
push
adc
insb
xchg
cltd
out
sub
repnz
test
repnz
cmpsl
loop
mov
mov
loope
push
scas
add
insb
dec
pop
inc
fcomi
filds
pusha
addl
xchg
outsb
insb
int3
out
stos
push
cmp
or
lcall
jo
insb
sub
jnp
subb
fdivs
mov
lret
mov
and
je
insb
pop
push
or
insb
mov
in
inc
xchg
aas
push
cmpsl
lcall
fldcw
js
push
push
out
insb
mov
xor
insb
xchg
and
dec
aas
adc
xchg
and
stc
inc
insb
enter
fnstcw
add
stos
cmp
insb
loope
mov
sub
ret
imul
pushf
imulb
insb
xchg
icebp
dec
jo
mov
sub
les
xchg
inc
insb
or
cli
mov
jl
dec
out
mov
in
imul
out
add
lcall
sarl
xor
ficoml
or
push
pop
imul
dec
sbb
sub
insb
imul
pop
loope
jp
jecxz
sbb
idivl
ljmp
std
movsl
push
insb
xchg
mov
sarl
scas
sti
mov
push
stc
mov
insb
shr
repz
push
cmpsb
shll
sbb
pop
lcall
in
pop
pop
pop
fucom
lret
inc
dec
mov
popf
sbb
and
cld
dec
in
nop
pop
add
rclb
mov
fbstp
imul
pop
cmp
fsubrs
and
das
lret
loopne
insb
pop
data16
std
out
xchg
gs
dec
cltd
mov
dec
popf
adc
imul
test
push
and
int3
loop
xchg
insb
push
ret
add
andb
mov
fisubrl
pop
adc
fwait
test
out
shrb
push
mov
xchg
out
pop
cmp
jae
in
cltd
test
insb
jbe
or
inc
mov
adc
jmp
fwait
sti
cmp
dec
imul
lcall
push
push
mov
lcall
int
cwtl
mov
mov
lahf
in
fcoms
in
fidivs
dec
test
push
into
sub
insb
test
xlat
mov
inc
cmp
js
sbb
push
gs
cmpsb
cmp
adc
stos
icebp
in
xchg
or
mov
add
sbb
cmp
sbb
insb
pusha
jmp
mov
insb
xchg
add
mov
xor
test
pop
es
dec
movsl
insb
cmpsb
stos
sbb
insb
fstpt
jns
insb
jb
scas
scas
inc
sub
insb
lods
sub
lods
orl
sub
xor
imul
pop
repnz
insb
mov
jb
addr16
pop
leave
insb
sub
cmp
cmp
xchg
inc
add
pop
js
mov
push
add
into
pop
gs
xor
mov
addb
imul
dec
sbbl
pop
push
jmp
cmc
add
add
dec
jns
jl
inc
cmp
imul
mov
ss
jmp
pop
jns
adc
cmp
push
and
mov
sub
mov
dec
dec
add
cmp
test
and
cmpsl
cmp
inc
loop
push
je
into
ss
lds
popa
or
sbb
cmp
bnd
in
jecxz
jne
in
mov
inc
shrl
insb
push
fiadds
mov
addr16
cli
xor
sbb
fsubrs
xor
cli
int
outsl
cmc
cmp
sub
jo
xchg
sub
gs
cmp
jns
outsb
sub
cwtl
xor
mov
cmc
arpl
pushf
pop
mov
cmp
sbb
inc
insb
repnz
jle
insb
dec
cmp
int
sub
mov
imul
sarb
mov
xchg
aas
sbb
dec
xor
cmc
in
insl
xchg
jns
fildll
aad
xchg
stos
leave
lods
xchg
stos
or
sbbl
inc
pop
fidivl
insb
cltd
lock
test
lods
insb
inc
xchg
arpl
dec
test
dec
in
inc
jl
lret
jbe
jmp
iret
and
adc
add
enter
int
pop
cs
das
cmp
loop
jae
insb
pop
push
add
dec
pusha
xor
addr16
xchg
or
inc
dec
insb
xorb
push
imul
fists
jbe
imul
stos
aam
adc
loop
or
out
and
jl
insb
jle
popa
aas
mov
fcom
repnz
mov
cmp
pop
aas
xor
lods
mov
popa
mov
gs
pop
xor
xchg
cld
out
dec
je
ds
gs
xchg
push
insb
inc
xlat
pop
xor
lret
inc
cmp
jmp
cmp
and
iret
inc
shrl
add
sub
xor
aad
pop
adc
ds
pop
lods
insb
je,pt
xor
insb
fbstp
paddsw
lahf
insl
dec
insb
loopne
mov
inc
shrb
aad
push
bound
loopne
das
sbb
cmp
das
pop
lock
lods
mov
dec
xorl
lods
cwtl
mov
push
or
dec
in
mov
and
movsl
loopne
push
xlat
enter
and
imul
adc
and
xchg
sub
xlat
sub
push
mov
lods
push
xor
enter
jle
stos
cmpsl
push
xor
lcall
jmp
rcll
sar
mov
cmp
or
insb
cli
in
dec
in
fldl
xor
aas
sbb
subl
dec
stos
jno
das
mov
int
and
out
insb
sbb
sbb
insl
xchg
inc
mov
and
cwtl
inc
stos
cmp
mov
icebp
arpl
cli
adc
xorb
aaa
and
shrl
dec
addr16
push
in
lahf
lahf
jae
xor
outsb
jge
mov
pop
insb
lea
fsubl
fimuls
jmp
sub
sbb
insb
arpl
je
aas
push
add
enter
icebp
xchg
mov
pop
mov
or
lret
fsubrp
loopne
pop
outsl
insb
pop
inc
sahf
inc
or
clc
adc
push
mov
sbb
cld
fldt
insb
sahf
mov
loopne
mov
test
test
mov
or
pop
dec
inc
jb
insb
andb
nop
mov
xchg
popf
dec
adc
jecxz
out
pmuludq
aam
and
ds
out
mov
ds
mov
cli
push
xchg
and
imul
movsb
jb
mov
test
mov
and
enter
insb
pop
ja
cmc
clc
xor
insb
or
cmpsl
aam
subl
lods
jecxz
pop
xchg
sub
mov
scas
pop
mov
leave
insb
cwtl
fstl
and
push
push
xchg
sub
nop
loope
xlat
mov
faddl
sbb
push
outsb
xor
fdivrl
or
and
mov
bound
insl
insb
or
repnz
cli
leave
push
mov
insb
and
stos
aam
cmc
and
lcall
imul
repnz
out
pop
adc
pop
imul
inc
push
mov
mov
add
cmp
add
insb
bound
push
sub
ret
arpl
xor
lods
dec
arpl
out
xchg
sub
shrl
adc
or
push
andb
mov
rcrl
insb
push
cmp
push
scas
jo
push
in
xchg
mov
fwait
push
adc
loop
adc
xchg
or
insb
movsb
int
dec
push
pop
in
xor
je
push
inc
insb
and
jmp
shrb
push
ds
test
sbb
mov
pusha
adc
lods
xchg
xor
mov
dec
adc
outsl
gs
rcrl
loopne
mov
lods
push
lods
insb
out
jo
ja
inc
insb
and
dec
jl
push
mov
addb
pop
xor
pop
xor
insb
fisubl
mov
imul
movq
cmp
cmp
arpl
xor
aam
adc
dec
insb
cli
mov
xchg
adc
out
je
incb
gs
add
insb
jno
inc
addl
push
xchg
push
pusha
ficoms
leave
and
les
es
sarl
imul
cli
std
out
lcall
and
jae
roll
sbb
adc
push
or
fsubl
jmp
xor
cmp
and
jne
mov
pop
out
adc
xchg
in
enter
pop
aam
push
sti
sbb
movsbl
addl
gs
and
out
xor
dec
int
repz
roll
pop
jecxz
add
cli
and
into
cmp
in
gs
aad
adc
pushf
adc
rorb
inc
adc
cld
ucomiss
add
insb
leave
int3
imul
insb
ret
cmp
pop
insb
es
pop
nop
testl
cltd
out
add
mov
loop
add
push
adc
dec
pop
fisubl
pop
ret
push
call
mov
rep
insb
leave
pop
das
ret
insb
iret
and
inc
insb
in
int
mov
in
insb
leave
pop
mov
mov
orl
dec
inc
pop
pop
add
repnz
pop
orl
jecxz
inc
mov
jb
cmp
cmpsl
pop
pop
mov
stos
fimuls
fldt
mov
imul
mov
test
clc
xor
pop
fldenv
or
movsb
pop
jle
push
sahf
jecxz
fistps
jmp
inc
push
nop
bound
subl
fs
inc
cmp
push
sub
inc
jbe
jecxz
jns
pop
shrl
shlb
and
mov
or
loope
pop
aad
cmp
andl
popf
xor
les
loop
xchg
cli
test
sbb
lods
dec
push
insb
jae
lds
daa
adc
in
ficomps
push
xchg
mov
cltd
imul
add
xor
mov
fcomps
pop
imul
imul
pop
pop
imul
int3
lods
imul
adcl
mov
mov
ret
decl
negb
out
insb
pop
nop
and
dec
pop
cwtl
sub
fisubrs
adc
mov
pushf
fldenv
and
sti
push
aas
orl
mov
mov
jecxz
insb
add
jae
cmp
mov
fstpl
sub
cld
cli
xor
ret
jne
cmc
cmp
mov
push
and
insb
loop
cli
mov
or
jecxz
insb
cltd
rcl
aad
insb
data16
negl
stos
jnp
rep
dec
push
xchg
inc
add
adc
jae
nop
and
xchg
add
sub
insb
mov
pusha
pop
push
jl
rolb
mov
insb
push
pop
sub
int
insb
sbb
rclb
mov
aad
int3
pusha
incl
shrl
fs
mov
or
sbb
pop
das
scas
insb
xor
gs
adc
andb
mov
lret
or
gs
xchg
subl
shrb
dec
out
fidivs
insb
sub
mov
pop
pop
lret
cmp
dec
repz
inc
inc
je
sbb
stc
imul
fisubrs
cmp
psadbw
xbegin
pushf
xchg
in
in
push
or
push
mov
insb
dec
xchg
insb
push
icebp
imulb
dec
dec
ljmp
cmp
sbb
add
xor
das
add
es
xchg
add
icebp
inc
shr
jecxz
sti
push
imul
mov
insb
adc
loop
insb
sbb
jae
call
sbb
pushf
push
inc
xor
mov
jp
insb
mov
jle
cmp
inc
xchg
or
cmp
xor
cmc
in
sub
imul
cmp
sub
scas
add
sarl
push
fwait
pop
insb
fcom
stos
mov
xor
lods
in
mov
cmp
jbe
loop
sbb
xchg
push
shrb
sbb
mov
into
ja
js
push
dec
insb
or
mov
je
cli
mov
xchg
push
sbb
fisubrs
pop
addr16
inc
insb
ja
lcall
mov
cld
add
enter
sbb
aam
sti
imul
dec
iret
xor
pop
outsb
insb
test
arpl
insb
ss
cmp
or
sbb
cs
repnz
insb
push
mov
push
cltd
lea
jmp
std
pop
mov
imul
mov
test
sti
in
jg
or
es
js
xchg
mov
in
cltd
mov
dec
insb
sbb
cmp
mov
insb
data16
push
xor
jp
imul
daa
aam
xchg
test
cmp
ret
lea
inc
jle
and
insb
dec
cmp
nopl
mov
inc
insb
push
test
sbb
inc
je
add
jb
shrl
mov
imul
data16
pop
lods
out
or
faddl
scas
addr16
sbb
or
fwait
jge
dec
cmp
mov
bound
sbb
je
test
in
cwtl
in
cltd
mov
das
imul
movsb
loopne
ret
insb
lret
xor
es
mov
int3
hlt
int3
cmp
jbe
gs
and
jecxz
add
popa
mov
pop
xchg
pop
insb
ret
imull
xor
insb
add
scas
call
fisubs
jl
int3
movsl
sub
lods
daa
insb
loopne
pop
shrl
jecxz
insb
push
loop
jmp
insb
arpl
lret
mov
repnz
push
xorb
sbb
insb
inc
call
je
jb
dec
mov
mov
mov
inc
cmp
or
scas
xchg
aad
push
push
jo
test
sub
imulb
sbb
adc
ret
into
mov
mov
pop
adc
push
insb
sbb
std
mov
insb
int
cmp
push
sbb
hlt
loopne
imul
dec
jo
xchg
movsb
insl
and
insb
mov
push
daa
adc
das
pop
stc
test
sbb
aaa
lahf
out
adc
shrb
fs
jo
push
sub
fcoml
jmp
cmp
xor
out
pop
jno
loop
xchg
aam
inc
adc
sbb
mov
sbb
loop
xorb
jns
imulb
lcall
insl
or
jge
aaa
insb
xchg
dec
in
cli
adc
shl
mov
sbb
adc
imul
jl
clc
mov
shlb
addr16
push
fs
in
push
notb
push
fldenv
jmp
gs
pop
addr16
dec
das
lods
leave
call
les
sub
mov
das
call
push
and
mov
hlt
cmp
mov
imul
pop
fnstenv
and
jle
je
fsub
insb
xchg
fimull
inc
xor
push
pusha
fwait
gs
adc
mov
imul
testb
andl
xchg
sub
lret
mov
cmp
filds
lods
pop
insb
sahf
out
or
insb
add
jo
pusha
imul
lret
lret
mov
out
jmp
xor
loope
mov
icebp
mov
mov
out
les
mov
and
dec
insb
cli
movsl
and
xor
repnz
sbb
test
insb
sub
loop
push
inc
push
insl
xor
pop
imul
es
stos
mov
pop
jb
push
rorb
cmpl
xchg
push
cmp
insb
insl
lea
or
imul
inc
insb
adc
lret
mov
fs
mov
test
addr16
mov
xor
stc
aaa
mov
out
fsts
insb
std
stos
sub
mov
cli
rol
insb
out
testb
incl
pop
adc
into
cmpsb
int3
jb
jl
testl
jno
push
je
sub
aaa
jge
mov
lea
in
or
cld
jbe
div
fistl
in
sbb
mov
mov
test
pop
push
dec
jg
cmp
dec
insb
and
xchg
imul
je
add
inc
js
add
daa
mov
loop
fsubrl
insb
mov
cmp
cmc
gs
gs
push
stos
jp
and
xor
int3
pop
les
push
xor
stc
add
insb
and
inc
mov
insb
insl
pop
inc
push
popa
pushf
lea
dec
gs
mov
cmpsl
fdivl
iret
push
test
push
gs
roll
into
sahf
pushw
mov
lods
enter
or
sub
cmp
push
lods
imul
xchg
inc
xchg
pop
and
loop
in
lods
ret
sub
daa
pop
nop
inc
fldt
cmp
popf
push
adc
sub
in
mov
push
xor
jecxz
into
sub
mov
fsubrl
data16
xor
rclb
fxch
push
cmp
insb
outsb
sub
jp
inc
cmp
mov
testb
aas
insb
aaa
mov
addb
mov
call
sbb
in
inc
inc
add
cmp
and
insb
movsl
xor
mov
jnp
imul
mov
repz
push
and
mov
ss
outsl
arpl
or
mov
cmp
jle
push
loope
push
mov
stc
push
dec
push
mov
xor
lods
insb
enter
call
push
insb
pop
dec
pop
rcrb
pmulhw
mov
lds
lcall
or
loopne
fs
mul
in
inc
test
jnp,pn
imul
push
popa
out
jp
push
loope
sbbb
stos
and
jecxz
jp
pop
push
cmp
jg
xor
xor
aaa
sub
aas
imul
add
mov
jne
mov
stos
outsl
cmp
fmull
loope
jecxz
in
dec
movb
lea
call
xor
rorb
mov
jns
cmp
mov
enter
int
inc
xchg
jp
cmc
scas
sahf
pop
jns
ds
add
cwtl
push
and
push
or
js
aaa
sbb
mov
call
insl
sbb
shl
inc
incl
sbb
fistl
popa
rorb
sub
leave
mov
or
mov
lods
ljmp
les
mov
mov
sub
jecxz
sti
pop
in
rcr
mov
int3
xchg
jb
das
insb
mov
jg
arpl
ja
mov
int
adc
add
or
mov
insb
sahf
insl
sbb
ss
int
xor
leave
xchg
daa
and
insb
cwtl
mov
xchg
sub
sbb
gs
push
mov
jb
xchg
pop
das
jnp
shrl
and
sti
sub
iret
adc
mov
pop
xchg
std
mov
insb
and
call
insl
jbe
insb
roll
sbb
std
xor
dec
fsubrs
stos
pop
daa
jp
xor
call
dec
insb
jns
shl
and
subl
ret
push
mov
insl
xor
cmpsb
or
xchg
ja
adc
popf
insb
pop
mov
push
dec
insb
ljmp
test
xchg
lds
out
ficompl
negb
xor
inc
sub
clc
fsubrp
iret
das
loop
cltd
subb
insb
imul
add
insb
pop
mov
insb
mov
inc
cmp
push
les
shr
mov
dec
insb
gs
or
xchg
inc
insb
into
xchg
mov
cli
insb
dec
push
mov
mov
push
sbb
mov
int3
insb
xchg
xchg
xchg
loop
dec
inc
pop
push
addr16
or
adc
insb
movb
mov
imul
dec
cmp
sbb
add
xchg
push
insb
daa
jae
cmc
sub
lahf
jmp
pop
push
mov
lods
mov
pop
insb
push
in
popa
fldenv
cmp
mov
xchg
sbb
pop
mov
out
lret
insb
pop
cmp
add
stc
into
insb
cmc
xchg
pop
jnp
rcr
adc
es
pop
mov
dec
sbb
imul
inc
or
pminub
inc
dec
mov
leave
push
pop
cmp
cmp
pop
les
adc
es
adc
xchg
and
aam
loope
inc
dec
inc
fs
pushf
mov
mov
sahf
jecxz
lcall
and
shrb
cmp
sahf
dec
inc
and
loop
in
mov
push
jmp
andl
popa
xchg
sub
fs
out
jns
out
jmp
insl
mov
jecxz
pop
mov
xor
push
cmp
test
loop
shlb
cmp
jns
xor
inc
fstps
fdivrl
call
mov
mov
dec
negb
iret
ficompl
pop
and
shrb
cmc
cltd
xor
fistpl
push
lock
jo
mov
mov
xlat
mov
xchg
pop
shlb
shlb
lods
inc
ds
imul
push
sarl
insb
ljmp
pop
mov
push
xor
imul
test
int3
shlb
xor
lock
inc
pop
je
mov
popa
mov
gs
xchg
mov
in
jb
sbb
xchg
es
dec
fstl
imul
adc
sub
xchg
int
mov
out
lods
dec
cmp
insb
add
lcall
sti
jmp
cld
into
and
inc
dec
or
int3
lret
adc
push
or
fs
mov
call
mov
lods
insb
sub
and
jne
insb
inc
jge
push
mov
xchg
insb
mov
repnz
sub
xor
insb
scas
pop
and
std
and
lret
mov
mov
push
push
sbb
or
jp
shrl
popa
sahf
cmp
lahf
insb
je
sbb
repz
pop
out
sub
nop
xor
or
nopl
push
sub
rorb
sub
imul
dec
xchg
xchg
test
popf
or
adc
jl
mov
call
and
jle
xlat
mov
or
lcall
insl
fistpl
fildll
xchg
jne
inc
mov
jmp
call
cmpsb
lods
or
lret
data16
inc
add
mov
sbb
cmp
lahf
mov
sub
pushf
mov
insb
dec
shrb
inc
adc
dec
arpl
jno
mov
insb
xor
daa
push
and
fstps
insb
test
movl
jns
sub
pop
mov
testl
in
insb
ret
int3
aaa
pop
imul
and
sbb
ljmp
outsl
dec
movsb
sti
mov
hlt
and
mov
je
call
cld
lret
xchg
add
adc
out
xchg
insb
outsl
outsb
jle
mov
jno
insb
sbb
mov
pop
insb
lea
mov
insb
jl
push
std
lret
jnp
ljmp
outsl
xchg
clc
ds
fildll
mov
add
and
push
ret
stos
xchg
insl
cmp
jmp
fnsave
or
push
sub
aam
mov
insb
repnz
pop
sub
and
dec
push
cmpsl
data16
add
or
ret
push
jecxz
jo
inc
cmp
insb
jp
les
test
insb
arpl
test
negb
insb
jle
push
enter
dec
insb
jl
pop
jno
sahf
in
sub
repnz
rcrb
inc
pop
lret
mov
lods
addr16
into
sahf
pop
lods
mov
pop
enter
sbb
leave
or
outsl
jp
pushf
pop
pop
js
fisubl
mov
xlat
cmp
lret
sbb
pop
and
test
and
mov
cltd
mov
lods
inc
cmp
imull
stc
fstps
out
popf
xor
shr
cmp
mov
xchg
insb
mov
aas
inc
imul
jae
adc
push
dec
push
fsubrl
xor
inc
jle
clc
dec
imul
pop
into
mov
out
push
gs
cs
call
pop
adc
jl
xorl
jne
xchg
imul
and
mov
insb
mov
insl
sbb
mov
in
mov
sub
bound
cmp
imul
cltd
ds
xlat
gs
js
push
sub
push
mov
cmpsl
push
aam
insb
cmp
pop
ja
popa
insb
fimull
push
sbb
pop
inc
insb
add
sbb
and
jle
in
xchg
push
sti
xor
fcompl
fidivrs
jae
pop
insb
sbb
insb
add
fbstp
insb
sbbb
inc
insb
xor
lea
pop
shrl
adc
mov
sti
xchg
insb
test
add
lods
and
hlt
push
je
cmp
mov
shl
insb
sbb
enter
xchg
insb
cmpsl
sahf
sbb
mov
scas
cld
insb
mov
sbb
stos
insb
aas
push
xchg
ret
adc
insb
gs
dec
ret
mov
inc
insb
pop
xlat
pop
add
mov
imul
dec
xchg
cmp
xchg
fisubrs
fs
add
loop
inc
insb
stos
jg
mov
imul
aam
inc
push
jb
mov
in
outsb
xchg
mov
jns
jo
or
jo
popa
cmp
cs
jno
pop
sahf
enter
mov
pop
iret
cs
daa
inc
sbb
imul
outsl
sarb
lds
lock
movsb
loope,pt
mov
in
pop
xor
jbe
push
fdivr
fldenv
mov
hlt
test
imul
test
adc
shrb
nop
orl
sbb
mov
jae
shl
mov
test
cltd
int3
xlat
sub
lea
daa
aam
jecxz
cmp
sar
movsb
out
ds
fstl
pusha
in
adc
pop
and
fdivrl
in
inc
inc
in
pop
adc
dec
push
add
add
inc
push
mov
mov
std
aas
std
leave
fdivrs
minps
mov
scas
ds
imul
cwtl
and
out
jnp
stos
cmpsl
dec
fcmovnb
insb
popf
outsb
out
mov
insb
lock
rcr
add
call
sbb
inc
inc
mov
mov
jg
test
imul
insb
push
arpl
gs
repz
movsl
pop
sbb
loopne
mov
dec
xlat
in
adc
aam
xchg
mov
data16
sub
adc
cld
insb
inc
out
inc
outsb
inc
mov
inc
fs
js
mov
insb
xchg
sysret
das
xchg
enter
inc
push
mov
jle
insb
sbb
xchg
mov
imul
xor
daa
insb
repz
in
xchg
xor
xor
insb
dec
or
aaa
add
shrl
jle
aas
adc
jne
aam
cmp
push
adc
insb
jae
sub
sti
push
jmp
imul
lahf
sub
push
lcall
mov
insb
outsl
les
insb
mov
mov
rorb
cmp
dec
cltd
xlat
lods
sub
outsb
jmp
mov
cld
popf
insb
nop
xor
dec
or
stc
insb
mov
out
aaa
ret
push
adc
and
jl
rep
imul
test
adc
lods
daa
add
jne
and
outsl
mov
jno
fsubrl
popa
and
insb
decl
mov
or
es
lods
sub
mov
insb
sbb
xor
loope
mov
cmp
xchg
imul
pop
aas
insb
ja
dec
inc
pop
int3
negb
das
or
mov
xchg
cmc
cld
cmpsl
je
and
add
in
scas
jo
nop
dec
push
push
insb
jae
inc
psraw
sbb
add
jmp
lods
pushf
test
test
xchg
cli
insb
jecxz
lret
and
daa
mov
add
lds
mov
add
sbbl
dec
cli
push
sub
jmp
cmpsl
insb
bound
js
mov
sbb
popa
push
inc
fwait
jmp
sbb
adc
jno
pop
sub
lods
sub
insb
xchg
mov
sbb
sbb
inc
jp
movsl
mov
push
cmpsb
dec
mov
and
cmp
mov
mov
insb
mov
and
rorb
ret
in
jae
push
add
jns
nop
insb
sbb
xor
mov
outsl
xor
xor
fst
repz
mov
xchg
out
loop
enter
mov
outsl
and
sbb
xchg
mov
movsb
pushf
jae
insb
add
push
jnp
dec
push
insb
shlb
fsubrl
jne
mov
inc
push
js
mov
sub
nop
stos
pop
hlt
loopne
xchg
or
push
jmp
pop
mov
sbb
insb
inc
into
add
mov
fcompl
iret
jl
sbb
cld
jae
mov
push
fcomps
xor
push
lods
scas
aam
insl
insb
jle
jne
es
xchg
insb
dec
cs
lds
inc
adcl
ljmp
dec
dec
dec
andl
scas
sub
push
pop
or
out
inc
xchg
add
mov
mov
cld
mov
inc
mov
mov
insb
pop
add
jmp
lahf
xchg
insb
jo
movsl
lcall
jl
sbb
mov
aam
addr16
jno
cld
aaa
inc
mov
out
dec
andl
sub
aam
sbb
insb
test
ds
fsubrl
pop
xchg
push
fildll
dec
imul
jbe
dec
push
mov
sub
lahf
sub
gs
mov
xor
xorps
loope
cltd
lahf
lret
pop
dec
ss
outsl
fadds
repz
jge
cmp
sub
xchg
push
inc
push
insl
in
dec
lods
adc
repnz
mov
xor
movsb
into
adc
repz
pop
sarl
jmp
xchg
notl
fs
sub
mov
mov
jno
jns
iret
insb
nop
xor
movsb
dec
subl
or
jne
aad
jecxz
movsb
inc
mov
imul
mov
jmp
movsl
ds
std
mov
rcll
insb
dec
xchg
addr16
inc
inc
scas
imul
repnz
ds
insb
jmp
push
adc
push
jle
sub
xchg
call
idiv
orl
mov
cld
mov
aam
je
shrl
xchg
addl
fisttpll
bound
nop
hlt
cltd
xor
das
insb
addb
insb
shrb
jne
pop
pop
insb
pushf
xor
mov
push
xchg
xlat
jns
iret
fs
insb
and
adc
adc
nop
xchg
pop
cmp
jle
jb
xlat
jmp
mov
cmp
ja
mov
shl
inc
pop
pop
loopne
insb
icebp
mov
pop
loop
ds
fnstsw
dec
insb
xchg
mov
insb
cmp
inc
ja
mov
gs
scas
mov
jno
and
jmp
stos
mov
insb
mov
sub
cld
insb
add
pop
sbb
shlb
imul
jle
insb
in
inc
inc
push
adc
dec
and
add
inc
fwait
push
js
fimuls
loope
pop
cli
dec
mov
aaa
loop
xchg
rolb
insb
mov
lods
pop
pushf
dec
fistps
push
ret
aad
insb
out
jge
es
popa
jle
jl
xor
sti
lods
mov
pop
pushf
scas
pop
repnz
add
pusha
xor
xchg
xlat
insb
jo
frstor
stos
not
insb
mov
xchg
jae
or
scas
insb
adc
adc
rep
add
fisubrl
jle
inc
xor
add
or
in
dec
insb
stc
repz
cmp
fisubrl
jnp
jg
ret
fldcw
fs
scas
rolb
push
insb
stos
sbb
rcr
bound
and
aad
insb
mov
jmp
lcall
pop
into
lea
daa
fstl
out
int
gs
inc
or
mov
sub
xchg
fwait
push
push
xor
inc
insb
aas
inc
pop
ljmp
adc
pop
hlt
inc
ror
imul
decl
mov
pop
lahf
sub
cmp
sahf
imul
jae
sub
add
insb
xor
mov
and
sub
fxch
dec
inc
insb
or
xor
lret
mov
cmpsb
xchg
iret
cmpsl
fs
insb
fistl
gs
push
mov
rolb
jno
inc
xor
ljmp
test
insb
add
pop
xor
imul
pop
insb
push
inc
aam
mov
jl
dec
push
lods
iret
and
push
enter
repz
sbb
xor
and
insb
push
push
mov
add
or
loop
lea
in
into
rep
scas
mull
inc
xor
xchg
fsub
or
mov
pushf
dec
insb
ja
adc
nop
out
insb
push
add
ljmp
mov
test
cmc
jae
xchg
scas
jnp
xor
imul
inc
dec
shll
stc
scas
call
insb
cld
mov
mov
mov
out
repz
inc
rol
insb
dec
inc
test
imul
adc
sub
sbb
jl
insb
jmp
test
mov
sti
sub
cmp
xchg
es
jae
int
jp
sbb
insb
jnp
pop
mov
and
insb
std
add
xorb
mov
lods
insb
shrb
push
cltd
push
insb
sub
bound
cmp
pop
pusha
lock
aad
repz
inc
test
jmp
enter
push
xlat
xchg
xchg
sub
jb
jno
outsl
jmp
mov
out
jp
imul
inc
mov
push
inc
cmp
or
je
sub
aas
iret
adc
xchg
nop
cmp
jae
arpl
aaa
in
pop
pop
imul
movsl
in
je
sbb
xorl
cmp
insl
inc
and
xchg
ja
into
xchg
lods
call
les
push
insb
add
into
adc
mov
xchg
lret
mov
adc
and
add
int3
div
test
jae
mov
jnp
insb
insl
jbe
mov
imul
pop
cwtl
mov
insb
fcmovnu
fld
lret
leave
inc
subl
test
out
mov
jmp
leave
mov
out
or
mov
movsl
push
fimuls
arpl
testl
out
push
dec
loop
gs
insb
lret
dec
push
cmp
xchg
test
pop
jg
out
sbb
mov
mov
imul
inc
repnz
dec
push
pop
sub
arpl
jb
xor
insb
cld
cmp
pop
insb
shll
fisubrs
inc
sub
das
lcall
sub
loop
mov
jnp
cmpl
push
shlb
bound
cwtl
cmpsl
mov
icebp
inc
insb
cld
or
hlt
insb
dec
adc
imul
call
test
out
mov
es
mov
fstp
sub
test
mov
aaa
fbld
add
pop
iret
sarb
push
stos
xchg
push
loop
sarb
in
mov
inc
sti
in
add
sub
lock
insb
mov
aaa
dec
mov
inc
sub
xchg
sbb
mov
mov
or
daa
lods
mov
insb
rcr
xchg
inc
pop
pop
loop
gs
pushf
xor
dec
xchg
lcall
dec
dec
cmp
xchg
arpl
mov
pop
lret
cmp
ja
repz
scas
xor
imul
cwtl
jo
xchg
imul
jns
movsl
jbe
mov
das
mov
jnp
rcl
adc
cmp
popf
and
ficompl
in
cwtl
jnp
test
inc
mov
sbb
arpl
and
in
insb
jp
xchg
lods
adc
lahf
cmpsb
test
mov
push
popa
leave
insb
push
xchg
ret
jbe
cs
in
aam
jae
mov
shrl
jge
or
popa
sbb
in
inc
in
sub
mov
insb
and
adc
push
insb
data16
cmc
adc
mov
shrl
adc
fcompl
jecxz
stc
int3
fprem
adc
mov
mov
repnz
ljmp
and
cmp
cwtl
sarb
arpl
gs
scas
das
movsl
dec
jno
cld
push
addr16
and
cli
mov
xor
lret
gs
nop
pop
repnz
or
push
sub
cmc
sub
sbb
insb
dec
cmp
in
iret
stc
insb
addr16
and
cmp
mov
add
dec
jl
push
pop
aam
inc
mov
insb
pop
inc
daa
mov
mov
mov
cli
out
insb
mov
ja
pop
lods
or
or
enter
or
lret
or
pop
stos
jne
fildl
or
rclb
sub
dec
shrl
dec
xchg
aad
inc
xchg
dec
insl
ljmp
flds
inc
outsl
insb
shll
add
pop
jecxz
adc
out
mov
imul
or
into
mov
test
pop
insb
sub
je
mov
or
insb
repnz
int3
rorl
pop
cwtl
add
jo
paddsb
movsb
mov
sub
jg
adc
popa
xchg
es
leave
movsb
xor
cs
sub
sub
gs
daa
or
jnp
jl
push
xor
shlb
lods
pop
addl
sbb
and
pop
xchg
outsl
mov
call
enter
mov
pop
in
dec
imul
ljmp
sub
inc
push
sbb
xor
add
ljmp
sbbl
insb
je
mov
mov
scas
stc
arpl
or
gs
das
aaa
sbb
jl
lods
out
ja
xchg
jne
addb
push
sbb
cmp
mov
fnsave
mov
pushf
pop
mov
pop
xchg
andl
andl
in
push
jns
imul
imul
int3
pop
dec
xor
inc
mov
sahf
insb
pop
mov
insb
pop
aas
ja
xor
jmp
insb
loopne
mov
test
insb
lods
negl
mov
cmpb
jecxz
sbb
test
or
call
or
lahf
insb
dec
in
xchg
mov
sarl
add
mov
loop
jnp
outsb
insb
sbbl
lcall
iret
in
sub
xchg
aam
cmpsb
push
icebp
dec
insb
mov
test
out
sbb
movsb
adc
mov
xor
dec
test
outsb
sbb
mov
mov
data16
imul
test
mov
int
xchg
idiv
xchg
xor
shrb
xor
out
jne
je
les
sbbb
int3
shrl
adc
push
or
insb
mov
sub
insl
sub
popf
dec
mov
sub
insb
xor
lret
test
sub
adc
shrb
fsubrs
les
call
cmpsl
pop
pushf
xor
rcrb
sub
lods
sbb
and
cmpsb
movsb
cltd
fimuls
fsubrl
clc
and
cmp
aaa
les
push
sqrtps
insb
sbb
std
insb
xchg
movsl
pop
nop
xchg
out
push
imul
addr16
fs
pop
jno
shlb
pusha
cmp
and
es
or
mov
xchg
imul
fbstp
xchg
in
scas
ret
addr16
xchg
dec
cli
push
mov
or
or
adc
pusha
dec
xchg
ss
xchg
int
xchg
lret
jg
popf
loope
lock
int3
push
jne
jnp
ljmp
clc
mov
out
nop
or
lea
add
repz
xchg
xchg
jge
inc
loope
mov
xchg
jne
cli
mov
push
sub
xchg
jge
and
mov
pop
xor
inc
loopne
jb
testl
mov
add
pop
int3
insb
repz
dec
jae
subl
loop
push
outsb
arpl
add
xlat
repnz
imul
xchg
test
xor
jne
movsl
inc
insl
mov
lahf
in
mov
dec
std
pop
jno
cltd
inc
dec
out
je
test
dec
lcall
insb
adc
scas
lcall
add
insb
fcompl
pop
insb
and
xchg
clc
mov
imul
cmc
mov
xchg
dec
aas
pop
jb
loope
lahf
mov
test
fisubrl
std
push
mov
imull
aam
fsubrs
add
inc
out
lea
add
popf
pop
push
gs
fbld
cld
push
bound
push
sbb
rolb
xor
add
fiaddl
insb
lods
push
and
sti
call
int3
imul
rcr
and
hlt
xchg
pop
sbb
xlat
jl
mov
fs
cwtl
sub
aaa
sarb
and
daa
aas
das
in
mov
add
jp
mov
mov
cld
and
mov
sbb
lahf
inc
test
jnp
lods
into
clc
pop
sbb
pop
cwtl
cli
shrb
sets
dec
gs
out
and
adc
in
sahf
lret
jecxz
add
pop
shrb
sub
insb
scas
scas
leave
mov
push
xchg
lea
loop
stos
nop
add
or
ret
dec
test
insb
pop
cmp
decl
mov
jno
fldcw
adc
js
dec
insb
movsl
lods
in
testb
dec
add
jmp
movsb
push
push
and
nop
out
fwait
ret
or
inc
jp
xchg
std
bound
xor
sbb
jbe
nop
cmp
scas
imul
mov
lea
push
jo
fldcw
in
ja
mov
mov
shlb
xlat
adc
push
insb
mov
mov
sub
notl
lea
insb
pop
mov
jl
insb
test
je
insb
xchg
xchg
dec
add
ljmp
xchg
mov
dec
cmp
iret
js
pop
and
sub
daa
mov
flds
icebp
xor
cmp
lcall
jbe
inc
clc
out
inc
fisttps
push
js
shlb
bound
fcompl
dec
test
lock
insb
adc
cmp
loopne
pop
ds
fsubrl
fwait
xor
cltd
mov
push
jo
jo
adc
insb
or
out
int
push
ficomps
jl
push
sub
inc
xor
imul
stc
sbb
punpckhbw
add
mov
dec
loop
pop
xor
mov
push
scas
insb
test
or
pop
pop
cmp
push
mov
imul
adc
insb
repz
fcoml
ss
push
jl
add
lds
js
xor
out
insb
hlt
and
pop
and
xchg
xor
ficoms
ret
xlat
insb
xorl
aad
and
cmc
inc
insb
arpl
jmp
xchg
idivb
fsub
pop
push
je,pn
fstps
leave
int3
sub
movsb
add
sbb
insb
icebp
push
lock
outsb
push
insb
add
xor
cmp
daa
adc
pop
arpl
inc
imul
push
data16
outsl
mov
sbb
and
js
or
insb
pop
mov
cmc
out
mov
add
pop
mov
sbb
inc
outsl
push
insb
lods
popa
mov
pop
insb
jae
nop
inc
and
ja
insb
xchg
cs
jecxz
mov
imul
dec
cmp
jl
inc
sbb
cmpsb
inc
mov
push
js
repnz
jbe
cmp
jae
xor
ret
sarl
out
jp
insb
clc
xor
daa
inc
popl
lods
scas
int3
mov
xchg
hlt
cs
mov
xchg
xchg
movsb
mov
insb
pop
outsb
pop
mov
in
or
push
cvtps2pi
in
cld
mov
or
or
gs
adc
jge
sub
insb
pusha
and
push
stc
xchg
imul
mov
stos
push
cmc
dec
out
inc
mov
mov
pop
pop
notl
adc
push
pop
into
jne
and
sub
mov
pop
nop
imul
push
enter
jno
repz
and
sti
les
mov
insb
pop
rorb
jp
xor
insb
jo
enter
insb
cmp
scas
js
xchg
test
cmpl
dec
jl
imul
mov
inc
scas
in
loopne
cli
push
add
shl
sbbl
fldcw
jno
imul
cmp
inc
push
fwait
mov
mov
fidivs
sarl
jne
xchg
lods
inc
xor
dec
imul
test
push
dec
jno
ja
cmp
push
movsb
dec
cmpsb
inc
out
mov
pop
xor
lods
add
mov
ficoms
clc
shl
insb
in
out
popa
push
xor
stc
pop
mov
inc
push
cmp
lods
mov
insb
pop
shlb
xchg
xor
mov
lods
icebp
addr16
pop
divl
insb
cmovns
mov
jge
shrb
cmpsl
add
insb
lcall
and
repnz
test
loopne
xlat
mov
ror
in
test
test
int3
inc
jmp
jg
clc
mov
adcl
sub
scas
repnz
fbstp
jo
mov
xchg
push
fmulp
lods
fisttps
dec
stc
loopne
mov
sbbl
ljmp
jge
adc
repnz
loopne
sub
addr16
nop
xchg
xor
xchg
insb
mov
test
jnp
fisubrs
sbb
cmpsl
adc
sub
and
call
sbb
insb
jo
popf
pop
sbb
test
mov
push
cmp
insb
in
loopne
ss
push
mov
and
fiaddl
insb
jmp
int3
rol
in
cmp
cmp
xchg
dec
push
mov
insb
xor
xchg
xchg
xorl
pop
int
jns
dec
mov
mov
insl
mov
popf
insb
jecxz
mov
xchg
adc
std
push
fiaddl
aas
sbb
jno
lret
xor
or
add
lock
cltd
dec
mov
pop
into
dec
adc
cmp
lods
and
cmpsb
push
pop
mov
cmp
inc
orl
adc
mov
push
jp
insb
imull
in
sbb
rclb
adc
or
insb
icebp
push
push
push
and
mov
cwtl
ds
pushf
fsubl
fsubl
adc
test
or
fidivl
pop
sbb
cli
mov
insb
in
lcall
insb
push
int3
dec
jecxz
or
data16
cld
popa
lock
cwtl
test
insl
pop
je
lods
and
insb
out
stc
rcrb
dec
xchg
cmp
mov
insb
out
roll
jl
push
xor
in
imul
mov
inc
in
mov
inc
imul
iret
push
sub
insb
call
clc
and
lret
pushf
js
push
stos
insb
mov
xchg
aaa
pop
arpl
mov
cmp
in
in
outsb
insb
aas
xor
cmpsb
mov
pop
insl
sbb
fadds
and
jne
cmpl
insb
xchg
adc
cs
iret
in
mov
mov
dec
push
inc
insl
std
push
insb
clc
adc
enter
insb
loop
push
dec
mov
movsl
mov
out
incb
packssdw
push
jl
xchg
add
mov
xor
divl
inc
insb
mov
movb
push
mov
es
inc
jecxz
movsl
push
xchg
cs
lock
imul
pop
aam
sti
mov
imul
jb
mov
inc
xchg
in
jecxz
pushf
mov
lcall
out
fmuls
in
sbb
sub
fwait
mov
jo
cs
jecxz
std
and
ror
into
hlt
adc
dec
cmc
insb
in
cmp
aad
scas
insb
pop
mov
push
rep
xor
test
ret
sarb
push
pop
notb
or
ljmp
xchg
mov
cmp
push
ret
je
push
inc
arpl
js
mov
adc
cmpsb
insb
jge
mov
push
jo
fadd
xor
inc
and
shr
inc
insl
dec
je
rcrl
out
insb
adc
inc
lahf
insb
pop
popa
int3
or
jle
es
dec
sbb
fldt
insb
rclb
and
lea
sub
mov
xchg
popf
lahf
repnz
dec
cmpsl
imul
mov
daa
mov
mov
popa
mov
mov
imul
mov
push
scas
rclb
sahf
pop
fs
packssdw
pop
insb
fidivl
loopne
pop
shl
leave
ror
dec
int
mov
insb
mov
mov
or
add
repnz
xchg
ret
inc
mov
mov
stos
insb
jmp
mov
stos
insb
call
inc
adc
jmp
fldcw
fadd
in
mov
clc
test
inc
add
push
js
push
cmp
ds
inc
mov
dec
into
cltd
cmpsl
pop
movsl
jle
outsl
dec
sub
mov
and
or
stos
pushf
sbb
inc
pop
insb
or
add
mov
dec
icebp
aas
sub
add
inc
test
pop
dec
testl
and
push
pop
inc
mov
dec
dec
jb
and
mov
scas
lahf
invd
sub
lret
mov
and
rclb
dec
pop
add
out
insb
test
mov
dec
out
popf
in
mov
cwtl
mov
sbb
js
ljmp
lods
inc
je
inc
pop
insb
jmp
inc
xor
shlb
scas
mov
movsl
movsb
insb
lret
int
aam
mov
int3
or
addr16
pop
push
insb
in
lock
and
cli
dec
xor
and
iret
scas
sbb
pushf
insb
push
jmp
stc
insb
or
adcb
inc
insb
mov
mov
mov
jle
clc
adc
and
mov
ret
cmpsb
je
icebp
repnz
insl
mov
imul
in
mov
loopne
movsb
popa
sub
imul
imul
pextrw
cs
mov
gs
xchg
shr
push
sub
bound
inc
ds
xchg
insb
int
pop
scas
repnz
iret
js
addr16
dec
subb
mov
popf
insb
leave
fadd
pop
lea
insb
xchg
bound
add
dec
mov
rol
push
ds
aas
add
popa
into
lahf
lock
jmp
hlt
xchg
insb
fucom
test
mov
out
mov
dec
lcall
pop
pop
cmpsb
in
sub
inc
movsl
ljmp
imul
sub
sti
shrb
scas
lods
add
jnp
insb
sub
push
js
jge
sbb
mov
fdivl
and
jnp
mov
insb
fisubrl
stc
fs
inc
dec
pusha
push
subl
inc
dec
and
pop
fldl
push
lods
stc
loopne
xchg
mov
add
dec
out
xor
jle
test
std
add
or
insb
lds
mov
insb
mov
pusha
and
add
hlt
cli
mov
cld
dec
pop
into
pushf
cld
jnp
es
pop
lret
cmc
insb
mov
iret
bound
jp
popf
test
ds
xor
subpd
fdivl
ret
mov
pop
or
xor
sub
cmpsl
xchg
sub
rcrl
cmpsb
out
test
cmp
roll
test
xchg
in
push
push
jb
shrl
int3
mov
xor
pop
cld
or
rolb
cwtl
in
add
inc
test
adc
subl
imul
jo
and
push
mov
incl
in
cmp
or
gs
dec
lret
fsubl
imul
sbb
mov
bnd
pop
inc
jo
xchg
insb
test
or
pop
xor
sub
icebp
xchg
mov
fisttpl
dec
hlt
popa
inc
insb
stos
adcb
lds
loop
adc
imul
enter
mov
inc
scas
insb
popf
pop
inc
push
int3
cwtl
shlb
pop
mov
imulb
das
dec
fdivrs
mov
sarl
mov
dec
mov
inc
out
in
mov
std
mov
inc
or
or
ljmp
push
call
dec
nop
rcll
popa
xchg
xor
out
dec
movsb
pop
xor
dec
dec
jl
inc
sub
dec
xorw
or
pop
outsb
sahf
jl
sub
fistpll
outsl
jle
dec
cwtl
in
or
push
imul
adc
xchg
es
sbb
mov
jno
imul
jg
lods
decb
dec
mov
flds
int3
adc
insb
nop
fnsave
mov
inc
insb
stos
push
dec
dec
ds
pop
jno
mov
xor
cmp
mov
add
cld
sub
scas
out
addl
pop
or
int3
inc
dec
insb
insl
in
xchg
rcrb
mov
fidivrl
je
mov
mov
push
inc
pop
in
ret
and
clc
mov
cld
jbe
jae
pop
mov
push
aas
mov
aam
pop
dec
ret
int3
push
cmp
js
loopne
mov
xor
gs
cmp
subb
insb
dec
imul
jo
mov
mov
stos
imul
push
pop
sbb
pop
js
sub
inc
add
movsb
jecxz
sbb
or
cmp
rcll
insb
adc
cli
out
xlat
test
insb
movsl
pop
stc
out
xchg
vmulss
sub
push
inc
inc
lahf
push
dec
das
adc
lods
gs
dec
jg
out
std
xchg
stos
jo
jl
jo
insb
jmp
or
jmp
lcall
mov
xchg
push
arpl
sbb
bound
dec
mov
inc
rclb
pop
fdivs
scas
call
aaa
insb
add
insl
ja
jbe
mov
mov
divl
pop
test
cmp
lock
cmp
jnp
arpl
sbb
jae
insb
sub
cmpsb
movsl
aad
jecxz
mov
ret
mov
cmp
out
insb
test
lcall
pop
sub
jno
add
cmp
mov
aas
jae
outsl
mov
mov
mov
xor
jmp
add
inc
in
subl
test
pusha
dec
sbb
mov
cmp
insb
loope
fcmove
idivl
jbe
xchg
in
xor
les
aad
clc
popa
icebp
or
insb
cs
arpl
into
cwtl
fwait
aam
insb
lcall
popf
gs
jb
adc
xor
inc
or
or
imul
sbb
out
sbb
mov
mov
or
sub
fmuls
mov
lret
das
add
test
lock
mov
xor
popf
or
push
lods
dec
jl
inc
loope
and
jo
mov
mov
mov
xor
insb
xor
in
xor
jle
cwtl
testb
cmpsl
lods
and
subl
dec
mov
es
mov
in
test
and
add
push
subb
jl
lods
lds
popa
cmp
mov
xorb
mov
mov
mov
daa
cmp
sub
pusha
out
cli
icebp
fsubrs
sub
jnp
jae
stos
notb
imul
and
jle
lods
rcrb
insb
mov
loopne
imul
mov
call
jne
ss
rorl
jbe
sbb
jnp
adc
cmp
jge
dec
gs
mov
rcrl
mov
fnstenv
mov
mov
aad
lods
stc
sbb
mov
ret
decb
and
hlt
subb
jne
mov
insl
imul
int3
aas
lahf
and
int3
push
sbb
fnclex
dec
inc
das
in
arpl
movsl
adc
sub
std
and
stos
test
jbe
insb
cmpsb
push
xor
aaa
stc
xor
loopne
flds
push
and
cmp
jns
push
ret
adc
pop
addb
and
dec
popf
gs
stc
sub
ret
lods
adc
xchg
sub
cmp
xchg
mov
movsb
pushfw
add
inc
sbb
enter
cmp
dec
push
imul
dec
les
sti
adc
jp
mov
jnp
in
sub
cmpsb
mov
ret
push
dec
dec
push
jp
popa
inc
repnz
insb
aas
lea
pop
lods
jp
xor
fld
addr16
int
xchg
lods
sub
add
cmp
hlt
xor
inc
jne
adc
enter
mov
call
mov
les
xor
dec
std
push
mov
sub
mov
adc
test
ds
inc
sbb
jmp
cli
imul
cltd
add
dec
call
addr16
in
cmpsl
iret
push
rcll
jns
loop
pop
cmp
frstpm(287
push
mov
dec
std
mov
jl
dec
int3
cmpsb
stc
mov
push
cld
insb
jmp
push
sbb
and
lret
or
ficomps
insb
rorl
fldcw
and
xchg
insb
cmp
out
inc
sub
sbb
push
fcmovu
stos
stos
pop
sbb
mov
or
test
push
mov
jb
cmp
jno
mov
stos
push
mov
aam
in
pusha
adcl
push
in
fmull
test
data16
test
repnz
adc
ja
jae
ds
sti
pop
jno
cs
pop
in
add
cmpl
xor
ljmp
push
jb
insb
push
js
push
stos
push
pusha
in
sbb
hlt
loopne
mov
pop
insb
dec
and
es
add
movsl
insb
call
jo
and
cli
ret
sub
into
add
add
pop
imul
xor
test
arpl
fwait
jb
xchg
rep
popf
aas
sub
out
int3
pop
mov
push
pop
in
imul
dec
mov
lods
add
inc
sub
xchg
inc
int3
lahf
mov
add
mov
insb
pop
outsw
mov
insb
inc
sub
shll
loop
in
sbb
addr16
push
cmp
push
test
out
cmpsb
in
arpl
pop
fsts
pop
iret
push
pop
pop
lret
adcb
cld
cmp
pop
sub
rorl
aam
xor
rolb
out
fcmovne
pop
jl
inc
and
imul
sbb
mov
mov
dec
ss
inc
jl
push
dec
test
imul
and
stos
lret
jb
jne
fdivr
imul
test
xor
dec
xor
jmp
cs
add
in
adc
test
insb
call
insb
xchg
aam
bound
scas
adc
insb
ret
mov
insb
lock
shl
sbb
mov
fcompl
jmp
in
mov
cmpsb
gs
cmc
into
insb
xchg
add
inc
or
loop
data16
xchg
stc
mov
mov
mov
sub
sahf
int
lea
scas
gs
adc
pop
or
insb
test
inc
fldl
mov
dec
or
cmp
xor
mov
loop
imul
jmp
inc
dec
gs
adc
pusha
mov
pop
push
aad
shr
insb
or
jmp
insb
cmp
ret
inc
add
push
test
or
lcall
and
xchg
neg
insb
mov
dec
test
push
ss
inc
fidivs
push
jmp
push
imul
and
dec
fcmovnu
enter
ja
mov
mov
movsb
insb
mov
out
mov
imul
dec
push
std
sbb
xlat
mov
and
xor
mov
adc
add
clc
mov
data16
cmpl
push
mull
insb
push
out
push
add
mov
and
cmpsb
imul
xchg
hlt
sahf
vminpd
lods
or
mov
or
jo
xor
xchg
adc
dec
lods
push
lds
out
pop
in
scas
in
inc
sub
xor
das
out
pop
sti
lods
cmp
pop
push
out
push
or
adc
dec
insb
xor
pop
jns
sbb
scas
sbb
fcoms
add
lods
roll
sahf
fcmovnbe
aaa
insb
lahf
jl
pop
into
xchg
insb
insl
sbb
stos
adc
call
cld
sub
or
or
jae
iret
mov
mov
push
jns
jnp
push
mov
mov
clc
cmpsl
insb
push
xchg
rcr
sub
gs
adc
pop
ljmp
cmp
insb
dec
scas
adc
mov
inc
fimuls
ret
aam
test
insb
test
cmp
sub
and
out
cmp
popf
ljmp
add
fistps
mov
scas
pop
or
mov
jmp
bound
les
sbb
enter
mov
sub
pop
mov
les
push
cmp
jmp
sub
mov
adc
rclb
int3
in
insb
xchg
xor
sub
das
dec
insb
pop
in
inc
inc
mov
imul
aam
fsts
mov
mov
subl
push
movsl
insl
sub
insb
fs
xchg
adc
nop
mov
gs
scas
sahf
ret
mov
adc
pop
and
fiadds
out
inc
lds
aad
jmp
ret
pushf
xchg
xor
aam
xchg
lahf
lcall
insb
idivb
dec
dec
xchg
subl
mov
fdivrl
push
xchg
lods
cs
and
xchg
and
nop
insb
loopne
jns
push
mov
mov
pop
adc
dec
inc
mov
hlt
adc
push
xor
mov
xchg
js
mov
add
cmp
insb
jo
les
adc
or
fisttpl
pop
mov
mov
inc
pop
inc
pop
push
add
js
out
or
lods
insb
or
push
xor
jle
mov
loop
xchg
repz
xor
push
jne
in
adc
inc
in
arpl
daa
push
das
jmp
ror
gs
pusha
sub
loope
dec
insb
xchg
sub
dec
sub
insb
test
inc
arpl
jno
mov
mov
call
adc
dec
push
push
jb
imul
cltd
add
insb
ja
pop
jle
sub
mov
mov
popa
stos
pushf
dec
xchg
insb
push
add
nop
outsl
mov
xchg
mov
xor
mov
inc
gs
adc
mov
jge
cld
gs
adc
jae
mov
pop
imul
dec
xchg
mov
push
jbe
add
es
insb
ja
test
xor
bound
insb
dec
int
stos
jne
mov
cld
adc
repnz
imul
testl
fdivrl
imul
in
mov
and
stos
cmp
xchg
testl
insb
mov
or
lret
cmp
outsl
gs
push
fwait
cltd
lcall
mov
push
and
jb
xchg
ret
and
lret
loop
dec
push
sub
xchg
popa
dec
repz
insb
std
clc
sub
cld
insb
fwait
sbb
inc
in
inc
in
insb
pop
xchg
jbe
scas
push
insb
cmpsb
lahf
cld
cmp
add
insb
xlat
std
bound
addr16
cmp
add
sbb
leave
insb
cmc
mov
and
mov
sbb
pop
mov
xor
mov
std
lcall
insb
lods
xchg
cmp
das
sub
insb
cmp
out
repnz
add
sub
insb
lret
lds
mov
gs
cs
cld
loope
scas
xbegin
sbb
jmp
push
insl
jmp
sarb
jle
adc
mov
sub
int3
mov
fimuls
inc
jns
insb
cmp
fistpl
cs
xor
nop
push
lods
andl
push
adc
imul
aas
jno
inc
or
imul
mov
iret
in
xchg
or
mov
insb
inc
lods
sbb
test
pop
int3
mov
pusha
test
imul
pop
movsl
or
lcall
insb
out
iret
jns
into
cmp
or
imul
rol
addr16
lods
pop
insb
cmp
ljmp
popa
fwait
in
jne
cmp
sub
lods
lods
scas
xor
hlt
add
mov
call
es
out
insb
jle
sarl
mov
xor
push
sub
hlt
out
lods
pushf
pop
fsubrl
fwait
movsl
andb
jle
xchg
cmpsb
test
xchg
or
cs
xor
cmpsb
xor
data16
fldt
xchg
loope
call
push
push
fwait
mov
insb
push
jnp
mov
pop
repnz
mov
jg
cltd
pop
mov
sub
xchg
insb
cmc
xor
or
addr16
lret
jge
or
inc
lods
fwait
rcrl
sub
lret
insb
inc
out
roll
push
jl
dec
mov
mov
dec
sbb
lahf
and
pop
ljmp
jno
cltd
sub
jns
sub
sbb
and
dec
xor
inc
mov
pop
or
stos
adc
push
inc
and
cmc
js
jnp
data16
insb
call
je
cmpxchg
sub
loopne
mov
push
sub
stos
and
fidivl
pushf
adc
sub
adc
mov
xchg
pop
adc
dec
pop
stc
pop
sub
jb
popa
add
jno
insb
test
dec
lcall
sbb
cmp
dec
insb
leave
xchg
mov
mov
cmc
in
push
scas
repnz
push
pop
push
xchg
jno
pop
dec
out
sahf
lea
inc
xor
dec
out
sub
cmpsl
rcll
push
mov
cmp
sarb
aad
imul
sub
popf
xor
fsubrs
mov
cli
cmc
push
insb
jae
shll
insb
into
test
leave
cmp
enter
ds
lea
pop
push
movsb
fisubrs
mov
dec
mov
cltd
gs
pop
lret
into
pop
push
movsb
rep
call
mov
sub
daa
insb
sahf
hlt
fwait
and
loop
jb
pop
sub
adc
sub
outsb
ret
xor
repnz
and
shll
cmp
insb
jecxz
sub
nop
insb
mov
cmpsl
ss
gs
ds
lahf
arpl
push
cmc
jne
push
imul
aas
mov
push
mov
push
mov
mov
dec
or
pop
mov
lahf
sub
mov
aam
cmp
int
push
xchg
addl
stos
pop
mov
adc
movsb
push
or
mov
fs
jnp
fildll
insb
sub
mov
pop
loope
sub
in
push
add
insb
mov
test
push
pop
fisttpll
pop
insb
bnd
lahf
int
xchg
sbb
adc
adc
insb
mov
cld
xchg
imul
push
push
insb
add
popf
fidivs
jnp
or
inc
adc
xor
push
cmp
cmp
mov
sbb
and
sbb
sub
lods
fisubrl
mov
insb
nop
fadd
out
mov
in
push
mov
clc
insb
push
push
or
jl
insb
dec
cmp
cmp
orb
cmpsl
xchg
insb
movsb
push
jg
cmp
enter
outsb
sub
iret
pop
ss
int3
out
enter
sbb
imul
mov
jg
insb
sar
test
outsb
mov
add
movsl
insl
cmp
pop
adc
insb
sub
insb
lahf
out
lcall
cmc
aas
push
pop
or
mov
repz
fldt
xlat
dec
in
popf
push
ds
cltd
shlw
fsubrs
pop
test
jae
dec
ja
xchg
insb
lahf
outsb
jns
jno
insb
cmp
dec
icebp
mov
mov
jge
or
xor
movsb
scas
int3
jg
jecxz
sub
sbb
in
xor
push
mov
inc
xchg
jmp
mov
push
insb
out
ret
add
mul
push
insb
sbb
mov
push
fsubl
int3
xor
and
es
add
out
cs
adc
pop
inc
adc
pop
jmp
lods
inc
cld
cli
inc
insb
mov
cmp
insb
push
or
sbb
mov
insl
mov
cmp
adc
mov
ljmp
insb
clc
mov
push
subl
idiv
pop
rcrb
sub
pop
push
adc
adc
fwait
in
or
mov
dec
enter
imul
and
cwtl
in
mov
insb
dec
cmp
or
dec
cmp
sbb
sub
outsb
jg
in
xchg
xlat
ds
out
push
rclb
mov
out
scas
inc
mov
jmp
pushf
mov
pop
add
cmp
cmp
in
push
add
mov
cmp
ss
sub
insb
or
test
push
test
sub
mov
jb
mov
lea
jl
push
adc
insb
add
sar
fwait
sub
insb
nop
mov
popa
jl
dec
in
xlat
jns
insb
test
push
xchg
pop
nop
hlt
ds
mov
std
decb
inc
insb
cltd
push
mov
and
dec
dec
sub
xor
scas
mov
aam
cmp
pop
das
insb
jbe
push
scas
jmp
arpl
add
sahf
xchg
xor
add
inc
xor
outsl
mov
mov
add
push
sbbl
xchg
lret
pop
adc
mov
fisubrs
pop
xchg
or
xchg
enter
dec
insb
sbb
add
mov
push
xor
mov
lds
in
lds
jge
jbe
and
lret
inc
std
inc
xchg
inc
sbb
sbb
xchg
xor
add
pop
push
insb
pop
pop
push
movsl
fnstenv
sbb
sub
xchg
data16
xor
in
ss
insb
sahf
je
cmp
leave
aam
rclb
xlat
insb
cmpsb
xor
repz
fsubrl
push
insb
out
add
lods
xchg
adc
aaa
insb
sub
add
jnp
mov
lock
and
sbb
jp
into
mov
clc
lods
cmp
imul
cmpsb
jne
dec
sub
adc
into
xlat
or
mov
bound
insb
js
push
fcoml
mov
in
mov
testb
xchg
out
mov
lea
cmp
int3
mov
push
sub
imulb
mov
push
inc
imull
fmull
insb
cs
add
inc
add
cltd
insb
or
inc
mov
or
gs
movsb
and
or
inc
and
jmp
add
mov
cli
movsl
insb
mov
mov
dec
insb
pop
addb
and
sti
pushf
mov
gs
ljmp
mov
bnd
insb
sahf
stos
xor
and
insl
sub
pop
insb
inc
fwait
es
imul
sbb
movsb
or
add
inc
lret
sbbl
push
jle
or
mov
pop
dec
add
cli
xchg
in
mov
insb
mov
adcl
stc
idivl
stos
pop
dec
daa
imul
sub
adc
ficomps
jg
pop
out
mov
insl
sub
enter
pop
or
test
cmc
std
fistpl
jae
imul
mov
jnp
push
pop
lods
addl
rclb
outsb
aad
pop
insb
repnz
or
push
cmp
fmull
test
lret
repz
pop
xor
cwtl
mov
or
shrb
sub
outsl
mov
xchg
pop
push
sub
mov
in
scas
pop
push
stos
enter
pop
insb
and
push
cmc
pop
jp
push
push
lods
imul
shrb
andb
push
push
push
inc
in
stc
bound
insb
push
aad
dec
adc
cmpsb
xchg
mov
das
imul
pusha
or
leave
add
jg,pn
jo
outsl
push
lret
insb
cmp
outsb
sbb
imull
les
outsb
imul
mov
div
subb
negb
sbb
int
insb
push
insl
paddb
jg
pushf
inc
fiadds
leave
cwtl
scas
insb
pop
clc
adc
push
frstor
scas
ret
loop
sub
mov
out
mov
insb
mov
and
jo
cs
sahf
jecxz
ret
addr16
push
repnz
subl
imul
dec
sbb
pop
outsl
jnp
dec
in
mov
sub
mov
insb
rcr
clc
pop
push
sbb
hlt
dec
enter
repz
dec
mov
add
mov
push
xchg
mov
push
out
loop
rep
inc
push
push
push
jno
enter
mov
mov
mov
xor
pop
sub
in
lods
test
mov
push
mov
mov
push
ja
lock
fmull
scas
insb
add
insb
popf
das
int
fucomp
imul
jg
imul
pop
insb
and
inc
inc
push
stos
xchg
dec
insb
into
jns
ja
addr16
xor
mov
cmp
sub
jb
cli
jne
jmp
xlat
jb
pop
pushf
push
cmp
jo
dec
insb
std
addb
cmp
rcll
insb
xchg
add
cli
pop
gs
cmp
jecxz
and
sub
imul
int
out
mov
aad
add
cld
imul
xchg
and
mov
insb
jle
lock
out
mov
ja
mov
imul
out
add
jnp
lahf
xor
push
decb
insb
es
mov
insb
adc
fimuls
stos
lock
outsb
and
daa
insb
inc
mov
dec
rclb
scas
pop
shl
and
xchg
xchg
dec
cmpsl
insb
popa
movlps
xchg
push
sbb
add
mov
jmp
sarb
or
insb
das
sbb
sti
in
ret
repz
lds
inc
imul
dec
mov
xor
in
fs
incb
dec
xchg
int3
shll
dec
pop
mov
cmp
arpl
aas
mov
and
or
insb
and
pop
inc
out
aam
dec
sub
pop
int3
not
adc
addl
insb
pop
and
push
jecxz
addr16
mov
adc
dec
enter
jle
mov
icebp
movsb
imull
ljmp
add
add
pop
orb
ret
scas
mov
cltd
sti
push
insb
mov
cmp
push
or
fcomi
pushf
insb
mov
add
insb
aas
addr16
jle
mov
leave
sub
js
mov
mov
fisubrl
dec
int
psubusb
push
test
mov
clc
mov
adc
mov
pop
xor
insb
dec
cmp
push
insl
ret
add
jmp
adc
mov
xchg
popf
or
lods
and
push
pushf
ljmp
pop
sub
xchg
mov
jnp
jno
and
jns
scas
lods
aad
imul
insb
insl
popa
add
jp,pt
imul
jae
dec
xor
jge
sbb
cmc
dec
push
imul
xchg
fisubrl
push
fsubrl
popa
xchg
xchg
bound
mov
pushf
in
jp
insb
mov
push
sbb
pop
mov
inc
fs
lret
pop
inc
popf
mov
pop
and
insb
and
aas
inc
jle
notl
push
lods
lods
xchg
sub
cmpsb
insb
jne
stos
jge
test
insb
ljmp
dec
insb
mov
out
js
dec
imul
test
scas
mov
jge
int
movsb
cs
insl
mov
insb
xchg
movb
aaa
test
insb
inc
icebp
push
push
pop
jns
lahf
and
or
insb
fdivr
xor
push
xor
insb
add
jae
out
insb
out
dec
out
dec
and
cmpsb
and
mov
je
sbb
imul
sbb
xchg
mov
test
sti
dec
movsl
pop
test
jmp
sub
mov
in
in
dec
sbb
lea
mov
or
arpl
and
insl
push
ja,pt
insb
fisttps
aaa
movsb
fsubl
imul
in
sbb
jo
jg
dec
fildll
rcrl
jg
in
sbb
dec
jae
inc
push
in
inc
xchg
mov
sbb
and
cmp
lods
rorb
imul
mov
orl
in
cli
mov
arpl
adc
push
and
loopne
mov
or
test
xchg
pusha
imul
shr
mov
sub
insb
sbb
leave
bound
or
mov
in
add
and
add
push
xchg
gs
test
bound
mov
adc
pusha
inc
sub
aas
testb
jmp
and
push
sbbb
cli
sti
int3
cwtl
and
or
push
pop
insb
push
arpl
lea
cltd
ret
xchg
jo
outsl
mov
mov
add
enter
sub
push
rol
adcl
pop
mov
insb
jne
aaa
cli
mov
xchg
jbe
xor
dec
xor
push
movsb
bound
adc
mov
outsb
pop
mov
sub
insl
daa
cwtl
imul
cmpsb
shrb
lods
xchg
clc
jo
insb
xor
or
bound
jnp
in
imul
push
pushf
lcall
insb
mov
icebp
es
fs
insb
jmp
into
int
insb
jmp
out
lret
loopne
outsb
in
mov
test
xchg
inc
xchg
ret
insb
mov
cmpsb
jns
insb
xchg
fisttps
lret
enter
lea
cs
pop
mov
jnp
pop
sub
jmp
adc
insb
data16
subb
aam
push
push
pop
add
or
lock
cltd
int
jecxz
xchg
out
jecxz
test
shll
mov
stos
out
imul
xor
inc
gs
mov
xlat
mov
jge
jg
xor
xchg
sub
decb
inc
in
aaa
je
leave
jne
fdivrl
add
gs
lods
subl
mov
xchg
xchg
fsubl
shll
or
inc
add
cmpsl
xor
insb
movsl
int3
roll
lahf
popa
insb
cmp
or
cmp
ror
push
push
in
push
insb
push
mov
mov
xor
lods
mov
jmp
insb
mov
xchg
jo
xchg
sbb
insb
mov
push
clc
out
jns
pushl
nop
or
push
add
dec
loopne
sar
mov
jnp
ret
or
insb
sbb
adc
lret
test
inc
or
mov
sub
or
xor
cltd
dec
push
test
sahf
cld
shl
pop
imul
sbb
out
push
push
mov
scas
mov
mov
sub
out
test
fsubrp
xor
dec
dec
cmpsl
adcl
sbb
mov
out
adc
jo
imul
mov
test
in
insb
fadd
imul
jne
mov
inc
insb
lods
in
dec
and
cmp
js
ja
orb
das
mov
bound
adc
addr16
add
fsubrl
and
jno
repz
adc
fsubs
or
aam
inc
pushf
cli
push
insb
mov
mov
sbb
dec
repnz
clc
enter
xchg
cmp
cmp
pop
or
insb
mov
addr16
jl
mov
sti
popa
cmpl
insb
cmpsl
repnz
push
cmpb
std
data16
test
insb
xchg
aam
xor
sub
and
leave
loope
int3
insb
xlat
pushf
jae
jmp
arpl
adc
shrb
sub
add
push
pop
mov
add
push
pop
hlt
lret
lods
lods
add
imul
dec
test
mov
push
pop
int3
sub
mov
add
repz
push
scas
fcomip
mov
jb
inc
lock
mov
add
jmp
ljmp
xor
or
mov
test
cs
insb
scas
popa
stos
lods
aaa
xor
lret
fsubrl
dec
test
mov
xchg
lods
insb
je
fst
xor
cmp
xor
imul
repnz
subl
or
pop
iret
or
imul
adc
cmpsb
int
add
in
insb
stos
adcb
insb
push
fisttpll
add
dec
and
pop
insb
mov
daa
faddl
mov
enter
adc
push
in
out
out
rorb
mov
int
lds
daa
pop
and
adc
stc
dec
ficoml
sub
lds
pop
icebp
pop
imul
jo
sbb
push
cmp
xchg
stos
out
mov
insb
ret
and
sbb
sub
push
in
or
or
insb
cld
jg
cmc
mov
rcl
insb
push
rcl
faddl
pop
xchg
pop
inc
std
sub
pop
dec
xor
pop
insb
jecxz
js
sbb
insb
sahf
jge
sbbl
int
and
outsb
out
pop
add
addr16
test
in
aam
jg
sbb
push
ds
mov
or
inc
mov
push
xchg
cmp
insb
lret
push
xchg
push
insb
mov
push
int3
jp
adc
fldenv
aam
lret
lods
imul
cltd
mov
daa
push
fbstp
xor
jmp
fcoml
jae
cmp
stos
insb
stos
outsb
sub
test
mov
jg
pusha
pop
push
lds
ffreep
sub
xchg
stos
mov
pusha
jno
iret
mov
cs
shll
insb
jb
mov
fucom
imul
decl
push
insb
push
xchg
mov
fildll
out
jb
inc
into
insb
pop
or
push
fdivl
imul
cmp
out
pop
add
cmp
addr16
enter
pop
and
pop
shll
pop
jmp
inc
xchg
std
dec
sti
stc
in
insb
add
adc
xor
imul
out
insl
add
jb
iret
imulb
test
mov
inc
or
or
ret
mov
push
adc
rcrb
inc
int
pop
inc
movsl
iret
jg
incb
insb
mov
cmp
pop
insb
aad
mov
or
fimull
or
jp
mov
pop
out
insb
xor
fwait
inc
stc
leave
mov
pop
sbb
daa
dec
and
insb
xor
addr16
jne
or
cmp
pop
popa
in
xor
sbb
dec
jmp
iret
dec
in
shrb
cli
js
sbb
mov
mov
mov
cwtl
cmp
cmp
cli
rcr
xchg
sub
lret
push
mov
jo
icebp
mov
cmpsl
in
dec
insb
and
sbb
imul
push
cmpsb
mov
insb
or
lcall
inc
sbb
insl
stos
js
jae
rorb
out
pop
cltd
cltd
jecxz
push
repz
insb
adc
xchg
xchg
cld
mov
mov
jbe
repnz
shr
fsubrl
xchg
dec
cmp
js
push
insb
aad
shr
mov
inc
and
test
adc
sub
cmp
hlt
insb
mov
or
insb
mov
sub
mov
leave
scas
insb
pop
test
push
sbb
push
push
lods
fs
dec
in
icebp
and
or
shlb
or
or
sbb
pop
xchg
out
sbb
and
test
mov
imul
dec
mov
pop
inc
insb
mov
ficoml
testl
mov
repz
in
adc
insb
pop
inc
sahf
js
adc
loop
and
ret
insb
push
pop
test
stos
out
in
pop
sbb
xlat
inc
insb
and
movsb
insb
inc
cwtl
lcall
sbb
inc
lock
sti
lahf
dec
popf
sbb
push
jo
in
cmp
push
int3
cmpsl
inc
out
push
cs
imul
adc
pop
jecxz
pop
daa
pop
cmpsb
xchg
fcmovnu
mov
fidivrl
push
insb
push
shl
mov
stc
pop
jmp
cmpsb
mov
and
pop
mov
xchg
fstl
insb
jmpw
sub
movsl
insb
or
test
imulb
popa
das
dec
sbb
insb
cmp
pop
fsubrs
insl
lret
mov
insb
cltd
mov
fwait
adc
xchg
hlt
mov
out
movsl
push
adc
mov
es
push
sbb
insb
shlb
repz
cmp
insb
xor
ss
pop
jbe
movsb
fs
mov
add
sbb
shrb
fisttpll
jns
out
dec
imul
loop
lods
cmc
pop
xchg
mov
mov
cli
inc
inc
inc
jl
insb
fcoms
xchg
in
sbb
push
dec
adc
and
shrl
data16
test
or
fstps
dec
cmp
jp
cmp
xchg
xchg
mov
insb
adc
aas
pop
repz
es
push
in
jmp
fsubrl
jg
iret
mov
data16
jge
ret
push
pop
mov
push
roll
insb
orb
inc
into
xor
insb
lea
movsb
push
icebp
subl
es
insb
lret
imul
sti
mov
jnp
je
pop
fsubl
inc
es
inc
lea
xor
sub
andb
rorl
push
pop
pop
pop
sbb
pop
mov
xlat
dec
clc
insb
negl
scas
mov
hlt
sbb
movntq
scas
lods
jbe
stos
out
xchg
insb
int3
sbb
xor
mov
and
lock
sub
jne
or
imul
test
xchg
jecxz
jnp
xchg
sahf
mov
sub
lret
cmpsl
mov
outsl
xchg
gs
mov
stos
out
repz
adc
jp
adc
sub
in
mov
or
mov
fwait
mov
push
gs
sbb
insb
hlt
mov
insb
mulb
adc
pusha
push
dec
mov
push
push
xchg
mov
mov
subb
test
les
sbb
insb
or
lds
sbb
jl
subb
dec
inc
ror
std
jl
scas
lods
dec
mov
cwtl
push
inc
jle
sahf
inc
popa
hlt
or
imul
xchg
dec
test
insb
mov
sub
push
mov
imul
mov
das
ret
mov
jle
sbb
jl
insl
lods
std
lret
imul
mov
adc
mov
icebp
xchg
imul
mov
insb
out
ljmp
mov
mov
pushf
lds
xor
jbe
dec
pop
mov
test
mov
sbb
cmp
insb
orb
mov
imulb
pop
lods
xchg
mov
and
insb
movsb
add
clc
aaa
push
insb
adc
xor
test
es
insl
pusha
dec
jl
icebp
movsb
push
mov
imul
pop
sub
stc
cmpsb
dec
cmpsl
xchg
inc
in
pop
mov
push
pop
popa
sub
dec
adc
insb
mov
scas
mov
xchg
js
sti
in
pusha
xor
packssdw
pop
cmp
popa
xor
mov
mov
or
xor
push
outsb
push
sbb
sub
lahf
sub
cmc
subb
rcrl
bound
addl
pop
lds
cmp
cmp
or
test
sbb
lret
lds
inc
xor
push
bound
and
inc
in
pop
lods
mov
adc
outsb
insb
stos
sbb
pop
xor
push
mov
addl
dec
pop
into
mov
or
insb
ds
repnz
insb
adc
imul
adc
sbb
inc
stc
xchg
insb
scas
pop
sti
nopl
xor
push
insb
add
jg
jne
sub
mulb
popa
outsb
aam
enter
sbb
mov
lock
mov
loop
jmp
cld
adc
inc
fs
pop
or
cmp
test
cld
imul
pop
test
jl
or
pop
xchg
stos
mov
lods
adcl
jmp
xlat
lods
pop
rorl
aam
out
pop
insb
push
xchg
dec
ffree
scas
lods
xchg
mov
es
mov
mov
lea
clc
mov
cmc
xor
push
pop
mov
sub
adc
jmp
into
cli
test
std
add
dec
mov
imul
test
scas
call
cmp
jns
out
js
jnp
cmp
gs
mov
fidivl
sbb
negb
push
mov
out
and
shr
pop
in
imul
lret
int3
jmp
xor
mov
xor
rep
dec
les
stc
xchg
jnp
adc
sub
inc
jmp
cmp
jae
cmpl
sub
loop
sbb
xchg
and
lods
and
sub
inc
pop
testl
ja
stos
aas
faddl
add
inc
nop
cmp
mov
push
mov
dec
dec
sti
or
movsl
repnz
pop
outsl
fmull
mov
insb
sub
adc
insb
xchg
or
add
xchg
movsl
inc
out
push
imul
subb
push
sub
pushf
add
or
or
and
rcrb
jmp
dec
mov
sub
xor
ds
xlat
fidivrs
mov
inc
xchg
bsf
mov
sahf
call
push
daa
popf
sub
popa
sti
cmp
push
stc
int
and
cmc
lods
lret
inc
mov
adc
mov
sti
add
lret
stos
insb
and
xchg
loopne
sub
mov
dec
daa
ljmp
fsubrp
jbe
pop
iret
shrl
fucomip
xchg
pop
inc
insb
adc
pop
mov
xchg
jo
dec
out
dec
lods
adc
mov
sbb
insb
lcall
sbb
inc
dec
scas
in
dec
insb
xor
or
insb
int
es
movsb
scas
mov
xchg
imul
xchg
pop
pop
cmpsl
sub
mov
pop
ss
and
fwait
shrb
cltd
out
in
lret
mov
js
gs
push
pop
sbb
das
xchg
lds
dec
imul
insb
gs
sub
push
jecxz
inc
sti
loop
push
push
sub
jg
pop
inc
sbb
leave
xchg
xchg
insb
fisubl
mov
insb
cs
pop
fwait
mov
xor
scas
lods
xchg
or
sub
dec
je
cmp
mov
sub
outsl
in
mov
jge
fdivl
gs
sar
mov
inc
insb
out
mov
or
mov
fwait
adc
pop
dec
add
clc
int3
mov
pop
xchg
ljmp
add
popa
je
insb
inc
sbb
lods
mov
sub
xor
cmp
pop
ret
insb
xchg
int
in
xor
xor
xchg
push
or
mov
xchg
pushf
xor
ror
scas
and
xchg
inc
inc
mov
lret
shrl
out
sub
sub
xor
inc
inc
jg
stos
out
xor
lret
dec
aas
sub
jge
dec
roll
in
mov
insb
or
mov
insl
mov
insb
lods
jge
dec
fwait
xor
pushf
in
push
sub
xchg
out
test
mov
adc
loopne
es
mov
xchg
and
xchg
shrl
mov
mov
xchg
imul
jle
stos
ret
pop
fisubrs
or
insb
popa
roll
dec
pop
out
pop
mov
int3
lock
call
mov
in
popf
les
xchg
imul
dec
rcrb
js
lods
inc
jp
hlt
mov
sbb
insb
add
fcompl
push
adc
insb
pusha
jbe
jno
inc
mov
insb
rcll
js
pop
je
pop
xor
es
orb
aad
pop
andb
pop
cli
and
hlt
mov
pushf
orl
stc
sub
insb
or
sub
insb
xchg
scas
adc
iret
mov
xor
jo
in
icebp
and
or
and
mov
insb
and
cmp
addr16
shl
ret
cmp
sub
mov
sar
pop
sti
andb
push
inc
in
fistl
imul
push
and
rorb
sbb
cmc
push
lret
xor
in
enter
aas
inc
xor
lds
xlat
sbb
push
dec
mov
push
inc
lods
neg
rcrl
mov
xor
test
das
pop
aad
gs
pop
adc
pop
insb
dec
test
add
insb
lods
in
mov
insb
xchg
fisubl
mov
mov
lcall
dec
insb
xchg
mov
clc
jno
daa
push
sar
jo
mov
mov
fiaddl
jp
imul
movl
test
aas
xchg
insb
adc
out
mov
adc
pop
enter
adc
imul
in
int
mov
push
sbb
mov
roll
dec
sbb
cmpb
dec
push
or
xchg
test
aam
out
insb
std
jl
ret
sbb
lds
sub
and
dec
bound
fstpl
ljmp
mov
insb
sahf
mov
stos
push
inc
bound
jmp
jge
insb
fidivrs
dec
cmp
mov
mov
push
jge
imul
aad
in
mov
insb
adc
fs
pop
xor
roll
insb
imul
jnp
cmp
cmpsb
cli
adc
sub
mov
dec
sub
xor
push
cmp
xlat
mov
imul
inc
and
insb
or
in
push
das
pop
in
adc
addl
scas
dec
int
aad
mov
daa
mov
push
subb
pop
pop
daa
clc
insb
push
and
fdivrp
mov
mov
push
pop
imul
insb
push
lret
jne
insb
cmp
orb
mov
out
ret
scas
test
push
mul
insb
sub
cmpsb
jl
jge
fisubs
push
insb
lret
dec
add
jnp
in
lds
dec
xchg
dec
lods
push
loope
dec
inc
jge
sbbb
roll
mov
imul
adc
xor
aaa
hlt
push
add
aam
inc
int3
shlb
int
gs
fisubrs
leave
xor
orl
loopne
ficompl
sub
hlt
mov
push
xchg
and
aad
insb
mov
or
and
fnop
arpl
inc
dec
jae
jmp
cmp
shrb
in
inc
jmp
mov
into
cmp
cmp
in
sub
nop
scas
mov
cmpsb
mov
lcall
push
pop
outsl
fs
fsubl
jp
shll
insb
aam
lds
xor
in
repnz
pop
dec
add
cmc
mov
push
insb
inc
loopne
and
insb
decl
xchg
sqrtps
lds
into
enter
or
xor
iret
insb
sub
sub
adc
sub
and
xchg
lds
aas
jle
adc
dec
sbb
movsb
insb
nop
or
pushf
dec
cli
fldcw
pop
stos
xor
or
pop
insb
test
push
pop
sahf
xchg
push
jp
in
loope
sar
insb
cmp
cwtl
cmpsl
push
pop
jae
xor
mov
call
xor
jbe
ss
jbe
arpl
lcall
jne
add
int
sarl
es
xchg
add
adc
insb
pop
cli
popa
inc
xchg
adc
inc
mov
xchg
pushf
insb
mov
scas
ljmp
leave
stos
adcl
in
or
xor
aad
push
xor
push
push
push
cmp
ljmp
sub
out
sahf
loopne
arpl
dec
leave
popa
sub
insb
cltd
stos
or
or
pop
idiv
insb
mov
scas
mov
mov
dec
add
xchg
dec
pop
je
insb
xor
icebp
pop
jmp
pop
adc
lods
mov
pop
adc
stc
sbb
cmpsb
rcrb
push
jns
jmp
loope
xchg
pop
repz
mov
jae
xor
fwait
adc
arpl
mov
mov
outsb
insb
cmp
pop
xchg
push
popa
push
in
call
pop
fbld
lods
ret
insb
jle
ss
cmp
adc
add
mov
and
sub
lods
hlt
cmp
popf
nop
and
xor
insb
cmp
pop
imul
jo
mov
lahf
test
aam
pop
loope
jb
das
sbbl
and
xlat
push
insb
outsl
mov
imul
adc
aaa
jnp
int3
mov
out
insb
push
and
sbb
cmp
and
jecxz
or
test
cmp
mov
fwait
push
mov
or
leave
push
scas
and
insb
ss
imul
dec
sahf
shll
push
test
scas
adc
inc
and
lea
jb
insb
pop
call
dec
mov
mov
inc
or
sub
jae
or
adc
fstpl
or
pop
jecxz
add
test
and
or
xchg
push
adc
fs
xor
xchg
fsubr
out
cmp
lret
xchg
mov
xchg
fwait
insb
xchg
stc
adc
inc
pop
lret
jp
dec
dec
nop
fisubrl
jo
imul
adc
mov
xor
jno
pop
mov
push
insb
jne
dec
jmp
insb
lcall
jae
negl
popa
adc
dec
push
test
mov
dec
xor
push
int
imul
in
push
and
insb
sbb
aaa
ret
loopne
insb
xchg
sahf
sbb
add
pop
pop
cmp
cmpsl
dec
js
push
test
pusha
fs
or
loop
insb
push
ss
in
pop
sub
scas
or
test
sub
insb
andb
pop
push
adc
push
iret
lods
push
dec
insb
outsb
mov
enter
roll
mov
insb
fidivs
std
add
mov
fldcw
out
mov
pop
xchg
ret
mov
add
insl
pop
imul
pusha
int3
jge
jle
mov
aam
shll
stc
push
hlt
imul
mov
or
pop
popl
and
push
insb
fsts
call
in
test
push
mov
xor
clc
aad
jg
mov
sub
sub
push
aaa
jecxz
mov
mov
insb
les
xorl
outsb
mov
es
dec
lret
lcall
xchg
mov
and
lock
jns
imull
arpl
leave
or
insb
mov
popl
lcall
xor
rclb
insb
ret
sub
fptan
roll
or
lahf
into
xchg
data16
dec
push
pop
stos
cld
icebp
imul
pop
jbe
inc
scas
stos
xor
sbb
in
in
test
insb
loopne
adc
ja
and
stc
lea
pop
pop
imul
lods
sub
mov
int3
xchg
popa
and
jl
insb
movsb
std
mov
xor
lds
mov
jecxz
imul
xchg
enter
xchg
dec
and
lret
push
andb
sarl
insb
cwtl
arpl
lcall
mov
inc
mov
insl
insb
out
mov
imul
mov
imul
jl
add
imul
je
cmp
pop
ret
jns
add
push
in
imul
test
mull
daa
arpl
fisubrl
insb
push
mov
in
subl
test
sbb
sub
sbb
cmp
push
sbbl
mov
inc
push
mov
jle
mov
dec
outsb
test
cmpb
insb
mov
xchg
push
cmp
dec
pop
in
push
dec
mov
aaa
dec
movsb
mov
cmp
sub
mov
iret
cmpsb
inc
or
mov
rol
insb
ds
int3
gs
jl
adc
loope
imul
mov
cmp
mov
cwtl
insb
and
outsb
mov
jns
imul
push
cmc
in
inc
inc
icebp
mov
stos
jl
and
in
bound
cmp
xor
insb
cmp
aam
sub
fistps
xchg
mov
xor
cmp
es
or
xlat
subl
stos
mov
leave
push
in
dec
sbb
pop
dec
lcall
js
adc
lret
in
pushf
jnp
insb
stos
pushl
xor
mov
cmp
pop
push
aaa
ret
adc
jno
shrb
cmpl
push
fstpl
cwtl
or
imul
sahf
inc
in
fnsave
inc
aam
mov
push
or
mov
fdiv
out
in
mov
imul
mov
inc
lods
insb
jno
hlt
stc
fsubs
inc
adc
lods
and
push
pop
popf
test
cmp
mov
je
xor
nop
pop
xor
inc
jne
arpl
test
xchg
cli
decb
or
jl
into
xor
mov
inc
outsb
inc
in
insb
iret
xor
mov
xor
popa
mov
aam
enter
arpl
mov
insb
andl
imul
int
dec
cmpsl
dec
popa
in
push
jg
orl
pop
jo
in
dec
iret
dec
bound
mov
in
push
roll
test
shlb
es
or
popf
lds
add
mov
icebp
mov
xchg
or
adc
mov
add
pusha
pop
test
jge
gs
mov
fmuls
mov
dec
dec
xor
xor
adc
mov
sbb
test
ss
push
sub
popf
pop
add
hlt
dec
fmulp
lcall
fsubrl
mov
sub
shr
xor
dec
mov
xor
push
push
es
popa
mov
daa
jae
jo
loop
pop
or
jo
push
nop
test
add
or
cltd
cli
movsb
mov
push
dec
cmp
jmp
mov
idivb
in
or
lcall
or
xor
mov
shrb
sub
cs
mov
fildll
push
testl
cmp
mov
scas
sub
pop
xchg
mov
out
in
faddl
mov
stos
push
jae
lret
sub
data16
or
adc
in
les
push
arpl
lods
imul
imul
lods
sarb
loope
xchg
sbb
insb
inc
mov
test
popf
test
xchg
insb
jmp
push
mov
pop
xor
cmp
xchg
jne
adc
ret
mov
dec
xlat
mov
or
mov
test
out
insb
lds
fadds
shl
insb
sti
shlb
pusha
xlat
xchg
lea
addr16
push
inc
out
insb
movsl
xor
scas
xor
xchg
addr16
jle
or
in
jp
daa
fiadds
dec
js
adc
stc
mov
shll
and
cld
sbb
dec
imul
in
sbb
insb
add
cmp
insb
mov
lds
and
or
pop
adc
cmp
push
xchg
pop
push
add
sbb
add
dec
cmp
dec
xlat
fisubrs
or
jbe
arpl
mov
insb
jnp
cmpsb
xor
mov
xor
stos
and
inc
aas
nop
sbb
cld
fldl
dec
dec
pop
sbb
push
and
jl
sbb
xchg
push
insb
push
popa
sub
cmpsb
sub
insb
les
add
jnp
pop
insb
stos
mov
loopne
cs
mov
insb
nop
sbb
aad
popf
insb
popl
xor
dec
sbb
popf
and
push
movsb
in
andl
insb
sub
cmc
hlt
mov
or
inc
ret
loope
cmpsb
cmp
xor
lods
xchg
sub
les
inc
insb
bound
lods
mov
mov
ds
fsubrl
in
insb
and
popf
pop
imul
push
jge
insl
in
cmpsb
add
test
mov
jne
lret
aaa
sbbw
cmp
inc
rorb
jnp
movsl
scas
inc
sbb
sarb
cwtl
cli
shll
cld
xchg
dec
std
insb
and
ret
fldt
setb
testl
shrb
jns,pt
mov
fldcw
dec
adc
inc
insb
cld
xor
or
test
push
xchg
jmp
mov
insb
fdivrl
xchg
xor
inc
roll
xchg
stos
mov
or
rcrb
mov
push
push
adc
sbb
fisubrl
ljmp
mov
ss
das
popa
insb
outsb
enter
fimuls
lock
mov
sbb
add
mov
push
test
push
mov
xor
mov
dec
jp
insb
xor
popf
pushf
mov
leave
rorb
test
movsl
addr16
mov
or
and
lret
pop
sub
rcll
dec
pop
add
sbb
push
addr16
insb
jmp
imul
ss
mov
insb
shr
fcoml
mov
insb
xchg
mov
aaa
push
insb
in
loope
aas
cmpsl
testb
xchg
cmp
cli
ds
in
mov
insb
jo
cmpsl
dec
popf
in
adc
jno
pop
sub
or
pop
mov
cwtl
inc
scas
into
test
push
mov
xchg
cmp
adc
push
insb
dec
and
sbb
nop
stc
inc
dec
loope
out
lock
repz
mov
test
shr
lret
and
js
in
sub
add
imul
jle
xchg
push
mov
adc
inc
insb
nop
sub
gs
inc
dec
sub
push
inc
inc
push
outsb
xchg
jl
testl
in
push
xchg
frstor
cmp
out
jmp
je
insb
mov
lret
xor
mov
insb
jmp
dec
iret
insb
in
mov
ret
and
insb
dec
movsl
shrl
pop
stc
adc
jmp
push
adc
loope
pop
test
xchg
stos
sbb
stos
mov
out
pop
bound
xor
rcl
insb
adc
jnp
addl
pop
pop
add
fldz
inc
dec
adc
mov
lret
insb
adc
jo
push
lds
jo
xchg
pop
stos
lahf
pop
pusha
leave
jnp
imul
jp
dec
repnz
mov
shll
inc
jl
nop
data16
jle
cmp
dec
insb
in
jnp
dec
jmp
mov
pop
nop
jne
int3
and
xchg
pusha
push
insb
shrl
pop
ja
dec
fidivl
lods
into
xchg
imul
inc
and
sub
push
adc
dec
idivl
sub
shl
jnp
mov
cmp
dec
add
out
gs
movsb
push
mov
sub
inc
push
or
scas
sub
aas
int
insb
push
inc
flds
mov
loopne
mov
dec
xchg
pop
mov
cmc
insb
push
xor
imul
pop
inc
in
push
lods
dec
ds
sbb
imul
or
or
insb
dec
adc
loopne
sbb
insb
fwait
pop
lock
in
dec
imul
insb
dec
add
push
pop
lea
jle
fisttps
and
xor
push
pop
orb
or
pop
pushf
push
insb
cmp
inc
mov
cmp
insb
and
sub
leave
adc
ljmp
sub
pop
pop
fcoml
call
xor
insb
push
lahf
mov
es
out
mov
mov
pusha
insb
xchg
test
lds
adc
sub
pushf
xchg
and
cmp
iret
into
sub
rcrl
add
in
rol
in
jb
mov
insb
add
dec
data16
or
push
adc
nop
addb
pop
std
dec
sbb
movsb
xchg
insb
jecxz
stc
push
cmp
xchg
jae
lret
insb
xor
imul
mov
push
inc
lods
xor
dec
add
stc
sub
mov
insb
je
and
mov
pop
mov
pushf
jecxz
push
pop
xchg
mov
iret
and
mov
cmp
imul
cwtl
add
insb
jle
add
inc
and
insb
sahf
sub
dec
mov
mov
dec
cmpsl
pop
mov
lock
iret
jle
insb
fsubp
adc
insb
mov
sti
jmp
insb
dec
pop
ret
scas
mov
insb
pop
pop
ljmp
ds
cld
in
adc
mov
jmp
stos
std
outsl
jb
gs
inc
mov
sti
adc
mov
inc
repnz
imul
xor
in
nop
es
insb
test
stos
inc
push
dec
inc
pop
arpl
sbb
mov
imul
mov
jl
and
bound
int
jmp
insb
mov
jo
sub
iret
shrb
daa
insb
inc
push
pop
xchg
sarl
jecxz
out
in
push
subb
cwtl
lea
insb
ret
arpl
xor
insb
mov
add
in
dec
cmpsl
mov
adc
out
out
jne
fwait
dec
jo
stos
insb
add
xlat
lret
mov
mov
cmpsb
shrl
jbe
add
mov
sbbb
out
mov
xbegin
scas
insb
lea
jg
insb
cli
cmpsl
push
pop
add
fiadds
lea
cmp
dec
cld
xor
jo
push
fdivs
mov
or
stc
cmpsl
mov
cmpsb
inc
fistpll
mov
adc
test
mov
addr16
adc
pop
mov
jge
in
sbb
insb
ss
jecxz
xchg
mov
xchg
insb
sarb
pusha
movhps
insb
mov
loope
jns
aaa
gs
sub
add
dec
push
and
dec
lds
clc
insb
pop
sti
push
xchg
scas
jle
dec
sbb
aas
insb
ss
dec
adc
jl
pop
xchg
insb
mov
aam
insb
mov
enter
lret
inc
push
lods
mov
insb
xchg
mov
in
cmp
lods
jp
das
xchg
pusha
mov
subb
insb
push
push
outsb
or
pop
push
push
inc
lds
insb
daa
inc
sbb
sbb
inc
nop
call
bound
pop
imulb
dec
or
cmpsl
sub
push
pop
mov
int
cld
xlat
mov
inc
cmc
cmp
mov
mov
xor
xor
sbb
cld
movsb
push
cwtl
or
gs
out
outsb
loope
sub
lds
data16
insb
aas
repz
pop
scas
insb
xchg
ret
loop
mov
adc
dec
imul
sar
out
js
addr16
repz
pop
fdivrl
out
jp
gs
or
jo
mov
aas
or
insb
inc
jns
sahf
mov
push
push
arpl
xchg
jb
cmp
insb
ljmp
sbb
or
imul
cmp
fucom
call
cmp
and
or
mov
cltd
adc
inc
insb
aad
out
adc
test
iret
jecxz
and
addr16
shr
insl
in
or
pop
icebp
jb
xor
mov
inc
leave
mov
insb
imul
loopne
movsl
cmp
sbb
shl
leave
xchg
insb
mulb
push
sub
subl
stos
pop
insb
fsubrs
ficoml
jno
adc
and
addr16
jnp
ljmp
insb
not
inc
add
fbld
insb
jo
sbb
pop
insb
repz
mov
int3
fcomp
mov
fldt
pop
mov
insb
mov
lret
out
insb
sub
testl
mov
insb
inc
test
fxam
movsl
dec
adc
pop
dec
loop
lods
arpl
arpl
imull
adc
xor
dec
lods
repz
xchg
push
popa
test
mov
dec
repz
out
call
adcl
add
jne
cmp
sbb
popf
mov
repnz
imul
js
fsubl
stos
bswap
insb
mov
scas
enter
out
lret
js
xchg
orl
sbb
sbb
insb
aam
aaa
cmp
lods
insl
movsb
insb
nop
std
loop
rolb
insb
test
mov
mov
and
out
jp
xchg
insb
mov
adc
shrb
fwait
subb
insb
popa
push
add
jb
cmp
pusha
sarb
sub
fidivrl
mov
leave
shll
clc
ret
ja
int3
mov
insb
aad
imul
push
sub
sub
mov
push
inc
iret
or
dec
push
sub
xchg
push
fwait
jbe
push
mov
adc
mov
xor
xor
xchg
rdmsr
jmp
fwait
div
push
in
jb
pop
cmp
sub
lods
or
sub
xor
pop
adc
mov
push
sti
jo
inc
leave
out
push
pop
fidivl
mov
mov
cmp
into
or
and
mov
pop
insb
shl
and
or
jbe
ljmp
lcall
inc
insb
cmp
or
xor
pop
push
pop
mov
jbe
insb
lret
scas
push
cmpsb
nop
into
cmp
dec
add
insb
gs
mov
push
inc
pop
push
sbb
mov
das
xor
insb
mov
xchg
test
xchg
aam
cwtl
scas
adc
ret
repz
push
dec
leave
lods
lret
jge
mov
jp
insb
mov
jecxz
dec
insb
cld
or
jmp
imul
mov
je
in
int3
add
pop
jbe
insb
lods
or
insb
loopne
push
mov
add
adc
dec
lock
lods
psraw
sub
or
fsubs
insb
subb
aam
in
movsl
push
inc
or
cli
gs
xchg
or
insb
dec
icebp
repnz
loopne
mulb
repz
inc
mull
insb
push
mov
xchg
dec
insb
pop
data16
sbb
sarl
ljmp
addr16
dec
mov
outsb
mov
and
imul
clc
sti
lcall
and
add
rcl
lods
sysenter
fs
and
gs
jl
and
push
mov
adc
movsb
sarl
insb
dec
sahf
movsb
or
sbb
insb
xor
je
ret
fnsave
bound
test
stc
popf
mov
adc
sbb
xchg
push
jae
fisubrl
jb
pop
push
or
and
inc
sub
xor
and
push
into
test
dec
imul
fidivrl
aaa
out
jg
shrl
push
negl
xchg
insb
ret
mov
or
pop
cwtl
xchg
imul
cmp
or
test
ret
lock
leave
test
pop
stc
cmp
out
fldenv
sub
fdiv
or
orb
sbb
out
lahf
into
jmp
jns
test
repz
or
das
in
push
scas
lock
pop
adc
insb
imul
xor
addb
push
je
pop
dec
cmpsb
pop
sub
cmp
jbe
lods
shr
ret
imul
leave
cmp
cmp
push
inc
scas
ret
sub
cltd
xchg
insb
add
jecxz
sub
inc
je
test
jne
or
push
fidivs
sub
loope
int3
mov
in
insb
insl
mov
daa
mov
adc
adc
nop
jae
fadd
gs
hlt
outsb
sbb
nop
and
je
imul
cmp
mov
ret
or
xchg
ljmp
insb
fwait
pop
adc
mov
insb
pusha
lea
xor
insb
lcall
xor
pusha
pop
dec
mov
jb
insb
cmp
jmp
jmp
fimull
mov
inc
je
jnp
jne
or
lods
cmp
sbb
int3
inc
insb
rcrb
ret
arpl
cmpsl
imul
cmp
inc
jmp
lds
clc
imul
pushf
add
stos
scas
xchg
lret
movsb
mov
dec
dec
jp
insb
xchg
movsl
scas
xchg
pop
lea
dec
xor
or
int3
clc
lock
sub
test
mov
insb
data16
push
subl
insb
hlt
sti
mov
icebp
insb
lahf
scas
or
fstp
repnz
mov
mov
dec
mov
and
push
subb
hlt
enter
std
popf
pop
jp
daa
jbe
mov
mov
pop
insb
imul
add
insb
mov
ss
insb
xor
lds
mov
jbe
lea
mov
arpl
push
outsb
in
xor
mov
insb
xchg
and
mov
mov
inc
dec
sub
inc
cmp
cltd
stos
insb
lcall
jae
call
or
frstor
and
movsl
mov
in
icebp
sbb
movsb
insb
jb
imulb
insb
jne
cwtl
inc
loope
xor
xchg
mov
test
insb
js
fwait
in
jae
push
mov
imul
xorb
lahf
lea
sbb
jns
fcoml
loopne
stc
stos
arpl
jle
xchg
pop
pop
jmp
fs
lods
imul
and
jecxz
iret
cmp
pop
ret
xchg
push
xchg
daa
xchg
dec
xorb
cmp
insb
arpl
shrb
mov
push
xchg
mov
out
je
loope
gs
test
mov
shrl
fmul
push
and
imul
fwait
test
lret
push
xor
push
insb
cmp
in
or
into
add
push
sbb
insb
ucomiss
out
insb
push
jmp
fldl
faddp
xlat
insb
addr16
cmp
push
insb
mov
add
insb
and
sahf
lea
inc
sbbl
je
pushf
adc
test
insb
push
cmp
mov
jg
xchg
and
mov
insb
test
push
adc
loopne
ret
shrb
xor
mov
sbbb
enter
int3
push
aad
insb
popf
ficoms
sti
dec
call
dec
push
rcrl
jne
insb
jl
cld
inc
sbb
add
push
sahf
lret
cwtl
das
mov
mov
sbb
cmpxchg
jnp
pop
add
dec
out
imul
daa
icebp
insb
es
pop
sub
stos
dec
loopne
lods
mulb
sti
insb
xor
aaa
in
jmp
popl
xor
std
ror
adc
mov
sbb
push
push
pop
imul
and
push
xorl
fbstp
jo
insb
jmp
pusha
pop
push
rorb
into
dec
dec
insb
out
movsb
push
sbbb
jl
scas
popaw
adc
ss
add
dec
out
pop
push
insb
fdivs
insb
fdivr
fisubs
adc
insb
mov
nop
xor
insb
leave
mov
sub
lea
insb
popa
aas
push
hlt
test
xor
ret
jne
xbegin
adcb
push
insb
mov
mov
icebp
and
push
jl
imul
push
pop
pop
mov
adc
stc
repz
xor
insb
mov
stos
enter
push
imul
cld
cmpsl
sbb
mov
stc
pop
pop
adc
nop
lods
mov
insb
sahf
leave
xchg
cmp
mov
stos
mov
mov
test
pop
xor
aad
mov
ret
xor
jns
mov
sub
adc
fmull
mov
adc
imul
or
cmpsb
jl
ret
test
lods
jl
pop
sbb
sbb
pusha
jl
sub
jp
mov
leave
pop
sub
jg
xor
dec
jnp
in
gs
push
testb
sbb
icebp
test
sub
sbb
mov
cld
ror
jge
pop
xor
sub
cmp
dec
in
xchg
ror
sub
xlat
test
push
je
adc
adc
enter
or
test
sbb
mov
jno
dec
fsub
jb
pop
or
pop
adc
scas
popa
xor
xlat
add
lea
push
push
repz
pop
mov
insb
adc
addr16
insb
popa
pop
xor
cmp
imul
call
pushf
movsl
insb
pushf
fisttpll
mov
sub
push
dec
fucomi
dec
xchg
push
andl
insb
xor
jnp
jae
and
cmpsl
and
cmp
stos
cmp
loop
js
scas
lods
xchg
mov
dec
ds
mov
loope
int
jns
icebp
xor
fbstp
js
arpl
add
sub
shll
xor
jns
push
sbb
orl
add
fldcw
and
dec
in
pop
imul
icebp
mov
in
sub
je
loopne
aaa
jno
push
add
loop
les
push
insb
add
hlt
mov
leave
andb
inc
jmp
pushf
pop
outsl
sbb
mov
ja
pop
cmp
in
mov
add
ss
mull
in
xlat
leave
lret
jns
cmp
repz
add
aas
or
bound
insb
sbb
outsb
sahf
pop
in
call
cld
pop
xchg
rcll
jns
call
adc
pop
movsl
jnp
mov
movsb
popa
adc
imul
je
mov
xor
sbb
and
xor
dec
jp
nop
cmp
cwtl
test
push
popf
adc
imul
push
jl
xor
gs
lcall
push
sub
add
mov
jae
fidivrs
bound
ss
int3
jb
ds
push
xchg
insb
jg
add
insl
in
insb
fidivrl
jmp
and
aas
into
pop
out
jmp
sti
push
sbb
xchg
paddusw
push
push
test
or
dec
xchg
push
lods
rcll
mov
or
test
divl
mov
push
cwtl
pop
push
divb
insb
mov
jns
or
sbb
clc
mov
out
arpl
push
sub
jl
inc
sbb
imul
jmp
pop
cwtl
scas
jmp
jmp
imul
mov
push
add
pop
inc
mull
xchg
dec
push
mov
in
nop
addr16
sub
mov
into
pop
sbb
ret
clc
insb
iret
insb
adc
testl
or
inc
jge
lods
call
push
add
push
aam
mov
sbb
jl
cld
movsl
pop
sbb
xchg
bound
and
test
push
lret
dec
xchg
cmp
cmpsb
xor
xchg
xchg
icebp
xor
loope
and
lods
movb
and
es
aad
xor
lods
shll
sub
aad
lahf
insb
cmp
aam
insb
inc
js
jmp
and
insb
push
loope
ret
lock
lea
sbb
out
add
jl
outsl
mov
int3
dec
cmp
mov
jno
lock
in
mov
lea
mov
test
popa
insb
pop
nop
dec
mov
insb
ja
clc
iret
std
test
cmp
mov
sar
jo
and
jmp
insb
add
test
std
or
inc
sbb
dec
hlt
push
mov
add
insb
aaa
jg
ret
lods
pop
pop
fidivl
or
jo
icebp
pushf
xchg
fldl
and
fiaddl
mov
cli
push
pop
jo
fucom
adc
pushf
out
ret
insb
jl
or
shrb
mov
xlat
jns
adcb
jl
insl
insb
sub
in
push
popa
cs
pop
out
scas
insb
inc
testb
xor
mov
xor
pop
rcl
mov
mov
pop
imul
mov
and
sub
cs
xchg
lret
cld
cld
inc
insb
in
call
mov
add
in
mov
sbb
lds
lock
outsb
std
and
lods
or
adc
cs
pop
jb
mov
cmp
xor
add
or
fs
ret
or
push
mov
shrl
pop
mov
add
test
mov
je
adc
push
daa
insl
xor
or
mov
out
insb
mov
and
add
js
inc
pop
fisttps
insb
jns
ljmp
inc
outsb
les
dec
dec
adc
push
mov
insb
mov
scas
mov
std
fsubrs
imull
imul
lods
loop
pushf
inc
sbb
xor
mov
add
dec
fsubrl
test
subl
cld
or
lods
es
lahf
clc
mov
push
imul
xchg
jge
lea
cs
stc
outsb
fucomp
in
push
mov
push
insb
cmc
std
adc
ror
subb
inc
mov
dec
dec
insb
or
push
mov
leave
cli
insb
cmp
mov
testl
jg
pop
xchg
test
jle
mov
jne
stos
inc
insb
adc
test
addr16
xchg
insb
test
pop
js
jno
aad
push
inc
xchg
adc
mov
imul
cwtl
leave
popa
jp
nop
stc
sub
mov
divb
rcll
jge
ja
out
fiaddl
cltd
sub
ret
insb
lahf
inc
stc
aad
jbe
sub
lea
push
mov
xor
sbb
xchg
sbbl
pop
jae
iret
lret
les
into
stc
insb
pop
lcall
pop
mov
mov
out
xchg
js
arpl
xor
adc
insb
add
imul
push
in
inc
push
mov
push
insb
xlat
lret
cmp
ss
pop
xchg
push
cmpsl
cld
insb
mov
xchg
aad
out
cwtl
sub
mov
or
outsb
xor
push
mov
imul
pop
in
fdivs
mov
stos
and
jg
ljmp
xchg
sbb
movsl
jl
movsb
aad
daa
sbb
insb
divb
or
dec
lods
or
push
push
inc
mov
lea
test
mov
popf
push
imul
imul
iret
dec
cs
in
lahf
aaa
fcompl
inc
imul
je
cmp
negl
pop
jmp
js
inc
sbb
pushf
dec
imul
and
lods
in
aaa
lods
inc
jl
dec
insb
dec
sbb
adc
and
into
xchg
and
mov
fsubs
add
cmpb
mov
cmp
insb
lret
scas
add
inc
mov
or
push
in
dec
arpl
push
mov
test
fcoms
gs
in
into
mov
push
sbb
js
dec
iret
pop
inc
scas
or
mov
daa
or
push
jmp
sti
insb
subb
fisttpll
xor
push
mov
adc
xor
out
insb
inc
jl
cs
xchg
jo
insb
loope
shr
rcrb
mov
rcll
pop
insb
dec
pop
stc
dec
mov
repnz
ja
enter
cli
in
add
shrb
lock
mov
popa
or
push
ja
jo
loope
in
sub
cmp
or
repnz
fsubl
shll
int
xchg
adc
xor
push
incl
push
fcompl
jp
cmp
rcrb
int
fwait
imul
mov
dec
ret
loope
insb
leave
cmp
dec
std
imul
mov
inc
insb
dec
dec
add
loopne
cmp
mov
jge
icebp
gs
push
or
rorb
in
mov
in
dec
pop
sub
mov
shlb
enter
fisubrs
xchg
ja
fdivrl
test
sub
jae
les
jmp
gs
and
inc
mov
movsb
mov
ds
push
pop
pusha
imul
cmpl
dec
push
inc
mov
mov
jns
bound
dec
mov
outsb
or
adc
rcr
dec
mov
loopne
lods
int
push
inc
lods
cs
mov
dec
mov
jl
popf
mov
outsb
lods
xchg
loope
mov
or
sub
scas
aad
or
mov
sbb
pop
pop
test
jne
xlat
fs
and
daa
or
mov
into
jg
push
pop
and
pop
popa
insl
pop
cmc
in
or
insb
stc
lods
cmpsb
mov
insb
sbbl
mov
cmp
cmp
shl
fisubs
dec
pusha
mov
fs
add
ss
xchg
sbb
mov
mov
push
and
jp
daa
shll
sub
mov
mov
xor
lods
mov
movsl
loopne
out
and
in
and
xor
insb
pop
mov
sbb
lods
xor
fwait
pop
insb
cmpsl
imul
xchg
xchg
lods
xchg
int3
insb
jno
mov
xor
sbb
jmp
sbb
in
dec
lods
push
sub
xchg
cmc
imul
roll
sbb
insb
adc
stos
or
jns
dec
push
pushf
pop
xchg
or
xor
xor
xchg
mov
fidivl
sub
add
push
imul
adc
imul
test
push
sbb
pop
out
movsb
roll
mov
add
cmc
or
xchg
xor
test
or
popa
cs
sbb
add
daa
xchg
insb
dec
sub
addr16
xor
ljmp
in
in
dec
insb
lret
arpl
andl
cmp
pushf
mov
out
xchg
aam
rorl
rcll
iret
out
ret
sbb
sbb
pop
test
push
mov
mov
adc
stc
xor
jl
xchg
xchg
mov
ret
clc
xchg
mov
dec
test
insb
std
xchg
sub
out
aas
test
pop
das
insb
daa
mov
loope
mov
mov
inc
imul
cmpsl
pop
sub
dec
enter
imul
int
das
aam
out
cmp
inc
lret
mov
xor
ljmp
inc
insb
push
fildll
jnp
sbb
pop
daa
inc
fcmovnu
mov
pop
push
xor
push
outsb
imul
les
loope
pusha
xchg
insb
jbe
mov
aas
or
lea
rep
and
cmp
sbb
dec
das
outsb
in
push
icebp
sbb
inc
pop
outsb
jb
xchg
fisttpl
aaa
outsb
push
imul
or
or
cmpsl
lahf
decb
xor
mov
pop
insb
ret
xor
mov
mov
add
int3
sti
jnp
out
insb
iret
inc
stc
fwait
and
dec
insb
aas
shl
adc
push
sub
adc
in
adc
push
pop
and
hlt
mov
in
out
das
adc
in
mov
mov
out
ds
xchg
pushf
jge
jecxz
insb
and
dec
insb
cmpsl
push
sub
dec
rcrl
ljmp
xchg
adc
sbb
insb
push
pop
or
cli
mov
mov
cmp
lock
push
jecxz
movsl
xchg
dec
sub
inc
xchg
mov
mov
shld
rcrb
push
test
jne
aaa
pop
ljmp
dec
sub
icebp
movsb
dec
in
jo
sub
add
ja
push
cld
aaa
xor
or
jns
jl
xlat
or
andl
imull
iret
dec
sub
mov
pop
leave
cmpsl
xor
sbbb
call
jmp
sub
jne
or
stc
dec
inc
xor
data16
shl
insb
pop
sub
cwtl
cmp
mov
fdivrs
inc
mov
in
push
outsb
sahf
jecxz
insb
sub
cmp
inc
ds
inc
mov
outsb
mov
and
push
jge
jns
iret
sarl
push
add
push
dec
insb
in
test
add
cmpl
xchg
rcr
and
xchg
xor
xchg
mov
mov
movsl
cli
push
cmp
inc
cmc
sub
mov
lret
lret
mov
xor
repnz
mov
aaa
mov
imul
stos
adc
jp
push
stc
add
pop
push
test
lea
popa
bnd
insb
popf
xor
inc
push
jecxz
out
jbe
fildll
push
and
arpl
and
sub
dec
inc
adcb
ret
push
dec
pusha
push
imul
xchg
push
std
jbe
test
add
insb
fidivrs
lds
cli
test
es
repnz
push
cltd
and
addr16
movsl
in
in
push
sbb
xchg
or
rcl
mov
insb
add
adc
xchg
cmp
sub
icebp
insb
filds
add
jne
insb
or
xor
pop
mov
dec
arpl
sub
aas
mov
movsb
inc
insb
test
roll
sti
add
mov
or
insb
mov
lret
lea
ja
inc
je
jo
imul
xchg
cmp
push
es
adc
inc
imul
insb
pop
stos
xor
dec
mov
xchg
cmpsl
push
bound
mov
jp
lret
or
insb
cmp
pop
mov
insb
lea
ja
mov
mov
sahf
insb
push
mov
pop
dec
dec
orb
push
xchg
imul
cli
insb
iret
xor
std
jp
xorl
adc
mov
dec
and
xchg
cmpl
push
out
sbb
xor
in
das
cmpsb
shl
mulb
out
scas
cmp
lods
and
or
lea
jns
das
pop
mov
inc
pop
and
sub
aam
out
adc
jge
cmp
pop
dec
push
mov
insb
fldt
cmp
insb
leave
lcall
mov
insb
test
xorl
test
int3
xchg
inc
adc
push
mov
dec
lcall
xor
insb
shll
cmp
lock
insb
mov
test
ret
inc
mov
cs
sub
scas
cld
loop
fisubrl
sub
stos
cli
inc
je
sahf
insb
adc
jb
mov
add
insb
dec
mov
push
aas
jo
mov
hlt
insb
mov
dec
sub
insb
ret
jb
inc
jl
gs
add
aam
cld
fistpl
call
ret
push
pop
clc
aam
add
stos
insb
push
cmc
inc
and
jo,pt
jmp
in
shll
xchg
insb
jecxz
and
mov
insb
test
fwait
insb
jg
sbb
insb
pop
dec
sub
shll
mov
hlt
decb
insb
push
rclb
sub
pcmpgtw
ret
jl
sub
pop
out
cltd
xor
push
vphaddwq
sub
js
sbb
popf
xchg
dec
and
rcrl
loopne
stc
cmp
mov
dec
jo
push
mov
dec
or
fwait
xchg
jl
mov
sbbb
mov
js
pusha
insb
lahf
lret
cmp
and
insb
mov
call
mov
rorl
insb
or
or
in
jo
insb
mov
mov
pop
fildl
push
in
rcll
out
idivl
cmpsb
jge
push
and
add
xchg
in
jl
dec
jne
std
push
pop
outsb
push
sbb
lods
lock
lods
insb
xchg
push
in
or
fdivr
into
mov
adc
xor
xlat
adc
mov
ja
lods
insb
sbb
into
in
leave
sub
stos
mov
dec
push
or
imul
insb
jbe
and
cld
leave
fmul
xor
sub
jmp
push
or
inc
xor
xchg
push
sub
es
loope
dec
mov
insl
xor
jae
cmpl
insb
in
or
das
and
push
insb
lret
xchg
adcb
shlb
ss
push
xchg
imul
cmc
mov
sub
insb
data16
ret
leave
ss
jle
test
icebp
stos
push
aam
and
repnz
xor
jnp
movsb
mov
ss
in
int3
jp
cld
add
test
xor
dec
mov
je
and
pop
arpl
sahf
fisubrl
cwtl
xchg
lods
inc
dec
in
fs
and
fsubl
mov
cmp
stos
out
adc
pop
jecxz
into
mov
filds
imul
mov
shll
popf
mov
gs
cs
ljmp
daa
push
int
jb
mov
cli
je
push
mov
add
pop
jle
push
bound
popf
jo
or
sbbb
adc
jno
subb
pop
bound
cld
push
ret
mov
push
fcomps
add
dec
rorb
cmpsb
imul
std
ret
lret
jns
insb
dec
or
insb
iret
ja
mov
loope
jle
mov
push
adc
cs
mov
imul
insb
sarb
mov
insb
xchg
lods
into
movsb
adc
dec
insb
loop
inc
add
pop
es
insb
pusha
pop
jne
gs
or
insb
and
stc
jl
dec
jbe,pt
lcall
dec
jl
insb
loopne
cmc
sbb
or
insb
pop
push
out
mov
xor
jge
loop
xchg
das
push
leave
lcall
aad
push
ret
insb
ficoms
movsl
incl
js
test
in
mov
mov
dec
sub
inc
or
or
js
popa
pop
mov
fsubs
push
std
flds
push
lea
xchg
or
mov
fwait
insb
jmp
pop
ss
push
dec
sti
mov
push
in
jbe
fiaddl
lcall
test
mov
dec
cli
adc
popa
ret
dec
mov
fmul
cmp
fldl
add
int3
insb
and
add
ss
mov
insb
sbb
add
sarl
mov
jne
mov
dec
push
and
jmp
lcall
jle
adc
in
sub
ljmp
sbb
popa
inc
xor
insb
mov
dec
mov
insb
inc
push
dec
cmp
imul
shrd
and
add
insb
sbbl
push
call
mov
in
mov
pop
inc
jge
push
outsl
sub
nop
int
adc
bound
ss
push
jne
imul
outsl
lods
or
in
push
mov
push
mov
xor
pusha
cmp
jle
sbb
icebp
xchg
jae
arpl
gs
and
pop
rcrb
js
cs
dec
add
jmp
xor
inc
scas
dec
imul
mov
push
mov
cld
pop
xor
cmc
iret
popa
dec
cmp
push
shrb
shlb
push
sbb
push
xchg
mov
test
out
aaa
sbbb
test
insb
mov
dec
insl
adc
or
push
lcall
pop
push
and
cwtl
gs
adc
insb
add
push
adc
and
or
mov
test
imul
jge
cmp
cmp
mov
inc
ret
stc
push
idivb
mov
cs
movsl
iret
inc
push
pop
fisttpl
cmpb
gs
mov
lret
dec
jmp
dec
xor
out
std
inc
imul
cwtl
sbb
arpl
mov
sti
pop
lea
pop
stos
pop
lahf
jnp
gs
adc
or
pop
cld
insb
lods
mov
testb
insb
push
out
add
int
push
test
xor
clc
insb
lds
xlat
jne
aas
fsubrl
in
hlt
icebp
int3
jbe
adc
clc
xlat
mov
insb
ds
cld
std
push
je
insb
sbb
fnstsw
mov
jnp
adc
mov
add
rcl
mov
sbb
dec
mov
mov
pop
cmc
insb
jmp
dec
jge
insb
hlt
and
xchg
stc
push
imul
push
sbb
dec
cmp
ja
push
insb
inc
fdiv
and
lret
sbbb
and
mov
mov
loop
shll
xchg
xor
int3
out
push
mov
in
add
sub
gs
xlat
outsl
and
lods
ret
or
int3
outsb
in
stos
mov
fdivrl
cmpsb
aaa
std
mov
mull
push
push
pushf
sub
adc
fsubrl
dec
inc
and
pop
sbbl
pop
push
sub
mov
ja
mov
push
jno
jl
xchg
int
mov
pushf
out
lods
jns
jmp
out
sub
hlt
add
adc
mov
jbe
xchg
push
pop
mov
lods
shrl
xor
and
insl
pop
sub
jle
dec
outsb
fidivl
data16
js
or
sbb
je
sti
push
cltd
jg
ret
inc
insb
mov
jne
pop
sub
xor
in
icebp
push
test
mov
add
xor
data16
cwtl
dec
add
dec
sarb
jmp
insb
aam
loopew
mov
std
lds
fcmovne
sbbb
lods
addr16
xlat
mov
cmp
cli
jne
in
jae
xor
xchg
pop
dec
mov
loopne
fldenv
sub
fwait
arpl
mov
inc
mov
enter
mov
cmovg
cmp
jecxz
inc
shll
push
adc
push
test
movq
sub
rcr
lret
insb
jp
loopne
cmp
fldenv
or
and
insb
into
push
fs
dec
test
in
cmp
jns
cmpsb
imul
subl
xchg
fnsave
pop
iret
popf
in
xchg
out
clc
mov
les
mov
insb
xchg
inc
fistpll
jecxz
cs
fidivrs
jnp
sub
in
jb
shrb
dec
ret
mov
into
pop
dec
cmpsb
imul
shr
outsb
mov
imul
mov
pop
cmp
adc
mov
into
imul
in
loope
cmp
insb
pop
cmp
inc
icebp
adc
jae
lock
test
sub
push
aad
pop
sub
outsb
adc
sarb
xchg
jae
lahf
mov
enter
jb
stc
cltd
insb
pop
movsl
jno
cmp
and
cmp
cmp
pop
jae
push
outsl
pushf
enter
icebp
add
xorb
jg
test
hlt
imul
xchg
dec
loopne
sbb
push
mov
or
outsl
pop
gs
aad
cmp
fscale
mov
xchg
je
inc
lahf
lea
aam
aas
sbb
repz
or
lods
xlat
jae
loope
and
nop
in
push
sub
push
mov
and
dec
insb
xchg
das
ret
dec
outsl
mov
lods
push
mov
sbb
jbe
and
mov
jo
insb
aam
divl
xor
and
cmp
cmpl
cld
jg
aaa
inc
adc
or
test
scas
jb
adc
cmpl
xchg
push
imul
pop
push
movsl
jl
xchg
jmp
add
and
inc
xchg
push
insb
mov
inc
in
aam
mov
xor
inc
lods
loopne
gs
scas
cmp
lock
dec
push
mov
andb
jl
insb
adc
fidivs
stos
xchg
in
outsl
mov
imul
mov
jge
cld
adc
inc
nop
pop
mov
enter
insb
xchg
xchg
xlat
fisubs
es
insb
dec
xor
scas
mov
mov
out
or
icebp
cld
cmp
imul
mov
push
data16
lcall
xchg
insb
xchg
xlat
ss
mov
insb
xor
xor
out
cmp
sbbb
imul
mov
insb
popf
cwtl
scas
add
push
cs
in
ret
scas
jecxz
ficoms
insb
jmp
test
out
fwait
ljmp
out
add
ja
imul
xchg
pop
loope
cmp
out
mov
jnp
add
push
sub
cltd
in
cli
insb
aam
stc
sbb
mov
mov
push
lret
dec
gs
inc
fwait
jo
in
mov
cmc
mov
fcoml
nop
insb
stos
fldl
mov
xchg
dec
inc
repnz
lods
movsb
outsb
jae
mov
cmpsl
insb
in
xchg
std
leave
xchg
jg
adc
in
jo
arpl
das
insb
adc
mov
in
popa
xchg
fcmovne
mov
jmp
test
cmp
popf
arpl
jge
stos
fs
es
sub
fs
aaa
shl
push
outsb
cwtl
or
mov
sbb
mov
insb
decb
sbb
insb
les
jnp
push
jmp
pop
or
jmp
mov
int3
mov
add
mov
insb
lds
push
or
sbb
es
add
pop
insb
nop
push
imul
jnp
cmc
pop
shrl
mov
aad
mov
out
mov
pop
lea
inc
dec
pop
sbb
int3
les
sbb
imul
data16
sbb
in
lahf
insb
mov
outsl
imul
aaa
imul
lock
adc
xchg
sub
xor
pop
cwtl
ret
insb
aaa
cmpsb
loopne
roll
ficomps
mov
sbb
lock
jle
insb
mov
pop
lgs
jbe
cld
fistps
push
xor
xor
add
xchg
ficompl
push
and
push
out
adc
and
scas
test
hlt
and
shrb
insb
lods
cmp
push
adcb
insb
les
dec
jmp
sbb
mov
add
cwtl
ss
fwait
sbb
scas
pop
jb
js
insb
push
popf
call
shrb
in
mov
lds
pop
test
xlat
fdivrl
push
ret
add
insb
adc
je
insb
push
std
sub
jo
push
inc
stos
loopne
cmp
jnp
pop
dec
frstor
sub
call
insb
aad
push
add
push
cmp
mov
pop
bound
fidivrl
cmc
dec
pop
je
insb
out
fimuls
cltd
lret
dec
pop
das
fsubrs
into
sub
ss
sarb
insb
nop
jnp
or
test
xorl
or
lods
dec
addb
loop
orb
sbb
andl
bnd
cwtl
stc
test
mov
cmp
mov
jo
insb
test
neg
cld
and
icebp
and
xchg
insb
jmp
ja
insb
pop
rcll
push
loopnew
repnz
dec
inc
cwtl
mov
orb
insb
std
xchg
push
cmpsl
sbb
inc
jae
test
mov
jle
cs
in
mov
push
pop
insb
push
xor
push
out
pop
pop
insb
sbb
ret
rolb
xor
dec
or
dec
cmp
add
out
out
call
andb
ret
pop
mov
mov
mov
cmp
adc
mov
push
dec
insb
fisubrs
sahf
leave
test
inc
lahf
jb
stc
dec
push
mov
xchg
movsl
mov
js
insb
jg
sub
pop
mov
hlt
mov
sbb
bound
fcmovu
mov
shll
dec
add
or
pop
push
lret
sbb
jbe
insb
addr16
scas
outsl
iret
insb
clc
pop
adc
incl
aad
stos
inc
inc
cld
test
rorb
sbb
ret
cmc
inc
pop
insb
add
sub
sahf
les
mov
insb
hlt
test
scas
inc
cs
imul
mov
adc
dec
movsb
cmp
pop
cmp
xor
mov
inc
sbb
jbe
mov
sbb
je
and
fimuls
gs
insb
scas
push
push
das
popa
dec
cld
scas
ja
dec
imul
lahf
dec
add
jmp
sub
mov
mov
icebp
push
push
outsb
xor
je
out
sub
faddl
inc
adc
andb
iret
call
and
xor
inc
insl
in
aam
push
mul
sbb
das
in
or
imul
fistl
cmp
dec
pop
sbbl
pop
jle
jno
js
inc
mov
cmp
dec
add
add
aad
insl
push
jge
mov
in
mov
lretw
sub
pop
and
decl
scas
ret
sbb
fs
inc
push
outsl
inc
jne
test
insb
repz
push
xor
xchg
outsb
sub
jno
cmp
cmp
cld
imul
stos
dec
or
scas
jbe
es
frstor
cmp
insb
jmp
sub
mov
call
mov
push
shlb
test
cmp
lods
into
daa
test
push
sub
sub
push
jo
clc
cmp
sbb
pop
pop
add
inc
cmp
push
push
je
andl
jbe
fimuls
pushf
out
in
push
outsb
adc
push
adc
sbb
iret
in
xlat
andps
fistpll
fwait
scas
dec
jmp
outsb
pop
jecxz
mov
loope
pop
sahf
push
or
and
cmpb
mov
and
addb
or
imul
js
dec
mov
enter
jle
jg
aaa
data16
insb
sbb
stos
ss
insb
dec
aad
pusha
mov
mov
int
lea
mov
adc
lods
add
push
insb
cmp
js
xor
mov
mov
xor
insb
es
mov
xor
outsb
outsl
ljmp
pop
mov
mov
mov
insb
inc
mov
and
inc
test
insb
dec
jns
or
inc
out
lods
imul
je
cwtl
subb
adc
insb
dec
inc
mov
dec
repz
insb
cmp
testb
cltd
jmp
ds
pop
in
mov
pop
insb
and
call
ret
enter
mov
insb
mov
mov
subl
mov
insb
enter
into
xor
adc
movsl
sub
ds
xchg
pop
ss
int
add
xchg
test
sub
fwait
jg
fists
pop
es
mov
iret
lods
sbb
dec
jne
pop
sub
ficompl
insb
gs
rcrl
pop
sbb
push
inc
ret
lret
insb
inc
sbb
pop
in
insb
cmpsb
jnp
sub
and
add
mov
add
rolb
sbb
push
out
insb
add
bound
sbb
cmp
insb
test
imul
dec
dec
inc
sub
scas
into
cmpsb
rcll
jg
push
int
xor
jbe
cs
jmp
pop
ret
idivl
push
or
xchg
add
data16
int3
pop
mov
aad
stos
mov
cmc
movsb
dec
cltd
mov
inc
insb
or
cli
push
fdivrs
push
in
popa
loope
and
pop
out
and
mov
dec
jge
das
inc
sub
test
dec
ret
insb
adc
push
out
jle
cmp
adc
cs
popa
fcompl
fildl
push
loope
stos
test
lcall
lea
mov
fs
mov
xor
xchg
in
aas
lods
faddl
repz
repz
sub
addr16
lods
sbb
in
adc
dec
pop
pop
outsb
mov
sub
insb
repz
int
mov
dec
adc
insb
or
cmovle
sbb
insb
jae
push
cmp
cli
movsl
bound
stos
pushf
imul
cmp
mov
xchg
js
mov
xchg
cwtl
cmp
cmc
rep
push
lock
insb
out
leave
int3
test
mov
imul
pushf
repz
imul
mov
sahf
and
sub
cmp
stos
arpl
and
movsb
xor
sub
insb
std
out
sbb
jge
insb
mov
mov
inc
insb
or
je
add
and
lods
jl
and
xor
in
xor
xchg
insb
mov
fsub
testl
dec
dec
mov
jle
inc
test
movsb
imul
pop
pop
fnstcw
insb
pop
cs
seto
cmp
out
adc
shlb
push
and
inc
inc
xor
lods
mov
xchg
insb
push
dec
mov
test
call
cmp
jmp
insb
cmpsb
fdivrs
sub
shrb
jnp
insb
and
call
hlt
and
cld
and
adc
aad
scas
jb
pop
insb
popa
cmp
dec
inc
je
mov
jle
dec
dec
aad
in
add
gs
arpl
out
fsubrs
inc
cmp
dec
sub
insb
and
xor
insb
out
mov
xchg
add
stc
addr16
aas
insl
vmwrite
imul
jp
push
sbb
das
add
insb
shll
push
imul
arpl
xor
cmp
ds
test
mov
loop
xor
insb
rorb
cmp
test
scas
push
mov
imul
xchg
leave
popa
xchg
pop
loop
in
and
out
or
push
gs
lds
stos
add
mov
mov
dec
rcrl
jbe
insb
loope
push
lcall
call
ljmp
mov
dec
pop
dec
stc
shlb
mov
add
lds
bound
jmp
leave
cld
insb
xor
dec
pusha
das
mov
adc
lcall
mov
sbb
lret
lcall
insb
ret
test
cld
leave
int3
jb
jo
and
insb
arpl
mov
ss
inc
pop
pop
cltd
in
imul
and
insb
push
test
dec
push
sub
in
xchg
dec
out
imul
dec
and
dec
mov
jo
jne
sub
cmp
pop
test
std
mov
fldenv
sti
xor
cli
mov
mov
imul
fs
jecxz
iret
dec
jbe
pop
in
jae
mov
mov
cmc
js
pop
inc
jno
and
leave
popa
int
fs
out
scas
inc
lret
inc
xchg
insb
scas
nopl
mov
outsb
jo
cwtl
in
out
test
sub
rclb
lods
mov
insb
mov
outsb
aaa
xchg
leave
mov
pop
cli
daa
loopne
sub
xor
loop
in
lock
popf
sub
pop
xchg
or
cmp
int3
xchg
xchg
insb
fsubrl
mov
inc
les
dec
sbb
xchg
es
sbb
out
pop
add
daa
hlt
testl
push
inc
or
insb
sbb
mov
mov
int3
bound
xchg
imul
mov
mov
cld
dec
loope
mov
mov
mov
sbb
in
popf
jne
cmp
cmp
adc
clc
insb
sbb
push
insb
cmp
or
cwtl
xchg
fwait
int3
rcl
insb
or
inc
lret
rcrb
popa
sub
push
push
jmp
inc
or
xor
lcall
scas
sub
lcall
test
jmp
inc
shlb
loopne
dec
push
adc
out
pop
add
dec
dec
add
add
or
mov
gs
int3
mov
rcrb
jns
jmp
dec
fsubrl
aad
inc
shlb
fildll
stos
lods
lods
sarl
sbb
cmpsl
enter
insb
lock
add
sub
int
add
cltd
pop
mov
mov
clc
sub
aad
mov
adc
cmp
iret
push
in
jecxz
imul
daa
mov
inc
mov
xchg
out
inc
imul
lcall
insb
pop
lods
mov
stc
insb
mov
ja
adc
mov
xchg
cmp
jl
insb
sbb
and
imul
cld
in
out
out
insb
xor
adc
mov
insb
jmp
imul
xchg
xor
dec
xor
dec
lods
pop
gs
cmp
repz
jbe
in
dec
xchg
sub
and
in
mov
insb
push
imul
xor
xor
cwtl
push
jmp
jle
nop
and
fwait
dec
and
outsb
sub
out
mov
in
push
int3
imul
sbb
jmp
test
jae
lods
aas
sahf
imul
repz
pop
insb
arpl
cwtl
mov
fstl
movsb
lea
insb
loope
cmpsl
push
xchg
aad
mov
lds
mov
add
xor
xlat
adc
xchg
fldt
scas
jnp
int
add
mov
insb
shrb
push
push
jp
insb
jg
inc
ret
xchg
mov
popa
or
fmulp
insb
insl
mov
xorb
leave
push
and
push
jo
xlat
jge
inc
lods
pop
mov
imul
cmp
int3
lea
push
out
jg
xchg
and
inc
cwtl
mov
call
push
pop
divl
sbb
jnp
mov
outsl
add
outsb
pushf
gs
mov
fidivrl
in
xor
repz
cmp
jo
sbbl
aam
test
addb
lods
jne
pop
sbb
sbb
jb
and
and
pop
mov
rcrb
add
outsb
js
cmp
push
jbe
push
pop
jl
testl
subb
lods
xchg
adcl
pop
push
ljmp
sub
add
hlt
xor
js
lahf
jle
sahf
ret
inc
adcl
jno
cltd
movsb
pop
dec
sub
daa
arpl
sbb
imul
or
mov
sub
mov
jns
fwait
and
imul
inc
and
stos
out
test
into
fistpl
lret
stos
jl
mov
in
int
sbb
fs
out
fstp
aam
gs
imul
movsb
add
insb
mov
xchg
insb
negl
cmc
pop
xchg
adc
xor
jnp
bound
sub
and
nop
mul
in
insb
and
push
mov
sub
push
lea
fstpl
pop
and
shll
dec
imul
jl
cmp
mov
jge
pushf
jo
test
pop
pop
cld
xor
add
sarb
imul
jne
insb
cmpsl
push
stos
dec
popf
mov
mov
arpl
popa
inc
adc
out
insb
loopne
add
pop
jbe
insb
and
daa
sbb
mov
push
movb
insb
jo
adc
mov
xor
incl
jns
faddl
shlb
out
imul
lcall
dec
and
or
pop
jb
insb
mov
cmp
insb
or
pop
in
xchg
pusha
fwait
imul
lods
mov
scas
icebp
or
mov
and
cmpsb
jbe
xchg
insb
push
imul
ret
pop
je
inc
add
test
mov
insb
es
scas
and
push
insb
pushf
cltd
push
and
ss
mov
xor
in
repz
xchg
lret
pop
inc
pop
lods
rolb
push
sahf
cmp
hlt
loopne
pop
pop
cld
movsl
sbb
out
insb
xchg
push
loope
int3
fdivr
aas
jle
insb
jne
add
arpl
cmp
ss
add
imul
pushf
jne
shrl
clc
inc
pop
mov
aam
daa
mov
fs
xor
dec
pop
xchg
jnp
sub
and
adc
jle
leave
push
mov
in
in
cli
insb
sbb
mov
jbe
cmc
mov
clc
jns
repnz
push
in
sar
imul
mov
lock
mul
imul
test
dec
xchg
mov
mov
mov
std
insb
inc
outsl
or
insb
xor
xchg
xchg
mov
fsubrs
pushf
mov
int
sub
mov
ss
data16
lods
insb
sbb
stos
sub
aad
cmp
push
aas
shrb
dec
insb
adc
in
mov
lods
cmp
pop
stc
insb
and
adc
in
and
push
stos
push
fmul
js
insl
sub
jge
or
sub
in
insb
push
popf
cs
ret
inc
insb
xchg
push
jno
pop
or
pop
jp
mov
and
mov
data16
push
push
scas
sub
jns
cmc
lret
or
fldt
insb
lea
pop
push
aad
arpl
fnstenv
dec
jne
push
mov
enter
or
cmp
xchg
imul
and
mov
jae
std
push
imul
insb
jno
push
arpl
mov
mov
mov
pushf
or
lea
insb
scas
insl
repz
push
xor
cmp
test
lea
sbb
in
xchg
or
adc
insb
or
cwtl
xor
out
movsb
insb
push
and
pop
inc
mov
push
rcrb
lods
scas
mov
add
test
imul
test
or
sub
mov
lods
xor
insb
mov
dec
sub
ss
test
inc
jg
fwait
xchg
push
fimull
es
adc
mov
sub
xchg
jg
insb
inc
sbb
cmp
sub
mov
insb
mov
xorb
insb
test
mov
addr16
mov
mov
ja
insb
popf
dec
lods
inc
scas
lahf
gs
mov
xor
stos
insl
dec
into
int3
cmc
mov
in
xlat
lods
mov
add
cmpsb
mov
lret
das
je
cmp
out
xor
in
aas
insb
lea
jmp
leave
and
sub
lods
insb
int3
js
adc
mov
imul
mov
cltd
mov
cli
sbb
mulb
ss
mov
icebp
jg
dec
and
and
add
jecxz
jo
popa
pop
fistpl
dec
push
imul
pop
in
and
loop
inc
je
insb
frndint
lea
sbb
outsl
insb
fwait
dec
imul
iret
cmp
test
sbb
insb
jo
xchg
lret
shl
shll
jns
popf
lret
or
xchg
pop
ljmp
push
push
and
jl
insb
adc
cmp
push
sbb
insb
jne
mov
gs
shl
jge
cld
dec
mov
lret
stc
adc
push
into
cmc
imul
or
insb
pop
or
dec
pop
pushf
xorl
dec
pop
xlat
sahf
in
fistpll
mov
stos
notl
or
insb
cmpsl
rcl
pusha
xor
inc
fiadds
js
enter
push
jb
cmp
jl
inc
dec
stos
adc
pop
pop
insb
rcrb
or
fcompl
fnsave
imul
push
cld
mov
out
mov
aad
push
ljmp
in
sti
in
mov
cmp
insb
xchg
push
movb
iret
xchg
aaa
test
mov
sub
es
mov
insb
out
stos
stos
out
ljmp
enter
pop
sbb
pop
ja
fwait
insb
push
dec
hlt
fists
arpl
int
lea
xor
sub
imul
outsb
lock
sbb
insb
add
call
insb
loop
jno
sub
or
and
pop
iret
arpl
xchg
stc
lods
push
cmp
mov
and
xlat
jnp
insb
arpl
jae
inc
pushf
push
xchg
pop
push
test
adc
pop
jb
sbb
push
fldenv
lea
aam
clc
cmp
xor
cli
insb
xchg
pop
leave
js
mov
loop
mov
add
push
xorb
sub
lods
in
mov
stc
push
in
cmp
outsl
mov
rclb
insb
call
repz
fildll
jl
sti
sub
push
xor
xor
test
mov
insb
add
sti
mov
data16
imul
je
and
insb
fidivs
std
or
out
cmp
mov
pop
insb
or
pop
lods
insb
lret
inc
outsl
dec
xchg
inc
pop
pop
insb
or
jne
adc
loopne
ret
out
jl
add
jle
mov
out
cmp
pop
xchg
dec
insb
xchg
or
fidivl
popf
pushf
sub
int3
dec
mov
mov
xchg
insb
inc
cmp
imul
stos
dec
adc
pushf
addr16
jb
and
pop
add
into
sbb
insb
adc
outsl
call
insb
stos
xchg
or
lcall
jmp
rorb
and
pop
cmpl
movsl
insb
mov
pushf
stos
pop
insb
sbb
mov
sbb
push
insb
and
lods
js
jp
sbb
sub
xchg
mov
add
test
imul
push
mov
pop
dec
adc
lcall
insb
push
daa
pop
icebp
rolb
mov
push
cld
and
or
inc
mov
add
sub
iret
insb
test
pop
ja
insl
cmp
push
or
jecxz
in
dec
insb
neg
mov
dec
insb
adc
xor
insb
push
add
insb
fs
enter
outsl
xor
adc
gs
push
divl
lods
mov
notb
je
xor
scas
movsl
jno
cmp
ljmp
mov
je
cmp
stc
test
into
insb
pop
mov
imul
stos
call
pop
pop
stos
and
xchg
adc
fdivrp
jbe
xchg
jns
add
sbb
xchg
xchg
clc
testl
outsl
xor
add
mov
cmp
adc
scas
sbb
jno
mov
ds
imul
mov
mov
divl
mov
outsb
in
lret
data16
push
test
sarb
insb
addb
ljmp
dec
clc
mov
bound
fs
fistpl
jbe
scas
in
sbb
insb
xchg
dec
stc
pop
push
mov
in
insb
sub
movsb
mov
insb
mov
loop
mov
dec
inc
fadds
push
arpl
inc
mov
test
pop
xlat
inc
adc
xchg
imul
cmpsb
fcomi
jo
stos
xchg
add
push
sbb
addr16
in
daa
mov
xchg
insb
fbld
ficoms
push
pop
push
pushf
xlat
push
lods
cld
clc
insb
mov
adc
cmpsb
insb
int3
xor
stos
test
decb
insb
dec
data16
es
sbb
arpl
inc
adcl
hlt
setnp
in
xchg
pop
jbe
icebp
cmpsb
iret
in
ja
add
xchg
leave
imul
push
dec
jl
insb
add
lods
call
popl
and
jmp
xor
jmp
cmp
fs
or
shrl
xchg
and
iret
repnz
outsl
mov
stos
in
leave
xor
aad
adc
fs
rclb
xor
fcoms
call
outsb
jb
imul
and
jmp
add
and
adcl
insl
int
pop
jb
push
jecxz
ss
sbb
ficomps
enter
cmp
cli
push
bound
jmp
xorl
shll
push
push
cmp
insb
cli
cmp
mov
fistps
insb
jae
or
mov
popa
push
movsl
int3
test
push
orl
dec
out
mov
insb
int
jle
sbb
mov
add
mov
shlb
fmull
insl
dec
int3
mov
xchg
adc
popf
mov
mov
sbb
shr
xchg
pop
jnp
pop
xchg
stos
into
jmp
out
dec
xor
inc
lods
mov
mov
mov
dec
mov
insb
popf
and
mov
jl
mov
vpshufhw
pop
sbb
dec
or
stos
fcmovbe
ss
daa
xchg
imulb
push
into
add
in
cmp
inc
cltd
ficoms
pop
dec
in
shrl
insb
sbb
or
lcall
push
sbb
int
push
insb
in
mov
loopne
jmp
pop
push
fldl
bound
shll
nop
mov
insb
rclb
push
popa
pop
xchg
sub
pop
jmp
pop
in
mov
xchg
aad
testb
out
and
out
jnp
lret
mov
cmc
xor
push
inc
movsb
loop
pushf
mov
in
shl
insb
stc
sbb
sub
pop
jb
push
pop
enter
push
sti
outsb
imulb
push
lahf
into
int
sub
lcall
popf
cld
ds
dec
or
adc
mov
pop
xchg
loope
leave
lods
call
movsl
sub
mov
repz
mov
into
insb
mov
insb
mov
sbb
sahf
insb
mov
xor
sbb
imul
inc
pop
mov
nop
insb
jnp
test
insb
sub
push
mov
mov
push
mov
jg
cld
pop
xor
rcr
outsl
and
imulb
mov
sti
sbbl
push
sti
cld
cwtl
ljmp
jecxz
imul
jne,pn
jns
rcrb
dec
inc
lods
scas
sub
add
push
out
in
jp
inc
mov
clc
dec
xchg
movsl
jp
jnp
cmp
xor
subl
inc
stos
cmp
test
popa
pop
jg
sbb
loope
mov
test
mov
adc
mov
jns
cmp
dec
mov
inc
insl
add
mov
repnz
mov
movsb
adc
aas
mov
push
adc
xor
sub
in
sub
mov
not
add
outsl
or
pop
cmp
insb
lods
rcrl
push
adc
cs
arpl
cmpsl
xchg
ret
insb
popf
movsb
mov
inc
jp
jb
ret
or
jns
loope
inc
insb
adc
out
jecxz
pop
pop
inc
insb
das
mov
inc
insb
call
dec
js
insb
sub
popf
push
les
insb
out
cmp
or
insb
aad
mov
sbb
insb
jo
mov
insl
xor
dec
jb
addr16
test
or
leave
arpl
lahf
mov
jne
test
subl
pop
ja
fldenv
sub
xchg
cmp
mov
insb
dec
ja
jbe
push
add
inc
popf
xchg
inc
push
rcrl
adc
notb
insb
sub
push
int
mov
xchg
add
imul
xchg
push
aas
arpl
ja
popa
in
or
enter
jno
xlat
int3
jg
jns
jo
imul
pop
imul
pop
xchg
test
adc
pop
pop
insb
into
jne
cmp
jg
sbb
aad
ds
mov
mov
insb
push
pop
int
adc
dec
pop
call
pop
dec
outsl
repz
lret
test
adc
push
jl
mov
mov
mul
cmp
aam
in
inc
sub
push
inc
into
ljmp
and
add
insb
arpl
enter
add
cs
jmp
data16
jne
test
clc
insb
mov
ret
out
jb
mov
inc
fs
mov
divps
ljmp
aas
push
xchg
inc
negl
insb
mov
lds
cmc
sbb
xor
adc
popa
push
adc
pop
jecxz
pop
mov
je
xor
inc
inc
push
ja
adc
in
addl
test
adc
jae
test
lret
jmp
xchg
cmp
jo
inc
mov
insb
mov
pop
daa
sub
mov
out
out
fsubrl
jne
outsb
jbe
pop
cli
sub
jmp
xor
dec
xor
inc
or
jne
in
nop
adc
cs
fidivrs
scas
enter
clc
repz
jns
push
insb
movsb
test
in
insb
sub
xor
arpl
cld
addr16
sti
inc
hlt
jg
insb
aad
jp
add
dec
cltd
sbb
mov
js
push
xor
lods
shll
mov
les
in
jne
cs
movsl
pop
movsb
mov
and
orb
dec
sbb
repnz
xchg
in
pop
stc
push
roll
xor
adc
pop
es
dec
aam
insb
jnp
sti
stos
scas
test
fisttps
shl
in
mov
mov
and
outsl
push
mov
inc
sub
mov
push
and
repz
outsb
sub
jl
imul
lret
das
push
insb
adc
adc
pop
insb
and
jmp
pusha
roll
insb
push
jne
in
lods
dec
mov
or
scas
test
mov
in
mov
ds
dec
shrl
sarb
cmp
shll
fldt
push
and
lds
insb
sub
scas
mov
dec
or
insb
push
leave
ja
sub
cli
mov
fstps
jne
push
loop
cs
in
xchg
inc
mov
ss
xor
or
jl
js
pop
push
shl
imul
push
insb
daa
cmpsb
and
add
xlat
xor
pop
ss
imul
pusha
and
cmp
cs
xchg
inc
pop
imul
pop
inc
mov
and
fildl
insb
mov
cmp
insb
dec
ror
mov
pop
and
xchg
cmpsb
lock
insb
jmp
int3
scas
inc
imul
fdiv
mov
imul
pop
push
scas
outsb
adc
lret
or
mov
pop
insb
push
push
test
in
fcompl
lods
mov
test
insb
push
loop
iret
cmpsb
out
push
idivl
push
aad
inc
rcrb
fisttpll
insb
shlb
and
lret
xchg
and
insb
stos
incb
add
jp
insb
cmp
test
fstpt
fdivp
mov
imul
cmp
daa
insb
mov
jmp
jge
nop
jb
adc
mov
insb
scas
adc
cwtl
je
fists
data16
lock
insb
cmp
add
sbb
mov
xor
insb
mov
lock
add
inc
mov
pushf
orb
shl
push
ret
test
popa
push
xor
cmp
je
pop
jle
pop
movsb
mov
in
rorl
xor
std
bound
insb
xor
stos
dec
cmp
aam
insb
adc
ja
negb
fldcw
arpl
stc
lods
jnp
orb
mov
loop
imul
jae
jnp
xchg
dec
dec
mov
pop
xor
int
adc
push
xchg
cmc
pusha
insb
and
int
jnp
es
lret
adc
les
xor
pminub
into
insb
xchg
ret
jb
out
cs
testb
inc
ljmp
lods
mov
pop
je
jl
cmp
fs
jns
xor
inc
pop
dec
sbb
fdivl
dec
stc
out
dec
insb
popa
or
ret
stos
pop
out
insb
icebp
cmpsb
shlb
insb
jnp,pn
popa
xor
testl
adc
insb
movsb
cs
das
insb
xchg
and
sbb
push
hlt
arpl
fldt
lods
aad
adc
dec
frstor
aaa
insb
test
insb
in
fidivl
xor
out
lds
jns
clc
fs
xor
js
scas
xchg
cmpsl
imul
push
mov
lods
out
xor
add
mov
sahf
std
pushf
mov
movsl
fisubrs
mov
sub
xor
add
in
push
inc
xor
insb
leave
addb
movsb
pop
jge
orl
jno
adc
adc
insb
push
xchg
loopne
mov
lret
mov
insb
or
sti
mov
aam
insb
adc
cmpsl
or
insb
mov
ja
ret
jbe
stos
inc
dec
lcall
mov
or
sub
or
scas
insb
push
mov
adc
daa
loop
add
rorl
push
lds
adc
add
lret
xchg
push
jo
or
and
ds
inc
lods
clc
inc
adc
enter
std
insb
mov
mov
mov
je
adc
jae
mov
dec
int
jl
shrb
mov
push
pop
cmp
jle
xor
xchg
cld
cmpsl
add
insb
push
jp
pop
dec
in
mov
insb
push
ds
addb
jo
imul
and
mov
push
stos
insb
sbb
pop
clc
pop
mov
rorb
add
scas
mov
ret
sub
cmp
ljmp
outsl
das
ret
adc
push
adc
ret
xchg
jbe
sbb
pop
into
mov
movsl
in
scas
icebp
insb
push
mov
mov
xor
xor
stos
adc
insb
outsl
mov
into
insb
mov
leave
mov
insb
cld
fsubrp
and
and
or
insb
cmp
xchg
insb
gs
fidivrs
pop
bound
cli
loop
inc
push
push
xor
dec
dec
imul
repz
aas
mov
insb
or
lret
mov
or
cli
push
outsl
or
in
insb
das
jp
out
daa
iret
cmp
or
sbb
shrl
lret
dec
fldl
inc
mov
shlb
push
jns
lods
and
dec
sub
sbb
push
jbe
xor
dec
icebp
push
ret
xor
imul
cmc
test
test
sar
insb
inc
dec
ss
pop
test
mov
imul
loopne
stc
fsubs
imul
jo
mov
lock
fwait
ret
nop
xor
stos
cmp
jno
push
aaa
movsl
pusha
push
jb
insb
int3
pop
xor
shlb
adc
xchg
and
imul
cmpsl
cmp
stc
div
cli
and
stos
pop
jbe
mov
insb
scas
fstpt
fcomip
scas
push
out
xor
pushf
subl
xchg
add
sub
call
pop
or
add
or
scas
pop
add
leave
lods
xchg
sbb
mov
dec
sarb
or
paddsb
testl
jmp
mov
lods
sub
inc
inc
push
xlat
xchg
dec
lret
push
insb
add
and
insb
cwtl
sub
push
loope
sub
insb
mov
sbb
insb
or
inc
pop
maskmovq
xor
lahf
or
fnstcw
mov
mov
mov
test
inc
insb
orb
xchg
gs
insb
ret
std
add
insb
jnp
sub
pop
insb
xchg
xor
inc
push
cmp
mov
out
pop
and
nop
push
mov
sub
mov
pop
insb
jae
push
lret
mov
dec
sub
add
int3
je
cs
mov
insb
stc
lock
push
das
pop
into
jmp
inc
fmull
and
imul
mov
sbb
mov
add
movsl
pop
insb
xchg
jl
enter
nopl
mov
sub
lret
or
fstpl
jge
pop
pop
or
pop
in
mov
dec
lods
repz
shrl
mov
lock
sub
ret
dec
pop
outsl
xchg
rcl
int3
mov
push
mov
pop
test
push
mov
xchg
les
dec
test
jmp
xchg
icebp
pushf
cmp
leave
sub
push
insb
not
into
pop
das
jbe
aad
or
imul
mov
pop
sub
sbb
sub
push
dec
insb
xor
push
mov
daa
icebp
pop
insb
movsl
les
loopne
stc
sbb
push
arpl
bound
jmp
rclb
push
movsb
mov
gs
push
js
sbb
mov
push
mov
mov
es
negl
sub
insb
push
les
pushf
sbb
xchg
clc
bound
add
jno
ficoms
jecxz
mov
int
lahf
insb
ret
pop
ds
xchg
push
xor
test
inc
sysenter
pop
mov
clc
dec
imul
int3
ret
cld
subb
nop
and
jae
pusha
movsb
aad
lea
insb
cmp
sbb
insb
xchg
rcrb
inc
inc
inc
sbb
les
cwtl
xor
insb
xor
stos
mov
insb
add
mov
test
jo
arpl
inc
data16
mov
icebp
imul
xchg
nop
xchg
sti
ret
insb
add
gs
push
xor
test
pop
and
cltd
out
call
insb
cs
inc
loopne
ss
inc
imul
adc
ja
jl
lret
insb
and
cmp
xor
popa
xlat
jge
cs
pop
loope
jnp
arpl
xchg
cmc
lods
push
mov
jg
js
or
daa
aad
orb
imul
mov
js
in
iret
xor
cmpsb
jmp
js
jg
xchg
xor
test
cmpsl
push
imul
push
int3
inc
movsb
dec
pop
add
insb
inc
nop
or
cmovge
mov
fisubl
or
sub
insb
adc
iret
call
sbb
or
add
xor
lods
xlat
xor
jp
inc
imul
and
dec
hlt
outsl
fcompl
popa
jge
iret
push
jmp
add
mov
inc
mov
jle
insb
je
enter
rol
rcrl
dec
mov
insb
cmpsl
mov
add
out
cmc
insb
cli
mov
mov
ljmp
pop
insb
xchg
iret
fidivrs
pop
out
pusha
daa
insb
cltd
sbb
pop
sub
test
mov
sub
mov
cmpsl
adc
mov
and
fisubrs
push
mov
call
pop
data16
es
js
repz
fwait
dec
push
lods
sbb
mov
dec
jbe
sbb
insb
fidivrl
pop
push
insb
push
popa
pop
push
loop
out
gs
leave
cmp
inc
movsb
push
popa
int
xor
stos
or
adc
cmp
xchg
aas
or
ljmp
insb
dec
stos
ss
pop
cmp
in
mov
push
jge
rorl
aad
jp
dec
jns
movsl
insb
into
and
fstpt
push
inc
pusha
test
lret
pop
jmp
sub
or
into
jge
add
scas
addr16
pushf
mov
sub
ds
or
inc
imul
daa
cwtl
int3
adc
lods
popf
gs
je
call
insb
mov
cwtl
arpl
jb
cmp
insb
fildl
jmp
popaw
in
shrl
aas
je
lret
gs
fiaddl
jo
mov
sbbb
jmp
jle
imul
test
shrb
add
imul
mov
inc
jno
push
mov
out
in
mov
leave
jle
mov
dec
insb
mov
test
lahf
imul
insb
mov
jmp
xchg
scas
sbb
jne
insb
xor
push
popf
and
push
dec
out
adc
gs
insb
jle
adc
mov
loope
insb
sub
ss
jb
cmp
in
cmp
popl
sub
mov
loop
imul
fs
lea
aam
stc
les
stos
push
or
shrl
and
inc
mov
testl
popf
or
jecxz
jmp
insb
mov
jle
subb
dec
or
daa
nop
gs
mov
out
ret
insb
mov
push
test
sub
insb
nop
fdiv
sarb
mov
cmp
xchg
outsl
jno
cmp
sahf
mov
insb
push
adc
orb
pushf
gs
and
mov
cmp
fadds
insb
or
addr16
sub
icebp
push
loopne
lret
or
mov
aas
inc
jmp
das
push
cmpsl
popa
xor
sahf
jge
out
push
mov
adc
sbb
sbb
jb
out
lods
sub
xchg
insb
inc
subb
jge
jne
mov
repnz
mov
mov
insb
loop
shlb
mov
inc
flds
and
shl
mov
jle
dec
and
lods
flds
stc
push
insb
push
into
and
dec
insb
cmc
xchg
inc
insb
fcomi
push
jbe
shll
insb
pop
mov
shrl
fildll
push
sbb
push
pop
add
outsl
clc
sahf
mov
imul
fists
sbb
in
mov
sahf
push
jp
push
es
sbb
mov
lods
mov
sbb
test
addl
dec
in
push
insb
outsb
lea
popf
sub
rorb
js
dec
mov
popf
sub
cltd
inc
xchg
jo
insb
loop
push
movsb
leave
add
insb
imul
and
and
shrl
sub
cmp
out
xchg
int3
imul
inc
jecxz
push
jnp
aas
jo
mov
insb
iret
xchg
mov
sbb
add
ljmp
pop
insb
mov
mov
lods
push
rcll
arpl
into
xchg
jns
aam
dec
xchg
fldcw
test
cmp
adc
add
enter
mov
mov
mov
dec
push
fwait
adc
fildll
ljmp
mov
mov
adc
xchg
sti
mov
popa
enter
sub
mov
sbbl
cmpsb
push
inc
xchg
testl
and
sub
mov
in
rolb
mov
insb
ret
adc
adc
jge
dec
data16
xchg
mov
xchg
pop
imul
xor
imul
popa
outsl
std
jmp
aad
sbb
sub
ds
dec
lods
lds
lods
faddp
out
ljmp
insl
insb
nop
outsb
call
gs
movsb
repnz
in
and
jmp
popf
js
test
adc
ja
adc
jae
shrl
hlt
mov
jge
xchg
pop
incl
sub
push
sub
inc
xor
push
gs
push
imull
cld
pop
out
jno
repnz
fisubs
jecxz
js
insb
xor
popa
add
fstps
mov
pushf
daa
outsb
dec
sbb
push
scas
push
decb
xor
fildl
jo
push
pop
xchg
add
mov
imul
mov
stos
cld
sub
jnp
imul
jnp
sti
push
xchg
lods
xlat
int
insb
xor
and
jae
insb
lds
xor
pop
outsb
insb
shll
aam
mov
call
pop
movsb
enter
add
lods
pushf
scas
das
xchg
jno
pop
lds
mov
ljmp
movsl
cmp
pop
imul
divl
es
sub
cmp
scas
out
mov
jne
int3
push
insb
mov
sbb
dec
loope
dec
test
mov
imul
mov
jnp
insb
and
cmp
dec
aad
mov
sbb
jae
xor
sbbl
addl
adc
lret
push
mov
mov
xor
ds
pop
inc
push
lods
sub
mov
jae
sub
or
das
xchg
test
jb
scas
jl
inc
pop
jae
gs
xchg
sbb
insb
fistl
mov
dec
out
dec
cltd
in
insb
les
imul
mov
push
xchg
inc
or
sbb
cld
pop
call
in
push
je
inc
insb
add
mov
pop
out
ja
mov
clc
fmuls
mov
jmp
xor
mov
loop
fiaddl
mov
pushf
and
int3
push
add
inc
pop
out
xchg
or
sub
iret
jne
push
add
insb
push
dec
lret
rolb
insl
push
lcall
xor
push
adc
pop
clc
insb
add
sbb
fisttpl
out
jmp
insb
xchg
scas
shll
adcl
sbb
ja
sub
into
sub
aam
icebp
push
imul
in
in
pushf
mov
jmp
cmp
mov
sub
pushf
mov
pop
push
imul
imul
or
out
clc
imul
cltd
sub
sub
inc
inc
lds
insb
rclb
sub
decl
and
imulb
push
stc
pushf
imul
in
pop
insb
lods
pop
lock
rcll
xlat
ja
jns
add
or
insb
mov
bound
insb
cmp
dec
rcrb
cmp
sahf
jns
dec
inc
inc
jl
cmpsb
insb
xchg
shll
cmp
and
sbb
gs
stc
popa
test
shr
lahf
pop
pop
sahf
mull
sub
push
rcll
in
in
fldt
subl
dec
iret
dec
jmp
insb
xor
fcomps
gs
pop
add
xor
jo
insb
in
sar
and
push
fildll
lcall
cwtl
stos
pop
imul
or
jns
popa
nop
push
sbb
jge
pop
push
loop
fstps
insb
fs
gs
sub
pop
insb
mov
xlat
sub
add
mov
cmpsb
inc
inc
pop
pop
push
insb
sbb
pop
push
insb
mov
mov
sbb
rcll
aam
daa
inc
inc
je
insb
xchg
cltd
fisubs
sbb
xlat
test
push
daa
sub
test
xor
add
pop
sbb
cmp
jbe
add
jg
and
in
outsb
insb
lods
mov
mov
imull
pop
test
add
subl
add
bnd
popf
mov
iret
mov
push
insb
inc
insl
xchg
shlb
cmp
dec
sub
lods
js
cmp
outsl
pop
sahf
int3
int
rorb
mov
sub
jae
pop
mov
shr
xchg
inc
xchg
popa
mov
out
out
cs
imul
dec
jnp
xchg
sahf
and
lock
inc
icebp
sbb
test
outsb
pop
sbb
outsb
jmp
cmp
decb
pop
fldl
or
and
faddl
fucomip
fnstcw
test
mov
mov
mov
jno
insb
add
jle
push
or
nop
jge
data16
filds
xor
mov
fisubs
imul
rcr
rclb
or
aam
mov
jg
in
mov
jo
repnz
insb
mov
out
ljmp
pop
or
insb
cld
sub
in
lods
mov
insb
arpl
dec
mov
insb
fwait
repz
popa
mov
icebp
insb
mov
and
push
enter
daa
adc
insb
or
mov
cmp
jge
sbb
mov
push
das
rorl
jmp
sbb
arpl
add
rep
mov
sbb
mov
repnz
in
divps
mov
sub
fildll
mov
stos
cwtl
repz
insb
lea
inc
xor
jae
and
cmpsb
push
push
loop
bound
xor
insb
movsb
sbb
popa
loopne
jg
fisttpll
and
xchg
inc
insb
jbe
test
sbb
pop
cwtl
mov
fistps
xor
int3
and
pop
pop
or
scas
aam
into
in
sahf
insb
addr16
or
pop
cli
jmp
imul
jg
fists
pushf
and
push
mov
lcall
daa
insb
addb
and
ja
insb
addr16
dec
cmp
imul
insb
pop
rolb
mov
insb
pop
inc
ja
inc
push
and
xchg
push
pop
sbb
aad
sahf
das
insb
pop
mov
mov
jecxz
scas
daa
jb
xchg
xor
push
in
rcr
ret
push
lods
adc
imul
or
je
fucomi
xchg
mov
sbb
push
xor
test
neg
cmp
insb
stos
dec
add
mov
and
lret
je
xchg
mov
testl
push
aaa
movsb
push
dec
insb
xlat
sub
adc
pop
gs
add
push
or
call
add
xor
shlb
lahf
mov
jecxz
js
cmp
repz
mov
mov
or
sti
pop
popf
cmc
cli
popa
xor
pop
cmpb
sub
inc
pop
mov
loope
das
and
out
push
mov
adc
push
sub
mov
call
loop
push
sub
jno
or
inc
cltd
sub
and
test
xlat
fdivrp
popf
xor
push
insb
inc
xor
arpl
shll
xchg
lock
lds
push
cmpsb
loopne
fadds
leave
jecxz
mov
insb
sbb
xor
xor
pop
test
loope
popf
insb
pushf
and
ret
mov
enter
inc
sbb
repz
insb
add
pop
dec
fmulp
sbb
nopl
out
int3
mov
jb
imul
and
test
orl
xchg
js
dec
testb
jle
cld
xor
xchg
cmp
dec
pop
data16
fisubs
cltd
pop
sbb
add
dec
pop
dec
adc
dec
xchg
xlat
mov
jae
jns
cmp
and
push
cs
cld
mov
dec
rorb
adc
push
iret
movsl
push
insb
icebp
lds
stos
mov
mov
and
imul
les
xlat
imul
pop
imul
test
lret
subl
test
pop
insb
movsb
lret
mov
inc
mov
adc
in
or
pop
insb
and
mov
or
inc
mov
add
fstpl
pop
ljmp
fisttpl
pushf
sbb
gs
inc
sub
push
clc
ret
jl
jo
fbstp
addr16
push
jne
or
imul
dec
imul
aaa
mov
rorb
addr16
cmp
mov
stc
cmp
aad
xor
or
cmpsb
adc
insb
es
inc
mov
insb
in
insl
mov
push
insb
and
decl
pop
jg
insb
and
jne
xor
sub
in
ret
xor
lods
insb
inc
adcl
insb
movsl
out
mov
insb
push
mov
lea
scas
shrl
sbb
imul
push
push
and
inc
jae
ret
out
adc
test
push
and
and
inc
add
mov
aad
jge
dec
shrl
and
mov
pushl
rol
xchg
and
mov
dec
mov
mov
mov
add
inc
cmp
in
cmp
mov
into
adcb
sub
or
mov
pushf
clc
pop
cmc
mov
orb
test
lods
xchg
adc
push
imul
xchg
cli
test
icebp
or
push
adc
cmp
push
fidivl
sti
testb
fistpl
fidivrs
out
pop
pusha
insb
test
fcom
jecxz
cli
push
pushf
stos
cmpsb
pop
or
out
insb
sahf
jmp
jbe
push
in
jge
jecxz
ja
mov
insb
and
inc
and
imul
daa
or
iret
jl
insb
xchg
std
jbe
xor
loopne
insb
cmp
jne
into
dec
aaa
push
hlt
mov
enter
jns
scas
or
sub
jnp
inc
pop
movb
sar
xchg
arpl
dec
lods
push
rcrb
fcomps
xchg
push
out
push
in
fcmovbe
or
mov
insb
mov
dec
adc
imul
sub
cwtl
in
sub
insb
and
fists
lods
std
inc
leave
insb
add
fiadds
insb
adc
xor
insb
adcb
push
arpl
fwait
push
insb
ret
daa
pop
push
pop
xorl
cmp
inc
and
cmp
adcl
aam
xor
cmp
or
push
add
imul
mov
push
ljmp
cmp
fidivrs
insb
daa
nop
inc
clc
loope
push
xchg
insb
mov
mov
jp
scas
iret
daa
mov
insb
jecxz
mov
jmp
mov
rclb
mov
pop
mov
out
add
out
and
mov
imul
mov
inc
test
pop
mov
inc
popa
bound
clc
fsubrp
in
nop
fildll
sti
xlat
push
push
ljmp
add
mov
add
imul
fdivrl
test
insb
in
push
sti
mov
dec
adc
notl
mov
into
insb
fwait
ljmp
imul
inc
jl
movsb
insb
enter
ljmp
insb
add
dec
int3
xor
cmpsb
mov
mov
insb
lahf
pop
fwait
mov
repz
push
stc
enter
sbb
jb
neg
mov
sub
int3
sub
mov
add
mov
insb
stos
push
clc
and
or
insb
ret
mov
dec
fldcw
mov
aas
jb,pn
cmp
stos
dec
insb
test
sub
mov
jp
xchg
dec
decl
sbb
mov
insb
inc
push
sti
movl
lcall
in
hlt
subl
les
mov
jp
dec
scas
insb
xor
loope
push
inc
add
insb
xor
ja
imul
jo
fs
lods
in
test
push
aas
ror
insb
ss
imul
sub
sub
or
subl
insb
mov
sbb
inc
sub
sub
aam
sti
lret
enter
sbb
and
or
adc
ds
push
fucomp
mov
xchg
mov
stos
mov
cmp
xchg
push
jne
sub
stc
xchg
sarl
int3
xor
out
mov
adcl
daa
out
lods
or
insb
cli
adc
test
fwait
or
adc
stc
scas
fstps
cmp
imul
xchg
int3
ljmp
fidivl
add
into
xchg
mov
out
sbb
arpl
jo
pop
dec
mov
dec
insb
movsl
sarb
cs
push
dec
insb
ja
xlat
or
xchg
cmp
out
in
sub
sub
pop
mov
out
andb
aam
mov
pop
mov
lock
std
add
jl
cmc
xchg
mov
sahf
cld
mov
dec
in
outsb
push
outsl
fstpl
fwait
and
test
subl
cli
loopne
inc
sarb
jo
aad
ficomps
pop
in
fstpt
mov
pusha
pop
fs
xchg
insb
adc
xchg
arpl
enter
or
sbb
jne
jmp
int3
jecxz
push
arpl
popf
mov
orl
xchg
pop
and
cmp
mov
int
mov
mov
sbb
je
dec
pop
adc
sub
mov
sbb
faddl
rorl
popa
sbb
pop
insl
cld
push
aad
pop
aad
dec
aaa
xor
push
je
mov
cmp
mov
jnp
imul
test
add
jmp
fsubrl
dec
push
addl
jb
mov
mov
or
in
pop
inc
jo
idiv
and
push
adcl
lods
or
mov
lret
pop
pop
in
xor
cmpsl
sbb
sbb
push
cld
or
out
imul
loop
or
out
pusha
aas
xor
pop
jno
push
lcall
pop
ret
clc
xor
dec
lods
cmp
or
jbe
insb
or
push
out
push
scas
sbb
push
cmpl
das
cltd
ret
cmp
or
jg
sub
cli
push
stos
negb
fwait
insb
push
push
mov
aas
fdivrs
push
in
insb
xor
in
imul
xor
pop
mul
imul
jge
lods
dec
mov
push
xlat
ret
outsb
xchg
insb
mov
mov
jge
ret
insb
addr16
lea
and
insb
mov
xchg
insb
push
int
adc
cmp
shrl
push
pop
adcl
out
divb
push
ret
jno
xchg
jl
and
mov
jg
fs
insb
dec
dec
out
imul
sub
dec
test
jmp
inc
push
test
inc
jbe
loop
push
lods
testl
shll
pushf
xchg
mov
cmp
ljmp
int
out
movsl
jbe
fs
xor
inc
subl
cmc
adc
xchg
repnz
or
push
cltd
fs
add
mov
pop
insb
and
mov
jae,pn
into
lret
arpl
test
pusha
xor
push
xchg
ja
insb
jle
jb
mov
movsl
movsb
lret
imul
loop
and
repnz
cmp
jecxz
stc
fwait
inc
pop
gs
push
sub
icebp
jp
xchg
mov
or
out
add
inc
scas
cld
repz
std
mov
or
nop
and
imul
xor
ret
fmull
xchg
cmpsl
imul
test
movsl
inc
mov
sub
jge
in
fimull
xor
je
outsb
dec
cmp
insb
xchg
mov
pop
mov
cmpsb
xchg
mov
insb
pop
test
mov
dec
dec
fidivs
pop
sbb
mov
movsb
dec
dec
insb
mov
xor
ss
sub
jmp
sbb
stos
inc
cltd
fld
sbb
hlt
insb
aaa
mov
dec
mov
insb
pop
js
sahf
dec
ja
lea
jmp
ret
xchg
pop
push
mov
imul
mov
rcl
sarb
xor
push
sahf
mov
outsb
mov
std
in
test
push
fistl
push
and
pop
insb
testl
inc
cs
imul
push
movsl
lock
insb
mov
jns
in
insb
lods
cmp
bound
stos
add
je
scas
jge
xor
mov
xchg
push
test
popf
or
divb
jne
mov
enter
in
cmpsl
pop
mov
cmc
sarl
insb
imul
mov
inc
or
test
out
xor
imul
add
pop
in
mov
inc
xchg
and
imul
gs
sub
xchg
inc
jo
in
xor
xchg
pop
push
arpl
jmp
insl
bound
or
mull
jge
cs
imul
adcl
lods
inc
mov
repz
insb
cmp
outsb
scas
or
ds
js
rcrl
pop
adc
mov
insb
xchg
mov
cli
mov
subl
xchg
mov
jecxz
outsl
insb
push
sbbb
xchg
aaa
loop
sbb
dec
adc
fwait
jne
mov
movsb
in
mov
int
push
sbb
mov
xchg
push
dec
imul
adcl
cld
jmp
stos
and
test
xchg
sbb
pop
aas
psubb
das
xor
out
mov
dec
pop
push
jecxz
mov
sbb
insb
orl
nop
push
ss
stos
mov
insl
lahf
leave
mov
popf
insb
push
pop
rolb
cwtl
mov
insb
jns
xor
xchg
add
in
lods
lret
push
popf
imul
fwait
pop
movsl
cmp
cld
add
adc
pop
sbb
inc
mov
xchg
and
cmpsl
mov
jmp
shlb
insb
or
les
cltd
xchg
int3
sub
in
sbb
pusha
movsl
imul
stos
cmp
lock
xchg
mov
insb
cwtl
in
fdivs
mov
ret
nop
das
mov
test
imul
cld
insb
je
inc
out
les
insb
xor
sti
iret
dec
gs
lea
cli
adc
mov
add
insb
in
lods
aam
iret
jp
arpl
push
lret
push
jge
fs
or
mov
insb
pushf
fwait
inc
sub
int3
movsl
xchg
pop
shll
jg
inc
or
arpl
xchg
mov
ss
xorl
inc
mov
out
xchg
rcll
in
outsl
ds
insb
cli
lds
shll
ljmp
pushf
mov
insb
outsb
jge
inc
or
pop
insb
pop
sub
in
sub
sbb
fildll
repz
xor
pusha
jecxz
fs
insb
mov
aaa
aas
sbb
xchg
dec
insb
pop
incb
ljmp
clc
mov
sub
xlat
push
push
xor
push
mov
mov
sbb
adc
dec
in
cmc
aam
insb
xor
inc
jl
insb
mov
scas
fcompl
jle
pop
mov
ret
mov
loopne
mov
xchg
adc
in
das
or
xor
rcr
push
adc
jl
popa
daa
jle,pt
ljmp
test
fdivrs
gs
notl
in
int3
imul
sbb
call
mov
addr16
adc
dec
mov
lret
xor
add
negl
out
mov
insb
mov
jns
mov
nop
clc
subl
pop
jl
icebp
sbb
out
pushf
int
insl
repz
add
xor
dec
stos
mov
xor
insb
mov
mov
cmpsb
jno
dec
pop
lods
insb
fwait
jnp
pop
dec
pop
fcomps
aas
aaa
or
imul
mov
mov
pop
xor
or
and
mov
into
aaa
insb
fsubs
add
insb
pusha
jg
in
movsb
pushf
movsl
gs
jbe
jmp
outsb
sbb
loopne
out
lcall
mov
insb
stos
fistps
fs
mov
jnp
add
fdivl
imul
mov
pushf
out
adc
out
cmc
push
sbb
push
nop
in
shlb
sahf
sub
mov
mov
imulb
cwtl
lahf
inc
aad
rep
xchg
sub
daa
insb
es
jmp
push
shrl
int3
rcll
and
sahf
mov
mov
inc
rcr
insb
push
pop
scas
loop
cmp
mov
push
sbb
mov
cs
jb
inc
in
jl
mov
out
insb
inc
shrb
sub
add
cmpsl
adc
ret
xchg
insb
subb
sbb
repnz
mov
mov
pop
loopne
mov
ljmp
daa
inc
fcomi
adc
insb
and
jnp
sbb
inc
insb
cmp
cltd
int3
fwait
mov
pop
insb
jns
aam
dec
fdivrl
psrad
mov
insb
sub
rcr
add
pop
lods
insb
xchg
jae
push
call
pop
adc
aad
loope
dec
sbb
jmp
adc
aam
fwait
mov
push
insb
xor
into
xchg
add
or
es
bound
outsb
insb
iret
push
sub
dec
fldl
xchg
adc
and
js
sbb
sbb
dec
test
inc
int3
insl
test
scas
icebp
mov
scas
mov
pop
clc
sub
mov
insb
aam
rcr
ds
cmc
int3
insb
xor
xor
pop
shlb
sbb
pop
dec
dec
lret
sahf
push
sbb
iret
insb
cs
fxtract
insb
add
sbb
pushf
ljmp
test
or
dec
adc
je
pop
int3
hlt
cmp
adcb
shlb
insb
rcll
out
dec
pop
insb
mov
push
sub
insb
mov
bound
imul
popa
insb
pop
jle
dec
cs
insb
ret
inc
or
fidivrs
xor
adc
sub
clc
dec
sub
lods
adc
addl
lock
insb
in
xlat
and
insb
mov
sbb
subl
mov
call
mov
dec
dec
jle
in
adc
mov
jmp
adc
adc
lock
js
lret
xor
fisttpll
jns
push
cmpl
jo
jmp
cmp
xor
in
and
jecxz
ret
xchg
jle
jo
iret
sub
in
adc
imul
scas
std
test
enter
ja
out
add
mov
sub
or
add
inc
xor
pusha
xchg
lods
jmp
and
cli
xor
das
mov
loopne
jae
ss
jns
mov
sti
sbb
jp
pusha
scas
rcrl
imul
mov
pop
dec
inc
movl
cld
pop
cmp
shrl
insb
aad
pop
dec
pop
fists
insb
cmp
shr
adc
mov
mov
inc
test
and
out
fsubl
dec
insb
mov
popa
movsb
imul
hlt
mov
mov
daa
lret
leave
pusha
pop
push
push
imul
lcall
inc
insb
push
es
push
subps
mov
clc
lea
call
and
sub
pop
shlb
insb
mov
inc
inc
add
insb
cmpsl
cmc
and
iret
xor
sbb
in
mov
in
pop
cltd
fs
test
shrl
imul
xor
repnz
loopne
cmp
shl
push
adc
adc
fsubs
and
inc
dec
lods
jo
cmp
cmc
outsb
xor
lahf
add
lds
nop
jbe
test
sbb
cmpsb
adc
fdivrl
inc
stc
mov
les
fisubrs
and
insb
xlat
pop
iret
or
cmp
imul
or
xorl
cmpsl
xor
bnd
push
loop
push
dec
sti
xlat
cmc
and
in
insb
mov
push
and
leave
mov
add
jnp
call
ret
insb
mov
add
push
or
rcl
insb
mov
pop
iret
inc
gs
inc
jg
mov
fldt
pushf
pop
repz
push
dec
sub
push
dec
insl
cmp
mov
xor
sahf
insb
xchg
mov
adc
push
movsl
xor
mov
push
fnstcw
sub
push
push
icebp
test
mov
insb
fistpl
cmp
gs
sbb
cwtl
imul
scas
gs
fucom
iret
insb
cltd
dec
jno
inc
cmpsl
mov
lea
cwtl
pop
ret
or
ss
push
bound
scas
jmp
insb
pop
sub
mov
insb
cmp
rcll
daa
xor
mov
xchg
and
insl
jb
xor
les
and
insb
mov
outsl
xchg
xor
mov
insb
out
rep
or
pusha
mov
insb
inc
sbb
mov
mov
shl
insb
call
or
insb
sub
xlat
aad
cmpsl
std
xchg
push
fimull
shlb
push
push
insb
push
add
leave
insb
loope
or
rcr
insb
aaa
xor
jns
repz
inc
xor
call
mov
pusha
jp
into
insb
insl
jo
dec
push
sbb
push
cmp
cmp
dec
rep
mov
xchg
push
fwait
insb
jl
cmpsl
push
and
cmp
insb
js
aas
xor
aam
sbb
sub
and
cmp
lods
ret
add
xor
xor
xchg
pop
pop
push
xchg
iret
insb
int3
sub
mov
mov
jns
xchg
inc
clc
dec
lret
inc
mov
xor
lock
xchg
cmp
jl
push
mov
add
stc
jno
sbb
sarb
fstl
mov
mov
mov
and
cmp
or
push
mov
mov
stc
out
ljmp
dec
and
pop
sti
cmp
fs
xor
mov
orb
xlat
cs
insb
in
outsb
pop
insb
inc
loope
jmp
and
cli
aam
fldcw
jnp
bound
sti
or
pop
adc
orl
out
xchg
xlat
xchg
insb
jno
or
jg
sbb
fisubs
je
sub
insb
inc
dec
scas
bound
push
and
mov
insb
mov
sarb
out
insb
or
pop
sub
lods
imul
mov
dec
stc
xor
xchg
iret
cmp
add
out
push
dec
subl
xchg
or
insl
subl
jg,pt
insb
aad
and
imul
in
sub
iret
push
ficoml
mov
movsl
pop
xor
add
sahf
jbe
loopne
mov
pop
insb
mov
mov
je
jns
mov
adc
fisubs
outsb
cmp
js
sub
mov
lods
and
mov
adc
insb
ja
push
adc
cmc
pop
insb
sbb
rcrl
inc
push
push
cmp
std
hlt
in
ds
cmc
insb
stos
mov
xor
push
in
dec
repnz
outsl
mov
jmp
insb
fnstsw
imul
inc
test
sub
jnp
push
xchg
insb
movsb
mov
cmp
lret
insb
inc
jae
loopne
sub
testb
addr16
insl
and
gs
popa
cmp
dec
test
movsb
push
and
adc
xor
or
jmp
test
push
fst
out
loopne
adc
sbb
jecxz
aad
pop
addr16
fcos
add
int3
jno
arpl
sub
pop
inc
insb
aaa
jbe
outsl
lods
roll
fildll
js
and
in
insb
xchg
cld
xchg
ljmp
insb
push
xlat
jno
pop
loop
imul
mov
jne
js
add
lds
xchg
int3
push
mov
pop
insb
addr16
mov
pop
iret
jecxz
mov
or
xchg
in
lret
shrl
in
xlat
lds
ds
xchg
js
js
insb
jmp
pushf
fisttpl
jp
mov
subl
icebp
fstpl
ja
pushf
xchg
loopne
mov
xchg
fldcw
cmp
xchg
sub
enter
adc
rolb
idivl
insb
jb
sbb
data16
mov
or
ds
add
insb
rdmsr
call
inc
insb
lods
sbb
mov
insb
stos
test
sbb
mov
stc
xchg
mov
lods
imul
lret
imul
dec
insb
jl
jmp
adc
add
insb
stos
test
push
insb
stos
xchg
int
test
insb
add
sbb
outsl
xor
insb
or
push
xchg
subb
loop
rclb
cmp
adc
lcall
inc
mov
call
jne
xchg
sbb
sub
mov
insb
inc
push
ret
and
pop
mov
inc
insb
mov
inc
mov
cmc
les
jle
stos
xor
rcrl
xchg
lea
test
mov
in
sbb
sub
mov
mov
mov
mov
pop
dec
out
cli
pop
push
andb
outsb
pcmpgtw
adc
fistpll
dec
sbb
jl
push
test
in
mov
lock
xor
ds
jp
sub
in
add
sarl
xor
inc
lods
fldcw
cmp
sbb
cmc
xor
lea
ds
mov
pop
adc
adc
inc
pop
jl
dec
mov
insb
jmp
and
cld
sub
out
sub
jl
pop
add
mov
dec
sbb
insb
rol
mov
adc
or
xchg
mov
adc
cmpsl
insb
jle
lods
add
into
inc
inc
call
test
insb
adc
pop
clc
arpl
cmc
adc
mov
pop
adc
fstl
mov
aaa
pusha
push
insb
popl
fbld
xor
aad
loopne
dec
push
jnp
mov
sub
mov
mov
insb
and
mov
fs
mov
cli
sbb
es
fnsave
les
mov
mov
sub
push
sahf
inc
mov
pop
and
xor
testb
idivl
shll
adc
imul
pop
ret
lea
cmp
xchg
xor
jo
ljmp
aam
xlat
mov
mov
iret
insb
shlb
cmpsb
inc
imul
addr16
in
xor
jge
xchg
js
push
shlb
or
in
lahf
int
test
insb
cmp
cmc
movsb
subb
jns
pop
insb
ret
movsl
jg
add
idiv
insb
outsl
push
mov
sub
inc
imul
mov
ficomps
jno
xchg
pop
xor
jns
or
imul
fs
adc
insb
aam
sub
test
repz
les
loope
jmp
or
pop
fisttps
xchg
adc
insb
pop
pop
fs
jne
cwtl
das
hlt
icebp
insb
jecxz
testb
or
lret
lods
mov
inc
xchg
ja
and
imul
jle
add
pop
cld
es
dec
sbb
mov
popa
cmp
jmp
jb
cmp
imul
mov
ja
sbb
scas
xchg
call
repz
insb
popl
xchg
sti
pop
std
ds
insb
fnsave
push
imul
sbb
adc
inc
inc
pop
arpl
xchg
fbstp
xor
mov
jge
pop
vmovdqu
and
push
pop
cmp
xor
jb
insb
lea
pusha
jb
es
insb
xchg
pop
rcr
out
jmp
xor
lods
in
and
push
mov
sbb
insb
inc
fstp
cs
mov
jae
mov
loop
xor
lret
sub
or
push
mov
cld
cmp
data16
pop
xor
test
dec
call
fsubrl
add
mov
stos
sbb
insb
mov
lods
test
insb
fstps
jno
insb
lahf
mov
andb
imul
lods
dec
pop
js
loope
cld
cmpl
aad
jno
sti
fisubs
xchg
into
add
jmp
pop
movsb
arpl
insb
fidivs
call
xchg
imul
adc
add
push
loop
insb
and
pop
cs
lods
pushf
lret
insb
fnstenv
cmp
ljmp
test
insb
loop
mov
mov
mov
imul
out
rolb
xchg
jl
inc
imul
and
ds
pushf
int3
push
ficoms
clc
and
xchg
dec
imul
pop
push
push
dec
mul
insb
stos
push
xchg
mov
jl
aaa
pop
addr16
jae
pop
dec
mov
test
fdivrp
and
or
popa
aaa
push
fs
xor
add
testl
mov
pop
xor
jle
pop
insb
jbe
loope
or
cld
addr16
pop
mov
push
fistpll
xor
std
jle
outsb
mov
push
shlb
mov
adc
popa
cmpl
lods
daa
pop
sahf
and
mov
push
or
repz
and
push
cmp
inc
pop
fldt
call
es
int3
xor
data16
fistpl
jo
cmp
and
pop
data16
mov
fucomp
sub
pop
lea
jns
dec
fimuls
pop
sbb
test
sub
popa
fbstp
xlat
mov
test
pop
xorl
lret
lods
fs
test
push
adcl
push
pop
inc
push
xchg
jo
insb
mov
int
out
jae
lcall
imul
subl
mov
sahf
insl
in
push
pop
or
mov
sbb
js
jmp
mov
mov
push
mov
adc
pop
xchg
pop
bound
pusha
pop
scas
sbb
xor
jns
into
inc
jae
xchg
jmp
stc
inc
push
xchg
addr16
fs
push
mov
ljmp
mov
sub
jecxz
js
cmp
jmp
and
subb
jecxz
mov
imul
int3
add
insb
mov
mov
insb
loopne
xchg
cmp
inc
clc
xchg
xor
leave
imulb
jge
aam
imul
mov
pop
dec
pop
insb
das
or
mov
loop
add
push
inc
fsubrs
sub
push
insb
repnz
insb
mov
scas
pop
test
vfmadd231ps
sti
and
xor
mov
loop
mov
insb
mov
add
imul
insb
ss
adc
je
xor
insb
out
pushf
mov
fimull
test
lods
pop
sub
fldcw
pop
pop
fs
mov
add
insb
hlt
mov
int
and
pop
sbbl
inc
lret
xor
pop
mov
pushf
insb
lret
xchg
mov
insb
jae
inc
ret
mov
lcall
pop
xlat
test
fbld
mov
xchg
insb
sub
cwtl
call
pop
fstps
adc
mov
adc
inc
add
mov
in
inc
stc
outsb
push
les
aam
rorb
mov
ds
mov
nop
imul
icebp
push
out
stos
push
cmc
into
jmp
cmp
out
jb
mov
test
scas
ret
loope
pop
insb
gs
insb
dec
push
clc
lret
cmp
gs
sahf
dec
arpl
mov
mov
gs
fs
ds
push
imul
mov
push
js
dec
insb
adc
test
pop
adc
cmp
adc
xchg
imul
shl
pop
sbbb
in
in
ja
int3
imul
mov
jnp
push
lahf
cmpsl
lret
pop
mov
lahf
push
mov
nop
andl
js
xor
dec
inc
outsl
arpl
icebp
pop
pop
insb
aad
popa
xchg
add
aas
cmpsb
insb
scas
movsl
lea
inc
rcrl
pop
xchg
vdivpd
cltd
outsl
dec
subb
dec
and
adc
out
or
stos
sti
inc
jns
subl
mov
add
les
push
pop
sub
xor
dec
push
imul
rol
mov
inc
sub
call
insb
jb
jge
xor
xor
pop
xchg
or
cmc
lods
imul
bound
and
movsb
mov
insb
inc
out
pushf
push
shrb
loope
mov
imul
or
add
xchg
ror
jg
andb
pop
frndint
insb
dec
out
pop
mov
lock
divl
push
call
insb
add
add
jecxz
dec
ret
push
aaa
out
dec
mov
imul
mov
jl
shrl
or
lods
iret
jns
insb
jmp
lret
insb
fiadds
jp
imulb
das
rorb
xor
in
sahf
push
iret
sti
scas
cmp
bound
mov
insb
or
ret
sti
dec
xchg
pop
out
cltd
loopne
int3
mov
insb
pop
or
cmp
lods
dec
insb
xchg
imul
bound
insb
repnz
add
jnp
and
into
hlt
sub
insb
aaa
and
in
mov
out
insb
jmp
xor
pop
outsb
adc
clc
es
call
push
out
pop
ja
pop
gs
jnp
jno
or
shlb
adc
ljmp
test
insb
dec
rcrb
js
mov
imul
fdivr
dec
ljmp
cmp
ja
cltd
mov
shll
cmpsb
pop
push
fists
loop
pop
leave
arpl
and
adc
sarb
fwait
icebp
pop
mov
sbb
mov
mov
adc
adc
push
pop
mov
mov
loope
call
lea
jmp
fsubl
gs
pop
sarl
adc
fisubrs
jb
push
orb
imul
call
add
mov
or
adc
sub
les
mov
xchg
mov
sbb
ror
popf
in
ret
xchg
pop
lods
imul
insb
pop
insb
jno
sahf
and
test
add
cld
cs
scas
or
adc
imul
and
jge
mov
jmp
push
arpl
nop
inc
hlt
lods
mov
insb
ret
push
mov
jl
rcrb
and
insb
aas
add
lods
js
lds
enter
pop
fnsave
jb
aas
add
cld
in
int3
lahf
push
inc
outsb
cmpsl
insb
fwait
dec
jmp
gs
xor
sti
cmpl
insb
mov
and
test
sti
mov
adc
fsts
stos
movsb
insb
jns
pop
arpl
enter
lods
pop
out
outsb
in
shlb
adc
fldenv
mov
lods
enter
rcll
jp
sub
and
and
inc
adc
cmp
loop
jmp
lods
pushf
mov
arpl
in
imul
lds
dec
jle
js
adcb
insb
into
clc
sbb
scas
inc
inc
sub
adc
sti
jo
dec
pusha
pop
xor
adc
ss
push
roll
mov
insb
mov
and
mov
insb
hlt
leave
dec
lock
in
insb
jb
sub
nop
push
aam
insb
repnz
jbe
mov
mov
sub
pop
loopne
fwait
jmp
insb
cmpsb
aas
mov
sub
lods
xchg
gs
cmc
lret
scas
shll
jnp
cs
ja
out
cmpsl
adc
adc
insb
pop
sub
enter
sahf
pop
dec
dec
iret
popf
sbb
mov
or
inc
andb
sbb
add
jmp
pushf
das
xchg
in
adc
pop
insb
in
hlt
rol
pop
push
movsl
push
add
jp
mov
inc
out
imul
push
jge
test
das
je
imul
xor
lea
in
call
pop
ret
insb
aas
divl
sahf
insb
or
and
icebp
addl
sub
gs
lods
add
in
mov
mov
imull
jge
rcll
dec
insb
push
or
pop
insb
and
scas
xchg
dec
dec
or
inc
mov
adcb
jmp
add
cmp
jl
popf
insb
decb
loop
in
out
insb
into
and
test
inc
insb
sbb
fwait
push
addl
cmpsb
jg
push
lea
xor
out
lret
insb
cwtl
fwait
adc
push
fsubr
cmp
pusha
push
pushf
stos
icebp
repz
insb
clc
int
mov
out
push
insb
pop
hlt
push
pop
cmp
mov
dec
pop
ljmp
shld
shrb
xchg
mov
insb
inc
adc
add
mov
dec
insb
ret
test
stos
mov
icebp
xor
jno
sbb
sub
ss
divl
and
addl
roll
ss
mov
insb
adc
jnp
insb
movsb
mov
xchg
mov
sub
add
aad
or
mov
outsb
ret
push
movsl
out
sub
dec
insb
jp
xor
lock
and
sbbb
insb
das
dec
jmp
out
dec
inc
pop
push
imul
xchg
insl
jo
popf
sti
insb
jae
jmp
or
insb
cli
mov
stos
sub
shr
test
enter
inc
insb
adc
mov
ret
pop
pop
loope
cli
in
dec
dec
mov
xchg
imul
mov
fdivl
adcb
push
and
xchg
in
or
in
mov
imul
das
pop
push
je
pop
mov
repz
push
mov
push
jae
xor
insb
fwait
push
andl
imul
cmpsb
ror
fldt
loop
insl
push
jecxz
sub
xor
scas
push
pop
cli
into
or
ret
imul
add
pushf
inc
jp
in
out
out
mov
or
push
not
in
lcall
in
test
push
stos
pop
xchg
xorl
add
inc
sbb
jge
popf
push
std
jecxz
in
jns
movsb
push
pop
pop
orl
das
pop
enter
roll
or
xlat
mov
stos
xor
mov
cmp
bound
or
push
subl
jno
push
fmull
push
jo
push
sub
cld
sub
jg
test
sbb
xlat
xchg
insb
xchg
loope
dec
lcall
jo
adc
insb
mov
std
sbb
insb
mov
sub
gs
dec
adc
scas
loopne
bound
pushf
fs
lods
sbb
scas
jg
in
daa
push
push
pop
int
xorl
pop
arpl
push
pop
insb
daa
xchg
xchg
js
xorl
insb
dec
jno
mov
imul
sub
je
lahf
dec
insb
pop
xchg
adc
gs
sahf
dec
fmull
clc
pop
lods
mov
push
sbb
sub
popa
inc
mov
shrl
scas
or
insb
pop
out
and
dec
clc
daa
cmp
orb
xchg
insb
or
mov
into
ds
sub
aas
fldl
xlat
lret
pushf
into
sbb
mov
insb
mov
xchg
insb
xor
cmp
std
insb
push
xor
push
pop
dec
jbe
insb
sub
lods
dec
mov
mov
insb
scas
add
insb
rcll
daa
lahf
insb
into
fdivrs
jbe
inc
xchg
or
push
and
xlat
pop
test
repz
and
fisttpl
imul
test
shlb
lods
add
jp
mov
sbb
pop
movsb
push
jecxz
daa
insb
xchg
outsb
ret
jmp
fldt
xor
mov
dec
call
lahf
sbb
lock
sarb
mov
or
xor
dec
insb
sbb
mov
add
add
push
shrb
gs
fcoml
cmc
cmp
jnp
aas
imul
das
sbbl
insb
xor
std
sub
stos
mov
ret
mov
insb
mov
mov
daa
clc
cltd
insb
mov
jo
outsb
mov
mov
push
std
and
xchg
push
insb
sbb
ss
sbb
out
push
xchg
insb
imul
aaa
cmpb
rolb
cmpsb
imul
xor
pop
insb
iret
mov
pop
adc
dec
addr16
lods
lret
push
jb
mov
mov
in
xchg
imul
mov
cmpsb
dec
in
popf
cld
xor
jne
lcall
insb
pop
mov
js
in
pop
insb
mov
out
in
mov
xchg
in
pop
lret
jno
mov
rep
lock
rorb
test
in
jmp
test
jno
movsb
mov
imul
or
in
in
jp
jle
insb
pusha
mov
adc
inc
rclb
daa
jl
fisttpl
repnz
insb
inc
fsubrp
sub
xchg
loope
mov
outsb
mov
ss
lret
add
into
xchg
fisubrl
push
xor
inc
sti
std
pop
cwtl
cmpsl
in
stos
or
sub
addb
arpl
sbb
push
or
or
movsb
jo
jge
xchg
pop
call
jbe
repz
enter
aas
insl
push
jl
mov
cmpsb
insb
pop
int
fcomi
jne
xor
xor
fstpl
or
fisubrl
dec
xor
out
insb
inc
out
dec
mov
in
test
in
lds
out
lock
pusha
data16
add
and
or
pop
cld
fistps
loopne
adc
jne
jb
mov
sub
shrb
call
scas
and
es
cmp
inc
jecxz
add
xor
cld
and
pop
popf
lods
adc
inc
in
xchg
popa
aam
push
sbb
jae
inc
icebp
pop
loopne
or
or
fsubl
inc
scas
jns
add
mov
mov
inc
cmc
xchg
add
ljmp
loope
pop
push
xchg
jb
addr16
pop
call
add
in
pushf
loope
in
jo
ljmp
or
mov
push
jecxz
divb
test
push
std
or
add
add
jmp
fisubrs
in
sti
jecxz
mov
int
faddl
mov
sbb
inc
movsl
nop
les
mov
pop
pop
nop
or
imul
cmp
xlat
cmp
sub
and
push
std
movsb
or
mov
bound
xor
sbb
fiadds
pop
inc
ja
cmp
in
xor
jp
loop
mov
pop
add
rcrl
and
imul
jns
push
out
xchg
dec
push
xlat
pop
xchg
jne
dec
xor
mov
addr16
int3
xchg
inc
cmp
adc
push
imul
icebp
or
insb
pop
rorb
xchg
sbb
jns
push
adc
inc
gs
cmp
int3
fbld
insb
in
push
cmp
aad
mov
insb
sub
pop
pop
out
out
les
xchg
int3
aas
or
push
sbb
or
sbb
inc
dec
lahf
ret
inc
sub
aad
xor
insb
mov
mov
ret
jl
cmpsl
adc
in
mov
cmpsb
test
lods
pop
xchg
repz
int3
imul
in
and
mov
sub
mov
in
push
jecxz
sbb
cmp
jo
insb
xchg
fwait
rcll
loopne
les
in
and
sbb
add
add
mov
ss
jae
jle
in
pop
push
icebp
xor
lcall
stos
insb
dec
inc
test
and
sbb
mov
jg
outsl
and
inc
insl
pop
insb
adcl
outsb
insb
or
std
mov
push
adc
in
add
inc
js
add
lds
and
cmp
icebp
sbb
insl
mov
cmpsb
rolb
insb
lods
mov
mov
xor
dec
insb
inc
pop
push
scas
into
fldcw
and
mov
hlt
insb
sti
shrb
add
push
inc
mov
je
into
lea
inc
pop
fstpt
gs
push
stc
mov
ja
orb
sbb
and
and
out
dec
in
repnz
lea
adc
jo
insb
mov
xchg
push
cmp
mov
mov
in
or
ljmp
pop
lds
jp
push
adc
movsl
jmp
in
pop
mov
movsb
dec
add
outsl
fwait
push
cs
insb
in
lds
bound
sbb
xor
insb
fadds
lret
leave
insb
inc
stos
test
insb
push
inc
inc
sub
jb
popa
iret
stos
bswap
in
cli
and
mov
push
xchg
jge
imul
fwait
repnz
sbb
in
arpl
push
jae
sub
xchg
int3
gs
and
fwait
pop
cli
iret
insb
sbb
adc
shlb
shrl
pop
sub
xor
adc
outsl
jle
popa
daa
shlb
jp
fildl
xor
mov
decl
aaa
ret
imul
movsb
test
jl
clc
insl
insb
cld
pushf
pop
xor
rcl
xchg
jle
xor
push
iret
je
insb
cmp
les
pop
add
sub
imul
repz
jns
js
rcl
mov
xchg
mov
fnstsw
dec
popa
pusha
lods
aaa
pop
push
gs
sahf
clc
push
mov
push
mov
sub
lret
jb
mov
aas
repnz
pop
hlt
inc
inc
cwtl
insb
adc
mov
jo
insb
cmp
mov
in
cli
stc
inc
je
bound
imul
jae
or
mov
cmp
cmp
jp
pop
xchg
hlt
imull
loop
mov
inc
jl
aad
mov
cmp
lds
sbb
dec
les
adc
mov
ja
push
int
rcrl
cmp
inc
stos
notb
mov
sub
adc
hlt
dec
cmp
mov
mov
std
out
push
or
imul
cs
mov
push
insb
daa
int3
fdiv
pushf
push
inc
insb
sub
lret
xchg
xor
inc
aam
movsb
sbb
sub
cs
enter
adc
xlat
insb
and
mov
jp
aam
insb
fldcw
mov
or
pop
cmp
insb
mov
and
dec
lret
push
mov
insb
mov
andl
and
add
jo
scas
dec
inc
insb
out
fists
fsubrl
addr16
movsb
sbb
ljmp
adc
fs
pop
negl
push
fisubrl
jnp
mov
clc
int3
inc
dec
sub
aas
outsl
sahf
cmp
jae
loope
xchg
cmp
add
mov
inc
test
insb
and
sub
mov
cmc
sub
subb
push
rcr
movsl
cmp
and
je
mov
mov
cmpl
jno
mov
and
dec
mov
sbb
xor
sub
push
or
fidivl
xchg
push
and
les
rorl
xchg
rep
daa
xchg
xor
and
dec
in
insb
fmull
fwait
negl
mov
sbb
insb
dec
scas
cmp
add
sbb
test
sbb
pop
or
xor
stos
mov
and
enter
xlat
cld
and
mov
xor
mov
popf
or
xor
mov
sub
outsb
mov
je
mov
ljmp
or
dec
push
mov
les
sub
mov
into
inc
aam
je
add
pop
mov
xlat
decb
and
cmpsl
mov
adc
insb
jne
xchg
shlb
insb
imul
fdivs
or
cmp
insb
xchg
jno
mov
int3
xchg
mov
fstpl
mov
in
imul
pop
loopne
and
bound
insl
insb
cwtl
push
xchg
or
movsl
adc
insb
xor
adc
push
dec
pminsw
inc
sti
lods
pop
push
sub
jb
lret
cmpsb
sbb
out
cmp
mov
mov
das
shl
dec
subb
push
not
insb
aas
mov
cltd
lods
pop
mov
lods
xor
adc
jmp
insb
fiadds
and
cli
mov
jnp
mov
movsb
push
cmp
cmpsb
cltd
scas
insb
and
sahf
pop
imul
div
rol
insb
jmp
outsb
dec
inc
push
and
dec
sti
into
xor
sub
sub
mov
jbe
call
movsl
insb
push
cmp
or
pop
add
inc
shlb
or
test
pop
add
inc
gs
push
push
mov
jp
insb
jecxz
test
xor
aad
or
je
ljmp
ja
push
lods
jnp
out
xchg
lret
push
pop
mov
mov
add
sbb
outsl
mov
imul
or
roll
test
inc
fisttpl
push
in
test
push
mov
sbb
jno
int3
mov
xor
insb
les
divl
mov
in
dec
jmp
popa
insb
add
pop
xor
insb
lret
or
sub
in
dec
adcl
arpl
ss
sub
popf
sub
rolb
gs
dec
cwtl
inc
mov
insb
es
addl
pop
mov
call
dec
hlt
popa
mov
dec
push
in
pop
jmp
xchg
testl
xor
xchg
lret
xor
sbb
mov
pop
stos
out
lock
mov
cmp
xacquire
jbe
insb
in
call
mov
mov
sub
insb
dec
fistpl
mov
push
movsl
insb
xchg
idivl
addr16
mov
pop
pop
pop
cli
dec
sub
bound
fidivrs
add
mov
or
mov
rclb
and
int3
dec
mov
xor
and
inc
mov
nop
xchg
icebp
and
aam
and
pop
cwtl
pusha
loop
insb
std
and
arpl
adc
out
inc
dec
xor
stos
cmp
das
sub
insb
sbb
int3
loopne
xor
mov
sub
xchg
pop
xchg
xchg
aam
imul
fadds
add
pop
and
ds
mov
jns
inc
insb
and
or
insb
mov
inc
cs
push
or
dec
cwtl
divl
rolb
xchg
rcrb
js
es
sar
inc
xchg
adc
icebp
aaa
fisubl
insb
in
bound
dec
fwait
loop
xchg
loope
test
stc
cmp
movsl
push
jmp
mov
xor
mov
insb
stos
add
loope
pop
aaa
ja
cwtl
cmpsb
jl
add
ds
xor
inc
push
mov
xor
enter
insb
aaa
hlt
xor
or
shlb
mov
jne
adc
negl
repnz
mov
dec
stc
pop
jl
add
sbb
mov
leave
jl
imul
xor
popf
fwait
gs
sbb
lcall
in
inc
cmp
lods
loopne
xchg
cs
inc
dec
or
push
dec
add
cmc
leave
inc
fwait
mov
sub
cmp
in
push
outsl
dec
nop
insb
adc
insl
les
js
insb
jl
call
mov
in
scas
orb
mov
jnp
push
int3
clc
cmpsl
insb
cmc
mov
scas
ret
sbb
mov
test
sti
flds
lds
clc
int
aas
andl
mov
adc
dec
stc
mov
or
in
aad
inc
lret
dec
insb
fistps
in
insb
loope
rcrl
xor
insb
ss
inc
and
xor
ja
int
xchg
movsl
xor
mov
aas
mov
lods
push
and
jno,pn
imul
mov
or
setl
gs
or
out
jno
sub
outsb
repnz
insb
in
mov
loopne
mov
push
mov
mov
hlt
dec
out
cli
imul
mov
add
jg
or
xor
in
pop
jmp
xchg
mov
icebp
jae
add
jne
xor
push
in
nop
push
stos
or
jl
imul
int3
sbb
rcll
popf
mov
fs
insb
dec
or
push
pop
rol
mov
insb
add
pop
xor
lods
outsl
fdivr
mov
cmp
fidivrs
ss
sub
pushf
pop
sbb
insb
push
mov
sub
loop
notb
mov
addr16
out
insb
inc
scas
mov
loope
hlt
push
dec
mov
mov
imul
int
jecxz
insl
test
jle
loopne
mov
jnp
or
imull
or
sub
pop
push
inc
push
sarb
orb
cmp
mov
lea
and
mov
jp
data16
hlt
xchg
adcb
mov
mov
mov
fs
addr16
xor
daa
das
inc
jge
adc
inc
pushf
mov
pop
lods
aad
add
xchg
test
out
mov
ljmp
popf
xchg
shll
adc
enter
andb
adc
loop
or
mov
or
imul
cmp
lods
xor
mov
insb
scas
adc
leave
push
mov
in
xor
inc
fsubrl
arpl
arpl
rorl
in
inc
cmp
mov
xchg
aam
std
bound
mov
push
mov
cmp
lret
loope
fcmove
and
or
test
imul
or
sbb
test
mov
xor
enter
rorb
jns
push
insl
sub
jo
pop
lods
je
jp
insb
movsl
mov
add
mov
aam
frstor
pop
xor
out
in
les
test
push
scas
push
pop
je
jne
inc
mov
mov
fsubl
inc
cmpsl
cmpl
jnp
mov
cmp
in
sbb
pusha
xchg
lock
cmp
push
push
sti
fimull
insl
push
cli
test
mov
fisttpll
xorl
xchg
mov
sub
mov
pop
or
loope
in
movb
or
cwtl
insb
and
jb
lret
push
les
mov
xchg
out
popa
pushl
or
jl
xor
xor
push
jle
in
mov
adc
shrl
mov
aad
mov
adc
insb
cmp
scas
mov
int3
xchg
fwait
outsb
je
pop
jmp
stc
xchg
sarb
adc
aad
es
cltd
insb
addr16
inc
add
pusha
lods
or
test
insb
lret
in
mov
subl
add
lahf
mov
popf
or
push
scas
push
insb
adc
mov
and
push
dec
or
inc
mov
dec
jmp
iret
popf
mov
add
xlat
inc
mov
push
jge
push
shrl
mov
cld
push
sub
xchg
icebp
sub
cmpsl
add
fcmovb
pop
insl
fsubrs
insb
enter
loope
shrl
imul
fiaddl
adc
popa
insb
fsubr
aad
dec
pop
fwait
cld
xor
pop
and
popa
sub
loope
cmpsb
int
or
or
cmp
xorl
outsb
mov
pop
popf
mov
mov
js
pop
ljmp
shlb
and
clc
mov
pop
divl
ds
dec
push
fsubrp
test
nop
cmp
stos
gs
fmulp
fiaddl
sub
aaa
sbb
cwtl
iret
mov
push
into
cmp
jo
pop
inc
gs
sub
mov
aas
pop
fsubl
insb
mov
in
adc
jmp
or
dec
mov
push
insb
in
xor
imul
les
movups
fdivl
pop
int3
sbb
rorb
in
outsl
lods
cmp
add
dec
insb
out
push
iret
js
movsb
out
mov
mov
inc
push
insb
cmp
xlat
add
insb
in
sbb
jmp
and
mov
push
in
cmp
sub
stc
xchg
xor
mov
cld
mov
pop
nop
imul
mov
and
mov
jle
mov
push
and
dec
pusha
xchg
repnz
or
insb
call
inc
in
inc
insb
push
pop
xchg
cmp
xrelease
push
sti
insb
jno,pt
fdivrl
mov
imul
lret
and
add
mov
mov
xchg
imul
sbb
js
jno
insb
es
lods
clc
out
into
dec
adc
fs
mov
xchg
fsubrs
stos
sbb
cmp
insb
out
inc
ret
and
insb
mov
cwtl
fwait
push
or
mov
pop
push
lods
cmp
outsb
mov
adc
je
lea
sbb
sbb
pop
call
fisubrl
and
out
adc
or
mov
cs
bound
dec
cmp
pop
std
lret
dec
add
adc
cmp
adc
cmp
pushf
pop
mov
and
cmpsl
js
pop
sti
into
in
jmp
pop
add
adc
add
inc
fdivl
pop
or
sub
sti
clc
mov
insb
lock
gs
push
fsubl
ja
insl
imul
stos
lock
push
movsb
nop
push
scas
mov
mov
jo
inc
stc
pusha
mov
int
mov
lods
je
test
out
daa
out
insb
jmp
adc
pop
insb
add
xor
fnstenv
aam
ds
jp
push
dec
js
or
add
lret
cltd
movsb
xor
out
or
mov
insb
js
fidivrl
dec
pop
pop
scas
gs
add
movsb
pushf
hlt
fldcw
and
add
fcompl
insb
fildll
xchg
shrl
gs
push
pop
shlb
movsb
add
fisubs
dec
imul
fsubrs
xchg
xor
arpl
or
out
lods
pop
insb
dec
jo
je
xchg
das
add
pop
addr16
arpl
add
dec
sahf
pop
jno
imul
xchg
push
sbb
xchg
ss
fdivrl
adc
cli
ds
insb
dec
and
lcall
je
pop
mov
fldenv
insb
sbb
pop
sbb
testl
mov
imul
stos
xchg
insb
in
aad
imul
adc
pop
xchg
insb
pusha
daa
mov
loope
sbb
or
out
lods
mov
repz
das
mov
in
mov
stc
mov
std
test
jmp
dec
mov
das
insb
lret
xchg
xlat
repnz
fnstenv
subl
push
dec
or
jne
xor
fcoms
jp
lods
sub
iret
sub
mov
cmp
or
push
mov
addr16
and
ret
test
dec
sahf
pop
push
test
imul
lods
int
mov
push
jmp
add
xchg
imul
jno
insb
fwait
inc
ljmpw
insb
sti
jmp
push
lock
mov
lret
jnp
dec
xor
insb
xchg
fwait
lcall
movsl
xor
and
js
jb
lods
lret
mov
int3
insb
mov
out
imulb
scas
fisubrs
jecxz
mov
jae
jl
dec
sahf
push
xchg
push
outsb
movsl
push
pop
mov
pushf
imul
mov
rcrb
jns,pn
xchg
lds
pop
push
loop
cmp
int
inc
pop
mov
insb
loopne
jl
push
in
repnz
pusha
jge
jb
nop
std
cmp
lods
and
rep
les
xchg
dec
ret
push
aam
or
mov
jb
mov
mov
mov
cmpsl
je
xchg
bound
lds
and
insb
lods
movsl
int
mov
test
xor
outsl
jp
jo,pn
clc
adc
push
and
jo
cmp
mov
insb
push
mov
std
imul
mov
push
icebp
insb
das
fstps
fsubrl
pop
wbinvd
int3
fucomip
popf
push
pop
sub
insb
test
dec
pop
stc
pop
inc
arpl
insb
repnz
in
loop
fsubrl
das
fisubrl
mov
mov
insb
sbb
jp
push
xor
sbbl
lds
mov
lcall
pop
inc
in
iret
jl
or
or
aam
in
push
repz
insb
fimuls
nop
int3
insb
cmp
jne
jge
sub
std
mov
icebp
jl
ret
insb
mov
clc
sbbb
mov
in
jp
inc
cltd
mov
popa
inc
orl
dec
insb
cwtl
jb
mov
inc
mov
adc
arpl
movsl
insb
stos
push
push
mov
insb
inc
lret
dec
inc
stos
aas
fdivrl
int3
mov
sub
push
shrb
sub
push
inc
sti
outsl
mov
mov
xor
push
add
aas
push
enter
mov
mov
xchg
inc
insb
sub
int
subl
bound
cmp
cwtl
cs
lods
dec
lret
ja
adc
es
cld
icebp
insb
push
add
stc
pop
outsl
imul
aad
sbb
insb
add
leave
jb
cmpsl
cli
shr
loope
pop
insb
add
imul
xor
xchg
jo
insb
decb
dec
sub
push
add
movsb
fdivl
dec
cmp
xor
pop
mov
lahf
insb
sub
repnz
test
mov
or
xor
push
in
into
pop
pop
bound
negb
in
mov
jle
gs
es
pop
mov
adc
adc
mov
mov
and
mov
push
imul
jecxz
stos
push
inc
nop
mov
xchg
out
hlt
xor
sbb
jo
insb
aaa
or
leave
xchg
imul
scas
mov
bound
insb
cmp
and
out
or
imul
jmp
cmp
test
mov
fcoms
sub
inc
mov
sub
je
leave
cmp
fstl
sbb
cmp
lods
aad
dec
insb
pushf
loop
mov
lods
outsb
popf
mov
push
mov
lea
cmp
xchg
insb
or
call
jno
je
sub
insb
mov
jo
cmp
fsubr
ds
cld
mov
mov
andb
mov
lcall
add
sbb
into
jno
or
mov
sbb
fldt
cltd
push
pop
mov
lods
jne
popf
inc
gs
call
sub
fidivrl
jp
push
inc
xor
jle
push
call
sub
jg
dec
push
jecxz
cld
cmp
cld
fadd
insb
push
lcall
cwtl
insb
addr16
mov
fidivs
bound
imul
inc
xor
aaa
sbb
or
cmp
daa
imul
testb
mov
ffreep
std
mov
adc
jmp
insb
pop
inc
and
ja
jl
dec
fadds
and
xlat
pop
lock
jp
fs
cmp
adc
in
in
mov
cwtl
add
xor
decl
pop
hlt
or
mov
lds
cld
in
mov
push
popf
cmp
xor
jle
fsubrl
dec
lods
enter
insb
mov
lea
insb
push
mov
mov
insb
test
addr16
andl
fwait
rclb
mov
and
mov
push
dec
xchg
bound
in
mov
icebp
ja
imull
xchg
jo
pop
mov
inc
pushf
int3
cmp
pop
data16
add
push
outsb
in
insb
sub
mov
popf
pop
inc
test
int3
rorb
mov
mov
call
fsubrs
xlat
sub
insb
push
fsubl
clc
mov
xchg
sahf
xchg
mov
cmc
lods
cli
clc
xchg
push
in
in
adc
imulb
loopne
mov
push
jns,pn
insb
es
addb
pop
dec
lret
out
test
fucomp
mov
mov
insb
jl
sarl
das
sub
in
mov
push
das
lret
adc
int3
cmpsl
lods
mov
mov
cwtl
pop
cmc
int3
ret
call
movsb
dec
inc
lret
pop
ficompl
push
ds
adc
mov
in
inc
cwtl
mov
mov
insb
lds
mov
push
scas
out
mov
stos
iret
jle
jb
xor
mov
xor
clc
mov
or
cmp
push
rclb
sbb
aas
push
lahf
insb
cs
mov
push
std
and
insb
push
iret
or
sub
mov
pop
adc
push
jb
lods
test
xor
pop
sahf
dec
and
jns
dec
mov
sub
cli
pop
fimull
ds
push
imul
xor
imul
mov
insb
jno
mov
and
lods
sub
jmp
test
mov
test
fstpl
ljmp
in
or
movl
pop
mov
sub
cmpsl
ljmp
movsb
sub
in
fisubs
js
mov
ss
mov
insb
mov
fisttps
mov
stc
int
icebp
mov
faddl
sbb
xor
mov
push
jp
dec
mov
testb
pop
loopne
dec
dec
and
imul
inc
jo
insl
push
adc
cltd
dec
or
xor
push
imul
adc
out
ret
xor
testb
loop
adc
mov
mov
fistps
adc
insb
int3
push
pop
jae
sub
xchg
lods
and
push
push
sub
pop
pop
out
call
inc
dec
mov
fldenv
jl
aas
xchg
test
or
insb
or
aam
push
mov
aad
insb
jbe
arpl
mov
xor
test
dec
jl
shr
outsb
es
int3
or
mull
jecxz
add
and
test
mov
insb
stos
testl
push
idivb
addr16
mov
jg
cmp
aas
cmc
int3
pusha
out
outsl
cltd
and
insb
popf
fs
pop
movsl
repz
push
mov
in
push
orl
stc
aam
ss
insb
or
out
push
icebp
addb
push
movsb
jae
dec
dec
fwait
xchg
and
mov
addr16
jmp
popa
pop
leave
cmpsl
in
cmp
mov
pop
mov
aaa
adcl
ss
sub
inc
add
adc
fs
stos
and
adc
push
mov
out
inc
enter
loopne
data16
sbb
outsl
cmp
insb
hlt
jno
push
frstor
out
insb
add
mov
jb
push
lea
cmp
insb
std
pusha
add
and
mov
insb
andl
mull
shl
outsl
in
lods
dec
sbb
movl
xor
or
lock
mov
inc
mov
xchg
cmpsb
insb
sub
sti
cmp
sbb
cmp
insb
dec
push
adc
and
fldt
cltd
test
push
pop
cld
imulb
call
ljmp
lret
jecxz
or
pusha
leave
out
xchg
lds
lret
dec
cmc
sbbb
mov
popa
push
int
imul
jecxz
jne
mov
and
jg
jl
mov
jecxz
out
xchg
insb
in
aad
xor
outsl
add
dec
mov
out
or
xchg
outsb
mov
inc
insb
cmp
fidivrl
xchg
push
je
and
mov
scas
insb
into
fcompl
sahf
xchg
imul
adc
insb
or
adc
mov
int3
lds
adc
int3
outsl
or
jecxz
test
jge
or
adc
sbb
xor
shl
scas
adc
dec
enter
add
test
pop
cld
aas
repnz
mov
dec
xor
adc
jno
jmp
inc
xchg
popf
stos
test
fcmove
or
ljmp
roll
int3
inc
push
or
xor
aaa
in
rorl
jmp
jge
mov
lret
and
dec
or
push
mov
lds
adc
add
xchg
push
les
subb
gs
negl
je
fldcw
push
pop
imulb
int3
push
adc
sub
pop
mov
mov
insb
mov
clc
xchg
arpl
int3
aas
cld
push
and
inc
inc
xor
inc
xor
ljmp
fmull
mov
pushf
dec
aas
sahf
xchg
cs
movsl
popa
xchg
xchg
testb
and
fwait
clc
sub
mov
lods
xor
add
xor
outsl
adc
shrb
or
bound
sub
mov
add
jae
push
insb
sub
pop
enter
insb
jnp
inc
repnz
insb
or
jge
mov
xchg
and
std
lods
cmp
aaa
insb
adc
ss
gs
mov
int
insb
xchg
loope
push
das
and
jnp
add
fsubl
in
mov
test
lcall
mov
scas
fxch
mov
or
je
std
jmp
imul
xchg
inc
ret
jno
xchg
sbb
pop
sbb
and
fwait
xchg
lret
lds
addl
sbb
hlt
rcrb
out
int
insb
and
and
daa
dec
jnp
or
bound
sbb
std
push
insb
xor
add
insb
push
and
mov
xchg
call
lret
out
sub
insb
pop
xchg
dec
mov
repz
outsb
mov
insb
out
xchg
fmull
aad
push
mov
cs
jp
imul
pop
out
jmp
cltd
mov
mov
cmp
and
adcb
insb
sbb
and
insb
or
mov
xchg
insb
inc
dec
inc
ret
xchg
pusha
je
insb
stos
mov
sub
lock
jnp
push
dec
mov
movsb
mov
mov
adc
jb
test
insb
popa
das
push
and
xchg
push
xor
add
cmp
jecxz
fs
mov
add
cli
xor
es
dec
leave
adc
mov
fidivrl
shrd
xchg
and
add
fldcw
popf
rorb
xor
pop
std
xor
sub
jae
mov
sbb
sub
lahf
jle
imul
mov
xor
ljmp
fisubrl
enter
scas
leave
shll
adc
insb
sbb
mov
popa
mov
push
xchg
aam
in
jnp
test
jle
xchg
or
mov
or
repz
iret
mov
scas
jp,pn
push
insb
cltd
mov
push
testb
clc
outsb
sbb
xchg
adc
jp
cltd
sti
mov
scas
sub
mov
push
cmp
cmp
sahf
dec
inc
lods
sbb
dec
push
fisttps
lods
push
shl
jo
mov
imul
imul
fdivl
test
out
scas
insl
stc
inc
outsb
push
je
nop
es
iret
rcrb
outsl
adc
clc
in
push
sub
cmp
dec
cmc
xor
shr
int3
cmp
pop
inc
popf
pushf
insb
inc
add
insb
mov
ja
mov
fisttps
in
loopne
jnp
inc
sbb
cmp
add
pop
xchg
gs
jg
arpl
gs
pop
or
and
insb
sub
push
fcoms
fnsave
aad
mov
mov
inc
add
mov
adc
jmp
pop
fld
sub
jo
mov
inc
xchg
dec
int
push
in
xrelease
cmc
cmp
stc
fdivr
rclb
pop
std
int3
mov
loop
xor
ret
ljmp
mov
cmp
mov
insb
mov
or
fisubrs
mov
int3
ja
insb
mov
mov
shll
dec
arpl
je
sbb
flds
insb
ljmp
push
pop
sbb
mov
call
insb
jecxz
ss
cli
jmp
insb
pushf
sbb
es
or
xor
cwtl
dec
xor
mov
test
nop
test
inc
imul
insb
dec
push
ds
lahf
pushf
in
adc
mov
imulb
sub
ror
insb
add
out
and
in
arpl
and
aas
push
pop
cmp
je
mov
arpl
scas
inc
data16
scas
in
cmc
cltd
stc
xchg
test
adc
shr
in
xchg
call
push
lods
in
sbb
aas
adc
xor
bound
jl
sbb
add
aas
or
pop
fwait
push
stc
fstl
outsl
jge
and
sub
jmp
push
mov
and
add
mov
lret
loopne
sbb
cmp
or
adc
test
cmp
jbe
mov
dec
in
pop
or
xchg
xlat
lret
pop
adc
adc
jo
and
out
outsl
pop
fimull
pop
movsl
jmp
nop
sbb
out
mov
dec
clc
sub
mov
adc
jno
add
push
lock
scas
adc
and
xor
adc
mov
adc
mov
mov
lods
popf
rcrl
gs
jmp
add
out
xor
ret
test
fiadds
leave
gs
sti
push
xor
es
pop
test
out
movsl
jmp
xchg
mov
xchg
dec
jl
sbb
fnstsw
jmp
les
add
ss
out
lods
push
enter
stc
stos
stc
add
mov
orb
insb
clc
daa
cmp
nop
jmp
insb
in
xor
pop
cli
jge
xor
sbb
xor
push
jo
jecxz
mov
inc
xchg
mov
imul
inc
dec
push
xchg
imul
pop
pop
std
call
and
mov
jbe
insb
sub
dec
out
test
xlat
scas
dec
add
sbb
pop
jecxz
stos
mov
jp
insb
xor
xlat
mov
ss
call
mov
xor
jno
fdivrs
dec
popl
cmpsb
sbbb
outsb
dec
test
add
lcall
insb
rcrb
sbb
ljmp
dec
imul
ret
inc
adc
das
cwtl
imul
into
insb
mov
jno
in
sbb
mov
gs
jae
cmp
dec
movsb
test
sbb
push
adc
lods
and
lret
fldt
sbb
insb
repz
scas
mov
cmp
hlt
jno
jnp
inc
insb
push
loope
xor
pop
popf
mov
mov
pop
inc
insb
mov
dec
and
stos
sbb
hlt
dec
sub
pop
cwtl
fisubl
push
jns
lret
xlat
sbb
rorb
call
xchg
aam
in
inc
mov
subb
insb
std
jge
mov
push
mov
divb
aaa
popf
rcr
popa
xor
fnsave
subb
cld
rorb
adc
pop
adc
xor
insb
jecxz
dec
xor
jo
xchg
pop
or
insb
jb
mov
jg
ja
ret
cltd
je
cmp
imul
xlat
cmp
insb
sbb
jo
pop
dec
mov
insb
dec
pop
adc
sbb
mov
fdiv
jae
in
lcall
icebp
lods
push
mov
jp
xchg
sti
mov
push
ja
call
insb
cmpsl
xchg
repnz
test
inc
lahf
mov
insb
orb
outsb
insb
adc
jnp
adc
loop
daa
jb
dec
aaa
cwtl
imul
mov
insb
sbb
pop
jge
lock
push
outsb
sub
in
lods
ja
mov
lds
iret
scas
pop
int
rclb
test
push
std
daa
ds
dec
int3
and
fisubrl
cmp
test
movsl
mov
cmp
repz
movsb
ficompl
dec
out
cmp
push
sub
in
call
xchg
out
jecxz
mov
bound
push
pop
cwtl
sub
mov
sahf
sbb
mov
stos
gs
push
pop
dec
pop
int3
sbb
fmuls
sti
push
insb
lret
out
ljmp
repz
std
push
dec
into
mov
aad
cmp
xlat
fildll
inc
xchg
es
into
mov
mov
xchg
jbe
and
sbb
jecxz
je
mov
pop
pop
adc
addr16
pop
insb
mov
cmpsl
lret
in
ss
push
cwtl
or
xlat
mov
jge
out
adc
jnp
mov
out
inc
stos
int3
fisubrl
lcall
or
push
mov
xchg
mov
jmp
push
test
insb
sub
cmpsb
inc
js
cwtl
insl
insb
push
shlb
insb
mov
mov
push
ja
das
lods
ret
lods
sub
mov
stos
sbb
ja
imull
mov
cmpb
insb
in
test
add
roll
mov
jns
ja
mov
inc
sub
mov
fildll
pop
mov
loopne
mov
inc
xor
les
out
insb
pop
test
xchg
loop
sbb
lods
jbe
je
mov
notb
decl
mov
jae
stos
sbb
cs
pushf
and
sbb
mov
lret
in
xor
ljmp
adc
ficomps
pushf
in
sbb
xchg
fisubrl
shl
insb
inc
push
cld
lret
insb
xchg
es
subb
mov
adc
shrl
jnp
sete
lret
lock
gs
rcrb
loope
and
insb
jns
xor
pop
push
mov
lahf
cmpsl
test
fs
repz
sub
enter
mov
inc
xlat
cli
xchg
add
gs
lods
sbb
or
jbe
xchg
insl
rol
pushf
arpl
push
in
add
sub
addr16
xlat
cmc
mov
insb
icebp
jo
std
pusha
mov
das
shrl
dec
stc
enter
popf
ja
int
push
insb
fwait
push
in
xor
shrl
inc
int3
and
xchg
adc
inc
cltd
imul
cmp
dec
repz
insb
and
xchg
dec
insb
jns
mov
decb
insb
pop
cmp
cmc
lret
pop
insb
mov
jbe
insb
sub
inc
sbb
shlb
outsl
insb
fldl
gs
jne
int
call
movl
gs
repnz
push
lret
and
mov
fsubrp
data16
adc
cmpsb
icebp
nop
cwtl
inc
enter
or
roll
fildl
bound
add
or
xor
iret
pop
fwait
bound
cmp
jo
shrl
stc
lock
insb
in
mov
in
lret
insb
testl
adc
dec
mov
hlt
lea
dec
push
loop
inc
lods
jl
cmc
fcompl
mov
out
or
dec
rcll
add
mov
sbbb
cmp
in
mov
sub
mov
idivb
sub
pushf
xchg
aas
gs
arpl
lds
dec
sub
sti
jmp
dec
lods
xchg
arpl
insb
les
mov
xlat
sbb
mov
sub
popa
mov
cmp
es
imul
mov
clc
insb
and
xchg
xchg
push
repnz
jp
hlt
hlt
imul
or
fistpll
pop
ja
mov
xor
outsb
pop
or
inc
pop
loope
insb
out
mov
or
sub
adc
dec
sbbl
out
mov
pop
mov
mov
ds
cmpsb
pop
lret
insb
ljmp
jns
dec
addr16
lods
pop
mov
cmpl
inc
in
sub
fistpl
mov
sub
arpl
push
es
insb
add
inc
or
jb
popf
dec
xchg
sub
popa
imulb
nop
pushf
mov
push
jns
mov
ret
pop
insb
shrb
mov
xchg
mov
int
iret
xor
arpl
cs
loope
ficomps
dec
mov
ja
repnz
lock
jne
aam
andb
lahf
push
mov
test
and
pop
in
cmpsb
mov
lret
cs
add
xor
xor
lcall
sub
pop
xor
leave
loop
and
sub
cmp
add
test
sbb
push
pop
insb
shlb
dec
push
insb
xchg
push
xchg
int
iret
sbb
insb
ljmp
add
getsec
into
sahf
and
test
mov
and
in
pop
xchg
fnstsw
aam
mov
pop
int
leave
insb
in
xlat
push
pop
insb
xor
mov
sbb
mov
dec
imul
in
imul
xor
in
push
pop
loop
imul
jae
pushf
mov
scas
insb
inc
sub
push
mov
jo
mov
and
mov
or
pop
stos
test
movsb
or
repnz
adc
shrl
out
icebp
xchg
xchg
pop
je
loope
xchg
mov
adc
pop
sub
adc
xchg
pusha
gs
sbb
outsl
jl
ds
lods
xlat
aad
or
mov
insb
adc
mov
xchg
mov
jg
mov
imul
mov
jns
idivb
pop
adc
mov
cmp
insb
pop
mov
pop
out
xor
das
int3
in
mov
mov
out
xor
int3
or
dec
cli
dec
insb
sub
outsb
cmpsb
insb
rolb
push
adc
imul
sub
ljmp
xorl
rolb
loopne
sti
hlt
adc
adc
push
in
mov
imul
loopne
call
addl
sbb
scas
arpl
loop
inc
imul
push
jecxz
jbe
mov
or
inc
mov
pop
sbb
push
bnd
xlat
insb
mov
dec
sbbl
cmp
inc
imul
inc
push
pop
stos
cwtl
fucom
cli
push
pmullw
insb
rorl
mov
mov
aaa
or
bsr
mov
aad
cmpsl
pop
xchg
movsl
iret
aam
dec
pop
insb
lds
loop
or
icebp
fldl
dec
test
mov
adc
cwtl
pop
or
test
sub
call
bound
jbe
sbb
sub
in
xchg
das
test
pusha
jnp
sbb
roll
hlt
push
popl
or
mov
in
test
jp
icebp
outsl
xor
pop
jmp
shll
sbb
sub
popf
jmp
cmp
popa
stc
lds
mov
imul
xor
jae
gs
jl
cli
xchg
imull
jp
fwait
mov
adc
cmp
or
pushf
sbb
aad
into
les
out
pop
shrl
jg
mov
bound
insb
scas
adc
insb
test
aas
sub
mov
idivb
bound
jmp
ljmp
gs
out
pushf
in
xor
insb
add
add
out
loope
inc
gs
xchg
rolb
add
push
movsl
fistpll
outsl
in
dec
out
jb
sarl
sub
mov
pushf
stc
test
inc
mov
xorb
outsb
in
cmp
js
xor
cmc
insb
std
push
jecxz
aad
stos
mov
cmp
jmp
dec
test
sub
lcall
jne
xor
hlt
insb
sti
adc
test
ss
xchg
lods
out
jno
xor
mov
notl
inc
out
jmp
hlt
jb
mov
mov
xchg
xor
scas
mov
cmova
je
mov
mov
test
xchg
int3
dec
pop
lods
aaa
add
cld
push
and
mov
or
xlat
add
mov
ss
insb
lahf
rcrl
and
sub
inc
and
daa
adc
xor
mov
pop
incb
into
icebp
mov
dec
push
add
mov
sbb
nop
jns
jbe
insb
adc
inc
sahf
or
xor
jne
repz
mov
push
fcoms
xchg
in
pop
insb
sub
adc
insb
inc
mov
pop
and
pop
dec
xor
pop
inc
xchg
sub
sbb
adc
mov
cltd
fsubl
mov
ss
call
push
mov
dec
imul
jbe
in
or
insb
and
adc
int
mov
push
and
data16
inc
loop
pop
inc
insb
popf
jmp
cmp
adc
push
dec
jecxz
out
xor
aas
add
inc
and
mov
dec
and
sbb
push
pop
xor
pop
add
xlat
adc
pop
mov
push
mov
data16
jecxz
stc
sbb
loop
jae
push
cltd
push
xor
fists
jl
insb
push
xor
adc
pop
jmp
lods
dec
mov
inc
popf
imul
sbb
add
cld
dec
adcl
ret
fcompl
dec
pop
adc
in
ds
dec
outsb
push
jns
sar
sbb
out
push
inc
mov
insb
fdivrs
ret
data16
jbe
notb
icebp
xchg
jae
jg
xor
mov
in
adc
push
leave
insb
mov
repz
mov
loop
pop
jmp
mov
insb
stc
ljmp
das
push
pop
insb
cmpsb
jg
imulb
test
bound
mov
pop
mov
mov
sbb
clc
insb
inc
fwait
jp
scas
or
out
cltd
push
in
pop
aas
je
js
push
mov
pop
repnz
push
out
dec
bound
in
push
push
clc
xchg
cmp
pop
and
fstpt
popa
xor
inc
in
adc
mov
ds
cmp
push
stos
cld
dec
adc
ret
jecxz
pop
push
adc
popa
daa
jns
sbb
sub
or
insl
ds
push
push
or
pop
ljmp
mov
cmp
or
or
or
jecxz
imul
mov
pop
test
lahf
popf
mov
je
jecxz
mov
add
mov
lods
test
mov
push
cmp
imul
jbe
enter
insl
and
je
fs
fisubrl
xor
insb
stc
cmp
mov
repz
add
test
pushf
in
loopne
dec
imul
rcrb
mov
insb
int3
pop
es
daa
les
insb
adcl
mov
sub
mov
jnp
mov
ljmp
int3
adc
xchg
cmp
ja
mov
pop
stos
mov
jge
insb
outsb
in
test
cld
dec
or
insb
xchg
out
lret
insb
add
and
das
mov
sub
incl
insb
push
lods
into
and
arpl
repz
sbb
cmc
mov
add
jge
cld
imul
fisubs
adc
or
movsl
insl
fdivrl
orl
ret
pop
xor
push
insb
push
jge
cltd
repnz
jle
std
adc
lods
jne
xchg
pop
push
stos
insb
enter
mov
sub
lock
sub
std
push
mov
test
les
das
jae
ret
imul
pushf
lcall
mov
pop
sbb
xchg
enter
idivl
out
push
std
test
push
aad
xchg
mov
sbb
jbe
int
rep
shrb
addr16
and
mov
dec
mov
mov
pusha
addb
cmpsl
movsl
repnz
pop
jne
inc
mov
lahf
xchg
insb
pop
xchg
adc
addl
cmpsl
insb
movsb
filds
jo
dec
push
and
jl
in
dec
cltd
hlt
imul
stos
insb
daa
inc
xchg
aaa
imul
jle
or
insb
mov
xchg
or
lret
or
adc
sub
mov
das
lahf
test
popa
std
testb
mov
or
push
int3
jnp
mov
fnsave
insb
jbe
mov
adc
pcmpgtd
outsb
sub
std
shlb
insb
out
jl,pn
adc
mov
gs
mov
shrl
fwait
sub
jl
les
mov
aas
addr16
rclb
mov
stos
fcoml
ret
fsubrl
lea
shr
pop
sarl
cltd
dec
es
inc
xchg
sub
enter
insb
nop
stos
xchg
and
jno
cmpsl
in
cmp
mov
cs
mov
fadd
xchg
int3
in
into
aaa
shrl
jbe,pt
cmp
xchg
dec
push
push
lahf
mov
xor
ret
inc
pop
sbb
shll
add
pop
dec
or
pushf
adc
mov
stc
aas
fisubrs
dec
mov
add
insb
aaa
gs
push
dec
mov
ljmp
in
inc
insb
das
sub
je
nop
fwait
adc
jbe
loopne
cmp
pop
pop
insb
pop
fnstenv
and
aad
adc
fcmovnb
dec
insb
push
icebp
cli
sbb
das
jno
insb
pop
outsl
leave
or
mov
jne
or
daa
mov
insb
jno
mov
push
testl
mov
insb
mov
mov
jg
dec
shlb
jle
and
and
cmpsb
mov
fmull
or
sub
setge
xchg
xor
icebp
cmp
jns
movsb
dec
aam
insb
jmp
lret
xor
mov
mov
inc
int3
cmp
inc
aaa
stos
and
clc
xor
insb
rclb
mov
insb
mov
and
insb
aad
stos
or
stc
adc
inc
sbb
pushw
ret
adc
clc
jns
arpl
sahf
xchg
jmp
dec
divl
cmc
pop
out
daa
and
popf
jecxz
dec
xchg
lea
adc
or
jmp
iret
push
pop
push
insb
push
xchg
sub
je
js
adc
ljmp
add
popf
xchg
out
gs
push
pushf
inc
mov
mov
dec
lods
cltd
int
sahf
cli
in
jp
aas
testl
pop
orl
leave
or
mov
push
add
inc
jmp
jns
ljmp
mov
lds
pop
jge
movsl
ret
lock
lods
scas
dec
imul
repz
inc
xchg
xor
insb
fistpll
push
dec
out
movsb
insb
notl
andl
mov
insb
xor
or
div
ja
iret
dec
insb
jns
into
and
push
xchg
mov
test
outsb
add
out
sahf
out
imul
xchg
fwait
dec
scas
mov
mov
es
push
inc
cmpsw
and
enter
icebp
insb
call
ror
pop
in
test
stc
xorb
lods
add
sub
mov
insb
mov
xchg
aaa
insb
cmp
dec
sbb
pop
bound
or
add
loope
cwtl
ds
dec
adc
test
add
mov
push
xor
pop
xchg
dec
xchg
jp
jne
insb
xchg
push
sbb
xchg
jo
lock
dec
mov
insb
mov
jmp
repz
aas
nop
xchg
xor
pop
outsl
xchg
scas
add
mov
add
imul
push
sbb
hlt
fdivrl
shrl
or
mov
imul
cmpsb
cmp
into
dec
xchg
jge
mov
jl
sub
test
mov
xchg
mov
cmc
cmp
rcr
scas
jmp
xor
push
sub
mov
add
mov
cmpsl
enter
jbe
sub
or
sub
fwait
push
insb
and
dec
xor
xor
and
sbb
xchg
mov
arpl
dec
mov
lds
aam
iret
bound
mov
idivb
push
enter
fsubrl
jbe
scas
clc
xor
aad
mov
sbbb
cmpsb
mov
testl
insb
dec
mov
mulb
sbbb
push
aam
cld
stos
pop
lcall
dec
adc
sarl
iret
insb
xor
loopne
imul
lods
insb
fistpl
and
shrl
fdivl
insb
adc
int3
fsubs
or
and
insb
adcb
or
lods
mov
cmpsb
pop
insb
mov
stc
push
addb
std
imul
sbb
loope
dec
and
adc
lcall
test
movsb
ss
aam
outsb
cwtl
push
mov
or
je
insb
in
fdiv
pop
xchg
fwait
and
mov
jnp
outsb
lahf
insb
ficomps
jmp
insb
test
sub
insb
fwait
and
xchg
lods
and
adc
push
insl
hlt
mov
lret
sbb
or
scas
arpl
push
fsts
xchg
addr16
pop
adc
jno
bound
xchg
gs
or
into
xchg
lcall
cld
inc
jecxz
clc
cmpps
test
sub
xor
push
gs
dec
insb
mov
jl
insl
insb
xor
push
dec
cmp
lods
sbb
xor
cld
lret
lret
cmp
sbb
pop
aaa
fadds
dec
scas
insb
mov
mov
jnp
imul
push
or
mov
in
aam
and
mov
or
mov
stc
in
fs
lret
in
xchg
bound
add
lahf
jns
cmp
fistps
mov
imul
mov
in
pop
add
or
das
movsl
push
in
sahf
sub
pop
out
cmc
insb
adc
fcmovnu
xchg
inc
pop
xor
je
pop
lret
jno
test
inc
insb
add
sahf
pop
jp
imul
icebp
inc
in
sahf
loop
mov
popf
ret
aam
cli
shrb
jbe
mov
jge
pop
adc
dec
inc
cmpsb
xor
jno
jb
jge
in
loop
lds
arpl
add
das
xor
je
ljmp
adc
sub
insb
push
fstpt
inc
mov
imulb
popf
int3
cmc
fnstenv
insb
test
pop
aad
xchg
jo
insb
mov
insb
test
dec
ffree
or
insb
or
sub
inc
cs
sarb
mov
mov
mov
test
outsb
les
adc
or
outsl
insb
in
mov
shll
out
lods
stos
shrl
adc
mov
sbb
int3
xor
aam
iret
dec
cli
insb
int
jg
add
lods
xlat
mov
in
aam
add
loop
xor
sub
aaa
xor
jbe
cmp
imulb
mov
mov
mov
shrb
insl
xor
enter
imul
lock
fwait
mov
out
aas
insb
enter
mov
and
push
sub
push
xchg
dec
into
push
dec
jmp
ret
aaa
or
xchg
arpl
xor
pop
loop
cmp
push
mov
sub
fisubrl
pop
std
or
xchg
cld
ret
imul
lods
test
notb
jne
test
js
nop
fisubrl
mov
xchg
push
out
scas
sub
cwtl
xor
imul
ljmp
cmpsl
pop
out
and
insb
leave
ja
mov
dec
das
adc
cli
in
mov
push
push
pop
adc
insb
xor
mov
imul
ss
mov
inc
loopne
pop
punpcklqdq
je
adc
fst
sub
fwait
mov
dec
cmp
insb
imul
mov
xor
imul
fldl2t
add
pusha
out
loope
adc
rcrb
mov
sbb
sbb
stos
mov
jl
mov
dec
or
or
insb
push
jecxz
mull
lcall
daa
ret
cmp
movb
sahf
push
insb
or
pop
sbb
shl
insb
mov
cmp
ss
dec
ret
adc
lcall
push
mov
inc
mov
bound
dec
sar
jge
divb
and
ret
scas
mov
movsb
popf
pop
loopne
shll
lcall
adc
mov
inc
push
arpl
ja
xor
out
xchg
insb
xchg
dec
fwait
sbb
jl
imul
jmp
mov
xor
jbe
push
cmp
shll
push
or
sub
jl
subl
clc
test
fsubrl
jo
loope
shrb
adcl
out
mov
sahf
pop
leave
add
mov
jmp
adc
hlt
sub
jae
cmp
pop
adc
fcmovne
push
mov
pusha
movsb
dec
icebp
xchg
xor
test
fldcw
sbb
insb
jle
scas
sar
mov
jp
push
pop
ds
dec
fsubs
rolb
ja
insb
loop
loopne
fldenv
roll
mov
insb
push
fsts
imul
test
lcall
sbbb
out
adc
or
and
or
push
ds
pop
lock
mov
fistpl
dec
stc
aam
shl
and
ja
pop
jmp
pop
dec
pop
insb
mov
lea
xchg
outsb
add
aas
lods
out
popf
imul
in
ja
subl
xor
mov
arpl
sub
sbb
insb
push
imul
add
cmp
dec
movsb
mov
adc
xchg
mov
insb
push
sub
pop
rcl
mov
stos
sbb
mov
popa
insb
mov
imul
sbb
sbb
insb
xchg
lret
mov
mov
cli
das
inc
push
mov
mov
lea
out
imulb
mov
scas
insb
mov
subb
das
jle
loopne
or
cmp
push
insb
in
xchg
ss
ljmp
repnz
pcmpeqb
cltd
mov
jp
shrb
popf
and
and
jb
lret
out
in
sbb
adc
pop
and
pop
ljmp
mov
mov
sbb
xor
out
insb
mov
adc
imul
jp
push
fiadds
lea
xor
dec
or
mov
cmp
hlt
popl
dec
insb
in
mov
or
xlat
pop
rcll
sbb
jmp
dec
adc
loop
lods
bound
insb
add
or
pop
dec
xchg
enter
sub
in
or
inc
push
inc
nop
push
mov
xchg
pop
lea
cmp
insb
sbb
in
sub
xchg
jae
push
xor
orb
and
jl
loop
fsubrl
mov
cmc
adc
jg
push
sahf
sub
js
insb
mov
pop
and
movsl
outsb
aaa
arpl
dec
push
insb
in
pop
std
mov
insb
lcall
and
or
mov
dec
lret
sub
push
movsb
push
lgs
insb
and
mov
insb
push
jecxz
xor
push
dec
mov
sub
adc
jae
nop
adc
and
in
jg
push
icebp
sub
fimuls
or
mov
dec
mov
pop
inc
add
imul
imul
lea
sbb
xchg
jmp
fdivs
lock
lret
dec
add
adc
insb
jmp
mov
cmp
mov
enter
dec
or
mov
adc
leave
dec
ja
mov
into
mov
mov
mov
movb
mov
loope
jp
insb
cmpsb
pop
jge
test
gs
nop
jp
insb
xchg
fistpll
or
adc
pushl
into
push
ficoms
in
fwait
adc
ret
push
jbe
int
lds
clc
pushf
mov
sub
imul
cmc
in
jl
xchg
aam
clc
mov
test
push
mov
push
mov
cld
jp
stc
inc
insb
enter
aaa
aam
icebp
or
push
insb
xchg
push
mul
fldt
loope
in
sbb
jbe
and
mov
mov
insl
icebp
mov
add
mov
adc
ret
xchg
out
insb
xor
jge
ret
jmp
sahf
mov
adc
dec
and
lods
in
popf
add
jo
push
das
adc
cmp
imul
hlt
movsl
sub
insb
andl
cmp
das
cmpsb
stos
mov
or
insb
jno
rclw
pushf
orl
xor
in
cwtd
jne
insb
inc
or
daa
xchg
sbb
lods
dec
push
subl
insb
mov
sti
ljmp
add
outsb
insb
mov
mov
jo
push
sub
imul
outsb
inc
insb
jp
pop
out
test
in
lahf
jo
clc
bound
dec
xor
in
adc
in
pop
in
repz
adc
pop
int3
into
sarl
add
mov
in
xor
hlt
add
inc
mov
ljmp
xchg
mov
insb
jp
jns
xchg
js
das
inc
xchg
cs
in
fidivs
pop
pop
lods
inc
push
cli
imul
mov
enter
adc
out
sbb
pop
in
loope
pusha
insb
arpl
js
insb
dec
imul
into
popa
pop
js
filds
ja
xor
insb
shlb
xor
cld
or
jae
pop
mov
mov
es
xchg
gs
inc
dec
mov
popa
insb
mov
insb
and
mov
dec
mov
popa
clc
movsb
mov
lcall
push
imul
test
dec
mov
fwait
lods
shll
je
insb
xchg
aaa
out
add
jmp
cmp
leave
dec
test
mov
add
push
jmp
inc
ljmp
test
jae
jecxz
repz
push
adcl
jne
jbe
imul
pop
sbb
icebp
rol
pop
jl
inc
sbb
xor
jl
shll
xchg
je
push
js
inc
sbb
add
pop
rcrl
jge
jne
inc
add
ja
imul
out
cs
push
mov
cmpb
push
in
test
cmp
adcl
or
data16
jo
iret
insb
xchg
rolb
dec
jg
icebp
je
jp
and
mov
icebp
insb
movsl
scas
stc
or
les
popa
idivb
push
stos
in
jnp
jnp
imul
data16
icebp
imul
inc
fdivs
in
sahf
bound
aaa
scas
pusha
insb
mov
in
in
push
pop
pop
lods
jns
mov
daa
sbb
push
in
mov
cltd
pushf
jb
repz
jae
push
xor
xor
mov
pop
jecxz
bound
jno
pusha
in
mov
test
push
sub
insb
fists
popa
sbb
xchg
call
hlt
mov
fnstenv
lea
sbb
sbb
imul
mov
lea
push
or
mov
in
loope
gs
in
adc
cltd
xor
adc
xchg
sti
scas
cs
mov
cld
es
jbe
jae
dec
loopne
dec
jge
xor
mov
sbb
imul
mov
sbb
mov
sbb
pop
bound
dec
fmull
arpl
out
pusha
insb
mov
inc
ljmp
mov
mov
push
mov
mov
add
mov
jne
pop
std
jge
xchg
in
lock
ljmp
dec
jmp
cmc
cmpsb
sub
jg
and
in
and
and
fidivs
fs
sub
and
mov
dec
cmp
and
int3
pusha
ret
pop
push
adc
test
imul
mov
bound
les
xchg
pop
pop
dec
int3
popa
jp
xchg
and
and
dec
dec
loope
pop
ljmp
inc
dec
xor
mov
or
jbe
les
pop
mov
and
pop
in
and
popa
aaa
mov
mov
mov
lret
xor
sub
pop
xchg
leave
mov
mov
pop
mov
mov
icebp
sbb
adc
jne
popf
insb
xor
jl
cs
xchg
inc
sub
lods
aam
out
adc
mov
fstl
add
scas
pop
cmp
sbb
cltd
gs
jge
dec
repnz
push
add
push
clc
push
xchg
sub
inc
push
pop
lods
sub
xchg
loopne
clc
leave
push
fsts
mov
in
inc
cmp
pop
mov
mov
sub
add
mov
imul
add
cld
aam
pop
setno
add
repnz
mov
insb
out
push
mov
adc
outsl
imul
push
mov
gs
rep
add
lcall
call
stos
xor
lret
mov
pop
xchg
inc
mov
lds
mov
or
jecxz
cmp
aas
pop
jno,pn
shlb
sbb
call
and
cmp
mov
fstl
leave
add
clc
mov
iretw
xchg
or
cmp
in
add
jo
cmpsb
fildl
sub
pop
sub
jl
les
das
imul
mov
mov
sub
inc
popf
inc
and
mov
push
push
inc
popa
cmpsb
shr
mov
dec
cwtl
mov
mov
shrb
cs
dec
jle
inc
pop
scas
jl
jmp
xor
sahf
xchg
mov
fisttpl
or
testl
cmp
mov
inc
push
push
subl
in
loope
mov
aas
outsl
lcall
arpl
lock
out
aaa
lods
push
push
or
in
hlt
in
repnz
adc
dec
test
lret
xor
fs
xchg
xor
das
mov
push
pop
out
lods
dec
push
stos
push
sub
data16
jno
mov
push
imul
inc
dec
loopne
mov
push
xchg
mov
shlb
into
in
imul
sbbl
cmpl
lahf
mov
mov
add
arpl
xor
sub
inc
mov
insb
xor
xchg
and
imul
mov
sbb
repz
clc
data16
xor
inc
sbb
fists
imul
pop
push
and
or
iret
aas
int3
xchg
mov
cmc
push
ljmp
into
cmpsb
jecxz
inc
and
aam
xchg
jne
insb
or
addr16
sti
mov
dec
xchg
mov
loopne
jb
mov
pop
mov
stos
xchg
xor
lods
cmp
lods
jmp
adc
mov
dec
fisubl
cwtl
mov
lcall
lahf
sbb
lods
ljmp
hlt
mov
mov
lret
outsl
pop
mov
cld
lods
push
mov
pushf
ja
dec
leave
sub
xchg
insb
mov
aaa
cld
icebp
add
push
cltd
lret
imul
lret
mov
pop
shl
stos
push
mov
xchg
jb
inc
xchg
add
gs
pop
push
mov
sbb
adc
in
sti
pop
push
push
pop
jne
sub
lcall
dec
enter
lods
mov
jp
stos
jo
push
xor
mov
push
mov
sub
adc
mov
pop
hlt
add
mov
inc
xchg
cmp
lea
jp
sub
jo
pushf
and
lods
mov
jmp
icebp
pop
sbb
lock
sahf
arpl
out
cld
sarb
mov
mov
movsb
mov
mov
addr16
pop
lahf
stos
mov
cmc
loop
jo
icebp
and
lret
or
pusha
in
mov
mov
hlt
addl
jnp
mov
dec
mov
addr16
add
mov
aam
sbb
fsubrl
fwait
arpl
insl
mov
dec
mov
mov
xchg
push
xchg
int3
pop
loopne
push
pop
add
pop
int3
add
lea
test
lods
xor
add
sarl
sub
mov
pop
jmp
fs
jns
dec
in
cmpsb
push
pushf
add
shll
pop
in
sar
mov
cmp
dec
push
stc
loopne
lea
xchg
cmp
fsubl
xchg
addr16
add
sub
in
lods
xor
into
dec
in
loope
push
addr16
shlb
imul
lcall
lods
mov
iret
repnz
push
mov
jo
xor
test
adc
aad
dec
pop
out
sahf
shr
popf
in
mov
xor
mov
fs
call
addr16
mov
mov
pop
dec
vpcmpgtb
jns
jmp
sbb
imul
sahf
mov
cltd
pop
mov
je
pusha
adc
mov
je
sub
scas
aam
xchg
fidivrs
pusha
repz
fnsetpm(287
push
pushf
jmp
loope
jmp
lret
dec
dec
sub
cmpsl
cmp
mov
sbb
dec
xchg
mov
push
repz
dec
xchg
mov
popf
in
out
cwtl
mov
shlb
and
mov
cld
insb
jg
add
add
call
mov
xor
push
lods
jo
add
jbe
pop
pop
popa
lret
mov
dec
loope
adc
shl
add
cwtl
mov
sub
cs
mov
fsubr
imul
mov
mov
mov
mov
jl
push
adc
sbb
mov
jne
repz
mov
cwtl
pop
sub
xchg
mov
int3
dec
xchg
call
es
shrb
or
fisubl
mov
sahf
xorl
xor
cmp
ret
mov
mov
int3
push
scas
lret
aam
popf
mov
rcrl
mov
mov
jns
idivb
push
shrl
and
pop
add
fs
imul
insb
push
adcb
sbb
rclb
mov
pop
and
aam
mov
xchg
jmp
imul
insb
inc
shl
jmp
xor
dec
mov
imul
data16
mov
je
inc
ja
imul
pop
filds
adc
add
mov
rorb
mov
dec
push
mov
loope
dec
scas
or
rolb
jno
cmp
sub
imul
filds
sub
int
aam
call
cmpsb
sbb
test
sub
mov
lea
fldl
adc
lret
push
fwait
stos
dec
call
lret
xor
je
push
lods
xchg
adc
call
insb
fisttpll
pop
clc
lods
shr
mov
bound
idivl
mov
push
sub
jae
dec
adc
push
fidivl
dec
mov
in
mov
inc
jbe
jno
mov
dec
sti
sub
lahf
xchg
inc
push
or
outsb
daa
inc
sub
idivb
push
loope,pn
and
lret
push
adc
mov
outsl
repnz
insb
push
inc
mov
sbb
cwtl
cltd
addr16
loopne
mov
mov
shrl
pop
lock
int3
js
or
dec
pusha
cmp
icebp
jno
cmp
lcall
mov
cltd
ds
sub
cmp
mov
lods
mov
bound
jnp
sub
mov
and
popf
xchg
test
mov
xchg
aam
loop
adc
int3
cmp
pop
xor
push
in
inc
and
hlt
push
mov
lret
pop
enter
sub
lods
xor
jno
mov
jae
dec
test
mov
or
movsb
rcr
mov
movsl
hlt
fldt
pop
xchg
mov
mov
nop
jmp
jne
adc
adc
mov
cld
or
clc
aas
icebp
arpl
adc
scas
pop
jl
sub
and
mov
sbb
mov
aaa
sbb
imull
lods
lods
mov
dec
icebp
mov
push
mov
mov
imul
mov
clc
cli
push
fidivl
lahf
std
push
push
lods
fs
sbb
punpcklwd
sbb
push
jo
adc
mov
or
fisttpll
je
in
jno
repnz
push
xor
dec
mov
arpl
xchg
loopne
outsl
mov
mov
in
and
xchg
push
bound
mov
adc
sbb
les
dec
adc
aam
fdivrl
cmp
or
lret
aaa
or
inc
call
repnz
push
mov
adc
fisubrl
adc
cmpl
fildll
jno
mov
lods
int
popl
insb
movsl
pop
jo
xchg
popa
push
imul
repz
mov
insb
hlt
or
pop
xor
pop
rolb
pop
mov
jge
imul
sub
jno
cld
inc
mov
pop
mov
dec
jb
in
loopne
pop
ds
fidivrl
fisubs
mov
adc
hlt
pop
mov
pop
mov
fsubr
jae
shr
sahf
xor
mov
cld
mov
mov
fucomi
sub
pop
mov
int
fldt
dec
xor
mov
and
and
mov
mov
imul
lcall
pop
in
int
jb
mov
push
fucom
jmp
icebp
daa
aam
cmp
inc
xor
out
jp
insb
push
cmp
push
loope
mov
nop
insb
mov
pusha
out
popa
imul
dec
jge
push
xchg
mov
push
fucom
rcll
add
xchg
enter
iret
push
mov
arpl
rcrl
cli
hlt
pop
filds
mov
push
in
int
jmp
or
sbb
xor
dec
xor
mov
xor
jle
adc
dec
xchg
mov
mov
bnd
outsl
dec
mov
add
lcall
push
mov
idivl
loopne
rcrl
lods
repz
mov
dec
and
sub
mov
scas
mov
jecxz
xchg
imul
sbb
xchg
add
sbbb
xchg
les
cmp
xchg
repz
bound
in
mov
pop
adc
xor
movb
test
aaa
push
xchg
jl
mov
insb
adc
jae
sub
enter
xchg
xchg
xor
mov
popa
mov
call
sub
push
pushf
mov
pop
mov
inc
cld
dec
fs
mov
in
loopne
filds
mov
insb
xchg
pop
int3
lmsw
hlt
sbb
xchg
in
call
jg
sarl
and
jl
test
lock
add
scas
call
popf
xchg
xor
inc
pop
in
xchg
adc
xchg
mov
dec
in
xchg
js
add
xchg
or
jg
fs
cmc
aaa
test
rcll
mov
cmp
push
test
pushf
imul
lea
jo
lods
test
sbb
mov
mov
push
in
in
cmpsl
push
adc
int3
mov
cmp
jp
adc
jo
ficomps
mov
lea
mov
sub
stc
xor
push
ficoml
shl
in
push
loop
outsb
ljmp
pop
xor
lods
cltd
dec
xchg
dec
int
lock
inc
cmpsb
mov
in
icebp
xor
sub
cmp
cmpsb
mov
push
lods
test
int3
xchg
push
mov
mov
push
xor
test
jno
mov
in
in
ss
and
inc
sub
addl
rorl
test
aam
test
test
jge
int
jno
sub
sbb
imul
mov
dec
addr16
sub
cmp
shll
insb
mov
or
gs
push
add
mov
jle
es
jg
stos
or
mov
sbb
fisttpll
punpcklwd
add
xchg
add
dec
ficomps
mov
sub
int3
cwtl
rorb
xchg
jp
add
xchg
data16
dec
loope
out
rorb
sub
js
jmp
addl
jp
fwait
dec
enter
loope
mov
fisubrs
mov
push
xchg
jnp
cmp
gs
push
shlb
fs
jno
mov
push
inc
cmp
scas
ret
out
sub
jmp
insb
repz
pop
in
ss
mov
imul
out
sbb
push
sub
cltd
dec
and
or
sub
cli
adc
cmpsl
les
dec
fwait
test
and
xor
mov
sbb
adc
mov
imul
mov
jbe
enter
xor
or
inc
dec
cmpsl
lock
ds
dec
out
xchg
adc
push
inc
aad
insb
call
ss
shll
jl
cmpb
mov
xchg
ret
jl
insb
xchg
inc
jg
lods
sub
ror
icebp
pop
fildl
add
addr16
and
lods
jl
pop
adc
mov
mov
inc
icebp
dec
pop
sub
jne
cmp
dec
nop
outsl
cltd
test
push
add
test
loop
popa
dec
dec
in
fucomip
loopne
dec
sahf
cltd
sbb
clc
xor
sbb
cld
arpl
xor
loope
push
imul
bound
cmp
mov
xor
add
xchg
push
jle
or
dec
push
data16
ljmp
test
ss
in
fisubrs
rorb
xor
int3
add
mov
fs
popf
dec
int3
mov
aas
jae
xchg
push
les
pop
out
xchg
pop
lret
push
mov
in
cmp
aam
jo
jmp
push
inc
test
test
cmp
es
bound
roll
addr16
mov
imul
mov
xchg
pop
sbb
adc
pop
mov
mov
cltd
jp
dec
enter
push
cmp
loope
dec
loopne
mov
xor
dec
mov
or
stos
cli
mov
xchg
gs
js
lock
cmp
jns
push
imul
inc
mov
mov
in
lret
inc
mov
aam
mov
imul
jns
rorl
pop
mov
adcb
sbb
imull
enter
xchg
or
sub
push
push
xchg
sar
mov
jbe
imul
loope
mov
ret
repz
cmc
jno
sub
and
push
add
push
loopne
ja
testb
cltd
sub
lcall
pop
and
test
xchg
es
dec
faddp
add
mov
add
hlt
mov
mov
push
push
scas
ljmp
adc
dec
cs
and
in
pop
imul
cwtl
movsl
adc
mov
in
jns
sub
shll
mov
push
sbb
aaa
jno
and
popf
out
cld
lock
enter
test
scas
cmp
inc
push
mov
or
repz
mov
mov
dec
in
loopne
pop
inc
push
push
and
in
imul
inc
inc
xchg
xlat
mov
out
pop
mov
enter
enter
add
add
ficoml
sub
jmp
sbb
icebp
push
mov
and
insb
sbb
pop
cmpsb
scas
cltd
imul
sbb
mov
outsl
xor
push
xor
adcl
call
xor
scas
push
or
stos
mov
mov
ljmp
rorb
in
xor
mov
or
shlb
in
in
inc
add
test
jno
jo
bound
in
les
popf
mov
ficoml
lods
insb
fbstp
mov
loope
scas
loop
in
jmp
aad
dec
dec
mov
sub
lods
in
imul
inc
and
dec
or
xor
out
mov
jle
lock
inc
dec
in
pushf
test
jecxz
push
loope
scas
ret
lods
pusha
sbb
sbb
cmpl
push
arpl
and
adc
xor
call
dec
mov
loopne
pop
scas
inc
xor
insb
ljmp
inc
sub
subl
mov
mov
mov
lds
dec
xchg
sbb
inc
data16
scas
imul
scas
add
cltd
pusha
xchg
in
pusha
data16
xchg
xorl
push
adc
sub
cmp
and
jns
call
adc
mov
movsb
in
test
dec
push
pop
loopne
lods
cs
ja
push
movsb
mov
in
repnz
inc
inc
icebp
mov
add
push
mov
dec
inc
adc
push
addr16
cmp
jno
dec
jmp
jge
loope
mov
sub
jl
lahf
ljmp
lods
xchg
sbb
and
in
jne
push
add
outsl
xchg
push
cltd
add
scas
insb
loope
xchg
int
pop
mov
push
mov
les
sub
mov
and
sub
iret
testl
scas
push
ds
stos
test
inc
imul
add
lods
jmp
in
cmp
divl
xor
adc
mov
sbb
mov
adc
les
popa
mov
je
push
mov
pop
cmp
push
add
call
mov
aas
roll
daa
call
sub
fidivrs
les
fiaddl
cltd
add
push
pushf
int3
inc
jne
shl
aam
stos
add
loopne
push
popa
aaa
les
mov
xchg
bound
pushf
out
add
push
sbb
sub
in
shrl
jl
mov
mov
ffree
pop
lods
sbb
pop
xor
ljmp
clc
cmc
mov
enter
mov
jl
push
lcall
rcl
xlat
addr16
sbb
lret
movsl
lods
xor
pusha
pop
mov
or
ret
jmp
dec
xchg
jno
jb
fidivrs
mov
mov
in
adc
mov
icebp
jl
insb
cmp
clc
inc
inc
mov
lock
pop
adc
add
sub
adc
xlat
jns
sub
mov
dec
pusha
inc
adc
imul
mov
mov
nop
gs
shl
sub
repz
pop
mov
call
push
in
shll
fs
inc
test
enter
mov
outsb
in
jno
inc
mov
shrb
leave
rcrl
sub
or
int3
xchg
inc
inc
mov
adc
ljmp
mov
insb
jp
pop
or
add
sub
imul
std
adc
jb
dec
scas
sub
pop
das
in
loope
and
test
add
xor
push
xor
js
test
mov
and
fildll
ljmp
xchg
js
mov
loope
mov
sbb
sub
in
mov
mov
cmp
pushf
mov
or
lcall
mov
dec
popa
mov
xor
repnz
lret
dec
push
mov
loopne
stos
jmp
sub
sti
je
cmp
pop
lds
aaa
sbb
out
cmp
inc
lods
mov
xchg
repnz
inc
inc
cli
push
imul
les
or
lds
pop
adc
and
adc
loope
add
out
imul
popf
fisubrl
in
das
sti
push
mov
loopne
push
sub
xchg
pop
nop
or
mov
mov
add
in
test
xchg
cmp
sub
push
sub
inc
xor
add
pop
icebp
rolb
fs
add
repz
pop
dec
xor
cmp
push
push
pop
adc
inc
in
xor
mov
jnp
xchg
pop
lds
repz
mov
jge
push
popa
and
add
mov
incb
lcall
dec
or
dec
adc
pop
popa
xor
lock
xchg
push
cmpsb
mov
fs
popa
fwait
mov
inc
xor
and
insb
fisubrs
mov
cmp
xor
xorl
shll
divl
insb
loope
mov
mov
clc
inc
cmp
mov
mov
in
insb
loop
sub
and
test
in
hlt
xchg
stos
je
pop
outsb
add
xchg
int3
xchg
es
xchg
inc
lcall
imul
mov
sub
sub
sub
push
push
out
mov
loop
jno
scas
xor
add
cmpsb
hlt
scas
je
je
sbb
fwait
in
jno
ror
iret
lods
gs
stos
lret
lods
push
sarl
fdivl
mov
push
icebp
imul
or
lret
xor
sub
dec
mov
pop
test
cmp
xchg
mov
repz
mov
lods
in
repz
dec
fbstp
arpl
sbb
clc
mov
rolb
test
shlb
sbb
out
jecxz
roll
insb
push
xchg
scas
lods
push
push
mov
mov
sub
mov
mov
sub
lahf
daa
push
je
dec
sbb
xchg
and
lods
push
loope
jl
int
push
ror
fsubrl
inc
popa
xor
mov
mov
pop
shl
fwait
mov
popa
icebp
shll
rcr
imul
push
fldcw
in
jecxz
addr16
sub
inc
mov
fimull
jl
imul
imul
pop
mov
jbe
fs
repnz
or
adc
xor
sub
shlb
test
inc
mov
cs
xor
pusha
out
push
les
add
pop
loopne
andl
jo
and
or
pop
in
call
stos
addl
pop
icebp
sbb
mov
cmp
loopne
insb
push
adc
mov
in
cltd
push
xlat
and
js
push
push
mov
inc
repz
inc
daa
call
in
pushf
mov
fsubs
je
popa
xchg
and
pop
push
filds
js
xchg
pop
mov
cmp
hlt
mov
insb
adc
xor
mov
std
jge
test
jp
mov
addr16
pop
xor
roll
xor
jno
cmp
mov
lcall
cmpsl
push
aas
and
mov
lret
and
mov
cmp
or
fcoms
push
xor
push
sub
jb
popa
sbb
addr16
cmp
mov
push
cs
mov
ficompl
out
addl
out
jae
sbb
dec
xchg
popa
mov
sub
jecxz
aam
xchg
cmp
pop
mov
movsb
rcl
or
and
out
rorl
pop
popf
adc
adc
xchg
jns
mov
mov
push
lcall
push
sti
mov
inc
ss
mov
lods
imul
addl
das
mov
mov
lahf
clc
lea
mov
jnp
and
hlt
or
int3
or
xor
data16
roll
adc
xor
jb
push
pop
inc
cwtl
cmp
mov
push
idivl
jg
cmp
mov
loop
pop
test
xor
push
je
lahf
pop
mov
mov
out
push
and
loop
sbb
jecxz
inc
fldenv
outsl
data16
cmpl
mov
std
pushf
fcomp
ret
je
xorb
gs
lds
jo
add
xlat
sub
pop
pusha
subb
inc
xchg
test
insb
fwait
mov
int
icebp
lcall
mov
inc
js
enter
cmp
ror
adc
mov
mov
mov
cs
popa
xchg
jnp
pop
fbld
rcll
sbb
push
xor
sbb
into
push
cmp
cli
pop
popa
dec
arpl
dec
pop
and
fwait
push
inc
mov
push
dec
add
lods
data16
mov
push
fstpl
and
insb
cltd
add
push
data16
leave
sub
pop
in
push
out
xor
and
mov
addr16
cmp
popa
xchg
mov
dec
sbb
inc
icebp
dec
push
mov
scas
jns
in
jecxz
adc
out
hlt
mov
insb
xchg
mov
lret
pop
mov
dec
in
sarl
xor
dec
mov
scas
push
orb
mulb
mov
mov
sbbl
das
fwait
sarl
bound
in
mov
push
dec
jns
in
adc
sub
mov
repnz
sbb
add
insb
pop
gs
popa
fldcw
mov
sbb
test
cld
pop
and
sub
dec
jo
leave
lods
mov
std
cmc
push
shrl
cwtl
movsb
adc
mov
cmp
ja
popa
pop
fs
mov
in
mov
push
or
test
lds
cli
add
aam
call
pop
xor
inc
cmpsl
jp
pop
popa
and
or
adc
mov
ret
pushf
sub
shll
out
lret
mov
pop
xchg
mov
dec
mov
mov
das
cmc
lock
xor
and
stos
or
mov
push
mov
call
pusha
mov
cld
mov
aam
adc
pop
mov
mov
xchg
adc
mov
lods
push
mov
mov
or
fistpl
push
test
mov
loopne
loope
mov
insb
in
xor
jno
push
fnsave
ret
inc
ds
sbb
mov
shrb
add
xchg
xchg
hlt
ljmp
mulb
ds
repnz
pop
mov
mov
stos
sbb
sub
insb
shr
scas
jp
out
cmp
sbb
movsl
pusha
adc
mov
dec
jp
push
xlat
xchg
in
mov
pop
or
dec
adc
jb
insb
out
cmp
or
mov
and
repz
mov
fisttpll
sarl
push
mov
or
mov
mov
xchg
iret
adc
rorb
mov
pop
test
sub
loope
push
lods
pop
xor
mov
inc
das
push
in
cmp
mov
fcmovnbe
test
in
popf
adc
inc
insb
loopne
imul
mull
xor
addr16
jns
je
call
lcall
out
cmc
mov
lods
push
loope
fdivrl
lock
xchg
push
fcmove
push
sub
dec
xlat
shr
clc
mov
sub
and
je
popf
lcall
cmp
cwtl
sbb
inc
mov
xor
inc
or
imul
call
inc
stos
imul
cmp
loope
inc
popa
leave
sbb
test
lret
mov
cmp
xlat
cmp
jne
test
lods
das
pop
add
lea
movsl
movsb
arpl
jns
inc
out
dec
lock
pop
loope
mov
mov
ret
push
sbb
icebp
mov
pop
pop
test
jns
imul
mov
push
mov
adc
jl
mov
sbb
pusha
mov
push
mov
bound
adc
lret
ljmp
imul
fsubrl
add
xchg
rclb
orb
inc
aam
jnp
adc
xchg
jne
orl
sbb
lods
imul
outsl
pop
bound
cmp
aad
addl
sub
jae
out
xchg
and
sahf
inc
jle
lock
sub
punpcklwd
movsl
icebp
mov
mov
jl
xor
xor
iret
jecxz
mov
lock
loope
xorl
aam
xchg
hlt
push
mov
mov
imul
mov
xor
lods
xchg
sub
xorb
sbb
xchg
inc
popa
jne
gs
stc
js
mov
ja
push
jno
jp
inc
loope
int3
jl
jp
loop
and
cmp
enter
pop
aaa
xorl
loope
and
or
jno
call
lock
loopne
gs
jae
xchg
enter
iret
xchg
lcall
xor
mov
push
call
in
pop
adc
dec
jae
xor
or
mov
fisttpll
push
pop
popa
inc
and
daa
sbb
cmp
push
rolb
jmp
popaw
push
rclb
jno
scas
pop
mov
sub
cmp
pop
in
stos
or
es
dec
fs
rcrl
sub
dec
push
pop
lret
sbb
in
jecxz
jae
in
adc
jns
ror
mov
jno
mov
das
mov
dec
inc
out
lret
rorb
out
add
bound
rcll
test
imul
idiv
adc
cs
jbe
std
lods
setae
shl
addr16
jmp
xor
sbb
out
cld
jge
xchg
xorl
icebp
mov
jl
and
fstps
lods
push
mov
or
jae
loope
push
jno
mov
imul
dec
hlt
pop
imul
jno
int3
popf
and
loopne
xchg
mov
add
push
scas
inc
dec
fisttpll
mov
mov
sbb
pop
lret
mov
or
sub
repz
adc
mov
aad
orb
cld
fs
frstor
sub
test
and
loope
int3
xor
icebp
out
jo
shl
aas
xor
dec
and
sub
out
push
sub
inc
jno
sbb
or
or
mov
pop
icebp
mov
movsl
int
xchg
or
cmpsb
mov
in
mov
fidivs
fwait
in
or
and
xor
aam
popa
rorb
ror
icebp
add
outsb
sti
mov
cwtl
mov
lret
mov
jmp
in
mov
cli
push
dec
pop
cs
xor
loopne
mov
jle
pop
xchg
dec
mov
mov
call
jb
jno
adc
pushf
dec
mov
call
dec
mov
push
test
lods
mov
mov
jns
push
out
cltd
mov
mov
in
ret
je
adc
jl
int
pop
sbb
imul
jmp
jb
add
mov
stos
inc
cmp
pop
shr
loope
loopne
andb
fisubs
sbb
stos
into
pop
inc
inc
repz
mov
xlat
pop
orl
call
adc
repnz
shll
cwtl
mov
sbb
scas
enter
push
mov
iret
push
ficompl
mov
pushf
mov
enter
push
icebp
in
cltd
pop
ret
inc
insb
mov
mov
test
loopne
lods
jmp
pop
jmp
stos
ret
pop
in
mov
cwtl
addr16
and
cs
leave
adc
les
cmp
mov
in
jno
ret
cwtl
lock
cmp
cltd
mov
cld
sub
jns
ret
bound
shll
loope
and
cmp
mov
fmul
inc
aad
jge
pop
xor
subl
mov
arpl
scas
in
xchg
out
lods
out
lcall
mov
pusha
addr16
pusha
jp
addr16
mov
add
rorl
int3
add
pop
xchg
mov
in
dec
and
add
push
imul
pushf
pop
fnsave
cli
dec
xor
imul
pop
icebp
mov
pusha
in
rorl
sbb
mov
ficomps
call
inc
push
lock
stos
xor
in
shrl
push
mov
cmc
adc
popa
fstl
and
mov
mov
lock
addl
sub
xor
sbb
sarb
cmpsl
test
in
imul
mov
dec
mov
jae
sub
add
test
lods
add
adc
repnz
cwtl
movsl
sbb
mov
cmp
sbb
xchg
hlt
outsl
pop
pop
fs
jbe
mov
inc
add
xor
push
add
and
xor
and
or
mov
sub
or
and
sbb
jmp
xchg
cmp
mov
jl
xor
mov
adc
addr16
mov
ja
nop
xlat
fnstenv
in
mov
or
loop
and
push
fmull
insb
sbb
sub
clc
in
mov
insb
cli
data16
or
dec
inc
daa
push
or
in
mov
and
rsm
jmp
mov
mov
mov
xchg
insb
in
je
stos
outsl
scas
fldt
mov
sbb
pop
xlat
mov
nop
dec
and
cmp
gs
inc
mov
or
fdivp
cs
jne
inc
push
or
adcb
sub
insb
or
sbb
ljmp
test
fwait
pop
test
cwtl
je
hlt
inc
insb
mov
cltd
mov
insb
and
sahf
int3
test
xchg
mov
mov
loop
xchg
push
mov
inc
sbbb
xchg
sti
jecxz
je
imul
push
sub
push
mov
insb
mov
roll
pop
mov
jecxz
jo
insb
xchg
or
fnstcw
pop
insb
xchg
shl
in
adc
gs
fwait
cmc
mov
ret
in
fldenv
pop
in
xor
out
mov
leave
xor
or
lock
mov
insb
mov
insl
cmp
cld
into
pop
push
fadds
pop
shr
ret
jge
sub
mov
sub
add
dec
lock
mov
scas
in
imul
push
daa
movsb
xchg
mov
clc
repz
or
cmpsb
jge
in
mov
idivl
test
gs
imul
mov
lods
insb
movsl
mov
add
bswap
add
insb
div
bound
insb
inc
pop
mov
mov
lahf
stc
mov
lea
and
xchg
xchg
loopne
loop
xor
fildll
mov
sub
adc
imul
push
xor
stc
dec
shr
sub
aam
mov
cwtl
cmpsl
mov
mov
test
sbb
mov
add
mov
fstpt
push
lods
or
and
add
push
push
pop
jb
lret
push
insb
xchg
or
add
insl
insb
sub
cmp
xor
fldcw
adc
mov
shrl
and
je
cmp
loope
mov
and
cwtl
sbb
sbb
xchg
xchg
outsl
insb
pop
push
xor
movsl
daa
dec
pop
lods
and
cld
imul
call
movsb
xlat
and
inc
lock
into
xor
test
movsb
insb
icebp
aas
jne
pop
insl
inc
insb
push
fldt
inc
inc
rcrb
testb
cmpsb
sbb
jge
int3
imul
shrb
ja
pop
xor
lock
inc
inc
sbb
pushf
insb
rolb
and
fsubrl
hlt
aaa
or
std
cld
sbb
mov
insb
push
subl
iret
cld
ret
test
jo
insb
movsb
pushf
xchg
dec
push
push
loopew
sub
sti
popfw
inc
stc
test
nop
insb
jge
jle
leave
icebp
scas
shrb
dec
gs
jmp
mov
data16
mov
les
lret
imul
test
in
jmp
sbb
rolb
imul
loopne
xchg
shrl
mov
in
cmp
je
add
nop
xchg
sbb
daa
mov
mov
mov
jae
shrb
imul
insb
inc
cmp
cmpsb
fidivl
imull
daa
and
in
xor
call
sarl
test
cmp
xchg
mov
pop
lock
sub
outsb
pop
insb
cmp
cmp
pop
insb
aad
xchg
or
and
dec
insb
pop
cmp
outsb
iret
dec
pop
cmc
jno
jp
andb
inc
test
pop
push
adcl
cmp
dec
insb
xchg
aam
mov
xchg
jns
add
sbb
jo
push
or
push
div
sbb
insb
cmp
xchg
mov
outsb
ds
shlb
rcll
insb
movsl
es
test
mov
xor
cmpsb
shll
mov
cltd
clc
lcall
scas
cli
adc
repnz
sub
jno
daa
gs
jnp
push
inc
insb
lret
fwait
insb
loop
in
inc
sub
cmp
repz
pop
mov
aam
fsubrs
pop
and
ja
insb
xor
dec
dec
add
mov
adc
lret
push
cmp
jl
orb
pop
test
xchg
fimuls
push
repz
jb
jnp
inc
aam
mov
addr16
push
or
into
es
jmp
xchg
pop
test
cwtl
sub
es
vunpcklps
push
ret
mov
fstpl
das
scas
out
lock
dec
add
call
mov
andb
aad
mov
je
add
insb
push
data16
shr
mov
or
xor
or
mov
push
insb
jge
sbb
dec
les
jle
xor
roll
ret
cmpsl
mov
pop
push
sbb
in
sub
les
cmp
mov
mov
push
insb
addr16
pop
insb
cmp
adc
insl
lcall
int3
addr16
out
shl
insb
cmc
xchg
jnp
sub
fldl
xchg
xchg
mov
insb
adc
jecxz
scas
cmp
xchg
xor
leave
xor
repz
insb
out
jge
rcr
mov
divl
or
mov
push
insb
loope
xchg
mov
mov
pop
nop
inc
insb
add
adc
inc
imul
sahf
in
xchg
insl
dec
xorb
fcom
mov
subl
insb
out
lea
lods
int
out
lcall
xor
pop
push
icebp
sbbl
insb
add
mov
dec
mov
outsl
pop
push
adc
mov
mov
push
push
aad
loope
stc
popf
cmp
sub
xchg
add
test
outsb
pop
insb
adc
pop
into
insl
pop
pop
xchg
insb
data16
add
insb
lods
or
add
sub
xchg
into
loope
and
add
mov
cmc
es
les
or
dec
shll
in
arpl
mov
jp
hlt
lods
mov
lods
imul
outsb
les
adc
jb
sub
out
bound
insb
lods
xor
pop
gs
jae
xor
insb
test
fwait
push
pusha
enter
lods
gs
shll
mov
cld
imul
aaa
and
push
pop
sbb
ja
and
pop
sti
xchg
pop
rdmsr
outsl
bound
inc
push
lods
jecxz
neg
push
loop
out
pop
sub
je
cmp
cltd
loop
insb
pop
sbb
arpl
xchg
inc
push
inc
test
insb
push
cmp
xor
bound
mov
push
add
jne
pushf
imul
cld
push
imul
cmp
xchg
add
mov
and
pop
out
push
xor
imul
ljmp
insb
or
add
jge
mov
insb
pop
nop
sar
stos
sbb
js
outsl
pop
add
cmpsb
in
into
inc
outsb
notb
lahf
insb
les
loop
dec
sbb
mov
inc
insb
xchg
fidivrl
dec
jne
insb
shlb
out
ss
call
fld
test
stos
sti
push
nop
mov
jne
iret
ficoml
ds
lds
pop
addr16
mov
insb
fwait
inc
jae
aad
mov
insb
mov
sarb
dec
inc
pop
ja
das
push
sahf
inc
cwtl
bound
lds
xor
or
jb
lods
mov
das
pop
neg
in
fucom
mov
imul
jo
negb
fisubrl
add
insl
insb
or
xchg
sarl
pop
rcrb
outsb
lods
dec
jno,pt
sub
into
gs
xor
sub
xchg
lods
pop
inc
gs
arpl
hlt
pop
and
jns
or
test
mov
insb
xchg
imul
dec
sbb
popa
sub
ret
aam
subl
jl
nop
adc
jo
cmpsl
cwtl
popl
pop
int
cmpsb
into
dec
push
insb
mov
jle
xor
test
dec
cli
shlb
ret
ret
sub
push
dec
insb
xchg
push
lahf
psubd
add
jmp
fs
jg
push
dec
mov
adc
imul
outsl
pusha
test
jbe
inc
xchg
negb
rorb
cld
gs
imul
repz
xchg
mov
sbb
sbb
mov
sub
pop
dec
mov
or
fdivl
clc
push
sub
cmpl
push
test
cwtl
fdivrp
out
into
loop
insb
lcall
lods
gs
dec
dec
inc
dec
js
je
outsb
adc
cli
insb
add
mov
cmp
jl
insb
je
push
pusha
pop
jb
cs
mov
leave
push
call
sar
mov
push
insb
jl
pop
repnz
ss
insb
inc
xlat
jge
add
insb
dec
mov
adc
imul
fwait
inc
lods
lret
pop
shl
test
jbe
or
stos
out
aaa
dec
leave
insb
adc
cmp
jge
insb
xchg
mov
lret
xor
insb
xor
mov
mov
rol
fs
jne
cmpsl
imul
push
mov
sub
xor
outsb
mov
inc
cmp
flds
das
mov
pop
sub
mov
jge
mov
shlb
lods
gs
push
shlb
movsb
loope
add
mov
xor
mov
sub
lds
sbb
aas
jl
xrelease
cmp
in
mov
adc
loope
sbb
shrl
mov
test
cs
in
lcall
insb
add
sbb
insb
ret
test
mov
add
fnstcw
fcomps
stc
into
pop
fsubrl
shl
dec
and
pop
fistps
pop
das
loope
pop
dec
mov
jl
aaa
aas
push
insb
push
mov
test
roll
insb
xor
mov
es
pop
movsb
movsl
xor
out
scas
or
sbb
lea
aaa
iret
jp
and
mov
pop
cmpsl
add
test
mov
imul
sbb
bound
pop
js
mov
mov
js
dec
fcoml
insb
xor
add
daa
jo
adc
inc
pop
cmp
xchg
lock
clc
into
sti
mov
cmp
mov
das
movsb
sub
lret
jg
call
jns
sub
mov
ret
push
rcrl
inc
mov
lcall
int3
push
jl
xor
stc
push
insb
enter
inc
stc
push
mov
lcall
pop
jne
hlt
insb
rcll
imul
xchg
dec
inc
call
inc
push
push
popa
dec
cltd
ljmp
pop
mov
lret
push
lods
mov
insb
xor
pop
sahf
nop
dec
daa
in
jo
fisubrl
mov
shll
or
inc
repz
xor
cs
scas
lods
dec
mov
insb
mov
int3
movsl
insb
pop
mov
stos
pop
das
movsb
in
mov
aaa
xor
push
push
stos
rorb
loopne
jo
xlat
stos
xchg
out
mov
jne
ljmp
hlt
inc
insb
std
mov
sahf
insb
sub
js
jo
xchg
aaa
insb
mov
inc
sub
jno
fnstsw
rcll
leave
add
popa
sbb
insb
jne
push
xor
aad
insb
call
mov
insb
or
pushf
popf
iret
mov
push
and
imul
movsl
cmp
add
das
push
lods
mov
jo
pop
outsb
adc
insb
sbb
sbbb
sub
add
andb
outsb
les
adc
or
inc
fldcw
xor
jns
js
test
jg
xlat
xchg
xor
and
call
dec
std
xchg
faddl
sub
cltd
jnp,pt
xor
das
fildll
pop
push
xchg
insl
pop
inc
adc
cmp
inc
cmpsl
test
sbbl
insb
test
pop
clc
add
push
and
in
insl
pop
add
sub
daa
in
shll
push
imul
push
int3
and
cmp
sbb
loop
xchg
adc
aam
xor
push
jbe
cmpsl
fcompl
dec
xor
and
mov
imul
insb
dec
pop
insb
cmc
mov
mov
mov
adc
insb
and
xchg
add
pushf
cwtl
jge
inc
mov
std
gs
adc
mov
xlat
cmp
fldt
dec
andb
int3
mov
push
inc
enter
scas
mov
fmuls
insb
or
test
push
xchg
cltd
insb
aad
leave
and
imul
sarl
sbb
insb
ret
xor
pop
xchg
cmove
out
sub
xlat
ss
jle
add
sbb
and
insb
cmc
push
mov
fwait
insb
lock
in
call
repz
pop
mov
insb
repnz
dec
mov
add
imul
cmp
dec
insl
pop
xor
pop
insb
pop
andb
repnz
dec
jae
or
int3
int3
pop
mov
dec
lods
sbb
out
push
cmc
imul
jmp
in
push
xor
mov
jge
imul
stc
sahf
mov
dec
push
or
jns
mov
in
pop
imul
ds
mov
insb
aaa
fstpt
testb
add
push
sbb
and
lahf
arpl
xchg
in
cmp
insb
fadds
push
cmpl
cwtl
pop
loopne
fdivp
or
cmpsb
je
daa
push
in
into
ja
gs
icebp
and
fnsave
loopne
mov
xor
pop
mov
lret
adc
push
dec
in
scas
stc
ljmp
sub
adc
pop
adc
pop
in
and
jl
inc
insb
pop
add
xor
add
addr16
push
imul
and
add
das
mov
es
imul
js
inc
mov
or
add
lods
icebp
test
cmpsl
jle
mov
sbb
mov
adc
nop
stc
imul
insb
bound
pop
sub
push
in
stos
out
sub
push
test
in
push
sbb
add
lock
inc
popf
xor
inc
decl
insb
sub
or
cld
mov
and
aaa
xchg
iret
cmp
push
cmpsl
subl
adc
imul
jg
xor
push
insb
inc
adc
movsb
add
jo
pop
iret
loopne
loope
lds
xchg
jns
insb
sbb
inc
cmp
sbb
or
out
gs
lods
ffreep
jne
fsubrl
push
lcall
inc
faddl
push
int3
bound
insb
cld
jae
xchg
je
mov
xchg
jg
cltd
cmp
insb
add
cmp
std
cmp
mov
insb
lock
pushf
add
in
push
xchg
insb
and
ror
and
addr16
nop
jl
lods
jno
sbb
outsb
fistpl
aaa
gs
mov
dec
lahf
test
lea
or
xor
push
adc
mov
in
or
mov
mov
mov
into
xchg
inc
test
jnp
sbb
loopne
mov
int
ss
cmc
add
adc
xlat
imul
repz
xor
insb
pop
leave
inc
je
in
out
insb
jae
hlt
rorb
insb
push
jnp
decb
add
sahf
jle
frstor
insb
adc
cmp
dec
loop
jb
and
test
out
insb
in
scas
mov
push
mov
xlat
ret
insb
dec
cmp
mov
insb
out
or
pop
insb
arpl
pop
and
outsb
pushw
scas
jno
xchg
xchg
or
dec
cltd
push
lret
add
insb
insb
iret
es
xchg
das
out
test
fmull
jno
insb
outsb
dec
es
iret
loop
test
ljmp
sub
add
in
inc
sbb
addr16
pop
sub
adc
mov
jnp
dec
popa
je
push
insb
jmp
movsl
test
cmc
sbb
outsl
cmpsb
enter
cltd
xor
clc
in
mov
lahf
or
cli
insb
sbb
inc
sub
insb
fs
cmp
pop
insb
ja
xchg
adc
repz
test
pushf
int3
mov
insb
cmpl
mov
imul
stos
insb
lock
sub
fwait
cmp
or
sbb
mov
and
xor
mov
jo
and
cld
outsb
sti
repz
xor
adc
jecxz
add
pushl
inc
or
insb
jl
cwtl
dec
inc
pop
imul
jbe
or
dec
test
sub
int3
sbb
inc
sarl
mov
divl
shlb
sbb
adcb
cmpsl
insb
je
push
or
push
sbb
arpl
inc
rorl
mov
sub
xor
stos
sbb
insb
cld
push
xlat
out
sub
jle
fdiv
shll
lods
insb
cltd
sub
in
add
jae
push
in
movsb
insb
out
jmp
xor
xchg
arpl
icebp
insl
mov
cld
js
addr16
shlb
repnz
leave
subl
loopne
and
pop
test
sbb
scas
dec
xchg
mov
fldenv
insb
movsb
lock
push
or
sbb
test
test
aam
jns
insb
loope
mov
mov
push
sbbb
ret
sar
insb
add
and
insb
aas
pop
ds
imul
getsec
fdivs
cwtl
add
cmc
into
fidivl
add
or
faddl
and
out
push
mov
or
xor
dec
in
sbb
ret
aam
adc
mov
call
stc
insb
xor
push
sub
xor
adc
dec
mov
popf
repz
lea
pop
mov
test
pushf
add
dec
push
pop
pop
insb
loop
and
xchg
mov
insb
sbb
mov
dec
fsubs
inc
out
sub
fldcw
js
dec
imul
lods
mov
roll
cmpsl
notl
mov
insb
stc
or
js
jmp
aaa
insb
popa
jns
stos
bswap
bound
mov
insb
scas
pop
out
ds
testb
loopne
gs
shrl
xor
push
jne
jle
cld
insb
pop
mov
int3
repz
pop
insb
jae
and
sub
ret
xor
adc
addr16
dec
insb
inc
inc
adc
movsb
add
ret
pop
aam
dec
sub
scas
mov
sti
ret
gs
insb
mov
cltd
xor
dec
lret
test
inc
js
jmp
xorb
push
push
inc
jno
mov
add
cs
hlt
ds
enter
sub
xor
cmp
push
div
push
ljmp
add
dec
sbb
inc
insb
cmp
cmp
sbb
adc
sub
lds
sub
lahf
sbb
movsl
in
in
aam
outsl
mov
jecxz
loopne
mov
insb
insl
repz
outsl
dec
js
insb
cmc
push
dec
into
inc
sbb
dec
lahf
in
loopne
cld
in
stos
dec
insb
cmp
lock
insb
add
sbb
adc
hlt
scas
insb
push
ss
xchg
pop
jp
orb
bound
out
mov
shll
hlt
ja
jl
sahf
insb
fwait
dec
dec
popa
xchg
adc
xchg
test
cmp
sub
in
sub
insb
xor
sbb
cltd
insb
and
add
mov
pop
dec
or
insb
les
lds
sbb
mov
inc
push
jne
pop
push
loop
insb
test
xor
pop
adc
ljmp
mull
insb
pop
jns
inc
push
test
xchg
aad
sub
sahf
insb
pop
sbb
shrb
adcb
imul
insl
insb
push
or
pop
ja
sahf
adc
sub
fiadds
and
cmpsb
lds
add
sub
aad
and
dec
cli
insb
scas
lret
int3
cs
enter
mov
aad
insb
mov
inc
xchg
loope
fisubs
and
pop
jmp
insb
loop
stc
push
mov
jb
mov
outsl
imul
jbe
or
cltd
pop
rol
dec
insb
pop
inc
sub
lret
pushf
mov
lods
ja
mov
fiadds
movsb
insb
sub
mov
jnp
shl
dec
and
imul
int3
into
sahf
push
inc
pushf
insb
inc
or
jge
data16
jmp
insb
jle
mov
mov
pop
inc
mov
and
xchg
push
xchg
cmp
insb
in
or
dec
andb
cs
iret
popa
je
lcall
push
pop
mov
insb
fs
pop
aam
sub
add
insb
js
cmp
insb
sub
ljmp
adc
or
insb
arpl
stos
fsubp
ljmp
loop
jmp
movsb
xor
leave
in
adc
cmp
and
arpl
sbb
rcrb
insl
push
push
cmc
inc
insb
loope
stos
xor
mov
in
popf
sbb
in
sub
out
push
and
jnp
shl
nop
sub
ds
scas
mov
test
mov
insb
inc
repz
pushf
pop
or
inc
insb
jmp
mov
notl
stos
push
sub
jmp
or
and
inc
or
iret
es
repnz
sub
add
sub
aas
je
push
lahf
xchg
xchg
out
jl
push
in
fsubrs
insb
sbb
mov
imul
adc
imul
je
add
loopne
dec
pop
jecxz
ret
ljmp
jg
movsl
push
iret
sub
or
int3
subb
arpl
adc
mov
pop
add
pusha
pop
imul
mov
push
imul
xchg
jo
insb
push
and
inc
xchg
outsl
inc
insb
and
inc
mov
or
push
insb
cmpb
dec
mov
jp
and
push
scas
insb
cwtl
lods
mov
addb
adc
push
mov
imul
bound
cmpsl
xor
insb
outsl
lahf
out
xchg
push
xor
gs
sbb
popf
enter
cwtl
xor
rorl
mov
cld
ffreep
aaa
add
nop
out
and
inc
lock
ret
fldcw
mov
add
or
xor
pop
push
adc
sbb
bound
lret
xchg
push
int
jne
dec
das
push
adc
and
insb
cs
mov
push
pop
jne
cmp
add
sub
mov
adc
stc
lret
cmp
imul
ja
add
insb
push
mov
stc
add
frstor
nop
xor
push
insb
lods
sub
inc
dec
sub
test
dec
jp
insb
cmovg
adc
inc
subb
mov
add
dec
dec
fidivrs
sahf
mov
mov
cwtl
sbb
push
push
cmpsb
mov
sbbb
push
sbb
test
stos
iret
mov
scas
jne
and
insb
popa
inc
mov
dec
mov
jmp
pop
sub
xor
fdivl
or
mov
adc
cmp
and
sahf
mov
sub
xor
fs
out
cmp
mov
aad
adc
stos
pop
pop
int3
mov
lcall
lock
inc
push
add
psubusw
mov
insb
loop
sub
insb
push
outsb
and
insb
stos
orb
cmovb
push
mov
mov
cs
popa
pop
pop
pop
loop
insb
mov
out
movsl
insb
pop
iret
into
xchg
xchg
mov
gs
insb
cmc
pop
jbe
push
loope
ds
xchg
mov
xor
pop
ret
lret
lods
and
mov
cmp
in
adc
lods
push
imul
jnp
in
clc
and
add
or
mov
adc
or
xchg
mov
insb
jns
push
in
sub
dec
or
mov
jp
and
dec
cmc
aam
xor
outsl
les
fs
adc
mov
inc
insb
jnp
and
xor
add
pop
ja
lods
cltd
ret
insb
mov
jge
mov
jo
dec
jnp
pop
insb
scas
mov
mov
adc
insb
cmp
loop
jmp
lret
insb
addb
jmp
dec
cwtl
mov
enter
xor
out
fmull
lods
int3
loop
insb
cmc
inc
mov
inc
scas
aaa
jne
mov
in
cwtl
rcl
rorb
gs
orl
es
daa
and
adc
mov
mov
insb
pusha
shll
in
inc
push
and
jbe
mov
dec
xlat
popa
push
cmpsl
jle
aaa
gs
push
test
test
addb
in
add
les
repz
out
lret
jo
xlat
sbb
in
pop
arpl
jg
mov
lret
mov
das
cli
addr16
mov
insb
push
ja
pusha
sti
sub
subl
xor
jbe
adc
mov
push
mov
nop
insb
neg
add
sub
repz
rorb
xchg
xchg
cmpl
mov
insb
nop
xchg
add
inc
leave
repz
icebp
insb
inc
mov
dec
jl
clc
cmpsb
addr16
repnz
sar
in
push
lea
dec
sub
mov
pop
jg
jmp
fcomp
pop
subl
fcmove
mov
lea
push
lret
fadds
cli
dec
aam
icebp
sbb
xchg
add
insb
movsb
dec
dec
dec
mov
xor
sbb
cmp
jne
insb
stc
xchg
cmp
sub
sbb
mov
pop
insb
popf
jg
pop
pop
xchg
mov
mov
jnp
loopne
push
add
insb
dec
cmp
jmp
jecxz
add
aam
pop
or
es
push
test
repz
mov
jp
and
lods
mov
dec
jo
ret
cwtl
cwtl
jge
lods
popa
xchg
jge
je
insb
mov
and
push
insb
mov
dec
out
lock
imulb
in
sbb
or
inc
xor
pop
rorb
pop
repnz
mov
insb
inc
aaa
ds
pop
lods
pop
bnd
insb
cmc
les
call
bound
xor
push
inc
orb
enter
mov
sub
gs
pop
std
sub
lods
movsl
sbb
add
ret
ja
in
sbb
std
mov
das
dec
xchg
lods
inc
xor
add
xor
jge
inc
fwait
sub
mov
in
insb
add
adcl
aad
push
movlps
imul
cmpsb
jl
cmc
xor
inc
aad
cmp
cmpl
insb
pushf
jno
rcll
fmull
inc
pop
cmp
push
shrb
or
mov
dec
dec
lds
inc
insb
les
jecxz
mov
jle
imul
cmp
mov
cmpsl
push
jl
mov
insb
pop
push
xchg
xchg
stos
cmp
aam
jno
jb
and
cmpsb
sti
data16
pushf
in
imul
fmul
leave
or
shll
testl
cmp
lods
ja
add
movsl
stos
popa
mov
insb
sbb
mov
pop
pop
test
cmp
mov
insl
ljmp
insb
call
xor
aas
add
mov
mov
or
mov
dec
outsb
std
andl
jmp
andb
and
outsl
mov
jbe
je
xchg
jb
cmp
imul
movsb
and
insb
imul
push
notl
sub
hlt
fcompl
je
xchg
or
js
rep
or
add
out
imul
leave
jmp
adc
insb
movsl
sub
xchg
push
jno
cmpsb
mov
sub
clc
fmuls
in
cli
and
enter
iret
mov
daa
movsl
imul
push
jo
pop
xchg
cmp
aas
insb
and
test
insb
loop
or
enter
push
icebp
sbb
jbe
insb
mov
enter
jmp
mov
sahf
cli
lret
pop
imul
fldt
fidivrs
dec
pop
insb
push
pop
fs
mov
cmpsb
fcmovb
adc
movsb
imul
movsb
xchg
inc
xchg
insb
pop
int3
test
out
mov
inc
sti
sub
insb
insl
mov
je
int3
inc
xor
into
lods
pop
lods
scas
adc
std
mov
insb
mov
test
insb
cmpb
or
inc
les
mov
aam
hlt
aas
mov
jo
jge
shr
pusha
dec
push
pop
andl
add
lods
xchg
dec
int3
imul
shrl
movsl
insb
inc
mov
call
push
pop
insb
sbb
call
dec
cmp
xor
cs
sub
mov
adc
stos
call
lea
out
jecxz
xlat
adc
pusha
adc
lahf
inc
and
ds
nop
scas
push
bound
mov
hlt
add
fnstenv
and
fstpt
les
lods
mov
dec
jge
out
mov
test
pop
adc
cmpb
add
mov
sub
rorl
insb
fs
pop
aas
cmpsb
fldt
hlt
push
cmp
adc
dec
in
add
cli
movsl
jg
fs
or
shrb
ja
out
jmp
insb
fcomip
imul
cmc
dec
xor
mov
adc
mov
mov
insl
push
inc
mov
or
adc
cmp
leave
and
pop
pop
lods
cli
call
mov
add
scas
fldt
lods
xchg
pushf
lret
push
and
add
lea
sbb
or
jnp
js
xor
mov
clc
je
int3
lods
fsubr
in
lods
test
xchg
cmpsl
bound
add
adc
cmp
jbe
sbb
test
in
xor
push
andb
imulb
push
insb
enter
xor
test
stos
mov
cld
dec
dec
lods
aaa
ja
and
xor
xchg
lret
lock
insb
movsb
pop
xor
mov
ja
je
insb
jg
xorl
not
insb
sub
sbb
push
pushf
insb
ret
sub
sbb
cmp
fimuls
push
inc
sub
insb
cs
xor
sbb
jns
or
sahf
sub
add
push
and
hlt
lcall
or
cmp
ljmp
jle
movl
xchg
mov
test
incb
and
inc
jo
xchg
nop
rorb
push
insb
sbb
dec
rorb
fstl
xchg
cmpsl
pop
lahf
call
in
dec
rorb
mov
jns
mov
in
nop
mov
in
push
in
out
imul
push
xchg
dec
push
xchg
xchg
add
loopne
sbb
mov
push
cmp
insb
xchg
jmp
lock
ljmp
lods
imul
rorb
pop
lea
jo
shrl
jae
and
std
insb
xor
jmp
xchg
addr16
ja
out
push
sahf
repnz
dec
jl
xor
mov
xchg
jb
mov
test
xchg
repz
mov
dec
incl
insb
xchg
mov
add
cmp
loop
sti
pop
adc
outsl
jmp
in
jmp
lret
sub
ret
in
lret
cmpsb
pop
insb
scas
inc
add
sub
in
sbb
jmp
xor
pop
pop
mov
xchg
and
mov
movsb
sbb
insb
aas
jp
xchg
lds
push
adcl
jb
sub
inc
movsb
insb
fisubl
mov
mov
out
mov
cmpsb
mov
pop
jp
clc
lea
and
pop
cli
into
sub
sub
in
shll
push
sahf
bound
fnstenv
push
gs
insb
and
add
pop
loop
dec
insb
jge
cs
imul
aam
mov
test
dec
jle
pop
mov
lret
xor
imul
int3
adc
mov
fldcw
out
iret
xchg
sbb
fldcw
jnp
insb
add
mov
adc
lds
push
xor
lcall
insb
jns
inc
adc
subb
sbb
mov
add
dec
int3
lcall
das
sub
sub
inc
movsl
hlt
insb
scas
icebp
inc
mov
dec
sar
sub
add
sbb
jg
std
int3
cmp
push
adc
mov
call
mov
in
push
insb
fcompl
mov
sbb
insb
jns
xlat
shr
sub
mov
icebp
sar
pop
adc
fwait
mov
insb
mov
push
xor
insl
out
insb
or
fstpl
mov
push
sub
cmp
pop
inc
arpl
lods
loope
insl
inc
xor
addr16
movsb
or
or
and
cltd
add
push
inc
lds
arpl
sbb
and
pop
fldenv
test
mov
push
stc
or
jge
out
mov
add
xchg
push
orb
mov
in
mov
imull
aaa
add
xchg
mov
inc
cli
xchg
jmp
iret
xor
js
out
add
xor
insb
or
jmp
mov
cs
mov
insb
scas
xor
sbb
ret
repnz
into
stc
xchg
imul
xchg
in
orb
sub
and
add
add
js
pop
shl
mov
insb
in
xchg
add
scas
icebp
push
fcmovnb
xchg
insb
inc
xchg
jmp
push
insb
std
add
mov
pop
cmp
jo
test
mov
aad
hlt
jle
jmp
mov
movsl
insb
dec
dec
lods
cmp
cltd
lods
push
pop
jnp
jae
adc
mov
imul
testl
insb
imul
push
daa
imul
int
mov
adc
fisubrl
pushf
push
pop
out
insb
mov
pop
dec
push
lock
imul
sti
push
and
or
lods
pop
adc
sbb
jg
imulb
push
sbb
lret
faddl
sbb
imul
ds
mov
inc
int
sbb
pop
add
cs
fstpt
xor
cmp
dec
xor
lea
push
jecxz
loop
hlt
pop
inc
enter
stc
jmp
cmp
insb
fcompl
pop
pop
ficoml
ljmp
bound
xor
jecxz
repz
dec
insb
sbb
ss
rcrb
gs
lahf
andl
dec
insb
mov
inc
mov
add
stos
in
icebp
in
shll
or
into
jae
insb
out
push
nop
or
stos
or
in
in
or
mov
xchg
xor
mov
sets
pop
jle,pt
or
or
shll
lea
jnp
insb
ja
rcrl
xor
popa
fldt
xor
cli
gs
or
sub
imul
mov
push
adc
enter
subl
movsl
jb
jmp
xor
or
mov
aad
add
pop
outsb
mov
inc
lods
arpl
cmc
lret
sub
insb
xchg
hlt
push
xor
push
jns
dec
pop
or
lahf
leave
fstpt
insb
cmp
cmp
insb
add
sbb
fsubl
xchg
jle
lock
xchg
orl
xchg
iret
adc
insb
lods
and
insb
adc
mov
xchg
and
insb
cli
jnp
jle
imul
push
lahf
insb
push
sub
lods
xchg
and
xchg
das
inc
jmp
int3
mov
push
mov
in
mov
lods
outsl
iret
dec
and
pop
insb
addr16
cltd
lret
push
inc
in
sti
insb
ror
dec
jmp
icebp
mov
insb
mov
add
testb
mov
std
mov
insb
jnp
sbb
hlt
insb
lds
test
sbb
pop
insb
pushl
cli
mov
insb
test
push
mov
insb
inc
or
aad
hlt
dec
insb
out
int3
adc
inc
inc
sahf
insb
enter
mov
sbb
xor
int3
push
adcb
aad
stos
push
je
icebp
mov
mov
sub
dec
pop
sbb
push
pop
shlb
xchg
push
push
cmp
pop
pop
sbb
int
cld
xlat
mov
dec
jle
mov
outsl
rorl
and
fwait
out
inc
in
loopne
in
push
in
data16
pop
dec
dec
and
pop
leave
stos
xchg
jl
movnti
inc
mov
popa
cli
insl
mov
and
imul
mov
sarl
cld
lods
pusha
cmp
shlb
xchg
insb
inc
mov
push
cmp
insb
mov
nop
fsts
or
sarb
rep
push
insb
or
mov
repz
cmp
sbb
loope
jl
mov
insb
lock
mov
les
add
cmp
sbb
aas
fmul
xor
pop
jmp
jle
cmp
ficoml
lea
insb
lret
cltd
or
mov
xor
out
movsl
popa
dec
icebp
or
add
insb
mov
rclb
mov
push
dec
adcl
imul
sub
in
in
into
sub
mov
loop
neg
pusha
insb
pop
pop
cmp
and
daa
insb
xor
xchg
and
jmp
inc
icebp
pop
rorl
es
addr16
cmp
insb
scas
or
push
cmc
jae
lcall
mov
fldcw
adc
or
imul
out
xor
sbbl
pop
lods
cmp
push
scas
adc
xor
cmpb
insb
cld
xchg
outsb
mov
push
pop
add
pop
insb
test
and
addr16
jp
sti
fstp
repz
sbb
adc
movsb
push
push
or
xchg
test
sub
std
dec
ret
xchg
ljmp
int
pusha
test
sbb
cs
adc
ljmp
inc
pop
lahf
es
imul
nop
push
sbb
cmc
orl
repnz
imul
aam
xchg
mov
ljmp
cmp
push
call
insb
int3
stc
inc
xchg
push
lods
insb
nop
jp
xor
mov
test
in
inc
xchg
imul
data16
mov
mov
mov
mov
push
lock
call
push
fxch
rorb
popl
loopne
pop
xchg
stos
jae
push
xchg
xor
sub
push
das
mov
pop
pop
ss
ljmp
stos
insb
out
jae
lock
ds
inc
mov
cmp
insb
jl
ja
fsub
sahf
sub
or
popa
insb
cltd
out
xor
imul
or
test
imul
aam
pop
fsubrs
mov
jbe
pop
sbb
inc
insb
pop
push
testl
pop
stc
shrl
mov
lret
insb
jmp
lret
js
jmp
ret
xchg
mov
shlb
sub
jle
fsubr
js
jns
movsb
pop
test
stos
push
insb
xchg
mov
pop
sub
cmpsl
arpl
in
push
xchg
xchg
aaa
in
and
pop
push
push
subl
jno
adc
dec
mull
cwtl
jbe
push
fbld
mov
popa
mov
dec
xchg
clc
testl
repnz
sub
push
sub
lods
lods
jbe
adc
shrl
rclb
xor
jmp
outsl
dec
pusha
loop
and
aam
mov
out
sub
sbb
and
jl
insb
push
dec
push
mov
insb
movsl
cmp
gs
pushl
adc
cmc
jo
rcrb
and
push
sub
lds
inc
xchg
and
cs
decl
repnz
in
jg
test
cwtl
xchg
inc
push
mov
mov
dec
out
jbe
dec
inc
xchg
push
insb
lds
and
shrb
and
insb
adc
test
es
push
pop
ret
mov
ss
call
inc
jl
push
orl
repnz
fcmovnbe
inc
out
leave
jle
dec
loope
rcrl
test
in
stos
in
outsl
lret
insb
push
les
loopne
out
stc
xor
xchg
insb
pop
leave
fwait
mov
fidivl
iret
arpl
cmp
loopne
insl
push
add
sti
mov
imul
decb
pusha
insb
dec
or
sub
sbb
pop
or
repnz
lods
jg
adc
out
imul
sub
test
push
mov
stc
sti
repz
add
xor
fucomip
jge
jle
mov
divl
push
mov
xor
sub
pushf
aas
dec
repnz
pop
insb
and
fs
in
out
pop
insb
icebp
jae
xchg
test
insb
mov
rcr
mov
loop
insb
stc
aaa
dec
fiaddl
pop
mov
xchg
xchg
and
subb
mov
sub
dec
insb
in
mov
cltd
adc
insb
pop
cmpsb
cmp
mov
cli
rolb
stc
mov
push
or
insb
fidivl
mov
push
or
je
mov
add
sbbb
insb
sbb
xchg
addl
gs
sub
pop
in
shl
es
xor
stos
or
push
inc
mov
insb
ljmp
lods
sti
or
call
pop
mov
add
pop
pop
inc
mov
imul
xor
adc
fnstenv
enter
out
in
sbb
idiv
dec
push
sbb
or
dec
jmp
call
jo
loope
insb
loopne
cld
cmp
aaa
imul
call
mov
lock
aad
push
lds
movsb
gs
cld
and
jg
pop
xor
dec
jl
sub
mov
repnz
pop
sbb
out
sub
insb
adc
mov
sbb
stc
xor
fxch
inc
out
push
mov
mov
cmpsl
push
push
cmp
hlt
jmp
pop
rclb
cmp
mov
jecxz
ljmp
sub
loope
pushf
add
mov
fs
inc
mov
pusha
pop
sbb
mov
testb
das
xchg
ficomps
xchg
fisttpll
adc
mov
jecxz
xor
dec
insb
insl
in
mov
push
in
int
insb
shl
lret
xor
sub
xor
xchg
stos
insb
fcompl
ret
sbb
jne
jbe
pop
xchg
mov
or
jecxz
insb
mov
push
pushl
aas
mov
and
subl
ds
dec
in
add
add
xor
mov
cmp
jmp
inc
enter
push
in
std
dec
mov
pop
or
mov
pop
dec
jge
xchg
add
adc
xchg
out
xor
and
mov
repnz
in
jno
stc
sub
add
pop
add
popa
push
addr16
inc
stos
out
in
lods
xchg
subb
dec
or
sbb
xlat
lret
sub
jl
xor
sub
stc
sbb
scas
adc
jmp
movsb
xlat
jle
arpl
dec
shr
cmp
sub
adc
or
test
mov
mov
call
shrb
aam
insb
scas
cli
aad
imul
fidivrs
mov
push
in
mov
dec
and
out
outsb
loop
hlt
dec
int3
mov
inc
in
aam
imul
xor
pop
cltd
sub
fisttpll
mov
fmuls
insb
es
inc
cmp
insb
mov
inc
mov
cltd
cmpsb
fisubrs
or
add
jo
mov
jmp
mov
adc
in
pop
and
iret
mov
dec
inc
mov
rcrb
fdivs
pushf
lcall
mov
cmpsb
inc
nop
movsb
aas
scas
dec
mov
in
jns
sarb
sub
aad
inc
jg
je
and
insb
cmp
enter
mov
insb
mov
rorl
imul
lcall
gs
test
jle
push
adc
lods
insl
loope
stc
mov
fwait
push
cmp
cmp
and
repz
outsb
pop
pop
jg
pop
xchg
dec
out
mov
push
arpl
out
cmp
sbb
ljmp
btc
pop
jp
dec
pop
fucomp
rcrl
aad
insb
pusha
addl
push
rorb
aas
insb
cmc
push
aaa
lods
adc
adc
mov
je
mov
dec
insl
fnstcw
lahf
insb
mov
push
repz
inc
imul
das
mov
mov
imull
ds
ljmp
mov
mov
pop
jl
insb
add
inc
sub
aas
or
xor
lret
imul
call
imul
jl
pop
insb
or
and
xchg
pop
pushw
pop
cli
sub
lods
sub
add
aad
mov
js
pop
imul
push
dec
inc
jp
add
aaa
inc
outsb
stc
xchg
sub
arpl
adc
inc
xlat
stos
movl
jb
pop
int3
cli
dec
insb
mov
shr
mov
push
scas
in
cmpsl
fcmovnb
cli
in
lods
lods
jns
jo
icebp
lcall
jne
das
xor
test
js
insb
lock
mov
lods
pop
cmpsl
repnz
pop
sahf
jo
sbb
and
mov
cmp
lret
inc
imul
fistps
xchg
insb
or
or
cmpsl
sbb
stc
sti
dec
xor
data16
dec
pop
repz
cld
fnstsw
add
pop
ds
lret
lock
sti
das
insb
mov
xor
int3
inc
sbb
jbe
sub
cltd
jg
clc
sub
leave
int
insb
sub
mov
sbb
pop
fisubrs
movsb
push
movsl
sbb
sub
int
insb
mov
or
or
idiv
ret
xor
test
sti
mov
xor
insb
insb
mov
xchg
mov
push
aaa
call
cmp
gs
push
jb
mov
cld
pushf
sub
js
pop
insb
out
xor
mov
insb
xchg
mov
sbb
pop
insb
rolb
test
mov
aam
inc
mov
subb
xchg
xor
test
mov
inc
insb
clc
jecxz
xorl
in
adc
sub
jmp
inc
mov
into
lods
fwait
add
add
iret
loopne
into
xchg
loope
mov
std
jne
mov
sub
jmp
xor
arpl
cmp
inc
xor
mov
or
xchg
repnz
pop
lods
popf
in
std
imul
fldt
data16
popa
mov
mov
cmp
jb
inc
or
cmp
push
in
leave
outsl
out
mov
insb
mov
int
pop
sub
add
lea
pop
icebp
cs
mov
jmp
sbb
aaa
jno
test
subb
lret
dec
mov
inc
jo
dec
jns
js
cmpsb
xor
das
out
dec
gs
sbb
push
dec
inc
jns
fidivrs
sub
pop
sub
in
sbb
insb
ror
jle
test
inc
push
xor
leave
imul
push
shll
imul
inc
insb
cmp
popa
insb
shll
ret
js
xor
jle
mov
insb
push
daa
add
insb
repnz
cwtl
fst
and
cld
insb
shr
mov
cmp
mov
fwait
in
lods
mov
int3
outsl
fisubrl
mov
stos
insb
xchg
mov
insb
push
push
lahf
mov
dec
or
xchg
inc
jl
and
cwtl
xor
insb
gs
iret
cwtl
fimuls
insb
shlb
jg
cmc
xor
mov
scas
jmp
fwait
and
fcompl
jge
insb
addr16
pop
and
insb
cmp
inc
sub
or
mov
insb
cltd
int3
inc
or
add
lret
shrb
or
scas
inc
aad
out
in
je
pusha
inc
cmp
add
sub
mov
rcl
pop
push
sbb
pop
cmp
mov
test
stos
jle
mov
and
adc
data16
loope
mov
in
imul
les
insl
pop
insb
sbb
jle
insb
jge
inc
cmp
or
cmp
gs
call
dec
insb
mov
pushf
inc
pusha
lock
inc
sub
arpl
and
insb
aas
cmc
push
imul
adc
insb
pop
fldcw
add
shlb
sahf
repz
pop
or
dec
insb
ret
push
cmp
xor
push
hlt
fisubrl
push
movq
mov
sub
insb
dec
add
dec
rolb
sbb
mov
pop
fcomps
sub
es
leave
xchg
insb
sti
or
mov
xchg
pop
pop
insl
out
cmp
mov
adc
dec
dec
mov
jle
in
xchg
stc
xchg
mov
loop
add
push
push
ljmp
mov
or
adc
fnsave
popf
insb
inc
pop
enter
sub
xor
nop
mulb
add
push
add
jge
xchg
sbb
xor
pop
add
orl
nop
or
mov
flds
jp
insb
ljmp
and
mov
lock
insb
add
mov
pop
repz
add
xor
insb
push
add
push
adc
mulb
in
sbb
int3
cs
push
xor
mov
or
addb
aaa
insb
xchg
add
shll
sub
out
mov
pop
daa
insb
cmp
ds
movsb
inc
sbb
push
in
sub
sbb
or
ret
push
lods
push
push
mov
mov
sarl
lock
xor
dec
lret
sbb
mov
gs
rclb
test
movaps
clc
cmp
sbb
iret
mov
lods
push
cmp
ljmp
rcrb
lahf
sbb
sub
insb
mov
nop
jns
mov
sbb
sub
xor
icebp
lahf
in
mov
insb
jne
mov
jecxz
sub
mov
in
jne
sub
xchg
mov
gs
lret
sbb
je
aam
ss
loopne
or
push
mull
clc
xchg
ljmp
mov
daa
mov
add
sbb
jns
jae
enter
test
std
fldenv
push
add
add
out
sahf
sbb
popa
pop
xchg
loopne
cmpb
jb
dec
sbb
test
ss
mov
add
dec
sub
pop
mov
and
pcmpgtb
or
mov
lcall
sub
jno
icebp
stos
sbbb
repnz
inc
les
mov
cld
xchg
dec
mov
xchg
sahf
adc
test
jl
jbe
aam
sti
sub
sbb
clc
insb
insl
and
fisubs
orb
in
shrb
imul
adc
jp
movsl
nop
test
pop
fucomip
lahf
or
sbb
push
insb
xchg
leave
and
das
insb
jecxz
sub
lock
add
daa
jnp
xor
sahf
insb
and
xchg
imul
xorl
xor
call
cmp
outsl
xor
jbe
subb
dec
push
mov
js
add
cmp
aad
movsb
mov
xor
cli
xchg
icebp
pop
imul
jnp
sub
insb
xchg
sbb
sbb
and
insb
push
mov
inc
test
test
and
xor
lcall
insb
stc
int3
movsl
push
xchg
inc
subb
inc
adc
sbb
push
shl
scas
or
sahf
orb
inc
cmp
or
repnz
stc
scas
pop
inc
mov
push
call
insb
mov
sub
pop
xor
cmc
insb
sbb
ror
xlat
jo
imul
rcr
lret
imul
mov
insb
cmpsl
in
mov
insb
xor
mov
mov
icebp
leave
outsb
fistl
sub
push
arpl
movsb
test
dec
daa
adc
cwtl
xlat
lods
or
xchg
xchg
dec
adc
mov
cld
insb
inc
sub
or
ds
cwtl
sbb
adc
mov
imul
insb
inc
and
es
push
or
xor
lret
les
divl
test
call
dec
fidivrl
repnz
ja
pop
xchg
shlb
icebp
aas
cmp
lods
xchg
mov
add
mov
insb
push
jae
adcl
fisubrl
js
stos
jnp
or
push
cmp
sub
cmc
out
sbb
insb
icebp
dec
sbb
insb
sub
cmpsl
and
or
or
mov
stos
iret
imul
push
mov
add
sub
push
insb
or
adc
rorb
stos
insb
mov
jl
pop
insb
mov
xchg
add
incb
movsb
xchg
xchg
push
xchg
and
add
ret
insb
aaa
adc
or
sub
push
lea
jp
mov
lods
hlt
push
push
lods
jecxz
shlb
dec
pop
xchg
adc
in
imul
adc
xor
imul
push
xchg
push
jmp
adc
xor
leave
enter
xor
insb
pop
lret
dec
ss
sarb
daa
mov
fnstenv
insb
mov
cmp
test
andl
call
push
push
mov
jge
mov
aas
int
mov
lcall
add
movsb
orb
dec
mov
test
sub
cmp
inc
mov
inc
insb
scas
mov
movb
dec
pop
pushf
push
test
dec
hlt
clc
cmp
fs
fwait
xchg
loope
pop
cmp
ds
sbbl
cmp
mov
mov
gs
xchg
cwtl
in
jecxz
orb
imul
adc
jg
clc
dec
ja
adc
inc
pop
add
cmp
push
les
add
jmp
pusha
cmp
in
outsb
inc
push
in
test
inc
xor
inc
lret
loopne
mov
aad
fldt
roll
insl
out
lret
adc
or
shl
xlat
in
out
das
mov
inc
test
outsb
jmp
push
add
mov
stos
test
outsl
call
dec
sub
jp
mov
pop
add
pop
shl
pusha
loopne
jns
insb
cmpl
insl
cmp
or
int
data16
jno
shlb
adc
je
add
pop
jae
dec
pop
dec
lcall
mov
adc
or
ret
pop
rcr
rclb
arpl
or
push
mov
neg
push
aaa
push
out
or
clc
andl
cmc
inc
pusha
sub
sub
pop
mov
loope
push
sub
mov
fpatan
xorl
fisubrs
arpl
cmpsb
xor
in
insb
jo
jmp
mov
pushf
test
add
pop
xchg
sbb
jnp
xchg
adc
je
or
xor
and
mov
or
mov
pop
xorb
adc
leave
or
add
jno
pop
dec
mov
subl
ja
test
iret
shrb
stos
pop
push
jb
rcl
in
cmp
lea
in
inc
mov
cwtl
bound
mov
and
orb
pop
call
idiv
imul
push
call
dec
in
fildl
gs
or
or
int
arpl
bound
mov
push
jecxz
imul
dec
jae
fiaddl
or
test
mov
mov
push
xchg
stos
into
insb
push
pop
mov
imul
les
imull
test
movsl
add
jg
xchg
inc
stc
insb
scas
mov
adc
insb
pop
arpl
popa
jle
insb
mov
push
or
je
imul
jns
imul
popf
cwtl
cmp
lds
mov
mov
out
adc
sbb
mov
and
shll
lods
cli
mov
shll
xchg
push
insb
unpcklps
xor
scas
push
jno
std
rclb
xchg
loope
shrb
movsl
loop
ja
stos
addb
mov
popa
xor
or
je
xchg
fsts
sbb
call
jnp
insb
cmp
fsubrs
pop
mov
fistps
cmp
xchg
xchg
push
test
mov
scas
add
dec
insb
inc
sub
orb
sub
imul
add
adcb
dec
mov
push
insb
adc
xor
jbe
insl
js
icebp
pop
dec
aaa
add
aam
jge
cld
mov
insb
jns
cmp
dec
and
add
jmp
int3
mov
js
and
push
xor
xchg
sti
cs
jno
mov
inc
imul
and
push
mov
jns
insb
xchg
jp
cmc
in
and
xlat
sub
and
outsb
addr16
insb
sarb
push
sbb
insb
push
xor
jecxz
insb
outsl
mov
aam
pop
mov
jbe
ret
cltd
ds
adc
xor
add
mov
sbb
in
adc
and
xor
in
push
or
xorl
dec
imul
xchg
je
ds
cmpsl
push
and
pop
mov
push
sbb
and
je
jle
insb
out
mov
insb
clc
pop
repnz
int3
add
cmp
sbb
push
in
or
mov
pop
sbb
mov
insb
pop
add
insb
test
mov
arpl
inc
ficompl
outsl
in
adc
adc
pop
jno
push
nop
or
insb
adc
sbb
sbb
cs
sub
inc
mov
mov
pop
es
push
cmp
sbb
jbe
insb
or
lea
sahf
xchg
push
mov
mov
in
not
cld
cmpsl
jne
mov
jmp
cwtl
push
insb
mov
and
insb
dec
xchg
xchg
insb
inc
push
xor
jno
andb
scas
in
push
sub
mov
lret
insb
lcall
mov
mov
roll
mov
sub
adc
fiadds
fwait
mov
ja
or
mov
jmp
fs
cli
into
insb
push
sbb
xor
adc
cld
or
mov
sbb
sbb
dec
lods
lds
fisubrs
dec
adc
mov
push
pop
out
insb
inc
int
js
adc
pushf
insb
lcall
fisubrs
into
stc
stos
dec
mov
cmp
mov
sbb
cmpsb
imul
jns
dec
jecxz
mov
das
fisttpll
insb
pop
cld
mov
xchg
lock
insb
aad
shll
mov
dec
insb
cmpsb
ja
xor
inc
adc
insb
xor
mov
cld
insb
test
and
in
or
xchg
in
in
or
lahf
cmp
repz
jmp
add
stc
push
in
push
insl
or
outsl
mov
fisubs
add
imul
fsub
mov
sub
out
fcomps
lock
mov
arpl
aam
mov
outsb
test
dec
inc
dec
push
in
or
jae
sub
jl
cli
push
jle
pushl
popf
ror
insl
insb
mov
mov
cmc
dec
dec
fwait
sbb
push
add
cwtl
cmp
into
mov
jne
or
mov
lods
jl
pop
pop
and
lcall
sbb
xlat
cmp
sub
gs
stos
test
in
ja
ljmp
fidivrs
ret
mov
outsb
dec
sub
icebp
jmp
dec
mov
xor
or
insb
stos
jge
fs
movb
notl
inc
dec
icebp
sub
mov
inc
pop
pop
les
pushf
popf
pop
scas
jl
daa
sti
xlat
adc
jae
lods
pop
fildll
lret
test
je
sbb
das
insb
scas
stos
sub
mov
lret
stos
fisttpll
pop
push
jnp
mov
inc
insb
out
cs
popa
in
stos
shl
addr16
push
and
in
inc
lahf
out
adc
mov
jns
jp
fsubrl
and
imul
pushf
cs
insb
xor
cmpsl
les
insb
mov
rcrl
insb
sbb
pop
sub
inc
punpckhwd
xor
dec
int3
fdiv
loop
dec
xchg
jge
and
int
repnz
jns
push
and
rcrb
insb
or
xchg
popa
jns
pop
xchg
test
mov
jo
jae
loopne
pop
mov
jbe
in
fsubr
aam
inc
insb
bound
push
pop
pop
pop
jb
jle
mov
ret
nop
cmp
in
sbb
jne
push
clc
in
xor
add
pop
sub
mov
jo
pop
fistpl
lods
push
nop
sub
insb
sbb
jo
insb
and
push
or
adc
enter
sti
dec
sub
push
ret
daa
fisttpll
push
insb
es
fldt
insb
mul
mov
aaa
pop
pop
out
or
xor
insb
jecxz
fcompl
inc
test
gs
aad
test
movsb
lret
es
inc
cli
and
test
stos
jp
test
jl
mov
outsb
js
lods
movsb
inc
sub
dec
and
adc
or
pop
mov
arpl
sahf
ret
add
jp
dec
cld
test
imul
mov
cmp
pop
ret
loopne
cltd
insb
lds
jmp
insb
mov
cmpsl
std
add
out
cmp
xor
xor
je
std
push
shrl
sbb
sti
mov
push
imul
lret
sub
cmpsb
in
shlb
mov
stos
in
in
aam
insb
xor
cmp
into
scas
shrb
mov
stos
insb
test
xchg
in
nop
insb
xor
shl
pop
clc
dec
and
xlat
adc
jle
lods
dec
mov
insb
loop
mov
xor
xor
fisubs
mov
insb
cmp
sti
xchg
idivl
push
mov
iret
adc
xlat
mov
jmp
js
sub
insb
dec
std
mov
insb
les
test
xor
insb
and
push
mov
sub
push
sub
add
add
in
pop
pop
push
enter
cmp
adc
cmp
pop
insb
scas
lods
jge
mov
mov
dec
imul
fisttps
sub
loop
insb
aas
icebp
push
fisubrs
lahf
pusha
loope
or
insb
scas
in
mov
and
std
repnz
inc
dec
lock
fsubrp
notb
and
sub
insb
call
test
pop
insb
in
unpcklps
mov
sahf
cmp
and
cmp
mov
in
inc
insb
jmp
les
dec
stos
push
loopne
cmp
add
out
mov
sub
insl
into
ret
in
shll
loopne
push
push
pop
scas
xchg
insb
icebp
or
mov
jae
jae
imul
mull
add
add
sbb
jae
scas
dec
dec
imul
push
repnz
xor
fwait
rep
adc
adc
pop
cmp
in
fiaddl
pushf
push
push
dec
xor
insb
mov
push
movsl
xchg
insb
je
lcall
sbb
fadds
xchg
test
sub
cld
cld
and
inc
insb
sbb
push
pop
jnp
test
mov
inc
outsb
push
insb
cmp
fadd
and
sbb
in
mov
insb
aad
sbb
aas
in
mov
popa
in
mov
insb
or
movsl
dec
mov
ljmp
mov
jg
fldenv
subl
xchg
mov
call
pop
push
test
mov
inc
sahf
cmp
jp
imul
test
insl
call
les
xchg
dec
and
aas
cs
dec
leave
repnz
mov
sbb
hlt
dec
sub
testb
test
dec
pop
lods
mov
addb
imul
sbb
push
insl
or
mov
repnz
shrl
pop
jmp
push
sbb
loope
out
xchg
outsl
jo
mov
or
jecxz
sti
adcl
imul
aam
dec
push
mov
sti
lock
test
or
pushf
sbb
jmp
sbb
punpckhwd
icebp
dec
imul
dec
inc
je
jg
mov
and
pusha
cmp
or
fs
or
jbe
test
add
dec
call
das
mov
xchg
andb
jp
cwtl
jb
pop
leave
movsl
ja
fstpt
adc
orl
mov
fbstp
push
or
iret
and
pop
fs
push
pop
dec
cmp
jno
cmp
test
lods
xchg
movsb
repnz
xchg
out
sbb
cmc
mov
sub
push
dec
scas
adc
and
or
call
test
and
stos
dec
gs
mov
mov
push
or
test
imul
fdecstp
rclb
cmp
insb
divl
lds
insb
outsl
lret
sbb
lods
cmp
insb
push
or
xchg
fistpll
add
jl
stos
leave
add
aad
push
fwait
push
jo
or
das
ret
fs
jbe
xor
cmp
in
je,pt
mov
xchg
mov
insb
xchg
std
popf
cmc
mov
push
imul
call
mov
mull
imul
cmp
fidivs
jns
ss
daa
fdivrl
cld
xchg
lock
push
mov
arpl
fistps
pop
mov
push
shrl
adc
or
cmc
mov
mov
adc
cmp
out
jecxz
cwtl
cld
mov
pop
sbb
aad
call
int
xchg
mov
mov
insb
jg
cmp
inc
popa
dec
xor
arpl
mov
lods
je
push
mov
sahf
outsl
push
daa
imul
jae
inc
xchg
mov
or
std
push
inc
stc
xchg
insb
cmpb
mov
ret
repnz
in
jbe
push
stos
insb
rorb
or
insb
xlat
insl
push
sbb
xor
insb
mov
pop
cmc
xchg
insb
mov
dec
sub
ja
inc
insb
sub
and
xorb
mov
outsl
int3
mov
insb
nop
out
xor
sub
sbb
insb
mov
mov
push
scas
jo
insb
mov
stos
push
icebp
mov
inc
insb
lret
mov
adc
out
dec
mov
std
stos
cs
or
test
mov
or
insb
pop
mov
xchg
inc
cwtl
aaa
in
sbbb
fs
pop
and
xchg
arpl
pop
int3
sub
mov
mov
or
imul
mov
and
insb
mov
cmc
jle
insb
and
jecxz
mov
shrb
add
and
jns
in
mov
sarb
test
lret
gs
insl
fcmovbe
pop
cmp
mov
dec
fsts
orl
les
lret
mov
iret
jmp
pop
insl
mov
mov
gs
sbb
dec
cmp
mov
sub
xchg
les
sub
cvttps2pi
jo
mov
push
std
pop
lahf
dec
out
cmp
adc
mov
xor
imul
sub
sbb
pop
imul
scas
dec
mov
mov
cmpsl
lods
movsl
icebp
popa
insb
lahf
or
mov
je
and
insb
daa
add
push
xchg
pop
insb
jno
adc
mov
add
sahf
sbb
inc
out
int3
ds
shrb
and
ja
ljmp
loop
adc
mov
adc
or
dec
jb
push
jmp
push
cli
ret
inc
cld
rcll
insb
xchg
jns
cmp
pop
and
mov
and
inc
in
insb
or
fistpll
sbb
sbb
mov
stc
insb
ljmp
loopne
sti
sbb
and
lock
insb
shrb
jnp
inc
loop
insb
cmp
insb
inc
pop
js
fs
mov
mov
jecxz
or
push
cmpsb
imul
data16
pop
stos
outsb
add
das
inc
popf
out
and
roll
push
adc
sbb
xchg
int
test
insb
mov
nopl
insb
icebp
pusha
push
ret
decl
adc
aad
jp
xor
nop
call
in
jns
xchg
and
cwtl
mov
mov
scas
sbb
jne
loope
pop
fwait
and
popf
mov
std
cwtl
insb
sbbl
aaa
push
mov
insb
faddp
xchg
ja
cs
push
repnz
xor
push
imul
fisubrl
xchg
jo
dec
inc
mov
sbb
in
insb
loopne
and
pop
adc
dec
or
aad
mov
gs
mov
mov
cmc
pop
or
dec
mov
cmp
mov
in
sub
out
pop
ret
insb
ss
sub
cmp
insb
sbb
popa
add
jecxz
sub
cld
fstl
es
dec
test
outsl
loopne
pop
add
cltd
push
daa
xor
mov
or
cmpsb
add
lcall
dec
es
int
movsb
jne
xor
xlat
insb
cmpsl
lds
push
lahf
call
cmp
sahf
lods
call
aad
mov
push
imulb
sub
sbb
and
pop
insb
cld
push
add
insb
cwtl
mov
mov
insb
mov
js
mov
mov
inc
add
xor
fsubrs
add
cli
loopne
cld
insb
sub
and
xchg
mov
es
insb
stos
ffreep
xchg
cli
sub
push
xorb
cmp
int3
imul
fiaddl
clc
mov
subb
push
lcall
pop
fneni(8087
inc
mov
insb
cli
sbb
leave
call
inc
hlt
mov
insb
inc
fdivrl
xchg
stos
dec
mov
or
movsl
je
sbb
movsl
xchg
insb
pop
mov
loop
insb
cmp
add
dec
ret
mov
inc
push
inc
insb
push
sbb
add
in
fcoml
sub
mov
std
insl
stc
mov
data16
dec
insb
call
iret
mov
cmpsb
mov
stc
insb
ret
fmull
shrl
inc
adc
int3
sub
cmc
cmp
cmpl
popf
dec
push
imul
rclb
adc
dec
mov
dec
or
ss
mov
repnz
dec
mov
lds
fstps
insb
xor
or
movb
jl
sub
pop
into
xor
mov
outsb
jno
push
imul
jg
imul
je
mov
inc
in
rcrb
adc
insb
pop
clc
shrl
mov
into
popa
mov
or
lret
or
cmp
mull
insb
cli
pop
mov
sub
int
mov
nop
inc
insb
sbb
repnz
push
xchg
mov
insb
pop
xor
insb
xchg
fwait
gs
adc
loop
xchg
in
or
bound
jae
pop
rcr
das
and
xchg
push
cltd
repz
cmpsb
stos
iret
cld
cmp
testl
xchg
insb
nop
cmp
jnp
mov
or
inc
and
in
and
arpl
mov
dec
aas
sbb
subl
xchg
xor
jge
imul
mov
mov
insb
sub
xchg
into
mov
sbb
pusha
std
fidivrl
adc
pushf
mov
insb
xor
psubb
dec
mov
gs
sbb
aaa
push
xchg
xor
fistpll
push
lcall
or
repnz
insb
les
dec
insb
jne
js
or
rcrb
adc
mov
push
popf
cmpsb
insb
push
shr
int3
sbbl
lods
jmp
loop
mov
popf
daa
push
lahf
insb
das
mov
aad
jbe
in
mov
shl
push
lock
xor
out
pop
arpl
daa
cld
push
mov
sbb
in
test
inc
rcrb
xchg
out
lea
stos
cmpsl
add
mov
or
pop
push
cmc
outsb
mov
lcall
push
popa
mov
dec
lock
aaa
insb
jb
imul
insb
pop
je
mov
push
out
shrb
sbb
sbb
or
clc
fsubrs
mov
les
lcall
lods
aaa
mov
mov
cmp
icebp
addr16
in
mov
popf
loope
lea
nop
test
add
inc
jmp
cmp
push
pop
in
lcall
mov
iret
int3
jb
ret
insb
mov
sbb
mov
mov
push
test
sbb
inc
in
xchg
insb
or
imul
ja
lret
cmp
mov
in
xchg
xor
jbe
in
add
add
rorb
pop
and
call
jle
cmp
fidivrs
popa
subb
loop
stc
xchg
mov
sub
jmp
insb
mov
sbb
push
arpl
sub
mov
xor
jmp
mov
pop
jbe
cmp
lock
lods
icebp
and
and
cwtl
push
int
mov
insb
jmp
sahf
jns
cmp
pusha
xchg
pop
insb
nop
scas
sbb
dec
divb
add
push
cmpsb
jb
mov
inc
xchg
into
call
or
aaa
scas
inc
pop
insl
xchg
jne
pop
push
fldcw
jmp
mov
jae
jbe
or
push
int3
int
cmp
in
xchg
xor
lods
jb
sub
jns
pop
cmpl
jb
data16
imul
sahf
jnp
lretw
or
iret
add
or
jnp
cld
in
jbe
push
stos
call
inc
jle
xor
das
mov
add
push
xchg
sbb
insb
pop
lods
and
fwait
and
pop
push
xor
mov
jp
sbb
push
jb
or
imul
negb
mov
in
js
inc
scas
stos
test
and
and
cmc
ja
jmp
or
xchg
dec
cmp
in
pop
movsb
bnd
lods
insb
push
adc
out
fstpl
mov
jecxz
mov
mov
ret
insb
decl
push
les
add
xchg
xor
push
add
pop
ljmp
jl
xchg
inc
pusha
insb
push
cmp
jae
pop
repnz
pop
sar
loop
sti
cs
mov
dec
add
inc
cmpsl
fldenv
xchg
repnz
jo
xor
insb
adc
enter
cmp
and
push
pushf
mov
add
fistpll
insb
fldcw
fisubl
add
xchg
push
add
js
dec
gs
and
sub
jp
inc
ret
cmp
out
push
xchg
loope
lods
xchg
imul
lods
gs
repz
jg
fsubr
mov
xchg
aas
int
rcl
subb
js
fisubs
ret
mov
inc
adc
insb
call
jle
movsl
pop
xor
dec
inc
insb
mov
ffreep
cmp
xchg
in
enter
sub
sub
out
push
sbb
dec
pop
daa
sbb
insb
mov
xchg
pop
pop
arpl
xchg
insb
lret
or
insb
pop
lcall
push
mov
adc
add
ret
insb
or
test
arpl
cmpsb
push
mov
jb
nop
dec
adc
xchg
sbb
lahf
addb
insb
or
mov
mov
xor
aad
stos
inc
cmp
cmpb
push
out
test
pop
test
cmpsb
stos
push
xchg
dec
pop
pop
mov
cmp
jo
xchg
fs
insl
pop
inc
lock
insb
sti
ret
mov
xchg
call
inc
insb
fldcw
pop
mov
arpl
shll
enter
inc
xor
andb
aas
popa
cmpsb
pop
xor
leave
lods
das
in
insb
cmp
mov
imul
and
lods
push
popf
rcrb
mov
dec
ret
and
adc
loopne
ficoml
insb
mov
testl
je
hlt
repz
insb
ds
add
popa
jg
in
and
jmp
inc
call
mov
cltd
rcll
loop
subl
sbb
insb
sti
jmp
mov
push
insb
pop
fidivrs
push
fwait
imul
in
cmp
push
lcall
push
sbb
pop
jecxz
pop
std
pop
adc
into
add
inc
insb
movsl
cwtl
inc
mov
mov
insb
pop
in
cmp
adc
imul
mov
dec
outsb
ljmp
mov
lods
mov
lret
bound
outsl
mov
and
mov
sti
mov
out
insb
in
aad
lcall
daa
insb
mov
fstpl
movsb
andb
mov
or
dec
push
push
in
std
pop
mov
xlat
repnz
int
ss
xor
push
stos
or
pop
orl
lret
push
or
outsl
movsb
ja
mov
dec
je
in
xchg
add
cmp
add
int3
push
sti
push
jmp
xor
jb
pop
insb
pop
loope
packuswb
outsb
out
inc
es
sub
gs
stc
dec
insb
mov
xor
cwtl
pop
sbb
in
fldenv
push
bound
jb
in
or
insb
sbb
xchg
jns
repz
mov
test
fs
jbe
gs
mov
mov
adc
fisubs
lods
in
mov
cmc
insb
loop
mov
inc
and
test
in
iret
push
jecxz
and
push
sarl
int3
sub
fsubr
mov
pop
and
pop
ljmp
pop
lods
dec
pop
sub
movsb
rcrl
adc
or
and
mov
fldenv
lcall
mov
xlat
data16
pop
cmp
test
fldcw
les
insl
ds
cs
je
jae,pt
fisubrs
push
mov
int
add
sbb
pop
fisubrl
push
mov
insb
aam
cmp
push
sub
test
cmp
jg
repz
insb
les
xchg
cmpsl
jnp
jmp
loop
fucomi
push
insb
mov
inc
fldenv
mov
jg
mov
push
icebp
fsubrl
inc
js
mov
sti
subl
sub
cli
adc
cmpsl
daa
cwtl
inc
shrl
repz
je
stos
roll
sub
or
es
shl
sbb
cmp
jmp
sub
sbb
xchg
sti
pop
insb
push
jno
outsb
lahf
fidivrl
test
push
data16
or
lret
rclb
bound
jo
fistpl
fdivrs
int3
insl
jnp
in
insb
xchg
movsb
out
sar
jmp
aad
in
cmp
mov
adc
aas
imul
fistpl
adc
xchg
mov
pop
lret
pop
mov
lods
fcomip
test
insl
xor
or
popa
jmp
imul
sub
lahf
lret
mov
lea
orl
dec
add
jns
cmpsl
outsl
jo
jbe
jp
insb
sbb
lock
sti
int
xchg
insb
lahf
addr16
pop
outsl
dec
cld
imul
std
insb
lods
jb
aaa
adc
mov
cs
pop
lods
int
sub
mov
insb
loop
pop
stc
mov
pop
or
push
gs
push
and
in
rorl
iret
insb
dec
pop
insl
jbe
cmpl
jg
testb
sahf
insb
shrl
shlb
aas
out
gs
stos
push
and
pop
or
mov
mov
insb
or
mov
push
push
or
mov
push
int
mov
push
mov
jecxz
xor
jb
pop
xchg
test
imul
jbe
push
lods
stos
jb
popa
cmp
insb
pop
jne
test
pop
and
insb
mov
mov
push
call
in
dec
int3
add
insb
arpl
lds
insl
jo
mov
loopne
and
push
add
adc
mov
xor
test
insb
pop
fldl
pop
mov
ljmp
repnz
pop
pop
das
rcrb
or
insb
repnz
xor
sbb
or
int
cld
xlat
mov
insb
sub
cmc
and
insb
pusha
mov
add
xchg
cmp
mov
pop
imul
test
xchg
loopne
cmpsl
sahf
cmp
inc
js
incb
insb
lret
sub
pop
xchg
adc
into
popf
in
pop
adcl
sbb
cmpsl
outsb
jmp
mov
lds
xor
add
insl
dec
sub
popa
cld
sbb
mov
pop
push
gs
dec
addb
adc
pop
popa
sub
movsl
insb
adc
repz
sbb
insl
cmp
pop
cld
mov
pop
insb
xchg
hlt
cmp
pop
movsl
xchg
adcl
imul
mov
js
hlt
xchg
xchg
adc
cmp
add
insb
adcl
aaa
add
and
jmp
inc
or
in
sub
jns
sbb
sbb
fs
imul
pop
sbb
les
cld
lahf
daa
insb
clc
or
gs
sbb
and
push
fisubrs
inc
add
add
insb
cmp
dec
outsl
jo
or
push
lock
cmpsb
icebp
insb
aas
repnz
dec
popa
mov
adc
push
outsb
dec
lods
add
adc
or
inc
shll
jmp
sub
dec
ss
sti
loopne
xchg
push
imul
insb
push
outsb
insl
addl
popa
add
das
pop
mov
mov
sub
leave
movsl
popa
addb
insb
push
jmp
or
mov
cld
adc
imul
stc
movsl
cltd
sub
stos
mov
sbb
push
clc
insb
sahf
adc
sbb
fwait
dec
pop
std
mov
sbb
push
cwtl
push
jns
cmp
scas
insb
cmp
jmp
mov
std
cmp
xchg
shrl
xchg
mov
cwtl
loopne
jp
add
jl
mov
arpl
nop
xchg
sahf
insb
and
es
insb
in
cmpl
insb
xchg
cmp
push
push
insb
lcall
push
mov
out
dec
jo
inc
addr16
cmp
popf
in
repz
xchg
and
insb
pop
je
repnz
int3
pusha
shrl
and
insb
mov
movsb
ljmp
aad
jl
arpl
insb
cmpsl
jp
and
jo
cmp
loope
or
in
mov
or
dec
jl
push
dec
inc
xor
mov
mov
cmp
or
insb
lea
das
lock
enter
mov
sbb
jecxz
cwtl
xlat
pop
pop
inc
ficoml
addl
gs
xchg
pusha
outsb
lods
sub
dec
insb
add
and
fnsave
push
jg
lret
mov
jo
jp
insb
lock
xor
mov
mov
fldenv
insb
sbb
xchg
dec
into
dec
xor
and
push
add
mov
fimuls
xchg
fs
in
lods
lods
inc
mov
cmp
pop
jns
dec
inc
aam
push
pop
sbb
insb
sub
jp
and
add
sbb
in
add
mov
into
inc
sbb
xor
inc
pop
sbb
mov
mov
mov
scas
dec
insb
or
inc
pop
sahf
lods
stos
inc
mov
dec
sbb
jmp
jmp
sub
and
push
jae
xchg
pop
sub
test
sub
xchg
dec
pop
dec
push
je
push
jecxz
push
insl
insb
out
out
imul
sub
adc
out
push
lret
fs
mov
insb
mov
pusha
iret
or
inc
repz
in
sub
xor
es
dec
jl
insb
push
inc
pop
subl
mov
cs
jle
inc
fistps
insb
push
mov
pop
je
xor
inc
lods
cmp
test
jns
stos
loopne
jno
in
pop
pop
mov
sbb
rcrl
shrb
jb
lcall
sbb
pop
and
mov
jmp
pop
jge
pop
jne
sbb
popa
loope
ds
stos
into
xchg
sub
or
test
mov
inc
test
test
icebp
gs
cmp
cld
aad
add
insb
push
ret
std
cmpsb
test
or
mov
insb
hlt
je
xchg
sbb
sbb
lret
insl
imul
sbb
cmpsb
movl
gs
dec
mov
push
insb
loop
jbe
jnp
clc
nop
hlt
xchg
insb
cmp
dec
pop
pop
rcl
insb
mov
inc
test
stos
movsl
mull
mov
js
pushf
cmp
subl
arpl
mov
movsb
mov
data16
insb
pop
loopne
jae
jg
imul
insb
sub
mov
xor
mov
int
sub
ret
xchg
in
lods
xor
sub
mov
aad
imul
and
and
mov
mov
dec
push
push
in
insb
fsubrl
cmpsb
sub
insb
mov
pop
add
insb
xor
ret
and
das
out
es
dec
cmp
insb
in
jp
adc
adc
stos
imul
int3
jl
test
add
push
or
lods
xor
cmp
stc
mov
lods
and
lret
es
sarb
pusha
xchg
test
imul
xchg
gs
cs
je
sbb
insb
sbb
flds
shl
mov
test
hlt
decb
cmp
insb
push
fsubrp
fisubrl
dec
fdivl
clc
testb
iret
cmp
xchg
das
insb
out
xlat
jl
push
fistl
insb
pushf
std
in
sub
mov
jle
insb
mov
sub
arpl
in
aaa
jmp
cmpsl
gs
cmp
mov
ds
flds
or
add
call
and
or
cmp
xchg
imul
mov
cmp
push
mov
in
mov
cwtl
int3
leave
stos
popf
pop
xchg
das
or
cmp
std
adc
dec
mov
loop
and
shrl
rcrb
jecxz
inc
pushf
push
cmpsb
mov
insb
mov
adc
stc
push
mov
insb
push
dec
out
xor
and
adcl
cmpsl
data16
xor
dec
insb
popa
cli
mov
pop
insb
adc
jge
inc
push
addr16
xchg
and
adc
mov
popf
sbb
imul
inc
cmp
sarb
sub
jns
jl
fs
jge
adc
cmp
rcrb
imul
in
hlt
and
or
das
enter
call
add
insb
out
sub
mov
lds
xor
arpl
insb
mov
mov
mov
or
sbb
shll
push
sub
mov
insl
xor
insb
pushf
cmpsl
out
popf
fyl2x
cld
insb
sti
andb
pop
push
or
and
xor
push
outsb
shrb
mov
insb
mov
jae
mov
xchg
pop
lods
inc
loop
cmpb
insb
or
cli
lods
xor
pop
outsl
mov
pop
mov
push
inc
jmp
out
cwtl
mov
xor
adc
jmp
out
pop
inc
jo
ljmp
cmc
mov
int3
xchg
mov
insl
cmp
insb
cld
pop
mov
dec
dec
in
xor
hlt
pop
popa
lock
arpl
mov
dec
test
aam
insb
rclb
cmp
add
into
mov
or
pop
pop
jne
les
hlt
imul
mov
or
insb
push
in
xchg
and
test
insb
aad
lret
sbb
push
sti
aas
mov
repz
jp
popa
jbe
in
insb
xor
sub
push
add
push
sbb
pop
lods
out
xor
dec
or
loopne
test
jno
insb
jns
mov
clc
insb
orl
dec
jecxz
outsl
xor
lods
fsubs
xchg
ret
insl
imul
out
dec
and
fisttpll
adc
mov
mov
lea
push
cmpsb
sub
sbbb
in
fcomip
pop
enter
stos
inc
lcall
daa
subl
jge
or
aas
add
movsl
rolb
xor
insb
push
lds
mov
mulb
add
xchg
lahf
jl
es
gs
cmp
repz
push
imul
mov
sbb
mov
popa
cmpsb
mov
fs
mov
push
cmp
cmp
call
and
inc
cmp
ss
sub
mov
adc
ds
rclb
sub
popa
jmp
push
xor
bound
pushf
popf
push
xchg
scas
sub
push
jmp
lods
fisubs
sub
lods
lret
in
jne
cmpsl
push
mov
xchg
idivb
iret
jbe
or
in
outsw
scas
lock
mov
jmp
add
and
jae
jne
clc
iret
lahf
test
stos
xor
andl
mov
gs
mov
mov
jecxz
pop
subl
lods
loopne
dec
push
sub
scas
out
mov
push
mov
add
xchg
jl
push
insb
std
cwtl
hlt
rcrb
popf
insb
es
sub
arpl
subb
lret
movsl
movsb
scas
mov
pop
dec
and
lcall
imul
inc
cld
mov
inc
in
sub
jnp
ret
insb
adc
sbb
sub
out
insb
fcoml
pop
dec
negl
and
not
adc
xor
insb
scas
arpl
stos
inc
lock
gs
or
out
cmp
or
push
push
mov
loope
inc
lds
mov
leave
mov
cmpsb
push
stos
inc
out
mov
pop
in
bts
xchg
clc
es
cmp
insl
insb
add
stos
lret
fcoms
sub
mov
sbb
notb
dec
cmp
dec
shlb
loopne
xchg
sub
pop
in
fwait
in
loop
pop
mov
fdivp
test
sub
jecxz
xor
call
mov
jecxz
lcall
aaa
pop
cmp
mov
push
repnz
ljmp
cmp
sub
out
inc
lret
in
dec
repz
inc
pop
loopne
movsl
mov
lahf
cmp
insb
pushf
jg
hlt
das
data16
jmp
pushf
dec
xchg
xor
lea
lds
imul
ds
pop
add
jnp
jg
inc
pop
fnsave
push
lods
xchg
insb
ja
nop
jl
mov
loope
shl
cmp
xor
loop
push
fstpl
cli
fisttps
pop
daa
inc
addb
test
insb
pop
lock
fdivl
daa
sbb
add
pop
cld
dec
jb
cs
adc
clc
cmp
insb
sbb
scas
inc
enter
xorb
mov
mov
je
mov
notl
mov
fsubr
loop
push
push
xchg
add
out
adc
enter
testl
jbe
and
sub
dec
or
mov
sub
adc
push
mov
push
mov
gs
xor
push
loopne
notl
ret
or
xchg
cmp
dec
mov
xor
mov
dec
jge
lods
mov
fdiv
fs
xor
insb
bound
and
dec
xchg
inc
insl
sub
and
insb
les
cmc
pop
insb
mov
xchg
je
imull
rcrl
repnz
insb
imul
cmpsl
xchg
xchg
jne
jbe
das
xor
insb
adc
aas
insb
mov
fidivl
imul
and
shrb
xor
adcb
adc
and
jnp
mov
push
aad
stos
test
or
push
jmp
lods
pop
lds
stc
insl
cmc
xor
ljmp
jns
dec
shrb
fsubrl
pop
fistpll
dec
out
push
shrb
scas
mov
js
mov
jl
fcmovne
push
insb
mov
int
dec
testb
adc
clc
ror
mov
insb
daa
mov
sbb
jg
int3
pop
mov
mov
xor
add
es
adc
rcl
pop
stc
cmpsb
mov
notl
nop
in
jo
dec
lods
cltd
lods
mov
dec
flds
inc
dec
or
aad
movsl
hlt
mov
imul
xor
pushf
pop
inc
mov
dec
ljmp
xchg
outsl
inc
cmpsb
imul
jno
out
movsb
jle
jge
scas
fyl2x
insb
add
popa
sti
push
mov
mov
data16
cmp
dec
test
jecxz
mov
xchg
push
inc
mov
insb
add
jmp
mov
sbb
jne
jns
imul
insb
clc
jl
in
lcall
out
movsl
les
add
jne
sub
sbb
push
int3
xor
psubw
arpl
call
inc
ds
repnz
sbb
fcmovnb
shlb
ja
adc
or
clc
ljmp
int
lret
or
call
pop
lods
mov
inc
push
and
fdivrl
popa
stos
xor
mov
sbb
repz
xchg
jo
mov
adc
mov
mov
and
shrb
sub
fcompl
lret
aam
and
mov
add
sub
mov
jg
fmull
insb
jl
cmp
or
adc
mov
jno
and
lods
je
popa
inc
sti
cmpsb
cltd
insb
jecxz
and
cli
movsl
cmp
test
pop
sbb
jle
lds
lods
dec
inc
cmc
aam
push
ja
es
imul
jne
nop
xchg
jbe
cmp
imul
rcrb
loopne
xor
bound
lahf
les
imul
jne
pop
nop
xorb
jecxz
xchg
arpl
mov
cmp
sahf
insb
jnp
mov
xor
adc
dec
imul
jo
mov
mov
sub
movsb
rcrl
nop
sbb
jns
or
test
idivl
subl
insb
add
push
xor
aam
lds
cmovae
test
add
jp
insb
mov
xchg
sbb
sti
push
ljmp
or
add
cmp
hlt
cli
rorl
es
loope
icebp
sub
test
shl
insb
out
push
add
sub
test
insb
iret
into
rcrb
sbb
nop
imul
insl
cmp
mov
ficomps
sbb
daa
add
xlat
out
in
mov
insb
and
leave
adc
cli
sub
test
pop
cltd
into
mov
xor
xchg
lods
push
gs
jmp
dec
xchg
inc
rorb
mov
sub
lods
mov
roll
iret
out
xchg
jl
push
insb
bnd
pop
push
push
imul
dec
je
sub
insb
jo
fimuls
xor
insb
fldt
jbe
pop
xor
insb
movsl
ret
lods
mov
pop
ret
insb
popa
sub
imul
fcoms
dec
xchg
sbb
insb
inc
sub
lods
sub
sub
jbe
js
daa
inc
inc
add
sub
add
and
insb
aam
ss
mov
and
push
jp
insb
int3
divl
movsb
daa
add
mov
ret
clc
int
psllw
insb
es
or
ret
outsl
out
scas
jo
call
int3
jo
inc
jp
sbb
sbb
insl
aaa
dec
and
push
xor
jecxz
aam
dec
xor
xlat
subb
in
push
pop
mov
mov
cld
aaa
or
jno
lock
xor
fs
sbb
sub
insb
mov
mov
pop
xorl
repz
inc
mov
mov
xchg
adc
mov
aad
cld
imul
mov
imul
dec
mov
fsubrp
out
add
lahf
sbb
aaa
inc
mov
jmp
rcl
pop
jecxz
adc
imul
add
or
in
scas
fwait
js
cwtl
push
sbb
in
fdiv
push
shr
testl
fdivl
lret
sbbl
je
mov
jns
test
ljmp
in
jb
in
jge
insb
es
out
add
sbb
sbb
sbbl
gs
xor
mov
mov
sub
lock
cli
pop
insb
adc
cmpsb
and
imul
mov
test
mov
rcl
insb
mov
adc
dec
imul
stc
mov
imul
pop
push
inc
insb
xchg
bound
inc
shrb
dec
mov
pop
insb
inc
mov
push
jbe
insb
adc
mov
rorl
ljmp
push
out
popf
in
sub
std
pop
pop
adc
imul
call
mov
xor
xchg
fisttps
loop
push
mov
jae
xor
mov
loopne
fiadds
dec
insb
std
mov
pop
insb
sbb
push
push
and
pop
lahf
mov
out
in
sub
scas
pop
inc
insb
clc
sbb
xchg
or
push
imul
js
push
add
sahf
insb
xchg
fcomps
fsubrl
xchg
imul
faddl
insb
gs
sub
mov
testb
in
jb
popf
std
dec
xchg
pop
and
mov
mov
lahf
push
xchg
mov
or
mul
insb
rcll
aad
insb
push
or
fs
pop
pop
inc
dec
xchg
stos
push
sub
pop
jmp
ret
ljmp
insb
mov
ficompl
insb
in
sbb
out
ret
mov
mov
aam
inc
imul
fs
data16
jo
and
insb
add
mov
aad
push
insl
cmc
cld
das
and
push
gs
mov
or
jno
fdivrl
sbb
sarb
or
dec
mov
jl
dec
pop
pop
adc
pop
incl
mov
push
rcrb
add
lods
sub
lahf
push
and
rorb
xchg
loopne
sub
adc
xor
inc
xor
sti
in
lcall
cld
insb
dec
xor
in
scas
push
sbb
lret
rorb
mov
insb
pop
movsl
xorb
fisubl
cmp
push
lods
add
scas
cmp
xlat
cs
jno
insl
movsl
daa
lea
push
jge
mov
sarl
insb
inc
inc
dec
xlat
negl
add
lods
jecxz
outsl
jo
jnp
andb
sub
dec
xchg
nop
pop
fwait
or
je
push
insb
push
sbb
lds
xor
or
jge
insb
mov
or
xor
stos
insb
popa
out
repnz
inc
dec
insb
test
mov
outsb
xchg
aad
dec
rolb
jmp
andb
bound
insb
xchg
cmpsl
mov
cmp
or
lea
idivb
popf
pop
leave
dec
and
or
mov
pop
pop
movsb
sbbb
or
mov
nop
mov
cmp
out
insb
cmp
shrl
insb
inc
push
inc
pusha
lret
fcmove
xor
imul
inc
and
ss
jae
dec
rolb
xchg
insb
add
and
idiv
sub
insb
mov
in
into
pop
subl
addr16
out
insb
sbb
push
scas
insb
leave
testl
inc
jmp
cwtl
in
sub
stc
insb
jecxz
insb
cmp
clc
ret
int
insb
mov
loop
aas
sbb
lods
dec
lret
push
push
inc
and
add
aaa
lods
push
jp
outsl
ret
cmp
mov
pop
mov
push
and
xor
insb
outsl
mov
dec
mov
ja
jns
inc
aam
jbe
push
and
int3
jge
inc
sbb
repz
cmc
stos
mov
and
cmp
mov
pushf
push
ret
lods
psrad
ret
data16
popa
stos
sub
and
in
sti
sbb
lds
insb
aad
xor
jl
jmp
lods
mov
xor
xor
popf
out
into
mov
insb
test
mov
mov
insb
call
mov
mov
leave
mov
call
loopne
movl
jl
pop
aam
aas
gs
mov
add
test
aaa
mov
lcall
int3
pop
insb
pop
roll
imul
lret
xchg
call
ds
roll
sub
sub
push
cmc
bound
adc
mov
jb
shrb
insl
pop
jmp
cmp
fstl
lea
dec
aaa
adc
cmp
mov
add
mov
insb
cmp
into
adc
movsb
imul
mov
icebp
insb
jnp
inc
or
inc
cmp
inc
mov
js
jg
jbe
insb
std
lcall
pop
cmpsl
inc
sbb
clc
jbe
mov
mov
jne,pt
lock
or
mov
mov
ss
loope
ficompl
sub
insb
dec
inc
popa
mov
sub
push
sbb
subb
or
cli
xor
xor
stos
ret
movsb
insb
xchg
xchg
pop
rclb
int
insb
sub
stc
mov
imul
ret
or
test
insb
push
or
popa
insb
dec
or
lahf
ljmp
inc
or
push
or
imul
mov
in
jmp
pop
sbbl
scas
cli
aam
add
and
sahf
imul
shl
test
jp
lcall
mov
push
je
dec
add
mov
xor
in
iret
icebp
je
xor
insb
aam
and
push
and
sbbb
fwait
mov
fucom
in
lock
lds
call
setle
inc
insb
test
pop
shll
sub
fisubrs
insb
adc
cwtl
mov
scas
js
loop
movsl
push
and
insb
dec
sub
negl
cld
add
imul
lock
xchg
daa
insb
arpl
jle
insb
xchg
mov
fucomp
adc
or
mov
stc
push
pop
test
dec
fimuls
mov
dec
dec
lret
sub
scas
push
lods
das
push
fwait
insb
xor
xchg
xor
xchg
adc
cmp
and
jnp
mov
test
and
xchg
mov
cmpsb
jno
dec
push
pop
pop
sub
mov
xchg
pop
fucomi
lret
das
ret
xchg
pop
insb
outsb
fsubl
cmp
dec
jge
imul
push
and
dec
in
sub
fwait
jl
test
ret
enter
mov
gs
insb
jnp
mov
lods
leave
nop
imul
stc
imul
pop
add
dec
stc
enter
insb
push
pop
pushf
clc
adc
jne
push
jmp
outsb
pop
addr16
arpl
sti
in
or
adc
inc
es
test
push
insb
cmp
jp
insb
lock
cmpsb
repz
imul
in
add
dec
insb
popf
stos
xor
and
mov
add
cmp
mov
insb
or
jge
jae
mov
sahf
or
inc
xchg
push
fiadds
loopne
shrb
and
sbb
ljmp
pop
push
mov
jge
and
imul
mov
imul
repnz
movsl
mov
xchg
insb
pop
ss
repnz
roll
aaa
cmp
std
lods
or
mov
aad
xor
out
jno
mov
fs
xabort
cmp
ucomiss
outsb
dec
dec
fnop
outsl
lods
in
cmpl
sbb
xor
dec
hlt
aaa
mov
dec
sahf
inc
gs
pop
int3
inc
xor
pop
out
in
jo
mov
push
insb
xor
xchg
xor
insb
ss
fcompl
inc
repnz
je
imulb
mov
mov
push
push
pop
mov
pop
dec
cmp
mov
in
leave
call
lds
jbe
mov
test
scas
jge
jo,pt
sub
mov
sti
cltd
cmpsl
cli
xchg
xchg
in
sub
cmp
insb
add
jae
fstpl
insb
mov
xor
aam
in
xor
arpl
fdivrs
xchg
lods
scas
mov
clc
insl
pop
pop
pop
dec
inc
shrl
std
lea
outsl
in
pop
add
fidivrs
or
loop
mov
mulb
cwtl
mov
jl
push
into
ret
fildll
stc
insb
std
rolb
mov
lock
jne
test
or
and
iret
sbb
push
xor
xchg
pushf
xchg
insb
sub
sbb
sbb
jg
mov
inc
or
repz
xor
insb
push
pop
pop
imul
mov
sub
mov
xchg
mov
aaa
insb
js
add
pop
mov
xchg
fiadds
dec
fnstcw
and
imul
movsb
rcr
xchg
cld
cmp
call
lret
sub
mov
cwtl
mov
xor
jae
in
inc
imul
rolb
push
xchg
insb
add
loop
add
push
imul
pop
repz
test
mov
pop
lret
jp
insb
std
hlt
bound
sub
sub
stos
fnsave
es
push
sbb
lods
fldcw
imul
sub
iret
imul
cld
ja
push
cwtl
stos
jno
in
mov
insb
or
xor
fmull
xchg
jp
xchg
push
mov
and
xor
push
insb
xchg
leave
lods
jmp
rcr
stos
pop
mov
mov
and
je
gs
stc
or
xchg
xchg
testl
pop
out
mov
hlt
cmp
dec
add
loope
push
insb
pop
cmp
out
dec
push
clc
cmc
fwait
insb
or
daa
ficomps
push
pusha
addl
les
pop
lahf
dec
add
lods
pop
dec
pop
addr16
inc
insb
xlat
dec
sbb
pop
insb
out
or
mov
mov
and
xor
or
xor
loopne
sahf
lods
sub
dec
insb
pop
push
or
and
xor
insb
mov
mov
xchg
add
sub
mov
arpl
mov
push
mov
or
les
push
xor
stos
mov
xchg
pop
push
je
add
nop/reserved
data16
call
push
imul
mov
push
cmp
jl
jmp
icebp
insb
mov
push
pop
lret
push
pop
mov
inc
pop
or
insb
stos
ret
mov
das
insb
sbbb
and
popf
pop
call
xchg
adc
sub
js
pop
dec
and
cld
jns
fwait
mov
sbb
pop
insb
push
xchg
sbb
push
xor
mov
fld
xor
cld
xchg
sahf
insb
and
stos
adc
insb
fmull
mov
insb
cltd
shl
mov
outsl
insb
lret
fs
inc
mov
movb
mov
in
das
int3
adc
hlt
iret
or
std
xchg
insb
mov
popa
inc
mov
out
cs
rcll
enter
insb
cmp
repnz
test
mov
add
rcrl
insb
pusha
cmp
and
mov
in
sbb
jno
imul
mov
and
pop
and
fwait
mov
or
or
ss
mov
add
xchg
cmc
or
mov
insb
push
or
shrl
mov
jae
jle
push
jmp
hlt
scas
pop
insb
ficoms
iret
lret
or
and
loop
nop
inc
dec
fstpl
insb
call
mov
dec
imul
xor
cmpsl
stos
insb
rcl
sub
repz
imul
adc
rcrb
insb
pop
cli
cld
sbb
rorl
xchg
sbb
sti
lahf
loopne
jecxz
mov
adc
test
cmp
mov
push
sbb
mov
dec
push
and
imul
into
or
loope
mov
insb
and
stos
jle
sub
cli
aaa
outsb
ja
dec
cmp
lods
jmp
lahf
mov
lods
je
adc
rolb
ljmp
jp
cs
rep
loop
insl
popa
mov
mov
cmp
add
out
mov
femms
dec
lea
jnp
js
pop
jae
xor
inc
test
pop
insb
inc
adc
push
and
jl
in
mov
mov
fldcw
push
add
ss
jns
sbb
lock
sub
xor
xchg
dec
xchg
test
and
mov
insb
mov
sbb
pusha
mov
call
or
fdivs
fsubp
insb
imul
test
insb
scas
dec
pop
dec
lcall
jnp
cmc
xor
cwtl
fcomps
sbb
insb
sub
in
cmp
insb
popa
and
inc
mov
jnp
adc
adcl
lret
stos
mov
adc
sbb
adc
aas
dec
cld
lock
testl
loopne
xchg
cmpsb
mov
sub
test
and
mov
mov
subb
icebp
sub
jo
xor
loope
xchg
push
in
xchg
scas
xorl
dec
dec
sbb
repnz
pop
cld
mov
aam
loop
ret
mov
jp
inc
xor
repz
jne
aaa
mov
insb
xor
lds
js
cmp
push
inc
insb
pop
fiaddl
mov
insl
aam
mov
fs
insb
adc
jle
shll
add
lea
jno
push
jnp
ds
ss
xor
fwait
loope
lds
je
iret
insb
outsb
dec
insl
mov
xor
push
mov
jo
or
or
enter
fistpll
or
sub
les
cmc
pushf
mov
and
ret
movsl
and
iret
insb
icebp
inc
jae
data16
and
jns
xchg
test
cmpsb
imulb
and
mov
sbb
sub
cltd
out
test
leave
test
sub
imul
rep
in
mov
dec
cmpsb
test
dec
mov
cmp
mov
imul
sbb
pop
andb
fidivrs
push
aas
dec
xor
pop
xchg
xchg
xor
insb
and
mov
dec
jmp
dec
xor
xor
aam
insb
lahf
xor
loopne
jle
in
fistpl
sub
mov
add
and
ret
sahf
push
xor
or
cmp
lahf
sub
mov
in
push
jle
lods
mov
jge
aaa
dec
add
subb
in
and
pushf
imul
insb
nop
loop
sbb
cwtl
sahf
sar
add
mov
pop
das
inc
mov
xor
insb
iret
mov
pop
mov
lret
imul
adc
pop
cmpsl
xlat
hlt
insb
out
imul
pop
insb
icebp
add
inc
jb
shrb
xor
sbb
cmc
jns
arpl
aaa
inc
test
pushf
insb
popf
dec
cs
cld
inc
fisubrl
insb
pop
loope
outsb
inc
lahf
dec
pop
insb
push
add
xor
ja
mov
push
insb
movsb
and
mov
rorb
sbb
cmpsb
sbb
insb
ja
jle
cmpl
pusha
sbb
dec
mov
pop
xchg
jmp
insb
jb
mov
jnp
pop
popa
insb
sbb
mov
xchg
mov
push
jmp
outsb
cmp
lret
jb
xchg
xor
xchg
stos
mov
mov
mov
xchg
das
jl
bound
inc
movsb
push
sbb
lcall
addr16
dec
subl
cmc
sbb
sbb
sub
in
cmp
lods
jp
sbb
cltd
pop
mov
jno
or
movsl
xchg
scas
or
jle
test
shlb
jns
pop
xor
mov
mov
enter
cli
idiv
call
mov
aam
stos
shll
ficomps
xor
cmc
mov
call
das
test
js
repz
jg
pop
jne
enter
insl
insb
adc
or
addr16
push
and
jmp
scas
jl
das
insb
iret
dec
fs
ljmp
push
adc
push
decb
xor
nop
insb
rolb
push
fldenv
dec
pop
test
pop
jg
fdivl
or
xchg
subb
pusha
fldcw
xlat
and
insb
mov
vpmulhuw
ret
xchg
push
fistps
pop
shlb
outsb
gs
mov
sbb
dec
bound
sahf
inc
imul
push
fstpl
ljmp
jb
or
ja
insb
out
lea
sti
push
push
inc
xor
lret
in
xor
fnsave
add
call
jp
out
sbb
std
aas
mov
jb
adc
pusha
xchg
insb
cmpb
cmp
push
mov
sub
stc
jmp
mov
insb
hlt
pop
test
insb
rclb
dec
mov
lea
xor
jo
insb
and
xchg
jb
ror
xor
in
dec
in
int
ret
xlat
sahf
push
pop
in
mov
aas
mov
mov
push
hlt
or
mov
icebp
in
mov
insb
adc
sub
xchg
int
dec
loop
insl
pop
repz
insb
inc
rcl
or
aaa
jb
insb
nop
jg
ret
sub
in
mov
xchg
xor
inc
mov
sub
and
cs
insb
or
insb
aam
enter
lods
cmp
cltd
daa
subb
jg
jno
insb
push
sbb
out
ret
fldl
arpl
or
pop
pop
idivl
pop
outsb
leave
sub
pop
pop
jbe
popa
pusha
mov
mov
and
test
sbb
je
pushf
xchg
add
jb
inc
insb
mov
fsubrl
insb
lods
and
inc
pop
jne
out
repz
pop
stc
or
xchg
sub
js
push
push
int3
scas
pop
loop
xchg
ljmp
mov
and
imul
les
repnz
xor
add
push
cmp
andl
inc
pop
popf
adc
jle
int
adc
mov
addr16
and
icebp
hlt
push
std
in
sub
xchg
out
push
or
popf
sti
xchg
lret
rolb
cmpsb
or
into
and
mov
je
lcall
or
xor
cld
adc
xor
popa
xor
addr16
push
psllw
insb
ffreep
add
cmpsb
pushf
clc
insb
push
xchg
outsb
push
cmp
or
fildll
cmc
cmp
insb
dec
inc
adc
leave
fwait
jmp
push
add
push
push
insb
icebp
stc
mov
xchg
mov
mov
jle
add
xchg
insb
inc
mov
test
imul
sbb
call
mov
xchg
rep
mov
stc
mov
mov
mov
push
roll
sub
pop
sbb
fs
gs
popl
xchg
push
mov
es
mov
dec
mov
mov
jg
imul
mov
push
ja
in
ds
pusha
cmpsl
cmpsb
pop
hlt
push
gs
or
lds
movsl
dec
loopne
and
sub
std
or
mov
aas
loope
mov
ja
dec
sbbl
adc
shrl
mov
add
jne
cmp
arpl
imul
jl
fs
mov
mov
bound
xor
repnz
or
pushf
mov
push
ljmp
push
insb
bound
and
sahf
jl
fcomps
sub
pop
dec
xor
lret
mov
scas
sbb
mov
aam
jecxz
testl
pop
lahf
std
cmpsb
pop
cwtl
insb
and
inc
add
jo
fisubrl
or
xchg
jg
enter
insb
xor
and
insl
add
push
push
dec
outsl
sub
inc
fiaddl
cmp
insb
cmc
sub
cmp
shrb
gs
fidivl
aaa
mov
mov
lock
out
insb
in
arpl
lahf
gs
inc
cwtl
sbb
lret
push
push
insb
push
fsts
dec
insb
sar
imul
imul
adc
popa
sarw
or
popf
les
xor
addl
stos
pop
push
outsb
jmp
and
icebp
in
jns
jmp
imul
inc
jbe
sbb
mov
xor
ljmp
pop
jg
or
mov
je
cmc
icebp
orb
js
inc
adcl
xorl
shll
popf
or
add
push
out
push
jecxz
js
jmp
sti
or
dec
sbb
mov
call
mov
loope
push
out
jb
push
mov
cltd
mov
pop
mov
bnd
jp
push
dec
xorb
dec
dec
lahf
sbbl
addb
or
jb
test
sarl
pop
aam
xchg
inc
inc
clc
scas
and
bound
mov
dec
out
dec
mov
outsb
and
lods
in
mov
add
call
jnp
adc
sub
push
loop
jmp
or
sbb
push
pusha
loope
mov
imul
pop
dec
inc
pop
popf
lods
mov
add
cmpsl
add
or
jno
push
jne
adc
out
sub
orl
mov
sub
lcall
nop
insb
ja
pop
jge
test
bound
int3
std
lods
ss
cmpl
and
pop
mov
insb
ficomps
iret
sbb
and
xchg
xor
les
jbe
pop
fs
xchg
insl
sbb
inc
push
test
cmpl
sbb
adc
leave
pop
jecxz
test
sub
ds
mov
mov
inc
dec
add
and
jecxz
in
and
scas
jb
insb
cwtl
outsl
jp
xor
add
icebp
out
insb
jg
es
cmp
sub
je
call
fsts
jo
les
xchg
insb
inc
fwait
mov
xchg
or
repz
sbb
xor
fldl
or
aas
mov
xchg
jno
mov
pop
ss
or
inc
insb
sti
mov
in
sbb
lods
cmp
xor
call
adc
out
sbb
jge
pop
insb
fildl
ljmp
push
xchg
fmuls
into
repnz
int
out
cli
mov
gs
mov
add
jl
jl
insb
xor
jb
sbb
mov
mov
cld
push
nop
jae
insb
xor
push
sub
in
jne
pop
mov
call
pop
out
inc
loopne
leave
pop
movsb
sub
mov
movsb
cwtl
mov
loop
and
fwait
incb
shlb
ret
andb
fmull
mov
or
mov
fisubrs
xchg
js
mov
int3
mov
pop
sahf
into
sbb
mov
in
xor
jg
clc
sbb
inc
jl
pop
imul
pop
push
loop
mov
loope
add
pop
xchg
imul
push
pop
push
andl
das
insb
and
mov
xor
fistl
push
inc
fbld
imul
xor
sub
add
mov
pop
push
pop
fisttps
xor
insb
fsubp
lret
sub
pushf
mov
sbb
mov
in
aam
insb
adc
rorl
or
scas
mov
jnp
mov
or
mov
faddl
cld
dec
or
sbb
inc
insb
jbe
test
ret
insb
mov
stc
lock
call
push
sub
loop
sub
insb
sbb
or
push
aas
jmp
es
lcall
mov
les
mov
repnz
nop
rorb
cmc
rcll
insb
adc
std
adc
in
bound
fisubrs
data16
lret
fildll
push
bound
mov
cmp
outsb
gs
mov
or
pop
mov
add
jl
or
icebp
loopne
mov
into
push
mov
insb
adc
sti
and
test
icebp
and
bsr
ds
outsb
popa
pop
adc
push
insb
mov
data16
xor
in
mov
addr16
jbe
dec
cmpsl
outsb
sub
fldt
xchg
xlat
lea
mov
or
pop
dec
repz
mov
addr16
mov
cmpsb
jmp
cmp
iret
in
out
xor
mov
add
lret
mov
cmp
push
push
xchg
scas
xchg
push
cld
mov
sub
push
dec
andps
icebp
xchg
hlt
xchg
insb
mov
fadds
dec
or
or
or
lods
in
mov
shrl
les
aas
xlat
sbb
push
dec
ss
cmp
cmp
mov
dec
xchg
mov
insb
outsb
pop
dec
decl
insb
and
xor
fmul
imul
in
popf
push
sub
mov
es
icebp
arpl
sub
std
insb
mov
leave
lock
shll
pop
in
jl
and
add
cs
popf
jns
push
mov
pop
mov
mov
dec
insb
push
bound
imul
pop
sub
jns
jo
je
bnd
mov
stc
xor
push
insb
dec
jb
lret
insb
sub
test
cmc
out
pusha
insb
ret
inc
add
dec
sub
add
sbb
ffree
insb
cmpl
mov
push
hlt
aaa
mov
leave
jbe
mov
mov
cmc
jns
dec
xchg
dec
insb
shrl
shlb
sbb
add
insb
lods
inc
lret
jp
mov
nop
insb
push
inc
cld
push
out
lcall
jp
fsubl
inc
dec
insb
or
popa
stos
insb
cmp
out
push
test
adc
out
bound
jns
insb
mov
pop
xchg
dec
mov
pop
sbb
dec
aad
lret
or
ret
insb
stc
scas
outsl
mov
mov
mov
mov
and
js
insb
mov
or
cmp
sbb
xchg
andb
insb
mov
jnp
jns
mov
lea
insb
dec
ret
ja
ror
adc
cmp
lds
daa
insb
jne
imul
insb
gs
adc
shlb
pop
mov
ljmp
mov
cmp
xchg
jne
xor
std
cmp
xchg
xchg
fbld
in
pop
push
in
inc
xchg
sub
pop
in
mov
xor
gs
dec
outsb
imul
dec
dec
xchg
repnz
push
iret
push
mov
icebp
shll
imul
adc
lods
inc
outsl
cmp
test
loopne
cmp
imul
push
adc
int
push
cmpsl
cli
stos
imul
fldl
push
mov
js
add
pop
or
loopne
in
mov
lock
push
rolb
push
and
cmp
imul
addr16
pop
fcmove
and
jmp
pop
mulb
leave
inc
pushf
call
repz
cs
idiv
push
test
fisttpll
mov
leave
scas
out
pop
insb
inc
sahf
loope
mov
aas
ljmp
xchg
xlat
test
les
mov
mov
xchg
push
je
imul
std
sub
inc
pop
cwtl
add
xchg
jne
xchg
fwait
insb
stos
roll
leave
cmpsl
dec
insb
ljmp
std
insb
rcrb
sbb
call
sbb
inc
xchg
dec
mov
sub
popf
in
xchg
mov
dec
dec
jno
data16
enter
lret
cmpsb
test
sbb
jecxz
fdivrl
mov
xor
adc
pop
das
xchg
shrb
arpl
in
push
imul
mov
and
daa
lret
insb
jecxz
mov
sub
or
mov
inc
pop
or
and
jbe
gs
mov
mov
xor
insb
lea
ja
mov
mov
jbe
pop
in
jns
pop
sub
cs
std
into
mov
xor
sbb
nop
xchg
loope
inc
pushf
jmp
out
mov
insb
sub
jnp
xchg
or
mov
roll
push
dec
ja
add
aas
cmp
fmuls
cmc
xchg
push
clc
sub
in
insb
cwtl
data16
or
es
insb
test
jmp
inc
jl
push
push
cs
fnstenv
sarl
or
lahf
jp
sub
movsl
xchg
scas
insb
std
cmc
push
lret
aad
adc
xor
mov
fldt
push
push
fnstsw
dec
call
inc
insb
pushf
pop
jo
adc
aaa
cmp
dec
notb
stos
pop
jge
lea
push
out
mov
jle
imul
hlt
shld
stos
and
sub
cli
jle
int3
inc
insl
mov
push
pop
out
aaa
cmp
loop
fwait
lahf
mov
subb
pop
sbb
pop
push
adc
xchg
mov
mov
dec
sahf
dec
cltd
xor
daa
int3
cs
ss
hlt
insb
lds
cld
jns
lcall
mov
lods
xchg
push
mov
cs
dec
or
mov
enter
test
shrl
cltd
sti
jno
or
mov
xor
lcall
repz
sub
sbb
or
daa
mov
or
add
insb
sti
lahf
lret
jnp
rorl
stc
cmpsl
in
cmc
xchg
mov
cmp
dec
aam
insb
mov
or
insb
shrb
jg
out
jge
insb
push
inc
mov
lcall
mov
sbb
stos
pop
jmp
and
rep
btc
add
adc
loopne
jno
insl
lret
insb
cli
dec
inc
outsl
jmp
imul
xchg
or
xlat
or
xor
test
in
dec
inc
sub
mov
popa
mov
rcrl
adc
outsb
int3
xor
enter
jb
sub
inc
and
int3
mov
test
int
mov
cli
pop
inc
mov
aad
jnp
jns
in
imul
push
popa
pop
sbb
insl
pop
adc
pop
xchg
insb
jl
mov
xor
mov
insl
cwtl
movl
xchg
xchg
sbb
fmull
scas
and
jbe
insb
and
test
ljmp
leave
mov
cli
push
cltd
insb
dec
cmc
movsb
jo
sub
int3
mov
cld
roll
adcb
pop
mov
in
neg
jne
adc
lods
xchg
mov
xor
inc
add
les
mov
or
in
mov
or
insl
imul
icebp
inc
mov
lods
pop
xor
mov
add
adc
pop
insb
mov
mov
mov
cmc
inc
insb
push
mov
mov
and
rorl
pop
in
pop
and
ret
inc
pushf
mov
pop
cmp
xor
mov
xor
xlat
stos
cmp
insb
jne
xor
mov
sbb
dec
mov
insl
mov
mov
iret
jge
cmpsl
movsb
inc
sti
jle
insb
daa
into
push
inc
mov
sahf
gs
fisttpl
test
rep
test
mov
pop
insb
icebp
bound
xor
dec
push
ljmp
add
lea
mov
adc
pop
or
sbb
adc
in
push
hlt
add
xor
push
push
cmp
fcmovb
adc
mov
insb
dec
sub
das
insb
lods
add
xor
pop
aaa
cmp
push
sbb
jbe
insb
pop
cmp
fldl
jle
daa
dec
bnd
jg
inc
insb
adc
and
xchg
repnz
lret
insb
std
stos
test
mov
adc
jae
addr16
in
loope
aaa
sub
insb
add
pop
jp
add
mov
les
push
test
cmp
xor
xor
imul
insb
cltd
adc
push
popf
ljmp
pop
mov
xchg
dec
movsb
add
dec
mov
mov
repz
lret
dec
insb
dec
jnp
or
mov
outsb
xor
xchg
xchg
loopne
mov
cmp
jg
test
aad
mov
insb
and
aas
pushf
into
out
xchg
pop
pop
rorb
push
jg
push
rcrl
pop
xor
jbe
mov
or
cld
pop
vaddsd
bt
movsb
sub
pop
cmp
insb
fsubs
loop
dec
pop
push
cmc
stos
movsb
lea
sub
or
lds
insb
dec
bound
and
f2xm1
insb
pop
into
mov
cmp
call
outsb
pop
inc
jle
xor
imul
mov
adc
in
iret
mov
test
shrb
sbb
jbe
in
fsubl
out
call
aad
push
pop
xor
insb
aam
daa
jmp
inc
xchg
push
push
sahf
repnz
sub
jb
popf
jnp
fwait
das
pop
push
xorl
movsl
mov
popa
xor
push
insb
mov
cmp
mov
xor
cmp
cltd
sub
bound
movsb
imul
mov
iret
gs
mov
mov
mov
inc
fadds
repz
mov
mov
fdivp
lcall
jb
add
pop
in
hlt
mov
sub
xor
mov
and
mull
mov
pop
sbb
push
add
addr16
aaa
ss
inc
call
sbb
popl
jnp
push
shll
stos
out
push
pushf
stos
imul
sbb
mov
or
inc
aad
xchg
je,pt
fisubrs
jnp
mov
inc
inc
sbb
mov
aas
pop
andl
insl
dec
test
pop
std
jno
sub
add
cmp
outsb
pusha
jae
xchg
inc
orl
aam
imulb
fisubrs
popa
bnd
pop
push
push
jb
sub
out
adc
and
xchg
mov
inc
insb
in
js
sti
fisttpl
imul
sub
icebp
jge
addr16
cmp
insb
xchg
cmp
pop
insb
sbb
mov
in
sub
push
push
lret
mov
in
push
insb
cmc
rcrl
sub
push
pop
insl
mov
push
cmp
xchg
insb
pop
jl
loope
cwtl
xchg
mov
imul
fldt
or
mov
inc
ret
cwtl
notb
jb
or
enter
and
dec
outsl
cs
adc
cmpsb
pusha
push
stc
rcrb
push
hlt
cmp
push
es
dec
pop
movsl
pop
pushw
insb
mov
mov
push
pop
scas
cmc
pop
decb
insb
add
inc
int3
lahf
jmp
in
insb
mov
scas
or
test
je
int
incb
insb
mov
jl
pop
test
pop
int3
cwtl
dec
out
inc
sbbl
xor
sti
adc
ficompl
mov
sub
addr16
or
fwait
insb
xchg
push
dec
xor
insb
xor
pop
sbb
adcl
jge
and
insb
rcr
adc
scas
fsubrl
jmp
jns
fucomip
popa
aam
mov
hlt
scas
mov
dec
and
cs
add
sti
sub
roll
or
jge
jmp
pop
pop
fisubs
je
aaa
dec
cld
and
les
xchg
hlt
jbe
ljmp
jns
aaa
jnp
movsb
sbb
jbe
cmpsl
pop
ja
scas
adc
or
pop
pop
push
arpl
adc
inc
in
inc
popa
add
push
aaa
adc
push
addl
adc
ror
mov
test
pop
cmp
outsb
insb
insl
push
sbb
imul
loop
shll
negl
sbbb
ds
lods
das
fnstsw
cmovo
mov
mov
repnz
cmp
xchg
pop
test
movsb
xor
mov
adc
jo
sbb
pushl
or
lods
jp
pushf
add
cmp
push
add
mov
push
xchg
mov
in
push
xchg
mov
dec
inc
jns
jmp
mov
out
insb
in
pop
xor
dec
dec
shlb
cmpsl
das
movsb
shrb
rcrl
inc
dec
pop
popf
sbb
sbb
and
jmp
mov
aam
stos
mov
mov
insb
adc
daa
negl
sub
or
out
or
mov
das
out
adc
jns
adc
lds
test
jmp
cltd
insb
push
add
arpl
add
mov
pop
lret
mov
insb
je
ret
inc
jb
insb
or
dec
mov
push
insl
call
clc
test
pop
pop
fimuls
int3
cld
sub
sub
outsl
sbb
mov
mov
sti
adc
negl
lods
sbb
xchg
insb
sahf
pop
and
adc
fcomp
insb
xchg
sub
sbb
insb
arpl
push
cmp
and
aam
mov
jno
out
into
scas
pop
or
mov
mov
jl
pop
mov
insb
fbstp
int
mov
insb
nop
xchg
cmp
cli
aam
mov
scas
movsb
cwtl
pusha
adc
out
mov
push
pop
jmp
push
jo
popf
movsb
cmp
ret
ds
sahf
cmp
repnz
sub
fnclex
test
insb
adc
mov
mov
loope
ja
leave
fcmovnu
mov
xchg
addr16
in
std
lods
xchg
jae
and
frstor
aas
clc
fisubs
stos
cmpsb
cld
push
pusha
cmp
ja
test
push
and
sbb
insb
sar
loop
in
popf
xchg
pop
insb
mov
test
movsl
xorl
mov
out
repz
adc
insl
sub
imulb
in
test
inc
in
jnp
movsl
sbb
xchg
push
enter
jns
jle
mov
mov
push
dec
or
pop
or
pop
pop
test
notb
movsl
inc
mov
jge
lahf
fsubrl
add
sbb
icebp
arpl
loopne
push
insb
or
lret
and
insb
repnz
cmpsb
cmpb
insb
rcl
pushf
and
jb
clc
lds
subl
and
xchg
adc
mov
insb
call
push
sub
repz
jl
lea
in
jnp
enter
out
mov
mov
insb
pop
mov
mov
pop
imul
mov
and
repz
stos
xchg
push
push
test
jecxz
push
sub
mov
inc
stos
clc
lods
ljmp
add
imul
scas
test
ret
cmp
jo
popa
stc
shr
loope
je
jge
int
enter
ljmp
iret
lds
in
dec
add
or
std
mov
mov
insb
out
jne
pushf
push
jmp
lods
fs
outsl
dec
jp
hlt
jecxz
or
outsb
mov
cmp
movl
insb
adc
loopne
push
jecxz
mov
push
xor
insb
mov
mov
pop
cwtl
and
fwait
mov
std
insb
pop
int3
push
push
test
xchg
test
clc
cld
push
cmpsl
xor
insb
rolb
and
ret
ljmp
push
imul
pop
je
rcrb
insb
mov
shl
sub
bound
pusha
add
pop
mov
andl
lea
jbe
xor
or
aaa
xor
jmp
imul
and
pop
sarb
int
jno
outsb
js
jbe
jmp
jecxz
push
insb
gs
in
jo
sbb
in
add
adc
out
add
sub
ret
and
pop
ss
or
repnz
iret
jae
inc
dec
dec
pop
pop
cmp
push
scas
inc
jno
arpl
clc
pop
pushf
shlb
lods
cmpl
add
fistpll
jle
mov
lret
out
call
mov
xor
pop
dec
jecxz
out
mov
iret
lret
lcall
mov
pop
cmp
les
mov
dec
adc
mov
int3
add
inc
jb
sbb
inc
inc
fbstp
cmp
loope
push
add
push
test
push
xchg
sub
sub
fbld
aam
in
mov
popa
insb
jnp
pop
add
rorb
enter
jge
sti
fsubs
popf
xchg
and
cltd
dec
or
inc
dec
scas
test
dec
cmpsb
insb
push
sub
sahf
insb
xchg
or
add
imulb
insb
inc
mov
xor
sub
lods
push
sbb
test
icebp
pop
movsl
ljmp
dec
nop
sbb
sahf
and
call
js
adc
subl
mov
lcall
dec
push
xor
fisubrs
loopne
mov
aaa
mov
or
sbb
and
and
ss
xchg
jns
aas
ret
loopne
mov
loop
imul
ss
popf
pop
jbe
xor
sub
jl
mov
xchg
sub
mov
leave
insb
adc
ret
mov
shrb
or
jl
es
and
sub
lcall
insb
push
aaa
push
mov
imul
pushf
cmc
or
pop
imul
mov
xor
xor
daa
pop
and
insb
pop
push
ja
insb
sbb
xchg
cltd
lds
gs
cmp
insb
mov
push
loope
dec
pop
imul
mov
js
lcall
sti
loope
inc
mov
sub
insb
idiv
and
subl
or
xlat
jmp
int
fdivrs
push
dec
inc
mov
inc
pusha
fwait
pop
insb
xchg
bound
jg
push
ljmp
insb
mov
data16
cmc
xchg
daa
scas
lret
push
es
cwtl
lods
pop
out
push
sbb
mov
jnp
sarb
cmp
scas
scas
mov
in
dec
ficompl
inc
adc
xor
icebp
or
leave
xchg
ret
add
mov
mov
inc
pop
cltd
popf
insb
aam
dec
sub
mov
les
mov
adc
insb
xor
movsb
aam
fcomps
jno
pop
loop
mov
inc
push
ljmp
dec
rclb
lahf
push
ffree
fldcw
jb
xor
xor
movsb
xlat
mov
call
cmc
pop
in
insb
scas
jmp
and
loope
xor
xchg
int3
aaa
in
xor
jp
mov
ret
dec
jb
movb
jbe
notl
repz
rolb
dec
insb
xchg
shrl
and
imul
hlt
jne
push
lahf
leave
aaa
mov
cwtl
lock
adc
cld
inc
jl
add
psraw
pop
and
xor
xchg
mov
fisubrs
dec
mov
jne
push
pop
cs
push
mov
into
in
aad
mov
insb
iret
push
ss
lret
cmpsl
int3
loopne
pop
mov
shrb
mov
in
jmp
movsl
repnz
insb
data16
pop
pop
insb
push
push
push
cmp
jl
mov
xchg
imul
push
inc
mov
incl
fisubs
sbb
movsl
lods
repz
in
mov
pushf
lahf
xor
pop
sbb
dec
out
insb
mov
mov
test
frstor
jg
addl
setbe
insb
in
mov
cmc
insb
fcmovbe
ja
adc
adc
imul
inc
stc
insb
mov
pop
and
insb
fs
stos
lock
js
imul
mov
repnz
imul
push
sbb
aad
ljmp
test
lds
and
xchg
gs
js
stos
cltd
ds
insb
inc
pop
ljmp
xor
jo
jg
jmp
cmpsb
insl
mov
fwait
and
gs
mov
xlat
pop
insb
jle
lods
clc
jg
xchg
xor
dec
gs
sbb
xor
rep
cld
pop
leave
and
xor
bound
into
mov
and
mov
mov
mov
jle
mov
mov
pop
pop
push
push
pop
pop
xor
push
pop
or
mov
dec
scas
fsubrl
and
sub
xlat
lcall
sbb
mov
mov
imul
test
shll
insb
xor
sub
jle
insb
call
cmc
pop
xchg
sbb
imul
and
js
mov
rolb
lods
fldenv
mov
pop
inc
pop
pop
sbb
dec
movsb
stos
das
xor
sti
imul
rclb
jo
inc
mov
jae
xchg
xor
xchg
repnz
mov
dec
xor
stos
movsb
js
mov
subb
insb
adc
test
imul
sub
mov
fbstp
sub
insb
mov
push
stos
in
lret
insb
cli
rcrb
imul
jecxz
dec
sub
in
lahf
fs
fisubrs
xor
insb
testl
insb
mov
xlat
jb
insb
jecxz
aad
imul
movsb
mov
imul
mov
insb
stos
add
mov
aad
insb
add
mov
dec
imul
lea
sbb
test
sti
push
insb
adc
dec
insb
xchg
in
test
jle,pt
inc
insb
cs
push
out
or
fistpll
pusha
fsubl
pop
jle
insb
push
jns
daa
andl
in
cwtl
pop
adcb
imul
inc
out
insb
dec
jne
push
pop
mov
daa
int3
sub
sbb
insb
test
inc
mov
or
mov
imul
test
fsubs
fldcw
pop
inc
loope
pushf
cmp
mov
insb
fwait
pop
rclb
or
xor
pop
mov
push
ret
cwtl
popf
mov
jne
insb
jns
mov
icebp
dec
pop
mov
scas
adc
sbb
pop
jae
pop
leave
hlt
test
adc
insb
xchg
xchg
cmp
es
icebp
insb
data16
push
mov
lea
fnsave
orb
js
insl
fisubrs
into
sahf
mov
cld
movsl
mov
xlat
mov
insb
out
cmp
adc
xor
insb
jo
and
ror
aas
inc
insb
push
jmp
mov
int3
jo
adc
ds
mov
cmpsl
mov
push
int
imul
insb
stos
fisubrl
int3
mov
pop
pop
cmp
int3
jl
push
adc
insb
mov
mov
jo
push
gs
in
insb
icebp
pushf
push
xor
push
fstpl
mov
insb
pop
outsl
jo
test
xchg
adc
stc
push
mov
sub
mov
mov
cmc
xlat
insb
mov
int
pop
aas
cli
loopne
and
repnz
imull
mov
push
mov
pop
cli
adc
pop
movsl
ss
cmp
inc
jns
cwtl
ret
xchg
mov
sbb
mov
rorb
xchg
cmpb
sub
sub
jge
lret
cwtl
cwtl
in
imul
orb
imul
insb
mov
out
mov
scas
lea
scas
adc
ret
mov
outsb
addr16
fs
insb
inc
out
dec
or
push
in
push
insb
sbb
xor
fimull
insb
cmp
rol
or
cmc
daa
and
lret
ret
mov
dec
sub
mov
adc
test
ret
in
ss
int
insb
ret
cmp
insb
adc
shrl
sbb
and
stos
pop
insb
mov
inc
adc
add
mov
push
pop
scas
jmp
cmpsl
push
insb
lea
nop
subl
fdivrl
xchg
arpl
outsb
lock
rcll
mov
push
in
aad
loopne
dec
dec
xchg
insb
xlat
in
shrb
gs
imul
sahf
cmp
insb
adc
adc
adc
dec
jle
enter
out
mov
arpl
jl
jmp
inc
insb
pop
addr16
jmp
lods
fcomps
gs
sbb
xor
bswap
les
iret
out
push
insl
push
jge
cmp
insb
jg
sbb
sub
cltd
imul
mov
xlat
pusha
insb
push
in
pop
jo
test
sub
or
push
xor
dec
je
insb
sbb
sti
push
bound
outsb
mov
in
sub
gs
stos
imul
dec
sub
adc
js
cltd
jge
dec
sbb
mov
outsl
insb
jno
or
mov
test
insb
in
dec
mov
xchg
mov
jb
lea
arpl
or
repnz
push
dec
fadd
out
add
dec
test
push
sub
loopne
mull
push
push
insb
roll
mov
imul
mov
test
pop
push
jns
dec
mov
imul
lods
jo
inc
insb
or
sub
mov
mov
or
pop
cmpsl
jae
cmpl
dec
outsl
push
jmp
xchg
ja
mov
mov
out
insl
mov
cmp
clc
lock
fadds
mov
inc
insb
icebp
loopne
out
ds
out
insb
ja
jecxz
dec
sub
insb
insl
test
std
daa
dec
lds
and
outsb
sub
xchg
test
xchg
pop
stc
push
mov
inc
insb
cmc
xor
xchg
ja
sti
insb
push
sbb
ljmp
loopne
pop
mov
jnp
inc
out
adc
insb
dec
in
sbb
iret
xchg
imul
xor
mov
orb
insb
addr16
and
dec
insb
xchg
arpl
mov
sti
jo
test
mov
in
daa
xchg
insb
jns,pn
pop
outsl
clc
in
imul
xchg
hlt
xor
mov
repnz
leave
shr
mov
mov
test
sbb
test
insb
push
xchg
jle
ljmp
stos
cwtl
xor
push
test
lret
mov
or
gs
insl
insb
cmp
insb
push
inc
in
mov
fisttpll
shlb
mov
into
cmp
cwtl
insb
sbb
test
adc
iret
pop
jno
loope
mov
insb
insl
sahf
mov
fs
sbb
dec
or
insb
divb
clc
and
int
push
cwtl
cmp
lret
push
xor
cmpsl
fwait
rcl
es
mov
insb
sarb
add
out
insb
ljmp
mov
imul
mov
insb
insl
mov
test
insb
aam
push
leave
movlps
dec
imul
loopne
into
ret
dec
movsb
mov
insb
push
int
fidivl
aam
iret
popa
adc
repz
cli
pop
jle
aad
mov
mov
decl
jnp
vpackssdw
jmp
cmpsb
lea
push
mov
std
fbstp
cmp
push
insb
pop
mov
push
enter
arpl
ret
in
sti
dec
lcall
insb
add
ret
and
es
xchg
jns
sbb
sbb
into
push
test
js
and
outsl
xchg
loopne
arpl
xchg
jns
cmp
pop
mov
mov
aas
lods
adc
mov
dec
in
push
out
mov
insb
repz
daa
je
insb
mov
and
insb
es
sub
cmp
ficomps
insb
pop
and
into
insb
xor
in
mov
mov
dec
jge
sub
push
push
sub
xchg
xor
push
enter
aaa
insb
fdecstp
paddusb
inc
mov
insb
shrb
stos
out
js
imul
push
cwtl
inc
jge
mov
fmulp
and
add
insb
rorl
push
pusha
jns
loopne
loope
iret
clc
ror
mov
or
imul
xchg
push
push
cld
sub
lock
mov
sub
mov
push
addb
es
aam
dec
fcoms
ficoms
insb
shrb
xchg
test
or
int3
stc
inc
sbb
xor
imul
and
popf
insb
nop
icebp
lea
cli
dec
fisubl
lret
push
in
pop
pushf
insb
stc
sbb
rcrb
jbe
insb
bound
imul
xchg
xor
xchg
cwtl
out
pop
ljmp
jnp
fs
mov
insb
mov
adc
or
test
insb
jnp
sub
in
mov
call
loopne
std
inc
ljmp
sub
cld
insb
xchg
fwait
pop
jp
add
insb
movsb
dec
lahf
jne,pn
add
loop
xchg
xor
imulb
insb
dec
sub
outsb
push
js
insb
mov
jg
xor
inc
repz
xchg
or
add
sbb
enter
xor
cli
xchg
ret
sti
imul
jbe
or
cmpsl
and
push
push
cmp
sbb
mov
xchg
adc
movsl
xchg
sti
ss
insb
mov
jecxz
clc
mov
insb
iret
loopne
xor
xchg
mov
out
xchg
xchg
cmp
dec
jnp
dec
je
movsl
insb
add
or
mov
adc
mov
adc
into
xchg
xchg
fwait
insb
repz
mov
je
add
mov
mov
sub
sbb
mov
cld
js
movlhps
mov
sub
push
scas
and
insb
fcmovnbe
sbb
cltd
hlt
icebp
fisubrl
push
push
insb
adcb
and
inc
mov
add
cld
inc
shll
clc
ljmp
jl
inc
push
mov
cmp
imul
fidivl
aas
insb
subl
insb
pusha
lea
ret
lds
in
adc
adc
jge
stc
pushf
mov
sbb
pop
repnz
aas
jp
mov
add
imul
data16
dec
jl
adc
std
and
decl
push
jo
xchg
jg
lea
lods
mov
insb
adc
cmp
mov
mov
pop
movsb
dec
sbb
insb
pop
jae
repnz
pop
insb
fldenv
daa
inc
insb
jo
cld
and
xor
sub
xor
xor
inc
insb
jne
sarb
int
pushf
ljmp
lock
out
pop
jmp
adc
sub
arpl
pop
imul
xchg
cltd
fnstenv
cwtl
push
sbb
sub
insb
into
xchg
mov
push
insb
cmp
sbb
insb
pop
push
fwait
sub
cld
cmp
arpl
jge
cmp
shll
pop
xor
mov
and
lret
insb
mov
hlt
jge
inc
imulb
push
pop
mov
movsb
rcrl
push
movsl
loopne
xchg
dec
loop
les
cs
xchg
dec
lcall
lea
sarb
fs
mov
xorb
cmp
sbb
jae
insb
pop
pop
es
dec
cmp
hlt
insb
popa
mov
pop
jmp
sub
inc
xchg
mov
or
pop
insb
aaa
mov
loop
arpl
xor
rcrb
es
out
ja
inc
push
popf
int
insb
mov
testl
and
adc
lock
ret
jbe
insl
mov
fsts
and
push
nop
idivl
les
cmp
pop
ficomps
jae
sub
movsb
xor
cmp
adc
cwtl
pop
dec
jmp
lods
jno
or
ja
subb
dec
jl
mov
pushf
pop
mov
xchg
jno
and
cmp
adc
repnz
sbb
sbb
xor
insb
scas
push
std
push
sbb
pop
insb
sub
pop
insl
inc
pop
addr16
outsb
in
insb
jb
jmp
ret
xchg
dec
mov
ljmp
pop
cltd
leave
inc
xor
dec
mov
jnp
mov
adc
mov
lods
mov
enter
insb
in
mov
insb
sahf
test
aaa
push
insb
cli
insl
jle
pop
cs
cmc
inc
inc
fmulp
insb
sub
inc
loope
push
dec
push
cmpsl
in
push
popa
xchg
push
xchg
nop
mov
and
out
inc
mov
lods
sbb
xor
fmul
mov
pop
pop
out
push
sub
sbb
out
jbe
mov
notb
insl
cmp
das
lds
push
or
roll
pop
and
inc
arpl
xchg
xchg
mov
sub
adc
jns
imul
jbe
ss
notb
mov
insb
scas
or
jo
push
and
dec
xor
pushf
lods
lss
push
rolb
sub
insl
mov
in
push
pop
aam
cli
mov
int3
mov
fidivs
push
insl
imul
lods
jns
test
das
mov
adc
loopne
mov
dec
movsb
mov
shl
cwtl
sbb
aaa
ds
insb
test
jo
insb
or
insl
in
int
xchg
insb
bound
sbb
mov
push
imul
lock
in
mov
inc
jae
add
jge
dec
pop
jecxz
cwtl
jl
sbb
addr16
inc
rcrb
or
test
jb
add
push
mov
mov
aas
sub
dec
insb
pmaxsw
cld
div
mov
insb
mov
fimuls
dec
cmp
arpl
pop
insb
pop
xchg
repz
add
xchg
jb
cmpsb
mov
lods
mov
test
in
test
insb
orb
movsb
jmp
adc
pop
cli
sbb
xchg
jl
push
out
lods
sub
add
insb
mov
cmc
iret
imul
arpl
fisttpll
jecxz
mov
sub
mov
cmp
notb
data16
ffree
pop
loopne
jecxz
in
imul
ljmp
outsb
cmp
cmp
xchg
insb
lods
mov
jmp
imul
push
jp
cmp
xor
push
ljmp
xchg
into
or
cmp
add
sbb
pop
cltd
pop
fidivl
jg
fxch
fcompl
push
lods
insb
mov
mov
scas
rcll
popf
add
or
mov
cwtl
cmp
insb
fsubrs
xchg
push
test
mov
insb
enter
negb
add
andb
xchg
insb
or
arpl
cmp
jo
insb
sbb
out
arpl
insb
inc
lcall
mov
xor
fsubrl
adc
xchg
ljmp
add
push
pop
mov
in
repnz
sti
imul
pop
orb
cwtl
pop
imul
into
cmp
inc
push
xchg
mov
jne
mov
xor
add
fldt
pop
inc
cmp
xor
pop
adc
push
in
cmp
pushf
jecxz
push
and
xchg
lcall
jo
xchg
int3
cli
insb
popa
stos
cmpsb
jecxz
aas
and
out
xor
mov
gs
dec
adc
std
adc
aas
dec
jg
xchg
inc
mov
lret
imul
movsb
fldcw
jmp
dec
dec
and
addr16
scas
mov
inc
mov
jmp
sub
pop
pop
pop
dec
jnp
lods
xchg
mov
and
insb
cwtl
loopne
cld
gs
ljmp
repnz
mov
mov
insb
inc
mov
idivl
and
subl
sbb
inc
xchg
andl
lods
adc
insl
into
pop
jno
mov
subb
and
rcl
push
stc
xor
mov
inc
push
imul
add
cld
fldt
insb
call
lret
push
cld
xchg
imul
in
cmpsl
jmp
mov
loope
mov
lcall
ret
test
enter
outsb
jae
inc
in
dec
dec
int
lods
or
insb
ljmp
xchg
dec
jne
icebp
xor
mov
add
and
push
jmp
xchg
popa
adc
pushf
inc
push
testl
insb
jmp
nop
xor
out
ja
cs
imul
fs
test
insb
pop
lret
mov
inc
xchg
fisubrl
mov
leave
out
mov
insb
arpl
scas
movsl
rcll
addl
pop
dec
aaa
sub
clc
lods
testl
stos
cmp
lcall
test
push
test
pop
popa
sub
or
orb
pop
mov
add
leave
push
std
or
clc
mov
daa
mov
jp
mov
sbb
fwait
add
daa
popaw
insb
sbb
ljmp
or
frstor
inc
and
orl
cli
leave
ss
insb
enter
sub
mov
push
filds
xor
dec
test
and
xor
outsb
lret
dec
int3
xorl
pop
xor
lods
inc
or
pop
cld
outsl
push
insl
in
cwtl
cmp
ja
dec
andl
xor
test
int3
iret
mov
xor
loopne
js
mov
insb
inc
call
repz
pop
fbld
scas
insb
or
mov
push
inc
xor
lds
lahf
sub
icebp
int3
insb
push
xorb
mov
mov
jae
lods
sub
inc
insb
adc
push
nop
insb
movb
jl
jb
sub
int3
loop
inc
mov
push
gs
testb
xchg
cltd
stos
hlt
jl
mov
insb
jo
daa
pop
xchg
mov
cli
pop
aaa
rcr
shrb
cltd
ficompl
xor
insb
arpl
push
mov
imul
aas
insb
mov
adc
xchg
in
shr
scas
mov
insb
dec
or
sbb
adc
xchg
mov
xlat
test
adc
cld
fmul
push
jno
insb
repz
xchg
cmp
imul
or
insb
sbb
lds
push
stos
pop
jmp
test
aaa
insb
add
jb
subb
in
and
or
or
out
loopne
insb
adc
xchg
pop
xorb
sub
lahf
sbb
push
pop
inc
sbb
mov
sub
xchg
rcl
pop
insb
pusha
fwait
ret
xchg
insl
xor
pop
pop
sub
mov
insb
cmc
mov
xor
sbb
cmpsb
das
or
insb
add
cwtl
xchg
inc
loopne
insb
pop
cmp
ljmp
inc
jnp
repnz
sub
pop
sbbl
gs
jno
xor
mov
adc
jp
insb
fsubrl
les
mull
jnp
xchg
push
sbb
insb
cmpb
xchg
jecxz
mov
mov
push
es
daa
nop
das
outsb
call
mov
pop
les
xchg
fistpl
cltd
insb
pop
pop
add
ret
insb
shr
mov
subb
into
addl
not
arpl
adc
sti
sti
outsl
xor
in
fadds
cmp
mov
stos
mov
je
out
push
daa
lods
jae
xchg
out
pop
adc
mov
xchg
cld
imul
mov
jno
cld
pop
or
push
xchg
sbb
xchg
jae
daa
xor
or
fisubrs
inc
ror
adc
mov
repz
loop
in
fstpt
aas
outsb
stc
xchg
gs
int3
mov
imul
jle
js
and
nop
insb
push
test
xor
stos
int3
push
mov
or
ret
loop
inc
push
cmp
pusha
insb
jnp
push
lcall
mov
gs
xchg
lods
xchg
pop
mov
inc
push
mov
insb
xlat
aas
out
std
in
lods
int3
pop
or
add
jge
shrb
xchg
sub
dec
movups
dec
int3
aam
imul
add
sub
test
das
data16
out
or
stc
jl
pop
insb
cwtl
mov
leave
in
push
dec
insb
icebp
aas
cltd
into
mov
dec
insb
sub
faddl
aad
ja
dec
outsl
mov
mov
jb
pop
in
mov
pop
aas
adc
pushf
negl
inc
sbb
dec
insb
xor
call
cmp
shrb
fisttps
insb
push
sbb
adc
mov
insb
cmp
jno
insb
add
xor
xchg
fiaddl
lock
nop
mul
and
sub
insb
jbe
mov
xchg
inc
scas
mov
clc
insb
sahf
ds
insb
xchg
xchg
push
or
fld
insb
adc
inc
sub
adc
jge
loopne
dec
push
add
pop
insb
loopne
adc
mov
dec
fnstcw
and
out
jl
xor
scas
insb
into
dec
fisttps
sti
sbb
xchg
int3
popf
insb
inc
dec
push
hlt
or
das
imul
sti
fbstp
mov
jg
pop
loopne
lods
mov
aas
push
subb
push
out
pushf
imul
pop
cmp
das
insb
mov
fiaddl
fistpll
sub
insb
lods
int3
test
aaa
in
imul
fstpt
outsl
inc
adc
inc
push
insl
mov
cmp
insb
rorl
dec
mov
jecxz
mov
pop
mov
sbb
jl
mov
mov
mov
mov
hlt
mov
pop
popf
pusha
insb
xor
jbe
insb
sbb
leave
mov
and
insb
nop
add
jo
dec
add
jg
pop
pop
lcall
movsb
jno
addr16
data16
xchg
mov
imulb
or
pop
pop
or
pop
dec
adc
outsb
dec
mov
pushl
iret
push
sub
lods
fsubrs
imul
mov
insb
sbb
cmpsl
test
insb
mov
pop
and
test
out
insb
pop
push
iret
dec
pop
ja
fwait
popa
push
inc
hlt
in
outsb
xchg
clc
sti
shl
push
jnp
and
pop
cmp
jl
xor
insb
push
dec
sbb
je
inc
imul
or
add
insb
js
cmp
insb
mov
scas
jle
cmp
pop
insb
mov
inc
lea
mov
push
rorb
pop
jle
xor
data16
in
dec
mov
xchg
pushf
insb
or
and
pop
fdivrs
comiss
mov
xor
and
lds
xor
adc
inc
pushf
mov
mov
pop
imul
sbb
pushf
je
imul
stos
in
mov
rolb
jge
add
dec
mov
shlb
sub
ret
xchg
fisubrl
pop
sub
sub
sub
jns
imul
pop
mov
test
pop
or
dec
jge
subb
insb
mov
ret
lcall
out
lret
cmpsb
lods
dec
push
or
sub
adc
jp
js
insb
jns
adc
dec
jl
ds
cmp
int
pop
or
pop
xchg
xchg
and
sub
cmp
arpl
push
lods
in
pushf
mov
mov
jecxz
xchg
fnsave
pop
movsl
sbb
insb
cmc
inc
add
insb
movsb
fistps
cmovge
push
repz
gs
adc
mov
insb
in
rcl
xchg
insb
ljmp
or
pop
fcompl
lahf
rorl
enter
adc
movl
pop
test
jnp
mov
sub
into
push
ljmp
fdivrl
std
test
aam
jae
arpl
mov
insb
jns
add
lods
dec
sub
movsl
je
insb
xchg
jmp
inc
ficomps
pop
aam
ret
call
dec
xor
fsubs
mov
jle
add
leave
xchg
dec
pop
sti
insb
adc
mov
cmpsb
imul
dec
pmuludq
in
fcmovne
ss
pushf
std
jecxz
insb
popf
lea
dec
push
mov
insb
inc
subb
shl
sbb
stos
rolb
nop
pop
hlt
outsb
insb
push
aam
pop
push
je
jp
fidivl
cmp
out
xchg
insb
ljmp
inc
insb
fcomi
sbbl
or
pop
mov
sbb
leave
fadd
xor
cmp
jb
and
jl
jp
out
push
enter
mov
sbb
imul
push
mov
shll
jecxz
sbb
push
jns
aam
sbb
fldl
mov
fisubrl
je
ret
decl
pop
insb
outsb
nop
lret
mov
sbb
insb
arpl
cmpsb
mov
inc
jne
mov
xchg
cli
mov
call
cmp
insb
sbb
out
int3
dec
xor
addr16
cmp
jp
in
stos
int
notb
add
fnstcw
popf
sbb
in
lods
loop
or
repnz
or
insl
je
xchg
insb
mov
lock
ljmp
sub
jl
lret
mov
lahf
mov
pop
out
and
popa
push
outsl
insb
dec
dec
out
stos
jmp
mov
cmpsl
and
loope
addr16
mov
rcrl
pop
xchg
dec
mov
adc
ret
stos
insb
add
jo
mov
push
outsb
scas
cli
fxch
adc
jo
in
arpl
repnz
mov
clc
insb
pusha
addr16
mov
pop
jmp
imul
add
stos
jnp
in
push
mov
inc
and
or
aam
lods
clc
xor
push
inc
mov
dec
aaa
int3
imul
imul
insl
or
shrl
lret
push
fisubrs
mov
adc
in
xchg
in
int3
add
push
inc
push
xor
push
jecxz
sbb
mov
mov
mov
cmp
sbb
in
dec
mov
mov
dec
loopne
push
xor
jmp
pop
shrb
mov
xlat
test
in
xor
push
insl
dec
add
sub
cmp
fwait
push
mov
loope
bound
stos
xor
cmp
lahf
pop
cli
lahf
ja
xchg
fisubrl
lcall
mov
roll
lods
adc
addr16
push
push
pop
jecxz
and
in
int
mov
movsl
jb
add
repnz
mov
lds
pushf
jae
mov
stc
mov
shr
lea
inc
imul
or
cmp
cmp
inc
lods
pop
and
adc
jle
insb
xchg
out
ds
insb
mov
pop
enter
sbb
mov
out
lods
cwtl
imul
dec
cmpl
sub
hlt
cmpsl
out
mov
or
stos
push
adc
nop
sub
addr16
mov
lret
cli
mov
mov
push
jmp
cmc
xor
es
push
lret
mov
cmp
imull
push
call
insb
mov
daa
aaa
cmp
pop
lds
in
ret
jns
mov
push
insb
mov
add
fldlg2
ret
lret
xchg
cmp
divl
insb
adc
add
pop
mov
xor
insb
sbb
and
cmpsb
mov
popa
imulb
std
fisttpll
jae
imul
test
insb
dec
pop
sarb
sahf
addr16
dec
sbb
addb
outsl
insb
iret
scas
into
adc
shll
xchg
daa
lret
insb
xlat
xchg
test
lcall
mov
xchg
add
mov
sub
sub
movsb
pusha
fsubrs
xor
cs
aaa
insb
xor
pushf
pop
mov
sub
jp
cmp
dec
jecxz
xchg
ss
cmc
test
shrb
adc
jno
shll
dec
in
pop
jb
sti
fstpl
pop
dec
insb
jbe
scas
aaa
mov
insb
adc
or
insb
popf
mov
mov
mov
in
push
jmp
push
cmp
shrb
repz
cmpsl
cmp
inc
lods
xchg
xchg
pop
outsl
mov
and
and
leave
cmp
fcoml
and
jbe
shrl
xchg
mov
adc
xor
adc
dec
ja
jmp
pop
sbb
call
dec
push
add
imull
add
insb
jno
fnstenv
dec
xchg
sub
xor
addr16
jb
shrl
or
or
xchg
test
xchg
lea
cwtl
pop
push
or
or
iret
arpl
jg
in
loope
sub
push
push
in
fwait
inc
sbb
insb
daa
lods
mov
xchg
sub
mov
jo
iret
imul
sbb
cs
nop
and
imul
cmp
les
mov
insb
outsl
rclb
mov
cld
insb
cmovs
and
scas
push
test
pop
mov
inc
dec
or
inc
lock
clc
movsb
aad
dec
fisttpl
test
pop
inc
add
sahf
adc
movsb
pop
push
imul
or
mov
fistps
in
ret
jecxz
xchg
in
mov
inc
dec
les
in
push
cmp
insb
mov
unpcklps
out
lock
mov
insb
jmp
cmpsb
aaa
sti
insb
out
mov
call
stos
xchg
les
xor
lods
test
pop
popf
arpl
push
insb
push
cmpsl
roll
in
pop
rorl
out
lret
mov
sbb
push
add
jge
xchg
bound
in
mov
mov
jns
push
mov
out
mov
push
sub
jg
xor
push
xchg
test
cmc
adc
push
add
in
pushf
rolb
sbb
dec
mov
ja
imul
adc
iret
insb
in
push
adc
jl
outsb
pop
push
push
fistpl
cmp
pop
mov
daa
sbb
ja
enter
cmp
push
insb
adcl
scas
imul
insb
gs
insb
shlb
mov
insb
pop
mov
xor
in
insb
cmp
repz
jge
in
mov
mov
xchg
push
movsl
xorl
lahf
mov
xchg
hlt
and
fmul
mov
sbb
sbbb
fwait
or
xchg
pop
xor
jne
movsb
out
lock
dec
cmpsl
push
inc
jnp
stos
dec
jl
cmp
psrlw
mov
scas
add
sub
popa
sub
dec
jo
movl
into
test
test
xchg
jmp
dec
mov
clc
test
xor
adc
push
and
push
andl
sahf
fidivl
repz
push
xchg
int
pop
xchg
jbe
push
xor
insb
cltd
js
dec
sub
mov
dec
jo
out
sub
cmp
jmp
cmp
addr16
shlb
cmc
and
out
gs
cmp
sbb
cmpsb
enter
jmp
push
in
fisubrs
movsb
sbb
jl
mov
and
sbb
adc
dec
adcl
jne
fs
test
movsl
rep
jb
insb
dec
and
push
cwtl
sub
xor
les
inc
pop
in
imul
push
leave
cmp
mov
pop
es
subl
sub
fptan
mov
mov
dec
je
bound
lar
sub
insb
out
push
mov
stos
insb
scas
pop
sarl
popa
ds
in
jmp
xor
outsb
inc
fisubrl
insl
sub
test
hlt
insb
pop
das
scas
sub
jno
mov
jle
sbb
xchg
sbb
fwait
gs
insb
and
insb
mov
aaa
push
das
rcrl
push
push
add
loope
fwait
mov
cmpb
orb
push
xor
push
lods
add
addr16
push
mov
insb
daa
out
fisubrs
out
mov
jne
int
aam
insb
sbb
or
popf
pushf
test
push
push
mov
out
xorl
inc
dec
xor
sahf
sti
mov
adc
insb
push
push
push
inc
xchg
xchg
xor
pop
mov
jno
fildl
fwait
xchg
add
xor
call
test
inc
insb
dec
popa
sti
adc
dec
mov
push
sub
fists
fcoms
mov
in
aas
gs
test
mov
insb
loope
fnstenv
pop
leave
fwait
insb
insl
xchg
mov
fistpll
inc
data16
insb
push
sbb
popf
insb
xchg
mov
cmp
das
inc
mov
out
insb
cmp
loopne
inc
xchg
inc
cmpsb
test
in
je
scas
xchg
scas
insb
scas
es
fisubrl
add
cmc
dec
sbb
jle
insb
sub
mov
fcomp
push
dec
repnz
add
fwait
insb
into
pop
testb
repnz
shl
dec
jle
xchg
stos
sbb
out
popf
and
addr16
add
fdiv
mov
jmp
lea
mov
fisubrs
jnp
rorl
insb
inc
ret
mov
mov
push
mov
outsb
dec
mov
pop
jno
pop
and
insb
jle
and
and
mov
jp
mov
xlat
imul
xchg
test
aaa
hlt
and
or
insb
mov
dec
lret
in
cmp
push
mov
pop
iret
loop
jns
scas
mov
cmp
cmp
in
jo
add
dec
or
shlb
int
jmp
aad
insb
jnp
jle
sub
in
insb
pop
mov
push
fnstenv
adc
pushf
test
lret
push
mov
mov
hlt
jns
xchg
xor
subb
outsl
popa
dec
insb
rcrl
sub
dec
inc
aas
in
dec
ret
insb
jl
push
adc
adc
and
adc
or
inc
xor
pop
dec
inc
insb
add
xchg
aad
pushf
cli
in
jno
or
sub
add
loop
insb
js
jo
mov
insb
xor
push
out
sub
shrl
inc
ja
xor
inc
pop
sub
jb
adc
insb
sub
aam
insb
repnz
clc
cmp
imul
ljmp
andb
and
push
insb
rcrl
inc
pop
mov
insb
and
imul
negb
lea
insb
stos
and
mov
cmp
cld
dec
add
add
imul
jne
je
cmc
dec
mov
test
mov
movsb
jmp
dec
push
xor
mov
adc
or
mov
out
clc
add
dec
lret
in
mov
mov
and
insl
push
lds
pusha
or
xchg
sbb
pop
test
dec
push
add
in
push
pop
mov
idivl
push
xchg
xchg
xchg
std
sub
int3
pop
cmp
xchg
or
xchg
mov
rcrb
imul
xor
dec
push
ja
sub
add
and
leave
dec
mov
in
imul
sbb
mov
adc
pop
and
pop
popa
rolb
adc
insb
out
sbb
or
aad
stc
imul
and
iret
push
imul
insb
fcmovu
mov
push
pop
sub
stos
dec
in
xchg
movsb
lret
mov
mov
aad
mov
inc
ss
xor
push
imul
insb
das
xchg
mov
rep
lret
sbbb
mov
es
insb
mov
arpl
insb
inc
lret
mov
cwtl
insb
ds
mov
pop
pushf
xor
in
mov
adc
popf
jl
add
lods
jl
cli
or
shlb
mov
lock
xchg
inc
in
xor
pop
and
sub
rorl
fisubl
lahf
popf
xor
sbb
insb
jmp
ja
arpl
les
jbe
adc
insl
cmp
inc
add
push
mov
lods
add
fmul
mov
xor
add
and
test
stos
mov
jg
in
mov
jecxz
into
dec
jno
mov
add
jnp
lcall
adc
dec
lods
shlb
push
jmp
cmp
hlt
stos
imul
dec
movb
fisubrs
inc
push
sub
rclb
add
test
adcb
dec
inc
xchg
pop
insb
xchg
das
icebp
imul
pop
xor
fs
pop
push
xor
cmp
insb
mulb
popf
int
lahf
fstl
xchg
push
cmpsl
cld
mov
pop
push
push
lods
dec
icebp
addr16
imul
mov
or
mov
imul
or
repz
pop
cld
ljmpw
cmp
lods
pop
lea
in
enter
cs
xchg
ret
cwtl
bound
insb
push
jmp
jno
dec
lods
xor
xchg
in
test
dec
mov
and
cmpsb
notl
and
push
mov
jb
and
out
sahf
aas
fprem1
push
lods
out
sub
ret
lret
adc
sarb
mov
nop
imul
jle
scas
mov
adc
out
lea
notl
add
push
cmp
pop
imul
jo
or
push
insb
mov
xchg
cltd
push
sub
loop
adcb
dec
pop
in
out
mov
out
rolb
adc
mov
ja
and
cmpsb
ljmp
cmp
popf
movsb
and
js
imul
xor
cmp
imul
jne
outsl
loope
ss
push
adc
adc
fldt
inc
jp
dec
cltd
add
adc
jnp
addl
cmpb
out
xor
xlat
testl
adc
mov
hlt
cmp
adc
lods
inc
pop
adc
into
push
and
repz
scas
xor
loopne
jle
and
jp
mov
push
xor
out
stc
jg
pop
xchg
sub
sarl
dec
sub
nop
cmp
xchg
insb
pop
std
pop
sub
call
jl
push
or
insb
ficoms
mov
insb
mov
ss
hlt
dec
push
cs
lea
fadds
inc
arpl
aas
sbb
cwtl
repz
or
add
insb
jmp
or
inc
shl
jb
mov
imul
inc
fnstsw
insb
in
out
mov
testl
enter
fisubs
mov
mov
js
shrl
xchg
jl
lret
lds
lods
in
test
jno
jmp
lods
imul
xor
insb
flds
adc
fisubs
sbb
scas
in
outsb
arpl
mov
add
insb
add
push
cmp
pop
push
dec
leave
pop
pop
lods
sqrtps
dec
gs
xor
out
mov
imul
adc
fsubrs
sbb
imul
mov
xchg
repnz
fistpll
inc
insb
push
icebp
orb
add
or
addr16
repz
lahf
in
pop
xlat
pop
lcall
jns
sbb
ja
shrb
je
or
pop
cltd
gs
pop
fsubp
popfw
mov
dec
outsb
sbb
or
sbb
call
jg
dec
out
jno
cmp
adc
imull
sub
pop
test
and
or
jle
push
insb
xor
or
imul
xchg
mov
pop
jecxz
jno
imul
fdivl
mov
pop
push
add
lds
jb
pop
aas
insb
xor
mov
adc
test
insb
mov
mov
mov
dec
aam
jb
insb
loope
push
mov
mov
andb
jge
pushf
or
pop
cld
jo
cwtl
insb
enter
hlt
notl
push
jl
in
adc
aas
add
imul
insb
das
addr16
sub
pop
in
fnstenv
cs
insb
dec
ss
rcrl
xchg
imull
sar
xor
lcall
sarb
pop
dec
dec
aaa
cwtl
xchg
insb
shrb
out
test
xchg
insb
ljmp
mov
push
jge
in
aad
sbb
insb
aad
jp
jle
inc
jecxz
add
add
pop
or
xor
adc
aad
xorb
es
mov
repnz
les
add
cltd
insb
notl
arpl
pushf
jp
shlb
or
inc
movsl
sbb
js
or
insb
lcall
sti
mov
pusha
push
aam
pop
cld
ss
xor
bound
cmpsl
and
outsl
lods
push
jne
push
outsb
insl
sbb
imul
pop
pop
add
push
data16
into
inc
push
inc
jb
jo
mov
push
test
cmc
sbb
dec
and
outsl
inc
or
inc
insb
pop
loopne
adc
jmp
repnz
cmpl
cmpsl
jo
mov
mov
insb
sub
shlb
sbb
push
or
movsb
das
in
and
mov
insb
nop
in
std
mov
stos
xor
insb
push
cs
cmpsb
xor
insb
out
outsb
mov
xchg
aad
dec
imul
leave
insb
push
loope
ret
icebp
aaa
insb
lock
cmp
and
stc
sbb
sbb
dec
or
call
mov
add
mov
out
dec
push
sub
gs
jbe
cmp
mov
insb
leave
sbb
js
inc
insb
cltd
cs
das
data16
inc
add
and
cltd
insb
bound
mov
adc
js
insb
lcall
popf
insb
mov
pop
mov
pop
rcl
pop
lods
ret
mov
adc
nop
dec
and
adc
insb
push
aad
cwtl
sar
cs
xchg
pop
movhlps
daa
hlt
and
std
or
call
lock
aam
mov
jl
mov
pop
pusha
gs
cmp
imul
inc
jmp
sub
pop
insb
je
jl
xchg
ficoml
and
sbb
cmp
in
push
and
sub
insb
adc
negb
pop
insb
loope
scas
cmp
repnz
std
lret
movsb
adc
and
leave
fsubrl
sbb
mov
jae
sbb
cmp
dec
outsl
push
insb
adc
fstpt
hlt
mov
popa
mov
insb
xor
nop
lods
mov
xor
jo
lret
jl
orb
sbb
dec
inc
les
or
sub
push
jo
sbb
push
insb
inc
adc
dec
adcb
neg
mov
int
mov
out
xor
leave
call
and
gs
mov
test
sbb
sbb
lret
imul
inc
dec
or
mov
insb
cli
adc
dec
push
dec
jne
out
fsubrs
pop
xlat
sahf
in
imul
lds
pop
jg
xor
dec
add
or
ret
push
or
insb
jns
sbb
andl
data16
sahf
pop
sbb
mov
test
lret
mov
stos
insb
mov
pop
jne
dec
sub
insb
jle
sub
loopne
pusha
mov
jmp
int3
imul
inc
sbb
shl
movsl
insb
ficompl
subl
cmc
scas
insb
nop
mov
sbb
sbb
mov
inc
mov
loope
cmp
rolb
xor
insb
adc
mov
add
sarb
lods
xor
insb
xchg
out
inc
aaa
jle
fbld
mov
mov
adc
insb
push
into
cli
add
leave
inc
dec
sub
in
inc
cmovbe
insb
fmull
je
jne
adc
andb
mov
and
out
insb
mov
push
loop
rcrl
cmc
sti
clc
mov
inc
mov
js
jo
sbb
push
push
nop
sahf
fildll
ja
enter
insb
leave
mov
mov
jns
insb
pop
mov
mov
sbb
fwait
or
fsubrl
sub
jecxz
in
subl
in
sti
xlat
xchg
and
push
insb
insl
fldt
pop
shl
adc
test
jl
pop
sbb
mov
xor
push
cmp
cmp
mov
cmpsb
iret
xchg
ret
inc
insb
pop
cmp
xor
data16
mov
sub
and
adc
jnp
cltd
mov
mov
imul
pop
mov
jnp
xor
mov
adc
mov
mov
pop
cmp
add
push
mov
mov
mov
mov
imulb
xchg
fisubl
ds
adc
pop
insb
iret
fisubrl
gs
sbb
filds
int3
lret
sub
gs
lea
adc
aaa
loope
mov
enter
mov
cltd
lock
insl
mov
push
addr16
pop
out
cmp
adc
xor
jg
iret
loopne
cwtl
test
inc
push
arpl
jae
push
js
popa
insb
inc
pop
mov
add
repz
jbe
imul
jmp
js
imulb
xor
aas
stos
jb
jl
insb
dec
sub
cmp
ret
jmp
out
leave
jp
fistpll
les
fwait
or
in
sbbl
insb
jne
xchg
inc
push
lds
subl
xor
lret
insb
iret
cwtl
jns
add
movsl
cmp
popl
jmp
aaa
gs
jnp
xlat
or
aad
push
add
repz
xchg
in
nop
dec
mov
pop
xor
lea
loopne
outsb
js
add
iret
jecxz
les
lds
dec
inc
repnz
mov
and
jae
pop
sar
add
into
rorl
adc
in
aaa
inc
push
sub
dec
addl
push
insb
push
pop
dec
xchg
sub
repz
xchg
mov
jg
xor
inc
jbe
inc
sti
movhps
insb
xor
aam
lcall
jmp
test
jb
and
inc
insb
in
jns
shll
jno
cltd
fldt
int3
std
cmp
test
xchg
insb
adc
push
insb
xchg
xlat
add
mov
int
sub
and
add
loopne
fildll
andb
xchg
mov
push
insb
inc
dec
mov
daa
in
dec
addr16
test
dec
jp
insb
jge
cmp
xchg
adc
xor
fstl
mov
sbb
push
in
out
push
fcomps
sbb
scas
aad
inc
xchg
imul
push
dec
out
adc
mov
nop
scas
pop
dec
insl
pop
xchg
in
fimull
jo
out
imul
js
lock
pop
sbb
scas
fs
insb
xor
and
je
sub
jb
cmpsl
adc
pop
jo
or
aam
xor
test
add
nop
cmp
lock
stc
sbb
rcrb
mov
dec
mov
fwait
mov
xor
in
jle
jns
pop
inc
test
outsl
pop
sub
repz
gs
jne
jle
sbb
xor
lock
scas
outsb
cwtl
push
xchg
mov
pop
decl
insb
fistl
adc
insb
lret
mov
dec
mov
insb
shr
hlt
lods
dec
dec
jns
insb
pop
rep
cmc
adc
jge
insb
pushf
or
mov
insb
sbb
scas
pop
mov
fwait
pop
pop
push
fisttpll
stos
or
insb
into
mov
push
lcall
adc
insb
mov
repnz
test
packssdw
mov
loopne
dec
mov
mov
insb
in
jg
loop
jge
insb
push
int3
push
call
inc
daa
movsb
xchg
insb
mov
mov
and
add
ljmp
insb
pop
lea
dec
insb
jge
xadd
push
jp
in
bound
push
inc
cmp
insb
repnz
push
jb
ds
push
bound
and
adc
movsb
dec
insl
js
push
insb
sahf
mov
es
lods
addb
js
dec
icebp
outsl
lcall
es
scas
arpl
jnp
jp
cmp
mov
jne
inc
mov
andb
mov
scas
fnstsw
dec
sti
ret
cmp
dec
insb
pop
je
fistpll
ds
test
mov
adcb
shrb
sahf
mov
stos
arpl
addr16
repnz
lods
jmp
icebp
ss
fldcw
inc
and
sbbb
ret
in
sub
rorl
lret
ffreep
aad
push
xor
out
xor
shrb
mov
insb
adc
lds
imul
pop
sub
test
insb
sub
xorb
inc
push
xchg
aad
gs
cltd
mov
jb
cmc
add
xor
insb
lock
mov
jns
mov
popf
addr16
xor
outsl
ja
xchg
scas
fucomip
iret
out
lock
in
mov
adc
mov
jnp
int
imul
sub
insb
push
ret
out
aam
mov
popa
in
push
dec
fidivs
sbb
mov
arpl
pop
daa
in
xor
xchg
xchg
int
xchg
in
sbb
fcmovnb
aaa
inc
pop
fistpll
xlat
jnp
jb
and
push
es
fdivl
sub
mov
pusha
cmc
out
inc
shrb
shll
xchg
fstpt
sbb
cmpsl
orl
insl
sub
imul
loope
loopne
bound
add
push
out
adc
inc
mov
jmp
iret
imul
jnp
push
test
add
add
aam
cmp
sub
sub
lret
rcll
fucom
lahf
push
ds
mov
test
pop
sbb
jg
or
sub
cmp
xor
add
xchg
scas
jns
lret
xor
nop
lret
mov
xchg
insb
jae
adc
stos
inc
mov
add
arpl
insb
sub
xor
repnz
sub
mov
pop
mov
in
std
mov
inc
insb
scas
out
mov
dec
pop
hlt
cmp
xchg
pop
ss
inc
call
insb
pop
xchg
push
testb
push
xchg
in
sarl
ds
testb
lcall
fsubrl
sbb
cmp
out
mov
push
iret
push
lea
popf
test
aaa
ja
jl
insb
fisubl
je
mov
inc
sahf
popa
shlb
pop
out
cmc
pop
xchg
push
pop
fisttpll
insb
addl
cmp
jmp
lds
lods
cld
add
dec
jecxz
inc
fistpl
pop
pop
push
xchg
lea
imul
mov
sub
pushf
mov
insb
sbb
hlt
in
sahf
adc
insb
xchg
jg
cltd
fs
insb
xchg
jno
add
pop
sbb
in
ret
fidivrs
and
insb
xlat
xchg
popf
lods
test
loope
arpl
pop
cmp
ret
and
jnp
xor
adc
adcl
inc
push
sub
scas
gs
mov
stos
cmp
cmp
inc
insb
sub
jns
das
insb
jecxz
fdivl
stc
and
std
xchg
scas
mov
sahf
or
stos
rdpmc
shl
pop
insb
sub
push
mov
ja
mov
aam
stc
mov
add
mov
pop
gs
mov
in
cmp
cmp
mov
fcmovu
mov
shll
fs
rol
jecxz
cmc
adc
jmp
repz
jl
xor
fldcw
in
mov
jle
mov
dec
mov
mov
push
jae
into
lret
daa
cwtl
xor
gs
lock
dec
lods
imul
mov
out
mov
dec
stos
inc
fstl
shll
fistps
insb
push
and
sahf
push
cli
outsb
insb
repnz
xor
mov
xorl
ret
mov
mov
mov
outsl
insb
jge
pop
es
and
in
leave
xor
cmp
push
aam
imulb
mov
nop
lcall
clc
aaa
hlt
dec
stos
or
insb
mov
fsubrs
gs
sub
mov
icebp
xor
out
test
and
sub
insb
dec
xchg
jle
clc
xchg
insb
filds
bound
sub
gs
adc
fsubl
insb
mov
dec
dec
xchg
mov
fwait
movsl
shrb
dec
push
repz
icebp
hlt
insb
int
mov
fistpl
repz
push
cmc
fdivrl
insb
inc
inc
fwait
js
xor
push
faddl
loopne
xor
mov
mov
xor
push
xor
out
and
push
pop
pusha
and
lods
pop
mov
insb
jae
sub
dec
mov
sub
insb
adc
add
aad
push
insb
in
icebp
movsl
fs
dec
repnz
mov
cmpsl
or
cwtl
push
mov
psubd
mov
sbb
in
cmp
xor
shrl
xor
inc
imul
shrb
jbe
arpl
and
in
or
xor
dec
loopne
dec
jnp
outsl
lods
cld
xlat
pop
fisttpll
pushf
insl
sub
test
xchg
arpl
test
cmc
imul
add
jmp
mov
std
test
adc
push
pushf
repnz
pop
mov
or
stc
inc
push
insb
push
shll
shrb
jnp
xchg
mov
jge
sarl
ret
jno
push
dec
add
xor
hlt
insb
je
lcall
insl
xor
scas
addr16
dec
lea
jnp
push
sub
mov
pop
mov
dec
mov
mov
jae
inc
popa
xor
dec
repnz
fldt
adc
inc
cmpsb
xor
xor
or
jbe
movsl
testb
lret
jp
test
xchg
popf
insb
xchg
inc
mov
xchg
call
jne
pop
inc
scas
xor
lods
jmp
mov
jl
lret
testb
out
xchg
jnp
lea
jecxz
in
dec
adcb
mov
jb
insb
adc
addr16
cmp
scas
out
fcoms
fnstcw
dec
insl
xor
mov
gs
add
ljmp
mov
aam
pop
pop
addr16
pop
pop
sub
test
shlb
lds
dec
insb
xchg
and
daa
or
mov
mov
inc
xorb
test
inc
xchg
mov
setbe
cli
cmp
sarb
insb
repz
mov
pop
into
insb
adcl
insb
ja
dec
pop
ss
push
insb
mov
jae
xor
stos
mov
les
insb
js
dec
adc
xor
insb
pop
outsb
fwait
andb
ret
inc
int3
je
stc
sub
dec
mov
insb
xchg
push
and
sub
push
fbld
dec
insb
ficompl
rclb
sbb
xchg
sbb
insl
shrb
jecxz
ss
or
insb
adc
lea
notb
lods
iret
xchg
rorl
jo
mov
repnz
fisubrl
mov
ret
pop
das
and
fbstp
pcmpeqd
and
jmp
jg
mov
jge
gs
insb
pop
cmp
test
push
inc
add
cmp
loop
insb
jno
dec
cs
ficoms
negl
ret
enter
dec
insl
nop
ds
or
cmp
sub
inc
insb
addr16
aam
movsl
xchg
cmp
fsubrl
cli
mov
pop
fists
sub
sbb
cmp
xor
insb
divb
fidivl
insb
push
out
cmp
jns
push
popa
in
adc
sub
inc
ret
mov
sub
ja
xor
mov
and
std
mov
loop
mov
sbb
icebp
mov
jae
add
mov
frstor
pop
mov
aad
xchg
dec
pop
pop
lret
cmp
insb
scas
inc
cmp
insb
std
fists
fdivs
insb
push
push
das
cwtl
xchg
add
mov
insb
sbb
or
push
or
sub
insb
dec
xor
jecxz
pop
in
cmc
add
mov
ss
imul
xor
jg
imul
pop
push
pop
rcll
in
xchg
scas
mov
lret
insb
inc
out
ljmp
imul
fsubrl
add
cwtl
rolb
clc
fwait
mov
jp
js
cmp
or
jg
xchg
insb
in
mov
pop
mov
cmpsl
rcll
sbb
dec
mov
push
ja
xchg
scas
mov
loopne
pop
sbb
adc
mov
int3
inc
dec
pop
push
dec
adc
enter
sub
addr16
sbb
arpl
dec
insb
loop
out
aad
pop
push
jg
dec
insb
xor
sbbb
cli
jne
sub
jg
ja
shrl
shrb
mov
scas
xchg
and
fwait
mov
mov
lods
jp
clc
hlt
insb
stos
and
push
sub
jecxz
stos
insb
inc
seto
arpl
test
add
ja
jge
mov
sbb
and
test
in
adc
jmp
mov
sbb
iret
dec
stos
xor
pop
addl
or
call
jg
cmp
push
popa
popf
xchg
ss
lcall
mov
addr16
xchg
and
push
jnp
xchg
adc
push
pop
jmp
adc
inc
dec
out
mov
bound
xor
div
scas
inc
cmc
gs
cmp
mov
jo
dec
test
mov
mov
jb
dec
imul
jmp
push
leave
mov
cmc
pop
inc
cmp
in
jmp
arpl
inc
mov
mov
jbe
out
add
rep
jle
jae
and
lods
loopne
andl
mov
xor
in
sbb
push
insb
hlt
adc
adc
in
imul
popf
mov
inc
sub
sar
cmp
xor
rep
enter
outsb
gs
push
inc
dec
mov
das
mov
insb
cmp
add
adc
and
test
loopne
fcompl
insb
pop
and
mov
insb
out
inc
arpl
insb
out
pop
xchg
out
scas
mov
insb
or
jmp
jp
mov
mov
sub
push
pop
sbb
mov
inc
cltd
pop
js
sub
inc
in
test
insb
jge
pop
inc
push
add
pop
mov
jle
or
int
sbb
insb
and
fiaddl
inc
and
gs
pop
inc
lods
push
cmp
into
and
je
mov
jne
mov
pop
sbb
and
mov
daa
loopne
xor
pop
in
add
jmp
insb
or
sub
xor
imul
test
add
shrl
cmp
mov
cli
lods
mov
dec
in
xchg
insb
push
sub
fdiv
insb
cmp
fs
cmc
pop
rep
out
inc
aas
jne
and
lock
aaa
mov
inc
in
orl
ret
inc
xchg
jo
aam
wrmsr
push
adc
and
imul
cmp
int3
lret
dec
push
dec
or
push
mov
into
cmp
icebp
or
push
mov
dec
adc
out
imul
xlat
mov
enter
add
aas
sbb
out
mov
inc
ljmp
mov
dec
pop
mov
sub
sub
jge
test
jl
jle
es
imul
je
push
and
jno
cs
out
pop
mov
ds
insb
jg
pop
adc
aas
lods
xlat
insb
mov
adc
imul
mov
cwtl
repz
insb
leave
jle
mov
les
add
lret
aad
scas
push
xchg
test
in
cmp
lahf
dec
mov
cmpsb
out
in
sub
in
inc
insb
pop
lds
mov
gs
mov
or
faddl
insb
push
mov
outsb
lret
test
and
jb
or
cld
mov
mov
lahf
repnz
insb
fidivs
cmpsb
scas
ljmp
int
loopne
je
lea
jbe
stos
lods
lret
call
stc
dec
adc
xchg
in
mull
insb
cmp
sbb
std
lret
lret
xchg
pop
iret
out
add
mov
xor
popa
dec
out
lahf
jl
insb
mov
push
cwtl
in
mov
into
jmp
insb
sbb
hlt
fstpl
test
push
in
mov
jb
hlt
cmp
mov
repnz
sub
dec
loopne
imul
int
pop
imul
push
and
dec
les
sub
push
pop
lret
lods
lods
add
imul
mov
mov
jbe
fadd
jno
insb
daa
loop
mov
cwtl
aas
xlat
test
push
aaa
movsl
lcall
push
and
movsl
pop
xchg
testb
loope
in
jo
pop
add
inc
insb
out
inc
pusha
or
aas
in
clc
xchg
insb
push
aam
push
adc
push
hlt
lahf
and
imul
insb
xor
fs
inc
outsl
dec
push
or
sub
in
adc
ljmp
xor
sbb
addr16
dec
dec
ja
and
into
arpl
loope
in
pop
mov
insb
sbb
sbb
rdtsc
repz
fsubrp
stc
cmp
insb
jno
mov
xor
imul
insb
and
outsb
and
add
pop
xor
stos
ret
sub
mov
dec
pop
add
inc
cmp
jp
inc
xchg
je
imul
dec
xchg
mov
cs
xchg
dec
or
bound
push
mov
ficoms
sub
dec
pop
pop
rcrb
insb
jecxz
dec
fs
inc
jg
fldt
push
add
enter
mov
jo
gs
push
jp
pop
faddl
addl
cmp
pop
push
push
cli
insb
mov
nop
insl
cmp
mov
imul
adc
add
insb
jb
popa
ljmp
ficomps
adc
cvtps2pd
enter
cmp
adc
hlt
push
imul
dec
in
push
jmp
mov
cmp
or
xchg
xor
in
add
mov
push
sahf
imul
rolb
or
xor
pushf
or
fs
sub
lds
mov
add
adc
mov
loope
sub
inc
xor
insb
es
or
shll
nop
fwait
mov
dec
dec
inc
iret
ljmp
imul
shll
sti
mov
jl
or
repnz
push
faddl
insb
push
inc
push
out
pushf
ss
ljmp
jge
or
mov
jo
cmp
mov
imul
subl
aad
sbb
jno
insb
imul
add
call
pop
out
inc
mov
xchg
insb
dec
pop
mov
push
jecxz
insb
lret
sbbb
mov
add
or
insb
out
push
jne
dec
dec
fcoml
cs
in
insb
add
pop
cmc
out
mov
fbld
push
pop
std
mov
orb
fldt
test
fstps
mov
push
shrl
loop
lea
xchg
xor
xchg
mov
pop
inc
loopne
loop
je
dec
pop
jne
add
shrb
das
sub
insl
out
and
pop
push
shlb
test
daa
jno
xor
insl
das
xchg
enter
pop
insb
cld
test
xor
dec
mov
pop
lods
jecxz
rorb
aaa
fmulp
sub
dec
dec
mov
lods
out
pop
or
pop
mov
punpckhdq
and
popa
cmp
fnstcw
jbe
scas
loope
push
xor
fldl
rorl
cmp
xchg
insb
sbb
xchg
jno
sub
jl
jbe
insl
cmp
mov
pop
and
xorb
sbb
int
xlat
sbbb
test
pop
cltd
cmpsb
inc
sbb
cwtl
sub
sbbl
scas
repz
sub
test
jp
scas
adc
test
pop
jle
loope
adc
sub
mov
stos
dec
mov
pop
divl
jl
nop
out
loopne
iret
push
jmp
xchg
mov
sub
pop
fnstenv
into
insb
call
lret
add
popf
add
lds
push
mov
in
mov
ss
insb
or
xor
bound
mov
or
mov
fidivrs
mov
pop
iret
imul
push
lahf
add
imul
sub
pop
test
in
jg
hlt
lds
dec
add
imul
sarl
insb
mov
cmp
jge
xchg
push
insb
and
inc
and
cmc
arpl
sub
inc
enter
cmpl
add
or
sahf
sbb
and
mov
ret
fisubrl
test
insb
popf
pusha
je
add
cwtl
rcrb
cmc
insb
adc
js
imul
add
std
or
icebp
insb
movsl
insl
lock
adc
xchg
pop
or
dec
shlb
cld
in
xor
les
inc
mov
add
inc
lock
jb
insb
pop
lret
mov
in
sbbb
sub
loope
lods
inc
cltd
insb
aam
jle
mov
sub
out
xlat
pushf
mov
mov
in
fcomi
push
sti
xor
data16
xor
push
push
cmpsb
mov
sub
or
movsb
jle
mov
xchg
xchg
xor
fwait
in
jp
insb
out
ja
add
shlb
push
inc
insb
mov
sub
scas
ds
addr16
insb
xor
jns
mov
pop
and
or
ljmp
pop
push
insb
push
jbe
sti
mov
mov
sbb
cmc
insb
movsb
imul
mov
push
mov
mov
cs
xor
mov
imul
mov
insb
stos
adc
bound
popf
pop
addr16
outsl
push
mov
xchg
dec
mov
lret
mov
mov
xchg
dec
dec
xchg
jl
aad
insb
popa
rorb
mov
pop
mov
pop
sbb
ja
sub
jae
dec
mov
mov
ljmp
adc
mov
iret
stc
jne
push
in
sahf
insb
movsb
mov
bound
dec
xor
cli
iret
and
push
mov
xor
cmpsb
inc
cwtl
int
and
insb
into
cmp
mov
aam
int3
sbb
jmp
sti
sub
repnz
in
fsubrl
jnp
mov
xchg
nop
push
push
mov
mov
leave
cmp
imul
mov
or
xchg
test
pushf
or
push
imul
stos
icebp
hlt
sbb
push
fistl
movsl
pushf
ja
pop
subb
inc
xor
push
xor
dec
stos
sti
mov
jl
inc
out
insb
movsl
cmc
and
int
nop
in
sbb
xchg
mov
adc
nop
mov
sbb
sbb
or
cmp
dec
mov
mov
xchg
or
pop
lret
push
xor
cwtl
adc
or
dec
xor
pop
in
test
outsb
xor
addr16
mov
push
mov
movsb
mov
addr16
imul
and
inc
jo
in
or
xchg
les
shl
icebp
fldenv
sbb
push
jb
rolb
push
aad
mul
xchg
mov
ljmp
pop
push
lret
insb
testl
jp
sahf
faddp
fbstp
pop
insb
or
add
mov
and
daa
cwtl
insb
icebp
dec
test
fdivl
insb
adc
xchg
std
adc
mov
insb
add
push
dec
fists
gs
loopne
push
in
sbb
fisubrs
lahf
pop
push
mov
bound
clc
mov
insb
call
fidivs
insb
outsl
mov
adc
push
mov
xor
sahf
dec
ja
sub
outsb
adc
sbb
pop
pop
xor
or
cli
ljmp
outsl
jo
scas
int3
push
ss
add
mov
insb
xor
pushl
movsb
xor
movsl
out
cmp
mov
out
cmpsl
push
inc
adc
jo
pushf
hlt
imul
insb
mov
cmp
insb
iret
lret
mov
cld
adc
jno
xor
outsl
cmpsb
insb
lds
lret
outsl
outsl
xlat
pushf
shll
sub
outsb
aad
scas
pushf
cmp
push
and
dec
ljmp
inc
pop
add
mov
xchg
add
imul
cmp
adc
push
insb
lret
cld
int3
test
mov
aam
pop
sbb
jmp
daa
mov
and
mov
outsl
sbb
imul
cmpsl
in
int3
adc
js
push
push
loope
in
and
push
sbb
or
imul
lret
fs
aaa
xchg
mov
dec
jns
fildl
in
cmp
inc
xchg
idivb
insb
xor
xorl
pop
gs
insb
ret
mov
insb
inc
mov
cld
xor
jno
add
push
in
push
decb
sub
push
jns
push
insb
stos
ljmp
lock
xchg
sub
push
adc
in
sub
imul
xor
mov
add
push
cs
push
in
push
shll
inc
imul
xchg
aas
jmp
push
stc
sti
insb
jae
jbe
adc
fcompl
cmp
pop
mov
pop
pop
imul
xchg
or
pop
insb
test
lahf
xor
insb
mov
jb
adc
cmp
cmp
xchg
out
sbbb
nop
push
mov
cs
js
and
lea
out
xor
fldcw
and
jg
mov
add
in
test
loop
lahf
jbe
insb
lods
les
mov
dec
xchg
xor
and
int3
fdivr
test
xor
or
mov
ja
nop
popa
movsb
out
sub
ljmp
xchg
je
dec
es
push
mov
lods
icebp
mov
arpl
adc
hlt
dec
insb
jl
fldl
insb
mov
bound
mov
dec
mov
insb
popa
adc
rorl
pop
insb
push
loopne
aam
jp
cmp
and
icebp
jno
insb
popa
add
das
xchg
insb
fiaddl
mov
test
or
mov
dec
xor
insb
setnp
int
mov
jp
adc
in
xchg
xchg
js
sub
std
insb
movsl
loopne
test
cmpsl
pushf
mov
xor
insb
sbbl
mov
dec
popa
push
dec
ds
inc
push
out
mov
fidivs
in
inc
enter
insb
les
jns
lds
movsb
mov
daa
pop
cmp
xchg
insb
cli
test
jmp
pop
and
jbe
inc
in
mov
mov
dec
cmp
push
push
out
push
into
cld
xor
out
ret
imul
mov
subl
cwtl
stc
xor
dec
js
inc
dec
sub
loopne
inc
jbe
pop
gs
push
pop
and
cmpsb
and
xlat
push
mov
je
ds
cmp
test
cld
addr16
int
jbe
add
jo
mov
mov
push
movsb
jecxz
and
or
and
mov
fstpl
dec
mov
ret
inc
mov
push
pushf
xor
insb
inc
fs
xchg
int3
add
lcall
jae
lods
ret
or
shlw
mov
loop
add
or
enter
mov
xchg
rcrl
cmp
add
test
cs
pop
or
in
into
fsubrs
ss
jp
movsb
mov
inc
sbb
mov
dec
andl
jno
insb
outsb
push
aas
fidivrl
or
stos
xchg
sbb
das
mov
imul
pop
loopne
stc
mov
and
arpl
lret
addr16
test
adc
jns
insb
mov
fmul
and
fwait
js
lock
ret
movsl
lods
or
cmp
data16
int3
cltd
ja
or
push
pop
loopne
test
leave
out
push
sub
fildll
fs
sahf
nop
outsb
or
aas
sbb
sti
mov
in
cld
mov
fsubl
add
je
adc
push
fstps
inc
mov
in
movsb
movsl
inc
xorb
or
add
mov
outsb
pop
push
sub
jle
jmp
and
in
andl
iret
shlb
xchg
dec
lock
insb
ds
rclb
std
roll
in
rcl
and
lret
imul
mov
ds
insb
push
loope
int
shrb
inc
insb
in
and
mov
pop
mov
cmp
shl
xor
popa
sbb
fsts
out
aas
insb
xchg
xor
roll
push
pop
insb
xor
push
sub
or
cmp
fnstsw
leave
test
mov
stc
insb
inc
mov
adc
insb
bound
mov
imul
aad
jno
jo
jecxz
mov
insl
gs
jmp
pop
jmp
dec
cltd
push
clc
mov
xchg
sbb
stos
lcall
sub
or
lods
push
add
mov
adc
fucomi
ret
inc
fs
aam
insb
pop
stos
rol
fmulp
lods
mov
dec
and
test
cwtl
dec
in
rcll
in
xor
aam
cltd
inc
pop
dec
outsl
dec
imul
or
stos
pusha
stc
mov
test
fmull
adc
aas
arpl
dec
xor
adc
insb
rorb
adc
fldt
insb
sub
push
in
or
out
das
add
inc
jns
mov
fnstsw
dec
lahf
leave
pop
dec
cwtl
xchg
outsl
andl
fsubl
push
in
push
mov
insb
fcmovnb
aad
xlat
or
mov
pop
es
aaa
mov
inc
mov
push
test
mov
fldt
push
pop
add
jbe
mov
repz
sbb
mov
inc
insb
aam
sti
fisttps
add
insb
lds
and
pop
nop
lahf
aam
in
xor
pushf
mov
leave
pop
fdiv
xchg
and
sub
imul
into
fisubs
xchg
xchg
cs
movsl
xchg
in
pushf
addr16
stos
insb
or
or
dec
push
push
movsb
sar
out
imul
addr16
and
dec
insb
psubq
mov
sbb
and
test
and
dec
cmpsb
sahf
pusha
insb
ret
cli
in
ss
lcall
cmp
add
push
imul
xchg
les
pop
loope
mov
cwtl
ja
ss
nopl
insb
pop
add
mov
insb
rcrb
mov
pop
jne
push
cmp
adc
jle
inc
mov
test
or
or
out
push
insb
out
int
xchg
adc
xchg
add
stc
arpl
rcll
mov
adc
and
lods
adc
add
mov
andb
push
adc
gs
dec
push
fsub
push
xchg
out
add
fisubs
sbb
pop
push
insb
test
std
out
and
nop
popa
xchg
ds
imul
pop
xor
xor
push
sub
adc
js
insb
aas
jne
xor
xorl
subl
pop
push
insb
ds
mov
popa
adc
daa
push
in
jecxz
xchg
dec
pop
mov
or
or
fs
insl
pop
xor
lea
ds
and
sub
or
push
cmpsb
add
push
jge
ret
mov
push
push
in
push
fsubs
push
cmp
lahf
mov
add
fdiv
js
test
loop
dec
leave
clc
insb
jl
mov
ret
les
subb
xchg
cwtl
mov
xchg
and
push
ljmp
iret
ja
jbe
ret
mov
rep
ret
scas
out
jo
call
xorl
ljmp
shll
insb
ja
dec
xorl
jecxz,pt
subb
inc
jmp
outsb
xor
mov
gs
sub
in
loope
and
adc
insb
fisubrl
sub
cwtl
shlb
xor
push
nop
and
cwtl
sub
bound
mov
mov
jecxz
xchg
pop
insb
and
xchg
or
movsb
subb
lock
hlt
rorl
movsl
fldt
fsubrl
scas
es
insl
mov
mov
call
dec
dec
ret
inc
sbb
push
sub
jne
or
cmp
adc
push
loopne
and
pop
in
push
and
push
insb
pushf
and
or
insl
add
mov
int3
stos
shrl
jp
mov
pop
push
mov
cmpsl
dec
subl
outsb
cltd
insb
xor
fdivp
pop
and
cli
adc
aam
orb
sub
les
out
ss
sbb
mov
insb
push
jb
scas
jge
add
mov
lods
insb
sbb
and
jno
and
adc
push
add
and
mov
dec
int3
mov
inc
sub
jnp
mov
gs
scas
mov
mov
xchg
ret
in
cld
pushf
push
mov
jge
shrl
fmuls
mov
out
mov
xchg
or
cmp
push
jae
cmp
ds
movsb
ud1
jns
or
mov
xchg
xchg
sub
cmp
int
jo
stc
loopne
fcoms
xor
adc
cmp
subb
leave
stc
jno
cmp
pop
je
push
scas
pop
sbb
mov
insb
pop
inc
imul
pop
sub
test
fld
insb
add
jns
xlat
lods
shll
pop
fnstsw
xor
jecxz
aaa
lret
loop
rolb
cli
and
sub
jbe
es
jo
mov
pop
testl
test
dec
imul
enter
cmp
insb
sub
xor
inc
or
insb
mov
je
dec
insb
inc
xchg
xchg
insb
popa
fsubr
dec
lea
ss
dec
outsl
jmp
insb
dec
test
xor
add
in
lods
insb
mov
or
daa
or
div
clc
jb
pop
sahf
insb
sub
jle
jge
into
insb
das
mov
inc
aas
mov
push
insb
fld
push
rcll
jnp
push
mov
jne
movsb
das
mov
jl
icebp
jae
jmp
ja
add
sub
data16
das
jg
loop
xor
insb
sub
rcr
js
jbe
in
test
out
cmp
pop
or
sbb
push
outsb
pushf
jmp
pop
enter
cwtl
cmp
iret
das
out
loop
cmp
pop
sub
gs
push
cmc
mov
leave
std
cmpsl
insb
out
orps
stc
push
mov
and
sbb
je
insb
fwait
frstor
imul
dec
or
into
insb
and
loop
insb
sti
adcb
push
cmp
ret
fs
ss
outsb
mov
fwait
pop
jl
fisubrl
or
shr
cld
test
bound
jne
insb
add
xchg
lretw
icebp
xchg
xchg
out
insb
pusha
mov
insb
rolb
adc
xor
push
in
aas
invd
mov
lea
pop
loopne
sub
iret
lods
insb
in
push
push
push
loop
or
in
into
ljmp
lret
xchg
pop
shrb
or
xorl
pusha
push
pop
shll
sbb
fdivl
jne
insb
xor
imull
enter
mov
mov
cs
repz
insb
add
subl
dec
ret
cs
bound
inc
jmp
pop
pop
out
mov
lods
sahf
call
insb
popf
inc
push
cmp
mov
or
in
push
popa
pop
or
jbe
mov
jns
sbb
inc
xchg
insb
jle
sbb
sub
and
adc
lds
jns
insb
xor
mov
mov
xchg
lahf
inc
popa
aad
mov
mov
out
inc
mov
jp
insb
or
imulb
enter
insb
push
mov
xor
push
in
xor
hlt
xor
imul
mov
mov
jb
push
inc
xchg
insb
cli
test
mov
cmpsb
mov
imul
test
sub
mov
mov
dec
js
popa
es
test
fstpl
jecxz
pop
inc
fyl2x
cli
ja
test
enter
cmp
fsubs
loope
das
imul
or
int3
adc
imul
sarl
insb
outsb
xor
mov
lret
jae
jle
les
sti
mov
push
mov
push
mov
insb
mov
push
and
and
gs
mov
adc
in
push
repz
insb
inc
loopne
push
sbb
xchg
jp
mov
pop
pop
push
push
sbb
mov
insb
jecxz
ljmp
ret
xor
and
mov
mov
xchg
insb
sbbb
or
out
call
xor
insb
add
cmp
movsl
stc
sub
sti
imul
std
test
push
xchg
faddl
sarb
ljmp
mov
das
rorl
and
add
loop
sub
push
pop
in
mov
enter
mov
idivb
pop
xchg
mov
scas
insb
xchg
sub
test
lret
lcall
fsubrl
aas
stos
sub
mov
push
popf
rcll
lahf
mov
lcall
in
insb
js
mov
xor
movsl
in
pop
sub
xchg
xorps
fwait
in
rorl
lcall
or
mov
bound
insb
out
inc
mov
lcall
stos
insb
ja
leave
roll
xlat
lods
xchg
aam
insb
pop
add
frstor
insb
roll
sub
insb
sbbl
mov
pop
insb
cmp
mov
out
xor
in
jge
and
insb
dec
inc
addr16
pop
sub
lds
xor
in
ds
stos
insb
dec
scas
inc
add
movsbl
insb
inc
shll
popf
div
jp
insb
jmp
adc
insb
sub
lret
and
jmp
das
lds
insb
insl
lods
lcall
and
lret
shll
je
pop
test
dec
push
loopne
subl
sub
lock
or
lcall
pop
jl
xor
sbb
ss
pop
testb
aad
stc
lds
xchg
in
nop
sub
roll
insb
test
rol
int
ljmp
frstor
imul
shrb
push
in
bound
xor
sbb
ss
pop
add
imul
shl
cmp
adc
pop
xchg
into
inc
dec
fmuls
stos
inc
fcoml
insb
in
xchg
outsb
insl
pop
aaa
push
cld
jmp
data16
ret
xchg
cltd
xchg
sbb
mov
cmp
sub
lods
adc
sbb
inc
or
push
push
cmp
insb
popa
or
cmpsl
sbb
dec
ficomps
sbb
or
xlat
or
xor
push
popf
fcompl
cmp
outsl
ret
pop
xchg
bound
hlt
xlat
xor
mov
lahf
sbb
imul
loope
pop
mov
xlat
lret
scas
xor
push
ljmp
dec
insb
fs
sub
scas
pop
cltd
pop
pop
clc
sub
push
xor
fildll
arpl
leave
adcl
imul
xchg
push
or
in
cld
jp
insb
sarl
in
fcomi
push
scas
cltd
insb
jb
imul
mov
jmp
mov
inc
adc
push
lods
sub
dec
stos
dec
nop
pop
imul
or
aam
cmc
push
insb
pop
mov
insb
push
pop
xstore-rng
cmpsl
ret
mov
insb
jp
into
adc
test
xchg
insb
adc
mov
insb
fdiv
stos
push
jge
subb
adc
insb
push
xor
xchg
dec
cmp
xchg
xor
fistps
cli
mov
adc
mov
popf
dec
ds
insb
in
adc
xlat
popa
or
mov
or
leave
insb
inc
fucomip
push
movsb
ljmp
insb
fstpl
iret
insb
dec
shlb
movsl
pop
push
lret
fwait
push
jecxz
outsl
jle
pop
mov
scas
cmp
dec
loopne
sahf
rorb
pop
xlat
lcall
pop
cwtl
repnz
or
jnp
popa
enter
jl
xchg
fstl
insb
inc
mov
in
jno
pop
insb
std
lcall
insb
jle
shrb
aad
pop
imulb
out
add
fsub
insb
loopne
aas
mov
rep
inc
imul
imul
dec
cmp
pop
insb
dec
adc
jne
xchg
xor
dec
mov
gs
in
popa
insb
pusha
pop
jle
clc
out
mov
in
movsb
lret
cmp
insb
adc
out
clc
push
cs
xor
les
lea
dec
imul
sbb
imul
cld
fmul
test
gs
imul
xlat
insb
push
or
aas
dec
xor
rcr
dec
iret
sub
movsb
arpl
in
dec
shrl
in
in
jg
mov
imul
mov
js
push
insb
test
in
inc
inc
cmp
mov
dec
dec
jmp
loop
insb
lock
jmp
and
pop
dec
repz
in
mov
mov
pop
insb
int3
fs
and
scas
mov
lahf
push
sub
add
imul
sub
xor
adc
movsb
popa
out
je
in
sub
and
insb
fsts
in
and
and
arpl
adc
mov
shrb
lcall
mov
lcall
jno
imull
cmc
mov
insb
jns
outsb
xor
dec
aaa
dec
sahf
mov
imul
fimuls
movsl
mov
ret
lods
loope,pt
fwait
jp
add
dec
ljmp
repz
jl
push
adc
out
push
sub
mov
cmp
mov
insb
divl
scas
es
fsubrs
insb
int
rolb
pushf
mov
rep
lret
fwait
das
push
insb
cli
xchg
mov
add
inc
fcomi
outsl
addb
insb
js
mov
adc
lahf
shl
adc
xchg
dec
mov
scas
mov
push
insl
outsl
insb
push
xor
iret
xor
or
add
mov
push
insb
cmp
lods
jmp
pop
fcmovu
cmc
and
icebp
xchg
mov
push
xor
and
shrb
mov
lahf
insb
sub
loopne
pop
repz
or
scas
mov
data16
inc
push
cmpsb
int
jge
mov
call
cli
shll
push
popa
adc
dec
push
leave
sub
pusha
xchg
rcrl
lods
cmp
cmp
pop
xlat
xchg
and
adc
mov
fcmovnb
imul
mov
icebp
mov
repnz
insb
xchg
jg
push
imul
cld
mov
sti
mov
cmp
adc
mov
mov
mov
pop
insb
icebp
loope
pop
js
sbb
pop
push
xlat
aad
notb
pop
stos
mov
mov
xor
and
pop
mov
mov
inc
insb
ss
mov
insb
sbb
adc
pop
pop
xor
int3
jle
mov
pop
fldenv
sbb
inc
leave
daa
testl
sub
lret
dec
imul
push
xchg
mov
in
outsb
dec
lds
mov
sub
dec
mov
daa
xor
cmp
insb
test
mov
imul
and
sbb
into
pop
lret
cli
out
es
insb
or
pop
shrb
movsb
xchg
addl
mov
lea
out
insb
fdivl
sbb
imul
in
mov
insb
je
cs
das
mov
imul
aad
lahf
xchg
pop
in
mov
dec
lock
mov
ret
int3
add
ret
insb
cmp
movsbl
cmp
loope
imul
add
cwtl
cmc
fimuls
push
fsubl
daa
insb
leave
inc
xchg
dec
dec
or
ja
jo
subl
jl
loopne
xorl
mov
mov
mov
mov
daa
cmp
loope
pop
lods
fcmovu
inc
stc
ret
insb
dec
mov
stos
aas
insb
jmp
pushf
mov
mov
inc
arpl
sbb
mov
jge
insb
mov
js
push
insb
sarb
in
imul
jecxz
adc
and
and
mov
cld
mov
aad
mov
notl
je
insb
fstp
rorl
insb
jge
cli
mov
cmp
sti
bound
xchg
dec
insb
gs
mov
add
mov
int3
push
test
imul
enter
inc
imul
jl
dec
aas
rolb
test
mov
mov
into
adc
cmp
movb
cltd
sbb
addr16
mov
xchg
in
insb
fadds
loopne
xchg
lcall
out
lods
jecxz
fsubrs
sbbl
aam
insb
mov
stos
add
mov
add
bound
out
aaa
mov
fistpl
insb
xchg
mov
sbb
outsl
test
cltd
push
push
test
insb
sub
cmpsl
cmp
cmc
roll
movsl
xchg
jb
data16
popf
les
das
or
mov
inc
imul
cmp
mov
jle
xor
inc
insb
ret
aas
or
push
loopne
dec
das
lea
insb
inc
jno
test
lret
dec
imul
nop
inc
sbb
inc
add
pop
ret
inc
sub
push
arpl
mov
insb
sahf
mov
in
fdivl
dec
in
insb
outsb
jmp
lret
push
xor
sub
mov
mov
or
and
jo
insb
mov
push
mov
stos
fsubrp
iret
imul
imul
pop
insb
ror
or
sarb
insb
js
pop
out
fisttpl
loop
mov
arpl
add
inc
enter
add
sbb
insb
jbe,pt
cli
cltd
daa
scas
or
xor
xor
roll
insb
repnz
push
cmp
insl
insb
adc
dec
fldenv
inc
les
loope
sub
and
outsl
lcall
in
jl
cmpsb
out
pop
push
jb
xchg
or
fistl
mov
xor
push
xchg
gs
data16
sbb
mov
insb
sbb
add
inc
sarb
gs
push
xchg
fwait
insb
jno
and
clc
cmp
in
fidivrl
xor
stos
sbbb
and
insl
and
fsts
insb
lret
mov
pop
fistl
repz
mov
jnp
sub
mov
lock
insb
es
aaa
push
test
test
cmp
xchg
stos
scas
fsubrl
fbld
jne
je
xor
insb
ds
imulb
js
mov
shrl
mov
gs
inc
in
and
and
stos
cmp
test
push
ficoml
sbb
jl
pop
fwait
pop
ss
movsl
aad
sub
scas
cmp
in
sbb
leave
jmp
mov
imul
andl
jb
cmpsb
and
loope
pop
outsl
addr16
gs
sbb
fistps
add
sub
xorl
or
xchg
add
push
jecxz
out
rcll
sbb
push
mov
and
cmp
cmp
xchg
clc
push
mov
pop
and
cmp
mov
jp
xor
push
or
jmp
mov
test
inc
insb
movsl
mov
nop
inc
insb
jbe
loop
outsb
mov
loope
and
sbb
sub
mov
das
fwait
insb
sbb
cmpsl
mov
imul
push
inc
xor
scas
or
xor
xor
jp
out
iret
subb
ja
rcr
insb
movb
imul
cld
cs
sbb
sub
jne
movsb
insb
dec
adc
inc
cmp
int3
insb
xor
inc
leave
cmp
pop
imul
lahf
pushf
lods
xchg
cmpsl
cld
pop
inc
sahf
insb
sbb
ja
insb
aam
jo
dec
fiaddl
insb
xchg
and
fildll
push
jae
popa
sub
insb
lret
pop
add
pop
mov
mov
inc
test
imul
mov
pop
es
insb
bound
mov
loop
jge
les
insb
xor
mov
mov
cmp
lods
mov
adc
pop
sbb
movsl
icebp
decb
sub
xor
lods
insb
or
sti
push
xor
jl
insb
mov
pop
pop
adc
aaa
mov
xchg
cmp
or
jle
arpl
jae
and
push
insb
xchg
push
xor
insb
push
add
adc
insb
xor
xor
mov
pop
insb
jne
jl
sub
shll
lods
jp
leave
in
enter
jl
push
push
cmp
insb
call
or
push
insb
imul
iret
loop
ljmp
in
or
rcrb
push
xlat
insb
lret
call
leave
insb
shlb
ds
fstpt
dec
daa
fcoms
lahf
outsl
mov
shrb
mov
int3
mov
sbb
mov
mov
sub
cmc
push
pop
insb
or
out
jecxz
sub
pop
or
or
add
insb
push
test
sbb
fwait
in
jo
mov
loope
lcall
clc
in
mov
popf
pusha
fsts
call
adc
test
sbb
sub
jnp
arpl
pop
dec
gs
mov
mov
sub
hlt
xchg
imul
xchg
int3
mov
dec
insb
lods
sub
or
fistpl
jns
mov
btr
lret
xchg
mov
insb
mov
jge
lods
jo
cmc
imul
cmp
add
jae
mov
insb
inc
andb
insb
repz
les
mov
shl
adc
cli
insb
pop
aad
addl
sbb
add
gs
out
loope
addr16
push
popf
mov
xchg
in
sarl
shrl
adc
jle
out
push
imull
push
test
pusha
fisttpl
stc
inc
insb
push
push
mov
mov
ret
ss
es
adc
insb
sbbb
mov
loopne
mov
cmp
lock
lods
cmc
xor
dec
sub
fldcw
push
insb
lahf
in
mov
push
or
movsb
ljmp
int3
fists
cli
sub
sbb
insb
fsubs
leave
sbb
jns
add
sub
popf
dec
push
sbb
outsb
icebp
mov
jecxz
dec
sbb
insb
jmp
inc
fiaddl
mov
inc
stos
cli
adc
je
cmp
dec
jae
jmp
inc
or
jl
ljmp
ss
insb
adc
out
shll
dec
mov
js
movsb
jb
xchg
jbe
jmp
pop
mov
imull
and
sti
dec
popa
fdivrs
inc
insb
ljmp
push
addl
pop
xlat
stos
mov
nop
pop
insb
mov
xor
in
jmp
push
outsl
dec
mov
cmp
add
mov
pushw
jne
jl
cmp
mov
sbb
repz
loopne
add
insb
pop
scas
mov
mov
in
aaa
adc
add
shrl
and
insb
add
fs
mov
shrb
inc
stos
lods
lahf
leave
insb
shrb
inc
sbb
icebp
je
mov
jnp
pushf
and
testl
insb
lahf
sbb
add
inc
sub
dec
xlat
imul
mov
gs
sarb
aad
cs
sahf
push
or
or
call
insb
mov
popa
pop
cmpl
mov
test
inc
pusha
popa
mov
inc
aad
push
insb
push
adc
addr16
mov
into
xor
add
sub
stos
cmp
and
jae
test
lcall
inc
add
and
daa
push
add
insb
std
sbb
arpl
xor
mov
jg
fsubrs
and
push
mov
iret
xchg
test
mov
mov
testb
into
rcrl
xor
jle
and
mov
leave
mov
shrl
in
fsts
sbb
push
jo
ds
dec
insb
push
popa
stos
xor
pop
mov
pop
mov
sub
insl
loop
rol
arpl
roll
mov
xor
jle
or
pop
push
sub
outsl
jmp
lret
xor
pop
nop
stos
enter
push
push
jl
gs
xchg
lret
out
push
and
in
fsubr
or
or
push
jnp
and
xchg
and
pop
sbb
cmp
cmpl
insb
mov
test
insb
in
fimuls
stos
rcrb
cs
mov
insb
ljmp
pop
gs
test
cmc
aam
das
push
das
jp
inc
insl
sbb
lods
push
jg
mov
pop
mov
pop
mov
xchg
lcall
lods
dec
gs
imul
mov
fisubl
cmc
sub
mov
push
mov
mov
std
enter
ficompl
das
pop
in
inc
das
xor
mov
sub
inc
call
ret
mov
imul
dec
jp
inc
fisubrs
imul
rorl
pop
movsb
jmp
cld
rcrb
mulb
repnz
cmp
in
sarb
jbe
push
and
insb
fnstsw
cmp
sub
xchg
jne
push
pop
ret
insb
lret
mov
imul
pop
jl
pop
cmp
or
sbb
mov
inc
rcrb
les
sub
dec
and
jns
les
and
leave
xor
insb
pop
les
xchg
popa
pop
mov
bound
cmp
pop
into
pop
cmp
mov
push
lea
stc
inc
xchg
mov
xchg
insb
dec
fsubrl
and
sub
in
div
or
rep
data16
insb
ds
insb
mov
sbb
fldt
jb
orl
mov
insb
adc
fsubs
outsb
sub
insb
lcall
loope
pop
jp
xchg
jmp
ds
out
repnz
loopne
fwait
adc
ret
mov
dec
rolb
clc
adc
mov
shlb
shlb
lcall
add
adc
lock
xor
or
inc
cmp
pop
push
pop
jle
out
fidivs
shrl
test
daa
mov
jo
int3
dec
xchg
push
xor
inc
push
pop
push
ja
fnsave
adc
iret
jl
imul
push
scas
repnz
xchg
lret
imul
pop
repnz
jno
rcrb
in
adc
gs
inc
mov
sbb
push
mov
jns
insb
pop
jo
jmp
je
and
ds
push
cmp
imul
or
aam
jne
outsl
adc
cmpsl
aas
add
inc
sbb
lock
popl
insb
mov
stos
sub
pop
cmp
insb
paddq
fdiv
sbb
mull
stc
xchg
lock
imul
imul
out
jp
imul
bound
mov
hlt
dec
mov
and
lcall
dec
pop
shll
insb
dec
cld
add
mov
inc
adc
sub
push
insb
in
adc
mov
shr
cmpsb
xchg
push
inc
test
int3
xchg
lcall
xchg
into
insb
repz
js
aaa
insb
push
sbb
rcrl
pop
insb
addr16
mov
ret
dec
xor
dec
or
jne
std
push
mov
mov
jne
pop
mov
cmp
lret
int
sbb
mov
pop
loopne
insb
movsb
and
aad
pop
cmp
pop
cwtl
lahf
cmp
or
popf
inc
mov
gs
sbb
icebp
pusha
lds
cmpsl
cmp
jbe
out
dec
faddp
jae
sahf
mov
insb
dec
cmp
and
jno
stos
add
subb
cmp
fdivs
sbb
fld
insb
xchg
and
sbb
jb
fnstcw
sbb
test
arpl
outsl
insb
mov
pop
pop
xor
fadds
insb
fldcw
add
xor
dec
int3
lea
out
ret
push
insb
push
mov
mov
fcomip
fdivl
addr16
xor
fsubrl
add
pop
into
jecxz
fucomp
xor
insb
or
stos
xor
icebp
push
popf
pop
gs
loopne
and
xchg
fisubl
cmp
dec
in
pushf
clc
mov
insb
test
inc
mov
decl
jnp
aas
aam
cmp
dec
jo
out
pop
insb
xchg
xor
insb
int3
push
adcl
stos
sahf
lods
insb
cmp
jecxz
bound
insb
jg
mov
push
jno
out
pop
pop
add
fmulp
adc
jge
adc
jp
or
std
mov
imul
xor
cmpsb
sbbl
push
fldl2t
xchg
mov
outsb
jmp
std
sbb
jmp
xor
mov
aas
bound
sbbl
in
inc
xchg
add
nop
pushf
dec
cmpsl
lods
stc
mov
out
xor
insb
mov
push
and
gs
cmpps
ret
jbe
sbb
adc
fiadds
lea
adc
sbbl
dec
loopne
int3
push
push
and
sub
loopne
stc
cli
shrb
dec
cltd
repnz
jl
insb
in
fs
pop
pop
push
into
dec
fcoml
icebp
xor
das
push
test
movsb
pop
outsl
add
fidivl
mov
insb
out
pop
ds
scas
js
inc
insb
into
aam
sbb
subl
adc
insb
in
mov
jns
pop
mov
insb
popa
repz
icebp
pop
sarl
mov
push
fs
insb
ret
cmp
or
repz
inc
repnz
and
push
popf
sbb
insb
xor
sahf
rcll
insb
jg
push
lock
sbb
idivb
mov
adc
push
add
insb
pop
fisttpll
mov
sbb
or
or
cmp
insb
or
push
pop
shlb
enter
mov
clc
xchg
or
pop
pop
xor
lahf
aad
inc
cmp
insb
cltd
add
adc
pop
push
mov
es
lods
fs
xchg
subb
lock
lods
xor
insb
in
aam
pushf
test
or
lea
mov
fdivrs
xor
imul
popf
in
pop
shrl
insb
add
dec
mov
cmp
cmp
imul
pop
sub
lds
imul
jno
aam
jp
mov
add
insb
or
call
mov
fisttps
inc
push
insb
incl
insl
insb
sub
and
jb
insb
ljmp
jae
sbb
pop
out
pop
jnp
fbstp
sbb
xor
sub
popa
jle
in
popa
sbb
hlt
push
mov
mov
mov
insb
loopne
fmull
ret
insb
call
stc
inc
cwtl
jb
insb
adc
neg
iret
pop
addr16
loopne
mov
mov
and
insb
push
cmp
stos
dec
lahf
ret
insb
dec
add
add
mov
mov
mov
mov
xchg
gs
or
and
add
push
jecxz
pop
cmp
jg
popf
cmp
insb
call
jmpw
sub
popf
xor
adc
test
inc
xor
mov
push
cs
mov
sub
lock
cmp
dec
mov
cmp
xlat
cmpsb
inc
movsb
out
inc
dec
pop
lods
ds
adc
insb
mov
pop
lahf
mulb
inc
insb
clc
inc
leave
inc
insl
call
xchg
sti
insb
xor
xor
add
pop
iret
add
or
sahf
movsl
aas
push
adc
hlt
mov
xchg
rol
sbb
std
lahf
bound
mov
inc
insb
ficomps
sbb
insb
fs
loope
imul
mov
xlat
clc
outsb
insb
rcl
pop
mov
jle
fmull
es
dec
mov
lret
mov
mov
scas
and
insb
in
inc
leave
mov
imul
add
mov
sub
fs
sti
insb
imulb
int
dec
mov
stos
sub
insb
push
mov
dec
in
mov
inc
sbb
movsb
imul
aad
jp
push
jle
arpl
enter
cmp
dec
shrb
lods
mov
inc
insb
mov
pop
mov
xor
int
jne
out
sbbb
add
rorb
xor
inc
jmp
test
les
pop
lret
adc
xor
inc
rorb
add
lcall
add
out
cltd
fcomp
insb
cmpsb
mov
insb
mov
inc
mov
insb
mov
and
push
mov
scas
dec
cmp
outsb
in
sub
out
test
and
dec
sbb
jecxz
insb
or
test
test
jo
inc
sbb
jb
push
sub
mov
inc
repnz
outsl
sbb
jp
adc
pop
scas
push
mov
sbb
movsl
shr
lds
jmp
cmp
dec
mov
mov
and
insb
shrb
xorl
dec
insb
into
call
mov
pop
shl
add
insb
es
and
inc
mov
fsubrl
xor
pop
fs
insb
sahf
mov
in
pop
and
jo
movb
insb
ja
icebp
sbb
pushf
imul
loope
imul
dec
jl
mov
pop
insb
popf
imul
out
push
pop
movsl
lock
dec
cmp
in
gs
out
out
lret
mov
out
xor
test
rolb
adc
fldenv
push
ss
hlt
add
insb
addr16
jno
push
pop
xor
insb
or
push
jmp
xlat
xor
imul
arpl
inc
adc
shrb
sub
adc
insb
push
repz
jge
xchg
test
dec
out
in
fcomps
clc
aaa
push
adc
pushl
jmp
mov
mov
lret
cmovno
lds
sub
loop
imul
inc
push
gs
cmc
lcall
ljmp
les
mov
xchg
xchg
fbstp
push
imul
adc
dec
mov
insb
or
aaa
imulb
push
cmpsb
xor
xlat
lahf
jp
xor
popf
or
fadds
push
imul
and
cwtl
addr16
aam
xor
add
imull
mov
rcll
adcb
mov
cwtl
inc
inc
jle
inc
bound
dec
out
dec
sbb
pop
stos
jns
fnsave
cmp
cs
sub
dec
sub
insb
cmc
call
and
mov
dec
test
movsb
lods
push
sub
add
mov
jecxz
imul
xchg
jne
or
insb
sub
call
mov
add
xlat
cmc
mov
mov
push
push
push
insb
sub
es
lods
clc
rcr
insb
adc
jbe
call
sbb
mov
lods
add
js
sahf
insb
or
ljmp
jmp
sbb
insb
sahf
mov
adc
dec
jns
mov
icebp
movsl
pushf
and
xor
pusha
push
das
xor
insb
mov
sub
adc
cmp
sbb
xchg
inc
fistpll
inc
aas
xchg
mov
or
movsl
mov
dec
mov
and
or
xor
xor
ljmp
pop
aad
xchg
mov
addr16
lods
je
mov
adc
popf
fdivrp
fbld
insb
rcll
loope
subl
or
repz
insb
lret
out
jecxz
push
jmp
jb
dec
xor
mov
in
sub
xchg
inc
sub
insb
lahf
sbb
fimuls
insb
movl
dec
push
dec
dec
sub
mov
xchg
insb
jnp
aaa
pop
lock
arpl
outsl
aas
int
xchg
mov
mov
cwtl
ljmp
inc
push
jo
stos
insb
sub
and
pop
mov
mov
cmpsb
fdivr
daa
insb
mov
cld
add
nop
push
sub
js
insb
and
shr
insb
das
loop
int3
jnp
fwait
imul
pop
fwait
inc
xchg
and
sbb
mov
dec
pop
xchg
mov
int3
ja
pop
insb
lea
and
loop
xorl
xchg
iret
cli
lahf
dec
mov
cs
insb
sbb
adc
mov
fisubl
mov
sub
shl
jge
push
push
and
pop
insb
lock
or
arpl
in
lret
aam
insb
mov
dec
notb
sub
adc
scas
out
insb
addl
push
insb
add
pop
test
loop
test
out
leave
jge
pop
insb
cmp
in
mov
mov
mov
jmp
dec
insb
mov
fs
jbe
insb
mov
sub
insb
loope
xchg
pop
notb
jg
dec
xchg
insb
cmp
cwtl
cmp
insb
loopne
mov
sahf
aas
push
fs
cld
rcll
insb
and
lods
xor
push
pop
mov
fcmove
jge
xor
adc
incl
sub
xor
out
insb
stos
in
ljmp
loop
cvtpi2ps
push
rorb
std
xor
loope
xor
mov
leave
insb
and
pushf
jge
xor
or
sub
mov
pop
insb
je
xchg
xor
insb
aad
sbb
stos
imul
push
xlat
xor
dec
pop
loopne
jge
cltd
imul
jo
xor
arpl
in
ss
jecxz
and
cmpsl
adc
and
mov
aam
xor
cld
mov
test
push
pop
mov
lods
lahf
jbe
push
stos
push
stos
jle
pop
jno
mov
dec
push
sahf
add
dec
jne
inc
test
test
bound
jae
or
jns
sbb
cltd
pusha
cld
into
jl
mov
imul
adc
stos
add
inc
pop
inc
repnz
iret
cli
sub
ret
daa
insb
mov
push
xchg
lcall
push
inc
test
fisubrl
push
ljmp
lcall
outsb
sub
addr16
add
add
jmp
pop
mov
or
or
test
gs
fistps
ljmp
int3
dec
cmpsb
pushf
fisubrl
jae
in
test
inc
cmpsl
dec
mov
jg
ljmp
xor
and
push
inc
sarl
mov
add
pop
pushf
pop
rorl
insb
dec
test
popa
xor
insb
mov
insb
pop
mov
or
std
pop
lods
hlt
das
insb
adc
hlt
xor
insb
push
sub
imul
push
push
popa
aad
pusha
xchg
in
out
inc
movsl
daa
inc
add
push
fmuls
add
inc
pop
jnp
out
jmp
and
test
subl
scas
shl
push
xchg
mov
mov
dec
loope
sbb
inc
xchg
hlt
adc
jno
xor
insb
pusha
in
sub
ds
int
insb
dec
jg
jno
and
gs
mov
mov
aad
fwait
insb
pop
cli
imul
adc
insl
mov
and
fwait
xor
mov
stc
push
ds
ret
lods
jnp
cmovge
lods
mov
mov
out
insb
or
lret
jbe
imul
iret
test
int3
js
insb
ljmp
mov
insb
inc
xchg
mov
gs
add
and
mov
jne
lcall
bnd
shrl
stos
cs
popf
jb
gs
cmpl
and
subb
mov
inc
pop
test
adc
fiaddl
sub
xchg
aam
lock
stc
cmp
es
cld
lods
mov
je
mov
jo
inc
insb
pusha
jb
stos
rcrb
jge
mov
mov
dec
insb
and
call
jge
push
mov
mov
pop
test
or
int3
inc
dec
xchg
mov
imul
push
push
clc
add
insb
cmp
js
cmp
mov
inc
mov
lahf
scas
push
cmp
jmp
xchg
or
pop
rorb
icebp
push
xchg
jns
test
mov
imul
ds
pop
cs
inc
popf
or
lcall
cmpsb
sub
sbb
rcrb
mov
mov
jo
popf
sahf
clc
cmp
inc
cmp
dec
jg
in
sahf
jae
or
mov
test
shrl
add
ss
mov
cmp
ds
mov
js
pop
call
jg
mov
orl
jno
and
jge
les
sub
aam
mov
lcall
xor
mov
flds
xchg
faddl
jae
cmp
push
sti
hlt
xor
ret
out
in
xchg
insb
inc
push
cmp
jmp
pop
or
mov
push
lods
shlb
subb
and
cmp
imul
fistpl
popf
gs
jmp
outsb
or
das
sar
insb
shr
pop
inc
test
into
dec
dec
sub
orb
push
insb
xor
lahf
jp
stos
adc
dec
insb
sbb
and
pop
mov
enter
repz
lea
push
test
insb
int
ret
xchg
arpl
jecxz
inc
mov
ret
mov
push
popa
xchg
add
insb
es
mov
lcall
dec
insb
push
inc
dec
lahf
push
cli
inc
mov
iret
insb
push
incl
lods
sbb
and
insb
cwtl
pop
sub
shll
fisubrl
pop
dec
in
scas
pop
push
mov
ret
add
lock
and
jge
xchg
pop
xchg
xchg
dec
lods
neg
jp
leave
insb
aad
mov
lock
inc
mov
push
cltd
mov
xchg
std
test
test
inc
fsubl
das
push
imul
insb
dec
sub
push
xchg
push
int3
dec
insb
inc
outsl
call
insb
lcall
mov
out
popa
mov
cmp
sub
cmpsl
jmp
loope
insb
push
mov
cmpl
scas
dec
lods
jecxz
sub
cmp
imul
or
mov
xor
dec
ja
pop
mov
insb
ret
das
cmpsb
xchg
ficoms
or
push
divb
pop
stc
jp
add
shll
inc
scas
sbb
jbe
or
ja
xor
mov
xor
push
imul
jbe
cmpsl
repz
push
sarl
insb
ja
mov
add
mov
ret
rclb
pop
lahf
jmp
jne
xor
adc
xchg
dec
sahf
push
je
imul
in
test
sarl
mov
push
dec
iret
adc
push
adc
cmc
sbb
cli
jl
mov
imul
xchg
cmpsl
insb
in
cmp
call
sarl
add
xchg
stos
cld
adcl
xchg
push
push
sub
mov
push
ja
cmc
and
adc
inc
mov
notb
insb
and
add
pop
jge
push
push
mov
xor
mov
movsb
lods
and
rcrb
jo
sbb
adc
out
mov
cmp
popa
and
lock
inc
or
push
insb
xchg
sub
adc
inc
je
bound
sti
sub
jmp
mov
or
loop
stc
insb
fwait
inc
sub
sti
leave
ficoms
aam
sahf
mov
ja
or
dec
fimuls
xor
mov
xchg
insb
pushf
xor
sub
push
xor
imul
xorl
leave
repz
pop
in
push
push
sti
ja
cmp
outsb
cli
or
addr16
dec
and
and
push
push
pop
push
push
jbe
push
dec
pop
or
lea
xor
add
test
xchg
outsl
or
adc
aaa
stos
push
xchg
pop
jbe
inc
add
insb
pop
movsl
xchg
adc
xchg
sbb
sub
push
inc
jae
push
mov
repnz
add
insl
movsb
adcb
mov
jae
orl
inc
rclb
test
cmp
dec
lods
and
or
and
and
xchg
jae
or
jle
jo
subl
addr16
push
mov
push
insb
imul
add
mov
pop
mov
sarl
mov
xchg
or
adc
pop
push
test
outsb
push
xor
xor
into
mov
adc
or
shlb
mov
cltd
pop
pop
jl
insb
dec
mov
loope
ja
pop
insb
push
push
xchg
icebp
jle
std
lods
dec
jnp
jo
je
mov
es
lods
addr16
out
dec
sarb
push
setns
or
push
rorb
ja
cmc
xor
add
imul
lds
or
mov
xchg
pop
stc
insb
dec
adc
xlat
repnz
lods
arpl
pop
adc
add
dec
push
xchg
insb
lds
insb
xor
push
push
jmp
mov
leave
pop
cwtl
insb
adc
stc
fsubrl
imul
insb
and
xchg
adc
adc
shll
mov
and
dec
les
clc
jb
imul
inc
mov
mov
insb
in
in
addr16
jns
int
ret
insb
mov
cld
insb
pushf
aad
fucomi
pop
cmp
bound
pop
or
test
mov
sbb
imull
rolb
cmp
jns
lahf
fisttps
xchg
or
mov
ljmp
sbb
pop
jbe
xchg
sbb
lea
jns
dec
push
add
and
out
mov
mov
mov
or
dec
imul
pop
aam
jbe
insb
cli
xchg
add
je
gs
lret
jne
sar
sub
shrl
push
push
jmp
sub
or
fsubrp
test
add
sbb
cs
jae
jg
and
jmp
and
insb
addr16
movsb
test
sbb
imul
and
rcll
cli
mov
xor
jg
xchg
mov
insb
lds
xchg
mov
insb
push
movsb
imul
inc
sub
sbb
inc
fcomi
je
repz
ficoms
clc
and
aam
icebp
or
or
ljmp
jp
test
js
insb
movsb
fisubs
fistpll
scas
jb
inc
outsb
es
add
adc
or
clc
ljmp
sub
pushf
pop
add
push
fs
ja
push
sbb
xchg
sub
es
cwtl
cld
add
mov
cmp
movsl
rclb
loop
lods
aad
push
dec
sub
ja
mov
jmp
jg
mov
test
pop
mov
fsubrl
xchg
mov
daa
and
sub
insl
outsb
pop
adc
jo
and
or
xchg
add
or
cmp
pop
scas
jns
loope
mov
mov
cmp
cld
aam
jno
cs
inc
push
ret
xor
sub
pop
pop
pop
cmp
bound
push
ljmp
in
add
sahf
insb
dec
push
fwait
insb
adc
sti
scas
rcll
inc
or
mov
fisubrl
lcall
mov
cltd
imul
pushf
push
push
fildll
es
cmc
ret
insb
adc
movsl
mov
jne
mov
cli
dec
push
add
push
lods
stos
jmp
mov
jo
repnz
push
mov
in
arpl
or
aad
iret
popa
das
call
sbb
dec
mov
std
add
xor
mov
in
or
insb
pop
sbb
fldl
and
mov
adc
dec
roll
or
std
cs
xor
xchg
xchg
scas
xorl
gs
and
adc
jmp
push
adc
andl
imul
or
xor
out
sbb
das
adc
adc
and
xchg
rorl
in
cmp
bound
nop
in
cmp
xchg
mov
mov
jmp
xor
cmpsb
insb
adc
nop
and
xchg
dec
adc
sub
bound
imul
insb
imull
adc
cmp
pop
pop
mov
lds
scas
movsb
idivb
sub
mov
rorl
sahf
insb
fsubs
in
xor
data16
xchg
jmp
push
add
push
mov
lret
and
push
sti
mov
imull
fidivrl
mov
int
ret
jno
mov
push
inc
cmp
aas
fs
loope
pop
scas
repz
call
jne
pop
in
push
or
jge
push
cmp
dec
stc
or
mov
push
xchg
hlt
clc
insb
loop
gs
mov
sbb
sub
jb
cmp
push
sub
roll
clc
imul
jae
lea
insb
adc
or
fldcw
jb
andb
imul
idiv
jge
insb
and
xchg
inc
dec
and
or
cmp
cmpsb
in
pop
jg
jl
shrb
in
testb
sub
aaa
insb
cmpsb
stc
sbb
pusha
out
subl
adcl
gs
outsl
xor
pop
dec
cmc
lea
mov
mov
fildl
xor
lret
ficomps
lahf
cmp
fiadds
in
cmp
sbb
insb
pop
cmp
pop
insb
add
movl
xchg
fwait
fs
dec
movsl
repnz
dec
out
in
push
and
in
in
push
xchg
lods
cwtl
cmp
out
push
aaa
in
mov
cmp
adc
cwtl
shrl
daa
lods
sub
add
movsl
push
in
xchg
adc
cmp
push
mov
ja
iret
jnp
or
movsl
push
or
jecxz
lock
nop
push
cli
pop
xchg
xlat
cs
fldt
imul
jns
cld
ljmp
shlb
int3
mov
sub
insb
int
xchg
rcll
push
std
ret
scas
insb
fidivrs
mov
shl
jp
int
je
mov
mov
stc
filds
mov
insb
mov
adc
push
enter
jge
popf
pop
arpl
cmp
stos
imul
insb
pop
mov
sub
mov
pop
das
jecxz
sub
iret
xchg
cmp
insl
insb
daa
push
sbb
pop
cmc
jecxz
insb
push
jb
mov
push
add
inc
insb
iret
test
imul
mov
mov
insb
or
push
sub
insb
loopne
fdivr
dec
add
insb
in
pop
loope
pop
inc
inc
insb
aad
call
xor
aam
fldz
loope
jb
fwait
sbb
jo
adcb
cld
movd
nop
sub
insb
repz
ret
mov
in
loop
jp
jmp
xor
mov
insb
in
push
add
lea
int3
mov
xchg
or
hlt
dec
mov
pop
xchg
xchg
mov
push
jmp
test
outsl
imul
mov
xor
insb
adc
imul
inc
insb
sbb
cmp
fnstenv
adc
aam
rcrb
insb
cmp
ljmp
lock
mov
and
mov
jl
mov
adc
jmp
icebp
fildl
pop
pop
cmpsl
cld
in
ficomps
mull
insb
inc
lahf
pop
scas
sub
adc
pusha
cmp
xor
in
xor
int
cwtl
sti
out
mov
sbb
imul
fstpt
push
test
add
mov
inc
cltd
ds
mov
insb
aaa
jbe
dec
leave
sub
sbb
clc
outsl
xchg
or
insb
xchg
dec
add
shrb
xor
jp
dec
mov
insb
hlt
sbbl
leave
and
data16
mov
hlt
pop
fmul
or
mov
cmp
test
push
outsl
aam
xor
jno
pop
gs
mov
mov
xor
insb
xor
ret
insb
loopne
cmp
lods
daa
add
rcll
mov
in
es
xor
icebp
insb
mov
mov
and
imul
scas
movsl
push
test
insb
cmpl
dec
pop
pop
ss
fnstcw
add
xchg
push
mov
or
inc
ljmp
dec
in
pusha
fwait
dec
ret
paddusw
insb
jge
loope
lahf
popf
adc
pop
outsb
int
test
jle
outsl
push
call
fisttpl
xchg
gs
insb
lods
sarb
pusha
in
jbe
je
lret
lcall
insl
in
clc
sub
lds
cmp
mov
insb
scas
mov
int
repz
test
pushl
insb
cmp
dec
test
pop
loope
mov
es
sub
addr16
sub
or
pop
scas
push
les
cmc
cmp
bound
add
ss
iret
mov
or
xor
xchg
mov
pushf
inc
daa
xchg
imul
cli
add
push
mov
inc
pusha
dec
jb
test
data16
gs
insb
scas
mov
jle
int3
ljmp
cmp
sub
mov
add
rorl
dec
inc
xorb
and
mov
xchg
push
in
inc
aad
insb
cwtl
or
jecxz
sbb
sbb
jmp
jl
popf
and
lret
xchg
fistpl
arpl
lcall
sbb
aas
inc
adc
push
xchg
arpl
imul
aam
imul
xchg
inc
jo
xchg
hlt
sub
dec
mov
xchg
mov
pop
or
and
and
imulb
loop
cs
ds
insb
and
xchg
outsb
pop
mov
in
mov
hlt
imul
inc
nop
mov
imul
lds
jle
mov
xor
sub
insb
mov
adc
aam
sbb
jne
neg
fsubr
fisubs
fsubrl
popa
adc
xchg
popf
divb
sbb
mov
sbbl
inc
xchg
sub
mov
testl
mov
dec
sub
stos
xor
jecxz
test
andb
pop
outsb
std
cs
sub
imul
clc
movsb
pop
fdivl
insb
push
xchg
pop
lea
and
add
mov
test
mov
push
pop
cltd
insb
mov
in
fists
xor
pop
cmp
inc
mov
xor
pop
fiadds
int3
or
jg
sarl
jns
mov
fcomps
icebp
or
jp
in
mov
cmp
cmp
mov
mov
flds
icebp
imul
cmp
enter
mov
test
mov
and
xor
mov
in
insb
inc
fcomp
scas
or
out
gs
bswap
sbb
dec
mov
jle
andl
cmp
mov
or
push
insb
jecxz
out
jp
mov
outsb
insb
push
movswl
inc
or
xchg
shrl
hlt
dec
int3
jecxz
jae
data16
rorb
pusha
dec
mov
addr16
pop
insl
imul
bound
jo
gs
mov
add
cld
or
addr16
hlt
fcomps
add
adc
xchg
push
iret
iret
and
loope
movsl
push
dec
stos
jle
sarb
push
pop
es
adc
pop
pop
cmp
and
ljmp
outsb
push
nop
mov
mov
xor
or
movsb
mov
xchg
mov
decb
data16
mov
or
arpl
pusha
cmp
andl
push
or
adc
lea
jb
adc
icebp
jb
adcl
mov
sar
dec
push
loope
movsb
aas
mov
sbb
xorl
xor
jecxz
ds
pushf
aaa
insb
ss
dec
aas
push
lds
insb
mov
fcomps
fisubrl
popf
arpl
dec
divl
xor
mov
insb
push
sahf
xchg
lret
jecxz
insb
imulb
cmp
imul
ret
mov
imul
xchg
imul
movsb
adc
mov
shlb
xchg
mov
dec
imul
jne
add
faddl
icebp
xor
imul
adc
sbb
pop
xor
xchg
int
lret
cmpl
insb
adc
inc
push
mov
pop
pop
inc
js
jbe
insb
dec
stc
xchg
push
insb
push
and
mov
dec
xchg
aaa
jmp
out
xchg
shrb
popf
or
jae
dec
iret
fnstcw
adc
ret
pop
push
testl
sub
aad
inc
or
pop
das
insb
dec
pop
jg
insl
nop
int3
shll
pop
pop
insb
shrb
fs
in
mov
inc
addr16
or
in
insb
inc
insl
jb
pop
ds
add
mov
insb
mov
insb
push
icebp
jmp
insb
or
fcoms
insb
inc
iret
mov
push
pop
mov
lods
fcos
jb
insb
out
dec
add
or
cmpsl
ret
mov
loope
mov
insb
dec
mov
adcl
mov
sub
int3
pop
lods
xor
push
insb
test
sbb
push
or
test
jl
cmp
inc
hlt
and
push
jle
push
xchg
adc
xchg
sub
adc
push
push
jmp
jecxz
ficoms
pavgw
call
jb
aas
mov
aam
cli
insb
fwait
mov
ffree
add
sti
clc
dec
movsb
sub
popf
xor
mov
insb
fcoml
add
cmp
call
mov
mov
dec
rolb
and
xlat
mov
test
aad
mov
cwtl
mov
or
cmc
faddl
pushf
dec
je
push
push
ds
mov
jl
lea
aad
pop
hlt
mov
add
cld
fidivrs
pop
ljmp
hlt
adc
jp
sbb
lea
imul
mov
int
pusha
in
and
or
fistps
cmp
fsts
mulps
push
stc
mov
adc
cmp
adc
mov
xchg
fsubrs
or
fwait
into
sbb
repz
fidivs
push
sub
dec
mov
jns
xlat
es
mov
ret
insb
adc
out
pop
add
sub
imul
jl
mov
add
dec
sbb
out
mov
gs
mov
pop
in
sbb
je
movsb
pop
push
arpl
lock
outsl
mov
fcmovnu
insb
inc
add
int
sbb
jns
add
insl
lods
push
dec
cmp
xor
insb
mov
ss
imul
mov
pop
lock
and
adc
pop
stos
cmp
gs
mov
pop
pop
dec
paddsb
std
insb
add
xchg
xor
push
ljmp
jmp
in
xor
pop
dec
aaa
shll
in
jmp
pop
test
inc
adc
insb
cmp
int3
imul
push
insb
xchg
icebp
adc
movsl
data16
and
mov
push
outsb
mov
sub
idivl
test
aaa
sub
or
dec
les
push
sbb
xor
insb
jnp
in
mov
insb
push
push
fisubrl
loope
fdivrs
pop
data16
leave
add
xor
subl
daa
mov
mov
insb
sub
movsl
mov
ret
insb
and
clc
inc
dec
pushf
xor
in
mov
insb
pop
jae
sbb
inc
out
jg
cs
not
insl
sub
add
jge
sbb
lret
cld
inc
pop
pop
into
and
insb
nop
shlb
pop
in
mov
or
jb
insb
sub
add
push
xchg
mov
ljmp
in
mov
pop
repnz
repz
lock
or
jb
mov
fldcw
push
pushf
aam
sub
mov
aad
pop
test
push
dec
push
gs
jbe
popa
mov
mov
pop
rcll
leave
roll
lret
lcall
jp
push
arpl
cmpsb
xor
pop
inc
shrb
imul
sbb
jo
sbb
adc
mov
push
insl
insb
xorb
and
ss
ja
gs
daa
roll
les
jle
insb
in
sbb
dec
insb
dec
movl
insb
jl
lods
mov
add
in
fdivs
mov
daa
test
xchg
push
cltd
rolb
in
fwait
xor
dec
repz
insb
xchg
or
inc
xlat
push
popa
outsb
inc
pop
mov
pop
insb
pop
lahf
int
and
insb
xlat
in
adc
add
insb
lea
sub
push
inc
fldcw
and
lret
jge
int
stos
mov
insb
lock
jg
mov
ret
test
jle
mov
popf
insb
stos
jae
inc
lock
stos
leave
imul
dec
cltd
jl
loopne
imul
insb
add
stc
dec
insb
sbb
daa
aas
and
push
loop
mov
jmp
and
insb
sub
in
push
insb
lea
or
lds
push
dec
call
xchg
orb
insb
fimull
into
mov
xor
insb
bound
test
imul
cwtl
cmp
insb
add
xchg
mov
pop
iret
jg
fwait
push
mov
or
rcrb
xor
lods
pop
js
jae
stos
push
or
cld
clc
sahf
pop
hlt
cmp
adcl
xchg
testl
adc
push
sti
insb
push
sbb
pop
push
gs
mov
hlt
dec
insb
cmp
jmp
scas
insb
mov
sub
inc
int
mov
cmp
and
loopne
pop
pushf
fs
lret
stos
aaa
mov
insb
xchg
push
out
mov
insb
mov
mov
sti
insb
shlb
adc
ret
cli
sbb
aas
mov
inc
pop
fdivs
lods
mov
adc
je
insb
mov
lods
in
in
aam
test
lret
dec
adc
ret
dec
mov
insb
cltd
lahf
xor
pop
mov
push
inc
adc
mov
in
xchg
sbb
popf
cmp
or
pop
pop
int3
mov
aad
ljmp
xor
popa
xor
insb
dec
call
cltd
and
inc
les
cmc
dec
pop
lods
sub
push
push
ret
and
cmpsl
jl
lods
je
hlt
cmp
cld
jle
out
pusha
cmp
into
xlat
mov
mov
test
jno
pop
cmp
aam
cmp
adc
bound
aam
fsts
xchg
and
jb
insb
xchg
cmp
mov
pop
xchg
jno
stos
mov
fimull
inc
inc
je
insb
nop
f2xm1
int3
rcrb
insb
mov
dec
outsb
insb
pop
ja
aad
push
add
fs
in
jnp
mov
dec
mov
push
xor
ja
repz
mov
repnz
popf
iret
pop
fldl
mov
sub
imul
pop
rorb
or
scas
xchg
nop
insb
popf
pop
sbb
loopne
fldcw
out
popa
lcall
lds
insb
xchg
lods
stos
jo
loopne
pop
notl
dec
jb
inc
mov
imul
sbb
xor
clc
jmp
mov
mov
pop
push
idiv
or
or
xlat
sbb
and
insb
int
ret
int3
push
jno
outsl
adc
xor
insb
decl
jle
imul
jecxz
test
pop
inc
xor
insb
sub
add
inc
dec
push
imul
fsubl
lahf
js
les
loop
jnp
scas
fsubrs
pop
xor
dec
orb
jb
in
sub
sbb
or
sahf
sbb
mov
adc
dec
jne
cmp
jno
insb
xchg
insl
and
sub
insb
repnz
push
mov
ljmp
fildl
pop
mov
push
or
mov
mov
insb
aad
push
std
dec
int
xchg
jmp
insb
out
sahf
dec
ljmp
subl
out
and
xchg
xchg
insb
mov
jg
push
rorl
loope
shrb
lcall
enter
mov
scas
lods
popa
cmpl
in
call
insb
mov
loopne
mov
rolb
dec
sub
push
ret
insb
leave
push
gs
dec
pop
insb
push
mov
hlt
xorl
inc
lods
movsb
push
ds
shll
mov
jl
mov
in
mov
pop
xor
mov
daa
in
lea
mov
in
sbb
mov
or
xor
mov
mov
add
fwait
stos
jne
dec
sbb
insb
movsb
lret
xchg
jns
les
insb
mov
adc
js
dec
jb
insb
mov
fisubs
imul
clc
mov
adc
out
imul
icebp
insb
pshufw
mov
scas
insb
mov
stos
add
dec
xchg
inc
imul
mov
xchg
iret
int
pop
dec
mov
stos
jl
out
cs
loopne
sub
push
cli
leave
je
and
pop
insb
or
divl
inc
call
call
pop
add
in
xchg
lock
xchg
insb
leave
sbbl
cmpsb
insb
cmp
push
and
push
in
jl
xor
pop
insb
xor
and
sub
mov
in
in
inc
stos
jb
orb
mov
cmpl
fnstcw
xor
push
adc
les
mov
arpl
sbb
in
outsl
stc
es
adc
rcll
into
hlt
cmp
cltd
and
push
int
daa
inc
cmpsb
les
scas
imul
insb
syscall
sbb
cld
sub
aaa
insb
push
cmp
and
add
xchg
sahf
pop
adc
add
mov
lods
push
inc
arpl
xchg
jmp
aaa
mov
es
enter
add
jno
and
adc
mov
cmpsl
in
inc
aas
lret
xor
add
shrb
sbb
shrl
cs
pop
xchg
xor
push
sub
adc
push
insb
cmpsl
test
scas
cmp
into
outsl
insb
dec
subb
sti
cld
mov
mov
push
jbe
in
test
adc
pushf
xchg
lcall
cmp
or
inc
pop
push
insb
ss
repnz
je
pushf
xchg
movsb
pop
aam
pop
cmpb
gs
cmpsb
jecxz
jl
cli
dec
pop
cmp
lahf
adcb
or
aas
fldenv
int3
in
outsb
bswap
inc
cmp
mov
sub
data16
and
sbb
insb
enter
in
insb
test
dec
add
imul
push
out
xor
xchg
testb
in
js
aas
scas
jno
insb
xchg
sub
in
or
xchg
test
xchg
xchg
dec
popf
mov
outsb
mov
enter
in
insb
stc
pop
mov
sub
add
imul
pop
sbb
test
dec
jl
gs
xor
mov
fldcw
insb
inc
inc
xor
insb
aam
jbe
nop
cmp
insb
lret
mov
popa
dec
xchg
pop
in
repnz
adc
in
imul
outsb
and
cli
or
inc
arpl
loope
mov
xlat
enter
lret
cmp
js
mov
out
ret
and
dec
aad
ret
dec
lock
sub
mov
imul
test
insb
pop
scas
cs
out
xor
jp
gs
or
ret
cmp
inc
lahf
es
sub
rorl
stc
lret
jmp
cmp
leave
insb
adc
jo
xchg
loop
mov
cmpsl
dec
test
nop
pop
sbb
scas
insb
sub
add
insb
in
xor
or
add
mov
sbb
or
push
ret
xor
in
frstor
test
mov
popf
iret
mov
pop
je
cmp
test
mov
insb
fwait
in
jmp
fmul
xor
ja
inc
cmp
push
idivl
push
into
insb
cld
lds
insb
shrb
out
jge
shrl
mov
gs
jns
imul
sbb
push
dec
aam
jbe
insb
lcall
mov
cld
aad
xchg
xchg
mov
in
repz
push
insb
jecxz
or
or
mov
and
or
movb
mov
pop
in
mov
push
jnp
insb
imul
xchg
or
mov
gs
insb
int3
imul
cmc
in
filds
add
insb
dec
sbb
jl
dec
insb
imul
cwtl
adc
insb
test
neg
cvtps2pd
jo
inc
dec
xchg
stc
sbb
sti
lret
stos
leave
mov
hlt
xor
imul
inc
sub
ja
or
add
es
cmp
xchg
popa
or
lock
mov
insb
inc
fcomps
mov
insb
call
imul
lret
sbb
mov
sub
fadd
mov
js
jge
lahf
nopl
addr16
xchg
repnz
movsl
out
jbe
push
adc
and
test
dec
pop
xor
mov
dec
mov
mov
insb
mov
mulb
data16
xor
sub
std
rcrb
insb
in
or
sub
mov
jmp
or
test
insb
jbe
mov
or
xor
shrl
push
insl
je
sub
add
mov
mov
aad
insb
jb
arpl
mov
cmovs
cmpsb
cmp
xchg
mov
pop
imul
clc
adc
clc
pop
ret
test
test
and
sbb
sub
out
cmp
lods
mov
ret
int
mov
scas
insb
mov
dec
sbb
push
adc
popa
insb
push
jle
out
sub
lock
sbb
movsb
arpl
enter
cmp
insb
push
adcl
cmovb
ds
cmpsl
imul
in
mov
and
xor
insb
push
and
lret
ror
inc
fs
mov
mov
insl
insb
dec
jg
xchg
jle
test
insb
clc
and
jl
sub
test
std
pop
push
push
and
mov
insb
pop
mov
mov
repnz
xor
add
jle
jbe
push
fdivr
fs
in
pushf
out
insb
sbb
and
scas
insb
addr16
or
push
test
sub
mov
repz
insb
jle
dec
or
jecxz
inc
insb
lea
push
add
xorl
mov
gs
inc
jb
insb
cli
dec
pop
push
or
test
dec
movsb
sub
xor
mov
clc
dec
faddl
rcl
xor
movsl
dec
and
insb
lods
je
ret
xchg
dec
es
sbb
mov
mov
addr16
addb
pop
sbb
shll
inc
sti
movnti
pop
jo
and
inc
dec
orb
inc
insb
scas
and
push
insb
in
dec
fs
sub
jmp
lret
sub
imul
or
mov
xor
cmp
and
das
sti
push
std
push
push
sbb
sbb
sub
repnz
shr
xchg
cmp
add
mov
add
pop
aam
insb
out
jp
push
lock
jns
arpl
pop
jno
loop
dec
xchg
push
mov
cli
insb
sbb
outsl
cwtl
int3
push
mov
and
add
push
and
jmp
insb
cmp
loope
mov
out
lods
hlt
repz
pop
mov
inc
dec
xchg
jp
adc
cmpsb
xchg
insb
lods
ds
mov
push
rcrl
outsl
xchg
xor
or
push
xchg
popa
jle
mov
in
push
mov
pop
or
mov
sbb
out
rcll
shrb
and
repz
pop
movsb
mov
imulb
push
dec
in
mov
dec
pop
je
fnstsw
cmpsb
dec
xor
sti
in
roll
lock
cmpsb
cmp
sbb
call
mov
fmull
pop
inc
xchg
mov
jb
sub
push
add
aam
and
shrb
pop
movsb
mov
pop
push
into
mov
dec
jp
push
int3
nop
enter
jne
inc
sub
mov
mov
pop
subl
xchg
dec
add
jbe
into
or
push
xchg
cmc
fiadds
xor
in
shrb
out
loope
push
insb
ja
push
int
mov
xchg
pop
cmpsb
icebp
imul
sbb
popa
sbb
adc
lcall
xor
cmp
scas
mov
outsl
loope
cld
loopne
pop
add
insb
cmp
ucomiss
mov
rcr
leave
iret
insb
cmp
in
in
pop
in
das
aaa
mov
movsb
inc
enter
stc
and
es
popf
adc
out
mov
das
dec
pop
cli
into
dec
sub
mov
push
push
pop
adc
out
mov
mov
out
into
mov
insb
leave
cmp
bound
fldt
push
into
sti
jbe
fstps
jle
push
insb
mov
insb
mov
ret
xorb
dec
push
mov
jle
incb
add
loopne
push
mov
jbe
insb
mov
mov
stos
insb
mov
jo
push
cmp
test
insb
xchg
sbb
mov
cmp
pop
sbb
jmp
jle
das
jecxz
lods
add
out
push
lahf
and
dec
orb
lds
pop
cmc
xor
negl
and
jns
lds
dec
pop
xchg
aam
insb
outsl
dec
adc
mov
lds
cmp
dec
sbb
mov
ret
popa
loop
push
fldcw
jns
xor
sbb
das
jbe
push
cld
rolb
mov
pop
mov
and
decl
inc
add
arpl
mov
scas
mov
popa
dec
mov
pop
xchg
xchg
inc
push
mov
add
loopne
call
enterw
mov
sbb
sub
imul
inc
lods
aad
loope
daa
mov
and
xchg
mov
insb
into
test
xchg
xor
into
and
insb
and
gs
inc
jae
clc
pop
jl
inc
movsl
mov
mov
add
cs
test
nop
push
cmp
mov
xor
lea
pop
dec
loope
mov
mov
adc
sub
inc
stos
inc
repnz
dec
xor
pop
sub
pop
sbb
adc
xor
lods
imul
xchg
imul
outsb
insl
loope
es
rolb
icebp
mov
inc
and
inc
imul
mov
push
adc
int3
jbe
ret
mov
and
mov
ljmp
sbb
int
mov
dec
arpl
leave
popa
movsb
int3
inc
fdivrl
push
das
jmp
inc
inc
inc
in
fcoml
inc
popf
xor
notl
test
sbb
aad
loopne
ret
jb
cmpb
imul
cmp
cmp
xor
andb
insb
adc
add
out
mov
jne
or
sbb
shrb
jno
jae
cmp
xchg
imul
ret
ja
cmpl
dec
aam
imul
cmp
mov
in
add
mov
mov
les
insb
sbb
adc
in
jmp
insb
mov
insl
push
jge
insb
jne
or
xchg
inc
push
insb
in
or
pop
mov
pop
cli
popa
cmp
pmuludq
push
cli
sub
mov
mov
pop
cmp
insb
mov
in
push
insb
shlb
hlt
imul
push
test
insb
clc
adc
pop
insb
xor
call
ss
int
test
sbb
icebp
test
or
xchg
mov
inc
sbb
mulb
mov
test
jmp
insl
cmp
cmp
imul
adc
repz
daa
leave
cld
xor
mov
aam
and
int3
push
jb
shrb
into
bound
cmc
lahf
out
in
lods
push
sub
inc
scas
loope
decb
dec
push
mov
pop
insb
and
inc
pop
add
sti
insb
xchg
add
mov
jl
lods
das
mov
insb
xchg
mov
es
lock
std
loop
popf
or
lret
mov
cmp
insb
out
cwtl
js
push
jge
cmpsl
insb
jecxz
xchg
and
jbe
pop
test
outsb
call
push
mov
xchg
sbb
pop
insb
mov
sbbb
sarl
xor
arpl
add
cmc
mov
addr16
and
subb
ljmp
adc
loope
add
ret
test
subl
push
or
cmpsl
scas
lods
je
stos
imul
in
std
je
imul
xchg
inc
pop
lahf
insb
imul
or
lret
insb
mov
xor
hlt
sbb
les
mov
insb
push
movsl
inc
cmp
in
mov
inc
adc
xchg
lret
mov
cmp
imul
jecxz
mov
call
xchg
jg
fimuls
subb
pop
sti
pusha
imul
adc
insb
fwait
or
imul
pushf
scas
inc
or
fs
inc
mov
aam
fmull
insb
mov
and
dec
out
inc
insb
rorb
sub
lahf
ja
fnstsw
push
adc
ret
jecxz
sbb
cs
push
in
jno
jo
xchg
insb
or
jge
pop
cld
adc
idivb
mov
xor
sub
mov
xchg
push
subl
sub
dec
and
mov
jmp
jge
inc
sbb
cmp
push
pop
lcall
je
daa
dec
outsb
mov
out
inc
pop
dec
xlat
rorb
cmp
jne
bound
imul
and
push
cmpsb
push
xchg
adc
mov
iret
data16
and
lds
stos
inc
rcrb
in
fwait
lret
inc
insb
cmp
and
jecxz
or
insl
push
stos
mov
xor
add
add
insb
cmp
and
or
pop
pop
addr16
test
in
inc
pop
mov
insb
lea
push
gs
insb
xchg
in
cmpsb
punpcklbw
out
call
sub
in
sti
add
push
or
xchg
or
cwtl
mov
scas
movsb
repz
pop
loopne
test
xchg
das
adc
iret
or
add
lret
insb
and
shr
mov
inc
mov
sbb
int3
insb
adc
das
xor
jecxz
jmp
cli
mov
fwait
xor
or
sub
repnz
cmpsl
ret
js
imulb
pop
or
fwait
test
les
lds
aad
rcl
sub
popf
mov
fwait
imul
xchg
inc
insb
inc
loope
clc
gs
imul
or
cld
push
in
pop
sbb
shrl
mov
shrl
adc
push
das
dec
mull
jns
insb
hlt
fildl
imul
mov
xlat
jno
push
bound
xor
les
stos
inc
mov
cli
add
xor
and
adc
loop
or
mov
hlt
popf
imul
rorb
mov
arpl
jle
sbb
movsb
cld
addl
enter
insb
das
loop
mov
sbb
push
rclb
movsb
cli
xlat
insb
cwtl
inc
lret
jl
mov
insb
push
xchg
cmc
scas
dec
xor
cltd
pop
push
fists
std
in
jbe
loop
jmp
push
jmp
fidivrs
out
or
mov
cld
imul
ret
pop
inc
lahf
fdiv
adc
xor
fmull
adc
popa
insb
inc
pop
daa
imul
gs
mov
inc
insb
ss
test
push
int
insb
jne
jg
inc
push
imul
adc
jb
insb
push
outsl
aaa
mov
adc
repnz
pop
movsl
repnz
int3
mov
ds
dec
cmpsb
xchg
stos
sub
pop
insb
or
es
and
das
rcr
imul
data16
insb
add
mov
clc
test
insb
fldl
aaa
sub
daa
out
xchg
into
adc
inc
mov
dec
insb
iret
pop
mov
lea
inc
out
icebp
or
fsubrl
push
dec
in
sbb
movsb
mov
sbbl
add
pushf
leave
shll
xorb
insb
pop
sti
in
fsubrl
lock
stos
js
xchg
ljmp
lea
jle
insb
gs
lahf
enter
insb
jmp
and
test
inc
cmp
or
fisubrl
stc
in
mov
cld
in
data16
mov
pop
jne
mov
stos
aam
and
xchg
jo
ja
movsl
pop
ret
popa
insb
and
mov
pusha
adc
add
les
ret
jmp
pushf
inc
sbb
xlat
mov
lret
inc
imul
out
adc
mov
sbb
xchg
mov
inc
lock
cltd
aaa
jo
pop
pop
xor
int3
pop
cmp
repz
test
mov
xlat
lcall
fidivl
in
jl
dec
clc
stc
stos
in
movsb
insb
enter
stos
jmp
pop
insb
add
mov
pushf
dec
mov
or
jno
and
movsl
xchg
imul
adc
cmp
les
mov
pop
imul
pushf
add
jb
mov
pop
int
push
insb
jne
pop
jae
mov
jno
adc
subl
repnz
clc
insb
cmp
icebp
sets
pop
mov
jecxz
std
mov
aaa
mov
push
push
jno
pushf
mov
push
or
cmp
leave
sub
in
sbb
imul
xor
xchg
or
mov
adc
lods
pop
movsl
scas
shll
adc
sbbb
and
fnstcw
jl
push
insb
xor
hlt
enter
dec
ds
push
mov
aas
pop
push
cmp
mov
dec
imul
cmp
dec
cmc
insb
notb
mov
das
insb
hlt
ss
fildll
lret
movsl
dec
or
repz
sub
insb
retw
pop
test
inc
mov
in
push
or
clc
xchg
stos
xchg
cltd
stos
addb
loopne
adc
cs
and
fnstsw
sub
pop
add
jecxz
cmp
mov
das
ja
and
mov
cmpsl
adc
leave
adc
sbbl
add
xchg
mov
xchg
cmp
sub
repnz
popa
jbe
stos
mov
cmpsb
imul
rolb
aas
jns
movsl
out
push
pop
dec
insb
adc
das
mov
test
add
jnp
adc
and
icebp
insb
repnz
fisubl
dec
inc
test
pop
mov
outsb
insb
xchg
enter
test
insl
arpl
or
xor
mov
out
int3
das
or
lock
insb
stos
in
cmpsb
loop
jno
data16
cli
push
push
add
rclb
mov
aam
insb
in
cmp
insb
mov
lcall
mov
pop
insb
adc
push
xchg
ljmp
xchg
cltd
daa
mov
repz
jmp
jae
scas
mov
aam
pushf
xor
add
loope
sbb
je
insb
jne
sbb
sahf
push
pop
in
inc
movsb
popa
inc
insb
sub
int
insb
addr16
cmpsl
in
inc
pop
stc
xchg
insb
push
sub
sbb
fwait
insb
add
mov
sbb
loopne
insb
outsb
add
jo
insb
pusha
or
repnz
adc
popf
insb
cmp
xchg
dec
xor
insb
xor
adc
subl
lods
cmp
mov
xor
shl
insb
scas
dec
bound
fstl
insb
sbb
daa
leave
push
or
cmp
lahf
test
xchg
repnz
insb
aas
jnp
xchg
loopne
ss
pop
mov
xor
lea
fnstcw
out
xchg
insb
mov
daa
mov
out
imul
js
xchg
imul
sbb
ss
ds
sbb
mov
and
add
cmp
xor
jecxz
les
insb
and
arpl
mov
insb
push
inc
inc
mov
mov
insb
cli
pop
repz
dec
adc
out
mov
mov
sbb
adcb
repz
add
insb
ja
jecxz
pop
xor
jl
sub
ljmp
jbe
ss
lea
mov
jle
push
mov
add
popf
insb
pop
inc
inc
cmp
test
mov
in
mov
lods
arpl
xlat
or
rcrl
insb
shlb
sbb
mov
and
push
inc
xchg
insb
popf
add
or
push
push
adc
cmp
jo
rcl
imul
cmp
sub
fmuls
shrl
dec
and
mov
fisubrl
in
mov
arpl
xor
cmc
insb
aad
and
inc
xchg
adcb
ret
cli
call
sahf
mov
mov
xchg
imul
sbb
or
mov
fsubs
pop
loop
out
lods
mov
xor
insb
hlt
add
fwait
cmpsb
pop
mov
xchg
subb
add
ja
push
in
sbb
insb
push
mov
mov
and
adc
ret
mov
add
outsb
xor
pushf
jecxz
insb
fsubs
mov
mov
and
insb
out
add
mov
leave
dec
mov
mov
mov
pushf
adc
mov
enter
sbb
ss
cmp
dec
or
push
or
ljmp
out
inc
nop
bound
mov
push
xchg
out
outsl
insb
mov
cmpb
in
push
pop
sbb
test
jne
mov
sub
insb
ret
iret
inc
mov
enter
pushf
jmp
ds
into
sub
iret
shl
mov
xchg
inc
icebp
insb
xlat
ja
mov
scas
xor
insb
jns
outsl
push
clc
shrb
decb
mov
push
dec
jo
insb
sbb
push
mov
inc
mov
loopne
repz
push
outsl
pop
bound
test
dec
mov
xor
ljmp
iret
in
xchg
les
notb
fdivl
xor
mov
xchg
adc
mov
scas
sub
push
adc
mov
sti
sarb
push
jne
insb
jmp
lds
or
cli
insb
incl
push
outsl
insb
pop
sbbl
hlt
in
lret
repz
mov
sbb
in
jmp
fistl
jo
and
fldcw
push
in
cld
lret
jne
insb
sub
pushf
jmp
and
adc
pop
insb
popa
stc
ret
xchg
enter
jno
insb
push
andl
jmp
mov
and
repz
add
xor
out
sahf
test
subl
and
bound
scas
aam
imul
and
pop
push
popa
push
dec
xchg
out
dec
insb
jno
rcrb
es
sbb
mov
insb
sub
or
in
loop
mov
mov
repnz
pop
gs
lea
cld
adc
insb
xchg
cmp
adc
dec
ds
jl
outsb
jne
xlat
jae
sbbl
adc
loope
in
mov
mov
push
push
pop
jecxz
scas
loopne
pusha
adc
add
leave
and
mov
insb
and
pop
push
repz
insb
popa
test
sbb
scas
clc
subb
in
pop
movsb
push
repnz
xchg
pop
pop
pop
scas
dec
divl
lret
pop
dec
sub
cmpl
ret
imul
insb
sbb
sub
into
pop
fcomps
dec
lods
test
aam
or
imul
sub
sbb
int
lods
ret
jg
add
xor
insb
xor
jno
insb
dec
in
sub
setg
cmp
insb
shlb
sub
add
mov
push
insb
lea
pop
fwait
and
mov
xor
cld
add
ficomps
cmc
subl
loope
aam
add
xor
pop
jmp
cwtl
out
sub
in
lahf
mov
jmp
insb
jle
mov
je
mov
in
push
pop
jp
jecxz
dec
add
insl
out
movsb
lcall
adc
pop
pop
loop
mov
loope
pop
sbb
repz
sbb
insl
jp
pop
loop
jnp
jmp
cmp
pop
je
mov
xor
int
dec
ss
mov
xor
pop
insb
mov
int
insb
gs
mov
lods
push
or
in
insb
adc
dec
aas
inc
dec
mov
dec
pushl
psubsw
mov
pop
cmp
lods
test
xor
xchg
sub
test
loopne
lcall
orl
insb
cld
out
movsb
mov
lret
push
xchg
dec
jg
cwtl
insb
call
imull
xchg
cwtl
shlb
arpl
insb
pop
mov
push
push
in
shlb
hlt
ds
and
mov
jle
jbe
es
out
fisubrl
and
lret
pop
cmp
fdiv
jecxz
jne
gs
int
inc
adc
pop
adc
fisubrs
xlat
and
sti
jae
pop
sahf
inc
push
cs
xchg
adc
and
dec
adc
cmpsl
jno
js
mov
dec
sub
rclb
mov
outsb
inc
mov
mov
dec
fldcw
pop
dec
and
int3
sarl
imul
jge
inc
or
xor
aas
jae
pop
dec
xchg
out
jnp
arpl
mov
cmp
add
out
cmp
jl
subb
xor
dec
cld
js
das
leave
jno
dec
test
sbb
loopne
lret
mov
orl
xchg
lods
jmp
ds
jne
jnp
pop
test
pop
gs
pop
into
stc
xchg
mov
clc
xchg
sarb
mov
repz
cwtl
int3
stc
cmp
insb
les
mov
dec
insl
insb
jmp
mov
ja
jne
jno
or
fldl
mov
insl
jge
mov
dec
xchg
ret
subb
inc
mov
test
pushf
mov
dec
mov
nop
mov
lods
jno
xor
in
into
mov
insb
inc
pop
iret
addr16
popa
add
lea
push
das
popf
pop
lods
mov
add
fdivs
jg
mov
cmp
jmp
test
fnstenv
mov
xor
inc
imul
push
jl
adc
cmp
sbb
pop
cmp
dec
aad
scas
enter
jle
lea
pop
inc
int
lahf
push
sub
fwait
dec
pop
add
leave
aas
lea
mov
push
and
adc
mov
sub
pop
outsl
insb
nop
loope
int3
roll
pusha
xor
pop
gs
pop
mov
imul
push
cli
jb
or
add
mov
push
cwtl
xchg
xor
cmp
lcall
cld
adc
data16
adcl
dec
aad
or
push
insl
pushf
rdtsc
sbb
pushf
mov
test
adc
mov
insb
jmp
in
push
sbb
ja
test
int
mulb
sub
and
popa
adc
ja
or
stos
cmc
add
pop
dec
scas
data16
sub
mov
and
cmpsb
aam
in
pop
cltd
in
push
mov
shlb
inc
xchg
jg
jmp
jnp
or
or
dec
push
and
jns
sub
movsb
inc
push
iret
scas
iret
jo
pop
in
xor
jle
jbe
dec
imul
mov
inc
mov
movsl
push
jno
jecxz
not
aas
dec
sar
enter
add
inc
pop
dec
add
and
pusha
test
sub
out
xchg
mov
sbb
and
fildl
push
or
jp
sbb
lock
add
cli
arpl
sbb
jecxz
add
jge
dec
or
push
push
and
out
in
out
add
push
or
orb
cmpl
and
fildll
cltd
in
mov
fwait
nop
and
xchg
xor
out
mov
int3
lret
add
push
push
sub
cmp
rclb
imul
test
je
movsl
sub
sub
mov
inc
lea
pop
js
adc
sbb
pop
mov
or
push
in
les
ret
out
pop
xchg
jle
sub
dec
pop
sub
and
mov
pop
lds
call
cld
std
mov
fildll
loopne
and
scas
arpl
dec
rolb
out
sub
xlat
ja
dec
mov
int3
out
adc
repz
scas
add
insb
mov
hlt
ja
cmc
inc
shl
pop
insb
pop
loopne
cltd
adc
fs
insb
mov
xor
insb
xchg
or
call
loopne
sbb
shrb
fsts
insb
aas
movb
sbbb
lods
inc
imul
mov
cmc
xchg
lods
xchg
popa
jle
jne
insb
push
sbb
enter
fldcw
rorl
dec
pop
pop
ljmp
fs
mov
pop
testb
rorb
inc
fstps
insb
xchg
sbb
mov
sbb
jb
add
and
or
lods
mov
xabort
insb
in
outsl
cmp
pop
aas
inc
insb
mov
mov
cmpsl
xor
sbb
pop
mov
sbb
cmp
dec
mov
loopne
outsb
faddp
dec
jno
imul
xchg
and
mov
imul
pop
sbb
jl
loop
fisubrl
push
cmp
dec
insl
sbb
aaa
xor
int3
gs
pusha
sbbl
ret
push
insb
fadds
cmpsl
inc
int3
loopne
insb
mov
in
pop
loop
pop
push
insb
shlb
xor
jecxz
push
adc
daa
cmc
enter
mov
subb
and
out
aam
insb
cmp
dec
pop
insb
xlat
hlt
in
dec
fistpl
push
xchg
icebp
arpl
and
rcrb
sbb
movb
mov
push
pushf
cld
cli
push
mov
int
repnz
lock
les
lea
dec
jb
add
insb
gs
scas
adc
mov
popa
hlt
cmp
fdivl
insb
pop
lahf
xor
stos
int3
xchg
inc
mov
movsl
sahf
sub
subl
notl
aas
scas
clc
aam
fistl
mov
dec
stos
fnstsw
lods
gs
ja
push
lods
jmp
vmread
mov
sbb
sti
aas
xchg
jmp
inc
mov
cmpl
insb
sbb
sbbb
insb
jo
adc
sbb
pusha
or
mov
adc
mov
int
jae
cwtl
push
mov
insb
repnz
fistps
insb
pusha
cltd
xor
xchg
xor
roll
sti
insb
scas
jae
xchg
pop
mov
mov
inc
fcoms
mov
insb
shl
mov
mov
xor
ja
insb
popf
dec
pusha
out
dec
rorb
cmp
push
cmp
insb
andl
cmp
dec
mov
cmpsb
mov
iret
dec
out
or
dec
lods
jne
adc
xchg
mov
mov
lcall
mov
push
in
insb
jle
movsb
inc
jmp
ja
in
mov
pop
out
and
insb
in
lcall
imul
inc
dec
aad
outsb
jo
xor
gs
xor
enter
adc
hlt
push
insb
adcb
adc
ret
add
insb
loope
dec
jmp
addl
add
jl
insb
jle
cmpsl
cmp
mov
lods
lret
shrb
adc
and
jo
mov
adcb
or
ud2
outsl
mov
gs
aam
lea
in
outsb
fldcw
daa
mov
ds
inc
push
insb
jl
lods
mov
in
adc
gs
sbb
repz
or
jb
sahf
dec
lods
inc
cmp
xchg
fwait
and
xor
ret
divl
push
rorb
insb
sti
add
push
jge
mov
fisubl
xchg
mov
jno
push
mov
test
js
inc
sbb
mov
outsl
nop
xor
in
push
call
dec
insb
mov
cmc
or
adc
pop
add
push
insb
mov
push
fcomps
cmpsl
jle
aas
or
cmc
subb
insb
push
pop
lret
jmp
bound
jo
test
aam
stc
push
lahf
mov
test
cld
fnstsw
ret
repz
insb
rorb
mov
out
insb
pop
mov
xchg
in
insb
add
add
icebp
enter
clc
lods
insb
insb
arpl
daa
add
cmp
into
insl
int3
jbe
jnp
in
jno
xchg
in
jp
fldcw
popf
in
or
mov
test
insb
dec
push
rclb
jbe
mov
add
jg
insl
ljmp
sub
or
repnz
sbb
mov
sbb
insb
aaa
add
pop
inc
inc
mov
pop
movsb
pop
lret
aam
insb
out
push
sbb
pop
dec
mov
lods
int3
xchg
lahf
pop
loope
cli
call
cmp
insb
or
dec
fnstenv
sbb
shrb
jns
inc
stos
outsb
add
mov
arpl
out
mull
test
push
pushf
jmp
lods
fs
mov
add
imul
mov
sti
pop
testb
push
roll
int3
lret
clc
out
test
ljmp
test
adc
imul
pusha
les
mov
jle
filds
dec
sbb
stc
test
push
popa
lods
add
cmp
mov
mov
insb
sbb
addr16
xor
fsubr
jge
imul
push
shlb
pop
jb,pn
xor
xchg
mov
dec
insb
out
pop
orb
mov
lock
xlat
mov
outsb
scas
add
shrl
pop
int
out
insb
loopne
mov
push
cmpsb
in
sahf
pop
in
lcall
add
insb
ljmp
jnp
ret
test
pop
sub
adc
cmc
movsl
xchg
daa
mov
pushf
pop
outsb
xchg
pop
lret
push
pop
leave
lock
je
rcll
jp
fiadds
mov
nop
int
cwtl
orb
cs
sbb
sub
bound
loopne
dec
add
mov
push
fmull
dec
insb
popf
jp
xchg
jno
mov
stc
xchg
push
xchg
in
inc
imul
pop
cmp
jns
inc
insb
pusha
adc
cwtl
stc
cmp
pop
sub
out
sbb
jecxz
mov
ja
pop
sub
mov
loope
insb
int
cmpsb
gs
lea
inc
xchg
shll
or
cmpsb
jmp
mov
popf
push
adc
out
lret
jno
pop
aam
loop
pop
insb
pop
dec
sbb
in
inc
imul
mov
push
in
in
jp
in
fs
sbb
mov
mov
jecxz
sbbl
insb
inc
pop
dec
outsl
add
sbb
and
push
add
sub
pushf
mov
adc
and
sub
enter
in
add
push
mov
stos
add
mov
test
jle
xchg
push
mov
pop
xchg
fdivrl
into
sub
enter
insb
or
inc
stos
pop
dec
jne
mov
cltd
sub
or
push
icebp
mov
adc
add
push
cmp
inc
mov
test
push
pusha
push
adc
gs
adc
lcall
and
sbbl
jns
or
mov
shrl
in
jge,pn
mov
xchg
xor
mov
mov
shlb
jb
fcmovne
sarl
lods
outsl
push
mov
add
sub
stos
fdivl
pop
xchg
add
jmp
js
dec
jg
xlat
lods
popf
out
mov
aam
imul
push
mov
out
add
fisubrl
xor
xor
in
pop
inc
cmpb
shrb
jecxz
or
sub
scas
outsb
dec
sub
int3
push
xchg
into
adc
insl
cld
test
lea
push
je
jno
int3
lds
jb
xchg
gs
jge
pusha
ficompl
push
jge
les
es
sub
out
js
insb
mov
test
push
cmpsb
ret
sarl
and
outsl
mov
or
into
in
lcall
xor
jp
insb
xorl
imul
or
pop
add
pusha
mov
or
arpl
insb
cmp
xlat
mov
cmp
inc
insb
repz
dec
mov
movsb
cltd
lock
dec
pop
lods
jecxz
xor
sub
xchg
mov
lret
shrb
push
daa
iret
outsl
mov
cmc
in
cmp
insb
push
sub
js
sarb
stos
jno
jns
mov
insb
test
ljmp
mov
ds
inc
or
mov
mov
orb
sarl
ljmp
lds
gs
iret
insl
insb
xor
les
lret
push
insb
lods
push
xchg
addl
pushf
insb
mov
mov
insb
dec
sahf
ret
jecxz
mov
in
xchg
in
push
cmp
int
dec
or
sbb
jmp
outsl
or
pop
insb
lea
sbb
insb
ja
cmc
add
aam
imul
dec
sub
std
faddl
retw
insb
mov
mov
push
cmpsb
inc
aaa
push
xor
or
push
dec
sbb
out
insb
into
data16
int3
pop
fisubrs
mov
mov
xchg
pushf
fsubrl
fistpll
insb
xchg
cmp
sub
insb
and
and
lods
mov
imul
leave
fwait
mov
or
xor
pop
xchg
pop
cmpsb
xor
mov
mov
icebp
cmp
pop
int3
pop
push
jge
or
and
cmp
insb
adc
enter
jns
dec
rorl
ss
sub
cmp
daa
or
sub
fwait
push
dec
push
jp
mov
adc
mov
dec
insb
cltd
add
loop
or
pop
jbe
mov
lods
in
dec
test
xor
mov
ljmp
ss
mov
mov
je
dec
xchg
push
mov
sub
push
mov
dec
ja
fs
popf
insb
sbb
xor
pop
shll
and
sbb
insb
push
jmp
popa
insb
loopne
cmp
mov
inc
in
pop
sahf
mov
popf
cli
sar
imul
jp
jb
mov
fildll
lock
cmpsl
cwtl
fcomps
out
call
nop
test
mov
stc
test
subb
mov
pop
mov
sub
pop
inc
xor
pushf
stc
and
adc
insb
inc
dec
ret
lahf
jo
mov
addr16
in
cmpl
push
sti
xor
insb
leave
adc
fs
std
adc
out
sbb
loopne
sbbl
dec
pop
jmp
jnp
xchg
or
fisubrs
fbld
push
and
sbb
adc
sbb
dec
insb
lcall
xor
adc
dec
insb
jge
arpl
pop
clc
sarb
stos
dec
sub
add
push
stos
je
inc
cmc
cmp
repnz
sbb
lea
dec
inc
fisubs
adc
cmp
scas
dec
pusha
add
imul
push
sub
hlt
nop
push
fmull
pusha
pop
in
dec
ret
cmp
mov
ljmp
xor
insb
test
sarb
notb
jle
insb
xchg
jnp
iret
mov
mov
gs
mov
insb
dec
jle
xchg
sbb
lock
insb
jmp
inc
push
movsb
push
xor
rclb
adc
dec
or
inc
or
dec
ja
aas
cmp
dec
data16
and
xor
and
dec
in
push
addr16
pop
mov
mov
out
xchg
and
pop
stc
mov
sub
and
push
push
or
repz
pusha
mov
jo
insb
bound
lret
add
pop
repnz
fisubs
sub
test
scas
sbb
leave
fcoms
sub
rcrl
fcmovnu
insb
or
scas
xor
cmc
js
mov
add
sbb
add
or
mov
sub
aam
fwait
insb
jge
jo
xchg
inc
das
xchg
insb
adc
mov
subl
or
shl
dec
pop
ror
insb
aaa
pop
mov
leave
push
daa
pop
push
je
lods
hlt
dec
lret
insb
ret
dec
sti
jp
sbb
add
xor
dec
dec
fcomps
cmovno
sub
negb
int3
push
in
movsb
in
shrb
jae
cwtl
inc
cld
insb
cmp
imul
pandn
rol
rclb
inc
arpl
out
das
stos
loop
test
rcr
movsl
push
jmp
and
sar
mov
sbb
insb
xchg
or
xchg
arpl
loop
lock
call
pop
cmp
andb
add
cmp
cwtl
push
imul
mov
rcrl
fldt
pop
dec
icebp
xchg
add
mov
jl
push
mov
cmp
scas
mov
popa
popa
push
pop
in
insb
lods
pop
mov
dec
ds
jb
data16
and
lods
and
insb
in
jl
mov
rclb
lcall
xchg
in
cmpsb
fwait
aad
xor
xchg
inc
fcompl
loope
outsb
sub
push
test
mov
popf
leave
insb
inc
sub
and
data16
fisubl
test
int3
and
inc
pusha
push
ret
cs
stos
lods
push
xorb
adc
cmp
sahf
insb
push
mov
adc
lods
or
insb
and
and
pop
xor
aam
fs
mov
cmp
push
repnz
or
ret
or
push
insb
jle
lock
into
mov
jmp
lret
movsb
xor
mov
push
pop
jns
mov
cld
call
iret
les
insb
test
add
lahf
loope
jns
ja
cld
xlat
pop
test
mov
out
mov
xor
jg
arpl
cld
insb
fnsetpm(287
fcoml
imul
push
clc
sbb
insb
aad
in
inc
scas
cmp
insb
insl
mov
push
insb
loop
cwtl
ss
pop
pop
imul
dec
xor
insb
sub
mov
adcl
lods
mov
ret
pop
pop
fwait
add
dec
and
cmp
push
sbb
dec
insb
or
lret
and
out
jne
fsubrl
data16
test
mov
pop
decl
nop
inc
insb
mov
lcall
insb
mov
mov
gs
mov
jp
cmp
aad
imul
mov
adc
lret
jl
in
pop
cmc
out
rcl
lods
adc
xor
pushf
imul
fisttpl
insb
ret
jge
lret
xor
jb
insb
mov
push
add
cmpsb
sbb
xchg
sbb
movsl
add
xlat
insb
popf
outsl
or
inc
push
popl
push
cs
test
orb
mov
push
lods
add
push
jne
stc
imul
pushf
les
addb
js
shr
insb
mov
mov
insb
je
inc
out
unpckhps
xchg
ror
lock
sarb
jg
pop
inc
sbb
ljmp
jge
mov
or
cmp
into
add
insb
lods
nop
sbb
cs
std
sbb
push
outsl
sub
pusha
jae
loop
pop
push
mov
daa
push
cmp
add
or
add
xor
leave
clc
ljmp
mov
mov
sub
mov
insb
jae
pushf
inc
and
popa
out
xor
mov
adc
shl
in
or
xor
insb
les
icebp
sahf
jp
push
shrb
and
inc
sbb
insb
jge
xor
fadds
divl
adc
insb
xchg
and
sbb
add
jne
call
insb
stos
inc
je
in
aam
insb
inc
and
adc
leave
gs
aam
inc
cmpsb
sarl
mov
hlt
rolb
dec
inc
jmp
sbb
ficoml
out
adc
dec
push
cmp
push
and
mov
insb
xchg
out
inc
or
xchg
mov
pop
cwtl
hlt
in
insb
dec
insl
aad
lods
inc
lret
mov
adc
jnp
lods
inc
or
add
in
bound
xchg
repnz
and
dec
insb
mov
cwtl
pmaxsw
stos
and
mov
daa
push
ret
push
jo,pn
or
testl
cmp
das
scas
xor
xor
dec
and
bound
dec
sub
insb
push
jo
xlat
outsb
xchg
and
insb
lret
push
jbe
sbb
mov
out
push
iret
cmc
test
add
int3
in
mov
push
and
fs
pop
cltd
cs
xor
xor
test
test
into
dec
fcmovne
fstl
adc
movsl
mov
dec
mov
lea
inc
sub
insb
into
or
push
fstpl
in
insb
jg
imul
insb
jnp
repz
insl
fcoml
cli
inc
pop
jle
jp
sub
movsb
shl
pushf
mov
mov
sub
push
lds
imul
cltd
and
add
aaa
bound
sbb
test
xchg
sub
cli
test
popf
inc
out
sub
and
insb
add
in
mov
cmp
lds
ret
mov
test
hlt
mov
shrl
inc
jo
add
mov
scas
loope
pop
clc
insb
adc
jnp
or
pop
dec
aas
bound
cld
mov
adc
adc
imul
adc
cmpb
mov
repnz
and
loope
cld
andb
test
sahf
sbb
nop
paddd
mov
fildll
xchg
in
xchg
stos
insb
pop
jno
xor
xor
inc
cwtl
test
mov
push
popa
pop
mov
mov
imul
jmp
xor
sub
dec
mov
in
mov
int
or
xor
data16
pop
lods
cld
push
test
insb
stc
das
js
es
aam
insb
adc
jbe
xchg
jge
cmp
mov
jle
arpl
std
mov
jg
jo
arpl
rep
pop
dec
mov
in
dec
movb
scas
daa
jo
insb
pop
push
in
mov
lods
jg
popa
xor
insb
and
sub
jl
incb
sbb
lret
vpaddsb
lock
outsb
rclb
sarl
out
mov
jnp
testb
push
lods
jecxz
sub
sub
jmp
push
sub
lahf
xor
loopne
jmp
sub
and
int3
repnz
insb
aam
icebp
dec
aas
or
mov
gs
dec
push
cld
hlt
xor
cld
gs
mov
int3
push
stos
push
mov
leave
mov
push
jmp
xchg
cs
add
daa
add
mov
in
ss
mov
adc
test
insb
js
or
mov
jl
hlt
insl
ret
jne
imul
add
jnp
pop
fsubs
jmp
dec
pop
in
dec
and
lods
mov
add
mov
add
ja
fisubrl
push
inc
jmp
adc
insb
sti
xchg
scas
jl
and
popa
push
test
insb
shlb
cli
lods
stc
insb
lds
or
frstor
iret
sub
lret
sbbl
cmp
insb
pop
insb
and
in
movsl
xchg
insb
inc
and
xor
mov
or
fsubrs
lret
out
aaa
mov
pop
mov
daa
mov
sbb
pushf
push
pop
mov
outsl
movsl
notl
cwtl
insb
push
adc
sbb
test
shlb
fs
fdivrl
sbb
adc
mov
loope
dec
jno
xor
andl
ret
cwtl
or
sbb
cli
lds
mov
push
shrb
and
jbe
cmc
int
loope
outsl
lods
sub
mov
mov
sub
in
jno
js
insb
mov
mov
add
sub
addb
mov
jle
and
jae
mov
mov
mov
mov
lret
fcoml
std
xchg
test
xor
ss
hlt
je
push
mov
mov
insl
je
lods
int3
mov
icebp
insb
shr
lret
negl
dec
xchg
xchg
gs
jne
mov
insl
dec
sahf
lahf
inc
sub
pmaxub
roll
cmp
push
in
xchg
subl
cmp
xor
pop
cwtl
jecxz
jmp
push
popa
adc
xchg
dec
int3
idivl
xor
insb
jg
test
in
xchg
mov
cmc
xchg
add
shrl
or
int
push
dec
pop
jecxz
pushf
addr16
bound
lods
fsubp
push
in
fisubs
jb
dec
cmp
stos
ja
pushf
adc
pop
mov
in
pop
addb
push
imul
sub
push
mov
xor
inc
data16
pop
lahf
cmpsl
lods
pop
push
clc
std
in
fwait
dec
push
inc
rolb
xor
or
sub
dec
je
and
sti
pop
jl
inc
cmp
mov
insb
pusha
and
adc
sub
shrb
hlt
arpl
jp
inc
and
cmc
or
jmp
xlat
mov
adc
xor
pop
sbb
call
sub
push
mov
jg
inc
pop
aad
cmp
pop
xor
rclb
cmpsb
jnp
pop
xchg
mov
es
lock
das
enter
jnp
scas
lods
bound
jg
gs
push
mov
fmul
xor
hlt
insb
lret
shld
loope
pop
imul
repnz
or
shrl
pusha
fidivrs
pop
and
pop
mov
pop
mov
ljmp
dec
push
insb
xchg
mov
jp
hlt
roll
nop
jg
mov
insb
push
loope
fsubrl
movsb
inc
cmp
cmpsl
enter
xor
push
gs
push
xchg
test
lcall
mov
in
insb
xor
sbb
popf
sub
fidivrl
scas
insb
mov
xchg
subb
xchg
shr
sub
pop
sub
enter
jno
jo
jb
fsubl
flds
cmpsl
flds
insb
xchg
push
sbb
pop
bound
loope,pt
pop
imul
dec
js
daa
pusha
stos
popa
push
mov
mov
ds
out
lods
insb
popf
and
push
add
call
adc
or
jle
dec
insb
std
into
jns
faddl
subb
add
es
lods
jbe
hlt
mov
insb
dec
lods
and
ret
jnp
push
xor
insb
pop
or
adc
mov
inc
in
in
cmp
icebp
sar
dec
pop
mov
in
jge
andl
ror
sbb
lret
arpl
int
insb
rol
outsl
adc
imul
insl
jo
in
mov
push
insb
negb
or
stos
in
insb
daa
xchg
inc
jmp
addr16
add
popf
bound
lds
adc
pop
push
xor
xchg
pop
mov
lcall
xchg
imul
cmp
mov
loop
sub
push
pop
dec
call
popa
mov
test
sbb
test
lods
add
cli
fcmovbe
push
insb
adc
cld
add
and
les
fstpt
jns
mov
add
dec
adc
lods
mov
aaa
cs
fs
sbb
shl
loop
fisubrl
ret
loopne
scas
pop
mov
cmp
andb
mov
or
gs
faddl
out
movsl
imul
in
jb
and
sub
dec
and
scas
insb
xor
xorl
mov
andb
cwtl
cmp
dec
cmpsl
xor
fwait
insb
cmp
test
mov
les
add
mov
insb
stos
cli
jecxz
push
or
xchg
repz
xchg
stc
outsb
inc
cmc
je
jne
out
testb
gs
int
lcall
jns
mov
inc
sbb
insb
jmp
lret
gs
imul
sbb
shrl
or
lods
shll
idivl
out
mov
pop
lds
aam
aad
gs
mov
ljmp
jnp
arpl
pop
movsl
icebp
xor
test
fidivs
ret
push
popa
pop
xchg
adc
lock
sub
push
pop
stos
sbb
nop
pop
ja
xlat
popf
imul
push
ss
out
movsb
cmp
dec
mov
mov
insb
mov
inc
ljmp
adc
cmc
in
cwtl
leave
sub
lock
test
shll
inc
pop
imul
lods
test
cmp
shl
ffree
push
inc
in
sbb
pop
ror
popa
imull
sahf
xchg
movsl
les
aad
test
int3
arpl
int
outsb
cmpsl
mov
iret
add
sub
insb
test
dec
jmp
imul
jnp
inc
nop
jmp
insb
add
jne
lods
shrb
jp
sbb
xor
aam
fcompl
std
enter
outsl
cwtl
iret
jg
insb
mov
dec
aad
insb
mov
rorl
insb
insl
pop
fdivrl
stos
jae
xchg
insb
xor
mov
iret
gs
cwtl
mov
pop
and
inc
insb
dec
rcrb
hlt
xor
cmp
inc
cld
sub
pop
inc
scas
adc
insb
stc
and
cli
inc
testb
clc
and
or
sub
bound
xor
lods
jno
mov
insb
pop
lret
test
aas
add
lds
xchg
int3
push
push
dec
in
pop
mov
mov
push
rol
cmp
lods
inc
imul
sbb
xor
iret
or
and
jp
push
pop
cltd
in
insb
add
stos
pop
test
mov
in
insb
push
dec
insl
pop
push
int
sub
jl
pop
leave
loopne
popa
mov
push
mov
sub
add
addr16
clc
insb
lcall
mov
sbb
es
add
aam
loop
xorb
insb
dec
jo
jecxz
insb
push
or
loope
test
fsubrs
insb
adc
sbb
imul
mov
mov
insb
mov
jne
push
or
or
stos
dec
dec
and
leave
in
imul
mov
mov
lds
popf
push
imul
or
int3
jnp
lret
jns
leave
insb
into
jecxz
pop
sub
je
in
gs
push
lods
rcll
sub
les
repz
test
insb
jne
imul
adc
jge
jle
or
push
push
pop
ljmp
imul
subl
aam
or
pop
sbb
dec
or
sbb
dec
enter
loop
push
push
jmp
test
xor
movups
and
lret
mov
cmp
das
mov
xor
bound
iret
sub
test
or
push
test
and
mov
test
cmp
pop
or
stos
jle
in
jae
pop
cmp
lea
sub
jno
in
jmp
pop
pusha
ljmp
lods
bound
cmp
lods
dec
int3
add
cwtl
adc
or
sub
or
dec
pop
jmp
insb
add
xchg
sbb
mov
jp
xchg
xor
jmp
mov
xchg
in
sub
ret
mov
lds
ljmp
mov
stos
inc
mov
adc
adc
lahf
lods
lods
cmp
vhaddps
stos
inc
adc
jnp
cld
xor
aam
dec
and
xchg
adc
test
push
insb
mov
xchg
jb
or
and
insb
add
lret
push
pop
subb
inc
adc
mov
mov
mov
ss
daa
shrb
cmc
sbb
mov
jbe
cmpsl
imul
in
imul
fidivs
sbb
mov
insb
fdivl
or
lock
inc
test
sahf
pop
aaa
repz
subb
jecxz
out
pop
in
insb
fs
in
inc
mov
or
insb
out
das
sbb
or
insl
adc
iret
jp
insb
out
cltd
cmp
loop
sbb
sahf
insb
repz
jo
cmp
test
add
in
and
hlt
aam
insb
sbbl
roll
enter
jo
insb
fdivrl
mov
pop
int3
je
cs
outsb
and
jecxz
mov
movsb
int3
mov
lahf
subb
mov
sub
icebp
bound
ret
hlt
adc
inc
loop
pop
imulb
out
mov
xchg
xchg
add
pop
ret
stos
lret
lock
push
dec
js
shrl
cmp
mov
pop
xlat
mov
mov
xorl
mov
ss
jae
inc
mov
lahf
sub
stc
shrb
rol
xor
insb
push
call
mov
ficompl
add
shrl
jge
mov
jmp
sub
test
imul
subl
mov
icebp
shrl
pop
scas
sub
cltd
push
mov
add
insl
addb
pop
ja
idiv
xchg
mov
push
je
pop
and
jae
aaa
ljmp
jbe
inc
mov
push
cwtl
or
sbb
aam
cmp
adc
or
jmp
push
pop
mov
test
test
push
add
arpl
mov
inc
jp
push
xorl
xor
jo
fs
pop
loope
outsl
sub
pusha
fidivs
ds
jnp
sub
lock
xor
fisubs
data16
adc
or
sub
pop
xchg
add
cltd
and
pusha
lods
jecxz
dec
cmp
inc
sub
test
and
or
lds
int3
rorb
sbb
rolb
pusha
pop
push
popa
subl
push
insb
out
cs
push
mov
lahf
imul
pusha
jae
pop
js
int
fwait
add
mov
jae
adc
mov
fwait
pop
pop
je
insb
dec
loop
out
or
cltd
insb
pushf
ret
cli
sbb
inc
jnp
scas
cmp
fwait
pop
popa
xor
pop
iret
pop
call
repnz
xchg
aas
cmc
out
mov
mov
pop
daa
std
in
mov
dec
insb
adc
sbb
sub
scas
dec
pop
imulb
mov
pop
rcrb
jl
insb
mov
jo
out
insb
ret
push
mov
add
xchg
push
jmp
sub
ficomps
lock
loope
xchg
sti
adc
jns
push
movsb
loopne
out
xchg
insb
int
cmc
jbe
add
xchg
cli
mov
sub
xlat
fnstenv
push
and
jne
mov
loope
jae
stc
rcll
jno
nop
cmp
out
sbb
cmp
insb
std
jge
adc
stos
cmp
sbb
jle
xor
or
out
mov
insb
mov
jecxz
mov
mov
adc
mov
pop
sahf
bound
fwait
pop
insb
ret
mov
test
add
in
aad
insb
loopne
repnz
mov
outsb
jl
scas
dec
hlt
aam
insb
xor
imul
imul
sub
pop
mov
cmc
pop
leave
push
out
aad
add
xchg
idivl
push
sub
sbb
mov
insb
and
mov
insb
mov
sbbb
call
rcl
in
in
mov
shr
insb
arpl
or
mov
adc
or
jns
insb
and
adc
inc
adc
lock
ret
xchg
or
notl
rorb
popa
call
mov
mov
pop
insb
idivl
push
gs
xor
out
mov
loop
insb
movsl
lods
jno
jge
dec
and
xchg
jnp
and
rclb
pop
pushf
out
xchg
enter
mov
insb
fadds
addb
mov
mov
test
out
add
int
insb
mov
adcl
mov
pop
add
lahf
leave
jo
xchg
mov
adc
xlat
test
sbb
pop
inc
insb
les
mov
std
cli
repz
test
inc
sub
xchg
sbb
test
mov
add
insb
fs
pop
imul
and
loop
cmp
stos
sbb
out
cmp
cmp
fsubrl
push
sub
ret
sbb
jb
fisubs
ljmp
lret
push
dec
adc
insb
iret
mov
inc
push
push
inc
mov
gs
xor
insb
and
cmp
insb
push
adc
out
addb
test
jmp
in
cmpsb
xchg
push
jle
mov
insb
dec
fcomps
xchg
inc
add
inc
in
dec
adc
mov
mov
aaa
fwait
cwtl
sahf
repnz
aam
mov
jbe
adc
jo
popa
pop
mov
or
jnp
pop
icebp
scas
loopne
jecxz
in
div
pop
fcoml
int
repnz
push
or
add
mov
mov
rep
mov
and
mov
cld
or
mov
stos
push
jne
decb
and
out
insb
sub
xlat
mov
mov
dec
or
pushf
popa
sbb
mov
test
and
insb
cwtl
movsb
insl
dec
xor
inc
xor
cltd
out
hlt
pop
test
fwait
jno
xchg
dec
adc
stos
insb
mov
repz
dec
mov
xor
imul
daa
ret
jecxz
jl
jle
cld
popa
jb
pop
fldenv
xchg
dec
mov
roll
dec
int
ss
in
add
fucomi
packuswb
outsl
insb
jnp
jl
iret
test
pop
cmp
incb
mov
mov
aam
fnsave
mov
adc
mov
cmp
sbb
push
insb
mov
sub
gs
pop
les
test
enter
je
mov
insb
loop
xor
daa
insb
push
xor
int
push
pop
mov
inc
test
cmpsb
insb
pop
xchg
insb
push
cli
sub
add
pop
and
sub
jg
jbe
xor
mov
mov
loopne
insb
pop
pop
fcomp
push
fisubl
sti
out
sbbb
pop
add
insb
movl
jp
loop
inc
dec
and
dec
xchg
mov
lds
dec
xchg
sub
push
push
mov
inc
jecxz
or
push
add
sbb
pop
addr16
cli
push
shl
dec
stc
add
stos
jmp
pushf
xchg
popa
xor
in
decl
call
icebp
arpl
scas
inc
lock
movsl
arpl
hlt
je
jae
insb
shlb
mov
dec
xor
in
pop
fidivrl
insb
adc
xchg
push
xlat
imul
push
or
mov
insb
dec
pop
in
inc
mov
sbb
insb
rorb
pop
inc
sub
insb
scas
das
or
icebp
jmp
pop
add
adc
insb
arpl
or
movsl
mov
insb
out
adc
push
cltd
push
jb
dec
fsts
pop
cli
sbbl
rorl
gs
in
cmp
test
test
mov
in
and
lods
sbb
dec
pop
push
pop
test
adc
jne
mov
mov
cmp
insb
xchg
int3
jp
mov
add
jl
adc
add
push
gs
call
mov
and
and
aam
push
in
inc
mov
pushf
adc
jecxz
pop
mov
mov
stos
fcos
sub
sbb
cltd
lods
adc
nop
insb
xlat
push
mov
insl
xor
dec
leave
in
imul
ljmp
pop
xlat
ljmp
jg
aad
test
sub
movsl
xor
mov
sbbb
lods
xchg
inc
mov
or
add
arpl
jne
fisttpl
jl
insb
popa
mov
lahf
fmull
dec
push
nop
lret
mov
repnz
insb
xchg
mov
jnp
insb
adc
test
out
pop
adc
jp
mov
sub
mov
into
insb
sti
arpl
inc
mov
mov
loopne
loope
dec
aaa
jl
sub
inc
mov
repz
sbb
and
sub
jl
hlt
repz
fsubr
or
mov
xor
sbb
jp
sub
push
push
dec
scas
pop
jo
enter
inc
insl
jp
xchg
and
sub
imul
jne
js
pop
insb
add
es
subl
or
imul
ss
lods
mov
data16
aas
xchg
loopne
enter
insb
call
movsl
xchg
pop
insb
test
push
stos
mov
test
push
pop
mov
adc
imul
icebp
xchg
fstps
insb
dec
inc
js
cwtl
pop
in
insb
xor
out
cmp
and
push
sub
jno
lods
in
cli
cmp
out
ffree
push
insb
movsb
adc
dec
jb
addr16
insb
lods
adc
gs
mov
push
in
les
cwtl
movsb
jnp
test
adc
xchg
lods
in
icebp
pusha
xor
insb
inc
pushf
aad
stos
mov
imul
ljmp
or
mov
jb
fistps
mov
iret
subb
addr16
lods
push
in
pusha
icebp
pop
test
shl
fs
xchg
insb
jne
rolb
sbb
jmp
pop
mov
and
aam
inc
insb
test
xor
inc
pop
mov
lret
dec
insb
and
pop
repnz
insb
cwtl
rcll
or
add
ret
dec
push
jo
jge
insb
sub
out
insb
xchg
mov
inc
pop
pop
dec
sbb
aad
out
push
lock
fimull
or
insb
iret
adc
movsb
pop
cmc
pop
insb
popf
or
hlt
js
jo
inc
xchg
out
out
jnp
imul
fucomp
loope
mov
je
mov
sar
or
sub
mov
cmc
rcrb
mov
lret
push
sbb
add
lcall
out
clc
imul
xchg
insb
sub
popa
xor
pop
or
pushf
mov
mov
push
icebp
push
jne
push
fnstenv
lds
in
int
popa
push
mov
mov
gs
xchg
add
pop
adc
leave
adc
insl
sub
cmp
rcr
lea
pop
or
pop
cmp
insb
loopne
stc
xor
sub
fsubrl
insb
mov
and
imul
dec
cmc
push
cld
lahf
inc
dec
hlt
mov
in
dec
sbb
and
pop
dec
xchg
repnz
lods
stos
sahf
xor
push
imul
int
lods
popa
subl
push
push
mov
push
fistpll
insb
sar
or
mov
aas
bound
sbb
pop
insb
jp
dec
test
sub
sbb
mov
xor
outsb
in
call
jae
rcrb
push
stos
pop
iret
nop
insb
mov
inc
outsb
jnp
xor
adc
dec
push
adc
xchg
fidivrs
insb
push
pop
int
pop
in
jno
fcmovnu
and
je
hlt
or
stc
jns,pt
aas
pop
sbb
push
or
lea
gs
dec
ret
scas
sbb
jl
mov
or
xor
stc
insb
mov
adc
mov
cs
loop
pop
jns
xchg
add
pop
jmp
mov
cltd
or
push
das
mov
insb
hlt
jge
in
in
popa
pop
jo
sub
loopne
test
cmp
mov
push
xor
cmp
insb
loop
adc
fsubrl
jg
xchg
cld
dec
loopne
and
pop
jnp
ljmp
push
add
lcall
addr16
pop
das
dec
dec
xchg
sahf
lock
fs
jge
inc
pop
mov
or
adc
jo
insb
xor
mov
push
mov
cli
cmc
outsl
enter
push
aas
incl
test
popa
aam
sub
fistps
in
mov
or
insb
movsl
lods
rcrl
push
adc
jle
mov
jl
jmp
mov
cmp
fstp
jg
mov
inc
sti
pop
jo
add
dec
mul
fnstsw
out
push
clc
dec
in
outsb
add
cld
insb
adc
xlat
in
insb
in
dec
mov
insb
outsb
mull
in
mov
insb
mov
push
gs
rclb
fiaddl
movsb
sub
dec
mov
imul
fidivl
shrl
jnp
pause
push
insb
push
pop
cmpsl
fdivrl
xor
xor
dec
stc
mov
mov
aam
insb
cwtl
cmp
fcmovnb
imul
je
jae
pushf
push
bnd
rcr
ret
out
out
pop
clc
insb
push
add
mov
pop
and
push
insb
push
sbb
push
jae
fsubrl
shll
incb
imul
arpl
mov
fwait
pop
mov
pop
lods
lds
orl
insb
add
pushf
out
loop
xor
xor
js
inc
inc
sub
dec
mov
insb
scas
clc
stos
test
imul
imulb
pop
or
imul
adc
sbb
insb
mov
into
mov
or
out
data16
dec
test
cli
jp
xchg
inc
push
imul
ficoms
sbb
inc
or
push
std
sahf
add
insb
push
add
push
dec
fsubl
add
xchg
mov
insb
imulb
mov
xor
fldcw
jl
jne
les
repnz
push
sub
aas
sub
dec
or
mov
or
jg
jo
inc
nop
stos
and
mov
cmp
jnp
pop
pushf
dec
pop
imul
leave
sbbb
imul
in
data16
mov
jns
ss
imul
call
lods
outsl
pop
sbb
push
sahf
mov
insb
push
bound
dec
or
shrb
stc
stos
fiadds
icebp
mov
insb
sbb
push
jg
dec
inc
fwait
insb
sub
call
das
xor
dec
data16
push
pop
insb
dec
jno
push
sahf
ret
imul
popa
pop
pusha
nop
xor
out
popf
pop
inc
mov
ds
jns
add
mov
pop
mov
or
stos
adc
push
sti
loopne
addl
insb
and
sqrtps
es
jnp
sbb
xor
pop
adcb
cld
lret
bound
insb
ret
jp
aas
push
and
insb
fadds
cmp
adc
push
inc
in
pop
xchg
loop
add
dec
pop
loope
add
ss
movsb
mov
addr16
ja
lret
jp
outsb
mov
dec
push
testl
stos
aas
inc
mov
push
shrl
mov
outsl
ret
imul
or
loope
fwait
inc
inc
lock
sbb
orb
jp
dec
add
dec
push
mov
mov
pushf
add
jnp
inc
ret
xchg
inc
aam
out
cmp
mov
insb
adc
stos
jnp
adc
jge
ja
insb
setbe
push
mov
fucomip
fwait
jb
rorl
stos
pop
test
xchg
adc
inc
sub
fldcw
jmp
leave
mov
call
xchg
jle
in
aad
xor
mov
add
jecxz
xchg
cli
jae
sti
pop
mov
mov
cmc
jo
inc
shrl
push
xchg
pop
push
stc
xor
cmp
test
or
in
repnz
mov
pop
jno
adc
dec
jmp
cli
mov
mov
imul
lret
push
or
mov
cmp
imulb
fildll
push
call
pop
and
test
mov
mov
les
in
cmc
cli
jecxz
cmp
push
movsl
or
jle
jmp
add
cmp
sti
test
call
mov
mov
iret
insb
imul
movsb
insb
movsl
push
orl
jbe
cwtl
insb
xor
mov
clc
cs
or
adc
test
xchg
in
orl
mov
xchg
sbb
lods
addr16
insb
jno
cmp
std
insb
add
mov
repnz
in
jmp
fwait
mov
fldt
popf
pop
insb
push
fmul
andw
pop
imul
test
aaa
sbb
repz
ficoml
jmp
mov
xor
test
dec
test
add
insb
iret
stc
mov
bound
dec
inc
add
pusha
jecxz
enter
cmp
mov
push
jb
adc
xor
adcb
stos
insb
in
call
and
or
add
scas
divb
stos
jmp
in
ljmp
insb
imul
lret
cwtl
xchg
mov
arpl
mov
pop
xchg
insb
lea
lcall
mov
mov
movsb
aas
into
gs
mov
imul
inc
jo
daa
jae
dec
data16
stos
jo
out
inc
xor
je
push
mov
loopne
or
jo
cs
cmc
mov
icebp
ja
or
test
mov
je
cs
lea
jle
pop
jecxz
insb
mov
push
gs
dec
or
cmp
adc
loop
in
jns
and
js
imul
scas
pusha
mov
sub
cli
ljmp
sahf
rol
jb
insb
sbb
xor
insb
call
movsl
push
adc
cmp
push
mov
jo
nop
pop
and
xchg
insb
stc
ds
pop
lods
inc
insb
shl
arpl
imul
test
pop
jecxz
je
dec
imul
in
push
insl
test
imul
int
fmull
xor
jne
sub
or
int3
imul
jb
xchg
xor
scas
sbb
icebp
inc
xchg
nop
pushf
insb
ret
stc
pop
push
roll
jo
fldt
cmp
out
enter
insl
scas
cmp
sub
data16
push
dec
add
shrl
gs
scas
mov
clc
push
insb
stos
mov
dec
mov
inc
das
rcrb
lock
jge
and
xchg
fsubp
jo
pop
addb
lods
mov
pop
mov
insb
lods
jnp
fdivrs
lahf
out
cmc
xor
jl
push
insb
and
xorl
into
sub
ret
dec
push
inc
das
in
out
jge
lret
das
setp
push
inc
sub
or
or
mov
cmc
and
ja
pushw
sub
dec
pop
cwtl
push
insb
popa
ret
out
push
mov
repz
mov
lret
pop
jne
insb
mov
push
ss
insb
push
cmp
rcrb
add
sub
insb
movsb
xor
mov
insb
and
add
insb
push
sub
mov
xchg
xchg
insl
or
lock
mov
ror
mov
add
idiv
gs
cmp
or
sti
lret
scas
mov
imul
in
scas
inc
sbb
jmp
leave
insb
and
push
xor
insb
divl
jns
outsl
pusha
jecxz
insb
pop
lahf
sub
inc
xchg
insb
add
aas
pushf
sbb
cmpsb
cmpl
mov
fwait
gs
push
dec
push
mov
pop
mov
lcall
mov
and
xchg
sub
xchg
pop
sti
fsubl
insl
or
add
pop
dec
leave
fucom
in
popa
jo
iret
push
das
sub
ja
mov
lea
jne
sub
add
xor
add
rcll
xchg
aam
jne
mov
mov
push
in
cwtl
imul
ljmp
pop
mov
jl
imul
add
pop
and
imul
imulb
aas
insb
jecxz
loopne
clc
fnstenv
and
mov
popf
jle
pusha
sti
insb
sub
cs
mov
pop
push
jb
inc
and
mov
xchg
std
jg
ficoms
and
lret
xchg
lcall
cmp
inc
mov
ja
call
push
sub
loope
cwtl
in
xlat
aam
insb
mov
test
adc
sub
test
insb
into
test
mov
xchg
mov
dec
jno
rorb
jns
or
call
leave
cmpsb
mov
xor
ds
rcl
aas
mov
push
fwait
stc
mov
sbb
add
jnp
subb
sbb
ljmp
xlat
sti
insb
push
mov
pop
mov
or
ret
jl
dec
xlat
dec
xchg
and
popf
jb
jnp
sub
dec
xchg
insb
push
mov
or
movsb
insb
xor
mov
inc
insb
or
mov
add
sub
inc
std
fucomi
dec
inc
inc
pop
mov
sub
xchg
xor
das
xor
movsl
cmp
mov
imul
mov
fdivl
push
dec
loop
insb
pop
frstor
jecxz
and
mov
jno
jne,pt
inc
fimull
lods
fwait
ljmp
jle
insb
push
jo
cmpsl
mov
xchg
outsb
and
int3
sub
and
and
mov
xchg
insb
sub
adc
jae
push
mov
inc
insb
lock
pop
cmc
imul
ja
outsl
pop
dec
mov
lods
mov
mov
add
jl
or
pushf
fs
sbb
shrl
inc
fidivrl
push
add
pop
in
sub
fs
xor
les
cs
lret
insb
cmpsl
loope
fidivrl
mov
mov
push
lret
jmp
mov
cmp
in
insb
mov
sbb
fnsave
cld
ucomiss
addr16
les
in
push
fbld
inc
lods
in
jp
rorb
sub
insb
fnstsw
loop
subb
insb
stos
movsb
jmp
pushf
insb
rcrb
sbb
fwait
pop
imul
test
sub
mov
les
cmp
mov
dec
sbb
pop
test
insb
jle
pop
sbb
pop
insb
lds
push
insl
lea
subb
mov
aam
cmpsb
dec
aaa
iret
mov
movsl
and
mov
sarb
or
push
pushf
xchg
repnz
mov
ret
stc
ss
fbstp
std
push
push
pushf
mov
das
jbe
pop
loopne
insb
out
cmp
lods
shlw
insb
mov
pop
mov
mov
ljmp
outsl
jl
sub
stos
mov
loope
push
cs
test
shrb
scas
repz
push
repnz
outsl
mov
insb
or
adc
js
jle
pop
into
pop
push
popf
mov
pushf
imul
cs
scas
xor
jle
inc
subb
xchg
dec
sbb
test
imul
dec
cmpsb
push
shr
mov
mov
loop
adc
push
or
xchg
jnp
push
mov
add
dec
imul
add
mov
imul
sbb
push
stc
insb
add
mov
inc
jbe
bound
test
lret
stos
fsubrs
jg
jne
ds
je
dec
insb
dec
pop
or
aas
and
cmpl
ret
xchg
adc
sub
mov
inc
mov
in
insb
icebp
push
cmc
cmp
push
insb
dec
daa
call
ljmp
adc
sahf
icebp
iret
shrl
ret
daa
sti
imul
sub
push
dec
add
insb
cmp
in
add
stc
in
cmp
fsub
fadds
inc
insb
pop
push
outsl
outsb
int3
fs
insb
stos
mov
sub
xor
cld
fmul
test
mov
lods
int
insb
and
xor
arpl
stc
loop
insb
sarl
popa
sub
testl
xlat
fdivs
mov
in
jl
out
insb
xchg
fstpl
adc
subl
neg
sti
daa
movsb
insb
into
lods
mov
test
jbe
div
pop
dec
jb
mov
lods
jae
addr16
mov
movsl
popa
int3
leave
scas
cmp
mov
mov
test
dec
insb
add
xlat
test
xchg
add
xor
addr16
inc
and
insb
test
out
cmp
iret
or
adc
inc
int3
jns
adc
insb
inc
pop
shrb
shl
push
xor
dec
sub
jo
daa
sub
sub
pop
test
push
mov
add
in
mov
jnp
sbb
mov
sub
jp
sbb
mov
adc
lods
insb
sbb
test
inc
xor
insb
cmpsl
add
add
fninit
gs
fdiv
insb
call
mov
sub
sub
mov
mov
insb
aad
mov
in
insb
inc
iret
adc
add
pop
js
arpl
sbb
jle
cmp
mov
data16
xchg
sbb
and
stc
mov
fwait
arpl
or
movsb
ljmp
cmp
pop
imul
push
pushf
aad
imulb
shll
in
outsl
imul
dec
xchg
add
jge
push
test
clc
pop
dec
lods
push
push
shll
dec
in
les
jecxz
mov
nop
add
fwait
ss
outsb
adc
int
dec
enter
scas
jne
push
test
daa
xor
jb
push
inc
lret
insb
stc
adcb
jmp
or
dec
insb
push
lahf
shll
mov
dec
mov
fwait
in
in
push
insb
orb
movsb
bound
out
insb
xor
scas
inc
shlb
fists
out
cwtl
scas
ja
mov
aad
mov
xor
pusha
lods
inc
out
push
pop
fldcw
adc
fidivs
insb
jb
pop
es
stos
icebp
insb
outsl
adc
pop
mov
dec
push
xor
insb
fwait
pop
xchg
sub
aaa
mov
push
insb
or
jae
and
leave
dec
push
and
jecxz
imul
mov
xchg
jle
insb
fcompl
test
cld
movsl
insb
fists
push
fidivs
dec
insb
mov
mov
adc
push
test
push
stos
out
mov
cmpsl
mov
and
ret
js
mov
jb
push
test
push
jl
gs
mov
xchg
hlt
lahf
insb
mov
cld
imul
mov
andnps
and
adc
arpl
xor
xchg
test
and
mov
push
jb
imul
les
mov
pop
dec
lds
js
mov
mov
into
mov
jge
decb
mov
inc
hlt
mov
subb
movsb
xchg
mov
insb
imul
stos
insb
push
imul
insb
push
sbb
mov
dec
mov
fiaddl
cmp
dec
imul
jge
leave
out
insb
mov
ljmp
fmull
fstl
jmp
or
nop
pop
loop
or
mov
fbld
sub
or
push
xchg
cmp
insb
rorb
int
cmpsb
lock
stos
and
insb
dec
aam
or
imul
mov
shrb
mov
fsubrs
mov
xchg
aaa
ret
insb
cmpsb
xchg
cmp
mov
fsubs
pusha
fcompl
pop
insb
or
add
or
push
mov
movsl
subl
leave
dec
mov
push
lea
inc
cmp
imull
and
xchg
insb
and
scas
iret
mov
push
notb
out
insb
and
imul
sub
xchg
mov
rclb
rorb
divl
insb
xor
stos
aad
dec
ret
jo
add
cltd
roll
ficompl
adc
stos
cmpsl
gs
inc
int3
in
sub
and
lock
les
mov
ds
out
fcoml
push
aas
in
adc
inc
cmpl
jae
insb
or
shll
sub
jmp
add
pushf
mov
and
insb
out
ds
add
mov
inc
xor
xor
xchg
int3
sbb
inc
push
mov
imull
cmc
add
gs
bound
js
cmp
imul
mov
js
jp
arpl
cli
in
jl
imul
xor
pop
shlb
ljmp
jmp
adc
add
insb
movsb
lret
jecxz
fs
mov
arpl
test
sub
xor
das
imul
fsubrp
jg
jae
mov
jp
gs
sbb
sub
frstor
iret
dec
mov
aad
cmp
subb
add
xchg
pushf
lods
dec
mov
fldt
pop
js
insb
testl
jo
test
cmp
cli
imul
mov
xlat
imul
add
das
and
xorl
dec
hlt
insb
push
mov
and
shrl
lods
repz
dec
js
sub
loope
fidivrs
jg
mov
imul
or
or
mov
insb
push
popa
outsb
xor
jo
and
sti
inc
cwtl
inc
sub
dec
jg
call
aas
insb
pop
fildll
or
lret
and
adc
mov
out
loopne
inc
add
push
cmc
lods
mov
scas
imul
mov
sub
cmpsb
xor
jnp
aas
inc
dec
mov
cmpsl
xor
movsb
lock
inc
add
lds
dec
in
sub
lea
stos
or
clc
rorl
aad
rcrb
inc
lcall
imul
ret
jno
xor
cwtl
movsl
pop
inc
insb
out
jge
test
mov
mov
gs
jmp
insb
mov
mov
push
insb
mov
push
test
mov
and
jb
adc
pop
shlb
sub
loope
pop
push
cmp
push
jae
dec
xchg
lods
xor
sub
out
testl
jne
stc
jl
stos
jle
inc
sbb
clc
icebp
and
and
test
insb
jns
push
lcall
dec
in
sub
xorl
test
insl
and
dec
call
loope
outsb
inc
fs
sahf
xor
push
mov
pop
and
jne
loopne
mov
les
mov
mov
and
cmp
pop
or
fwait
insb
lahf
aas
push
jnp
insb
lods
and
jp
movsb
add
mov
test
fs
cltd
lods
test
push
das
pop
xlat
addr16
add
mov
cmp
dec
mov
andl
insb
pushf
mov
inc
xor
aas
stc
fsubrl
push
or
mov
int
inc
lret
dec
fsubs
lret
dec
test
or
sbbl
popf
jnp
insb
xor
insb
inc
repz
and
push
mov
in
psubw
insb
ret
jno
dec
mov
in
insb
movsb
mov
fwait
decb
pop
inc
insb
sub
jecxz
sbb
or
lahf
mov
mov
insb
out
lods
sub
xchg
jns
test
dec
adc
mov
inc
lods
xorb
pop
inc
jnp
fwait
shrb
ljmp
and
enter
sbb
insb
jg
mov
jmp
sbb
dec
leave
dec
fdivs
les
push
std
mov
popl
lret
les
inc
movsl
xchg
and
mov
push
insb
cmpsl
popf
clc
pop
in
shrb
push
lods
or
iret
lcall
gs
xchg
fisttpl
xor
enter
sub
insb
xorb
mov
adc
mov
mov
xor
imull
mov
push
lods
dec
popf
mov
aam
pop
xchg
repnz
aad
adc
aam
loopne
stos
fisubl
and
je
insb
cltd
xchg
fists
nop
xorl
jge
shrb
es
repz
in
add
sahf
push
cmpsb
std
mov
pop
testb
insb
sub
adc
xor
mov
xor
push
in
sbb
shrb
jnp
add
jbe
clc
mov
cld
mov
dec
jl
dec
and
push
or
push
push
mov
lret
popf
fisubrs
mov
imul
cmpsl
test
loop
test
cli
in
gs
cmp
jmp
sub
inc
test
push
in
xor
ret
or
scas
out
dec
cmp
pop
or
adc
out
aaa
insb
xchg
nop
adc
rsm
fstpl
insb
orb
inc
insb
in
mov
jo
inc
scas
xor
pop
repnz
mov
dec
add
mov
scas
ret
insb
jmp
mov
shll
fstpl
push
movsl
mov
jnp
loope
jl
insb
jp
mov
insb
ljmp
mov
mov
mov
add
add
lcall
test
xchg
and
add
xor
xor
int3
jle
sbb
push
xor
cwtl
loope
cmpsl
insb
and
xchg
insb
call
inc
pop
dec
outsb
adc
sub
aaa
jbe
push
sub
sbb
add
cs
in
dec
jle
xor
xchg
xor
dec
xchg
test
inc
les
cld
xchg
scas
jge
aad
xchg
xor
xchg
add
mov
insb
sbb
out
inc
sub
mov
out
cmp
adc
push
js
jmp
xchg
outsl
push
pop
je
lods
out
imul
inc
shlb
jae
mov
insb
adc
lock
out
cmp
ret
ds
sarl
cmp
pop
imul
int3
insb
push
outsb
movsl
and
addb
insb
sahf
push
mov
push
dec
pop
push
insb
jne
pop
filds
insb
jl
imul
icebp
adc
popf
add
xor
sbb
dec
stos
mov
nop
mov
jnp
lods
jecxz
adc
jns
scas
insb
adc
and
insb
daa
xor
jg
sub
and
outsl
mov
addr16
cli
jb
mov
cwtl
insb
jle
pop
lock
pop
add
mov
push
sub
imul
fildl
dec
pop
dec
sub
jg
mov
imul
test
sti
add
fildll
js
mov
cmpsl
loopne
jb
fcompl
add
sub
aaa
and
cmc
sub
ret
rol
add
sti
jmp
push
loopne
inc
adc
nop
arpl
cmp
inc
testb
dec
inc
cld
js
cmpsl
arpl
push
loopne
push
out
pop
push
pusha
pop
hlt
pop
push
fs
int3
cmp
push
fbld
mov
jl
roll
insb
nop
add
aad
bound
insb
ret
mov
add
sbb
insl
mov
mov
dec
sbb
insb
testl
insb
in
sti
cmp
fists
cmp
cltd
repnz
mov
inc
mov
cmpsb
jne
int
test
and
in
mov
ficomps
popa
pop
or
rclb
push
cmp
add
mov
xchg
add
pop
cmc
insb
cwtl
xor
push
push
ret
pand
xlat
pop
test
insb
arpl
pop
push
sub
mov
lods
pop
cmp
mov
push
dec
imul
pushf
xchg
imul
jo
ret
repz
or
xchg
inc
xchg
les
sbb
cs
loope
jb
mov
xchg
sbb
insb
or
addr16
jp
mov
inc
dec
and
pop
ret
fimull
pop
mov
push
subb
mov
dec
push
mov
mov
adc
adc
fs
imul
mov
cmpl
insb
xor
adc
lret
mov
mov
insb
out
aam
xchg
loop
imulb
push
std
xchg
jecxz
push
sti
inc
mov
dec
xchg
adc
and
add
js
lea
or
sbb
test
insb
xchg
addr16
icebp
repnz
lods
pushf
inc
insb
scas
dec
add
loop
push
pushf
push
mov
and
mov
lcall
dec
xchg
xor
hlt
lahf
sahf
fdivr
push
pop
mov
cli
cmp
mov
sbb
fstps
mov
cld
mov
js
pop
in
lret
pop
int3
fildll
jle
sub
fildll
scas
pop
loop
cld
inc
insb
mov
jecxz
adc
mov
mov
push
js
or
test
add
or
jo
dec
gs
mov
cmp
cmp
test
insb
xlat
xor
pop
push
mov
call
ds
xor
pusha
fmul
aad
ss
movsl
cmp
dec
dec
nop
in
adc
bound
outsl
adc
xchg
insb
jg
sbb
lock
int
mov
inc
jge
insb
xchg
mov
mov
insb
add
push
clc
jecxz
push
shrb
out
js
inc
fildll
out
dec
shll
adc
mov
cmp
lret
jb
add
pop
pop
mov
out
and
xor
in
xchg
jle
jne
sti
test
stos
das
xchg
or
cld
insb
gs
stos
cwtl
ss
jle
cmpsl
and
into
xor
sbb
xchg
std
lods
popfw
in
mov
sub
jnp
adc
jb
popf
insb
fidivs
pop
aam
ds
lahf
push
xchg
imul
insb
and
push
fmull
push
jmp
ljmp
gs
add
add
insb
pop
aad
ret
mov
cs
pop
sbb
stc
fnstcw
adc
aam
or
insb
imul
and
aad
jne
inc
insb
adc
push
jl
inc
daa
insb
push
dec
xchg
mov
dec
add
loopne
popf
pop
sub
test
add
push
add
stos
adc
dec
ss
in
inc
sub
fdivs
pushf
fidivs
push
aam
xor
mov
shrl
mov
and
scas
push
out
bound
insb
sub
add
dec
stos
ljmp
sub
inc
pop
mov
adc
adc
out
js
pop
mov
dec
pop
int3
or
cmovbe
sbb
pop
cmp
repz
in
add
xchg
rcrb
lods
sub
xor
arpl
jbe
pop
dec
add
test
push
jo
cmpsb
testl
jae
test
loopne
jle
jecxz
cmp
nop
cwtl
sub
insb
test
inc
push
mov
into
shll
aas
pop
mov
mov
insb
cmc
lock
mov
xchg
cwtl
outsl
xchg
inc
insb
pop
lcall
dec
pop
scas
jmp
imul
cmp
lods
jno
pop
and
and
xor
lods
mov
jb
insb
stos
adc
repnz
imul
dec
cmp
add
popf
cmp
pop
outsl
or
add
cmp
and
test
push
in
hlt
cmp
sub
dec
ds
xchg
enter
int3
out
push
lods
out
iret
imul
or
insl
cld
push
sub
xor
insb
repz
sbb
insb
fs
xchg
loope
gs
sbb
int3
lret
ret
std
enter
das
mov
insb
test
or
insb
xchg
sub
repnz
mov
insb
in
sub
enter
arpl
or
mov
push
mov
int3
das
add
cmp
pop
ficompl
sbb
mov
mov
xor
sub
ret
mov
adcb
outsl
mov
insb
mov
rcrb
insb
add
sti
pushf
adc
test
xor
into
sub
insl
imul
addps
mov
lahf
sbbb
and
xor
imul
mov
aas
insb
pop
leave
fsubrs
insb
enter
add
xor
imul
int3
and
xchg
imul
mov
out
jl
jo
outsl
sarl
or
stos
lds
fisubrs
arpl
mov
push
mov
enter
inc
outsb
cmp
push
or
out
in
cmp
and
xchg
mov
push
imul
mov
or
push
sbbb
inc
insb
xor
jge
xor
into
das
push
and
insb
nopl
add
in
adc
xchg
push
jb
mov
mov
or
mov
shll
in
xor
lcall
add
pop
mov
jl
sbb
push
std
pop
sub
adc
out
sub
cmp
xor
imul
lods
call
sub
cmpsl
cmp
ret
imul
pop
insb
push
mov
imulb
int3
dec
jp
ret
outsl
lea
sub
das
mov
add
hlt
rclb
jbe
insb
test
loopne
mov
xor
inc
lds
ret
lods
insb
dec
bound
gs
fs
aaa
sbb
xor
js
xor
adc
or
loope
and
fwait
inc
in
outsb
inc
mov
push
mov
inc
push
loop
mov
out
out
aas
mov
cmp
lea
mov
cmpsb
daa
sub
lods
mov
dec
sbb
or
xor
dec
or
addr16
insb
mov
and
rcl
or
hlt
push
std
addl
mov
repz
in
dec
jnp
dec
imul
mov
cmp
cld
imul
lods
int3
aaa
dec
xchg
insb
cmp
sbb
imul
mov
loop
sar
ss
std
das
or
push
je
or
pop
add
lret
imulb
fwait
popa
jnp
outsb
gs
lahf
jbe
jg
in
mov
iret
insb
xor
imul
push
push
sbb
stos
imul
mov
and
adc
and
adc
sbb
mov
gs
mov
cltd
cmp
jge
loop
call
mov
insb
rorl
push
sbb
aaa
mov
pop
lods
sub
insb
jae
fldl
lret
or
je
insb
dec
cmpsl
mov
sbb
push
fildll
xchg
pushf
ret
lds
mov
push
insb
xchg
push
jo
xchg
xchg
insb
jle
mov
insb
lods
daa
inc
or
scas
jae
and
imul
stc
lock
stos
pushf
fdivr
sbb
insb
mov
scas
shlb
mov
int3
dec
clc
inc
stc
test
xor
mov
sbb
cld
adc
mov
insb
pop
ljmp
push
mov
stos
xor
call
insb
icebp
fildll
push
insb
jnp
and
jo
ret
clc
insb
jecxz
repnz
lods
leave
dec
out
daa
in
lahf
insl
fistl
shlb
test
das
mov
insb
test
push
fstpl
cltd
insb
and
ds
mov
insb
fldl
inc
pop
arpl
movsl
inc
lcall
dec
cmp
inc
insb
add
sbb
imulb
push
push
loop
xchg
insb
pand
or
push
mov
push
fldt
std
cmp
dec
mov
int
push
inc
mov
pop
dec
pop
out
fwait
cmp
insb
loop
xchg
adc
sti
pop
push
dec
fisubrs
insl
mov
arpl
push
sbb
ja
imul
mov
movsb
insb
pop
test
imul
sub
cmpl
or
rorl
lahf
sbb
addr16
inc
xor
jecxz
imul
mov
adcb
imul
or
pop
popa
sub
mov
jmp
sbb
sub
orb
fistpl
or
loope
je
insb
pop
popf
add
adc
xchg
ss
in
mov
repnz
jp
jns
repnz
xchg
aas
adc
push
push
insb
popf
cmp
jns
mov
adc
subl
xor
jmp
sub
aas
aaa
or
insb
insl
sub
bound
movl
push
jnp
push
loope
lods
push
testl
and
and
cmp
inc
andb
lods
push
sbb
lcall
cmp
in
insb
mov
les
xchg
mov
arpl
out
hlt
or
insb
in
ds
mov
fildll
jns
pushf
cmc
insb
pop
out
pop
into
andb
push
sbb
ret
hlt
push
mov
rcrl
insb
mov
mov
pushf
imul
inc
divb
ljmp
gs
inc
ja
fdivl
adc
xchg
insb
mov
xchg
jnp
insb
int3
fs
mov
imul
mov
jo
pop
xor
add
ds
jbe
inc
mov
fcomp
cmp
lock
sub
aaa
sbb
lods
shl
push
rcrb
jp
dec
imul
call
leave
imul
jns
nop
or
xchg
scas
add
insb
dec
popa
push
push
dec
mov
sub
inc
imul
mov
in
fsubr
pop
xor
dec
gs
jl
pop
ja
in
sbb
out
insb
outsb
push
sbb
iret
push
mov
lcall
xchg
pop
sub
enter
insl
xor
insb
incl
cmpsl
jbe
aad
xchg
mov
push
aaa
cmp
xor
dec
lret
insb
mov
fimuls
push
std
inc
push
lahf
xor
xor
sub
pop
xor
jle
cmp
aad
push
adc
sti
scas
mov
imul
adc
inc
dec
push
jnp
cmpsl
dec
inc
aad
mov
insb
scas
mov
sbb
pop
pop
dec
push
xor
ljmp
imul
pop
mov
fisubrl
mov
pushf
insb
mov
sub
insb
test
dec
imul
mov
cmp
fst
mov
mov
jbe
rorl
stos
xchg
add
sbb
jmp
lods
pop
out
fidivl
or
fildl
test
mov
mov
shrl
outsl
jl
pop
int
insb
adc
jmp
lea
jae
insb
fisubrl
das
call
ror
adc
push
aad
xor
xchg
das
dec
js
jp
insb
smsw
rcl
pushf
shr
imul
xor
jmp
cmpsl
imul
lret
popf
rorl
pop
lea
insb
jne
imul
cmc
cmpsl
insb
mov
dec
push
es
je
and
js
fwait
scas
push
test
mov
mov
jne
mov
adc
dec
mov
inc
dec
stc
outsl
cmp
out
enter
ljmp
xor
fisubrs
mov
cmpsl
dec
out
test
mov
adc
mov
enter
in
insb
or
mov
mov
cmp
insb
mov
aad
insb
outsl
inc
push
mov
fmull
insb
js
pop
daa
push
ss
insb
popf
pop
fnstenv
sub
push
and
ftst
mov
pop
xor
test
xor
insb
out
cwtl
add
inc
push
mov
insb
sahf
jns
xchg
push
popf
insb
subl
lds
test
in
lods
or
sbb
xchg
test
cmpb
sub
dec
test
xchg
scas
inc
cmp
pop
imul
call
aad
movsl
mov
idiv
push
xlat
fisubl
lret
mov
xor
imul
rolb
mov
loop
into
xchg
shlb
fbld
dec
fnstenv
scas
adc
repnz
dec
push
subb
pushf
ja
or
insb
add
xor
insb
das
xor
fs
insb
dec
sbbl
insb
imul
movsl
dec
or
or
loope
cmp
mov
cltd
lea
jmp
lds
filds
push
arpl
insb
daa
sbb
lahf
pushw
mov
push
and
insb
js
mov
cmp
in
and
outsb
xor
mov
xchg
call
mov
popf
inc
sbb
xchg
fisubrl
mov
stos
cwtl
or
test
lar
insb
cmp
cmpsl
inc
or
insb
jo
iret
lea
ret
insb
mov
stos
lret
lods
shll
xchg
imul
xor
es
mov
xchg
imul
shrb
sbb
or
fsubs
iret
fwait
test
push
mov
mov
aas
or
pushf
gs
in
push
jle
gs
or
stos
ja
insb
add
mov
aas
imul
xchg
add
jecxz
int3
push
inc
test
push
push
outsl
in
testl
insb
jg
cld
sbb
insb
js
push
adc
sub
mov
stos
xchg
popa
insb
mov
inc
scas
push
mov
mov
icebp
mov
scas
mov
mov
pop
dec
cmp
mov
xlat
lods
add
dec
sbb
and
sti
push
sbb
je
xor
bound
out
and
lret
mov
add
stos
insb
cmp
mov
cltd
jnp
lock
dec
imul
or
and
popa
test
push
xor
out
aam
jb
jae
imul
sbb
pop
jbe
popa
inc
mov
adc
fisubs
leave
jmp
sbb
sbb
outsl
outsb
aaa
push
fs
push
in
sub
popf
imul
pop
fldenv
pusha
scas
pop
push
inc
or
push
or
adc
xchg
faddp
jmp
mov
mov
mov
inc
and
lret
pop
mov
add
movsl
sbb
cmc
jns
cmp
loopne
dec
sbbb
sub
xchg
imul
test
mov
mov
lods
jne
subl
mov
scas
inc
mov
add
loope
mov
jne
or
fdivrl
xchg
insb
fisubrs
mov
cmp
pop
xchg
push
or
dec
push
sub
daa
out
or
inc
insb
mov
lods
push
add
push
insb
lret
dec
les
xlat
das
into
insb
mov
mov
mov
push
negb
ds
lods
fwait
mov
inc
cld
shrl
enter
je
insb
or
das
loopne
sbb
insb
sub
push
push
insb
pop
mov
fwait
xor
int
jne
out
mov
cmpsb
ficomps
dec
insb
popa
icebp
int3
dec
rorl
ret
xchg
clc
insb
push
push
es
cmpsl
out
imul
insl
pusha
div
xor
push
or
mov
insb
les
push
cmpsl
in
sbb
xchg
lea
das
mov
push
xchg
imul
testb
push
hlt
add
insb
ret
push
xor
std
gs
ss
das
faddl
aam
popf
add
cli
scas
jne
adc
loopne
imul
sbb
aad
insb
inc
add
jmp
push
xchg
push
xor
lods
sub
mov
sbb
insb
mov
jb
cli
insb
mov
xor
fdivs
adc
sub
sbb
insb
mov
inc
dec
or
push
sarl
jl
lcall
out
mov
mov
pop
leave
jne
and
push
mov
add
insb
andl
cmc
and
push
jmp
loop
lods
inc
xchg
inc
mov
push
jb
insb
sub
mov
cmp
clc
insb
repz
test
aaa
adc
lahf
data16
dec
jbe
pop
repnz
ss
mov
insb
shll
pop
dec
mov
mov
out
fisubrl
pop
jb
lret
dec
mov
inc
out
xorb
fs
dec
mov
test
mov
push
testb
cli
push
dec
and
jbe
fadds
jp
shr
sbbl
push
call
sbb
xchg
sub
or
cmpb
int3
pop
mov
or
adc
push
xchg
xor
fcomi
dec
insb
xor
fisubl
lods
test
insb
ret
icebp
inc
mov
insb
fdivrl
sbb
xchg
out
push
push
xchg
sub
insb
ss
pop
pushf
aas
sbb
inc
mov
push
mov
mov
xchg
je
aam
insb
or
inc
xor
mov
insb
push
enter
in
imulb
or
dec
fwait
add
pop
icebp
sbb
imull
clc
xchg
xor
in
jmp
xchg
sub
mov
gs
les
popf
je
sbb
insb
mov
jo
and
xchg
adc
and
lahf
imul
adc
daa
orl
jnp
push
ret
mov
lock
aaa
sub
inc
out
mov
dec
adc
mov
ja
mov
dec
imul
gs
mov
inc
cwtl
test
mov
mov
insb
lret
outsl
jle
or
int3
xchg
mov
pop
dec
into
mov
dec
push
popa
scas
insb
pop
subb
insb
cld
or
mov
sub
sbb
pop
arpl
and
mov
out
dec
add
repz
loop
add
insb
and
dec
arpl
stc
push
ds
mov
mov
int3
fsubs
pop
ja
test
push
pop
adc
int3
rcrb
cltd
insb
call
pushf
xchg
dec
insb
jge
nop
mov
push
jecxz
cs
mov
pop
js
insb
ficompl
cwtl
movsb
out
pop
lds
fldt
imul
inc
add
decb
cwtl
jg
int
icebp
insb
ret
push
mov
mov
stos
gs
pop
cld
popf
repz
loope
les
sub
insb
fisttpll
push
enter
sbb
insb
adc
idivb
ljmp
mov
subb
arpl
roll
jg
fsubrl
orl
push
pusha
xlat
mov
hlt
inc
nop
mov
insb
test
cwtl
xor
scas
inc
imul
mov
insb
lret
loope
jnp
push
gs
cmp
xor
cmp
jl
ret
out
sub
jle
test
clc
insb
cmp
stos
dec
xor
cmpsb
sarb
insb
decb
pop
int
stos
pop
dec
xchg
gs
xchg
xor
jle
insb
daa
fs
loop
pop
sbb
out
stc
scas
pushf
dec
jl
or
sub
dec
cld
pop
sub
ds
xchg
test
gs
addr16
push
mov
xor
je
out
inc
lods
outsb
das
xlat
xor
test
gs
ljmp
mov
scas
ss
repnz
jo
imul
cmpsl
jo
insb
pop
sti
mov
mov
icebp
pop
addr16
test
js
ds
mov
outsl
sarl
mov
dec
fs
mov
inc
insb
xorl
add
in
mov
loopne
popa
test
outsb
dec
jl
jmp
movsb
das
insb
dec
fucom
ljmp
shrl
or
fnstsw
daa
push
imul
imul
fst
add
cmp
enter
mov
jl
xor
sbb
into
in
pop
sub
loop
insb
jnp
adc
jbe
adc
imul
mov
and
loop
lahf
pop
insb
outsl
nop
xchg
daa
clc
dec
pushf
insb
fistpll
mov
xchg
insl
mov
dec
adc
push
cmp
ljmp
push
mov
hlt
push
test
pop
in
popa
stc
adc
imul
cwtl
mov
movsb
je
cmc
mov
scas
outsl
mov
add
mov
mov
pop
pop
push
cmp
jmp
sbb
cli
jl
sub
insb
ja
lret
dec
fildl
fbld
jle
hlt
xor
cmp
adc
jge
add
insb
adc
mov
les
movsl
sti
xchg
outsb
cld
sub
cmp
xchg
fs
hlt
sbb
pop
aam
lds
les
adc
cmp
dec
in
push
insb
and
das
insb
adc
fwait
and
adc
insb
rorl
pop
iret
and
imulb
push
rclb
jle
sub
fstps
test
insb
lock
mov
mov
pop
pop
and
insb
xor
xlat
nop
mov
aad
test
insb
push
jmp
mov
sar
or
add
cltd
lods
out
adc
dec
dec
mov
cmc
stc
jnp
mov
adc
hlt
dec
adc
dec
ficomps
sub
imul
in
bound
add
ret
lahf
fsubrs
sbb
jge
sub
ret
push
xor
insb
ljmp
add
sub
lods
cmpsl
int3
call
mov
cmpsb
insb
out
mov
aam
mov
insb
dec
jns
adc
mov
enter
movsl
adc
mov
insb
and
jae
dec
out
and
jp
call
inc
adc
and
jge
xchg
jmp
mov
mov
and
iret
insb
jb
in
adc
sub
pop
stos
rol
adc
xchg
or
sbb
in
pusha
mov
cmp
cmp
loope
dec
gs
mov
xor
arpl
add
mov
jnp
hlt
jns
add
fldcw
rcrb
mov
xchg
lcall
pop
jge
jle
movsl
push
insl
cmp
enter
mov
add
mov
les
sbb
xlat
enter
outsl
or
mov
mov
int3
jmp
je
mov
outsb
in
inc
stos
sub
ds
pop
cmp
insb
jbe
pop
jae
add
addr16
fucomip
jle
push
push
cmp
imul
or
lods
loopne
test
push
in
dec
shl
shrl
jne
sub
data16
daa
sbb
rolb
in
sub
xorl
add
aaa
jo
sbb
sbb
cltd
sub
call
insb
push
jecxz
xlat
mov
inc
gs
pop
into
jl
insb
sahf
fcomip
fs
gs
sub
push
cmp
cmp
inc
cs
lahf
insb
in
push
mov
into
movsb
sub
pushf
cltd
sbb
xchg
xchg
shlb
adc
mov
push
aas
ret
insb
xor
les
jns
int
fnsave
xlat
mov
aad
lods
cwtl
mov
in
in
rorb
mov
mov
xchg
pop
jbe
and
aas
insb
adcb
dec
mov
outsl
insb
cmp
mov
insb
mov
mov
and
sub
aad
pushf
in
fsqrt
mov
xchg
ret
dec
xor
mov
insb
sbb
push
ficoml
rcll
insb
mov
or
in
push
cmc
das
aam
in
into
loope
inc
push
jns
bound
dec
in
dec
xchg
imul
popa
ja
inc
jge
cwtl
pop
or
insb
mov
jno
popf
insb
fisubl
movsb
ljmp
pop
ret
cmp
push
insb
daa
pop
imul
jae
mov
sbbb
sub
add
xor
pop
sbb
sub
je
sub
jg
out
pop
test
insb
push
pop
mov
mov
addr16
imull
fs
sbb
test
aad
rorb
xchg
mov
fsubrl
imul
test
mov
sbb
dec
jbe
fists
sbb
push
shll
pop
jnp
mov
insl
out
insb
int
fimuls
imul
les
fsubl
lods
mov
mov
xlat
or
mov
negl
clc
adc
or
inc
and
jl
xchg
repz
mov
jmp
lods
cltd
inc
cld
xor
xor
dec
dec
clc
mov
xchg
lret
jbe
out
fs
inc
fisubrl
and
fldcw
mov
imul
lods
js
or
test
push
pushf
jl
insb
or
in
dec
mov
lods
cwtl
xchg
push
sbb
insb
adc
scas
add
subl
cli
aad
in
xchg
nop
xchg
cmp
pop
sahf
test
arpl
push
in
pop
ficoms
insb
stos
pop
loop
scas
loopne
sbb
loope
insb
xlat
xor
cmp
mov
mov
pop
pop
jae
mov
xor
mov
test
popf
or
inc
push
xchg
inc
je
lods
push
shll
insb
adc
movaps
mov
pop
sub
jle
dec
adc
and
jl
fwait
dec
stos
imul
mov
or
pop
test
mov
lcall
mov
test
nop
xchg
dec
cltd
xchg
jge
jmp
push
xchg
and
mov
jo
shrb
xchg
cwtl
or
cld
push
addb
ret
sbb
subl
fisttps
inc
pop
jno
mov
imul
adc
cmp
lods
imul
gs
sub
pop
fisubrs
int3
push
xchg
inc
movb
fdivrs
dec
fadd
dec
dec
insb
in
scas
xchg
dec
mov
mov
sbb
pop
sbb
insb
fmuls
loop
insb
stos
xchg
pop
adc
clc
jmp
out
insb
adc
mov
sbb
in
insb
insl
dec
into
arpl
pop
out
cmp
dec
dec
adc
insb
movl
movsl
clc
lods
imul
xor
dec
fistps
out
mov
imul
sahf
xchg
lret
ds
pop
dec
add
and
and
add
faddl
and
sub
or
rcrl
cltd
mov
lods
mov
out
dec
jge
dec
shll
insb
mov
iret
cld
mov
sbb
insb
nop
sti
inc
pop
xchg
icebp
stos
insb
adc
jo
lock
jae
insb
ss
fisttps
adc
gs
mov
das
inc
mov
mov
enter
jbe
int
bound
rcr
mov
fsubr
ljmp
sub
push
inc
sti
dec
xor
and
les
pop
cmp
pop
mov
insb
stos
aaa
or
xor
jbe
add
aam
out
clc
out
in
insb
outsl
inc
lret
test
loope
jg
cmpsb
dec
pushf
mov
push
ljmp
inc
sbb
aam
imul
insl
insb
sub
shlb
adc
add
sub
mov
xlat
hlt
stos
pop
out
dec
pop
mov
mov
cld
je
insb
jmp
ljmp
insb
sub
sbb
out
in
push
cwtl
push
daa
push
loop
scas
pop
sbb
subb
mov
popf
push
insb
xor
mov
dec
out
push
sub
add
jns
mov
push
insb
test
stc
flds
and
call
js
xorb
outsb
push
test
insb
leave
jmp
lock
insb
inc
scas
dec
jge
inc
fs
das
push
cmpb
aas
imul
insb
ljmpw
loop
mov
pop
mov
aam
insb
stos
xacquire
add
leave
sbb
push
cmp
in
mov
mov
outsb
jbe
sbb
inc
push
insb
adc
push
ret
cmp
dec
push
fstpl
outsb
addr16
fildl
lods
faddp
rorl
ss
call
jg
addr16
scas
icebp
sub
mov
adc
xchg
insb
aad
cmp
sbb
insb
mov
movsl
jns
adc
mov
movsb
data16
pop
imul
test
or
push
jae
lock
mov
or
imul
je
scas
insb
jle
imul
in
out
jbe
fmull
mov
and
imul
pop
jl
je
dec
push
mov
xchg
adc
insb
popa
dec
stos
cmp
gs
aam
jo
pop
push
and
sub
lahf
lods
call
dec
iret
mov
pushf
pop
mov
aad
or
xchg
pop
nop
jnp
pushaw
and
dec
mov
lret
bound
loopne
ja
mov
mov
xor
loope
das
sbb
jae
insb
jnp
call
pop
mov
jmp
pop
xlat
shrb
out
xchg
adc
insb
loope
dec
hlt
jns
ljmp
sub
stos
nop
test
gs
and
mov
mov
cmp
rorl
test
pop
xlat
cwtl
pushf
rcr
jbe
pop
and
insb
ja
jge
stos
pop
mov
adc
xor
mov
pushf
mov
lods
pop
sub
lahf
cmpsb
mov
jp
xor
pop
xchg
pop
test
insb
add
jne
aaa
cmp
jmp
dec
test
fidivl
jp
fisttps
insb
rcl
cmp
sub
sti
leave
and
or
pop
jne
add
popa
sub
jb
pop
and
sub
mov
and
mov
out
lods
imul
in
xor
imul
daa
or
dec
into
pop
insb
std
xchg
mov
imul
pop
pop
out
insb
adc
sub
jae
adc
shrb
shlb
or
movsl
test
test
push
in
mov
sti
or
mov
pop
stos
xor
imul
daa
cmpsb
ljmp
clc
or
aad
xor
xor
shll
push
mov
insb
hlt
and
jl
push
fidivrs
rol
sbb
adc
adc
hlt
cmpl
int
imul
loope
inc
imul
in
mov
jg
outsl
adc
pop
sbbl
out
imul
add
fwait
popa
mov
inc
adc
push
out
roll
push
mov
xlat
xchg
das
xchg
lahf
cltd
leave
insb
mov
mov
jecxz
pop
shrb
and
dec
mov
push
mov
xor
inc
push
or
fidivs
roll
sar
dec
xor
sub
es
adc
inc
insb
test
cwtl
xorb
gs
js
inc
and
sub
dec
jae
insb
lods
sti
sub
jecxz
outsb
mov
insb
push
pop
dec
xchg
fldenv
or
xor
jbe
xchg
sbb
push
insw
insb
mov
xor
cmpsb
mov
int
push
xor
stos
mov
movsl
lea
loopne
mov
cld
push
js
or
stc
add
adc
xchg
dec
into
lahf
or
inc
mov
mov
lods
loopne
imul
je
push
jle
sbb
push
stc
mov
es
cmpsl
out
lods
in
movsb
sbb
fistps
lcall
imul
and
lret
outsb
clc
cmp
pop
or
push
cmp
repz
fildll
xor
repz
pop
dec
push
popf
nop
pop
dec
adc
pop
stos
nop
into
jl
in
lret
mov
push
rorl
insb
ret
mov
aaa
fdivrs
out
insb
scas
inc
jbe
xchg
and
test
sarl
inc
pop
sub
in
insb
dec
fs
jmp
sbb
add
fimull
pushf
inc
insb
test
or
xor
sub
fld
push
xchg
insb
pop
pop
dec
pop
insb
out
adc
pusha
pusha
lcall
loop
movsb
sub
xor
cmp
fstps
or
or
jle
push
xchg
sbb
arpl
sti
mov
jmp
outsb
in
int
ljmp
adc
sub
push
add
into
insb
sbb
int3
and
insb
imul
dec
cmp
stos
xor
mov
je
daa
lods
cmpsb
insb
push
push
sbb
or
es
ljmp
or
xor
insb
push
and
loop
jg
mov
adc
lods
inc
mov
insb
jbe
lret
stos
or
bound
insb
out
les
pop
mov
bndstx
and
jnp
mov
je
insb
idivl
ss
inc
ja
dec
pop
call
pusha
push
lods
in
xchg
clc
xchg
scas
out
add
pushf
fbld
mov
xor
insb
mov
outsl
dec
pop
sbb
test
in
mov
insb
pop
clc
pmaxsw
out
subl
adcb
bound
shr
insb
jo
jp
dec
adc
ja
insb
xor
std
insb
cld
pop
lahf
cmp
push
aaa
jmp
xor
insb
xor
insb
rcrb
cmp
mov
pop
outsb
add
push
xchg
insb
pop
in
pop
lret
insb
cmp
jnp
call
pop
fcmove
das
push
jge
dec
stos
sarl
rclb
push
insb
sbb
cmpsl
and
sbb
pop
jmp
adc
aam
mov
dec
or
fmull
cmp
xchg
jbe
out
stos
jge
pop
sbb
lds
mov
push
stos
push
xor
adc
mov
insb
bound
fnsave
dec
mov
jae
cmpsl
add
jl
dec
or
lock
cmpsb
aaa
mov
insb
adc
in
sbb
outsl
insb
outsb
mov
pop
test
ljmp
insb
jnp
imul
scas
xor
rcrb
lret
shr
movsb
insb
rcrl
xchg
ds
pop
in
insb
mov
dec
mov
and
in
das
and
mov
jae
pop
gs
test
add
xchg
push
pop
pop
push
imulb
bnd
lret
into
in
imul
cli
ds
jp
insb
sub
mov
mov
cmc
hlt
and
idivb
insb
das
xor
jp
pop
cmpsl
pop
shll
dec
mov
push
mov
pop
out
adc
outsb
adc
and
xor
sub
repz
dec
xor
test
lds
inc
mov
xchg
shrb
adc
enter
xor
push
jne
out
mov
insb
pusha
mulb
pop
xor
jl
mov
clc
mov
lods
xor
inc
sub
or
xchg
xor
push
pop
aaa
loope
sbb
fwait
push
cmp
insb
dec
stos
lret
mov
adc
inc
lds
or
pop
gs
lea
sbb
scas
adc
and
lods
fcompl
mov
jg
leave
mov
xor
cld
insb
stc
push
fnstsw
sar
insb
lods
imul
int
clc
je
or
push
int3
mov
mov
ss
pop
pushf
insb
addb
adc
stc
ret
je
daa
mov
popf
insb
cmp
test
ret
testl
mov
insb
inc
in
arpl
leave
sbb
incb
jbe
cmp
xchg
loop
add
mov
rol
add
sahf
jl
inc
inc
xor
push
xchg
and
insb
and
mov
subb
xchg
xchg
sub
mov
mov
jnp
jge
mov
fld
lock
insb
repnz
fwait
sub
mov
sbb
sub
insb
clc
mov
jnp
insb
cmpsb
iret
push
adc
adc
imul
fcoml
fisttpl
insb
ficompl
mov
imul
or
subb
insb
test
fwait
loop
dec
xchg
imul
mov
sbb
roll
push
fptan
shl
shrl
imul
mov
orb
insb
xchg
test
mov
popf
orb
xchg
in
and
jp
std
push
add
stc
aad
add
jbe
pop
adc
mov
mov
int
jnp
jo
test
iret
aam
gs
xchg
push
std
mov
ds
stc
fst
out
insb
dec
xchg
outsb
dec
add
mov
call
adc
dec
aad
pop
lods
neg
test
mov
push
add
or
pop
mov
daa
mov
stos
loop
jecxz
dec
xor
push
mov
sub
insl
aaa
sti
rolb
add
xchg
cmc
inc
insb
mov
mov
cld
xorl
mov
cmp
jp
insb
fsubrl
popa
insb
xchg
cs
dec
sub
ret
insb
xor
add
lcall
insb
or
xchg
sbb
fwait
jmp
out
sarb
sbb
aas
in
fsubr
pusha
xchg
aad
mov
movsl
sub
push
mov
sub
lea
ja
sbb
pop
repz
lret
adc
pushw
dec
scas
gs
and
in
mov
pusha
int
mov
jno
insb
push
cmpsl
rcrl
mov
jne
sbb
popl
xor
mov
add
ret
sbb
sub
adc
xor
insb
mov
sbb
mov
jb
cs
jno
cmc
ds
les
jbe
enter
pop
ss
push
cmpsb
xor
adc
inc
aam
jne
sub
test
inc
mov
inc
push
push
fnstenv
push
or
sti
push
xor
in
pop
jne
cld
or
gs
enter
or
mov
data16
inc
lret
cmp
test
xchg
outsb
iret
mov
fdivrp
dec
gs
jle
orb
sub
push
dec
pop
aaa
testl
insb
das
out
sub
cld
imul
pop
inc
xchg
movsl
insb
ret
xor
lea
mov
sub
shrl
adc
jge
int3
insb
out
push
test
and
mov
push
fsubrl
lock
scas
mov
inc
sub
inc
lcall
repnz
and
shlb
insb
stos
imul
insb
mov
ret
inc
insb
mov
rcll
stos
insb
popa
daa
mov
inc
pop
ss
repz
lcall
lods
add
sti
insl
push
in
dec
imul
pop
jae
loop
lods
call
push
imul
jle
mov
dec
test
sbbl
ret
insb
out
out
cmpsb
jmp
push
shrl
dec
push
sub
shlb
leave
ja
shl
push
fisubs
ret
mov
out
das
out
mov
push
jge
cltd
lods
sbb
mov
outsb
fisubl
mov
push
sub
imul
int3
movsb
imul
and
push
stos
xchg
pop
lcall
aad
subb
xlat
jo
stos
jbe
push
push
sbb
insb
rcl
lahf
imul
mov
lods
xchg
cli
repz
cs
sbb
rcrl
arpl
fsubrl
in
push
push
or
cmc
imul
pop
mov
les
in
cmp
negl
jmp
je
mov
jl
mov
fcomps
ret
lds
or
rolb
addr16
ss
insb
enter
add
stc
test
jb
enter
dec
mov
insb
mov
mov
pop
mov
lcall
outsb
int3
or
mov
push
insb
mov
dec
add
ret
fmuls
pushl
mov
or
shld
ret
negl
cmpb
sub
cs
jbe
pop
dec
and
jecxz
jo
lods
or
popf
imul
es
push
psrld
inc
insb
jo
in
sbbl
dec
les
addr16
loop
sbb
mov
sbb
jp
pusha
iret
mov
pop
inc
inc
inc
in
insl
sub
jecxz
xor
mov
inc
lret
mov
hlt
movsl
insb
repz
pop
or
ja
sub
int3
push
xor
data16
gs
repz
mov
insb
mov
out
pop
in
or
cld
rclb
aas
xor
mov
adc
cs
outsb
movsb
int
insb
in
mov
cmp
mov
mov
in
push
sub
insb
xlat
imul
jle
dec
sub
mov
xchg
insb
icebp
ret
or
lods
xor
fldt
sti
adc
pop
jns
xor
xor
dec
scas
jmp
in
arpl
fstl
xchg
insb
test
insb
inc
inc
jno
popf
xor
into
push
dec
sbb
in
adc
testb
lds
inc
stos
sbb
push
test
in
cltd
insb
lret
data16
addr16
or
cmp
dec
jp
aaa
icebp
mov
push
out
sbb
mov
imul
popf
or
mov
in
dec
gs
jo
cli
fwait
lds
xchg
jecxz
ss
out
xor
adc
flds
xchg
cmpsb
icebp
insb
ljmp
jge
dec
xor
fists
and
lea
loopne
lods
xor
mov
fcmovnu
pushf
or
imul
mov
das
jmp
mov
test
insb
aaa
sub
jmp
add
xchg
test
fisubl
pushf
ret
add
inc
mov
insb
pop
cltd
imul
jge
add
stos
push
fdivl
pop
inc
dec
or
push
mov
in
sti
mov
add
int3
push
loope
and
cld
addr16
or
and
and
cmp
adc
shl
and
inc
ja
cwtl
cmp
movsl
test
sahf
jo
fwait
jmp
fstpt
pop
loop
xchg
push
inc
adc
cmp
jmp
xor
imul
jb
insb
mov
js
sbb
jns
sbb
pop
shrb
jbe
cmpsb
cmp
jne
pop
pop
adc
mov
arpl
mov
sub
pop
call
insl
arpl
aam
lea
stc
test
cmp
hlt
adc
xchg
in
rclb
mov
sbb
jbe
int3
mov
mov
inc
pop
testl
or
jmp
cmpsl
jmp
xchg
int
jle
inc
mov
outsb
or
jnp
sbb
test
shlb
test
je
sub
dec
xlat
sub
std
sarb
pop
movsb
mov
adc
clc
sti
or
jmp
popa
xor
sar
in
shr
test
ficompl
loope
dec
xchg
push
mov
cs
jns
les
sbbl
in
aaa
bound
push
cmp
loopne
insb
div
lods
add
int
in
jecxz
xor
rcrb
lahf
adc
mov
out
pushf
mov
sarb
pop
dec
push
pop
aad
add
adc
test
in
or
lds
femms
mov
push
pop
or
sub
sahf
int3
mov
gs
jns
push
xchg
cmp
out
scas
push
lret
aaa
lods
insb
sbb
adc
add
cmc
lock
cmp
push
insb
loop
shlb
gs
js
int
in
jns
xchg
adcb
insb
ljmp
gs
fimull
mov
rol
mov
mov
and
out
push
imul
dec
xor
sub
lods
jns
add
adc
mov
std
jle
insb
fcom
jmp
jnp
xchg
insb
js
dec
and
mov
push
pushf
imul
loop
jg
adc
test
fwait
lret
dec
push
js
sbb
insb
inc
cmpsb
add
ret
out
mov
mov
dec
dec
sub
push
popa
std
sti
icebp
in
pop
insb
repz
xchg
fdiv
push
imul
nop
cmc
bound
mov
insb
loop
sbb
cmp
inc
insb
fwait
stc
pop
sub
insl
int3
mov
movsb
pushf
mov
cmp
mov
xchg
repz
or
mov
out
dec
lods
imul
dec
adc
stos
das
fadds
imul
dec
ljmp
jbe
in
mov
sub
insb
pop
jmp
leave
push
adc
dec
lods
xor
insb
loope
in
sbb
dec
cwtl
jl
sbb
or
cmp
into
roll
add
sbb
and
test
mov
stos
fnstsw
insb
adc
ret
push
inc
popa
repz
xor
aaa
es
jle
das
xchg
insb
ud0
addr16
sbb
xor
inc
popf
scas
xor
das
sbb
push
insb
jns
pop
mov
pop
sub
andl
xlat
push
pop
insb
jbe
test
pop
lret
pop
test
aaa
pop
mov
jbe
loopne
pop
data16
pop
sub
repz
insb
xchg
lahf
das
cmp
add
aaa
movsl
mov
inc
cmp
adc
xchg
jmp
jecxz
add
insb
pop
aad
outsb
and
dec
sbb
aam
loop
mov
hlt
pop
push
mov
ja
pop
cmpb
insb
lock
fdivrl
mov
and
mov
daa
insb
cmp
adcl
pop
mov
fnsave
in
or
mov
into
repz
xchg
pushf
std
imul
mov
jae
rorb
xlat
mov
pop
dec
pushf
adc
or
xor
jae
cmp
or
adc
cmp
sarl
enter
push
out
jno
ret
pop
jecxz
jmp
pop
and
xchg
jmp
aaa
lcall
cmc
push
ja
dec
js
test
imul
daa
daa
call
inc
leave
adc
sub
push
pop
in
sub
scas
cmp
pop
jbe
cmp
lods
iret
insb
or
push
test
pop
xor
addl
jno
lret
jne
testw
xor
push
adcl
fisttps
jo
adc
mov
mov
push
and
ja
lret
in
pop
outsb
xor
aad
rorb
stos
ficompl
push
fcompl
bound
pop
cmpl
cmp
pop
sti
sbb
mov
xor
int3
xlat
cld
and
sti
rclb
jne
lahf
negl
out
mov
pop
stos
push
cmp
sbb
inc
xchg
adc
mov
lods
roll
jb
cmpsl
pop
arpl
sahf
adc
sub
addl
lock
call
cli
je
pop
enter
pop
and
loopne
aad
push
cmpsl
xor
mov
fnstenv
mov
js
and
mov
ljmp
jmp
hlt
popa
dec
dec
add
stos
cmp
pop
in
mov
sbb
jle
xor
in
mov
adc
lcall
inc
andl
jo
int3
mov
mov
jno
imul
shl
test
adc
xor
jecxz
or
mov
scas
sti
or
in
add
divl
mov
dec
mov
push
mov
movsl
jno
les
fstps
in
gs
push
punpckhbw
sbb
in
sub
insb
xchg
int3
xchg
mov
fmull
jns
cs
gs
add
sub
add
bound
imul
cmp
dec
insb
jae
in
enter
imul
pushf
push
mov
mov
sbb
insb
add
pusha
or
lock
hlt
cld
insb
add
dec
aaa
out
or
jns
lcall
test
sub
sub
cmp
lea
cmp
jne
mov
aad
leave
jbe
insb
mov
pusha
push
cmp
jmp
lret
xchg
jp
xchg
mov
jge
inc
std
cmp
inc
insb
pop
xor
adc
imul
mov
mov
test
imul
insl
lods
push
add
les
stos
je
cwtl
int3
loope
out
push
leave
in
mov
insb
add
lahf
jl
push
and
out
rcll
insb
js
push
push
mov
loop
jnp
jg
lret
arpl
inc
mov
paddsw
push
xchg
inc
and
cli
insb
test
jns
mov
dec
lock
loop
cmpl
lea
int3
hlt
adc
insb
lahf
nop
xchg
das
dec
push
adc
insb
inc
je
insl
leave
jb
fldcw
sub
insb
iret
jnp
push
addr16
mov
int3
push
movsb
cmp
lea
loope
jmp
inc
inc
popa
sbb
insb
cli
mov
insb
popf
cmp
out
or
push
or
inc
out
mov
xchg
aas
or
sahf
or
data16
lea
shrl
sub
xor
cld
xchg
push
mov
insb
fisubl
sub
clc
testl
jl
push
gs
add
out
mov
xchg
mov
imul
or
inc
push
negb
call
jmp
lds
test
rclb
repnz
mov
xchg
insb
sbb
xor
insb
mov
cmpsb
test
lods
xor
insb
pop
mov
jne
jmp
jnp
das
dec
ljmp
shrb
nop
add
lods
std
xor
insb
sahf
or
pop
mov
js
shrb
dec
push
repnz
imul
sbbb
lret
insb
daa
aaa
out
cwtl
push
and
pop
mov
push
insb
xor
sub
insb
sarl
lock
imul
pop
int3
shufps
dec
inc
sub
lods
nop
cmp
insb
filds
test
test
fstps
sarl
dec
int3
xlat
das
sahf
adc
fs
mov
imul
movsb
mov
and
sbb
mov
pop
je
cmp
test
stc
insb
movsb
mov
mov
insb
inc
push
ljmp
test
cmp
jbe
aam
or
lahf
notl
xor
mov
insb
and
cmp
imul
push
fdivr
pop
je
int
out
sti
inc
or
pop
jno
es
fisubrs
xor
xlat
sub
mov
je
insb
arpl
fdiv
insb
mov
jp
adc
mov
daa
pop
movsb
pop
pop
aam
jne
imul
nop
adc
imul
into
pushf
jg
jp
ss
lods
cli
sqrtps
dec
pop
imul
pop
push
or
stos
lret
fcompl
mov
mov
leave
fisttpll
inc
inc
and
pop
rolb
stos
jbe
aaa
inc
ljmp
cwtl
and
sti
das
push
sar
into
pop
mov
dec
sbb
push
mov
add
loope
sbb
or
arpl
call
fdivrs
icebp
lock
stos
ret
incb
mov
in
push
jae
cmp
std
xor
fisubl
mov
or
cld
loopne
cmp
sub
insb
pushf
jge
sahf
fwait
xorb
insb
or
push
stc
and
gs
xchg
aaa
adc
and
sub
insb
cmc
cld
cmpsb
iret
in
add
loopne
pop
ret
leave
mov
insb
fldcw
inc
push
push
pop
push
and
sbb
fwait
adc
ljmp
inc
lods
mov
mov
lret
pop
adc
int3
leave
pop
pop
mov
gs
aas
iret
outsb
push
and
insb
jmp
fwait
test
push
jo
mov
pand
gs
jp
mov
in
mov
cltd
rcrb
mov
mov
sub
cmp
shrb
jp
add
movsl
xor
in
and
xor
mov
ljmp
jne
lds
dec
out
jl
loop
insb
dec
call
inc
sbb
jae
pop
jnp
ja
fbstp
cli
js
dec
or
sahf
sub
insb
inc
sbb
add
cmp
mov
insb
outsb
cmp
fsubrs
or
js
xor
out
sbb
test
xchg
or
sub
lret
inc
js
ljmp
lds
and
cmc
pop
ret
and
push
in
or
je
inc
push
xchg
arpl
pusha
ljmp
dec
mov
pop
incl
es
test
jp
xor
jecxz
pop
pop
aaa
inc
out
sbb
and
iret
ret
cwtl
int
test
lods
adc
stc
insb
add
loopne
sbb
insb
dec
jmp
cmp
cmp
mov
subl
ds
lahf
pop
fsubrs
das
pop
pop
imul
lcall
stos
xchg
pop
add
mov
jnp
mov
addl
bound
mov
sarb
lods
subl
mov
test
lcall
icebp
test
or
push
and
jmp
xchg
ss
jo
movmskps
pop
daa
cli
jo
xchg
jl
pop
leave
mov
in
popa
xor
fmull
orb
xor
xor
xor
dec
fdivrl
sbb
mov
ja
cmpl
scas
jne
inc
enter
adc
sub
call
add
jno
jecxz
popa
mov
in
insb
jg
cmp
lahf
lock
jge
mov
int
scas
adc
repnz
insb
pop
fldcw
movsl
xor
xlat
test
sub
inc
insb
adc
jb
insl
add
or
push
cmc
jb
subl
add
ret
adcl
push
pop
or
in
rcr
pop
jmp
cmpsl
jmp
inc
into
int
or
test
lods
fs
push
xor
jnp
sub
jns
sbb
iret
mov
jp
push
loope
jno
test
pop
fldlg2
jb
sbb
test
out
push
addr16
popf
dec
mov
xchg
roll
insb
stos
into
pop
jmp
ds
sbb
mov
jp
mov
inc
cmpsb
xchg
mov
lods
je
popf
cmp
gs
push
push
ds
pushf
iret
inc
sub
adc
mov
jl
sbb
data16
scas
fldenv
insb
aas
rorb
xor
insb
pop
fmull
and
xor
popa
inc
xchg
sahf
imul
pop
pushf
xor
mov
add
mov
pop
in
xlat
outsl
dec
mov
insb
jb
mov
jle
push
cmpsl
mov
into
popa
stc
xchg
cs
cmp
scas
pushf
cli
lcall
fdivrl
addr16
flds
cs
lock
pop
out
inc
cmp
bound
pushl
stc
lret
rolb
sbb
rclb
test
jo
pop
add
mov
imul
lcall
imull
ljmp
sub
lock
inc
jg
xchg
dec
mulb
lret
and
les
mov
mov
mov
pop
int
sbb
dec
add
popf
pop
ljmp
iret
jmp
gs
push
imul
jp
insb
xchg
push
jbe
jb
inc
jae
stos
lods
pop
add
les
jnp
or
pop
insb
outsl
xor
and
outsb
sub
cmp
js
xor
jae
ljmp
mov
clc
xchg
add
dec
lds
insb
sub
add
insb
pop
sti
or
aam
jp
loop
int
xchg
sbb
cmp
pop
imul
fnsave
insb
clc
inc
adc
call
pop
imul
cwtl
inc
mov
mov
scas
insb
pushf
movsb
cs
cld
jbe
sub
inc
in
xchg
push
je
imul
or
lret
in
dec
push
nop
pop
imul
mov
int3
ds
es
sub
out
mov
repz
mov
insb
loopne
jecxz
or
stos
push
sbb
call
mov
fwait
out
insb
xlat
push
sahf
push
and
adc
daa
out
mov
jb
xor
push
sub
jle
insb
rolb
daa
pop
aam
push
dec
inc
popa
or
lret
cmc
lret
fwait
insb
outsl
add
pop
cld
mov
sbb
insb
cltd
lret
faddl
lds
push
fwait
outsb
adc
das
xchg
in
or
ljmp
insb
pop
adc
inc
shlb
push
insb
loope
xchg
icebp
sub
inc
insb
mov
or
cmpsb
movsl
add
insb
xchg
mov
mov
arpl
daa
cli
sarl
mov
insb
push
inc
inc
jnp
xorb
push
gs
push
gs
fimuls
lcall
jl
test
out
insb
pop
xchg
lods
xchg
push
aad
int
loope
lcall
addr16
fsubrl
add
dec
pop
insb
rcrb
subb
mov
inc
or
xor
and
insb
in
push
mov
dec
test
pop
sbb
icebp
xor
in
mov
repz
dec
pop
pop
dec
daa
sbb
pop
scas
push
cmc
mov
push
enter
lods
dec
rclb
adc
push
stc
pushf
scas
insb
mull
and
lods
cltd
shll
popf
push
or
leave
fidivrs
xchg
nop
inc
insb
jecxz
sub
fldl
mov
pop
insb
bound
repz
inc
mov
inc
xorl
popa
add
popf
je
scas
cmp
fcmovnu
cmp
pop
stc
pop
lock
aaa
lea
jmp
or
sbb
xchg
out
insb
mov
daa
adc
imul
mov
inc
out
lods
jge
inc
mov
inc
int3
jno
jne
scas
xor
jb
mov
push
dec
pop
sbb
out
mul
insb
int
adc
test
stos
jecxz
cmp
insb
cmpsb
jl
fwait
aaa
loop
insb
xorl
adc
hlt
enter
pop
dec
ds
divl
sbb
cmpsb
icebp
mov
mov
in
mov
sbb
fisubrs
test
ret
xchg
mov
stos
push
inc
nop
push
imul
cltd
dec
xchg
movsb
mov
aad
insb
jl
push
cmp
push
ja
adc
xor
addr16
lds
scas
sti
outsl
jg
ret
pop
mov
jl
cmp
repz
push
cs
sarl
mov
arpl
in
psllq
pop
add
and
pop
insb
pop
sub
scas
rcr
push
insb
pop
addr16
rolb
es
dec
orb
popf
scas
jae
insb
ss
xor
cld
mov
imul
outsl
pop
jl
mov
xchg
ss
jmp
insb
adc
idivb
cld
into
insb
jns
xor
pop
sub
add
and
jle
out
mov
push
popa
adc
scas
in
out
shl
insb
mov
adc
repz
mov
insb
jnp
loopne
addl
sbbb
imul
xchg
test
out
je
nop
pop
pop
push
mov
lcall
cmp
loopne
lods
sub
jle
jns
inc
imul
insl
and
insb
mov
mov
pop
insb
loopne
fcmovnb
sbb
mov
lds
sub
jo
mov
add
std
je
insb
test
cmc
stos
pop
dec
and
jno
jns
insb
inc
push
movsl
dec
scas
cmp
push
dec
outsb
sub
imul
lods
lock
mov
repnz
insb
push
pop
jbe
dec
adc
push
into
adc
ret
or
inc
cmpsl
int
out
xchg
dec
jmp
in
icebp
arpl
ja
mov
out
jb
mov
mov
cmp
cwtl
and
outsl
insb
mov
jg
js
insb
cli
or
jb
in
xchg
jne
mov
cmp
popf
xchg
out
loopne
rol
and
jl
insb
mov
sti
and
mov
jl
arpl
lods
hlt
push
cld
addr16
cmp
aam
gs
jae
mov
in
in
lods
stos
ficomps
pop
subb
and
cmp
cwtl
imul
test
xor
andb
jle
lock
xchg
imul
xor
inc
ret
test
insb
jmp
cli
jo
insb
sbbl
insb
cmovno
cmpsl
sub
pushf
scas
add
add
loope
sbb
imul
cs
in
enter
push
insb
addb
dec
fnsave
insb
mov
in
insb
sbb
insb
bound
movsl
mov
popa
or
shll
mov
jp
aaa
pusha
popa
xor
jle
int3
mov
pop
jg
shrb
ret
dec
mov
insb
push
test
and
repnz
xor
lcall
mov
int3
outsb
insb
clc
xchg
jp
lcall
ss
outsl
fiaddl
pop
pop
faddl
popa
ficomps
shrl
jp
gs
ja
cld
dec
add
mov
push
jb
insb
scas
xchg
cli
sti
shrl
sub
test
xchg
sbb
das
ljmp
pop
sub
out
push
adc
shr
into
lock
adc
mov
sbb
lods
addr16
imul
push
sbb
loopne
test
popf
jecxz
arpl
out
mov
and
mov
mov
pusha
sub
add
clc
cmp
popf
jb
jae
lds
cmc
sub
gs
lock
pop
mov
hlt
aaa
pop
insb
test
jns
mov
insb
pop
pop
xor
insb
test
mov
push
xchg
pop
imulb
pop
aaa
jp
dec
fstl
repz
or
pop
gs
sub
les
pop
xlat
mov
lods
jp
sub
lock
stos
int3
jae
mov
into
lcall
bound
arpl
jae
jb
aad
lods
ljmp
test
pop
imul
repz
icebp
popa
jl
inc
push
dec
shl
insb
jb
fcmovnu
scas
mov
fsubrl
dec
subb
push
insb
in
stc
cmp
xor
jge
mov
cmpsl
mov
lcall
addb
daa
je
xchg
push
sub
test
add
lahf
icebp
test
aam
rcll
mov
subb
mov
insb
or
inc
lds
push
insb
aad
jmp
lods
mov
imul
cmp
hlt
jno
repz
lcall
sbb
dec
sarl
insb
cmc
out
cmp
dec
add
outsl
cmp
dec
and
or
push
insb
xor
lea
fisubl
repz
inc
pop
fbld
sbb
or
sub
push
test
adc
xchg
cmpsl
jb
lret
nop
clc
fs
test
inc
xchg
jnp
bound
in
or
push
mov
or
adc
lods
adc
push
sbb
adc
jl
xor
cld
dec
insb
xchg
fld
aad
sbb
imul
ret
mov
call
divb
and
loope
scas
insb
cmp
cmpsl
js
push
push
mov
adc
inc
adc
pop
imul
fcoms
add
gs
add
jno
insb
adc
orl
lcall
popa
add
fistl
faddl
clc
or
dec
rcrb
add
iret
stos
cli
xor
pop
jne
mov
les
and
sbb
lcall
sbb
loop
add
insb
push
mov
mov
insb
cwtl
add
sub
rolb
push
push
insb
or
xchg
cld
popa
imul
int3
mov
mov
shlb
lea
dec
hlt
cld
sahf
dec
cmp
insb
imul
jne
loope,pn
mov
repz
adc
inc
inc
ret
sbb
in
popa
insb
mov
push
and
addl
icebp
insb
adcb
jle
jbe
shrb
testb
pop
insb
cmp
ret
outsb
aas
or
xlat
insb
jmp
pop
leave
inc
imul
lcall
clc
pop
push
in
jb
jl
pop
push
mov
testb
call
fnstcw
imul
mov
outsl
js
mov
insb
xchg
and
adc
mov
xor
fs
or
ljmp
add
mov
dec
mov
xorb
sub
out
xor
mov
jp
loope
pushf
orl
scas
addb
pop
pop
fldl
ja
cld
out
les
rorb
out
or
inc
pop
fiadds
insl
mov
or
sbb
loope
pop
inc
pop
fistpll
xor
les
and
jno
out
push
jb
xlat
jb
imul
aas
cwtl
stc
cwtl
out
js
hlt
jne
aam
cmp
addl
cmpsb
clc
out
jge
pusha
cmp
ss
gs
adc
call
push
cwtl
pop
mov
jb
push
lods
pop
stc
test
xchg
mov
insb
xchg
outsl
jp
into
xor
cmp
scas
push
mov
jg
rorb
in
ficompl
inc
cmp
push
insb
mov
sub
push
enter
cmc
insb
inc
jne
inc
les
addb
sahf
xchg
sub
cmp
dec
or
insb
mov
mov
cld
insb
mov
jge
push
add
imul
lret
xchg
and
inc
in
jle
add
int3
das
adc
insb
jne
negl
lods
push
adc
add
xor
insb
stos
or
subl
adc
cwtl
inc
pop
mov
xlat
outsb
in
add
cld
leave
fsubrs
cli
fldcw
testl
sub
cmp
leave
insb
sbb
mov
insb
fdivs
std
aam
inc
add
jge
lret
xlat
push
mov
mov
or
cmp
insb
xchg
repnz
insb
cmpsb
jmp
dec
cmpsl
or
dec
insb
cmp
adc
mov
xor
stos
scas
push
movsb
jl
push
out
adc
je
push
mov
stos
push
insl
jmp
push
xor
and
and
push
stc
dec
jmp
insb
insl
rcrb
cmc
pop
push
jecxz
insb
rol
mov
imul
dec
insl
xor
xorb
in
outsb
shrl
insb
das
repnz
mov
iret
adc
sub
inc
add
orl
lds
adc
in
xchg
xchg
shll
lahf
lcall
aam
xchg
pop
int
cmp
add
and
cwtl
mov
xor
out
negb
fisubrl
pushf
adc
ror
mov
xchg
cmp
inc
push
addr16
jb
xor
mov
outsl
dec
mov
popf
insb
daa
pop
mov
shlb
push
addr16
dec
out
fisubl
adc
inc
mov
mov
scas
insb
jbe
pushf
ja
mov
adc
adc
pop
xchg
cmp
pushf
jmp
mov
adc
insb
dec
aad
pop
incb
adc
das
dec
or
insb
and
in
ds
or
std
rcr
or
push
cmpsb
popa
xor
int3
repz
rcll
xor
insb
jns
out
cmp
pop
or
mul
outsb
das
les
mov
add
sub
out
test
lods
arpl
aas
out
xchg
jne
test
out
jge
inc
iret
lock
stos
hlt
mov
shrl
lcall
mov
xchg
gs
fmull
mov
insb
je
sub
push
jnp
mov
cmp
in
cmpsl
adc
xchg
imul
stc
fdivl
lods
icebp
insb
aaa
cli
xchg
mov
cmp
gs
mov
roll
imul
pop
test
cmp
sub
scas
jne
jno
insb
lret
cmp
test
or
arpl
dec
sti
push
mov
sub
and
insb
xor
loopne
xchg
es
or
jp
insb
ja
mov
scas
clc
push
insb
movsb
pop
mov
mov
fwait
orl
jl
insl
dec
cmp
daa
nopl
inc
in
fcmovnbe
cld
imull
popa
shll
adc
cwtl
popa
cmp
sbb
das
xor
icebp
inc
mov
in
loop
jle
xor
fbstp
push
das
mov
push
jg
insb
pop
add
jge
call
or
cmp
out
pop
adc
pop
fnstsw
or
fwait
adc
imul
push
lods
fwait
jo
push
add
jl
in
mov
inc
inc
iret
lods
add
lock
xchg
imul
inc
mov
sbb
jns
or
xlat
jbe
jmp
stos
jle
fdivrl
or
pop
inc
call
cwtl
mov
pop
loopne
fiaddl
adc
mov
mov
mov
in
imul
out
mov
mov
push
jbe
outsl
scas
cwtl
mov
adc
stos
fisubs
cmp
test
nop
nop
in
insl
les
stc
out
outsb
mov
data16
incl
xchg
adc
call
addl
mov
add
pop
push
inc
xchg
push
sti
mov
insb
cs
aas
xlat
jl
and
or
in
in
subb
dec
pop
and
pop
sbb
mov
fbld
gs
jmp
js
pop
insb
xor
jge
mov
in
adc
mov
push
out
dec
add
test
add
movsb
xor
push
inc
inc
pushf
fidivs
subb
rcrl
je
out
lods
sbb
jge
xchg
push
test
push
dec
xchg
push
sbb
inc
pop
push
sbb
inc
rclb
ss
imul
in
jo
in
rcl
mov
xchg
outsb
mov
add
lds
in
or
test
insl
jle
mov
into
jb
movsb
or
pop
jae
mov
inc
xor
pusha
scas
inc
loop
xchg
cld
jbe
mov
movsl
insb
into
push
jns
inc
out
sbb
insb
push
xchg
inc
inc
mov
cs
insb
sbbl
insb
dec
loopne
sbb
push
fiaddl
xchg
mov
fists
mov
test
rcr
js
dec
in
xchg
fsubs
insb
jb
ret
xlat
xor
push
cwtl
insb
stos
lret
lock
insb
push
in
loop
xor
xlat
movsl
insb
xchg
out
dec
and
insl
insb
sti
emms
es
test
pop
xchg
jmp
test
imul
in
test
adc
mov
add
jg
mov
testb
xchg
out
adc
xchg
mov
insb
iret
mov
add
jb
insb
divl
aam
insb
mov
repnz
insb
popl
xchg
pop
jne
jb
push
addr16
or
ss
sahf
test
push
mov
xchg
adc
stos
insb
jnp
mov
insl
insb
or
bound
sbb
ss
mov
stos
cld
in
fists
orl
fldcw
in
push
push
sti
ja
loop
or
pop
cmpsl
insb
ret
jg
xchg
mov
jno
and
insb
mov
xor
cmp
insb
and
inc
sbb
dec
or
and
cmp
pop
bound
xchg
pop
inc
xor
imul
adc
fsubrl
les
insb
push
jb
cmc
pop
push
enter
inc
cltd
push
int3
adc
fdivr
outsb
insb
mov
inc
cmp
insb
lock
into
lcall
out
mov
adc
inc
inc
sub
ds
xor
push
out
nop
jle
test
cmpsb
pop
push
test
jl
and
xor
bound
adc
sub
into
insb
scas
jmp
pop
ja
pushf
mov
les
lock
out
insb
pop
arpl
shr
push
jb
sub
std
inc
xlat
fucom
or
test
ds
sar
scas
sub
sbb
sub
dec
shrl
jge
xchg
rolb
insb
gs
push
sub
xor
in
push
ret
lret
imul
xchg
and
movsl
pop
or
subb
dec
mov
cwtl
out
or
fwait
hlt
cmp
pop
mov
xor
in
insb
inc
outsb
add
jb
mov
pop
or
push
xchg
imul
xlat
adc
addr16
lret
jmp
or
mov
aad
out
mov
leave
pop
xchg
jno
cmp
out
xchg
jns
loope
sub
xor
out
mov
insb
pop
fwait
leave
fsubr
cmpsl
mov
lods
jns
imul
xchg
xchg
in
hlt
mov
clc
adc
push
in
mov
jp
insb
in
mov
lahf
pop
jecxz
gs
xchg
hlt
or
out
jmp
cld
sbb
rorb
add
hlt
mov
push
add
lds
insb
jne
jb
daa
sbb
xchg
mov
xorb
xchg
insb
in
inc
insl
xlat
aaa
pushf
insb
sbb
fnstenv
insb
add
push
cwtl
aas
insb
out
mov
adc
and
in
sub
push
xor
or
dec
pop
xchg
xor
repnz
pop
pop
ret
lcall
dec
jbe
stos
imul
or
push
insb
xor
clc
pop
in
mov
lds
lcall
pop
jp
or
ds
push
push
sbb
xchg
aam
sbb
fdivl
mov
sub
or
pop
div
xchg
stc
insb
ja
mov
arpl
pop
sahf
in
les
mov
jae
adc
in
pop
mov
pop
dec
mov
testl
xchg
add
insb
jecxz
fcmovu
cli
sub
insb
sub
fisttpl
addr16
inc
add
inc
jae
out
popa
fucomp
sbb
and
push
lock
imul
popa
push
stos
add
jo
insb
mov
nop
xchg
icebp
insb
xchg
dec
sbb
out
sbb
push
cmc
rorl
cli
testb
leave
insb
cmpsl
je
pop
mov
in
dec
jmp
imul
shrb
pop
push
add
mov
push
int
fnsave
push
jecxz
lret
fwait
dec
fists
mov
pop
push
mov
out
scas
in
sub
loope
mov
test
imul
add
xchg
dec
xchg
lahf
out
cmp
fisubrl
push
addr16
push
sbbl
push
xchg
icebp
mov
push
lds
xchg
adc
pop
ss
sub
and
lcall
pop
ja
stc
cmp
xlat
jmp
and
fisttpll
addr16
mov
cmp
iret
out
jecxz
cmp
mov
dec
insb
mov
dec
push
test
jae
sub
in
insb
adc
cltd
jo
leave
lods
dec
shll
call
dec
cmp
in
jge
jecxz
insb
xchg
movsb
mov
mov
mov
push
les
sbb
mov
in
mov
xchg
popa
dec
mov
ja
int
sub
insl
dec
mov
jmp
loope
aas
pop
sub
adc
clc
or
fcmovnb
lock
or
movsl
mov
jmp
int3
es
gs
xchg
or
bound
outsb
in
sub
jmp
fldl
insb
fcoml
stc
and
andl
call
push
dec
lds
insb
shlb
data16
ljmp
cmp
das
cmp
loope
mov
sahf
inc
xor
subl
fnsave
push
imul
xchg
dec
inc
je
mov
mov
aas
push
aad
dec
cwtl
jmp
and
jge
lret
adc
adc
insb
jl
and
push
bound
cld
xchg
sub
les
outsl
jg
sbb
inc
push
pop
mov
mov
mov
insb
es
pop
out
cmp
mov
push
push
lods
xor
bound
inc
jl
mov
insb
pushf
sub
cmp
insb
pop
jmp
dec
inc
dec
mov
sub
pop
lds
mov
out
hlt
pop
xchg
ja
lret
dec
mov
fimull
adc
pop
jno
insb
inc
push
xor
inc
jl
fninit
inc
or
jnp
ljmp
xlat
and
or
pop
aas
in
and
ljmp
cmpsl
inc
adc
scas
insb
mov
loop
sbb
std
and
cmp
insb
jbe
or
cmp
movsb
insb
dec
sub
xor
or
push
mov
sarb
test
js
jl
mov
mov
jae
lock
mov
out
arpl
jmp
in
fistps
insb
lea
jno
addr16
jae
insb
cltd
insl
jge
add
adc
xor
or
pusha
adc
jne
leave
cmp
pop
addr16
mov
push
packssdw
xchg
or
pop
lret
and
lock
scas
xor
inc
rorl
ljmp
insb
out
arpl
gs
pop
out
cld
leave
iret
sub
insb
fcomps
mov
add
jae
outsb
pop
pop
clc
bound
cmp
add
pop
xorb
gs
or
insb
pop
ljmp
insb
push
push
pop
or
or
jg
cs
push
leave
sbb
mov
int3
and
mov
sub
rolb
cwtl
insb
mov
ror
js
lods
xor
or
imul
popa
insb
dec
das
lock
fistl
mov
jecxz
js
xchg
imul
add
call
outsb
insb
sbb
fistpll
aaa
insb
and
lret
sti
or
das
insb
mov
int
scas
cltd
cwtl
push
pop
icebp
or
sub
xor
mov
fstpl
jle
aas
shlb
repnz
push
insb
outsb
cmp
cmpb
mov
dec
or
jnp
dec
mov
outsl
or
imul
out
and
pop
imul
xor
dec
ds
or
xchg
btr
push
xchg
jae
sti
sub
cs
insb
in
add
sub
mov
mov
mov
xchg
pop
and
sbb
sti
push
insb
jecxz
loope
stos
mov
dec
pop
pop
adc
flds
cli
mov
imul
ljmp
adc
cmpsl
push
push
test
hlt
pushf
sub
mov
scas
push
insb
adc
dec
and
std
cltd
push
mov
jp
mov
les
jge
insb
xor
jnp
inc
ret
insb
or
or
push
sbb
in
mov
jle
push
and
dec
push
daa
xchg
sbb
or
not
ja
insb
sub
enter
fs
mov
or
gs
jnp
pop
call
insb
inc
mov
fcmovnu
mov
xchg
aas
mov
icebp
test
add
out
fdivrl
jge
outsl
insb
subb
testl
popa
nop
mov
clc
in
dec
fsubrl
sbbl
xor
loope
fsubrs
mov
jle
pop
or
subb
daa
out
add
sti
dec
jb
std
cs
push
in
inc
roll
aas
pop
leave
mov
cmp
insb
cmp
fmuls
and
push
mov
int3
jmp
testb
mov
mov
lahf
aas
jle
push
insb
dec
pop
movsb
sub
dec
mov
repz
lret
out
mov
insb
sti
loope
divl
jbe
lret
out
jb
lds
adc
xchg
inc
test
mov
fucomi
and
or
iret
cmp
clc
sub
push
add
fwait
mov
das
mov
js
lods
int3
pop
sti
insb
pushf
pop
aaa
out
pop
xlat
xchg
xchg
stc
pusha
lods
icebp
fs
ret
sti
adc
sub
shrl
in
bound
fsubl
sbb
cmpsl
or
insb
js
sbb
xorb
sti
xor
mov
bound
xchg
insl
push
add
movsl
and
arpl
dec
cltd
je
repnz
mov
imul
push
mov
popf
scas
fisubrs
dec
pop
inc
movsl
or
insb
movsb
mov
push
cmp
mov
pop
in
in
push
scas
mov
push
jae
xor
dec
enter
inc
shlb
mov
out
mov
fldcw
into
jmp
imul
mov
insb
cmpsl
xchg
fistps
fadds
jmp
push
sub
mov
outsb
loope
in
insb
aaa
inc
pop
push
pop
push
mov
adc
xor
push
leave
jne
insb
cld
faddl
add
xchg
xor
cmp
xchg
inc
xor
gs
dec
mov
dec
iret
xor
mov
or
mov
popa
jle
xchg
fst
jbe
dec
xor
insb
ja
negl
bound
out
inc
inc
pop
pusha
pop
insb
xor
mov
call
js
pop
mov
cmpsb
imul
int3
cmpl
push
xlat
test
inc
in
dec
push
sti
add
add
imul
sbb
mov
out
mov
mov
or
push
pop
push
orb
pop
sub
jmp
dec
insl
dec
cmp
jbe
loop
test
insb
stc
add
adc
jne
imul
in
jl
cwtl
imul
int
mov
test
and
mov
pusha
ja
icebp
sti
loopne
insb
jp
outsl
sub
dec
pop
jo
insb
notl
mov
insb
cmpsb
cmp
dec
xor
pop
pop
in
rcr
mov
ret
sahf
dec
lahf
fldenv
int
push
mov
xor
fcmovu
lods
std
imul
fisubrs
imul
pushf
pop
cmp
js
jno
dec
xor
dec
insb
mov
xor
dec
adc
call
add
fiadds
and
sahf
imul
cld
je
sub
mov
push
and
adc
xchg
add
sti
popf
sub
sub
gs
or
pop
into
push
dec
jl
push
insb
push
cmpsl
or
pop
icebp
out
add
in
outsl
xchg
lahf
cs
and
jp
into
and
insb
push
cltd
call
lods
push
adcb
insb
add
dec
adc
inc
shll
insb
ds
movsl
vhaddps
jp
insb
jo
outsb
and
mov
xor
in
push
sub
push
jae
push
and
pop
fidivrl
ds
add
js
insb
lea
sbb
ret
das
cmpsb
insb
mov
movsl
cmc
scas
movsb
mov
mov
popf
adc
jmp
pop
sub
filds
cmpsl
popa
add
mov
pushf
fcompl
mov
inc
bound
pop
fwait
pop
mov
mov
dec
mov
fsubr
cs
repnz
jp
push
inc
cmpsb
adc
add
or
js
packuswb
insl
daa
sbb
insb
das
inc
cmp
lods
sub
insb
xchg
shrb
idivl
daa
push
mov
mov
inc
pop
xor
adc
push
lods
xchg
ret
mov
sbb
inc
jp
cwtl
mov
jmp
adc
sub
jb
and
fidivrl
sahf
insl
mov
mov
mov
xchg
cmp
dec
pop
and
hlt
insb
xor
imul
aaa
dec
xchg
lods
xchg
iret
jnp
xchg
je
lcall
push
mov
insb
inc
xorl
cmpsb
add
sqrtps
pop
stc
repnz
xchg
fdiv
push
sbb
pusha
pop
lahf
mov
dec
jns
lsl
mov
lods
roll
movsb
insb
mov
cmp
insb
jns
sub
scas
mov
cli
cmp
adc
pop
sahf
pusha
cwtl
pop
imul
out
out
scas
jo
mov
and
in
pop
adcl
rol
add
test
cwtl
imul
iret
jb
cmp
push
dec
movsl
and
inc
in
push
mov
push
in
out
pop
xorb
arpl
popa
cmpsl
stos
repz
push
adc
rorb
jae
xlat
push
outsl
or
dec
dec
xchg
test
sub
dec
js
pushf
bound
lret
mov
ds
sti
int
or
in
or
and
mov
pop
out
jns
jl
insb
cmc
jp
pop
es
out
sub
mov
in
cwtl
lods
cld
push
inc
xchg
leave
insb
dec
cmp
imul
shrb
mov
subb
jnp
fs
js
imul
jl
or
frstor
scas
stc
mov
xchg
xchg
shr
insb
outsb
xor
lcall
push
cmp
imul
insb
xchg
shll
mov
xor
cmpsl
xor
imul
mov
sahf
sbb
push
inc
pop
xor
insb
pop
test
cltd
jo
movsbl
pushf
push
ljmp
sti
mov
shlb
in
loop
inc
shrb
inc
dec
add
jmp
dec
push
pop
aaa
mov
int
jb
cmpsl
fldenv
add
outsl
test
nop
cmpsb
insb
sbb
adc
insb
mov
xlat
out
pop
insb
add
mov
pop
ljmp
ljmp
pop
jnp
pop
xor
mov
add
movsb
out
lgs
sti
push
adc
jecxz
mov
dec
add
dec
nop
pushf
lods
insb
xchg
mov
in
imul
test
insb
mov
adc
push
ret
jp
cli
dec
xor
das
rclb
push
call
repz
push
add
popa
mov
mov
imul
jl
xchg
add
dec
xor
ret
pop
int3
xor
lods
push
cmpsb
sbb
fnstsw
jmp
and
jmp
nop
rcll
push
mov
add
xor
mov
mov
adc
inc
insb
lea
xchg
gs
jns
insb
movsl
ljmp
sub
push
xor
ljmp
insb
dec
mov
mov
push
aam
stos
cmp
and
imul
cmp
sbb
int3
add
jnp
mov
insb
jle
mov
das
lods
arpl
adc
mov
sub
add
stc
gs
and
fmull
sub
scas
loop
cmc
insb
xchg
adc
pop
shrb
scas
dec
iret
lret
lcall
mov
test
mov
insb
scas
push
insl
imul
mov
xchg
insb
jae
xchg
out
jmp
cwtl
dec
insb
and
pusha
insb
decl
jne
ljmp
dec
imul
dec
push
std
test
pushf
xchg
jecxz
mov
add
sti
cli
jmp
repz
pushf
mov
insb
fidivrl
jnp
push
out
mov
mov
addl
xchg
out
pop
xor
arpl
cwtl
fwait
in
add
loopne
jecxz
pop
push
jg
insb
jnp
lods
and
stos
sub
cmp
insb
lcall
mov
inc
lret
sub
movsb
insb
pop
inc
dec
or
insb
cmp
cmpsl
pop
xchg
or
into
xor
aas
fldlg2
outsl
cwtl
mov
fisubl
dec
insb
sub
test
lcall
sub
in
into
pop
test
lods
push
add
insb
movsb
arpl
sahf
insb
sbb
cmp
leave
fcmovb
insb
sub
mov
insb
jecxz
ljmp
mov
xchg
sub
sti
mov
xchg
lret
mov
push
insb
test
pop
adc
xor
insb
cli
stos
sub
adc
insb
dec
test
sub
xor
pop
loop
sub
inc
insb
ja
jl
xor
cmp
or
mov
inc
cmp
call
xchg
and
mov
imul
insb
xchg
jp
add
pop
pop
xchg
scas
jge
inc
ret
xchg
insb
pushl
rcrb
cmpsl
rolb
mov
push
stc
addr16
jl
ret
addr16
jmp
adc
dec
mov
pop
gs
dec
insb
or
js
outsl
push
push
push
jnp
push
cld
ret
push
les
pop
icebp
fldenv
rep
loop
pop
dec
add
loope
insb
mov
xor
inc
les
pop
lods
mov
cmp
jmp
and
in
pushf
sub
inc
insb
sub
xchg
lods
dec
rcrl
subb
loop
mov
negb
sbb
mov
xchg
in
or
pop
or
sbb
test
shr
jae
sti
nop
insb
jp
jg
push
jl
out
insb
mov
push
icebp
imul
cld
sub
fdivrs
adcl
inc
and
ljmp
pop
cmp
sub
dec
les
orl
bound
loop
out
xor
leave
daa
or
insb
sahf
fisubs
mov
rorl
scas
insb
cmp
out
cmpsl
insb
adc
test
xchg
xor
subb
sub
dec
cmp
inc
xchg
dec
je
stos
sahf
repz
mov
add
xchg
and
ret
cld
pop
gs
in
fwait
and
in
fistl
aad
sti
lret
xchg
xor
imul
mov
mov
and
lods
lcall
jno
pop
pushf
jno
jge
insb
push
jle
fs
scas
jnp
int3
mov
push
or
adc
gs
inc
mov
out
jae
fcoml
adc
hlt
in
mov
mov
insb
push
xchg
xor
inc
lcall
add
je
clc
jb
insb
test
mov
adc
rep
shrb
neg
mov
hlt
insb
fnstenv
shl
jae
pop
xchg
sbb
fsub
scas
jbe
push
inc
and
in
mov
xor
adc
push
jo
stc
mov
inc
loope
or
insb
jecxz
adc
sub
je
popf
insb
sub
clc
sbb
enter
dec
sahf
js
lret
inc
inc
imul
dec
faddl
jg
adc
dec
jo
push
insb
enter
lods
mov
add
into
insb
lods
and
insb
lcall
lea
cmp
aad
inc
or
ret
gs
addr16
dec
insl
in
dec
lods
xchg
das
insb
fisubrl
lds
xchg
xchg
push
or
mov
insb
inc
push
add
stos
je
mov
adc
jp
cltd
es
insb
pop
and
ds
sti
insb
ret
pop
f2xm1
ror
insb
test
in
xchg
xchg
int
dec
xchg
int3
sub
ret
sub
xor
les
or
cmpb
test
imul
mov
jmp
test
insb
jae
and
pop
cmp
or
bound
insb
mov
adc
mov
imul
dec
cmpsl
scas
or
cmpl
in
adc
mov
xchg
mov
imul
push
jb
insb
jle
sub
shrl
sbb
and
daa
adc
push
cmc
xor
mov
fcoms
xor
arpl
or
lods
sbb
xor
insb
mov
inc
mov
inc
add
or
in
pop
insb
sbb
cmc
jbe
outsl
iret
je
cmp
sub
mov
in
out
enter
mov
dec
nop
jge
push
xor
push
fwait
cmpsl
jl
pop
insb
fistps
in
insb
inc
gs
sub
test
rolb
jb
sub
fsts
mov
aad
mov
inc
js
arpl
lock
inc
mov
sar
movaps
cmp
stc
xchg
and
sub
xor
jnp
idivl
cmpsl
insb
ja
inc
or
insb
mov
enter
jno
jp
push
js
insb
pop
push
xor
mov
pop
push
cwtl
lods
dec
pop
test
dec
ljmp
cmp
dec
sub
xchg
or
movsb
cmpsb
stos
push
jp
in
loope
fsubrl
imul
and
mov
jl
push
insb
js
cld
jp
lahf
repnz
lock
andl
gs
and
scas
loopne
loope
jns
mov
xchg
sbbb
mov
cmc
shl
sub
pop
cmp
mov
fcomip
in
lock
mov
insb
call
shll
push
cmp
rcrb
lods
jge
insb
jb
xchg
movsb
out
das
in
data16
push
push
shll
sub
call
push
jb
insb
dec
mov
ljmp
jo
xor
negb
push
pop
cld
nop
into
insb
lret
out
dec
xor
jnp
testb
cli
push
mov
fidivs
imul
jle
je
xchg
cli
daa
gs
mov
sub
mov
data16
subl
pop
outsl
adc
pop
inc
sbb
and
push
ds
jl
andl
mov
sub
push
clc
dec
dec
ret
add
pop
cli
cmp
fucomp
push
test
inc
push
das
in
jo
cmc
cmp
scas
jge
or
xor
ljmp
pop
push
jecxz
inc
jmp
popf
mov
cmp
in
sbb
fbstp
push
jbe
dec
and
insb
dec
inc
lods
or
call
push
js
xor
fs
cltd
scas
iret
insb
test
adc
ret
repz
loopne
lods
movsl
jno
outsl
loope
and
test
lods
pop
fs
push
rcl
lock
jmp
sub
outsl
cmp
rorl
jecxz
cs
xor
push
ljmp
addl
inc
adc
mov
add
push
fs
sbb
aaa
adc
es
std
jecxz
cmp
lret
nop
std
xchg
xchg
repz
dec
jb
insb
add
int3
and
rolb
and
div
loopne
mov
loope
inc
sbbl
sbb
sbb
pusha
ret
sbb
add
xchg
pop
decl
mov
add
movsl
push
in
sub
mov
call
mov
adc
jmp
lods
lret
hlt
mov
gs
pop
xchg
cmpsb
or
dec
mov
add
mov
and
xor
repnz
adc
mov
adc
adc
mov
cmc
test
nop
mov
insb
popa
stc
xchg
inc
cmpsb
addr16
push
inc
or
dec
pop
lods
mov
mov
mov
adc
insb
pop
mov
mov
fwait
loope
pusha
xor
insb
add
or
insb
hlt
push
mov
jl
sahf
lahf
push
mov
iret
inc
test
aas
insb
scas
push
mov
cld
push
dec
jmp
mov
mov
insb
stc
sbbb
insb
aad
imul
inc
dec
add
dec
insb
std
mov
insb
addb
pop
clc
inc
das
mov
jne
sub
inc
push
loopne
push
lret
insb
or
xchg
xor
js
xchg
sub
mov
sbb
jne
addl
test
stc
cld
push
mulb
xchg
imul
fcoml
imul
xchg
insb
pop
mov
or
insb
cltd
mov
testl
je
pushf
aas
ret
stos
push
dec
cmc
pop
dec
add
and
out
add
push
shlb
lods
push
out
out
mov
mov
push
cwtl
insb
setl
test
mov
mov
out
clc
lods
rcrl
adc
es
imul
xor
push
insb
sbb
movsb
mov
fildl
push
sub
ja
pop
or
sub
inc
mov
insb
stc
adc
jecxz
in
popa
or
dec
aad
jmp
lds
dec
insb
daa
inc
test
icebp
test
dec
dec
loope
cmp
xchg
cmp
inc
popa
xchg
movsb
nop
mov
call
pop
fcomip
cmp
dec
lods
fs
jl
add
adc
pop
add
jne
sbb
xor
insb
cli
or
add
jbe,pn
lods
dec
inc
cmp
sarb
sbb
sbb
cwtl
sub
jae
dec
aam
mov
test
mov
xor
sarb
aam
in
jae
inc
cmp
stos
repnz
stos
insb
add
stos
xchg
inc
push
popl
cmpsb
mov
and
mov
iret
or
mov
bound
subl
lea
pop
mov
in
cmp
enter
jl
icebp
jl
adc
mov
imul
and
jbe
xorl
sbb
mov
pusha
dec
fcmovne
dec
xor
mov
rolb
je
cli
leave
enter
adc
inc
repnz
hlt
cmp
mov
pop
sub
push
insb
jecxz
sbb
adc
lods
xchg
or
adc
sub
mov
gs
xchg
push
mov
pop
insb
rcl
sub
inc
movsb
xorb
mov
adc
loope
imul
pop
or
insb
imul
cs
mov
adc
repnz
mov
imul
in
push
push
jne
jp
push
gs
xchg
xchg
dec
fdiv
jmp
xor
mov
insb
sbb
int
sti
insl
jno
imul
pop
leave
pop
jl
and
imul
jl
jl
insb
js
pop
adc
dec
rcrb
pop
cli
ljmp
movsb
aam
inc
xor
mov
push
insb
rorb
sub
in
mov
mov
ret
int
repnz
sarl
test
loope
insb
shrb
lea
rclb
cld
aaa
jge
lods
fsubr
pop
ja
loop
outsb
rorl
mov
insb
xchg
popa
and
int
repz
jle
and
mov
data16
xchg
sub
insb
insb
pushf
mov
daa
mov
test
in
push
lods
mov
jp
xor
cmp
push
nop
fstpl
or
bound
insb
adc
push
popf
arpl
lock
addb
push
es
insb
mov
call
adc
mov
cld
insb
mov
out
cs
and
mov
and
dec
xchg
sub
or
insb
aad
jb
add
adc
add
jae
and
inc
mov
mov
ficoml
popa
aaa
mov
gs
aas
sbb
cld
call
divb
in
cmp
pop
insb
mov
add
movsb
das
sbb
stos
decb
jl
push
int
lods
sahf
mov
insb
dec
cli
jmp
push
adc
insb
repz
cmp
push
dec
pushl
inc
sahf
cs
insb
lret
imul
add
cmp
insb
pop
dec
push
sbb
cmp
jne
add
inc
cmp
cld
fisttpl
shlb
pop
adc
xor
dec
mov
in
cmc
push
insb
lahf
data16
add
jmp
loope
jg
negb
pop
loop
pop
mov
test
push
pop
jp
aam
mov
cld
pop
repz
and
gs
inc
or
inc
nop
push
sub
test
popa
pop
pop
cmp
cmp
mov
xchg
imul
in
inc
aad
xor
rol
xor
leave
clc
and
xchg
xchg
pop
cld
and
fistps
lret
push
in
lret
dec
das
jl
in
inc
nop
fwait
cs
mov
jo
xor
fsubp
sahf
ror
fwait
lock
sub
push
cmpsb
or
push
out
outsb
fsubrl
mov
imul
repz
sub
pop
out
lds
mov
pushf
data16
gs
fistpll
sahf
lods
in
add
out
decl
push
insb
inc
xchg
out
lret
pop
xchg
mov
insb
shlb
dec
cmpsl
xor
fidivrl
lods
mov
insb
lods
cmp
nop
insb
les
sub
or
sbb
jnp
mov
into
cmp
lds
movsl
insb
dec
push
ret
cmpl
das
xchg
pop
aaa
insl
cmpsb
and
or
scas
insb
sbbb
sbb
inc
rorb
loopne
xchg
lret
clc
jnp
in
mov
cmpsl
mov
mov
ret
mov
dec
inc
pop
in
xor
push
and
sbb
mov
jg
shlb
out
xchg
insb
lcall
incb
xor
dec
cs
dec
jbe
dec
add
push
adc
dec
and
orl
pop
jp
and
in
ljmp
insb
sub
incl
out
sahf
jne
pop
imul
icebp
mov
ret
add
sub
insb
loope
mov
xchg
sahf
xchg
test
sbb
insb
scas
mov
inc
lret
insb
cmp
lcall
jecxz
xor
insb
xor
sahf
insb
pushf
imul
and
cmpl
sub
fimull
insb
pop
into
cmpsb
xchg
xor
sbb
dec
repz
andb
hlt
xor
cli
and
jp
sbb
push
leave
jbe
insb
test
inc
xor
rorl
adc
pop
sbb
push
in
call
inc
lret
or
jl
loopne
out
mov
xchg
sbb
leave
jns
aaa
xchg
xchg
insb
lods
push
loop
call
mov
jno
cwtl
pop
and
pop
insb
mov
arpl
call
or
push
mov
cmp
adc
mov
imul
add
hlt
mov
add
ret
cmp
lods
sub
in
insb
repnz
mov
imul
divb
inc
insb
push
xor
insb
mov
push
scas
out
negb
and
aad
xchg
fldt
fidivrl
and
imull
loopne
repnz
inc
pop
fwait
cli
pop
insb
jecxz
mov
mov
lret
mov
movsb
imul
out
cmp
insb
aad
insl
and
fldenv
movsb
lret
dec
out
das
xchg
sahf
insb
addl
pusha
imul
dec
mov
dec
insb
fwait
jmp
ljmp
sbb
dec
test
jecxz
add
or
cmp
pop
lds
insb
xchg
jae
scas
popf
mov
hlt
repz
cltd
xor
add
insb
js
imul
insb
xchg
pop
pushf
push
adc
cltd
scas
dec
int3
jns
mov
out
mov
push
test
insb
pop
mov
inc
clc
mov
repz
insb
adc
ss
mov
js
pop
je
xchg
lcall
clc
mov
int
cmp
and
sub
arpl
sub
dec
lret
sti
fisubrl
pop
std
pusha
iret
push
push
adc
and
insb
push
sbb
mov
pop
pop
add
inc
lods
xchg
sub
shrb
and
cmp
movsb
mov
push
pop
pop
sub
mov
push
inc
gs
sbb
rol
jl
sbb
je
test
xchg
leave
aam
call
sahf
lds
imul
cmp
jle
or
arpl
mov
inc
mov
orl
shll
push
push
sarb
push
daa
dec
or
aaa
inc
pop
and
sub
or
jecxz
imul
xor
cli
mov
outsl
inc
inc
mov
lret
push
push
dec
stos
sub
imul
ret
push
fcoml
add
cmp
and
jg
xor
mov
sub
in
test
jge
add
fs
inc
jg
xchg
icebp
push
insb
push
testl
les
cmp
addr16
aad
scas
cs
arpl
push
adc
in
movsb
stos
push
scas
pop
or
inc
adc
add
push
jmp
bound
mov
sub
sbb
pop
arpl
add
mov
insb
in
jecxz
mov
hlt
pcmpeqd
mov
movsl
test
mov
mov
xchg
pop
insb
mov
cmpsb
lcall
add
bound
loopne
jmp
mov
mov
cmp
ret
mov
inc
cmp
adc
jnp
leave
lods
aas
in
fs
in
push
ret
cli
call
test
sub
xchg
xchg
push
insb
jp
inc
mov
mov
or
jecxz
out
ret
sub
insb
nop
and
mov
insb
scas
push
ja
lcall
push
stc
ds
insb
inc
daa
fcmovnbe
mov
aaa
into
sbb
insb
clc
adc
mov
ss
pop
insb
mov
dec
outsb
adc
mov
insb
xor
push
xchg
push
dec
xchg
push
push
pop
rorb
rolb
push
jmp
jnp
cmp
xor
sar
andb
cmp
mov
data16
cmp
dec
aam
dec
jge
adc
out
xor
fcmovbe
fs
pop
adc
cmovbe
sahf
mov
mov
fistpll
ret
data16
movb
push
or
cwtl
das
push
or
repz
fs
cmpl
mov
push
sub
push
sbb
test
jae
mov
xchg
sti
dec
lods
scas
pop
loopne
push
add
pop
dec
xor
pop
dec
testb
xchg
inc
out
shrb
in
mov
insb
stos
addr16
out
test
cmp
sub
pop
and
mov
dec
sahf
cmpsl
in
mov
inc
push
push
test
outsl
insl
lcall
dec
sbb
jno
mov
lea
dec
push
jecxz,pn
insb
sbb
roll
ror
fstpt
outsl
insb
fiaddl
mov
dec
repnz
sub
add
outsb
cmpsl
mov
fcomps
push
or
add
daa
and
mov
adc
lods
inc
scas
outsb
jl
gs
and
adc
lret
test
cltd
inc
out
mov
inc
sub
or
lock
and
sub
insb
push
fnsave
cmp
test
push
or
dec
insb
adc
gs
adc
jmp
push
cmc
push
mov
add
gs
ds
pop
or
aad
insl
dec
jge
xor
adc
pop
loope
pop
je
pop
aam
mov
mov
stos
arpl
dec
push
insb
jo
sub
pop
xor
sbb
shl
and
divl
fs
cmp
and
pop
pushf
aaa
push
push
or
shll
orb
and
lods
adc
imul
stos
outsl
sub
push
dec
insb
scas
adc
fs
mov
push
test
gs
shrb
xor
mov
insb
fsubl
jl
mov
jbe
insb
jbe
xor
stos
add
pop
mov
mov
ret
insb
mov
dec
sub
ljmp
add
fldl
cmp
pop
pushf
inc
push
xchg
shl
sbb
icebp
addb
sti
add
inc
ds
cli
enter
push
test
mov
hlt
lcall
push
fildll
leave
popf
mov
sub
test
mov
testb
sbb
shlb
inc
pop
cltd
pop
pop
dec
fcmovu
push
jns
xlat
outsb
add
cmp
xchg
fwait
mov
int3
or
cld
movsl
push
js
push
test
xchg
sbb
pop
xchg
mov
mov
inc
out
cmpsl
lock
insb
xchg
adc
xorb
mov
hlt
insb
or
repnz
or
ret
push
insb
and
mov
and
mov
jo
jl
mov
mov
aam
xchg
pop
lods
fwait
jno
push
xchg
lock
sbb
test
jae
dec
dec
mov
pop
fmul
enter
ljmp
addb
lods
mov
mov
scas
cmp
loop
sub
or
mov
insb
clc
xor
inc
nop
mov
jno
cmpsl
insb
cmpsb
cmp
or
mov
pop
inc
rcrb
xor
cmpsl
or
insb
and
rorl
dec
arpl
insb
mov
jle
clc
push
pop
inc
mov
mov
aam
inc
pushf
insb
pop
lea
add
pusha
pop
cmp
fwait
lahf
xchg
sahf
ja
and
inc
adc
pop
push
test
imul
jo
push
or
jmp
xchg
cmpsb
fwait
xor
gs
lock
addr16
and
dec
sbb
pop
lods
jmp
and
or
ljmp
fdivrs
and
or
xchg
addr16
mov
mov
enter
neg
pushf
sub
pop
sbb
push
jne
popa
ret
xchg
gs
out
jmp
lret
or
cmp
cmpb
sub
sti
dec
add
lock
cmpl
inc
mov
lock
add
pop
and
int
cmp
or
or
stos
jmp
jl
je
iret
call
push
jp
or
push
adc
je
pop
pop
push
add
push
jno
aaa
jbe
inc
lea
sahf
imul
fnstsw
mov
sub
cmpl
xor
push
sbb
pop
jae
in
int3
sub
sub
rorb
pusha
mov
movsb
je
test
cmc
xor
enter
orb
mov
jmp
mov
mov
aad
add
outsl
dec
sub
mov
fs
adc
pop
int3
fldt
fld
xchg
shrl
adc
add
xor
movsl
nop
mov
out
pop
sub
out
mov
lods
push
pop
nop
jb
pop
xchg
lods
outsl
addl
mov
or
faddl
push
stos
or
sbb
and
movsb
jecxz
inc
cmpsl
mov
xchg
sarl
xchg
xchg
dec
leave
adc
mov
push
je
outsb
insb
pop
xchg
flds
clc
add
insb
lds
out
jns
cltd
mov
stos
dec
mov
popa
jecxz
and
movsb
pop
mov
test
inc
add
adc
dec
cs
lods
ret
daa
push
aad
xchg
repz
insb
adc
sbb
sbb
xor
insb
xchg
enter
test
ds
and
and
xchg
cmpsb
xchg
into
add
repnz
cmp
jns
push
addr16
movsl
push
stos
lds
mov
mov
sub
jl
shl
add
jle
pushf
cmp
xchg
cmc
xchg
add
fidivrl
xorb
sti
stc
hlt
fwait
imul
jnp
jg
mov
rolb
cwtl
push
xor
loope
int3
aaa
push
and
insb
and
shrb
and
push
mov
add
repz
mov
dec
insb
xchg
lods
sti
push
add
popa
enter
jo
das
or
push
je
mov
sbb
add
sarl
imul
add
fistl
adcl
pop
rep
xor
xchg
repnz
jg
sbb
sbbb
cmc
insb
ret
xor
insb
sarl
cmc
in
cld
ja
push
push
in
mov
xor
imul
lret
push
adc
repnz
test
ljmp
das
in
cmp
adc
gs
pop
push
popa
pop
dec
insb
mov
sbb
dec
and
je
dec
stc
add
popf
adc
jmp
gs
movsb
imul
jnp
loopne
fiadds
mov
cltd
adc
xchg
insb
icebp
cmc
push
cmp
inc
sbb
or
inc
mul
bound
lods
inc
mov
mov
jle
imul
and
shlb
das
jo
aam
je
xor
insb
mov
pop
adc
hlt
add
sbb
pushl
push
add
inc
pop
je
out
insb
inc
cli
mov
add
mov
xor
jle
cmc
rcrl
push
in
iret
xchg
push
insb
mov
scas
lods
dec
mov
insb
sbb
add
test
and
js
fisttps
test
inc
lock
aaa
gs
cmpsl
pop
insb
add
insb
mov
das
pop
xchg
insb
inc
inc
cmp
ficoms
mov
insb
js
lods
mov
insb
mov
cmpl
push
ficoml
psubw
insb
mov
jno
shll
sahf
imul
out
mov
jmp
insb
jns
dec
fcomps
and
xchg
bound
or
popf
jns
ud2
shr
lret
clc
or
mov
stos
sub
cmp
pop
rep
jnp
ret
loop
insb
shlb
cmpsl
cwtl
les
movsl
push
cmp
imul
push
dec
xor
stc
sub
fisttpll
or
shl
pop
insb
testl
push
xchg
jb
push
orb
dec
insb
pop
jns
xchg
or
sub
test
and
and
faddp
jae
bound
push
push
lods
push
int3
mov
insb
dec
dec
pusha
jns
cli
mov
and
add
lods
out
out
insb
movsl
in
mov
insb
sbb
das
out
cmp
outsl
imul
insb
sub
and
push
pop
insb
adc
sub
jle
xor
repnz
adc
in
insb
inc
and
outsl
aam
insb
mov
cli
sbb
loop
jae
test
ss
xchg
popa
add
mov
loopne
xchg
jae
sub
sub
insb
jns
dec
xchg
dec
inc
adc
insb
inc
es
imul
icebp
adc
mov
test
sbb
or
inc
insl
repnz
push
sbb
jmp
out
inc
cmp
dec
jnp
pop
enter
inc
jne
sbb
mov
in
lods
push
loope
adc
xor
inc
or
es
mov
mov
mov
adc
jne
fistl
insb
aad
stos
push
nop
loope
cmpb
mov
insb
jbe
mul
stc
xor
scas
dec
shll
adc
push
adc
repz
adc
jmp
je
sub
je
jl
fcompl
pop
sbb
out
push
arpl
stos
xchg
std
jns
test
in
sbb
out
fnsave
add
in
mov
or
outsl
imul
imulb
out
fs
cmp
sub
lret
adc
jo
in
xor
dec
xor
dec
insb
ds
idiv
jg
test
cmp
adc
mov
or
push
mov
cmp
in
jns
mov
repz
les
jo
pop
mov
int
add
cmp
icebp
les
in
jp
ja
stc
stos
xor
lcall
imul
xchg
lds
shl
aaa
in
std
add
or
nop
jne
filds
cli
sarl
jo
js
cmp
or
mov
in
jg
push
jecxz
aad
sbb
test
sti
jle
out
sub
jge
shll
and
sahf
push
xlat
adc
sub
fs
adc
cmpsb
add
and
jb
insb
jo
jnp
xor
ror
shlb
xor
or
insb
jnp
mov
test
insl
add
adc
mov
out
fiaddl
cld
test
mov
push
movsl
xchg
je
inc
cmpsl
mov
push
push
jl
out
pusha
stos
scas
adc
not
mov
orb
jae
jns
cmpsl
data16
pop
or
test
pop
jp
cmp
dec
jne
sub
sub
lods
mov
add
iret
jecxz
add
jmp
jl
outsl
test
and
mov
cmc
es
inc
cmpsl
stos
inc
insb
dec
or
rcrl
push
ss
mov
insb
sbb
push
xchg
das
test
in
mov
clc
cwtl
adc
xchg
insb
es
call
cmp
out
or
jbe
outsl
xchg
jl
subb
lret
sub
cld
frstor
push
movsb
insb
adcl
in
add
icebp
inc
pop
shll
fs
mov
test
lds
outsb
pop
mov
enter
push
jge
cmpsb
mov
or
imul
pop
push
dec
jb
push
mov
pusha
in
fs
stos
inc
xorl
frstor
jl
or
push
xchg
lret
enter
mov
in
add
dec
sub
jecxz
pop
cmp
push
les
sbb
loope
mov
add
fistpl
cmpl
jns
js
in
iret
data16
push
cmp
push
imul
in
xchg
ret
mov
jo
int3
scas
pop
enter
fs
mov
push
gs
shl
in
out
mov
insb
push
sub
lods
cmp
arpl
xchg
mov
mov
jp
or
rep
xor
jb
cltd
jae
dec
pop
cmp
push
mov
add
xchg
jne
sahf
and
call
repz
into
nop
outsb
dec
notl
insb
push
outsl
xchg
test
push
insb
add
inc
fisubs
cmp
jae
out
ret
in
insl
shlb
sbb
movsb
mov
test
vmaxsd
push
dec
mov
mov
insb
fwait
rolb
test
imul
pop
xchg
test
loop
inc
outsb
pop
jo
and
lods
inc
insb
orb
add
iret
test
aam
insb
inc
rorb
mov
dec
or
test
dec
je
in
inc
adc
adc
jge
mov
pop
stc
dec
cltd
lret
sbb
andl
insb
or
and
insb
insl
jo
icebp
sub
mov
insb
imul
cwtl
mov
es
repnz
inc
jl
cmpsb
insb
xchg
jno
cld
and
and
pop
movsl
mov
or
and
subl
cmc
sbb
lcall
push
insb
sub
negl
push
daa
outsl
adc
fadd
add
pushf
leave
xor
pop
addr16
add
pusha
xor
inc
dec
in
mov
jmp
pop
xchg
adc
inc
insb
lcall
adc
mov
popa
xor
cmp
loopne
jge
jl
sahf
imul
xor
dec
cmp
imul
or
movsb
add
test
mov
jae
cmpb
in
shrd
xlat
sub
insb
pop
xchg
jge
cli
jecxz
scas
pop
or
push
lret
sub
outsb
sbb
mov
xchg
or
add
mov
dec
xor
xor
cmp
scas
fiaddl
lods
jmp
rorb
push
es
mov
das
sub
inc
xchg
dec
pop
sti
xor
mov
jns
lret
xchg
or
ss
insb
sbb
and
lods
imul
std
cld
aam
negb
pop
je
dec
jno
popf
inc
mov
xchg
je
andb
loope
nop
adc
lea
sub
insb
jl
dec
mov
insb
test
or
mov
fs
outsb
fisttpll
and
cli
cmpsl
dec
data16
ret
addr16
inc
sub
insb
lods
divb
and
imul
inc
aad
imul
into
je
xlat
insb
mov
test
sub
aas
test
mov
dec
std
insb
mov
push
jecxz
pop
sbb
pop
push
aas
sbb
adc
mov
fwait
testl
out
mov
cmp
jne
add
xchg
aaa
adc
dec
in
gs
jg
mov
dec
insb
mov
adc
pop
inc
aas
sub
xor
inc
gs
pop
idivl
mov
push
popf
int3
mov
mov
pushf
xchg
or
add
insb
inc
mov
pop
jne
cmp
aad
enter
cli
dec
leave
loopne
fstpt
lret
add
test
shlb
or
fs
cld
ret
or
repnz
in
inc
adcl
push
ja
sub
mov
shlb
divl
ljmp
pop
pushf
out
in
inc
xor
call
mov
popf
mov
lods
cmpl
repnz
popa
xchg
lods
es
inc
cmpsl
test
daa
loopne
dec
sbb
cmp
pop
std
jge
sbb
lds
mov
insb
stos
dec
dec
ss
popa
insb
es
icebp
imul
xchg
int3
test
inc
xchg
jno
jmp
jmp
fdivrl
les
or
sbb
ret
insb
mov
add
jg
in
jp
add
leave
mov
insb
dec
or
inc
mov
dec
imul
insl
and
and
mov
jl
jns
lcall
lods
mov
pop
std
and
repnz
mov
push
xor
ja
stos
pop
in
and
fisttpll
insb
imul
enter
bound
lcall
dec
rcrl
fwait
aam
xchg
pop
insb
xchg
add
movsb
icebp
insb
mov
and
mov
bound
pop
and
insl
mov
in
xchg
enter
loopne
and
cmpb
adc
call
int3
not
sub
stos
cmp
popa
inc
addl
xor
icebp
enter
mov
insb
ss
mov
xor
push
pop
mov
cld
insb
fidivs
lea
mov
inc
clc
sub
insb
lock
inc
push
cs
insb
sub
jmp
mov
fdivr
in
mov
adc
ficompl
insb
daa
leave
fsubs
in
mov
js
imul
lods
jmp
aam
cmp
pusha
sahf
mov
adc
cmc
test
cs
test
or
add
aad
or
cld
mov
das
sub
add
filds
shr
ja
insb
push
loopne
fs
jb
dec
insb
pop
icebp
dec
mov
movsl
jg
sub
push
sbbl
insb
out
in
fadds
ds
mov
lret
sbb
mov
fsubp
nop
insb
insb
insl
imul
cmp
aad
aad
mov
insb
xchg
mov
dec
pop
popa
lcall
sahf
aas
test
testl
mov
insb
lcall
mov
pop
shl
mov
in
lods
fsubl
loopne
pop
call
cmp
push
mov
push
sub
inc
negl
or
sub
out
sahf
dec
cltd
push
sub
xchg
shrb
push
enter
or
xor
insb
cmpsl
imul
mov
sahf
lea
push
insb
fstpt
rcrb
in
movsb
insb
jne
ficoms
pop
mov
dec
insb
icebp
adc
mov
in
push
rcrb
ljmp
test
inc
sti
movsb
jbe
push
and
sub
or
insb
add
lret
movsb
into
out
adc
mov
mov
pop
test
mov
cmp
adcb
mov
popl
arpl
int3
insb
cld
int
movsl
lcall
push
jmp
or
addr16
push
xor
mov
test
insl
sub
cmpsb
mov
jl
fidivl
hlt
and
je
adc
sbb
test
cli
mov
or
cmp
pop
xchg
iret
adc
sbb
orl
and
cld
or
gs
dec
sbbb
lret
lret
mov
insb
les
cmpl
and
xchg
mov
leave
add
mov
cli
dec
std
lea
jae
and
pop
fidivrs
arpl
cwtl
xchg
imul
cmp
push
insb
adc
xlat
push
scas
xchg
dec
insb
outsb
sub
fdivrl
xchg
popf
push
divb
dec
fsub
fsubrp
ja
jno
int
imul
fists
xchg
imul
fwait
mov
mov
push
subb
out
jmp
add
mov
jg
out
loopne
mov
ljmp
cwtl
mov
dec
into
pop
aaa
dec
imulb
stos
pop
in
adc
and
out
clc
jmp
gs
mov
jmp
adc
orb
insb
sbb
sub
fs
mov
insb
jmp
arpl
or
imul
test
push
insb
xchg
inc
adc
cmp
xchg
insb
rcrb
add
push
insb
loop
pop
sub
cmp
lea
adc
jno
ja
pushf
pusha
pop
or
es
imul
nop
mov
enter
sub
imul
outsb
insb
xor
dec
add
insb
xor
xchg
pop
and
insb
lret
call
dec
jle
pushf
lea
xlat
push
stc
outsl
sub
test
insb
andl
das
inc
mov
mov
test
cmpb
push
adc
fisttpl
mov
sbb
jo
mov
cmpsb
pop
data16
in
aam
inc
popa
pushf
ret
repnz
push
mov
jge
cmp
loopne
cli
dec
adc
insb
test
insl
adc
out
aas
test
fldl
mov
sbbl
pop
pop
insb
xlat
fdivrs
cmpb
daa
xchg
aam
pop
insb
bnd
cmp
push
lret
cmp
aam
insb
mov
stos
negb
xchg
data16
xor
xchg
out
test
mov
insb
clc
imul
mov
and
imul
pop
push
repnz
xorb
cmp
in
daa
cmpsb
insb
inc
cmpsl
fsubl
gs
or
xchg
dec
jnp
movsb
cmpsl
push
loope
daa
cld
ret
mov
push
adc
mov
dec
push
cld
leave
sbb
insb
cmpsb
jno
movsb
sti
and
testb
xor
sub
fistl
test
pop
jns,pt
ret
jo
insb
decl
test
lret
mov
fisubl
xor
add
roll
and
sbb
add
or
lret
inc
mov
testb
inc
imul
cmp
inc
insb
js
inc
mov
insb
sub
push
sub
xchg
xchg
pop
insb
gs
rol
test
clc
pusha
and
into
inc
outsb
insb
inc
call
sub
xchg
xchg
sbb
rclb
mov
ljmp
dec
enter
sbb
inc
xor
or
shrb
cmc
adc
push
xchg
and
aaa
scas
mov
jo
inc
or
insb
imul
adc
and
lea
fildll
sub
xchg
insb
stos
jne
jns
jp
imul
aaa
push
add
insb
je
out
mov
out
and
loope
sub
cmpsb
pop
dec
mov
pop
dec
aas
insb
or
xchg
scas
sub
jmp
insb
mov
cmpl
xor
scas
insb
fidivrs
jbe
sub
add
insb
cld
fwait
imull
xchg
mov
fsubl
pop
outsl
ds
imul
lds
insb
add
inc
push
outsb
insb
loope
aam
pop
mov
sahf
nop
jecxz
mov
pop
imul
test
les
dec
push
pop
xor
fsubr
insb
movl
out
insb
fistps
lds
push
aad
insb
sbb
and
pop
sbb
and
jle
insb
mov
leave
aas
or
ret
pop
adc
mov
xchg
pop
mov
leave
insb
sbb
test
shrb
inc
sub
mov
sti
test
test
out
pop
dec
in
test
hlt
imul
pop
sub
insb
or
jno
adc
test
jbe
lea
in
imul
into
imul
cmp
mov
mov
insb
mov
je
imul
or
lret
mov
mov
mov
xor
jnp
jb
lcall
adc
aam
movsb
mov
jns
mov
jp
je
je
inc
addr16
push
mov
test
and
es
ja
fsubrl
loop
je
insb
ds
je
jp
push
jae
dec
pop
push
fwait
cmp
scas
sbb
in
movsb
jne
inc
mov
or
xor
insl
jns
push
in
add
sbb
clc
nop
sbbb
daa
jae
or
test
lds
pusha
add
int
pusha
fcmovnbe
dec
push
push
sub
loop
inc
jl
push
sti
lods
push
or
xor
push
cld
xorb
rorb
jno
or
lock
mov
outsb
push
or
sub
aaa
push
xor
sub
imul
mov
cmpsb
aam
mov
inc
stos
adc
cmp
sbb
cmp
mov
insb
insb
insl
das
lcall
and
insb
xchg
repz
jns
mov
in
andl
dec
inc
push
xchg
and
loop
sub
push
inc
pop
or
ljmp
mov
mov
test
das
mov
imul
jl
inc
mov
or
pop
insb
pop
inc
aaa
cs
andb
insl
cmp
dec
push
in
mov
shrb
jmp
repnz
add
les
push
in
shrl
jb
jl
mov
pop
sub
lahf
int3
mov
cmp
bound
push
xlat
scas
das
jmp
ljmp
ret
arpl
dec
inc
test
fs
fimuls
inc
mov
ja
mov
rolb
xchg
in
xchg
sbb
pop
movsb
mov
sub
cwtl
cs
push
jmp
movsl
mov
gs
sbb
sub
js
jns
bnd
jmp
popf
les
mov
daa
mov
dec
and
stos
sub
jp
pusha
mov
push
push
gs
jecxz
push
pop
ret
stos
xlat
mov
xor
icebp
insb
or
out
inc
xchg
and
xor
in
aaa
jae
push
dec
insb
adc
add
xlat
or
insb
stc
and
into
scas
or
mov
pop
int3
enter
and
fs
insb
outsl
inc
add
push
push
ja
mov
mov
bound
pop
mov
call
insb
arpl
jp
insb
xchg
movsb
testb
in
push
out
xchg
in
popf
or
lcall
xchg
xlat
sub
inc
sub
pop
xchg
pushf
cmp
cld
push
in
and
jno
sbb
shlb
sbb
add
mov
xor
and
mov
jnp
jb
push
into
inc
mov
jl
insb
or
iret
mov
insb
stc
out
lock
lcall
data16
and
pop
daa
jae
xchg
test
lcall
push
in
imul
fisubrl
pop
lods
jb
dec
pop
loopne
insb
sti
cmp
inc
cmpsb
add
mov
jecxz
shrl
mov
negl
jp
or
xchg
xchg
rcrb
jl
movsb
and
lahf
cmp
int
adc
enter
outsl
mov
repnz
add
test
cli
bound
les
xlat
sub
sarb
mov
mov
xchg
es
bound
xchg
jo
fwait
jmp
dec
adc
push
insb
push
movsl
pusha
std
cli
dec
jne
push
xchg
sahf
mov
pushf
xor
jmp
repz
and
les
and
and
imul
mov
gs
dec
adc
scas
push
inc
shlb
mov
xchg
into
test
outsb
sub
stos
popf
lods
aam
insb
test
sub
insb
lds
daa
lock
mov
jmp
popf
movsb
dec
xor
insb
cwtl
ret
jnp
lock
insb
adc
scas
out
xor
sub
imul
aam
scas
dec
sub
insb
jmp
cmp
cmpsb
dec
jge
dec
add
pushf
or
mov
insb
push
lea
fcmovbe
lret
insb
add
repnz
ljmp
adc
jecxz
insb
adc
cmc
inc
aam
jb
gs
out
repnz
insb
push
and
mov
lds
cmpsl
test
cmpxchg
mov
insb
enter
loope
insb
popf
repnz
enter
cmc
jbe
mov
mov
and
jo
jmp
pop
or
mov
out
adc
repnz
dec
imul
sbb
dec
insb
xchg
sbb
lock
xchg
fimull
idivb
pop
pop
adc
insb
jns
andl
inc
sub
cwtl
xchg
out
dec
test
adc
in
test
rcl
sub
push
insb
pop
das
out
fisttpl
outsb
jo
nop
in
dec
lahf
mov
and
and
hlt
in
xchg
fwait
insb
imul
insb
mull
or
aaa
pop
lock
pandn
sahf
push
push
imul
xchg
insb
mov
adc
sub
mov
imulb
jle
xchg
cltd
dec
xchg
push
lret
mov
outsl
jno
stos
imul
outsb
sarl
pushf
inc
test
mov
ja
mov
sti
nop
sub
in
stos
subb
sbb
mov
fisubrl
lds
scas
mov
sbb
imul
dec
mov
xlat
pop
test
ds
aaa
inc
jl
push
sahf
sbb
js
mov
adcb
pop
cwtl
jecxz
mov
and
cs
or
orl
iret
insl
sub
das
mov
sub
and
test
shrl
mov
loope
or
cs
shrl
into
pusha
insl
xor
les
mov
sti
lods
outsl
jnp
push
cmp
outsb
inc
ljmp
in
adc
pop
jge
adc
and
cli
inc
xor
adc
sbb
sbb
imul
fildl
loope
fildll
mov
push
jmp
arpl
data16
andb
sub
test
mov
pop
cmc
adc
cld
sarl
insb
ds
test
insb
stos
cmp
pop
jne
cmp
insb
cmp
or
and
mov
imul
lods
repnz
inc
mov
out
sub
xor
mov
mov
rep
test
stos
insb
sbb
jge
pusha
insb
adc
addr16
mov
out
lahf
movsb
adc
or
shlb
outsb
shll
dec
xchg
push
dec
insb
lret
cli
insb
mov
inc
xchg
mov
pop
daa
insb
or
adc
fucomp
pop
insb
into
xchg
divb
cmpb
lret
or
loope
xchg
adc
push
push
addr16
dec
push
xchg
sub
rcr
sub
out
ret
lcall
push
mov
ljmp
lahf
data16
dec
jno
iret
lods
daa
shll
ss
imul
jnp
jbe
fwait
cmp
mov
das
imul
pop
dec
call
mov
pop
fs
pop
adc
push
dec
push
insb
xchg
or
jne
daa
imulb
aaa
push
clc
xchg
inc
insb
xor
inc
les
jo
pop
jg
xchg
scas
dec
jbe
movsb
repz
fstpt
dec
mov
cmc
addr16
fsubs
mov
test
mov
imul
inc
cli
insb
pusha
sbb
dec
adc
insb
pop
ss
or
sub
rcrb
mov
fwait
mov
int
jae
in
cld
or
insb
cli
jno
lods
in
push
addr16
pop
lret
mov
movsb
jmp
xchg
shl
insb
xchg
or
or
insb
popa
mov
fisubrs
or
fmull
push
jmp
ds
add
dec
outsb
out
pop
jo
insb
roll
and
xchg
je
insb
lret
cmc
iret
xchg
outsl
and
in
loope
mov
imul
cmp
insb
add
jne
xor
cmp
mov
stos
ret
mov
and
insb
aas
mov
mov
mov
insb
imul
insb
icebp
arpl
jb
pop
gs
pop
xorl
lahf
push
outsb
cmpsb
mov
xor
pushf
insb
out
fistps
hlt
add
pop
or
mov
rcl
cmp
imul
and
ss
pop
bound
cmp
ljmp
fimull
mov
shlb
and
loop
insb
dec
lahf
mov
in
ds
dec
dec
inc
out
arpl
in
lock
jl
out
cli
stc
pop
xchg
insb
adc
cmp
std
sbb
js
push
fwait
bound
mov
xchg
insb
fdivs
insb
cmpsl
notb
enter
dec
jmp
jge
ljmp
das
insb
in
leave
loopne
sbb
add
mov
call
mov
xor
mov
sub
push
pop
sarl
jmp
mov
insb
ja
dec
sbb
test
or
lcall
xchg
insb
pop
sub
notb
adcb
add
je
rcr
push
sub
gs
mov
inc
mov
icebp
nop
insb
adc
aas
pusha
sahf
dec
das
insb
lret
pop
add
xor
out
adc
lcall
or
insb
mov
adc
das
insb
pop
push
stos
cs
loop
xor
lods
subl
divl
jbe
cmp
pop
mov
icebp
scas
sbb
dec
insb
mov
and
pop
push
push
lods
dec
mov
mov
out
inc
pop
pop
rorb
stos
pop
dec
sub
lret
ja
mov
cmp
loopne
call
insb
aad
add
int3
insb
push
lret
sbb
loop
out
pop
dec
insb
xchg
ficomps
ljmp
sub
mov
push
xor
insb
add
daa
lcall
dec
push
sub
xchg
call
jecxz
fsubrs
out
insl
add
inc
outsl
lods
mov
xchg
and
mov
dec
mov
fldenv
sub
sbb
gs
inc
movsb
push
ret
cmp
xlat
je
cmp
out
mov
fldcw
pop
xchg
ret
lahf
mov
pop
insb
movsb
inc
xchg
int3
xor
pushf
sti
aam
dec
mov
mov
xchg
imul
xchg
push
gs
scas
xchg
mov
add
dec
int3
pop
insb
cmp
or
mov
xchg
insb
insb
push
push
jb
imul
jns
lds
popa
xchg
mov
mov
icebp
add
push
cmc
insb
push
fs
inc
insb
ficoml
pusha
sub
push
popa
fwait
insb
push
roll
push
loop
insb
sbb
add
aas
dec
xor
mov
in
pop
xlat
sub
push
insb
dec
test
jb
aad
in
loop
push
mov
insb
and
insl
repz
cld
test
punpckldq
cmp
and
stc
sbb
mov
cmp
lds
hlt
xor
mov
gs
insb
lahf
dec
mov
movsl
imul
movsb
lret
pop
cmc
fisttps
lea
in
test
aas
arpl
sub
pop
pop
mov
sub
cmpsb
or
push
sti
insb
jbe
enter
pop
dec
cmpb
scas
rclb
lret
push
test
mov
aad
enter
aad
xor
insb
cli
and
shll
mov
lea
bound
mov
rcrl
mov
add
loopne
add
adc
insb
test
mov
mov
xchg
in
ljmp
xor
sub
and
add
push
dec
insl
mov
sarl
push
mov
mov
mov
lahf
pop
sbb
popf
stc
shrb
ja
and
and
or
loop
ss
sub
sub
in
push
dec
out
sub
imulb
xor
cmc
pop
data16
je
stos
popf
pushf
ret
dec
mov
mov
inc
inc
mov
fisubrs
idiv
xor
xchg
insb
mov
repnz
add
mov
add
in
enter
jno
adc
jecxz
xlat
cmp
std
sub
push
ds
insb
lods
aam
lahf
mov
out
lock
adc
dec
stos
pop
imul
cs
xchg
push
sub
dec
jmp
push
mov
ret
sbb
or
ja
push
dec
in
test
gs
jno
iret
insb
cli
cmp
insb
pop
out
fistpl
orl
jmp
insb
inc
loop
in
dec
cmpsl
out
sub
insb
pop
ss
sub
lods
adc
addl
insb
test
add
xchg
incb
das
rolb
imul
mov
je
lods
insb
testb
enter
lcall
xchg
sub
push
sbb
shlb
in
xor
lret
push
push
xor
in
insb
mov
jmp
mov
insb
lods
push
icebp
jo
imul
xor
popf
lahf
sahf
mov
push
pop
push
dec
sbb
pop
dec
ret
insb
sbb
add
cmp
je
jnp
enter
cmp
addr16
and
subb
or
fwait
insb
je
mov
ret
sub
test
xor
aad
sbbb
dec
pop
repz
dec
les
outsb
and
fbld
xor
fdivl
insb
in
stos
sub
xchg
repnz
fdivrl
fists
imul
jge
shll
add
adc
int
jp
popf
clc
fs
shll
push
pop
inc
popa
insb
mov
mov
mov
cmp
in
insb
leave
cld
dec
mov
das
jnp
in
sub
fcoml
lcall
fstpt
imul
xchg
jb
mov
insb
cmp
add
pop
repnz
pop
sub
shrl
loop
aad
fcomp
aaa
or
push
mov
pop
enter
jmp
int
and
or
push
jp
sahf
inc
sbb
lret
fdivr
mov
or
jnp
push
pop
fildll
jle
lods
aam
dec
or
aaa
jl
push
jle
cli
aaa
mov
into
rcrb
test
fbstp
or
in
scas
push
test
int3
stos
add
lods
mov
lret
addl
into
insb
pusha
mov
in
fidivrl
jae
mov
nop
shrl
ret
dec
push
add
stc
xchg
mov
inc
insb
jmp
xor
movsl
in
icebp
test
mov
dec
fldenv
ret
adc
pop
leave
das
sti
or
xchg
shlb
adc
mov
fcoml
loop
insb
popa
arpl
ljmp
outsl
inc
dec
mov
jl
loope
pop
adc
je
test
xchg
insb
cs
aas
in
int
jmp
xorb
xchg
iret
cmp
add
cld
ror
add
imul
jne
icebp
jl
xchg
imul
xchg
jl
pop
adc
jmp
pop
jecxz
movsl
aam
sub
lahf
cld
inc
jmp
and
adc
dec
pop
sahf
insb
out
ud1
push
dec
and
and
cltd
mov
int
shrb
iret
push
xchg
fldlg2
test
ret
insb
push
mov
and
aas
test
scas
xchg
repz
insb
pusha
std
jp
daa
jl
cwtl
sub
jne
jge
lret
mov
cli
out
pop
fwait
mov
cmp
imul
add
mov
jae
nop
aas
mov
sub
imul
inc
jnp
sbb
pop
dec
out
inc
ds
sub
rcll
fldt
dec
mov
lret
test
sub
imul
jmp
arpl
imul
mov
dec
mov
stos
pop
jnp
mov
or
or
jl
movsb
cli
dec
imul
push
les
xor
insb
roll
cmpb
push
into
out
aaa
mov
xor
je
out
add
insb
test
lods
enter
aam
icebp
fsubrs
xor
adc
dec
insb
pop
cmp
es
or
out
pop
jne
cltd
xor
mov
push
lods
sub
mov
jnp
or
call
mov
sbb
insb
loop
adc
insb
inc
jnp
scas
int3
test
sub
sti
xchg
cmc
push
mov
xchg
insb
jbe
in
out
push
mov
push
jmp
rcrl
stos
mov
out
outsb
lcall
pop
ds
inc
or
sbb
adc
pcmpeqd
or
stc
jb
insb
xor
sub
scas
or
adc
daa
dec
std
mov
imul
or
xchg
insb
mov
push
dec
jno
jo
xchg
cmp
or
insb
fincstp
rclb
xor
addl
xorb
mov
ret
sub
add
pop
mov
push
lret
ss
push
dec
divl
sbb
es
mov
insb
pop
cmp
stos
pop
mov
jo
sbb
insb
shlb
nop
daa
insb
xorl
ds
inc
sub
repnz
inc
int3
out
xchg
xor
push
jmp
pop
sub
in
insb
ret
lds
mov
adc
insb
jbe
iret
push
pop
rorl
insb
fldt
push
stos
es
insb
add
stc
je
adc
mov
orl
aaa
rclb
push
insb
dec
xchg
lods
dec
mov
fdivrs
ds
test
mov
or
or
fwait
cs
or
js
movsl
jge
insb
sub
mov
xchg
repz
and
add
in
xor
imul
aaa
mov
shl
inc
insb
and
add
mov
push
jne
lahf
xchg
rorl
inc
stos
or
mov
xor
xor
cli
aaa
mov
adc
push
xchg
xor
fisubrs
lret
push
add
and
xor
rcrb
sbb
push
cmpsb
mov
je
pop
pop
test
dec
outsl
stc
enter
adc
mov
add
adc
push
pop
orl
or
test
push
dec
stos
mov
mov
pop
stc
fsub
sub
pop
push
lcall
xchg
loopne
stos
xorl
xchg
gs
enter
in
fisttpll
setl
and
ret
push
rorl
data16
rcrl
cli
xor
push
scas
sti
int3
fcoms
push
fistpl
sbb
lret
xchg
insb
mov
aas
scas
das
insb
sbb
gs
insb
mov
xchg
and
cmp
pop
int3
ja
pop
rdtsc
insb
pop
jmp
stc
popa
insb
inc
les
insb
jae,pn
pop
lcall
inc
xchg
cli
gs
pop
pop
xchg
pushf
imul
lods
sub
dec
dec
fstps
sbb
jl
dec
xlat
sub
dec
jmp
xchg
aaa
js
mov
pop
inc
sti
imul
mov
adc
cmp
sub
push
gs
insl
mov
in
mov
ja
jle
insb
or
cltd
in
lods
cmp
daa
insb
mov
mov
xchg
shl
lods
add
sub
loop
outsb
insb
sbb
pop
or
and
imul
mov
movsb
adc
adc
xor
push
add
test
xor
ss
divb
push
sub
sti
push
lret
data16
xchg
cltd
push
jge
cmc
or
dec
pop
mov
cmp
xor
fs
enter
ja
cmp
push
cmp
iret
dec
push
insb
pop
or
jnp
aam
je
cltd
dec
inc
add
and
or
insb
mulps
adc
inc
xchg
add
jns
lcall
insb
cmpsl
push
or
aaa
insb
std
mov
insb
jo
jmp
lea
in
push
xchg
jno
mov
daa
mov
adc
sub
sub
sahf
mov
inc
inc
jp
mov
in
dec
push
jecxz
decl
test
mov
mov
mov
xlat
fisubs
shll
iretw
in
jb
xor
sub
dec
aam
push
insb
shrb
inc
sbb
mov
push
dec
push
aas
out
mov
arpl
lret
insb
push
mov
arpl
icebp
mov
xor
lahf
aaa
insb
pushf
sub
jge
pop
inc
imul
lods
jno
push
imul
xchg
pop
ret
jo
jge
fisttps
popf
fsub
fnstcw
dec
or
xchg
shrl
cmp
insb
adc
push
repnz
lret
int
shr
or
pop
shlb
jg
pushf
mov
mov
ds
imul
pop
shlb
jns
ret
jle
cmc
in
pushf
mov
loopne
mov
mov
push
lods
push
cmp
insb
test
mov
sbb
out
or
negl
lods
xor
add
insb
sub
mov
repnz
insl
ficompl
cmp
icebp
and
or
xorl
or
push
aaa
fsubrs
jp
mov
ljmp
inc
mov
push
filds
cld
ret
pop
fcmovne
lods
pop
mov
cmc
les
or
out
notb
fistl
jo
ficompl
xchg
xor
imul
xchg
sub
mov
or
inc
lcall
call
add
and
adc
arpl
repz
pushf
mov
addr16
dec
jecxz
in
push
in
imul
jge
mov
mov
sbb
orl
cmp
insl
mov
imul
data16
jb
insb
mov
and
mov
pusha
pop
inc
sbb
dec
loope
sub
pop
jmp
mov
lods
int3
aas
into
movsl
insb
or
pop
push
pusha
arpl
cmpsb
fcmovnu
inc
sbb
xlat
sub
xchg
insb
lods
push
repnz
dec
loope
mov
pop
pushf
shll
scas
nop
pop
mov
or
cmp
insb
pop
aad
dec
insb
mov
aaa
jg
insb
outsl
imul
jmp
mov
mov
lock
rcr
imul
xchg
std
lods
jl
pushf
ljmp
xchg
and
iret
dec
lds
push
lcall
inc
scas
cld
jle
insb
inc
xlat
sub
clc
mov
mov
or
ja
jb
int3
push
nop
or
pop
push
lods
mov
xchg
mov
mov
mov
ljmp
pop
or
dec
sbb
adc
push
xchg
dec
insb
fidivrs
in
nop
mov
pop
sub
and
xchg
insb
test
mov
repz
inc
les
push
xor
lods
pushf
lds
sbb
sar
insl
insb
iret
pop
ret
aad
xor
pushf
pop
add
mov
mov
fdivp
dec
xchg
cmp
sbb
lret
mov
cmp
pop
fdivrs
mov
cmpsl
xchg
add
push
jg
shrb
jl
insb
add
and
xor
cmp
orl
js
insb
sbb
testl
cltd
pusha
push
scas
pop
xchg
leave
imulb
pop
data16
cmc
imul
decb
cmp
inc
cwtl
xchg
and
insb
clc
sbb
subb
cwtl
das
pop
js
popa
jbe
mov
lahf
shrd
jle
jp
mov
inc
cmp
mov
insb
mov
rclb
mov
jo
call
pop
leave
stos
dec
out
lahf
add
insb
mov
xchg
insb
shll
xor
loop
insl
mov
iret
pop
insb
adc
stos
mov
and
or
mov
je
repnz
test
cmp
cli
fisubrs
dec
int3
test
int
les
push
daa
dec
ret
sub
aad
mov
xlat
pop
stos
dec
push
lret
clc
outsb
insb
scas
mov
cmp
adc
mov
mov
sub
int
cmc
pushf
sbbb
cmp
call
insb
mov
pop
enter
sahf
cmp
adc
dec
orb
fisubrs
sub
insb
fisttpll
scas
push
sarl
insb
aam
mov
sub
mov
push
mov
push
sbbb
sbb
push
sahf
mov
aaa
push
inc
cwtl
sbb
test
push
in
movsb
movsl
adc
xor
in
jg
aad
push
jne
jl
outsl
adc
mov
shrl
jno
lahf
sub
pop
inc
dec
fisubrs
xchg
loop
aad
jge
es
sbb
cld
daa
fldcw
test
adc
xorb
mov
lods
push
loope
cs
sahf
inc
dec
pop
cmpsl
push
xor
std
cltd
or
vpxor
mov
mov
hlt
popf
cmc
inc
cmpsl
dec
pop
push
add
cld
je
popa
or
lahf
sub
xchg
loop
mov
lret
hlt
test
sbb
xchg
mov
jo
sbb
mov
test
imul
cmpsb
insb
int
loop
mov
and
insb
lahf
jle
stc
mov
jne
insb
cs
loop
xchg
into
mov
insb
xor
xchg
mov
imul
or
jg
add
lods
xchg
sti
pop
insb
mov
test
cmp
outsb
mov
repz
cmp
imul
ficompl
add
sbb
scas
mov
in
jno
es
dec
sub
or
clc
jno
pushl
cmc
mov
push
arpl
xchg
call
and
push
mov
sbb
jle
insb
js
out
jge
push
pusha
push
insb
or
mov
insb
mov
inc
insb
cltd
xor
pop
insl
lahf
xor
xchg
imul
pop
aas
sbb
pushf
loopne
dec
inc
frstor
insb
mov
das
xlat
or
insb
push
ds
mov
add
dec
xchg
inc
divb
cmp
and
insb
cli
sbb
mov
sbbb
sbb
insb
js
xlat
sbb
push
mov
outsl
adc
cmc
in
fs
cmp
pop
sub
or
xor
xchg
out
xor
clc
insb
ja
hlt
loop
pop
cmp
pop
or
daa
orl
jae
xor
sahf
jns
mov
inc
add
or
sub
shrb
inc
mov
add
dec
insb
mov
jae
shrb
pop
fisubrl
insl
ja
cmp
in
mov
sbb
and
pop
clc
mov
sbb
cmp
dec
loop
imul
cmp
loopne
jns
aaa
inc
insb
outsb
inc
mov
pop
add
ja
ret
cmp
lods
inc
dec
insb
imul
loope
imul
xor
jne
xchg
adc
pop
sti
and
data16
insb
inc
pop
mov
lret
pusha
insb
pop
jbe
cltd
fsubs
fistps
xchg
aaa
insb
inc
and
es
and
and
xchg
loopne
mov
xor
fucomip
dec
sub
cmpsb
sahf
lds
fcomi
pop
mov
xor
add
mov
dec
sbb
cmc
jbe
das
popa
mov
jmp
jno
lods
push
ret
dec
cmpsb
pop
out
add
and
lret
pop
or
xorb
sbb
addl
dec
imul
xchg
mov
xor
aam
dec
inc
pop
fisubrl
and
jmp
adc
bound
jns
jge
sti
mov
insb
pop
push
xor
gs
add
imull
punpcklbw
inc
std
jle
js
insb
cmpsl
xchg
xchg
mov
xlat
icebp
test
xchg
out
insb
ss
adc
xchg
fnsave
cli
hlt
push
or
test
or
pop
xlat
jl
mov
and
pop
lcall
mov
pop
xor
and
popf
clc
push
and
dec
sahf
je
je
dec
rorl
lods
bound
imul
les
or
inc
in
rcrl
bound
insb
add
aaa
mov
push
sub
int
movsb
enter
insb
xchg
push
or
jmp
xchg
add
jecxz
bound
insb
lock
sub
mov
std
cs
mov
popf
rorb
faddl
mov
dec
inc
mov
lcall
ja
adc
dec
jecxz
mov
dec
inc
inc
and
outsl
imul
lahf
pop
mov
cmpsb
insb
jle
loope
test
cli
call
scas
cmp
das
mov
insb
shlb
sub
mov
cld
pop
cmc
ds
test
jge
popf
push
sub
mov
xor
stos
and
xchg
pop
mov
mov
insb
pcmpeqd
insb
ss
imul
adc
aad
xor
insb
push
clc
sbb
cwtl
in
insb
sbb
add
jg
pop
sub
divl
cmpsb
in
jle
jmp
sahf
jnp
mov
imul
bound
add
insb
dec
leave
lds
insb
repz
pop
mov
bound
imulb
loopne
movsb
dec
inc
xchg
mov
insb
dec
sti
jnp
pop
dec
test
data16
cwtl
or
cld
pop
pusha
sbb
pushf
aas
arpl
imul
dec
insb
lcall
mov
jge
lds
outsl
xchg
xor
dec
pop
idivl
fisttpll
je
xchg
in
mov
into
test
push
pop
cmp
lret
fiaddl
xchg
or
mov
das
pop
nop
cmp
jl
rclb
dec
xchg
sti
popa
mov
outsb
push
imul
xor
push
pushf
test
imul
xor
test
xchg
or
scas
add
insl
push
jl
mov
in
fistpll
sub
pop
sahf
fdivrl
xadd
dec
outsl
out
fsubrl
cmp
ljmp
xchg
mov
and
mov
cld
gs
cmp
jmp
call
nop
mov
gs
ds
sbb
loopne
aam
xor
pop
jbe
or
lods
in
movsl
es
push
pop
insb
mov
cmp
ss
cmpsb
pop
movsb
cwtl
loope
or
fwait
data16
and
xchg
xchg
insb
jecxz
sbb
push
sbb
call
insl
insb
pop
xor
sbb
mov
xchg
lods
jmp
sub
addr16
ja
aaa
cmp
inc
mov
mov
pop
imul
xchg
push
mov
js
cmp
add
test
sub
xor
cmp
scas
sub
jns
inc
repz
sub
pop
xchg
repz
insb
pusha
scas
dec
mov
dec
into
cltd
insb
lea
mov
int
push
insb
sahf
add
pusha
dec
jb
insb
push
jp
push
jmp
insb
xorl
adc
outsl
cmp
xchg
int3
cmp
movsb
jl
insb
add
lea
dec
cmp
shll
insl
or
in
cmp
cmp
stos
cmp
insb
fsts
sbb
inc
pop
cwtl
daa
out
rcl
shl
inc
insb
lahf
add
push
gs
idivl
orb
dec
dec
es
sbb
xor
mov
ficoml
mov
insb
xchg
mov
or
insb
shl
scas
inc
push
addl
adc
stos
adcl
movsb
jo
in
mov
cmp
rcll
insb
inc
pop
das
add
or
push
in
fstps
adc
jecxz
pusha
add
insb
pop
pop
mov
insb
test
lahf
pop
insb
jmp
and
fimull
insb
movb
xor
and
movsl
in
mov
push
dec
mov
inc
insb
mov
lods
sahf
jb
arpl
jl
outsl
sub
jbe
insb
test
sti
aaa
ss
mov
mov
adc
cltd
sahf
testb
cwtl
pop
push
ficoms
xchg
lret
mov
lea
insb
mov
mov
mov
jl
or
shl
shrb
xchg
and
jmp
push
insb
dec
dec
idivl
cmp
mov
cmc
pop
push
int3
sbbl
insb
push
lods
pusha
loopne
clc
jnp
lods
into
push
imul
pop
mov
add
les
xor
adc
orb
and
pop
aad
xchg
stc
cmp
jg
cmpsb
int3
std
sbb
mul
pop
call
xchg
cmpsb
push
fisttpll
popa
jo
imul
shrb
xor
loope
mov
insb
pop
adc
fidivs
ret
xor
rorb
imul
in
xchg
sbb
insb
and
sbb
jl
pop
xorb
mov
dec
inc
ret
nop
dec
pop
test
imul
sub
xor
in
add
fwait
mov
std
in
dec
scas
cmpsl
pushf
push
loopne
int3
lods
arpl
mov
or
shll
xor
pop
and
mov
ret
lcall
test
cmp
adc
int
dec
xor
push
xor
mov
aas
adcb
dec
mov
push
mov
sub
out
imul
in
dec
dec
insb
or
push
and
cmpsl
inc
imul
cltd
int
ds
insb
sbb
notl
fnstenv
mov
cmc
jg
insb
mov
jne
jmp
fstl
insb
mov
lahf
jns
dec
insb
es
xchg
fadds
or
cmp
insb
push
testl
pusha
jo
mov
xor
je
adc
insb
test
mov
jmp
jne
insb
mov
mov
adc
js
xor
cmpsl
je
jne
movsb
cmp
push
add
or
or
in
jns
adc
out
enter
shrl
dec
sbb
in
dec
jbe
push
test
dec
mov
cmp
and
pop
ljmp
fiaddl
loope
pop
push
or
dec
addl
xor
jl
or
out
sbb
in
push
imul
or
or
xor
out
mov
fbld
fidivrl
cmp
sahf
push
cltd
imul
or
scas
sub
jp
pop
cmp
mov
or
xchg
or
hlt
jbe
push
popf
sbb
cmc
loop
or
sub
inc
or
test
lea
test
push
movsb
xchg
push
jecxz
dec
dec
push
imul
mov
and
fiaddl
jne
cmp
repnz
mov
int3
jge
addr16
jmp
into
adc
aas
frstor
aaa
dec
cmp
mov
adc
insb
test
insl
cmp
std
insb
mov
push
jmp
out
cmc
out
das
clc
and
pop
jmp
fucomip
int3
mov
leave
aam
dec
mov
ffree
cmp
sbb
dec
adc
aas
inc
xchg
push
insl
insb
add
daa
jp
push
fisubrs
pop
xchg
rclb
mov
insl
and
mov
cmp
mov
mov
arpl
int3
jmp
insb
icebp
jns
mull
xchg
pop
push
mov
divb
call
dec
adc
fimuls
jmp
dec
pop
adc
and
in
in
sbb
adc
ja
xor
sub
fbstp
mov
adc
jge
andb
test
aam
cld
addr16
imul
int
nop
pop
cli
mov
fs
cwtl
fsubrl
data16
repz
add
adc
pop
dec
scas
aad
in
rcll
mov
jo
scas
gs
aaa
push
hlt
rep
mov
jns
and
sarb
insb
add
scas
push
sbb
lock
cmp
xlat
insb
cmp
das
cli
adc
pop
dec
dec
in
xchg
mov
mov
mov
aaa
inc
sbb
sub
sub
insl
insb
in
push
clc
or
inc
testb
xchg
fsubrl
fldl
xchg
rcl
fwait
ret
insb
popf
in
pop
adc
fcompl
cmpsl
imul
outsb
xor
xor
and
adc
gs
pop
mov
mov
xchg
dec
pop
xchg
insb
mov
shll
gs
and
mov
gs
sti
add
int3
addr16
mov
insb
xor
notl
sbb
dec
ds
pop
insb
icebp
sbbl
lahf
jp
mov
and
add
fisttpll
shrb
sub
popf
imul
les
or
xchg
enter
daa
sub
dec
insl
dec
fisubrl
out
test
xor
pop
insb
cmp
std
xor
insb
sub
cmp
insb
shll
xchg
and
daa
aad
dec
insb
add
insb
mov
mov
inc
push
adc
xor
xor
mov
lcall
sub
jecxz
or
pop
sub
mov
mov
in
push
cmovbe
sub
mov
cmp
xchg
stos
xchg
in
push
popf
sub
sub
inc
insb
je
aad
ret
sarb
gs
call
imul
jnp
lods
mov
shll
in
pop
test
scas
gs
sahf
sarb
lock
pop
roll
insb
adc
xor
aam
ret
mov
inc
and
minps
push
or
dec
lods
js
sub
add
pop
pop
sbb
int
rolb
adc
dec
mov
repnz
jl
mov
or
dec
sahf
cmp
dec
dec
imul
insb
inc
and
lds
adc
mov
mov
movsl
fcoml
jno
pop
add
nop
testb
mov
push
xorb
ja
sub
cmpsl
jmp
imul
push
mov
mov
mov
cli
xchg
ja,pt
test
jp
lds
fidivrl
dec
das
jl
pop
jl
inc
aam
insb
jle
addb
outsb
insb
xor
inc
test
insb
fs
lods
outsl
xchg
sbb
es
xor
sub
sub
pushl
xchg
imul
fcompl
loop
and
xor
pushf
mov
test
nop
insb
imul
stc
lods
iret
insb
xchg
jmp
ljmp
in
test
cmpl
pop
imul
mov
xchg
pusha
xlat
jmp
xchg
xor
mov
int3
cmpsl
mov
sbb
cmp
movsl
repz
shrl
xchg
jge
daa
insb
cmpsl
mov
lcall
cltd
pusha
call
loop
adc
or
nop
outsl
mov
addr16
daa
iret
mulb
xor
push
pop
sub
inc
loope
insb
dec
pop
outsb
pop
negb
adc
sbb
fiadds
dec
add
shll
int3
outsl
int
xlat
and
into
frstor
add
lret
cwtl
arpl
inc
push
test
mov
push
mov
les
stos
pop
lods
mov
jo
test
sub
mov
stos
stc
insb
lret
mov
cwtl
push
hlt
mov
mov
gs
xchg
outsb
mov
pushf
imul
clc
inc
mov
push
mov
jae,pt
fadds
sub
rcr
mov
cmp
lock
frstor
stc
clc
adc
add
imul
dec
sub
sub
jnp
jae
dec
mov
mov
ds
mov
mov
shl
jns
push
pop
mov
adc
jecxz
push
jae
repnz
sub
test
push
ljmp
or
fwait
cli
inc
insb
adc
shr
dec
lods
push
addr16
jle
adc
mov
xchg
fs
in
nop
sub
aad
jmp
movsb
pop
je
cmp
std
dec
aam
jecxz
insb
call
add
mov
jecxz
insb
cmp
xor
mov
out
arpl
pop
mov
aad
sub
inc
or
fsubl
cmp
xchg
lahf
jne
pop
add
fldcw
das
mov
insb
and
jecxz
shlb
fstps
add
insb
push
adc
pusha
push
adc
mov
or
lock
xchg
lret
push
jl
insb
or
mov
fisubrs
sub
push
sbb
imull
pop
popa
cmpsl
lods
in
int3
pop
js
out
imul
dec
add
das
ss
xchg
mov
sub
aam
fildl
jmp
insb
aaa
outsb
arpl
inc
dec
insb
pop
mov
call
dec
ss
cltd
cld
cmp
insb
xor
stos
or
imul
mov
cld
jg
mov
insb
mov
loop
popl
jno
cltd
insb
jl
in
push
push
ret
lahf
jl
icebp
es
inc
adcb
imul
fisubrs
cmp
dec
flds
sub
ret
and
insb
cld
jnp
test
sahf
mov
mov
jmp
add
pushf
aam
insb
or
mov
insb
push
lods
cmp
xchg
insb
xor
dec
dec
or
std
mov
nop
lods
push
insb
jle
push
sub
jge
pop
insb
pop
xor
insb
fimuls
ror
push
pop
xor
and
imul
fcoml
pusha
ret
pop
sbb
and
add
jne
icebp
in
jb
xor
lret
loop
sbb
xchg
insb
mov
lea
out
in
dec
ret
xchg
xchg
sub
push
push
fnsave
icebp
sbb
imul
push
daa
aaa
add
cwtl
lods
insb
fidivl
insb
inc
dec
sub
insb
mov
lret
mov
popa
test
mov
xor
sarl
pop
xchg
pop
in
push
cmpsb
test
aas
call
popf
lret
mov
insb
jl
xchg
jb
push
cmpsb
push
inc
lods
and
mov
xor
mov
int3
rclb
mov
insb
aam
or
lea
cmp
jnp
int
inc
xchg
insb
mov
into
pop
xor
pop
sbb
dec
icebp
or
gs
xor
int
mov
fdivl
dec
dec
and
dec
rcll
mov
xchg
lods
push
in
shr
ss
lret
cmp
pop
out
orl
test
insl
insb
das
enter
imul
cmp
jge
popf
pushf
jae
mov
fsubl
insb
jg
add
insb
insl
ds
add
sbb
test
nop
mov
loop
or
scas
push
ret
frstor
sub
push
jp
fimull
jb
cmp
and
pop
mov
inc
lahf
xchg
fstpt
push
in
loop
out
faddl
and
cwtl
mov
pushf
pusha
repz
int3
pop
lret
mov
shrl
or
push
shrl
ds
call
loop
xchg
test
push
insb
cwtl
mov
mov
cmpb
int
sub
or
std
fisubrl
mov
fsubrs
lahf
jle
adc
dec
push
inc
repnz
cwtl
pop
int3
mov
jnp
scas
outsl
lds
mov
sub
push
aam
dec
sbb
cltd
and
mov
in
aam
xor
repnz
nop
mov
xchg
jmp
daa
insb
cmp
push
inc
xchg
sub
repz
and
xchg
mov
adc
arpl
fs
cs
jno
pushf
fistpll
add
dec
jnp
stos
ja
push
and
inc
sarb
iret
leave
adc
mov
jge
out
test
pop
insb
fsubs
mov
push
pop
jecxz
stos
inc
or
sti
negb
leave
test
inc
add
jg
loope
loop
pusha
cmp
dec
xchg
pop
outsl
mov
icebp
lods
jne
xchg
jle
dec
push
loop
jo
sti
js
add
fnop
push
insb
test
ja
inc
push
mov
pop
lahf
ret
sub
or
rorb
clc
and
or
std
insb
shrb
cmpsb
pop
lods
insb
insl
shll
dec
out
pop
outsb
jmp
xchg
mov
in
orl
jp
aaa
mov
push
xchg
insb
inc
or
mov
or
inc
inc
sub
repnz
imul
sbb
dec
sbb
fadd
push
icebp
adc
pop
pop
pushf
imul
cld
lea
dec
imul
lods
mov
lods
imul
dec
inc
xor
sarl
cmp
fcom
pop
inc
push
mov
mov
imulb
shll
fildll
pop
inc
inc
outsb
aad
loope
ret
test
xchg
insb
into
sahf
aaa
shll
mov
mov
insb
arpl
pmullw
lahf
sbb
int3
dec
mov
cmpsl
insb
mov
add
xor
xor
mov
arpl
mov
shrl
std
mov
gs
imul
xchg
jno
jns
jne
dec
sbb
add
push
insb
pop
in
into
or
sbb
cmp
das
test
jmp
fs
and
cld
int
insb
mov
addr16
es
pop
cs
arpl
cld
out
sub
dec
mov
pop
mov
push
loope
jl
insb
nop
jno
add
out
jmp
adc
or
scas
xchg
lods
mov
stos
lds
fwait
push
mov
push
xchg
adc
xchg
sub
sub
insl
rclb
jae
ljmp
push
xor
mov
dec
jle
out
scas
gs
fdivrl
jecxz
cmpsl
lret
imul
dec
jno
adc
nop
push
aad
push
inc
xchg
pop
leave
xchg
imul
fwait
mov
dec
into
sbb
and
xchg
mov
insb
add
inc
fisubrs
cmc
cmp
insb
aaa
jbe
lret
stos
jge
inc
int
inc
mov
mov
xlat
pop
sbb
xor
insb
ja
popa
outsb
mov
push
xor
das
hlt
sub
int
sbb
icebp
insb
loop
cmp
insb
push
mov
mov
insb
pop
cli
mov
xor
add
jne
jmp
push
js
insb
repnz
lret
mov
sub
pop
add
pop
jae
data16
addr16
lods
testb
push
ret
sahf
mov
ljmp
mov
cmpsb
jge
in
push
push
dec
shlb
leave
mov
add
imul
xchg
fldcw
push
aad
inc
call
stos
lahf
daa
clc
cld
cld
sahf
xchg
sbb
dec
cli
scas
int
adc
cmp
mov
ds
sub
icebp
nop
xchg
push
in
insb
lods
imul
in
jecxz
add
clc
in
push
les
push
gs
cld
or
jecxz
mov
sbb
aaa
ret
pop
int3
add
imul
cwtl
xorb
cmp
pushf
insb
pop
adc
add
movsb
out
data16
clc
loop,pt
ja
sub
or
out
sahf
test
push
mov
adc
ja
sbb
xor
rcrl
les
imul
andb
fiadds
mov
adc
inc
xchg
inc
insb
add
fadds
mov
imul
je
jp
pop
popf
insb
aam
nop
out
icebp
add
mov
cmp
cwtl
and
insb
sub
mov
jne
aas
push
stc
iret
insb
sbb
sbb
lea
jp
pop
popa
mov
add
dec
repnz
aad
mov
push
pop
xor
push
insb
xchg
xchg
jp
sub
in
fmull
lods
jo
mov
daa
push
mov
jp
aaa
mov
andb
orl
mov
sub
dec
mov
adc
int3
rorl
and
jp
mov
xchg
lods
loop
pop
xor
add
mov
xchg
cld
inc
in
jno
xchg
push
shlb
cmc
or
bound
pop
lcall
inc
cltd
mov
ljmp
pop
sbb
pop
cld
imulb
lcall
pop
orl
dec
xor
lahf
insb
jmp
add
dec
leave
and
insb
dec
mov
sub
and
push
and
jo
sub
mov
in
or
repnz
and
insb
cmc
fdivs
repz
push
dec
sbb
addr16
cmp
xor
or
imul
adc
mov
rcrl
mov
cmp
stos
or
popa
xor
ss
pushf
jbe
out
loop
in
insb
push
mov
sub
sub
jmp
js
mov
movsb
ret
in
jmp
lret
bound
fcompl
gs
add
jl
and
insb
rorl
out
int3
mov
mov
cmpl
mov
dec
dec
xor
xchg
in
push
and
adc
mov
cs
push
mov
repz
lods
movsb
popf
pop
insb
fbld
sub
mov
imul
dec
add
jnp
and
pushf
push
xor
xchg
das
jecxz
push
in
mov
push
les
or
out
insb
jp
fsubrl
icebp
mov
movsl
test
or
mov
popf
ss
in
punpckldq
adc
mov
movsl
mov
cs
sahf
or
mov
push
ljmp
mov
cmp
shrl
jmp
inc
cmp
mov
xor
and
dec
and
scas
in
jmp
adc
jne
pop
push
dec
dec
sub
pop
jecxz
add
cld
xor
cmp
stos
adcl
insb
mov
daa
test
lea
sub
rcrl
int3
sti
fsubrs
add
ret
adc
pop
push
mov
ds
add
fsts
imul
xchg
jne
inc
xor
or
lods
imull
dec
leave
insb
repnz
sbb
adc
pop
xor
mov
lods
ret
push
push
sub
jae
lea
xchg
pop
mov
std
add
popf
mov
mov
push
cmpsl
insb
and
and
xor
xorl
bound
mov
outsb
in
icebp
and
jle
or
xchg
lret
sbb
cmp
mov
dec
cmc
ret
insb
push
add
sub
adc
lret
xchg
or
dec
or
movsb
and
lods
in
dec
sub
insb
cmpb
jo
popa
dec
mov
arpl
and
pop
jae
repz
xor
pusha
sub
cltd
adc
dec
mov
jecxz
scas
in
cmpsb
ja
pop
bound
dec
dec
cmp
ljmp
jecxz
jno
pusha
pop
int3
mov
orl
gs
push
and
hlt
gs
xchg
xor
into
insb
jnp
icebp
arpl
mov
dec
cmp
sti
dec
gs
cltd
cli
mov
out
insb
jl
xchg
push
mov
xor
lcall
movsl
mov
adc
repz
les
fadd
cmp
sub
jecxz
inc
daa
pop
insb
js
or
push
enter
stos
inc
mov
out
imul
out
adc
push
inc
pop
dec
sub
js
gs
mov
out
loopne
mov
pop
ss
cmp
inc
mov
mov
xchg
cld
adc
add
xor
mov
cmpsl
mov
test
shrb
aam
pop
imul
lods
sub
fstps
fs
dec
dec
xchg
imul
dec
gs
xchg
jmp
xchg
jl
test
imul
and
pop
mov
inc
cmpsl
daa
lea
aaa
out
cwtl
xlat
dec
sbb
push
sub
cltd
scas
lds
xor
mov
sub
imul
leave
lock
jae
insb
mov
dec
clc
leave
dec
ret
data16
mov
lret
jle
pop
sub
call
inc
test
insb
iret
mov
pop
xchg
push
jbe
lahf
into
pop
sbb
dec
cmpsl
xlat
inc
xor
jns
xor
data16
in
ds
sub
aaa
pop
mov
in
adc
and
cmpsb
dec
insb
inc
inc
xor
ss
in
gs
jl
mov
mov
mov
sbb
jp
mov
and
movsl
push
inc
sbb
jmp
push
add
jl
ret
insb
outsl
mov
aam
gs
lods
inc
outsb
lods
xlat
push
das
inc
ljmp
cmpsl
adc
inc
insb
inc
lret
xor
adc
test
add
mov
pop
call
insb
jl
ds
jp
shlb
xchg
jg
mov
lcall
imul
test
inc
pushf
aaa
test
test
adc
push
int3
rcrl
fbstp
into
ret
mov
sahf
in
jecxz
lods
inc
loop
push
xor
xlat
fsubl
imul
xchg
or
xor
insb
cs
pop
xlat
mov
js
arpl
jo
fdiv
icebp
imul
push
mov
in
insb
pushl
imull
adc
and
je
insb
add
cmp
dec
cmp
fiaddl
repz
pop
lret
popf
insb
cli
push
push
sub
cmp
lods
fdiv
leave
fldcw
imul
mov
insb
in
int
xorb
insb
cs
xchg
hlt
pop
lds
push
aad
cmp
mov
insb
int
mov
inc
pop
push
insb
inc
adc
mov
insb
and
mov
fwait
in
icebp
test
jns
inc
inc
jo
movsl
stc
test
jmp
imul
mov
lea
les
insb
mov
ja
repz
mov
push
cltd
and
rep
insb
fstl
in
mov
lea
fwait
sbb
sub
mov
inc
jl
sti
or
pop
outsl
in
cwtl
or
insb
dec
rcr
mov
pop
and
xchg
cmpsb
lret
mov
mov
adc
call
add
imul
insb
data16
inc
jnp
mov
imul
dec
test
imul
fwait
test
and
adc
insb
xchg
xor
iret
mov
mov
sti
or
jne
insb
inc
sbb
fcmove
insb
sbb
dec
jge
inc
mov
jne
fstpl
jns
mov
cmc
clts
enter
push
jne
andl
xor
cmc
jne
cmp
cmp
pop
pop
sbb
jne
add
in
in
pushf
jg
in
adc
repnz
push
xor
push
push
fldt
mov
insb
mov
insb
mov
jno
insb
insl
in
pop
icebp
inc
fs
mov
mov
aaa
xchg
add
mov
pop
dec
insb
fidivs
andb
leave
and
push
cld
or
push
enter
pop
ljmp
lahf
sub
xchg
sub
xchg
scas
dec
sub
xor
push
cmp
insb
xchg
movsl
xor
sub
jecxz
sub
mov
mov
xchg
pop
outsb
insb
xor
mov
pop
insb
or
jp
insl
jo
fstpt
pop
scas
xlat
test
data16
adc
jg
jno
arpl
insb
and
gs
or
stc
ljmp
out
xchg
or
dec
jecxz
pop
cmc
icebp
pop
insb
xor
dec
out
xchg
imul
push
mov
mov
push
insb
xor
in
xchg
in
jo
fcompl
mov
inc
sub
mov
insb
mov
adc
xor
clc
lods
imul
stos
xor
loop
sbb
dec
div
insb
mov
jns
scas
mov
shr
cltd
rcrb
jb
insb
je
pop
out
inc
xlat
jae
stc
mov
or
ret
fs
xlat
loop
push
inc
pop
shlb
imul
insb
inc
jbe
xlat
cmp
sbb
rclb
dec
or
cs
cld
push
jg
insb
cwtl
push
imul
jae
insb
and
pop
adc
push
out
cmp
sub
or
lret
add
daa
xchg
dec
lahf
or
insb
mov
mov
fimuls
js
jle
pop
test
mov
adc
pusha
sbb
push
push
xor
mov
sub
and
pop
scas
xchg
add
cmp
insb
cmpsb
pop
hlt
fistps
stos
add
pop
insb
fstpl
fdivrl
in
pop
outsl
xchg
lcall
jb
pushf
arpl
jg
fidivrs
cmp
icebp
mov
jecxz
lock
jb
les
daa
lea
imul
xchg
ret
adc
xor
es
insb
pop
loopne
out
mov
jl
int3
inc
hlt
ret
jb
lahf
subb
add
push
mov
filds
les
cmp
jl
cmp
insb
pop
mov
pushf
insb
mov
lahf
mov
add
movsl
in
and
insb
sbb
cmpsb
xchg
jb
loopne
pop
sub
jg
lahf
out
mov
sub
insb
push
insb
push
inc
mov
das
cmp
insb
jns
mov
rcrl
stos
fidivl
cmpsb
mov
cmp
jecxz
cmpl
addr16
lods
sub
pushf
jae
mov
inc
push
mov
sub
inc
fisttps
jmp
mov
xchg
sub
or
wbinvd
vpshuflw
dec
imul
mov
push
and
xor
mov
inc
pop
imul
pop
int3
mov
adc
inc
inc
add
insb
aam
daa
repnz
xchg
cs
push
in
cmp
inc
gs
fsubrp
cmp
push
mov
sbb
inc
add
pop
outsb
insb
sbb
cmp
jo
insb
cmpsl
push
test
mov
cld
cmp
movsb
ds
idiv
movsb
insb
pop
dec
outsb
adc
adc
imul
test
cld
mov
out
cmp
aam
add
fisttpl
xchg
test
fnstcw
add
sbb
imul
cs
jp
outsb
mov
fstl
gs
mov
out
rcrl
imul
movsb
jmp
out
scas
sahf
lret
lods
in
insl
sbb
sti
rcrb
pause
dec
sti
mov
jns
enter
imul
push
int3
xchg
cmp
insb
and
sbb
test
gs
xchg
sahf
mov
sub
loop
shr
sbb
sub
lods
jmp
outsb
mov
pop
stc
lock
push
mov
cmp
jbe
mov
cmp
repz
push
fidivs
loop
cld
push
insb
cmp
dec
jae
es
gs
hlt
shrb
insl
gs
adc
aad
shll
push
stc
insb
cmp
push
cmpsb
rorl
das
int3
sbb
jl
out
sahf
adc
les
jle
inc
mov
enter
aaa
mov
mov
xor
ljmp
icebp
lcall
mov
int3
push
lret
or
imul
cmc
pushf
out
shll
jnp
imul
xlat
sub
sbb
cmp
cmc
cmpsl
push
test
inc
test
push
mov
sbb
xor
inc
mov
mov
inc
sbb
leave
insb
sbb
sti
es
fimuls
data16
insb
aaa
inc
outsl
pop
dec
test
loopne
jl
sahf
insb
cmp
jle
arpl
imul
mov
push
aad
shrb
push
inc
inc
jmp
xlat
mov
jp
movsl
insl
in
js
lods
mov
in
dec
dec
mov
pop
jmp
jp
jbe
scas
dec
sub
jnp
sti
xor
mov
adc
insl
lds
in
jo
mov
inc
adc
adc
movsl
pusha
pop
jp
out
enter
pop
mov
inc
call
pop
mov
fstps
test
arpl
push
out
dec
xchg
add
rcr
sbb
mov
testl
xchg
sarl
sbbl
imul
adc
mov
push
insb
cmp
or
jle
insb
insl
cmp
pop
ljmp
xchg
jne
or
js
insb
testl
shrl
int3
pop
scas
inc
push
imul
dec
pushf
std
dec
insb
pusha
xchg
nop
jae
mov
xlat
insb
sbb
mov
xor
lcall
sub
jno
in
inc
in
jmp
xchg
inc
test
sbb
add
mov
fwait
ss
in
das
and
dec
push
cmp
jmp
lock
insb
enter
xchg
and
dec
fdivr
stos
in
repnz
insb
and
sbb
mov
push
sbb
pop
xlat
insb
push
fs
sub
push
das
scas
call
mov
push
mov
sar
testb
dec
jp
push
xchg
bound
jg
imul
mov
inc
cmp
or
mov
loope
xor
ljmp
dec
mov
insb
outsl
notl
mov
clc
loopne
or
icebp
xor
mov
scas
pop
inc
dec
fimuls
pusha
and
rclb
add
ds
nop
mov
or
fsubs
xor
insb
in
aam
xchg
mov
xchg
iret
sahf
int3
outsb
mov
cmp
out
cmp
lea
jp
stos
repz
pop
mov
sub
cmp
sbb
ret
lret
add
jmp
int
adc
jbe
arpl
insb
ret
pusha
adc
xchg
mov
pop
or
gs
in
mov
sub
mov
and
int3
push
pop
mov
xor
xchg
aam
leave
mov
push
push
jle
xor
lds
pop
mov
pop
pop
dec
and
push
cs
mov
insb
insl
shlb
push
and
push
loop
xor
lds
popf
fstps
dec
pop
pop
pop
inc
push
out
sub
mov
in
mov
jo
cwtl
insb
xor
cmp
clc
dec
arpl
xchg
dec
in
mov
ss
imul
add
dec
hlt
xchg
xchg
adc
mov
nop
aam
lret
lcall
cmp
mov
stos
push
xor
pushf
adc
movsb
in
xchg
shlb
sub
rorl
insl
leave
in
cmc
push
xor
in
loopne
mov
movsb
loope
popf
mov
insb
bound
lret
sbb
xchg
mov
insb
adc
xor
inc
pop
mov
test
jp
imul
push
pop
sub
shll
call
xchg
pop
movb
int
in
je
cmp
mov
test
imul
repnz
xchg
jbe
pop
jmp
mov
sub
in
inc
mov
outsl
jno
fsubrp
stc
push
popf
insb
sub
xchg
mov
insb
rdmsr
xchg
stos
adc
push
insb
dec
sbb
test
mov
sahf
cs
clc
mov
int
pop
jmp
jle
pcmpeqd
and
ljmp
in
pop
insb
fidivs
xchg
xor
in
dec
mov
sub
sub
lcall
xor
dec
push
push
insb
pop
jnp
dec
shlb
push
adc
imul
add
mov
loopne
dec
pop
pushf
in
pop
adc
add
insb
movsb
push
xchg
mov
inc
mov
pop
loop
daa
mov
icebp
insb
ds
cmp
fnstenv
ficoml
in
mov
int3
adc
cmc
cld
add
xor
mov
stos
inc
fwait
das
inc
gs
clc
pop
out
and
cmpsb
ret
lock
ds
ret
mov
or
mov
shl
xor
inc
push
icebp
imul
nop
insb
dec
cltd
gs
lds
jb
gs
mov
mov
shrb
mov
dec
lods
int
ljmp
imul
jp
insb
mov
das
popf
test
call
insl
shrl
or
leave
insb
sbb
and
popf
insb
push
mov
push
xchg
insb
or
sub
popf
imul
insb
ja
jb
jg
fldl
push
adc
aas
shll
insb
iret
jle
les
jb
in
push
inc
sbb
insb
iret
push
inc
push
out
push
dec
outsl
insb
mov
xchg
adc
cmp
and
dec
in
jae
in
call
mov
dec
bound
xor
ret
leave
gs
loope
inc
out
lods
int3
cmp
addr16
dec
sbb
frstor
dec
cmpsb
out
mov
lcall
call
xor
insb
add
test
pop
insb
jbe
and
xchg
xor
sub
std
stos
cld
lret
inc
mov
cmp
stc
or
cs
rclb
or
test
adc
incl
enter
insb
dec
out
inc
cltd
in
sub
cld
notb
cmp
out
xchg
sar
les
ds
rorb
in
and
pop
or
mov
es
imul
mov
std
add
test
push
enter
mov
mov
stc
push
sub
arpl
mov
adc
mov
out
mov
cld
es
clc
jbe
ds
jg
insb
dec
data16
cmpsl
out
movsl
cmc
insb
dec
mov
jbe
push
mov
imul
cli
int3
cltd
mov
sbb
frstor
xchg
push
gs
dec
or
dec
in
insb
xor
mov
cmc
xchg
push
sub
shl
cmp
lock
loope
in
insb
mov
fs
cmp
arpl
and
jp
insb
sub
xchg
call
push
jne
or
mov
push
sub
jecxz
repnz
cmp
and
stos
leave
aad
insb
jecxz
mov
insb
ret
cs
mov
loope
test
cmp
insb
sbb
jp
mov
outsb
imul
icebp
cmp
test
pushf
jnp
jne
and
cli
lds
cmp
sub
xchg
insb
gs
fsubrs
into
pop
sahf
lahf
jle
insb
aad
sbb
cltd
insb
pushf
push
cmp
sbb
scas
insb
sbb
mov
insb
lahf
cmpb
mov
iret
pop
dec
jmp
into
sahf
xlat
inc
insb
cmp
mov
inc
and
arpl
aas
imull
push
filds
dec
mov
push
cmpsl
or
js
insb
shlb
mov
and
insb
xlat
mov
cmp
push
or
xchg
pop
insb
cmp
sub
fs
sbbb
add
imul
and
cmp
cld
fnstenv
insb
xor
arpl
loope
popf
aam
popa
cmpsl
sbb
sub
sbb
imul
dec
push
jmp
sub
sbb
shrl
cmpsl
in
xchg
popa
imul
jb
pop
les
outsl
pop
and
loope
pushf
pop
jbe
imul
jb
iret
repnz
add
cld
push
imulb
mov
and
jns
dec
lods
in
dec
in
out
call
and
lods
fisttpl
bound
leave
insb
pop
cmp
stos
neg
insb
and
push
lret
sbb
dec
inc
pusha
mov
jmp
out
jnp
xchg
cld
pushf
insb
ret
xor
data16
pop
lock
insb
enter
cmp
sub
leave
xchg
cmp
insb
rcrl
push
jge
and
push
fwait
or
movsb
clc
loop
jecxz
not
sbbb
adc
fisubrl
mov
mov
insb
sub
and
add
cmp
or
mov
push
push
inc
cwtl
sbb
xor
mov
repnz
out
lock
cs
or
xchg
sahf
sbb
call
loope
inc
add
insb
jge
mov
enter
push
in
loopne
out
push
outsb
rolb
lods
int3
aam
enter
sbb
pop
xchg
mov
mov
dec
push
in
fistpll
into
jl
mov
das
lods
pop
push
add
out
repnz
in
inc
test
dec
pop
stos
inc
ret
xchg
and
sbb
imul
jo
sarb
testl
imul
lods
sbbl
das
jne
mov
fildll
stos
pop
add
sbb
mov
mov
cli
dec
jecxz
in
out
push
xchg
sub
xchg
ds
mov
jmp
pop
mov
jnp
jmp
das
aaa
in
outsb
mov
add
imul
inc
jno
jmp
cmp
rcr
lds
sub
jo
push
adc
cmp
shl
stos
aam
push
push
cmpl
push
push
sarl
callw
insb
dec
cmpsl
andl
call
xor
xor
imul
jnp
lods
dec
fidivrl
cmp
pop
xor
test
pop
loope
jo
jp
inc
pop
insb
stos
fs
in
insl
push
xchg
insb
pop
add
mov
stos
xor
outsb
jmp
pop
and
call
lods
cmp
insl
jbe
xchg
lds
add
test
imul
repz
nop
insb
js
push
push
sub
std
insb
sub
mov
mov
cli
cmp
mov
insb
xor
shrl
test
cld
push
jle
das
fdivrs
insb
mov
inc
xchg
popf
and
cwtl
mov
insb
jb
xchg
mov
inc
daa
test
insb
shll
push
rclb
push
or
insb
out
adc
subl
dec
ja
pushf
dec
fimuls
cmc
in
enter
inc
sbb
lock
bound
push
add
in
in
orps
xor
rclb
lcall
or
xchg
jmp
test
cmpsl
adc
inc
into
gs
push
decl
sbb
add
imul
nop
scas
ljmp
shrb
notl
mov
pop
rcrb
dec
insb
push
xchg
orb
cmpsl
sub
mov
mov
aam
insb
ds
jg
lds
bound
cmp
mov
jne
lret
pop
nop
dec
stos
mov
or
xchg
sbb
xchg
xchg
or
aad
push
sub
lods
sarb
or
js
jbe
xchg
insb
sub
pop
push
popa
or
repnz
in
test
cmp
push
jnp
jmp
or
fsubrs
add
in
adc
bound
out
sub
inc
fcompl
xchg
or
and
jl
xchg
adc
aad
cli
cltd
xor
inc
lock
ret
jg
test
nop
jge
inc
xchg
dec
fucomp
push
cs
xchg
mov
rcrl
insb
and
sub
jp
jecxz
adc
push
pop
cwtl
mov
add
mov
dec
pop
pop
imul
sub
xchg
sbb
pop
push
jns
push
lock
mov
flds
adc
js
mov
test
stc
imul
jae
in
sti
cltd
jo
lret
nop
fcompl
popa
or
insb
sti
sub
adc
mov
insb
negb
arpl
cltd
fisubrs
lcall
test
xchg
cmc
pop
fdivl
insb
ljmp
loope
arpl
sbb
aad
sti
add
shrl
sahf
flds
icebp
imul
mov
pop
repz
xor
xchg
cmp
testb
insb
lcall
push
insb
movsl
or
mov
dec
cmp
das
inc
add
adc
xchg
xchg
sarb
xchg
pop
adcl
pop
sahf
add
insb
fsub
or
insb
aaa
test
and
or
insb
mov
leave
or
push
push
insb
dec
outsb
aad
sbb
repz
bound
and
outsl
out
ret
pop
jg
out
arpl
sub
xchg
lea
loop
fldcw
mov
test
jb
call
cmp
aam
insb
push
mov
lcall
push
and
scas
out
arpl
dec
jnp
dec
mov
insb
xorps
ret
xor
imul
cwtl
es
insb
add
cmc
mov
insb
ss
cmp
jle
insb
xchg
mov
cmp
lock
imul
xor
sbb
push
jae
in
xchg
adc
insb
xchg
adc
add
jb
insb
cmc
and
xchg
xor
mov
int
lahf
xchg
test
add
and
insb
stos
xlat
outsb
repz
pushf
sub
out
div
nop
pop
sbb
and
jl
into
jo
in
pop
pusha
sbb
mov
jbe
sub
mov
dec
mov
xchg
lahf
ss
popf
sub
fbld
movsl
out
icebp
insb
daa
bound
ss
mov
mov
xchg
jge
mov
addr16
aaa
fildll
mov
rorl
sbb
hlt
sub
and
and
add
sub
fldcw
sub
repz
inc
jp
mov
cmc
loope
push
test
fcompl
test
imul
and
xor
inc
insb
nop
pop
arpl
xor
aas
push
out
mov
inc
sub
push
scas
push
adc
add
mov
mov
push
jo
ljmp
xchg
into
gs
outsl
daa
cmp
sbb
or
xorl
cvtps2pi
insl
push
dec
adc
imul
pusha
hlt
loop
stos
xchg
pop
xchg
loopne
insb
gs
fmull
insb
dec
xchg
cwtl
popa
xacquire
int3
push
jae
sbb
mov
sar
and
nop
cmc
imul
push
jl
xchg
pusha
dec
jo
in
inc
pop
jmp
mov
add
mov
imul
and
pusha
fistl
insb
das
xchg
dec
sbb
inc
test
lods
scas
loopne
cmpsl
jg
insb
shl
ja
outsb
push
fstpt
pop
rcl
add
ret
sbb
insb
jo
ss
pop
ficoml
shrl
xchg
imul
inc
shlb
repnz
insb
sti
shll
aad
mov
adc
pushf
insl
scas
cs
jmp
pop
xor
je
xchg
dec
sub
mov
adc
sub
fsubr
inc
push
lahf
jb
insb
cmp
pop
lods
inc
and
rcrb
insb
inc
or
jo
fsubs
loopne
repz
loope
push
shlb
test
push
stos
shrl
inc
cmpsl
mov
test
push
insb
adc
fsubr
test
mov
ja
push
lock
lcall
cmp
int3
cmp
sub
sbb
in
movsb
mov
inc
insb
mov
jne
adc
lds
fisubrl
xchg
mov
fisttps
lret
inc
pop
jno
imul
jmp
test
in
and
xor
lret
lock
sub
les
mov
popf
aad
movsl
in
cmp
loop
lret
push
nop
sbb
std
shr
fmuls
adc
push
xor
push
insb
cmpsl
jae
mov
push
xchg
insb
adc
mov
insb
shl
mov
mov
push
dec
insb
sbb
sahf
inc
dec
sar
xor
lods
and
mov
xchg
insb
lahf
stos
push
addr16
idivb
in
lods
rcll
inc
out
mov
insb
in
shlb
push
cmpsl
insb
stos
enter
popa
insb
xchg
arpl
jne
xor
insb
aam
outsl
inc
adc
cmp
jp
pop
mov
xchg
aam
gs
scas
les
popf
pop
rcr
insb
jmp
arpl
mov
push
lds
xchg
std
ljmp
in
mov
mov
push
imul
fsubrl
push
lea
xchg
dec
daa
inc
out
dec
jge
pop
gs
idivl
sahf
je
adc
push
push
test
and
mov
sub
out
inc
jmp
mov
dec
outsl
cld
ds
xchg
jb
bound
fsubs
push
hlt
push
dec
pop
ja
imul
push
insb
pop
adc
repnz
into
insb
sbb
pusha
imul
sub
iret
testl
xchg
insl
scas
pop
jle
gs
div
fcmovb
ds
out
add
mov
imul
in
insb
les
loope
je
outsb
popa
scas
dec
jge
insb
repz
cli
stc
jb
sub
lds
insb
iret
xchg
leave
sub
dec
sbb
pop
ja
gs
cmp
popa
inc
jno
insb
jmp
iret
orl
xchg
scas
out
pop
loopne
jl
loope
roll
int
mov
jle
jmp
ds
insb
negl
xorb
jecxz
xor
mov
inc
push
pop
pop
insb
icebp
push
pop
mov
in
xchg
jbe
pop
sbb
lea
xor
add
sbb
jno
aas
int
pop
cwtl
sbb
out
insb
jge
and
jne
or
je
out
sbb
aam
and
push
dec
pop
inc
sub
dec
imul
sub
dec
mov
mov
xor
in
dec
je
push
in
lods
bound
stos
call
lahf
sub
push
insb
loopne
cld
add
xlat
pop
push
and
cltd
and
cs
cmpsb
fistl
sub
rorb
daa
imul
notb
into
insb
loopne
sub
lret
incb
gs
adc
sbb
imul
cmp
mov
test
mov
lods
pop
mov
insb
sbb
jno
pop
mov
decl
mov
sub
movsb
mov
pop
stos
mov
cmp
stc
insb
dec
jns
mov
insb
stos
insl
popf
or
push
dec
movsl
jge
mov
push
jge
jecxz
hlt
mov
lods
insb
call
cwtl
fsubrs
xorb
cli
xor
out
lret
int
fisttps
cltd
cwtl
dec
shl
xchg
out
pop
or
out
and
ljmp
inc
mulb
ss
fcmovne
insb
pop
dec
mov
lods
sbb
dec
xor
sub
xor
push
push
js
insb
sub
mov
loope
mov
lds
imul
dec
int
fldt
ror
push
push
inc
mov
lret
add
insb
je
outsl
or
pushf
dec
dec
mov
cmpsb
in
out
jg
out
xchg
fdivl
push
addr16
les
sbb
in
ret
push
out
and
xchg
sbb
add
loop
push
insb
aas
push
pushf
push
rdtsc
cmp
insb
add
aaa
add
mov
or
push
xor
dec
scas
dec
lods
popa
mov
xor
clc
mov
adc
mov
bound
cli
inc
push
cmc
lds
adc
mov
mov
mov
mov
pop
pop
in
cmp
ror
xchg
push
push
sub
in
fnstsw
adc
cld
rorb
shll
jl
test
mov
je
insb
or
mov
and
bound
mov
push
frstpm(287
jns
mov
test
xchg
xlat
push
insb
fyl2x
mov
inc
pusha
xchg
cmp
divl
dec
es
in
push
leave
xor
fwait
pop
pop
lea
pop
push
dec
cmp
sti
push
insb
mov
subb
mov
outsb
insb
push
pop
cmovg
outsl
mov
pop
ret
fdivs
das
push
xor
cmp
pop
insb
xor
sbb
mov
mov
mov
mov
jl
insb
pushf
in
cld
mov
mov
or
lods
repnz
arpl
pop
cmp
xchg
das
ficoms
pop
add
rcrl
adc
incl
xchg
jo
stos
or
sbb
pop
gs
cmp
cmp
xlat
imul
push
sahf
imul
pop
lods
in
mov
xchg
sub
xor
insb
outsb
or
push
push
sub
sub
insb
test
cmp
xchg
in
mov
repz
dec
mov
gs
aas
dec
rclb
lods
int3
bound
sub
push
jb
addr16
aaa
mov
sarl
mov
jb
cld
loopne
in
lods
insb
cmp
ds
imul
cmp
pop
adc
test
xchg
es
mov
loop
lahf
jbe
stc
sarb
pop
mov
repnz
insl
in
dec
pop
sub
imull
xor
add
jmp
int3
cmp
adc
xor
push
mov
aam
push
insb
push
test
mov
and
push
or
stos
iret
push
insb
cmpsb
repnz
sub
js
push
mov
int3
loopne
jns
or
push
xorl
push
insb
mov
scas
sbb
out
mov
hlt
xchg
rol
aam
shr
xor
sti
sub
cwtl
jecxz
or
xor
scas
pushf
mov
ss
mov
insb
movsl
divb
xchg
xorl
cmp
leave
es
mov
xor
loopne
inc
adc
enter
in
test
je
mov
lea
jbe
icebp
dec
pushf
dec
or
lods
inc
fxtract
insb
push
loop
jmp
pop
jl
insb
mov
jo
notl
outsl
pop
mov
jns
in
xor
xor
jecxz
xor
rclb
cmpl
or
pop
ret
mov
mov
mov
insb
imul
insb
xor
jae
push
gs
push
arpl
aad
sub
mov
in
cmpsb
sbb
shrb
jmp
lods
xlat
pop
mov
jg
add
inc
popf
cmp
fistpll
imul
xchg
jb
dec
fidivrs
and
pushf
popf
mov
in
lret
sbb
and
mov
dec
pop
insb
push
push
mov
ss
push
shrb
cmpsl
sahf
movsb
and
insb
js
rorb
pop
and
imul
pop
aad
outsl
in
mov
insb
jo
shrb
add
cmpsb
inc
insb
rcrl
mov
rcrb
outsl
mov
int
dec
orb
lcall
icebp
insb
xchg
lock
les
push
pop
insb
cmp
jae
and
int
stos
jno
mov
mov
or
test
daa
decb
xchg
mov
mov
outsl
test
pop
aaa
in
adc
adc
xchg
iret
in
insb
push
mov
mov
lcall
dec
das
insb
fucomip
imul
stc
popf
dec
stos
dec
and
jl
or
and
out
pushf
nop
test
jmp
or
sbb
in
insb
sbb
mov
pop
imul
icebp
pop
mov
jo
adc
adc
push
fldt
mov
sbbl
inc
pop
ds
dec
std
dec
dec
and
out
je
fdivrp
in
ret
add
mov
dec
movsb
dec
jle
jne
sbb
in
xchg
push
lock
and
inc
enter
insb
jbe
pop
pusha
dec
sahf
jle
inc
pop
hlt
aam
push
nop
rcrl
push
aad
inc
jne
jle
imul
cmpsl
cmc
dec
mov
enter
adc
and
ret
mov
jne
cmp
jp
push
xor
cmpsl
scas
cs
cmp
sbb
hlt
imul
insb
jns
loop
cmpsl
push
mov
dec
cmp
in
mov
out
ret
push
test
test
clc
or
das
cmp
xor
jne
insb
fsubrs
mul
and
cld
insb
sub
xor
cmp
enter
in
jbe
gs
mov
jecxz
push
scas
hlt
testl
pop
rcrl
out
dec
cwtl
dec
in
vmwrite
jnp
out
push
pop
or
jge
insb
imul
cltd
xor
arpl
aaa
add
insb
inc
pusha
out
xchg
clc
in
dec
pop
inc
in
and
sub
dec
hlt
inc
scas
pop
sub
mov
cs
in
imul
cmp
push
add
pop
push
test
adc
in
or
jl
imul
mov
imul
dec
dec
bound
iret
cltd
sub
addr16
adc
dec
clc
cs
jmp
cld
xchg
xchg
sbb
mov
rcrb
into
test
insl
sbb
cli
test
jnp
in
scas
dec
sub
mov
test
inc
aam
sub
cwtl
push
aaa
mov
xchg
jne
inc
insb
cmp
or
inc
lods
insb
jl
loope
fs
or
xor
cwtl
inc
mov
mov
xchg
or
insb
sub
test
lret
stc
dec
imul
mov
int
adc
mov
jne
call
popf
mov
pop
pop
add
jl
or
mov
decb
adc
loopne
outsb
insb
sbb
inc
imull
or
xchg
and
loop
xlat
mov
hlt
push
imul
cld
icebp
sti
imul
daa
add
mov
push
test
iret
mov
ss
lret
or
or
in
or
lret
loop
imul
pop
add
nop
and
and
push
out
or
pusha
fnstcw
lods
sub
pop
loope
mov
daa
mov
push
mov
xor
insb
aas
sub
fs
insb
cmp
ret
push
fisubrs
popa
enter
pop
insb
jns
push
ljmp
nop
pop
insb
inc
push
ret
sub
out
cli
mov
imul
outsl
movsb
lds
arpl
push
iret
mov
divb
clc
inc
pop
push
in
and
xchg
int3
dec
sub
test
aas
shlb
mov
into
xchg
cmpl
outsl
pop
mov
arpl
out
or
pusha
ljmp
aas
jbe
insl
gs
mov
xor
pop
jg
insb
es
sbb
push
jecxz
jmp
inc
adcl
repnz
adc
pop
mov
pop
pop
mov
or
jl
ficompl
push
push
push
jle
sub
jge
pop
jne
inc
add
sub
loope
inc
xor
mov
cld
and
add
daa
xchg
fldl
test
jmp
outsl
sbb
lahf
push
loopne
cmp
out
test
jb
orb
repz
lcall
negl
orl
and
icebp
xchg
rolb
lds
pop
sbb
test
subb
push
ds
dec
push
test
jge
jae
fiadds
dec
stos
jg
stc
sub
ss
push
lret
fs
push
adc
nop
das
out
hlt
jecxz
dec
push
fs
sub
stos
cwtl
test
jge
inc
push
adc
aam
adc
arpl
fisttpl
jns
stos
mov
mov
enter
jmp
shr
stos
xor
dec
mov
push
aas
xchg
sbb
fisubl
sbb
push
test
jg
pop
pop
imul
pusha
push
dec
dec
sti
int
jmp
test
dec
sub
mov
insb
pop
leave
cmpsl
aaa
sbb
xchg
jle
mov
mov
jnp
push
mov
push
push
xor
inc
mov
or
aaa
dec
imul
sub
loope
push
jb
and
push
xor
xor
xor
hlt
fstl
insb
rcrb
push
sub
icebp
sub
ret
dec
insb
jns
lds
aad
adc
in
push
jbe
jl
fildl
insb
das
jge
shlb
push
or
out
insb
cmpsb
pop
and
xchg
or
jo
or
stos
out
and
add
fstps
into
push
sub
in
pusha
push
ja
and
stos
insb
inc
lock
test
pop
adc
dec
and
mov
outsb
ds
xor
push
hlt
iret
out
push
mov
mov
gs
add
xchg
ret
sti
sbb
sbb
dec
and
push
stos
in
dec
sub
or
inc
lahf
jl
lock
daa
mov
cltd
in
rorb
aam
test
outsl
es
or
xor
gs
jecxz
into
pop
popf
jnp
scas
jae
loope
lods
inc
aam
out
imul
insl
fsubr
sub
pop
sub
push
and
cmp
imul
and
mov
mov
sti
sbb
test
test
pop
in
ds
sub
into
adc
xchg
insb
push
xchg
pop
sbb
adc
and
jecxz
stos
and
sub
into
test
xchg
mov
aad
nop
adc
adc
mov
gs
sub
das
imul
out
lods
sub
outsl
xchg
repz
nop
cmp
xchg
cmp
jbe
fldt
out
mov
aaa
inc
dec
bound
pop
jbe
sub
shl
outsb
insb
stc
inc
ret
xchg
insb
aas
push
das
ljmp
sub
outsb
push
push
push
cmp
dec
mov
xor
inc
jo
or
leave
inc
mov
jle
dec
je
push
and
mov
nop
dec
cli
insb
mov
mov
insb
cs
adc
insb
mov
cmp
adc
adcl
push
insb
add
aas
xchg
insb
lods
mov
fs
fisubrs
cli
insb
xlat
mov
sti
icebp
sub
lods
push
jno
mov
je
xor
add
xchg
lahf
cs
cld
or
insl
loopne
pop
adc
mov
jecxz
sub
fstpl
shll
fmuls
xchg
aas
cmp
jge
in
imul
mov
or
out
aad
ss
insb
sti
add
cmc
test
adcb
push
imul
test
fildll
add
insb
sbb
sub
mov
mov
arpl
insb
pop
lcall
imul
roll
cmp
mov
xorl
lahf
inc
mov
cmpsl
call
scas
insb
nop
rcrl
fdivrl
mov
outsl
movsb
addr16
sub
iret
insb
lods
cmpsb
out
cwtl
rep
lret
int3
xchg
mov
push
xchg
loop
xor
enter
pop
out
mov
push
push
push
mov
adc
neg
je
push
insb
xor
pushl
ja
addl
or
call
imul
xchg
out
push
dec
insb
ret
add
popf
insb
jge
dec
sub
das
xor
jle
or
mov
rcll
out
in
push
pusha
sub
cli
clc
insb
fcmovbe
cmp
mov
into
jmp
insb
popa
dec
xchg
jge
fcomps
fldcw
mov
fisubrs
push
repnz
cli
mov
insb
cmp
rcl
inc
xchg
movsl
gs
or
cmp
insb
nop
inc
pop
mov
insb
adc
pop
cmovle
mov
lods
mov
clc
push
sub
xchg
mov
idivb
push
pop
pop
ss
sbb
rcrl
or
jb
sub
pushl
imul
data16
ja
dec
mov
insb
xchg
xchg
outsb
push
mov
int3
cmpb
clc
insb
sub
cmpsb
add
push
lods
mov
imul
mov
xor
insl
imul
cwtl
sti
fcoms
es
insb
js
mov
in
mov
pusha
cmpsl
push
mov
sbb
out
bound
into
insb
jne
xchg
arpl
insb
and
pop
push
dec
sub
jge
jo
popa
insb
lods
push
repz
inc
cmpl
arpl
shrl
pop
mov
push
insb
dec
lahf
or
sub
cmpb
pusha
and
pop
and
mov
mov
into
cltd
mov
out
insb
jbe
jo
fildll
or
in
pop
sub
push
pop
adc
pop
mov
pop
movsb
lods
fcompl
addr16
ret
or
fisttpll
mov
jb
mov
cld
push
imul
xlat
push
cmpl
stos
fstpt
adc
dec
xchg
jb
rol
adcb
les
data16
lret
insb
pop
arpl
xchg
outsb
mov
jb
push
or
clc
insb
std
mov
and
inc
insb
cli
dec
insl
mov
scas
aad
imul
std
push
or
or
and
insb
psadbw
mov
inc
or
iret
jle
insb
lcall
mov
ljmp
insb
fdivp
mov
rolb
out
mov
insb
xchg
push
jge
inc
lfs
lret
xchg
insb
dec
xor
repz
enter
mov
mov
cli
std
in
mov
aas
outsl
insb
adc
out
adc
and
push
pop
jecxz
popa
mov
dec
mov
cli
sti
insb
fldlg2
leave
jl
into
or
xlat
mov
inc
pop
sub
ss
jae
pusha
outsb
xchg
movsb
in
mov
clc
insb
cmp
cmpsl
cmp
insb
icebp
nop
inc
xor
cmp
ret
sub
arpl
pop
pop
sbb
insb
inc
adc
das
int3
out
out
and
clc
mov
jno
in
inc
lret
push
aas
insb
and
das
mov
fildll
mov
rorl
adc
pop
add
aam
pop
insb
sbb
insb
pop
mov
or
testl
xchg
loope
cli
mov
inc
test
pop
subb
mov
imul
scas
sarb
xor
fnstsw
lret
insb
mov
test
jge
sub
mov
sbb
vpsllw
pop
xchg
mov
insb
adc
adc
cmp
sbb
mov
insb
or
imul
add
ja
aam
les
xchg
cmpl
dec
shl
insb
rolb
bound
push
jl
mov
icebp
sub
insb
push
scas
sti
or
xor
ja
int
add
dec
xchg
icebp
test
push
xor
clc
cld
das
aaa
sarb
adc
jo
cmpsb
inc
sbb
pop
dec
pusha
cmp
in
jno
in
shlb
adcb
insb
sbb
dec
leave
rorb
mov
negb
insb
fldcw
mov
add
das
insb
dec
push
gs
clc
arpl
push
push
sub
dec
insb
out
mov
xchg
std
ficoml
test
mov
outsl
stos
add
pop
cmpsl
pop
ds
mov
push
popf
in
push
aad
imul
scas
pop
je
stc
insb
jecxz
sti
fbld
mov
jno
popf
lock
lods
inc
push
rcll
xor
cli
pop
insb
std
scas
pop
int3
mov
fists
insb
xor
mov
push
lahf
leave
cmp
stos
insb
and
movsb
mov
iret
jp
insb
lcall
xor
xor
jno
inc
std
cmc
movsb
xlat
stc
cs
pop
mov
mov
dec
dec
xchg
fsubrl
or
xor
adc
cmp
mov
out
mov
insb
shrb
ds
in
andl
pop
push
mov
out
jbe
dec
adc
mov
pop
dec
jl
data16
xor
enter
in
jo
iret
mov
jp
inc
imul
push
mov
inc
mov
repz
insb
push
je
sub
testb
sub
ficomps
mov
daa
jmp
aam
loope,pn
insl
clc
stos
push
sub
sbb
stc
stos
insb
and
aaa
mov
lret
imul
mov
or
inc
jno
popa
jl
insb
fldcw
and
ret
and
mov
leave
xor
je
jbe
mov
lods
stos
outsl
jo
hlt
addr16
insl
out
add
stos
mov
jo
pop
mov
adc
sahf
scas
adc
pop
xchg
xchg
jge
sbb
add
mov
dec
nop
xor
insb
add
adc
or
cltd
in
insb
or
movsb
mov
xchg
sbb
insb
int
lret
cmp
lds
call
loop
shlb
cli
fcomi
dec
mov
stos
sub
xorb
in
fstp
call
xchg
dec
adc
shr
pop
out
lds
push
fwait
pop
jbe
xor
addr16
scas
insb
sti
push
jns
popa
test
dec
pop
inc
dec
insb
ja
hlt
adc
insb
lea
stos
jge
pop
outsb
insb
mov
nop
popf
aam
jecxz
insb
gs
xlat
repnz
frstor
push
adc
add
push
and
in
jns
adc
in
xchg
enter
sbb
rcr
or
fs
outsl
mov
pop
and
loope
repnz
insb
call
sub
enter
sub
out
lcall
in
xchg
sti
mov
insb
pop
out
adc
jg
rcl
jl
insb
inc
push
mov
inc
cmp
sub
in
lods
gs
mov
mov
outsl
insb
xchg
pop
subl
aas
insb
adc
adc
lret
leave
dec
insb
fiaddl
test
insb
in
sub
sub
arpl
insb
divb
or
stos
loopne
movsl
imull
lods
jmp
and
ss
out
mov
dec
jg
in
gs
cmp
insl
xlat
lods
rclb
into
sbb
insb
out
orl
iret
rcll
aad
push
and
or
add
and
hlt
push
mov
cld
stos
pop
ret
insb
cmp
add
pop
es
daa
jge
cmp
adc
adcl
fldt
clc
insb
daa
movsb
imul
cld
lods
insb
xchg
cmpsl
in
je
xchg
insb
jp
xchg
mov
push
mov
popf
cld
cmp
lods
rorb
ljmp
push
cmp
xchg
test
push
imul
mov
in
fcoms
pop
popf
dec
sub
loopne
out
adc
lods
jo
es
mov
insb
cltd
lea
or
imul
pop
mov
bound
push
dec
xchg
scas
cmp
pop
subl
and
bnd
adc
insb
jo
stos
push
mov
jg
pop
sub
pop
xchg
leave
push
aaa
orl
insb
add
push
ds
cmp
pop
mov
sbb
insb
or
outsb
jnp
dec
dec
adc
rorl
dec
in
clc
push
insb
inc
pop
pop
xchg
xchg
adc
jne
xlat
push
in
adc
xor
and
and
add
je
xorb
cmp
and
int3
imul
int3
or
xchg
insl
inc
xor
adc
imul
inc
mov
sub
out
insb
test
adc
mov
mov
iret
xor
push
push
addl
xor
pusha
lahf
dec
add
push
enter
insb
mov
pmaxub
push
leave
mov
adcl
les
sti
push
mov
cmp
lods
insb
push
loope
pushf
pop
insl
pop
push
insb
int3
mov
ss
cmp
dec
rcl
mov
imulb
jecxz
inc
addr16
fildll
push
mov
insb
jl
mov
dec
jbe
insb
xchg
mov
fmull
imul
dec
lret
add
cwtl
push
stc
divb
sub
scas
pop
insb
dec
dec
xchg
subb
add
call
xlat
xchg
add
aas
insb
lods
add
popf
loop
cmc
into
insb
fldl
cli
inc
push
insb
xchg
aas
pop
pop
aam
and
mov
inc
inc
push
jb
pop
insb
adc
ss
daa
out
in
mov
or
and
push
push
add
mov
mov
ds
cli
test
insb
jle
out
rcrl
imul
mov
outsl
in
jnp
pop
aad
and
sub
data16
xchg
push
fidivrs
mov
lds
jle
cmp
sbb
hlt
or
out
add
or
push
inc
int3
xchg
sbb
jb
insl
aaa
sbb
dec
inc
sbb
jns
shrl
jnp
lods
xchg
cmp
insb
fwait
push
ret
or
push
shll
addl
imul
mov
sub
jae
aaa
cli
and
dec
push
or
jne
je
or
inc
jp
stos
fsubrs
cmp
xor
pop
rcrb
mov
rcr
stos
insb
cmp
mov
mov
cwtl
dec
pop
cmp
pop
inc
in
subb
loopw,pt
sahf
fs
adc
iret
sti
into
push
insb
pop
adc
xor
xor
imul
sub
xor
sarb
xor
mov
jmp
jp
ljmp
pop
dec
adc
inc
das
pop
cltd
jle
xor
adc
je
scas
das
cld
ljmp
out
pop
xchg
insb
sahf
call
xor
fidivrl
in
mov
xor
imul
cmp
and
mov
cmp
mov
cltd
cmp
insb
test
fidivrs
xor
push
or
insb
cmpsb
sbb
inc
lret
insb
mov
sub
pop
pop
jl
jmp
lret
mov
test
fwait
movsl
push
sub
jo
mov
stos
lcall
dec
sub
and
ds
xor
inc
inc
jo
andb
aam
gs
adc
inc
inc
cmp
les
pop
fnsave
out
loopne
bound
jne
push
arpl
aam
dec
stc
xchg
mov
int3
scas
and
mov
push
pusha
adc
mov
fldenv
bound
gs
xor
push
mov
insb
rcrb
adcb
inc
gs
push
pop
inc
xor
jge
push
inc
je
xchg
dec
mull
lods
sbb
scas
ljmp
and
flds
lcall
aam
sbb
add
xor
cmp
mov
sub
cmpsl
adcl
sub
adcb
mov
loop
icebp
in
ret
xor
into
insb
jns
mov
xlat
insb
out
movsl
fmuls
pusha
push
and
insb
mov
pop
sub
cmc
imul
sbb
or
adcb
sbb
xchg
jns
scas
cmpsb
add
int
dec
cmp
scas
insb
gs
out
loope
inc
xlat
addr16
imul
les
and
jmp
invd
xor
sbb
lcall
rcrl
dec
int3
in
ja
xchg
pop
popa
inc
out
or
cli
cmp
xor
pop
jae
insb
test
mov
js
insb
xchg
lods
adc
jo
jl
xchg
sbb
insb
sahf
ret
mov
in
subb
fsubrl
je,pn
insb
sub
imul
push
and
scas
insb
xchg
push
mov
xor
lahf
mov
addr16
fcom
xchg
imul
sti
xchg
sbb
aad
imulb
mov
mov
insb
decb
pop
test
out
rorb
mov
sbb
test
shlb
push
push
add
insb
push
mov
outsb
xor
fwait
sub
cli
mov
xchg
dec
rcll
xchg
xor
inc
mov
aas
mov
jge
arpl
outsl
mov
leave
mov
nop
pop
sub
jmp
jo
mov
cmpsb
insb
jbe
icebp
iret
int
movsl
insb
jge
pop
in
push
pop
hlt
mov
or
sar
testl
js
add
aad
call
dec
push
adcb
mov
jge
insl
xor
das
adc
or
aam
popa
adc
pushw
insb
outsl
lea
int
mov
jo
shlb
sti
fldt
out
mov
and
roll
mov
mov
push
xchg
aam
idiv
mov
xchg
gs
insb
mov
xchg
insb
pop
sbb
fcmovbe
sub
xlat
or
mov
sbb
sub
pop
insb
movsb
jge
xor
xchg
lock
in
jle
in
pop
test
or
push
imul
pop
inc
insb
fistpl
hlt
icebp
insb
adc
jmp
xor
push
sbb
mov
je
clc
or
scas
dec
cwtl
out
xor
addr16
gs
es
xchg
dec
mov
insb
pop
and
jb
imul
cwtl
fmull
mov
mov
sahf
sbb
dec
cmc
shrd
mov
insb
dec
push
frstor
xor
fisubs
sbb
jp
add
lods
or
adc
pop
inc
paddsb
push
jl
enter
xor
cld
add
outsb
arpl
mov
pop
mov
add
pushf
outsl
leave
xchg
insb
bound
mov
insb
jl
int
nop
adc
lock
mov
dec
jbe
mov
enter
pop
jns
movsl
mov
mov
cwtl
dec
insb
mov
push
insb
pusha
jns
orb
cld
in
out
ret
fimull
lahf
addb
dec
fyl2xp1
or
sahf
adc
mov
mov
or
mov
insb
fwait
repnz
adc
cmp
imul
cmpsb
cld
cmc
xchg
insb
xchg
in
loope
mov
insb
clc
and
sbb
mov
test
mov
jg
xchg
scas
jb
fs
cmp
insb
mov
ficomps
jmp
pusha
gs
push
inc
add
pop
test
or
jp
test
jl
sub
outsb
sahf
das
ja
ljmp
imull
clc
call
push
nop
popa
js
cli
or
xchg
ss
dec
xor
cmpsb
in
cltd
in
pop
or
jecxz
insb
add
mov
mov
jl
insb
cmc
int3
dec
push
pop
sub
push
pop
inc
xchg
push
pushf
cmp
ja
mov
popf
insb
push
adc
ss
mov
pop
insb
int
roll
sarb
shll
sub
xchg
xchg
fisubrs
mov
je
insb
ds
shll
mov
or
mov
dec
test
test
aam
out
xchg
pop
inc
je
dec
insb
jnp
xchg
add
insb
dec
sarl
fadds
es
inc
add
dec
popa
pop
mov
js
arpl
sub
in
clc
dec
pop
xchg
shrl
sbb
in
in
push
cmpsl
es
or
mov
fldl
fimull
cmp
or
mov
mov
test
je
push
insb
mov
mov
ss
mov
insb
sbb
aad
int3
gs
and
adc
aam
add
adc
insb
es
ja
clc
cmpsl
push
stos
test
insb
je
lret
rolb
pop
push
dec
ret
insb
jl
imul
mov
insb
repnz
rcl
inc
xchg
imul
mov
inc
ret
jl
cmp
add
aaa
insb
sub
loope
push
imul
dec
jge
in
inc
jb
std
mov
sbb
adc
in
mov
mov
imul
push
int
push
mov
arpl
rcrl
clc
and
aad
gs
inc
mov
imul
mulb
jle
sub
sbb
mov
je
imul
jge
dec
jnp
xchg
enter
sub
insb
dec
and
fnstenv
out
insb
pop
jns
or
imul
mov
xor
idivl
insb
jmp
xor
adc
addr16
push
xchg
sbb
jmp
insb
cmpsb
fbld
push
pop
mov
xlat
insb
mov
aas
cld
outsb
push
xchg
jo
insb
out
jmp
mov
pop
popa
sbb
and
cmp
ret
mov
stos
jge
pop
testl
outsb
dec
xor
jnp
insb
pop
xor
mov
gs
ffreep
pop
dec
stos
out
or
mov
sub
testl
mov
xor
inc
lods
mov
test
and
mov
xchg
cwtl
loope
jnp
xor
loopne
xor
insb
pop
mov
sbb
or
pop
xor
or
dec
and
push
je
sbb
inc
rcl
icebp
sub
jle
insb
test
xchg
imul
mov
lret
fildll
sbb
repnz
pushf
pop
sub
test
mov
push
insb
sbb
lods
aaa
lahf
and
insb
cltd
and
push
das
inc
inc
addr16
sbb
xorl
add
insb
sbb
jp
jo
fcmove
outsl
mov
mov
scas
std
adc
jnp
loop
scas
or
dec
mov
xor
add
sbb
add
adc
push
push
cmp
mov
testb
push
lds
mov
test
sbb
sti
shl
jno
outsb
repz
and
adc
fidivrl
adc
adc
xchg
cmp
mov
mov
dec
cmp
je
fsubp
cmp
in
jmp
iret
insb
mov
push
inc
jns
pushfw
pop
or
out
lds
dec
popa
insb
push
mov
insb
js
idivl
push
iret
ss
and
sub
mov
loope
xchg
lcall
test
xlat
imul
out
cmp
imul
mov
jg
xor
sub
mov
in
popa
insb
call
movsl
pop
movsb
insb
inc
push
dec
push
pop
cmp
into
fidivl
fnstcw
imul
xchg
jg
nop
xchg
lock
roll
leave
imul
xor
stos
test
mov
dec
insb
dec
jb
test
mov
pop
sub
xchg
les
daa
insl
out
insb
gs
js
lahf
testb
fwait
pushf
ret
andb
push
sbb
test
ret
arpl
testl
cmp
jp
jno
cmpsb
xchg
out
push
nop
ljmp
imul
stc
or
sub
mulps
out
imul
jmp
dec
ds
xchg
pop
das
clc
xchg
inc
test
inc
lods
add
push
insb
outsb
enter
lods
pop
xchg
insb
push
adc
sub
push
push
outsl
sub
lahf
scas
jo
dec
insb
sub
in
shr
icebp
insb
mov
sahf
sbb
insb
mov
xorl
and
pop
gs
pop
mov
test
xor
push
mov
rolb
lods
xchg
add
cmp
arpl
fistps
mov
ss
push
shrb
aaa
sub
and
insb
cmpsl
pop
fs
sub
lret
push
pop
sbb
sbbl
xchg
cmp
insb
fstl
inc
mov
jecxz
inc
mov
fs
loope
push
fistps
icebp
sbb
stos
nop
pusha
cmp
insb
sub
call
cmp
pop
scas
lods
je
sbb
arpl
in
and
lcall
test
xlat
mov
subb
ds
loopne
dec
ss
fnsave
or
in
ret
in
jns
push
cmpsl
andb
adc
push
in
add
mov
cmc
subb
ljmp
outsb
fisttpll
mov
rcl
pusha
sti
mov
pop
imul
aam
adc
xor
inc
lret
in
movsb
jl
loop
int3
je
and
insb
sarl
mov
fimuls
jmp
popa
and
cwtl
ljmp
push
fimull
jmp
repnz
pusha
clc
cmp
cli
insb
dec
jo
leave
cmc
add
insb
in
mov
out
xor
mov
jne
sub
insb
lcall
mov
mov
imul
mov
dec
xor
or
sarb
mov
das
push
mov
xchg
insb
push
js
push
inc
mov
adc
into
lods
cmp
insb
mov
pop
enter
dec
insb
hlt
inc
loopne
mov
push
and
mov
add
test
jne
fstl
mov
cs
testb
insb
inc
sbb
push
insb
icebp
fsubrs
sub
clc
jecxz
int
lret
sbbl
add
fwait
insb
bound
cmp
scas
push
pop
insb
sub
in
or
mov
outsl
inc
mov
pusha
xor
jbe
cmp
outsb
aad
popa
andl
cmpb
in
addr16
or
movsb
shrb
int3
insb
lods
push
pop
insb
shlb
clc
aad
mov
fisubs
out
insb
xchg
imul
imul
mov
adc
jo
sbb
lret
cmc
sub
lcall
jp
das
std
cmpl
jmp
test
out
lods
sbb
aaa
or
js
loope
scas
or
insb
sarl
sub
sub
pusha
popf
xchg
ss
insb
dec
jbe
aam
sbb
fsubrs
loop
dec
popf
addr16
pop
mov
jno
mov
std
lcallw
jae
or
adc
imul
cmp
imul
cli
sub
clc
mov
mov
insb
aas
inc
adc
fstps
jno
imul
movsb
int
insb
daa
pop
ss
hlt
mov
xor
fimull
push
shll
xor
inc
ret
pop
cmc
or
aam
daa
dec
pop
les
in
outsl
fisubrs
jp
cs
dec
inc
imul
adc
lods
cmp
notb
inc
inc
jecxz
push
insb
cmc
and
test
sbbl
fmull
hlt
jmp
pushf
cmp
sub
insb
icebp
mov
jb
in
out
insb
or
add
cmp
lock
jne
sub
insb
les
add
jb
push
adc
in
mov
insb
xor
into
and
insb
test
ljmp
cmpb
jg
sub
insb
push
mov
add
repnz
pushf
inc
fs
ds
dec
add
sti
fbld
jecxz
xor
mov
outsl
insb
mov
ds
and
loop
push
outsb
jnp
adc
pop
dec
dec
mov
jo
setp
mov
cli
call
insb
ret
pop
int3
pop
imul
jp
and
daa
insb
or
push
xorb
and
int
cmpsl
popf
fildl
mov
pop
pop
gs
movsl
iret
loope
dec
dec
cmp
add
inc
aad
arpl
orl
mov
ds
pop
rorb
out
pop
repnz
push
cmp
mov
out
popa
pop
imul
mov
or
insl
xor
mov
scas
popa
cmp
or
mov
std
cwtl
gs
cmpsb
icebp
push
fimull
adc
mov
mov
popa
dec
mov
insb
cmp
test
inc
psrld
cmp
sahf
inc
cli
xor
insb
out
jae
jmp
adcb
cmp
repnz
xor
inc
fwait
into
or
dec
xlat
lcall
ja
insb
inc
mov
push
popf
insb
xor
hlt
cld
insb
in
xor
adc
in
ss
xchg
cwtl
jo
ds
pushf
sub
insb
mov
testb
pusha
jne
add
into
out
rsm
push
inc
test
fstpl
in
stos
jne
pushf
and
xor
mov
or
stos
nop
pop
insb
fnstcw
add
mov
sahf
push
sbb
adc
or
and
jg,pn
insb
out
dec
lods
arpl
imull
and
imul
in
test
cmp
mov
stos
outsl
cmp
shll
test
pop
insb
xchg
fsubrs
insb
sub
cmpsb
mov
pusha
cmp
or
aaa
mov
ss
pusha
push
fsts
cld
mov
shll
mov
dec
arpl
cltd
orl
insb
or
mov
insb
push
movsl
jbe
pop
push
outsl
pushf
lods
xchg
mov
sbb
enter
inc
mov
stc
mov
aas
cmp
sarb
xor
repnz
and
je
mov
add
jae
icebp
jmp
imul
lcall
jl
xchg
sbb
sub
fcmovnbe
adc
js
stos
out
inc
aas
repz
les
insb
sbb
aaa
and
movb
mov
mov
movsl
mov
push
out
push
sub
ljmp
imul
loope
notb
mov
imul
jmp
jl
fdivrl
sti
fldcw
lock
movlps
or
jl
test
insb
and
insb
ja
sti
xor
or
xchg
add
ficoms
and
inc
out
not
in
cmp
push
stc
roll
jns
and
cltd
lods
push
movsl
pushf
or
lahf
div
lret
dec
sbb
xchg
insb
pop
mov
les
mov
loope
sub
nop
jl
movsb
cs
hlt
insb
and
std
insb
xlat
add
and
mov
sti
mov
add
outsl
bound
fcomps
fstpl
pop
cmp
call
insb
aam
shlb
je
push
xchg
insb
adc
and
mov
pop
js
scas
push
stos
dec
std
into
mov
out
negl
insb
mov
jge
fldt
std
and
fnstcw
je
gs
sbb
fidivrs
cmpsb
subb
jns
push
fsubrl
hlt
jo
pusha
or
insb
jns
call
cmp
pop
add
fimull
and
lahf
test
xor
test
imul
popw
repnz
xchg
push
sahf
dec
adc
and
scas
mov
or
adc
pop
scas
repnz
cmp
js
jmp
aam
adc
imul
sar
inc
insb
notl
jae
mov
mov
rclb
fldt
xchg
lock
shll
and
adc
das
xor
cmp
mov
or
movsb
adc
ja
xor
cmc
adc
insb
popa
test
pop
xchg
outsl
adc
jmp
sub
jns
cli
insb
lret
je
inc
idivl
lahf
cmp
leave
mov
mov
lret
sub
push
test
enter
inc
stc
paddq
inc
sub
shl
loopne
leave
imul
mov
dec
mov
dec
and
cmp
dec
in
js
sahf
and
je
repnz
insb
call
xchg
mov
out
add
popa
xor
fucomip
aad
and
mov
aas
jo
sub
rorb
mov
adc
inc
inc
or
xchg
call
je
outsb
int3
je
mov
aas
cld
sti
ss
lods
push
arpl
insb
push
in
or
stos
hlt
imul
in
outsl
add
bound
insb
jge
pop
push
fnsave
push
inc
insb
adc
imul
ds
ja
xchg
icebp
push
jns
aam
push
or
insb
xorl
sub
clc
cmpsl
sub
repnz
mov
xchg
insb
scas
dec
aas
imul
and
and
gs
xchg
insl
lea
and
push
mov
inc
in
cmp
data16
pop
push
adc
or
jbe
mov
pop
mov
adc
loop
je
pop
repnz
insl
mov
mov
jge,pt
jl
inc
jae
arpl
push
cld
xchg
dec
cmpsl
add
mov
insb
rorb
es
xchg
fs
insb
pop
in
lock
jo
cmpsl
outsl
arpl
push
add
insb
hlt
test
jg
rcrb
mov
aam
frstor
jae
xchg
popf
dec
xor
enter
xchg
jle
imull
pop
pop
sbb
out
inc
mov
ja
rcrl
lea
sarb
in
fnstcw
sbb
adc
mov
add
pop
into
repz
xor
push
or
cmpsl
pop
push
inc
lods
sbb
xor
in
cmpsb
xchg
in
cli
xchg
jns
aad
pushf
push
pop
test
push
je
outsl
insl
add
pusha
and
push
cmp
sub
mov
cmp
mov
inc
ficoml
jae,pn
jbe
add
std
aam
insb
push
adc
in
pop
mov
pop
enter
lret
insb
dec
loopne
into
push
jge
mov
xor
test
jae
xchg
scas
je
xor
imull
jle
mov
jp
in
push
js
insb
jne
loopne
inc
xor
insb
movsb
aaa
inc
and
out
push
sub
mov
hlt
mov
dec
idiv
inc
out
mov
jmp
sub
dec
out
or
js
push
jbe
push
insb
cmpb
sub
arpl
mov
and
mov
push
xor
pusha
insb
pcmpgtw
pop
lock
dec
sbb
sbb
push
in
in
push
and
add
inc
push
out
gs
jmp
popa
pusha
xor
push
mov
jp
dec
into
xchg
push
insl
dec
rorb
dec
or
roll
cs
insb
movsb
pusha
loop
andl
inc
pop
stos
shll
insb
push
movb
dec
mov
outsb
pop
jae
mov
pop
insl
sbb
clc
mov
call
xchg
push
test
aam
pop
or
dec
test
dec
ds
mov
mov
jb
mov
les
jge
push
lea
insb
addr16
push
sbb
rep
lock
cli
dec
jnp
aas
stc
dec
xchg
negb
imul
xchg
rorb
insl
jl
dec
inc
movsl
insb
push
jno
stos
mov
xchg
and
dec
dec
lcall
pop
xor
insb
les
insl
mov
rcrb
xor
aad
imul
cs
adc
repz
insb
jmp
lcall
lret
sbb
pop
cmp
imul
xor
mov
inc
outsb
add
jle
test
in
jmp
cmp
aad
add
add
insb
inc
dec
ror
and
push
sti
add
dec
cmp
popa
sub
mov
mov
mov
or
gs
test
sbb
pop
push
aam
dec
jp
and
inc
insb
jg
test
xor
addr16
adc
stc
inc
pushf
adc
imul
cmp
and
fsubrs
push
lods
or
stos
xchg
push
cld
adc
mov
insb
scas
out
ss
dec
push
pop
aam
imul
dec
sarl
jae
fimuls
sbb
stc
lds
insb
mov
push
decb
mov
sub
std
insb
jle
scas
popa
or
and
test
insb
nop
test
ret
das
icebp
inc
insb
xchg
ja
jp
cmp
jg
dec
pop
in
jnp
aam
cmp
imull
out
shrl
loope
push
mov
bound
xchg
jb
sbb
in
and
and
jno
push
mov
in
push
mov
jb
or
lcall
push
in
fmulp
rcll
pop
ja
jne
iret
in
cmp
outsl
cmp
sub
push
push
insb
jb
fistl
dec
push
insl
jnp
cmp
dec
xchg
call
outsb
dec
int
push
jne
mov
pop
adc
repnz
rorb
loope
mov
mov
inc
mov
aam
ficoml
add
adc
fldenv
pop
mov
sbb
popf
or
inc
mov
insb
or
sbbb
sbb
adc
jne
repz
insb
repnz
dec
adc
sbb
addb
mov
dec
daa
jecxz
in
pop
pop
cltd
cmpsb
push
imul
jne
mov
rorl
mov
test
or
dec
inc
add
in
imul
inc
mov
gs
clc
imul
popf
sahf
cmp
ds
mov
inc
push
mov
mov
push
cmp
jnp
mov
or
test
or
aam
inc
insb
into
std
jbe
mov
push
scas
insb
lcall
bound
pop
or
push
cld
nop
push
repz
aam
in
add
cmpsb
repnz
fstpl
jp
pop
xor
pminub
insb
cmpsb
mov
movsb
lods
adc
xchg
fwait
dec
add
subb
pop
ss
sub
insb
cmp
cmpsl
dec
iret
das
ret
into
insb
fcoms
inc
xlat
and
inc
leave
mov
addr16
test
mov
outsl
jmp
mov
insb
movsl
or
shl
lds
jo
dec
inc
daa
xchg
xchg
insb
pop
faddl
cmp
in
out
inc
insb
shl
lea
insb
pusha
inc
iret
dec
add
insb
aam
push
xchg
aas
cmp
cld
pop
insb
into
mov
mov
adc
stos
dec
nop
pop
insb
loop
cmp
xor
xlat
call
jae
insb
inc
fstps
iret
hlt
mov
sub
aas
imul
dec
rorl
lods
sti
sbb
fwait
dec
sbb
sub
jmp
insb
test
cltd
jo
pop
out
out
daa
insb
pusha
int
ds
pop
pop
stos
mov
xchg
in
jmp
insl
mov
es
int3
mov
imul
enter
lock
dec
inc
rorl
mov
push
xchg
adc
sbb
fcomps
and
sti
dec
push
std
in
clc
or
insb
xor
add
xchg
add
adc
fisubl
cmp
jae
testl
and
xchg
arpl
cld
gs
jb
jg
sti
sti
jae
cwtl
in
out
xor
insb
inc
shlb
insb
sub
cwtl
ret
sub
push
cmp
sub
jns
fldl
add
repz
xor
js
pop
insb
in
and
xlat
xchg
je
push
insb
adcb
insb
or
cmp
aad
jp
jns
test
mov
repz
push
sub
int3
jae
lods
into
xor
dec
dec
shl
gs
jns
jp
out
xlat
jb
movsl
pop
sahf
rcrb
jecxz
cwtl
add
imul
in
sbb
mov
std
fadds
adc
add
jne
sub
push
out
addr16
popa
mov
jo
push
fdivl
push
popa
lods
popf
sahf
push
adcl
iret
mov
cs
int
movsb
enter
lods
orb
mov
pop
int
mov
iret
rcrb
mov
icebp
in
ja
sub
loope
pop
inc
test
inc
pusha
dec
xor
sbb
fdivrl
xchg
jo
out
xor
jecxz
inc
test
pop
cmp
lock
mov
mov
jp
push
push
cmp
jae
pop
push
pop
arpl
xor
loopne
nop
jo
enter
adc
inc
jmp
in
mov
ficompl
sbbb
sub
das
lahf
mov
mov
imul
push
inc
ja
hlt
lea
rcrl
pop
das
push
shll
movsb
mov
jecxz
xlat
push
mov
jo
cmpsb
call
sub
adc
outsl
insb
mov
xor
cwtl
mov
jge
sarb
sub
sbb
mov
or
scas
imul
sbb
aam
jns
icebp
mov
xor
insb
lds
jmp
dec
dec
das
mov
shrl
insb
jae
mov
push
int
in
lret
sub
push
insb
lcall
cmpsb
ds
lods
sbbl
addr16
mov
test
insb
mov
mov
insb
sub
and
sbb
sub
jne
gs
pop
mov
jae
in
jmp
cmp
and
insb
mov
add
arpl
mov
ficomps
insb
xor
cs
dec
test
lock
push
or
sahf
out
insb
adc
xchg
or
leave
mov
fstps
mov
mov
cmpsb
insb
cmpb
and
data16
mov
push
aaa
or
imul
push
insb
or
test
dec
mov
scas
sub
pushf
icebp
ja
call
inc
and
shlb
mov
loopne
xchg
out
insb
inc
stc
adc
rep
insb
and
push
or
mov
mov
pusha
sbb
stc
enter
ljmp
pop
roll
in
sbb
insb
inc
xchg
mov
mov
rclb
sahf
and
ffreep
jnp
xchg
jg
out
sub
adc
sbb
add
mov
xchg
insl
mov
ds
cmp
pop
push
test
cmp
add
rol
xchg
enter
shlb
cmp
mov
sti
ror
push
fdivl
mov
insb
sub
aaa
cmp
xchg
or
or
shlb
cmp
call
subb
sbb
lods
cmp
outsb
push
adc
imull
enter
push
int3
decb
jns
dec
xchg
test
call
mov
dec
enter
push
gs
add
cmp
aaa
aad
insb
inc
sub
test
addr16
pop
or
nop
adc
daa
cs
and
insb
aaa
or
or
cmc
jbe
out
in
insb
outsl
repnz
mov
cmp
pop
inc
mov
imul
movsb
out
imul
mov
repnz
decl
imul
out
insb
aad
lcall
loop
ret
jle
movsb
fldl
adc
mov
repz
and
inc
insb
sub
cmpsl
pop
push
sti
pop
lret
sub
bound
insb
jmp
jnp
mov
pushl
imul
or
mov
je
or
mov
cld
pop
inc
fwait
insb
cwtl
mov
mov
xor
insb
xchg
mov
stos
int3
jmp
add
push
dec
fmul
call
sub
xchg
cmc
add
or
inc
flds
insb
stos
fs
adc
inc
mov
push
lods
in
jle
jmp
cmp
push
pop
mov
inc
jb
cwtl
cmp
cmp
mov
xchg
insb
mov
sub
jae
sbb
ljmp
out
jns
lret
adc
fsts
pop
cmpsb
ret
addr16
cmp
fsubrl
dec
imul
xor
dec
bound
push
stos
xchg
imul
clc
push
pmulhw
insb
inc
test
cmp
loop
insb
cmc
test
icebp
imul
cwtl
push
mov
or
lods
mov
pop
sti
scas
mov
insb
insl
iret
hlt
orl
mov
repz
mov
insb
int
cwtl
sahf
sbb
sub
jnp
xor
lahf
or
mov
int
in
shrl
mov
dec
xor
lods
xor
std
orl
dec
mov
sbb
mov
adc
push
scas
insb
and
out
hlt
cmovo
clc
cltd
sub
sub
pop
fisttpl
rclb
cld
jbe
outsb
cwtl
xchg
loope
adc
nop
push
repnz
popa
loop
sarb
rcrb
cmpsb
out
inc
ljmp
dec
xchg
sub
out
pop
xchg
mov
mov
insb
mov
jns
mov
pop
mov
insb
inc
stos
and
inc
inc
out
ja
mov
pusha
cli
dec
push
mov
sub
xor
insb
outsl
outsb
mov
mov
cwtl
insb
fprem
add
rol
cli
pop
ss
loopne
dec
fcmovnu
sub
mov
xchg
test
ficomps
push
out
jle
js
lods
das
scas
sub
mov
nop
insb
push
adc
push
daa
xor
sahf
mov
and
lret
mov
or
push
xor
adc
test
sbb
dec
aas
xchg
jb
cli
cltd
mov
shrb
lahf
in
bound
xor
icebp
repnz
pusha
jp
xor
insb
dec
xchg
sahf
insb
daa
rcrl
push
inc
jns
insb
xchg
xor
adc
jae
outsl
popf
mov
mov
push
inc
dec
hlt
pushf
daa
imul
sbb
adc
adc
push
push
xorl
mov
add
mov
dec
insb
add
je
imul
sahf
nop
iret
cmp
jne
inc
mov
dec
and
insb
insl
or
call
decb
imul
imul
mov
or
lock
sub
or
jae
sub
inc
push
insb
jno
cmp
leave
insb
cmp
pop
sbbl
insb
lahf
aas
stos
push
xchg
jnp
sti
dec
pushf
sub
in
es
jecxz
and
push
sbb
cmp
adc
fwait
inc
mov
jecxz
call
push
mov
xchg
pushf
cmp
add
jns
insb
xchg
cmp
lods
jno
lds
jle
insb
mov
cmp
push
mov
cld
into
dec
cmpsb
add
sub
mov
or
js
dec
scas
clc
in
pusha
lds
into
sbb
sub
push
push
icebp
insb
mov
xchg
pop
push
lods
scas
in
jb
pop
mov
dec
aad
je
notb
flds
xchg
mov
xor
cmpsb
cmpsl
inc
jmp
loopne
lea
xchg
imul
jnp
in
insb
js
movsb
stos
cmc
adc
test
mov
out
imul
cmp
push
gs
movsl
scas
dec
clc
fdivl
scas
popa
xchg
arpl
jne
pop
pop
dec
int3
int3
imul
mov
dec
cmp
push
nop
insb
adc
mov
inc
icebp
xor
inc
outsl
dec
movsb
sbb
mov
mov
pop
fisubrs
push
mov
push
sub
jae
mov
out
add
leave
pop
insb
into
and
js
inc
xchg
pop
inc
sbb
pop
add
cmc
pop
pop
ret
or
loop
sti
mov
fmulp
insb
fsubl
and
popa
pop
xchg
xchg
mov
lds
in
insb
mov
cld
fs
test
jae
in
xor
pop
sub
fdivrs
push
pop
imul
ja
gs
cmp
jbe
push
jb
out
rep
jmp
push
imul
iret
pop
or
mov
gs
and
push
inc
mov
rolb
sahf
sti
nopl
push
lea
jl
mov
mov
lahf
pushf
or
negl
loopne
je
xchg
or
fwait
popa
call
cmc
pop
cltd
hlt
repnz
sarl
in
movsb
insb
in
addr16
imul
inc
xchg
sub
enter
cmpsb
out
push
insb
out
jne
dec
and
xchg
insb
pop
aas
hlt
mov
mov
daa
mov
insb
lea
cltd
push
arpl
gs
test
cwtl
xlat
sbb
insb
fs
jae
xchg
das
insb
test
in
rorl
or
adc
mov
in
push
cs
in
xor
mov
pop
mov
dec
repnz
insb
imul
leave
insb
stc
add
xchg
cwtl
lds
imul
pop
mov
xchg
push
jo
in
pop
sub
sbb
imul
jge
mov
scas
lea
pop
out
adc
ss
in
stos
into
rcll
xor
imul
xchg
mov
mov
jb
inc
aas
mov
cmpsl
insb
sbb
mov
out
insb
sbb
push
jmp
fwait
add
clc
jae
cs
push
imul
lret
mov
dec
insb
pop
sub
lahf
pop
pop
pop
fstpt
sub
mov
add
arpl
std
je
jp
mov
ret
movsl
mov
scas
insb
ja
add
mov
add
sub
dec
call
insb
inc
popw
clc
daa
mov
insb
sub
popf
mov
insb
into
fwait
leave
sbb
out
stc
gs
xchg
or
cmp
jb
sbb
jle
arpl
or
pop
mov
sahf
jb
push
loop
and
jbe
insb
push
xor
or
inc
imul
mov
in
in
fldt
xor
push
push
sub
and
call
adc
xchg
insb
inc
lahf
xor
xor
imul
xchg
inc
sub
outsl
jg
imul
mov
jne
cmp
jo
mov
sar
mov
loope
xchg
repz
stos
in
push
xchg
mov
push
fwait
mov
dec
cmc
push
insb
adc
sbb
mov
xchg
xchg
movsb
cmp
inc
pop
orb
fimull
clc
xor
jb
dec
pop
push
and
jns
hlt
mulb
insb
mov
xor
jmp
sub
aad
and
imul
dec
cmpsl
andl
sbb
jbe
repz
push
mov
add
pop
insb
fnstsw
decl
push
mov
xor
push
les
imul
aad
outsl
aaa
cld
call
push
inc
test
jle
dec
mov
in
and
lret
ds
cltd
aas
push
or
insb
pop
popa
fildl
and
xchg
sbb
insb
add
and
pop
sub
dec
sub
add
mov
insb
add
lods
xchg
add
ret
sub
les
addr16
mov
lods
xlat
andl
sbb
jb
sbb
repnz
inc
arpl
imul
and
orb
nop
test
gs
cli
add
aam
lods
push
inc
sbb
inc
les
call
faddl
xor
loope
sub
das
scas
addl
pop
jno
push
aam
jnp
cs
sbb
arpl
cmp
mov
cmc
insb
fdiv
lahf
push
xchg
pop
push
insb
jge
or
in
xor
out
pop
jl
mov
sbb
pop
sub
mov
mov
pop
insb
inc
fidivrl
dec
push
mov
pusha
insb
repz
mov
adc
push
inc
jo
in
lods
pop
and
jb
loopne
fbld
pop
mov
cmpsl
rcrl
das
dec
jecxz
xor
adc
jle
and
mov
adc
in
imul
movsl
imul
xorb
out
pushf
les
push
ds
mov
in
fcmovnu
xchg
pop
popa
insb
repnz
push
jg
sbb
insb
out
or
mov
in
or
testl
dec
repz
int3
stos
roll
insb
into
dec
inc
cmpsb
mul
lods
dec
insb
dec
add
adc
or
and
dec
dec
in
insb
les
sub
insb
addb
std
insb
mov
outsb
push
push
imul
repz
add
imul
push
aaa
in
inc
sbb
jbe
xchg
in
sti
out
cmp
fldt
xor
flds
outsl
pop
jnp
push
xor
in
out
mov
hlt
sbb
xchg
and
or
movsb
pop
std
adc
fimull
jg
mov
jbe
xchg
gs
xor
mov
jle
pop
lret
pop
sbb
xlat
xchg
insb
mov
add
gs
icebp
subb
xchg
sbbl
inc
mov
nop
mov
cmc
out
xchg
sub
adc
inc
xchg
push
lock
xchg
cs
mov
es
jne
adc
cwtl
fsubrs
std
adc
arpl
insb
push
out
mov
andl
add
push
or
mov
insb
jge
and
lea
ror
pusha
movsl
mov
sbb
enter
inc
lcall
xchg
mov
mov
repnz
add
cmpsl
inc
mov
insb
mov
push
nop
insb
stos
xchg
xchg
cld
mov
xor
pop
insb
in
pop
movsl
fincstp
xor
xor
clc
xlat
pop
ljmp
inc
lods
mov
clc
pop
insb
xor
inc
add
leave
dec
jl
inc
out
mov
rcr
xor
dec
adc
stos
std
add
icebp
sub
or
xchg
movsl
xor
dec
insb
test
cs
xor
lock
mov
imull
push
hlt
scas
sbb
nop
xchg
sbb
xchg
or
insb
lds
call
insb
or
adc
sbb
cld
jno
ss
xchg
orb
insb
popa
movaps
xlat
lret
js
gs
loopne
push
in
cmp
ljmp
inc
shl
pop
insb
mov
fwait
push
je
aad
mov
pop
push
cs
sbb
dec
movsb
adc
test
lea
jo
data16
insb
and
js
outsb
loope
imul
jl
fidivrs
cld
sbb
cwtl
scas
inc
push
xchg
in
popa
ljmp
mov
addr16
push
cwtl
fisubrl
out
rol
mov
faddl
jle
sbb
sub
loopne
xor
shll
insb
mov
dec
lods
xchg
insb
add
add
repnz
insb
jmp
pop
pushf
push
push
sbb
sub
sub
dec
out
negb
int3
inc
icebp
mov
pop
lods
aas
jns
push
pop
jle
mov
jg
xchg
insb
mov
outsb
aad
or
int
inc
xor
dec
mov
and
fistpl
jg,pt
adc
mov
clc
mov
cmp
jl
dec
xchg
cld
lods
insb
inc
lds
xchg
imul
or
push
cltd
jnp
cli
int3
ljmp
jae
push
cs
aaa
dec
add
insb
xchg
sar
dec
mul
das
sub
cmp
mov
jne
pop
out
lods
mov
add
mov
lahf
jnp
and
insb
mov
cld
jmp
gs
xchg
cmp
cmpl
or
cmp
add
leave
or
fnstenv
imul
xor
sub
movsb
loop
jmp
fists
mov
gs
add
adc
jecxz
cli
shrb
loope
push
pop
jmp
insb
repz
out
push
aam
lods
and
jle
or
ss
popa
in
rolb
cmc
jmp
rcll
jo
and
stos
out
jge
imul
andl
js
imul
cmpsb
int3
xchg
popf
movsb
mov
insb
or
and
push
dec
outsl
push
in
data16
push
xor
ret
repnz
jge
shll
and
fistpll
pop
cmp
jbe
sub
int3
es
push
dec
movsl
cmp
movsb
mov
popf
add
jb
insb
subl
sub
mov
sti
dec
insb
xchg
jb
pushf
sti
xchg
or
insb
jl
or
push
push
insb
mov
jne
daa
pop
jg
adc
jbe
or
add
jno
test
mov
or
push
movsb
fmuls
insb
adc
insl
dec
push
cs
sub
inc
ds
insb
out
or
xchg
test
ficoml
sbb
insb
movb
sbb
jo
insb
not
bound
arpl
stos
insb
add
inc
cmp
subb
xor
pop
adc
add
popa
insl
push
out
dec
pop
insb
or
movsl
mov
imul
loope
fistl
and
outsb
or
xchg
insb
sub
xorl
sub
jl
movsb
pop
repz
sbbl
fs
xchg
mov
int
insb
roll
lret
lret
insl
insb
cmpsl
cli
adc
shll
mov
jnp
pop
insb
scas
jg
push
ret
movsb
add
inc
pop
pop
jmp
insb
jl
adc
mov
shlb
add
loope
ret
gs
adc
push
int3
inc
pusha
in
je
insb
dec
movsl
mov
imul
insb
and
pop
lahf
mov
rorb
cmovnp
in
xor
jnp
and
js
insb
inc
adc
and
cli
pop
scas
xchg
in
mov
lds
adcl
test
mov
rorl
dec
sarb
call
or
push
lds
test
shl
imul
jnp
pop
in
shrl
pop
outsl
insb
es
jp
sbb
and
stc
xorb
sti
int3
insb
inc
rolb
and
daa
jecxz
and
lcall
out
mov
out
jbe
add
inc
addr16
sbbb
jb
insb
inc
jnp
jg
jl
inc
insb
or
adc
repz
mov
jmp
rcll
clc
nop
int3
add
dec
loopne
cmp
dec
xchg
test
fdivs
or
das
push
pop
fucomi
shrl
insb
push
ds
movsl
push
mov
xor
sub
xchg
dec
cld
lock
mov
sbb
aad
insb
str
inc
cmc
pop
push
notl
jne
xor
mov
jns
xor
insb
shll
mov
insb
js
cld
repnz
pop
adc
call
gs
int
insb
roll
inc
mov
mov
xchg
inc
clc
insb
sub
das
insb
mov
push
cmp
cli
jnp
int
pop
icebp
aam
loopne
in
lahf
jmp
rcl
mov
insb
mov
mov
mov
iret
imul
add
rcrl
sbb
jns
xor
pop
outsl
std
mov
stc
int3
xor
push
in
sti
adc
insb
testl
mov
jg
adc
or
lods
sbbl
push
xchg
fmuls
push
insb
or
lahf
dec
call
jb
sbb
xlat
pop
subb
lret
in
mov
aaa
mov
fmull
lods
out
pop
imul
or
aas
pop
stc
andl
aad
insb
scas
mov
jecxz
dec
outsb
cmp
xchg
pop
pop
sub
movsb
and
mov
add
insb
sbb
repnz
ss
lcall
stos
gs
and
loopnew
clc
aas
and
rcll
cmp
sub
faddl
rcrl
xor
sub
mov
fisubrs
push
and
lcall
insb
ljmp
fsubl
xor
cltd
or
fildl
lods
xchg
nop
pop
imul
lcall
cmp
xor
mov
mov
ja
and
imul
and
and
aas
jnp
adc
adc
push
push
add
sub
loope
mov
jg
pop
inc
out
push
outsl
insb
ficoml
sub
bound
popf
mov
std
jo
xor
push
lret
dec
pop
les
sarb
int
pop
subl
push
adc
test
loope
jmp
sahf
push
and
adc
pop
sbb
xor
cmp
mov
adc
mov
jno
rcll
insb
addb
scas
mov
pop
fstps
leave
sub
popa
cwtl
pop
imul
cld
stos
sahf
ds
aaa
movsb
mov
sub
fs
out
stc
push
xchg
insb
sahf
addr16
popf
sub
imul
and
lcall
sarl
arpl
insb
lahf
fmul
jp
ja
lock
mov
rcl
jne
xlat
ljmp
xor
andl
cmp
bndldx
push
mov
insb
outsl
mov
pop
or
sub
popf
xchg
xchg
mov
popa
adc
mov
and
insb
mov
outsb
imull
xor
insb
stc
push
orb
dec
or
insb
sub
and
insb
and
xor
cmp
jno
mov
repnz
and
rclb
xor
ljmp
mov
aas
insb
or
rorl
arpl
cmp
jge
jg
push
loope
insb
sub
nop
pop
int3
dec
popa
sahf
insb
pop
test
loop
jne
or
xchg
popf
in
jmp
adc
pop
fwait
aaa
sahf
fldcw
sub
pop
insb
imul
insb
test
xor
insb
xlat
push
mov
insl
insb
repz
push
shrb
pop
lods
xchg
scas
lcall
inc
jno
mov
pop
rorl
popf
lock
cmp
fwait
inc
and
popa
fstp
xchg
insb
pop
pop
add
push
cmc
push
imul
imul
mov
or
add
repnz
push
popl
xorl
cmc
std
ljmp
cltd
mov
push
outsl
mov
shlb
insb
dec
xchg
pop
xchg
xchg
inc
sbb
aam
adc
shrl
insl
mov
add
imul
jle
imul
insb
jnp
xchg
cld
add
pop
loopne
sahf
pop
rol
movsb
mov
sbb
outsl
dec
push
cmp
jg
popf
insb
outsb
cmp
mov
push
jge
shll
insb
lds
gs
inc
cmp
inc
pop
aad
sbb
jl
aas
mov
add
insb
dec
cmp
mov
outsb
mov
aam
cwtl
push
sbbl
ljmp
fmuls
mov
popa
stos
notb
loopne
pop
sbb
flds
dec
js
add
jmp
and
jne
insb
dec
lret
sbb
push
test
jns
scas
xchg
mov
repz
pop
xchg
add
mov
sub
push
gs
jl
sub
ret
xor
jmp
cmc
in
add
out
repz
xchg
pop
sub
mov
xchg
or
les
mov
cmp
add
xor
and
mov
jmp
sbbl
sub
jnp
sub
cmp
subb
or
out
pop
data16
xlat
sti
test
sub
or
int3
insb
add
lock
cmp
pop
mov
cmp
push
push
out
test
cmc
adc
dec
fs
test
sub
mov
jnp
xor
in
scas
inc
sbb
pop
orl
inc
mov
out
xor
xchg
mov
xchg
sbb
loopne
fwait
xor
sbb
gs
movsb
insb
mov
pop
xor
mov
cmp
add
xchg
mov
adc
and
out
stc
rcrl
jbe
sbb
and
mov
add
mov
lret
xor
adc
sub
cmp
mov
push
sub
shrl
xchg
cs
out
jp
pop
xor
add
jle
lea
loop
insb
out
jnp
arpl
xchg
fsubrs
cmp
cld
cmp
dec
and
lret
pop
pop
jne
ljmp
pop
sbb
sub
cmc
insb
ret
lret
lods
out
icebp
fsubrs
cmp
mov
stc
pop
jns
je
jl
call
in
insl
sub
mov
inc
decl
xchg
push
insb
sub
pop
inc
stos
enter
loop
inc
fwait
insl
ret
imul
push
mov
jge
enter
jae
mov
stos
ljmp
imul
xlat
lret
mov
and
mov
mov
xchg
pop
cmp
or
out
pop
mov
inc
mov
ss
imul
insb
das
xchg
mov
pop
fsubrl
add
cmp
push
or
daa
mov
sub
push
movsb
fisubrl
adc
movl
insb
loop
cmovno
sbb
icebp
insb
inc
adc
mov
test
sbb
xchg
mov
loopne
daa
mov
add
push
leave
dec
dec
lds
insb
fwait
insb
sbb
outsb
sahf
or
test
movsl
fistpll
imul
jo
sbb
and
xor
jge
mov
imul
mov
call
sub
cltd
aam
clc
dec
sub
xor
sub
shl
mov
insb
es
jnp
loopne
daa
shrl
or
dec
scas
es
mov
sahf
out
loop
pop
push
pop
mov
movsl
test
fldpi
into
pop
lock
inc
xchg
insb
adc
push
cmp
leave
xchg
test
repz
mov
inc
call
sbb
lods
out
fldt
int
dec
icebp
or
mov
lcall
adc
jecxz
and
inc
sub
addl
ficompl
int3
push
stos
or
cmp
icebp
scas
fs
pop
sbb
ds
pop
mov
mov
push
xchg
loop
repnz
fcoms
test
sbb
fidivrs
push
int3
nop
sahf
fsubrs
stos
jmp
test
mov
adc
dec
jecxz
je
insb
inc
fimuls
pop
xchg
push
rcrl
insb
cmp
xor
gs
dec
mov
or
mov
js
xorl
ret
icebp
fisubs
dec
int3
repnz
or
adc
mov
sbb
popf
inc
ret
mov
inc
loop
pop
lds
sbbb
push
push
mov
sub
push
and
fistpll
imul
aaa
rorl
lea
cmp
push
insb
out
ret
pop
in
cltd
push
insb
lea
mov
xchg
popa
adc
insb
dec
fucomip
mov
jp
gs
negl
in
stos
test
xchg
push
insl
in
push
adc
int
pop
outsl
repz
cmp
imul
add
jns
aad
imul
ret
fimuls
xchg
lret
pop
push
cmp
gs
add
lcall
test
call
mov
insb
loope
push
repnz
pusha
xchg
gs
dec
sub
dec
cmc
mov
or
popa
jp
cmpsl
xlat
pushf
shl
insb
pop
ds
push
pop
fsubrs
ljmp
inc
les
js
sbb
push
bound
xor
ja
gs
cld
mov
mov
insb
out
fistpll
insb
es
add
insb
and
and
das
cmpsb
inc
int
jbe
loop
xchg
cmp
push
mov
leave
insb
shr
call
insb
shl
sbb
xchg
or
bound
jg
sub
adc
divb
jge
sbb
jbe
xor
and
sub
xchg
mov
pop
hlt
and
frstor
jnp
imul
and
cmp
repz
xchg
cltd
dec
lcall
mov
insb
xchg
ds
je
ss
outsl
int
jnp
mov
imul
or
das
mov
insb
xlat
xor
mov
out
push
mov
dec
xchg
sbb
stos
outsb
xchg
imul
insl
or
dec
mov
cltd
jmp
push
repnz
sbb
fdivs
and
lret
lods
jo
fwait
jl
add
push
ss
pop
xor
in
or
sbb
loope
in
mov
sub
cs
sbb
test
je,pt
insb
push
pop
sti
mov
insb
cwtl
mov
cltd
shrb
sub
popa
mov
sti
les
pop
test
pop
insb
test
rcrb
out
sub
sbb
adc
xor
insb
dec
add
iret
loop
push
and
xor
push
inc
pushf
addr16
mov
enter
into
insb
xchg
gs
cmp
mov
inc
dec
js
shll
fisubrs
dec
xchg
pushf
pop
mov
in
inc
mov
imul
fisttpll
sti
adc
mov
in
mov
enter
xlat
xchg
pop
adc
insb
arpl
xchg
cmpl
adc
mov
test
add
mov
xchg
inc
add
in
clc
push
jae
sub
lea
adc
insb
pop
push
outsb
insb
adc
xor
sarl
cmp
fdivr
rcrl
shlb
repnz
ss
cmp
orl
test
dec
mov
lea
scas
outsl
in
inc
or
stos
addr16
mov
sub
dec
jnp
sub
push
insb
sub
in
cmpsb
inc
push
xor
lcall
cmp
sub
test
jp
imul
in
insb
mov
xchg
insb
pop
mov
dec
jle
cmpsb
cmpsl
jnp
mov
xchg
sbb
insb
mov
mov
mov
push
xchg
lock
iret
cmpsb
and
lret
cmc
ds
adc
add
sbb
jno
insl
inc
dec
test
add
in
imul
imul
fildll
aad
add
sbb
sub
rclb
pusha
insb
jne
and
and
daa
mov
aam
stos
lods
lds
jno
stc
lods
and
mov
cli
bound
dec
add
in
aaa
mov
push
sahf
addr16
int3
in
insb
push
jns
and
jge
pop
data16
mov
in
insb
enter
inc
or
lods
test
and
inc
pop
cmp
mov
pop
in
jno
and
mov
mov
mov
inc
xor
mov
insb
sub
shrl
xchg
push
loope
mov
cs
add
pop
imul
insb
xchg
iret
push
movsl
fisubrl
and
hlt
insb
inc
outsl
mov
push
insb
mov
test
or
add
imul
insb
outsl
xor
jle
cmpsb
mov
jmp
mov
or
inc
insb
lock
pop
in
add
mov
pop
gs
rcll
faddl
insb
shrb
push
adc
cmp
or
imul
xor
cmp
xchg
imul
or
mov
adcb
fstpl
nop
pop
cmc
jbe
pop
lods
lret
aam
dec
inc
dec
inc
dec
xchg
jae
pop
loop
pop
testb
push
dec
push
cmp
jmp
rcrl
mov
adc
popa
lods
call
iret
or
insb
push
icebp
dec
fldcw
in
jmp
sub
xchg
adc
dec
jle
adc
xor
addr16
cmpsl
mov
inc
pop
push
fmull
imul
mov
pop
or
insb
mov
ret
jno
push
sti
adc
lods
mov
das
insb
mov
push
xlat
push
insb
push
jns
int3
iret
mov
insb
sbb
lock
stos
cmp
clc
push
movl
cmpsb
or
xchg
addr16
lods
mov
scas
sbb
loopne
aam
insb
test
iret
jl
inc
pop
jns
pop
and
fistpl
in
pop
hlt
movsl
stc
cmpsl
insb
dec
cmpb
addr16
ds
add
pop
mov
cmp
dec
hlt
inc
repnz
or
xor
insl
insb
mov
fldcw
insb
dec
lret
rcrl
push
mov
pop
insb
and
mov
mov
ljmp
jg
adc
lds
lea
out
imul
sti
out
js
inc
sub
movsb
adc
fs
sbb
jge
xor
decl
mov
mov
pop
and
mov
adc
mov
insb
ja
scas
or
loopne
shrl
pop
and
mov
insb
cwtl
mov
mov
popa
incb
sub
mov
icebp
popa
sahf
fidivl
jge
push
insb
or
nop
pop
out
mov
insb
jb
sbb
push
sti
shrl
stos
stc
insb
nop
push
fnstenv
pop
imul
sbb
test
jl
jle
ret
insb
lcall
inc
insb
xor
in
insb
dec
and
mov
mov
pop
mov
lret
mov
dec
or
jecxz
repnz
insb
stc
roll
sub
mov
and
and
inc
jo
popf
rcl
mov
bound
add
jl
popf
mov
aas
lods
sub
cmp
scas
pop
ret
aam
out
ss
lds
decl
fdivs
insb
push
fldt
cwtl
adc
cmp
insb
mov
arpl
lcall
mov
cmp
cmp
movsb
xchg
repnz
icebp
insl
or
pop
mov
sub
mov
pop
sub
xchg
mov
imul
sti
adc
dec
lcall
js
cwtl
insb
push
in
sarb
imul
scas
mov
test
add
and
ret
mov
jno
cmpsb
setae
imul
mov
mov
loop
imul
je
add
lahf
out
daa
insb
repz
sarl
scas
fldt
insb
xchg
call
js
jmp
in
lret
test
bound
jg
adc
insb
int
pop
insl
sub
lock
data16
gs
sahf
sbb
inc
sbb
mov
es
shrl
jl
mov
subb
dec
addr16
jmp
xchg
inc
insb
ret
faddp
pop
movsl
dec
insb
ss
imul
mov
sbb
adc
jae
cmp
sbb
in
arpl
add
subb
xchg
xchg
and
in
mov
insb
mov
enter
push
mov
jge
test
jae
cmp
ret
cld
call
imul
pop
in
in
filds
adc
mov
cmp
xor
outsl
arpl
gs
cmp
data16
shrl
stos
mov
xchg
lods
insb
push
dec
dec
cmp
js
test
enter
pop
add
dec
jle
mov
jbe
mov
sti
insb
test
out
pop
pushf
sahf
imul
inc
inc
jns
in
sbb
xor
xchg
mov
jg
pop
jnp
in
insb
push
push
mov
pop
mov
insb
xchg
fucomp
int
sbb
bound
gs
addr16
cmp
inc
dec
insb
cmpsl
adc
pop
xor
push
jae
xchg
add
arpl
jmp
xor
mov
mov
pop
xor
hlt
insl
jb
dec
jbe
jl
in
push
in
add
les
leave
mov
xor
mov
adc
xchg
adc
mov
and
fisubrl
cmp
lds
push
mov
int
or
mov
imul
in
cs
gs
push
lcall
sub
loope
mov
cld
xor
notb
into
mov
dec
imul
insb
ret
mov
insb
jne
mov
adc
insb
movsl
jle
jno
inc
mov
and
les
add
fsubr
xor
sti
subb
mov
aaa
xor
insl
inc
in
lahf
xchg
fwait
ljmp
inc
je
add
dec
sbb
popf
cwtl
xor
cs
or
mov
push
test
faddl
dec
xchg
jl
jno
ja
add
inc
cwtl
cli
jp
adc
addr16
gs
push
add
scas
or
loope
sbbl
into
in
dec
push
and
popl
push
movl
imul
inc
mov
dec
jo
insb
aaa
pop
pop
adc
imul
cmp
dec
mov
insb
add
je
cli
or
xor
dec
repz
into
or
and
sub
xchg
push
int
outsb
insb
mov
mov
cmpb
or
jnp
and
cmp
add
aam
mov
mov
push
push
movl
outsb
add
adc
data16
js
ret
jmp
push
mov
mov
insb
inc
sub
pop
scas
imul
insb
sbb
fbld
cmp
mov
addr16
leave
mov
cmpb
or
mov
mov
pop
testb
jle
mov
cmp
dec
jbe
or
xchg
nop
gs
ja
sbb
inc
adc
mov
lods
repz
xor
repnz
pop
jnp
dec
cmc
mov
insb
mov
adc
lret
dec
shr
stos
insb
testb
lock
mov
xor
dec
sahf
or
fdiv
test
mov
repnz
arpl
js
inc
sbb
jnp
cltd
imul
mov
add
scas
xor
mov
xor
and
mov
pop
jecxz
xor
dec
and
sbb
ret
outsb
out
sub
lahf
or
cs
mov
rorl
lcall
lds
push
test
mov
stos
jo
jae
adcb
adc
dec
dec
push
orl
pop
push
mov
out
insb
sub
std
mov
inc
mov
insb
es
out
adcl
push
imul
jno
imul
popf
outsl
mov
inc
push
adc
stos
imul
jb
or
fldenv
dec
rcr
in
adcl
inc
inc
dec
in
push
fmulp
cmp
jns
lock
lods
pop
mov
repnz
js
lea
jb
sub
popa
aam
push
cmp
insb
lds
mov
insb
fidivrs
scas
pop
hlt
pop
imul
xor
add
in
or
push
lock
mov
pop
pop
mov
test
ljmp
cmc
inc
fbstp
lret
movsl
cli
and
fnstenv
and
insb
mov
in
or
adc
shr
loope
cmp
sahf
outsb
inc
aam
leave
push
mov
or
xlat
mov
inc
cmc
pop
pop
add
jbe
sub
mov
gs
jle
pop
sub
in
cmp
sub
insb
imul
mov
cwtl
lahf
sti
mov
sbb
iret
sub
dec
xor
xlat
and
gs
dec
lahf
movsl
pop
rorb
test
dec
ja
mov
in
mov
xchg
sub
pop
call
int
add
insb
pushw
lds
push
jecxz
insb
push
call
cmp
insb
jae
or
jb
push
xor
sbb
in
loopne
fwait
sbb
inc
pop
sarb
nop
mov
mov
sarb
insb
stos
std
sarl
rclb
pop
clc
mov
imul
and
insb
xchg
jb
insb
sbb
xchg
sbb
fsubrs
in
in
ret
insb
xlat
nop
mov
sub
imul
lods
mov
shrb
insb
xor
cli
push
fisubrs
insb
dec
imul
out
lret
cmp
das
sbb
int3
imul
lahf
lds
int3
int
or
test
jmp
call
addl
add
imul
mov
mov
shl
js
jns
test
mov
lahf
sub
dec
insb
inc
xor
mov
dec
in
dec
insb
sbb
push
push
mov
movsb
out
mov
mov
xchg
and
jo
dec
mov
or
pop
dec
in
das
int3
mov
inc
mov
ret
cmpl
movsl
enter
xchg
repnz
insb
in
test
pop
das
push
repnz
xor
imul
in
lods
add
ds
arpl
mov
insb
dec
adc
lock
movl
adc
mov
imul
fdivl
scas
push
xorl
jne
lds
insb
push
or
ljmp
outsl
inc
bound
ficomps
dec
out
scas
push
mov
out
insb
aas
mov
inc
clc
xchg
loop
cwtl
js
xor
inc
leave
inc
rcll
fldt
ret
in
pop
sbb
int
mov
or
insb
out
jo
addl
sahf
inc
mov
hlt
push
lods
cwtl
add
jmp
xchg
push
dec
daa
push
lods
push
xorl
sti
test
sbb
push
addr16
and
cmpsb
imul
insb
and
and
insb
xchg
mov
fsub
insb
stc
jne
in
mov
jmp
push
or
test
push
jnp
imul
out
pop
fisubl
dec
jbe
fildll
pop
push
nop
js
test
imul
jns
clc
sbb
loope
add
inc
movsl
jmp
enter
sbb
aam
stos
lods
push
fs
sbb
mov
inc
push
fisttpll
out
pop
jb
insb
les
in
sbb
and
int
movsb
push
inc
mov
insb
push
xchg
push
aaa
mov
xchg
sbb
sub
pushf
sub
ja
xor
in
or
mov
imul
mov
inc
jl
lea
insb
int
sub
push
adc
jmp
dec
xor
test
pop
pop
inc
lret
or
xchg
insb
push
out
lds
jo
imul
movsl
mov
pop
pop
popa
stos
xor
mov
fldt
dec
mov
adc
insl
popa
cwtl
sub
aad
arpl
andb
inc
imul
mov
test
sub
sahf
insb
inc
pop
mov
push
sub
insb
mull
pop
sub
fldenv
rcr
fildl
insb
out
jle
mov
and
scas
imul
dec
xchg
sbb
pushf
xchg
xchg
insb
xchg
xor
xor
cmp
inc
dec
add
dec
sbb
popf
pop
xchg
sbb
xor
mov
cmp
xor
insb
bound
ret
push
in
pop
lods
xor
and
dec
or
push
mov
inc
or
cli
sbb
hlt
scas
cmp
ljmp
pop
sub
sbb
cmp
xor
inc
in
push
sbb
and
lret
and
sub
dec
pop
dec
and
pop
jl
mov
stc
xlat
imul
jns
push
ss
in
je
jecxz
leave
scas
notb
push
out
sub
push
mov
mov
popa
insl
dec
sbb
pop
outsl
out
enter
insb
inc
add
or
push
insb
outsb
stc
sbb
into
leave
xor
or
xchg
je
movsl
insb
mov
adc
fcompl
bound
jnp
fsts
push
ret
ljmp
adc
sub
push
ret
sub
cmpsl
adc
lods
mov
xlat
ficomps
mov
insb
pop
pusha
xchg
and
xor
or
adc
pop
lahf
push
inc
fmull
iret
and
jb
or
loope
xor
cmp
sub
push
xchg
mov
pop
lock
jp
dec
pop
mov
push
adc
ret
imul
push
and
sub
jbe
lods
call
shll
scas
lcall
pusha
mov
pop
in
push
xchg
iret
mov
insb
push
aas
add
fmul
repnz
je
insb
aam
int
in
mov
pusha
inc
sbb
addr16
sub
idivl
das
faddl
jb
sub
xor
xchg
je
insb
inc
outsb
in
push
jns
lods
insb
iret
jae
and
imul
orl
sti
pop
jbe
dec
lods
fcompl
dec
pop
arpl
stos
mov
sub
in
push
gs
daa
cltd
jl
lods
test
fdivr
pop
jge
adc
int3
push
dec
lock
pop
insb
cmpsb
ja
xor
sahf
cmc
das
imul
mov
hlt
insb
es
addr16
bound
or
pop
test
mov
adc
push
mov
subl
mov
mov
cmpsl
lods
insl
test
inc
cwtl
push
xor
loope
into
cmc
pop
jg
dec
dec
push
xchg
fstp
insb
sbb
ds
jle
insb
ret
ret
lcall
cmp
push
lret
mov
insb
xchg
scas
and
divb
cld
add
mov
insb
fadd
or
adc
leave
and
mov
imul
adc
push
push
lods
fistps
aas
test
enter
iret
insl
push
stos
insb
lods
mov
jecxz
rolb
jae
hlt
push
push
imul
mov
dec
jl
and
pop
test
popf
call
roll
cmp
mov
cmp
scas
insb
cmp
sbb
pop
imul
insb
fwait
out
mov
mov
jbe
insb
leave
clc
mov
shlb
pushf
adc
hlt
imul
dec
or
cwtl
push
sbb
insb
dec
leave
ds
pop
jmp
in
xor
femms
push
inc
insb
or
mov
insb
mov
mov
xor
push
jmp
jb
stc
rorl
cmp
insb
adc
outsl
aam
repnz
addr16
dec
sbb
je
mul
pop
notl
and
out
lods
sbb
lret
loopne
xchg
in
fs
repz
push
adc
jae
rorb
fisubrs
int
faddl
insb
pusha
rorl
loop
sarl
push
lock
push
cltd
mov
inc
fs
cmp
fwait
mov
out
pop
fdivrp
in
and
in
pop
loope
mov
lds
sub
lods
adc
lods
clc
sbb
jae
addr16
js
mov
pusha
push
bound
mov
push
mov
popf
insb
cmp
inc
jge,pn
xchg
xor
jae
sub
jmp
pop
mov
mov
js
test
pusha
xchg
cmp
jge
jns
lods
in
out
xor
xchg
or
nop
xor
jo
ds
lea
out
cmp
pop
mov
pop
insb
push
or
nop
fldenv
shr
inc
adc
ss
in
adc
sub
cld
fnstsw
dec
divl
mov
push
outsb
call
ljmp
xchg
in
pushf
insl
sbb
imul
orb
xchg
dec
iret
lods
mov
in
push
sub
pop
dec
pusha
or
pop
stos
cltd
testl
cmc
xor
pop
std
mov
add
out
mov
ja
add
push
xchg
int
icebp
iret
ljmp
pop
pop
mov
mov
or
js
test
jb
in
xor
push
cmp
cmp
mov
and
dec
loope
jb
mov
iret
les
test
dec
xchg
in
dec
in
or
jge
pop
imul
fdivr
je
insb
xchg
mov
inc
insb
in
xlat
shlb
fidivrs
insb
lods
mov
sub
insb
push
shll
addr16
add
cs
jmp
insb
mov
xor
call
jns
mov
imul
cs
mov
sub
ds
add
cmpsl
ret
in
lret
sbb
sbb
test
adc
xchg
jmp
add
jo
cmp
mov
sbb
insb
stc
adc
push
inc
lcall
push
mov
push
insb
jge
into
pop
insl
repz
clc
mov
push
int3
shrb
pop
in
ss
insb
xor
push
xchg
lret
rolb
ret
mov
xchg
pushf
pop
pop
sub
or
jns
inc
scas
nop
ss
sbb
insb
xchg
dec
pop
ds
dec
les
test
jo
insb
fdivrl
arpl
ror
sub
mov
xchg
stos
pop
mov
mov
aad
bound
push
xchg
rcrb
in
fsubrl
movsb
inc
cltd
data16
out
arpl
inc
add
insb
cwtl
pavgw
imul
pop
push
enter
xchg
popa
cld
ljmp
js
lea
ss
pop
fimuls
sub
or
pop
pop
jne
mov
testb
pop
dec
and
popf
inc
insb
pop
mov
add
pop
jmp
dec
movsb
mov
pop
lock
mov
insb
addr16
dec
push
test
out
mov
push
add
xchg
jecxz
dec
idivb
scas
push
dec
ror
push
push
ud1
test
test
insb
lahf
mov
jecxz
loope
insb
or
ja
jbe
jmp
out
pop
mov
call
push
push
or
imul
xor
cmp
cmpsl
jg
add
insb
or
gs
fs
movsl
shl
dec
jo
cltd
fadd
icebp
in
packuswb
cmp
insb
ja
pop
pop
jge
fldenv
xchg
sub
scas
jg
insb
add
or
je
mov
jb
insb
test
xchg
and
push
or
imulb
insb
push
fidivl
iret
cmp
mov
and
sti
std
jns
adc
adc
lret
cs
mov
int
nop
sbb
jae
mov
inc
in
xor
xchg
in
mov
cmpsl
pop
sub
add
jmp
jecxz
adc
jmp
push
scas
dec
cmp
sbb
enter
jge
insb
xor
rorb
rcl
insb
cmp
sbb
clc
sub
xor
sub
mov
insb
mov
dec
mov
insb
pop
xorb
negl
ffree
xor
pop
or
fsub
out
mov
xchg
icebp
push
loopne
iret
xchg
sbbb
mov
dec
fidivl
pop
fisubrl
lods
jnp
scas
scas
or
cld
mov
sub
or
sbb
andl
pushf
stc
cwtl
insb
jae
add
xchg
insb
xor
gs
scas
je
shrl
loop
dec
cmp
pop
int3
mov
fidivs
push
dec
pop
lods
push
dec
out
pushf
mov
int3
rorb
lcall
ds
enter
pop
in
ret
xchg
dec
insb
jae
ljmp
jp
mov
jb
test
xchg
out
insb
adc
mov
popf
insb
mov
aas
mov
insb
add
cmp
ss
push
pushf
ret
fsubrl
js
subl
insb
fistpll
inc
data16
adc
insb
test
repnz
xor
cmp
fsubrs
push
enter
sarl
out
mov
mov
outsb
xor
dec
cmp
or
rcll
aad
mov
or
add
arpl
cmp
addr16
sub
push
xor
or
pop
fcoml
adc
inc
pop
insb
or
das
lds
sub
xchg
mov
mov
loope
lods
lods
test
fldt
sbb
cld
stc
stos
insb
jg
jle
test
in
sbb
dec
push
push
lret
dec
insb
dec
push
add
insb
fs
inc
test
xchg
insb
lcall
ds
cld
mov
push
sub
add
ret
mov
mov
imul
in
ljmp
jns
clc
jg
and
and
jl
jnp
sub
imul
sub
sub
fs
mov
mov
gs
sbb
cmpsl
or
inc
arpl
notb
jecxz
pop
xor
push
fildll
clc
jno
dec
jl
pop
int3
loopne
push
pop
jae
sbb
in
into
sahf
push
lahf
aas
divb
in
jae
negl
pop
mov
cmp
sbb
push
lds
jge
mov
sbb
addr16
aam
lea
push
popf
movsl
insb
out
in
pop
dec
out
loope
call
aad
icebp
xchg
es
lcall
sbb
int3
gs
out
adc
xor
test
sub
mov
mov
inc
sub
lock
movl
fidivs
movsb
ljmp
dec
xor
jnp
pop
outsl
pop
mov
fstpt
sti
or
add
ficompl
adc
addr16
loop
movsl
push
outsb
out
pushf
pop
inc
daa
test
fmul
icebp
dec
ret
lcall
insb
jmp
and
insb
push
adc
in
cmp
xchg
mov
push
rcrb
mov
mov
test
repnz
insb
out
mov
cmp
add
jp
xor
aaa
das
scas
imul
mov
mov
insb
sbb
ss
add
nop
push
insb
mov
sbb
test
loop
jle
lret
insb
inc
ljmp
adc
imul
cld
loop
inc
xorb
jns
cmpb
lods
inc
pop
or
push
jne
push
out
sub
sbb
xchg
scas
mov
push
sahf
insb
sub
mov
mov
mov
insb
cmpsb
test
arpl
push
xchg
arpl
insb
shrb
cmpsl
or
mov
cmp
inc
sti
stos
or
dec
add
ljmp
mov
rclb
insb
stos
dec
test
insb
push
iret
movsl
pop
fwait
bound
outsl
push
scas
out
pop
insb
xchg
aam
mov
imulb
xchg
in
sbb
aam
insb
mov
es
jg
pop
cmpsl
insb
lock
test
cmp
mov
repnz
mov
cld
jb
sarl
jo
push
insb
mov
mov
dec
insb
jmp
mov
sahf
and
inc
aas
push
iret
xlat
push
xchg
push
imul
jle
xchg
shrl
fimull
insb
and
call
insb
jns
mov
xor
cmp
pop
xor
test
jl
arpl
mov
add
mov
in
imul
pop
popa
neg
enter
fnsave
test
je
insb
add
orb
les
insb
and
addr16
pusha
push
mov
inc
insb
pop
flds
xchg
aad
jae
mov
add
and
and
cld
or
fsubs
dec
scas
enter
add
imul
mov
jnp
mov
loopne
xor
fadd
cwtl
jmp
je
mov
pop
xor
xchg
insb
push
ljmp
imul
lret
jl
mov
imul
mov
cmpsb
mov
daa
pop
std
pop
out
jo
insb
mov
sbb
or
cmp
push
insb
lds
stos
insb
ds
jo
jge
outsb
gs
mov
pop
cmp
sub
leave
insb
sbb
pushf
xchg
pop
ds
fdivl
add
dec
sbb
imul
jge
jo
lahf
adc
dec
insb
fbld
push
insb
jo
inc
xchg
inc
stc
push
cmp
inc
loopne
into
sbb
cmpsb
add
fs
push
lock
insl
scas
or
stos
jle
sbb
xchg
test
xlat
mov
cli
je
daa
dec
pushf
outsl
outsl
cmp
jle
add
jo
es
imul
addr16
test
add
imul
addl
push
fistps
insb
dec
sahf
sub
lods
and
mov
fsts
xchg
insb
lds
fs
gs
add
loop
enter
insb
je
cmp
pop
and
insb
setbe
outsl
aam
sbb
insb
mov
sbb
pop
popf
jns
cwtl
jmp
mov
sbb
mov
mov
push
adc
ljmp
xor
out
test
sbb
outsb
dec
insb
xchg
jl
add
mov
in
pushf
push
mov
sbb
out
fsubrl
or
cmp
mov
out
jns
stc
jmp
cmp
mov
fcoml
imulb
sbb
add
iret
insb
cs
xchg
ja
flds
insb
test
mov
push
sti
sti
insb
shll
pop
popf
inc
xchg
or
leave
hlt
add
movsl
push
mov
lea
xchg
mov
cltd
pop
insb
faddl
sbb
fbstp
ljmp
dec
and
insb
cmp
pushf
cmp
jae
out
sub
dec
fidivs
iret
gs
mov
and
mov
test
xor
dec
cld
jbe
cmp
insb
mov
int3
cmpsb
loopne
in
jno
lea
cmp
pop
jmp
mov
lock
shrl
jmp
jmp
insb
cmpsb
push
sbb
inc
in
ret
xor
sub
sub
cmovo
in
push
pop
dec
cli
jmp
out
insb
mov
jp
push
outsl
jnp
sub
lahf
xor
rclb
sub
movsl
xchg
or
xor
sub
stos
in
jp
gs
adc
out
mov
cltd
gs
dec
sbb
mov
iret
mov
jmp
gs
insb
mov
nop
push
insb
and
stos
cmp
andb
mov
cmp
imul
push
in
fstps
jl
and
cmp
cmpsb
loope
mov
xor
insb
sahf
shll
and
add
sub
jns
test
aaa
jecxz
and
insb
stos
sub
js
or
clc
inc
push
into
pop
xchg
ljmp
fwait
das
push
out
rolb
rcrb
sar
movsb
out
fiadds
rcr
xchg
imul
sbb
arpl
insb
stc
mov
xchg
dec
insb
adc
frstor
inc
jae
int
roll
popa
add
sbb
xchg
stos
imul
loop
mov
adc
fmull
sbb
dec
dec
shrl
and
test
jns
pusha
dec
cmp
lods
arpl
add
lahf
jbe
mov
inc
jb
xor
insb
push
sub
gs
out
adc
mov
sbb
in
push
fildll
jnp
xor
out
aas
into
or
loopne
sahf
insb
push
mov
cmpsl
aas
insb
les
mov
pop
jnp
pop
lods
lods
ret
loope
sbb
mov
mov
in
faddl
iret
gs
scas
mov
lods
bound
or
mov
insb
aas
pop
add
test
mov
xorps
es
add
sub
outsb
dec
ss
inc
or
cmp
insb
dec
imul
movsl
adc
xchg
adc
push
jne
loope
adc
mov
outsb
xor
jae
inc
out
jge
pop
cmpb
lods
arpl
sub
sub
or
sahf
pop
iret
sbb
jae
insb
mov
pop
push
jecxz
test
insb
add
imul
ficoml
pop
insb
push
dec
rclb
add
cmp
gs
pushf
sub
sarl
sti
jg
sub
js
lods
out
cmp
data16
jbe
lret
pop
repz
dec
lods
in
insb
xchg
out
sbb
or
mov
in
jg
nop
mov
jnp
packsswb
arpl
in
or
inc
cli
xchg
insb
movsb
inc
cmp
paddd
popf
out
ret
les
jo
arpl
icebp
outsl
sub
jae
mov
pop
mov
insb
and
data16
out
insb
sub
sti
push
pop
test
inc
fisubs
jae
sbb
dec
outsl
out
push
in
cmp
jecxz
popa
aaa
insb
xchg
sub
call
adc
insb
rcl
mov
xor
mov
pop
push
inc
fsubl
insb
data16
xor
jge
fstps
fwait
imul
xchg
rorb
insb
ds
and
jmp
lock
aam
inc
fnstsw
adc
dec
mov
mov
push
pop
cltd
jmp
insb
lea
mov
insl
dec
ljmp
pop
xlat
push
mov
xchg
xchg
pop
adc
jno
mov
movsl
mov
push
cwtl
add
xor
lret
inc
mov
push
add
jmp
jae
inc
dec
cmp
aam
scas
lods
ret
imul
in
jle
jbe
pushf
sbb
insl
outsb
mov
pop
sub
test
scas
push
movsb
dec
lods
push
popa
addr16
dec
jge
in
or
out
cmp
xor
adc
xor
insb
xor
adc
dec
xchg
rep
stos
cmp
push
cmp
pop
imul
dec
fnop
mov
bound
adc
lret
lret
popa
popa
leave
iret
sub
in
pop
cmpsl
scas
pop
push
out
or
in
inc
inc
js
dec
jo
jl
mov
divb
push
aaa
jp
insb
inc
xchg
std
jmp
lock
and
sbb
aam
push
ds
fs
in
adc
inc
jl
jl
mov
cmp
push
shrb
cli
jmp
cli
adcl
or
xchg
gs
lret
push
test
shlb
int
pushf
movsb
fsubrl
add
pop
xchg
sub
fdivs
fldenv
and
addr16
insb
sarb
mov
gs
inc
call
dec
js
sbb
les
push
stos
or
outsb
clc
pop
jg
ret
ror
xor
icebp
xchg
scas
sbb
insb
dec
insl
nop
jns
cmp
mov
aaa
xchg
jne,pt
jmp
movsb
andl
pop
clc
dec
imul
lea
sub
insl
aam
and
mov
stc
insb
out
inc
push
or
adc
insb
aaa
enter
cwtl
hlt
aam
or
xor
lock
test
xchg
pop
push
jle
push
std
xchg
cltd
jo
ja
push
mov
adc
subb
inc
or
xchg
xchg
cwtl
cmp
insb
daa
jo
bound
in
xor
insb
mov
fbld
push
iret
adc
insb
xor
cltd
das
fmulp
xor
xlat
orl
push
cmp
adcl
sbb
xor
shlb
push
add
sub
mov
iret
sbb
int
jl
pushfw
in
pop
in
pop
sub
mov
popf
incl
insb
fsub
xlat
xchg
ljmp
ds
pop
xor
in
movb
ljmp
xor
imul
xor
xor
push
imul
lods
in
pop
dec
cltd
clc
mov
insb
pop
decl
push
out
and
outsb
leave
cwtl
out
sub
les
loopne
insb
adc
insb
in
fwait
fldcw
inc
scas
sahf
insb
clc
and
fildll
gs
push
fwait
lods
sub
ror
dec
stc
das
imul
jp
rorl
xchg
inc
insb
in
cwtl
ss
repnz
in
jno
lcall
insb
bnd
jge
ss
insb
or
test
insb
in
int3
jbe
dec
out
popf
cmc
dec
xchg
jecxz
xlat
cmpsb
aam
pop
lcall
xor
andb
sahf
add
movsb
data16
mov
push
mov
sub
push
mov
mov
insb
addr16
cmp
mov
cmp
lods
movsl
lret
pop
sbb
jecxz
jp
leave
mull
add
dec
insb
stc
cwtl
jge
mov
fildl
subl
aad
adc
sbb
insb
jnp
and
cmpsl
stc
xchg
jmp
mov
out
push
mov
pop
cmp
out
loopne,pn
insb
aas
lcall
imul
std
cwtl
mov
insb
mov
insl
dec
dec
int3
dec
cmpsb
xor
push
xor
insb
rorl
cmpsl
insb
or
or
push
stc
fdiv
movsb
insb
mov
pop
or
insb
jle
int3
mov
pop
les
sub
loop
sub
inc
mov
insl
jl
loope
insb
ds
clc
out
xchg
sub
push
insb
and
sub
add
out
mov
imul
xchg
test
stc
and
sbb
or
sahf
dec
mov
adc
mov
ja
jle
jnp
or
xchg
out
dec
mov
aad
ret
insb
mov
inc
jmp
insb
sub
mov
cmp
lahf
and
dec
mov
inc
or
mov
hlt
sub
pop
mov
in
or
mov
add
push
add
pop
lods
push
cltd
mov
pop
gs
dec
insb
pop
fcompl
int
cmp
jl
insb
into
popf
dec
push
xchg
sub
add
fmull
xor
ss
fbld
add
cli
push
adc
outsl
mov
bswap
sbb
xchg
aas
rcrb
xchg
fstps
ds
in
or
push
cmp
lcall
sbb
add
hlt
and
test
push
cmpl
aam
ljmp
in
cli
adc
add
data16
sbbb
pop
out
xor
ljmp
add
push
jecxz
cmc
les
jns
adc
xchg
mov
popf
rep
cmp
jne
jnp
add
das
jp
stos
arpl
sbb
imul
mov
fwait
push
push
ret
mov
jb
insb
cld
cltd
push
imull
sarb
stc
pop
mov
fisubs
jg
sub
into
jne
inc
xor
insb
cmp
mov
mov
test
mov
xor
repnz
cmp
fists
test
repz
insb
jns
ja
cmpsb
out
mov
pusha
adc
pushf
add
cltd
dec
push
jbe
xor
shll
ret
insb
out
jl
ret
jmp
and
pop
pop
rolb
arpl
and
imul
scas
push
subl
add
sahf
mov
jnp
jne
mov
out
push
pop
sub
inc
mov
and
xchg
sbb
jnp
jl
sbb
xchg
imul
or
or
dec
aad
inc
cmpb
xlat
mov
cmp
adc
push
xor
cwtl
subb
jp
sbb
push
jbe
sbb
push
outsb
push
mov
ja
xchg
adc
fisubrl
sarl
or
xchg
or
fadds
dec
sbbb
mov
mov
mov
push
mov
insl
and
adc
sbb
inc
jno
ficoms
adc
cmpsb
imul
sahf
adc
jmp
outsb
scas
les
add
and
dec
imul
stos
add
fneni(8087
lret
shrd
insb
sahf
in
inc
mov
or
in
dec
mov
inc
dec
insb
jg
xchg
nop
sbb
insb
lahf
imul
inc
shr
nop
insb
push
es
jbe
insl
insb
jle
pop
add
js
xor
imul
sub
insb
mov
scas
pop
inc
inc
aam
insb
mov
jo
mov
jae
xor
insb
pusha
cmc
push
test
insb
pop
mov
imul
push
mov
insb
clc
test
test
aam
insb
xor
add
aad
push
push
insb
popf
in
sbb
into
das
sbb
and
les
insb
inc
xchg
sub
pop
or
inc
cmp
sahf
dec
add
sbb
and
sub
int3
mov
insb
mov
xchg
or
cwtl
cmpsl
insb
ja
xchg
out
sbb
fisttps
insb
dec
push
add
imul
iret
cmc
sbb
lods
mov
insb
scas
imul
push
repz
insb
call
aad
dec
imul
push
repnz
out
or
lahf
push
addr16
adc
test
cmpsl
iret
xchg
insb
pusha
sub
or
dec
test
ljmp
jnp
lahf
push
insb
test
sbb
jne,pn
add
pop
xor
mov
dec
mov
in
push
xor
add
push
mov
stos
sub
adc
cld
cmp
jns
lods
xor
jo
sub
cmc
test
cmpsl
cmp
dec
cld
xchg
data16
sub
cmp
popf
sub
dec
sbb
leave
pop
sbb
hlt
xchg
sub
or
inc
repnz
pop
or
or
push
in
jne
aaa
jne
ss
in
insb
out
xor
add
mov
add
or
out
insb
daa
mov
jle
imul
loopne
mov
leave
jo
dec
pop
test
cmpsl
or
jge
mov
add
insb
xchg
dec
mov
jp
in
sbb
lret
fwait
gs
outsl
nop
lret
jg
adc
je
push
cmp
jns
xadd
insb
mov
push
push
imul
push
lcall
test
or
adc
call
xor
mov
insb
movsl
sbb
lret
dec
inc
aas
mov
and
add
insb
lret
into
sarl
sbb
int
jl
outsl
jle
insb
push
ss
dec
ret
fs
dec
imul
add
jnp
insb
stc
and
ds
out
insb
inc
mov
mov
subb
mov
sahf
mov
imul
lock
mov
mov
cmp
cmp
lds
cmc
dec
aam
pop
fwait
sub
adc
stc
sbb
insb
inc
and
jnp
dec
push
pop
das
push
cmp
or
sub
clc
jge
insb
adc
push
insb
insl
push
loop
sbb
out
insb
lds
inc
inc
icebp
das
mov
jl
push
dec
ja
mov
push
sub
xchg
insb
idiv
js
lcall
adcl
pop
imul
gs
lods
xchg
dec
or
push
lds
or
test
xor
loope
sbb
js
insb
lods
sub
cmp
mov
jmp
sbb
incb
inc
fs
insb
inc
and
int
mov
push
cmp
insb
in
pop
outsl
pop
aad
inc
and
scas
and
pop
std
sbb
icebp
jl
int3
out
out
insb
test
and
fsts
cmp
cmpsl
and
lods
xor
insb
inc
stos
and
insb
lea
push
insb
add
ret
dec
shrb
jge
jbe
xor
jno
pusha
jecxz
aaa
adc
testl
sbb
out
mov
insb
sbb
dec
shrl
xchg
and
js
adc
movsb
outsb
xor
push
jmp
loope
mov
dec
dec
insb
or
mov
sub
sub
push
leave
sbb
scas
in
mov
fisubs
idivl
mov
outsb
xchg
fdivl
pop
nop
stc
jge,pn
mov
push
loopne
xlat
insb
out
dec
imul
test
sub
adc
dec
dec
cmc
shrb
adc
push
pop
insb
int3
stos
and
sub
aas
out
jle
je
insb
pop
push
sbb
xor
adc
jg
dec
js
dec
arpl
push
push
cld
or
add
or
cmp
je
add
push
outsl
pushf
mov
gs
fsubrl
fistpl
push
mulb
loopne
mov
jl
bound
andl
and
push
xor
pop
mov
cld
mov
pop
or
dec
movsl
inc
sti
out
mov
mov
arpl
fsubrl
daa
clc
xchg
sbb
dec
ret
insb
orl
cmc
es
ret
lods
xchg
push
or
lcall
add
xchg
push
nop
stos
insb
mov
and
and
mov
decl
and
rcrl
xchg
insb
add
push
ja
fs
cs
push
aam
or
jbe
jl
inc
xor
sub
mov
sub
imul
mov
sub
roll
insb
mov
cmpsl
outsl
sti
push
push
insl
notl
mov
insb
or
inc
cld
insb
mov
sbb
test
push
out
lods
push
cmp
sbb
int
pop
push
cmc
mov
mov
xlat
pop
insb
jl
out
xor
xchg
adc
test
pavgb
push
inc
sbb
cwtl
iret
xchg
les
test
popf
lods
cmp
insl
insb
std
sarl
insb
push
nop
ja
push
testb
fisubrl
sti
mov
insb
mov
add
stc
loope
es
adc
insb
popf
and
add
imul
pop
xorl
sub
cmp
mov
xchg
dec
test
outsl
enter
cmpsl
dec
pop
cmp
aam
mov
insb
ja
je
xor
pop
icebp
movsl
and
insb
inc
in
test
ljmp
xchg
jnp
pop
cld
add
jmp
scas
sub
xor
insb
bound
mov
insb
in
jmp
dec
insb
mov
scas
add
into
dec
adc
mov
pop
call
sub
or
int3
push
stos
nop
cltd
test
sarl
jo
call
ret
insb
and
test
je
adc
insb
addr16
into
mov
push
movsl
insb
pop
and
mov
int3
sub
push
icebp
call
and
mov
sbb
shrl
lret
mov
imul
cli
mov
cltd
dec
mov
cmpsl
outsb
aas
repnz
sub
in
push
sub
adc
mov
and
pop
jns
enter
pop
jp
repz
push
mov
jns
push
cmp
in
fldcw
cmp
pop
rcrb
sub
mov
inc
int
das
adc
int
or
mov
lods
mov
addb
arpl
test
inc
insb
mov
pop
mov
gs
jmp
test
insb
xor
insl
xor
inc
in
ret
pop
mov
fwait
bound
cmp
mov
in
or
cmp
out
ja
sahf
outsb
adc
imul
xchg
test
jns
insb
dec
cltd
or
xchg
es
cmp
and
cmp
jecxz
mov
imul
in
cmp
movsl
dec
test
lret
insb
cmc
ret
aad
push
sarl
frstor
push
popa
out
mov
enter
arpl
addr16
push
in
add
insb
fistpl
pop
fsubs
jbe
insb
int3
lods
pop
sub
xchg
xor
adc
imul
jl
sub
std
push
dec
stc
jecxz
and
cld
dec
jmp
test
sbbb
jmp
lahf
mov
inc
daa
decl
jae
or
negl
mov
insb
jecxz
and
jns
mov
xchg
jg
xor
shll
rclb
and
fisubrl
sbb
fiadds
insb
inc
jae
mov
sbb
ds
adc
das
rcr
pop
in
pop
xchg
into
pop
lahf
subl
push
nop
insb
roll
adc
cmp
sub
fs
lods
push
push
jl
pop
sub
outsl
jns
pushf
adc
das
push
enter
xor
mov
push
pop
int3
test
and
or
fadds
arpl
mov
xor
in
js
xor
in
mov
sbb
xchg
int3
or
shrb
bound
mov
test
or
lcall
jns
xchg
cs
jecxz
movaps
jno
sbb
sti
loope
and
mov
insl
insl
shl
in
insb
jg
test
lcall
mov
dec
in
imul
xor
push
xchg
imul
je
or
jmp
movl
notl
test
sarb
repz
dec
sbb
cwtl
mov
push
stos
mov
popf
dec
imul
insb
push
pop
xor
or
addr16
cmp
cli
stos
sub
shrb
jg
movsl
js
jge
dec
mov
cld
cmpb
call
or
shrb
insb
or
lods
push
lahf
push
or
ds
insb
jge
pop
imul
bound
dec
lea
subb
sub
lock
xchg
bound
or
fnstcw
insb
pushf
pop
push
cltd
stos
stos
into
mov
subb
in
jge
fwait
insb
push
lock
inc
jae
out
jp
and
xor
pusha
insb
popf
sbb
mov
repnz
adcb
xlat
nop
cmp
sub
test
sbbl
mov
or
lods
jns
pop
add
fnstenv
mov
dec
sub
in
dec
fs
insl
notl
xchg
jl
les
mov
test
adc
scas
clc
push
clc
and
or
mov
sti
out
xchg
add
in
dec
sbb
inc
adc
div
pop
mov
cwtl
aaa
jecxz
subb
push
add
loope
fcoms
adc
mov
adc
mov
inc
lods
pop
sbb
cmpsl
cmp
out
test
insb
adc
test
sbb
ret
and
mov
or
cmpsl
or
gs
inc
dec
adc
sbb
fmuls
daa
in
inc
jge
leave
imul
in
bound
pop
lods
xor
mov
push
sub
mov
test
scas
pop
neg
and
scas
sbb
pop
mov
cmp
cs
dec
mov
sub
adc
mov
mov
imull
imul
lods
andb
insb
cmp
cmc
mov
jno
jnp
cmp
cwtl
xor
inc
lcall
pop
imul
jl
aas
nop
pop
dec
jns
fistl
das
sbb
and
or
xlat
cs
shrb
sbb
imul
in
lods
shll
clc
cmp
mov
fs
push
arpl
out
or
popf
inc
imul
sub
pop
cmpsb
push
in
cmp
sahf
fwait
shr
outsl
mov
mov
daa
movsb
imul
xchg
jmp
lock
inc
ljmp
adc
lods
in
loopne
into
fisubl
xchg
and
arpl
lds
pop
dec
mov
pop
test
cmpsl
call
adc
gs
loope
sbb
jmp
insb
pop
mov
xor
fimull
sub
lahf
rcrb
rcrl
or
xor
movsb
in
insb
add
fldt
mov
and
out
sarb
dec
dec
outsl
insb
push
jp
jecxz
lods
pusha
lret
hlt
dec
insb
jge
int
icebp
pop
inc
xor
adc
jmp
insb
dec
push
ss
xor
gs
je
insb
ficomps
inc
xchg
xchg
or
out
insb
push
mov
mov
into
push
in
xchg
mov
adc
pushf
mov
cmpsl
sub
insb
aam
xorl
push
jl
or
mov
imul
mov
mov
mov
xor
add
pushf
lea
imul
mov
in
sbb
adc
fwait
cli
hlt
subl
insb
adc
add
gs
and
and
sub
pop
addl
add
jp
and
xchg
pop
std
aas
xor
cltd
test
mov
cmpsl
mov
push
inc
dec
sahf
mov
clc
shlb
sub
xchg
mov
repz
pop
inc
fs
imul
das
nop
pop
orb
fidivl
pop
push
loopne
jae
cwtl
insb
pop
xchg
add
pop
mov
movsb
mov
dec
push
arpl
not
lahf
insb
rcll
into
add
adc
sbb
roll
scas
adc
xchg
pop
aaa
push
push
pop
dec
ja
add
sbb
mov
outsl
lcall
insb
pop
add
hlt
push
aad
sbb
sti
in
push
insb
int
mov
pop
leave
das
cmp
insb
aam
ss
jbe
sbb
addr16
sub
ja
in
mov
fistps
or
pusha
and
push
aam
rolb
mov
sub
or
dec
insb
push
xchg
mov
leave
insb
ret
pop
enter
xchg
xchg
mov
imul
push
add
add
mov
movsl
push
aaa
lods
pop
mov
cmpsl
sbb
insb
pop
int3
dec
jmp
pop
subb
and
push
and
imul
push
jl
push
out
xchg
test
xchg
test
lret
loope
loopne
adc
or
mov
pop
xchg
lods
dec
in
cmp
lahf
mov
add
dec
push
enter
push
cmpsb
gs
push
int3
push
push
subb
ret
loopne
icebp
les
dec
add
xchg
insb
imul
out
jnp
xor
mov
pop
push
lods
add
xor
fadds
xlat
lret
in
xchg
iret
insb
out
lds
push
mov
or
in
dec
pop
shrl
lret
insl
push
mov
gs
loope
orb
dec
insb
xchg
add
fs
mov
insb
testl
cmc
xchg
push
ss
shll
push
xchg
sub
pop
insb
inc
fwait
and
jno
insb
daa
adc
sarl
cmpl
mov
insl
scas
in
mov
mov
cmpsb
bound
clc
or
sub
lahf
adc
jbe
jle
insb
pop
xchg
or
stc
xchg
adc
adc
mov
or
jb
imul
add
lret
insb
mov
fmull
movsb
pop
xor
mov
mov
mov
jbe
sbb
fstpl
in
xchg
aad
xchg
sub
out
rcl
inc
outsb
xor
and
in
int
insb
push
pop
jmp
inc
insb
icebp
pop
fbstp
popa
push
dec
inc
ret
fadds
xchg
hlt
add
ror
pusha
and
loope
in
fwait
loopne
mov
nop
pcmpeqd
mov
cmc
inc
loop
xchg
in
decl
imul
ret
jl
insb
sbb
das
sub
jge
movsl
insb
lds
cmpsl
sbb
hlt
pop
mov
mov
and
pop
mov
mov
es
mov
dec
jg
push
push
scas
sarl
sbb
movsl
popf
fidivs
lret
in
pop
int3
imul
adc
insb
xor
setb
lret
xor
cmp
add
add
arpl
sub
dec
xchg
add
adc
call
rorb
push
push
dec
repz
cmp
push
imul
lock
fildll
add
insb
jp
push
sbb
push
gs
popa
pop
iret
pop
ljmp
lock
mov
call
sub
pop
out
sub
adc
mov
sub
mov
repz
hlt
arpl
dec
mov
jp
mov
loopne
mov
jg
ret
cmp
stos
or
pop
pushf
out
test
mov
insb
adc
xchg
jbe
or
adc
inc
stos
dec
jo
pop
inc
inc
mov
insb
fidivs
outsl
mov
insb
lods
mov
outsb
enter
insb
inc
sti
dec
jl
push
jbe
jle
testb
dec
add
test
add
xor
sbb
xor
fsubrs
test
insb
dec
adc
push
insb
sbb
dec
add
cmp
out
mov
sbb
int
adc
cmpsl
push
cmp
jne
imul
imul
lods
addr16
xor
fwait
jmp
repnz
arpl
subb
js
lret
insb
pop
mov
loop
mulb
insb
loopne
shlb
xchg
out
pop
cmp
jb
cs
mov
adc
sub
push
negb
fwait
repz
insb
scas
push
dec
and
imul
xchg
jns
cmpsl
repz
insb
sbb
jae
adc
mov
pop
cmpsb
lock
sub
or
sbb
xchg
je
push
movsl
push
rcrb
inc
shll
inc
cmp
lret
jecxz
in
pop
jl
imul
insl
fstpl
sahf
xchg
rcrb
and
adc
ja
dec
in
push
mov
insb
mov
stos
pop
out
cmp
ds
aaa
sahf
mov
jmp
mov
imul
test
int3
aaa
jp
inc
adc
ds
xor
shrl
xchg
xlat
push
insb
mov
cmp
insb
test
in
xchg
dec
dec
dec
les
out
mov
dec
add
add
jns
mov
mov
insb
add
sub
dec
push
js
and
or
add
or
sub
sbb
imul
push
lods
sbb
cmp
ret
aas
jns
mov
mov
les
fadds
dec
mov
mov
repz
jg
mov
push
jmp
mov
pop
push
xchg
das
mov
or
insb
xchg
imul
push
insb
and
mov
push
les
push
jae
mov
mov
shlb
add
cli
std
insb
es
pop
lret
movsl
xchg
push
mov
in
or
sbb
and
arpl
mov
jge
enter
insb
ja,pn
orl
dec
pusha
jmp
or
inc
mov
jmp
or
adc
mov
jno
test
out
or
in
dec
adc
lock
push
inc
or
mov
jmp
adc
add
sub
jge
and
inc
imul
in
jmp
jo
or
testl
jmp
sbb
or
rolb
mov
adcl
aaa
adc
lock
mov
nop
test
pop
lods
and
jecxz
insb
not
jmp
js
jae
or
push
jnp
add
pop
sub
inc
in
xchg
test
scas
loope
hlt
mov
lahf
mov
das
and
fsubl
cmpb
mov
mov
inc
imul
inc
into
mov
lcall
lods
ret
ret
jno
jl
bound
dec
mov
loope
insb
and
pop
xor
call
mov
movsb
sahf
int
sbb
in
mov
loop
lahf
jp
insb
push
imul
loopne
enter
push
lcall
lods
daa
lods
into
pop
push
mov
sbbl
sti
jne
imul
fdivrl
ja
mov
movsl
in
icebp
aaa
repnz
xorl
sarb
push
es
lods
leave
hlt
int
or
lcall
fwait
pop
xchg
in
inc
cmpb
push
sbb
add
mov
sbb
push
pop
fnsave
insb
fs
adc
andl
insb
push
xor
mov
sub
icebp
push
sti
sbb
insb
test
repnz
sarb
in
fdivrl
shrb
stc
mov
sbb
dec
mov
repnz
lret
or
int3
popf
rcl
mov
insb
das
pop
and
std
xor
inc
and
cmp
imul
adc
xchg
insb
mov
addr16
insb
jb
xchg
cmpsb
inc
dec
fdivl
insb
movsb
pop
sbb
pop
imul
leave
mov
rorb
jmp
inc
es
mov
dec
or
dec
dec
lods
cs
insb
inc
rcll
dec
faddl
sub
or
push
mov
insb
ja
sbb
shlb
sbb
or
lcall
or
push
pusha
lods
mov
outsb
pushl
xor
mov
shrl
jbe
jge
leave
insb
call
lock
dec
stos
fwait
cmp
mov
xchg
inc
mov
outsl
lds
insb
fisttpll
lahf
sub
inc
repz
add
jecxz
gs
jp
cmpsb
imul
mov
insb
mov
pop
imul
call
mov
or
xor
add
insl
je
cltd
push
aam
cmc
push
icebp
aad
mov
int3
pop
inc
insb
add
scas
cli
insb
mov
dec
push
movsb
sbb
insb
push
sub
adc
mov
ficompl
sarb
mov
not
xlat
leave
imul
add
insb
xchg
enter
ret
push
push
insb
dec
pop
stos
mov
popa
adc
pop
sub
add
mov
insb
repnz
sbb
cs
repz
add
inc
xchg
mov
int
xchg
fsin
les
jmp
pop
and
pop
je
cmp
xchg
mov
sahf
das
insb
cmp
add
insb
push
stc
clc
sbb
insb
pop
jg
fistpl
xchg
insb
and
test
leave
mov
insb
or
mov
fmull
insl
mov
add
xchg
int
push
insb
push
push
mov
popa
sub
jmp
jl
rcrb
xor
ds
add
sub
mov
xchg
in
pushf
xchg
push
inc
clc
pop
inc
add
push
jbe
xchg
lods
in
addb
add
jnp
push
insb
es
bound
xchg
aad
insb
pop
lcall
insb
adc
add
sub
push
pusha
cmpsl
fs
sbb
int3
daa
xor
cs
lret
jmp
stos
and
out
movsb
or
out
stc
test
mov
js
dec
ret
mov
insb
push
inc
and
rcrb
mov
pop
push
js
pushf
sbb
lods
arpl
jl
mov
jnp
pop
ljmp
into
icebp
xchg
pop
mov
mov
dec
push
inc
cmp
add
mov
popa
sbb
out
pop
in
sar
in
xor
dec
stos
dec
fldlg2
mov
add
pop
insb
mov
mov
popf
insb
push
xlat
dec
xchg
insb
fstps
pop
inc
and
stos
enter
jg
insb
cmp
mov
pop
popf
shll
insb
aaa
daa
pop
and
dec
or
sub
bound
xchg
insb
int3
pop
shrb
insb
add
dec
jno
in
insb
popa
out
iret
inc
test
mov
pop
and
imul
mov
out
sub
cwtl
mov
mull
push
in
cmp
outsl
xchg
pop
cli
insb
nop
mov
dec
cmp
mov
sub
into
mov
sbb
or
ret
int
lock
insb
cwtl
push
sub
xor
sarl
gs
and
scas
nop
das
push
insb
and
out
sbb
inc
lods
add
out
lods
dec
aas
pusha
popf
dec
gs
or
mov
xchg
jns
shlb
xchg
aam
jecxz
insb
hlt
movsl
cmp
fwait
imul
pushf
popa
stc
repz
test
lods
pop
inc
jae
sbb
cmp
in
aam
insl
add
dec
insb
cli
mov
std
out
outsl
arpl
test
push
insb
cmp
mov
sbbb
jno
das
jl
cltd
imul
push
add
cmp
inc
fwait
ret
imull
pop
pushf
push
push
leave
insb
push
and
test
int
and
cmp
fnsetpm(287
jo
adc
lock
mov
call
loope
mov
popa
push
fucompp
test
outsb
mov
stc
add
mov
ljmp
mov
push
out
loop
cmp
jbe
insb
inc
cwtl
xchg
lret
sub
mov
test
inc
je
inc
sbb
adc
push
inc
stos
leave
hlt
inc
imul
mov
pop
inc
scas
mov
test
pop
and
mov
mov
jp
insb
stos
incb
enter
insl
pop
aaa
add
dec
pop
cmpsb
jae
insb
inc
mov
mov
bound
loop
insb
ds
in
icebp
or
jg
mov
loopne
cmp
cwtl
lcall
outsb
sar
insb
mov
sahf
inc
cmc
push
nop
or
insl
insb
cli
ljmp
pop
pop
sahf
dec
sub
mov
mov
mov
push
in
cli
test
inc
jae
insb
in
dec
adc
push
imul
xchg
cs
xchg
dec
cmpsl
cmp
jbe
adc
test
mov
fmuls
push
in
in
or
or
movsl
jge
gs
call
andl
loopne
js
sub
gs
arpl
rcrl
insb
inc
mov
cmc
xchg
aaa
cmpsb
lea
xchg
or
popa
cmp
xchg
out
iret
aas
sbb
in
xchg
and
data16
loope
jg
cmpsl
cmc
push
or
es
imul
add
popf
insb
loop
adc
stos
add
cmp
ljmp
jp
out
pushf
inc
push
inc
jle
arpl
push
cmp
push
addr16
out
fildll
mov
leave
sub
cmp
jnp
or
out
mov
jne,pt
insb
jbe
push
pop
das
nop
in
cs
cmp
insb
cmpl
xchg
and
xchg
sub
jle
push
mov
mov
insb
fbld
mov
negl
and
movsb
lock
pop
int3
imul
insb
in
mov
insb
flds
push
insb
xchg
push
fadd
mov
xchg
and
and
jmp
fcompl
jl
enter
add
jno
push
pop
pop
test
daa
push
jb
mov
add
add
jae
dec
lret
xor
in
imulb
cmpsl
popa
in
icebp
mov
out
repz
dec
xchg
js
sub
push
cmp
push
adc
shrl
rolb
push
call
or
pop
push
insb
popf
ss
daa
int3
mov
insb
sbb
int
insb
mov
xor
mov
in
adc
shrl
mov
cmpsb
insb
daa
push
mov
ljmp
call
xchg
push
sub
addr16
dec
stos
mov
cmp
ja
mov
cmp
leave
mov
inc
lods
pop
and
or
dec
test
insl
insb
cld
sbbl
ds
jb
mov
push
dec
insb
pop
dec
fnstsw
insb
in
movsl
movsb
addr16
push
insb
adc
sub
loope
xchg
imul
in
sahf
subl
addl
out
jo
insb
push
jecxz
push
fistpll
jb
inc
jne
in
rolb
or
subl
icebp
sub
rorl
addr16
aad
pop
pop
xchg
orl
insl
dec
test
sahf
xor
mov
mov
jae,pn
icebp
jbe
insb
and
test
push
inc
scas
lahf
xor
pop
push
add
inc
push
push
sbb
jno
push
ss
xor
insb
xor
insb
movsb
int
sbb
inc
add
je
into
shlb
cmc
popf
insb
push
stc
mov
mov
insb
mov
ret
jo
jne
lea
nop
stos
cltd
add
mov
mov
sbb
minps
dec
xor
sub
loopne
add
jge
mov
cli
push
aas
imul
mov
hlt
jecxz
jno
push
push
adc
xchg
insb
xchg
lea
loop
cltd
insb
iret
jno
or
stc
imul
in
sub
mov
arpl
mov
xchg
adc
mov
lcall
mov
insb
pop
imul
jne
addr16
in
cmp
shl
or
std
in
sbb
pop
gs
insb
andb
daa
icebp
dec
and
xchg
add
cmp
stos
or
jge
pop
int3
push
sbbl
xchg
sbb
dec
push
into
ljmp
insb
movsl
lock
inc
fidivrs
pop
nop
push
mov
in
cmp
js
pop
inc
cs
insb
or
arpl
and
insb
hlt
mov
mov
pop
movsb
or
add
mov
insb
mov
or
repz
lods
fstpt
or
stos
stos
fs
ds
lods
xor
pop
mov
push
insb
fucomip
jmp
lret
inc
and
and
sub
aaa
in
sub
shlb
xchg
or
loope
cwtl
push
stos
hlt
push
sbbb
imul
pop
rorb
xchg
mov
fcmovne
and
insb
and
ss
insb
sub
xchg
dec
xlat
adc
lret
pop
sbb
into
mov
xchg
push
in
fwait
insb
jne
test
popa
aad
insb
mov
or
dec
insb
incl
insb
sbb
test
and
insb
mov
cmp
sub
xchg
inc
mov
jg
cmp
cmp
pop
add
bound
sbbl
out
or
dec
pop
or
lret
shrl
dec
repnz
movsb
and
and
inc
test
pop
mov
loopne
stos
mov
cltd
jl
scas
hlt
outsb
or
aaa
daa
jne
out
jb
sub
cwtl
adc
imul
push
movsl
xchg
aaa
add
xchg
dec
xchg
pop
testl
movl
dec
lds
push
ss
insb
lahf
inc
add
in
lcall
cmp
mov
es
fstl
insb
cmpsl
push
fwait
cmp
add
dec
lret
divb
add
sti
fstpl
mov
add
mov
out
in
pop
sbb
es
mov
mov
mov
push
sub
xlat
jecxz
inc
mov
les
test
int3
xchg
sarb
jns
mov
mov
hlt
or
into
jno
sar
push
out
in
fisttpll
rorb
xchg
ljmp
insb
mov
xor
jecxz
insb
mov
jl
and
in
fistps
mov
ret
mov
data16
push
pop
insb
je
in
or
push
jae
insb
es
imul
int3
mov
mov
pop
sub
mov
test
fstps
adc
jl
insb
pop
pop
imul
mov
sti
lcall
push
xor
imul
dec
nop
add
aam
push
cli
xchg
addr16
in
inc
adc
aas
cld
stos
adc
mov
faddl
out
fwait
insb
pop
daa
pop
fimull
dec
and
insb
sub
arpl
and
jbe
or
in
or
xor
rcrb
in
add
bound
mov
xchg
gs
inc
mov
adc
push
dec
insb
mov
inc
icebp
adc
xchg
jl
mov
imul
test
cmc
sub
mov
insb
je
cmp
cs
stos
inc
and
sar
jb
int3
rcrl
mov
lods
push
sbb
push
fimuls
outsl
mov
jg
inc
rcl
adc
push
out
jae
pop
adc
shrb
mov
mov
and
insb
xchg
scas
jae
cmp
adc
aam
add
sub
clc
ret
push
push
int
dec
and
decb
in
mov
ljmp
xchg
inc
rolb
cmp
push
jnp
shrl
clc
sub
adc
jle
imul
inc
test
push
leave
sub
xor
mov
push
ret
push
push
jl
shl
fadd
insb
push
mov
testl
ja
dec
icebp
pusha
insb
push
xchg
dec
loope
loop
insb
bound
or
xchg
imul
mov
xlat
xchg
insb
push
shr
incl
and
pushf
cmp
fildll
sahf
inc
mov
jbe
insb
mov
xor
test
fnclex
xchg
insb
push
pop
shll
add
or
mov
xor
lahf
lret
repnz
mov
add
js
jo
insb
cmp
inc
pusha
dec
jo
pop
decl
jg
imul
or
push
insb
aaa
mov
xor
mov
ljmp
pop
xchg
add
mov
sahf
sbb
lahf
stos
insb
xor
push
js
andb
jns
out
in
add
mov
cmp
push
scas
insb
je
into
push
mov
mov
xchg
mov
std
lds
js
adc
daa
pcmpgtw
jle
jmp
das
jb
lods
call
inc
insb
sar
out
aad
pop
sti
imul
sub
je
insb
pop
movntq
shr
imul
or
and
insb
bound
adc
out
fisubl
push
lods
push
xchg
mov
push
xchg
imul
jb
lret
xlat
xchg
dec
inc
xor
sub
cmpsb
pop
push
push
por
jo
adc
filds
ja
push
gs
popa
mov
dec
xor
test
pop
cwtl
gs
xchg
cmp
push
mov
add
hlt
mov
adc
mov
cmpl
inc
sarl
out
xchg
imul
mov
sub
daa
inc
mov
jmp
or
mov
jbe,pn
pop
test
ret
and
arpl
daa
inc
cmp
push
rorl
adc
add
or
test
insb
icebp
add
cmpb
and
sbbl
adc
fwait
popf
or
sbb
insb
or
pop
imul
sbb
pop
dec
out
dec
lods
sub
sahf
pop
push
pop
test
fildll
test
pop
dec
sahf
shl
insb
icebp
enter
mov
pop
and
shrb
xchg
mov
jge
push
and
sbb
cli
jno
in
in
fldcw
or
test
ljmp
add
pop
shlb
insb
fimuls
popl
popf
pop
repnz
adc
ret
mov
cltd
shl
xchg
lods
test
outsb
dec
pop
sahf
mov
outsl
dec
sbb
insb
push
leave
loope
mov
pop
dec
xor
in
data16
jecxz
pop
out
sbb
inc
lock
mov
hlt
mov
clc
pop
pop
out
inc
sub
cld
ficoms
in
mov
insb
mov
adc
test
mov
pop
jbe
insb
adc
and
pop
loopne
dec
arpl
cmc
pop
ljmp
cmpsb
xchg
jl
insb
sti
jg
aaa
rcr
es
pop
sahf
push
or
and
pop
or
sub
add
outsl
jae
fsubs
push
xor
jle
in
mov
test
loop
imul
and
insb
test
arpl
add
insl
stos
fwait
mov
xlat
pop
movsl
addr16
cmp
mov
rcl
mov
je
inc
insb
cmp
push
xchg
xchg
jl
cmpsb
in
jns
push
hlt
push
insb
inc
push
push
xor
mov
mov
in
xchg
sbb
pop
insb
roll
dec
arpl
mov
jno
clc
jmp
mov
daa
insb
data16
xor
cmp
insb
rol
das
stos
xor
insb
repz
pop
call
std
push
xor
push
add
push
sub
pop
mov
lahf
jge
xchg
imul
test
push
mov
inc
sbb
insb
sbb
loopne
sub
test
lods
popf
rorb
xor
and
pop
inc
xor
mov
xor
in
jo
or
push
or
mov
cmp
flds
inc
adc
push
push
push
mov
test
jne
add
push
lods
daa
rorb
outsb
out
in
test
jge
iret
lcall
rcr
iret
aaa
mov
hlt
cmp
cltd
mov
push
lods
mov
inc
cmp
xchg
jnp
lea
insb
loope
xchg
imul
lds
test
hlt
xchg
repnz
fldcw
mov
aad
gs
in
xor
fstpt
insb
push
add
mov
insb
mov
xor
or
addr16
inc
jo
xchg
sbb
pop
arpl
or
xor
imul
and
rclb
je
stc
in
pusha
les
ret
cltd
xor
in
cmp
aam
and
ds
test
inc
mov
adc
jns
push
adc
cltd
lods
gs
mov
add
roll
inc
dec
insb
add
subb
mov
jnp
lods
inc
add
stos
push
popf
insb
ja
xchg
int
xchg
adc
xlat
dec
out
daa
jg
xor
push
cmp
cld
mov
and
pop
outsl
out
vcvttss2si
insb
flds
test
imul
incb
dec
inc
insb
push
mov
and
dec
ja
sub
jno
xlat
nop
insb
mov
xor
push
rcll
insb
popf
lds
push
add
lcall
lds
pop
nop
aaa
jmp
cmp
gs
icebp
lahf
iret
mov
sub
addr16
and
xchg
addl
sti
mov
fisubrl
cmc
mov
fs
pushf
sbb
xor
pusha
mov
arpl
and
mov
shrb
or
repnz
sbb
pop
xor
roll
imul
in
xchg
subb
leave
xchg
push
std
lods
jae
js
pop
shlb
in
mov
insb
add
stos
sub
jb
or
xchg
imul
push
sahf
pop
dec
mov
mov
pusha
pushf
lea
rcrb
xorl
ret
push
pop
add
icebp
push
dec
mov
outsl
insb
push
or
jae
jp
jne
insl
sbb
in
pop
jb
xor
in
sub
fsubrl
idivb
add
pop
dec
cmp
insb
repz
inc
jecxz
pop
push
fldcw
punpckhbw
rcr
jbe
push
or
loope
pop
inc
push
jecxz
and
test
jle
or
mov
movsb
add
lret
xchg
ljmp
push
mov
mov
lock
jmp
imul
push
or
orl
and
rcrb
mov
or
mov
mov
imul
and
fistps
and
or
mov
mov
je
mov
aas
insl
mov
push
test
lock
mov
push
shrl
sub
into
les
mov
sub
andl
in
in
dec
and
sbb
leave
orb
dec
push
leave
pop
push
jecxz
insb
ljmp
testl
xor
ss
inc
insb
lret
iret
add
mov
sbb
popa
push
and
mov
xchg
test
subl
enter
out
in
pop
loop
mov
cs
jp
rcrl
test
push
xchg
mov
lahf
pop
ret
insb
jp
fwait
xchg
xor
xchg
cmc
idivl
jmp
stos
lcall
cmp
scas
popf
jno
and
sbb
jne
mov
insb
lea
cwtl
and
xchg
pop
hlt
int
fwait
in
enter
dec
sti
insb
scas
cs
jp
pushf
push
rcrb
jb
insb
in
cli
int
jmp
dec
movsb
daa
shrb
sbb
adc
jecxz
sbb
stos
mov
int
add
sahf
pop
rcrl
mov
and
aas
add
cmp
xlat
push
fwait
and
movsb
sahf
into
push
and
adc
xor
lock
cmpsl
xor
push
pop
dec
dec
imul
or
sbb
or
call
insb
and
insb
rcr
pop
fstpt
cmpl
std
dec
or
cmp
dec
mov
clc
insb
jmp
jg
pop
and
repnz
cmpsb
mov
hlt
sbb
insb
pop
sub
out
xor
push
insb
cmp
dec
mov
inc
pop
ja
fmuls
pop
push
rcll
out
insb
lret
xchg
test
add
cmpl
inc
pop
push
sub
rolb
pop
sbb
inc
xor
pop
data16
and
pop
cmpsb
fidivs
jb
xor
cld
jle
enter
or
dec
push
cmp
jns
sbb
sub
jge
insb
cs
xor
and
filds
movsl
add
sub
adc
pop
insb
ljmp
insb
jle
pop
or
or
lds
stos
jmp
and
lock
xchg
aad
lahf
dec
mov
pop
outsb
jns
pop
insb
loopne
into
sbb
dec
and
rcr
test
repz
pop
jg
or
sub
mov
pop
dec
mov
clc
insb
jge
mov
sub
adc
pop
repz
push
xchg
loope
loope
adc
and
pop
pop
push
lret
mov
sbb
insb
test
clc
lcall
nop
das
insb
mov
cmpsb
dec
jae
inc
insb
or
sarl
aad
sub
mov
sar
insb
loopne
in
pop
inc
insb
cltd
mov
loope
insb
cmp
arpl
popf
pop
push
adc
shrb
shr
dec
lret
sub
in
mov
dec
mov
rol
call
iret
mov
add
dec
dec
sbb
sbb
repz
fcmovnu
loop
dec
in
xor
and
testb
daa
outsb
mov
push
lea
inc
xchg
xor
lods
and
xchg
jne
insb
stos
inc
push
aaa
pop
bound
jns
jl
clc
jb
pop
arpl
xor
insb
xchg
testb
iret
scas
insb
stos
into
mov
aam
insb
adc
mov
insb
xchg
test
pop
mov
jb
mov
mov
lock
out
mov
jl
dec
insb
enter
jae
and
insb
aam
adc
sahf
adc
scas
xor
shl
pop
dec
lds
repnz
xlat
mov
ja
fsubrp
xchg
adc
insb
lcall
dec
fnsave
stos
add
jl
insb
repnz
daa
jne
mov
mov
cmp
call
pop
sub
sbb
adc
xchg
insb
jb
and
xchg
cs
dec
fnsave
int3
pop
jbe
dec
insb
xchg
out
jp
push
jmp
cmp
add
mov
shl
push
mov
mov
adc
sub
inc
sub
leave
jmp
scas
sti
jb
out
ljmp
subl
xchg
fwait
inc
and
mov
icebp
loope
test
cwtl
xor
shrb
repnz
lret
insb
push
mov
xor
xchg
lcall
cld
dec
mov
fisttpl
adc
inc
jge
das
cli
enter
test
inc
jo
test
orl
in
add
popf
pop
xchg
sahf
insb
das
ret
push
imull
jmp
inc
repnz
insb
clc
test
shrl
push
in
out
pop
add
add
outsb
insb
jle
arpl
insb
mov
addr16
insb
pop
shlb
inc
loope
fdivl
jg
insb
imul
sub
pop
das
or
aas
aaa
mov
push
imul
jnp
mov
jg
les
outsl
jl
aas
jbe
insb
popf
cli
rolb
imul
arpl
in
sub
in
dec
pop
push
fists
cltd
push
xor
cmp
imul
insb
lret
rclb
adc
mov
shl
insb
cmpsl
inc
incb
xor
and
xor
push
fisubrl
nop
in
dec
xchg
push
insb
mov
sbb
insb
pop
es
mov
and
icebp
insb
orb
adc
jg
movsl
dec
cs
pop
in
adc
aas
icebp
jbe
insb
jge,pt
xchg
mov
neg
aam
loopne
or
mov
sub
xchg
insb
inc
inc
test
mov
lret
mov
das
in
cmpsb
call
faddl
into
insb
cld
in
pop
fwait
and
pop
insb
aam
fistps
cmp
mov
stos
in
cmpsb
dec
mov
ret
mov
loopne
push
mov
pop
mov
lret
dec
jecxz
aad
int
adcb
mov
jge
stos
icebp
cmpsl
cmp
push
ss
and
and
push
insb
pop
out
sti
clc
xor
stc
or
clc
mov
jno
inc
xchg
int
adc
push
mov
ret
inc
leave
aad
addr16
aas
insb
sti
jmp
shl
in
icebp
push
dec
mov
repz
in
sub
lret
add
push
sbb
daa
sahf
dec
insb
je
jp
loop
repz
jns
scas
mov
jmp
gs
pop
mov
jns
psubusb
adc
daa
cld
inc
mov
inc
int3
cli
pop
insb
in
fptan
scas
sar
icebp
aas
insb
and
cs
jmp
test
in
loop
sub
adc
xor
cmp
lock
push
inc
sub
fbld
orl
or
add
cmpsb
xchg
xor
in
decb
loope
in
das
imul
xchg
and
inc
imul
and
aaa
xor
inc
movsl
loopne
mov
xchg
shr
insb
fildll
mov
mov
int3
pushf
dec
mov
insb
rcll
cmp
push
and
sahf
ret
add
imul
data16
or
ljmp
insb
push
jne
popa
dec
cmpsb
pcmpeqd
adc
dec
jns
add
pop
cmp
test
mov
jmp
insb
sbb
push
fisubrl
or
imul
insb
cmc
movsb
mov
fsubs
cmpl
jns
cmp
dec
stos
test
sbb
test
fcmovnbe
add
sub
mov
sbb
ds
add
imul
mov
push
insb
daa
mov
stos
out
xchg
cltd
mov
mov
mov
mov
add
insb
push
or
test
dec
push
dec
js
das
and
ds
bound
dec
jl
pop
stos
push
loopne
in
adc
add
dec
fildll
jae
insb
sub
xor
pop
insb
aas
push
popf
insl
mov
ds
aad
jp
pop
ja
imul
xchg
in
xor
insb
pop
loop
xor
or
cmp
insb
dec
cmp
hlt
or
fsts
mov
in
loopne
dec
int3
sbb
insb
fwait
addr16
test
mov
aam
movsb
adc
xchg
lahf
and
xor
insl
dec
leave
loopne
insb
lds
cmpsl
insb
inc
xlat
xchg
pop
iret
inc
insb
leave
mov
cmp
insl
or
inc
not
and
insb
push
fldt
mov
pop
lret
mov
mov
xchg
xchg
cmp
xlat
xor
cmp
inc
mov
insb
int3
popf
test
insb
fsts
insl
cs
aad
adc
jnp
push
out
sbb
in
cmpsb
push
insb
inc
and
gs
xchg
mov
dec
mov
xor
fcomps
ja
cmpsb
insb
mov
in
cmp
into
and
jb
adc
addr16
arpl
jns
testb
jg
lock
in
sbb
mov
dec
mov
bound
lods
lds
mov
mov
sarl
imul
mov
inc
sub
mov
push
out
test
iret
mov
jp
loop
popf
sahf
gs
mov
mov
insb
xor
or
cmpsb
imul
add
das
mov
int3
ffreep
movsb
or
loop
xlat
mov
sbb
add
jnp
mov
hlt
data16
xor
sbb
sbb
dec
insb
sbb
in
pop
fistpl
movl
jne
cmp
jp
sub
xor
es
jecxz
or
mov
jle
in
jle
mov
jnp
rcll
fdiv
sbb
sar
push
cmp
insb
cwtl
adc
insb
add
and
xor
sbb
mov
pop
aam
ret
popa
dec
jmp
adc
adc
aad
or
push
mov
insb
lahf
mov
add
insb
adc
jecxz
fidivrs
bound
pop
dec
insb
dec
int
inc
adc
cs
mov
enter
out
rclb
cld
jbe
imul
icebp
int3
out
divps
pop
adc
leave
xlat
push
ja
fdivs
or
daa
dec
xchg
ljmp
xlat
or
mov
push
loope
ficoml
or
mov
not
shrl
sahf
addr16
in
insb
jo
jbe
sbb
pop
cmp
mov
cmp
jmp
insb
add
nop
cmp
in
push
out
insb
arpl
inc
imul
dec
in
xor
insb
mov
cmpsl
imul
insb
ficoml
cltd
add
insb
xor
scas
pop
les
dec
ds
push
adc
or
jle
jmp
cli
sub
fcmovu
lods
fistps
jmp
jno
or
sbb
adc
push
in
sbb
ljmp
mov
adc
scas
repnz
mov
insb
inc
mov
pop
fs
sahf
insb
or
out
or
ret
xor
imul
pushl
aaa
ss
imul
sub
inc
sbb
fldt
xchg
inc
test
fwait
insb
lahf
mov
loope
arpl
cli
mov
cltd
dec
dec
scas
mov
cmpb
adc
in
scas
add
imul
xor
into
insb
cmp
decl
mov
insb
pop
inc
dec
hlt
out
push
mov
gs
shrb
test
add
repz
inc
movsb
mov
test
sarb
fdivl
js
push
popa
push
movsl
insb
out
shlb
test
aas
or
jl
das
pop
mov
sub
call
xchg
insb
xor
mov
add
jge
rcrl
ss
sub
rorb
mov
ret
or
imul
push
shr
out
test
jb
cmp
dec
push
int3
jae
push
mov
dec
in
jnp
jo
pop
hlt
loope
insb
push
inc
bound
push
pop
jbe
mov
add
and
pop
jmp
pop
insb
pop
sub
mov
sarb
aam
movsl
and
cmpsb
js
push
push
fwait
jb
movd
cmp
scas
cmp
jmp
das
sub
fsubrs
sbb
inc
fisubrl
test
mov
mov
and
loopne
pushf
or
push
xlat
icebp
mov
lds
lock
arpl
push
push
lahf
xorb
insb
outsl
mov
or
das
cltd
mov
and
int3
xor
jb
push
lock
push
pop
add
inc
push
pop
mov
pop
lcall
mov
pop
insb
shl
sarl
push
xlat
push
cmp
out
lcall
or
xchg
push
enter
and
in
jle
adc
inc
insb
xlat
ffree
dec
out
add
loop
inc
cmp
das
adc
fldt
inc
adc
jp
insb
rcr
cmp
aad
push
imul
add
dec
jp
insb
cmp
pop
xchg
cmp
notl
imul
insb
sub
mov
xchg
push
in
mov
insb
add
jno
stos
shrl
or
pop
rol
and
xor
jb
insb
push
fcompp
mov
imul
jmp
mov
push
jl
push
push
ss
movsb
jle
push
idivb
dec
test
sbb
insb
ljmp
pop
insb
lahf
mov
sahf
mov
insb
sbb
fidivs
aam
mov
gs
inc
jg
pop
lods
int
addb
mov
push
mov
sub
jb
outsl
je
mov
imul
in
xchg
cld
xchg
subb
xlat
xor
pop
cmc
mov
xor
sbb
sbb
movsl
test
out
inc
fsubp
lods
dec
cmp
sarl
mov
mov
sub
enter
fwait
insb
xor
cmp
and
mov
sbb
adc
arpl
aam
ja
insb
popa
push
lcall
pop
pop
dec
dec
sbb
mov
pop
xor
mov
in
jl
scas
mov
push
push
or
mov
cmp
insb
jmp
insb
dec
fiaddl
xchg
int3
lret
pop
jp
insb
mov
out
dec
data16
or
outsb
cmp
mov
ljmp
jmp
sti
sub
and
push
pushf
mov
rclb
gs
add
add
repz
insb
sahf
jecxz
frstor
xchg
insb
mov
jae
insb
cmc
adc
dec
dec
lods
sbb
mov
or
mov
mov
cli
dec
add
insb
dec
mov
out
xor
pop
mov
in
movsb
cwtl
inc
push
push
push
fildl
mov
dec
and
jge
lea
call
pop
hlt
mov
sbb
or
push
int
xchg
lea
stc
repnz
pop
mov
mov
mov
xchg
insl
rorl
arpl
sti
push
mov
jl
insb
int
pop
push
xlat
call
clc
cmpsl
cmpsb
cmp
imul
adc
data16
ficoms
sbb
push
in
test
xchg
insb
lea
data16
or
insb
fcomp
sub
insb
sub
cmp
jbe
sti
scas
xor
pop
insb
enter
lds
jbe
insb
xor
out
sti
jle
cmp
addr16
inc
and
insb
aam
rolb
sub
ljmp
out
nop
jb
pop
lods
add
cmc
xorl
mov
push
pop
insb
enter
sahf
sub
popf
sub
nop
loope
fldt
stos
gs
add
pushf
xchg
cmp
ret
adc
dec
js
xor
mov
insb
int
fucomip
xchg
cs
pop
pop
add
push
insb
xor
testl
pop
pop
xor
or
out
sahf
jle
daa
gs
mov
xchg
ds
adc
xchg
sub
pop
loope
aaa
insb
push
mov
cmpsl
ja
icebp
inc
insb
xchg
test
cwtl
xchg
push
xor
insb
mov
ss
sub
fwait
gs
xchg
fistps
shrl
sbb
int
sub
jl
insb
and
push
sub
imul
lods
sti
scas
and
mov
mov
or
arpl
adc
or
insb
pusha
sub
ret
enter
jno
test
jo
data16
adc
cmpsb
pop
pop
mov
scas
imul
mov
cld
jbe
orb
aas
lock
and
pop
gs
je
arpl
add
faddl
inc
in
sub
in
adc
push
cwtl
sub
fwait
mov
insb
jb
dec
inc
cmpb
lcall
inc
das
push
mov
add
in
push
sub
push
lods
insb
dec
add
aam
je
insb
mov
mov
insb
rorl
jl
adc
adc
push
push
mov
insb
pop
ret
stc
xor
out
mov
dec
sahf
push
mov
bound
fidivs
imul
xchg
mov
mov
push
rcr
dec
lods
movsb
ljmp
lret
je
dec
add
jb
insb
push
xchg
sub
mov
lea
add
imul
sbb
xor
pushf
adc
imul
aas
push
test
insb
daa
mov
mov
and
dec
loop
mov
pop
push
adc
andb
gs
sbb
mov
xor
loop
pop
xchg
insb
out
push
push
push
int3
iret
dec
cmp
addb
shrl
cld
cmpsb
insb
adc
inc
mov
or
and
cmp
outsb
inc
dec
mov
int
and
scas
hlt
or
imul
call
pop
lods
adc
jno
cli
dec
ja
xchg
imul
add
enter
insb
gs
fimull
int
out
pop
cmpsl
in
sbb
jge
xchg
jl
cs
jnp
cltd
icebp
pop
sbbb
or
imul
shlb
cmp
imul
negb
repnz
mov
ret
mov
mov
mov
pop
jp
insb
cs
push
test
imul
int
jo
jle
loop
push
imul
push
sbb
inc
sti
lock
sbb
mov
fsub
ret
jmp
cwtl
lea
insb
mov
and
xchg
pop
or
adc
data16
shrb
imul
and
xor
xchg
push
lods
fistps
push
insb
nop
sarl
in
push
inc
dec
xchg
xorb
aad
rcr
loope
loopne
std
imul
ss
dec
push
ret
mov
jle
cwtl
ja
pop
inc
push
lods
pop
cmp
mov
test
insb
sub
push
fidivl
shrb
lock
cmp
adc
insb
or
inc
lea
mulb
mov
push
jns
mov
cli
clc
rcl
push
insb
out
cwtl
push
das
jnp
xor
xchg
insb
cmpsl
call
mov
dec
leave
lret
cld
dec
insb
outsl
jbe
xchg
bound
jne
lods
lea
cmp
or
mov
test
pushf
orb
jbe
in
pop
pop
lea
push
push
cmpsl
sub
push
fisttpll
ljmp
daa
repz
fwait
inc
test
mov
sbb
insb
and
mov
subl
mov
cmc
jg
stos
loop
ds
sbbl
adc
jns
lahf
inc
push
sub
rcr
ret
sub
call
test
or
out
adc
popf
mov
sub
mov
pop
jne
inc
dec
movsb
jge
dec
scas
pusha
push
test
insl
aam
mov
clc
arpl
lea
lock
mov
loope
pop
popf
dec
sbb
xor
pop
insb
dec
jns
add
test
fwait
int
pop
inc
push
out
adc
sub
nop
insb
movb
and
xchg
movsb
jl
ret
ja
xor
pusha
insb
shlb
mov
jp
dec
mov
pop
mov
subb
daa
rorl
push
insb
lds
je
out
bound
mov
sbb
hlt
adc
gs
jno
std
cmp
stos
push
mov
int
mov
pop
insb
mov
push
pop
inc
insb
push
cmp
sbb
jle
insb
dec
or
adc
xchg
rol
insb
imul
lahf
push
xchg
aaa
inc
pop
inc
jle
dec
push
sub
lret
stos
testb
lea
push
js
xor
pop
xchg
pushf
fistpll
insb
mov
jae
push
pop
sahf
arpl
test
and
xchg
adc
popf
insb
mov
push
sub
pop
cwtl
mov
sub
or
mov
ret
nop
arpl
xchg
xorb
mov
insl
adc
mov
shll
cli
dec
mov
inc
bound
pop
inc
pop
insb
adc
push
clc
and
scas
enter
mov
popf
hlt
add
in
add
sbb
faddl
gs
add
cld
cli
arpl
mov
xor
lret
imul
xchg
aas
in
jl
adc
mov
lods
out
push
inc
pslld
mov
add
je
mov
data16
orl
push
lods
sub
dec
add
fstl
sub
xchg
insl
xchg
mov
mov
xlat
xchg
sbb
scas
test
std
call
xor
cmp
jp
jb
pushf
imul
xchg
lods
or
sub
ds
insb
dec
push
in
mov
fmulp
xor
sub
push
add
gs
notl
dec
jno
insb
pop
xor
mov
inc
dec
jp
insb
mov
test
and
pop
jl
xchg
les
jge
gs
cmpsb
jns
cmp
mov
in
xor
push
repnz
mulb
hlt
aaa
push
call
dec
insb
push
jge
mov
insb
xor
jb
add
leave
xlat
ljmp
clc
cltd
mov
xchg
push
lds
into
sub
lea
pop
loopne
dec
test
push
sub
subb
pop
ficomps
xor
insb
xorl
push
pop
ljmp
jns
ja
mov
insb
mov
sti
sbb
mov
insb
hlt
aas
les
xchg
dec
js
dec
mov
mov
shrb
loopne
jae
xchg
popa
push
mov
movsb
insb
hlt
sub
jecxz
dec
xchg
insb
jno
jns
xor
mov
add
es
cmp
frstor
popa
ret
imul
into
sbb
and
sub
loope
and
popf
je
repz
insb
xchg
imul
mov
pop
lods
jp
dec
gs
stos
test
pop
sahf
cmp
std
and
sub
out
add
lock
arpl
gs
jecxz
sarl
scas
stos
jbe
insb
mov
sbb
fbstp
fdivrl
xor
int
dec
jne
pop
insb
dec
mov
sub
fwait
lahf
push
mov
push
rorb
insb
jg
jecxz
pop
call
ds
shll
mov
fisubrs
xor
negl
push
imul
and
in
sbb
ret
xor
mov
mov
int
repnz
insb
sbb
xchg
pop
hlt
xchg
icebp
insb
push
loop
clc
pop
cmp
dec
js
insb
iret
mov
enter
mov
mov
and
in
mov
adc
pop
test
insb
ret
dec
in
enter
repz
dec
lock
cmp
xchg
call
andl
mov
lret
ret
add
insb
andl
dec
dec
dec
pop
lea
jns
fwait
lock
repz
insb
or
pop
test
shrl
sub
adc
in
inc
lds
sti
adc
sbb
sub
pop
outsl
cltd
dec
xchg
pushf
aam
insb
sbb
lcall
add
jne
cmpb
daa
data16
fwait
pop
dec
inc
jnp
lods
loope
sbb
mov
pop
fsubr
fsubrl
call
daa
sub
aam
dec
xlat
lcall
int3
insb
cmp
lods
adc
push
dec
push
adc
in
aad
mov
insb
pop
lds
push
insb
lods
xchg
push
or
mov
jge
sbb
or
iret
movsl
insb
jno
call
test
xchg
adc
stos
xchg
fistpll
lahf
jge
out
test
cmpsl
pop
or
adc
dec
ss
movsb
xor
test
push
scas
test
dec
cmp
or
in
xor
push
jl
jae
jbe
je
insb
jo
stc
cmp
imul
rolb
push
aaa
insb
dec
fs
lret
das
je
lsl
imul
hlt
push
fldl
adc
aam
xor
push
test
mov
jae
mov
cli
fidivrs
sub
cmp
in
add
stos
push
loope
jb
push
mov
out
sbb
push
subl
insl
outsl
inc
imul
xchg
ret
push
jb
int
sbb
sbb
dec
test
pop
adc
pop
inc
mov
mov
add
xchg
test
lret
icebp
sarl
insb
sub
outsl
push
jg
sbb
or
cmp
mov
dec
test
fcom
call
sub
mov
jecxz
insb
jbe
ret
arpl
icebp
in
stc
adc
xchg
insb
add
adc
sti
add
fdivl
xchg
jecxz
js
mov
or
in
andb
rcr
insb
inc
pop
cmpsl
into
mov
adc
fimull
insb
arpl
popf
in
pop
loop
test
aas
cltd
ficoml
push
adc
inc
insb
xchg
inc
xor
mov
insb
pop
dec
loop
jp
inc
imul
xor
ja
insb
adc
insb
lcall
push
lods
out
adc
stc
jg
jecxz
cmp
les
insb
testl
out
in
sub
shrl
insb
ljmp
mov
outsl
imul
and
and
insb
cli
aam
xchg
in
add
xor
sbb
arpl
les
xchg
cmp
in
int
insb
and
loope
add
ljmp
xor
jmp
pop
adc
ret
or
repnz
adc
insb
xor
mov
insb
jmp
add
insb
incl
stos
clc
cmpsb
sbb
int3
aas
jmp
xor
and
insb
imul
inc
pop
in
insb
and
or
imul
dec
movsb
xor
push
mov
movsb
insb
or
sarb
jl
xchg
imul
jbe
adc
gs
divb
cld
fs
pop
insb
stos
repnz
sub
mov
ret
lock
sub
popf
mov
jnp
insb
mov
mov
fisubrs
movsl
or
mov
adcb
mov
ret
pop
popa
iret
lahf
pop
sub
pop
jp
push
imul
or
inc
insb
add
loopne
insb
mov
jl
ljmp
or
insb
jmp
xlat
or
iret
roll
stos
push
dec
insb
mov
sbb
sbb
xchg
lods
idivb
shrl
arpl
and
inc
test
cli
insb
adcb
pop
pop
pop
xchg
lods
arpl
scas
cs
jl
and
jecxz
dec
les
movsb
cmp
in
xor
icebp
insb
testb
in
or
inc
push
out
test
insb
ficomps
jge
insb
imul
sbbl
mov
add
cwtl
xchg
imul
cmp
ss
mov
orb
aas
ja
adc
xor
lds
das
fs
dec
sub
insb
mov
pop
das
adc
xchg
inc
les
imul
movsb
lock
or
cmp
cmpsb
pop
sub
pop
pop
mov
jl
insb
or
je
ja
in
imul
pop
xlat
leave
fs
sbb
insb
data16
movsb
and
jge
fistpll
jp
arpl
dec
sbb
and
rorl
rclb
sbb
insb
mov
pop
mov
insb
std
mov
push
add
cli
int
adc
out
mov
shlb
mov
insb
xchg
mov
cmp
pusha
jl
adc
in
lret
fwait
rolb
jl
mov
push
adc
ss
sub
sub
push
jnp
js
ret
or
insb
imul
mov
decb
insb
popf
pop
aas
sahf
dec
in
jg
ljmp
lods
inc
or
insb
lcall
add
in
addl
insb
and
loope
aas
xlat
lahf
sub
mov
shrb
hlt
sahf
or
mov
sti
imul
pop
mov
repnz
inc
loop
sub
pop
sbb
push
mov
mov
outsl
inc
sub
aas
jne
insl
ret
in
lds
sub
push
inc
add
imul
shll
cwtl
insb
cltd
call
jbe
push
lret
sbb
xchg
sub
sub
add
add
sub
or
push
cmc
ficoms
insb
stc
nop
jb
adc
movsb
imul
pop
mov
bound
pushf
adc
ds
mov
mov
gs
pop
push
pop
mov
mov
xor
pop
nop
inc
pusha
sub
cs
pop
mov
imulb
sahf
push
lcall
pop
jmp
cmp
insb
test
inc
xchg
dec
mov
outsb
xorb
mov
insb
push
enter
shrl
shlb
xor
xchg
stc
mov
cmpl
insb
mov
outsb
inc
lods
call
xchg
aad
adc
insb
rcrb
popf
pop
push
xor
mov
add
imul
dec
inc
adc
imul
cli
cmpb
aam
jle
into
xor
in
lea
inc
push
jno
dec
mov
ficomps
pop
loope
pop
adc
mov
add
and
xlat
xchg
cmp
jl
insb
in
jge
dec
push
mov
lds
pop
dec
scas
sub
or
gs
mov
cltd
cmpsb
in
add
in
fidivs
ljmp
aaa
icebp
js
sahf
ret
call
dec
arpl
inc
cs
fidivrl
stc
sub
inc
sub
fistl
jecxz
dec
gs
xlat
dec
mov
cmpsb
mov
and
xor
std
insb
mov
xor
adc
cwtl
insb
pop
imul
test
mov
mov
pusha
aaa
jo
mov
imul
test
fldt
cmp
xchg
insb
inc
hlt
jo
dec
ret
mov
movsb
insb
pop
stos
jne
fldt
mov
cld
shll
mov
jmp
ret
inc
or
js
mov
in
mov
rcll
fisubrs
push
popf
jecxz
out
pop
clc
adc
stos
cmp
lods
sub
push
mov
sbb
dec
outsb
testl
adc
inc
les
sbb
popa
frstor
scas
stc
mov
imul
mov
sub
insb
fidivs
enter
sub
cmp
out
pop
pushf
sub
js
jg
sbb
ror
dec
dec
add
out
dec
nop
pop
mov
dec
stos
push
lahf
in
xor
push
insb
jmp
rol
mov
mov
xchg
dec
xchg
xor
jl
insb
dec
out
adc
lds
insb
cmpsl
out
jmp
hlt
pop
cld
xor
jnp
push
scas
lret
mov
cmpsl
into
jne
inc
xchg
mov
insb
mov
and
cli
clc
lcall
rolb
push
push
or
and
sbb
dec
jp
or
or
aas
dec
insb
cmp
js
jae
pop
daa
insb
sti
xchg
movsb
pop
lret
jne
ljmp
pop
f2xm1
jp
insb
sub
lret
dec
adc
push
xchg
cmpsl
fidivrl
clc
or
xor
add
fcomps
xor
xchg
test
fildll
or
insb
push
leave
dec
add
std
xchg
xchg
pop
mov
xor
mov
sti
jle
aaa
push
insb
push
insl
add
inc
fwait
jo
insb
mov
js
dec
and
mov
sbb
xchg
and
push
pop
popf
mov
mov
scas
xor
sbb
push
imul
cmpb
pushf
inc
mov
pushl
and
push
cmp
insl
pushf
mov
jge
or
cwtl
mov
insb
jns
xor
xchg
repz
and
fdivrl
xor
imul
cwtl
ja
in
mov
fwait
in
lods
dec
pop
xor
push
xlat
lods
mov
arpl
shrl
insb
xchg
hlt
cmpsl
push
aad
jl
insb
dec
sbb
push
shlb
fs
loop
cld
mov
insb
jb
in
sub
andl
fsub
pushf
or
jno
dec
pop
push
movsb
jns
push
insb
sarb
fsts
out
nop
mov
iret
jl
bound
sbb
inc
xchg
xchg
test
inc
insb
daa
aad
iret
sub
fs
xor
pop
xchg
neg
mov
test
xor
sub
in
jl
mov
add
cmp
adc
dec
data16
test
inc
insb
ret
push
jecxz
jmp
pop
mov
aas
std
repz
imul
pusha
mov
in
arpl
cmc
icebp
push
insb
mov
test
pop
sub
insb
add
outsb
stos
push
adc
outsl
cmc
mov
in
adc
sbb
insb
or
cltd
push
insb
xor
mov
shlb
out
and
fmulp
insb
and
add
push
int
insb
mov
loopne
aad
or
push
jb
testb
imul
loopne
push
out
pop
mov
cmp
test
in
paddb
inc
jl
insb
mov
add
shll
pop
jle
mov
mov
jae
aaa
inc
mov
std
or
add
push
and
inc
insb
pop
fidivrl
insb
jnp
add
ja
out
mov
insb
pop
mov
xchg
fcomp
shr
pop
pop
pop
hlt
sbb
adc
imul
nop
int3
and
mov
or
cmp
jmp
jmp
cmpsl
sub
andl
pushf
imul
data16
hlt
imul
lcall
sahf
gs
sti
dec
imul
insb
jmp
or
insb
jl
xchg
and
sti
add
sub
dec
insb
add
inc
push
movsb
cld
imul
dec
dec
insb
std
aam
shl
jg
insb
sub
in
cmp
aad
daa
jne
insb
inc
sti
mov
mov
bound
lahf
shlb
or
arpl
test
insb
mov
mov
fsubl
jns
hlt
loope
sub
jl
pusha
pop
movsb
lcall
lods
fiaddl
pminsw
out
mov
pop
popa
cmp
xor
loope
xor
insb
or
loop
gs
mov
xchg
pop
and
imul
dec
in
mov
push
dec
dec
int
jmp
je
jnp
andb
xlat
outsb
or
push
mov
sbb
bound
push
adc
iret
ret
inc
in
arpl
push
mov
dec
hlt
dec
adc
xor
mov
test
mov
fisubrl
aam
idiv
shrb
mov
or
stos
insb
data16
gs
jbe
insb
xchg
shll
mov
out
pushf
pop
lret
mov
xchg
add
bound
ret
add
cmp
data16
sub
or
stos
insb
lods
ljmp
insb
dec
push
pop
cmp
mov
sub
in
std
mov
insb
xor
out
insl
data16
or
pushf
dec
cld
enter
inc
sub
ss
clc
pop
fmull
adc
push
adcb
jb
inc
loop
jg
or
cli
insb
test
jbe
bound
xchg
xchg
rcrl
outsb
inc
scas
push
xlat
in
xor
add
movsl
and
insb
mov
jle
adc
mov
scas
in
or
cmp
int
addb
mov
adc
insb
pop
mov
les
iret
scas
fidivrl
insb
jbe
adc
cmp
fdiv
insb
addr16
mov
aas
imul
movsb
jl
rorb
inc
sbb
mov
aam
je
insb
not
gs
xchg
cltd
sub
imul
sahf
shl
add
pop
clc
stos
xor
test
sbb
out
xchg
mov
inc
cmp
rcrb
xchg
pop
mov
or
and
pop
adc
pushf
push
cmp
in
mov
bound
mov
scas
insb
ret
add
xchg
call
insb
or
dec
popf
fs
lahf
mov
xor
stos
ret
lods
repnz
imul
adc
test
js
imul
jno
mov
jae
shrl
arpl
test
in
cmpsb
in
xchg
mov
insb
in
adc
jne
fisubs
or
movsl
out
mov
mov
sbbb
std
lods
push
pop
xor
insb
adc
cltd
outsb
aad
sbb
xor
test
insb
mov
xchg
lods
cld
insb
imul
xchg
shrb
and
fs
imul
pop
mov
cltd
sub
fmuls
insb
mov
jecxz
cmp
add
jns
push
push
jb
xchg
or
insb
sbb
bsr
ret
dec
push
insb
jmp
lods
test
adc
insb
aaa
sub
gs
xchg
mov
sub
push
cmpsb
mov
adc
or
icebp
insb
lret
jb
sbb
cmp
insb
jge
test
lcall
jg
test
cld
jae
insb
jge
ljmp
repz
dec
imul
xor
xor
in
push
insb
aaa
mov
inc
das
xchg
loopne
imul
cmpsl
cwtl
sbb
scas
insb
push
and
inc
insb
push
add
shl
adc
cltd
lret
ja
xorl
dec
inc
jp
stc
push
pop
or
insb
mov
call
insb
and
sti
cmp
leave
insb
out
dec
adcb
sub
insb
dec
shll
das
std
jl
pop
insb
jge
dec
adc
mov
pop
sbb
adc
call
ret
das
push
xor
push
int3
lea
inc
xorb
insb
sub
mov
imul
dec
insb
in
inc
adc
push
xor
add
insb
aad
int3
push
push
or
out
dec
sbb
paddsb
test
insb
mov
loop
jg
nop
or
pop
jae
jge
fldt
and
popa
cmpsl
shrl
dec
movsb
test
xor
enter
cltd
fildll
mov
inc
cmp
sub
shr
insb
pop
or
insb
jl
mov
flds
int
sub
scas
test
sub
pop
or
pop
rcl
imul
stos
in
inc
add
loope
or
shrl
imul
mov
subb
mov
xor
call
outsl
in
and
push
jecxz
dec
lcall
dec
xor
xchg
std
insb
inc
inc
cli
xchg
jnp
arpl
daa
sub
lods
adc
xor
ds
cmp
xchg
mov
mov
add
or
dec
loopne
push
xlat
dec
xor
icebp
mov
in
stc
fs
mov
cmpsl
push
or
and
cmp
js
aaa
pop
push
les
mov
push
sub
into
dec
scas
pop
loopne
loop
insb
sub
in
out
insb
cmp
jae
or
js
es
shlb
push
shrb
test
pop
mov
adc
or
push
push
mov
adc
xor
insb
rorl
fcompl
mov
sbb
mov
insb
arpl
fsubp
xchg
xor
in
fnstenv
push
push
jbe
mov
xor
dec
frstor
inc
adc
out
xor
das
ss
sti
insb
xchg
xchg
xor
push
fidivrl
outsb
in
insb
pop
adc
and
stos
mov
jne
ret
jnp
std
cwtl
xor
dec
push
insl
cmp
imul
insb
push
sbb
jecxz
xchg
and
push
aaa
mov
imul
ljmp
imul
xor
cmpsb
mov
jg
stos
xchg
je
test
insb
subl
outsb
dec
sti
imul
in
int3
negl
insb
cltd
xor
cmpsb
dec
sbb
rcl
clc
pop
and
mov
loope
repz
das
icebp
add
lods
push
add
pop
stos
mov
data16
jns
pop
mov
imul
xchg
push
and
outsl
xchg
sub
dec
loopne
or
jmp
test
adc
mov
push
in
outsl
ds
adc
lcall
es
jle
rol
shll
or
or
int3
jb
insb
mov
lods
fisubs
jg
add
fbld
cmpsb
sbb
or
pushf
lds
and
xchg
outsl
insb
fdivrs
test
insb
je
push
dec
dec
mov
and
iret
test
mov
in
adcb
inc
jae
nop
movsl
dec
cmp
loope
push
fsubrl
rorb
sub
ljmp
dec
pop
sbb
jbe
aad
orb
cmp
pop
gs
push
insb
xchg
dec
xchg
loopne
shrl
push
or
mov
insb
dec
ficoml
mov
inc
pop
dec
bound
mov
lahf
arpl
outsb
in
push
inc
jbe
mov
imul
shrl
mov
sbb
mov
and
push
jns
push
mov
ds
pop
lea
lods
xchg
jl
insb
push
pop
stc
inc
out
jmp
xchg
fwait
popf
or
push
aaa
mov
shlb
jle
rcl
mov
outsb
insb
fnstcw
jno
cmp
and
int3
dec
xchg
aas
mov
insb
mov
int3
in
cmc
mov
loop
iret
clc
subl
xchg
cmp
gs
gs
inc
adc
or
insb
xor
push
dec
out
cmp
mov
sahf
insb
or
ret
or
dec
insb
sbb
push
inc
imul
cs
inc
js
pop
xchg
negb
cmp
pop
insb
cli
scas
jle
cld
lods
mov
jbe
call
insb
enter
xorb
pop
insb
dec
sbb
mov
gs
jne
xchg
mov
gs
mov
jnp
cld
idivl
imul
and
stos
adc
xchg
ficompl
dec
mov
push
icebp
roll
sbb
xchg
insb
pop
mov
and
repnz
test
cs
mov
test
out
add
or
jnp
insl
dec
enter
in
push
inc
and
pop
arpl
lret
or
xchg
sbb
insb
sub
add
insb
and
or
mov
fs
enter
inc
in
sti
and
insb
pop
xchg
cmpsb
push
xor
cmc
dec
insb
aam
pop
push
push
addl
or
decb
insb
ret
call
dec
popf
push
int3
and
inc
fbld
insb
cmpsb
cmp
add
insb
shl
dec
xor
mov
sub
jno
in
sbb
mov
fcoml
loopne
lret
mov
ret
mov
fnstcw
insb
cltd
jp
push
sbb
stos
jg
notb
out
pop
insb
cmp
adc
dec
dec
ja
sub
ds
cli
lret
sbb
arpl
dec
idivb
andb
stos
jnp
sub
sub
mov
jmp
test
dec
insb
push
pushf
push
out
jmp
and
mov
rorb
arpl
movsl
outsb
jge
lods
dec
cmp
shlb
loop
add
push
shlb
or
ja
jmp
and
fs
das
sub
jmp
insl
imul
shrb
add
sti
mov
ss
das
data16
in
mov
or
data16
lock
lea
pop
push
mov
cmpsl
adc
in
mov
ljmp
dec
arpl
aam
enter
mov
push
jb
insb
sbb
mov
loope
sti
cwtl
lea
or
call
xor
cmp
insb
mov
aam
insb
and
roll
clc
jb
xor
push
xor
push
mov
mov
push
pusha
jae
test
mov
jge
and
inc
mov
pushf
ljmp
sub
mov
adc
mov
adc
xchg
mov
and
pop
int
sahf
pop
in
or
add
sub
mov
mov
jo
enter
dec
push
lods
std
dec
sub
insb
mov
xchg
mov
shrb
xchg
mov
stc
ficoms
mov
gs
popa
or
xor
je
insb
adc
jae
push
popa
xchg
ret
dec
test
pop
insb
cmp
test
daa
popa
imul
insb
in
stos
jmp
js
insb
adcb
mov
pop
outsl
nop
xchg
js
sub
loopne
incb
insb
decl
pop
lods
dec
sbb
int3
fiaddl
andb
ja
cs
fiadds
jb
popa
insb
adc
out
and
insb
cmp
cli
inc
mov
pop
shrb
das
mov
mov
pop
movsb
shll
mov
gs
cld
sbb
insb
and
cmp
iret
insb
sub
fnstsw
das
push
jne
and
movsb
sbb
out
repnz
insb
dec
in
stos
cmpsb
mov
insb
add
push
imul
lods
jno
shrl
pop
call
lods
cmpsl
cmp
aam
shrb
aad
imul
enter
test
mov
jmp
dec
mov
jb
xchg
push
je
xor
dec
add
es
loopne
cmp
and
into
add
push
mov
mov
out
movsb
push
add
fdivrs
push
jo
mov
xor
mov
movsl
and
mov
dec
adc
imul
loop
dec
arpl
sub
xor
dec
insb
sub
subl
ds
mov
and
adcl
sets
hlt
mov
add
pushf
jnp
inc
mov
insb
inc
mov
int3
xlat
inc
insb
adc
cmc
out
dec
lods
mov
aas
cmp
insb
pop
inc
shll
xchg
insb
and
sahf
xor
in
xor
in
rorb
and
es
decl
mov
shll
and
es
lods
mov
out
into
lds
pop
imul
add
mov
mov
repz
jl
xor
icebp
add
cli
pop
jne
jmp
sbb
gs
divl
inc
insb
cmp
cld
pushf
aam
stos
shll
outsb
xchg
mov
pop
sbb
subl
insb
push
and
outsb
push
rclb
pop
cmpsl
lahf
cli
je
insb
xor
data16
jno
fs
mov
paddsb
movsb
lret
movb
and
cmp
enter
jge
xor
pop
jae
mov
pop
insb
fs
pop
inc
imul
mov
xchg
cmp
mov
out
or
nop
push
push
rolb
cltd
jno
sub
shlb
lods
cmp
rclb
testl
jae
cwtl
mov
lods
mov
cmovne
sbb
insb
dec
adc
pop
decl
insb
int
rol
xchg
gs
inc
add
in
in
bound
add
imull
dec
gs
push
jle
insb
pop
xor
psadbw
dec
js
stc
test
stos
es
fs
loope
push
jnp
ljmp
sub
scas
fcoml
out
mov
outsl
push
push
push
fdivs
and
imul
mov
cli
xchg
jo
out
jl
int
fs
ficoml
xchg
sbb
add
xor
sub
jne
cmp
insb
daa
cs
push
jecxz
mov
lcall
mov
push
int3
jle
xchg
mov
insb
sub
stos
adc
adc
int
xor
cld
mov
out
mov
jno
inc
dec
xchg
insb
mov
mov
sub
xchg
insb
push
jp
test
xor
insb
inc
js
xor
cld
push
in
xchg
lret
cmpsb
mov
sbb
xor
xchg
lods
mov
cmpb
in
insb
xlat
shlb
cmc
or
loop
loope
insb
push
outsb
pop
dec
js
imulb
add
stos
or
pop
push
inc
ror
add
jns
insb
jbe
ficompl
cmovg
and
cmp
sbb
push
loop
in
sub
fmull
sarl
and
fs
pop
insb
cmp
dec
rcrb
js
insb
inc
pop
test
fdecstp
ret
adc
mov
lahf
mov
imul
std
lods
test
daa
xchg
mov
jbe
mov
in
ds
mov
cwtl
pop
pop
mov
push
push
insb
push
ss
push
jge
sbb
lock
loope
xchg
data16
mov
xor
popa
sub
jmp
ret
inc
xchg
pop
lock
mov
insb
xchg
cld
stc
and
pop
bound
insb
mov
loop
sub
iret
into
xor
or
sub
cli
insb
push
xchg
fnstenv
insb
in
xchg
pop
pop
repnz
dec
pusha
clc
dec
push
adc
int
daa
int3
cmp
push
sti
push
insb
jns
jbe
or
and
jp
and
insb
push
fisubrl
lret
inc
shrl
fsub
jmp
cmp
orl
pop
test
pop
imul
sahf
jmp
pushf
cld
imul
ljmp
dec
pop
popf
sub
loopne
fwait
pop
sahf
insb
shll
test
out
lea
loop
insb
fwait
mov
mov
jl
insb
mov
aam
mov
push
imulb
push
push
insb
pop
test
movsl
jns
int3
or
add
jnp
inc
out
repnz
mov
std
in
gs
imul
jne
fists
shrb
dec
push
inc
sbb
cld
pop
add
aas
cs
aam
inc
mov
xchg
pop
shll
pop
jb
mov
aas
push
xchg
aaa
lahf
dec
insl
or
or
imul
adc
aaa
loope
xchg
cltd
pop
outsb
inc
cmp
repz
dec
jb
pop
push
stc
jmp
mov
cld
push
sbb
das
out
or
xchg
jbe
rcll
pop
sub
popf
and
cmc
movsb
ret
mov
jmp
sbb
jno
iret
pop
push
lods
lock
push
das
sub
aas
sub
hlt
jl
and
push
insb
fcoms
sub
mov
mov
call
test
addr16
addb
sbb
mov
sub
cmp
and
lock
jl,pt
pushf
popa
repnz
jle
insb
movsl
dec
mov
mov
or
jbe
sbb
inc
mov
cld
lods
fiadds
or
insb
inc
xor
movsl
push
pop
xor
fisubl
cli
mov
pop
inc
int
xor
out
ljmp
and
jns,pt
jno
cmp
mov
insb
sbbb
xor
pop
sbb
jp
into
test
mov
out
sub
jnp,pt
fnstenv
push
loop
mov
push
xchg
fdivp
lahf
cmpb
int
std
into
clc
or
and
jnp
scas
mov
pop
pushf
jecxz
cli
sbb
cmc
xchg
sub
fs
jae
out
lock
pop
sbb
mov
mov
shrb
shlb
xor
dec
push
bound
repnz
inc
sub
insb
xchg
add
mov
mov
jno
push
and
mov
xchg
sub
popf
sbb
cltd
ja
mov
insb
inc
xchg
scas
mov
push
jle
fs
fildll
adc
imulb
push
cwtl
icebp
jb
mov
adc
rclb
xor
int3
push
insb
or
mov
push
xor
das
sbb
xchg
push
inc
pop
sbb
add
adc
xchg
sub
fs
in
inc
call
mov
jmp
dec
pop
insb
mov
enter
add
mov
dec
jecxz
ja
mulb
jmp
scas
nop
cmp
pusha
lock
shlb
mov
inc
sbb
data16
mov
mov
xchg
jno
sub
push
sbb
popa
mov
out
lods
test
movsb
jno
insl
sbb
gs
loopne
cmpsb
jae
add
jo
aas
pop
shlb
aam
call
push
sbb
pop
cmp
inc
sub
pop
repnz
loope
cld
pop
mov
in
lock
das
dec
jle
or
aaa
cmpsb
jb
repz
mov
cmp
xchg
lds
out
inc
insb
or
add
clc
or
pusha
rolb
sbb
adc
sub
addr16
sbb
insb
loope
loope
jmp
sbb
lods
test
sbb
flds
adc
xchg
mov
or
or
push
pop
outsl
lea
movsb
loope
sub
pop
push
stos
dec
pop
push
jecxz
push
cltd
xchg
jl
ss
add
int
in
push
mov
push
scas
int3
shrb
loop
cmp
mov
insb
insl
mov
lahf
dec
insb
and
or
jmp
insb
xor
or
pop
xor
les
xor
sbb
and
cmpsl
test
pop
pop
jge
or
xchg
xor
or
sbb
insb
call
addb
inc
repz
stc
in
scas
insl
cltd
add
insb
sub
sahf
lret
pop
imul
les
je
and
xchg
imul
out
push
adc
sub
mov
bound
jns
and
push
fdivr
push
insb
sub
cmpsb
inc
mov
std
arpl
clc
mov
mov
jl
pop
aad
xor
and
fsubrs
aaa
pop
fsubl
adc
daa
adc
xor
dec
movsl
mov
data16
movsb
xor
imull
or
pushf
cmpsb
shrb
test
mov
pop
xor
popa
mov
popf
movsl
aam
mov
xor
push
insb
enter
insb
scas
leave
jbe
push
push
xlat
jno
pop
cmp
iret
and
gs
push
dec
mul
dec
add
test
xchg
stos
mov
fs
and
stc
movsb
xor
xchg
gs
sub
test
add
ljmp
inc
pusha
sbb
sub
xor
out
cmp
xchg
dec
fimull
pop
insb
push
popf
jle
out
or
mov
xorl
adc
push
ljmp
cmpb
inc
hlt
sbb
js
mov
js
xor
sub
or
lock
inc
and
gs
and
ficoml
in
jmp
mov
insb
add
arpl
jl
cmp
ja
mov
and
ds
or
addb
pop
add
sbb
loope
mov
mov
sbb
fwait
insb
mov
int3
jg
iret
jno
insb
test
shlb
aaa
push
xor
fdivrl
sub
push
ds
mov
js
insb
sub
leave
outsb
insb
lret
fldl
push
cmp
lret
cmovle
mov
mov
and
test
jnp
fiaddl
jle
test
sbb
divl
dec
bound
xchg
push
pop
xlat
pop
xchg
mov
add
imul
ss
xchg
popf
sahf
movl
xorl
pop
insl
mov
pop
loope
je
daa
sub
or
fmull
subb
mov
and
jmp
in
cltd
test
mov
jp
addr16
faddl
jge
add
jp
pop
je
dec
ffreep
cmc
insb
xlat
mov
std
enter
push
inc
xor
in
insb
dec
ds
insb
mov
mov
lahf
add
dec
mov
insb
pop
in
std
fstpt
insb
xor
mov
pop
or
jecxz
stc
cmp
mov
repz
add
ret
test
shlb
sbb
dec
jg
push
in
mulb
inc
gs
ret
insb
add
or
mov
jno
fildll
push
sti
stos
jl
insb
adc
cltd
push
pushf
dec
mov
sbb
test
shr
addr16
pop
insb
dec
inc
sbb
pop
cs
push
orb
jmp
or
test
or
sbb
insb
enter
fidivs
cmpsl
push
add
inc
dec
sbb
mov
xchg
and
xor
bound
insb
inc
pushf
sahf
mov
mov
pop
and
imulb
sub
mov
insl
stos
daa
imul
adc
decb
mov
aam
jno
push
adc
mov
das
mov
out
outsl
push
ficompl
in
aam
pushl
cmpsl
or
dec
jo
popf
fidivs
mov
mov
jge
outsl
pop
sbb
dec
and
mov
addr16
dec
aaa
lods
insb
in
lcall
jmp
and
cs
insb
sub
std
shrl
inc
cltd
push
int
xor
add
cmpsb
rorl
fldt
add
cmp
scas
lahf
mov
mov
pop
fistpll
adc
mov
and
insb
xor
inc
cli
add
subl
xor
insb
test
cmp
insb
inc
loope
and
imul
jb
insl
xor
out
add
cs
in
outsb
cli
cmp
mov
cltd
and
insb
aad
sub
add
mov
mov
mov
cli
adc
mov
xlat
test
leave
dec
mov
add
movsb
in
sbb
div
gs
cmc
shrb
stc
mov
clc
dec
xchg
imul
sbb
inc
mov
leave
pop
dec
mov
pusha
mov
mov
repnz
sub
jae
cmpb
adc
fisttpll
test
mov
andb
insb
push
mov
stos
insb
add
xor
shll
stos
popf
lods
insb
fisubs
push
subb
cld
add
fcompl
insb
dec
or
insb
bound
subl
in
sub
insl
cmp
or
or
jecxz
in
addl
and
xchg
cmp
in
lods
jo
aaa
ret
lods
call
iret
xor
xor
pop
sbb
imul
sahf
subb
jae
imul
and
repz
int3
pop
adc
push
and
dec
jnp
cmp
jmp
dec
in
add
and
inc
pop
jns
sub
mov
orl
rcrl
imul
maxps
mov
insb
repnz
or
xlat
and
pop
cmp
push
jge
shlb
mov
xchg
cmp
gs
mov
add
aas
jp
push
das
insb
mov
push
out
enter
insb
xlat
in
sbb
insb
and
imul
hlt
cmp
add
repnz
and
dec
mov
fwait
daa
mov
pop
insb
xor
push
scas
ljmp
add
xchg
push
insb
mov
mov
std
insb
shl
dec
call
pop
outsb
insb
mov
je
inc
iret
fmull
dec
jne
loopne
xor
sub
pop
insb
mov
inc
ret
jne
aam
fstps
mov
or
in
subb
pop
xchg
mov
and
add
adc
jns
insb
push
out
pushf
pop
cmpsl
cmp
push
fildll
lods
mov
iret
sub
cmp
insb
inc
movb
test
insb
cmpsb
or
adc
stos
ss
mov
push
jne
test
xor
adc
push
lahf
mov
int3
push
scas
push
pop
mov
stc
xchg
inc
hlt
fstpl
jne
and
inc
jno
insb
xchg
jp
mov
mov
mov
imul
imul
ljmp
inc
insb
shl
sbb
dec
pop
ja
and
mov
sbb
fstl
mov
dec
sub
xchg
mov
ret
xor
dec
pop
fsubrs
out
xor
jmp
es
jmp
imul
inc
dec
icebp
shrb
in
int
pop
in
test
fwait
out
and
inc
sti
sahf
lret
and
jae
insb
cmp
xchg
shrb
add
xchg
ss
sbb
out
call
pop
aad
je
leave
scas
sub
insb
or
xchg
ja
insb
sub
xor
dec
popf
jae
arpl
hlt
rep
rcrl
pop
es
mov
repnz
or
cmc
xor
adc
or
leave
insb
mov
inc
das
push
push
in
jb
and
inc
push
lods
add
je
repz
mov
xor
jle
jge
daa
push
mov
sub
repnz
mov
push
cmp
fbstp
inc
dec
or
cmpsl
lds
ss
lea
pop
insb
xchg
pusha
mov
adc
jmp
out
rcll
int3
insb
inc
std
or
fldt
ja
lds
insb
outsb
dec
enter
cs
lret
arpl
into
or
gs
sub
fsubl
pop
cmpsl
lcall
jg
les
ja
fwait
subb
imul
testl
push
into
iret
xchg
insb
xor
and
push
xlat
fld
sahf
aam
es
mov
add
jmp
pop
insb
adc
js
add
ljmp
push
adc
cltd
mov
push
aad
push
add
gs
call
or
ret
nop
inc
insb
outsb
and
lea
push
dec
insb
pop
push
lods
xlat
insb
jle
std
mov
ret
ljmp
shr
out
out
mov
insb
or
scas
gs
sbb
jmp
insb
fcmovne
sub
cs
aad
lods
enter
push
cmpsb
sahf
icebp
clc
test
mov
push
popf
dec
insb
xorb
xlat
shl
xchg
insb
fs
das
push
sub
jl
int
pop
stc
cmpsb
pop
test
insb
mov
pop
push
enter
lock
insb
movsb
mov
mov
movb
insb
fdivrl
imul
rorl
jbe
sub
cmp
jae
inc
xor
push
es
xchg
mov
js
mov
push
roll
adc
mov
add
out
popa
fcomps
and
aad
insb
inc
mov
mov
ret
xor
arpl
in
ss
sub
xor
fdivs
inc
lods
fstps
outsb
mov
stos
mov
in
movsl
jl
daa
mov
adc
jmp
jne
cmpsb
movb
out
xor
xchg
out
push
and
xchg
mov
imul
sbb
xor
sub
stos
pop
test
xchg
rorb
adc
fucomi
shll
fisttps
cmpsb
addr16
and
or
imul
rorb
cli
pop
xchg
mov
imul
cmp
xor
xchg
sbb
insb
outsb
or
cmp
hlt
add
xor
ds
cmpsb
lods
in
rcr
leave
jb
mov
shrl
aam
insl
in
jl
xchg
aaa
add
fs
insb
adc
loope
insb
mov
jb
fldt
inc
lcall
icebp
mov
add
insb
and
push
int
daa
or
mov
addr16
sub
xor
nop
or
dec
push
or
dec
cmp
jb
adc
mov
mov
insb
roll
movsl
jae
add
add
in
cmp
insb
cld
push
roll
arpl
insb
lahf
xor
addr16
rcr
orl
cmp
jle
jp
and
push
arpl
ja
insl
test
add
stos
pop
or
xor
mov
jno
and
pop
xor
add
jne
in
adc
loope
cld
jp
insb
mov
or
cld
lcall
scas
int3
out
jmp
ss
jle
pop
jne
sbb
xchg
in
xchg
pusha
in
sub
sub
lock
push
out
mov
lret
and
mov
pop
iret
dec
icebp
sub
pop
insl
in
dec
jl
sub
xor
insb
mov
leave
aaa
popa
sbbb
into
adc
jmp
out
or
push
push
cld
loope
imul
movsb
push
xor
dec
cli
sub
gs
sub
adc
add
add
xorb
ds
out
in
in
test
or
notb
out
gs
pop
or
mov
mov
inc
and
inc
ficoms
insb
dec
leave
push
out
and
pop
push
mov
sti
out
rcll
mov
insb
mov
cmp
xor
adc
jmp
jns
insb
mov
arpl
inc
sub
imul
sbb
lds
pop
mov
jge
pop
imul
dec
shrl
mov
sti
lret
bound
push
jg
mov
enter
fwait
pop
mov
flds
mov
push
gs
sarb
mov
shrl
xor
insl
insb
repz
or
inc
cmp
lock
and
cwtl
jp
or
insb
push
lahf
mov
mov
jl
std
rcl
movsb
in
mov
imul
andl
hlt
ucomiss
jg
fidivrs
jnp
push
bound
insb
lds
or
add
into
test
insb
dec
and
xor
fists
rep
les
jle
jne
dec
pop
insb
push
jecxz
loop
push
inc
movsb
insb
sbb
sub
fildll
je
or
push
xor
data16
xor
scas
ds
inc
repz
add
aas
and
push
js
test
bound
bound
imul
aam
in
add
fisubrl
test
jno
push
mov
arpl
cmp
adc
loopne
aas
push
cmpsb
sbb
xchg
xor
push
in
xchg
test
and
push
orl
adc
mov
or
jbe
jo
lods
imul
dec
cmc
movsb
nop
add
dec
dec
out
outsb
mov
aad
jns
pushf
scas
cmp
gs
bnd
int3
push
jo
into
insb
bound
mov
iret
pop
scas
adc
dec
or
and
inc
mov
mov
insl
mov
cmpl
pop
dec
hlt
mov
inc
push
xor
idivl
xchg
add
insb
mov
cmc
hlt
mov
cwtl
std
test
or
gs
mov
out
inc
cmp
ljmp
add
dec
stos
clc
mov
insb
push
fdivs
mov
push
ljmp
or
pop
mov
pop
stos
aam
int3
mov
jae
fisubrl
and
test
pop
out
push
insb
call
sub
mov
insb
sbb
jp
addr16
cmpsb
fdivrp
mov
push
roll
clc
xor
daa
insb
dec
cmp
flds
insb
cmpl
jp
mov
insb
xor
int
data16
push
xchg
push
add
lock
mov
shl
arpl
mov
je
in
adc
pop
cmp
adc
jg
xor
ret
xchg
mov
pop
test
and
xchg
addr16
sbb
insb
ja
repnz
inc
sbb
outsb
insb
movsl
push
and
push
and
cmpsl
pop
out
in
fisttpl
adc
leave
or
push
aaa
sbb
insb
test
jo
mov
sahf
mov
fisttpll
cmpsl
in
pusha
daa
cmp
or
add
gs
cmp
aam
pop
sub
xchg
cmp
inc
xchg
mov
aaa
repz
insb
push
int3
adcb
out
jno
mov
lret
mov
push
xchg
lods
push
cs
punpckhwd
ss
adc
dec
lock
fidivrs
push
int3
dec
fmuls
je
xchg
sub
rolb
push
sub
jbe
jb
roll
push
pmaxsw
insb
test
es
ret
stos
push
addb
mov
mov
xor
insb
adc
jno
inc
xchg
call
in
xchg
dec
push
lods
fildll
mov
repz
and
out
cmpsb
pop
int3
insb
push
cmp
mov
movsl
dec
pop
iret
nop
stos
jno
or
lret
mov
insb
mov
jbe
insb
xchg
pop
stc
xchg
lods
outsb
fwait
insb
sbbb
push
int3
sub
insb
jne
hlt
cmpsb
out
xor
dec
insb
and
jmp
ds
xor
mov
lock
xchg
lcall
data16
jb
push
pop
jge
into
and
imul
jg
insl
insb
inc
subl
js
out
and
mov
je
push
enter
imul
cs
aaa
out
xchg
popa
push
push
clc
insb
sub
stos
and
loope
push
pop
mov
and
jo
inc
dec
mov
loope
pop
or
jne
insb
cmp
in
in
push
pop
pop
push
xchg
in
or
je
subl
das
ds
out
cmp
inc
dec
insl
sbb
lods
cwtl
mov
insb
in
adc
jp
push
adc
xchg
inc
push
js
xor
movsb
out
lods
les
fs
insb
add
inc
bound
mov
mov
es
les
cmp
dec
into
pop
and
je
or
and
add
mov
xor
out
push
adc
insb
jns
icebp
mov
pop
notb
mov
iret
fsubrl
dec
dec
mov
mov
pop
lods
pop
test
jbe,pt
or
mov
mov
insb
stos
ja
and
xchg
aaa
insb
dec
dec
loop
cmp
mov
add
popf
xchg
inc
mov
pop
or
aaa
loope
mov
mov
imulb
ret
pop
aam
xor
insb
and
into
cmp
out
insb
movsb
lret
cltd
sbb
out
fistpll
int
sti
pop
xlat
lret
je
fldt
pusha
add
hlt
insb
mov
in
sub
fisubl
insb
incl
cwtl
xchg
adc
sub
mov
fldcw
repz
les
xor
sbb
adc
aas
mov
cmpsb
js
imul
insb
mov
inc
cmc
inc
in
insb
das
movsb
inc
sub
sbb
pop
mov
jmp
xor
sub
rcrb
xchg
mov
cli
or
adc
or
ror
mov
cmp
imul
push
repz
xchg
andb
jp
pop
orl
call
sub
js
lret
outsl
xsavec
ret
jge
cmp
imul
and
and
mov
push
add
cmp
dec
pop
ljmp
mov
sub
xchg
mov
pop
mov
mov
adc
xchg
adc
movsl
xor
insb
lret
orb
movl
xchg
adc
out
insb
andb
dec
fnstenv
popa
in
dec
insb
scas
or
jno
call
pop
xchg
push
xlat
ljmp
push
lret
pop
stc
popw
test
lock
in
jne
packssdw
repz
jl
or
mov
pop
stos
and
insb
pushl
cmp
outsb
xor
arpl
cmc
insb
aas
ss
jecxz
adc
imul
pop
imulb
pop
insb
cwtl
fimuls
popf
imul
mov
jno
lret
pop
fsubs
xlat
dec
clc
aaa
dec
cmp
lods
lods
sar
in
sbb
insb
dec
mov
cs
das
xchg
push
lock
and
xor
sub
outsl
andb
in
movsb
mov
pop
sarl
and
insb
pushf
inc
orb
sbb
clc
insb
lret
shlb
in
or
gs
xchg
ss
aam
in
hlt
adc
mov
add
repz
adcl
add
in
daa
xchg
jno
push
sub
movsl
sahf
outsb
sub
push
mov
aas
mov
cmp
dec
int3
loope
scas
sub
push
mov
nop
push
xchg
add
mov
push
popf
icebp
scas
jne
pop
sub
jl
inc
mov
imul
dec
mov
cmp
jmp
xchg
mov
cmpsb
push
addr16
xchg
pop
in
cmpsb
pop
mov
stos
pop
dec
insb
mov
mov
shrb
addb
sbb
dec
fwait
cmp
cld
push
sbb
ds
arpl
insb
addl
stos
cmpsl
or
mov
movsl
repnz
sub
dec
test
lods
inc
mov
shl
fwait
xchg
or
jae
insb
mov
stc
lea
clc
mov
jb
btc
mov
outsl
and
mov
xor
jo
insb
pop
mov
mov
or
xor
push
in
jp
insb
mov
rcrl
add
insb
cwtl
push
stc
js
lods
lock
test
ljmp
iret
lret
roll
and
and
arpl
dec
aaa
xchg
int3
insb
pushf
ret
sub
inc
mov
xor
jae
std
fldcw
mov
cmpsb
adc
imul
inc
cmc
hlt
push
sbb
insb
divl
in
imul
lahf
rorb
aam
fdivrl
inc
insb
mov
cmp
sbb
mov
sub
out
pop
flds
cwtl
sub
cmp
in
push
add
xchg
scas
mov
out
push
mov
inc
xchg
jne
mov
rep
mov
pusha
mov
pop
mov
ljmp
push
pop
pop
push
lods
inc
pop
jmp
jns
leave
mov
hlt
inc
sub
fildll
mov
adc
lcall
mov
xor
js
mov
imul
lods
stos
in
insb
or
lods
add
dec
adc
insb
cld
or
mov
jp
pop
js
cvtdq2ps
or
imul
pop
stos
push
insb
dec
fsubs
es
xchg
add
or
push
insb
pusha
jae
adc
inc
insl
imul
fs
xor
insb
stos
fwait
adc
popa
mov
mul
mov
add
xchg
ss
lea
repz
mov
mov
cmp
insb
lahf
push
in
sub
xchg
xor
lods
push
fldenv
adc
add
sub
loop
fwait
ror
xchg
hlt
mov
lahf
imul
cmp
inc
xchg
mov
fisttps
shll
std
lret
xor
cmp
les
repnz
xor
xchg
cmp
xor
cld
sub
insb
cltd
mov
sbb
test
adc
cmpsb
add
sbb
inc
fwait
add
add
dec
sub
nop
stos
insb
sbb
adcl
mov
xchg
mov
or
xor
dec
xchg
add
sub
insb
adc
mov
ss
dec
xor
or
cmp
int3
or
mov
cwtl
lds
and
imul
jge
pop
lock
push
pop
pop
jo
mov
scas
jmp
xlat
sbb
pop
imul
push
inc
mov
ret
mov
insb
hlt
test
in
jg
sub
mov
pusha
cmp
pop
sbb
sbb
push
adc
mov
dec
or
fcmovnu
mov
lret
inc
insb
call
xor
push
dec
mov
lahf
xor
leave
jmp
pop
ljmp
addw
push
imul
lods
fistpl
mov
xchg
lds
pop
mov
inc
idiv
into
cmpsl
insb
in
mov
push
insb
outsb
mov
dec
arpl
je
insb
pusha
mov
adc
movsb
pop
repnz
pushf
imul
inc
insb
mov
mov
call
jp
das
repz
pusha
lods
xchg
lock
psubd
imull
out
and
repz
inc
outsb
clc
enter
hlt
shrl
hlt
sbb
mov
mov
push
imul
rep
and
loopne
mov
fmul
lds
jge
sub
cmc
sub
adc
sti
sub
into
jnp
push
aas
adc
adc
out
pop
sbb
jp
adc
lret
lahf
mov
insb
movsb
dec
and
insb
clc
cli
lahf
pop
jge
daa
dec
add
or
mov
sbb
insb
pop
adcl
push
shr
repnz
add
insb
cmp
xor
inc
mov
insb
lock
sub
jge
adc
push
fcoms
in
mov
jp
insb
data16
mov
call
pop
orb
mov
test
imul
idivl
mov
out
stc
lods
insb
icebp
add
jmp
lea
mov
insb
shl
mov
ljmp
aas
jmp
movsl
les
inc
cmp
ljmp
dec
mov
insb
xchg
mov
push
jle
insb
sub
rorl
fmull
in
mov
clc
push
ficoms
gs
sbb
call
jecxz
push
mov
insb
mov
shrb
test
hlt
negb
jo
dec
xor
and
lret
mov
insb
and
xlat
xor
insb
out
pop
or
outsb
add
aam
dec
xor
jecxz
stos
insb
repz
push
xchg
cmp
sub
xor
fldcw
xor
fdivrs
das
or
int
pop
mov
in
sub
jl
and
cwtl
insb
mov
outsb
je
pop
push
xchg
dec
jge
pop
leave
inc
xchg
ja
push
stc
mov
xor
lahf
jae
fs
es
dec
sbb
and
or
sub
sbb
cmpsl
xchg
imull
shll
adc
in
pop
aad
push
cld
ja
insb
xchg
es
sbb
test
popf
push
pop
or
iret
fsubrs
jge
insl
pmaxsw
insb
jae,pt
xchg
rorl
insb
rclb
jmp
gs
mov
lret
repz
arpl
cmp
push
pushf
dec
pop
icebp
insb
or
and
shrb
add
add
arpl
sub
outsl
insb
daa
dec
sub
or
in
push
cli
lods
insb
rorb
jl
insb
test
mov
insb
shrl
mov
stos
dec
stc
sub
out
pop
in
lods
sbb
insb
cltd
xchg
inc
in
jmp
xchg
fsubrl
stc
enter
nop
push
aad
sbb
lods
movsb
ljmp
xor
test
cli
aas
out
and
das
adc
xor
push
dec
mov
fwait
cmc
aam
inc
fdivl
lcall
fbstp
jle
sbb
iret
xlat
pusha
adc
dec
jbe
fldcw
shrl
loope
push
xor
ja
gs
hlt
fucomip
cli
test
insb
fdivrl
test
add
popa
jno
push
iret
pop
setle
mov
fildll
jnp
jecxz
inc
xchg
pause
imul
test
pop
mov
sub
push
jns
xor
leave
fwait
insb
jp
ja
cwtl
in
jae
sbb
sbb
pop
iret
call
insb
jns
je
mov
jnp
and
mov
lahf
test
stos
outsl
insl
imul
aam
insb
pop
jnp
les
ljmp
outsl
cmp
cmp
test
jns
lods
insb
push
cmpl
adc
addr16
jnp
push
fwait
clc
inc
das
jne
dec
insb
sbbb
jge
adc
cltd
pop
push
test
in
xor
sub
cmp
adc
mov
and
inc
mulb
or
test
pushf
out
push
rorb
insb
cwtl
lods
mov
add
sbb
sub
dec
and
in
mov
aam
add
push
add
test
cmp
insb
icebp
mov
lock
in
mov
lahf
pop
inc
adcb
insb
outsb
jge
push
xor
not
insb
lret
xchg
js
mov
add
or
incl
cmp
insb
roll
sub
ss
rcrb
inc
in
arpl
dec
jl
mov
sub
and
insb
jg
mov
cmp
add
das
push
in
xchg
push
mov
imul
mov
out
fisubrs
mov
mov
mov
sbb
repnz
add
andb
jl
add
mov
dec
mov
data16
icebp
aam
shlb
fiaddl
dec
pusha
lret
fildll
mov
jmp
cld
jns
or
js
insb
push
in
mov
insb
mov
subl
lret
movsb
in
sub
insb
popa
fdivs
push
idivl
aaa
pop
lahf
ret
ljmp
in
pop
fdivl
pop
dec
gs
scas
and
mov
dec
in
sbbl
pop
mov
sbb
insb
dec
adc
mov
aam
insb
cmp
scas
and
push
mov
insl
xchg
jmp
push
mov
out
gs
lahf
or
adc
std
mov
out
imul
dec
sti
jae
push
mov
mov
in
mov
jbe
data16
adc
es
sub
ret
or
std
imul
sbb
lret
cmc
jl
sbb
mov
xchg
cld
incl
mov
insb
xchg
loopne
xor
outsl
inc
test
push
pop
mov
jns
out
insb
jp
and
push
loopne
ds
fcomps
lods
lock
xchg
ret
or
or
test
imul
insl
cld
lods
cmp
cmc
sub
jmp
dec
in
popa
jns
out
ljmp
fs
imul
insb
sahf
dec
aas
in
test
mov
fs
dec
ret
push
inc
pop
cmpsl
insb
rorb
mov
lods
mov
cmp
sub
xchg
adc
popf
push
les
hlt
insb
shr
sub
cmpsb
mov
jl
jae
jnp
and
jp
cmp
ret
ficoms
ret
stos
jle
pop
add
test
clc
xor
fldt
call
insb
into
mov
jnp
insb
test
int3
cmp
shrb
gs
mov
repz
add
or
mov
sub
jo
pop
cltd
push
add
mov
orl
xor
and
lods
dec
cltd
pop
test
insb
fstps
ret
out
lahf
lret
in
sbb
or
inc
xor
insb
sbb
jo
fisttps
fisubrs
sbb
mov
sbb
insb
mov
nop
fs
jmp
mov
push
scas
lods
fidivs
in
jge
and
push
cwtl
push
insb
loope
mov
inc
cmpl
loopne
rcll
inc
push
add
popf
leave
popa
lahf
imul
arpl
jle
xchg
mov
lcall
test
js
xchg
mov
repnz
stc
loope
jae
mov
jge
and
xor
mov
dec
insb
mov
xchg
psubq
cs
mov
jecxz
fisttpll
std
imul
leave
scas
movsb
mov
sbb
mov
and
rolb
iret
jge
xchg
leave
cmc
in
repnz
pop
mov
mov
jno
cmp
mov
or
mov
gs
std
lods
clc
sbb
mov
insb
fstps
mov
add
repz
lret
fsub
sbb
insb
ficoml
imul
jl
mov
xchg
outsb
cmp
pop
das
jnp
cmc
dec
mov
outsb
les
insb
xor
dec
iret
lods
sub
mov
in
mov
add
xchg
je
lret
jno
cmp
insb
test
adc
xchg
xlat
mov
insl
hlt
push
shrl
push
mov
cmp
jns
dec
test
adc
fidivrs
mov
jbe
xor
outsl
jp
adc
mov
adcb
adc
je
in
xor
jnp
mov
or
pop
imul
in
and
cmc
nop
imul
lea
fnstenv
jmp
push
pop
scas
xchg
loope
pop
sub
adc
inc
sbbl
jb
cmp
popa
or
dec
cmp
stos
bound
rclb
iret
outsb
nop
sub
dec
push
in
jmp
imul
rclb
add
mov
arpl
sub
sbb
lods
jo
jne
outsl
jl
push
in
or
aaa
dec
iret
push
lcall
mov
mov
gs
or
inc
repnz
inc
xchg
lock
cli
addr16
push
push
in
adc
fldl
lea
call
pop
push
subb
mov
inc
mov
in
int3
adc
inc
cltd
ret
jle
data16
lret
rolb
sbb
lea
mov
insb
xor
xchg
push
inc
cwtl
int
test
dec
cli
add
mov
add
push
jecxz
dec
insb
xchg
mov
sahf
out
insb
mov
jo
mov
imul
fwait
mov
cmc
inc
int3
js
insb
mov
data16
imul
popf
pop
pop
lret
inc
add
sbb
insb
lahf
or
test
insb
jo
adc
out
fs
jl
insb
and
in
jae
sub
pop
insb
jb
or
sbb
fnstenv
inc
sbbb
insb
sub
inc
rcrl
mov
lcall
fcompl
jmp
test
mov
mov
icebp
jo
insb
add
push
push
pop
push
xchg
sahf
mov
cmp
and
shrl
mov
push
aad
fldt
push
jecxz
cmc
addr16
je
insb
jbe
mov
insb
insl
stos
mov
xchg
push
test
push
es
jo
xor
dec
jns
xchg
xchg
insb
and
add
xchg
jp
das
cs
fldcw
imul
mov
and
shrl
push
bound
imul
mov
shl
xor
je
insl
push
daa
iret
insb
aad
dec
dec
stc
js
insb
xchg
xchg
jmp
cltd
insb
iretw
ret
inc
adc
mov
jg
mov
rolb
push
mov
into
test
mov
in
pusha
popa
dec
sub
sub
rorb
mov
and
insl
subl
stos
mov
lock
push
lret
mov
jb
fcompl
mov
inc
cmp
mov
or
cmpsl
fstpt
imul
push
mov
rcrb
ljmp
fsubrs
fsts
test
push
add
insb
cmp
add
stos
out
add
and
das
shl
pop
insb
mov
shrb
add
pop
mov
push
mov
insb
mov
roll
push
fsubr
lea
outsb
call
xlat
insb
cmp
pop
push
aam
pop
ja
shrl
insl
gs
or
lahf
stc
ret
mov
push
xchg
cwtl
or
dec
repz
ret
fs
jbe
dec
movsb
sbbl
popa
test
mov
pop
or
mov
cld
push
out
add
jle
gs
cmp
jecxz
fs
stos
popa
pop
sbb
dec
mov
dec
mov
shrl
insb
mov
jo
shrl
jge
ja
cmpsl
cmpsb
insb
pop
pop
mov
or
insb
xor
loopne
rcll
mov
rorb
aad
mov
insb
xor
movsb
int
mov
sbb
inc
insb
jne
shlb
insl
sbb
mov
mov
jecxz
lods
out
xchg
jmp
adc
add
popw
ret
cmp
outsb
xchg
mov
insb
popa
xchg
sub
mov
fwait
jb
movsl
icebp
imul
adc
insb
mov
adc
inc
scas
jne
or
jl
jp
pop
or
xor
arpl
in
lods
dec
inc
insb
scas
ss
mov
popa
in
fwait
sahf
xchg
out
sbb
insb
sub
push
fidivs
dec
lahf
sbb
hlt
and
sti
cli
stc
xlat
movsb
push
push
or
push
push
or
sub
icebp
mov
jb
ret
xchg
pushf
stos
loope
addl
xchg
pop
insb
adc
js
add
vucomiss
push
jo
push
cmp
data16
mov
inc
out
mov
add
pop
arpl
repz
jmp
cli
mov
adc
das
stc
inc
or
ja
int
adc
pop
push
scas
aas
jge
insb
pop
dec
jno
mov
mov
in
dec
cmp
dec
pop
push
imul
insb
sbb
daa
pop
and
add
arpl
test
xor
mov
mov
cmp
push
add
iret
adc
vdivpd
add
ss
insb
dec
imulb
push
pop
out
aad
imul
jmp
push
cltd
insb
bound
push
lea
mov
inc
lock
popa
pop
data16
insb
jg
push
adc
insb
imul
lods
repnz
nop
pusha
add
ret
mov
mov
pop
ds
rcrl
shl
jge
test
mov
cmp
xor
add
jnp
imul
pop
mov
inc
aam
fcomps
test
adc
out
insb
cltd
movsb
in
pushf
mov
pusha
ljmp
add
out
test
loope
pop
arpl
ret
dec
sub
mov
subb
ja
inc
gs
bound
mov
dec
push
fucomip
shll
mov
insb
movsb
jle
cmc
mov
push
fcmovnu
incb
mov
mov
inc
out
sbb
insb
mov
daa
or
cmp
gs
aad
aad
lods
pop
mov
and
fcmovu
xchg
shlb
pop
adc
cmp
jo
sarb
cmp
enter
popf
std
sub
rolb
dec
fisttpll
sub
xorl
dec
mov
pop
pop
xor
test
idivb
mov
cltd
push
insb
sbb
xchg
imulb
sbb
inc
inc
jle
aaa
mov
fsubrl
iret
mov
push
shrl
loopne
test
add
in
push
in
push
enter
push
insb
mov
std
and
insb
ss
test
jne
insl
jg
in
mov
jle
or
insb
sub
and
pop
mov
xchg
fsubrl
or
fildll
push
xchg
pop
xor
pop
and
ficomps
inc
sahf
fdivrs
lcall
lods
sbb
mov
jle
xlat
push
pop
andb
pop
xchg
mov
test
out
sbb
je
xchg
mov
lfs
push
xchg
inc
data16
push
insb
addr16
or
mov
pop
dec
inc
fdivrl
lods
inc
xor
outsb
mov
insb
and
add
inc
mov
mov
jl
adc
addr16
mov
jbe
cld
out
stos
sti
add
xchg
insb
dec
push
mov
xor
dec
imul
adc
jp
mov
outsl
xchg
jne
mov
inc
mov
divb
ret
dec
hlt
decl
or
mov
insb
stos
movsb
call
imul
mov
sbb
test
lret
insb
ss
aaa
lret
mov
lcall
cmp
aas
ds
xor
int3
sbb
ds
push
rcll
pop
add
push
adc
outsl
pop
rep
insb
icebp
lock
dec
cld
movsb
insb
inc
out
jg
ficomps
jns
jp
dec
loopne
test
jl
les
outsb
insl
sbb
scas
test
jns
adc
gs
mov
scas
dec
test
sti
xor
dec
jbe
inc
sbb
cs
sub
jae
jl
insb
popa
into
mov
jns
push
insb
inc
cmp
inc
out
jmp
dec
inc
inc
or
loope
aas
xor
call
adc
movsb
gs
enter
insb
xor
cmpsl
push
sub
and
cld
sub
jb
insb
in
dec
fstpt
dec
mov
insb
push
or
or
mov
dec
leave
stos
movsl
hlt
cmp
push
gs
cld
xchg
test
mov
insb
lret
dec
jae
cmp
loopne
add
dec
jle
insb
outsb
cmp
stc
in
sbb
andb
gs
fldl
daa
iret
insb
push
gs
dec
xchg
jb
imul
sub
sbb
loope
dec
stos
xor
ja
cmpsl
std
adc
aaa
out
and
aad
ficoms
xor
pop
pop
arpl
lock
insb
xor
jmp
lods
mov
dec
loop
out
or
lods
dec
imul
push
and
pop
xor
push
in
mov
sahf
popf
insl
push
insb
out
jnp
aam
rclb
gs
addr16
ja
xor
lret
or
insb
movsl
xchg
inc
inc
pop
cmp
insb
cmpb
push
inc
clc
shrb
mov
jmp
subl
xlat
adcl
jl
xor
enter
mov
inc
in
dec
imul
rcrb
cmp
insb
jg
in
adc
imul
xchg
add
insb
shl
mov
xchg
pusha
cmp
xchg
nop
in
subb
insb
shlb
xor
aam
insb
inc
cmp
and
imul
inc
rorb
mov
and
or
addb
jp
pop
cwtl
insb
ja
dec
cli
fadd
fisubrs
add
jbe
cwtl
insb
btc
mov
fstps
inc
push
les
imul
hlt
in
clc
cld
lea
imul
mov
lea
ljmp
incl
adc
insb
or
sub
inc
imul
jle
cli
cmp
fxch
mov
movsb
cs
xor
sub
xchg
insb
cmpsb
fldt
inc
jle
push
inc
dec
dec
insb
inc
jb
xchg
xchg
pop
sbb
or
data16
push
je
movsl
mov
mov
out
adc
sbb
insb
js
out
iret
addr16
gs
sbb
xchg
popf
mov
pop
pop
jle
jge
xchg
cmp
pop
xor
pop
call
test
jbe
rol
sbb
jmp
fisubrl
mov
cli
pop
sub
dec
add
push
or
adc
scas
out
out
jecxz
push
imul
sub
dec
sbbl
dec
push
in
imulb
mov
pop
ror
sub
or
int
es
mov
xchg
enter
insb
jg
sub
movsb
add
mov
imul
mov
orl
adc
push
add
popa
fcoms
xlat
push
mov
addb
mov
jl
loope
pusha
fucomip
jnp
sbb
std
push
test
shrb
data16
sbb
push
lods
mov
push
pop
subl
outsl
insl
add
cmp
mov
jbe
out
jb
or
loope
iret
push
sbb
sti
stc
in
in
inc
add
fimull
and
fwait
jl
jg,pn
adc
xor
test
jge
jno
in
dec
lret
jle
cmpsl
xlat
add
lahf
pop
stos
cmp
dec
and
xor
sahf
jle
cmpsb
mov
push
pop
stos
pop
faddl
in
inc
shl
fnstenv
jne
divb
jmp
cwtl
cwtl
movsb
sbb
jecxz
divl
in
push
jecxz
or
dec
lods
insb
mov
in
in
xor
mov
sub
add
mov
and
or
leave
mov
adc
andb
cs
mov
in
cld
jmp
xor
in
les
aas
push
or
cli
test
push
or
pop
add
dec
fstl
sub
bound
push
imul
mov
mov
loop
push
mov
jp
insb
pop
cmc
mov
mov
jle
mov
and
test
sahf
icebp
fistpl
mov
nop
out
jmp
mov
and
jl
fisubrs
gs
add
inc
jge
jno
insb
dec
daa
fildll
insb
sub
bsf
rorb
push
jl
sub
dec
push
mov
inc
insb
push
imul
or
push
insb
and
sbb
mov
je
aaa
xchg
sub
mov
sahf
fldcw
mov
loopne
inc
xchg
insb
lahf
jp
xchg
neg
aaa
fwait
lret
iret
mov
xor
in
shl
inc
imul
je
test
aad
fwait
in
mov
mov
mov
ficompl
insb
cld
scas
testb
dec
fstps
jecxz
push
test
arpl
in
mov
and
mov
fcoml
push
insb
adcl
xchg
insb
movsb
adc
mov
and
insb
sbbl
insb
loop
sbb
icebp
push
cmpsb
pop
xchg
loopne
mov
inc
aam
popa
jp
mov
aad
insb
push
cmp
dec
lods
stos
mov
mov
inc
repnz
adc
sub
or
insb
outsb
ds
adc
push
insb
movsb
xchg
mov
out
sti
rcrb
xor
cmp
icebp
shll
mov
pop
mov
scas
mov
insb
adc
lods
or
cmp
jne
mov
jecxz
xor
adc
xor
push
cmpl
pushf
out
jns
jo
xchg
add
cmp
sti
pop
insb
hlt
cmc
sub
sub
ljmp
xor
in
rcrb
lcall
cmpb
or
and
pop
outsl
pop
test
cli
imul
inc
addr16
add
or
test
sub
inc
push
sbb
imul
insb
lahf
push
jmp
cmpsb
insb
sti
pusha
addr16
fdivs
lods
out
lock
xlat
insb
or
pop
mov
repz
sbb
imul
cmp
pop
cmp
xor
gs
pop
scas
es
aad
and
popf
insb
and
iret
movsl
inc
ss
aad
sarb
das
xor
popf
test
inc
push
sbb
push
insb
cs
inc
cmp
and
xor
jmp
movsl
push
shr
fiadds
mov
mov
cltd
push
xchg
mov
pop
jl
imul
xor
repnz
imul
jl
or
imul
sarl
loopne
insb
sbbl
insl
dec
fidivrl
fbstp
mov
ret
jecxz
insb
mov
dec
push
jae
push
xchg
push
pop
pop
pop
cmpsb
xlat
pop
sbb
cmp
jle
dec
insb
loopne
lea
fwait
sbb
repz
push
rcrl
jge
insb
inc
lret
cmp
mov
mov
insb
jb
xchg
sbb
iret
pop
adc
jge
mov
pop
in
mov
xor
in
test
fcompl
ds
fsubrl
call
iret
and
pop
sub
loope
stos
dec
push
cmc
imul
xchg
inc
pop
decb
mov
ja
lcall
das
sbb
add
insb
ds
and
xor
js
popa
dec
aaa
cmc
dec
fldl
mov
mov
gs
pop
ljmp
mov
jns
adc
stos
mov
mov
iret
idivb
xchg
nop
insb
add
stos
mov
iret
aas
and
jmp
adc
sub
dec
ljmp
cmp
sub
sub
ret
xor
push
jno
insb
mov
adc
insb
loop
push
add
pop
out
cmp
jb
insb
push
xor
add
es
adc
adc
sbb
insb
xor
push
mov
imul
xor
pop
jno
and
xchg
push
lret
adc
sbb
fsubrl
scas
add
dec
jo
insb
std
cmc
pop
mov
jno
imul
adcb
pop
sbb
xchg
dec
pop
insb
inc
jno
mov
insb
inc
das
pop
outsb
push
dec
push
insb
add
shll
icebp
in
pop
lods
mov
call
popa
mov
xor
outsb
add
test
sbb
xlat
mov
imul
mov
adc
insb
dec
mov
sub
push
imul
sbb
sub
cmpsb
mov
insb
push
jl
fadd
jns
lret
gs
rcl
scas
or
jle
jecxz
push
inc
mov
int
xor
cmpsb
insb
roll
ds
jb
inc
int3
or
les
in
ret
xor
daa
fwait
es
aad
lods
add
out
sub
insb
mov
cmp
xor
insb
lret
mov
ljmp
lock
or
and
mov
and
xchg
sub
jo
jno
add
addl
dec
fildl
call
push
insb
popf
mov
stos
addb
jle
push
lods
out
minps
inc
lret
clc
arpl
adc
xchg
enter
mov
cmc
add
lret
dec
add
sub
imul
xchg
inc
repnz
jge
lds
push
inc
movsb
pop
stos
jle
idiv
addr16
out
in
push
arpl
out
shlb
insl
insb
es
mov
fistps
in
mov
jnp
jmp
mov
adc
data16
mov
add
xchg
jge
sub
test
adc
cld
or
dec
stc
rcl
gs
add
sbb
xor
iret
and
mov
xchg
inc
shrb
fs
ret
int
xchg
fstl
pop
outsl
dec
or
aad
imul
cmpsb
sub
sub
insb
sub
pop
or
jo
mov
fcomp
imul
dec
inc
lods
jne
iret
xchg
int3
mov
insb
loopne
fcoms
pop
push
lahf
imul
adc
add
insb
and
dec
xor
xchg
imul
sub
jbe
sbb
inc
pop
ss
push
mov
pop
sub
in
or
or
insb
cmp
dec
xchg
fcmovnu
mov
cltd
iret
mov
imul
mov
mov
lret
xchg
das
lret
in
popf
mov
movsb
pop
xchg
sbb
adc
cmpsl
pop
adc
pop
outsl
ret
cmc
fwait
inc
insb
fcompl
lea
mov
jb
insb
dec
int3
ljmp
pusha
in
sub
loop
insb
outsl
pop
xor
mov
sub
cmp
sub
stos
mov
loope
or
lahf
into
adc
jl
xor
in
push
xchg
test
sti
shrb
xchg
xchg
test
insb
ljmp
mov
jne
mov
inc
pop
sbb
and
aad
imul
je
xlat
imul
push
mov
push
insb
ficoml
fwait
mov
xchg
aas
lea
insb
jecxz
sbb
int
push
dec
scas
movsw
inc
adc
rorb
lock
loopne
jae
insb
aad
repnz
mov
pop
sub
push
xchg
insb
sub
adc
mov
pop
insb
xlat
bound
cmpsb
fstpl
imul
jno
pop
or
xor
cmp
bound
mov
jbe
mov
ss
test
pop
leave
fwait
pop
mov
fiaddl
pop
insb
cmpsl
pushf
mov
and
jnp
xchg
cmp
xchg
hlt
popf
cwtl
mov
mov
sbb
add
in
popf
jl
fstps
cmp
xchg
pop
cld
lds
adc
popa
xorb
mov
out
mov
imul
out
sbb
scas
test
cld
loope
imul
imul
cmp
sahf
js
pop
jns
addr16
sbb
push
lods
nop
je
and
push
sub
xor
fs
insb
jns
xchg
cmp
cltd
push
aad
in
cmc
jle
jb
sub
cld
xchg
pusha
ret
adc
movsb
pushf
push
pop
add
hlt
dec
adc
mov
inc
or
cmpsb
mov
xor
test
jnp
pop
and
jno
insb
xchg
cltd
mov
cli
movsl
cmp
dec
cmp
jb
mov
push
popa
lods
das
dec
pop
orl
ds
mov
enter
jl
insb
jne
xchg
stos
lcall
notb
loop
sarl
je
imul
sub
cmp
nop
in
dec
imul
xor
cmp
lods
dec
addr16
pop
sub
pusha
pop
lock
and
pop
out
test
insb
and
cmp
sub
aas
nop
add
insb
lods
push
xchg
jl
popa
push
xchg
insb
pop
cmp
lcall
cmc
push
insb
or
iret
jecxz
push
push
aaa
xchg
mov
xor
insb
imul
ljmp
addr16
and
pop
jno
scas
data16
insb
fiaddl
and
cmp
das
into
nop
adc
jae
in
cmp
insb
add
xchg
ret
add
sbb
inc
out
scas
dec
insb
mov
lret
fmuls
in
inc
ret
out
insb
push
jae
add
mov
push
dec
jle
cmp
pop
nop
fwait
shl
sub
xor
mov
jmp
push
fs
cmp
jp
mov
lods
into
jne
loopne
js
ror
mov
or
adc
pushf
push
xchg
mov
out
push
mov
jecxz
test
lock
out
or
sbb
lret
in
dec
dec
jae
ds
in
pop
lods
imul
jo
imul
insb
cmp
les
add
ret
or
and
mov
aad
sbb
in
xchg
add
add
es
mov
and
pop
sub
xchg
pop
addr16
push
adcl
jae
rorb
insb
out
or
js
xchg
ljmp
in
clc
aad
rorb
adc
ss
xor
in
xchg
test
and
xchg
andb
and
clc
fimull
pop
mov
inc
jns
jno
in
sbb
insb
adc
inc
mov
imul
ret
mov
jns,pn
insb
stc
mov
sahf
mov
icebp
mov
adc
insb
dec
push
shlb
cli
fdivr
pop
imul
testl
hlt
push
xchg
scas
rcrl
ret
loop
insb
jnp
icebp
imul
adc
ja
mov
fisubs
mov
imul
cmpsb
jne
orl
pop
stc
dec
sbb
and
fistpll
cmp
mov
lods
xchg
jmp
insb
inc
pop
sub
lock
in
stos
sbb
mov
adc
out
into
insb
pop
mov
das
and
mov
xchg
adc
pop
lahf
dec
or
test
je
mov
jnp
mov
out
insb
mov
int
insb
jb
mov
leave
jnp
mov
pushf
dec
or
insb
les
push
iret
rcll
shrb
push
clc
jne
enter
jle
pop
pop
push
stos
dec
push
pusha
mov
push
loopne
mov
jecxz
mov
in
pop
pop
out
push
sti
dec
int3
mov
add
rcl
add
in
in
cmpsl
sbb
inc
insb
xchg
lock
push
cmpsl
sti
in
dec
sbb
jae
sahf
leave
out
insb
or
lea
dec
or
jl
push
sbbl
movsb
jb
jno
lret
and
mov
cmpsb
sti
jle
sbb
mov
fisubrs
imul
add
or
fcoms
sbb
add
cmp
sbb
nop
insb
xchg
push
loope
aas
inc
adc
or
ret
push
movsl
gs
jl
inc
push
xor
xchg
add
stc
cmp
push
adcl
push
gs
adc
int3
or
ds
inc
cwtl
mov
cmc
insb
xchg
in
xor
daa
in
test
dec
xchg
aad
repz
repz
jo
out
ret
out
dec
insb
dec
lahf
dec
fimull
pop
mov
xor
leave
insb
insl
inc
xchg
into
add
insb
add
popa
cmp
sbb
jg
lock
cmp
ficoms
or
dec
insb
pop
pop
nop
lahf
stos
xchg
fldt
push
adc
shl
insb
xchg
mov
cltd
mov
movsl
in
mov
cmp
insb
push
adc
pop
sbb
jl
std
sub
insb
ret
mov
push
repz
andl
fcompl
je
jno
push
or
icebp
pusha
leave
shrb
in
lea
outsb
mov
jb
popf
or
data16
in
sarl
test
outsl
notb
cmp
add
jle
adc
push
insb
icebp
mov
hlt
dec
insb
xor
cmpsb
jmp
arpl
push
push
lcall
add
repz
test
test
xor
mov
push
lds
pusha
jns
lret
loop
sbb
stos
push
mov
push
xchg
shld
add
cmpsb
bnd
mov
pop
lcall
mov
call
dec
cmpsb
xor
addl
imul
or
lret
imul
push
add
jmp
inc
lock
insb
mov
cmp
shll
cmpsb
jmp
lods
out
cwtl
add
sub
leave
das
stos
sar
mov
mov
cli
std
sub
iret
or
and
lods
sub
mov
out
or
pop
bound
fldenv
sarb
insb
cmp
mov
insb
jbe
cmpl
sub
jp
sahf
outsb
call
js
cs
insb
xchg
xor
shrb
mov
idiv
imul
in
push
push
push
repnz
out
cmpb
arpl
xor
mov
shrl
jle
push
xchg
pop
rcl
mov
xor
mov
lds
arpl
aas
imul
push
leave
xchg
cmp
sub
mov
mov
rcl
xchg
insb
ret
mov
gs
sbb
sub
xor
jl
insb
pop
jmp
sub
insb
movsb
sbb
jge
sbb
mov
in
rolb
popa
sbb
fucomp
or
ja
mov
inc
cmpsb
negb
repnz
sub
jg
shl
out
lea
mov
insb
movl
imul
push
jae
mov
jle
mov
inc
insb
add
lods
test
pmulhuw
dec
ss
imul
insb
sub
divb
inc
dec
aad
fsubl
sub
loop
gs
mov
add
cltd
ret
add
push
pop
xchg
dec
inc
or
repz
pop
push
and
and
ds
xlat
and
xchg
insb
movsb
arpl
and
inc
mov
outsl
cmpsl
scas
test
or
push
xor
push
mov
sbb
cmpsb
cmp
sbb
dec
push
push
add
mov
push
mov
dec
push
jecxz
ficompl
insl
mov
repnz
mov
fldt
gs
push
je
add
lock
sti
roll
sub
dec
mov
sbb
push
inc
and
shrb
dec
iret
rorb
insb
mov
or
cmpsb
pmovmskb
insb
and
insb
enter
in
and
mov
xorl
shll
inc
enter
inc
imulb
pop
cmp
in
or
sbb
dec
mov
mov
fsubrl
or
and
jle
imul
inc
ja
xchg
and
test
mov
push
mov
inc
mov
dec
pop
cld
mov
cld
test
push
mov
imul
stc
pop
jnp
cld
cwtl
dec
insb
and
xor
pop
sahf
insb
push
mov
push
sbb
insb
test
sub
fbld
loop
outsl
push
or
cmp
push
insb
push
jecxz
sbb
popa
push
popa
pop
pop
pop
add
pop
clc
insb
aad
call
mov
pop
xchg
inc
imul
xchg
push
xor
imull
fists
mov
sub
mov
stos
push
push
fwait
in
insb
ret
ja
shrb
push
dec
mov
pop
add
int3
imul
jge
push
xor
and
push
pop
pop
scas
mov
push
jns
js
fstpl
out
divl
in
pusha
adc
jl
test
pop
out
je
pop
mov
cmc
push
cmp
loope
dec
test
inc
bound
mov
sbb
jne
mov
stos
dec
addl
out
or
shlb
mov
out
fiaddl
roll
shlw
ja
sub
test
dec
in
fstp
bound
addr16
jb
mov
lds
mov
or
int
test
cs
das
shrb
mov
bound
sub
push
std
and
xchg
aam
addr16
mov
inc
adc
sub
mov
lea
scas
testl
pop
fwait
pop
xchg
mov
pop
mov
lret
out
lods
ffreep
sub
iret
fs
outsb
xchg
stos
test
in
pop
les
and
push
fildll
int
adc
bound
jmp
jb
cld
sbb
mov
repnz
int3
add
rorl
xchg
xchg
out
movsl
stc
out
cmc
fisubrs
lods
lock
ret
daa
imul
mulb
sub
sbb
insb
lods
rcrl
or
mov
sub
insb
subl
lock
ret
test
rcrl
imul
push
pop
je
loop
jae
fadds
sbb
add
cmp
jmp
xchg
cmp
mov
orl
aaa
cmc
jle
outsb
insb
jbe
ret
pop
lcall
icebp
lods
adc
shrb
fst
mov
mov
bound
shlb
imul
pop
pop
lahf
sub
insb
lret
test
das
popf
fs
in
insl
outsl
lock
call
insb
mov
in
jl
lea
or
mov
sub
gs
mov
movsl
jge
fsubr
dec
fldt
xchg
inc
push
clc
dec
and
mov
je
xchg
mov
faddl
notb
shrl
mov
js
insb
cld
or
cmpsb
xor
push
xor
gs
inc
add
pusha
push
cmpb
push
and
imul
insb
pop
ds
lret
sbb
pop
adc
inc
inc
adc
int3
cmp
shrb
push
insb
dec
or
imul
fldcw
pop
stc
outsb
fistpl
or
add
and
pusha
insb
cli
cmpsb
mov
pop
sbb
mov
ss
ja
loopne
insb
mov
hlt
jp
push
adc
insb
push
pop
bound
addr16
mov
add
lods
mov
jge
dec
filds
stc
and
dec
sub
andb
dec
out
sub
xlat
and
insb
push
repnz
fildl
insb
cld
mov
mov
sbb
fwait
pop
hlt
xor
aaa
mov
iret
jmp
cmc
cwtl
inc
adc
gs
xchg
std
cmpb
jmp
insb
or
xor
call
xchg
sbb
cmp
insb
test
dec
xorb
or
push
sub
mov
mov
mov
mov
push
pop
xchg
shl
or
mov
and
sbb
mov
je
sbb
mov
cli
sub
in
adc
sub
lcall
ja
out
mov
mov
mov
sbb
mov
imul
push
cli
jnp
sub
mov
ret
jl
push
xchg
in
xchg
jnp
xor
jb
jmp
xchg
and
ss
mov
dec
aad
pop
and
shrl
inc
in
inc
add
aas
insb
repnz
insb
into
daa
insl
dec
sub
mov
clc
xor
int
fsubl
js
insb
jg
cmc
or
mov
shrb
je
pushf
jg
cs
imul
ss
int
dec
bound
out
stos
mov
push
lret
mov
int3
xchg
push
or
xchg
lods
sub
xchg
pop
std
jecxz
into
push
imul
clc
cwtl
pushf
mov
jle
frstor
in
cmp
hlt
sub
cmp
push
insb
stos
jge
jnp
ja
leave
insb
jno
lock
dec
add
imul
fsub
divps
xchg
mov
insb
ret
cmc
xchg
sti
mov
push
cmp
pop
rclb
add
ss
insb
sti
push
outsb
xor
jnp
sbb
mov
test
lods
test
sub
stos
sbb
mov
xchg
clc
lahf
jl
jp
stc
insb
cmp
xor
xchg
push
insb
cwtl
inc
push
cmp
mov
pop
daa
push
cmp
mov
cwtl
xchg
insb
andl
pop
ror
insb
sti
jle
enter
inc
push
xor
insb
mov
repz
or
dec
push
sbb
lret
imul
sbbb
mov
ljmp
out
jl
insb
xchg
das
pop
xor
out
pusha
out
call
cltd
cld
mov
stc
mov
fstps
sub
push
cli
dec
in
mov
icebp
sub
jns
stos
inc
inc
cmpsl
addr16
jno
pop
sbb
jno
lods
push
sub
insb
push
jecxz
xchg
jne
pop
imul
mov
jl
push
dec
add
mov
std
xchg
insb
test
and
sbb
idiv
mov
push
adc
ja
lret
ret
dec
incb
in
mov
mov
in
mov
or
insb
sub
cld
jo
outsb
and
psubq
fldt
push
in
jo
cld
repz
addr16
sub
inc
outsl
out
gs
push
fcomp
xchg
pop
ss
pop
mov
xor
insl
int
lret
or
js
and
lret
fbstp
jmp
push
insb
dec
fisubl
imul
out
adc
lods
cmp
hlt
push
inc
mov
mov
insb
cltd
pop
ss
mov
loope
fidivl
mov
aas
neg
cmp
mov
xor
imul
leave
lahf
insb
mov
and
insb
xchg
inc
clc
xchg
fdivs
inc
xchg
pop
add
insb
fnstenv
lcall
cmp
dec
adc
or
insb
cmpsb
mov
sub
mov
adc
add
insb
xchg
fs
dec
sbb
insb
xchg
push
xor
roll
mov
insb
dec
rolb
out
mov
rorl
iret
and
lods
popl
int3
ja
push
insb
cmp
ret
add
outsb
bound
imul
jge
cmp
insb
data16
cli
in
rcr
insb
dec
and
mov
pop
push
sarl
in
sub
idivb
cmp
test
negb
mov
insb
shrb
sub
enter
insb
pop
stc
repnz
popf
cld
jp
jbe
insb
jge
dec
repz
scas
outsl
push
pop
daa
je
dec
mov
add
inc
lret
add
shlb
jbe
mov
sbb
in
push
out
mov
lahf
ret
mov
insb
mov
aad
push
in
call
insb
sub
testb
mov
pop
add
adc
add
arpl
jmp
in
dec
ds
jnp
and
scas
test
movsb
and
jl
lods
cmp
rolb
repnz
jp
iret
push
push
adc
movsb
test
xor
adc
pop
lods
xor
push
aas
mov
or
cli
add
add
in
sub
mov
inc
or
jne
or
mov
popf
sub
loope
aad
cmp
std
cmpsb
cs
jb
roll
mov
and
mov
push
addr16
xchg
jl
inc
xlat
jnp
gs
inc
pusha
rcrl
gs
testb
or
push
sbbl
sub
mov
and
sub
into
ret
xchg
inc
andl
imul
xor
imul
jl
out
and
jo
sbb
aas
jne
push
push
das
mov
jne
rclw
in
repnz
dec
daa
ds
and
add
and
outsl
pop
gs
dec
imul
popa
mov
test
in
jg
aam
arpl
sub
mov
adc
ds
mov
and
inc
add
insb
sbb
aad
into
cmp
dec
push
subb
cmpb
roll
in
std
xchg
adc
mov
test
pop
lock
adc
fstps
insb
jno
jp
pop
jb
cmp
mov
dec
shrl
sub
push
xor
jo
and
sub
stc
cwtd
repz
dec
neg
insb
stos
inc
add
xchg
addb
pop
iret
cmp
xlat
pusha
and
mov
ret
insb
mov
dec
push
movsb
orl
daa
movsl
adc
jae
pushf
fwait
or
jo
dec
insb
std
mov
addr16
pop
out
jbe
xchg
add
pop
add
adc
fcompl
dec
insl
add
insb
push
movsl
movsb
jecxz
shrb
shll
mov
sub
pushf
outsb
les
repnz
push
jmp
lods
xchg
in
insb
in
sub
icebp
fs
cli
in
cmp
outsb
out
insb
repnz
fstpt
mov
fdivrl
mov
or
add
sbb
inc
outsb
cmp
xchg
stos
cs
cmp
mov
dec
dec
pop
sbb
in
mov
iret
pop
cltd
jbe
adc
insb
int
push
jl
in
xlat
sahf
mov
gs
insb
sar
mov
imul
shlb
dec
and
lods
mov
jnp
in
xchg
jo
fmull
pop
add
int
insb
dec
cs
repnz
jnp
gs
sub
mov
addr16
xchg
test
imul
out
or
xchg
lods
int3
mov
insb
das
ret
mov
insb
outsl
std
or
clc
and
pusha
sbb
and
pop
imul
insb
inc
push
lock
outsl
insb
push
cmp
pop
sbb
insb
inc
lds
pusha
sbb
mov
jno
dec
insb
and
lret
mov
int
push
imul
gs
mov
insb
out
jns
fcomps
test
and
pushf
push
dec
cs
les
lea
insb
aam
or
sti
dec
fistl
imul
incl
repz
mov
shlb
mov
bnd
dec
lea
pop
push
shrb
imul
imul
push
aad
push
iret
xchg
push
aam
jno
insb
sub
inc
loopne
pushf
push
dec
sub
adc
jmp
out
cmp
stos
pop
std
push
and
mov
lea
push
adc
sub
js
insb
cmp
cli
push
cmp
das
sbb
adc
pop
and
insb
repz
fdivrs
shrb
insb
add
push
pop
insb
andl
loope
sub
insb
in
jmp
push
arpl
rorl
hlt
mov
mov
movsb
jnp
cli
lock
dec
mov
cmp
movsl
insb
pop
cwtl
sbb
push
aas
inc
cmp
sub
or
das
jmp
insb
inc
add
mov
jno
ret
lods
inc
dec
pop
and
test
xchg
jl
movsb
inc
fwait
insb
jae
call
popa
das
jge
in
insb
out
std
fiaddl
dec
movl
mov
sub
das
repnz
test
imul
pop
push
or
inc
cmp
xor
mov
mov
fpatan
insb
out
mov
xor
jg
inc
sub
mov
inc
aaa
inc
mov
sahf
fiadds
insb
loopne
push
imul
sub
lret
rorb
hlt
insb
pop
push
cmpsb
loop
adc
lret
outsb
mov
push
std
sbb
call
sbb
sbb
in
push
lods
sub
popa
pop
mov
sub
test
insb
clc
xchg
inc
add
and
mov
xor
pop
inc
sub
pop
xchg
sbb
dec
mov
in
rcll
and
ret
cmpl
popf
lock
insb
cmc
sar
fcmove
sub
insb
lods
ja
xor
arpl
shr
les
push
mov
sub
in
xchg
dec
or
insb
mov
inc
jns
cwtl
and
mov
mov
jne
addl
fs
pop
sub
mov
pop
xchg
fdivrs
pop
in
cmp
xlat
insb
fstl
repz
imul
dec
gs
fchs
aaa
jae
jecxz
sbb
insb
lar
dec
xor
mov
in
mov
pop
inc
loop
and
mov
es
dec
dec
das
loopne
ret
add
or
cmpsl
fimull
cli
insb
jmp
aas
and
insb
inc
push
lea
mov
lds
je
sbb
ret
cli
insb
mov
jl
push
ret
cmpsl
mov
js
mov
pop
shrb
mov
insb
cmpsl
mov
jg
insb
das
fsub
pop
data16
push
sbbb
xchg
pushf
rorl
int
inc
insb
xchg
movsb
pop
adc
mov
subl
ljmp
cmpsb
gs
rcrb
outsb
pop
push
or
jmp
cmp
int3
add
arpl
fists
out
mov
gs
or
jge
dec
jg
xor
push
push
movsl
add
enter
dec
iret
mov
sub
mov
insb
jl
mov
add
insb
sti
out
cmp
insb
fistps
call
and
out
insb
cmovge
pop
ret
jl
add
movsl
stos
das
pushf
xchg
mov
in
dec
cmp
aaa
aad
xchg
push
addr16
movsl
push
and
jp
adc
cli
mov
inc
sbb
xchg
push
fwait
pop
xor
shr
lods
and
cld
or
lods
add
lcall
adc
icebp
mov
push
test
cli
adc
sub
or
or
and
pop
in
push
jmp
jo
insb
add
cmp
mov
add
fstp
pop
insb
dec
cli
mov
xchg
adc
insb
xchg
repz
out
xor
sbb
cmp
xchg
in
sahf
mov
push
sar
jb
out
xor
iret
insl
fistps
test
imul
loop
in
cld
movsl
cld
mov
addr16
push
and
dec
insb
mov
sub
clc
push
in
xchg
scas
insb
rcrw
cwtl
cs
jge
xchg
sbb
xorl
in
loopne
ret
jl
repz
insb
clc
ss
mov
dec
pop
out
clflush
mov
cmp
loop
stc
push
fwait
adc
mov
mov
lock
jl
test
inc
ficoml
and
sbbb
push
test
std
icebp
pop
scas
insb
lods
dec
and
gs
fs
daa
jge
or
std
jl
fildll
aas
call
stc
ljmp
movsb
push
push
sbb
mov
insb
mov
push
mul
jl
mov
jle
xchg
mov
inc
orb
mov
or
jbe
insb
adc
push
into
in
test
insb
iret
cli
lret
pop
xchg
insb
daa
xor
mov
xor
insb
xor
dec
testl
jmp
subb
adc
insb
idivb
xchg
dec
jbe
in
sub
imul
push
popa
int
insb
adc
xchg
sub
jl
in
shl
add
pusha
sahf
sbb
cmc
imulb
sub
mov
adc
scas
insb
movsl
inc
mov
insb
sarl
ds
stos
js
mov
add
or
push
sbb
fsubrs
test
dec
pushaw
and
jbe
gs
cli
mov
sbb
je
fwait
inc
cmp
and
pop
add
lods
mov
push
mov
push
or
mov
insb
mov
movsl
xchg
loopne
test
loope
aas
rcl
pop
cli
scas
icebp
popf
sar
mov
mov
insb
testl
fwait
cmp
cmp
outsl
aad
enter
addl
in
test
xchg
stos
jo
jecxz
xor
sahf
jae
adc
in
js
or
push
int
sarl
fcmovbe
fsubl
adc
imulb
iret
gs
fwait
es
ja
fsts
stos
addb
jae
sbb
pop
in
pusha
lret
roll
jmp
mov
ffreep
mov
stos
ds
pop
mov
enter
mov
xorl
cld
pop
leave
lock
popf
pop
push
in
in
mov
pusha
pop
ficomps
push
roll
dec
or
mov
ljmp
dec
pop
pop
sub
push
adc
and
leave
xlat
shlb
in
or
and
mov
mov
fwait
sbb
jno
in
andl
inc
outsl
jae
in
adc
mov
lods
sti
pop
pop
push
popf
insb
test
das
inc
or
shrb
aad
and
insb
mov
xor
mov
adc
fwait
dec
push
stos
insb
mov
aam
and
shrb
jle
imul
mov
pop
out
adc
mov
pushf
imul
bound
sub
addb
pop
lods
dec
add
sub
fisttpll
dec
pop
lods
out
leave
sub
cli
pop
dec
push
pop
loop
mov
pusha
pop
push
test
cmpl
fwait
jb
stos
out
popa
rclb
cmp
in
sar
pushf
mov
insb
sahf
mov
and
insb
frstor
pop
sarl
int
in
pop
cmp
les
sti
mov
outsb
bound
int
scas
xchg
ret
sahf
mov
sub
adc
ret
lds
mov
push
cld
shrl
enter
mov
inc
repnz
mov
addr16
lahf
lretw
or
mov
out
subl
pop
jmp
in
mov
jecxz
es
outsl
sub
cwtl
xchg
and
je
or
divb
imul
pushf
xchg
loop
cmp
rcll
outsb
adc
sub
test
loope
insb
ret
xchg
sbbl
cmc
mov
sbb
dec
and
outsb
in
mov
jl
mov
mov
cmpsl
outsb
sbb
inc
sbb
dec
test
insb
dec
cs
imul
movsb
jge
insb
fs
fidivl
test
cmp
pop
int
push
lea
stos
lahf
insb
push
and
fnsave
int
imul
rcl
sub
rclb
add
movsl
push
das
insb
adc
push
push
cltd
sbbl
xchg
insl
aad
sub
inc
xor
dec
int
stos
fcoml
addl
sbb
lods
or
insb
mov
inc
es
mov
push
sub
xchg
imul
mov
test
or
fnstcw
lods
testb
sbb
hlt
sub
into
insb
add
mov
ss
outsl
jb
mov
or
imul
inc
cld
push
outsl
mov
insb
clc
sbbb
and
jl
inc
cs
xor
or
loop
inc
xchg
mov
pop
cld
imul
cmpl
cmp
adc
lods
popa
and
jl
xor
insb
lret
mov
jae
add
pushf
jne
jmp
pop
push
mov
mov
insb
sarl
mov
mov
and
inc
gs
div
or
mov
js
mov
jo
xor
in
ss
out
inc
pop
insb
xchg
push
aad
fdivl
jnp
lret
movsl
pushf
imull
jl
imul
adc
call
sbb
xor
dec
sbb
mov
xor
add
stos
dec
daa
int3
fdiv
jl
add
pop
or
sbb
xchg
mov
pushf
add
adc
xchg
insb
ljmp
mov
mov
cmc
aam
jnp
fildll
dec
sbb
adc
dec
fs
jns
dec
lods
sbbb
mov
rep
dec
mov
insl
add
mov
mov
lret
pop
push
repnz
xchg
imul
enter
scas
sub
jl
std
push
ret
insb
sbb
xor
loope
inc
imul
popf
insb
push
xchg
lret
adc
and
dec
sub
sarb
jge
enter
outsb
insb
sbb
push
push
cmp
xlat
push
in
mov
jmp
shld
xchg
into
std
mov
insb
stos
bound
sub
inc
insb
test
aaa
push
sub
xchg
int
xchg
in
add
add
and
lods
lds
insb
xchg
mov
dec
mov
in
push
add
insb
cwtl
repz
add
mov
insb
outsb
push
pop
add
insb
sub
mov
sahf
pop
mov
insb
adc
cltd
dec
adc
aad
cld
sbbl
fcmovne
insb
push
lock
jge
ja
mov
sub
ffreep
lcall
pop
pop
mov
clc
dec
ret
push
and
jae
pop
sahf
dec
adc
add
out
outsl
lods
ds
gs
ljmp
test
popa
rep
pop
mov
and
or
imul
insb
mov
xchg
push
imul
push
dec
and
mov
inc
mov
std
es
sbb
lods
xor
stos
incb
mov
mov
sub
std
inc
push
popa
dec
and
insb
push
add
xor
insb
fildl
cmp
jbe
lock
pop
mov
pop
or
cmp
popa
xor
pop
insb
stc
push
jmp
inc
lret
sahf
lods
sbb
mov
mov
lret
pushl
xchg
imul
and
orb
scas
adc
lds
inc
es
lods
in
mov
repnz
int3
js
dec
outsb
imul
cmpsl
dec
mov
cmpsb
fs
ret
sub
sbb
bound
std
loopne
inc
cmp
ljmp
xchg
out
int3
add
xchg
sbb
arpl
fistps
notl
js
outsb
inc
data16
adc
insb
roll
jbe
or
adc
test
mov
fidivl
je
insb
pushf
lret
sbbl
stos
adc
decl
loope
push
scas
subb
cli
pop
mov
push
outsl
sub
xor
insb
jmp
push
loope
mov
outsb
movsb
in
cmp
pop
jb
loope
shlb
pop
ljmp
andl
js
cmpsb
fwait
inc
repnz
cmpsb
into
daa
pop
call
pop
orb
push
cmpb
mov
xor
test
shrb
imul
inc
test
leave
aam
repz
imul
mov
andps
add
ds
lods
shrb
pop
loop
mov
jb
mov
js
and
mov
in
adc
outsl
loopne
cmp
adc
push
sbb
test
pop
lahf
push
sub
outsl
fwait
js
in
sbb
out
jae
cmpb
movsb
mov
inc
call
adcl
dec
lret
iret
inc
mov
or
insb
fcoms
inc
movsl
nop
enter
add
imul
fnstsw
pop
cmp
and
test
mov
scas
insb
leave
cmpsl
cmp
cs
mov
inc
popf
aam
out
lock
jne
adc
int
ja
dec
sub
mov
mov
aaa
imul
gs
ja
dec
jl
imul
repnz
rorb
mov
lret
add
mov
imul
pushf
lret
scas
insb
adc
lret
pop
outsb
test
insb
iret
repnz
jl
popf
in
mov
mov
xchg
or
gs
aaa
jecxz
in
pop
shll
insb
xchg
adc
and
insb
mov
xchg
movsl
mov
add
mov
sub
cmp
adc
fcmovne
idivl
cmc
sti
xchg
insb
mov
push
stos
lret
mov
sbb
jb
inc
push
mov
rcll
jg
push
insb
jae
sarl
ret
jns
loope
pop
rcll
test
out
lea
adc
mov
insb
out
pop
pop
dec
xor
insb
sub
lds
stc
push
dec
std
xchg
and
sbb
pop
stos
insb
mov
dec
push
cmp
cltd
cld
jnp
gs
repnz
shrb
fwait
mov
jne
xchg
pop
hlt
sbb
test
add
dec
insb
popf
orl
out
lahf
sahf
int
and
mov
mov
pop
adc
dec
cmp
imul
xor
aas
int3
fbstp
mov
insl
pop
scas
mov
adc
aas
jns
xchg
insb
outsb
decl
nop
and
mov
insb
data16
jmp
clc
gs
mov
in
test
sbbl
clc
pop
dec
sar
insb
mov
add
insb
divb
js
lods
xor
stc
lret
adc
insb
sbb
dec
pop
dec
clc
ss
jno
mov
push
dec
cmp
insb
addb
imul
inc
je
movsl
data16
mov
add
xchg
out
cs
push
cmp
mov
adc
lea
sbb
lcall
adc
movsl
sbb
pop
push
bound
stos
xchg
out
xchg
insb
sub
test
shrb
scas
xchg
lods
insb
aad
add
mov
loope
mov
insb
outsl
push
pop
push
insb
push
and
aaa
or
jae
dec
sar
mov
mov
test
out
add
push
fcompl
shlb
bound
or
test
mov
inc
insb
lds
pushf
xlat
push
jb
insb
xchg
je
inc
xor
test
lret
adc
shrb
arpl
push
mov
cmpsl
ret
fwait
xchg
iret
outsb
cmp
or
imul
insb
cmp
cli
lret
aad
adc
scas
and
cmpsb
fisubl
sar
in
in
aaa
sbb
hlt
test
or
jmp
fsubrs
xor
xchg
xchg
loop
and
in
sti
ss
cmp
addr16
insb
add
xor
xchg
xchg
lcall
xor
or
ss
test
ret
dec
mov
out
insb
cld
push
mov
xor
fucomp
sub
or
aam
lock
mov
push
imul
fs
insb
lods
pop
mov
scas
enter
mov
icebp
push
inc
je
cmpsb
sbb
push
mov
jae,pn
jns
dec
insb
push
inc
mov
insb
mov
dec
xor
add
insb
arpl
push
mov
inc
test
loop
lods
cmpb
sbb
insb
cmpsb
clc
enter
mov
xor
jp
fildl
xchg
mov
mov
pop
push
in
xor
aaa
ret
insb
sub
out
jg
cwtl
imul
inc
mov
mov
mov
and
mov
sub
movsb
shl
and
insb
xor
push
push
push
lret
arpl
or
pop
mov
insb
pop
cmp
insb
xchg
inc
mov
insb
add
mov
inc
test
fisubs
jmp
push
rcr
loope
mov
or
mov
das
mov
adc
insb
cwtl
andb
mov
mov
imul
push
clc
cmp
lods
mov
jb
push
sub
push
xchg
cmc
mov
insb
or
andl
jmp
cmp
mov
fisubrs
or
inc
pop
add
mov
popl
add
pop
in
in
lahf
sub
mov
daa
insb
js,pt
adc
jo
xchg
insb
push
cmpsl
lcall
add
std
sbb
push
pop
ljmp
sub
dec
fs
sbb
mov
mov
mull
xchg
dec
push
xchg
loope
mov
inc
insb
push
xor
out
out
in
scas
imul
and
sbb
insb
in
in
push
or
shlb
inc
fdivrl
mov
xor
xchg
jns
nop
insb
sub
loope
stos
xchg
mov
and
jnp
fiadds
push
adc
loopne
out
subl
jl
lock
dec
clc
out
pushf
or
jl
fistl
sbb
xor
insb
loope,pn
inc
push
into
lret
out
jl
stos
fisubrl
loopne
fwait
cmp
pop
mov
jnp
or
scas
dec
inc
or
push
mov
aas
imul
mov
aam
sub
jae
iret
mov
xor
insb
mov
scas
inc
adc
add
int3
or
jne
dec
popf
jb
mov
xchg
imul
fbstp
mov
mov
loope
add
pop
mov
in
rcrb
mov
and
mov
pop
cwtl
mov
xchg
mov
mov
cmp
xchg
push
dec
mov
hlt
insb
cmp
scas
jge
insb
test
test
push
hlt
lods
insb
or
mov
sub
adc
mov
insb
mov
lea
cmc
mov
sub
insb
cwtl
repnz
adc
insb
cmp
loop
icebp
sbb
lea
adc
insb
push
or
cld
adc
movsl
sbb
movsb
clc
and
iret
fisubrs
pop
rcll
adc
lea
mov
inc
inc
xchg
adc
insb
lods
daa
ret
iret
pop
xchg
test
jge
insb
xchg
addr16
or
bound
mov
inc
push
movsb
mov
aam
xchg
daa
fbstp
pop
dec
test
mov
mov
jecxz
xchg
test
dec
pop
imul
xor
mov
insb
sub
sahf
outsl
lahf
insb
aaa
push
pusha
adc
hlt
out
push
insb
dec
imul
insb
mov
mov
cmp
mov
in
popf
jge
jecxz
xor
mov
enter
insb
sub
subb
inc
cmc
out
adc
xor
out
seto
gs
ret
imul
cmc
in
sbb
lahf
inc
jge
cmp
enter
scas
mov
addr16
pop
cmp
test
in
inc
lret
push
cmp
mov
int3
insb
out
push
stc
data16
add
push
sbb
arpl
mov
xchg
rep
fistps
sbb
mov
lods
mov
sarb
inc
test
mov
jl
imul
and
les
mov
sbb
mov
mov
sarb
xorb
shrb
lods
sbb
insb
mov
pop
scas
shrl
wrmsr
xchg
rcll
mov
xchg
insb
iret
stos
mov
daa
mov
or
cmp
add
icebp
or
jg
loop
jno
popa
push
daa
inc
push
subb
icebp
imul
lods
je
loop
or
ficoms
loope
mov
jns
dec
jle
movsb
mov
inc
cld
jmp
shrl
xlat
jns
ja
aaa
enter
pop
adc
insb
or
mov
nop
insb
mov
cmp
adc
mov
ja
sub
bound
and
orl
adc
mov
insb
test
nop
sbb
cmp
mov
lock
loop
ss
or
mov
popf
aaa
mov
mov
inc
jl
mov
push
adc
in
rcrb
jp
scas
mov
mov
cmp
icebp
jge
filds
insb
lahf
fcomps
adc
in
insb
xchg
sbb
mov
inc
xchg
imul
fldl
out
push
mov
jbe
dec
jl
popf
stos
mov
lcall
pop
nop
arpl
test
sti
xor
insb
mov
cmp
insb
pop
mov
cmp
ja
mov
push
test
cmp
push
aad
insb
add
roll
mov
add
test
repnz
hlt
dec
insb
mov
dec
icebp
push
notl
mov
xchg
aad
shrl
insb
xor
sbb
pop
jp
in
inc
sub
in
fnstenv
ret
cs
call
out
xchg
outsl
mov
jle
imul
pop
cmp
js
inc
enter
push
or
insb
sub
popa
lock
popa
test
inc
inc
andb
loop
jo
dec
loope
inc
dec
mov
adc
push
insb
mov
mov
pop
aad
cmp
or
mov
popf
mov
leave
jns
dec
push
arpl
and
cmpb
sahf
mov
imul
faddl
in
pop
jnp
jmp
daa
pop
lods
lods
or
lcall
das
jno
jecxz
jb
cmp
shlb
inc
data16
in
mov
sar
xchg
insb
repz
cld
sub
jp
mov
pop
mov
mov
dec
xchg
dec
sub
push
ret
push
sub
sub
int3
es
test
pushf
cmc
shrb
ss
pop
in
mov
add
xor
sub
lods
dec
lret
mov
xchg
shrb
mov
fildll
xor
js
jb
insb
sahf
sbb
scas
ret
loop
insb
shl
aad
pusha
inc
mov
dec
mov
ret
sbb
test
mov
loope
out
cli
pop
sahf
out
adc
scas
or
insb
test
adc
rcrb
pop
cmp
ret
movb
mov
push
popf
pusha
test
dec
insb
pop
inc
cs
or
sub
jbe
popf
mov
fidivrs
xor
lret
mov
push
repz
imul
nop
out
add
stos
mov
lea
es
dec
insb
cmpxchg
lcall
insb
sub
cld
pop
cmp
addr16
imul
xor
es
jb
sbb
dec
mov
inc
in
dec
stos
clc
xchg
push
pop
insb
movsl
out
iret
mov
xacquire
ds
pop
inc
insb
sbb
pop
xor
mov
cwtl
shlb
fsts
jo
mov
mov
xchg
aam
xchg
or
dec
mov
mov
stos
sar
insb
mov
cmp
insb
jae
and
jg
push
shrb
loop
mov
jle
enter
pop
lahf
insb
jge
fistpll
xor
jl
test
insl
std
stos
mov
jle
insb
mov
and
insb
sub
ljmp
xor
loope
or
sbb
test
ja
outsl
push
or
push
jge
data16
iret
sbb
outsl
sbb
adc
push
xor
mov
xor
jle
mov
xlat
insb
arpl
cmovbe
in
insb
sarl
in
sti
imul
xor
adc
in
rcll
push
cld
inc
fildll
mov
test
jb
je
cmpsl
xor
imul
fldenv
pop
pusha
sub
inc
insb
jle
adc
push
je
lds
xor
repz
pop
or
lods
xor
xor
xchg
insb
in
ret
lods
sahf
fsubrs
les
adc
insb
orb
test
inc
insb
mov
jg
loop
dec
xchg
mov
insb
fs
mov
sub
and
mov
sti
push
je
xor
enter
jp
pop
outsl
push
ss
dec
mov
push
insb
lea
pop
adc
imul
lods
insb
cld
andl
push
mov
scas
pop
fdivrl
mov
loopne
popf
insb
inc
or
xor
sub
jmp
add
mov
movsb
insb
mov
lea
pop
jno
movsl
test
shll
jnp
push
xor
jecxz
sti
test
pop
inc
fcomp
push
mov
mov
mov
addr16
push
xchg
mov
pop
leave
ljmp
lods
in
jnp
test
into
setae
pop
movsb
je
mov
xchg
jo
gs
test
ret
fimuls
lret
xor
sub
inc
sbb
push
xor
mov
sbb
jl
mov
or
arpl
sbb
adc
dec
daa
insb
call
repnz
insb
xchg
cmp
in
jp
xchg
cmp
jle
loope
pop
loopne
dec
inc
adc
in
push
cmp
xor
popa
adc
stc
shl
cmp
or
gs
icebp
orl
lods
ss
ret
xor
mov
clc
and
mov
pop
mov
lods
or
push
cmc
mov
inc
mov
or
in
pop
es
jle
je
insb
repz
lret
push
adcl
int3
sbb
imul
cli
icebp
xor
dec
push
sbb
test
cwtl
mov
insb
mov
popf
sub
push
mov
insb
bnd
je
mov
or
add
repnz
and
mov
pop
lock
push
dec
in
fadd
data16
imul
sarb
push
push
jo
sub
xor
hlt
subb
aad
out
mov
ficompl
insb
paddb
insb
xor
test
xchg
sub
mov
sub
cmp
xorb
add
cmp
les
loopne
int
rcrb
or
dec
dec
xlat
add
mov
sub
or
popf
fldt
repnz
mov
push
jb
insb
xor
jg
pop
lcall
insb
stc
sub
subl
fsubl
xor
cltd
xor
jne
imul
mov
lret
out
insb
mov
cmp
imul
movsl
popa
hlt
les
push
mov
divl
pop
jbe
pop
mov
lock
and
insb
xchg
test
lds
add
mov
inc
nop
push
add
push
pop
lcall
cmp
xlat
fldt
pop
fcompl
insb
jnp
lret
cmp
iret
pop
cs
int
mov
minps
ss
xor
lods
stc
ficomps
ret
mov
faddl
pushf
inc
mov
jmp
jle
lahf
in
std
test
mov
insb
xor
icebp
pop
inc
pop
jno
insb
adc
fcmovbe
aaa
fidivrs
cli
sbb
and
mov
jg
dec
xor
in
mov
sbb
test
je
dec
cs
xchg
adc
movsb
mov
add
insb
mov
int3
loope
insb
pop
arpl
insb
xchg
sbb
in
and
sbb
sbb
adcb
les
jae
lods
rorl
insb
shll
pop
imul
push
nop
xchg
cmp
lock
sbb
pop
imul
dec
insb
fcoml
jge
mov
shlb
inc
and
mov
adc
push
lods
adc
insl
push
adc
push
je
insb
hlt
mov
pop
imul
stos
or
xchg
mov
in
dec
insb
adc
cmpsb
sbb
insb
add
xlat
in
sbb
push
mov
insl
adc
or
es
dec
imul
fsubrs
lahf
pop
loopne
enter
mov
mov
scas
or
cmp
mov
dec
xlat
mov
das
push
adc
adc
das
outsl
insl
fnsave
scas
push
ret
jmp
jbe
adc
xor
call
dec
jae
lret
popf
cmpsl
pop
dec
jne
mov
jae
mov
lea
out
mov
cmp
cld
divl
jmp
out
or
ja
aad
xor
lods
jmp
cmpsl
addb
fucomp
jnp
pop
daa
add
lahf
lds
in
or
sahf
call
imul
loope
cmc
pop
es
and
dec
lahf
add
jb
sbb
xchg
mov
add
out
pusha
jne
cmp
or
mov
or
lods
insb
xchg
aaa
loopne
fstpt
jno
mulb
test
mov
insb
dec
jmp
mov
jmp
enter
insb
and
cli
dec
or
insb
fdivrl
mov
push
pop
jbe
insb
xor
test
mov
into
lock
push
add
lea
cmc
mov
jo
in
repnz
sub
in
pop
test
test
inc
leave
sahf
xchg
insb
pop
xor
movb
sbb
ret
mov
mov
xlat
out
or
pop
inc
aam
mov
pop
jl
xchg
repz
dec
js
fisttps
adc
and
imul
inc
les
retw
testb
das
in
out
mov
fisubs
arpl
jmp
je
mov
mov
pop
dec
add
dec
or
push
ror
lds
mov
xor
shr
pop
push
xchg
out
mov
mov
bound
imul
ljmp
cmp
clc
cld
subb
icebp
mov
cmpsl
push
push
pop
cwtl
add
xchg
add
dec
cltd
jle
xchg
or
add
or
je
dec
insb
in
shll
and
mov
mov
das
mov
insb
clc
mov
repz
mov
push
cmp
aam
cltd
test
xchg
nop
fidivrl
insl
pop
sub
xchg
cmpsl
and
repnz
mov
lahf
or
cwtl
pop
lock
xor
gs
les
insb
je
ds
xor
lcall
mov
insb
or
test
fsubl
cmpsb
mov
cmpsl
pop
mov
cltd
lret
je
leave
mov
xchg
cmp
sbbb
ss
daa
mov
sbb
sub
ficoms
sub
repz
insb
sti
cmp
adc
jo
lds
mov
xor
inc
inc
xor
push
insb
xchg
and
insb
pop
sbb
xchg
add
or
cwtl
push
insb
mov
xchg
push
lret
insb
lock
pminub
inc
or
dec
insb
jg
sti
je
scas
adc
daa
pop
inc
cmp
insb
movsl
ret
mov
aaa
movsb
arpl
cwtl
int
insb
in
dec
push
mov
add
mov
dec
add
xchg
sti
xor
fnsave
loop
es
insb
jp
jbe
adc
insb
scas
sar
or
hlt
jl
push
pop
mov
sahf
les
and
in
xor
cmp
adc
ja
cmp
fdivl
insb
sub
sbb
testl
sbb
daa
mov
sbb
cltd
xchg
insb
mov
dec
stc
xchg
and
gs
cmp
sar
insb
mov
pusha
fiaddl
push
ret
pop
pop
xorl
imulb
cmp
repz
ds
mov
sbb
ljmp
in
or
repnz
jbe
gs
arpl
lds
pop
jne
lods
mov
insb
push
fsubrs
ja
sbb
lds
ret
sbb
insb
push
and
addr16
pop
cmc
js
dec
xchg
sub
ljmp
mov
popa
cltd
insb
hlt
movsl
or
fsubrs
push
mov
ret
insb
sbb
loope
not
jae
add
out
xchg
sahf
and
xchg
add
rep
orb
les
inc
mov
aaa
and
pop
pop
adc
push
pop
nop
insb
jnp
dec
cmp
gs
pop
cmpsb
stc
aad
or
daa
inc
pushf
sub
sbb
int3
outsl
in
popw
pop
das
dec
test
xchg
xor
scas
insb
mov
loope
and
jnp
imul
jns
sub
gs
arpl
cmp
add
mov
inc
adc
mov
sub
cmp
in
je
mov
push
adc
imul
popa
and
sahf
adc
mov
insb
je
xchg
jae
stos
insb
repnz
fs
insb
fstl
outsb
fisubrs
dec
ljmp
sbb
xchg
mov
out
mov
sbb
sub
divb
das
mov
insb
lcall
arpl
push
gs
in
mov
shll
mov
inc
mov
sbb
and
aaa
push
and
mov
int
roll
pop
mov
dec
js
jg
pop
xchg
insb
popf
test
and
xchg
cmp
lds
jmp
bound
cmp
sub
insb
mov
xlat
movsb
rcr
ds
jmp
or
cmp
insl
insb
mov
jg
in
imul
xchg
cmp
inc
cld
and
popa
jo
insb
daa
out
int
stos
adc
mov
push
pop
ret
inc
mov
jns
sahf
insb
stc
dec
cmp
mov
pushf
cmp
lahf
insb
adc
push
add
and
xor
sbb
pop
imul
outsb
mov
out
imul
js
sbb
je
sub
push
arpl
imul
aas
cmp
xchg
insb
repz
xor
loopne
mov
iret
cmpsb
sbb
rcrb
inc
mov
push
movups
out
loopne
je
or
mov
nop
das
mov
adc
inc
dec
xchg
push
fcoml
cmpsb
insb
rcll
or
cmp
enter
es
adcb
dec
imul
or
push
ret
outsb
and
bound
add
mov
lret
cmpsb
mov
insb
pop
sbb
jg
push
mov
cmpsb
adc
push
dec
ja
hlt
es
and
mov
jbe
xchg
imul
jmp
mov
addr16
or
jle,pt
cmpsl
mov
inc
clc
jno
xchg
pop
adc
movsl
sbb
insb
cmpl
mov
lods
sbb
mov
jns
sub
imul
cld
push
cli
xor
iret
xor
test
cs
insb
aaa
cmpsl
sbb
push
mov
adc
popw
sub
cwtl
mov
insb
inc
pop
sub
adc
dec
insb
popf
xor
rolb
shrl
insb
push
sti
cmp
test
jmp
into
xchg
mov
or
icebp
movsl
jl
push
mov
ds
inc
xchg
jecxz
imul
adcb
cwtl
je
rep
arpl
inc
mov
outsb
test
lret
and
pop
sti
mov
jecxz
icebp
frstor
jle
push
call
fwait
insb
aad
ja
loope
pop
jl
mov
mov
cmp
cs
imul
stos
popf
and
cs
in
repnz
push
imul
or
test
and
loop
aam
sbb
add
jnp
stos
mov
int3
jle
lods
xor
and
inc
jbe
in
xchg
loop
add
or
mov
test
insb
movsb
inc
stc
sub
gs
aaa
bound
jne
insb
mov
pop
mov
std
mov
cmp
call
push
insb
cmovno
fmuls
popf
fisubrl
sub
das
pop
push
insb
fdivrl
xchg
mov
imul
out
xor
adc
jecxz
push
mov
iret
insb
stos
push
lcall
sub
pop
push
sbb
xchg
sub
lds
int
je
fnstenv
add
xchg
sub
xchg
shlb
fs
xor
sub
test
mov
cmp
loope
aaa
xchg
jbe
insb
test
mov
push
lcall
pusha
fnsave
sub
imul
and
nop
sub
inc
pushf
inc
and
xchg
cwtl
es
mov
pop
and
mov
or
insb
stos
fldl
push
ja
mov
outsb
insb
sbb
pop
fstps
and
mov
movsb
fs
insb
cmp
nop
mov
dec
push
or
mov
mov
adc
sub
outsl
sbbb
out
adc
xor
sub
repz
insb
jecxz
jnp
mov
add
js
dec
mov
sbb
xchg
aad
stos
mov
les
push
push
insb
fwait
cli
cld
xor
xor
push
inc
push
or
mov
lods
jbe
jge
out
or
xor
shr
adc
sbb
push
sbb
das
sbb
divb
add
insb
lea
inc
scas
gs
test
cmp
fs
data16
xchg
popa
and
es
and
adc
iret
sbb
adc
into
testl
or
insb
or
jne
dec
jle
xor
sub
outsb
sbb
add
adc
xorb
lods
pop
inc
jle
pusha
aaa
xlat
repnz
shlb
pop
test
push
stc
xchg
in
orl
andb
pusha
pop
in
add
mov
mov
add
pop
sbb
mov
int
jne
mov
sbb
xlat
test
rorb
arpl
fsubrl
inc
into
mov
dec
xchg
test
aaa
in
adc
subl
add
loope
or
sbb
lds
inc
movsb
scas
push
jge
fbld
dec
and
loopne
int
push
je
movsl
adc
insb
decb
dec
push
roll
mov
pop
jbe
jecxz
xlat
jp
fcomps
dec
sbb
lcall
xchg
adc
mov
jp
jmp
push
insb
fiaddl
sbb
int3
mov
scas
inc
xor
cwtl
pop
gs
push
jno
iret
loope
cmp
sarb
sub
add
aam
int3
xlat
outsb
addr16
ffreep
fiadds
icebp
pop
push
scas
pop
add
jo
in
xchg
mov
andl
das
and
int
mov
imul
fisttps
popa
test
inc
adc
push
mov
sub
insb
inc
aam
cmpxchg
out
insb
add
cmp
insb
int
jo
xchg
mov
insb
mov
mov
add
loopne
sbb
or
pop
fwait
xlat
push
xor
xchg
ljmp
xor
ret
insb
lahf
xor
mov
out
dec
je
sub
pop
or
insb
pop
in
jnp
adc
push
mov
and
add
xchg
sbb
imul
mov
dec
fsubs
push
sbb
insb
arpl
in
cmp
insb
bound
push
xchg
ret
fidivs
insb
mov
dec
imul
jae
bound
insb
and
jg
test
lods
outsb
cmp
daa
test
insb
jbe
xchg
cs
rcr
pushf
insb
xor
cmp
ds
mov
stos
or
inc
test
insb
daa
push
ljmp
push
insb
jae
repnz
outsb
xchg
push
gs
lods
sub
sbb
in
mov
clc
adc
lds
loope
cmp
addr16
addr16
sbb
repz
int
xchg
adc
adc
insb
pop
add
ret
sbb
int3
push
cli
pop
out
mov
xchg
outsb
lods
ror
test
push
fidivrl
notb
jle
aam
add
ljmp
dec
stos
cmp
jge
xchg
push
sti
xor
hlt
push
insb
push
xor
add
data16
insb
mov
test
cmp
insb
rcrb
add
adc
out
insb
jb
pop
insl
mov
jg
ja
jl
cmp
mov
dec
lahf
pop
mov
ss
mov
push
sbb
mov
in
cmc
in
out
mov
hlt
pusha
push
mov
add
frndint
mov
outsl
cmp
jmp
int3
in
ds
sub
into
lcall
or
xorb
jl
nop
xor
jne
out
loop
push
xchg
and
push
push
lods
sub
xchg
mov
jg
mov
and
push
inc
adc
in
imul
dec
fcmovbe
pop
insb
mov
jno
test
cmpsb
jbe
sub
idivl
or
xchg
xorl
adc
aam
xlat
mov
jp
insb
repz
pop
cmp
pop
push
push
adc
dec
insl
add
insb
add
or
movsb
push
xor
mov
mov
int
dec
push
jg
sub
fldt
add
insb
cmovge
inc
insb
arpl
sbb
push
push
lahf
ror
jb
insb
mov
or
das
jmp
gs
mov
fistpl
adc
mov
and
insb
mov
scas
stos
jl
ds
insb
arpl
imul
sub
insb
ljmp
les
fcoml
xor
lods
stc
dec
jae
call
in
mov
add
push
scas
test
insb
cwtl
mov
mov
and
pushf
in
sbb
sbb
mov
into
insb
hlt
jl
lret
xor
insb
enter
dec
jnp
push
insb
or
into
repz
std
push
sub
xchg
js
adc
gs
les
fstl
insl
iret
lahf
dec
push
es
lea
daa
jmp
les
mov
jo
mov
push
stos
insb
sub
sbb
xchg
sub
mov
fdiv
insb
cmp
sbb
jecxz
pop
mov
push
push
sbb
pop
out
sub
out
mov
mov
cmp
scas
bnd
outsb
imul
into
fadds
inc
jmp
cmp
sub
movsl
dec
imul
dec
add
stc
lods
mov
mov
inc
imul
mov
dec
in
sahf
cmp
hlt
insb
add
sub
enter
push
adc
and
stos
shrb
pop
pop
adc
lds
sbb
dec
cmp
xor
rcrl
pop
dec
in
cld
mov
xchg
insb
jecxz
rclb
imul
mov
jo
pop
push
outsl
inc
mov
cmpsl
jae
pushf
xchg
mov
dec
pop
insb
shrl
dec
cmp
movb
pop
les
insl
mov
aad
test
aam
jge
das
faddl
pop
xor
mov
lods
push
mov
inc
ficompl
mov
jmp
xchg
icebp
rcrb
mov
push
negl
or
js
aad
ret
xor
xchg
aaa
or
mov
sub
dec
or
outsb
mov
insb
inc
in
ljmp
out
dec
xchg
xlat
divb
jne
cs
or
xor
int3
insb
lahf
pop
cltd
cld
add
xchg
mov
jmp
cmp
into
mov
aad
test
subl
out
xor
stc
jl
jle
jae
imul
cld
int3
icebp
wbinvd
insb
mov
sub
ljmp
sub
out
mov
pop
rolb
rcrb
test
xchg
or
test
jp
imul
test
insb
xchg
jmp
xchg
sub
sub
push
sub
cmc
cmp
insb
xchg
sbb
mov
hlt
jo
orl
sub
imul
fildl
inc
pop
dec
in
cmpl
xor
push
popa
insb
frstor
or
fsubs
hlt
dec
xor
xchg
pop
jmp
gs
loope
sarb
jo
iret
insb
sti
adcb
imul
movsb
dec
aam
mov
push
insb
push
movb
stc
insb
sti
fidivl
mov
pusha
or
mov
loopne
push
insb
pop
std
das
pop
or
mov
pop
push
cmp
stos
sbb
jp
sub
lods
repnz
adc
cld
jmp
aas
mov
cmpsl
inc
mov
ret
stc
push
insb
sbb
lea
mov
push
push
and
nop
or
push
mov
pop
imul
sarl
insb
shrd
repz
cmc
test
insb
pop
test
cmpsl
cld
shrb
sbb
jae
mov
out
pusha
jle
lret
insb
jmp
sahf
insb
out
and
mov
push
jae
inc
insb
xor
insb
xchg
out
clc
js
imul
leave
in
push
out
mov
xchg
out
lods
cwtl
mov
jmp
arpl
and
shrb
dec
dec
push
add
xor
adcb
push
rcll
sbb
sbb
mov
sbb
aas
shlb
and
or
push
inc
negl
insb
shll
mov
sub
stc
jo
xor
fildll
inc
mov
push
icebp
stc
repz
idivb
sbb
popf
sbb
leave
jmp
push
arpl
fcos
in
jp
in
dec
fldz
lods
jl
pop
pop
fcoml
xor
add
addr16
xor
push
pusha
das
insb
push
or
jmp
ds
addr16
es
xor
xor
pop
in
jge
enter
hlt
xchg
xchg
mov
inc
lret
repnz
push
jmp
jle
mov
jl
pop
mov
push
pop
mov
aas
mov
cli
ja
sbb
call
xor
push
pop
outsl
ja
shr
jnp
ljmp
arpl
test
push
test
stos
and
cmc
inc
outsl
lods
shr
lcall
cmpsb
scas
loop
insb
cltd
stos
insl
mov
insb
ja
inc
jbe
std
xchg
inc
mov
jl
push
mov
mov
cld
or
test
icebp
fcoms
flds
out
mov
xor
mov
sti
jb
std
lcall
adc
jle
popa
insl
mov
imul
xchg
pop
inc
sarb
pop
mov
in
sub
loope
fdivl
jl
loopne
adc
sub
insb
jno
sbb
fbld
jbe
push
in
in
dec
dec
xlat
cmp
insb
arpl
lret
jle
shrl
push
pop
hlt
or
pop
nop
fimuls
out
cmp
mov
pop
sbb
fnstenv
dec
fwait
inc
or
out
sub
and
push
testl
or
div
mov
fwait
in
lahf
leave
lcall
xor
lock
pop
insb
push
scas
mov
andb
adc
mov
push
cmp
xchg
mov
stc
mov
rclb
popl
cmpsb
xor
cwtl
xlat
and
or
xchg
pop
mov
in
pushf
xchg
in
je
inc
insb
insw
add
pop
push
filds
sti
jne
insb
cld
inc
push
test
add
xchg
cwtl
push
out
xlat
or
push
aam
sub
push
sbbb
add
movsb
inc
flds
add
scas
xor
add
cwtl
mov
shrb
jbe
insl
sbb
inc
jmp
jo
push
pop
push
test
fsubl
ja
lods
jns
push
jp
filds
jmp
cmc
pop
dec
sub
mov
insb
mov
xchg
jg
insb
fsubrl
popf
out
test
and
ret
adc
pop
cmp
outsb
cmp
lret
mov
insb
fsubl
jno
jge
out
shrb
je
outsb
ss
insb
repnz
adc
imul
mov
or
adc
mov
data16
dec
pop
add
add
adc
push
pop
push
js
loope
jb
icebp
jo
sbb
mov
sahf
fstps
and
lcall
repnz
jmp
xor
out
insb
add
cli
je
aaa
mov
insb
adcl
shll
into
cmp
jl
push
out
sub
or
or
data16
adc
fadds
scas
jmp
dec
sub
cmpsl
sbb
jl
sub
in
insb
movsb
xchg
sub
push
fld
lret
push
xor
sbb
loope
and
dec
sub
push
jb
lret
aam
or
dec
mov
js
insb
xor
mov
push
insb
adc
outsb
pop
sub
pushf
sbb
adc
ffree
pop
pop
mov
ret
push
decb
lods
inc
mov
shrl
data16
pop
xchg
shlb
insb
and
jb
ret
sbb
insb
das
hlt
int
push
lea
pop
add
xor
mov
dec
adc
jne
xchg
pop
insb
int3
nop
xchg
les
add
or
lldt
stos
or
stc
out
movsb
outsl
cmp
cmc
adc
and
inc
das
mov
jne
gs
insb
xchg
sbb
aad
add
rcr
cmc
add
mov
call
cmpsl
outsl
pop
jmp
jge
imul
mov
sbb
insb
repz
cmp
imul
xor
cld
movsb
loope
in
mov
sbb
xor
push
insb
fdivl
jb
into
adc
xchg
sub
and
test
loope
adc
stc
dec
cmp
mov
lea
test
sub
bound
sub
push
dec
dec
imul
push
cwtl
jae
insb
mov
pushf
dec
pop
cmc
lods
arpl
insb
pop
adcl
mov
aad
test
add
push
sbb
insb
test
insb
mov
lea
add
aam
xlat
cmp
movsb
push
pop
cmp
int3
lods
xchg
adc
jnp
pop
fldl
lret
mov
xchg
inc
in
jmp
cmp
das
test
mov
insl
in
into
jp
mov
pop
daa
insb
push
xor
fistl
mov
cmp
insb
sub
push
push
adc
and
push
imul
or
sub
sub
stc
mov
cmp
out
dec
lds
ja
test
cli
adc
rolb
pushf
ret
inc
adc
out
stc
mov
cs
push
jl
and
or
cmp
mov
imul
leave
fwait
rorl
insb
daa
jns
test
insb
pushf
cld
jp
jmp
pop
insb
dec
lods
mov
divb
in
outsb
gs
add
lods
cmp
dec
dec
xor
pop
out
test
push
push
xlat
add
fidivrl
sbb
mov
in
sub
and
int3
insb
mov
push
dec
test
xchg
sbb
lret
insb
mov
mov
jo
scas
pop
std
xor
cmpl
xchg
in
outsl
shl
insb
imul
stos
pop
mov
add
loope
shrl
call
daa
xchg
in
add
push
push
test
xchg
sahf
arpl
lds
sub
bound
sbb
je
sub
push
inc
mov
fs
bound
fidivrl
fbld
fwait
pop
ss
mov
pop
xlat
adc
push
jecxz
push
std
add
push
xchg
inc
test
and
gs
xlat
test
push
fildl
or
add
sub
mov
mov
jecxz
ret
mov
enter
add
pop
subl
insb
jecxz
movsb
push
mov
mov
and
in
insl
pop
aaa
jb
imul
andl
insb
jne
push
jecxz
inc
cmp
push
in
xchg
mov
or
insb
lods
lret
and
sti
insb
sbb
and
jmp
xchg
pushf
inc
es
inc
in
test
jne
sarb
pop
das
mov
imul
stos
xor
push
fcoml
jecxz
mov
push
insb
xchg
outsl
xchg
mov
mov
and
mov
cmp
inc
add
jae
or
sub
test
pop
add
rclb
jecxz
in
loop
addr16
pop
mov
in
xlat
fcom
pop
addl
add
adc
test
pusha
popa
cmpl
jge
xchg
sbb
mov
dec
pop
cs
push
mov
dec
out
mov
and
jo
jne
insb
aad
dec
testb
cmp
or
and
int
les
jno
std
insb
out
mov
jmp
insb
mov
jne
jle
daa
cli
push
js
lods
push
insb
push
stos
int
mov
out
cmpsl
inc
jle
cld
pop
adc
cs
insb
jnp
push
and
mov
insb
sbb
hlt
lods
rcrb
push
mov
add
inc
dec
cmp
and
and
insb
fnstcw
gs
jae
repnz
insb
in
test
cld
jecxz
lahf
pop
or
cmp
and
sub
movl
leave
mov
jne
insb
push
pop
dec
rcr
mov
insb
mov
clc
mov
insb
adc
adc
imul
enter
xchg
aaa
push
pop
test
test
push
and
adcb
push
aam
jle
cmp
jge
push
gs
arpl
mov
push
lcall
mov
jbe
clc
jmp
ror
xor
mov
subl
push
aam
jecxz
jp
mov
shlb
aaa
imul
cld
or
imul
rcrl
jmp
xor
aad
enter
cli
fwait
test
das
fsubrs
shlb
in
xor
pop
cmp
movsb
sub
cli
fchs
leave
xlat
mov
add
xor
xor
xor
xor
das
call
sub
iret
sub
push
push
std
fsubrp
popf
fstpl
sbb
imul
inc
mov
rorb
das
fimuls
and
cs
jg
imul
popf
sbb
sbb
rcrb
xchg
popf
jl
push
cmp
imul
xor
int
dec
or
int
dec
mov
in
cmp
inc
adc
jo
xor
cmp
stc
cmp
cmp
fldcw
outsl
aaa
xor
dec
sub
addb
js
je
jo
jo
outsb
mov
jo
xor
xor
xor
xor
xor
out
js
je
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
outsl
lods
xor
arpl
js
je
jo
jo
les
xor
daa
clc
and
hlt
hlt
repnz
lock
mov
lcall
out
js
jb
popa
xor
dec
dec
lods
je
ljmp
out
jns
push
insb
xor
xor
xor
sub
fsubp
popf
fstpl
sub
xlat
fld
leave
cmpb
push
pop
jmp
fnstsw
ja
pop
addr16
js
cmp
daa
push
pop
ficoms
popf
or
sbb
jl
cmp
jge
jno
push
jo
and
in
mov
sahf
jne
test
js
outsl
mov
xor
xchg
sbb
cli
inc
clc
sub
and
inc
push
xor
or
imulb
shrl
sub
dec
push
cmp
sub
adc
sbb
xchg
popf
mov
cmp
mov
jnp
jae
jae
jae
jae
jae
dec
cmp
jo
aam
pop
xor
xor
xor
sbb
cmp
xor
in
int3
scas
lds
mov
mov
xchg
cmp
jb
mov
jl
js
je
jo
fidivl
out
int3
out
enter
pop
cmp
cmp
into
sub
sub
and
add
fxch
cmpsl
int
int
int
int
int
int
int
int
lods
sarb
xor
xor
into
sub
cmp
rolb
and
test
movsl
test
test
push
fidivrl
inc
or
mov
test
xor
in
fistl
int3
jnp
jae
je
xor
popf
cmc
pop
ficompl
mov
cltd
pop
or
dec
shrl
mov
sbb
in
mov
jnp
das
dec
mov
sub
jmp
in
sub
movsb
sub
arpl
dec
push
inc
fidivrs
xchg
push
xor
call
jae
jae
outsl
test
cli
inc
clc
imulb
hlt
and
hlt
lock
fistpl
sub
cwtl
sub
mov
cmp
iret
and
sbb
or
popf
imulb
mov
jbe
fisubs
pop
inc
push
and
and
push
test
mov
jmp
popf
rcrl
mov
cltd
mov
je
and
xor
adc
aad
test
xor
iret
ss
and
testb
loop
sub
mov
mov
imul
push
push
fisubs
popf
minps
sbb
push
dec
mov
pop
mov
jns
jns
jns
jns
jns
jns
jns
jns
jns
jl
cs
mov
adcb
jecxz
enter
mov
jo
jo
xor
sub
sub
mov
sbb
sbb
adc
and
inc
shrb
clc
cmc
xor
inc
fistpl
mov
mov
pop
cmp
aaa
cli
jge
push
ss
iret
mov
push
xor
jl
js
je
jo
ljmp
xchg
pop
mov
push
jnp
dec
rclb
sbb
adc
and
fnstenv
lods
and
jae
popa
sub
jae
jae
or
add
pop
push
cmp
cltd
add
test
fs
out
cmp
fcoml
cmp
mov
test
xor
push
xor
xor
xor
xor
xor
dec
fadd
mov
sbb
add
pop
hlt
cmp
jns
jns
jns
jns
jns
jp
mov
cmp
pop
fwait
dec
xchg
inc
mov
mov
sbb
sahf
jg
ja
outsl
mov
xor
jb
clc
sbb
jo
outsl
mov
fcmovu
cltd
rorb
sarb
mov
test
pop
push
sub
push
inc
xlat
xor
pusha
mov
push
pop
mov
sbb
xor
das
sbb
sbb
fldl
jo
xor
or
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jl
xor
lock
dec
lret
ljmp
in
jns
jp
enter
or
sbb
or
or
cld
test
xchg
cmp
call
rol
cmpsb
aam
mov
and
test
movsb
jo
jo
jo
jo
jo
jo
mov
jo
xor
xor
lods
das
test
stos
pushf
rclb
push
cmp
aaa
repz
cmc
push
imul
int3
mov
push
dec
dec
cli
xchg
pop
dec
enter
sbb
xchg
add
gs
lods
xor
cmp
cmp
cmpl
xor
pop
cmpsb
das
nop
push
imul
outsb
sub
imul
push
add
ss
stos
push
mov
dec
imul
xor
rorl
cmp
fisubl
iret
xor
sbb
pop
mov
sahf
and
std
fmull
dec
push
dec
xor
add
movsl
xor
movsl
mov
jge
in
inc
sub
pushf
push
pushf
pop
xor
or
inc
and
mov
aaa
cmp
xorb
fs
fs
jg
cmpsl
xor
and
rcll
in
inc
inc
pop
hlt
cmp
mov
pop
cmp
aas
push
xor
loope
hlt
dec
inc
jns
push
push
loop
pop
fmull
pushf
test
cli
lea
scas
das
inc
int3
faddl
cmp
fsts
cmp
adc
movsl
ljmp
inc
in
cmp
daa
jnp
test
push
sbb
cmp
stc
cs
and
or
cmp
pop
sbb
dec
cs
dec
push
mov
mov
push
fnstenv
lret
jl
sub
cmp
aaa
stc
adc
push
sub
xor
inc
add
push
repnz
mov
adc
aad
sub
mov
movsb
fadd
xor
add
dec
pop
in
cmp
adc
je
mov
xchg
push
sub
add
dec
lods
and
bound
rorb
lret
and
stos
mov
pop
pusha
ss
faddl
cmp
in
cmp
adc
sub
pop
cmp
pop
xor
or
push
arpl
inc
inc
sub
js
mov
cs
sbb
mov
cmp
add
aad
fcomps
pusha
in
aaa
addr16
jo
ljmp
sbb
xor
mov
pop
pop
cmp
aaa
rcrl
dec
fcoml
cmp
and
xchg
xchg
shlb
into
pop
xor
pop
mov
inc
cmp
inc
repnz
xor
mov
cmp
mov
sbb
mov
pusha
pop
xor
push
or
loopne
lods
push
ret
call
xor
xor
xlat
and
mov
orl
pop
cmp
loopne
jo
leave
in
xchg
inc
imul
or
call
push
imul
test
js,pn
mov
xor
mov
dec
sbb
mov
stos
and
sbb
jl
dec
enter
sti
xor
clc
push
into
das
movsl
enter
addr16
or
add
lock
les
pusha
aaa
cli
das
and
sbb
cmp
and
in
push
or
cmp
lcall
inc
cld
cmp
pop
pop
sub
rcr
dec
in
cmp
inc
ss
cmp
pop
cmpl
pusha
sub
dec
into
mov
pusha
and
les
lcall
pop
fimuls
sub
subw
sbb
and
jmp
lret
pusha
push
scas
out
je
pusha
adc
data16
pusha
mov
dec
push
dec
and
sub
rol
bound
pop
dec
add
cmp
cmpl
mov
pusha
inc
or
sbb
cmp
std
mov
cmp
fs
dec
pop
cmp
fldl
pusha
sub
cmp
lret
mov
es
jnp
pop
or
jecxz
pop
cmp
pusha
cmp
dec
movsb
fsubr
movsl
lahf
mov
clc
in
adc
sahf
xor
xor
call
mov
sub
dec
pusha
jle
sbb
or
sub
cmp
test
and
arpl
add
loop
pusha
sub
rorb
movsb
push
pop
jmp
cmp
into
enter
cld
push
loop
inc
pop
in
jmp
mov
dec
cmp
or
sub
es
jp
pushf
pusha
loope
push
aam
pusha
dec
or
bound
into
cmp
lret
and
and
je
mov
mov
jp
jo
cmp
test
cwtl
pop
cmpsl
jbe
mov
cmp
cmp
ljmp
add
aaa
outsb
pop
fsubrl
jmp
cmp
ds
sar
jmp
test
clc
sub
jmp
cmp
scas
pop
rcrl
inc
mov
int3
stos
mov
sarl
push
mov
and
aad
push
lods
and
negl
sub
outsl
iret
mov
fsubrs
aam
call
in
pop
cmp
and
mov
loopne
je
mov
xor
inc
and
int3
stos
jae
js
push
cmp
clc
mov
add
stos
sbb
loope
ljmp
pop
loopne
lahf
adcb
fwait
sub
add
aas
cmpsb
les
push
mov
adc
xor
adc
sahf
les
and
js
faddp
mov
les
mov
scas
push
ja
jge,pt
les
cmpsl
mov
jno
cltd
xchg
pop
negl
pop
jge
shlb
cmp
pushf
mov
adc
mov
lea
jae
call
inc
call
jmp
outsl
cmp
pop
and
push
insl
push
xor
mov
lds
sub
cmp
xor
jbe
lods
ja
aam
push
mov
or
fwait
jb
xchg
sub
out
jbe
scas
xchg
push
mov
ljmp
and
add
out
dec
dec
ljmp
and
icebp
and
data16
in
sub
lods
les
pop
jmp
call
movl
jmp
jbe
and
call
insb
into
scas
nop
repnz
cmp
imul
fimuls
cmp
repz
out
pop
sub
inc
repz
xchg
fwait
jge
adc
adc
and
loop
in
xchg
xor
xchg
sub
sbb
rorb
xor
out
and
push
pop
add
mov
mov
push
jbe
cmp
in
mov
les
xchg
ret
in
inc
lods
and
sarb
sub
xchg
cmp
fiadds
adc
roll
icebp
push
sbb
in
or
mov
test
cmp
add
jae
pushf
stos
mov
adc
andl
or
bound
or
cltd
jmp
repz
enter
adc
mov
pusha
inc
lods
dec
lods
or
inc
arpl
pop
push
adc
dec
jne
int
sbb
call
mov
in
lea
cmp
lea
movsbw
mov
mov
lea
jmp
lea
je
jmp
call
jmp
push
pusha
bt
add
je
cmp
pushf
bswap
mov
pop
lea
jne
mov
mov
pop
jmp
cmp
pusha
jmp
pushf
inc
pushf
not
bt
stc
jmp
jno
add
enter
pusha
addr16
mov
push
mov
jmp
inc
es
mov
test
fdivrs
dec
and
ret
sti
test
add
xchg
cmp
subl
cmp
aaa
xchg
ret
dec
ljmp
pushf
les
adc
mov
test
cwtl
maskmovq
negl
or
push
mov
jnp
shlb
imul
insl
inc
push
or
out
addr16
sub
fldcw
iret
dec
sub
xor
js
jb
sbb
mov
mov
lret
pop
push
call
sbbb
sbb
and
je
mov
xor
mov
popf
gs
cmp
test
jge
xchg
push
pop
jle
sbb
adc
les
mov
movzbl
bswap
pop
mov
mov
lea
not
lea
lea
jmp
mov
loope
test
leave
cmp
shll
nop
jbe
cmp
into
xor
pop
and
out
cltd
data16
das
insb
pop
mov
lds
subb
jbe
sbb
sbb
ss
das
push
lahf
adc
repz
in
jge
jnp
ds
test
repz
push
ja
adc
push
js
pushf
and
aad
das
fcmovb
mov
int
notb
pusha
xchg
push
mov
les
ret
test
and
xor
mov
lods
les
fdivrs
pop
int3
inc
daa
or
xor
jl
pop
add
and
les
pop
stos
mov
std
js
mov
hlt
pop
les
or
fstpt
lret
or
cmp
adc
mov
inc
xor
pop
dec
in
in
lods
int3
out
xchg
aaa
pop
rol
push
jnp
xlat
popf
cpuid
nop
pusha
jmp
test
pusha
xor
call
push
lea
jne
shl
rcl
mov
push
sub
xor
adc
lea
lea
movb
movb
cmc
sub
test
call
pushf
call
pushf
pushf
popl
pushl
mov
pushf
pushf
pushl
jmp
inc
jmp
jmp
mov
pushl
popl
pushf
lea
jmp
pusha
add
clc
pushf
shld
push
jmp
mov
pushf
lea
jmp
call
sets
setl
bswap
ror
pushf
dec
btc
ror
bswap
call
jmp
pushl
popl
mov
movb
pushl
lea
jmp
sar
rol
mov
call
mov
jmp
mov
jmp
pushf
pushf
xchg
jmp
sub
stc
stc
movl
rol
jmp
pushf
lea
pushf
pushf
mov
pushf
push
lea
jmp
push
pusha
mov
pushf
mov
pushl
pushl
lea
jmp
pushf
pushf
jmp
pushf
mov
jmp
add
pushf
jmp
stc
call
add
call
push
pusha
mov
push
jmp
ror
shl
bts
push
mov
test
bsr
dec
mov
jmp
push
mov
mov
pusha
pushf
pushf
popl
call
lea
jl
cmc
ror
bt
call
stc
sub
cmc
pushf
bt
mov
bt
sub
jmp
pushf
popl
push
movb
pushf
pusha
pushl
popl
movb
pushl
lea
jmp
mov
call
pushf
popl
push
call
cmp
movzbl
rcr
rcl
bsf
sub
movzbw
not
movzbw
cmc
rcl
rol
setns
dec
bswap
sar
sub
movsbw
rol
mov
clc
pusha
pusha
add
test
bt
cmp
clc
add
jmp
aad
btr
bswap
pushf
mov
sub
cmc
ror
adc
mov
pushf
add
jmp
pushf
mov
pushl
popl
push
lea
jmp
mov
call
push
call
jmp
mov
pushl
mov
call
pushf
pushf
pusha
mov
jmp
add
movw
mov
push
movb
push
lea
jmp
movzbl
xchg
movsbw
mov
movzbl
pushf
popl
shld
lea
bsr
xadd
xchg
xchg
mov
bts
and
xadd
pusha
xchg
cmc
bt
bsf
call
pushf
movl
movb
mov
pushf
pusha
mov
pusha
mov
mov
movw
pushf
pushf
popl
pushf
mov
push
call
add
add
movb
mov
pushf
push
movb
lea
jmp
lea
jne
jmp
test
pushf
neg
mov
pushf
pusha
stc
add
movw
mov
lea
jmp
mov
jmp
cmp
pusha
add
call
sub
call
mov
pushf
mov
mov
push
lea
jmp
mov
add
push
pushf
lea
jmp
pushf
popl
push
pushl
popl
movb
lea
jmp
jmp
mov
mov
pushl
pushl
lea
jmp
lea
jno
push
mov
push
lea
jmp
mov
push
push
pushf
popl
call
jmp
xor
neg
cmc
mov
mov
ror
jmp
lea
jb
push
pushl
popl
pushf
push
pusha
lea
jmp
movzbw
aaa
bts
rcl
mov
test
bt
pusha
sub
pusha
call
push
bt
add
pushf
pusha
mov
lea
jmp
bt
shl
push
mov
mov
call
fildl
mov
push
pushf
pushf
lea
jmp
xchg
sbb
not
mov
and
mov
mov
jmp
aas
cmc
pop
lea
aas
sub
rcr
lea
adc
bt
neg
and
test
sub
movzbw
push
movsbl
jmp
mov
pushl
pushf
popl
push
mov
call
jmp
call
cmp
cmp
add
mov
jmp
mov
cmp
sub
stc
push
shr
push
call
jmp
clc
pushl
mov
add
pushf
movw
push
pushf
lea
jmp
stc
jmp
movb
jmp
pusha
pushf
popl
pusha
lea
jns
push
movb
pushl
popl
mov
pushf
lea
jmp
pushf
popl
call
movw
pusha
pushf
popl
jmp
bt
bt
ror
lea
js
dec
clc
stc
pusha
jmp
neg
shld
push
mov
bt
clc
cmp
clc
add
pushf
lea
jmp
pusha
mov
mov
mov
pusha
push
pushf
mov
lea
jmp
and
pusha
movb
push
mov
pushl
jmp
push
mov
push
mov
movb
pusha
lea
jmp
jmp
not
bt
cwtl
shr
mov
setns
rcl
shl
neg
mov
test
call
dec
shl
neg
add
pusha
not
bsf
add
rcl
xor
shl
call
mov
pushf
mov
movl
call
neg
btr
aad
lahf
lea
pushf
cmp
push
pusha
pushl
pushf
lea
ja
and
cwtl
btr
mov
call
mov
pusha
mov
pusha
call
push
pushf
pushl
mov
mov
pushf
push
lea
jmp
call
mov
call
call
btc
bswap
stc
not
mov
shr
rol
shl
bsr
mov
pusha
bt
stc
add
pushf
call
rol
xor
bsf
movzbw
mov
adc
mov
cmc
stc
jmp
clc
pusha
pushl
add
movb
call
test
jmp
test
mov
sar
mov
call
bswap
shl
xor
mov
jmp
jmp
pushf
push
pushf
popl
pushf
call
pusha
dec
jmp
pushl
popl
push
pushl
push
lea
jmp
mov
pushf
pusha
mov
pushf
call
push
mov
pushf
mov
lea
jmp
mov
call
movsbw
inc
bsf
mov
call
not
movzbw
setno
push
pusha
pop
pusha
cwtl
mov
mov
jmp
call
mov
push
movb
pushf
popl
jmp
push
pushf
popl
movb
pushl
popl
push
movw
movb
mov
lea
jmp
pushl
pushl
mov
movb
push
pushf
pushl
ret
jmp
jmp
sub
movsbw
lahf
xor
mov
bts
call
pushf
jmp
sub
clc
shl
lea
jne
pusha
mov
pusha
mov
mov
jmp
sar
bts
add
movzbl
btr
adc
je
sub
cmc
ror
not
inc
setns
dec
bswap
ror
call
movb
mov
call
pusha
mov
movw
mov
mov
pusha
movb
pushf
lea
jmp
sub
pusha
pushf
movw
mul
jmp
movl
pushf
mov
pushf
pushf
popl
movw
push
call
pushf
popl
jmp
btr
shl
clc
dec
mov
bt
add
pushf
pushl
lea
jmp
pushf
popl
mov
jmp
push
movb
mov
push
mov
push
mov
pusha
push
pushf
lea
jmp
push
mov
call
jmp
ror
mov
adc
adc
xor
xor
add
mov
call
cmc
push
mul
pusha
movb
mov
movb
jmp
mov
movw
pushf
mov
mov
mov
call
cmp
and
stc
mov
pusha
mov
test
pushf
pusha
call
mov
call
clc
jmp
jmp
mov
mov
mov
pushf
pushf
popl
push
mov
pusha
push
movb
push
mov
pushf
mov
call
mov
push
pushf
push
movl
lea
jmp
mov
sub
or
push
bt
pushl
bswap
cmc
rcl
sbb
push
bsf
movsbw
mov
movsbl
inc
neg
shl
sub
bt
pushf
rcl
ror
and
shr
shrd
xor
cmc
bsr
lea
pusha
rcl
sub
shl
mov
movzbl
shl
mov
cmp
clc
cmc
add
bswap
movsbl
mov
call
add
mov
inc
mov
bt
test
pushf
pushf
sub
jmp
mov
pushf
mov
mov
jmp
call
ror
stc
btc
not
bts
cmc
bts
ror
bsf
shr
neg
movzbw
lea
lea
and
rol
mov
bt
push
add
pushf
call
lea
cwtl
jmp
pushl
pusha
movl
jmp
jmp
neg
sbb
sbb
pushf
mov
stc
stc
clc
jmp
mov
pushl
mov
pushf
push
movw
movb
lea
jmp
mov
lea
jl
pushf
pushf
mov
pushf
popl
mov
mov
mov
mov
pushf
pushf
call
call
jmp
call
ror
push
cmc
call
bswap
mov
test
cmp
stc
add
push
jmp
or
or
mov
decb
mov
or
sub
or
mov
or
aaa
or
or
dec
add
mov
or
pushf
or
or
orb
mov
cld
or
mov
pop
or
add
or
jg
or
or
or
or
mov
or
add
or
xchg
decl
mov
decl
mov
decl
mov
decl
mov
or
or
pop
or
mov
or
cs
or
in
add
mov
or
or
or
push
std
or
push
add
or
pop
add
or
sti
pop
or
pushf
decb
or
or
add
or
mov
or
mov
cld
or
sub
or
fmull
or
leave
or
mov
std
or
call
push
or
push
push
or
add
or
cltd
or
or
or
mov
push
or
mov
or
cs
or
int3
add
or
or
or
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
push
or
mov
std
or
int3
cld
or
roll
or
push
add
or
add
or
mov
push
or
ljmp
or
add
or
or
fmuls
or
pushf
or
or
pop
add
or
sti
pop
or
outsl
or
mov
cld
or
lods
or
mov
or
mov
std
or
mov
or
or
or
or
or
or
in
add
mov
or
or
push
or
mov
or
or
or
add
or
pop
add
or
dec
add
mov
decl
mov
decl
mov
decl
mov
decl
or
add
or
jg
or
or
or
or
mov
or
push
add
mov
or
push
add
mov
sti
or
pop
pop
or
dec
decb
mov
or
mov
or
leave
or
mov
cli
or
add
or
push
add
or
decl
mov
or
mov
or
mov
add
mov
or
out
or
or
or
push
or
mov
or
jg
or
mov
add
or
or
add
or
xchg
or
mov
or
add
or
or
or
ljmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
or
or
roll
or
leave
or
mov
or
or
cmp
or
push
or
and
or
xchg
or
roll
or
mov
or
mov
cld
or
and
or
and
or
pushf
decb
mov
pop
or
dec
and
mov
mov
push
pushl
mov
pushf
lea
jmp
sar
call
shl
mov
jmp
call
pusha
mov
push
push
lea
jmp
call
lea
jae
mov
pushf
push
pushl
mov
lea
jmp
cmp
cmc
add
movb
pushf
pusha
lea
jmp
call
bt
push
mov
mov
add
pushf
mov
mov
lea
jmp
mov
jmp
pushf
push
pusha
mov
call
pushf
pushf
mov
mov
movw
call
and
cmp
push
cmc
cmp
pushf
pushf
push
pushf
lea
jne
adc
setne
shld
sub
xorb
jmp
dec
sub
jo
mov
test
cmc
test
add
call
jmp
mov
pushf
popl
call
pushf
pusha
fwait
pushl
pushf
lea
jmp
aam
daa
pusha
shld
notl
bsf
seto
rcr
push
mov
call
clc
dec
call
test
shl
lea
jbe
pushf
pushf
mov
pushl
call
cmc
sub
jmp
mov
push
push
pushf
pushf
mov
pushf
call
pusha
call
lea
je
popl
push
push
pushf
pusha
lea
jmp
pusha
sub
cmc
bt
bt
ror
lea
jp
pushf
pusha
mov
dec
call
rcr
bt
sar
neg
sub
call
push
cmp
clc
add
clc
movb
pusha
lea
jnp
sub
jmp
cmc
push
add
jmp
call
pushl
popl
movb
push
movw
lea
jmp
mov
pushf
pushl
pushf
mov
movb
jmp
btr
add
sar
lahf
mov
test
clc
sub
push
cmp
pushf
add
pusha
pushl
pushf
popl
pushf
pushl
popl
push
lea
jmp
pushf
flds
push
push
push
movl
lea
jmp
pushf
mov
pushl
lea
jmp
pushf
pushf
lea
cpuid
cmc
cmc
push
sub
pushf
pusha
cmp
cmpl
mov
movb
lea
jp
mov
pushf
movb
mov
pusha
mov
mov
mov
call
call
pusha
pushf
mov
pushl
mov
call
jl
pusha
mov
jmp
sar
sar
cmp
mov
pushf
stc
pusha
cmc
add
pushf
mov
pushf
movb
lea
jmp
pushf
call
lea
jg
mov
call
pushf
mov
movw
push
mov
pushf
lea
jmp
jmp
lahf
bswap
mov
call
pushf
mov
movw
mov
lea
jmp
pushl
jmp
pusha
call
jmp
seta
mov
movzbw
mov
push
pushf
idivl
pusha
call
mov
call
movb
call
pushf
pushf
mov
push
mov
movb
push
lea
jmp
pushf
call
call
mov
cmc
stc
add
stc
jmp
pushl
popl
movw
pushl
pushf
lea
jmp
call
pusha
pushf
call
mov
call
call
push
mov
mov
mov
pushf
pushl
mov
movl
lea
jmp
pusha
pushl
dec
clc
ror
cmp
sub
test
stc
lea
test
cmc
clc
cwtl
push
test
movw
test
sub
mov
mov
mov
pushf
mov
pushf
lea
jmp
pusha
push
pushf
jmp
push
mov
pushf
mov
pushl
pushf
mov
movb
lea
jmp
pushf
mov
pushf
movl
mov
lea
jmp
push
mov
mov
mov
pushf
pushf
popl
jmp
sbb
mov
seta
mov
stc
test
stc
not
clc
pushf
not
call
mov
jmp
bswap
mov
call
pushf
push
pushl
popl
movb
mov
lea
jmp
mov
push
call
pushf
movl
pushf
popl
mov
jmp
pusha
mov
push
pushf
lea
jmp
call
mov
movb
mov
pushf
lea
jmp
bsr
mov
or
pop
call
call
inc
or
add
pusha
mov
mov
mov
mov
mov
push
lea
jmp
jmp
jmp
call
movzbw
or
add
mov
neg
call
pushf
pusha
mov
pushf
mov
mov
pushl
lea
jmp
call
pushl
pushf
mov
pushl
mov
pushf
lea
jmp
bt
dec
test
movzbl
stc
pusha
sub
cmc
pushl
cmc
pusha
not
clc
rol
jmp
mov
mov
pusha
call
mov
pushf
push
movb
pushf
popl
lea
jb
pushf
mov
pushf
mov
call
xchg
cmc
pushf
call
cbtw
bswap
btr
sar
mov
or
clc
bswap
movsbw
mov
bsf
mov
cmc
cmp
sub
pushf
div
pusha
call
pushf
mov
mov
pushl
mov
movw
call
pushf
jmp
sub
stc
push
cmc
pushf
add
pushl
push
pushf
call
jmp
mov
pushl
mov
call
pusha
mov
movw
movw
pusha
mov
pushf
mov
pushf
push
call
pushf
cmp
mov
add
mov
cmc
ror
mov
ror
bsf
shrd
sub
not
ror
sar
btr
setno
add
mov
sub
pushf
sbb
add
clc
xor
pusha
inc
movzbl
push
push
mov
clc
push
cmc
cmc
or
mov
jmp
call
pushf
mov
pusha
mov
pushf
pusha
call
pushf
mov
test
push
call
mov
jmp
push
mov
movb
mov
lea
jmp
pushf
mov
mov
pushf
pusha
mov
lea
jmp
pushf
pushf
mov
call
not
jmp
add
push
cmc
ror
jmp
pushf
pushf
mov
call
mov
pusha
pushf
pushf
popl
std
pop
movzbw
xchg
call
jmp
push
mov
push
mov
mov
mov
movb
mov
jmp
movw
jmp
mov
push
pushf
popl
pushf
push
pushf
mov
call
mov
pushf
pushl
lea
jmp
bswap
lea
pusha
mov
movw
cld
movzbl
movsbw
lea
call
mov
jmp
stc
pushl
popl
push
add
pusha
lea
je
push
stc
pushl
popf
pushf
pushf
pushf
push
lea
jmp
call
stc
cmc
sub
pushl
movw
jmp
mov
test
bt
push
add
jmp
btr
bts
cbtw
mov
bt
pushf
cmc
xchg
cmp
sub
movb
call
movw
mov
pushf
popl
pushf
mov
movb
jmp
mov
pushf
lea
jmp
movl
pushl
popl
pushf
movb
push
lea
jmp
mov
jmp
pushf
pushf
lea
jne
bts
cmp
mov
bt
pusha
and
pushf
cmc
cmp
push
lea
jne
stc
shrd
sbb
xorb
jmp
jmp
inc
shrd
bsf
and
mov
clc
sub
pushf
pushf
mov
pushf
pushf
pushf
pushl
lea
jmp
dec
mov
jmp
clc
jmp
call
mov
pushf
pushf
pushl
pushf
lea
jmp
btc
and
mov
pushf
bt
jmp
jmp
pushf
popl
pusha
pushl
popl
mov
pushf
lea
jmp
mov
call
pushf
pushf
popl
mov
jmp
mov
movb
pushf
mov
jmp
pushf
push
jmp
movb
dec
call
pusha
pushf
popl
push
pushl
pushf
pushl
popl
mov
lea
jmp
pushf
pushf
mov
pushf
lea
jae
pushf
pusha
mov
pushf
mov
mov
lea
jmp
pusha
pusha
jmp
call
mov
movb
jmp
jmp
pushf
jmp
mov
movb
lea
jmp
dec
btc
adc
sub
jmp
jmp
mov
pusha
mov
pushl
mov
jmp
mov
jmp
test
cmp
add
bt
cmc
cmc
pushl
sub
push
call
sar
cwtl
inc
mov
test
stc
clc
add
jmp
pushf
pusha
xchg
movzbw
push
call
pushf
movw
mov
push
lea
jmp
movw
movw
mov
lea
ja
pusha
mov
push
movb
push
mov
movb
lea
jmp
jmp
movb
mov
pushf
pushf
popl
jmp
call
movw
mov
push
push
pushf
mov
pushf
lea
jmp
pushl
mov
pushl
popl
movb
pusha
push
mov
lea
jmp
push
pushf
mov
call
pushf
popl
pushf
pusha
mov
push
call
add
movw
mov
push
movb
lea
jmp
mov
call
bsf
pusha
pushf
mov
ror
mov
pusha
sub
jbe
pusha
clc
add
mov
movb
pushf
jmp
movw
push
mov
pushl
pushf
pusha
movw
lea
jmp
pushl
mov
pushf
mov
mov
pushf
jmp
sub
clc
pusha
shr
movl
push
mov
mov
mov
pushf
popl
movb
pusha
pushf
pushf
pushl
popl
movw
mov
lea
jmp
jmp
mov
call
mov
jmp
sub
pushf
test
stc
sub
test
test
add
call
pusha
movw
mov
pusha
movl
pushf
mov
pushf
push
pushf
jmp
stc
stc
bt
sub
push
movb
jmp
pushf
mov
movl
movl
call
test
add
pushf
jmp
jae
mov
cmp
clc
sub
jmp
push
dec
jmp
pushf
bt
sub
cmp
call
call
movsbw
not
bswap
btc
push
jmp
clc
sub
clc
sub
stc
ror
pushf
pushf
pusha
add
call
pusha
call
btc
bt
mov
pushf
stc
call
pushl
mov
push
mov
jmp
movw
mov
pushl
pushf
pushf
popl
movb
jmp
rol
push
call
jmp
pushl
call
lea
ja
mov
pusha
push
mov
pushf
lea
jmp
test
sub
pusha
call
stc
call
pushf
push
pushf
mov
movb
pushf
mov
pusha
mov
pushf
call
bsf
daa
pusha
mov
movsbl
cmp
btc
mov
cmc
not
test
pushf
pushf
cmc
not
clc
mov
and
pushf
jmp
push
pushf
popl
jmp
pushl
mov
mov
mov
pushf
push
pushl
ret
bts
neg
mov
jge
sbb
bsr
movsbw
mov
bt
cmc
add
pusha
mov
pusha
movb
lea
jmp
call
cmc
lahf
jmp
pusha
push
pushf
popl
mov
pushf
mov
pushf
jmp
sbb
mov
sar
add
btr
xor
sbb
adc
mov
pusha
bt
shl
pushl
shr
bt
stc
pusha
or
mov
xor
pushf
jmp
call
mov
clc
pushf
cmc
movb
add
movl
movb
lea
jmp
jmp
movb
mov
pushf
lea
jmp
pusha
pushf
mov
jmp
mov
pushl
popl
pushf
pushl
push
push
lea
jmp
call
stc
add
pushf
call
movb
pushl
popl
mov
push
movb
pushf
lea
jmp
sub
mov
pushf
push
adc
inc
mov
jmp
mov
pushl
pusha
mov
movb
lea
jmp
push
mov
pushl
mov
lea
jmp
neg
rcr
movzbl
cmp
sub
jmp
pushl
push
movb
mov
movl
jmp
jmp
push
jmp
mov
pushf
jmp
call
ror
jmp
push
push
mov
jmp
clc
popf
pushf
lea
jmp
mov
pushl
pushf
jmp
pushf
pushl
popl
pushl
mov
lea
jmp
shl
shl
pushf
sub
mov
add
jb
clc
sub
bt
jmp
and
push
pushf
popl
call
mov
push
call
and
add
push
rcr
bt
movzbl
bts
cmc
mov
stc
call
jmp
call
push
pushf
dec
cmc
pusha
stc
ror
pushl
bt
pushl
test
sub
test
cmc
bt
test
mov
call
mov
jmp
pushf
movb
mov
mov
pushf
jmp
mov
mov
mov
movb
mov
lea
jmp
cmp
mov
jmp
pop
pop
pusha
mov
pusha
movb
lea
jmp
mov
call
cmp
sub
movb
mov
pusha
movb
lea
jmp
dec
jmp
mov
pusha
push
mov
push
lea
jmp
call
jmp
pusha
fstps
pusha
movl
lea
jmp
add
mov
jno
clc
sub
pusha
pusha
mov
push
pushf
pushl
lea
jmp
dec
mov
adc
stc
mov
test
pusha
mov
sub
mov
shr
pushf
call
mov
pushl
pushf
mov
jmp
call
mov
mov
pushl
pushl
mov
lea
jmp
pushf
popl
pushf
mov
pusha
pushf
pushf
push
mov
jmp
mov
push
push
mov
lea
jne
mov
pushf
pushf
lea
jmp
pusha
pushl
pusha
mov
mov
push
movb
mov
push
movb
lea
jmp
ror
clc
movl
clc
sub
stc
mov
call
push
xchg
pushf
pop
movsbw
mov
movw
std
push
pushf
cld
pushl
pushf
rep
btc
sar
pop
mov
bswap
bsr
std
sar
mov
cld
stc
pushl
popf
movb
mov
movb
lea
jmp
pushf
pushf
pushf
pushf
mov
jmp
sub
call
jmp
pushf
jmp
test
mov
cmp
sub
test
call
add
movb
pushf
pushf
mov
pushl
pushl
mov
lea
jmp
btr
das
bsr
mov
lea
bsr
sub
aas
mov
sar
sub
mov
cmp
mov
bts
or
pop
mov
bt
xadd
pusha
mov
cmp
pushl
popf
lea
movsbl
pushf
mov
seto
movl
mov
movzbl
mov
push
pushl
ret
jmp
dec
bts
sub
bt
shl
shl
shld
mov
stc
jmp
bswap
pushf
add
jmp
movw
pusha
mov
pushf
lea
jmp
bsf
mov
cmp
cmp
pusha
jmp
call
cltd
mov
mov
pusha
setle
mov
push
pushf
pushl
pushl
divl
call
mov
pushf
lea
jmp
movb
pushf
popl
movb
pushl
popl
pushf
pushf
lea
jmp
add
push
lea
jmp
pusha
pusha
pushf
mov
push
pushf
push
movb
lea
jmp
pushl
push
pushf
popl
movb
jmp
pushf
ror
cmp
sub
call
pop
push
push
pusha
lea
jmp
call
shr
movzbl
call
jmp
jmp
shrd
mov
call
jmp
shl
xor
neg
mov
stc
add
pushf
push
lea
jmp
pusha
pusha
pushf
mov
pushl
lea
jmp
inc
stc
stc
mov
add
pushf
test
cmp
sub
cmp
clc
push
jmp
pushf
mov
lea
jbe
pushf
pusha
lea
push
mov
pushf
mov
mov
pushf
pushf
push
lea
jmp
jmp
mov
pushf
popl
push
pushl
popl
pusha
movb
pushf
lea
jmp
aas
bswap
inc
mov
adc
shr
mov
test
pushf
bt
clc
add
push
pushl
jmp
pushf
jmp
jmp
movb
lea
jne
bswap
btr
mov
push
test
pusha
call
pushf
mov
movl
pusha
mov
lea
jmp
jmp
pushf
decl
push
lea
jne
pushf
pusha
mov
movb
pusha
lea
jmp
mov
movb
lea
jmp
mov
jmp
pushl
mov
push
mov
push
lea
jmp
mov
push
pushl
lea
jmp
pushl
mov
jmp
cmc
sub
cmc
pushf
stc
jmp
mov
call
aaa
sar
xor
mov
rcl
ror
cmc
setp
mov
cmc
cmc
clc
sub
bt
jmp
jmp
mov
call
mov
pushf
mov
pushf
pushf
mov
pushl
pushl
pushf
pushf
lea
jmp
jmp
rdtsc
mov
not
mov
shr
rcl
cmc
shl
mov
bt
stc
add
test
push
movb
cmp
shrd
mov
pusha
pushf
pushf
mov
jmp
push
mov
jmp
btc
stc
add
rcl
mov
clc
mov
jmp
push
call
mov
mov
pushf
pusha
pushf
lea
jmp
shrd
btr
mov
setns
dec
test
add
jmp
add
aaa
inc
sar
mov
add
cmp
mov
pushf
pushf
clc
add
pushf
call
mov
pusha
pushl
lea
jmp
pushf
pushf
mov
mov
call
pushf
popl
jmp
sub
jmp
mov
movw
mov
mov
movb
lea
jmp
pusha
mov
call
mov
call
push
call
pushf
popl
pusha
pushl
popl
movb
pushf
lea
jmp
cbtw
movb
test
mov
cwtl
cmp
test
sub
pushl
mov
pushf
movw
pushl
lea
jmp
setb
pusha
movb
pusha
mov
call
ror
movsbl
ror
neg
lea
and
not
rcl
shl
test
mov
bt
sub
pushf
pusha
mov
movb
mov
pushl
push
lea
jmp
movw
lea
je
stc
sub
cmc
jmp
push
movb
jmp
mov
call
bsr
rdtsc
pushf
stc
sub
jmp
movl
jmp
push
push
mov
pushl
mov
pusha
pushf
mov
mov
jmp
movb
pushl
popl
push
pushf
mov
pusha
lea
jmp
pushf
call
stc
xchg
clc
push
stc
push
cmc
sub
jmp
push
mov
pushf
push
pushf
pushf
mov
jmp
add
add
add
xor
adc
add
fsubl
add
mov
add
jmp
std
or
adc
or
adc
cmpsb
or
add
add
or
xchg
or
xor
or
