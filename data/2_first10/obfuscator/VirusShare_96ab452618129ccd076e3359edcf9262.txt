add
add
push
cltd
and
add
add
add
add
add
add
add
addb
add
push
cltd
and
add
add
add
add
add
add
add
push
cltd
and
add
add
add
add
add
add
add
js
add
dec
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
and
add
push
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jb
imul
xor
and
inc
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
arpl
jb
imul
xor
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jb
imul
xor
add
inc
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
dec
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
and
and
push
add
jb
imul
xor
and
inc
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
mov
dec
mov
shrd
sbb
mov
xor
cmp
mov
and
not
shr
sub
not
call
sub
clc
cmp
jmp
pushf
call
lea
je
stc
pushf
cmc
test
cmp
pusha
lea
je
push
movb
stc
cmp
pusha
lea
je
pushf
pusha
pushl
movb
lea
jmp
inc
pusha
jae
jcxz
insl
xchg
add
cmp
lahf
xor
es
ret
mov
xchg
inc
or
fisttpl
adc
mov
adc
push
lea
mov
mov
les
cmp
push
movsb
jl
notb
out
push
roll
mov
mov
push
ljmp
xchg
scas
xor
jecxz
dec
jecxz
call
adc
testb
xchg
out
loope
mov
das
push
mov
lods
mov
int
das
popf
jae
pop
int
cs
decb
cmp
mov
sub
ret
addr16
subb
arpl
data16
xchg
mov
cmpsb
cmp
into
add
js
mov
pop
pop
int
add
sbb
ds
into
xchg
das
pusha
imulb
daa
pop
xchg
sbb
movzbw
mov
pop
movzbw
push
pop
mov
lea
jmp
cmp
push
sub
std
orl
xchg
in
pop
mov
test
lcall
loope
fnsave
lods
sub
pop
lock
push
add
cmp
fstpt
dec
scas
outsl
aaa
sub
xor
sarl
cltd
jns
lea
loop
fwait
xchg
add
push
call
adc
mov
daa
add
ljmp
sahf
mov
out
sbb
lock
cmpsl
push
lahf
addr16
or
and
in
leave
add
cmp
jne
pop
ss
sub
sti
loop
loope
sbb
data16
or
lods
enter
fchs
dec
pushw
push
push
notb
and
adc
dec
les
push
and
fcoml
cwtl
push
inc
or
and
fs
mov
or
xchg
pop
mov
lock
aas
mov
lret
inc
dec
js
jb
xchg
sub
lcall
pop
js
pop
xor
adc
ss
hlt
xchg
repnz
lahf
shl
sbb
nop
shl
lret
mov
leave
xchg
popa
movsl
adc
jne
jmp
add
imul
jmp
mov
test
fadds
xor
sbb
rorl
fsubrs
or
mov
push
clc
clc
repnz
pusha
call
pushfw
popw
stc
ror
not
clc
mov
pushf
push
stc
rol
test
sub
mov
pushf
not
movw
jmp
movzbw
mov
pushf
pushl
ret
mov
lea
jns
pusha
pushf
lea
call
pushf
jmp
mov
call
pushf
pusha
dec
pushl
inc
inc
inc
not
mov
inc
jmp
lods
pushf
cmc
clc
rol
clc
sub
mov
pusha
call
imul
gs
xor
cs
insb
add
pushl
push
movw
pushl
ret
repnz
push
bswap
stos
bound
dec
mov
jb
movsb
rcll
je
pop
mov
and
sar
aad
sbb
push
cs
cwtl
rorb
ficompl
out
mov
jl
cmp
inc
mov
mov
mov
inc
je
jmp
rol
pusha
mov
sub
mov
pushf
not
call
adc
pushf
movb
movl
lea
jmp
dec
call
pushw
popfw
mov
inc
mov
push
call
call
lea
push
mov
movzbw
mov
push
mov
push
mov
pushf
movb
movb
movl
pushl
ret
lea
jne
mov
lea
pusha
setbe
movb
mov
push
call
movb
pusha
movb
mov
cwtl
call
push
call
negb
add
add
shlb
inc
and
adc
add
in
push
jmp
pop
ret
add
pushf
xor
lea
stc
call
call
cmp
bt
bt
cmp
sub
push
lea
jne
call
call
jmp
lea
jne
push
mov
sub
movzbw
sub
btr
shrd
lea
add
test
sub
cmc
ja
pushl
cmp
push
cmp
pusha
push
jmp
pusha
test
jmp
jmp
push
call
enter
add
inc
gs
outsl
fs
gs
imul
add
clc
pushf
pushf
cmc
pusha
cmp
call
test
sbb
sub
mov
pushf
cmpb
call
mov
xor
lods
pop
pusha
das
sbb
mov
mov
add
adc
fcoms
xor
pop
push
push
rclb
jmp
fbld
ficomps
jne
andb
lock
sarb
cmp
mov
out
jmp
decb
and
dec
pop
add
and
jbe
xor
pop
add
sbb
sar
mov
and
jge
aas
inc
jbe
lock
mov
enter
add
je
add
dec
ljmp
cmpsb
push
and
imul
adc
pusha
clc
push
and
stos
mov
sbb
push
loope
add
pusha
jl
test
push
add
xor
pusha
push
fwait
sbbl
cmp
xor
imul
mov
clc
fsubrs
and
xchg
xor
les
and
xorl
push
test
mov
shlb
enter
mov
push
mov
out
jmp
gs
or
fbld
xchg
mov
xor
mov
lock
int3
dec
push
sbb
loopne
pop
fcoml
mov
jo
inc
push
inc
lahf
and
call
iret
std
and
push
insb
cmp
xor
nop
popf
mov
mov
xor
cld
or
and
stos
sarb
std
xorl
cwtl
pop
mov
push
daa
add
dec
mov
fisubrl
dec
addl
cmp
imulb
jnp
pop
loope
or
nop
adc
aaa
add
xorl
mov
and
les
cmp
nop
add
gs
arpl
imul
dec
or
js
inc
dec
add
fwait
rclb
inc
fiadds
dec
mov
jge
dec
jl
fadds
mov
std
pusha
nop
push
shlb
xchg
adc
sbb
shl
jecxz
pusha
xor
addl
clc
aaa
mov
jmp
je
test
aam
push
pop
std
mov
or
loop
adc
push
icebp
mov
sub
mov
popf
push
jle
mov
add
lock
jl
add
fistps
add
mov
add
adc
mov
decb
call
push
stos
jl
lods
dec
sbb
sahf
adc
dec
dec
mov
jle
sbb
sbb
xchg
movsl
in
push
js
leave
dec
mov
mov
push
pusha
push
push
outsl
and
xchg
nop
iret
push
das
pusha
je
add
push
jl
les
fbstp
test
stos
loopne
pop
xchg
repz
aas
push
lock
xchg
add
sbb
inc
inc
push
mov
mov
test
fsts
dec
push
jno
jle
mov
jbe
cmpsl
repnz
xchg
add
fdivs
clc
push
mov
jmp
loopne
lea
dec
lock
lret
popf
enter
stos
cmp
enter
hlt
adc
lea
or
out
jl
mov
clc
and
ret
popa
loope
stc
fsubrs
out
cmp
lea
xor
xor
pop
adc
push
std
cmp
sbbb
cltd
add
aas
push
mov
xorb
int3
stos
jmp
mov
add
enter
or
and
rep
lds
xor
sbbl
push
and
aaa
rcrb
loop
adc
dec
sarl
pusha
cmpsl
xchg
push
dec
lahf
fdivs
adc
dec
jp
push
clc
sub
pop
and
js
in
mov
dec
popa
scas
push
lea
push
pop
loopne
cmpl
sbb
jbe
jge
sbb
jmp
scas
shr
xor
cld
adc
js
fs
ficompl
lods
fcomps
dec
adc
push
or
xor
dec
jnp
xor
dec
daa
inc
push
into
or
pusha
add
andb
movsb
mov
ja
sbb
jmp
fwait
pop
inc
insb
xor
dec
inc
xchg
or
mov
push
sub
and
dec
js
xor
mov
cmp
cmc
push
int3
faddl
jnp
sbb
in
lret
sbb
stc
add
cmpsl
inc
add
inc
jae
pop
scas
mov
dec
loopne
bswap
enter
lahf
pop
or
add
pop
cld
xchg
dec
stos
mov
jg
das
jecxz
cmc
unpckhps
shll
call
push
jb
mov
sbb
jp
dec
movsl
inc
shl
aad
lock
repnz
mov
or
dec
push
push
add
cmp
xchg
sbb
arpl
cwtl
xorl
push
or
sarl
pop
xor
rolb
or
mov
fists
lea
push
fisubs
sbb
mov
push
sbb
js
jnp
sbb
imul
mov
in
cmpsl
mov
lahf
sar
jo
push
add
ljmpw
or
push
dec
jecxz
adc
pusha
add
out
cmp
or
aas
or
cmp
popa
xor
adc
xchg
ds
add
dec
sbb
dec
loope
and
xor
dec
mov
sbb
push
int3
pop
xchg
rorb
push
scas
pop
std
movsl
lret
test
xchg
test
test
add
fsubl
lea
idivl
push
cltd
or
les
push
popf
lds
mov
stc
jle
je
jbe
adc
add
clc
xchg
push
push
sbb
xchg
push
jg
push
cmc
or
mov
mov
int
cwtl
sub
jmp
out
cltd
mov
adc
jno
sub
pop
fisttpll
cmp
lds
cltd
mov
ret
fstps
loope
loope
and
loopne
cltd
mov
mov
and
add
xorl
or
daa
mov
dec
or
push
jo
pop
mov
mov
les
mov
faddp
jge
xor
xchg
pop
or
mov
incl
jp
jl
rolb
sbb
shrb
dec
mov
push
jl
xchg
clc
cwtl
hlt
xor
test
xorl
arpl
fstl
mov
adc
hlt
push
jae
jbe
rorl
mov
call
add
push
pop
rcrb
mov
mov
xlat
adc
vaddps
jmp
pushf
add
pop
jl
and
adc
in
xchg
js
adc
out
pop
lahf
mov
and
dec
cmp
mov
or
ss
cmp
or
add
and
sbb
inc
adc
dec
arpl
lock
push
mov
sbb
mov
insb
push
xchg
dec
out
sbb
add
dec
in
xchg
sbb
add
push
push
into
outsb
adcb
dec
sbb
xchg
int
mov
sub
push
adc
sarl
and
dec
inc
adc
dec
enter
xor
pinsrw
rcr
or
addr16
roll
adc
enter
lahf
push
je
xchg
outsb
pop
jb
out
cmpsl
xor
int3
mov
das
pop
jmp
pop
movsl
nop
adc
mov
mulb
stos
and
fwait
push
sub
filds
in
xor
insl
out
cmp
xor
lock
popa
mov
das
sbb
fwait
jmp
fmull
pop
jl
leave
repz
pop
and
and
std
lret
pop
jp
adc
leave
movhps
add
cltd
sub
xor
ljmp
push
es
push
insb
leave
mov
das
into
xchg
pop
sub
sbb
jmp
sbb
movsl
scas
jne
pop
pusha
add
add
jnp
lock
cmp
pusha
pop
lea
or
pop
or
dec
xchg
mov
push
ja
addr16
imul
mov
inc
or
push
sbb
jmp
mov
mov
es
loope
push
push
hlt
inc
addr16
or
or
mov
loope
icebp
mov
notb
outsb
adc
mov
sbb
inc
hlt
xorl
mov
popa
xor
imul
pop
clc
add
cmp
pop
jno
lea
xor
xchg
jp
popl
fstpl
cwtl
rcrb
dec
cwtl
lods
jl
movntq
fnstenv
aad
fmul
insb
jb
fcomps
sbb
pop
push
int
or
enter
adc
push
jmp
icebp
sbb
jno
aas
mov
pop
jns
and
sub
cmp
adc
xchg
xchg
into
fwait
int3
adc
mov
add
fsub
xor
sbb
sub
fsubs
xchg
mov
add
test
pop
or
xchg
jne
les
or
pusha
pop
pop
xor
lock
das
or
mov
mov
lahf
jle
or
push
fstl
pop
int3
out
mov
sbb
sub
add
xlat
in
sub
mov
sbb
rcrb
imul
scas
nop
pusha
mov
jmp
int
jmp
add
outsb
push
into
insl
dec
jbe
jl
movsl
mov
cwtl
lock
pusha
lret
xchg
das
arpl
sarl
xor
xor
sbb
rcrb
dec
outsb
js
jmp
push
pop
mov
mov
ror
in
andl
loope
push
cmp
or
mov
xchg
push
sub
test
dec
dec
into
loopne
mov
popa
adc
loop
or
in
cmpsl
adc
cmp
sub
fists
xorb
insb
mov
or
rcrl
mov
sbb
sbb
std
in
push
hlt
adc
dec
sub
ss
out
subb
imul
mov
pushl
popa
fdivrs
push
mov
imul
mov
push
fwait
movl
movsl
mov
lock
adc
std
sbb
shlb
mov
nop
cmpl
or
pushf
repz
sbb
fsubrp
outsb
nop
ljmp
mov
cmp
fcompl
sbb
jo
jns
mov
add
mov
test
mov
pop
push
pusha
in
mov
out
cwtl
mov
dec
jmp
test
or
clc
cmc
xor
cmp
out
mov
add
sbb
or
scas
or
pop
dec
into
mov
hlt
js
testl
das
shlb
push
imul
mov
push
ficomps
loop,pn
lea
movsb
inc
pop
lock
xor
or
stc
ljmp
add
shlb
pushf
mov
nop
ja
cltd
inc
sbb
mov
push
jne
fnstcw
rcrb
add
nop
push
aaa
dec
mov
push
jmp
imul
aaa
pop
idivl
xchg
int3
push
call
out
cmpl
das
hlt
xor
cld
idivl
jnp
push
push
std
aaa
sbb
cmp
bswap
jg
ss
cltd
sbb
push
in
push
in
mov
push
outsl
push
mov
mov
add
jg
repnz
mov
rolb
pushf
aas
psubsw
aam
insb
push
rol
pop
lahf
lahf
lock
or
fildll
dec
loopne
lret
leave
ss
push
pop
les
dec
pop
pop
stos
jecxz
insb
std
and
sbb
push
aam
or
adc
push
sub
mov
mov
mov
and
cwtl
rolb
or
jl
jmp
cmc
jne
or
adc
ja
adc
loope
adcl
gs
jge
in
fs
or
pop
test
jmp
movsl
jb
fs
repnz
in
jp
sbb
pop
mov
roll
mov
loop
mov
sbb
sbb
insl
xor
das
adcl
lahf
stos
push
cmp
push
cmp
mov
sbb
push
pop
jno
add
loop
fldenv
xchg
mov
jmp
in
jmp
or
clc
push
cld
cmp
dec
or
push
and
fwait
push
iret
xchg
cmp
xchg
dec
bound
orb
inc
stos
xchg
mov
xchg
je
mov
jl
adc
stos
push
add
mov
and
fisubs
xchg
mov
test
inc
js
loope
xchg
inc
or
out
out
mov
sbb
into
jg
jnp
xchg
xchg
and
sbb
cli
sub
sbb
lahf
orl
push
cld
jae
mov
cmp
mov
js
and
xchg
adc
adc
das
and
stos
testb
add
test
call
adc
lods
test
sahf
sub
add
sub
push
jne
jne
lock
outsb
fimuls
jae
mov
mov
test
in
js
cmpsl
sbb
adc
orb
sbb
sub
icebp
mov
pop
in
jg
xlat
popa
in
inc
nop
and
test
cmp
mov
cmovae
cltd
inc
wbinvd
dec
shlb
ds
pop
push
xlat
mov
out
or
daa
addr16
enter
xchg
pop
out
imul
popa
mov
mov
push
xchg
andb
xchg
adc
xchg
ljmp
loopne
and
rcll
adc
or
mov
jge
gs
pop
lahf
xchg
push
xor
dec
movd
popf
call
insb
fmuls
insb
mov
xchg
adc
jnp
add
das
lcall
loope
sbb
push
adc
cld
jl
mov
fiaddl
rorl
and
test
sbb
or
fs
mov
ds
negl
add
pop
test
rolb
push
fsubrl
jo
sbb
dec
sbb
ret
add
push
jmp
pushf
les
adc
add
jl
dec
sub
fsubs
mov
adcb
mov
aad
test
negl
push
inc
aaa
pop
pop
mov
push
inc
lods
jle
jecxz
inc
mov
ds
fsubp
mov
lahf
add
jmp
sub
dec
je
add
insl
jmp
fisttps
pop
dec
icebp
mov
or
dec
daa
aad
mov
dec
cmpl
mov
mov
pop
rolb
test
pop
mov
push
jle
xchg
insl
xchg
add
rorl
out
and
ja
mov
dec
push
pusha
push
push
insl
jge
jecxz
fs
icebp
cld
mov
test
in
negb
inc
nop
addl
in
sbb
cmp
aam
pusha
scas
pop
in
pop
push
cli
stc
sbb
xchg
inc
mov
sub
mov
jmp
add
pushf
hlt
insl
shlb
xlat
mov
push
cmpsl
mov
bound
jmp
ficoml
fldcw
adc
std
imul
les
daa
out
inc
fsubrs
and
scas
push
sbb
sbb
testl
push
fsubs
nop
sub
push
xchg
mov
lock
fcmove
cwtl
xor
jo
or
jge
pop
dec
sub
in
xchg
es
scas
inc
mov
das
push
and
push
jmp
pop
lahf
xor
sub
shrd
jo
mov
aaa
sbb
jmp
dec
jns
or
or
addr16
int3
pop
inc
jno
xorl
mov
pushf
test
cli
pop
or
pusha
dec
xchg
mov
aas
and
out
push
inc
xchg
leave
das
or
js
mov
xchg
dec
fdiv
enter
gs
cwtl
jl
or
je
push
rorb
jnp,pn
jne
push
stos
xchg
mov
loopne
and
jb
out
or
or
repz
idiv
aaa
sbb
xor
adc
pusha
insl
in
and
das
dec
js
cmp
arpl
lret
ror
icebp
arpl
cmp
popf
call
pusha
lret
sahf
sub
and
push
push
jno
inc
int3
mov
mov
push
mov
pusha
pop
pop
loopne
pop
adc
andb
shlb
aaa
mov
inc
mov
test
paddq
or
rcrl
iret
cmp
das
aaa
mov
pop
push
push
jne
cli
sbb
or
or
jne
jno
js
lods
cmp
enter
call
mov
cmp
and
xchg
sbbb
pushf
vmread
sub
test
mov
jecxz
mov
sub
notl
ds
mov
pop
and
scas
insb
das
jnp
pop
clc
or
push
push
push
adc
andl
into
inc
das
dec
adc
lock
les
out
cld
jmp
aam
or
xor
aam
cmp
adc
mov
mov
pop
xchg
jne
aas
incl
dec
dec
movsb
mov
or
repz
lods
or
xchg
fmul
fisubrs
push
mov
jl
loopne
push
fists
adc
jno
xor
dec
sti
sbb
jmp
mov
lret
xor
popf
and
mov
sub
xor
push
lods
sbbl
xor
cmp
jl
testb
ljmp
testl
cld
add
in
fldcw
xor
mov
mov
xor
xor
das
inc
push
lds
ljmp
loopne
pop
pop
enter
shrl
or
adc
pop
and
cld
std
wbinvd
loopne
rcll
xchg
xor
call
fmuls
add
inc
enter
sub
push
cmp
inc
xor
aas
fdivl
imul
pop
push
cld
pop
aaa
push
mov
xor
nop
stos
dec
push
xor
out
push
inc
movsb
cmp
mov
js
jae
adc
adc
adc
adc
add
out
dec
push
decb
push
mov
fidivs
inc
nop
call
push
sbb
sbb
nop
das
or
pop
movsl
sbb
sbb
rorb
cwtl
push
jns
fdivrs
mov
ds
sbb
fsub
push
fldl
jae
mov
pushf
mov
pop
jl
add
imulb
mov
mov
arpl
or
pop
test
fcomps
stos
cltd
clc
into
arpl
sbb
fiadds
xchg
outsb
and
test
xchg
mov
icebp
loopne
loope
lock
and
rcl
mov
pop
push
pop
shlb
mov
add
pop
sbb
cmp
shlb
ficompl
adc
popf
dec
lock
dec
in
xchg
mov
inc
outsb
clc
sbb
icebp
sbb
sbb
sbb
nop
mov
pop
cltd
pop
fnstcw
orl
loopne
shr
jge
push
push
idivb
in
jo
rorb
lret
cmp
mov
rcll
das
out
call
cld
icebp
cmp
lods
test
rcl
sbb
fcom
jp
jo
jle
out
mov
sub
sbb
sub
pop
sbb
xlat
push
loopne
sbb
jg
mov
pushf
sub
aam
or
inc
rolb
cmp
das
pop
xchg
into
inc
sbb
call
dec
pusha
in
addl
js
add
pusha
filds
call
sub
arpl
movsl
or
call
push
cmp
sbb
pusha
jp
lods
pop
repz
cmp
add
adc
pop
ljmp
rcrb
add
into
popa
mov
imul
sbb
dec
aas
ss
rcrb
sbb
or
adc
adc
push
fists
mov
pop
lods
add
xchg
push
pop
aas
pop
mov
sbb
clc
xchg
dec
or
adc
stos
mov
pop
fcoml
cmpsl
and
and
xor
pop
xor
std
fcompl
xor
repnz
mov
xchg
or
loope
and
push
jns
adc
dec
enter
cmp
push
pop
jns
jl
jle
add
dec
jne
mov
fs
adc
jno
mov
insl
data16
mov
dec
sbb
insb
shl
or
and
mov
xchg
dec
in
in
mov
in
jge
out
push
filds
repz
and
push
lahf
adc
mov
jl
and
add
jp
cld
pop
xchg
ret
cld
adc
push
push
adc
adc
mov
dec
insb
dec
mov
cltd
stos
sub
and
add
push
adc
sbb
das
or
pop
push
add
imul
sub
mov
inc
ret
jo
stc
pop
xor
movaps
nop
dec
cli
push
sub
and
mov
out
out
mov
xchg
xor
add
data16
adc
xor
icebp
dec
mov
in
sub
jae
aas
push
and
lret
faddl
xor
stos
loop
lock
cli
sbb
cmp
xchg
sbb
cwtl
int
sub
add
pop
add
and
dec
mov
mov
bound
adc
test
xchg
icebp
and
lcall
or
popa
sub
mov
stos
pop
pop
pop
push
lcall
mov
mov
ror
and
out
push
repz
loopne
setl
je
das
sub
roll
sarb
or
sub
popa
inc
aas
clc
cli
pop
sbb
loop
cmp
inc
bound
mov
pop
push
inc
add
jo
sbb
add
aam
lea
add
xor
xor
outsb
idivb
adc
or
or
sub
popa
adc
shrb
and
cld
xor
adc
negb
jecxz
mov
fs
lods
and
and
cmc
stc
pop
cmp
fsubrl
enter
das
push
cmp
and
sub
ficoml
test
cmp
test
lret
pusha
xor
sub
pop
rsqrtps
dec
loope
fcompl
push
ret
xchg
popf
jecxz,pn
insl
xchg
loopne
mov
push
dec
and
lds
flds
ss
push
jg
and
mov
out
aas
gs
mov
pop
sub
lcall
sub
inc
cmp
dec
jmp
jmp
cmp
and
xchg
daa
hlt
pcmpgtd
mov
cmp
pop
push
ret
lds
and
sub
push
sub
pop
test
mov
mov
lcall
in
mov
sar
pusha
sbb
cmp
mov
fs
sub
inc
aas
mov
std
cmp
xchg
test
mov
xchg
hlt
pop
jle
cli
xor
bound
mov
mov
mulb
dec
pop
cli
sub
ret
cwtl
jg
out
out
add
fcomps
mov
cwtl
xor
insl
lahf
mov
aaa
push
and
pop
pop
pop
xor
popf
imul
add
mov
adc
add
sbb
mov
adc
pop
inc
fsubrp
mov
xchg
scas
popf
cmpsl
pop
shll
jmp
pusha
pushf
lea
je
push
call
adc
pusha
lea
jae
pushf
call
push
pusha
lea
jae
cmp
call
int
dec
adc
lret
cli
je
stos
adc
mov
std
mov
jo
mov
xor
pop
push
mov
pop
inc
pop
mov
shlb
pop
lea
jbe
not
shr
mov
lea
xor
add
shr
mov
clc
jmp
sbb
clc
sub
lea
pop
movsbw
pusha
pushf
mov
pop
mov
pushf
pushf
mov
pushf
pushl
pushf
lea
mov
pusha
pushl
ret
jmp
lahf
inc
pop
aam
mov
fisubrs
mov
sbb
lahf
enter
iret
cmp
xchg
or
sub
xlat
mov
addr16
mov
subl
jge
add
push
clc
stc
and
pusha
pushf
push
lea
jmp
push
call
sbb
test
sarb
fwait
mov
nop
push
jbe
in
cmpsl
and
js
outsl
xchg
jne
mov
in
sub
and
bound
mov
pop
filds
fwait
sub
push
call
pop
arpl
dec
jo
push
outsb
push
or
nop
rorb
sub
rclb
jl
outsl
jb
pop
mov
es
pop
adc
push
push
negb
sbb
pushf
lods
xlat
inc
scas
insb
lock
sbb
outsl
cld
push
lea
sbb
jle
movsb
adc
movl
shl
mov
bt
bt
test
pusha
mov
lea
je
clc
bt
clc
sub
jmp
adc
jb
fnsave
iret
pop
test
dec
scas
aas
mov
daa
rclb
cltd
or
add
in
ret
mov
loopne
ljmp
push
inc
lods
push
dec
enter
loop
and
xchg
je
std
rolb
dec
adc
mov
aaa
mov
push
pusha
cmp
push
adc
test
fcoml
jb
add
push
xchg
dec
inc
movl
inc
jno
pop
adcb
into
rcrl
aaa
xchg
sti
lea
es
xor
icebp
pop
mov
push
push
pop
mov
icebp
cld
mov
mov
sbb
xor
imulb
adc
test
iret
pop
add
outsl
cmp
mov
cld
data16
sub
and
sbb
call
push
fmull
pop
mov
or
stc
sbb
out
repz
aas
push
arpl
shll
int
dec
cmp
sub
xchg
jo
add
ljmp
pushf
mov
pushf
movb
lea
jmp
movb
mov
pushf
push
pusha
pushf
lea
jmp
pushf
cmc
push
stc
add
pushl
jmp
test
push
pushf
movw
call
push
call
xlat
push
add
pop
add
sub
addb
je
scas
mov
outsl
jb
jge
fwait
in
sub
movsb
repnz
mov
mov
dec
pop
xor
xchg
sub
jge
pop
inc
nop
hlt
xchg
pop
das
mov
mov
pushl
ret
call
push
call
jecxz
inc
and
jmp
lea
js
push
push
lea
jae
push
mov
bsr
dec
shl
not
mov
and
shld
cmp
mov
mov
jmp
mov
loope
fisttps
repz
aam
fsts
mov
xor
fistl
out
aam
and
idivl
xchg
and
cld
push
xchg
or
lret
mov
mov
movsl
aaa
sbb
ficomps
fmull
sbb
loope
icebp
out
mov
and
call
dec
pushf
dec
jmp
lea
ja
ja
inc
not
jmp
lea
jne
pushf
movb
pushl
mov
bswap
bswap
movsbl
lea
lea
jno
pushf
pushl
pusha
movl
pushl
jmp
mov
mov
not
mov
mov
pushf
lea
jne
pushf
movzwl
lea
shl
shr
dec
or
mov
cmc
add
jmp
pop
jns
jno
pop
mov
mov
sbb
or
into
dec
or
dec
int
popf
es
cmp
je
xchg
push
clc
jecxz
sbb
jge
lea
inc
pop
sarb
sub
xchg
sbb
cmp
ret
test
into
test
adc
cmp
mov
inc
sub
pop
sub
rol
aam
mov
or
sar
call
lea
movb
mov
stc
mov
cmc
pusha
stc
mov
call
bt
imul
cmc
push
add
push
lea
jmp
lea
je
movzbw
bt
btc
sar
mov
cmc
clc
pusha
pushl
add
clc
cmc
cmp
stc
xchg
ror
btr
shld
lea
mov
and
rcr
movsbl
mov
bt
sbb
stc
movsbw
mov
sub
pusha
bt
cmpsb
jmp
jne
gs
xor
fs
insb
add
dec
sbb
mov
movl
and
pushf
pushl
ret
pushf
jmp
push
dec
ror
neg
mov
pusha
bt
mov
cmp
push
mov
stc
pusha
or
pushf
pushf
lea
je
bsr
mov
shrd
bsf
btc
bts
mov
stc
bt
bt
sub
pushf
shr
add
clc
cmpl
pushf
movb
pushf
lea
je
jmp
btr
rol
adc
jmp
call
pushf
call
push
mov
movb
lea
call
call
daa
aam
sub
aaa
mov
cmp
xor
mov
clc
test
cmp
stc
add
call
inc
push
outsb
adc
cmp
cmpsl
pusha
add
pop
and
cmpl
mov
pop
sub
push
fucomp
lods
xor
jg
popa
or
stc
imul
or
lcall
xchg
xor
in
cltd
xchg
int3
xchg
test
xchg
mov
mov
xor
sub
adc
fistpll
loope
push
cmp
test
jp
add
inc
incl
setge
not
call
add
add
dec
inc
cmp
add
sub
rcr
clc
mov
cmp
cmp
bt
shr
pushf
jmp
mov
mov
mov
adc
ja
pop
outsb
cld
push
cmpsl
or
mov
mov
jnp
mov
cltd
xchg
movw
movl
pusha
call
lea
je
ror
btc
mov
clc
clc
lea
add
lea
neg
mov
test
push
clc
test
pushf
call
test
xadd
shl
xor
pusha
movzbl
jmp
pusha
cmp
add
jmp
movl
call
pushf
dec
pushf
stc
mov
shr
jmp
leave
divb
sub
ja
pop
imul
xor
scas
ss
mov
xchg
xlat
std
in
xchg
jp
pop
ja
imul
out
fstl
add
jae
popa
addr16
outsl
js
add
test
call
shrd
mov
cmp
and
call
adc
lea
pusha
mov
pushf
push
pushl
ret
cmp
pushf
mov
lea
ja
and
cmc
mov
sub
adc
add
shld
mov
add
neg
mov
stc
repnz
call
cmp
test
push
dec
xchg
into
mov
mov
js
std
xchg
test
test
aad
je
test
inc
out
sub
imul
insl
sti
out
icebp
mov
stos
sub
sub
aaa
popl
cmc
call
je
jne
jg
push
mov
stos
pushl
lea
jmp
jns
jmp
adc
or
lcall
push
xor
jae
loop
fmul
mov
imul
repz
xchg
or
les
cmpsl
lods
xor
inc
in
jbe
loope
lds
ss
jne
sbbb
les
xor
or
scas
and
out
cmp
mov
add
ja
xchg
sbb
cmp
outsl
inc
jecxz
mov
push
pop
adc
addr16
mov
testb
cld
pushw
popfw
movb
inc
call
test
push
push
mov
rcl
jmp
jmp
mov
movb
pushf
pushl
ret
pushf
pushf
lea
jne
pusha
pusha
jmp
push
call
rclb
fs
jne
daa
sub
shld
btr
movsbw
mov
or
add
sbb
or
not
mov
cmc
test
call
not
pushf
lea
mov
pushl
call
pushf
lea
jae
xor
ror
ror
mov
mov
bt
mov
push
rcr
mov
stc
clc
pushf
bt
sub
bt
repnz
pushf
lea
jne
and
xor
mov
shld
sub
shl
mov
jmp
mov
cmp
push
jmp
mov
movb
pushf
pushf
pushf
lea
jmp
adc
push
mov
sub
adc
sbb
push
dec
xor
pop
daa
jl
jae
or
and
insl
cs
pusha
lods
movsl
call
xchg
jmp
btr
mov
shld
bswap
pushf
sub
inc
sar
shr
and
mov
movsbw
call
out
sbb
shl
pop
hlt
rcl
inc
and
mov
cmpsl
mov
loopne
mov
mov
sbb
adc
cmp
cli
fmull
push
xchg
cmp
push
lods
pop
loopne
mov
shll
or
add
inc
and
cmp
call
pushl
mov
pop
bswap
jmp
pushl
mov
adc
movb
lea
jae
jmp
push
call
clc
stos
lea
jae
bt
push
cmp
call
lea
bsr
jmp
lea
jae
pusha
setns
jmp
push
call
lcall
and
fiaddl
cs
push
pushl
not
movb
call
lea
pushl
call
dec
push
call
call
call
push
call
lock
call
mov
fdivr
jmp
cmp
bt
pusha
test
pushf
mov
lea
jae
pusha
lea
je
movsbw
test
movsbl
sub
add
sub
shrd
mov
stc
stc
test
push
pushf
lea
je
test
cmc
add
push
lea
jmp
pusha
lea
jne
call
and
xchg
sub
rcl
mov
seto
call
nop
or
sub
jg
loop
imul
ficoms
mov
xchg
jnp
jae
mov
sbb
loope
cmc
xor
dec
lds
lods
dec
fsin
pop
aam
push
or
adc
test
fsubl
xchg
insb
push
repnz
pop
pop
inc
es
ffreep
push
or
adc
xchg
add
add
in
and
out
lods
nop
out
pop
cmp
ds
xchg
sbb
fnstenv
lahf
mov
xor
hlt
sub
sti
add
mov
mov
in
cmp
adc
add
sub
pop
dec
out
or
jle
aam
adc
int
in
sbb
jne
sub
mov
xchg
pusha
mov
push
out
insb
adc
pop
and
pushl
pusha
movl
lea
call
pusha
mov
mov
pusha
lea
jmp
pusha
lea
call
jmp
movsb
lahf
mov
dec
in
popa
das
popf
push
push
pop
mov
test
lcall
mov
mov
js
mov
les
adc
mov
xchg
jle
dec
cmp
into
push
mov
push
and
test
push
dec
push
sbb
pop
and
and
fisttpl
dec
push
sarl
or
out
rolb
jmp
inc
cmp
rolb
data16
outsb
jle
push
xchg
adc
in
in
ret
pop
mov
sub
js
frstor
mov
lea
ja
sbb
sub
sub
add
test
not
mov
sete
cmc
or
mov
pusha
repnz
jmp
pusha
stos
mov
mov
lea
pusha
lea
call
pushf
push
lea
jae
call
and
pop
notl
cmp
mov
xor
and
sub
and
pop
pusha
fbld
dec
lea
fsubs
xor
outsb
xor
daa
and
xlat
mov
and
cs
xchg
rcrl
sub
dec
andl
je
clc
call
int
test
loope
bound
mov
sbb
aam
les
shlb
push
std
js
and
cli
jle
hlt
idivb
mov
ljmp
pop
sbb
wbinvd
mov
in
and
xchg
push
ffree
in
loope
scas
adc
test
movsl
stos
pop
push
sbb
xchg
and
cli
cmc
jl
enter
hlt
lahf
and
sub
addr16
cmc
ffreep
adc
sbb
dec
lret
loope
and
fldcw
jecxz
cmpsl
pop
mov
inc
aaa
imul
jp
sbb
rcrb
lretw
or
shlb
shll
adc
pop
and
and
je
push
push
mov
adc
jecxz
xor
sbb
adc
outsl
xor
aas
mov
filds
xchg
negb
xchg
and
mov
test
xor
out
push
sbb
and
mov
cmc
and
cmp
and
test
movsb
nop
fiaddl
sbb
scas
lods
sbb
pop
lret
pop
push
mov
sbb
mov
jge
add
add
loopne
sub
rol
fmuls
mov
jno
js
push
and
cmp
pop
cmpsb
jmp
xchg
mov
cmpsb
adc
imul
push
ficoms
dec
lret
and
mov
and
or
jbe
imul
cmp
push
and
rcl
shll
xchg
lea
mov
jae
mov
push
mov
mov
in
mov
add
push
lds
pusha
inc
in
jp
insl
and
push
out
and
loopne
enter
ret
leave
jae
xor
repnz
add
popf
rolb
imul
and
inc
aad
and
lods
dec
and
push
push
dec
xor
and
xchg
out
mov
insb
outsb
cltd
and
xor
cmpsb
mov
pop
std
and
shr
inc
lods
shrl
leave
lret
cli
mov
cmp
and
push
loop
pusha
jne
xorl
inc
sub
mov
xchg
dec
hlt
and
inc
lock
out
add
adcb
or
inc
mov
pushf
outsb
and
aad
adc
xor
lcall
sbb
xchg
repz
nop
push
lds
sbb
inc
adc
sahf
xchg
or
sti
pusha
and
and
mov
inc
jne
push
lret
or
mov
in
sbb
mov
mov
dec
shll
cmp
lret
mov
mov
ja
ss
add
lret
out
and
imul
lods
xorb
mov
inc
fwait
adc
sub
or
jno
and
inc
pop
xchg
mov
sub
add
xorl
push
pop
shll
or
clc
rcrb
mov
sahf
rorb
inc
call
hlt
movsb
inc
push
aam
cmp
mov
mov
outsl
in
nop
sbb
and
mov
aad
arpl
dec
pop
das
sbbb
lahf
pop
xor
pushf
inc
inc
cmp
cmp
add
and
lods
dec
test
out
lea
sbb
mov
and
ljmp
pop
push
mov
and
mov
add
adcl
aaa
pop
and
jbe
inc
mov
shr
lods
inc
sub
fsubr
es
cld
xlat
and
cmc
mov
jge
and
mov
xchg
add
outsl
add
and
dec
enter
and
sbb
adc
or
inc
stc
sbb
mov
and
enter
subb
nop
sub
add
xchg
int
mov
ret
pshufw
popa
insl
push
out
mov
pop
pop
mov
sar
push
and
ret
lock
sbb
leave
sti
sbb
decl
mov
and
aam
jg
and
adc
out
enter
sub
cli
hlt
sbb
dec
dec
js
adc
pusha
push
jmp
fwait
imul
pop
pop
bound
cmp
push
cmpl
jecxz
inc
fistpll
pop
and
dec
jle
sub
add
jg
jno
xor
arpl
mov
int3
mov
mov
and
xchg
add
les
fistpl
cwtl
outsb
pusha
and
xchg
insb
movsb
pop
in
jmp
mov
mov
leave
and
xchg
ja
in
adc
adc
pop
fldt
mov
mov
pop
pop
and
mov
and
leave
fwait
bound
std
inc
frstor
inc
shrl
cmp
add
and
pop
pop
xor
add
fsubrl
and
mov
fs
jb
cvtps2pd
add
ret
mov
jge
mov
mov
mov
push
xchg
jge
sbb
xlat
and
mov
shll
shr
stc
dec
pusha
out
clc
pop
ret
aaa
dec
xchg
xchg
xor
adc
bnd
push
and
xor
icebp
or
ret
pushf
xchg
movsb
adc
scas
mov
and
push
or
mov
loop
dec
dec
mov
inc
pop
and
testl
fadds
sbb
int
mov
mov
mov
cli
repnz
and
sbbb
stos
nop
and
neg
dec
andl
lcall
cmp
fldl
icebp
fwait
adc
andb
enter
adc
xchg
and
clc
jne
mov
or
sbb
fld
cmp
sub
pusha
mov
jle
sub
sub
jne
push
sbbl
loop
jmp
sbb
sbbb
push
dec
mov
mov
mov
scas
dec
aaa
insb
sub
jae
mov
and
and
cltd
push
pop
pop
lret
and
int3
mov
add
imul
mov
call
mov
pop
and
or
jl
lahf
pop
sti
and
in
adc
leave
mov
inc
scas
test
and
arpl
popa
sub
mov
xor
add
pop
js
icebp
and
xor
mov
mov
jbe
nop
mov
test
stos
movsb
and
sbb
dec
cmp
sbb
cli
lods
leave
aam
scas
jmp
and
out
sar
call
hlt
xchg
pop
test
loopne
popf
xor
cmp
and
mov
cmp
das
in
add
jmp
jo
xchg
aad
sub
adc
adc
bound
add
jmp
jns
adc
enter
mov
clc
inc
or
and
mov
jmp
push
scas
test
lds
cli
and
or
cmp
dec
dec
clc
dec
and
mov
add
and
pop
mov
push
mov
js
and
lcall
loope
mov
xor
inc
pusha
pop
sub
pop
inc
add
jecxz
inc
jg
lds
and
inc
jbe
jnp
jmp
sbb
in
mov
mov
lock
shll
repnz
cli
dec
ret
iret
test
fisubrl
cmp
and
xchg
dec
je
mov
mov
mov
mov
daa
pop
dec
paddq
and
or
and
xor
call
fmull
pop
mov
out
and
mov
loopne
mov
movsl
sub
add
cmp
hlt
gs
adc
and
cmp
popf
dec
and
loopne
test
ljmp
add
les
jle
ss
dec
cltd
daa
cs
xchg
sbb
and
divl
push
inc
mov
mov
and
ljmp
and
pop
pop
pop
fcompl
add
add
cs
and
xor
cmp
loopne
push
jo
and
sbb
mov
movsb
and
rorl
inc
pop
ds
and
jle
mov
into
mov
inc
xchg
adc
stos
leave
push
repz
ret
mov
and
pop
rcr
insl
loopne
and
mov
mov
sbb
mov
and
push
xchg
stc
cld
ja
pop
cmp
and
gs
mov
add
cmpsl
or
lret
movsb
add
sti
adc
inc
jmp
sub
js
sbb
fimull
clc
cld
and
pop
pop
andl
pop
jle
mov
pusha
lret
mov
mov
movsl
and
adcb
insb
push
popf
lods
into
in
aam
sahf
add
inc
in
lcall
ret
scas
lret
sbb
jecxz
cld
and
pusha
outsl
jl
and
and
cmc
sbb
loopne
mov
sbb
mov
divl
sub
aam
sub
add
xchg
cmp
and
cmp
sub
xchg
rcrl
add
mov
push
and
xchg
in
scas
pop
jns
mov
jno
out
and
xor
hlt
or
fsubrs
or
icebp
xor
mov
inc
and
sbb
fwait
mov
iret
and
cmp
inc
and
pushf
int
lahf
lds
out
scas
nop
imul
inc
add
dec
into
sbb
inc
and
mov
nop
das
imul
cmp
and
cmp
call
pop
iret
out
and
sub
rolw
gs
mov
xchg
lds
inc
jg
jecxz
bound
pop
outsb
call
mov
shlb
mov
adc
add
scas
lods
jecxz
out
mov
fcmovnbe
pop
pop
stos
fcompl
cmp
test
add
pop
sub
test
call
orb
je
cmp
outsl
fiadds
scas
repz
dec
stc
adc
inc
out
daa
push
mov
loop
jbe,pn
dec
xchg
push
or
cmpsb
fildl
xor
and
sub
push
jae
sub
and
mov
insb
jle
clc
adc
mul
pop
and
imul
xchg
mov
insl
mov
and
in
addb
pushf
cmp
xchg
lods
mov
mov
stos
or
shll
imul
pop
xor
mov
xor
push
and
ret
sarl
xchg
rclb
dec
aad
ja
and
aas
mov
fdivl
and
inc
lods
sub
and
mov
dec
inc
movsl
jae
sub
add
fidivs
fistl
mov
mov
out
xor
cmp
testl
adc
inc
popa
das
mov
sub
add
jno
cmp
fldenv
addl
sbb
cld
rcll
and
roll
and
sbb
cmpsb
sub
loop
pop
and
or
push
and
dec
mov
and
in
notb
lods
jle
push
jae
jmp
fwait
and
das
inc
and
daa
mov
in
rcrb
add
mov
pop
xchg
rol
mov
sbb
popa
lock
sbb
fcoms
pusha
cmc
mov
and
xchg
cmp
stos
and
sbb
repnz
fisubl
scas
inc
mov
popf
sbb
xor
xor
pop
or
popa
jge
fwait
adc
push
add
cltd
and
inc
and
pop
addr16
sub
sbb
call
and
mov
fidivl
adc
push
arpl
jmp
sbb
or
aad
push
movsb
insl
test
inc
movsb
push
or
out
lock
outsb
stos
call
add
fidivs
push
adc
xchg
jmp
pop
lods
js
cwtl
adc
push
ret
add
aam
and
idivl
adc
cmp
or
pop
in
enter
mov
arpl
sbb
cmp
aad
test
and
lret
dec
leave
xor
add
into
add
in
daa
sub
xlat
std
jmp
push
and
push
sbb
pop
mov
mov
lods
push
cmp
or
stc
sti
and
test
dec
and
lcall
in
jmp
sbb
jnp
in
pop
clc
ljmp
jne
cmp
push
and
and
xor
ljmp
stos
and
push
xchg
lds
adc
fisttpl
scas
popa
stos
push
cmp
or
push
xchg
cmpsl
out
mov
and
data16
and
lods
cli
jmp
in
sub
mov
pop
and
cmp
jae
lret
and
pop
mov
out
and
sub
std
cmp
jae
rep
and
inc
sub
fisubl
mov
jne
rcrb
xorb
int
lock
movsbl
cmpsl
scas
mov
jp
adc
pop
and
or
mov
pop
mov
mov
jbe
pop
outsl
jge
std
mov
arpl
and
fidivs
and
mov
push
cltd
test
cld
and
shr
push
iret
mov
out
sbb
cmpsb
sbb
add
adc
loope
inc
rol
cmp
cmp
pop
push
jb
insl
or
pusha
dec
popa
or
and
push
push
push
sbb
dec
fisttpll
jg
sub
and
xor
sbb
push
aaa
pop
mov
sbb
es
xchg
mov
mov
insl
add
add
sbb
mov
lret
nop
dec
and
loop
fimuls
sarb
inc
and
into
mov
and
or
or
mov
shll
mov
mov
sbb
clc
inc
jmp
xor
and
add
lock
jae
push
or
fs
jle
pop
stc
cmp
addr16
and
lock
inc
jmp
adc
hlt
leave
popf
push
pop
push
xor
pop
and
aad
add
mov
in
mov
ret
xor
or
cmp
jne
rol
aaa
mov
add
aas
mov
sahf
pushf
rclb
out
sbb
push
and
or
mov
add
jae
and
cs
mov
and
mov
repz
adc
cmp
jge
sbb
and
sub
mov
sbb
mov
mov
xlat
push
sub
mov
addl
xchg
mov
mov
aad
shlb
jne
ja
loopne
rolb
push
ret
mov
orl
mov
sub
pop
call
push
or
pop
mov
xor
pop
pusha
es
pop
jge
sub
repz
js
xor
mov
jns,pt
dec
ret
repnz
cltd
pop
or
test
test
sub
outsb
stos
dec
sahf
mov
and
mov
mov
fs
and
imul
fadds
mov
enter
add
sub
in
inc
push
mov
and
push
dec
xor
stos
inc
and
push
sete
daa
adc
shll
repnz
jnp
mov
ljmp
add
and
jge
and
mov
insb
cmp
inc
je
test
xchg
ljmp
mov
mov
and
cli
xchg
dec
push
jg
es
xlat
cmp
lret
ffree
jo
and
into
movsb
mov
add
std
dec
add
push
cli
and
pop
mov
addl
mov
add
lock
jp
sub
mov
pop
popa
push
pushf
scas
cli
and
fmuls
int3
lahf
out
jg
mov
cmp
and
loope
dec
mov
xchg
fs
or
test
inc
cmpsb
pop
and
mov
movsl
add
leave
test
cmp
sbb
xchg
imull
xchg
es
dec
cmp
add
test
fidivs
shr
mov
test
imul
aaa
fcoms
add
dec
mov
sub
bound
ja
test
jbe
divb
test
pusha
fisubrl
push
and
pop
shlb
and
xor
icebp
and
fidivrl
loope
fs
jle
pop
mov
fdivs
int
xchg
fld
xchg
add
mov
pop
pop
cs
imul
and
aam
leave
loopne
dec
pop
fcmovu
pop
xchg
add
add
inc
and
and
cld
sbb
pusha
jl
dec
sbb
dec
out
fwait
pop
pop
popa
cmp
jnp
divb
popa
lds
mov
mov
adcb
inc
es
loope
mov
movsl
ret
or
repz
sbb
pusha
jne
inc
cmpsl
and
cwtl
test
ja
loope
and
add
ret
xor
mov
jp
les
adc
fsubrl
push
inc
popf
idivl
adc
add
mov
jmp
push
mov
sbb
ret
cltd
iret
dec
pop
pusha
xchg
mov
jae
ss
jne
cmc
jge
and
pushl
or
push
xchg
mov
mov
ret
pusha
loopne
jbe
mov
mov
push
ss
lahf
lods
repz
sbb
es
lret
mov
loopne
test
or
mov
daa
es
imul
jg
iret
in
inc
cli
and
xor
add
and
daa
mov
in
and
sti
out
ret
dec
adc
add
xchg
test
mov
or
bound
or
add
sbb
popa
arpl
insl
pop
and
jns
and
jbe
jae
pop
cld
adc
mov
mov
add
popa
mov
or
mov
ret
push
stc
enter
xchg
into
xchg
and
insb
pop
or
and
out
clc
dec
adc
xlat
test
nop
loop
xchg
mov
sub
je
mov
add
jno
insb
or
xchg
mov
je
ficomps
les
cmpsl
loopne
push
out
pop
mov
xchg
shr
aas
inc
dec
and
shl
cmpsl
cmpsb
into
shll
je
repnz
pop
jns
mov
adcb
cwtl
jno
and
mov
sub
test
cli
inc
imul
sahf
scas
mov
stos
xchg
xchg
mov
mulb
cmp
mov
and
dec
inc
outsl
and
mov
adc
fsubrp
add
inc
aaa
pcmpgtd
shll
xor
cmpsl
push
and
add
clc
inc
jmp
gs
push
pop
in
and
fiadds
and
and
xchg
and
xchg
ja
movsl
xchg
call
inc
std
out
inc
xchg
cltd
fstl
mov
test
fisubrs
mov
and
and
cli
mov
mov
sub
and
leave
mov
nop
cmp
jne
jo
jae
sbb
mov
fsubs
mov
sbb
cmp
pop
lods
insl
mov
mov
push
xor
in
sub
and
imul
pop
loop
scas
dec
outsl
xchg
mov
fisubl
outsb
or
or
pushf
push
jns
js
fwait
mov
ljmp
mov
push
mov
popf
xlat
pushf
push
imul
sti
insl
fcmovbe
rcll
and
addr16
scas
cmp
and
icebp
add
int3
sbb
cmp
js
adc
jae,pt
icebp
push
cmp
mov
lahf
mov
movsl
stos
jecxz
and
ljmp
loope
jb
and
leave
out
ja
and
dec
in
outsb
push
clc
fimuls
mov
and
xchg
jge
lret
mov
icebp
sti
cwtl
xchg
scas
mov
stos
and
sub
out
inc
add
pop
mov
mov
paddw
imul
and
cmp
repnz
push
pop
and
mov
lret
ret
pop
xor
pop
insb
and
mov
lock
mov
mov
inc
mov
insl
adc
pusha
aam
or
mov
nop
push
aad
shl
sbb
add
and
add
loopne
icebp
fbld
lret
imul
adc
push
pop
mov
inc
push
xchg
adc
push
dec
xor
jmp
inc
out
and
push
mov
pop
loope
fwait
popf
or
pusha
xchg
and
mov
mov
popa
pusha
sbbb
mov
and
jmp
pop
insl
xchg
aaa
push
cmp
inc
and
rolb
sbb
mov
popa
mov
enter
and
cmpsl
in
jo
and
cmp
pop
loop
add
in
dec
dec
ret
inc
or
adc
cmpsb
and
movsb
mov
in
push
and
or
mov
add
sahf
inc
or
pusha
repz
xor
in
and
pop
negb
pop
mov
xorl
imul
in
aaa
inc
cmpsl
sub
adc
mov
jle
push
gs
fwait
lea
mov
push
add
rorb
push
pushf
mov
fbld
fadd
sub
cwtl
sbb
iret
and
ja
loopne
andl
out
xchg
sbb
xchg
lret
pop
lods
adc
in
mov
or
inc
stos
and
into
mov
sub
and
loopne
arpl
push
aad
push
cmp
fisubs
adc
adc
lahf
inc
int3
adc
sti
jmp
lock
mov
stos
sub
sbb
test
xchg
mov
cmp
mov
loopne
test
test
pop
or
call
pop
xchg
push
cmp
popf
xor
out
fisubrl
and
stc
or
adc
incl
xor
arpl
jl
ja
push
mov
mov
pusha
push
push
cltd
jge
dec
and
dec
mov
loopne,pt
je
xrelease
lods
aaa
fisubrs
std
and
clc
xchg
mov
int
sub
xchg
cmp
cmpsl
mov
sbb
pop
lods
or
out
loop
cmp
fldt
std
dec
cmp
inc
cmp
out
test
shll
std
and
fwait
add
add
repnz
cmpsb
ret
and
lock
mov
push
jns
add
loope
and
push
pop
xchg
push
sub
mov
test
std
sub
in
lods
mov
xchg
xor
cmpsb
mov
jle
call
or
les
aad
sbb
mov
sbb
sti
clc
xor
or
out
jo
imul
cmp
and
clc
mov
pop
cmp
aaa
xor
and
lds
jl
ficoms
and
js
test
pop
and
or
xor
cmpsb
add
xor
fcmove
mov
aas
pop
arpl
push
fnstcw
scas
out
lods
pop
loop
daa
cmpsb
imul
dec
ljmp
and
and
pop
aad
cmp
fstpt
ds
or
rcl
inc
mov
jbe
inc
mov
cmp
sbb
arpl
and
pop
out
pop
xor
test
rcrb
test
add
add
and
jg
insb
cld
addr16
smsw
cltd
jns
cli
adc
and
fcom
mov
clc
cmpsb
dec
adc
mov
test
xchg
packuswb
fisubl
shlb
and
pop
cmp
pop
fistps
mov
icebp
push
out
or
in
sbb
test
shlb
jmp
jge
or
int3
and
aas
sub
or
dec
and
push
and
hlt
test
daa
and
jmp
int3
lock
xor
or
fcmovu
xchg
and
test
insb
and
mov
and
sub
cmp
lock
loop
or
aam
jno
rcrb
jne
push
cwtl
mov
and
ficoml
xchg
mov
andl
cmc
sti
movsl
fstpt
sbb
pop
inc
adc
loop
jge
icebp
fiaddl
in
aad
roll
loopne
popf
repz
pop
test
add
pop
inc
pop
hlt
insl
mov
cmp
popa
xor
pusha
ljmp
mov
dec
rorl
movsb
and
mov
jbe
and
xor
pop
mov
sub
push
adc
mov
xor
mov
and
call
jo
and
push
loope
in
adc
out
and
cmp
aas
xlat
sbb
and
or
lea
repz
and
add
mov
mov
sbb
sub
sub
out
movq
and
mov
sub
add
test
sti
mov
push
jmp
dec
insl
and
movsb
cmpsb
loopne
sbb
xor
pusha
sarl
pop
or
and
leave
lret
pop
fsubs
mov
pop
push
sub
cs
inc
or
imul
xchg
lcall
xor
and
movsb
es
xchg
lods
pop
aas
and
add
and
sub
cmc
push
or
pushf
dec
xor
jno
and
pop
mov
push
call
iret
das
das
jno
push
pop
inc
sub
hlt
inc
sbb
stos
icebp
mov
mov
js
mov
xchg
sar
and
sub
mov
xchg
std
add
popa
repnz
push
and
or
dec
and
cmp
fld
dec
es
xor
mov
push
push
inc
xor
hlt
ljmp
push
fbld
add
add
and
mov
and
cmp
sbb
and
hlt
pop
aaa
jns
pop
and
mov
cmp
jge
push
inc
inc
int3
or
push
leave
jbe
jp
aam
xlat
pusha
and
and
cld
cmp
mov
jae
repz
and
outsb
cmp
sub
inc
adc
mov
add
sti
mov
pop
and
push
ja
loopne
or
scas
in
shll
jns
xchg
test
int
and
adc
add
push
inc
and
mov
or
sub
pop
xchg
pusha
adc
inc
test
mov
and
std
sbbb
out
push
and
cltd
xchg
mov
add
sbb
in
mov
xchg
jo
sub
inc
mov
adcl
and
lock
int3
jnp
adc
shlb
cmp
sahf
xchg
xor
and
test
cld
loop
inc
ret
lcall
pusha
push
pop
and
outsb
sbb
lods
pop
xchg
xchg
nop
and
loope
inc
xor
and
clc
pop
scas
ret
inc
and
mov
mov
divl
and
gs
popa
fwait
jne
adc
ror
sub
sete
call
push
mov
int3
arpl
enter
test
xor
and
dec
sub
jmp
push
add
push
inc
cmp
push
iret
mov
mov
out
addl
nop
sbb
rcll
add
mov
mov
stos
jo
adc
pop
mov
scas
mov
shl
cmp
fcmovnbe
rcl
jno
faddl
push
or
mov
jl
mov
bound
and
mov
sbb
and
or
imul
xchg
dec
xor
pop
mov
xorb
sub
lods
push
dec
jecxz
sahf
push
stos
in
mov
add
rcl
sbb
cwtl
ja
and
sub
hlt
sarl
add
sahf
mov
xchg
xor
enter
and
pushf
ds
mov
cmc
mov
cmpsl
add
jg
ret
loop
inc
mov
cli
rcrl
in
dec
test
jb
hlt
dec
push
popa
dec
push
out
add
ret
loope
cmp
pop
cld
push
aam
sub
or
out
lods
sbb
and
je
inc
mov
push
xchg
pinsrw
push
xlat
in
and
push
mov
and
xchg
push
js
sbb
sub
cmp
popf
loope
outsl
clc
loop
loopne
and
das
out
pop
and
cmp
insb
xor
and
imul
and
jle
test
loope
outsl
nop
shr
scas
adc
pop
sbb
lahf
and
out
lods
sbb
into
push
test
pop
lcall
add
adc
dec
pop
or
mov
xor
pop
lea
xchg
xchg
and
enter
xor
icebp
popf
and
mov
gs
mov
dec
fs
sahf
mov
push
mov
dec
fldenv
add
fwait
ret
cmpsl
xchg
xchg
inc
inc
pop
imul
inc
cld
ja
cli
scas
and
push
mov
or
adc
jno
out
pusha
xchg
inc
and
repnz
push
cmc
repz
push
das
sbb
sti
icebp
inc
shll
mov
test
mov
lret
jne
stos
rcrb
mov
and
mov
ss
jl
lock
cmpsb
push
xchg
push
fnsave
and
push
int
cmp
jecxz
out
repnz
fcom
push
adc
lret
enter
repz
sbb
mov
jp
cmp
call
lahf
and
sarl
push
sahf
mov
push
mov
and
inc
add
and
mov
and
orl
shr
mov
out
cmc
dec
jge
jmp
and
imul
cmp
xor
and
jnp
xor
and
rolb
repz
add
or
push
adc
fcomp
dec
shll
mov
and
cmp
add
insl
and
pop
icebp
add
and
push
in
scas
leave
rep
call
and
push
sub
cmp
nop
movsl
in
cmp
mov
mov
push
mov
push
mov
push
and
mov
addr16
pop
inc
xchg
add
imul
aaa
dec
jp
xor
sbb
insb
jb
and
rcll
mov
mov
sbb
cmpsb
push
hlt
pop
fs
lds
test
cli
mull
jp
fstps
mov
stos
inc
arpl
sbb
sbb
xchg
test
imul
dec
inc
mov
pop
or
sbb
sub
bound
and
loopne
mov
jl
sahf
jnp
push
and
jb
jbe
fimull
mov
rol
scas
xchg
into
repnz
xchg
pop
les
pop
vpmacswd
lahf
mov
jecxz
inc
xor
jo
loope
cwtl
and
pop
jb
or
add
pop
add
int3
xchg
loop
dec
fisubrs
stc
iret
adc
cmp
pop
dec
rcl
movsb
aas
cltd
push
ds
mov
insb
test
xchg
mov
pop
and
loopne
sbb
xchg
mov
pop
xor
mov
mov
pop
imul
sub
push
test
lds
and
aas
add
mov
jl
mov
sub
push
loop
jle
dec
push
loop
sbb
jge
movb
pop
insl
add
bound
mov
adc
and
mov
push
rcrl
xchg
lahf
or
jns
or
or
adc
cmp
and
and
aad
lret
add
rolb
insl
jno
stos
adc
jo
cmc
loope
push
fsubl
inc
mov
dec
xchg
mov
cmp
xor
nop
pushf
jecxz
jg
xorl
xchg
push
push
sub
imul
sarb
cli
and
rorl
into
clc
mov
pop
lods
xor
or
pusha
cmp
sbb
pop
xor
xchg
test
arpl
mov
rcr
and
jmp
push
inc
cmp
jns
mov
fsub
jae
xchg
sub
pop
ficoml
mov
sub
decl
sbb
cmp
and
lods
stos
icebp
adc
xor
sub
lock
into
hlt
cltd
sub
dec
and
dec
in
out
xor
daa
xor
push
adc
mov
int
jl
push
in
inc
cmp
cmc
stos
lds
adc
xor
sub
sub
or
and
cmpsb
call
cmp
xchg
xor
cmp
lret
cltd
cmp
ret
inc
mov
ret
div
mov
xchg
mov
mov
jl
jae
imul
inc
and
jno
movsb
add
xchg
mov
popf
iret
and
xchg
xor
imul
mov
std
inc
faddp
movaps
movsl
sbb
call
and
sahf
sbb
push
loop
push
aas
xchg
pop
jno
lret
cmpsb
cmpsb
inc
das
mov
aaa
jno
das
int
sbb
ds
jp
cmp
dec
rolb
loopne
dec
add
mov
add
dec
add
pop
or
pop
imul
xchg
push
adc
subb
imul
imul
pop
fmull
mov
and
mov
push
mov
out
cmp
out
cwtl
int
or
sub
sbb
outsb
sub
mov
lcall
cmp
sub
or
ja
out
pop
cmpxchg
xor
movsl
lret
andb
orb
dec
and
nop
pop
les
outsl
popa
test
cmp
dec
aas
or
dec
gs
lahf
xor
pop
mov
sbb
pop
and
push
push
and
mov
iret
push
rol
fisttps
and
add
and
sub
arpl
sub
ss
loope
and
test
xlat
push
sub
cld
and
adc
pop
jle
pop
xor
and
adc
and
push
adc
loope
out
push
lahf
or
rolb
popf
out
scas
das
and
mov
or
dec
add
les
in
jbe
movsl
cld
filds
and
test
and
sbb
mov
and
les
lea
push
and
push
test
shl
adc
aaa
fcoms
xchg
ret
mov
add
add
add
push
and
ljmp
mov
shrb
ret
adc
push
and
jle
pop
ja
test
mov
aam
and
into
mov
xchg
test
mov
xchg
mov
and
xchg
cmpsl
loop
and
aam
and
or
or
adc
adc
loop
clc
add
push
and
rol
or
xchg
sbb
xchg
mov
js
sbb
in
pop
lods
das
and
xor
cmpsl
add
popa
in
add
loope
sbbl
outsl
shll
stos
outsl
sbb
push
cmp
add
or
andl
test
mov
or
enter
data16
cmp
fists
and
cmpsb
xlat
and
aaa
mov
pop
jbe
lods
mov
xor
and
dec
mov
jp
sub
pop
and
hlt
and
pop
adc
jnp
add
mov
stos
rcll
negl
bound
or
push
and
or
in
into
mov
adc
mov
xchg
and
rclb
mov
and
sti
sbb
sahf
and
pop
cmpsb
adc
div
pop
sbb
mov
loope
test
enter
xchg
mov
ret
jns
ljmp
mov
addr16
sbb
pop
push
jmp
enter
lods
and
pop
adc
mov
and
in
dec
pusha
or
pop
lods
outsb
fldenv
inc
push
orl
sub
scas
adc
pop
dec
out
outsl
loope
add
imul
movsl
mov
jae
notl
in
add
mov
nop
cld
jne
dec
and
xchg
mov
mov
xchg
and
mov
insb
and
movsl
add
add
mov
negl
sub
shl
mov
mov
and
jp
or
add
mov
or
or
stos
int
dec
testb
neg
xchg
out
jge
hlt
xchg
and
cs
sbb
and
clc
pop
dec
xor
or
sbb
xchg
and
push
mov
rorb
jl
sarb
inc
and
es
adc
aad
mov
or
pushf
mov
cli
rcrl
inc
inc
popa
repz
ljmp
or
cltd
pop
add
sarl
cmp
inc
and
mov
push
repnz
loopne
test
mov
pusha
xor
cmp
mov
mov
mov
stc
sar
call
imul
cli
and
divb
xchg
cltd
loopne
subb
int3
adc
jmp
mov
and
cmpsl
xchg
push
pop
push
aaa
jne
test
xchg
in
and
ljmp
aad
dec
add
repnz
hlt
push
adc
mov
add
adc
ljmp
scas
aad
mov
sub
xor
int3
daa
loope
adc
stc
dec
cltd
inc
jns
mov
scas
std
mull
repz
cmp
mov
sub
mov
push
and
add
jp
lret
mov
dec
sub
in
jne
adc
dec
test
mov
and
test
fstp
stos
and
cld
clc
adc
xchg
int3
cli
or
mov
jb
cmp
dec
or
aad
and
call
out
loope
jl
test
push
and
inc
sbb
sub
repz
fcoms
mov
popa
jne
push
shrl
scas
mov
xchg
cs
inc
and
data16
pop
sti
sbb
and
jae
imull
xchg
pusha
aas
mov
popa
and
ret
pop
sbb
pop
xlat
add
mov
sub
and
mov
sbb
push
loope
data16
lea
pop
repz
mov
leave
cmp
arpl
mov
insb
and
dec
addb
sbb
pop
dec
cmp
loope
mov
rorl
jge
adc
je
and
lahf
imul
dec
aas
insl
sbb
jae
hlt
into
inc
xchg
sub
and
dec
add
ljmp
and
xor
orl
and
subb
fwait
cltd
fbld
imul
icebp
xchg
in
sbb
cmc
sbb
outsb
add
or
movsb
and
jg
xchg
clc
jbe
and
fadds
fildl
enter
and
mov
stc
iret
dec
or
ja
xlat
insb
outsb
lret
adc
mov
cmp
insb
jge
xchg
repz
or
setnp
imul
lods
mov
push
je
loopne
add
add
xlat
add
mov
pop
and
dec
pop
pusha
dec
movsb
imul
lods
pop
cwtl
sub
gs
xlat
mov
pop
xor
and
mov
sub
and
fs
in
pop
cmp
and
adc
sbb
leave
mov
subb
push
sbb
fistps
jmp
test
cmp
jle
push
and
cld
fadd
and
jo
inc
sbb
sbb
jg,pt
out
daa
mov
int
sub
test
loope
mulb
sbbl
js
xchg
fisttps
test
fscale
aas
cmp
sub
lods
mov
and
ljmp
push
jl
lods
fcompl
and
sbb
jb
jg
sub
sbb
pop
and
mov
fbld
andb
and
or
and
jne
push
dec
outsb
frstor
lock
fldenv
xor
or
sti
add
jno
add
cmc
clc
cmp
inc
pop
fld
mov
in
pop
sbb
inc
sub
cwtl
fs
sbb
das
inc
xor
cltd
setbe
xchg
inc
mov
sbb
clc
shrb
mov
out
mov
adc
js
fs
clc
push
cmp
xlat
out
lods
sbb
or
and
push
fstps
pop
stos
push
mov
and
dec
mov
mov
test
movsl
xor
fcmove
out
push
dec
outsl
jno
loop
add
jne
lcall
call
pop
mov
mov
and
aam
sub
cmp
add
sbb
jmp
aaa
mov
pop
push
add
pop
and
mov
nop
cltd
and
or
mov
loopne
std
jle
and
mov
pusha
and
and
or
loope
test
mov
shrl
pushf
dec
cld
xorl
mov
inc
sahf
cmpsb
in
clc
push
mov
outsl
sti
test
enter
repnz
fisubrs
and
sub
mov
push
jl
mov
pop
cltd
add
jmp
icebp
cmp
mov
loope
mov
pusha
sub
testl
inc
push
mov
enter
jb
and
pusha
in
jge
and
mov
lds
rolb
jge
popf
repnz
adc
sub
push
add
and
mov
dec
icebp
fdivr
mov
mov
ret
sub
es
es
and
loope
pop
outsl
cmp
cmpsl
imul
mov
and
jbe
adc
sbb
push
or
jne
in
mov
mov
pop
or
rcl
push
adc
popa
cs
aam
and
out
lea
ret
and
cwtl
and
mov
mov
xchg
xchg
push
sub
xor
and
es
pusha
dec
fisubs
pop
inc
je
rcl
int
and
cmpsl
jo
cmp
mov
ret
into
xor
repz
push
adc
jecxz
mov
jg
jno
or
add
mov
mov
popf
and
and
and
pop
cmp
mov
and
inc
mov
xchg
pop
addb
xor
mov
and
sbb
std
das
and
mov
and
mov
cmp
xchg
cld
pushf
and
jbe
bts
je
in
dec
hlt
xor
movsl
sub
push
mov
mov
push
out
mov
inc
and
push
xchg
xchg
lds
cmpsb
insl
ja
test
inc
inc
hlt
pusha
push
dec
mov
movsl
stos
sub
call
pop
jne
icebp
push
adc
jno
mov
dec
out
popa
xor
cmp
out
and
cmpsl
add
and
fwait
mov
out
jmp
leave
cmp
call
inc
lcall
push
test
and
push
sub
icebp
cmp
xchg
std
jge
daa
fcomip
pop
pop
xchg
pop
mov
inc
mov
adc
sbb
xor
cmp
pop
jno
aaa
divl
or
dec
and
ja
cmp
stos
and
loopne
call
push
jg
lods
adc
jne
je
mov
add
dec
xor
inc
cli
adc
push
and
loop
mov
cmp
insl
and
push
enter
and
les
popf
inc
xchg
lock
test
test
or
sbb
in
out
popw
enter
pop
jp
pop
jl
inc
pop
mov
pop
jae
loop
icebp
fistpl
jo
popa
dec
ret
loope
lods
pop
mov
mov
aaa
sahf
xchg
adc
sub
push
js
and
shl
hlt
xchg
and
and
mov
fdivs
fisubrl
push
add
mov
inc
inc
or
cwtl
stos
mov
and
and
xchg
mov
pop
sub
int3
and
adc
orb
pop
push
mov
loopne
aam
push
mov
mov
shl
xchg
pushf
cmp
add
aaa
ja
adc
popa
push
add
fcmovnb
mov
subb
lock
repz
cmp
xor
cmpsb
fildl
push
push
dec
and
les
cmp
and
dec
div
and
and
clc
int3
lret
out
jns
mov
icebp
cs
out
jge
cmc
loope
cmpsb
and
inc
arpl
andl
scas
das
and
in
lret
scas
and
aaa
fadds
mov
and
leave
daa
push
xor
inc
and
mov
add
cmp
inc
mov
push
xchg
je
call
movsb
repnz
pop
mov
adc
mov
adc
push
or
and
neg
sub
add
aam
faddl
jo
shll
pop
and
leave
insl
mov
loop
out
fwait
jns
mov
push
lret
jecxz
and
outsb
mov
and
mov
inc
push
movsb
and
jbe
mov
in
jo
sub
cmpsl
sbbb
add
mov
and
ja
andl
and
dec
insl
mov
jmp
mov
push
nop
mov
jl
and
data16
dec
mov
mov
loopne
fwait
in
mov
adc
loope
inc
pushf
call
mov
aam
jnp
fstpl
sbb
sub
mov
mov
lods
push
and
xor
push
sti
jnp
lahf
and
dec
movsb
mov
adc
insb
and
loop
lcall
adc
and
lahf
sbb
push
and
pop
lcall
mov
and
in
fbld
cltd
sub
xchg
rcl
dec
push
add
xor
push
outsb
add
push
repz
cmpsl
pusha
rolb
mov
or
jge
push
add
ficoml
cmp
shlb
and
mov
pop
pop
test
xor
jmp
and
inc
or
stos
mov
testb
jae
mov
xchg
xchg
sub
into
sub
scas
lahf
icebp
cmpsl
rcrl
adc
imul
repnz
adc
or
leave
enter
xchg
xor
xor
call
xor
dec
into
int3
stos
push
xchg
adc
mov
in
bnd
pop
mov
lods
test
add
sbb
test
push
and
and
popa
jg
dec
les
xlat
mov
nop
ds
addr16
movsl
fwait
mov
test
sub
jg
or
adc
mov
jecxz
ror
outsl
shl
in
movsb
int
pop
ja
vmulss
mov
es
sbb
jns
and
push
sub
xor
and
xchg
and
mov
es
rdtsc
mov
cs
mov
and
bound
dec
aaa
jge
pop
mov
loope
hlt
pop
mov
cmp
rcr
push
pusha
and
outsb
test
gs
sbb
jbe
push
ljmp
aas
mov
xchg
pop
int
and
dec
cmp
mov
sbb
iret
lds
push
notl
ret
into
inc
sbb
out
cmp
clc
inc
mov
popf
in
pop
add
rorl
lret
pop
push
mov
pusha
mov
bound
cs
and
fcmovne
jmp
push
out
dec
mov
push
sub
and
dec
sub
jnp
ja
and
sbb
enter
and
mov
and
jae
or
add
xor
adc
mov
add
fmul
rorl
adcb
or
xlat
push
mov
pop
xor
data16
jno
and
fs
push
inc
push
xor
mov
xchg
repz
add
adcl
mov
call
and
or
repz
and
jp
outsb
and
rcr
push
clc
ljmp
call
xchg
gs
jns
in
and
dec
and
test
roll
enter
pop
js
test
outsl
icebp
and
add
adc
sbb
xor
jnp
cmp
sub
xor
and
cmp
daa
mov
jle
cmpsl
call
in
pop
dec
ss
mov
xchg
imul
jno
or
sarl
ja
fnstsw
bound
cwtl
pop
pushf
push
pusha
jnp
and
arpl
cmp
test
pop
or
pop
pop
and
movsl
inc
fdivl
ljmp
mov
shll
and
push
repnz
pop
add
xor
mov
xchg
call
stos
cli
popf
sbb
clc
xor
jb
mov
movsl
test
cli
fisubrl
push
inc
ret
add
dec
lock
jnp
test
stc
fs
outsb
push
loopne
sub
fcoml
or
je
xor
fsubr
in
sub
lcall
mov
cmp
pop
popf
jmp
xchg
and
cld
int
ljmp
push
enter
loope
inc
loope
bound
testl
mov
inc
sbb
ret
mov
popa
int3
push
sbbb
lcall
into
outsl
bt
sub
ja
cld
inc
dec
mov
jecxz
lods
and
mov
mov
jne
ret
mov
and
jae
cmp
pop
inc
sbb
xchg
mov
and
xlat
lret
movl
sbb
xchg
roll
add
into
test
sub
and
and
xchg
and
adc
in
aaa
xchg
ret
orb
pusha
scas
push
fidivs
outsb
adc
dec
ret
es
leave
iret
and
add
lcall
cmpsb
inc
fimuls
pop
imul
ljmp
int
out
add
xchg
out
adc
faddl
and
push
pop
lcall
and
adc
and
orl
sbb
and
lret
sbb
loopne
lcall
mov
cld
shr
and
lods
out
fwait
mov
and
and
stos
mov
pop
sarl
jo
push
outsb
jno
sbb
or
and
pushf
scas
jae
xchg
loopne
pop
xchg
mov
inc
mov
fsubrs
test
dec
ret
xor
push
out
enter
and
push
sbb
adc
mov
and
aaa
xor
xor
and
mov
outsb
scas
sub
sbb
bound
add
push
cmp
add
inc
sbbl
pusha
mov
dec
mov
push
loope
insb
jp
cmp
dec
ret
shlb
pop
sbb
mov
sub
xor
insl
ljmp
test
cmp
and
and
testb
sti
inc
mov
leave
jnp
and
fcomp
cmp
and
scas
xor
xor
lods
and
push
cmp
fldt
cmp
test
out
adcb
lods
sub
pop
xor
fstpt
xchg
movsb
dec
jecxz
lea
and
mov
mov
xor
dec
sbb
les
and
mov
sti
iret
shll
rcr
scas
mov
fs
push
jbe
jno
iret
and
and
ss
and
hlt
sbb
iret
lods
push
imul
subb
xor
xor
imul
and
jbe
sbb
mov
and
push
stos
shlb
inc
xchg
and
mov
sbb
das
lret
or
and
xchg
inc
mov
push
inc
sub
and
stos
push
jl
nop
imul
ds
xchg
enter
and
movsb
jg
and
fidivs
aas
and
or
inc
cmpsb
xchg
fs
call
mov
pop
xor
and
push
dec
cmp
repnz
cld
fdivrs
cwtl
loopne
sub
mov
lock
sub
inc
sbb
xchg
int3
add
sbb
sub
jge
bound
and
cmc
xchg
push
and
mov
ret
shlb
and
test
movsb
mul
pushf
inc
xchg
cmp
and
adc
in
push
push
pop
xchg
ret
xor
sbb
xchg
ss
pop
adc
ljmp
imul
push
clc
push
mov
jb
pop
out
pop
sub
hlt
jecxz
ja
adc
aam
ret
jmp
leave
imul
mov
scas
lret
test
ss
xchg
dec
addr16
arpl
sahf
and
sub
push
cmc
cmp
sbb
aas
and
cld
xor
xchg
cmpsl
inc
and
dec
stos
and
mov
adc
sarb
push
and
push
rolb
sbb
push
fidivl
adc
movsb
add
clc
cmp
sbb
mov
and
jnp
enter
push
pop
test
jg
in
sahf
mov
inc
call
and
mov
jl
loopne
cltd
and
movsl
mov
sbb
and
test
push
xor
loope
jp
cltd
gs
lods
dec
jns
mov
popf
jg
jb
loop
dec
add
lcall
mov
cmp
pop
mov
imul
lahf
inc
mov
int3
and
sbb
fcmovnbe
pop
std
xchg
and
xor
icebp
sub
push
mov
sbb
cmpsl
and
and
ljmp
scas
push
lahf
and
insb
mov
mov
rorb
mov
pop
push
push
push
call
out
xor
mov
inc
popa
pop
loop
and
push
push
dec
aam
call
out
aas
in
jne
and
ret
push
decb
xchg
dec
and
inc
loope
adc
cmc
stos
fadd
push
xchg
xor
clc
je
outsl
and
fsts
and
push
in
and
fnstsw
in
or
xor
mov
subl
push
jecxz
sub
sub
das
mull
xchg
hlt
aaa
sbb
fwait
in
pop
and
stc
mov
mov
push
adc
rorl
lcall
aaa
lods
xor
jge
unpckhps
mov
mov
pop
sub
adc
mov
xlat
shl
faddl
inc
push
mov
ss
and
subl
jnp
mov
inc
xlat
inc
test
insb
pop
mov
push
and
fcompl
insl
sub
je
cmp
push
cmpsl
in
push
xor
or
test
sbb
js
xor
jno
cmp
fisubl
hlt
je
sbbl
pop
push
out
sub
sbb
mov
js
xchg
stos
jns
jbe
jnp
cmp
aam
and
aaa
imul
insb
cld
std
ret
movsb
add
jo
aas
and
inc
mov
fsubs
dec
repz
or
out
lock
and
idivb
fnstsw
pop
mov
lcall
int3
loope
jnp,pn
loopne
add
add
dec
sbb
shrl
out
adc
pop
mov
ffreep
xchg
and
mov
popa
aam
mov
sahf
andb
lahf
xor
nop
and
pop
inc
cwtl
aaa
icebp
add
adc
push
or
imul
mov
pusha
and
lcall
dec
mov
push
into
and
xor
out
int
faddl
movsb
xabort
sbbb
test
mov
shl
mov
fisubl
and
pop
xor
push
dec
mov
lret
cli
loop
notb
inc
ja
pop
insl
in
dec
pop
gs
add
popf
and
pop
cmp
sbbb
shl
inc
loopne
dec
mov
and
and
sarb
testl
and
out
cltd
leave
pop
and
mov
sbb
sbb
xchg
adc
out
dec
fistps
dec
cmp
dec
aas
adc
pusha
sub
sub
mov
jg
push
or
push
and
dec
dec
and
cmpsb
mov
sbb
leave
sbb
push
jge
mov
mov
ret
sbb
lahf
mov
jae
and
mov
ror
sub
and
fildll
jns
cmp
dec
inc
loop
jge
cs
mov
xor
adc
add
cmp
mov
arpl
shlb
inc
and
mov
inc
xchg
jl
mov
sub
and
pop
int
push
ret
mov
popa
push
pop
mov
enter
stc
in
mov
lahf
cmp
idivb
nop
lret
jp
cld
scas
mov
dec
push
xchg
mov
faddl
xor
loope
out
fisubl
movl
and
inc
mov
imulb
fwait
into
sbb
es
stos
adc
xor
int3
pop
add
xchg
sub
aas
outsb
sub
lock
mov
and
es
popa
in
fldcw
in
mov
scas
inc
sbbl
pop
stc
add
out
imul
ret
int
stos
jno
pop
xor
ljmp
mov
jecxz
and
inc
cmp
movsb
jge
and
test
adc
shlb
xchg
and
imul
loop
sbb
decl
dec
pushf
push
movsl
sbbb
sub
mov
inc
repnz
sarb
xchg
xlat
in
dec
pop
and
sub
arpl
jge
or
adc
sub
and
pop
xor
mov
xorb
jecxz
sub
and
push
loopne
and
xchg
xor
adcb
mov
arpl
pop
inc
inc
out
pusha
xor
add
ja
mov
outsb
xor
mov
jg
incb
and
mov
andb
adc
or
and
lods
dec
xor
aaa
cmpb
aad
adc
icebp
cmp
xor
and
push
push
call
and
jl
add
js
iret
lret
imul
cld
in
adc
cmpsb
lods
mov
jp
and
add
add
test
imul
pusha
and
roll
add
insl
faddp
movsl
push
push
stc
notl
repnz
int
stos
dec
out
ret
mov
mov
fdivrs
test
push
lods
xchg
adc
sbb
sub
push
adc
stos
push
repz
xor
cmp
mov
fsubs
push
cmp
stos
adc
in
pop
mov
add
jbe
pop
jae,pt
fldenv
iret
add
popf
test
mov
cmp
pusha
mov
and
test
add
inc
cmc
insb
and
or
mov
nop
dec
pop
sbb
and
xor
cmp
sbb
adc
pop
movsl
inc
adc
push
or
mov
pop
mov
and
pop
adc
insl
and
dec
repz
in
insb
inc
dec
jns
push
mov
push
sbb
inc
mov
pop
mov
xlat
sub
and
pop
mov
adc
cmp
in
mov
lret
sbb
loopne
push
push
cmp
lea
into
int3
add
and
add
dec
cmpl
mov
inc
fsubrs
test
cmp
xchg
in
xor
shlb
shll
mov
gs
into
push
and
xorl
fxch
and
dec
test
or
das
add
jb
bound
sub
sbb
pop
out
nop
mov
xchg
adc
push
cmpsb
pop
and
lret
int
mov
adc
scas
cld
bound
shr
push
xorb
pop
mov
cltd
pusha
adc
cld
inc
xor
mov
pop
mov
fdivrl
js
aam
rcll
mov
pop
clc
or
xchg
movsl
sub
call
xor
out
in
sub
ljmp
push
rcrl
dec
xlat
inc
fnsetpm(287
sti
jl
sahf
clc
pop
fidivrs
pop
xchg
inc
inc
and
into
mov
push
popf
mov
push
test
leave
aad
ret
imul
nop
and
rorl
and
cmc
and
shrl
mov
and
dec
mov
push
inc
or
pop
inc
icebp
push
jo
dec
scas
sub
and
jne
lret
xlat
fistl
and
lahf
in
or
push
in
adc
loope
mov
push
or
xor
cli
add
and
aaa
push
repz
enter
stos
and
mov
mov
shlb
mov
pop
int
push
xor
or
xlat
inc
mov
loope
or
mov
pop
bound
mov
loope
neg
xchg
idiv
shr
and
lret
and
and
repz
push
icebp
test
andb
and
cmp
in
xchg
cli
lods
and
xchg
sbb
push
mov
scas
push
mov
and
mov
mov
call
imul
push
jge
ret
cmpsl
hlt
mov
jno
in
and
mov
pushf
mov
inc
movsl
ds
aaa
jno
enter
and
push
adc
insb
stos
stos
imul
outsb
xchg
mov
and
fmulp
loop
sbb
xlat
loopne
add
repnz
and
daa
and
in
pop
addr16
cmp
shl
or
adcl
into
cmpsl
jbe
xor
pusha
push
ret
in
daa
xchg
and
pop
mov
add
sub
mov
add
jl
mov
int3
sbb
sti
repnz
mov
mov
fwait
fs
mov
mov
loope
insb
jle
cmpsb
rcrl
pop
pop
sbb
sbbl
push
dec
mov
push
movsb
iret
and
sbb
mov
shl
pusha
jae
dec
loopne
mov
lahf
and
cmp
or
inc
and
clc
aas
out
movb
inc
xchg
rcll
and
inc
jl
mov
mov
push
clc
insl
test
adc
cmp
push
ja
pop
lea
mov
movsb
test
dec
xor
mov
and
imul
test
xchg
mov
xor
lahf
arpl
add
out
push
or
sarl
pop
fsubl
addr16
mov
and
cmpsb
arpl
scas
jae
and
aaa
mov
testb
pop
scas
sub
sahf
mov
and
ret
es
jne
pop
sub
fnstsw
lock
mov
and
adc
addr16
and
popf
add
fs
sub
lock
enter
jle
mov
mov
jecxz
push
lock
mov
jno
ljmp
les
push
test
ret
add
in
aad
shlb
pop
jle
sbb
adc
repnz
mov
daa
pop
lock
call
inc
mov
and
xlat
adc
inc
outsl
mov
xor
and
dec
jo
mov
out
pop
add
inc
call
ret
xchg
adc
mov
and
push
push
scas
lods
xor
mov
xor
and
mov
cld
imul
ja
add
cmpsb
icebp
xchg
sbb
and
lcall
call
das
jbe
mov
es
in
hlt
fsubs
mov
dec
fisubl
cmpsb
inc
add
add
jl
dec
enter
cltd
xchg
lcall
fisubrl
cwtl
cli
ret
enter
mov
xor
fidivrl
mov
mov
mov
adc
pop
xchg
incl
in
leave
out
lds
inc
add
fst
je
xchg
loop
sbb
bound
adc
sbb
and
push
jge
and
loope
push
pop
std
mov
pop
jns
pop
sub
rol
push
cmp
mov
call
pop
je
ja
movb
loope
push
testl
xor
adc
fcomps
add
test
rolb
pop
test
mov
adc
mov
push
dec
je
enter
fidivrs
stos
sti
std
mull
mov
jg
bound
dec
add
inc
mov
aam
and
mov
and
ror
sub
imul
pop
xor
cwtl
push
int
xchg
dec
mov
xor
mov
rclb
add
lahf
repnz
lods
and
mov
or
cmpsb
popa
fsubl
sbb
jle
mov
andl
sub
xchg
push
jbe
sbb
bswap
sbb
and
dec
and
stos
dec
daa
sbb
sarb
xchg
xchg
jg
jb
sbb
inc
pop
jno
adc
mov
pop
cld
mov
lret
adc
or
xor
add
and
daa
movsb
dec
push
or
ss
push
pop
dec
aas
call
push
cmp
andl
out
xor
lcall
fdivrl
xchg
ds
and
inc
shll
mov
push
and
shlb
xor
and
ja
notb
jmp
cmp
test
and
sahf
push
dec
xlat
inc
lods
adc
inc
fbld
in
cmp
sub
loop
cmp
sbb
and
mov
cmp
adc
xchg
push
lretw
and
xchg
lea
sbb
adc
jns
insb
jecxz
scas
xchg
mov
fwait
mov
inc
dec
xor
mov
mov
and
cmp
push
and
out
jmp
pop
add
cwtl
adc
inc
add
cmpsb
cltd
movsb
testl
js
xor
and
jne
push
cmc
pop
mov
cli
push
and
into
jg
and
jns
test
mov
xor
and
out
das
sbb
and
imul
mov
xlat
aad
mov
jg
scas
sbb
lret
fldl
mov
daa
shll
or
mov
outsl
cld
sbb
mov
fsubr
mov
jmp
and
mov
sti
sbb
movsl
and
adc
pop
jecxz
and
add
jne
and
jle
or
and
and
mov
pusha
fistl
mov
decl
mov
pop
cld
add
jb
rcrb
in
mov
sub
push
shlb
cltd
arpl
movsb
fldenv
inc
shrb
mov
mov
stos
mov
scas
loopne
pop
or
or
ret
mov
mov
and
test
int3
stc
xchg
pop
adc
or
xchg
sbb
and
or
and
push
test
fsubrs
dec
xchg
repz
jmp
or
push
dec
insl
vsubsd
push
inc
xorb
rcrb
and
pop
fstps
imul
inc
push
and
hlt
into
sbb
test
mov
clc
loope
mov
adc
mov
lret
or
dec
sti
int
and
lret
outsb
inc
push
pop
lahf
shrb
and
xchg
insl
pop
jge
xorl
inc
adc
and
sbb
or
xor
popa
loop
outsb
push
push
cmp
push
dec
and
popf
dec
pushf
inc
mov
sbb
movsb
fisttpl
outsb
data16
ss
mov
es
fsubrl
inc
sbb
xchg
jmp
mov
test
mov
inc
push
aam
jo
and
or
aad
test
sbb
and
and
mov
mov
call
and
test
jecxz
jns
repnz
xchg
js
sar
sub
popa
jecxz
dec
and
lock
aam
jbe
xlat
sub
stos
in
sbb
and
push
outsb
fistl
pop
leave
jns
imul
mov
and
cmc
xlat
leave
add
loope
and
loope
and
repz
pop
jp
mov
cmc
stos
dec
pop
jge
and
fmul
dec
in
and
mov
xor
cmp
icebp
jns
in
dec
jl
pop
les
and
mov
and
inc
sbb
xor
sub
push
mov
shll
test
jg
push
cmp
push
and
sub
and
or
in
stc
and
mov
mov
sub
mov
cmp
lret
mov
out
or
popa
insb
dec
scas
mov
in
and
inc
and
insl
fsubr
mov
add
paddusb
lea
sub
mov
mov
popf
dec
and
push
xchg
insl
add
mov
popa
in
push
adc
sub
xchg
sahf
mov
mov
sbb
and
dec
and
scas
and
call
push
xor
inc
dec
xchg
out
shlb
push
pusha
adc
xor
les
clc
loope
icebp
jge
pop
and
jmp
dec
sub
and
test
ret
lods
cmpsl
jg
lea
loopne
mov
mov
and
push
lret
es
test
movsl
and
outsl
mov
pop
or
lods
leave
push
and
sub
dec
jo
scas
jns
aaa
and
nop
int3
cli
or
loope
add
push
test
ja
pusha
inc
sbb
xchg
and
and
and
xor
xor
or
jecxz
icebp
stos
sub
ds
sub
jne
xor
adc
push
rcrl
inc
das
fisubl
wbinvd
or
pop
fwait
and
aas
bound
add
iret
adc
cmp
sub
jge
and
xchg
ja
adc
push
cmp
mov
stos
imul
popf
lahf
cltd
dec
fwait
cwtl
fs
and
popa
xchg
not
aas
hlt
out
lret
and
movsl
push
mov
mov
push
rolb
dec
lds
adc
pusha
mov
loop
inc
scas
inc
and
cmp
ss
add
in
sbb
pop
mov
lds
sub
lods
addl
daa
sbb
nop
jp
sti
pop
add
mov
mov
es
cmp
mov
sbb
ljmp
sub
bound
push
es
rorl
in
mov
inc
pop
insl
cwtl
jl
lret
in
xchg
xchg
and
adc
pop
rorb
sbb
ja
rcr
shl
and
mov
stos
mov
out
and
out
dec
lods
aas
mov
cli
das
push
loope
mov
cmp
daa
sahf
xchg
mov
cwtl
pop
xor
cmp
sub
in
push
inc
insb
imul
shl
mov
fstps
bound
mov
loop
ds
inc
ja
shll
cmp
and
popa
das
stos
sbb
repnz
inc
arpl
dec
cltd
xor
sbb
sbb
jg
add
out
scas
pop
sbb
mov
xor
in
pop
mov
das
add
sub
add
lods
pop
jmp
aam
stos
xorl
jno
jne
movsb
and
mov
mov
and
enter
fbld
sbb
dec
cltd
addl
outsl
or
mov
mov
loopne
and
and
fcomi
or
test
and
xorb
adc
loope
cmc
fsubrl
push
or
data16
push
cwtl
mov
lods
pop
fildll
and
repz
movsb
pop
ror
or
sbb
imul
and
pop
js
outsl
jae
adc
and
mov
dec
pand
and
test
add
rcll
lods
or
push
sbb
fcoms
adc
rcl
mov
scas
stos
shl
popf
adcl
inc
mov
out
pop
jmp
std
in
lods
or
sub
ret
adc
pop
dec
mov
into
or
jle
add
in
push
enter
push
add
xor
push
pop
bound
dec
adc
test
sub
and
lret
and
jo
pop
mov
mov
pop
imul
pop
scas
dec
test
add
leave
and
int3
aam
call
jmp
dec
loop
enter
xchg
and
lock
adc
pop
cmp
or
add
inc
cmp
adc
inc
or
and
pop
and
xor
in
rcll
popa
fs
xchg
pop
and
pop
push
push
inc
sub
push
shlb
adc
insl
sbb
out
push
lcall
xchg
pushf
call
lea
lret
fninit
scas
fsubp
aad
inc
or
fstps
mov
inc
push
xor
and
xchg
loop
leave
iret
xor
mov
mov
cmp
icebp
add
mov
inc
and
or
movsl
and
or
repnz
bound
sub
daa
cmp
movsb
jle,pn
pop
xor
add
xchg
dec
sti
loopne
jl
inc
and
pop
data16
push
jo
xchg
pop
mov
jb
push
sbb
mov
cmp
push
xchg
sub
mov
xor
js
and
loop
pop
aam
fcomp
int3
into
rcl
les
sbb
add
idiv
and
in
out
lock
call
mov
push
push
sbb
push
aas
inc
inc
xor
sub
and
popa
arpl
push
and
dec
dec
and
dec
jge
addl
jae
imul
lea
shll
mov
mov
fdivs
fstp
loope
enter
int
rcl
lret
and
incl
add
idiv
sti
mov
and
sbb
and
adc
sbb
adc
imul
inc
xor
cmp
sub
shll
loopne
sahf
pop
mov
dec
dec
sbb
dec
dec
and
js
insb
outsb
jo
fs
pushf
mov
and
xchg
test
mov
and
mov
cmpsb
push
loopne
and
and
inc
add
add
cmp
jg
movb
movb
lea
jmp
test
xchg
push
cs
adc
mov
mov
aas
pop
outsb
xor
loope
lcall
xchg
gs
cmp
jae
jmp
cltd
lea
je
call
aad
add
stos
adc
add
scas
add
jmp
add
add
add
add
add
push
call
pop
sbb
pop
lods
sbb
and
lds
nopl
cmpsl
or
lret
fisttps
out
dec
test
adc
mov
or
gs
push
xchg
pop
aad
mov
out
enter
push
mov
mov
out
xor
cmc
pop
cmp
sbb
dec
sbb
dec
dec
cs
xor
adc
push
push
pop
dec
cmp
fs
mov
or
adc
push
mov
inc
adc
pop
in
mov
leave
sbb
les
roll
jnp
add
dec
leave
popa
mov
mov
lahf
or
les
pop
adc
push
add
rclb
aaa
or
dec
pop
dec
rorb
int3
or
mov
or
xchg
cmp
outsb
pop
iret
mov
mov
cmp
inc
push
neg
fisubs
loop
sti
or
popf
pop
jne
cmc
mov
mov
inc
pop
pop
leave
xchg
or
dec
adcb
fdivs
sbb
aad
rclb
enter
js
idiv
popf
dec
test
arpl
in
test
cmp
dec
lods
push
mov
scas
pusha
into
sub
inc
imul
mov
or
mov
sarb
mov
scas
adc
inc
mov
xor
pop
push
stc
test
pusha
push
pushf
lea
je
cmp
mov
stc
cmp
add
pusha
stc
pusha
add
movb
lea
jmp
jmp
push
arpl
mov
fcomps
push
test
sbb
cs
dec
aas
iret
test
psubusb
aaa
pop
pop
scas
fadds
insb
cld
sub
inc
cmp
mov
fisubrl
mov
dec
push
aam
call
mov
cs
lea
call
pusha
call
lea
jae
clc
sub
jmp
jmp
test
pushf
mov
xchg
sub
rcr
cmp
call
shrl
pusha
push
repz
xchg
adc
lahf
add
lcall
jae
mov
adc
sbb
sbb
inc
jmp
xchg
or
add
clc
test
mov
clc
mov
clc
stc
mov
cmc
call
test
push
or
jne
pop
or
packsswb
and
inc
stos
mov
adc
inc
xor
lods
shlb
xchg
or
add
and
adc
sbb
ljmp
mov
fstl
push
and
push
lea
ja
rcr
rcl
test
shl
sub
pusha
add
add
jmp
push
jmp
pop
cmpsl
add
jns
add
into
adc
add
add
add
xor
add
add
add
lea
je
push
add
shl
pop
mov
clc
bt
test
test
pusha
lea
je
test
add
push
push
lea
jmp
lea
jmp
stc
cmpsl
loop
cmpsb
sbb
arpl
pop
or
pop
das
and
mov
cmc
aas
jecxz
pop
xchg
push
call
xchg
jo
clc
bt
sub
push
mov
pusha
inc
lea
call
push
call
rol
push
call
iret
mov
das
push
lea
je
stc
shl
call
call
mov
xor
fldcw
jnp
mov
xchg
lahf
mov
int3
gs
mov
mov
or
jbe
mov
std
ds
mov
lock
mov
push
mov
pop
out
jp
enter
lcall
es
pop
sbb
lcall
repnz
repz
imul
jp
enter
mov
and
xchg
push
std
mov
push
push
mov
xchg
nop
push
decl
lret
sub
loop
mov
mov
cmp
jmp
lods
out
and
loop
insb
or
dec
adc
and
sub
xchg
dec
xchg
sti
popa
cli
repz
dec
test
xor
lds
cs
and
clc
mov
daa
cmpsl
jnp
mov
data16
jp
pop
xor
mov
lahf
dec
mov
cmp
and
cld
cmp
mov
mov
lods
xchg
jb
movlps
sub
push
ja
dec
mov
out
popa
jb
std
dec
dec
fldenv
es
jne
or
leave
cwtl
mov
xchg
xor
inc
cmp
fs
mov
xchg
in
push
call
pop
adc
imul
xor
decl
or
pop
addr16
pop
sarb
imul
adc
cmpsl
insb
push
xor
push
bound
test
fldcw
into
ja
cmp
clc
sub
nop
mov
imul
add
jb
and
fstcw
aaa
mull
cmpsb
inc
stos
loop
repnz
rcl
push
pop
lods
jg
sbbl
pop
sbb
leave
daa
adc
push
movsl
adc
movsb
in
in
jo
cmp
push
push
mov
test
mov
pop
rcl
cmp
pushf
pusha
lea
jae
pusha
pushf
lea
jmp
lea
jne
call
pusha
pusha
lea
call
jmp
mov
xchg
mov
push
call
fsubrs
ficomps
lods
xor
arpl
cmp
in
cmc
pop
mov
adc
ret
mov
aam
iret
in
arpl
lret
sbb
mov
lahf
or
out
jb
je
dec
iret
lahf
mov
test
jge
or
mov
add
gs
adc
xor
fbstp
mov
push
test
scas
into
aas
cmp
push
shll
jl
movsb
pinsrw
xor
mov
lea
xchg
or
push
testb
mov
mov
cs
in
and
xor
loopne
arpl
cli
push
sar
test
and
aam
rep
cmp
test
mov
in
pushf
aas
lea
jne
pushf
movw
pushf
call
or
xor
push
push
cld
pop
inc
jmp
js
and
mov
or
push
jns
enter
xchg
call
inc
cwtl
inc
and
call
cmp
call
push
call
dec
pushf
pushf
jmp
push
call
sub
movl
pushl
jmp
push
call
jns
inc
inc
call
call
push
call
stc
add
lea
stc
call
adc
jl
inc
pop
movsb
push
das
ss
fpatan
movsb
insl
flds
push
sub
and
or
rcll
dec
aad
ss
adc
in
dec
xor
push
sub
adc
cwtl
arpl
outsb
or
lea
call
cmp
cmp
cmc
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
stc
ljmp
orb
fucomp
jl
dec
pop
sub
std
sbbl
in
mov
mov
clc
in
in
imul
cmp
mov
iret
xor
sub
pop
or
popf
mov
xor
and
stos
adc
fisubl
and
mov
mov
call
lock
pop
xor
fs
mov
adc
dec
or
mov
jo
add
sarb
pop
mov
nop
lea
mov
jmp
imul
pop
ret
inc
xlat
cmpsl
js
mov
adc
mov
clc
int3
jp
jmp
sub
pop
jb
insb
jl
out
lcall
outsb
scas
lods
cs
outsl
jb
cmpsl
xchg
sar
mov
rolb
xor
test
imul
add
mov
stos
sub
xchg
mov
cmp
cltd
leave
and
mov
repnz
sarl
sbbl
fidivl
or
bound
lock
outsb
pop
mov
jmp
sbb
stos
sbb
or
cmpsb
lcall
push
jne
nop
stc
xchg
mov
xlat
xor
jp
mov
push
imul
pop
pop
jp
push
xchg
sbb
insb
outsb
jp
jl
jno
push
xchg
in
mov
xchg
lods
push
xor
movsl
sub
xchg
cmp
jg
cld
sti
jg
test
add
jmp
cmpsb
push
js
xchg
mov
fs
mov
xchg
shr
sahf
decl
xchg
cmp
cmp
pushf
pushf
movw
lea
ja
clc
imul
stc
clc
add
pushf
lea
jmp
jmp
push
call
add
and
and
add
push
call
mov
call
push
call
pushf
push
cmp
lock
jge
inc
cwtl
xchg
lods
xchg
pop
test
sbb
fisubs
mov
icebp
test
idivl
adc
mov
ficoms
jl
rorb
std
xchg
dec
dec
jo
push
xchg
shlb
push
int
fcmovnb
sub
test
insb
pop
cwtl
pop
popf
adc
iret
mov
sub
cmp
test
jg
mov
push
int
dec
sbb
cli
test
call
scas
in
notl
scas
and
pop
shlb
xlat
dec
mov
nop
in
adc
in
xchg
and
fwait
jp
pop
xchg
push
mov
pusha
fwait
rcl
cmp
mov
stos
inc
mov
dec
aad
arpl
pop
aas
inc
mov
movl
clc
stos
push
pushf
pushf
pushf
lea
jmp
leave
popf
sub
lea
mov
push
jl
mov
nop
lods
push
pop
add
cmpsb
out
mov
pop
imul
fstpl
test
ret
adc
call
sbb
dec
je
mov
inc
outsl
scas
into
clc
adc
adc
pusha
test
call
xor
repnz
fisttps
cmp
mov
push
cld
adc
es
push
scas
clc
in
insl
xchg
mov
jecxz
dec
jle
jns
fidivrs
add
jle
xchg
imul
lea
jb
pushf
pushf
pushl
ret
mov
push
mov
movb
pushl
ret
push
mov
cmc
cmc
sub
jmp
pusha
pusha
push
mov
movl
pushf
mov
movb
pushl
ret
pusha
mov
mov
and
mov
lret
shrl
das
in
les
cli
inc
sub
das
test
call
hlt
add
adc
ja
or
mov
add
push
pusha
mov
push
lea
jmp
movb
cmp
shl
jmp
test
bt
cmc
add
pushf
lea
ja
push
pushf
lea
jne
sets
pushf
seto
pushfw
popw
not
mov
cmc
cmc
call
pop
adc
int3
fstpl
test
push
sbb
mov
fdivl
jecxz
mov
fisttpll
xor
jno
in
push
call
fiaddl
shl
call
push
call
mov
xor
pushf
mov
cmc
sub
pushl
jmp
mov
not
mov
call
lods
not
clc
setb
not
rol
shr
bt
sar
sub
movb
dec
not
jmp
bt
test
jmp
bswap
pusha
mov
lea
pushf
lea
jne
pushf
mov
jbe
pushf
push
pushf
mov
call
call
pushf
pushf
lea
jne
setge
aas
pusha
xor
pusha
mov
sub
pushf
add
sbb
mov
call
rep
bswap
lea
jmp
lea
jne
pusha
mov
pusha
lea
jmp
movzbl
bt
shl
push
add
shld
btr
daa
push
shl
not
not
add
push
cmp
pushf
ror
mov
and
rol
push
clc
bt
adc
push
rol
not
lea
pushf
movzbw
mov
bt
cmc
call
push
call
out
pusha
stos
pushf
pushf
mov
movw
lea
jmp
jmp
call
push
jmp
mov
jmp
push
call
xchg
jb
bound
sub
not
push
jmp
push
movw
mov
jmp
push
call
pusha
dec
call
mov
movl
lea
jmp
pushf
lea
je
btc
neg
add
bswap
cmp
mov
push
add
cmp
clc
mov
ror
mov
push
jmp
call
mov
push
mov
movzbw
call
add
clc
test
pusha
mov
movl
test
jmp
shl
int
sbb
std
addr16
jo
and
leave
adc
dec
iret
pop
sti
push
fucomp
xorl
mov
mov
add
leave
and
mov
pop
popf
notb
or
dec
js
dec
fcomps
aad
das
xchg
iret
fistpl
and
add
inc
js
je
jb
arpl
jae
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
out
dec
pop
pop
adc
out
jae
xchg
xchg
mov
push
push
add
sub
jmp
shrl
jecxz
dec
xchg
xchg
xchg
ja
stos
push
xchg
mov
or
or
push
iret
lahf
mov
pushf
in
push
in
pop
getsec
lea
or
inc
addl
leave
jmp
popa
leave
aas
mov
loopne
loop
call
pusha
dec
xor
push
mov
and
jl
movsb
cmp
inc
aad
sub
lret
aad
in
sub
jl
lcall
mov
push
mov
mov
pushf
push
pushf
pushl
ret
mov
jmp
call
pusha
jmp
fldl
mov
or
mov
pop
and
cmp
insb
divb
bound
mov
fldl
jp
pop
xchg
pop
jle
pop
add
push
xchg
insl
sbb
scas
inc
call
enter
sti
iret
inc
stos
insl
push
sbb
mov
xor
movsb
cltd
call
xchg
and
scas
sbb
add
add
add
movl
lea
jmp
add
dec
outsl
popa
fs
imul
add
loopne
pushl
movl
call
pusha
pushf
lea
je
bt
test
mov
cmp
das
mov
push
pushf
test
pusha
lea
je
clc
clc
test
jmp
movzbw
not
mov
pusha
pushf
pushf
pushf
lea
jmp
call
stc
bt
jmp
push
call
aas
cmp
pushf
pushf
dec
test
jmp
mov
push
rep
lea
jmp
pushl
pushf
push
cwtl
jmp
call
push
call
cltd
sahf
mov
call
push
dec
call
xor
pusha
cmc
repnz
jmp
cmp
pusha
pushl
call
cmc
cmpb
jmp
push
call
dec
push
call
mov
mov
jb
jne
insb
push
jb
je
arpl
xor
cmp
pusha
jmp
mov
call
jmp
jmp
lea
jb
pushf
stc
call
mov
call
dec
mov
jmp
mov
lea
jne
stc
cmc
cmpb
jmp
cmp
test
push
lea
je
cmc
rcl
not
add
push
lea
xor
mov
add
sbb
rol
bsf
pusha
mov
sub
movzbw
mov
call
stc
pushf
addl
pusha
pusha
push
movw
lea
jmp
push
mov
cmc
call
xlat
jge
hlt
js
or
pop
and
cmc
out
cld
sti
loop
pusha
adc
pusha
mov
mov
in
jp
inc
lret
push
sbb
push
dec
mov
int3
insb
cmpsl
clc
sub
and
mov
xchg
arpl
sbb
mov
push
xchg
dec
jle
stc
and
rcl
movsb
xor
or
jb
or
push
lds
loope
addr16
scas
es
ljmp
sbb
inc
xlat
pop
or
call
rorb
push
mov
xchg
pop
mov
mov
add
push
leave
mov
lods
aad
xchg
popf
adc
mov
inc
mov
test
test
cmp
jmp
add
adc
cmp
xchg
cs
call
adcb
rcrl
and
je
xor
ss
dec
into
cmp
ja
add
push
xchg
jo
add
xchg
xor
cmpsb
xchg
scas
adc
inc
pop
cwtl
nop
push
jl
mov
ror
or
call
xor
ljmp
fimull
xor
scas
mov
sbb
sbb
and
sbb
mov
inc
insb
mov
add
pop
cld
add
popf
out
stos
and
dec
pop
pop
xchg
or
jl
cmp
fisubrs
or
mov
jl
xor
mov
xor
or
xchg
jp
mov
xor
in
xor
cld
or
mov
or
ret
xchg
adc
mov
jmp
push
aas
insb
out
mov
mov
dec
cmp
insb
loope
and
cmp
jmp
imul
adcb
int
subl
loope
sbb
inc
xor
outsb
fldenv
cmp
jbe
jo
orl
outsl
xor
fwait
jle
mov
add
arpl
ljmp
adc
scas
mov
add
dec
sbbb
insb
insl
or
add
je
push
out
fs
inc
or
add
ja
dec
jno
add
dec
lods
ret
ret
enter
and
divl
and
jnp
data16
cli
add
test
rorb
mov
int
push
jb
pop
xor
or
cmp
cmp
and
dec
imul
lods
mov
inc
add
jo
inc
push
and
inc
into
sbb
icebp
es
mov
mov
clc
sub
and
push
push
outsb
fsubl
cmc
mov
mov
add
daa
mov
xchg
push
test
cmc
sub
lahf
pop
in
out
arpl
push
and
lea
in
repz
xor
push
add
pop
and
leave
mov
enter
lods
jb
je
mov
adc
inc
mov
movsb
mov
fs
aas
dec
nop
and
ja
and
popa
mov
dec
push
repnz
pop
andl
sbb
rol
xor
test
pop
cmc
shll
dec
jnp
and
or
shll
mov
mov
nop
orb
clc
pushf
pop
push
jno
aad
stc
pusha
push
mov
xchg
xchg
cmc
test
dec
scas
adc
rcr
push
movsl
add
popa
push
sub
lods
inc
mov
push
jmp
shlb
ficompl
sbb
pop
and
lods
insl
sub
sub
lret
and
inc
adc
mov
and
stos
push
jge
inc
shlb
xchg
or
cmp
cmp
and
mov
push
pop
mov
cmp
popa
cld
pop
adc
mov
scas
in
and
dec
aas
sbb
mov
and
sub
and
mov
out
iret
enter
scas
clc
sti
and
rcll
or
int
pop
insb
jl
lea
sub
aad
jno
dec
and
jne
into
and
je
mov
cmc
jne
mov
ret
xchg
adc
das
lahf
push
popa
test
aaa
xchg
push
adcl
insb
jns
sti
jno
lock
fldt
jl
and
adc
pop
jo
loopne
sar
inc
mov
scas
inc
and
mov
push
dec
inc
jne
pop
repnz
add
sub
fldenv
mulb
es
push
sbb
jmp
push
inc
mov
sub
call
ljmp
mov
sub
xchg
arpl
inc
aam
lahf
add
push
xor
and
out
adc
push
inc
and
sbb
xlat
cmp
int
cmpsb
pushf
mov
cmp
jbe
xor
mov
pop
test
jae
mov
mov
cmp
pop
fmulp
jl
in
and
outsb
cs
stos
ret
sbb
mov
cmp
jns
out
mov
mov
and
or
ds
inc
xor
inc
je
pop
pop
cwtl
fcomp
pop
ja
sbb
jnp
sbb
std
xchg
and
pushf
insb
pop
lods
mov
aaa
aam
pop
repnz
adc
rcll
stos
inc
int
scas
testl
and
test
aaa
inc
sbb
add
out
shll
push
and
jg
lods
push
or
or
in
sbb
cli
std
mov
inc
and
fs
pop
es
cwtl
cmpsb
inc
xlat
jns
mov
and
int3
cld
ja
or
jno
dec
and
push
pusha
mov
and
pop
jle
outsl
and
or
pop
mov
mov
xor
mov
mov
and
cmp
adc
mov
push
sub
call
cmc
sub
stc
stc
pushl
stc
call
pop
cmpsl
add
jns
add
into
adc
add
add
add
xor
add
add
add
movw
jmp
bt
cmp
pushf
pusha
pusha
movw
lea
ja
cmc
call
btr
push
add
or
cmp
call
cmpb
call
shrd
cmp
mov
test
call
cmp
test
test
mov
pushl
lea
je
jmp
insl
mov
push
pop
xchg
outsl
jb
sbb
adc
cwtl
or
jle
cmpsb
mov
pushf
mov
lret
in
into
adc
xor
sbb
ljmp
xorb
fdivr
fcoms
das
mov
pushf
bt
pushf
and
clc
push
push
cmc
add
movb
lea
jmp
pop
mov
push
lea
jmp
lea
ja
pusha
imul
mov
add
pushf
pushf
lea
jmp
sbb
icebp
call
and
add
mov
rorl
pop
add
xchg
and
clc
add
pushl
pusha
pushf
mov
lea
jmp
rcr
clc
mov
jmp
pushf
push
pop
mov
jmp
cmp
mov
call
push
call
inc
add
out
fldl2t
dec
repnz
decl
xchg
ret
xchg
add
rcl
lea
aad
pushf
mov
shl
mov
sub
stc
cmc
call
xor
pusha
pusha
movw
lea
call
push
mov
jmp
pop
mov
lahf
bswap
pop
jmp
push
jo
addr16
dec
je
and
shll
sbb
sti
lret
in
inc
mov
cmp
lea
fnstcw
aaa
push
cltd
jne
gs
xor
sub
out
cwtl
add
pop
rcrb
in
cmp
jmp
call
cmp
add
pusha
add
lea
call
pusha
mov
push
push
lea
jmp
shlb
dec
iret
movsl
xor
int3
lcall
and
push
loopne
push
cmc
adc
or
dec
and
jns
rcr
cmp
out
pop
loopne
lcall
mov
xchg
inc
lods
cmp
mov
xchg
xchg
xor
cmp
fwait
push
je
add
out
pop
xor
mov
movsb
sub
sub
into
into
stos
std
or
lds
fs
call
stos
cmpsb
mov
mov
cld
lods
movd
cmc
jmp
or
jb
test
mov
clc
fwait
icebp
sti
push
and
mov
mov
ret
pop
icebp
arpl
xor
aas
or
sets
push
lods
clc
stc
rol
clc
pusha
sub
movw
push
jmp
rol
cmc
clc
bt
stc
add
stc
pushf
cmp
xor
jmp
mov
mov
movb
movb
lea
jmp
jmp
bt
pushf
stc
add
pushf
pusha
jmp
adc
std
mov
shld
mov
cld
pushl
popf
pushf
movl
movb
pushf
lea
jmp
inc
bt
push
movb
add
bt
clc
stc
sub
pushl
call
sub
mov
shld
not
rcr
mov
jmp
mov
movb
push
lea
jmp
pushl
inc
lea
jo
rol
cmc
test
xor
pusha
call
mov
push
mov
pushf
push
lea
jmp
shr
test
rcl
mov
rol
dec
mov
test
test
cmc
not
cmc
bt
pushf
call
jmp
pusha
mov
dec
test
call
add
rcr
pusha
mov
clc
push
xor
test
xor
jmp
push
mov
pushf
pushf
lea
jmp
pusha
pushl
pushl
popl
pushf
movb
mov
pushf
lea
jmp
and
pushf
mov
mov
jmp
push
add
mov
mov
mov
push
push
pushl
pushl
ret
aas
not
push
mov
jmp
xor
daa
movsbw
xadd
mov
movsbw
bt
shl
add
mov
cmc
not
cmp
jmp
mov
jmp
call
call
lahf
not
mov
jmp
bsr
setl
mov
bts
movsbw
rcl
mov
shr
mov
pushf
stc
add
cmc
shrd
jmp
cwtl
mov
clc
mov
cmp
add
jmp
pushf
popl
pushf
push
pushl
popl
pushf
mov
lea
jmp
movw
push
mov
call
pushl
bt
xor
jmp
call
mov
mov
pusha
pushf
lea
jmp
push
jmp
neg
shl
call
not
pusha
clc
and
call
lea
mov
bswap
lea
mov
movb
mov
movb
mov
pushl
ret
cwtl
mov
pushf
and
mov
bt
add
jmp
push
mov
pushf
lea
jae
push
push
push
pushl
mov
call
jmp
jmp
mov
push
push
pushf
movb
lea
jmp
push
pushf
popl
push
call
jmp
sub
stc
jmp
pusha
test
shld
dec
mov
stc
cmc
clc
add
call
push
pusha
pushf
popl
pushl
pushl
popl
mov
movw
mov
lea
jmp
mov
pusha
movl
mov
pushl
mov
call
pushf
mov
pushf
jmp
movw
pushl
mov
jmp
stc
cmc
add
pushl
jmp
sete
movzbw
btr
mov
ror
setnp
or
sbb
bts
sub
btc
mov
bts
rol
shld
bswap
movsbw
xor
sub
sbb
shld
and
lea
or
mov
pushf
add
call
mov
movb
mov
mov
push
lea
jmp
mov
push
lea
ja
mov
pushf
movzbw
cld
pushf
jmp
pushf
lea
jg
inc
pushf
bt
movl
add
cmp
not
bt
clc
bt
movw
add
cmc
xor
stc
test
clc
mov
clc
mov
sub
lea
jns
mov
pushf
pushf
movb
pusha
lea
jmp
pushf
lea
jnp
mov
pusha
movb
lea
jmp
call
pushl
sub
call
push
pusha
pushf
mov
push
movb
lea
jmp
divl
mov
jmp
call
mov
lea
mov
pop
mov
not
movzbl
mov
call
call
pusha
movb
inc
mov
movb
clc
mov
add
pushf
cmc
cbtw
cmc
pushf
stc
clc
cwtl
pushl
cmc
sub
call
pushf
popl
pushl
pushl
popl
pushf
pushl
lea
jmp
mov
pushf
movw
mov
jmp
mov
jmp
mov
pusha
movb
mov
push
pushl
mov
push
push
pushl
lea
jmp
sub
mov
shl
xor
mov
push
jmp
call
stc
xor
pushf
jmp
pushf
pusha
pusha
mov
pushl
call
mov
push
pushf
lea
jmp
jmp
jmp
clc
bt
add
jmp
mov
call
std
cld
pusha
rep
not
rcr
mov
shl
shld
rol
sub
mov
jmp
pushf
mov
movb
lea
jmp
and
push
pusha
pushf
call
mov
mov
movb
lea
jmp
test
mov
cmc
test
xor
cmc
clc
jmp
pusha
push
lea
ja
push
mov
pusha
mov
pushf
lea
jmp
pushf
mov
pushf
mov
lea
jmp
pushf
jmp
clc
rol
push
bt
cmp
cmp
not
movb
jmp
pusha
movb
push
mov
pushf
jmp
pushf
mov
pushf
push
pushf
popl
jmp
mov
pusha
jmp
pusha
jmp
call
mov
pusha
mov
pushf
lea
jmp
mov
pusha
pushf
push
pushl
lea
jmp
call
setp
mov
bswap
push
jmp
call
mov
call
movw
mov
pusha
pusha
lea
jmp
call
mov
pusha
jmp
push
push
mov
movb
mov
lea
jmp
push
call
cmc
pushl
test
stc
clc
add
bt
popf
push
pushf
lea
jmp
bt
rol
clc
not
clc
sub
bt
add
movw
mov
jmp
das
rcl
neg
mov
bt
test
pushf
movb
sub
pushf
pushf
add
call
push
movb
jmp
mov
mov
mov
mov
pushl
call
call
bsf
shld
rcr
mov
bt
cmc
shl
and
add
jmp
mov
pushf
popl
call
pusha
push
lea
ja
shld
movsbw
aad
mov
sub
btr
call
push
pusha
mov
pusha
push
pushf
pushl
ret
lea
jbe
push
pushf
pushf
pushl
ret
call
mov
pushf
jmp
dec
clc
call
pushf
ror
pushf
inc
pushf
not
stc
call
pusha
jmp
mov
mov
pushl
lea
jmp
call
lea
js
pushf
call
push
mov
mov
pusha
movb
mov
jmp
pushf
mov
call
mov
pushf
pushf
lea
jmp
movb
mov
call
mov
sub
mov
push
pushf
lea
jg
sub
stc
bt
jmp
mov
mov
mov
pusha
mov
call
shl
mov
stc
add
push
cmp
cmp
sub
jmp
pushf
mov
pushf
dec
cmc
mov
jmp
mov
cmc
sub
pushf
call
bt
sub
pushf
push
add
mov
mov
push
pushf
lea
jmp
sub
push
pushf
pushf
jmp
mov
pusha
pushf
call
pushf
mov
lea
jge
sub
push
pusha
jmp
add
cmp
sub
test
mov
test
clc
add
mov
lea
jmp
cmc
add
stc
test
xor
pushf
clc
cmp
mov
cmp
movb
push
pushf
sub
movw
pushf
call
push
mov
lea
js
push
jmp
setae
pusha
mov
call
btr
jmp
add
call
clc
stc
bt
push
add
lea
jne
push
mov
pushf
mov
pusha
pushf
lea
jmp
pusha
push
pusha
pushf
pushl
popl
pushl
lea
jmp
not
pushf
bt
sub
bt
stc
jmp
call
ror
bswap
notl
pushf
aas
lahf
cmp
mov
call
push
push
pusha
pushf
mov
pushl
pushf
pushf
lea
jmp
pushf
mov
push
jmp
pushf
mov
pushf
lea
jmp
sets
mov
jmp
pushl
popl
pushl
mov
push
lea
jmp
push
neg
rol
mov
jmp
adc
movzbl
shl
neg
xor
ror
cmc
xor
call
push
mov
mov
mov
pushf
lea
jmp
mov
pusha
jmp
pusha
movw
mov
pusha
pushl
mov
push
call
mov
mov
lea
jmp
jmp
cwtl
bt
sub
jp
sub
pushf
cmp
cmp
jmp
pushf
mov
mov
movw
pushf
popl
pushl
movw
pushl
popl
movb
lea
jmp
call
jmp
pushl
pushf
popl
jmp
pushl
popl
pusha
lea
jmp
xchg
cld
mov
mov
call
bt
clc
test
stc
mov
cmp
shr
setne
mov
cmp
call
call
bt
xor
jmp
sub
clc
push
pushf
shl
jmp
mov
push
push
movw
push
lea
jmp
add
lea
jbe
pusha
mov
pushf
mov
push
pushf
mov
pushl
mov
push
push
pushf
lea
jmp
sub
pusha
dec
rol
stc
movb
xor
movsbw
not
rcr
shrd
sar
xor
pushf
sub
rcl
sub
stc
mov
movw
stc
jmp
btc
rcr
cmc
btc
ror
lea
sub
btc
lea
jmp
not
mov
cld
bt
pushl
popf
pusha
pushf
lea
jmp
shr
push
mov
jmp
aaa
pushf
mov
mov
rcr
cmp
mov
stc
stc
movb
add
push
movb
pushf
mov
pushl
lea
jmp
pushl
mov
pusha
push
pushf
lea
jmp
sub
test
mov
shr
push
pushf
jmp
call
pop
mov
jmp
jmp
mov
shl
jmp
mov
movb
mov
pushf
push
lea
jmp
pusha
jmp
movsbw
movzbl
bsr
setne
mov
mov
call
push
sar
pushl
das
mov
rcl
shl
sub
mov
add
jge
add
jmp
push
movw
bswap
lea
jae
pushf
lea
pushf
pusha
dec
call
pusha
pushl
jmp
pusha
mov
call
xor
movw
not
cmp
bt
movb
test
xor
jmp
pusha
movl
mov
push
jmp
inc
shr
movzbl
cmp
stc
sub
push
movb
call
and
mov
shld
inc
movzbw
sub
movsbw
inc
call
pushf
movb
sub
pushl
jmp
pushf
popl
push
push
pushl
popl
movw
lea
jmp
rol
add
adc
xor
pushf
and
sub
bswap
pusha
mov
bt
jmp
neg
setno
ror
shld
btr
xadd
neg
lea
ror
bsf
mov
stc
neg
sub
rcr
mov
shl
movsbl
clc
mov
neg
cmc
pushf
bts
add
add
adc
bt
mov
sbb
dec
add
stc
not
ror
ror
or
xor
sub
btr
pushf
rol
not
movsbw
add
pusha
pushf
not
rol
btr
shl
bswap
add
jmp
pusha
mov
push
movb
mov
pushf
lea
jmp
lahf
pop
xchg
mov
push
mov
push
pushf
mov
call
pusha
pushf
mov
call
shl
sbb
mov
pusha
cmp
call
mov
push
pushf
push
call
call
movsbw
mov
mov
xchg
pop
mov
movzbw
call
jmp
sar
shr
jmp
mov
pushf
pushf
lea
jmp
call
pop
jmp
jmp
mov
jmp
jmp
pusha
pusha
mov
push
mov
push
call
pushf
mov
call
add
movb
cmp
cmc
cbtw
cmp
pusha
push
cmc
cwtl
test
sub
lea
jns
pusha
pusha
push
mov
movw
pushf
push
mov
lea
jmp
mov
pushf
pusha
xor
call
pusha
jmp
clc
sub
clc
test
pushf
cmc
xor
call
dec
jmp
stc
pushf
call
pushl
popl
pushf
lea
jmp
add
push
pushf
mov
push
mov
pushf
pushl
lea
jmp
mov
pushl
pushf
mov
lea
jmp
pushf
movb
jmp
call
mov
pusha
pushf
lea
jmp
aas
lea
cmc
sub
stc
rol
lea
and
mov
ror
clc
and
adc
neg
sbb
shld
sub
pusha
movsbw
pusha
lea
mov
pusha
pusha
pushf
popl
std
mov
xchg
bswap
movsbw
movsbl
lea
mov
movl
not
push
not
lea
std
cld
pushf
std
mov
mov
mov
lea
jbe
cld
cld
cld
cld
jmp
mov
pushf
push
push
lea
jmp
mov
pushf
mov
sub
pusha
push
pushf
lea
jmp
mov
push
pushl
lea
jmp
sub
call
movl
sbb
cmp
and
mov
neg
rol
xor
jmp
and
movzbw
lahf
btc
lea
pusha
clc
bt
cmp
lea
jo
pushf
movl
movb
lea
ja
shl
or
xchg
rcr
mov
ror
setne
shr
aas
lea
movzbl
setp
sbb
sub
sbb
lea
movzbl
rol
test
and
rcl
sub
movsbw
movzbw
movsbl
jmp
pushf
shl
mov
pusha
mov
movb
jmp
mov
jmp
setbe
mov
or
shr
xor
mov
bt
jmp
pusha
push
pushf
mov
push
lea
jmp
bswap
lea
pushf
pushf
pusha
mov
jmp
xadd
mov
jmp
lea
mov
setnp
movsbw
pushf
btc
add
push
call
or
mov
pushl
sub
cmp
movw
cmc
add
call
push
movb
mov
mov
pushl
pushf
pushl
ret
mov
pusha
pushf
mov
movb
pushl
call
clc
bsf
clc
neg
mov
jmp
movw
pushf
popl
call
call
pushf
call
add
pushl
shl
shld
btr
xor
rol
btr
and
mov
clc
cmp
sub
cmp
jmp
mov
push
pushf
popl
lea
jg
pushf
pushf
pushl
popl
pusha
movb
mov
lea
jmp
pusha
call
push
mov
pushf
movb
mov
lea
jmp
stc
pusha
cmc
shr
call
mov
pushf
jmp
jmp
pusha
pushf
mov
push
push
mov
push
lea
jmp
bts
not
add
bswap
mov
push
mov
bt
add
movb
pushl
pusha
lea
jmp
call
rep
call
push
mov
mov
jmp
pushf
jmp
push
mov
and
and
mov
clc
pushf
cmc
push
sub
test
push
cmc
shl
lea
jne
pusha
mov
pusha
mov
pushf
popl
pushl
push
pushf
pushf
pushl
popl
movw
mov
lea
jmp
call
push
rep
lea
jmp
jmp
call
bt
cmp
pushf
add
pushf
cmp
not
jmp
call
call
pushf
pusha
call
jmp
push
mov
pushf
pushl
pushl
xchg
not
pop
mov
lea
call
mov
lea
cld
lea
std
mov
mov
pushf
push
mov
movb
cld
call
push
jmp
xor
pushf
push
bt
call
movb
add
stc
pushf
jmp
pushl
popl
pushf
push
lea
jmp
sub
mov
shl
rcl
pop
btc
pusha
rcr
mov
adc
pushl
popf
lea
call
call
jmp
or
daa
lahf
setp
mov
test
stc
jmp
jmp
pusha
mov
movb
mov
mov
pushf
lea
jmp
jmp
mov
sub
jmp
lea
mov
sub
rcr
mov
bt
add
call
pusha
push
pushf
popl
lea
jbe
pusha
pushl
popl
pushl
lea
jmp
cmc
ror
jmp
mov
push
mov
movw
pushf
movb
lea
jmp
jmp
mov
push
or
mov
stc
cmc
stc
add
test
shld
pusha
mov
pushl
pushf
popl
lea
jnp
pusha
pushf
pushl
pushl
popl
push
pushf
pushl
lea
jmp
call
aaa
xor
mov
jmp
mov
pushl
popl
movb
lea
jmp
pushf
popl
mov
pushf
pushl
popl
mov
mov
pushf
pushl
lea
jmp
push
movb
pushl
popl
mov
lea
jmp
stc
bts
bt
ror
jmp
mov
call
rep
std
sub
stc
mov
and
neg
shl
movsbw
mov
pushf
pushl
popf
pushf
pusha
mov
lea
jmp
push
neg
aad
shrd
mov
or
pushl
shl
mov
jmp
call
mov
call
rol
stc
pushf
mov
test
xor
jmp
pusha
lea
push
std
cld
xchg
std
push
pop
mov
jmp
cmc
pushf
add
cmc
rol
stc
sub
jmp
call
pusha
lea
call
lea
jne
push
pusha
bswap
mov
pusha
lea
pushl
jmp
call
call
push
call
stc
stc
rol
push
test
stc
not
mov
push
cmp
sub
clc
test
stc
add
mov
call
std
cld
jmp
jmp
bt
sub
pushf
jmp
call
add
push
pushf
call
call
push
pushf
pushl
popl
movb
pushl
movl
lea
jmp
mov
push
pusha
push
pushf
lea
jmp
pushf
mov
pushl
pusha
pushf
movb
lea
jmp
call
jmp
jmp
xor
bt
test
bt
sub
cmc
stc
jmp
mov
jmp
call
mov
push
pushf
call
push
mov
pop
add
cmpsl
pop
add
cmpsl
pop
or
cmpsl
pop
or
ret
cmpsl
pop
pop
inc
cmpsl
pop
or
cmpsl
pop
add
cmpsl
pop
pop
fwait
cmpsl
pop
add
cmpsl
pop
pop
inc
cmpsl
pop
or
cmpsl
pop
pop
bound
pop
pmaddwd
pop
add
cmpsl
pop
pop
bound
pop
or
cmpsl
pop
pmaddwd
pop
add
cmpsl
pop
or
cmpsl
pop
stc
cmp
pop
adc
inc
cmpsl
pop
add
add
cmpsl
pop
add
cmpsl
pop
or
inc
cmpsl
pop
add
cmpsl
pop
or
cmpsl
pop
add
adc
pop
add
cmpsl
pop
add
cmpsl
pop
adc
pop
or
cmpsl
pop
stc
jno
push
push
mov
pop
or
cmpsl
pop
adc
cmpsl
pop
or
pop
or
mov
pop
add
or
or
pop
add
cmpsl
pop
pop
fwait
cmpsl
pop
add
cmpsl
pop
push
andl
add
push
fisubl
pop
push
andl
or
cmpsl
pop
or
cmpsl
pop
stc
jno
push
or
cmpsl
pop
or
cmpsl
pop
or
dec
cmpsl
pop
add
cmpsl
pop
push
fisubl
pop
adc
inc
cmpsl
pop
or
cmpsl
push
add
cmpsl
pop
add
cmpsl
pop
pop
inc
cmpsl
pop
add
cmpsl
pop
or
push
mov
pop
or
cmpsl
pop
adc
mulb
pop
or
cmpsl
push
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
or
cmpsl
pop
add
cmpsl
pop
pop
mulb
pop
pop
shll
push
add
pop
push
mov
pop
add
cmpsl
pop
or
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
pop
fwait
cmpsl
pop
push
mov
pop
add
cmpsl
pop
or
stc
cmpsl
pop
adc
cmpsl
pop
add
or
cmpsl
pop
add
cmpsl
pop
or
cmpsl
pop
add
cmpsl
pop
or
pop
push
andl
add
add
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
adc
shll
pop
add
cmpsl
pop
push
fisubl
push
or
adc
pop
pop
mulb
pop
or
cmpsl
pop
or
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
add
cmpsl
pop
pop
mulb
pop
or
pop
inc
cmpsl
pop
adc
cmpsl
pop
add
cmpsl
pop
push
andl
adc
pop
push
andl
or
cmpsl
pop
add
cmpsl
pop
stc
jno
push
adc
pop
or
cmpsl
pop
pop
mulb
push
add
cmpsl
pop
adc
jno
push
pmaddwd
pop
adc
cmpsl
pop
adc
cmpsl
pop
adc
cmpsl
pop
push
fisubl
pop
or
pop
push
andl
adc
cmpsl
pop
or
cmpsl
push
or
cmpsl
pop
adc
pop
pop
shll
pop
adc
fwait
cmpsl
pop
adc
pop
adc
cmpsl
pop
adc
pop
adc
cmpsl
pop
or
fwait
cmpsl
pop
or
cmpsl
pop
adc
cmpsl
pop
add
cmpsl
pop
adc
cmpsl
pop
adc
cmpsl
pop
or
fwait
cmpsl
pop
adc
pop
adc
cmpsl
pop
add
cmpsl
pop
adc
cmpsl
pop
or
cmpsl
pop
adc
cmpsl
pop
or
cmpsl
pop
adc
cmpsl
pop
adc
fwait
cmpsl
pop
push
lret
cmpsl
pop
adc
cmpsl
pop
add
cmpsl
pop
adc
cmpsl
pop
push
jmp
popl
pusha
lea
jmp
pushl
push
pushf
popl
call
jmp
pusha
pusha
movw
cmc
sub
pushl
clc
shr
jmp
jmp
sub
pusha
inc
movw
mov
pushl
call
pushl
popf
mov
movw
lea
jmp
mov
pushf
call
mov
mov
pushf
lea
jmp
movb
dec
movb
inc
dec
bswap
adc
not
call
pushf
clc
sub
call
inc
call
pusha
jmp
mov
pushl
pushf
popl
lea
jo
popl
pusha
mov
pusha
lea
jmp
mov
push
mov
push
mov
lea
jmp
call
dec
bt
cmc
call
inc
call
pusha
sub
stc
mov
test
push
cmp
sub
mov
lea
jmp
aad
shr
mov
bsf
jmp
pushl
popl
movb
push
pushf
lea
jmp
