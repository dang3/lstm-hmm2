add
loope
adc
or
movl
or
push
cltd
pop
decl
jmp
lret
ret
inc
add
jmp
in
xor
mov
add
loope
add
sbb
jl
out
jbe
xchg
repz
add
pop
jmp
cmp
loopne
shll
iret
movb
push
dec
pop
paddd
sbb
jmp
adc
and
jecxz
adc
adc
push
xchg
pop
and
sub
or
sub
cmc
movl
push
xchg
pop
sub
rcr
unpcklps
jmp
lock
adc
jmp
push
cli
shl
adc
jmp
inc
shl
xor
pmullw
and
jbe
xor
mulps
and
push
dec
pop
jp
movb
psrad
jmp
sbb
sbbb
jmp
inc
aaa
mov
jno
xchg
movb
sbb
and
jmp
lea
adc
jmp
ret
add
and
sahf
movw
xorps
jmp
sbb
sub
fadds
sub
shl
push
sahf
pop
sub
xor
push
dec
pop
or
add
sbb
js
movl
or
jnp
sub
sbb
jmp
dec
jbe
aaa
loope
and
or
clc
push
inc
pop
movaps
jb
and
movb
sbb
shl
jmp
addl
shr
jge
xor
je
push
xchg
pop
andps
sbb
jmp
cmpl
jne
jmp
pop
jecxz
into
jge
arpl
and
and
movb
push
sahf
pop
rcl
add
add
cmpl
jne
sbb
push
ret
add
add
inc
cli
inc
data16
mov
or
and
push
push
std
mov
mov
movsb
ret
mov
pop
add
pop
add
in
mov
int3
dec
sahf
pushf
movsb
adc
loope
mov
in
fsubl
jbe
mov
lods
dec
dec
xor
sahf
inc
cld
fmuls
or
lahf
popf
pushf
movsb
lods
dec
sbb
add
pop
xchg
jnp
in
popa
cmp
std
mov
adc
sub
lcall
mov
xchg
lea
pop
call
rcrl
repnz
cmpsl
std
mov
leave
fcompl
inc
mov
mov
popf
movsb
mov
fsubl
mov
mov
mov
adc
leave
fmull
fsubl
fnstenv
decb
fcoml
mov
int3
std
mov
mov
pop
push
pop
jl
cld
mov
mov
movsb
inc
mov
in
jp
add
mov
call
cmc
clc
lods
jle
cld
das
sub
pop
mov
fcomp
test
inc
push
cltd
pop
mov
mov
mov
jbe
pop
add
pop
ror
movsb
std
mov
jle
jmp
or
jbe
mov
std
leave
fmul
add
das
cmp
sbb
jbe
fildll
add
lods
jbe
pop
lods
add
das
or
jbe
mov
xchg
mov
movsb
std
fisttpl
rcrb
std
add
pop
xchg
fsubl
leave
shlb
cmp
rol
scas
or
mov
fbstp
sub
movsb
std
mov
icebp
add
scas
or
hlt
jbe
mov
movsb
jbe
shrb
mov
sbb
sbb
sbb
sbb
sbb
add
lock
push
push
jbe
mov
sub
fcoms
sti
or
pop
std
mov
cli
stos
fcoms
jbe
mov
in
mov
lcall
mov
stos
jle
hlt
lcall
clc
lods
push
push
loop
subl
pop
roll
cmpsl
cmp
lods
jle
fsubrl
std
mov
das
movsb
test
icebp
mov
cmpsl
and
pop
sub
pop
fs
push
jl
lock
movsb
mov
push
cmc
in
mov
repz
fistps
mov
shlb
mov
movsb
std
mov
lods
and
mov
cmp
add
daa
cmp
pop
shl
lods
and
mov
cmp
pop
xchg
js
test
je
pop
data16
bound
jle
enter
jp
push
insb
jle
loopne
std
mov
movsb
decb
pusha
loope
pop
pusha
stc
add
movsb
decb
je
dec
fsubl
mov
jbe
fsubrs
xchg
fsubl
or
je
push
aam
add
fsts
stc
ret
add
adcb
aam
std
mov
xchg
xor
in
fidivs
std
mov
sub
xchg
inc
lret
in
fidivs
std
mov
sub
xchg
pop
lret
in
fidivs
std
mov
sub
lods
loope
mov
mov
movsb
je
pop
stc
fnstenv
inc
mov
movsb
jbe
mov
ljmp
movsb
std
add
daa
cmp
scas
lret
out
xchg
shr
mov
std
fbstp
enter
sar
mov
mov
mov
lret
sahf
mov
int
sti
mov
jecxz
std
mov
xchg
ljmp
mov
mov
cltd
in
movsb
mov
mov
nop
call
stos
jmp
fidivrl
lret
test
loopne
jmp
ret
scas
std
scas
int
out
popf
movsb
mov
rcrl
out
mov
nop
call
mov
xchg
ljmp
std
mov
movsb
std
mov
movsb
std
mov
mov
mov
push
mov
imul
add
cmc
mov
and
add
inc
add
add
sub
add
add
add
add
add
add
push
shlb
incb
lahf
mov
add
push
xchg
lods
mov
add
testl
mov
mov
or
nop
xchg
push
in
mov
xchg
aad
fists
jno
add
add
add
add
and
mov
inc
lock
mov
and
push
sbbw
rol
rcr
int3
ds
into
test
jl
adc
add
jns
adc
lock
push
or
rclb
jns
xor
push
mov
js
jge
pushf
jge
test
add
add
add
mov
add
sbb
sbb
aaa
and
bound
add
add
add
add
sarb
add
sub
stc
add
add
add
cmpsl
add
mov
add
add
or
add
add
pusha
add
inc
add
das
add
add
add
add
add
mov
add
add
add
add
add
add
or
dec
add
xchg
dec
add
add
add
outsb
and
and
aaa
add
pop
add
add
mov
add
add
push
dec
andl
mov
stc
mov
add
or
or
add
xor
add
inc
or
add
xor
add
or
add
add
lret
call
call
hlt
xchg
jno
rolb
add
add
fstpl
push
lea
add
xor
inc
movsl
xchg
mov
xchg
pop
inc
lds
test
mov
fldcw
outsb
sahf
shlb
movsb
add
clc
rol
ljmp
add
shll
pop
cld
dec
add
ds
mov
cmc
and
add
lcall
xor
and
jne
icebp
test
popa
test
dec
inc
mov
sbb
dec
ss
and
pop
xchg
jne
stc
cmp
xor
sub
into
test
loop
xor
jae
test
aas
sub
bound
shlb
push
inc
dec
loop
sahf
jne
test
dec
mov
idivl
dec
lret
pop
dec
es
hlt
xor
ljmp
mov
cmpsl
aaa
push
or
jns
jo
cmp
sbb
rcrb
jecxz
cltd
imul
test
movsb
in
icebp
pop
ret
lcall
jne
xor
shr
mov
mov
mov
xchg
sti
insl
std
cmp
es
sub
std
sarl
jg
cmp
sub
jns
push
lcall
stos
sub
add
push
cld
push
out
mov
jmp
data16
inc
push
orl
lea
push
and
ja
iret
dec
leave
insb
es
lahf
icebp
mov
mov
daa
mov
out
mov
test
shrb
mov
xchg
jle
cmp
pop
pop
inc
xor
insb
nop
xchg
test
and
in
push
mov
test
imul
fsubr
fwait
dec
gs
mov
divl
jge
pop
sub
cmc
xchg
pop
or
popf
push
dec
dec
jae
pop
pop
call
push
push
es
dec
lods
cmp
repnz
cmpsb
out
ds
inc
xchg
mov
test
xchg
aam
push
les
xor
inc
push
dec
lods
or
push
rcr
jmp
jb
mov
pushf
xor
rcl
pop
or
or
clc
repz
aas
and
or
es
sub
and
push
das
sub
push
call
inc
loop
mov
lret
xchg
sub
mov
out
sbb
jg
jo,pn
sub
and
ret
sbb
sub
or
jns
inc
xor
arpl
lahf
jb
in
insb
or
add
loopne
and
out
sub
xor
das
sub
lea
int3
in
cs
loopne
out
fidivs
outsl
and
dec
and
lock
or
cwtl
scas
mov
enter
dec
jo
fisubrs
xchg
cmpl
scas
shr
pop
cld
jns
rorl
or
outsb
xchg
and
call
cmp
lods
shl
jp
xchg
dec
aad
pop
pop
xor
xchg
out
stc
jbe
dec
jb
add
pop
bound
clc
aas
pusha
xchg
sub
push
jge
inc
repnz
mov
push
cmp
sub
mov
pop
pop
aaa
adc
mov
arpl
fistpll
test
dec
xchg
pop
pop
dec
clc
dec
mov
pop
add
sub
stos
sbb
jne
ljmp
out
mov
stc
jg
inc
xor
cmpsw
jmp
push
cmpl
inc
add
enter
sbb
sub
mov
sub
jno
cs
pop
add
inc
aas
das
test
sbbl
dec
mov
inc
push
mov
loopne
daa
js
daa
cmp
negl
leave
out
dec
out
subb
pop
shr
push
std
sub
mov
lea
bound
jecxz
or
sahf
mov
lock
int
lods
add
shlb
and
pop
and
inc
mov
je
jecxz
mov
mov
add
aam
mov
hlt
hlt
fdivrl
or
test
sub
inc
sub
lds
push
mov
bound
inc
pusha
xchg
sarl
lcall
test
mov
insb
adc
and
cmc
inc
bound
notb
cmp
mov
push
inc
mov
dec
gs
xchg
clc
inc
and
das
mov
cmpsl
add
xchg
sub
push
sbb
xchg
sbb
jle
ret
xchg
dec
mov
jae
adc
neg
shll
mov
and
cmpsl
shr
repnz
dec
and
lcall
repnz
mov
in
push
jp
mov
dec
lea
inc
bound
jnp
scas
sub
ss
mov
jb
and
mov
and
push
add
xor
sbb
push
mov
in
mov
push
jmp
pop
sti
fstpt
sbb
sahf
jl
push
fiaddl
and
ljmp
xor
add
push
leave
pop
mov
mov
sahf
shll
std
xchg
mov
pop
jle
mov
fiadds
push
out
mov
aas
out
icebp
sbb
mov
dec
std
pop
mov
std
sub
mov
sub
sbb
call
insl
pop
sbbl
insl
add
fcoms
inc
cmpl
mov
cmpsb
or
mov
rcrb
outsb
fimuls
mov
and
adc
icebp
push
repz
pop
imul
mov
push
loopne
rorb
mov
rorl
shlb
and
cmp
lea
jg
jbe
mov
and
ljmp
mov
neg
jg
mov
xor
mov
adc
adc
sti
pusha
mov
rorb
movsb
pop
mov
pushf
jmp
xchg
fiadds
jbe
push
mov
mov
popf
sbb
xor
cmpsl
jecxz
cmp
or
ror
repnz
mov
jnp
fldenv
ss
and
movsl
xchg
les
push
sbb
cmp
xor
out
scas
popf
into
fucomi
sub
inc
shlb
jle
inc
mov
leave
sti
jl
mov
lock
or
jmp
sub
daa
adc
sarl
aam
xor
ss
add
sbb
and
lea
pushf
sarb
in
mov
dec
pop
out
mov
pop
sub
aam
cmp
push
sub
sahf
les
out
std
adc
lods
orb
loop
xor
adcb
jl
adc
xchg
iret
xor
ss
push
push
insb
mov
jmp
jmp
int
daa
sub
lcall
or
adc
mov
outsb
adc
daa
fs
jo
inc
pusha
cltd
pop
or
jg
adc
rol
mov
gs
repnz
mov
scas
mov
adc
inc
mov
xor
or
mov
sub
push
sbb
lahf
ss
mov
daa
sbb
fld
or
xchg
push
mov
jno
dec
js
icebp
fxch
jb
cwtl
lods
insl
pop
sub
adc
shr
inc
out
dec
cmpsb
dec
mov
mov
pop
xchg
push
lock
mov
out
push
jle
mov
dec
popl
xchg
mov
daa
dec
adcb
or
test
stos
imul
sbb
adc
inc
add
xchg
push
sbb
movsb
push
out
aas
mov
or
sub
fcmovnbe
sub
out
sbb
push
out
mov
xchg
xchg
mov
inc
push
es
std
daa
dec
jp
test
jnp
xchg
xchg
mov
mov
rcrb
xor
jmp
sub
or
mov
sbb
decb
dec
jo
outsb
in
and
and
sarl
dec
lds
sbb
sub
sbb
cmp
repz
push
movsl
cmc
int3
cmp
push
idivl
rcpps
sbb
icebp
mov
push
aas
push
inc
in
xor
out
xor
pop
jmp
imul
popa
shr
sarb
lahf
jg
adcl
rcl
adc
sub
nop
xor
pushf
cmp
jecxz
je
mov
mov
in
rclb
adc
shll
enter
xlat
jp
push
sbb
enter
ss
add
mov
jae
scas
xchg
lahf
cmp
gs
inc
rcrl
mov
xchg
xchg
mov
pop
cs
aam
lock
xchg
adc
jne
test
sub
fsubl
pushf
add
inc
cmp
adc
adc
and
sbb
mov
inc
and
add
sbb
jo
pusha
loop
inc
adc
pop
add
adc
mov
pop
out
sub
jae
nop
add
ret
insb
xor
fs
mull
and
xchg
pop
dec
dec
arpl
popf
xor
in
xchg
push
cmp
dec
out
jnp
pop
mov
push
fwait
lcall
arpl
movl
int
sub
xchg
mov
nop
jnp
mov
sti
xor
jmp
stos
mov
jecxz
sahf
push
jb
adc
xor
jmp
xchg
adc
mov
lea
mov
sub
inc
push
dec
dec
js
je
mov
sbb
test
pop
mov
or
jmp
insb
in
movsl
ljmp
pop
leave
outsb
rcrb
mov
das
out
cmp
mov
neg
rclb
xchg
rorb
aam
dec
popa
mov
inc
fs
pop
cli
std
aaa
aas
mov
and
mov
jp
loopne,pn
jne
dec
arpl
inc
xor
or
lds
fwait
pop
jbe
push
out
xchg
scas
pop
jmp
cli
iret
push
pop
adc
pusha
aad
adc
rorb
sub
cmp
adc
dec
test
pop
sub
rcll
enter
in
sbb
roll
fstpl
in
dec
push
pop
or
dec
and
cmpsb
fnstenv
popf
lcall
lods
xchg
cmp
mov
out
adc
push
push
cmpl
jno
push
sbb
jmp
test
sbb
add
mov
notl
adc
cwtl
jae,pn
call
and
das
cmp
ds
mov
jbe
repz
adc
xchg
sub
lods
lret
jbe
imul
add
cltd
push
mov
or
jmp
adc
aad
sahf
jge
fsub
dec
ljmp
ljmp
push
push
popa
push
cli
cmp
out
sahf
jmp
mov
adc
xchg
into
imul
fwait
sub
adc
shll
mov
imul
push
stos
push
lods
repnz
sbb
std
fildl
add
pop
sbb
lea
xchg
stos
mov
rorb
cltd
mov
add
roll
pop
and
mov
out
mov
rorl
jno
movsl
and
add
lock
sti
push
sub
mov
out
xchg
data16
and
mov
mov
sbb
jns
xchg
cmp
mov
sub
mov
mov
icebp
jo
insb
out
and
mov
shlb
in
fisttps
cmpps
stc
jbe,pn
mov
mov
dec
mov
gs
cmp
xor
and
cmpsb
and
push
pop
call
adc
int3
es
add
cs
and
stos
lret
and
xor
neg
push
and
scas
sbb
lods
jae
daa
lds
ss
or
sub
mov
das
jo
cmp
scas
dec
loope
add
shll
popa
ja
je
pop
ret
aas
repnz
inc
out
inc
js
bound
cmp
popf
fwait
into
sbb
jle
test
pusha
out
or
lock
or
shlb
add
xchg
hlt
cmp
mov
ficoml
push
fs
mov
call
cmp
mov
leave
movsb
in
aam
outsb
rolb
lods
push
outsl
fcomip
inc
adc
dec
xchg
sub
mov
cmp
ret
dec
mov
xor
fucomp
dec
jmp
xlat
inc
sub
push
imull
xchg
push
int3
lock
sarl
int
mov
scas
lcall
pop
adc
xchg
and
icebp
mov
xchg
xor
mul
xchg
mov
xor
out
jle
sar
icebp
fwait
cmpsl
rcrl
sub
into
test
push
xchg
sbb
aas
xchg
bound
sbb
cld
fwait
inc
aaa
arpl
movsl
popf
daa
cwtl
outsl
mov
mov
cmp
fstps
fidivrl
mov
mov
in
sbbb
cmp
nop
jle
cld
repz
xchg
repz
jne
cmp
lret
arpl
imul
cmp
fisttps
ret
and
out
mov
cmpsl
or
fbld
xor
mov
lock
xchg
pop
sbb
mov
stos
std
or
mov
roll
dec
mov
ss
jmp
xor
adc
jns
int
and
mov
mov
sti
ds
mov
and
data16
fcoms
adc
ficoms
mov
scas
out
leave
add
imul
mov
adc
rcrb
mov
fcmovnbe
mov
dec
test
jle
les
mov
sbbb
fidivrs
sub
fmuls
rclb
jns
adc
out
or
jecxz
adc
pop
add
mov
jne
fdivs
dec
gs
xchg
hlt
lock
aad
pop
sbb
xchg
push
popf
notl
mov
mov
ficoms
sub
aas
and
data16
mov
jno
adc
rcl
call
push
cwtl
mov
and
xor
mov
addb
mov
adcb
je
cmc
add
jb
ss
jmp
fdivrs
jo
cmp
mov
push
pop
fistl
pop
jle
into
int
lods
js
cld
cli
inc
ds
xchg
loop
or
and
pop
mov
add
fldt
mov
xchg
xchg
jecxz
push
cwtl
cmp
aad
test
mov
pop
xchg
sub
cmpl
mov
xor
nop
sbb
fucomp
stc
nop
inc
cmp
pop
scas
dec
and
into
cmc
adc
sub
and
pop
addr16
cltd
mov
dec
clc
lahf
cmp
xchg
fsts
push
movsl
sti
es
shlb
mov
and
dec
movsl
jl
mov
cli
notl
pop
fcmovnu
cmp
in
push
jg
dec
cmp
mov
int
imul
inc
cmpsl
pop
jbe
out
pop
push
mov
rcll
divl
xor
sbb
imul
adc
jae
dec
dec
inc
pop
or
push
aad
sub
data16
xchg
push
xchg
xor
inc
loopne
outsl
mov
repz
xchg
sti
pop
push
mov
cmp
and
shll
ret
sub
push
hlt
inc
das
mov
call
std
cmpsb
sub
mov
dec
add
int
cltd
rolb
cs
sbb
sbb
test
sbb
adcb
test
std
xchg
jecxz
inc
lds
lcall
sub
in
icebp
iret
xor
loope
push
push
lods
sub
sbb
mov
dec
push
movsl
cld
xchg
movsb
xor
dec
mov
movsl
out
fistl
or
stos
loopne
ret
lods
mov
sbb
addr16
out
dec
lcall
pop
push
push
test
js
mov
popa
dec
and
imul
cmp
push
mov
jle
je
or
sbb
outsb
fucomip
sti
mov
dec
cmp
lods
addl
fnstcw
in
sub
jecxz
push
mov
jmp
push
xor
mov
scas
cld
pop
out
imulb
cltd
cwtl
inc
jg
pop
fimull
stos
out
lea
push
aaa
jne
nop
and
dec
add
sub
cmovge
addb
roll
in
and
dec
jle
test
lahf
xchg
cld
test
cltd
and
mov
fiadds
or
dec
cmp
xor
mov
mov
cmp
mov
sub
push
pop
add
mov
sbb
lcall
lods
shll
or
add
pop
mov
out
mov
fists
cmp
pop
mov
xlat
mov
dec
xorb
int3
test
aad
test
sub
add
pop
insl
adc
lahf
in
xor
test
push
push
mov
insb
dec
out
jno
xor
xchg
cwtl
and
sbb
dec
inc
adc
out
sbb
jae
je
jp
mov
arpl
mull
and
push
jge
xchg
or
popf
movd
and
mov
inc
mov
sbb
mov
sti
and
fldt
adc
mov
inc
xor
and
xor
xchg
pop
mov
xchg
pop
dec
inc
push
and
mov
xchg
push
mov
cwtl
sti
insl
sbb
lds
lcall
jbe
addb
inc
rcrl
in
adc
mov
xchg
out
xchg
add
jg
sbb
outsb
int
lea
out
xor
mov
int3
dec
dec
push
fdivl
fwait
mov
lret
clc
idivb
and
loop
rcl
pop
icebp
pushf
mov
adc
outsb
adc
rolb
loop
xchg
dec
sbb
jl
push
pusha
ret
es
xlat
jp
and
xor
test
imul
lahf
dec
lods
shrl
jp
mov
cmp
xchg
fsts
and
aas
adcb
mov
cmp
sti
xorb
insl
sbb
cs
rcrb
leave
shr
dec
enter
das
and
ud1
inc
sub
js
into
push
cmp
mov
pop
pop
dec
iret
lahf
push
or
mov
jmp
call
in
pop
push
jecxz
sbb
xchg
jb
mov
adc
mov
xchg
pushf
cmp
sub
pop
into
sbb
jne
arpl
and
test
push
clc
or
mov
or
rcrb
xlat
cmp
mov
adc
cmpsb
adc
push
aad
push
cmp
fsubs
jp
adc
loopne
add
adc
adc
rcrl
insb
dec
adc
dec
inc
loope
cli
sbb
ja
jno
in
das
mov
dec
or
in
dec
or
inc
stos
xor
dec
mov
jle
pop
push
mov
nop
andl
pop
or
inc
subb
insl
push
sub
inc
mov
enter
dec
push
pushf
jne
out
mov
push
sbb
sub
repz
aaa
xchg
insl
sbb
out
sti
scas
dec
iret
sbb
mov
sbb
jecxz
je
mov
mov
jg
lock
pop
push
sbb
je
mov
mul
push
xor
xchg
cmpsb
lods
mov
mov
out
ficoms
adc
loopne
xchg
mov
ret
sbb
or
jb
dec
mov
lods
out
dec
cmp
into
cmpsl
jae
mov
iret
and
or
pop
fildl
add
fnstenv
jl
mov
jnp
xor
pushf
and
pop
fstpl
lods
ljmp
dec
push
push
sbb
dec
and
inc
test
mov
add
ficomps
sbb
push
adc
sti
xor
out
fnstenv
ss
dec
cmp
cmp
pop
adc
stos
xor
loopne
fsubl
stos
test
imul
and
enter
fisttps
xor
cli
lret
and
sub
and
push
pop
mov
ja
sbb
mov
loop
xlat
or
sub
cltd
loopne
or
xlat
mov
lea
mov
hlt
mov
mov
jmp
insb
mov
ficoms
xchg
cmp
pop
xchg
loope
push
xchg
sbb
jl
ljmp
cmpb
push
mov
jmp
or
inc
sbb
sbb
dec
cmc
fildll
insl
jbe
pop
cmpsl
sbb
mov
sbb
mov
add
sbb
jecxz
mov
aam
xor
inc
int3
bound
fisubrl
cmp
andb
aad
mov
out
cmc
fimuls
and
fs
push
xchg
inc
pop
cmpsl
outsb
xor
dec
mov
insb
sbb
adc
and
in
xor
sub
and
hlt
or
and
les
pop
or
and
dec
mov
jmp
stc
in
cmp
add
xadd
adc
cmpsb
mov
add
xor
mov
mov
clc
cmpsb
lret
fyl2x
inc
shrl
stc
push
and
je
fbld
push
imul
out
lahf
mov
add
jmp
outsb
xor
inc
into
pushf
mov
and
inc
dec
femms
das
subb
out
in
in
pusha
in
lea
rcr
mov
pop
push
push
lret
loop
xchg
test
pop
mov
stos
mov
cmpsl
pop
cwtl
ret
jae
push
repnz
pop
mov
pop
pop
std
mov
fisubrl
pusha
fwait
cmp
insl
adc
pop
and
jae
sarb
fst
in
or
pop
xor
movb
push
mov
push
dec
adc
mov
lods
lahf
add
mov
add
mov
popf
sbb
mov
mov
sbb
xchg
sbb
push
int3
pop
cmp
push
jmp
xchg
data16
imul
lcall
rcrb
cmp
mov
orb
xchg
add
movsb
mulb
out
pop
push
or
lret
push
sub
ljmp
mov
lahf
js
cmp
sbb
andl
push
sub
adc
add
cwtl
adc
push
mov
icebp
std
push
ljmp
mov
and
data16
mov
mov
pop
icebp
mov
andl
adc
outsl
sub
iret
gs
adcb
mov
cmp
das
fstl
xchg
aaa
jp
leave
test
push
sarl
mov
aad
mov
mov
mov
cmp
or
dec
mov
ss
mov
test
je
sub
or
cmp
iret
std
add
inc
pop
add
inc
cmp
pop
addr16
push
and
pushf
shll
imul
or
rcrl
jmp
inc
je
lods
push
mov
sti
imul
mov
jnp
rorl
ja
popf
rolb
cmc
incb
push
mov
addb
outsl
mov
xchg
jo
adc
ss
mov
mov
xor
or
in
iret
cld
and
sbb
mov
les
adc
push
testb
fmull
dec
mov
push
xor
xchg
inc
mov
ret
cmpsl
cmpsl
psubd
aas
sbb
adc
mov
ljmp
call
cmpsb
inc
dec
lods
push
pop
mov
jns
fcmovnu
push
push
daa
add
push
or
xchg
pop
pop
mov
or
ljmp
lret
sahf
into
test
xor
les
lods
cwtl
mov
jae,pt
push
adc
out
dec
pop
mov
xchg
or
lods
jg
push
add
clc
xor
fnstenv
and
jb
ret
add
jp
dec
lcall
adc
cmp
mov
shll
inc
cmp
test
push
cmpl
cmp
stos
adc
out
mov
enter
popa
stc
sbb
dec
adc
fstl
push
inc
pop
jmp
sbb
pop
or
rcrb
or
out
stos
sub
xchg
or
test
sarl
pop
icebp
insl
inc
das
pop
shrl
movsb
test
pop
mulw
jg
cmpsb
dec
jp
xchg
nop
mov
in
dec
aas
jle
ficompl
push
jno
adc
dec
iret
movsl
mov
fcoms
insb
rorl
mov
add
mov
les
push
pushf
aam
out
jns
add
jl
rcll
imull
insb
roll
mov
test
pusha
add
dec
mov
pop
inc
sbb
cs
lret
add
jne
and
inc
inc
xchg
ret
fiadds
pop
sub
xchg
dec
leave
pop
or
popf
call
popf
pop
add
adc
xchg
or
lahf
pop
imull
sub
or
jl
loope
cmp
iret
sub
cwtl
ds
pop
xor
push
adc
ret
cmpsl
loop
test
xorl
mov
adc
out
jecxz
mov
cmp
push
jb
mov
mov
cmpsl
stc
push
inc
in
adc
sub
xor
pop
xor
mov
inc
inc
fcomp
xor
ret
mov
lock
inc
aad
mov
push
fadds
mov
jnp
push
mov
add
enter
xor
jg
and
xor
mov
fwait
pop
mov
sbb
xchg
xchg
icebp
sbb
hlt
imul
in
inc
or
inc
pop
ficoml
loop
lea
mov
or
jg
and
sti
sub
fisttpll
scas
sti
jbe
xchg
fsts
add
adc
sub
sub
jo
pop
mov
test
and
aaa
adc
stc
out
xchg
or
sub
push
js
jl
mov
sbb
inc
adc
pusha
push
adc
das
loopne
adc
sbb
in
lcall
psrad
out
push
sub
pop
or
test
lods
mov
sbb
les
insb
insl
lods
mov
jae
cmp
mov
sub
pusha
sbb
pusha
icebp
push
in
out
push
jl
xchg
std
xor
outsl
and
and
mov
mov
xor
out
add
aaa
sbbl
push
pop
imul
insb
addr16
pop
sbb
outsl
jo
test
pop
std
cli
cmp
adc
insl
xchg
mov
mov
or
mov
push
test
into
inc
jns
sbb
jbe
ljmp
mov
addb
test
imul
jne
mov
les
rclb
dec
jge
pop
fwait
push
ljmp
mov
jbe
push
dec
jmp
mov
xor
sub
lds
push
adc
cld
aas
fldcw
pushf
sahf
lret
mov
imul
gs
mov
dec
push
movb
in
mov
stos
xor
movsb
mov
loopne
and
jl
fcmovnbe
dec
pop
cs
int3
fstpl
js
mov
or
add
pop
jbe
and
pop
sar
mov
or
adc
mov
push
mov
cwtl
push
or
cmp
ja
test
dec
sbb
lcall
loopne
imul
out
inc
leave
aaa
dec
hlt
js
dec
pop
inc
jecxz
mov
test
sbb
je
mov
or
push
in
push
mov
xorl
insb
addr16
daa
cmp
dec
and
lahf
aad
js
das
sbb
imul
cmc
in
mov
cmp
pop
dec
push
bound
js
mov
dec
enter
mov
popa
arpl
inc
out
sub
xor
adc
jnp
sub
testb
jecxz
fiadds
testl
lods
je
es
inc
xor
sti
sub
imul
inc
loop
mov
pusha
mov
cmc
jecxz
add
sbbl
jmp
mov
xor
aas
test
dec
pop
outsb
sbb
mov
adc
cmpsl
sbb
fldl
addr16
mov
std
and
sub
pop
or
fcompl
shrl
fmulp
xlat
xor
dec
fsubr
mov
fisubs
adc
mov
add
repz
imul
arpl
pop
cmp
mov
and
je
fcomps
xlat
sub
dec
jmp
push
pushf
add
call
lock
push
outsb
in
fdecstp
dec
jb
sbb
cmc
pushf
mov
cli
arpl
sub
pop
mov
popf
fldt
push
dec
std
mov
adc
int3
add
dec
inc
cli
inc
out
and
sbb
dec
add
insl
pop
inc
lods
je
sub
jo
cmp
dec
shrb
sub
pushl
jecxz
into
and
stos
mov
push
das
pop
jb
lahf
cmp
xchg
mov
test
pop
cmc
push
sbb
sbb
hlt
leave
cmpsl
mov
sub
or
in
sub
rorb
incl
push
ret
jg
mov
jbe
fildll
sbb
shrb
mov
sahf
mov
imul
fsubp
sbb
mov
call
jg
dec
pushf
fwait
bound
pop
cmp
ret
outsb
and
jg
test
mov
cli
xlat
sub
sahf
mov
sbb
loopne
cmpsb
int
jp
outsb
pop
mov
mov
negb
dec
into
add
adcb
add
mov
add
gs
add
mov
mov
and
jne
rcr
mov
jle
repz
dec
lods
jns
cmpsl
movsb
das
cpuid
out
mov
mov
pop
sub
xor
cmp
mov
pop
xor
clc
sbb
sub
inc
jo
stos
in
sbb
add
mov
mov
push
push
imul
lret
lahf
mov
out
aam
xchg
pusha
dec
push
lcall
loop
test
sbb
jo
out
hlt
out
fwait
outsl
or
mov
dec
pop
lock
imul
push
cli
xor
std
dec
dec
test
insl
dec
and
push
inc
cmp
cmpsl
movsb
sub
push
adc
jnp
add
aas
lahf
rclb
add
lock
mov
outsb
mov
add
pusha
leave
sbb
mov
add
or
adc
sub
fiadds
inc
data16
sub
jns
jo
and
pop
xor
push
es
mov
dec
inc
push
and
xchg
lea
push
push
sub
push
stos
xor
test
cld
cmp
mov
nop
push
cmp
dec
xor
pusha
movsb
mov
out
and
aaa
push
aaa
popa
cmp
mov
cmp
inc
pop
adc
lret
sahf
ljmp
mov
jb
ret
pop
xchg
lahf
pop
xor
jb
jg
push
in
mov
push
mov
mov
push
in
cltd
cmpsl
icebp
clc
subb
mov
and
pop
cmp
lret
aam
push
push
add
das
mov
mov
fldcw
cld
mov
jb
loop
mov
dec
and
jg
int3
jmp
ds
xchg
stc
xchg
es
dec
inc
dec
fmull
sub
xchg
mov
test
popa
lcall
cmp
js
mov
inc
mov
test
sub
negl
lods
test
stc
inc
vucomiss
fs
cwtl
in
out
xlat
pop
mov
int3
sbb
push
jle
bound
rol
lret
inc
lret
push
aad
inc
mul
cmp
aad
mov
push
sbb
lods
inc
inc
add
ret
cmp
sbb
cli
cmc
cmp
xchg
sub
adc
cmpb
das
lcall
jp
cmp
fsts
negb
popa
int
stos
mov
push
cmpsb
shll
lea
rolb
cmp
xor
cmpsl
and
sbb
rorb
int3
insb
in
fists
sbb
stc
popa
dec
push
lds
bswap
insl
sbb
and
push
xchg
cmp
jecxz
mov
cmp
xchg
xchg
push
js
pop
addr16
jne
test
cmpb
out
jmp
cli
mov
stos
push
aas
push
mov
inc
enter
jnp
fisttpl
dec
add
fwait
jg
push
add
int3
push
stos
pop
lahf
lods
push
test
push
or
pop
leave
cmp
adc
mov
xchg
loope
mov
sarl
or
jnp
add
jge
test
push
mov
je
ss
or
jmp
das
in
adc
jbe
mov
out
jg
push
mov
outsl
test
out
imul
mov
or
or
call
and
adc
mov
fisubrs
mov
jmp
sbbb
out
dec
call
pop
xor
cmp
pusha
mov
idivl
cwtl
xchg
xchg
int3
in
aam
add
sub
testl
lfs
dec
lods
fcomps
faddp
cmpxchg
push
popa
sti
pop
push
cmp
loope
jge
mov
test
pusha
add
xor
pop
aaa
xchg
pop
dec
mov
rolb
mov
inc
lret
cld
and
mov
outsb
sub
xor
shl
clc
add
mov
fidivs
or
fldl
cli
jbe
xchg
lcall
scas
ret
mov
out
inc
dec
mov
lds
outsb
mov
xchg
push
sti
xor
cmpsb
adc
add
out
inc
or
call
addr16
in
outsb
and
incl
pushf
sti
je
fisttpll
ljmp
jne
ret
repnz
push
movl
iret
cld
xchg
nop
stos
test
dec
dec
cmpb
mov
mov
cltd
cmc
dec
mov
pop
sbb
test
cmp
jno
adc
mov
push
mov
shlb
loop
push
xor
pcmpgtw
movd
call
adc
xor
dec
push
test
jae
xchg
mov
and
pop
mov
xchg
cld
pop
insl
in
rorl
aas
imul
pusha
roll
pop
inc
into
and
fnsave
xor
repz
xor
shlb
xchg
sarl
sarl
ja
mov
daa
mov
loopne
aas
rorl
sbb
push
push
cli
fsubrs
mov
mov
ficoml
loopne
ds
popa
cmp
ds
lds
rclb
cmp
lret
dec
std
in
dec
cli
add
leave
add
fwait
cld
stos
pop
mov
xor
xchg
xchg
int
or
test
jo
nop
cltd
sti
dec
cmp
xchg
push
fisttpl
enter
or
int3
pop
jo
call
sub
popa
mov
addr16
and
xor
mov
jmp
rcr
imul
movsb
repnz
mov
sub
loop
mov
aam
xchg
imul
jne
mov
jle
icebp
add
loopne
adc
nop
arpl
in
pop
fnsave
add
iret
jge
add
sub
shlb
stos
scas
ja
xor
add
cmp
lds
mov
clc
test
mov
call
addb
aam
ficompl
lods
clc
add
into
test
cmp
out
sbb
lahf
popa
repnz
insb
mull
shl
mov
arpl
jno
or
xchg
enter
scas
insl
jnp
add
ljmp
lahf
jnp
pop
lret
out
dec
lods
jecxz
lahf
mull
icebp
cwtl
adc
sub
xorl
out
xor
rcll
mov
push
xchg
xchg
loop
pop
ljmp
push
insb
inc
in
outsl
dec
xor
push
lock
xor
dec
push
jmp
aad
cwtl
pop
lds
inc
add
sub
ret
xor
insl
add
jge
push
inc
xor
inc
stc
cld
add
cs
jle
cli
jg
sarb
and
jg
mov
test
xor
mov
ja
jno
jmp
std
lea
das
jecxz
sti
fistl
pop
pushf
lods
inc
mov
mov
lods
arpl
mov
stos
bound
cmp
sbb
jae
popa
into
add
jmp
push
outsl
arpl
enter
mov
xor
jb
mov
mov
push
inc
mov
outsl
popf
lcall
adc
or
mov
jg
cmpsb
xor
and
mov
xchg
inc
lret
xchg
ficoms
pop
cld
pop
push
jecxz
fs
xor
stos
addr16
mov
adc
xchg
pop
in
cmp
andb
sbb
jl
fdivs
cmp
ss
das
xor
mov
mov
add
fisubs
sbb
or
push
jge
pop
outsb
mov
fnsave
pop
fisttpl
dec
mov
inc
inc
xor
ja
cwtl
and
fstpl
test
push
adc
lahf
jp
ja
bound
sub
movsb
xor
cmp
pusha
mov
sub
mov
xchg
mov
sub
sub
inc
xlat
jno
pop
fcmovnb
lock
repz
sub
pop
testl
mov
push
jmp
popf
adc
xchg
outsb
mov
mov
push
mov
cmpsb
idivl
or
mov
test
add
pop
inc
cli
xchg
incb
push
out
lods
push
inc
cmpb
push
out
mov
adc
shll
stos
sbb
xchg
mov
clc
sub
xor
jl
rolb
sbb
pop
rcrb
push
ss
rolb
mov
call
loop
or
repz
xchg
ja
mov
push
stos
xor
add
gs
stos
in
leave
insl
push
fs
das
or
insb
shll
sbb
pop
sub
and
adc
scas
mov
jbe
jae
push
lahf
and
or
test
movsb
xor
mov
call
int3
jg
iret
xchg
xchg
loope
pop
cmpsb
sbb
mov
bound
pop
cmp
out
andb
dec
push
push
mov
popa
mov
test
in
rorl
into
pop
adc
sub
gs
add
mov
sti
in
insb
shrb
out
data16
adc
xchg
adc
push
xor
loopne
popf
aam
test
push
dec
inc
fnsetpm(287
je
add
xor
mov
data16
je
cmp
adc
pop
cmp
sub
mov
dec
push
call
in
pop
stos
cmc
or
call
xor
sub
ljmp
or
push
nop
lods
insb
jg
sub
dec
testl
insb
mov
cmpb
jbe
leave
or
xor
cli
fisubrs
pushf
and
inc
in
lret
iret
dec
pop
mov
jno
push
inc
fwait
iretw
lods
sbb
cmp
popa
sti
and
fwait
mov
decl
add
inc
cmc
cli
and
sub
jb
outsb
repnz
out
lret
aas
outsl
int3
xchg
adc
inc
loop
ja
loopne
cli
sub
fdivs
mov
inc
es
xor
push
mov
push
adc
pop
insb
xor
fcompp
mov
sbb
je
cmp
xchg
sbb
mov
push
mov
cmp
insl
xchg
sub
jns
jae
xchg
jbe
popa
test
xor
add
dec
push
xchg
pop
arpl
jb
popa
xor
clc
mov
jp
ljmp
jmp
jae
push
popf
sbb
pop
pushf
adc
mov
fwait
mov
mov
ss
mov
jbe
push
fadds
scas
sahf
mov
push
repz
mov
imul
mov
hlt
lds
scas
mov
pop
jnp
add
pop
xchg
loopew
jg
adc
dec
adc
scas
outsl
xor
xchg
fdiv
js
inc
mov
sahf
mov
mov
aad
mov
mov
add
inc
inc
nop
adc
pop
lret
jae
sti
jns
sbb
pop
inc
push
inc
mov
mov
add
add
xor
fistpl
sbbb
testl
jno
int3
les
lcall
mov
cmp
in
push
cld
mov
lahf
jmp
inc
mov
test
scas
arpl
pop
shll
dec
hlt
dec
pushf
push
cmpsl
xor
cmovnp
mov
jmp
mov
sbb
nop
pop
repnz
and
pop
push
aas
xchg
outsb
xor
xchg
in
mov
cli
jp
lds
movsl
inc
xorl
pusha
imul
cmpsl
scas
ljmp
jnp
mov
cld
xor
inc
cs
lcall
fists
dec
push
jge
add
sahf
pop
orb
into
stos
add
lock
and
dec
test
xlat
sbb
ljmp
inc
rcll
push
and
xor
inc
cltd
xchg
jno
push
icebp
push
stos
outsb
dec
xor
cltd
jmp
insb
popa
jg
mov
shlb
aaa
mov
pop
jge
mov
jle
cwtl
in
dec
xchg
je
dec
add
push
push
movsl
mov
insb
xlat
fisubs
fnstcw
aaa
std
add
popa
xchg
jb
push
adc
test
sbb
pushf
adc
mov
mov
lods
loopne
mov
outsl
cmpsb
xchg
pop
out
push
push
test
dec
sbb
mov
mov
aam
imul
out
test
flds
jbe
std
ret
and
sbb
jbe
mov
dec
mov
shlb
insl
loopne
jmp
or
pop
push
out
fdivrp
movsb
xchg
rcll
inc
cmp
jmp
rcrl
in
mov
pop
dec
dec
cmp
outsl
data16
pop
mov
jmp
sbb
ja
push
fistl
das
jg
enter
push
jo
sbb
cwtl
je
aaa
hlt
paddb
movsb
ds
mov
dec
das
fadds
fldt
sbb
loop,pn
out
movsb
rolb
sbb
add
or
jbe
rcll
jne
xlat
shrb
dec
repnz
loope
rcrb
mov
test
addr16
and
mov
inc
pushf
daa
int
gs
fwait
int3
jb
add
add
and
cmpsl
ret
pop
sarl
pusha
cwtl
jae
dec
pusha
add
andb
xchg
dec
mov
push
xor
dec
mov
int
xor
and
xchg
fbstp
push
movsl
ret
xchg
xchg
mov
push
cltd
test
lock
insl
in
xchg
imul
jns
pop
mov
cmc
cli
push
hlt
leave
cmp
xchg
and
push
mov
aam
imul
shll
stc
rorl
mov
nop
xchg
adc
mov
mov
rolb
xorl
cmc
sbb
jne
outsb
imul
xor
cmp
xor
scas
inc
xchg
push
daa
sbb
sub
mov
mov
rdmsr
push
cltd
push
aas
dec
push
xchg
stos
fs
incl
mov
inc
or
jg
xchg
adc
and
mov
int3
xchg
ss
aam
push
sbb
sbbb
jo
int3
popa
lahf
dec
enter
xor
push
xor
data16
inc
xor
sub
gs
aam
ljmp
and
inc
push
in
loope
gs
adc
test
jle
adc
out
and
mov
sti
xchg
loopne
ja
inc
mov
pop
cltd
mov
cli
aam
mov
xor
push
aad
das
bt
fsubrs
addb
or
mull
pop
scas
cmp
mov
lahf
test
xor
pop
adc
and
push
xor
jecxz
mov
xor
sub
fmulp
pop
jmp
test
pushf
js
int
push
fcmovu
xlat
out
cmpsb
add
push
lock
test
mov
cmp
enter
and
sbb
fcomip
and
mov
inc
push
fwait
mov
mov
mov
or
push
in
int3
inc
adcl
arpl
mov
int
fnstenv
and
ficoml
jno
jb
xchg
popf
pop
mov
shrl
cwtl
pop
or
xor
lods
hlt
lret
sar
fists
or
and
fcmove
jl
cmp
jecxz
mov
push
cltd
xchg
sub
imul
divl
or
jle
push
xlat
cwtl
xor
pop
scas
cmp
cmpps
popa
jnp
add
inc
aad
scas
jge
lret
mov
push
xorl
movsl
movsb
sub
loop
cld
push
subb
sbb
mov
movsl
dec
test
ds
mov
jnp
arpl
cmpsb
loopne
mov
inc
popf
push
push
sbb
add
add
fidivrl
mov
int
mov
xchg
int
xor
add
mov
movb
xor
lcall
inc
fwait
sub
mov
outsl
dec
sub
ss
icebp
pop
sarb
xor
inc
popa
addr16
xor
lods
testl
fsubrs
shr
ds
dec
into
jl
cmp
int
and
jecxz
jnp
xchg
fwait
nop
fidivs
insb
imul
and
nop
xorb
dec
sub
fistpl
scas
cmp
lret
movsb
out
repnz
adc
mov
icebp
dec
aad
and
fdivl
dec
fscale
pop
movsb
sub
and
cmp
arpl
ss
fdivrl
test
dec
test
sub
ret
sub
cmpsl
out
imul
cmpsb
loopne
adc
repz
xorl
mov
mov
subb
dec
adc
and
cltd
sub
clc
mov
insl
xchg
addr16
mov
out
xor
lcall
je
mov
lret
jmp
sbb
fdivrs
pop
test
and
hlt
sbb
sbbb
sbb
arpl
and
pop
and
clc
int
das
cmpsb
insl
es
cmp
fldl
bound
adc
testl
sahf
nop
sahf
jo
cwtl
dec
stos
leave
cmp
in
and
xchg
inc
test
xor
sbb
in
js
ret
mov
in
cmc
fstpt
mov
dec
push
js
fmul
pusha
cmp
lea
fsubs
ss
fdivrl
jae
aam
dec
mov
lods
jp
and
sub
mov
fdivp
shll
pop
arpl
push
adc
sub
push
push
mov
out
int
clc
icebp
insl
xchg
mov
mov
popf
sub
insl
fidivrs
je
cmpsl
pop
sub
inc
push
add
in
aaa
xchg
popf
scas
push
mov
sarl
cld
popa
jo
aaa
or
jg
sbb
xchg
xchg
adc
push
int
pop
test
lret
out
xchg
mov
cmp
sar
mov
rclb
data16
mov
xchg
test
xchg
inc
xor
scas
sarb
test
fiadds
add
mov
lahf
or
pop
in
dec
loopne
sub
mov
aas
jmp
inc
inc
xchg
sbb
inc
addr16
sub
dec
xor
stos
cmp
push
cltd
enter
icebp
je
pushf
adc
cli
shlb
cwtl
jp
loopne
bound
popf
push
sub
test
sbb
lock
sbb
pushf
shl
push
inc
iret
inc
stos
inc
add
aam
ficoml
jge
in
rcrb
lcall
test
jmp
mov
mov
subb
daa
sub
mov
push
xlat
rolb
pop
enter
dec
sub
mov
mov
test
ds
inc
xor
jmp
imul
insb
fisttpll
ret
pop
inc
stos
dec
stc
rol
fwait
lock
call
xchg
inc
xchg
mov
fstpl
popa
cltd
pusha
orl
xchg
fstl
scas
cmpl
cmp
push
ds
and
fisubrl
icebp
push
int3
jge
sbb
jns
mov
fmull
popf
gs
ficoms
out
sub
inc
sbb
and
stos
dec
mov
in
sahf
popa
inc
push
lea
fst
and
adc
mov
std
cmp
orb
sbb
nop
mov
aad
add
push
lcall
mov
and
aad
out
mov
subb
jecxz
push
into
fdiv
in
sahf
out
mov
inc
jno
inc
push
jmp
lock
repnz
mov
add
mov
inc
xor
jp
mov
and
je
mov
lret
arpl
dec
and
cmpsl
call
stos
lods
and
dec
or
out
sbb
xor
mov
movsl
push
insl
fstpt
push
inc
add
cmp
mov
bound
stc
sub
jno
dec
lods
sbb
mov
dec
push
mov
jp
and
mov
shll
mov
or
ret
or
hlt
inc
call
std
adc
lds
test
sub
dec
jb
or
jge
mov
cmp
call
insb
push
gs
pop
fcompl
in
push
mov
leave
loopne
lock
sbb
in
jmp
lods
or
std
dec
dec
mov
adc
in
bound
ficoms
push
push
jl
push
add
test
stos
mov
outsb
xor
inc
arpl
mov
roll
lods
push
or
decl
add
orb
jp
inc
adc
or
and
in
mov
hlt
push
jo
push
jbe
inc
fsubs
int
xor
fsubr
out
or
movsl
or
inc
rcrl
sbb
jecxz,pt
push
xchg
sub
stos
out
ret
in
icebp
jae
mov
adc
and
insl
mov
mov
xor
and
push
movsl
test
rolb
subb
jecxz
add
or
or
mov
or
aad
pushf
adc
dec
mov
jno
add
dec
movsl
inc
leave
ds
adc
push
sti
mov
repnz
add
movsb
ds
ret
aaa
mov
ja
mov
mov
cmp
cwtl
outsb
jge
jl
pushf
call
aam
and
mull
cltd
popa
imul
mov
sti
push
adc
arpl
insl
mov
aaa
mov
mov
sub
xchg
jnp
dec
fldenv
xor
testl
daa
and
or
int
mov
push
mov
cmp
cmp
and
aam
cmp
mov
out
xchg
pop
push
ds
int
inc
fsubrs
mov
mov
jl
icebp
xor
loop
fcoms
hlt
xor
fsubrp
andb
xchg
stos
test
mov
mov
jae
add
cmpsb
pop
mov
lea
add
jmp
mov
les
out
lds
jne
sbb
rolb
cmc
jno
rorl
inc
push
test
aas
mov
sbb
dec
mov
lcall
xchg
cmc
or
lods
mov
mov
addr16
add
cld
popa
div
dec
jp
sti
js
shlb
dec
mov
je
inc
jns
xchg
mov
adc
movsb
das
mov
push
xchg
popf
cwtl
repz
xchg
movsb
test
andl
or
dec
pop
faddp
or
dec
mov
les
push
insl
js
dec
xchg
out
cmpsb
flds
ret
stos
faddp
push
adc
and
inc
pcmpgtb
inc
popf
push
call
cli
xor
mulb
jae
mov
sar
out
sbb
test
add
lret
aas
sbb
sbb
inc
repnz
aam
jb
loop
xor
mov
leavew
add
xchg
add
jae
mov
inc
pop
dec
sbb
or
jg
lret
adc
mov
hlt
inc
xorl
push
push
loop
out
xor
push
and
loopne
push
jge
mov
es
cmp
mov
and
js
jl
lret
or
sahf
push
cmc
loop
shl
sub
cld
add
sub
xchg
add
outsb
xchg
dec
js
pushf
pop
loop
adc
stos
push
mov
repnz
repz
cmc
push
mov
mov
and
mov
push
xlat
outsl
icebp
mov
push
leave
out
lock
xor
lds
inc
aas
or
push
jle
mov
pop
sbb
mov
dec
lahf
into
jno
lret
out
stos
sbb
pop
mov
inc
mov
mov
lahf
lds
imul
mov
scas
popl
movntps
in
pcmpgtd
pop
in
xchg
into
hlt
push
dec
shlb
js
sahf
jp
xchg
sbb
inc
cli
inc
mov
imul
loop
jo
jp
lods
mov
shll
out
lods
push
add
push
test
cmpsl
jl
negl
jns
adc
outsb
fwait
rolb
sti
stc
hlt
fwait
arpl
inc
in
jno
xchg
xlat
in
js
sbb
push
push
hlt
mov
out
ljmp
repz
jle
adc
dec
push
xchg
iret
les
mov
xor
push
dec
es
ja
jne
adc
fsubl
and
cmpb
cs
jne
push
pop
dec
add
inc
cmp
pop
loope
xchg
push
dec
ljmp
add
loop
push
gs
jle
pop
dec
pusha
mov
sahf
push
dec
and
repz
daa
lcall
xlat
popf
addb
jle
sbb
mov
sbb
rcl
jg
push
add
jno
xchg
sub
pop
movsb
stos
fdivl
push
aas
mov
fstps
sub
jge
pop
cmp
addr16
sub
inc
jns
and
pop
lock
push
mov
mov
jge
das
sbb
jns
jb,pn
inc
mov
jns
cmpsl
cld
icebp
cwtl
nop
call
jb
shl
jno
sbb
jbe
enter
pop
and
loope
mov
sbb
push
pop
popa
ret
cmc
adc
mov
mov
jno
popf
jmp
sbb
cmpsl
imul
movsb
in
cmp
aas
inc
aam
mov
hlt
lock
or
loopne
into
jmp
fisubrs
mov
mov
jns
repnz
cmp
dec
inc
xchg
push
xchg
mov
adc
dec
cmp
mov
in
and
sbb
dec
mov
lret
fucomp
repz
in
push
inc
mov
pop
push
movsl
ret
push
andb
arpl
orl
xor
fisttps
lods
vpaddb
mov
icebp
xor
popf
cwtl
movsl
int3
enter
pop
sahf
push
mov
addr16
iret
int
lock
ret
cmp
outsb
push
adc
sti
xchg
pop
adc
sbb
ds
dec
add
jl
inc
jno
adc
mov
cmpsl
sub
repz
cmp
add
and
loope
andl
hlt
aam
or
jo,pn
mov
stos
out
jmp
rcll
lret
pop
test
ja
fdivl
mov
sahf
pop
mov
ljmp
sub
jmp
inc
aas
xchg
inc
fidivs
addl
push
push
filds
pop
rol
jns
xchg
stos
mov
cmp
les
mov
out
dec
add
loop
js
stos
push
jl
adc
pushf
addb
adc
das
insl
inc
or
movsb
mov
mov
or
roll
mov
jno
test
push
xchg
movsl
aaa
xchg
cmp
adc
sahf
movsb
xor
mov
xor
xor
scas
mov
sbb
jmp
adc
jp
nop
or
xchg
push
stc
xchg
test
jb
into
push
or
xchg
xor
xchg
cld
hlt
cmp
xlat
pop
pop
ret
fs
lds
dec
clc
mov
aas
dec
jbe
ds
pop
imul
test
push
cmpsb
dec
jmp
xor
sub
mov
mov
cwtl
lea
loop
jnp
je
movsb
mov
shlb
dec
mov
adc
inc
lret
jns
xchg
stos
mov
mov
or
xor
add
les
mov
in
pop
or
or
cwtl
sahf
aaa
leave
xchg
cwtl
sbb
mov
jmp
or
pushf
inc
rcl
xchg
sbbl
xor
push
cld
repz
push
dec
je
pop
mov
sbb
gs
xor
jmp
dec
bound
pushf
adc
jns
pop
jp
jmp
hlt
xchg
adc
pop
ja
std
sub
adc
nop
imul
pop
xchg
mov
mov
stc
mov
inc
jmp
loop
inc
lcall
pop
jbe
in
add
mov
sub
hlt
out
jb
cmpsl
sbb
mov
repz
outsb
inc
cli
stc
loop
stc
sub
popa
ret
xor
inc
fs
adc
or
sbb
lret
push
stc
or
jns
popf
sbb
cmpsb
in
pop
pop
shll
mov
bound
nop
jg
mov
lods
xor
push
js
in
into
fwait
push
xor
pop
mov
outsb
cmpsb
sub
and
inc
inc
adc
push
push
testb
pop
dec
in
add
or
roll
pop
mov
push
push
rcrl
xor
divb
cmc
xchg
pushf
stos
rcrl
dec
xchg
sti
push
fs
and
cmp
lcall
sahf
sbb
cmovg
adc
addr16
inc
packssdw
nop
test
cld
fs
int3
add
ss
movsb
mov
mov
fsubrl
xlat
popf
inc
xor
jb
movl
jge
sub
jecxz
imul
cmp
cmp
lds
push
mov
sbb
dec
addl
adc
inc
jg
cmp
dec
xor
fwait
push
scas
dec
out
mov
arpl
inc
ret
shl
or
push
es
sub
in
cwtl
push
pop
inc
test
xchg
aam
pop
lahf
arpl
stc
xchg
pop
decb
roll
stos
inc
mov
jle
sbb
flds
in
ss
rorb
ss
jns
loope
shlb
push
push
popf
jno
stos
add
xchg
jbe
dec
sbb
jmp
lock
movsb
test
mov
sub
xchg
jge
pop
sahf
clc
clc
cmp
inc
and
mov
leave
jne
stos
jl
mov
push
imul
mov
stc
idivb
mov
frstor
dec
ret
xor
xchg
mov
andb
jge
dec
inc
push
lret
ret
imul
in
mov
mov
adc
int
shr
mov
out
mov
adc
nop
pusha
cmp
test
sub
pop
nop
pop
call
ljmp
or
mov
fsubrs
add
dec
add
bnd
cli
divl
shlb
mov
test
in
xchg
jl
cltd
popa
arpl
mov
jno
aad
rorb
clc
test
jg
test
xchg
cmovg
mov
mov
idivb
fdivrl
sub
and
mov
sub
jl
ret
sub
negb
cmpsl
push
aas
mov
je
sbb
or
dec
ds
inc
push
xor
imul
mov
push
xor
add
pop
fistps
cmpb
sub
fdiv
xchg
cwtl
stos
out
inc
xbegin
xchg
es
adc
repnz
or
popf
daa
popa
test
add
test
test
pop
push
xchg
xchg
in
and
or
xor
mov
or
jbe
jno
loope
aad
mov
jmp
mov
in
scas
enter
push
in
cwtl
xlat
pop
xchg
push
test
in
mov
pop
mov
mov
into
push
sbb
add
jl
ds
je
daa
dec
hlt
push
imul
inc
dec
add
iret
xchg
js
addl
mov
add
movsb
sbb
lahf
clc
ret
call
and
mov
mov
jecxz
je
add
andl
push
dec
fs
popa
in
stos
adc
mov
xchg
fmuls
scas
outsb
cwtl
lds
shr
cmc
cmp
xchg
sbb
add
mov
xchg
jmp
inc
fistps
sub
jne
jp
cld
jl
dec
mov
cmp
xor
iret
push
sbb
pusha
or
es
push
jmp
and
aam
lahf
pushf
jae
insb
aad
jle
mov
push
sub
adc
jo
cmp
jbe
subl
cmc
push
test
in
icebp
outsb
mov
out
movsb
in
lcall
into
cwtl
adc
jl
sbb
test
mov
daa
mov
mov
push
in
std
aas
dec
xlat
imul
xchg
push
push
out
sbb
sub
das
dec
sbb
mov
push
idivl
outsl
jbe
mov
xchg
test
loop
fwait
into
mov
push
lock
in
sub
add
pop
or
sahf
ret
repz
lods
mov
jl
sti
cmp
mov
repnz
or
jmp
jnp
xor
pop
pop
in
pop
ret
jns
mov
aad
pop
fcomps
cmp
hlt
les
pop
pop
xorl
aam
stc
clc
jge
repnz
xchg
push
inc
sarl
outsb
push
xchg
jge
mov
iret
inc
cmp
xchg
outsb
movsl
addr16
jno
inc
addb
scas
imul
inc
jae
in
stc
call
movb
inc
in
dec
dec
push
out
test
sbb
xor
loopne
xchg
pop
stos
fbstp
mov
cwtl
je
mov
dec
icebp
cld
aas
insl
cmp
push
imul
push
pop
adc
dec
into
mov
ret
push
int3
sti
in
enter
lea
repnz
jle
jb
loope
mov
push
jbe
in
aam
jmp
movsb
insl
add
mov
dec
push
pop
xchg
push
xchg
cmp
inc
inc
pop
testl
cmp
mov
sti
lods
aas
aas
jg
inc
fiaddl
dec
fsubs
mov
pop
dec
lds
scas
sti
mov
and
inc
cmpsb
into
fcomi
pop
ret
shlb
sti
addl
loope
push
xchg
data16
cmp
shlb
cmp
dec
test
mov
pop
in
pushf
xor
clc
cmpsl
sub
dec
cmp
fsubrl
jmp
inc
mov
jecxz
mov
push
jecxz
pop
jo
clc
jp
jmp
fnsave
adcl
in
inc
test
imul
adc
icebp
adc
cli
and
frndint
daa
dec
js
mov
push
lret
pop
push
jg
push
out
mov
add
push
jnp
jg
mov
outsl
mov
xor
push
loopne
out
adc
sbb
icebp
rcll
push
insl
idivb
xchg
xchg
jge
mov
and
add
pop
fs
mov
test
shrl
cmpb
mov
xor
daa
cmp
pop
repz
insl
je
inc
div
clc
pushl
dec
shlb
push
xchg
gs
mov
mov
sub
aam
push
sbb
rol
lods
lods
insb
inc
test
sub
bound
inc
ja
or
es
and
sbb
dec
mov
loop
mov
cmp
js
loop
fcoms
cli
stos
add
lret
sahf
iret
insb
in
lahf
push
inc
je
inc
dec
test
cs
xchg
cltd
div
test
aam
mov
popf
inc
fstps
cmp
jmp
mov
mov
jne
or
mov
mov
sbb
lahf
popa
gs
lods
cmp
out
xchg
mov
cli
cmpsl
int
sub
int
push
jno
fsubp
xor
push
or
mov
cmpsb
mov
out
xchg
incb
sbb
into
mov
out
cmp
int3
inc
dec
xor
shlb
repz
adc
dec
mov
push
out
das
lds
inc
xchg
mov
mov
or
sub
push
push
mov
pop
jp
mov
push
pop
pushf
xor
stc
and
insb
fs
aad
inc
push
ficoms
in
dec
inc
gs
cwtl
mov
push
mov
jb
sbb
push
sub
adc
cmpsl
ljmp
and
inc
test
mov
insb
loop
les
sub
sbb
mov
int3
mov
pop
push
mov
mov
add
sahf
in
mov
push
leave
or
mov
movsl
xor
cmp
cltd
adc
lcall
insl
divb
xchg
je
sbb
pop
nop
mov
mov
and
cmp
testb
movb
jp
cmp
pop
mov
push
cld
dec
xchg
loopne
stc
adc
mov
out
add
movsl
jb,pn
pop
mov
das
mov
pop
int3
cmp
or
loope
aaa
shr
stc
xor
jne
dec
push
out
inc
outsb
test
dec
cld
dec
mov
gs
stos
rolb
mov
mov
shrl
aam
mov
sbb
andl
xchg
dec
shlb
test
pop
adc
iret
mov
cs
leave
into
fcoml
out
movsb
jg
ret
mov
subl
push
cwtl
es
mov
mov
pusha
in
outsl
in
mov
mov
and
lea
lock
lret
jns
pop
and
jne
shll
cld
aad
in
mov
mov
xchg
sbb
icebp
adc
out
imul
jb
inc
sti
int3
mov
popa
hlt
and
iret
repz
test
sub
cmp
jmp
xor
popf
xor
mov
lods
xchg
add
pop
aaa
sbb
sub
stos
sahf
sub
sbb
imul
sub
mov
ds
push
loope
mov
loope
test
bound
mov
sbb
mov
xor
sub
dec
pop
xchg
ds
test
jl
mov
pusha
sub
pop
rcll
mov
insl
ret
repz
daa
fldl
dec
je
punpckhbw
mov
jge
in
in
mov
test
xor
add
xor
das
scas
push
movsb
mov
shll
xchg
pop
cs
cmp
stc
add
jb
into
sbb
jns
inc
mov
inc
enter
dec
pushf
cld
lret
movsl
inc
ret
imul
mov
leave
ss
fs
mov
or
dec
cmpb
in
xorl
scas
mov
inc
andnps
mov
stos
sub
push
or
mov
xor
lods
stc
outsb
jecxz
mov
pcmpgtd
push
data16
jns
mov
scas
nop
neg
cmp
clc
inc
push
clc
sub
push
pop
lea
sbb
add
or
pop
clc
mov
xchg
xchg
rcll
mov
pop
in
pop
adc
pusha
push
stc
mov
mov
inc
and
sub
push
lret
divb
jmp
insl
pushf
ret
lret
add
lods
cwtl
out
ficompl
fs
mov
or
ljmp
sub
mov
or
mov
mov
mov
inc
popa
mov
aam
jmp
cmpl
dec
int3
loope
xor
pop
or
fdivs
aam
es
call
imul
mov
lds
mov
jnp
mov
daa
pop
mov
xor
icebp
sti
stos
test
in
or
adc
mov
in
mov
ljmp
fidivl
pop
xchg
xchg
daa
lods
sbb
sub
sahf
mov
int3
or
test
sub
mov
aad
clc
pop
push
xor
sarl
pop
clc
imul
movsl
pop
aad
xor
fsts
and
mov
les
cmp
mov
loopne
adc
mov
stos
movsl
subl
imul
mov
fsubs
fwait
pop
sub
xchg
mov
je
xlat
jb
sbb
or
xchg
ss
test
mov
push
xchg
push
inc
dec
mov
inc
xlat
mov
jns
adc
pop
movl
gs
js
fldt
out
jg
mov
pop
inc
aad
bound
stc
dec
inc
cmp
out
inc
and
xchg
add
bound
xchg
adc
jl
xchg
jl
cmp
leave
push
xchg
repz
jb
and
pop
mov
or
repnz
sbb
iret
jl
adc
fsubrs
imull
xchg
mov
inc
adc
xlat
dec
mov
and
adc
and
shlb
jecxz
dec
pop
cmpsl
into
shr
cmpsl
pop
rcl
mov
or
push
pop
push
mov
and
sub
mov
mov
or
xorb
imul
xchg
pop
call
shrl
stos
packssdw
out
jge
fnstcw
loop
and
sub
nop
sbb
pop
or
fistl
sub
dec
inc
fwait
call
test
sbb
mov
scas
and
cld
scas
jp
ljmp
scas
dec
ds
imul
test
and
add
xor
jl
int3
dec
sub
popa
gs
xchg
cmp
mov
and
or
adc
std
jbe
jns
push
mov
stos
mov
je
mov
and
cmpsl
jmp
xlat
jnp
das
jmp
add
lods
push
addr16
bound
pop
jae
rorl
fst
popf
inc
movaps
sbb
into
or
cmpl
mov
popf
dec
loop
or
in
push
ret
cs
mov
stos
push
out
repnz
ss
in
aam
pop
in
jo
call
mov
jbe
cltd
loop
xor
aaa
arpl
cmp
cmp
cmp
sbb
xor
stos
dec
lret
sbb
daa
pop
adc
mov
and
shlb
call
adc
dec
and
jmp
xchg
cld
dec
enter
je
xor
sub
push
push
mov
push
aad
inc
and
pop
nop
jp
adc
clc
enter
jno
pop
enter
xchg
jge
clc
out
cld
sub
xchg
pop
jae
insb
enter
scas
es
push
into
sbb
popf
fsubrs
push
loop
push
sbb
or
call
ret
and
aas
fcmovb
mov
push
jecxz
or
idivb
imul
jecxz,pn
adc
add
mov
out
sbb
mov
or
lds
push
dec
aaa
scas
xchg
stos
mov
scas
lods
insl
pushf
fldcw
jb
push
test
hlt
add
clc
popf
jo
jnp
mov
cmp
lds
and
inc
push
mov
jae
cwtl
mov
add
cmp
xor
sbb
shlb
lret
ljmp
push
mov
jmp
adc
jne
cmp
jl,pt
cmp
dec
sub
out
fyl2x
xor
push
sbb
sub
jne
or
push
jae
clc
jb
gs
sti
repz
cmp
dec
mov
jecxz
fdivl
int3
mov
adc
add
ja
jo
xchg
les
cmp
pop
mov
pop
jns
push
fisttpll
movsb
sub
push
cmpsb
sub
cmp
imul
adc
push
mov
repnz
stos
jl
or
rcll
jns
inc
push
rclb
icebp
fldt
cs
xor
and
sub
cmp
in
rolb
iret
push
imul
mov
xor
xchg
mov
jecxz
pop
mov
icebp
shr
mov
dec
push
test
mov
jmp
sarb
ds
ror
and
sub
inc
std
inc
xor
sbb
jb
in
cmp
loopne
mov
push
pop
mov
ds
sub
std
pop
icebp
mov
and
orb
mov
sahf
mov
push
and
pop
pop
es
mov
pushf
xor
pop
pop
sbb
cmp
rcll
insl
sbb
xchg
dec
mov
popf
iret
push
mov
dec
cmp
sub
daa
aaa
xchg
in
lret
or
inc
cmpl
xor
fsts
addr16
jno
xor
push
xchg
jo
cmp
jl
cmp
rcrl
fwait
pop
ret
inc
xchg
cmpsb
xchg
mov
push
imul
xor
sub
cmp
mov
in
xchg
xchg
test
cmpsb
xor
adc
dec
mov
dec
in
arpl
xor
jmp
pushl
fsubl
cli
and
stc
xchg
mov
addr16
shlb
out
xchg
mov
jge
pop
mov
pop
aas
popa
and
cmp
test
cltd
mov
jecxz
sbb
cmp
in
lds
push
xchg
pop
inc
cmpsl
idivb
jns
daa
cs
pmuludq
xchg
mov
jmp
push
add
pusha
aad
mov
mov
js
mov
daa
in
push
or
push
es
mov
xchg
je
dec
mov
sbb
pop
sbb
mov
out
cmp
add
lock
icebp
cwtl
movsb
scas
pop
std
xor
fdivrp
cli
push
test
dec
ret
mov
dec
mov
jge
cs
mov
push
dec
lret
std
adc
inc
jp
loopne
repnz
cmp
dec
mov
dec
stc
cmp
pop
fnstsw
leave
dec
decb
jns
or
add
in
movsb
stos
outsb
sub
js
jne
pop
imul
add
xchg
dec
stc
xchg
cmp
daa
mov
mov
mov
ss
divl
pop
pop
push
push
fdivl
dec
imul
pop
test
shl
cmp
and
adcb
loope
fdivr
inc
mov
jbe
mov
ret
add
jns
stos
push
push
mov
popf
dec
mov
mov
fcmovb
in
sbb
push
lock
insl
mov
test
adc
push
imul
out
in
sahf
popf
inc
sub
mov
aam
addl
shlb
mov
cmp
xor
test
inc
in
xchg
leave
movsl
push
sbb
or
mov
xor
fisubl
pop
mov
js
xchg
lcall
sub
fisubrl
out
mov
ljmp
test
cltd
pop
xchg
sub
or
out
call
xor
xchg
cmp
inc
je
pop
jnp
mov
sbb
lret
mov
call
negl
xchg
insb
lcall
pop
daa
int
mov
inc
sahf
cmc
test
add
outsl
test
sub
jge
push
and
cmc
insb
mov
aaa
mov
xchg
sbb
out
icebp
mov
mov
sub
fdivl
add
mov
adc
lods
arpl
out
inc
mov
push
icebp
jp
or
inc
add
leave
jle
mov
cmpsb
pop
test
push
sbbl
pop
mov
inc
js
stos
cmp
pop
cmpsb
dec
fldenv
mov
dec
outsl
insb
xchg
push
adc
adc
mov
stos
mov
fstl
jbe
sbb
sub
jl
pop
xchg
arpl
scas
fcmovne
ret
ds
mov
bound
jnp
repnz
bound
test
shr
pop
push
rol
dec
push
jo
test
jg
sub
xor
or
push
test
stc
mov
inc
loope
cmp
loop
sub
pusha
xor
and
or
sti
shll
out
push
je
xor
sub
mov
invd
jno
dec
mov
bound
fisubl
pop
js
jbe
xor
cmp
or
cmp
adc
popa
xchg
repz
adc
movsl
repz
mov
fisubrl
sbb
sub
pop
pop
andb
int
ljmp
xor
mov
or
jbe
enter
es
jmp
dec
dec
aaa
insb
movsl
enter
lock
xchg
sub
fldt
inc
aaa
iret
add
pop
fdivs
cmpsb
inc
xchg
scas
add
mov
shll
cld
bound
in
xor
jl
mov
jp,pt
clc
int3
xchg
xchg
add
mov
push
adc
mov
fimuls
sbb
mov
repnz
adc
sub
ret
loope
jmp
xchg
cmp
push
inc
or
stos
jns
or
xchg
xchg
xor
or
subl
popa
icebp
je
ljmp
fldcw
dec
hlt
push
mov
sub
ja
xchg
jne
push
xchg
je
hlt
sub
lcall
add
dec
aad
aas
push
pop
je
mov
mov
orb
push
ret
in
fstpl
xchg
in
movsl
push
xchg
mov
daa
cmp
xor
or
jo
sub
fld1
hlt
imul
sbb
adc
cmp
movsl
fstpt
add
cld
pushf
add
xor
pop
fsubrs
mov
pop
xor
pop
cmp
lods
addb
mov
and
jnp
out
push
sub
sbb
mov
cltd
push
fisttps
and
jae
jno
pop
outsl
jnp
add
addl
inc
mov
hlt
jmp
jbe
mov
mov
xchg
arpl
dec
jmp
jo
popf
jg
lock
push
lock
rorl
scas
das
test
test
and
outsb
loopne
xor
es
xchg
dec
mov
mov
inc
push
clc
pop
push
push
outsb
sbb
mov
sub
jbe
fstpt
add
rcrl
outsl
inc
dec
fs
xchg
out
sbb
push
in
je
cmp
aad
xchg
js
mov
sbbl
jns
jnp
movsb
xor
loop
aad
mov
aaa
mov
repz
call
push
cs
bound
mov
mov
nop
cmpsb
fisubrl
or
outsb
mov
xchg
aad
inc
icebp
inc
fcom
mov
ds
fwait
or
add
jmp
inc
aas
sub
cs
xor
imul
in
stos
push
cmpsb
cmp
add
ds
nop
sub
and
aaa
jo
test
rorl
jmp
mov
and
or
push
sbb
pop
rol
jns
mov
dec
mov
lock
jge
mov
jae
push
bound
mov
aas
ret
pop
pop
xchg
jp
jp
pusha
cmpsb
mov
xor
rclb
mov
add
mov
jmp
lahf
cmc
popf
jp
or
stos
jmp
orl
out
in
mov
ljmp
and
inc
adc
fistps
mov
gs
adc
xchg
mov
jbe
rolb
cmp
jle
hlt
sahf
addr16
cmpsb
aam
lds
shlb
pusha
pop
xor
push
jmp
loopne
imul
outsl
icebp
jg
xor
ret
ret
daa
mov
pop
adc
adc
mov
stc
and
or
cmp
dec
mov
sub
jns
mov
fsubl
loopne
push
sub
test
inc
xchg
push
test
sub
push
test
mov
adc
hlt
or
cmpsl
adc
lahf
dec
and
aas
cmp
xchg
push
lahf
xchg
add
add
cmp
pop
adc
jle
aam
daa
add
pop
push
xchg
add
or
repnz
sub
gs
popa
ficoms
xchg
jge
outsb
push
hlt
lds
test
int
daa
push
aad
fmuls
xor
fs
dec
dec
inc
adc
mov
iret
rcll
je
dec
jp
mov
adc
dec
fidivrs
sbb
hlt
sub
fists
pcmpgtb
push
xchg
mov
shll
aad
cwtl
hlt
lret
lcall
adc
sbb
jb
mov
inc
lods
fistl
adc
sub
mov
xor
sub
sahf
movsb
repz
pusha
add
sub
push
fiaddl
mov
stos
out
lcall
lret
and
lret
xchg
leave
fistpll
mov
pusha
jnp
pop
dec
cmp
xchg
sahf
lahf
mov
decl
dec
or
sbb
outsb
pop
xlat
std
push
xor
xchg
jae
fwait
test
fwait
loopew
jbe
cli
or
and
xlat
pop
and
lret
xor
test
mov
int
sub
and
cmpsl
push
fcmovnu
dec
iret
mov
cwtl
lahf
ds
inc
dec
in
jnp
or
icebp
xchg
lcall
mov
xchg
gs
jbe
mov
outsl
jno
xlat
or
push
aam
lahf
sbb
or
and
shr
inc
or
in
dec
mov
rorl
mov
lods
add
adc
cltd
flds
inc
test
add
popf
ja
sub
mov
mov
push
add
out
xor
and
mov
inc
ret
imul
mov
ret
dec
add
pop
repnz
or
ss
sarb
std
nop
mov
mov
inc
mov
les
pop
adc
movsb
pop
push
mov
sub
dec
outsb
mov
adc
sahf
ret
adc
push
out
sub
scas
mov
mov
lods
adc
xchg
mov
int3
ror
in
in
loopne
and
dec
pop
xchg
add
jne
sub
ja
sti
pusha
fisttps
dec
pop
loope
push
js
inc
and
push
repnz
gs
int3
dec
xchg
dec
sub
cltd
dec
mov
mov
sub
mov
cmp
mov
cmp
or
or
clc
cmp
or
leave
or
mov
dec
lea
mov
xor
xor
add
mov
jle
lods
aaa
mov
stos
jmp
enter
push
cmp
dec
sub
inc
dec
adc
sub
jno
mov
push
mov
mov
int
push
mov
mov
repnz
pop
adc
test
sbb
jg
sbb
shlb
sub
jns
add
mov
mov
cwtl
sbb
sahf
incb
data16
js
cmp
in
fldt
call
mov
test
fcoms
dec
inc
ja
mov
inc
mov
sub
outsb
test
sub
insb
les
scas
push
arpl
pop
outsl
jle
pop
xor
cmp
repz
jmp
sbbb
insl
int
sbb
or
push
adc
test
rolb
je
or
xor
xor
in
sti
stos
mov
push
cmp
adc
mov
push
adc
repz
xchg
popa
jl
shlb
stos
jo
push
pop
stc
enter
shr
push
and
push
mov
lods
outsl
inc
cmp
daa
enter
cmc
lods
test
jmp
sti
cmp
loop
scas
popf
add
ret
or
jp
repz
add
dec
ja,pn
scas
outsb
or
jo
push
out
sbb
push
cwtl
mov
insb
inc
mov
mov
hlt
pop
mov
stc
mov
mov
xchg
out
hlt
xchg
xor
test
or
rcll
or
mov
inc
push
cltd
push
hlt
adc
lods
subl
mov
test
outsl
and
dec
mov
mov
sbb
mov
lods
jno
shrb
jo
push
jecxz
stc
push
sub
scas
cwtl
cmp
ret
xor
inc
pusha
fnsave
outsb
mov
push
sub
push
fnstenv
mov
arpl
imul
jne
cmp
cli
cmp
lret
mov
xchg
and
movsl
push
cltd
jbe
push
testb
xchg
fs
xchg
jmp
inc
shrb
outsl
insl
adc
sti
xchg
adc
and
sarb
pop
movl
cmp
mov
dec
shrb
push
mov
push
pop
cmp
and
inc
aam
adc
dec
clc
cmp
test
negl
xchg
popf
cltd
scas
push
push
xchg
pop
fnstenv
mov
out
sub
dec
mov
add
sbb
ucomiss
xor
ret
inc
aaa
data16
push
xchg
xor
fneni(8087
cmp
xor
sbb
sarl
mov
pop
inc
imulb
jp
and
iret
jmp
sbb
push
mov
fistps
pusha
fisubrl
popa
add
dec
xor
mov
add
and
mov
inc
mov
jb
mov
mov
xor
cmp
sbb
lar
mov
xlat
in
push
or
roll
mov
push
mov
pop
daa
popa
gs
or
dec
xor
ja
push
sbb
xor
xchg
fisubl
push
push
imul
hlt
adc
adc
add
mov
mov
cmpsl
movb
cmp
push
inc
mov
lcall
adc
fstpt
jmp
pop
cmp
xchg
push
add
and
test
dec
gs
lret
add
test
mov
push
scas
mov
dec
mov
iret
pop
inc
pop
mov
fildll
addb
daa
sbb
and
test
xor
pop
dec
add
xchg
leave
mov
adc
mov
fs
sbb
cmpsl
sti
loop
pop
in
divb
and
das
mov
xchg
lock
or
push
nop
sahf
arpl
add
aad
and
int3
cwtl
mov
mov
in
sbbb
sub
lds
dec
xchg
add
pop
xchg
cltd
dec
sub
push
push
xchg
cmp
fidivrs
dec
lods
or
call
sub
sub
lods
test
test
push
and
dec
inc
loope
mov
jns
jle
or
popa
lods
lar
add
cltd
cmp
aad
pop
leave
or
int3
arpl
jno
mov
or
into
xchg
lods
push
aad
mov
mov
cli
cli
es
sbb
mov
pop
ljmp
int3
adc
xchg
leave
mov
cmc
xchg
adc
mov
add
cmc
jne
push
mov
adc
fldenv
xchg
xchg
popa
mov
stos
popf
mov
pop
sbb
jbe
lea
or
push
in
push
push
pop
mov
xchg
cmc
push
loop
dec
iret
cmpsl
enter
stos
in
dec
sbb
pop
pop
dec
pop
mov
addr16
sahf
jno
iret
mov
pop
jg
or
sub
repz
push
or
das
in
rcl
xchg
pop
hlt
or
fsts
je
fst
pop
xor
gs
sbb
sahf
shll
xor
mov
fwait
rorb
fstps
jae
test
cmp
fmuls
jp
shrb
int3
cmc
cmp
push
jge
xchg
cld
or
ret
pop
adc
popa
cmp
dec
and
sahf
mov
ficoml
xchg
xchg
mov
andb
imul
inc
dec
mov
xor
pop
mov
jne
test
jb
cmp
or
pop
insb
adc
cli
lea
sub
cmp
pop
ja
hlt
call
pop
scas
cltd
push
sub
xchg
push
out
push
dec
inc
mov
xchg
imull
gs
movsl
icebp
mov
jmp
push
cwtl
pop
pop
push
cmpsl
outsl
fdivl
inc
sti
dec
jae
pop
in
push
lds
dec
es
mov
sbb
inc
and
sbb
mov
or
xchg
sub
lea
cmp
and
dec
inc
cmp
scas
mov
sahf
cwtl
popf
cmp
hlt
sbb
jle
mov
xchg
mov
pop
cli
pushf
ds
jns
fsubrl
je
pop
or
cmp
addr16
mov
push
inc
lret
mov
repz
jno
je
out
push
sbb
sarl
xchg
jmp
xor
jp
mov
xchg
ret
aad
in
lret
push
push
scas
push
call
and
sub
fwait
std
push
mov
xchg
adc
add
push
jbe
ss
in
or
push
push
inc
imul
sub
cwtl
adc
add
cmp
fcompl
jecxz
mov
mov
push
icebp
in
std
push
divb
aad
mov
fidivrl
inc
out
mov
add
sub
rclb
out
notl
or
or
adc
dec
stc
stc
mov
xchg
pop
out
in
push
mov
dec
mov
sub
ljmp
push
mov
fildll
push
jl
push
cmpb
and
lods
fsubr
mov
push
push
in
mov
and
shlb
sbb
inc
or
aas
xor
xlat
mov
lods
push
add
shrl
adcl
cmpsl
and
xchg
jne
mov
mov
lret
cs
mov
psrlw
pop
xor
mov
cmp
ds
pop
mov
popf
push
jge
daa
das
sbb
cmpsb
stc
test
sbb
ret
push
fldl2t
pop
jne
daa
call
jmp
push
xchg
pop
pop
adc
inc
xchg
mov
mov
xlat
jecxz
fistpll
dec
stc
cltd
fs
inc
inc
cmc
call
int3
dec
add
out
pop
inc
sbb
pop
cmpsb
sbbb
cltd
xor
pop
fdivrp
add
int3
scas
in
xor
xchg
lea
xor
addr16
cmp
out
xor
mov
insb
lds
sbb
pop
jecxz
mov
sub
cmp
js
dec
arpl
shll
jbe
push
mov
rcrl
mov
test
dec
inc
adc
loopne
movb
cvtpi2ps
sbb
jne
cmp
fldcw
mov
fcom
test
push
icebp
xchg
cwtl
cmp
xlat
ja
mov
sarb
pop
inc
push
insb
push
mov
push
push
push
xor
jnp
add
jb
scas
sub
xlat
ljmp
xor
lcall
push
lret
fs
inc
adc
es
mov
lahf
lods
into
sbb
mov
adc
push
stos
jp
es
cmp
mov
or
arpl
dec
xchg
and
insl
cmp
jecxz
xchg
cmp
fbstp
jp
and
cld
xchg
scas
or
mov
jmp
xchg
das
aaa
pop
sub
in
scas
and
xor
aad
xlat
lret
jp
dec
pop
jge
and
xchg
or
cmp
cmpb
sbb
fs
inc
aad
scas
and
fnsave
jl
xlat
xor
dec
add
sbb
jo
pop
andl
in
adc
fnstsw
add
lds
movl
iret
mov
insb
dec
pop
shl
cmc
cmp
lock
or
sti
xor
mov
push
xor
push
xchg
xor
fwait
push
mov
and
adc
inc
popf
mov
dec
adc
pop
js
out
inc
xlat
mov
ret
push
stos
xchg
sbb
stc
xchg
lods
sub
jle
fistpll
cmp
add
lock
fdivrs
sahf
js
std
shll
clc
les
mov
jge
push
lret
int
jns
adc
scas
shrb
ljmp
inc
dec
out
cmpl
call
ret
fadd
out
jp
mov
push
mov
out
nop
and
or
adc
dec
and
aam
outsl
in
cmp
push
andl
jo
push
pusha
fidivrs
sbbl
or
ret
pop
xor
adc
cmp
mov
mov
stc
dec
popf
popf
mov
sub
shlb
repz
pop
add
dec
jmp
cmpsl
inc
jo
cmp
xor
in
xchg
xor
jle
sub
mov
pop
xor
add
cmp
aad
outsl
inc
scas
mov
add
jnp
in
addb
adc
lret
dec
out
xchg
push
push
xor
pop
xchg
xchg
xor
in
ljmp
pusha
cld
sub
jle
adc
adcb
aad
shl
les
loopne
movsb
jnp
popa
mov
icebp
mov
outsb
insl
lea
cmp
rorl
gs
push
xchg
test
jmp
repnz
xchg
jae
je
subl
popa
adc
mov
imul
push
push
fidivrs
enter
cltd
movsl
dec
inc
sti
pushl
dec
sub
stos
mov
ljmp
je
outsb
jne
daa
pop
push
xchg
mov
out
sub
mov
pusha
xor
aad
fstpt
lcall
dec
movsl
mov
pop
in
xchg
jmp
cmp
push
xchg
icebp
insl
in
stc
inc
int3
je
ja
pop
dec
iret
ja
xor
loope
push
imul
js
movsb
call
lods
mov
jmp
xchg
les
adcl
pop
mov
push
cli
cli
and
xchg
fimuls
es
loop
jecxz
push
in
ret
int
jmp
xchg
aam
out
cmp
adc
imul
mov
cld
imul
icebp
add
and
dec
test
pop
sbb
rolb
jnp
cmp
pop
popf
mov
jno
popa
addl
adc
xor
mov
push
data16
cld
push
xchg
stos
insb
movsl
pop
lcall
js
dec
adc
adc
movsl
imul
adc
sub
mov
push
xor
jmp
sub
and
mov
xchg
shll
mov
cltd
mov
adc
add
dec
aad
jecxz
pop
xor
jns
stos
fcomip
pusha
cmpsb
lahf
mov
sti
pop
push
adc
inc
xor
test
xor
mov
fsub
sbb
sti
andb
pop
sub
pusha
push
pop
aas
xchg
xor
in
test
mov
mov
lock
scas
out
das
dec
sub
xchg
scas
xchg
add
outsb
notb
in
rcrl
xor
ljmp
push
fsqrt
les
push
adc
inc
popa
add
push
cmp
mov
sub
cmpsl
or
pop
out
and
inc
pop
mov
xor
xchg
in
dec
movsl
push
inc
inc
dec
ror
mov
xor
aas
jae
xor
mov
outsb
jne
push
insl
and
adc
rolb
mov
mov
in
push
scas
inc
cli
pushf
fcmovnbe
mov
or
out
sub
imul
push
pop
out
sbb
lret
push
mov
mov
mov
push
imul
out
adc
pop
inc
and
aaa
mov
xor
sbb
push
cld
add
xor
or
mov
cmp
mov
pop
out
loope
out
adc
test
cmp
jne
jnp
sbb
jbe
xorl
fimuls
xchg
sub
dec
ret
pop
xchg
stos
arpl
cld
aam
or
jmp
lar
rcrl
pop
xchg
and
and
scas
push
pop
lods
dec
mov
push
imulb
push
sti
test
jmp
push
pop
leave
mov
mov
add
scas
jmp
pushl
add
shlb
mov
mov
cld
pop
movsb
jp
xor
sub
imul
mov
jns
fisttpl
and
arpl
push
lret
ret
nop
sub
mov
mov
fwait
ljmp
and
add
inc
scas
pop
pop
addr16
dec
or
scas
rol
test
fdivrl
cmp
je
and
cli
repnz
loopne
xchg
out
mov
push
les
imul
cmp
sbb
fcmovnb
cmp
adc
fsts
mov
pop
xchg
mov
push
mov
js
call
aaa
and
les
push
xlat
sub
and
adc
mov
push
sub
xchg
out
cmp
lods
mov
inc
jo
int
fwait
out
push
and
sbbb
data16
adc
lock
loope
leave
aaa
mov
aaa
scas
adc
or
jmp
sbb
shll
loopne
push
mov
daa
stc
add
in
sbb
loop
sbb
xchg
dec
clc
mov
push
icebp
loope
adc
test
xor
push
es
fmull
cmp
in
ss
lock
xchg
rolb
xor
ljmp
loope
jo
push
xor
mov
mov
add
js
xlat
in
sti
mov
lahf
gs
add
dec
sub
pop
mov
mov
jne
add
hlt
test
test
lret
sub
dec
sti
dec
mov
fistps
aas
ljmp
icebp
jnp
fcomps
jbe
or
mov
sbb
js
xor
je
pop
shlb
mov
sbb
mov
inc
fsubl
bound
dec
loopne
xor
jnp
add
jp
iret
fisttps
mov
rclb
in
sbb
ja
arpl
mov
jg
adc
cmp
jns
in
pop
sbb
push
enter
aam
mov
mov
lds
ljmp
xor
dec
adc
testl
stos
hlt
jecxz
add
test
pop
lret
jge
dec
repz
mov
or
lods
stc
popa
adc
jbe
and
stos
add
xor
fcmovnb
inc
bound
cli
push
hlt
scas
lock
mov
sbb
fidivrs
dec
std
adc
xchg
pop
fadd
pop
mov
jg
cmpl
jecxz
or
mov
xchg
loop
movsl
rcr
fcompl
mov
sbb
int
sbb
push
and
push
imul
xor
add
pop
jo
jle
pop
mov
outsl
and
xor
push
sarl
pmulhw
pop
jbe
mov
scas
enter
mov
push
push
test
jle
sarl
pop
and
jnp
icebp
push
sbbl
icebp
fdivrs
shll
xor
mov
inc
jno
shlb
addr16
out
xor
incl
icebp
push
in
pop
or
inc
push
aam
call
jmp
and
aas
xor
shr
js
cmp
inc
outsb
mov
in
and
xchg
mov
mov
lret
cld
jns
mov
jns
sbb
xchg
push
and
dec
pushf
adc
xor
adc
or
jge
ss
cs
flds
jl
sub
sub
les
cs
leave
sub
xor
shl
lret
stos
sbb
cmp
clc
add
sbb
xor
add
nop
lods
pop
add
add
pushf
jle,pn
sbb
lds
in
adc
push
aad
inc
out
dec
lret
xchg
push
jl
test
mov
aad
sbb
and
cmc
cmc
in
push
int3
xor
jge
mov
stos
or
adc
pop
mov
cmp
fimull
sub
push
sahf
test
addl
and
aaa
test
pop
sarb
inc
je
insl
jns
add
shrb
popl
fstps
adc
popf
ja
mov
inc
iret
cwtl
xchg
push
lea
push
mulb
in
pop
inc
mov
stc
or
test
sbb
test
push
sahf
push
sub
sbb
popf
adc
cmp
xchg
xchg
and
lock
and
pop
sub
adc
push
dec
rclb
adc
in
les
mov
insl
dec
loope
les
lret
sbb
scas
ja
cmp
cmp
jg
mov
shlb
in
mov
mov
and
mov
sub
mov
lcall
adc
pop
mov
repz
sbb
mov
arpl
add
push
dec
sub
mov
sahf
mov
imul
inc
out
pop
imul
les
sbb
ljmp
lahf
gs
push
xchg
xchg
cs
sbb
enter
adc
sahf
out
mov
in
dec
sub
inc
xlat
mov
dec
in
mov
lods
insl
test
fcompl
popa
sbb
das
xchg
jmp
push
bound
rcrb
xchg
and
stos
mov
mov
jg
into
addr16
lcall
push
cwtl
testb
enter
cwtl
cmc
ret
cltd
jmp
jg
jecxz
inc
inc
lds
jecxz
jl
mov
mov
jbe
cmp
sub
shl
repnz
ret
dec
sbb
addr16
fisttpl
and
dec
je
inc
jp
shlb
jle
popf
xlat
adc
insb
lahf
inc
dec
les
scas
xchg
cmc
mov
dec
fs
loopne
fisubrl
sbb
sbb
cmp
jecxz
dec
mov
ja
mov
mov
rcrl
inc
pop
fildll
mov
adcl
test
cmpsb
add
xchg
dec
ror
mov
pop
sbb
out
xor
cmp
lret
divb
xor
xchg
and
and
push
cltd
push
mov
cmp
xlat
cmp
or
and
das
jmp
scas
decl
pop
enter
cmp
lcall
movnti
xor
xor
punpckhbw
stos
mov
sbb
pusha
jo
jae
hlt
add
mov
jbe
shlb
pop
rcr
sbb
xchg
mov
loop
jo
ds
stc
fwait
popf
lret
jo
jge
pop
pop
sahf
cltd
sbb
pushf
adc
mov
call
shl
mov
loop
test
out
add
push
add
sbb
jnp
cli
cmp
push
jnp
inc
scas
inc
push
adc
daa
mov
ds
inc
sbb
xor
insb
cli
ja
out
fldenv
insb
pusha
and
mov
sti
rolb
xor
xchg
mov
push
mov
popf
push
xor
jp
jne
dec
mov
lret
leave
aas
test
sub
add
cmp
push
xor
rcl
pop
adc
orl
subb
adc
ret
mov
mov
jl
loop
icebp
xor
xor
fdivrs
fdivl
outsb
fwait
ret
je
mov
in
dec
and
sub
mov
mov
pop
jge
iret
divl
xor
mov
or
je
ljmp
std
shrl
leave
mov
outsb
cmp
inc
jnp
or
fs
mov
inc
sarb
or
lea
popa
xor
jp
loope
std
shlb
fidivs
or
xchg
pop
in
mov
mov
cld
int
sahf
repnz
mov
aaa
lods
rcll
fisubrs
mov
popa
pop
mov
inc
lods
hlt
push
pop
pop
andl
imul
xchg
mov
stos
xor
dec
pop
int
ss
aas
sbb
mov
lods
fcmovne
jbe
and
xchg
jo
rolb
pop
stos
dec
xor
daa
lret
dec
sbb
or
xchg
lods
cmp
shlb
jl
in
mov
movsb
test
mov
loope
in
or
into
addr16
jbe
sbb
loopne
or
dec
popf
or
repz
cmp
xchg
sub
ss
mov
pop
test
loopne
enter
sbb
jmp
mov
pusha
sti
outsl
adc
mov
xchg
rcll
orb
cltd
push
enter
ret
pop
dec
stos
push
les
pop
into
cmpsl
imul
je
xor
ret
out
lret
push
popa
mov
jnp
push
in
push
scas
fiaddl
mov
push
jecxz
or
xor
movsl
ficompl
bound
loopne
testb
arpl
or
cmp
mov
mov
stc
ljmp
bound
inc
bnd
sub
adc
jmp
je
mov
jb
cld
fnstsw
jge
lahf
aas
in
negl
fnstcw
lcall
lods
push
or
leave
cmc
push
mov
ja
jmp
xlat
outsl
aas
jl
stos
sti
repz
fwait
pop
dec
arpl
cmpsb
push
test
adc
jmp
or
inc
sti
xchg
xlat
shl
pop
push
loopne
xor
xor
or
add
lds
push
pop
out
mov
adc
inc
call
mov
mov
add
inc
push
or
aam
sub
xchg
lcall
jbe
pop
call
rorl
daa
jb
add
push
adc
dec
adc
ds
or
or
sbb
push
add
mov
cltd
cmp
sti
adc
aad
xor
flds
rcrl
or
jmp
fs
es
sbb
ror
xor
imul
sbb
sub
icebp
or
repnz
add
pop
mov
xor
mov
mov
push
repnz
sub
lcall
or
test
and
pop
aad
into
insl
aas
cs
sub
into
lock
jl
mov
ret
cli
add
je
or
sub
mov
pop
insb
pop
add
cli
lea
add
addr16
fldenv
jbe
inc
aaa
mov
leave
jmp
loopne
pop
orl
cmpsl
push
iret
mov
rolb
sub
mov
ds
dec
push
ja
faddl
mov
sub
mov
outsl
cltd
je
ret
mov
mov
pop
mov
mul
mov
xchg
pop
push
arpl
add
test
pusha
sbb
mov
cmp
or
sbb
test
inc
adc
mov
je
js
int3
aas
mov
dec
popa
lret
pop
gs
pop
clc
movsl
cld
xchg
arpl
xchg
cwtl
inc
les
jbe
in
pop
pop
jp
lock
xchg
cltd
or
das
dec
inc
enter
in
pop
ret
or
xchg
mov
stos
push
mov
sbb
loop
xchg
jne
out
ficompl
mov
jns
fimull
out
xchg
pop
int3
pushf
push
arpl
or
es
pop
jnp
or
enter
out
mov
and
adc
std
mov
ss
adc
out
cwtl
xchg
pop
nop
testl
dec
cmp
mov
xchg
mov
dec
xchg
jmp
mov
xlat
xchg
pop
and
adc
je
fcmovnb
add
fldpi
mov
imull
int3
hlt
lock
push
push
hlt
out
in
add
push
xor
mov
je
call
movsl
mov
add
add
fs
mov
or
xor
cmpsb
hlt
inc
stos
adc
shll
out
test
loope
lods
and
lds
jg
loopne
aas
cs
ja
les
fwait
sbb
push
cmp
popl
out
in
lds
jne
pop
test
cwtl
cmp
add
hlt
inc
xchg
pushf
repz
out
dec
xor
addb
mov
in
xchg
pop
imul
lds
imul
pop
fildll
sub
out
cmp
sbb
xor
and
fcoms
jne
mov
dec
int
mov
xchg
scas
mov
adc
mull
inc
ds
repnz
or
add
lret
or
and
cmp
push
test
iret
je
not
push
sbb
push
mov
ret
sub
xchg
pop
test
mov
jo
fs
pop
in
cmc
out
mov
ret
scas
mov
ss
jo
dec
and
or
push
fists
call
jne
mov
sbb
rcrl
js
mov
push
dec
lock
out
lods
je
xchg
or
repz
sbb
aam
dec
inc
test
push
add
dec
mov
xor
and
xlat
daa
dec
cmp
adc
xor
xor
aad
negl
fisubs
jb,pt
add
pop
push
xor
bound
sysenter
xchg
fldenv
lret
aas
or
ret
call
into
out
or
orl
xor
push
lds
add
lret
in
ficoml
jmp
insb
mov
stos
lret
iret
fiadds
push
push
pop
aad
imulb
xchg
xchg
cmc
fwait
imul
xor
ret
bnd
push
lods
test
add
imulb
shll
xchg
pop
dec
add
add
test
cmp
sbb
and
es
mov
mov
loope
push
dec
sbb
shll
into
push
push
icebp
push
pop
outsb
sbb
push
mov
js
pop
mov
mov
leave
jl
sbb
mov
loope
xor
rol
outsb
test
jne
popf
subb
mov
mov
pop
es
cmp
shll
cmpsb
adc
std
out
rcrb
dec
mov
in
dec
dec
inc
fcomp
jae
insb
call
or
mov
movsb
adc
inc
lods
cwtl
mov
imul
iret
cmpl
mov
out
or
lds
fstl
insb
fcoms
dec
icebp
or
rorb
jnp
inc
nop
mov
dec
mov
jecxz
xor
inc
loope
scas
aaa
out
dec
shll
repz
jbe
pop
dec
adc
repz
xor
xor
or
jp
push
cld
dec
jno
dec
mov
cmovle
gs
jne
sti
arpl
mov
xchg
push
sbb
fs
push
fnstenv
lcall
or
pmaxsw
pop
jge
icebp
push
xchg
cli
call
pushf
jnp
nop
cwtl
neg
mov
ss
dec
push
push
adc
inc
mov
shll
insb
xchg
ja
fiadds
xchg
push
daa
ret
ret
or
and
push
daa
addb
lahf
div
dec
jecxz
push
ret
sbbl
outsl
jmp
subb
stos
dec
test
inc
pop
fcmovnb
int
fs
pushf
int3
jl
dec
nop
loop
or
das
sbb
sbb
xor
xor
mov
cltd
fisttpl
fnstcw
pop
sarb
das
push
xchg
xorl
jne
xor
inc
out
push
aam
dec
sbb
jl
popa
sub
adc
or
roll
push
out
pop
jmp
scas
repnz
mov
int
cli
jb
sbb
lea
push
cs
push
ret
fs
jp
sbb
pop
mov
addb
fwait
test
fnsave
test
cmpsb
mov
jb
addr16
out
or
sbb
mov
rclb
inc
mov
jp
lock
sub
cwtl
lods
inc
scas
sub
sbb
lahf
lret
cmp
cmpl
pop
push
cmovns
je
push
call
ds
or
lret
pop
inc
pop
push
mov
lcall
add
icebp
rorl
lret
test
add
fcmovnbe
inc
outsl
push
stos
pop
or
fisubrl
push
inc
ret
loopne
pop
int
stos
adc
sub
push
ds
pop
cltd
mov
add
mov
push
fiaddl
shl
fsubl
inc
cli
mov
or
mov
sti
jae
bound
gs
pop
xchg
adc
or
ret
inc
je
inc
sbb
insl
inc
cmp
push
xor
push
bound
push
loopne
ss
popf
pop
fs
jecxz
insl
lods
scas
pop
imul
lea
ss
ficoms
repz
jmp
lret
test
sbb
sahf
sub
fdivrs
fnstenv
bound
xchg
mov
mov
in
fdivl
xchg
inc
fcmovbe
ljmp
adc
sbb
jae
jmp
xchg
adcb
test
adc
aas
push
xchg
shl
push
rol
push
mov
sub
fs
or
xor
fstpt
adc
imul
faddl
jge
insb
adc
xor
divl
enter
sbb
xor
push
lods
rolb
ljmp
fidivl
push
jae
out
sub
mov
mov
sbb
mov
sub
daa
clc
jle
xchg
jecxz
ja
clc
jns
sbb
and
sbb
xchg
sub
or
negb
iret
test
daa
xchg
xchg
clc
or
jmp
mov
add
xlat
stc
adcb
sbb
xlat
es
mov
push
adc
xchg
scas
fiadds
in
fnstsw
out
pop
dec
nop
fidivrl
lret
jmp
rorb
sbb
test
or
xchg
jmp
dec
mov
dec
aas
adc
mov
jle
mov
xchg
es
sub
sbb
or
and
movsl
cmpsb
sub
add
cli
pushl
lods
inc
dec
mov
sbb
sbb
arpl
aam
xchg
push
push
sahf
lret
pop
push
rorb
push
adc
std
in
repnz
mov
sub
push
xchg
lods
dec
inc
mov
inc
mov
lock
ja
fimuls
repz
fimull
lock
jnp
orb
cs
xchg
call
ret
aad
and
test
popf
push
fbstp
and
or
es
push
cmp
dec
mov
jne
hlt
or
cwtl
inc
mov
push
mov
adc
mov
ds
xchg
loopne
jmp
sub
scas
mov
push
push
je
insl
sub
dec
cmp
lods
xlat
pop
mov
push
inc
rcl
lods
xchg
mull
inc
stc
inc
inc
dec
sub
sub
lods
jmp
cmp
xchg
jns
scas
jmp
inc
repz
lret
push
xchg
nop
and
jp
xchg
add
mov
pop
leave
push
scas
mov
js
mov
sub
xlat
stc
shlb
fstp
out
cmp
jmp
cld
shlb
inc
imul
inc
sbb
sub
cmpb
lds
cli
xor
imul
dec
stos
test
jnp
mov
adc
mov
fldenv
mov
insb
vpmullw
cmp
sbb
fwait
mov
mov
xchg
repz
movsl
jge
push
ljmp
xchg
adc
cmp
scas
cwtl
xchg
jne
adc
rolb
adc
inc
in
jg
ret
mov
jne
mov
mov
test
fnstcw
jecxz
and
xchg
movsl
push
jns
pushf
push
aaa
fdiv
fcmovnbe
xor
mov
es
inc
dec
fnstcw
mov
cmp
in
add
fcomps
dec
nop
stc
mov
test
mov
shl
shrl
lods
pop
stos
mov
stos
in
push
ljmp
xchg
mov
outsl
pop
das
mov
push
and
adc
outsl
cld
adc
sub
pop
push
xchg
add
xchg
sbbl
clc
mov
hlt
push
xor
pop
in
dec
add
loope
jecxz
std
and
hlt
in
mov
cltd
es
fs
add
stos
in
push
call
gs
and
add
insb
add
leave
mov
jo
or
je
mov
stc
fcoms
inc
stc
mov
cmp
or
fildl
jle
in
adc
in
cmpsl
push
loopne
das
mov
cmpsl
jl
sbb
mov
pop
mov
inc
fucomip
popf
push
jb
lds
jmp
jns
jge
mov
je
scas
jl
push
push
mov
cwtl
mov
fsubrs
pop
sub
push
leave
fstp
into
out
insl
mov
orl
je
xchg
jno
das
clc
mov
lock
aaa
outsl
adc
cmp
dec
sbb
push
stos
sbb
es
mov
int
or
stc
xchg
adc
pop
dec
sbb
mull
push
jns
add
cmpsl
addl
inc
push
and
cmpl
leave
cld
into
je
gs
rcll
call
gs
jle
push
out
add
sahf
dec
mov
sub
lods
stc
jnp
and
mov
sarl
jl
arpl
popf
sahf
stc
bndldx
call
adc
add
and
out
inc
nop
call
mov
push
xchg
xor
sub
jnp
test
fcom
sub
sub
fwait
ret
dec
clc
loope
pop
xchg
loopne
adc
mov
jae
adc
fcoms
arpl
push
or
fsts
stc
pop
popa
mov
repnz
rorb
ljmp
lods
pop
inc
push
stc
dec
outsb
pop
mov
call
loope
std
mov
dec
mov
add
mov
adc
icebp
inc
test
add
int
gs
mov
jb
ljmp
pop
jle
push
inc
cld
cmpsb
cmp
lret
popa
insl
dec
flds
shr
mov
lahf
or
mov
out
cwtl
add
xchg
in
insb
stos
push
mov
cltd
push
or
inc
fwait
xor
sub
cmpsl
enter
jmp
mov
and
adc
mulb
mov
cmpsb
mov
pop
and
xchg
mov
jns
mov
xchg
jb
divl
lods
push
fwait
jg
or
ret
push
lods
inc
rcl
lds
and
popf
dec
pop
mov
cmp
fcoml
dec
fdivr
aaa
daa
ror
fsts
pusha
lods
push
dec
cmp
push
and
inc
jecxz
xchg
push
in
hlt
mov
push
inc
xor
loope
aad
imul
mov
mov
fidivrs
pop
sub
pop
lods
sub
mov
push
shll
dec
pop
movb
or
js
lea
dec
cwtl
andb
sbb
ret
dec
dec
mov
xlat
push
loopne
scas
ds
sbb
andb
cmc
xchg
cmovae
and
add
movsl
test
cld
mov
jae
sti
xchg
dec
mulb
lock
addr16
aad
ljmp
mov
dec
dec
outsl
cld
jo
dec
cwtl
sub
dec
cmp
jp
and
mov
gs
lock
jmp
jmp
pusha
into
jns
js
sub
daa
popf
jb
call
xor
fists
ljmp
xor
mov
jl
mov
cmpsb
cmp
pusha
lea
jp
mov
jmp
je
std
lods
dec
std
jns
xchg
arpl
fsubl
stc
in
int3
sar
stos
mov
pop
testl
in
pop
cwtl
movsl
nop
rcl
jae
jl
mov
pop
inc
mov
cmpsl
aad
mov
dec
sbb
outsl
or
pop
xchg
sahf
inc
sbb
cmp
or
test
sbb
outsl
sub
pop
push
or
mov
jmp
mov
out
sub
test
and
xor
push
mov
mov
inc
push
scas
andb
inc
shl
inc
es
and
int
jne
fistpll
ja
inc
loop
int
jmp
push
xor
negl
ret
xchg
xor
xorb
cmpsl
cmp
hlt
sub
out
adcl
cld
lret
imul
push
xchg
jns
aad
stos
jnp
mov
add
adc
inc
xor
std
mov
cmp
push
aas
nop
cmc
push
dec
push
push
xchg
xchg
push
imul
mov
inc
xchg
shll
lcall
dec
push
movsb
adc
push
fcom
hlt
sub
popa
inc
cmp
and
fcmovu
decb
cmp
add
jmp
out
mov
cmp
rcrl
subb
into
mov
jecxz
les
ret
dec
out
loop
adc
xchg
xorl
push
leave
pop
insb
xchg
adc
fildll
das
das
dec
cli
sbb
mov
mov
std
add
aam
mov
loopne
cmpl
and
mov
icebp
cmp
adc
add
jmp
flds
outsb
or
lret
mov
ja
cli
xorb
jns
inc
mov
je
cmp
pushf
imul
movsl
push
test
push
cmp
adcb
insb
iret
or
les
fstl
push
scas
bound
lods
push
push
push
je
inc
jle
xor
icebp
mov
bound
sbb
and
xchg
jae
dec
cli
or
arpl
into
insl
sbb
cmpsb
das
jmp
lods
pusha
sahf
mov
jg
aaa
nop
jnp
das
outsl
cli
lret
imul
sbb
sarl
push
cmp
scas
hlt
jle
lods
and
sub
call
es
sti
leave
push
jge
cmc
xor
pop
icebp
adc
movsb
pop
bound
or
jb
push
clc
shlb
hlt
call
mov
cltd
cmp
jns
push
dec
or
mov
test
push
clc
int3
std
or
pop
ja
dec
push
push
in
loope
sub
movsl
divb
xchg
out
cld
mov
add
xchg
popf
jno
adc
pop
fistpl
ds
jecxz
mov
sub
insb
or
js
push
dec
push
jne
sub
pop
jo
pop
aad
popa
mov
mov
or
lea
arpl
leave
mov
inc
in
movsl
loop
mov
fstpt
lea
pop
push
and
and
xchg
test
mov
cmp
mov
inc
test
addr16
dec
xor
test
and
jns
cmp
push
enter
jae
xor
xchg
add
jns
addl
adc
fwait
mov
in
scas
xlat
dec
mov
add
into
inc
repnz
repnz
pushf
mov
mov
cmpsl
sub
loope
fdivl
or
push
ret
outsb
loop
sar
mov
jle
mov
push
popa
lods
aad
jno
lahf
cmp
das
push
test
test
fdivrs
mov
cli
add
add
push
jmp
cmpsb
outsl
lret
sbb
push
scas
repz
inc
out
or
cmpsl
dec
dec
push
inc
test
testb
test
icebp
test
inc
bound
imul
repnz
push
mov
adc
and
subb
flds
iret
push
outsl
adc
inc
pop
jb,pn
mov
xchg
outsl
cmp
mov
push
xor
cs
sarl
push
sar
testb
add
insb
leave
aas
test
cmp
jg
jecxz
inc
sub
testl
lea
shll
daa
jecxz
insb
insl
jecxz
arpl
dec
or
inc
sbbl
jg
repz
xchg
shll
sub
jecxz
leave
js
lahf
call
mov
loopne
repz
shrb
nop
cmc
xor
nop
pop
je
imul
ror
or
mov
insl
stos
pop
movsb
clc
popa
loopne
jge
dec
cs
or
rolb
loope
push
inc
xchg
in
jg
test
rcrb
and
add
rclb
xchg
addr16
pushl
mov
xor
sbb
test
mov
or
es
jp
push
mov
cmp
pop
push
lahf
and
inc
dec
push
push
addr16
pop
jo
loop
ss
jmp
out
xchg
rol
push
xchg
mov
xor
cs
cmp
test
fadds
mov
dec
outsl
sahf
in
cmp
inc
pushf
jmp
fsubl
addl
cmp
xor
imull
pop
imul
or
in
out
jle
jl
mov
popf
mov
mov
inc
scas
orl
or
les
icebp
in
push
std
lcall
mov
push
cli
jns
xor
sub
xchg
jbe
aas
mov
fwait
int
pop
dec
cli
psubusb
fucomip
das
in
bound
sub
orb
outsl
inc
jae
add
stos
out
stos
das
lds
inc
in
fimull
mov
or
frstor
testl
pop
jmp
mov
sub
sarl
rcl
hlt
repnz
jecxz
xchg
lret
mov
mov
ljmp
push
imul
mov
int
sub
inc
sbb
mov
inc
sbb
and
dec
mov
popf
lea
xchg
sbb
push
or
outsb
imul
fmul
js
cmpsl
out
push
aas
fcomip
std
xor
loopne
lret
or
out
ret
fistpll
pop
movsl
pushl
cmpsl
les
rorb
pop
xor
lods
addr16
rclb
test
shrl
xchg
popf
jp
inc
push
and
jmp
ja
insl
add
int3
push
in
icebp
idivb
fcom
mov
push
jae
daa
cmc
dec
or
mov
mov
in
es
cmp
push
fsubrl
sti
loop
insb
nop
insb
mov
mov
or
jnp
filds
out
lret
leave
and
out
fisubrl
sbbb
add
lock
imul
jb
and
xor
and
push
or
pop
fidivrs
pop
call
mov
sbb
sbb
mov
cltd
into
mov
dec
inc
out
pop
test
popf
movsl
aam
xor
out
adc
daa
imul
fcmovbe
movsl
cmp
pop
lods
xchg
adc
mov
rep
and
loopne
int3
in
and
test
dec
out
push
inc
dec
je
fstl
lock
adc
jge
jecxz
in
lods
and
es
gs
jecxz
mov
and
imul
mov
or
imul
scas
push
into
in
xchg
or
adc
jle
pushf
and
dec
outsl
and
out
xor
xchg
dec
mov
cli
adc
pop
add
movsb
push
cwtl
scas
adc
mov
jnp
cmp
les
jbe
mov
imul
pop
jne
xchg
into
add
jg
push
aam
or
cmpsb
in
push
out
fbld
sbb
sub
jmp
das
sbb
popf
cli
out
fwait
sbb
push
gs
das
push
xor
aam
jb
hlt
sti
popf
cmpsl
outsl
push
xor
sub
xor
sub
popf
les
jae
jmp
imul
jb
fs
imul
pop
popa
aad
inc
in
adc
fldl
xchg
pop
mov
jne
pusha
jg
repz
mov
bswap
in
mov
test
movsl
call
xchg
or
test
mov
rol
xchg
popa
shll
je
dec
data16
lret
aas
and
pop
push
movl
or
mov
fisubrl
push
movsb
rcrb
sub
ret
into
jns
mov
es
xchg
bound
push
push
cltd
fs
aas
push
xor
fwait
xchg
and
inc
in
dec
test
mov
cmp
cwtl
mov
mov
xor
mov
inc
adc
push
and
cmp
jp
test
xor
add
arpl
mov
add
es
mov
sub
cmp
mov
and
push
push
jae
rcl
and
sub
lea
stos
sub
dec
insb
push
push
lret
das
cmc
outsl
inc
push
mov
decl
pop
cmc
jecxz
cmp
jne
sbb
in
mov
test
xchg
insb
lahf
mov
mov
or
jmp
add
data16
rcrl
or
bound
dec
mov
push
inc
bound
inc
push
pop
cmp
and
cmp
popf
dec
icebp
jmp
js
repz
sbb
xchg
sub
and
and
cmp
mov
test
sbb
mov
insb
mov
pusha
movsb
shlb
in
popa
hlt
lahf
lods
lods
sub
or
lea
inc
dec
mov
pop
xlat
mov
cmpsb
int
out
hlt
cli
outsl
and
sahf
cmp
pusha
test
push
ss
cli
outsl
fsubs
mov
mov
int3
xchg
add
lahf
jno
leave
aad
mov
es
mov
lods
neg
sub
pushf
xchg
push
shr
cmp
in
adc
fdivr
inc
pop
je
inc
push
mov
jb
shrl
and
xlat
jmp
cmp
push
incb
out
shlb
or
or
insb
repz
je
popa
cld
rcrb
std
lds
add
pusha
sub
ret
jne
fsts
lahf
dec
and
aad
loopne
fildll
repz
loope
sbb
sbb
inc
sbb
xor
pop
sbb
sub
mov
mov
ss
test
jbe
js
stos
pusha
push
jns
sbb
dec
adc
add
mov
inc
jge
movsb
or
xchg
jbe
xchg
push
jge
lock
xor
cmp
lock
sub
hlt
mov
dec
jmp
xchg
and
sub
aaa
repz
fstl
jno
jnp
mov
mov
loopne
lret
sub
push
fcmovnu
jmp
fstpl
dec
aam
or
or
shrb
sub
mov
call
mov
xor
mov
xchg
in
inc
mov
cmove
or
mov
push
xlat
out
rclb
std
cmp
shll
xchg
dec
pop
inc
data16
int
shll
lods
xchg
pushf
inc
sbbl
fwait
std
mov
mov
push
sub
cwtl
pop
mov
fldt
add
xor
ret
sbb
xor
mov
mov
negl
scas
rorl
sbbl
fnstenv
mov
mov
dec
jp
dec
xchg
fwait
cmp
xchg
popa
inc
lock
fidivrs
mov
mov
sahf
pusha
fsubl
sub
rorb
pop
fcoms
loopne
push
jp
fists
test
loopne
fsubs
xor
rcrb
data16
sbb
xchg
xchg
xchg
and
ficoml
aas
pop
sub
mov
sbb
shlb
pushf
andb
mov
pop
xor
inc
jge
lcall
inc
pop
push
xchg
pop
add
test
jle
and
faddl
cmp
dec
aaa
cmpsb
push
mov
jno
aad
cmp
mov
icebp
dec
test
add
push
mov
test
sti
xor
outsb
xor
mov
xchg
mov
imul
imul
loope
pop
fisttps
rcll
xchg
aad
mov
pop
adc
jbe
std
lret
jae
adc
decl
lods
cmpsb
lds
shr
pop
mov
cmp
mov
mov
lds
mov
pop
cmp
les
arpl
jecxz
or
adc
inc
inc
outsb
bound
movsl
clc
cmp
or
mov
mov
xlat
lcall
arpl
loope
movsl
mov
xchg
sti
pop
pop
lcall
push
jge
daa
jmp
loop
ret
inc
fs
lret
jb
shrb
xchg
or
mov
cmc
mov
lahf
pop
das
cmc
and
mov
xchg
test
pop
nop
or
das
mov
ret
dec
jmp
or
mov
mov
push
inc
sub
jae
mov
lds
les
xor
sbb
jae
adc
pop
xor
xchg
in
ficomps
cmpsl
mov
out
push
lods
jbe
sub
cmp
pushf
aaa
out
hlt
inc
es
adc
push
enter
fisubrs
stos
outsl
in
outsl
mov
popf
mov
icebp
cmp
rcrl
sbb
loope
xchg
lcall
outsl
cltd
xchg
fists
pop
sub
cmp
int
or
ret
out
sbb
jl
xor
mov
insb
xor
xor
or
sarb
std
lret
pop
cmpsb
cmp
movsl
mov
push
dec
add
push
pop
mov
les
in
adc
add
out
outsl
add
movsl
test
jl
test
jae
sub
int
xor
arpl
xchg
sub
mov
cmp
pop
mov
mov
jno
xchg
push
adc
in
adc
mov
xor
cmp
mov
jae
cli
lock
xchg
popa
push
jne
mov
es
lods
hlt
adc
xchg
pop
in
shr
add
xchg
pop
test
cmpl
sub
dec
ds
frstor
cmp
push
add
inc
lods
push
stos
iret
cltd
fistps
and
push
test
testb
fmulp
add
pushf
out
out
lret
jb
xor
sbb
mov
nop
xor
lods
pop
sahf
pop
sti
mov
xchg
enter
cmp
xchg
sahf
mov
sbb
sub
cmp
push
iret
jmp
sbb
jns
push
je
cmpl
sub
ret
inc
or
and
dec
mul
sub
mov
or
aam
jae
cltd
push
sbb
mov
push
xor
cmp
pop
fildl
fstpl
jns
insl
sbb
out
or
jns
and
mov
fucomip
cmc
dec
sub
or
inc
enter
call
inc
mov
mov
insl
jge
aam
scas
decl
dec
push
push
xchg
fists
fsubrs
jl
jo
xchg
cmpsb
inc
jo
dec
das
hlt
dec
into
insl
les
into
sub
inc
xor
arpl
or
hlt
lahf
adc
pop
sti
aas
or
aad
xchg
jl
in
and
or
aad
lcall
loope
cmpsb
ja
fldl
icebp
fldenv
push
shl
xchg
xchg
hlt
and
xor
in
shlb
dec
je
daa
mov
hlt
sbb
mov
xchg
in
andb
sti
adc
dec
jbe
iret
cmp
xorb
xor
pop
pushf
repz
push
clc
js
jg
sbbb
mov
out
or
sub
jb
das
jb
mov
push
ds
test
jl
jecxz
ljmp
repz
arpl
subb
repz
shlb
repz
enter
sti
xchg
outsb
inc
lcall
daa
psadbw
std
icebp
mov
dec
xor
pop
jmp
add
mov
jmp
ret
xchg
into
xor
pop
lahf
pop
stc
clc
mov
mov
int3
insb
xor
mov
sahf
pusha
push
aad
int3
jg
adc
out
test
cmpsb
hlt
mov
pusha
push
inc
sub
sub
add
rorb
or
cltd
mov
mov
dec
cmp
aam
rol
mov
mov
testb
push
inc
xchg
mov
das
mov
gs
das
mov
push
stos
std
push
sbb
stc
clc
cmp
pop
mov
add
les
fcoml
cwtl
and
ret
dec
sub
rorb
mov
pusha
scas
mov
and
fwait
mov
mov
adc
pop
daa
cmp
inc
test
aam
popf
or
es
pop
stc
mov
or
xor
scas
in
les
les
enter
xor
js
xchg
loop
or
and
repnz
inc
out
mov
imul
ret
jo
mov
stos
leave
push
aad
mov
movsl
daa
out
int3
stos
scas
mov
ret
ss
pop
loop
cmp
cld
push
ljmp
mov
repnz
push
xchg
push
inc
mov
jnp
inc
movsl
push
pop
bound
add
push
test
imul
mov
sbb
mov
sti
pop
gs
pop
jl
imul
pop
ficoml
dec
imul
lds
xchg
adc
dec
jae
stc
aas
cli
cmpsb
imul
in
xchg
push
je
mov
mov
sbb
or
cmc
pop
pop
fiaddl
fsubr
jae
add
or
cmp
and
outsl
push
push
addr16
add
mov
inc
adc
pop
or
push
inc
fisttpll
or
mov
jb
sbb
repnz
mov
and
jne
cmp
xor
or
std
add
daa
sti
aaa
loop
adc
and
fisttpl
loope
push
lahf
ret
dec
inc
push
pop
sub
sbb
fidivl
into
cmp
lock
mov
mov
add
jbe
or
fcompl
xor
cmp
push
jns
fldt
iret
out
cmp
arpl
cmc
rorb
add
movl
adc
inc
test
push
loop
adc
js
push
push
mov
pop
in
js
and
shl
or
push
mov
xchg
pop
enter
addl
popf
sub
in
dec
cmp
mov
outsl
lods
dec
sbb
cmc
cmp
adc
lods
outsl
or
mov
adc
ret
mov
jb
mov
push
sub
shll
sbb
mov
and
add
inc
out
in
mov
xor
mov
mov
add
add
xchg
mov
dec
stos
push
cmp
lahf
inc
pop
pop
incl
dec
in
pop
fwait
repz
fcomps
jns
cmpsl
ret
xchg
cwtl
adc
mov
fisubs
dec
loopne
adc
push
ss
pop
cwtl
or
jae
adc
mov
xchg
dec
mov
sbb
andb
rcrb
mov
into
jle
adc
sbb
pop
mov
add
pop
dec
push
xchg
fstpt
sbb
cwtl
or
mov
xchg
fadd
adc
inc
repz
pop
jge
xchg
cs
xor
or
sbb
dec
xchg
into
dec
or
ficoml
loopne
rol
ss
sbb
cmp
mov
xor
fstpl
cmp
inc
push
mov
mov
mov
out
popa
les
cmp
dec
test
mov
mov
push
pop
dec
mov
cmp
jbe
ds
inc
test
pminub
xor
xchg
daa
fcmovbe
pop
mov
inc
test
push
loopne
mov
daa
sub
inc
push
hlt
adc
mov
mov
jnp
jne
jb
pop
pushf
dec
mov
mov
and
xchg
sub
mov
jae
add
icebp
push
loopne
insb
mov
jns
mov
push
jl
rolb
dec
aaa
ret
das
dec
add
pop
push
sbb
cmp
inc
mov
aam
test
out
xchg
cmc
add
push
arpl
into
add
jnp
and
fsubl
push
dec
stos
pop
sub
jns
mov
add
cs
leave
cmp
das
test
jb
incl
add
imul
mov
dec
pop
pop
ds
adc
jb
adc
xor
xchg
inc
arpl
cmpsb
ret
mov
mov
and
dec
and
lods
jg
out
repz
out
mov
scas
call
pop
xor
xlat
fabs
lret
jecxz
push
ljmp
outsb
daa
cmc
xor
or
out
cwtl
add
inc
cmp
loop
mov
aad
sbb
js
push
nop
enter
bound
adc
sbbl
ja
lock
jmp
fldcw
xor
xchg
and
enter
stc
mov
orb
sbb
add
js
inc
mov
rcll
add
mov
dec
push
jns
lahf
sub
and
inc
stos
mov
inc
int
imul
mov
subb
mov
adc
pop
aas
ljmp
loopne
repnz
dec
dec
mov
sbb
jg
ljmp
fisubrl
inc
jbe
xor
setns
lret
cmp
sti
push
aas
jae
push
xor
lret
rcl
sahf
mov
dec
mulb
ds
push
repz
adc
arpl
jmp
pop
ds
addb
ds
mov
xchg
sbb
sahf
sarl
icebp
movsb
mov
cld
jo
xor
cmpsb
add
lcall
daa
mov
xchg
inc
dec
xchg
pop
fistpl
mov
adc
enter
push
mov
ret
aad
pop
cltd
fwait
or
xchg
push
mov
roll
loopne
adc
rorb
jns
mov
mov
jp
xchg
ret
test
lar
arpl
add
orb
or
mov
inc
rcrb
les
mov
nop
aam
xorb
arpl
outsl
cs
int3
and
xor
xor
in
mov
mov
xchg
mov
daa
loope
push
ret
or
adc
loopne
fcomps
xor
jge
lret
in
out
les
cmpl
enter
xchg
cmp
rolb
lds
push
pop
push
and
mov
and
popa
sahf
rcrb
inc
inc
lock
cmpsb
inc
outsl
mov
outsb
push
pop
out
aad
mov
adc
shlb
test
mov
addr16
mov
lahf
push
cwtl
jmp
scas
fwait
jmp
mov
cld
or
outsb
mov
dec
aam
mov
add
or
xchg
push
mov
mov
jge
bound
adc
cwtl
mov
lret
and
popa
or
or
scas
pop
sbb
gs
xchg
loop
mov
test
jmp
andb
sbb
xchg
cmpsl
push
bswap
stc
int3
sbbl
cmpsb
jle
insl
popa
pop
dec
and
adc
adc
push
or
arpl
fisttps
loope
xorl
lcall
aaa
mov
insl
shlb
push
and
shl
sbb
push
dec
stc
insb
cwtl
ds
push
pop
ss
out
icebp
xchg
jns
adc
mov
inc
mov
or
dec
pop
fidivs
cli
inc
test
rorl
add
ret
pushf
or
and
dec
cmp
push
cmc
sub
int3
mov
hlt
mov
xor
jp
push
loope
fsub
sub
jg
ficoml
sbb
mov
or
loop
xor
stos
arpl
pop
ljmpw
addr16
mov
popa
inc
notb
jle
cltd
mov
clc
inc
lods
mov
mov
or
mov
movsl
pop
mov
sub
push
jge
inc
lret
insl
jp
stos
inc
jne
sbb
mov
in
mov
push
in
push
and
dec
mov
jbe
add
enter
mov
push
cld
xchg
loopne
and
jecxz
pop
outsb
sub
jns
popf
adc
sbb
mov
push
ror
xchg
fimull
ljmp
sub
mov
loop
mov
fisubrl
push
xchg
sub
mov
dec
mov
lea
inc
or
push
rcrb
and
jo
cmp
push
dec
jmp
mov
int
or
sub
notrack
add
add
sbb
jb
aad
loop
inc
cmp
jnp
add
xchg
cltd
inc
arpl
leave
bound
add
dec
add
fwait
repz
dec
lret
push
movsb
sbb
push
fsubrs
and
or
jno
test
pop
mov
push
sbb
jecxz
and
aam
bnd
inc
inc
xchg
loop
push
das
lahf
inc
sub
jno
push
mov
out
pop
cs
mov
lods
add
jno
dec
shrb
mov
rcrl
mov
dec
xchg
and
pop
xor
cmp
pop
fwait
xchg
nop
xor
jne
pop
jb
rol
mov
mov
mov
dec
ja
ficomps
mov
lock
xchg
ret
daa
add
out
pusha
in
clc
xchg
mov
je
ds
outsb
leave
movsb
mov
jns
dec
add
popf
arpl
dec
movsl
mov
in
sub
in
and
ja
dec
jecxz
inc
hlt
movsl
outsb
andl
cmp
xchg
nop
popf
repz
jl
enter
imul
add
enter
push
into
push
fists
cmpsl
call
add
and
ror
repz
lods
and
pop
lods
mov
and
mov
dec
xor
mov
inc
mov
ljmp
rorl
shll
add
pop
pop
adc
hlt
or
mov
call
movsl
gs
mov
inc
add
xor
push
pusha
sbb
xlat
mov
lcall
push
add
adc
in
fwait
int3
xchg
mov
movsb
sub
sbb
mov
inc
repz
popa
in
stos
pop
jae
mov
xchg
fs
cli
repz
add
lret
mov
and
mov
mov
and
stc
pop
imul
movhlps
jg
dec
cmpsb
icebp
leave
mov
push
pop
cmp
jecxz
add
sahf
loop
inc
jae
xchg
and
cmp
push
cltd
shr
sbb
in
insl
das
adc
loopne
sahf
clc
scas
pop
test
inc
pusha
cwtl
cwtl
pushf
mov
xor
mov
cmp
inc
xlat
mov
lods
cmp
jo
pop
mov
and
cmp
jo
lret
pusha
scas
shlb
pop
jnp
shlb
adc
es
js
stos
popf
je
aaa
pushf
test
int3
mov
xchg
clc
insb
in
bound
orb
fidivrl
or
imul
test
in
or
les
jl
lcall
sub
push
imul
jns
push
mov
push
mov
rcll
lcall
lret
subb
pop
sbb
js
and
mov
inc
outsl
mov
pop
repz
sti
xchg
addr16
fwait
inc
ss
clc
xor
iret
adc
js
cmpsb
mov
repz
rep
xchg
cmp
pop
add
mov
and
push
sbb
sub
subl
sub
leave
mov
jmp
and
fdivrs
insb
inc
dec
mov
pusha
and
adc
xorl
add
fimull
push
jp
mov
and
int
add
in
stos
jnp
in
ja
push
decl
mov
xchg
jmp
xchg
mov
fistpll
xor
sbb
inc
cli
push
xor
pop
or
and
aad
push
addr16
rclb
lds
outsb
lods
cmc
sub
stc
out
fwait
incl
and
mov
adcl
mov
movsb
cmpsl
out
addr16
aaa
and
adc
mov
fcmovnbe
mov
jge
push
adc
xor
xor
jo
imul
fadd
jp
cmpsl
stos
loope
mov
ret
stos
das
mov
jge
xchg
aaa
jle
jns
add
loope
or
jge
outsb
xchg
add
fwait
int3
repz
xchg
mov
pop
aas
mov
push
pusha
test
ret
push
mov
cld
leave
xchg
xchg
pop
mov
fisubrs
jecxz
ja
push
pop
sahf
hlt
imul
sbb
scas
roll
hlt
pop
fcompl
ret
jae
decl
leave
add
mov
ja
mov
cmp
jl
xor
lahf
pop
in
mov
popa
adc
mov
jp
fwait
out
xchg
jae
or
aas
rol
sti
test
mov
test
lock
pop
in
fistpl
adc
add
in
and
inc
hlt
xchg
shl
orl
mov
add
mov
cltd
sbb
add
and
xor
inc
repnz
dec
pop
int
das
mov
shr
cltd
add
push
mov
decb
orb
jp
jo
out
xchg
int
insb
add
cld
adc
outsb
fcom
cmpsl
popa
in
fidivs
push
push
mov
mov
pop
divb
jae
or
out
push
rcl
in
testb
mov
xchg
push
daa
lret
fisubrs
mov
push
pop
push
xchg
int
sahf
fs
cmpsl
jbe
adc
ret
inc
inc
sub
inc
mov
jbe
pop
mov
or
outsb
cmp
and
push
iret
repz
xchg
pop
sub
ffree
lret
sahf
adc
xor
jno
inc
popa
ja
xchg
ljmp
fcompl
out
out
xchg
mov
push
cwtl
notb
pushf
mov
nop
out
jl
aad
sbb
test
cmp
fnstenv
es
adc
inc
scas
test
insb
dec
mov
mov
shrb
dec
mov
pop
jp
cmpsl
outsb
stos
shrb
sahf
xchg
xor
stc
jbe
sbb
fdivs
icebp
and
repnz
shll
scas
repz
in
dec
pop
and
adc
adc
xchg
test
push
clc
or
sbb
sbb
push
push
cmc
test
rcr
dec
sbb
and
js
push
push
out
xchg
test
mov
in
cwtl
push
jnp
push
jbe
xor
fsubrl
icebp
cli
pop
lock
popf
in
xchg
hlt
sub
fwait
rcll
shll
outsl
loopne
xlat
dec
out
push
iret
test
cmpsl
add
push
mov
arpl
jl
loop
cwtl
dec
fs
sahf
sub
loop
fcom
mov
jl
test
dec
sbb
and
cli
cld
push
scas
lock
je
cwtl
lods
dec
adc
rolb
ljmp
cmp
outsb
js
jno
cmp
cmp
mov
xor
sub
mov
je
dec
xchg
data16
xorl
fcoml
int
adc
xchg
sahf
ret
pop
push
cmp
insl
loopne
jle
mov
mov
and
into
sub
notl
or
sahf
inc
jbe
movsb
xchg
stos
test
fiadds
cmpsl
mov
xor
rolb
testl
push
mov
add
or
xor
mov
lds
mov
sbb
add
add
mov
std
cmpsb
mov
repz
push
jae
sahf
out
sahf
and
pusha
inc
push
dec
xchg
lahf
aad
in
dec
cmp
inc
mov
mov
pop
jmp
mov
sub
test
imul
cmp
pop
and
lahf
cli
push
enter
aas
cltd
xchg
jmp
mov
xor
cmp
andb
xor
push
adc
adc
into
xchg
icebp
jmp
dec
in
repnz
push
sbb
inc
rolb
pop
lret
popf
pop
mov
dec
jg
ds
das
je
in
dec
or
cld
loop
mov
cmp
xchg
jmp
dec
imul
loope
rcl
dec
fldt
andb
inc
jne
push
fildl
in
dec
cmp
xor
cwtl
adc
xor
mov
pop
pop
cwtl
mov
popf
push
mov
lods
movsb
je
jl
in
xor
aad
loopne
ret
idiv
push
sub
pop
fwait
lahf
adc
mov
cs
cwtl
jmp
mov
sbb
mov
data16
arpl
xor
daa
jns
imul
js
ret
jns
lock
rorl
xor
outsl
subl
adc
sub
test
sbb
and
jecxz
lret
adc
data16
es
mov
xchg
mov
adc
adc
pop
pop
aas
xor
cmpsl
xor
xchg
mov
dec
scas
sbb
repnz
jb
jno
mov
clc
addr16
cmc
mov
mov
shrb
aad
dec
adc
fcoms
push
inc
scas
or
jge
iret
jns
adc
loop
mov
or
jl
mov
or
cwtl
sti
ja
dec
sub
fucom
add
xlat
mov
jp
mov
mov
adc
call
lock
enter
mov
pop
xchg
outsl
sub
sbb
sub
mov
das
les
enter
mov
mov
mov
xchg
sub
idivl
adc
and
call
xchg
into
movsl
adc
xchg
sub
add
outsb
popa
je
or
loope
in
js
push
in
insl
adc
pop
jb
loopne
mov
lret
lods
scas
lret
mov
push
inc
pop
push
dec
xor
pop
push
xchg
dec
bound
jno
mov
std
push
sbb
adc
pop
lahf
vaddpd
adc
shlb
mov
rolb
jmp
xor
data16
sub
xor
push
pop
adc
cmp
out
push
lods
pop
xchg
popf
jo
clc
lods
popf
xlat
xchg
push
insb
cs
sbb
sahf
or
pop
jnp
mov
sbb
popf
xchg
in
in
enter
add
aas
mov
mov
xchg
mov
push
jo
pop
xchg
ficoml
pop
nop
and
xor
les
out
mov
xchg
sub
call
in
xchg
loop
pop
sti
int3
hlt
jno
dec
add
insb
pop
adc
xchg
aam
inc
bound
mov
cwtl
aas
adc
or
out
cmp
imul
iret
mov
pop
mov
scas
and
mov
mov
inc
pop
rorb
or
rorl
inc
shl
push
fs
aaa
sub
and
cmpb
jo
fcmovnb
and
in
adc
in
rcr
popf
int3
mov
sub
rcrb
pop
popf
and
jl
inc
xor
bound
fnstsw
jle,pt
push
aad
push
out
mov
lea
nop
loop
pushl
xchg
fcompl
push
xchg
add
repz
mov
test
mov
imulb
repnz
lds
jle
rorb
xor
sarb
fists
lcall
insb
nop
inc
int
dec
cmpsb
fcompl
scas
test
js
cmp
leave
sbb
sub
aaa
mov
pop
lcall
fcmovu
std
pop
es
fsubl
and
mov
push
daa
lds
jmp
testl
out
xchg
loope
mov
and
loopne
ficompl
sbb
test
fildl
clc
jbe
js
jmp
jp
xchg
inc
jb
sahf
je
jge
aad
bound
testb
pop
gs
sbb
and
ja
dec
leave
inc
pop
mov
rolb
mov
scas
sbb
xchg
push
imul
push
jp
into
shlb
or
jo
cmp
xchg
adc
lock
loopne
imul
xchg
add
out
cmpsb
in
fcomi
jg
in
sub
push
xchg
xchg
shr
mov
jne
ss
mov
aad
repnz
mov
loope
lret
rolb
mov
push
xor
push
mov
pop
fldl
popa
loop,pt
cmpsb
and
loope
xor
outsb
sarl
outsl
ljmp
aad
jp
lea
sbb
mov
sub
jo
stc
das
clc
push
scas
stos
clc
inc
dec
and
outsb
and
in
fdivs
arpl
inc
addl
shrb
ss
sbb
xchg
mov
pop
loopne
jge
dec
aam
data16
pop
lods
cmp
mov
push
into
in
and
fs
mov
push
das
xchg
push
xorb
data16
daa
insb
ret
sbb
lahf
cmp
into
shll
xchg
push
sub
mov
divl
dec
xchg
in
shrb
jg
out
int
push
mov
mov
mov
sbb
ror
dec
adc
mov
mov
mov
outsl
rol
aam
fldl
in
sub
and
push
mov
or
movsl
cltd
enter
int3
out
pop
in
dec
ret
or
xor
jmp
xor
mov
les
and
xor
mov
pop
daa
push
jmp
mov
jg
inc
cwtl
loop
jg
scas
shll
jno
fsubrs
jne
out
push
xchg
loop
enter
popa
jg
gs
daa
or
arpl
sbb
sbb
pop
lds
imul
test
pop
inc
shll
das
mov
dec
daa
push
dec
xchg
imul
mov
push
sub
cs
out
mov
add
je
xor
inc
and
or
cmp
adc
stos
jp
std
jmp
cltd
scas
dec
cmp
loope
xchg
mov
lret
push
adc
rcr
pop
loope
pop
xchg
lret
icebp
sbb
mov
xchg
jp
lea
mov
lcall
idivb
aad
testb
jle
incb
nop
lahf
pop
inc
in
mov
push
or
in
clc
fcoml
cmp
insl
in
int3
sbb
fisubrl
in
xchg
aaa
xor
xchg
mov
and
enter
push
mov
arpl
cmp
repz
out
jns
lcall
ficoml
dec
push
inc
dec
dec
pop
add
xchg
in
inc
cmp
iret
sarb
rol
push
jnp
aaa
and
daa
fimuls
mov
mov
iret
sub
dec
lret
push
inc
mov
adc
or
imul
pop
aad
int
outsl
inc
xor
pusha
inc
mov
sbb
pop
lret
xor
subw
test
sbb
aas
arpl
int
rorl
jae
add
adc
push
sub
sbb
ret
inc
or
and
xor
cs
add
inc
pop
sti
or
adc
call
xor
and
loop
jl
mov
imul
sbb
jle
sbb
cmpsl
push
mov
into
lods
sar
into
call
rcr
push
lea
lahf
icebp
andl
cld
insb
imul
add
popf
adc
mov
iret
and
adc
lock
out
stos
fwait
pusha
dec
int3
jns
mov
fisttps
loope
xor
lods
aam
dec
pop
adc
stos
dec
icebp
inc
in
sahf
push
js
lea
cs
aas
mov
and
and
js,pn
xchg
jmp
cmpsb
daa
stc
js
stc
jb
inc
cld
cmpsb
push
mov
ror
aad
test
sbb
push
enter
nop
cmp
dec
lret
inc
mov
xchg
lock
sbb
add
mov
or
dec
in
cmp
addl
jns
mov
cmp
jae
cli
mov
dec
add
in
in
mov
int
inc
cltd
lcall
sbb
adc
imul
push
and
hlt
pop
jmp
add
push
or
imul
pop
ljmp
push
rcrl
cs
or
outsb
ret
mov
int
stc
movsb
sbb
inc
jae
cmp
lahf
push
sarb
int3
add
shlb
sahf
loop
hlt
or
shrb
mov
adc
cmp
inc
mov
or
fwait
xchg
cmovne
ljmp
jbe
or
mov
pop
decl
push
adc
sahf
mov
aaa
les
and
mov
nop
les
bound
lahf
or
push
jmp
mov
inc
flds
scas
loope
pop
int
lods
std
mov
mov
mov
cmp
daa
fiaddl
nop
int
in
jae
andl
lahf
lcall
loope
je
int3
inc
out
mov
add
imul
mov
addl
fisubl
sti
and
les
pop
mov
or
dec
sbb
push
jne
inc
shll
fldl
aam
dec
mov
lret
push
jecxz
imul
pop
push
lea
pop
hlt
scas
mov
aas
ljmp
pop
jmp
add
cld
push
adc
lcall
data16
aaa
or
adc
add
daa
pop
into
sahf
rorl
add
dec
mov
daa
cwtl
faddp
inc
xchg
into
mov
cmp
mov
mov
jns
add
adc
adc
fistps
sti
icebp
pop
push
xchg
sbb
push
ja
or
dec
cwtl
into
adc
lahf
add
xchg
jbe
ret
flds
jg
mov
pop
cmp
push
dec
mov
daa
cs
lock
pop
jecxz
jo
mov
mov
lret
jnp
push
gs
mov
or
ja
pop
rorb
pop
lcall
mov
lds
sbb
cmp
push
sti
pop
xor
pop
or
push
test
mov
sbb
xchg
enter
inc
ffree
arpl
test
cmpsl
pop
sti
xchg
mov
pop
xchg
std
dec
loope
std
in
pop
repz
pop
push
fisubs
clc
loope
std
sbb
loope
push
insb
int
pop
shll
dec
pop
sbb
aad
inc
sbb
test
jnp
test
pusha
pop
scas
mov
fwait
ret
dec
mov
dec
or
inc
sahf
call
test
dec
dec
push
into
movsb
dec
fnstenv
push
mov
inc
mov
mov
sti
jl
scas
frstor
out
jno
loop
aad
leave
mull
sub
gs
push
inc
lods
dec
pusha
sub
inc
inc
jae
sahf
or
xchg
sub
jns
into
inc
outsb
or
jbe
jb
mov
pop
out
call
mov
push
imul
icebp
aad
lock
movsb
push
mov
popl
jl
cmp
pop
lock
mov
cmpsl
pop
sti
xchg
mov
pop
xchg
std
cmpsb
js
sbb
fsubrp
jg
movsl
mov
rorl
fldt
test
fdivr
dec
mov
mov
sbb
into
fisttps
xchg
mov
inc
enter
adc
mov
cmp
push
dec
mov
fcomp
jbe
mov
cwtl
cli
lods
aad
cmp
mov
pop
mov
mov
fadd
in
add
stc
jl
cmp
jle
xlat
jge
jg
aam
pop
lea
test
ljmp
xchg
pop
cli
cli
js
add
dec
out
in
ss
js
cli
xchg
jb
addl
sub
adc
loope
dec
jmp
stos
inc
in
pop
inc
xor
dec
daa
insl
add
cli
das
xor
xor
or
adc
push
sub
mov
or
loope
enter
ljmp
lret
lock
test
je
lods
sub
in
movl
mov
sbb
scas
insb
ror
ret
fstpl
cmp
bound
sub
sbb
das
out
and
cmc
adc
cmpb
push
cmp
or
pop
insl
pop
adc
aad
sbb
jae
or
cs
add
sbb
or
push
pop
pushf
call
jae
mov
mov
aas
scas
fsub
push
fisubs
mov
sbb
out
push
jo
mov
cltd
push
roll
jge
adc
scas
lcall
push
ret
fldenv
jbe
nop
dec
inc
loope
pusha
sub
inc
sub
cs
mov
or
hlt
rorl
adc
push
sub
pop
or
or
adc
stc
or
cmp
xor
dec
lds
mov
lahf
incl
imul
daa
mulb
shrb
ljmp
enter
push
sahf
test
push
jbe
push
pop
ror
jle
bound
inc
leave
adc
lea
clc
incb
sbb
mov
pop
faddl
lock
jp
fisubl
ja
aad
shlb
xchg
loope
imul
mov
xlat
mov
mov
mov
test
mov
pop
jecxz
out
cmp
adc
sbb
cmp
divl
add
xor
pop
and
divb
shll
outsl
int3
xor
mov
popf
mov
and
popf
sbb
mov
add
loopne
cmp
adc
xchg
mov
cli
outsl
int
dec
mov
push
cwtl
mov
jae
in
and
push
mov
je
sahf
test
call
out
rcrl
lea
jo
cwtl
push
pop
int3
cmp
jb
ljmp
mov
pop
mov
xchg
pop
dec
sub
ds
iret
shll
sbb
push
addl
inc
mov
jge
rorb
pop
ffree
dec
push
inc
out
rcr
push
lahf
stos
pop
sarl
outsl
rorb
xor
cmp
out
inc
xor
pop
dec
sbb
fsts
cmpsb
inc
jle
adc
fdivl
loope
push
lret
test
and
je
rcll
ror
call
mov
jmp
sub
mov
or
mov
fnstenv
pop
pop
add
mov
and
cmp
ftst
in
mov
dec
outsl
inc
mov
not
iret
mov
fwait
mov
push
dec
add
and
dec
imul
repnz
xchg
movsl
int3
clc
daa
loopne
dec
mov
push
out
out
mov
int3
mov
shlb
aad
in
mov
push
xchg
pushl
mov
repnz
xor
pop
pop
fucomip
push
arpl
fisubrs
std
mov
outsb
cli
incb
jmp
mov
mov
iret
jns
mov
leave
inc
aad
mov
fwait
ret
pop
jle
sub
dec
mov
or
dec
jg
sbb
lock
js,pt
sbb
rorb
je
jb
imul
jg
subb
add
adc
in
test
js
inc
pop
loopne
fwait
inc
jno
sub
lcall
in
mov
pop
cmp
sbb
into
jb
pop
std
mov
mov
mov
mov
cmp
ret
jg
inc
sub
mov
xchg
pop
sti
mov
push
pop
push
aam
and
dec
aam
inc
test
xchg
and
mov
mov
mov
test
xchg
mov
add
adc
test
jnp
jg
cli
adc
inc
add
repz
out
test
jmp
inc
jmp
push
andl
movsl
adc
pop
jp
sbb
pusha
inc
dec
out
push
jno
repz
xchg
stos
shll
sbb
les
hlt
adcl
daa
mov
call
fnstsw
rcrb
ffree
dec
jmp
cmp
push
movsb
push
lock
xchg
xor
xor
and
gs
mov
arpl
push
test
xorl
add
pop
shl
adc
cwtl
test
outsb
mov
cmp
outsl
stos
push
test
push
das
push
jb
adc
and
jge
out
lret
pop
lcall
popf
adc
pop
pop
lods
repnz
dec
outsl
dec
pop
xlat
rclb
xchg
cmp
mov
jb
ret
lods
push
nop
sti
dec
sub
mov
insl
movsb
ret
push
icebp
movsw
jmp
add
imul
mov
ja
loopne
mov
shrl
inc
push
xchg
and
sub
jns
push
sub
insb
xor
faddl
pop
jg
xchg
mov
nop
ret
mov
lds
cmpsb
aaa
es
pop
and
xchg
xchg
pusha
lds
or
rorb
cmc
clc
inc
mov
dec
in
sub
in
insb
push
cmpsl
in
mov
repz
xchg
js
pop
push
lods
gs
arpl
loopne
add
jns
xchg
dec
or
mov
out
andl
test
xchg
add
pop
push
ljmp
cwtl
cmp
popf
mov
xchg
sahf
popa
imul
mov
rcl
adc
and
mov
and
mov
sub
push
pop
call
add
add
pop
stc
rorl
push
xor
imul
ja
repnz
movsb
in
sbb
inc
in
push
xchg
jae
sbb
and
scas
faddl
xchg
mov
gs
xor
out
push
mov
push
mov
xchg
lret
insb
adc
dec
dec
ret
xchg
fadd
inc
dec
in
jb
les
sbb
out
mov
pop
jno
mov
scas
gs
push
lcall
adc
inc
push
adc
ljmp
jle
xchg
sub
inc
enter
jmp
dec
mov
repnz
jg
lret
nop
movsl
lcall
push
sub
mov
pop
pop
pop
push
fstps
mov
xor
insl
cmpsl
xchg
sahf
cmp
inc
adc
mov
cmp
lods
pushf
or
xchg
sub
lea
cwtl
adcb
push
in
and
ret
je
jno
xchg
cs
jo
in
xchg
out
les
pop
mov
cmp
out
test
loope
or
popf
pushf
push
pop
rcr
inc
pop
fmulp
xchg
adc
cltd
push
les
insl
xor
pop
mov
push
in
or
jo
sub
int
pop
push
cmp
push
jnp
shl
leave
mov
inc
js
xchg
in
frstor
mov
imul
out
and
addr16
pop
fisttpl
bound
sub
fs
cmp
sbb
imul
pop
addr16
ftst
mov
mov
jns
loop
int3
lcall
and
inc
mov
test
lahf
xchg
testl
int3
ror
xchg
mov
fstpl
ss
scas
lds
push
jge
mov
cmc
ret
mov
ret
push
ret
or
int
xor
ja
daa
lods
rol
mov
rol
loopne
dec
add
int
mov
or
inc
sub
push
fwait
sbb
jnp
mov
ds
inc
sbb
repnz
bound
imul
adc
push
jnp
lcall
jge
sbb
cwtl
cli
out
leave
mov
or
fldl
mov
bound
pusha
cmp
push
lods
es
cltd
sbb
mov
fwait
ret
lcall
sbb
xchg
sbb
xchg
les
add
inc
sahf
stos
ljmp
pop
mov
mov
scas
mov
test
pop
add
sub
scas
orb
dec
sub
cld
fwait
sub
ss
or
mov
sbb
popl
in
dec
aad
cmp
iret
outsl
add
mov
aaa
jnp
cmc
popa
add
pop
test
jae
pop
bound
in
mov
pushw
mov
xchg
int
dec
sub
shrb
and
shrl
sub
cmpb
js
cmpl
in
cli
inc
pop
push
push
lahf
repz
das
cmp
enter
ret
inc
mov
leave
mov
xchg
push
mov
in
sub
test
jge
xchg
mov
imul
pop
loope
les
sbb
dec
es
adc
jnp
leave
outsl
dec
mov
lods
imul
mov
jmpw
shlb
rorb
andl
dec
xchg
arpl
xchg
mov
lahf
clc
or
pop
clc
adc
push
add
aad
push
dec
jno
outsl
cltd
div
push
mov
sbb
fiadds
lret
stos
xorb
sub
jp
cmp
sub
js
repz
ret
insb
popf
std
in
push
outsb
push
cmpsb
stos
outsl
jl
mov
jmp
and
and
xchg
rcr
jo
xor
je
dec
inc
sbb
and
out
sbb
shl
add
dec
xchg
enter
test
inc
rcrb
mov
mov
cmp
jmp
mov
icebp
and
lcall
popf
cmp
bound
and
xor
frstor
jae
xchg
push
and
in
in
fidivrl
loop
bound
cmp
loope
popa
movsb
popf
cmp
mov
inc
cmp
decb
insl
fs
rcrb
mov
in
cmp
stos
jbe
mov
sbb
or
ret
push
rolb
movsb
push
xchg
insl
movsb
mov
dec
pop
iret
lods
fstps
xchg
jecxz
loope
lcall
inc
scas
insl
call
xchg
inc
out
lods
cltd
inc
sub
lods
nop
jle
das
bnd
cmp
fcoms
cli
stos
pusha
in
scas
lea
fs
push
and
jns
das
pop
fsubrl
addr16
sub
dec
dec
inc
stc
push
xchg
lock
xor
bound
fists
cmpsl
cmpsb
jns
int
lret
out
dec
pop
push
mov
inc
cmp
cmpb
jp
mov
lret
aam
outsl
cmp
cltd
out
xor
ret
in
mov
mov
nop
sub
or
and
jp
add
add
cltd
fildl
add
mov
lret
mov
pushf
xor
and
jbe
xor
les
dec
inc
sbb
pop
inc
pop
leave
mov
jle
mov
mov
push
adc
add
xchg
out
or
cmc
cmp
push
cmc
rdmsr
mov
icebp
xlat
ja
hlt
inc
into
insl
pushf
cli
rcll
mov
and
jmp
sahf
data16
bound
add
inc
xchg
andl
jge
ss
xor
addb
out
ret
xchg
sbb
cmp
cmpsb
mov
pop
xor
cmpb
lds
dec
xchg
xchg
leave
cmp
adc
test
movsl
xor
sub
insl
mov
popa
and
into
divb
scas
pop
roll
nop
adc
stos
pop
xchg
pop
xor
cmpsb
sbb
jne
data16
dec
push
in
pop
fidivrl
xchg
mov
popa
and
and
cs
les
pop
sbb
cltd
scas
das
cmp
je
std
mov
cmp
cli
mov
inc
mov
orl
das
stc
int
fildll
sub
xchg
or
adc
push
push
mov
mov
pop
es
pop
lds
insl
mov
dec
adc
cmp
in
mov
clc
sbb
ficomps
scas
cmpsl
clc
lods
jg
aad
addb
fistpll
das
popf
add
mov
lret
lahf
sbb
xchg
cmp
dec
into
xchg
es
mov
sti
cld
jb
inc
inc
clts
pushw
add
xchg
sbb
sub
ljmp
clc
gs
cmp
aas
scas
andl
call
jae
scas
jmp
dec
leave
ret
shll
les
xor
sub
sbb
jnp
dec
xchg
cmpsb
loopne
mov
mov
outsb
push
inc
pop
rolb
and
inc
add
pop
mov
stc
dec
hlt
xchg
jle
jo
cmp
pop
or
repnz
mov
rolb
mov
xchg
das
xchg
adc
cmp
sahf
cmp
add
xchg
lds
pop
jne
cltd
stc
inc
decb
adc
imul
mov
mov
lea
das
scas
dec
and
mov
xchg
mov
push
out
in
xor
fiaddl
cmpsl
mov
inc
outsl
push
add
jnp
push
aam
inc
adc
aam
adcl
dec
loopne
adc
sbb
pop
and
popf
pushf
scas
imul
pop
and
enter
and
add
fsubs
test
pop
fisttpl
lcall
and
xchg
shll
addr16
inc
add
mov
pop
test
mov
push
pop
roll
xor
push
leave
cmpsb
inc
pop
mov
fxch
andb
and
jg
jecxz
out
sub
cli
cmp
aad
scas
pusha
mov
ret
je
push
pop
mov
insl
mov
mov
stos
test
aas
and
loopne
add
data16
stos
add
push
and
leave
mov
loop
test
mov
jge
fwait
jmp
mov
es
and
sbb
ss
scas
xchg
dec
pop
and
out
mov
jg
or
push
fs
stc
xor
stc
and
shll
pop
popa
pop
icebp
jecxz
cmp
pop
pop
xchg
mov
aaa
rorl
sbb
sub
cmp
mov
leave
push
sub
lahf
mov
jecxz
jae
cld
pop
fucom
xchg
mov
inc
aad
xchg
sbb
mov
movsl
mov
mov
mov
dec
push
ret
lea
xchg
repz
or
mov
and
into
hlt
push
out
jmp
call
pop
lds
add
clc
push
stc
les
or
inc
or
mov
lods
push
sti
pop
mov
mov
and
shr
lods
insl
jmp
sub
jl
je
stos
and
ja
xor
shrl
imul
xor
cwtl
push
mov
or
test
mov
insl
fsts
and
pop
push
mov
xlat
shl
mov
push
arpl
or
xor
inc
test
fwait
int
movsl
and
aam
mov
adc
cmc
inc
mov
stos
add
out
xchg
clc
nop
mov
cld
push
mov
aas
sbb
je
pop
leave
and
jne
jo
fwait
jbe
outsb
inc
and
in
stc
mov
pop
jg
add
mov
orl
push
xor
or
push
sarb
mov
and
imul
nop
and
shr
add
xchg
fwait
jnp
dec
inc
js
mov
push
push
cmp
rcrl
loop
jmp
ss
fists
or
icebp
pop
pushf
or
popa
xlat
sbb
sbb
fisubrl
cmc
out
rclb
push
or
mov
pop
mov
dec
or
std
adcb
test
xchg
inc
das
add
daa
xchg
push
into
mov
jmp
cmc
fcomp
push
xor
mov
rolb
pop
sub
fstpt
loope
xor
sbb
xor
xchg
repnz
pop
test
imul
add
mov
xorl
cmc
test
or
fldcw
jmp
jecxz
js
mov
inc
push
pop
lahf
push
pop
xorl
cmp
jne
fdiv
ret
scas
sbb
fldcw
add
add
mov
das
stc
popf
push
out
push
jmp
int
pop
shrb
ja
imul
jbe
test
mov
xor
fyl2x
insl
popf
bound
add
pop
fwait
pop
imul
adc
xchg
out
ret
xlat
pop
bound
jo
xor
xor
vprotq
fisttpll
fstl
add
lret
add
test
mov
sar
push
mov
push
sbb
data16
dec
sarw
aam
in
and
js
push
shll
sbb
and
sbb
data16
mov
push
in
scas
xor
idivb
cmpsb
insb
bound
test
or
push
xlat
fistl
mov
jb
fstpt
insb
loop
imul
push
and
lahf
iret
nop
enter
mov
and
out
add
into
inc
jae
lahf
mov
pop
cmp
mov
inc
sub
push
cmp
imul
lds
pusha
push
cltd
cmpsb
dec
inc
outsb
repz
pop
jbe
xor
pushl
mov
sahf
insb
sbb
fmull
insl
lret
lret
add
xchg
loope
andb
cmpsb
mov
sub
and
dec
xchg
dec
mov
cmpsl
jmp
and
fidivrl
pop
xchg
rcr
out
adc
jb
cmp
cmp
cmpsl
mov
mov
adc
rcrb
scas
inc
or
in
xchg
mov
pop
clc
cmp
xchg
mov
or
push
mov
sub
push
xor
inc
in
mov
cwtl
lcall
xor
xchg
push
nop
loopne
jno
and
mov
cltd
out
cmp
add
in
adc
cmpsl
xor
stos
cmp
loope
cld
xchg
int3
divl
sbb
pop
dec
idivl
inc
adc
jb
lods
dec
in
pop
xchg
rcrb
push
mov
pop
fwait
xchg
addr16
push
testb
fstpt
popa
scas
mov
daa
or
cwtl
lcall
adc
mov
imul
pop
adc
neg
scas
hlt
ljmp
and
fucomp
in
fnsave
add
scas
and
mov
push
dec
sub
xor
rclb
insl
or
addr16
or
or
inc
in
adc
out
push
xor
sub
pusha
dec
popf
cmp
xorb
or
mov
adc
jle
les
fwait
sbb
xor
int3
mov
mov
les
mov
jecxz
push
mov
xchg
out
int3
push
sahf
aad
mov
pop
insl
pop
cmpsb
lods
and
jno
cltd
enter
dec
shrl
adc
mov
stos
lds
jecxz
adc
shll
push
sbb
adc
push
cwtl
lods
mov
cmp
sbb
adc
sub
or
mov
mov
movb
pop
fiaddl
xchg
jbe
xor
lds
pop
sbb
sarb
add
xchg
loop
adc
jae
pop
and
scas
mov
in
rorb
stc
fcoml
sub
je
xor
mov
adc
jg
push
cwtl
mov
xchg
fisubrs
dec
sbb
jmp
mov
jb
dec
push
or
xor
or
popa
jnp
pop
mov
mov
jmp
xchg
adc
cmp
imul
dec
out
ljmp
out
adc
iret
aas
cmpsl
pusha
mov
jle
nop
sub
jge
scas
cmp
add
stos
fisubs
ret
das
add
addr16
adc
cld
sbb
xchg
jmp
mov
daa
shlb
or
cmp
pop
mov
divb
test
int3
imul
adc
divl
frstor
fisttpll
in
inc
imul
and
mov
mov
sbb
ud1
cmp
popf
adc
bound
xor
xchg
fnstsw
push
out
scas
sbb
leave
adc
mov
jb
test
mov
out
jo
cltd
js
lods
pop
push
pop
mov
xor
mov
mov
das
pop
xchg
push
fsubr
les
pop
mov
jno
loope
sub
jae
lds
orb
fucomip
push
xor
push
rcrl
jb
cmp
and
gs
xchg
jb
add
fbstp
jne
js
mov
dec
mulb
shrl
inc
in
addb
fwait
pop
xchg
out
xor
inc
ror
and
popa
jl
in
xchg
cmp
lcall
sbb
int3
in
cli
pop
pop
pop
xchg
jae
pop
fs
jg
and
test
pop
xchg
cltd
push
mov
sbb
cmp
pop
arpl
sub
mov
mov
and
lds
mov
roll
pop
inc
jnp
call
pop
fcmovnb
in
fmull
inc
icebp
rcrl
mov
cmc
and
aas
je
pusha
pop
icebp
and
inc
adc
idivl
mov
fstps
or
mov
cmp
imul
or
pop
mov
xor
jmp
ret
and
mov
xor
fisubs
mov
cld
jnp
cltd
data16
fdivrs
mov
mov
das
jns
insl
imul
sub
aaa
sbb
ljmp
movsl
xor
xor
push
xchg
lods
push
push
addr16
mov
push
int
lea
mov
sar
in
or
jge
add
jne
or
stos
cld
mov
daa
test
sti
ss
notl
mov
ret
adc
sbb
or
pusha
ficomps
add
push
insl
fistpl
cmp
movsb
jb
jmp
fcmovnb
mov
add
push
sbbl
lcall
sub
adc
outsl
inc
addr16
xor
daa
add
inc
test
mov
adc
push
ss
dec
adc
mov
mov
test
addr16
ret
mov
mov
cltd
repz
test
out
dec
fchs
mov
xchg
jb
cmp
jb
jne
adc
int3
adc
in
test
lods
aaa
jo
cmpsl
aaa
arpl
mov
aad
out
repz
fldenv
scas
mov
cmp
mov
pop
adc
test
shlb
rcrl
dec
or
imul
dec
jg
lods
aam
test
inc
and
ljmp
mov
dec
or
cmpsb
mov
insb
push
rorb
cmp
jae
xchg
mov
loopne
insb
dec
pop
test
lods
pop
dec
sti
frstor
shlb
xchg
fiaddl
mov
mov
mov
push
shlb
negb
sahf
inc
pushf
adc
into
jp
jecxz
test
test
insl
out
mov
lret
aad
mov
mov
fidivrl
repnz
pop
movsl
add
jb
orl
cmpsb
mov
add
cmp
jo
daa
mov
aas
sbb
lock
xchg
pop
push
adc
loopne
rolb
mov
push
push
sbb
popa
into
pop
hlt
es
xchg
sbb
pop
aam
test
cmpsl
ret
jecxz
and
add
and
push
mov
and
fdiv
lcall
dec
je
add
mov
mov
and
inc
outsl
test
repnz
jae
mov
dec
out
daa
pop
sbb
aaa
and
and
sub
cmpsl
cltd
sar
repz
adc
test
and
repz
ret
push
insb
cltd
nopl
data16
mov
push
jl
dec
adc
cmp
cmp
jb
mov
insl
pushf
sub
mov
mov
xchg
jecxz
push
fs
shlb
xchg
fdivrs
push
jns
stc
xor
push
lcall
lock
out
push
sbb
mov
sub
sub
sub
push
push
add
pop
mov
push
cmp
mov
mov
jae
xchg
push
nop
xchg
push
and
cmpsl
iret
cld
dec
mov
negb
shll
or
pushf
ret
jb
sub
xchg
sub
pop
dec
fsubrl
mov
adc
out
test
bound
icebp
jmp
mov
push
fprem1
sti
mov
jns
pop
sub
sti
lods
js
in
dec
sbbb
in
and
loope
mov
call
jge
push
and
in
test
rorb
gs
sbb
inc
lods
dec
jne
inc
sbb
mov
mov
adc
orl
adc
cltd
cltd
test
mov
pop
xchg
mov
insl
mov
or
mov
sbb
xchg
hlt
pushf
jns
sti
add
or
mov
in
testl
cli
test
aad
lret
add
mov
inc
mov
jno
fcmovb
dec
mov
xor
jbe
mov
cmp
jge
gs
pushf
dec
jmp
orl
dec
jnp
mov
jmp
or
and
xorl
or
jl
pop
hlt
adc
dec
push
mov
in
fimull
scas
aaa
mov
mov
push
jp
xchg
decb
adc
cli
ja
gs
mov
mov
fistpll
and
aad
xchg
push
and
imul
mov
sbb
pop
xchg
cmpsb
inc
inc
mov
fisubrs
adcl
daa
ljmp
inc
xor
xor
test
cli
sbb
test
mov
out
dec
sbbl
pop
push
sbb
xor
or
out
push
icebp
orb
or
adc
popa
push
mov
mov
stos
pop
pusha
adc
fs
push
adc
pop
mov
test
jnp
or
arpl
out
cmp
aad
pusha
xchg
xchg
add
cmp
sbb
dec
mov
push
xor
loopne
rcl
mov
iret
add
in
xor
hlt
aas
iret
loope
mov
sub
xchg
inc
jle
int
leave
push
pop
cmpsl
fsubs
xchg
std
dec
jp
loope
imul
xchg
inc
jns
and
sub
sub
fdivrl
jns
mov
leave
cmp
xchg
pop
insb
push
sbb
or
xor
push
sub
add
dec
lods
mov
jp
xor
pop
and
addr16
mov
rclb
lods
jnp
jle
repz
test
lods
out
lock
xor
push
xchg
mov
out
fs
icebp
mov
inc
adcl
adc
jno
push
xlat
xchg
loop
int
push
ficoms
cld
in
test
mov
mov
data16
sbb
jnp
inc
xchg
adc
or
movsl
pusha
das
xor
fiadds
inc
xchg
sahf
sbb
in
add
jge
xlat
sbb
xor
inc
movsb
and
stos
mov
jl
lret
sub
pop
xor
push
mov
jmp
xor
shrb
dec
mov
push
mov
xchg
out
shl
add
int3
out
jno
out
cwtl
inc
pop
and
add
and
xchg
pop
inc
int3
fimull
mov
xor
stos
cmpsb
testl
sub
pop
cli
gs
and
mov
ds
out
test
xorl
xchg
enter
xchg
lahf
je
addl
gs
cmc
pop
iret
es
lds
call
loope
mov
pop
insl
xchg
cmpsl
cmp
mov
pop
fiaddl
cli
xchg
mov
push
cmp
leave
xchg
dec
cwtl
in
xchg
je
inc
int3
and
xchg
xchg
inc
push
jo
cltd
mov
movb
push
aad
loope
sbb
shlb
nop
pushl
in
xchg
and
jp
mov
mov
fdivrp
loop
fs
jge
and
inc
mov
pop
jno
mov
loop
xor
negl
mov
popf
inc
and
mov
pop
pop
in
aad
mov
stos
popa
les
iret
add
test
ja
test
jecxz
test
movsl
add
jge
push
xchg
jle,pt
add
jmp
lret
std
push
subps
inc
scas
inc
cmp
push
sub
xor
repz
xchg
sbb
mov
sbb
stc
add
sarb
pop
cmpsl
cld
in
int3
aam
adc
hlt
cwtl
imul
dec
push
push
xchg
and
insb
outsb
pop
xchg
mov
mov
in
cmp
jne
dec
rorl
add
mov
inc
xlat
mov
mov
test
ja
push
int3
movl
lahf
sti
jno
jle
pushw
xor
lcall
pusha
jge
push
xchg
ret
mov
lret
push
cwtl
leave
mov
test
mov
es
xor
mov
sbb
pop
mov
adc
lods
iret
sahf
enter
ret
addr16
fimull
dec
leave
mov
adc
outsl
xorl
stos
sti
cmp
pop
xor
mov
dec
mov
jle
int
mov
jo
scas
push
ljmpw
negb
adcb
xor
insl
outsl
adc
or
loop
adc
sbb
jnp
jp
mov
test
add
xchg
xor
addr16
loop
in
jns
aam
out
pop
cwtl
mov
cltd
int3
leave
dec
xchg
ss
pop
mov
add
js
or
mov
jecxz
pop
jle
andl
mov
jp
mov
mov
xchg
sbb
or
rcll
ja
jl
imul
sub
movsl
and
or
push
movsl
movb
es
xchg
sub
call
scas
mov
pop
jmp
ds
rcrb
gs
es
movl
xchg
adc
inc
shlb
cwtl
dec
add
sbb
push
pop
fstp
call
int
lods
adc
ds
dec
sbb
push
push
pushf
mov
mov
inc
jp
mov
add
lods
in
or
data16
add
test
inc
daa
push
das
jno
push
cmp
push
or
fidivrs
sub
nop
mull
push
popa
cltd
call
mov
dec
fisttps
rcrl
insb
dec
int3
add
addr16
aas
stos
es
xorb
lock
cmp
rcrl
fwait
out
popf
push
adc
pop
cwtl
and
jmp
cwtl
fdivrl
inc
mov
sub
data16
int
or
mov
pop
nop
rcll
sbb
insl
fnsave
jmp
cmpsb
and
mov
cs
push
lods
not
cld
aam
or
mov
sub
lret
push
ljmp
negl
leave
or
mov
jae
into
aad
xchg
pop
adc
cwtl
xchg
and
adc
lods
test
xor
fwait
sub
mov
cmp
outsb
aam
jg
sti
in
sbb
dec
xor
lahf
and
cli
push
cltd
add
sbb
jb
adcw
test
mov
dec
sbb
mov
jo
sub
repz
mov
mov
adc
jae
push
jo
popa
mov
xchg
pop
popa
std
pop
mov
cmpsb
lods
sub
imul
data16
dec
loopne
ljmp
fimuls
and
lock
dec
sbb
add
imul
stc
ficompl
imul
in
mov
jl
pop
xchg
mov
push
jbe
jbe
and
aad
mov
add
mov
or
mov
jmp
inc
std
les
std
out
repz
add
mov
int3
loop
or
aas
stos
test
insb
mov
xchg
mov
dec
push
jbe
cs
sti
shr
mov
pop
dec
sub
loopne
xor
ss
add
or
mov
fwait
cmc
cmpsb
add
scas
fldenv
inc
ljmp
adc
or
js
push
or
jg
xor
mov
notl
test
test
cwtl
fwait
sti
in
xchg
push
dec
adc
xor
cmp
jge
inc
test
lods
sub
popa
xor
test
or
sarb
fstpl
outsl
push
mov
pushl
sbb
lea
adc
inc
imul
mov
xor
pop
movsl
movsl
out
xor
lds
mov
mov
addr16
daa
sbb
push
in
jg
mov
dec
push
lods
hlt
xchg
les
mov
dec
in
push
add
jnp
sbbl
fstl
icebp
hlt
jnp
xor
jo
xchg
or
aam
out
add
rclb
sbb
sbb
out
xchg
pop
sub
test
pop
aam
cmp
out
pop
xor
mov
and
adc
push
add
inc
inc
je
cmpsl
or
test
cmpsl
mov
fimull
pop
push
xchg
mov
xchg
mov
cs
inc
xor
fs
notb
sbb
push
daa
dec
out
addl
mov
mov
mov
ds
ficompl
pop
lea
test
xchg
xchg
mov
jecxz
ss
fsubs
popf
jbe
aam
cmp
xor
imul
clc
push
add
cmp
fwait
push
jo
hlt
jl
push
lcall
aas
cld
mov
cs
scas
ds
pop
mov
mov
ja
int
adc
iret
mov
jecxz
pop
sahf
daa
cltd
popa
push
nop
xchg
xchg
das
mov
push
add
loopew
push
add
cld
dec
std
and
int3
fiaddl
sub
ret
int3
mov
loop
out
sub
mov
fcom
sbb
pop
popf
add
pop
fwait
push
add
dec
iret
loope
imul
mov
in
mov
mov
xchg
aaa
or
in
stc
mov
push
loope
cmpsl
popa
fsts
in
cmp
mov
add
lds
mov
xchg
pop
fwait
imul
pop
adc
mov
or
inc
add
add
fldl
cwtl
lods
adc
sahf
test
and
cltd
mov
inc
sub
outsb
and
xor
mov
pop
loop
les
or
bound
xchg
enter
mov
arpl
mov
pop
int3
je
sub
xchg
bnd
leave
sub
call
push
mov
repz
shrl
push
fnstenv
lods
xor
xor
pushf
aad
jne
ret
inc
cmp
mov
mov
ret
cmp
xor
dec
lea
ss
fidivrl
mov
push
mov
jbe
and
mov
jmp
pop
sarl
mov
decl
push
cmp
out
loop
push
or
cwtl
and
pop
lea
xor
mov
cmp
dec
loopne
insl
add
or
mov
mov
push
or
jmp
insl
and
jbe
je
push
fdivrl
inc
cmp
cmp
or
shll
xor
pop
pop
xchg
sub
test
add
jbe
push
cmp
repnz
fsubs
shll
cli
call
jge
loop
aaa
enter
outsb
add
popa
mov
sbb
sub
mov
xchg
add
sub
jne
xor
lcall
insb
sti
add
arpl
xor
pop
sub
and
mov
in
mov
jl
pop
scas
data16
push
rol
jne
fmuls
inc
dec
adcl
fstpt
daa
push
dec
repnz
inc
inc
jmp
aad
or
cwtl
jle
das
push
xchg
nop
or
lods
mov
test
shll
loop
ds
rcrl
jmp
imul
add
loopne
inc
clc
sub
push
lcall
xor
sti
into
dec
or
popf
and
xlat
in
add
jnp
pop
or
xchg
xchg
sub
mov
pop
lret
out
jbe
das
icebp
les
imull
and
and
repz
mov
les
std
push
fdivs
out
andb
pop
aas
adc
mov
shrb
cmp
in
mov
and
clc
jecxz
fstps
test
out
xor
les
test
repz
inc
dec
or
test
ret
mov
inc
arpl
ja
test
das
shll
dec
adc
cld
imul
sub
cmpsl
fstl
sub
sub
pop
add
loop
ds
cmpsb
sub
and
add
test
test
jnp
xor
dec
xor
out
sub
outsl
inc
out
shll
pop
xchg
mov
ds
cmpsl
scas
pop
lret
dec
sbbb
or
lods
push
mov
xchg
pushf
mov
and
xchg
in
cli
pop
dec
mov
jo
arpl
int3
sbb
or
call
scas
cld
add
fincstp
hlt
rorl
xlat
and
shrl
inc
and
cli
aaa
imul
sbb
or
or
mov
xchg
ja
movsb
sub
popf
cmp
test
add
loop
std
imul
dec
jg
dec
insb
adc
or
mov
mov
std
je
sahf
outsb
xor
pop
ret
in
testb
data16
in
sub
sbb
mov
jo
pop
out
mov
idivb
test
loopne
popa
add
faddl
in
cltd
movsb
pop
lods
mov
cmp
out
add
insb
lea
pop
jo
negb
out
inc
jmp
sbb
jp
pop
xor
sub
jno
scas
pushf
sub
dec
pop
insb
push
lds
hlt
mov
pushf
push
mov
xchg
sub
jns
pop
dec
sub
loope
pop
xor
inc
dec
xchg
xor
pop
jecxz
jl
lods
cmp
xchg
fisubrs
lahf
scas
push
aam
mov
xor
ds
jmp
sysret
addr16
mov
jecxz
ss
movsl
test
mov
stos
rcll
lds
orb
jmp
adcb
dec
add
add
scas
sbb
lds
xor
ds
addr16
incl
ds
cmpsl
or
ja
movsl
xor
outsb
ds
les
repnz
cmp
js
in
push
ds
lods
int
push
xchg
pop
pop
xor
inc
popa
scas
mov
movsb
sbbl
lock
mov
xchg
fwait
lods
popa
mov
or
repnz
std
pop
pop
xchg
jb
sub
cltd
test
out
mov
testb
push
push
loop
lahf
xchg
pop
adc
jl
test
mov
xor
mov
lret
stos
xchg
mov
aas
jb
pop
lret
lea
sti
in
sub
into
adc
and
lcall
fstpt
xor
das
lcall
cwtl
outsl
mov
scas
fimuls
hlt
or
aam
adc
jmp
xchg
mov
shl
jecxz
ret
pop
mov
arpl
fs
addr16
cmpb
push
xchg
mov
cmpsl
xor
dec
push
les
and
ds
sbb
dec
push
lcall
fisubrs
repz
pushf
outsl
jg
loop
and
or
lock
fdivs
sub
aad
mov
mov
les
test
gs
and
adc
in
repz
cld
inc
inc
xchg
outsb
fwait
sub
xor
adc
jg
mov
jo
jmp
push
in
pushf
ret
or
xchg
or
xchg
mov
aad
xor
inc
inc
mov
sub
cli
jae
and
std
pop
adc
push
xor
scas
shlb
aaa
or
fwait
and
fdivl
faddl
ret
std
aad
mov
push
movsl
popf
cmpl
inc
mov
rcrl
or
in
cld
lds
or
cmp
xchg
jmp
std
xchg
sarl
or
push
mov
outsb
enter
out
call
jbe
mov
pop
inc
idivl
daa
scas
jle
nop
mov
into
sub
inc
outsb
inc
ss
out
insl
imul
jb
pop
mov
pop
daa
mov
mov
cmpsl
out
call
mov
mov
pop
inc
mov
mov
lock
cld
mov
lahf
adcl
sahf
adc
mov
and
mov
and
pop
push
leave
pop
mov
sti
mov
mov
mov
pusha
xor
sahf
dec
xor
out
cmp
mov
push
jp
sub
xor
cwtl
and
nop
sub
andl
sub
outsb
and
in
lahf
or
inc
xor
push
insl
in
sub
xchg
std
movsb
mov
xor
sbb
inc
add
cmp
notb
mov
cmpb
mov
imul
push
pop
jmp
jbe
xor
test
scas
sub
dec
jno
imul
out
nop
sub
push
clc
jp
cmp
lcall
dec
pop
xchg
mov
mov
addr16
ljmp
adc
cld
cmp
insb
shll
or
add
movsb
sahf
cmp
cmp
jecxz
adc
adc
sbb
icebp
xor
and
push
ljmp
icebp
cmp
in
test
pushl
scas
es
add
mov
dec
push
inc
pop
imul
mov
xchg
test
jbe
dec
mov
inc
test
add
aam
add
jns
outsl
adc
enter
mov
add
cmc
jbe
popa
icebp
test
sarb
or
fdivl
add
xor
inc
push
enter
jbe
ds
mov
sbb
in
test
popf
pop
leave
pop
fstpl
sub
cmp
xlat
xor
mov
adcb
mov
je
ds
popf
add
cmp
pop
fmuls
mov
nop
push
or
insb
lahf
lret
jg
mov
fists
fimuls
aas
xchg
jecxz
xor
fmull
inc
out
lcall
xchg
sti
outsb
dec
mov
sbb
pop
jle
mov
mov
repnz
mov
push
xchg
out
dec
dec
mov
xor
ret
dec
push
and
cli
idiv
push
sbb
mov
push
adc
xchg
js
int3
sub
push
or
lcall
dec
dec
rcll
cli
sbb
jp
cmpsl
rcrl
loop
push
add
popa
pop
ret
leave
xchg
xor
jnp
lret
mov
cmp
fucomip
loope
push
shlb
fldt
mov
cmp
cmpsl
push
sbb
jp
cltd
dec
stos
jnp
sub
loope
es
repz
icebp
adc
mov
iret
xor
loopne
xor
test
jmp
aaa
dec
or
hlt
icebp
mov
jmp
adc
addr16
lock
into
fisttps
sahf
daa
and
mov
inc
das
pop
sbb
out
jns
outsl
and
pop
jns
dec
mov
or
nop
jo
icebp
dec
pop
mov
sbb
cmp
loope
add
xor
mov
pop
sbb
clc
mov
sbb
mov
cmc
test
arpl
xor
cmp
adc
and
out
hlt
mov
lret
jne
hlt
and
insl
add
test
push
mov
lcall
std
inc
outsl
test
negl
push
inc
jae
ss
mov
jmp
shlb
jmp
in
jl
push
mov
and
in
inc
loopne
or
mov
pop
inc
sbb
lods
adcb
int
out
mov
ljmp
das
int3
scas
mov
xchg
sub
mov
js
pop
push
test
fisttpll
in
sbb
add
popf
repz
xchg
cwtl
and
jnp
pusha
xchg
mov
insb
xchg
mov
icebp
inc
lret
add
out
and
fdivs
cmp
jne
pop
dec
mov
mov
aas
cmp
mov
pop
xchg
outsb
cmp
dec
mov
sahf
mov
std
adc
pop
mov
cmp
adc
nop
mov
jmp
pop
in
int3
int
xchg
int
cmpsl
ret
arpl
imul
lret
and
gs
cs
mov
in
add
cs
out
dec
lret
addb
fldln2
pop
repz
mov
and
out
jl
nop
push
in
xchg
outsl
insw
fistpl
cmp
add
movsb
rorl
cld
mov
outsb
mov
push
dec
repnz
mov
cli
out
jl
cld
lods
icebp
pushl
dec
sub
push
mov
inc
sub
cld
repnz
loope
and
adc
lea
sbb
das
jle
pop
push
mov
jl
aaa
sub
pop
clc
es
or
jl
shlb
xor
leave
xchg
test
sar
cmpsl
aaa
mov
gs
lcall
xchg
push
xor
insl
popa
cmpsb
pop
adc
movsl
in
xor
rcrl
outsb
cli
decl
popf
jne
test
add
mov
lret
mov
imulb
fs
mov
sub
sub
adc
xchg
stos
and
mov
fs
shrl
in
dec
ret
fldl
pop
push
cmp
add
rclb
jo
add
jg
sub
stc
xor
idivb
push
xchg
mov
lods
punpcklwd
ror
dec
lret
jmp
adc
scas
pop
jl
jmp
lret
jle
loope
sbb
int3
jle
std
mov
stos
aas
arpl
pop
jne
inc
jno
js
mov
mov
jae
push
inc
add
jo
fcomp
cmp
lea
sub
mov
scas
jecxz
std
inc
rol
push
out
pop
lods
mov
add
jbe
aad
cmp
shlb
mov
stos
notb
lcall
pop
inc
cmp
imul
imul
or
mov
pop
cli
cli
jnp
mov
imulb
stc
jg
xor
scas
neg
xchg
jle
testl
xchg
cmp
mov
lock
out
jnp
fs
fs
ret
or
push
inc
ficompl
sbb
shll
enter
stos
lret
adc
shrb
push
sbb
sbb
mov
cmp
lcall
cld
call
mov
icebp
fs
and
sar
mov
shl
mov
pop
icebp
pop
test
jecxz
dec
dec
mov
test
out
xlat
sbb
sbb
cmc
xor
mov
sub
mov
adc
aad
jge
lock
in
pop
pusha
and
popf
xchg
in
pop
sbb
mov
and
dec
jp
sti
ficomps
cld
ret
jle
icebp
mov
push
insl
pop
add
aas
push
mov
mov
inc
loopne
inc
pop
ds
jae
add
lea
or
sub
jecxz
push
gs
and
mull
mov
cmp
mov
xchg
cs
lret
imul
mov
mov
inc
push
push
adc
or
ret
push
pop
in
aaa
add
mov
push
xor
mov
xor
and
vpcmpgtw
xchg
cmp
jge
sti
cmp
fildll
jb
popf
push
xchg
sbb
fs
and
pop
jecxz
adc
xchg
dec
bound
sbb
mov
loop
pop
out
mov
int3
stc
xchg
in
and
fiaddl
pusha
loop
mov
mov
adc
std
push
out
ja
pusha
negb
testb
mov
sbb
insb
jp
jp
add
fsts
lock
icebp
fwait
nop
inc
cld
and
push
mov
or
add
xlat
leave
repz
dec
call
je
add
movsl
mov
sub
fildl
adc
and
xchg
cmp
jg
out
jl
rep
ljmp
sub
ret
push
sub
fstpt
fwait
jb
scas
jge
sbb
daa
push
and
dec
mov
add
add
jl
pop
das
mov
sub
data16
push
sub
jae
inc
sbb
mov
jne
sbb
inc
xor
xchg
scas
sbb
jmp
or
or
es
mov
inc
add
push
adc
and
or
stos
int3
stos
or
fnstcw
sub
into
fstpt
mov
or
lret
inc
arpl
sahf
mov
jp
sbb
subb
cltd
cwtl
leave
or
dec
sub
sub
push
and
pop
lahf
sarb
int3
inc
dec
rorl
cs
js
insb
push
lds
push
xchg
sub
jmp
popa
mov
in
mov
add
mov
hlt
aad
and
push
dec
lahf
and
insb
ret
in
and
mov
sbb
and
adc
dec
push
leave
enter
in
dec
jmp
inc
xor
pop
es
fildll
lahf
outsb
lea
int
jecxz
sbb
insb
add
call
dec
dec
fldenv
inc
les
cmp
addl
mov
pop
imul
jae
hlt
loop
cmp
sbb
push
and
stos
xor
sbb
mov
repnz
add
stos
xchg
pusha
sbb
mov
inc
push
sub
es
mov
pop
push
push
dec
cmpsl
or
inc
xchg
shl
jp
pop
dec
testb
lret
mov
ret
pop
sahf
mov
cltd
push
mov
push
and
push
out
hlt
and
pop
js
testl
jp
mov
dec
mov
dec
rcl
pusha
and
lret
in
out
js
imull
and
xchg
xor
mov
add
cmp
stos
pop
hlt
jns
int
and
cli
idivl
fstps
and
addr16
jnp
outsl
nop
ljmp
lds
movb
push
xor
subl
push
cli
pop
notl
push
jb
ja
pop
lahf
mov
ret
jno
mov
push
dec
cld
sbb
mov
out
mov
add
sbb
and
push
addb
cmpsl
lds
and
mov
mov
jmp
add
sbb
call
scas
imul
rcll
lahf
gs
push
cs
in
popf
push
xor
push
rcll
testl
push
mov
into
rol
std
lahf
test
sbb
cmovp
sbb
fs
cmp
xchg
nop
pop
cli
sarl
sub
push
movsl
jmp
xor
and
subl
adc
sub
add
inc
push
fimuls
cmp
pop
lods
dec
sbb
pop
notl
cmp
mov
jb
cwtl
mov
sbb
test
decb
jae
sub
lret
mov
je
adc
xchg
in
push
push
xchg
test
xchg
cmc
xor
mov
jecxz
add
inc
fiadds
mov
mov
fmull
ja
xchg
xor
xor
sbb
jecxz
fisubs
sub
mov
sbb
sub
shl
insb
cli
ja
dec
pop
nop
in
mov
out
xor
pushw
mov
xlat
bound
xor
pop
mov
jg
and
lcall
mov
shrl
scas
sbb
cmpsb
add
out
stc
xchg
daa
call
xor
add
dec
dec
pop
xchg
bound
enter
mov
ret
fwait
add
xor
adc
call
pop
pushf
test
xor
cmp
sti
or
cmp
push
test
push
lods
aam
push
cmp
xor
fndisi(8087
fs
gs
mov
out
mov
popa
imul
jmp
pop
adc
ja
sub
xlat
lcall
aas
add
xchg
int3
pop
xchg
sub
in
out
dec
insl
hlt
xor
movsl
clc
jp
xor
int
iret
push
xchg
imul
dec
cmp
xchg
pop
xchg
js
push
adc
push
mov
dec
movsl
mov
pop
jns
xchg
imul
scas
dec
cmp
dec
jecxz
mov
sbb
out
das
ret
cmp
es
dec
dec
or
scas
and
dec
adc
or
jge
add
add
lcall
xchg
sbb
aad
pushf
test
jnp
xorl
mov
adc
lahf
pop
es
test
movsb
lock
repz
push
fstpt
jmp
aaa
or
rcrb
adc
dec
push
jnp
repnz
and
in
or
insb
loopne
mov
dec
out
pop
jl
push
mov
pop
dec
adc
mov
fsubl
pop
xchg
sbb
mov
jno
out
decl
gs
shl
lret
push
adc
inc
in
aaa
mov
sbbb
sub
daa
add
rorb
cli
xchg
pop
enter
and
stos
popf
push
push
scas
insl
das
cmpsl
xchg
imul
sbb
push
je
mov
push
fmul
xchg
lock
xor
jl
rol
pop
mov
cmpsb
pop
lahf
sub
xchg
fimuls
cld
dec
push
jge
push
mov
in
ud2
aas
jg
inc
cli
xchg
ficomps
jmp
fnstsw
out
inc
into
movzbl
rcll
push
pop
inc
lret
sbbb
inc
aaa
dec
mov
sar
push
into
js
inc
xchg
adc
xchg
mov
xlat
into
xchg
bound
cmp
das
cltd
enter
adc
cs
jbe,pn
cmp
lret
mov
push
mov
jp,pt
rolb
out
call
sbb
sbb
sbb
cmc
in
jecxz
adc
adc
or
enter
lret
mov
inc
xor
jle
pop
dec
inc
fs
aas
jne
cli
loop
mov
test
sub
cmp
movsl
movsb
inc
ret
xchg
mov
sub
sbb
aas
arpl
xchg
test
push
mov
sahf
mov
or
and
mov
jmp
adc
enter
push
cwtl
push
and
xor
test
mov
mov
int
cmpsb
in
mov
ja
sbb
incb
dec
fsts
negl
pop
inc
xor
out
into
ret
mov
jmp
fs
xchg
pusha
scas
or
xchg
cwtl
gs
mov
push
mov
notl
addb
dec
clc
movsb
cmpl
pop
ja
insl
and
cmp
les
imul
pusha
mov
xchg
cli
setno
imul
fimull
jge
fwait
xchg
jo
pop
mov
jmp
push
mov
rcrl
inc
xor
cmpsl
jae
jmp
adc
cmpsl
pop
jns
or
int3
mov
jb
scas
fisubrl
mov
cld
push
jle
test
dec
inc
mov
mov
cmp
orb
movsl
jne
lcall
sbb
call
lret
clc
rolb
xor
lods
push
add
ja
cmp
xchg
sub
ss
jge
xchg
iret
mov
leave
mov
sub
adc
icebp
mov
cmp
xor
test
fcompl
jmp
repnz
js
aam
sbb
pop
xor
xchg
adc
mov
nop
mov
add
mov
out
subl
dec
sahf
ds
cmc
mov
outsl
sbb
hlt
adcb
sahf
fsts
btc
adc
mov
jb
push
data16
push
pop
mov
jle
jnp
jbe
in
push
movsb
inc
xor
push
xor
push
iret
lahf
mov
in
jb
mov
cmp
stos
mov
adc
test
xchg
fwait
pop
pop
fnclex
dec
adc
xor
dec
mov
sbb
loope
test
les
xchg
pop
iret
jle
push
roll
mov
cmp
hlt
sub
jo
sbb
add
pop
inc
loopne
sbb
clc
imul
imul
adc
pop
sub
cmp
jno
stos
add
loopne
dec
push
aaa
or
cmp
add
push
dec
pop
sti
idivb
hlt
jmp
repz
inc
pop
adc
sahf
xor
or
cltd
fstpl
insl
or
sbbb
arpl
mov
pop
in
sete
mov
jl
inc
or
enter
test
sbb
sub
jnp
and
int
inc
icebp
fyl2x
dec
pop
xlat
or
popa
add
and
adc
mov
lcall
pop
dec
fimull
sub
in
xor
bound
sub
pop
fildl
mov
pushf
push
jae
lahf
push
mov
xor
pop
int
data16
fwait
and
xor
in
pop
rcll
pop
std
add
push
repnz
les
sub
jle
xchg
pop
inc
mov
jns
xbegin
add
cltd
test
pop
and
xor
pop
nop
cld
pop
mov
sub
jo
sbb
add
inc
xchg
add
add
data16
leave
repz
jecxz
push
xchg
lock
popa
pop
xor
daa
fcoms
daa
xor
adc
ja
call
out
ss
fcoml
mov
out
cmovg
mov
pop
imul
movsb
sti
in
mov
fdivs
fisttpl
leave
in
push
mov
xlat
lods
in
cmpsb
xchg
dec
push
mov
push
fadd
sbb
cmpxchg
dec
repnz
jno
push
sbb
push
jmp
mov
xchg
and
inc
sbb
inc
adc
int
dec
gs
aas
loop
rcll
xlat
ds
mov
iret
inc
test
insl
mov
hlt
scas
xor
int3
and
add
or
xor
jbe
loop
push
bswap
xor
xchg
mov
repz
loopnew
lods
mov
or
ss
imul
xchg
out
fs
dec
cmovs
stc
jmp
rorl
repnz
aam
rcrb
in
jg
inc
pushf
xchg
fdivrl
ret
outsl
push
les
push
adc
mov
pusha
inc
and
dec
js
adc
in
out
icebp
xchg
or
addr16
xchg
xor
jne
sti
xchg
rorb
dec
imul
or
or
and
leave
pop
out
loop
or
and
test
mov
pop
xchg
or
adc
or
mov
push
mov
ret
fwait
cmp
xor
jmp
and
lcall
inc
add
jb
pop
outsb
ds
ret
dec
into
jo
sbb
iret
xchg
icebp
repz
and
sbb
add
adc
mov
sbb
std
adc
mov
pop
and
sub
jle
pop
mov
or
subb
repnz
ds
out
sbb
or
rolb
mov
lea
add
jo
sbb
jo
fstl
inc
popf
pop
push
mov
std
mov
pop
div
and
cli
je
lcall
test
sub
push
or
stos
cmp
movsb
into
in
xchg
into
sbb
jae
cmp
je
rcll
idivb
jmp
outsb
fsub
movsl
scas
fnstenv
mov
xlat
push
shl
scas
mov
push
push
shlb
xchg
popa
push
popl
cmc
dec
sbb
pushf
cld
xor
clc
mov
into
pop
les
push
lcall
lret
pop
or
lds
cmpsl
mov
gs
in
mov
popa
jbe
pop
subb
pop
cld
sbb
inc
adc
pop
cmp
cmp
ret
xor
fmuls
out
cld
push
lea
jne
call
divl
mov
add
mov
or
jecxz
and
jg
outsb
pop
pop
and
adc
xor
xchg
pushl
pop
vunpckhps
popf
jle
inc
scas
divl
fimull
repnz
dec
or
and
xchg
popf
add
fstl
clc
pop
xchg
jg
popf
mov
div
pusha
nop
mov
test
ds
or
and
and
mov
cmp
outsl
popa
adc
dec
scas
imul
xchg
sub
dec
inc
aam
cli
scas
cli
nop
xchg
ljmp
add
pop
inc
xor
sub
inc
hlt
movb
mov
mov
xor
daa
loopne
sub
sti
in
xor
sbb
les
stc
test
test
pop
push
push
int
push
aaa
jb
mov
movsl
jb
leave
push
gs
jo
jmp
hlt
push
xor
loopne
push
movsb
xchg
lahf
ljmp
xchg
movsl
dec
int
rcrl
jns
cs
cli
nop
jbe
sub
pop
divl
hlt
je
adc
xor
jmp
or
or
sbb
jns
and
shl
pop
int3
mov
xchg
gs
sahf
pop
add
mov
dec
scas
cmp
push
ljmp
push
arpl
mov
call
jge
out
jns
scas
dec
stc
cwtl
into
adc
mov
insl
arpl
clc
add
mov
ror
lcall
mov
jne
lret
aad
add
or
cmp
icebp
jnp
fiadds
mov
xor
push
dec
sahf
xor
sti
add
shrl
out
jnp
xchg
in
add
ja
outsb
mov
lods
outsb
dec
pop
cmc
xchg
stc
adc
pushf
mov
int
lret
hlt
mov
sbb
inc
pop
repz
mov
repnz
aas
movsb
dec
lret
sub
js
sub
sbb
add
imul
int3
dec
adc
push
sbb
outsb
mov
out
sbb
push
jne
es
cwtl
dec
xor
inc
xlat
hlt
sbb
lcall
rcrb
jae
mov
pop
filds
inc
ret
pop
add
test
stos
or
and
pop
jo
inc
es
jmp
sti
jnp
push
dec
ret
lds
aam
out
add
stc
cmp
ja
mov
ds
pop
rcrl
ret
push
nop
inc
in
push
mov
movl
pop
jns
inc
std
mov
fisttps
rcll
jo
push
fimull
cmovbe
jb
fildll
mov
adc
and
bound
sub
push
dec
int3
in
nop
pop
xchg
cmc
fcompl
les
jle
sbb
xchg
clc
mov
jle
divl
xor
les
fwait
sbb
lcall
ljmp
mov
lcall
mov
cmp
push
mov
ficoms
movsl
dec
dec
cld
xchg
repz
out
pop
cmp
push
lret
pop
rol
mov
jb
cmp
sahf
les
mov
js
shlb
mov
ret
lds
xchg
jbe
and
sbbb
add
pop
repz
enter
dec
add
data16
or
sub
mov
and
test
cmp
push
push
into
std
mov
cmpsl
or
cmp
xchg
pushf
jge
or
pushf
jmp
cltd
mul
sub
add
fsubrs
push
adc
push
or
in
jg
mov
push
inc
inc
mov
pop
loope
ret
js
xor
jle
cmc
and
mov
clc
pop
jle
push
lret
nop
push
inc
out
pop
es
arpl
mov
movsb
pop
inc
push
push
inc
lds
fisubrs
rcrl
dec
add
fsubl
mov
xchg
mov
divl
popa
or
add
dec
mov
mov
and
mov
das
pop
enter
jnp
bound
xchg
adc
mov
sbb
mov
cli
loop
pop
fnstcw
fwait
je
jae
pop
mov
movsl
dec
adc
push
sarl
xor
mov
lea
or
sarb
push
jo
add
push
lods
fmull
rclb
orl
adc
xchg
cmpsl
test
cltd
out
push
sub
push
nop
add
cld
mov
push
pop
lret
pop
or
test
xor
ja
mov
bound
in
cmp
cmp
adc
in
lcall
rorb
mov
test
xor
lods
insl
push
pop
jecxz
out
adc
jle
or
es
mov
xor
repz
popf
sub
mov
and
pop
call
lret
inc
xor
in
jae
mov
out
mov
adc
jge
push
xchg
sbb
aad
sub
jo
cmp
and
aaa
daa
pop
push
out
xor
ret
add
sub
mov
out
jnp
push
sub
sub
push
leave
fstl
push
adc
push
cmp
inc
inc
mov
popa
lahf
ss
test
mov
fsub
mov
push
pop
cltd
aaa
push
lea
dec
test
out
mov
adc
aam
push
mov
addr16
dec
nop
lock
cmp
pusha
adcl
sbb
jb
adc
addr16
mov
cmp
popf
loop
adc
and
rcrl
das
jo
cwtl
test
pop
je
sub
cld
sub
jecxz
dec
cmpsl
push
cli
pusha
mov
fcomps
movb
fdivr
mov
popf
std
fstpl
add
adc
jno
cld
xor
mov
xchg
jno
dec
jne
mov
adc
call
mov
jl
pop
js
pop
jbe
aaa
cs
ret
xchg
pop
or
mov
mov
mov
in
inc
daa
xor
inc
and
jno
movsb
test
loop
adc
inc
xchg
mov
roll
mov
dec
mov
ds
mov
sub
mov
push
fsubl
nop
add
add
mov
adc
sub
imul
pop
or
push
cmpsb
imul
into
ficoms
jmp
mov
sbb
jae
mov
inc
push
mov
push
lcall
xor
js
push
sub
ja
add
push
pop
je
ljmp
jb
shrl
mov
stos
dec
pushf
iret
orl
arpl
inc
sub
lcall
xchg
stos
cmpsb
fisttps
cld
cmp
ret
rcll
xchg
mov
pop
lret
lods
stc
outsb
cld
icebp
push
mov
pop
dec
ret
cmc
std
push
pop
outsb
dec
and
lds
xchg
jnp
adc
xchg
jno
fidivs
mov
addr16
mov
lret
fildl
xor
lock
pop
dec
repz
nop
out
in
sbb
and
xchg
mov
fsubrl
xchg
xchg
fisttpl
mov
cs
dec
pop
jecxz
fisttpll
divl
or
or
adc
hlt
lock
push
lods
adc
add
dec
mov
push
repnz
cmp
and
mov
xor
ss
stos
mov
sbb
pushf
mov
and
sbb
jp
add
insl
inc
dec
flds
pusha
and
xchg
fstl
sbb
into
or
fldl
aaa
fnstcw
and
adc
cmp
data16
inc
cli
lds
sbb
xor
push
mov
xchg
pop
fdivs
dec
dec
jne
push
es
mulb
repz
popf
jl
ret
aas
jg
flds
sar
les
push
jecxz
cmp
dec
push
fiaddl
fisttps
ja
inc
cmp
jne
jle
stc
dec
leave
in
sub
call
push
clc
xchg
jnp
mov
sub
imul
lahf
cs
push
pushf
xchg
in
cmpsb
adc
push
jnp
lods
mov
jp
stc
mov
dec
push
test
sti
cmp
nop
aad
dec
imul
scas
mov
dec
aad
outsl
inc
popf
fdivrs
jl
xchg
xor
mov
add
mov
mov
loop
stos
sbb
dec
pop
xor
push
cmp
or
in
xor
int3
ljmp
out
mov
pushf
cmp
sub
adc
or
addr16
ret
loope
xchg
and
sub
fwait
insl
ljmp
push
bound
rorl
stc
inc
xchg
pop
jns
loope
inc
pop
popf
xor
add
xlat
xlat
sti
mov
pop
mov
mov
fisubl
out
int
dec
fildll
into
pushf
aam
cmp
or
and
imul
mov
loopne
xchg
cmp
xor
addb
dec
push
dec
ds
mov
jg
clc
xor
sbb
push
or
and
push
pop
movsl
ja
std
push
mov
add
nop
adc
xchg
push
repz
push
out
outsb
cmp
xor
scas
pop
push
mov
or
pop
xor
outsb
inc
arpl
into
rorb
bound
fcomp
out
lock
jle
push
or
int
sub
out
js
mov
mov
and
clc
sbb
lods
xor
mov
call
jb
mov
mov
cltd
push
loope
add
inc
push
xor
ds
ja
lea
and
ficomps
movsl
popf
popa
pop
loop
out
dec
cmp
stos
push
nop
fs
dec
push
adc
push
mul
sub
test
add
mov
sbb
push
arpl
jnp
sub
out
inc
popf
mov
incb
push
stc
add
pop
dec
cmp
push
ss
aam
test
mov
ret
xchg
mov
push
mov
pop
sbb
mov
mov
fistl
movsb
arpl
or
push
int
insl
and
insb
adc
xchg
jl
mov
aad
push
xor
outsl
mov
cmp
mov
adc
cmpsl
xchg
imul
jo
pop
insl
cmpsb
lahf
out
out
jns
adc
cs
and
lahf
into
rcll
scas
xor
mov
xchg
push
imul
sub
movsb
dec
ret
in
add
leave
xor
mov
inc
or
imull
mov
xor
jmp
sbb
and
enter
cmp
pushf
es
and
cli
xchg
loopne
outsb
bound
inc
orb
cmp
mov
cltd
jecxz
mov
push
xlat
push
mov
addl
in
imul
test
jb,pn
data16
mov
cs
or
imul
repz
dec
push
cmc
les
stos
lret
cmp
jnp
aas
push
outsl
push
mov
outsl
in
push
pop
int
movsl
out
and
mov
mov
push
mov
icebp
addr16
rorl
xchg
push
dec
aad
cld
or
outsl
ds
call
sti
outsl
mov
fwait
fwait
push
sahf
clc
enter
outsb
cmpsl
mov
not
rep
jmp
out
les
lea
xor
and
and
in
jmp
cmp
push
movsl
imul
daa
test
stc
sbb
cmpsb
pop
xchg
repz
lret
push
mov
into
pop
iret
pmulhw
xor
add
dec
or
aas
das
sub
xor
pop
push
pushf
mov
jb
mov
jno
push
fsts
je
inc
mov
adc
jns
inc
cmp
push
cli
inc
push
sysenter
fcompl
es
push
mov
mov
mov
add
inc
ljmp
shl
and
test
je
inc
jnp
dec
push
lock
ret
iret
int3
dec
andb
jbe
lret
dec
mov
icebp
pshufw
aam
iret
js
xchg
sub
sti
arpl
out
outsb
mov
fwait
xchg
loop
jg
inc
lea
add
rcll
js
imul
mov
or
push
cwtl
or
daa
fdivrl
cmpsl
fisttps
das
int
adc
out
fiaddl
movsl
mov
jg
fimull
mov
mov
jns
aad
adc
movsb
stos
sbb
das
jle
cld
cld
and
cmc
cmp
ja
pop
in
arpl
xor
or
jmp
or
xchg
xlat
push
or
subb
je
js
leave
stos
icebp
or
push
xor
fldl
cwtl
pop
out
fisubs
and
enter
leave
testb
fmull
repz
add
push
int3
hlt
aaa
clc
cltd
out
inc
sub
or
andl
clc
cmpsb
push
test
adc
rolb
mov
out
repz
ljmp
cmp
jle
aaa
rcl
sub
in
repnz
icebp
scas
loopne
into
adc
mov
sarb
cmp
sub
xchg
xor
cmp
mov
mov
inc
into
sub
sbb
outsl
daa
movsl
sub
sarl
repz
stc
ret
pusha
pop
sub
das
iret
push
outsb
and
sub
cmpsb
sub
cmp
jnp
pop
stos
and
mov
mov
int
ret
fldenv
jle
out
in
and
mov
mov
scas
dec
or
sbb
out
pop
jp
daa
push
fldt
sbb
lods
int3
subb
or
mov
dec
cmp
dec
je
push
subl
call
mov
sbb
rcl
push
mov
imul
jbe
sbb
inc
xorl
cmp
cltd
mov
pop
xchg
jg
out
out
push
imul
test
sbb
sbb
lds
loope
popf
push
std
mov
or
jmp
xsha1
cmpsb
mov
stos
loopne
js
pop
xor
adc
stos
arpl
sub
or
jle
pop
setnp
xchg
pushl
movsl
mull
jl
pop
cmp
icebp
mov
rcl
test
cmp
mov
cltd
mov
cmp
jge
movsb
sarl
jl
sbb
mov
jmp
xchg
and
cmpsb
push
ja
icebp
push
mov
popf
ret
stc
mov
imul
mov
sub
cmp
cmpsb
push
lods
inc
push
inc
xchg
inc
push
dec
outsl
mov
lea
lds
aaa
cmp
lods
mov
mov
imul
adc
sub
jp
mov
loopne
pushf
cmp
cmp
popf
mov
jb
inc
cmp
sahf
aas
divl
repnz
stc
push
out
push
mov
xchg
pop
push
roll
mov
loope
rcrb
enter
test
mov
outsl
cwtl
mov
lock
repnz
ficompl
adcb
jbe,pn
mov
push
mov
add
and
dec
movl
jae
aas
lret
roll
cmp
jb,pn
aaa
mov
sub
jmp
and
rcrb
push
add
les
push
lret
lock
in
es
loop
dec
mov
cltd
xchg
jmp
stc
mov
daa
imul
mov
adc
cmp
in
ljmp
rcrb
popf
mov
fsubs
push
or
rcrl
jmp
mov
int
stos
sti
lahf
mov
divb
or
mov
cli
sub
push
arpl
sbbb
lret
ret
jge
mov
adc
mov
mov
pop
cmc
push
push
push
enter
ficomps
nop
into
sub
cmp
sub
jbe
clc
push
or
adc
xor
int
call
cmpsl
insb
lea
negl
pushf
jl
mov
in
sub
rep
cmp
faddl
jae
lret
mov
dec
rcrb
pop
add
adc
test
insb
inc
xchg
je
stos
pop
lea
mov
out
lret
cmp
sub
cmc
cmp
or
push
cmc
xor
pop
imul
push
mov
and
pop
xor
loopne
fildl
popf
dec
mov
jae,pt
jmp
lods
sbbl
repz
cmc
hlt
rcll
arpl
xchg
sub
fscale
lcall
sahf
xor
movsl
pop
test
outsl
inc
scas
push
pop
mov
ljmp
sbb
cmp
mov
lds
pop
and
cmp
sub
ss
insl
fcomip
dec
mov
cmp
xor
jo
inc
inc
sub
fs
cmpsb
mov
adc
gs
or
fsubr
fstpt
sub
pop
mov
sub
movsl
lds
push
stc
cmp
pop
adc
pop
test
jecxz
xchg
clc
test
int3
test
cmp
sbb
stos
jmp
scas
or
ficoml
mov
in
push
lock
imul
mov
lds
add
stos
xlat
pop
pop
xor
and
mov
aas
xchg
mov
hlt
mov
mov
into
push
sub
push
mov
and
and
gs
push
jecxz
in
shll
lods
mov
mov
sub
sub
fwait
dec
popa
fdivrl
cmp
adc
pop
in
fcomi
loop
and
jo
mov
inc
adc
divb
xchg
nop
xchg
sti
hlt
out
test
or
inc
xor
push
gs
and
stos
jno
sbb
movsb
xchg
pop
mov
dec
movsl
rcr
sub
movsb
lea
je
sbb
or
fsubr
fstpt
sub
pop
mov
insl
test
fcoms
dec
pop
loopne,pn
loopne
and
pushf
jnp
mov
je
lret
mov
dec
sub
add
sub
jno
inc
ss
mov
xor
icebp
cmp
cltd
mov
fstps
dec
cli
in
in
pop
mov
push
insl
sahf
dec
and
loopne
in
cld
lcall
xor
dec
sub
lret
pop
sub
mov
ja
xor
pop
ss
or
sahf
arpl
cs
std
pushf
imul
inc
mov
fsubl
xor
mov
or
test
xchg
cmp
jns
push
icebp
pop
sub
outsl
mov
in
push
jl
insb
sub
mov
ficoms
out
adc
out
out
sub
mov
ja
popl
call
sub
mov
sbb
lds
pop
mov
xchg
jns
xor
xchg
ljmp
and
sub
lret
repnz
mov
xor
pop
jmp
orb
mov
mov
in
or
mov
push
lods
sub
je
xchg
mov
mov
jmp
xor
add
out
jns
adc
xchg
pop
sub
incl
or
adc
push
out
lret
mov
jne
fldenv
sbbb
dec
rcrl
mov
movl
mov
xchg
fwait
js
repz
inc
and
mov
negl
dec
scas
and
test
cmpsl
loop
add
movsb
mov
js
jne
les
fdivs
mov
and
mov
add
push
test
shll
es
pop
push
push
scas
push
hlt
or
fcoms
jo
jns
notl
inc
inc
add
dec
jo
mov
mov
pushf
xor
ret
lods
sahf
addr16
cli
test
ret
pop
jmp
jle
adc
gs
dec
mov
push
xchg
push
cmp
sub
push
push
pop
mov
inc
int
in
popa
push
je
push
data16
rcrb
ret
cmpsl
lahf
or
scas
xor
testb
pop
iret
addb
push
rcr
adc
call
idivb
adc
push
inc
mov
dec
movsl
lahf
test
and
sub
cmc
xor
or
ds
nop
cmp
mov
in
dec
aas
push
jmp
cmp
pop
mov
loopne
pop
repz
cmp
js
mov
adc
stc
test
dec
xchg
sub
xchg
mov
test
push
rcrl
cmpsl
pop
mov
pop
pop
fnsave
xor
leave
ja
cmp
faddl
fidivrl
dec
jns
data16
xchg
scas
mul
out
pop
inc
out
inc
out
arpl
enter
jb
sbb
outsl
xor
mov
fidivl
fwait
sbb
cmpsl
mov
or
ret
sbb
sarl
and
ret
dec
movsl
adc
lds
bound
mov
cmp
mov
mov
fisttpll
pop
add
push
out
inc
pop
cmpb
test
lahf
pushf
data16
test
aas
dec
cmc
fistl
shrl
test
sbb
movsb
jae
cltd
mov
jbe
in
mov
lahf
inc
movsb
or
xchg
xchg
insl
push
mov
mov
xchg
rcrl
mov
or
sbb
daa
imul
mov
test
pop
ja
sbb
xchg
scas
decb
add
ds
sbb
pop
fstps
cmc
push
out
stos
pop
sbb
mov
mov
out
xchg
lcall
mov
je
aaa
add
or
push
add
aad
add
add
aad
add
lds
jbe
mov
into
mov
pop
scas
push
mov
pop
or
push
mov
inc
adc
es
add
push
add
add
add
incl
fsubrl
add
pop
ss
mov
jge
add
in
mov
xor
scas
xchg
fsubrl
mov
in
add
add
int
into
nop
decb
inc
addr16
add
ljmp
sub
aaa
rcl
push
or
pop
xchg
add
jne
int
lods
mov
out
inc
adc
outsl
bnd
add
xchg
test
pop
daa
fwait
add
jns
mov
add
pusha
add
add
push
pop
add
add
decl
decl
sbb
add
mov
add
push
gs
int
pop
adc
add
add
add
cs
add
mov
mov
add
mov
inc
jb
andb
xor
add
mov
enter
outsb
cmp
add
xorb
sub
jns
sbb
shr
sbb
push
add
lds
sub
sti
xlat
rol
add
cmp
dec
inc
int3
add
int
mov
mov
mov
dec
dec
xlat
addl
jae
xchg
pop
jo
add
or
cmp
inc
aaa
add
jo
arpl
jge
js
or
popl
sbb
cmp
sub
inc
mov
xchg
jecxz
bound
sub
pusha
out
cmp
adc
jmp
xchg
lahf
test
jge
or
add
mov
sti
mov
mov
jle
mov
jge
sub
inc
add
jbe
shlb
in
xorb
add
xor
lods
add
jb
enter
inc
daa
sub
jecxz
ss
adc
adc
cmpsb
mov
repnz
push
or
pop
loop
add
xor
add
mov
add
fwait
int
or
and
cmpsl
or
jb
pop
sahf
incb
dec
movsb
pop
idivl
mov
cmp
clc
or
arpl
and
ret
negl
jge
cld
aas
fwait
arpl
jae
out
aas
scas
xchg
ds
pop
add
jecxz
add
sbb
add
int3
int3
ss
jb
rcl
cli
adc
out
pop
imul
call
mov
dec
ja
jge
mov
cld
mov
insl
loopne
jo
adc
xor
mov
xor
sub
inc
rcr
push
mov
fimuls
add
push
add
jle
add
lds
fcoml
sub
xchg
sbb
add
leave
inc
add
das
xor
gs
rclb
mov
ljmp
add
insb
hlt
jge
add
call
inc
nop
ret
mov
jge
add
inc
sbb
jl
adc
push
and
negb
add
pusha
lods
add
into
cmp
stos
add
incl
mov
cmp
rorb
add
sub
and
jne
add
call
cld
lock
xor
add
lahf
incb
add
loopne
popa
mov
jecxz
mov
inc
cmp
add
add
add
fildl
add
pop
xor
lret
pop
or
mov
add
scas
dec
add
lods
pop
fisubs
rol
inc
ja
mov
shl
popf
lcall
mov
lods
mov
icebp
mov
or
and
pop
jbe
add
sbb
adc
add
jge
add
cmpsb
pushf
add
mov
xchg
scas
push
mov
xchg
inc
inc
xlat
jnp
or
cltd
cwtl
repz
lds
test
add
xchg
cmp
insb
in
xor
cmp
fdiv
add
enter
mov
ljmp
add
xchg
mov
dec
cmpsb
sbb
lret
push
mov
pop
in
jp
sub
mov
jno
add
mov
add
sub
push
add
cmp
out
mov
rcrb
mov
sub
fwait
pop
ljmp
fnstsw
mov
cs
lcall
add
lods
arpl
sbb
into
pop
adc
add
pop
jno
jne
add
add
mov
and
add
insl
scas
xchg
js
add
add
outsb
add
mov
cmp
leave
jne
add
dec
inc
sub
or
out
add
and
push
push
mov
fadds
iret
pop
mov
mov
mov
sub
int3
imul
mov
insb
call
dec
or
and
push
sbb
cmpsl
add
sbb
lahf
call
jbe
nop
pop
jl
add
adcl
fwait
add
mov
add
add
leave
sub
add
add
add
lea
jne
jmp
dec
sbb
std
sub
mov
outsl
jg
lods
sbb
pop
addr16
call
mov
pusha
jle
xchg
or
daa
push
sbb
add
movsl
push
sbb
add
repnz
or
add
mov
add
frstor
mov
adc
or
loopne
xchg
or
fsub
add
ja
repz
mov
add
mov
dec
insl
adc
xchg
pusha
add
sbb
sub
mov
add
aam
adc
stos
gs
nop
scas
jg
mov
mov
add
jp
aam
jge
fildl
insl
setae
roll
cltd
daa
dec
imul
lds
loop
add
pop
push
add
ds
inc
ljmp
lcall
mov
movntq
jns
std
fadd
lret
or
pop
adc
xchg
and
adc
or
xchg
clc
add
xchg
pop
lods
jmp
imull
add
jp
inc
xchg
insb
jl
aad
cmp
add
movsb
jge
jp
cmp
add
add
add
add
rcrl
push
mov
jnp
mov
pop
adc
jmp
stos
pop
add
test
xchg
daa
push
out
add
nop
insl
xor
add
or
movsl
add
cld
mov
ds
mov
or
inc
movsl
mov
insl
xchg
push
and
popf
addr16
movd
bound
push
sub
or
add
inc
dec
outsb
testb
stos
mov
add
shlb
ss
add
add
mov
or
xchg
mov
sar
dec
sahf
mov
mov
dec
jecxz,pn
add
cltd
adc
sbb
testb
sbb
add
js
xchg
and
push
pop
and
mov
sbb
pop
push
push
add
mov
add
xchg
pop
xlat
cmp
add
add
push
sbb
add
adc
js
add
add
add
pop
sub
add
adc
push
cmp
add
adc
add
rclb
shlb
push
jp
jle
sahf
repnz
add
sti
mov
add
popf
stos
sub
pop
fadds
add
lcall
jb
mov
add
mov
stc
fnsave
and
sbbb
mov
loope
loope
xchg
sub
jns
rolb
hlt
test
es
and
xchg
add
lcall
enter
cmpsl
mov
add
adc
imul
fldt
pop
adcl
jp
sarb
xchg
std
add
popa
arpl
mov
leave
dec
lods
mov
fiadds
das
xchg
inc
cs
pop
pusha
fwait
clc
jp
sti
mov
mov
mov
mov
les
fisubl
or
add
xchg
add
icebp
adc
mov
pop
lods
mov
mov
add
adc
inc
neg
add
sub
jne
imul
add
mov
testl
add
inc
loopne
push
aaa
dec
jae
stos
sahf
out
mov
jl
mov
repz
stos
pop
add
int
adc
mov
sbb
fcmove
js
jbe
add
das
ljmp
scas
add
cwtl
sbb
scas
mov
dec
add
add
xor
mov
scas
loop
add
cmpsl
jecxz
xchg
add
rclb
push
lcall
push
inc
cld
adc
adc
shlb
int
cmp
add
jle
imul
jb
sub
aam
jg,pn
pop
popf
stc
jg
and
cli
es
sbb
lds
js
add
adc
repnz
nop
std
dec
pop
nop
repz
mov
xchg
add
and
scas
push
add
arpl
push
mov
dec
xchg
movsb
adc
push
add
test
sub
dec
push
fwait
pop
shll
add
sbb
add
xchg
shlb
int
xchg
inc
lds
inc
repz
add
adc
popa
add
fistpll
jle
or
sar
inc
and
divb
ljmp
popf
xchg
jo
jb
mov
dec
js
add
lret
mov
pusha
mov
sti
pop
popa
and
xchg
inc
jb
fcoms
clc
xchg
mov
mov
lods
fwait
dec
inc
ret
repz
and
pop
mov
mov
push
repz
ret
dec
xchg
inc
cwtl
jae
int
ret
fs
add
xor
inc
adc
sbbl
and
sahf
sbb
xor
mov
pop
jl
fwait
and
xchg
lods
movsb
mov
inc
cmp
push
mov
cmp
in
outsb
lcall
push
adc
cltd
cmp
sbb
fwait
mov
sub
into
pop
je
adc
mov
mov
fnstsw
add
mov
les
movsb
test
outsl
out
add
and
cmp
add
rorb
jmp
add
or
push
dec
xchg
lds
or
sbb
jp
cmpsl
out
in
mov
inc
fwait
mov
sbbl
sbb
std
nop
mov
icebp
leave
push
dec
pop
mov
add
sti
in
dec
cmp
leave
xor
bnd
jo
data16
or
push
and
ret
inc
mov
ljmp
shl
je
inc
cmp
xor
jae
loope
cs
jns
add
sbb
add
jmp
fcompl
mov
lock
sub
in
popf
add
mov
dec
popa
addr16
sub
aas
dec
pushl
lds
lcall
adc
sti
mov
mov
imul
sub
or
add
je
mov
sbb
lret
pop
push
inc
xchg
jne
daa
int3
imul
inc
add
movsb
jae
xor
jns
je
out
les
mov
add
jmp
add
jmp
ret
loopne
xlat
lret
mov
mov
pop
sbb
in
enter
leave
cmp
adc
add
out
cmp
imul
mov
add
mov
and
mov
inc
dec
fwait
cld
add
dec
iret
and
sbb
mov
add
push
sbb
and
dec
out
leave
adc
add
mov
ret
sbb
push
repz
jae
xchg
mov
or
or
add
xor
test
xchg
mov
jae
push
repnz
cmp
scas
mov
mov
cltd
xor
in
add
sbb
mov
daa
cmpl
outsb
mov
loope
std
outsl
xchg
je
push
add
ss
mov
xor
add
add
pushf
sbb
movb
mov
xchg
sbb
xor
fs
push
aas
xor
push
add
je
out
js
push
push
lods
fstps
imul
les
add
cs
out
shll
add
cmp
and
lock
add
cmp
xor
xchg
mov
add
add
push
out
ds
and
add
xchg
das
outsl
insl
loop
stc
sti
fs
adc
add
rcrb
adc
roll
add
loopne
inc
push
add
or
mov
leave
jno
dec
inc
sbb
test
add
dec
sub
mov
popf
das
arpl
arpl
mov
arpl
add
and
loope
aas
add
add
fucom
cld
push
jl
jg
pop
jg
xchg
out
std
fs
or
inc
jne
xchg
cmovbe
cmp
push
xchg
xlat
addb
pop
sub
mov
xor
inc
push
bound
mov
lahf
shl
xchg
add
hlt
pusha
pop
aad
xchg
clc
or
lods
xchg
movsl
mov
jns
pop
sahf
fcomps
add
or
aad
popf
xchg
clc
jmp
rol
sti
and
cli
add
dec
cld
add
ljmp
push
mov
jp
in
movsb
cmpb
insl
js
cmc
push
test
sbb
xchg
fcmovb
lea
push
pushf
and
loope
fcomip
cmp
fwait
pop
mov
ds
or
clc
or
arpl
and
ret
add
jecxz
mov
stos
lahf
mov
scas
adc
add
mov
pop
dec
pop
push
add
lods
mov
dec
pop
rorb
sub
fucomp
loopne
mov
psrad
push
outsl
movsl
add
repz
pop
jp
or
inc
push
jecxz
daa
cmc
cli
shll
inc
add
sub
imul
mov
jno
sub
dec
je
imul
jae
mov
scas
dec
push
lcall
add
push
daa
daa
fwait
add
mov
in
xchg
mov
test
inc
add
mov
test
icebp
and
or
and
js
call
test
mov
scas
outsb
add
add
or
dec
push
cli
in
dec
add
cs
add
mov
or
ja
enter
pop
push
add
fisttpl
rcrb
sbb
inc
inc
xchg
aam
dec
cmp
cmp
xor
fisttps
pop
xchg
mov
xchg
and
ja
rol
out
add
les
pop
dec
xchg
push
add
xchg
mov
xlat
incb
jae
xchg
xor
and
and
jne
and
add
and
daa
xchg
jecxz
icebp
add
out
xor
in
sbb
mov
adc
add
popa
in
push
add
mov
push
loopne
mov
mov
fwait
imul
add
add
xorl
xchg
xor
insb
push
test
hlt
dec
mov
test
inc
sub
lods
xchg
and
adc
lret
lea
mov
add
mov
xchg
pop
mov
dec
adc
add
roll
clc
adc
shlb
inc
pop
sbb
push
fisttpll
cld
int3
add
jno
add
mov
scas
add
insl
add
add
loope
add
out
inc
xchg
aam
dec
movsb
faddl
mov
cli
adc
or
jmp
fucom
add
popa
mov
inc
sub
push
pushfw
push
mov
rcrb
jp
mov
clc
add
xor
xchg
push
jns
add
ss
lods
inc
add
add
add
icebp
in
stc
jge
ret
add
add
mov
gs
xor
subl
insb
lods
add
add
pushf
jecxz
add
push
pop
and
mov
out
scas
xor
shl
clc
lds
xchg
and
pushf
jmp
jge
rcrl
add
movsb
xchg
outsl
in
cmpsl
std
inc
lret
add
dec
add
jo
gs
cltd
ss
sbb
push
pop
stc
mulb
mov
or
push
int3
and
call
clc
pop
sub
in
jbe
dec
stc
shl
push
out
jb
add
arpl
mov
add
arpl
test
inc
mov
pop
stc
push
add
das
ljmp
mov
stc
stos
fidivrs
or
xor
lds
pop
andb
push
mov
mov
sbb
add
in
dec
mov
int
call
inc
fldcw
sub
fmulp
add
fcomp
scas
jb
loop
aam
int3
cmp
pop
cmpsl
fwait
dec
sbb
inc
int
das
push
imul
cmp
out
sbb
add
add
xchg
mov
or
out
cltd
sbb
cmp
inc
mov
add
add
into
pop
leave
add
add
jns
ja
popf
pop
cmp
jae
add
cmp
pop
test
vpsubq
add
and
and
pop
push
inc
push
mov
cmc
and
sub
fadds
in
les
mov
add
out
cmp
inc
outsb
pop
imul
jmp
mov
add
push
insl
sub
mov
lcall
add
xor
and
mov
out
push
pop
add
sub
add
mov
and
xor
in
jg
add
adc
popf
mov
jo
sbb
outsl
aaa
ljmp
into
in
add
or
subl
mov
add
pop
mov
add
fistl
aad
add
mov
int3
add
jg
nop
and
rolb
add
sub
cltd
pop
mov
xor
bound
xchg
filds
out
das
inc
xchg
xor
ljmp
add
add
jno
js
aad
push
mov
js
add
shlb
lods
das
adc
dec
sti
jns
add
jg
push
test
test
xor
test
add
pop
inc
push
mov
or
jae
cmp
jne
pop
jge
pop
add
mov
stos
test
and
add
mov
add
add
mov
xchg
pcmpeqb
sub
xchg
add
add
sub
insl
cmp
cld
add
xchg
test
cmp
add
or
popl
pop
pop
outsl
mov
add
add
sbb
lds
add
cmp
mov
dec
rolb
out
push
dec
jbe
stos
icebp
mov
imul
add
lcall
sub
add
fldl
aad
or
imul
gs
aas
and
ret
je
je
mov
mov
sbb
or
ja
ja
fistpll
int3
pop
cmp
in
pop
add
dec
adc
fprem
add
pop
aaa
jmp
push
jae
mov
nop
pop
lock
add
das
repz
xchg
push
fisttpl
push
pop
inc
fwait
sti
fiaddl
daa
in
jge
cmpsl
test
test
mulb
jle
add
jns
push
or
sbb
mov
cmpsb
xor
cmp
cmp
jnp
mov
add
add
je
jmp
add
xorl
in
fsubr
add
mov
out
mov
cmp
sub
mov
mov
fadds
add
add
rcrl
enter
jle
mov
pop
ret
cli
jmp
mov
jl
into
cmp
rorl
sahf
adc
adc
rcl
pushf
lcall
add
mov
mov
inc
or
add
add
imul
loop
cmpsl
in
fsubl
xlat
mull
cmpsb
gs
dec
test
nop
imul
mov
add
xor
adc
arpl
or
inc
adc
add
faddp
outsl
pop
and
and
xchg
dec
popf
out
add
imul
push
sbb
push
add
imul
inc
sub
outsb
add
loope
lahf
imul
test
push
lret
adc
les
mov
add
pushf
test
cltd
pop
ltr
push
cmp
cmp
pop
mov
or
push
pop
in
sar
mov
dec
adcl
xchg
insl
out
imul
push
stos
lods
dec
add
mov
add
sub
shl
adc
xchg
addr16
add
inc
add
jg
test
dec
movsb
mul
in
dec
add
add
jl
loop
fidivs
pop
dec
nop
sbb
sbb
add
ljmp
dec
sub
add
mov
cmp
mov
mov
lods
xorl
dec
test
inc
mov
mov
add
imul
or
nop
repz
add
out
add
jns
lcall
jg
shlb
mov
push
adc
sldt
stos
or
pop
js
movsb
xlat
cld
push
and
add
outsb
jb
sub
add
jge
xchg
jl
pop
in
andb
jo
pop
inc
mov
jne
pop
jne
stos
add
sbb
imul
jbe
mov
out
mov
stos
add
push
and
cli
shrl
and
add
add
popf
push
sahf
shll
cmpsb
adc
jg
aas
add
movsb
outsl
sub
xor
popl
add
mov
add
lds
and
adc
ljmp
mov
fwait
or
aam
mov
insl
sbb
mov
arpl
ljmp
test
or
adc
jb
out
lea
in
adc
mov
dec
xor
inc
ss
push
sub
mov
xchg
add
mov
push
dec
xchg
add
sbb
scas
arpl
dec
fists
out
xchg
movsl
rol
in
or
sti
add
aaa
pop
sar
lock
mov
loope
add
sbb
and
in
out
sub
or
add
dec
or
lods
jmp
pop
in
jg
or
lock
pop
mov
pop
add
rolb
and
and
out
xchg
add
inc
add
pop
adc
mov
adc
add
cmp
and
xchg
popf
mov
pop
push
xchg
sbb
pop
xchg
xchg
inc
push
mov
push
push
loop
enter
sub
lods
jecxz
or
and
mov
add
sub
insl
mov
mov
push
rcr
add
nop
adc
mov
xchg
push
int3
ja
mov
push
add
cli
pushf
pop
push
gs
icebp
inc
mov
sar
adc
bound
xor
jle
shl
xchg
add
dec
call
clc
cmp
mov
jg
push
sub
add
add
cli
out
dec
movsl
iret
js
add
sbb
rclb
mov
fstpt
add
mov
and
add
jmp
test
mov
add
add
insl
popf
ret
pop
sbb
jl
or
jns
jmp
xor
jb
movsb
test
lods
pop
enter
insb
inc
dec
cwtl
jp
push
test
cli
cli
das
inc
add
add
sbb
mov
popa
popf
jnp
adc
cs
cmpsl
pop
and
add
adc
sbb
pushf
push
push
std
incb
mov
jle
adcl
setns
add
clc
and
out
add
mov
add
lock
add
add
add
out
ret
and
sub
ret
jmp
mov
and
iret
enter
leave
les
inc
test
hlt
pop
out
adc
mov
xlat
xor
scas
sub
dec
ror
mov
inc
in
popa
das
scas
arpl
ljmp
inc
mov
pushf
push
fcomp
and
push
ljmp
sti
mov
push
in
out
loopne
outsl
or
dec
xchg
jl
and
or
pop
mov
add
pusha
jge
or
adc
cmp
clc
adc
frstor
adc
inc
push
into
aas
mov
daa
add
add
push
mov
jb
iret
sub
jnp
or
push
jmp
push
imul
rolb
lahf
cmp
lret
nop
xchg
pop
add
icebp
xchg
push
or
add
or
add
fadds
rcl
add
imul
and
sub
pop
ror
add
xchg
mov
cmp
xlat
adc
add
cli
mov
lea
nop
mov
testl
add
inc
dec
cmp
dec
pop
adc
stos
outsb
js
inc
mov
pushf
fmuls
xchg
adc
mov
in
fwait
xchg
jbe
mov
in
stos
push
mov
xchg
lret
int3
int3
ss
jb
or
loopne
sub
add
lahf
jl
cltd
mov
sub
imul
aad
scas
inc
frstor
insl
pusha
fcmovne
jo
add
add
add
pop
fistl
jge
clc
mov
push
call
and
xchg
dec
clc
mov
add
ss
or
push
hlt
pushl
xor
add
dec
int3
xchg
fmull
test
mov
push
push
stos
pop
sub
movsl
pop
in
mov
lods
mov
sub
jecxz
fstps
lea
mov
into
push
push
mov
dec
cmp
pop
cmp
dec
add
cld
mov
pusha
test
or
pusha
jge
sub
les
cli
pushf
mov
addl
push
leave
mov
add
rolb
xchg
mov
push
jne
jle
fwait
hlt
inc
push
adc
lods
pop
test
inc
dec
xorl
ljmp
push
pop
lock
add
fwait
mov
mov
hlt
loopne
and
cmp
loopne
jp
mov
fcoms
xor
pop
mov
mov
push
mov
xor
sti
lods
jmp
mov
mov
movsl
mov
xor
cmp
xor
push
in
movsb
push
rcrl
add
fwait
pop
lods
xlat
push
push
and
mov
add
outsl
adc
mov
sti
pusha
xchg
mov
adc
push
ds
jae
stc
cmp
sbb
and
push
inc
lods
jl
cmpsb
js
xchg
cli
cld
sub
cld
orl
popa
xchg
push
das
scas
inc
dec
lods
mov
jmp
scas
rorb
dec
push
cli
cmp
dec
sbb
mov
out
pop
lds
movsl
mov
xchg
cmpsl
in
fsubl
xlat
mull
xchg
add
sub
bound
push
jne
jno
dec
add
and
add
add
ja
pop
iret
lcall
dec
mov
or
shll
push
add
add
pop
dec
inc
pusha
pop
xor
add
add
add
shrl
pushf
mov
imul
leave
iret
lahf
add
sub
shr
add
add
nop
xchg
pop
or
stos
lods
mov
mov
popf
add
data16
daa
cmc
cli
shll
dec
add
add
mov
std
insb
push
dec
fsts
xchg
outsb
sbb
or
add
push
inc
jnp
push
xchg
push
fdivl
mov
pop
sahf
add
add
inc
movsl
push
pop
daa
cmp
add
dec
sub
cltd
incl
cmpsl
or
add
pop
add
dec
cmp
xchg
cmpb
shll
mov
daa
pop
add
sahf
xchg
dec
xor
movsl
stc
test
pop
outsb
std
stc
test
cmp
jns
sub
mov
jno
loope
inc
jle
pop
mov
adc
fwait
xlat
mov
popa
push
pop
add
bound
dec
sub
mov
sub
mov
repz
pop
cmpsb
mov
cmp
dec
adc
push
inc
imul
ret
into
dec
mov
mov
lea
add
mov
add
arpl
add
cli
pushf
test
frstor
insl
mov
insl
mov
jae
in
xchg
dec
fs
scas
fldt
or
dec
dec
push
add
add
lock
jbe
orl
push
jge
sub
add
addr16
mov
incl
add
jnp
rolb
icebp
lock
jo
add
loop
repnz
add
leave
jns
fs
insb
ficoms
or
add
add
rcr
push
stos
adc
push
inc
scas
pop
rcl
cmpsl
rcrl
xchg
jns
mov
dec
shrl
loopne
cmp
mov
push
dec
dec
sub
test
iret
or
sub
push
test
add
cwtl
shlb
std
mov
add
lcall
add
add
test
imul
repnz
jp
pop
inc
cmpsl
fsubs
push
mov
sbb
add
popf
mov
mov
add
add
cmp
jp
pop
aad
jae
shr
sub
iret
movb
cltd
testl
daa
fildll
dec
and
ret
mov
cltd
sbb
push
and
fcomp
xchg
sbb
std
mov
fsubrl
push
mov
pusha
sbb
dec
mov
inc
push
std
xchg
mov
rolb
inc
cmp
std
stc
push
dec
dec
or
add
push
xlat
imul
push
or
mov
ljmp
imul
push
push
mov
push
add
adc
rcr
or
insl
mov
push
adc
jb
add
mov
or
add
add
ret
sub
add
lds
ds
test
outsb
das
mov
out
push
add
stos
out
xchg
inc
out
sub
sub
xchg
pop
ret
fcomps
pop
incb
test
pop
pop
out
jg
movsl
mov
into
das
hlt
stos
push
jle
addb
pop
push
lcall
movsb
fwait
adc
inc
mov
jae
cmp
jmp
jo
and
jbe
bound
add
push
loope
jno
add
add
dec
movsb
or
roll
outsb
out
add
fcoms
in
xlat
mov
ficoml
push
dec
sub
add
mov
out
inc
hlt
inc
mov
xchg
cmp
out
lret
imul
and
add
popa
or
add
iret
jno
jg
imul
add
add
sbb
push
stos
sahf
clc
and
leave
xorl
xchg
add
sbb
pop
cmp
and
addr16
test
jo
insb
xor
mov
sbb
xor
xor
or
push
push
mov
jno
fwait
pop
sahf
int
xchg
pushf
mov
sbb
adc
mov
out
call
sbb
mov
rsqrtps
das
mov
popl
int3
sbb
mov
outsl
add
neg
stos
int3
pushf
sub
cmp
out
iret
movsl
jo
jb
lahf
and
arpl
add
pushf
mov
in
cltd
or
sbb
jmp
daa
push
movsw
dec
mov
sbb
xchg
jmp
in
sbb
and
xchg
insb
addr16
mov
out
in
push
sub
xor
inc
jnp
in
lret
sub
inc
cmpsb
lret
inc
mov
mulb
fcmovnb
dec
and
rcll
xsavec
int
loope
fdivr
icebp
push
xchg
lock
xchg
xrelease
and
and
add
mov
lock
pop
or
sbb
les
popa
in
pop
pushl
les
pusha
or
xchg
cmpsl
mov
push
pop
xchg
mov
or
mov
cmpsl
into
inc
loop
lret
pop
push
sbb
push
pop
idivl
push
rcr
repnz
repz
fcomp
sub
mov
pop
dec
shll
cmp
mov
outsl
or
jp
pop
xchg
cmpsl
mov
in
bound
mov
lock
push
dec
inc
xor
cs
cli
into
in
stos
ja
xchg
dec
out
mov
imul
mull
xchg
inc
push
ljmp
fstl
dec
jae
js
mov
add
dec
sbb
dec
xchg
add
adc
in
jae
stc
cmp
sbb
and
repz
outsl
lock
add
jae
mov
sbb
add
add
std
add
add
inc
stos
addl
lcall
lahf
fdivrs
shll
mov
shrl
scas
stc
out
cmp
pusha
add
fwait
add
add
add
outsl
cmp
shrl
adc
js
push
dec
lret
decb
pop
pop
mov
out
inc
push
pop
jg
in
mov
ljmp
or
das
sub
ja
or
xchg
cmp
mov
mov
addb
push
ljmp
or
xchg
aam
lds
adc
lock
push
sbb
inc
lods
adc
lret
out
clc
popl
leave
lock
sbb
push
test
jecxz
repz
call
scas
cmp
mov
xchg
mov
xor
push
std
xchg
mov
loopne
inc
cmp
daa
pop
pop
test
ret
bound
jp
addl
push
sub
mov
lock
in
jno
lret
jmp
cmc
pusha
add
sbb
loope
cmp
in
or
mov
pop
les
xchg
in
sub
repz
into
or
gs
pop
mov
aam
mov
fwait
aad
std
add
mov
xchg
daa
mov
mov
mov
mov
iret
cltd
inc
add
jge
sub
outsl
cmp
daa
loopne
out
sti
sahf
gs
iret
cmp
lds
lret
sarl
or
test
jge
push
lret
pop
or
mov
gs
ds
push
push
pop
into
mov
mov
lea
xor
sahf
lods
inc
mov
add
add
shr
push
dec
push
xchg
sbb
addb
repz
push
push
pushf
xchg
loop
cmp
push
arpl
out
jbe
fwait
repz
pushf
cwtl
add
jbe
les
push
xor
add
xchg
sub
cmp
cmc
jecxz
pop
addr16
add
inc
fmull
add
add
repnz
mov
jae
add
cld
push
pop
cmc
mov
add
and
dec
inc
push
sbb
add
lds
push
popa
fnsave
inc
sbb
imul
fidivrl
fdivr
push
pop
dec
pop
cli
outsb
es
add
dec
dec
lds
cmpl
adc
int3
clc
fs
add
addb
add
fidivrs
fwait
pop
pop
clc
inc
or
loopne
int3
lahf
cmp
add
fldt
add
or
push
jbe
xchg
mov
xchg
cmpsl
popa
pop
and
add
lea
add
add
inc
addr16
cli
rcrl
subb
lods
pop
icebp
pop
push
jp
in
jecxz
xor
pop
shlb
lock
cmpsl
test
lods
iret
push
in
imul
loopne
xchg
fldl
add
dec
lock
pop
push
inc
repz
cwtl
jg
fldl
lret
rorb
adc
repnz
add
adc
out
push
or
ret
sahf
pop
sub
add
popa
xor
add
and
add
mov
inc
mov
add
lret
mov
mov
icebp
out
mov
xlat
xchg
sbb
repz
jbe
add
fstl
mov
inc
fstl
xor
mov
push
pusha
xor
cli
pop
push
mov
sbb
rcl
push
pop
out
xchg
es
add
fsubrs
sbb
inc
and
add
push
and
xchg
xor
out
cwtl
add
js
mov
mov
jnp
sbb
addr16
jge
adc
adc
cmp
add
pop
stos
lret
pusha
mov
nop
cmpsl
cltd
sbbl
xor
js
out
push
je
or
in
pusha
dec
mov
add
sub
mov
sub
add
enter
add
mov
add
mov
or
lret
jne
push
cmp
adc
rcrl
inc
dec
sub
loop
add
add
roll
xlat
mov
mov
pusha
es
jb
je
adc
or
mov
xchg
imulb
add
lds
outsl
sbb
mov
addr16
and
add
imul
subl
ss
repz
add
add
aaa
adc
xor
inc
clc
int3
int3
ss
jb
mov
inc
sub
mov
mov
mov
cltd
inc
add
add
xlat
add
jne
int
faddl
cmp
add
jge
aaa
dec
movl
inc
adc
clc
lods
out
js
lods
pop
inc
into
outsb
add
add
add
xor
inc
sbb
and
pushf
dec
loop
jbe
and
xchg
cld
inc
mov
adc
aad
cmpsb
test
fs
loop
cmp
push
cwtd
test
gs
jne
mov
push
mov
lock
sub
daa
cltd
sub
xor
ja
xchg
ret
mov
gs
pushf
sub
jns
pop
inc
or
add
dec
dec
aas
dec
das
out
add
filds
add
cmp
int3
and
add
mov
jo
add
add
rcrl
add
imul
add
fisubs
xchg
pop
push
arpl
add
pop
sbb
add
jg
jle
xor
test
das
mov
push
xchg
xchg
dec
mov
dec
cmpsl
add
hlt
mov
push
add
adc
cs
subl
mov
add
add
pop
incl
adc
das
add
add
mov
loope
add
add
gs
leave
sbb
add
dec
cwtl
nop
add
adc
mov
add
lods
push
repnz
cli
outsb
cmc
into
jmp
add
cwtl
test
out
sti
push
js
ud1
mov
aam
icebp
or
push
adcb
pop
rolb
mov
stos
jno
cmp
ffreep
sbb
cltd
fucomip
adc
xor
xchg
adc
les
add
pop
inc
push
or
ret
pusha
movsl
xor
or
cs
add
jae
dec
ret
xor
mov
int3
push
sbb
or
mov
cmp
push
jbe
jae
jo
or
cmp
fwait
xlat
sbb
xchg
add
add
adc
add
mov
mov
mov
mov
or
mov
lcall
xchg
das
mov
jge
fwait
repz
mov
push
shrl
inc
sub
inc
pushf
pop
push
xchg
add
dec
movsl
aad
pop
add
or
ret
mov
xor
outsb
jne
or
jle
popf
insb
cltd
fsubs
cmpsl
lock
es
enter
fwait
sub
rolb
add
out
add
mov
mov
pop
jmp
incb
add
add
add
out
pop
sti
pop
add
cs
adc
call
stc
fwait
negb
insl
add
add
loope
mov
popf
mov
test
mov
lret
mov
dec
scas
test
add
push
inc
add
pop
lret
mov
jecxz
cmp
cmc
je
add
xchg
ret
das
popa
test
loop
add
xor
mov
mov
and
int
enter
or
push
jecxz
lods
xlat
adc
sbb
ja
sub
mov
ljmp
stos
aaa
pop
jno
loop
pop
pop
es
popa
ret
add
pop
aas
pusha
pop
inc
leave
push
sub
cmpsl
add
add
lods
jb
dec
daa
scas
add
popf
addr16
mov
and
cmp
add
and
incl
stos
cltd
pop
shlb
mov
fdivrp
add
add
add
pop
addr16
mov
jge
ret
add
add
add
jg
or
adc
add
stc
pop
sub
sbb
and
pushf
jg
ljmp
xchg
inc
cmpsl
add
add
add
add
add
mov
adc
add
inc
dec
aaa
mov
sbb
add
xchg
lret
adc
and
add
incl
mov
mov
inc
push
add
jle
out
in
mov
mov
and
cli
push
cltd
lods
adc
add
dec
inc
lods
lret
dec
sbb
adc
addr16
inc
ss
xlat
or
add
add
add
in
cltd
push
aas
push
xor
add
add
mov
dec
ret
out
fnstenv
mov
add
inc
or
rcll
fistpl
lcall
push
mov
mov
xor
xchg
test
jno
outsb
arpl
out
mov
xchg
in
cltd
add
imul
add
loop
add
iret
push
rcrb
test
popf
sub
lods
mov
pop
rcll
jns
insb
push
jmp
data16
cltd
xchg
jecxz
pop
inc
mov
inc
push
push
lret
or
ds
jb
add
movsb
pushf
loope
aad
test
ja
mov
cwtl
mov
stos
jecxz
or
and
push
call
inc
loopne
add
push
cld
cmp
pop
cmpsl
daa
lret
shll
sub
call
add
arpl
inc
add
jbe
jne
ja
cmp
cmp
rcrb
ss
mov
rorl
pop
pop
mov
pop
jo
jns
sahf
fisubl
iret
sub
xchg
out
cmpsl
add
clc
xor
daa
add
dec
add
xchg
scas
roll
add
inc
mov
xor
int
sub
icebp
push
jl
imul
incl
add
les
add
jle
insb
fs
insb
jmp
fcmovbe
or
add
add
add
xchg
pop
mov
stc
lahf
sti
adc
enter
add
out
imul
jle
pop
cmpsl
add
push
jp
xor
out
lahf
js
xchg
fwait
pop
stc
mov
sbb
add
sbb
push
sarl
data16
nop
movsb
add
lods
testb
in
sbb
cmp
mov
scas
jo
stos
jp
and
inc
lahf
push
push
jae
sbb
add
clc
cltd
loope
xor
and
mov
mov
loope
pop
add
test
ss
movsl
fsub
add
imul
shrl
add
aaa
add
pop
cmpsl
add
pop
and
fdivs
mov
xor
pop
mov
lcall
jmp
jmp
aad
mov
fisubl
pop
mov
mov
sbb
in
xchg
jae
add
add
aaa
mov
jl
repz
pop
fwait
mov
add
je
add
mov
xchg
and
sti
add
cmp
ds
addl
jle
movsl
mov
lcall
add
cld
cmpb
fwait
shl
incl
out
pushf
js
xchg
lcall
add
mov
jnp
add
out
add
jo
fbstp
ret
fdivs
jno
adc
xor
or
ja
sbb
and
add
shll
cmp
or
jno
fdivp
cmp
add
jmp
mov
daa
and
add
push
or
lds
inc
pusha
mov
mov
or
es
sbb
popf
test
mov
movsb
adc
pop
popl
fcmovnu
adc
mov
mov
adc
dec
bound
xor
dec
xchg
test
rolb
stc
out
mov
sbb
xchg
mov
pop
stos
push
sbb
pop
imul
insb
jmp
and
in
data16
pusha
lret
js
adc
icebp
add
dec
add
imul
add
add
add
call
add
mov
mov
xchg
add
mov
inc
loop
or
in
cld
iret
fisubs
fidivrl
popf
rcrl
jae
xlat
xchg
ljmp
ret
fisubrs
pushf
jns
scas
mov
pop
sbb
add
add
jns
mov
jl
and
test
add
lock
add
outsb
jl
jbe
push
cli
jo
push
fsubs
js
arpl
jecxz
pusha
xchg
mov
pop
add
addl
out
inc
inc
lds
sar
popf
int
inc
and
push
in
xchg
jge
xor
loop
out
push
dec
adc
arpl
negl
shr
jg
pop
pop
dec
xor
add
test
sbb
add
out
out
add
leave
jb
add
add
adc
int3
mov
add
add
lea
or
mov
sub
jl
rolb
add
add
add
mov
add
add
xor
rcrb
and
pop
push
int
add
in
shll
add
add
mov
add
icebp
adc
pop
enter
add
insb
cmp
cmp
test
aam
popf
add
add
cld
jnp
pop
icebp
sub
lcall
lcall
push
popa
setg
fldl
add
mov
push
mov
add
add
add
pusha
fbld
daa
pushf
add
add
fiadds
icebp
in
push
add
add
test
jbe
add
add
add
test
add
lock
pop
sub
pusha
fs
sahf
enter
add
add
pushw
jle
scas
stc
sub
lret
cld
sub
ret
pop
pop
in
adc
pop
lahf
inc
pop
push
out
xor
cli
gs
out
xor
and
scas
lcall
int
scas
cmp
loop
pop
lods
leave
inc
pusha
in
rcll
nop
sub
push
sahf
add
add
insb
int3
pop
loopne
int3
mov
add
add
pop
lea
out
leave
cld
cmp
add
inc
jb
adc
imul
add
nop
mov
jge
push
fdivs
test
add
jne
and
js
cltd
mov
in
xchg
scas
add
cmp
shlb
push
sahf
faddp
inc
cli
adc
aam
lds
add
addl
xor
xchg
cltd
test
xlat
push
out
dec
jo
sub
lods
fwait
lahf
add
add
mov
dec
js
call
dec
sbb
and
add
ja
push
mov
push
movsb
add
add
loope
pushf
mov
add
add
push
imul
add
add
push
cmpl
add
inc
push
cmc
jle
bnd
add
pop
sbb
aaa
bound
cmp
mov
adc
cmp
lret
xor
add
popl
out
cmp
or
sbb
add
add
add
add
mov
lods
or
sar
or
jg
aam
in
movsb
call
mov
addr16
mov
mov
rcll
add
and
xor
ljmp
pop
aad
jne
inc
mov
jl
arpl
dec
sub
or
lcall
enter
testb
mov
xor
repnz
lods
sub
sub
out
test
sub
xchg
mov
sbb
xchg
shr
cld
mov
jae
imul
inc
mov
add
xchg
cmpsl
std
push
push
in
mov
test
data16
add
add
sub
loope
xchg
cwtl
sahf
push
icebp
xor
int3
and
add
cld
sarl
push
sbb
mov
lock
test
ljmp
loopne
shr
fdivs
bound
sub
lea
neg
lock
mov
stos
and
cs
xor
jne
mov
imul
movl
mov
lahf
std
jl
mov
add
add
iret
inc
nop
xchg
lods
push
stos
pop
hlt
jge
and
sbb
jns
mov
inc
cld
stos
mov
stc
arpl
fldl
add
aas
setne
xchg
outsl
imul
popf
dec
sbb
dec
ret
es
lcall
mov
lret
xor
sub
rsm
pop
add
add
adc
push
push
imul
mov
loop
mov
mov
mov
jo
jb
mov
call
sub
ficompl
test
orb
in
repz
js
add
or
or
lods
xlat
test
sbb
popf
test
inc
shll
pop
cwtl
ret
movsl
pop
shlb
dec
pop
cli
mov
xchg
mov
ret
add
xchg
aaa
dec
divl
jbe
add
add
xlat
cmc
lahf
mov
add
in
dec
into
mov
mull
dec
sbb
sbb
mov
dec
push
sahf
inc
outsl
xchg
add
add
mov
dec
sub
pop
sub
stos
cs
lret
adcl
xlat
icebp
shrl
xchg
add
les
mov
sbb
stc
addr16
cmp
add
dec
sbb
cmp
fsubr
imul
rorl
dec
push
push
out
mov
in
xchg
lcall
pop
lret
rclb
fists
add
out
jb
add
add
jne
pop
popf
sbb
clc
cmc
test
loopne
movsl
dec
jmp
into
ja
out
xor
shll
add
add
stos
stos
repnz
sbb
or
adc
cwtl
push
add
cli
sub
scas
xor
sub
xor
add
scas
cmp
mov
out
add
add
jnp
loope,pn
add
push
add
add
inc
dec
lods
push
std
add
add
lahf
push
pushf
loopne
addb
add
push
mov
add
nop
cmp
xor
mov
out
mov
add
inc
pop
lret
cmc
jl
add
add
add
sti
xlat
cld
add
jmp
sub
fildll
imul
out
imul
sub
and
out
add
cmc
push
adc
add
mov
add
cld
xlat
fadds
xchg
mov
mov
push
jo
add
mov
mov
lock
jg
dec
data16
add
js
dec
mov
or
bswap
dec
mov
fwait
dec
add
sub
sub
in
into
in
add
lds
jle
jns
in
push
jge
adc
and
jmp
ss
mov
xor
add
push
lret
outsl
jle
inc
addl
cmp
rcr
into
mov
adc
faddp
dec
adc
lcall
sub
in
hlt
mov
add
push
sbb
mov
add
filds
rcll
add
lret
add
test
add
mov
scas
pushf
or
xor
inc
xor
out
add
add
jae
add
add
inc
or
clc
or
outsl
mov
in
add
ret
arpl
xlat
sar
add
addb
ja
psubw
mov
inc
inc
pop
cmp
push
aas
pusha
add
mov
lods
cmpsb
pop
xchg
or
clc
int3
int3
ss
jb
or
test
mov
imul
or
loope
push
cltd
cmp
add
jo
pushf
xchg
add
shlb
pusha
test
sbb
ret
mov
punpckhbw
roll
add
push
cmpsb
add
jb
iret
sub
xchg
inc
test
cmp
add
add
add
add
cwtl
dec
pop
inc
test
sbb
rcll
test
sti
rcr
pusha
sbb
mov
add
or
add
mov
add
pop
das
add
daa
mov
sub
add
add
xchg
add
add
and
sbb
mov
add
mov
jl
sub
mov
loopne
mov
in
push
dec
inc
arpl
or
in
les
cmpsl
add
add
jle
movsb
mov
js
mov
add
add
lcall
cli
mov
je
xor
sbb
dec
pusha
mov
mov
insl
dec
aaa
jbe
mov
movsl
jns
dec
ret
mov
sub
fldcw
nop
xchg
daa
adc
add
add
cmp
ja
sub
mov
push
dec
or
cmp
fisttps
mov
out
add
push
jae
or
jnp
add
js
out
in
lret
aad
add
sub
push
cmp
movsl
cmpsb
in
sub
push
xor
dec
or
mov
test
add
add
jae
mov
push
sub
push
sti
pop
cmc
jg
cld
push
or
out
push
adc
cltd
jge
sbb
jle
out
xchg
cltd
in
ss
jle
xchg
mov
add
mov
mov
inc
insl
sub
pushl
or
idivb
jno
xchg
jmp
aaa
push
movsl
mov
ds
lret
add
add
cwtl
out
dec
inc
or
rcll
sub
popf
aaa
add
js
rorl
cwtl
mov
loop
iret
pop
ljmp
sbb
scas
or
lods
jb
push
daa
push
mov
mov
daa
dec
jo
push
nop
jb
cwtl
add
add
iret
mov
sti
pop
mov
mov
pop
fs
ret
add
adc
or
insl
xor
rolb
add
jno
roll
add
push
lock
push
or
and
std
stc
scas
adc
mov
imul
les
mov
push
clc
and
add
ja
dec
rolb
add
inc
divb
mov
clc
test
jl
sbb
test
mov
stc
xchg
lahf
loopne
test
jle
mov
test
add
and
imul
mov
mov
movsb
xor
xor
dec
shrl
jge
add
add
adc
stos
les
adc
adc
popf
cmp
scas
sub
push
sahf
rorb
enter
pop
jb
cltd
outsl
rcll
add
cmp
cmp
addr16
xor
jmp
add
jno
imul
push
push
mull
push
hlt
sbb
int
add
lcall
adc
adc
imul
jl
sub
ficompl
or
out
stc
dec
xchg
rcrb
mov
mov
cltd
or
jno
mov
adc
ss
jns
loop
insl
shl
lds
mov
adc
add
imul
push
ja
xchg
push
out
and
add
add
stos
jo
adc
dec
sbb
sub
xor
mov
icebp
xor
int3
sub
aam
add
lock
jae
mov
repnz
fnstsw
pop
into
jae
outsb
mov
and
shrb
or
xchg
cmpb
cmpsb
int3
test
mov
into
inc
pop
addr16
insb
and
jge
fwait
loop
fldt
add
rcrb
in
in
fs
iret
stc
jecxz
pop
loopne
test
mov
and
outsl
fs
jg
lock
and
and
push
test
lock
ret
icebp
arpl
arpl
dec
cmp
pushf
pop
addr16
add
mov
lods
jle
shr
cwtl
icebp
push
add
push
and
adc
add
insb
fwait
mov
std
dec
repnz
and
ss
push
and
in
cmp
sub
dec
or
cmpsl
jmp
cmp
mov
dec
jecxz
jns
push
push
or
inc
adcl
mov
mov
pop
cmp
in
pop
jle
in
add
xor
movsl
mov
cltd
in
test
inc
push
add
insb
add
add
and
cld
out
dec
repz
mov
sub
mov
mov
mov
adc
and
add
fwait
dec
addl
adc
pushf
adc
subb
add
add
sbb
inc
shrb
shlb
in
sbbl
enter
ds
inc
inc
lock
shlb
add
adc
js
in
pop
sub
and
add
mov
insl
xchg
mov
sbb
add
add
mov
lcall
pushf
push
or
push
scas
xor
movsb
push
mov
adc
fdivl
cmpsb
shrl
insl
call
xchg
push
xchg
daa
add
add
xchg
imul
sbb
push
pop
pop
push
inc
jb
shrl
clc
out
mov
jnp
xchg
cwtl
gs
xor
pop
jmp
mov
add
mov
out
sbb
pushf
jnp
and
push
rclb
enter
fldt
stos
in
imul
jne
stc
test
fdivs
add
add
jmp
cwtl
pusha
addb
add
mov
push
xor
mov
push
add
cmp
ret
inc
jmp
add
mov
push
out
mov
fldl
add
sti
es
pop
add
add
cmp
popw
jo
ja
loop
ljmp
push
pop
xorl
push
imul
jg
fisubl
xchg
add
movsl
in
call
push
imul
mov
gs
add
mov
dec
js
movsl
add
sub
mov
fnstcw
inc
jecxz
pop
pop
icebp
add
imul
add
das
pop
mov
mov
mov
sahf
outsb
pop
lcall
mov
add
add
add
add
insb
pop
mov
popf
jne
fiadds
add
add
cmp
sbb
rorl
repz
fcmovnb
ret
je
fisubs
stos
xlat
rcl
mov
and
mov
xor
mov
lods
add
pop
jo
cmpsb
add
pop
mov
aad
loopne
add
add
add
cli
adc
jbe
push
in
add
add
and
call
out
pop
push
lock
add
add
cmp
mov
adc
call
pop
xlat
sbb
jno
imul
ret
outsl
arpl
into
jno
lcall
mov
xor
add
add
pop
sub
xor
in
sub
dec
or
cmpl
mov
add
rorl
pop
push
mov
mov
mov
ljmp
idivl
push
lahf
add
jmp
fdivrl
cmpl
mov
mov
add
sub
add
arpl
outsl
mov
in
or
cmp
xor
enter
jo
sub
cmp
add
mov
icebp
mov
cmp
and
add
xchg
mov
out
ss
inc
add
les
push
cmpsb
cltd
sub
jmp
sbb
aam
mov
je
cs
inc
mov
lods
arpl
pop
adc
mov
movsl
cltd
call
mov
in
lock
xor
pushf
push
rcrl
test
movsl
push
in
adc
pop
in
rorl
aam
cmp
hlt
imul
or
lods
pushf
adc
dec
out
mov
or
stos
jnp
rcr
mov
pop
out
or
push
add
popa
jb
fistpll
gs
test
inc
jae
add
or
add
add
icebp
mov
dec
mov
stos
or
or
dec
mov
lock
frstor
add
add
out
lret
and
push
ds
int
add
mov
hlt
stc
add
lds
xor
push
lahf
fdivp
sahf
and
add
pop
ss
into
pusha
adc
jg
push
in
adc
mov
pop
mov
inc
pushf
sub
popf
decb
loope
push
add
add
dec
cmpsb
jp
stos
dec
cld
add
jecxz
sbbb
add
lret
dec
out
xchg
popf
push
lret
pusha
movsb
push
bound
in
sbb
es
dec
sub
shl
jmp
insl
jl
dec
gs
push
sub
jmp
sahf
push
mov
aaa
mov
testb
xorb
nop
or
fidivrl
pop
div
lahf
int3
pushf
mov
mov
add
scas
pcmpeqb
lahf
mov
cmp
inc
xchg
in
jae
cmp
dec
inc
push
dec
popf
jns
out
jge
ficoms
adc
roll
add
fcom
lret
pop
inc
lea
addr16
lahf
repnz
sub
lcall
mov
add
add
sti
adc
test
xchg
push
stos
inc
into
aam
out
or
call
sbb
adc
rclb
arpl
mov
and
sti
pop
jl
xchg
fiadds
negb
test
bswap
or
pop
mov
icebp
mov
out
sub
add
dec
cli
test
jg
inc
shll
push
add
pop
in
cmpsb
enter
mov
sbb
sub
sub
push
loope
and
in
lcall
mov
sbb
add
adc
push
push
and
call
hlt
test
das
mov
push
stos
in
xchg
jp
add
add
add
arpl
sub
nop
ds
sbb
and
xor
loopne
popa
jb
aaa
cmp
aas
fcmovne
ror
push
or
stos
sub
or
mov
add
sbb
sbb
jg
mov
mov
add
pop
bound
add
in
scas
push
sub
and
inc
xor
add
push
popf
sarb
jl
xchg
fs
jge
jge
add
add
inc
lcall
xchg
add
fs
clc
xor
push
test
aad
pushf
iret
add
push
lods
cmp
xchg
adc
cs
mov
add
push
cmpsl
enter
add
inc
sub
pusha
dec
add
fwait
test
jno
sti
pushf
in
cmc
hlt
mov
shrb
sub
push
mov
daa
mov
pusha
fimull
das
add
add
add
pop
pop
inc
mov
adc
xchg
insb
xchg
mov
lcall
imul
testb
inc
mov
push
sldt
add
lcall
add
push
pop
or
jno
outsb
mov
sbb
add
add
shll
rcll
push
test
flds
cmpl
add
test
add
fists
push
xor
pop
xor
xlat
xor
jmp
add
stc
add
sbb
push
nop
shl
lock
mov
cmpsl
jno
cmpsb
test
adc
mov
add
js
in
int
dec
mov
sub
add
pop
xchg
push
dec
or
add
ja
insl
enter
jecxz
mov
xor
fs
mov
hlt
dec
push
inc
cltd
sahf
mov
dec
xor
mov
jnp
dec
ret
inc
mov
push
out
sub
fwait
bound
add
add
insb
pop
stos
into
xor
push
xor
dec
jne
add
test
add
mov
dec
mov
imull
jae
add
mov
movsl
pop
enter
roll
fldl
lahf
fisttps
pop
testb
push
icebp
test
or
in
add
add
mov
xchg
jmp
and
jae
add
add
or
inc
clc
mov
out
sub
add
out
jl
test
jno
sahf
add
pusha
mov
add
cmp
or
mov
je
and
xor
iret
insb
and
cmp
jb
push
sub
ss
sub
int
cmp
mov
scas
shrb
dec
mov
aad
push
and
ficompl
fucomip
jne
sub
mov
lret
xor
and
testb
push
or
icebp
adc
mov
mov
pop
mov
add
add
mov
and
mov
outsb
pop
mov
outsl
invd
xchg
aam
pop
push
adc
xlat
sbb
or
inc
sub
shrl
fs
negl
add
sub
xchg
inc
roll
jnp
xlat
fidivs
shrb
pop
mov
shl
push
mov
jmp
pop
sbb
cmp
scas
mov
clc
push
ret
cmp
test
shll
add
jne
inc
data16
clc
cmpsl
push
add
fcomps
pop
fdivrl
ret
test
movsb
cwtl
cld
mov
xor
mov
repz
add
mov
aas
add
sub
outsl
lock
pop
movq
cmpsb
mov
cmp
fiadds
sbb
fwait
jbe
add
add
jl
mov
add
add
jge
add
repz
mov
xor
lods
xor
sbb
add
std
les
dec
ljmp
cmpsl
cs
add
add
add
call
mov
sahf
in
add
add
lock
cmp
lea
filds
adc
add
add
xchg
mov
mov
or
add
xor
mov
bound
add
push
xchg
xchg
inc
push
xor
ds
hlt
int
outsb
jno
pop
inc
neg
mov
lock
xor
les
aas
or
mov
lcall
rcl
cltd
lret
jg
jo
add
shll
sbb
push
jl
lods
insb
lods
mov
fldln2
insl
jno
mov
lock
leave
xchg
cmpsb
pop
xlat
push
mov
sbb
std
mov
mov
sbb
adc
jnp
mov
out
inc
pushf
push
jmp
adcl
inc
ljmp
into
ja
mov
sub
mov
jecxz
jb
mov
add
scas
jmp
mov
scas
mov
jo
and
loop
mov
lods
scas
cs
xor
sub
mov
in
xchg
or
mov
aad
xor
fwait
pop
ret
pop
les
out
jl
xchg
jecxz
mov
into
or
jbe
add
mov
lods
cld
dec
fmuls
lcall
mov
and
xchg
push
add
lcall
arpl
cmp
in
mov
cltd
inc
aad
das
add
mov
dec
lret
add
sbb
dec
daa
jns
mov
and
add
jp
sbb
add
pop
jle
mov
shll
push
add
sbb
outsb
sub
inc
mov
scas
push
je
add
add
inc
mov
add
cmp
pop
jmp
sbb
incl
pop
cwtl
jno
xchg
lahf
mov
std
fucomp
mov
fdivrl
adc
imul
clc
add
sub
dec
cmc
subb
and
jb
cmpsl
sub
mov
inc
inc
push
aad
out
ss
xlat
or
in
loopne
icebp
xor
mov
and
pushf
hlt
in
and
rolb
add
adc
dec
ss
jmp
or
cmpsb
xchg
out
lds
sub
push
test
and
mov
cmpl
inc
dec
add
add
cmp
shl
dec
fstpl
push
mov
inc
sbb
xlat
sub
out
arpl
fisttpll
jp
gs
test
pop
mov
push
cltd
cwtl
repz
out
std
dec
std
lods
push
adc
loop
jbe
nop
lods
lods
cs
inc
jae
push
stos
test
cli
inc
xchg
push
fdivl
rorl
mov
stos
add
add
loope
xor
ja
sbb
pop
push
lret
mov
sbb
sbbb
dec
add
xchg
add
movsb
lcall
push
inc
cmpsb
jnp
mov
mov
ja
leave
mov
in
xor
sbb
aaa
add
add
jns
js
fldt
lret
iret
xchg
pop
aam
xor
push
add
gs
cli
in
shl
lds
dec
push
xchg
add
dec
outsb
out
addl
popa
mov
loop
pop
aad
jle
add
or
push
jp
data16
movb
lods
pop
xchg
cwtl
add
adc
test
add
add
fildl
inc
add
test
call
fwait
mov
cmp
xchg
cwtl
xchg
sbb
add
lret
push
and
cmpsb
inc
vpmullw
xchg
cmp
and
in
add
pusha
enterw
jnp
lret
repnz
sub
xchg
icebp
or
movsb
pop
aad
sbb
fdivr
push
xchg
jg
xchg
cs
pop
push
adc
cmp
loop
jecxz
mov
loopne
in
ret
leave
sbb
adc
int
or
test
lcall
add
add
dec
dec
xor
and
adcl
dec
aad
mov
pushf
pop
inc
negl
cmpsl
mov
add
fld
in
addl
mov
pop
rcrb
mov
xchg
cli
jmp
push
jo
add
inc
push
push
xchg
dec
jle
adc
test
cli
call
mov
mov
or
bound
mov
add
add
xchg
sub
pushf
xchg
adc
xchg
xor
popl
jns
pop
sub
add
push
xchg
std
xchg
and
cs
lahf
jns
add
mov
bound
pop
sti
xor
repnz
xchg
add
add
fldenv
inc
addr16
sub
lods
add
add
shld
imul
leave
mov
or
fs
mov
mov
and
cli
add
icebp
mov
add
add
out
or
ret
lret
pushf
leave
movsb
icebp
pop
stos
icebp
cmp
adc
or
and
arpl
cmpsl
add
arpl
mov
outsb
cmp
loope
add
jne
pop
ss
sbb
shll
add
pop
mov
jge
adc
ja
sbb
test
imul
lock
dec
jnp
in
adc
sahf
repnz
ret
mov
mov
cli
pop
push
adc
lods
jl
cmp
aam
sbb
push
lods
and
add
ljmp
fs
mov
push
inc
xchg
pop
sti
xchg
jg
out
out
jae
cli
and
mov
push
sbb
pushf
rorl
sub
push
cmp
sub
pop
fldenv
insb
pushf
iret
sbb
pop
subb
xor
jo
hlt
roll
mov
mov
dec
inc
inc
les
jb
imul
pop
or
mov
in
ret
adc
aas
or
daa
dec
sbb
into
xchg
jns
sahf
mov
mov
push
rcrb
add
jne
pop
ss
sbb
test
mov
xchg
lcall
arpl
dec
lahf
lods
jae
dec
call
test
push
jl
pushl
adc
rolb
insb
add
push
lock
xchg
xchg
mov
cmp
inc
stc
push
stos
cmp
add
xor
mov
inc
rolb
cmpb
and
sbb
add
add
add
cmp
pop
int3
add
push
outsb
stc
imul
in
pusha
orb
jge
push
sbb
mov
adc
mov
adc
jl
sub
stos
in
inc
push
pop
popf
cs
punpckhdq
add
test
jmp
mov
and
popf
xlat
xor
sahf
adc
push
mov
int
add
or
mov
mul
ds
add
add
fs
addr16
inc
out
test
jecxz
xchg
xchg
sub
cmp
jle
pushf
hlt
inc
and
adc
add
sysret
dec
inc
rorl
push
ss
mov
add
or
xor
loopne
dec
fisttpl
push
sbb
cmp
xchg
insl
mov
xchg
fwait
or
cmc
mov
dec
push
cmpl
out
outsb
sub
mov
in
push
mov
fwait
and
sbb
lret
jmp
push
jnp
cmp
fsubrs
loop
stos
cs
push
mov
mov
stos
sbb
push
bound
cmpsl
je
aaa
and
mov
xchg
sbb
in
mov
inc
mov
jecxz
test
ds
sub
push
or
loopne
push
call
push
sub
ret
sahf
out
roll
pop
pop
pop
adc
addr16
mov
adc
fadd
mov
fidivrs
stos
icebp
leave
lods
mov
ds
adc
dec
add
stos
xchg
mov
test
ret
inc
jle
mov
cmpb
inc
xor
xor
adc
ror
fcomps
out
jns
add
add
rcrb
add
add
pop
cmp
add
pop
mov
cmp
add
add
ret
add
pop
popf
inc
outsb
xor
add
add
pop
adc
dec
pushf
add
add
addl
add
pop
and
add
jnp
sbb
add
add
cwtl
pop
testl
pop
setnp
test
test
lahf
push
xchg
pop
cs
push
fsts
in
mov
stos
in
and
repnz
mov
mov
xchg
add
sub
pop
mov
xor
call
adcl
pop
in
mov
es
pushf
frstor
xor
mov
push
mov
adc
inc
jae
dec
jge
adc
mov
cmp
adc
das
scas
and
lock
add
inc
ret
mov
inc
cmp
add
push
dec
out
adc
out
out
add
adc
hlt
push
pop
inc
inc
dec
aas
cmp
add
jb
pop
je
adc
stc
out
loopne
imul
mov
ds
add
mov
orb
pop
jo
test
out
int3
sbb
mov
xlat
mov
mov
adc
testb
push
sbb
test
cmpsb
das
xchg
sub
xchg
xor
call
test
xchg
cmpsl
cmp
xchg
cmp
mov
ss
into
pusha
adc
jg
adc
sbb
mov
mov
mov
or
out
sbb
mov
xchg
mov
push
xchg
sub
mov
hlt
outsb
cmpsb
int3
jns,pn
lcall
cmp
insl
mov
xchg
test
and
add
add
pop
cs
and
iret
popa
shr
adc
sbb
add
add
inc
xchg
fcmovbe
inc
xchg
sahf
pop
xor
int
jecxz
adcl
xor
dec
dec
icebp
add
arpl
in
pop
jg
js
addr16
lahf
pop
dec
imul
xor
lret
cmc
aad
add
into
xor
test
fwait
imul
sub
repz
incl
pushf
adc
js
mov
dec
push
inc
shlb
leave
sbbl
add
add
test
cmpsl
xchg
and
add
in
add
add
push
add
push
ss
cltd
sbb
cmp
pushl
leave
adc
mov
add
push
stos
adc
negl
popf
or
mov
fisttps
add
add
fwait
andb
sti
push
lock
inc
dec
sbb
aam
testb
add
sub
movsb
add
aam
xor
mov
adc
aaa
mov
movsb
adc
repnz
std
sbb
scas
dec
gs
push
aas
pop
out
icebp
ret
mov
ja
cld
add
testb
push
fstps
dec
addr16
lret
scas
jns
xlat
imul
cmp
loopne
shlb
sbb
add
fimull
arpl
jae
addl
bound
push
pusha
cmpsb
pop
fadds
sbb
add
stc
mov
jg
movl
cltd
jle
add
and
add
ds
add
in
or
xchg
adc
inc
jnp
sbb
lods
roll
xor
pop
pop
mov
gs
addr16
mov
das
cmp
div
test
insl
rcll
add
mov
shlb
icebp
push
mov
add
popa
add
xorb
in
mov
inc
mov
mov
jae
pop
sti
out
cmp
adc
dec
cmp
mov
xor
dec
adc
lds
add
into
dec
inc
inc
bound
or
mov
cmpsl
sbb
xchg
add
imul
add
add
xor
xchg
rolb
xchg
scas
outsl
imul
mov
lods
shr
push
add
out
sub
jne
add
add
jle
jae
out
cmp
push
testl
sbb
adc
add
or
dec
mov
testl
bnd
mov
out
loope
lods
xchg
push
pop
add
repnz
mov
lock
jmp
add
les
addr16
sbb
pop
test
mov
faddl
adc
adc
pop
push
mov
loopne
xlat
mov
out
stc
jp
dec
mov
ret
leave
rorb
push
mov
mov
add
fprem
add
xor
loop
xchg
mov
xchg
mov
stos
and
add
imul
dec
inc
push
insb
pop
leave
push
inc
inc
in
cs
leave
das
dec
test
inc
jo
cmpsb
lahf
sti
nop
jg
stos
nop
xor
pop
insl
mov
fisttpl
adc
mov
daa
test
fcmovu
inc
mov
adc
add
aas
rcrl
pusha
add
or
mov
shlb
add
fcomi
push
jl
fsub
push
les
sub
push
and
add
jge
and
xlat
lahf
mov
testb
xchg
adc
repz
inc
push
pop
loope
test
and
xchg
cltd
xchg
xchg
adc
xor
push
out
ja
add
mov
sub
push
filds
jns
cmp
fidivrl
pop
test
and
add
hlt
add
rcrb
fstps
insl
ret
xchg
add
jg
cmpsl
lea
daa
jnp
ds
into
jne
scas
je
add
xchg
insb
or
js
pop
dec
adc
cs
cmp
inc
and
dec
jp
dec
addr16
mov
xchg
cwtl
call
xchg
push
add
add
add
cmc
adc
adcb
arpl
and
ljmp
add
mov
outsl
jbe
sub
scas
cmp
mov
inc
jge
push
xor
testb
dec
dec
icebp
and
roll
push
xor
shlb
out
out
xchg
jp
les
fwait
scas
filds
add
or
jmp
mov
sti
cli
mov
mov
loope
les
aad
mov
test
mov
push
xchg
mov
mov
push
and
mov
xor
cmc
and
add
out
add
add
cld
mov
jae
pop
xchg
and
negb
cmp
adc
xor
repz
cmpl
add
jns
or
push
in
inc
cmp
xor
fwait
sub
add
push
mov
adc
dec
test
adc
or
ud2
test
add
lock
stc
mov
or
add
sbb
test
mov
add
ljmp
lahf
testb
dec
popa
arpl
ds
jmp
or
jle
push
fsub
or
lret
sub
add
fwait
stos
test
xor
xor
inc
push
lods
add
add
cmp
cmp
add
add
fnstcw
aaa
pop
roll
add
or
cmp
mov
and
sub
stos
pop
sbb
add
or
dec
andb
add
xor
mov
cld
mov
add
fidivl
jmp
pop
xchg
add
inc
mov
in
or
adc
lock
fisttpl
inc
mov
aaa
mov
add
add
pop
pop
mov
mov
pop
xchg
push
mov
xlat
fnstenv
stos
push
jno
xchg
repz
daa
inc
fcoml
inc
add
add
test
pop
arpl
je
push
cmpsl
lret
int
cmp
test
or
xor
or
cmpsl
lret
push
cmp
push
sub
out
in
jle
mov
lock
add
or
mov
fwait
pop
adc
mov
inc
dec
push
mov
dec
mov
pop
addr16
xor
pushf
mov
mov
mov
pop
lahf
xchg
gs
pop
mov
cmp
sbb
clc
pop
or
add
push
xchg
inc
fldenv
fwait
dec
add
sub
faddp
xor
movsl
jmp
xchg
mov
xchg
ficomps
lock
mov
stc
xlat
aas
imul
jae
loope
xchg
sub
hlt
add
lds
add
add
mov
mov
vmulps
push
pop
or
add
add
insb
xor
add
lcall
mov
gs
lods
cmpsl
loope
jg
and
sbb
enter
addl
jo
cmpsl
jb
and
mov
test
jno
fsubrl
sbb
fstl
sub
outsb
mov
out
jmp
dec
scas
jb
shrl
fucom
in
addr16
add
dec
test
add
jmp
rcll
stos
negb
or
test
int3
int3
int3
popf
mov
adc
push
movsl
xor
sbb
inc
rolb
mov
and
out
fcomps
cld
sub
aas
push
or
or
pop
mov
jmp
or
jnp
ds
mov
pop
insl
int3
pop
roll
es
jecxz
add
adc
mov
ja,pn
mov
add
ss
jae
outsb
rorl
dec
fstl
push
xlat
jg
pop
push
inc
dec
enter
sti
sarl
mov
mov
and
xchg
xor
lods
add
pop
sbb
mov
cli
xor
mov
sbb
mov
lcall
dec
lret
inc
rolb
xchg
mov
push
cld
and
push
addr16
in
iret
fucomip
sbb
out
jo
dec
sub
test
or
mov
fnstsw
int3
push
sub
dec
xor
lea
out
jno
add
add
xchg
clc
push
iret
mov
dec
inc
jle
fadds
push
add
xor
loope
leave
mov
outsl
leave
lret
icebp
mov
add
ret
xchg
iret
lds
scas
mov
ror
jecxz
push
lret
push
push
add
add
sbb
mov
ds
mov
add
lds
sahf
sub
mov
add
mov
pop
lsl
inc
stc
mov
xchg
push
mov
icebp
sbb
jmp
jecxz
fwait
std
out
sti
out
and
sub
mov
call
shlb
cmp
inc
and
bound
add
and
out
pop
nop
push
jmp
inc
push
adc
cmc
xchg
ljmp
aaa
adc
fidivrl
fwait
loopne
pop
jbe
test
imul
adc
cltd
test
jp
push
mov
or
xchg
adc
cmp
pop
mov
jae
popa
pop
and
dec
push
pop
adc
mov
xchg
jmp
adc
test
jne
and
or
icebp
ljmp
lcall
mov
xchg
into
fcmovbe
int
jnp
add
add
add
add
aas
mov
add
fwait
inc
rorl
test
or
dec
sub
add
mov
add
dec
into
adc
ljmp
out
fst
es
shl
inc
dec
sahf
cmpsb
dec
pop
dec
mov
push
mov
jp
xchg
sbb
jg
push
fsubl
add
hlt
add
jae
cmpsl
cs
xor
pop
inc
aam
leave
jg
pop
mov
xchg
dec
inc
dec
add
cwtl
rcrb
pop
dec
xor
jmp
inc
dec
lods
das
sub
jnp
inc
cmpsl
std
das
sbb
popf
stos
fisubrl
cmp
loope
or
arpl
push
into
cmp
sbb
cmp
push
loopne
sub
cmp
inc
bound
add
push
fldt
insl
jo
mov
repz
ret
mov
inc
ret
inc
movsb
cmc
xchg
xlat
test
add
ret
mov
cmp
mov
xlat
out
mov
movsb
pop
out
lock
shrb
dec
gs
sbb
sbb
cmp
cmp
int
add
dec
adc
cmp
add
movsl
aas
pop
and
and
add
xor
add
pop
sub
cmp
add
mov
fs
adc
clc
into
jne
xchg
lea
add
lea
add
add
shll
mov
or
mov
call
and
lock
sbb
adc
pushf
movsb
or
sub
and
std
fldenv
faddl
jns
movl
fists
insb
outsl
pop
insl
stc
fucomi
mov
jbe
insb
jmp
push
lods
mov
push
cwtl
mov
cmp
dec
cmp
add
js
mov
pushf
sub
popf
adc
jns
rcl
jl
xor
xor
in
xor
jg
aas
sarb
popa
pop
jp
sbb
clc
aaa
out
outsl
pop
in
jo
mov
aam
pop
xor
pop
jmp
das
outsb
adc
in
push
cmpb
or
and
adc
add
xchg
adc
lea
iret
push
testb
andl
dec
pusha
lock
mov
inc
sub
push
inc
jge
fsubr
mov
mov
mov
ljmp
nop
jno
notl
pushf
ljmp
or
aam
mov
inc
mov
out
mov
lock
out
fidivl
inc
rclb
fwait
sub
je
mov
push
pop
mov
in
aaa
add
xchg
out
jns
mov
push
cmp
pop
fst
aaa
mov
scas
test
imulb
mov
test
xor
in
push
and
mov
push
or
xchg
push
jmp
aaa
push
lea
test
pop
in
push
inc
mov
aas
mov
clc
jb
pop
es
shrb
ljmp
cmp
mov
xor
cmp
call
popf
int
add
and
mull
xchg
pop
pop
dec
sbb
mov
call
and
xor
mov
mov
cmp
call
or
rolb
sti
call
ja
adc
movsb
test
arpl
pop
mov
sub
adc
add
push
icebp
or
jecxz
add
mov
aad
in
jg
ja
inc
aad
scas
xlat
shrl
add
xchg
jnp
cli
jl
jnp
out
pop
mov
bound
aam
mov
pop
ss
into
pusha
adc
jg
fiadds
adc
js
stc
mov
pop
pop
pop
leave
jle
fwait
push
push
add
mov
mov
push
pop
mov
xor
jnp
add
mov
pop
and
daa
cmp
shll
fwait
dec
lea
insb
add
add
ret
add
inc
inc
inc
ds
push
js
out
mov
xor
out
sbb
add
dec
jl
adc
stos
dec
fdivrl
and
insb
xor
add
add
mov
jl
xor
lret
cmp
cmc
pop
xchg
pop
mov
fistps
ljmp
out
cli
loopne
mov
cmc
loopne
lcall
add
test
notl
add
push
add
add
and
in
jns
push
pop
mov
or
jo
jmp
ret
cmp
test
inc
cltd
hlt
test
test
stc
xchg
test
sub
aam
lods
cmp
dec
inc
jge
inc
push
cltd
repz
jge
push
repz
std
mov
xor
add
adc
sahf
add
aaa
pop
add
push
inc
add
sbb
add
push
pop
add
mov
jnp
xor
testb
or
add
psubb
or
add
cmpsl
cmpsb
add
cmp
stos
pop
stc
add
movsb
add
sti
add
cwtl
fiaddl
push
add
add
xchg
pop
add
push
add
add
in
pop
out
dec
add
mov
fdivrp
xor
add
mov
add
rorb
pop
push
add
outsl
push
add
popf
xchg
add
lret
fldt
mov
add
lea
add
ror
add
xchg
sbb
addb
add
jmp
add
xchg
add
mov
add
bound
pop
xor
add
adc
push
fucom
add
insl
mov
sbb
test
in
lea
enter
mov
mov
dec
add
add
shl
dec
mov
lods
popf
rcll
jmp
sub
sbb
sub
scas
add
xchg
push
mov
aas
add
add
add
lock
jg
push
xchg
push
sub
add
add
cmpsb
or
xor
adcb
xor
mov
mov
mov
adc
fcompl
pop
mov
inc
in
andb
xchg
add
add
add
lret
cmpsl
insb
cmpsl
dec
sub
mov
jo
sbb
push
movsl
cs
and
sbbb
fdivr
cmp
shll
fdivrs
fwait
adc
push
scas
pop
sti
stos
sbbl
jb
test
push
arpl
aas
call
out
js
jne
push
sbb
test
mov
pushl
add
in
rcl
movsb
jae
mov
rcrb
inc
pop
jbe
leave
dec
push
bound
jno
insb
jo
sub
sbb
xchg
jbe
sbb
add
add
add
sarb
movsl
daa
lret
clc
or
nop
sti
xlat
inc
push
add
mov
aam
mov
mov
add
push
sub
cs
cmp
push
mov
movsb
mull
sbb
cmp
push
jns
inc
mov
or
shll
leave
repnz
outsb
hlt
gs
push
je
mov
insb
enter
cmp
or
cmp
inc
xchg
mov
popf
push
cld
sbb
fstpl
ficompl
negb
mov
rcl
pop
fiaddl
sti
adc
rcrb
or
mov
push
adc
or
cmp
lahf
loope
dec
mov
cmp
aam
add
and
test
pushf
push
loop
adc
lcall
jle
xchg
mov
ret
cs
cwtl
dec
leave
ss
add
or
jns
fnstenv
dec
gs
adc
mov
or
loopne
addl
rorl
mov
push
in
cmc
mov
fwait
mov
pop
or
add
insb
outsb
dec
je
pop
jmp
inc
mov
mov
rorl
mov
fwait
sbb
jecxz
daa
ljmp
mov
je
push
pop
or
lock
push
push
les
sbb
inc
in
hlt
das
mov
pusha
inc
lret
pushf
jo
orb
pop
lods
xor
fcoml
popf
add
dec
pop
xchg
in
xor
rcr
lea
cltd
push
xchg
add
or
xchg
sbb
aaa
jp
call
imul
and
andb
lahf
mov
mov
adc
cmp
or
add
add
test
popa
scas
or
sbb
out
fwait
mov
jo
ret
pop
scas
dec
dec
cmp
rclb
aam
inc
shll
data16
es
or
hlt
push
add
add
jno
das
inc
or
adc
call
xchg
roll
div
dec
mov
add
pop
insl
out
push
cmp
cmpsl
jnp
sub
add
add
mov
jle
push
das
cmpsb
das
stos
pop
jns
adc
cmpsb
xchg
adc
and
divb
xchg
jne
add
add
out
sub
push
or
xchg
sbb
stc
jl
andb
push
lcall
add
xchg
inc
rorl
jge
lods
add
add
test
or
cmc
les
test
push
fwait
adc
pop
out
mov
int3
fwait
xchg
push
jle
or
stos
imul
scas
pusha
outsb
cmp
add
add
mov
ret
dec
or
or
insl
adc
mov
out
dec
pop
cmpb
add
add
add
mov
jmp
das
lds
and
push
dec
ss
cmpsl
dec
iret
ret
cmp
push
adc
icebp
mov
add
add
inc
sub
mov
jmp
lret
lods
or
cli
or
pop
test
inc
cld
mov
push
lock
mov
mov
dec
cmp
add
adc
push
lods
fld1
cli
jno
je
sahf
dec
jg
cmp
pop
jge
push
pushf
cmp
gs
inc
int3
sub
loope
jno
pop
or
out
mov
cmpsl
insl
fimull
dec
icebp
mov
cs
int3
mov
jge
push
lahf
sub
rcrl
xchg
inc
inc
lret
insb
add
notb
lods
outsb
rcl
push
xchg
push
in
inc
mov
stos
cwtl
int3
cltd
test
sub
cmp
jne
sub
insb
or
xor
push
out
sbb
add
mov
adc
inc
push
pushf
and
dec
push
lcall
mov
stc
mov
enter
dec
push
pop
add
adc
jb
fsubs
xchg
jle
pop
sub
neg
sub
jl
shr
rorb
add
loope
add
cld
jmp
jnp
lds
sbb
cwtl
call
xlat
push
je
push
packuswb
and
pop
mov
lock
lods
adc
push
add
add
adcl
or
cmpsb
or
mov
dec
mov
or
mov
pusha
fidivrs
add
inc
mov
push
add
andb
lahf
mov
imul
jb
popf
dec
rcll
sbb
xchg
lahf
mov
add
add
add
add
add
mov
add
add
add
add
add
cmp
add
add
add
dec
add
sub
add
add
add
aaa
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
fimull
add
add
add
filds
add
add
add
add
testb
add
into
aaa
popa
fldt
jle
add
add
add
add
cmp
sub
add
add
xchg
add
add
add
pop
push
popf
push
repz
shl
fiaddl
aas
out
mov
shlb
lret
inc
dec
dec
xor
add
cmpsb
imul
push
add
pop
adc
repnz
aaa
inc
add
add
push
jp
mov
test
push
lock
loop
add
pop
sbb
cld
in
dec
out
enter
add
push
push
sub
es
add
add
inc
nop
enter
mov
bsf
dec
xchg
adc
xchg
xor
mov
jno
bound
sbb
add
sbb
xchg
incl
add
add
add
and
sti
dec
sub
lds
outsb
subb
cmp
adc
mov
ficoms
push
rcl
loopne
xchg
mov
inc
stos
push
icebp
pop
loop
cwtl
xlat
int
popa
xor
push
or
dec
sub
pop
pop
ljmp
inc
data16
in
pop
or
adcb
push
pop
lahf
pop
stc
and
jns
test
mov
lret
insb
xor
add
jmp
add
add
add
add
add
faddl
std
add
add
add
add
add
add
add
adc
inc
add
mov
add
add
add
add
rolb
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
mov
add
add
add
add
lock
add
rolb
pop
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
jl
popa
add
add
add
add
adc
mov
add
add
add
xchg
add
mov
add
add
add
add
mov
mov
mov
add
add
add
lahf
add
add
add
add
int
pop
add
add
xlat
add
mov
add
add
add
add
add
mov
movb
add
add
add
add
add
add
add
add
add
ljmp
iret
les
inc
dec
int
bound
dec
mov
gs
adc
sbb
push
dec
out
push
push
popf
cmp
repz
jae
sbb
lods
add
push
push
int
mov
dec
and
lret
daa
cmp
push
scas
and
das
lods
cmpsb
sbb
or
cmp
bound
sti
pop
and
sbb
mov
addb
jp
lock
add
add
add
add
add
add
add
add
add
add
addr16
add
add
add
add
addl
add
add
add
add
add
add
add
ret
add
fiadds
das
add
add
add
std
add
jns
add
xchg
add
add
add
add
add
xchg
adc
rclb
lods
fisubs
fwait
and
repz
and
aad
in
jnp
jnp
inc
mulb
scas
jecxz
cmp
clc
xor
sbb
xlat
idivb
aas
cld
cli
iret
or
jno
arpl
ds
mov
jo
push
dec
les
inc
dec
int
bound
mov
sub
adc
add
cmp
sbb
dec
in
push
les
cmp
repz
add
mov
shl
cmp
jl
fsts
inc
add
sahf
fidivl
jmp
mov
ret
aaa
mov
mov
pop
mov
loope
lret
fidivl
hlt
mov
je
fidivs
aam
pop
xor
call
pop
push
push
lock
aas
dec
adc
mov
lods
lahf
add
cmp
cmp
and
cmp
xchg
sbb
inc
mov
jmp
xchg
adc
jge
fstps
mov
mov
orl
xlat
cmp
mov
or
lret
pop
pop
pushf
mov
lret
add
ret
insl
fstpl
pop
testb
push
mov
int
orb
adc
mov
xor
xchg
add
lds
imul
jge
je
sbb
push
sbb
lods
mov
jb
adc
out
cmp
adc
cmp
mov
mov
ss
mov
push
mov
loopne
lret
push
cmc
lea
jae
fnsave
xlat
pop
xor
jmp
xor
pop
pop
push
repz
cmp
dec
aas
xor
rorb
mov
cltd
xor
jbe
and
sbb
mov
mov
sar
add
jno
popf
inc
mov
xchg
adc
lahf
jg
clc
in
sbb
push
xor
and
movzbl
add
movd
mov
mov
cmp
lea
dec
adcb
sbb
dec
xchg
popa
jl
cmp
repz
es
cmp
in
lea
ficoms
xchg
sub
adc
out
and
pop
ljmp
mov
or
add
icebp
xor
mov
popf
movsl
add
outsl
fidivrs
daa
add
cmp
pop
aam
or
cmpl
sbb
mov
push
aad
lock
mov
sub
xor
shll
xlat
mov
mov
ret
and
addb
adc
jae
out
ret
fistpl
aas
mov
lahf
insl
pop
cmpsb
xor
mov
lds
mov
adc
pop
pop
xchg
je
xchg
cmp
and
add
sbbb
mov
sarb
popa
out
pop
nop
pop
inc
mov
adcb
push
cmp
lret
divb
mov
adc
jb
and
mov
fcoml
cs
shrl
push
and
push
jmp
adcl
jne
lahf
pop
lods
and
add
add
outsl
fcmovnu
negl
roll
mov
pop
inc
bound
sbb
or
fldt
ljmp
dec
jp
and
push
in
add
add
mov
push
je
adc
add
mov
pop
in
out
int
fisttps
sbb
add
add
add
jae
cwtl
incb
add
add
add
add
add
push
add
add
add
add
push
scas
rolb
add
add
bnd
adc
mov
add
add
add
popa
add
test
add
xor
sahf
add
push
add
add
add
arpl
add
sti
pop
add
add
fldpi
clc
cmp
mov
add
lret
xchg
jg
add
add
dec
mov
sti
pop
mov
add
cli
xchg
popf
push
pop
add
sar
jl
fiadds
add
addl
add
dec
xchg
add
pop
add
mov
mov
adc
out
inc
add
xchg
push
add
mov
call
stc
mov
add
add
jnp
or
cmpsl
andl
cmpsl
sub
dec
pop
mov
insb
out
out
mov
cli
repz
out
add
add
mov
add
pop
sbb
das
add
add
add
cmc
loopne
add
add
iret
int3
pushf
mov
add
add
cmpsl
fmull
stos
xchg
dec
xchg
jl
cmp
mov
add
add
mov
add
add
movb
add
adc
movb
add
add
jns
pop
add
add
cmp
sti
add
add
shlb
add
fistl
add
add
add
and
add
add
in
cmp
add
add
add
add
popl
shl
cwtl
add
add
fbld
add
jns
fwait
add
add
pusha
mov
add
pusha
por
add
add
and
pushf
add
add
and
and
add
add
mov
add
add
xchg
pusha
sti
scas
sbb
add
add
add
inc
sub
add
add
and
sub
add
add
adc
add
xor
add
add
add
push
or
add
add
jl
lret
faddl
add
add
push
add
xchg
add
add
add
mov
add
add
and
lock
add
add
inc
roll
inc
lahf
test
add
xadd
add
add
add
add
add
add
mov
add
mov
add
add
add
add
icebp
inc
xor
imul
add
add
in
xchg
inc
add
add
int
xchg
mov
add
add
or
sub
add
add
pop
fldl
add
add
ret
into
or
add
pushf
hlt
add
add
inc
jge
or
add
add
add
add
add
add
jae
out
add
add
sahf
pop
xchg
add
add
fadd
in
add
add
je
add
add
add
add
jp
out
add
add
hlt
loopne
mov
cmp
add
add
cmpsl
faddl
add
add
loopne
pop
add
add
jb
dec
xchg
add
add
in
daa
add
add
add
nop
xchg
add
add
xor
sbb
add
xlat
mov
dec
add
add
shl
add
add
add
jge
add
add
push
daa
jns
add
add
push
dec
mov
add
add
ss
sbb
add
add
test
add
xor
add
pop
enter
add
add
add
add
add
add
add
add
lock
add
sbb
add
add
add
push
add
add
mov
add
jg
sti
ja
add
fiadds
jb
dec
add
fwait
add
cmp
add
out
add
mov
jnp
in
int
push
and
cmp
sbb
add
push
mov
add
testb
lcall
mov
aas
add
fcomps
add
pop
add
fldenv
imul
dec
add
inc
add
fs
mov
or
cld
pop
enter
jecxz
xor
add
fildll
sub
repnz
jle
add
xor
xor
add
adc
add
add
push
adc
dec
or
add
mov
add
scas
add
mov
into
jg
add
or
push
add
xor
loope
lahf
add
add
add
xor
loope
roll
jmp
enter
je
xchg
push
jmp
mov
xchg
mov
cmp
and
and
pop
mov
ret
mov
addl
pop
xchg
cmp
test
and
xchg
or
pop
add
out
int
jno
popa
add
aas
sbb
and
enter
add
mov
fistps
in
shrl
xchg
and
xor
cmp
push
test
lret
xchg
popf
jl
fsincos
jge
add
jo
pushf
mov
xchg
adc
lcall
pop
cmp
popa
daa
mov
and
ja
pop
sub
loope
jmp
clc
lods
adc
data16
pop
xlat
jl
sbb
xchg
cmpl
xlat
cmp
adcb
or
lcall
arpl
enter
add
movb
pushf
mov
cli
enter
imul
pop
push
add
pop
inc
gs
push
xchg
clc
add
in
testl
or
movsl
loope
lret
filds
in
dec
lock
jmp
add
mov
popa
out
jbe
adc
sub
loopne
out
loope
push
stos
sbb
jo
jnp
sahf
add
test
sti
xchg
pusha
cld
jle
add
jl
cpuid
aam
mov
arpl
stos
lds
lock
out
jmp
aas
add
mov
xchg
dec
mov
cwtl
pop
add
data16
jge
fstp
in
push
les
fwait
mov
mov
add
mov
lahf
mov
sub
push
add
mov
or
push
aaa
pop
aas
call
add
jne
popa
mov
push
push
fnstenv
or
adcl
dec
add
scas
lock
xor
dec
iret
out
xorb
in
gs
adc
add
lods
outsl
inc
and
add
push
xor
lahf
aaa
push
jl
sbb
in
icebp
add
add
insl
sub
dec
pop
mov
push
mul
add
aaa
cmp
xchg
repz
repz
xchg
aad
jo
dec
aaa
sbb
scas
imul
std
loopne
cmpsb
sbb
mov
mov
imul
int
cmpb
jg
adc
push
mov
jae
add
fildl
jmp
lock
push
idiv
lock
xchg
and
mov
sbb
adc
xor
pop
int
inc
add
mov
shlb
mov
mov
dec
lcall
xchg
jb
mov
daa
and
ja
add
xor
add
inc
popf
jle
or
insl
add
xor
pop
inc
mov
add
push
sub
not
xchg
mov
lds
iret
sbb
fisttpl
sub
mov
mov
inc
add
jb
pushf
sub
inc
push
sbb
sub
icebp
daa
cld
faddl
add
ljmp
add
stc
fsubr
outsl
jecxz
out
mov
and
pop
add
jns
mov
aas
int3
push
add
mov
nop
dec
push
mov
add
sbb
mov
aam
movsl
add
popf
mov
mov
adc
add
push
lahf
cmp
mov
cmpsl
add
movsl
mov
call
repnz
fnstcw
sbb
pop
mov
xor
add
stos
mov
dec
fst
aad
sbb
push
cltd
popf
lea
lret
add
clc
cmp
das
cmpsl
dec
mov
add
dec
push
sub
je
sbb
add
in
mov
mov
add
push
xor
add
mov
lock
xor
add
xor
xlat
add
add
adc
add
sti
bound
add
add
xchg
add
add
popf
mov
add
add
add
data16
add
add
xlat
mov
movb
add
cmp
add
add
add
add
dec
shll
jns
add
dec
or
add
test
imul
add
xchg
lods
add
add
adc
add
add
out
add
add
rcrb
add
mov
nop
add
add
add
add
mov
incb
add
mov
add
add
loopne
add
add
outsb
leave
cmp
mov
mov
add
add
add
add
add
and
adc
add
cmp
push
fldenv
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
movl
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
outsb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
mov
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
mov
add
int
add
mov
add
push
add
pusha
add
add
add
add
add
xor
add
mov
add
add
add
movl
add
mov
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
dec
add
leave
add
add
add
add
add
ret
add
and
add
in
add
incb
inc
or
scas
add
jo
add
and
add
add
inc
inc
mov
inc
jae
lods
xchg
scas
in
inc
mov
pushf
cmpsl
add
add
add
add
cmp
add
cmc
push
mov
sbb
inc
push
mov
add
cwtl
cmp
jp
xchg
scas
fsubrs
out
jmp
iret
std
sbb
aam
or
add
add
pusha
fcmovbe
fdivrs
mov
lods
ds
lret
insb
or
adc
add
inc
mov
int3
mov
fs
dec
ret
dec
fisubrs
pop
loop
stc
dec
jns
xchg
loopne
add
add
add
out
mov
cmp
pop
pop
inc
icebp
mov
fidivrl
mov
and
add
sbb
inc
cli
push
xor
cwtl
sub
mov
outsl
cltd
pavgw
add
add
add
mov
in
mov
fcoml
cltd
cmpsl
push
pop
repnz
mov
add
cmp
add
nop
mov
add
add
add
mov
add
add
add
mov
add
leave
rolb
add
xor
add
add
xor
jp
add
add
aaa
add
add
add
and
add
add
add
push
adc
add
mov
add
cwtl
mov
add
add
add
mov
add
add
add
add
sahf
jne
xrelease
fcoms
rcrb
add
dec
ret
and
add
add
inc
xchg
push
xchg
add
int3
mov
add
cmpsl
in
ret
mov
add
adc
add
xor
add
pop
add
add
add
add
add
add
cmpsb
jp
dec
mov
add
mov
add
push
add
into
mov
add
add
add
ret
add
add
add
add
incb
cld
icebp
sub
adc
movsl
add
or
cwtl
add
add
inc
movb
pusha
scas
pop
add
fidivrs
add
add
jp
add
loop
add
add
das
jle
add
mov
sub
xchg
add
jle
or
add
dec
push
add
push
and
add
add
xor
add
pop
cmp
ret
add
mov
in
add
addl
adc
add
sbb
add
add
mov
push
pop
add
lods
add
xor
add
mov
movsb
lss
inc
or
add
ss
add
push
xchg
add
pop
popl
pop
add
add
xor
mov
jp
add
pushl
add
lldt
cmpsb
or
mov
pop
add
add
aaa
add
add
add
add
loope
jp
add
rolb
mov
add
stos
sub
out
cmp
add
inc
jl
xchg
jne,pn
xor
std
rorb
testb
add
add
add
int3
mov
fwait
and
add
sarb
add
add
add
pop
fwait
add
jp
mov
add
add
add
add
fsubr
loopne
pop
jae
dec
jne
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
cwtl
mov
add
data16
bound
add
add
add
add
add
add
add
xor
add
cmp
add
adc
add
mov
fwait
add
jae
add
pop
inc
add
add
and
rolb
add
cltd
adc
add
add
imul
mov
arpl
js
int3
inc
mov
test
repnz
test
sub
sub
movl
mov
call
xlat
outsb
ror
rorb
cmpsb
adc
scas
inc
mov
jle
xchg
and
imul
sub
movsl
inc
insb
sbb
les
js
xchg
call
fadds
jle
jns
std
xor
inc
gs
inc
or
fisubrs
insl
rolb
push
call
jecxz
jb
sub
sub
dec
mov
add
filds
adc
mov
imul
leave
hlt
movsl
inc
or
flds
lock
jle
repnz
and
stc
jbe
ret
ret
roll
sahf
or
pop
test
dec
jg
lahf
push
js
pop
rorl
add
sbb
jge
xchg
xor
push
into
push
notb
dec
mov
lea
jnp
jnp
pop
fmuls
inc
ds
push
mov
test
and
inc
inc
and
inc
jmp
jmp
aam
iret
enter
cmpsl
push
jbe
mov
inc
mov
sbb
sbb
fwait
push
ret
dec
shl
imul
dec
test
inc
test
pop
loopne
mov
jns
aad
jmp
fcmovu
jno
rcr
push
pushf
stc
lods
rcll
ds
scas
push
imul
inc
mov
mov
ret
adc
inc
jecxz
jb
sub
in
fidivs
adc
pop
or
fadds
icebp
lret
test
cmc
xchg
and
divb
ret
adc
shl
rolb
stc
negb
test
xchg
dec
js
pushf
pop
ja
pop
rorb
cwtl
xchg
sahf
cmp
in
mov
dec
imul
mov
mov
loop
rolb
jp
jp
push
and
inc
and
lock
cmpsb
leave
cs
sub
and
inc
in
ljmp
into
lret
ret
movsb
pop
jns
outsb
test
sub
sbb
stos
pop
ret
cmpsb
in
enter
push
jnp
pusha
fwait
xchg
fwait
push
ret
js
or
dec
mov
pop
cs
pushf
ficompl
fcom
inc
mov
jecxz
test
or
test
insl
mov
pop
lods
nop
stos
jp
fst
mov
in
add
sub
repz
mov
sbb
or
xchg
sub
jbe
repnz
data16
cmpsl
xchg
adc
and
and
clc
ret
sahf
leave
fmuls
mov
mov
mov
inc
andb
popf
divl
xor
pushf
jmp
stc
movsb
int3
add
push
and
lock
insb
fbld
pop
jmp
stc
dec
lret
insb
sbb
and
lret
sub
push
cmp
inc
dec
scas
and
cmp
pop
int3
mov
pop
repnz
cmc
stc
xor
cltd
xor
mov
fs
jp
jmp
mov
jl
cmpsl
and
nop
in
pop
jnp
lods
jb
pop
lcall
lcall
inc
dec
add
lcall
scas
in
dec
mov
jg
xlat
cmp
sbb
mov
and
sub
fidivrl
popf
sbb
orl
xorb
or
scas
inc
lcall
lret
add
fstpl
in
cmp
out
mov
add
clc
pop
daa
adc
int
mov
popf
jge
hlt
lcall
cmp
aad
cld
mov
sub
insb
in
sub
imul
xchg
add
xchg
mov
lret
xchg
push
mov
mov
mov
mov
sti
into
movsb
inc
ret
mov
lods
cli
stos
mov
movsl
movsl
ficoml
ror
ret
sub
adcb
lret
lea
inc
adc
imul
xchg
das
icebp
dec
sub
xor
push
out
inc
in
test
cmp
inc
data16
cmp
scas
jns
pop
jle
mov
loop
test
cmc
jns
mov
push
in
sbb
mov
and
jb
mov
incb
hlt
movsb
jecxz
cwtl
cmp
aaa
mov
psubsb
lea
mov
pusha
push
shlb
pop
and
fcoms
es
inc
mov
sbb
fsubl
xchg
clc
jg
xchg
xchg
or
pushf
jle
cltd
repz
outsb
out
scas
aas
pop
outsb
cmp
int
enter
movzbl
divb
sub
lock
mov
in
lahf
scas
aas
std
dec
xor
sbb
dec
cmp
and
enter
xchg
cmc
cld
and
mov
int
cwtl
cmp
add
testb
ljmp
leave
mov
xchg
or
cli
mov
mov
mov
and
sub
scas
imul
aaa
sub
movsl
inc
dec
push
dec
push
cltd
stc
ror
mov
loopne
test
fildl
mov
ja
xchg
and
sub
cld
mov
xchg
xor
push
adc
dec
out
jmp
xlat
pusha
push
pusha
sub
mov
imul
int3
shl
mov
push
rcrb
cmp
int3
popf
jb
add
loopne
out
int3
mov
scas
xchg
cltd
repz
cmp
xlat
mov
cltd
push
daa
mov
jle
ja
sub
jbe
gs
add
xchg
mov
das
cmc
dec
mov
gs
mov
mov
mov
notl
cld
lret
cmpsb
pop
int
dec
mov
sar
cwtl
mov
mov
xchg
testb
shrl
leave
lods
int3
mov
add
xchg
and
jae
dec
movsb
xor
arpl
aas
and
ret
fs
pop
dec
add
fucomi
cmp
ljmp
sti
jp
fimull
jg
cmpsb
ljmp
jo
mov
addb
dec
insl
dec
or
xchg
xor
push
fldenv
dec
adc
pop
aad
mov
and
push
pop
loop
lds
shll
sbb
pop
ljmp
imull
sbb
xor
jmp
xor
scas
lret
sub
push
jb
dec
sbb
sub
xor
sbb
lds
ss
adc
leave
enter
and
and
icebp
jns
add
stos
fcoms
jecxz
out
ss
lods
jle
add
mov
jb
cmpsb
out
sbb
insl
stos
push
push
xchg
cmp
sarb
ret
inc
mov
push
push
cmc
mov
cld
push
mov
cli
jnp
sbb
into
push
dec
cmpsl
jmp
xchg
sub
repnz
test
cmp
ljmp
aad
bound
xor
jns
imul
dec
xchg
and
shr
movsl
sbb
add
xlat
push
pop
jecxz
mov
les
xor
pop
push
and
adc
in
enter
xchg
jne
lcall
cmp
ljmp
movsb
shrl
xchg
popf
sub
call
test
mov
mov
sbb
and
mov
dec
test
into
dec
add
aas
mov
sti
out
pusha
std
pop
ljmp
xchg
js
in
dec
enter
insb
sbb
ds
jo
out
inc
and
pop
pop
cmp
add
pusha
mov
xchg
cmp
sahf
pop
rorb
orb
pop
push
repz
addr16
ja
cmp
jae
hlt
jbe
fisttps
and
lods
jl
mov
shl
in
mov
clc
fwait
xor
lds
xchg
mov
call
pop
inc
insb
adc
mov
and
jge
out
xchg
push
xchg
xchg
xlat
movsl
dec
sub
inc
pop
in
cmc
add
cmp
xchg
cltd
icebp
push
leave
ljmp
cltd
adcb
fwait
mov
cli
xchg
clc
jle
jnp
push
and
jge
fwait
push
stos
scas
inc
xor
jno
and
pop
lds
call
xor
cs
stc
push
xorb
ja
insl
cmp
and
pop
pushf
jecxz
lods
sub
jno
cltd
sbb
es
jp
ds
ret
dec
ljmp
push
loop
dec
lea
lahf
imul
jge
and
and
sub
mov
aas
scas
popa
mov
xchg
add
lahf
data16
cmp
outsb
mov
inc
pop
inc
pop
xchg
out
ror
cli
push
mov
jl
push
push
mov
arpl
lret
jns
movsb
loope
fldcw
mov
cmpsb
jb
movsb
mov
nopl
jmp
mov
call
aas
lcall
dec
mov
xlat
lret
pop
mov
sub
push
pop
add
int
sbb
inc
xor
push
xchg
cmc
mov
push
pop
xchg
popf
lret
cmpsl
jge
xchg
lahf
movsl
xchg
jnp
cli
xchg
cld
orb
rcll
mov
imull
xor
cs
jle
adc
jne
xchg
mov
mov
sbb
mov
inc
test
testb
sahf
push
sbb
mov
xor
shll
pop
out
jmp
call
test
jbe
push
push
add
jp
mov
jns
jle,pn
sti
jge
mov
xor
dec
imul
cmpsb
push
ljmp
push
pop
orl
outsl
mov
testb
push
lods
xchg
insl
sarb
call
mov
push
sbb
dec
loopne
adc
ja
test
pop
pop
push
sub
mov
mov
into
loope
inc
mov
mov
xor
ss
adc
cmc
mov
stos
jle
pop
push
xorb
lods
pop
mov
bound
lcall
test
mov
jb
jnp
and
je
popa
loopne
popf
out
ret
stos
push
mov
imul
sbb
ss
stos
sub
push
test
cld
dec
pusha
mov
int
js
insl
and
aam
ffree
sbb
decl
roll
fwait
imul
testl
test
xor
or
cld
cmp
pop
push
push
es
pop
jmp
paddd
inc
mov
mov
cmp
cmpsb
cld
cmc
inc
ja
int3
jb
fadd
pop
in
out
out
scas
jge
mov
popl
or
je
mov
add
mov
mov
cmc
dec
push
lret
cmc
int3
xlat
pop
cmpsb
sbb
cmp
aaa
adc
call
jg
lcall
stos
test
dec
shlb
cwtl
insl
or
mov
mov
test
jmp
push
mov
popf
sub
pop
scas
fs
xchg
hlt
mov
mov
push
gs
mov
jp
add
inc
mov
call
lods
jno
jb
xchg
stc
adc
mov
je
push
sarl
mov
clc
push
ds
cmp
gs
xchg
xchg
idivb
lock
roll
sbb
and
mov
push
jbe
lcall
adc
pop
xchg
inc
pop
mov
leave
mov
lahf
cli
daa
cwtl
or
movsl
sbb
push
lods
out
xor
add
in
mov
out
mov
popl
aaa
mov
aaa
sub
dec
mov
adc
mov
loopne
push
gs
ds
pop
es
stos
int3
xor
adc
dec
sub
dec
das
sbb
leave
sbb
lcallw
jnp
lds
mov
push
jge
shll
fidivrl
cmp
je
sub
out
in
sub
dec
mov
xchg
mov
xchg
adc
dec
lret
lods
adc
std
test
jbe
xchg
mov
cmp
xor
sarb
inc
push
icebp
mul
fucomp
test
jl
stos
lcall
jno
and
sahf
xor
fwait
cmp
cmp
sbbl
rcrb
dec
jnp
sub
cmpl
mov
cmp
mov
cltd
cmp
add
in
mov
rorb
add
lahf
fwait
je
adc
xchg
mov
pop
adc
jecxz
pop
fs
shl
push
inc
and
add
cmp
popa
lcall
fistpl
xchg
jb
lret
out
xchg
fnstcw
add
fisubrs
mov
enter
push
jmp
adc
pop
popf
xchg
int3
rcll
cmp
outsl
sbb
scas
xor
fildll
loopne
xchg
idiv
je
cmc
jp
xchg
jmp
fwait
mov
fidivs
cltd
add
or
es
imul
cmp
pop
pop
bound
adc
pop
les
or
and
mov
sub
mov
add
stos
ss
addr16
cli
dec
xlat
rolb
nop
jb
jns
sub
loope
ret
icebp
lea
ret
xchg
or
mov
jle
mov
sub
and
push
sahf
pusha
aad
movsl
fwait
xor
mov
xchg
sub
fstps
aam
addr16
sbb
cmpsb
jns
jbe
jmp
fistpl
add
or
or
cmpsl
cmpsb
sub
sbb
out
je
pop
add
xchg
jp
mov
cmpsb
test
fisttps
jo
mov
sbb
inc
cmp
jg
cmp
pop
aam
aad
loop
jecxz
aaa
notb
cmp
push
xchg
andl
jo
scas
xor
sub
into
jne
test
jp
xchg
stos
lret
mov
push
sbb
or
jmp
inc
dec
imul
cld
inc
fdivs
and
xor
orl
cmp
xchg
pushf
pop
divl
push
imul
ss
icebp
loop
mov
call
cld
repnz
mov
push
sbb
loope
data16
test
scas
cmp
mov
mov
in
fisttps
xchg
in
dec
xchg
call
sub
inc
add
ss
sarb
dec
or
adc
push
arpl
sub
lahf
jns
lods
ficoms
lcall
xor
or
aam
adc
movsb
mov
mov
test
stos
dec
aam
inc
cmp
lcall
or
xchg
cmp
xchg
push
mov
inc
fisubl
repnz
cltd
js
jp
cltd
sbb
cmp
ljmp
into
mov
lret
pop
sbb
out
ljmp
jno
push
xchg
jnp
add
xor
mov
imul
push
fwait
xor
insl
stos
or
cmp
inc
adc
mov
roll
and
lea
jo
mov
addb
movl
mov
cltd
add
scas
inc
xlat
shl
pushfw
mov
cli
pop
push
fs
pop
in
lds
aam
in
scas
stos
rorb
inc
or
and
add
dec
push
testb
add
mov
test
or
jp
stos
je
lret
sbbl
fcomip
pop
mov
pop
imul
rolb
jl
dec
jbe,pn
fidivrl
xor
jp
lret
aam
push
nop
xor
test
scas
xor
xchg
xor
lret
or
je
lcall
xchg
cmp
clc
loop
sbb
in
in
mov
into
pop
test
jbe
inc
xchg
jle
add
dec
jge
push
add
cmp
xor
insb
push
xchg
cltd
pop
xor
popf
dec
test
lret
imul
enter
jo
mov
jae
mov
mov
aaa
dec
leave
push
mov
cli
ljmp
ds
mov
shr
adc
mov
push
in
mov
and
aad
mov
ret
push
dec
movsb
fsubrs
inc
test
xor
sub
jo
dec
pop
mov
arpl
aad
dec
fwait
push
pop
xchg
test
adcl
lods
pop
repz
mov
test
or
inc
psraw
call
rolb
daa
test
sahf
popa
cltd
xchg
sub
xchg
add
pop
fs
les
xchg
adc
into
cmpsb
mulb
sub
scas
and
fdivr
jae
sbb
adc
mov
push
cmpsl
outsl
xchg
pop
lcall
imul
sub
jb
mov
or
xchg
dec
fidivl
popa
test
push
dec
cs
add
mov
das
mov
mov
pop
fnstcw
pop
divb
sar
hlt
jl
or
sarl
iret
fstps
fsubl
xchg
jecxz
outsl
pop
or
dec
out
movsl
adc
daa
roll
pop
push
fldt
test
adc
push
and
pop
mov
and
mov
inc
sbb
lret
les
or
int3
mov
not
mov
ss
add
xlat
cwtl
push
cmpsb
or
cltd
xor
fcompl
es
sbbl
add
sahf
add
xchg
inc
sub
inc
jo
jbe
cmpl
je
fdivrs
xor
mov
addl
jo
mov
inc
mov
xchg
push
xchg
jge
pop
loopne
bound
cmp
cmp
js
jb
nop
mov
xlat
mov
outsb
in
lods
dec
mov
pop
sbb
lahf
add
lcall
mov
sbb
movsb
les
mov
xchg
fstps
adc
sub
pop
jno
push
xlat
dec
hlt
fidivl
sbb
fisubrl
jb
and
cmc
jo
cli
mov
pop
cmp
aaa
pop
push
das
add
inc
mov
xor
xor
pop
add
cmpsb
in
xor
xchg
cmc
mov
inc
mov
mov
test
pop
int3
orl
lods
lods
or
scas
dec
inc
fidivrl
adc
movsb
ljmp
inc
lea
popa
mov
mov
push
push
lcall
xchg
add
and
popf
jp
js
mov
adc
jle
lcall
dec
aaa
lret
loop
pop
push
test
jno
mov
rorl
jns
pop
in
insb
shll
mov
sbb
mov
xchg
and
arpl
mov
aad
jmp
push
es
mov
push
mov
addl
inc
jp
fdivl
mov
cli
fidivs
mov
cs
jp,pn
xchg
std
inc
add
and
push
push
pop
iret
and
or
sub
aad
adc
push
sub
inc
stos
sub
in
cltd
inc
mov
dec
sahf
sbb
pop
lds
ret
mov
stos
movsb
lods
pushf
cli
mov
sub
mov
jbe
enter
mov
outsl
xchg
out
aad
arpl
or
pop
xchg
cmp
xor
shll
movsl
jo
jg
outsl
test
out
sbb
lahf
adc
cmp
cmp
adc
bound
mov
pop
mov
insb
inc
addr16
imul
sbb
xchg
add
inc
rorl
outsb
adc
push
cli
push
xchg
enter
push
flds
lods
in
xchg
inc
loope
outsl
sbb
fdivl
cmp
mov
and
lds
stc
mov
push
xorl
inc
sbb
cmp
das
push
stc
les
mov
or
push
sub
mov
xchg
cmp
push
cmpsb
mov
pop
fcomp
mov
test
or
mov
lock
dec
mov
add
push
cmpsb
xor
shl
fmull
mulb
movsb
pushw
or
lods
add
shll
jecxz
arpl
je
sub
mov
mov
jmp
mov
inc
lods
imul
fildl
cwtl
or
or
cwtl
sbb
or
lea
popa
insl
xchg
ret
jle
outsb
es
push
dec
mul
mov
test
test
mov
xchg
pop
jbe
lock
push
repnz
into
decb
test
mov
dec
jne
inc
cmc
fisubrl
in
inc
movsl
jbe
daa
jns
pop
mov
add
lcall
xchg
bound
or
pop
les
lods
dec
mov
and
jmp
mov
fisubl
cmovle
aaa
adc
sbb
bound
xchg
mov
or
xchg
xchg
jmp
push
shr
mov
ljmp
adc
xchg
pop
negl
cmpsb
cmp
xlat
stos
aaa
dec
mov
dec
out
rcrb
lcall
nop
adc
mov
adcb
add
dec
mov
stos
jo
divl
sbb
dec
test
adc
mov
cwtl
pop
inc
mov
idivl
mov
rcrb
call
mov
fcomi
push
inc
sub
lods
imul
inc
adc
dec
stc
and
adc
ds
fnstenv
stos
or
add
pusha
mov
jo
cmp
mov
mov
daa
frstor
orl
mov
in
shlb
jae
das
or
cmpsl
push
in
imul
sub
stos
pop
push
scas
push
mov
adc
xchg
or
sti
dec
fincstp
pushf
xchg
in
jle
pop
in
pop
movsl
sbb
jl
push
fmull
mov
test
adc
mov
push
xor
lods
pusha
leave
push
jae
push
addb
lcall
and
sbb
jp
in
sbb
xor
in
sbbl
mov
aas
decb
mov
cli
into
leave
xor
or
inc
add
inc
mov
and
push
into
pusha
scas
add
cld
add
test
mov
dec
mov
push
inc
rcrb
dec
mov
cmp
das
or
pusha
popa
push
std
movsb
mov
push
sbbb
sti
pop
addl
push
or
push
dec
mov
adc
enter
xor
push
add
xor
test
pop
movsb
push
fdivr
jne
adc
stos
pusha
xchg
inc
mov
cmp
push
jecxz
fs
sti
outsb
negl
sbb
jg
push
sbb
mov
inc
adc
int3
add
fs
push
xchg
jnp
or
gs
seto
mov
pop
faddp
inc
cld
or
dec
mov
push
or
out
lods
mov
mov
out
mov
outsl
negl
jmp
push
push
mov
cli
cs
mov
add
