mov
lcall
add
cmp
imul
add
or
jg
outsl
or
sub
add
cmp
or
sub
sub
imul
add
mov
push
movl
mov
imul
jmp
sbb
rorl
rcrb
xor
mov
add
mov
and
fnsave
cmp
mov
sbb
rcrb
sub
mov
notb
push
rorb
ja
outsl
fldt
icebp
sub
push
adc
shlb
push
jbe
sti
outsl
aaa
or
leave
pusha
push
mov
mov
mov
divb
lret
roll
lret
xor
add
and
add
nopl
out
sbb
stc
sbb
mov
out
mov
xlat
fcmovne
xor
dec
sarb
mov
fnsave
adc
push
leave
movzbl
adc
sti
in
outsb
fistpll
mov
adc
add
mov
add
sbbb
je
dec
js
cli
adc
or
data16
inc
mov
push
add
scas
or
sbb
add
std
neg
jnp
sarb
mov
popa
loope
cmp
adc
mov
fimull
fs
mov
mov
sbb
lock
add
in
cld
push
add
repnz
mov
lret
cs
pop
inc
jnp
outsb
clc
adc
shrl
les
pop
jnp
out
pop
in
xor
cmp
loop
mov
mov
sbb
jae
push
push
mov
fcmovnbe
cmp
into
add
mov
js
adc
enter
fcmovnu
out
dec
std
rorb
add
out
insb
jmp
or
leave
pop
and
push
cmp
jg
imul
adc
or
or
idivb
inc
mov
cmp
mov
mov
ret
insb
loopne
fdivrl
lret
or
xlat
stc
push
sbb
lock
add
arpl
cld
in
cld
insb
inc
dec
out
pop
inc
jmp
mov
into
mov
setnp
or
xchg
enter
mulb
fstps
xlat
ficoml
imul
mov
add
push
jo
ss
add
xor
jecxz
jecxz
add
ljmp
pop
insb
or
or
inc
roll
imul
outsl
fistl
xor
ljmp
sti
jg
pop
outsl
insb
sbb
clc
mov
sub
mulb
push
adc
incb
xor
push
fdivrl
push
and
pop
and
or
add
mov
mov
pop
aam
rorl
fistpll
insl
inc
adc
cmp
xchg
pop
daa
sub
mov
fwait
mov
insl
test
sbb
sysenter
mov
test
aaa
lret
cmc
mov
jl
sub
sbb
sti
enter
fwait
push
jmp
adc
loope
or
jmp
popa
leave
add
or
jbe,pn
fildl
loopne
cmp
mov
sbb
mov
ret
sub
wrmsr
sbb
ss
push
mov
loope
out
rcrl
mov
inc
clc
cmpsb
xlat
or
xchg
clc
pop
push
push
mov
sub
ds
ret
mov
lods
add
adc
and
sbb
sub
jmp
sbb
jg
or
xchg
inc
daa
lods
imul
in
ret
int3
add
sub
xor
rcrb
sbb
pop
or
insl
in
jg
dec
push
bound
cmp
out
lea
push
add
xchg
or
rcrl
mov
add
jbe
addr16
adc
pop
shl
fsts
jecxz
and
rcrb
lds
call
pop
ja
mov
mov
mov
add
cmp
les
pop
inc
fisttpl
adc
xchg
add
shlb
or
mov
mov
sbb
adc
adc
das
push
lahf
pop
mov
add
rcrb
jmp
sbb
bound
xchg
dec
mov
push
sub
dec
xor
fadd
jbe
and
adc
sbb
pushf
or
push
sub
add
or
xor
mov
jp
mov
adc
movl
daa
sub
stos
shlb
pop
inc
shrl
jne
pop
dec
clts
xchg
mov
mulb
pop
jmp
fidivs
ret
pop
mov
xlat
add
mov
pop
out
mov
mov
push
test
push
ss
sub
dec
xchg
and
popa
sbb
or
mov
cmp
pop
mov
dec
or
fisttpl
adc
js
xchg
or
xor
fwait
inc
test
push
call
cmpsb
xchg
jb
rol
out
push
add
imul
add
icebp
push
or
add
or
int
sarb
and
int
mov
inc
out
adc
fidivl
sub
dec
call
xchg
mov
mov
movsb
add
fistpl
adc
sbb
push
pusha
jb
clc
fidivrl
push
int
mov
movsb
xchg
stos
jg
mov
movsbl
sarb
mov
xor
mov
cmp
sahf
test
or
popa
enter
jae
push
lret
or
jb
faddl
push
push
inc
mov
xor
fdivs
inc
adcl
dec
mov
clc
adc
adc
stc
xor
adc
clc
add
into
je
sbb
sti
mov
hlt
jle
into
clc
sbb
pop
pusha
or
sub
sub
lret
push
cmp
pop
loope
jb
sbb
addr16
jge
mov
cmp
pop
fldt
rol
or
cmp
scas
or
and
sbb
mov
cwtl
ficoml
push
into
in
fisttps
pop
mov
dec
ret
js
fadd
push
loop
xchg
shlb
rorb
sbb
fnstenv
mov
pushf
jo
xor
sub
cmp
gs
rorb
dec
sbb
adc
ret
jno
push
adc
mov
lret
in
xlat
adc
xor
mov
out
in
pop
je
or
adc
arpl
aam
jmp
int
lods
in
jp
ffreep
int3
mov
mov
ret
sbb
or
add
xor
and
sbb
or
fs
test
mov
test
sbb
sub
aas
in
call
adc
lret
shr
jmp
sbb
mov
and
test
adc
cwtl
fisubs
dec
or
lods
insl
ficoml
outsl
fistps
add
sbb
pop
and
sbb
sbb
xor
add
sub
fiadds
or
stc
dec
leave
push
mov
add
je
push
out
add
ret
ret
mov
ja
clc
pop
mov
add
jbe
lods
push
mov
or
cmpsb
data16
pop
orl
xor
lods
mov
push
or
jmp
mov
iret
inc
lock
add
sbbb
rorl
shll
or
inc
or
xor
dec
pop
pop
jo
cmp
adc
mov
test
jge
or
or
sbb
cmp
pop
xor
das
cmpsl
addr16
rorl
call
insl
jae
mov
rol
pusha
fcomp
mov
les
sbb
lods
imul
mov
cmp
and
in
mov
cmp
xor
sbb
notl
mov
sbb
xlat
adc
push
int
sub
push
xor
aam
dec
rcll
cmovle
xor
in
fidivrs
jns
in
mov
or
or
sub
sti
lock
pop
fsub
int
mov
inc
xor
add
xchg
or
icebp
iret
rcr
mov
test
roll
jae
or
add
jb
jno
ja
mov
mov
call
pushf
or
in
xor
sub
adc
ret
adcl
mov
scas
sbb
sbbb
call
repnz
or
cmp
or
mov
int
adc
in
call
xor
bound
mov
rorb
roll
out
pop
inc
jecxz
jo
mov
mov
adc
btc
aam
pop
jne
or
mov
or
sbb
shl
xchg
add
xchg
stc
sbb
add
xor
mov
push
out
and
out
push
int
push
or
incb
pop
call
or
shll
inc
add
or
jb
mov
or
mov
fidivrs
neg
dec
aas
gs
push
fcoms
ds
or
in
ret
inc
and
dec
fistps
hlt
inc
adc
scas
orl
dec
cmp
push
adc
add
adc
aad
mov
mov
xor
stos
cmp
or
or
mov
rcll
pushf
push
mov
cmp
pop
loope
adc
push
xor
dec
sbb
xchg
cmpsl
out
pop
sbb
xorl
iret
sbb
xchg
push
push
cmp
jne
loopne
push
hlt
sbb
pop
cmp
add
adc
ss
out
add
test
jl
xchg
add
inc
inc
mov
lds
sub
rcl
lret
xor
jp
or
daa
mov
dec
lret
in
int
mov
push
mov
data16
rorl
sbb
stc
cli
and
push
pop
cmp
push
adc
js
and
aaa
mov
sbb
inc
mov
pop
or
shr
mov
and
pop
mov
lret
cwtl
clc
fsubrl
aas
stos
inc
call
mull
pop
shr
and
jle
push
lea
jne
push
sarb
shrb
cmp
fwait
orl
and
add
mov
cmp
jne
insl
sti
mov
pop
adc
aam
add
pop
decb
cmp
mov
pop
pop
arpl
jo
loope
aad
or
adc
mov
test
cs
iret
rolb
ret
adc
inc
or
sbb
push
scas
sub
jbe
push
mov
adc
adc
and
adc
lcall
push
add
jbe
cwtl
xlat
cmp
push
out
sbb
or
cltd
xchg
pop
pop
scas
icebp
movsb
add
inc
jae
adc
add
push
add
add
mov
lods
enter
mov
sbb
push
int3
lock
sbb
repnz
jae
xlat
mov
les
or
push
call
rcrb
xor
dec
leave
inc
sbb
adc
xchg
push
or
mov
test
push
sbb
cs
cmp
sub
mov
push
ljmp
adc
jl
pop
pop
clc
lret
js
sub
negb
jg
testb
sbb
cmpsb
dec
cmpsb
push
push
movsb
dec
sahf
loope
loop
sbb
arpl
ss
or
and
adc
ret
mov
adc
sbb
test
out
test
mov
pop
xor
push
aas
enter
cwtl
xor
clc
inc
out
or
or
push
mov
enter
xchg
pop
cmp
mov
push
sub
pusha
inc
adc
popf
mov
enter
nop
add
addr16
movsb
and
mov
push
sub
pop
daa
add
loope
pop
and
mov
loop
adc
mov
clc
or
or
std
sbb
push
xchg
mov
in
push
andb
pop
mov
data16
pop
stos
cmp
push
mov
sbb
add
sbb
movsl
jne
sti
push
mov
pop
sub
ss
xchg
popl
testl
inc
xchg
and
jae
mov
jnp
loop
loope
or
cmp
jne
pop
mov
add
pop
cmp
dec
cmp
shrb
adc
dec
add
jp
push
cld
or
mov
lcall
or
push
xor
add
sbb
js
or
cmp
jno
test
lock
es
mov
cmpsb
mov
inc
jecxz
js
imul
imul
icebp
lods
sahf
in
in
lea
int3
rol
push
dec
cmpsb
out
lret
xchg
rorl
roll
or
shll
and
inc
test
dec
pop
sbb
xor
mov
push
push
jo
aam
shll
adc
push
sbb
push
sub
sub
scas
push
xor
xor
lods
or
jno
push
adc
repnz
push
std
and
repnz
jno
sahf
les
push
sbb
and
adc
sbbb
pop
add
sbb
sbb
pop
loope
cmp
into
sub
adc
call
sub
lret
or
adc
ficompl
stos
xchg
ret
fwait
jmp
cmpsb
cmp
xchg
dec
scas
sbb
test
adc
add
cmp
out
test
and
mov
sbb
aas
cltd
out
cmp
push
sub
mov
gs
and
xchg
dec
push
sahf
adc
cmc
loopne
insb
test
sub
shrl
inc
mov
ret
data16
sti
mov
push
hlt
mov
sbb
or
insb
roll
js
in
push
fistl
mov
adc
push
sbb
subb
push
adc
mov
fimull
mov
cli
pushaw
sti
sub
rcrl
or
stc
jno
push
jmp
insb
push
std
adc
call
jmp
sbb
pop
mov
leave
push
add
call
or
adc
add
cld
add
shlb
cmpsb
sbb
add
or
xor
or
orb
dec
jecxz
ret
repz
mov
sbb
push
sub
imul
xchg
cmp
sbb
nop
insb
stc
add
cwtl
cmp
inc
pop
sbb
cmp
mov
xchg
inc
sbb
jnp
add
and
inc
test
out
enter
lret
adc
adc
inc
mov
icebp
xchg
mov
scas
roll
pushf
je
lock
adc
cmp
add
push
mov
daa
js
add
orl
dec
push
and
pusha
js
daa
fwait
jbe
pop
push
push
xor
mov
push
sbb
sub
fstpl
sub
or
insl
fisttpl
pop
pop
or
jecxz
insb
xchg
outsb
push
enter
imul
add
scas
ret
push
pusha
push
sti
imul
popl
out
push
dec
outsl
repz
inc
mov
lret
adc
jbe
push
push
push
adc
inc
aaa
sbbb
cmp
xor
imul
sbb
inc
rolb
adc
rclb
xchg
andl
cmpsb
aaa
shrl
enter
cmp
inc
sti
test
mov
adc
into
out
test
push
push
push
sub
adc
jo
subb
loope,pn
and
fstpt
adc
mov
or
cli
adc
lahf
xchg
and
jbe
xor
arpl
push
sbb
es
sbb
aad
aam
sbb
dec
adc
movsl
inc
iret
rolb
pop
xchg
jge
mov
jae
cmp
subb
roll
dec
in
cltd
mov
and
out
ret
mov
inc
into
addr16
push
rorb
mov
mov
jnp
adc
mov
ja
adc
xor
addb
ljmp
or
rclb
orl
dec
xchg
push
jp
xor
daa
push
lock
and
dec
adc
scas
inc
test
push
nop
mov
pop
test
push
sub
push
lea
sarb
in
les
lret
cwtl
es
mov
and
push
push
mov
pop
lret
inc
lock
or
adc
test
cmpsb
push
or
and
fiaddl
enter
push
mov
xor
pop
push
xor
movsb
rcr
jge
push
adcl
cmp
inc
rcl
movhps
add
jg
das
cli
or
fld
jle
push
daa
and
pop
xchg
movb
orl
sbb
push
or
sbb
aad
xor
mov
mov
or
mov
pop
loopne
rorb
imul
insb
into
mov
pushf
or
push
lea
mov
xchg
inc
mov
push
fwait
lock
xor
add
das
push
out
ret
outsl
jo
or
pop
or
fwait
movsl
test
sub
test
lcall
sub
pop
mov
jb
fsub
rcrl
mov
daa
pop
push
in
push
enter
lds
add
sub
int
xchg
xchg
sub
repz
sub
add
data16
xor
loope
and
sbb
xchg
lret
mov
sub
cwtl
jbe
add
xchg
push
int
jns
mov
imul
jbe
cli
sbb
pushf
mov
ret
xchg
jecxz
push
pop
stos
lcall
test
sbb
mov
mov
lods
xorb
inc
outsb
xchg
movsl
push
cs
jp
and
cltd
dec
cmp
cmpsb
out
add
mov
cwtl
movb
and
loopne
pusha
add
or
xlat
test
mov
addl
arpl
aad
cmc
ljmp
or
mov
add
jp
aas
add
lahf
jg
jecxz
push
push
vinsertf64x4
aas
mov
lods
aad
inc
mov
cs
fcomi
and
sub
jno
stos
js
into
pop
cli
mov
shl
sub
test
rolb
in
cs
cmp
mov
add
clc
fimull
adc
push
cmp
pushf
mov
sbb
push
shrb
insl
loope
mov
xor
insl
sbb
xchg
adc
xchg
pop
fdiv
fbld
push
jae
inc
cmp
pop
cwtl
insl
mov
xchg
or
fisttpl
fldt
push
inc
es
or
sub
sbb
push
xor
js
shrb
roll
adc
push
xor
fistps
lds
cltd
mov
sbb
lret
xor
int
call
out
add
ljmp
add
in
ja
pop
adc
push
cmp
add
sbb
sbb
sbb
in
push
ret
sbb
aad
and
add
xchg
lea
scas
lret
js
or
sbb
sbb
push
and
fcoml
repz
dec
in
and
out
xor
sarb
fsubrs
rcl
arpl
push
pushf
sbb
push
inc
and
push
xchg
or
mov
mov
dec
icebp
xchg
and
mov
add
pushf
pop
adc
ret
cs
or
lods
test
test
or
dec
cwtl
fmul
dec
xchg
in
sbbl
add
shrb
pusha
mov
adc
adc
and
push
pop
mov
inc
cmpsl
mov
mov
popf
add
or
mov
in
sbb
lahf
and
out
outsb
nop
jecxz
shr
jne
sub
aaa
xchg
pop
add
test
pop
cwtl
in
adc
cmp
sbb
add
mov
scas
pop
loope
mov
xchg
and
imul
and
add
xchg
sbb
mov
mov
mov
jecxz
jmp
lds
ret
xchg
mov
loop
cmp
pop
popf
xchg
push
shlb
es
dec
ret
add
and
xchg
call
or
or
mov
adc
inc
xchg
push
cmpsl
xchg
or
call
cmp
and
push
out
cs
jae
addl
or
sar
push
mov
mov
sbb
adc
in
clc
add
rcll
scas
or
dec
xlat
add
stos
pushf
test
push
scas
push
subb
add
or
mov
cmpsl
mov
stc
xor
sbb
insb
mov
cmpsl
mov
mov
mov
adc
aad
cmpsb
aas
jbe
xor
imul
add
and
mov
sbb
cmpl
call
adc
lock
mov
pop
int
enter
pop
adc
fimull
mov
inc
call
into
cs
pusha
lret
or
ret
call
xor
dec
fisubrs
add
inc
out
imul
pop
adc
or
sub
xor
mov
test
add
xchg
or
popl
add
popf
or
add
adc
adc
pop
mov
dec
test
or
and
into
out
xchg
add
fisubs
mov
cmc
movsb
adc
dec
fcmove
cmc
leave
imul
nop
jnp
rorl
adc
and
add
or
mov
and
leave
add
push
cwtl
insl
add
xchg
and
adc
insl
xchg
cmpl
pop
je
mov
lea
sbb
rcll
ret
sbb
or
mov
into
and
in
push
push
push
sbb
cld
pop
xchg
adc
sub
out
pop
rol
cmpsb
xor
xchg
notb
and
out
into
dec
repz
push
aaa
les
jne
or
push
add
test
adc
pop
shr
add
call
ret
incl
and
popa
add
mov
aad
mov
jo
imul
add
arpl
sbb
mov
pop
ljmp
add
lret
add
shlb
inc
xchg
in
pop
rorb
mov
and
dec
arpl
and
test
jg
adc
arpl
inc
hlt
adc
data16
push
xor
sarb
outsl
mov
mov
push
fs
sbb
mov
in
add
cmp
mov
sbb
mov
cmp
ret
pop
in
pop
arpl
cmp
pop
es
das
mov
test
stc
sbb
roll
scas
pop
jl
push
cs
and
sub
lods
or
sbb
push
lods
mov
inc
pop
mov
mov
mov
lds
inc
fwait
jle
jo
and
js
jne
cmp
or
sub
popf
sub
mov
pop
adc
cld
xlat
add
lods
push
clc
inc
jp
inc
pop
lret
adc
push
push
or
add
push
xchg
lcall
pushw
or
ret
insb
lea
cmp
jns
js
inc
mov
xchg
iret
mov
mov
xor
int3
adc
loopne
xor
fnstenv
mov
sbb
adc
fcomps
aam
push
rcl
dec
data16
rcrb
sti
mull
mov
dec
sub
les
loope
in
leave
or
mov
js,pn
lea
xor
hlt
jo
sbb
mov
inc
adc
ret
sbb
roll
jle
ror
in
lods
pop
xchg
mov
xor
pop
test
mov
insb
add
fwait
adc
xchg
push
and
or
shr
fdivs
pop
mov
sub
push
flds
and
add
lret
push
xchg
test
xor
imul
es
dec
rolb
mov
orb
push
roll
sbb
mov
adc
aam
xor
je
int
pop
aad
je
or
enter
lret
xchg
popf
push
addb
das
xchg
test
mov
dec
jae
sub
adc
cltd
and
sbb
add
pop
mov
push
add
pop
popf
jnp
icebp
lret
inc
inc
mov
mov
subb
cmpb
adc
leave
pushf
shlb
xchg
ss
add
lods
sbb
rorb
sbbl
mov
mov
jb
popf
popa
rorb
adc
sub
pop
and
out
or
loope
loop
bound
pop
insb
push
stos
dec
rorl
andb
dec
les
cs
call
inc
add
mov
mov
rcll
pop
pop
mov
jbe
mov
aad
or
js
out
xchg
leave
push
pop
pop
jle
mov
mov
xchg
movsb
xor
mov
in
test
lods
xchg
xor
addr16
pop
add
push
cmp
add
adc
les
rorb
stos
add
lds
push
out
test
divb
nop
push
les
lods
cmp
call
inc
ret
jo
scas
sbb
add
push
inc
jb
mov
icebp
push
adc
mov
enter
popf
fisubl
data16
outsl
sub
add
push
adc
out
and
rorb
iret
shll
sti
or
adc
xor
into
outsl
fstpl
test
push
sbb
out
int3
pushf
rcll
pop
outsb
add
mov
pop
decl
call
add
pop
mov
test
rclb
mov
mov
jmp
mov
mov
rcrb
loope
das
aas
js
mov
or
push
outsl
pop
adc
jae
adc
ret
imul
inc
cmc
sbb
leave
loopne
in
inc
adc
mov
xchg
jle
aam
sub
into
mov
and
mov
ljmp
dec
fidivs
push
jmp
push
and
add
test
mov
jle
or
pop
jge
jp
lds
mov
adc
lcall
jnp
adc
leave
push
addb
sub
lock
sub
pop
mov
mov
inc
ljmp
jns
jo
rcll
insb
dec
pop
aam
jo
outsl
push
and
xchg
and
sbb
push
insl
lods
ret
sbb
sub
orl
mov
xchg
filds
xchg
mov
pop
pop
pop
pop
adc
push
stc
test
insb
mov
xchg
cltd
jo
scas
loopne
mov
jo
jae
roll
lret
mov
mov
lods
ret
sub
stos
cmp
test
push
aas
add
sbb
pop
push
cltd
jp
adc
mov
lods
fsubrl
pushf
lret
es
xor
stc
test
mov
lds
daa
pop
cmpsl
cmp
adc
and
add
add
mov
mov
out
outsb
sbb
or
jb
mov
jo
pop
adc
cld
lret
push
aas
imul
inc
pop
lods
cltd
mov
pusha
hlt
sbb
adc
enter
adc
scas
in
sub
sbb
mov
pusha
fldcw
addb
mov
pop
iret
push
cmp
dec
inc
and
mov
cltd
xlat
test
js
lods
and
cmpsb
je
mov
sbb
mov
xchg
hlt
js
cmp
dec
adc
loope
mov
clc
fsts
sub
add
lods
call
mov
adc
repnz
les
xchg
dec
repnz
call
cli
popf
jmp
das
pop
xor
adc
or
inc
add
mov
rorb
ror
xor
pop
iret
sbb
gs
push
mov
aam
inc
inc
pop
cmpsb
data16
mov
sub
mov
mov
pop
add
pop
push
pop
mov
jb
pushf
cmpsb
inc
inc
push
pop
js
xchg
pop
sbb
pusha
call
adc
roll
xor
jne
aad
enter
mov
je
push
mov
and
cltd
cli
adc
icebp
xor
add
push
and
pop
rorl
mov
inc
sub
mov
insb
rorb
xchg
lret
icebp
lcall
and
rorl
insl
mov
rorl
mov
xor
dec
push
nop
jns
push
leave
rolb
inc
movb
push
sbb
xor
pop
stos
xchg
js
ret
inc
sbb
add
movups
sub
inc
test
dec
xor
xchg
jne
sbb
popa
or
pop
and
cltd
lock
je
push
xlat
sbb
insl
test
sbb
scas
jmp
in
sub
sub
mov
subb
arpl
mov
sarl
add
push
xor
inc
repnz
cmpsl
shll
leave
aad
ret
in
cmp
data16
jno
dec
rcrb
lods
pop
mov
lock
mov
repnz
push
lods
push
add
mov
fimuls
sbb
adc
flds
xchg
addl
mov
mov
out
enter
fdivs
sbb
or
insl
scas
inc
pop
jnp
lock
addb
mov
inc
xor
popl
sub
jp
lret
out
or
in
gs
push
push
scas
mov
ja
sbb
fistl
pop
or
movsl
lock
pusha
notb
sbb
and
sub
jo
mov
in
sbb
push
push
push
push
lods
int3
sub
out
clc
lods
jne
mov
sbb
adc
mov
xchg
shrl
dec
pop
inc
imul
push
mov
xchg
mov
inc
and
sub
xchg
jl
mov
sub
push
dec
adc
repnz
insb
aam
sarl
rcrb
sbb
mov
into
je
and
push
or
sbb
or
add
pop
pusha
add
enter
iret
test
ret
adc
lret
cwtl
push
jo
add
pop
add
adc
shll
push
xchg
inc
mov
cld
adc
add
adc
inc
pop
jl
cmpsb
add
xchg
xlat
test
adc
filds
mov
xchg
and
add
loope
cmp
lret
sub
cmp
popa
push
mov
adc
dec
sub
or
push
adc
lock
or
add
lea
imul
bound
jbe
rolb
popf
jl
sbb
xor
sbb
add
xor
pop
add
and
sbb
lds
pop
mov
pushw
mov
or
push
inc
fisubrl
outsb
push
add
lea
adc
cmp
sbb
cmp
ljmp
xor
cmpsl
mov
ret
inc
movsl
scas
inc
push
or
test
sbb
ja
int3
mov
fsts
jae
movsl
mov
rcll
ret
lret
shr
shlb
cld
add
aaa
loopne
hlt
fcoms
jmp
adc
inc
lock
test
mov
or
negb
adc
inc
inc
cmp
inc
inc
scas
xlat
add
neg
and
inc
cmp
pop
add
aaa
cmp
fstps
shll
out
movsl
movsb
fs
or
dec
jne
ss
in
in
lea
inc
call
sbb
imul
pop
mov
inc
push
xor
adc
into
ret
rclb
and
int
imul
adc
inc
cmp
mov
adc
pop
push
addb
lahf
push
or
aam
dec
shll
sbb
sbb
pop
push
out
push
mov
mov
enter
lret
test
push
or
inc
push
or
adc
lock
pusha
jno
jne
xchg
push
push
aam
pop
pop
adc
push
or
mov
dec
or
aad
inc
pop
in
adc
sahf
cmc
rorb
pop
ret
and
cltd
cwtl
out
add
push
outsb
stos
add
push
cmp
jo
mov
adc
shrl
aaa
imul
enter
loopne
call
xor
dec
xchg
pop
pop
fs
pop
xor
in
push
dec
cld
sbb
les
dec
mov
sbb
hlt
mov
adc
bound
push
xchg
lret
add
lock
loop
or
repnz
pop
push
mov
or
mov
jmp
push
rclb
incl
mov
fiaddl
adc
lret
dec
xor
fdivs
push
xchg
inc
repnz
mov
mov
push
leave
hlt
stos
mov
fdivrs
cmp
sbb
add
inc
push
rcr
xor
dec
inc
fwait
add
andb
or
mov
add
jno
jae
lret
clc
and
mov
mov
test
jnp
out
stos
testb
xor
mov
pop
mov
pusha
aad
dec
shlb
dec
aad
sbb
xor
and
xor
sub
add
mov
pushl
adc
push
ds
jmp
xor
dec
rorl
adc
add
sbb
jns
loope
mov
adc
lea
cmp
sbb
fiadds
sbb
sbb
insl
icebp
and
andb
lahf
cli
or
sub
pushf
push
cmp
repnz
sub
jo
push
ret
addb
xchg
pop
pop
xchg
adc
mov
push
xor
shlb
ljmp
adc
mov
sbbb
sbb
xlat
out
xchg
pop
test
inc
jge
cmp
dec
mov
jae
jbe
mov
push
adc
or
shlb
shll
xor
movsl
je
aad
rcll
stos
jae
cmp
orl
mov
push
push
xor
mov
push
in
into
push
xchg
mov
cmp
pop
cmp
jp
and
fimull
adc
adc
fs
mov
outsb
out
rcrb
test
test
cmp
pop
cs
xor
add
fsubs
push
mov
fcmovbe
aad
mov
push
fcomi
icebp
push
rcll
push
mov
in
push
inc
mov
lods
loop
mov
push
pushf
inc
mov
addr16
add
push
subl
loopne
jmp
subb
jg,pt
imulb
push
xor
adc
int3
or
pop
sub
in
mov
sbb
or
subl
aad
pop
cmp
mov
mov
sahf
nop
inc
mov
push
sub
enter
add
test
mov
mov
shlb
mov
icebp
fcomps
push
insb
push
das
sbb
adc
fcoms
sub
adc
and
pop
andl
push
jns
aas
js
roll
faddl
ret
mov
ret
or
scas
push
dec
lods
push
popf
add
mov
jmp
push
inc
and
and
ljmp
data16
mov
popa
out
or
rorb
jp
ret
scas
xor
sbb
pop
clc
or
clc
push
roll
xlat
inc
scas
adc
dec
jb
mov
add
jo
gs
mov
add
aas
jg
rcr
test
cmp
adc
jno
push
adc
loopne
add
test
or
sub
fs
sbb
adc
shlb
mov
ss
lock
inc
jp
jb
push
pop
mov
mov
fisttpl
or
nop
test
icebp
rol
shll
test
push
xchg
push
xor
in
adc
ja
loope
adcb
rorb
inc
icebp
add
imul
xchg
and
fcmovu
leave
xor
rcrl
mov
mov
mov
or
push
xor
or
xor
jb
ret
sbb
xlat
loop
add
mov
mov
dec
int
subl
push
cld
cmp
out
repz
lds
add
jge
test
in
mov
imul
mov
lret
aam
xchg
cmpsb
push
mov
rolb
rcr
int
add
rol
fnstcw
dec
ja
jae
push
test
jp
js
jmp
xchg
jg,pt
and
pop
fwait
push
and
jb
icebp
mov
or
sub
xlat
loope
daa
packssdw
adc
jp
xor
jb
or
into
push
addr16
inc
int
push
and
mov
lods
push
dec
adc
inc
xor
push
cld
add
xor
or
and
mov
and
scas
shll
sub
cld
sti
pop
pop
cmp
push
pop
not
insl
or
or
sbb
xor
xor
inc
loop
jmp
inc
fldenv
mov
xor
js
push
cmp
sbbl
ja
addb
outsl
adc
sbb
loopne
sahf
fisubl
mov
cmp
stos
popf
loope
sub
test
sub
mov
fisubs
insb
enter
int3
mov
sbb
or
into
add
ret
jecxz
cmpsl
popa
js
push
mov
popa
aad
rcr
sub
mov
add
pop
cmp
lcall
in
sub
loop
or
shll
sub
mov
push
ret
push
add
xchg
popf
mov
mov
add
loop
ficomps
jns
add
dec
sbb
xchg
mov
jge
jbe
cmpsb
xchg
fiadds
inc
dec
das
test
push
test
jno
inc
xchg
sub
or
aaa
fs
nop
mov
pop
mov
push
or
add
xor
add
cmpl
push
fld
jbe
or
leave
xor
shl
adc
inc
or
adc
add
inc
sbb
nop
loopne
int
scas
hlt
stc
add
push
movsl
jo
stos
cld
imul
sbb
pop
lock
test
dec
gs
lret
inc
or
mov
push
mov
and
enter
mov
adc
stos
dec
xchg
add
inc
aam
dec
popa
and
push
dec
dec
push
inc
inc
adc
or
stc
add
mov
popa
pop
mov
adc
or
dec
in
loop
jnp
ret
sbb
sub
inc
and
sti
jae
inc
mov
jne
jmp
sbb
dec
test
cmp
daa
dec
jne
jmp
sbb
add
sub
xchg
call
xor
and
popf
cwtl
adc
mov
add
pushf
or
push
push
inc
cli
cli
repz
sbb
es
sbb
xchg
test
mov
roll
push
imul
jmp
push
sbb
xchg
mov
xchg
mov
or
dec
mov
pop
insl
test
add
adc
xor
sub
arpl
inc
test
aad
push
aam
sbb
dec
aad
adc
loopne
mov
rcrl
adc
dec
adc
movsl
into
inc
cmp
cmp
dec
lret
mov
sbb
sbb
mov
sbb
and
sbb
push
cwtl
enter
in
mov
or
mov
jne
popf
dec
mov
test
and
push
mov
rolb
push
add
popa
movsb
xchg
adc
jmp
inc
jne
leave
push
push
mov
out
pop
and
dec
popa
stc
packssdw
lds
imul
leave
or
mov
mov
adc
or
adc
mov
mov
sub
test
lods
and
ret
adc
sbb
pop
aam
je
aaa
add
or
mov
mov
jno
cs
push
testl
sahf
insl
push
bound
cmp
xchg
jo
or
push
loopne
mov
pop
rcll
pop
testb
stos
inc
ja
movsb
mov
xor
push
lock
mov
xchg
sbb
push
push
lock
xchg
sbb
xchg
xlat
push
push
mov
pop
test
and
add
add
bound
jb
mov
sbb
xchg
into
rolb
mov
cli
adc
ret
pop
js
rol
inc
sbb
xor
popf
test
mov
in
cvtps2pi
mov
jecxz
mov
loopne
mov
sbbb
or
pop
cmp
aam
cltd
lds
push
add
jp
mov
sahf
in
ss
lods
daa
orb
pop
cmpsb
mov
lea
jmp
mov
jp
push
sub
enter
dec
xchg
mov
add
jmp
sub
mov
insb
ljmp
int
xchg
pop
xor
aas
test
inc
les
loope
enter
and
and
adc
aad
jge
push
dec
push
aad
push
ljmp
in
sub
or
sbb
mov
adcb
adc
stos
push
movsl
sbb
push
sub
pop
adc
xor
pop
enter
les
mov
cmp
inc
lods
icebp
xchg
sub
push
sub
adc
mov
lea
sbb
xchg
into
fwait
je
movsb
lret
adc
cmp
sub
adc
rorb
test
mov
stos
adc
ljmp
jnp
sar
mov
pop
lods
rcrl
cli
push
fcompl
add
mov
sbb
push
and
adc
enter
inc
push
mov
adc
and
test
add
push
mov
ret
mov
add
into
mov
ror
push
pop
aad
or
neg
cmp
pop
aam
jmp
sbb
dec
inc
repz
ja,pt
adc
pop
cmc
inc
adc
mov
mov
into
add
stc
and
push
inc
pop
xor
aad
xor
ret
push
mov
notb
lret
fidivrl
test
push
mov
push
mov
mov
or
xor
mov
cmp
dec
dec
data16
dec
xor
push
sub
clc
js
or
adc
add
jl
adc
loope
inc
push
ret
test
and
jne
mov
and
add
lock
enter
je
rcl
sbb
ret
mov
pop
lea
add
push
xor
add
adc
aad
rcll
add
clc
mov
aaa
add
in
rcrl
adc
and
add
and
idivl
add
shlb
xor
xlat
ljmp
lcall
invd
movsb
add
and
xchg
jo
pop
fldt
inc
pop
in
add
push
jo
sub
push
adc
push
or
std
test
cmc
inc
or
xchg
ds
adc
stos
mov
push
jno
add
adc
xchg
sub
stos
add
xor
subb
ljmp
mov
into
mov
pminsw
or
lahf
xor
subl
in
adc
pop
rorl
rorb
pop
xlat
mov
mov
add
mov
dec
jecxz
add
or
enter
rolb
push
pop
repnz
jno
and
andb
inc
scas
jb
rclb
xor
mov
or
dec
gs
mov
sbb
pop
fs
scas
xor
xlat
pop
js
push
adc
add
es
or
mov
push
cs
inc
add
test
cmpsl
clc
cmp
push
movsb
mov
leave
mov
leave
lods
pop
int
andb
xor
cmp
clc
pop
adc
rorl
rcll
int
test
add
mov
leave
fsubrp
add
add
les
mov
std
pop
xor
pop
loope
pop
or
add
fmull
sub
cmp
scas
dec
test
icebp
xchg
xor
movb
sbbb
rclb
or
lea
mov
inc
dec
cmp
push
xchg
pop
mov
pop
sub
xor
int3
clc
xor
mov
loope
loop
add
pop
add
sbb
lret
jo
dec
loope
sbb
gs
lret
dec
xor
inc
or
shrl
jmp
mov
inc
imul
imul
sbb
pushf
sbb
cmp
sub
iret
ljmp
adc
sbb
lgs
incb
push
add
adc
jo
loop
into
and
inc
mov
push
lods
sbb
js
movsl
push
mov
jb
fiaddl
fistl
mov
mov
iret
mov
push
or
adc
pop
pop
scas
cmp
daa
adc
pop
dec
cmp
or
gs
popa
lret
in
inc
clc
ret
mov
cmp
ja
push
lahf
out
sbb
insb
xor
sahf
push
mov
cld
cmp
mov
cmp
xor
mov
mov
testl
pop
push
lcall
ljmp
adc
bound
ret
or
xchg
sarl
sbb
cmc
mov
daa
adc
mov
xchg
rcrl
inc
push
loopne
adc
sbb
inc
push
clc
ret
mov
mov
pop
leave
lret
mov
shlb
add
ror
push
add
scas
adc
lcall
lods
mov
stos
pushf
push
nop
adc
or
addl
push
adc
fwait
into
add
adc
or
es
push
bound
je
maxps
push
sbb
inc
in
test
ret
pcmpgtw
push
mov
shlb
movsb
lods
out
push
subl
sti
call
fisubrs
push
or
cwtl
add
cmpb
cmpsl
push
jmp
mov
xchg
push
cmp
sahf
aaa
aam
test
ret
jge
or
mov
loop
mov
shll
push
add
outsb
ret
or
cmp
adc
or
push
dec
pop
xchg
cmp
xchg
and
pop
xor
decb
aam
sub
fwait
movsb
push
cmpsb
mov
popf
or
subb
fwait
jae
jb
sbb
jge
xchg
out
roll
push
and
sbb
lret
insl
movsl
ljmp
stos
popa
and
pop
leave
xchg
push
add
hlt
fidivl
mov
dec
adc
aaa
xchg
sbb
test
call
adc
xlat
mov
cli
adc
push
or
sub
adc
xchg
jmp
inc
mov
daa
lock
jne
or
sub
push
in
add
add
inc
ret
roll
popa
bound
or
or
scas
inc
push
add
mov
mov
dec
push
in
xor
icebp
cmpsb
pop
push
xchg
sub
pop
mov
outsl
inc
sbb
movaps
stos
xchg
inc
in
adc
outsb
add
cs
lcall
enter
sbbl
xor
int
cmp
call
sbb
shrb
sbb
loope
adc
repz
add
jp
es
add
enter
ja
rolb
icebp
insl
pop
jge
sub
or
clc
and
jge
lock
out
and
inc
je
xor
and
xlat
das
sub
push
push
xor
clc
xchg
pushf
loop
mov
add
inc
stos
cld
or
hlt
mov
or
push
pop
xchg
push
mov
sbb
les
pop
adc
sub
adcl
mov
or
pop
add
and
fwait
mov
push
div
les
inc
out
stos
mov
sub
jp
or
mov
xor
mov
mov
push
pushf
pop
inc
xor
lods
lds
adc
push
stos
add
lcall
adc
ret
cmp
xchg
inc
push
jl
cmp
or
or
mov
bnd
push
testl
repz
sbbb
imull
lea
bound
aam
dec
xor
jne
pop
shlb
frstor
xor
mov
ret
mov
cltd
stos
mov
les
pop
or
inc
mov
push
pushf
cmpsl
sbb
xchg
dec
inc
mov
fs
jb
or
in
mov
mov
scas
rol
dec
lret
push
add
hlt
enter
push
pop
or
ret
lods
or
or
clc
leave
mov
and
and
rcll
push
pop
cmc
adc
jge
xor
mov
sub
jnp
loop
or
dec
xchg
test
sub
stos
adc
clc
xlat
rol
icebp
hlt
xor
into
lcall
pop
jecxz
or
add
sbb
mov
movb
icebp
fcomps
sahf
and
or
sbb
jne
add
dec
pop
add
cmp
xor
pop
sub
sbb
add
es
dec
je
out
adc
jbe
test
cmp
imulb
cmp
adc
mov
sbb
aam
lret
lods
cmp
rorl
or
sbbb
adc
mov
mov
popa
test
sub
push
lahf
rclb
addr16
inc
sbb
lds
cmpsl
arpl
push
xchg
xor
adc
push
or
push
adc
loopne
mov
mov
inc
rol
xchg
push
dec
lds
imul
cmpsb
push
and
xchg
adc
lcall
das
cli
add
clc
add
mov
icebp
sub
rcr
lock
rep
push
xchg
imul
test
aad
adc
add
imul
icebp
les
mov
add
jecxz
nop
pop
pop
sub
pop
jle
pop
inc
or
pop
or
addr16
mov
or
jb
dec
sarb
jne
and
push
cmp
push
sub
sub
scas
mov
loop
dec
loop
mov
mov
imul
mov
jmp
loop
adc
or
push
adc
add
pop
cmc
add
shr
push
imul
mov
add
sbb
pop
lea
add
add
add
mov
sbb
mov
test
adc
or
lock
jge
add
iret
add
ret
aam
xchg
jo
adcl
mov
push
rorb
add
add
shr
push
pop
mov
push
sub
in
lods
mov
sbbl
enter
push
push
fldt
mov
in
adc
cmp
add
pop
sbbb
dec
scas
push
or
pop
test
scas
cwtl
int3
inc
stos
push
add
add
jb
adc
xor
pushl
xchg
mov
sbb
stos
cwtl
mov
mov
jge
imul
loope
loopne
mov
insb
inc
daa
push
ja
rcl
sub
inc
nop
ret
dec
mov
out
rolb
xor
lret
and
push
addl
cwtl
addr16
cmp
and
dec
push
out
mov
pop
outsb
arpl
mov
pushf
stos
push
sub
jge
lret
lds
cwtl
jo
pop
push
pusha
popf
ja
sbb
out
enter
adc
lea
xchg
insl
or
out
rorl
jmp
push
push
add
jecxz
xchg
test
mov
sahf
jb
insb
sbb
push
or
jge
out
inc
test
sbb
push
out
sbb
lods
inc
adc
mov
fwait
add
movsl
inc
add
xchg
xor
inc
mov
inc
inc
mov
jno
jbe
aaa
inc
mov
or
mov
sahf
fs
sub
adc
enter
jl
mov
pushf
js
xor
xorb
rsm
add
cmp
add
loop
mov
xor
sbb
imul
cmc
xchg
sub
sbb
cmp
sub
out
mov
or
xlat
sbb
adc
push
inc
stos
mov
push
fstpl
cld
leave
adc
into
outsl
and
add
icebp
add
in
dec
sbb
imul
test
das
cmp
mov
inc
outsb
fimull
scas
xchg
inc
mov
call
cmp
pop
mov
aas
dec
mov
sbb
add
ret
jp
mov
jo
or
and
enter
mov
sub
pop
sbb
push
stos
outsb
std
sti
sub
or
jmp
inc
inc
notb
and
cmp
cwtl
test
sarl
das
fimull
add
pop
lea
cltd
xchg
shrb
mov
gs
and
sti
out
pop
sub
push
adc
notl
adc
pusha
pop
add
add
pusha
push
movsl
and
xchg
sub
js
js
ror
jmp
adc
mov
shlb
jae
ss
sbb
sub
mov
xor
push
mov
add
inc
add
pusha
sti
push
mov
pop
or
inc
je
add
js
cmc
lahf
pop
psraw
andl
movb
push
add
mov
pop
popa
push
or
inc
cmp
mov
es
sub
loopne
sub
lds
mov
das
mov
push
mov
nop
sub
nop
mov
mov
lret
push
adc
cmpsl
adc
dec
sbb
scas
mov
pushf
push
add
rolb
pop
adc
and
cmpb
jecxz
push
mov
push
ret
adc
les
ss
or
ret
or
xor
mov
cmp
movsb
push
fdivrs
dec
dec
incb
enter
add
jp
add
push
xorb
xorl
icebp
fsts
outsb
ret
cwtl
mov
add
fadd
pop
add
add
jb
stos
jae
dec
stos
or
and
lret
shlb
inc
inc
xchg
rcll
frstor
lcall
fimuls
push
andb
pop
push
push
push
sub
stc
add
push
les
xchg
ret
sub
cmc
and
ljmp
repnz
fs
mov
cmpsb
ljmp
cmp
mov
clc
pop
in
ret
roll
sbb
pop
and
push
inc
and
icebp
or
xor
fidivs
mov
repnz
adc
pop
cvtps2pd
jecxz
and
push
or
xchg
hlt
mov
fs
add
jne
or
cmpsb
add
inc
scas
xor
cltd
roll
push
call
or
outsl
jecxz
add
cli
lahf
ror
addl
pop
nop
rcrb
xchg
lea
test
repz
pusha
adc
js
fldcw
int3
lcall
lock
addb
mov
cmc
inc
in
movsb
sbb
jmp
jp
decl
movsb
sbb
add
and
cld
aas
mov
push
inc
aam
sti
daa
jne
and
ret
add
cmp
or
out
push
rclb
or
loop
mov
les
push
sti
or
pop
pop
lods
sbb
jae
and
stos
scas
out
push
mov
dec
sbb
lea
mov
add
pop
mov
ret
cmp
rcll
int3
popa
inc
cmp
push
and
sarb
adc
push
add
or
xor
jb
xchg
mov
push
xor
xchg
sub
add
push
inc
mov
xor
push
clc
lcall
add
sbb
mov
clc
or
fs
xlat
sbb
enter
push
cs
sbb
adc
leave
cmpb
adc
push
popa
shlb
and
xor
jecxz
mov
add
jg
lods
loopne
scas
bound
jne
sbb
in
mov
xor
cmp
jmp
arpl
jl
mov
xlat
add
mov
add
xor
lea
punpckhbw
subb
das
ljmp
fadds
xchg
pop
xor
pop
push
mov
and
icebp
mov
je
cmp
adc
iret
add
mov
inc
pop
and
mov
dec
aad
adc
inc
or
mov
sub
sbbb
lods
test
push
repz
sbb
leave
inc
or
xor
adc
push
push
adc
shll
cmc
sbb
mov
sbb
repnz
pop
outsb
adc
xor
xor
jb
mov
push
test
mov
push
cmp
push
push
js
adc
xorl
mov
push
test
pop
xor
stos
pop
mov
and
rcrl
lret
sbb
adc
jo
or
dec
stc
cld
andl
lock
popa
dec
call
push
mov
lcall
jo
sbb
fisubrs
es
add
stos
inc
push
es
push
cmpsl
imul
shl
or
dec
and
sub
inc
add
pop
repnz
nop
xchg
imulb
iret
lret
or
push
daa
and
inc
icebp
sbb
push
rolb
add
sbb
cmc
mov
sub
ljmp
adc
nop
ja
or
leave
stc
in
push
cmp
sbb
testb
sahf
push
pop
test
cmp
sbb
ror
mov
shlb
sbb
jmp
jb
jp
sub
sbb
jl
mov
les
mov
or
ret
pop
sub
add
call
rcll
push
push
lret
mov
popa
lds
add
out
movsb
pop
sub
sub
push
xor
ret
movsl
jae
insl
inc
xchg
xchg
cld
adc
push
push
mov
mov
mov
mov
test
inc
loopne
add
loope
sbb
sahf
arpl
push
mov
and
hlt
and
pop
enter
push
mov
or
adc
sub
cmc
add
xchg
out
xor
stos
mov
jne
out
fisttpll
repz
ret
push
mov
rcr
xor
icebp
adc
sbb
call
xchg
adc
rorl
sbb
add
scas
int
mov
ljmp
dec
orl
jge
add
add
fcmovu
inc
lea
movzbl
out
into
pop
out
mov
jle
cmc
cmp
js
repnz
add
jg
shlb
std
push
or
inc
and
pop
adc
push
mov
sbb
sub
push
lods
sbb
je
les
cmp
rorl
pop
lds
aam
jl
lea
push
lock
cmp
mov
inc
pushf
cmpl
rcl
xor
mov
mov
lds
xor
shll
daa
rcll
jo
sbb
jo
jb
lock
movsb
sbb
clc
sbb
scas
sub
sbb
cmp
shlb
jo
push
mov
xchg
setl
int
xchg
pop
clc
xor
scas
mov
out
jg
push
cmp
lea
imul
pop
mov
push
pop
icebp
fdivp
fsubs
fadd
cmp
test
push
mov
ljmp
je,pn
andb
fiaddl
dec
add
push
stos
jo
lods
mull
xor
loope
cmp
jns
push
movb
dec
add
or
adc
mov
add
shlb
push
or
jecxz
lahf
push
jo
adc
push
inc
adc
leave
cltd
in
add
rcl
pop
aad
push
or
ljmp
lds
out
push
pop
mov
add
movsl
int
shlb
or
cmpsl
sar
pop
push
mov
xor
rolb
test
cmp
cmc
mov
movsb
pop
lret
fsubrs
push
aad
adc
mov
add
push
div
push
jb
pusha
xlat
addr16
stc
adc
jp
mov
daa
icebp
push
jl
sub
inc
pop
gs
mov
or
mov
push
pop
test
iret
or
hlt
out
or
inc
cmp
sbb
add
push
cmpsb
pop
mov
aad
pop
cmp
test
std
push
mov
ds
imul
push
sbb
xor
pop
subl
ds
mov
aam
push
mov
sub
or
fmull
sbb
add
mov
add
sub
pusha
test
daa
cwtl
mov
cmpsb
jne
in
cmp
dec
inc
or
xchg
dec
scas
nop
pushf
mov
movsb
pop
mov
inc
jge
pusha
jmp
rcrb
sbb
inc
psubusw
mov
lret
mov
mov
cmp
mov
dec
repnz
mov
cmp
xchg
pop
es
arpl
js
adc
adc
or
add
or
mov
fwait
adc
xor
enter
add
icebp
lcall
mov
add
test
push
pop
or
mov
add
push
jp,pt
stos
lret
add
pop
ret
sbbb
test
sbb
and
cs
push
push
addl
pop
pushf
enter
lret
or
or
inc
negl
sbb
sbb
push
sub
shrb
inc
or
mov
mov
sbb
add
jle
sbb
inc
inc
fnstsw
push
push
sbb
or
adc
orb
sbb
loope
add
sbb
aam
push
popf
movsl
imul
fiaddl
cmp
rolb
subl
lock
aam
mov
sbb
in
xor
imul
das
push
push
andb
mov
andb
jmp
push
pop
movsl
mov
adc
adc
jge
les
push
add
sub
sub
dec
ret
push
cmp
mov
cmp
push
add
cwtl
bound
mov
movl
jne
dec
cs
test
and
sub
inc
cmpsb
aas
out
sahf
sbb
int
ds
push
dec
xchg
test
or
mov
pusha
mov
or
and
add
inc
pop
push
lcall
sbb
add
push
mov
mov
cmpsb
cmp
lcall
mov
add
inc
inc
or
inc
mov
in
push
mov
call
cmp
xor
icebp
je
pop
clc
cmp
mov
sbb
xchg
stos
pop
bound
jmp
aam
add
shlb
mov
push
repnz
adc
inc
adc
mov
clc
add
and
mov
in
add
mov
in
add
stos
add
sbb
repz
mov
ds
xchg
adc
loopne
scas
andb
mov
cmpsl
xchg
mov
pusha
mov
sbb
jge
loope
xchg
sub
pusha
adc
push
ja
inc
jb
scas
cltd
and
aam
adc
and
push
lds
xor
inc
or
push
inc
pusha
dec
data16
mov
xchg
or
dec
loopne
sub
nop
rcrb
movsb
xchg
and
arpl
inc
sub
rorb
pop
js
cmp
sbb
clc
push
mov
mov
add
mov
xchg
call
and
sub
push
pop
sub
sub
xchg
push
xor
xchg
xchg
out
cmp
cli
les
cmc
fstpt
lret
pop
fwait
jecxz
lds
sti
and
repnz
sub
pop
fisubs
test
clc
push
fcompl
mov
idivl
xor
add
out
add
lock
mov
jb
inc
adc
hlt
subb
xchg
push
mov
sub
ret
adc
pushf
adc
loop
jp
test
xchg
lods
adc
enter
test
or
rcl
or
mov
cltd
test
cltd
data16
and
xchg
pushf
mov
sub
xchg
adc
pop
andl
mov
xor
adc
subb
add
push
dec
in
rorb
or
ret
adc
test
push
mov
sbb
or
cmc
lret
imul
mov
shrb
cmp
pop
hlt
test
iret
ret
push
push
and
mov
adc
and
mov
inc
loopne
push
sub
xchg
sub
mov
mov
sub
jp
aaa
or
loop
test
punpcklwd
mov
div
test
iret
cs
add
inc
mov
cli
or
aam
std
lods
mov
xchg
mov
sbb
repnz
in
bound
stos
inc
rcrl
sub
mov
cmp
je
mov
outsb
mov
push
push
cmc
lea
cmp
pop
idivb
push
xchg
bound
adc
cmpsb
pop
pop
mov
push
xor
cmp
adc
adc
inc
adc
or
and
in
shll
mov
adc
mov
sub
push
and
adc
mov
roll
subl
add
lods
mov
xchg
or
cmp
or
shll
test
mov
mov
add
in
fcoml
mov
lret
dec
inc
adcl
scas
lret
pusha
mov
popa
inc
clc
bound
sub
inc
add
xchg
pop
lea
push
xcrypt-cbc
cmpsl
nop
pop
xchg
push
and
dec
mov
pop
sub
cld
into
mov
cs
rclb
push
or
jge
ret
sbb
sub
adc
push
push
mov
dec
lcall
ret
dec
or
lods
xchg
mov
xor
dec
sub
adc
mov
rclb
and
arpl
jne
jecxz
xor
ja
shlb
mov
or
add
gs
mov
lock
fistps
inc
mov
xchg
push
pop
sbb
xor
lea
bnd
test
cmpsb
call
jb
mov
pop
adc
fildl
push
stos
fbld
pop
add
push
cmpsb
jmp
ret
or
push
lea
cwtl
sub
int
clc
out
orb
sbb
repnz
cwtl
or
sbb
cltd
xor
pop
fldenv
addb
jo
int
dec
add
pop
or
xchg
xor
pop
addr16
andb
call
push
inc
add
push
icebp
or
jmp
bound
cmpsb
adc
rorl
xor
ljmp
icebp
sbb
add
mov
arpl
add
add
xor
jb
pop
cld
dec
mov
push
sbb
mov
in
mov
adc
cs
inc
adc
jo
rclb
xchg
cli
adc
rolb
sub
cs
adc
push
lahf
xor
addr16
cs
jle
rcrb
imul
add
loopne
rorb
or
xchg
jmp
loopne
dec
xchg
mov
fldl2e
inc
xchg
orl
sbb
pushf
dec
add
mov
add
loopne
push
cmp
mov
sub
in
lock
adc
cmp
and
ret
sbb
mov
add
adc
ror
clc
pop
adc
sub
jmp
sub
movl
jbe
lret
adc
cld
call
inc
mov
cwtl
and
lock
add
xor
mov
dec
mov
push
inc
subl
test
fwait
ret
xchg
sbb
orb
sbb
xchg
push
adc
mov
shr
mov
lock
mov
xchg
ljmp
dec
mov
popa
mov
sbb
push
pop
adc
adcb
jno
inc
mov
mov
popa
mov
xor
add
bound
xor
add
push
mov
push
je
stos
and
rorb
popl
stos
jno
lcall
inc
enter
shlb
mov
push
or
lea
addb
adc
js
rorl
cwtl
inc
dec
push
xchg
dec
push
movsl
xor
loopne
aam
adc
or
rclb
mov
mov
adc
push
push
rorl
inc
xor
add
cmpb
or
das
out
push
add
add
pop
mov
test
sub
cli
roll
adc
inc
insb
loope
xor
add
shl
sbb
testl
push
in
mov
outsb
pop
roll
test
mov
pop
adc
adc
xchg
jmp
filds
shlb
roll
loopne
push
push
add
or
in
inc
lret
push
shrb
sbb
add
push
ljmp
pushf
xchg
inc
add
dec
cmp
into
mov
loope
mov
cmp
lds
mov
jno
push
or
sbb
mov
xor
push
pop
lods
or
push
or
incl
xchg
xchg
jne
iret
inc
lret
int3
sub
adc
adc
loopne
mov
adc
imul
ret
int3
mov
rolb
aad
sbb
das
xchg
out
mov
xchg
mov
or
pop
aas
mov
sub
decb
shrl
ljmp
mov
cmpsb
mov
test
inc
pop
xchg
sbb
jbe
sbb
mov
lcall
sar
mov
dec
imul
lds
pop
inc
scas
push
dec
rcrb
or
push
lret
adc
push
push
fs
xchg
sbb
mov
or
push
clc
jae
push
jp
pop
addb
inc
inc
test
hlt
adc
rcl
shl
xchg
push
stc
lock
addr16
faddl
daa
push
ret
inc
push
inc
imul
imul
mov
pushw
lcall
in
inc
pusha
or
loopne
add
or
add
dec
add
inc
hlt
add
rcl
aad
inc
push
or
leave
adc
push
movsl
ljmp
outsb
sbb
or
inc
rcll
pop
add
and
pop
push
popa
adc
sub
cmp
das
adc
cmp
add
mov
xchg
add
clc
enter
sub
lret
and
jo
stos
inc
cltd
sub
rcrl
xor
mov
adc
fld
sbb
add
mov
movntq
out
push
pop
xchg
mov
cmpsb
push
pop
mov
imul
dec
movsl
leave
es
jge
inc
xchg
adc
repnz
xchg
loopne
jle
sbb
mov
inc
adc
sbb
xchg
xor
sub
in
mov
lods
add
or
push
add
or
add
mov
jne
mov
cmp
shlb
jmp
popf
adc
mov
sbb
ss
scas
stos
cwtl
sub
aam
je
adc
add
out
push
aad
push
sbb
mov
fwait
add
adc
xor
and
movl
shl
icebp
cld
pop
add
jl
notb
popa
xchg
mov
xor
sbb
aam
imul
addb
test
loopne
and
pop
xor
or
aad
xchg
sbbb
mov
lds
repz
or
sbbb
jb
or
push
cmp
cmp
cltd
or
aad
repnz
sbb
orb
test
push
or
inc
movsl
push
aas
mov
pop
or
mov
std
inc
push
mov
mov
cmpsb
andb
jp
adc
lock
push
adc
jo
xchg
test
and
xchg
mov
xor
dec
push
imulb
pop
xchg
and
pop
pop
fidivl
dec
and
test
and
add
push
jno
xchg
cmp
adc
mulb
dec
xor
les
call
cmp
inc
int
inc
les
push
repnz
sbb
lret
js
add
push
dec
sbb
loop
inc
pop
loopne
or
push
or
repnz
stos
pusha
shll
fiadds
jge
or
pop
pushf
mov
push
sahf
sbb
dec
pop
call
xor
inc
pop
push
lahf
adc
or
mov
push
xchg
or
pop
xor
rorb
push
or
vrcpss
and
ds
inc
pop
dec
stos
sub
pop
inc
daa
push
ds
adc
call
loop
stos
add
and
dec
mov
push
add
or
add
sbb
adc
xchg
roll
jmp
adc
xor
and
push
mov
sbb
bnd
push
cmp
pop
movsl
sub
push
cld
bound
mov
cmc
cli
icebp
clc
lahf
push
cmp
aam
cmp
mov
inc
add
aaa
into
testl
stos
pop
cld
mulb
sbbb
add
mov
pop
mov
enter
mov
pop
mov
mov
test
lahf
push
addb
xor
rclb
push
pop
mov
push
sub
pop
xchg
test
add
rorl
add
sbb
jo
sub
add
or
add
ret
sbb
shlb
stos
mov
or
and
and
cmp
mov
mov
insb
pop
sbb
fs
cltd
mov
orb
pop
movsl
jmp
sub
pop
out
push
xor
inc
mov
test
push
es
mov
cmp
sbb
mov
aam
xchg
test
lock
lcall
cmpeqps
or
cld
enter
inc
push
pop
jno
mov
inc
xor
mov
frstor
insl
shll
daa
push
cwtl
mov
or
leave
mov
pop
in
push
pop
push
push
mov
lret
or
es
add
inc
clc
push
adc
push
sbb
filds
loopne
mov
xor
add
gs
or
adc
loop
je
testb
lods
ljmp
jl
inc
pushf
subb
in
pop
xchg
xchg
cmp
nop
or
div
dec
adc
mov
imul
and
xchg
ret
push
pop
or
jmp
jecxz
nop
inc
lock
adc
and
jne
mov
xor
add
cmp
or
loopne
inc
sub
stos
icebp
femms
cs
mulb
or
mov
jnp
sub
popa
add
add
pop
jno
aaa
mov
inc
lods
scas
iret
adc
enter
add
adc
hlt
add
ret
push
add
add
push
jo
adc
jb
adc
adc
cld
test
lea
pop
inc
in
cmp
out
xchg
pop
ss
push
sub
mov
adc
jo
cmpsb
rorl
aas
inc
dec
sub
jnp
mov
and
pop
imul
insb
or
cmp
test
insl
pushf
xchg
sbbb
adc
rcrl
push
insl
add
rorb
lock
pop
add
mov
adcb
stc
cmpsb
sub
push
rolb
mov
pop
xchg
or
xor
lret
xlat
push
loopne
cli
or
inc
adc
or
and
sbb
and
mov
loop
push
pop
mov
jmp
xor
xor
cmpsb
test
sbb
push
mov
cli
add
movsb
inc
lahf
testb
inc
add
and
mov
arpl
xor
popf
ret
push
inc
push
mov
sbb
add
add
push
pop
xor
out
outsb
dec
out
popf
loopne
inc
mov
pop
xchg
or
xchg
daa
pop
shl
aas
adc
dec
adc
or
push
push
pop
adc
lds
sbb
nop
inc
mov
push
das
mov
jbe
rorb
dec
adc
out
dec
gs
and
push
shrl
mov
call
add
mov
pusha
mov
xlat
movsb
data16
mov
rolb
add
gs
xchg
popf
fxch
clc
add
or
or
adc
cmp
repnz
rclb
or
mov
sub
xchg
fmull
add
adc
lock
or
cmp
add
scas
add
and
adc
stos
dec
inc
lds
outsb
inc
or
adc
js,pt
jb
shll
jae
enter
push
cmp
and
xor
aad
cli
rcll
rol
pop
aad
es
or
mov
xor
mov
and
fimull
les
leave
xor
inc
cmp
movsl
inc
test
xchg
scas
adc
sbb
fsubrl
push
rsqrtps
dec
adc
or
call
jno
gs
mov
adc
mov
rorb
pop
xor
sahf
out
cmpsl
js
inc
dec
push
test
in
xchg
cmp
sub
pop
sahf
rolb
sarl
push
out
or
sbb
cli
pop
aam
testb
cmp
inc
cmp
outsb
inc
add
xor
sbb
pusha
ljmp
sub
adc
in
adc
dec
adc
and
or
add
adc
addl
testl
out
ret
adc
je
adc
into
adcb
fmull
mov
cwtl
fimull
imul
and
add
xchg
mov
fldcw
pop
add
inc
imul
cltd
push
movsb
mov
adc
mov
mov
sbb
push
shll
pop
xor
sbb
mov
repnz
and
xchg
push
fcoms
cmpsb
xchg
add
lock
test
xor
mov
pop
push
mov
iret
xor
popf
leave
cmp
or
add
or
sbb
adc
push
and
or
fmuls
pop
out
fildl
xor
push
js
dec
cmc
add
xor
inc
pand
adc
negb
ret
pop
adc
xchg
or
daa
lret
in
jnp
js
add
mov
lret
test
pushf
add
xchg
rcrb
pop
jmp
cmp
outsl
fwait
int
jne
and
xchg
popl
sbb
out
sbb
cwtl
bound
out
dec
or
xchg
ret
push
and
sub
not
and
or
mov
mov
inc
es
push
xchg
mov
xchg
jo
movsb
xchg
lods
cmc
pop
mov
cltd
test
jecxz
push
inc
or
or
loope
and
xorl
outsb
and
or
rcr
lea
mov
mov
scas
sarl
in
jl
mov
mov
mov
mov
orl
mov
aam
mov
pop
or
cli
jb
jae
pop
scas
dec
dec
inc
pushf
stc
add
add
inc
into
das
adc
push
mov
mov
sbb
cmp
aas
scas
push
out
push
ret
sub
pop
test
into
adcb
sbb
add
sbb
add
loope
mov
push
cli
icebp
popf
sub
lds
cmp
xor
cmp
jge
cli
jge
sbb
les
xchg
lds
xchg
fs
lock
add
mov
pop
pop
inc
mov
sbb
pop
cmp
negb
push
cmp
shrb
mov
mov
adc
mov
push
push
cwtl
jecxz
add
loope
in
inc
jl
lret
scas
insl
and
dec
inc
ret
adc
les
or
int3
nop
rcl
add
jmp
mov
adc
xchg
and
push
nop
pop
in
add
sub
std
loopne
xor
sbb
mov
lock
leave
les
push
daa
stos
in
rcrb
rolb
cmp
or
add
add
add
test
test
fimuls
out
or
jge
or
add
mov
and
mov
rclb
out
add
add
pop
shrb
addb
pop
xchg
ret
xor
mov
push
pop
push
cmpsb
and
in
int
icebp
cmp
xor
in
and
adc
xchg
or
add
ljmp
aam
mov
iret
or
inc
shrl
cmp
mov
cmc
mov
subl
xor
push
into
inc
andb
jns
dec
imul
add
push
xlat
inc
mov
xchg
inc
iret
cs
adc
sbb
inc
loopne
push
mov
lcall
popf
enter
fisubs
cmp
rclb
loope
mov
shrb
iret
call
push
push
movsb
lret
data16
xor
orb
repz
sbb
mov
xchg
daa
sbb
pop
pop
or
test
add
shll
sbb
das
push
jb
rol
cld
push
sbb
fwait
cli
pushf
scas
ret
into
sub
rol
or
xor
mov
mov
mov
loopne
mov
rcll
sbb
shr
xchg
rol
add
xor
bound
push
sahf
fstps
xchg
add
test
popf
xor
cmp
lcall
add
xor
push
pop
fldt
inc
aam
xchg
cmp
bound
jmp
jmp
loop
cmp
jno
push
fldz
movsl
or
or
aam
les
dec
sbb
push
outsl
jns
push
xor
xor
sbb
xchg
or
push
in
add
jne
xchg
ret
popl
ret
pop
test
mov
sub
nop
pop
jp
push
push
xchg
and
sbb
sub
xor
add
or
xor
jmp
movsl
mov
lock
xlat
xor
sahf
fimuls
adc
push
push
jae
js
mov
lods
and
mov
jp
es
mov
stc
push
jo
add
int3
ret
rorl
cmpsl
and
push
bound
inc
ret
and
lock
stos
dec
dec
enter
push
test
adc
leave
inc
mov
jnp
add
mov
mov
mov
add
dec
push
cmp
cmpsl
push
inc
push
cmp
stos
prefetchw
push
mov
mov
ret
xor
mov
inc
add
in
xor
test
pop
pushf
lea
inc
insb
adc
fdivrs
adc
push
aam
in
ss
rclb
mov
cmp
mov
in
leave
stos
mov
mov
add
add
das
add
loop
fld
dec
sub
inc
mov
bound
aam
push
dec
rcrl
cmp
out
mov
push
or
ss
mov
xor
into
push
jbe
add
inc
sbb
sub
cmp
pop
push
lods
and
xlat
icebp
test
xor
push
add
or
inc
sbb
pop
cmc
in
pop
cmc
sbb
add
not
mov
inc
jmp
xchg
pop
xchg
into
xor
push
lea
les
or
gs
imul
add
shrb
pop
xchg
mov
push
pop
loope
pop
mov
push
mov
pop
push
mov
push
notl
mov
movsl
xor
pop
xor
lods
icebp
xor
add
sub
scas
or
and
int3
lock
adc
mov
loop
push
adc
hlt
push
add
pop
lret
sub
pop
gs
jo
and
sub
test
xor
sbb
testb
pop
xchg
ret
call
les
or
rcl
xor
xchg
inc
mov
js
lds
jo
or
and
stc
stc
test
or
cli
lods
push
mov
shrb
add
xor
scas
add
jmp
leave
jo
fmuls
jno
adc
mov
pop
push
inc
add
mov
mov
packssdw
jmp
jecxz
andb
lock
adcb
inc
jmp
jb
into
mov
and
adc
add
cmp
shrb
movsl
or
jae
pop
mov
inc
outsb
inc
cmp
xchg
push
loopne
fwait
jo
lret
pusha
mov
cltd
xchg
mov
adc
push
in
in
add
sbb
mov
add
movsb
inc
out
dec
stc
adc
dec
adc
adc
lds
adc
push
test
push
pop
mov
jecxz
xchg
or
mov
jnp
add
lods
idiv
or
sahf
loop
dec
sbbl
ret
push
xlat
mov
and
add
xor
adc
or
das
push
push
testb
sbbl
inc
mov
js
mov
push
adc
xor
divb
movsb
pop
mov
outsl
add
mov
bound
lret
cmp
inc
arpl
cmpsl
jb
callw
test
mov
and
pop
xchg
int
jmp
add
jp
adc
scas
ds
sbb
sbb
rcrb
xchg
xor
shr
push
push
popa
mov
xor
push
inc
add
imul
nop
sbb
cmp
shl
iret
rcrl
rolb
popf
add
adc
mov
xchg
inc
push
mov
adc
mov
jle
pop
or
sbb
adc
cmpb
xor
push
xchg
enter
push
adc
sub
pop
xor
popa
enter
test
mov
out
sub
push
push
or
dec
or
pop
cli
xchg
push
setne
aad
pop
arpl
adc
sub
out
mov
inc
mov
cmpsb
adc
test
or
add
jle
and
mov
int3
sbb
push
add
enter
js
xchg
jb
imul
rclb
and
das
shl
mov
mov
ljmp
dec
leave
and
or
push
test
fwait
pop
push
lret
fwait
or
sar
mov
out
inc
test
out
mov
adc
cmpsl
add
add
in
sub
add
xor
cwtl
pop
je
push
cmc
mov
mov
and
icebp
or
out
or
xchg
arpl
mov
dec
inc
xchg
std
pop
cmp
jl
xchg
jecxz
pop
or
sbb
nop
add
imul
pop
addl
add
xchg
sbbb
mov
sbb
das
inc
adc
stos
cmpsb
sbb
sub
cmp
cld
xor
sbb
pop
xor
cmp
loop
pop
cmpsb
push
cmp
jae
ret
call
clc
rolb
les
sub
dec
sub
sbb
sbb
push
or
call
xor
add
cmp
pop
bsr
movsl
scas
adc
add
and
inc
sub
loopne
add
or
lret
xchg
loop
xchg
or
pop
add
filds
mov
jo
addr16
and
mov
fcmovnb
scas
sti
xchg
xchg
sbb
adc
fcoml
arpl
icebp
sbb
add
push
and
dec
or
pushf
lret
pop
push
in
push
cmp
inc
sbb
sbb
add
gs
sub
xor
adc
adc
and
bound
lock
stos
imul
sbb
mov
xchg
jo
cwtl
out
cmp
inc
pop
add
pop
xor
ret
push
add
ljmp
xor
dec
aam
aam
rorl
add
add
add
pop
xor
das
sbb
dec
fs
push
xor
dec
or
cmp
mov
xchg
cwtl
test
and
fiadds
or
xlat
sbbl
xor
rolb
or
or
clc
add
inc
rolb
pop
adc
in
inc
sbb
xchg
sbb
jno
sub
push
sbb
imul
xor
in
add
pop
test
mov
mov
or
test
mov
mov
loop
cwtl
sahf
jb
pop
add
mov
adc
or
xchg
xorb
lea
pop
es
mov
mov
fs
rcl
out
scas
cmp
enter
movsb
cli
fmul
aad
inc
mov
movsl
ja
xor
lahf
cwtl
adc
add
arpl
add
call
or
add
push
adc
ret
lods
scas
orb
push
mov
and
add
push
jo
xchg
pop
mov
push
and
mov
jnp
or
test
and
xchg
adc
adc
add
call
adc
add
push
pusha
and
push
sub
shlb
add
sbb
rolb
adc
sub
bound
fwait
mov
sar
push
into
popa
add
jp
adc
test
cltd
into
icebp
mov
xchg
roll
mov
push
inc
and
test
roll
jbe
inc
movb
fdivrl
ja
push
cvtps2pd
loope
sub
inc
sub
cmpsl
push
push
rcr
and
adc
pop
mov
pop
inc
or
clc
add
pop
add
push
add
ror
adc
adc
add
pop
jns
shrb
lea
fmull
popf
loop
mov
adc
sub
mov
dec
mov
std
dec
inc
xor
movsl
shrl
xchg
sub
or
adc
add
adc
enter
add
pop
shlb
rcl
je
push
rcrl
mov
hlt
push
xor
stos
cltd
pop
mov
ljmp
add
sbb
clc
xchg
pop
mov
pop
aam
test
sbb
jbe
sbb
imul
mov
nop
and
xor
inc
movsb
lret
rolb
insb
push
aad
movl
cmpsb
push
sub
add
pop
ss
rolb
mov
cltd
clc
push
dec
mov
sbb
movl
push
rcll
jmp
xor
push
xchg
add
pop
cmp
aas
push
fs
sbb
mov
sub
mov
mov
push
xchg
push
or
jge
push
xor
xor
dec
or
orb
or
and
add
xor
loopne
dec
lds
nop
sbb
cmp
add
jge
add
adc
test
stos
test
hlt
rcll
mov
jb
inc
mov
sti
pop
mov
sub
and
xor
xor
pop
lds
out
popa
xor
inc
cmp
push
or
pop
adc
mov
jae
xchg
test
cld
mov
pop
adc
lahf
in
test
dec
negl
mov
lods
fistpll
inc
push
cs
subb
or
sar
mov
pop
repnz
pop
push
xorb
sti
sbb
lea
lcall
jmp
sbb
dec
add
test
push
fstpl
icebp
lcall
orps
shrl
add
inc
je
and
rorl
xchg
sbb
lea
lods
jmp
push
dec
sub
push
mov
or
mov
push
sub
mov
ss
inc
add
inc
mov
call
vunpckhps
notl
sbb
mov
jb
or
sbb
xor
push
aam
inc
adc
jge
mov
xor
jbe
push
push
mov
add
sbb
push
inc
sbb
jp
out
aam
sbb
test
in
mov
adc
std
or
test
mov
lret
andl
sub
push
adc
push
lcall
cmp
dec
aam
mov
add
mov
inc
mov
inc
das
frstor
or
movsb
xor
mov
push
or
mov
adc
add
mov
mov
push
mov
sub
mov
xor
add
inc
stc
out
test
mov
out
push
fiaddl
mov
add
and
addl
adc
outsb
ret
mov
xchg
in
pop
arpl
jmp
cs
pop
sbb
sbb
leave
pop
inc
sbb
loop
push
sahf
outsb
sbb
popa
push
lds
ret
cli
add
pushf
mov
aaa
push
lock
or
or
add
shlb
or
cwtl
or
inc
xchg
lcall
inc
pusha
jp
pushf
mov
push
mov
aas
stos
mov
test
test
into
push
inc
xor
popa
add
movb
push
add
dec
mov
mov
and
outsl
mov
enter
rorb
xor
pushf
fisubl
cli
movsb
mov
mov
mov
push
adc
in
lock
jns
imul
in
ret
dec
or
sub
adc
bound
inc
call
push
sbb
xchg
add
fadds
shr
jae
mov
mov
mov
push
inc
les
mov
add
stos
dec
and
inc
xor
fidivrl
sub
lods
pop
jmp
xor
addl
add
add
pop
mov
sub
mov
adc
ficomps
mov
sbb
and
mov
mulb
movsl
pop
xor
push
cmp
es
push
push
push
sub
out
and
scas
sub
sub
push
jge
cs
sbb
xor
aaa
popf
flds
mov
add
lods
mov
fisubl
mov
mov
nop
dec
cmp
daa
insl
pushf
mov
lahf
dec
rolb
pop
push
mov
int
sbb
mov
add
je
inc
loopne
and
movsl
jp
loope,pn
mov
sbb
ds
xor
push
icebp
push
and
rcrb
mov
and
mov
add
gs
ljmp
lahf
add
push
sbb
jp
ror
cs
shlb
adc
int
adc
mov
jmp
je
xchg
loopne
loopne
add
sbb
mov
mov
jnp
add
scas
xchg
or
mov
scas
dec
push
fidivl
movsl
loop
sarl
sbb
into
xor
and
popa
bound
je
push
inc
pop
mov
sub
jo
shr
cmp
aaa
mov
test
xor
jle
hlt
int3
call
pop
mov
inc
mov
stos
add
stos
push
add
inc
xchg
adc
decb
inc
mov
js
cmp
xchg
push
jp
imul
and
cmp
push
sub
push
repnz
test
jmp
out
jmp
or
or
rcl
loop
shl
mov
pop
aad
cmp
push
or
nop
or
cld
ret
or
cmp
adc
pushf
or
xor
add
push
pop
push
add
leave
adc
adc
cwtl
cmp
and
call
push
xchg
shrb
lcall
inc
inc
and
dec
push
xor
imul
sub
push
lds
cs
jno
xchg
shlb
sbb
femms
lods
push
jmp
xor
jb
lods
fstpl
int3
pop
movsb
lret
mov
subb
adc
nop
jmp
push
lret
inc
test
imul
add
lock
push
std
jecxz
rorb
nop
sar
adc
sbb
addl
out
shl
add
cmp
xchg
mov
lret
pop
mov
mov
mov
inc
ljmp
jb
xchg
mov
inc
imul
xchg
and
enter
or
nop
jnp
call
adc
insb
mov
in
jno
pop
shll
add
stos
std
jge
mov
inc
rclb
push
push
lsl
dec
scas
pop
les
pusha
or
lea
sbb
cmp
add
sub
mov
push
push
cmp
adc
inc
aam
sbb
adc
pop
mov
sbb
les
stos
dec
mov
orl
mov
add
mov
shlb
hlt
and
enter
sbb
adc
loop
add
or
dec
dec
push
ss
or
int3
xor
sub
div
xor
xor
ror
cmc
inc
add
out
add
rolb
insl
mov
mov
xor
testl
shl
shl
aad
sbb
icebp
and
add
icebp
fwait
jb
lret
jge
rcll
xor
jne
mov
pop
push
popa
xchg
lret
into
or
or
inc
sub
mov
out
shrl
mov
mov
ljmp
sbb
mov
inc
mov
xor
sub
dec
and
loopne
jmp
jbe
cmpsl
sbbb
sbb
decb
push
or
mov
pop
cwtl
and
vcvttsd2si
or
sbb
mov
mov
clc
adc
dec
sbb
sbb
out
jo
ja
sbb
adc
sbb
cmc
pushf
and
dec
lret
mov
cmpsl
xchg
rolb
aas
test
push
mov
xchg
call
sub
pop
es
adc
scas
ljmp
cltd
or
inc
adc
cmp
sahf
or
push
xchg
sbb
clc
xor
xchg
scas
sub
shrb
push
sbb
sbb
push
mov
int
stos
sbb
sub
fstl
xchg
fists
or
sub
pop
cmp
stos
adc
add
stos
xchg
pop
popf
lret
adc
mov
int3
mov
sbb
xor
rcll
mov
and
insl
jle
test
inc
inc
jl
sbb
fildl
andl
push
add
xor
call
and
insl
pop
inc
imul
mov
mov
andb
cmp
pushf
push
push
inc
mov
cmp
push
sbb
inc
add
movsl
dec
sbb
inc
addr16
icebp
and
repnz
adc
cltd
shlb
addr16
jo
xor
pop
mov
sbb
add
test
inc
addb
jae
jnp
faddl
inc
or
dec
push
or
leave
fcoms
or
sub
push
push
add
jle
add
loopne
push
cmp
push
push
sub
inc
lods
test
movntps
int
xchg
sub
imull
adc
mov
test
rclb
jecxz
add
inc
addb
and
add
mov
and
mov
push
pop
rcll
push
into
popf
pushf
jo
jo
push
jb
jo
lods
xor
out
and
cwtl
and
add
cmp
pop
inc
push
jecxz
outsb
pusha
inc
mov
cmp
outsl
pop
xchg
adc
push
nopl
out
inc
pop
xchg
push
mov
pop
jb
dec
add
bound
int3
push
mov
push
inc
xor
mov
and
aad
daa
push
inc
pop
push
andl
push
xchg
sub
pop
nop
mov
inc
icebp
test
cmp
inc
jo
xor
or
xor
test
dec
cli
mov
mov
pushf
push
mov
sbb
inc
hlt
mov
stos
sbbl
adc
mov
mov
int
aad
rcrb
in
sar
mov
addb
add
adc
push
rcr
in
sbb
sbb
es
int
mov
loop
push
rcll
mov
stc
push
sti
mov
push
jns
pop
pop
inc
pop
aad
mov
dec
xor
test
push
add
in
push
or
pop
adc
or
cmc
or
jo
in
seto
lret
dec
mov
int3
sbbb
push
call
inc
add
push
in
adc
push
imulb
repnz
xchg
ss
push
je
enter
daa
mov
std
test
call
add
pusha
add
jno
adc
sub
hlt
or
or
adc
add
cmp
or
je
push
fstpl
arpl
adc
add
lret
sub
xor
loopne
jbe
jmp
push
fidivl
push
mov
push
or
adc
push
ds
push
adc
daa
xchg
sar
daa
call
adc
adc
lds
dec
movsl
push
push
cmp
push
mov
push
adc
dec
xor
and
je
adc
mov
das
pushf
mov
or
mov
add
pushf
push
or
xchg
sti
push
ljmp
gs
add
stos
push
pusha
sub
lds
sbb
inc
ficoml
ret
pop
fisubl
pop
addl
sbb
push
inc
mov
fadds
loop
adc
jmp
hlt
sub
mov
inc
push
lods
push
mov
pop
lds
pmulhuw
sbb
cmpsb
inc
lds
xorb
mov
mov
sbb
push
add
ficoml
fistpl
ljmp
mov
rorb
mov
or
jne
loopne
cmp
xchg
and
cmp
mov
mov
or
jge
fwait
lcall
inc
or
pop
jno
xchg
scas
pop
inc
and
out
jns
aam
mov
movsb
push
das
add
sub
or
test
fimuls
push
add
or
icebp
add
add
les
ljmp
rolb
mov
mov
or
out
add
pop
sbb
aam
jae
fimull
push
adc
cmpsb
mov
pop
xor
mov
sbb
hlt
enter
es
out
cmp
and
mov
aaa
push
inc
test
aam
or
les
adc
fcoml
push
fsubl
cmp
jmp
aam
adc
add
xor
push
fistpl
pusha
out
test
push
les
adc
and
push
pop
push
add
xchg
subl
and
lret
inc
rclb
add
or
shll
or
int
xor
leave
mov
inc
add
shll
sub
or
add
and
mov
push
mov
loope
mov
cmovno
in
out
ret
roll
inc
mov
mov
adc
push
xorb
and
inc
gs
add
mov
inc
xor
jo
shlb
add
enter
cs
add
mov
sbb
and
add
sbb
cli
hlt
jne
and
lock
pop
mov
in
xchg
fstl
and
add
jp
sbb
and
jbe
add
sbb
lods
lock
mov
xchg
pusha
xor
mov
lods
loopne
mov
sbb
jl
push
pop
and
ret
mov
jne
adc
es
fcoms
fs
inc
out
push
inc
push
enter
push
stc
jnp
scas
mov
imul
mov
mov
push
popa
pop
pop
pushf
sarb
pop
mov
ds
mov
lea
aas
push
rcrb
sub
sbb
sarb
int3
add
jno
or
lea
leave
shlb
sub
add
je
or
and
lds
jl
mov
dec
mov
add
and
ja
mov
push
stos
push
mov
scas
decl
mov
pop
rorl
lds
jne
sub
mov
push
loopne
push
xchg
into
shlb
xor
add
add
mov
testl
out
xor
jecxz
gs
cmp
and
lret
xor
adc
rcrl
sbb
sub
aam
icebp
into
pop
push
jae
adc
mov
mov
mov
shlb
add
mov
clc
shlb
stc
jnp
cmp
rcrb
icebp
sub
pop
cmp
jbe
and
pop
push
push
sub
pusha
sti
je
inc
jne
or
xchg
shrb
cmp
loopne
in
sbb
xchg
mov
mov
shlb
pop
mov
movsb
jmp
push
sbb
out
int3
ljmp
jge
jo
mov
setnp
popa
mov
sti
rcrl
lds
scas
push
sbb
lds
jno
test
or
mov
push
inc
push
adc
sbbb
inc
dec
subb
loopne
xor
dec
or
pushf
mov
or
lcall
dec
adc
or
lret
popa
add
lret
dec
dec
add
mov
push
pop
xor
cmpsb
shlb
pusha
icebp
push
cmp
add
push
inc
and
push
shr
or
ljmp
push
inc
call
mov
hlt
pop
fsub
add
orl
sbb
ret
stc
jge
add
cmp
add
and
push
shlb
rorl
adcb
push
sti
mov
lea
mov
mov
push
and
test
adc
test
pop
cmp
jo
push
das
ret
cmpsl
stos
inc
xor
jp
les
dec
aas
dec
adc
inc
inc
mov
adc
xchg
sbb
pop
sbb
mov
rcll
ja
adc
or
add
out
loopne
je
adc
repnz
mov
adc
sbb
and
xchg
push
subl
mov
test
xor
jo
test
inc
loopne
xchg
pusha
pusha
pop
xchg
lock
lock
mov
clc
and
mov
sbb
sbb
icebp
mov
gs
jge
or
dec
clc
sbb
js
push
gs
fwait
sbb
and
rolb
mov
add
fwait
add
lret
xor
mov
push
mov
push
icebp
les
or
xlat
add
dec
jl
add
hlt
mov
loopne
xchg
mov
xchg
jl
xlat
or
add
or
lcall
or
adc
add
sbb
test
and
testl
dec
outsl
dec
outsb
mov
inc
push
shrl
sub
or
mov
je
xchg
mov
rcrl
stc
add
and
adc
icebp
and
mov
rorl
xchg
mov
and
add
xchg
faddl
dec
push
cwtl
push
add
movsl
jb
jp
into
stc
dec
push
xchg
xor
loop
and
jmp
popa
popf
sub
aad
xchg
loop
jecxz
mov
rolb
add
xchg
les
daa
push
xor
sbb
add
pop
and
dec
push
cwtl
mov
jp
jae
adc
inc
xchg
sub
lds
and
out
dec
adc
xorl
sbb
in
subb
shr
adc
push
and
fisubrl
ret
clc
adcb
rcl
jl
stos
cmpsb
pop
add
push
mov
or
lds
inc
pop
push
mov
inc
mov
in
pop
aad
adcl
xor
mov
leave
push
xlat
pop
mov
and
or
xor
mov
inc
rcl
movsl
sbb
pop
cmp
shrb
lock
cmp
adc
es
out
add
jp
test
mov
leave
adc
fnstcw
sbb
sbbl
sbb
pop
lret
leave
xchg
mov
xor
testb
test
in
cwtl
xchg
mov
subl
mov
add
push
jae
sbb
dec
adcl
pop
lods
lret
adc
roll
sbb
arpl
jo
cli
or
sub
sbb
adc
sbb
pop
mov
sbb
inc
pop
mov
repnz
rolb
or
dec
clc
adc
add
addb
mov
outsb
pop
mov
mov
adc
xchg
adc
pop
lock
roll
scas
inc
cld
and
sub
inc
fwait
insb
sbb
mov
mull
fidivrs
mov
jecxz
mov
add
daa
addb
cmp
dec
xorb
push
clc
mov
cmp
mov
add
lock
paddsw
cs
mov
pop
adc
adc
mov
shrb
sbb
mov
and
xor
test
or
daa
mov
add
sbb
adc
sub
inc
cmovge
mov
mov
and
les
mov
andl
data16
push
xchg
add
xchg
pop
mov
mov
and
adc
mov
add
add
mov
adcb
dec
push
rorl
loope
adc
pop
rorl
mov
mov
add
push
add
sbb
push
sbbl
sbb
pop
mov
addb
xchg
jecxz
pop
xchg
sbb
xchg
sub
and
int3
stos
fnstcw
test
xlat
ret
mov
and
mov
test
sub
cmp
add
inc
orb
dec
add
push
orl
add
push
push
ret
or
stc
push
loop
sbbb
push
outsl
inc
mov
shrb
shll
call
jge
clc
sbb
test
and
cmp
sbbb
inc
std
mov
bound
loopne
test
iret
dec
xor
adcb
jp
test
pop
jmp
mov
fldcw
and
mov
adc
popf
fstpl
stos
push
pop
lds
std
testb
or
mov
add
orb
jb
test
push
mov
adc
push
lahf
dec
scas
ret
xorl
subb
dec
push
xor
sub
lcall
add
mov
xchg
psrlq
mov
call
shrb
sub
mov
mov
add
orb
or
or
test
add
push
mov
add
nop
jo
cmp
push
int3
fwait
mov
mov
cld
inc
mov
fcompl
scas
sbb
sbb
dec
add
push
inc
mov
js
pop
adc
sub
mov
out
movsb
dec
jb
mov
push
dec
mov
ret
in
popf
inc
out
xor
jns
add
xor
std
add
rclb
out
lds
adc
js
into
sub
sbb
push
add
call
outsl
pushf
or
ret
mov
ljmp
jno
push
sub
call
sbb
pop
push
inc
cmpsl
rolb
mov
leave
mov
add
lds
push
mov
sub
shll
sbb
adc
arpl
adc
xor
cwtl
aam
pop
insl
sbb
mov
jb
push
nop
sbb
add
mov
push
fbstp
mov
inc
pop
mov
or
mov
cmp
enter
mov
dec
xor
add
punpcklbw
inc
or
andb
aaa
jle
loop
shl
cmp
lret
xchg
or
in
rclb
rorl
push
cmp
xlat
rolb
adc
adc
xor
fwait
andb
sub
add
pop
or
in
and
mov
jae
jmp
dec
loope
in
sbb
das
and
sub
test
rclb
mov
std
jno
and
stos
cmp
pop
or
sub
into
shrb
sub
imul
js
stos
push
inc
sbb
shrb
mov
mov
xchg
and
push
lock
out
les
pop
test
inc
sub
mov
cmc
xchg
sbbb
imul
or
push
scas
cltd
or
add
push
loopne
stos
out
and
xor
sbb
test
inc
repz
jne
stos
jo
das
in
push
inc
test
shll
and
xchg
stos
add
xorb
nop
shrl
lret
xor
cmp
lock
test
lcall
add
std
pop
test
sarl
inc
cs
inc
ljmp
lds
aam
mov
in
ret
push
mov
mov
xchg
std
pop
ret
stos
push
push
aas
dec
add
mov
adc
push
fucomip
mov
int
mov
addl
dec
pop
cli
sub
enter
dec
cld
rclb
call
fucom
adc
enter
jno
lds
mov
add
cld
sbb
mov
xchg
addb
xchg
nop
daa
sahf
pop
cmp
stos
frstor
xlat
scas
jecxz
and
movsb
shlb
push
lods
out
sub
or
push
xchg
rclb
jo
push
mov
les
jb
mov
lods
or
in
mov
rolb
negl
adc
inc
mov
dec
stos
push
push
inc
sbb
sub
or
les
cmp
aas
pop
dec
pop
and
xor
icebp
sub
xlat
xchg
adc
rclb
ja
add
inc
dec
lret
and
push
lcall
mov
cmp
scas
or
icebp
out
cmp
fs
sub
and
or
inc
pop
sub
add
sub
push
adc
pusha
push
insl
inc
jne
enter
push
push
push
or
inc
daa
loop
pop
or
jo
test
mov
sub
cs
jp
sbb
test
lret
cmp
test
les
mov
add
je
sbb
push
pop
xchg
adc
pop
aam
popa
and
cmp
jne
or
inc
inc
push
and
notb
pop
fsts
adc
add
mov
jmp
js
add
mov
test
mov
pop
ret
dec
adc
cmpsb
cmp
push
icebp
fstpl
pop
dec
sbb
jbe
cli
push
inc
cs
int3
sub
lods
aaa
sbb
rclb
ja
mov
lahf
adc
push
xchg
mov
addb
adc
adc
jl
or
pushf
dec
push
rcl
lret
xchg
js
xchg
sub
dec
test
leave
push
scas
loop
leave
push
push
adcb
pusha
test
jp
js
xor
push
or
cmp
inc
add
jo
mov
movsl
push
jp
dec
cwtl
icebp
mov
fsubs
int3
push
mov
cmp
pop
add
lret
jo
testb
orb
mov
test
lret
stos
xchg
mov
inc
lods
xchg
and
xchg
and
lea
push
movsl
jo
pop
call
and
push
push
pop
loopne
xchg
add
lret
sarb
test
add
jo
and
pop
adc
sbb
roll
imul
pop
das
jbe
xor
js
dec
test
call
in
and
and
add
loopne
xor
out
jae
pushf
imul
inc
lds
mov
jecxz
loopne
aad
xchg
in
test
subb
and
les
mov
fiaddl
cmp
scas
shll
test
pusha
or
xorb
adc
dec
push
mov
mov
pop
add
dec
push
fst
mov
push
dec
push
roll
sub
adc
add
pop
inc
inc
sbb
mov
lock
sbb
stc
sbb
lds
lcall
stos
pop
nop
rorl
xor
xchg
and
call
xor
mov
pop
push
sub
insl
repz
addl
clc
xchg
push
mov
add
add
push
pop
adc
or
push
cli
icebp
mov
roll
xchg
fists
xchg
push
stos
cli
movsb
push
add
or
subb
xchg
dec
mov
in
and
lods
add
rorb
mov
stc
cmp
cld
mov
push
gs
cltd
pop
mov
jle
mov
vcvtsd2ss
and
cmp
xor
fdivs
jle
int
movsb
or
dec
mov
mov
jns
xchg
and
push
fisttpll
sbb
loopne
loop
push
popa
mov
push
cs
push
xor
add
call
mov
jo
and
es
scas
push
hlt
mov
fadds
faddl
fildl
add
mov
sbb
or
or
pop
cmp
inc
inc
rcrb
add
pop
mov
or
orl
xchg
sub
bound
lcall
xor
push
or
push
cmp
or
andb
sub
imul
shll
inc
push
sarl
adc
adc
push
push
test
mov
aam
pandn
ret
inc
inc
mov
and
mov
jno
mov
mov
addl
roll
jmp
cmp
sbb
popa
ud1
mov
cmp
cmpl
addb
mov
or
outsl
rolb
stc
stos
cwtl
and
push
fs
mov
mov
xor
push
push
sbb
loop
movsl
adcb
pop
inc
out
ret
notl
add
adc
imul
lea
scas
jp
sarl
pop
pop
arpl
pop
adc
mov
sbb
adc
pop
aam
pop
jmp
or
or
mov
pushf
sbb
mov
inc
adc
push
scas
data16
jge
cmp
sub
mov
add
test
add
or
mov
add
or
push
out
fmull
iret
hlt
dec
dec
outsb
add
dec
push
pushl
or
stos
es
adc
into
stos
mov
or
inc
cmc
in
or
mov
movsl
rorl
test
out
shll
pop
jno
push
jp
aas
fistl
sbb
roll
cmp
sbbl
cmp
scas
dec
call
adc
or
or
dec
js
das
dec
mov
cmpsl
mov
pushf
mov
cmp
inc
movsl
cmpl
xlat
imul
cmp
rol
std
out
fdivrs
out
or
les
ret
or
xor
sub
dec
loope
xor
jae
xchg
push
xor
addl
push
push
sbb
lcall
punpcklwd
adc
rorb
pop
xorb
std
xchg
rcl
sbb
inc
stos
dec
inc
push
stos
mov
jp
or
loop
cmp
lea
xchg
es
inc
jne
adc
cmp
or
adc
dec
jp
inc
ret
inc
cltd
movsb
sbb
mov
push
mov
and
and
and
jmp
out
sbb
fisubrl
repz
sbb
adc
adcb
sub
xorb
xchg
fnstcw
testb
mov
lods
cmp
xchg
rcll
inc
xlat
lahf
stos
mov
jne
leave
mov
pop
adc
loopne
ja
push
test
cltd
out
and
xor
inc
test
add
sti
push
push
mov
hlt
out
popa
jnp
popa
sbb
ja
inc
push
push
pop
into
sbbl
insl
imul
adc
adc
mov
mov
mov
push
and
cmp
and
mov
mov
adc
pushf
sub
lds
dec
push
xorl
add
fmuls
adc
push
scas
push
inc
arpl
or
fimull
lods
adc
aad
add
xorb
js
in
cld
sbb
mov
notb
add
mov
xchg
orb
adcl
sbb
cld
leave
inc
or
push
adc
movups
enter
mov
mov
add
cmpsl
or
xor
dec
sahf
popa
jle
cmp
add
std
stos
jo
xchg
outsb
sub
mov
aad
call
xchg
iret
stos
aad
mov
pop
pusha
loopne
and
aaa
ss
or
iret
in
ret
pop
cmp
daa
stos
inc
adc
xchg
cmp
cmp
mov
push
or
stos
inc
adc
add
sbb
loope
shrb
adc
test
in
push
pop
push
mov
sbb
or
push
adc
dec
loope
mov
js
push
xchg
adc
dec
cmpsb
pop
and
repz
and
pop
orb
adc
shrl
jb
adc
pop
jo
imul
mov
sbb
fstl
test
jg
or
mov
shrb
and
sahf
add
pushf
inc
jg
imulb
push
mov
fsubl
ret
mov
aad
int
mov
xchg
or
pop
xchg
mov
stos
shlb
inc
mov
in
pop
test
sbb
ret
cltd
sahf
out
popa
xchg
cmp
incb
lds
or
fs
rcll
loopne
xchg
lock
sbb
cli
sbb
add
sbb
mov
pop
imulb
push
mov
cmp
aad
dec
push
lret
hlt
ljmp
add
subb
icebp
xchg
jae
es
xchg
push
xor
add
xchg
push
ljmp
call
mov
test
push
mov
add
mov
xor
push
mov
mov
push
cmpsb
and
or
add
or
jg
mov
adc
jo
imul
lahf
dec
call
add
push
add
sbb
shlb
mov
jecxz
mov
or
add
sub
scas
add
es
push
and
pop
loopne
popa
out
jo
lods
mov
xor
je
push
test
rcrb
push
mov
pushf
jo
fstpl
push
test
cs
cmpl
imul
push
sbb
rorl
or
dec
push
sahf
nop
mov
cltd
mov
sbb
adc
in
adc
xchg
sbb
lcall
fldpi
sub
out
pop
xchg
or
adc
cmc
xorb
pushf
inc
adc
sbb
fisubl
pop
mov
push
or
xor
push
add
inc
mov
dec
mov
push
sub
sbb
jbe
mov
add
lock
ldmxcsr
push
ror
stos
bound
aad
in
scas
jl
xor
adc
add
idivl
mov
add
inc
shll
call
or
inc
dec
mov
add
jl
push
xchg
or
cmp
mov
sbb
sbb
lret
push
pop
xchg
push
cmp
in
jns
adc
rcrl
stos
loopne
pop
push
push
sbb
add
sub
cmc
je
test
into
cmp
dec
add
or
scas
pusha
add
lock
cltd
cmp
repnz
in
mull
inc
mov
push
push
sbb
fprem1
xchg
add
jb
cs
inc
test
loop
pop
pop
rolb
lea
sbb
sub
add
pop
dec
mov
inc
push
test
repnz
jge
cli
inc
inc
or
push
adc
push
shll
adc
orl
dec
andl
push
jo
push
lcall
mov
or
adc
movsb
rolb
sub
test
sarb
pop
and
stos
rcrl
fwait
les
lods
add
sahf
mov
xchg
enter
ret
inc
je
in
repnz
mov
adc
pop
xchg
pop
or
inc
mov
lret
and
push
je
push
shl
mov
push
adc
jb
add
sbb
movb
push
sub
xchg
mov
adc
adc
invd
insl
mov
sbb
shl
out
adc
mov
adc
add
sub
jl
cmp
adc
aad
sbb
push
jns
xchg
adc
dec
or
out
inc
popa
or
jo
pop
les
push
nop
sub
inc
daa
mov
fidivl
push
xchg
sbbb
pop
adc
cs
sub
jne
aad
cwtl
jnp
out
sub
or
add
js
adc
and
adc
push
xor
mov
jnp
add
inc
push
adc
sub
ss
rcll
or
call
push
sub
xchg
insl
xchg
fwait
popl
cmp
test
pop
lret
leave
push
stos
sbb
jno
loopne
out
adc
inc
hlt
pop
or
pushl
mov
push
xor
push
shlb
dec
in
mov
loopne
int3
sbb
popf
aam
shrb
mov
inc
xor
adc
jb
mov
add
scas
or
push
cmp
mov
mov
rorb
orl
addb
pop
pop
les
xor
inc
adc
push
xor
mov
mov
and
mov
sbb
add
shll
mov
mov
push
or
inc
outsl
pop
cmovne
sbb
xor
stc
fwait
rcrl
inc
out
rolb
enter
out
addb
push
adc
push
cmp
mov
stos
or
jl
dec
cmp
add
rolb
xor
sbb
mov
adc
and
mov
push
xchg
and
xchg
cmp
sbb
imul
jbe
aam
push
cmp
mov
xlat
sub
mov
add
sub
mov
push
aad
je
sub
mov
mov
mov
or
roll
push
lods
xor
mov
lret
hlt
out
or
lock
sub
mov
and
cs
jbe
xchg
push
cmp
cli
and
jb
adc
sbb
cmp
sbb
je
ret
je
les
stos
and
adc
push
es
mov
pop
add
popf
call
sahf
sahf
xorb
pop
sbb
mov
clc
sbbl
adcb
lcall
into
ss
mov
cmp
mov
inc
out
lcall
test
mov
andb
add
popf
orb
xchg
orl
movsl
mov
aam
js
xor
pop
cld
fists
sub
movl
sti
out
lahf
outsl
pop
add
adc
add
push
cld
stc
repz
test
pop
lods
dec
clc
iret
lahf
aas
jg
ss
pop
inc
sbb
and
dec
xor
stc
repz
lahf
xchg
xchg
sahf
sbb
imul
lahf
aas
jg
or
inc
jl
mov
lock
stc
repz
pop
filds
arpl
xchg
daa
sahf
pop
adc
cld
xchg
push
sbb
push
dec
dec
movsl
stc
push
lahf
xor
movsl
sbb
test
arpl
xlat
cmc
lret
or
pushf
stc
lahf
adc
iret
lahf
jg
pop
xchg
add
int
inc
outsl
mov
or
inc
jp
lahf
cwtl
in
adc
imul
mov
cmpsb
stos
dec
inc
inc
or
cld
ret
flds
or
imul
jns
mov
fadds
xor
arpl
ficomps
and
sbb
ja
jge
js
loope
and
or
lret
mov
and
jo
sahf
mov
cmp
cld
lahf
jns
adc
pop
mov
sbb
out
lahf
out
pusha
fadds
pop
xor
fs
cld
stc
push
ret
in
sbb
add
jno
aam
push
shl
iret
lahf
aas
rclb
add
loopne
cld
stc
repz
aaa
loopne
dec
clc
std
stos
push
jne
aaa
jp
cs
or
aam
test
testl
arpl
cld
stc
repz
pop
aaa
aaa
es
fcompl
push
mov
iret
lahf
aas
jg
push
add
xchg
xchg
jno
stc
repz
fnstenv
push
lods
dec
adc
sbb
jecxz
movsb
dec
mov
out
cmpsl
gs
or
cld
cld
stc
rep
sub
cmc
dec
or
test
fistps
pop
movsl
jae
inc
js
xchg
inc
cld
stc
rep
cmp
pop
mov
ljmp
in
push
lret
je
and
stc
repz
lds
pusha
in
sub
pop
pop
dec
dec
inc
call
mov
mov
inc
sub
push
or
test
out
lahf
jmp
adcl
jle
cld
cld
stc
popf
incb
or
ljmp
lahf
jg
sahf
fiaddl
inc
cmp
iret
sbb
adcb
mov
aas
jg
cld
cmovns
nop
and
outsb
mov
lahf
in
scas
mov
or
add
and
sti
fstps
stc
repz
xor
cmp
aas
jg
cld
push
jecxz
push
sub
ficoml
ja
pop
pop
or
repz
lahf
sbb
cmpsb
shl
sti
inc
inc
iret
out
mov
cld
stc
mov
subl
shlb
out
lahf
aas
jge
add
movsb
add
imul
insb
or
jns
pop
xchg
into
ret
cwtl
lahf
aas
jg
dec
sbb
sub
data16
stc
repz
popa
in
dec
xchg
loopne
xchg
and
aas
jg
cld
mov
mov
out
or
repz
lahf
out
or
sub
dec
mov
out
lahf
jg
cld
stc
inc
jno
pusha
repnz
push
pusha
lcall
out
lahf
aas
stos
pop
ret
orl
push
pop
aaa
xchg
ja
cld
stc
repz
push
out
out
mov
lock
fisubl
jle
iret
lahf
aas
jg
repnz
dec
idivb
iret
int3
xor
repz
lret
add
clc
sub
pop
roll
int3
push
lahf
aas
jg
dec
iret
in
js
mov
push
movsb
sbb
stc
repz
adc
xchg
xor
add
dec
movsl
pop
enter
jg
cld
mov
popa
andb
or
out
xchg
inc
lock
dec
jns
iret
lahf
or
push
dec
push
sarl
cld
mov
pop
inc
cmp
mov
iret
lahf
push
stos
shlb
and
cmp
aas
jg
stc
hlt
movl
sbb
iret
lahf
sub
cmp
insl
fst
mov
jg
cld
stc
sub
es
sbb
xchg
negb
jp
xor
iret
lahf
aas
outsb
xor
mov
inc
and
mov
or
fsubl
mov
bnd
movsb
sub
out
scas
test
jecxz
mov
je
cld
stc
repz
addb
mov
mov
mov
repnz
lahf
inc
jbe
or
push
ret
push
push
cld
stc
repz
cltd
xor
lcall
cmp
mov
pop
cmp
sti
leave
out
jns
inc
popf
push
test
add
stos
movq
mov
dec
and
jae
aad
out
lahf
aas
cmpsl
lods
mov
sub
daa
cld
stc
repz
lahf
xor
arpl
xchg
lret
lret
popf
adc
lahf
aas
jg
lahf
inc
je
mov
fwait
xchg
mov
repz
mov
stc
sbb
jg
jp
mov
ficompl
stc
repz
or
mov
das
outsl
jg
cld
jmp
xchg
outsb
fdivp
fdivrs
pop
and
sbb
inc
repz
lahf
push
mov
movsl
mov
xchg
push
jp
jg
cld
stc
xor
cmpsl
cmpsb
cmp
or
xchg
jmp
out
lahf
aas
adc
xchg
jmp
les
invd
mov
out
lds
inc
iret
lahf
aas
jg
jae
leave
pop
adcl
leave
aad
stc
repz
push
loop
lea
in
insb
add
lahf
aas
jg
mov
jmp
dec
jo
cmpsb
push
imull
stc
repz
pop
sbb
dec
jmp
orl
cld
sub
push
push
pop
repz
dec
mov
jo
out
lahf
fbstp
orl
jnp
mov
stc
lods
fildll
mov
fcoms
scas
js
iret
lahf
aas
xchg
adc
fldenv
repz
cltd
pop
adc
test
stos
fisttpll
xchg
aas
jg
xchg
test
jne
ljmp
xor
lahf
mov
pop
lods
cs
cltd
js
insl
clc
cld
stc
repz
imul
xor
xor
arpl
jecxz
imul
adc
or
out
ret
iret
fwait
je
adc
push
aas
jg
cld
or
ss
mov
rclb
repz
lahf
add
cltd
xor
in
ss
pop
cmpsb
pushf
loop
jg
cld
stc
insl
fwait
aas
inc
xlat
dec
or
hlt
add
loope
stos
mov
aas
pop
sahf
xchg
int
fiadds
or
repz
or
fwait
or
add
iret
lahf
aas
jg
mov
arpl
ret
push
mov
pop
test
xor
subb
sbb
and
jg
iret
out
mov
lods
push
push
xor
stc
repz
sub
sub
shrl
lods
lahf
aas
jg
cli
dec
insb
adc
cli
mov
out
test
inc
orb
pop
pop
mov
add
sub
repz
mov
daa
inc
sbb
addr16
jg
cld
stc
sub
jae
add
push
out
mov
inc
dec
out
lahf
aas
fwait
push
les
andl
lock
push
filds
sbb
jg
add
iret
lahf
aas
jg
rclb
out
fsts
lods
cld
stc
repz
repz
lahf
jge
cltd
cltd
xchg
mov
pop
push
lock
xor
xor
mov
mov
out
ds
mov
adc
inc
mov
mov
cwtl
ret
push
inc
lock
out
adc
jne
fs
or
sub
jg
cld
add
jg
cmp
lods
leave
aas
dec
dec
lods
daa
add
out
lahf
jmp
test
lret
or
cmp
cld
stc
cmp
popa
nop
aaa
lret
pop
push
scas
push
pop
inc
adc
and
lahf
aas
push
sbbl
mov
repz
mov
arpl
lahf
aas
jg
push
repz
insb
iret
xchg
call
data16
stc
repz
inc
fisubs
hlt
cli
jl
enter
aas
jg
or
xchg
mull
aam
cmp
pop
test
fs
repz
cmpsl
xchg
mov
divb
pop
sbb
jg
cld
lret
mov
cmc
push
shlb
scas
mov
lahf
movsb
scas
add
fidivrs
out
jns
cld
stc
sub
cmp
aad
pusha
scas
mov
iret
lahf
aas
stc
mov
out
jae
test
cld
stc
rep
or
subl
xor
pop
iret
lahf
aas
jg
dec
cmp
outsb
sbb
fs
adc
stc
repz
cs
popf
bound
adc
test
and
inc
push
stos
std
mov
stc
repz
dec
call
pusha
mov
mov
shrb
jg
cld
arpl
cmp
mov
aaa
xor
mov
repz
lahf
outsb
gs
inc
jne
filds
jg
cld
stc
mov
out
jmp
into
xlat
mov
xchg
jnp
call
or
jnp
les
xchg
jno
lahf
aas
call
lahf
das
insb
xchg
cwtl
scas
int3
mov
pop
scas
stc
stc
repz
imul
adc
outsl
iret
lahf
aas
pop
jp
mov
adc
xchg
fwait
cld
stc
repz
std
xchg
lds
in
lods
inc
out
repnz
lahf
aas
jg
cmp
xchg
les
fwait
scas
mov
repz
repnz
or
fisttps
imul
repz
flds
push
xchg
fistpll
jg
cld
fadds
data16
mov
in
add
test
lahf
dec
mov
sub
popf
dec
outsb
pop
jg
cld
stc
add
cmpsb
mov
add
sbb
mov
aas
or
dec
out
rorl
cld
stc
repz
jg
shrb
ret
cmpsb
daa
out
jle
inc
cmp
cmp
stos
pop
cmc
jle
testl
sahf
mov
addr16
adcl
iret
mov
pop
fadd
push
pop
cld
stc
repz
jmp
or
aad
sbb
ljmp
ret
mov
orl
stc
repz
arpl
into
ficoml
stos
dec
sbb
and
mov
sbb
cld
loope
lahf
loop
adc
and
xlat
pop
sub
mov
aas
jg
fdivs
enter
out
test
repz
mov
daa
repz
dec
data16
aas
jg
movsl
stos
shrl
bound
push
lret
jae
repz
cmp
cmp
shll
aas
jg
cld
or
test
mov
testl
lahf
testb
pushf
hlt
mov
pop
adc
lahf
test
cld
stc
sub
sbbl
cmc
sbb
iret
inc
stos
add
pop
fsubl
aas
enter
test
inc
outsl
fidivrs
cmp
iret
mov
xor
outsb
out
fwait
aaa
and
xchg
dec
inc
dec
jecxz
out
jp
aas
pushl
pop
xchg
jbe
mov
xchg
fdivr
pop
out
sub
dec
int
aaa
outsl
xor
and
adc
int3
pop
outsb
dec
jge
mov
rorl
shl
lahf
xor
xchg
xor
xchg
push
cltd
neg
mov
push
sbb
out
nop
std
push
inc
xchg
cwtl
jmp
fnstcw
lahf
mov
js
addr16
inc
xlat
cli
jbe
repz
inc
call
jnp
xor
or
pusha
aas
jg
cld
movsl
add
pop
adc
iret
addr16
lock
xor
lahf
inc
fidivs
out
cld
fistl
mov
dec
dec
stos
outsl
mov
iret
lahf
aas
sub
mov
jmp
push
in
shlb
pop
dec
jl
iret
lahf
aas
sbb
xor
or
and
jl
cld
stc
xrelease
or
pop
fcmovb
pop
pop
push
sarl
aas
jg
and
les
repz
lahf
sarl
sub
mov
jg
cld
stc
xchg
nop
or
cmpsl
push
sbb
mov
mov
aas
je
aad
rcrb
mov
cld
stc
repz
push
mulb
mov
inc
push
je
iret
lahf
aas
jg
ret
jo
daa
cmpl
aas
icebp
xchg
jnp
scas
in
lods
out
mull
push
cmp
stc
repz
fsubl
iret
xor
stos
out
aas
jg
cld
push
push
or
div
rcr
sbb
in
xor
iret
lahf
ret
mov
mov
jo
out
xchg
cld
jg
cld
stc
jle
fisubs
shlb
adc
push
pop
xor
in
test
iret
lahf
aas
subb
inc
dec
adc
xchg
iret
mov
cmp
enter
repz
es
jg
iretw
push
push
add
aas
jg
xchg
aam
jp
fwait
notb
or
stc
repz
enter
jle
xor
ljmp
cld
fwait
popf
imull
outsb
xchg
leave
repnz
repz
lahf
out
jns
or
push
cmp
popa
jg
cld
stc
push
pop
pop
pop
bound
or
das
xor
aas
sbb
imul
mov
iret
lahf
aas
in
ss
push
ss
popf
mov
repnz
add
repz
out
test
adc
ljmp
mov
dec
adc
mov
into
cmp
inc
push
enter
sub
div
call
add
sub
nop
push
imul
or
xor
pop
push
out
lahf
aas
pop
cmpsb
dec
xchg
cld
sti
int
stos
add
outsl
insb
and
repz
xor
roll
das
iret
inc
jle
jl
jg
je
and
push
cmpsb
std
mov
or
xchg
aas
or
jle
ds
mov
pop
cmpsl
mov
pushf
mov
dec
out
fwait
lahf
shr
filds
repz
inc
rcr
sub
adc
and
divl
outsl
fidivrs
movsl
stos
pop
mov
xor
ds
repz
fwait
lods
repz
lds
cmp
jmp
outsl
fidivrs
add
cmc
mov
pop
test
out
fwait
aaa
inc
inc
inc
sub
adc
mov
mov
enter
push
ds
sbb
fidivrs
fdivr
add
inc
mov
inc
inc
sub
les
aam
xchg
or
jp
repz
sub
es
aas
out
lahf
aas
outsl
xor
push
xor
mov
cld
stc
repz
or
sub
jae
mov
bound
stc
cmpsl
push
pop
inc
cltd
insb
popa
or
aas
pusha
cld
stc
repz
xor
xchg
loope
loope
mov
lahf
aas
jg
jl
or
rol
push
sbb
mov
out
xchg
adc
pop
dec
or
cld
push
lods
xor
sub
rcr
rol
int
arpl
aam
loope
mov
mov
cld
stc
rcll
lock
mov
sub
dec
dec
jle
lea
movsl
in
mov
out
mov
cmpsb
mov
sub
cld
stc
daa
mov
dec
mov
popf
push
out
lahf
aas
jl
jnp
aas
jg
mov
out
adc
cld
stc
repz
jns
daa
jl
insb
jp
inc
loop
out
lea
stos
mov
mov
stc
repz
mov
jae
call
iret
lahf
aas
jg
mov
aaa
insb
pop
popa
lret
cld
stc
repz
movsl
js
push
add
aam
jb
daa
dec
adc
aas
jg
mov
ja
fwait
mov
hlt
stc
repz
pop
dec
jne
divb
into
mov
adc
fidivrl
dec
mov
repz
jb
cmp
mov
dec
mov
jg
cld
or
dec
loope
mov
and
repz
lahf
mov
xlat
xchg
inc
xchg
push
or
imul
cld
stc
imul
xor
out
adc
xchg
out
lahf
aas
push
ret
scas
cmc
pop
test
push
xlat
mov
cld
stc
repz
movsb
xchg
rclb
test
cs
iret
lahf
aas
jg
push
lods
push
push
sbb
inc
inc
mov
jne
pop
or
loope
xchg
mov
or
aam
mov
ds
pusha
int
aaa
outsl
or
cmc
stos
imul
lahf
aas
icebp
xchg
ret
cmp
xor
push
sbb
stc
repz
shl
lea
lea
test
aas
jg
cld
ret
xor
pop
pop
add
sti
xchg
push
ds
pop
enter
pop
aaa
xor
dec
in
mov
and
rorl
rol
fnstcw
inc
in
cmp
adc
push
or
mov
stc
inc
pop
mov
jo
aas
aaa
outsl
out
mov
fwait
outsb
enter
jns
out
pop
xchg
mov
enter
fidivrs
pop
add
or
jmp
out
fwait
mov
cmp
lret
jne
repz
jb
aaa
testl
stos
int
test
push
sub
jecxz,pt
adc
out
mov
daa
rcr
shlb
mov
addr16
aaa
outsl
fisubrs
adc
mov
loop
cmp
in
push
data16
cmpsl
je
jns
out
push
push
int3
cli
fsub
jcxz
add
aas
sub
movsb
push
pop
push
cld
cmp
outsl
mov
repz
repnz
adc
rcl
in
mov
dec
jle
cld
repnz
push
or
lods
stos
jbe
cld
xorl
aam
or
lahf
aas
push
stc
add
jg
sahf
add
imul
cld
stc
repz
push
adc
stos
pop
pop
xor
mov
inc
out
jmp
lods
scas
test
push
cld
stc
repz
enter
pop
jnp
lea
lahf
aas
jg
loop
aam
out
mov
loopne
and
daa
cli
repnz
add
test
ljmp
out
jno
aaa
les
sti
or
repz
imul
sbb
xor
movsl
cmc
cmc
pop
aaa
outsl
fidivrs
and
mov
insb
mov
repz
fwait
sbbb
popa
mov
lods
jo
outsl
fidivrs
adc
add
pop
cmp
push
out
fwait
aaa
mov
icebp
imulb
cld
jnp
push
push
movsb
lret
outsl
and
icebp
call
aas
jg
andb
cli
lahf
shrb
ja
aas
cmp
imul
mov
sbb
fst
es
jbe
jmp
lds
mov
pop
stc
das
aas
jg
cld
push
cpuid
cmp
out
dec
dec
mov
add
out
lahf
gs
ss
rcl
popa
add
cltd
repz
sbb
stc
push
xchg
lcall
fwait
aaa
outsl
add
mov
and
enter
jne,pn
adc
mov
jg
jno
pop
sbb
inc
arpl
out
cs
lahf
aas
outsb
cwtl
xchg
aas
pop
xor
pop
cld
stc
repz
das
inc
pop
xlat
mov
adc
dec
in
iret
lahf
aas
jg
and
aam
out
and
cltd
aam
enter
rcr
and
ss
cld
stc
jbe
push
sarb
lds
rol
std
out
lahf
aas
push
or
jnp
jnp
jmp
cld
cld
stc
repz
sbb
mov
mov
pop
sbb
outsb
jns,pn
xor
mov
xchg
and
mov
inc
sbb
aaa
out
mov
and
sub
jns
out
iret
xchg
test
add
xor
cmpsb
int3
push
outsl
fidivrs
push
pop
xor
cltd
pop
pop
clc
mov
fwait
cvtps2pi
fcmovne
dec
adc
dec
outsb
fidivrs
cli
stos
jge
fisttpll
sbb
push
jo
dec
xlat
dec
mov
sub
lock
add
fwait
aaa
outsl
fisubrs
stc
add
or
sbb
jns
out
sbb
arpl
push
push
bound
jnp
aad
outsl
fidivrs
xlat
dec
sbb
pop
cmp
shlb
fsubl
and
rcll
out
dec
in
in
and
xchg
mov
das
test
sbb
test
outsl
iret
lahf
jg
sbb
jmp
jmp
das
mov
sub
jns
cmpsl
insb
fidivrs
and
dec
mov
pop
add
aaa
outsl
stos
or
push
pop
in
mov
aam
jl
xchg
or
xor
aas
mov
mov
test
movsl
mov
xchg
ds
and
out
lret
aaa
outsl
fsubp
lock
push
or
lds
jle
cld
jmp
mov
or
cld
and
fstl
ss
push
xor
jmp
pop
mov
mov
aas
jg
xchg
leave
mov
nop
popf
cmp
repz
or
add
jo
dec
in
xchg
aas
jg
cld
push
dec
and
sbb
fnsave
subb
jne
jb
out
lahf
fnstenv
dec
add
dec
dec
mov
jg
cld
stc
adc
clc
sti
movsb
shrl
rcl
ja
sbb
lahf
aas
adc
mov
sarl
cld
stc
repz
leave
cmp
call
push
inc
cmpl
out
sub
or
cld
stc
repz
hlt
lock
scas
scas
cmc
nop
mov
negl
rcrl
lahf
aas
jg
cmp
sub
in
xchg
repz
stc
mov
cmp
lods
pop
push
adc
iret
lahf
jg
mov
jb
call
pop
popf
gs
sbb
repz
add
sbbb
cmpsl
in
jo
fstpl
xchg
fs
outsl
fidivrs
ss
scas
jecxz
pop
scas
mov
repz
fwait
or
xchg
dec
popl
add
outsl
fidivrs
bound
fidivl
sbb
mov
stos
inc
sub
add
inc
mov
sti
stos
test
mov
or
push
clc
mov
add
int
aaa
outsl
lcall
and
mov
repz
or
imul
loop
mov
daa
fwait
aaa
outsl
fidivs
negb
out
and
adc
stc
scas
arpl
cmpsl
jg
cld
stc
cmp
mov
fs
rorl
mov
aas
std
jns
mov
mov
stos
cs
inc
inc
dec
pop
xor
mov
cmp
repz
mov
mov
pop
aaa
outsl
fidivrs
jae
mov
loopne
push
repz
fwait
push
cmc
movsl
mov
stos
call
fidivrs
xor
adc
ja
out
fwait
aaa
ljmp
and
pushf
icebp
cld
fidivrs
js
push
push
add
aas
cs
push
sarb
jp
and
sub
pusha
lcall
aad
cmpsl
std
movb
adc
inc
popa
daa
xor
sub
push
push
lret
repz
fwait
bound
xor
fists
fidivrs
adc
mov
movsb
stos
stos
or
out
fwait
aaa
out
adc
xor
xchg
aad
inc
push
or
jnp
repz
js
push
lcall
lahf
aas
jg
aaa
addr16
pop
inc
push
or
sub
sub
repz
jno
pop
cmp
loope
ret
addl
and
sahf
movsl
movsl
and
rclb
xchg
lahf
aas
fs
lret
stc
repz
mov
dec
cmpsl
pushf
ja
adc
mov
repnz
xor
repnz
out
and
addr16
rcrb
push
xor
repz
mov
mov
int
subb
pop
pushf
shrl
imul
in
mov
pop
lods
sub
adc
push
mov
shrb
ret
test
fwait
aaa
out
pop
fisubrl
or
inc
push
add
inc
mov
aam
push
imul
repnz
xor
mov
out
fwait
aaa
outsl
fsubrp
mov
jno
insb
xor
mov
test
int
jae
jp
rorl
test
fidivrs
movsl
xchg
cmpsb
mov
repz
fwait
arpl
xchg
int3
gs
dec
pop
insl
xor
outsl
fidivrs
sub
sbb
jg
lret
mov
aaa
mov
inc
inc
inc
inc
ljmp
ds
sub
push
pop
pop
dec
outsl
fidivrs
inc
inc
adc
push
jo
inc
lcall
pop
aas
jge
lahf
aas
jg
jge
js
and
jne
sub
cld
stc
repz
loope
lcall
addr16
mov
sub
mov
sbb
sbb
dec
cld
sbb
movsl
mov
sbb
sbb
popl
aaa
outsl
jmp
adc
xchg
cmp
cmp
cmp
inc
mov
loop
pop
gs
outsb
ljmp
fimuls
sub
mov
scas
outsb
mov
les
sub
aam
jns
cmp
and
mov
mov
in
into
fwait
aaa
outsl
ficoms
out
hlt
pop
pop
inc
inc
push
rcll
adc
dec
cld
loope
push
xchg
cltd
lcall
push
std
cmpsb
dec
and
jg
xchg
lret
scas
mov
stc
stc
repz
ja
mov
mov
outsl
mov
add
movntps
aad
xchg
inc
testl
fisttps
fs
jno
int
aaa
mov
test
cmp
bound
lcall
adc
mov
ds
les
scas
mov
sub
leavew
int
aaa
push
dec
mov
mov
jnp
in
dec
adc
outsl
fidivrs
cmp
sub
mov
push
je
out
xchg
test
idivl
repz
mov
and
xchg
lret
push
mov
flds
xchg
push
push
stc
inc
faddl
cmpsb
stos
xor
sarb
gs
stc
or
stc
movsl
sahf
fwait
aaa
outsl
faddp
shll
mov
icebp
or
out
cld
jns
out
fldl
rclb
cli
getsec
outsl
fidivrs
lcall
push
mov
out
mov
fidivrs
mov
out
fdivs
and
add
int
aaa
cli
gs
cld
mov
iret
fidivrs
addb
hlt
pop
ret
test
push
cmp
and
shlb
mov
fistps
jl
repz
sti
div
mov
sti
adc
push
out
lahf
jg
cmpsl
int
push
movsl
in
xchg
mov
repz
outsb
scas
out
push
leave
iret
lahf
aas
jg
and
js
cmp
xlat
add
icebp
cld
stc
repz
int
imul
lock
pop
adc
push
mov
aas
jg
push
in
pop
pop
jp
mov
push
mov
stc
repz
mov
fidivs
es
ret
aas
jg
cld
or
int3
enter
inc
add
and
mov
sbb
xchg
lahf
popa
cltd
popl
add
or
sub
repz
loop
xchg
fdivs
dec
sbb
fnstcw
add
dec
dec
cld
stc
repz
jb
cmp
das
inc
add
aas
jg
cmp
cld
cmpsl
ret
adc
repz
jns
mov
test
mov
xchg
bound
cld
cld
pop
dec
jecxz
jl
jl
mov
ja
pop
pop
add
push
aas
aam
out
mov
mov
mov
in
push
outsl
fidivrs
or
gs
je
mov
out
fwait
aaa
insl
sub
inc
out
stc
pop
jge
fidivrs
adc
jb
and
jge
loopne
rorl
js
icebp
or
pop
test
mov
out
out
scas
ret
pop
inc
mov
adc
adc
push
xchg
sbb
pop
movsl
mov
mov
mov
xchg
iret
js
in
inc
pop
aaa
outsl
ficoms
fdivs
lcall
mov
mov
hlt
hlt
scas
lret
sbb
cmp
std
std
mov
fidivrs
daa
and
sbb
aad
shl
int
aaa
pushf
push
imulb
negl
repz
xor
jle
scas
js
xor
imul
pop
push
dec
in
jmp
jns
out
aas
aas
sub
dec
sub
rcrb
outsl
or
mov
out
mov
int
aaa
repz
imul
cmp
cmpsb
fidivrs
fwait
inc
xchg
push
adc
xor
adc
xchg
aaa
outsl
or
inc
sub
test
clc
jns
out
daa
into
xor
dec
sub
popa
jle,pt
outsl
fidivrs
cmp
mov
mov
fwait
je
clc
cmc
jecxz
test
fadd
push
pop
add
cld
mov
adc
aam
iret
enter
jb
fwait
aaa
outsl
dec
in
lahf
filds
psubusb
xchg
clc
fidivrl
sbb
int3
xchg
xchg
enter
arpl
aaa
outsl
fidivrs
out
out
movsb
cli
cmp
jg
rcll
lea
inc
call
repz
lahf
mov
push
mov
jmp
stc
stos
pop
xchg
loop
cmp
aad
adc
addb
das
jmp
mov
insb
or
shll
dec
adc
cld
bound
outsl
fsubp
pusha
int3
mov
xchg
jno
push
ja
lock
ja
or
cmpsl
and
inc
xor
mov
jns
out
inc
jle
mov
mov
mov
mov
fwait
aaa
outsl
cltd
insb
push
cpuid
push
outsl
shll
out
push
test
out
mov
aaa
outsl
fidivrs
bound
ret
mov
mov
push
dec
mov
cmp
sar
aas
jg
cld
sub
fs
and
inc
enter
das
sbb
stc
jno
ljmp
clc
jg
or
pop
push
rolb
mov
xor
pop
xchg
ss
mov
movsb
push
aaa
add
fldenv
jne
in
xchg
lahf
mov
int
mov
mov
sarl
fdivrp
mov
das
sub
jae
dec
xchg
call
mov
jecxz
pushf
negb
jns
out
push
xchg
xor
rcrl
or
fwait
aaa
outsl
fidivrs
fnstcw
mov
enter
fcomps
sti
adcb
aaa
std
in
lret
shl
aam
xchg
mov
mov
or
lcall
fidivs
adc
cltd
add
popf
fildl
push
mov
ud1
addr16
cmpsb
inc
out
aaa
outsl
fidivrs
dec
xlat
mov
fldl
cmp
mov
out
mov
out
fsubs
push
xor
aas
imul
sub
mov
in
iret
lahf
jg
stc
and
and
xchg
stos
mov
cld
stc
repz
out
into
jbe
add
xchg
outsb
mov
xchg
lahf
aas
jg
ss
add
fwait
test
push
sbb
add
mov
push
and
repz
inc
std
pop
mov
imulb
sbb
outsl
fidivrs
loope
ss
data16
jmp
out
fwait
aaa
int
push
dec
pop
adc
and
fidivrs
dec
and
idivl
arpl
mov
aaa
outsl
jle
jmp
rcrb
pushf
adcb
lahf
pop
sarl
add
in
add
aas
aaa
outsl
fidivrs
loope
nop
lret
pop
jbe
test
int
out
fwait
addb
xchg
xchg
mov
gs
aas
mov
xchg
enter
ficoml
cmp
out
test
out
mov
pop
mov
cld
inc
das
insb
jmp
inc
outsl
mov
mov
leave
out
outsl
icebp
shr
cmp
push
mov
push
outsl
dec
cmpsl
and
in
push
stc
repz
push
mov
lret
stos
imul
cld
stc
pop
lahf
push
lds
mov
mov
out
lahf
dec
fcom
sbb
mov
adc
mov
outsl
ficoms
mov
inc
xlat
mov
iret
int
aaa
ror
js
push
pop
inc
inc
jp
das
cmpb
sub
xor
aas
aaa
outsl
ficoms
mov
and
repnz
fwait
sbb
ljmp
mov
push
mov
mov
cmpsl
cmp
imul
pop
jne
fwait
mov
outsl
clc
mov
test
jns
out
imul
jmp
mov
pop
xorl
and
xchg
idiv
fcomp
lret
repz
fwait
or
and
xchg
pop
fdivrp
pop
outsl
fidivrs
mov
and
xchg
out
fwait
aaa
mov
jno
jge
jns
dec
mov
rep
xor
test
mov
sub
lods
popl
in
iret
pusha
cs
and
mov
jnp
outsl
or
pushf
leave
jg
cmp
aaa
mov
xor
sbb
fidivrs
mov
lods
cmp
pop
loopne
add
jg
add
fistps
ja
jns
push
stos
call
or
outsl
fidivrs
push
js
cmp
and
mov
jmp
push
jb
insl
mov
push
cmpsb
pop
ret
stos
lock
adc
loope
pop
dec
fwait
push
sbb
cld
stc
stos
add
in
fwait
mov
aas
inc
xchg
out
lahf
aas
gs
and
loopne
or
cld
stc
repz
cmp
push
aaa
inc
pop
lock
mov
mov
jg
inc
mov
inc
mov
cld
stc
repz
gs
xchg
sub
je
and
sub
call
aam
rcll
enter
out
aas
inc
les
cmpsl
insl
fstpt
fs
xor
inc
ret
push
fiadds
not
hlt
xor
jae
repz
fwait
shrl
adc
or
xor
or
test
fdivrl
mov
fisubl
int
aaa
outsl
pop
lahf
movsl
test
mov
enter
mov
jmp
ret
sub
mov
outsl
ficomps
aaa
jne
adc
mov
aam
xchg
mov
cmp
cmp
out
dec
daa
pop
mov
cld
or
outsl
fidivrs
and
xor
or
fcomip
out
les
inc
pop
test
dec
js
mov
sub
push
sub
jae
pop
jnp
es
sbb
cmp
and
push
fwait
push
push
mov
rcr
mov
cmpsl
test
call
push
sbb
mov
pop
mov
mov
jg
cld
push
pop
push
mov
jmp
lret
repnz
lods
cli
pusha
mov
xor
iret
pop
pop
ds
lahf
dec
xor
and
stc
repz
mov
les
add
iret
lahf
aas
jg
sub
es
in
cmc
ret
sarb
in
cmp
out
and
mov
lds
mov
lahf
aas
jg
popa
sub
mov
loopne
mov
out
add
add
repz
enter
xchg
mov
adc
stos
out
cmp
cld
mov
cmp
lods
ss
popa
fidivrs
bound
scas
mov
and
aaa
outsl
xchg
int
or
scas
popl
shl
andb
dec
loopne
lret
aaa
outsl
jle
stc
lahf
dec
clc
gs
cmp
lret
fwait
lahf
cmp
imul
xor
fidivrs
push
cmpsb
cmp
jo
popf
adc
hlt
into
orb
outsb
iret
call
out
mov
out
adc
pop
mov
repz
xchg
imul
xor
cmpl
jg
jae
repnz
std
mov
xlat
lahf
cld
stc
repz
test
or
mov
js
mov
sahf
test
cmp
add
cmp
jecxz
dec
mov
int
mov
xrelease
fisttpll
cmp
and
inc
lcall
jg
mov
pushf
or
in
mov
sub
stc
repz
xchg
cmp
ss
xor
jg
cld
jns
pop
nop
xchg
sahf
cld
jno
aaa
jbe
andnps
call
jae
aaa
inc
mov
repz
inc
aaa
adc
sub
outsl
add
and
rol
dec
ss
cmp
or
or
dec
mov
out
outsb
sub
add
scas
int3
xchg
je
xor
aaa
outsl
fidivrs
dec
mov
lock
pop
jne
int
mov
dec
sub
stc
jo
repz
iret
addr16
pop
movb
addb
ja
fwait
inc
jp
clc
arpl
xchg
into
xor
rorl
sbb
pop
stc
hlt
stos
pop
insb
mov
popf
cwtl
fnstcw
cmpsl
push
scas
rcll
push
outsl
fdivrp
testl
pop
adc
aad
cmpsb
call
mov
sub
mov
inc
sub
push
aaa
outsl
fidivrs
pop
inc
sbb
rol
xchg
repz
fwait
cmp
in
aad
int3
sahf
push
jns
push
xchg
lods
shll
sub
fs
inc
repz
lahf
pop
or
or
mov
pop
adc
push
jg
cld
stc
adc
push
das
fisubl
jmp
mov
lahf
aas
sub
test
aaa
outsl
add
add
and
int
iret
outsb
inc
mov
bound
loopne
xchg
test
fidivrl
inc
outsb
fidivrs
cltd
push
mov
xchg
int
pop
mov
ja
fstps
outsl
mov
iret
sub
push
mov
mov
ljmp
dec
xchg
fwait
aaa
out
ficoml
decb
xor
icebp
pop
out
movq
and
cmp
leave
jg
aas
jg
hlt
lahf
mov
ja
dec
add
icebp
xchg
xchg
repz
lahf
cmp
xchg
mov
cld
stc
fcmovbe
je
dec
sbb
cli
pushf
adc
jp
push
iret
lahf
aas
rcrl
jnp
je
jne
cld
stc
repz
xchg
add
ja
add
lods
and
jg
inc
into
or
jno
stc
or
fcoml
push
imul
cld
stc
repz
jge
jno
test
rcrb
pop
add
fucomp
jmp
inc
sbb
xchg
xchg
xchg
lea
mov
push
pop
sbb
int
int
jae
jp
xchg
pop
push
fiadds
jge
mov
aas
and
gs
jg
imul
push
or
rcl
mov
iret
lock
fdivs
imul
jb
aas
jg
cld
push
push
loopne
mov
jmp
into
ss
movsb
lcall
push
cltd
push
dec
popf
pop
jae
outsb
and
jg
cld
stc
iret
push
and
call
sub
sbb
or
iret
lahf
aas
pop
pusha
in
sub
add
mov
adc
stc
repz
lret
add
les
rclb
sahf
shll
shr
sarb
out
add
into
lea
fnsave
mov
or
movl
pop
cmpb
fbld
add
add
fidivrs
aad
insl
pop
dec
sub
gs
mov
cmp
add
and
sbb
and
dec
insb
divb
lods
xrelease
out
pop
xlat
mov
popf
cs
cld
stc
pop
ret
imul
cmp
in
xor
jle
fwait
ja
outsl
dec
insl
jle
call
mov
ret
xchg
add
popa
jne
lret
ja
pop
fxch
daa
in
mov
jg
xchg
fwait
cmp
popf
hlt
fucom
ja
cmpsb
mov
iret
lahf
aas
movsb
add
clc
es
insb
data16
stc
repz
ds
rcl
ret
adc
push
cld
stc
ret
sbb
dec
loop
mov
pop
xchg
ds
lahf
aas
jg
lcall
popa
nop
pop
lret
xchg
cld
stc
repz
out
addr16
cmp
adc
aas
jg
mov
cmp
ret
repz
jecxz
das
incl
mov
pop
aam
push
cmp
outsb
outsl
iret
add
sbb
sbb
pop
mulb
jg
cld
stc
jo
subl
dec
jecxz
xchg
adc
hlt
repnz
out
lahf
aas
dec
out
bound
out
rcr
mov
cld
stc
repz
nop
mov
inc
pop
data16
jo
sub
cmp
pop
push
lahf
jmp
mov
dec
jg
add
cmp
andb
arpl
sar
cld
stc
repz
repz
sbb
test
cmp
loopne
jns
out
mov
test
adc
sbb
fs
in
outsl
fidivrs
dec
mov
out
cmp
inc
dec
outsl
repz
fwait
dec
out
mov
mov
lock
arpl
inc
cmp
pop
sbb
iret
xchg
mov
arpl
fwait
aaa
outsl
push
lret
sti
mov
jns
out
xchg
popa
fldt
xchg
in
jg
jb
mov
sub
pop
push
popf
jl
out
lahf
leave
leave
fnstenv
mov
dec
adc
jle
cld
stc
out
mov
stos
or
repz
dec
jp
inc
jg
rclb
cmp
jg
cld
shl
cmpsb
mov
and
movsb
lret
cmp
push
stc
add
and
jmp
mov
jg
cld
fldt
pop
add
das
nop
mov
test
repz
lahf
adc
out
dec
mov
mov
stc
xchg
pushf
subb
inc
ljmp
and
jge
movsl
adc
pusha
push
add
xchg
arpl
outsl
fidivrs
rcrl
inc
repz
out
repz
fwait
adc
mov
test
outsl
fidivrs
outsl
add
je
xchg
lods
out
fwait
aaa
jne
ja
pop
add
pop
push
inc
sbb
mov
xlat
add
jl
fstl
xor
or
pop
ja
fwait
aaa
outsl
mov
cltd
xor
adc
pop
and
sarl
loope
xchg
jp
pop
pop
dec
jl
arpl
fnstenv
cmpsl
bound
out
ljmp
cli
dec
or
out
cmp
inc
xchg
xchg
sbb
call
mov
fidivrs
lock
pusha
int3
fsubl
jb
inc
out
jmp
int
aaa
cmp
jb
mov
jns
xchg
stc
int
jno
pop
ret
ljmp
jp
fwait
aaa
outsl
push
mov
add
aas
in
pop
mov
and
mov
shrl
and
outsl
fidivs
daa
dec
sbb
mov
shll
lahf
jo
cs
add
mov
lcall
jo
xchg
or
or
lods
mov
stos
out
leave
xor
lds
mov
outsl
fisubs
sbb
or
xlat
jge
mov
repz
imul
mov
and
fidivrs
xlat
add
push
push
jge
xchg
int
neg
outsb
ds
xchg
in
mov
aaa
push
repz
mov
xchg
mov
fnstcw
int3
push
mov
out
icebp
push
rclb
sarl
sti
jns
out
aaa
cmp
jmp
test
js
mov
aaa
outsl
fidivrs
sti
movsb
out
lods
mull
in
popa
lock
inc
xor
add
pop
lcall
push
jo
jecxz
xor
xchg
sbb
stc
repz
fisttps
in
out
subl
repz
sub
inc
xchg
loop
mov
lods
sub
xlat
ds
and
repz
ljmp
ljmp
fstps
ss
and
cmpsb
jg
cld
jecxz
pusha
inc
jp
mulb
sbb
mov
out
lahf
aas
mov
idivb
push
aas
cwtl
leave
fidivs
repnz
stc
repz
dec
es
ret
xchg
mov
mov
rolb
rclb
aaa
mov
adc
jb
dec
std
pop
xor
daa
test
notb
fwait
aaa
outsl
fisubrs
daa
dec
jecxz
jl
ds
push
ss
jp
pushf
and
in
mov
mov
outsb
ficoms
push
divl
mov
inc
adc
add
dec
lcall
lahf
scas
or
enter
mov
scas
ds
insb
fidivrs
es
inc
js
inc
cmp
into
ja
ret
jge
in
fidivrs
add
or
xchg
xor
je
adc
sti
int
aaa
outsl
test
jg
repz
flds
sbb
outsl
loope
fidivrs
inc
inc
cmp
sub
fwait
aaa
outsl
repnz
sahf
push
mov
jo
mov
das
scas
and
enter
iret
lahf
aas
adc
addr16
aaa
int
sub
jno
movsb
movsl
cs
cmp
inc
scas
ret
mov
out
lahf
aas
aas
sub
movzwl
insl
xor
cld
stc
pause
adc
mov
sub
int3
cltd
mov
jne
mov
sbb
int
outsl
xor
testl
sub
xchg
outsl
fidivrs
negl
xchg
mov
xor
out
fwait
aaa
or
leave
cmpsb
clc
stc
outsl
testl
repz
pop
test
pop
aaa
outsl
sub
scas
lret
test
fs
daa
mov
or
cs
lret
fidivrs
test
mov
cmp
mov
mov
addr16
fwait
ja
pop
outsb
mov
push
and
out
inc
fwait
adc
lock
jb
mov
jo
ret
push
ss
dec
adc
movsl
cltd
out
ss
je
int
int
fsub
mov
je
xchg
xlat
and
mov
jle
xchg
std
rclb
ds
repz
fimuls
fdivrl
pop
pop
push
mov
stc
pop
cmpsl
adc
inc
xchg
jo
pop
addl
jg
mov
cltd
ss
cmp
sub
out
add
bound
xor
or
ds
insb
ficoms
jg
add
leave
sub
jle
stc
repz
filds
xchg
inc
inc
add
aas
jg
cld
jg
mov
lods
jg
ja
addl
mov
cmp
scas
push
sbb
stc
scas
mov
ret
scas
cmp
outsl
fidivrs
lods
jecxz
insl
pop
jnp
daa
int
aaa
jo
pop
fimuls
cld
stc
repz
dec
xor
lahf
mov
push
jg
push
sub
adc
dec
mov
push
imul
test
repz
inc
ret
xchg
imul
jbe
aas
jg
cld
dec
ljmp
push
dec
xor
iret
lahf
inc
out
dec
int3
fucom
sub
mov
sub
repnz
lahf
sbbb
inc
jg
cld
stc
mull
ja
bt
sbb
xchg
stos
sub
mov
shlb
and
stc
repz
jns
xor
inc
xchg
mov
jns,pn
repnz
lahf
aas
jg
mov
cmp
xor
stc
repz
and
push
pop
inc
or
adc
aas
jg
cld
stc
cltd
pop
jne
ds
dec
mov
xor
lahf
xchg
lahf
sbb
stc
pusha
leave
leave
jmp
cmp
iret
lahf
jg
inc
int
xlat
call
add
cld
stc
repz
aad
movsb
pop
dec
clc
or
jno
ror
scas
lds
jle
and
stos
push
bswap
out
mov
jo
rcrl
stc
repz
out
fsts
inc
cld
stc
repz
push
fidivs
je
out
js
sti
xor
xor
lahf
aas
jg
es
lcall
cwtl
xchg
push
iret
pop
push
dec
sbb
pop
add
loop
mov
cmpsl
push
sub
jecxz
je
out
adc
insb
dec
stos
aad
int3
in
out
shll
leave
xor
push
lret
shl
ds
repz
outsb
xor
pop
adc
sti
scas
shrl
iret
lahf
aas
ljmp
inc
jg
push
push
xchg
shlb
cld
stc
repz
fwait
test
pop
inc
pushf
insl
or
ficoml
jg
sahf
xor
inc
add
ret
out
lds
icebp
pop
mov
mov
call
stos
inc
sub
mov
pop
xlat
bnd
outsl
lods
scas
mov
in
jne
sar
fucomi
test
out
sbb
repz
mov
sbb
stos
adc
out
lahf
aas
daa
lahf
hlt
iret
sbb
or
mov
cld
stc
repz
dec
mov
mov
aas
jg
or
xor
aaa
outsl
fiadds
push
dec
call
jle
rol
loop
fwait
and
stos
mov
mov
mov
dec
adcb
sub
jno
sbb
jns
push
or
mov
int
pop
dec
xor
inc
mov
jg
fidivrs
pushf
pop
js
cmpsl
das
in
mov
lahf
repnz
shll
leave
add
adc
inc
mov
mov
loopne
inc
xchg
aas
dec
pop
sbb
iret
lahf
aas
mov
sub
std
lock
leave
lret
cld
stc
repz
cmp
mov
push
xchg
dec
jg,pt
fmuls
push
mov
mov
popf
cmpsb
movq
cld
stc
push
xchg
ja
lods
pop
lods
mov
lock
sbb
aas
ret
sub
int
aaa
outsl
xchg
es
lods
inc
mov
jno
mov
fcmovnbe
insb
mov
jle
mov
aaa
outsl
fisubrs
push
sub
popa
push
ficoms
int
sbb
mov
outsl
pop
bound
jns
xor
lcall
jo
jle
mov
imul
sub
mov
mov
mov
movsl
dec
inc
cmpsb
call
or
dec
cmpsb
cmp
xor
int
aaa
outsl
daa
jg
dec
lret
inc
stos
xchg
mov
sbb
call
int3
xor
out
adc
push
imul
and
jnp
pop
es
out
out
add
test
icebp
cld
push
push
fnstcw
jo
mov
aaa
decl
addr16
aad
test
repnz
lock
int
mov
sub
mov
sbb
jb
cmp
in
fwait
int
pop
or
or
iret
lahf
aas
aam
outsb
adc
cmp
sub
stc
repz
fs
push
std
sbb
fwait
stos
out
and
mov
sbb
outsw
loope
in
pop
out
aas
dec
out
jp
pusha
and
mov
inc
xchg
repnz
fnstsw
mov
out
sbb
int3
ret
das
pushf
mov
mov
jecxz
sbb
fwait
aaa
outsl
fisubrs
mov
mov
out
outsl
out
pushf
loopne
dec
xchg
pop
mov
fidivrs
xchg
mov
sbbb
repz
fwait
imul
leave
or
xlat
cmpsb
mov
lahf
jg
jns
xor
fs
enter
repz
ret
xor
in
xchg
mov
aas
jg
cld
push
jg
pusha
repz
sbb
pushf
xor
jmp
mov
loopne
fwait
push
push
inc
fst
shll
aaa
outsl
fidivrs
movsl
jp
lds
jo
shll
fwait
sub
in
sbb
push
scas
cmp
adc
jecxz
mov
push
es
notb
or
pop
and
rol
inc
and
outsl
ficomps
rcll
xor
enter
cmpb
xchg
das
cld
and
clc
dec
pop
cltd
xchg
fidivl
aas
jg
mov
sub
and
dec
sub
leave
iret
jae
mov
mov
outsl
fidivrs
xor
fldl
shufps
int
aaa
cmp
pop
mov
je
cmpl
in
dec
in
pop
cmp
aaa
cmp
lahf
cli
push
mov
lret
jecxz
cld
imul
stc
add
and
or
jae
iret
lahf
aas
fmull
mov
mov
cld
stc
repz
ret
xlat
movups
push
int
leave
unpcklps
shrb
icebp
mov
aas
jg
icebp
mov
sbb
rclb
adcl
repz
lahf
icebp
cmp
pusha
jns
mov
fsts
iret
or
popa
push
xchg
xor
cs
mov
iret
lahf
aas
lods
or
lods
cmp
fdivrl
push
cld
stc
repz
fstpl
sub
xchg
sub
mov
jg
aaa
arpl
xchg
ret
cltd
inc
and
out
inc
fidivl
pop
jg
inc
or
std
aaa
outsl
fiadds
ljmp
and
enter
movsl
clc
neg
inc
cmpsl
push
mov
movsl
xchg
pop
shrb
test
iret
lahf
aas
pushl
jmp
add
xchg
movsl
and
stc
repz
sub
not
or
mov
aas
jg
xor
push
out
add
lret
popf
js
mov
inc
in
sbb
cmp
int
add
shrb
xor
rcrl
mov
lret
out
xor
xorl
repnz
hlt
and
adc
insl
xchg
lahf
aas
jg
lcall
sub
push
ljmp
cmp
mov
adc
xchg
jns
int
aaa
outsl
cli
pop
and
lea
add
jns
out
xchg
test
xchg
aaa
outsl
fidivrs
jae
xor
cld
stc
ret
mov
outsb
jg
sbb
sahf
mov
push
mov
xchg
addr16
out
ja
dec
push
sbb
pop
mov
cmp
nop
lahf
rolb
pop
ljmp
bound
jge
add
adc
xchg
or
pop
cmp
mov
sub
mov
push
sahf
test
test
loope
fwait
aaa
out
test
divl
rcrb
daa
jns
out
mov
xor
mov
outsl
sahf
push
push
sub
jo
iret
mov
xchg
jle
repnz
fwait
jno
sbb
stos
sahf
sbb
mov
int
pushf
fs
iret
lahf
aas
out
cmp
ss
add
dec
cmc
jmp
sbb
ljmp
dec
andb
repz
pop
and
xchg
xchg
pusha
fcmovnb
rcrb
pushf
sub
movsl
pop
or
gs
in
int
cmp
mov
or
test
adc
mov
dec
nop
data16
aaa
outsl
ficomps
adc
das
test
clc
push
and
jns
out
pop
nop
cli
and
push
mov
inc
ss
sahf
shll
addr16
or
lahf
aas
push
jmp
jecxz
stos
pop
out
arpl
stc
repz
scas
in
cmp
pushf
ja
stc
and
sub
ljmp
mov
out
mov
int
or
pop
int
xor
into
dec
or
orb
rcr
aas
lret
jns
dec
mov
xchg
and
outsl
fidivrs
push
stos
incb
adc
push
cld
stc
movl
ja
mov
push
inc
jle
inc
hlt
je
push
or
mov
ja
add
mov
pop
push
fwait
aaa
outsl
ficomps
sbb
mov
lock
stc
repz
enter
xchg
addr16
mov
xorb
insb
aas
jg
cld
gs
aas
sub
pop
lea
lahf
add
test
out
in
aaa
jns
mov
stc
mov
lock
in
cltd
mov
cmp
inc
mov
cmp
jns
pushl
outsl
fiadds
sub
cmpb
testb
int
push
sbb
or
xor
sbb
push
cli
fiaddl
cmp
mov
mov
ficoms
scas
pop
sarb
or
outsl
sbb
idivb
push
roll
cmc
xchg
shr
push
adc
out
andb
aaa
outsl
fidivrs
inc
sbb
add
adc
fwait
dec
and
push
bound
lods
cld
shl
aaa
outsb
fidivrs
sbb
shl
adc
xchg
int
aaa
jg
in
sbb
mov
cli
enter
or
mov
jg
fidivrs
pop
sahf
test
repz
lahf
and
outsb
fistl
mov
cld
stc
lcall
hlt
pop
add
push
outsb
pop
xchg
jmp
push
xchg
mov
in
push
sbb
sbb
daa
xor
out
repz
mov
lret
fidivrs
lds
out
ja
sub
imul
mov
fcmove
cmp
test
mov
mov
je
pop
push
jno
leave
in
and
int
aaa
mov
sub
testb
fidivrs
and
push
cmpsl
ja
iret
dec
jge
int
aaa
outsl
jno
call
test
jns
out
stos
hlt
jns
pop
inc
pop
cltd
cli
dec
pop
sbb
fcompl
pop
jae
fbld
pop
cmp
jns
out
jbe
xor
xor
jmp
es
shlb
outsl
fidivrs
das
insl
add
fisubs
andl
lret
repz
fwait
cmpsb
adc
mov
jbe
sub
call
in
and
jg
inc
fs
xchg
cmp
aaa
jg
loop
in
test
jae
cmp
iret
lahf
aas
je
adc
cmp
cmp
repz
jno
inc
push
fldcw
imul
jg
sub
pusha
xchg
push
sub
lds
cld
stc
repz
inc
xchg
push
sar
mov
mov
inc
dec
out
xor
imul
repz
fwait
stos
xchg
jae
pushf
cmovs
push
jecxz
xchg
pop
fnstcw
mov
jbe
pop
dec
andb
cld
stc
push
inc
lock
xchg
mov
mov
daa
daa
aaa
mov
lahf
aas
jg
adc
push
inc
shl
imul
stc
repz
je
or
lret
bound
or
lret
lahf
cld
int
cmpsb
loope
int3
xadd
jnp
int
aaa
outsl
adc
cld
cmc
jo
xor
hlt
sbb
fwait
and
lret
negb
inc
xchg
lahf
aas
jg
mov
lods
mov
add
mov
or
cmp
out
cmpsb
pop
pop
push
jb
xor
sbb
ds
outsl
sub
mov
int
aaa
xchg
mov
pop
test
out
push
test
into
mov
inc
scas
and
jne
pop
xchg
fwait
aaa
outsl
fidivrs
call
andb
jp
push
jno
int
sbb
insb
lods
dec
outsl
fidivrs
sbb
jg
outsl
mov
js
int
aaa
jl
inc
add
jae
mov
fidivrs
mov
gs
xchg
adc
lds
insb
mov
push
arpl
mov
outsl
and
out
scas
push
xor
add
and
xchg
cs
and
or
repz
fwait
lahf
idivb
push
push
movsb
test
outsl
fidivrs
frstor
dec
ss
addr16
ss
insl
inc
push
or
icebp
enter
int
jg
jp
xchg
aaa
outsl
mov
dec
mov
shrl
int
ja
pop
inc
sub
stos
inc
addl
repz
int
add
mov
fistpll
aaa
outsl
ficomps
cwtl
daa
jmp
movsl
dec
and
inc
push
mov
out
ror
lock
sti
fs
inc
sbb
sub
outsl
fidivrs
adc
imul
repz
fwait
es
mov
repnz
adc
jo
fidivrs
pop
stos
sbb
fistpl
xchg
popa
enter
int
aaa
cmp
inc
pop
push
out
imul
cmpsl
or
sub
push
das
pop
cltd
jo
pusha
int
aaa
outsl
cli
lcall
xchg
xchg
add
repz
mov
bound
ljmp
adc
stos
js
jno
sysret
test
mov
out
fwait
packuswb
rorb
scas
inc
and
mov
jg
pushf
xor
movsb
es
insl
inc
shl
lret
fidivrs
push
lods
pop
lret
sub
dec
pop
pusha
xchg
int
aaa
outsl
lahf
mov
subl
sbb
cld
fstpt
mov
mov
pop
repnz
mov
neg
mov
cmp
sbbl
cwtl
int
aaa
outsl
mov
adc
lahf
jg
into
xchg
nop
and
pop
add
fmull
stc
repz
sbb
stos
call
dec
dec
xchg
mov
cmc
fimull
sbb
jae
mov
adc
mov
jno
fidivrs
js
add
pop
stc
lahf
das
fiaddl
cmp
pop
scas
adc
repz
xchg
loop
rcr
pop
cmp
pop
mov
mov
mov
pop
outsl
imul
mov
push
xchg
fwait
loopne
push
test
es
or
movsb
aam
bound
out
bsf
out
adc
outsb
sbb
inc
push
je
sahf
adc
adc
outsl
ficomps
scas
cs
clc
sbb
rcrl
aaa
xor
mov
lds
arpl
mov
imulb
fwait
aaa
add
sbb
jns
out
and
jo
test
mov
outsl
jle
aaa
outsl
call
jle
fdivrl
mov
push
hlt
enter
push
or
ficoms
add
jecxz
dec
push
int
aaa
outsl
mov
xor
rcrb
mov
xor
out
pop
mov
sub
jne
aaa
outsl
fisubrs
mov
xorb
bound
cmc
jns
out
xlat
sub
mov
nop
iret
xchg
aaa
outsl
fidivrs
imul
mov
fwait
sub
cwtl
scas
lock
xor
outsb
pop
sub
incb
add
in
test
pop
fistps
stc
repz
mov
stos
movsl
mov
sub
popa
dec
jg,pt
scas
pop
adc
lods
out
mov
mov
fcoml
inc
mov
jnp
lcall
jmp
stos
icebp
outsb
arpl
aaa
outsl
ficoms
bound
cli
cmp
ja
xchg
mov
adcl
out
mov
sbb
push
std
cmp
outsl
fidivrs
data16
xchg
nop
nop
shrb
int
add
test
daa
ss
repnz
fidivrs
nop
cli
movsl
or
popf
rolb
out
fwait
aaa
xchg
or
insb
cltd
ret
ret
adc
mov
jno
push
cli
push
test
out
sbb
out
sbb
insb
fmulp
cmp
dec
lahf
lock
popa
popa
mov
and
popf
imul
enter
out
shl
stc
repz
dec
inc
pop
fcmovu
das
stos
cmpsb
mov
cld
inc
mov
pop
sbb
lock
mov
out
lahf
adc
cmp
icebp
stos
cmpsl
mov
lock
cld
stc
lcall
and
int3
aas
jg
fisttpll
adc
pop
mov
and
cmp
or
sub
inc
mov
fcmovbe
add
xchg
cld
stc
sub
mov
in
or
in
inc
sbb
mov
aas
inc
push
ja
xchg
lret
stc
inc
faddl
mov
std
ja
mov
mov
jnp
mov
sti
call
mov
lahf
stc
hlt
repz
pop
pop
adc
lahf
cld
cld
stc
gs
stos
mov
jae
mov
iret
lahf
mov
push
inc
mov
add
push
repnz
movsl
enter
xchg
xchg
fwait
rcrb
sarb
xor
mov
icebp
enter
subl
mov
rclb
js
lahf
aas
jg
jns
ret
xchg
pushf
xor
stc
repz
push
dec
and
movsl
int
or
hlt
adc
and
jnp
mov
push
flds
jmp
dec
pop
fidivrs
outsb
js
ljmp
int3
orl
xor
lret
fcmovu
fnstsw
repnz
lret
ds
xor
cmpl
adc
mov
repz
cltd
sbb
ret
cmp
add
test
jge
inc
mov
mov
mov
cmpsb
jmp
mov
lahf
aas
or
fistpl
cld
arpl
pop
ret
outsb
xor
imul
push
push
or
js
inc
add
loopne
in
pushf
lea
pop
mov
push
in
movsl
jg
test
outsl
fidivrs
stc
iret
hlt
add
inc
sbb
int
fwait
aaa
cs
and
lret
mov
jns
out
cwtl
cwtl
xor
adc
popf
ret
lar
add
add
fisttps
push
jns
cs
mov
int
ret
and
in
int3
dec
pushf
cmp
pop
push
clc
popf
fnstsw
lret
sarb
lret
inc
or
xor
push
dec
fwait
aaa
outsl
fdivrp
mov
insb
lret
je
mov
call
aas
pop
leave
cmp
mov
test
and
in
inc
add
outsl
fiadds
cmp
sbb
sbb
inc
pop
std
stc
leave
out
fwait
out
mov
sbb
sbb
adc
mov
lock
pop
ss
ret
pushf
aaa
pop
imul
cmc
repz
stc
repz
cs
and
sahf
pop
mov
mov
mov
xlat
aam
shl
and
repz
lret
enter
xor
popf
push
ja
jg
cld
fdivl
sbb
xchg
insb
dec
push
scas
or
xchg
lahf
pop
add
dec
jecxz
mov
pop
mov
push
into
stos
mov
repnz
xlat
cmpsl
insl
add
mov
xchg
scas
and
fwait
push
xchg
xor
fistl
jne
push
mov
aaa
sbb
pop
xor
cmp
dec
cwtl
dec
and
dec
repz
xchg
popf
std
cwtl
ds
adc
aas
mov
xor
jno
js
inc
add
fwait
aaa
out
push
cld
enter
popa
scas
xchg
pop
inc
pop
adc
jg
daa
xchg
mov
aas
jg
cmp
repz
lahf
les
pop
cmp
push
or
test
inc
sbb
lahf
test
pop
fwait
iret
adc
adc
inc
lds
pop
or
loope
dec
fiadds
mov
dec
and
mov
outsl
dec
cmp
dec
cltd
jmp
jns
out
repnz
mov
stos
xor
lock
fcmovb
push
fnstcw
andl
mov
cmpsb
jns
xor
mov
enter
pop
sub
stc
push
push
pop
push
add
mov
lcall
dec
xchg
outsl
mov
insb
std
mov
xor
push
outsb
testl
pusha
in
rcl
adc
scas
mov
adcb
add
add
push
sbb
repz
imul
ss
add
pop
jo
jb
cmpsl
iret
cmp
cld
cld
stc
insl
xor
mov
jecxz
sbb
and
sub
sbbb
jae
bnd
dec
sbb
jle
nop
sahf
xlat
dec
jno
push
je
shlb
push
das
push
imul
xchg
lahf
aas
sbb
movsb
lcall
inc
fwait
aaa
add
cmp
enter
out
popa
fwait
cmp
jne
adc
outsl
fidivrs
sbb
or
dec
subl
stc
xlat
and
mov
xchg
cmp
xor
mov
adc
fstps
stc
repz
jnp
test
ljmp
cld
iret
iret
adc
lds
xor
loope
sar
dec
add
dec
push
sbb
xchg
fwait
jmp
jns
out
and
xorb
insl
dec
sub
adc
outsl
fidivrs
aas
enter
mov
mov
int
pop
jbe
insl
in
mov
cmp
sbb
jns
stos
push
outsb
call
mov
push
add
cmpsb
pop
dec
nop
and
jns
lock
push
xor
mov
mov
ds
lea
inc
add
jns
adc
add
pop
and
outsl
ficoms
or
xchg
xchg
aam
pop
jmp
jns
out
out
pushf
ret
jmp
leave
inc
mov
mov
inc
fidivrs
dec
inc
clc
mov
ja
enter
xor
imul
repz
fwait
adc
or
adc
mov
outsl
fdivrl
rcll
jae
std
mov
mov
int
aaa
cli
in
mov
fxch
or
cmp
pop
in
sti
add
or
inc
fs
cmp
or
inc
mov
pop
outsb
fidivrs
and
sbb
sar
mov
push
cld
inc
pop
imul
push
xchg
fwait
aaa
outsl
imul
loop
add
adc
jg
cld
jmp
test
loope
sub
dec
into
stc
xlat
dec
ds
mov
pop
leave
or
ret
cld
dec
mov
call
lahf
xchg
xchg
fucomip
enter
rcr
in
sub
jns
rcl
ljmp
sbb
or
jns
pop
stos
into
mov
daa
aas
jp
pop
add
mov
adc
filds
pop
jbe
in
jns
out
idiv
xchg
fs
dec
cli
scas
addb
fdivrl
scas
dec
sti
lds
lahf
jg
pop
lret
daa
movsb
ds
mov
in
mov
scas
inc
jbe
sbb
aas
jg
jge
rcrb
mov
cmp
cs
pop
imul
and
imul
cld
stc
repz
mov
pop
jg
jecxz
jl
cmc
mov
jg
std
pop
lahf
cld
imul
pop
inc
jo
int
out
clc
out
push
pop
outsl
fidivrs
or
push
add
ss
les
lret
lock
xchg
mov
std
mov
jmp
and
aaa
mov
mov
shll
scas
cmpsb
cmc
pop
jle
mov
push
xor
jbe
addr16
cmovne
fwait
aaa
outsl
and
nop
jnp
call
push
xor
out
lret
cltd
call
test
iret
lahf
aas
ja
mov
ret
xchg
stos
jbe
add
mov
rcrl
adc
jmp
fistpll
cld
pop
mov
psubsb
fnstcw
popf
sub
fisttps
add
xchg
into
das
lods
aas
push
push
sarb
mov
lahf
in
mov
ss
adc
mov
cmp
daa
lea
dec
inc
out
sbb
mov
mov
mov
arpl
rcrb
inc
imul
jno
lods
repz
jmp
out
fwait
aaa
dec
and
push
pop
sti
pop
clc
ffreep
into
ljmp
dec
lods
jb
aaa
cmp
stc
repz
mov
je
pop
mov
dec
fiadds
incb
test
dec
mov
pop
and
outsl
mov
hlt
jl
push
pop
hlt
adc
cmp
out
mov
arpl
add
cld
stc
add
pop
fcomps
inc
mov
xchg
jle
mov
inc
dec
cmc
aas
aaa
outsl
fidivrs
sti
imul
int
popf
in
faddl
lret
fdivrl
lds
ljmp
xor
sbb
call
adc
sub
adc
int3
pop
and
roll
xor
mov
jne
out
ret
pusha
gs
insl
jns
mov
jo
int
aaa
outsl
jae
xor
inc
lahf
cwtl
lret
mov
icebp
mov
in
cltd
xor
xorl
cld
xlat
fbstp
fcompl
aad
outsl
loop
ja
inc
and
pushf
insl
pop
test
out
or
ja
jg
xchg
aaa
push
add
pushl
adc
daa
hlt
stos
mov
mov
pop
cmp
cld
stc
add
inc
cmp
loope
mov
js
push
out
lahf
aas
int3
dec
add
add
dec
out
cld
stc
repz
lcall
push
mov
pop
scas
push
sahf
aas
jg
enter
lahf
mov
pop
fiadds
inc
les
int
aaa
outsl
pop
bound
mov
mov
dec
pop
test
ljmp
aaa
inc
adc
repz
add
fs
loop
inc
xchg
outsl
jmp
stc
mov
mov
jg
test
fidivl
stc
repz
mov
cmpsl
sbb
cmpsl
jg
cld
scas
and
fisubl
movsbl
or
flds
js
cmpsl
ss
pop
mov
and
cld
stc
das
shll
xchg
scas
jb
jae
hlt
fnstcw
sub
fsub
iret
lahf
aas
and
mov
and
adc
out
or
push
rcrb
or
outsl
fmulp
call
and
push
mov
inc
lahf
test
push
mov
shl
dec
cmpsb
pop
pop
add
xor
fidivrs
dec
dec
out
xor
aas
jg
es
addr16
mov
adc
adc
xchg
jg
inc
sub
nop
out
inc
push
xchg
js
or
aaa
rclb
test
test
cmp
pop
divl
mov
push
add
sbb
test
ret
mov
mov
paddusw
lcall
or
fcmovbe
and
push
cwtl
cld
cmc
xchg
pop
imul
inc
inc
inc
dec
imul
hlt
inc
das
pop
scas
pop
cmc
xchg
sub
xor
rol
jge
negb
ds
lods
stos
rcl
mov
mov
xchg
sub
pusha
mov
sarb
mov
inc
jmp
push
enter
enter
aas
stos
nop
andl
adc
dec
or
pop
mov
fwait
orb
push
leave
int
cli
les
out
jecxz
jns
xor
call
lea
test
push
inc
inc
jle
sahf
insl
adc
fcmovnu
adc
cld
mov
daa
cmp
mov
jg
lahf
add
sbb
lea
jmp
jb
out
pop
push
push
jbe
pop
adc
insl
scas
and
cld
stc
push
pop
sbb
stos
xlat
xlat
int
adc
mov
jge
pop
and
daa
out
inc
sub
fwait
test
xor
fwait
pop
cmp
insb
das
adc
sub
out
xor
sbb
insb
fidivrs
pop
ret
into
sub
sbb
cmpl
addb
shl
out
adc
inc
ds
test
clc
movsb
jns
jns
icebp
mov
nop
aaa
add
das
sub
pop
mov
inc
cltd
or
icebp
aad
ficoms
test
xor
inc
fbstp
int
aaa
aaa
data16
cmpsb
data16
adc
rclb
push
fwait
xorl
loop
xchg
lock
gs
aaa
outsl
dec
ds
sub
jg
jns
out
das
sbb
out
subb
ljmp
loop
pop
inc
or
ja
xchg
push
pusha
arpl
push
push
mov
out
inc
pop
jb
push
shlb
sahf
xchg
dec
and
fwait
aaa
outsl
fisubrs
cmp
in
pop
cmp
int
inc
add
cli
daa
adc
adcb
and
add
sbb
adc
jnp
aas
repnz
mov
push
shll
and
sub
push
leave
mov
or
fwait
aaa
outsl
ficomps
cmp
sub
in
pop
cmp
push
ljmp
imul
fs
cmp
scas
push
sti
inc
inc
jae
ds
mov
jg
xchg
ss
jno
subl
pop
mov
lahf
js
cltd
daa
inc
mov
mov
stc
repz
mov
cmp
push
and
cmp
push
es
mov
fcos
xchg
int
and
lcall
stc
repz
outsb
sar
jno
mov
decb
lahf
aas
jg
cmp
jle
mov
mov
repz
xchg
xor
sub
enter
mov
jg
cld
shll
mov
aaa
out
test
out
in
lds
fbstp
jg
aam
cmp
jg
lods
and
outsb
xchg
or
daa
lahf
aas
jmp
jne
es
sbb
pop
dec
aad
inc
jle
leave
lea
fiadds
xchg
in
sahf
repz
fwait
cmc
inc
inc
negb
ret
pop
lds
mov
orl
jecxz
fwait
aaa
adc
incb
xchg
inc
lret
mov
in
lock
out
sub
popf
add
imul
in
lahf
aas
mov
aaa
test
mov
clc
inc
and
lahf
cmp
mov
repz
or
ret
push
enter
xor
outsl
fidivrs
cld
cmpsl
ret
imul
xchg
sub
xchg
fwait
fwait
cwtl
call
xlat
mov
inc
or
jns
scas
cli
cmp
dec
push
or
xor
out
out
repz
adc
lock
imul
add
xlat
jecxz
pop
fcmovb
pop
fwait
aaa
outsl
fmulp
shlb
test
fs
aas
fwait
jns
out
mov
in
das
mov
mov
cmpb
outsl
fidivrs
cmp
rclb
cmp
out
fwait
push
fwait
ret
add
push
ss
outsl
mov
lahf
scas
mov
mov
lcall
lahf
cmp
sub
inc
daa
jns
and
pop
out
lahf
aas
sub
add
stc
push
lret
repz
dec
fs
out
pop
mov
repnz
sub
cmpsl
pop
out
mov
out
fsub
fs
mov
mov
cli
int
jg
js
outsl
cmp
fwait
aaa
outsl
push
jp
xlat
xor
sub
cmpsl
xchg
or
jns
out
orl
sub
push
inc
dec
bound
outsl
faddl
xchg
lods
mov
fwait
aaa
outsl
adc
push
or
sub
repz
aam
xchg
lods
mov
push
push
or
fwait
aaa
outsl
fidivrs
jno
sub
mov
lret
pop
es
aam
jb
ficoml
jge
repz
cwtl
mov
loope
pop
or
mov
jg
jge
js
outsl
mov
icebp
shl
and
or
std
out
fwait
aaa
leave
and
rcrl
inc
pop
fidivrs
ss
pop
lods
testl
cmpsl
aaa
cmpsb
aad
lret
call
cld
stc
pop
divb
gs
jb
into
mov
lahf
push
or
and
xor
fldenv
call
repz
pop
xchg
int3
movsb
lahf
xlat
pop
and
in
fildl
imul
insb
add
mov
inc
jle
cld
je
mov
push
and
in
sbb
mov
dec
sub
sahf
fbld
fidivrl
mov
mov
test
iret
lahf
or
outsl
jae
pop
push
cld
or
outsb
cld
stc
repz
xor
xchg
mov
cmp
lahf
aas
jg
inc
push
mov
stc
mov
cld
stc
repz
push
jl
icebp
roll
stos
mov
lahf
aas
jg
roll
test
mov
out
daa
jns
sub
xchg
ja
inc
push
mov
push
fmulp
dec
and
xlat
pop
fcompl
mov
cs
jne
fs
cld
jmp
sub
cmp
iret
lahf
aas
jg
push
cmp
xchg
mov
xchg
pop
xor
mul
push
insb
imul
insb
sub
inc
pusha
das
mov
push
mov
cmp
loopne
mov
fcomp
mov
sti
mov
fildll
test
cs
inc
sub
push
inc
fmulp
out
sahf
test
lahf
add
xor
enter
mov
mov
int
mov
icebp
cwtl
mov
mov
stos
decl
sbb
inc
pop
push
lods
int
fwait
aaa
outsl
fsubp
inc
adc
mov
mov
jb
enter
stc
repz
enter
scas
fisttps
mov
scas
xor
mov
cld
or
mov
movsl
lcall
out
lahf
lcall
ss
cs
mov
fs
fwait
aaa
addr16
or
scas
sbb
dec
cmp
icebp
xchg
ja
hlt
adc
addr16
outsl
fidivrs
xchg
add
int3
lahf
imul
adc
out
aad
cmp
xchg
jecxz
xchg
push
repz
bnd
mov
aas
jg
lock
push
mov
mov
cmp
pop
jns
push
repz
lahf
lock
scas
xchg
pop
iret
mov
push
push
cmp
jbe
daa
xor
push
pop
outsl
fidivrs
clc
mov
sbb
mov
fwait
aaa
mov
pop
mov
dec
pop
faddl
es
dec
loope
pop
add
cmpsl
repnz
pop
xorb
fists
xchg
add
lcall
stos
mov
jns
xchg
fiaddl
iret
lahf
pop
loopne
pusha
or
aaa
sahf
shll
inc
mov
push
repz
sbb
xchg
enter
inc
xor
pop
jb
out
adc
mov
repnz
pop
stos
test
sub
insl
aaa
inc
sbb
outsl
jae
aas
ficompl
repz
add
push
cmp
sarl
push
inc
movaps
sub
fwait
aaa
outsl
fiadds
mov
ret
push
lahf
stc
notl
push
xchg
push
movsb
and
add
sub
xchg
cwtl
pop
loope
out
add
test
iret
lahf
aas
mov
loope
pop
mov
movsb
int3
cld
stc
repz
dec
sub
in
imul
mov
out
mov
test
jle
jg
aas
sbb
push
mov
fcmovne
scas
add
enter
mov
test
outsl
mov
cmpsb
and
push
les
leave
jmp
scas
push
pop
fnstcw
adc
out
fwait
ja
dec
pop
movsb
addr16
cmc
pcmpgtw
aas
cli
enter
movsb
mov
cmc
out
mov
in
push
mov
xchg
sbb
out
lahf
aas
jnp
jg
roll
xchg
cld
stc
repz
shll
fucom
stos
nop
cmc
negb
fwait
leave
lahf
aas
jg
hlt
sahf
imul
or
hlt
add
add
cld
jmp
inc
mov
mov
arpl
cs
aad
inc
inc
call
cld
stc
xlat
dec
add
inc
sbb
stos
mov
aas
jg
pop
mov
push
iret
xchg
or
ja
repz
je
pop
pop
fldl
fwait
xor
adc
test
repz
fbld
mov
adc
jle
out
push
sahf
fdivrl
popf
clc
xor
pop
scas
out
loop
mov
xor
dec
mov
inc
adc
sub
jmp
mov
push
inc
aas
imul
push
idivl
cld
stc
imul
lcall
sub
mov
repnz
pop
bound
bound
push
rcr
fcom
enter
aad
xchg
das
mov
pushf
xchg
lret
iret
nop
push
pop
mov
and
jns
fsubrs
bound
mov
aaa
outsl
and
mov
mov
and
mov
int
add
and
jecxz
cltd
push
or
mov
insb
mov
mov
outsl
ficoms
pop
mov
xor
mov
int
mov
cmp
icebp
mov
aas
cmp
adc
dec
mov
mov
sahf
inc
iret
mov
loopne
pop
loop
lahf
xchg
cmpsl
cld
stc
repz
push
xchg
dec
inc
dec
mov
lcall
push
pop
pop
imul
lret
enter
add
mov
outsl
fidivrs
cmp
mov
mov
out
roll
add
enter
testl
adc
jns
cmpsb
clc
sbb
dec
push
scas
lods
xor
sub
rcr
aas
imul
notl
addr16
test
aaa
outsl
fiadds
fcomps
js
stos
out
add
int
fwait
das
jg
lahf
cli
std
cli
jl
test
fcmovnu
mov
or
test
mov
or
imul
mov
lret
test
jns
out
ss
fisubrl
pop
rcl
add
jge
stos
sbbb
or
jl
repz
xorb
repz
insb
fiadds
cli
and
push
std
imul
stc
repz
call
int
in
insb
aad
cwtl
sti
aas
jg
cld
xchg
jmp
pop
out
cwtl
rcrl
out
lahf
or
or
int3
jg
cld
stc
cmc
inc
cwtl
mov
std
sub
mov
out
lahf
aas
iret
rcl
lcall
outsl
cld
stc
repz
outsb
adc
clc
sbb
sbb
lahf
aas
jg
or
mov
sub
xor
aad
movsb
pop
xor
repz
repz
imul
lahf
jg
xor
ja
jnp
jnp
ret
in
cld
stc
repz
inc
cld
hlt
xlat
add
add
jg
into
jecxz
outsl
dec
lods
fidivrl
test
push
jecxz
push
pop
lret
xchg
sub
aas
jmp
inc
cmpsl
pop
enter
out
pop
sbb
cwtl
or
xchg
mov
sub
std
cltd
mov
pop
or
nop
repz
lds
and
jg
xor
rclb
vpaddd
out
lahf
jg
xchg
jno
push
jb
scas
sarl
dec
push
repz
fmull
aad
out
fwait
ja
insl
lods
iret
xchg
mov
mov
sub
inc
lock
jmp
sub
sbb
fwait
aaa
outsl
push
push
fs
xchg
cltd
dec
popa
sub
ljmp
sub
ljmp
mov
ss
out
fwait
aaa
jg
bound
mov
fidivrs
ret
into
sub
dec
mov
fstl
and
out
mov
rcll
int
loop
and
popa
fdivr
cwtl
mov
mov
fincstp
mov
int3
mov
loope
xchg
or
lods
xchg
adc
inc
data16
in
fbstp
sub
in
int
aaa
outsl
lcall
test
lock
xchg
fistpll
inc
jp
inc
testb
jle
inc
cli
jb
mov
imul
dec
and
fnstenv
mov
ja
imul
out
pusha
js
cli
icebp
insl
mov
mov
inc
or
arpl
push
xchg
mov
sbb
stc
repz
xlat
or
cmpsl
popf
aad
loop
push
cld
stc
xlat
sub
cltd
iret
xchg
push
fistpl
aad
pop
movsb
lret
adc
jno
stc
repz
stos
sti
sarb
iret
lret
cmpsb
popf
lock
push
ret
cwtl
sbb
sub
push
mov
repz
lahf
repnz
mov
adc
fcomps
push
stc
ret
dec
mov
into
mov
mov
push
enter
mov
sbb
add
mov
and
or
ds
inc
mov
int
lahf
aas
dec
pop
pop
push
mov
and
cmp
data16
jno
enter
pushf
mov
in
iret
lahf
clc
mov
mov
in
shrl
pop
or
filds
xlat
in
add
inc
mov
mov
jo
jb
jle
aam
in
std
mov
mov
fwait
aaa
outsl
mov
inc
mov
xor
stos
cmc
cmc
in
int
pop
push
or
cmc
jno
push
mov
pop
mull
frstor
adc
sarb
pop
out
mov
add
imul
and
xor
mov
rcl
fidivrs
sub
ret
inc
lods
pop
xor
xor
inc
aas
mov
mov
mov
int
aaa
push
jmp
es
stc
xchg
xchg
inc
sub
mov
mov
nopl
das
or
mov
arpl
js
js
sbb
int
in
sbb
push
jae
pop
and
lock
mov
jg
repz
loopne
mov
jns
and
int3
div
push
int
aaa
outsl
cmp
xchg
xlat
jno
jno
icebp
fwait
repz
jge
lahf
cwtl
insl
cltd
inc
xchg
mov
test
push
mov
std
or
lahf
aas
jg
shlb
cmpsl
mul
es
das
stc
repz
sub
inc
adc
jne
repz
pop
call
jle
jecxz
jecxz
mov
pop
push
test
iret
dec
and
js
out
aas
outsl
scas
xor
lods
mov
packuswb
cld
stc
psrld
jnp
fdivrp
icebp
jmp
jmp
inc
mov
and
jns
mov
xchg
xchg
lahf
jns
xchg
push
je
push
inc
fidivrs
inc
xchg
cli
std
nop
shlb
aad
lcall
daa
and
rcll
mov
das
les
popf
pop
out
pop
mov
lds
dec
adc
out
cld
sub
jno
jl
es
inc
xor
xchg
cmpsb
call
dec
mov
xor
xchg
adc
dec
aam
jne
es
pop
repnz
stc
repz
adc
mov
add
lods
pop
ss
add
out
inc
fidivs
cmp
mov
lea
popa
xchg
mov
sbb
xor
fs
iret
aad
fcomp
jg
cld
stc
or
mov
push
cmp
jbe
pop
add
push
or
aas
stc
adc
outsl
and
mov
mov
out
int
mov
jg
ljmp
cwtl
outsl
fidivrs
inc
jmp
dec
mov
ret
adc
mov
adc
fists
jl
scas
add
fwait
aaa
outsl
ficoms
inc
scas
sub
sub
mov
int
add
jnp
popf
sahf
mov
outsl
fidivrs
loope
fnstenv
vcvtpd2dq
fwait
xchg
icebp
xor
loope
jno
sbb
outsb
fidivrs
movsb
pop
shll
in
iret
lahf
jg
dec
mov
or
stc
stc
repz
fdivs
aad
add
test
leave
push
xlat
outsl
and
stc
daa
pop
outsl
push
pop
or
cmpsb
or
or
inc
mov
lret
push
push
insl
or
iret
xor
aaa
fdivl
ret
aaa
out
test
xlat
xchg
into
gs
cmp
iret
fnstcw
out
xchg
push
inc
xchg
pushw
push
pop
dec
mov
and
xchg
or
adcb
imul
add
adc
add
pop
imulb
xchg
incl
and
ja
push
test
outsb
sub
xchg
inc
ss
mov
pop
jmp
pop
xchg
daa
sbb
sbb
xchg
aas
jg
cld
xor
sub
jle
jno
mov
cmp
out
lahf
jl
ret
leave
mov
and
sub
mov
mov
pop
imulb
ret
fwait
aaa
outsl
xchg
test
xchg
jge
cltd
xchg
sbb
repz
push
fildl
into
cmpsb
arpl
int
ja
mov
sti
cld
pop
mov
jg
xor
cld
xchg
rorb
out
leave
lret
mov
pop
or
jne
fadds
les
jns
cmovo
imul
inc
outsl
ss
mov
addr16
movsb
pop
addr16
fidivrs
mov
fcomp
xchg
cld
lret
int
aaa
outsl
jl
lock
xchg
lds
out
add
mov
dec
mov
je
roll
outsl
fiadds
leave
xchg
cli
movsb
into
and
cld
stc
xlat
mov
out
inc
out
dec
xchg
xchg
push
dec
and
call
jg
cs
mov
or
sbb
mov
adc
cwtl
out
inc
lret
pop
mov
lods
mov
enter
mov
fs
test
push
das
push
unpckhps
push
push
inc
test
scas
push
cmpsl
pop
mov
in
dec
pop
pop
push
mov
push
xchg
mov
pop
pop
jno
push
push
notl
mov
pop
pop
adc
cmp
adc
push
push
push
les
lahf
mov
repz
movb
and
push
xlat
push
out
lods
mov
mov
push
push
aam
dec
pop
push
ja
mov
push
aas
push
mov
mov
xchg
rorl
push
mov
and
push
mov
add
push
call
sbb
push
lods
mov
push
xchg
push
lahf
sub
mov
push
bound
jg
dec
inc
sub
push
and
push
daa
lahf
cmc
push
inc
sub
mov
ja
pop
fcoml
and
sub
mov
lds
adc
push
and
push
out
pop
call
mov
push
bound
add
push
iret
mov
jg
dec
adc
push
push
mov
fisttpl
out
pop
outsl
lods
cmp
lods
push
iret
push
push
or
inc
dec
mov
inc
push
test
push
pop
adc
inc
mov
imul
push
pop
push
lahf
adc
sbb
in
dec
pop
xor
leave
or
mov
add
push
fists
pop
adc
push
push
push
lret
pusha
mov
adc
sub
pop
push
scas
xor
or
loope
xlat
mov
push
and
push
push
push
aaa
inc
sub
mov
pop
push
and
lods
cmp
and
mov
mov
push
adc
lods
adcl
push
inc
push
lahf
lds
pop
adc
push
adc
imul
pop
mov
sbbl
push
push
push
fildll
push
inc
sub
push
pop
lods
mov
push
sub
rorb
mov
inc
fists
lods
mov
mov
push
and
mov
pop
push
out
sub
mov
call
fcoml
push
scas
or
inc
sub
inc
aas
push
adc
jmp
push
scas
mov
mov
push
dec
or
push
ja
mov
push
inc
lods
mov
iret
bound
pop
push
pop
lods
js
sub
push
or
lods
mov
mov
push
adc
push
lods
mov
push
push
mov
adc
push
adc
orb
push
cmpsl
push
lods
sbb
sub
loop
push
mov
dec
lods
js
scas
push
decl
aam
push
push
add
jge
ljmp
push
idivl
sub
pop
pop
inc
push
push
daa
stos
xchg
jns
out
cmp
rolb
dec
inc
dec
add
push
xor
fdivrl
fucomip
enter
or
push
out
fwait
aaa
clc
or
es
jb
cmpb
mov
lock
mov
cld
sti
addb
or
jg
or
adc
bndstx
jb
mov
pop
dec
les
adc
jb
out
lea
mov
jbe
xlat
mov
outsl
ficoms
mov
mov
scas
xchg
adc
add
jne
int
xor
lods
leave
ss
xchg
sub
lahf
jg
lahf
cmp
cmpsb
nop
std
push
inc
xchg
xchg
aaa
outsl
fiadds
mov
scas
pop
scas
mov
call
movsl
xchg
xchg
jne
ljmp
pop
rolb
fdivrl
adc
data16
or
ja
mov
ljmp
jo
and
fwait
aaa
outsl
fiadds
es
sbbl
cmp
jne
adc
in
test
fidivrs
xor
mov
test
gs
ljmp
push
xorb
daa
fbstp
iret
lahf
aas
push
push
push
lret
decl
push
cli
or
jg
stc
repz
int3
ret
lret
xchg
les
or
fdivp
out
lahf
inc
sub
pusha
aas
and
cld
stc
int
fwait
fwait
xchg
arpl
mov
xchg
insl
cwtl
cmc
mov
pop
mov
bound
xchg
cmpsl
lods
push
adc
dec
and
mov
push
mov
stc
jae
sub
fs
jg
sub
std
cli
pop
push
inc
push
out
enter
ss
jnp
add
or
iret
aas
xchg
test
imul
sub
cld
stc
repz
or
cmp
out
sbb
int
dec
mov
mov
popf
mov
imul
repnz
lahf
sarb
mov
xor
ficomps
scas
pusha
sub
xchg
mov
fidivrs
mov
das
xor
sahf
adc
mov
inc
add
sbb
sbb
out
cld
stc
repz
xor
pop
jb
add
cmp
cmc
xor
jg
int3
mov
aaa
imul
or
dec
adc
out
imul
mov
cld
pop
ret
cmp
and
mov
lret
repz
lahf
sbb
cltd
push
dec
dec
out
inc
jns
mov
mov
cld
stc
sub
ljmp
cld
imul
sbb
xorl
in
and
negb
or
in
mov
pop
sahf
and
iret
sarl
ss
stc
repz
inc
mov
adc
adc
aas
jg
cld
sbbb
and
fs
cmpsl
out
mov
pop
insb
jbe
rol
cmp
cs
jg
cld
stc
les
leave
movsb
hlt
loop
sahf
movsb
mov
mov
add
push
je
mov
repnz
and
jle
jns
out
adc
mov
adc
push
pop
or
fdivrl
fnstcw
mov
push
mov
push
xor
inc
sub
jb
fisubs
xchg
inc
xor
in
sbb
adc
pop
scas
jle
das
ds
dec
mov
inc
xchg
ror
es
jle
mov
out
iret
out
push
add
mov
fsubs
scas
dec
jecxz
dec
mov
mov
xchg
ficoms
subb
pop
int
aaa
outsl
lods
mov
leave
repnz
out
jns
jns
out
or
push
cmp
popa
push
pop
pop
pop
dec
fwait
aaa
outsl
ficoms
enter
jge
mov
out
je
xchg
cmp
scas
jmp
icebp
cld
or
rorl
sub
aaa
outsl
fisubrs
adc
cmp
roll
mov
jb
out
pushf
cmpsl
mov
mov
pop
test
mov
jl
out
mov
ja
in
sbb
mov
repz
pushf
sarl
sub
stc
xchg
cmp
in
in
movsb
fs
mov
test
push
fwait
aaa
inc
jge
iret
cmpsl
cld
out
push
xchg
out
add
xor
sbb
dec
cmpsl
out
jmp
das
sbb
jns
out
fld
aas
jb
mov
cmp
mov
jle
lret
mov
aad
aas
cmp
lea
loope
fwait
aaa
jnp
shr
xchg
add
jg
cld
mov
mov
mov
mov
mov
adc
and
insl
xchg
int3
cmp
jle
cld
stc
aaa
push
or
mov
push
adc
mov
inc
push
pop
imull
mov
pop
push
test
das
orb
inc
out
fwait
aaa
push
mov
iret
in
ljmp
inc
sub
xor
jns
out
xchg
adc
jp
jp
clc
addr16
loop
dec
fwait
aaa
outsl
fisubs
popa
outsl
sbb
inc
push
adc
popa
push
daa
int
jo
pop
xchg
aaa
outsl
add
push
jae
inc
pop
adc
out
fwait
arpl
jne
push
mov
cmp
fidivrs
or
xor
outsb
and
in
push
push
xchg
xchg
jp
outsb
ficoms
hlt
or
mov
push
incl
iret
mov
out
sti
xchg
xchg
arpl
xlat
pop
shl
repz
int
pop
stos
ja
and
push
or
push
aas
lahf
jg
push
push
push
out
stos
inc
stos
mov
mov
pop
cld
imul
popa
enter
fisubrs
adc
mov
stc
repz
sahf
sti
push
sbb
fmul
addb
and
cld
insb
xor
lds
pop
out
out
push
sub
sub
and
fiadds
xchg
jae
and
ljmp
outsl
push
jnp
pop
dec
xchg
or
jg
mov
aaa
cltd
xor
cmpsb
dec
dec
sub
jb
jns
sub
aaa
jp
mov
ljmp
mov
jge
adc
pop
inc
inc
mov
iret
fwait
das
xlat
mov
lret
mov
adc
in
adc
ret
mov
jo
sub
push
shlb
mov
outsl
lcall
repz
hlt
scas
loop
fs
out
cld
cld
stc
or
and
lret
cltd
sahf
into
into
mov
movb
clc
fwait
aaa
outsl
fimuls
cmp
lahf
mov
mov
aam
push
jns
out
imul
inc
out
addl
mov
jl
adcl
push
xchg
and
add
mov
xor
inc
aam
cmc
sbb
xor
mov
sub
add
add
lret
pop
mov
mov
adc
insl
mov
sub
push
sub
add
ret
aam
push
lcall
divb
adc
dec
jg
enter
adc
sub
mov
sub
scas
stos
out
and
rcl
sbb
inc
inc
les
loopne
and
roll
and
dec
push
inc
xlat
and
mov
push
xchg
pop
inc
aam
add
add
out
push
pop
sbb
rorl
add
adc
insb
test
andb
and
stos
loopne
nop
push
adc
mov
orl
jae
push
inc
add
mov
and
or
scas
subb
pop
sbb
inc
imul
leave
mov
lret
or
lock
cmc
cmp
add
push
aam
fcmovbe
sbb
icebp
jnp
ljmp
adc
jg
test
jecxz
fcmovne
inc
gs
pop
lock
or
mov
mov
orb
sbb
mov
or
jb
inc
aad
adc
aaa
and
adc
mov
push
adc
and
repz
jno
test
push
push
jl
fs
imul
das
lcall
push
add
xor
orb
inc
add
fwait
or
lock
mov
push
ret
mov
incl
test
fwait
out
push
mov
xchg
lock
adc
test
xor
decb
or
rcll
pop
mov
adc
and
fmul
pop
add
mov
bswap
mov
repnz
jae
pop
enter
cmp
into
mov
xor
jle
es
xchg
stos
or
add
adc
rcll
xchg
push
cs
or
cmp
testb
inc
xchg
std
cltd
mov
adc
sbb
mov
ret
mov
add
into
stc
push
jno
orb
mov
or
pop
mov
rclb
mov
jno
inc
std
push
repz
arpl
push
lock
mov
xchg
sub
rol
add
lret
sbb
enter
imul
pop
add
mov
or
inc
out
jo
inc
xchg
or
dec
sbb
enter
push
lds
loope
or
imulb
fimull
addr16
push
cmpl
popf
add
add
rol
inc
pop
mov
or
and
adc
cli
or
pop
push
lods
push
aam
jnp
outsl
ljmp
nop
mov
ljmp
mov
rolb
fcomi
call
pop
cmp
or
lcall
push
cmp
mov
adc
mov
aad
ds
test
mov
inc
inc
cld
icebp
icebp
push
adc
fists
xchg
or
dec
adc
loope
pop
xorl
out
mov
fcomps
negl
fidivrs
add
mov
js
push
jb,pt
outsl
rcr
or
mov
mov
add
leave
pop
in
data16
add
adc
jg
push
sub
cmpsl
stos
mov
imul
and
adc
push
inc
cmp
push
mov
xchg
mov
push
aaa
das
icebp
xchg
add
out
add
dec
inc
push
push
fwait
add
data16
xchg
sub
or
add
sahf
aad
jae
and
adc
add
stos
stos
rorb
arpl
pusha
das
mov
push
push
inc
inc
add
ret
insl
push
push
btr
push
enter
adc
ja
push
imul
call
loope
lret
jbe
mov
add
sbb
adc
or
add
loop
subl
testb
add
add
mov
andb
sub
push
adc
test
mov
sub
rclb
mov
ret
inc
aam
adc
je
cmp
inc
lods
xchg
ffree
push
add
xor
out
idiv
adc
push
movsb
add
add
sub
mov
fwait
push
shl
xchg
roll
sbb
fsubr
divb
add
test
add
xor
mov
adc
call
cmpsb
fcmovnbe
push
and
add
mov
loope
mov
outsb
add
daa
lea
loopne
push
and
jno
mov
daa
pop
xchg
test
test
add
and
enter
mov
into
sbb
in
movsb
aam
jae
test
jnp
push
jo
adcb
movd
pop
cmpsl
push
jmp
mov
ret
or
ss
and
int3
rsm
pop
inc
insl
pop
push
sbb
aaa
adc
out
rorb
hlt
out
pop
add
nop
ret
or
add
les
pop
cmp
push
gs
ret
les
sbb
andb
inc
adc
roll
xchg
mov
jb
cld
mov
adc
outsb
sahf
xchg
int
leave
jno
mov
push
ret
call
movlps
inc
rolb
outsl
rolb
repnz
rorb
dec
adc
test
adc
mov
mov
adc
rcrb
scas
pop
push
sbb
add
andb
xchg
cwtl
add
out
push
mov
fbstp
out
bt
mov
jbe
in
add
leave
adc
mov
mov
sub
pop
add
pop
insb
or
mov
push
and
and
into
dec
add
xchg
or
sub
mov
lret
and
adc
sub
mov
push
pavgw
jg
dec
cmc
cmpsb
push
fistl
mulb
aam
sbb
loope
jle
xor
enter
bswap
push
push
fdivs
xor
outsb
insb
sbb
add
push
lret
mov
cmp
cmp
adc
dec
out
loop
mov
rorl
aam
lcall
adc
cltd
mov
or
out
mov
push
test
aad
pop
and
imul
or
mov
pop
pop
mov
dec
sub
push
shlb
gs
xor
xor
idivb
in
jecxz
or
push
psubsb
or
mov
mov
test
add
xchg
lock
shrl
mov
and
repz
add
push
fwait
cmp
arpl
in
aas
lret
daa
insb
pop
or
xchg
pop
mov
push
push
jmp
push
orb
adc
daa
outsb
mov
bsr
inc
inc
lods
cmp
lock
mov
xchg
mov
pop
sub
sbb
or
sub
rcrb
add
enter
popf
jmp
or
add
aad
ljmp
das
rorw
xchg
mov
fidivl
adc
in
lods
mov
xorb
inc
push
mov
rcll
pushf
mov
pop
lret
addr16
pop
inc
add
mov
std
pop
sbb
and
sbb
rolb
and
mov
xlat
push
jno
stos
rorb
icebp
mov
sub
push
rcll
add
mov
mov
ret
sbb
aas
rcrb
enter
sar
iret
sub
cmp
or
pusha
mov
cmp
aad
rcll
data16
adc
pop
or
mov
scas
ror
imul
aas
aam
test
insb
inc
mov
addb
or
testb
sub
xor
jo
xor
sbb
add
jae
add
out
add
push
mov
lock
inc
pusha
mov
loope
xchg
push
inc
inc
mov
pusha
imul
leave
shlb
add
clc
addr16
pop
xorb
adc
mov
sub
pop
xor
mov
and
add
and
xstore-rng
cmpsl
inc
cmp
jbe
pop
jbe
mov
jb
lods
adc
push
xchg
test
mov
xorl
imul
in
adc
push
idiv
enter
or
subb
add
inc
rcr
adc
xor
scas
ds
jp
pop
cmpsb
pop
cmp
sbb
inc
jle
andb
call
sbb
js
dec
mov
xchg
bound
add
test
sub
jb
cld
mov
loopne
inc
rcrb
clc
les
adc
adcb
out
roll
mov
pop
pop
jge
mov
or
rcl
rolb
sbb
rcl
test
jb
push
je
aam
js
lahf
rcrl
mov
push
xlat
into
sub
push
push
jae
icebp
add
or
sbb
lret
cmp
pop
jae
push
inc
clc
mov
adc
lods
popa
and
inc
test
mov
xor
sbb
cltd
add
inc
es
pop
sub
jne
shlb
push
adc
rorb
pop
or
sbb
or
jb
cmp
or
ret
test
and
addr16
and
mov
lds
push
mov
mov
lock
pop
add
orb
insl
xor
mov
pop
out
call
push
mov
inc
leave
xchg
fs
add
and
or
jb
xor
jmp
jne
push
mov
mov
or
xor
push
and
test
ret
adc
sbb
sbb
push
xor
rolb
push
ret
xor
pop
push
test
add
cmp
xchg
mov
add
mov
jle
pop
sbb
int3
adc
insb
mov
mov
or
pop
inc
stos
adc
popf
mov
je
push
lods
or
adc
popf
jo
notb
push
add
jmp
flds
mov
in
jp
rorb
and
sub
das
mov
rorb
push
mov
adc
mov
pop
sbbl
nop
sbb
push
popa
or
fwait
in
cmp
mov
fiaddl
xchg
out
xor
and
test
adc
mov
add
inc
stos
enter
pop
dec
das
pop
or
into
add
mov
call
je
shrl
xchg
pop
test
pop
mov
adc
lds
dec
or
loope
inc
lret
add
sbb
loope
adc
cs
arpl
es
adc
mov
inc
jle
inc
xchg
sbb
ljmp
leave
sbb
inc
stos
sbbl
jne
outsl
dec
addr16
cmp
inc
mov
xor
inc
push
jae
push
xchg
enter
mov
test
cmp
or
or
cmp
xor
repnz
add
pushf
rcl
orl
subl
xor
repz
jne
ljmp
mov
fcomp
loopne
jne
dec
in
or
sbb
loope
cld
jno
in
jne
add
xchg
sub
xor
cmovg
out
mov
push
sub
mov
stos
ljmp
add
mov
adc
adc
xor
xchg
and
or
jecxz
adc
mov
ss
xchg
mov
xchg
add
cs
or
or
dec
pop
fiaddl
sbb
jb
jne
mov
adc
push
mov
dec
push
sub
or
flds
mov
or
adc
out
clc
or
adc
or
inc
aad
xlat
sahf
push
cli
xor
cmp
mov
ljmp
sbb
adc
dec
dec
popf
push
mov
xor
inc
loope
subb
mov
pop
daa
inc
lds
xchg
test
stos
or
dec
mov
or
fmull
fs
rcl
mov
or
or
pop
rolb
or
adc
push
dec
push
xchg
mov
rorl
insb
cltd
cmp
inc
pop
add
add
or
das
lods
sbb
shlb
inc
inc
mov
sbb
mov
stc
pop
or
aam
je
hlt
sbb
add
pop
mov
pop
sbb
pop
and
rorb
jmp
or
icebp
add
pop
cmp
push
or
mov
pop
push
shrl
lds
imul
das
int3
add
scas
and
jg
adc
inc
insb
rolb
push
popf
cmp
adc
testb
inc
stos
cmp
mov
push
adc
nop
push
popf
sub
in
iret
orb
mov
add
push
inc
mov
xchg
stc
sub
gs
sahf
subb
jmp
adc
jno
rorl
and
ret
pop
push
mov
in
dec
push
inc
mov
add
jnp
jbe
xchg
arpl
add
inc
mov
lcall
aam
out
lock
inc
cmp
sbb
jl
repnz
dec
sub
cmp
or
jmp
aas
lds
sbb
adc
dec
mov
mov
add
call
pop
jg
movsl
mov
or
ror
or
ret
push
mov
xorl
add
fsubl
jno
repnz
or
and
adc
or
lds
cmpl
sbb
mov
or
pop
sbb
sbb
cmp
call
jno
push
or
mov
xchg
dec
inc
jp
and
fmuls
bound
or
mov
mov
adc
add
mov
xchg
mov
mov
xor
rolb
dec
popf
push
popw
sbb
and
in
dec
daa
mov
and
dec
xor
leave
mov
mov
sbb
cmp
mov
sub
addb
adc
adc
ret
mov
int3
and
pop
inc
cmp
les
push
xor
loope
rorb
mov
movl
mov
andl
or
sub
or
xor
fsubl
adc
xor
leave
or
mov
add
inc
dec
out
jo
mov
jle
inc
rcrb
pop
stos
sti
icebp
inc
and
pop
stos
loopne
sbb
dec
jb
mov
loope
pop
inc
xchg
inc
pop
inc
or
into
pop
lret
loop
xlat
xchg
or
adc
orl
adc
nop
or
xchg
sbb
sarl
dec
mov
mov
push
pop
das
ret
mov
mov
jmp
add
insb
sub
xlat
push
das
or
aaa
out
jmp
stos
aaa
in
std
pop
push
xor
ss
nop
jmp
inc
aas
xchg
lds
bound
inc
jle
mov
mov
or
rclb
bound
cmp
cmp
lock
shlb
push
scas
xchg
test
icebp
cwtl
loopne
mov
mov
cmp
cmp
push
mov
shll
push
lea
mov
xchg
and
insb
mov
adc
pop
xor
shrb
test
adc
cmp
insl
repnz
add
cmp
inc
sbb
adc
jne
cmp
sahf
add
aas
sar
into
adc
jae
inc
inc
mov
and
adc
inc
mov
fsts
popa
imul
test
rorl
test
fistl
dec
mov
push
inc
fs
inc
adc
add
and
aad
movsl
sub
xor
xchg
outsb
stos
cs
pop
sub
or
aam
dec
xor
stos
or
mov
outsl
dec
cmpsb
pop
jne
or
pop
stos
push
es
int3
mov
popf
out
adc
push
loop
insb
jne
negl
push
or
push
push
mov
shlb
or
enter
inc
pop
mov
cmpsb
adc
adc
mov
mov
call
test
cltd
lahf
xlat
lcall
sub
sahf
aaa
jo
rorb
addl
lods
pop
push
das
xchg
rolb
mov
sbb
push
cltd
push
test
mov
push
rcrb
add
cwtl
out
or
add
inc
mov
stos
mov
inc
sub
add
hlt
stos
sub
mov
outsb
or
and
sti
mov
scas
cmp
sti
rclb
loope
push
sbbb
or
push
js
or
icebp
rcrb
or
rolb
sub
into
push
push
sub
dec
add
push
pop
stos
cmp
or
int
adc
push
fs
rolb
test
stos
adc
cmpsl
rolb
inc
add
mov
sarb
sbb
inc
lret
bound
and
dec
cli
ds
push
jge
popf
add
push
imul
ss
inc
test
outsl
testb
ret
cmp
or
not
mov
mov
stos
outsb
push
jmp
sbb
push
sub
jl
or
fmul
adc
roll
and
add
cmp
dec
push
mov
rep
mov
sbb
sbb
xchg
add
les
mov
hlt
adc
push
xor
lret
sbb
and
or
lds
or
loopne
inc
mov
xchg
push
mov
push
mov
fsubl
test
push
add
mov
adc
or
dec
popa
stos
imul
pop
shlb
cli
mov
mov
and
mov
push
popa
jb
sub
push
push
sbb
jbe
mov
cli
loopne
jge
je
nop
mov
leave
shrl
mov
and
daa
push
stos
leave
popa
jo
cmp
xchg
add
sub
sub
lret
shl
add
lock
lods
add
sub
push
sub
push
negb
pop
push
pop
call
inc
std
push
aaa
punpckhdq
lret
pop
inc
fstpl
rol
or
pop
mov
jo
jmp
mov
cmp
or
jg
jb
shr
popf
stc
add
push
loope
or
les
loop
dec
adc
adc
and
xor
or
push
add
or
add
aas
xchg
push
push
dec
add
and
mov
pop
pop
inc
arpl
cmpsb
push
inc
orb
push
cmpsb
add
call
test
loop
test
jmp
sub
jg
sbb
dec
mov
daa
shll
icebp
or
push
pop
pop
mov
adc
call
sub
push
push
xor
mov
pop
repz
stos
adc
xchg
mov
sbb
add
sub
cmp
xchg
in
jp
sub
or
out
lods
push
inc
or
andb
inc
jae
jp
orb
jmp
or
andl
mov
fists
mov
sub
pop
and
mov
mov
sub
lret
push
out
or
call
subb
loopne
out
sub
push
add
adc
jl
popa
shll
enter
les
dec
dec
push
mov
cwtl
and
or
into
test
add
imul
mov
cmp
add
inc
in
sub
dec
dec
dec
lock
movb
cmp
nop
sub
adc
inc
pop
fnstsw
lret
fmull
inc
cltd
adc
les
or
push
fisttpl
adc
add
push
fisttpll
aam
daa
sbbb
lock
mov
sbb
outsl
lods
add
adc
xor
mov
bound
in
js
adc
dec
adc
push
adc
stos
or
adc
fcmovnu
adc
xor
stos
dec
das
mov
adc
push
inc
and
xchg
arpl
pusha
fwait
add
lock
dec
into
adcb
clc
sbb
or
add
lret
xchg
js
int
mov
ljmp
adc
xchg
and
push
scas
add
sbb
andl
test
add
shll
sub
cmp
mov
inc
adc
cmp
pop
push
mov
into
xor
fadds
dec
mov
cmp
mov
ror
bound
push
push
add
repnz
sbb
xchg
loopne
and
pop
add
das
out
icebp
mov
imul
jge
and
mov
cmp
addr16
lds
sbb
cmp
lret
lahf
enter
pop
int
jne
push
adc
push
sbb
lods
jp
push
jns
sbb
dec
loopne
out
push
loope
or
ss
adc
mov
push
push
mov
pop
insl
xchg
push
je
mov
or
shll
sub
add
add
adc
movsl
movl
add
sub
subb
or
pop
pushf
sbb
jns
bound
movb
push
mov
push
and
xor
xchg
mov
scas
into
xchg
cmp
sbb
icebp
ret
outsb
movsb
add
push
pop
inc
and
js
jle
add
fsubl
and
push
bound
outsb
mov
rorl
adc
out
sbb
sub
loope
js
jb
push
jl
dec
mov
pop
lock
mov
add
adc
inc
cmp
xor
push
dec
push
xchg
ljmp
hlt
mov
mov
in
sub
mov
push
dec
adc
sub
push
cs
dec
adc
ret
add
lds
jmp
sbb
dec
sarb
xchg
add
stos
clc
movsl
testb
shll
push
jb
pop
fs
jb
mov
pop
sub
sub
xorl
mov
adc
and
push
sbb
idiv
or
sbb
sub
scas
mov
and
inc
and
sub
add
xchg
inc
mul
adc
inc
aaa
xchg
push
inc
mov
push
sub
mov
jge
mov
add
setne
pop
dec
fmulp
push
shlb
jecxz
subb
sbb
inc
add
or
subl
sbb
test
lret
cmp
and
adc
xor
sbbb
pop
push
stos
cmpsl
stos
adc
rclb
ljmp
enter
adc
xor
movsb
and
push
or
sub
push
xchg
dec
fs
adc
ja
and
movsl
lock
aam
cmp
sub
mov
inc
sbb
test
std
inc
ret
imul
push
das
cmpb
sbb
cmp
dec
roll
sbbb
pusha
dec
std
jbe
push
jecxz
es
adc
push
inc
mov
mov
inc
test
movb
add
stos
push
int
and
loope,pn
loope
sub
jmp
inc
cmp
mov
roll
inc
xor
dec
push
inc
add
clc
dec
cmp
in
shr
mov
jo
clc
lds
ret
xor
fldl
movb
add
inc
into
out
cltd
mov
sbb
mov
ljmp
into
jno
xor
pushf
jecxz
jl
jo
push
mul
and
fcmovb
cmp
jo
and
and
mov
lret
rorl
sarl
or
xor
add
and
mov
pop
xor
je
mov
sub
icebp
or
mov
or
in
sub
sbb
pusha
sub
ret
push
loopne
mov
je
xchg
in
out
adc
xchg
pusha
stos
lret
into
test
xchg
loop
pop
inc
push
and
sub
push
push
call
inc
out
jo
outsl
test
insl
ret
popa
xchg
je
add
mov
dec
mov
pop
cmc
les
bnd
andb
push
mov
int
pop
sbb
mov
push
mov
popa
push
and
scas
cmpsb
or
inc
or
mov
xlat
push
and
inc
stos
stos
subl
mov
int3
push
data16
faddl
xlat
add
adc
mov
or
je
xchg
cmpsl
cmpsb
dec
xor
mov
adc
cmp
mov
pop
sbb
mov
adc
pop
adc
and
pop
pusha
mov
pop
push
sub
imulb
subl
jo
test
sahf
sub
add
jl
rolb
les
pop
loop
adcl
adc
inc
js
mov
ret
test
push
je
adc
js
dec
dec
ljmp
test
cmp
or
mov
lcall
sbb
out
adc
mov
addl
mov
call
dec
das
mov
add
or
mov
fisttps
push
pushf
fs
adc
popa
mov
inc
sbb
push
push
push
dec
or
adc
sub
pop
jl
adc
nop
stos
sbb
add
push
mov
adc
add
cmc
inc
sub
cmp
or
stos
or
jno
fistps
mov
int3
inc
add
fisttpll
jae
mov
and
mov
pop
sub
pop
out
sbb
adcb
sub
mov
xor
or
ret
mov
xor
inc
cmpsb
shl
sbb
mov
inc
and
add
or
pop
mov
insb
out
jae
ret
out
test
mov
push
lock
movb
mov
push
sbb
clc
add
test
pop
mov
or
add
push
mov
testb
inc
bound
inc
enter
add
and
and
aaa
mov
push
das
cli
test
incb
int
add
or
lret
mov
mov
sbb
mov
and
addb
lea
mov
pop
sbb
add
adc
cmp
push
repnz
xor
mov
mov
sbb
inc
or
jl
shrl
sub
outsb
movb
adc
imul
nop
popa
and
imul
push
cmpsl
sbb
stos
icebp
add
adc
push
mov
inc
sub
pop
mov
xor
or
lahf
mov
add
or
sbb
cli
add
repnz
push
xor
add
testl
rolb
xor
cwtl
int3
add
ret
mov
into
aam
or
popa
std
sub
dec
jo
add
out
mov
mov
cmc
and
loopne
sbb
dec
aad
xlat
mov
mov
insl
mov
movsb
cwtl
pop
push
out
add
in
jo
aam
push
cmp
push
int3
mov
xchg
sbb
out
mov
shlb
inc
pop
ret
stc
xchg
ret
cltd
mov
mov
stos
add
inc
lea
push
jl
cltd
mov
inc
add
fsub
loopne
bound
subb
inc
inc
cli
aas
or
pop
push
loope
or
add
mov
xchg
andb
scas
inc
xchg
mov
inc
xor
test
pop
pop
sbbb
mov
popa
add
pop
movsl
mov
call
push
or
jae
addl
or
sub
in
pop
xchg
mov
xchg
movsl
inc
pushf
push
push
aas
or
dec
lds
push
or
xchg
jo
pop
inc
stos
loop
aad
movsl
mov
xor
rclb
sub
jg
pop
je
push
stos
pusha
add
xor
push
aam
xlat
std
adc
shrb
cmp
sub
jno
je
add
sbb
ffree
add
dec
in
push
xchg
jecxz
sub
push
jo
mov
add
daa
aad
dec
sbb
or
cmpsl
xchg
stos
sbb
xchg
jae
sbb
sbb
call
dec
rolb
push
adc
in
add
inc
pushf
or
test
or
out
ficoml
loop
mov
shl
stc
cmp
rcll
push
push
push
insb
lods
rolb
scas
inc
dec
mov
sbb
cmp
push
movsb
cpuid
cmpsb
jns
push
orb
adc
les
negb
jae
xchg
dec
mov
mov
in
and
gs
mov
rolb
repnz
inc
add
nop
imul
or
or
les
dec
sbb
add
cmovle
and
mov
or
or
xor
mov
and
in
adc
push
dec
mov
sarb
push
or
inc
call
sub
movb
mov
cmp
xchg
js
rorb
sbb
jbe
inc
aad
loop
push
cmp
into
add
loope
lock
repnz
iret
jns
fsts
mov
cmp
jb
push
cmp
or
mov
cmp
push
scas
out
out
adc
sub
fsubr
rclb
icebp
sbb
mov
repz
adc
std
cmp
ret
adc
dec
fucomp
adc
add
pcmpeqw
cltd
cmp
mov
push
push
or
sbb
andb
xor
push
xor
sbb
add
sbb
sub
adc
or
loope
adc
jo
subb
test
cmp
lock
rolb
mov
rol
and
dec
jne
hlt
push
sub
sub
push
int
jnp
pop
nop
sbb
cmp
sbb
popa
add
sbb
call
pushf
clc
arpl
ss
sbb
jne
lock
mov
sub
adc
fidivs
lds
xor
adc
add
repz
push
pushf
loopne
orb
lea
rclb
pop
pop
mov
addr16
or
add
or
add
rclb
or
push
push
test
or
xchg
test
and
jge
call
ljmp
adc
push
cmp
into
mov
ljmp
mov
mov
and
pop
jno
mov
imul
int3
add
cpuid
pop
shlb
add
mov
lret
xor
hlt
rorl
les
cmp
xor
sahf
mov
push
jne
leave
int
pop
add
inc
push
add
ljmp
xor
inc
cwtl
adc
sbb
push
xchg
in
cld
ds
or
add
mov
sub
push
adc
add
add
icebp
or
and
push
push
pop
mov
cmp
mov
cld
add
adc
adc
arpl
add
pop
pop
or
sbb
cmc
jp
mov
mov
and
inc
aam
mov
pop
mov
icebp
fstpl
push
scas
lcall
adc
mov
rclb
or
pop
in
pop
or
pop
inc
inc
pop
xchg
mov
cmp
and
adc
pop
andl
shll
mov
rep
lods
stos
mov
mov
dec
adc
and
loope
mov
sub
cmp
sub
pop
push
je
adc
jecxz
test
jmp
nop
sbb
add
pop
popf
cmp
bound
mov
adc
movsl
ret
jge
shrl
add
sbb
add
adc
adc
leave
and
push
fneni(8087
aad
ljmp
xor
inc
leave
lods
lcall
mov
scas
xor
fdivl
pop
lods
mov
int3
mov
ret
cmp
rcl
dec
stos
mov
iret
sarb
cltd
mov
push
jno
or
andb
dec
adcb
add
dec
loope
push
mov
push
sti
stos
sbb
push
push
rorl
inc
pop
cwtl
loope
sbbl
sub
inc
push
ss
push
sar
mov
cmp
dec
ret
lods
jp
sbb
test
rol
sbb
or
shlb
adc
xor
sbb
stos
push
hlt
jb
mov
out
call
lcall
lcall
or
push
into
mov
xor
push
inc
jle
pop
test
inc
ret
stc
add
ficoml
dec
adc
add
rcrl
push
push
popa
rolb
adc
mov
psllw
movsl
jo
inc
lret
mov
adc
daa
iret
lds
sarb
gs
mov
repnz
mov
dec
sub
clc
lret
je
jne
push
and
cwtl
mov
pop
cs
xchg
add
out
adc
lret
ret
ljmp
xchg
rorb
push
pop
mov
bound
and
mov
or
mov
std
mov
scas
dec
test
mov
or
push
adc
ja
jbe
adc
inc
jb
fldenv
mov
incb
ja
mov
lret
mov
jne
loop
test
xchg
adc
add
add
mov
jo
addb
push
std
pop
or
adc
and
mov
andb
mov
scas
pusha
push
cmpsb
pusha
enter
addr16
sbb
dec
stos
or
push
jne
adc
cld
push
lea
add
adc
dec
sarb
sbb
ret
rcrl
mov
out
cmp
aaa
dec
mov
adc
sub
movhps
andb
xchg
sub
jl
push
xchg
loop
xor
add
popf
sbb
inc
add
pop
bound
cltd
ss
xor
mov
mov
push
pop
xchg
push
jle
and
xchg
adc
and
sbb
or
or
ret
or
mov
xchg
xor
fnstcw
adc
enter
es
add
jmp
lock
ret
and
in
aaa
cli
jl
sub
adc
or
sysret
icebp
int3
addr16
push
pop
cwtl
inc
aam
inc
adc
subl
mov
not
adc
arpl
lock
out
or
loope
sub
dec
lcall
adc
or
jo
dec
cmc
leave
mov
daa
pop
push
jnp
shr
arpl
test
inc
movsb
dec
lret
dec
or
lds
fstpt
dec
and
sbb
jno
add
push
repz
add
xchg
push
cmp
jns
pop
and
test
adc
push
enter
dec
test
mov
scas
sbb
push
push
in
cmp
xchg
pop
mov
sbb
sahf
push
xchg
mov
cltd
scas
cmp
xlat
lds
test
addb
shlb
push
adc
push
add
lahf
lds
jo
push
mov
jp
sbbl
out
sbb
and
push
sbb
mov
add
add
dec
scas
out
sti
xchg
ds
mov
mov
mov
rcll
add
cmp
shrl
mov
lock
scas
or
xacquire
icebp
imul
adc
lods
cmp
mov
fcom
sbb
mov
cmp
adc
lret
cmpsl
mov
std
lods
push
push
or
or
cmp
push
mov
out
in
adc
lods
cmp
loop
nop
and
and
push
and
xchg
mov
xlat
aad
cmpb
xor
dec
imul
dec
inc
ret
inc
test
mov
dec
int
sbb
cmc
fbld
into
leave
adc
mov
add
andb
add
push
xlat
je
inc
or
add
push
and
sub
push
out
add
stos
mov
in
loop
out
rorl
pop
cltd
addr16
into
and
add
sub
mov
push
add
push
es
mov
add
repz
rorb
inc
mov
nop
sbbl
movsl
dec
push
push
sub
push
jnp
cltd
icebp
and
xchg
mov
add
sbbb
cmpsb
addb
sbb
stos
stos
stos
jecxz
add
scas
xchg
jmp
mov
into
or
push
js
aam
xor
test
lret
sub
inc
out
adc
add
out
mov
aam
cmp
push
scas
rcll
or
addl
test
adc
lcall
into
mov
xchg
add
xchg
mov
xor
lret
shrl
inc
test
mov
ljmp
mov
inc
xor
mov
pop
scas
jb
xorl
add
or
xchg
push
push
lcall
call
movsb
in
repnz
push
jl
adcl
lret
lcall
test
sbb
lock
jnp
arpl
cmpsb
xor
inc
or
mov
pusha
rolb
sub
shlb
mov
jae
aaa
ret
gs
outsb
cwtl
or
xchg
mov
sysenter
push
cmpsl
push
add
aam
sbb
add
push
or
aad
test
mov
pop
clc
sbb
or
arpl
inc
push
push
cmp
xor
or
inc
subb
mov
sub
or
sbb
clc
sub
add
xchg
add
into
ret
adc
xor
push
pop
lcall
push
mov
xchg
faddl
lret
sbb
addl
call
roll
out
jge
mov
xchg
mov
inc
lds
mov
xor
dec
imul
xor
or
add
loop
pop
add
mov
out
adc
test
mov
push
pop
sbb
push
cs
jl
or
enter
or
add
adc
inc
xchg
xchg
sub
sub
loop
mov
imul
ret
inc
sbb
test
cli
add
sbb
adc
les
mov
sbb
mov
aas
sarb
add
lcall
dec
pop
xchg
imul
clc
jno
push
lock
add
in
out
pop
mov
xchg
jne
jg
sub
into
pop
add
or
pop
mov
inc
dec
push
mov
adc
loopne
or
xchg
sub
imul
enter
jge
lds
add
ret
push
jo
jge
ret
adc
ret
loope
fsubrs
fsubrs
pusha
pop
and
ror
test
jmp
frstor
scas
mov
pop
dec
add
add
push
mov
jmp
rorb
push
movsl
cld
add
mov
bswap
dec
rolb
push
adc
add
rorl
inc
dec
shlb
shrl
jae
push
add
mov
adc
jo
sar
or
pop
mov
shlb
pop
mov
mov
aam
pop
pop
ret
jo
and
stos
loopne
adc
inc
mov
dec
inc
mov
add
mov
xor
pop
ret
sbb
add
sahf
enter
sbb
mov
lea
add
sub
bound
adc
lcall
into
mov
adc
xchg
lods
cmp
in
clc
addl
xor
mov
rcrb
mov
addl
mov
or
aam
sbb
push
mov
dec
adc
mov
lcall
add
cmp
imul
add
or
jg
outsl
or
sub
add
cmp
or
sub
sub
imul
add
mov
push
movl
mov
imul
jmp
sbb
rorl
rcrb
xor
mov
add
mov
and
fnsave
cmp
mov
sbb
rcrb
sub
mov
notb
push
rorb
ja
outsl
fldt
icebp
sub
push
adc
shlb
push
jbe
sti
outsl
aaa
or
leave
pusha
push
mov
mov
mov
divb
lret
roll
lret
xor
add
and
add
nopl
out
sbb
stc
sbb
mov
out
mov
xlat
fcmovne
xor
dec
sarb
mov
fnsave
adc
push
leave
movzbl
adc
sti
in
outsb
fistpll
mov
adc
add
mov
add
sbbb
je
dec
js
cli
adc
or
data16
inc
mov
push
add
scas
or
sbb
add
std
neg
jnp
sarb
mov
popa
loope
cmp
adc
mov
fimull
fs
mov
mov
sbb
lock
add
in
cld
push
add
repnz
mov
lret
cs
pop
inc
jnp
outsb
clc
adc
shrl
les
pop
jnp
out
pop
in
xor
cmp
loop
mov
mov
sbb
jae
push
push
mov
fcmovnbe
cmp
into
add
mov
js
adc
enter
fcmovnu
out
dec
std
rorb
add
out
insb
jmp
or
leave
pop
and
push
cmp
jg
imul
adc
or
or
idivb
inc
mov
cmp
mov
mov
ret
insb
loopne
fdivrl
lret
or
xlat
stc
push
sbb
lock
add
arpl
cld
in
cld
insb
inc
dec
out
pop
inc
jmp
mov
into
mov
setnp
or
xchg
enter
mulb
fstps
xlat
ficoml
imul
mov
add
push
jo
ss
add
xor
jecxz
jecxz
add
ljmp
pop
insb
or
or
inc
roll
imul
outsl
fistl
xor
ljmp
sti
jg
pop
outsl
insb
sbb
clc
mov
sub
mulb
push
adc
incb
xor
push
fdivrl
push
and
pop
and
or
add
mov
mov
pop
aam
rorl
fistpll
insl
inc
adc
cmp
xchg
pop
daa
sub
mov
fwait
mov
insl
test
sbb
sysenter
mov
test
aaa
lret
cmc
mov
jl
sub
sbb
sti
enter
fwait
push
jmp
adc
loope
or
jmp
popa
leave
add
or
jbe,pn
fildl
loopne
cmp
mov
sbb
mov
ret
sub
wrmsr
sbb
ss
push
mov
loope
out
rcrl
mov
inc
clc
cmpsb
xlat
or
xchg
clc
pop
push
push
mov
sub
ds
ret
mov
lods
add
adc
and
sbb
sub
jmp
sbb
jg
or
xchg
inc
daa
lods
imul
in
ret
int3
add
sub
xor
rcrb
sbb
pop
or
insl
in
jg
dec
push
bound
cmp
out
lea
push
add
xchg
or
rcrl
mov
add
jbe
addr16
adc
pop
shl
fsts
jecxz
and
rcrb
lds
call
pop
ja
mov
mov
mov
add
cmp
les
pop
inc
fisttpl
adc
xchg
add
shlb
or
mov
mov
sbb
adc
adc
das
push
lahf
pop
mov
add
rcrb
jmp
sbb
bound
xchg
dec
mov
push
sub
dec
xor
fadd
jbe
and
adc
sbb
pushf
or
push
sub
add
or
xor
mov
jp
mov
adc
movl
daa
sub
stos
shlb
pop
inc
shrl
jne
pop
dec
clts
xchg
mov
mulb
pop
jmp
fidivs
ret
pop
mov
xlat
add
mov
pop
out
mov
mov
push
test
push
ss
sub
dec
xchg
and
popa
sbb
or
mov
cmp
pop
mov
dec
or
fisttpl
adc
js
xchg
or
xor
fwait
inc
test
push
call
cmpsb
xchg
jb
rol
out
push
add
imul
add
icebp
push
or
add
or
int
sarb
and
int
mov
inc
out
adc
fidivl
sub
dec
call
xchg
mov
mov
movsb
add
fistpl
adc
sbb
push
pusha
jb
clc
fidivrl
push
int
mov
movsb
xchg
stos
jg
mov
movsbl
sarb
mov
xor
mov
cmp
sahf
test
or
popa
enter
jae
push
lret
or
jb
faddl
push
push
inc
mov
xor
fdivs
inc
adcl
dec
mov
clc
adc
adc
stc
xor
adc
clc
add
into
je
sbb
sti
mov
hlt
jle
into
clc
sbb
pop
pusha
or
sub
sub
lret
push
cmp
pop
loope
jb
sbb
addr16
jge
mov
cmp
pop
fldt
rol
or
cmp
scas
or
and
sbb
mov
cwtl
ficoml
push
into
in
fisttps
pop
mov
dec
ret
js
fadd
push
loop
xchg
shlb
rorb
sbb
fnstenv
mov
pushf
jo
xor
sub
cmp
gs
rorb
dec
sbb
adc
ret
jno
push
adc
mov
lret
in
xlat
adc
xor
mov
out
in
pop
je
or
adc
arpl
aam
jmp
int
lods
in
jp
ffreep
int3
mov
mov
ret
sbb
or
add
xor
and
sbb
or
fs
test
mov
test
sbb
sub
aas
in
call
adc
lret
shr
jmp
sbb
mov
and
test
adc
cwtl
fisubs
dec
or
lods
insl
ficoml
outsl
fistps
add
sbb
pop
and
sbb
sbb
xor
add
sub
fiadds
or
stc
dec
leave
push
mov
add
je
push
out
add
ret
ret
mov
ja
clc
pop
mov
add
jbe
lods
push
mov
or
cmpsb
data16
pop
orl
xor
lods
mov
push
or
jmp
mov
iret
inc
lock
add
sbbb
rorl
shll
or
inc
or
xor
dec
pop
pop
jo
cmp
adc
mov
test
jge
or
or
sbb
cmp
pop
xor
das
cmpsl
addr16
rorl
call
insl
jae
mov
rol
pusha
fcomp
mov
les
sbb
lods
imul
mov
cmp
and
in
mov
cmp
xor
sbb
notl
mov
sbb
xlat
adc
push
int
sub
push
xor
aam
dec
rcll
cmovle
xor
in
fidivrs
jns
in
mov
or
or
sub
sti
lock
pop
fsub
int
mov
inc
xor
add
xchg
or
icebp
iret
rcr
mov
test
roll
jae
or
add
jb
jno
ja
mov
mov
call
pushf
or
in
xor
sub
adc
ret
adcl
mov
scas
sbb
sbbb
call
repnz
or
cmp
or
mov
int
adc
in
call
xor
bound
mov
rorb
roll
out
pop
inc
jecxz
jo
mov
mov
adc
btc
aam
pop
jne
or
mov
or
sbb
shl
xchg
add
xchg
stc
sbb
add
xor
mov
push
out
and
out
push
int
push
or
incb
pop
call
or
shll
inc
add
or
jb
mov
or
mov
fidivrs
neg
dec
aas
gs
push
fcoms
ds
or
in
ret
inc
and
dec
fistps
hlt
inc
adc
scas
orl
dec
cmp
push
adc
add
adc
aad
mov
mov
xor
stos
cmp
or
or
mov
rcll
pushf
push
mov
cmp
pop
loope
adc
push
xor
dec
sbb
xchg
cmpsl
out
pop
sbb
xorl
iret
sbb
xchg
push
push
cmp
jne
loopne
push
hlt
sbb
pop
cmp
add
adc
ss
out
add
test
jl
xchg
add
inc
inc
mov
lds
sub
rcl
lret
xor
jp
or
daa
mov
dec
lret
in
int
mov
push
mov
data16
rorl
sbb
stc
cli
and
push
pop
cmp
push
adc
js
and
aaa
mov
sbb
inc
mov
pop
or
shr
mov
and
pop
mov
lret
cwtl
clc
fsubrl
aas
stos
inc
call
mull
pop
shr
and
jle
push
lea
jne
push
sarb
shrb
cmp
fwait
orl
and
add
mov
cmp
jne
insl
sti
mov
pop
adc
aam
add
pop
decb
cmp
mov
pop
pop
arpl
jo
loope
aad
or
adc
mov
test
cs
iret
rolb
ret
adc
inc
or
sbb
push
scas
sub
jbe
push
mov
adc
adc
and
adc
lcall
push
add
jbe
cwtl
xlat
cmp
push
out
sbb
or
cltd
xchg
pop
pop
scas
icebp
movsb
add
inc
jae
adc
add
push
add
add
mov
lods
enter
mov
sbb
push
int3
lock
sbb
repnz
jae
xlat
mov
les
or
push
call
rcrb
xor
dec
leave
inc
sbb
adc
xchg
push
or
mov
test
push
sbb
cs
cmp
sub
mov
push
ljmp
adc
jl
pop
pop
clc
lret
js
sub
negb
jg
testb
sbb
cmpsb
dec
cmpsb
push
push
movsb
dec
sahf
loope
loop
sbb
arpl
ss
or
and
adc
ret
mov
adc
sbb
test
out
test
mov
pop
xor
push
aas
enter
cwtl
xor
clc
inc
out
or
or
push
mov
enter
xchg
pop
cmp
mov
push
sub
pusha
inc
adc
popf
mov
enter
nop
add
addr16
movsb
and
mov
push
sub
pop
daa
add
loope
pop
and
mov
loop
adc
mov
clc
or
or
std
sbb
push
xchg
mov
in
push
andb
pop
mov
data16
pop
stos
cmp
push
mov
sbb
add
sbb
movsl
jne
sti
push
mov
pop
sub
ss
xchg
popl
testl
inc
xchg
and
jae
mov
jnp
loop
loope
or
cmp
jne
pop
mov
add
pop
cmp
dec
cmp
shrb
adc
dec
add
jp
push
cld
or
mov
lcall
or
push
xor
add
sbb
js
or
cmp
jno
test
lock
es
mov
cmpsb
mov
inc
jecxz
js
imul
imul
icebp
lods
sahf
in
in
lea
int3
rol
push
dec
cmpsb
out
lret
xchg
rorl
roll
or
shll
and
inc
test
dec
pop
sbb
xor
mov
push
push
jo
aam
shll
adc
push
sbb
push
sub
sub
scas
push
xor
xor
lods
or
jno
push
adc
repnz
push
std
and
repnz
jno
sahf
les
push
sbb
and
adc
sbbb
pop
add
sbb
sbb
pop
loope
cmp
into
sub
adc
call
sub
lret
or
adc
ficompl
stos
xchg
ret
fwait
jmp
cmpsb
cmp
xchg
dec
scas
sbb
test
adc
add
cmp
out
test
and
mov
sbb
aas
cltd
out
cmp
push
sub
mov
gs
and
xchg
dec
push
sahf
adc
cmc
loopne
insb
test
sub
shrl
inc
mov
ret
data16
sti
mov
push
hlt
mov
sbb
or
insb
roll
js
in
push
fistl
mov
adc
push
sbb
subb
push
adc
mov
fimull
mov
cli
pushaw
sti
sub
rcrl
or
stc
jno
push
jmp
insb
push
std
adc
call
jmp
sbb
pop
mov
leave
push
add
call
or
adc
add
cld
add
shlb
cmpsb
sbb
add
or
xor
or
orb
dec
jecxz
ret
repz
mov
sbb
push
sub
imul
xchg
cmp
sbb
nop
insb
stc
add
cwtl
cmp
inc
pop
sbb
cmp
mov
xchg
inc
sbb
jnp
add
and
inc
test
out
enter
lret
adc
adc
inc
mov
icebp
xchg
mov
scas
roll
pushf
je
lock
adc
cmp
add
push
mov
daa
js
add
orl
dec
push
and
pusha
js
daa
fwait
jbe
pop
push
push
xor
mov
push
sbb
sub
fstpl
sub
or
insl
fisttpl
pop
pop
or
jecxz
insb
xchg
outsb
push
enter
imul
add
scas
ret
push
pusha
push
sti
imul
popl
out
push
dec
outsl
repz
inc
mov
lret
adc
jbe
push
push
push
adc
inc
aaa
sbbb
cmp
xor
imul
sbb
inc
rolb
adc
rclb
xchg
andl
cmpsb
aaa
shrl
enter
cmp
inc
sti
test
mov
adc
into
out
test
push
push
push
sub
adc
jo
subb
loope,pn
and
fstpt
adc
mov
or
cli
adc
lahf
xchg
and
jbe
xor
arpl
push
sbb
es
sbb
aad
aam
sbb
dec
adc
movsl
inc
iret
rolb
pop
xchg
jge
mov
jae
cmp
subb
roll
dec
in
cltd
mov
and
out
ret
mov
inc
into
addr16
push
rorb
mov
mov
jnp
adc
mov
ja
adc
xor
addb
ljmp
or
rclb
orl
dec
xchg
push
jp
xor
daa
push
lock
and
dec
adc
scas
inc
test
push
nop
mov
pop
test
push
sub
push
lea
sarb
in
les
lret
cwtl
es
mov
and
push
push
mov
pop
lret
inc
lock
or
adc
test
cmpsb
push
or
and
fiaddl
enter
push
mov
xor
pop
push
xor
movsb
rcr
jge
push
adcl
cmp
inc
rcl
movhps
add
jg
das
cli
or
fld
jle
push
daa
and
pop
xchg
movb
orl
sbb
push
or
sbb
aad
xor
mov
mov
or
mov
pop
loopne
rorb
imul
insb
into
mov
pushf
or
push
lea
mov
xchg
inc
mov
push
fwait
lock
xor
add
das
push
out
ret
outsl
jo
or
pop
or
fwait
movsl
test
sub
test
lcall
sub
pop
mov
jb
fsub
rcrl
mov
daa
pop
push
in
push
enter
lds
add
sub
int
xchg
xchg
sub
repz
sub
add
data16
xor
loope
and
sbb
xchg
lret
mov
sub
cwtl
jbe
add
xchg
push
int
jns
mov
imul
jbe
cli
sbb
pushf
mov
ret
xchg
jecxz
push
pop
stos
lcall
test
sbb
mov
mov
lods
xorb
inc
outsb
xchg
movsl
push
cs
jp
and
cltd
dec
cmp
cmpsb
out
add
mov
cwtl
movb
and
loopne
pusha
add
or
xlat
test
mov
addl
arpl
aad
cmc
ljmp
or
mov
add
jp
aas
add
lahf
jg
jecxz
push
push
vinsertf64x4
aas
mov
lods
aad
inc
mov
cs
fcomi
and
sub
jno
stos
js
into
pop
cli
mov
shl
sub
test
rolb
in
cs
cmp
mov
add
clc
fimull
adc
push
cmp
pushf
mov
sbb
push
shrb
insl
loope
mov
xor
insl
sbb
xchg
adc
xchg
pop
fdiv
fbld
push
jae
inc
cmp
pop
cwtl
insl
mov
xchg
or
fisttpl
fldt
push
inc
es
or
sub
sbb
push
xor
js
shrb
roll
adc
push
xor
fistps
lds
cltd
mov
sbb
lret
xor
int
call
out
add
ljmp
add
in
ja
pop
adc
push
cmp
add
sbb
sbb
sbb
in
push
ret
sbb
aad
and
add
xchg
lea
scas
lret
js
or
sbb
sbb
push
and
fcoml
repz
dec
in
and
out
xor
sarb
fsubrs
rcl
arpl
push
pushf
sbb
push
inc
and
push
xchg
or
mov
mov
dec
icebp
xchg
and
mov
add
pushf
pop
adc
ret
cs
or
lods
test
test
or
dec
cwtl
fmul
dec
xchg
in
sbbl
add
shrb
pusha
mov
adc
adc
and
push
pop
mov
inc
cmpsl
mov
mov
popf
add
or
mov
in
sbb
lahf
and
out
outsb
nop
jecxz
shr
jne
sub
aaa
xchg
pop
add
test
pop
cwtl
in
adc
cmp
sbb
add
mov
scas
pop
loope
mov
xchg
and
imul
and
add
xchg
sbb
mov
mov
mov
jecxz
jmp
lds
ret
xchg
mov
loop
cmp
pop
popf
xchg
push
shlb
es
dec
ret
add
and
xchg
call
or
or
mov
adc
inc
xchg
push
cmpsl
xchg
or
call
cmp
and
push
out
cs
jae
addl
or
sar
push
mov
mov
sbb
adc
in
clc
add
rcll
scas
or
dec
xlat
add
stos
pushf
test
push
scas
push
subb
add
or
mov
cmpsl
mov
stc
xor
sbb
insb
mov
cmpsl
mov
mov
mov
adc
aad
cmpsb
aas
jbe
xor
imul
add
and
mov
sbb
cmpl
call
adc
lock
mov
pop
int
enter
pop
adc
fimull
mov
inc
call
into
cs
pusha
lret
or
ret
call
xor
dec
fisubrs
add
inc
out
imul
pop
adc
or
sub
xor
mov
test
add
xchg
or
popl
add
popf
or
add
adc
adc
pop
mov
dec
test
or
and
into
out
xchg
add
fisubs
mov
cmc
movsb
adc
dec
fcmove
cmc
leave
imul
nop
jnp
rorl
adc
and
add
or
mov
and
leave
add
push
cwtl
insl
add
xchg
and
adc
insl
xchg
cmpl
pop
je
mov
lea
sbb
rcll
ret
sbb
or
mov
into
and
in
push
push
push
sbb
cld
pop
xchg
adc
sub
out
pop
rol
cmpsb
xor
xchg
notb
and
out
into
dec
repz
push
aaa
les
jne
or
push
add
test
adc
pop
shr
add
call
ret
incl
and
popa
add
mov
aad
mov
jo
imul
add
arpl
sbb
mov
pop
ljmp
add
lret
add
shlb
inc
xchg
in
pop
rorb
mov
and
dec
arpl
and
test
jg
adc
arpl
inc
hlt
adc
data16
push
xor
sarb
outsl
mov
mov
push
fs
sbb
mov
in
add
cmp
mov
sbb
mov
cmp
ret
pop
in
pop
arpl
cmp
pop
es
das
mov
test
stc
sbb
roll
scas
pop
jl
push
cs
and
sub
lods
or
sbb
push
lods
mov
inc
pop
mov
mov
mov
lds
inc
fwait
jle
jo
and
js
jne
cmp
or
sub
popf
sub
mov
pop
adc
cld
xlat
add
lods
push
clc
inc
jp
inc
pop
lret
adc
push
push
or
add
push
xchg
lcall
pushw
or
ret
insb
lea
cmp
jns
js
inc
mov
xchg
iret
mov
mov
xor
int3
adc
loopne
xor
fnstenv
mov
sbb
adc
fcomps
aam
push
rcl
dec
data16
rcrb
sti
mull
mov
dec
sub
les
loope
in
leave
or
mov
js,pn
lea
xor
hlt
jo
sbb
mov
inc
adc
ret
sbb
roll
jle
ror
in
lods
pop
xchg
mov
xor
pop
test
mov
insb
add
fwait
adc
xchg
push
and
or
shr
fdivs
pop
mov
sub
push
flds
and
add
lret
push
xchg
test
xor
imul
es
dec
rolb
mov
orb
push
roll
sbb
mov
adc
aam
xor
je
int
pop
aad
je
or
enter
lret
xchg
popf
push
addb
das
xchg
test
mov
dec
jae
sub
adc
cltd
and
sbb
add
pop
mov
push
add
pop
popf
jnp
icebp
lret
inc
inc
mov
mov
subb
cmpb
adc
leave
pushf
shlb
xchg
ss
add
lods
sbb
rorb
sbbl
mov
mov
jb
popf
popa
rorb
adc
sub
pop
and
out
or
loope
loop
bound
pop
insb
push
stos
dec
rorl
andb
dec
les
cs
call
inc
add
mov
mov
rcll
pop
pop
mov
jbe
mov
aad
or
js
out
xchg
leave
push
pop
pop
jle
mov
mov
xchg
movsb
xor
mov
in
test
lods
xchg
xor
addr16
pop
add
push
cmp
add
adc
les
rorb
stos
add
lds
push
out
test
divb
nop
push
les
lods
cmp
call
inc
ret
jo
scas
sbb
add
push
inc
jb
mov
icebp
push
adc
mov
enter
popf
fisubl
data16
outsl
sub
add
push
adc
out
and
rorb
iret
shll
sti
or
adc
xor
into
outsl
fstpl
test
push
sbb
out
int3
pushf
rcll
pop
outsb
add
mov
pop
decl
call
add
pop
mov
test
rclb
mov
mov
jmp
mov
mov
rcrb
loope
das
aas
js
mov
or
push
outsl
pop
adc
jae
adc
ret
imul
inc
cmc
sbb
leave
loopne
in
inc
adc
mov
xchg
jle
aam
sub
into
mov
and
mov
ljmp
dec
fidivs
push
jmp
push
and
add
test
mov
jle
or
pop
jge
jp
lds
mov
adc
lcall
jnp
adc
leave
push
addb
sub
lock
sub
pop
mov
mov
inc
ljmp
jns
jo
rcll
insb
dec
pop
aam
jo
outsl
push
and
xchg
and
sbb
push
insl
lods
ret
sbb
sub
orl
mov
xchg
filds
xchg
mov
pop
pop
pop
pop
adc
push
stc
test
insb
mov
xchg
cltd
jo
scas
loopne
mov
jo
jae
roll
lret
mov
mov
lods
ret
sub
stos
cmp
test
push
aas
add
sbb
pop
push
cltd
jp
adc
mov
lods
fsubrl
pushf
lret
es
xor
stc
test
mov
lds
daa
pop
cmpsl
cmp
adc
and
add
add
mov
mov
out
outsb
sbb
or
jb
mov
jo
pop
adc
cld
lret
push
aas
imul
inc
pop
lods
cltd
mov
pusha
hlt
sbb
adc
enter
adc
scas
in
sub
sbb
mov
pusha
fldcw
addb
mov
pop
iret
push
cmp
dec
inc
and
mov
cltd
xlat
test
js
lods
and
cmpsb
je
mov
sbb
mov
xchg
hlt
js
cmp
dec
adc
loope
mov
clc
fsts
sub
add
lods
call
mov
adc
repnz
les
xchg
dec
repnz
call
cli
popf
jmp
das
pop
xor
adc
or
inc
add
mov
rorb
ror
xor
pop
iret
sbb
gs
push
mov
aam
inc
inc
pop
cmpsb
data16
mov
sub
mov
mov
pop
add
pop
push
pop
mov
jb
pushf
cmpsb
inc
inc
push
pop
js
xchg
pop
sbb
pusha
call
adc
roll
xor
jne
aad
enter
mov
je
push
mov
and
cltd
cli
adc
icebp
xor
add
push
and
pop
rorl
mov
inc
sub
mov
insb
rorb
xchg
lret
icebp
lcall
and
rorl
insl
mov
rorl
mov
xor
dec
push
nop
jns
push
leave
rolb
inc
movb
push
sbb
xor
pop
stos
xchg
js
ret
inc
sbb
add
movups
sub
inc
test
dec
xor
xchg
jne
sbb
popa
or
pop
and
cltd
lock
je
push
xlat
sbb
insl
test
sbb
scas
jmp
in
sub
sub
mov
subb
arpl
mov
sarl
add
push
xor
inc
repnz
cmpsl
shll
leave
aad
ret
in
cmp
data16
jno
dec
rcrb
lods
pop
mov
lock
mov
repnz
push
lods
push
add
mov
fimuls
sbb
adc
flds
xchg
addl
mov
mov
out
enter
fdivs
sbb
or
insl
scas
inc
pop
jnp
lock
addb
mov
inc
xor
popl
sub
jp
lret
out
or
in
gs
push
push
scas
mov
ja
sbb
fistl
pop
or
movsl
lock
pusha
notb
sbb
and
sub
jo
mov
in
sbb
push
push
push
push
lods
int3
sub
out
clc
lods
jne
mov
sbb
adc
mov
xchg
shrl
dec
pop
inc
imul
push
mov
xchg
mov
inc
and
sub
xchg
jl
mov
sub
push
dec
adc
repnz
insb
aam
sarl
rcrb
sbb
mov
into
je
and
push
or
sbb
or
add
pop
pusha
add
enter
iret
test
ret
adc
lret
cwtl
push
jo
add
pop
add
adc
shll
push
xchg
inc
mov
cld
adc
add
adc
inc
pop
jl
cmpsb
add
xchg
xlat
test
adc
filds
mov
xchg
and
add
loope
cmp
lret
sub
cmp
popa
push
mov
adc
dec
sub
or
push
adc
lock
or
add
lea
imul
bound
jbe
rolb
popf
jl
sbb
xor
sbb
add
xor
pop
add
and
sbb
lds
pop
mov
pushw
mov
or
push
inc
fisubrl
outsb
push
add
lea
adc
cmp
sbb
cmp
ljmp
xor
cmpsl
mov
ret
inc
movsl
scas
inc
push
or
test
sbb
ja
int3
mov
fsts
jae
movsl
mov
rcll
ret
lret
shr
shlb
cld
add
aaa
loopne
hlt
fcoms
jmp
adc
inc
lock
test
mov
or
negb
adc
inc
inc
cmp
inc
inc
scas
xlat
add
neg
and
inc
cmp
pop
add
aaa
cmp
fstps
shll
out
movsl
movsb
fs
or
dec
jne
ss
in
in
lea
inc
call
sbb
imul
pop
mov
inc
push
xor
adc
into
ret
rclb
and
int
imul
adc
inc
cmp
mov
adc
pop
push
addb
lahf
push
or
aam
dec
shll
sbb
sbb
pop
push
out
push
mov
mov
enter
lret
test
push
or
inc
push
or
adc
lock
pusha
jno
jne
xchg
push
push
aam
pop
pop
adc
push
or
mov
dec
or
aad
inc
pop
in
adc
sahf
cmc
rorb
pop
ret
and
cltd
cwtl
out
add
push
outsb
stos
add
push
cmp
jo
mov
adc
shrl
aaa
imul
enter
loopne
call
xor
dec
xchg
pop
pop
fs
pop
xor
in
push
dec
cld
sbb
les
dec
mov
sbb
hlt
mov
adc
bound
push
xchg
lret
add
lock
loop
or
repnz
pop
push
mov
or
mov
jmp
push
rclb
incl
mov
fiaddl
adc
lret
dec
xor
fdivs
push
xchg
inc
repnz
mov
mov
push
leave
hlt
stos
mov
fdivrs
cmp
sbb
add
inc
push
rcr
xor
dec
inc
fwait
add
andb
or
mov
add
jno
jae
lret
clc
and
mov
mov
test
jnp
out
stos
testb
xor
mov
pop
mov
pusha
aad
dec
shlb
dec
aad
sbb
xor
and
xor
sub
add
mov
pushl
adc
push
ds
jmp
xor
dec
rorl
adc
add
sbb
jns
loope
mov
adc
lea
cmp
sbb
fiadds
sbb
sbb
insl
icebp
and
andb
lahf
cli
or
sub
pushf
push
cmp
repnz
sub
jo
push
ret
addb
xchg
pop
pop
xchg
adc
mov
push
xor
shlb
ljmp
adc
mov
sbbb
sbb
xlat
out
xchg
pop
test
inc
jge
cmp
dec
mov
jae
jbe
mov
push
adc
or
shlb
shll
xor
movsl
je
aad
rcll
stos
jae
cmp
orl
mov
push
push
xor
mov
push
in
into
push
xchg
mov
cmp
pop
cmp
jp
and
fimull
adc
adc
fs
mov
outsb
out
rcrb
test
test
cmp
pop
cs
xor
add
fsubs
push
mov
fcmovbe
aad
mov
push
fcomi
icebp
push
rcll
push
mov
in
push
inc
mov
lods
loop
mov
push
pushf
inc
mov
addr16
add
push
subl
loopne
jmp
subb
jg,pt
imulb
push
xor
adc
int3
or
pop
sub
in
mov
sbb
or
subl
aad
pop
cmp
mov
mov
sahf
nop
inc
mov
push
sub
enter
add
test
mov
mov
shlb
mov
icebp
fcomps
push
insb
push
das
sbb
adc
fcoms
sub
adc
and
pop
andl
push
jns
aas
js
roll
faddl
ret
mov
ret
or
scas
push
dec
lods
push
popf
add
mov
jmp
push
inc
and
and
ljmp
data16
mov
popa
out
or
rorb
jp
ret
scas
xor
sbb
pop
clc
or
clc
push
roll
xlat
inc
scas
adc
dec
jb
mov
add
jo
gs
mov
add
aas
jg
rcr
test
cmp
adc
jno
push
adc
loopne
add
test
or
sub
fs
sbb
adc
shlb
mov
ss
lock
inc
jp
jb
push
pop
mov
mov
fisttpl
or
nop
test
icebp
rol
shll
test
push
xchg
push
xor
in
adc
ja
loope
adcb
rorb
inc
icebp
add
imul
xchg
and
fcmovu
leave
xor
rcrl
mov
mov
mov
or
push
xor
or
xor
jb
ret
sbb
xlat
loop
add
mov
mov
dec
int
subl
push
cld
cmp
out
repz
lds
add
jge
test
in
mov
imul
mov
lret
aam
xchg
cmpsb
push
mov
rolb
rcr
int
add
rol
fnstcw
dec
ja
jae
push
test
jp
js
jmp
xchg
jg,pt
and
pop
fwait
push
and
jb
icebp
mov
or
sub
xlat
loope
daa
packssdw
adc
jp
xor
jb
or
into
push
addr16
inc
int
push
and
mov
lods
push
dec
adc
inc
xor
push
cld
add
xor
or
and
mov
and
scas
shll
sub
cld
sti
pop
pop
cmp
push
pop
not
insl
or
or
sbb
xor
xor
inc
loop
jmp
inc
fldenv
mov
xor
js
push
cmp
sbbl
ja
addb
outsl
adc
sbb
loopne
sahf
fisubl
mov
cmp
stos
popf
loope
sub
test
sub
mov
fisubs
insb
enter
int3
mov
sbb
or
into
add
ret
jecxz
cmpsl
popa
js
push
mov
popa
aad
rcr
sub
mov
add
pop
cmp
lcall
in
sub
loop
or
shll
sub
mov
push
ret
push
add
xchg
popf
mov
mov
add
loop
ficomps
jns
add
dec
sbb
xchg
mov
jge
jbe
cmpsb
xchg
fiadds
inc
dec
das
test
push
test
jno
inc
xchg
sub
or
aaa
fs
nop
mov
pop
mov
push
or
add
xor
add
cmpl
push
fld
jbe
or
leave
xor
shl
adc
inc
or
adc
add
inc
sbb
nop
loopne
int
scas
hlt
stc
add
push
movsl
jo
stos
cld
imul
sbb
pop
lock
test
dec
gs
lret
inc
or
mov
push
mov
and
enter
mov
adc
stos
dec
xchg
add
inc
aam
dec
popa
and
push
dec
dec
push
inc
inc
adc
or
stc
add
mov
popa
pop
mov
adc
or
dec
in
loop
jnp
ret
sbb
sub
inc
and
sti
jae
inc
mov
jne
jmp
sbb
dec
test
cmp
daa
dec
jne
jmp
sbb
add
sub
xchg
call
xor
and
popf
cwtl
adc
mov
add
pushf
or
push
push
inc
cli
cli
repz
sbb
es
sbb
xchg
test
mov
roll
push
imul
jmp
push
sbb
xchg
mov
xchg
mov
or
dec
mov
pop
insl
test
add
adc
xor
sub
arpl
inc
test
aad
push
aam
sbb
dec
aad
adc
loopne
mov
rcrl
adc
dec
adc
movsl
into
inc
cmp
cmp
dec
lret
mov
sbb
sbb
mov
sbb
and
sbb
push
cwtl
enter
in
mov
or
mov
jne
popf
dec
mov
test
and
push
mov
rolb
push
add
popa
movsb
xchg
adc
jmp
inc
jne
leave
push
push
mov
out
pop
and
dec
popa
stc
packssdw
lds
imul
leave
or
mov
mov
adc
or
adc
mov
mov
sub
test
lods
and
ret
adc
sbb
pop
aam
je
aaa
add
or
mov
mov
jno
cs
push
testl
sahf
insl
push
bound
cmp
xchg
jo
or
push
loopne
mov
pop
rcll
pop
testb
stos
inc
ja
movsb
mov
xor
push
lock
mov
xchg
sbb
push
push
lock
xchg
sbb
xchg
xlat
push
push
mov
pop
test
and
add
add
bound
jb
mov
sbb
xchg
into
rolb
mov
cli
adc
ret
pop
js
rol
inc
sbb
xor
popf
test
mov
in
cvtps2pi
mov
jecxz
mov
loopne
mov
sbbb
or
pop
cmp
aam
cltd
lds
push
add
jp
mov
sahf
in
ss
lods
daa
orb
pop
cmpsb
mov
lea
jmp
mov
jp
push
sub
enter
dec
xchg
mov
add
jmp
sub
mov
insb
ljmp
int
xchg
pop
xor
aas
test
inc
les
loope
enter
and
and
adc
aad
jge
push
dec
push
aad
push
ljmp
in
sub
or
sbb
mov
adcb
adc
stos
push
movsl
sbb
push
sub
pop
adc
xor
pop
enter
les
mov
cmp
inc
lods
icebp
xchg
sub
push
sub
adc
mov
lea
sbb
xchg
into
fwait
je
movsb
lret
adc
cmp
sub
adc
rorb
test
mov
stos
adc
ljmp
jnp
sar
mov
pop
lods
rcrl
cli
push
fcompl
add
mov
sbb
push
and
adc
enter
inc
push
mov
adc
and
test
add
push
mov
ret
mov
add
into
mov
ror
push
pop
aad
or
neg
cmp
pop
aam
jmp
sbb
dec
inc
repz
ja,pt
adc
pop
cmc
inc
adc
mov
mov
into
add
stc
and
push
inc
pop
xor
aad
xor
ret
push
mov
notb
lret
fidivrl
test
push
mov
push
mov
mov
or
xor
mov
cmp
dec
dec
data16
dec
xor
push
sub
clc
js
or
adc
add
jl
adc
loope
inc
push
ret
test
and
jne
mov
and
add
lock
enter
je
rcl
sbb
ret
mov
pop
lea
add
push
xor
add
adc
aad
rcll
add
clc
mov
aaa
add
in
rcrl
adc
and
add
and
idivl
add
shlb
xor
xlat
ljmp
lcall
invd
movsb
add
and
xchg
jo
pop
fldt
inc
pop
in
add
push
jo
sub
push
adc
push
or
std
test
cmc
inc
or
xchg
ds
adc
stos
mov
push
jno
add
adc
xchg
sub
stos
add
xor
subb
ljmp
mov
into
mov
pminsw
or
lahf
xor
subl
in
adc
pop
rorl
rorb
pop
xlat
mov
mov
add
mov
dec
jecxz
add
or
enter
rolb
push
pop
repnz
jno
and
andb
inc
scas
jb
rclb
xor
mov
or
dec
gs
mov
sbb
pop
fs
scas
xor
xlat
pop
js
push
adc
add
es
or
mov
push
cs
inc
add
test
cmpsl
clc
cmp
push
movsb
mov
leave
mov
leave
lods
pop
int
andb
xor
cmp
clc
pop
adc
rorl
rcll
int
test
add
mov
leave
fsubrp
add
add
les
mov
std
pop
xor
pop
loope
pop
or
add
fmull
sub
cmp
scas
dec
test
icebp
xchg
xor
movb
sbbb
rclb
or
lea
mov
inc
dec
cmp
push
xchg
pop
mov
pop
sub
xor
int3
clc
xor
mov
loope
loop
add
pop
add
sbb
lret
jo
dec
loope
sbb
gs
lret
dec
xor
inc
or
shrl
jmp
mov
inc
imul
imul
sbb
pushf
sbb
cmp
sub
iret
ljmp
adc
sbb
lgs
incb
push
add
adc
jo
loop
into
and
inc
mov
push
lods
sbb
js
movsl
push
mov
jb
fiaddl
fistl
mov
mov
iret
mov
push
or
adc
pop
pop
scas
cmp
daa
adc
pop
dec
cmp
or
gs
popa
lret
in
inc
clc
ret
mov
cmp
ja
push
lahf
out
sbb
insb
xor
sahf
push
mov
cld
cmp
mov
cmp
xor
mov
mov
testl
pop
push
lcall
ljmp
adc
bound
ret
or
xchg
sarl
sbb
cmc
mov
daa
adc
mov
xchg
rcrl
inc
push
loopne
adc
sbb
inc
push
clc
ret
mov
mov
pop
leave
lret
mov
shlb
add
ror
push
add
scas
adc
lcall
lods
mov
stos
pushf
push
nop
adc
or
addl
push
adc
fwait
into
add
adc
or
es
push
bound
je
maxps
push
sbb
inc
in
test
ret
pcmpgtw
push
mov
shlb
movsb
lods
out
push
subl
sti
call
fisubrs
push
or
cwtl
add
cmpb
cmpsl
push
jmp
mov
xchg
push
cmp
sahf
aaa
aam
test
ret
jge
or
mov
loop
mov
shll
push
add
outsb
ret
or
cmp
adc
or
push
dec
pop
xchg
cmp
xchg
and
pop
xor
decb
aam
sub
fwait
movsb
push
cmpsb
mov
popf
or
subb
fwait
jae
jb
sbb
jge
xchg
out
roll
push
and
sbb
lret
insl
movsl
ljmp
stos
popa
and
pop
leave
xchg
push
add
hlt
fidivl
mov
dec
adc
aaa
xchg
sbb
test
call
adc
xlat
mov
cli
adc
push
or
sub
adc
xchg
jmp
inc
mov
daa
lock
jne
or
sub
push
in
add
add
inc
ret
roll
popa
bound
or
or
scas
inc
push
add
mov
mov
dec
push
in
xor
icebp
cmpsb
pop
push
xchg
sub
pop
mov
outsl
inc
sbb
movaps
stos
xchg
inc
in
adc
outsb
add
cs
lcall
enter
sbbl
xor
int
cmp
call
sbb
shrb
sbb
loope
adc
repz
add
jp
es
add
enter
ja
rolb
icebp
insl
pop
jge
sub
or
clc
and
jge
lock
out
and
inc
je
xor
and
xlat
das
sub
push
push
xor
clc
xchg
pushf
loop
mov
add
inc
stos
cld
or
hlt
mov
or
push
pop
xchg
push
mov
sbb
les
pop
adc
sub
adcl
mov
or
pop
add
and
fwait
mov
push
div
les
inc
out
stos
mov
sub
jp
or
mov
xor
mov
mov
push
pushf
pop
inc
xor
lods
lds
adc
push
stos
add
lcall
adc
ret
cmp
xchg
inc
push
jl
cmp
or
or
mov
bnd
push
testl
repz
sbbb
imull
lea
bound
aam
dec
xor
jne
pop
shlb
frstor
xor
mov
ret
mov
cltd
stos
mov
les
pop
or
inc
mov
push
pushf
cmpsl
sbb
xchg
dec
inc
mov
fs
jb
or
in
mov
mov
scas
rol
dec
lret
push
add
hlt
enter
push
pop
or
ret
lods
or
or
clc
leave
mov
and
and
rcll
push
pop
cmc
adc
jge
xor
mov
sub
jnp
loop
or
dec
xchg
test
sub
stos
adc
clc
xlat
rol
icebp
hlt
xor
into
lcall
pop
jecxz
or
add
sbb
mov
movb
icebp
fcomps
sahf
and
or
sbb
jne
add
dec
pop
add
cmp
xor
pop
sub
sbb
add
es
dec
je
out
adc
jbe
test
cmp
imulb
cmp
adc
mov
sbb
aam
lret
lods
cmp
rorl
or
sbbb
adc
mov
mov
popa
test
sub
push
lahf
rclb
addr16
inc
sbb
lds
cmpsl
arpl
push
xchg
xor
adc
push
or
push
adc
loopne
mov
mov
inc
rol
xchg
push
dec
lds
imul
cmpsb
push
and
xchg
adc
lcall
das
cli
add
clc
add
mov
icebp
sub
rcr
lock
rep
push
xchg
imul
test
aad
adc
add
imul
icebp
les
mov
add
jecxz
nop
pop
pop
sub
pop
jle
pop
inc
or
pop
or
addr16
mov
or
jb
dec
sarb
jne
and
push
cmp
push
sub
sub
scas
mov
loop
dec
loop
mov
mov
imul
mov
jmp
loop
adc
or
push
adc
add
pop
cmc
add
shr
push
imul
mov
add
sbb
pop
lea
add
add
add
mov
sbb
mov
test
adc
or
lock
jge
add
iret
add
ret
aam
xchg
jo
adcl
mov
push
rorb
add
add
shr
push
pop
mov
push
sub
in
lods
mov
sbbl
enter
push
push
fldt
mov
in
adc
cmp
add
pop
sbbb
dec
scas
push
or
pop
test
scas
cwtl
int3
inc
stos
push
add
add
jb
adc
xor
pushl
xchg
mov
sbb
stos
cwtl
mov
mov
jge
imul
loope
loopne
mov
insb
inc
daa
push
ja
rcl
sub
inc
nop
ret
dec
mov
out
rolb
xor
lret
and
push
addl
cwtl
addr16
cmp
and
dec
push
out
mov
pop
outsb
arpl
mov
pushf
stos
push
sub
jge
lret
lds
cwtl
jo
pop
push
pusha
popf
ja
sbb
out
enter
adc
lea
xchg
insl
or
out
rorl
jmp
push
push
add
jecxz
xchg
test
mov
sahf
jb
insb
sbb
push
or
jge
out
inc
test
sbb
push
out
sbb
lods
inc
adc
mov
fwait
add
movsl
inc
add
xchg
xor
inc
mov
inc
inc
mov
jno
jbe
aaa
inc
mov
or
mov
sahf
fs
sub
adc
enter
jl
mov
pushf
js
xor
xorb
rsm
add
cmp
add
loop
mov
xor
sbb
imul
cmc
xchg
sub
sbb
cmp
sub
out
mov
or
xlat
sbb
adc
push
inc
stos
mov
push
fstpl
cld
leave
adc
into
outsl
and
add
icebp
add
in
dec
sbb
imul
test
das
cmp
mov
inc
outsb
fimull
scas
xchg
inc
mov
call
cmp
pop
mov
aas
dec
mov
sbb
add
ret
jp
mov
jo
or
and
enter
mov
sub
pop
sbb
push
stos
outsb
std
sti
sub
or
jmp
inc
inc
notb
and
cmp
cwtl
test
sarl
das
fimull
add
pop
lea
cltd
xchg
shrb
mov
gs
and
sti
out
pop
sub
push
adc
notl
adc
pusha
pop
add
add
pusha
push
movsl
and
xchg
sub
js
js
ror
jmp
adc
mov
shlb
jae
ss
sbb
sub
mov
xor
push
mov
add
inc
add
pusha
sti
push
mov
pop
or
inc
je
add
js
cmc
lahf
pop
psraw
andl
movb
push
add
mov
pop
popa
push
or
inc
cmp
mov
es
sub
loopne
sub
lds
mov
das
mov
push
mov
nop
sub
nop
mov
mov
lret
push
adc
cmpsl
adc
dec
sbb
scas
mov
pushf
push
add
rolb
pop
adc
and
cmpb
jecxz
push
mov
push
ret
adc
les
ss
or
ret
or
xor
mov
cmp
movsb
push
fdivrs
dec
dec
incb
enter
add
jp
add
push
xorb
xorl
icebp
fsts
outsb
ret
cwtl
mov
add
fadd
pop
add
add
jb
stos
jae
dec
stos
or
and
lret
shlb
inc
inc
xchg
rcll
frstor
lcall
fimuls
push
andb
pop
push
push
push
sub
stc
add
push
les
xchg
ret
sub
cmc
and
ljmp
repnz
fs
mov
cmpsb
ljmp
cmp
mov
clc
pop
in
ret
roll
sbb
pop
and
push
inc
and
icebp
or
xor
fidivs
mov
repnz
adc
pop
cvtps2pd
jecxz
and
push
or
xchg
hlt
mov
fs
add
jne
or
cmpsb
add
inc
scas
xor
cltd
roll
push
call
or
outsl
jecxz
add
cli
lahf
ror
addl
pop
nop
rcrb
xchg
lea
test
repz
pusha
adc
js
fldcw
int3
lcall
lock
addb
mov
cmc
inc
in
movsb
sbb
jmp
jp
decl
movsb
sbb
add
and
cld
aas
mov
push
inc
aam
sti
daa
jne
and
ret
add
cmp
or
out
push
rclb
or
loop
mov
les
push
sti
or
pop
pop
lods
sbb
jae
and
stos
scas
out
push
mov
dec
sbb
lea
mov
add
pop
mov
ret
cmp
rcll
int3
popa
inc
cmp
push
and
sarb
adc
push
add
or
xor
jb
xchg
mov
push
xor
xchg
sub
add
push
inc
mov
xor
push
clc
lcall
add
sbb
mov
clc
or
fs
xlat
sbb
enter
push
cs
sbb
adc
leave
cmpb
adc
push
popa
shlb
and
xor
jecxz
mov
add
jg
lods
loopne
scas
bound
jne
sbb
in
mov
xor
cmp
jmp
arpl
jl
mov
xlat
add
mov
add
xor
lea
punpckhbw
subb
das
ljmp
fadds
xchg
pop
xor
pop
push
mov
and
icebp
mov
je
cmp
adc
iret
add
mov
inc
pop
and
mov
dec
aad
adc
inc
or
mov
sub
sbbb
lods
test
push
repz
sbb
leave
inc
or
xor
adc
push
push
adc
shll
cmc
sbb
mov
sbb
repnz
pop
outsb
adc
xor
xor
jb
mov
push
test
mov
push
cmp
push
push
js
adc
xorl
mov
push
test
pop
xor
stos
pop
mov
and
rcrl
lret
sbb
adc
jo
or
dec
stc
cld
andl
lock
popa
dec
call
push
mov
lcall
jo
sbb
fisubrs
es
add
stos
inc
push
es
push
cmpsl
imul
shl
or
dec
and
sub
inc
add
pop
repnz
nop
xchg
imulb
iret
lret
or
push
daa
and
inc
icebp
sbb
push
rolb
add
sbb
cmc
mov
sub
ljmp
adc
nop
ja
or
leave
stc
in
push
cmp
sbb
testb
sahf
push
pop
test
cmp
sbb
ror
mov
shlb
sbb
jmp
jb
jp
sub
sbb
jl
mov
les
mov
or
ret
pop
sub
add
call
rcll
push
push
lret
mov
popa
lds
add
out
movsb
pop
sub
sub
push
xor
ret
movsl
jae
insl
inc
xchg
xchg
cld
adc
push
push
mov
mov
mov
mov
test
inc
loopne
add
loope
sbb
sahf
arpl
push
mov
and
hlt
and
pop
enter
push
mov
or
adc
sub
cmc
add
xchg
out
xor
stos
mov
jne
out
fisttpll
repz
ret
push
mov
rcr
xor
icebp
adc
sbb
call
xchg
adc
rorl
sbb
add
scas
int
mov
ljmp
dec
orl
jge
add
add
fcmovu
inc
lea
movzbl
out
into
pop
out
mov
jle
cmc
cmp
js
repnz
add
jg
shlb
std
push
or
inc
and
pop
adc
push
mov
sbb
sub
push
lods
sbb
je
les
cmp
rorl
pop
lds
aam
jl
lea
push
lock
cmp
mov
inc
pushf
cmpl
rcl
xor
mov
mov
lds
xor
shll
daa
rcll
jo
sbb
jo
jb
lock
movsb
sbb
clc
sbb
scas
sub
sbb
cmp
shlb
jo
push
mov
xchg
setl
int
xchg
pop
clc
xor
scas
mov
out
jg
push
cmp
lea
imul
pop
mov
push
pop
icebp
fdivp
fsubs
fadd
cmp
test
push
mov
ljmp
je,pn
andb
fiaddl
dec
add
push
stos
jo
lods
mull
xor
loope
cmp
jns
push
movb
dec
add
or
adc
mov
add
shlb
push
or
jecxz
lahf
push
jo
adc
push
inc
adc
leave
cltd
in
add
rcl
pop
aad
push
or
ljmp
lds
out
push
pop
mov
add
movsl
int
shlb
or
cmpsl
sar
pop
push
mov
xor
rolb
test
cmp
cmc
mov
movsb
pop
lret
fsubrs
push
aad
adc
mov
add
push
div
push
jb
pusha
xlat
addr16
stc
adc
jp
mov
daa
icebp
push
jl
sub
inc
pop
gs
mov
or
mov
push
pop
test
iret
or
hlt
out
or
inc
cmp
sbb
add
push
cmpsb
pop
mov
aad
pop
cmp
test
std
push
mov
ds
imul
push
sbb
xor
pop
subl
ds
mov
aam
push
mov
sub
or
fmull
sbb
add
mov
add
sub
pusha
test
daa
cwtl
mov
cmpsb
jne
in
cmp
dec
inc
or
xchg
dec
scas
nop
pushf
mov
movsb
pop
mov
inc
jge
pusha
jmp
rcrb
sbb
inc
psubusw
mov
lret
mov
mov
cmp
mov
dec
repnz
mov
cmp
xchg
pop
es
arpl
js
adc
adc
or
add
or
mov
fwait
adc
xor
enter
add
icebp
lcall
mov
add
test
push
pop
or
mov
add
push
jp,pt
stos
lret
add
pop
ret
sbbb
test
sbb
and
cs
push
push
addl
pop
pushf
enter
lret
or
or
inc
negl
sbb
sbb
push
sub
shrb
inc
or
mov
mov
sbb
add
jle
sbb
inc
inc
fnstsw
push
push
sbb
or
adc
orb
sbb
loope
add
sbb
aam
push
popf
movsl
imul
fiaddl
cmp
rolb
subl
lock
aam
mov
sbb
in
xor
imul
das
push
push
andb
mov
andb
jmp
push
pop
movsl
mov
adc
adc
jge
les
push
add
sub
sub
dec
ret
push
cmp
mov
cmp
push
add
cwtl
bound
mov
movl
jne
dec
cs
test
and
sub
inc
cmpsb
aas
out
sahf
sbb
int
ds
push
dec
xchg
test
or
mov
pusha
mov
or
and
add
inc
pop
push
lcall
sbb
add
push
mov
mov
cmpsb
cmp
lcall
mov
add
inc
inc
or
inc
mov
in
push
mov
call
cmp
xor
icebp
je
pop
clc
cmp
mov
sbb
xchg
stos
pop
bound
jmp
aam
add
shlb
mov
push
repnz
adc
inc
adc
mov
clc
add
and
mov
in
add
mov
in
add
stos
add
sbb
repz
mov
ds
xchg
adc
loopne
scas
andb
mov
cmpsl
xchg
mov
pusha
mov
sbb
jge
loope
xchg
sub
pusha
adc
push
ja
inc
jb
scas
cltd
and
aam
adc
and
push
lds
xor
inc
or
push
inc
pusha
dec
data16
mov
xchg
or
dec
loopne
sub
nop
rcrb
movsb
xchg
and
arpl
inc
sub
rorb
pop
js
cmp
sbb
clc
push
mov
mov
add
mov
xchg
call
and
sub
push
pop
sub
sub
xchg
push
xor
xchg
xchg
out
cmp
cli
les
cmc
fstpt
lret
pop
fwait
jecxz
lds
sti
and
repnz
sub
pop
fisubs
test
clc
push
fcompl
mov
idivl
xor
add
out
add
lock
mov
jb
inc
adc
hlt
subb
xchg
push
mov
sub
ret
adc
pushf
adc
loop
jp
test
xchg
lods
adc
enter
test
or
rcl
or
mov
cltd
test
cltd
data16
and
xchg
pushf
mov
sub
xchg
adc
pop
andl
mov
xor
adc
subb
add
push
dec
in
rorb
or
ret
adc
test
push
mov
sbb
or
cmc
lret
imul
mov
shrb
cmp
pop
hlt
test
iret
ret
push
push
and
mov
adc
and
mov
inc
loopne
push
sub
xchg
sub
mov
mov
sub
jp
aaa
or
loop
test
punpcklwd
mov
div
test
iret
cs
add
inc
mov
cli
or
aam
std
lods
mov
xchg
mov
sbb
repnz
in
bound
stos
inc
rcrl
sub
mov
cmp
je
mov
outsb
mov
push
push
cmc
lea
cmp
pop
idivb
push
xchg
bound
adc
cmpsb
pop
pop
mov
push
xor
cmp
adc
adc
inc
adc
or
and
in
shll
mov
adc
mov
sub
push
and
adc
mov
roll
subl
add
lods
mov
xchg
or
cmp
or
shll
test
mov
mov
add
in
fcoml
mov
lret
dec
inc
adcl
scas
lret
pusha
mov
popa
inc
clc
bound
sub
inc
add
xchg
pop
lea
push
xcrypt-cbc
cmpsl
nop
pop
xchg
push
and
dec
mov
pop
sub
cld
into
mov
cs
rclb
push
or
jge
ret
sbb
sub
adc
push
push
mov
dec
lcall
ret
dec
or
lods
xchg
mov
xor
dec
sub
adc
mov
rclb
and
arpl
jne
jecxz
xor
ja
shlb
mov
or
add
gs
mov
lock
fistps
inc
mov
xchg
push
pop
sbb
xor
lea
bnd
test
cmpsb
call
jb
mov
pop
adc
fildl
push
stos
fbld
pop
add
push
cmpsb
jmp
ret
or
push
lea
cwtl
sub
int
clc
out
orb
sbb
repnz
cwtl
or
sbb
cltd
xor
pop
fldenv
addb
jo
int
dec
add
pop
or
xchg
xor
pop
addr16
andb
call
push
inc
add
push
icebp
or
jmp
bound
cmpsb
adc
rorl
xor
ljmp
icebp
sbb
add
mov
arpl
add
add
xor
jb
pop
cld
dec
mov
push
sbb
mov
in
mov
adc
cs
inc
adc
jo
rclb
xchg
cli
adc
rolb
sub
cs
adc
push
lahf
xor
addr16
cs
jle
rcrb
imul
add
loopne
rorb
or
xchg
jmp
loopne
dec
xchg
mov
fldl2e
inc
xchg
orl
sbb
pushf
dec
add
mov
add
loopne
push
cmp
mov
sub
in
lock
adc
cmp
and
ret
sbb
mov
add
adc
ror
clc
pop
adc
sub
jmp
sub
movl
jbe
lret
adc
cld
call
inc
mov
cwtl
and
lock
add
xor
mov
dec
mov
push
inc
subl
test
fwait
ret
xchg
sbb
orb
sbb
xchg
push
adc
mov
shr
mov
lock
mov
xchg
ljmp
dec
mov
popa
mov
sbb
push
pop
adc
adcb
jno
inc
mov
mov
popa
mov
xor
add
bound
xor
add
push
mov
push
je
stos
and
rorb
popl
stos
jno
lcall
inc
enter
shlb
mov
push
or
lea
addb
adc
js
rorl
cwtl
inc
dec
push
xchg
dec
push
movsl
xor
loopne
aam
adc
or
rclb
mov
mov
adc
push
push
rorl
inc
xor
add
cmpb
or
das
out
push
add
add
pop
mov
test
sub
cli
roll
adc
inc
insb
loope
xor
add
shl
sbb
testl
push
in
mov
outsb
pop
roll
test
mov
pop
adc
adc
xchg
jmp
filds
shlb
roll
loopne
push
push
add
or
in
inc
lret
push
shrb
sbb
add
push
ljmp
pushf
xchg
inc
add
dec
cmp
into
mov
loope
mov
cmp
lds
mov
jno
push
or
sbb
mov
xor
push
pop
lods
or
push
or
incl
xchg
xchg
jne
iret
inc
lret
int3
sub
adc
adc
loopne
mov
adc
imul
ret
int3
mov
rolb
aad
sbb
das
xchg
out
mov
xchg
mov
or
pop
aas
mov
sub
decb
shrl
ljmp
mov
cmpsb
mov
test
inc
pop
xchg
sbb
jbe
sbb
mov
lcall
sar
mov
dec
imul
lds
pop
inc
scas
push
dec
rcrb
or
push
lret
adc
push
push
fs
xchg
sbb
mov
or
push
clc
jae
push
jp
pop
addb
inc
inc
test
hlt
adc
rcl
shl
xchg
push
stc
lock
addr16
faddl
daa
push
ret
inc
push
inc
imul
imul
mov
pushw
lcall
in
inc
pusha
or
loopne
add
or
add
dec
add
inc
hlt
add
rcl
aad
inc
push
or
leave
adc
push
movsl
ljmp
outsb
sbb
or
inc
rcll
pop
add
and
pop
push
popa
adc
sub
cmp
das
adc
cmp
add
mov
xchg
add
clc
enter
sub
lret
and
jo
stos
inc
cltd
sub
rcrl
xor
mov
adc
fld
sbb
add
mov
movntq
out
push
pop
xchg
mov
cmpsb
push
pop
mov
imul
dec
movsl
leave
es
jge
inc
xchg
adc
repnz
xchg
loopne
jle
sbb
mov
inc
adc
sbb
xchg
xor
sub
in
mov
lods
add
or
push
add
or
add
mov
jne
mov
cmp
shlb
jmp
popf
adc
mov
sbb
ss
scas
stos
cwtl
sub
aam
je
adc
add
out
push
aad
push
sbb
mov
fwait
add
adc
xor
and
movl
shl
icebp
cld
pop
add
jl
notb
popa
xchg
mov
xor
sbb
aam
imul
addb
test
loopne
and
pop
xor
or
aad
xchg
sbbb
mov
lds
repz
or
sbbb
jb
or
push
cmp
cmp
cltd
or
aad
repnz
sbb
orb
test
push
or
inc
movsl
push
aas
mov
pop
or
mov
std
inc
push
mov
mov
cmpsb
andb
jp
adc
lock
push
adc
jo
xchg
test
and
xchg
mov
xor
dec
push
imulb
pop
xchg
and
pop
pop
fidivl
dec
and
test
and
add
push
jno
xchg
cmp
adc
mulb
dec
xor
les
call
cmp
inc
int
inc
les
push
repnz
sbb
lret
js
add
push
dec
sbb
loop
inc
pop
loopne
or
push
or
repnz
stos
pusha
shll
fiadds
jge
or
pop
pushf
mov
push
sahf
sbb
dec
pop
call
xor
inc
pop
push
lahf
adc
or
mov
push
xchg
or
pop
xor
rorb
push
or
vrcpss
and
ds
inc
pop
dec
stos
sub
pop
inc
daa
push
ds
adc
call
loop
stos
add
and
dec
mov
push
add
or
add
sbb
adc
xchg
roll
jmp
adc
xor
and
push
mov
sbb
bnd
push
cmp
pop
movsl
sub
push
cld
bound
mov
cmc
cli
icebp
clc
lahf
push
cmp
aam
cmp
mov
inc
add
aaa
into
testl
stos
pop
cld
mulb
sbbb
add
mov
pop
mov
enter
mov
pop
mov
mov
test
lahf
push
addb
xor
rclb
push
pop
mov
push
sub
pop
xchg
test
add
rorl
add
sbb
jo
sub
add
or
add
ret
sbb
shlb
stos
mov
or
and
and
cmp
mov
mov
insb
pop
sbb
fs
cltd
mov
orb
pop
movsl
jmp
sub
pop
out
push
xor
inc
mov
test
push
es
mov
cmp
sbb
mov
aam
xchg
test
lock
lcall
cmpeqps
or
cld
enter
inc
push
pop
jno
mov
inc
xor
mov
frstor
insl
shll
daa
push
cwtl
mov
or
leave
mov
pop
in
push
pop
push
push
mov
lret
or
es
add
inc
clc
push
adc
push
sbb
filds
loopne
mov
xor
add
gs
or
adc
loop
je
testb
lods
ljmp
jl
inc
pushf
subb
in
pop
xchg
xchg
cmp
nop
or
div
dec
adc
mov
imul
and
xchg
ret
push
pop
or
jmp
jecxz
nop
inc
lock
adc
and
jne
mov
xor
add
cmp
or
loopne
inc
sub
stos
icebp
femms
cs
mulb
or
mov
jnp
sub
popa
add
add
pop
jno
aaa
mov
inc
lods
scas
iret
adc
enter
add
adc
hlt
add
ret
push
add
add
push
jo
adc
jb
adc
adc
cld
test
lea
pop
inc
in
cmp
out
xchg
pop
ss
push
sub
mov
adc
jo
cmpsb
rorl
aas
inc
dec
sub
jnp
mov
and
pop
imul
insb
or
cmp
test
insl
pushf
xchg
sbbb
adc
rcrl
push
insl
add
rorb
lock
pop
add
mov
adcb
stc
cmpsb
sub
push
rolb
mov
pop
xchg
or
xor
lret
xlat
push
loopne
cli
or
inc
adc
or
and
sbb
and
mov
loop
push
pop
mov
jmp
xor
xor
cmpsb
test
sbb
push
mov
cli
add
movsb
inc
lahf
testb
inc
add
and
mov
arpl
xor
popf
ret
push
inc
push
mov
sbb
add
add
push
pop
xor
out
outsb
dec
out
popf
loopne
inc
mov
pop
xchg
or
xchg
daa
pop
shl
aas
adc
dec
adc
or
push
push
pop
adc
lds
sbb
nop
inc
mov
push
das
mov
jbe
rorb
dec
adc
out
dec
gs
and
push
shrl
mov
call
add
mov
pusha
mov
xlat
movsb
data16
mov
rolb
add
gs
xchg
popf
fxch
clc
add
or
or
adc
cmp
repnz
rclb
or
mov
sub
xchg
fmull
add
adc
lock
or
cmp
add
scas
add
and
adc
stos
dec
inc
lds
outsb
inc
or
adc
js,pt
jb
shll
jae
enter
push
cmp
and
xor
aad
cli
rcll
rol
pop
aad
es
or
mov
xor
mov
and
fimull
les
leave
xor
inc
cmp
movsl
inc
test
xchg
scas
adc
sbb
fsubrl
push
rsqrtps
dec
adc
or
call
jno
gs
mov
adc
mov
rorb
pop
xor
sahf
out
cmpsl
js
inc
dec
push
test
in
xchg
cmp
sub
pop
sahf
rolb
sarl
push
out
or
sbb
cli
pop
aam
testb
cmp
inc
cmp
outsb
inc
add
xor
sbb
pusha
ljmp
sub
adc
in
adc
dec
adc
and
or
add
adc
addl
testl
out
ret
adc
je
adc
into
adcb
fmull
mov
cwtl
fimull
imul
and
add
xchg
mov
fldcw
pop
add
inc
imul
cltd
push
movsb
mov
adc
mov
mov
sbb
push
shll
pop
xor
sbb
mov
repnz
and
xchg
push
fcoms
cmpsb
xchg
add
lock
test
xor
mov
pop
push
mov
iret
xor
popf
leave
cmp
or
add
or
sbb
adc
push
and
or
fmuls
pop
out
fildl
xor
push
js
dec
cmc
add
xor
inc
pand
adc
negb
ret
pop
adc
xchg
or
daa
lret
in
jnp
js
add
mov
lret
test
pushf
add
xchg
rcrb
pop
jmp
cmp
outsl
fwait
int
jne
and
xchg
popl
sbb
out
sbb
cwtl
bound
out
dec
or
xchg
ret
push
and
sub
not
and
or
mov
mov
inc
es
push
xchg
mov
xchg
jo
movsb
xchg
lods
cmc
pop
mov
cltd
test
jecxz
push
inc
or
or
loope
and
xorl
outsb
and
or
rcr
lea
mov
mov
scas
sarl
in
jl
mov
mov
mov
mov
orl
mov
aam
mov
pop
or
cli
jb
jae
pop
scas
dec
dec
inc
pushf
stc
add
add
inc
into
das
adc
push
mov
mov
sbb
cmp
aas
scas
push
out
push
ret
sub
pop
test
into
adcb
sbb
add
sbb
add
loope
mov
push
cli
icebp
popf
sub
lds
cmp
xor
cmp
jge
cli
jge
sbb
les
xchg
lds
xchg
fs
lock
add
mov
pop
pop
inc
mov
sbb
pop
cmp
negb
push
cmp
shrb
mov
mov
adc
mov
push
push
cwtl
jecxz
add
loope
in
inc
jl
lret
scas
insl
and
dec
inc
ret
adc
les
or
int3
nop
rcl
add
jmp
mov
adc
xchg
and
push
nop
pop
in
add
sub
std
loopne
xor
sbb
mov
lock
leave
les
push
daa
stos
in
rcrb
rolb
cmp
or
add
add
add
test
test
fimuls
out
or
jge
or
add
mov
and
mov
rclb
out
add
add
pop
shrb
addb
pop
xchg
ret
xor
mov
push
pop
push
cmpsb
and
in
int
icebp
cmp
xor
in
and
adc
xchg
or
add
ljmp
aam
mov
iret
or
inc
shrl
cmp
mov
cmc
mov
subl
xor
push
into
inc
andb
jns
dec
imul
add
push
xlat
inc
mov
xchg
inc
iret
cs
adc
sbb
inc
loopne
push
mov
lcall
popf
enter
fisubs
cmp
rclb
loope
mov
shrb
iret
call
push
push
movsb
lret
data16
xor
orb
repz
sbb
mov
xchg
daa
sbb
pop
pop
or
test
add
shll
sbb
das
push
jb
rol
cld
push
sbb
fwait
cli
pushf
scas
ret
into
sub
rol
or
xor
mov
mov
mov
loopne
mov
rcll
sbb
shr
xchg
rol
add
xor
bound
push
sahf
fstps
xchg
add
test
popf
xor
cmp
lcall
add
xor
push
pop
fldt
inc
aam
xchg
cmp
bound
jmp
jmp
loop
cmp
jno
push
fldz
movsl
or
or
aam
les
dec
sbb
push
outsl
jns
push
xor
xor
sbb
xchg
or
push
in
add
jne
xchg
ret
popl
ret
pop
test
mov
sub
nop
pop
jp
push
push
xchg
and
sbb
sub
xor
add
or
xor
jmp
movsl
mov
lock
xlat
xor
sahf
fimuls
adc
push
push
jae
js
mov
lods
and
mov
jp
es
mov
stc
push
jo
add
int3
ret
rorl
cmpsl
and
push
bound
inc
ret
and
lock
stos
dec
dec
enter
push
test
adc
leave
inc
mov
jnp
add
mov
mov
mov
add
dec
push
cmp
cmpsl
push
inc
push
cmp
stos
prefetchw
push
mov
mov
ret
xor
mov
inc
add
in
xor
test
pop
pushf
lea
inc
insb
adc
fdivrs
adc
push
aam
in
ss
rclb
mov
cmp
mov
in
leave
stos
mov
mov
add
add
das
add
loop
fld
dec
sub
inc
mov
bound
aam
push
dec
rcrl
cmp
out
mov
push
or
ss
mov
xor
into
push
jbe
add
inc
sbb
sub
cmp
pop
push
lods
and
xlat
icebp
test
xor
push
add
or
inc
sbb
pop
cmc
in
pop
cmc
sbb
add
not
mov
inc
jmp
xchg
pop
xchg
into
xor
push
lea
les
or
gs
imul
add
shrb
pop
xchg
mov
push
pop
loope
pop
mov
push
mov
pop
push
mov
push
notl
mov
movsl
xor
pop
xor
lods
icebp
xor
add
sub
scas
or
and
int3
lock
adc
mov
loop
push
adc
hlt
push
add
pop
lret
sub
pop
gs
jo
and
sub
test
xor
sbb
testb
pop
xchg
ret
call
les
or
rcl
xor
xchg
inc
mov
js
lds
jo
or
and
stc
stc
test
or
cli
lods
push
mov
shrb
add
xor
scas
add
jmp
leave
jo
fmuls
jno
adc
mov
pop
push
inc
add
mov
mov
packssdw
jmp
jecxz
andb
lock
adcb
inc
jmp
jb
into
mov
and
adc
add
cmp
shrb
movsl
or
jae
pop
mov
inc
outsb
inc
cmp
xchg
push
loopne
fwait
jo
lret
pusha
mov
cltd
xchg
mov
adc
push
in
in
add
sbb
mov
add
movsb
inc
out
dec
stc
adc
dec
adc
adc
lds
adc
push
test
push
pop
mov
jecxz
xchg
or
mov
jnp
add
lods
idiv
or
sahf
loop
dec
sbbl
ret
push
xlat
mov
and
add
xor
adc
or
das
push
push
testb
sbbl
inc
mov
js
mov
push
adc
xor
divb
movsb
pop
mov
outsl
add
mov
bound
lret
cmp
inc
arpl
cmpsl
jb
callw
test
mov
and
pop
xchg
int
jmp
add
jp
adc
scas
ds
sbb
sbb
rcrb
xchg
xor
shr
push
push
popa
mov
xor
push
inc
add
imul
nop
sbb
cmp
shl
iret
rcrl
rolb
popf
add
adc
mov
xchg
inc
push
mov
adc
mov
jle
pop
or
sbb
adc
cmpb
xor
push
xchg
enter
push
adc
sub
pop
xor
popa
enter
test
mov
out
sub
push
push
or
dec
or
pop
cli
xchg
push
setne
aad
pop
arpl
adc
sub
out
mov
inc
mov
cmpsb
adc
test
or
add
jle
and
mov
int3
sbb
push
add
enter
js
xchg
jb
imul
rclb
and
das
shl
mov
mov
ljmp
dec
leave
and
or
push
test
fwait
pop
push
lret
fwait
or
sar
mov
out
inc
test
out
mov
adc
cmpsl
add
add
in
sub
add
xor
cwtl
pop
je
push
cmc
mov
mov
and
icebp
or
out
or
xchg
arpl
mov
dec
inc
xchg
std
pop
cmp
jl
xchg
jecxz
pop
or
sbb
nop
add
imul
pop
addl
add
xchg
sbbb
mov
sbb
das
inc
adc
stos
cmpsb
sbb
sub
cmp
cld
xor
sbb
pop
xor
cmp
loop
pop
cmpsb
push
cmp
jae
ret
call
clc
rolb
les
sub
dec
sub
sbb
sbb
push
or
call
xor
add
cmp
pop
bsr
movsl
scas
adc
add
and
inc
sub
loopne
add
or
lret
xchg
loop
xchg
or
pop
add
filds
mov
jo
addr16
and
mov
fcmovnb
scas
sti
xchg
xchg
sbb
adc
fcoml
arpl
icebp
sbb
add
push
and
dec
or
pushf
lret
pop
push
in
push
cmp
inc
sbb
sbb
add
gs
sub
xor
adc
adc
and
bound
lock
stos
imul
sbb
mov
xchg
jo
cwtl
out
cmp
inc
pop
add
pop
xor
ret
push
add
ljmp
xor
dec
aam
aam
rorl
add
add
add
pop
xor
das
sbb
dec
fs
push
xor
dec
or
cmp
mov
xchg
cwtl
test
and
fiadds
or
xlat
sbbl
xor
rolb
or
or
clc
add
inc
rolb
pop
adc
in
inc
sbb
xchg
sbb
jno
sub
push
sbb
imul
xor
in
add
pop
test
mov
mov
or
test
mov
mov
loop
cwtl
sahf
jb
pop
add
mov
adc
or
xchg
xorb
lea
pop
es
mov
mov
fs
rcl
out
scas
cmp
enter
movsb
cli
fmul
aad
inc
mov
movsl
ja
xor
lahf
cwtl
adc
add
arpl
add
call
or
add
push
adc
ret
lods
scas
orb
push
mov
and
add
push
jo
xchg
pop
mov
push
and
mov
jnp
or
test
and
xchg
adc
adc
add
call
adc
add
push
pusha
and
push
sub
shlb
add
sbb
rolb
adc
sub
bound
fwait
mov
sar
push
into
popa
add
jp
adc
test
cltd
into
icebp
mov
xchg
roll
mov
push
inc
and
test
roll
jbe
inc
movb
fdivrl
ja
push
cvtps2pd
loope
sub
inc
sub
cmpsl
push
push
rcr
and
adc
pop
mov
pop
inc
or
clc
add
pop
add
push
add
ror
adc
adc
add
pop
jns
shrb
lea
fmull
popf
loop
mov
adc
sub
mov
dec
mov
std
dec
inc
xor
movsl
shrl
xchg
sub
or
adc
add
adc
enter
add
pop
shlb
rcl
je
push
rcrl
mov
hlt
push
xor
stos
cltd
pop
mov
ljmp
add
sbb
clc
xchg
pop
mov
pop
aam
test
sbb
jbe
sbb
imul
mov
nop
and
xor
inc
movsb
lret
rolb
insb
push
aad
movl
cmpsb
push
sub
add
pop
ss
rolb
mov
cltd
clc
push
dec
mov
sbb
movl
push
rcll
jmp
xor
push
xchg
add
pop
cmp
aas
push
fs
sbb
mov
sub
mov
mov
push
xchg
push
or
jge
push
xor
xor
dec
or
orb
or
and
add
xor
loopne
dec
lds
nop
sbb
cmp
add
jge
add
adc
test
stos
test
hlt
rcll
mov
jb
inc
mov
sti
pop
mov
sub
and
xor
xor
pop
lds
out
popa
xor
inc
cmp
push
or
pop
adc
mov
jae
xchg
test
cld
mov
pop
adc
lahf
in
test
dec
negl
mov
lods
fistpll
inc
push
cs
subb
or
sar
mov
pop
repnz
pop
push
xorb
sti
sbb
lea
lcall
jmp
sbb
dec
add
test
push
fstpl
icebp
lcall
orps
shrl
add
inc
je
and
rorl
xchg
sbb
lea
lods
jmp
push
dec
sub
push
mov
or
mov
push
sub
mov
ss
inc
add
inc
mov
call
vunpckhps
notl
sbb
mov
jb
or
sbb
xor
push
aam
inc
adc
jge
mov
xor
jbe
push
push
mov
add
sbb
push
inc
sbb
jp
out
aam
sbb
test
in
mov
adc
std
or
test
mov
lret
andl
sub
push
adc
push
lcall
cmp
dec
aam
mov
add
mov
inc
mov
inc
das
frstor
or
movsb
xor
mov
push
or
mov
adc
add
mov
mov
push
mov
sub
mov
xor
add
inc
stc
out
test
mov
out
push
fiaddl
mov
add
and
addl
adc
outsb
ret
mov
xchg
in
pop
arpl
jmp
cs
pop
sbb
sbb
leave
pop
inc
sbb
loop
push
sahf
outsb
sbb
popa
push
lds
ret
cli
add
pushf
mov
aaa
push
lock
or
or
add
shlb
or
cwtl
or
inc
xchg
lcall
inc
pusha
jp
pushf
mov
push
mov
aas
stos
mov
test
test
into
push
inc
xor
popa
add
movb
push
add
dec
mov
mov
and
outsl
mov
enter
rorb
xor
pushf
fisubl
cli
movsb
mov
mov
mov
push
adc
in
lock
jns
imul
in
ret
dec
or
sub
adc
bound
inc
call
push
sbb
xchg
add
fadds
shr
jae
mov
mov
mov
push
inc
les
mov
add
stos
dec
and
inc
xor
fidivrl
sub
lods
pop
jmp
xor
addl
add
add
pop
mov
sub
mov
adc
ficomps
mov
sbb
and
mov
mulb
movsl
pop
xor
push
cmp
es
push
push
push
sub
out
and
scas
sub
sub
push
jge
cs
sbb
xor
aaa
popf
flds
mov
add
lods
mov
fisubl
mov
mov
nop
dec
cmp
daa
insl
pushf
mov
lahf
dec
rolb
pop
push
mov
int
sbb
mov
add
je
inc
loopne
and
movsl
jp
loope,pn
mov
sbb
ds
xor
push
icebp
push
and
rcrb
mov
and
mov
add
gs
ljmp
lahf
add
push
sbb
jp
ror
cs
shlb
adc
int
adc
mov
jmp
je
xchg
loopne
loopne
add
sbb
mov
mov
jnp
add
scas
xchg
or
mov
scas
dec
push
fidivl
movsl
loop
sarl
sbb
into
xor
and
popa
bound
je
push
inc
pop
mov
sub
jo
shr
cmp
aaa
mov
test
xor
jle
hlt
int3
call
pop
mov
inc
mov
stos
add
stos
push
add
inc
xchg
adc
decb
inc
mov
js
cmp
xchg
push
jp
imul
and
cmp
push
sub
push
repnz
test
jmp
out
jmp
or
or
rcl
loop
shl
mov
pop
aad
cmp
push
or
nop
or
cld
ret
or
cmp
adc
pushf
or
xor
add
push
pop
push
add
leave
adc
adc
cwtl
cmp
and
call
push
xchg
shrb
lcall
inc
inc
and
dec
push
xor
imul
sub
push
lds
cs
jno
xchg
shlb
sbb
femms
lods
push
jmp
xor
jb
lods
fstpl
int3
pop
movsb
lret
mov
subb
adc
nop
jmp
push
lret
inc
test
imul
add
lock
push
std
jecxz
rorb
nop
sar
adc
sbb
addl
out
shl
add
cmp
xchg
mov
lret
pop
mov
mov
mov
inc
ljmp
jb
xchg
mov
inc
imul
xchg
and
enter
or
nop
jnp
call
adc
insb
mov
in
jno
pop
shll
add
stos
std
jge
mov
inc
rclb
push
push
lsl
dec
scas
pop
les
pusha
or
lea
sbb
cmp
add
sub
mov
push
push
cmp
adc
inc
aam
sbb
adc
pop
mov
sbb
les
stos
dec
mov
orl
mov
add
mov
shlb
hlt
and
enter
sbb
adc
loop
add
or
dec
dec
push
ss
or
int3
xor
sub
div
xor
xor
ror
cmc
inc
add
out
add
rolb
insl
mov
mov
xor
testl
shl
shl
aad
sbb
icebp
and
add
icebp
fwait
jb
lret
jge
rcll
xor
jne
mov
pop
push
popa
xchg
lret
into
or
or
inc
sub
mov
out
shrl
mov
mov
ljmp
sbb
mov
inc
mov
xor
sub
dec
and
loopne
jmp
jbe
cmpsl
sbbb
sbb
decb
push
or
mov
pop
cwtl
and
vcvttsd2si
or
sbb
mov
mov
clc
adc
dec
sbb
sbb
out
jo
ja
sbb
adc
sbb
cmc
pushf
and
dec
lret
mov
cmpsl
xchg
rolb
aas
test
push
mov
xchg
call
sub
pop
es
adc
scas
ljmp
cltd
or
inc
adc
cmp
sahf
or
push
xchg
sbb
clc
xor
xchg
scas
sub
shrb
push
sbb
sbb
push
mov
int
stos
sbb
sub
fstl
xchg
fists
or
sub
pop
cmp
stos
adc
add
stos
xchg
pop
popf
lret
adc
mov
int3
mov
sbb
xor
rcll
mov
and
insl
jle
test
inc
inc
jl
sbb
fildl
andl
push
add
xor
call
and
insl
pop
inc
imul
mov
mov
andb
cmp
pushf
push
push
inc
mov
cmp
push
sbb
inc
add
movsl
dec
sbb
inc
addr16
icebp
and
repnz
adc
cltd
shlb
addr16
jo
xor
pop
mov
sbb
add
test
inc
addb
jae
jnp
faddl
inc
or
dec
push
or
leave
fcoms
or
sub
push
push
add
jle
add
loopne
push
cmp
push
push
sub
inc
lods
test
movntps
int
xchg
sub
imull
adc
mov
test
rclb
jecxz
add
inc
addb
and
add
mov
and
mov
push
pop
rcll
push
into
popf
pushf
jo
jo
push
jb
jo
lods
xor
out
and
cwtl
and
add
cmp
pop
inc
push
jecxz
outsb
pusha
inc
mov
cmp
outsl
pop
xchg
adc
push
nopl
out
inc
pop
xchg
push
mov
pop
jb
dec
add
bound
int3
push
mov
push
inc
xor
mov
and
aad
daa
push
inc
pop
push
andl
push
xchg
sub
pop
nop
mov
inc
icebp
test
cmp
inc
jo
xor
or
xor
test
dec
cli
mov
mov
pushf
push
mov
sbb
inc
hlt
mov
stos
sbbl
adc
mov
mov
int
aad
rcrb
in
sar
mov
addb
add
adc
push
rcr
in
sbb
sbb
es
int
mov
loop
push
rcll
mov
stc
push
sti
mov
push
jns
pop
pop
inc
pop
aad
mov
dec
xor
test
push
add
in
push
or
pop
adc
or
cmc
or
jo
in
seto
lret
dec
mov
int3
sbbb
push
call
inc
add
push
in
adc
push
imulb
repnz
xchg
ss
push
je
enter
daa
mov
std
test
call
add
pusha
add
jno
adc
sub
hlt
or
or
adc
add
cmp
or
je
push
fstpl
arpl
adc
add
lret
sub
xor
loopne
jbe
jmp
push
fidivl
push
mov
push
or
adc
push
ds
push
adc
daa
xchg
sar
daa
call
adc
adc
lds
dec
movsl
push
push
cmp
push
mov
push
adc
dec
xor
and
je
adc
mov
das
pushf
mov
or
mov
add
pushf
push
or
xchg
sti
push
ljmp
gs
add
stos
push
pusha
sub
lds
sbb
inc
ficoml
ret
pop
fisubl
pop
addl
sbb
push
inc
mov
fadds
loop
adc
jmp
hlt
sub
mov
inc
push
lods
push
mov
pop
lds
pmulhuw
sbb
cmpsb
inc
lds
xorb
mov
mov
sbb
push
add
ficoml
fistpl
ljmp
mov
rorb
mov
or
jne
loopne
cmp
xchg
and
cmp
mov
mov
or
jge
fwait
lcall
inc
or
pop
jno
xchg
scas
pop
inc
and
out
jns
aam
mov
movsb
push
das
add
sub
or
test
fimuls
push
add
or
icebp
add
add
les
ljmp
rolb
mov
mov
or
out
add
pop
sbb
aam
jae
fimull
push
adc
cmpsb
mov
pop
xor
mov
sbb
hlt
enter
es
out
cmp
and
mov
aaa
push
inc
test
aam
or
les
adc
fcoml
push
fsubl
cmp
jmp
aam
adc
add
xor
push
fistpl
pusha
out
test
push
les
adc
and
push
pop
push
add
xchg
subl
and
lret
inc
rclb
add
or
shll
or
int
xor
leave
mov
inc
add
shll
sub
or
add
and
mov
push
mov
loope
mov
cmovno
in
out
ret
roll
inc
mov
mov
adc
push
xorb
and
inc
gs
add
mov
inc
xor
jo
shlb
add
enter
cs
add
mov
sbb
and
add
sbb
cli
hlt
jne
and
lock
pop
mov
in
xchg
fstl
and
add
jp
sbb
and
jbe
add
sbb
lods
lock
mov
xchg
pusha
xor
mov
lods
loopne
mov
sbb
jl
push
pop
and
ret
mov
jne
adc
es
fcoms
fs
inc
out
push
inc
push
enter
push
stc
jnp
scas
mov
imul
mov
mov
push
popa
pop
pop
pushf
sarb
pop
mov
ds
mov
lea
aas
push
rcrb
sub
sbb
sarb
int3
add
jno
or
lea
leave
shlb
sub
add
je
or
and
lds
jl
mov
dec
mov
add
and
ja
mov
push
stos
push
mov
scas
decl
mov
pop
rorl
lds
jne
sub
mov
push
loopne
push
xchg
into
shlb
xor
add
add
mov
testl
out
xor
jecxz
gs
cmp
and
lret
xor
adc
rcrl
sbb
sub
aam
icebp
into
pop
push
jae
adc
mov
mov
mov
shlb
add
mov
clc
shlb
stc
jnp
cmp
rcrb
icebp
sub
pop
cmp
jbe
and
pop
push
push
sub
pusha
sti
je
inc
jne
or
xchg
shrb
cmp
loopne
in
sbb
xchg
mov
mov
shlb
pop
mov
movsb
jmp
push
sbb
out
int3
ljmp
jge
jo
mov
setnp
popa
mov
sti
rcrl
lds
scas
push
sbb
lds
jno
test
or
mov
push
inc
push
adc
sbbb
inc
dec
subb
loopne
xor
dec
or
pushf
mov
or
lcall
dec
adc
or
lret
popa
add
lret
dec
dec
add
mov
push
pop
xor
cmpsb
shlb
pusha
icebp
push
cmp
add
push
inc
and
push
shr
or
ljmp
push
inc
call
mov
hlt
pop
fsub
add
orl
sbb
ret
stc
jge
add
cmp
add
and
push
shlb
rorl
adcb
push
sti
mov
lea
mov
mov
push
and
test
adc
test
pop
cmp
jo
push
das
ret
cmpsl
stos
inc
xor
jp
les
dec
aas
dec
adc
inc
inc
mov
adc
xchg
sbb
pop
sbb
mov
rcll
ja
adc
or
add
out
loopne
je
adc
repnz
mov
adc
sbb
and
xchg
push
subl
mov
test
xor
jo
test
inc
loopne
xchg
pusha
pusha
pop
xchg
lock
lock
mov
clc
and
mov
sbb
sbb
icebp
mov
gs
jge
or
dec
clc
sbb
js
push
gs
fwait
sbb
and
rolb
mov
add
fwait
add
lret
xor
mov
push
mov
push
icebp
les
or
xlat
add
dec
jl
add
hlt
mov
loopne
xchg
mov
xchg
jl
xlat
or
add
or
lcall
or
adc
add
sbb
test
and
testl
dec
outsl
dec
outsb
mov
inc
push
shrl
sub
or
mov
je
xchg
mov
rcrl
stc
add
and
adc
icebp
and
mov
rorl
xchg
mov
and
add
xchg
faddl
dec
push
cwtl
push
add
movsl
jb
jp
into
stc
dec
push
xchg
xor
loop
and
jmp
popa
popf
sub
aad
xchg
loop
jecxz
mov
rolb
add
xchg
les
daa
push
xor
sbb
add
pop
and
dec
push
cwtl
mov
jp
jae
adc
inc
xchg
sub
lds
and
out
dec
adc
xorl
sbb
in
subb
shr
adc
push
and
fisubrl
ret
clc
adcb
rcl
jl
stos
cmpsb
pop
add
push
mov
or
lds
inc
pop
push
mov
inc
mov
in
pop
aad
adcl
xor
mov
leave
push
xlat
pop
mov
and
or
xor
mov
inc
rcl
movsl
sbb
pop
cmp
shrb
lock
cmp
adc
es
out
add
jp
test
mov
leave
adc
fnstcw
sbb
sbbl
sbb
pop
lret
leave
xchg
mov
xor
testb
test
in
cwtl
xchg
mov
subl
mov
add
push
jae
sbb
dec
adcl
pop
lods
lret
adc
roll
sbb
arpl
jo
cli
or
sub
sbb
adc
sbb
pop
mov
sbb
inc
pop
mov
repnz
rolb
or
dec
clc
adc
add
addb
mov
outsb
pop
mov
mov
adc
xchg
adc
pop
lock
roll
scas
inc
cld
and
sub
inc
fwait
insb
sbb
mov
mull
fidivrs
mov
jecxz
mov
add
daa
addb
cmp
dec
xorb
push
clc
mov
cmp
mov
add
lock
paddsw
cs
mov
pop
adc
adc
mov
shrb
sbb
mov
and
xor
test
or
daa
mov
add
sbb
adc
sub
inc
cmovge
mov
mov
and
les
mov
andl
data16
push
xchg
add
xchg
pop
mov
mov
and
adc
mov
add
add
mov
adcb
dec
push
rorl
loope
adc
pop
rorl
mov
mov
add
push
add
sbb
push
sbbl
sbb
pop
mov
addb
xchg
jecxz
pop
xchg
sbb
xchg
sub
and
int3
stos
fnstcw
test
xlat
ret
mov
and
mov
test
sub
cmp
add
inc
orb
dec
add
push
orl
add
push
push
ret
or
stc
push
loop
sbbb
push
outsl
inc
mov
shrb
shll
call
jge
clc
sbb
test
and
cmp
sbbb
inc
std
mov
bound
loopne
test
iret
dec
xor
adcb
jp
test
pop
jmp
mov
fldcw
and
mov
adc
popf
fstpl
stos
push
pop
lds
std
testb
or
mov
add
orb
jb
test
push
mov
adc
push
lahf
dec
scas
ret
xorl
subb
dec
push
xor
sub
lcall
add
mov
xchg
psrlq
mov
call
shrb
sub
mov
mov
add
orb
or
or
test
add
push
mov
add
nop
jo
cmp
push
int3
fwait
mov
mov
cld
inc
mov
fcompl
scas
sbb
sbb
dec
add
push
inc
mov
js
pop
adc
sub
mov
out
movsb
dec
jb
mov
push
dec
mov
ret
in
popf
inc
out
xor
jns
add
xor
std
add
rclb
out
lds
adc
js
into
sub
sbb
push
add
call
outsl
pushf
or
ret
mov
ljmp
jno
push
sub
call
sbb
pop
push
inc
cmpsl
rolb
mov
leave
mov
add
lds
push
mov
sub
shll
sbb
adc
arpl
adc
xor
cwtl
aam
pop
insl
sbb
mov
jb
push
nop
sbb
add
mov
push
fbstp
mov
inc
pop
mov
or
mov
cmp
enter
mov
dec
xor
add
punpcklbw
inc
or
andb
aaa
jle
loop
shl
cmp
lret
xchg
or
in
rclb
rorl
push
cmp
xlat
rolb
adc
adc
xor
fwait
andb
sub
add
pop
or
in
and
mov
jae
jmp
dec
loope
in
sbb
das
and
sub
test
rclb
mov
std
jno
and
stos
cmp
pop
or
sub
into
shrb
sub
imul
js
stos
push
inc
sbb
shrb
mov
mov
xchg
and
push
lock
out
les
pop
test
inc
sub
mov
cmc
xchg
sbbb
imul
or
push
scas
cltd
or
add
push
loopne
stos
out
and
xor
sbb
test
inc
repz
jne
stos
jo
das
in
push
inc
test
shll
and
xchg
stos
add
xorb
nop
shrl
lret
xor
cmp
lock
test
lcall
add
std
pop
test
sarl
inc
cs
inc
ljmp
lds
aam
mov
in
ret
push
mov
mov
xchg
std
pop
ret
stos
push
push
aas
dec
add
mov
adc
push
fucomip
mov
int
mov
addl
dec
pop
cli
sub
enter
dec
cld
rclb
call
fucom
adc
enter
jno
lds
mov
add
cld
sbb
mov
xchg
addb
xchg
nop
daa
sahf
pop
cmp
stos
frstor
xlat
scas
jecxz
and
movsb
shlb
push
lods
out
sub
or
push
xchg
rclb
jo
push
mov
les
jb
mov
lods
or
in
mov
rolb
negl
adc
inc
mov
dec
stos
push
push
inc
sbb
sub
or
les
cmp
aas
pop
dec
pop
and
xor
icebp
sub
xlat
xchg
adc
rclb
ja
add
inc
dec
lret
and
push
lcall
mov
cmp
scas
or
icebp
out
cmp
fs
sub
and
or
inc
pop
sub
add
sub
push
adc
pusha
push
insl
inc
jne
enter
push
push
push
or
inc
daa
loop
pop
or
jo
test
mov
sub
cs
jp
sbb
test
lret
cmp
test
les
mov
add
je
sbb
push
pop
xchg
adc
pop
aam
popa
and
cmp
jne
or
inc
inc
push
and
notb
pop
fsts
adc
add
mov
jmp
js
add
mov
test
mov
pop
ret
dec
adc
cmpsb
cmp
push
icebp
fstpl
pop
dec
sbb
jbe
cli
push
inc
cs
int3
sub
lods
aaa
sbb
rclb
ja
mov
lahf
adc
push
xchg
mov
addb
adc
adc
jl
or
pushf
dec
push
rcl
lret
xchg
js
xchg
sub
dec
test
leave
push
scas
loop
leave
push
push
adcb
pusha
test
jp
js
xor
push
or
cmp
inc
add
jo
mov
movsl
push
jp
dec
cwtl
icebp
mov
fsubs
int3
push
mov
cmp
pop
add
lret
jo
testb
orb
mov
test
lret
stos
xchg
mov
inc
lods
xchg
and
xchg
and
lea
push
movsl
jo
pop
call
and
push
push
pop
loopne
xchg
add
lret
sarb
test
add
jo
and
pop
adc
sbb
roll
imul
pop
das
jbe
xor
js
dec
test
call
in
and
and
add
loopne
xor
out
jae
pushf
imul
inc
lds
mov
jecxz
loopne
aad
xchg
in
test
subb
and
les
mov
fiaddl
cmp
scas
shll
test
pusha
or
xorb
adc
dec
push
mov
mov
pop
add
dec
push
fst
mov
push
dec
push
roll
sub
adc
add
pop
inc
inc
sbb
mov
lock
sbb
stc
sbb
lds
lcall
stos
pop
nop
rorl
xor
xchg
and
call
xor
mov
pop
push
sub
insl
repz
addl
clc
xchg
push
mov
add
add
push
pop
adc
or
push
cli
icebp
mov
roll
xchg
fists
xchg
push
stos
cli
movsb
push
add
or
subb
xchg
dec
mov
in
and
lods
add
rorb
mov
stc
cmp
cld
mov
push
gs
cltd
pop
mov
jle
mov
vcvtsd2ss
and
cmp
xor
fdivs
jle
int
movsb
or
dec
mov
mov
jns
xchg
and
push
fisttpll
sbb
loopne
loop
push
popa
mov
push
cs
push
xor
add
call
mov
jo
and
es
scas
push
hlt
mov
fadds
faddl
fildl
add
mov
sbb
or
or
pop
cmp
inc
inc
rcrb
add
pop
mov
or
orl
xchg
sub
bound
lcall
xor
push
or
push
cmp
or
andb
sub
imul
shll
inc
push
sarl
adc
adc
push
push
test
mov
aam
pandn
ret
inc
inc
mov
and
mov
jno
mov
mov
addl
roll
jmp
cmp
sbb
popa
ud1
mov
cmp
cmpl
addb
mov
or
outsl
rolb
stc
stos
cwtl
and
push
fs
mov
mov
xor
push
push
sbb
loop
movsl
adcb
pop
inc
out
ret
notl
add
adc
imul
lea
scas
jp
sarl
pop
pop
arpl
pop
adc
mov
sbb
adc
pop
aam
pop
jmp
or
or
mov
pushf
sbb
mov
inc
adc
push
scas
data16
jge
cmp
sub
mov
add
test
add
or
mov
add
or
push
out
fmull
iret
hlt
dec
dec
outsb
add
dec
push
pushl
or
stos
es
adc
into
stos
mov
or
inc
cmc
in
or
mov
movsl
rorl
test
out
shll
pop
jno
push
jp
aas
fistl
sbb
roll
cmp
sbbl
cmp
scas
dec
call
adc
or
or
dec
js
das
dec
mov
cmpsl
mov
pushf
mov
cmp
inc
movsl
cmpl
xlat
imul
cmp
rol
std
out
fdivrs
out
or
les
ret
or
xor
sub
dec
loope
xor
jae
xchg
push
xor
addl
push
push
sbb
lcall
punpcklwd
adc
rorb
pop
xorb
std
xchg
rcl
sbb
inc
stos
dec
inc
push
stos
mov
jp
or
loop
cmp
lea
xchg
es
inc
jne
adc
cmp
or
adc
dec
jp
inc
ret
inc
cltd
movsb
sbb
mov
push
mov
and
and
and
jmp
out
sbb
fisubrl
repz
sbb
adc
adcb
sub
xorb
xchg
fnstcw
testb
mov
lods
cmp
xchg
rcll
inc
xlat
lahf
stos
mov
jne
leave
mov
pop
adc
loopne
ja
push
test
cltd
out
and
xor
inc
test
add
sti
push
push
mov
hlt
out
popa
jnp
popa
sbb
ja
inc
push
push
pop
into
sbbl
insl
imul
adc
adc
mov
mov
mov
push
and
cmp
and
mov
mov
adc
pushf
sub
lds
dec
push
xorl
add
fmuls
adc
push
scas
push
inc
arpl
or
fimull
lods
adc
aad
add
xorb
js
in
cld
sbb
mov
notb
add
mov
xchg
orb
adcl
sbb
cld
leave
inc
or
push
adc
movups
enter
mov
mov
add
cmpsl
or
xor
dec
sahf
popa
jle
cmp
add
std
stos
jo
xchg
outsb
sub
mov
aad
call
xchg
iret
stos
aad
mov
pop
pusha
loopne
and
aaa
ss
or
iret
in
ret
pop
cmp
daa
stos
inc
adc
xchg
cmp
cmp
mov
push
or
stos
inc
adc
add
sbb
loope
shrb
adc
test
in
push
pop
push
mov
sbb
or
push
adc
dec
loope
mov
js
push
xchg
adc
dec
cmpsb
pop
and
repz
and
pop
orb
adc
shrl
jb
adc
pop
jo
imul
mov
sbb
fstl
test
jg
or
mov
shrb
and
sahf
add
pushf
inc
jg
imulb
push
mov
fsubl
ret
mov
aad
int
mov
xchg
or
pop
xchg
mov
stos
shlb
inc
mov
in
pop
test
sbb
ret
cltd
sahf
out
popa
xchg
cmp
incb
lds
or
fs
rcll
loopne
xchg
lock
sbb
cli
sbb
add
sbb
mov
pop
imulb
push
mov
cmp
aad
dec
push
lret
hlt
ljmp
add
subb
icebp
xchg
jae
es
xchg
push
xor
add
xchg
push
ljmp
call
mov
test
push
mov
add
mov
xor
push
mov
mov
push
cmpsb
and
or
add
or
jg
mov
adc
jo
imul
lahf
dec
call
add
push
add
sbb
shlb
mov
jecxz
mov
or
add
sub
scas
add
es
push
and
pop
loopne
popa
out
jo
lods
mov
xor
je
push
test
rcrb
push
mov
pushf
jo
fstpl
push
test
cs
cmpl
imul
push
sbb
rorl
or
dec
push
sahf
nop
mov
cltd
mov
sbb
adc
in
adc
xchg
sbb
lcall
fldpi
sub
out
pop
xchg
or
adc
cmc
xorb
pushf
inc
adc
sbb
fisubl
pop
mov
push
or
xor
push
add
inc
mov
dec
mov
push
sub
sbb
jbe
mov
add
lock
ldmxcsr
push
ror
stos
bound
aad
in
scas
jl
xor
adc
add
idivl
mov
add
inc
shll
call
or
inc
dec
mov
add
jl
push
xchg
or
cmp
mov
sbb
sbb
lret
push
pop
xchg
push
cmp
in
jns
adc
rcrl
stos
loopne
pop
push
push
sbb
add
sub
cmc
je
test
into
cmp
dec
add
or
scas
pusha
add
lock
cltd
cmp
repnz
in
mull
inc
mov
push
push
sbb
fprem1
xchg
add
jb
cs
inc
test
loop
pop
pop
rolb
lea
sbb
sub
add
pop
dec
mov
inc
push
test
repnz
jge
cli
inc
inc
or
push
adc
push
shll
adc
orl
dec
andl
push
jo
push
lcall
mov
or
adc
movsb
rolb
sub
test
sarb
pop
and
stos
rcrl
fwait
les
lods
add
sahf
mov
xchg
enter
ret
inc
je
in
repnz
mov
adc
pop
xchg
pop
or
inc
mov
lret
and
push
je
push
shl
mov
push
adc
jb
add
sbb
movb
push
sub
xchg
mov
adc
adc
invd
insl
mov
sbb
shl
out
adc
mov
adc
add
sub
jl
cmp
adc
aad
sbb
push
jns
xchg
adc
dec
or
out
inc
popa
or
jo
pop
les
push
nop
sub
inc
daa
mov
fidivl
push
xchg
sbbb
pop
adc
cs
sub
jne
aad
cwtl
jnp
out
sub
or
add
js
adc
and
adc
push
xor
mov
jnp
add
inc
push
adc
sub
ss
rcll
or
call
push
sub
xchg
insl
xchg
fwait
popl
cmp
test
pop
lret
leave
push
stos
sbb
jno
loopne
out
adc
inc
hlt
pop
or
pushl
mov
push
xor
push
shlb
dec
in
mov
loopne
int3
sbb
popf
aam
shrb
mov
inc
xor
adc
jb
mov
add
scas
or
push
cmp
mov
mov
rorb
orl
addb
pop
pop
les
xor
inc
adc
push
xor
mov
mov
and
mov
sbb
add
shll
mov
mov
push
or
inc
outsl
pop
cmovne
sbb
xor
stc
fwait
rcrl
inc
out
rolb
enter
out
addb
push
adc
push
cmp
mov
stos
or
jl
dec
cmp
add
rolb
xor
sbb
mov
adc
and
mov
push
xchg
and
xchg
cmp
sbb
imul
jbe
aam
push
cmp
mov
xlat
sub
mov
add
sub
mov
push
aad
je
sub
mov
mov
mov
or
roll
push
lods
xor
mov
lret
hlt
out
or
lock
sub
mov
and
cs
jbe
xchg
push
cmp
cli
and
jb
adc
sbb
cmp
sbb
je
ret
je
les
stos
and
adc
push
es
mov
pop
add
popf
call
sahf
sahf
xorb
pop
sbb
mov
clc
sbbl
adcb
lcall
into
ss
mov
cmp
mov
inc
out
lcall
test
mov
andb
add
popf
orb
xchg
orl
movsl
mov
aam
js
xor
pop
cld
fists
sub
movl
sti
out
lahf
outsl
pop
add
adc
add
push
cld
stc
repz
test
pop
lods
dec
clc
iret
lahf
aas
jg
ss
pop
inc
sbb
and
dec
xor
stc
repz
lahf
xchg
xchg
sahf
sbb
imul
lahf
aas
jg
or
inc
jl
mov
lock
stc
repz
pop
filds
arpl
xchg
daa
sahf
pop
adc
cld
xchg
push
sbb
push
dec
dec
movsl
stc
push
lahf
xor
movsl
sbb
test
arpl
xlat
cmc
lret
or
pushf
stc
lahf
adc
iret
lahf
jg
pop
xchg
add
int
inc
outsl
mov
or
inc
jp
lahf
cwtl
in
adc
imul
mov
cmpsb
stos
dec
inc
inc
or
cld
ret
flds
or
imul
jns
mov
fadds
xor
arpl
ficomps
and
sbb
ja
jge
js
loope
and
or
lret
mov
and
jo
sahf
mov
cmp
cld
lahf
jns
adc
pop
mov
sbb
out
lahf
out
pusha
fadds
pop
xor
fs
cld
stc
push
ret
in
sbb
add
jno
aam
push
shl
iret
lahf
aas
rclb
add
loopne
cld
stc
repz
aaa
loopne
dec
clc
std
stos
push
jne
aaa
jp
cs
or
aam
test
testl
arpl
cld
stc
repz
pop
aaa
aaa
es
fcompl
push
mov
iret
lahf
aas
jg
push
add
xchg
xchg
jno
stc
repz
fnstenv
push
lods
dec
adc
sbb
jecxz
movsb
dec
mov
out
cmpsl
gs
or
cld
cld
stc
rep
sub
cmc
dec
or
test
fistps
pop
movsl
jae
inc
js
xchg
inc
cld
stc
rep
cmp
pop
mov
ljmp
in
push
lret
je
and
stc
repz
lds
pusha
in
sub
pop
pop
dec
dec
inc
call
mov
mov
inc
sub
push
or
test
out
lahf
jmp
adcl
jle
cld
cld
stc
popf
incb
or
ljmp
lahf
jg
sahf
fiaddl
inc
cmp
iret
sbb
adcb
mov
aas
jg
cld
cmovns
nop
and
outsb
mov
lahf
in
scas
mov
or
add
and
sti
fstps
stc
repz
xor
cmp
aas
jg
cld
push
jecxz
push
sub
ficoml
ja
pop
pop
or
repz
lahf
sbb
cmpsb
shl
sti
inc
inc
iret
out
mov
cld
stc
mov
subl
shlb
out
lahf
aas
jge
add
movsb
add
imul
insb
or
jns
pop
xchg
into
ret
cwtl
lahf
aas
jg
dec
sbb
sub
data16
stc
repz
popa
in
dec
xchg
loopne
xchg
and
aas
jg
cld
mov
mov
out
or
repz
lahf
out
or
sub
dec
mov
out
lahf
jg
cld
stc
inc
jno
pusha
repnz
push
pusha
lcall
out
lahf
aas
stos
pop
ret
orl
push
pop
aaa
xchg
ja
cld
stc
repz
push
out
out
mov
lock
fisubl
jle
iret
lahf
aas
jg
repnz
dec
idivb
iret
int3
xor
repz
lret
add
clc
sub
pop
roll
int3
push
lahf
aas
jg
dec
iret
in
js
mov
push
movsb
sbb
stc
repz
adc
xchg
xor
add
dec
movsl
pop
enter
jg
cld
mov
popa
andb
or
out
xchg
inc
lock
dec
jns
iret
lahf
or
push
dec
push
sarl
cld
mov
pop
inc
cmp
mov
iret
lahf
push
stos
shlb
and
cmp
aas
jg
stc
hlt
movl
sbb
iret
lahf
sub
cmp
insl
fst
mov
jg
cld
stc
sub
es
sbb
xchg
negb
jp
xor
iret
lahf
aas
outsb
xor
mov
inc
and
mov
or
fsubl
mov
bnd
movsb
sub
out
scas
test
jecxz
mov
je
cld
stc
repz
addb
mov
mov
mov
repnz
lahf
inc
jbe
or
push
ret
push
push
cld
stc
repz
cltd
xor
lcall
cmp
mov
pop
cmp
sti
leave
out
jns
inc
popf
push
test
add
stos
movq
mov
dec
and
jae
aad
out
lahf
aas
cmpsl
lods
mov
sub
daa
cld
stc
repz
lahf
xor
arpl
xchg
lret
lret
popf
adc
lahf
aas
jg
lahf
inc
je
mov
fwait
xchg
mov
repz
mov
stc
sbb
jg
jp
mov
ficompl
stc
repz
or
mov
das
outsl
jg
cld
jmp
xchg
outsb
fdivp
fdivrs
pop
and
sbb
inc
repz
lahf
push
mov
movsl
mov
xchg
push
jp
jg
cld
stc
xor
cmpsl
cmpsb
cmp
or
xchg
jmp
out
lahf
aas
adc
xchg
jmp
les
invd
mov
out
lds
inc
iret
lahf
aas
jg
jae
leave
pop
adcl
leave
aad
stc
repz
push
loop
lea
in
insb
add
lahf
aas
jg
mov
jmp
dec
jo
cmpsb
push
imull
stc
repz
pop
sbb
dec
jmp
orl
cld
sub
push
push
pop
repz
dec
mov
jo
out
lahf
fbstp
orl
jnp
mov
stc
lods
fildll
mov
fcoms
scas
js
iret
lahf
aas
xchg
adc
fldenv
repz
cltd
pop
adc
test
stos
fisttpll
xchg
aas
jg
xchg
test
jne
ljmp
xor
lahf
mov
pop
lods
cs
cltd
js
insl
clc
cld
stc
repz
imul
xor
xor
arpl
jecxz
imul
adc
or
out
ret
iret
fwait
je
adc
push
aas
jg
cld
or
ss
mov
rclb
repz
lahf
add
cltd
xor
in
ss
pop
cmpsb
pushf
loop
jg
cld
stc
insl
fwait
aas
inc
xlat
dec
or
hlt
add
loope
stos
mov
aas
pop
sahf
xchg
int
fiadds
or
repz
or
fwait
or
add
iret
lahf
aas
jg
mov
arpl
ret
push
mov
pop
test
xor
subb
sbb
and
jg
iret
out
mov
lods
push
push
xor
stc
repz
sub
sub
shrl
lods
lahf
aas
jg
cli
dec
insb
adc
cli
mov
out
test
inc
orb
pop
pop
mov
add
sub
repz
mov
daa
inc
sbb
addr16
jg
cld
stc
sub
jae
add
push
out
mov
inc
dec
out
lahf
aas
fwait
push
les
andl
lock
push
filds
sbb
jg
add
iret
lahf
aas
jg
rclb
out
fsts
lods
cld
stc
repz
repz
lahf
jge
cltd
cltd
xchg
mov
pop
push
lock
xor
xor
mov
mov
out
ds
mov
adc
inc
mov
mov
cwtl
ret
push
inc
lock
out
adc
jne
fs
or
sub
jg
cld
add
jg
cmp
lods
leave
aas
dec
dec
lods
daa
add
out
lahf
jmp
test
lret
or
cmp
cld
stc
cmp
popa
nop
aaa
lret
pop
push
scas
push
pop
inc
adc
and
lahf
aas
push
sbbl
mov
repz
mov
arpl
lahf
aas
jg
push
repz
insb
iret
xchg
call
data16
stc
repz
inc
fisubs
hlt
cli
jl
enter
aas
jg
or
xchg
mull
aam
cmp
pop
test
fs
repz
cmpsl
xchg
mov
divb
pop
sbb
jg
cld
lret
mov
cmc
push
shlb
scas
mov
lahf
movsb
scas
add
fidivrs
out
jns
cld
stc
sub
cmp
aad
pusha
scas
mov
iret
lahf
aas
stc
mov
out
jae
test
cld
stc
rep
or
subl
xor
pop
iret
lahf
aas
jg
dec
cmp
outsb
sbb
fs
adc
stc
repz
cs
popf
bound
adc
test
and
inc
push
stos
std
mov
stc
repz
dec
call
pusha
mov
mov
shrb
jg
cld
arpl
cmp
mov
aaa
xor
mov
repz
lahf
outsb
gs
inc
jne
filds
jg
cld
stc
mov
out
jmp
into
xlat
mov
xchg
jnp
call
or
jnp
les
xchg
jno
lahf
aas
call
lahf
das
insb
xchg
cwtl
scas
int3
mov
pop
scas
stc
stc
repz
imul
adc
outsl
iret
lahf
aas
pop
jp
mov
adc
xchg
fwait
cld
stc
repz
std
xchg
lds
in
lods
inc
out
repnz
lahf
aas
jg
cmp
xchg
les
fwait
scas
mov
repz
repnz
or
fisttps
imul
repz
flds
push
xchg
fistpll
jg
cld
fadds
data16
mov
in
add
test
lahf
dec
mov
sub
popf
dec
outsb
pop
jg
cld
stc
add
cmpsb
mov
add
sbb
mov
aas
or
dec
out
rorl
cld
stc
repz
jg
shrb
ret
cmpsb
daa
out
jle
inc
cmp
cmp
stos
pop
cmc
jle
testl
sahf
mov
addr16
adcl
iret
mov
pop
fadd
push
pop
cld
stc
repz
jmp
or
aad
sbb
ljmp
ret
mov
orl
stc
repz
arpl
into
ficoml
stos
dec
sbb
and
mov
sbb
cld
loope
lahf
loop
adc
and
xlat
pop
sub
mov
aas
jg
fdivs
enter
out
test
repz
mov
daa
repz
dec
data16
aas
jg
movsl
stos
shrl
bound
push
lret
jae
repz
cmp
cmp
shll
aas
jg
cld
or
test
mov
testl
lahf
testb
pushf
hlt
mov
pop
adc
lahf
test
cld
stc
sub
sbbl
cmc
sbb
iret
inc
stos
add
pop
fsubl
aas
enter
test
inc
outsl
fidivrs
cmp
iret
mov
xor
outsb
out
fwait
aaa
and
xchg
dec
inc
dec
jecxz
out
jp
aas
pushl
pop
xchg
jbe
mov
xchg
fdivr
pop
out
sub
dec
int
aaa
outsl
xor
and
adc
int3
pop
outsb
dec
jge
mov
rorl
shl
lahf
xor
xchg
xor
xchg
push
cltd
neg
mov
push
sbb
out
nop
std
push
inc
xchg
cwtl
jmp
fnstcw
lahf
mov
js
addr16
inc
xlat
cli
jbe
repz
inc
call
jnp
xor
or
pusha
aas
jg
cld
movsl
add
pop
adc
iret
addr16
lock
xor
lahf
inc
fidivs
out
cld
fistl
mov
dec
dec
stos
outsl
mov
iret
lahf
aas
sub
mov
jmp
push
in
shlb
pop
dec
jl
iret
lahf
aas
sbb
xor
or
and
jl
cld
stc
xrelease
or
pop
fcmovb
pop
pop
push
sarl
aas
jg
and
les
repz
lahf
sarl
sub
mov
jg
cld
stc
xchg
nop
or
cmpsl
push
sbb
mov
mov
aas
je
aad
rcrb
mov
cld
stc
repz
push
mulb
mov
inc
push
je
iret
lahf
aas
jg
ret
jo
daa
cmpl
aas
icebp
xchg
jnp
scas
in
lods
out
mull
push
cmp
stc
repz
fsubl
iret
xor
stos
out
aas
jg
cld
push
push
or
div
rcr
sbb
in
xor
iret
lahf
ret
mov
mov
jo
out
xchg
cld
jg
cld
stc
jle
fisubs
shlb
adc
push
pop
xor
in
test
iret
lahf
aas
subb
inc
dec
adc
xchg
iret
mov
cmp
enter
repz
es
jg
iretw
push
push
add
aas
jg
xchg
aam
jp
fwait
notb
or
stc
repz
enter
jle
xor
ljmp
cld
fwait
popf
imull
outsb
xchg
leave
repnz
repz
lahf
out
jns
or
push
cmp
popa
jg
cld
stc
push
pop
pop
pop
bound
or
das
xor
aas
sbb
imul
mov
iret
lahf
aas
in
ss
push
ss
popf
mov
repnz
add
repz
out
test
adc
ljmp
mov
dec
adc
mov
into
cmp
inc
push
enter
sub
div
call
add
sub
nop
push
imul
or
xor
pop
push
out
lahf
aas
pop
cmpsb
dec
xchg
cld
sti
int
stos
add
outsl
insb
and
repz
xor
roll
das
iret
inc
jle
jl
jg
je
and
push
cmpsb
std
mov
or
xchg
aas
or
jle
ds
mov
pop
cmpsl
mov
pushf
mov
dec
out
fwait
lahf
shr
filds
repz
inc
rcr
sub
adc
and
divl
outsl
fidivrs
movsl
stos
pop
mov
xor
ds
repz
fwait
lods
repz
lds
cmp
jmp
outsl
fidivrs
add
cmc
mov
pop
test
out
fwait
aaa
inc
inc
inc
sub
adc
mov
mov
enter
push
ds
sbb
fidivrs
fdivr
add
inc
mov
inc
inc
sub
les
aam
xchg
or
jp
repz
sub
es
aas
out
lahf
aas
outsl
xor
push
xor
mov
cld
stc
repz
or
sub
jae
mov
bound
stc
cmpsl
push
pop
inc
cltd
insb
popa
or
aas
pusha
cld
stc
repz
xor
xchg
loope
loope
mov
lahf
aas
jg
jl
or
rol
push
sbb
mov
out
xchg
adc
pop
dec
or
cld
push
lods
xor
sub
rcr
rol
int
arpl
aam
loope
mov
mov
cld
stc
rcll
lock
mov
sub
dec
dec
jle
lea
movsl
in
mov
out
mov
cmpsb
mov
sub
cld
stc
daa
mov
dec
mov
popf
push
out
lahf
aas
jl
jnp
aas
jg
mov
out
adc
cld
stc
repz
jns
daa
jl
insb
jp
inc
loop
out
lea
stos
mov
mov
stc
repz
mov
jae
call
iret
lahf
aas
jg
mov
aaa
insb
pop
popa
lret
cld
stc
repz
movsl
js
push
add
aam
jb
daa
dec
adc
aas
jg
mov
ja
fwait
mov
hlt
stc
repz
pop
dec
jne
divb
into
mov
adc
fidivrl
dec
mov
repz
jb
cmp
mov
dec
mov
jg
cld
or
dec
loope
mov
and
repz
lahf
mov
xlat
xchg
inc
xchg
push
or
imul
cld
stc
imul
xor
out
adc
xchg
out
lahf
aas
push
ret
scas
cmc
pop
test
push
xlat
mov
cld
stc
repz
movsb
xchg
rclb
test
cs
iret
lahf
aas
jg
push
lods
push
push
sbb
inc
inc
mov
jne
pop
or
loope
xchg
mov
or
aam
mov
ds
pusha
int
aaa
outsl
or
cmc
stos
imul
lahf
aas
icebp
xchg
ret
cmp
xor
push
sbb
stc
repz
shl
lea
lea
test
aas
jg
cld
ret
xor
pop
pop
add
sti
xchg
push
ds
pop
enter
pop
aaa
xor
dec
in
mov
and
rorl
rol
fnstcw
inc
in
cmp
adc
push
or
mov
stc
inc
pop
mov
jo
aas
aaa
outsl
out
mov
fwait
outsb
enter
jns
out
pop
xchg
mov
enter
fidivrs
pop
add
or
jmp
out
fwait
mov
cmp
lret
jne
repz
jb
aaa
testl
stos
int
test
push
sub
jecxz,pt
adc
out
mov
daa
rcr
shlb
mov
addr16
aaa
outsl
fisubrs
adc
mov
loop
cmp
in
push
data16
cmpsl
je
jns
out
push
push
int3
cli
fsub
jcxz
add
aas
sub
movsb
push
pop
push
cld
cmp
outsl
mov
repz
repnz
adc
rcl
in
mov
dec
jle
cld
repnz
push
or
lods
stos
jbe
cld
xorl
aam
or
lahf
aas
push
stc
add
jg
sahf
add
imul
cld
stc
repz
push
adc
stos
pop
pop
xor
mov
inc
out
jmp
lods
scas
test
push
cld
stc
repz
enter
pop
jnp
lea
lahf
aas
jg
loop
aam
out
mov
loopne
and
daa
cli
repnz
add
test
ljmp
out
jno
aaa
les
sti
or
repz
imul
sbb
xor
movsl
cmc
cmc
pop
aaa
outsl
fidivrs
and
mov
insb
mov
repz
fwait
sbbb
popa
mov
lods
jo
outsl
fidivrs
adc
add
pop
cmp
push
out
fwait
aaa
mov
icebp
imulb
cld
jnp
push
push
movsb
lret
outsl
and
icebp
call
aas
jg
andb
cli
lahf
shrb
ja
aas
cmp
imul
mov
sbb
fst
es
jbe
jmp
lds
mov
pop
stc
das
aas
jg
cld
push
cpuid
cmp
out
dec
dec
mov
add
out
lahf
gs
ss
rcl
popa
add
cltd
repz
sbb
stc
push
xchg
lcall
fwait
aaa
outsl
add
mov
and
enter
jne,pn
adc
mov
jg
jno
pop
sbb
inc
arpl
out
cs
lahf
aas
outsb
cwtl
xchg
aas
pop
xor
pop
cld
stc
repz
das
inc
pop
xlat
mov
adc
dec
in
iret
lahf
aas
jg
and
aam
out
and
cltd
aam
enter
rcr
and
ss
cld
stc
jbe
push
sarb
lds
rol
std
out
lahf
aas
push
or
jnp
jnp
jmp
cld
cld
stc
repz
sbb
mov
mov
pop
sbb
outsb
jns,pn
xor
mov
xchg
and
mov
inc
sbb
aaa
out
mov
and
sub
jns
out
iret
xchg
test
add
xor
cmpsb
int3
push
outsl
fidivrs
push
pop
xor
cltd
pop
pop
clc
mov
fwait
cvtps2pi
fcmovne
dec
adc
dec
outsb
fidivrs
cli
stos
jge
fisttpll
sbb
push
jo
dec
xlat
dec
mov
sub
lock
add
fwait
aaa
outsl
fisubrs
stc
add
or
sbb
jns
out
sbb
arpl
push
push
bound
jnp
aad
outsl
fidivrs
xlat
dec
sbb
pop
cmp
shlb
fsubl
and
rcll
out
dec
in
in
and
xchg
mov
das
test
sbb
test
outsl
iret
lahf
jg
sbb
jmp
jmp
das
mov
sub
jns
cmpsl
insb
fidivrs
and
dec
mov
pop
add
aaa
outsl
stos
or
push
pop
in
mov
aam
jl
xchg
or
xor
aas
mov
mov
test
movsl
mov
xchg
ds
and
out
lret
aaa
outsl
fsubp
lock
push
or
lds
jle
cld
jmp
mov
or
cld
and
fstl
ss
push
xor
jmp
pop
mov
mov
aas
jg
xchg
leave
mov
nop
popf
cmp
repz
or
add
jo
dec
in
xchg
aas
jg
cld
push
dec
and
sbb
fnsave
subb
jne
jb
out
lahf
fnstenv
dec
add
dec
dec
mov
jg
cld
stc
adc
clc
sti
movsb
shrl
rcl
ja
sbb
lahf
aas
adc
mov
sarl
cld
stc
repz
leave
cmp
call
push
inc
cmpl
out
sub
or
cld
stc
repz
hlt
lock
scas
scas
cmc
nop
mov
negl
rcrl
lahf
aas
jg
cmp
sub
in
xchg
repz
stc
mov
cmp
lods
pop
push
adc
iret
lahf
jg
mov
jb
call
pop
popf
gs
sbb
repz
add
sbbb
cmpsl
in
jo
fstpl
xchg
fs
outsl
fidivrs
ss
scas
jecxz
pop
scas
mov
repz
fwait
or
xchg
dec
popl
add
outsl
fidivrs
bound
fidivl
sbb
mov
stos
inc
sub
add
inc
mov
sti
stos
test
mov
or
push
clc
mov
add
int
aaa
outsl
lcall
and
mov
repz
or
imul
loop
mov
daa
fwait
aaa
outsl
fidivs
negb
out
and
adc
stc
scas
arpl
cmpsl
jg
cld
stc
cmp
mov
fs
rorl
mov
aas
std
jns
mov
mov
stos
cs
inc
inc
dec
pop
xor
mov
cmp
repz
mov
mov
pop
aaa
outsl
fidivrs
jae
mov
loopne
push
repz
fwait
push
cmc
movsl
mov
stos
call
fidivrs
xor
adc
ja
out
fwait
aaa
ljmp
and
pushf
icebp
cld
fidivrs
js
push
push
add
aas
cs
push
sarb
jp
and
sub
pusha
lcall
aad
cmpsl
std
movb
adc
inc
popa
daa
xor
sub
push
push
lret
repz
fwait
bound
xor
fists
fidivrs
adc
mov
movsb
stos
stos
or
out
fwait
aaa
out
adc
xor
xchg
aad
inc
push
or
jnp
repz
js
push
lcall
lahf
aas
jg
aaa
addr16
pop
inc
push
or
sub
sub
repz
jno
pop
cmp
loope
ret
addl
and
sahf
movsl
movsl
and
rclb
xchg
lahf
aas
fs
lret
stc
repz
mov
dec
cmpsl
pushf
ja
adc
mov
repnz
xor
repnz
out
and
addr16
rcrb
push
xor
repz
mov
mov
int
subb
pop
pushf
shrl
imul
in
mov
pop
lods
sub
adc
push
mov
shrb
ret
test
fwait
aaa
out
pop
fisubrl
or
inc
push
add
inc
mov
aam
push
imul
repnz
xor
mov
out
fwait
aaa
outsl
fsubrp
mov
jno
insb
xor
mov
test
int
jae
jp
rorl
test
fidivrs
movsl
xchg
cmpsb
mov
repz
fwait
arpl
xchg
int3
gs
dec
pop
insl
xor
outsl
fidivrs
sub
sbb
jg
lret
mov
aaa
mov
inc
inc
inc
inc
ljmp
ds
sub
push
pop
pop
dec
outsl
fidivrs
inc
inc
adc
push
jo
inc
lcall
pop
aas
jge
lahf
aas
jg
jge
js
and
jne
sub
cld
stc
repz
loope
lcall
addr16
mov
sub
mov
sbb
sbb
dec
cld
sbb
movsl
mov
sbb
sbb
popl
aaa
outsl
jmp
adc
xchg
cmp
cmp
cmp
inc
mov
loop
pop
gs
outsb
ljmp
fimuls
sub
mov
scas
outsb
mov
les
sub
aam
jns
cmp
and
mov
mov
in
into
fwait
aaa
outsl
ficoms
out
hlt
pop
pop
inc
inc
push
rcll
adc
dec
cld
loope
push
xchg
cltd
lcall
push
std
cmpsb
dec
and
jg
xchg
lret
scas
mov
stc
stc
repz
ja
mov
mov
outsl
mov
add
movntps
aad
xchg
inc
testl
fisttps
fs
jno
int
aaa
mov
test
cmp
bound
lcall
adc
mov
ds
les
scas
mov
sub
leavew
int
aaa
push
dec
mov
mov
jnp
in
dec
adc
outsl
fidivrs
cmp
sub
mov
push
je
out
xchg
test
idivl
repz
mov
and
xchg
lret
push
mov
flds
xchg
push
push
stc
inc
faddl
cmpsb
stos
xor
sarb
gs
stc
or
stc
movsl
sahf
fwait
aaa
outsl
faddp
shll
mov
icebp
or
out
cld
jns
out
fldl
rclb
cli
getsec
outsl
fidivrs
lcall
push
mov
out
mov
fidivrs
mov
out
fdivs
and
add
int
aaa
cli
gs
cld
mov
iret
fidivrs
addb
hlt
pop
ret
test
push
cmp
and
shlb
mov
fistps
jl
repz
sti
div
mov
sti
adc
push
out
lahf
jg
cmpsl
int
push
movsl
in
xchg
mov
repz
outsb
scas
out
push
leave
iret
lahf
aas
jg
and
js
cmp
xlat
add
icebp
cld
stc
repz
int
imul
lock
pop
adc
push
mov
aas
jg
push
in
pop
pop
jp
mov
push
mov
stc
repz
mov
fidivs
es
ret
aas
jg
cld
or
int3
enter
inc
add
and
mov
sbb
xchg
lahf
popa
cltd
popl
add
or
sub
repz
loop
xchg
fdivs
dec
sbb
fnstcw
add
dec
dec
cld
stc
repz
jb
cmp
das
inc
add
aas
jg
cmp
cld
cmpsl
ret
adc
repz
jns
mov
test
mov
xchg
bound
cld
cld
pop
dec
jecxz
jl
jl
mov
ja
pop
pop
add
push
aas
aam
out
mov
mov
mov
in
push
outsl
fidivrs
or
gs
je
mov
out
fwait
aaa
insl
sub
inc
out
stc
pop
jge
fidivrs
adc
jb
and
jge
loopne
rorl
js
icebp
or
pop
test
mov
out
out
scas
ret
pop
inc
mov
adc
adc
push
xchg
sbb
pop
movsl
mov
mov
mov
xchg
iret
js
in
inc
pop
aaa
outsl
ficoms
fdivs
lcall
mov
mov
hlt
hlt
scas
lret
sbb
cmp
std
std
mov
fidivrs
daa
and
sbb
aad
shl
int
aaa
pushf
push
imulb
negl
repz
xor
jle
scas
js
xor
imul
pop
push
dec
in
jmp
jns
out
aas
aas
sub
dec
sub
rcrb
outsl
or
mov
out
mov
int
aaa
repz
imul
cmp
cmpsb
fidivrs
fwait
inc
xchg
push
adc
xor
adc
xchg
aaa
outsl
or
inc
sub
test
clc
jns
out
daa
into
xor
dec
sub
popa
jle,pt
outsl
fidivrs
cmp
mov
mov
fwait
je
clc
cmc
jecxz
test
fadd
push
pop
add
cld
mov
adc
aam
iret
enter
jb
fwait
aaa
outsl
dec
in
lahf
filds
psubusb
xchg
clc
fidivrl
sbb
int3
xchg
xchg
enter
arpl
aaa
outsl
fidivrs
out
out
movsb
cli
cmp
jg
rcll
lea
inc
call
repz
lahf
mov
push
mov
jmp
stc
stos
pop
xchg
loop
cmp
aad
adc
addb
das
jmp
mov
insb
or
shll
dec
adc
cld
bound
outsl
fsubp
pusha
int3
mov
xchg
jno
push
ja
lock
ja
or
cmpsl
and
inc
xor
mov
jns
out
inc
jle
mov
mov
mov
mov
fwait
aaa
outsl
cltd
insb
push
cpuid
push
outsl
shll
out
push
test
out
mov
aaa
outsl
fidivrs
bound
ret
mov
mov
push
dec
mov
cmp
sar
aas
jg
cld
sub
fs
and
inc
enter
das
sbb
stc
jno
ljmp
clc
jg
or
pop
push
rolb
mov
xor
pop
xchg
ss
mov
movsb
push
aaa
add
fldenv
jne
in
xchg
lahf
mov
int
mov
mov
sarl
fdivrp
mov
das
sub
jae
dec
xchg
call
mov
jecxz
pushf
negb
jns
out
push
xchg
xor
rcrl
or
fwait
aaa
outsl
fidivrs
fnstcw
mov
enter
fcomps
sti
adcb
aaa
std
in
lret
shl
aam
xchg
mov
mov
or
lcall
fidivs
adc
cltd
add
popf
fildl
push
mov
ud1
addr16
cmpsb
inc
out
aaa
outsl
fidivrs
dec
xlat
mov
fldl
cmp
mov
out
mov
out
fsubs
push
xor
aas
imul
sub
mov
in
iret
lahf
jg
stc
and
and
xchg
stos
mov
cld
stc
repz
out
into
jbe
add
xchg
outsb
mov
xchg
lahf
aas
jg
ss
add
fwait
test
push
sbb
add
mov
push
and
repz
inc
std
pop
mov
imulb
sbb
outsl
fidivrs
loope
ss
data16
jmp
out
fwait
aaa
int
push
dec
pop
adc
and
fidivrs
dec
and
idivl
arpl
mov
aaa
outsl
jle
jmp
rcrb
pushf
adcb
lahf
pop
sarl
add
in
add
aas
aaa
outsl
fidivrs
loope
nop
lret
pop
jbe
test
int
out
fwait
addb
xchg
xchg
mov
gs
aas
mov
xchg
enter
ficoml
cmp
out
test
out
mov
pop
mov
cld
inc
das
insb
jmp
inc
outsl
mov
mov
leave
out
outsl
icebp
shr
cmp
push
mov
push
outsl
dec
cmpsl
and
in
push
stc
repz
push
mov
lret
stos
imul
cld
stc
pop
lahf
push
lds
mov
mov
out
lahf
dec
fcom
sbb
mov
adc
mov
outsl
ficoms
mov
inc
xlat
mov
iret
int
aaa
ror
js
push
pop
inc
inc
jp
das
cmpb
sub
xor
aas
aaa
outsl
ficoms
mov
and
repnz
fwait
sbb
ljmp
mov
push
mov
mov
cmpsl
cmp
imul
pop
jne
fwait
mov
outsl
clc
mov
test
jns
out
imul
jmp
mov
pop
xorl
and
xchg
idiv
fcomp
lret
repz
fwait
or
and
xchg
pop
fdivrp
pop
outsl
fidivrs
mov
and
xchg
out
fwait
aaa
mov
jno
jge
jns
dec
mov
rep
xor
test
mov
sub
lods
popl
in
iret
pusha
cs
and
mov
jnp
outsl
or
pushf
leave
jg
cmp
aaa
mov
xor
sbb
fidivrs
mov
lods
cmp
pop
loopne
add
jg
add
fistps
ja
jns
push
stos
call
or
outsl
fidivrs
push
js
cmp
and
mov
jmp
push
jb
insl
mov
push
cmpsb
pop
ret
stos
lock
adc
loope
pop
dec
fwait
push
sbb
cld
stc
stos
add
in
fwait
mov
aas
inc
xchg
out
lahf
aas
gs
and
loopne
or
cld
stc
repz
cmp
push
aaa
inc
pop
lock
mov
mov
jg
inc
mov
inc
mov
cld
stc
repz
gs
xchg
sub
je
and
sub
call
aam
rcll
enter
out
aas
inc
les
cmpsl
insl
fstpt
fs
xor
inc
ret
push
fiadds
not
hlt
xor
jae
repz
fwait
shrl
adc
or
xor
or
test
fdivrl
mov
fisubl
int
aaa
outsl
pop
lahf
movsl
test
mov
enter
mov
jmp
ret
sub
mov
outsl
ficomps
aaa
jne
adc
mov
aam
xchg
mov
cmp
cmp
out
dec
daa
pop
mov
cld
or
outsl
fidivrs
and
xor
or
fcomip
out
les
inc
pop
test
dec
js
mov
sub
push
sub
jae
pop
jnp
es
sbb
cmp
and
push
fwait
push
push
mov
rcr
mov
cmpsl
test
call
push
sbb
mov
pop
mov
mov
jg
cld
push
pop
push
mov
jmp
lret
repnz
lods
cli
pusha
mov
xor
iret
pop
pop
ds
lahf
dec
xor
and
stc
repz
mov
les
add
iret
lahf
aas
jg
sub
es
in
cmc
ret
sarb
in
cmp
out
and
mov
lds
mov
lahf
aas
jg
popa
sub
mov
loopne
mov
out
add
add
repz
enter
xchg
mov
adc
stos
out
cmp
cld
mov
cmp
lods
ss
popa
fidivrs
bound
scas
mov
and
aaa
outsl
xchg
int
or
scas
popl
shl
andb
dec
loopne
lret
aaa
outsl
jle
stc
lahf
dec
clc
gs
cmp
lret
fwait
lahf
cmp
imul
xor
fidivrs
push
cmpsb
cmp
jo
popf
adc
hlt
into
orb
outsb
iret
call
out
mov
out
adc
pop
mov
repz
xchg
imul
xor
cmpl
jg
jae
repnz
std
mov
xlat
lahf
cld
stc
repz
test
or
mov
js
mov
sahf
test
cmp
add
cmp
jecxz
dec
mov
int
mov
xrelease
fisttpll
cmp
and
inc
lcall
jg
mov
pushf
or
in
mov
sub
stc
repz
xchg
cmp
ss
xor
jg
cld
jns
pop
nop
xchg
sahf
cld
jno
aaa
jbe
andnps
call
jae
aaa
inc
mov
repz
inc
aaa
adc
sub
outsl
add
and
rol
dec
ss
cmp
or
or
dec
mov
out
outsb
sub
add
scas
int3
xchg
je
xor
aaa
outsl
fidivrs
dec
mov
lock
pop
jne
int
mov
dec
sub
stc
jo
repz
iret
addr16
pop
movb
addb
ja
fwait
inc
jp
clc
arpl
xchg
into
xor
rorl
sbb
pop
stc
hlt
stos
pop
insb
mov
popf
cwtl
fnstcw
cmpsl
push
scas
rcll
push
outsl
fdivrp
testl
pop
adc
aad
cmpsb
call
mov
sub
mov
inc
sub
push
aaa
outsl
fidivrs
pop
inc
sbb
rol
xchg
repz
fwait
cmp
in
aad
int3
sahf
push
jns
push
xchg
lods
shll
sub
fs
inc
repz
lahf
pop
or
or
mov
pop
adc
push
jg
cld
stc
adc
push
das
fisubl
jmp
mov
lahf
aas
sub
test
aaa
outsl
add
add
and
int
iret
outsb
inc
mov
bound
loopne
xchg
test
fidivrl
inc
outsb
fidivrs
cltd
push
mov
xchg
int
pop
mov
ja
fstps
outsl
mov
iret
sub
push
mov
mov
ljmp
dec
xchg
fwait
aaa
out
ficoml
decb
xor
icebp
pop
out
movq
and
cmp
leave
jg
aas
jg
hlt
lahf
mov
ja
dec
add
icebp
xchg
xchg
repz
lahf
cmp
xchg
mov
cld
stc
fcmovbe
je
dec
sbb
cli
pushf
adc
jp
push
iret
lahf
aas
rcrl
jnp
je
jne
cld
stc
repz
xchg
add
ja
add
lods
and
jg
inc
into
or
jno
stc
or
fcoml
push
imul
cld
stc
repz
jge
jno
test
rcrb
pop
add
fucomp
jmp
inc
sbb
xchg
xchg
xchg
lea
mov
push
pop
sbb
int
int
jae
jp
xchg
pop
push
fiadds
jge
mov
aas
and
gs
jg
imul
push
or
rcl
mov
iret
lock
fdivs
imul
jb
aas
jg
cld
push
push
loopne
mov
jmp
into
ss
movsb
lcall
push
cltd
push
dec
popf
pop
jae
outsb
and
jg
cld
stc
iret
push
and
call
sub
sbb
or
iret
lahf
aas
pop
pusha
in
sub
add
mov
adc
stc
repz
lret
add
les
rclb
sahf
shll
shr
sarb
out
add
into
lea
fnsave
mov
or
movl
pop
cmpb
fbld
add
add
fidivrs
aad
insl
pop
dec
sub
gs
mov
cmp
add
and
sbb
and
dec
insb
divb
lods
xrelease
out
pop
xlat
mov
popf
cs
cld
stc
pop
ret
imul
cmp
in
xor
jle
fwait
ja
outsl
dec
insl
jle
call
mov
ret
xchg
add
popa
jne
lret
ja
pop
fxch
daa
in
mov
jg
xchg
fwait
cmp
popf
hlt
fucom
ja
cmpsb
mov
iret
lahf
aas
movsb
add
clc
es
insb
data16
stc
repz
ds
rcl
ret
adc
push
cld
stc
ret
sbb
dec
loop
mov
pop
xchg
ds
lahf
aas
jg
lcall
popa
nop
pop
lret
xchg
cld
stc
repz
out
addr16
cmp
adc
aas
jg
mov
cmp
ret
repz
jecxz
das
incl
mov
pop
aam
push
cmp
outsb
outsl
iret
add
sbb
sbb
pop
mulb
jg
cld
stc
jo
subl
dec
jecxz
xchg
adc
hlt
repnz
out
lahf
aas
dec
out
bound
out
rcr
mov
cld
stc
repz
nop
mov
inc
pop
data16
jo
sub
cmp
pop
push
lahf
jmp
mov
dec
jg
add
cmp
andb
arpl
sar
cld
stc
repz
repz
sbb
test
cmp
loopne
jns
out
mov
test
adc
sbb
fs
in
outsl
fidivrs
dec
mov
out
cmp
inc
dec
outsl
repz
fwait
dec
out
mov
mov
lock
arpl
inc
cmp
pop
sbb
iret
xchg
mov
arpl
fwait
aaa
outsl
push
lret
sti
mov
jns
out
xchg
popa
fldt
xchg
in
jg
jb
mov
sub
pop
push
popf
jl
out
lahf
leave
leave
fnstenv
mov
dec
adc
jle
cld
stc
out
mov
stos
or
repz
dec
jp
inc
jg
rclb
cmp
jg
cld
shl
cmpsb
mov
and
movsb
lret
cmp
push
stc
add
and
jmp
mov
jg
cld
fldt
pop
add
das
nop
mov
test
repz
lahf
adc
out
dec
mov
mov
stc
xchg
pushf
subb
inc
ljmp
and
jge
movsl
adc
pusha
push
add
xchg
arpl
outsl
fidivrs
rcrl
inc
repz
out
repz
fwait
adc
mov
test
outsl
fidivrs
outsl
add
je
xchg
lods
out
fwait
aaa
jne
ja
pop
add
pop
push
inc
sbb
mov
xlat
add
jl
fstl
xor
or
pop
ja
fwait
aaa
outsl
mov
cltd
xor
adc
pop
and
sarl
loope
xchg
jp
pop
pop
dec
jl
arpl
fnstenv
cmpsl
bound
out
ljmp
cli
dec
or
out
cmp
inc
xchg
xchg
sbb
call
mov
fidivrs
lock
pusha
int3
fsubl
jb
inc
out
jmp
int
aaa
cmp
jb
mov
jns
xchg
stc
int
jno
pop
ret
ljmp
jp
fwait
aaa
outsl
push
mov
add
aas
in
pop
mov
and
mov
shrl
and
outsl
fidivs
daa
dec
sbb
mov
shll
lahf
jo
cs
add
mov
lcall
jo
xchg
or
or
lods
mov
stos
out
leave
xor
lds
mov
outsl
fisubs
sbb
or
xlat
jge
mov
repz
imul
mov
and
fidivrs
xlat
add
push
push
jge
xchg
int
neg
outsb
ds
xchg
in
mov
aaa
push
repz
mov
xchg
mov
fnstcw
int3
push
mov
out
icebp
push
rclb
sarl
sti
jns
out
aaa
cmp
jmp
test
js
mov
aaa
outsl
fidivrs
sti
movsb
out
lods
mull
in
popa
lock
inc
xor
add
pop
lcall
push
jo
jecxz
xor
xchg
sbb
stc
repz
fisttps
in
out
subl
repz
sub
inc
xchg
loop
mov
lods
sub
xlat
ds
and
repz
ljmp
ljmp
fstps
ss
and
cmpsb
jg
cld
jecxz
pusha
inc
jp
mulb
sbb
mov
out
lahf
aas
mov
idivb
push
aas
cwtl
leave
fidivs
repnz
stc
repz
dec
es
ret
xchg
mov
mov
rolb
rclb
aaa
mov
adc
jb
dec
std
pop
xor
daa
test
notb
fwait
aaa
outsl
fisubrs
daa
dec
jecxz
jl
ds
push
ss
jp
pushf
and
in
mov
mov
outsb
ficoms
push
divl
mov
inc
adc
add
dec
lcall
lahf
scas
or
enter
mov
scas
ds
insb
fidivrs
es
inc
js
inc
cmp
into
ja
ret
jge
in
fidivrs
add
or
xchg
xor
je
adc
sti
int
aaa
outsl
test
jg
repz
flds
sbb
outsl
loope
fidivrs
inc
inc
cmp
sub
fwait
aaa
outsl
repnz
sahf
push
mov
jo
mov
das
scas
and
enter
iret
lahf
aas
adc
addr16
aaa
int
sub
jno
movsb
movsl
cs
cmp
inc
scas
ret
mov
out
lahf
aas
aas
sub
movzwl
insl
xor
cld
stc
pause
adc
mov
sub
int3
cltd
mov
jne
mov
sbb
int
outsl
xor
testl
sub
xchg
outsl
fidivrs
negl
xchg
mov
xor
out
fwait
aaa
or
leave
cmpsb
clc
stc
outsl
testl
repz
pop
test
pop
aaa
outsl
sub
scas
lret
test
fs
daa
mov
or
cs
lret
fidivrs
test
mov
cmp
mov
mov
addr16
fwait
ja
pop
outsb
mov
push
and
out
inc
fwait
adc
lock
jb
mov
jo
ret
push
ss
dec
adc
movsl
cltd
out
ss
je
int
int
fsub
mov
je
xchg
xlat
and
mov
jle
xchg
std
rclb
ds
repz
fimuls
fdivrl
pop
pop
push
mov
stc
pop
cmpsl
adc
inc
xchg
jo
pop
addl
jg
mov
cltd
ss
cmp
sub
out
add
bound
xor
or
ds
insb
ficoms
jg
add
leave
sub
jle
stc
repz
filds
xchg
inc
inc
add
aas
jg
cld
jg
mov
lods
jg
ja
addl
mov
cmp
scas
push
sbb
stc
scas
mov
ret
scas
cmp
outsl
fidivrs
lods
jecxz
insl
pop
jnp
daa
int
aaa
jo
pop
fimuls
cld
stc
repz
dec
xor
lahf
mov
push
jg
push
sub
adc
dec
mov
push
imul
test
repz
inc
ret
xchg
imul
jbe
aas
jg
cld
dec
ljmp
push
dec
xor
iret
lahf
inc
out
dec
int3
fucom
sub
mov
sub
repnz
lahf
sbbb
inc
jg
cld
stc
mull
ja
bt
sbb
xchg
stos
sub
mov
shlb
and
stc
repz
jns
xor
inc
xchg
mov
jns,pn
repnz
lahf
aas
jg
mov
cmp
xor
stc
repz
and
push
pop
inc
or
adc
aas
jg
cld
stc
cltd
pop
jne
ds
dec
mov
xor
lahf
xchg
lahf
sbb
stc
pusha
leave
leave
jmp
cmp
iret
lahf
jg
inc
int
xlat
call
add
cld
stc
repz
aad
movsb
pop
dec
clc
or
jno
ror
scas
lds
jle
and
stos
push
bswap
out
mov
jo
rcrl
stc
repz
out
fsts
inc
cld
stc
repz
push
fidivs
je
out
js
sti
xor
xor
lahf
aas
jg
es
lcall
cwtl
xchg
push
iret
pop
push
dec
sbb
pop
add
loop
mov
cmpsl
push
sub
jecxz
je
out
adc
insb
dec
stos
aad
int3
in
out
shll
leave
xor
push
lret
shl
ds
repz
outsb
xor
pop
adc
sti
scas
shrl
iret
lahf
aas
ljmp
inc
jg
push
push
xchg
shlb
cld
stc
repz
fwait
test
pop
inc
pushf
insl
or
ficoml
jg
sahf
xor
inc
add
ret
out
lds
icebp
pop
mov
mov
call
stos
inc
sub
mov
pop
xlat
bnd
outsl
lods
scas
mov
in
jne
sar
fucomi
test
out
sbb
repz
mov
sbb
stos
adc
out
lahf
aas
daa
lahf
hlt
iret
sbb
or
mov
cld
stc
repz
dec
mov
mov
aas
jg
or
xor
aaa
outsl
fiadds
push
dec
call
jle
rol
loop
fwait
and
stos
mov
mov
mov
dec
adcb
sub
jno
sbb
jns
push
or
mov
int
pop
dec
xor
inc
mov
jg
fidivrs
pushf
pop
js
cmpsl
das
in
mov
lahf
repnz
shll
leave
add
adc
inc
mov
mov
loopne
inc
xchg
aas
dec
pop
sbb
iret
lahf
aas
mov
sub
std
lock
leave
lret
cld
stc
repz
cmp
mov
push
xchg
dec
jg,pt
fmuls
push
mov
mov
popf
cmpsb
movq
cld
stc
push
xchg
ja
lods
pop
lods
mov
lock
sbb
aas
ret
sub
int
aaa
outsl
xchg
es
lods
inc
mov
jno
mov
fcmovnbe
insb
mov
jle
mov
aaa
outsl
fisubrs
push
sub
popa
push
ficoms
int
sbb
mov
outsl
pop
bound
jns
xor
lcall
jo
jle
mov
imul
sub
mov
mov
mov
movsl
dec
inc
cmpsb
call
or
dec
cmpsb
cmp
xor
int
aaa
outsl
daa
jg
dec
lret
inc
stos
xchg
mov
sbb
call
int3
xor
out
adc
push
imul
and
jnp
pop
es
out
out
add
test
icebp
cld
push
push
fnstcw
jo
mov
aaa
decl
addr16
aad
test
repnz
lock
int
mov
sub
mov
sbb
jb
cmp
in
fwait
int
pop
or
or
iret
lahf
aas
aam
outsb
adc
cmp
sub
stc
repz
fs
push
std
sbb
fwait
stos
out
and
mov
sbb
outsw
loope
in
pop
out
aas
dec
out
jp
pusha
and
mov
inc
xchg
repnz
fnstsw
mov
out
sbb
int3
ret
das
pushf
mov
mov
jecxz
sbb
fwait
aaa
outsl
fisubrs
mov
mov
out
outsl
out
pushf
loopne
dec
xchg
pop
mov
fidivrs
xchg
mov
sbbb
repz
fwait
imul
leave
or
xlat
cmpsb
mov
lahf
jg
jns
xor
fs
enter
repz
ret
xor
in
xchg
mov
aas
jg
cld
push
jg
pusha
repz
sbb
pushf
xor
jmp
mov
loopne
fwait
push
push
inc
fst
shll
aaa
outsl
fidivrs
movsl
jp
lds
jo
shll
fwait
sub
in
sbb
push
scas
cmp
adc
jecxz
mov
push
es
notb
or
pop
and
rol
inc
and
outsl
ficomps
rcll
xor
enter
cmpb
xchg
das
cld
and
clc
dec
pop
cltd
xchg
fidivl
aas
jg
mov
sub
and
dec
sub
leave
iret
jae
mov
mov
outsl
fidivrs
xor
fldl
shufps
int
aaa
cmp
pop
mov
je
cmpl
in
dec
in
pop
cmp
aaa
cmp
lahf
cli
push
mov
lret
jecxz
cld
imul
stc
add
and
or
jae
iret
lahf
aas
fmull
mov
mov
cld
stc
repz
ret
xlat
movups
push
int
leave
unpcklps
shrb
icebp
mov
aas
jg
icebp
mov
sbb
rclb
adcl
repz
lahf
icebp
cmp
pusha
jns
mov
fsts
iret
or
popa
push
xchg
xor
cs
mov
iret
lahf
aas
lods
or
lods
cmp
fdivrl
push
cld
stc
repz
fstpl
sub
xchg
sub
mov
jg
aaa
arpl
xchg
ret
cltd
inc
and
out
inc
fidivl
pop
jg
inc
or
std
aaa
outsl
fiadds
ljmp
and
enter
movsl
clc
neg
inc
cmpsl
push
mov
movsl
xchg
pop
shrb
test
iret
lahf
aas
pushl
jmp
add
xchg
movsl
and
stc
repz
sub
not
or
mov
aas
jg
xor
push
out
add
lret
popf
js
mov
inc
in
sbb
cmp
int
add
shrb
xor
rcrl
mov
lret
out
xor
xorl
repnz
hlt
and
adc
insl
xchg
lahf
aas
jg
lcall
sub
push
ljmp
cmp
mov
adc
xchg
jns
int
aaa
outsl
cli
pop
and
lea
add
jns
out
xchg
test
xchg
aaa
outsl
fidivrs
jae
xor
cld
stc
ret
mov
outsb
jg
sbb
sahf
mov
push
mov
xchg
addr16
out
ja
dec
push
sbb
pop
mov
cmp
nop
lahf
rolb
pop
ljmp
bound
jge
add
adc
xchg
or
pop
cmp
mov
sub
mov
push
sahf
test
test
loope
fwait
aaa
out
test
divl
rcrb
daa
jns
out
mov
xor
mov
outsl
sahf
push
push
sub
jo
iret
mov
xchg
jle
repnz
fwait
jno
sbb
stos
sahf
sbb
mov
int
pushf
fs
iret
lahf
aas
out
cmp
ss
add
dec
cmc
jmp
sbb
ljmp
dec
andb
repz
pop
and
xchg
xchg
pusha
fcmovnb
rcrb
pushf
sub
movsl
pop
or
gs
in
int
cmp
mov
or
test
adc
mov
dec
nop
data16
aaa
outsl
ficomps
adc
das
test
clc
push
and
jns
out
pop
nop
cli
and
push
mov
inc
ss
sahf
shll
addr16
or
lahf
aas
push
jmp
jecxz
stos
pop
out
arpl
stc
repz
scas
in
cmp
pushf
ja
stc
and
sub
ljmp
mov
out
mov
int
or
pop
int
xor
into
dec
or
orb
rcr
aas
lret
jns
dec
mov
xchg
and
outsl
fidivrs
push
stos
incb
adc
push
cld
stc
movl
ja
mov
push
inc
jle
inc
hlt
je
push
or
mov
ja
add
mov
pop
push
fwait
aaa
outsl
ficomps
sbb
mov
lock
stc
repz
enter
xchg
addr16
mov
xorb
insb
aas
jg
cld
gs
aas
sub
pop
lea
lahf
add
test
out
in
aaa
jns
mov
stc
mov
lock
in
cltd
mov
cmp
inc
mov
cmp
jns
pushl
outsl
fiadds
sub
cmpb
testb
int
push
sbb
or
xor
sbb
push
cli
fiaddl
cmp
mov
mov
ficoms
scas
pop
sarb
or
outsl
sbb
idivb
push
roll
cmc
xchg
shr
push
adc
out
andb
aaa
outsl
fidivrs
inc
sbb
add
adc
fwait
dec
and
push
bound
lods
cld
shl
aaa
outsb
fidivrs
sbb
shl
adc
xchg
int
aaa
jg
in
sbb
mov
cli
enter
or
mov
jg
fidivrs
pop
sahf
test
repz
lahf
and
outsb
fistl
mov
cld
stc
lcall
hlt
pop
add
push
outsb
pop
xchg
jmp
push
xchg
mov
in
push
sbb
sbb
daa
xor
out
repz
mov
lret
fidivrs
lds
out
ja
sub
imul
mov
fcmove
cmp
test
mov
mov
je
pop
push
jno
leave
in
and
int
aaa
mov
sub
testb
fidivrs
and
push
cmpsl
ja
iret
dec
jge
int
aaa
outsl
jno
call
test
jns
out
stos
hlt
jns
pop
inc
pop
cltd
cli
dec
pop
sbb
fcompl
pop
jae
fbld
pop
cmp
jns
out
jbe
xor
xor
jmp
es
shlb
outsl
fidivrs
das
insl
add
fisubs
andl
lret
repz
fwait
cmpsb
adc
mov
jbe
sub
call
in
and
jg
inc
fs
xchg
cmp
aaa
jg
loop
in
test
jae
cmp
iret
lahf
aas
je
adc
cmp
cmp
repz
jno
inc
push
fldcw
imul
jg
sub
pusha
xchg
push
sub
lds
cld
stc
repz
inc
xchg
push
sar
mov
mov
inc
dec
out
xor
imul
repz
fwait
stos
xchg
jae
pushf
cmovs
push
jecxz
xchg
pop
fnstcw
mov
jbe
pop
dec
andb
cld
stc
push
inc
lock
xchg
mov
mov
daa
daa
aaa
mov
lahf
aas
jg
adc
push
inc
shl
imul
stc
repz
je
or
lret
bound
or
lret
lahf
cld
int
cmpsb
loope
int3
xadd
jnp
int
aaa
outsl
adc
cld
cmc
jo
xor
hlt
sbb
fwait
and
lret
negb
inc
xchg
lahf
aas
jg
mov
lods
mov
add
mov
or
cmp
out
cmpsb
pop
pop
push
jb
xor
sbb
ds
outsl
sub
mov
int
aaa
xchg
mov
pop
test
out
push
test
into
mov
inc
scas
and
jne
pop
xchg
fwait
aaa
outsl
fidivrs
call
andb
jp
push
jno
int
sbb
insb
lods
dec
outsl
fidivrs
sbb
jg
outsl
mov
js
int
aaa
jl
inc
add
jae
mov
fidivrs
mov
gs
xchg
adc
lds
insb
mov
push
arpl
mov
outsl
and
out
scas
push
xor
add
and
xchg
cs
and
or
repz
fwait
lahf
idivb
push
push
movsb
test
outsl
fidivrs
frstor
dec
ss
addr16
ss
insl
inc
push
or
icebp
enter
int
jg
jp
xchg
aaa
outsl
mov
dec
mov
shrl
int
ja
pop
inc
sub
stos
inc
addl
repz
int
add
mov
fistpll
aaa
outsl
ficomps
cwtl
daa
jmp
movsl
dec
and
inc
push
mov
out
ror
lock
sti
fs
inc
sbb
sub
outsl
fidivrs
adc
imul
repz
fwait
es
mov
repnz
adc
jo
fidivrs
pop
stos
sbb
fistpl
xchg
popa
enter
int
aaa
cmp
inc
pop
push
out
imul
cmpsl
or
sub
push
das
pop
cltd
jo
pusha
int
aaa
outsl
cli
lcall
xchg
xchg
add
repz
mov
bound
ljmp
adc
stos
js
jno
sysret
test
mov
out
fwait
packuswb
rorb
scas
inc
and
mov
jg
pushf
xor
movsb
es
insl
inc
shl
lret
fidivrs
push
lods
pop
lret
sub
dec
pop
pusha
xchg
int
aaa
outsl
lahf
mov
subl
sbb
cld
fstpt
mov
mov
pop
repnz
mov
neg
mov
cmp
sbbl
cwtl
int
aaa
outsl
mov
adc
lahf
jg
into
xchg
nop
and
pop
add
fmull
stc
repz
sbb
stos
call
dec
dec
xchg
mov
cmc
fimull
sbb
jae
mov
adc
mov
jno
fidivrs
js
add
pop
stc
lahf
das
fiaddl
cmp
pop
scas
adc
repz
xchg
loop
rcr
pop
cmp
pop
mov
mov
mov
pop
outsl
imul
mov
push
xchg
fwait
loopne
push
test
es
or
movsb
aam
bound
out
bsf
out
adc
outsb
sbb
inc
push
je
sahf
adc
adc
outsl
ficomps
scas
cs
clc
sbb
rcrl
aaa
xor
mov
lds
arpl
mov
imulb
fwait
aaa
add
sbb
jns
out
and
jo
test
mov
outsl
jle
aaa
outsl
call
jle
fdivrl
mov
push
hlt
enter
push
or
ficoms
add
jecxz
dec
push
int
aaa
outsl
mov
xor
rcrb
mov
xor
out
pop
mov
sub
jne
aaa
outsl
fisubrs
mov
xorb
bound
cmc
jns
out
xlat
sub
mov
nop
iret
xchg
aaa
outsl
fidivrs
imul
mov
fwait
sub
cwtl
scas
lock
xor
outsb
pop
sub
incb
add
in
test
pop
fistps
stc
repz
mov
stos
movsl
mov
sub
popa
dec
jg,pt
scas
pop
adc
lods
out
mov
mov
fcoml
inc
mov
jnp
lcall
jmp
stos
icebp
outsb
arpl
aaa
outsl
ficoms
bound
cli
cmp
ja
xchg
mov
adcl
out
mov
sbb
push
std
cmp
outsl
fidivrs
data16
xchg
nop
nop
shrb
int
add
test
daa
ss
repnz
fidivrs
nop
cli
movsl
or
popf
rolb
out
fwait
aaa
xchg
or
insb
cltd
ret
ret
adc
mov
jno
push
cli
push
test
out
sbb
out
sbb
insb
fmulp
cmp
dec
lahf
lock
popa
popa
mov
and
popf
imul
enter
out
shl
stc
repz
dec
inc
pop
fcmovu
das
stos
cmpsb
mov
cld
inc
mov
pop
sbb
lock
mov
out
lahf
adc
cmp
icebp
stos
cmpsl
mov
lock
cld
stc
lcall
and
int3
aas
jg
fisttpll
adc
pop
mov
and
cmp
or
sub
inc
mov
fcmovbe
add
xchg
cld
stc
sub
mov
in
or
in
inc
sbb
mov
aas
inc
push
ja
xchg
lret
stc
inc
faddl
mov
std
ja
mov
mov
jnp
mov
sti
call
mov
lahf
stc
hlt
repz
pop
pop
adc
lahf
cld
cld
stc
gs
stos
mov
jae
mov
iret
lahf
mov
push
inc
mov
add
push
repnz
movsl
enter
xchg
xchg
fwait
rcrb
sarb
xor
mov
icebp
enter
subl
mov
rclb
js
lahf
aas
jg
jns
ret
xchg
pushf
xor
stc
repz
push
dec
and
movsl
int
or
hlt
adc
and
jnp
mov
push
flds
jmp
dec
pop
fidivrs
outsb
js
ljmp
int3
orl
xor
lret
fcmovu
fnstsw
repnz
lret
ds
xor
cmpl
adc
mov
repz
cltd
sbb
ret
cmp
add
test
jge
inc
mov
mov
mov
cmpsb
jmp
mov
lahf
aas
or
fistpl
cld
arpl
pop
ret
outsb
xor
imul
push
push
or
js
inc
add
loopne
in
pushf
lea
pop
mov
push
in
movsl
jg
test
outsl
fidivrs
stc
iret
hlt
add
inc
sbb
int
fwait
aaa
cs
and
lret
mov
jns
out
cwtl
cwtl
xor
adc
popf
ret
lar
add
add
fisttps
push
jns
cs
mov
int
ret
and
in
int3
dec
pushf
cmp
pop
push
clc
popf
fnstsw
lret
sarb
lret
inc
or
xor
push
dec
fwait
aaa
outsl
fdivrp
mov
insb
lret
je
mov
call
aas
pop
leave
cmp
mov
test
and
in
inc
add
outsl
fiadds
cmp
sbb
sbb
inc
pop
std
stc
leave
out
fwait
out
mov
sbb
sbb
adc
mov
lock
pop
ss
ret
pushf
aaa
pop
imul
cmc
repz
stc
repz
cs
and
sahf
pop
mov
mov
mov
xlat
aam
shl
and
repz
lret
enter
xor
popf
push
ja
jg
cld
fdivl
sbb
xchg
insb
dec
push
scas
or
xchg
lahf
pop
add
dec
jecxz
mov
pop
mov
push
into
stos
mov
repnz
xlat
cmpsl
insl
add
mov
xchg
scas
and
fwait
push
xchg
xor
fistl
jne
push
mov
aaa
sbb
pop
xor
cmp
dec
cwtl
dec
and
dec
repz
xchg
popf
std
cwtl
ds
adc
aas
mov
xor
jno
js
inc
add
fwait
aaa
out
push
cld
enter
popa
scas
xchg
pop
inc
pop
adc
jg
daa
xchg
mov
aas
jg
cmp
repz
lahf
les
pop
cmp
push
or
test
inc
sbb
lahf
test
pop
fwait
iret
adc
adc
inc
lds
pop
or
loope
dec
fiadds
mov
dec
and
mov
outsl
dec
cmp
dec
cltd
jmp
jns
out
repnz
mov
stos
xor
lock
fcmovb
push
fnstcw
andl
mov
cmpsb
jns
xor
mov
enter
pop
sub
stc
push
push
pop
push
add
mov
lcall
dec
xchg
outsl
mov
insb
std
mov
xor
push
outsb
testl
pusha
in
rcl
adc
scas
mov
adcb
add
add
push
sbb
repz
imul
ss
add
pop
jo
jb
cmpsl
iret
cmp
cld
cld
stc
insl
xor
mov
jecxz
sbb
and
sub
sbbb
jae
bnd
dec
sbb
jle
nop
sahf
xlat
dec
jno
push
je
shlb
push
das
push
imul
xchg
lahf
aas
sbb
movsb
lcall
inc
fwait
aaa
add
cmp
enter
out
popa
fwait
cmp
jne
adc
outsl
fidivrs
sbb
or
dec
subl
stc
xlat
and
mov
xchg
cmp
xor
mov
adc
fstps
stc
repz
jnp
test
ljmp
cld
iret
iret
adc
lds
xor
loope
sar
dec
add
dec
push
sbb
xchg
fwait
jmp
jns
out
and
xorb
insl
dec
sub
adc
outsl
fidivrs
aas
enter
mov
mov
int
pop
jbe
insl
in
mov
cmp
sbb
jns
stos
push
outsb
call
mov
push
add
cmpsb
pop
dec
nop
and
jns
lock
push
xor
mov
mov
ds
lea
inc
add
jns
adc
add
pop
and
outsl
ficoms
or
xchg
xchg
aam
pop
jmp
jns
out
out
pushf
ret
jmp
leave
inc
mov
mov
inc
fidivrs
dec
inc
clc
mov
ja
enter
xor
imul
repz
fwait
adc
or
adc
mov
outsl
fdivrl
rcll
jae
std
mov
mov
int
aaa
cli
in
mov
fxch
or
cmp
pop
in
sti
add
or
inc
fs
cmp
or
inc
mov
pop
outsb
fidivrs
and
sbb
sar
mov
push
cld
inc
pop
imul
push
xchg
fwait
aaa
outsl
imul
loop
add
adc
jg
cld
jmp
test
loope
sub
dec
into
stc
xlat
dec
ds
mov
pop
leave
or
ret
cld
dec
mov
call
lahf
xchg
xchg
fucomip
enter
rcr
in
sub
jns
rcl
ljmp
sbb
or
jns
pop
stos
into
mov
daa
aas
jp
pop
add
mov
adc
filds
pop
jbe
in
jns
out
idiv
xchg
fs
dec
cli
scas
addb
fdivrl
scas
dec
sti
lds
lahf
jg
pop
lret
daa
movsb
ds
mov
in
mov
scas
inc
jbe
sbb
aas
jg
jge
rcrb
mov
cmp
cs
pop
imul
and
imul
cld
stc
repz
mov
pop
jg
jecxz
jl
cmc
mov
jg
std
pop
lahf
cld
imul
pop
inc
jo
int
out
clc
out
push
pop
outsl
fidivrs
or
push
add
ss
les
lret
lock
xchg
mov
std
mov
jmp
and
aaa
mov
mov
shll
scas
cmpsb
cmc
pop
jle
mov
push
xor
jbe
addr16
cmovne
fwait
aaa
outsl
and
nop
jnp
call
push
xor
out
lret
cltd
call
test
iret
lahf
aas
ja
mov
ret
xchg
stos
jbe
add
mov
rcrl
adc
jmp
fistpll
cld
pop
mov
psubsb
fnstcw
popf
sub
fisttps
add
xchg
into
das
lods
aas
push
push
sarb
mov
lahf
in
mov
ss
adc
mov
cmp
daa
lea
dec
inc
out
sbb
mov
mov
mov
arpl
rcrb
inc
imul
jno
lods
repz
jmp
out
fwait
aaa
dec
and
push
pop
sti
pop
clc
ffreep
into
ljmp
dec
lods
jb
aaa
cmp
stc
repz
mov
je
pop
mov
dec
fiadds
incb
test
dec
mov
pop
and
outsl
mov
hlt
jl
push
pop
hlt
adc
cmp
out
mov
arpl
add
cld
stc
add
pop
fcomps
inc
mov
xchg
jle
mov
inc
dec
cmc
aas
aaa
outsl
fidivrs
sti
imul
int
popf
in
faddl
lret
fdivrl
lds
ljmp
xor
sbb
call
adc
sub
adc
int3
pop
and
roll
xor
mov
jne
out
ret
pusha
gs
insl
jns
mov
jo
int
aaa
outsl
jae
xor
inc
lahf
cwtl
lret
mov
icebp
mov
in
cltd
xor
xorl
cld
xlat
fbstp
fcompl
aad
outsl
loop
ja
inc
and
pushf
insl
pop
test
out
or
ja
jg
xchg
aaa
push
add
pushl
adc
daa
hlt
stos
mov
mov
pop
cmp
cld
stc
add
inc
cmp
loope
mov
js
push
out
lahf
aas
int3
dec
add
add
dec
out
cld
stc
repz
lcall
push
mov
pop
scas
push
sahf
aas
jg
enter
lahf
mov
pop
fiadds
inc
les
int
aaa
outsl
pop
bound
mov
mov
dec
pop
test
ljmp
aaa
inc
adc
repz
add
fs
loop
inc
xchg
outsl
jmp
stc
mov
mov
jg
test
fidivl
stc
repz
mov
cmpsl
sbb
cmpsl
jg
cld
scas
and
fisubl
movsbl
or
flds
js
cmpsl
ss
pop
mov
and
cld
stc
das
shll
xchg
scas
jb
jae
hlt
fnstcw
sub
fsub
iret
lahf
aas
and
mov
and
adc
out
or
push
rcrb
or
outsl
fmulp
call
and
push
mov
inc
lahf
test
push
mov
shl
dec
cmpsb
pop
pop
add
xor
fidivrs
dec
dec
out
xor
aas
jg
es
addr16
mov
adc
adc
xchg
jg
inc
sub
nop
out
inc
push
xchg
js
or
aaa
rclb
test
test
cmp
pop
divl
mov
push
add
sbb
test
ret
mov
mov
paddusw
lcall
or
fcmovbe
and
push
cwtl
cld
cmc
xchg
pop
imul
inc
inc
inc
dec
imul
hlt
inc
das
pop
scas
pop
cmc
xchg
sub
xor
rol
jge
negb
ds
lods
stos
rcl
mov
mov
xchg
sub
pusha
mov
sarb
mov
inc
jmp
push
enter
enter
aas
stos
nop
andl
adc
dec
or
pop
mov
fwait
orb
push
leave
int
cli
les
out
jecxz
jns
xor
call
lea
test
push
inc
inc
jle
sahf
insl
adc
fcmovnu
adc
cld
mov
daa
cmp
mov
jg
lahf
add
sbb
lea
jmp
jb
out
pop
push
push
jbe
pop
adc
insl
scas
and
cld
stc
push
pop
sbb
stos
xlat
xlat
int
adc
mov
jge
pop
and
daa
out
inc
sub
fwait
test
xor
fwait
pop
cmp
insb
das
adc
sub
out
xor
sbb
insb
fidivrs
pop
ret
into
sub
sbb
cmpl
addb
shl
out
adc
inc
ds
test
clc
movsb
jns
jns
icebp
mov
nop
aaa
add
das
sub
pop
mov
inc
cltd
or
icebp
aad
ficoms
test
xor
inc
fbstp
int
aaa
aaa
data16
cmpsb
data16
adc
rclb
push
fwait
xorl
loop
xchg
lock
gs
aaa
outsl
dec
ds
sub
jg
jns
out
das
sbb
out
subb
ljmp
loop
pop
inc
or
ja
xchg
push
pusha
arpl
push
push
mov
out
inc
pop
jb
push
shlb
sahf
xchg
dec
and
fwait
aaa
outsl
fisubrs
cmp
in
pop
cmp
int
inc
add
cli
daa
adc
adcb
and
add
sbb
adc
jnp
aas
repnz
mov
push
shll
and
sub
push
leave
mov
or
fwait
aaa
outsl
ficomps
cmp
sub
in
pop
cmp
push
ljmp
imul
fs
cmp
scas
push
sti
inc
inc
jae
ds
mov
jg
xchg
ss
jno
subl
pop
mov
lahf
js
cltd
daa
inc
mov
mov
stc
repz
mov
cmp
push
and
cmp
push
es
mov
fcos
xchg
int
and
lcall
stc
repz
outsb
sar
jno
mov
decb
lahf
aas
jg
cmp
jle
mov
mov
repz
xchg
xor
sub
enter
mov
jg
cld
shll
mov
aaa
out
test
out
in
lds
fbstp
jg
aam
cmp
jg
lods
and
outsb
xchg
or
daa
lahf
aas
jmp
jne
es
sbb
pop
dec
aad
inc
jle
leave
lea
fiadds
xchg
in
sahf
repz
fwait
cmc
inc
inc
negb
ret
pop
lds
mov
orl
jecxz
fwait
aaa
adc
incb
xchg
inc
lret
mov
in
lock
out
sub
popf
add
imul
in
lahf
aas
mov
aaa
test
mov
clc
inc
and
lahf
cmp
mov
repz
or
ret
push
enter
xor
outsl
fidivrs
cld
cmpsl
ret
imul
xchg
sub
xchg
fwait
fwait
cwtl
call
xlat
mov
inc
or
jns
scas
cli
cmp
dec
push
or
xor
out
out
repz
adc
lock
imul
add
xlat
jecxz
pop
fcmovb
pop
fwait
aaa
outsl
fmulp
shlb
test
fs
aas
fwait
jns
out
mov
in
das
mov
mov
cmpb
outsl
fidivrs
cmp
rclb
cmp
out
fwait
push
fwait
ret
add
push
ss
outsl
mov
lahf
scas
mov
mov
lcall
lahf
cmp
sub
inc
daa
jns
and
pop
out
lahf
aas
sub
add
stc
push
lret
repz
dec
fs
out
pop
mov
repnz
sub
cmpsl
pop
out
mov
out
fsub
fs
mov
mov
cli
int
jg
js
outsl
cmp
fwait
aaa
outsl
push
jp
xlat
xor
sub
cmpsl
xchg
or
jns
out
orl
sub
push
inc
dec
bound
outsl
faddl
xchg
lods
mov
fwait
aaa
outsl
adc
push
or
sub
repz
aam
xchg
lods
mov
push
push
or
fwait
aaa
outsl
fidivrs
jno
sub
mov
lret
pop
es
aam
jb
ficoml
jge
repz
cwtl
mov
loope
pop
or
mov
jg
jge
js
outsl
mov
icebp
shl
and
or
std
out
fwait
aaa
leave
and
rcrl
inc
pop
fidivrs
ss
pop
lods
testl
cmpsl
aaa
cmpsb
aad
lret
call
cld
stc
pop
divb
gs
jb
into
mov
lahf
push
or
and
xor
fldenv
call
repz
pop
xchg
int3
movsb
lahf
xlat
pop
and
in
fildl
imul
insb
add
mov
inc
jle
cld
je
mov
push
and
in
sbb
mov
dec
sub
sahf
fbld
fidivrl
mov
mov
test
iret
lahf
or
outsl
jae
pop
push
cld
or
outsb
cld
stc
repz
xor
xchg
mov
cmp
lahf
aas
jg
inc
push
mov
stc
mov
cld
stc
repz
push
jl
icebp
roll
stos
mov
lahf
aas
jg
roll
test
mov
out
daa
jns
sub
xchg
ja
inc
push
mov
push
fmulp
dec
and
xlat
pop
fcompl
mov
cs
jne
fs
cld
jmp
sub
cmp
iret
lahf
aas
jg
push
cmp
xchg
mov
xchg
pop
xor
mul
push
insb
imul
insb
sub
inc
pusha
das
mov
push
mov
cmp
loopne
mov
fcomp
mov
sti
mov
fildll
test
cs
inc
sub
push
inc
fmulp
out
sahf
test
lahf
add
xor
enter
mov
mov
int
mov
icebp
cwtl
mov
mov
stos
decl
sbb
inc
pop
push
lods
int
fwait
aaa
outsl
fsubp
inc
adc
mov
mov
jb
enter
stc
repz
enter
scas
fisttps
mov
scas
xor
mov
cld
or
mov
movsl
lcall
out
lahf
lcall
ss
cs
mov
fs
fwait
aaa
addr16
or
scas
sbb
dec
cmp
icebp
xchg
ja
hlt
adc
addr16
outsl
fidivrs
xchg
add
int3
lahf
imul
adc
out
aad
cmp
xchg
jecxz
xchg
push
repz
bnd
mov
aas
jg
lock
push
mov
mov
cmp
pop
jns
push
repz
lahf
lock
scas
xchg
pop
iret
mov
push
push
cmp
jbe
daa
xor
push
pop
outsl
fidivrs
clc
mov
sbb
mov
fwait
aaa
mov
pop
mov
dec
pop
faddl
es
dec
loope
pop
add
cmpsl
repnz
pop
xorb
fists
xchg
add
lcall
stos
mov
jns
xchg
fiaddl
iret
lahf
pop
loopne
pusha
or
aaa
sahf
shll
inc
mov
push
repz
sbb
xchg
enter
inc
xor
pop
jb
out
adc
mov
repnz
pop
stos
test
sub
insl
aaa
inc
sbb
outsl
jae
aas
ficompl
repz
add
push
cmp
sarl
push
inc
movaps
sub
fwait
aaa
outsl
fiadds
mov
ret
push
lahf
stc
notl
push
xchg
push
movsb
and
add
sub
xchg
cwtl
pop
loope
out
add
test
iret
lahf
aas
mov
loope
pop
mov
movsb
int3
cld
stc
repz
dec
sub
in
imul
mov
out
mov
test
jle
jg
aas
sbb
push
mov
fcmovne
scas
add
enter
mov
test
outsl
mov
cmpsb
and
push
les
leave
jmp
scas
push
pop
fnstcw
adc
out
fwait
ja
dec
pop
movsb
addr16
cmc
pcmpgtw
aas
cli
enter
movsb
mov
cmc
out
mov
in
push
mov
xchg
sbb
out
lahf
aas
jnp
jg
roll
xchg
cld
stc
repz
shll
fucom
stos
nop
cmc
negb
fwait
leave
lahf
aas
jg
hlt
sahf
imul
or
hlt
add
add
cld
jmp
inc
mov
mov
arpl
cs
aad
inc
inc
call
cld
stc
xlat
dec
add
inc
sbb
stos
mov
aas
jg
pop
mov
push
iret
xchg
or
ja
repz
je
pop
pop
fldl
fwait
xor
adc
test
repz
fbld
mov
adc
jle
out
push
sahf
fdivrl
popf
clc
xor
pop
scas
out
loop
mov
xor
dec
mov
inc
adc
sub
jmp
mov
push
inc
aas
imul
push
idivl
cld
stc
imul
lcall
sub
mov
repnz
pop
bound
bound
push
rcr
fcom
enter
aad
xchg
das
mov
pushf
xchg
lret
iret
nop
push
pop
mov
and
jns
fsubrs
bound
mov
aaa
outsl
and
mov
mov
and
mov
int
add
and
jecxz
cltd
push
or
mov
insb
mov
mov
outsl
ficoms
pop
mov
xor
mov
int
mov
cmp
icebp
mov
aas
cmp
adc
dec
mov
mov
sahf
inc
iret
mov
loopne
pop
loop
lahf
xchg
cmpsl
cld
stc
repz
push
xchg
dec
inc
dec
mov
lcall
push
pop
pop
imul
lret
enter
add
mov
outsl
fidivrs
cmp
mov
mov
out
roll
add
enter
testl
adc
jns
cmpsb
clc
sbb
dec
push
scas
lods
xor
sub
rcr
aas
imul
notl
addr16
test
aaa
outsl
fiadds
fcomps
js
stos
out
add
int
fwait
das
jg
lahf
cli
std
cli
jl
test
fcmovnu
mov
or
test
mov
or
imul
mov
lret
test
jns
out
ss
fisubrl
pop
rcl
add
jge
stos
sbbb
or
jl
repz
xorb
repz
insb
fiadds
cli
and
push
std
imul
stc
repz
call
int
in
insb
aad
cwtl
sti
aas
jg
cld
xchg
jmp
pop
out
cwtl
rcrl
out
lahf
or
or
int3
jg
cld
stc
cmc
inc
cwtl
mov
std
sub
mov
out
lahf
aas
iret
rcl
lcall
outsl
cld
stc
repz
outsb
adc
clc
sbb
sbb
lahf
aas
jg
or
mov
sub
xor
aad
movsb
pop
xor
repz
repz
imul
lahf
jg
xor
ja
jnp
jnp
ret
in
cld
stc
repz
inc
cld
hlt
xlat
add
add
jg
into
jecxz
outsl
dec
lods
fidivrl
test
push
jecxz
push
pop
lret
xchg
sub
aas
jmp
inc
cmpsl
pop
enter
out
pop
sbb
cwtl
or
xchg
mov
sub
std
cltd
mov
pop
or
nop
repz
lds
and
jg
xor
rclb
vpaddd
out
lahf
jg
xchg
jno
push
jb
scas
sarl
dec
push
repz
fmull
aad
out
fwait
ja
insl
lods
iret
xchg
mov
mov
sub
inc
lock
jmp
sub
sbb
fwait
aaa
outsl
push
push
fs
xchg
cltd
dec
popa
sub
ljmp
sub
ljmp
mov
ss
out
fwait
aaa
jg
bound
mov
fidivrs
ret
into
sub
dec
mov
fstl
and
out
mov
rcll
int
loop
and
popa
fdivr
cwtl
mov
mov
fincstp
mov
int3
mov
loope
xchg
or
lods
xchg
adc
inc
data16
in
fbstp
sub
in
int
aaa
outsl
lcall
test
lock
xchg
fistpll
inc
jp
inc
testb
jle
inc
cli
jb
mov
imul
dec
and
fnstenv
mov
ja
imul
out
pusha
js
cli
icebp
insl
mov
mov
inc
or
arpl
push
xchg
mov
sbb
stc
repz
xlat
or
cmpsl
popf
aad
loop
push
cld
stc
xlat
sub
cltd
iret
xchg
push
fistpl
aad
pop
movsb
lret
adc
jno
stc
repz
stos
sti
sarb
iret
lret
cmpsb
popf
lock
push
ret
cwtl
sbb
sub
push
mov
repz
lahf
repnz
mov
adc
fcomps
push
stc
ret
dec
mov
into
mov
mov
push
enter
mov
sbb
add
mov
and
or
ds
inc
mov
int
lahf
aas
dec
pop
pop
push
mov
and
cmp
data16
jno
enter
pushf
mov
in
iret
lahf
clc
mov
mov
in
shrl
pop
or
filds
xlat
in
add
inc
mov
mov
jo
jb
jle
aam
in
std
mov
mov
fwait
aaa
outsl
mov
inc
mov
xor
stos
cmc
cmc
in
int
pop
push
or
cmc
jno
push
mov
pop
mull
frstor
adc
sarb
pop
out
mov
add
imul
and
xor
mov
rcl
fidivrs
sub
ret
inc
lods
pop
xor
xor
inc
aas
mov
mov
mov
int
aaa
push
jmp
es
stc
xchg
xchg
inc
sub
mov
mov
nopl
das
or
mov
arpl
js
js
sbb
int
in
sbb
push
jae
pop
and
lock
mov
jg
repz
loopne
mov
jns
and
int3
div
push
int
aaa
outsl
cmp
xchg
xlat
jno
jno
icebp
fwait
repz
jge
lahf
cwtl
insl
cltd
inc
xchg
mov
test
push
mov
std
or
lahf
aas
jg
shlb
cmpsl
mul
es
das
stc
repz
sub
inc
adc
jne
repz
pop
call
jle
jecxz
jecxz
mov
pop
push
test
iret
dec
and
js
out
aas
outsl
scas
xor
lods
mov
packuswb
cld
stc
psrld
jnp
fdivrp
icebp
jmp
jmp
inc
mov
and
jns
mov
xchg
xchg
lahf
jns
xchg
push
je
push
inc
fidivrs
inc
xchg
cli
std
nop
shlb
aad
lcall
daa
and
rcll
mov
das
les
popf
pop
out
pop
mov
lds
dec
adc
out
cld
sub
jno
jl
es
inc
xor
xchg
cmpsb
call
dec
mov
xor
xchg
adc
dec
aam
jne
es
pop
repnz
stc
repz
adc
mov
add
lods
pop
ss
add
out
inc
fidivs
cmp
mov
lea
popa
xchg
mov
sbb
xor
fs
iret
aad
fcomp
jg
cld
stc
or
mov
push
cmp
jbe
pop
add
push
or
aas
stc
adc
outsl
and
mov
mov
out
int
mov
jg
ljmp
cwtl
outsl
fidivrs
inc
jmp
dec
mov
ret
adc
mov
adc
fists
jl
scas
add
fwait
aaa
outsl
ficoms
inc
scas
sub
sub
mov
int
add
jnp
popf
sahf
mov
outsl
fidivrs
loope
fnstenv
vcvtpd2dq
fwait
xchg
icebp
xor
loope
jno
sbb
outsb
fidivrs
movsb
pop
shll
in
iret
lahf
jg
dec
mov
or
stc
stc
repz
fdivs
aad
add
test
leave
push
xlat
outsl
and
stc
daa
pop
outsl
push
pop
or
cmpsb
or
or
inc
mov
lret
push
push
insl
or
iret
xor
aaa
fdivl
ret
aaa
out
test
xlat
xchg
into
gs
cmp
iret
fnstcw
out
xchg
push
inc
xchg
pushw
push
pop
dec
mov
and
xchg
or
adcb
imul
add
adc
add
pop
imulb
xchg
incl
and
ja
push
test
outsb
sub
xchg
inc
ss
mov
pop
jmp
pop
xchg
daa
sbb
sbb
xchg
aas
jg
cld
xor
sub
jle
jno
mov
cmp
out
lahf
jl
ret
leave
mov
and
sub
mov
mov
pop
imulb
ret
fwait
aaa
outsl
xchg
test
xchg
jge
cltd
xchg
sbb
repz
push
fildl
into
cmpsb
arpl
int
ja
mov
sti
cld
pop
mov
jg
xor
cld
xchg
rorb
out
leave
lret
mov
pop
or
jne
fadds
les
jns
cmovo
imul
inc
outsl
ss
mov
addr16
movsb
pop
addr16
fidivrs
mov
fcomp
xchg
cld
lret
int
aaa
outsl
jl
lock
xchg
lds
out
add
mov
dec
mov
je
roll
outsl
fiadds
leave
xchg
cli
movsb
into
and
cld
stc
xlat
mov
out
inc
out
dec
xchg
xchg
push
dec
and
call
jg
cs
mov
or
sbb
mov
adc
cwtl
out
inc
lret
pop
mov
lods
mov
enter
mov
fs
test
push
das
push
unpckhps
push
push
inc
test
scas
push
cmpsl
pop
mov
in
dec
pop
pop
push
mov
push
xchg
mov
pop
pop
jno
push
push
notl
mov
pop
pop
adc
cmp
adc
push
push
push
les
lahf
mov
repz
movb
and
push
xlat
push
out
lods
mov
mov
push
push
aam
dec
pop
push
ja
mov
push
aas
push
mov
mov
xchg
rorl
push
mov
and
push
mov
add
push
call
sbb
push
lods
mov
push
xchg
push
lahf
sub
mov
push
bound
jg
dec
inc
sub
push
and
push
daa
lahf
cmc
push
inc
sub
mov
ja
pop
fcoml
and
sub
mov
lds
adc
push
and
push
out
pop
call
mov
push
bound
add
push
iret
mov
jg
dec
adc
push
push
mov
fisttpl
out
pop
outsl
lods
cmp
lods
push
iret
push
push
or
inc
dec
mov
inc
push
test
push
pop
adc
inc
mov
imul
push
pop
push
lahf
adc
sbb
in
dec
pop
xor
leave
or
mov
add
push
fists
pop
adc
push
push
push
lret
pusha
mov
adc
sub
pop
push
scas
xor
or
loope
xlat
mov
push
and
push
push
push
aaa
inc
sub
mov
pop
push
and
lods
cmp
and
mov
mov
push
adc
lods
adcl
push
inc
push
lahf
lds
pop
adc
push
adc
imul
pop
mov
sbbl
push
push
push
fildll
push
inc
sub
push
pop
lods
mov
push
sub
rorb
mov
inc
fists
lods
mov
mov
push
and
mov
pop
push
out
sub
mov
call
fcoml
push
scas
or
inc
sub
inc
aas
push
adc
jmp
push
scas
mov
mov
push
dec
or
push
ja
mov
push
inc
lods
mov
iret
bound
pop
push
pop
lods
js
sub
push
or
lods
mov
mov
push
adc
push
lods
mov
push
push
mov
adc
push
adc
orb
push
cmpsl
push
lods
sbb
sub
loop
push
mov
dec
lods
js
scas
push
decl
aam
push
push
add
jge
ljmp
push
idivl
sub
pop
pop
inc
push
push
daa
stos
xchg
jns
out
cmp
rolb
dec
inc
dec
add
push
xor
fdivrl
fucomip
enter
or
push
out
fwait
aaa
clc
or
es
jb
cmpb
mov
lock
mov
cld
sti
addb
or
jg
or
adc
bndstx
jb
mov
pop
dec
les
adc
jb
out
lea
mov
jbe
xlat
mov
outsl
ficoms
mov
mov
scas
xchg
adc
add
jne
int
xor
lods
leave
ss
xchg
sub
lahf
jg
lahf
cmp
cmpsb
nop
std
push
inc
xchg
xchg
aaa
outsl
fiadds
mov
scas
pop
scas
mov
call
movsl
xchg
xchg
jne
ljmp
pop
rolb
fdivrl
adc
data16
or
ja
mov
ljmp
jo
and
fwait
aaa
outsl
fiadds
es
sbbl
cmp
jne
adc
in
test
fidivrs
xor
mov
test
gs
ljmp
push
xorb
daa
fbstp
iret
lahf
aas
push
push
push
lret
decl
push
cli
or
jg
stc
repz
int3
ret
lret
xchg
les
or
fdivp
out
lahf
inc
sub
pusha
aas
and
cld
stc
int
fwait
fwait
xchg
arpl
mov
xchg
insl
cwtl
cmc
mov
pop
mov
bound
xchg
cmpsl
lods
push
adc
dec
and
mov
push
mov
stc
jae
sub
fs
jg
sub
std
cli
pop
push
inc
push
out
enter
ss
jnp
add
or
iret
aas
xchg
test
imul
sub
cld
stc
repz
or
cmp
out
sbb
int
dec
mov
mov
popf
mov
imul
repnz
lahf
sarb
mov
xor
ficomps
scas
pusha
sub
xchg
mov
fidivrs
mov
das
xor
sahf
adc
mov
inc
add
sbb
sbb
out
cld
stc
repz
xor
pop
jb
add
cmp
cmc
xor
jg
int3
mov
aaa
imul
or
dec
adc
out
imul
mov
cld
pop
ret
cmp
and
mov
lret
repz
lahf
sbb
cltd
push
dec
dec
out
inc
jns
mov
mov
cld
stc
sub
ljmp
cld
imul
sbb
xorl
in
and
negb
or
in
mov
pop
sahf
and
iret
sarl
ss
stc
repz
inc
mov
adc
adc
aas
jg
cld
sbbb
and
fs
cmpsl
out
mov
pop
insb
jbe
rol
cmp
cs
jg
cld
stc
les
leave
movsb
hlt
loop
sahf
movsb
mov
mov
add
push
je
mov
repnz
and
jle
jns
out
adc
mov
adc
push
pop
or
fdivrl
fnstcw
mov
push
mov
push
xor
inc
sub
jb
fisubs
xchg
inc
xor
in
sbb
adc
pop
scas
jle
das
ds
dec
mov
inc
xchg
ror
es
jle
mov
out
iret
out
push
add
mov
fsubs
scas
dec
jecxz
dec
mov
mov
xchg
ficoms
subb
pop
int
aaa
outsl
lods
mov
leave
repnz
out
jns
jns
out
or
push
cmp
popa
push
pop
pop
pop
dec
fwait
aaa
outsl
ficoms
enter
jge
mov
out
je
xchg
cmp
scas
jmp
icebp
cld
or
rorl
sub
aaa
outsl
fisubrs
adc
cmp
roll
mov
jb
out
pushf
cmpsl
mov
mov
pop
test
mov
jl
out
mov
ja
in
sbb
mov
repz
pushf
sarl
sub
stc
xchg
cmp
in
in
movsb
fs
mov
test
push
fwait
aaa
inc
jge
iret
cmpsl
cld
out
push
xchg
out
add
xor
sbb
dec
cmpsl
out
jmp
das
sbb
jns
out
fld
aas
jb
mov
cmp
mov
jle
lret
mov
aad
aas
cmp
lea
loope
fwait
aaa
jnp
shr
xchg
add
jg
cld
mov
mov
mov
mov
mov
adc
and
insl
xchg
int3
cmp
jle
cld
stc
aaa
push
or
mov
push
adc
mov
inc
push
pop
imull
mov
pop
push
test
das
orb
inc
out
fwait
aaa
push
mov
iret
in
ljmp
inc
sub
xor
jns
out
xchg
adc
jp
jp
clc
addr16
loop
dec
fwait
aaa
outsl
fisubs
popa
outsl
sbb
inc
push
adc
popa
push
daa
int
jo
pop
xchg
aaa
outsl
add
push
jae
inc
pop
adc
out
fwait
arpl
jne
push
mov
cmp
fidivrs
or
xor
outsb
and
in
push
push
xchg
xchg
jp
outsb
ficoms
hlt
or
mov
push
incl
iret
mov
out
sti
xchg
xchg
arpl
xlat
pop
shl
repz
int
pop
stos
ja
and
push
or
push
aas
lahf
jg
push
push
push
out
stos
inc
stos
mov
mov
pop
cld
imul
popa
enter
fisubrs
adc
mov
stc
repz
sahf
sti
push
sbb
fmul
addb
and
cld
insb
xor
lds
pop
out
out
push
sub
sub
and
fiadds
xchg
jae
and
ljmp
outsl
push
jnp
pop
dec
xchg
or
jg
mov
aaa
cltd
xor
cmpsb
dec
dec
sub
jb
jns
sub
aaa
jp
mov
ljmp
mov
jge
adc
pop
inc
inc
mov
iret
fwait
das
xlat
mov
lret
mov
adc
in
adc
ret
mov
jo
sub
push
shlb
mov
outsl
lcall
repz
hlt
scas
loop
fs
out
cld
cld
stc
or
and
lret
cltd
sahf
into
into
mov
movb
clc
fwait
aaa
outsl
fimuls
cmp
lahf
mov
mov
aam
push
jns
out
imul
inc
out
addl
mov
jl
adcl
push
xchg
and
add
mov
xor
inc
aam
cmc
sbb
xor
mov
sub
add
add
lret
pop
mov
mov
adc
insl
mov
sub
push
sub
add
ret
aam
push
lcall
divb
adc
dec
jg
enter
adc
sub
mov
sub
scas
stos
out
and
rcl
sbb
inc
inc
les
loopne
and
roll
and
dec
push
inc
xlat
and
mov
push
xchg
pop
inc
aam
add
add
out
push
pop
sbb
rorl
add
adc
insb
test
andb
and
stos
loopne
nop
push
adc
mov
orl
jae
push
inc
add
mov
and
or
scas
subb
pop
sbb
inc
imul
leave
mov
lret
or
lock
cmc
cmp
add
push
aam
fcmovbe
sbb
icebp
jnp
ljmp
adc
jg
test
jecxz
fcmovne
inc
gs
pop
lock
or
mov
mov
orb
sbb
mov
or
jb
inc
aad
adc
aaa
and
adc
mov
push
adc
and
repz
jno
test
push
push
jl
fs
imul
das
lcall
push
add
xor
orb
inc
add
fwait
or
lock
mov
push
ret
mov
incl
test
fwait
out
push
mov
xchg
lock
adc
test
xor
decb
or
rcll
pop
mov
adc
and
fmul
pop
add
mov
bswap
mov
repnz
jae
pop
enter
cmp
into
mov
xor
jle
es
xchg
stos
or
add
adc
rcll
xchg
push
cs
or
cmp
testb
inc
xchg
std
cltd
mov
adc
sbb
mov
ret
mov
add
into
stc
push
jno
orb
mov
or
pop
mov
rclb
mov
jno
inc
std
push
repz
arpl
push
lock
mov
xchg
sub
rol
add
lret
sbb
enter
imul
pop
add
mov
or
inc
out
jo
inc
xchg
or
dec
sbb
enter
push
lds
loope
or
imulb
fimull
addr16
push
cmpl
popf
add
add
rol
inc
pop
mov
or
and
adc
cli
or
pop
push
lods
push
aam
jnp
outsl
ljmp
nop
mov
ljmp
mov
rolb
fcomi
call
pop
cmp
or
lcall
push
cmp
mov
adc
mov
aad
ds
test
mov
inc
inc
cld
icebp
icebp
push
adc
fists
xchg
or
dec
adc
loope
pop
xorl
out
mov
fcomps
negl
fidivrs
add
mov
js
push
jb,pt
outsl
rcr
or
mov
mov
add
leave
pop
in
data16
add
adc
jg
push
sub
cmpsl
stos
mov
imul
and
adc
push
inc
cmp
push
mov
xchg
mov
push
aaa
das
icebp
xchg
add
out
add
dec
inc
push
push
fwait
add
data16
xchg
sub
or
add
sahf
aad
jae
and
adc
add
stos
stos
rorb
arpl
pusha
das
mov
push
push
inc
inc
add
ret
insl
push
push
btr
push
enter
adc
ja
push
imul
call
loope
lret
jbe
mov
add
sbb
adc
or
add
loop
subl
testb
add
add
mov
andb
sub
push
adc
test
mov
sub
rclb
mov
ret
inc
aam
adc
je
cmp
inc
lods
xchg
ffree
push
add
xor
out
idiv
adc
push
movsb
add
add
sub
mov
fwait
push
shl
xchg
roll
sbb
fsubr
divb
add
test
add
xor
mov
adc
call
cmpsb
fcmovnbe
push
and
add
mov
loope
mov
outsb
add
daa
lea
loopne
push
and
jno
mov
daa
pop
xchg
test
test
add
and
enter
mov
into
sbb
in
movsb
aam
jae
test
jnp
push
jo
adcb
movd
pop
cmpsl
push
jmp
mov
ret
or
ss
and
int3
rsm
pop
inc
insl
pop
push
sbb
aaa
adc
out
rorb
hlt
out
pop
add
nop
ret
or
add
les
pop
cmp
push
gs
ret
les
sbb
andb
inc
adc
roll
xchg
mov
jb
cld
mov
adc
outsb
sahf
xchg
int
leave
jno
mov
push
ret
call
movlps
inc
rolb
outsl
rolb
repnz
rorb
dec
adc
test
adc
mov
mov
adc
rcrb
scas
pop
push
sbb
add
andb
xchg
cwtl
add
out
push
mov
fbstp
out
bt
mov
jbe
in
add
leave
adc
mov
mov
sub
pop
add
pop
insb
or
mov
push
and
and
into
dec
add
xchg
or
sub
mov
lret
and
adc
sub
mov
push
pavgw
jg
dec
cmc
cmpsb
push
fistl
mulb
aam
sbb
loope
jle
xor
enter
bswap
push
push
fdivs
xor
outsb
insb
sbb
add
push
lret
mov
cmp
cmp
adc
dec
out
loop
mov
rorl
aam
lcall
adc
cltd
mov
or
out
mov
push
test
aad
pop
and
imul
or
mov
pop
pop
mov
dec
sub
push
shlb
gs
xor
xor
idivb
in
jecxz
or
push
psubsb
or
mov
mov
test
add
xchg
lock
shrl
mov
and
repz
add
push
fwait
cmp
arpl
in
aas
lret
daa
insb
pop
or
xchg
pop
mov
push
push
jmp
push
orb
adc
daa
outsb
mov
bsr
inc
inc
lods
cmp
lock
mov
xchg
mov
pop
sub
sbb
or
sub
rcrb
add
enter
popf
jmp
or
add
aad
ljmp
das
rorw
xchg
mov
fidivl
adc
in
lods
mov
xorb
inc
push
mov
rcll
pushf
mov
pop
lret
addr16
pop
inc
add
mov
std
pop
sbb
and
sbb
rolb
and
mov
xlat
push
jno
stos
rorb
icebp
mov
sub
push
rcll
add
mov
mov
ret
sbb
aas
rcrb
enter
sar
iret
sub
cmp
or
pusha
mov
cmp
aad
rcll
data16
adc
pop
or
mov
scas
ror
imul
aas
aam
test
insb
inc
mov
addb
or
testb
sub
xor
jo
xor
sbb
add
jae
add
out
add
push
mov
lock
inc
pusha
mov
loope
xchg
push
inc
inc
mov
pusha
imul
leave
shlb
add
clc
addr16
pop
xorb
adc
mov
sub
pop
xor
mov
and
add
and
xstore-rng
cmpsl
inc
cmp
jbe
pop
jbe
mov
jb
lods
adc
push
xchg
test
mov
xorl
imul
in
adc
push
idiv
enter
or
subb
add
inc
rcr
adc
xor
scas
ds
jp
pop
cmpsb
pop
cmp
sbb
inc
jle
andb
call
sbb
js
dec
mov
xchg
bound
add
test
sub
jb
cld
mov
loopne
inc
rcrb
clc
les
adc
adcb
out
roll
mov
pop
pop
jge
mov
or
rcl
rolb
sbb
rcl
test
jb
push
je
aam
js
lahf
rcrl
mov
push
xlat
into
sub
push
push
jae
icebp
add
or
sbb
lret
cmp
pop
jae
push
inc
clc
mov
adc
lods
popa
and
inc
test
mov
xor
sbb
cltd
add
inc
es
pop
sub
jne
shlb
push
adc
rorb
pop
or
sbb
or
jb
cmp
or
ret
test
and
addr16
and
mov
lds
push
mov
mov
lock
pop
add
orb
insl
xor
mov
pop
out
call
push
mov
inc
leave
xchg
fs
add
and
or
jb
xor
jmp
jne
push
mov
mov
or
xor
push
and
test
ret
adc
sbb
sbb
push
xor
rolb
push
ret
xor
pop
push
test
add
cmp
xchg
mov
add
mov
jle
pop
sbb
int3
adc
insb
mov
mov
or
pop
inc
stos
adc
popf
mov
je
push
lods
or
adc
popf
jo
notb
push
add
jmp
flds
mov
in
jp
rorb
and
sub
das
mov
rorb
push
mov
adc
mov
pop
sbbl
nop
sbb
push
popa
or
fwait
in
cmp
mov
fiaddl
xchg
out
xor
and
test
adc
mov
add
inc
stos
enter
pop
dec
das
pop
or
into
add
mov
call
je
shrl
xchg
pop
test
pop
mov
adc
lds
dec
or
loope
inc
lret
add
sbb
loope
adc
cs
arpl
es
adc
mov
inc
jle
inc
xchg
sbb
ljmp
leave
sbb
inc
stos
sbbl
jne
outsl
dec
addr16
cmp
inc
mov
xor
inc
push
jae
push
xchg
enter
mov
test
cmp
or
or
cmp
xor
repnz
add
pushf
rcl
orl
subl
xor
repz
jne
ljmp
mov
fcomp
loopne
jne
dec
in
or
sbb
loope
cld
jno
in
jne
add
xchg
sub
xor
cmovg
out
mov
push
sub
mov
stos
ljmp
add
mov
adc
adc
xor
xchg
and
or
jecxz
adc
mov
ss
xchg
mov
xchg
add
cs
or
or
dec
pop
fiaddl
sbb
jb
jne
mov
adc
push
mov
dec
push
sub
or
flds
mov
or
adc
out
clc
or
adc
or
inc
aad
xlat
sahf
push
cli
xor
cmp
mov
ljmp
sbb
adc
dec
dec
popf
push
mov
xor
inc
loope
subb
mov
pop
daa
inc
lds
xchg
test
stos
or
dec
mov
or
fmull
fs
rcl
mov
or
or
pop
rolb
or
adc
push
dec
push
xchg
mov
rorl
insb
cltd
cmp
inc
pop
add
add
or
das
lods
sbb
shlb
inc
inc
mov
sbb
mov
stc
pop
or
aam
je
hlt
sbb
add
pop
mov
pop
sbb
pop
and
rorb
jmp
or
icebp
add
pop
cmp
push
or
mov
pop
push
shrl
lds
imul
das
int3
add
scas
and
jg
adc
inc
insb
rolb
push
popf
cmp
adc
testb
inc
stos
cmp
mov
push
adc
nop
push
popf
sub
in
iret
orb
mov
add
push
inc
mov
xchg
stc
sub
gs
sahf
subb
jmp
adc
jno
rorl
and
ret
pop
push
mov
in
dec
push
inc
mov
add
jnp
jbe
xchg
arpl
add
inc
mov
lcall
aam
out
lock
inc
cmp
sbb
jl
repnz
dec
sub
cmp
or
jmp
aas
lds
sbb
adc
dec
mov
mov
add
call
pop
jg
movsl
mov
or
ror
or
ret
push
mov
xorl
add
fsubl
jno
repnz
or
and
adc
or
lds
cmpl
sbb
mov
or
pop
sbb
sbb
cmp
call
jno
push
or
mov
xchg
dec
inc
jp
and
fmuls
bound
or
mov
mov
adc
add
mov
xchg
mov
mov
xor
rolb
dec
popf
push
popw
sbb
and
in
dec
daa
mov
and
dec
xor
leave
mov
mov
sbb
cmp
mov
sub
addb
adc
adc
ret
mov
int3
and
pop
inc
cmp
les
push
xor
loope
rorb
mov
movl
mov
andl
or
sub
or
xor
fsubl
adc
xor
leave
or
mov
add
inc
dec
out
jo
mov
jle
inc
rcrb
pop
stos
sti
icebp
inc
and
pop
stos
loopne
sbb
dec
jb
mov
loope
pop
inc
xchg
inc
pop
inc
or
into
pop
lret
loop
xlat
xchg
or
adc
orl
adc
nop
or
xchg
sbb
sarl
dec
mov
mov
push
pop
das
ret
mov
mov
jmp
add
insb
sub
xlat
push
das
or
aaa
out
jmp
stos
aaa
in
std
pop
push
xor
ss
nop
jmp
inc
aas
xchg
lds
bound
inc
jle
mov
mov
or
rclb
bound
cmp
cmp
lock
shlb
push
scas
xchg
test
icebp
cwtl
loopne
mov
mov
cmp
cmp
push
mov
shll
push
lea
mov
xchg
and
insb
mov
adc
pop
xor
shrb
test
adc
cmp
insl
repnz
add
cmp
inc
sbb
adc
jne
cmp
sahf
add
aas
sar
into
adc
jae
inc
inc
mov
and
adc
inc
mov
fsts
popa
imul
test
rorl
test
fistl
dec
mov
push
inc
fs
inc
adc
add
and
aad
movsl
sub
xor
xchg
outsb
stos
cs
pop
sub
or
aam
dec
xor
stos
or
mov
outsl
dec
cmpsb
pop
jne
or
pop
stos
push
es
int3
mov
popf
out
adc
push
loop
insb
jne
negl
push
or
push
push
mov
shlb
or
enter
inc
pop
mov
cmpsb
adc
adc
mov
mov
call
test
cltd
lahf
xlat
lcall
sub
sahf
aaa
jo
rorb
addl
lods
pop
push
das
xchg
rolb
mov
sbb
push
cltd
push
test
mov
push
rcrb
add
cwtl
out
or
add
inc
mov
stos
mov
inc
sub
add
hlt
stos
sub
mov
outsb
or
and
sti
mov
scas
cmp
sti
rclb
loope
push
sbbb
or
push
js
or
icebp
rcrb
or
rolb
sub
into
push
push
sub
dec
add
push
pop
stos
cmp
or
int
adc
push
fs
rolb
test
stos
adc
cmpsl
rolb
inc
add
mov
sarb
sbb
inc
lret
bound
and
dec
cli
ds
push
jge
popf
add
push
imul
ss
inc
test
outsl
testb
ret
cmp
or
not
mov
mov
stos
outsb
push
jmp
sbb
push
sub
jl
or
fmul
adc
roll
and
add
cmp
dec
push
mov
rep
mov
sbb
sbb
xchg
add
les
mov
hlt
adc
push
xor
lret
sbb
and
or
lds
or
loopne
inc
mov
xchg
push
mov
push
mov
fsubl
test
push
add
mov
adc
or
dec
popa
stos
imul
pop
shlb
cli
mov
mov
and
mov
push
popa
jb
sub
push
push
sbb
jbe
mov
cli
loopne
jge
je
nop
mov
leave
shrl
mov
and
daa
push
stos
leave
popa
jo
cmp
xchg
add
sub
sub
lret
shl
add
lock
lods
add
sub
push
sub
push
negb
pop
push
pop
call
inc
std
push
aaa
punpckhdq
lret
pop
inc
fstpl
rol
or
pop
mov
jo
jmp
mov
cmp
or
jg
jb
shr
popf
stc
add
push
loope
or
les
loop
dec
adc
adc
and
xor
or
push
add
or
add
aas
xchg
push
push
dec
add
and
mov
pop
pop
inc
arpl
cmpsb
push
inc
orb
push
cmpsb
add
call
test
loop
test
jmp
sub
jg
sbb
dec
mov
daa
shll
icebp
or
push
pop
pop
mov
adc
call
sub
push
push
xor
mov
pop
repz
stos
adc
xchg
mov
sbb
add
sub
cmp
xchg
in
jp
sub
or
out
lods
push
inc
or
andb
inc
jae
jp
orb
jmp
or
andl
mov
fists
mov
sub
pop
and
mov
mov
sub
lret
push
out
or
call
subb
loopne
out
sub
push
add
adc
jl
popa
shll
enter
les
dec
dec
push
mov
cwtl
and
or
into
test
add
imul
mov
cmp
add
inc
in
sub
dec
dec
dec
lock
movb
cmp
nop
sub
adc
inc
pop
fnstsw
lret
fmull
inc
cltd
adc
les
or
push
fisttpl
adc
add
push
fisttpll
aam
daa
sbbb
lock
mov
sbb
outsl
lods
add
adc
xor
mov
bound
in
js
adc
dec
adc
push
adc
stos
or
adc
fcmovnu
adc
xor
stos
dec
das
mov
adc
push
inc
and
xchg
arpl
pusha
fwait
add
lock
dec
into
adcb
clc
sbb
or
add
lret
xchg
js
int
mov
ljmp
adc
xchg
and
push
scas
add
sbb
andl
test
add
shll
sub
cmp
mov
inc
adc
cmp
pop
push
mov
into
xor
fadds
dec
mov
cmp
mov
ror
bound
push
push
add
repnz
sbb
xchg
loopne
and
pop
add
das
out
icebp
mov
imul
jge
and
mov
cmp
addr16
lds
sbb
cmp
lret
lahf
enter
pop
int
jne
push
adc
push
sbb
lods
jp
push
jns
sbb
dec
loopne
out
push
loope
or
ss
adc
mov
push
push
mov
pop
insl
xchg
push
je
mov
or
shll
sub
add
add
adc
movsl
movl
add
sub
subb
or
pop
pushf
sbb
jns
bound
movb
push
mov
push
and
xor
xchg
mov
scas
into
xchg
cmp
sbb
icebp
ret
outsb
movsb
add
push
pop
inc
and
js
jle
add
fsubl
and
push
bound
outsb
mov
rorl
adc
out
sbb
sub
loope
js
jb
push
jl
dec
mov
pop
lock
mov
add
adc
inc
cmp
xor
push
dec
push
xchg
ljmp
hlt
mov
mov
in
sub
mov
push
dec
adc
sub
push
cs
dec
adc
ret
add
lds
jmp
sbb
dec
sarb
xchg
add
stos
clc
movsl
testb
shll
push
jb
pop
fs
jb
mov
pop
sub
sub
xorl
mov
adc
and
push
sbb
idiv
or
sbb
sub
scas
mov
and
inc
and
sub
add
xchg
inc
mul
adc
inc
aaa
xchg
push
inc
mov
push
sub
mov
jge
mov
add
setne
pop
dec
fmulp
push
shlb
jecxz
subb
sbb
inc
add
or
subl
sbb
test
lret
cmp
and
adc
xor
sbbb
pop
push
stos
cmpsl
stos
adc
rclb
ljmp
enter
adc
xor
movsb
and
push
or
sub
push
xchg
dec
fs
adc
ja
and
movsl
lock
aam
cmp
sub
mov
inc
sbb
test
std
inc
ret
imul
push
das
cmpb
sbb
cmp
dec
roll
sbbb
pusha
dec
std
jbe
push
jecxz
es
adc
push
inc
mov
mov
inc
test
movb
add
stos
push
int
and
loope,pn
loope
sub
jmp
inc
cmp
mov
roll
inc
xor
dec
push
inc
add
clc
dec
cmp
in
shr
mov
jo
clc
lds
ret
xor
fldl
movb
add
inc
into
out
cltd
mov
sbb
mov
ljmp
into
jno
xor
pushf
jecxz
jl
jo
push
mul
and
fcmovb
cmp
jo
and
and
mov
lret
rorl
sarl
or
xor
add
and
mov
pop
xor
je
mov
sub
icebp
or
mov
or
in
sub
sbb
pusha
sub
ret
push
loopne
mov
je
xchg
in
out
adc
xchg
pusha
stos
lret
into
test
xchg
loop
pop
inc
push
and
sub
push
push
call
inc
out
jo
outsl
test
insl
ret
popa
xchg
je
add
mov
dec
mov
pop
cmc
les
bnd
andb
push
mov
int
pop
sbb
mov
push
mov
popa
push
and
scas
cmpsb
or
inc
or
mov
xlat
push
and
inc
stos
stos
subl
mov
int3
push
data16
faddl
xlat
add
adc
mov
or
je
xchg
cmpsl
cmpsb
dec
xor
mov
adc
cmp
mov
pop
sbb
mov
adc
pop
adc
and
pop
pusha
mov
pop
push
sub
imulb
subl
jo
test
sahf
sub
add
jl
rolb
les
pop
loop
adcl
adc
inc
js
mov
ret
test
push
je
adc
js
dec
dec
ljmp
test
cmp
or
mov
lcall
sbb
out
adc
mov
addl
mov
call
dec
das
mov
add
or
mov
fisttps
push
pushf
fs
adc
popa
mov
inc
sbb
push
push
push
dec
or
adc
sub
pop
jl
adc
nop
stos
sbb
add
push
mov
adc
add
cmc
inc
sub
cmp
or
stos
or
jno
fistps
mov
int3
inc
add
fisttpll
jae
mov
and
mov
pop
sub
pop
out
sbb
adcb
sub
mov
xor
or
ret
mov
xor
inc
cmpsb
shl
sbb
mov
inc
and
add
or
pop
mov
insb
out
jae
ret
out
test
mov
push
lock
movb
mov
push
sbb
clc
add
test
pop
mov
or
add
push
mov
testb
inc
bound
inc
enter
add
and
and
aaa
mov
push
das
cli
test
incb
int
add
or
lret
mov
mov
sbb
mov
and
addb
lea
mov
pop
sbb
add
adc
cmp
push
repnz
xor
mov
mov
sbb
inc
or
jl
shrl
sub
outsb
movb
adc
imul
nop
popa
and
imul
push
cmpsl
sbb
stos
icebp
add
adc
push
mov
inc
sub
pop
mov
xor
or
lahf
mov
add
or
sbb
cli
add
repnz
push
xor
add
testl
rolb
xor
cwtl
int3
add
ret
mov
into
aam
or
popa
std
sub
dec
jo
add
out
mov
mov
cmc
and
loopne
sbb
dec
aad
xlat
mov
mov
insl
mov
movsb
cwtl
pop
push
out
add
in
jo
aam
push
cmp
push
int3
mov
xchg
sbb
out
mov
shlb
inc
pop
ret
stc
xchg
ret
cltd
mov
mov
stos
add
inc
lea
push
jl
cltd
mov
inc
add
fsub
loopne
bound
subb
inc
inc
cli
aas
or
pop
push
loope
or
add
mov
xchg
andb
scas
inc
xchg
mov
inc
xor
test
pop
pop
sbbb
mov
popa
add
pop
movsl
mov
call
push
or
jae
addl
or
sub
in
pop
xchg
mov
xchg
movsl
inc
pushf
push
push
aas
or
dec
lds
push
or
xchg
jo
pop
inc
stos
loop
aad
movsl
mov
xor
rclb
sub
jg
pop
je
push
stos
pusha
add
xor
push
aam
xlat
std
adc
shrb
cmp
sub
jno
je
add
sbb
ffree
add
dec
in
push
xchg
jecxz
sub
push
jo
mov
add
daa
aad
dec
sbb
or
cmpsl
xchg
stos
sbb
xchg
jae
sbb
sbb
call
dec
rolb
push
adc
in
add
inc
pushf
or
test
or
out
ficoml
loop
mov
shl
stc
cmp
rcll
push
push
push
insb
lods
rolb
scas
inc
dec
mov
sbb
cmp
push
movsb
cpuid
cmpsb
jns
push
orb
adc
les
negb
jae
xchg
dec
mov
mov
in
and
gs
mov
rolb
repnz
inc
add
nop
imul
or
or
les
dec
sbb
add
cmovle
and
mov
or
or
xor
mov
and
in
adc
push
dec
mov
sarb
push
or
inc
call
sub
movb
mov
cmp
xchg
js
rorb
sbb
jbe
inc
aad
loop
push
cmp
into
add
loope
lock
repnz
iret
jns
fsts
mov
cmp
jb
push
cmp
or
mov
cmp
push
scas
out
out
adc
sub
fsubr
rclb
icebp
sbb
mov
repz
adc
std
cmp
ret
adc
dec
fucomp
adc
add
pcmpeqw
cltd
cmp
mov
push
push
or
sbb
andb
xor
push
xor
sbb
add
sbb
sub
adc
or
loope
adc
jo
subb
test
cmp
lock
rolb
mov
rol
and
dec
jne
hlt
push
sub
sub
push
int
jnp
pop
nop
sbb
cmp
sbb
popa
add
sbb
call
pushf
clc
arpl
ss
sbb
jne
lock
mov
sub
adc
fidivs
lds
xor
adc
add
repz
push
pushf
loopne
orb
lea
rclb
pop
pop
mov
addr16
or
add
or
add
rclb
or
push
push
test
or
xchg
test
and
jge
call
ljmp
adc
push
cmp
into
mov
ljmp
mov
mov
and
pop
jno
mov
imul
int3
add
cpuid
pop
shlb
add
mov
lret
xor
hlt
rorl
les
cmp
xor
sahf
mov
push
jne
leave
int
pop
add
inc
push
add
ljmp
xor
inc
cwtl
adc
sbb
push
xchg
in
cld
ds
or
add
mov
sub
push
adc
add
add
icebp
or
and
push
push
pop
mov
cmp
mov
cld
add
adc
adc
arpl
add
pop
pop
or
sbb
cmc
jp
mov
mov
and
inc
aam
mov
pop
mov
icebp
fstpl
push
scas
lcall
adc
mov
rclb
or
pop
in
pop
or
pop
inc
inc
pop
xchg
mov
cmp
and
adc
pop
andl
shll
mov
rep
lods
stos
mov
mov
dec
adc
and
loope
mov
sub
cmp
sub
pop
push
je
adc
jecxz
test
jmp
nop
sbb
add
pop
popf
cmp
bound
mov
adc
movsl
ret
jge
shrl
add
sbb
add
adc
adc
leave
and
push
fneni(8087
aad
ljmp
xor
inc
leave
lods
lcall
mov
scas
xor
fdivl
pop
lods
mov
int3
mov
ret
cmp
rcl
dec
stos
mov
iret
sarb
cltd
mov
push
jno
or
andb
dec
adcb
add
dec
loope
push
mov
push
sti
stos
sbb
push
push
rorl
inc
pop
cwtl
loope
sbbl
sub
inc
push
ss
push
sar
mov
cmp
dec
ret
lods
jp
sbb
test
rol
sbb
or
shlb
adc
xor
sbb
stos
push
hlt
jb
mov
out
call
lcall
lcall
or
push
into
mov
xor
push
inc
jle
pop
test
inc
ret
stc
add
ficoml
dec
adc
add
rcrl
push
push
popa
rolb
adc
mov
psllw
movsl
jo
inc
lret
mov
adc
daa
iret
lds
sarb
gs
mov
repnz
mov
dec
sub
clc
lret
je
jne
push
and
cwtl
mov
pop
cs
xchg
add
out
adc
lret
ret
ljmp
xchg
rorb
push
pop
mov
bound
and
mov
or
mov
std
mov
scas
dec
test
mov
or
push
adc
ja
jbe
adc
inc
jb
fldenv
mov
incb
ja
mov
lret
mov
jne
loop
test
xchg
adc
add
add
mov
jo
addb
push
std
pop
or
adc
and
mov
andb
mov
scas
pusha
push
cmpsb
pusha
enter
addr16
sbb
dec
stos
or
push
jne
adc
cld
push
lea
add
adc
dec
sarb
sbb
ret
rcrl
mov
out
cmp
aaa
dec
mov
adc
sub
movhps
andb
xchg
sub
jl
push
xchg
loop
xor
add
popf
sbb
inc
add
pop
bound
cltd
ss
xor
mov
mov
push
pop
xchg
push
jle
and
xchg
adc
and
sbb
or
or
ret
or
mov
xchg
xor
fnstcw
adc
enter
es
add
jmp
lock
ret
and
in
aaa
cli
jl
sub
adc
or
sysret
icebp
int3
addr16
push
pop
cwtl
inc
aam
inc
adc
subl
mov
not
adc
arpl
lock
out
or
loope
sub
dec
lcall
adc
or
jo
dec
cmc
leave
mov
daa
pop
push
jnp
shr
arpl
test
inc
movsb
dec
lret
dec
or
lds
fstpt
dec
and
sbb
jno
add
push
repz
add
xchg
push
cmp
jns
pop
and
test
adc
push
enter
dec
test
mov
scas
sbb
push
push
in
cmp
xchg
pop
mov
sbb
sahf
push
xchg
mov
cltd
scas
cmp
xlat
lds
test
addb
shlb
push
adc
push
add
lahf
lds
jo
push
mov
jp
sbbl
out
sbb
and
push
sbb
mov
add
add
dec
scas
out
sti
xchg
ds
mov
mov
mov
rcll
add
cmp
shrl
mov
lock
scas
or
xacquire
icebp
imul
adc
lods
cmp
mov
fcom
sbb
mov
cmp
adc
lret
cmpsl
mov
std
lods
push
push
or
or
cmp
push
mov
out
in
adc
lods
cmp
loop
nop
and
and
push
and
xchg
mov
xlat
aad
cmpb
xor
dec
imul
dec
inc
ret
inc
test
mov
dec
int
sbb
cmc
fbld
into
leave
adc
mov
add
andb
add
push
xlat
je
inc
or
add
push
and
sub
push
out
add
stos
mov
in
loop
out
rorl
pop
cltd
addr16
into
and
add
sub
mov
push
add
push
es
mov
add
repz
rorb
inc
mov
nop
sbbl
movsl
dec
push
push
sub
push
jnp
cltd
icebp
and
xchg
mov
add
sbbb
cmpsb
addb
sbb
stos
stos
stos
jecxz
add
scas
xchg
jmp
mov
into
or
push
js
aam
xor
test
lret
sub
inc
out
adc
add
out
mov
aam
cmp
push
scas
rcll
or
addl
test
adc
lcall
into
mov
xchg
add
xchg
mov
xor
lret
shrl
inc
test
mov
ljmp
mov
inc
xor
mov
pop
scas
jb
xorl
add
or
xchg
push
push
lcall
call
movsb
in
repnz
push
jl
adcl
lret
lcall
test
sbb
lock
jnp
arpl
cmpsb
xor
inc
or
mov
pusha
rolb
sub
shlb
mov
jae
aaa
ret
gs
outsb
cwtl
or
xchg
mov
sysenter
push
cmpsl
push
add
aam
sbb
add
push
or
aad
test
mov
pop
clc
sbb
or
arpl
inc
push
push
cmp
xor
or
inc
subb
mov
sub
or
sbb
clc
sub
add
xchg
add
into
ret
adc
xor
push
pop
lcall
push
mov
xchg
faddl
lret
sbb
addl
call
roll
out
jge
mov
xchg
mov
inc
lds
mov
xor
dec
imul
xor
or
add
loop
pop
add
mov
out
adc
test
mov
push
pop
sbb
push
cs
jl
or
enter
or
add
adc
inc
xchg
xchg
sub
sub
loop
mov
imul
ret
inc
sbb
test
cli
add
sbb
adc
les
mov
sbb
mov
aas
sarb
add
lcall
dec
pop
xchg
imul
clc
jno
push
lock
add
in
out
pop
mov
xchg
jne
jg
sub
into
pop
add
or
pop
mov
inc
dec
push
mov
adc
loopne
or
xchg
sub
imul
enter
jge
lds
add
ret
push
jo
jge
ret
adc
ret
loope
fsubrs
fsubrs
pusha
pop
and
ror
test
jmp
frstor
scas
mov
pop
dec
add
add
push
mov
jmp
rorb
push
movsl
cld
add
mov
bswap
dec
rolb
push
adc
add
rorl
inc
dec
shlb
shrl
jae
push
add
mov
adc
jo
sar
or
pop
mov
shlb
pop
mov
mov
aam
pop
pop
ret
jo
and
stos
loopne
adc
inc
mov
dec
inc
mov
add
mov
xor
pop
ret
sbb
add
sahf
enter
sbb
mov
lea
add
sub
bound
adc
lcall
into
mov
adc
xchg
lods
cmp
in
clc
addl
xor
mov
rcrb
mov
addl
mov
or
aam
sbb
push
mov
dec
adc
lret
roll
jecxz
or
fbld
inc
sbb
std
xor
dec
hlt
jo
and
adcl
mov
stos
pushf
imul
add
imul
xchg
sbb
or
scas
test
xor
or
test
or
pop
shr
mov
add
xorl
int
cltd
call
add
clc
xchg
add
scas
sbb
mov
ljmp
vfmadd213ps
fsubs
out
push
add
xor
out
xchg
scas
or
pop
adc
int
call
data16
xor
and
push
push
ljmp
pop
push
test
adc
test
shr
mov
in
sub
inc
push
xor
sbb
push
sarl
add
loopne
adc
inc
pop
test
add
mov
inc
xchg
adc
push
mov
xchg
addl
adc
je,pt
push
push
push
sbb
std
push
mov
std
push
lret
and
and
sub
ret
sub
ret
lret
adc
jl
cmp
push
mov
fimuls
jp
mov
roll
xchg
push
shll
push
xchg
mov
stos
add
shll
push
imul
add
push
sbb
sbb
adc
cmp
mov
lcall
and
or
xor
int3
or
xchg
push
adc
add
call
std
out
popa
push
add
repz
leave
rolb
leave
inc
sarl
or
mov
sub
or
test
bound
add
sahf
lods
rorl
pop
xchg
jo
and
or
push
push
push
or
and
lock
or
scas
lret
roll
test
in
shll
pop
insb
iret
jg
xchg
icebp
es
dec
andb
jge
pop
mov
push
mov
ret
mov
sbb
icebp
pop
lock
mov
inc
in
test
xor
icebp
addb
add
adc
leave
inc
test
pop
jae
xchg
cmp
in
inc
sbbl
add
outsb
xor
inc
sbb
fdivs
fstps
xchg
mov
and
sbbl
int
shlb
mov
add
inc
inc
scas
sub
add
inc
cmpsl
imul
sbb
bound
push
in
cmpsl
fdivrl
or
jns
xchg
add
add
mov
inc
sahf
in
cmp
and
rcr
ret
mov
xchg
add
push
imul
or
adc
dec
inc
sub
inc
scas
shrl
add
gs
insb
sbbb
ret
call
sub
mov
xchg
or
dec
cli
and
push
pop
push
sbb
ljmp
inc
rorb
dec
or
int3
push
cmp
pusha
push
ljmp
sbb
push
sbb
push
pusha
lea
and
pusha
mov
pop
push
pop
xchg
sbbl
sub
jb
inc
push
jne
or
stos
sbb
sahf
push
test
xchg
adc
and
out
jo
lcall
rorl
ret
out
and
addb
cltd
jae
or
xor
cwtl
add
sbb
xor
dec
cwtl
adc
lret
add
cmp
lahf
mov
mov
test
push
xchg
mov
scas
mov
sbb
test
jmp
jo
inc
pop
sbb
add
ret
xchg
push
push
fldl
sub
pushf
sub
movsbl
jns
psubsb
fnsave
or
and
and
or
leave
out
enter
sbb
rclb
fdivl
lock
leave
inc
cmpsb
dec
add
mov
icebp
es
dec
xor
cmp
or
inc
std
push
dec
lea
roll
add
dec
adc
pop
push
mov
ret
imul
push
pushf
clc
mov
rorb
mov
adc
ret
adc
add
sbb
dec
add
push
pcmpeqd
sbb
leave
test
xchg
sbb
add
sahf
cmp
mov
mov
pop
cltd
xchg
xlat
pop
jl
pop
pop
cmpl
xor
jmp
jo
test
addb
rclb
jbe
lret
lods
mov
pop
pop
adcl
cmpsb
adc
rcl
mov
mov
or
adc
adc
cmp
jo
je
mov
stos
jp
pushf
and
mov
rorb
hlt
arpl
inc
push
jo
mov
jb
jle
add
push
outsl
arpl
loope
pop
and
push
les
xchg
andl
xchg
or
and
mov
sbb
or
cmovae
pop
cmpsb
push
inc
je
ret
addr16
mov
mov
push
rolb
lahf
rorb
cmp
or
inc
inc
insb
cmp
clc
or
pop
or
adc
sbb
mov
pop
sbb
and
in
pop
adc
mov
lret
lods
test
dec
mov
mov
xor
adc
sahf
dec
mov
pop
inc
lods
pop
testb
pusha
push
js
ret
pop
pop
idivl
adc
xchg
push
hlt
icebp
push
fisubl
push
aam
adc
je
lea
or
test
pop
daa
cmpsb
jp
or
sbb
ret
movsl
das
jmp
rcrb
cs
pop
xor
xor
sub
xchg
mov
imul
xor
cmp
icebp
test
out
lret
mov
test
pushf
xor
stos
cmpsb
ljmp
mov
call
ret
lock
and
mov
shrb
xchg
lock
loopne
push
fistpl
popf
jb
push
int3
sbb
push
pop
xchg
orb
push
mov
xor
xor
gs
or
jmp
xchg
mov
pop
xchg
test
dec
dec
je
and
andl
dec
push
cmp
imul
mov
sbb
add
sub
adc
jo,pt
xchg
or
or
data16
and
andb
sub
sbb
fs
mov
negb
jecxz
shlb
in
or
mov
lods
or
mov
cmp
inc
push
add
cwtl
add
std
adc
lcall
jno
faddl
xorb
or
or
jns
xorl
pop
add
lock
cmpb
lret
cmp
push
mov
loopne
aam
add
orl
inc
or
mov
xchg
jp
mov
xor
shl
into
inc
jno
mov
sub
adc
xor
sbb
loop
fscale
sbb
shll
mov
sbb
rolb
inc
dec
mov
mov
loop
inc
test
int3
stc
sbb
sbb
mov
aaa
xchg
icebp
lds
into
adc
lret
call
ficompl
leave
dec
pusha
loope
adc
les
mov
addr16
cli
sbb
add
sarb
stos
xchg
cmp
mov
push
jb
jns
add
aad
inc
add
into
test
jp
imul
jbe
mov
pop
inc
push
inc
mov
and
push
or
pop
lods
rclb
sbb
cmp
lods
cltd
cli
sbb
push
inc
fs
mov
push
mov
xor
test
fcmovb
mov
pop
adc
adc
push
adc
sub
ds
push
add
sti
or
push
stos
push
or
jg
rol
in
push
ficompl
mov
hlt
add
icebp
call
movsb
sbb
ret
inc
and
dec
sub
xor
or
sub
cmp
and
loop
cmp
roll
leave
pop
mov
aaa
stos
inc
ret
push
js
mov
rolb
pop
out
sbb
pop
addb
js
mov
sbb
je
pop
rol
mov
add
mov
push
test
inc
xchg
mov
or
aam
push
out
pop
mov
or
push
xor
cli
shl
mov
stc
inc
add
out
pop
and
jb
pop
aas
xor
mov
cmp
sbb
adc
mov
add
and
xor
sub
out
mov
pop
sub
pusha
mov
adc
adc
mov
cmp
sub
enter
pop
adc
pop
and
or
cmpsl
inc
mov
mov
pusha
std
sarb
adc
xchg
les
inc
mov
fiaddl
push
mov
jb
sbbb
or
sbb
mov
outsb
jg
or
fcomip
inc
jne
cmpsl
pop
add
cld
inc
mov
push
xchg
push
push
xchg
outsb
fmull
or
icebp
popa
or
inc
mov
push
gs
xchg
inc
mov
push
ret
test
test
push
addr16
adc
sbb
mov
inc
loope
or
inc
mov
or
mov
pusha
enter
add
lds
cmpl
roll
scas
push
call
xchg
jge
jmp
or
mov
sbb
addl
jo
mov
icebp
test
sbb
hlt
mov
insb
pop
mov
add
into
popl
pop
fwait
inc
in
jge
add
sbb
or
mov
mov
call
mov
jno
test
imul
test
js
add
mov
sahf
cmp
adc
idiv
inc
loopne
push
cmpsl
sbb
push
in
xor
test
and
adc
pop
xor
cmpsl
xchg
push
shl
mov
add
adc
enter
sub
inc
icebp
or
adc
mov
pop
in
movsb
mov
mov
shlb
js
mov
pop
push
mov
adc
pop
int
dec
inc
mov
pop
push
into
cmp
dec
test
cmp
mov
shll
jae
xchg
cmp
sbb
or
je
or
cmp
mov
jnp
and
mov
add
sbb
cmc
mov
sub
sbb
roll
test
pop
cmp
mov
sbb
inc
leave
out
dec
xchg
bound
ja
pop
adc
push
not
push
les
je
push
or
inc
ror
gs
test
outsl
mov
rorb
mov
xchg
mov
push
pusha
sbb
ret
cmpsb
loop
jl
lock
cmc
sbbb
icebp
jb
pop
faddl
scas
xorb
jbe
cmc
repz
push
in
mov
jecxz
ljmp
nop
call
aad
or
adc
push
lret
pop
mov
add
addb
push
sbb
test
cli
push
mov
mov
enter
dec
dec
mov
adc
xor
jmp
adc
sbb
outsb
sbb
push
fcoml
adc
push
sahf
lcall
clc
push
movsb
pop
dec
out
in
push
jo
nop
sub
mov
loope
push
add
xchg
add
ret
and
push
xor
icebp
out
rolb
lods
cmp
push
mov
push
loop
pop
add
insl
rorl
jecxz
sub
lds
sbb
pushf
mov
addl
pushf
sarl
sbb
mov
pop
andb
and
add
dec
cltd
xchg
movl
pop
bswap
pop
dec
cmp
xor
imul
push
pop
push
inc
mov
mov
incb
xlat
loopne
sbb
or
imul
xchg
mov
or
les
pusha
xor
or
mov
or
push
addl
adc
add
jp
out
pop
and
jno
shlb
loop
sarb
add
xor
int3
call
nop
es
add
fld
sub
jno
ret
mov
push
jg
sbb
mov
jp
sub
and
push
in
sub
ret
push
mov
push
call
cmp
call
fdiv
add
inc
jnp
or
add
push
ja
hlt
add
jl
and
mov
pop
push
call
xor
lock
inc
mov
and
and
sbbb
pusha
adc
stos
pop
pop
adc
and
insl
subb
add
xchg
and
mov
sti
sbb
fidivl
les
or
sub
movsb
dec
inc
add
inc
loope
test
lods
mov
aad
test
pop
push
insb
sub
decb
push
ljmp
adc
inc
push
sub
sub
xchg
in
scas
push
pop
inc
dec
test
mov
pop
in
dec
mov
xor
es
and
lock
or
mov
stos
mov
inc
lods
loopne
mov
shrb
or
xor
leave
ret
mov
pushl
xor
movsb
mov
and
in
notb
push
mov
call
rorb
pushf
js
or
mov
or
or
sub
push
test
jne
xchg
mov
or
pushf
adc
xor
mov
fucomi
jbe
adc
pop
sbb
pop
clc
movlps
out
orb
popa
add
test
mov
movsb
pop
mov
push
push
mov
testb
je
mov
outsl
mov
push
pop
sbb
and
and
push
cs
ljmp
mov
inc
in
mov
mov
mov
push
xchg
fsubrp
aaa
das
push
fcomps
ret
mov
jne
push
jb
fucomip
sub
mov
jne
sbb
je
add
mov
idivl
fs
push
dec
das
and
test
and
mov
fcomip
mov
add
notb
or
push
add
in
cmp
add
ret
push
add
aaa
and
repnz
or
push
or
mov
pop
cmp
jne
sbb
in
adc
sub
mov
mov
enter
mov
jne
mov
and
lea
add
jb
push
pushf
iret
not
push
mov
cltd
sbb
iret
xlat
and
adc
sbb
in
std
std
test
pop
je
or
int3
repnz
add
adc
sbb
frstor
push
mov
enter
pop
lea
push
jo
push
sbb
push
or
jbe
or
adc
fcmovnu
es
je
outsb
mov
or
inc
xlat
sti
add
sbb
ret
jne
adc
add
loop
dec
push
int
push
mov
or
or
mov
ret
scas
enter
xchg
push
adc
daa
lea
movsb
jle
lahf
xchg
in
push
pop
fs
and
fbld
jl
mov
mov
cmp
outsl
movsb
or
inc
pop
orl
nop
jno
dec
cmp
xchg
in
nop
lahf
test
cmp
out
cmp
mov
jbe
push
rcrl
js
pop
jmp
call
decl
push
or
jmp
addr16
lods
mov
xor
leave
mov
push
popa
sub
push
cmp
push
sahf
je
lea
add
and
jae
cmp
jne
out
adc
cmp
sub
pop
mov
enter
mov
push
cmp
jne
mov
jmp
pop
je
test
dec
movzbl
das
sbb
mov
jmp
cmpb
or
jbe
inc
or
aad
in
and
xor
add
jmp
sti
push
xor
cmp
aas
cld
outsl
xchg
mov
ret
je
cmp
je
inc
out
and
lea
add
add
adc
in
jmp
cmp
mov
lods
sbb
outsl
std
mov
idivb
je
push
push
cmp
aas
dec
and
mov
arpl
ret
das
push
cs
mov
and
bound
std
aaa
jne
pop
incl
fldcw
sbb
ss
adc
movl
pop
jb
mov
push
push
aaa
mov
clc
mov
in
test
dec
mov
mov
push
add
push
push
push
lahf
ret
mov
notb
cli
mov
xchg
fmuls
dec
mov
das
insl
daa
and
push
push
xor
jl
mov
pop
movsb
pushf
hlt
mov
insl
fwait
dec
sbb
es
jne
push
push
or
jge
movl
sarb
jle
aaa
add
mov
fwait
jnp
test
mov
inc
cmp
sub
addb
outsl
jl
roll
add
mov
inc
inc
or
sbb
or
andb
inc
inc
insl
mov
add
sti
mov
sbbl
mov
inc
and
jecxz
lods
or
or
jne
dec
mov
rclb
jmp
jmp
int3
loopne
sub
testb
mov
enter
adc
add
sarb
test
pop
jne
inc
inc
jmp
xchg
sub
inc
mov
xchg
inc
cmp
or
lea
sbb
or
sbb
fcmovnb
mov
dec
test
push
inc
mov
jne
andb
out
lock
pop
je
popa
ret
sub
loop
pop
sbb
inc
cmp
inc
add
adc
adc
xor
push
mov
mov
mov
add
mov
pop
sti
mov
inc
jecxz
ret
dec
and
sub
xor
rcr
rol
mov
test
add
dec
repz
bound
jmp
pop
inc
addr16
mov
sti
pop
ljmp
loop
mov
fwait
insl
inc
or
daa
ret
push
jae
int
outsb
jmp
inc
or
jne
push
in
mov
or
clc
mov
pop
dec
pop
cli
pop
add
xlat
xor
xor
shr
adc
je
sbb
push
shll
lea
or
daa
clc
xchg
jo
pop
or
ret
jmp
xchg
mov
dec
movsl
test
movsl
cmp
mov
je
inc
cmp
add
push
pop
shlb
inc
push
into
stos
sti
in
pusha
jmp
lds
sub
cmp
cmp
dec
jae
mov
in
dec
push
imul
lock
cli
pop
pop
loopne
loopne
lea
outsb
ret
jae
outsl
add
andl
mov
add
and
pop
jmp
sbb
mov
sar
dec
cmp
in
or
cmp
xchg
xchg
mov
add
push
clc
jl
xchg
jne
daa
pop
addr16
mov
lods
flds
push
cmp
xorl
subb
sbb
pusha
or
mov
in
dec
adc
and
roll
inc
and
mov
push
mov
adc
jle
lock
cmp
adc
lcall
push
and
pop
push
mov
adc
rcl
pop
or
pop
scas
insl
jnp
movsb
rolb
pop
mov
mov
or
inc
cmp
jl
pusha
mov
filds
cmp
decl
ss
mov
push
das
enter
jmp
ret
dec
in
test
or
or
mov
cmp
pop
push
jo
and
rorb
in
orb
or
jne
loopne
jbe
or
add
addb
jl
loope
mov
dec
ret
pop
test
imul
adc
mov
test
je
je
and
sbb
sub
sbb
sbb
mov
mov
pop
pushl
mov
addl
mov
add
movsb
xor
adc
mov
cmp
stos
mov
xchg
jne
mov
es
sbb
push
pop
adc
cwtl
dec
pop
fs
jge
push
in
add
loop
scas
mov
xlat
repnz
pop
enter
sub
popa
pop
enter
ss
int3
int3
mov
leave
xor
iret
pop
mov
ds
jp
sub
testl
xchg
test
or
mov
sub
ds
mov
incb
data16
sbb
adc
mov
mov
sub
jbe
rcrb
and
pop
jl
jne
mov
jp
adc
sub
call
into
hlt
jle
ret
popl
fs
jmp
cmpl
mov
sbb
push
or
push
xchg
sbb
pop
jecxz
add
or
dec
mov
or
scas
imul
ret
push
inc
pop
js
std
xor
pop
inc
xor
mov
or
pop
mov
cwtl
testl
add
adc
popa
stc
ds
ja
and
or
popa
xchg
jbe
inc
push
push
lea
test
pop
pop
inc
or
inc
fisttpll
mov
js
and
add
mov
jne
push
or
or
outsl
xlat
insl
lahf
insb
fimuls
or
or
ja
idivl
sbb
mov
jmp
pop
and
pop
stos
fnstcw
pop
push
xchg
outsb
mov
mov
mov
push
add
push
push
dec
jne
and
mov
xchg
js
sub
adc
dec
mov
pusha
in
call
sbb
call
test
or
leave
mov
pop
push
inc
ret
push
test
icebp
out
ficomps
icebp
shl
cmp
insb
es
fstps
cwtl
call
jnp
adc
test
jne
icebp
std
test
lcall
into
insb
xor
adc
push
inc
in
mov
add
mov
mov
cmp
sub
push
mov
clc
or
add
mov
loopne
cltd
cs
push
pusha
pushl
jbe
cmp
adc
cmp
ss
pop
rclb
mov
sbb
adc
mov
and
aaa
pop
mov
adc
mov
imul
or
enter
cmpsl
jg
pop
addr16
mov
std
dec
inc
jl
push
in
call
pop
fmull
lods
push
mov
cs
cs
imul
aas
jne
push
push
pop
clc
call
pop
ja
es
scas
cmpl
or
outsb
jl
stos
ficoml
adc
sbb
pusha
or
pusha
call
add
push
mov
cwtl
mov
les
mov
jne
fwait
jno
psraw
adc
and
add
add
inc
sbb
xchg
inc
sbb
mov
xchg
push
lods
or
cwtl
pop
pop
sub
jmp
push
mov
pop
push
jo
sbb
inc
popf
roll
call
fisubrs
pop
cmp
popa
and
andl
jmp
cmp
rep
stos
mov
xchg
cmpsl
jecxz
jmp
cmpb
mov
sbb
arpl
cmp
jbe
inc
decl
sub
repnz
outsb
mov
dec
lea
mov
add
lea
dec
je
mov
mov
leave
mov
xchg
ja
mov
mov
inc
inc
push
fists
jbe
inc
inc
cmpb
aam
push
ret
daa
or
fcomps
lock
pxor
push
lods
lods
push
mov
push
imul
mov
movsl
movsl
pop
mov
inc
jns
jno
lods
andb
inc
cmp
xchg
jb
push
cmp
dec
jmp
jbe
push
jmp
or
add
sbb
je
push
jo
inc
xchg
cs
add
push
pusha
cmp
jmp
push
in
jno
or
or
mull
cmp
test
call
insl
mov
mov
cmp
or
pop
dec
sub
xchg
sub
pop
xchg
sbb
mov
push
mov
add
add
ret
adc
shlb
inc
pop
add
in
pop
movsl
mov
adc
icebp
lea
arpl
push
push
aas
or
dec
mov
stos
add
mov
movb
or
js
push
repz
mov
lea
mov
mov
or
shr
test
and
rep
inc
inc
mov
xor
shlb
pop
push
in
cli
mov
lds
push
mov
cmp
std
sbb
lods
fs
and
lret
pop
data16
push
daa
jb
lret
cld
ja
lea
mov
test
push
add
mov
adc
or
je
and
test
sbb
inc
add
jbe
fiaddl
sbb
mov
in
in
test
xor
sbb
shl
in
ja
and
and
dec
inc
add
dec
mov
hlt
jecxz
push
inc
in
lds
mov
cmp
shl
push
mov
push
adc
or
sbb
fimull
pop
push
imul
fnstenv
sbb
add
jg
push
fbld
push
movsb
and
pushl
test
add
add
cmp
jne
add
decb
jle
lock
ja
jl
popa
test
call
test
ja
xchg
loope
sbb
add
int
lret
add
jmp
std
jmp
cld
dec
pop
xorl
pop
sbb
inc
ljmp
pop
inc
out
jmp
mov
jecxz
test
outsb
imul
test
daa
test
sbb
arpl
cmp
adc
icebp
or
mov
subb
add
jg
mov
clc
sub
icebp
loopne
and
add
push
insl
js
dec
jne
aam
inc
cwtl
sahf
adcl
fisubs
push
or
xor
test
addb
push
je
fsubs
insl
add
insb
orb
out
test
dec
js
pop
xchg
mov
nop
xchg
adc
and
mov
adc
inc
mov
ret
or
mov
cld
jle
push
push
jne
dec
rolb
inc
jbe
fldt
jbe
clc
jb
mov
and
sub
rep
jmp
fisubl
js
mov
jge
mov
push
repz
enter
jne
imul
or
adc
add
lock
mov
mov
mov
push
inc
xor
or
pop
int3
lea
sub
add
add
nop
and
inc
aas
mov
jne
push
outsl
add
dec
inc
int
shll
xor
mov
mov
call
call
shll
clc
cld
sub
je
adc
ds
or
lock
pushf
mov
pop
pop
int
popf
or
sbb
or
adc
or
or
jl
cld
jg
or
std
jecxz
ja
adc
fldenv
in
fsubl
dec
stc
sub
sbb
and
add
mov
add
outsl
add
dec
push
inc
mov
nop
mov
pop
mov
out
add
add
mov
daa
and
sub
scas
scas
inc
pop
lea
xor
mov
les
int3
aam
rcl
xor
and
xchg
sbb
shll
adc
xor
shll
or
or
ja
dec
roll
pop
add
and
sub
dec
mov
add
mov
xchg
orl
pusha
or
mov
mov
scas
push
pop
or
imul
fisttpll
jmp
xor
adc
push
mov
sub
push
add
cmp
push
mov
pop
js
insl
mov
sbb
push
lea
add
jmp
jmp
pop
das
dec
jge
pop
mov
xchg
sub
mov
mov
fcmovne
sbb
adc
sbb
rolb
addr16
aad
mov
pop
push
or
popa
jb
push
fistl
jmp
imul
sub
add
rcrl
fdivl
pop
add
push
shr
outsl
fadd
outsl
cmpl
leave
add
dec
mov
mov
inc
das
sub
inc
dec
dec
or
imul
movsl
ljmp
jg
push
aas
dec
pop
or
cmp
jbe
int
adc
add
nop
fidivs
mov
xor
out
int3
sbb
and
loopne
loope
decb
sub
cmp
and
loopne
out
int3
add
les
and
outsb
mov
push
adc
adc
clc
outsb
jnp
add
add
or
sar
mov
lods
aas
jnp
pop
das
mov
mov
in
fisubs
pop
jae
mov
pop
cmp
cmpsb
jbe
jg
imul
inc
sbb
inc
ds
jbe
aad
sbb
cs
push
mov
push
mov
push
pop
mov
and
mov
jl
and
mov
dec
mov
adc
jmp
stc
push
sbb
lea
lods
mov
mov
push
add
or
add
movsl
jbe
inc
xchg
inc
mov
jae
mov
mov
push
mov
jmp
or
or
lea
sbb
sub
dec
loopne
cmp
sub
pop
add
popf
test
or
mov
sbb
push
stos
in
cli
dec
mov
xor
or
inc
mov
shl
add
push
andb
push
push
test
in
push
call
pop
xor
push
or
cmp
andl
push
paddd
or
jns
mov
andl
adc
mov
pushl
pop
adc
adc
popa
test
or
jmp
mov
fdiv
add
xchg
lret
enter
cli
out
lods
dec
adc
push
lea
push
push
push
lcall
and
stos
adc
mov
lods
mov
sub
das
push
fdivrl
sub
dec
pop
jbe
pop
jo
cmp
push
xor
push
xor
out
cmpl
mov
jmp
shlb
shr
cmp
loope
adc
mov
cmp
pushl
sbb
sub
decb
iret
jne
add
cmp
sbb
pop
jne
mov
cmp
es
add
pop
and
in
fadd
test
or
adc
jmp
out
sbb
das
out
stos
xchg
jo
shrb
sar
push
push
test
sub
fcoml
sub
jmp
sti
sub
jmp
adc
push
je
sub
mov
mov
aaa
mov
jo
push
jge
add
or
mov
push
sub
xchg
sbb
mov
in
mov
and
or
je
mov
lret
pop
ja
mov
push
into
jne
pushw
xlat
insl
idivl
test
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
pop
js
icebp
jnp
incb
cwtl
aas
jle
pop
xchg
int3
lea
fwait
or
shlb
adc
mov
cmp
inc
mov
shlb
jne
call
xor
push
mov
mov
in
and
sub
cwtl
sub
dec
into
push
test
or
jp
clc
add
pop
fwait
pop
xchg
scas
jp
nop
test
test
movsl
and
mov
and
fs
decb
insl
out
movsl
sarb
les
bound
mov
mov
cmp
test
das
sub
mov
mov
lods
push
mov
out
or
push
je
mov
mov
sub
mov
loope
push
insl
ret
outsl
add
xor
lahf
mov
and
mov
xorb
mov
dec
cmp
mov
add
add
insb
shll
and
movl
mov
pop
xchg
push
push
test
dec
xchg
cwtl
cmp
je
pushf
loope
lds
cmp
loopne
mov
xor
adc
notb
adc
sbb
or
pushl
fs
imul
jo
jl
and
mov
add
add
cs
sbb
mov
rcrl
enter
fcmovnb
dec
loopne
insb
jge
push
sbbl
bound
add
outsb
or
sti
test
out
jns
add
adc
leave
mov
lea
pop
fidivrl
ja
lea
dec
repnz
hlt
lea
cld
lock
fsubp
jle
push
out
jmp
call
ja
or
jbe
cmovg
clc
xchg
mov
mov
or
inc
mov
mov
enter
clc
push
ja
mov
cmpsb
or
mov
pop
add
pop
sahf
push
adc
icebp
cmp
and
mov
dec
dec
pushf
push
and
popa
inc
push
cmpsb
xor
je
adc
test
mov
dec
mov
mov
cmp
add
pop
sbbb
jnp
jbe
mov
ror
add
push
xchg
jp
push
mov
jne
sbb
aad
imull
push
and
jno
mov
outsl
jmp
inc
inc
mov
add
icebp
je
adc
pop
jne
sub
sbb
je
and
sub
xor
ret
adc
dec
pop
je
cmp
cmp
sbb
cli
testb
arpl
and
scas
lcall
lret
jb
sub
or
shll
jmp
and
insl
sub
xor
push
icebp
push
or
insb
idivl
jne
mov
test
bound
clc
pop
adc
inc
push
push
mov
pop
push
xor
push
in
popa
cmp
and
les
and
sbb
or
dec
push
jo
adc
adc
sarb
xor
out
pop
pop
call
int3
jo
sbb
lods
loope
popw
popa
sti
mov
jmp
inc
and
insw
jnp
mov
mov
mov
loopne
inc
push
aaa
and
cmp
movsb
mov
fiaddl
ret
add
add
adc
sub
mov
mov
xlat
adc
adc
mov
es
lods
lea
mov
fdivl
push
dec
fsubl
jmp
mov
push
hlt
dec
in
sbb
mov
lret
movsl
lods
mov
dec
divl
shlb
je
ds
mov
imul
fst
jg
fidivl
dec
rcrb
mov
gs
jmp
or
lret
add
repnz
mov
pop
imull
jge
je
push
fs
je
mov
in
out
mov
add
jmp
mov
push
or
aad
mov
loope
mov
xlat
sub
fimuls
decl
stos
pop
mov
icebp
dec
xchg
insb
outsb
mov
sub
add
adc
gs
pop
sbb
push
rcrb
mov
lods
cmpb
inc
in
push
pop
push
push
movsl
mov
in
outsl
add
push
ficomps
add
pop
mov
ds
add
sbb
xor
push
int3
mov
lahf
xchg
pop
sbb
subb
pop
loopne
fsubrs
fcoml
arpl
cmp
sub
xor
xchg
mov
sbb
pop
add
xor
push
sub
push
pop
jnp
fs
sbb
push
clc
xlat
and
pop
inc
xchg
mov
add
int3
in
xchg
mov
or
sbb
and
popa
add
xlat
divb
mov
stc
add
hlt
and
flds
insl
push
mov
add
and
loopne
roll
lret
cmpsb
jmp
test
stos
cmp
and
mov
mov
add
xor
dec
inc
xor
divl
nop
add
add
add
pop
sub
aas
push
das
add
jne
rcll
add
cld
add
xchg
and
or
dec
sarl
pop
jo
nop
add
sbbb
adc
or
or
in
inc
je
xor
jb
rcrb
shll
test
mov
xor
mov
mov
pop
add
adcb
clc
aaa
or
orb
nop
lahf
push
cmp
pop
shll
sub
add
jae
sub
push
xchg
or
loope
stos
sub
cmp
movb
inc
inc
inc
je
lock
inc
inc
inc
inc
fsub
loopne
pushf
inc
inc
inc
or
rolb
add
out
inc
data16
cmp
jne
je
insl
gs
and
jb
jb
dec
or
push
push
adc
add
outsl
push
add
dec
inc
add
inc
adc
jne,pn
adc
xor
or
mov
je
and
imul
push
gs
jo
daa
aaa
outsb
outsl
je
add
ja
jg
addr16
arpl
data16
outsl
ja
cmp
push
outsl
outsb
aaa
divb
nop
cmp
je
xor
sti
insl
lods
std
jbe
jb
jne
xor
or
and
insb
sub
pop
pop
jnp
mov
das
pop
push
fsub
jae
fmul
pop
xor
imull
gs
xor
mov
ja
outsl
pcmpgtb
arpl
cmp
ss
and
gs
xchg
outsl
and
aaa
insl
jne
leave
mov
fsubrs
outsl
arpl
mov
sbb
xor
ret
lods
xor
add
sub
jo
addr16
insl
and
ss
testb
cmp
jae
inc
xor
sub
cs
imull
in
popa
jb
jne
jae
mov
jnp
xor
shrw
subb
pop
fildl
out
dec
loope
mov
adc
jae
ja
xor
inc
sub
and
dec
imul
xchg
fmull
sub
adc
mov
into
aam
ret
add
loopne
sub
insb
ja
sbb
ja
cld
inc
gs
popa
xor
jbe
push
scas
jne
insl
addr16
adc
push
xchg
fs
pop
clc
jmp
jae
addr16
outsl
js
add
and
sub
xor
add
or
add
sbb
and
and
shll
cli
pop
stos
cmp
add
arpl
ja
bound
mov
or
or
or
lea
fs
or
fs
xchg
xchg
lcall
pop
js
in
nop
scas
xchg
or
lret
xchg
xchg
aaa
jl
adc
and
sahf
cmp
add
or
or
repnz
xchg
adc
adc
cmp
dec
sbb
sbb
sbb
sbb
push
js
jns
sahf
cmp
xor
cld
sbb
or
pop
or
xchg
push
loopne
push
adc
push
or
sub
pop
enter
add
add
das
movsb
add
jns
and
fbld
cld
inc
jle
fdivs
iret
cmp
shll
or
incb
inc
mov
stc
mov
pop
iret
mov
in
call
stc
or
push
add
pop
mov
fisubrl
xor
fcomp
loopne
cmp
jle
jnp
cmp
add
inc
es
xor
sub
inc
es
pop
dec
add
test
nop
or
adc
add
addb
sub
xor
cmp
lea
sub
or
sbb
or
inc
adc
dec
call
popa
jo
insb
insb
outsl
arpl
dec
outsl
fs
gs
add
mov
popa
outsb
fs
popa
xor
jle
dec
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aas
or
lods
stos
add
andl
mov
cmp
pop
gs
mov
xchg
adc
jne
jb
outsb
and
outsb
push
sbb
jo
inc
inc
imul
mov
gs
popa
insl
imul
inc
mov
or
sbbl
sbb
imul
orb
jns
pop
test
push
pop
inc
push
jne
adc
bound
push
jns
gs
clc
add
js
fs
insb
jae
adc
inc
push
popa
insb
jne
or
jbe
ret
inc
and
outsl
jns
and
insb
or
mov
clc
insb
or
insb
sub
imul
cltd
je
adc
scas
or
imul
xchg
sbb
outsb
inc
adc
xchg
sub
or
push
imul
dec
inc
dec
or
add
xor
inc
fs
add
or
dec
outsl
repz
xchg
jb
xchg
test
inc
pop
inc
or
push
dec
or
seto
push
dec
inc
testb
add
sti
or
push
dec
outsb
jge
js
xchg
xor
call
daa
imul
mov
cmp
and
sub
outsb
sbb
sbb
xor
add
inc
rcrb
jno
jae
push
xlat
faddl
je
mov
outsb
add
pushf
sti
cmovns
outsl
outsl
je
mov
cmp
cs
jmp
ja
mov
add
cli
pop
and
jne
jns
arpl
jns
cmp
mov
lock
add
add
addl
add
add
outsl
push
or
dec
jg
lock
add
add
add
add
add
add
adc
mov
lock
mov
inc
add
out
mov
add
adc
add
add
add
fistpl
adc
mov
add
inc
lock
push
mov
insl
fstpt
add
xchg
add
outsl
mov
dec
lcall
xor
stos
add
add
das
adc
in
cmp
dec
mov
mov
jno
jg
jbe
mov
ja
add
mov
lock
add
insl
jnp
mov
jno
rorl
mov
out
inc
aas
pop
pop
sahf
dec
dec
mov
mov
lahf
cltd
inc
add
jae
adc
lock
push
or
je
push
lock
jb
lock
sub
jg
pop
inc
aaa
add
add
lock
add
dec
add
adc
add
jl
stos
aad
loopne
std
call
push
cmp
lock
insl
dec
xchg
mov
test
sub
mov
ret
aaa
dec
add
add
jb
out
repnz
dec
dec
xor
push
test
xor
add
add
add
mov
dec
int
fcomi
fistpll
lock
add
sub
add
fldt
push
add
mov
lds
adc
insl
jmp
insb
rclb
or
pushl
out
roll
movsl
int
lcall
dec
dec
fldl
pop
jg
or
xchg
add
addl
pop
sub
setbe
inc
jns
sbb
add
add
inc
loop
fcomip
xor
dec
mov
filds
scas
mov
je
and
mov
pop
lock
sbb
push
lock
mov
inc
jmp
mov
mov
in
gs
xchg
jl
out
jo
inc
mov
or
fistl
out
lret
ds
lock
mov
addl
inc
test
xchg
mov
sti
mov
fmul
jl
ss
push
jge
sbb
push
push
xor
mov
mov
sub
sar
ja
std
add
add
pop
xor
ret
mov
ja
add
int3
decl
clc
test
mov
lock
iret
jle
outsb
add
mov
jbe
stc
add
pop
sbb
out
cwtl
or
repz
xor
ss
xchg
int3
or
cmp
ret
mov
das
cld
add
or
or
xor
or
cmp
adc
push
pop
or
or
push
push
push
test
cmovl
xor
inc
or
adc
or
loope
pop
pop
xchg
jecxz
xor
aas
push
adc
xor
pop
adc
fbstp
push
xor
adc
add
inc
or
adc
sbb
fistpl
adc
sbb
sbb
ret
movlps
or
inc
adc
or
adc
push
and
adc
sub
xor
mov
or
adc
and
and
mov
pop
adc
or
in
fistpl
sub
add
push
outsl
mov
adc
xchg
adc
or
push
movups
cmovae
push
ret
sbb
scas
add
sub
sbb
out
flds
add
dec
push
add
or
pop
push
sbb
notb
jb
push
or
jecxz
xor
or
mov
pop
pop
add
push
sbb
adc
or
fimuls
std
jno
inc
cmpsb
lock
add
adc
test
ficomps
adc
sbb
adc
or
ret
adc
sbb
pop
mov
sbb
sbb
pop
push
xor
xchg
sbb
pop
adc
sti
push
adc
rcrl
add
add
lods
or
or
mov
ljmp
and
adc
test
add
push
inc
bound
or
cld
add
jbe
ret
aam
inc
les
in
cmp
sub
imul
push
add
push
aaa
jnp
or
add
mov
adc
jmp
in
mov
sub
pop
push
mov
fs
add
js
add
rolb
lods
inc
decb
add
movsb
or
les
cmpsl
cld
push
sbb
fcoms
fs
aaa
jmp
and
js
cmpsb
pusha
jb,pn
or
imul
or
cmp
divl
es
pusha
daa
cltd
aas
and
jb,pn
jb
add
jmp
dec
or
pop
sub
or
or
inc
sbb
push
add
pop
imul
sbb
mov
add
add
add
add
inc
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
